sbb
add
mov
mov
cmp
cmps
mov
adc
and
mov
cmps
retf
sysret
idiv
faddp
sbb
lds
lods
lock
cld
enter
push
adc
pop
out
sbb
out
inc
mov
mov
sub
loopne
cmps
mov
(bad)
jp
mov
or
int3
dec
jbe
nop
rcl
mov
(bad)
je
cmp
mov
pop
(bad)
jge
icebp
push
outs
lds
adc
inc
mov
push
mov
dec
push
adc
lds
retf
dec
test
push
pop
cmp
fwait
cmp
xchg
imul
push
and
jle
mov
inc
push
cwde
call
repz
and
jmp
je
fst
enterw
push
dec
dec
push
xor
jle
pop
jg
sub
sbb
add
fsubr
cmc
inc
arpl
fucomip
cmp
ins
sbb
push
cmps
icebp
or
mov
inc
pushf
or
xor
jecxz
push
outs
jb
jno
inc
lods
jo
mov
test
sub
int
stos
pop
cwde
call
loop
inc
aas
(bad)
ins
inc
out
jno
fstp
adc
inc
mov
stc
and
cld
test
outs
cmp
xor
in
mov
(bad)
adc
cs
arpl
in
stos
xlat
test
fwait
pop
mov
mov
pusha
bound
xchg
ret
mov
dec
add
ds
xchg
ret
mov
nop
mov
xlat
mov
fmul
mov
shr
sub
cmp
lods
inc
ror
outs
cmps
mov
aam
dec
enter
and
jno
xchg
push
xchg
jp
pop
adc
leave
repz
push
(bad)
icebp
or
add
inc
or
clc
sbb
lahf
test
(bad)
mov
sub
mov
inc
xlat
loopne
pop
sar
pop
iret
loope
mov
jo
inc
sar
ror
retf
(bad)
cmps
inc
sbb
sbb
int
(bad)
jecxz
pop
dec
adc
xor
gs
dec
push
lds
test
push
or
pop
xor
push
mov
xor
jmp
add
int3
jno
bound
push
dec
or
push
pop
pop
xchg
mov
pop
(bad)
call
and
std
lds
pop
dec
pop
fsubr
cmp
or
push
ficomp
outs
cwde
fcomp
mov
das
push
imul
jmp
stos
lea
js
pop
mov
pop
cs
les
mov
push
and
das
fiadd
mov
sti
shl
inc
xor
scas
test
outs
sub
jno
inc
lods
stc
hlt
adc
sub
adc
mov
xor
stos
or
adc
push
add
arpl
pusha
outs
sti
or
mov
pop
int
mov
lods
xchg
xor
sub
fcmovne
bound
leave
fmulp
test
fsub
sbb
jle
pop
mov
rcl
push
pop
cmc
pop
mov
jp
mov
nop
test
ja
arpl
fsubr
out
fsub
in
mov
out
in
dec
adc
lock
cmps
pop
sti
fisttp
xor
xchg
dec
jns
call
cmp
xor
adc
out
xchg
inc
jae
and
iret
mov
sub
pop
push
stc
aad
ins
inc
cmp
jne
mov
push
and
out
or
mov
sub
dec
and
ja
stos
push
call
lea
dec
stc
retf
lods
xor
fcomp
sahf
addr16
mov
sbb
xchg
ja
or
outs
add
pop
or
mov
cmp
loope
cli
and
sub
test
lock
pop
adc
or
push
mov
add
or
and
dec
pop
(bad)
ds
adc
adc
inc
xchg
mov
mov
mov
xchg
cmps
mov
pop
out
es
xor
pop
out
or
popa
pop
jecxz
pushf
adc
repz
popa
ins
push
xor
cmp
scas
sbb
adc
and
pusha
jnp
push
xchg
xor
ins
(bad)
sub
dec
sub
cmp
pop
jne
jmp
leave
cmp
jmp
xor
jg
mov
out
shr
sbb
dec
sub
in
ds
fild
cmp
add
or
xor
aad
(bad)
addr16
in
pop
mov
pusha
cmps
and
and
pop
loopne
jle
pop
dec
jp
and
(bad)
xchg
mov
rol
into
int
sti
sbb
outs
xor
movs
push
sub
leave
adc
(bad)
stc
aam
nop
loopne
movs
add
mov
sbb
icebp
pushf
retf
jle
inc
push
in
add
sbb
jmp
add
je
imul
(bad)
xchg
cmc
pop
shr
cmp
adc
mov
or
mov
call
das
lea
xor
add
or
dec
dec
or
cld
cld
jb
je
push
mov
push
movs
std
addr16
jne
stc
xchg
sbb
cmp
cmps
fisub
lea
loop
fmul
call
ret
pusha
push
jle
mov
imul
pusha
cli
stos
movs
aaa
das
cmp
ret
inc
cli
popf
mov
dec
push
jge
mov
sub
pop
(bad)
jae
(bad)
cmp
mov
jle
stc
fadd
jbe
std
pop
movs
inc
stos
adc
dec
dec
test
or
sub
sub
and
mov
xchg
jle
xlat
jge
mov
ficomp
dec
movs
sub
mov
cmp
sub
sbb
sbb
ins
mov
push
mov
add
mov
mov
sbb
fild
adc
jbe
pop
jle
jmp
sub
rol
stos
mov
sbb
mov
call
mov
fcmovnu
mov
pop
xchg
push
sahf
or
sti
xchg
mov
fdivr
mov
cmc
jne
gs
add
bound
add
loopne
cmps
mov
aad
xor
xchg
inc
sbb
in
mov
jne
jns
push
inc
add
sub
xchg
(bad)
push
sbb
enter
ss
pop
hlt
mov
ins
out
int3
sub
pop
and
add
jns
cdq
adc
xchg
push
mov
test
xchg
(bad)
cdq
daa
cld
lock
cmp
into
mov
movs
test
push
mov
adc
ds
(bad)
jle
dec
in
aam
neg
push
xchg
cmps
leave
call
or
leave
aam
cmps
clc
inc
pop
(bad)
int
adc
fs
cmc
icebp
pop
adc
sbb
dec
fwait
cmp
dec
lods
rol
stos
mov
(bad)
xor
loopne
cwde
ds
inc
pop
retf
pop
adc
(bad)
dec
xor
cdq
pop
shr
fst
in
add
and
mov
inc
mov
imul
mov
popf
fsubr
call
mov
outs
mov
or
dec
pop
cdq
pop
test
and
stos
mov
mov
xchg
lds
arpl
fwait
cmp
jmp
mov
pop
cld
aam
push
fimul
or
test
push
aas
xor
mov
xlat
xchg
stc
cdq
pushf
or
mov
jle
or
xchg
mov
pop
mov
unpcklps
retf
xlat
rcl
and
fmul
data16
mov
push
dec
rcl
arpl
sub
mov
adc
mov
arpl
mov
jmp
fist
ins
aad
jbe
xor
in
int
pop
inc
cmp
lea
sti
ins
push
add
cmp
addr16
in
jge
jmp
addr16
fistp
add
fstp
jns
sbb
into
lock
sub
lods
inc
fadd
pop
pop
(bad)
or
lock
aad
mov
loope
xchg
jmp
mov
and
stos
add
movs
jae
or
(bad)
pop
pop
cmp
test
xlat
lods
pop
pop
jle
imul
xlat
xchg
ins
cdq
xor
cmp
popf
movs
jnp
ss
movs
fdivr
ins
imul
inc
ficom
push
jg
inc
push
lahf
or
rol
sub
pop
pop
rcl
in
push
push
jmp
ror
clc
fs
inc
imul
ins
adc
jge
mov
add
sub
call
nop
outs
sti
outs
sub
loop
mov
std
dec
pop
leave
pop
mov
hlt
cs
inc
stos
mov
mov
shr
sbb
cmp
jg
sar
cmp
sbb
popa
int3
pop
(bad)
xor
dec
ficomp
nop
sbb
(bad)
rcl
jns
repz
scas
or
mov
jmp
call
push
xor
bound
adc
add
(bad)
xor
mov
pop
ja
ins
xchg
into
sbb
out
repz
push
mov
movs
fist
lahf
cmp
cmps
xchg
fadd
push
jno
push
mov
inc
mov
push
adc
das
mov
out
xchg
cs
xchg
sar
mov
mov
and
fcmovbe
sub
pop
fimul
ret
iret
test
rol
lahf
add
pop
dec
or
js
pop
test
inc
or
jae
cmp
or
js
call
pop
outs
repnz
pop
jo
mov
(bad)
dec
js
push
test
mov
mov
add
idiv
jb
pop
ins
xor
dec
dec
pop
hlt
sar
fcomp
in
sub
sub
cs
mov
and
or
and
das
mov
xor
add
ror
dec
out
js
mov
mov
pop
out
stc
or
sar
mov
inc
xor
movs
pusha
and
je
or
adc
pop
inc
jno
aam
mov
dec
inc
dec
inc
retf
cdq
xchg
sub
inc
or
jnp
std
retf
(bad)
stos
ror
and
scas
nop
push
cld
pop
inc
ret
movs
cmp
ins
push
jns
mov
stos
mov
add
dec
loop
inc
xchg
(bad)
in
test
test
and
mov
test
cld
pop
lds
jmp
sahf
loop
(bad)
idiv
test
jno
repnz
jmp
xor
stos
jnp
aas
js
xchg
sub
or
cmps
ins
adc
jge
hlt
adc
push
sub
push
mov
mov
jecxz
adc
dec
push
cwde
rcr
mov
ja
rcl
loope
out
sbb
and
arpl
push
mov
jno
fxch
imul
(bad)
cmp
inc
cmp
addr16
or
fidiv
push
jae
jge
xor
adc
push
jbe
std
push
push
adc
sub
cmp
cld
cmp
je
pop
xchg
ins
cmp
fld
cmp
movs
(bad)
mov
cmp
sub
mov
std
jecxz
mov
push
mov
mov
mov
xor
mov
cmp
sti
xor
mov
mov
dec
outs
adc
mov
pop
inc
inc
push
repz
not
jne
mov
in
xchg
call
ret
(bad)
fidiv
aaa
mov
repnz
inc
daa
out
lea
rol
stos
mov
lahf
(bad)
enter
cdq
dec
es
or
xchg
adc
mov
sbb
pushf
fcom
(bad)
cmp
(bad)
ds
mov
retf
in
ja
mov
addr16
js
sub
enter
cmp
js
mov
sub
mov
ins
jmp
sub
daa
push
into
and
jle
loopne
xor
xor
mov
pop
shl
arpl
push
xor
mov
and
sub
jmp
(bad)
fldenv
pusha
sti
lds
adc
data16
jmp
mov
adc
pop
jo
hlt
xor
into
les
(bad)
mov
mov
(bad)
mov
sub
shr
cmp
mov
jmp
cwde
sub
test
cmp
pop
shr
int
inc
dec
xor
(bad)
popa
sti
(bad)
je
into
leave
and
add
fucom
xchg
leave
cwde
jb
jns
aas
dec
loop
or
jns
aad
push
sbb
sub
loop
add
jmp
xor
nop
(bad)
rol
std
and
add
es
dec
sbb
int
mov
ss
pop
rcl
fistp
or
or
adc
ja
test
pop
sub
mov
jnp
and
inc
(bad)
out
sahf
xor
scas
jl
mov
mov
sub
gs
cmp
stos
cmp
test
add
sub
pop
sub
rol
jmp
iret
call
iret
jbe
rcr
dec
int
aad
adc
scas
and
jae
jno
jmp
push
rol
mov
mov
loop
mov
xchg
cmp
test
adc
in
push
mov
add
inc
(bad)
cmc
inc
mov
push
movs
mov
iret
sbb
out
es
in
shufps
push
iret
inc
xor
inc
sbb
xor
scas
push
sbb
icebp
mov
mov
inc
push
push
dec
jp
dec
stos
mov
or
push
push
sbb
xchg
adc
pop
inc
add
mov
test
std
jno
cmp
or
xor
push
push
and
and
add
xchg
int3
sub
cmps
sub
ret
sbb
push
retf
leave
lods
or
lods
mov
xor
push
cld
xchg
mov
cmps
pop
dec
out
ss
cmp
adc
lods
and
call
loop
push
cs
movs
dec
clc
cwde
xchg
pop
dec
pop
mov
jb
mov
mov
inc
outs
xor
das
cmc
and
ds
aaa
mov
pop
out
int3
mov
dec
xchg
jno
repnz
add
jb
or
inc
and
mov
fwait
pop
stos
mov
push
test
sti
out
inc
leave
in
push
xchg
stc
mov
jp
scas
mov
pop
stos
add
ror
xchg
jp
into
mov
add
(bad)
push
sbb
les
loop
inc
mov
mov
dec
and
js
dec
lds
jae
jnp
cmp
xchg
loopne
out
out
and
cmp
scas
cmps
mov
shl
mov
xor
jle
xchg
inc
fdivrp
js
cwde
add
mov
mov
test
mov
fidivr
mov
ret
sbb
test
cmp
jmp
mov
jbe
movs
adc
cli
mov
xchg
fldcw
pop
cmps
neg
lods
xor
retf
push
or
cmp
retf
repz
mov
push
(bad)
jns
pop
fist
aas
and
jnp
int3
and
leave
push
adc
inc
push
out
ds
jo
bound
inc
pop
push
dec
popf
mov
(bad)
imul
mov
das
cmp
aas
adc
icebp
cmps
int
mov
dec
inc
rol
das
mov
xchg
sub
out
add
outs
sti
retf
and
js
(bad)
xor
push
sbb
test
sbb
push
stos
mov
cmc
sbb
push
fs
and
cwde
sbb
mov
xchg
jnp
sub
mov
sar
push
loop
xchg
push
pop
shr
ja
lods
push
xchg
sqrtps
int3
sbb
fisubr
pop
daa
mov
inc
fwait
ds
cli
cs
sahf
adc
jnp
push
jg
add
cmp
out
mov
stos
out
push
push
mov
fs
inc
cmp
enter
add
push
jecxz
ror
mov
aam
push
cs
mov
sahf
sub
clc
repz
je
push
popf
sub
xor
movhps
xchg
cs
xor
push
xor
loope
inc
movs
pop
inc
adc
fldenv
sbb
fld
xchg
ror
jmp
or
cdq
popa
inc
sbb
xchg
mov
test
sub
retf
out
mov
sar
loop
lahf
xchg
push
push
cmp
xchg
xchg
gs
push
xor
push
jae
cmp
dec
sbb
rcl
xor
dec
and
in
jle
enter
xchg
loop
inc
aaa
and
movs
add
iret
inc
push
push
stc
aad
xchg
in
mov
cmp
inc
push
inc
jnp
sub
and
scas
and
sbb
pmulhw
jle
xor
icebp
push
arpl
adc
push
aas
adc
nop
dec
cli
out
stc
pop
in
pushf
or
inc
xchg
fsubr
out
cdq
push
mov
popf
mov
adc
dec
repz
or
inc
fistp
jo
rcl
lahf
neg
cmp
(bad)
and
arpl
icebp
es
fistp
addr16
repz
or
push
rol
retf
cwde
(bad)
jmp
dec
ja
stos
aas
or
es
shr
mov
jmp
xor
mov
hlt
out
(bad)
outs
sbb
mov
xor
mov
or
idiv
imul
inc
out
mov
fidiv
adc
adc
(bad)
add
jecxz
popf
jo
push
arpl
push
stc
std
test
ss
sti
lea
popf
(bad)
loop
in
test
mov
stos
fisubr
cld
test
test
(bad)
into
addr16
lahf
std
aaa
dec
pop
loopne
jp
jmp
sbb
(bad)
shl
icebp
gs
mov
retf
ins
push
jecxz
int3
or
fidiv
sbb
inc
mov
iret
xchg
hlt
adc
popa
iret
adc
test
jmp
cmps
fs
dec
or
aaa
fimul
arpl
ret
lods
call
add
push
push
in
(bad)
das
cld
jp
or
cwde
dec
push
shr
and
sbb
outs
clc
jnp
xchg
pop
loop
cmps
mov
or
mov
cmp
pusha
das
pop
add
iret
imul
mov
adc
es
mov
adc
pop
retf
or
out
cmps
push
sbb
aam
loope
loope
popf
cld
or
sbb
sbb
retf
jbe
(bad)
pop
not
jecxz
add
retf
add
mov
jl
dec
icebp
arpl
shr
mov
xor
mov
push
cli
or
test
mov
fild
movs
mov
inc
inc
cmps
cdq
call
or
enter
jbe
call
xchg
in
ret
data16
cmp
and
mov
adc
mov
inc
fwait
cmp
(bad)
cli
shl
push
aam
cmp
outs
xchg
mov
or
inc
nop
xor
mov
out
outs
add
cli
(bad)
mov
pop
xchg
jl
and
addr16
cdq
shl
aaa
inc
jb
or
fcmovbe
leave
adc
scas
dec
dec
lds
or
loope
shr
inc
movs
mov
sbb
cmp
icebp
jp
ins
dec
pop
jb
sub
adc
mov
dec
push
dec
add
scas
dec
scas
mov
adc
jmp
arpl
mov
dec
push
cli
add
dec
sbb
and
(bad)
push
leave
push
pop
fdivr
rol
mov
or
hlt
adc
mov
mov
movs
shr
adc
and
mov
sar
mov
iret
lahf
dec
push
fwait
push
enter
jle
jb
jne
je
test
ret
gs
fcom
stos
call
push
scas
outs
sub
popa
and
jo
cdq
iret
test
mov
mov
scas
xchg
retf
aad
arpl
ret
leave
dec
cmps
or
js
push
jno
gs
ss
xbegin
dec
lock
call
pop
(bad)
stc
jmp
sub
shl
jle
lahf
daa
mov
cmps
push
ret
sub
push
retf
cdq
sbb
jno
fmul
mov
xchg
mov
adc
call
cmp
xchg
outs
mov
jle
ins
inc
sub
movs
sub
push
jmp
and
lock
jno
ins
dec
xor
repnz
not
pop
enter
iret
mov
xor
adc
daa
sbb
movs
dec
pop
jbe
jae
sub
pop
cdq
test
push
mov
mov
jae
dec
xor
outs
es
enter
fstp
pop
pop
or
mov
xchg
popa
sbb
add
lds
ins
test
cwde
(bad)
not
add
hlt
or
pushf
sti
dec
push
push
push
jl
push
push
fstp
cld
adc
stos
les
or
xchg
sub
movs
xchg
lahf
jae
rcr
in
and
jne
fmul
pop
adc
popa
dec
les
and
adc
cmps
fcomp
pop
iret
imul
cdq
sub
inc
mov
and
inc
sub
sbb
ins
xchg
jge
mov
imul
and
mov
dec
ins
xchg
or
xor
push
adc
xor
ins
out
mov
jge
(bad)
stc
test
push
mov
and
outs
pop
push
and
in
bound
push
xor
(bad)
adc
cli
xchg
sbb
jne
ror
frstpm(287
rol
fbstp
jmp
sub
fistp
bnd
pop
js
xor
xchg
dec
enter
(bad)
sbb
pop
es
hlt
adc
scas
test
scas
mov
or
mov
repz
mov
iret
xor
(bad)
jmp
ins
jno
jbe
inc
add
test
test
lods
int3
jl
push
lods
add
leave
mov
pop
jbe
shl
inc
test
fistp
test
popf
mov
cmc
cmp
xchg
add
mov
daa
aas
imul
and
movs
sub
cdq
sbb
sti
cmp
push
inc
dec
xchg
mov
ret
inc
fld
and
cmp
mov
cmp
iret
aas
(bad)
push
mov
push
mov
push
xchg
add
xor
call
jmp
mov
out
dec
xor
je
cld
mov
gs
mov
mov
add
stos
xchg
push
and
mov
(bad)
mov
jbe
sub
stc
mov
dec
enter
push
in
out
lods
jp
pop
shr
mov
add
dec
jmp
pop
mov
inc
std
test
in
aas
dec
xchg
inc
stc
test
mov
call
lods
test
push
sbb
ror
dec
sbb
addr16
push
enter
cmp
cmp
push
mov
jnp
call
push
jbe
xchg
mov
stos
out
out
es
(bad)
jbe
inc
sti
jmp
fisub
loop
mov
pop
stc
jb
lods
inc
mov
int3
add
stos
and
pop
push
jl
loope
jno
mov
in
nop
mov
jb
es
mov
inc
dec
xchg
sub
hlt
sahf
jg
les
jae
pusha
add
xchg
dec
and
retf
shl
pop
adc
push
cmp
push
aad
mov
cmp
mov
jl
test
jecxz
sbb
cmp
adc
stos
add
popf
loope
bound
ins
or
pop
lods
and
xchg
stos
ins
sbb
push
mov
pop
cmps
jmp
sub
add
add
(bad)
repz
ins
mov
lahf
aaa
or
adc
cmps
in
shr
cmps
add
xor
xchg
outs
fistp
hlt
int3
pop
mov
and
and
cmp
jmp
iret
psllw
lock
inc
dec
sub
jns
mov
imul
xlat
jge
add
mov
xchg
mov
repnz
sub
pop
mov
mov
xchg
jae
dec
dec
xchg
xchg
add
cmp
push
inc
dec
adc
fidiv
pusha
cmp
loop
je
mov
dec
sbb
arpl
stos
sub
add
mov
sub
aad
arpl
push
ror
pop
and
sbb
push
dec
pop
cmp
jecxz
pushf
sub
cmp
push
xchg
daa
push
not
fcmovbe
adc
rcl
xor
pmaddwd
xchg
push
push
pop
hlt
pop
mov
fdivr
inc
clc
nop
(bad)
shl
sub
push
shl
jge
and
mov
mov
sub
cmp
dec
enter
outs
sbb
push
jno
aaa
jmp
movs
xchg
mov
mov
retf
fisubr
xor
mov
aam
ins
test
pop
call
adc
(bad)
sub
xor
sub
loop
or
pop
out
in
sbb
xchg
sahf
mov
cs
retf
lahf
hlt
add
push
fst
clc
inc
xor
clc
cmc
mov
pop
out
stc
push
aas
cdq
iret
fsqrt
(bad)
xor
daa
jp
ja
ficom
dec
inc
cs
dec
pop
push
pop
retf
or
inc
cmovle
pop
and
adc
xchg
mov
inc
cmovg
push
fdiv
push
and
xor
test
jge
addr16
repz
sti
inc
stc
idiv
dec
inc
int3
rcr
cwde
inc
(bad)
clc
ret
cs
mov
popa
mov
and
or
mov
icebp
aas
adc
mov
pop
mov
or
sbb
ss
fs
fadd
push
sbb
sub
mov
adc
jge
retf
outs
cmps
xor
mov
dec
push
mov
ss
mov
push
mov
pop
unpcklps
pop
mov
pop
cmc
(bad)
outs
hlt
test
sar
aad
xlat
cmps
rcr
dec
cmc
aas
js
shl
fidiv
into
shl
cs
mov
adc
xor
clc
mov
mov
dec
call
sub
push
dec
or
mov
dec
pusha
mov
dec
les
jno
bound
popa
jb
mov
mov
(bad)
cmp
fdivr
retf
dec
adc
and
push
push
mov
adc
xor
mov
fwait
test
sbb
sbb
ja
jns
add
or
jbe
adc
dec
sti
jnp
fimul
xchg
pop
cmp
(bad)
shl
inc
rcl
xchg
push
push
(bad)
ror
popa
dec
push
fstp
mov
pop
cdq
sbb
mov
pop
mov
sbb
aaa
xchg
jae
mov
pop
not
fsub
movs
mov
(bad)
push
arpl
mov
pop
dec
fwait
in
fidiv
add
inc
pop
xchg
repnz
fcmovnu
xor
xchg
imul
lods
jnp
pop
scas
push
rcl
ret
aam
js
and
inc
arpl
xor
fild
sbb
dec
jae
add
sahf
jmp
ret
aas
xchg
outs
les
loop
das
lea
inc
dec
push
movs
push
xchg
push
pop
cmp
xchg
sbb
xor
aad
mov
fst
cmp
jmp
mov
(bad)
in
ficomp
push
pop
sbb
inc
jo
push
push
repnz
adc
stos
xor
retf
or
repz
dec
mov
and
out
push
xchg
pushf
mul
jns
xchg
jle
arpl
clc
imul
aas
xchg
dec
push
cmc
pop
out
(bad)
xchg
mov
clc
add
call
mov
dec
jbe
push
lahf
in
movs
push
into
loopne
cmps
dec
(bad)
imul
pop
or
sbb
push
add
jmp
dec
dec
clc
xor
je
daa
sbb
nop
mov
out
cwde
or
jno
js
aad
repz
fldln2
inc
pop
ror
std
psrld
inc
mov
sbb
movs
enter
int3
fs
dec
popf
sub
std
add
push
mov
ins
dec
cmp
popf
xor
stc
int3
cmps
call
cmp
push
loope
mov
int
dec
cli
stc
fldcw
sub
push
sti
push
dec
dec
cmc
fsubr
imul
push
aam
ins
pop
js
sbb
clc
xchg
pusha
jp
jns
retf
sub
shl
sub
gs
dec
dec
or
es
loopne
test
xchg
mov
fs
mov
push
mov
jae
inc
push
in
jle
jns
jmp
xor
ins
leave
pop
mov
je
and
sbb
imul
xor
std
movs
jmp
retf
add
shr
adc
call
jns
enter
push
fadd
lods
cmp
in
mov
loope
lds
sbb
pop
mul
adc
call
mov
add
mov
adc
shr
or
or
test
push
and
mov
sahf
call
aam
test
dec
nop
push
cmp
mov
fst
jle
xor
inc
mov
mov
mov
sub
push
js
retf
adc
push
inc
retf
lock
jbe
push
xchg
and
sahf
add
push
pop
les
fmul
add
ins
adc
icebp
cmps
out
and
call
and
ins
pusha
mov
push
leave
mov
sbb
int3
frstor
ins
cmp
neg
fs
adc
xor
sub
mov
mov
inc
fcmovb
push
popa
in
ficom
inc
js
adc
push
push
push
mov
out
or
fsub
(bad)
bound
xchg
mov
pop
imul
cwde
(bad)
or
out
jmp
out
lahf
lock
fyl2xp1
dec
sbb
pop
inc
lahf
neg
and
nop
in
mov
test
sahf
pop
das
out
or
fdivr
jne
mov
cld
sbb
scas
and
push
bound
pop
add
xor
dec
adc
adc
cmp
push
sub
add
shr
mov
pop
dec
jmp
adc
cs
xor
mov
ja
push
fs
mov
or
les
sti
sub
or
mov
stos
pusha
pop
jns
loopne
shl
push
cmp
sub
push
cdq
mov
push
loope
jnp
mov
xor
jno
cmp
push
fistp
not
ss
out
add
mov
ins
int3
(bad)
repnz
push
mov
je
aas
or
xor
rol
jp
jb
aad
mov
cld
mov
add
(bad)
int
loope
sbb
(bad)
push
pop
push
fcomp
dec
add
movs
sub
cld
ror
jns
scas
lea
mov
shl
pop
js
out
inc
lock
xor
stos
pop
pop
jecxz
or
mov
imul
add
xchg
mov
into
lahf
xchg
jl
mov
lock
add
xchg
mov
fild
pop
jae
test
stos
out
sub
push
dec
cmp
jle
push
popf
hlt
mov
push
mov
out
repnz
jle
popa
jae
dec
(bad)
jmp
in
lea
cld
fstp
add
mov
hlt
mov
aam
hlt
in
push
movs
inc
ret
addr16
pusha
dec
and
call
xchg
cs
add
das
cmp
xchg
add
cld
and
sahf
or
dec
dec
cmp
out
xor
div
jnp
sbb
and
int3
jbe
mov
push
frstor
cmp
je
lds
data16
(bad)
das
test
adc
inc
mov
je
mov
ins
mov
fst
in
test
inc
cmp
stc
setp
(bad)
xchg
or
inc
aam
sub
int3
mov
sti
ins
mov
or
call
outs
dec
loopne
cli
cmp
xchg
mov
pop
xchg
inc
call
loopne
mov
pop
in
mov
jmp
cmps
pop
jl
repnz
add
inc
aaa
not
into
push
and
inc
jmp
lods
inc
std
dec
mov
dec
push
daa
xchg
add
(bad)
pop
xor
mov
sub
pop
imul
bound
cmps
stc
sbb
xchg
xchg
push
add
inc
mov
mov
daa
jbe
jmp
loope
shl
cmp
and
sbb
sub
in
lahf
mov
mov
outs
enter
mov
mov
dec
test
inc
mov
cmp
and
mov
sbb
enter
dec
loop
mov
xor
js
cmp
xchg
jae
ins
or
push
inc
cmp
xor
mov
jmp
cmp
sar
fldl2e
mov
lock
inc
cmp
retf
lea
pop
xchg
retf
mov
mov
pop
lods
push
retf
pusha
push
mov
in
jle
cmp
mov
shl
push
or
and
movs
push
mov
mov
pusha
push
mov
mov
jne
in
fdivr
or
xor
ja
dec
or
lea
scas
mov
gs
clc
out
ror
xor
xchg
mov
jl
dec
fsubr
out
je
in
jl
imul
inc
mov
ja
lea
jns
add
xchg
std
xchg
aas
and
and
jge
retf
adc
push
add
mov
gs
xor
jecxz
cmps
cvttps2pi
leave
add
or
cmp
or
out
dec
dec
lds
inc
sub
mov
sbb
cmp
jecxz
jl
popf
mov
jne
cmc
mov
push
add
fst
push
ret
and
and
sub
scas
clc
fisubr
jnp
(bad)
call
fsubr
inc
push
jns
(bad)
dec
pop
(bad)
ror
fsubr
and
mov
mov
hlt
gs
push
rcr
stc
ja
mov
sbb
fistp
cmp
jl
pop
dec
sti
cmp
sbb
mov
jb
sub
hlt
push
ss
cmp
imul
or
in
cmp
icebp
aaa
popf
sub
xchg
push
add
xchg
fmul
repz
ficomp
pop
dec
pop
fwait
sub
js
ror
jne
data16
pop
cmp
cmp
cmp
not
lock
ds
xchg
xor
and
and
push
mov
jecxz
fdiv
fsubr
jae
lods
psrlw
and
cmp
jo
sub
add
xor
push
in
inc
pop
pop
mov
ror
pop
rcl
push
mov
mov
fmul
nop
movs
adc
in
scas
shl
sbb
push
aad
jecxz
(bad)
sbb
inc
pop
add
xchg
pop
retf
push
push
sahf
or
(bad)
mov
xor
int
mov
push
push
lods
add
daa
jle
inc
rcl
jmp
sbb
shr
inc
xchg
xchg
shl
aas
jo
xor
dec
in
inc
test
bound
jmp
in
fdivr
pushf
sahf
xchg
cdq
mov
adc
sub
idiv
mov
xchg
xchg
cmps
ret
adc
mov
xchg
test
cs
sbb
mov
adc
cmc
and
push
jmp
push
push
out
scas
aad
cmps
dec
shl
lods
adc
aaa
jo
test
jb
out
jg
mov
scas
lock
repnz
sub
dec
not
add
xor
jmp
or
int
mov
mov
adc
adc
(bad)
push
sti
jl
out
int
inc
mov
mov
pop
jg
and
scas
fld
sbb
xchg
cmps
xchg
cmp
sub
push
mov
jb
mov
imul
adc
mov
imul
aaa
mov
sub
push
jae
pop
fwait
xor
lock
pop
pop
test
mov
and
or
hlt
retf
push
inc
pop
fcom
int3
pop
mov
jp
sar
hlt
pop
mov
pop
and
test
push
add
pop
push
xchg
loopne
js
mov
test
mov
shl
cmp
jno
jp
jne
cmp
add
call
mov
pop
hlt
cmps
xor
rcl
dec
ficom
mov
fcomp
into
mov
sbb
lods
and
std
inc
mov
and
mov
jns
lock
and
std
cmps
and
dec
shr
push
xchg
inc
sub
outs
push
fwait
in
inc
or
mov
jo
pop
cld
cmp
call
sti
mov
or
sbb
mov
fs
sbb
sti
ins
clc
push
repnz
ror
imul
int
sub
mov
add
sti
sar
pushf
mov
ins
push
cwde
jno
cwde
add
clc
loope
imul
xchg
and
fild
cmc
in
ins
lods
cmp
add
jbe
jmp
ja
idiv
lods
jmp
fwait
mov
cmp
push
daa
sar
mov
sub
or
or
stc
mov
jmp
push
xchg
xchg
stos
cmp
dec
ds
imul
leave
pop
movs
jle
nop
cld
rcr
shl
sti
das
ins
sti
adc
je
xor
repz
cmps
ds
mov
pop
clc
and
dec
jg
mov
pop
or
fiadd
sbb
xchg
xor
cmps
aad
leave
inc
es
je
jns
push
xor
sbb
lods
mov
pop
movs
cmp
xchg
mov
call
cmp
dec
xor
add
dec
ins
ror
je
test
sub
lods
das
add
daa
loop
test
xor
int
dec
sbb
mov
xchg
or
dec
jl
scas
pop
sbb
mov
sub
sar
mov
cmps
jae
xchg
sub
dec
push
push
in
cs
jmp
(bad)
fsubr
lods
xor
sbb
into
mov
test
mov
sahf
pop
jno
cld
nop
dec
movs
sub
movntq
and
jae
adc
cmc
dec
scas
ins
dec
call
mov
clc
out
retf
jb
loopne
pop
pop
dec
push
push
rcr
loope
and
push
or
jg
push
arpl
push
or
xor
jno
aaa
mov
sbb
cmp
cwde
imul
into
sbb
ins
call
jne
cmp
cmps
rol
and
sbb
mov
inc
xchg
mov
cmp
fmulp
dec
lds
shl
jl
pop
ror
out
fidivr
jmp
shr
push
test
cmp
es
add
jmp
ficom
out
jmp
imul
pusha
test
shr
in
sar
jle
nop
enter
mov
js
pop
or
fimul
ret
cmps
pusha
mov
mov
(bad)
stos
cmp
and
mov
bound
pop
jb
sub
pop
mov
push
dec
outs
mov
je
push
scas
xlat
inc
and
ins
sbb
sbb
inc
sar
mov
jecxz
movs
cli
lock
js
sbb
(bad)
dec
test
inc
mov
test
int3
cwde
cld
cmp
or
jnp
mov
movs
push
fwait
pop
xor
fadd
adc
loop
imul
add
push
jnp
fadd
fist
and
or
into
xor
jle
push
shl
dec
or
pop
leave
push
fdiv
xchg
inc
push
sub
jns
push
daa
(bad)
data16
out
(bad)
pushf
mov
xchg
pop
movs
add
jnp
mov
outs
(bad)
xor
out
out
jge
mov
add
pop
mov
das
ss
push
fbstp
sub
sub
jnp
dec
ins
pop
(bad)
sbb
adc
cmp
test
jl
je
idiv
(bad)
out
cmp
push
sub
add
mov
dec
pop
dec
mov
(bad)
mov
mov
and
sbb
mov
sbb
pop
jg
sbb
or
xchg
in
pop
mov
sbb
rol
inc
add
push
(bad)
in
(bad)
rcl
jne
int3
push
sbb
push
icebp
push
pop
out
stos
cmp
repnz
(bad)
or
out
inc
or
add
(bad)
mov
inc
jg
cmp
or
inc
lods
pop
not
mov
adc
adc
cmps
and
jnp
ins
dec
test
push
in
cmp
sbb
loop
stc
push
cmps
and
inc
rcr
fiadd
or
add
outs
sti
icebp
jns
push
dec
cmp
cwde
cld
pop
mov
inc
push
mov
add
shl
sbb
ins
mov
mov
pop
sub
xor
pop
retf
dec
retf
(bad)
fmul
pusha
ret
loopne
pop
dec
call
push
loope
imul
cld
pushf
popf
mov
sahf
addr16
stc
cli
ss
test
mov
xchg
mov
sub
cmc
sub
in
sbb
mov
adc
or
jb
in
test
mov
movs
xchg
fcmovbe
or
out
sar
mov
inc
repnz
loope
jo
sbb
int3
stos
das
inc
jecxz
dec
xor
push
lods
mov
fcmovu
xchg
and
pop
out
cdq
cs
xchg
fmul
push
(bad)
cmp
xchg
adc
fs
jecxz
pusha
in
jne
cmp
push
rcr
pop
imul
div
mov
dec
mov
imul
cmp
mov
pop
pop
xchg
bound
jge
adc
shl
push
shr
lods
pusha
adc
push
(bad)
fcmovne
arpl
xchg
and
mov
jb
fcmovb
mov
cdq
or
stc
mov
and
inc
shl
(bad)
xchg
pop
ins
int
fsub
or
cmps
in
mov
inc
mov
and
or
in
les
jmp
aas
imul
ret
mov
cli
lahf
not
push
mov
push
sti
pop
test
lock
and
lods
stos
and
xchg
sub
cmps
mov
push
fst
hlt
inc
pop
sbb
and
mov
jnp
jmp
hlt
(bad)
std
add
inc
inc
ins
xchg
dec
mov
inc
les
cmps
retf
or
repnz
xor
adc
into
popa
mov
mov
test
push
xchg
sub
repz
arpl
mov
sar
and
xchg
in
std
nop
int
push
xchg
dec
push
repnz
out
mov
xchg
ds
mov
das
in
gs
xor
hlt
and
pusha
jae
fmulp
add
xchg
aaa
xor
push
xor
jmp
int3
mov
outs
xchg
mov
adc
jb
jns
mov
or
dec
xor
jecxz
popa
inc
sub
mov
cld
xchg
sub
mov
ins
jge
movs
in
je
or
cdq
rol
adc
fild
fnstcw
pop
test
mov
pop
inc
out
inc
shl
int3
fucomi
ins
or
or
push
cmp
enter
cmc
out
cmps
mov
xchg
repnz
pop
aam
mov
push
or
mov
mov
fimul
mov
push
call
sbb
iret
repnz
ret
in
mov
add
cmps
mov
fild
cmp
rcr
(bad)
outs
daa
retf
mov
ja
loop
hlt
in
out
mov
dec
lahf
daa
mov
pop
cmp
mov
sbb
xor
mov
xor
sbb
jmp
mov
dec
push
xchg
and
push
scas
inc
jmp
mov
mov
lods
icebp
add
lods
das
cmc
mov
fcmovb
call
push
fimul
idiv
ins
test
js
mov
shr
lds
cmp
sbb
scas
sbb
adc
sub
xchg
(bad)
dec
jb
jae
cdq
cmp
mov
mov
(bad)
scas
and
dec
cs
outs
dec
sub
mov
sbb
sbb
cwde
rcl
push
pushf
rol
dec
ror
lock
inc
mov
push
cmp
mov
adc
mov
cs
mov
xor
repz
addr16
std
sub
movs
fwait
out
xchg
jne
shrd
sti
test
pop
rcl
jp
popf
dec
add
enter
adc
call
js
sub
push
fadd
mov
mov
mov
cld
aad
dec
add
clc
stos
adc
into
push
pop
jmp
xchg
and
add
pop
mov
dec
sbb
mov
test
(bad)
(bad)
(bad)
ins
repz
sbb
fs
js
daa
jl
xor
jmp
cmps
inc
mov
inc
sbb
mov
adc
rol
or
cmp
rcl
cmp
dec
out
in
push
enter
cmps
test
lea
dec
cld
int
sti
ins
sbb
sub
in
sbb
xchg
fistp
inc
shl
or
pop
call
pop
cmp
pushf
xchg
cld
mov
movs
enter
shl
popa
sub
daa
adc
imul
(bad)
pop
inc
sub
mov
stc
fs
shr
xor
call
ja
pop
push
sar
mov
fs
retf
cmp
add
je
or
lea
adc
mov
imul
ds
mov
adc
or
(bad)
(bad)
mov
bound
ins
movs
jnp
aaa
idiv
or
out
ds
mov
repnz
cwde
push
rcl
jg
(bad)
or
cdq
ret
add
es
xor
cmova
int3
test
push
mov
xor
or
push
in
sbb
and
adc
std
in
pop
jb
add
xor
lahf
gs
inc
stc
shl
int
dec
push
jg
retf
js
add
cmp
push
mov
xchg
mov
ins
sbb
fsubp
in
dec
mov
jmp
or
and
jl
ror
sub
outs
daa
pop
ds
sub
adc
bnd
jns
and
loopne
call
pop
jo
ror
cld
pop
xchg
dec
push
add
mov
jne
pop
pop
nop
adc
inc
mov
xchg
dec
add
call
sbb
in
mov
out
repnz
dec
out
pop
mov
out
jno
aam
and
sbb
cmp
shl
test
fnstcw
movs
mov
xchg
adc
ins
adc
mov
test
pop
aam
jnp
std
inc
add
pusha
cmps
xor
xchg
ret
push
jnp
scas
cmp
(bad)
test
fisttp
and
stos
and
call
inc
(bad)
inc
pushf
hlt
add
mov
add
adc
test
adc
les
js
push
inc
pop
outs
xchg
je
push
and
mov
xchg
mov
ins
adc
or
xchg
(bad)
sub
(bad)
out
shl
pop
adc
ss
jo
xor
(bad)
and
xlat
push
dec
cwde
popa
fiadd
cmp
out
mov
and
lods
cdq
or
cmp
inc
jle
nop
dec
xor
test
add
add
scas
mov
(bad)
adc
out
xchg
lahf
fwait
xchg
in
and
in
lods
rcr
(bad)
xor
add
cmp
cmp
xchg
pop
movs
rcl
out
cmp
mov
xchg
or
faddp
loope
lea
inc
(bad)
repnz
xlat
push
inc
sub
cld
cmp
std
call
icebp
icebp
jno
in
add
push
fistp
and
cmp
sub
push
jns
adc
xor
mov
mov
dec
or
mov
inc
nop
push
cmps
add
int3
cmp
gs
push
cmp
sub
mov
sub
fidivr
mov
jne
test
or
stos
xor
es
inc
mov
std
daa
fs
stos
pop
retf
inc
dec
inc
lods
das
jbe
movs
mov
mov
mov
mov
jbe
clc
ror
mov
push
add
mov
xchg
push
and
inc
(bad)
shl
add
pop
jle
and
mov
je
and
or
push
imul
push
and
add
jmp
mov
gs
ror
pop
cmp
cmc
mov
mov
lds
popfw
and
cmp
aaa
cmp
and
mov
pop
clc
sub
test
sub
mov
pop
in
shl
aaa
loopne
xchg
std
mov
addr16
dec
(bad)
jae
and
pop
sbb
dec
rcr
pop
lea
dec
pop
outs
in
mov
ins
add
popf
cmp
sbb
mov
xchg
lods
in
cs
aam
test
xor
push
mov
sar
dec
pop
lock
into
mov
adc
jge
imul
adc
or
jno
or
retf
adc
pop
(bad)
(bad)
cli
mov
and
lahf
xchg
pop
cli
mov
jmp
inc
ss
pushf
pop
cmps
rol
inc
iret
push
les
xchg
imul
lds
daa
ins
lgdtd
xchg
mov
jmp
or
shl
inc
ins
xor
push
inc
push
scas
ins
repz
(bad)
rcr
adc
xchg
daa
jl
movs
int3
cmp
push
ret
inc
vpmadcsswd
jmp
or
(bad)
(bad)
fmul
push
popf
ret
add
mov
dec
mov
aaa
fldenv
xor
leave
outs
adc
push
sbb
pop
cmp
rol
sub
fwait
scas
lds
pop
dec
adc
and
in
and
lahf
(bad)
jmp
pop
cmp
xchg
lds
pop
or
cmp
add
icebp
push
pop
fnstcw
(bad)
ins
fld
mov
leave
mov
fadd
mov
cmp
jmp
inc
dec
adc
pop
dec
nop
adc
cmp
xchg
and
outs
in
call
cmp
add
add
shr
pusha
cld
sbb
test
mov
lds
dec
xor
icebp
pop
(bad)
xchg
(bad)
(bad)
mov
push
mov
add
xchg
push
mov
ret
cmp
and
push
jle
clc
and
loopne
xor
mov
pop
add
dec
inc
icebp
cmp
jnp
pop
loopne
in
cmps
xor
or
icebp
xchg
xor
mov
inc
outs
ret
popf
cdq
dec
push
adc
into
fcomi
jge
shl
push
mov
mov
fisubr
fs
push
in
pop
fist
inc
lahf
sbb
cmps
jp
xor
or
outs
arpl
iret
rcl
ror
idiv
mov
sti
sub
pop
enter
xchg
gs
enter
push
es
scas
sahf
and
mov
xchg
(bad)
dec
repnz
shr
adc
or
outs
mov
jecxz
sbb
and
push
xlat
pop
push
sbb
gs
add
out
stos
pushf
or
adc
leave
repnz
pop
ret
lods
jecxz
nop
push
ror
dec
push
pop
sbb
xchg
jo
pushf
and
enter
and
xor
lods
rcl
push
add
test
into
jne
fisttp
and
aam
test
jmp
ds
pop
hlt
xor
rcl
sahf
xchg
rol
pop
and
mov
shl
and
mov
inc
pop
(bad)
and
dec
sub
mov
int3
push
test
mov
inc
push
fldenv
sbb
inc
jl
test
daa
(bad)
popf
nop
popf
fxch
add
in
test
push
xchg
jmp
int3
mov
loop
in
dec
pushf
sbb
fsubr
xchg
sbb
xlat
inc
outs
aas
fisttp
xor
daa
xor
mov
push
add
cmp
jmp
sub
xchg
in
mul
das
jo
aaa
push
js
jmp
(bad)
rcl
js
jnp
nop
jg
cld
aam
jnp
and
call
dec
jecxz
std
mov
add
cs
cmp
fs
push
cld
cmp
dec
lea
fs
shl
pop
or
mov
mov
jae
aas
cmovbe
xor
xchg
or
jnp
test
test
das
jno
out
mov
jb
(bad)
out
shl
int
call
loopne
ret
std
outs
and
sbb
in
or
ret
fyl2xp1
adc
and
popf
sti
jns
ds
mov
xlat
cmp
or
pop
push
je
ficom
or
sub
mov
sar
xlat
xor
jne
pop
jns
jo
mov
xor
cmps
and
shl
mov
(bad)
and
retf
pop
je
sti
pushf
ins
dec
sbb
fld
outs
fldcw
xchg
push
imul
cmp
outs
(bad)
icebp
or
ret
push
pop
ins
mov
push
adc
sbb
cmp
jmp
xchg
in
scas
push
or
cs
clc
mov
das
mov
adc
xchg
(bad)
(bad)
imul
push
pop
addr16
sbb
es
pop
push
dec
inc
jg
xchg
nop
or
mov
xchg
jmp
xchg
mov
sbb
push
rcl
(bad)
idiv
push
gs
add
push
imul
dec
ins
imul
pop
cmps
lock
mov
and
ja
mov
(bad)
repnz
inc
mov
je
js
sahf
sbb
in
cwde
sub
sbb
popa
xchg
mov
or
stos
jecxz
dec
imul
or
push
ins
cld
adc
jmp
cmp
inc
(bad)
jne
push
aas
pusha
clc
(bad)
xchg
call
mov
mov
push
mov
cmc
xchg
xchg
loope
cmp
pop
ja
push
jae
fcomi
sub
pop
mov
mov
dec
mov
push
add
inc
lock
es
cmp
mov
xchg
lahf
jl
fldcw
ds
dec
sbb
test
movs
ins
cld
mov
mov
pop
(bad)
fisub
retf
sub
and
xor
jnp
pop
call
cwde
aam
mov
adc
adc
movs
in
or
add
push
push
ja
pop
hlt
cmp
dec
inc
fwait
mov
pusha
xchg
adc
sub
retf
aam
add
mov
adc
lea
je
retf
jno
xchg
or
mov
and
arpl
push
jbe
xchg
cli
test
imul
(bad)
xchg
or
xchg
sbb
push
fnop
stos
sub
xchg
jecxz
aas
add
in
adc
jecxz
stos
cmps
fcmovb
pop
imul
sbb
xchg
pop
mov
ror
das
pop
mov
rol
push
cmp
in
pop
(bad)
sbb
inc
mov
test
xor
ror
int3
arpl
mov
mov
das
cmc
retf
mov
mov
add
(bad)
enter
fldcw
push
sub
add
xor
jle
cmps
push
xor
mov
(bad)
mov
jnp
sbb
push
mov
cmp
xchg
sbb
jmp
sub
xchg
xchg
ds
aad
sub
xor
test
test
inc
adc
push
push
cmp
addr16
cmp
lds
out
adc
out
ss
mov
es
(bad)
xor
div
mov
inc
stos
mov
mov
add
stos
jmp
or
mov
repz
outs
mov
mov
cmp
adc
pop
or
push
mov
ficomp
push
fs
sub
dec
les
stos
inc
dec
cld
xlat
inc
aaa
inc
inc
push
sub
sbb
cwde
mov
xor
lods
or
outs
sub
push
fdiv
ret
add
hlt
ret
jo
mov
mov
pop
push
inc
inc
dec
scas
adc
in
push
loop
pop
pop
enter
or
adc
cmp
mov
mov
aaa
and
inc
into
stos
sar
xchg
stc
mov
dec
mov
imul
not
cli
jo
out
hlt
stos
push
ins
xor
adc
mov
loop
or
pop
fxch
xor
inc
push
pop
xchg
aam
xchg
popa
jo
addr16
cmp
inc
push
(bad)
fmul
adc
movs
adc
push
push
cdq
lock
push
fs
push
ret
cmc
mov
push
jo
fidivr
sahf
fwait
mov
add
mov
test
dec
cmp
lock
pop
test
mov
adc
mov
scas
fdiv
(bad)
cmc
movs
lds
in
stos
xor
imul
mov
xor
push
cmc
xchg
cmps
sub
mov
popf
cmp
ss
and
mov
pop
addr16
dec
shl
jg
xchg
jmp
mov
adc
push
into
sbb
leave
leave
js
pusha
out
push
and
cwde
jb
mov
or
enter
int
and
imul
lea
nop
arpl
xchg
cmps
out
mov
xchg
test
mov
fbstp
and
(bad)
cs
dec
jb
cmc
add
mov
outs
mov
pop
cmp
adc
and
jno
daa
jb
(bad)
ror
imul
lods
cmc
pop
jnp
dec
test
adc
cli
lods
fistp
xchg
jbe
sub
ins
or
or
cdq
out
js
adc
mov
retf
mov
leave
push
add
push
mov
lahf
push
sub
lock
cmp
sti
lahf
sbb
imul
dec
imul
out
aad
shl
pop
jno
dec
sub
xor
aam
mov
push
ja
mov
push
ja
lods
mov
leave
pop
jb
mov
push
pop
rcr
push
neg
adc
and
xchg
sub
sub
fmul
mov
pop
or
aam
or
cmp
inc
xchg
loopne
popa
and
out
and
fstp
mov
cmp
call
xchg
stos
mov
les
mov
hlt
jns
push
imul
sub
test
sbb
mov
adc
fcom
xchg
add
faddp
rol
test
sub
mov
inc
dec
mov
(bad)
mul
mov
fistp
sbb
call
loope
inc
arpl
xchg
push
test
cmp
lock
add
popa
cdq
sub
push
hlt
inc
or
jb
mov
test
cdq
xchg
mov
pop
dec
mov
and
cmp
jle
call
and
sbb
ss
cli
sub
and
daa
lods
out
movs
scas
int
mov
ins
dec
push
mov
cmp
outs
add
adc
in
mov
pop
push
cdq
pop
push
mov
ja
aas
cdq
ret
bound
xor
gs
mov
xor
mov
jno
out
xchg
dec
pop
adc
mov
loope
mov
adc
into
xor
addr16
(bad)
clc
dec
and
out
push
jne
xchg
push
dec
or
jmp
pop
ja
scas
mov
mov
mov
push
jmp
stos
or
mov
out
pop
or
push
mov
mov
sub
outs
stos
dec
inc
add
mov
inc
add
or
push
es
mov
push
sbb
fs
adc
inc
fcmovnbe
mov
sub
adc
sbb
arpl
mov
push
and
test
pop
dec
test
lahf
mov
shl
scas
push
mov
adc
cli
scas
retf
mov
loope
mov
push
fs
sub
mov
push
cmp
js
in
mov
mov
out
push
push
mov
das
pop
adc
xchg
stos
data16
adc
call
adc
jo
lods
mov
inc
test
pushf
test
in
call
nop
sub
scas
xor
xor
adc
psubusw
adc
jp
and
pop
jnp
dec
adc
cmp
lods
out
test
gs
mov
inc
sbb
dec
push
cmps
sub
and
mov
bound
cmp
ffree
inc
int3
not
sar
cmp
cmp
outs
adc
mov
jmp
add
jmp
add
and
out
sub
pop
aas
mov
inc
push
imul
xchg
fs
inc
test
push
jle
imul
mov
cs
les
push
enter
movs
jnp
cmp
stos
outs
xor
shl
jne
push
daa
mov
pop
arpl
fwait
adc
mov
fadd
daa
cmp
mov
mov
cmps
data16
es
inc
add
in
push
fnstenv
inc
pop
pop
xor
loope
adc
rcl
outs
sar
sbb
and
jp
ffreep
pop
xlat
jne
cdq
cld
add
mov
retf
mov
wbinvd
cmc
mov
and
scas
jbe
and
adc
cmp
movs
ds
test
bound
xchg
data16
push
fs
add
cmps
sub
and
stc
pop
pop
jg
dec
mov
daa
scas
mov
imul
add
xor
daa
pop
aad
jo
ins
mov
inc
sub
jl
jmp
loop
add
shl
mov
xchg
mov
(bad)
imul
adc
fisttp
mov
out
mov
add
xor
mov
cwde
ret
sub
clc
dec
(bad)
nop
and
adc
or
mul
fs
push
icebp
inc
push
aad
push
jbe
repz
or
or
sub
pop
hlt
sbb
xchg
sbb
cmp
or
cmps
fsub
add
xchg
int3
mov
mov
push
push
arpl
out
push
mov
lahf
stos
mov
jns
movs
mov
mov
pop
mov
cli
dec
movs
mov
jge
adc
pop
mov
pop
cmp
mov
mov
xchg
movs
xchg
loopne
out
sbb
push
ss
imul
pop
in
mov
pushf
enter
inc
popf
inc
jns
adc
sub
jae
ins
test
push
adc
out
adc
fs
add
aas
mov
sub
pusha
and
repz
sbb
arpl
mov
jmp
pop
pushf
js
jge
sub
retf
sbb
enter
pop
sbb
test
and
dec
cwde
dec
jae
in
push
dec
lock
outs
jl
mov
inc
out
pop
repnz
pusha
add
out
mov
xchg
adc
out
mov
add
ror
pop
xchg
mov
jno
add
cmps
(bad)
and
int
xchg
xchg
ss
adc
sub
fwait
enter
mov
sbb
push
push
xor
jl
arpl
retf
dec
xor
push
mov
push
(bad)
mov
xor
pop
mov
cmc
push
push
lods
loopne
and
xchg
push
sbb
add
ins
mov
sbb
sbb
cmp
icebp
push
mov
es
in
push
mov
and
push
pop
add
bound
push
or
and
mov
aam
and
enter
cld
call
pop
fs
adc
mov
mov
cmp
cmps
in
arpl
and
mov
in
push
loope
mov
or
mov
sbb
cmp
(bad)
pop
test
or
retf
xor
mov
adc
ret
mov
pop
(bad)
pop
retf
retf
call
in
test
push
addr16
mov
mov
mov
cmc
(bad)
mov
adc
push
sub
(bad)
pop
jp
rcr
mov
in
movq
add
mov
cwde
or
outs
sbb
sub
jb
mov
dec
adc
cwde
mov
aad
xor
add
(bad)
cmp
and
mov
mov
inc
dec
sti
push
pop
mov
cmp
inc
addr16
loop
mov
test
pop
sti
push
mov
or
cmp
push
sbb
adc
adc
les
jne
fisttp
xor
push
xchg
mov
test
inc
outs
ds
push
push
mov
xchg
cdq
dec
lahf
gs
xchg
jbe
dec
aas
retf
inc
mov
aaa
mov
cwde
or
out
and
stos
mov
dec
push
adc
aad
cmps
jmp
inc
div
neg
jecxz
jae
inc
jns
inc
pop
xchg
rcl
sbb
cdq
xor
and
sti
test
or
mov
fldenv
adc
adc
dec
je
stc
shl
test
inc
stos
jp
sub
repz
mov
push
mov
fisttp
ins
ins
mov
retf
sti
(bad)
sahf
repnz
mov
pop
xor
(bad)
push
mov
cs
ds
xchg
add
adc
mov
inc
hlt
pop
xor
sbb
stos
and
popf
fwait
push
pop
imul
push
ja
mov
cmp
int3
xchg
or
pop
and
jbe
jmp
out
adc
loop
inc
push
mov
shl
and
or
gs
int3
xor
iret
push
mov
xchg
ss
jmp
fs
sbb
inc
stos
push
data16
sbb
ror
mov
addr16
movd
mov
in
push
push
enter
jmp
mov
xchg
outs
xchg
add
xor
popf
push
rcl
xor
scas
ffreep
push
adc
lahf
test
jmp
js
cmps
movs
push
stos
inc
push
test
xor
add
and
cld
pushf
in
add
sar
mov
jl
xchg
retf
cmp
xor
xchg
pop
pop
repnz
imul
mov
pop
shr
fisubr
outs
sbb
arpl
adc
mov
jae
push
sbb
and
fdivr
ret
sbb
mov
and
lds
mov
sub
scas
stos
xor
dec
xchg
int
sahf
add
call
xchg
bound
pop
mov
xchg
arpl
and
add
call
mov
enter
inc
push
mov
xchg
stos
mov
pop
cdq
div
push
xchg
adc
mov
lods
ret
repz
push
push
jecxz
xchg
std
inc
jecxz
push
rol
dec
gs
xor
cmp
das
sub
imul
and
fnstenv
das
lds
xor
mov
arpl
retf
popa
or
leave
in
mov
idiv
jecxz
imul
lea
or
cmp
les
adc
rcr
and
dec
lds
jecxz
adc
dec
mov
push
jle
pop
sbb
div
adc
iret
shr
push
arpl
cmp
sti
arpl
daa
inc
loop
fstp
or
dec
mov
xor
dec
pop
jge
jmp
sub
cmp
cmp
fbld
push
xchg
jmp
and
les
js
in
outs
lock
inc
adc
adc
jmp
xor
or
xor
dec
sbb
xor
popf
pop
int3
xchg
rcl
dec
jl
jne
pop
cmp
fisubr
repnz
add
das
mov
and
outs
fcmovbe
repnz
cli
mov
jp
ins
es
stc
ret
push
mov
xor
ret
cmp
mov
aam
push
(bad)
sahf
loop
fist
shl
xchg
(bad)
sub
fidiv
and
mov
cmp
mov
sub
aam
clc
cmp
jb
dec
add
out
ja
sub
or
arpl
and
add
push
xchg
(bad)
fld
dec
out
retf
xchg
fnstenv
pop
arpl
xchg
adc
push
lea
push
outs
rol
rsqrtps
pushf
lahf
cmp
mov
mov
cmp
rcl
ror
xlat
xlat
in
pop
sub
pop
mov
mov
repz
mov
dec
inc
out
movs
aam
jo
sbb
in
data16
xchg
cwde
xchg
iret
(bad)
(bad)
cld
frndint
(bad)
fbstp
fisub
xchg
sahf
inc
mov
in
mov
xlat
or
inc
adc
pop
adc
inc
xchg
xchg
call
sub
xor
(bad)
fbld
fmul
push
clc
fimul
scas
es
out
lea
pop
dec
jnp
les
aam
mov
xchg
inc
or
and
in
jmp
mov
fsub
mov
ret
cmp
add
sub
rcl
cli
pop
mov
ret
fst
mov
xchg
mov
fmul
test
pop
pop
adc
xchg
popa
lea
mov
fs
arpl
sti
fs
adc
fiadd
jne
loop
popa
inc
fdiv
aad
cmps
mov
dec
in
jp
scas
sbb
daa
push
cwde
push
sub
loop
xor
cmp
nop
cmp
add
lea
pop
jge
add
rcl
jo
adc
sbb
sbb
loopne
cmp
lea
pop
lds
pop
add
int
daa
jl
lds
sbb
test
xor
and
lods
fcom
sar
inc
movs
pop
and
jbe
cmps
inc
adc
in
mov
cmp
and
sbb
sbb
fsubrp
jno
pop
mov
cmps
dec
cld
minps
in
mov
lds
repnz
adc
inc
pop
inc
js
js
mov
dec
mov
neg
cld
jo
(bad)
mov
mov
cli
xchg
dec
imul
rcr
inc
(bad)
rol
push
repnz
add
mov
jno
cdq
cld
(bad)
iret
or
cmps
inc
fbstp
movs
popf
test
mov
mov
icebp
stos
cli
fld
out
hlt
sub
mov
mov
lea
mov
and
mov
pop
push
mov
xchg
ret
or
dec
push
cdq
sbb
push
popf
(bad)
dec
daa
cli
cld
arpl
mov
inc
push
jb
jp
sbb
js
mov
jbe
retf
and
call
jge
hlt
add
std
adc
js
push
cld
xchg
adc
push
fsubr
lds
ds
div
cmp
ins
mov
mov
or
jle
js
addr16
jle
pop
mov
and
clc
xor
jne
clc
jo
in
jnp
fsubr
add
js
imul
pop
ret
dec
mov
cmp
push
mov
push
lods
mov
test
es
sbb
fild
lahf
cld
xor
neg
cmp
(bad)
pop
test
jo
inc
mov
pop
mov
jle
loope
and
retf
pop
cmp
jle
or
mov
sub
xchg
and
dec
push
addr16
lods
out
enter
mov
fcomp
aad
adc
or
mov
xor
sahf
not
ins
mov
test
clc
nop
retf
xchg
cmp
test
xor
neg
shl
xchg
adc
lea
sub
popf
sub
pop
xchg
dec
sub
lods
adc
and
mov
loop
jo
je
xor
sub
mov
adc
cdq
jmp
mov
cdq
sahf
ins
push
xor
xchg
mov
in
adc
nop
sbb
out
xor
int3
jne
ins
retf
jl
mov
add
inc
xchg
xchg
mov
mov
jmp
(bad)
aam
dec
jne
popf
jmp
sbb
cdq
or
mov
xor
xchg
and
mov
aaa
dec
inc
jmp
out
push
scas
push
push
ins
ret
test
pop
mov
jno
jge
and
mov
dec
mov
fisub
fst
int3
dec
and
jnp
loope
call
xlat
or
cmps
pop
pop
mov
jbe
push
enter
jmp
sub
inc
fcmove
cmps
mov
ds
dec
jb
scas
mov
jno
mov
mov
xor
cli
loope
ins
push
adc
iret
scas
inc
pop
loopne
mov
mov
inc
jb
mov
mov
movs
xor
pop
xor
nop
enter
sub
out
cmp
stos
addps
push
jl
xor
lods
jnp
inc
out
fld
movs
and
ds
xlat
jmp
scas
push
inc
sbb
lds
jecxz
(bad)
out
std
lds
push
sbb
mov
inc
test
shl
xlat
mov
imul
adc
mov
out
pop
js
(bad)
out
fwait
xchg
in
mov
rcl
mov
or
jmp
in
push
add
cmp
sbb
daa
clc
mov
add
(bad)
xor
mov
lea
gs
pop
lock
retf
das
mov
shl
dec
pop
stc
sbb
xor
or
mov
mov
fstp
adc
daa
mov
jg
dec
jne
stos
push
mov
dec
addr16
mov
ror
jg
mov
popa
movs
push
mov
mov
bound
mov
mov
int3
pop
mov
aaa
mov
ins
inc
cmp
and
push
add
test
xchg
mov
ss
push
(bad)
(bad)
mov
jmp
dec
fnsave
adc
mov
aaa
pop
test
dec
sub
(bad)
movs
inc
xor
xlat
aad
das
lods
(bad)
pop
in
and
int
xchg
cmp
pop
push
sub
xor
sti
pop
lods
rcl
pop
mov
int
xor
shl
cdq
mov
fwait
cmp
mov
out
push
jg
cmps
fstp
and
cs
jns
add
jmp
pop
jmp
int
mov
xchg
cli
enter
sbb
or
cmps
retf
retf
cmps
jo
and
repz
jne
push
leave
mov
repz
push
lock
dec
jmp
xchg
adc
pop
call
dec
in
lods
nop
inc
mov
out
xlat
outs
adc
push
cwde
jmp
(bad)
in
in
and
jmp
or
idiv
fnstcw
dec
xchg
or
ins
jmp
cmp
and
popf
jb
hlt
scas
std
inc
push
sub
xchg
cmp
pop
test
icebp
mov
xor
jae
mov
jne
jecxz
xchg
sbb
mov
fnstenv
push
sub
movs
in
pop
cld
and
add
adc
mov
mov
int3
push
cli
push
mov
out
andps
ss
or
ret
or
fs
sbb
cli
sub
cmp
sbb
bound
cmps
rcr
sub
aaa
iret
aam
daa
mov
jb
xor
mov
dec
push
ins
inc
mov
adc
cmp
fld
sub
fnstcw
xor
push
mov
cmp
and
mov
mov
mov
adc
inc
mov
sbb
adc
or
scas
sub
mov
jbe
sbb
mov
push
and
es
call
xchg
std
adc
lods
jae
push
outs
lea
pop
sahf
cmc
and
stos
jp
fdivrp
sub
clc
jnp
mul
jno
out
popf
xchg
pop
xchg
add
push
sub
fdivr
lods
int
inc
loopne
jmp
and
adc
fwait
ret
push
punpckhbw
inc
cdq
mov
sar
popa
int
mul
xchg
fwait
addr16
jne
pop
int3
rcl
dec
xchg
sbb
ins
and
sahf
ja
add
cmp
sub
scas
scas
dec
xor
loopne
out
cmp
jle
movs
add
es
mov
sub
enter
and
bt
add
clc
(bad)
sar
push
scas
push
clc
repnz
dec
cmc
(bad)
out
xor
mov
sbb
cmp
sbb
sub
repz
stos
jno
outs
imul
push
xor
dec
add
(bad)
push
xor
sub
mov
pop
sti
mov
or
pop
mov
hlt
mov
inc
pop
inc
cli
call
mov
aaa
sbb
jne
push
fcmovnb
ds
adc
inc
adc
ror
xor
popa
int
mov
fnstsw
dec
xor
retf
ja
and
and
mov
mov
or
ror
mov
popf
mov
push
pop
mov
aam
adc
and
push
xchg
xor
xlat
mov
sbb
fadd
pop
rep
or
mov
and
or
fild
aaa
sbb
fs
aam
rcl
xor
es
mov
sbb
jb
jmp
xchg
pop
out
fidiv
cmp
outs
jecxz
loope
stc
sbb
inc
imul
jne
inc
or
sub
pop
arpl
fwait
jno
or
add
cmp
add
cmp
dec
mov
sbb
popf
fsubr
adc
mov
pusha
xor
jecxz
xchg
movs
pusha
pop
xchg
ds
sub
sti
jnp
jb
fwait
mov
mov
aad
sar
push
mov
imul
in
xchg
push
sub
cmps
mov
mov
ret
out
xchg
lods
outs
(bad)
(bad)
mov
jp
mov
or
jno
mov
or
out
shl
repnz
mov
jbe
push
and
add
inc
sub
jge
jmp
sbb
or
out
pusha
and
mov
mov
xor
cmp
aaa
dec
mov
and
jne
test
ret
je
xor
cld
cdq
out
pop
mov
scas
mov
xchg
pop
push
inc
mov
mov
mov
or
retf
out
or
mov
pushf
adc
mov
fsubr
sub
clc
out
fidiv
dec
outs
inc
add
pop
or
pop
sub
push
jo
cmp
dec
push
(bad)
ja
pop
test
fild
bound
inc
shl
xchg
mov
push
bound
ror
int
and
(bad)
ror
fnsave
jle
push
jno
jae
pop
popf
xor
cmps
fdiv
loop
call
mov
mov
mov
fwait
shr
pop
cmp
int
cmps
pop
fdivr
in
pop
sbb
ins
sbb
push
ret
adc
mov
or
mov
pop
test
sti
in
add
fs
(bad)
(bad)
adc
sub
lds
pop
inc
ds
or
add
and
fldenv
retf
and
adc
dec
or
push
add
push
ja
fild
(bad)
popa
sub
aas
loopne
data16
aad
pop
femms
push
xor
or
mov
add
push
adc
jmp
enter
inc
dec
mov
and
stc
dec
ror
iret
pop
inc
cmps
adc
dec
ret
repz
out
push
push
outs
daa
pusha
pop
push
and
mov
clc
data16
out
sub
or
lods
scas
sbb
fmul
dec
sub
iret
sahf
je
xlat
push
mov
and
shl
call
aas
push
inc
loop
lea
pop
je
mov
or
ret
in
add
push
hlt
in
in
mov
push
int3
in
mov
xchg
test
inc
ret
sbb
inc
arpl
sbb
add
cs
jno
cmp
cmps
jl
pop
ds
test
jmp
rcr
mov
adc
dec
adc
pushf
iret
and
repnz
aad
cmps
cmp
rcl
test
std
inc
lds
ins
pop
sub
mov
fmul
fwait
popa
xor
fistp
pushf
and
loopne
adc
xor
pop
imul
jb
add
ins
test
repnz
mov
pop
sbb
in
xlat
jno
in
daa
mov
push
inc
jb
shl
dec
push
push
mov
sahf
dec
jecxz
mov
js
pop
aas
dec
iret
sub
in
ret
sub
in
mov
in
xchg
push
(bad)
aad
test
pop
mov
pop
stos
outs
adc
cmps
inc
in
adc
sbb
mul
pop
inc
inc
call
call
inc
sbb
and
mov
pop
add
mov
xchg
xchg
sub
cmps
rcr
jecxz
mov
dec
das
mov
repnz
popf
add
mov
sbb
popa
mov
inc
add
jne
xchg
fisttp
int
fsubp
xchg
push
cs
adc
iret
sar
jmp
jnp
add
test
enter
push
mov
fcomip
pop
loopne
outs
inc
lahf
adc
ins
(bad)
pop
xor
in
jno
pop
pop
mov
aaa
mov
push
jo
pushf
retf
ror
nop
inc
mov
adc
out
dec
sar
jo
dec
in
arpl
aas
xchg
call
cmp
cmc
mov
xor
rcr
sbb
mov
add
cli
ss
dec
jae
push
push
push
or
dec
xchg
outs
or
cmp
cmp
sti
add
jmp
inc
pop
pop
addr16
and
mov
gs
mov
movs
lahf
adc
out
jb
dec
out
int
loopne
inc
mov
popa
cmp
inc
push
mov
sub
cs
mov
lods
sbb
sub
and
or
icebp
mov
addr16
xchg
push
sbb
jnp
pop
dec
adc
mov
cmps
movs
or
mov
mov
not
xchg
jmp
mov
in
push
hlt
push
popf
adc
jl
push
fucomp
(bad)
aad
cmp
in
mov
sbb
ret
pop
jp
retf
xchg
je
xlat
jb
dec
cmp
cs
sbb
pusha
and
mov
pop
call
xor
in
xchg
pop
sbb
mov
push
push
and
pop
movs
inc
xchg
sub
fcomip
xchg
popf
nop
call
sub
ret
sbb
int3
aas
add
jp
lods
inc
mov
push
(bad)
xor
adc
cwde
shl
arpl
sub
in
lahf
lods
(bad)
popa
adc
ins
inc
fimul
popf
sub
ret
clc
jne
fimul
retf
retf
std
pusha
dec
adc
out
mov
xor
cmp
rcr
pop
in
dec
inc
inc
jne
pop
repnz
stos
push
mov
inc
fild
jns
and
fdiv
imul
xor
mov
xor
push
in
dec
stc
mov
jae
jl
mov
pop
fistp
add
or
jae
sub
popf
and
data16
xchg
aad
push
or
jb
push
mov
sub
fisttp
or
out
loop
jle
jmp
push
fs
sbb
fs
in
inc
fst
into
add
jbe
fidivr
xor
imul
daa
ja
sahf
adc
dec
fst
push
dec
int3
arpl
mov
jmp
xchg
dec
shl
out
mov
stos
and
(bad)
in
dec
clc
in
out
jbe
add
and
xchg
xchg
out
pop
push
sbb
pop
add
inc
xor
(bad)
loop
outs
test
pop
dec
lea
add
push
jmp
test
rcr
fnclex
mov
add
imul
adc
pushf
cmp
(bad)
inc
cli
mov
and
and
push
push
mov
(bad)
inc
ret
aam
xor
xchg
sbb
or
or
pop
cmp
lahf
mov
ins
mov
lods
add
ficomp
pop
ret
fnsave
sub
inc
adc
or
ja
mov
pop
pop
add
sub
and
repnz
and
aaa
mov
inc
sbb
std
xlat
jnp
pop
push
or
mov
fcomi
cmc
and
add
in
(bad)
push
adc
add
jp
loopne
scas
popa
(bad)
rcr
dec
test
int
mov
add
cmp
inc
in
idiv
mov
rol
mov
mov
mov
test
sbb
gs
push
mov
sub
lahf
pusha
ds
push
dec
out
push
popa
xchg
cmp
inc
lods
cmps
ins
sar
cmp
repnz
icebp
inc
sub
sub
push
addr16
sub
nop
aad
lahf
and
sub
sbb
cmps
inc
test
mov
and
ins
out
mov
cmp
or
int3
jecxz
jnp
(bad)
fimul
ds
xor
gs
bound
dec
retf
repz
fnstsw
dec
sbb
cmps
cwde
hlt
or
mov
repz
loopne
mov
ret
jg
xor
mov
jno
mov
icebp
hlt
ret
lds
aaa
imul
rcr
push
rcl
mov
shl
call
ror
sub
xchg
jle
jno
sub
push
(bad)
fidiv
push
xor
(bad)
push
mov
mov
jl
popa
push
mov
enter
cmp
int
out
mov
lods
lahf
fs
dec
and
jge
loop
addr16
fxch
sbb
dec
mov
out
bound
pop
leave
sub
dec
xchg
imul
stos
clc
adc
xor
ret
jp
dec
dec
js
js
shl
push
icebp
mov
xchg
loop
imul
imul
mov
imul
bound
inc
(bad)
mov
xchg
repnz
jl
pop
cmp
jg
inc
or
lds
fimul
jle
mov
rcr
adc
idiv
push
mov
jmp
aaa
cmp
fwait
les
js
stos
lea
clc
mov
mov
daa
cmps
cmp
sbb
cmp
test
fsubrp
test
aas
mov
adc
dec
shr
inc
mov
leave
push
mov
sbb
mov
test
pop
mov
mov
or
gs
mov
out
cmp
aaa
into
push
cmps
imul
sub
ss
or
aad
loopne
sub
int3
jne
int
mov
clc
mov
sub
cmp
out
mov
call
cmps
lods
out
call
jo
shr
pop
mov
sub
sti
fistp
fist
popf
popf
pop
int3
retf
test
jmp
ins
stc
in
fidivr
xor
inc
mov
push
in
dec
ror
mov
inc
lods
jnp
adc
or
cmps
mov
pop
and
sbb
sbb
add
call
sbb
sbb
cmc
(bad)
arpl
push
bound
mov
int
stos
xor
fcomp
xchg
inc
gs
adc
aas
mov
fwait
or
icebp
mov
xor
fwait
sub
ins
or
rcl
cmp
mov
add
(bad)
pop
nop
push
out
cmc
pop
cmps
int3
sub
xchg
jo
push
push
(bad)
jne
push
dec
daa
cli
enter
mov
sti
repz
es
int
outs
mov
jo
xor
pop
xchg
or
bnd
pop
dec
jmp
pop
adc
xchg
or
(bad)
cmp
in
rcl
cmp
(bad)
dec
movs
call
sbb
aaa
out
mov
sub
shr
push
retf
mov
or
inc
xor
(bad)
and
push
xor
popa
cwde
mov
aam
and
mov
adc
push
out
push
pop
test
xchg
mov
ficom
cmp
in
inc
jmp
outs
jbe
adc
push
ret
xchg
outs
push
or
push
xchg
and
or
mov
cmp
sub
nop
cmp
adc
ins
lds
cwde
rol
lea
hlt
imul
jo
mov
hlt
retf
pop
dec
not
or
mov
mov
pushf
jns
add
shr
sbb
sbb
cmps
call
jne
nop
pop
dec
push
(bad)
jbe
cli
mov
hlt
xor
and
xchg
push
jae
pop
fild
cmc
adc
rcl
add
jmp
ret
hlt
jno
dec
push
push
jno
xchg
mov
push
add
(bad)
in
mov
shl
mov
test
ins
pop
add
sbb
mov
xor
fstp
in
fnstenv
stos
imul
nop
mov
mov
loopne
sub
push
xchg
pop
and
mov
add
or
xor
dec
pusha
jo
out
inc
shr
ror
add
sahf
pop
fmul
mov
rol
in
loop
cmp
push
push
jb
test
lea
imul
push
repz
test
enter
fdivr
rcl
movs
icebp
and
jae
jmp
cmps
inc
cs
int
or
mov
ss
jl
cmp
lock
push
jg
ret
mov
cdq
push
shl
leave
pop
jg
mov
jmp
lea
cmp
ds
add
pusha
mov
mov
inc
inc
dec
out
mov
xor
or
cmp
cmp
adc
addr16
pop
(bad)
jecxz
mov
mov
cmp
in
daa
and
outs
xchg
scas
jmp
lahf
sub
cwde
or
(bad)
leave
push
add
pop
scas
push
(bad)
addr16
inc
mov
add
dec
sti
fcmovnb
mov
imul
ja
imul
pop
and
jnp
gs
and
int3
mov
outs
dec
xor
retf
stos
sub
xor
add
mov
pop
jp
ret
and
pop
sub
add
cmp
or
fnstcw
stos
fistp
stos
wrmsr
fwait
cwde
in
xor
outs
jne
cmp
repnz
imul
push
add
or
sbb
xor
cmp
push
ror
push
repz
stos
out
icebp
out
jno
mov
fcmovnu
xchg
(bad)
jp
push
cmp
xor
xor
xchg
fwait
xor
push
and
and
test
inc
in
xchg
sub
inc
jmp
cmc
fsubr
sbb
(bad)
arpl
xor
adc
jg
dec
pop
repnz
loop
dec
pop
mov
inc
mov
out
nop
jns
cmps
xchg
mov
xchg
push
jno
or
adc
scas
xor
and
push
pop
scas
ds
sbb
jecxz
fistp
scas
add
dec
cdq
add
mov
fdiv
and
add
in
cmp
mov
shr
or
xor
loope
pop
fimul
add
jo
mov
mov
imul
loop
adc
sbb
inc
or
aas
pop
mov
repz
mov
sbb
popf
cmp
jo
jno
jp
cmp
jne
sar
(bad)
shr
into
cmp
stos
xlat
stos
push
push
jno
sar
or
fnstenv
push
out
adc
out
(bad)
mov
lock
sar
add
inc
or
push
pop
mov
xchg
call
je
pop
stos
inc
out
outs
mov
cli
cmp
lahf
jl
fldcw
dec
loop
(bad)
pop
mov
mov
or
fistp
add
leave
adc
sbb
push
call
mov
push
stc
xchg
clc
mov
test
jbe
ins
movs
stos
jl
mov
hlt
sbb
fcomi
in
pop
dec
sub
sub
es
aas
test
movs
out
inc
mov
loopne
xchg
push
jg
jb
push
test
add
outs
jmp
jmp
mov
push
cld
lods
fisttp
std
in
fwait
push
cmp
and
and
nop
out
pop
int
xchg
in
int3
jp
fsub
dec
cmps
cmps
and
neg
xchg
movs
add
jmp
cmp
push
mov
cmp
mov
or
push
cli
pop
out
gs
push
clc
cmc
jmp
mov
adc
popf
int
imul
inc
mov
push
xchg
(bad)
aam
jnp
movs
(bad)
dec
sub
test
int
and
loop
(bad)
jecxz
mov
add
inc
adc
pop
pop
push
push
imul
imul
outs
xchg
div
ret
pop
stc
and
and
ds
lea
push
push
out
leave
mov
mov
scas
inc
pop
dec
dec
dec
cmps
mov
add
sahf
push
pop
aam
sahf
mov
shl
sub
in
sub
out
cmp
lock
ret
int
daa
cmp
je
test
jle
in
icebp
push
mov
(bad)
(bad)
pop
sar
js
mov
jg
adc
dec
lea
out
sbb
jg
lods
jl
int
outs
xor
pop
and
ret
ds
push
pop
test
adc
adc
push
(bad)
enter
inc
aaa
dec
fs
movs
pop
test
stos
dec
and
and
(bad)
xor
push
cmp
out
sub
popf
dec
xchg
mov
xlat
add
mov
idiv
jbe
and
xor
pop
xor
pop
je
mov
add
mov
add
out
jns
hlt
test
repz
pop
ret
mov
clc
gs
push
shl
jnp
cs
dec
cmp
lahf
aaa
ds
pop
hlt
cmp
inc
push
jnp
pushf
mov
push
inc
sbb
retf
pop
mov
mov
dec
mov
inc
fwait
(bad)
fist
ret
and
cs
div
or
test
rol
xchg
mov
sub
scas
clc
inc
xor
rcr
call
adc
mov
or
mov
int3
rcr
pushf
aaa
mov
add
jmp
rep
(bad)
xchg
add
sti
les
inc
stos
dec
out
mov
xor
add
mov
pop
or
dec
mov
push
jns
sbb
(bad)
sbb
aam
pushf
mul
pop
stc
adc
dec
adc
or
push
call
(bad)
(bad)
mov
out
iret
aas
out
loopne
fwait
call
xchg
jae
les
add
sub
(bad)
idiv
cmps
call
push
push
fistp
cmp
les
mov
js
xor
ficom
mov
rcl
loop
(bad)
jmp
aas
mov
call
sbb
test
imul
push
inc
ss
js
test
mov
scas
cmp
lock
sub
inc
cwde
enter
dec
jo
repz
cli
outs
cmp
test
int3
mov
imul
sub
inc
cmps
or
add
repz
call
pushf
pop
jl
lock
cmc
std
in
dec
addr16
and
mov
and
imul
(bad)
add
jp
mov
ins
xor
sub
xor
push
test
fnsave
movs
xchg
pop
mov
inc
mov
in
imul
pusha
push
pop
data16
or
pop
cwde
inc
adc
movs
ins
push
xor
into
out
(bad)
lock
inc
jp
and
or
(bad)
enter
aas
or
push
sbb
cmp
ret
es
adc
jmp
retf
(bad)
mov
(bad)
outs
cli
inc
jae
push
sub
pushf
cli
jnp
xlat
imul
xor
fcomp
pop
push
fdiv
sub
adc
inc
jbe
in
sbb
mov
jo
mov
bound
pop
mov
mov
imul
outs
cs
inc
xlat
cmp
cmp
into
pop
xchg
shr
ss
cmp
jle
add
dec
hlt
test
push
dec
lods
xchg
clc
sbb
es
xlat
mov
iret
inc
in
mov
sub
ja
neg
pop
sbb
cmp
inc
arpl
xchg
push
pop
jecxz
or
jbe
jle
fbstp
inc
jne
mov
les
js
mov
mov
mov
add
(bad)
pop
retf
mov
fs
sub
mov
aas
push
movs
retf
add
inc
clc
push
or
xor
test
or
add
add
stos
push
cwde
push
cwde
ror
rol
out
and
dec
fdivr
je
cmp
js
or
and
aad
mov
fild
inc
sti
dec
or
retf
test
(bad)
inc
nop
rcr
test
add
xor
jb
sub
mov
shl
jmp
jmp
clc
icebp
pop
ds
cmp
sar
loopne
xor
sbb
ja
lods
push
cmp
dec
enter
std
jo
jns
(bad)
ins
stos
xor
in
je
test
pop
adc
jmp
mov
div
cwde
fldenv
iret
jge
cmp
sahf
push
jge
inc
popf
dec
push
mov
mov
mov
inc
sbb
jo
fsub
xchg
in
repnz
xchg
adc
rcl
(bad)
lods
(bad)
jo
cmp
or
(bad)
dec
in
mov
mov
sub
hlt
xchg
(bad)
mov
adc
out
(bad)
push
jns
dec
and
mov
dec
jge
push
shl
aad
jbe
mov
mov
in
fs
fstp
(bad)
cmp
sub
xchg
mov
fnstcw
mov
vsqrtsd
push
outs
aas
ficomp
mov
mov
loop
jecxz
cmp
xchg
in
sbb
dec
push
pop
dec
jns
mov
xor
xchg
ret
xchg
fild
call
mov
mov
jle
aas
les
movs
sar
pop
loopne
ficom
or
sbb
xchg
ret
sub
mov
jp
(bad)
or
int3
push
outs
je
enter
rol
xor
shr
cmps
imul
adc
mov
xlat
push
stc
push
mov
sub
in
add
jb
test
inc
lock
push
and
out
lds
test
xor
mov
scas
out
cmps
jne
push
sbb
cmc
jbe
sahf
(bad)
fild
fdiv
cmp
sbb
jl
push
pop
movq
es
popf
pop
dec
dec
jo
repnz
xor
fsub
mov
xor
mov
inc
(bad)
xchg
fnstenv
push
into
mov
int3
daa
mov
pop
xchg
xchg
outs
mov
jmp
pop
xchg
mov
sar
fcomip
outs
xor
sub
dec
pop
mov
nop
test
stc
xchg
jmp
ja
repz
fchs
mov
xchg
sub
cmp
inc
pop
sub
xlat
in
add
cmp
jbe
jbe
mov
push
mov
ret
sub
dec
push
add
repnz
push
jle
das
fistp
inc
stos
ret
retf
xor
ficom
pop
jno
imul
leave
pop
jmp
inc
xor
mov
adc
mov
or
retf
mov
and
pop
jns
inc
cs
test
jge
add
and
int3
sub
inc
dec
mov
push
xchg
jo
jmp
jp
push
loope
cmps
(bad)
fs
mul
jecxz
mov
dec
add
push
sub
push
or
fisubr
push
jbe
sbb
inc
not
inc
(bad)
mov
jne
jg
mov
adc
retf
push
int3
mov
repnz
xor
(bad)
mov
and
or
inc
dec
dec
mov
jb
sub
adc
xchg
imul
stos
mov
mov
mov
sbb
or
mov
stos
arpl
dec
hlt
push
fist
xor
ds
inc
fist
sub
mov
add
xor
jl
loopne
mov
mov
cli
pop
fisub
jnp
jo
pop
push
mov
inc
xchg
pop
clc
scas
adc
test
sub
xchg
mov
es
int3
adc
dec
scas
fisub
xchg
neg
dec
mov
pop
push
mov
push
fnstcw
sub
inc
xor
push
jl
enter
sbb
jg
ror
lock
gs
sti
mov
shl
sub
nop
lods
mov
xchg
mov
in
sar
test
jle
cmp
xchg
lahf
or
(bad)
std
ss
sub
pop
mov
jnp
fldcw
test
or
xor
inc
mov
xchg
mov
sub
out
jmp
bswap
scas
cwde
les
loop
and
in
out
dec
add
pop
mov
aad
je
mov
outs
sbb
cdq
mov
movs
inc
loop
adc
inc
and
inc
pop
and
stos
push
adc
dec
leave
lahf
(bad)
pop
sar
mov
sar
jns
out
fld
jns
sahf
pop
in
out
xchg
mov
jmp
jo
sbb
lock
dec
out
fild
cmps
mov
jae
add
add
xor
sub
aad
dec
cmp
pop
push
movs
das
(bad)
(bad)
aaa
cs
ficom
sub
adc
mov
jmp
mov
loope
sbb
mov
push
rcr
sbb
clc
sbb
idiv
lods
retf
xchg
les
shl
xor
test
jns
and
add
repz
jle
ins
mov
sahf
jmp
call
and
inc
cmp
xchg
pop
inc
jl
cld
mov
or
sbb
adc
xchg
mov
les
pop
jl
cmp
movs
into
and
int
xlat
loopne
idiv
jecxz
shr
xor
(bad)
clc
retf
sbb
test
cmp
fcom
cmps
in
std
or
jae
repnz
jne
imul
mov
push
out
or
bound
ins
inc
ret
mov
or
inc
(bad)
xor
ja
mov
xor
cli
push
loope
cmp
jmp
or
cli
imul
mov
sahf
sbb
(bad)
fcomp
sahf
(bad)
adc
and
nop
xchg
cmp
jnp
fstp
dec
ds
jno
and
retf
enter
pop
lds
pop
pop
cld
pop
mov
inc
dec
addr16
ror
inc
call
push
push
mov
sbb
hlt
sbb
repz
ficomp
inc
call
xchg
add
xchg
leave
jge
lahf
mov
data16
fld
jo
stc
sub
les
mov
push
sbb
dec
and
div
movs
movs
shr
add
inc
cmp
leave
out
(bad)
cdq
outs
cmp
jl
inc
jb
movs
push
gs
cmp
and
push
lods
ja
mov
jo
xchg
inc
pop
and
mov
sbb
adc
mov
mov
in
arpl
or
add
into
mov
sub
xchg
popa
cmp
out
lahf
leave
leave
mov
sbb
cdq
mov
xor
or
and
movs
mov
enter
outs
jne
inc
pop
mov
aaa
jb
mov
das
sbb
leave
xor
cmp
ja
leave
sbb
fimul
test
movs
outs
inc
pop
out
lods
sahf
div
js
imul
das
(bad)
in
xchg
jbe
mov
pusha
retf
inc
cmps
jp
and
pop
pop
mov
cld
addr16
cdq
sub
mov
sbb
out
outs
mov
push
and
(bad)
add
(bad)
fst
fcom
adc
adc
adc
mov
cli
push
xor
retf
xor
and
lods
pop
adc
and
or
jmp
sbb
jge
mov
rcl
sahf
sub
shl
repz
jns
adc
cmp
and
dec
sub
dec
jp
inc
push
push
sub
jle
mov
test
push
fadd
out
mov
or
mov
xlat
cmps
pop
cmp
pop
mov
out
sub
cmp
mul
ret
movs
stc
sar
jge
or
aas
inc
and
mov
push
jmp
xchg
leave
aam
add
div
pushf
mov
cmp
cdq
movs
int3
outs
addr16
and
inc
call
fld
mov
inc
lds
xchg
jno
mov
push
xor
adc
ret
ucomiss
push
sub
inc
xor
mov
mov
pop
in
je
bound
cdq
mov
pop
jns
inc
fisttp
out
mov
icebp
mov
scas
mov
stos
lock
cmp
sbb
and
fcomp
jmp
aam
xchg
leave
(bad)
cmp
xor
xchg
sbb
fcomp
fdivr
push
int
xchg
aaa
loop
adc
out
jnp
movs
adc
call
pusha
movs
adc
mov
jnp
mov
mov
ss
pop
mov
imul
pop
das
add
in
(bad)
and
enter
and
ins
inc
mov
xor
push
ja
add
xor
push
or
xchg
push
cli
enter
and
imul
jno
mov
ficom
jl
push
adc
lods
xor
sbb
popf
retf
pop
mov
popa
and
pmulhuw
clc
(bad)
hlt
shl
and
mov
lods
xchg
fwait
xchg
jbe
test
sbb
test
sbb
scas
mov
dec
aad
pop
shr
push
loop
addr16
sti
aad
jge
jmp
retf
jmp
jmp
fadd
inc
stc
test
es
or
inc
ret
out
scas
js
jo
int3
mov
jg
fsubr
ja
popa
cmp
(bad)
into
or
inc
mov
dec
mov
xor
lods
(bad)
mov
lods
pusha
leave
jae
push
icebp
xor
(bad)
and
cmp
cli
mov
and
gs
lahf
jmp
ins
ins
mov
mov
or
aas
dec
out
test
test
leave
jnp
mov
std
mov
adc
xchg
jle
jnp
enter
and
stos
repz
fisub
fcom
xor
fadd
cmp
outs
rcr
xor
ss
fwait
push
clc
cli
mov
std
adc
or
mov
xchg
sub
and
ror
test
cld
fdiv
es
aaa
les
into
pop
adc
pop
add
stos
push
hlt
mov
adc
ins
mov
push
ja
push
jecxz
cs
shl
xchg
and
jne
sub
adc
mov
inc
mov
xor
ds
sub
fcomip
pop
cs
inc
inc
add
and
mov
mov
mov
out
cmp
sbb
cmp
fsubp
mov
mov
test
cmp
in
pop
xchg
pop
cmp
lea
inc
ret
aad
in
sub
xchg
mul
jmp
mov
jmp
mov
dec
dec
push
mov
sub
cwde
mov
mov
dec
or
and
xor
xchg
sbb
fwait
imul
push
(bad)
nop
pop
es
add
jno
(bad)
sar
dec
stc
shl
hlt
push
pop
or
fisub
pop
jmp
push
in
push
xor
je
stos
adc
pop
aaa
pop
out
xchg
inc
pop
(bad)
jp
cmp
pop
(bad)
sti
(bad)
mov
push
(bad)
and
loop
and
sbb
sub
adc
fild
test
push
pop
xor
add
jb
xor
pop
xchg
mov
mov
mov
outs
pop
jae
xor
jp
and
lods
cmp
ins
sbb
or
xchg
xchg
loope
pop
mov
ror
cld
int3
or
aad
(bad)
mov
dec
cmp
mov
sub
xor
pop
mov
xchg
jmp
mov
xchg
mov
je
pop
div
jne
fld
ror
xlat
jns
pop
loop
inc
push
lds
inc
aad
popa
mov
dec
inc
inc
loop
inc
add
ss
shl
xlat
xchg
inc
in
sahf
cmp
(bad)
jns
adc
pop
addr16
fwait
int
(bad)
xor
(bad)
or
es
iret
jl
fwait
push
bound
mov
xchg
in
repnz
test
mov
leave
sub
mov
xchg
and
mov
fwait
loop
repz
xor
aas
rcr
fadd
adc
lods
cmp
xor
sub
adc
mov
sub
push
jns
sbb
mov
mov
nop
das
xchg
sahf
xor
retf
sub
test
or
inc
hlt
adc
out
xor
jmp
out
cmp
jp
mov
and
sub
loop
mov
fdiv
div
sub
js
or
shl
fcom
sbb
mov
add
push
outs
mov
test
sbb
in
fsubp
js
cmp
mov
sahf
stc
in
add
fstp
and
dec
inc
ret
sbb
addr16
in
dec
add
cwde
stos
xor
or
icebp
and
aaa
cmp
or
and
or
push
push
mov
test
sti
in
mov
fcmovnb
mov
popf
scas
cld
lds
xchg
mov
js
dec
and
inc
adc
into
cmp
scas
sbb
iret
mov
(bad)
out
in
aam
pop
push
gs
in
cmp
mov
hlt
cmp
loope
out
es
xor
stc
sbb
dec
add
pop
mov
cmp
call
lds
movs
xor
or
pop
sub
sub
adc
pusha
mov
sbb
xor
arpl
or
adc
cmps
sbb
or
(bad)
mov
mov
in
in
sbb
push
push
shl
out
add
pop
arpl
out
dec
sub
ins
add
pop
inc
mov
or
test
(bad)
xor
gs
cmp
cwde
pop
dec
cmps
repz
sysexit
push
cmp
fsubp
add
push
xor
sbb
xchg
push
int
inc
mov
addr16
sti
rcr
mov
scas
xor
retf
push
adc
adc
push
fst
pusha
cs
int3
pop
(bad)
cmp
add
gs
scas
xor
es
or
(bad)
or
fiadd
adc
xlat
jno
inc
sar
test
int
imul
jmp
dec
loop
retf
sbb
adc
xor
repz
cli
jbe
xor
push
pop
mov
mov
jg
jle
jecxz
cmp
sbb
inc
dec
adc
gs
ds
aam
or
inc
das
xor
retf
push
into
mov
push
std
fidivr
xor
movs
les
lea
inc
mov
sub
mov
test
mov
rcl
add
in
sub
(bad)
retf
sti
and
jg
rcl
aam
repz
inc
jmp
out
mov
add
leave
or
arpl
xchg
inc
push
sub
(bad)
je
arpl
fcmovne
(bad)
movs
not
std
and
int3
mov
ficom
mov
jecxz
adc
out
ret
and
fwait
es
imul
sbb
and
push
loopne
mov
enter
pop
sti
jbe
ret
icebp
jo
test
xor
push
xor
fnstsw
ss
mov
mov
mov
and
out
adc
mov
pop
sub
and
std
mov
loop
fwait
jbe
in
in
mov
mov
jno
or
mov
push
jae
pop
xlat
xlat
out
leave
ja
sbb
sub
jne
jg
fwait
push
push
push
js
dec
repz
mov
jmp
dec
fs
xchg
fld
mov
inc
pop
lea
dec
cmc
(bad)
loope
jl
outs
adc
shl
jo
popf
test
jle
sub
test
push
daa
leave
and
mov
inc
inc
mov
adc
icebp
sub
jp
pop
xor
cli
jno
dec
imul
and
mov
ins
ja
mov
stos
pop
retf
mov
mov
ss
xchg
jno
xchg
sub
jae
aas
cmp
(bad)
adc
(bad)
aam
push
fisttp
push
fwait
(bad)
in
add
mov
inc
mov
inc
hlt
mov
jg
fisub
xchg
xchg
add
mov
jbe
dec
xor
adc
lds
fs
mov
push
repz
xchg
sar
cli
pop
jns
pop
loopne
and
lahf
jg
out
test
les
xchg
xchg
push
dec
mov
pop
pop
and
retf
push
sub
jbe
push
test
bound
std
push
leave
push
js
mov
sbb
mov
pop
add
ja
and
sbb
mov
push
jbe
movs
mov
enter
mov
inc
push
inc
into
inc
sub
in
cmp
shl
and
jns
add
gs
aam
sbb
dec
xor
stc
jbe
adc
jl
into
pop
mov
add
xchg
jno
out
add
push
(bad)
jecxz
les
dec
movs
adc
fwait
sub
sub
fs
and
scas
pushf
cli
int
xor
lds
jns
mov
and
aad
cdq
lock
jl
sti
test
popf
or
xor
aad
jecxz
sub
mov
xchg
mov
(bad)
out
aas
push
repz
dec
pop
and
sti
js
call
ds
dec
sbb
inc
mov
lock
cli
shrd
movs
xor
stos
add
mov
inc
retf
in
inc
xchg
sub
loopne
test
shl
xlat
mov
inc
fsubr
(bad)
das
pop
xchg
or
dec
adc
pop
out
jmp
jl
cmps
mov
xchg
imul
loop
inc
xchg
push
jle
repz
dec
rcr
or
loop
ins
cld
pop
sub
in
xchg
mov
ss
aad
inc
pop
cdq
inc
inc
(bad)
loope
outs
adc
xchg
pop
jecxz
fiadd
cmp
jl
jne
out
sbb
xor
clc
imul
lea
and
mov
nop
dec
jmp
popa
and
sub
pusha
loope
sbb
sbb
out
xchg
(bad)
jge
cmps
test
mov
icebp
inc
dec
stc
popa
stos
loopne
(bad)
xchg
ficomp
and
mov
mov
pop
loop
sbb
mov
stos
fsubr
or
and
add
xchg
mov
jle
push
cli
pop
mov
and
jb
ins
xchg
mov
repz
inc
mov
xchg
fsubr
retf
(bad)
dec
enter
ret
outs
cwde
popa
push
jmp
(bad)
call
add
addr16
(bad)
sbb
pop
jo
inc
retf
mov
popa
stc
adc
js
ds
cld
ret
xor
hlt
pop
inc
sbb
push
sbb
int
mov
dec
push
cmp
ins
mov
jnp
loopne
rcr
push
das
out
add
(bad)
clc
das
mov
mov
sub
adc
xchg
jl
pop
inc
sahf
aad
sub
push
loope
les
repz
cs
jb
adc
push
outs
ins
loop
hlt
jo
mov
jo
(bad)
mov
inc
rcr
adc
adc
adc
mov
pop
fimul
mul
or
mov
jns
fdivr
inc
sub
ins
loopne
in
push
fbld
xchg
jae
out
movs
add
xchg
add
int
loop
xchg
mul
mov
fcmovnbe
adc
(bad)
cli
pusha
pop
mov
cwde
mov
ret
ss
push
outs
es
mov
or
ins
adc
xchg
test
out
mov
lea
stos
or
fnstsw
jp
mov
imul
and
aaa
mov
push
xchg
loope
mov
sub
xchg
push
push
mov
in
cmp
mov
push
push
push
sbb
sub
xlat
sar
pop
icebp
or
aaa
js
push
pop
mov
mov
jns
mov
sub
xor
out
push
xor
inc
and
lahf
das
xor
xlat
cld
movs
mov
in
loop
adc
int
jne
and
and
sub
cmp
cmp
push
shl
xchg
fstp
mov
push
and
fisttp
js
pop
xchg
or
sbb
sub
push
stos
aas
xchg
add
mov
mov
ror
pop
xchg
or
rol
sub
inc
rcr
add
cmc
popa
call
mov
adc
jbe
mov
xor
pop
cli
jne
xchg
lods
out
ret
sub
sbb
mov
movs
retf
(bad)
ds
sti
es
scas
add
ret
cs
sub
das
ror
xor
fbstp
or
pop
sbb
out
sbb
mov
sbb
pushf
add
lea
(bad)
sub
sar
jo
add
fild
sbb
ja
lea
(bad)
out
lea
jne
iret
jge
sub
das
xchg
aam
or
in
jmp
mov
inc
iret
add
les
xchg
pop
outs
add
aas
push
push
cmc
cmp
call
shl
out
pop
cld
lods
iret
leave
jns
dec
pop
push
inc
dec
dec
fsubr
dec
ret
push
or
sub
xlat
and
pop
dec
(bad)
xor
dec
ficom
cmp
xor
shl
int3
push
xchg
jbe
or
int3
jmp
and
sbb
sub
mov
mov
adc
cld
ins
or
fwait
sbb
inc
leave
(bad)
data16
adc
xchg
dec
arpl
lock
sub
mov
aad
cmc
sub
push
adc
fisttp
stos
push
repz
jg
jle
into
pop
jl
out
adc
mov
retf
and
(bad)
test
xlat
inc
in
adc
daa
push
je
call
mov
rcr
push
push
je
in
jg
lahf
xchg
jl
cli
stos
pusha
dec
cmc
dec
mov
arpl
xchg
rol
shl
aam
cmp
or
clc
sub
dec
adc
mov
mov
dec
sbb
and
cmp
fld
inc
imul
sub
loope
adc
jns
(bad)
sbb
fidiv
into
xchg
cwde
sub
js
into
fisubr
fwait
dec
cmp
fld
sub
push
xchg
cmp
cmp
lahf
retf
jle
jle
dec
ins
sub
es
ss
pop
loop
les
inc
popf
loope
cwde
xor
inc
dec
jbe
push
retf
clc
mov
mov
pusha
or
mov
rol
xor
js
imul
jbe
mov
(bad)
sbb
pop
out
pop
adc
adc
icebp
rsqrtps
mov
or
adc
int3
test
mov
repz
retf
sub
sub
xchg
mov
aad
pushf
push
cmp
inc
test
jmp
inc
xchg
dec
xor
in
in
(bad)
lea
adc
sbb
jno
xor
pop
mov
test
push
pop
pop
scas
or
cli
and
jnp
push
mov
jp
xor
cmp
lock
test
bound
fnsave
add
or
leave
or
xchg
in
mov
fist
add
cmp
les
ins
out
push
pushf
mov
push
imul
pop
sahf
(bad)
dec
fisubr
add
stos
iret
stc
add
mov
adc
popa
int
call
and
and
pop
jb
jmp
pop
jl
fnstsw
jl
mov
(bad)
xor
pop
mov
adc
pop
mov
es
jb
mov
pop
cmc
inc
shl
sbb
(bad)
push
sub
push
pop
(bad)
cmp
inc
xchg
cs
fs
push
inc
sbb
inc
jle
sub
xchg
(bad)
arpl
cmp
test
repz
dec
push
jp
jecxz
cmps
stc
mov
xlat
pop
or
jo
and
lods
jecxz
pop
rol
fmul
mov
dec
inc
inc
fwait
call
inc
sub
icebp
mov
mov
call
hlt
adc
xchg
(bad)
add
loopne
scas
or
mov
inc
push
les
je
adc
xor
and
std
shl
push
push
scas
add
push
popa
cld
(bad)
call
(bad)
cwde
sub
int
cli
(bad)
xchg
mov
cmp
std
outs
jns
ja
loop
jl
shr
aas
lds
fs
pushf
sbb
inc
fstp
mov
pushf
ret
adc
pop
outs
mov
jg
js
lds
and
xchg
movs
in
call
inc
scas
imul
retf
push
outs
jns
push
dec
es
sub
cmp
call
xor
xchg
mov
fs
mov
cmp
mov
and
(bad)
xor
pusha
je
push
cld
ds
inc
cmp
xor
div
js
cmp
lea
cmp
aas
ins
or
or
bound
lods
jnp
int
(bad)
out
sbb
nop
enter
shr
push
jmp
idiv
les
xor
xrelease
cld
inc
or
ss
cs
(bad)
pusha
cmp
lds
jne
call
and
add
jg
inc
mov
in
imul
mov
inc
neg
sub
inc
bound
(bad)
mov
or
js
sbb
pop
ret
pop
cmp
and
sahf
add
cmps
in
daa
mov
nop
jo
shr
push
add
jns
popa
pop
outs
movs
jl
rcl
out
lahf
jl
push
mov
jbe
or
sub
inc
arpl
ins
xchg
xor
loopne
fwait
jmp
push
hlt
in
mov
jbe
rcl
or
loope
mov
mov
and
(bad)
jb
icebp
sbb
adc
cmp
adc
inc
sub
mov
sub
(bad)
push
stos
xchg
je
pop
or
adc
mov
sti
or
cdq
adc
xor
inc
sbb
mov
jmp
dec
dec
in
pop
jge
mov
loop
pop
mov
pop
jnp
rol
enter
mov
adc
jl
cli
(bad)
inc
and
dec
je
mov
popa
jbe
retf
sbb
add
les
fstp
sbb
push
mov
add
jb
shl
mov
cs
and
pop
loop
(bad)
and
or
test
int3
loopne
mov
inc
xor
das
sar
leave
mov
inc
mov
mov
mov
pusha
shr
mov
hlt
pop
mov
mov
fiadd
int3
stos
sub
inc
in
and
daa
ret
into
fdiv
popf
jns
lock
je
inc
and
jecxz
jecxz
dec
push
pushf
shl
mov
stc
arpl
pusha
sub
mov
jnp
cmp
inc
cmp
call
bound
xchg
mov
sub
or
int3
fwait
and
scas
pop
sub
xchg
xchg
je
cli
lock
push
adc
repnz
dec
mov
std
test
cdq
mov
jmp
stos
es
arpl
pusha
and
adc
add
nop
not
out
dec
icebp
adc
out
push
test
mov
push
repz
frstor
js
clc
daa
ins
and
mov
push
mov
pop
pop
cmp
icebp
jbe
in
pop
ja
cwde
out
and
dec
add
fwait
std
mov
je
clc
adc
push
not
dec
cwde
sahf
ins
or
cld
call
jae
xor
xlat
inc
cmps
xchg
cmp
mov
jns
dec
cmc
add
mov
lahf
fwait
imul
scas
lods
mov
mov
mul
dec
pop
push
(bad)
pop
js
ror
fyl2xp1
iret
loope
sbb
sub
fist
aad
stos
xor
push
je
jno
cmc
xchg
sbb
nop
outs
mov
ret
mov
cmp
xchg
pop
mov
jns
push
fistp
lock
xor
or
aaa
mov
mov
imul
adc
sbb
imul
pop
mov
sbb
cld
ins
sahf
push
xor
int
shl
xchg
enter
movlhps
test
mov
int3
inc
out
push
dec
xchg
inc
mov
out
mov
out
mov
xchg
sbb
fild
ins
addr16
dec
add
cli
sub
and
xchg
jb
pop
ficom
imul
mov
xchg
jbe
clc
xchg
fnstcw
sbb
loopne
sub
or
mov
and
and
xor
(bad)
mov
fiadd
(bad)
xchg
inc
mul
dec
push
mov
out
add
xchg
xor
pop
(bad)
jmp
xor
stos
and
in
cmps
sar
dec
jge
enter
cmp
add
retf
cmp
jo
loope
add
add
and
aas
pop
jl
sub
aaa
add
dec
xchg
or
mov
xor
mov
in
mov
mov
jle
mov
push
or
call
sub
xor
add
adc
jae
dec
out
sti
xor
pop
call
ins
adc
pushf
dec
div
ja
fimul
rol
fstp
add
pop
and
or
push
cmc
adc
mov
add
xchg
dec
xor
adc
mov
imul
push
fisub
in
(bad)
scas
jnp
ja
addr16
mov
ins
daa
sbb
and
pop
stos
shl
sub
xor
outs
in
movs
xor
mov
mov
test
add
sub
mov
fidivr
daa
dec
inc
mov
aad
jmp
or
adc
das
dec
aaa
mov
cmp
fistp
or
jmp
mov
pop
das
into
popa
jnp
push
and
mov
in
push
mov
imul
sub
mov
xor
add
fnstcw
stc
mov
mov
cli
test
retf
cmp
pop
lds
(bad)
int3
xchg
cmp
mov
aas
fadd
out
pop
pop
imul
push
pop
dec
int
sub
pop
xchg
into
adc
or
popa
mov
loopne
mov
sub
dec
dec
in
cmp
add
scas
pop
xchg
jp
mov
(bad)
lahf
jbe
inc
das
adc
mov
ror
ror
add
ror
call
test
add
call
jmp
xor
or
shl
or
mov
ds
out
sbb
xor
pop
sti
mov
cmps
imul
dec
test
and
cld
pop
mov
add
push
ss
gs
imul
jle
mov
jecxz
rcr
push
adc
int3
test
jb
arpl
lds
xchg
cld
lods
xchg
dec
push
icebp
push
push
cmp
pop
jp
mov
push
add
aas
jmp
faddp
lahf
jae
jb
add
fild
inc
jle
adc
ins
jecxz
(bad)
push
and
in
sub
ins
mov
iret
push
aam
push
stos
shl
sub
xor
cmps
retf
mov
inc
cmp
(bad)
jnp
out
lahf
sbb
jmp
xor
pop
mov
out
fsubr
das
daa
icebp
aad
sbb
test
mov
cs
fucomp
adc
(bad)
push
or
stos
fistp
add
sub
clc
xchg
bnd
pop
sub
jle
push
cld
test
dec
(bad)
jle
out
dec
ror
cmp
mov
sub
(bad)
fmul
adc
mov
mov
rcr
and
dec
push
sub
iret
iret
dec
popa
cmps
sahf
cs
sub
fstp
inc
fs
test
cmp
shr
(bad)
pop
mov
shl
pop
pop
xchg
stos
and
xchg
int
data16
movs
aas
pop
cmp
jb
je
mov
inc
and
xor
lea
mov
jecxz
stc
push
ins
je
or
and
fwait
stc
sub
ficomp
add
aam
out
xchg
push
mov
int
jmp
fcmovne
or
pop
or
sbb
cmp
and
push
inc
sbb
fwait
out
and
jo
in
add
xchg
ror
or
stc
(bad)
push
dec
std
popa
pop
push
add
dec
dec
xchg
aaa
js
jmp
sar
xor
add
dec
jmp
mov
or
cmp
push
cmp
jne
mov
nop
in
mov
and
into
(bad)
mov
mov
push
jg
sbb
cmp
arpl
gs
fwait
pop
mov
dec
mov
sti
jbe
mov
iret
add
jae
ja
pushf
call
cmp
mov
enter
mov
loope
test
rol
or
setb
daa
inc
retf
mov
push
fucomip
lods
(bad)
mov
sub
sbb
pop
mov
jno
push
dec
jbe
xor
pushf
sub
or
mov
stc
cwde
icebp
(bad)
xchg
dec
mov
test
test
pop
mov
ret
and
xor
ds
sbb
adc
(bad)
lock
test
sub
aad
dec
cmp
(bad)
cld
mov
cmp
or
xchg
gs
dec
add
push
jne
cmps
cli
fild
jecxz
cmps
pop
add
sbb
popf
outs
or
cmps
jns
in
sub
std
and
test
add
mov
jecxz
clc
mov
jns
jg
pop
push
dec
rol
cmp
test
lahf
ja
nop
or
mov
aad
and
push
(bad)
adc
mov
adc
sub
cmp
add
fbstp
sbb
(bad)
leave
push
outs
sbb
(bad)
(bad)
xlat
xchg
test
xchg
sti
dec
out
xchg
mov
fucomip
int3
ins
(bad)
clc
hlt
cmp
arpl
dec
shl
inc
pop
inc
xchg
push
(bad)
pop
movs
dec
jg
xor
push
sbb
sahf
sbb
ds
cmp
push
push
jnp
cmp
mov
enter
add
xchg
(bad)
push
jecxz
or
bound
mov
adc
inc
iret
lods
(bad)
dec
sbb
hlt
sbb
inc
jl
push
(bad)
(bad)
ds
sbb
xor
or
ficomp
mov
dec
ja
repz
sbb
mov
adc
jo
mov
sbb
ins
popf
add
loop
ins
rol
cmp
(bad)
push
jmp
hlt
cli
sbb
adc
jb
adc
or
or
fmul
add
sub
pusha
and
ret
ja
stos
mov
dec
pop
in
adc
mul
mov
dec
imul
daa
ins
jo
fcom
dec
pop
aas
push
or
pop
sub
dec
ja
icebp
dec
fisttp
dec
jae
push
adc
mov
mov
xor
fwait
xchg
stos
test
add
mov
out
inc
inc
add
arpl
xchg
and
jno
mov
pop
and
xchg
or
mov
and
pop
je
pop
inc
test
fdiv
mov
shr
test
pop
xor
ficom
ret
or
jae
ror
retf
es
int3
loope
and
inc
adc
push
push
dec
xchg
and
test
push
out
fisub
mov
lods
scas
repnz
fiadd
add
dec
sti
jb
pop
cmp
pushf
inc
clc
push
movs
push
inc
loopne
popa
mov
ss
sbb
aad
pop
xchg
imul
sbb
inc
std
xchg
out
loop
inc
mov
(bad)
push
mov
aam
ror
std
rcl
(bad)
adc
add
jmp
jge
inc
popf
fbld
mov
mov
jne
leave
push
arpl
(bad)
ret
jle
pop
sahf
or
lods
push
out
sbb
jno
push
xchg
xor
add
mov
mov
mov
test
jp
iret
cwde
push
or
mov
test
(bad)
jo
xor
neg
pop
call
sbb
in
std
fwait
mov
imul
xchg
pusha
cwde
xchg
lods
lock
adc
dec
add
loop
in
or
mov
and
rol
xor
mov
loop
xchg
pop
enter
(bad)
and
stos
sub
jmp
movs
or
loop
mov
js
push
repz
push
dec
mov
cmp
in
mov
ror
dec
mov
push
mov
xor
mov
ins
clc
inc
sbb
ror
inc
jp
in
movs
xor
mov
mov
xor
(bad)
scas
dec
popa
jae
ret
shl
mov
sbb
add
repz
pop
sbb
dec
mov
outs
jbe
add
aam
cwde
imul
repnz
mov
sbb
repnz
repnz
rsqrtps
outs
inc
push
(bad)
stos
inc
fucomi
or
add
sahf
cmp
xor
push
cmp
or
int
loopne
or
test
xchg
dec
call
xor
hlt
inc
pop
mov
in
inc
clc
sahf
pop
in
jle
fcom
and
dec
sub
nop
int
push
sbb
fisttp
cmc
and
cli
inc
mov
leave
mov
mov
cwde
add
xchg
sahf
mov
cmp
cmp
sbb
and
sti
outs
das
mov
inc
or
sub
mov
(bad)
in
push
(bad)
push
xchg
inc
stc
test
(bad)
movs
rcl
and
mul
loop
or
ss
and
pop
popa
addr16
cld
gs
inc
ss
and
jmp
add
sbb
cli
fnsave
xor
inc
aaa
pop
outs
dec
push
stos
push
and
mov
sbb
pop
cld
xchg
xlat
rcl
fnstsw
inc
push
gs
lea
test
add
push
lea
es
lock
stc
dec
add
aad
xor
mov
mov
push
jae
cld
cmp
paddd
mov
inc
pop
pop
inc
out
hlt
call
fcom
sbb
jmp
je
jle
shr
dec
jp
push
es
iret
pop
fsubr
dec
pop
inc
mov
aas
or
push
cmp
dec
test
jmp
and
ror
(bad)
int
xor
iret
in
scas
sbb
loopne
dec
imul
mov
mov
jmp
push
push
add
xor
scas
dec
pop
jmp
jno
mov
push
mov
in
fwait
push
scas
mov
mov
sbb
jp
fisubr
sub
into
mov
mov
or
xchg
movs
lock
dec
outs
gs
cmp
sub
int3
cld
cdq
(bad)
mov
test
and
test
test
js
push
sub
das
fnstcw
cmp
sub
pop
rol
pop
jne
mov
jmp
lods
xchg
sbb
movs
pop
dec
push
in
pop
pop
jg
mov
sahf
xchg
xchg
adc
cmps
xor
inc
mov
fdivr
pop
dec
push
in
mov
push
xor
and
or
arpl
rcl
sub
sbb
sub
push
out
stc
lds
xlat
fcmovnb
mov
xor
add
repnz
imul
repz
jp
ss
popa
das
sbb
repnz
movs
aas
cli
or
cmp
xchg
ror
test
xchg
or
out
adc
and
dec
mov
test
xchg
push
(bad)
add
int3
pop
es
pop
jmp
xchg
and
push
mov
dec
adc
jb
push
je
jnp
cmp
xlat
fstp
mov
in
push
not
ins
inc
jae
ror
mov
or
add
push
inc
(bad)
aaa
fild
(bad)
and
or
add
push
inc
pop
mov
jmp
in
mov
ins
jb
into
fwait
cmp
dec
pop
fstp
jp
mov
push
xchg
fild
outs
(bad)
call
daa
sub
xor
shl
cmp
mov
add
sub
cdq
loop
add
std
mov
or
inc
adc
fistp
inc
enter
gs
push
pushf
in
aaa
jno
sti
loopne
mov
xchg
shr
stos
dec
xor
push
pop
xchg
xchg
xchg
jo
pop
loop
test
fsub
(bad)
cdq
pop
movs
enter
pop
dec
sub
(bad)
int
pop
outs
inc
cs
std
lea
dec
mov
mov
mov
xor
pop
mov
or
pop
in
dec
cmp
sub
jmp
fs
mov
sbb
pop
inc
sbb
aad
xchg
jle
mov
sbb
jne
add
lds
movs
call
imul
movs
ror
jmp
sbb
sub
in
outs
(bad)
pop
fimul
lahf
sbb
inc
call
repnz
ins
and
call
ret
add
fs
push
dec
inc
inc
frstor
leave
and
or
dec
cmp
adc
jl
jp
out
sbb
xchg
pusha
mov
jbe
loopne
sbb
or
mov
mov
xchg
jge
fwait
mov
and
xchg
fistp
cwde
mov
jmp
xor
sbb
cld
mov
push
cmc
inc
and
(bad)
cli
push
jecxz
push
into
pop
jle
ins
sub
xchg
and
test
mov
int3
or
es
pop
jno
cld
sub
jp
js
sahf
sub
dec
scas
loope
pop
xor
jle
stos
pop
data16
or
mov
push
cmp
outs
sti
ss
lds
xchg
inc
stos
mov
inc
bswap
nop
shl
mov
rcr
aas
sbb
and
mov
and
std
data16
das
int3
mov
inc
test
(bad)
idiv
xchg
xor
pop
and
aam
inc
inc
das
mov
or
aam
inc
(bad)
jmp
ret
mov
outs
pop
bound
int
add
test
push
mov
pusha
sar
inc
clc
cmp
ret
int3
int
ins
inc
xor
or
cmp
std
leave
ins
cmps
leave
pop
push
push
pop
je
xchg
push
jl
cmp
sub
or
push
or
out
cmp
pop
mov
pop
push
(bad)
mov
test
std
(bad)
test
or
div
rcr
push
jmp
sub
dec
shl
or
fistp
inc
jno
xor
or
aaa
and
inc
lahf
fldenv
stos
inc
jmp
mov
push
sti
sub
fbstp
(bad)
aas
inc
fbstp
add
outs
shl
stc
sbb
test
out
push
sbb
push
xchg
jl
inc
add
aaa
fmul
dec
jmp
ret
xchg
jl
cmps
push
sbb
inc
sbb
imul
or
cdq
inc
mov
jb
int3
cdq
cmps
cdq
mov
cmp
ffreep
adc
stos
push
mov
push
gs
xor
add
add
inc
push
jl
pop
loop
js
pop
stc
scas
push
pop
inc
cmc
sbb
into
xor
jecxz
jmp
fs
jne
fwait
repnz
mov
jnp
mov
cmp
xchg
adc
xor
ss
rol
pop
dec
sub
inc
cwde
jb
sub
repnz
jae
mov
pop
or
or
call
xor
bound
nop
cld
(bad)
shr
xchg
fcomp
jo
xor
mov
rcr
scas
outs
pop
or
dec
inc
xchg
push
push
lahf
mov
(bad)
(bad)
sub
sub
push
fcom
dec
add
sub
jne
pop
xor
jmp
cmp
mov
in
and
xor
(bad)
jo
adc
int
pop
push
les
aaa
push
push
add
popa
push
int
jno
jae
mov
xchg
sbb
outs
test
jo
loop
scas
test
out
jo
lods
ja
xlat
add
aam
xchg
movs
or
xlat
add
mov
cmp
sub
adc
dec
test
push
xor
fcomp
inc
inc
mov
ror
add
leave
jle
push
int
jge
mov
cmp
icebp
loopne
sub
scas
or
push
inc
jnp
inc
mov
cmps
and
inc
aam
pop
jno
adc
jecxz
push
mul
cdq
ud0
test
xchg
mov
fwait
addr16
or
mov
bound
pop
sbb
lods
shl
sub
or
add
xor
movs
arpl
mov
test
ror
movs
xlat
enter
imul
in
jg
call
les
add
retf
and
(bad)
dec
cmp
lahf
ds
fs
pop
add
rol
adc
adc
xchg
cmp
ss
push
push
and
jnp
cmp
test
pushf
popf
out
push
jl
mov
pop
or
inc
gs
and
cli
jo
push
or
aad
push
cs
mov
xchg
mov
jno
in
aam
pusha
push
dec
adc
jmp
out
mov
cmp
inc
fidiv
adc
out
pop
mov
jmp
mov
push
(bad)
jmp
mov
loop
gs
mov
jmp
or
fild
xor
pop
xchg
std
sub
fcmovnu
cmps
lahf
xor
mov
sbb
adc
adc
sub
or
dec
push
sbb
xor
jns
ficomp
fs
jne
and
test
or
(bad)
jmp
mov
js
jb
or
nop
mov
popf
push
pop
and
out
pop
lods
out
and
mov
cli
mov
adc
add
lods
pop
je
jmp
popa
xchg
inc
je
ja
ja
dec
push
lahf
aaa
dec
(bad)
outs
cmps
fadd
inc
pushf
xlat
jg
cld
sbb
xchg
pop
cdq
retf
cmp
add
dec
(bad)
mov
push
or
cmc
ret
or
cwde
shr
mov
inc
ds
lock
enter
pop
adc
jns
or
push
mov
mov
mov
subps
push
loopne
cmps
mov
mov
or
pop
add
lea
mov
xlat
pusha
cld
(bad)
out
push
ss
sbb
cmp
lea
js
pop
mov
std
inc
push
enter
pop
loop
mov
jl
mov
test
(bad)
cmp
fst
jp
cmp
push
cmps
aam
pop
lods
lock
out
popf
into
or
out
xchg
add
fst
xchg
adc
dec
clc
mov
add
jecxz
sar
mov
pop
push
ret
adc
lods
pushf
cs
xchg
lock
stc
or
cmp
mov
mov
push
xchg
xchg
xchg
dec
es
ins
adc
fild
lods
or
mov
icebp
rcl
xchg
imul
and
mov
pop
jp
fwait
push
test
aad
popf
and
cmp
add
jbe
add
mov
mov
es
shl
shl
fwait
pop
jmp
cmps
add
or
shl
jb
xchg
pop
dec
cld
in
lds
in
mov
push
ins
out
push
test
mov
inc
jbe
add
cmp
fs
push
scas
or
cs
cmp
movs
push
outs
fimul
fst
adc
or
fs
fdivr
jp
mov
(bad)
mov
data16
or
jo
add
fsub
pop
or
sbb
jl
push
cmp
jmp
jbe
add
stos
and
or
mov
mov
add
mov
mov
vpandn
jl
mov
cmp
jns
stc
mov
jnp
pop
mov
int
arpl
(bad)
adc
repz
test
fist
jmp
sub
jmp
add
dec
jbe
imul
(bad)
stos
mov
mov
repnz
je
pop
xchg
cmp
inc
or
xor
sub
(bad)
mov
test
cmp
xchg
xor
inc
aam
aaa
push
inc
shl
out
pop
jnp
stos
jb
sub
pop
mul
aas
dec
loopne
fadd
mov
sar
and
mov
inc
(bad)
inc
fist
loope
rcr
mov
sahf
int
shl
repnz
aaa
adc
movq
fld
mov
push
stos
sub
add
cmc
sbb
jmp
cmp
inc
lahf
out
dec
cmp
xlat
add
dec
jmp
jg
add
xor
fistp
push
inc
and
int3
nop
pop
jne
shl
jns
dec
mov
mov
xor
lock
(bad)
test
inc
jae
stos
outs
sbb
push
inc
and
gs
xlat
push
(bad)
enter
pushf
sbb
ds
in
inc
popf
xchg
aad
mov
push
add
jle
mov
pop
add
test
test
rep
test
aaa
push
mov
dec
mov
in
jo
popa
retf
test
mov
mov
mov
push
jg
xor
lods
clc
jmp
mov
mov
out
cs
cwde
or
stos
cdq
push
xor
cmp
add
mov
es
mov
pop
adc
iret
fdivrp
ins
push
mov
and
jnp
test
out
shl
jmp
jg
adc
scas
call
or
push
sub
stos
sbb
cmp
pop
cmp
pop
hlt
xchg
mov
sbb
pop
out
inc
stc
ja
into
jmp
repz
sbb
je
xchg
push
lods
sbb
pop
in
push
xchg
mov
movs
pop
mov
enter
sar
clc
sbb
xor
shr
enter
mov
into
outs
and
mov
sub
(bad)
pop
call
xchg
mov
push
test
mov
push
push
pop
xor
mov
std
popf
inc
add
fsub
sub
push
(bad)
xor
xchg
push
js
aas
cs
dec
ins
jb
into
fdiv
sub
push
test
inc
mov
or
fs
(bad)
fldcw
inc
ins
stos
jns
mov
aad
or
je
ds
loop
xor
mov
fsubr
mov
sub
es
inc
and
add
repnz
pop
cmps
mov
mov
push
inc
shl
scas
mov
fdiv
add
adc
cmc
sar
jo
movs
int
mov
xchg
data16
jp
je
push
std
js
iret
sub
fwait
repnz
jnp
ret
adc
mov
test
jb
dec
and
int3
test
inc
xchg
jae
pop
fist
sub
lods
and
jae
push
pop
xchg
xchg
push
cs
repz
inc
rol
sar
ret
mov
xor
leave
pop
addr16
shl
(bad)
fincstp
loope
out
mov
push
sahf
arpl
xchg
sbb
or
xor
xchg
or
lahf
add
(bad)
in
in
adc
add
stos
into
mov
xor
or
sbb
inc
dec
(bad)
cmp
repz
stos
xchg
das
inc
mov
in
je
push
pop
xlat
nop
sar
imul
dec
inc
idiv
stc
cmp
div
cmp
jecxz
cmp
inc
shl
inc
scas
pushf
(bad)
daa
in
sub
in
inc
sub
fst
aaa
pop
push
retf
test
or
clc
jae
rcr
mov
adc
out
push
or
aam
repz
or
inc
loopne
inc
stos
ins
adc
sub
mov
mov
out
mov
pusha
stos
sbb
pusha
inc
jg
xchg
mov
dec
jno
jno
inc
cmp
xor
cmp
popa
push
add
sbb
cmps
ins
std
inc
jno
dec
push
es
inc
sbb
sub
adc
shl
xor
xor
cmp
ins
(bad)
fstp
out
sbb
inc
and
mov
push
test
test
cld
xor
and
mov
fwait
sahf
sbb
xor
mov
add
mov
mov
xor
mov
mov
das
cmp
(bad)
push
inc
nop
cwde
lahf
cmp
jge
mov
fistp
ret
test
rol
sbb
and
mov
xor
xchg
std
push
and
and
push
mov
add
in
sbb
out
jp
jge
sub
adc
push
dec
jge
out
mov
sbb
in
jnp
fsub
sbb
jae
hlt
dec
ss
rcr
mov
xchg
xor
rcr
retf
popa
jno
xchg
xchg
test
lds
out
mov
es
fnstsw
shl
add
inc
xor
adc
imul
loope
enter
hlt
(bad)
xchg
pop
repnz
adc
xor
adc
mov
jge
inc
(bad)
push
inc
fdivr
lahf
adc
dec
out
ins
lea
hlt
mov
repnz
aaa
mov
sub
pop
or
popf
cdq
iret
jns
adc
enter
pop
loopne
jmp
repz
push
jne
shr
mov
sub
xchg
dec
push
cmps
jbe
daa
je
mov
and
or
jp
stos
fistp
xlat
add
mov
out
popa
gs
aaa
mov
popa
cmc
call
pop
stc
jecxz
in
xor
adc
push
jp
fstp
pop
jle
xrelease
mov
push
inc
arpl
push
xor
fnsetpm(287
push
xchg
fmul
(bad)
imul
call
je
aam
bound
int
dec
(bad)
pop
dec
cwde
fadd
lods
cmp
outs
mov
mov
jmp
or
inc
div
or
in
cmp
out
cmp
inc
call
xor
inc
js
push
sbb
adc
out
(bad)
imul
push
sbb
mov
test
sub
(bad)
out
neg
lahf
cdq
mov
retf
jmp
mov
xchg
into
xor
mov
inc
into
pop
and
cli
jp
inc
xchg
in
mov
jne
(bad)
push
cmps
add
xchg
(bad)
sar
cdq
pop
mov
fcomp
fdivr
pop
outs
xor
xchg
bound
or
loopne
and
xchg
ins
lods
imul
sti
dec
xor
mov
xchg
add
daa
fidivr
adc
aas
fnsave
fistp
aad
cmp
sbb
in
fdiv
daa
adc
inc
and
dec
aas
jb
test
(bad)
xor
pop
sbb
or
adc
and
push
inc
pop
test
xor
outs
or
jns
pop
cmps
jg
outs
pop
lds
cmp
jns
ins
pop
jle
imul
scas
cli
fdiv
clc
loopne
lea
xbegin
xchg
sub
pop
mov
call
loopne
into
mov
dec
jne
xchg
loope
mov
cwde
loope
fst
push
aam
pop
or
mov
push
adc
jle
add
cmps
or
jle
adc
push
fcom
lods
rol
sbb
fist
xchg
out
std
jno
bound
or
sub
fwait
icebp
mov
xchg
sti
das
sub
pop
sub
loopne
(bad)
xor
test
shr
add
push
imul
sub
(bad)
ret
mov
cmp
xor
jg
lock
call
adc
xlat
je
dec
jns
aam
add
in
push
inc
adc
pop
dec
xor
mov
cmp
or
inc
out
stos
stos
push
out
inc
xchg
sub
aam
mov
inc
xchg
inc
nop
pop
imul
jbe
mov
sbb
hlt
popa
sbb
pop
call
pop
cmp
loopne
ins
iret
xlat
fwait
rcr
hlt
and
jge
fbld
sub
std
xchg
repnz
imul
fcomi
xor
pop
lods
inc
adc
add
shr
and
int3
mov
cmp
dec
pop
outs
sub
mov
fsub
mov
xchg
popf
or
clc
fmul
adc
mov
inc
sbb
mov
ins
pop
jecxz
mov
dec
cmp
jo
xor
sti
mov
add
xchg
imul
lods
xor
jns
nop
sub
push
retf
adc
and
sahf
jb
push
or
into
jp
sbb
js
loop
dec
and
mov
pop
addr16
mov
mov
call
in
lds
push
mov
mov
mov
mov
mov
call
inc
jmp
mov
shl
push
retf
mov
mov
jge
mov
cmp
fmul
cdq
mov
fcmovu
inc
or
add
jb
jge
mov
push
jns
add
adc
aaa
pop
pop
(bad)
cmp
pop
jg
rol
push
push
jo
pusha
fwait
mov
data16
stc
cmps
pusha
bound
mov
pop
cmp
dec
icebp
(bad)
stos
sti
test
dec
mul
jns
popf
jnp
arpl
mov
repz
pextrw
xchg
and
inc
les
mov
out
test
xor
les
cs
nop
sti
das
shr
scas
gs
icebp
call
sub
hlt
fs
pop
ror
cmc
imul
imul
repnz
clc
mov
(bad)
jg
pop
iret
div
lock
dec
adc
rcr
repz
mov
inc
dec
pop
add
and
aas
jb
inc
popa
mov
add
sbb
add
mov
xor
pop
in
call
xchg
xchg
jecxz
movs
xchg
mov
and
jl
cmps
scas
inc
push
and
inc
jb
and
mov
mov
ror
xchg
xchg
and
sub
jbe
ret
sbb
jo
aaa
add
push
or
and
bound
(bad)
aam
fdivrp
inc
int3
mov
clc
cmp
xlat
xor
pop
xchg
dec
mov
test
jmp
and
sbb
inc
fcmovnu
loop
jl
mov
mov
pop
adc
test
adc
add
or
jp
das
not
push
popa
stc
inc
ja
jecxz
scas
and
loopne
lds
rcr
aas
inc
add
movs
pop
add
jae
add
adc
inc
pop
das
ret
(bad)
add
cmp
(bad)
(bad)
je
xlat
adc
adc
mov
(bad)
push
pop
add
dec
jne
push
push
add
retf
frstor
sbb
retf
or
(bad)
aam
dec
push
shl
mov
jp
into
sbb
pop
pop
aas
sub
in
aas
mov
cmps
push
xor
pop
call
mov
test
mov
and
jmp
ret
xlat
jmp
aad
and
xchg
(bad)
mov
mov
pop
jb
ins
je
lds
push
mov
adc
outs
fist
mov
cmp
jnp
mov
sub
cmps
mov
add
and
stos
mov
mov
shl
add
jns
imul
sub
jmp
adc
adc
rep
inc
mov
(bad)
adc
nop
repnz
pop
call
pop
in
pop
xchg
leave
enter
(bad)
inc
mov
cmc
dec
jnp
and
scas
add
cmc
cmp
daa
and
pop
push
mov
aas
cmp
les
fiadd
sub
aaa
les
mov
or
jp
lods
(bad)
adc
mov
bound
retf
int3
je
je
ja
jb
stos
cmp
fwait
and
push
sub
stos
push
jbe
lock
push
aas
xor
mov
and
aas
inc
xchg
shl
pushf
inc
out
mov
sbb
ret
inc
xor
add
or
sbb
mov
out
sar
push
cmp
xor
fldenv
in
push
dec
movs
test
and
push
adc
sbb
and
pusha
sbb
or
sbb
int3
jae
cmove
sbb
imul
inc
mov
std
jl
rol
cdq
les
leave
dec
mov
(bad)
pop
(bad)
mov
and
or
xlat
xor
jno
in
pop
shl
add
js
xchg
and
cmp
sub
in
ret
movs
sbb
adc
xchg
pop
adc
dec
jno
jo
mov
and
add
test
stos
pop
adc
adc
sub
adc
mov
mov
(bad)
mov
mov
out
aad
and
push
imul
mov
push
ret
pusha
fidivr
cli
rcl
sub
or
int
inc
jae
cmp
ins
in
imul
sbb
mov
push
out
lahf
sti
test
mov
jb
jne
cli
dec
sub
pop
jle
cmp
clc
jp
inc
adc
sub
push
adc
xor
inc
scas
loop
push
retf
(bad)
fadd
call
dec
fst
test
scas
repnz
inc
xchg
push
add
dec
repnz
cli
dec
ja
add
push
mov
cwd
ss
or
lods
lds
or
inc
jmp
mov
dec
loope
scas
aad
aad
cmp
add
sub
ror
adc
jno
stos
mov
inc
jp
loopne
mov
mov
sbb
inc
imul
jae
cmp
pop
jecxz
arpl
sub
in
mov
adc
fcom
cmp
in
mov
mov
xchg
and
retf
adc
out
xlat
jle
bound
lahf
dec
xchg
movs
mov
xor
aaa
xor
mov
cld
push
mov
add
outs
fwait
jns
push
mov
cmp
dec
or
xchg
dec
sbb
mov
cmc
imul
fild
inc
dec
push
cwde
nop
xor
dec
aaa
ret
cdq
mov
call
cld
stos
pop
pushf
pop
scas
jno
enter
fisttp
sbb
int
adc
sub
arpl
les
addr16
movs
repnz
inc
dec
cmp
push
jl
mov
push
sub
test
ss
ds
pushf
stos
ins
mov
mov
xor
pop
ja
push
and
pop
addr16
adc
jno
addr16
inc
xchg
xchg
add
mov
inc
jmp
add
outs
adc
daa
push
shr
inc
and
clc
ins
stos
test
mov
mov
xlat
xchg
jg
shr
sbb
test
imul
push
ins
fdiv
jns
(bad)
jmp
pop
mov
jb
adc
push
pop
push
or
nop
xor
pop
test
cli
cmp
enter
int3
imul
jno
enter
jle
stc
mov
pusha
dec
pop
mov
push
xor
pop
mov
adc
fild
pusha
sub
mov
jb
pop
dec
stc
or
mov
aaa
icebp
ror
jb
fiadd
ror
xlat
pop
mov
ret
cmp
cmp
outs
mov
or
sbb
cmp
jns
aam
or
or
push
jle
add
mov
pop
mov
lahf
inc
fcomp
xchg
das
aas
not
retf
mov
(bad)
cmp
cmp
jmp
push
or
inc
outs
xchg
jle
aam
retf
leave
pop
or
fptan
les
arpl
in
jne
bsr
inc
xor
retf
xchg
or
sub
mov
pop
pop
jmp
out
out
pop
ds
pop
inc
enter
pop
(bad)
fdivr
jb
es
rcr
int
jnp
fdiv
outs
sub
xor
inc
push
mov
scas
cmc
popa
je
retf
push
mov
jmp
cmp
pop
sbb
pop
imul
jp
adc
or
jl
mov
call
jno
pop
push
je
xor
fdivp
jns
ins
push
das
adc
mov
inc
xor
push
outs
es
xchg
adc
cli
add
in
int3
dec
in
jnp
jg
xor
mov
movs
jl
inc
cmp
inc
fiadd
std
cwde
adc
xchg
loopne
scas
xchg
adc
loope
mov
or
fcom
cmp
xchg
hlt
inc
cmps
test
mov
add
gs
jae
cmp
pop
into
pop
mov
inc
adc
xor
inc
retf
pop
dec
mov
mov
test
int3
or
xor
mov
addr16
xor
ss
pusha
jg
in
in
add
fcomp
data16
sub
adc
sub
pushf
dec
push
mov
jae
cld
test
imul
xor
jg
leave
xlat
push
or
dec
loope
xchg
xchg
pushf
lahf
pop
or
and
mov
cmp
getsec
adc
dec
and
es
push
pop
imul
jae
es
xchg
and
mov
lahf
clc
xchg
fwait
jbe
push
xchg
jl
addr16
xchg
or
leave
inc
loop
sub
dec
scas
ret
mov
xor
mov
jb
into
sbb
call
loop
or
sbb
mov
inc
fs
and
pop
out
leave
lods
or
xlat
sub
lea
and
pop
mov
gs
jae
pop
enter
gs
push
popa
inc
or
shl
cdq
and
push
cmp
push
stos
mov
out
retf
lea
out
adc
mov
sbb
shl
xor
dec
sub
retf
fmul
xchg
dec
add
mov
repnz
aam
xchg
aaa
cmps
xor
sbb
sub
aaa
adc
out
out
and
mov
sub
xchg
(bad)
and
clc
sub
and
dec
add
cwde
movs
int3
popf
(bad)
mov
gs
mov
cld
rcl
add
sbb
out
and
scas
adc
add
fsubr
clc
xchg
mov
out
nop
nop
daa
sbb
in
rcr
push
mov
sti
(bad)
out
test
dec
pop
mov
jge
repz
cmc
jnp
lods
hlt
jmp
ss
cmc
push
xchg
cmp
adc
das
sbb
push
jmp
lea
xor
xlat
or
ds
add
pushf
inc
inc
loope
sbb
dec
or
fnstenv
(bad)
xchg
addr16
xchg
mov
dec
cmp
cmpps
mov
fs
pop
mov
pop
div
mov
into
lahf
pushf
cmc
jo
fcom
adc
jno
int3
test
test
mov
xor
ins
stc
idiv
cmp
mov
into
xor
mov
icebp
dec
sub
movs
imul
inc
jb
cmps
fwait
mov
push
movs
inc
test
xchg
ins
lea
(bad)
xchg
test
out
xor
add
sbb
ror
cmp
mov
mov
inc
arpl
mov
sbb
fild
xchg
inc
mov
pop
rcr
or
retf
jp
jne
jmp
setnp
out
shr
fcmovnu
mov
pop
xlat
ins
sahf
push
dec
jge
cmp
fadd
mov
pop
mov
mov
push
addr16
lods
sub
mov
push
leave
idiv
retf
or
pop
xchg
dec
call
(bad)
mov
add
jae
jno
enter
add
retf
outs
dec
adc
xchg
fisubr
add
fs
jle
mov
out
cmc
xor
stos
out
add
arpl
adc
add
xchg
(bad)
ds
fldenv
out
adc
outs
cmp
inc
jns
pop
call
std
inc
push
adc
loop
sbb
mov
movs
jg
sub
dec
add
call
les
mov
xchg
sbb
call
std
fnsave
xchg
xor
xor
mov
adc
dec
jbe
push
mov
inc
(bad)
rcl
dec
repnz
inc
cmps
fistp
pusha
and
retf
push
int3
mov
sbb
icebp
mov
iret
mov
pop
push
or
daa
scas
and
lods
inc
in
int3
test
xchg
sbb
dec
ficomp
mov
(bad)
pop
popa
push
xlat
add
jns
movs
(bad)
(bad)
dec
add
xchg
dec
shl
dec
int
add
inc
imul
lods
rcr
adc
call
sub
or
(bad)
(bad)
mov
mov
adc
iret
cmps
or
mul
(bad)
xchg
fisttp
pop
iret
pop
popf
(bad)
or
enter
mov
jbe
jo
adc
movs
(bad)
arpl
mov
xor
out
ins
push
mov
test
test
mov
cmp
fdivp
movs
test
lahf
xchg
out
mov
dec
mov
mov
arpl
mov
mov
mov
inc
xchg
dec
xor
mov
lods
add
mov
gs
inc
call
cli
(bad)
mov
in
fcmovne
dec
les
mov
xor
inc
daa
push
lds
retf
add
xchg
mov
push
xchg
(bad)
pop
cli
and
repz
sbb
sahf
mov
push
adc
pop
mov
stc
pop
xor
inc
inc
mov
mov
sbb
imul
in
xor
fst
fdivr
aas
and
mov
jge
pushf
(bad)
push
and
mov
out
or
mov
clc
iret
test
sub
loopne
fmulp
movs
push
sub
in
mov
cmp
pusha
js
or
jmp
mov
xchg
sub
fstp
push
shl
rcr
sub
cdq
ss
cmp
data16
fcmovbe
adc
and
cli
movs
(bad)
sti
rcl
jmp
pusha
mov
shl
or
(bad)
icebp
or
jbe
out
ror
sbb
das
push
push
inc
xlat
iret
mul
fimul
(bad)
in
dec
into
inc
in
shl
jmp
or
dec
movs
outs
dec
stc
xchg
jle
push
sub
(bad)
xlat
rol
xchg
jge
mov
mov
hlt
push
cmp
shl
push
jmp
adc
daa
sbb
xchg
inc
idiv
lods
push
inc
push
push
fs
sbb
rcl
mov
aaa
scas
(bad)
into
cmp
inc
dec
jns
push
(bad)
les
xchg
stos
fistp
dec
cmp
push
nop
pop
fild
mov
mov
jo
loopne
mov
mov
adc
xor
std
in
bound
mov
scas
aam
clc
ins
imul
push
clc
mov
out
call
clc
daa
sbb
mov
add
into
inc
les
mov
stc
sub
pusha
sar
mov
xlat
sub
out
repz
call
(bad)
xor
cmps
in
out
ss
shr
dec
dec
dec
es
xchg
xor
xor
lods
pop
push
(bad)
leave
retf
imul
and
jns
in
cdq
loope
dec
pop
movs
jl
mov
movs
xlat
int3
enter
scas
shr
jmp
aam
sbb
in
shl
out
retf
or
(bad)
mov
sub
icebp
pusha
sub
pop
pop
cmps
xchg
outs
je
daa
and
aam
out
stc
aam
clc
int3
pop
mov
jl
xchg
xor
dec
(bad)
jnp
inc
mov
xor
jge
xor
scas
scas
cs
xchg
(bad)
dec
add
and
icebp
add
icebp
dec
jg
adc
pop
push
cmc
call
int
call
mov
add
mov
jbe
jl
cli
dec
jmp
dec
mov
mov
stos
test
push
push
outs
and
pop
jo
or
mov
pop
mov
push
neg
call
sub
or
dec
pop
enter
add
inc
loope
ror
dec
adc
imul
scas
cmp
inc
mov
inc
gs
dec
aad
retf
movs
jg
mov
imul
or
mov
dec
cmp
(bad)
shr
das
adc
call
xchg
push
cmp
push
call
dec
xchg
cmp
scas
movs
dec
and
mov
gs
and
fnstsw
jmp
mov
mov
xor
jl
jecxz
inc
gs
cli
mov
cwde
call
pop
out
mov
xchg
push
dec
pusha
xchg
rol
mov
pop
(bad)
lsl
jmp
icebp
aas
push
adc
add
jne
lds
push
mov
mov
sub
popf
les
das
xor
lea
push
leave
push
push
push
or
(bad)
cmp
push
pop
xor
sub
pop
jmp
sbb
push
sub
adc
or
in
sbb
mov
pop
int
lahf
jp
cmp
and
stos
xchg
pop
cmps
mov
xchg
mov
push
inc
push
outs
jmp
add
icebp
mov
out
sbb
in
sub
outs
or
xchg
push
mov
mov
dec
icebp
in
movs
ret
jae
retf
xchg
mov
or
repnz
sbb
test
add
nop
mov
inc
rcr
add
xlat
mov
movs
inc
jno
sbb
cmp
test
mov
loopne
hlt
adc
pop
jp
xchg
push
not
ins
(bad)
(bad)
jle
push
imul
mov
pusha
dec
xchg
std
jo
jbe
into
sbb
pop
pop
and
bound
xchg
(bad)
mov
(bad)
fldcw
into
pop
(bad)
push
scas
shl
mov
(bad)
daa
xor
cmc
cld
xor
pop
(bad)
out
aas
and
imul
shr
fs
xlat
mov
cmp
sbb
or
add
mov
xlat
mov
adc
popa
mov
je
jno
loopne
aam
outs
and
pop
das
sbb
in
mov
add
fcom
push
(bad)
in
and
shl
bound
enter
and
inc
xor
mov
inc
sub
ret
cdq
jae
clc
cmps
enter
cmc
leave
mov
fld
mov
test
mov
scas
fmul
add
les
mov
(bad)
mov
ret
mov
or
xchg
cdq
leave
xchg
arpl
dec
xchg
ds
popf
dec
mov
cmp
das
mov
popa
sub
in
pop
mov
sub
inc
inc
xchg
fisub
jp
repz
add
jg
sti
jae
aam
and
xchg
cli
out
cld
lahf
cmp
sbb
push
mov
mov
mov
jnp
dec
inc
inc
popf
lahf
xor
lods
sti
mov
(bad)
dec
popf
push
xchg
mov
je
lahf
fwait
dec
and
or
ins
jbe
adc
push
jg
jne
push
fst
xor
push
xlat
ins
push
jmp
(bad)
cli
xor
mov
pop
jns
xor
dec
xchg
sub
call
cmp
mov
sar
cmps
inc
sbb
fiadd
fdiv
pusha
stc
sub
push
sbb
ins
or
sar
out
push
cmps
mov
dec
ret
movs
out
mov
call
sub
inc
shl
repz
push
andps
fidivr
repz
loope
sbb
jp
aad
xor
cli
xor
sub
inc
jle
test
or
mov
or
sub
add
stc
rcl
push
das
shl
test
push
shr
inc
sbb
fild
xor
push
scas
sbb
pop
pusha
or
inc
mov
cmp
sub
cmps
push
(bad)
and
aas
xor
push
fdiv
outs
jmp
or
popa
mov
inc
mov
and
aaa
jecxz
nop
nop
jp
rcl
ret
dec
stos
and
setns
jge
std
popa
rol
aaa
sbb
call
aas
and
cs
sub
adc
and
lea
jae
cmps
cmps
scas
add
pop
cmc
ds
lods
stos
nop
inc
push
into
cmc
out
in
sub
or
inc
cs
and
test
pop
stos
and
ja
cmps
jno
mov
fcom
xchg
(bad)
xor
mov
mov
xor
adc
imul
jnp
fadd
std
lock
pushw
dec
jl
aad
adc
adc
push
int
sub
idiv
cld
sti
pmovmskb
mov
mov
cmps
cld
mov
mov
mov
sbb
in
jbe
test
or
push
xchg
add
js
lods
movs
pop
pop
cmp
sahf
scas
sbb
in
loope
stos
mov
pushf
inc
je
mov
in
adc
fs
ds
nop
lods
jno
sbb
inc
xor
push
xor
add
inc
out
pop
cmp
pusha
sub
mov
dec
adc
or
adc
in
pop
mov
mov
mov
rcl
cld
mov
ret
adc
add
xchg
push
aad
popf
fdiv
push
push
sub
mov
fisub
dec
fcomp
scas
mov
test
ja
imul
lds
cmp
pop
jg
not
sahf
cli
pop
stos
sbb
outs
cdq
inc
jb
or
mov
movs
into
sahf
mov
iret
in
lods
dec
packsswb
repnz
dec
rol
das
xor
pop
jne
lods
mov
xor
pushf
in
in
in
xchg
neg
stc
xchg
fistp
sub
xor
leave
ss
outs
mov
mov
loopne
sub
jno
xchg
rcr
rcl
and
push
popa
adc
out
mov
jg
mov
fwait
mov
arpl
popa
sbb
xor
dec
div
sub
bound
add
aas
cmp
sub
jo
call
fist
shl
mov
ret
jno
jne
adc
neg
xor
out
cmps
mov
div
ja
and
test
inc
loope
out
or
mov
int
push
add
sub
or
movs
retf
sub
(bad)
and
or
xor
cwde
adc
in
add
push
retf
not
mov
dec
cmps
(bad)
(bad)
xchg
pop
mov
rcl
cmovp
outs
outs
ins
out
mov
sbb
adc
(bad)
cmp
cmc
out
loope
push
inc
idiv
or
pushf
out
adc
loopne
push
clc
mov
popf
test
rcl
je
pop
inc
pop
cdq
push
aaa
dec
xor
pop
js
mov
outs
je
ret
(bad)
mov
inc
test
setle
mov
(bad)
jg
inc
xor
push
pop
mov
popf
js
call
test
jmp
cmps
or
jecxz
jnp
mov
(bad)
in
ret
out
fisub
push
rol
imul
(bad)
aam
mov
mov
lock
mov
add
inc
cmps
(bad)
cmp
fwait
lahf
loope
adc
shl
fisttp
xor
or
pop
mov
sbb
mov
mov
sbb
jbe
lahf
jl
call
jl
xor
mov
push
retf
add
std
cmp
movs
sub
and
pop
out
jno
ja
jg
clc
mov
sbb
adc
popa
xor
lods
xor
push
adc
loope
xor
iret
mov
jno
pop
push
mov
xchg
mov
loop
dec
nop
cmp
push
xor
cmp
out
jb
test
cmp
cli
xchg
sbb
mov
mov
sbb
addr16
fist
call
lods
(bad)
shr
ret
clc
stos
(bad)
or
int3
add
mov
pop
xor
mov
jnp
cwde
inc
xor
outs
and
fsubp
nop
jae
out
sub
jecxz
xchg
fisubr
or
jno
imul
movs
cmp
repz
push
xor
jns
adc
sub
mov
into
sbb
cmp
pop
ins
push
push
cdq
ror
pushf
jo
pop
int
sub
retf
test
mov
inc
fbstp
sahf
push
mov
mov
mov
out
mov
pop
xchg
and
in
pop
jns
ret
lods
gs
xor
(bad)
ss
dec
sti
call
pop
jb
push
sbb
xor
and
add
mov
or
int3
movs
test
popf
jnp
lds
sbb
xchg
pop
fst
jecxz
inc
push
mov
inc
cmp
mov
js
add
dec
xchg
or
xor
fsub
jge
ja
int
test
dec
std
mov
out
in
sub
shr
sti
retf
xchg
jge
cwde
xchg
outs
cs
ror
jns
sub
es
pop
ja
fwait
inc
mov
xchg
es
push
lods
push
std
loop
cmp
add
movs
lahf
dec
retf
cmp
das
cmp
mov
xchg
retf
xlat
movs
inc
(bad)
cli
xor
mov
adc
fldenv
addr16
dec
out
pop
push
mov
xor
jo
or
out
inc
js
stos
(bad)
loopne
pop
and
nop
loopne
add
leave
push
mov
mov
pop
jns
mov
push
clc
mov
rol
lds
mov
inc
cmps
jbe
and
sbb
aas
and
arpl
call
stos
sbb
int3
aas
jecxz
stos
in
dec
cmp
push
cmp
mov
test
div
out
cmc
and
aad
mov
addr16
cdq
jno
in
lods
(bad)
push
lods
mov
test
ja
jecxz
out
cmp
cmp
xchg
mov
int
and
inc
add
pushf
cs
push
loope
scas
lods
das
jnp
inc
cmp
aaa
mov
(bad)
test
lea
cmps
sub
cmp
cdq
xor
mov
mov
mov
mov
jmp
sbb
repnz
mov
cmps
(bad)
mov
xor
ss
mov
sub
std
sahf
cmp
cmc
cmps
adc
jbe
xlat
cli
xchg
mov
xchg
sub
cmp
pop
arpl
fmul
or
repz
cmp
pop
pop
push
out
lods
lock
jbe
push
fisttp
nop
test
jns
pop
retf
add
ds
lock
add
out
inc
ror
push
xchg
or
push
cmp
jg
(bad)
rcl
movs
pop
xor
push
jp
mov
adc
jp
sbb
dec
sub
imul
mov
outs
nop
hlt
out
inc
rcr
retf
fisubr
add
ds
fidiv
dec
push
in
and
cwde
pop
xchg
int
cmp
cmp
nop
shl
push
pop
cwde
fimul
data16
addr16
sub
movs
aam
sti
dec
out
jge
and
and
(bad)
adc
int3
cdq
or
nop
mov
imul
outs
pop
(bad)
jmp
fnstsw
adc
lods
jno
mov
xlat
pop
xchg
inc
jle
aas
bound
mov
int3
out
cmps
xchg
jne
leave
test
sub
(bad)
cmp
inc
movs
push
jle
add
jmp
push
fidivr
scas
sub
pop
icebp
pop
push
lea
jl
mov
neg
or
xor
and
(bad)
arpl
add
rol
adc
add
dec
loop
cwde
cmp
stc
xchg
push
inc
sub
std
dec
pop
push
(bad)
lahf
cmp
test
pop
xchg
outs
adc
xchg
xchg
popa
icebp
pop
push
jb
pop
aam
test
les
mov
nop
xchg
test
jae
pop
and
loope
adc
jb
or
test
es
jbe
mov
cmp
jp
cmps
dec
popa
jae
icebp
inc
addr16
cdq
pop
jmp
sbb
std
sub
push
xor
loopne
shl
arpl
ja
lds
jo
push
gs
nop
out
add
push
cmp
inc
jmp
cld
aad
and
inc
sbb
mov
lock
aaa
jnp
rcr
dec
neg
icebp
mov
mov
inc
or
aaa
and
jmp
xchg
pop
cmp
ret
imul
in
out
jb
inc
call
add
fmul
nop
mov
lahf
lods
ja
fdivr
push
push
imul
ds
leave
or
call
in
jecxz
xchg
add
rol
push
pop
les
dec
sub
mov
les
dec
mov
xor
pop
pushf
mov
sbb
sbb
sub
outs
ret
xor
mov
jno
out
xchg
adc
stc
(bad)
and
test
xchg
sbb
mov
push
push
std
mov
cmp
mov
inc
neg
and
jns
repz
sub
adc
(bad)
enter
addr16
sti
dec
and
loop
call
ror
(bad)
or
lock
retf
push
sahf
lea
inc
cdq
rol
loop
dec
jg
hlt
mov
push
inc
jns
aas
jo
(bad)
cdq
lods
and
or
pushf
hlt
mov
arpl
cld
loope
push
push
rcl
sub
push
fist
(bad)
pop
and
int
mov
iret
rol
xor
int
out
inc
and
inc
xchg
movs
sub
pop
test
jmp
dec
iret
dec
cmp
cmps
and
in
add
je
sahf
xchg
mov
xor
push
ds
iret
cmpxchg
dec
add
ins
sub
adc
ds
mov
leave
mov
mov
int3
cmps
mov
add
mov
add
and
pop
xchg
xchg
pop
inc
xor
cwde
jp
cmps
retf
ret
movs
inc
xlat
add
jbe
adc
push
xchg
cwde
repnz
jecxz
(bad)
xchg
addr16
or
push
loopne
ret
es
xor
(bad)
push
je
xor
int3
cmp
push
ja
ret
inc
xor
and
arpl
packsswb
pop
push
pop
test
xor
leave
movs
movs
outs
jbe
stos
cmp
(bad)
(bad)
movs
setne
cmc
shl
mov
(bad)
cs
sub
sbb
or
add
fidiv
jmp
sub
cmc
ret
loop
nop
xchg
mov
ja
cmps
push
push
stos
loop
mov
test
xor
idiv
add
or
es
cwde
or
mov
pusha
cmp
popf
xor
jge
gs
jecxz
push
ret
jmp
std
and
(bad)
mov
in
xchg
(bad)
jmp
mov
scas
mov
or
icebp
jbe
mov
jp
push
jo
sbb
xchg
fisubr
daa
inc
dec
sbb
int
mov
mov
xlat
jl
mov
push
les
call
fsubr
push
retf
lds
jl
mov
mov
jmp
dec
shr
mov
and
shr
(bad)
cmp
dec
push
jp
push
and
xlat
dec
mov
pop
sub
mov
jmp
pop
inc
adc
add
addr16
addr16
xor
dec
mov
jle
inc
in
aad
sub
out
dec
adc
fiadd
adc
push
inc
xor
pop
mov
adc
aas
fdiv
movs
(bad)
repnz
fs
scas
add
mov
rcl
(bad)
and
jle
mov
xor
shl
lods
lock
and
cwde
mov
adc
pop
xor
es
cld
adc
push
push
jp
cmp
mov
mov
adc
inc
dec
cli
data16
retf
xchg
push
test
test
mov
aaa
xchg
test
sysenter
popf
push
(bad)
mov
push
ss
xchg
gs
sbb
(bad)
sbb
inc
xchg
sub
neg
rcl
mov
daa
cmp
adc
xchg
aad
imul
push
or
inc
movs
mul
dec
mov
in
mov
or
xchg
mov
fsubr
cmps
ss
imul
pop
int
cmp
retf
lea
ja
xchg
xchg
xchg
cmp
inc
jbe
xor
fcomi
sub
gs
rcr
pop
mov
mov
outs
xor
push
push
inc
bound
ins
test
fldcw
pop
or
cmp
stos
es
add
popa
ins
mov
cmp
dec
xor
push
fldenv
(bad)
or
pop
sub
sub
pop
frstor
xchg
sub
retf
push
rol
xlat
jecxz
daa
mov
xor
dec
nop
jmp
ja
mov
stos
js
sbb
lods
into
or
sub
sbb
retf
xchg
push
(bad)
mov
mov
push
fld
aam
pop
and
adc
mov
cdq
dec
mov
arpl
push
loopne
sbb
dec
and
inc
jmp
scas
shr
ficomp
daa
jl
jmp
xlat
cmp
aaa
sub
inc
sbb
mov
inc
mov
add
data16
psubsw
push
(bad)
sbb
fptan
cs
sub
xor
arpl
popf
xchg
not
adc
mov
cdq
scas
mov
(bad)
jmp
jecxz
outs
ins
btc
mov
mov
and
arpl
jmp
push
inc
push
and
shl
dec
cmps
loope
adc
cmps
cld
jo
daa
xchg
xchg
inc
cmp
stos
cld
pushf
les
scas
cwde
es
jno
lahf
pushf
push
test
lds
inc
stos
jnp
sub
cmps
jno
push
pop
fstp
jb
sbb
jmp
call
or
cdq
js
sbb
pop
shr
stos
lahf
retf
cwde
int3
mov
add
cmp
xchg
mov
inc
ficomp
movs
clc
jecxz
cmps
mov
dec
adc
sbb
jmp
inc
cmps
leave
xor
cld
jl
cmp
jns
cmp
jecxz
lahf
cli
push
sahf
mov
aaa
retf
cld
push
xchg
(bad)
iret
leave
aam
sbb
pop
retf
aam
dec
mov
arpl
scas
outs
cmps
shr
call
sbb
mov
push
jmp
enter
jp
cwde
xlat
xchg
cmps
popa
packsswb
mov
mov
das
inc
ror
ret
jae
lock
push
cli
(bad)
hlt
xor
and
adc
mov
or
inc
scas
stos
aaa
fimul
aam
cmps
sbb
mov
pop
mov
pop
mov
sub
mov
sbb
inc
and
pop
jecxz
and
(bad)
cli
xchg
arpl
mov
jne
mov
adc
stos
xor
push
pusha
or
mov
inc
dec
iret
pop
je
ja
ror
xchg
add
xor
in
dec
xchg
push
xchg
pop
mov
mov
push
in
into
cmp
out
je
push
add
xchg
shl
repz
mov
cli
xor
adc
mov
add
ins
lods
cmp
xor
pop
loop
adc
stos
adc
aas
adc
fs
sbb
addr16
jle
imul
js
xchg
lds
xchg
mov
rol
pop
neg
scas
jp
ret
call
(bad)
in
pop
lahf
enter
iret
inc
mov
test
xchg
sub
std
push
add
push
das
cmp
sar
or
push
lock
sub
sbb
aas
test
sbb
test
xor
outs
xchg
fwait
mov
mov
mov
xchg
lds
ss
dec
dec
xor
sahf
das
fdiv
pop
mov
outs
pop
sbb
outs
mov
sub
cld
gs
fld
outs
ja
fld
sbb
push
xchg
push
sub
cmp
adc
aam
(bad)
pop
xor
ss
xor
mov
fcomp
xchg
ret
or
mov
or
dec
jbe
jecxz
push
retf
int
ror
mov
rol
dec
gs
jmp
loopne
mov
test
xchg
xor
je
mov
sti
clc
add
dec
dec
adc
cmp
sbb
xchg
jb
es
dec
add
or
or
push
cmp
int3
popf
loopne
in
xor
add
ss
mov
mov
add
outs
aas
lahf
loopne
imul
loope
sub
mov
int
in
fnsave
pop
xor
ds
fcom
test
inc
adc
std
fst
pop
ds
xchg
clc
ret
ret
xlat
shl
jl
xchg
lahf
mov
push
xor
mov
jge
sar
dec
addr16
ins
(bad)
jge
or
(bad)
je
jp
xor
int3
sub
out
jmp
sbb
mov
ret
(bad)
neg
out
push
repz
sub
out
icebp
or
adc
mov
in
lods
stos
add
jge
test
jmp
xchg
cmps
push
inc
dec
dec
pop
mov
or
xchg
pop
test
push
mov
sbb
fadd
pop
xchg
mov
mov
mov
fisub
lods
push
sbb
pushf
xchg
popa
cli
push
and
sbb
mov
mov
out
loopne
leave
mov
jg
lods
enter
js
sbb
xor
pusha
ins
mov
iret
xchg
das
scas
ret
xor
stos
js
cmps
scas
push
push
jbe
push
jo
xor
jle
xchg
mov
aam
shr
inc
mov
out
imul
cmps
fsub
add
int3
mov
repz
push
cmps
mov
(bad)
mov
mov
add
out
mov
sub
iret
not
mov
ret
push
push
jne
shl
cmp
or
pop
mov
cmp
pop
pushf
jo
pop
popa
mov
adc
daa
hlt
ss
jne
out
les
mov
adc
lock
push
enter
popf
lahf
outs
sub
inc
aam
fbld
dec
xlat
sub
mov
mul
inc
jecxz
mov
cwde
inc
cmc
imul
sbb
(bad)
std
popf
ror
mov
test
(bad)
cmp
add
cmc
mov
pop
lea
addr16
retf
shl
and
inc
and
sub
adc
mov
and
in
(bad)
cdq
lods
(bad)
div
adc
ror
jmp
pop
outs
push
sbb
mov
pop
rol
xchg
inc
push
out
call
pop
punpckhbw
lahf
mov
push
mov
out
cdq
iret
mov
lahf
sbb
xchg
ror
and
add
xchg
pop
xchg
jo
inc
test
movs
(bad)
imul
cmc
scas
jnp
(bad)
xor
push
aam
pop
push
jmp
push
cmp
xchg
xor
push
lahf
push
popa
mov
xor
ins
test
pusha
cmp
icebp
(bad)
sbb
mov
out
mov
shl
(bad)
sub
rcl
call
mov
dec
pop
inc
dec
sti
sbb
xor
pop
loop
int3
push
inc
mov
adc
adc
mov
sbb
or
jle
sti
movs
nop
fadd
lods
scas
jb
fmulp
xchg
jl
js
mov
inc
data16
fidivr
mov
ds
int
stc
jno
fnsave
stos
ja
push
into
cmp
fstp
push
xchg
aam
push
ret
imul
xor
jmp
outs
cmps
mov
fsub
mov
mov
addr16
in
popf
into
push
push
hlt
test
test
inc
inc
out
push
inc
gs
shl
(bad)
cmc
shr
(bad)
fcmovb
jbe
jo
xchg
sbb
fcomp
cwde
adc
in
jbe
mov
fst
mov
fistp
popa
xchg
pop
fdiv
mov
pushf
xchg
cdq
jb
in
adc
lods
jg
cdq
es
sti
imul
add
or
pusha
lahf
jmp
and
push
dec
test
rcr
stc
or
addr16
mov
mov
mov
jb
cmps
xchg
jns
rcl
cmps
inc
xchg
mov
(bad)
fbld
xor
loope
ret
push
pop
pop
inc
outs
xchg
mov
fisttp
dec
imul
xchg
(bad)
or
outs
or
add
lea
fdivrp
ret
dec
or
or
rcr
in
cmp
jmp
fiadd
(bad)
sbb
out
add
pushf
inc
pop
inc
jae
test
xchg
jmp
cwde
xchg
pop
add
ret
push
and
add
pop
mov
cmp
cmp
test
loopne
add
sbb
loopne
xchg
cs
mov
mov
nop
jmp
repnz
sbb
push
inc
add
popa
push
repnz
adc
rol
mov
retf
xor
xchg
retf
frstor
xchg
retf
ret
jnp
push
ins
mov
test
mov
mov
test
cmp
(bad)
aad
pop
jmp
sub
xor
gs
outs
iret
sbb
pop
sbb
pop
sub
sub
mov
xor
in
fadd
xchg
sti
mov
cmp
or
std
lock
push
cs
add
(bad)
or
std
out
repz
cli
push
(bad)
in
rcl
jbe
cmps
cli
rcr
addr16
int3
sub
or
and
push
lods
cld
lods
cwde
pop
int
lahf
dec
mov
dec
ss
adc
into
xlat
sub
sar
(bad)
dec
jbe
movs
aad
nop
std
pusha
add
jne
ret
inc
sub
mov
xchg
xchg
adc
sbb
fucom
or
lods
lds
cmp
sar
test
retf
sbb
cmp
fistp
or
push
mov
jecxz
and
int
sub
mov
and
enter
mov
pop
pop
xchg
mov
xor
mov
pushf
cmp
sahf
or
adc
or
(bad)
rcl
sub
sbb
cmps
sub
push
sbb
add
pop
adc
or
outs
sub
std
push
add
ret
dec
xlat
out
jno
mov
aam
and
add
jecxz
daa
inc
sub
mov
fwait
cmp
popf
sub
pop
mov
addr16
jg
or
mov
call
jle
loopne
lods
in
and
pop
mov
rcl
xchg
int
shr
push
dec
(bad)
fnsave
push
(bad)
ds
add
mov
aad
push
ret
mul
je
mov
sbb
mov
mov
adc
in
dec
es
rcr
xor
adc
les
shl
je
in
in
stos
xor
(bad)
sbb
mov
cmp
mov
mov
xchg
shl
pop
mov
push
jp
outs
aas
sbb
push
iret
fistp
add
mov
sub
inc
test
outs
jp
adc
es
mov
add
push
sbb
mov
inc
sub
jae
call
movs
sbb
mov
aam
xor
movs
stc
into
mov
gs
(bad)
mov
jno
and
sbb
mov
push
imul
daa
int
pop
and
arpl
es
pop
adc
fnsave
xor
shl
gs
repnz
jp
mov
test
xchg
in
aam
popa
mov
xchg
ins
stc
xor
cs
scas
gs
pop
dec
push
lock
jecxz
in
rcr
gs
(bad)
sub
mov
inc
out
adc
outs
retf
jge
mov
jg
mov
icebp
fstp
enter
mov
and
movs
mov
adc
fwait
jbe
les
cmps
jno
rcl
mov
mov
mov
and
cmp
xor
cs
outs
jb
pop
sub
mov
scas
mov
and
test
mov
push
(bad)
and
pop
movs
int
push
add
jno
loope
aam
pusha
out
and
mov
lds
aas
into
(bad)
fidiv
dec
pop
xchg
mov
jno
or
pop
jae
cs
mov
mov
cdq
test
(bad)
cdq
(bad)
push
cmp
rcr
mov
mov
mov
sub
enter
push
pop
inc
mov
adc
pop
adc
xor
sub
jnp
es
hlt
adc
js
or
push
in
test
pop
repz
loop
repz
cmp
jp
fist
mov
out
repz
cmp
dec
mov
mov
les
or
or
adc
loop
mov
scas
mov
aam
lds
call
xor
mov
jge
push
add
push
mov
shl
fst
inc
fs
(bad)
enter
fstp
stos
fwait
jns
neg
push
(bad)
aaa
repz
fs
mov
pop
or
in
mov
cmp
adc
and
sub
enter
test
test
push
retf
out
pop
cmp
push
out
jne
jecxz
dec
pop
add
arpl
test
jb
into
(bad)
fcomp
out
cmc
push
mov
movs
fwait
shl
and
test
mov
inc
in
not
call
mov
mov
retf
mov
sbb
and
stos
in
dec
push
jle
push
lods
(bad)
dec
mov
inc
add
xchg
call
pop
mov
lds
and
sbb
sbb
rol
xor
adc
test
sub
and
xchg
rdtsc
out
mov
sub
repz
cmp
fidivr
in
adc
dec
mov
mov
sub
das
hlt
and
sbb
mov
inc
pop
sti
cmp
jo
leave
mov
xor
inc
cmp
pop
mov
xchg
inc
in
inc
jecxz
cmp
push
mov
mov
inc
lods
add
inc
fmul
cli
stc
adc
scas
pop
pop
and
adc
jmp
mov
stos
(bad)
fisub
fadd
nop
mov
(bad)
mov
adc
mov
push
fwait
mov
js
cwde
je
mov
js
xchg
test
out
sahf
jae
fwait
inc
push
mov
and
aad
int3
mov
out
mov
or
aas
repnz
in
cmp
icebp
cmp
mov
sbb
div
imul
mov
sahf
pop
addr16
outs
jae
push
in
scas
pusha
hlt
fld
xchg
xor
jo
inc
lods
jnp
shl
push
pusha
mov
sub
mov
outs
xor
ins
ja
sar
sahf
test
jmp
es
add
jecxz
pop
icebp
push
xchg
lock
mov
std
imul
inc
sbb
addr16
cdq
add
xchg
dec
cmp
lods
mov
pop
(bad)
fdiv
js
push
push
sub
enter
mov
ins
inc
pop
adc
sub
sahf
ins
daa
xchg
fstp
jle
lods
out
out
sbb
push
imul
pop
lock
sub
sub
pop
mov
in
xchg
repnz
lods
dec
test
cwde
adc
shr
fmulp
jno
test
data16
rcl
jnp
pushf
add
xlat
sub
xchg
jne
or
(bad)
jo
(bad)
adc
jae
and
push
cli
out
ins
push
and
xor
sub
push
dec
sub
(bad)
fadd
out
dec
pop
inc
cmp
pop
out
ds
mov
shl
outs
xor
jle
cmc
pop
popf
clc
fsubr
fs
and
push
ret
add
test
sub
lods
inc
jbe
or
dec
and
pop
mov
imul
sbb
test
out
cmps
aas
pushf
push
pop
js
dec
sbb
icebp
sub
inc
dec
test
add
push
jb
int
jbe
cmp
cmc
and
(bad)
pop
stos
or
pushf
repz
pop
push
(bad)
jmp
cmp
add
stos
cmp
push
dec
(bad)
dec
dec
jno
sti
jge
xor
dec
cs
scas
xor
push
add
sbb
fmul
mov
xchg
ja
test
mov
and
out
repnz
and
pushf
xchg
and
xchg
xchg
js
sar
push
addr16
pop
out
es
cmp
add
adc
cmp
stc
fnstcw
inc
jo
movs
dec
adc
movs
pop
rol
add
jne
mov
cs
xchg
in
adc
aas
pop
jmp
aas
or
cdq
add
add
nop
cmp
retf
xchg
push
rcl
jmp
pop
(bad)
sub
push
cmps
ds
cmps
push
lahf
in
les
jmp
mov
sar
fcom
clc
pop
push
stos
sbb
je
or
mov
sar
jl
jmp
adc
jmp
mov
or
sub
ret
add
es
retf
ins
outs
xchg
jo
loope
(bad)
push
leave
mov
lods
sar
and
jae
add
in
pop
or
lahf
imul
(bad)
das
sar
cmps
hlt
xchg
sub
enter
push
xor
rcr
dec
pop
out
jp
popa
ret
bswap
sub
adc
pop
repz
fmul
mov
mov
add
jecxz
push
pop
pop
pop
adc
pusha
bound
ret
inc
jmp
cmp
int
inc
mov
ins
or
adc
xor
dec
enter
and
xor
ins
mov
dec
push
in
add
int
sbb
call
or
jb
inc
dec
call
das
mov
mov
popf
push
and
(bad)
mov
xor
adc
leave
test
ins
pop
lods
test
push
fiadd
cmp
out
xor
sbb
jnp
lds
inc
jmp
pop
je
dec
jae
or
pop
mov
mov
call
fiadd
fldenv
mov
test
adc
adc
test
imul
ins
inc
ins
lahf
movs
sbb
sahf
jmp
jb
sub
dec
fisub
iret
mov
call
sbb
int3
bnd
call
inc
mov
inc
pop
jmp
sbb
add
xchg
jns
cs
sub
fstp
hlt
push
cmp
xchg
sbb
shl
push
(bad)
mov
jl
in
dec
adc
rcl
cli
pop
popa
pushf
ins
and
inc
mov
xor
ret
and
lea
cmc
dec
fwait
pop
popa
ds
mov
sbb
or
repz
in
ret
mov
ins
nop
in
add
mov
mov
or
pop
fsubrp
jnp
loop
sbb
jne
lock
sahf
cdq
(bad)
stc
push
popf
inc
dec
and
xchg
inc
pop
das
xor
movs
cdq
jae
add
mov
out
rcl
in
cs
jge
pop
pop
dec
frstor
mov
fcom
adc
mov
sub
sub
movs
(bad)
ret
imul
pusha
push
adc
jb
or
mov
call
scas
repnz
xchg
outs
sub
cmp
stc
mov
add
jb
inc
mov
push
cmp
aam
and
or
out
pop
inc
cdq
sti
popa
add
jecxz
sbb
ja
xor
add
mov
ficom
push
mov
adc
clc
int
cli
fstp
icebp
(bad)
dec
and
fisub
or
add
mov
mov
dec
xlat
or
and
int3
fisubr
dec
retf
jns
xor
sbb
inc
xor
sub
jmp
scas
outs
(bad)
xchg
push
cmp
adc
xchg
or
cmp
mov
data16
lds
fbld
push
fst
jl
cmp
call
in
data16
iret
test
inc
inc
idiv
sti
cmp
inc
sti
nop
nop
push
div
lds
ss
add
pop
(bad)
mov
or
call
jae
and
inc
bnd
std
daa
push
xlat
dec
hlt
mov
arpl
xor
xor
adc
mul
in
in
ins
pushf
ds
mov
xchg
lds
ja
pop
out
gs
pop
cmp
sub
lods
cwde
je
cmp
jae
xchg
stc
or
xchg
jne
aad
pusha
inc
dec
int
movs
sub
xor
js
jge
or
es
push
push
lea
jnp
lock
outs
rcr
rcl
int3
jae
loopne
pop
hlt
dec
adc
into
cs
(bad)
mov
rol
mov
out
fild
shr
xchg
ror
pushf
xor
push
push
loope
mov
jbe
lock
or
sub
mov
pushf
or
daa
aaa
lds
lods
loop
int3
cmp
cmp
in
sbb
in
lahf
sub
js
into
sar
xor
popf
mov
mov
aas
mov
adc
sbb
retf
loope
sti
inc
pop
add
adc
data16
jns
outs
jmp
lea
imul
push
jp
mov
ret
cmp
ret
in
es
les
cdq
push
stc
add
cdq
retf
out
or
leave
cmp
fsub
adc
loopne
sub
push
js
icebp
ret
xchg
cmp
(bad)
fdivp
add
xor
std
fs
push
fld
and
push
scas
aam
jbe
jne
xchg
movs
mov
outs
jg
sub
mov
aaa
xchg
retf
adc
das
mov
adc
je
xlat
mov
shl
mov
in
jo
mov
add
mov
and
adc
sbb
outs
mul
cli
ret
cmp
sbb
inc
(bad)
repz
jno
in
out
pop
imul
adc
jae
and
xchg
or
cdq
pusha
push
mov
xor
sub
ror
push
fisubr
ja
adc
hlt
mov
rcl
leave
fisttp
loopne
leave
gs
xor
jl
push
cmp
dec
jae
or
dec
fmul
xor
dec
in
sub
dec
(bad)
fisttp
pop
mov
repz
retf
mov
mov
inc
stos
mov
cmp
fs
jno
sub
in
pop
push
shl
dec
cmp
xor
scas
push
ret
std
or
repz
out
inc
sub
mov
call
xchg
aam
add
or
repnz
mov
jbe
aad
jp
pop
dec
das
push
call
icebp
js
gs
leave
and
mov
ret
jmp
addr16
cmp
out
cwde
stos
add
call
jb
or
aad
dec
in
inc
out
div
fnsave
enter
adc
ins
nop
sub
sahf
lahf
add
and
out
(bad)
sbb
push
jle
sub
push
fs
mov
cdq
fldcw
or
cld
ret
xchg
sub
test
mov
and
push
push
or
mov
dec
lahf
xchg
xor
inc
stos
jp
mov
fwait
nop
inc
test
cli
inc
xchg
xor
in
div
test
retf
mov
push
jmp
sbb
jp
push
aad
cli
mov
aaa
adc
lahf
xchg
rcl
scas
sbb
fwait
and
pop
pinsrw
and
sbb
dec
push
jle
in
xlat
xor
mov
cmps
sub
pop
add
xor
sbb
jmp
into
sbb
(bad)
mov
inc
jns
push
push
and
add
pop
jo
mov
mov
test
or
jmp
std
(bad)
inc
cmp
dec
cdq
add
jle
test
cmc
cmp
imul
push
sub
ror
retf
xchg
cmc
cli
xchg
mov
sbb
sbb
cmp
jns
push
sub
in
mov
test
(bad)
jmp
xchg
rcr
(bad)
or
popa
fsubr
push
mov
pop
es
imul
std
and
cmp
loop
retf
fwait
popf
sub
int
(bad)
(bad)
sub
cmp
repnz
inc
sbb
jl
daa
into
aaa
movs
mov
ret
jne
xor
pushf
adc
jge
add
outs
scas
sub
push
push
pop
or
jp
cs
jmp
pop
(bad)
jns
dec
dec
data16
inc
jg
cmps
call
cli
mov
jecxz
lahf
pop
mov
es
je
or
xchg
xlat
(bad)
aaa
dec
in
(bad)
xor
jmp
aad
pop
mov
lods
call
sti
jle
push
pop
frstor
inc
sub
xor
shl
dec
mov
lods
daa
loopne
dec
mov
sbb
iret
mov
outs
ret
cmp
sbb
movs
xchg
leave
mov
mov
ja
adc
cwde
dec
jle
aam
mov
sub
cmp
sbb
stos
and
adc
add
mov
and
cmc
cwde
data16
sti
push
mov
jb
mov
fwait
jmp
icebp
adc
pop
outs
aam
cs
push
jnp
pop
je
inc
sbb
sub
pop
mov
sub
jo
or
pop
adc
mul
cmc
scas
data16
std
ja
sub
dec
jmp
ja
mov
add
movs
inc
or
adc
sub
stos
or
lods
stc
inc
pandn
mov
out
sub
sub
movs
push
cdq
jbe
test
jbe
movs
stos
icebp
mov
and
out
mov
retf
cmp
add
pop
push
sub
mov
push
cmp
mov
push
ss
jp
leave
push
shl
icebp
nop
(bad)
pop
(bad)
pop
jno
jae
call
les
mov
rol
mov
sbb
lahf
hlt
mov
mov
mov
sub
(bad)
xchg
movs
stos
lock
cmps
mov
jb
sub
sti
push
lods
cmp
outs
fidiv
ins
or
xchg
push
fsubp
cwde
sub
cmp
in
ret
in
outs
sbb
(bad)
test
jno
test
fist
xor
aas
rcl
ins
jg
repnz
jmp
mov
outs
je
(bad)
stc
push
or
add
cmp
sbb
fsubrp
xchg
pop
jmp
cli
in
jbe
and
daa
push
pushf
scas
dec
adc
sbb
in
push
scas
add
jnp
and
outs
in
(bad)
jge
je
cmps
sub
jmp
out
xchg
sbb
dec
retf
in
mov
pop
xlat
adc
add
(bad)
cmc
aas
call
xchg
or
inc
ja
cdq
sbb
adc
fimul
mov
mov
mov
inc
ret
sbb
addr16
icebp
hlt
in
es
rol
inc
shl
lods
cmps
cmp
fmul
out
sub
call
sbb
jno
cs
and
lods
dec
mov
jg
and
js
dec
imul
das
(bad)
add
in
repnz
shr
mov
adc
imul
lds
aas
push
push
test
dec
cmp
push
sti
lods
sub
dec
out
cli
js
sub
lds
test
inc
shl
sar
adc
add
rcl
dec
xchg
add
adc
out
(bad)
stos
adc
iret
cmp
nop
bts
adc
mov
push
adc
xchg
mov
add
in
pop
popf
push
cmc
jb
clc
mov
sub
mul
in
jmp
mov
test
sub
inc
cmps
jle
push
std
shr
mov
push
push
sub
jno
sub
imul
fild
and
inc
jmp
add
(bad)
inc
rcl
push
data16
aam
sbb
adc
add
push
out
mov
push
repz
fwait
cmp
jno
jmp
push
movs
xchg
rol
rcr
sub
xchg
xor
pop
scas
cld
lock
mov
push
push
retf
push
bound
and
scas
sbb
xor
mov
jge
mov
fld
sub
jg
cmp
retf
mov
xchg
fimul
or
(bad)
daa
pop
dec
mov
loop
jns
stos
mov
arpl
jo
sbb
loope
daa
sbb
sbb
push
mov
les
fstp
ret
dec
cmp
and
or
jmp
into
jno
sbb
popa
sahf
fdiv
leave
(bad)
ret
inc
clc
adc
sub
out
mov
arpl
fild
jb
jb
mov
adc
popf
push
inc
inc
sti
dec
out
daa
jg
aas
push
xor
ins
add
cmp
jns
fsub
ret
or
fdiv
cmp
xor
das
push
movs
cmc
addr16
add
xchg
pop
jbe
sub
push
xor
test
add
and
add
test
push
pop
pop
lea
js
sub
inc
and
js
mov
mov
push
fistp
call
push
mov
lods
out
test
dec
push
jge
xchg
lea
popa
jmp
(bad)
mov
movs
jno
jl
adc
jp
mov
pop
inc
ss
or
add
inc
call
mov
push
mov
in
repnz
in
inc
sbb
test
xor
dec
ret
int
xor
into
shl
jne
xor
sbb
xor
aad
dec
lahf
test
icebp
es
fcmovnb
inc
inc
mov
inc
inc
xor
jg
xor
mov
ret
fstp
xchg
xor
cmp
sbb
(bad)
addr16
dec
aas
pop
imul
or
pop
outs
stos
(bad)
jl
ret
mov
sar
dec
clc
addr16
mov
stos
mov
mov
mov
or
jae
and
cmp
or
sbb
test
dec
inc
cmp
(bad)
mov
call
xchg
test
pop
loopne
mov
adc
push
pushf
or
add
cmps
or
sub
or
shl
out
dec
int
clc
adc
mov
push
xchg
stc
movs
jae
repz
xchg
ja
jnp
push
or
xchg
pushf
sub
add
xlat
aaa
mov
dec
pushf
into
add
add
xor
mov
xor
or
mov
std
fcom
push
out
cld
hlt
fwait
(bad)
aam
jle
(bad)
sbb
push
in
xchg
sbb
fwait
cmc
inc
mov
or
scas
inc
addr16
jecxz
pop
xchg
repnz
aas
in
pop
cmc
js
sub
sbb
mov
(bad)
jns
retf
nop
xor
push
enter
fsubr
js
sbb
push
mov
test
xchg
cmp
aas
adc
ror
arpl
inc
iret
xchg
addr16
gs
xor
js
mov
pop
cmps
movs
ror
inc
sbb
mov
out
pop
adc
shl
mov
lods
pop
pop
jns
shl
movs
pop
mov
stos
push
push
mov
div
adc
popa
dec
cs
lea
hlt
bound
push
aas
in
pop
loop
ins
das
(bad)
fistp
lahf
test
into
mov
ffreep
mov
xchg
int
mov
cmp
inc
mov
stos
xchg
ret
push
outs
and
fsubr
xor
push
cli
add
and
cmp
mov
jo
(bad)
dec
push
pop
cmp
das
shl
xor
(bad)
cli
pop
xchg
push
test
adc
xor
xor
(bad)
or
sub
push
pop
or
aad
inc
dec
int3
and
ret
push
repnz
mov
in
xor
jmp
and
inc
push
fs
mov
xchg
js
scas
ds
push
ins
add
test
fild
xor
and
pusha
inc
sti
(bad)
movs
(bad)
clc
imul
daa
lahf
ret
and
and
or
outs
push
and
fwait
ins
mov
mov
push
ret
mov
std
inc
add
and
mov
sbb
jmp
stc
sbb
or
push
pop
and
cmp
pop
xor
inc
inc
int3
int
or
popa
outs
addr16
push
movs
test
sub
jo
jle
adc
cmp
and
pop
in
movs
dec
xchg
es
cdq
mov
fcomp
lds
outs
in
ja
sar
cdq
xor
out
jg
out
jo
dec
pop
scas
pushf
cs
mov
adc
push
dec
cmp
pop
mov
inc
dec
enter
add
inc
jb
mov
dec
push
dec
xchg
mov
jmp
icebp
sbb
outs
sbb
daa
pop
outs
test
jmp
js
lods
inc
jmp
test
sub
xor
sub
aam
adc
and
xor
btr
sbb
or
sbb
popf
dec
fwait
retf
pop
push
fiadd
je
lds
fidiv
mul
mov
push
xchg
mov
mov
fild
jp
test
jp
sbb
jp
lea
pop
in
jo
sbb
jne
ror
add
jecxz
lods
sub
adc
imul
(bad)
jns
cmps
or
in
xchg
in
cmp
icebp
mov
mov
cmc
dec
push
movs
pop
repnz
mov
pushf
adc
mov
and
fst
(bad)
movs
mov
sbb
cmp
es
cmp
(bad)
fs
jo
lea
iret
sbb
inc
mov
iret
xor
xor
cmps
lahf
sub
xchg
pop
fs
sbb
cld
retf
int
aam
div
fwait
dec
sar
jne
data16
jecxz
iret
sub
inc
fs
jmp
mov
adc
sbb
push
push
fwait
repnz
and
shl
pop
or
inc
push
mov
lahf
mov
fucom
ror
pop
push
retf
pop
js
imul
pop
and
fsub
int3
jge
je
inc
fs
adc
jnp
mov
inc
dec
pop
xchg
push
sub
push
shl
in
icebp
sahf
clc
inc
cld
pop
or
(bad)
lods
pop
icebp
fsubr
(bad)
xchg
cwde
daa
mov
test
add
push
enter
es
cmp
sub
cs
fisttp
xor
dec
dec
xchg
jae
jb
push
or
test
xor
jns
and
pop
mov
pop
loopne
xchg
push
xchg
lea
xchg
das
addr16
push
cmps
mov
enter
out
jl
push
jae
push
pop
cmp
xor
mov
arpl
pop
push
inc
push
and
add
adc
repnz
xor
test
xor
push
(bad)
add
sbb
dec
out
rcl
jbe
add
cdq
cmp
xchg
ficomp
loope
or
lahf
mov
add
frndint
pop
ja
mov
cmp
imul
inc
ins
aam
dec
ror
mov
int
xchg
mov
aas
mov
enter
push
or
jnp
mov
imul
(bad)
lods
mov
fisubr
sub
cli
sbb
clc
inc
inc
repz
in
add
das
sub
mov
xor
cdq
div
out
imul
clc
lock
mov
pop
pop
push
pop
xchg
int3
xor
sbb
bound
clc
(bad)
cmp
add
(bad)
retf
mov
(bad)
lahf
pushf
xchg
adc
test
dec
or
mov
into
mov
shr
mov
out
dec
and
add
xor
repz
sahf
sahf
inc
add
xor
pop
dec
sub
adc
inc
das
sbb
push
sub
shl
shr
popf
pusha
iret
and
xchg
dec
aam
sbb
xor
fcomip
and
mov
hlt
dec
cmp
jbe
hlt
mov
sahf
setnp
das
clc
mov
adc
jno
push
gs
sbb
sbb
in
std
mov
test
into
call
sub
push
xchg
xchg
stos
out
ins
sbb
hlt
add
and
ror
popa
stos
adc
out
mov
stc
mov
nop
aam
push
stc
mov
jno
and
loop
pop
cwde
nop
js
and
ins
ins
lds
jmp
jae
sub
loopne
ss
mov
jmp
xor
xlat
popa
add
aam
sahf
mov
cmp
add
xor
mov
ror
jmp
and
(bad)
icebp
add
or
cld
push
fcmovnb
cmp
adc
push
idiv
shl
pop
mov
mov
pop
sbb
dec
and
xor
jmp
scas
loop
xor
xchg
mov
adc
aas
pop
out
push
jle
inc
inc
push
cdq
iret
sub
scas
pusha
inc
xchg
push
fxch
pop
sbb
pushf
iret
or
jle
(bad)
fnstenv
mov
loopne
jmp
pop
cmps
mov
ja
adc
sub
sub
fidivr
inc
cld
or
mul
jle
adc
push
jg
sub
sbb
fcomp
cs
(bad)
mov
push
cmp
popa
hlt
mov
sahf
cwde
inc
pushf
mov
mov
cmps
adc
sbb
jp
fwait
cli
sar
test
xchg
xor
cmp
sbb
lds
jg
jp
fwait
mov
(bad)
in
xchg
(bad)
xchg
pusha
rcl
outs
mov
and
je
jns
es
push
adc
mov
mov
xchg
call
sbb
mov
push
test
pop
xlat
mov
imul
fild
pop
fidiv
sbb
pop
mov
inc
iret
or
adc
inc
ror
xor
dec
or
lahf
adc
mov
iret
clc
or
push
fcmovu
enter
fild
imul
cmps
sub
lods
sbb
jmp
jmp
inc
mov
mov
aad
sbb
or
dec
fdivr
inc
cmp
mov
ins
pop
or
mov
cmps
add
rcr
dec
adc
cwde
adc
les
ret
cld
add
adc
sub
pop
add
xlat
out
inc
int3
pop
sahf
mov
sbb
das
dec
dec
jne
and
add
data16
cmp
and
and
jmp
xlat
jbe
dec
sar
mov
hlt
ret
into
jne
(bad)
jno
pop
sbb
add
add
push
call
dec
mov
hlt
mov
cli
sar
sub
dec
loop
or
xchg
sar
pop
jbe
or
mov
test
add
inc
inc
dec
popa
inc
mov
test
mov
aam
push
fistp
push
data16
popf
(bad)
loopne
mov
test
pop
push
mov
je
in
sub
sub
fstp
xor
sbb
or
add
cmp
jge
push
push
aaa
and
push
dec
fistp
mov
adc
jbe
scas
popf
cmp
sub
cdq
shr
(bad)
jge
out
xchg
xchg
test
(bad)
cld
aas
inc
jle
xor
lahf
dec
imul
test
pop
cmp
inc
aas
push
jecxz
push
add
and
(bad)
xor
test
das
fistp
or
ins
xor
xor
enter
mov
lods
pop
dec
pushf
xor
mov
push
mov
(bad)
test
jl
jo
sbb
ja
adc
add
jl
out
inc
(bad)
cmp
mov
cmp
(bad)
(bad)
pop
jbe
sti
pop
ficom
jle
jae
daa
adc
int3
fs
shl
in
xchg
cmc
call
cs
push
rol
int
fwait
adc
mov
xchg
retf
push
scas
xchg
mov
push
js
sub
std
xor
push
ss
(bad)
cmps
sbb
stos
sbb
fs
jnp
daa
pop
xor
sub
xchg
and
push
pop
cmp
out
fwait
out
adc
mov
popf
pcmpgtw
push
inc
dec
fs
push
mov
sbb
test
in
cmp
in
repnz
add
jae
das
jg
test
clc
cmp
fadd
test
pop
fld
adc
push
das
pop
adc
push
jnp
mov
addr16
lods
sbb
push
xor
rcl
clc
dec
and
aam
mov
popa
push
cmc
push
pop
sahf
repnz
jne
lods
or
ror
pop
xor
aam
push
rcr
loope
mov
rol
add
sub
push
sbb
fimul
or
jmp
push
movs
in
jle
jmp
pusha
xor
(bad)
pop
(bad)
xor
xchg
fisttp
lds
repnz
fisttp
adc
xchg
stc
call
in
cmp
fimul
out
mov
mov
out
stos
fisubr
retf
in
jmp
test
cmp
sub
jmp
int3
lods
retf
mov
lds
dec
popf
or
js
push
movs
push
mov
fucomp
ror
test
push
xchg
mov
mov
or
out
adc
int
jno
xchg
dec
and
outs
xlat
or
mov
inc
mov
pop
mov
dec
pop
add
pop
test
mov
pop
add
and
sbb
push
mov
je
or
arpl
mov
ja
push
sub
shr
cmps
mov
scas
cli
push
inc
aam
retf
(bad)
call
mov
and
addr16
xchg
jge
fimul
jecxz
aas
popa
test
push
or
push
retf
dec
retf
push
cmp
mov
sbb
cmovns
pusha
mov
inc
inc
mov
sahf
add
leave
push
loop
or
outs
bound
mov
out
xchg
scas
jo
jb
out
js
mov
call
pop
out
pop
clc
xchg
(bad)
fistp
cld
test
jnp
sub
jns
mov
xchg
xchg
pop
push
repnz
add
xor
jo
scas
iret
sbb
sub
gs
retf
int3
cli
mov
fild
mov
and
fwait
mov
cmps
pop
(bad)
and
pop
jle
xor
jmp
std
(bad)
pusha
sbb
(bad)
sub
sub
mov
sti
fimul
int3
sbb
cmp
inc
ins
xchg
pop
loope
int3
scas
in
js
jl
add
cmp
retf
inc
icebp
adc
push
mov
cmps
lods
daa
cmp
(bad)
fcomp
jp
sub
adc
jbe
lock
pushf
jp
sbb
xchg
sahf
icebp
aam
mov
mov
jg
xor
jl
mov
popf
xor
pop
loope
stc
sti
ja
pop
addr16
xor
daa
leave
dec
mov
hlt
rol
ss
pop
dec
icebp
push
leave
in
sub
leave
cmps
fcom
fadd
aam
stc
mov
addr16
pop
mov
jo
adc
xchg
sbb
pop
loop
cld
xor
sub
je
xor
sbb
or
sub
jns
push
mov
sub
push
mov
xchg
and
fisubr
mov
vfmadd231ss
adc
adc
(bad)
cmp
ret
dec
mov
rcl
fcomp
push
xlat
scas
ret
add
fimul
mov
cwde
ss
mov
fistp
sahf
les
adc
inc
jecxz
jge
push
lods
retf
xchg
add
inc
aad
stos
in
push
push
mov
pushf
repz
mov
shl
ds
fadd
(bad)
es
xchg
fcom
sbb
movs
sub
lgs
stc
and
clc
xor
inc
sub
xchg
adc
sub
jmp
push
pushf
int3
cmp
pop
push
enter
xchg
mov
ret
push
push
iret
dec
jns
fs
movs
push
and
pop
jle
mov
ficomp
or
fisubr
inc
inc
jo
add
outs
mov
xor
fiadd
push
xchg
das
lods
cwde
aam
int
jge
or
retf
scas
xchg
add
out
and
push
sbb
jle
repnz
ds
mov
das
repz
sahf
xor
outs
outs
add
repnz
and
or
(bad)
xor
or
into
jbe
push
gs
pop
push
imul
lea
push
adc
push
stc
lea
and
push
dec
push
or
ss
jbe
jmp
imul
mov
gs
aas
shl
inc
inc
sub
out
stos
cmps
retf
inc
sub
mov
cmp
jge
ret
bound
iret
xchg
mov
loop
add
jg
push
test
push
mov
adc
pop
jmp
jmp
sub
shr
dec
or
scas
call
mov
pushf
or
inc
fistp
int3
test
mov
or
call
mov
push
sar
cmp
mov
sbb
pop
subps
stc
das
push
dec
mov
push
fimul
cmp
ins
test
sar
movs
clc
cmp
xor
daa
mov
pop
or
in
sbb
lahf
cmps
or
icebp
addr16
pop
cmc
dec
je
cli
sub
mov
lds
add
stos
(bad)
xor
movs
popa
and
push
lds
shl
jp
pop
pop
mov
cli
inc
mov
js
imul
fdivr
mov
fdivr
xchg
mov
mov
cmp
test
imul
mov
int3
mov
ss
retf
mov
xor
cmc
sub
adc
popf
or
or
out
cmp
int
mov
arpl
mov
push
pop
and
test
fcmovnb
mov
ret
adc
in
xchg
cmp
sbb
cmp
mov
adc
outs
lods
mov
pop
int
outs
sbb
xor
xchg
pop
mov
lds
adc
ret
loope
dec
mov
inc
mov
xchg
pop
add
sbb
adc
test
(bad)
sbb
retf
add
(bad)
fisttp
xchg
cmp
or
sub
xor
pop
psllq
mov
nop
xor
and
std
push
inc
dec
shr
in
and
sbb
or
dec
aad
inc
and
xchg
das
cmc
dec
in
jp
mov
and
ins
sbb
push
xor
daa
cmp
push
iret
test
ret
inc
outs
cs
cmp
mov
mov
jmp
mov
push
daa
stos
pop
lock
cmp
xor
adc
loope
cmc
mov
xor
test
mov
pop
(bad)
call
call
movs
and
pusha
sub
nop
xchg
xchg
sbb
aaa
push
sub
mov
inc
pop
cmp
sbb
lods
popa
sub
imul
inc
(bad)
cmp
jo
mov
mov
mov
push
dec
push
push
call
jne
pop
mov
adc
rol
and
mov
pop
mov
ja
cmc
and
mov
mov
mov
xchg
mov
mov
or
jbe
cs
sub
call
ret
out
inc
xor
jae
mov
push
sbb
(bad)
aad
inc
in
fistp
out
push
adc
test
out
push
mov
fcomp
inc
ds
cmps
mov
in
jmp
ret
xchg
leave
cmp
les
imul
cmc
clc
aaa
pusha
cmp
mov
adc
inc
fisttp
dec
ins
adc
fsub
pushf
sti
push
call
xchg
jae
mov
imul
mov
cli
inc
sar
mov
or
inc
test
fstp
push
pop
push
or
xor
xor
div
lock
mov
ret
mov
scas
pusha
push
or
sub
jecxz
pusha
call
and
sahf
(bad)
dec
or
jno
dec
dec
scas
or
mov
sub
rcl
xchg
inc
jae
adc
mov
cmp
cmps
push
jmp
adc
push
push
ret
inc
sub
nop
ror
dec
jmp
mul
mov
scas
jno
dec
clc
or
jle
mov
fnsave
out
mov
inc
(bad)
enter
sub
xchg
or
cmp
call
pop
xchg
jmp
(bad)
mov
mov
dec
ins
adc
mov
xchg
leave
(bad)
clc
arpl
inc
gs
call
aam
pop
sub
idiv
ret
add
js
loope
push
adc
and
out
outs
cmp
icebp
sbb
ins
xchg
jns
sar
jne
mov
retf
xchg
sub
nop
js
mov
push
fwait
shl
cwde
shl
pop
out
inc
cmps
mov
jecxz
add
add
pop
cmp
push
cmp
add
aaa
mov
sbb
mov
sub
inc
pop
xchg
add
lock
adc
int
mov
push
jge
cmp
mov
push
pop
es
cs
ja
pop
cdq
add
pop
push
in
daa
ror
pusha
sbb
cmc
(bad)
xchg
sbb
popa
cld
mov
dec
sub
leave
ins
jne
loopne
xchg
jae
popa
mov
ins
lea
pop
ret
jmp
push
push
mov
mov
call
rol
es
mov
popa
cmp
popf
adc
popf
call
jae
aas
fwait
clc
inc
adc
push
push
loop
div
jne
xchg
imul
sub
inc
and
or
(bad)
jecxz
fild
shl
mov
or
dec
sub
fnstsw
inc
jae
addr16
inc
rcr
ja
push
pop
jbe
adc
mov
jmp
mov
xchg
cld
ffree
fnstcw
pop
mov
arpl
in
imul
lods
rol
lea
cdq
push
push
stc
jle
aam
stos
push
dec
xor
push
lods
inc
scas
iret
(bad)
imul
test
mov
ret
fistp
retf
adc
(bad)
lock
mov
leave
mov
and
dec
enter
sbb
sbb
jle
jo
test
ret
pop
lahf
mov
or
cmps
iret
mov
adc
(bad)
mov
mov
and
add
jle
cwd
ret
dec
fistp
cwde
adc
cli
add
imul
inc
jae
lock
inc
leave
jbe
xchg
jp
cmp
aad
push
adc
xchg
xchg
adc
sbb
bound
and
cld
fwait
xor
ret
loop
add
or
sbb
cdq
mov
cld
pop
lock
clc
jp
jmp
test
mov
mov
outs
mov
jb
rol
std
and
test
das
ret
leave
test
mov
sbb
shl
js
popf
add
call
sbb
jle
pop
mov
fbstp
sub
push
pop
push
(bad)
cmc
adc
pop
ror
push
xchg
mov
mov
mov
adc
std
dec
fild
push
test
or
in
int
jae
stos
mov
adc
xchg
jno
inc
fdivr
idiv
pop
push
xor
jmp
inc
xchg
out
cmps
int
jo
jg
mov
xlat
out
push
scas
or
mov
lahf
jge
repnz
lods
mov
dec
xor
xor
lahf
sub
add
adc
js
xchg
lock
pushf
leave
(bad)
outs
inc
stos
mov
push
mov
fisttp
cdq
sub
(bad)
jl
int3
rol
iret
mov
xor
icebp
popf
out
loop
in
jmp
iret
sti
test
in
test
aad
or
inc
jns
adc
and
cmps
sub
test
dec
inc
jg
cmp
lods
lods
fidiv
cmps
xlat
cmp
xor
es
arpl
mov
push
scas
repz
ja
iret
rol
mov
sahf
cs
inc
rcl
fisubr
mov
or
jb
loope
out
push
jns
or
bound
out
jno
cld
das
mov
retf
adc
pop
pop
inc
stc
outs
push
cmp
lods
push
std
jo
push
push
fwait
test
jmp
push
repz
mov
imul
jno
je
lahf
call
cli
retf
sahf
cmps
(bad)
cld
std
jbe
or
movaps
daa
nop
xor
adc
inc
sub
fdivr
pusha
xor
sti
fidiv
sbb
jg
jecxz
adc
add
inc
iret
pop
shl
inc
cmps
add
call
sbb
dec
push
ja
outs
gs
pop
adc
mov
int3
sub
into
jae
cli
not
inc
cmp
lods
jmp
shr
push
popf
adc
inc
jb
fiadd
add
and
adc
add
mov
push
je
adc
jg
test
xor
into
out
push
shl
mov
cwde
cmps
fwait
push
adc
xchg
adc
into
jo
(bad)
retf
(bad)
pop
sbb
(bad)
lods
jns
arpl
jp
jne
(bad)
call
sbb
fadd
leave
mov
pop
mov
mov
jge
adc
scas
xor
jns
icebp
(bad)
push
loop
jb
in
aam
je
xchg
ror
push
or
adc
sub
cli
push
fadd
dec
lahf
int
hlt
cli
in
movs
sahf
pop
xchg
(bad)
pusha
stos
frstor
lds
mov
or
sub
cmp
fdiv
and
add
ins
or
lods
(bad)
int3
adc
(bad)
lock
and
xchg
fstp
movs
mov
xchg
ja
mov
jae
addr16
sbb
or
and
cmp
xchg
jb
sbb
rcr
loopne
int3
je
pusha
fild
inc
xchg
frstor
fistp
jb
lds
imul
enter
mov
retf
dec
js
clc
add
imul
fisttp
push
mov
pusha
cmp
add
xchg
lds
daa
(bad)
mov
push
jae
lea
loopne
cmps
xor
adc
(bad)
je
pop
scas
out
mov
and
arpl
lahf
jmp
pop
in
or
inc
shl
mov
push
in
mov
loopne
test
cmps
dec
cmp
adc
mov
push
ss
jnp
inc
sti
and
inc
sbb
xor
loope
pop
stos
mov
into
push
cmp
pop
xor
out
sbb
dec
ss
jmp
fcomp
xchg
mov
mov
xchg
lea
inc
cmp
sqrtps
or
mov
cld
jbe
movs
inc
and
jb
scas
imul
mov
mov
iret
frstor
xchg
mov
cmp
psrlq
outs
xchg
inc
ret
or
fst
sub
cdq
jl
nop
sbb
add
pop
loope
pop
cdq
sbb
jo
in
sar
dec
mov
jp
ret
push
xchg
xor
mov
mov
push
inc
stos
sti
xor
push
add
cld
loop
adc
mov
or
push
mov
outs
pushfw
cmps
mov
add
call
or
in
stos
push
mov
xchg
add
add
or
(bad)
lock
addr16
in
xlat
sbb
aam
mov
lods
mov
shr
xchg
out
aas
out
cmp
shr
add
and
cmp
sub
repnz
inc
jnp
mov
call
call
shr
js
and
jp
iret
xchg
add
daa
dec
cmp
add
psraw
sahf
jo
outs
aas
push
mov
dec
sub
jnp
jno
jle
ja
jnp
sub
fldenv
add
movs
xor
or
xchg
inc
jl
scas
das
mov
test
ja
test
mov
aas
nop
push
ss
push
sbb
test
sbb
out
xchg
daa
inc
out
test
cmp
arpl
jmp
push
add
cwde
jle
jns
iret
xor
cs
loopne
mov
xor
lea
cmp
fistp
pop
ret
test
call
pop
mov
cmp
ja
adc
jb
(bad)
cmp
test
pop
pusha
pop
pop
jnp
cmp
jecxz
fcmovb
mov
push
add
push
hlt
mov
(bad)
mov
iret
inc
pusha
jb
popa
cmp
sbb
push
scas
mov
ret
sbb
jns
push
test
stc
pop
inc
pop
and
fisub
ja
js
out
jno
loop
mov
sub
and
in
add
and
out
push
jle
add
mov
leave
pusha
or
inc
test
push
icebp
ds
out
sar
adc
jge
mul
mov
(bad)
mov
fimul
imul
sbb
mov
jge
inc
push
shl
mov
push
in
enter
xor
inc
test
add
sbb
cdq
dec
jo
adc
jle
cld
cs
stc
or
dec
stc
inc
xor
jp
push
lods
cmps
mov
dec
fld
jge
mov
dec
cdq
pop
lock
or
xor
dec
retf
dec
mov
xor
pop
dec
jbe
pop
les
pop
push
mov
stos
mov
sub
lock
int3
and
repz
pushf
sub
mov
sbb
jecxz
sbb
jmp
test
xor
jmp
sbb
and
xlat
ret
cmp
jae
or
movs
repz
jecxz
mov
clc
xchg
mov
adc
addr16
mov
add
xchg
int
pop
xor
jo
jmp
push
fidivr
enter
push
push
mov
std
cmp
sbb
mov
(bad)
pop
sbb
mov
xchg
ins
les
mov
into
ins
inc
outs
clc
or
cli
fcom
clc
mov
mov
xor
adc
daa
push
sbb
mov
arpl
pop
pusha
dec
test
jecxz
je
clc
lahf
xchg
push
ror
jle
mov
jmp
js
mov
jmp
loopne
into
add
arpl
sti
adc
pop
sti
sub
sbb
imul
(bad)
add
sbb
xor
call
js
rol
sbb
jne
xor
mov
inc
cmp
loop
push
mov
push
sub
mov
or
aad
mov
out
or
jecxz
sbb
and
hlt
xor
fldcw
nop
xchg
push
sub
jb
scas
call
push
jb
add
lds
adc
mov
dec
es
icebp
cmps
jb
movs
sti
repz
call
ins
mov
cmps
aaa
adc
push
inc
loope
or
ror
add
scas
mov
and
jns
out
int
xchg
test
adc
and
pop
into
loopne
outs
push
ret
sub
ins
or
das
jmp
sbb
(bad)
aad
out
outs
ror
popa
fimul
popf
sbb
loope
ja
pop
cmp
adc
xor
pop
pop
(bad)
outs
cmp
jo
jp
push
xor
xor
push
pop
add
imul
cmc
ror
jmp
imul
dec
jecxz
push
mov
sub
js
push
adc
pop
fsubr
in
push
or
call
scas
gs
mov
bound
xor
int3
loop
inc
sbb
test
lods
pop
inc
imul
loopne
xchg
xchg
aad
sahf
push
push
ins
jg
mov
xchg
ror
imul
rcl
adc
mov
sti
stc
lds
xchg
pop
dec
push
inc
pushf
sub
dec
sbb
mov
ds
or
dec
jg
fsub
ret
xchg
loop
dec
jmp
gs
ret
sbb
int
fistp
pop
(bad)
jmp
bound
loope
add
enter
pushf
pop
cmp
push
es
call
mov
outs
es
sub
imul
jmp
icebp
adc
push
push
jl
mov
mov
gs
pop
pop
xchg
call
in
daa
out
jecxz
pop
outs
mov
lock
add
mov
jo
lds
add
ror
pop
addr16
std
lds
lock
mov
push
arpl
pop
xlat
pop
imul
in
dec
stos
pop
push
inc
jb
ret
pop
sbb
lahf
sar
jb
test
test
mov
int
mov
sbb
push
(bad)
clc
sub
mov
in
adc
mov
in
popa
data16
mov
ja
mov
cs
pop
xchg
push
mov
sbb
push
push
xor
xchg
bound
pop
sbb
or
sahf
stc
add
or
cmp
lods
pop
cmp
int
daa
mov
jge
div
retf
mov
pop
dec
xor
fprem1
test
or
test
fld
test
(bad)
adc
es
pop
sbb
cmps
(bad)
or
ja
jbe
cmp
icebp
dec
xchg
jo
lea
(bad)
cmp
sub
lea
pop
xor
or
xchg
jle
xchg
pop
adc
jmp
out
je
xor
lods
xlat
test
ins
and
stos
repz
movs
push
lock
push
jl
popa
and
jb
in
fst
mov
dec
mov
cld
bound
in
push
popa
std
pop
pop
(bad)
jle
adc
jo
pop
inc
dec
jmp
popa
xor
jg
mov
addr16
push
movs
les
les
call
dec
jecxz
dec
dec
xchg
retf
or
jmp
cwde
cmc
fs
and
js
pop
outs
adc
in
dec
jbe
cli
adc
xchg
(bad)
jae
cwde
jno
jg
push
iret
xchg
in
push
dec
test
shl
iret
ins
cmc
jp
das
cmps
jmp
jns
mov
adc
pop
jb
adc
dec
into
test
or
aad
fidivr
mov
test
aad
loope
sbb
bnd
jg
xlat
sbb
add
pushf
cld
and
popa
repnz
stos
rcpps
dec
(bad)
lea
pop
jle
outs
pop
cwde
iret
(bad)
je
out
add
stc
scas
xchg
(bad)
into
xchg
sahf
pop
out
pop
cmp
leave
icebp
into
inc
inc
les
popa
push
loope
xchg
xor
xchg
push
push
sub
out
pop
jmp
rcl
das
adc
jp
xchg
and
(bad)
rcl
or
pop
dec
xor
repz
mov
mov
out
mov
xchg
fidivr
scas
xchg
sbb
dec
xor
push
cmp
mov
inc
mov
nop
pop
aas
out
xchg
addr16
push
sbb
lods
xchg
aas
les
stos
sahf
sar
adc
cmc
inc
add
and
gs
call
xchg
pop
inc
xchg
loopne
mov
pop
(bad)
mov
shl
addr16
into
inc
(bad)
fsubr
xchg
ins
mov
fcomp
push
or
sub
and
shr
inc
mov
arpl
cdq
adc
and
cmp
push
rcl
sahf
jg
jmp
int
xchg
loopne
div
bound
xchg
fwait
xor
imul
ins
mov
inc
into
inc
push
ret
mov
dec
outs
mov
retf
pop
sar
js
sbb
sti
jb
or
dec
loopne
cmps
xchg
es
hlt
inc
pushf
mov
and
xchg
clc
xchg
adc
adc
cwde
sub
arpl
inc
cs
imul
xor
pop
sar
mov
pop
jmp
add
jns
add
dec
(bad)
push
into
loopne
pslld
or
jno
and
out
lds
and
int3
add
outs
adc
shl
jnp
xor
and
inc
sahf
push
stos
mov
dec
shr
stos
sub
fld
out
xchg
push
xlat
jae
pop
mov
mov
xor
outs
nop
stos
ss
stos
repnz
jge
lock
mov
sbb
or
push
mov
int3
jle
outs
or
add
mov
in
ins
push
repnz
jl
cmp
pop
aaa
rcl
jmp
fsubr
mov
or
sub
sub
push
or
test
fnsave
out
inc
sahf
or
lods
jle
jae
or
lods
sar
jns
inc
sbb
mov
mov
jl
or
je
sub
push
into
sti
jno
popa
addr16
push
lods
scas
jne
rol
jmp
test
add
int3
and
or
cs
dec
mov
cwde
(bad)
pop
inc
daa
cmps
mov
pop
lahf
and
pushf
xor
adc
out
dec
push
cli
imul
pop
cmps
sbb
aad
movs
mov
xor
xor
adc
mov
pop
mov
cmp
mov
push
inc
jne
sbb
mov
cmp
add
or
scas
adc
jns
mov
mov
(bad)
sub
outs
push
cli
inc
pop
sub
sbb
mov
movs
cmp
sub
rcr
xchg
mov
adc
mov
or
rcr
rcr
in
es
dec
push
stos
inc
adc
mov
fmul
pusha
shl
pusha
inc
jnp
jp
rcl
loop
les
stc
and
aam
loope
(bad)
fst
sub
out
add
stos
mov
lahf
adc
or
test
mov
dec
or
xor
xchg
lea
cmps
inc
pop
mov
pop
xchg
loop
shl
inc
xor
xchg
pop
aaa
imul
pop
mov
dec
arpl
lds
pop
cmps
jl
(bad)
popf
or
and
add
scas
push
xchg
push
out
jno
xchg
pop
(bad)
repz
xor
aas
ss
add
adc
mov
movs
aas
mov
int
cli
push
jae
aaa
xchg
ins
sub
sahf
jg
neg
dec
pushf
xlat
mov
imul
pop
sbb
inc
add
popf
cli
xchg
les
lods
mov
stc
fisttp
aaa
aaa
pmuludq
sbb
xor
mov
mov
cmp
cmps
or
adc
pop
jp
pop
mov
sub
cmp
idiv
fcomp
fstp
or
es
mov
inc
ds
repz
cld
push
ins
add
stos
ds
or
or
out
fiadd
xchg
repnz
das
xchg
adc
sti
mov
stc
or
mov
sbb
adc
mov
imul
in
stos
or
test
cmc
fsubr
cmp
movs
add
xor
mov
pop
cwde
int3
cmc
lea
sbb
shl
repz
dec
pop
daa
xchg
out
cmc
cld
pop
and
cmps
mov
js
fstp
jo
in
mov
jp
aam
sub
adc
jecxz
xchg
add
or
mov
sbb
lods
mov
xor
adc
jg
jmp
rcr
pop
in
and
shl
dec
jne
push
rcr
iret
mov
shl
or
push
movs
iret
sub
sub
jp
fild
cs
xchg
xlat
mov
popa
in
movs
not
push
jbe
test
aas
jge
dec
sbb
ret
cwde
(bad)
cmc
iret
and
jg
scas
test
or
fs
mov
cld
dec
out
mov
xchg
out
stc
dec
xchg
pop
xchg
lods
std
and
jle
jnp
popa
push
fst
sahf
retf
out
adc
int
adc
sbb
sub
xor
push
dec
jno
jl
(bad)
inc
call
adc
lea
loopne
outs
loop
adc
xchg
sub
idiv
lock
imul
test
fsubr
mov
mov
fisubr
xchg
adc
arpl
push
pop
rol
nop
mov
cmc
jne
inc
sbb
aaa
push
jecxz
sub
clc
inc
nop
lock
xor
dec
mov
das
(bad)
pop
xchg
inc
mov
data16
ins
push
bound
inc
mov
inc
push
shl
jbe
mov
sahf
jae
mov
js
dec
inc
jno
inc
ja
std
sbb
mov
dec
push
lock
push
mov
xor
jecxz
xlat
and
dec
in
xchg
shr
dec
out
mov
add
cmp
clc
cld
adc
mov
or
movs
jo
das
jnp
sbb
and
(bad)
or
data16
sub
xor
inc
push
and
nop
aaa
leave
cli
cmp
or
rcl
push
test
out
mov
mov
push
jmp
dec
mov
ret
adc
retf
add
retf
mov
xchg
scas
push
test
cmp
push
rol
pop
lods
add
push
sub
aas
(bad)
push
rcl
gs
imul
pop
jge
inc
hlt
fwait
outs
fisttp
loope
jmp
dec
and
sbb
enter
sub
sub
mov
retf
shl
aad
inc
ins
mov
movs
mov
mov
ror
jbe
dec
enter
ret
clc
dec
test
xchg
xor
mov
outs
dec
enter
(bad)
daa
mov
sbb
call
dec
data16
adc
not
test
pop
xor
out
neg
retf
aam
jae
jl
cli
ja
pushf
jg
in
fnstenv
xor
test
lods
cmc
cld
aaa
push
stc
mov
ret
sahf
mov
adc
fcomp
das
int3
push
jae
test
(bad)
cmc
loop
mov
fnstsw
cli
(bad)
cld
ds
call
or
adc
push
push
dec
mov
add
xor
cli
xchg
rcl
fsub
dec
cmp
or
lds
retf
jae
or
aaa
stos
mov
mov
jmp
cdq
movs
clc
pop
or
mov
mov
xor
(bad)
outs
xchg
jmp
hlt
lods
fs
jne
cmp
scas
xchg
and
jb
test
push
jge
push
add
and
add
sbb
sub
push
add
jmp
hlt
sub
inc
ja
xor
sbb
jg
xor
fwait
std
fdivr
ret
outs
ror
cmp
lods
jmp
fld
xchg
pop
nop
shl
lahf
test
pop
sbb
ret
mov
inc
cmp
mov
pop
inc
shl
xchg
xchg
xchg
jne
retf
inc
pop
dec
push
(bad)
(bad)
daa
cmp
loope
hlt
xor
push
xor
add
jg
loope
mov
add
xchg
rcr
dec
jp
jbe
xchg
cmp
icebp
push
(bad)
pop
jb
cmp
sbb
ss
xor
xor
push
stos
das
xchg
jl
inc
int3
xor
xor
or
sbb
loope
rcr
or
cmp
addr16
cmp
and
fmul
ret
sahf
ret
pusha
inc
test
(bad)
cs
adc
inc
loopne
out
nop
mov
out
or
xchg
scas
scas
loope
in
daa
xchg
into
mov
mov
mov
fidiv
movs
jp
sbb
xor
sti
jg
mov
inc
add
mov
add
xor
cmp
dec
push
test
push
imul
out
push
rcl
add
cmp
nop
and
iret
sbb
cli
xlat
jb
or
push
add
fcmovne
jb
retf
imul
and
push
pop
ret
mov
(bad)
imul
cmp
repz
mov
pop
jbe
fwait
pop
mov
and
aam
pop
pusha
inc
imul
fdiv
mov
and
arpl
(bad)
movs
(bad)
cmps
adc
mov
mov
sub
pop
movs
jecxz
aaa
(bad)
loope
mov
data16
neg
inc
cli
cmps
cmps
and
mov
fadd
dec
and
or
cmc
and
jp
mov
fwait
(bad)
jp
jno
or
int
in
xchg
dec
clc
mov
mov
push
and
retf
test
jne
call
mov
movs
(bad)
test
adc
std
xchg
mov
addr16
int
sar
pop
mov
sti
call
xor
adc
pushf
mov
pop
cmp
or
test
sub
sbb
hlt
fs
sub
mov
lds
aam
mov
sbb
(bad)
iret
inc
test
out
cmp
mov
dec
mov
cmp
mov
pop
add
retf
cmp
and
test
clc
pop
add
mov
nop
mov
add
mov
xlat
mov
fst
inc
pushf
mov
nop
and
xchg
stc
jge
adc
sbb
es
dec
(bad)
sub
xor
cs
repnz
sbb
jo
cmps
mov
outs
and
loopne
cmp
jmp
outs
add
mov
add
jns
mov
sbb
inc
lods
fldenv
pop
(bad)
mov
pop
arpl
jecxz
ss
scas
push
loop
jne
(bad)
push
jbe
mov
sbb
inc
pop
add
add
retf
xchg
mov
add
gs
push
or
mov
cli
push
cmps
cmp
daa
pop
xor
pop
scas
addr16
rcr
icebp
sbb
dec
(bad)
bnd
call
out
mov
aam
and
repz
repnz
fdivr
jnp
fisub
sbb
jl
mov
push
call
mov
int
out
jmp
add
data16
in
dec
sbb
(bad)
xor
dec
and
(bad)
retf
pop
stos
mov
mov
dec
enter
mov
pop
pop
fld
add
fcomp
xor
fild
jg
xchg
mov
cmp
or
in
dec
pop
fisubr
pop
or
stos
aam
repz
sbb
rol
pop
lea
cmp
sar
scas
inc
adc
mov
lock
dec
neg
into
sub
daa
call
sub
jno
pop
add
cmc
dec
call
iret
pop
jmp
test
fst
dec
xlat
fidiv
ficomp
aam
mov
cld
test
push
add
inc
jecxz
retf
stc
test
add
(bad)
cdq
in
(bad)
aas
in
push
pop
dec
retf
out
mov
mov
daa
and
mov
or
xchg
dec
sbb
loop
jl
hlt
adc
add
int
inc
stos
(bad)
xchg
jae
mov
mov
cmp
pop
cld
xchg
gs
mov
add
rcr
cmp
in
sbb
or
and
jmp
hlt
mov
xor
pop
or
mov
loop
xor
xchg
mov
test
sub
out
jl
sub
adc
add
push
std
(bad)
add
or
dec
or
adc
(bad)
xor
aas
fnstenv
mov
jecxz
(bad)
mov
pop
or
fmul
imul
xchg
mov
jg
sbb
mov
nop
mov
or
arpl
sub
push
cwde
in
sub
fdivr
xlat
dec
and
sbb
fwait
mov
out
inc
and
jl
xor
adc
adc
xor
dec
push
cdq
jnp
mov
call
cmp
imul
mov
jnp
out
mov
nop
pop
ret
mov
mov
fstp
popa
(bad)
call
pop
mov
xchg
popf
jne
mov
pop
fistp
aad
xchg
ins
call
mov
push
or
cmp
xor
sub
xchg
dec
xchg
jle
fwait
aad
xchg
inc
adc
push
push
mov
in
xchg
xor
retf
push
ret
mov
repnz
mov
les
pop
ins
sbb
adc
pop
fcom
movs
mov
mov
sub
int
test
or
push
jl
fstp
lds
xchg
sbb
add
repnz
pop
or
mov
pusha
xchg
stos
jnp
inc
(bad)
pusha
es
push
test
repz
adc
ret
mov
jbe
dec
push
and
imul
jmp
in
xchg
lock
jge
icebp
clc
outs
xor
rcr
repz
jmp
(bad)
sub
jge
cs
ror
lods
sub
sub
cmps
xor
pop
mov
call
adc
(bad)
mov
xchg
mov
fsub
rol
aam
sbb
sbb
adc
dec
xor
add
add
mov
or
out
jp
sbb
xchg
fsub
test
jo
jb
jl
and
mov
push
jl
xchg
sti
je
jl
sub
out
gs
ret
lock
jl
(bad)
adc
pop
test
adc
jns
adc
push
push
push
push
or
push
xor
xchg
cmp
les
fld
out
(bad)
sahf
add
stos
or
mov
pop
out
xchg
and
in
pop
mov
fbstp
mov
sub
xchg
or
xchg
jmp
je
fstp
mov
mov
xor
sub
retf
ror
mov
jae
inc
(bad)
pop
stos
push
add
imul
shl
movs
or
xlat
popa
fisttp
dec
in
mov
jg
test
(bad)
retf
(bad)
mov
aaa
push
inc
sub
mov
or
xchg
test
add
movs
add
stos
push
jp
lahf
lds
adc
mov
jo
mov
test
into
call
ret
jnp
inc
inc
shl
repnz
cli
push
jg
clc
mov
or
movs
out
aad
hlt
loop
mov
enter
xor
call
mov
push
fldcw
mov
xchg
aam
je
and
jnp
stos
add
sub
xchg
and
mov
loope
add
jmp
ins
in
or
movs
inc
push
test
sar
jb
popf
fnstsw
sahf
inc
add
dec
aad
xor
fdiv
fdiv
sbb
xchg
cmp
test
outs
inc
in
or
pusha
cld
mov
jg
xchg
push
neg
xchg
jae
adc
jo
cmps
push
push
cmp
outs
jmp
movs
cmc
pop
sbb
ja
push
enter
mov
xor
mov
adc
retf
jmp
jns
push
adc
push
add
sub
popa
ja
cmps
xor
int
mov
aad
sbb
rcl
test
mov
test
daa
loopne
(bad)
(bad)
or
sub
cwde
ins
in
add
pop
jns
mov
jg
jno
outs
jmp
std
xchg
icebp
adc
test
in
cli
(bad)
int3
sub
add
gs
mov
push
cmp
test
mov
fs
repz
cmps
pop
cs
xchg
mov
cdq
scas
jne
mov
call
add
mov
loope
int
into
xchg
int
icebp
add
pop
fmul
std
fisub
add
ficom
sub
cmps
les
fs
xchg
inc
adc
and
inc
xchg
xchg
adc
add
jno
dec
add
addr16
jnp
mov
mov
jle
pop
fs
inc
mov
cmp
jnp
jno
jmp
ficomp
pop
pop
mov
sub
sbb
pop
mov
xchg
call
outs
adc
xor
gs
movs
and
mov
lods
push
in
mov
mov
mov
push
pushf
sub
sahf
stos
imul
clc
add
rol
mov
lahf
xchg
imul
pop
push
rol
jmp
aaa
int3
or
inc
add
jecxz
cmc
movs
test
fld
jp
xchg
sbb
jge
cli
push
or
mov
push
nop
int3
(bad)
and
data16
inc
rdtsc
in
retf
in
jmp
sbb
push
adc
lods
adc
add
lods
jne
xchg
out
cmp
(bad)
fild
adc
xchg
stc
ss
std
je
out
jno
out
mov
pop
mov
mov
mov
stos
mov
adc
lock
cmp
jnp
mov
in
mov
cld
jno
cmp
add
je
inc
cmp
jo
inc
loop
or
fstp
xchg
rcr
cli
neg
adc
and
xor
xor
dec
pop
cmp
push
or
fidivr
jne
shl
fld
cmp
xor
shr
cmps
push
jl
test
or
ins
pop
dec
icebp
cmp
iret
daa
mov
jo
stos
out
test
mov
bound
push
cdq
out
dec
hlt
and
jge
or
inc
and
mov
push
loop
mov
stos
xchg
pop
adc
fwait
mov
ret
nop
xor
jnp
(bad)
jne
into
add
mov
cmps
sub
call
xchg
adc
ss
add
jl
xlat
mov
sbb
sar
or
jg
xchg
(bad)
and
out
int3
mov
inc
add
out
ret
pop
shr
mov
jp
pop
jno
fbld
mov
dec
lahf
pop
adc
xlat
add
xor
(bad)
sbb
sub
or
and
test
(bad)
rcr
mov
lea
rcr
aam
mov
call
xor
jg
(bad)
fadd
(bad)
push
dec
ficomp
jmp
mov
xchg
pop
fwait
mov
sub
sub
out
mov
pusha
in
cmp
push
xor
clc
push
mov
test
imul
rcl
push
retf
pop
push
cdq
cmp
jle
lods
shl
and
aad
inc
jp
adc
sar
pop
rcl
leave
movs
(bad)
scas
mov
bound
retf
stos
sbb
loopne
sub
lock
into
cmp
sub
sub
jle
or
les
dec
add
js
xchg
mov
sub
mov
and
loopne
inc
ret
popa
sub
cmp
jnp
sub
and
hlt
pusha
(bad)
inc
ins
xor
add
popf
mov
mov
pop
adc
push
jp
push
into
cmp
xor
dec
sti
inc
xchg
xchg
stos
cmp
sbb
(bad)
jno
mov
pop
(bad)
dec
pop
fisttp
fst
aas
retf
(bad)
repz
rep
cmp
adc
xor
cmp
(bad)
loope
xchg
ss
cdq
fld
dec
scas
sbb
call
jmp
loopne
and
(bad)
mov
mov
ins
sbb
cmp
sar
push
jle
jmp
push
pusha
sti
xchg
pushf
pop
and
ds
pop
mov
popf
lods
xchg
and
sub
enter
pop
mov
xchg
or
shl
rol
loope
das
aad
xchg
retf
enter
push
add
jnp
sar
sub
cmp
std
(bad)
jmp
stos
and
pop
xor
nop
xchg
and
push
aas
fcmove
(bad)
clc
arpl
cmp
dec
nop
ins
je
(bad)
sub
nop
sub
nop
mov
iret
pop
sbb
div
fmul
icebp
push
mov
pusha
dec
dec
hlt
popf
xor
scas
mov
(bad)
add
or
mov
addr16
pop
adc
ficomp
stc
cmp
and
jl
(bad)
ins
inc
js
add
ds
aas
xchg
and
pop
dec
in
stos
jmp
sbb
call
inc
or
and
test
xchg
stos
leave
mov
ja
mov
fiadd
in
retf
pop
lock
dec
ins
xor
adc
shl
jp
scas
lods
jno
mov
and
popa
cmps
or
out
jl
out
pop
xchg
inc
pop
(bad)
scas
sbb
adc
call
jns
fist
je
or
pop
(bad)
fld
frstor
pusha
int
in
push
mov
push
std
inc
xchg
push
int
pop
mov
mov
cmp
(bad)
idiv
rcl
call
cmp
outs
xor
push
mov
jmp
leave
fld
xor
(bad)
(bad)
inc
xor
or
fsubr
call
daa
loop
jo
add
xor
mov
cwde
stc
dec
add
call
and
or
jb
mov
pushf
cmc
jae
movs
mov
stos
aad
pushf
mov
cmp
cld
bound
stc
jmp
add
push
imul
and
cwde
fwait
cli
les
test
add
jecxz
adc
add
cmc
dec
push
jecxz
sahf
ss
sbb
arpl
cmc
into
aas
add
ins
std
mov
inc
jl
adc
mov
xchg
test
dec
inc
pop
dec
jg
test
enter
outs
mov
hlt
stos
loop
repz
cmc
push
je
(bad)
(bad)
call
and
pushf
sbb
xlat
mov
push
add
out
mov
jae
mov
cwde
addr16
mov
std
sub
fist
jo
mov
sub
mov
out
mov
mov
(bad)
in
ds
dec
or
xor
jmp
ret
hlt
xor
pusha
and
aad
dec
out
mov
aas
jp
pop
mov
mov
jns
movs
jp
push
fwait
lock
stc
aas
pop
adc
mov
cmps
fidiv
push
iret
xchg
in
pop
dec
retf
push
cmp
xchg
pushf
inc
inc
jle
test
sbb
repnz
or
jae
rol
ret
adc
sub
mov
mov
aas
(bad)
push
mov
shr
cmp
mov
add
out
sub
mov
inc
mov
or
shr
sub
cmp
add
add
sar
pop
sub
int3
dec
jno
in
arpl
lock
imul
mov
xor
xchg
pop
sub
or
mov
icebp
cmp
dec
mov
jp
push
test
pop
mov
xlat
jo
mov
jecxz
xor
mov
pop
sub
push
(bad)
cmps
out
push
pop
ror
push
sub
cmc
mov
or
hlt
repz
int3
je
push
xchg
les
dec
xchg
pop
or
push
mov
test
stos
push
mov
mov
(bad)
les
inc
push
stos
xlat
xchg
xchg
stc
jb
popa
push
xor
data16
cmp
sbb
fist
pop
xchg
(bad)
jne
xchg
adc
mov
das
xchg
xor
sub
and
pop
imul
jg
and
mov
outs
mov
call
bound
clc
ins
push
(bad)
out
xor
mov
mov
daa
xor
mov
ror
in
sbb
dec
pop
or
out
ss
stc
add
js
jecxz
add
push
dec
sahf
pop
or
test
jecxz
pop
loope
cs
inc
xchg
cli
inc
data16
cmp
fsubr
test
mov
fcom
inc
mov
or
pop
mov
mov
jge
ror
mov
cmp
dec
retf
jge
xchg
stos
daa
xchg
cmp
fdivr
or
mov
sti
and
ins
dec
gs
sub
inc
xchg
shl
(bad)
mov
inc
or
into
fldcw
mov
mov
mov
push
sbb
mov
stos
cmps
jp
ror
aad
push
fsubr
fld
bound
mov
xchg
sub
adc
or
add
or
mov
or
push
xchg
jb
shl
jmp
shl
(bad)
inc
or
jmp
fsubr
icebp
fs
push
pop
or
ins
ds
stos
lahf
retf
sbb
inc
fstp
jb
mov
enter
add
xor
xchg
lods
mov
frstor
cmps
stos
push
dec
(bad)
sar
adc
dec
dec
ror
retf
(bad)
mov
cld
cwde
bound
outs
clc
xchg
or
jl
dec
in
or
cld
dec
mov
lahf
test
(bad)
pop
sbb
rcl
fnsave
inc
clc
ds
push
push
jg
jb
mul
lods
stos
inc
ficom
fcomp
xchg
push
mov
jnp
call
fwait
add
xor
mov
cmps
es
add
cdq
call
retf
test
cdq
jle
dec
aaa
arpl
mov
sbb
into
pusha
(bad)
int
mov
inc
add
jmp
imul
add
push
stos
push
inc
and
lock
pop
mov
xor
int3
repz
(bad)
add
out
(bad)
jmp
rcl
les
cmp
jecxz
inc
gs
pusha
push
sub
pushf
imul
call
sub
cld
dec
mov
push
sbb
dec
retf
xchg
(bad)
scas
icebp
cmc
mov
(bad)
xlat
ss
jge
iret
lods
pop
push
jne
cmp
push
and
(bad)
scas
clc
or
add
jae
mov
xor
ja
sbb
xor
stos
mov
dec
push
adc
fisub
faddp
fidiv
or
aam
push
xchg
and
sub
pusha
sub
nop
inc
sbb
into
cmp
lods
cmp
(bad)
sub
push
lock
sbb
jno
jo
fidiv
sti
pop
sbb
idiv
mul
ins
adc
fwait
jns
stos
imul
and
(bad)
in
adc
jbe
adc
lods
mov
pushf
cwde
or
stc
mov
cmc
and
jae
mov
int
adc
xchg
es
mov
jmp
xor
pop
(bad)
sub
sbb
sbb
std
(bad)
jmp
sub
push
inc
cdq
xor
pushf
push
dec
or
pop
xchg
pushf
lds
jno
push
xchg
test
neg
hlt
fscale
lock
xchg
loopne
nop
in
bnd
imul
sbb
call
aam
movs
pop
xchg
pop
cmp
mov
repz
xlat
add
jl
int3
xor
stc
xor
pop
stc
cmps
gs
test
mov
add
hlt
cmc
sbb
push
sbb
(bad)
cmp
ins
outs
mov
xchg
out
xor
cli
popf
mov
dec
movs
mov
sub
test
ins
sub
adc
pushf
fnstcw
mov
adc
mov
lea
sbb
pop
arpl
int3
pop
stos
dec
loope
fwait
mov
inc
sti
sub
cli
ret
ins
adc
mov
mov
(bad)
mov
pop
fs
ret
mov
dec
mov
(bad)
lahf
and
push
adc
dec
outs
aas
mov
aas
mov
ror
adc
adc
add
fnsave
imul
dec
ins
pop
inc
loope
dec
(bad)
pop
dec
jge
out
pop
js
xchg
jp
xchg
leave
daa
push
or
xchg
dec
int
lea
rcl
sub
(bad)
jp
jl
adc
cmc
adc
lods
movs
jbe
jns
and
jns
adc
jbe
sbb
popa
rol
enter
cmps
xchg
pop
mov
mov
push
pop
call
ja
ja
mov
movs
stos
ins
(bad)
ins
loope
or
dec
les
mov
pop
mov
test
pop
icebp
sub
jae
pop
xor
mov
sub
outs
jg
in
and
cs
add
rol
jo
rcl
push
add
xlat
daa
jp
(bad)
stos
add
push
iret
inc
icebp
push
icebp
mov
pop
jmp
sar
and
rcl
cwde
imul
adc
adc
ret
add
and
xor
xchg
xor
sbb
loop
dec
xchg
dec
or
pusha
jns
pop
loopne
xor
xor
clc
icebp
cmp
xor
mov
or
push
ficomp
or
jo
or
data16
or
stos
push
pop
push
int3
adc
pop
mov
mov
add
les
cs
add
ins
fdiv
push
mov
push
popa
ins
rol
jecxz
xchg
and
dec
dec
aaa
je
jno
lds
test
xchg
outs
sub
das
out
push
std
out
arpl
jne
pop
repz
call
lea
add
cld
ins
jecxz
mov
and
push
xchg
ret
adc
push
pop
mov
cmps
mov
xchg
add
pmuludq
mov
or
mov
test
popf
add
jge
push
mov
es
adc
cld
es
loop
xor
stos
mov
cld
cmp
ins
mov
(bad)
in
retf
dec
push
xor
les
dec
add
call
mov
das
cmp
and
sub
adc
cmp
ds
add
sub
lahf
loop
icebp
retf
in
sahf
and
mov
mov
inc
cmp
mov
mov
inc
lea
jg
aas
and
ds
sub
mov
retf
icebp
stos
pop
inc
cmp
aas
and
mov
jbe
adc
add
movs
fcomip
ror
cwde
(bad)
in
xchg
icebp
repz
add
mov
pop
adc
ins
sbb
pop
jb
sub
mov
lock
pop
aad
in
pop
sbb
mov
cmps
lods
loopne
adc
aam
jp
inc
in
lahf
repz
outs
lea
int
scas
mov
dec
and
jno
xor
or
mov
arpl
sub
dec
mov
test
or
jmp
arpl
inc
pop
scas
aad
rcr
inc
cmp
add
call
xor
mov
cli
mov
stos
sub
in
adc
fistp
mov
add
sub
aas
ja
push
cwde
bound
xchg
cld
movs
lds
cmp
test
popa
and
gs
sub
sti
aad
popa
mov
pop
mov
sub
cmp
bnd
ss
sti
lock
test
mov
test
sub
mov
mov
xchg
sub
and
sub
and
mov
fs
mov
pushf
fidivr
cmp
inc
stc
(bad)
inc
out
data16
mov
adc
push
add
test
addr16
xchg
or
clc
inc
ins
(bad)
ins
xlat
mov
add
rcr
cs
mov
shl
xor
pop
pusha
jmp
rol
xor
inc
dec
mov
repz
inc
inc
xadd
sbb
xlat
bound
jno
cmp
mov
test
adc
rcr
jo
sbb
sub
and
push
mov
pusha
lock
mov
push
add
xchg
cmps
pop
cld
pop
jg
ret
and
popf
or
(bad)
adc
orps
mov
mov
cwde
icebp
leave
push
arpl
aam
ret
push
cmc
add
ins
sub
enter
mov
cli
cmp
cmp
push
(bad)
mov
leave
xchg
and
sub
in
idiv
(bad)
push
xchg
jge
sub
cdq
xor
mov
dec
add
int3
in
or
dec
call
fimul
loop
aad
in
sti
jecxz
(bad)
les
stos
test
push
mov
test
scas
ins
mov
mov
pushf
adc
xor
ret
jecxz
data16
mov
mov
outs
aas
sti
cmp
cmp
out
mov
jne
mov
std
stos
nop
sub
pop
movs
sti
push
cmc
out
and
jmp
ja
jg
mov
xchg
sub
movs
mov
in
inc
add
dec
cmp
xchg
movs
ins
cmp
nop
sub
js
pop
xchg
scas
mov
push
mov
add
icebp
mov
fldenv
fwait
inc
imul
mov
xor
xchg
push
pop
jge
mov
mov
add
xchg
and
dec
sub
xor
mov
pop
ja
lahf
fistp
jmp
aas
mov
adc
scas
add
lds
in
in
shl
mov
clc
pop
icebp
jo
inc
call
ret
ret
rsm
popf
in
mov
xor
loope
xchg
cmp
mov
push
push
push
call
sub
pop
pop
fcomp
lea
sbb
inc
xchg
sbb
pop
push
push
xchg
or
mov
cmpxchg
stc
mov
(bad)
scas
(bad)
ret
or
adc
ficom
cmp
cli
sar
in
ret
jo
rcl
mov
xchg
cdq
jmp
push
and
mov
sub
stos
xchg
les
xor
inc
cwde
xor
sahf
pop
add
lock
fdivr
sbb
call
iret
fidivr
pop
jne
paddusw
rol
sbb
test
add
fnstcw
out
lea
ins
push
inc
pop
ficom
ja
push
leave
sub
xchg
mov
cmp
loope
movs
xor
add
sbb
jne
lods
jns
stc
cmps
inc
push
jl
mov
cmp
mov
fsub
jae
mov
lahf
mov
fldcw
enter
(bad)
mov
jne
pop
fs
push
pop
mov
or
cmps
pop
in
inc
sub
pop
mov
add
jge
js
popf
popf
add
jle
xor
js
xchg
out
add
(bad)
dec
daa
sbb
cmp
lds
test
jbe
dec
cmc
mov
mov
jb
or
ret
mov
gs
adc
cmp
nop
inc
xlat
pop
int3
mov
inc
jae
sbb
int
mov
(bad)
fdivr
cmp
mov
arpl
jb
sbb
cmp
leave
ret
stos
pop
je
pusha
and
mov
adc
cdq
mov
xchg
(bad)
cmp
movs
out
ret
lods
xor
xchg
sub
sti
sbb
les
and
retf
mov
or
and
push
fs
daa
fld
ret
xlat
pop
js
fidiv
or
(bad)
or
xor
(bad)
in
test
push
dec
sbb
inc
pop
mov
jb
xchg
or
movs
or
popa
pop
fadd
push
sbb
jo
cmp
or
mov
jne
mov
adc
pop
jmp
xchg
js
into
fs
lea
mov
scas
sub
or
jmp
cmp
test
int
mov
je
fstp
push
push
cmp
mov
in
xor
adc
jecxz
ror
cld
sbb
mov
mov
icebp
or
fwait
lock
sahf
push
int3
sub
add
fnstenv
push
pop
add
push
in
daa
push
(bad)
out
cmp
push
lock
dec
push
cmps
pop
push
mov
jmp
scas
nop
jb
mov
mov
enter
ret
nop
ds
pop
mov
and
xchg
adc
and
ins
dec
enter
adc
loopne
popf
or
mov
push
lahf
push
call
inc
rcl
int3
int3
add
in
xor
test
pop
sbb
fwait
repz
gs
pop
iret
xchg
push
aad
mov
mov
aad
mov
ret
jae
jl
nop
cli
sub
and
push
and
je
or
je
jbe
push
add
jmp
mov
popa
stos
mov
sbb
xchg
sbb
scas
out
fcom
out
sub
fwait
sub
or
and
xchg
test
popf
and
aaa
dec
push
loopne
lods
mov
shld
jge
or
fnclex
jns
dec
imul
pop
sub
test
imul
sbb
jb
sub
push
dec
sub
cmp
lock
mov
(bad)
iret
sbb
jecxz
mov
sub
or
mov
jae
in
inc
stos
xchg
(bad)
ds
popf
jl
std
imul
mov
cmps
ret
jns
cmps
cli
pop
in
dec
mov
in
rol
in
sub
pop
sub
and
ss
loope
fcom
jmp
inc
adc
leave
add
pushf
fsub
ins
push
adc
ins
and
xchg
or
dec
push
cmp
xchg
jo
in
or
das
imul
xchg
pusha
push
xchg
mov
cmc
cdq
pop
sub
push
repnz
mov
popa
or
arpl
xor
jp
jo
push
fimul
mov
nop
fisttp
dec
retf
mov
dec
xchg
inc
adc
test
adc
ret
or
xchg
pop
xor
ror
xchg
or
outs
fnstenv
mov
inc
scas
mov
call
imul
and
jg
rcr
mov
mov
or
xchg
inc
mov
lahf
adc
xlat
xor
loope
mov
dec
outs
shr
mov
fcomp
and
push
jns
cmps
mov
aaa
cli
push
addr16
call
inc
enter
and
sub
xchg
loopne
and
or
sub
cld
dec
ins
pop
and
xor
fdivr
pop
outs
and
arpl
xchg
sub
(bad)
sub
rcr
jp
xchg
int3
mov
repnz
jmp
dec
push
add
sub
or
inc
rol
stos
jae
dec
and
fdiv
dec
xor
mov
cs
cmp
sbb
mov
mov
jb
sahf
mov
je
lock
push
cdq
mov
iret
xchg
pop
js
mov
test
xchg
sub
mov
jmp
call
outs
stos
aam
mov
jb
enter
pop
jl
xor
hlt
les
jae
push
shl
sahf
mov
out
xor
lods
push
pop
(bad)
out
sub
and
lds
rol
jmp
cli
xor
cs
fsubr
lock
add
daa
xchg
adc
mov
aas
add
or
cld
fiadd
dec
dec
fs
push
add
rol
stos
shl
jmp
push
xchg
sub
cmp
mov
stos
dec
shr
inc
push
jle
jp
jae
call
xchg
stos
je
mov
dec
fwait
push
xor
push
jnp
sbb
int3
jns
inc
outs
push
cdq
aas
out
jnp
(bad)
(bad)
scas
arpl
lods
repnz
into
out
add
jmp
shr
test
pop
cwde
lock
lds
mov
in
push
mov
adc
retf
cmp
mov
repz
push
jne
push
sbb
pop
or
mov
mov
fisttp
push
inc
cmc
pop
xor
push
dec
jns
and
loopne
jno
fadd
push
or
lods
lahf
mov
les
inc
popf
lock
xlat
jmp
and
int
sbb
retf
arpl
js
jb
ret
inc
inc
jnp
ins
ins
inc
sub
adc
add
sub
imul
hlt
mov
daa
in
clc
jnp
and
bound
mov
dec
cwde
jmp
je
gs
clc
jns
add
or
push
fdivrp
mov
mov
cmp
cmps
mov
in
push
pop
call
cmp
jp
int3
mov
xor
mov
lea
test
popf
dec
push
jmp
jo
ins
pop
mov
jmp
jmp
mov
lock
push
mov
inc
or
or
cmp
call
jb
fsubr
fld
cmp
fdivr
jne
push
jl
mov
stos
dec
(bad)
movs
call
cmp
push
lock
xor
jecxz
jp
jle
sub
imul
jmp
or
mov
outs
out
dec
lods
add
js
and
sbb
je
adc
sbb
jmp
cmp
leave
add
clc
addr16
(bad)
retf
sub
fs
ret
mov
aad
popa
scas
fild
pop
repz
push
jae
int3
jo
in
add
push
push
mov
push
sbb
das
push
call
aas
leave
inc
inc
jno
aam
outs
fidivr
xor
xlat
mov
sub
shl
idiv
ja
cmps
sbb
cmp
bound
sub
sar
adc
ins
push
cmp
sbb
xlat
cmps
lahf
adc
push
lea
dec
add
dec
or
and
(bad)
out
pop
int
jmp
xchg
push
jmp
push
aad
(bad)
mov
xchg
jo
ret
mov
xchg
aaa
jae
dec
adc
xchg
sti
push
adc
jmp
lock
pusha
push
bound
fcmovb
adc
out
mov
stos
cmps
outs
mov
out
arpl
lods
pusha
push
jge
or
xchg
mov
(bad)
imul
enter
dec
sbb
std
repnz
pop
loop
out
lods
cmp
mov
in
enter
push
cmps
dec
cmps
jae
lock
pop
jno
iret
fidivr
mov
shr
push
jns
xchg
or
mov
adc
sbb
pop
clc
cmp
mov
outs
enter
jmp
shr
jae
repnz
dec
repnz
mov
or
cwde
out
ja
fwait
neg
pop
jecxz
enter
adc
cdq
(bad)
and
loop
(bad)
inc
sub
mov
push
inc
mov
out
mov
(bad)
enter
mov
sub
jmp
pop
jbe
cld
cmp
xor
xchg
jne
mov
cmps
std
xchg
mov
xor
popf
add
mov
in
cmp
jae
xchg
mov
dec
jne
test
shl
jp
pop
mov
hlt
lea
clc
aam
(bad)
cwde
fsubr
adc
xor
jmp
mov
enter
push
clc
aaa
mov
cmps
mov
jecxz
movs
push
out
fld
mov
push
loope
imul
ret
and
dec
das
and
cmp
sub
mov
test
dec
push
jl
call
jbe
pop
es
push
jmp
lds
bound
mov
out
inc
ficom
fwait
add
in
inc
cmp
out
(bad)
lods
ror
and
mov
test
pop
jge
lods
std
clc
pop
stos
sub
cwde
jnp
fcom
jmp
sub
ficom
jae
rcr
pushf
push
jecxz
adc
lods
(bad)
jmp
ficomp
mov
push
sti
int3
inc
int3
stc
jg
out
jae
sbb
push
cmp
in
ret
push
out
push
jns
inc
or
std
jp
mov
data16
mov
add
mov
loopne
sub
push
add
push
or
ds
fmul
leave
dec
mov
dec
sub
sub
inc
je
retf
lods
xchg
pop
jmp
dec
je
push
dec
icebp
in
out
call
movs
adc
mov
ds
in
mov
ret
dec
cmp
out
loop
dec
pop
jg
popa
fsub
xor
cmp
inc
mov
xchg
jecxz
dec
dec
aad
adc
add
sbb
mov
(bad)
(bad)
jno
jmp
mov
movs
retf
xor
adc
cmp
in
cmp
dec
or
inc
xor
mov
inc
pop
pop
dec
pop
push
jno
imul
fstp
and
add
les
sbb
adc
add
mov
jnp
test
push
add
xor
(bad)
js
aaa
je
add
push
mov
ds
fincstp
daa
mov
aaa
ins
fcomp
fwait
hlt
mov
daa
xchg
loopne
aaa
imul
mov
dec
cli
cwde
or
out
call
inc
mov
mov
mov
retf
xrelease
in
cmp
cwde
in
arpl
mov
lods
sbb
stos
ror
aaa
jle
adc
fisub
aas
ret
mov
repz
ja
inc
mov
pop
(bad)
ins
xchg
fnstenv
stc
jge
icebp
inc
popf
sub
aad
out
jb
push
shl
pop
imul
rol
outs
out
or
push
push
je
sahf
cdq
sub
scas
cmp
xchg
mov
shl
sub
stc
outs
test
fnstenv
lods
pop
sahf
xlat
xchg
sub
out
mov
inc
xchg
in
pop
test
fdivr
mov
or
loop
call
pop
mov
xor
cmp
repnz
or
jno
sub
ds
jg
push
fs
xchg
retf
les
dec
(bad)
mov
adc
loope
mov
xchg
sbb
and
imul
sbb
push
in
mov
out
sub
cmp
dec
icebp
xchg
push
in
push
sar
sbb
call
inc
pusha
outs
dec
add
lods
in
in
jmp
in
sti
push
test
xchg
pop
daa
aam
jno
les
xchg
jmp
jl
push
mov
imul
and
pop
push
sbb
mov
adc
cmp
cmp
and
xlat
jmp
cmp
cmp
retf
cmp
and
pop
loope
cli
xchg
pop
cwde
(bad)
inc
push
mov
adc
or
fwait
(bad)
push
call
xor
mov
shr
(bad)
pop
or
pushf
sub
movs
jmp
ins
mov
fisubr
cld
xchg
pop
jbe
mov
add
cli
int3
mov
xchg
sbb
mov
mov
arpl
mov
lds
leave
push
and
out
xchg
add
ror
mov
jo
fwait
sub
inc
rol
call
push
ds
sar
ds
arpl
sub
cdq
xchg
jne
adc
cld
aam
lds
jg
jnp
xor
stos
dec
call
cmp
js
add
idiv
pop
jmp
in
repz
jb
jo
lods
adc
pop
in
sbb
xchg
cmps
(bad)
aam
xchg
jo
ret
rcl
loope
lea
jg
push
or
sar
inc
aad
leave
out
jge
bound
arpl
in
mov
adc
xchg
repnz
rep
adc
and
xor
sbb
sbb
imul
rdmsr
sbb
stc
dec
push
idiv
cmp
xchg
cmp
dec
add
mov
sub
or
mov
push
pop
stos
jg
add
sbb
sub
pop
cmp
sbb
pop
test
ss
adc
movs
xchg
adc
sbb
jmp
push
pop
clc
fbstp
push
pop
idiv
mov
mov
or
mov
push
iret
xchg
in
mov
sbb
(bad)
ds
in
mov
(bad)
push
mov
mov
jns
fmul
in
repnz
jae
(bad)
cld
outs
xchg
and
push
jne
sahf
mov
call
xchg
xlat
cmp
enter
mov
fsubr
sub
mov
mov
mov
pop
add
pop
mov
xchg
ss
and
jge
lock
mov
xchg
fsubr
xor
lods
add
je
imul
xor
xchg
and
into
movs
mov
(bad)
push
push
xor
mov
arpl
push
jle
lahf
push
sbb
cdq
je
retf
imul
cmp
push
out
lahf
dec
jb
cmp
jnp
adc
test
xor
jmp
adc
cmp
rol
inc
xchg
mov
mov
add
mov
pop
outs
addr16
not
inc
or
inc
adc
clc
pusha
loop
rol
ss
mov
xor
xor
jg
dec
adc
out
cmp
loopne
sti
pop
cmps
mov
pop
test
sar
jb
scas
cmc
sub
pop
and
not
inc
pop
mov
sub
xor
and
cdq
sub
bound
ret
sbb
push
fisubr
ss
jle
popf
xchg
jae
out
dec
test
jno
push
repnz
das
mov
lahf
xor
mov
ja
or
mov
lds
icebp
mov
leave
repz
inc
dec
idiv
(bad)
(bad)
add
rol
adc
or
xor
leave
push
xchg
aas
jb
cwde
sbb
jno
fsub
cmp
push
pop
clc
pusha
or
icebp
cmp
pop
mov
outs
jle
mov
cmc
repz
scas
pop
inc
mov
(bad)
arpl
mov
jge
xor
ins
outs
imul
and
xchg
nop
das
icebp
sub
rcr
jo
mov
(bad)
pop
test
callw
ror
scas
adc
sub
int3
mov
adc
jl
(bad)
clc
icebp
test
lea
jnp
jle
movs
in
or
sbb
sbb
mov
enter
jb
std
test
jbe
nop
ds
adc
push
add
ds
test
adc
aas
xchg
hlt
dec
call
push
leave
aad
daa
push
test
(bad)
cmp
inc
mov
aas
inc
movs
in
loope
mov
cmp
test
and
cmp
(bad)
or
int3
and
dec
arpl
jnp
sbb
pop
inc
pop
imul
xor
xchg
inc
pop
jns
and
mov
xchg
mov
mov
pop
or
sti
jae
cmp
cmp
or
daa
push
sbb
cdq
cmp
or
or
fs
loopne
popf
std
and
xchg
sbb
cmp
push
add
mov
bound
rcl
dec
fdiv
xchg
mov
jl
aam
cwde
cdq
adc
out
push
test
dec
or
rol
mov
push
loope
int3
dec
int3
je
adc
lock
scas
adc
xor
pop
fistp
xchg
pop
out
pop
retf
mov
mov
jne
les
xor
cdq
adc
inc
and
and
stc
and
lds
sub
cmps
(bad)
jo
sbb
mov
aaa
and
pop
or
mov
in
mov
add
leave
(bad)
clc
xchg
rcr
pop
test
and
pop
icebp
fadd
push
jmp
test
push
ror
popa
sbb
fmul
ins
psubsw
jbe
bound
sbb
aas
outs
(bad)
cmc
dec
add
push
mov
scas
cmp
dec
ret
xchg
ins
mov
test
lock
push
pop
shl
mov
pop
jbe
rcl
adc
push
push
pop
jmp
test
daa
jmp
xchg
add
out
daa
add
dec
mov
sub
adc
lock
data16
fst
lods
add
jmp
push
cdq
add
ins
xor
stos
cmp
stos
inc
dec
xor
add
ins
mov
sub
hlt
addr16
lods
jo
dec
ss
neg
int3
sbb
int
cmp
xchg
dec
shr
fucomi
mov
cmps
jecxz
pop
push
fiadd
xchg
inc
push
and
xor
fdiv
fstp
ror
lods
cdq
les
jmp
fldl2e
addr16
pop
inc
aam
jmp
shl
cmps
test
pop
retf
stc
enter
cmp
(bad)
xchg
enter
fcomp
mov
cmp
sahf
fwait
adc
arpl
cs
jmp
mov
dec
pop
sub
aaa
mov
sbb
cwde
fsubr
xchg
jmp
cmp
xor
jnp
jp
sub
fld
icebp
mov
cs
cmps
jb
sub
dec
pop
or
xor
cs
jecxz
sub
loopne
xor
push
or
and
and
xchg
mov
(bad)
sub
xchg
adc
ja
je
(bad)
fst
data16
gs
mov
push
bound
jne
adc
lea
push
ss
ds
scas
push
clc
cld
test
fcmovnbe
or
sub
mov
push
leave
dec
sub
mov
xchg
daa
into
retf
push
mov
repnz
rcr
xor
mov
xor
adc
aas
push
je
inc
jl
dec
xchg
arpl
xchg
cld
push
in
movs
jne
and
mov
neg
lahf
cmp
ja
inc
ins
cmp
push
push
std
adc
inc
dec
fadd
ss
test
and
cdq
cs
sbb
rcl
lods
das
imul
out
cld
loopne
mov
push
mov
iret
jp
mov
mov
call
neg
rcr
xchg
mov
xor
pop
mov
jp
push
xor
sub
gs
daa
mov
(bad)
cmp
mov
(bad)
into
daa
mov
mov
xor
scas
cmp
push
cmp
mov
loope
leave
adc
je
cmp
sub
xor
(bad)
mov
fbstp
mov
jle
dec
jl
sti
xor
leave
scas
inc
retf
adc
aas
ins
push
or
iret
sbb
mov
push
fwait
sub
rcl
inc
ret
outs
sub
cmp
or
pop
cmp
xor
mov
or
inc
dec
(bad)
nop
cmp
cmp
scas
pop
cmp
mov
sbb
sbb
dec
dec
pop
adc
fisub
inc
arpl
add
jns
cmp
fs
jecxz
out
pop
pop
dec
sbb
in
push
add
std
or
cdq
add
scas
jge
mov
and
fsubr
cld
sub
call
mov
(bad)
and
cmp
fmul
sub
mov
push
out
jnp
xchg
jmp
repz
mov
pop
je
mov
sub
(bad)
dec
cmps
pop
aaa
cwde
and
sbb
inc
lar
mov
jmp
cmp
fisttp
mov
stos
pop
adc
adc
test
fsub
sub
pop
sub
dec
push
jmp
mov
jecxz
xchg
inc
mov
arpl
jbe
sub
push
popf
jmp
adc
aad
push
pop
jno
(bad)
(bad)
mul
mov
mov
push
(bad)
or
adc
cmp
retf
fist
mov
cmc
sahf
sub
xor
clc
leave
mov
gs
(bad)
mov
mov
test
pop
xor
jno
out
mov
dec
call
aam
ins
xor
shl
pop
rol
xor
or
cmp
jecxz
in
dec
call
pop
dec
or
and
fldlg2
in
and
mov
dec
outs
shl
mov
cmp
sbb
jno
and
pushf
call
mov
inc
pusha
les
fisttp
push
pushf
mov
mov
mov
out
cli
or
jg
cld
std
stos
test
mov
xchg
xchg
popa
std
dec
dec
popa
js
jno
adc
imul
cmp
(bad)
adc
and
fcomp
jge
sub
cmp
xlat
cmp
or
mov
fadd
(bad)
push
cli
sbb
movs
push
repnz
inc
xor
dec
dec
mov
and
imul
out
in
add
popa
call
sbb
sbb
push
jbe
fadd
adc
or
push
add
or
retf
jge
pop
mov
pusha
dec
xchg
push
add
out
outs
lock
cwde
icebp
inc
in
adc
adc
sbb
(bad)
fnstsw
push
push
loopne
iret
cmps
ss
sbb
sbb
sub
jmp
mov
ins
lock
sbb
pop
repz
cmp
fild
jnp
out
cmp
in
and
pusha
fnsave
idiv
xlat
dec
mov
loopne
cmp
xchg
imul
and
pop
test
jae
pop
popa
mov
pop
mov
fcmovb
sti
mov
les
in
jno
clc
repz
and
sbb
scas
imul
add
xor
int3
push
(bad)
mov
hlt
cld
loop
out
ss
and
lock
ss
jo
pop
cmp
das
xor
test
bound
add
leave
mov
mov
fldcw
sub
lock
pop
xchg
push
mov
(bad)
dec
(bad)
xchg
mov
jns
push
adc
dec
add
icebp
push
dec
mov
xchg
inc
adc
retf
pop
(bad)
fdiv
sar
sbb
sbb
in
dec
add
jne
arpl
test
out
ror
xchg
stos
aas
sar
or
sub
push
movs
adc
cmc
enter
xor
jp
inc
jmp
outs
pop
fbstp
add
pop
(bad)
ret
fsub
arpl
out
loope
push
cmc
(bad)
jmp
cmc
or
push
mov
push
push
pop
pop
add
pop
dec
and
jmp
mov
call
mov
push
fld
outs
or
pop
dec
mov
sbb
and
cmp
sar
jge
std
bound
dec
jl
mov
add
inc
daa
repnz
mov
mov
jns
aas
xchg
mov
jns
dec
mov
(bad)
in
shl
bound
test
mov
cld
rcl
jbe
stos
xlat
dec
mov
push
add
inc
daa
in
inc
sahf
popf
imul
push
mov
pop
ins
inc
neg
nop
dec
in
and
dec
jg
mov
or
inc
cmp
cmp
call
addr16
dec
push
cs
pop
dec
mov
pop
stc
xor
in
(bad)
sbb
fisubr
mov
pop
xchg
in
pop
pop
mov
popf
cmp
dec
xchg
imul
xchg
das
pop
adc
fwait
mov
and
shl
and
and
push
jnp
shl
(bad)
loopne
pslld
cdq
push
sub
es
fs
cmp
out
cmp
mov
mov
cmp
iret
aas
pop
jno
sbb
ja
push
push
pushf
dec
or
lea
inc
sbb
or
xlat
cmp
sbb
out
popf
mov
push
lock
(bad)
movs
xlat
adc
mov
sbb
call
and
jmp
fstp
pop
cli
(bad)
sub
test
popf
retf
jnp
xor
(bad)
lahf
sbb
sbb
ds
cmp
dec
inc
shr
sub
outs
cwde
adc
ss
lea
mov
stos
or
dec
xor
movs
adc
sti
cmp
jmp
ror
je
jbe
lahf
aaa
push
popa
retf
cmp
cdq
es
fadd
gs
xor
repnz
fadd
xchg
xchg
stos
retf
es
sbb
inc
rcl
test
sbb
xor
icebp
leave
pop
stos
inc
dec
shr
dec
push
lea
push
adc
or
daa
jge
xor
popa
mov
outs
dec
bound
fcomip
scas
pop
xor
or
jbe
sbb
ds
call
lea
outs
mov
std
(bad)
ret
xor
mov
push
mov
ret
sub
cmc
xchg
pop
jo
shl
push
loope
test
outs
cmc
xchg
or
cmc
adc
adc
or
jo
scas
sbb
sbb
(bad)
adc
xchg
fwait
xchg
jp
sub
add
adc
aad
movs
sbb
fimul
lock
pop
cli
adc
xchg
les
sbb
cvtps2pi
jb
cmp
push
in
mov
test
nop
ret
cmp
mov
scas
aas
mov
xor
lock
add
mov
xor
mov
aaa
push
push
sbb
stc
jne
xchg
fmulp
push
sbb
retf
mov
aas
xor
(bad)
cmp
outs
test
xor
mov
test
push
jp
mov
jmp
pop
loope
imul
mov
mov
inc
in
in
(bad)
push
xchg
out
fisttp
dec
jb
jns
clc
adc
add
sbb
jbe
push
out
stos
push
loope
dec
dec
or
sar
(bad)
enter
push
add
xor
sub
shl
jbe
test
inc
xor
adc
cmp
imul
shl
sbb
clc
pop
mov
jmp
mov
push
adc
or
cld
out
rcl
lods
sbb
mov
dec
fsub
dec
jns
push
sub
jle
pop
dec
retf
xor
arpl
cmp
fwait
mov
fisttp
lods
test
les
cld
rcr
xchg
fwait
nop
(bad)
loopne
fdiv
ret
jnp
pop
loopne
std
inc
(bad)
cmp
cdq
inc
lods
adc
loope
mov
cmc
push
in
(bad)
std
imul
add
daa
mov
mov
inc
dec
mul
jmp
push
sti
lods
js
out
push
push
pop
mov
retf
xor
jbe
cmp
movs
fwait
lds
out
lods
inc
add
pushf
pop
cmp
js
cmc
and
jge
int
hlt
and
mov
lods
and
js
add
rol
and
call
hlt
dec
icebp
dec
bound
sbb
aaa
push
dec
push
sbb
in
xor
push
pop
call
and
imul
or
(bad)
pop
sbb
mov
rol
iret
mov
jg
icebp
ret
pop
bound
sub
imul
loope
std
lea
and
and
pop
xchg
jbe
aas
sbb
mov
push
and
push
leave
inc
sbb
or
xor
cmp
out
cmp
out
std
cmp
xchg
push
scas
aas
xchg
lock
mov
pop
fs
imul
outs
fcmovb
mov
mov
sub
or
aaa
inc
push
mov
dec
fdiv
aad
dec
in
sbb
nop
outs
stos
addr16
xchg
inc
gs
cmp
pusha
mov
inc
cmps
cmp
dec
jmp
test
add
fidiv
sbb
lods
movs
out
(bad)
sar
enter
push
pop
int3
jns
mov
inc
mov
ss
call
jmp
cmp
sbb
fcomp
mov
mov
mov
(bad)
sub
sub
mov
xchg
jp
fwait
lds
pop
mov
pop
xchg
jl
dec
pop
enter
xchg
pop
loopne
push
sti
shr
stos
popf
mov
ds
ret
call
cmc
push
pop
pop
mov
and
mov
mov
mov
lods
xor
sqrtps
dec
sbb
sti
mov
or
(bad)
cmp
stos
sub
outs
xor
lds
les
ror
xchg
aam
leave
das
mov
mov
pop
jnp
inc
int3
sbb
mov
shl
(bad)
jns
cmp
adc
jmp
xchg
xor
repnz
adc
mov
or
adc
xor
movs
fxtract
sub
fwait
pop
sbb
test
mov
fwait
jl
cmp
arpl
outs
mov
stc
pop
push
inc
out
not
sbb
into
push
sahf
lods
stc
or
inc
cli
xor
in
and
push
icebp
mov
in
jb
ret
inc
jbe
clc
jmp
add
das
sub
test
xchg
sbb
in
mov
rcl
or
xchg
sbb
lock
xchg
push
adc
mov
fsub
mov
das
xchg
cld
cdq
dec
push
sub
scas
arpl
call
pop
fstp
jl
outs
dec
sbb
mov
mov
sbb
xchg
jno
aas
pop
into
jne
add
push
(bad)
rol
jne
jp
enter
push
jmp
sub
sub
sbb
inc
retf
dec
sub
xchg
out
jmp
mov
jne
jo
mov
sub
push
add
sbb
adc
fnstenv
js
xchg
or
xchg
loop
add
pop
adc
repnz
fisttp
add
rcl
mov
cdq
leave
add
xlat
ret
sbb
lahf
scas
fwait
popa
sub
pop
sub
ss
or
adc
stos
in
sbb
daa
aaa
add
sbb
nop
jg
push
add
cmp
sub
aad
xchg
mov
mov
cwde
shl
jg
dec
add
pop
dec
mov
push
or
xchg
jg
out
(bad)
sar
jl
or
adc
aad
or
xchg
jecxz
js
loopne
lods
sbb
jp
outs
pop
sbb
rol
test
js
aas
or
xchg
(bad)
adc
in
mov
push
das
push
ror
pop
jecxz
arpl
out
movs
dec
imul
and
or
es
loope
or
jge
mov
jge
test
ja
retf
fcmovb
xor
sahf
mov
adc
sub
xor
jg
xchg
aaa
jae
xchg
adc
sub
das
movs
xlat
lock
xchg
xor
leave
jmp
int
or
sti
push
ins
mov
les
mov
aaa
push
add
or
mov
test
jge
cmp
cmp
repz
mov
pop
xchg
mov
js
dec
rep
cld
popa
xchg
cs
sar
(bad)
gs
int
movs
dec
fld
xchg
mov
daa
mov
push
data16
stos
out
and
fdivr
jb
repz
pop
ins
fwait
pop
and
je
cmp
fstp
in
mov
xchg
fcmovnbe
sub
ret
adc
in
mov
sbb
cmp
stos
shl
push
adc
sbb
add
rol
(bad)
mov
mov
out
adc
pop
hlt
hlt
sub
xlat
mov
xor
or
mov
js
mov
mov
outs
mov
dec
out
inc
add
fst
adc
adc
retf
in
sbb
push
call
mov
cmp
sti
in
repnz
xchg
or
lar
ret
xor
cmps
push
stos
dec
dec
cwde
add
dec
stc
stos
fdivr
mov
adc
stc
pop
lahf
mov
iret
addr16
jbe
mov
ins
rcr
(bad)
sbb
adc
or
add
es
xchg
not
in
mov
mov
fyl2xp1
push
xchg
or
dec
add
cmps
(bad)
dec
std
fild
lods
mov
int
arpl
cmps
std
inc
fsub
not
mov
(bad)
sub
rol
xchg
ror
in
push
push
jle
jmp
cmp
add
inc
push
fdivr
or
mov
mov
or
push
mov
adc
dec
and
(bad)
push
xchg
sbb
adc
pusha
lods
lods
mov
(bad)
scas
fidivr
in
bound
pop
mov
jmp
sar
inc
cmp
iret
push
xor
mov
jp
ror
mov
or
push
mov
xchg
or
test
aam
jbe
fnsave
sbb
xor
cli
cmps
and
push
leave
dec
mov
push
test
in
sbb
ja
xchg
test
dec
push
mov
cmc
aad
push
add
cmp
dec
jae
dec
add
or
stc
icebp
push
push
inc
rcl
cdq
sbb
clc
cmp
fisttp
mov
mov
shl
adc
dec
in
sbb
jle
rcl
add
dec
bound
loopne
inc
mov
xchg
mov
das
ja
aad
and
sbb
pop
push
fwait
adc
sub
adc
aad
popf
jmp
lea
call
dec
jno
fadd
dec
inc
jmp
rcl
imul
lods
shl
frstor
pop
nop
or
mov
sar
sub
cmp
aam
jp
shl
int
(bad)
or
lods
vpshufd
ja
pop
xchg
loopne
adc
push
test
cmp
and
dec
cmc
lahf
repnz
jbe
arpl
sub
les
pop
xor
xlat
clc
cld
outs
int
(bad)
in
xor
adc
mov
adc
cld
add
push
clc
ror
jnp
sub
mov
not
push
not
fmul
cmps
jecxz
call
repnz
add
inc
retf
aad
sbb
scas
shl
es
or
or
ds
sub
lea
mov
(bad)
jne
dec
and
iret
pop
mov
std
xor
xchg
je
iret
cmp
hlt
in
neg
cmp
sub
enter
loopne
dec
or
sbb
mov
dec
pushf
xchg
fsubr
dec
push
add
les
xchg
jle
stos
sbb
fisttp
test
in
push
xchg
jge
xchg
in
(bad)
data16
jl
fsub
inc
cmp
dec
lds
bound
call
sbb
jno
push
pop
repnz
leave
in
xchg
nop
(bad)
shr
cmp
cmp
fimul
imul
xlat
pop
(bad)
into
fnstsw
sub
mov
lock
mov
xchg
jmp
jmp
call
(bad)
arpl
jb
adc
cmps
pusha
inc
out
mov
jecxz
and
fwait
xchg
inc
repz
xor
shl
iret
int
aaa
in
jmp
mov
mov
dec
push
push
xchg
gs
lods
cld
adc
cmp
inc
adc
repnz
sub
mov
add
push
cli
mov
fadd
dec
xor
arpl
jp
xor
std
fistp
xor
outs
cmps
sbb
mov
jo
sbb
shl
rol
sbb
loope
xor
mov
jne
daa
mov
sub
stos
(bad)
mov
add
jb
adc
push
icebp
loope
adc
mov
retf
out
jmp
int
shr
and
jl
iret
mov
push
repz
pushf
xchg
or
outs
adc
xchg
jno
icebp
out
dec
sub
mov
pushf
(bad)
mov
sub
outs
xlat
nop
cmp
ins
out
leave
jb
imul
dec
push
xor
cli
push
adc
les
mov
mov
div
dec
pop
dec
fisttp
and
jne
daa
jns
imul
cmp
adc
iret
jnp
fadd
jno
bound
repnz
sar
test
dec
add
daa
mov
outs
leave
leave
sub
imul
fstp
retf
push
ja
add
hlt
ins
int
mov
ficom
pop
test
jbe
loop
mov
out
xor
adc
gs
inc
jle
mov
loopne
test
xchg
test
mov
jne
test
ror
sub
cmp
or
in
xor
pop
inc
xchg
out
fs
ror
and
adc
or
ret
std
(bad)
not
cmp
push
mov
add
lds
das
cdq
inc
ret
and
push
inc
(bad)
into
in
stos
sub
jle
jmp
push
out
stos
loopne
cdq
(bad)
pushf
repz
inc
mov
mov
dec
pop
fucom
stos
ss
xchg
gs
adc
sahf
scas
(bad)
push
push
mov
scas
inc
fmul
or
push
ret
je
(bad)
fimul
dec
mov
cs
test
dec
mov
pop
jg
xchg
xchg
(bad)
lock
mov
dec
xor
dec
sbb
in
je
mov
repnz
dec
das
xchg
fnstcw
js
loope
mov
mov
out
mov
or
sub
fist
or
fist
jg
ins
(bad)
je
cld
push
add
sbb
pop
xchg
pop
fisttp
fimul
(bad)
mov
sub
(bad)
sbb
adc
js
dec
call
pop
xchg
std
xchg
mov
sub
mov
setae
ret
xchg
xchg
pop
cmp
pop
adc
sahf
add
pop
bound
or
lds
hlt
shl
fnsave
mov
cmp
push
add
cmp
mov
(bad)
mov
jl
(bad)
mov
sub
ret
push
mov
mov
aad
mov
mov
loop
cmp
ret
fsubr
inc
int
xor
popf
push
xchg
or
mov
in
add
xchg
xchg
mov
push
mov
sbb
cmovno
in
ret
out
push
jle
add
daa
pop
(bad)
xchg
sbb
or
sbb
rcl
out
pop
cld
in
rol
enter
cmps
(bad)
jo
jecxz
lea
xchg
mov
ja
dec
les
pop
(bad)
out
push
cmp
push
aas
xor
imul
push
or
and
js
pop
retf
pop
aas
in
xor
mov
or
leave
add
std
push
pop
cmp
ror
or
in
push
push
inc
leave
inc
xchg
inc
sub
mov
dec
inc
pop
mov
push
sbb
icebp
out
in
mov
jbe
int3
lahf
jne
sbb
int
mov
test
add
or
or
adc
call
mov
mov
dec
rcl
and
jg
mov
ss
jl
xchg
xchg
data16
stos
inc
aas
aam
lds
das
sub
mov
ja
pop
push
and
mov
rol
inc
jl
(bad)
sub
xchg
mov
out
jle
test
jp
shr
jg
in
mov
xor
outs
or
retf
add
inc
mov
inc
sub
stos
in
sub
jno
scas
bound
or
lock
cwde
mov
out
mov
movs
sub
in
xor
mov
clc
bound
xchg
jbe
test
pop
mov
mov
add
push
fwait
in
data16
xchg
dec
add
(bad)
daa
inc
lahf
lea
scas
sbb
cmp
popf
pop
addr16
add
xchg
pop
fmul
pop
adc
mov
inc
mov
or
hlt
nop
in
call
ja
adc
scas
es
push
jecxz
(bad)
leave
movs
bound
scas
in
jge
and
xchg
fs
jno
mov
cs
(bad)
lds
jmp
mov
hlt
test
mov
and
sbb
jg
or
aaa
call
loop
stc
stos
sbb
push
xchg
(bad)
(bad)
fsubr
test
jb
xor
jp
xchg
mov
xchg
cmp
cs
and
push
cli
mov
inc
sbb
mov
mov
fwait
xchg
cmp
or
div
xabort
popf
sahf
mov
imul
sbb
pop
test
mov
mov
repnz
push
sbb
imul
xor
push
pop
mov
add
in
in
jo
mov
xchg
adc
xchg
push
and
popa
sub
dec
loopne
adc
push
pop
dec
inc
pop
pusha
inc
adc
push
jmp
adc
pop
jo
cli
add
ins
lds
sahf
push
fs
std
mov
cmp
arpl
push
sub
inc
mov
sub
cmp
stc
adc
sub
xor
adc
sbb
ret
les
push
push
into
push
adc
mov
test
jo
lock
ins
mov
or
ret
(bad)
lahf
xchg
mov
pop
pop
lahf
fbld
rcr
sbb
sti
and
int
int
fist
repnz
push
sub
repz
dec
add
xchg
push
stc
xor
pop
cmp
(bad)
dec
jle
fisub
mov
dec
and
fld
fidivr
push
test
lods
ss
xor
fisttp
sub
or
jecxz
mov
add
xor
xchg
js
xchg
xchg
add
cmps
add
pop
knotb
repnz
adc
add
adc
push
imul
cmps
imul
jmp
and
inc
or
mov
rcr
(bad)
jmp
dec
std
cmps
das
xor
cdq
sub
mov
bound
mov
xchg
addr16
out
cli
push
ret
cmp
and
mov
stos
and
int3
or
cmp
push
push
mov
jecxz
xlat
or
xor
fwait
add
mov
pop
push
scas
outs
(bad)
sub
mov
sbb
pop
lock
push
xchg
ret
dec
or
or
cli
cmp
(bad)
fidivr
ins
mov
dec
leave
and
xchg
push
ds
mov
(bad)
sub
mov
popf
xchg
sahf
pop
push
pop
shl
fist
mov
loop
pop
movs
repz
into
and
mov
out
mov
mov
cld
lea
retf
dec
shl
push
sbb
and
fwait
dec
sbb
mov
xchg
xchg
push
push
(bad)
aam
stos
pop
adc
or
sbb
sub
sbb
out
mov
mov
pop
pop
push
jmp
xlat
test
and
fcomp
fwait
loope
pop
out
jge
jmp
fs
fmul
or
sbb
les
mov
xchg
popf
xor
inc
into
adc
ret
lds
dec
loop
outs
scas
xchg
pop
cmps
(bad)
aam
adc
mov
lock
inc
or
push
or
popa
in
xlat
mov
fwait
movs
loope
out
test
call
in
xchg
into
ret
cmp
lahf
ins
daa
jae
cs
outs
inc
inc
mov
test
inc
frstor
pop
(bad)
cmp
dec
dec
test
outs
mov
dec
sub
push
(bad)
jae
hlt
loope
pop
call
scas
ss
cli
imul
ss
(bad)
or
sbb
imul
ret
sub
retf
inc
pop
jecxz
jmp
pop
pop
movs
xor
jno
fidiv
jle
repz
xor
jecxz
adc
mov
fiadd
xor
push
inc
loop
and
movs
sbb
pop
mov
ret
ss
push
dec
aas
addr16
dec
cmp
hlt
pop
adc
dec
sbb
jne
ss
repz
sub
xor
ret
xchg
push
jg
sbb
in
and
xchg
or
sub
mov
pop
mov
adc
ret
or
out
fisub
rcl
pop
xchg
inc
pop
xchg
dec
dec
push
fdivr
gs
fistp
sbb
xlat
push
xor
mov
add
dec
push
imul
jmp
pop
int3
leave
xchg
aad
je
inc
cmp
pop
clc
push
cli
imul
in
adc
jmp
cmp
xchg
jge
fadd
jns
mov
and
dec
adc
inc
jmp
sub
push
and
sbb
inc
inc
stos
retf
mov
push
add
lock
aam
lock
jb
loop
(bad)
cmp
mov
mov
enter
cmp
aam
sub
mov
(bad)
pop
psubw
push
mov
and
cmp
cdq
fs
aaa
xor
cmp
pop
movs
aas
cwde
jmp
cmp
fist
out
or
dec
fwait
cmp
or
movs
pop
enter
xchg
std
pcmpgtw
loop
push
sub
inc
inc
repnz
aas
jbe
pop
or
or
cmps
push
sub
or
out
jp
xlat
idiv
and
or
loop
sar
mov
popa
sub
add
aas
lds
out
mov
das
daa
push
js
fld
out
aaa
jae
out
loope
mov
pop
cdq
or
cmp
mov
mov
jae
mov
ffreep
in
mov
sbb
das
pop
cmp
cmp
test
sti
or
jl
push
mov
and
sub
jecxz
sub
jnp
jg
sbb
pop
push
or
cwde
xlat
(bad)
repz
enter
jnp
xchg
aas
popa
push
movsx
push
push
rol
cmp
pop
mov
lahf
sub
cmp
out
aaa
dec
ficom
pop
hlt
pop
pop
jmp
mov
dec
xchg
es
lds
push
jae
lock
loopne
push
jmp
lock
xchg
push
pusha
cwde
mov
stos
push
mov
jg
out
imul
sbb
pop
push
mov
xlat
pop
test
push
adc
add
or
std
mov
dec
mov
dec
mov
into
movs
les
cmc
repnz
push
je
or
dec
lahf
fld
icebp
sbb
mov
and
cmp
out
retf
cmp
dec
mov
leave
cdq
xor
call
xor
popf
sbb
stc
test
test
pop
adc
pop
scas
mov
fs
jmp
outs
sub
adc
popf
test
mov
mov
in
add
sub
jp
ins
jmp
xchg
lods
dec
and
pushf
push
in
cmp
out
xlat
and
mov
push
xchg
jmp
or
dec
pop
add
rol
fnop
add
mov
loope
mov
xor
ja
dec
mov
stos
or
fs
sar
mov
sub
mov
mov
cld
jnp
inc
xrelease
push
in
shl
and
adc
in
repnz
ja
sbb
add
push
stos
sbb
pop
cdq
sub
cmps
fadd
sbb
xchg
mov
mul
cmp
adc
in
sub
sbb
les
xor
bound
push
pop
push
push
xchg
into
jmp
mov
fld
cs
inc
popf
pop
das
iret
test
jae
fdivr
push
fstp
sbb
mov
(bad)
jl
mov
adc
add
loop
lods
jns
push
pop
fstp
xchg
adc
clc
push
jecxz
mov
inc
sahf
loope
adc
dec
out
iret
cwde
add
adc
sti
xchg
ds
leave
dec
scas
(bad)
and
xor
fyl2xp1
mov
fbstp
out
movs
or
lods
jnp
out
test
push
and
(bad)
loop
sbb
movs
sub
lds
das
xchg
cmp
and
mov
xchg
cmp
jmp
jg
mov
pop
call
add
test
add
out
push
dec
repnz
ror
cdq
das
push
cmp
ja
bound
sbb
jae
xor
or
xchg
add
xor
or
adc
mov
mov
inc
xchg
ins
lds
jp
stc
(bad)
call
pop
out
mov
je
push
push
cmp
out
cs
ret
scas
ds
mov
mov
or
cmc
test
iret
mov
mov
adc
in
push
xchg
adc
stos
cli
jns
mov
xor
push
imul
cmp
les
cdq
xchg
add
sub
and
add
push
xchg
ins
rcr
stc
sub
or
add
popa
fnstenv
pop
and
push
push
mov
jno
sub
enter
arpl
hlt
fild
cmp
arpl
out
add
mov
cmp
idiv
sbb
lods
cmp
ins
sahf
or
push
jge
rol
test
xor
std
and
jb
and
xchg
mov
mov
dec
mov
push
(bad)
sub
mov
mov
dec
lods
(bad)
outs
or
out
outs
adc
out
mov
inc
fistp
jns
shr
pusha
shl
int3
dec
repnz
jmp
sub
les
out
add
or
test
stos
jp
pop
and
jnp
out
xlat
aaa
inc
fisub
enter
fidivr
scas
fnsave
lock
lea
repnz
sub
movs
cmp
fldcw
inc
inc
lds
jg
bound
loopne
dec
jmp
mov
add
jle
lahf
in
(bad)
jp
xchg
mov
adc
mov
cmp
pop
ja
int3
push
test
rol
aam
pop
xchg
push
scas
pop
int
(bad)
cs
movs
add
cmp
jno
pop
mov
xor
iret
adc
out
lds
fmul
sbb
jae
fild
mov
jle
mov
(bad)
mov
mov
mov
je
call
cld
pop
add
cmp
and
(bad)
outs
jmp
es
jns
sub
mov
fwait
shl
jnp
push
lods
xor
popa
rcl
ror
mov
cmc
mov
loop
xor
mov
sub
pushf
jecxz
adc
xor
jns
loopne
and
cwde
into
rcr
lods
fs
inc
pusha
js
out
loop
jnp
and
dec
clc
sbb
or
dec
jnp
dec
mov
jb
retf
mov
sahf
cmp
cld
mov
sbb
adc
ins
loope
dec
sbb
add
jle
xchg
nop
ins
pop
shl
es
loop
dec
sbb
push
mov
xor
push
xchg
add
mov
cmp
(bad)
test
pop
sbb
cmps
inc
or
jns
mov
adc
jl
pop
adc
addr16
and
xchg
xchg
int
xchg
adc
mov
push
(bad)
fs
movq
stos
shr
dec
and
sub
add
in
div
mov
jl
sti
sbb
fs
push
stos
xchg
shr
sub
mov
xchg
xchg
outs
jns
mov
and
test
push
repz
mov
out
xchg
inc
xchg
int
movs
pop
or
adc
stos
repz
mov
mov
gs
rcr
and
lea
push
push
movs
jo
xor
mov
ret
movs
cmp
js
out
ins
movs
xchg
sub
jns
int
scas
jb
loop
out
das
sbb
out
pop
sub
xchg
sahf
sbb
lahf
ret
mul
test
and
add
pop
jmp
lahf
or
and
adc
mov
popf
adc
retf
and
sub
ins
sbb
gs
movs
(bad)
or
inc
ins
mov
jbe
mov
ror
mov
push
cmp
sub
pushf
or
jmp
stos
xlat
repnz
icebp
sub
or
mov
xor
lea
or
outs
fs
fst
ja
push
movs
mov
and
push
or
lock
add
sti
retf
cmp
dec
or
adc
aas
dec
mov
jo
mov
fild
outs
in
retf
jae
and
jecxz
aaa
js
dec
stos
ret
mov
push
xchg
add
data16
scas
mov
xchg
in
sub
jo
add
add
clc
dec
dec
das
leave
xchg
lods
aas
and
xor
jo
inc
int
ss
jg
(bad)
pop
add
fs
bnd
push
push
inc
loopne
pop
(bad)
jo
jns
lahf
mov
mov
sbb
push
jno
xor
lock
xchg
jbe
ret
stos
mov
imul
push
or
fdivr
push
ret
sbb
stos
(bad)
push
xchg
nop
hlt
mov
imul
adc
adc
cmp
mov
pop
push
and
lahf
inc
neg
gs
pushf
addr16
lock
fldenv
imul
or
arpl
push
cli
mov
push
sbb
sbb
enter
xchg
outs
sub
cmp
mov
gs
fwait
aaa
inc
aam
sbb
pop
pop
cmc
sti
jge
icebp
sub
cdq
and
out
hlt
xchg
pop
mov
mov
neg
pop
add
bound
push
push
dec
add
fcmovb
adc
and
das
stos
in
mov
xchg
push
adc
call
xor
test
inc
repz
adc
inc
xchg
mov
mov
dec
(bad)
or
lahf
push
adc
push
and
(bad)
es
cmc
sbb
dec
lahf
pushf
out
push
sbb
xor
inc
aaa
xchg
adc
cs
pop
nop
(bad)
dec
dec
ss
cmp
and
jne
leave
mov
movs
cmp
push
(bad)
not
jge
or
mov
cmps
js
imul
cmp
mov
adc
rcl
int
jnp
sbb
je
mov
lods
add
(bad)
cmp
mov
es
inc
aam
or
mov
arpl
js
mul
cld
(bad)
sbb
(bad)
cmps
movs
bound
push
cld
loope
add
mov
add
in
pushf
fwait
in
mov
jno
sbb
sub
xor
sbb
inc
or
dec
mov
stos
shl
dec
and
inc
sub
pop
cmp
sbb
arpl
mov
jle
(bad)
popf
add
outs
mov
pop
retf
ins
xlat
mov
jb
inc
cmp
or
sbb
push
adc
lods
ds
adc
jg
std
into
adc
in
adc
stc
fild
and
jne
retf
jg
mov
dec
sbb
clc
icebp
sbb
repnz
mov
outs
pop
push
cmps
call
add
fstp
push
sbb
ffreep
sub
scas
inc
aaa
fwait
pop
pop
push
push
hlt
or
xlat
mov
pop
(bad)
(bad)
xchg
neg
push
js
push
or
push
out
(bad)
fistp
fsub
mov
into
dec
sbb
daa
jg
mov
sub
pop
mov
inc
outs
mov
clc
(bad)
adc
sbb
jge
mov
push
xchg
mov
pop
adc
cmp
pop
add
push
dec
aad
test
adc
mov
(bad)
idiv
sbb
pop
jbe
loope
sbb
and
lods
or
je
sahf
shr
lea
lock
xchg
push
or
push
cmc
addr16
mov
adc
or
xlat
and
sbb
mov
inc
mov
push
int
rcl
mov
cli
fs
sub
ror
ret
iret
inc
inc
mov
mov
addr16
lods
imul
addr16
lods
out
test
dec
push
pop
dec
xchg
push
inc
push
loopne
mov
jne
stos
pop
fistp
ret
push
(bad)
stc
in
pop
inc
sbb
fwait
sub
enter
xchg
lods
movs
fsubr
mov
push
xor
rcr
dec
adc
test
mov
and
sub
pop
in
in
test
lods
xor
jge
or
pop
push
xchg
mov
push
mov
ficomp
cmp
add
loop
cmps
push
push
out
cmp
mov
popa
out
int
movs
lock
mov
repnz
cmp
inc
push
fsub
jmp
mov
dec
dec
cmps
add
(bad)
movs
out
cmp
add
fdecstp
ror
(bad)
js
pop
xor
cmp
mov
fnclex
std
call
pop
push
mov
popa
clc
mov
sub
int
inc
pusha
or
mov
sbb
xlat
scas
and
aas
je
outs
ss
loope
fadd
pusha
or
mov
aas
mov
out
fst
icebp
out
ret
mov
pushf
das
std
hlt
jp
cmps
test
push
sbb
(bad)
ins
int3
jns
lods
xor
xchg
sbb
push
add
mov
fxch
int3
jl
in
jge
mov
sub
pop
sub
jecxz
mov
ins
cmps
gs
pop
or
push
shl
inc
push
jg
aas
jecxz
xchg
fist
leave
fidiv
cld
sbb
dec
(bad)
xor
dec
stos
xchg
(bad)
xor
outs
(bad)
popfw
(bad)
fisttp
rcl
(bad)
and
fstp
out
es
mov
mov
repz
cmp
mov
(bad)
daa
(bad)
xchg
cwde
jo
push
dec
lds
jg
std
scas
mov
dec
pop
push
or
cdq
popa
ret
sbb
cli
into
in
jl
call
leave
xchg
lock
cmps
(bad)
aad
or
push
xor
pushw
dec
les
cmps
jmp
pop
and
stc
pushf
in
icebp
cmp
cmp
cwde
mov
je
scas
js
sub
fs
mov
aad
add
dec
add
jle
mov
(bad)
xchg
stc
jae
xor
loop
repz
mov
and
rol
cs
fs
pop
std
nop
pcmpeqb
pop
xor
je
imul
pop
dec
mov
mov
and
imul
fisubr
out
xor
mov
cmp
cwde
in
push
push
cmp
shl
push
lock
mov
add
nop
dec
test
cmp
or
or
pop
mov
cmp
mov
sbb
fild
mov
pop
(bad)
(bad)
mov
aad
(bad)
scas
retf
addr16
pushf
repz
retf
in
push
ret
aad
mov
xor
test
sbb
and
rol
ret
scas
addr16
adc
cmp
mov
mov
sbb
ret
xchg
ficom
sbb
push
mov
test
sub
pusha
or
pop
push
ret
jp
adc
xchg
adc
lea
adc
mov
cmc
mov
sbb
dec
mov
cmps
sub
xor
jne
fdivr
and
aas
pop
hlt
inc
mov
pop
push
fcomp
push
mov
out
adc
push
inc
loope
mov
mov
sbb
or
enter
leave
push
and
int
retf
mov
mov
ins
mov
push
or
retf
push
cli
mov
movs
cmp
sub
mov
inc
(bad)
xchg
inc
pop
add
movs
xor
adc
mov
in
cmp
outs
mov
push
addr16
stos
push
inc
jne
fcomp
sahf
retf
pop
inc
ror
ret
aaa
in
les
add
bound
jo
ins
(bad)
fild
add
fstp
lea
mov
sub
adc
(bad)
push
push
mov
pop
loopne
and
sahf
aam
sbb
adc
aaa
fbld
sub
add
repnz
gs
call
(bad)
adc
push
add
mov
mov
repnz
jbe
into
or
lds
inc
stos
out
or
in
add
aas
dec
cmp
inc
test
pop
cld
mov
or
inc
outs
adc
cmps
sahf
loope
dec
and
mov
cmp
sbb
mov
xchg
cld
aaa
stos
stos
mov
js
adc
and
lock
xlat
fist
ins
add
inc
popa
sub
ja
or
add
test
int3
push
dec
(bad)
in
daa
scas
sbb
jns
mov
fistp
xchg
dec
xlat
cmp
popf
int
loopne
pop
ins
aam
xor
arpl
jno
fadd
mov
add
push
ds
sub
xor
sbb
sbb
icebp
fcom
scas
outs
adc
jmp
add
das
jmp
clc
adc
mov
cli
add
sub
sti
adc
dec
ret
push
pop
pusha
push
iret
jns
push
cwde
mov
lds
dec
ss
mov
retf
test
outs
xor
in
imul
aad
adc
adc
xchg
mov
scas
pusha
sbb
idiv
mov
enter
xor
xor
out
dec
movs
div
aaa
jg
movs
cmc
bound
cmp
pop
(bad)
xchg
sbb
jl
or
(bad)
push
je
pop
or
and
imul
int3
mul
in
dec
adc
iret
popa
dec
retf
lock
call
popa
jno
sub
imul
shr
jns
into
scas
into
cmp
mov
pop
mov
pop
mov
push
mov
and
xor
push
add
enter
mov
and
lea
hlt
sub
sbb
xchg
leave
jae
stos
popa
rcr
pop
mov
inc
mov
hlt
cwde
cmp
or
lea
dec
jae
(bad)
in
and
popf
mov
jle
push
into
sub
popa
or
or
sar
sub
or
inc
add
imul
shr
fucomip
dec
pop
mov
pop
push
sar
dec
loope
iret
or
stos
je
or
mov
mov
xor
add
ins
cwde
and
popf
loop
dec
xchg
mov
xlat
xlat
jge
adc
je
push
stc
cmp
nop
xor
inc
(bad)
lock
movs
push
(bad)
ror
xchg
xchg
xor
call
pop
and
xchg
fdiv
inc
cmp
mov
(bad)
out
test
sub
sbb
neg
retf
fs
(bad)
idiv
ret
or
add
pop
nop
push
in
push
mov
test
ins
jmp
pop
xchg
retfw
std
sti
pop
push
jecxz
dec
in
fmul
xor
jo
js
jp
push
or
shl
cmp
mov
pop
(bad)
(bad)
call
aaa
(bad)
in
lock
fcom
cmc
jg
dec
(bad)
fbstp
mov
stos
in
xchg
ror
push
call
push
push
xchg
imul
jle
add
sub
out
fiadd
xchg
add
outs
push
sub
jne
cdq
loop
jns
jg
cmp
mov
jmp
pop
mov
stos
push
ss
repz
cmps
gs
jl
das
pop
not
xor
pop
iret
push
test
movs
fdivr
std
add
pop
loop
hlt
sub
idiv
fs
ret
mov
cmp
jo
pop
push
dec
pop
aas
sbb
enter
das
scas
and
jge
mov
lahf
ror
(bad)
mov
sub
mov
fs
out
mov
mov
jmp
daa
pop
aad
clc
push
ret
popf
jecxz
sub
and
ret
push
addr16
mov
or
repnz
retf
rol
sbb
loop
clc
or
push
push
push
inc
retf
pop
cmp
add
movs
push
pop
xchg
out
adc
cwde
mov
or
not
mov
jmp
int3
loope
repnz
lods
xchg
dec
inc
sbb
mov
sbb
in
out
fnstsw
jl
addr16
clc
mov
ret
arpl
std
outs
test
add
syscall
lods
xor
pop
xor
pop
jns
ins
ret
jl
icebp
cmp
in
cmp
mov
cmp
pusha
adc
sbb
push
dec
js
push
fs
cmps
mov
les
fxch
inc
mov
lods
mov
adc
jecxz
pop
pop
and
adc
nop
call
imul
test
lea
hlt
add
xor
add
mov
push
or
xchg
sbb
test
in
mov
xlat
js
out
push
lahf
cmp
cmp
push
fisubr
sub
add
dec
retf
retf
jmp
dec
test
adc
cwde
push
lods
lea
arpl
push
retf
and
aam
mov
mov
out
nop
int3
stos
push
mov
mov
xchg
mov
sbb
stos
push
dec
pop
daa
imul
add
push
jmp
in
idiv
fst
mov
adc
cmp
mov
ja
test
(bad)
fxch
adc
fsubrp
aad
mov
repz
fimul
lock
loopne
fild
shl
jo
adc
add
dec
and
push
js
test
push
jmp
push
jge
out
mov
dec
pop
hlt
(bad)
adc
jg
loope
sub
(bad)
inc
test
add
mov
inc
inc
inc
jle
mov
(bad)
sub
fisubr
jmp
mov
mov
mov
push
test
mov
push
ret
jne
mov
outs
push
sub
daa
aam
dec
inc
mov
imul
movs
lock
sub
fwait
inc
bound
jno
data16
cdq
ds
out
int3
imul
mov
mov
popf
sub
shl
(bad)
sti
inc
ds
nop
scas
mov
sub
fimul
mov
mov
mov
daa
push
xor
pop
in
(bad)
pop
aaa
cmp
sbb
add
mov
repnz
sbb
sbb
data16
fist
pop
cli
xchg
xlat
mov
cmp
sbb
popa
mov
wbinvd
xchg
out
push
push
mov
sub
mov
xchg
xor
pop
gs
pop
jno
scas
lea
adc
xlat
addr16
out
popf
enter
sbb
jbe
lahf
rcl
push
inc
mov
push
repnz
pushf
mov
fdiv
and
jno
sbb
stos
xor
jbe
push
push
adc
adc
into
lds
cli
sub
scas
(bad)
out
stos
ins
repz
cmp
adc
js
cmp
jg
ficomp
rcr
jg
xchg
push
pop
xlat
(bad)
mov
test
fistp
xchg
gs
xor
imul
sub
mov
mov
ds
push
daa
push
adc
repnz
cdq
mov
dec
aaa
xchg
add
and
stos
inc
mov
cdq
shld
lods
stos
mov
inc
and
and
push
add
cli
adc
aam
scas
rcl
cmp
(bad)
mov
mov
or
or
jb
or
and
int
adc
dec
cmp
call
or
inc
pusha
fsubrp
out
(bad)
jb
xchg
imul
xchg
jg
sti
data16
rcl
cmps
mov
and
mov
and
(bad)
and
inc
enter
ins
xchg
pop
inc
pop
push
add
scas
sbb
sahf
stos
xchg
add
push
cmp
sub
adc
in
or
out
cmp
inc
and
and
xchg
jle
data16
sub
inc
xchg
sub
loope
jb
sbb
xchg
mov
lahf
xor
xchg
pop
mov
adc
bound
nop
aaa
clc
inc
shl
neg
add
sbb
(bad)
sbb
hlt
shl
cwde
in
mov
cmps
aas
nop
xchg
hlt
enter
ret
daa
sub
jge
push
mov
mov
ror
mov
jno
lds
repz
lods
jnp
(bad)
cmp
imul
mov
in
mov
push
dec
push
mov
fsubr
into
fwait
outs
adc
xchg
iret
inc
adc
sahf
pop
cli
mov
pop
arpl
repz
ds
add
(bad)
mov
call
mov
fwait
mov
push
bts
cmp
in
sbb
add
les
ins
mov
sub
inc
push
jae
dec
cmc
pop
cmps
and
push
adc
(bad)
jmp
call
movs
call
mov
cmps
clc
xchg
jle
inc
sbb
outs
imul
pop
push
lods
outs
adc
push
inc
jmp
or
mov
shl
movs
xchg
cli
pop
rol
nop
enter
sub
pop
or
dec
scas
jns
sahf
popf
adc
aas
out
das
mov
cmp
sbb
cs
imul
stc
loope
outs
fnsave
fild
mov
jmp
xchg
jle
jp
fimul
cmp
push
call
pop
(bad)
popa
test
loopne
mov
fild
xchg
dec
xchg
call
sbb
shr
jb
fidiv
enter
or
cmp
addr16
jg
mov
lods
mov
test
push
aad
push
loopne
clc
jbe
hlt
inc
sahf
sub
push
or
neg
inc
xchg
cmps
sbb
aad
adc
jne
cmps
sti
xchg
push
lods
gs
into
pminsw
in
fsubr
fsub
add
stos
xor
mov
call
mov
and
test
ret
mov
bound
cli
dec
xchg
cmp
aad
inc
mov
or
pusha
mov
pop
call
cmp
dec
cmc
scas
ss
or
iret
mov
mov
xchg
std
mov
cmp
jbe
xor
loope
(bad)
jmp
dec
pop
jg
pop
xchg
out
sbb
sub
adc
pop
xchg
mov
push
adc
and
ret
xchg
jbe
jle
adc
or
sti
or
rol
adc
jmp
in
inc
jne
mov
out
xor
cmp
outs
enter
rcr
stc
pop
add
mov
dec
sub
inc
daa
and
xchg
fmulp
adc
shl
and
shl
call
(bad)
mov
inc
pop
cmp
add
inc
out
pushf
mov
call
fs
jb
cmp
xor
cld
popf
iret
ret
push
std
data16
push
fadd
xor
mov
pop
xor
mov
mov
add
(bad)
jbe
mov
fadd
add
xor
loope
cmc
test
mov
cmp
push
sub
sub
je
nop
bound
adc
adc
mov
in
es
mov
sub
cld
stos
call
sbb
loop
inc
push
(bad)
pop
dec
in
sub
cli
push
bound
push
xchg
adc
xchg
retf
mov
lods
mov
cmp
and
dec
hlt
idiv
movs
lods
pop
xor
inc
mov
mov
pop
repz
xchg
out
mov
mov
mov
stc
jnp
popf
iret
(bad)
mov
xchg
xor
xlat
jo
sbb
cli
cmp
inc
mov
cdq
arpl
or
adc
cmp
sbb
loope
push
ds
xor
std
mov
inc
sahf
icebp
xchg
pop
cmps
adc
cmc
imul
pushf
cwde
cmps
jmp
sbb
jno
imul
xor
repz
popf
test
jno
dec
cmc
inc
test
xlat
dec
dec
shl
mov
jno
imul
dec
cmp
dec
or
sbb
push
add
jge
fs
mov
sbb
mov
(bad)
mov
mov
stc
mov
mov
int3
retf
xor
int3
jns
add
scas
and
push
in
cmps
out
out
(bad)
fnstcw
out
jo
cmp
aaa
test
pop
retf
sbb
dec
adc
pop
push
ret
jne
sbb
jne
mov
gs
in
mov
fwait
retf
das
jg
push
mov
ficomp
repnz
xchg
shr
je
ss
js
lods
jno
xlat
lahf
dec
fwait
mov
es
int3
xchg
jo
xor
sti
out
fsubp
mov
inc
xor
ror
add
mov
dec
pop
callw
xor
or
test
aaa
das
add
push
shl
clc
xor
cdq
out
or
push
xchg
dec
jno
loop
ds
iret
pop
push
dec
lock
fwait
cmp
shr
sub
pushf
push
dec
ja
sar
dec
xchg
xchg
push
(bad)
jmp
call
inc
jb
mov
push
mov
movs
loope
inc
in
add
cmps
or
inc
das
xlat
dec
push
jp
in
cmps
in
daa
jo
sub
pop
sbb
xchg
imul
test
mov
sar
pop
push
outs
fs
test
jecxz
push
test
jo
pop
xchg
out
cmp
gs
jmp
gs
push
sar
sub
xchg
int3
xor
mov
pop
test
mov
push
js
xchg
jl
sbb
sbb
pushf
mov
cmps
ds
dec
and
dec
daa
int
pop
test
pop
ror
pusha
push
cmp
and
inc
ror
nop
es
add
jo
or
push
jp
(bad)
jbe
mov
add
fwait
iret
sbb
jns
xchg
popa
cmps
push
call
mov
loopne
xchg
mov
shl
jl
dec
fstp
mov
cli
pop
leave
ds
mov
xchg
xor
dec
push
push
jmp
push
scas
in
adc
jle
and
addr16
fwait
or
cdq
icebp
(bad)
add
push
or
jb
dec
or
test
aad
stos
add
popf
cmp
je
sbb
xor
aam
sub
nop
loope
mov
mov
mov
bswap
pop
mov
stc
fwait
iret
sbb
inc
popa
adc
inc
pusha
add
std
ror
arpl
jmp
repnz
jp
in
jae
xchg
or
gs
sbb
adc
push
mov
les
push
cld
loop
lods
or
sbb
cmp
mov
push
lea
das
jl
sub
(bad)
xor
jge
xchg
jecxz
out
retf
xor
pop
in
jnp
lahf
fist
retf
push
push
cmp
arpl
add
jmp
ss
in
jle
dec
sbb
je
jne
xlat
repnz
pusha
mov
dec
jae
test
in
cmp
push
imul
xchg
fisub
cs
sub
add
or
loopne
outs
jmp
dec
jmp
out
nop
sar
cmp
aad
jbe
lods
jmp
aad
xchg
or
jg
pop
dec
pop
adc
sbb
xlat
clc
out
and
or
push
and
pop
pop
push
xchg
les
arpl
pop
and
adc
add
xchg
loope
sub
mov
dec
add
ret
clc
push
aad
mov
mov
bound
sbb
and
jge
div
inc
jge
mov
sar
dec
and
cmps
ffreep
mov
scas
jno
bound
cmp
jno
addr16
xchg
add
stc
push
add
adc
popa
scas
dec
jne
or
xchg
mov
test
imul
xchg
jnp
aad
push
call
shr
sub
hlt
push
loopne
cmps
nop
push
stos
aaa
call
in
cmp
sub
sbb
lods
mov
xor
cmp
stos
jns
mov
frstor
rcr
cdq
push
inc
jo
pop
les
stos
mov
int3
loope
and
mov
ins
imul
inc
cmp
xor
pusha
(bad)
or
out
jmp
mul
lods
mov
xchg
xchg
or
movs
add
jecxz
mov
pop
sbb
mov
sub
add
mov
cli
in
cmp
mov
call
ret
lods
sub
sbb
and
mov
sbb
xlat
mov
dec
jge
mov
out
clc
push
arpl
jb
jae
fadd
sbb
push
in
dec
pop
fwait
sub
lea
inc
push
(bad)
jle
movs
fisttp
(bad)
adc
cdq
jg
sbb
mov
cmp
mov
retf
outs
or
call
ja
jne
out
pop
pop
stos
mov
sbb
(bad)
fcomip
out
cmp
xor
shr
xchg
pop
clc
mov
mov
arpl
jo
lds
imul
cmp
mov
ja
(bad)
xor
and
mov
in
jnp
fstp
shr
call
or
imul
mov
fcmovbe
idiv
mov
test
int3
loopne
jecxz
xchg
inc
outs
leave
(bad)
repz
aam
mov
cdq
in
cmps
retf
clc
inc
fisubr
pop
or
iret
pop
pop
push
scas
(bad)
(bad)
mov
pop
mov
not
fsubr
and
and
scas
out
mov
sahf
iret
fnstcw
sbb
mov
imul
fst
jae
mov
and
in
sbb
xchg
hlt
add
inc
test
mov
aas
lds
enter
cld
sub
js
mov
push
add
fs
lods
push
rol
adc
test
in
cmps
sbb
xchg
gs
leave
xchg
mov
jecxz
icebp
sbb
ficom
mov
adc
pop
shr
xor
add
mov
je
imul
add
ret
xchg
int3
mov
test
aas
lahf
sub
aas
add
js
test
cs
pop
dec
iret
xchg
sar
enter
das
sbb
pop
cmp
pushf
cmp
cmp
fdivr
or
sar
aad
stos
push
arpl
ja
sbb
shl
jl
clc
adc
push
and
inc
sti
dec
jns
cmps
out
cwde
mov
or
cmp
inc
add
pop
pop
pop
movs
ror
ins
outs
movs
lahf
mov
fst
call
xor
inc
in
sbb
popf
cmp
in
push
jno
rcr
dec
cmp
inc
inc
pop
xor
dec
(bad)
xchg
test
add
int3
gs
fnstsw
pop
fcom
fmul
inc
jmp
movs
shl
xor
mov
cmp
sub
ret
sub
out
add
adc
dec
inc
sbb
add
cmps
push
aas
bound
stos
shr
aaa
sub
outs
sub
jmp
pop
mov
inc
inc
pop
sub
pop
repz
nop
rcr
push
inc
test
outs
(bad)
int3
fisttp
xchg
clc
push
mov
mov
(bad)
int
dec
inc
shl
bound
sbb
call
push
push
jg
mov
push
scas
hlt
adc
add
xchg
xchg
sub
les
jmp
lods
pop
call
pop
add
sbb
out
xor
pop
into
mov
jp
sbb
sbb
xlat
or
cmp
(bad)
iret
adc
outs
jmp
cmp
mov
aad
dec
mov
and
inc
ins
jns
aam
les
sbb
and
clc
push
fist
xlat
loop
je
inc
add
pop
test
shl
and
jno
mov
int
or
mov
jl
cmp
jbe
ds
xor
jl
sti
loop
js
mov
xchg
aas
dec
pop
cdq
repnz
fcmovnb
lahf
setge
adc
dec
fistp
push
sar
ret
mov
mov
(bad)
push
mov
stos
pop
inc
or
gs
mov
enter
push
call
jg
and
fisubr
adc
ins
ror
xor
add
lds
(bad)
add
and
or
ins
pop
rol
pop
sub
aaa
or
sahf
ins
cwde
pop
xchg
stos
mov
or
out
pop
mov
shl
(bad)
pop
cmp
ja
mov
stc
fcomp
lods
pop
ins
adc
mov
add
pop
xor
xchg
push
popf
cmp
scas
push
(bad)
(bad)
sub
pop
jnp
mov
jp
(bad)
enter
gs
imul
shl
mov
push
sub
dec
std
enter
lahf
xor
push
addr16
xchg
daa
xor
out
mul
jl
add
leave
lods
cmps
or
imul
mov
and
popf
repnz
stos
loop
push
push
and
es
or
sbb
sub
mov
inc
je
dec
test
nop
pop
das
shl
(bad)
stc
repnz
mov
mov
jne
iret
xchg
fsub
add
mov
push
push
push
xchg
pop
cmps
fdiv
fdiv
xchg
imul
cmp
jle
mov
imul
cld
jae
push
repnz
add
jnp
xchg
sub
jmp
push
outs
pop
pop
add
jne
cmps
aad
xor
jo
and
dec
add
inc
jmp
cmps
inc
or
fwait
shl
ret
test
pushw
pop
add
shr
cmc
inc
cli
mov
clc
hlt
stos
inc
sti
shl
and
das
cmp
jns
sub
mov
(bad)
movs
sbb
push
pop
lahf
test
xchg
fidivr
inc
(bad)
mov
and
jb
push
add
in
fsubrp
add
xchg
inc
(bad)
mov
adc
mov
(bad)
imul
fs
pop
ds
pop
cmc
scas
xor
das
stos
nop
mov
push
mov
push
jle
mov
mov
nop
retf
into
ror
popf
xchg
jbe
inc
inc
sar
adc
inc
mov
add
js
jbe
std
mov
sti
loop
ds
imul
dec
and
out
jg
sub
pop
jb
pop
jns
bound
test
mov
sub
nop
xor
cmp
mov
mov
in
adc
adc
jne
fmul
ds
xchg
xchg
xchg
pop
nop
and
add
xor
mov
loope
leave
jne
pop
mov
pop
or
into
mov
aam
(bad)
jmp
sub
or
cmp
iret
or
sar
cwde
iret
scas
test
xchg
mov
add
jg
and
syscall
lea
call
inc
push
shl
movs
mov
dec
out
call
mov
pop
rol
sar
mov
jne
xlat
pop
es
mov
stc
xor
inc
adc
sub
in
and
push
loop
aas
cmp
outs
hlt
out
cmc
jp
fldenv
scas
xlat
inc
sbb
ror
mov
pusha
rcl
fdivr
inc
aaa
inc
push
cmp
stc
ins
mov
stos
stos
lods
movs
pop
or
cmps
jno
stc
mov
sub
or
cmp
dec
arpl
xor
pop
lods
hlt
sbb
iret
test
pop
fdivr
or
in
mov
shr
aaa
stos
out
pop
das
or
test
ss
dec
mov
js
mov
inc
mov
jmp
jl
lods
clc
fcom
and
push
inc
aas
fistp
jo
clc
shl
mov
popf
dec
xor
popa
sar
jp
adc
aam
div
push
mov
push
pop
(bad)
cmc
add
inc
cmp
sub
mov
mov
mov
sub
les
leave
lds
stos
mov
test
or
ficom
mov
push
cwde
pop
or
jecxz
hlt
ror
inc
pop
loope
jecxz
dec
mov
or
adc
jae
mov
fadd
dec
mov
mov
xor
sar
mov
fild
icebp
out
(bad)
sub
adc
and
inc
push
add
hlt
ret
outs
ss
jl
aas
push
dec
jmp
push
cdq
xchg
or
pop
ins
test
fwait
les
push
adc
push
sbb
std
mov
cdq
mov
jno
call
fimul
push
aad
mov
jne
test
mov
add
(bad)
movs
out
mov
sbb
adc
jl
imul
cs
clc
int
xchg
or
rcl
repnz
dec
mov
or
add
test
leave
out
into
sbb
sub
pop
ret
ins
adc
inc
mov
arpl
jae
mov
pop
fldlg2
in
or
std
les
add
inc
je
lea
sub
dec
rcr
pop
pop
jmp
mov
addr16
dec
arpl
das
loope
push
adc
scas
mov
adc
int3
jo
mov
mov
scas
out
push
xchg
adc
cmp
adc
std
fimul
test
mov
xor
mov
popa
popa
ret
cmp
addr16
inc
lods
dec
pop
popf
lods
leave
cmp
adc
mov
int3
(bad)
mov
mov
jne
cmp
adc
mov
add
test
in
push
cli
sub
xchg
jnp
push
adc
stc
lea
mov
stc
mov
xchg
aaa
sbb
fistp
sub
repnz
mov
(bad)
cmps
in
dec
adc
enter
push
fsub
pushf
popa
jp
jb
das
dec
loopne
mov
or
mov
mov
sub
dec
sub
mov
jno
aam
and
pusha
adc
fisttp
push
sti
out
into
cld
xchg
push
and
xor
test
aas
cmp
fwait
fs
jnp
mov
pusha
cli
das
stc
gs
jno
arpl
xlat
jmp
in
cmp
pushf
aad
sbb
clc
retf
arpl
xchg
int
push
cmc
lds
lds
pushw
cwde
adc
call
or
push
add
and
sub
mov
or
call
rol
jge
ror
sub
lods
mov
pop
push
nop
xchg
enter
rcl
scas
jmp
aas
test
adc
and
icebp
(bad)
aad
sub
int
ror
or
repz
retf
cmp
pop
mov
cld
inc
aad
inc
ficom
inc
sbb
jp
mov
push
aas
data16
xor
in
push
cmps
ror
mov
aaa
pop
mov
add
stc
shl
adc
in
mov
repnz
loop
or
xor
cmp
fiadd
mov
ret
mov
and
imul
cmps
adc
mov
test
add
adc
cmp
ja
fs
rcr
cmp
fcomi
dec
das
cmps
xchg
loopne
sub
sub
pop
ret
rcl
push
ds
push
jle
pop
lahf
add
rcl
mov
jno
in
leave
ins
ins
addr16
int3
mov
scas
pop
fs
ins
dec
repnz
jbe
mov
push
cmp
sbb
or
lock
loopne
jp
sub
pushf
je
leave
jns
xor
push
or
mov
pop
cmp
out
aad
rcr
push
adc
je
and
ficomp
or
(bad)
add
add
ja
sub
call
sahf
aad
and
imul
mov
addr16
mov
lea
data16
mov
scas
enter
push
mov
stos
mov
je
cdq
pop
adc
cmp
jne
aas
(bad)
dec
and
dec
xchg
mov
lea
xchg
xchg
js
or
mov
(bad)
lods
or
add
jo
add
xchg
retf
jnp
fst
and
out
fdiv
test
in
scas
cmp
sub
sbb
addr16
sbb
jo
mov
movs
imul
cmp
jge
inc
adc
arpl
dec
pop
mov
test
cdq
dec
dec
cmps
neg
clc
sbb
mov
(bad)
loopne
sbb
adc
sbb
cmc
dec
sar
pop
sbb
xor
popa
xchg
int3
cmp
call
jecxz
mov
stc
dec
mov
daa
aam
or
sbb
add
xor
cmps
fstp
add
or
sub
add
xor
push
inc
xor
cmp
jge
hlt
rcr
xrstors
fldcw
sbb
nop
cmps
push
mov
jmp
loope
or
or
mov
jle
push
dec
dec
out
in
mov
sbb
inc
mov
test
push
clc
std
stos
and
xchg
clc
mov
pop
sub
pop
adc
into
ror
leave
aad
shl
ins
call
pop
mov
sub
shl
push
jno
call
pop
imul
dec
xor
inc
call
sub
push
mov
and
dec
inc
mov
pop
inc
or
lock
pop
or
cmp
icebp
sub
push
jno
jg
les
cld
stos
call
cmps
push
xchg
or
mov
je
lds
or
and
sub
xchg
mov
outs
jl
or
push
cmp
popf
stos
popa
das
fiadd
push
xor
fidiv
xlat
stos
fisttp
hlt
addr16
and
and
movs
jae
cmps
mov
mov
xchg
aaa
imul
mov
or
xchg
fnstenv
jns
inc
mov
cld
retf
cmps
mov
lods
and
aaa
jo
into
cld
jle
repz
out
push
lock
imul
dec
cmp
dec
cmp
and
(bad)
adc
cmp
movs
imul
push
push
push
shr
adc
pop
mov
jnp
sbb
adc
mov
xchg
add
mov
in
mov
(bad)
mov
loope
test
aas
retf
lds
loop
test
jno
sub
inc
dec
imul
xor
dec
mov
out
pop
jl
rcr
aaa
std
jecxz
and
stos
imul
or
shl
call
into
sub
jne
inc
fidivr
out
and
push
lds
pop
test
xor
shr
dec
mov
xlat
push
xchg
cwde
sub
mov
inc
cwde
scas
in
fs
imul
leave
js
mov
mov
es
fdivr
and
push
xor
sub
outs
mov
stc
jmp
jge
shr
inc
mov
xor
cmps
jbe
scas
into
add
jns
jae
fild
mov
xchg
fnsave
imul
ss
lods
mov
test
mov
inc
cmp
fwait
jno
stos
jns
fbstp
mov
add
cmp
jge
adc
ror
inc
ss
fsub
es
fmul
mov
cmc
pop
and
and
(bad)
into
dec
adc
sbb
in
sub
fld
aaa
lods
xchg
aad
dec
stos
data16
int
pop
lea
dec
pop
loop
enter
stc
mov
gs
ficomp
mov
test
movs
jmp
sub
rcr
in
xor
mov
xor
and
hlt
les
xchg
imul
in
push
fs
es
mov
in
fwait
das
mov
enter
rcr
aaa
push
pop
pop
sbb
ja
mov
sbb
rcl
xchg
neg
cmp
gs
cmp
sbb
je
cmp
cmps
adc
jne
test
inc
popf
std
sahf
pop
and
fdiv
or
outs
jge
test
js
gs
push
sbb
movs
cmp
cmp
fmul
movs
and
push
mov
xor
mov
cdq
cli
call
jne
dec
jnp
imul
xchg
cmps
push
mov
push
gs
xor
or
dec
mov
sbb
shr
pop
cmp
daa
outs
mov
lock
jns
xor
sti
fisubr
cli
out
jg
loopne
push
mov
dec
jg
jecxz
test
and
mov
xor
mov
pop
pop
(bad)
sbb
lea
cmp
push
ins
loope
(bad)
pusha
jle
and
std
into
rep
jno
shl
dec
mov
in
pop
mov
fimul
stos
mov
loopne
popf
test
fdiv
mov
cmps
xor
mov
ds
popa
inc
std
sbb
test
sbb
pop
mov
jae
push
push
leave
sub
and
mov
push
fld
(bad)
repnz
dec
dec
inc
pop
sub
pusha
and
push
add
(bad)
mov
xor
jo
mov
pusha
sub
out
mov
or
aas
sbb
loopne
jns
popa
jae
push
and
or
arpl
rdpmc
outs
sbb
mov
icebp
pop
dec
ds
dec
data16
in
adc
xchg
mov
sub
jmp
ror
mov
fcom
aaa
dec
leave
das
clc
push
sbb
pop
mov
std
cmp
loopne
pop
push
iret
ret
pusha
mov
sbb
or
pop
or
push
xor
and
pop
dec
pop
icebp
cmp
out
cmp
lock
mov
jecxz
shl
into
xor
sub
inc
fs
jae
out
shl
sub
mov
jno
pop
in
ja
and
dec
sbb
retf
shl
adc
dec
cmps
aad
mov
leave
adc
shl
(bad)
lock
aaa
cdq
aaa
enter
push
and
bound
cmps
pop
imul
sbb
pusha
push
push
cmp
jp
cdq
mov
jl
mov
xchg
adc
das
loop
sub
clc
loop
lods
push
push
or
mov
mov
bound
lock
xchg
dec
imul
pavgb
mov
inc
out
lea
xchg
ins
mov
in
loop
dec
aam
cmp
iret
ja
cmp
mul
rep
ror
adc
les
mov
fisttp
dec
inc
mov
outs
inc
outs
sub
dec
dec
inc
rcr
cli
out
sbb
push
shl
or
push
loop
out
jne
mov
aas
jns
retf
loop
hlt
dec
jp
loopne
xchg
adc
pop
fimul
or
mov
push
cmp
inc
pop
pop
imul
dec
fnstsw
and
int3
mov
sbb
lods
call
mov
ja
dec
mov
xor
inc
arpl
jecxz
sub
push
lock
in
xchg
js
call
xchg
xchg
or
sbb
or
pop
sub
sbb
mov
jmp
push
cld
sar
pop
fcomp
in
test
ss
sti
(bad)
mov
jb
xchg
push
adc
nop
mov
out
lods
pop
xlat
lock
sbb
jns
sub
test
pop
fisttp
push
jae
popf
stos
cs
add
xor
call
mov
add
(bad)
sub
aaa
mov
push
ror
push
mov
iret
mov
adc
movs
mov
push
pop
and
popf
dec
sbb
push
mov
mov
jle
leave
push
jp
ja
mov
rcl
sub
sbb
mov
out
ds
or
fs
lock
fsubr
aam
out
xchg
cmp
jbe
mov
lock
in
mov
jmp
push
mov
jmp
cmp
pop
sub
popf
movs
xchg
mov
cs
jbe
arpl
pop
rol
in
arpl
xchg
mov
mov
stc
je
aad
cmps
loopne
fsub
push
(bad)
or
mov
dec
pop
and
push
or
test
dec
xchg
inc
mov
pop
out
out
mov
ss
inc
(bad)
mov
ficomp
xor
pop
add
enter
mov
jge
inc
pushf
pop
mov
fwait
movs
outs
pop
(bad)
push
or
scas
(bad)
retf
sahf
call
pushf
stos
xchg
inc
inc
or
mov
addr16
inc
or
mov
gs
addr16
and
fwait
stc
xchg
mov
add
push
dec
mov
and
loopne
fabs
pop
xor
sbb
(bad)
shl
repnz
ret
jl
pushf
adc
or
pushf
push
nop
movs
sub
push
sub
pop
nop
bnd
mov
mov
std
inc
inc
into
movs
push
xchg
adc
fs
fistp
stc
pop
cdq
cmp
movs
mov
scas
cmp
enter
ins
pop
cmp
push
das
popf
and
add
dec
cmc
cli
xor
xor
popf
popf
pop
jmp
add
sahf
aam
xchg
push
jno
loope
dec
xchg
pop
ins
push
inc
pop
jecxz
mov
inc
push
loopne
inc
sub
mov
es
scas
fsub
shl
into
cdq
push
push
or
xor
std
popf
jecxz
xchg
add
mov
sub
sbb
not
data16
cmp
movs
pushw
and
xchg
xchg
cmps
cmp
loopne
es
ds
enter
nop
mov
push
enter
aas
mov
(bad)
pushf
out
aad
push
push
outs
sub
or
mov
imul
enter
sahf
je
jle
shr
pusha
dec
mov
ret
sub
mov
sub
movs
je
sbb
call
dec
adc
(bad)
repz
push
imul
shl
push
jae
sar
in
and
lds
add
sub
aas
cwde
out
pop
outs
scas
inc
ss
xchg
(bad)
dec
xor
test
mov
xor
jne
test
xchg
xor
inc
imul
fimul
mov
movups
mov
lock
das
sbb
sub
add
adc
dec
enter
xchg
(bad)
mov
fsubr
and
(bad)
push
out
xchg
and
dec
sub
adc
call
mov
into
dec
xor
jnp
mov
pop
popf
or
dec
push
push
inc
(bad)
pop
add
mov
sub
ins
mov
add
and
les
std
retf
or
push
mov
and
push
xlat
sub
leave
(bad)
icebp
mov
cmp
adc
dec
inc
test
out
mov
adc
ss
mov
add
mov
xlat
stos
mov
mov
inc
mov
dec
addr16
mov
cmp
in
jg
cmp
jbe
stc
pop
test
xchg
xchg
cmc
pop
mov
out
stc
cmp
pop
xchg
out
mov
imul
add
retf
dec
shr
sub
movs
inc
pushf
cmps
in
xor
into
inc
fldcw
or
cmp
call
mov
inc
mov
ficom
or
hlt
pop
addr16
(bad)
sbb
leave
ja
pop
inc
cmp
into
aaa
fsub
inc
adc
push
cwde
sti
or
sub
out
stos
push
mov
lock
pop
adc
lahf
mov
in
sti
dec
xchg
shr
push
ror
in
stos
mul
push
clc
aam
or
push
in
jo
aaa
cli
addr16
add
push
scas
test
jl
mov
jne
jns
xchg
popa
pop
fs
js
cmp
ds
cmp
mov
push
jns
mov
fst
cmps
in
cwde
cmp
push
mov
int3
addr16
mov
call
ja
add
pushaw
aam
and
sub
(bad)
std
addr16
push
mov
in
sbb
ins
ins
sbb
jmp
xchg
add
ss
out
xchg
sbb
mov
mov
jmp
cwde
cmps
sbb
adc
or
mov
mov
in
(bad)
in
rcr
enter
lods
xlat
or
add
cmp
pop
push
(bad)
jb
or
call
xor
push
gs
pushf
pop
cld
hlt
xchg
fs
out
push
xor
outs
daa
sbb
mov
inc
(bad)
iret
mov
or
jns
jmp
mov
mov
xor
or
cli
jnp
xor
add
addr16
push
cmp
mov
nop
lea
dec
jg
push
mov
ins
jne
sbb
inc
loop
sbb
and
daa
das
fdivr
add
nop
mov
into
inc
hlt
cmp
sbb
jmp
shl
dec
mov
inc
xor
or
ret
inc
xlat
dec
(bad)
out
or
fwait
mov
fsubr
fst
cld
stos
mov
adc
jbe
inc
pop
pop
ds
dec
xor
sub
and
jae
cwde
jecxz
(bad)
sub
les
sub
sbb
inc
xchg
sub
xchg
mov
dec
bound
retf
shl
inc
popa
push
ror
cmp
loop
bswap
pop
lods
mov
sub
adc
mov
daa
push
mov
bound
sbb
or
jg
repz
jbe
lods
mov
inc
add
dec
movs
adc
fwait
nop
xchg
(bad)
pushf
xchg
dec
mov
rol
cmp
lahf
not
xor
mov
pop
pushf
inc
enter
mov
ins
and
mov
nop
push
push
shr
imul
iret
test
xchg
sti
hlt
out
and
push
cli
mov
lea
mov
bswap
ins
mov
int
mov
fistp
test
add
ret
cmovp
ret
push
xor
xor
mov
mov
push
rcl
nop
stos
stos
fldpi
movs
cmp
or
jecxz
mov
mov
test
xor
or
sbb
into
ss
popf
pop
dec
js
xor
test
hlt
adc
fisttp
cmp
ins
and
mov
push
outs
xor
cli
into
xor
mul
cdq
or
cwde
cmp
fcmovnb
push
(bad)
sahf
or
stc
cmp
data16
addr16
loope
loopne
xor
sbb
es
pop
mov
xchg
mov
add
mov
enter
or
ins
dec
pop
jp
loope
fcmovnu
jns
dec
cld
movs
test
popf
jmp
cmp
shl
int
sub
mov
jo
xchg
shl
cs
push
jno
sbb
hlt
mov
dec
ins
shr
sar
sbb
sub
test
bound
mov
push
lea
mov
dec
xchg
cli
(bad)
movs
(bad)
gs
loop
push
xor
ror
ins
arpl
sti
je
(bad)
les
mov
lds
(bad)
jbe
adc
ds
mov
push
xor
push
(bad)
cmc
push
mov
mov
lods
xchg
jl
push
sbb
push
pop
and
and
dec
dec
cmp
inc
jns
jecxz
dec
popa
retf
add
jno
push
addr16
cdq
test
mov
adc
dec
and
data16
jp
shl
and
std
rcr
mov
fwait
add
jb
push
pusha
mov
outs
fsub
jecxz
into
add
inc
mov
mov
jle
popa
imul
pop
add
fsub
dec
mov
cwde
(bad)
mov
push
jno
adc
jnp
icebp
out
add
int
stos
into
call
in
cmps
(bad)
aaa
sub
pop
movs
sbb
mov
shl
jl
mov
fdiv
out
test
cmp
mov
mov
das
bound
leave
dec
(bad)
and
movs
test
dec
sahf
ss
fidivr
sub
popf
or
cmp
pop
and
and
sti
cmp
test
daa
or
rcl
int
lahf
xchg
pop
sbb
jno
inc
jae
sbb
cmps
dec
mov
addr16
cmp
push
mov
movs
push
arpl
mov
sub
sbb
and
retf
rcl
into
pop
pop
test
fs
clc
ja
mov
xchg
ret
leave
sbb
or
jp
rol
cld
pop
js
adc
or
pop
sbb
sub
jne
icebp
jg
inc
ja
pop
cdq
mov
jnp
data16
xchg
sbb
push
cmps
pop
push
inc
cld
jmp
push
sub
push
cmp
sub
xchg
cli
je
ds
inc
repnz
sub
sub
imul
ins
ret
mov
cmp
iret
scas
(bad)
jmp
pop
fsubr
mov
mov
pop
pop
jge
inc
outs
addr16
fsub
or
sti
xlat
outs
or
cmps
dec
pop
inc
fs
mov
test
ret
mov
xchg
in
sub
imul
mov
lods
jl
lods
mov
pop
cmp
fadd
mov
xchg
fiadd
mov
loop
inc
push
mov
(bad)
imul
rcl
push
mov
cdq
mov
mov
dec
test
stos
int3
js
push
loopne
push
int
xor
out
add
mov
jnp
and
mov
(bad)
test
je
xchg
or
cdq
ret
test
or
dec
jne
inc
div
xchg
outs
cmp
push
sbb
sbb
sbb
xor
mov
mov
aaa
bound
syscall
invd
jmp
and
pushf
pop
xchg
in
lods
pop
icebp
ja
test
ins
out
xchg
ss
mov
jmp
imul
aas
sbb
lods
test
adc
or
cmp
shl
push
inc
cdq
cdq
movs
mov
push
mov
cmp
mov
outs
rcr
mov
fcom
sbb
push
addr16
or
pop
pop
add
pop
push
push
dec
fmul
imul
inc
or
xor
pushf
retf
and
ret
sub
adc
dec
daa
les
bound
(bad)
std
mov
fisubr
fchs
sub
mov
popa
pop
lea
add
pop
or
xchg
ret
push
cmp
hlt
sub
jle
mov
ja
xchg
push
rcl
or
lea
pop
adc
out
or
push
jmp
cmp
in
or
add
loope
scas
xchg
aaa
jbe
aam
mov
sbb
retf
and
cmp
or
cmp
std
and
mov
jnp
popa
mov
and
mov
loopne
fisttp
ret
fcomp
rol
mov
and
das
push
push
fistp
mov
test
adc
fisubr
and
lahf
push
fdivrp
and
(bad)
jo
adc
jmp
(bad)
xlat
jnp
cwde
jnp
pop
mov
scas
(bad)
pusha
icebp
fisubr
pop
inc
inc
popf
inc
inc
fdivr
(bad)
lock
inc
(bad)
test
pop
imul
dec
dec
push
sti
pop
or
mov
or
test
sub
ja
mov
dec
cmps
je
mov
arpl
neg
cld
add
retf
aad
popa
ins
js
or
imul
iret
test
xor
inc
retf
mov
sub
lahf
and
pop
pop
or
movs
push
std
aam
and
mov
jl
inc
outs
cwde
fadd
sbb
test
in
and
mov
inc
mov
in
fild
push
in
dec
dec
adc
fcomi
dec
or
mov
popa
in
mov
xchg
jg
mov
push
(bad)
leave
sub
shr
cmc
inc
push
adc
push
push
aas
jmp
loope
sub
ret
ins
ss
sbb
mov
sbb
inc
cdq
add
lea
push
icebp
inc
mul
call
xchg
hlt
shl
dec
add
mov
fisttp
stos
es
out
int3
push
cmp
cmp
ret
mov
ret
sbb
add
sbb
fimul
inc
sti
neg
lea
dec
test
xor
sti
inc
shl
mov
mov
pop
mov
cmp
call
sbb
pop
popf
icebp
or
fldenv
adc
jecxz
pop
fidiv
or
loop
sub
jb
pushf
push
mov
outs
iret
push
inc
xchg
add
adc
add
push
push
jno
lds
xchg
enter
mov
sub
mov
jbe
ss
mov
mov
and
jp
fwait
sub
push
mov
bnd
dec
ror
js
(bad)
imul
cmp
xchg
(bad)
int
test
or
ds
xor
(bad)
mov
jne
rol
sub
enter
ja
cmps
xor
rcl
neg
pop
retf
mov
sub
in
xchg
popf
enter
pop
sub
add
or
or
fnstcw
mul
cmc
(bad)
test
loop
shl
into
loope
rcl
(bad)
pushf
lock
adc
mov
push
pop
mov
movs
cwde
push
xor
add
inc
arpl
cmp
xchg
jg
jg
push
jle
repnz
es
sar
jmp
jl
(bad)
cmp
cmp
call
js
sbb
inc
adc
out
je
add
push
in
dec
pop
icebp
push
js
jmp
dec
inc
scas
fcom
arpl
shl
mov
jne
sar
push
xchg
ror
jp
xchg
pop
dec
fst
fldenv
(bad)
stos
nop
xchg
push
std
pop
cmps
(bad)
pop
loopne
and
mov
movs
lea
mov
cmp
mov
cmp
test
dec
cld
inc
test
xor
inc
repz
stc
push
stc
push
aam
mov
fcomp
lods
out
aas
mov
cmp
in
sub
lahf
mov
cwde
and
loopne
xchg
dec
ins
push
imul
fmul
mov
push
lea
jg
inc
dec
push
loope
repnz
push
mov
jmp
mov
pop
xchg
push
outs
test
push
daa
mov
rol
js
xchg
arpl
sbb
pop
and
sahf
cmc
xor
push
sbb
push
xchg
add
fcom
cwde
xchg
mov
aaa
sbb
repnz
mov
rcr
shl
in
cs
add
add
jmp
xor
dec
dec
mov
sbb
mov
fwait
push
jo
ja
add
mov
push
cmp
iret
dec
in
aaa
inc
adc
nop
call
mov
bnd
leave
stos
sbb
movs
inc
xchg
cmp
aam
and
push
fadd
mov
and
std
lods
jne
(bad)
pop
inc
inc
bound
movs
sbb
fsub
push
icebp
(bad)
mov
loope
jbe
sbb
lea
jno
in
lea
aas
pop
ins
push
cmp
jno
add
cmps
push
push
mov
std
repz
and
jno
movs
hlt
(bad)
test
fnstsw
mov
jne
inc
cmps
jo
mov
ds
out
fild
aas
jbe
sub
sbb
ficomp
mov
mov
adc
je
push
iret
jne
cmp
inc
or
test
retf
(bad)
stos
fst
stos
add
jecxz
enter
push
sbb
push
adc
int3
mov
and
js
mov
xor
jb
int3
mov
(bad)
xchg
jmp
scas
and
push
and
sbb
call
xor
mov
inc
pop
push
mov
mov
jecxz
imul
cmp
sub
add
push
inc
mov
lock
cmp
push
loopne
rcl
stos
jb
mov
outs
in
out
lods
xlat
cmp
loopne
sti
fiadd
rol
mov
mov
jmp
and
dec
fst
and
mov
retf
xchg
mov
sahf
add
lods
retf
push
pop
cli
test
pop
pop
xchg
xor
sub
shl
gs
jmp
jle
pop
(bad)
in
xor
nop
(bad)
fistp
xchg
mov
imul
push
push
pop
inc
jno
mov
mov
jmp
or
or
mov
test
cld
adc
sbb
pop
xor
repz
cmp
dec
sub
pop
cmps
dec
cmp
mov
cld
daa
jle
paddsb
add
pop
mov
adc
jecxz
xor
rol
lds
mov
addr16
int
mov
loop
mov
retf
div
fcomp
sbb
repz
xlat
pushf
ss
cli
sub
pop
das
cmc
push
or
push
mov
and
push
add
fnstsw
xor
loopne
bound
inc
sbb
(bad)
jmp
cwde
sub
nop
ja
out
ss
ja
adc
sub
add
xchg
mov
adc
inc
add
and
movs
shr
dec
mov
fadd
stc
mov
arpl
retf
push
in
sub
xor
add
sbb
in
sti
call
adc
call
in
shl
shl
sahf
pop
sub
fidiv
or
test
push
add
inc
test
push
loopne
fld
sbb
shl
cmps
das
lds
sub
or
xchg
(bad)
mov
push
xchg
push
jl
dec
in
sbb
jnp
pop
jnp
cli
shl
mov
adc
push
sub
sub
test
jnp
cmp
outs
cmp
je
lea
inc
xchg
ja
test
cmp
bt
dec
(bad)
inc
xchg
lea
mov
xor
fs
mov
in
icebp
cmp
lods
or
xchg
cmp
xor
je
or
popf
in
ins
test
ds
cmp
push
fcomi
adc
ret
inc
bound
cmps
lods
outs
and
rol
cmps
sub
xchg
dec
aaa
cli
test
lods
pop
test
jbe
xor
sti
xchg
and
cvtps2pd
clc
out
les
add
aad
aas
push
mov
mov
cmc
xlat
mov
inc
xor
pop
pusha
dec
hlt
jbe
xchg
aad
mov
xchg
push
mov
jg
mov
imul
pop
jne
rep
mov
dec
fsubr
das
test
fmul
or
imul
bound
pop
mov
mov
mov
and
xchg
les
cmps
jmp
shl
or
(bad)
cmps
add
mov
mov
mov
mov
not
cmps
jecxz
jle
pop
(bad)
inc
or
shl
pop
out
xor
and
add
retf
mov
xchg
sbb
in
jae
push
xchg
inc
pop
call
cld
aam
test
xor
sub
pop
xor
inc
dec
and
ja
sti
inc
icebp
outs
fld
fidiv
pusha
aas
into
lods
int
das
push
cld
xor
rcr
cmp
jno
rol
out
shl
and
mov
jg
outs
dec
scas
nop
adc
repnz
mov
adc
and
xchg
mov
outs
int
int
adc
xor
in
adc
lods
dec
mov
jg
cmp
mul
repnz
stc
jle
mov
cmp
xor
out
mov
and
adc
xor
adc
adc
mov
iret
lahf
jl
mov
mov
jnp
outs
sbb
(bad)
test
cmp
fwait
xchg
xchg
mov
mov
sbb
jg
cmp
xchg
pop
fcom
adc
xchg
jo
mov
jmp
ret
sbb
xchg
pop
int
dec
(bad)
inc
xor
repnz
or
pop
popf
frstor
fimul
rol
mov
(bad)
stc
cmps
push
pop
inc
lds
aas
push
and
fidiv
sub
add
adc
in
mov
stos
leave
mov
jnp
jle
test
xor
das
idiv
loop
mov
jmp
cmp
push
mov
mov
addr16
es
mov
imul
imul
int3
pop
test
and
mov
loop
outs
fidivr
scas
or
push
push
test
xchg
xor
jae
adc
repz
and
in
das
(bad)
ret
daa
pusha
lea
push
sub
mov
push
or
xor
mov
fmul
sub
lods
xchg
bound
and
or
inc
shl
dec
push
int
mov
add
icebp
(bad)
sti
je
add
iret
mov
cdq
ss
mov
sti
push
xchg
jo
xchg
xor
shl
jle
cmc
mov
pop
jns
rep
loop
jmp
cmp
jno
xor
mov
out
cmps
fucomip
pushf
push
sub
out
popa
dec
pop
ds
add
loope
retf
sahf
mov
mov
addr16
repz
adc
pusha
lods
add
dec
dec
leave
cmp
jmp
mov
aad
xor
scas
(bad)
jmp
mov
sbb
repnz
(bad)
rcr
mov
push
fdiv
jp
repz
pop
push
pop
out
or
and
inc
test
and
jae
jle
push
inc
aaa
adc
in
out
and
cmp
push
pusha
jg
lods
retf
test
test
int
iret
sbb
jb
add
in
jle
in
add
dec
arpl
retf
jp
clc
retf
mov
sub
stos
and
xor
ficomp
xchg
js
in
lea
loop
cmps
and
les
pop
pop
push
xchg
push
loop
(bad)
mov
shr
sbb
shr
add
retf
pop
ret
inc
(bad)
and
push
cld
and
dec
int3
push
mov
aam
jp
jl
rcl
pushf
lds
cdq
gs
lea
push
(bad)
mov
lock
xchg
jmp
jnp
mov
sub
dec
push
xchg
sar
adc
test
sbb
xor
add
add
xor
mov
in
aaa
(bad)
push
inc
ret
scas
imul
(bad)
inc
icebp
mov
fsub
out
cmp
push
inc
shr
mov
jge
push
mov
sub
jle
jae
adc
pop
(bad)
repz
shr
(bad)
je
and
dec
rcr
sub
jbe
stos
jmp
mov
iret
fldl2t
xchg
sar
fist
jbe
add
xor
ret
xor
stc
xlat
scas
fisubr
loopne
inc
lahf
fld
jnp
repnz
call
dec
rcl
nop
fdivr
push
lahf
and
jl
jno
test
ret
xchg
aas
dec
jb
xchg
cmp
jmp
xchg
pop
cmp
adc
mov
lahf
mov
shl
pop
sahf
pop
inc
and
popf
push
cmc
in
jb
cld
addr16
sub
xchg
iret
push
int
jno
fdiv
addr16
dec
retf
mov
dec
xor
(bad)
loop
pushf
or
mov
cmps
dec
or
ins
pop
jno
cmp
adc
test
jae
and
mov
and
push
ds
mov
xchg
aaa
fmul
cs
adc
outs
dec
loope
sbb
or
jns
shr
push
inc
sbb
mov
sbb
pop
sti
cmp
nop
cmps
loope
jmp
bound
mov
cmp
clc
jbe
jmp
sbb
mov
xchg
push
into
enter
ins
pusha
ret
mov
dec
aaa
scas
les
xchg
jns
sti
xchg
xchg
sbb
jae
retf
jbe
cmp
fadd
jbe
sbb
shl
shr
or
popa
mov
sbb
(bad)
in
loope
ficom
pushf
retf
mov
les
lea
adc
rcr
jae
jle
add
mov
rcl
das
push
hlt
stos
push
sbb
push
dec
adc
fld
dec
pop
loop
xchg
cmp
ret
adc
aas
mov
adc
xchg
dec
xor
mov
pop
or
push
ins
jmp
sbb
repz
inc
fsub
mov
popf
clc
mov
shl
mov
aas
(bad)
rol
pop
or
inc
push
cmp
(bad)
inc
(bad)
cmc
push
mov
loope
in
cmps
or
adc
push
xlat
add
iret
xor
pmuludq
or
idiv
xor
ds
inc
cmp
jle
or
and
sub
fld
ins
imul
mov
push
xchg
call
(bad)
inc
adc
sti
pop
test
cld
and
hlt
data16
and
mov
mov
in
push
cli
sbb
jns
fst
iret
aaa
and
inc
cli
xbegin
ror
cmps
add
loop
aad
pop
in
sub
jl
xchg
push
mov
cmps
mov
xchg
in
pop
aaa
gs
retf
retf
jge
daa
push
loope
sbb
aas
mov
paddb
cmps
inc
pop
xchg
inc
mov
dec
hlt
outs
(bad)
push
xchg
ins
es
mov
(bad)
lock
jne
or
rcr
pop
aam
dec
icebp
test
scas
sbb
lock
sub
push
ds
jo
xor
ss
sub
cmp
mov
(bad)
jae
jle
retf
and
push
sahf
push
xor
aaa
pop
dec
sub
int
retf
enter
daa
stos
dec
leave
mov
xchg
leave
push
or
mov
scas
inc
mov
imul
ins
xchg
movs
jmp
mov
stc
cmps
xor
rcl
xor
sar
jbe
cwde
data16
xchg
xor
push
ror
add
or
sar
movs
inc
fisub
addr16
push
mov
mov
nop
adc
pop
jno
mov
rcr
neg
pop
sar
nop
out
sti
xor
dec
imul
test
imul
movs
mov
in
leave
pop
push
push
mov
xchg
cmp
stos
outs
jae
shr
in
out
outs
into
xor
add
mov
in
movs
ds
in
lods
cmp
sbb
sbb
pop
pop
mov
jg
sbb
lods
fcomp
jp
shl
sub
or
int3
inc
sub
xor
cmp
inc
pushf
daa
outs
gs
sub
xor
mov
lahf
inc
push
pop
mov
sbb
push
pop
push
add
mov
add
mov
jne
dec
fs
stos
or
dec
push
xlat
and
mov
fnsave
outs
aas
cld
ds
jmp
(bad)
pop
jno
packuswb
loopne
or
fistp
nop
push
add
lods
xor
jle
inc
cmp
mov
mov
rcr
inc
pop
in
jo
int
sbb
pushf
jo
xlat
pop
push
or
(bad)
sbb
test
(bad)
dec
into
and
cdq
fs
cmp
fmul
mov
push
xchg
and
inc
fisub
fiadd
pop
add
test
dec
sbb
push
xchg
out
mov
cmp
rcl
add
and
sub
mul
rol
xor
cli
add
dec
lea
cwde
(bad)
xchg
cmp
adc
dec
out
pop
lods
aas
adc
popf
sub
inc
lods
inc
jg
mov
mov
enter
sbb
add
jmp
xor
sti
inc
lods
(bad)
cmc
adc
dec
in
mov
and
inc
in
adc
pop
cmp
inc
jne
fwait
push
xor
icebp
jno
xchg
or
ins
into
cmps
ret
inc
mov
and
and
push
dec
push
cmp
xchg
test
dec
rcl
inc
adc
jno
dec
loopne
addr16
cs
clc
xor
sub
jle
or
fadd
and
sbb
lahf
adc
and
out
push
mov
jnp
clc
fs
mov
call
das
xor
cmp
adc
repnz
in
mov
lea
ret
push
jae
adc
in
pop
cli
sub
mov
cmp
(bad)
enter
cmp
scas
scas
xchg
pop
pop
out
sar
dec
sub
icebp
push
mov
mov
or
add
lea
fwait
mov
or
jno
push
push
into
pop
call
push
pop
ja
loope
mov
add
jg
mov
sbb
or
xchg
(bad)
jmp
cmp
je
add
mov
mov
adc
mov
movs
aad
xor
inc
or
add
mov
mov
xchg
xchg
dec
push
adc
std
jns
call
stos
adc
add
jbe
and
and
xchg
mov
sbb
ins
jg
cmp
dec
cmp
fst
adc
xor
push
cmp
pop
push
mov
popa
jnp
xor
loopne
dec
pop
fld
(bad)
xor
mov
xor
loope
mov
dec
xor
(bad)
sar
stos
fsub
mov
es
shr
cs
cs
jbe
fsub
mov
sub
sbb
in
jno
inc
leave
pop
mov
xchg
mov
add
nop
mov
imul
out
push
and
mov
lahf
cmp
loop
call
adc
jno
sbb
loope
call
scas
inc
pusha
popf
out
retf
sbb
pusha
pushf
imul
cli
dec
or
push
rcl
int
repnz
shl
pop
sub
mov
jp
out
adc
or
sub
push
xchg
jne
cmps
cs
ficomp
stos
mov
sub
dec
jmp
not
mov
shr
push
out
sub
fdivp
mov
xchg
test
xchg
push
or
out
js
scas
test
adc
mov
jle
stc
in
(bad)
ja
xor
into
add
int
lds
cmps
mov
outs
repnz
inc
mov
cwde
sbb
dec
push
cld
scas
aaa
js
outs
dec
das
sub
es
and
call
push
mov
mov
int
xchg
out
(bad)
pop
sbb
and
retf
shl
cmp
lods
add
repz
add
test
jae
cmc
(bad)
mov
fcomp
xchg
aaa
rol
push
mov
sti
jl
nop
xchg
dec
dec
test
call
ins
fadd
sbb
mov
cmp
data16
xchg
neg
dec
cwde
out
loope
cmp
stos
vmwrite
adc
pop
daa
mov
sbb
pop
xchg
mov
mov
pop
xor
int3
(bad)
pop
xchg
arpl
loopne
in
repnz
sbb
not
sti
mov
rol
or
fstp
outs
push
push
xchg
daa
scas
mov
push
add
ins
inc
into
sbb
and
jmp
aas
int
cmps
inc
popa
imul
iret
fisttp
lock
repnz
loop
add
lods
lds
popa
jle
ja
xchg
jle
xor
jmp
jle
inc
scas
mov
js
mov
out
ror
cld
mul
stos
lds
jnp
fst
out
push
sbb
xor
adc
hlt
or
gs
iret
test
push
add
stos
stos
pop
jmp
push
and
push
bound
jmp
dec
dec
dec
jg
sub
push
in
sub
pop
dec
mov
(bad)
mov
ror
movs
and
neg
pop
(bad)
xchg
xchg
icebp
jbe
loopne
popa
inc
and
pop
fsqrt
nop
mov
mov
pop
arpl
out
pop
(bad)
jae
ins
or
aam
lock
hlt
lds
arpl
mov
mov
test
xor
shr
fdiv
loop
sub
fdiv
and
xor
mov
into
jl
div
adc
lock
jbe
in
add
push
test
fmul
mov
mov
push
jmp
and
push
mov
jno
stc
sub
add
imul
retf
mov
test
pop
xchg
mov
sbb
mov
jb
dec
js
repz
adc
xlat
and
(bad)
and
sbb
in
lock
cmp
push
nop
push
push
jne
add
loope
or
inc
pop
clc
mov
inc
mov
(bad)
and
ja
test
dec
sbb
adc
xchg
shl
cmps
xchg
imul
fdivr
aad
je
imul
cmp
pop
(bad)
std
scas
xor
enter
xchg
jp
mov
mul
jmp
hlt
cmp
adc
jecxz
xor
sub
pop
jo
add
xor
fild
dec
test
mov
sub
cs
jno
enter
pop
aaa
lods
mov
pop
cwde
bnd
add
xchg
and
gs
in
jmp
fmulp
mov
sbb
cmp
jns
test
les
sahf
bnd
xchg
mov
std
jne
sbb
dec
mov
cmp
xlat
ins
pop
xor
into
xchg
test
fisttp
ds
inc
or
aaa
jp
(bad)
or
and
push
jl
in
(bad)
daa
scas
and
std
(bad)
inc
sbb
stc
adc
in
out
mov
je
test
mov
sbb
pop
mov
movs
cli
icebp
(bad)
data16
sbb
shl
arpl
lahf
lods
retw
inc
add
test
jl
neg
jb
aas
mov
inc
ret
(bad)
int3
shl
jno
push
mov
rol
push
add
ja
cmp
or
and
mov
pusha
jno
and
loop
enter
push
ins
sub
stc
or
cld
fs
inc
(bad)
pop
ror
sti
ss
mov
mov
jmp
mov
sbb
lahf
push
xchg
push
mov
leave
popa
ins
sbb
dec
fwait
mov
sbb
pushf
lods
fmul
pop
mov
xor
aaa
pop
sar
inc
adc
stos
ret
int3
mov
in
cmp
popf
(bad)
scas
imul
cmp
not
ret
mov
outs
and
xchg
and
nop
mov
bnd
mov
shl
int3
sbb
xor
push
mov
jg
sub
mov
dec
aaa
dec
scas
inc
adc
lock
(bad)
xor
and
push
mov
test
mov
xchg
fisub
popf
dec
mov
xor
sbb
jo
and
add
pop
cmp
sub
call
iret
adc
lods
shl
ror
test
sub
add
out
pusha
dec
arpl
sbb
call
int
dec
aad
rcr
mov
xchg
add
inc
inc
sbb
leave
call
aaa
add
and
adc
jg
xor
js
fucomp
repnz
and
sbb
pop
call
add
adc
stos
cmps
lock
mov
ret
(bad)
xchg
mov
inc
shr
cdq
dec
retf
(bad)
inc
lods
add
in
test
fwait
dec
into
jg
cmp
push
inc
rep
les
pop
xchg
inc
movs
push
lods
adc
imul
xchg
cli
dec
jmp
add
loope
sub
std
inc
in
imul
(bad)
(bad)
ror
ret
mov
lea
outs
dec
xor
cmp
sub
sub
jmp
leave
push
out
dec
gs
push
jecxz
mov
fadd
mov
push
scas
push
jne
pop
mov
cmc
pop
jb
and
bound
fcomp
leave
(bad)
push
pusha
dec
push
mov
xchg
mov
out
clc
cmps
and
cmc
fsubr
nop
jb
inc
sub
and
(bad)
arpl
mov
ret
(bad)
jle
inc
mov
sub
int
sub
in
push
add
sbb
fnstcw
rol
push
mov
mov
(bad)
rcr
fdivr
push
lock
xor
repz
add
call
mov
or
sbb
in
out
ja
mov
shl
imul
xor
es
push
daa
pushf
jns
jecxz
or
fist
xor
les
xor
dec
adc
sub
clc
or
in
ja
jns
cmp
out
movs
movs
outs
jnp
fs
bound
fs
repz
test
add
bound
arpl
push
cli
loope
mov
pop
sbb
cs
int3
jle
cmp
pop
sbb
sub
cmp
push
mov
sbb
push
cmp
sbb
int3
out
fmul
inc
inc
adc
jge
sbb
inc
sbb
sbb
mov
and
adc
out
aad
dec
cmp
mov
add
lahf
xor
popa
sub
jmp
xchg
cmc
cmp
into
ins
jmp
fist
scas
mov
sub
adc
sbb
dec
pop
xor
sub
xrelease
mov
dec
aam
imul
jmp
lahf
pusha
mov
addr16
inc
dec
sub
arpl
sub
(bad)
cmps
push
test
iret
pop
lock
dec
mov
sti
mov
into
pop
fsubr
mov
add
(bad)
pop
enter
pop
rol
loope
jle
and
mov
dec
sbb
xor
push
xor
cs
arpl
stos
jae
aad
xchg
cli
mov
ins
retf
loope
xor
cmp
test
shl
push
mov
shr
mov
fmul
cwde
pop
mov
cli
pop
clc
mov
xor
or
add
jno
test
sub
jo
aam
sub
dec
sti
xor
push
mov
cmp
mov
sbb
dec
and
enter
or
and
retf
pop
hlt
popf
sub
xor
out
sub
push
cmp
sub
ins
push
out
lds
fisttp
mov
fwait
out
je
aam
imul
xchg
sub
xchg
out
xchg
push
out
icebp
pusha
dec
movs
mov
cwde
fsub
imul
jecxz
test
push
stos
sbb
add
rcl
inc
and
nop
jmp
add
xchg
mov
out
je
movs
movs
jno
data16
data16
cmp
in
pusha
sub
ret
cmp
push
adc
bound
add
or
add
add
out
jmp
add
dec
loop
pusha
inc
mov
pop
lds
les
arpl
cmps
sar
loopne
mov
add
stos
add
or
cld
fwait
mov
dec
or
push
gs
aad
mov
rcr
push
out
dec
dec
nop
std
adc
mov
jne
adc
pop
pop
pop
nop
sub
pusha
push
enter
mov
jb
dec
sbb
nop
adc
stos
cld
jo
add
scas
movs
aad
xchg
imul
dec
sti
mov
retf
sbb
push
cmp
mov
or
shl
jmp
clc
aam
mov
adc
and
sar
inc
ja
sbb
cld
enter
jle
dec
add
jno
fistp
ja
pop
enter
xlat
repz
sar
sti
or
cmps
dec
pop
mov
or
mov
aas
or
mov
hlt
inc
dec
jle
xor
xor
xchg
data16
cmps
(bad)
fist
imul
xlat
aaa
not
and
dec
or
(bad)
xor
stos
sbb
retf
ss
pop
femms
inc
cmp
adc
mov
xchg
dec
outs
inc
stc
dec
push
xchg
icebp
or
push
sbb
adc
jg
clc
push
test
movs
aaa
xor
inc
or
popf
sub
outs
repz
lea
mov
lock
fisub
jge
retf
mov
out
(bad)
rcr
mov
call
fmul
mov
xchg
or
or
mov
ret
jns
cmps
fucom
xchg
outs
(bad)
stc
(bad)
clc
push
mov
adc
repz
xchg
add
dec
rcr
xor
lock
lods
fiadd
mov
repz
int3
jae
mul
jmp
out
mov
xlat
and
das
jbe
push
cmp
push
and
or
imul
test
das
je
mov
sub
jb
fcomp
test
pop
dec
jnp
test
rcr
xchg
enter
cmps
xor
(bad)
lods
cli
ficom
test
iret
jbe
les
push
cmp
mov
lods
push
(bad)
aam
ins
pushf
push
loope
call
jno
pop
scas
push
test
dec
loop
retf
arpl
sahf
fwait
xor
dec
cdq
lods
mov
loop
push
add
pop
mov
dec
or
aaa
dec
mov
stos
rcr
cdq
sbb
mov
pop
pop
shl
retf
out
es
sbb
jno
push
arpl
or
lahf
inc
dec
jb
div
inc
pop
dec
cmp
jmp
jl
pop
mov
mov
add
repz
fidiv
mov
nop
dec
shl
ret
adc
push
push
sub
mov
pop
mov
jo
imul
push
sub
xor
or
and
in
mov
imul
adc
add
out
scas
or
mov
mov
xchg
es
push
pop
movs
leave
mov
xchg
je
cmp
sbb
aas
xchg
mov
outs
clc
mov
cmp
pop
jno
xchg
stc
mov
push
test
and
inc
sub
outs
jo
inc
mov
dec
lea
pop
cmp
xor
fs
mov
add
adc
adc
adc
scas
push
jecxz
xchg
out
cwde
push
add
cs
aas
fs
push
jmp
jge
xchg
mov
jl
mov
adc
daa
fldlg2
push
xlat
jne
mov
bound
ss
outs
jbe
cld
cli
inc
mov
pusha
out
pusha
and
jb
push
dec
sbb
fsub
dec
dec
cmp
loope
addr16
cmc
mov
and
test
mov
enter
mov
scas
shr
or
mov
hlt
mov
inc
sub
cs
pusha
das
ret
push
xor
stos
xchg
dec
add
(bad)
js
out
mov
sti
mov
add
xor
xchg
(bad)
mov
fnstenv
aam
mov
cld
int3
push
inc
mov
mov
mov
and
fiadd
fsubr
fistp
mov
xchg
or
je
mov
push
jo
cmps
aas
cmp
shl
dec
loope
arpl
call
cli
push
ret
xchg
fisub
sbb
stos
add
and
repnz
push
xor
mov
int
xor
call
push
repnz
inc
xchg
jmp
les
aas
imul
aas
or
mov
pop
cmp
sbb
mov
mov
out
cmp
push
movs
(bad)
pop
sub
add
jmp
pop
repz
fucom
dec
out
xchg
cli
jo
lods
cmc
xor
dec
inc
xor
loop
jne
xchg
adc
pop
(bad)
fdivr
adc
mov
or
cli
fwait
push
xchg
mov
mov
call
or
test
enter
push
jbe
fist
xchg
movs
les
(bad)
popf
cld
xor
data16
ror
and
(bad)
fdivr
push
ins
lahf
repnz
loope
or
cmps
adc
shr
pop
xor
cli
mov
push
dec
aad
out
sbb
xchg
movs
retf
mov
jp
mov
xchg
add
or
cmps
stos
xchg
jae
ja
or
nop
repz
(bad)
shl
lods
sar
pop
repz
lds
sti
mov
setb
jns
ror
ja
adc
cli
sub
jae
pop
sbb
loope
cmovg
mov
(bad)
push
js
jno
pop
data16
pop
or
sub
(bad)
movs
push
mov
mov
sbb
sub
loop
cmp
rcr
mov
hlt
mov
pushf
stos
aam
stos
mov
mov
aaa
ret
rol
test
fdiv
ficomp
outs
sbb
ja
xchg
pop
mov
idiv
push
(bad)
sbb
cmp
mov
dec
mov
jge
mov
cwde
or
pushf
xor
mov
loope
scas
push
cdq
or
jp
loopne
in
enter
aas
jge
je
ins
adc
imul
push
and
adc
push
repnz
xchg
or
and
push
sbb
mov
sub
icebp
jecxz
pop
mov
ds
mov
je
std
push
es
pushf
jae
pop
std
fstp
mov
xor
outs
js
dec
int3
shl
fiadd
pop
ds
cdq
dec
sub
sbb
xchg
push
and
xchg
in
loop
sbb
retf
or
leave
std
loope
lods
loop
adc
pop
jp
inc
idiv
jecxz
stc
addr16
sbb
xlat
popf
push
mov
lahf
pop
cmp
or
out
cwde
dec
inc
in
push
cmp
sbb
dec
aam
inc
cmp
jp
mov
fdiv
cs
ficomp
add
je
adc
cmp
adc
repnz
dec
xor
test
stos
sub
retf
xchg
adc
add
cmp
mov
or
(bad)
xchg
data16
pop
(bad)
xor
xlat
mov
pop
(bad)
fadd
cmps
fadd
and
cmp
or
mov
jecxz
ins
add
sub
test
pop
icebp
cwde
jge
sub
sub
or
pop
add
jmp
retf
mov
leave
stos
mov
(bad)
sbb
ins
cmp
sbb
test
out
popf
lock
cmp
mov
or
adc
scas
ja
std
shl
xchg
push
mov
mov
(bad)
adc
xchg
xchg
enter
jecxz
sub
mov
out
aam
and
lock
aam
ficom
fdivr
leave
mov
jo
mov
xchg
(bad)
dec
jp
shl
outs
ds
in
stc
jmp
or
retf
sbb
ret
ret
or
dec
inc
pop
mov
aam
lods
and
mov
outs
test
cmp
sub
gs
mov
jecxz
cmp
xchg
jo
enter
xchg
hlt
aas
adc
stos
and
fisubr
repnz
sub
out
call
jmp
loopne
fwait
(bad)
push
dec
rcr
jg
ja
stos
mov
mov
or
jg
sbb
jae
push
pop
jne
ja
mov
(bad)
dec
jae
mov
call
shl
rol
or
xor
pop
xchg
push
(bad)
and
es
push
mov
movs
pop
push
imul
and
call
lahf
mov
push
jmp
ss
push
jecxz
scas
pop
xor
adc
xchg
in
adc
out
jmp
loop
sti
xchg
pop
cmp
sar
pop
mov
xchg
dec
or
dec
in
mov
push
dec
sbb
(bad)
push
in
xor
js
pusha
pop
fidiv
cmc
jnp
test
std
call
mov
dec
push
xchg
xlat
leave
mov
icebp
adc
call
fstp
retf
xchg
add
xchg
pop
pop
(bad)
je
test
xlat
push
mov
lea
test
inc
bndstx
sbb
in
cmp
mov
mov
inc
movs
cmp
lods
xor
push
iret
xor
and
scas
lea
mov
pop
jecxz
or
mov
(bad)
jle
and
(bad)
jne
dec
push
fistp
js
cmp
movs
xor
(bad)
lods
(bad)
call
sub
sbb
scas
dec
test
push
sbb
mov
popf
or
inc
lods
adc
mov
pop
mov
add
call
and
and
rcr
rcl
std
xor
in
ret
rol
inc
adc
xor
(bad)
cmp
sti
xchg
fwait
ret
xor
shl
dec
cld
jle
ds
dec
rep
push
(bad)
add
cwde
and
sbb
push
shr
(bad)
cmc
into
ja
jmp
mul
idiv
scas
int
dec
ret
ins
mov
dec
xchg
mov
inc
lahf
mov
int
outs
sbb
dec
fcomp
xor
xor
lds
and
pop
gs
mov
repnz
push
push
add
cmp
loopne
retf
mov
bound
pop
adc
fs
jnp
enter
lods
or
js
mov
xor
push
arpl
mov
mov
(bad)
lea
fwait
icebp
jbe
(bad)
cli
enter
ficomp
daa
jmp
call
mov
clc
cmp
and
call
rol
add
fcomp
jae
jmp
push
jecxz
pop
icebp
xchg
pop
xor
push
pop
pop
(bad)
mov
add
cmp
jge
sub
stc
in
jecxz
jne
in
lods
hlt
sbb
pop
fisttp
add
push
cmp
and
mov
out
xor
mov
dec
jne
jae
fisttp
push
ins
call
stos
mov
mov
fstp
ss
sti
adc
(bad)
xchg
xchg
out
ja
jae
(bad)
push
cmps
jecxz
mov
add
bnd
popf
or
xor
sub
data16
dec
push
aaa
mov
mov
pop
dec
mov
xlat
inc
jo
adc
dec
pop
scas
push
test
adc
jmp
data16
dec
cmp
mov
(bad)
push
pop
repnz
mov
add
repnz
(bad)
pop
cmp
dec
das
lahf
cmp
mov
imul
push
rcr
push
pop
pusha
mov
push
shl
pusha
loop
mov
outs
int
dec
mov
call
xor
mov
mov
jg
das
idiv
or
inc
sbb
test
lods
add
mov
cmp
leave
mov
xchg
test
lods
idiv
aas
xchg
xchg
jo
rcr
daa
add
and
call
add
jmp
stos
mov
sub
mov
pushf
jmp
hlt
sbb
in
add
in
cld
jmp
std
inc
mov
jecxz
rcr
dec
clc
pop
mov
and
adc
(bad)
push
cdq
mov
not
dec
pop
rol
add
fmul
das
or
pop
cmp
xchg
mov
or
in
xchg
or
jmp
aaa
(bad)
out
fmul
es
sub
jg
or
jae
jl
movs
or
mov
cmps
(bad)
imul
xor
cmps
call
inc
call
cmp
mov
int
jnp
popf
call
adc
ret
or
(bad)
and
int3
xchg
out
xlat
or
inc
and
ss
push
std
repz
push
into
jge
inc
enter
imul
pop
repz
adc
jne
div
or
xchg
xchg
xchg
pop
fild
sub
out
add
pop
mov
repnz
sub
std
jmp
sub
cmp
dec
cmps
fstp
ret
repz
sbb
call
pop
sbb
dec
jae
je
int
je
add
popa
mov
aam
shl
adc
out
loope
mov
push
or
dec
cmp
out
jmp
daa
dec
sbb
mov
xchg
cwde
(bad)
cmc
sbb
cld
jmp
call
jmp
ret
stc
rol
jbe
add
test
shr
xor
jns
pop
jae
push
shl
ins
jl
xor
push
(bad)
jge
in
nop
shl
cmp
sar
jl
int3
inc
cmp
add
sahf
jae
sbb
das
jmp
or
xchg
cwde
jno
fild
jmp
push
and
xchg
in
mov
or
push
pop
push
call
ficomp
adc
enter
adc
sahf
and
call
dec
std
xchg
xor
dec
inc
mov
xchg
std
or
jmp
aam
xor
jle
call
or
in
(bad)
mov
fiadd
push
dec
ror
ja
lock
imul
retf
push
mov
(bad)
das
js
jmp
es
imul
sti
xchg
and
test
mov
or
sub
movs
push
xor
(bad)
pop
and
test
push
cmps
mov
out
repnz
imul
mov
mov
das
mov
push
push
clc
or
dec
sub
dec
bound
xchg
movs
xor
lahf
xchg
leave
and
jb
push
outs
cmp
ret
adc
rol
xor
and
ss
arpl
bound
or
mov
jbe
sub
cmp
fsubr
pop
retf
inc
push
je
outs
push
or
jae
inc
aaa
cmc
(bad)
das
mov
scas
jp
add
(bad)
push
push
scas
pop
pop
rol
iret
test
dec
inc
pop
xchg
ss
test
mov
push
add
push
mov
push
mov
popf
frstor
int
fmul
scas
je
push
int3
(bad)
les
or
mov
jns
push
lahf
das
sar
pop
sbb
jnp
push
inc
xor
and
xlat
or
mov
jge
scas
mov
fadd
mov
push
mov
ror
test
and
out
je
stos
lahf
pop
xchg
lods
std
sahf
pop
fmul
xor
push
push
stc
lods
aad
lahf
push
sub
imul
and
mov
mov
icebp
data16
aas
push
mov
adc
retf
mov
es
jle
jecxz
arpl
mov
arpl
ds
adc
sub
pushf
inc
add
xor
xchg
gs
jno
pop
rcpps
stos
imul
sub
add
sbb
fcomp
and
inc
lds
in
xchg
and
aad
push
push
adc
cmp
adc
adc
loope
jae
sub
add
outs
jecxz
pop
ds
popf
mov
cmp
sub
mov
and
test
mov
mov
add
test
adc
push
push
inc
and
gs
xchg
xor
sar
jae
or
pop
cli
jne
call
xlat
mov
cli
push
xor
mov
push
aad
dec
arpl
xor
sbb
fcomp
retf
and
test
add
sbb
(bad)
jmp
fsubr
add
popa
pop
xor
movs
iret
pop
xor
sti
mov
mov
sahf
jmp
jl
int
retf
ins
pop
sbb
inc
xor
jl
xchg
in
mov
jecxz
cli
push
dec
shl
or
cli
outs
mov
sub
fs
sub
mov
retf
dec
xor
adc
xor
not
test
and
dec
push
inc
and
xor
test
fdivr
add
dec
jnp
in
pop
arpl
adc
xor
and
test
outs
mov
xor
retf
lods
jl
add
cmp
inc
into
sbb
xor
test
nop
cmp
mov
fst
fisub
dec
sbb
pop
out
fld
push
cmc
mov
div
out
or
(bad)
cld
das
inc
xchg
nop
jo
ret
or
push
in
adc
js
or
inc
dec
mov
imul
add
daa
ss
ror
ss
jmp
fs
sbb
adc
lods
jmp
fnstenv
jmp
xor
stos
inc
sub
cmp
xchg
adc
add
fst
xor
fmul
out
es
sub
inc
mov
cmp
jmp
and
sub
mov
mov
cdq
ins
call
cmp
sbb
(bad)
ror
mov
adc
ret
pop
xchg
and
pop
cmp
hlt
cs
inc
mov
out
not
shl
cld
loopne
jmp
fst
adc
xor
sub
add
and
sub
gs
into
pop
xchg
ror
inc
lea
dec
cmps
test
into
xor
xchg
inc
xor
sbb
je
cmp
add
call
movs
sub
test
shl
sbb
ss
fld
out
xchg
xchg
test
inc
dec
ror
mov
adc
xor
movs
push
cmc
and
sub
mov
cmc
push
je
outs
push
fild
call
in
push
jnp
leave
fdiv
test
cmp
jp
loope
pop
sbb
lods
sbb
shl
loopne
dec
push
add
ss
xchg
stc
icebp
adc
mov
xchg
xchg
and
enter
or
push
jb
mov
jecxz
xor
fcmovnb
lods
jp
pusha
enter
and
and
js
rol
cli
sub
ret
xor
lods
mov
aaa
test
(bad)
aad
cmp
fmul
pushw
aad
sbb
adc
dec
mov
jle
fwait
jno
sbb
test
in
imul
movs
outs
ret
dec
push
cli
push
pop
dec
aam
xchg
jae
pop
in
fucom
lods
or
das
jecxz
cli
jbe
adc
pop
inc
lock
aam
dec
push
jns
xor
aad
push
push
aam
scas
xchg
ins
add
xor
fdivr
iret
out
xchg
lds
and
movd
xchg
jle
push
xchg
test
xor
hlt
jp
scas
xor
(bad)
cmc
shl
fstp
xchg
in
retf
sub
ss
scas
inc
icebp
aam
jg
sbb
test
fsub
in
hlt
in
lods
fnstenv
(bad)
cmp
out
pop
fwait
jmp
mov
fwait
pop
ss
daa
push
les
in
sbb
cwde
pop
js
cli
pop
and
mov
test
push
(bad)
mov
cmps
int3
lahf
popa
adc
in
into
or
jns
loope
mov
xor
xchg
push
call
pop
pop
je
imul
jae
fnclex
mov
out
stos
lahf
out
xchg
sub
std
xor
fsubr
sbb
test
scas
xchg
scas
nop
inc
push
jl
push
xchg
repnz
mov
dec
jns
aam
int
ja
push
fcmovu
aaa
icebp
mov
es
in
nop
fimul
outs
xchg
xchg
mov
aas
arpl
popf
sbb
and
cmp
gs
mov
mov
inc
pop
loopne
loopne
jg
xor
adc
sbb
fcmovbe
push
adc
sbb
ret
fs
jmp
aam
pop
adc
pop
sar
cmp
stos
sub
xchg
xor
xor
cmovle
push
mov
loop
push
movs
addr16
and
sbb
not
add
sub
xchg
mov
rep
jp
jnp
and
aam
and
ret
enter
shl
adc
(bad)
into
jg
cmc
div
(bad)
jmp
dec
push
cmp
retf
xor
movs
ss
inc
mov
shr
cmp
pop
cmp
inc
xchg
dec
mov
xchg
pop
or
mov
loop
int3
and
hlt
cmp
call
lods
sbb
fwait
icebp
fdivr
hlt
push
push
mov
and
mov
mov
xor
pop
cmp
fisub
cmp
das
inc
sub
sub
inc
mov
nop
cmp
rcl
dec
mov
movs
out
adc
mov
ret
dec
movs
mov
or
add
mov
ins
jno
movs
inc
cdq
mov
sbb
js
push
or
ins
adc
pusha
hlt
jbe
movntq
out
jno
or
xor
pop
xor
pop
das
out
inc
mov
arpl
sub
xchg
add
jmp
pop
std
jl
dec
adc
pop
push
mov
movs
inc
mov
add
push
outs
scas
ret
push
mov
lock
in
ret
sbb
sub
fidivr
loope
push
out
repnz
popf
clc
pop
repz
in
adc
loop
mov
rcr
inc
gs
push
ins
cmp
fidivr
cmp
pop
shl
repz
jge
xor
movs
jnp
enter
mov
push
dec
test
jae
pop
in
ffreep
lods
jmp
mov
add
dec
push
sub
mov
scas
push
nop
addr16
call
jmp
push
xchg
fdivrp
cmp
sub
sub
push
sbb
sub
inc
jmp
retf
push
jae
jl
mov
cmp
scas
jp
stos
outs
in
and
jge
pop
jno
test
int
add
test
cmp
clc
push
mov
cmp
cmp
js
or
or
loop
mov
cmp
jns
add
clc
mov
neg
sbb
push
aad
inc
push
xchg
push
fwait
jg
mov
bound
(bad)
sub
xchg
(bad)
es
gs
jl
ins
pop
(bad)
retf
jne
cmc
cli
or
outs
rcr
shl
pop
dec
fs
movs
fimul
push
xor
ins
inc
inc
jecxz
cs
cmps
int3
and
imul
lds
or
pop
test
adc
pushf
lahf
in
mov
fucomip
dec
gs
sti
fist
mov
test
pop
inc
jae
popa
mov
rcr
jecxz
mov
push
adc
shl
xchg
test
jge
dec
pop
addr16
sub
jnp
adc
popf
inc
cmp
mov
js
adc
fild
mov
and
or
ror
mov
jns
add
fs
cmp
imul
pushf
movs
push
or
scas
fdiv
add
lea
dec
jne
mov
(bad)
dec
icebp
pop
in
enter
int3
daa
sbb
pop
std
rcl
lods
add
push
loopne
mov
adc
xor
mov
jg
jle
inc
aas
sub
and
xor
not
inc
xchg
inc
mov
ds
push
pop
cmp
call
mov
pop
dec
out
or
xor
inc
cmps
pusha
jns
lock
jp
or
mov
or
xchg
cmc
cmc
fimul
or
pop
and
mov
test
sbb
mov
cmp
out
mov
mov
mov
imul
in
stos
jns
lahf
outs
xor
sbb
cmp
inc
out
idiv
inc
nop
push
xor
xor
xchg
pop
rcl
cmp
in
push
cmp
push
lea
int3
jecxz
(bad)
(bad)
cs
mov
out
xchg
mov
stos
dec
dec
sub
or
(bad)
ror
add
add
fmul
dec
lea
xor
loopne
adc
jb
adc
mov
sbb
mov
stos
scas
mov
lods
in
imul
call
(bad)
xor
pop
lock
or
dec
inc
hlt
push
push
cmps
(bad)
ins
pushf
test
clc
lods
not
and
je
fisub
mov
cmp
aas
imul
stc
add
sbb
sbb
dec
pop
jle
adc
adc
xor
sub
mov
and
sub
push
mov
cmps
mov
mov
jge
icebp
or
sbb
(bad)
ds
jne
adc
movs
mov
out
das
es
mov
sbb
mov
ds
aam
cwde
pushf
sbb
xlat
or
mov
mov
mov
cmp
sti
pop
add
in
jecxz
adc
push
mov
nop
pop
(bad)
xor
aam
lods
dec
cmp
and
lods
dec
inc
out
out
stos
push
lods
(bad)
xchg
push
xor
hlt
and
xchg
out
movs
cmp
or
push
jb
or
sub
aad
lea
adc
push
sbb
rcl
idiv
test
xlat
test
mov
popa
sti
jae
xchg
pop
xchg
jnp
add
gs
out
push
(bad)
fldenv
ss
xchg
mov
jo
xor
xlat
enter
imul
xor
movs
fld
or
sbb
xor
cmp
xor
(bad)
mov
call
pop
retf
mov
inc
jbe
push
imul
add
dec
mov
cmp
pop
pop
pop
adc
stc
rcl
ficom
add
add
stos
test
xchg
xor
add
call
in
pop
popf
push
(bad)
movs
push
(bad)
lahf
xor
jne
pop
sub
repz
loopne
stc
inc
imul
scas
test
adc
push
push
enter
retf
mov
mov
add
and
xchg
scas
pop
xchg
jle
ror
in
pop
mov
mov
mov
inc
push
aad
lods
bound
jae
(bad)
shl
outs
adc
push
lea
jmp
enter
movs
push
je
cmp
add
mov
sar
mov
xchg
imul
std
push
test
pop
gs
pushfw
(bad)
or
cmc
pop
inc
sub
cli
push
enter
stos
sbb
xlat
lea
inc
outs
mov
adc
mov
mov
(bad)
es
cmps
into
adc
sbb
std
ret
cwde
fwait
push
sub
push
push
clc
dec
mov
(bad)
jl
adc
cmp
test
movs
cmp
test
dec
icebp
mov
mov
lahf
dec
das
retf
cmps
xchg
mov
or
pop
stos
(bad)
and
pop
shr
out
adc
sti
sahf
in
lahf
sahf
test
and
stos
inc
mov
outs
inc
test
add
lahf
adc
imul
or
sbb
push
jecxz
mov
sbb
mov
aad
adc
or
sbb
adc
retf
inc
in
and
mov
mov
jmp
sbb
test
cmp
sahf
mov
inc
sbb
adc
mov
jns
ror
push
mov
scas
aaa
xor
adc
xor
sbb
ret
pop
sub
push
or
jmp
cmp
stos
cmp
xor
jmp
mov
loope
add
iret
cli
ds
cmps
push
pop
sbb
jb
inc
icebp
repnz
clc
mov
xor
in
xchg
out
pop
shl
nop
push
sub
outs
xchg
in
nop
ret
leave
mov
sub
popa
or
cmp
ds
scas
out
stos
cmps
scas
call
push
icebp
loop
push
add
adc
inc
xor
lods
jne
test
pop
(bad)
cs
lock
aad
mov
and
jmp
jno
ror
mov
gs
or
out
mov
xor
in
popf
fstp
inc
cs
or
mov
xchg
push
sub
out
jecxz
or
mov
and
arpl
(bad)
out
(bad)
and
xchg
fidiv
and
add
jns
push
xchg
cs
push
pop
adc
mov
inc
lock
mov
xchg
sbb
imul
test
test
jp
mov
xchg
xchg
mov
mov
shl
push
sbb
jecxz
jo
mov
mov
adc
sbb
mov
ss
jno
sar
adc
in
outs
int3
ds
bound
dec
call
jne
pop
je
cmp
jo
(bad)
jmp
add
cmp
pop
pusha
sbb
lahf
sub
or
or
dec
ffree
out
push
sub
stc
or
test
fld
outs
push
ret
jmp
(bad)
out
pop
movs
outs
sub
add
sbb
sub
jo
sbb
outs
aaa
push
or
cmp
in
inc
in
xor
mov
(bad)
nop
jg
lods
jmp
outs
cli
mov
add
leave
add
adc
mov
dec
(bad)
mov
lock
xchg
inc
dec
dec
mov
iret
jmp
push
out
sar
push
gs
repz
dec
fmul
aam
mov
fmul
rcr
jbe
adc
or
mov
push
cmp
inc
cmp
push
aaa
js
mov
mov
xor
xor
jp
fucom
jecxz
ds
add
(bad)
imul
neg
inc
adc
sub
adc
or
inc
push
stc
pusha
sar
lods
cmc
push
add
out
adc
in
push
(bad)
std
mov
xchg
rol
dec
fmulp
dec
or
les
fs
jnp
push
imul
xchg
pop
push
outs
xchg
inc
sub
dec
aam
ins
arpl
shl
cld
in
jo
popf
xchg
add
cmp
mov
sbb
mov
out
jmp
stos
mov
jnp
xor
rol
gs
or
mov
adc
and
dec
push
pop
add
cmp
into
push
out
mov
ins
(bad)
jae
and
ds
test
fimul
push
sbb
mov
iret
sub
sti
add
inc
in
sbb
adc
addr16
aaa
or
mov
ror
inc
sub
and
and
leave
mov
repz
repz
inc
mov
in
ffree
enter
jl
aaa
lods
push
repnz
outs
and
xor
cmp
add
dec
sbb
xor
mov
les
adc
loope
mov
cwde
xor
out
add
pop
dec
retf
loope
movs
aad
(bad)
cmp
pop
pop
jae
dec
loop
in
enter
adc
jae
mov
test
jns
mov
push
pop
fsub
cli
pusha
movs
xchg
pop
or
mov
add
dec
sbb
sbb
xor
xlat
adc
mov
call
cmp
sbb
and
inc
dec
imul
sbb
xor
jmp
xchg
jno
and
and
std
push
xchg
stos
rcl
lock
rcl
adc
xchg
mov
fst
cmp
jne
icebp
stos
push
std
jno
(bad)
sub
out
jmp
nop
(bad)
into
(bad)
dec
call
pop
cmp
xor
(bad)
rcr
popf
outs
mov
adc
das
mov
mov
inc
bound
sub
mov
nop
shl
arpl
xor
sub
xlat
xchg
sub
dec
cmp
adc
mov
clc
mov
hlt
jg
arpl
xchg
test
and
xchg
imul
lock
jecxz
dec
imul
mov
out
fild
pusha
mov
cwde
(bad)
inc
hlt
dec
sbb
push
pusha
mov
cwde
pop
push
(bad)
dec
mov
icebp
daa
pop
jecxz
(bad)
mov
cmps
jnp
mov
and
jp
jo
cld
mov
add
stos
mov
mov
repz
fistp
jg
enter
in
mov
cmps
sahf
into
stos
pop
mov
int
mov
outs
(bad)
xchg
and
je
pop
jp
outs
ss
outs
mov
push
cld
mov
mov
xchg
or
adc
pop
cwde
and
dec
xchg
addr16
(bad)
sbb
dec
(bad)
cmp
or
xchg
sub
in
(bad)
push
add
ins
imul
stos
dec
jge
shl
sbb
mov
hlt
cmp
imul
dec
fstp
lds
movs
pop
adc
jae
std
push
imul
cmc
sub
cmp
sbb
inc
loopne
rol
sbb
loopne
xchg
pop
ins
jo
pop
jge
fwait
sbb
imul
add
or
inc
retf
movs
dec
and
jmp
inc
sahf
sub
fwait
loope
stc
(bad)
sub
mov
mov
dec
daa
clc
jge
leave
pushf
inc
add
outs
push
sbb
es
sub
out
and
xchg
add
xor
and
inc
sbb
jmp
xchg
mov
mov
movs
int3
mov
hlt
loopne
inc
std
lock
daa
sbb
jl
enter
jne
pop
repnz
out
inc
mov
cmps
pop
sub
pop
sub
pop
xor
retf
jmp
xor
pop
add
mov
or
jae
(bad)
pushf
cmp
test
xor
gs
dec
jo
mov
icebp
mov
jge
xor
(bad)
das
hlt
scas
xchg
jno
jmp
inc
aad
cdq
lahf
and
daa
inc
sbb
jno
scas
xchg
mov
jle
idiv
sub
lock
and
call
adc
add
ja
mov
mov
add
mov
xor
or
rcr
adc
out
mov
sub
push
mov
stos
mov
jmp
sbb
ja
aam
scas
stos
pop
ins
xchg
shl
sbb
sbb
(bad)
sti
sub
imul
adc
adc
lea
movs
push
outs
scas
mul
neg
sbb
es
xor
jo
push
sbb
aas
add
int
and
sub
hlt
or
jbe
js
jp
pop
inc
stc
adc
push
shr
repnz
ret
mov
push
adc
pop
lods
retf
dec
add
fsubr
cmp
fsub
jnp
jge
pop
cmp
inc
add
cld
sub
mov
push
xchg
xor
sub
or
hlt
sub
js
push
arpl
mov
xor
jnp
bswap
call
push
aaa
pop
jl
jp
ret
mov
pop
getsec
mov
cld
jbe
outs
imul
and
add
aad
loopne
loope
sbb
enter
add
dec
adc
mov
dec
dec
clc
inc
test
aad
push
aaa
repz
sti
pop
dec
(bad)
and
adc
enter
aam
or
mov
out
cmp
sahf
sub
(bad)
mov
and
maskmovq
test
out
xor
or
inc
in
jb
ret
es
xchg
bound
mov
ffree
ret
mov
nop
in
js
es
xor
xchg
sbb
lods
popa
jl
add
gs
fdivr
add
push
fnstsw
cs
pop
add
and
pop
jbe
xchg
repnz
sar
ret
add
push
imul
pop
fsub
mov
sub
in
xchg
xlat
inc
cmc
fdiv
or
cmp
and
shl
es
int3
cmps
mov
push
ror
dec
xchg
pop
and
out
fldenv
mov
xchg
push
inc
cwde
imul
cmp
daa
outs
push
jo
dec
call
and
push
imul
jbe
scas
lods
xor
rol
pop
(bad)
sbb
(bad)
add
fcom
mov
nop
ds
add
push
cmp
sbb
inc
mov
lds
out
nop
add
or
int3
cmp
or
std
gs
shl
or
loopne
mov
fsubr
mov
xor
or
mov
out
imul
or
sbb
or
call
sub
sub
push
retf
test
es
bound
jnp
mov
std
mov
enter
mov
jns
pop
mov
lods
xchg
sbb
inc
pop
sbb
mov
enter
retf
in
pusha
push
iret
fs
add
xchg
xchg
xchg
rcl
fwait
cmc
jmp
mov
inc
stc
jle
jp
mov
adc
pop
retf
or
cld
xor
sbb
inc
mul
gs
jae
in
dec
call
adc
test
xor
lock
clc
sti
outs
pop
dec
cmp
jecxz
imul
mov
movs
imul
sahf
add
jnp
imul
dec
push
jae
out
mov
mov
call
mov
pop
inc
fstp
push
xor
je
(bad)
cmc
add
mov
aad
shl
mov
adc
and
ret
stc
mov
xor
in
test
ss
or
cmovae
imul
loope
std
fiadd
shl
push
outs
sub
jmp
mov
jb
jmp
dec
mov
jmp
mov
xchg
mov
or
pop
add
stc
pop
mov
popf
int3
pop
fiadd
xor
dec
and
jbe
test
stos
jmp
daa
cmps
ds
inc
test
test
fwait
arpl
mov
jb
cmps
jb
mov
leave
mov
sbb
mov
call
mov
cmp
push
stos
dec
popa
lahf
adc
cmp
pop
inc
fistp
pushf
jne
inc
nop
mov
inc
jp
xchg
xchg
jp
jno
mov
(bad)
xchg
in
ss
in
je
cmps
cmp
enter
xchg
mov
sub
arpl
stos
push
adc
shl
aad
ins
(bad)
repnz
fild
ja
xor
mov
mov
xchg
(bad)
mov
jne
push
lods
mov
imul
daa
lahf
add
push
and
push
aas
cld
push
sbb
mov
dec
mov
sbb
repz
adc
mov
xchg
mov
sub
cmp
ficomp
call
push
ror
out
imul
lods
xchg
jl
push
clc
inc
inc
add
dec
pop
in
frstor
ins
dec
std
fcmovbe
add
(bad)
out
pop
cs
mov
sub
xchg
ret
jecxz
popa
sub
push
stc
mov
or
sbb
test
sbb
inc
shl
pop
push
dec
push
push
jmp
call
out
dec
sub
and
sbb
adc
fnsave
test
adc
les
pop
lock
clc
push
mov
adc
rol
mov
pop
mov
stc
clc
push
and
inc
adc
or
mov
test
pushf
adc
popa
push
scas
push
dec
mov
inc
pop
gs
leave
xchg
dec
ret
pushf
stos
arpl
sub
or
push
pop
mov
mov
xchg
adc
dec
mov
inc
rcr
pop
repnz
scas
or
inc
jge
xchg
and
std
and
add
mov
xchg
lods
sti
mov
cld
sbb
fucom
sub
pop
mov
cmp
mov
dec
or
pop
inc
cmp
outs
aaa
pop
or
push
mov
mov
cwde
push
hlt
push
dec
je
fcmovnb
mov
inc
xchg
cwd
call
cs
or
lds
out
mov
test
and
nop
mov
cmp
mov
(bad)
int3
pop
sub
adc
sbb
jae
dec
jae
ret
sbb
fwait
xor
fstp
imul
pop
xor
je
push
and
out
dec
in
loope
pop
add
cwde
sub
and
mov
stc
jb
sub
push
lock
lea
ss
lea
leave
rcr
or
(bad)
sub
or
sahf
dec
pop
test
push
mov
pop
jmp
in
ins
std
sub
rcl
add
fiadd
sti
imul
fist
pop
mov
aas
aaa
dec
sbb
leave
sbb
int3
push
mov
jae
movs
sbb
mov
and
je
(bad)
push
out
fsub
adc
push
mov
imul
xor
popa
retf
mov
int3
dec
pop
outs
repz
dec
(bad)
stc
pop
ins
cmp
push
mov
mov
inc
adc
ret
or
out
js
scas
cs
jno
fs
add
pop
mov
out
retf
dec
dec
dec
xchg
mov
clc
les
inc
dec
in
cwde
pop
arpl
push
pop
cmps
aam
xchg
mov
sub
ja
adc
movs
fcmovb
(bad)
lock
inc
push
push
sbb
xchg
push
ficomp
mov
dec
push
adc
cmp
popf
push
mov
movs
jae
scas
or
ret
bound
xchg
stos
mov
add
pop
mov
xchg
jns
out
add
test
xor
mov
mov
lds
repz
adc
and
sbb
sub
rcl
adc
ret
das
push
inc
inc
pusha
mov
(bad)
dec
xchg
xchg
and
jno
outs
dec
fisubr
or
int3
cmp
fiadd
jns
pusha
cli
fimul
(bad)
dec
sbb
push
jae
in
fimul
dec
push
call
xor
inc
mov
pop
jb
pop
mov
mov
retf
xor
les
(bad)
jge
sub
outs
pop
jl
and
mov
inc
cmp
outs
aam
mov
neg
sbb
xchg
daa
xchg
or
cmp
ror
mov
mov
inc
retf
rcr
mov
das
retf
pop
movs
sar
jns
push
fxam
sbb
cdq
or
xchg
sbb
call
aam
add
and
(bad)
mov
xchg
mov
(bad)
cmp
or
xchg
cmps
or
cwde
call
in
loope
stos
das
mov
inc
call
dec
cmp
sub
mov
lea
mov
ja
fwait
addr16
das
dec
idiv
fbstp
aam
and
sub
jecxz
in
int3
dec
out
loope
push
cmc
mov
nop
or
sbb
mov
jmp
pop
add
mov
jl
mov
jo
call
push
xchg
rcl
retf
test
dec
xlat
sbb
f2xm1
jne
out
dec
mov
mov
or
loop
repnz
xchg
push
in
jne
fimul
fiadd
(bad)
sti
and
xor
ja
mov
pusha
iret
dec
dec
test
or
int
inc
xor
or
test
dec
pop
pop
or
addr16
daa
lea
cmp
sub
popa
sub
mov
inc
and
movs
scas
inc
dec
mov
dec
dec
mov
aas
loope
dec
pop
imul
sbb
fwait
add
sub
or
lahf
pop
es
xchg
test
call
mov
ret
mov
add
into
scas
ficomp
in
jbe
cmps
and
ins
mov
push
mov
mov
jns
and
popf
mov
fnstenv
aaa
call
add
mov
sar
int
cmc
test
loopne
adc
fidivr
xchg
xchg
or
fadd
mov
cmp
or
mov
sbb
scas
sub
movs
dec
jbe
push
jnp
dec
dec
stos
test
mov
dec
inc
fxch
pop
scas
lods
fldcw
sbb
add
icebp
daa
ins
and
fcomp
cmp
jge
hlt
xor
outs
rcr
mov
jp
or
jno
pop
in
(bad)
aam
pop
dec
push
std
sbb
(bad)
mov
(bad)
jmp
mov
jp
mov
xchg
ret
pop
xor
js
dec
in
pushf
inc
cmps
test
mov
pop
mov
addr16
call
adc
mov
sahf
in
add
ins
dec
in
fcom
mov
clc
ins
xor
xor
push
out
jmp
inc
add
retf
sbb
rol
adc
lea
fnstenv
fstp
and
jmp
mov
push
cmps
adc
xchg
cs
push
aad
jae
mov
cld
push
cdq
cwde
ret
lea
daa
das
jg
jne
jle
sub
mov
push
mov
cmp
(bad)
das
hlt
int3
loop
aam
jnp
pop
xchg
xchg
and
inc
add
imul
les
test
in
shl
adc
inc
scas
jge
stos
mov
test
cmc
add
add
push
fild
add
pop
jmp
fld
(bad)
mov
cmp
stos
jmp
in
mov
jmp
pop
mov
arpl
call
jmp
mov
xchg
lods
cwde
xor
mov
or
pop
push
cdq
dec
lods
movs
sbb
mov
shl
jmp
daa
scas
mov
cmps
leave
test
xor
js
dec
in
das
mov
(bad)
shl
sub
out
add
icebp
push
add
xor
push
xchg
(bad)
sub
std
mov
add
add
in
jnp
movs
test
lds
call
adc
lahf
imul
xchg
or
mov
in
mov
cwde
push
push
xchg
push
std
bnd
rol
and
sub
int3
outs
retf
lds
pop
mov
imul
mov
imul
mov
push
adc
push
jb
or
call
pop
repnz
xor
jmp
gs
dec
pop
in
push
loop
and
push
cmps
call
push
sbb
sub
jge
dec
or
and
mov
pushf
or
pop
clc
and
mov
pop
jb
and
into
cld
das
fisubr
iret
les
or
xchg
xor
push
loopne
sub
and
loope
int3
das
and
cmc
scas
sub
sbb
jl
jl
cmp
stos
adc
sub
cmp
or
nop
imul
pop
bound
sbb
movs
jne
addr16
xchg
push
xchg
xchg
sbb
push
dec
addr16
arpl
and
adc
add
push
jmp
inc
lods
xor
inc
stos
sbb
push
lock
mov
not
cdq
addr16
push
or
std
pushf
dec
retf
fld
into
icebp
call
pop
call
lahf
ja
retf
push
fcmovb
shl
jl
retf
inc
mov
leave
xchg
cmp
shr
jns
jb
jns
shr
jge
fmulp
and
stc
jmp
in
nop
xchg
or
js
mov
fs
dec
xchg
mov
call
out
lods
gs
call
dec
mov
das
sbb
repz
xchg
(bad)
mov
jo
stc
dec
std
cwde
call
push
mov
lods
scas
push
dec
xchg
lock
scas
xor
ret
imul
clc
xchg
outs
movs
xchg
mov
cmps
cmc
aas
dec
mov
push
push
repnz
mov
dec
sbb
mov
xchg
cmps
cld
imul
inc
push
and
push
sbb
lock
sub
test
sti
fs
(bad)
add
mov
or
dec
mov
add
jecxz
loope
mov
jle
push
add
mov
mov
mov
ja
dec
movs
xchg
call
or
dec
xor
and
add
add
arpl
or
aas
xchg
jge
or
jmp
stos
sub
push
ret
push
out
(bad)
mov
les
(bad)
jbe
xchg
sbb
fdiv
fild
jnp
add
jae
sub
stos
pop
jmp
inc
sub
movs
movs
pushf
cmps
adc
mov
lods
mov
pop
cmp
int3
mov
mov
add
jle
sahf
data16
loope
inc
pop
inc
sbb
ins
stos
mov
add
adc
(bad)
jb
xor
loope
mov
call
inc
cwde
ins
stos
inc
in
push
sub
cmp
test
mov
and
xchg
call
jb
fs
stc
sahf
push
fs
std
sar
js
jmp
popa
test
aas
and
aam
scas
sub
inc
idiv
xor
aaa
jl
push
xor
xchg
repz
mov
in
out
dec
in
jecxz
and
into
cmps
in
retf
cmp
(bad)
and
push
sbb
scas
(bad)
popf
add
icebp
mov
pop
jp
mov
sbb
sub
jne
scas
xchg
sbb
imul
rcl
fdiv
push
and
(bad)
retf
xor
xchg
imul
or
sub
sub
pop
sti
std
dec
jb
cmps
push
jno
pusha
dec
inc
cmp
loope
lds
retf
shl
jp
xchg
xchg
movs
mov
cmp
inc
(bad)
aaa
mov
cmp
in
cld
xor
add
retf
daa
lods
scas
clc
or
imul
jl
cmp
fdiv
inc
jle
ss
adc
sbb
dec
xor
sbb
int3
xchg
ins
pop
imul
stos
in
iret
sbb
(bad)
cmp
aas
cmp
sbb
xchg
repnz
or
xchg
inc
sub
fwait
arpl
outs
cmp
dec
add
fs
lea
inc
xor
movs
push
pop
scas
icebp
into
jl
outs
pop
mov
pop
imul
mov
fcmovb
data16
xchg
xchg
scas
inc
je
enter
pop
mov
pusha
inc
mov
retf
ja
xchg
leave
(bad)
cmp
mov
lds
mov
les
mov
shl
push
fs
ds
push
mov
inc
add
push
jg
add
or
in
in
mov
mov
lods
sub
jo
or
or
arpl
das
lock
cdq
sbb
daa
pop
mov
lods
inc
ins
call
inc
push
jae
or
mov
sub
xchg
jae
mov
sub
mov
out
pushf
rol
inc
and
push
dec
cmp
ret
retf
sbb
fistp
mov
and
retf
mov
gs
mov
jge
jp
dec
cld
or
rcr
pop
loope
dec
xchg
mov
mov
add
push
pop
stc
jle
jae
sbb
push
cmp
sub
in
pop
inc
dec
mov
pop
jmp
inc
ja
int
add
mov
push
pop
arpl
ins
out
sbb
xchg
lods
mov
nop
movs
out
adc
fisttp
imul
xor
hlt
outs
inc
push
and
mov
int
scas
mov
bound
out
call
ss
lahf
jl
jle
mov
nop
cs
in
je
popa
mov
stc
sub
scas
dec
push
sub
cmp
addr16
push
adc
test
mov
repz
data16
xchg
das
push
mov
jmp
test
das
lods
mov
jmp
jl
xchg
push
xchg
out
mov
bound
sub
add
or
add
and
mul
mov
xor
xor
mov
mov
sub
sbb
and
jp
mov
or
or
dec
or
cwde
push
lods
xor
jns
sti
xor
sub
sub
(bad)
push
rol
jmp
push
sti
dec
push
fdivr
stos
test
retf
cmc
xchg
xor
rol
xchg
mov
call
mov
inc
iret
inc
nop
in
inc
jns
mov
and
mov
push
enter
adc
inc
out
iret
mov
add
in
jns
jno
cmp
std
pushf
daa
xchg
into
lds
repnz
jp
adc
sub
xchg
cmp
in
jmp
pusha
dec
xchg
fadd
or
dec
ins
push
xchg
dec
and
xchg
xchg
(bad)
rol
dec
jecxz
adc
or
(bad)
cmc
add
arpl
fiadd
bound
stc
xlat
pop
adc
mov
test
jp
mov
call
and
xor
push
out
dec
popf
sub
inc
xor
push
enter
movs
inc
stos
aam
adc
fbld
into
(bad)
imul
scas
mov
xchg
mov
cli
jo
sbb
out
cwde
mov
das
or
ins
sbb
sub
call
js
dec
pop
scas
push
adc
jmp
jl
xchg
(bad)
sub
scas
dec
or
sar
push
sub
xchg
mov
adc
jne
(bad)
pop
cli
daa
or
mov
pop
inc
sub
inc
lds
mov
sub
add
jmp
push
jge
aad
mov
mov
(bad)
out
(bad)
pop
movs
cmc
inc
(bad)
les
jbe
push
mov
lock
push
fyl2xp1
cmp
mov
ja
cld
retf
cmp
fwait
cmp
adc
repz
mov
mov
mov
sbb
fadd
mov
fdivp
das
and
xchg
xchg
dec
jb
cmp
ret
sbb
mov
lds
out
test
and
push
sbb
pusha
or
(bad)
cs
or
ret
fwait
lods
pop
xor
ins
rcr
sub
xchg
add
cmp
pop
out
ret
movs
nop
retf
mov
mov
(bad)
fs
mov
and
call
lods
pop
mov
ret
out
pop
in
dec
ss
(bad)
add
push
xchg
movs
cs
mov
popa
aaa
shl
dec
or
mov
add
mov
push
sbb
push
inc
xchg
mov
fdivr
jge
imul
dec
xor
xchg
mov
pop
xchg
cwde
or
in
xchg
jecxz
xlat
rep
sub
xchg
(bad)
movs
or
loopne
loop
out
div
jp
scas
movs
loope
jbe
and
cld
cmc
cmp
mov
xchg
jo
mov
mov
arpl
das
movs
lahf
aad
mov
in
xor
dec
add
cmp
or
call
jge
xor
ins
test
jns
jl
push
outs
pop
add
fist
(bad)
mov
repz
mov
cmps
push
data16
movs
mov
cmp
xchg
jnp
inc
xchg
aam
pusha
inc
push
mov
sti
cwde
jbe
jns
test
call
arpl
icebp
(bad)
shr
nop
mov
out
retf
stc
inc
pusha
jl
xor
sub
movs
enter
inc
pop
add
popf
ins
or
push
rcl
in
pusha
sub
dec
sbb
mov
retf
and
or
cmp
cmps
sub
ins
jmp
(bad)
in
push
inc
mov
inc
xchg
xchg
loop
sti
stos
or
shl
add
fwait
mov
mov
cmc
inc
sahf
jle
repnz
dec
cmps
mul
leave
inc
dec
push
std
pop
jne
cmps
mov
sub
xor
shr
clc
test
xchg
sbb
cwde
(bad)
loop
mov
fadd
adc
cld
sub
mov
or
icebp
or
nop
pop
push
mov
movs
pop
xor
js
gs
(bad)
aam
sbb
sub
add
scas
sub
lahf
mov
popf
push
cld
adc
or
fsubr
sahf
or
cmc
push
mov
or
imul
in
inc
(bad)
sub
aas
push
in
mov
scas
cmps
addr16
fbld
adc
iret
lea
int
push
leave
adc
jl
or
bound
fdivr
add
inc
neg
cs
add
push
pop
pop
jg
or
cmc
dec
shr
mov
or
push
fwait
xor
into
int3
lods
push
mov
jle
enter
test
jmp
inc
jg
div
sub
sub
out
and
popa
dec
imul
fidiv
jg
xchg
push
fnstsw
loop
xchg
jmp
inc
inc
ins
test
pop
(bad)
xor
gs
out
out
pop
add
std
sbb
adc
cmp
ret
dec
adc
add
out
lock
out
jb
dec
enter
lds
dec
dec
test
xor
add
xchg
mov
push
stc
sub
xchg
sbb
mov
push
and
sub
push
repz
icebp
out
ret
xor
or
scas
ficomp
push
inc
into
sub
(bad)
mov
int3
fistp
in
sub
sub
xor
leave
xchg
cmp
test
ds
fdivr
call
lds
xchg
adc
je
movs
cmp
adc
scas
cmp
scas
dec
inc
popa
in
cmp
nop
xor
mov
xchg
aam
xor
popa
xor
outs
sub
sahf
mov
int
cli
(bad)
push
hlt
pop
fwait
and
sbb
leave
push
mov
jl
and
xor
ins
xchg
add
or
jne
cmp
fisttp
jns
inc
mov
mov
mov
mov
jmp
movs
mov
icebp
faddp
fstp
adc
pop
cmp
test
stos
test
mov
stc
pop
lock
lods
mov
fdivr
(bad)
mov
fwait
movs
cmps
sbb
dec
mov
out
fst
push
xchg
repz
pop
aas
mov
cli
jno
xchg
mov
sbb
ror
push
pushf
push
in
add
pop
dec
ror
rcr
mov
fmul
cmps
xchg
(bad)
test
pop
pop
fsub
mov
test
sbb
sbb
jle
sbb
sbb
mov
cmp
lock
(bad)
fistp
movs
jnp
adc
push
or
rol
daa
vmwrite
add
xor
and
(bad)
xor
arpl
mov
(bad)
sub
pushf
jae
sub
adc
inc
inc
xor
cmp
sbb
mov
push
add
pop
mov
jne
hlt
hlt
cmp
jns
and
mov
and
nop
sbb
int3
mov
add
push
std
jecxz
xchg
(bad)
mov
jmp
xchg
ins
imul
or
cwde
sub
or
inc
xchg
sbb
sbb
jae
data16
gs
mov
sbb
mov
test
clc
mov
inc
imul
pop
mov
or
cmp
sbb
outs
xchg
ret
push
fstp
clc
call
xlat
mov
into
push
fiadd
pop
push
test
mov
js
fiadd
les
and
call
inc
dec
or
sbb
jl
outs
pop
dec
mov
out
sbb
sub
in
adc
ret
ds
jp
adc
inc
push
js
test
imul
mov
clc
push
gs
adc
clts
push
inc
mov
out
pop
push
int
retf
jg
sbb
sbb
add
ja
cwde
arpl
cvtps2pd
dec
mov
repnz
dec
adc
mov
aaa
fwait
in
enter
and
in
push
mov
jp
fidivr
add
push
mov
pop
in
sar
pop
cli
ret
imul
fld
or
sbb
mov
fistp
retf
adc
movs
sub
ficom
dec
aaa
cmps
lods
aam
mov
lahf
inc
jmp
retf
jne
jnp
(bad)
and
or
ret
retf
(bad)
inc
jno
push
jb
adc
icebp
and
mov
in
arpl
xlat
adc
loopne
jp
dec
push
dec
pop
test
(bad)
movs
adc
push
cs
and
and
retf
bound
(bad)
out
sahf
pop
ret
hlt
test
call
fidivr
jne
rcl
ja
fmul
push
jnp
push
rol
jg
xchg
fwait
cld
inc
(bad)
fsubr
fstp
call
mov
jg
pop
xchg
jmp
nop
xchg
popa
repz
ficomp
xlat
in
adc
mov
adc
xchg
cdq
jne
outs
cs
popf
prefetch
call
xor
popa
sti
mov
fucomp
dec
ret
push
into
lods
xchg
inc
imul
push
and
daa
jnp
jmp
mov
cmp
aaa
call
lahf
stos
pop
aam
ins
sahf
ds
aad
lods
les
mov
xchg
iret
push
or
push
mov
fdivrp
push
stos
push
aad
call
or
call
sub
push
cmps
jmp
xor
jle
retf
das
or
enter
and
pop
(bad)
mov
xchg
cdq
fcomp
push
ss
sub
aas
loop
xchg
mov
ss
in
and
call
enter
sti
cmp
inc
pop
call
adc
pop
dec
push
fcmovnb
rol
mov
mov
adc
ret
cs
sbb
aaa
cmp
jbe
adc
shr
inc
mov
pop
out
fistp
push
fsub
js
mov
cwde
mov
or
ret
pop
or
pop
(bad)
dec
mov
cmp
and
loope
sub
ins
mov
add
cmp
sbb
cmp
scas
cmovle
movs
call
cmpxchg
mov
(bad)
push
add
xor
ins
jo
lock
pop
in
cmp
add
push
add
pop
test
leave
pop
dec
inc
sub
cli
das
je
mov
std
and
dec
sbb
push
iret
ins
stos
stos
js
(bad)
repnz
jmp
cmps
adc
cmc
stos
xchg
dec
xchg
popa
sbb
loopne
push
mov
loopne
mov
aas
pop
leave
sub
add
loop
lds
fist
push
jns
push
push
jbe
inc
sub
jmp
cmp
sub
repnz
pop
pop
add
icebp
mov
mov
mov
dec
out
invd
ror
mov
fisubr
sbb
repz
mov
and
sub
sti
(bad)
cmp
pop
(bad)
retf
xlat
adc
pop
daa
dec
xor
sub
cmp
(bad)
xor
xstore-rng
cmps
inc
or
enter
inc
test
jle
fisub
xchg
cmp
mov
cmc
imul
pushf
xchg
cmps
adc
sub
imul
push
lds
test
stos
outs
add
leave
ja
jl
xor
test
or
add
das
cmp
cmp
mov
add
stos
mov
mov
daa
fldcw
gs
(bad)
mov
inc
adc
xchg
stc
sub
pop
pop
inc
add
push
jmp
xor
gs
pop
pop
add
inc
test
cwde
and
add
mov
dec
shl
cmps
ss
fimul
and
dec
ss
or
idiv
push
inc
daa
pop
scas
inc
pop
loopne
xor
retf
fisubr
fwait
dec
cmp
gs
sbb
xchg
jecxz
pop
ja
mov
xchg
sti
dec
jmp
xor
xchg
or
out
in
iret
call
jnp
hlt
cmps
scas
xor
pop
xor
pop
dec
rol
inc
inc
pop
repnz
in
sbb
push
push
push
xor
push
mov
add
outs
ss
xor
inc
into
mov
lds
ja
imul
jl
sub
xchg
or
les
mov
push
scas
push
stos
sti
adc
(bad)
bound
imul
push
dec
xlat
mov
data16
das
pop
sub
pop
jo
test
inc
or
push
mov
in
in
dec
es
mov
loopne
push
cwde
test
and
mov
or
adc
sbb
scas
sub
arpl
pop
pop
adc
fs
adc
(bad)
icebp
outs
fwait
stc
cmp
mov
push
aam
lock
mov
cwde
xchg
dec
loopne
sub
and
out
aam
scas
mov
mov
lods
imul
mov
mov
mov
unpckhps
mov
ror
movs
outs
cld
inc
ins
(bad)
or
je
push
leave
pop
mov
daa
cs
add
xchg
xchg
sbb
xor
test
push
jp
stc
xor
dec
xchg
xor
push
xor
xor
jp
xchg
push
pop
mov
imul
or
call
adc
mov
and
jae
mov
es
ret
adc
mov
fdiv
rol
xor
lock
mov
cmp
out
dec
jmp
pop
xchg
retf
xor
repz
cli
sahf
lds
lds
push
not
aaa
jecxz
dec
sub
jnp
xchg
inc
push
mov
jmp
jg
mov
add
xchg
cmc
arpl
scas
js
dec
xlat
mov
mov
lock
jmp
sub
cwde
xchg
push
xor
aaa
xor
pop
jnp
(bad)
xlat
imul
jmp
rcl
daa
(bad)
fidivr
mov
sbb
pop
sub
and
lods
mov
cmp
aaa
xchg
and
fisubr
sbb
hlt
cmp
shr
in
mov
je
xlat
popf
lahf
push
mov
rcr
js
in
std
lods
ins
lock
retf
les
scas
out
mov
nop
out
sbb
sbb
inc
push
pop
adc
aam
inc
jmp
movs
sbb
or
push
mov
ds
(bad)
cdq
add
pop
(bad)
mov
or
xchg
pop
rol
sti
imul
fld
icebp
xchg
popa
lods
test
sub
fs
xor
add
xor
(bad)
popf
stc
push
retf
ret
bound
cmp
int
retf
js
push
test
xor
jmp
jb
mov
(bad)
jmp
pop
mov
adc
rcr
push
dec
es
cmp
dec
and
jle
push
dec
inc
mov
test
fild
sbb
mov
xchg
lds
and
ins
sub
xor
and
cmps
or
cmp
mov
gs
mov
bound
sti
pushf
adc
xor
out
inc
dec
add
bound
ss
pop
or
dec
dec
imul
out
ss
retf
loop
rcr
cmp
sub
je
and
xchg
xchg
pop
sbb
std
mov
mov
cmp
push
xor
scas
popa
jl
inc
cmp
push
pop
push
xchg
fimul
sub
hlt
iret
shl
test
push
bound
ret
sub
into
xor
jb
cmp
adc
add
and
pop
jb
cmp
sti
aam
adc
pop
pop
add
sbb
sbb
cli
nop
jmp
arpl
mov
jne
xchg
test
jle
mov
sub
jge
mov
xchg
jbe
iret
fstp
outs
jnp
(bad)
idiv
nop
adc
cmp
sbb
into
in
pop
xchg
jmp
rol
jge
jo
movs
cdq
outs
hlt
xor
neg
jge
inc
jb
mov
outs
scas
push
int
jbe
pop
inc
call
clc
pop
mov
cmc
scas
nop
in
(bad)
enter
stos
popf
mov
xor
or
and
lock
in
je
gs
mov
cs
call
sub
or
and
(bad)
fsubp
inc
retf
and
imul
hlt
xchg
mov
fld
mov
and
dec
adc
add
jmp
lea
stos
lods
dec
or
(bad)
mov
ds
(bad)
cli
jbe
fisub
push
(bad)
jmp
sub
pushf
enter
ins
(bad)
mov
mov
xchg
in
cmp
jne
sub
and
test
sbb
mov
not
int3
add
stos
cmc
fwait
repz
cwde
push
(bad)
jecxz
sti
xor
ins
jge
push
mov
addr16
pop
cmp
mov
loope
sbb
jmp
jb
pushf
mov
sbb
test
outs
cld
jmp
ins
js
out
mov
gs
les
mov
jp
out
lds
inc
lds
call
sub
pop
outs
cmc
gs
test
cmp
xchg
movs
xor
add
or
ret
sub
pop
jns
(bad)
jl
push
scas
(bad)
xchg
sbb
cmp
cwde
pop
out
mov
(bad)
out
out
push
mov
pusha
lods
pop
fnstsw
mov
(bad)
out
xchg
(bad)
hlt
pop
test
repnz
in
sub
push
adc
and
lock
cmp
push
test
sbb
xchg
popf
mov
xchg
les
fdivp
icebp
mov
or
push
je
cmp
test
cli
pop
lods
fisub
aam
or
jbe
movs
fwait
jle
or
popf
vmwrite
and
aam
or
jae
stos
sar
mov
adc
ins
ja
shr
sbb
neg
fwait
cmp
add
or
aaa
xchg
aas
addr16
add
fmul
push
gs
cwde
fistp
mov
cli
sbb
pop
gs
outs
mov
leave
sbb
push
push
jl
pushf
das
jne
popa
or
es
neg
aam
jno
inc
pop
mov
rcr
cmp
or
call
sub
jae
sbb
gs
shr
shl
scas
pop
test
pushf
adc
push
and
shr
inc
mov
push
xchg
inc
sti
sub
mov
int
aad
dec
jnp
fsubr
pop
mov
int3
mov
xlat
add
pop
mov
bnd
sub
mov
fadd
mov
fstp
mov
push
std
and
jge
in
push
sahf
ss
js
cmp
aad
pop
push
mov
call
dec
clc
in
and
ret
fnstenv
or
popf
inc
loop
fst
pop
aam
mov
add
mov
retf
sub
xchg
jo
fsub
push
mov
adc
sbb
ss
(bad)
mov
dec
dec
cmp
and
pushf
adc
stc
jne
ins
jae
cli
pushf
push
and
outs
dec
dec
push
ja
int
xor
mov
sub
adc
ss
xchg
mov
and
int3
icebp
dec
push
dec
aaa
adc
mov
add
movs
or
(bad)
popf
and
cmps
outs
aas
jmp
popf
pop
add
inc
lods
sbb
jmp
push
pop
hlt
mov
outs
jno
cli
adc
in
sub
sub
dec
inc
les
loope
ss
mov
mov
aas
out
sbb
(bad)
div
push
jle
lods
cwde
jge
sub
xchg
loope
pushf
inc
pop
enter
call
and
mov
mov
inc
mov
fist
adc
lds
cmps
sub
in
or
cmp
mov
iret
dec
cmp
add
lahf
sub
dec
jp
xor
jbe
sub
test
push
add
int3
or
pop
pushw
shl
stos
fsubrp
jge
jo
stc
mov
inc
inc
push
sub
sahf
std
mov
or
mov
add
inc
xor
cmc
mov
xchg
pop
out
bts
scas
(bad)
repnz
push
std
loop
push
jbe
push
nop
jle
mov
mov
out
jno
sbb
and
les
push
stos
lahf
in
cli
push
pop
mov
xor
ja
cmp
jb
xchg
pop
stos
mov
jbe
push
je
aad
cmc
sbb
mov
shl
icebp
jmp
(bad)
int3
retf
stos
cmp
mov
push
pop
ja
dec
cwde
sti
mov
ins
(bad)
mov
or
shr
dec
cwde
cmc
pop
nop
jmp
out
aaa
not
fisttp
nop
shl
mov
xchg
stos
mov
push
xchg
lock
loopne
and
jl
or
adc
cmp
add
inc
sub
sbb
jne
(bad)
push
or
mov
and
mov
lods
test
aas
enter
rcl
rcl
(bad)
fist
outs
dec
frstor
mov
sub
jp
mov
mov
vphaddubd
push
pop
cmps
dec
test
mov
inc
and
pop
out
inc
fcom
popa
sub
mov
sub
rcl
adc
sahf
mov
mov
iret
stc
aad
cmc
lock
xlat
or
cmps
or
test
test
add
sti
mov
loope
adc
xchg
cli
xor
dec
mov
imul
arpl
mov
mov
addr16
jmp
and
mov
test
inc
sub
cmp
dec
div
push
jne
pop
mov
bound
mov
mov
lea
mov
xchg
xchg
jb
das
fcom
cmp
mov
pop
dec
jo
add
pop
shr
fldcw
fsub
test
mov
pushw
icebp
scas
ss
cmp
ss
mov
inc
loope
mov
dec
dec
mov
lods
push
and
dec
mov
xchg
sub
xor
cli
aas
mov
jnp
or
and
inc
and
mov
pusha
in
xor
sti
inc
leave
hlt
adc
xor
xchg
xor
mov
popf
or
sbb
call
mov
inc
and
or
sbb
push
add
mov
test
aaa
pop
mov
push
in
push
push
xlat
ins
aaa
mov
sbb
push
jae
sub
jmp
xor
icebp
sbb
mov
sti
adc
test
dec
ins
icebp
cmp
mov
push
out
xor
sub
rol
and
mov
cdq
add
imul
mov
out
mov
pop
imul
call
mov
jecxz
cli
ins
movs
add
inc
rol
xchg
(bad)
hlt
repnz
sub
pop
pop
mov
xor
xchg
(bad)
imul
jl
sbb
mov
cmp
shr
inc
xrelease
cmp
pop
inc
fs
test
xor
fsubr
outs
ret
test
into
push
out
xor
mov
pop
sub
mov
adc
pop
vsubpd
mov
call
sub
inc
cmp
push
jnp
shl
pop
jb
arpl
cmc
push
add
mov
mov
mov
push
mov
or
call
dec
push
inc
xchg
retf
xor
loope
mov
ret
addr16
(bad)
ss
or
call
fst
cmc
loope
call
adc
ja
mov
ja
cmp
dec
daa
imul
clc
js
mov
mov
mov
fcomp
fld
mov
js
pop
xchg
popa
std
cmc
aaa
pop
stos
das
aaa
(bad)
xor
push
cmp
lds
(bad)
outs
les
popf
cmp
fwait
cmp
popa
push
or
fxch
(bad)
jge
cmp
add
mov
sub
inc
nop
jo
imul
cmp
loop
xchg
sti
xor
adc
jno
in
ror
pop
mov
xlat
jp
jo
sahf
push
lods
pop
pop
add
inc
xor
jbe
cdq
sbb
pop
push
sub
push
mov
mov
stc
and
daa
(bad)
cld
lods
adc
jge
sbb
movs
ja
cmp
imul
fbld
ins
push
pop
or
pop
jmp
aam
jp
(bad)
ds
cmp
mov
sub
pop
in
(bad)
(bad)
and
lods
mov
sub
fwait
scas
dec
(bad)
mov
js
cwde
dec
outs
push
adc
mov
push
push
movhps
cld
mov
or
cwde
test
aaa
sub
dec
and
ds
mov
mov
cmps
jb
test
add
add
test
or
fld
call
adc
jnp
sbb
fwait
push
sahf
rcl
dec
lea
mov
adc
pop
sar
fndisi(8087
mov
xchg
mov
push
mov
mov
enter
mov
sbb
mov
aam
push
je
sbb
jnp
bound
or
dec
sub
xchg
ror
push
xor
in
lahf
test
pop
pop
repz
addr16
dec
movs
dec
ret
dec
scas
popf
sub
mov
les
sbb
xchg
hlt
pop
outs
mov
push
loopne
adc
add
outs
jo
gs
add
cdq
adc
and
inc
test
xchg
xchg
sub
mov
mov
stc
ror
gs
fst
and
sahf
push
push
and
inc
jp
je
(bad)
xchg
les
jl
les
adc
test
test
popa
sbb
mov
add
sbb
adc
and
lods
or
imul
and
in
ss
retf
mov
jae
retf
jae
sahf
ins
enter
mov
push
in
mov
xchg
or
test
add
(bad)
dec
push
add
mov
imul
ror
lds
leave
jl
adc
xchg
arpl
dec
popa
pushf
(bad)
pop
mov
test
fmul
cmp
jecxz
push
lea
cwde
mov
pop
dec
cld
in
sub
jno
and
pop
int
jmp
rcl
jns
outs
stos
iret
sbb
mov
les
mov
mov
add
xor
dec
add
(bad)
sbb
dec
add
cli
inc
lock
in
cmp
ficomp
int
popa
mov
(bad)
push
test
inc
jmp
push
pop
and
adc
lods
mov
dec
out
xor
mov
fcomp
mov
adc
mov
mov
adc
fst
dec
test
or
cmp
push
(bad)
mov
cwde
mov
not
scas
rcr
xor
jmp
hlt
mov
(bad)
in
jp
cmp
cmp
imul
(bad)
sub
inc
aam
and
test
mov
sbb
(bad)
in
jbe
sub
sub
add
add
xchg
mov
and
jmp
iret
adc
mov
jle
jae
and
mov
push
add
arpl
out
push
sbb
(bad)
into
adc
cmps
mov
lods
arpl
jl
sbb
int3
cmps
fcom
aas
into
and
or
(bad)
xor
mov
loope
adc
mov
mov
inc
pop
mov
sub
test
lock
push
in
pop
sub
mov
push
sbb
rcr
jg
sub
lods
fucomip
mov
fwait
push
sub
adc
cmps
int
call
mov
mov
lock
in
stos
(bad)
ss
dec
lock
in
jmp
ds
std
sbb
out
or
mov
sar
sbb
cld
or
clc
push
push
and
cdq
pop
xor
pop
fwait
xchg
mov
mov
push
das
sub
retf
hlt
outs
add
mov
mov
sub
and
ins
push
scas
inc
das
sub
sub
lock
out
mov
cmp
test
xor
dec
in
int3
jmp
and
ja
mov
sub
push
pop
mov
jge
fidivr
sbb
dec
sub
push
rcl
iret
jmp
push
cli
enter
dec
leave
lods
(bad)
jge
arpl
cmc
or
lock
fild
push
push
in
and
jb
in
jno
fisub
ficom
and
sub
xor
scas
sbb
gs
pop
fdiv
xchg
pop
idiv
mov
sbb
retf
not
xchg
ror
jp
and
fistp
inc
jl
sub
jne
mov
loope
dec
sahf
fs
pop
cmp
stc
jp
push
ds
adc
int
pop
jge
(bad)
ret
(bad)
out
cld
push
push
repnz
sub
out
lds
sub
add
or
scas
inc
or
mov
sub
into
jo
ret
and
pop
ss
loop
dec
jge
cmp
ret
hlt
xchg
mov
push
xor
out
lds
dec
add
hlt
add
mov
fst
inc
fs
jns
cli
sahf
in
jecxz
(bad)
jae
push
scas
adc
lods
pop
push
js
mov
inc
add
add
xor
xor
mov
aas
bound
test
sti
adc
cli
inc
adc
pop
repz
sub
in
dec
fldenv
and
xor
push
lds
mov
ins
inc
test
push
or
xlat
dec
lea
cmp
inc
fld
sbb
daa
ficomp
mov
cmp
sbb
pop
dec
ror
jbe
mov
add
call
cs
jae
sbb
push
daa
adc
ss
jecxz
enter
cli
pushf
daa
pop
stos
mov
mov
add
push
bndstx
(bad)
sti
retf
push
lahf
sbb
fucomip
popf
mov
cmp
repnz
or
push
(bad)
mov
lods
popa
xor
cli
mov
inc
iret
mov
mov
dec
call
(bad)
pop
or
cld
outs
aaa
add
xor
cmp
lods
mov
dec
or
mov
dec
sub
fidivr
inc
sbb
inc
call
shr
fisubr
hlt
fldcw
mov
jl
pop
pop
xchg
ret
cmp
inc
push
mov
xor
std
inc
popa
jmp
xchg
cld
aad
movs
jne
(bad)
(bad)
xchg
add
fsubr
jae
sbb
xchg
pop
push
cmp
popf
xor
cmp
imul
and
int
mov
pop
mov
loop
jo
lock
cmp
inc
mov
pop
pop
mov
inc
neg
movs
jae
fbstp
test
test
xor
jecxz
fxch
cmp
in
inc
imul
(bad)
mov
retf
pusha
addr16
fisttp
and
ins
test
cmp
cmps
push
inc
ret
pusha
xchg
pusha
mov
adc
rdpmc
jmp
cdq
and
aam
dec
int3
mov
(bad)
rol
inc
fcomp
and
outs
jp
and
outs
ret
es
xor
mov
hlt
sub
movs
push
fld
xchg
aas
jecxz
dec
xlat
jecxz
js
fsubr
repz
push
push
scas
sub
pop
mov
sti
cld
aam
sbb
sub
or
dec
mov
repnz
push
sub
cmc
loopne
cli
and
fidivr
int3
ret
pushf
inc
adc
inc
xchg
rcl
mov
dec
pop
fdivrp
mov
aad
cvtdq2ps
int
lds
int
dec
lods
lock
sbb
movs
push
ret
pop
jle
ss
pop
jg
das
cdq
out
ss
push
inc
retf
add
adc
xchg
inc
sbb
adc
xchg
xor
movs
int
sub
jge
sbb
sbb
mov
or
sbb
je
cld
lods
or
add
sbb
movs
iret
push
push
inc
mov
adc
ins
inc
xor
pop
push
mov
jge
mov
dec
xchg
pop
dec
inc
(bad)
sbb
(bad)
(bad)
and
pop
add
lds
xchg
(bad)
xor
sbb
add
int3
xchg
sub
cmp
or
outs
aam
out
and
in
sub
add
push
jo
sbb
pop
cmp
add
ror
fucomip
pop
pop
faddp
or
adc
fmul
inc
movs
mov
add
jl
adc
sub
popf
sbb
in
daa
and
aam
getsec
jmp
push
inc
jns
rol
mov
and
cmc
imul
cwde
inc
jmp
sub
mov
jne
shl
xchg
adc
ja
lock
cld
int
push
stc
fdivp
cwde
sub
mov
jae
mov
cli
inc
hlt
mov
loop
jmp
jle
inc
dec
xchg
dec
pop
pop
mov
mov
add
add
push
sub
push
mov
shr
sub
fcomp
shrd
or
je
aas
sbb
aas
imul
or
mov
stos
xchg
adc
push
pop
xchg
sbb
jns
add
cmp
clc
push
mov
jns
xchg
icebp
xchg
xchg
mov
retf
xlat
pop
adc
lock
stc
inc
call
add
call
test
enter
pop
sbb
not
sub
aad
bound
and
(bad)
fimul
dec
outs
es
add
mov
adc
das
jle
clc
je
movs
push
pop
add
cs
inc
xor
outs
jmp
or
or
mov
push
int3
xchg
ret
mov
mov
push
shl
mov
ret
aas
test
je
(bad)
movs
das
inc
repnz
sti
mov
fild
push
jp
sbb
xor
jno
arpl
stc
adc
push
je
out
adc
add
cmp
icebp
push
push
adc
cwde
push
cmps
scas
jo
leave
cmp
gs
mov
and
add
push
adc
adc
out
(bad)
in
cmps
scas
lock
pop
mov
(bad)
popa
dec
es
pop
sbb
fs
xchg
mov
and
pusha
shl
pop
sub
mov
ret
sub
inc
cmp
sub
sbb
sti
jmp
push
pop
push
setb
hlt
pop
das
lea
xor
push
cmp
ins
mov
fdiv
jo
jg
fidivr
les
lds
dec
add
mov
inc
inc
arpl
(bad)
ds
cmp
pop
out
mov
or
jge
pop
cmp
fwait
xchg
cmp
cld
(bad)
out
cli
sub
fsubr
daa
inc
ret
dec
mov
pop
mov
sub
jbe
jnp
ins
xchg
and
test
jmp
add
and
and
pushf
jns
pop
push
sub
sub
aad
inc
cmp
mov
cmps
pop
add
xchg
cmp
pop
push
sub
(bad)
cmps
aas
xlat
(bad)
aas
cmp
xchg
cmp
jl
imul
test
fs
nop
add
jecxz
push
clc
fcmovnb
mov
out
je
cmps
(bad)
ja
xchg
enter
push
movs
sbb
pusha
jbe
mov
inc
fdiv
xor
and
cdq
jns
jecxz
popa
sahf
add
pop
or
xchg
xchg
sti
sti
push
dec
and
push
jbe
xchg
sub
dec
es
shl
jb
mov
mov
das
cs
pop
sub
repnz
movs
mov
inc
popa
add
jne
int3
pop
sub
jmp
cmp
xor
sub
sub
aad
mov
(bad)
push
push
xlat
popa
or
sub
out
xchg
xchg
in
push
int
pop
aas
or
adc
lds
or
call
popf
nop
fdivr
pushf
stos
pop
mov
jbe
pop
xor
rcr
sub
jns
sar
js
push
(bad)
push
push
pop
sbb
arpl
pop
dec
std
mov
pop
dec
push
jmp
inc
ins
mov
clc
iret
je
ja
jns
inc
jmp
jmp
jo
and
xor
cld
fld
push
mul
and
or
hlt
and
cmp
xor
xchg
ds
sbb
fs
jns
inc
xor
enter
test
shr
fsubr
call
mov
aas
movs
xchg
addr16
mov
(bad)
jnp
loop
or
mov
adc
mov
in
and
jp
rol
ret
sbb
mov
and
adc
mov
cmp
movs
popf
mov
test
data16
xchg
daa
add
std
pop
sbb
sbb
xlat
rol
pop
sar
test
sbb
sub
sub
outs
retf
imul
pop
scas
add
or
pop
movs
pop
adc
inc
outs
jne
add
inc
repnz
mov
pusha
imul
rcr
mov
out
inc
add
repnz
and
in
rcl
adc
adc
imul
dec
sub
cmps
jl
jle
pusha
repz
mov
cdq
mov
xchg
push
icebp
lods
jecxz
or
loopne
rcr
sbb
mov
(bad)
rcr
jp
das
inc
cmp
inc
adc
jnp
push
xchg
cmp
je
inc
xor
gs
push
gs
mov
lds
cmps
bound
inc
sub
ss
xor
jnp
adc
cmp
add
or
out
jmp
fnstcw
loopne
push
repz
jae
fmul
gs
and
or
adc
in
icebp
adc
jns
call
jbe
and
jl
cld
aam
dec
push
popa
sti
mov
call
jg
mov
test
mov
cmps
mov
(bad)
xchg
xchg
pop
gs
mov
add
adc
mov
in
popa
jbe
cmps
sahf
stc
mov
dec
inc
mov
xchg
call
shl
das
aas
ins
sub
adc
mov
sub
sub
arpl
(bad)
nop
(bad)
or
mov
sub
rol
fcomp
dec
imul
cwde
mov
(bad)
retf
mov
movs
test
jecxz
dec
push
dec
xor
ins
in
in
sbb
mov
loope
push
leave
jne
sub
mov
imul
or
jno
push
gs
xor
dec
cmp
pop
xchg
xchg
adc
test
pushw
(bad)
push
sti
popa
not
pusha
xchg
mov
xchg
arpl
cmp
mov
dec
(bad)
in
mov
pop
pop
sar
cmc
ds
cli
ror
jmp
xor
das
lds
or
lahf
popf
mov
icebp
and
je
push
jg
cmp
xor
jg
les
or
scas
mov
push
dec
lds
xchg
mov
mov
sub
dec
cld
aaa
cmp
jno
push
adc
adc
push
(bad)
and
xchg
in
lahf
jl
leave
(bad)
cmp
mov
mov
repnz
push
inc
jns
sbb
js
and
xor
dec
inc
push
fcmovb
fsubr
xchg
add
push
outs
mov
mov
fcomp
out
loopne
(bad)
je
pop
into
and
cmp
dec
(bad)
shl
mov
jmp
clc
and
xor
(bad)
nop
dec
push
adc
mov
pop
lods
out
lea
sub
mov
sub
inc
popa
idiv
sahf
fimul
fs
shl
inc
mov
aam
stos
fistp
dec
push
pop
cmp
cwde
sub
fdivr
int3
cmp
sub
add
fimul
ret
jmp
pop
fwait
es
xchg
jo
adc
ins
push
push
aam
ret
jge
inc
push
enter
sar
(bad)
dec
push
mov
jb
fnsave
pop
aam
push
mov
das
pop
sub
push
mov
fs
pop
inc
or
(bad)
fldcw
dec
test
dec
aad
push
push
adc
js
adc
xchg
not
in
pusha
jne
aaa
xchg
inc
adc
(bad)
pop
out
daa
scas
sbb
inc
and
or
pop
jp
mov
iret
aas
loope
mov
xchg
mul
jae
and
lock
fwait
add
cli
sbb
mov
rcl
adc
dec
mov
fwait
pop
aas
jmp
idiv
add
cmp
jg
lds
jmp
(bad)
jno
jbe
movs
add
xchg
inc
mov
sub
inc
sbb
fwait
mov
adc
or
dec
adc
cwde
iret
stos
push
mov
daa
add
stos
jno
adc
js
test
push
rcr
jne
pop
jecxz
(bad)
popa
xchg
ret
cmps
(bad)
mov
mov
adc
(bad)
push
cmp
inc
enter
mov
pop
mov
cmp
mov
cmp
sub
dec
movs
movs
into
xchg
xor
jecxz
pop
test
(bad)
mov
(bad)
bswap
ds
jo
xor
and
dec
fucomp
out
nop
fucomp
icebp
fs
dec
imul
dec
sub
outs
jnp
mov
jno
push
mov
gs
cmp
jecxz
mov
pop
push
xchg
and
dec
test
jmp
pop
xlat
adc
aam
daa
sub
test
scas
dec
sbb
hlt
or
jecxz
xor
cmovbe
(bad)
cmp
jo
jecxz
or
(bad)
cdq
cmc
test
sbb
sbb
adc
jnp
aad
and
mov
mov
fistp
sar
pop
lahf
mov
inc
mov
mov
sbb
adc
add
dec
cmp
daa
popa
xchg
xor
pop
mov
das
dec
shl
pop
adc
dec
fistp
xor
jge
cmp
and
adc
out
and
fs
mov
nop
jecxz
mov
jnp
pop
pusha
mov
xor
push
shl
or
xlat
sub
jp
out
fbstp
nop
popf
pop
rcr
lock
jne
sti
test
and
test
(bad)
mov
faddp
push
sbb
dec
out
aaa
add
inc
das
test
pop
mov
(bad)
loope
mov
in
xor
iret
call
nop
enter
dec
and
adc
in
fwait
call
cmps
xchg
mov
js
data16
stos
sti
dec
ret
mov
jns
icebp
in
aam
mov
call
icebp
pop
inc
or
or
pop
xchg
sbb
mov
mov
xor
pop
xchg
jo
sub
mov
sbb
mov
std
dec
test
daa
pop
sahf
jle
sub
mov
mov
cld
outs
clc
xchg
hlt
std
mov
jno
mov
loop
push
(bad)
movs
aas
add
dec
in
dec
daa
outs
outs
shl
ret
mov
inc
das
pop
enter
out
or
mov
xchg
(bad)
out
xor
scas
jmp
and
es
(bad)
and
pop
mov
adc
fwait
jge
push
and
int3
add
or
stos
int
push
cmp
js
mov
daa
and
fnstcw
mov
xchg
fild
mov
imul
ins
jecxz
lock
in
adc
into
aas
xchg
mov
fisubr
push
les
mov
push
mov
xor
and
xchg
fwait
sbb
ror
jae
and
into
fidiv
or
mov
add
repz
jo
mov
mov
ss
test
call
fsubr
fisub
scas
adc
jnp
jle
aas
adc
jmp
pop
int3
xchg
ss
psllw
dec
and
cmp
mov
mov
mov
add
dec
or
lahf
in
ss
dec
mov
push
(bad)
xchg
cwde
or
ins
cmp
cmp
pusha
in
xchg
xor
popf
xor
mov
jns
sub
fdivr
nop
gs
shl
jno
pop
scas
jo
sub
loop
inc
imul
jge
push
xor
out
jne
sahf
mov
aam
lahf
add
call
aas
push
scas
jnp
mov
add
and
bound
xlat
xchg
xchg
xor
and
(bad)
fs
jbe
dec
iret
in
movmskps
enter
dec
jb
ss
xor
inc
out
mov
shr
jno
test
jle
rcl
push
rcr
inc
or
test
clc
leave
nop
cmp
sti
mov
out
and
jns
(bad)
frstor
or
or
mov
add
rep
js
call
mov
stos
pop
fwait
sbb
mov
ret
call
pop
mov
mov
dec
xchg
std
push
fcomp
hlt
(bad)
push
retf
retf
push
jno
dec
push
jecxz
xchg
retf
mov
ret
mov
push
scas
jno
mov
lahf
jmp
repnz
xchg
repnz
mov
pop
jge
scas
or
and
add
jno
xchg
xor
outs
xchg
lds
inc
cld
les
int
fst
(bad)
repz
es
adc
mov
sti
dec
sbb
jae
loope
mov
pop
or
lods
enter
cmp
jo
or
xor
cdq
pop
mov
push
sbb
fcom
(bad)
addr16
in
retf
jbe
sbb
cmc
push
sbb
dec
push
std
mov
cld
adc
clc
(bad)
orps
mov
adc
xchg
in
mov
std
(bad)
loopne
jmp
gs
test
data16
adc
dec
xchg
pusha
sub
xchg
ror
sbb
xlat
jnp
inc
loope
outs
popf
inc
retf
rol
fistp
mov
mov
push
into
mov
loopne
sbb
fild
rol
push
mov
stos
scas
das
jge
cmp
nop
daa
mul
inc
sub
pop
mov
into
cmc
stos
xor
pop
dec
test
sub
cs
hlt
in
xchg
call
mov
dec
jns
cs
inc
cld
jge
push
pop
jmp
cmps
push
sub
retf
aaa
or
jne
clc
and
mov
add
push
inc
cmp
aam
mov
call
and
ss
sbb
pop
push
dec
xchg
pop
retf
xor
test
sbb
xchg
or
pop
pop
cmp
cmp
sbb
dec
add
pop
mov
(bad)
pop
lea
aaa
data16
repz
jae
loope
dec
cmp
cmp
jbe
xchg
into
dec
dec
jo
adc
into
and
jne
std
cmps
push
fs
imul
movs
pop
loope
push
mov
or
inc
mov
mov
jbe
imul
cmp
in
inc
push
push
rol
push
les
and
lahf
fs
sub
xor
mov
adc
test
jl
je
imul
mov
gs
cmps
xchg
or
and
popa
cmc
cmp
jmp
pop
xchg
xchg
mov
cmps
xlat
jnp
and
dec
pop
inc
repz
call
in
pushf
mov
mov
sub
retf
aaa
fisub
xlat
inc
imul
cmp
pop
ins
inc
int3
pushf
sbb
into
xor
push
leave
data16
xor
push
pusha
mov
addr16
sub
aam
jg
and
push
outs
cmp
repz
jno
(bad)
(bad)
adc
call
cwde
(bad)
xchg
loope
test
mov
dec
cmp
daa
dec
dec
das
(bad)
mov
nop
sar
jno
xchg
sti
jnp
fistp
push
or
dec
or
jge
push
je
adc
sbb
repnz
jge
sbb
add
inc
(bad)
push
outs
pop
jecxz
fbstp
jg
xor
test
aam
mov
test
outs
imul
mov
lahf
pushf
jmp
xor
dec
xchg
and
scas
push
aam
lods
pop
es
push
test
cwde
adc
xchg
and
icebp
cmps
lods
(bad)
into
sar
shl
sub
adc
push
mov
inc
outs
jnp
adc
mov
cdq
ret
(bad)
das
jmp
fsub
(bad)
jle
pop
add
gs
jle
jg
xor
imul
xchg
mov
push
ja
and
and
jo
hlt
mov
cdq
inc
adc
test
jmp
outs
int
xlat
adc
push
jl
pusha
cmp
(bad)
sahf
sahf
leave
sbb
mul
mov
pop
test
xchg
out
mov
push
cmps
and
jbe
adc
int
pop
mov
ret
dec
lea
xlat
sahf
pop
loop
cmps
(bad)
mov
mov
jecxz
lds
test
mov
jl
mov
outs
fisubr
inc
pop
adc
jp
dec
into
arpl
push
imul
pop
mov
jecxz
icebp
jns
dec
xor
ins
dec
sti
inc
add
pop
fcomp
js
push
icebp
ins
sub
dec
jbe
int3
cmps
(bad)
sub
mov
xor
adc
in
lea
dec
adc
pop
jbe
stc
dec
ins
fcmovne
mov
dec
movs
shl
and
scas
mov
stc
cmp
shl
mov
push
push
std
or
popf
sbb
call
iret
xor
mov
mov
stos
pop
pop
sub
call
adc
pop
clc
jb
fild
call
push
in
sbb
(bad)
pop
frstor
sbb
dec
(bad)
xchg
jns
in
xchg
retf
push
inc
pop
sbb
and
xor
dec
xchg
sahf
or
outs
xor
arpl
pop
and
fld
pusha
pop
sbb
mov
std
pop
and
pop
and
and
aaa
push
cmp
int3
dec
pop
pop
xchg
jnp
push
jp
inc
pop
mov
mov
adc
nop
inc
jge
out
cmc
jmp
je
pop
pop
sub
mov
dec
pushf
adc
sub
stos
mov
xchg
adc
into
or
inc
push
scas
push
movs
fisubr
mov
pusha
lea
push
pop
into
call
jg
sub
add
les
jge
bound
ss
mov
in
sub
adc
and
ret
xchg
ficom
and
lahf
push
mov
pop
sub
fild
fs
jecxz
pop
popf
shr
mov
mov
xchg
stos
jae
in
mov
test
aas
add
sub
jae
jg
and
adc
mov
mov
scas
aaa
jl
dec
out
sbb
jnp
mov
nop
mov
xor
scas
shr
sub
pop
lods
nop
ficomp
mov
popa
cdq
sbb
mov
pop
mov
mov
xor
aam
xor
add
retf
mov
shr
pop
push
(bad)
inc
shr
dec
jae
dec
adc
ds
cwde
mov
aaa
push
pop
push
adc
jo
test
pop
cmp
jbe
sbb
pop
fcomp
sub
sbb
cld
in
rcr
in
cwde
test
push
aaa
push
cwde
out
push
push
xor
ins
jne
sbb
dec
push
neg
in
js
pop
add
(bad)
cmp
retf
ins
aam
loop
push
ss
enter
rcr
xor
mov
inc
movs
addr16
add
and
arpl
dec
stos
and
and
sbb
dec
test
jl
mov
lahf
sbb
mov
cmp
push
in
scas
mov
out
int
pop
xor
pop
inc
push
cs
push
pop
dec
sbb
xor
fucomi
mov
nop
vpmulhuw
cmc
aas
mov
in
and
ss
je
push
inc
inc
test
xchg
push
movs
hlt
jle
mov
lea
sbb
add
add
sbb
(bad)
mov
fstp
jbe
mov
cwd
out
(bad)
(bad)
sub
mov
imul
pop
fiadd
retf
inc
mov
jecxz
adc
fcomp
pop
push
movs
data16
lds
shl
pop
add
imul
pop
test
(bad)
mov
xchg
daa
cmc
movs
cli
imul
sub
xor
aaa
push
adc
daa
int3
sub
sub
cs
xchg
xchg
lock
inc
mov
push
sti
inc
retf
inc
retf
data16
inc
shr
mov
xchg
aaa
pop
cdq
in
sbb
mov
icebp
sahf
lods
aas
nop
fidivr
loopne
sbb
daa
push
fild
shl
ds
cmp
fcom
ja
fdiv
push
pop
lock
popa
cli
mov
sar
sti
sbb
jp
xchg
je
test
pop
jo
push
cmp
pushf
into
mov
mov
pop
jg
fistp
push
inc
or
xchg
rol
ds
nop
pushf
jbe
jnp
inc
mov
and
(bad)
and
xor
mov
sub
fwait
push
retf
or
in
jno
out
inc
fisubr
adc
scas
push
dec
inc
ins
sub
dec
and
das
enter
cmp
daa
lock
cmp
jge
adc
push
outs
cmps
outs
mov
cdq
sti
mov
pop
mov
jecxz
and
xor
sbb
dec
(bad)
push
lods
jg
mov
xor
mov
sti
mov
pop
jmp
je
in
and
lahf
sbb
ds
add
xchg
pop
cmp
jo
sub
retf
loop
out
movs
imul
call
fs
fisub
lods
jns
xchg
out
jge
gs
or
bound
scas
sub
sar
aaa
pop
jne
sbb
push
pop
mov
push
loopne
sbb
out
loope
add
cmp
shl
mov
daa
cmp
xchg
outs
adc
outs
dec
sahf
cmp
sub
xor
push
scas
jmp
and
retf
lods
add
in
push
inc
sub
add
push
xor
inc
in
cmp
(bad)
aam
push
jp
pop
sub
add
xchg
sbb
or
or
dec
cmp
sbb
sub
add
inc
clc
retf
sbb
mov
xchg
loop
push
mov
inc
(bad)
xchg
mov
fadd
mov
adc
xchg
sbb
mov
dec
in
mov
nop
les
popa
adc
pop
xor
and
js
jl
or
retf
cmp
test
and
sbb
imul
rcl
cmp
xlat
xor
push
std
push
or
ds
push
cli
xchg
jns
int3
sub
cmps
push
ret
sbb
out
pop
inc
pop
jecxz
mov
push
lea
cmp
adc
adc
sub
dec
mov
push
aam
jl
lods
and
sbb
add
sbb
jno
adc
sbb
js
out
div
adc
test
js
sbb
or
hlt
(bad)
(bad)
push
pop
jg
iret
adc
lds
or
(bad)
and
jmp
pop
js
dec
and
xor
dec
add
jge
(bad)
pusha
icebp
push
add
ds
add
cs
pop
push
adc
nop
je
das
std
mov
pop
pushf
adc
outs
test
out
jns
addr16
outs
mov
mov
sub
aam
popf
fmul
fwait
rol
pop
adc
sahf
in
xchg
dec
int
lahf
out
(bad)
dec
fidiv
arpl
sbb
ret
cli
scas
xor
loope
in
loop
push
lahf
mov
int
mov
(bad)
add
xchg
shl
sbb
push
ret
loop
xchg
mov
inc
pushf
enter
or
div
dec
inc
call
mov
sub
mov
or
les
mov
test
add
mov
jnp
jb
xchg
inc
(bad)
das
out
sbb
jp
bound
in
xchg
xor
ss
jns
repnz
into
adc
aam
mov
pop
xchg
sti
shl
lock
iret
in
repnz
inc
pop
mov
rcl
sub
scas
rol
out
shr
adc
test
push
xor
inc
xchg
mov
mov
sbb
dec
fidivr
std
call
imul
jecxz
mov
shl
lahf
jbe
pop
fsubr
fcomi
pop
mov
push
jo
cmc
xchg
cld
jl
es
mov
movs
sbb
inc
mov
pop
imul
xor
xlat
mov
dec
loop
ins
daa
push
sbb
loope
add
pop
jl
(bad)
out
iret
fneni(8087
xor
sbb
sub
mov
xchg
cwde
mov
sti
sbb
or
movs
xor
sub
mov
jmp
(bad)
adc
inc
push
cmc
bound
dec
push
and
(bad)
(bad)
push
adc
lea
push
mov
sar
mov
jle
jmp
shl
lods
in
mov
sub
icebp
sbb
test
push
test
retf
loopne
mov
xchg
push
mov
jbe
or
pop
xchg
push
pop
mov
xchg
pop
in
jns
inc
hlt
pop
(bad)
lds
stos
pop
out
cmp
int
jno
cli
ror
std
ja
ja
xchg
sbb
je
cli
or
jmp
cmp
mov
loop
jp
pop
push
repz
leave
ins
call
jo
and
icebp
dec
mov
retf
mov
(bad)
lods
test
outs
fsubrp
in
mov
push
in
cmps
icebp
xchg
in
imul
inc
inc
aas
mov
jge
cmc
cmp
repz
and
loope
add
add
push
push
adc
jp
pop
adc
lahf
dec
jle
(bad)
pop
sbb
lods
cli
jecxz
pop
outs
sub
jmp
jp
push
dec
sub
popa
mov
fcomp
dec
and
xchg
push
push
sbb
inc
gs
push
mov
pop
ja
js
loope
mov
xchg
mov
fcmovb
iret
out
das
add
vmovhps
inc
(bad)
push
cld
push
or
out
gs
push
test
leave
xor
frstor
fimul
sbb
xchg
push
dec
mov
(bad)
ss
jecxz
scas
loopne
es
lods
inc
adc
push
mov
inc
in
xchg
xor
jge
push
out
add
and
(bad)
fmul
ror
cmps
jns
loopne
sbb
in
sbb
(bad)
imul
sbb
mov
cmps
or
daa
test
push
lock
arpl
cmc
dec
add
test
inc
(bad)
sar
lock
mov
push
and
push
in
scas
test
mov
sbb
pop
movs
call
in
(bad)
out
ret
ja
xor
add
push
add
jge
js
ret
in
mov
pushf
cmp
cli
je
or
xor
pop
(bad)
out
pushf
jl
jae
jge
dec
xor
je
(bad)
jb
push
push
xor
inc
inc
retf
adc
mov
ret
push
cmc
loop
retf
jbe
xor
mov
mov
xchg
push
sub
cwde
and
jnp
push
shl
popa
adc
cdq
xor
mov
std
pushf
iret
int
jcxz
gs
mov
pop
pushf
clc
jge
jbe
inc
mov
pop
mov
mov
xor
inc
rcl
out
mov
retf
ret
enter
mov
push
cmps
and
push
jmp
(bad)
cmp
adc
xchg
addr16
jnp
bound
scas
pop
fcmove
(bad)
jmp
iret
xchg
cld
cwde
out
push
scas
out
cli
ja
test
mov
loope
in
sti
ret
pop
pop
and
jge
sbb
mov
and
int3
mov
jns
ins
adc
and
sbb
mov
mov
cmp
enter
inc
push
or
pop
sbb
outs
mov
lods
icebp
inc
push
cmp
das
mov
mov
jge
xchg
mov
(bad)
cli
xchg
sub
sub
xchg
jns
xor
xor
or
xlat
push
ds
lods
fsubr
lds
ins
scas
or
in
or
mov
dec
shl
add
push
popa
shl
cmp
out
hlt
jo
dec
dec
add
enter
imul
hlt
outs
jno
mov
lock
popa
mov
sbb
lock
bound
imul
daa
ins
mov
cmp
lods
stc
pop
fdivr
imul
jb
test
xchg
adc
and
xchg
movs
mov
mov
out
mov
add
inc
mov
rol
jl
inc
dec
sbb
add
xor
loop
mov
imul
add
inc
dec
int
nop
ret
or
iret
jb
push
sbb
mov
js
shr
cmp
std
push
add
movs
sbb
lahf
dec
call
cmp
or
push
inc
mov
or
xor
sti
repz
retf
jbe
adc
sub
ss
mov
mov
mov
adc
js
ins
or
aaa
fmul
xor
inc
mov
add
mov
mov
mov
into
popa
test
ret
daa
pop
rcr
fcomp
jp
ret
pop
dec
lods
sub
push
scas
lock
test
push
mov
sub
repnz
mov
mov
adc
fcmovnu
popa
outs
cmp
xchg
jecxz
(bad)
or
outs
inc
xor
leave
inc
ins
and
pop
cmp
mov
add
mov
sub
xor
pop
push
mov
mov
int
cli
push
ins
and
jge
xor
nop
pop
test
mov
xchg
add
mov
cmps
lahf
es
pop
popa
clc
mov
mov
xor
loop
out
xor
cdq
ffree
lea
adc
sbb
jb
out
push
mov
bts
adc
push
cs
les
ja
dec
add
adc
jp
jmp
push
lods
scas
pop
gs
jl
push
xor
adc
jns
popf
imul
mov
stos
je
add
cmps
aam
or
mov
xchg
inc
jmp
fs
lahf
ins
je
bound
(bad)
(bad)
lods
repnz
rcl
push
jo
xchg
(bad)
sbb
push
cmc
cdq
xor
jae
jp
inc
das
repnz
mov
xor
inc
test
arpl
inc
fmul
les
test
adc
test
cwde
ret
pop
aaa
ds
xchg
loop
jp
sub
loope
data16
dec
(bad)
rcr
hlt
stc
jg
test
xchg
or
fincstp
inc
ss
jp
inc
arpl
dec
lock
fwait
shld
cdq
sub
int3
aam
lds
mov
lds
jb
adc
sub
aad
xor
xor
mov
shr
mov
cmp
push
and
adc
inc
stc
arpl
dec
jp
jbe
jno
lock
inc
repz
hlt
push
lock
mov
or
imul
mov
sbb
fisttp
outs
das
cmp
push
clc
fs
dec
adc
inc
retf
sub
pushf
and
lahf
inc
push
lods
xor
inc
add
push
jmp
call
dec
cmp
push
jmp
inc
imul
pop
cmp
mov
xlat
sub
dec
mov
lds
stos
repnz
cmp
shr
cs
int3
cmp
in
push
mov
icebp
mov
imul
jle
in
stc
inc
ja
and
jge
push
loopne
sub
retf
jle
mov
mov
xor
into
cmps
xchg
test
sbb
push
pop
lods
push
cmp
inc
add
arpl
inc
cmp
add
adc
or
not
and
(bad)
xchg
xchg
add
lods
loope
iret
sbb
test
jb
(bad)
push
repz
xor
mov
retf
cmp
scas
scas
in
pop
jmp
(bad)
pop
inc
popf
mov
add
sub
xchg
out
(bad)
pop
xlat
mov
and
call
cmp
in
mov
pushf
pop
mov
neg
cs
fisubr
push
lods
div
ficom
adc
loope
sub
adc
aam
gs
(bad)
add
pop
inc
fcom
cmc
jb
aaa
(bad)
adc
sub
lahf
das
pop
inc
xchg
mov
pop
test
xchg
outs
inc
imul
sbb
fwait
dec
mov
ins
or
mov
vpslld
mov
sbb
or
or
outs
mov
addr16
pop
xor
push
mov
test
sbb
mov
mov
mov
add
add
lds
dec
pop
out
pop
fidivr
mov
jge
fcmovnu
inc
push
pop
mov
repnz
daa
and
dec
xchg
or
pop
sub
jl
jge
sbb
fxch
push
jo
scas
and
dec
add
mov
fldcw
jl
sub
or
clc
cmp
jb
jnp
jmp
and
push
dec
adc
rol
mov
loope
add
xchg
mov
mov
or
outs
sbb
push
push
cmp
dec
xchg
aas
scas
retf
mov
div
mov
mov
pusha
adc
mov
dec
or
pop
pop
push
sahf
fmul
out
(bad)
ins
xor
paddw
gs
popf
adc
inc
adc
cmp
test
mov
jecxz
sbb
mov
mov
push
ins
xchg
mov
adc
cs
jg
lods
cs
push
cs
or
mov
sbb
loop
mov
adc
xchg
or
xchg
xor
retf
jmp
fnstenv
fucomi
mov
add
and
mov
push
jns
out
xchg
sub
pusha
and
adc
sti
inc
stos
test
fcom
mov
add
xor
cmp
mov
adc
(bad)
xor
in
shl
adc
sbb
inc
push
mov
addr16
sbb
push
cwde
mov
jl
push
add
imul
dec
jecxz
cwde
loope
add
xchg
xchg
lods
add
cmps
jge
clc
fcmovnbe
js
out
loopne
popf
mov
cmp
test
loop
outs
dec
in
or
mov
ret
dec
ss
cmp
push
pop
out
popf
push
call
test
mov
xor
mov
cli
js
sbb
push
xchg
(bad)
jne
jecxz
jmp
mov
hlt
(bad)
sbb
(bad)
pop
imul
push
xor
pop
and
pop
js
(bad)
pop
call
xor
dec
add
adc
clc
cmp
in
xchg
mov
sub
leave
icebp
xchg
or
sub
jp
ffreep
je
jae
mov
xchg
push
addr16
cmp
icebp
out
sbb
mov
fnstsw
std
mov
int3
pusha
pop
mov
mov
xlat
sar
xchg
push
push
dec
push
dec
cmp
sbb
sbb
xchg
mov
popf
sahf
test
mov
into
leave
cmc
je
pop
les
jp
out
movs
lds
aas
jbe
inc
cmp
(bad)
push
ds
mov
ins
mov
or
js
rol
pop
mov
mov
test
aaa
or
pusha
inc
mov
rcr
push
and
jbe
call
dec
xor
xor
xchg
xchg
adc
call
outs
add
shl
mov
das
inc
stc
add
cli
adc
retf
rsm
rcl
inc
mov
loop
repz
cs
(bad)
enter
js
ud1
and
push
cmps
xor
stc
jns
js
(bad)
inc
pop
sub
loopne
jo
adc
jg
jle
sub
xor
jge
lea
jnp
loopne
lock
cmps
inc
push
lods
mov
mov
(bad)
dec
(bad)
jg
mov
pop
mov
sub
dec
loope
sbb
dec
out
push
aas
xchg
lea
mov
push
sub
mov
push
and
inc
or
pop
pop
adc
fiadd
adc
jp
xchg
fisttp
inc
xor
sbb
ret
inc
lods
sbb
ins
xchg
adc
mov
mov
vpaddusb
mov
or
inc
movs
(bad)
loop
pop
int
sbb
repnz
or
(bad)
xchg
sub
leave
in
fldl2e
push
data16
in
sbb
mov
bound
xor
dec
fstp
fdiv
xor
jo
xor
loopne
xchg
fstp
cmp
inc
stos
add
lea
icebp
out
ror
lock
shl
mov
jle
int
outs
mov
sub
test
sub
retf
les
adc
mov
xchg
push
pop
call
cli
mov
js
push
fwait
mov
dec
mov
jmp
js
dec
or
stc
cmp
cs
mov
retf
mov
add
xchg
addr16
ret
in
inc
ret
pop
jb
pop
pop
push
fsin
jl
les
push
mov
xchg
cmps
(bad)
fimul
ins
movs
mov
adc
jp
bnd
mov
and
xchg
cs
or
fmul
pop
sbb
in
xor
or
jno
sub
loopne
icebp
xchg
inc
push
xchg
push
in
jnp
daa
xor
jmp
mov
cmc
jecxz
(bad)
test
mov
iret
cmp
push
push
cs
jmp
imul
or
movs
test
jb
loop
imul
out
push
jb
js
mov
int
rcr
clc
xor
aaa
aad
addr16
push
aas
in
pop
dec
test
loope
adc
test
and
arpl
jp
(bad)
ret
bound
jge
arpl
sbb
pop
repz
shl
dec
retf
imul
pop
push
lods
mov
xor
test
sub
mov
ss
sbb
(bad)
jg
mov
xchg
pop
mov
movs
call
cld
xor
das
xor
push
popa
mov
stos
adc
popf
(bad)
sbb
lahf
hlt
scas
jl
fnstenv
nop
loope
movs
movs
xchg
imul
inc
mov
(bad)
repz
fidivr
daa
imul
jmp
es
mov
add
xor
or
add
mov
movs
je
pop
js
dec
add
cli
sahf
mov
sbb
ss
lds
or
mov
repnz
dec
mov
(bad)
sti
add
test
pop
(bad)
and
sub
mov
mov
xchg
dec
imul
xchg
hlt
add
add
(bad)
mov
pop
push
rol
jbe
inc
in
(bad)
leave
inc
clc
or
inc
call
mov
ror
les
add
leave
jg
ror
adc
pop
cmp
and
add
fmul
sub
imul
and
xor
hlt
cmps
dec
and
push
ror
(bad)
mov
das
imul
pop
xchg
jmp
movs
test
repnz
mov
aas
dec
cmp
mov
cdq
(bad)
cli
fistp
addr16
aam
adc
inc
adc
dec
(bad)
or
lods
sbb
mov
xchg
repz
sub
scas
adc
gs
or
sub
pop
out
push
mov
mov
pop
(bad)
out
enter
ja
mov
inc
stos
int
popf
xchg
push
inc
call
adc
cmp
mov
shl
cwde
push
add
shr
inc
js
cmps
lods
aam
mov
and
mov
dec
rcl
jge
sub
shl
adc
das
adc
xchg
add
jmp
xchg
jp
sub
adc
(bad)
stc
mov
das
dec
pop
pop
or
dec
dec
nop
mov
ret
mov
xlat
mov
cmp
div
loop
lahf
shl
or
lea
adc
xlat
sub
outs
pusha
dec
jb
stc
(bad)
retf
bound
and
outs
dec
aas
ja
mov
adc
jne
fcmovnb
aam
and
add
mov
or
cmp
pop
and
ins
sbb
jb
and
adc
je
icebp
cdq
xchg
packsswb
out
adc
ror
les
push
cs
sub
mov
jmp
inc
je
and
addr16
adc
xchg
das
stos
sti
xor
or
mov
retf
mov
xor
cmp
repnz
dec
sar
icebp
outs
xchg
mov
das
stos
jg
and
sub
fld
or
jecxz
loope
cmp
xchg
data16
in
mov
cmovb
xlat
stos
loop
lods
lahf
push
imul
mov
jae
fcmovnu
adc
js
jmp
les
out
jbe
cld
add
sbb
in
lahf
inc
daa
mov
dec
jg
rol
aam
jle
pop
cmp
sub
lock
cmps
mov
and
in
mov
fs
(bad)
loopne
adc
pushf
fisub
cwde
sti
jbe
adc
(bad)
dec
mov
cmp
xchg
mov
dec
push
scas
jb
sub
dec
out
rol
aaa
jae
test
fild
ffree
enter
jge
das
mov
ins
dec
push
xchg
inc
sar
pop
std
jmp
add
mov
dec
(bad)
cmps
(bad)
or
and
dec
ds
pusha
xor
stos
add
fwait
cld
lahf
add
cmp
ret
je
scas
rol
ret
retf
mov
arpl
(bad)
cmc
daa
adc
mov
sub
fisubr
xchg
mov
aas
mov
addr16
or
mov
add
repz
(bad)
mov
(bad)
jle
mov
and
push
ret
xchg
or
cmps
xchg
stos
mov
xchg
out
shl
fisubr
pop
xlat
out
das
sbb
xchg
out
pop
loopne
inc
dec
adc
ret
cmp
mov
loopne
mov
sub
ret
push
repz
dec
nop
xchg
test
sub
ret
sub
mov
call
pop
xor
ret
jp
in
xor
mov
pop
iret
imul
mov
adc
sub
adc
hlt
arpl
push
and
pop
cmp
or
pop
loope
jg
dec
and
mov
cmp
mov
pop
pop
push
leave
dec
iret
loop
cmp
mov
adc
xchg
cli
jge
ret
ins
adc
(bad)
xchg
mov
and
das
test
sbb
mov
fist
xchg
aad
or
js
dec
pop
jle
xchg
loopne
mov
inc
cmps
add
cmp
fistp
mov
inc
cmps
test
pop
mov
cmp
mov
sub
adc
fwait
test
lock
mov
jne
not
xchg
cld
push
push
mov
and
iret
gs
out
push
push
adc
xchg
add
adc
jne
adc
fidivr
mov
add
mov
leave
aaa
mov
cmp
mov
movs
test
adc
es
sub
push
push
add
dec
adc
(bad)
push
pop
(bad)
sbb
sbb
mov
neg
inc
adc
and
jmp
or
outs
mov
daa
mov
rcr
dec
ja
sbb
push
cmp
(bad)
sbb
out
mov
sbb
pop
inc
push
pop
(bad)
cmp
inc
mov
or
int3
jg
sbb
mov
push
in
aad
jo
sub
call
sbb
pop
les
mov
add
xchg
rcl
sar
stos
fsubr
clc
sti
rcr
mov
jns
sti
dec
and
sub
test
shl
in
cmps
call
retf
xor
iret
out
fmul
mov
outs
sub
mov
fadd
push
xchg
clc
data16
or
jmp
int
call
addr16
mov
int
pop
in
int3
iret
mov
mov
lds
jle
xchg
xchg
mov
cmp
(bad)
lahf
mov
mov
enter
nop
adc
jo
xor
add
call
jb
sti
ret
push
mov
mov
mov
xchg
test
cmp
in
inc
mul
push
pop
adc
cs
js
or
xor
(bad)
push
mov
loope
test
mov
cmc
push
pop
call
inc
rol
jne
mov
loop
sub
add
and
cmc
xor
outs
nop
cld
xor
dec
jl
sub
sar
shl
push
ror
(bad)
cmp
cli
cmp
test
cmp
lahf
adc
rcr
sub
outs
(bad)
xlat
in
mov
test
popf
mov
loopne
addr16
inc
xor
xchg
mov
shl
das
pop
clc
and
jge
sti
cmp
jo
add
in
mov
xor
imul
lea
sbb
mov
jne
sahf
cs
or
mul
xor
mov
mov
mov
std
out
dec
xchg
sbb
in
cmp
rcl
adc
push
mov
gs
cli
xlat
or
cmovbe
add
mov
into
cmp
sub
arpl
mov
enter
call
aas
jecxz
jnp
stos
loope
and
in
aaa
jmp
jo
or
in
cwde
dec
inc
pop
cmp
mov
sbb
stc
mov
dec
pop
scas
sar
into
xchg
cdq
jbe
std
mov
push
mov
mov
sbb
adc
adc
inc
ins
xor
adc
lea
push
jecxz
fsubr
dec
ins
popf
aaa
cld
loop
jle
rcr
cmp
inc
sbb
pop
push
pop
dec
adc
push
jge
test
jmp
icebp
jecxz
(bad)
test
adc
mov
punpckldq
push
js
inc
stc
sub
enter
popf
imul
(bad)
int
fwait
inc
fs
adc
cmc
xchg
fsubr
aam
or
imul
cmps
pop
adc
retf
rcl
mov
jge
call
mov
mov
or
jge
nop
loopne
nop
imul
cmps
push
int3
fsubr
mov
adc
int
mov
scas
add
pop
mov
mov
dec
pop
add
adc
dec
adc
inc
mov
int3
sbb
push
popa
xchg
push
test
fadd
jle
xor
stos
xor
adc
xchg
jmp
in
mov
push
mov
mov
and
sub
push
push
enter
shl
dec
(bad)
and
mov
xor
(bad)
dec
clc
add
dec
xor
loop
cmp
dec
xchg
push
mov
mov
stc
test
dec
mov
mov
cmp
je
and
adc
call
cmps
popf
(bad)
daa
test
mov
inc
mov
fidivr
les
fisttp
push
stos
cmc
jne
cdq
sub
xchg
iret
jle
(bad)
(bad)
call
(bad)
sahf
push
int3
inc
(bad)
and
mov
cdq
das
(bad)
push
add
jae
jb
out
mov
add
popa
dec
mov
mov
pop
mov
dec
push
jns
or
push
dec
cmp
sbb
scas
ds
aaa
adc
cmp
ins
mov
jbe
pop
es
rol
imul
jmp
mov
mov
mov
mul
cmp
add
imul
gs
or
imul
ins
mov
xchg
stos
xchg
xchg
pop
dec
or
fimul
mov
lds
arpl
js
xchg
dec
ins
xor
mov
xor
imul
xor
(bad)
(bad)
xchg
adc
mov
ins
add
cmp
ret
popf
fist
add
ins
movs
mov
pop
icebp
sbb
inc
int3
or
or
stc
imul
mov
rol
jo
fadd
movs
ss
adc
jl
cmps
int3
test
shr
push
cmp
scas
test
mov
test
arpl
out
xor
push
popf
mov
xchg
arpl
lock
jnp
fistp
adc
ret
fwait
in
adc
adc
add
pop
jle
mov
and
mov
jbe
and
fld
cmp
inc
loope
test
aam
xlat
movs
xchg
fwait
aas
adc
or
add
into
add
fwait
sbb
es
fmul
cmp
(bad)
(bad)
mov
pop
lahf
ins
inc
dec
mov
mov
inc
mov
add
lods
inc
mov
pop
mov
push
out
lds
push
hlt
adc
mov
adc
add
outs
sub
sub
into
cmp
mov
popf
jmp
mov
inc
mov
push
popa
retf
cmp
loop
mov
mov
lahf
loope
repz
xor
inc
xor
dec
adc
adc
cmps
in
push
and
lods
jnp
sub
cmp
aad
aaa
das
or
in
out
cs
mov
jo
retf
mov
adc
mov
ja
mov
xchg
imul
inc
push
test
push
mov
fcomp
ja
mov
cmc
inc
jge
xchg
movs
mov
push
mov
les
jmp
lds
icebp
or
cmps
mov
mov
mov
(bad)
xchg
scas
jmp
fisub
mov
out
mov
cmp
xor
hlt
cmc
aaa
mov
movs
xor
adc
cmp
push
xor
cmc
lods
imul
loop
or
adc
add
fistp
adc
ss
je
adc
call
ret
(bad)
fidiv
cdq
arpl
int3
cmps
and
fisubr
ins
push
mov
add
into
mov
jmp
dec
add
xlat
xchg
add
stos
mov
enter
scas
pop
xchg
mov
jae
loopne
mov
(bad)
jnp
mov
sbb
lods
outs
(bad)
test
mov
push
mov
inc
repnz
add
xchg
(bad)
in
pusha
js
imul
cmp
inc
(bad)
mov
inc
xlat
ret
ret
jb
add
daa
xor
addr16
aas
enter
daa
dec
cmp
pusha
aas
rcr
call
push
addr16
jno
in
imul
xlat
jbe
xchg
imul
ss
pusha
or
adc
inc
dec
loopne
loop
and
jl
pushf
shl
push
push
rol
sets
cmp
(bad)
cli
mov
or
inc
vaddps
jns
(bad)
test
dec
sbb
push
shr
xchg
mov
(bad)
clc
sahf
sub
mov
call
xchg
and
and
fs
rcl
std
rcr
cmp
clc
sar
fdivp
push
les
clc
retf
jb
lea
or
pop
push
fisubr
sar
cs
fild
mov
je
dec
loopne
inc
pop
sti
ds
pop
push
fisub
xchg
aam
retf
cdq
sub
xlat
in
inc
and
inc
shl
stc
pop
test
or
sahf
jle
mov
paddusb
inc
movs
mov
mov
dec
rol
int3
jb
mov
dec
fs
popf
retf
pop
dec
jae
rcr
test
mov
fsub
jmp
xlat
iret
aas
jl
jmp
push
jmp
fistp
xchg
sti
fwait
sub
imul
mov
rcl
pop
push
shl
cmps
ret
lods
xor
mov
shl
out
xchg
fwait
mov
adc
mov
and
mov
sar
cmps
xchg
sub
push
(bad)
scas
sub
lods
push
sbb
inc
pop
inc
xor
stos
push
dec
enter
push
nop
dec
mov
mov
imul
fwait
or
(bad)
sub
jns
xchg
imul
jmp
dec
or
in
es
mov
stos
pop
outs
retf
rcl
push
outs
sbb
pop
sbb
es
mov
jmp
jb
daa
mov
loope
add
pop
ins
or
adc
push
xchg
jg
mov
fst
std
mov
push
rep
ds
sbb
and
addr16
xchg
sub
mov
jmp
ror
dec
mov
mov
in
sahf
lods
and
inc
jg
mov
imul
mov
jmp
sbb
loope
(bad)
loopne
out
mov
ret
les
fimul
(bad)
dec
jmp
(bad)
fs
or
sub
xchg
js
sar
push
xchg
(bad)
sbb
sub
push
xchg
mov
sbb
add
push
jle
fs
leave
(bad)
jae
rcl
xlat
stos
and
das
mov
ret
popf
fadd
sbb
fisubr
or
sbb
repz
xor
push
les
pop
add
cmc
xchg
mov
inc
and
inc
sbb
out
push
jle
or
test
mov
ret
pop
ins
sahf
adc
push
imul
inc
mov
rcr
pmaxsw
mov
aaa
xchg
add
add
cmc
xchg
inc
add
mov
or
ret
cmp
pop
retf
mov
push
into
cwde
cdq
xchg
pop
retf
int3
adc
push
outs
cmps
cld
and
push
aam
xor
add
mov
lahf
clc
es
fdivr
(bad)
loope
add
jno
add
sbb
mov
imul
xlat
jae
jmp
pushf
pop
rcl
pop
cmp
jle
push
cld
mov
xor
mov
sbb
cli
mov
fs
sbb
xor
mov
fmul
bound
mov
ror
imul
cmp
test
mov
pop
retf
out
hlt
mov
je
shl
mov
movs
jecxz
aaa
sub
ror
cmc
pusha
pop
jecxz
scas
mov
cmp
out
fistp
test
mov
arpl
shr
jmp
lods
mov
pop
cmp
and
into
test
mov
aad
jae
and
mov
sbb
mov
shl
and
and
enter
cmp
mov
mov
stc
push
lea
mov
mov
scas
fist
pop
sbb
movs
xchg
mov
js
jb
adc
into
mov
test
test
push
imul
cmps
inc
sub
jmp
dec
and
xor
imul
daa
fimul
lds
and
into
pop
std
das
xlat
mov
push
and
mov
cdq
loopne
jo
fwait
ja
and
call
mov
dec
fnstenv
push
sar
repz
(bad)
popf
pop
or
cmc
fstp
test
push
jbe
or
xor
sbb
pop
sub
jle
and
or
aam
ror
imul
ror
fmul
push
outs
xor
cwde
mov
xchg
loopne
or
jae
xor
jmp
cmc
test
shr
sbb
push
sub
aam
stos
out
and
xchg
stos
xchg
out
cwde
das
popf
xchg
cmp
clc
mov
fisubr
sub
add
or
imul
stc
dec
loop
aaa
fisubr
mov
xor
mov
mov
sbb
(bad)
jns
adc
sbb
add
lods
push
imul
mov
dec
and
adc
adc
xor
or
popf
adc
(bad)
retf
cld
fcomp
outs
sub
loopne
xchg
loop
sub
pop
or
xor
mov
add
das
fistp
(bad)
addr16
adc
nop
xor
and
push
sbb
test
call
test
cs
fdiv
loopne
ret
cwde
std
repnz
(bad)
cmps
cmp
mov
stos
inc
pop
push
pop
test
in
mov
leave
enter
lods
in
ins
stos
lea
xor
adc
xor
pop
clc
(bad)
add
push
and
dec
push
cmp
or
push
ds
icebp
fdiv
std
xchg
mov
dec
mov
pop
lock
pop
jle
or
pushf
sbb
lods
adc
or
ret
jbe
sbb
in
push
shl
stc
mov
lea
mov
out
inc
add
and
jmp
jmp
outs
test
sti
sub
cmps
pop
cld
add
les
cmps
int3
mov
retf
fidivr
sbb
mov
pop
or
outs
dec
pop
jle
mov
je
inc
loop
sbb
push
inc
jecxz
or
call
cmps
call
mov
ret
test
mov
(bad)
call
mov
xchg
cwde
mov
jecxz
mov
sbb
add
or
or
adc
cdq
mov
push
ss
cmp
xchg
dec
push
pop
add
test
loop
sub
jne
icebp
or
cmc
cmp
xchg
or
lods
sbb
clc
sti
les
retf
mov
inc
stc
(bad)
mov
into
test
cmp
aas
retf
xor
pop
cmp
dec
add
ds
cli
repnz
inc
into
fs
push
sbb
or
adc
mov
call
loop
test
(bad)
push
rcr
sbb
push
arpl
cmc
lea
enter
inc
test
mov
push
ss
xor
aam
add
sbb
call
jg
fwait
movs
pop
sbb
fs
jmp
je
mov
adc
sub
or
call
sub
fdivr
push
jo
mov
js
push
shl
aad
stos
mov
or
jnp
jle
pushf
mov
dec
push
pop
xor
push
bound
data16
aaa
adc
aas
outs
enter
call
adc
sbb
aam
mov
mov
(bad)
pop
push
xor
in
pop
fild
dec
out
and
fs
mov
mov
sub
cli
xor
pop
push
mov
ja
lods
jne
or
mov
mov
fbld
and
hlt
or
dec
pop
mov
mov
dec
push
xor
mov
sub
sbb
test
sbb
inc
test
mov
out
in
jb
xchg
lahf
aaa
dec
xchg
clc
push
(bad)
stc
pop
or
xchg
shl
mov
(bad)
cmps
lods
aas
push
sub
mov
xor
lods
xchg
std
push
sahf
mov
pop
jmp
scas
scas
jb
and
xor
cmps
cmc
mov
and
sar
xchg
pop
or
mov
pop
push
mul
cdq
adc
icebp
jmp
add
fld
in
fbstp
push
mov
cdq
and
dec
adc
scas
aad
dec
div
mov
out
sbb
arpl
xchg
bound
mov
and
push
inc
mov
mov
fnstcw
dec
dec
ret
jp
jg
push
mov
sub
mov
popf
ja
(bad)
in
scas
add
xlat
inc
out
sub
jle
fwait
adc
dec
xchg
pop
mov
sbb
xchg
rcl
adc
pop
test
xchg
aaa
mov
clc
out
jge
pop
jle
ret
es
div
cmp
jb
lods
lahf
and
lock
xchg
xchg
push
sbb
sbb
inc
mov
shl
jne
js
xchg
data16
sub
inc
jl
out
jge
pop
repz
push
loopne
and
adc
stos
mov
dec
or
popa
push
and
(bad)
sub
xchg
cmp
pop
std
(bad)
xchg
xchg
mov
xchg
pop
sbb
daa
mov
xchg
jmp
bsr
pop
clc
lea
in
les
out
push
movs
and
(bad)
and
(bad)
mov
dec
push
sbb
gs
add
sahf
lds
aas
fiadd
test
popa
clc
into
cmc
push
jecxz
mov
adc
pushf
int3
pop
mov
sbb
jge
je
push
xchg
(bad)
jmp
(bad)
dec
cmp
jle
(bad)
call
out
jmp
loopne
and
pop
sbb
dec
push
sub
into
test
repz
fwait
xor
cdq
aaa
sub
imul
or
jb
inc
pusha
fsubr
or
inc
imul
pop
jecxz
dec
fldcw
mov
adc
push
cdq
and
jecxz
mov
lods
inc
imul
ret
out
dec
retf
aaa
scas
xchg
or
mov
jecxz
test
in
xchg
pusha
xchg
mov
dec
(bad)
mov
in
or
retf
or
xor
cmps
pop
add
dec
into
clc
arpl
push
cmp
mov
leave
xchg
pusha
js
dec
popf
inc
xor
das
jbe
fistp
jae
jae
inc
mov
sbb
jo
scas
(bad)
xchg
dec
lea
xor
xlat
clc
jno
mov
inc
std
cld
popa
shr
sbb
out
iret
div
cmp
mov
movs
std
mov
inc
adc
inc
dec
cdq
adc
call
or
xor
(bad)
or
push
cmps
in
cmp
mov
aam
es
stc
je
cmp
mov
mov
stc
push
mov
jbe
xchg
fstp
lods
and
bsr
(bad)
div
push
movs
nop
push
jne
outs
jg
out
xor
pop
fidiv
push
scas
loop
sbb
hlt
add
dec
aas
in
jp
xchg
lea
loope
in
and
cmp
gs
jne
popf
push
fst
push
lea
dec
mov
sub
pop
loop
sbb
out
mov
adc
inc
jo
mov
xlat
sub
sub
cmps
adc
and
pop
push
in
aaa
dec
iret
fcomp
pop
fcmovb
ret
xor
jp
(bad)
lods
std
loope
mov
push
push
xchg
jnp
bound
dec
pushf
or
fxch
jecxz
jne
and
push
std
push
imul
mov
call
and
mov
jmp
cmp
cmp
pop
xchg
xchg
icebp
jbe
gs
fdiv
std
fnsave
(bad)
jne
inc
(bad)
pushf
fld
xchg
lods
loop
add
adc
stc
jbe
cwde
fwait
out
in
das
retf
(bad)
repz
jno
push
jecxz
mov
(bad)
ds
push
xor
add
dec
popf
je
es
mov
outs
pop
and
in
sub
mov
adc
iret
loop
stc
cmp
inc
aas
mov
jo
jg
cs
scas
mov
gs
mov
pop
mov
scas
test
push
retf
mov
pop
push
or
idiv
jns
xchg
sar
adc
pop
adc
push
out
cmp
inc
rol
fisttp
fdiv
fimul
lods
aad
add
les
add
mov
mov
sub
fwait
cmc
(bad)
mov
jne
pop
sub
mov
or
mov
add
int3
mov
icebp
push
out
je
push
mov
lods
push
imul
out
adc
xchg
jbe
push
sub
fstp
pop
sub
mov
in
fmul
mov
pop
xchg
ret
sub
xor
pop
fist
push
scas
ret
adc
mov
call
or
adc
test
cmp
or
in
fbstp
and
ja
push
sub
mov
int
lahf
fstp
sbb
bound
gs
push
jecxz
in
mov
inc
imul
push
xor
and
std
fs
(bad)
mov
je
cmp
(bad)
mov
ds
cmps
call
xor
adc
outs
sbb
xchg
dec
stos
and
and
sbb
push
xor
mov
(bad)
repz
scas
scas
or
or
and
(bad)
adc
ins
and
jl
mov
jnp
(bad)
xchg
sub
cli
loopne
xchg
lds
pop
mov
stos
mov
ror
jmp
add
mov
adc
xchg
mov
jns
jl
push
out
mov
ss
movs
(bad)
lea
out
dec
lods
fs
rcl
bnd
dec
pop
(bad)
dec
fild
pop
fsubr
jl
call
sbb
aas
call
stos
daa
mov
and
loopne
rcr
out
xchg
in
sar
aas
ret
xchg
jmp
(bad)
in
sbb
adc
xchg
mov
aaa
cmc
lods
push
(bad)
aaa
xchg
sbb
enter
adc
xor
mov
and
movs
bound
shr
and
cmp
add
movs
out
out
adc
(bad)
in
leave
ins
mov
cmc
mov
stos
cmp
xlat
mov
loope
jb
cmp
add
sbb
call
fs
push
cmps
test
nop
fild
pop
cmps
xor
ins
int
and
mov
enter
push
(bad)
mov
fs
and
out
push
stos
jmp
pop
ins
cmc
sbb
imul
out
imul
nop
adc
and
call
out
mov
rcr
push
test
shr
xor
sbb
jg
jle
jo
or
jl
lds
ss
mov
in
push
xor
sub
mov
sub
test
add
stos
dec
jnp
fwait
pop
call
or
imul
xchg
loope
out
mov
cmp
bound
adc
gs
lahf
sub
cmp
movs
inc
inc
retf
pusha
ins
inc
out
cs
jecxz
les
xchg
push
adc
mov
push
cmps
fld
push
inc
xchg
imul
sbb
inc
sti
mov
retf
iret
inc
fsub
mov
jo
push
jae
pop
sub
pop
mov
lods
dec
sbb
aaa
push
xchg
(bad)
retf
out
add
adc
sbb
push
sub
sbb
stos
inc
ds
and
or
shl
inc
inc
push
inc
cmp
cwde
adc
xchg
xchg
jno
mov
add
sub
pop
mov
cmp
mov
out
xchg
enter
add
xor
or
sbb
push
test
jmp
cmp
cmp
add
loope
jns
cmp
add
sbb
or
clc
sbb
sbb
sbb
mov
fs
cmc
push
lods
cs
sub
daa
daa
add
xchg
movs
loop
jle
(bad)
mov
pop
xor
stc
in
pop
lds
xlat
adc
aaa
aam
bound
cmp
push
fstp
add
push
sbb
inc
outs
test
push
ins
lods
pusha
es
cmp
jns
call
mov
ret
pop
sub
sbb
dec
jno
das
xor
xor
(bad)
mov
xlat
pop
movs
push
fild
repz
pop
pop
fidiv
xchg
ja
jbe
out
and
fs
mov
out
mov
fld
aas
repnz
retf
adc
lods
nop
sub
(bad)
call
dec
(bad)
cmp
and
movs
sub
shr
into
pop
fiadd
pop
repz
and
cmp
arpl
popf
aad
dec
aam
mov
imul
or
popa
cmp
loop
cs
cmp
or
cmp
ins
and
and
cmp
jl
scas
jo
outs
(bad)
xlat
call
cmp
cmp
xchg
nop
enter
jo
aam
push
mov
mov
sahf
push
adc
lods
mov
add
xchg
fsubrp
loopne
mov
shr
cmc
test
fisub
xor
sub
test
mov
mov
or
ja
and
push
pushf
jg
lods
mov
push
sbb
popa
mov
xor
repz
leave
jb
mov
frstor
mov
xlat
sbb
stc
pop
test
push
adc
mov
and
fist
(bad)
mov
pop
push
aaa
sbb
pop
or
pop
sti
inc
ds
cwde
sub
jbe
arpl
leave
in
sub
int3
mov
popfw
aam
mov
adc
loop
xor
push
push
sar
pusha
rcr
and
jno
int
jmp
loopne
cld
mov
sar
sbb
push
call
cmp
jne
loope
test
or
movs
dec
rcl
sbb
int
js
inc
dec
add
(bad)
sub
cmovp
in
hlt
retf
bound
ret
or
or
(bad)
push
test
mov
dec
test
cmc
stos
sahf
xor
cmp
or
int
movs
push
nop
ror
rcl
in
push
in
push
stos
pusha
xchg
popf
sahf
xchg
ins
xchg
lock
push
iret
dec
fidivr
dec
cli
repz
xor
frstor
jb
sub
xchg
sbb
fld
int3
arpl
call
mov
cli
sbb
push
jge
clc
dec
fisubr
and
lods
ja
aas
jne
cmp
shr
int
and
jb
jns
mov
mov
sahf
ins
lahf
and
into
push
fistp
fidivr
push
cmp
or
stos
push
jge
sti
mov
xchg
push
xchg
test
add
inc
push
pop
lock
stos
push
cwde
push
adc
hlt
sti
mov
ss
sbb
out
popf
pop
inc
pop
dec
(bad)
call
popa
fwait
xor
dec
bts
pop
push
dec
fcmovb
loop
jnp
popa
add
nop
and
mov
jecxz
jle
daa
gs
imul
repz
dec
shl
bound
dec
ja
mov
fisttp
mov
and
mov
(bad)
adc
(bad)
lahf
imul
aad
adc
add
aam
outs
ret
xor
lods
fiadd
dec
mov
mov
aaa
push
mov
adc
xchg
loop
fimul
outs
or
aas
fsubr
sub
ror
aad
jmp
in
mov
mov
fcom
mov
ror
mov
in
pop
test
push
out
cmp
add
sub
dec
push
xchg
xlat
ds
add
add
hlt
jo
mov
retf
js
push
fdivr
and
inc
jle
push
in
or
jmp
dec
stc
fbstp
or
push
pop
cmps
jl
or
stos
sbb
sub
push
fistp
mov
pop
add
adc
les
pop
ficomp
and
dec
xor
stos
and
mov
adc
add
sub
fwait
xchg
mov
cdq
xchg
es
sub
idiv
or
das
push
inc
jmp
inc
test
push
dec
push
mov
(bad)
pop
add
xchg
ds
or
fbstp
push
inc
cmp
xchg
push
paddb
cmp
inc
(bad)
rol
xchg
adc
iret
out
adc
add
xlat
mov
inc
xor
repz
adc
jge
xlat
test
mov
loope
and
xchg
jle
sub
jl
xchg
or
xor
addr16
mov
or
(bad)
in
nop
stos
into
neg
mov
retf
bound
pop
(bad)
in
pop
popa
lock
mov
nop
das
push
or
mov
jb
mov
mov
loopne
pop
adc
leave
inc
nop
daa
add
mov
adc
xchg
sub
and
jle
ins
(bad)
inc
das
inc
or
scas
lock
fucomi
imul
add
movs
in
outs
retf
xor
je
add
not
loope
or
mov
jns
mov
mov
fninit
in
(bad)
ins
out
push
ds
mov
adc
loopne
mov
lods
lock
fwait
ins
jl
std
or
out
sbb
jnp
adc
cs
mov
jmp
cmps
mov
xor
movs
push
xor
mov
addr16
call
mov
jge
add
sub
rcl
mov
add
pushf
scas
addr16
lods
(bad)
out
sub
iret
scas
in
sti
sbb
sbb
iret
xor
mov
daa
addr16
clc
gs
into
mov
das
or
imul
push
das
inc
mov
mov
fs
mov
xchg
cld
mov
add
push
sbb
mov
ins
jg
ret
mov
stos
test
add
lea
cmp
fbld
push
(bad)
sbb
adc
jp
pop
jmp
icebp
adc
outs
setle
pop
bound
retf
jmp
or
jne
scas
or
mov
or
and
and
jl
mov
pop
fwait
mov
inc
cmp
in
and
in
imul
inc
add
add
dec
push
mov
in
xchg
loope
and
enter
mov
inc
cmps
adc
adc
(bad)
mov
push
mov
stos
xchg
mov
inc
jp
and
mov
mov
ror
lods
leave
fmul
xchg
mov
ds
mov
das
dec
dec
jmp
lock
ss
add
shl
out
std
jp
adc
cmps
mov
in
jmp
test
sbb
(bad)
xor
mov
xor
or
and
(bad)
push
pusha
mov
ror
and
mov
iret
sub
cmp
and
jecxz
popa
adc
xchg
fwait
and
enter
out
(bad)
repnz
in
call
push
fwait
mov
mov
(bad)
scas
sub
push
(bad)
sti
dec
mov
jne
fimul
sub
test
pop
or
add
lods
sub
je
lock
add
sub
add
pop
pop
push
jb
arpl
dec
sub
cmp
mov
push
adc
mov
push
sti
cdq
icebp
stc
cld
pmullw
mov
push
retf
xor
jno
sbb
jecxz
xor
pushf
dec
rcr
push
nop
fnsave
mov
repnz
icebp
out
leave
adc
outs
pusha
pushf
inc
gs
push
mov
xchg
push
cmp
mov
scas
enter
mov
dec
dec
lods
dec
mov
xchg
aam
xchg
cs
or
dec
arpl
push
inc
int3
cmp
fld
pop
mov
std
push
fidivr
idiv
pop
pop
push
pop
aam
mov
fcomp
xchg
jbe
das
mov
push
jge
xchg
push
inc
ss
adc
jne
int
jmp
xchg
loope
(bad)
pop
int3
jp
jl
shl
daa
int
fcomp
jecxz
mov
repz
out
pop
(bad)
push
xor
stc
dec
lods
cmp
sub
add
out
xor
sahf
mov
xchg
repnz
sbb
mov
xchg
test
sysret
js
cmc
mov
cmp
leave
adc
push
xchg
cmp
imul
fwait
movs
movs
dec
dec
icebp
inc
retf
stos
test
(bad)
call
mov
mov
and
aam
sub
sqrtps
mov
mov
jl
fs
lock
lock
rcl
daa
and
xchg
adc
clc
jo
jge
push
ins
scas
pushf
in
jo
mov
adc
cmp
mov
jmp
mov
xchg
cli
scas
inc
mov
scas
sub
cmp
add
jnp
jmp
xchg
or
sbb
push
inc
cwde
or
xor
inc
sar
outs
leave
jle
gs
adc
mov
or
ins
(bad)
call
or
aaa
pop
mov
push
cdq
xchg
mov
push
dec
pop
test
adc
popf
retf
push
cli
(bad)
fcmovnbe
scas
movs
jae
rcr
ins
std
stc
pop
xchg
push
push
repnz
les
push
int
fs
es
out
mov
jne
inc
and
mov
sub
(bad)
mov
push
pop
loope
scas
jle
sub
and
test
xor
je
mov
sub
(bad)
aam
cmc
test
ins
cmp
mov
pop
aas
jae
mov
iret
mov
sti
imul
jne
or
push
or
mov
shr
xor
call
sbb
push
lods
cld
test
popa
div
std
push
pop
pop
and
pop
fmul
jae
pushf
pop
or
test
lds
loop
mov
mul
gs
jae
imul
scas
jns
xchg
xor
pause
fld
dec
into
sbb
add
outs
retf
pop
jb
inc
adc
fld
mov
sub
fldcw
rol
daa
push
xor
retf
stos
cmps
jle
cmp
dec
mov
movs
out
add
xor
cli
outs
fldenv
mov
retf
jae
push
add
iret
jmp
push
ret
ret
iret
in
pop
xchg
ja
pop
movs
xlat
inc
fdiv
imul
in
adc
pop
stos
mov
sbb
stos
ror
lahf
in
(bad)
shl
lahf
adc
(bad)
pop
cmp
and
adc
loopne
dec
sbb
pop
(bad)
in
fwait
pop
xchg
dec
out
mov
(bad)
xchg
mov
push
xor
ds
and
and
xor
or
retf
in
imul
ret
or
lds
push
lahf
jecxz
xor
sbb
mov
iret
mov
pop
dec
add
fistp
add
(bad)
out
addr16
fstp
fdivr
ret
xor
lods
sub
into
xchg
jne
daa
retf
sti
jbe
push
push
retf
pop
jb
pop
inc
xchg
daa
je
fwait
rol
hlt
adc
jne
cmp
out
pop
or
or
jp
aam
in
sub
dec
pop
jg
out
and
iret
in
add
xchg
mov
pop
fstp
adc
mov
retf
xchg
and
add
aam
rcr
adc
xchg
(bad)
mov
mov
add
sub
add
xor
sub
shl
lods
push
lock
in
ret
jge
push
mov
inc
mov
imul
ret
out
add
cs
jecxz
call
out
inc
pop
and
xor
pop
inc
ins
dec
retf
dec
mov
test
mov
push
or
fs
mov
push
ss
jb
loopne
and
rol
push
dec
xor
or
mov
out
xor
xchg
dec
jl
mov
adc
(bad)
pop
cmc
daa
xchg
test
sub
inc
(bad)
in
push
cwde
pop
mov
add
mov
shl
leave
jge
imul
(bad)
jmp
push
jb
sbb
push
cwde
xchg
ret
xor
imul
out
pop
sar
cmp
mov
and
enter
pop
jb
sbb
mov
pushf
std
fnstcw
std
fwait
shl
cmp
mov
dec
enter
or
cmp
(bad)
jge
imul
ss
lods
imul
test
cmp
xor
jg
push
into
xchg
sbb
mov
(bad)
fdivr
(bad)
lock
popa
rcr
xchg
fmul
jno
inc
xchg
cmp
xchg
and
stc
add
aaa
sahf
loopne
push
push
shl
aaa
in
inc
xchg
lahf
ss
retf
jl
sbb
stc
test
mov
stc
mov
sub
in
out
popf
mov
cmp
dec
(bad)
imul
push
daa
out
daa
pusha
pop
mov
leave
adc
test
(bad)
jbe
(bad)
sahf
sbb
lds
or
popa
push
dec
(bad)
(bad)
push
dec
xchg
xchg
mov
jl
imul
sub
push
or
jno
clc
jno
and
loop
pop
sbb
stos
(bad)
call
jge
mov
cmp
xchg
test
cmp
lahf
gs
dec
xchg
push
sub
daa
dec
aam
(bad)
mov
shr
(bad)
test
cmp
sbb
jle
pop
inc
cmc
adc
es
pop
push
mov
je
cmp
pusha
or
jl
movs
cmps
pop
pop
loope
ja
cld
mov
scas
test
stos
nop
add
iret
je
pop
ds
jno
in
in
sti
jge
jmp
out
(bad)
adc
loop
std
xchg
scas
lods
out
shl
sbb
ret
sbb
data16
shl
pop
lahf
xor
pusha
popf
dec
xchg
mov
lods
xlat
pop
mov
add
xchg
pop
pushf
mov
into
repnz
pop
call
aad
arpl
aam
ins
inc
cdq
into
or
mov
push
call
out
sbb
(bad)
jnp
std
cmp
cmp
jno
sahf
hlt
xchg
xlat
movs
and
fimul
rol
inc
push
out
xlat
and
jnp
bnd
lods
cmp
jnp
cwde
adc
pop
imul
jl
and
mov
mov
inc
xchg
mov
scas
jo
call
xor
push
xor
xchg
sub
rcr
movs
xchg
add
popf
in
mov
pop
mov
das
mov
inc
mov
add
sar
pop
rol
add
pushf
mov
rol
cmp
loope
hlt
in
out
repnz
loop
sbb
retf
fimul
cmps
fcom
fucomi
fs
jmp
inc
call
enter
add
(bad)
adc
add
cli
sub
xor
aas
or
push
adc
cld
test
jbe
push
pop
in
pop
sar
mov
pop
lods
xchg
ss
or
xchg
sbb
sti
cli
mov
ret
clc
inc
sub
stos
mov
test
(bad)
cmp
je
cld
stos
(bad)
(bad)
xchg
das
jmp
push
fwait
loop
(bad)
mov
xlat
pop
adc
mov
sbb
ins
mov
pushf
imul
pop
mov
mov
push
bound
pop
fistp
sub
jb
and
mov
sar
nop
pop
adc
pop
jp
push
push
je
inc
mov
movs
sbb
dec
(bad)
pop
mov
loope
(bad)
adc
hlt
cmps
fist
push
hlt
mov
and
sti
jno
pop
int
xor
pushf
add
push
outs
mov
popf
jne
inc
jl
sub
jp
pop
inc
inc
test
aaa
cs
xor
mov
ins
movs
daa
lahf
add
mov
jge
cld
jbe
jbe
les
mov
daa
retf
mov
fcomp
xchg
cli
xor
hlt
stc
add
int
and
ins
leave
daa
pop
stos
loop
xor
mov
adc
sbb
dec
scas
popa
inc
pop
inc
mov
iret
repnz
outs
loopne
push
das
rcr
movs
repnz
xor
sahf
push
pop
push
jns
retf
cmp
outs
add
or
cmc
push
cld
in
cmp
movs
loop
cmp
fiadd
push
mov
pop
shl
cmp
popa
fadd
push
jge
sbb
ds
or
mov
or
cmc
je
or
dec
adc
sub
add
repnz
push
shl
test
mov
fwait
popa
call
sbb
call
scas
sbb
and
adc
mov
retf
sbb
and
adc
push
jmp
sbb
jbe
scas
pop
mov
pop
mul
and
pop
jmp
sub
inc
and
movs
stc
mov
mov
push
pop
sbb
test
mov
xor
ret
mov
je
sub
out
hlt
mov
push
push
(bad)
jns
js
pop
adc
jmp
jmp
push
pusha
movq
push
dec
shl
sub
sbb
mov
imul
aas
and
pop
inc
scas
adc
bound
repnz
repz
mov
mov
mov
inc
jle
xor
je
inc
fnsave
int3
cmp
adc
add
xchg
xor
sbb
fcom
sub
cs
add
lods
outs
push
fstp
fimul
adc
(bad)
sti
fdivr
outs
(bad)
aas
mov
(bad)
popf
jmp
les
add
test
jle
pop
adc
fnstsw
cmp
cmps
rcr
in
mov
dec
in
dec
xchg
cmp
scas
adc
ja
sbb
inc
jmp
cmp
pop
dec
push
and
cmps
dec
add
stc
imul
aam
adc
or
mov
or
mov
dec
xchg
xchg
push
mov
in
(bad)
jae
dec
or
mov
push
dec
aam
adc
retf
repnz
aas
fiadd
outs
ss
sbb
inc
mov
repnz
addr16
imul
shl
sti
sub
sti
mov
out
nop
dec
add
cmc
push
xlat
dec
shl
and
push
push
and
(bad)
xchg
(bad)
push
aaa
shl
cmp
push
mov
std
push
cs
arpl
aam
jle
push
sub
xlat
call
rol
mov
and
stos
ins
in
xor
ja
mov
xor
push
test
mov
outs
sub
retf
inc
bound
dec
xchg
push
jo
dec
fisttp
gs
sbb
loopne
push
pop
(bad)
scas
scas
adc
or
test
pop
inc
ss
ins
mov
fwait
mov
popa
mov
push
cmp
pop
pusha
dec
aas
or
sub
fcomp
sbb
scas
movs
int3
jmp
imul
xor
and
sbb
call
fcomp
pop
sahf
aad
repnz
(bad)
retf
ror
(bad)
repnz
(bad)
loop
fimul
lock
sbb
inc
ds
cmp
daa
push
test
xchg
mov
mov
cmps
call
out
adc
sar
or
push
dec
jg
xor
adc
xchg
repnz
mov
aad
push
add
inc
int
xchg
mov
stos
lds
or
pop
test
adc
lods
sbb
sbb
loopne
pushf
jae
stos
inc
add
add
call
ins
push
xor
out
mov
cwde
pushf
add
not
dec
jb
test
add
mov
lds
xchg
lock
ss
fstp
imul
xchg
add
push
ficom
pop
out
cwde
adc
dec
push
ret
push
aad
icebp
daa
mov
push
xor
les
mov
cmp
paddb
jns
jnp
mov
hlt
add
xor
(bad)
gs
push
pop
retf
mov
dec
mov
shl
out
jp
aam
push
or
dec
dec
arpl
jp
mov
mov
rcl
jge
imul
jns
jp
dec
add
mov
fidiv
js
and
dec
inc
fisubr
xor
dec
sub
cmps
movs
lea
sti
xchg
out
mov
add
sti
cmp
mov
stc
gs
enter
inc
stc
cmp
and
mov
pop
mov
add
mov
stos
dec
add
add
adc
(bad)
out
aam
mov
add
ja
gs
pop
mov
xchg
outs
pop
add
out
cmps
retf
mov
nop
dec
int
push
mov
gs
push
cmc
jmp
mov
imul
addr16
cmc
jle
fdivr
(bad)
push
adc
das
(bad)
std
and
ins
mov
and
inc
arpl
cmp
or
(bad)
lds
pop
ror
inc
int
mov
dec
pop
aad
adc
sub
das
fldenv
sub
movs
pop
rcl
mov
sbb
fild
div
inc
js
(bad)
pop
and
and
or
cmp
cld
cmp
xchg
ss
xor
push
sub
xlat
test
pop
iret
sbb
mov
jmp
push
ffree
xor
jmp
ds
mov
mov
sub
cwde
stos
out
aam
pop
xchg
pop
xchg
cmp
inc
push
call
enter
out
test
inc
pop
rcr
mov
or
and
adc
xor
ds
enter
je
push
popa
inc
mov
jno
and
mov
mov
push
retf
inc
outs
in
outs
fild
repnz
ss
xchg
jl
and
mov
mov
jo
lock
cmp
(bad)
fdivr
push
popa
and
xor
sub
out
popa
push
xchg
cmp
arpl
movs
fucomp
in
cmp
sub
retf
shl
jmp
nop
push
push
fnstsw
bound
inc
out
clc
sbb
adc
ds
xor
push
lods
cwde
imul
and
mov
sub
inc
cld
iret
cwde
or
mov
xlat
mov
jle
cmp
retf
repnz
frstor
std
out
xchg
int3
cwde
shl
jnp
lea
pop
or
aaa
xor
out
aam
push
mov
fist
xor
iret
sbb
xchg
test
add
adc
in
add
mov
rol
sbb
xchg
in
dec
inc
push
call
movs
sbb
sub
add
rol
mov
mov
push
jg
movs
inc
xlat
movs
lds
out
mov
inc
lods
dec
sub
fidiv
jbe
lods
daa
cmp
retf
sbb
sbb
push
mov
aam
call
cmp
or
mov
int3
cmp
leave
pusha
icebp
(bad)
push
lods
xchg
adc
stos
mov
nop
push
add
enter
xor
jmp
jo
je
or
neg
xchg
out
cmovbe
xor
jbe
add
mov
push
mov
nop
hlt
ror
or
xchg
inc
inc
xor
pop
ins
pop
gs
pusha
loopne
movs
sahf
add
test
sar
outs
mov
(bad)
stos
es
dec
lock
push
sub
das
test
jp
(bad)
sub
add
scas
lock
dec
loope
(bad)
cs
inc
inc
dec
cld
push
pop
add
mov
sbb
mov
daa
xchg
add
mov
sub
pop
rcl
popf
std
jecxz
jg
push
and
cdq
xlat
pop
mov
xchg
dec
sub
push
xchg
and
outs
(bad)
or
mov
mov
aas
(bad)
cmp
jecxz
or
outs
fwait
xchg
jb
das
call
retf
aad
loopne
dec
shr
and
adc
mov
or
call
pop
xchg
sub
mov
pop
outs
(bad)
or
jge
sub
test
mov
mov
hlt
dec
shl
and
ins
jge
std
mov
mov
cmc
ins
xchg
jle
jb
(bad)
adc
out
jno
push
dec
(bad)
neg
mov
pop
pushf
int
fmul
add
retf
std
and
dec
add
dec
adc
mov
mov
mov
jno
repnz
call
cmp
xchg
xchg
call
push
scas
aam
push
sub
inc
and
(bad)
fld
xchg
imul
popf
mov
cwde
pushf
xlat
or
xchg
pop
idiv
dec
cld
mul
lods
push
daa
call
mov
jbe
iret
adc
cmps
lock
xor
cmp
dec
hlt
(bad)
dec
jo
cwde
in
mov
push
push
adc
xor
lods
test
cwde
adc
je
add
popf
push
cmps
sub
mov
rcl
lods
push
repz
cdq
add
adc
pop
fsub
inc
mov
ror
mov
cli
into
sub
push
adc
push
fst
push
pop
and
mov
mov
mov
hlt
loope
out
stos
(bad)
lock
das
lds
not
jae
in
ficom
xor
call
fsubr
or
adc
outs
bound
mov
scas
lds
cli
lods
and
xor
lods
(bad)
xor
xchg
scas
(bad)
cwde
mov
adc
add
mov
cmp
pop
lods
outs
out
je
mov
dec
add
int
cs
adc
pop
leave
cld
pop
pop
das
out
xchg
xor
add
xchg
or
jl
je
clc
mov
mov
sar
pusha
dec
inc
in
cli
dec
(bad)
test
xor
in
xchg
lahf
push
pop
mov
and
cmps
popa
jl
es
mov
or
and
xchg
fisttp
inc
cmps
push
loop
int3
ja
out
xor
js
pop
(bad)
jl
cs
test
inc
movs
push
xor
loopne
mov
inc
test
and
add
jno
cdq
mov
push
xor
mov
xchg
inc
dec
push
pop
or
mov
inc
arpl
mov
cdq
fistp
mov
mov
lods
fistp
ret
jp
jo
cmps
out
sub
mov
push
loop
dec
dec
push
enter
adc
sbb
or
gs
dec
stc
sub
mov
das
repz
int3
cmp
sub
icebp
mov
cmp
sub
movs
mov
xor
xor
sbb
lock
jmp
mov
mov
fstp
cmps
lods
add
jne
sar
sbb
sub
push
aas
repz
je
in
fwait
xchg
stos
adc
mov
mov
movs
lock
push
sbb
push
(bad)
movs
sar
and
adc
sbb
imul
shl
inc
ins
push
jnp
push
fisttp
cli
daa
scas
out
sbb
dec
movs
punpckldq
out
jg
jo
loope
mov
movs
or
lods
add
scas
loope
jl
sbb
and
int3
push
nop
daa
mov
les
data16
jp
dec
test
pop
dec
aas
pop
add
jp
pusha
jle
ret
lds
nop
data16
cmps
cmps
xor
mov
or
push
pop
sbb
ds
push
stc
neg
cmp
fld
cmc
add
mov
sub
xor
sete
inc
mov
jo
xchg
mov
jle
mov
mov
or
cwde
or
sub
shl
sahf
cdq
fs
push
in
adc
repz
dec
xchg
mov
stos
stc
mov
fbstp
xchg
sub
pop
(bad)
popa
cmp
inc
movhps
cmc
ins
add
mov
test
adc
xchg
dec
pop
test
or
push
jge
cdq
popa
xor
jo
jno
(bad)
fs
jge
cli
push
add
test
mov
jmp
xchg
adc
add
ret
sbb
ret
mov
ret
inc
jo
push
loop
ss
shl
jg
jle
std
mov
scas
mov
data16
xor
(bad)
stc
loopne
xchg
test
into
pop
fcom
(bad)
fadd
arpl
xor
lods
gs
stos
xchg
cmp
sub
push
(bad)
out
test
(bad)
inc
ins
and
movs
jg
cli
jmp
mov
and
add
out
add
cmp
lahf
jecxz
out
loope
pavgw
or
daa
mov
int3
(bad)
in
ins
pop
test
data16
test
ins
dec
mov
adc
inc
sbb
call
daa
aad
cmp
mov
mov
inc
es
inc
es
or
loop
pop
add
adc
cdq
stc
pop
sbb
pop
cmc
and
(bad)
movs
int3
aad
jno
repnz
ret
ja
stc
cmc
mov
cmps
xlat
scas
push
inc
aaa
sub
hlt
xchg
fsubr
in
mov
sbb
xor
push
js
test
push
or
xor
add
sbb
ja
mov
jmp
sbb
cwde
or
push
mov
add
xor
jp
fcmovu
imul
dec
(bad)
mov
retf
mov
push
jge
sub
mov
inc
cmp
jg
ins
pop
(bad)
or
cs
lds
adc
mov
and
stos
cli
fdiv
fcom
(bad)
aaa
xlat
mov
mov
add
mov
inc
jnp
fwait
shl
pop
mov
fdiv
stos
aam
int
sub
xlat
mov
push
or
cli
xchg
xchg
test
push
cs
int3
xchg
inc
mov
push
dec
sbb
loope
jge
inc
int3
mov
sub
shr
ret
mov
and
sbb
push
mov
lea
and
icebp
cmp
add
pop
retf
mov
push
jae
int
and
pusha
cmp
push
sti
in
(bad)
xchg
test
lock
popf
cli
mov
mov
call
mov
or
clc
(bad)
xchg
cmp
mov
ret
fbld
lock
(bad)
cmp
or
ret
jne
fdivr
push
test
jns
cmp
sbb
jg
stos
inc
and
jns
mov
adc
aam
and
in
scas
xor
adc
mov
(bad)
lds
dec
or
lods
call
outs
jno
fld
popf
cmp
out
jp
push
outs
sub
cmp
maxps
je
loope
fidivr
or
ins
daa
movs
pushf
xchg
push
dec
mov
mov
xlat
inc
mov
jne
xor
jne
(bad)
scas
(bad)
ss
enter
popa
inc
dec
push
aaa
inc
scas
ins
xchg
mov
ins
mov
ret
ins
pop
pushf
cmps
sub
dec
leave
inc
push
aaa
fistp
icebp
xchg
mov
loopne
and
cmps
xchg
movs
pop
call
mov
scas
cmps
ret
xchg
test
ins
out
les
(bad)
mov
sbb
cmp
stos
jns
mov
xlat
sbb
scas
mov
xor
inc
mov
bound
push
and
mov
cmp
dec
mov
and
cli
push
push
push
pop
pop
hlt
and
xchg
das
jge
call
clc
jecxz
pop
jae
inc
cmp
jae
sahf
mov
ficom
mov
dec
clc
cwde
aas
mov
test
or
push
sbb
sti
mov
leave
jne
xchg
pop
imul
jne
mov
call
lds
mov
clc
xchg
les
pop
push
stos
lock
iret
jbe
rcl
dec
cmp
retf
pop
scas
mov
dec
imul
sbb
out
cmp
enter
push
enter
inc
dec
hlt
or
arpl
sbb
pop
add
not
dec
out
jmp
jle
xor
outs
xchg
out
mov
pop
stos
pusha
into
pop
(bad)
mov
and
loop
nop
cdq
add
popf
or
xchg
imul
pop
popa
add
hlt
pop
fwait
cwde
xchg
cmp
cmp
dec
mov
mov
mov
pand
sub
bound
pop
jnp
push
repnz
leave
clc
ss
push
std
rol
add
jmp
mov
push
ins
test
add
aad
repz
and
mov
mov
rcl
fcmovnb
out
push
nop
mov
fst
sbb
fimul
int
sti
mov
mov
enter
in
in
mov
div
inc
inc
or
std
mov
cmps
sub
je
(bad)
xor
cmp
jns
loop
mov
in
(bad)
loope
pusha
leave
sbb
data16
jge
scas
mov
lock
ins
pop
inc
int3
sbb
neg
les
inc
(bad)
pop
imul
mov
mov
pop
push
adc
ret
les
pusha
lea
popf
cmp
push
jo
loopne
loop
inc
stos
sub
inc
outs
ja
test
out
adc
xchg
imul
repz
scas
(bad)
fidivr
out
and
xor
lods
les
fisttp
fcmovnu
out
aas
lahf
mov
outs
inc
push
outs
pop
inc
mov
jle
sbb
fsubr
or
sbb
in
repz
sub
push
xlat
gs
mov
push
push
dec
cli
popa
ins
rol
test
jns
retf
ja
cmp
jne
pop
sar
or
mov
test
mov
jmp
mov
adc
xchg
repz
ret
aad
sti
xor
inc
sahf
dec
in
dec
lahf
mov
dec
push
xor
sbb
aad
call
fcom
clc
and
ins
cdq
xor
cwde
into
cli
inc
or
dec
ds
out
loope
and
mov
test
add
iret
mov
pusha
loopne
gs
das
mov
push
push
sbb
fild
jmp
mov
jecxz
sbb
pushf
ins
shl
das
pop
sbb
and
and
cmp
jmp
lahf
(bad)
xchg
je
outs
call
mov
xor
call
xchg
lds
push
std
cmp
or
jle
fst
add
and
dec
fadd
iret
pop
inc
loopne
test
inc
adc
rcl
mov
pusha
sti
aas
lahf
sahf
jnp
and
sub
sbb
xchg
loop
xlat
(bad)
dec
hlt
daa
inc
xor
lahf
or
push
jp
xchg
loopne
and
sub
mov
lods
jbe
scas
inc
or
jae
outs
cmp
(bad)
pop
test
idiv
aaa
sahf
or
in
iret
dec
clc
scas
xchg
fistp
mov
push
dec
push
mov
and
sbb
jnp
std
mov
mov
ds
stos
push
or
push
cwde
hlt
outs
mov
cmp
adc
fst
inc
aam
out
pop
jns
fimul
xlat
add
jle
(bad)
jle
push
out
js
jle
xchg
mov
icebp
dec
lock
sub
mov
sub
les
mov
jns
add
cmp
dec
fwait
and
fistp
out
mov
in
pop
mov
jmp
cmp
xor
ret
inc
sbb
test
inc
adc
jae
dec
mov
add
push
mov
cmp
sub
add
outs
pop
stc
pop
das
ret
dec
xlat
aas
sbb
retf
push
push
stos
jno
adc
pop
sub
pop
pusha
clc
pop
iret
inc
xchg
jne
nop
js
cdq
pop
loope
push
enter
sar
div
neg
cmc
add
loop
xor
jecxz
jl
cmp
jle
sbb
jae
out
fmul
push
dec
cmc
or
mov
sbb
pushf
add
movs
fild
xor
or
push
xchg
ins
push
lods
push
pop
scas
sub
push
cmp
int3
push
adc
xchg
cs
xchg
pop
(bad)
or
cmps
push
ret
sub
scas
jmp
add
lods
fld
jg
cs
or
add
fwait
push
push
xchg
inc
push
fscale
jns
sub
push
sub
dec
pushf
jne
ins
cmp
stc
test
add
fsubr
into
std
jae
iret
sub
out
sbb
add
fistp
mov
or
xor
adc
repz
inc
jnp
xor
out
test
cmps
shl
es
or
add
inc
mov
xchg
loopne
mov
fdivr
in
ret
mov
int3
cdq
pop
fwait
sti
sbb
and
add
loopne
pop
and
scas
cmc
std
jle
add
(bad)
stos
arpl
xchg
ror
jg
retf
sti
jnp
or
mov
mov
sti
inc
scas
sbb
mov
push
cmps
retf
mov
lods
rcl
jae
jbe
in
inc
lea
add
dec
ror
inc
in
sbb
xor
in
sub
sub
pop
test
sub
cdq
adc
fnstenv
out
pop
jne
fild
out
sub
cli
fwait
leave
dec
(bad)
dec
loopne
pop
add
xchg
movs
icebp
mov
inc
psubq
paddsw
test
dec
ds
icebp
xchg
inc
xchg
fisubr
sbb
sbb
pop
pop
mov
(bad)
ja
mov
icebp
sbb
and
cmc
xlat
jbe
jg
outs
mov
lods
outs
cld
pop
push
stc
iret
xor
mov
push
call
pop
push
mov
xchg
inc
mov
mov
in
pop
test
push
ficomp
jl
lods
shl
jno
mov
in
mov
scas
shr
leave
push
pusha
mov
loop
and
adc
test
cmc
mov
popa
add
sbb
fldenv
idiv
shr
mov
sbb
or
fcom
es
inc
dec
aad
sub
push
or
jp
pop
pop
fnsave
movs
mov
cmp
ror
jno
mov
in
mov
lahf
in
cmp
test
sub
jne
xchg
repz
dec
pop
mov
ja
das
sbb
test
lds
and
pop
lock
ja
cli
stos
fs
fsubr
mov
push
(bad)
das
jnp
push
in
(bad)
shr
jmp
mov
cmps
inc
mov
dec
mov
test
fisubr
lock
mov
pop
adc
(bad)
sahf
leave
mov
loop
ja
inc
fdiv
repnz
outs
cmp
push
or
fsubr
jbe
addr16
sub
addr16
test
leave
cwde
stos
test
mov
push
push
push
mov
in
inc
aam
aas
dec
jo
inc
retf
mov
dec
cmp
outs
adc
bound
sub
mov
jp
(bad)
paddq
inc
pop
imul
int3
xchg
cmps
loopne
and
pop
inc
push
shl
ror
xchg
(bad)
adc
jmp
shr
pop
or
add
pushw
cwde
ins
adc
int
push
in
out
loopne
es
xchg
add
mov
(bad)
jle
sahf
lahf
mov
das
add
push
xchg
sub
lods
adc
mov
mov
xor
pop
jle
push
dec
jp
mov
adc
das
je
dec
iret
cmc
stc
mov
or
adc
and
fdiv
pop
mov
aam
imul
or
mov
cli
mov
xor
xchg
out
lock
enter
popf
imul
or
mov
or
imul
mov
inc
lds
inc
xchg
inc
ja
jae
arpl
adc
sbb
outs
xor
pop
dec
mov
(bad)
push
dec
imul
mov
inc
or
out
in
pop
cmp
push
sbb
cli
push
call
pshufw
lahf
inc
mov
test
add
xor
xchg
adc
xchg
inc
add
mov
xor
adc
mov
jl
js
cmp
push
ds
cmps
mov
lods
adc
and
cmp
jp
shl
cwde
and
outs
into
push
jo
mov
push
cmp
rcr
dec
outs
imul
mov
loope
push
push
dec
fdivr
lods
out
call
cmp
aam
inc
xor
out
imul
outs
movs
das
movs
pop
xor
into
sub
or
xchg
adc
cmp
arpl
data16
adc
push
jbe
ja
gs
dec
movs
or
xor
aad
test
not
xchg
sub
mov
(bad)
out
mov
clc
push
mov
into
xor
mov
loope
dec
jmp
fpatan
cmp
out
fstp
outs
cmc
mov
je
lahf
adc
xchg
dec
leave
nop
jp
pop
sbb
(bad)
jmp
iret
cdq
into
mov
push
mov
(bad)
inc
test
mov
mov
push
xlat
aas
popa
xor
(bad)
push
ins
arpl
cli
sahf
cmp
add
aam
xchg
inc
mov
jp
xchg
fwait
into
push
(bad)
call
out
push
retw
pop
sbb
fxch
push
xchg
xchg
dec
sub
(bad)
mov
jmp
mov
mov
mov
loopne
pushf
push
pop
sbb
dec
jno
clc
test
aam
push
mov
mov
inc
mov
pusha
ins
aaa
imul
adc
xchg
dec
dec
call
idiv
cld
mov
dec
jbe
push
push
in
in
mov
sti
dec
bound
call
pop
cli
dec
jmp
(bad)
push
loopne
dec
ins
push
xchg
lds
dec
pop
add
out
pop
jnp
dec
add
sub
(bad)
(bad)
shl
loop
clc
fcmovb
inc
sub
adc
scas
xchg
cmp
loopne
mov
push
xor
inc
js
(bad)
push
call
cmp
push
pop
mov
xor
mov
xchg
inc
jbe
add
adc
popa
js
push
leave
je
sbb
sbb
adc
call
outs
mov
push
xchg
sbb
sub
push
repnz
pop
or
movs
lds
mov
fnstenv
les
mov
dec
push
mov
sbb
xor
outs
cmps
ds
sbb
fdivrp
adc
pop
retf
adc
mov
pandn
in
inc
inc
push
jg
push
dec
mov
mov
not
stc
sub
jno
pop
pop
pop
dec
imul
pop
lods
nop
test
stc
sub
mov
bnd
(bad)
push
rol
into
jecxz
and
(bad)
mov
cmc
sahf
jmp
fsub
pop
cmps
and
ror
jp
jl
pop
or
or
dec
mov
mov
cs
push
pop
stc
add
jnp
(bad)
adc
je
aad
inc
mov
mov
adc
add
(bad)
leave
popf
and
adc
xchg
repnz
(bad)
mov
and
iret
scas
int
cmp
pop
out
mov
int
jg
lds
mov
adc
pop
dec
sbb
pop
(bad)
pop
mov
pusha
sbb
jle
mov
dec
pop
jecxz
cld
and
mov
pushf
fs
ror
sbb
loope
xchg
cmp
xchg
mov
dec
ins
add
xchg
movs
loopne
adc
test
push
int3
xchg
in
inc
pushf
push
push
dec
test
cwde
jp
push
push
out
cmp
loope
jne
fdiv
(bad)
idiv
cmp
pop
cli
xor
mov
adc
jo
int
(bad)
cmp
and
popa
push
mov
out
repz
dec
(bad)
mov
xchg
xchg
stos
ret
mov
xchg
shl
retf
movs
xchg
mul
sbb
sub
push
inc
ret
icebp
and
mov
lahf
enter
cmp
mov
sti
(bad)
inc
imul
cmp
mov
xchg
jae
mov
lods
js
bound
jecxz
pusha
fs
mov
cmps
not
std
imul
leave
mov
jbe
in
push
pop
mov
mov
int
lock
pop
xor
inc
push
fisttp
out
rcr
inc
inc
test
(bad)
dec
hlt
scas
cmc
inc
xlat
repnz
lahf
stc
loop
jmp
dec
mov
in
aam
(bad)
rol
jmp
and
out
test
xchg
push
les
mov
jmp
pushf
xchg
xlat
and
pushf
inc
(bad)
lea
mov
stos
push
mov
in
stc
ficom
test
lahf
mov
add
xchg
xchg
into
adc
test
repz
int
out
test
jb
or
cmp
int
(bad)
call
iret
data16
loopne
mov
loop
or
mov
inc
adc
int3
inc
idiv
or
inc
ja
sub
std
int
loope
pushf
leave
clc
push
fst
inc
pop
ficom
mov
stc
fnstenv
cwde
inc
mov
in
add
cmp
cwde
push
and
add
xchg
fwait
sub
arpl
retf
call
mov
mov
inc
cmps
jbe
jl
icebp
(bad)
std
sbb
imul
loopne
es
adc
mov
test
aad
out
repz
call
lds
fisub
and
out
xchg
(bad)
in
pusha
pop
icebp
sahf
mov
int
mov
fmul
in
cmp
adc
dec
sbb
int3
mov
push
in
mov
nop
pusha
sti
test
adc
sahf
inc
adc
cli
es
add
mov
cwde
adc
test
push
mov
add
test
jmp
repz
ins
sub
xchg
(bad)
fld1
cmp
mov
jp
loopne
or
adc
in
mov
fst
or
sub
sub
sahf
mov
rol
cmp
ins
ins
cmc
fcom
push
aas
cmps
adc
inc
popf
cmp
and
push
mov
pop
hlt
jecxz
retf
out
cmovbe
repz
bound
mov
cmp
(bad)
pop
dec
sub
cmps
push
sbb
cmp
fs
adc
je
push
push
jmp
fadd
loop
cld
dec
xchg
scas
cmp
xchg
mov
imul
aas
popf
test
xchg
xor
fstp
out
jg
bound
sbb
retf
or
inc
mov
loope
(bad)
mov
clc
sbb
mov
ins
hlt
rcl
lea
mov
ret
push
enter
add
push
mov
mov
inc
imul
scas
mov
loope
cwde
xchg
add
cmp
add
mov
sub
fld
mov
rcl
aaa
sti
xchg
dec
adc
stc
jmp
loope
popf
ss
pushf
or
(bad)
xchg
cmp
push
popa
rcr
mov
hlt
loopne
jge
mov
xor
ror
fwait
daa
shl
mov
div
cmp
pop
ja
or
and
bound
inc
clc
jmp
shl
out
pop
ss
pop
add
rcl
test
out
push
shl
xchg
imul
adc
out
add
(bad)
ja
xor
inc
data16
xor
cld
mov
push
lods
mov
jnp
xchg
inc
pop
mov
cmp
cmps
mov
repz
mov
pop
icebp
pop
std
outs
std
push
xchg
pop
jbe
retf
push
imul
add
dec
push
mov
xor
sti
mov
in
les
xchg
cmp
push
and
out
xchg
outs
fs
jg
jb
repnz
stc
cmp
cmps
pushf
xchg
test
mov
std
pop
fsubr
out
mov
dec
cwde
xchg
push
jle
cwde
rcl
retf
dec
sub
sub
and
mov
fs
and
jmp
dec
(bad)
out
and
jo
mov
lock
(bad)
in
mov
jmp
mov
(bad)
cli
mov
stc
shl
call
sub
cmp
in
jne
push
xchg
xor
xchg
jno
jbe
sbb
xor
mov
iret
mov
outs
rol
inc
(bad)
xlat
xor
shl
mov
je
call
scas
arpl
aas
jns
jle
movs
jne
push
xor
push
pop
dec
dec
ret
loope
mov
lock
xor
mov
cwde
mov
xor
sub
xor
jo
push
pop
ret
cld
stos
cmp
sbb
std
(bad)
cmp
xor
pop
les
(bad)
jmp
ins
xchg
(bad)
cmovl
je
pop
retf
xor
ffree
lods
loopne
xchg
xchg
call
or
pop
mov
dec
cmp
cmps
pusha
pop
xchg
push
div
mov
xor
outs
stc
and
dec
repnz
mov
imul
retf
fs
outs
sub
inc
test
je
and
dec
and
jno
jb
and
or
fidivr
cli
aas
and
jo
fsubr
inc
inc
jno
imul
aam
call
push
cmc
jno
sahf
or
sahf
fwait
add
mov
jp
(bad)
addr16
gs
cmc
mov
jg
rcr
sub
sbb
pop
ja
stos
dec
pop
xchg
mov
ins
xchg
lods
and
iret
inc
repz
mov
sbb
jecxz
shr
sbb
not
jl
mov
dec
bound
mov
aad
dec
shr
lahf
sub
loopne
jb
aad
scas
call
cwde
and
(bad)
and
mov
out
jg
xor
sub
(bad)
jle
mov
movs
rcl
je
mov
rcl
imul
cmp
popa
xor
test
add
push
push
or
fst
ins
push
xchg
fwait
xchg
std
pop
cmc
dec
repnz
mov
aaa
push
popf
imul
jne
pop
outs
mov
sbb
pop
in
pop
jns
(bad)
cld
or
dec
push
(bad)
or
mov
fiadd
jmp
push
ret
lahf
pop
xlat
ins
push
push
cli
cmp
inc
pop
outs
inc
enter
ss
into
aam
adc
mov
scas
xchg
or
jns
retf
xor
cs
sub
fidivr
(bad)
ret
mov
and
dec
out
mov
jge
stc
or
or
cmc
push
daa
push
xchg
out
cs
jg
imul
js
je
setp
sub
mov
and
or
scas
stc
mov
mov
jmp
(bad)
jg
cmp
inc
adc
mov
je
cmc
pop
push
scas
sub
scas
mov
and
lods
sub
jbe
ins
(bad)
adc
jecxz
sub
cmc
fs
and
aaa
xlat
push
loope
hlt
adc
repz
lds
sub
fild
imul
adc
sub
std
cmp
jmp
mov
mov
bound
sbb
pushf
push
fcom
mov
frstor
clc
xchg
mov
inc
sbb
je
mov
lods
jmp
jmp
and
jmp
ss
sbb
lods
pop
sar
enter
mov
pop
fs
pop
xchg
arpl
pop
scas
outs
bound
icebp
inc
cli
push
sbb
cli
inc
in
(bad)
and
jecxz
aad
fild
and
test
sbb
imul
andps
jns
test
jbe
mov
iret
and
dec
push
repnz
cmps
push
or
fcom
loopne
stos
inc
push
fild
jle
xchg
sbb
test
hlt
jp
test
cmps
mov
push
ret
jle
sbb
outs
push
adc
sahf
retf
ins
dec
ins
cmps
loop
inc
dec
popa
and
in
fiadd
movs
lods
add
jne
in
sub
es
movs
cdq
sbb
loope
repz
jae
popa
out
frstor
add
test
inc
and
adc
pop
jb
or
push
mov
test
repnz
jo
ror
sub
jl
retf
push
movs
xor
inc
outs
adc
in
js
shr
aam
sar
fisttp
fst
xchg
dec
retf
cmp
ja
add
out
fcomp
jb
(bad)
sub
xlat
(bad)
xchg
sub
push
mov
cmp
pop
push
add
sti
sub
(bad)
mov
sub
movs
or
sbb
push
push
int
inc
dec
cdq
ins
cmps
aad
imul
pop
mov
push
inc
es
push
add
adc
stos
mov
mov
push
push
fbstp
and
inc
test
lock
add
dec
scas
lahf
enter
pop
adc
imul
mov
(bad)
mov
adc
push
stos
xchg
mov
xor
or
std
outs
shr
or
xchg
jno
test
test
mov
add
ins
clc
mov
mov
es
mov
popf
push
clc
imul
out
aas
add
mov
mov
imul
mov
gs
outs
mov
rcr
jbe
or
dec
sub
mov
ret
int3
mov
in
sub
ret
jge
cmp
cmp
bound
test
daa
or
aad
sbb
push
sub
sub
je
rcr
fild
addr16
cli
ds
gs
jp
push
xchg
jno
jbe
or
or
mov
lods
add
dec
js
mov
cmc
mov
add
sub
rcr
repz
cld
ins
dec
ja
xchg
stc
addr16
add
pop
xor
pop
daa
sub
aad
test
mov
pop
mov
mov
icebp
or
mov
push
xchg
sahf
add
xchg
xor
jecxz
shr
and
dec
mov
popf
shr
pop
aaa
ret
aad
jge
push
inc
sub
push
pop
rcr
cmp
jbe
outs
ret
mov
repz
sbb
push
sbb
add
icebp
mov
sbb
mov
ja
inc
dec
or
jmp
adc
test
bound
call
sub
xlat
or
fistp
(bad)
or
push
imul
leave
js
lds
add
aam
std
or
pop
stc
in
pop
aad
mov
push
sar
js
and
add
push
pop
stc
test
into
cmp
out
and
jno
mov
shl
clc
(bad)
mov
iret
pop
pop
mov
dec
repnz
jl
mov
and
cli
fwait
cmc
xor
and
lds
jo
or
stos
outs
dec
xor
push
cld
xchg
or
jae
jne
mov
mov
cli
div
out
xchg
daa
js
aad
es
adc
das
xor
mov
(bad)
or
adc
add
test
xor
inc
(bad)
in
jnp
add
rcr
mov
mov
mov
icebp
adc
or
adc
jp
jge
out
mov
sbb
mov
rol
jmp
jnp
or
mov
lds
mov
das
sub
scas
adc
jbe
inc
push
popf
clc
movs
mov
mov
imul
pop
jle
sub
jo
sub
xchg
call
loopne
and
lock
lahf
adc
mov
je
aas
(bad)
sub
icebp
and
jl
jge
aaa
sbb
daa
xchg
ret
xchg
fwait
and
jb
ret
add
and
sahf
loopne
das
std
cmp
xor
push
mov
shl
inc
jge
shr
jne
xor
dec
outs
and
shl
test
mov
aam
ins
mov
mov
mov
cld
das
xor
lds
repz
sti
nop
add
mov
not
aam
(bad)
(bad)
rol
and
repz
mov
ja
cmp
adc
data16
add
cli
enter
mov
sahf
jns
and
aad
outs
push
cmp
int
test
in
bound
add
sub
dec
mov
cmp
pop
pop
sti
outs
push
inc
movs
dec
xor
xor
push
mov
mov
sbb
(bad)
outs
pop
cmps
ja
xchg
aaa
mov
sub
pop
pop
dec
stos
out
sbb
xor
and
jecxz
mov
int3
ja
adc
or
dec
pushf
das
jmp
and
mov
adc
mov
ins
push
mov
test
(bad)
and
scas
push
ja
fdivr
aad
lea
mov
not
mov
jnp
dec
aaa
call
in
mov
add
aaa
inc
ret
in
repz
adc
add
test
jmp
or
xor
adc
inc
xchg
rcr
clc
adc
pushf
mov
or
retf
pop
mov
xchg
fisub
popa
imul
outs
xor
or
xchg
dec
push
sqrtps
push
cmp
test
mov
fnstcw
push
mov
or
in
cmp
cmp
jo
out
popf
in
enter
xchg
xchg
pusha
dec
test
jae
outs
cmp
xlat
jge
lds
inc
pop
inc
mov
dec
push
int
xchg
dec
cmc
call
sbb
mov
xchg
dec
mov
aas
add
push
inc
movups
pop
or
mov
fild
mov
jmp
in
test
push
add
shl
sbb
cld
cmp
adc
call
adc
inc
sub
(bad)
jecxz
push
cs
dec
repnz
in
sub
clc
fistp
push
or
loop
add
or
xchg
les
xchg
fbstp
(bad)
sbb
push
rol
stos
sub
mov
(bad)
push
loopne
aaa
adc
pop
mov
pop
call
push
out
xor
sbb
pop
and
add
ins
fnstcw
xor
xchg
jne
jae
loope
or
mov
ss
ins
fwait
pop
jmp
fist
dec
mov
push
jg
pushf
mov
retf
lahf
loopne
out
outs
stos
ja
inc
sub
mov
in
and
xchg
mov
push
pushf
sahf
rcr
xchg
inc
adc
aam
call
ffree
mov
push
xchg
icebp
jmp
(bad)
ja
xchg
sahf
sar
ins
pusha
pop
addr16
pop
inc
pushf
js
cmps
mov
jg
dec
cmp
xchg
push
or
push
jmp
in
jbe
cmp
pop
movs
xor
les
jnp
adc
repnz
or
mov
mov
test
add
jecxz
test
mov
mov
mov
push
cmp
scas
sub
xchg
arpl
or
mov
fcmovnu
cmp
jmp
jle
jb
xor
loopne
cmp
add
xchg
rcl
cmp
adc
test
mov
popf
cmp
jp
movs
popa
test
mov
nop
cwde
mov
retf
or
scas
jmp
push
and
xor
aad
outs
mov
call
scas
pop
push
xor
xchg
xor
xor
and
xchg
mov
adc
pop
out
dec
pop
es
jb
movs
addr16
popf
add
bound
(bad)
mov
mov
in
mov
add
stos
sbb
jne
add
les
xor
fistp
xor
lea
sbb
mov
fnstenv
retf
add
jp
pop
pop
fidiv
sub
icebp
mov
xor
pop
mov
jecxz
outs
jns
popa
adc
scas
shl
loope
pop
jmp
xchg
pop
jbe
shl
inc
in
data16
lods
in
in
xchg
push
mov
mov
pop
cwde
(bad)
sub
pop
xchg
cs
fs
hlt
repnz
std
bound
mov
rcl
cmp
xchg
enter
sar
ret
push
sub
arpl
fidiv
add
data16
rcl
mov
push
sub
sub
jge
imul
bound
sub
mov
scas
push
push
cmp
cld
cld
fld
ror
cli
mov
imul
xchg
lock
pop
pop
or
add
(bad)
xchg
xlat
add
mov
cmp
aas
into
in
call
dec
les
mov
pop
shl
adc
xor
jg
imul
nop
(bad)
cld
sahf
mov
outs
ret
hlt
mov
mov
mov
and
fcom
cmc
or
jmp
mov
int
or
mov
mov
retf
pop
outs
fisttp
pusha
pusha
add
pop
div
fisub
xchg
movs
(bad)
dec
shl
push
arpl
xor
mov
inc
leave
ds
sahf
pop
fisub
jmp
cmp
call
sbb
push
fbld
rcr
sbb
dec
dec
fild
(bad)
(bad)
and
push
xor
dec
shr
lock
in
jno
mov
sbb
cmc
sub
cmp
xchg
cmp
int
mov
adc
pop
mov
sbb
retf
sbb
outs
mov
mov
aaa
pusha
int3
lods
shl
cmp
es
addr16
and
ror
js
out
mov
xchg
lock
jp
and
mov
(bad)
gs
mov
and
ror
mov
xor
int
jmp
cld
mov
call
leave
mov
arpl
mov
fs
out
mov
outs
icebp
enter
sbb
sub
pop
in
imul
js
(bad)
or
jecxz
sti
call
retf
aad
popa
icebp
jnp
adc
dec
arpl
into
jne
sub
dec
lods
mov
pop
imul
repnz
loop
js
lock
xchg
push
aaa
push
loope
sbb
in
push
sbb
sbb
ret
into
dec
fsub
jg
iret
jmp
sub
rol
loopne
dec
mov
or
jp
pop
sub
push
adc
sbb
and
imul
jb
and
mov
and
mov
xor
xchg
and
xchg
sbb
cmc
dec
call
(bad)
xor
push
or
int
cld
ror
inc
repnz
ins
pop
lods
mov
sbb
cmps
adc
xchg
inc
mov
sub
pop
dec
mov
fsubr
loop
and
arpl
mov
sub
dec
cmc
scas
imul
ror
cmp
adc
dec
mov
stos
fst
shl
sbb
fidivr
pop
dec
xchg
clc
jo
jmp
mov
clc
sub
or
ja
sbb
retf
sub
leave
push
dec
out
mov
clc
jl
jmp
inc
adc
fwait
fwait
push
fs
pusha
xchg
ja
xor
or
sub
add
xchg
inc
loop
lock
mov
hlt
sbb
and
into
push
sbb
iret
lods
pop
movs
push
(bad)
lea
cmp
mov
daa
xor
cli
inc
fisubr
jae
add
push
mov
aam
jae
sti
cmps
(bad)
shr
mov
mov
jle
addr16
fsub
retf
and
cs
pop
scas
cld
fsub
add
repnz
push
jo
or
fcomip
sbb
mov
mov
lods
pop
into
jmp
sub
or
gs
sub
cs
lods
push
mov
xchg
mul
pop
mov
das
mov
xor
mov
push
daa
(bad)
hlt
and
in
mov
sub
pop
pop
dec
xchg
mov
cmp
mov
(bad)
fadd
leave
push
jl
pop
lahf
adc
cwde
fld
mov
pop
out
pop
fild
mov
aam
pop
stc
cli
add
repz
(bad)
adc
js
dec
cmps
cld
out
mov
inc
adc
dec
cmp
int3
xor
or
div
push
nop
mov
cmp
(bad)
stc
or
push
lahf
fmul
inc
pop
pop
jge
mov
ins
sahf
mov
arpl
adc
pop
out
xor
sub
xchg
xor
neg
int
shr
cmps
in
retf
jo
push
es
xor
cmp
inc
jnp
mov
cmps
cwde
jb
les
mov
and
or
sub
(bad)
sub
jno
pop
addr16
int
mov
mov
test
xor
and
mov
fstp
jbe
js
jnp
push
loope
or
out
jb
hlt
in
cli
bound
mov
xor
push
outs
int
xchg
inc
and
repz
ficomp
(bad)
mov
push
mov
jno
scas
clc
test
mov
add
cdq
bound
mov
xor
jbe
xchg
mov
movs
and
cwde
add
sar
mov
mov
push
sahf
div
push
mov
add
or
mov
mov
sti
pop
leave
inc
sbb
popf
push
iret
pop
mov
push
dec
repz
hlt
xchg
push
stos
(bad)
ja
mov
and
and
mov
add
mov
hlt
pop
in
mov
les
je
mov
xor
push
lods
repnz
inc
mov
sahf
inc
pop
ins
mov
bnd
mov
pop
loop
mov
jge
call
sub
popf
shl
cmc
push
movs
mov
ret
adc
mov
and
inc
fcom
cmp
dec
mov
scas
(bad)
jmp
jne
pushf
lods
adc
mov
bound
xor
xchg
(bad)
and
(bad)
call
lea
pop
pop
dec
xchg
mov
mov
cmps
sbb
mul
fdiv
push
inc
fs
ja
cmps
call
adc
hlt
adc
mov
je
xor
cmp
int
movs
jmp
out
call
mov
fs
movs
inc
popf
ret
xor
or
and
imul
aad
into
pop
cwde
adc
add
pop
sbb
vsqrtss
add
cmps
inc
mov
(bad)
js
push
xchg
mov
push
dec
jae
inc
pop
les
(bad)
vpshufd
sub
iret
add
div
mov
sub
adc
push
inc
rol
pushf
xor
ret
addr16
lahf
pusha
inc
jne
xchg
mov
call
adc
inc
jae
loopne
inc
cs
jecxz
xchg
cli
push
mov
mov
lahf
pusha
(bad)
out
mov
aaa
inc
ins
xor
adc
or
and
repnz
cs
jp
cmp
inc
add
stc
cmp
or
pop
ret
stos
jb
das
push
jmp
or
or
out
sbb
pop
and
dec
mov
xor
inc
push
cmp
fiadd
jp
add
loope
pop
cmp
es
sub
inc
sub
xchg
pop
push
inc
jbe
in
pop
jno
mov
xchg
inc
ror
stos
and
out
ss
jmp
int3
or
mov
mul
out
cmp
pop
pushf
test
addr16
je
cli
pop
cmp
adc
ja
xor
mov
or
movs
mov
mov
retf
ret
mov
repnz
in
pusha
pop
nop
sbb
sub
(bad)
push
and
aad
jmp
jle
lahf
cmp
jnp
lods
sub
jmp
cs
jb
lods
jae
sub
or
add
and
out
cmp
test
mov
adc
xchg
jnp
add
xor
fist
jl
nop
cmps
push
in
dec
cmp
or
jo
inc
sti
fcom
xor
pop
mov
jnp
mov
xchg
mov
ror
(bad)
in
enter
dec
into
mov
fcom
dec
or
ins
or
inc
xor
ins
cdq
loopne
not
fisub
xchg
push
jne
jnp
stos
cmp
mov
lea
fsubr
shl
cmc
xchg
loop
rol
dec
push
add
dec
(bad)
aad
fild
imul
fdiv
jb
inc
sbb
dec
pusha
lds
dec
jne
add
add
loope
xor
xchg
push
mov
popa
cmp
mov
sahf
mov
jge
pop
sub
sbb
in
sbb
or
xchg
fimul
jne
sbb
ror
fnstcw
xchg
inc
shr
jge
mov
in
sub
int
dec
and
xor
mov
stos
mov
test
pushf
nop
xor
jecxz
iret
popf
outs
nop
dec
out
xchg
jnp
inc
ins
mov
popa
lods
(bad)
and
pop
shl
add
jns
scas
js
(bad)
jge
mov
xor
add
movs
(bad)
jg
cdq
cmps
fisttp
xor
sub
adc
sbb
test
lock
jmp
xchg
mov
or
icebp
or
pop
cmps
or
push
sti
imul
mov
mov
test
xchg
push
cld
les
loopne
sub
aas
lahf
mov
xor
lods
ret
mov
xchg
jg
mov
inc
xor
push
in
mov
mov
and
in
lds
xor
xchg
test
pop
popa
std
cmp
jmp
pop
mov
sbb
cld
cmp
addr16
fiadd
and
pop
cmp
in
js
cli
nop
mov
adc
xchg
push
sbb
xor
js
js
xor
xlat
xor
jp
cwde
movs
xor
sbb
arpl
sub
mov
or
push
xchg
mov
dec
fadd
aam
test
iret
sar
dec
popf
fwait
rcl
cmps
in
sub
sub
cld
in
loope
xchg
into
cmp
sbb
jbe
fs
push
or
xchg
fdivrp
push
adc
mov
lods
xchg
mov
test
bound
iret
xor
ds
mov
dec
jo
fcmovnu
stos
test
movs
out
pop
not
(bad)
hlt
xchg
push
pop
xchg
(bad)
push
daa
nop
mov
cmp
adc
mov
mov
inc
pushf
mov
cld
xor
cs
xor
fisttp
mov
and
daa
lods
fidivr
push
inc
pop
push
popa
scas
sahf
pop
hlt
gs
int
mov
enter
push
inc
adc
and
(bad)
fcmovb
and
cmp
ret
loop
sar
call
jmp
aaa
or
mov
adc
std
imul
push
xchg
mov
aas
push
xor
sti
adc
js
lahf
mov
retf
adc
push
inc
dec
inc
mov
jp
retf
inc
cli
and
fs
js
pop
and
add
rol
sbb
add
(bad)
ror
mov
jae
lea
(bad)
call
dec
rcr
or
shl
mov
cdq
mov
sbb
sbb
inc
inc
leave
inc
and
push
test
in
les
pop
push
sub
cdq
adc
in
jnp
push
dec
cmp
mov
mul
out
jbe
inc
add
inc
hlt
xchg
jns
nop
xchg
add
into
fldcw
scas
call
xchg
adc
(bad)
ins
and
inc
test
repz
test
cmovl
jmp
or
fild
inc
scas
sbb
fcomp
imul
loop
push
fs
adc
sub
and
mov
fs
xchg
test
pusha
xchg
sahf
or
outs
cdq
mov
or
(bad)
sub
jns
sub
js
jmp
adc
out
cli
sub
in
repz
aam
not
mov
sahf
mov
shl
or
retf
movs
pop
jp
iret
add
mov
and
loop
adc
je
ins
jnp
jno
cmc
sbb
pop
cld
sbb
pop
mov
inc
mov
jo
dec
mov
push
fmulp
and
or
je
inc
cmp
add
sbb
lods
shl
dec
retf
jne
shl
cs
sar
mov
lds
pop
test
dec
inc
sbb
lods
pop
pop
cmp
mov
xchg
pushf
loopne
pop
retf
(bad)
sbb
aas
pop
cmp
and
and
sub
xor
mov
cmp
or
loope
jbe
push
and
mov
dec
sbb
fwait
stc
push
ss
sub
sbb
data16
rcl
jge
pushf
mov
xor
dec
dec
jnp
mov
mov
mov
aas
hlt
shrd
push
or
call
dec
xchg
mov
mov
inc
adc
cwde
inc
les
sbb
retf
cli
lods
jb
(bad)
adc
sub
adc
adc
out
je
push
jne
retf
daa
pop
and
mov
sub
ret
adc
xlat
(bad)
add
cld
inc
scas
cdq
addr16
xchg
retf
push
jbe
pushf
sbb
push
pop
out
jmp
fbstp
cmp
pop
repnz
push
out
mov
out
and
fsubr
rcl
add
iret
das
inc
cmp
out
cmp
or
or
jp
fisttp
add
lahf
pusha
push
pop
ins
sbb
ins
xor
sbb
popa
ret
cmc
mov
in
pop
pop
movs
cmp
shl
fnstcw
std
mov
pop
xor
test
int
adc
jecxz
jle
and
mov
pusha
push
cmp
jns
dec
mov
das
add
mov
outs
mov
adc
in
adc
aas
or
inc
retf
mov
pop
push
stos
pop
out
inc
loop
jae
call
dec
cmps
mov
in
js
jb
neg
ins
movs
push
in
fs
inc
sbb
sub
sar
cmps
scas
push
and
mov
sbb
push
scas
int
in
dec
data16
and
push
inc
add
bts
mov
mov
cmps
pop
or
dec
std
sahf
leave
test
out
(bad)
leave
xchg
and
push
imul
xchg
repz
gs
mov
xchg
rcl
ret
adc
xor
or
mov
dec
jp
jmp
jne
adc
sub
mov
adc
nop
dec
sbb
xor
jno
xchg
(bad)
xchg
jg
jmp
cli
int
cmc
xor
int
shr
xchg
and
stc
cmps
lds
stos
mov
inc
mov
je
mov
or
popa
pop
movs
inc
adc
inc
add
add
mov
pushf
mov
stos
push
(bad)
inc
lock
repz
xor
(bad)
or
outs
pop
repnz
call
cmp
mov
pop
mov
int3
int
pop
add
mov
outs
sbb
dec
imul
scas
and
ficom
lods
lods
stos
not
pusha
jle
mov
out
mov
sub
iret
mov
inc
jle
jns
imul
(bad)
lss
mov
add
(bad)
mov
xor
or
aam
inc
add
popa
jmp
mov
cli
or
sbb
ja
mov
sub
cmp
cmp
pop
and
mov
je
fisubr
sbb
jge
xchg
jne
in
stos
dec
inc
into
mov
or
jmp
mov
(bad)
mov
add
adc
dec
inc
test
fcomi
imul
test
ins
push
loope
movs
adc
jge
fnsave
ret
aad
cmp
inc
cmp
adc
ja
retf
out
jo
sbb
cmp
(bad)
ds
aas
adc
xchg
mov
fdivrp
test
iret
daa
inc
cdq
ins
movs
and
push
add
fdivr
inc
sbb
xor
sbb
inc
cli
jo
ret
in
jge
jne
fist
xor
pop
inc
mov
mov
dec
mov
fisttp
jmp
jne
inc
jecxz
retf
aad
cmp
nop
lds
jns
ret
xchg
ins
jle
mov
je
xor
js
in
into
add
xchg
adc
leave
dec
adc
push
sub
jmp
xlat
stc
adc
lock
sub
inc
xchg
sti
std
jmp
xchg
inc
adc
sbb
mov
jmp
sub
cmp
retf
add
and
(bad)
dec
jns
jp
pop
push
dec
fnstenv
(bad)
shl
mov
pop
dec
dec
cmc
pop
retf
es
mov
and
xchg
addr16
into
dec
inc
add
xlat
xchg
sbb
xchg
cs
mov
inc
inc
(bad)
and
cmp
mov
mov
pop
scas
ds
in
fidivr
(bad)
cmp
shl
inc
sub
add
and
bnd
imul
call
adc
imul
sbb
aaa
loopne
and
inc
add
inc
pop
outs
es
sub
pop
retf
call
stos
xor
add
mov
loope
mov
sahf
loop
add
dec
sbb
or
fdivr
add
dec
add
scas
fs
rcl
ja
dec
sbb
(bad)
mov
dec
inc
hlt
xchg
jo
mov
mov
xchg
mov
mov
sahf
in
aam
jmp
add
push
push
add
and
mov
call
mov
cmps
ins
loopne
jmp
add
jbe
pop
ret
test
jb
dec
test
jbe
mov
sahf
pop
out
pushf
cmp
inc
mov
and
fcmove
rcl
or
jge
cmp
es
cld
ret
inc
jns
pusha
fistp
mov
add
lods
pop
fcomp
into
movs
add
xchg
or
pusha
(bad)
jecxz
aaa
adc
int
lods
jecxz
sbb
mov
test
xchg
adc
cmp
mov
popf
sbb
int3
idiv
push
out
dec
xor
pusha
ficomp
xchg
cmp
inc
sbb
lea
push
call
shl
or
test
mov
dec
jmp
lahf
aad
xlat
sti
sub
mov
add
enter
outs
push
xor
and
add
fst
mov
fld
pop
enter
push
xchg
les
ins
mov
leave
cmp
mov
pop
jmp
jo
push
ror
mov
push
loop
(bad)
lds
xchg
pop
clc
imul
mov
mov
jnp
repz
mov
mov
ret
or
pop
pop
jb
scas
int
shr
ins
std
out
movs
dec
mov
xchg
sbb
xor
aas
(bad)
loope
ja
rcr
add
imul
cmp
test
cld
scas
mov
xor
outs
fs
xor
ja
and
jecxz
add
jg
mov
xor
sub
arpl
adc
paddusw
outs
jp
fdiv
stc
add
sar
fild
shl
fadd
or
dec
mov
or
popa
(bad)
jecxz
xchg
ds
pop
data16
inc
mov
mov
push
inc
sub
dec
ror
(bad)
dec
sbb
sti
mov
sti
cld
sbb
dec
outs
add
sar
retf
push
pop
xor
ficomp
or
mov
dec
les
int
adc
mov
push
dec
add
add
retf
and
jge
(bad)
dec
push
fmul
mov
sbb
cwde
mov
mov
mov
sbb
dec
retf
gs
cmp
mov
loopne
inc
push
pop
(bad)
sub
xor
sar
mov
or
mov
lods
retf
dec
dec
cdq
mov
mov
push
jg
repnz
movs
jo
imul
ins
lea
fcmovnu
jmp
dec
scas
lahf
shl
call
cmp
sbb
pop
sbb
and
or
sub
cmc
data16
ins
test
dec
imul
(bad)
retf
xchg
lock
sub
mov
ins
xchg
aam
das
test
daa
mov
inc
ja
push
jae
adc
test
dec
or
xor
addr16
arpl
or
mov
movs
fdivr
repz
js
int3
mov
cmp
xchg
or
push
outs
js
cmp
and
daa
pop
inc
push
in
pop
sti
cld
jmp
mov
push
iret
shr
je
inc
dec
mov
movs
and
clc
dec
loop
pop
mov
ja
push
ds
lds
xor
call
sub
loope
push
gs
inc
mov
push
iret
aaa
sub
jb
inc
adc
mov
mov
lock
lahf
dec
aas
loopne
xchg
and
cmp
jne
add
jb
jmp
sub
mov
jae
push
jb
adc
mov
and
mov
in
clc
adc
sub
mov
mov
lea
add
add
shl
mov
stc
mov
inc
push
lock
add
xchg
and
push
adc
movs
push
xchg
xchg
popa
jno
cdq
xlat
(bad)
sbb
mov
mov
cmps
fldenv
or
cwde
or
(bad)
cli
mov
ins
xlat
xor
sub
or
popf
mov
aaa
repz
in
jl
fsubrp
jmp
out
cdq
jne
inc
dec
jmp
fst
dec
xor
jl
sub
sub
sub
in
out
loope
and
jns
in
sbb
es
scas
out
test
sbb
sbb
sub
dec
out
ss
(bad)
aaa
jle
push
scas
stos
cmp
pushf
dec
pusha
rcr
mov
in
mov
push
sub
frstpm(287
cmp
jle
push
ins
dec
ins
sbb
jne
mov
push
and
mov
mov
repnz
cmp
xchg
imul
add
push
lock
int3
call
stos
inc
ror
fwait
and
push
cwde
pop
fimul
int
and
pusha
cmp
les
push
sub
ret
mov
fs
cmp
jno
xlat
out
pop
push
fstp
cmp
in
fsub
scas
out
dec
repnz
jbe
int3
aas
pop
mov
push
shl
dec
push
dec
loop
ror
or
lods
fbstp
loopne
sbb
inc
adc
cmps
inc
mov
scas
and
pop
mov
sub
jno
(bad)
push
call
adc
mov
scas
fs
mov
add
lea
dec
jle
cdq
fisubr
pop
mov
mov
not
es
aad
mov
aas
mov
scas
cmp
retf
push
dec
cmps
arpl
or
call
in
dec
mov
dec
pop
fstp
outs
add
aad
jne
dec
xchg
push
arpl
test
cwde
dec
xor
cmp
adc
retf
jbe
pusha
outs
icebp
outs
mov
xchg
push
int
xchg
mov
neg
fdiv
push
jnp
ret
shl
clc
mov
mov
in
pop
mov
jno
pop
ror
mov
outs
dec
push
add
int
sbb
js
es
fs
jmp
in
sub
cmc
sahf
sbb
mov
mov
scas
push
test
cmps
adc
jmp
gs
pop
add
aad
cmp
dec
clc
mov
rcr
add
fist
add
mov
pusha
aas
or
mov
or
movs
loope
js
adc
aam
sbb
jae
fcom
js
ins
sbb
(bad)
cwde
or
mov
mov
xor
and
loope
inc
rcr
out
sbb
mov
dec
lods
repnz
test
ret
sar
add
inc
mov
enter
aam
aas
fwait
xchg
add
sub
adc
lock
(bad)
add
imul
and
sub
ficomp
sar
and
and
lea
jge
loopne
inc
mov
jecxz
mov
out
icebp
ja
(bad)
pusha
dec
mov
inc
jge
clc
sub
mov
enter
push
pop
jb
cmp
push
cmc
push
push
add
pusha
pop
(bad)
pop
(bad)
xor
jecxz
xlat
test
pop
cmc
cmp
outs
fwait
adc
je
sub
es
pop
test
js
dec
dec
adc
fisttp
movs
mov
hlt
cli
fldcw
jp
call
mov
xchg
loope
es
div
rcr
cmp
xlat
hlt
or
and
in
mov
leave
out
(bad)
mov
lock
clc
ja
dec
and
dec
sub
retf
mov
(bad)
cmp
(bad)
imul
jo
out
xor
xor
inc
in
xor
add
pusha
sub
sub
int3
out
jg
pop
div
stc
mov
jb
data16
stos
xchg
or
stc
or
pop
push
rcl
out
jp
stc
sub
sub
test
or
push
push
add
cmp
vcvttsd2si
fldenv
ror
add
xchg
sub
in
xchg
and
stc
fs
pop
dec
cmp
inc
mov
push
ss
inc
adc
and
call
pusha
pop
ret
(bad)
xchg
mov
lods
pop
rcl
imul
lahf
push
adc
leave
and
les
jb
out
push
in
cmc
sbb
jbe
test
das
xor
and
cld
ret
std
push
mov
lock
dec
fucomip
xchg
adc
xor
imul
dec
stc
popa
shr
mov
shr
xchg
(bad)
jae
jg
sbb
rcr
cmp
pusha
ins
xchg
movs
or
push
mov
push
arpl
push
ret
jns
sub
test
imul
xchg
(bad)
fwait
push
mov
das
je
jle
mov
clc
int3
push
(bad)
push
and
retf
pop
fsub
cdq
ins
pop
dec
rcl
or
pop
pop
pusha
xor
repz
scas
es
push
add
push
test
push
and
pop
and
jno
lods
sub
imul
push
pop
dec
sti
add
mov
pop
push
jl
mov
sub
sahf
mov
inc
and
mov
mov
cmp
cmc
std
pop
aaa
out
add
daa
add
icebp
sub
loop
xor
ds
cmps
sub
and
aam
lahf
ret
ss
lock
cmp
das
cmps
fild
stc
adc
mov
pop
jns
xchg
sbb
jae
jle
add
sub
or
xor
es
xor
(bad)
sub
dec
ins
rcl
hlt
js
les
dec
push
(bad)
adc
dec
jne
push
adc
test
shl
cmp
fldenv
hlt
jns
enter
jo
cmp
push
iret
mov
int3
in
mov
jl
int
and
xchg
jno
movs
and
aad
leave
xchg
stc
push
gs
popw
add
push
cdq
sub
xchg
adc
and
jp
sub
shl
cmps
sub
out
in
and
sahf
add
in
call
add
dec
mov
cwde
gs
imul
nop
cmp
push
adc
jo
lea
push
ins
enter
jle
cmc
(bad)
aas
cmp
inc
loope
xchg
fwait
push
dec
xor
les
push
mov
push
jl
cmc
dec
(bad)
push
sub
mov
inc
in
loope
shl
add
sbb
call
out
mov
xchg
sbb
push
mov
fst
ds
cld
retf
add
pop
lds
pop
push
jp
add
out
lds
std
jmp
mov
outs
xchg
adc
pmaxsw
popf
icebp
test
(bad)
cmp
pop
cmp
lods
scas
mov
cmps
xchg
sbb
cld
in
xlat
bound
pop
scas
fisttp
jecxz
mov
jmp
add
ins
sbb
outs
dec
push
cdq
sub
pop
or
xchg
jmp
dec
clc
cmc
cmc
cmp
push
js
mov
addr16
push
fwait
jns
sti
ss
(bad)
stc
fstp
mov
in
pop
xchg
and
mov
aam
and
adc
add
fwait
dec
pop
push
xchg
and
mov
push
xor
mov
in
cwde
push
mov
mov
ins
in
sbb
iret
imul
dec
pop
shr
and
jae
xchg
sbb
push
dec
jae
pushf
inc
push
aaa
mov
icebp
js
int3
sub
add
add
gs
mov
xchg
mov
test
jbe
and
push
jne
call
pop
sbb
mov
pop
mov
add
in
jecxz
cmps
ins
cmp
ret
xor
jle
(bad)
psraw
sahf
xor
ins
adc
stos
pop
into
ret
iret
mov
mov
mov
inc
dec
sub
fiadd
jne
call
xor
inc
inc
dec
xlat
cmp
dec
icebp
fstp
std
retf
retf
fs
(bad)
out
adc
mov
cmp
xor
jg
pop
mov
fist
aaa
les
in
daa
imul
mov
sub
and
pop
cmp
scas
jne
repnz
fisubr
jns
jb
mov
pusha
lods
enter
dec
jmp
mov
push
jnp
movs
dec
adc
inc
cmp
mov
sub
stos
out
jae
(bad)
psubusw
es
dec
pop
in
pop
dec
lods
push
jbe
outs
sub
ins
dec
xchg
cmp
cmps
push
mov
aad
sub
ss
in
and
sub
ds
jp
mov
xor
rol
push
fsub
les
sbb
dec
movs
inc
lods
gs
push
xlat
(bad)
mov
test
int3
cwde
ja
or
leave
fmul
arpl
jno
pop
retf
leave
lea
push
fld
inc
push
xor
lock
fstp
aas
cwde
pushf
imul
jle
mov
int
fadd
xor
lock
mulps
ins
imul
push
out
(bad)
xchg
sbb
cmp
mov
test
sub
leave
push
adc
cdq
lods
lods
mov
lds
lahf
(bad)
lock
out
jle
or
cld
aad
test
dec
lahf
dec
mov
xchg
aaa
in
int
push
int
inc
fimul
fnstcw
pop
repnz
icebp
push
jne
ja
aaa
mov
xor
in
dec
les
push
xor
pop
cmovae
test
jne
cmp
enter
(bad)
and
(bad)
jg
jle
outs
mov
cmp
or
js
sbb
push
xchg
fistp
jge
in
jmp
push
push
call
dec
loope
neg
add
mov
sahf
push
jecxz
pop
cmp
mov
dec
(bad)
xor
xchg
jge
rcl
and
adc
xchg
sbb
imul
das
mov
sub
loope
outs
in
in
lds
shl
jle
mov
jge
xchg
mov
mov
sti
rcl
enter
stos
jecxz
mov
inc
ror
mov
dec
cwde
stc
stos
sub
fcom
sub
stos
mov
mov
xchg
icebp
dec
movs
retf
ins
mov
fdiv
inc
pop
mov
pop
cmps
not
dec
jo
out
leave
fidiv
(bad)
xchg
mov
jmp
adc
push
add
fwait
push
xor
mov
pusha
aas
push
sub
xchg
mov
inc
outs
loopne
xchg
pop
jg
pop
hlt
cmp
sar
rcl
cld
test
ret
jns
mov
and
loop
adc
adc
push
je
mov
scas
cmp
xor
scas
inc
sbb
sar
jmp
dec
fstp
push
adc
inc
out
xchg
and
ja
cmp
xchg
push
ss
push
in
loopne
stc
in
sub
dec
mov
cmp
sub
xor
mov
std
stc
cdq
pop
(bad)
(bad)
sbb
shl
push
pop
enter
and
and
adc
scas
add
pop
push
xor
ficom
push
dec
sahf
popa
pop
pop
pop
mov
adc
test
mov
les
fidivr
sub
sub
mov
ficomp
push
jno
xlat
sahf
in
aam
sti
imul
ja
push
add
sbb
loop
aam
pop
xor
jmp
mov
test
mov
push
pop
retf
inc
mov
cld
cmp
cli
add
movs
lods
mov
cmp
sub
sti
mov
outs
enter
into
mov
outs
or
jp
rcl
test
int3
jecxz
inc
fmul
mov
outs
cmp
adc
addr16
push
xchg
dec
dec
jno
gs
fcomp
sbb
pop
and
sbb
inc
shl
icebp
shl
inc
pop
lds
lods
jp
jbe
daa
hlt
dec
es
stc
mov
inc
adc
int
jmp
aad
xchg
mov
and
ins
aaa
(bad)
cmp
daa
nop
enter
sar
loopne
add
aaa
repnz
and
dec
xchg
fsubr
xchg
push
pop
aad
ficom
cwde
loop
jp
not
or
xchg
js
fucom
jnp
pop
icebp
call
pop
pop
sti
push
xchg
or
mov
xor
clc
out
cmps
scas
sbb
mov
xor
mov
jmp
jae
sti
mov
das
in
jg
cs
and
sub
xor
lahf
scas
ins
push
sbb
push
xor
call
sub
jge
pop
mov
push
inc
jae
outs
inc
sbb
std
jmp
sar
add
outs
(bad)
cmps
sub
or
sub
fs
(bad)
jp
out
(bad)
dec
jp
sbb
loope
add
js
mov
add
pop
stc
dec
rol
xchg
pmullw
pop
pop
movs
cmp
xchg
nop
push
mov
imul
aas
mov
or
enter
ins
inc
icebp
push
dec
(bad)
sbb
mov
pushf
and
pop
and
leave
les
icebp
stos
inc
sub
xchg
lds
pop
xchg
sub
push
inc
stos
jne
mov
test
aaa
xchg
shr
adc
in
jae
lock
or
jno
push
dec
arpl
add
push
lods
xchg
mov
fisttp
mov
adc
loope
jmp
ficom
aam
xchg
cmp
call
or
jge
out
push
jnp
mov
add
shr
jb
outs
jnp
retf
dec
out
jo
loope
popf
out
xchg
jp
ret
out
in
inc
push
jmp
stos
sbb
out
sar
add
and
enter
leave
das
loopne
inc
ret
cli
pushf
pop
push
in
sbb
cwde
arpl
in
jne
push
dec
xchg
jb
ret
outs
js
adc
push
push
push
jo
fadd
je
and
pop
dec
push
jmp
mov
aam
mov
repnz
adc
lock
push
pop
dec
xor
enter
dec
push
lods
test
mov
pop
pop
adc
ds
rcl
and
dec
mov
jmp
lds
test
inc
or
push
lock
and
jae
xchg
ja
cmp
mov
mov
jns
push
dec
add
mov
(bad)
fild
lods
push
xor
mov
and
jmp
sbb
int3
ins
inc
fadd
(bad)
mov
mov
or
dec
mov
jmp
adc
xchg
jo
jg
push
xchg
paddb
add
jmp
adc
int3
mov
bound
adc
not
mov
nop
sub
add
int3
xchg
cmp
(bad)
cmc
das
mov
push
fcmovnu
shr
cmp
mov
adc
aad
inc
cmp
ins
cmp
sbb
call
xor
xchg
idiv
sbb
rcl
mov
aas
or
push
jp
lock
and
push
pop
sbb
dec
stos
sub
pop
fistp
fdivr
cmp
push
fstp
or
cld
iret
adc
adc
nop
popf
in
mov
aas
jmp
push
adc
mov
cmp
out
fcmovnbe
or
sbb
inc
lods
ss
sub
sti
fnstsw
int
ret
cmc
mov
inc
xor
jmp
popf
ja
out
sahf
and
mov
adc
sub
fst
(bad)
jecxz
push
hlt
sar
inc
cmps
(bad)
mov
inc
jae
jnp
pop
int3
cli
sbb
lock
dec
out
inc
xor
fimul
sbb
add
inc
lods
int3
test
xor
in
or
push
jl
sub
aas
out
movs
xchg
out
and
lods
cmp
scas
pushf
lds
es
mov
pushf
pop
fiadd
inc
sbb
dec
mov
mov
mov
test
iret
xchg
mov
sub
inc
or
sbb
push
arpl
cli
or
sub
xchg
dec
push
popa
iret
add
cmp
(bad)
fs
addr16
cwde
push
mov
sub
or
stos
scas
mov
sbb
mov
jmp
ror
adc
mov
jo
and
adc
xor
es
dec
sbb
sahf
xor
addr16
jo
call
mov
cdq
in
adc
and
sub
inc
mov
pop
adc
jg
imul
test
int
sbb
sahf
int3
(bad)
and
push
xorps
aas
das
test
test
sub
push
pushf
dec
outs
scas
fisttp
sahf
cmp
pop
out
push
out
jnp
dec
adc
jne
hlt
lahf
mov
call
mov
cs
mov
hlt
enter
test
push
add
xor
adc
push
xor
dec
dec
mov
push
ins
retf
sub
xlat
imul
xchg
xlat
stc
scas
dec
xor
pop
mov
dec
clc
outs
push
xor
icebp
movs
in
iret
mov
jmp
dec
mov
cdq
pop
cld
or
sbb
pop
mov
scas
add
mov
sbb
jnp
inc
daa
push
in
adc
or
mov
and
(bad)
imul
push
cmp
or
fwait
pop
mov
jecxz
rcr
pop
mov
jecxz
in
fs
(bad)
sbb
mov
aam
inc
std
add
sbb
add
push
fild
(bad)
outs
(bad)
push
rcr
loopne
mov
scas
mov
out
(bad)
jo
pop
dec
aas
mov
fwait
pushf
push
mov
aad
dec
enter
mov
popa
cmp
mov
xchg
clc
sub
cmp
fisttp
or
lods
mov
in
retf
mov
(bad)
mov
nop
push
test
xchg
arpl
mov
pop
push
mov
add
and
mov
adc
cmp
arpl
mov
push
adc
mov
rcr
dec
and
ret
(bad)
fnsave
jb
or
test
push
popf
rol
add
gs
xor
mov
stos
fcom
loope
fcmovnb
push
xchg
adc
push
ret
push
scas
or
adc
pop
xchg
pop
outs
sbb
jle
test
fs
int3
adc
test
repnz
stos
test
movs
outs
aam
pushf
cmp
out
inc
sar
sbb
pop
es
lea
ret
aaa
pop
mov
sub
frstor
bound
lock
movhlps
outs
adc
sbb
dec
std
jae
jmp
(bad)
jp
xchg
int3
arpl
cmp
mov
(bad)
cdq
(bad)
cmp
xor
mov
bound
pop
fnsave
les
(bad)
cli
mov
imul
jle
push
inc
fdivp
dec
cmps
ds
add
lahf
mov
scas
and
retf
(bad)
fsubr
fbstp
ds
push
sub
mov
xchg
push
dec
xchg
adc
aaa
hlt
fisub
pop
out
cmp
adc
fisubr
call
test
jecxz
mov
sub
call
lock
push
inc
inc
repz
inc
ror
js
movs
call
cmc
xchg
fwait
jge
jp
outs
dec
(bad)
lods
cs
int3
subps
(bad)
mov
shl
lods
(bad)
jbe
mov
cmps
mov
sbb
pusha
jecxz
xchg
and
or
test
aam
xchg
cmp
idiv
jb
mov
dec
jp
cdq
lods
sti
jae
sub
and
ins
dec
sub
jp
add
dec
push
rcl
(bad)
jmp
js
movs
and
sbb
pop
and
xchg
jns
out
mov
fst
push
sbb
shl
sub
mov
xchg
xchg
and
push
loop
jmp
movs
cmp
push
ret
mov
jl
clc
and
push
sbb
into
push
xchg
data16
cwde
hlt
mov
in
pop
push
sub
int
pop
push
add
imul
xchg
out
mov
inc
jo
inc
sbb
jns
dec
daa
aas
or
ins
and
cwde
icebp
adc
and
imul
loope
test
fdiv
xchg
inc
jae
adc
loop
xlat
bound
pop
xchg
dec
mov
push
pop
jne
mov
test
mov
lods
xchg
aaa
aaa
pushf
sub
pop
push
repz
arpl
mov
sbb
cdq
inc
(bad)
fstp
xchg
and
dec
xor
dec
push
jnp
or
enter
das
imul
mov
jle
inc
out
(bad)
leave
inc
fimul
inc
imul
cmp
jl
jle
retf
aas
adc
jnp
mov
jne
and
xor
mov
xor
mov
inc
and
cmc
mov
cs
mov
movs
and
adc
nop
jge
call
or
pop
loop
jno
fld
xor
xchg
xchg
repnz
iret
adc
mov
call
adc
aad
out
jb
arpl
and
mov
outs
xchg
mov
in
fidiv
lds
nop
or
pushf
ret
mov
into
call
lods
in
cmp
xchg
mov
lahf
sbb
adc
inc
retf
push
mov
mov
fwait
xor
fdiv
lahf
loope
iret
test
and
jnp
cmps
mov
or
push
jg
nop
pop
xchg
mov
fwait
add
mov
popf
adc
mov
ret
sbb
or
push
(bad)
test
cmp
ss
scas
cdq
cld
sub
pop
xchg
icebp
xchg
add
lds
or
jg
mov
mov
mov
rcl
mov
cld
and
arpl
xchg
sbb
sub
inc
dec
iret
repz
cmc
or
cwde
mov
xlat
and
lock
push
adc
inc
data16
(bad)
xchg
mov
sbb
stos
in
call
in
or
jae
sub
push
cmp
mov
jmp
mov
int
mov
fwait
inc
inc
mov
or
js
les
out
(bad)
cmp
lahf
xchg
cmp
aam
sar
sahf
dec
movs
push
es
mov
jle
out
add
mov
xchg
push
cmps
dec
adc
inc
jb
pushf
stos
adc
mov
sbb
mov
jo
daa
outs
jl
mov
sub
inc
mov
rol
pop
inc
cmp
xchg
fadd
cmp
leave
repz
inc
add
lods
jecxz
sbb
lds
pop
jmp
add
(bad)
hlt
xlat
lock
pushf
and
aad
sub
mov
icebp
sbb
add
daa
push
retf
mov
(bad)
out
xchg
cmps
aam
pop
sbb
mov
outs
shl
mov
(bad)
ret
inc
dec
jge
rcr
test
or
sbb
mov
cmc
jno
pop
dec
lahf
push
aas
ret
push
pushf
jl
xor
int3
ins
jne
adc
sbb
(bad)
mov
rcl
pop
out
popf
out
in
(bad)
xlat
jmp
mov
push
xor
mov
xchg
xor
mov
mov
dec
jo
shr
shl
cwde
jns
aas
xchg
pop
sub
cmp
xchg
mov
loop
mov
jae
ret
les
jno
inc
fmul
xchg
and
or
mov
sub
jbe
mov
mov
shl
icebp
sub
aam
(bad)
or
scas
dec
mov
ins
mov
xchg
call
push
stos
dec
mov
mov
push
xor
pop
loopne
mov
cli
push
inc
cmp
sbb
(bad)
pop
test
mov
hlt
pusha
jp
call
xor
jnp
mov
cmps
(bad)
push
fisub
inc
jecxz
cmp
jbe
into
xor
inc
bound
fdiv
js
outs
into
aaa
push
push
sub
fs
out
inc
shr
or
stos
cdq
in
movs
sbb
inc
xor
fdiv
mov
add
imul
pushf
push
mov
jne
lock
in
add
stos
xchg
jg
fisub
cld
gs
sub
test
cmp
repz
adc
sub
add
mov
sub
lods
mov
jp
mov
call
pop
sbb
jle
in
neg
lods
test
lods
cmp
cld
nop
adc
inc
in
daa
daa
xor
ja
fcomp
xchg
fs
iret
je
shl
popf
jmp
fisttp
xor
ss
pop
jne
stos
mov
shl
repz
sub
sbb
push
fisttp
jg
mov
cmp
or
in
xchg
or
pop
adc
cmps
inc
das
fnstenv
into
call
es
int
jl
mov
aaa
sbb
sbb
cmps
imul
inc
push
mov
repnz
mov
cmps
ins
daa
jmp
call
imul
xor
and
xchg
shr
movs
sub
dec
outs
lods
mov
pop
into
jp
(bad)
cmp
dec
sub
inc
lahf
js
pop
mov
add
(bad)
mov
aam
cmc
not
loope
xor
and
retf
jo
sbb
push
jo
and
xchg
dec
and
fwait
in
ret
dec
sub
mov
sub
pop
sti
popf
jbe
aas
jge
push
ret
inc
mov
mov
dec
xchg
stc
loope
push
xchg
ins
lods
jbe
hlt
adc
pop
fs
or
mov
ds
jmp
and
xor
sbb
xchg
or
and
cld
(bad)
aad
ins
test
test
je
mov
ficomp
sbb
add
retf
and
pop
scas
mov
lds
scas
hlt
xchg
adc
push
mov
scas
out
repz
xchg
ds
lea
adc
shr
or
mov
jns
adc
push
fdivr
jle
xchg
jnp
cmp
adc
mov
movs
or
push
push
inc
in
cmp
mov
(bad)
and
into
out
jne
enter
or
pop
push
mov
stos
test
repz
clc
bound
add
jle
sahf
pop
jp
gs
mov
xlat
jg
xchg
into
aaa
xor
popa
(bad)
jmp
mov
sbb
add
aad
and
sar
or
push
mov
ret
cmp
out
int
ret
lock
loop
movs
mov
mov
push
(bad)
shr
or
mov
shr
(bad)
dec
dec
pushf
jmp
fistp
out
pop
fdivp
test
retf
stos
cmps
push
inc
out
cmp
or
mov
out
test
xchg
mov
xor
leave
inc
outs
and
shl
das
imul
int3
sub
mov
aam
xchg
(bad)
cmp
adc
cdq
xchg
jne
jge
aas
popa
adc
add
inc
push
loope
(bad)
jmp
and
shl
js
daa
push
loope
fldcw
sub
mov
inc
(bad)
nop
es
xchg
ret
jnp
(bad)
test
mov
in
in
out
sbb
dec
mov
in
sbb
mov
into
push
jge
xrelease
mov
xchg
jecxz
movs
repnz
shr
mov
jl
fidiv
lds
sub
push
xchg
add
mov
ins
sbb
xchg
sar
jns
dec
mov
sbb
sahf
and
popf
and
popa
jbe
or
and
data16
xor
sbb
adc
jb
dec
mov
loope
movs
arpl
in
out
out
gs
and
in
mov
fwait
(bad)
push
sbb
nop
pop
or
adc
mov
inc
dec
mov
sahf
data16
push
xor
out
int
mov
dec
mov
arpl
test
mov
xchg
test
dec
call
xor
xor
(bad)
pop
(bad)
pop
jge
inc
fmul
push
test
cmps
add
daa
loope
ss
and
idiv
add
ja
pop
lds
inc
(bad)
out
push
mov
std
cli
imul
rcr
out
out
or
dec
cmp
mov
out
pop
inc
pop
mov
mov
inc
je
push
dec
adc
mov
xchg
mov
push
xchg
mov
aaa
dec
jmp
imul
imul
icebp
cmp
jle
jp
cli
lds
add
add
leave
out
jmp
push
or
jg
(bad)
retf
xchg
or
push
push
js
xor
mov
mov
mov
jge
shl
fnstsw
shl
(bad)
cwde
test
jbe
aas
into
push
pop
sub
xor
stos
enterw
inc
sub
nop
test
rcr
pop
dec
(bad)
in
mov
and
dec
or
call
lock
test
jmp
xchg
ret
shl
adc
adc
mov
dec
mov
sub
and
pusha
outs
adc
and
xchg
daa
dec
xor
mov
xchg
inc
push
outs
push
xchg
adc
dec
push
in
push
cmps
sbb
lods
iret
fbstp
inc
pop
push
iret
jp
xor
clts
lods
and
cmps
or
jmp
pop
repnz
dec
and
sub
mov
loopne
mov
xchg
ret
jp
fstp
lods
outs
call
std
movs
scas
loope
xchg
pop
dec
add
pop
adc
mov
test
sbb
fcom
and
cdq
jbe
in
push
cmps
pop
mov
ds
ss
iret
xchg
je
inc
sti
js
(bad)
fistp
mov
pop
out
push
sub
test
mov
xor
sbb
test
pusha
fld
fcmovnbe
stos
sub
dec
cmp
hlt
rol
les
jle
and
inc
fadd
int
lahf
add
fdivr
mov
popa
(bad)
and
sbb
in
inc
call
out
test
out
xlat
cmp
dec
and
in
je
pop
cmps
rcr
(bad)
shl
push
and
fcmove
dec
fnsave
fcmovne
loopne
leave
mov
fcomp
ds
jge
(bad)
adc
cmp
add
hlt
push
adc
(bad)
jl
xchg
ret
push
adc
xchg
mov
xlat
sbb
inc
mov
loopne
cs
shr
xlat
xor
xchg
(bad)
cmp
or
arpl
dec
mov
je
gs
cmp
push
push
imul
jns
fidivr
lods
cmp
xchg
stos
outs
xor
repnz
outs
in
inc
sub
push
ret
les
imul
mov
fidivr
js
xor
mov
sbb
popa
mov
push
repnz
xchg
mov
outs
pop
rcl
fcomp
jp
mov
push
ret
mov
fistp
int3
and
cmp
imul
test
sysexit
push
xchg
cmp
or
sub
and
fsubr
rcr
imul
pop
gs
ins
das
mov
cmp
xchg
inc
cmp
jecxz
ja
jmp
or
add
int
mov
dec
ficom
loopne
call
xchg
ret
movs
jp
mov
cmp
add
push
in
cmps
inc
rcl
jmp
idiv
shl
push
and
daa
xchg
jnp
leave
cmc
push
inc
xor
or
add
pop
sub
push
(bad)
popa
mov
bound
push
sbb
in
test
pop
jmp
push
fidivr
pop
ds
jno
mov
or
mov
in
pop
pop
in
retf
pop
fsubr
sahf
add
retf
inc
pop
push
push
mov
jmp
add
fldln2
xchg
(bad)
adc
leave
dec
data16
mov
fcom
pushf
xor
mov
out
pusha
mov
(bad)
cli
mov
inc
jne
mov
pop
and
fwait
mov
and
fucomip
shl
test
fmulp
shr
into
loopne
pop
xor
fwait
jne
mov
inc
mov
std
aas
xchg
push
jb
pop
fsub
and
push
inc
ja
sbb
(bad)
or
pop
stos
imul
jp
inc
mov
pop
sbb
ds
retf
dec
imul
daa
mov
adc
icebp
cdq
inc
sbb
push
mov
scas
inc
cmp
iret
cs
ret
push
nop
movs
ja
jmp
sub
adc
inc
jnp
in
arpl
jo
pop
mov
mov
cli
test
lea
fs
fisub
or
test
mov
and
pop
add
push
and
adc
mov
dec
cmp
pusha
bound
test
lea
inc
pop
pop
and
mov
adc
lods
inc
std
rol
dec
pop
imul
and
sub
mov
jge
(bad)
or
mov
adc
push
repz
mov
out
or
inc
jecxz
or
cmp
jae
retf
lahf
loopne
jl
pop
sbb
cs
mov
xchg
mov
sub
movs
mov
imul
mov
out
cmp
into
ins
xor
data16
pop
fsubr
inc
out
sub
dec
mov
adc
add
stos
sbb
mov
dec
xor
push
ds
sub
xor
pop
add
and
clc
jno
adc
ror
call
sub
out
shl
inc
jae
sub
mov
adc
in
or
loopne
add
retf
push
loop
xchg
lahf
inc
mov
adc
mov
xchg
aad
out
fidiv
imul
and
fstp
mov
(bad)
inc
xchg
add
mov
or
dec
popa
mov
fisub
les
inc
ret
pop
adc
lock
push
cli
in
and
data16
mov
and
fstp
add
aaa
retf
sti
test
rcr
das
inc
dec
cmc
xor
pop
sub
mov
stc
cmp
mov
rol
jae
mov
(bad)
lea
or
jnp
lock
mov
les
fcomp
dec
call
xchg
rcr
sub
xchg
mov
cld
gs
shl
icebp
out
fsubr
stc
xor
dec
cmp
movs
xchg
pop
jbe
or
jns
dec
pop
inc
sahf
adc
cmps
arpl
test
shl
pusha
in
shr
and
mov
push
pop
cmp
mov
add
add
mov
or
dec
push
push
jge
xor
xchg
jbe
movs
xchg
or
inc
ja
xchg
sti
and
jo
push
or
retf
adc
jcxz
jnp
jg
aas
fucomi
in
xchg
clc
push
jmp
or
sbb
jne
push
arpl
xchg
test
mov
adc
mov
ret
mov
sti
push
cmp
test
aam
or
and
sbb
xor
xchg
(bad)
out
icebp
in
xor
mov
rcr
test
jl
rcr
in
retf
(bad)
jmp
call
dec
call
pusha
mov
or
jl
cdq
xchg
adc
mov
(bad)
xor
or
pop
enter
outs
in
xlat
sbb
xchg
imul
inc
fimul
outs
shl
push
mov
cmps
popa
jge
in
pop
fld
pop
retf
adc
aad
lahf
scas
pop
sbb
lahf
adc
xchg
push
loope
in
mov
adc
xchg
stos
sti
pop
add
push
mov
push
and
inc
shl
hlt
xor
xor
sub
push
in
dec
sub
jmp
cdq
xchg
lods
lods
sbb
sub
pusha
retf
pop
inc
leave
sbb
adc
call
nop
mov
(bad)
retf
loop
pop
xchg
mov
push
ret
and
or
add
jge
mov
mov
mov
sub
jmp
je
cmps
sti
jne
mov
sbb
repnz
inc
ds
popa
in
cmp
adc
test
das
ss
(bad)
pop
mov
fs
inc
aaa
jle
inc
push
loopne
call
pop
test
sbb
push
(bad)
jecxz
mov
mov
popf
push
dec
dec
jl
sub
inc
ja
mov
test
int3
push
ss
dec
sar
and
xchg
jle
inc
push
lods
dec
mov
fdivr
jne
out
mov
or
mov
push
sbb
aaa
inc
mov
cmp
mov
cmp
js
pop
leave
inc
jbe
push
inc
add
loop
jns
mov
and
adc
call
inc
lahf
(bad)
fbld
mov
addr16
pop
mov
or
scas
aam
ret
rol
sbb
xchg
push
(bad)
fcomi
ret
ror
jp
iret
rcl
cdq
out
stos
int3
in
sub
pop
mov
out
imul
jl
or
pop
movs
push
mov
(bad)
sbb
fwait
sbb
sub
movs
jno
mov
xchg
mov
stos
clc
add
test
aam
or
(bad)
shr
mov
pop
or
hlt
xor
adc
mov
sar
fist
cld
es
mov
bound
jl
mov
xchg
xchg
and
mov
or
sti
inc
rol
jb
cmp
aaa
and
mov
pop
push
mov
fdivr
adc
jo
or
into
mov
sub
(bad)
jns
loopne
cmp
dec
mov
or
addr16
ffreep
mov
ds
and
in
sahf
mov
mov
or
stos
pop
into
dec
cdq
nop
(bad)
xlat
mov
inc
sbb
out
push
aas
push
jmp
xchg
mov
clc
mov
xchg
std
in
jg
inc
bnd
aad
mov
push
(bad)
mov
shr
push
adc
(bad)
out
imul
cs
pop
out
ds
pop
or
imul
push
mov
scas
call
loope
movs
and
(bad)
loope
pop
pop
inc
and
or
jmp
cmp
test
clc
or
pusha
xor
movs
inc
mov
jb
inc
or
jb
jne
sbb
mov
mul
mov
pop
or
jbe
sub
out
dec
add
leave
sti
das
adc
or
mov
imul
ins
leave
mov
sbb
mov
jne
add
mov
adc
out
ret
pop
aad
push
pop
jp
call
pop
jp
jae
shl
sub
dec
les
add
mov
sti
dec
push
retf
cmc
xchg
or
lds
jae
ins
cmp
leave
add
fild
leave
cmp
sub
ins
iret
in
icebp
mov
stos
jge
dec
xor
call
std
lods
pop
xchg
lods
mov
movs
fidiv
mov
in
scas
sti
push
push
ja
int3
ficom
or
iret
mov
test
mov
or
(bad)
fwait
xor
inc
add
xor
pop
push
sar
mov
mov
and
xor
add
adc
mov
nop
test
mov
std
cmp
daa
lock
mov
test
sbb
test
aas
mov
lods
sbb
cmp
movs
push
push
add
dec
xlat
int3
mov
cwde
xchg
xor
inc
fsub
aam
sub
xchg
cmp
mov
repz
enter
jl
dec
fisub
es
scas
adc
clc
jns
imul
sbb
into
test
adc
mov
xor
jmp
retf
cmps
inc
out
xchg
shl
in
inc
xlat
movs
jge
clc
pop
add
mov
in
inc
popa
iret
(bad)
jle
sub
out
push
sub
dec
cmp
push
int3
mov
jl
ret
pop
jl
and
jp
sub
popa
jl
add
pop
xchg
inc
or
fdivr
cmp
out
mov
shl
(bad)
adc
cmp
adc
test
pusha
xchg
xor
test
mov
movd
cmps
pushf
xor
(bad)
(bad)
cs
into
pop
aaa
jae
out
xchg
dec
loope
xchg
test
jmp
mov
shr
nop
jbe
sbb
mov
or
add
mul
lods
rol
bound
mov
ret
add
jmp
mov
and
popf
push
stc
push
jns
fisub
lahf
scas
push
dec
retf
push
xchg
xchg
pusha
jp
jo
xchg
inc
out
sbb
mov
sub
and
adc
jbe
sub
dec
loop
and
inc
sbb
xchg
imul
test
movs
popa
ins
fcmovbe
pusha
dec
les
and
loop
lods
sub
fsubr
or
sbb
or
adc
out
sub
hlt
jmp
inc
hlt
cmps
fs
ret
cmp
fdiv
outs
xor
cld
inc
or
aaa
pusha
pop
push
loope
cmp
shr
jns
mov
sbb
xor
adc
or
fwait
std
push
jp
jp
test
cs
add
xchg
fisttp
mov
(bad)
jo
sub
lds
je
push
xor
cdq
sbb
cld
dec
cmp
data16
popa
fdivp
fmul
sbb
sbb
pavgw
adc
pop
movs
lock
repz
and
push
jmp
mov
fistp
sub
out
and
or
adc
sbb
stos
imul
cmp
mov
lods
test
scas
arpl
out
jecxz
retf
test
jle
mov
push
mov
repnz
aad
in
das
inc
lahf
dec
outs
cmps
inc
stos
aad
or
sahf
scas
push
mov
cld
das
movs
add
push
aad
pop
js
adc
push
das
xchg
jmp
in
push
push
adc
push
mov
lds
dec
add
lds
cmp
push
jno
pop
xchg
(bad)
push
push
sbb
xor
fst
test
rol
pop
pushf
pop
(bad)
adc
lods
test
mov
dec
sbb
cdq
daa
jb
add
jmp
mov
lods
cli
scas
scas
sub
xor
pop
and
retf
sbb
xchg
std
cmp
push
sub
adc
pop
cmc
shr
jmp
(bad)
mov
xchg
xchg
xchg
jns
fld
imul
inc
arpl
nop
and
in
mov
hlt
mov
pop
cld
movs
loop
adc
retf
pop
mov
xor
call
cld
mov
scas
dec
dec
nop
dec
outs
aam
pop
cmp
add
or
jle
ret
retf
pop
test
push
cs
clc
jno
dec
fbld
in
in
jmp
ret
lea
mov
sbb
pop
inc
cmp
mov
in
xlat
xor
lods
cmps
popa
sbb
pop
out
les
lods
jge
dec
push
add
cmp
cmps
xchg
enter
mov
rcl
push
xchg
mul
inc
pop
js
jle
xor
inc
adc
repnz
fucom
es
or
pop
mov
dec
cmp
cli
(bad)
add
aas
push
mov
mov
mov
pop
js
pop
xchg
xchg
ins
adc
xor
xchg
or
sar
loopne
leave
ins
(bad)
dec
adc
and
shr
in
ss
or
mov
hlt
cmc
mov
js
rcr
dec
xor
mov
adc
xchg
pop
es
mov
(bad)
mov
in
sbb
movs
jbe
addr16
and
or
xor
stc
xor
dec
repz
in
shl
mov
(bad)
lock
rol
outs
adc
popf
out
in
mov
jno
sbb
cmc
aaa
jecxz
xchg
mov
fs
daa
mov
and
xor
rcr
push
in
(bad)
out
inc
mov
shl
inc
mov
out
add
jl
xorps
cwde
cmp
fwait
pop
inc
int3
jnp
cli
push
and
stc
mov
fdiv
(bad)
mov
pop
out
push
dec
test
sbb
mov
sub
push
repnz
outs
icebp
ret
cmp
inc
add
cmp
aaa
adc
or
fnstsw
(bad)
cmp
jnp
not
cmp
and
in
cli
fs
repnz
xor
mov
jp
mov
add
ss
sbb
jne
pop
ja
or
pop
jle
mov
sbb
pop
pop
leave
lods
xor
(bad)
stos
int
call
out
mov
fdiv
or
push
pop
jns
sar
mov
jle
(bad)
jbe
mov
dec
sbb
int3
int
fcmovu
aad
cmp
jmp
xor
push
add
mov
add
stos
das
fwait
inc
(bad)
lock
inc
in
fldcw
stos
dec
mov
lods
jp
jge
test
mov
int3
cmps
jne
fcmovu
xor
stos
in
mov
mov
add
loopne
inc
adc
mov
cmps
cmp
jecxz
mov
in
mov
repnz
mov
fmul
sub
sub
(bad)
mov
sbb
adc
cmps
rol
retf
inc
lea
cmps
clc
inc
pop
movs
pop
xor
add
xchg
jno
fsubp
pop
out
popa
bnd
ficom
inc
lds
add
popa
(bad)
imul
adc
mov
and
rcl
pop
nop
add
data16
(bad)
loope
leave
ins
cmp
sbb
push
mov
repz
adc
dec
stos
jmp
(bad)
cli
shr
test
or
mov
and
pop
mov
addr16
mov
pop
out
shl
out
cmp
jne
leave
cmps
mov
test
dec
adc
(bad)
dec
stos
int3
and
push
lea
loop
leave
push
(bad)
xor
ins
jmp
bound
cmp
ret
aas
push
push
sbb
inc
das
dec
scas
pop
ja
imul
adc
jbe
jo
aas
je
and
rol
(bad)
mov
sbb
or
add
dec
pop
das
retf
jmp
fstp
push
(bad)
jp
adc
cmp
bswap
cmps
or
jb
inc
jmp
(bad)
(bad)
stos
arpl
sub
mov
rol
adc
mov
outs
ret
(bad)
sub
enter
rol
(bad)
loop
outs
movs
mov
scas
mov
mov
lea
cmp
test
dec
imul
jp
push
out
rcr
or
out
repnz
sti
adc
stos
ret
sbb
xor
loop
jb
dec
and
mov
rcr
hlt
xor
xlat
sbb
jle
dec
les
jge
das
push
sub
in
clc
clc
push
push
out
mov
ret
test
int
sub
sahf
fsubr
mov
retf
icebp
push
pusha
add
loopne
dec
in
call
mov
adc
mov
mov
push
mov
das
int
add
test
add
les
call
dec
ret
imul
push
loop
mov
test
add
outs
dec
xchg
js
dec
aaa
lods
dec
pop
cmc
gs
jo
mov
and
int
cmp
mov
hlt
(bad)
ss
sub
push
adc
jbe
out
aaa
push
popa
fwait
out
pushf
push
fist
dec
rcl
mov
and
data16
retf
pop
sub
ja
sub
mov
arpl
or
adc
sub
dec
loope
pusha
neg
add
loopne
iret
sbb
push
ins
adc
shl
iret
ins
int3
ins
xor
addr16
mov
cmp
dec
test
push
and
retf
leave
daa
sbb
imul
stc
out
sub
push
das
ror
movs
sbb
test
sub
popf
xchg
inc
pushf
mov
xor
addr16
inc
mov
outs
dec
out
or
std
jecxz
in
loopne
jl
and
(bad)
mov
mov
shr
imul
push
shl
jg
push
jl
test
stos
push
fldcw
mov
and
ss
or
dec
mul
mov
pop
add
(bad)
sub
test
ficom
fsub
stos
cwde
mov
adc
scas
push
xor
mov
inc
int3
mov
inc
sbb
push
jo
mul
add
test
jne
and
stc
daa
add
cmp
retf
xor
aas
sbb
dec
mul
aas
cwde
jecxz
pop
pop
ja
dec
sbb
jmp
daa
add
lahf
mov
add
popa
imul
dec
fdivr
int
xchg
std
in
int
(bad)
(bad)
call
mov
iret
scas
je
mov
ss
(bad)
cli
fstp
or
dec
aam
cmps
jnp
cmp
fist
mov
fsubr
mov
pop
int
jae
out
jae
movs
and
popf
(bad)
std
call
jmp
mov
call
cmp
call
cmp
mov
(bad)
jge
sbb
js
cmp
cwde
cmps
dec
jmp
jle
fdiv
out
mov
repz
xchg
lds
or
fdiv
push
and
mov
(bad)
mov
lea
stc
std
xchg
add
jge
mov
cmps
jecxz
jne
in
pop
jae
sub
movs
int
sbb
push
dec
fisub
in
or
xor
inc
adc
hlt
jl
mov
and
pop
lods
leave
js
xlat
xchg
scas
and
or
and
hlt
mov
inc
test
(bad)
jbe
mov
adc
sbb
popa
ins
sar
fsubrp
mov
(bad)
and
outs
cmc
or
outs
pusha
jmp
aas
sbb
hlt
mov
ror
sbb
mov
cdq
cmc
es
test
fs
cmp
jmp
stos
fsub
mov
mov
mov
mov
mov
xchg
rcl
pop
lahf
pop
(bad)
lea
sub
jne
std
pop
stos
aam
js
xor
fnstenv
pop
sbb
pop
jnp
mov
shr
bound
pop
int
xor
fs
mov
fnstsw
mov
shl
adc
pop
ret
pop
or
push
mov
xchg
push
stos
and
cld
xor
(bad)
fldcw
retf
ja
stc
mov
xchg
pusha
xchg
inc
(bad)
pop
lds
cmp
dec
mov
push
inc
xor
(bad)
stc
shl
push
and
cmps
jne
scas
and
mov
xchg
mov
iret
jbe
jnp
jbe
jle
iret
retf
dec
lahf
popa
rcr
mov
inc
push
cld
inc
jb
lods
lock
push
xor
or
or
inc
std
call
sbb
ins
lods
clc
push
sbb
fidiv
xchg
dec
mov
or
cld
jns
sub
pop
adc
mov
fldcw
push
push
push
sbb
jns
popf
push
movs
out
and
and
add
int
sbb
xor
popf
mov
sub
jle
in
push
and
push
mov
xchg
sub
mov
xchg
and
push
mov
movs
div
pop
ret
cmp
mov
mov
repz
sbb
inc
cmps
ja
fs
and
mov
dec
mov
arpl
cmc
adc
jmp
fisub
fbld
pushf
mov
push
adc
pop
dec
jge
cmp
jmp
xor
add
and
div
mov
push
sbb
loope
jp
rcr
retf
sbb
retf
addr16
jnp
push
and
lods
inc
enter
test
lock
ret
cmps
push
cmp
sub
sub
inc
fsubr
push
mov
es
addr16
call
sti
rcr
gs
lock
xchg
push
sub
inc
push
jl
jp
ds
sub
sbb
(bad)
sbb
or
outs
test
cmps
not
or
ins
push
mov
push
rol
pop
clc
call
sub
lods
call
sub
jmp
mov
adc
and
aad
push
loope
outs
cmp
fistp
fldenv
xchg
gs
sbb
sbb
stos
or
xchg
xchg
imul
in
retf
mov
push
and
ins
xchg
stc
dec
jmp
retf
shr
jnp
into
lahf
xchg
ds
sub
iret
cld
and
lahf
xchg
xor
and
mov
cmc
mov
sar
add
pop
outs
(bad)
scas
rol
jne
stc
mov
inc
in
push
pop
ds
pop
mov
popa
mov
xor
in
xor
retf
outs
or
cs
pusha
call
cld
sub
xor
pop
add
(bad)
fst
or
test
lock
pop
mov
mov
add
jno
push
lods
frstor
and
mov
setg
sub
js
sar
mov
ins
mov
push
outs
dec
pop
sub
or
(bad)
(bad)
mov
lods
xchg
les
ins
ror
inc
dec
cmp
mov
xchg
mov
loop
stc
xor
fmul
inc
pop
push
mov
lahf
in
xchg
pop
dec
int3
sbb
xchg
mov
repnz
lock
stos
cs
test
movs
adc
or
add
sub
lahf
cmp
nop
xchg
mov
fwait
leave
and
pop
mov
movs
push
dec
jmp
dec
in
daa
retf
jle
mov
call
xor
xchg
fcom
mov
iret
push
outs
push
ss
jnp
mov
jp
sbb
adc
cdq
movs
test
dec
mov
out
jp
cmp
popf
ss
mov
ret
jne
fldcw
cmc
ss
je
push
dec
adc
ja
sbb
loop
cs
cli
ficom
dec
outs
lahf
in
aaa
inc
inc
call
shr
fcomp
(bad)
call
inc
ret
cli
lahf
mov
adc
push
retf
pop
mov
cmp
lods
pop
addr16
lods
psubw
pop
xchg
dec
or
jbe
cwde
imul
fstp
push
arpl
je
mov
adc
xor
and
xor
sahf
(bad)
jle
(bad)
or
mov
mov
sbb
lds
jae
xor
stos
jb
inc
mov
xor
push
and
sbb
mov
mov
mov
mov
bound
sbb
es
push
xor
mov
mov
inc
inc
add
jb
mov
mov
iret
push
das
fwait
sub
mov
repz
mov
ss
imul
cmp
call
inc
outs
jo
js
sub
jb
sub
pop
adc
xor
adc
mov
ror
rcl
or
jp
mov
hlt
xchg
dec
mov
sub
mov
cmp
mov
pop
mov
push
pushf
dec
jecxz
xchg
jmp
stos
or
adc
dec
aas
xor
imul
daa
cmp
mov
addr16
mov
aaa
out
in
inc
fisttp
pushf
call
ins
jmp
in
test
sbb
xchg
ss
jecxz
iret
xchg
popa
out
adc
call
call
jns
adc
test
repz
inc
int
mov
mov
repnz
mov
pop
inc
sbb
gs
sbb
push
cmc
mov
lock
push
inc
dec
fstp
call
nop/reserved
inc
stc
out
mov
jle
or
sub
mov
js
push
lahf
aam
cmps
push
and
add
adc
push
jmp
xor
mov
adc
fistp
jne
dec
sbb
mov
aaa
stc
ja
ret
pop
mov
push
int
pop
inc
pop
dec
sti
mov
scas
lods
pop
xchg
out
sub
sub
gs
jle
aaa
or
ins
and
sbb
test
jae
mov
jp
mov
push
jge
ins
add
jp
imul
add
inc
dec
pop
dec
or
(bad)
mov
ins
mov
rcr
add
sti
mov
in
shr
cmp
fwait
and
test
lahf
bswap
(bad)
enter
mov
jo
dec
inc
scas
fist
or
test
sti
(bad)
sbb
xchg
sub
cmc
(bad)
sub
inc
cmp
pop
pop
dec
arpl
xor
rol
arpl
adc
js
push
mov
mov
mov
xor
int
std
xor
push
das
mov
xchg
aad
shrd
cli
rol
frstor
jno
push
mov
adc
inc
dec
fldl2e
ficomp
pop
cmp
adc
neg
mov
sar
xor
adc
je
pusha
push
jns
cmp
ins
movs
test
das
dec
iret
pop
xchg
out
aad
xor
clc
sub
fnsave
or
repnz
push
adc
sub
int3
std
cmp
jp
das
clc
dec
mov
out
ror
mov
daa
retf
inc
stos
add
inc
jl
dec
and
xor
add
fsubr
push
xor
push
sbb
jge
cmps
cmp
cld
idiv
and
test
outs
and
or
call
xchg
sub
mov
push
dec
lods
mov
mov
cmp
out
lds
sti
xor
lahf
push
add
push
(bad)
sbb
aad
xor
test
out
imul
daa
movs
aad
lods
lea
push
rol
dec
mov
lods
xchg
push
int3
mov
pop
imul
inc
adc
xchg
loope
add
mov
aas
addr16
cmps
add
pop
mov
push
dec
sub
sbb
pop
add
sub
lods
imul
int
dec
call
inc
sub
jmp
mov
xchg
push
dec
inc
ret
fucomp
shr
sub
pop
or
aas
add
int3
jno
adc
mov
fnstcw
sti
retf
lea
xchg
xchg
fwait
cmp
cmps
clc
cmp
mov
xchg
in
imul
dec
movs
in
xchg
cs
push
inc
addr16
pop
and
lods
fsub
add
imul
mov
cld
jo
cmps
shr
sbb
mov
adc
pop
stc
jo
dec
icebp
test
xchg
jo
sub
pop
add
rol
loope
lahf
ret
push
dec
or
hlt
inc
add
mov
xor
mov
imul
cmp
pop
bound
jp
fbld
in
pop
add
mov
xor
ins
inc
fild
xor
sub
jae
and
jp
mov
arpl
dec
or
aam
int
and
in
xor
xor
push
hlt
add
scas
mov
ja
pusha
shl
xor
fwait
rol
sbb
outs
bound
or
(bad)
je
mov
pop
and
aad
sbb
xchg
sub
rcr
mov
pop
shr
dec
fsub
mov
pop
push
(bad)
adc
sbb
cmps
fisttp
xchg
xor
jecxz
sahf
jne
pop
retf
and
out
leave
in
mov
loope
adc
jge
adc
mov
xor
out
lock
adc
stos
xchg
ins
xchg
adc
cmp
rcl
outs
popa
mov
retf
cmp
inc
lock
xchg
mov
(bad)
repnz
sub
jno
and
mov
pop
jl
lods
sbb
retf
test
in
xor
fsubr
int
movs
and
cmc
push
sub
sbb
add
jae
xor
cmp
lgdtd
mov
mov
push
sbb
ja
jno
shl
cmp
fst
rcl
xchg
ja
mov
xchg
add
ds
cld
adc
adc
and
pop
icebp
stc
cdq
and
jle
in
test
rcr
stc
dec
aas
push
sti
adc
jmp
mov
shl
fcomp
cmp
leave
jo
xor
aad
dec
popa
or
int
jno
ds
cmps
sbb
pop
push
push
dec
stos
pop
cmps
sbb
jb
add
push
add
sar
sti
fld1
push
fisubr
or
(bad)
jg
add
dec
adc
lahf
jl
lahf
int
fsub
(bad)
es
mov
dec
mov
mov
mov
mov
popfw
lds
ret
(bad)
stc
or
enter
jns
push
xchg
punpckhdq
not
loopne
aad
bound
test
(bad)
into
je
imul
aam
inc
mov
cdq
daa
fcomi
mov
and
stos
sub
push
rcr
pop
lock
int3
and
stos
and
xchg
arpl
sub
hlt
sbb
cld
enter
fwait
pop
retf
jmp
or
xchg
mov
(bad)
inc
cmp
xchg
pop
sub
out
lea
(bad)
xor
or
xor
out
mov
jb
outs
popf
xchg
test
int3
sbb
mov
sbb
pop
fstp
pop
add
scas
xor
scas
dec
dec
inc
shr
mov
push
sbb
iret
jle
push
ja
sub
push
rol
lods
enter
call
clc
add
jb
dec
jno
xor
adc
aas
adc
xor
(bad)
cwde
xchg
add
out
jle
jb
add
mov
ja
adc
push
jle
add
aaa
lods
icebp
test
js
or
push
out
mov
fsub
fwait
add
outs
and
stc
out
int
xor
bound
daa
push
xchg
xlat
sahf
ret
out
shr
xchg
sub
jb
inc
dec
repz
or
nop
je
test
(bad)
leave
or
bound
mov
and
sbb
add
out
lds
icebp
adc
(bad)
mov
jmp
jg
rdpmc
(bad)
lahf
push
aam
or
stos
pop
mov
fadd
loop
sti
add
fbld
ret
daa
pop
fs
fwait
push
lahf
cmps
test
dec
mov
jne
ficom
gs
loop
retf
and
xchg
out
or
sbb
jmp
sub
cmp
mov
cmovp
mov
cld
jbe
cld
shr
sub
(bad)
xchg
fld
xchg
enter
mov
or
or
mov
or
fisubr
or
pop
inc
jne
or
mov
lds
and
lock
jnp
mov
jb
xor
cwde
enter
lods
cmp
pop
fstp
inc
arpl
jno
fistp
ss
xchg
mov
sub
std
out
(bad)
push
cmp
stos
clc
push
cdq
rcr
xchg
jo
mov
daa
gs
je
mov
(bad)
mov
imul
out
les
fstp
mov
mov
and
dec
push
push
xchg
lea
xchg
adc
push
loope
je
sar
les
cmp
jl
ins
in
mov
cld
xchg
mov
mov
and
in
xor
xchg
dec
mov
es
cwde
push
push
imul
rcl
xor
inc
shr
in
adc
enter
in
into
icebp
sub
(bad)
pop
pop
hlt
scas
je
push
scas
push
or
add
mov
loop
sub
sti
add
adc
mov
in
mov
ret
imul
inc
bsf
cli
adc
iret
js
les
sbb
mov
mov
cld
es
std
mov
push
xchg
and
or
aam
aam
mov
xchg
push
jmp
inc
inc
xchg
bound
sti
pop
jae
xchg
push
jmp
xchg
cmps
inc
ret
push
dec
aas
scas
fs
test
inc
sub
sbb
mov
test
mov
xchg
add
aam
pop
out
data16
jo
add
aad
lock
inc
cmps
sbb
xchg
data16
adc
mov
and
inc
mov
xor
mov
mov
and
push
bound
fnsetpm(287
fstp
dec
cli
sub
je
xlat
push
mov
nop
test
mov
push
dec
cmps
repz
div
popf
jg
out
retf
sbb
loopne
push
loope
mov
lods
out
inc
dec
(bad)
(bad)
cmps
mov
sti
sti
test
xchg
fistp
or
xlat
pop
adc
cmps
jmp
jl
sub
jp
gs
repz
daa
fnsave
in
xlat
xor
push
jle
jg
cmp
(bad)
push
(bad)
mov
inc
mov
bound
dec
cdq
inc
or
idiv
sub
fwait
mov
fld
xchg
ss
in
jg
adc
jb
out
out
mov
mov
cmc
in
std
mov
imul
xchg
(bad)
pop
push
push
pop
clc
(bad)
xor
cmp
out
fldenv
push
fdiv
aas
pop
add
mov
sbb
push
push
lds
dec
or
dec
fcomp
shr
adc
and
mov
(bad)
stos
ja
stos
aaa
push
outs
add
xlat
jno
cmps
inc
cmps
cmc
sub
push
retf
mov
pop
mov
ds
stc
into
repz
out
or
and
cwde
pop
dec
ins
scas
and
pop
ja
cli
and
mov
mov
fwait
jns
out
jmp
fsub
cmps
and
fiadd
loopne
jmp
ror
mov
jle
(bad)
hlt
dec
sbb
jmp
xchg
xlat
mov
loop
pcmpeqd
add
add
stos
aad
scas
stos
inc
mov
das
adc
xor
imul
jns
repnz
nop
cmp
test
or
xchg
test
sar
daa
xchg
out
jp
mov
(bad)
shl
loope
jmp
jecxz
repz
mov
or
cwde
mov
mov
adc
xchg
pop
js
out
xchg
pop
test
push
or
cs
pop
jo
aaa
repz
mov
or
mov
mov
test
test
xor
fwait
xchg
pop
leave
sub
mov
(bad)
pop
and
dec
push
sbb
loopne
mov
les
in
or
and
jg
stc
fcomp
dec
scas
inc
add
mov
aas
shl
in
push
int3
cmp
div
loop
xchg
inc
daa
inc
popf
and
pop
adc
in
les
jp
xor
mov
dec
push
or
sub
lahf
mov
xor
jns
dec
xor
iret
inc
clc
pushf
xor
shr
scas
lahf
mov
sbb
int3
cli
inc
sbb
scas
jmp
xor
ret
push
out
mov
or
dec
out
clc
stos
push
fiadd
cmovg
dec
imul
jg
fmul
push
arpl
xchg
movs
lahf
jns
or
popf
fst
xchg
retf
or
scas
nop
sub
inc
cs
mov
add
push
push
jl
inc
or
mov
fild
adc
cmps
and
rol
leave
jl
ret
dec
sbb
ret
adc
fdiv
hlt
sbb
push
jle
adc
xor
push
iret
push
mov
sbb
test
cmp
retf
sahf
in
call
jae
push
jge
test
ins
add
lds
cmps
(bad)
mov
xchg
mov
add
xchg
dec
popa
scas
add
nop
xchg
jae
inc
or
xchg
dec
add
inc
cmps
shr
rcl
fcomp
jnp
mov
out
jle
aas
push
and
in
imul
mov
cmps
std
xor
sbb
jnp
mov
pusha
push
add
sar
jp
cmc
retf
scas
repnz
retf
loopne
stc
js
int3
loopne
or
xchg
or
fidiv
cmp
push
ins
add
and
jmp
das
inc
or
adc
arpl
movs
call
call
cmp
leave
cmp
scas
jo
loopne
mov
xor
nop
adc
adc
dec
mov
adc
clc
and
push
enter
pushf
lahf
pushf
rsm
pusha
cld
inc
outs
xor
call
adc
jnp
push
pop
xchg
xchg
cld
dec
sub
out
jae
stos
in
mov
jp
xchg
pop
mov
pop
jmp
or
add
cmps
xchg
fcmovnbe
xor
add
jge
lock
test
(bad)
mov
(bad)
jge
ins
adc
mov
sub
mov
sub
dec
call
cmps
mov
push
mov
sbb
mov
xchg
push
push
sbb
fwait
push
jne
and
lahf
pop
and
cmp
push
or
lds
mov
dec
aam
(bad)
jmp
mov
or
mov
jae
sub
jns
and
mov
mov
cmps
push
lahf
test
xchg
add
sub
pop
push
jp
mov
mov
loopne
pop
adc
gs
mov
(bad)
jno
mov
dec
dec
xchg
adc
aas
repz
stc
inc
sbb
and
mov
ss
cld
inc
mov
out
movs
inc
jle
mov
add
cli
cmp
pop
idiv
hlt
test
dec
outs
(bad)
mov
sub
int3
neg
cs
mov
out
repnz
jg
jmp
adc
ins
mov
loop
mov
cmp
je
setb
les
ss
in
adc
fwait
push
(bad)
sbb
in
out
adc
and
lds
pusha
in
mov
mov
jbe
loope
mov
mov
fdivr
in
ret
pop
adc
call
scas
dec
mov
xlat
xor
in
(bad)
mov
std
cmp
mov
mov
enter
rcl
retf
dec
jae
mov
cmps
sahf
cwde
push
imul
mov
add
or
jns
mov
movs
ret
movs
es
mov
inc
outs
jmp
xlat
sbb
hlt
inc
arpl
test
jmp
add
dec
sbb
add
cli
popa
pop
push
sub
sti
sbb
add
jne
movs
(bad)
push
rep
loop
xor
ja
adc
adc
shl
xlat
add
(bad)
push
pop
inc
xor
xor
push
jmp
adc
pusha
push
and
movs
sbb
cmp
ins
fwait
push
call
jnp
lahf
cmps
or
jnp
ret
pop
sub
mov
shr
jl
add
test
ror
dec
mov
sub
movs
push
je
hlt
sbb
ins
push
pop
push
xlat
push
jns
in
push
adc
in
add
mov
out
sbb
push
push
xchg
dec
sbb
or
lods
inc
dec
mov
retf
adc
jno
mov
retf
mov
inc
pusha
movs
frndint
jl
mov
lock
nop
ja
sbb
in
push
jbe
jno
shr
retf
mov
sbb
and
xchg
or
push
xchg
jnp
mov
in
or
or
call
mov
popa
and
das
adc
push
jg
jecxz
mov
popf
mov
or
push
(bad)
imul
jle
pop
sbb
jo
and
push
(bad)
mov
sub
loopne
aas
xor
out
aad
mov
cmc
adc
xchg
fistp
and
cld
popf
xchg
in
call
or
addr16
div
jo
or
(bad)
cmp
fucomp
call
adc
shl
adc
xor
int
nop
push
push
call
dec
dec
sbb
add
mov
add
adc
stos
out
test
aas
and
cs
aad
les
popa
shl
mov
mov
loopne
(bad)
cs
ins
les
loop
pop
cmp
in
inc
cmps
xor
push
aam
mov
mov
pop
ja
js
loop
repz
adc
out
iret
pushf
add
dec
pop
outs
test
popa
lds
pushf
test
jnp
mov
ins
out
pop
iret
dec
cmc
js
jge
xchg
(bad)
out
and
add
push
fs
and
adc
mov
ins
retf
adc
scas
sbb
adc
mov
dec
inc
fdiv
add
pop
fst
fs
test
xor
mov
push
inc
stos
sbb
dec
and
idiv
je
inc
cmp
pop
lahf
pop
push
test
pop
shl
lea
push
iret
leave
and
test
mov
test
int3
push
(bad)
das
shl
maskmovq
mul
cld
push
call
jge
mov
or
fild
adc
mov
retf
dec
xchg
push
cmp
lods
cmc
jle
jge
cli
jno
es
sbb
jmp
push
mov
mov
into
fimul
pusha
outs
adc
push
mov
mov
call
lock
rcl
push
dec
js
adc
xchg
int
mov
and
dec
adc
xor
push
xchg
out
push
loopne
and
jne
ja
out
jmp
ret
das
mov
push
(bad)
cdq
xor
sahf
push
ficomp
push
les
es
fwait
(bad)
mov
ins
je
(bad)
dec
add
dec
fnstcw
xor
mov
in
icebp
icebp
add
xchg
inc
mov
xor
inc
retf
mov
clc
lods
lock
xchg
xchg
mov
sub
addr16
fiadd
and
mov
cwde
retf
jg
lahf
test
cmp
pop
jmp
ret
(bad)
fisub
mov
enter
retf
loopne
scas
icebp
xor
loope
inc
pop
out
daa
test
ja
cli
test
cmp
mov
in
xor
sub
mov
push
mov
outs
(bad)
xchg
icebp
ror
in
xchg
(bad)
int3
mov
mov
shl
mov
shl
cdq
jbe
mov
mov
sti
jmp
dec
jmp
push
data16
mov
pop
cmc
fiadd
outs
xor
test
sbb
mov
inc
cmc
xor
xor
mov
aam
(bad)
xor
lods
lock
lds
retf
mov
sti
add
rcl
les
jno
add
daa
sbb
mov
retf
sbb
push
push
rol
mul
mov
and
cld
or
(bad)
nop
ins
ja
hlt
push
or
movs
and
fwait
mov
ins
mov
movs
or
adc
sahf
push
fs
stc
ror
cdq
pop
ins
mov
inc
jbe
jmp
adc
and
pop
daa
ror
in
xor
jmp
pusha
out
not
leave
mov
aaa
push
repz
add
add
mov
mov
jg
xor
ret
popf
jb
cwde
and
dec
pop
sub
(bad)
cld
push
mov
adc
push
std
or
push
outs
or
adc
pop
daa
fs
sub
pop
or
stos
lahf
leave
mov
xchg
in
enter
jbe
test
push
maxps
mov
(bad)
inc
vpor
daa
idiv
scas
jmp
cld
lahf
jo
aaa
lods
fisttp
(bad)
lahf
and
aad
ja
fucomi
in
sti
add
inc
repnz
mov
loope
repz
shl
adc
add
andnps
pop
xor
dec
ja
sahf
sub
out
inc
jp
mov
popf
sbb
and
es
xchg
ret
stos
dec
ins
mov
mov
jbe
imul
lea
xchg
mov
mov
aas
into
add
jmp
std
push
xchg
mov
push
adc
mov
mov
sub
mov
pop
out
and
imul
lods
loop
ret
ret
div
pop
push
cmp
dec
iret
dec
(bad)
jmp
mov
loopne
js
add
paddsb
lods
and
cld
and
add
or
pop
adc
retf
aam
leave
scas
fwait
test
adc
mov
mul
mov
aaa
lods
stc
push
cmp
mov
scas
cli
cmc
xor
mov
xchg
sbb
and
sbb
add
out
test
sbb
(bad)
adc
mov
xchg
pushf
pop
jno
fldcw
addr16
div
and
adc
test
push
push
popa
push
fidiv
push
or
adc
scas
jb
cwde
rol
mov
pop
aad
movs
lods
int
xlat
and
jae
mov
(bad)
sub
adc
add
jae
(bad)
ficom
clc
add
lahf
pop
xchg
scas
adc
inc
sub
jno
dec
mov
mov
jl
hlt
push
repz
(bad)
cmp
sub
sbb
push
push
cwde
inc
mov
mov
mov
fcomp
bound
mov
imul
test
jle
mov
rcr
leave
js
popa
pusha
int
loope
jno
add
stos
into
jbe
iret
add
cmps
mov
sbb
add
add
pop
cmp
std
sub
dec
mov
fwait
js
pmaxsw
iret
ss
xor
xchg
mov
sbb
sbb
and
sbb
cmp
fwait
dec
data16
leave
mov
fmul
into
imul
out
ss
jle
lea
fisub
inc
sub
mov
test
jno
pop
and
outs
sahf
fsub
mov
xchg
fistp
stos
and
dec
or
into
repz
jbe
ins
dec
cld
push
ins
(bad)
shl
out
icebp
dec
push
pop
imul
cmps
inc
icebp
mov
cwde
cmp
xchg
imul
jecxz
dec
or
push
add
(bad)
pop
mul
add
ret
adc
sub
es
ret
push
stc
ret
fcmovbe
inc
add
adc
dec
ss
nop
inc
(bad)
xlat
adc
inc
inc
add
inc
dec
aaa
aaa
movs
mov
cmps
sub
inc
loope
fpatan
in
jl
or
ja
xchg
dec
nop
js
pop
sbb
mov
jg
xor
sahf
fsub
inc
les
dec
xchg
sahf
(bad)
push
sub
xchg
jns
add
jns
jbe
sbb
and
mov
ss
push
pop
inc
cmp
ins
enter
std
bound
pusha
mov
in
xor
sbb
and
movs
popa
fwait
dec
add
jmp
jecxz
ret
jne
aad
xor
test
out
dec
adc
mov
dec
dec
pushf
out
aaa
mov
retf
sub
adc
sbb
and
inc
xor
inc
pop
push
pop
stos
retf
call
push
cmp
in
test
inc
mov
push
inc
jp
add
into
xor
popa
xchg
je
outs
jbe
push
xchg
inc
mov
in
cmp
imul
cmc
enter
mov
arpl
les
pop
add
js
add
pusha
push
or
test
inc
loope
cmc
mov
adc
loope
xor
add
inc
in
and
lods
shr
mov
push
jl
inc
hlt
fst
ret
fistp
ss
(bad)
dec
adc
fsub
ja
mov
ret
mov
push
aad
jo
jns
push
mov
mov
add
pusha
fdiv
sub
or
out
test
adc
sbb
sbb
in
(bad)
mov
jg
scas
inc
mov
cmps
imul
cmc
cmps
jbe
sbb
push
inc
sub
push
push
cmp
or
out
popa
mov
cmc
and
fstp
scas
imul
rol
inc
in
out
cmp
mov
lock
das
ins
bnd
adc
dec
inc
ror
mov
jp
and
cmps
lahf
jge
movs
test
mov
inc
xchg
cs
inc
int3
and
(bad)
adc
rol
movs
lods
dec
dec
fcomp
scas
icebp
test
jge
pop
ins
ins
jae
mov
push
pop
dec
stos
mov
cs
and
(bad)
mov
fsub
lahf
loope
test
movs
stos
xor
fisttp
je
sub
sbb
ret
iret
jno
imul
cmp
mov
push
mov
pop
stc
dec
jp
add
out
or
repz
add
mov
jle
sti
and
iret
xor
iret
(bad)
mov
sub
fidivr
inc
repz
adc
ds
cmp
mov
mov
dec
ja
mov
pop
jb
xchg
xchg
mov
dec
int3
jo
sbb
push
mov
ficom
sbb
lock
jle
gs
dec
adc
inc
sbb
xchg
inc
cmp
xor
icebp
fnstsw
pop
cdq
or
ss
jl
push
lea
retf
out
or
popa
loope
mov
jmp
sub
and
jecxz
mov
cdq
out
mov
loop
fcmovnb
add
cmp
pop
mov
out
jmp
aad
jl
and
imul
mov
add
inc
shl
xchg
xor
sub
sub
aas
sub
hlt
dec
sbb
inc
ss
mov
in
xor
push
lods
setge
hlt
dec
jns
xchg
(bad)
out
jbe
retf
stc
sbb
mov
cmp
(bad)
loopne
or
inc
xchg
pop
sar
iret
dec
ins
push
pop
ss
sbb
mov
stc
adc
ficomp
mov
sub
fnstcw
mov
pop
rcr
ficom
out
mov
lock
xchg
xchg
ficom
add
sub
(bad)
pop
and
scas
les
loop
dec
addr16
adc
aas
scas
(bad)
iret
es
pop
scas
or
pop
fwait
mov
xor
shl
aaa
jbe
test
scas
rcr
push
or
inc
sti
mov
and
aad
xchg
outs
loop
mov
dec
xchg
aam
jecxz
and
push
retf
lods
xlat
ja
inc
mov
and
fst
aaa
xchg
test
ja
daa
mov
fidiv
xor
cmp
cmp
dec
push
mov
lods
jmp
or
add
push
push
add
push
dec
ja
mov
pusha
and
and
pushf
xchg
pop
inc
or
pop
cmp
cmc
push
xchg
in
pushf
std
or
and
push
pop
fldenv
call
mov
sub
push
or
lods
jne
or
adc
cs
cmp
shl
xchg
ror
call
push
out
outs
or
iret
sub
js
out
mov
or
xor
fsub
pop
sbb
and
or
push
fbld
fucomip
push
int3
and
lds
sbb
iret
xchg
fcom
aam
mov
cmp
mov
sbb
cmp
ss
and
sbb
sub
sub
add
es
jno
fld
mov
push
loope
cmp
jb
fcomp
sar
retf
fwait
mov
inc
cs
and
lods
inc
das
xor
ror
movs
pushf
sti
inc
sbb
bound
adc
push
cld
(bad)
loopne
call
lds
(bad)
cli
popf
mov
jo
mov
or
aam
xor
lods
into
mov
nop
daa
stos
and
and
(bad)
fisttp
cmp
jg
shl
push
movs
scas
outs
pop
xchg
sub
and
sbb
(bad)
mov
cmp
inc
xor
cmp
ror
aad
pop
cmps
jmp
nop
ds
xchg
push
jmp
daa
aas
into
icebp
dec
sahf
(bad)
xchg
xor
pop
lods
lds
add
daa
ss
cdq
mov
push
popf
out
lods
jae
and
add
mov
fwait
xchg
xor
adc
mov
stos
rcr
adc
inc
fsub
xlat
(bad)
adc
repnz
mov
ins
sbb
lds
in
loope
js
cwde
popa
mov
stos
jnp
mov
mov
scas
xchg
mov
jo
loope
out
jmp
retf
xchg
arpl
enter
xor
pop
in
push
pop
and
push
lahf
jo
mov
push
cmc
aas
out
pop
adc
test
push
push
popa
(bad)
xchg
xchg
mov
pusha
dec
or
and
idiv
pusha
jbe
cmc
mov
(bad)
mov
sbb
xlat
jne
push
jmp
add
push
and
neg
daa
fs
push
jp
mov
mov
mov
pop
jne
xor
push
push
inc
retf
inc
mov
aas
fst
pop
shl
xor
inc
adc
imul
gs
pushf
mov
pop
pop
movs
jb
xchg
icebp
and
clc
mov
mov
xlat
(bad)
add
inc
jae
sbb
imul
xor
repz
sub
push
or
pusha
outs
mov
icebp
push
pop
mov
dec
cmp
and
int
dec
adc
test
ret
push
xchg
cmp
out
or
inc
adc
pop
cmps
test
xchg
sub
inc
xlat
shl
ins
and
dec
ins
add
mov
add
outs
pop
inc
fcmovu
dec
jle
ja
fadd
or
(bad)
lods
ins
adc
aas
push
jo
pop
(bad)
dec
pop
jno
pop
mov
mov
cld
inc
iret
cld
aas
aaa
lods
fistp
scas
push
dec
les
ins
mov
mov
pop
fwait
addr16
fidivr
outs
int3
popf
dec
call
sub
cli
cmp
movs
inc
xor
and
lahf
pop
xor
in
mov
shl
add
mov
aam
loop
in
dec
xchg
sub
(bad)
mov
push
jmp
mov
mov
cmp
or
cmps
(bad)
scas
dec
repz
add
(bad)
aaa
adc
pushf
and
push
sub
cmp
push
xchg
stos
sub
xor
in
gs
xor
dec
xlat
sti
cli
lock
in
xor
xchg
fld
out
mov
in
jge
sub
mov
or
(bad)
sahf
xor
call
bound
sbb
lea
cs
push
test
jecxz
nop
lea
cli
fstp
repz
mov
cmp
loope
jb
fisub
scas
mov
je
(bad)
adc
stc
rcr
test
dec
push
out
(bad)
(bad)
sti
jge
cmps
adc
movs
dec
das
outs
dec
repnz
cli
sub
mov
scas
je
out
iret
arpl
in
inc
mov
cmps
ret
movs
in
push
mov
xchg
sar
mov
ret
aaa
(bad)
js
adc
das
jmp
jns
xor
in
dec
btc
cli
sti
jle
arpl
jns
ret
int
ret
mov
cmp
les
mov
push
popa
out
pop
fisubr
imul
and
out
xchg
dec
sub
retf
add
mov
xlat
or
das
sbb
or
xor
push
pop
inc
pusha
int
pop
pop
les
(bad)
push
xor
cmps
mov
je
mov
daa
in
ss
fmul
outs
scas
sub
or
ins
clc
cmp
mov
pop
enter
mov
rcl
int3
(bad)
sbb
adc
mov
shl
leave
jno
test
sub
push
pop
cmp
fwait
pop
adc
pop
xchg
dec
into
mov
daa
xor
mov
cmp
jae
fst
retf
cmp
test
sbb
into
push
ret
and
xchg
or
cmc
jle
cdq
push
into
mov
xchg
xor
adc
dec
jne
mov
pop
jne
aad
or
jne
mov
add
mov
cmps
and
loope
out
and
inc
push
jae
push
or
lea
(bad)
inc
mov
cmovnp
and
jbe
dec
mov
mov
pusha
sahf
std
nop
hlt
nop
mov
xchg
mov
ins
xor
add
out
and
shl
cmp
and
push
mov
icebp
jmp
jp
in
cld
dec
in
jmp
mov
sti
mov
movs
jnp
lds
xchg
js
jb
push
xor
or
cmp
pushf
jecxz
xor
dec
aam
adc
sbb
xor
cld
(bad)
mov
fidivr
call
pop
sub
jbe
jg
repz
adc
sbb
(bad)
popf
bound
dec
or
mov
loopne
retf
cld
test
xor
cdq
fbstp
sub
jne
sub
stos
mov
mov
mov
pop
xchg
inc
cmps
sbb
mov
data16
dec
jb
add
dec
data16
dec
in
pop
pop
pop
leave
pop
mov
dec
lods
rcl
adc
push
(bad)
dec
adc
aad
adc
out
mov
loopne
and
out
xchg
shl
inc
ret
adc
daa
cmp
inc
popa
dec
xchg
jg
xchg
add
pop
sbb
cld
sub
outs
stc
(bad)
mov
lock
pusha
cmp
mov
neg
out
xlat
inc
pop
scas
jmp
jl
pop
sbb
repz
ror
pop
mov
or
or
inc
div
lods
sub
mov
xor
(bad)
jmp
outs
(bad)
jle
sbb
add
fdivr
mov
daa
jns
stc
lds
rol
inc
inc
push
stos
mov
pop
lods
stos
jae
lds
shl
les
outs
ja
dec
pop
lock
xchg
mov
in
sub
push
xchg
and
sub
int
push
nop
add
shl
loope
jns
jbe
int3
push
je
inc
and
inc
retf
pop
aas
nop
fiadd
and
adc
(bad)
mov
nop
mov
rcl
jne
adc
sub
cmp
icebp
ret
jp
pop
out
icebp
xchg
test
sub
retf
das
bound
add
mov
daa
hlt
nop
push
sbb
jge
jle
xchg
push
cmps
scas
xchg
push
retf
in
add
pop
dec
iret
leave
or
xchg
mov
dec
cmps
sbb
test
call
sbb
mov
cmp
push
cmp
cmps
in
sbb
ins
scas
dec
scas
jmp
sbb
sti
lea
sub
cs
add
add
bound
or
psraw
xor
dec
sbb
or
ret
je
dec
int
pop
jbe
rol
adc
pop
sub
vmaxss
dec
leave
iret
pop
jmp
pop
add
xor
(bad)
mov
push
cli
cmc
and
push
jl
mov
bound
cmp
push
mov
push
push
(bad)
xor
fimul
xchg
dec
jno
push
and
pop
mov
mov
mov
(bad)
dec
xor
lods
pop
or
jns
popa
or
call
cmps
mov
jbe
sbb
mov
push
sub
bound
call
mov
sub
jne
stos
stos
in
mov
pop
or
cmp
leave
jg
cmps
mov
inc
(bad)
xor
call
mov
push
ficom
(bad)
fcom
shl
bound
jg
cmps
cmp
stc
xor
mov
ds
xor
jno
mov
es
dec
xchg
test
pop
add
mov
cwde
fst
cli
lahf
icebp
out
inc
xchg
add
mov
jae
xchg
xchg
adc
cmp
dec
repz
push
in
jmp
or
ss
and
sti
lock
mov
adc
idiv
mov
xlat
pop
xchg
daa
popf
clc
mov
fadd
xchg
mov
aad
retf
das
jecxz
or
mov
push
fdiv
rcr
push
jmp
inc
cmp
sbb
push
xor
ret
push
cmp
jmp
xchg
out
pop
rcr
inc
sub
xchg
test
fbstp
and
push
sub
scas
push
xlat
das
dec
pop
mov
call
outs
push
bound
shl
mov
sar
xor
jg
fdivr
add
retf
jp
or
dec
push
mov
clc
pop
sar
repz
icebp
mov
lea
cmps
dec
xor
mov
in
leave
shl
or
jecxz
jo
xlat
aaa
(bad)
test
jl
inc
out
adc
fscale
push
stc
les
sbb
test
xchg
daa
mov
sbb
sbb
dec
inc
add
cdq
xchg
fwait
jge
stos
test
cmps
in
pop
sbb
test
aas
pop
push
jnp
pop
or
pop
les
sbb
pop
jg
(bad)
sub
in
retf
lods
pop
mov
dec
cs
aam
jne
inc
aaa
stos
mov
imul
cmp
fdiv
pop
in
popf
xchg
jne
fwait
pop
and
sub
inc
sub
out
lock
in
xchg
and
imul
hlt
sbb
add
pop
dec
dec
dec
mov
cmp
jne
add
pop
in
cwde
movs
jl
fbstp
sub
sbb
sahf
shl
push
ret
stc
xchg
jmp
cs
int
jo
into
push
jg
inc
out
movs
ins
aam
retf
adc
mov
sbb
pop
and
repz
xchg
sub
sub
retf
mov
push
pushf
fwait
out
cwde
repz
repz
sbb
int3
imul
lods
sbb
xor
jecxz
popf
inc
mov
imul
mov
mov
data16
xor
cmc
popf
cmp
mov
inc
push
es
cmp
aaa
fisubr
cld
std
jle
and
xlat
pop
aam
add
cli
mov
cmp
in
clc
sti
mov
mov
jle
pusha
vdivss
and
aam
popf
outs
(bad)
push
cmp
pop
adc
sub
ror
cmp
xchg
cmc
(bad)
cmp
(bad)
ds
into
and
dec
lahf
mov
inc
stos
dec
push
ins
xor
cld
das
and
popa
mov
sub
shl
inc
ins
lds
scas
vpslld
jne
in
test
(bad)
pop
push
sub
inc
enter
fcmovnu
dec
mov
les
jle
mov
push
mov
adc
pushf
inc
pusha
xchg
cmp
adc
pop
mov
shl
ja
aad
push
dec
mov
pop
rcr
mov
mov
cmp
cmp
fsubr
adc
or
jl
cmp
mov
or
push
fld
shl
or
ds
dec
bound
popf
cdq
(bad)
jbe
loop
(bad)
(bad)
movs
outs
sar
lds
mul
shl
cdq
and
rol
pushf
hlt
ja
(bad)
das
or
ins
test
jl
jmp
sub
mov
mov
ins
out
xor
xchg
adc
cmc
cmc
retf
or
mov
adc
repnz
rep
ror
cdq
dec
mov
ds
and
sub
dec
add
mov
and
xchg
pop
hlt
jle
mov
je
sub
mov
xchg
cmp
xchg
lock
xor
stos
xor
cmp
ret
jb
les
clc
scas
fcmovnb
inc
xchg
cdq
fwait
out
pushf
popa
lahf
retf
cmps
xor
jmp
test
shl
xchg
sub
push
mov
add
in
je
dec
shl
arpl
and
fnstcw
sbb
out
popf
dec
dec
stos
test
(bad)
mov
sbb
stos
ficom
jns
jb
loop
jae
fisubr
inc
mov
stos
jno
sbb
bound
in
jmp
sbb
pushf
push
dec
popa
nop
lea
jnp
jg
jl
not
cmp
in
movs
in
outs
imul
sar
ins
pushf
pop
jnp
fld
std
shl
adc
jp
jne
test
retf
or
addr16
xlat
add
jne
adc
mov
or
dec
fnsave
cld
fcomp
sub
sub
add
fdiv
or
test
jg
push
mov
cld
xchg
scas
ftst
sub
xchg
or
mov
fs
xor
push
stos
(bad)
call
and
into
mov
sub
loope
sub
ss
pusha
inc
scas
aad
mov
in
dec
mov
imul
in
arpl
mov
(bad)
push
and
adc
adc
inc
push
test
or
mov
std
mov
jne
xchg
in
rcr
push
xchg
jno
and
or
test
outs
mov
jge
mov
xchg
pushf
adc
mov
mov
ficomp
xor
into
adc
pop
xlat
mov
js
pop
mov
pop
inc
ins
mov
cmps
fdivr
out
shl
xor
mov
jmp
std
sub
dec
xchg
sbb
inc
xchg
mov
daa
dec
ret
lock
stos
jle
inc
fwait
ins
rcl
jg
stos
adc
jb
or
lock
ret
lock
cmp
jo
test
cmp
mov
sbb
pop
mov
lods
cmp
popa
mov
(bad)
pop
gs
pop
ja
sub
sbb
mov
pop
pop
fisubr
popf
ins
repz
mov
movs
addr16
dec
movs
or
cmp
and
enter
inc
icebp
add
xor
out
fdivr
dec
pushf
outs
mov
pop
adc
xor
and
and
mov
jbe
out
or
mov
inc
(bad)
fidiv
push
es
(bad)
jge
push
sub
pop
adc
scas
std
mov
dec
jmp
mov
in
sub
leave
xor
lods
inc
mov
push
popf
inc
das
popa
inc
inc
add
xchg
and
pop
adc
shr
pop
jb
les
popa
loopne
mov
pop
dec
aaa
jecxz
cdq
(bad)
(bad)
mov
test
jecxz
push
cwde
in
mov
pop
rcr
(bad)
push
mov
addr16
fsub
pop
lods
fistp
push
leave
pop
shr
pop
sbb
arpl
mov
and
sub
pcmpgtw
repz
jns
jl
xchg
or
div
cmp
ins
in
or
mov
mov
cmp
mov
cs
cmps
movs
cwde
jns
dec
cwde
xor
and
out
test
ins
test
pop
fdivp
pop
(bad)
jbe
(bad)
inc
dec
nop
or
and
(bad)
jmp
scas
and
popf
iret
inc
(bad)
loopne
mov
lods
ret
xchg
data16
movs
push
adc
fnstcw
outs
adc
(bad)
ret
xor
push
fwait
mov
inc
and
or
inc
pop
ins
dec
xor
std
sbb
dec
shr
rol
out
push
(bad)
mov
notrack
fcom
mov
bound
pop
out
ss
imul
jl
xchg
in
push
enter
ret
mov
pop
jbe
cs
shl
inc
add
loopne
or
enter
and
lods
arpl
popf
push
mov
repz
in
cmc
rol
hlt
mov
imul
jle
xchg
popa
mov
xor
fdiv
push
out
ror
clc
and
test
(bad)
xchg
test
jne
inc
clc
xchg
std
das
dec
repnz
mov
dec
xlat
mov
xor
add
inc
lock
sub
movs
inc
sub
(bad)
mov
jge
imul
(bad)
sbb
fs
scas
mov
pop
pop
dec
jecxz
xchg
or
daa
div
pop
mov
ss
inc
mov
bnd
adc
cmp
inc
fdivr
xchg
cmp
iret
shr
dec
dec
inc
fidiv
rcl
fmul
push
ss
push
and
enter
int
and
stos
shl
outs
inc
jge
inc
sysenter
js
popa
pop
mov
mov
inc
mov
(bad)
in
ret
jle
test
adc
dec
retfw
mov
or
push
add
nop
mov
jle
and
xor
retf
cmp
add
pushf
push
mov
loop
ds
mov
xor
xchg
cmp
mov
push
xchg
dec
lods
push
sbb
call
jnp
cmp
xchg
push
aam
xchg
add
fstp
adc
(bad)
cwde
or
xchg
jmp
sub
call
data16
xchg
jae
cmp
and
mov
ss
scas
test
dec
jge
out
aaa
imul
inc
out
jmp
lahf
jmp
adc
mov
call
popa
in
mov
fwait
inc
sub
inc
jle
pop
xchg
jmp
xchg
cmp
sbb
dec
dec
ror
aas
sahf
dec
adc
scas
(bad)
sbb
sub
mov
scas
aaa
ret
enter
jno
mov
and
aaa
add
inc
pop
repz
dec
sbb
dec
mov
je
jg
push
mov
sub
mov
dec
outs
xor
test
das
dec
mov
mov
adc
push
ins
shl
dec
popa
js
jnp
cs
pop
push
jl
retf
and
outs
pop
stos
not
stos
mov
fdivr
sub
int3
mov
sub
adc
xor
add
mov
stc
adc
mov
pusha
lock
jo
adc
sub
leave
pop
pushf
call
test
scas
cmp
sbb
jae
pop
sbb
jno
jns
sbb
sahf
(bad)
mov
loopne
(bad)
std
fdiv
in
es
xchg
adc
into
ror
cmc
retf
or
fld
out
stc
shl
nop
mov
sub
sbb
fiadd
jge
out
(bad)
jno
xchg
cdq
out
adc
call
enter
lahf
xchg
sbb
pop
pop
dec
add
addr16
std
loopne
idiv
pop
mov
mov
mov
hlt
lds
aas
ds
mov
cmc
(bad)
retf
mov
mov
cmp
in
fld
and
es
inc
xor
aaa
stos
leave
xlat
dec
jo
dec
jo
in
in
push
xchg
cmc
aam
pop
push
mov
lock
cmc
adc
jle
outs
mov
xor
pop
push
shl
xor
loope
psubusb
mov
add
lods
inc
mov
mov
cwde
adc
mov
push
lahf
push
pop
xlat
(bad)
addr16
inc
dec
adc
fdiv
test
jecxz
call
sub
stos
jb
sahf
inc
icebp
push
enter
mov
adc
icebp
add
mul
push
(bad)
(bad)
sti
adc
jmp
mov
dec
or
adc
js
and
stos
pop
push
add
xor
inc
pop
inc
dec
xor
pop
mov
xchg
or
dec
xor
mov
and
mov
cwde
dec
pop
fs
sub
mov
aam
sub
xchg
adc
dec
fdivrp
mov
loop
nop
xchg
sbb
xchg
(bad)
iret
push
scas
lods
movs
cwde
cmp
(bad)
jle
mov
cmp
retf
push
sti
lods
lods
xchg
pop
fsub
stos
mov
jns
dec
jo
nop
push
mov
dec
test
(bad)
mov
je
mul
aad
lods
cmps
xor
jl
inc
fld
test
inc
or
stos
fist
das
out
(bad)
xor
mov
retf
adc
xor
xchg
data16
push
lock
div
push
mov
dec
sub
mov
add
gs
mov
and
adc
cmp
sbb
ins
add
lahf
mov
mov
sbb
popf
or
pop
or
pop
push
in
(bad)
push
push
in
adc
mov
imul
pushf
sbb
adc
inc
test
lods
adc
adc
rcl
(bad)
cmp
jecxz
fidiv
dec
in
fmul
pmullw
cmc
fsqrt
push
sahf
in
mov
mov
inc
call
(bad)
adc
test
fdivr
or
sbb
or
fdiv
xchg
(bad)
jl
loope
push
in
push
or
rcl
dec
popf
pop
xor
add
lahf
add
add
pop
jg
fwait
mov
dec
mov
jmp
out
ret
xlat
dec
push
or
add
test
scas
inc
pop
inc
mov
aam
dec
xchg
xchg
addr16
mov
ret
loopne
pop
inc
out
jno
and
push
dec
arpl
lock
cmp
cmps
in
pop
mov
dec
dec
out
stos
int3
outs
adc
push
sub
inc
cld
xor
dec
sub
sub
not
push
test
cs
dec
repz
les
call
aad
inc
push
push
les
js
sti
test
ret
(bad)
rol
sub
shr
stc
outs
pop
sub
movs
inc
popa
out
add
nop
push
xor
jns
ret
jnp
pop
shr
push
add
pop
int3
int3
icebp
mov
scas
sar
fistp
cmp
dec
push
in
jno
fist
jg
jnp
inc
outs
jle
outs
mov
mov
mov
xor
(bad)
jle
icebp
add
or
stc
scas
xor
mov
dec
push
pop
push
gs
push
inc
je
sub
dec
cmp
aas
xlat
outs
jbe
or
adc
jmp
movs
xchg
and
sbb
pop
and
dec
sti
pop
xchg
into
out
les
out
call
cmc
(bad)
xor
or
les
int
lock
int
cmps
mov
cmps
or
inc
push
nop
push
retf
cwde
loope
out
inc
pcmpeqd
aas
popa
xchg
call
cmc
(bad)
jnp
aad
mov
push
sbb
mov
and
adc
aam
push
nop
outs
stos
lahf
sbb
loop
and
xchg
inc
repz
xchg
lods
imul
add
add
movs
imul
cmc
xchg
shr
(bad)
and
cli
lock
call
cmp
(bad)
fst
add
mov
xor
add
sahf
sbb
iret
jl
jg
pop
movs
xchg
es
ds
nop
push
or
push
sbb
cmp
loope
lahf
in
jb
stc
sub
cmp
arpl
push
fdivr
inc
das
and
push
mov
jge
in
sti
call
ss
jb
gs
ror
in
cmp
jo
sub
repnz
lahf
das
jp
sub
xchg
cmp
fnstcw
dec
cdq
jbe
inc
pop
xchg
jecxz
scas
dec
adc
outs
jg
lds
(bad)
sbb
dec
mov
neg
pop
xchg
jo
je
retf
and
dec
aad
mov
shl
adc
imul
mov
mov
or
xchg
or
(bad)
stos
cs
add
pop
adc
dec
push
int
movs
dec
jnp
push
cs
aas
jb
popf
and
and
sbb
daa
xor
leave
dec
in
add
sbb
jo
push
and
mov
cdq
jge
or
jb
and
leave
mov
push
xchg
repz
cmp
inc
pop
imul
push
fistp
sbb
push
push
jns
inc
pop
xchg
push
hlt
cmp
push
fist
mov
dec
xor
mov
xchg
je
fidivr
xchg
adc
mov
ret
lods
or
sub
les
(bad)
cmc
cmc
sub
push
in
add
mov
xchg
(bad)
pusha
push
add
jns
adc
(bad)
mov
popa
mov
adc
cmp
mov
adc
int
sahf
mov
push
test
cdq
dec
cs
push
dec
mov
(bad)
pop
push
or
(bad)
push
fisttp
fwait
es
and
add
cmp
mov
sbb
and
retf
or
pop
js
fs
add
pop
mov
leave
mov
pop
or
je
aas
stc
jmp
into
mov
test
and
push
shr
movs
fdivr
jmp
(bad)
fist
pop
movs
add
xchg
sub
fadd
and
dec
stos
sbb
xor
mov
(bad)
movs
cmps
cli
xor
dec
add
mov
(bad)
jl
mov
jecxz
xor
pop
sub
mov
fist
mov
mov
mov
xchg
add
imul
out
xor
mov
cs
dec
or
fwait
lahf
mov
lds
rol
pop
lahf
jo
jmp
dec
retf
sti
setb
ror
xchg
sbb
xchg
cmp
adc
pop
mov
and
aad
popa
lea
scas
sar
xor
arpl
shl
xor
cdq
shr
mov
dec
cmp
xor
add
(bad)
mov
loopne
pusha
mov
add
mov
mov
sti
cmp
je
ret
adc
aaa
ret
repz
int
jo
mov
shl
jne
adc
cmp
add
sti
sbb
(bad)
sub
cld
pop
iret
out
outs
cld
fs
push
pop
inc
retf
adc
nop
push
cmp
mov
hlt
push
mov
mov
gs
scas
dec
xor
out
ss
aad
pop
inc
jo
into
dec
bound
add
jmp
call
fdiv
inc
aaa
ret
imul
test
gs
(bad)
adc
call
js
inc
mov
bound
push
cmp
sbb
xchg
test
inc
mov
les
cmp
jo
rol
push
inc
mov
int3
iret
sbb
data16
adc
lds
imul
lods
fist
movs
cmp
or
inc
add
adc
imul
xchg
aas
std
jno
cmc
fcomp
in
pop
mov
test
ficomp
mov
cmp
fld
lock
lock
xchg
push
dec
cwde
fbstp
cmp
push
xchg
out
cmp
jecxz
cmp
stc
sub
jne
(bad)
dec
sbb
jle
adc
mov
push
mov
xchg
cmp
dec
or
popa
movs
cdq
out
xchg
imul
xchg
sbb
pop
(bad)
push
push
clc
(bad)
cmp
nop
in
imul
call
cmc
push
or
push
or
cli
xchg
dec
sub
push
scas
call
and
nop
xor
mov
and
out
retf
test
neg
test
js
jg
cmp
cld
push
mov
add
or
rcr
stos
mov
mov
jl
push
push
cmp
(bad)
sub
sub
ret
stos
pop
sahf
mov
mov
push
cwde
aad
mov
in
ja
jb
jmp
jns
cmp
fistp
cmps
data16
cli
and
inc
sub
(bad)
loope
or
cdq
ins
outs
pop
cdq
pushf
add
dec
scas
scas
mov
lahf
mov
cmp
cmp
lods
clc
mul
and
mov
inc
fcmovnbe
inc
mov
(bad)
dec
pushf
jno
dec
out
adc
sbb
dec
mov
nop
dec
or
xor
push
jnp
call
in
xlat
iret
pop
xchg
ret
dec
pop
lods
adc
test
xchg
stos
sbb
in
xchg
pop
xor
daa
addr16
retf
mov
cmp
jae
aas
mov
sahf
addr16
jmp
das
mov
push
mov
pop
sbb
mov
repnz
push
pop
call
xchg
jmp
lock
ss
call
dec
pushf
adc
cmp
dec
xchg
pop
cvtdq2ps
mov
jns
mov
or
jg
movs
es
scas
fwait
pop
(bad)
scas
outs
dec
cmp
xchg
test
push
jae
jmp
rol
fistp
xor
xor
test
lea
sub
or
push
or
and
sti
cmps
jl
call
inc
test
nop
cmps
popa
sahf
xor
mov
sub
jmp
and
out
xchg
lea
mov
mov
and
int3
arpl
outs
fwait
in
sahf
mov
data16
and
repnz
jge
ror
cdq
push
outs
add
rol
cwde
fdiv
jmp
dec
mov
inc
or
lods
push
(bad)
arpl
or
pushf
xchg
xchg
or
sti
xchg
imul
(bad)
cmp
lods
jge
iret
das
dec
inc
repnz
xor
mov
or
mov
stos
inc
sbb
repnz
in
pop
hlt
mov
repnz
fidivr
loope
jmp
les
test
pop
or
and
cmp
call
xor
xlat
cli
mov
lds
ret
aam
sbb
jge
adc
(bad)
(bad)
xchg
or
fadd
mov
adc
hlt
add
pushf
push
sbb
icebp
ucomiss
mov
cmp
fistp
sub
pop
cmc
(bad)
mov
push
push
push
jns
lock
cmp
imul
scas
pop
aaa
in
sub
scas
inc
arpl
xor
pushf
jp
ins
xor
outs
(bad)
stos
int3
ficom
push
pop
sub
inc
icebp
pop
cwde
add
repnz
mov
movs
mov
sub
and
stos
xchg
inc
adc
sbb
je
pusha
sbb
pushf
sub
mov
push
in
inc
pop
pop
mov
mov
arpl
xchg
inc
stos
xor
shl
or
sbb
repnz
pop
cs
popf
shl
fndisi(8087
mov
xchg
sbb
dec
int3
movs
add
inc
mov
(bad)
pop
mov
fdiv
aas
dec
sbb
and
into
scas
fist
push
sub
mov
icebp
mov
dec
aaa
inc
sub
mov
jne
mov
xor
xchg
mov
xlat
in
cwde
cmp
stos
int
iret
sbb
adc
and
popa
mov
xor
les
rcr
add
xchg
loopne
xor
das
mov
ret
lock
sti
dec
push
xchg
mov
sub
mov
mov
rol
es
push
push
aad
adc
sar
shl
data16
(bad)
pop
rcr
inc
lds
in
bound
call
push
inc
mov
add
push
add
jg
addr16
cmc
and
sbb
(bad)
scas
les
ins
and
jae
stos
inc
mov
dec
jge
mov
and
fisttp
cmp
mov
mov
imul
mov
or
cmp
mov
icebp
mov
push
jmp
hlt
loopne
ret
and
push
aas
pop
shr
mov
in
sub
cmp
mov
or
xor
lods
daa
cmova
ret
es
fimul
loope
push
mov
mov
cmps
mov
aas
retf
outs
pop
dec
jbe
xor
scas
pop
je
jmp
pop
cdq
arpl
stc
loopne
in
ror
pop
out
lds
(bad)
xchg
fnsave
jle
adc
repnz
xlat
pop
ja
enter
jp
sbb
or
push
in
lock
push
and
xchg
dec
xchg
in
cwde
daa
xlat
xchg
ficomp
sbb
jo
repz
ins
scas
dec
js
sti
push
(bad)
sub
pop
mov
mov
mov
dec
cld
dec
pop
pushf
push
sbb
dec
fisubr
(bad)
mov
mov
pop
push
out
pop
lods
sbb
jp
hlt
fistp
jno
mov
xchg
dec
js
popf
xchg
mov
int3
movs
sub
cmp
aas
jae
int
dec
inc
inc
add
call
cmp
push
arpl
jae
pop
out
dec
enter
mov
(bad)
mov
and
inc
in
adc
pop
sbb
adc
enter
and
das
arpl
cmp
sub
pop
cmps
xor
push
(bad)
xor
out
mov
pop
ficom
pop
clc
cmp
icebp
jmp
out
push
scas
mov
and
xchg
rcl
mov
repnz
push
xchg
cmps
inc
mov
mov
jl
or
std
mov
cli
fmul
push
(bad)
and
fbld
ins
jne
adc
sti
jg
data16
push
fsubr
jno
add
cmp
xlat
dec
addr16
jle
mov
sbb
test
dec
pop
pop
push
lods
adc
out
pop
(bad)
sar
repz
push
mov
push
mov
stos
inc
wrmsr
xor
cmp
jmp
mov
movs
pop
jmp
jno
das
inc
mov
int3
add
ret
out
sti
or
jle
(bad)
mov
jns
mov
ror
in
inc
(bad)
aam
and
xchg
pop
lahf
add
in
cvtps2pi
stos
and
pop
push
aad
jmp
add
xchg
xor
dec
pop
rcl
inc
nop
push
xchg
jb
jecxz
lea
aad
sbb
mov
push
cmp
xor
cmp
push
xchg
mov
cs
test
inc
out
xor
arpl
mov
addr16
jne
jl
arpl
dec
inc
cdq
ss
addr16
mov
arpl
test
mov
mov
out
sbb
adc
ret
mov
(bad)
dec
sub
push
rcr
adc
icebp
cli
sub
cmp
jmp
push
jle
jns
xchg
(bad)
xor
mov
and
das
xchg
xchg
in
push
pop
ins
scas
inc
(bad)
sbb
mov
push
xor
jmp
mov
add
ret
rep
and
xchg
(bad)
int
xchg
push
cmps
test
jge
mov
sbb
dec
ins
dec
mov
mov
scas
push
fild
pop
pop
mov
sti
rol
test
lods
std
xchg
push
adc
stos
cmp
test
mov
ret
movs
leave
lods
(bad)
mov
int
xchg
mov
clc
dec
jmp
cmp
push
retf
sub
push
(bad)
addr16
jnp
ja
jecxz
pop
inc
push
repnz
mov
jecxz
dec
pop
mov
add
push
inc
mov
sbb
xor
push
ficom
popa
iret
fidivr
stos
test
pop
popf
out
imul
stos
out
xchg
daa
xchg
pop
stc
sub
in
mov
imul
mov
ins
cld
cmps
sbb
fwait
(bad)
shl
shr
pop
xor
mov
aam
test
jmp
imul
cmp
or
mov
outs
cmp
ret
ret
push
shr
xchg
jb
repnz
add
sub
adc
in
sbb
adc
and
stos
jns
cmps
cmps
jnp
push
mov
push
push
int
cmp
cld
mov
js
in
sbb
out
pop
sub
mov
repnz
std
loope
push
imul
pop
ret
xchg
push
xlat
aaa
add
call
or
lods
mov
(bad)
stc
test
pop
sbb
loopne
pop
fcomp
scas
stos
out
mov
jns
aas
jge
sbb
sub
push
imul
shr
cmp
or
scas
xchg
or
pop
mov
mov
inc
ins
cmp
and
jnp
xchg
push
cmp
sbb
scas
cmp
jmp
push
mov
pop
or
icebp
aam
jne
pop
adc
out
inc
(bad)
shl
cmp
mov
mov
add
hlt
stos
not
gs
jl
dec
bound
mov
enter
fnstsw
push
call
cmovge
mov
jae
scas
adc
and
in
pop
jl
test
(bad)
sub
bswap
add
pop
into
dec
jmp
sahf
outs
jge
test
mov
out
mov
in
jae
and
lods
xchg
outs
sti
cmc
shl
sbb
mov
cli
jg
adc
dec
inc
in
clc
jmp
push
loope
jmp
or
push
push
cmp
loope
fbstp
iret
das
sahf
cmp
inc
imul
loop
add
push
nop
dec
add
pop
das
clc
xlat
gs
shl
pop
sub
fstp
pop
(bad)
fcom
int3
pop
mov
ret
cdq
inc
pushf
shl
push
aad
aas
xor
enter
and
or
add
pop
jns
fild
add
in
push
fcom
xchg
adc
adc
bound
mov
icebp
pop
ins
mov
js
push
lods
push
ror
out
jae
aam
inc
mov
mov
adc
sub
pop
cmp
jmp
push
adc
(bad)
fcom
(bad)
ss
cmp
inc
daa
ss
cmp
fnsave
les
lahf
sbb
fs
pop
outs
cmps
xor
dec
imul
dec
je
ds
lods
cmp
sub
lods
pop
in
cdq
xchg
mov
sbb
(bad)
sub
xchg
pop
shl
mov
movs
xor
xchg
inc
jbe
mov
pushf
jbe
push
cmp
add
dec
inc
pop
xchg
rcl
jnp
(bad)
aaa
loopne
lock
xchg
or
xchg
dec
imul
or
sti
mov
push
adc
inc
jle
push
pop
das
rol
es
jmp
xor
xor
fmul
sbb
add
mov
je
ret
loope
pop
fisub
jmp
push
mov
out
mov
popa
retf
jno
(bad)
not
ins
mov
dec
mov
test
and
sub
lods
or
mov
cld
out
js
iret
push
loop
sub
shl
cmp
xor
dec
repnz
dec
inc
xchg
or
ja
fbld
idiv
jb
rol
pop
push
shr
imul
iret
jnp
pusha
mov
xlat
out
jo
mov
jecxz
mov
lds
cld
ja
mov
pop
cld
clc
imul
add
ss
and
xchg
and
jmp
jl
loop
or
mov
je
and
pop
cld
pop
sub
mov
sub
not
sbb
(bad)
adc
jae
adc
ror
xchg
(bad)
mov
pop
jne
std
test
jb
sub
adc
pop
js
add
xchg
dec
leave
xor
mov
jp
outs
jmp
les
xor
dec
cmp
inc
mov
jne
jb
mov
inc
mov
daa
jle
shr
out
lds
add
in
popa
loope
inc
es
lds
arpl
movs
sub
xchg
test
cdq
add
fisttp
lahf
mov
dec
xor
jp
fistp
daa
lods
mov
into
push
xor
pop
scas
stos
or
retf
bound
and
push
xor
xor
mov
and
cli
pop
and
cld
clc
(bad)
and
push
inc
sub
(bad)
movs
pop
aaa
xchg
je
fisub
hlt
mov
or
pop
push
inc
or
mov
push
xchg
cmp
or
mov
mov
scas
push
out
xor
pop
popf
js
dec
mov
sub
mov
fdivr
add
lock
in
fistp
outs
mov
mov
and
les
xchg
adc
jl
int
sbb
sbb
es
or
cld
add
shl
inc
call
out
mov
jl
push
xor
enter
pop
cdq
xchg
and
(bad)
mov
mov
retf
jae
xchg
movs
and
xlat
add
shl
xchg
aaa
lock
aam
mov
xchg
in
cmps
mov
jnp
loope
xchg
cmc
jae
push
jns
aad
mov
push
and
repnz
inc
fmul
and
sti
and
sub
push
cmp
or
xchg
adc
dec
inc
and
push
cmc
das
and
loopne
nop
ja
xchg
stos
sbb
add
mov
mov
jo
add
inc
test
push
outs
mov
clc
mov
inc
sbb
test
pop
push
push
out
cmp
or
into
idiv
push
push
bnd
and
fs
xchg
jle
inc
pop
add
push
in
xchg
sub
and
cli
repnz
mov
fs
ins
gs
jg
and
je
popf
sub
lahf
pusha
inc
dec
jns
xchg
loop
loop
cwde
popa
in
jp
xchg
jmp
imul
sub
pop
jb
mov
jae
jne
pushf
add
sbb
aaa
and
sub
jecxz
ins
call
pop
shl
retf
dec
lahf
inc
mov
imul
add
mov
adc
lods
push
test
not
mov
pop
jl
sub
cs
pop
arpl
shl
lahf
imul
pop
out
(bad)
pop
xchg
push
inc
bswap
sar
xor
mov
ins
loope
sbb
mov
jge
mov
xchg
xchg
push
mov
and
mov
cli
cmc
mov
xchg
add
and
pop
in
loop
int3
dec
lds
pop
inc
outs
test
mov
jmp
xor
inc
cmp
jmp
cmp
imul
jmp
movs
lods
push
jmp
(bad)
mov
and
sbb
inc
imul
arpl
push
out
sti
aaa
mov
gs
sbb
test
add
addr16
and
xor
retf
and
add
jmp
jle
test
stc
jo
sub
arpl
push
or
dec
jno
dec
shl
or
sbb
out
and
cmp
xchg
fnstenv
xor
imul
rcr
mov
sbb
jl
fcomp
rcr
add
push
or
out
ss
test
js
cmp
xor
and
dec
(bad)
mov
bnd
outs
int
movs
pop
add
mov
or
mov
or
sbb
inc
mov
popa
and
loopne
nop
dec
dec
cdq
cmc
aas
or
es
mov
(bad)
inc
or
push
ja
sbb
or
jg
dec
xchg
push
sbb
or
xchg
mov
mov
mov
xor
jmp
mov
and
(bad)
ds
retf
sahf
out
cwde
mov
ficomp
repnz
(bad)
lods
sub
iret
cdq
cmc
dec
dec
jle
push
pop
sbb
(bad)
les
or
jg
rcl
sahf
xchg
sar
loopne
in
cld
retf
ds
and
xor
fcmovbe
push
lds
aas
sahf
mov
add
adc
jae
retf
out
mov
fs
(bad)
adc
js
lea
add
dec
je
xchg
test
ret
rcl
fistp
add
dec
sbb
pusha
call
ins
inc
xor
or
mov
daa
cmps
cmp
dec
jcxz
push
cmc
fisub
(bad)
adc
sub
std
sub
xchg
pop
es
les
mov
cmp
rcr
sbb
sahf
xchg
hlt
inc
lds
jo
sbb
cmp
dec
cmp
or
mov
inc
js
mov
xchg
sub
or
cmp
or
dec
(bad)
icebp
xchg
cli
xchg
data16
aad
dec
cmp
mov
mov
adc
ja
dec
inc
jmp
mov
add
adc
pop
pop
push
xchg
int3
pushf
cmps
add
iret
leave
das
mov
add
sbb
cli
inc
cmps
mov
xor
mov
cmp
vcvtpd2ps
xor
or
and
mov
xchg
scas
pavgw
pushf
fild
call
out
dec
mov
sbb
cld
sbb
cli
(bad)
in
xchg
mov
fdiv
ins
and
retf
test
movs
xchg
mov
stos
test
and
sti
push
jl
inc
dec
stc
mov
jecxz
das
popa
sub
data16
mov
sbb
stos
xor
adc
hlt
repz
dec
cmp
xor
sub
cmps
mov
test
cmp
neg
out
in
int3
cwde
arpl
xchg
popf
inc
or
ret
sbb
aam
jo
add
retf
or
scas
jg
or
push
sub
or
rol
cmp
repz
and
repnz
and
pop
xor
xor
(bad)
loop
push
int
inc
mov
ins
je
stc
xor
push
test
or
push
pop
arpl
fs
pop
retf
sub
xchg
mov
and
push
jecxz
mov
shl
push
adc
push
mov
ins
dec
jb
sbb
cwde
jmp
jmp
out
xchg
(bad)
or
aaa
jnp
inc
shl
pop
clc
retf
ja
xchg
dec
mov
mov
mov
xchg
sub
ja
mov
mov
inc
(bad)
pop
sbb
(bad)
adc
push
bnd
stos
iret
fadd
bound
jno
push
jo
push
sahf
mov
mov
or
popf
ror
mov
xchg
in
xor
adc
sub
mov
pop
mov
gs
mov
dec
loopne
lock
retf
lods
hlt
xor
sub
das
daa
jmp
movs
rep
call
ret
mov
mov
cmp
mov
jne
sti
mov
test
push
in
jns
xor
add
adc
pop
cmp
stos
mov
push
js
loope
das
arpl
out
mov
int3
(bad)
in
les
sbb
ins
popa
add
mov
mov
ret
cld
xchg
stos
sub
inc
xchg
mov
sbb
inc
rcl
popf
in
and
int
lock
and
xchg
jmp
fisttp
cs
mov
(bad)
std
mov
popf
inc
sub
stos
out
pop
shr
pop
pop
loop
inc
dec
hlt
and
lods
jbe
jge
loope
fild
push
push
ja
sbb
add
jo
sbb
xor
jb
jae
repnz
mov
dec
cmp
pushf
push
ror
shl
stos
call
mov
lea
and
out
repnz
into
test
sub
movs
clc
out
ret
ret
cmp
lea
fs
inc
xchg
pop
mov
push
cmp
pop
les
fcmovne
xor
add
pop
clc
ins
xchg
movs
adc
mov
jp
dec
lahf
and
sbb
pushf
pop
mov
sub
inc
mov
(bad)
and
cmp
pop
cmp
cmps
cmp
sbb
mov
loope
or
cwde
sbb
ficom
lods
fsub
pop
test
in
adc
jmp
cld
arpl
ja
fdiv
in
sbb
pop
jp
mov
xchg
mov
fs
movs
dec
push
push
mov
push
inc
mov
test
pushf
xacquire
out
les
mov
xor
sub
(bad)
std
dec
mov
dec
mov
mov
neg
cmc
cdq
jg
push
loop
into
jl
movs
fidivr
pop
mov
scas
out
push
xchg
imul
jge
inc
iret
fisubr
fcomp
push
stos
jmp
inc
jbe
and
push
mov
sub
dec
adc
shr
aas
dec
and
fldcw
push
xchg
outs
sbb
enter
cwde
call
xlat
es
ins
fnstcw
jl
inc
lock
jl
adc
inc
(bad)
pop
cmp
icebp
mov
xchg
and
mov
bound
sub
pop
dec
pushf
add
mov
call
ss
add
sbb
jne
div
xor
sbb
cmp
dec
jno
push
aam
mov
sub
(bad)
or
leave
movs
mov
push
and
int3
mov
push
(bad)
enter
jb
retf
jmp
mov
enter
ss
adc
xchg
fiadd
cmps
xor
add
imul
or
mov
mov
pop
leave
xchg
and
rcl
push
cmps
(bad)
cs
push
dec
aad
ds
xchg
xchg
aad
inc
cli
in
mov
mov
push
(bad)
fisub
inc
out
fdiv
iret
sbb
jbe
xor
xor
sbb
ret
cmps
or
fiadd
leave
out
jle
repnz
jp
enter
test
adc
xor
xchg
xor
pushf
and
dec
cld
mov
popf
adc
mov
mul
dec
mov
pop
outs
mov
fld
call
lock
imul
xchg
test
in
push
dec
(bad)
stos
retf
dec
ja
ss
xor
jae
arpl
daa
mul
jg
pop
inc
mov
fistp
or
jmp
dec
ds
iret
pop
in
out
xor
addr16
je
inc
pop
or
mov
movs
std
jmp
inc
scas
jg
adc
or
sbb
into
cmps
dec
jno
out
lea
or
sub
daa
pop
sar
dec
pop
or
fidiv
aam
sub
xchg
cmps
dec
cmp
das
mov
enter
sar
(bad)
sti
sbb
mov
cmps
pop
in
nop
cmps
xchg
icebp
pop
icebp
popa
test
fbld
iret
loop
lea
(bad)
sub
lds
jmp
je
pop
(bad)
jge
data16
out
mov
jno
pop
clc
mov
in
jne
popf
or
iret
pushf
nop
(bad)
dec
sbb
mov
out
pop
or
sbb
js
mov
jl
scas
mov
dec
sbb
je
jmp
inc
shl
test
adc
pop
dec
jmp
add
aaa
push
dec
and
ret
mov
mov
inc
sbb
movs
ror
cs
jg
fwait
mov
imul
mov
arpl
movs
inc
call
mov
sub
ins
mov
outs
out
popa
(bad)
and
push
sub
cmps
das
popf
cmp
stc
pop
aas
and
enter
repz
daa
inc
daa
dec
das
pushf
push
and
pop
add
adc
and
stos
jb
adc
lea
pop
push
push
call
and
mov
gs
int
mov
je
xor
mov
add
jecxz
push
out
xchg
dec
test
call
daa
sub
out
clc
imul
ins
adc
retf
pusha
sbb
fwait
jbe
push
test
pusha
or
sti
push
movs
add
inc
sub
jecxz
ds
data16
cmc
jg
retf
sub
adc
and
and
dec
arpl
or
adc
fdiv
jnp
mov
and
xchg
xchg
mov
lea
repz
fisub
xchg
mov
cmp
sub
sti
outs
xchg
add
or
mov
rcr
clc
push
ja
cwde
xor
sbb
fnstsw
push
jle
mov
scas
repnz
jecxz
ins
mov
(bad)
iret
repz
(bad)
popf
adc
aas
jmp
adc
shl
pop
cmp
ds
mov
mov
or
mov
dec
int3
lea
(bad)
in
mov
inc
lock
repz
in
jle
addr16
mov
inc
lock
xchg
ret
cmp
das
mov
sar
popa
inc
out
mov
fcomi
adc
leave
jae
xchg
or
(bad)
push
outs
jns
retf
lahf
push
inc
mov
lods
mov
outs
or
mov
loopne
mov
shl
sbb
and
js
add
fcmovnb
sbb
aas
jne
cwde
dec
stc
into
rol
xor
dec
inc
push
iret
fwait
jp
test
inc
in
push
sub
xchg
popf
mov
(bad)
clc
adc
sub
push
jns
dec
lods
pop
mov
ja
adc
fnstenv
push
xor
cmp
cmp
in
jne
dec
pop
mov
out
imul
mov
pusha
(bad)
cli
int3
out
daa
pop
mov
addr16
popf
dec
clc
das
loop
mov
ja
pop
out
aaa
push
nop
jmp
ror
xchg
stc
sub
cmp
loop
jb
(bad)
dec
enter
bound
nop
mov
jo
ret
add
or
je
cpuid
arpl
jmp
cld
mov
jo
scas
mov
fisubr
retf
cmps
or
fmul
add
mov
push
xor
and
push
movs
dec
jbe
aam
pop
inc
adc
rcr
xor
inc
repnz
push
jns
xchg
pop
or
ds
pop
xor
ret
(bad)
(bad)
jne
(bad)
pop
scas
sbb
stos
mov
inc
inc
jg
les
cwde
inc
pop
or
pushf
cmp
sbb
cmp
dec
or
mov
ret
in
(bad)
jae
fadd
pop
mov
rol
and
sbb
dec
mov
sbb
lods
add
pop
jmp
loopne
aam
xor
or
jmp
or
cmps
and
ins
cmps
in
call
pop
dec
mov
cmp
jbe
fnstsw
xchg
out
inc
inc
cmp
enter
mov
cmps
jge
jle
and
rcr
jbe
ja
fcomp
jne
cwde
pop
outs
fdiv
add
(bad)
ins
pop
out
clc
sbb
mov
out
jmp
jmp
xchg
dec
inc
test
cmps
inc
mov
lods
mov
push
mov
ret
mov
adc
pop
jecxz
ins
cmp
or
jp
mov
mov
add
idiv
or
fs
fistp
pop
or
cmc
mov
dec
or
ret
jmp
or
inc
pop
pop
(bad)
xchg
fcomp
dec
into
mov
(bad)
adc
iret
mov
jae
mov
mov
push
(bad)
lods
xor
dec
dec
bound
sbb
es
and
test
xchg
sbb
adc
add
out
inc
aas
(bad)
adc
mov
mov
out
xchg
jno
or
jecxz
inc
pop
leave
inc
dec
sbb
cmc
mov
cmp
sub
or
dec
sbb
mov
repnz
cdq
shr
dec
push
call
repnz
xchg
mov
popa
js
sub
cmps
xchg
mov
inc
and
sub
mov
and
cmp
xor
mov
loope
pop
dec
rcl
repz
test
in
mov
pop
jne
rol
add
and
add
(bad)
aad
cmps
jns
sbb
mov
xchg
sbb
mul
stos
shl
and
js
or
ficomp
bnd
pop
dec
sbb
jge
jl
mov
bnd
sbb
sbb
js
add
aad
pop
xchg
inc
xor
fistp
retf
push
jbe
xchg
ins
or
or
dec
xor
ficom
outs
pop
mov
push
mov
inc
mov
mov
jge
xchg
(bad)
jne
push
pop
leave
addr16
in
jne
stos
loope
cmp
mov
jmp
add
pop
bound
(bad)
pop
in
mov
push
cmp
adc
push
pop
test
jge
dec
lods
test
movs
add
inc
test
stos
imul
push
pop
adc
sub
(bad)
xor
xchg
mov
mov
sbb
daa
movs
sub
aaa
outs
and
enter
mov
pop
push
dec
ins
sub
retf
retf
retf
mov
bound
cmp
popa
pop
sub
mov
xlat
mov
shr
cmps
ins
jne
lds
shl
sub
loop
shr
cmp
pop
lds
inc
sti
movs
cli
(bad)
in
jns
push
outs
xor
jmp
loope
(bad)
(bad)
lods
or
jecxz
add
in
inc
add
push
jmp
jno
jecxz
xlat
pop
mov
cmp
xchg
shl
jl
imul
mov
test
or
pushf
nop
rol
sbb
adc
sbb
aam
sbb
push
ret
mov
cwde
pusha
call
mov
mov
or
lds
ja
cmp
add
inc
psllq
adc
pop
sub
lock
cmp
adc
adc
imul
out
xor
xchg
mov
dec
fucomp
dec
adc
sub
and
dec
stos
mov
rcl
fsubr
arpl
int3
cwde
in
or
adc
imul
add
xchg
pushf
inc
push
inc
mov
shr
in
inc
and
int3
or
xlat
jg
inc
enter
push
and
ret
adc
cmp
xchg
xchg
repnz
mov
pop
cmps
sub
ja
sbb
and
and
jns
imul
movs
mov
add
inc
mov
cli
in
sub
add
lahf
pop
or
mov
ins
or
movs
jnp
adc
mov
in
stos
push
fstp
dec
pushf
lds
ja
movs
push
ss
fsubp
ds
xchg
jle
sub
adc
jbe
test
mov
imul
mov
cmp
mov
add
sub
loopne
jmp
popa
or
in
dec
fstp
imul
xor
jl
ins
aaa
mov
dec
inc
cvttps2pi
ss
jbe
stc
mov
dec
sbb
movs
add
pop
out
test
cmps
sbb
pop
movs
mov
test
sbb
mov
or
outs
out
cmp
(bad)
push
sbb
jb
adc
shl
imul
out
fstp
fdivr
push
jmp
push
sub
test
lods
stc
push
dec
mov
push
sub
bound
mov
push
jmp
dec
in
sbb
sbb
test
sbb
stos
imul
jmp
sahf
adc
add
cmp
fadd
ds
nop
cmp
dec
or
xor
mov
jns
cmc
jne
jo
xor
dec
jle
push
mov
test
retf
not
repnz
ins
or
lods
jmp
retf
out
call
das
xor
fisubr
xchg
loope
nop
sub
cmp
xchg
dec
stos
mov
lahf
bound
mov
cdq
shr
imul
in
and
add
popf
mul
or
cmps
out
test
jo
or
mov
fst
xor
pop
jo
js
push
(bad)
cmp
or
push
movs
xor
mov
jns
cmps
push
adc
inc
sub
repnz
sahf
repnz
mov
es
icebp
enter
movs
imul
movq
jl
jmp
shl
adc
pop
stos
je
pop
pop
bound
mov
or
cmp
repz
cmp
scas
nop
cmps
and
int3
das
jmp
sub
pusha
movs
pushf
push
dec
push
cmps
popf
out
in
inc
jmp
dec
ins
sbb
fsub
outs
mov
mov
aam
jnp
out
into
pop
imul
push
mov
in
cmp
mov
pop
push
inc
nop
or
adc
jno
(bad)
cs
ins
out
outs
in
outs
add
cwde
push
mov
adc
mov
sbb
adc
aam
jnp
jecxz
(bad)
std
jge
dec
out
mul
mov
out
in
movs
ins
int
add
loop
ror
cmp
xchg
ret
je
jmp
ficomp
or
scas
jnp
inc
pushf
bound
and
bound
mov
int3
in
mul
sub
mov
adc
jmp
scas
(bad)
movs
fiadd
jecxz
jb
aad
imul
mov
dec
push
pop
test
xchg
and
xchg
in
out
jle
xor
jg
imul
add
mov
js
add
push
cmp
test
stos
aam
sbb
stc
inc
fs
fld
into
mov
push
mov
sbb
ja
adc
mov
rol
cmp
jge
mov
out
mov
bound
fdiv
bound
ret
mov
cmp
scas
jo
mov
enter
mov
cmc
test
lock
add
xor
cmc
pop
pushf
out
mov
xor
lock
mov
jbe
pop
xchg
xor
xrelease
push
lahf
rcl
js
sbb
inc
mov
repnz
inc
jg
add
retf
iret
and
inc
sbb
not
retf
push
sub
adc
push
ficom
add
sahf
int3
jmp
cmp
popa
(bad)
push
inc
ficomp
(bad)
gs
aaa
xor
sbb
loop
loope
clc
add
std
rcr
adc
inc
mov
mov
adc
loopne
imul
sahf
or
xchg
push
mov
mov
inc
ror
stc
cmps
jne
inc
mov
das
es
outs
lods
fmul
inc
push
cmp
cmp
es
pop
cli
mov
xchg
retf
xor
push
inc
or
std
mov
push
(bad)
push
jp
jge
ret
sar
jmp
mov
xlat
mov
aaa
div
or
mov
sbb
push
inc
dec
ror
out
scas
fnsave
call
in
jb
mov
xchg
popf
aas
hlt
test
mov
not
cmc
test
inc
pop
out
inc
repz
leave
push
dec
cmp
js
sahf
out
lea
mov
xor
cmp
repnz
fucomip
icebp
in
mov
loope
(bad)
xchg
mov
mov
mov
out
hlt
int3
and
push
fs
sub
xchg
out
ret
xchg
(bad)
push
test
push
pop
push
fisub
sahf
add
pop
cmp
sub
and
mov
push
pop
dec
jmp
sub
in
mov
test
dec
retf
mov
repnz
pop
and
jne
inc
xor
hlt
test
dec
rcr
(bad)
pop
xchg
push
add
pop
dec
dec
xchg
leave
loope
fadd
cmp
out
movs
lods
mov
es
sbb
adc
mov
fldcw
mul
out
pop
cmp
add
mov
psllw
xchg
adc
add
pop
sbb
pop
call
iret
pop
mov
and
test
mov
push
in
mov
mov
inc
sti
mov
pop
imul
cmp
sub
pop
mov
lods
retf
in
fld
mov
fcomp
dec
cmp
push
in
test
mov
push
sub
sahf
popa
outs
add
dec
cmp
mov
cmc
pop
gs
sbb
ficom
in
mov
mov
retf
imul
sub
aas
add
(bad)
jno
dec
stos
xchg
iret
in
jle
stos
loop
cmp
out
pushf
pop
mov
inc
idiv
rol
or
cs
dec
pop
sti
xor
mov
cmps
mov
or
stos
ret
inc
push
imul
icebp
test
cld
stos
bound
fucomi
pop
mov
rcl
pinsrw
xchg
int3
jmp
push
dec
test
stos
test
ror
imul
mov
mov
dec
dec
and
push
fcmove
sub
shl
inc
adc
pop
xlat
add
scas
lea
jg
xchg
out
push
sbb
in
push
imul
and
scas
mov
mov
and
fmul
add
mov
ds
mov
retf
add
call
push
test
les
pop
repz
xor
sbb
pusha
dec
jno
retf
dec
imul
fwait
adc
or
imul
jl
out
and
inc
mov
inc
sub
add
inc
lahf
ret
mov
cmp
loope
sub
fsubr
out
stos
pop
jne
xor
aad
push
jge
sbb
adc
jne
inc
mov
mov
and
in
cld
cld
ins
and
jecxz
ror
aam
sub
add
int
aas
inc
lea
hlt
imul
xor
test
fadd
leave
clc
or
scas
sbb
dec
sbb
mov
mov
sti
ins
mov
std
jne
aaa
push
iret
test
jns
pop
inc
test
inc
or
mov
sbb
push
push
repnz
push
add
scas
enter
pop
mov
pop
sbb
cwde
(bad)
fnstsw
mov
mov
repnz
inc
pusha
and
mov
fnstcw
inc
and
sbb
xchg
xchg
data16
in
call
or
mov
cmps
sahf
call
add
sub
xor
jb
jo
jle
je
sub
loop
pushf
call
add
push
lods
jl
adc
sbb
shr
fld
mov
xchg
ret
ret
imul
std
add
mul
mov
xor
push
pop
movs
mov
dec
int
je
xchg
sbb
jmp
int3
inc
mov
sub
push
not
sti
push
test
(bad)
mov
xchg
cmp
cmp
mov
js
add
mov
leave
js
adc
mov
dec
cmp
out
mov
mov
cmp
inc
jle
adc
outs
pushf
jecxz
lahf
xor
and
mov
lahf
pusha
jge
call
and
dec
aaa
sbb
cdq
retf
push
jl
xor
jnp
cmp
sbb
xchg
push
mov
lahf
pop
mov
pop
cmc
daa
ss
stos
ret
cs
sbb
push
sub
(bad)
xor
adc
sar
mov
mov
test
out
mov
jnp
inc
xchg
rcl
sub
outs
pushf
retf
in
mov
sub
popf
hlt
fist
test
lods
add
sub
das
outs
sbb
push
call
test
cmp
mov
jmp
cmps
es
add
test
ja
jp
retf
mov
inc
push
cwde
add
jge
jmp
lahf
mov
sbb
aas
cmp
xchg
adc
je
pop
inc
test
pushf
cdq
xlat
sbb
mov
sub
popa
cmp
ss
cwde
xor
dec
pop
cmp
and
sti
in
mov
mov
xchg
cld
add
and
rol
nop
mov
in
xor
mov
sub
jle
sti
out
shr
dec
imul
ins
sub
rol
sbb
mov
repz
cmp
or
std
in
mov
cmp
xlat
lods
sbb
div
test
push
cmps
sbb
jo
and
mov
or
sbb
mov
(bad)
cmp
adc
gs
add
shl
jnp
(bad)
jno
mov
test
call
dec
ss
(bad)
jle
inc
(bad)
ins
or
ss
std
hlt
or
test
cmc
je
xor
inc
js
inc
test
ss
dec
xchg
xlat
int3
bound
jmp
push
cs
inc
scas
outs
hlt
int3
mov
das
add
jnp
adc
sbb
sbb
mov
jle
dec
push
pop
jg
dec
mov
retf
(bad)
jbe
mov
aas
fisttp
inc
sub
mov
fbstp
push
scas
loopne
sti
fwait
or
(bad)
loope
cwde
inc
fdivp
shl
inc
dec
in
in
mov
add
aaa
jns
cmp
iret
daa
add
jns
jge
mov
(bad)
xor
pusha
pushf
(bad)
out
xor
mul
push
popa
test
sub
push
jle
inc
sbb
cmp
adc
fcomp
imul
ins
sbb
push
push
outs
xor
pop
push
inc
into
cmc
ja
push
in
adc
jb
sub
mov
mov
push
jo
loop
or
aam
mov
xchg
xor
mov
or
loope
test
dec
mov
add
inc
jae
in
push
dec
jbe
ins
test
loope
mov
jmp
neg
inc
mov
lahf
nop
popf
ret
ficom
(bad)
jl
or
inc
xor
cdq
fld
inc
xchg
xchg
inc
fimul
sbb
fsub
retf
leave
xchg
cdq
xchg
cli
cmp
mov
js
mov
xchg
and
xor
jae
jecxz
in
jmp
xor
jge
dec
sub
addr16
sti
pop
adc
stos
mov
xor
jge
out
dec
ja
movs
(bad)
mov
mov
out
sahf
mov
sbb
sahf
inc
push
sbb
scas
dec
jo
jns
call
push
mov
xchg
in
leave
mov
ss
xchg
jle
aam
ror
pusha
jo
stc
inc
sub
jl
fsubr
(bad)
in
xchg
xor
and
addr16
and
add
inc
in
lock
add
inc
sub
mov
ins
jns
mov
dec
js
test
dec
cmp
cmp
lea
movs
add
pop
and
inc
inc
icebp
sub
into
icebp
cmp
or
les
aam
mov
test
mov
test
sbb
cmp
jmp
and
jae
add
ins
mov
cmp
fidivr
push
xchg
xchg
mov
add
pop
mov
test
adc
fstp
or
out
(bad)
and
push
movs
repz
int3
bnd
and
xor
xor
out
cmp
or
stos
rcl
add
dec
mov
in
in
je
bound
push
pop
and
push
lock
xor
dec
repz
pop
push
fld1
call
sbb
call
cdq
pusha
sbb
or
xchg
cmp
mov
ins
inc
push
jp
dec
in
mov
aad
push
pop
outs
mov
push
or
(bad)
mov
jbe
push
and
je
shr
jg
ret
push
xor
pop
xor
scas
xor
push
sub
repz
cdq
mov
movs
test
daa
xchg
xor
adc
pop
cli
repz
mov
pop
(bad)
into
cwde
dec
push
inc
mov
ins
out
ja
jg
lock
push
aam
sub
ret
sti
or
mov
lds
cld
push
xchg
lea
mov
pushf
jnp
cmp
or
xchg
fwait
inc
pushf
jno
xchg
add
push
stos
sub
xchg
sbb
fisub
int
aas
jle
call
lods
popa
daa
int
push
mov
imul
push
rcl
cld
push
jp
std
lods
mov
dec
pop
push
cmp
push
sub
adc
jb
inc
jno
nop
jecxz
adc
inc
push
pop
je
sub
push
jle
add
push
cmp
and
mov
push
fwait
cwde
mov
pop
aam
inc
inc
sbb
push
mov
jmp
nop
shr
mov
cmp
jecxz
jae
ins
mov
sub
pop
or
pusha
mov
ins
mov
test
mov
stc
adc
mov
test
push
outs
pop
sub
rcr
mov
adc
je
adc
out
aam
inc
mov
ds
jb
sbb
cld
repz
cwde
fld
add
and
scas
cmp
push
fldcw
cmps
fdiv
out
and
mov
fisub
xchg
pop
inc
cmp
call
loop
or
mov
iret
out
fdiv
stos
or
jo
rcr
fcom
jbe
sti
jns
das
mov
push
sbb
jg
jecxz
mov
adc
push
mov
or
or
adc
inc
or
cwde
jl
cwde
outs
adc
fst
fldcw
cmp
inc
aam
hlt
enter
and
shl
sbb
mov
rcr
inc
mov
push
xor
xor
loope
popa
cmp
xchg
js
les
(bad)
ds
in
push
xor
pop
adc
sahf
mov
cmp
jp
enter
ins
mov
arpl
xchg
cdq
stc
jb
ds
cdq
out
jmp
dec
movs
dec
pusha
dec
adc
jle
scas
inc
clc
in
cmp
movs
std
push
test
imul
mov
add
push
sub
lea
ja
mov
(bad)
add
pop
bound
xor
cs
or
xlat
das
xor
je
int
jmp
mov
mov
mov
sahf
xlat
test
imul
jle
dec
js
inc
sub
jmp
setp
imul
int3
cld
xor
cld
xchg
mov
inc
repz
hlt
and
adc
out
loope
adc
xchg
mov
imul
push
adc
jo
test
xor
hlt
jne
adc
jle
jbe
jo
add
jo
lods
outs
mov
mov
jge
jmp
cmps
cmp
sar
jne
(bad)
xor
js
data16
xchg
mov
adc
pop
or
push
ret
jge
cmps
and
push
clc
xchg
stos
(bad)
sbb
sub
out
dec
pop
jnp
jo
cmovne
jnp
dec
xor
mov
sbb
push
push
into
mov
add
adc
(bad)
cmps
add
mov
mov
dec
imul
add
test
mov
out
cmp
into
fidiv
add
and
es
add
or
stos
sbb
mov
mov
or
cmp
lock
cmp
xor
sbb
add
push
aaa
stc
cmp
movs
enter
popa
mov
fst
loopne
mov
and
in
fisubr
jg
jecxz
imul
lods
ins
xchg
pop
adc
in
mov
adc
pop
cmps
int3
push
bswap
xor
xor
mov
mov
int3
test
push
sbb
xchg
inc
mov
ds
popf
and
gs
inc
mov
dec
cmp
sbb
pop
adc
mov
jp
push
sub
jg
add
stos
jbe
adc
out
mov
inc
dec
mov
rcl
les
scas
inc
sub
repnz
fldenv
addr16
jae
mov
clc
pushf
call
push
enter
mov
sbb
sar
xchg
cwde
and
lds
sar
test
xchg
xchg
(bad)
mov
push
dec
out
mov
and
jl
dec
cmp
push
mov
ins
pop
fsubr
(bad)
adc
mov
ret
lds
fwait
test
sub
cmp
push
pop
xor
shr
shl
js
dec
fwait
rcl
adc
mov
loope
loopne
cli
(bad)
stos
addr16
sar
sbb
mov
mov
mov
shl
mov
xchg
mov
or
loopne
push
mov
seto
(bad)
dec
popa
dec
fidivr
push
jp
into
js
cmp
or
imul
xchg
imul
in
imul
popa
in
cli
pop
sbb
test
cmp
push
pop
out
jge
inc
in
cmp
push
jmp
pop
sbb
lea
push
outs
pop
cmps
outs
stos
ds
(bad)
jmp
sub
ffreep
mov
fnstenv
lods
jbe
lods
sbb
in
jp
inc
arpl
jp
ja
fadd
mov
cmps
push
or
mov
pop
cmp
and
mov
push
sbb
xchg
sbb
ss
(bad)
and
mov
int3
sub
adc
inc
(bad)
fsub
cld
and
push
xchg
sub
xchg
popa
cmps
cmc
mov
mov
push
xchg
adc
jmp
sub
fisubr
ds
mov
mov
push
cwde
sub
push
clc
mov
ret
fbstp
int3
sub
xlat
int
adc
cmps
jmp
jg
sub
popf
aad
pop
ds
sahf
xor
mov
ins
xchg
adc
adc
and
jg
enter
pop
dec
mov
mov
inc
or
xor
dec
dec
cdq
dec
pop
data16
mov
mov
(bad)
out
xchg
std
mov
push
add
popa
xchg
inc
arpl
or
xchg
gs
test
mov
aas
jne
lahf
pop
fwait
and
push
mov
bound
add
scas
add
dec
mov
ret
fld
inc
aam
mov
outs
cs
outs
popa
push
sub
imul
and
cdq
(bad)
ret
gs
ret
(bad)
or
mov
scas
or
or
test
push
retf
das
icebp
das
ja
mov
je
shl
sub
out
in
(bad)
and
out
jge
jae
cld
add
xchg
stos
inc
sub
sahf
pop
shl
lahf
pop
inc
pop
test
mov
lods
dec
(bad)
iret
push
fbld
sub
rcr
ret
imul
xor
inc
daa
or
cmc
out
lea
call
inc
in
xor
inc
shl
push
pop
push
push
cmp
cdq
sub
stos
div
inc
gs
les
(bad)
push
std
stos
retf
sbb
daa
mov
je
bnd
int
fdivr
sbb
mov
adc
mov
push
test
jmp
pop
jge
adc
dec
cmp
and
adc
cmc
cwde
repz
jmp
addr16
push
mov
mov
das
pop
movs
jecxz
ret
pop
mov
cmc
add
mov
inc
adc
pop
mov
jmp
call
pop
lock
pop
xchg
jns
dec
pop
inc
movs
outs
repnz
outs
cmp
leave
lods
sbb
aad
mov
std
mov
sub
mov
mov
mov
out
add
cwde
mov
(bad)
(bad)
hlt
ror
jns
fwait
sbb
leave
pushf
cli
sub
pop
rol
(bad)
into
jp
inc
loope
inc
push
loope
mov
sbb
push
aad
outs
(bad)
cmc
in
cmp
push
cwde
shl
cwde
jne
xchg
stos
cmc
iret
sub
scas
and
inc
ss
xchg
rol
and
iret
dec
pop
xor
call
test
and
inc
xchg
pop
lock
hlt
inc
add
dec
pop
mov
sbb
lods
add
xchg
(bad)
aad
aad
jns
mov
add
out
out
jbe
or
add
cmp
sbb
push
mov
mov
xor
cmp
mov
sub
and
test
enter
out
push
cdq
(bad)
es
cs
loopne
xor
dec
mov
loope
out
mov
cmp
or
rcl
dec
stos
dec
movs
cli
sub
push
sti
xor
into
ins
xchg
xchg
lahf
jmp
add
mov
adc
add
jns
loopne
lea
or
cli
ins
cmc
test
jnp
pop
cwde
ins
(bad)
scas
movs
cs
cmp
push
mov
shr
movs
inc
loop
ret
push
into
leave
cwde
div
ds
mov
hlt
mov
pop
mov
ret
cmps
xor
bound
jg
test
pop
mov
inc
jnp
push
loop
inc
mov
sbb
pop
or
mov
pop
lock
out
cmps
js
stos
mov
lds
(bad)
lea
punpckhwd
mov
cmc
rcr
sbb
and
enter
jnp
mov
xchg
jle
cmp
scas
scas
jbe
sub
das
jbe
add
and
outs
mov
shr
in
push
xchg
mov
pushf
xor
retf
rol
data16
iret
lahf
bound
xchg
pop
sbb
mov
dec
repz
mov
sub
pop
inc
xor
out
loope
xchg
push
dec
adc
xchg
aaa
pop
jno
push
and
or
xor
sub
jecxz
aam
sbb
pop
ins
xchg
pop
or
ret
push
and
fild
xor
mov
lahf
inc
dec
pop
fiadd
scas
mov
xlat
inc
add
pop
dec
jg
cmp
mov
and
cmp
mov
popa
xlat
out
pop
test
rcl
out
push
mov
lock
pop
jle
in
xor
dec
sub
push
ret
out
xlat
loope
ja
in
xchg
iret
xchg
push
xchg
div
int
mov
mov
ja
pushf
mov
sub
mov
push
mov
fwait
je
sbb
outs
ja
(bad)
xchg
ss
(bad)
leave
dec
jp
ds
sub
cmp
jbe
fwait
push
enter
ret
out
sub
mov
pop
cs
cwde
rcl
out
(bad)
aas
inc
xchg
jnp
mov
and
aas
and
dec
push
call
test
jle
cs
fidivr
retf
mov
repnz
cmp
imul
push
test
pop
push
out
jmp
inc
mov
adc
and
mov
inc
out
hlt
adc
xor
aas
push
xchg
dec
js
stos
cmp
cmp
sub
iret
pusha
dec
rol
cli
les
inc
(bad)
jne
nop
adc
inc
xchg
dec
sub
mov
nop
or
call
jnp
jecxz
repnz
aad
pop
repz
outs
cmp
jnp
repz
iret
ret
inc
into
out
addr16
hlt
mov
in
aam
cdq
imul
mov
xchg
lock
lods
ja
mov
mov
fmul
add
sbb
dec
mov
pop
pop
popa
lods
xchg
dec
or
sub
call
add
cli
fwait
xchg
inc
pop
dec
or
and
(bad)
nop
xchg
mov
dec
fcmovb
dec
gs
inc
in
cs
dec
pop
or
and
inc
mov
pop
jmp
dec
ss
pop
cs
mov
add
out
xchg
sar
bound
mov
int
pop
in
inc
fwait
push
jge
lahf
or
call
pop
icebp
icebp
jecxz
outs
pop
jp
scas
jmp
js
fstp
ror
adc
popf
mov
add
sub
clc
(bad)
fsub
cs
xchg
push
ror
mov
neg
dec
jg
fdivr
mov
pusha
jne
iret
mov
adc
out
retf
push
scas
ud2
cmps
push
lods
stos
mov
hlt
rcr
mov
and
push
das
and
call
in
fist
movs
fld
jge
fdiv
shr
dec
jmp
sbb
lahf
xor
arpl
inc
js
sar
xor
xor
mov
pop
xor
jmp
push
test
mov
and
push
mov
call
add
jb
aaa
inc
dec
fsubr
sbb
jle
test
xchg
or
je
test
cmp
jb
push
out
cmp
and
test
ins
adc
add
inc
jnp
leave
aaa
aam
push
pop
mov
ret
mov
mov
lock
mov
(bad)
cs
sbb
movs
dec
dec
jae
adc
xchg
add
dec
test
stos
loope
stc
jb
xchg
cmp
lods
mov
push
pop
adc
fdivr
xlat
popa
test
push
stos
cdq
mov
aas
cmp
and
push
and
out
xchg
xor
xlat
jae
mov
outs
cmp
fnsave
ret
mov
pop
inc
dec
out
inc
shr
mov
push
imul
adc
inc
aas
mov
shl
and
mov
cmp
cmp
push
and
ficomp
test
retf
jo
lds
hlt
sub
jecxz
mov
adc
add
fistp
popf
push
not
add
leave
pop
or
fs
xchg
or
dec
pop
mov
push
add
adc
lods
sbb
in
pop
mov
cmp
xchg
repnz
(bad)
call
sbb
sub
push
(bad)
out
jl
pushf
pop
mov
jmp
cdq
and
cld
xchg
and
fwait
iret
int
mov
(bad)
hlt
addr16
jb
jae
xor
lods
cld
cli
inc
test
mov
test
mov
cmp
fmul
xchg
into
adc
inc
push
xchg
add
pop
mov
enter
nop
das
(bad)
and
sub
cmp
ja
les
repnz
mov
fwait
and
das
bound
mov
popf
sub
add
fistp
jmp
test
cmp
movs
push
sub
inc
into
cmp
xchg
mov
sar
or
pop
inc
popa
aam
or
in
(bad)
jmp
iret
int3
mov
or
pop
hlt
or
(bad)
in
pop
adc
fwait
jo
xchg
ds
xchg
gs
fadd
jg
pop
sbb
stos
and
add
repz
mov
add
and
test
inc
dec
inc
jp
adc
dec
mov
push
out
jp
xchg
push
aad
ins
jmp
xchg
test
adc
fst
mov
and
mov
add
mov
push
popf
fmul
mov
and
push
xlat
xchg
icebp
push
sbb
(bad)
jmp
add
xchg
push
(bad)
cmps
je
mov
dec
(bad)
fistp
je
sahf
cmps
movs
adc
in
lds
fimul
aas
aaa
cmp
push
loope
fdivr
push
fistp
(bad)
fdiv
fidivr
sub
xchg
cmp
xchg
mov
sar
push
and
loopne
ret
data16
or
fidivr
into
add
xlat
or
adc
cli
(bad)
sbb
mov
int3
and
inc
push
imul
into
inc
mov
push
fdivr
mov
addr16
inc
adc
(bad)
rol
push
lods
test
xchg
push
pop
mov
or
xor
mov
ja
or
repnz
rcr
dec
leave
mov
xchg
or
mov
push
jecxz
stos
jbe
push
mov
fisub
test
int
addr16
(bad)
sti
add
add
sbb
add
push
sar
pop
jl
mov
into
fs
pop
stos
aas
inc
hlt
mov
ds
faddp
jg
jae
xchg
cmp
add
test
aam
inc
mov
bound
in
pop
fwait
inc
in
xchg
outs
sub
add
test
(bad)
mov
or
pop
xor
push
jb
iret
cmp
sub
fdiv
pop
gs
hlt
fcomp
in
jg
test
mov
in
cmp
fwait
mov
outs
cmp
ror
lea
scas
add
mov
jg
sar
nop
pinsrw
cmc
fdivr
mov
xor
fs
inc
jmp
push
out
xlat
jbe
fdiv
xchg
or
and
mov
adc
lds
(bad)
das
loope
cli
cmp
mov
in
out
pop
and
push
jo
cwde
stos
cmp
pop
es
sub
mov
push
push
add
adc
sub
mov
cld
popa
in
fwait
and
shl
lds
dec
std
mov
daa
fldcw
data16
sub
loope
cmc
stos
pop
xchg
mov
jecxz
fwait
xchg
test
jne
dec
mov
mov
dec
mov
pop
or
es
ror
push
jle
mov
dec
cmp
xor
push
loop
jle
or
ror
mov
stos
xchg
and
(bad)
xlat
dec
es
loopne
(bad)
cmp
je
dec
cmovne
daa
pusha
out
jp
mov
push
call
aad
sbb
aaa
sti
in
sbb
out
lds
(bad)
adc
outs
mov
mov
push
retf
xchg
jp
and
out
sub
mov
in
pop
lahf
inc
jbe
xchg
test
xchg
jne
push
dec
call
into
dec
fcmovnbe
fwait
retf
shr
mov
mov
cmp
mov
mov
cld
cwde
cmps
mov
outs
hlt
and
ins
stc
mov
out
jbe
dec
mov
popf
movs
mov
mov
pop
aam
call
push
xchg
push
xchg
inc
clc
ins
pop
xor
fidivr
shr
popf
cmc
ins
xor
push
pusha
ds
into
scas
mov
fistp
jecxz
sub
and
hlt
add
paddb
out
ds
push
sbb
and
jecxz
mov
popa
push
xor
sahf
aaa
push
sbb
sub
movs
pop
inc
mov
jecxz
daa
mov
cwde
test
push
out
ss
sti
iret
jp
push
or
or
fist
inc
jp
jge
jne
push
sbb
arpl
cmp
dec
out
call
mov
outs
xchg
or
and
and
aas
jno
mov
xchg
fiadd
or
or
in
push
inc
xor
mov
sub
jg
leave
aaa
or
retf
ret
mov
sub
push
test
mov
sbb
sti
mov
fisttp
sbb
jmp
xchg
movs
pop
out
mov
loop
clc
mov
dec
enter
mov
jo
pop
adc
cmps
xor
out
out
cmp
add
cmp
mov
mov
push
add
mov
sbb
adc
jg
sahf
lds
cwde
push
repnz
pop
lock
aas
dec
cmp
mov
mov
cli
ja
pop
and
dec
lock
sub
adc
cmp
into
test
ins
pop
cmp
(bad)
jmp
or
mov
loope
es
jo
add
sbb
clc
addr16
fisubr
mov
je
push
dec
(bad)
imul
inc
lock
popf
stos
mov
xchg
mov
xor
stc
(bad)
push
cmp
outs
fist
mov
fwait
xor
(bad)
mov
je
sub
sti
lods
popa
mov
(bad)
fcom
test
xor
xchg
fsubr
push
mov
call
add
push
mov
adc
mov
xchg
jbe
dec
add
inc
pop
outs
icebp
adc
push
pop
outs
pop
nop
and
cmc
icebp
retf
sar
push
xlat
pop
popf
adc
test
jle
mov
add
sti
addr16
lods
pop
mov
jae
add
out
ficomp
inc
scas
cdq
call
pop
(bad)
pop
mov
imul
imul
(bad)
lods
scas
cld
or
js
mov
adc
mov
js
ins
lock
pushf
mov
ja
cmp
aam
xchg
push
push
(bad)
aad
dec
jge
adc
mov
jmp
ficomp
call
add
scas
jo
into
jmp
lahf
fild
cmp
sti
or
mov
sbb
out
sub
jle
jmp
sbb
cmp
retf
dec
inc
sbb
aam
push
pop
xor
pop
xchg
mov
xchg
ret
sbb
dec
and
xchg
mov
mov
xchg
sti
out
enter
mov
pushf
pop
int
test
inc
sti
repnz
jnp
xor
movs
dec
fisub
rol
loope
sub
push
xchg
movs
sar
out
fcomip
sub
cdq
cld
ja
icebp
mov
cmps
repz
mov
jno
push
in
data16
stos
shl
dec
lds
pop
loop
mov
das
fadd
test
fisttp
aas
out
(bad)
mov
leave
adc
mov
xchg
fsubr
push
sbb
dec
(bad)
and
jbe
mov
lds
jb
xchg
stos
sub
movs
sbb
mov
and
aas
add
inc
nop
adc
cmp
sbb
in
dec
popa
fiadd
or
mov
ret
xchg
adc
sti
jne
or
or
iret
nop
inc
shl
xor
das
imul
mov
popf
cmp
push
mov
jp
xor
inc
mov
std
add
(bad)
div
push
rcr
cwde
bound
nop
or
jle
cmp
jecxz
mov
dec
xlat
sub
sub
push
jnp
out
outs
adc
fld
stos
ss
out
mov
jno
test
cmps
and
nop
imul
mov
sbb
(bad)
mov
xor
inc
ins
dec
in
or
jns
dec
sar
pop
xor
outs
das
cli
pop
mov
mov
pop
les
jmp
je
rol
std
dec
es
rcl
sbb
xor
loopne
pop
in
inc
sbb
ret
and
das
das
cmp
movs
shl
pop
push
lods
pop
popa
jmp
sbb
mov
lock
mov
inc
popf
les
shr
mov
pop
nop
xor
aaa
or
push
imul
dec
sub
and
add
sti
add
fdivr
or
outs
jnp
inc
sub
in
cmps
sub
jno
pop
lahf
xor
xor
xchg
test
hlt
test
mov
push
push
xchg
lods
jbe
cmp
or
adc
jmp
mov
out
push
mov
jecxz
movs
or
and
add
pop
mov
cmps
fdivrp
clc
mov
push
sar
repnz
push
fnstenv
push
xor
cmp
add
sub
push
bound
shl
cli
(bad)
ror
lods
pop
mov
sahf
shl
dec
sbb
test
push
cmps
and
test
pop
push
cmp
lods
inc
idiv
mov
xor
or
pop
das
jmp
loopne
and
mov
xor
in
addr16
arpl
data16
les
pop
data16
mov
or
mov
sub
and
scas
aaa
push
mov
and
jecxz
push
xor
jecxz
arpl
inc
inc
gs
inc
clc
lahf
fcmovnb
int3
add
and
in
clc
and
xchg
test
xchg
lahf
sahf
ins
adc
loopne
ss
add
bound
mov
dec
aam
hlt
pop
sub
arpl
jle
sahf
ins
pop
or
mov
cmp
and
out
cmp
xor
or
xlat
pop
and
xchg
push
mov
xchg
shl
out
jne
xor
mov
in
mov
adc
(bad)
test
inc
sar
leave
fs
push
mov
xor
jb
mov
inc
call
jle
adc
and
loope
inc
fwait
xor
ror
ret
cmp
mov
dec
mov
add
daa
shl
jg
xchg
jge
movs
jmp
(bad)
sbb
pop
jb
cmps
jo
fbld
movs
and
add
cli
test
stc
fisttp
out
adc
in
mov
icebp
pop
or
test
movs
call
push
jbe
mov
or
xor
mov
test
pop
jo
xor
ja
pop
(bad)
retf
jp
int3
test
adc
sub
int
or
jmp
rcl
in
test
call
xor
outs
shl
fcomp
xchg
icebp
lods
xor
(bad)
mov
cs
or
cwde
add
cmps
mov
cmp
mov
sbb
ffreep
mov
stos
cmp
and
lea
cs
or
mov
rcr
ds
retf
pop
adc
inc
mov
loope
lahf
mov
sti
xor
test
lds
adc
xchg
std
jae
jmp
push
call
mov
les
mov
fwait
inc
jmp
adc
into
xchg
daa
mov
xchg
fst
mov
xchg
loopne
in
(bad)
and
sbb
test
and
shr
sbb
stc
das
mov
mov
fnstsw
cmp
cmps
push
sbb
sbb
pop
inc
push
popa
(bad)
fsincos
aas
push
cmp
inc
cmc
mov
push
and
push
aam
sbb
cs
lahf
push
add
sub
aaa
cs
cmp
pushf
shl
add
cli
xchg
sti
sar
ja
cli
and
test
pop
jl
cmp
test
out
mov
mov
popf
push
sbb
mov
ret
jle
adc
xchg
ds
mov
sub
popf
xor
adc
sbb
mov
jmp
aaa
sbb
push
mov
mov
repz
inc
outs
and
rol
(bad)
cmp
test
rcr
(bad)
lods
and
les
movs
pop
add
and
retf
jmp
movs
jno
shr
mov
lea
pusha
sbb
cwde
adc
ss
repz
in
into
mov
ret
js
iret
xchg
push
sub
or
inc
cmp
cmp
call
mov
fld
ins
sbb
mov
loopne
fistp
push
jge
xchg
add
lods
stos
lahf
push
mov
pop
jp
sub
bswap
add
push
arpl
int3
test
xor
es
into
enter
in
mov
inc
pushf
pusha
jb
adc
xchg
xchg
inc
jmp
mov
addr16
js
sbb
loopne
sahf
pop
movs
daa
mov
enter
icebp
add
or
mov
outs
or
dec
fld
pop
ficom
das
popf
ins
and
cdq
inc
ins
movs
in
pop
inc
fistp
test
push
movs
fnsave
inc
popf
mov
popa
mov
inc
fsubr
fdivp
pop
sbb
jo
scas
leave
shl
add
adc
fwait
test
sub
mov
inc
jmp
ret
aam
push
cmps
xchg
or
inc
lods
inc
icebp
jo
and
sbb
fcomi
sub
pop
sub
sub
into
in
aas
mov
mov
test
mov
add
sahf
imul
xor
jl
and
loop
or
push
add
cmp
mov
shr
add
or
inc
icebp
add
aaa
and
and
xor
adc
adc
lahf
cmp
cwde
call
gs
push
add
mov
push
adc
pop
xor
or
leave
cmps
and
pop
sub
push
push
and
stc
jno
mov
adc
lods
and
(bad)
std
call
les
inc
not
jl
jns
cmps
dec
push
sbb
mov
shl
pop
stc
and
pop
daa
test
or
sub
add
jge
popf
dec
mov
xchg
push
push
xor
int3
adc
dec
pop
push
dec
adc
sbb
cs
add
sbb
fmul
jae
(bad)
add
mov
stos
clc
mov
js
imul
and
arpl
mov
sub
xor
ret
int3
js
gs
jp
sub
jo
push
dec
scas
sahf
nop
out
mov
movs
sbb
cwde
aad
mov
mov
push
push
xchg
movs
pop
xchg
xchg
mov
ret
mov
jns
mov
adc
mov
sbb
mov
mov
das
call
dec
jae
xor
or
push
imul
jl
fisttp
and
popf
test
pusha
push
mov
std
(bad)
shr
xor
aam
lahf
es
mov
mov
stc
cmps
js
movs
push
stc
mov
or
jmp
add
movs
dec
jge
(bad)
idiv
inc
sub
push
sahf
je
repnz
pop
pop
jbe
adc
lods
or
pop
lods
arpl
sbb
sahf
dec
into
adc
int
push
mov
cwde
xor
mov
mov
jne
xchg
pop
sub
adc
xlat
or
mov
fbstp
and
shl
scas
jno
mov
sbb
adc
xor
cmps
jne
dec
sbb
cmp
mov
push
and
inc
sub
dec
ret
cmp
aaa
stc
pop
dec
sbb
mov
clc
add
fsub
retf
cmp
sbb
into
lahf
cmp
adc
out
hlt
mov
xchg
mov
cdq
dec
imul
add
cmps
cmps
xchg
push
(bad)
sbb
mov
inc
sub
sub
adc
ins
scas
(bad)
loop
sub
push
cld
inc
mov
xor
cli
mov
fdivp
add
cmp
push
or
shl
cwde
or
xchg
push
neg
jmp
pop
mov
loop
daa
imul
out
pushf
adc
in
add
push
pop
pop
xchg
push
mov
arpl
imul
or
dec
dec
or
les
rcl
(bad)
xchg
push
in
jne
out
xor
ins
loope
mov
cmp
or
sbb
push
mov
ror
int3
cmp
inc
mov
push
call
in
cmp
out
fs
push
and
popf
adc
inc
loopne
arpl
push
mov
clc
call
ins
retf
loop
outs
fldenv
sti
jge
dec
mov
cmp
and
int
or
mov
fst
scas
mov
lods
popa
bound
fldcw
cmp
xchg
ja
push
xchg
jnp
pop
cld
imul
nop
jns
leave
dec
repnz
and
jb
js
jmp
lods
shr
push
add
int3
imul
pusha
les
test
gs
das
inc
sbb
inc
lods
cmp
mov
mov
dec
cmp
and
sbb
sbb
ret
add
or
push
pop
add
sahf
cmp
rol
adc
sub
mov
mov
in
mov
lahf
add
(bad)
enter
scas
push
jbe
push
mov
loop
mov
jle
scas
cmps
sahf
aas
cwde
sbb
sbb
mov
mov
aas
inc
mov
mov
stc
and
push
push
imul
sub
fstp
adc
in
or
movs
inc
iret
dec
loopne
in
pop
xchg
push
and
sub
sub
bnd
pop
add
jmp
fcomp
nop
pop
clc
outs
xchg
nop
lea
loop
loopne
jmp
(bad)
mov
je
fist
mov
les
cmp
mov
(bad)
sbb
bnd
jl
or
lahf
jb
xchg
ins
xor
neg
aas
fdivr
push
push
jmp
es
push
sbb
jp
push
punpckhwd
add
dec
sti
cli
stc
or
or
adc
rol
push
call
mov
aad
test
stos
and
add
ror
pop
inc
or
xor
or
outs
loop
int
mov
aad
push
xchg
xor
cmp
leave
je
mov
dec
pop
frstor
xor
and
scas
jg
push
mov
mov
jmp
dec
out
icebp
rcl
sahf
xchg
or
loope
test
jo
inc
fs
xchg
imul
pusha
xor
sar
shl
push
sbb
dec
or
cli
dec
mov
js
(bad)
mov
retf
push
and
push
sbb
xchg
(bad)
clc
push
inc
mov
ror
mov
fld
mov
xchg
out
movs
inc
xor
leave
mov
out
jns
add
retf
iret
dec
test
arpl
sti
add
iret
out
daa
mov
xchg
pop
lock
sti
sbb
dec
inc
jmp
sub
sbb
data16
sbb
ret
add
and
fistp
pop
jb
xor
aaa
pushf
jg
pop
sub
mov
and
out
mov
test
xchg
jnp
jp
sbb
push
xor
mov
in
sub
out
dec
jne
ret
sub
jmp
sti
jle
cdq
fcomp
hlt
(bad)
jns
(bad)
pop
aaa
(bad)
imul
cmc
repnz
mov
jo
xor
imul
pusha
pop
dec
cmps
cmc
xchg
ret
mov
jnp
pop
xor
pushf
push
mov
gs
ins
popa
int
push
push
loope
mov
test
jno
test
jle
push
scas
in
jbe
out
cmp
jbe
xchg
mov
int
cs
mov
sub
mov
bound
fsub
call
and
sub
push
cmps
addr16
mov
or
ins
sbb
dec
imul
cld
xlat
fldcw
fstp
add
jge
aam
mov
sti
pop
dec
idiv
pop
push
xlat
cmp
mov
inc
xchg
sbb
out
fucomi
and
jle
popa
xchg
outs
pop
push
adc
cdq
sub
fwait
test
lock
mov
or
push
loop
mul
dec
push
sbb
push
(bad)
mov
cmp
sub
sub
add
push
push
inc
pop
add
outs
aaa
aad
pop
mov
push
mov
jae
out
mov
das
ds
inc
nop
jmp
adc
shr
scas
and
call
dec
pusha
mov
dec
mov
pop
and
mov
ficom
dec
add
sub
jbe
mov
xchg
je
(bad)
movs
jne
mov
dec
xchg
int3
cld
(bad)
sbb
into
push
pop
or
cmc
int
adc
cmp
jmp
mov
fsub
and
xor
stos
cmps
and
inc
jne
fs
mov
xor
jle
sbb
lahf
xor
aaa
(bad)
arpl
imul
xlat
push
jg
dec
jnp
ret
movs
push
cwde
jns
stc
push
outs
stos
int3
inc
and
or
(bad)
pop
cmp
sbb
stos
cld
gs
enter
inc
push
push
jb
pop
xor
test
popf
les
stos
add
xor
in
inc
scas
clc
push
test
sub
pop
js
loope
mov
xor
cmp
aad
pop
fcomp
xchg
cmp
pop
dec
pusha
cmp
dec
repnz
retf
push
ss
imul
imul
fsubr
cdq
mov
mov
aad
(bad)
inc
retf
pop
push
mov
jnp
sub
fcomp
fiadd
jl
aas
sub
add
and
pop
or
and
imul
shr
pop
in
loopne
or
imul
mov
mov
inc
and
mov
sbb
adc
repnz
sar
cwde
xchg
inc
(bad)
hlt
add
xor
scas
push
mov
fimul
outs
inc
js
jecxz
and
cmp
push
fiadd
and
outs
adc
inc
ret
inc
stos
aas
sbb
mov
mov
jbe
pop
jb
and
push
enter
push
jp
mov
ror
jno
push
sbb
sub
inc
sbb
lahf
sbb
sahf
cmp
sbb
hlt
pop
out
retf
cld
lahf
lahf
jne
mov
or
fadd
push
ficom
test
xor
mov
xor
mov
imul
ror
cmps
fwait
xor
(bad)
stc
ins
xchg
clc
mov
and
cs
jo
adc
push
push
retf
jbe
inc
mov
sub
fisubr
call
jl
mov
ins
xor
inc
cmc
cmps
(bad)
hlt
(bad)
out
stc
xchg
sbb
mov
sar
jb
popa
or
mov
and
and
scas
test
lods
ret
push
push
jmp
sub
xor
cmp
aas
cwde
rol
aam
int
mov
rol
or
pop
or
(bad)
sbb
jae
xchg
dec
jp
loope
add
idiv
rcr
dec
ror
outs
or
xchg
xor
(bad)
cmc
iret
dec
jns
cmp
and
cmp
sar
data16
popa
pop
inc
jns
lea
xchg
(bad)
xor
xchg
mov
js
dec
in
add
inc
and
mov
cmps
aaa
pop
ror
data16
pop
vmptrst
dec
out
inc
sbb
inc
mov
mov
rcl
pop
mov
pusha
stos
add
sbb
jmp
out
rcl
push
mov
in
jp
aaa
push
cmp
sbb
aad
push
jecxz
pop
arpl
push
add
movs
out
psllw
push
dec
outs
cdq
rcl
iret
outs
add
inc
ins
js
scas
sub
jle
adc
nop
xor
mov
push
in
dec
xchg
sub
inc
ret
cmp
and
out
jle
push
mov
pop
inc
addr16
movs
mov
push
dec
outs
xchg
dec
pop
inc
aam
out
rep
scas
cmp
pop
mov
loope
hlt
stos
retf
(bad)
or
dec
in
into
jno
out
les
adc
je
and
(bad)
js
sbb
out
jmp
je
scas
mov
push
adc
push
imul
enter
ret
imul
mov
ss
aad
mov
mov
xchg
jb
fcom
jnp
ror
enter
xlat
mov
lea
and
imul
jmp
mov
call
test
ins
ror
hlt
stos
ficomp
xchg
sti
add
outs
les
(bad)
mov
dec
dec
lea
jl
pop
stos
adc
cwde
imul
sbb
push
outs
xor
adc
nop
cld
fbld
sar
adc
mov
scas
or
sar
mov
push
ins
hlt
jbe
ret
call
dec
je
cld
fstp
sbb
mov
test
out
pop
xchg
inc
idiv
jae
(bad)
mov
mov
pusha
ret
mov
rcr
rol
jmp
icebp
(bad)
out
jg
push
jno
cs
mov
jns
cs
addr16
lea
in
stc
fs
add
add
dec
pop
adc
pushf
lahf
sub
xor
clc
rcl
rcr
fmul
cmp
inc
add
or
jl
out
and
add
aas
int3
pop
std
push
mov
ss
inc
jecxz
push
push
push
test
and
jne
xchg
or
or
fldcw
push
les
mov
mov
xor
in
mov
mov
mov
xor
push
push
(bad)
shl
sub
jae
adc
dec
lds
jmp
(bad)
(bad)
xor
pop
or
scas
test
pop
mov
fsubr
jmp
adc
xlat
mov
and
jg
lea
jmp
mov
xchg
nop
shr
add
or
cdq
push
popf
sbb
xchg
adc
push
popf
retf
xchg
cmp
out
or
xchg
daa
in
add
cmp
psubw
popa
nop
(bad)
or
cmps
push
push
dec
ins
popa
js
fs
shr
retf
mov
scas
test
lea
xor
mov
push
aaa
jo
add
sub
sbb
mov
fld
loopne
sbb
xor
je
mov
jmp
mov
icebp
setbe
(bad)
push
mov
adc
pusha
sbb
aaa
pop
xor
out
mov
push
test
clc
adc
mov
xchg
dec
fucomip
in
loop
add
jl
inc
push
leave
inc
(bad)
(bad)
mov
mov
or
out
scas
ins
mov
sub
ja
mov
sub
(bad)
mov
sbb
or
jns
in
into
les
jb
sbb
sbb
xchg
es
movs
mov
dec
jbe
jb
mov
je
pop
mov
daa
xchg
adc
ret
ror
sub
mov
repz
add
mov
movs
cs
xor
lds
enter
sbb
fs
sbb
rcl
xchg
iret
inc
fldenv
mov
pop
jbe
(bad)
ret
mov
out
push
inc
inc
sti
gs
mov
cmps
dec
inc
or
xor
into
popa
stos
push
sbb
add
mov
push
push
sbb
xchg
and
dec
xor
pop
push
and
mov
cmp
mov
hlt
stos
call
lods
std
add
pop
pop
inc
out
jge
imul
lods
ss
in
sbb
in
call
pop
or
mov
cmps
push
pop
jns
or
(bad)
ins
das
in
aas
push
add
xchg
iret
mov
rcr
or
inc
call
(bad)
mov
clc
dec
xor
add
adc
push
xchg
and
leave
scas
or
cwde
into
pop
xor
retf
inc
mov
rol
jne
push
movs
xchg
shr
jne
mov
cmp
pop
cmps
mov
cmp
paddusb
retf
aam
int3
les
pop
mov
fsubr
dec
pop
mov
iret
pop
and
xchg
mov
enter
push
pop
or
adc
retf
dec
call
add
fdivp
cmp
adc
loope
sub
(bad)
cmp
icebp
addr16
out
mov
je
sahf
jg
jnp
sub
xor
and
xchg
push
pop
lds
repz
jmp
mov
addr16
adc
rcl
pop
lock
cld
(bad)
loop
mov
cmps
dec
sub
mov
mov
pop
out
xor
xchg
pusha
ins
xchg
push
mov
frstor
dec
push
dec
dec
int
scas
xchg
push
sub
mov
mov
mov
in
push
jl
popa
fist
imul
scas
lock
pop
mov
sbb
int3
les
mov
loope
aas
(bad)
inc
dec
stc
(bad)
das
fidiv
pop
add
push
mov
test
stos
pop
push
dec
mov
iret
(bad)
rcr
push
jle
fs
stc
push
mov
pop
adc
mov
add
mov
lea
cmp
data16
out
rcr
or
fdiv
shl
jecxz
cmp
jbe
loopne
pop
into
icebp
(bad)
and
jp
inc
ins
addr16
inc
mov
sub
lods
jb
jge
xor
fiadd
push
push
xchg
aas
dec
cmp
movs
or
xchg
push
sbb
mov
inc
xor
call
inc
dec
aam
push
shr
jbe
fistp
xchg
(bad)
xor
das
out
fs
jb
ror
movs
popa
(bad)
xchg
and
jge
outs
sub
and
mov
in
mov
sbb
inc
adc
data16
les
jle
mov
or
std
sub
mov
adc
and
push
sub
adc
cs
hlt
add
stos
stc
pop
mov
addr16
dec
pop
cmps
or
xchg
ret
jo
push
sbb
sub
push
jp
aad
cli
outs
lods
lods
aam
jae
movs
stos
inc
add
dec
sti
repnz
lds
push
push
push
or
cmp
cs
jns
xchg
fs
loop
or
in
retf
xchg
cmp
ret
cmp
in
xchg
in
pop
jne
adc
hlt
dec
out
lock
mov
xor
js
inc
std
push
inc
mov
cmp
out
lods
jl
enter
xchg
pop
xor
inc
xor
mov
mov
gs
jmp
xor
arpl
push
xor
cld
aam
fidivr
ror
out
iret
jl
pop
add
(bad)
lahf
ja
cmp
mov
in
or
xchg
repz
xchg
(bad)
and
lods
call
jnp
idiv
push
rol
pop
aam
sub
popf
aaa
inc
shl
js
inc
sbb
push
test
sbb
sub
adc
(bad)
sti
and
out
cs
inc
add
aas
sbb
ror
xor
inc
dec
test
and
pop
add
cmp
nop
scas
push
addr16
fistp
mov
dec
ror
mov
push
jo
aam
out
cmps
push
int3
ins
repnz
mov
jns
(bad)
xor
pop
cmp
fsubrp
test
xlat
shl
push
rol
pop
shr
and
dec
nop
fsubr
jb
aas
pop
int3
inc
sbb
push
add
stos
lds
lods
loope
cmp
xor
loope
adc
movntps
push
aad
cmp
in
scas
ins
xchg
lods
add
cli
call
and
in
adc
add
push
imul
lock
mov
fsubr
sbb
pop
retf
es
xor
test
mov
xor
dec
cmp
aas
xchg
pop
les
call
aas
push
or
aad
mov
dec
inc
push
sar
std
clc
mov
loope
test
ret
aas
xor
sbb
(bad)
je
and
cmc
inc
and
rcl
cmps
test
imul
out
rcr
mov
out
test
retf
maskmovq
test
shl
int
mov
cmps
or
(bad)
and
in
dec
cld
clc
(bad)
push
popa
mov
stos
and
outs
lods
mov
inc
add
mov
push
sbb
mov
outs
mov
or
(bad)
lea
and
gs
xchg
dec
and
icebp
sbb
inc
sbb
movs
shl
sub
mov
sahf
mov
mov
popf
inc
lods
sub
sbb
cmp
xchg
sbb
(bad)
mov
add
hlt
sbb
shr
inc
jp
mov
and
or
jnp
(bad)
xchg
inc
and
test
mov
and
dec
rcr
sbb
adc
jnp
jno
inc
add
add
scas
push
xchg
adc
push
push
sbb
and
mov
pop
imul
or
movs
pop
jb
int
dec
pop
add
stc
push
outs
xor
mov
sub
jmp
mov
js
xchg
mov
pop
cmps
outs
mov
mov
lods
out
aad
or
mov
jmp
cdq
test
and
scas
sub
out
mul
nop
xor
bound
cmp
lock
int
adc
jge
loopne
and
ds
adc
jge
clc
cmp
ror
adc
adc
or
adc
xchg
(bad)
in
hlt
push
sbb
adc
sbb
(bad)
xchg
(bad)
in
popa
pop
jecxz
mov
stc
ins
repnz
push
cwde
sub
fwait
pop
in
das
call
iret
lock
inc
dec
(bad)
sti
mov
cld
mov
shl
push
ja
imul
out
xchg
sub
out
(bad)
in
or
hlt
pusha
cwde
push
pop
enter
cdq
and
retf
mov
adc
jnp
int
es
cdq
repz
out
mov
pop
nop
dec
dec
mov
mov
mov
into
cmp
test
sahf
stos
xchg
xlat
test
call
test
retf
fadd
jmp
push
leave
inc
es
cmp
fistp
test
test
mov
xor
jg
sub
pop
jmp
lock
or
jae
daa
mov
fsub
ins
jae
add
push
cs
sbb
push
jbe
outs
cwde
cmp
pop
push
or
ret
ds
outs
nop
mov
push
mov
pop
sahf
xlat
(bad)
retf
out
inc
ret
pop
in
push
leave
ins
cmp
xchg
add
imul
xor
lock
add
imul
fiadd
movs
sub
lods
adc
inc
sbb
daa
pushf
mov
mov
hlt
out
sbb
test
xor
mov
push
cli
adc
mov
fild
jbe
ret
test
stos
aam
cli
outs
cmp
push
mov
imul
dec
sub
lahf
movs
jmp
(bad)
call
mov
pop
and
out
mov
inc
iret
int
repz
movs
std
cmps
in
mov
int3
and
adc
and
jmp
push
add
call
or
push
sti
cmp
xor
into
mov
jg
dec
xor
stc
repnz
cmps
std
ss
and
out
pop
popf
lods
sub
cmp
mov
inc
fiadd
mov
mov
mov
int3
popa
sub
push
jb
adc
out
nop
cmps
or
ins
stos
add
jns
scas
(bad)
(bad)
mov
and
mov
(bad)
jnp
xor
push
mov
and
in
out
cld
js
sbb
clc
fisubr
fcomp
lods
out
test
out
inc
adc
add
pop
add
xchg
push
xor
in
loopne
enter
lds
ss
dec
int3
xchg
sar
adc
mul
leave
push
push
xor
adc
in
jecxz
fisubr
adc
fst
fs
mov
sar
and
inc
sub
pop
call
mov
inc
ss
cmps
popf
div
pop
fisttp
cmp
outs
jno
arpl
mov
test
jecxz
jmp
mov
sahf
into
xchg
loope
sub
fcmovb
repz
cwde
sbb
xchg
mov
pop
inc
mov
jecxz
pop
shr
movs
mov
shl
mov
pop
(bad)
cli
out
outs
popa
mov
xchg
fstp
push
(bad)
ficomp
dec
xor
ds
pop
jl
add
popf
cs
dec
push
neg
mov
repz
inc
mov
ins
es
fwait
les
sti
xchg
jns
mov
test
fnsave
push
int
push
mov
daa
jl
ins
adc
mov
and
fadd
loopne
inc
push
mov
pop
sub
push
rcl
mov
and
inc
in
ins
mov
mov
pop
cwde
mov
les
repz
popf
test
mov
or
jle
stos
mov
mov
pop
xchg
fstp
cmp
jp
ror
jo
mov
push
outs
in
dec
jmp
or
and
xchg
mov
fistp
out
and
xor
adc
dec
pop
xchg
jae
sbb
xor
(bad)
pop
aaa
xor
or
or
jbe
mov
push
aam
test
lods
enter
cmp
mov
hlt
jnp
mov
fmulp
fistp
mov
pop
lea
fbld
in
loope
clc
jno
jne
enter
std
jb
out
retf
cdq
in
std
xor
or
dec
push
mov
inc
and
in
sahf
mov
lods
jp
call
fsubr
lahf
push
rcr
mov
ret
push
mov
mov
in
jl
or
mov
(bad)
fdivrp
mov
stc
data16
pop
add
cmp
sub
ja
or
mov
inc
or
bound
cli
jmp
test
xchg
add
movs
mov
and
fidiv
call
fwait
imul
and
and
fldcw
shr
ds
sub
retf
pop
pop
xchg
(bad)
int3
mov
retf
sbb
or
push
and
movs
(bad)
add
dec
loope
(bad)
pop
mov
clc
inc
xchg
rol
ror
aaa
dec
cmovle
adc
cmc
cmp
call
jg
in
popa
jnp
add
cmps
sbb
scas
mov
fneni(8087
fidiv
out
xlat
inc
in
fcom
popa
ss
pusha
addr16
mov
and
scas
add
xchg
mov
cmp
and
xor
push
add
arpl
ins
movs
test
mov
andnps
mov
daa
movs
test
xchg
add
js
lods
xchg
in
xor
cmp
mov
push
loopne
mov
xchg
(bad)
jmp
mov
push
lds
popa
lahf
push
push
in
mov
mov
and
push
jg
sbb
mov
xor
xchg
aam
stos
imul
mov
es
dec
std
push
mov
jmp
xchg
or
call
lahf
repz
or
mov
icebp
fmul
fs
xlat
clc
cld
test
stos
adc
jecxz
leave
jmp
jmp
rcr
repnz
push
mov
cs
outs
xchg
mov
push
lahf
dec
(bad)
idiv
sub
inc
vpshlw
sbb
ror
jns
or
xor
adc
into
fstp
adc
fnsave
arpl
and
arpl
add
call
xchg
and
(bad)
std
push
and
shl
arpl
(bad)
pop
mov
push
popf
fild
repz
clc
or
outs
or
(bad)
pop
in
test
lahf
push
sbb
inc
xlat
mov
pop
xor
test
xor
je
sub
push
je
test
out
xchg
add
add
pop
mov
aam
inc
dec
daa
dec
xor
loopne
ins
out
sbb
lea
pop
es
mov
sbb
sbb
test
rcl
ja
push
or
pusha
and
xchg
fbstp
shr
sub
movs
add
sub
inc
icebp
pop
or
int
jne
test
scas
lea
ins
xchg
xchg
push
loop
mov
add
jle
or
(bad)
add
fdiv
mov
dec
push
sar
mov
sbb
jl
cmc
push
loop
dec
sar
mov
and
xor
gs
add
cli
inc
mov
and
in
cld
sar
rcr
xchg
pop
push
mov
xchg
inc
outs
ret
cmp
js
arpl
push
cmps
pop
dec
add
addr16
mov
mov
pop
test
pop
clc
repnz
xchg
xchg
daa
add
pop
jbe
les
cmp
movs
add
jb
xchg
div
out
jecxz
mov
dec
shl
add
mov
cmp
pop
inc
inc
(bad)
(bad)
ins
shr
retf
dec
push
mov
or
cwde
mov
call
push
je
adc
cmp
xor
jb
(bad)
fnstcw
xchg
sub
retf
or
sub
mov
fs
cmp
pop
(bad)
aad
call
mov
mov
icebp
ss
adc
sub
xchg
inc
idiv
inc
rol
sbb
xchg
daa
ins
mov
nop
xchg
leave
add
inc
in
pop
int
test
cmp
inc
mov
int3
and
mov
leave
dec
(bad)
fmul
icebp
in
(bad)
leave
lahf
(bad)
jno
shl
add
dec
mov
push
mov
and
inc
fsubr
sbb
fs
movs
dec
cmp
push
adc
jecxz
add
rcr
xchg
jae
imul
cli
frstor
mov
mov
push
cmp
cmp
pop
add
adc
cmps
xor
push
pop
push
loop
aas
and
pop
retf
test
les
adc
sbb
and
inc
mov
ret
sbb
add
push
adc
dec
mul
and
push
sbb
mov
xchg
sub
add
inc
jns
mov
mov
push
std
ret
jnp
cld
adc
push
not
loop
pop
push
and
pushf
sub
adc
jp
push
jbe
mov
adc
aaa
xchg
cmps
arpl
or
test
xor
mov
mov
je
lea
jg
mov
int
xchg
cmc
pushf
push
mov
jl
dec
add
sar
push
popa
mov
fwait
jp
fistp
lahf
imul
cwde
cs
loop
push
mov
push
pop
cmp
xor
imul
add
ins
js
pop
mov
add
mov
fs
popf
lea
adc
xchg
jae
add
inc
cmp
xchg
lods
sar
shl
jne
cld
or
pop
clc
pop
dec
jne
xchg
repnz
pop
dec
popa
nop
test
out
sub
push
popa
dec
push
lds
stos
jo
imul
cld
stos
jecxz
pop
je
das
pop
cmps
(bad)
pop
xchg
mov
pushf
in
stos
or
inc
cs
sbb
jge
xchg
arpl
push
adc
jno
js
dec
jbe
cmp
mov
sar
ret
ds
jnp
in
jns
(bad)
pop
sbb
mov
inc
addr16
dec
xor
push
or
and
xchg
cmps
out
vorpd
enter
mov
xchg
mov
jb
inc
loop
cmp
and
je
lock
cmp
sbb
ins
shl
ins
iret
arpl
xchg
ret
jne
cmps
xchg
add
jmp
or
stc
mov
cmps
sbb
mov
fadd
inc
sub
imul
test
inc
out
repz
or
ror
(bad)
(bad)
jo
mov
mov
arpl
lahf
sahf
dec
sar
iret
push
es
add
out
movs
test
pop
and
push
icebp
mov
iret
jo
mov
lock
sbb
dec
addr16
xor
aaa
or
dec
or
xor
iret
or
adc
int
mov
sti
test
ficomp
cmp
neg
dec
movs
ins
mov
in
stos
imul
loopne
imul
xlat
fwait
lods
fld
int
sahf
adc
out
pushf
popa
mov
out
(bad)
shl
outs
js
pushf
mov
sbb
cwde
jle
pop
mov
outs
stos
sbb
lods
xor
mov
les
je
push
pop
push
xor
pop
or
dec
mov
pop
mov
lods
pop
mov
sahf
js
sar
jbe
cmp
xor
dec
movs
mov
push
sbb
and
sub
int
outs
xor
sbb
push
xchg
pusha
jb
inc
sbb
es
fstp
adc
push
(bad)
jae
rcr
dec
nop
sahf
push
aad
jmp
push
pop
cwde
xchg
out
add
dec
xor
xor
(bad)
cmps
test
mov
test
iret
movs
jl
mov
jp
pop
stc
sub
jmp
pop
stos
and
jmp
call
lock
(bad)
add
fnstsw
loope
xor
jno
shl
sub
aam
xlat
mov
mov
sub
push
mov
pop
mov
jmp
sub
dec
push
jp
cmp
(bad)
push
xor
dec
jnp
pop
xchg
jnp
or
enter
out
clc
xlat
shl
push
and
push
push
sub
mov
inc
mov
push
adc
cmps
pop
enter
push
and
mov
inc
test
inc
cdq
jmp
xchg
push
ja
push
inc
jge
jmp
sbb
and
sub
fdivr
xchg
dec
mov
ror
add
xchg
repz
(bad)
aad
jmp
clc
out
dec
mov
jg
cmp
call
pop
cmp
jl
les
push
dec
movs
pop
out
or
sub
in
aas
cli
inc
test
out
scas
pop
sub
adc
xor
imul
xor
hlt
movs
loop
jmp
fcmovu
adc
fbstp
mov
push
pop
fild
or
in
in
add
stos
xchg
lahf
cmps
stos
movs
push
mov
aas
das
in
xchg
and
je
jae
xchg
or
inc
xchg
jg
lds
cli
mov
pusha
mov
inc
enter
lahf
loop
cmp
inc
and
pop
inc
add
or
jne
and
cmp
adc
xor
pop
add
cdq
dec
fidivr
adc
sbb
ins
jbe
pop
xchg
sbb
test
inc
outs
out
mov
xor
jl
std
outs
enter
adc
push
or
stc
stos
pop
shl
fnstsw
sti
test
addr16
xor
dec
mov
push
xor
mov
fild
fnsave
or
xor
retf
ja
push
je
fs
adc
push
int3
test
mov
rcr
call
imul
or
cli
fild
shl
ja
pop
xchg
lods
add
mov
mov
int
mov
mov
cld
(bad)
jae
inc
xchg
xchg
xchg
xchg
dec
and
and
fs
sbb
add
cmp
leave
iret
aam
mov
xchg
adc
imul
xor
and
ss
or
mov
test
in
pop
ret
pop
jnp
rol
cld
mov
mov
aam
out
popa
sahf
or
js
or
addr16
movs
aad
adc
mov
dec
enter
dec
xchg
push
mov
mov
pop
out
lods
or
fcmovnb
jecxz
push
repnz
shr
test
mov
and
sub
cmp
cmp
sub
mov
ror
fstp
(bad)
lods
mov
in
inc
or
and
add
jne
jnp
dec
add
pop
mov
pop
dec
inc
(bad)
push
cmps
sahf
in
xor
xchg
add
adc
jno
mov
cdq
es
jmp
xor
test
jnp
fmul
pop
pop
test
retf
push
xchg
adc
xchg
cld
jmp
xor
mov
shr
sub
psubusw
inc
add
push
add
retf
lods
dec
int
loop
mov
(bad)
mov
cli
stc
(bad)
loope
rol
dec
xchg
or
mov
mul
or
and
mov
sub
in
push
scas
imul
push
xlat
add
sahf
add
pop
mov
lock
jae
add
push
(bad)
(bad)
pusha
les
xchg
cli
push
push
mov
jnp
ficom
jns
xchg
mov
adc
adc
sbb
aas
or
ficomp
pop
ja
pop
fadd
jg
add
repz
(bad)
adc
(bad)
stos
xchg
fwait
mov
mov
adc
icebp
loopne
lods
fnstcw
xor
mov
lock
push
sar
cmp
repz
mov
mov
push
dec
dec
adc
lea
add
add
jo
dec
push
scas
mov
dec
xor
mul
and
mov
cmp
inc
repz
aas
jae
pop
mov
sti
push
ret
int3
sub
iret
test
mov
sub
loope
rol
imul
pop
out
push
lods
push
adc
sub
retf
in
xchg
push
out
push
push
shr
pushf
aad
pop
pop
cmp
lahf
leave
call
ror
sti
mov
fs
jl
push
(bad)
sar
outs
(bad)
sub
xchg
jmp
scas
aam
add
push
inc
jmp
sub
into
dec
ins
xor
mov
sub
fld
inc
inc
jmp
leave
rcl
in
movs
sbb
jns
jmp
mov
nop
mov
fnsave
push
sbb
test
mov
mov
js
inc
cmc
in
retf
and
mov
je
jl
test
icebp
xchg
movs
mov
imul
pop
ror
or
ja
fdivr
mov
dec
push
inc
lea
sub
jg
pop
(bad)
xchg
adc
xchg
jns
gs
inc
adc
pop
jnp
push
xor
lea
jle
loope
add
aad
sbb
dec
mov
jo
dec
add
mov
fimul
bound
rol
ins
outs
jmp
adc
sub
or
sbb
add
jmp
nop
add
push
pop
xchg
sub
sub
or
add
mov
ds
lahf
adc
adc
jnp
fisttp
mov
(bad)
ja
(bad)
icebp
fsubr
inc
mov
lahf
leave
shr
mov
repz
aad
ret
ret
dec
aaa
ins
(bad)
mov
sbb
inc
in
jmp
mov
jle
mov
iret
cmp
mov
jb
fbstp
xchg
mov
(bad)
jmp
sub
dec
jmp
popa
dec
adc
call
xor
ficomp
mov
lock
sbb
aaa
in
shl
xchg
sub
aad
xchg
ret
add
loopne
in
jb
stc
scas
mov
hlt
fistp
std
hlt
neg
enter
sbb
pop
sbb
or
loope
jge
loopne
icebp
(bad)
lods
xor
enter
and
mov
adc
or
loop
push
mov
push
into
in
stos
lods
pop
xchg
push
arpl
mov
icebp
sbb
cld
adc
mov
adc
cmc
sti
std
sub
movs
or
test
fild
out
test
test
mov
mov
retf
loopne
mov
bound
sbb
sub
pop
dec
gs
inc
cli
or
mov
test
jmp
push
inc
popf
sbb
(bad)
icebp
jnp
xor
push
sub
in
ret
ds
ret
fcmovnbe
bound
jno
lods
movs
shl
fmul
(bad)
jno
add
adc
mov
or
repnz
popa
fwait
pop
and
mov
outs
and
mov
fcomp
or
sbb
cmp
xchg
push
sub
xor
push
fisttp
push
dec
dec
mov
adc
call
xchg
repz
out
jmp
xchg
jge
cld
mov
mov
add
hlt
test
(bad)
cmc
paddd
leave
and
dec
jecxz
jmp
and
jnp
xor
cmc
das
sbb
jge
or
mov
xor
xor
mov
mul
or
dec
lods
adc
mov
mov
(bad)
cli
jl
adc
fild
jle
jmp
pop
das
inc
dec
xchg
jl
addr16
jg
add
cmp
sar
in
stc
(bad)
push
jmp
sbb
aas
or
repz
jmp
mov
scas
mov
rcr
stc
lods
call
mov
cmp
test
lahf
cmp
or
xor
inc
gs
adc
or
(bad)
neg
fdivrp
rol
cmps
int3
jmp
pop
jae
ja
cmp
stos
loop
dec
dec
icebp
pop
push
dec
xchg
mov
jge
xchg
add
test
mov
das
push
xchg
cpuid
cmp
cdq
mov
jbe
inc
mov
cmp
test
push
cdq
ds
jmp
mov
cmp
sub
inc
sub
jbe
pop
repz
sub
or
push
push
jle
(bad)
jl
sub
push
retf
in
adc
clts
iret
or
sub
push
into
xchg
in
sbb
pusha
adc
mov
jle
jmp
data16
out
cmc
sub
dec
pop
int3
mov
xlat
xor
sbb
jb
and
sti
rcr
lods
adc
adc
clc
movs
cmp
push
outs
inc
pop
dec
dec
lea
movs
mov
xchg
outs
add
pop
mov
pushf
sbb
test
loopne
sub
loopne
mov
and
aaa
leave
pop
lea
clc
push
adc
scas
pop
fisub
test
sbb
dec
sub
je
push
jae
xchg
jmp
push
inc
mov
add
jae
in
jg
dec
addr16
addr16
into
cmps
inc
xchg
std
mov
sbb
fiadd
ror
or
sub
jecxz
inc
mov
sahf
hlt
test
push
int
lahf
cmp
push
sub
daa
mov
sbb
push
lock
cmps
mov
cmp
test
ret
int3
(bad)
sti
cmp
outs
add
(bad)
das
cmps
lods
scas
lods
in
outs
es
sti
xor
adc
fdiv
pop
and
nop
js
hlt
mov
lock
out
jbe
push
push
jo
daa
jl
inc
loopne
test
inc
sbb
mov
and
std
mov
jnp
push
sbb
ss
mov
mov
fiadd
dec
cmp
push
xchg
mov
dec
aad
leave
nop
cmp
test
pop
stc
pop
sub
push
popa
lods
in
mov
pop
stos
scas
ja
arpl
sahf
add
jae
and
cmp
push
cmc
pop
mov
test
and
(bad)
leave
ins
adc
dec
ret
int3
mov
xchg
mov
inc
or
dec
retf
jp
adc
(bad)
jnp
jbe
fist
pushf
sbb
xchg
xor
mov
cdq
test
leave
dec
arpl
mov
ror
dec
pop
loopne
mov
push
out
clc
xor
sub
ss
mov
mov
loope
bound
and
sub
idiv
sbb
aas
out
(bad)
hlt
out
call
in
call
or
daa
pop
pop
gs
dec
dec
lea
ret
inc
mov
mov
in
out
std
stos
nop
inc
jle
mov
mov
jmp
(bad)
jmp
shl
dec
fist
dec
or
push
push
sub
hlt
add
icebp
push
dec
pop
xor
fcomi
cdq
pusha
in
adc
cmps
pop
in
movs
lock
cld
outs
mov
push
xchg
lock
aam
pop
or
and
out
(bad)
enter
inc
leave
sbb
popf
adc
push
cld
inc
mov
rcl
or
adc
fnstcw
xchg
and
cmp
xor
ss
push
xchg
sti
punpckldq
or
and
arpl
ds
cmp
out
mov
hlt
xchg
or
adc
adc
xor
popa
ja
push
out
pop
cld
fisub
jp
shr
dec
sar
es
mov
setl
aam
and
lahf
jge
and
xchg
je
inc
loop
mov
dec
scas
sahf
sbb
daa
les
pop
rcl
dec
inc
jno
in
lods
and
loope
mov
jmp
mov
mov
(bad)
jecxz
leave
xor
in
retf
sbb
add
cli
push
dec
shl
idiv
sbb
push
cmps
jo
mov
pop
cmp
cmps
mov
mov
stos
xor
inc
inc
stos
jmp
push
and
out
xor
out
adc
push
mov
gs
add
mov
ficomp
push
lea
imul
test
mov
and
pop
xchg
and
xchg
mov
(bad)
retf
shl
push
mul
stos
fsubr
mov
or
movs
mov
push
dec
jno
hlt
(bad)
inc
fadd
popa
jg
fs
dec
jp
sti
sbb
xor
iret
pop
mov
push
movnti
leave
ret
push
cli
fs
inc
out
stos
pop
test
aas
test
pushf
sbb
das
lods
dec
dec
cdq
cmp
sub
pop
in
lea
in
fidiv
dec
cli
std
in
adc
push
inc
sbb
dec
mov
(bad)
fldcw
repnz
inc
cli
dec
push
out
add
fsub
sbb
sbb
lock
test
mov
sbb
inc
jnp
(bad)
pop
loopne
cmp
retf
das
cmp
repz
or
push
aas
daa
xchg
hlt
add
adc
(bad)
xor
add
inc
pop
rcl
cwde
popf
scas
shl
in
sub
shr
push
xchg
jecxz
fsub
pop
dec
cld
adc
mov
add
add
jg
fs
xchg
out
and
jno
jle
jbe
xor
out
and
inc
mov
ret
imul
cdq
xchg
dec
gs
xchg
nop
shrd
test
cmps
or
mov
out
push
pop
adc
and
lods
les
mov
popf
out
xchg
push
or
ror
push
test
ins
push
push
dec
and
dec
scas
lock
mov
push
pop
pop
xchg
test
enter
pop
mov
pop
stc
dec
cmp
sar
push
mov
in
dec
xor
push
iret
adc
cmps
push
jno
xlat
add
mov
push
adc
ds
add
movs
call
and
adc
sbb
fcmovne
push
jge
hlt
hlt
in
push
fwait
movs
mov
pop
mov
int3
pop
paddusw
into
fnstenv
push
ja
fnstenv
add
in
pop
cmp
mov
xchg
in
sub
outs
mov
loop
iret
popa
fsubr
outs
sbb
xchg
sti
in
xor
out
adc
fwait
mov
xlat
cmps
call
fisub
xor
and
jecxz
(bad)
cmps
sar
fist
sub
das
test
les
int3
jnp
jge
into
sti
test
in
and
shr
ftst
das
cmp
jecxz
pop
xchg
or
pop
or
or
sub
jl
sub
sar
and
push
inc
fiadd
stc
xchg
hlt
xchg
jnp
movs
pop
push
jp
ss
or
ss
sbb
mov
stc
in
(bad)
test
test
pop
mov
jns
inc
cmp
sahf
pop
lahf
push
cld
int3
ror
mov
cmp
mov
adc
pop
push
and
jns
push
xor
lahf
or
pop
xchg
xor
movs
das
ror
xchg
xchg
stc
push
sbb
stos
frndint
or
daa
pop
data16
(bad)
lods
cs
push
das
ja
mov
inc
inc
mov
enter
lods
mov
adc
(bad)
cwde
inc
scas
xchg
mov
sbb
arpl
sbb
pop
xchg
scas
int
jne
add
and
xchg
daa
(bad)
enter
es
xor
cli
movs
pop
inc
sbb
repnz
mov
test
aaa
lds
cmc
sub
ret
(bad)
mov
mov
ins
and
lods
ss
(bad)
pop
add
ror
mov
sbb
sub
xchg
pop
retf
or
mov
leave
sbb
enter
in
pop
(bad)
jno
mov
mov
push
imul
mov
mul
mov
stos
mov
bound
das
inc
pop
mov
lds
sti
pop
sti
xlat
test
adc
jbe
nop
mov
enter
inc
add
loopne
bound
ins
inc
pop
(bad)
repnz
pushf
adc
adc
bound
push
aad
mov
dec
mov
sub
(bad)
xchg
push
fsub
dec
js
mov
pushf
push
xchg
aam
pop
jecxz
dec
rcl
fidiv
sbb
jl
adc
pushf
in
cmps
mov
pusha
arpl
addr16
jne
sbb
loopne
inc
stc
push
mov
test
dec
dec
stos
sub
test
cmp
xor
inc
outs
inc
jbe
adc
and
pop
(bad)
jae
out
retf
jl
xchg
sub
xchg
add
mov
not
or
dec
je
fs
mov
icebp
movs
retf
jp
jae
push
pop
sbb
test
cmp
cmp
jns
dec
dec
aad
in
retw
mov
nop
adc
adc
xchg
js
mov
rcl
push
mov
stos
int
mov
imul
test
jb
les
push
jle
mov
leave
ins
iret
adc
xchg
ja
int3
xchg
jae
movs
jmp
scas
jecxz
fisub
add
lds
jno
push
sub
mov
(bad)
loop
xchg
add
lea
aam
out
mov
arpl
mov
inc
imul
iret
xchg
mov
(bad)
jge
add
jo
mov
jns
aad
mov
add
hlt
loopne
jge
in
cmp
int3
outs
add
aad
pop
fsub
jl
push
in
cs
push
mov
(bad)
out
test
mov
loop
inc
adc
adc
pop
xchg
jae
test
mov
sbb
js
jmp
mov
lods
int3
push
ins
and
mov
xlat
jb
cdq
(bad)
dec
and
and
cmc
dec
ret
jg
dec
push
test
test
jae
cmp
push
lods
ret
adc
sbb
or
xor
icebp
clc
into
shl
ja
add
ret
jb
mov
out
icebp
mov
in
push
dec
push
cli
pop
xchg
imul
iret
mov
jp
mov
ret
cmp
inc
in
mov
mov
mov
mov
rcl
adc
(bad)
shr
jo
jg
(bad)
call
call
mov
xor
inc
xchg
jp
inc
aad
xor
xor
mov
les
imul
inc
xchg
int3
imul
pushf
mov
mov
ret
adc
inc
inc
aaa
mov
mov
or
mov
out
js
call
aaa
xchg
loopne
and
stos
leave
push
sub
pop
je
pop
sub
xor
jecxz
jle
cmc
and
stos
out
mov
les
or
pusha
stos
and
xchg
cli
and
(bad)
loopne
dec
cmps
enter
inc
mov
xchg
push
mov
sbb
enter
jne
vpsrad
mov
es
iret
rcr
pop
jmp
ret
and
jo
sub
xchg
and
lea
mov
or
inc
inc
out
outs
fiadd
jl
dec
xchg
xor
std
sahf
dec
push
fidivr
add
sub
dec
jae
test
sbb
cmp
inc
cs
add
push
shl
xchg
lahf
repz
sti
js
sbb
in
push
in
fild
pop
cmps
sub
jmp
pop
sub
popa
pop
or
test
retf
movs
clc
lods
scas
ss
jmp
xchg
sbb
push
rol
rep
fild
pop
xchg
stos
fstp
scas
fsubr
test
retf
sbb
gs
and
xor
(bad)
xor
mov
lods
in
pop
and
rcr
push
imul
adc
xor
or
out
icebp
std
xlat
sub
xor
push
cli
js
xor
pushf
or
pop
lea
data16
lods
push
add
cmp
inc
push
in
cmp
je
(bad)
adc
sub
(bad)
push
jmp
xor
dec
call
(bad)
aad
dec
mov
adc
mov
add
xor
add
iret
inc
mov
add
aaa
inc
enter
xor
call
sub
in
cmps
jmp
mov
out
es
fisub
pop
add
inc
movs
sbb
sub
hlt
sbb
popf
(bad)
sub
push
jns
mov
loopne
in
addr16
popa
push
fnstenv
scas
pop
push
add
clc
(bad)
test
aam
mov
(bad)
sar
mov
cli
or
cdq
jmp
push
sbb
repz
xchg
mov
push
(bad)
adc
xor
retf
dec
jp
mov
sbb
push
les
add
mov
rcl
mov
stc
sbb
sub
dec
mul
fimul
lods
add
mov
mov
add
or
and
xchg
test
mov
enter
icebp
jecxz
jno
adc
xor
imul
(bad)
add
push
and
addr16
sbb
pop
in
pop
mov
(bad)
(bad)
lods
jle
ret
out
out
add
daa
sub
pusha
jae
or
mov
cmp
mov
xor
fimul
fstp
cmps
pop
cwde
cdq
inc
outs
aaa
cmp
cdq
or
dec
add
pushf
or
sbb
sub
data16
or
sub
add
or
dec
sbb
push
pop
leave
and
pop
sub
test
xchg
jmp
mov
pop
mov
push
jb
cli
mov
imul
adc
pushf
xchg
push
dec
pop
lods
leave
mov
or
cmps
cmp
dec
xor
or
(bad)
dec
pop
(bad)
aaa
mov
jb
xchg
or
mov
jmp
sub
xor
mov
mov
inc
(bad)
pop
mov
aas
aaa
test
mov
je
cmp
push
das
mov
out
mov
xor
xor
or
and
xchg
jbe
or
cld
int3
xlat
adc
jns
scas
std
pop
ds
dec
sbb
test
xor
mov
add
jp
and
jp
mov
and
cmp
and
mov
inc
sahf
sub
sbb
ja
sub
lock
add
ja
das
(bad)
pop
aam
cmp
movs
push
xor
push
retf
(bad)
(bad)
adc
fidivr
(bad)
and
push
scas
data16
xlat
sti
adc
test
xor
push
jmp
and
sub
iret
ins
in
and
cld
aas
adc
add
pop
mov
int3
addr16
loop
test
lods
cmp
xchg
or
sbb
and
gs
and
jg
push
mov
daa
popaw
int3
push
inc
push
or
std
cld
mov
out
jmp
test
mov
pop
jmp
push
or
push
xchg
arpl
fs
xchg
mov
cwde
cmp
cmp
or
je
push
outs
arpl
sub
in
push
push
push
stos
xchg
ins
fstp
aaa
ret
xchg
xchg
and
jno
retf
mov
push
outs
mov
pop
pop
repz
sub
push
xor
nop
jae
stos
push
jnp
sub
(bad)
xor
imul
and
aam
dec
fnstsw
ss
test
loop
daa
pop
mov
icebp
push
call
fwait
pop
rcl
and
sbb
mov
(bad)
cs
xor
dec
ss
inc
xlat
jbe
pop
cmps
jmp
aaa
mov
add
push
xor
mov
sub
jb
push
jmp
jnp
mov
jmp
inc
push
icebp
mov
loope
test
mov
jg
add
sahf
std
xlat
mov
pop
ds
pop
cdq
imul
shl
push
imul
ins
xchg
fld
mov
mov
cwde
cmp
imul
cmp
in
mov
pop
outs
or
iret
sub
mov
jl
xchg
sbb
inc
fild
(bad)
arpl
out
pushf
xchg
(bad)
jg
out
data16
sbb
fucom
push
xchg
pop
in
iret
dec
mov
pop
inc
mov
scas
jl
xchg
fwait
mov
mov
and
mov
rcr
shr
pushf
ds
jmp
adc
cld
adc
fist
test
mov
dec
imul
cdq
test
out
or
stc
mov
cli
out
mov
enter
cwde
stos
call
mov
ja
es
mov
cli
push
and
addr16
repnz
sbb
cmp
xor
(bad)
ror
je
(bad)
dec
aad
adc
mov
and
sub
and
jle
and
and
xor
lea
pop
int
add
daa
sub
dec
mov
ins
jo
adc
push
clc
cmp
popa
xchg
rol
and
test
jmp
imul
mov
ret
xlat
adc
pop
jbe
xchg
call
pop
xlat
mov
push
or
and
push
cmps
pop
fwait
jns
pushf
mov
xor
xor
mov
ja
rcr
xor
mov
je
in
pop
iret
out
lea
jnp
in
or
loop
lahf
shr
inc
xchg
in
dec
mov
adc
jg
mov
ror
xchg
inc
push
sbb
pop
fbld
mov
mov
pop
inc
mov
je
inc
mov
inc
hlt
dec
scas
addr16
mov
cmp
sti
jle
push
js
xchg
push
es
fs
cli
cmps
iret
dec
adc
stos
pushf
mov
push
jne
sbb
xchg
sbb
pop
sahf
add
sbb
loopne
cmp
gs
jae
adc
inc
jle
mov
mov
dec
mov
jp
scas
xchg
sti
push
xlat
sbb
clc
add
rcl
push
or
inc
or
ds
or
mov
test
stos
retf
jp
jp
mov
jmp
(bad)
shl
dec
xchg
add
(bad)
sbb
ins
pop
hlt
ss
jno
jo
inc
sbb
jbe
dec
push
lea
sub
cmc
mov
inc
not
dec
sub
addr16
sbb
adc
test
imul
sub
mov
jne
sub
ins
mov
mov
or
dec
sub
lods
sub
jg
cmp
icebp
mov
enter
popf
mov
cmp
imul
inc
shr
mov
popf
jae
mov
pop
pop
jge
cmp
push
movs
ret
jne
mov
shl
adc
jg
pop
push
sbb
daa
jo
retf
mov
arpl
adc
imul
xchg
xor
sbb
leave
fwait
pop
popa
in
fidiv
xor
pop
cmp
mov
jl
mov
add
aam
jecxz
mov
arpl
mov
and
imul
sbb
dec
pop
inc
(bad)
push
cdq
mov
or
lea
and
fwait
mov
js
fld
jbe
inc
popa
jns
enter
dec
inc
in
out
sahf
sbb
adc
mov
cdq
das
adc
pop
add
jecxz
inc
jae
and
call
jmp
mov
pop
mov
mov
in
ins
(bad)
mov
ret
enter
ins
into
sub
stc
mov
cwde
arpl
and
mov
add
sub
mov
lods
movs
popa
popa
cmp
or
xchg
out
adc
jp
push
push
fwait
lods
or
dec
in
ficom
outs
or
push
mov
sub
mov
arpl
movs
cli
xor
xchg
data16
jne
inc
cwde
push
xor
cmc
or
xchg
lods
sbb
add
mov
repnz
pop
sbb
(bad)
cld
fld
(bad)
fsubr
stos
mov
in
jbe
js
cld
das
ret
sbb
dec
push
push
push
stos
and
jbe
dec
jl
cmp
fwait
call
outs
neg
pop
jp
xchg
(bad)
pop
in
loope
inc
or
shl
in
pop
xor
xor
xrelease
sub
sbb
aam
xor
fbstp
popf
mov
adc
add
dec
or
test
cmc
scas
or
xchg
(bad)
cli
or
and
sbb
xchg
stc
lds
sub
mov
pop
retf
mov
push
pop
mov
mov
add
pop
jmp
jle
fcom
push
fst
out
test
fnstenv
es
bound
jecxz
sub
cdq
popa
or
dec
inc
mov
pop
or
pop
lds
(bad)
or
add
xor
repnz
in
add
loopne
push
cmc
dec
and
addr16
pop
inc
sbb
inc
test
mov
fs
mov
js
inc
dec
lods
pop
lods
push
stos
jb
inc
cmp
pop
lahf
and
xor
not
and
adc
int
sahf
fmul
lahf
push
out
js
push
sti
fdivr
out
lods
imul
and
ja
or
cmp
mov
in
fild
adc
(bad)
sbb
fucomp
test
rol
push
std
stos
mov
mov
dec
cld
jae
fst
sbb
xlat
push
push
or
jno
icebp
or
add
mov
pop
mov
push
nop
mov
nop
cmp
lahf
mov
int3
aaa
pop
and
jbe
push
cmp
fsub
xchg
jns
test
fnstsw
jnp
lods
dec
jl
sbb
dec
das
neg
popa
cmp
xlat
cwde
test
imul
xchg
sahf
jnp
and
es
xor
push
test
mov
(bad)
adc
sub
pop
cli
daa
rol
jnp
or
mov
test
dec
aad
pop
aad
mov
xor
add
mov
jmp
jb
setle
mov
dec
dec
sti
mov
xchg
sbb
mov
cmp
fisttp
jne
fsub
cwde
jmp
pop
cdq
fwait
mov
hlt
pop
push
out
sub
jmp
push
retf
mov
std
nop
(bad)
repnz
repnz
mov
or
das
movs
test
movs
and
test
xlat
imul
sub
jbe
xlat
sub
sub
pushf
aas
adc
sar
outs
push
sbb
mov
mov
jbe
int3
sbb
in
sub
loopne
fsub
das
ins
dec
repz
inc
call
adc
mov
jno
jge
in
mov
mov
xchg
div
mov
retf
add
data16
aam
mov
div
pop
rcr
and
push
aas
daa
sbb
fiadd
jno
pusha
pop
(bad)
mov
jns
test
inc
xor
push
in
in
iret
adc
mov
or
adc
sub
mul
jae
movs
mov
jmp
loop
loopne
stos
sbb
xor
jle
mov
hlt
mov
mov
bound
mov
lahf
repz
dec
lds
mov
xor
and
(bad)
push
mov
mov
dec
jnp
mov
test
xchg
loope
mov
scas
inc
sbb
adc
and
jae
outs
repz
shl
mov
xchg
rol
mov
mov
(bad)
stc
ins
fild
pushf
dec
inc
and
and
sbb
xchg
test
mov
outs
cld
xchg
mov
push
fs
cmp
mov
sbb
test
gs
dec
add
retf
jo
adc
or
adc
jl
aaa
rcr
jne
arpl
ins
cmp
or
inc
or
dec
mov
add
inc
sar
outs
jo
cmps
sbb
add
push
(bad)
repz
adc
(bad)
jecxz
leave
mov
aad
(bad)
jle
sbb
test
dec
add
dec
icebp
mov
sahf
imul
loope
repz
cmp
ss
mov
pop
pop
lahf
xor
mov
pop
cmp
es
fstp
jg
push
mov
push
loopne
(bad)
int3
xor
cwde
dec
add
sub
jnp
mov
(bad)
mov
xlat
in
sti
or
mov
mov
or
in
xchg
icebp
data16
in
dec
mov
jl
je
out
inc
pop
mov
sub
sbb
inc
sub
dec
scas
icebp
add
in
dec
sbb
pop
repnz
dec
xor
mov
push
push
jmp
xchg
sub
mov
leave
nop
pop
xor
test
(bad)
dec
and
stc
cwde
outs
mov
sub
mov
mov
inc
daa
out
vpsraw
(bad)
(bad)
test
pop
or
stos
rol
leave
mov
jbe
xchg
pop
rdtsc
inc
and
sub
out
leave
add
iret
outs
dec
pop
xchg
clc
cmp
mov
call
data16
or
(bad)
popa
sub
cwde
repnz
sbb
or
push
mov
rol
mov
jnp
shl
(bad)
popa
stos
xor
mov
nop
repz
daa
retf
add
jge
push
popa
cmp
cli
out
mov
jmp
pop
sbb
sub
std
and
sbb
aad
imul
and
test
std
ja
xor
loopne
fild
cmp
add
and
ret
mov
sbb
mov
xchg
clc
int
aaa
and
push
inc
ror
pop
push
cmp
xor
push
cmp
sahf
(bad)
push
push
hlt
fs
mov
mov
out
sbb
pop
and
repz
cmps
xchg
xchg
fnstcw
add
xor
stc
adc
pop
cmp
lods
add
mov
mov
mov
xor
cli
movs
in
push
test
test
push
xor
xor
repz
cmp
cmp
mov
mov
push
out
xor
add
xchg
loop
mov
jp
int3
or
pop
dec
nop
sub
dec
(bad)
xlat
push
inc
in
push
fstp
lahf
and
push
and
cld
push
ret
outs
push
pop
leave
mov
cmp
das
inc
sbb
inc
and
or
mov
cli
sbb
mov
jnp
mov
out
jecxz
das
ja
les
mov
or
xor
and
cwde
outs
ror
fldenv
pop
push
div
cmps
or
sbb
pop
ja
enter
sub
inc
cwde
outs
in
push
out
stos
ins
fwait
xchg
sub
je
(bad)
mov
push
xchg
sub
push
pop
xor
cmp
jle
cwde
sub
dec
and
fadd
jge
xor
pushf
ja
push
bound
pop
dec
cmp
mov
mov
sbb
or
cmp
or
(bad)
outs
loop
adc
loopne
scas
fisttp
or
adc
jl
xor
arpl
outs
je
lahf
xchg
es
shr
nop
dec
cmps
mov
jbe
test
fdiv
jmp
jno
rcr
xchg
mov
xchg
test
stos
std
mov
jg
std
add
in
pop
inc
adc
out
and
clc
cld
(bad)
xor
ja
xchg
push
dec
sbb
xchg
test
(bad)
xchg
ficomp
mov
mov
aad
inc
pop
leave
pop
push
push
enter
ror
dec
pop
cmp
dec
mov
and
xchg
pop
sub
jmp
jmp
dec
fwait
inc
sub
test
lea
pop
dec
dec
mov
mov
pop
test
(bad)
enter
xor
mov
in
or
int3
push
fwait
pop
push
lods
adc
clc
jne
inc
arpl
inc
outs
int
dec
jbe
dec
movs
jnp
or
adc
xor
mov
ins
lods
xor
and
jle
sbb
mov
cmp
(bad)
push
inc
(bad)
adc
xchg
xchg
gs
jo
adc
outs
jno
scas
out
push
mov
repnz
cld
fist
adc
stos
div
int3
jno
xchg
shr
mov
lock
into
xchg
into
cs
daa
test
jbe
xor
push
mov
mov
hlt
cwde
imul
(bad)
ss
pop
adc
test
ror
enter
dec
push
add
pop
sbb
aas
cmps
jo
and
jmp
cld
icebp
jb
in
adc
cmc
sar
push
mov
je
shr
test
test
pop
or
fstp
sbb
mov
push
(bad)
je
inc
dec
jecxz
add
inc
jp
dec
sub
sbb
add
addr16
mov
fimul
pop
dec
fcom
dec
aas
popf
add
daa
clc
aad
call
fisubr
inc
xor
retf
(bad)
(bad)
sbb
push
(bad)
repnz
lock
xchg
stc
(bad)
pop
fsub
sbb
ins
add
(bad)
cmp
cmp
dec
test
out
mov
jmp
shl
or
pop
les
mov
xchg
(bad)
jbe
clc
mov
and
adc
add
adc
sub
xchg
aaa
sub
je
jmp
and
jmp
rcr
mov
fwait
adc
cli
cli
and
sub
imul
lods
cmps
fs
aad
pop
inc
pop
sub
inc
mov
(bad)
iret
loop
fs
mov
mov
shr
pop
adc
jecxz
in
clc
or
mov
sbb
cs
xlat
jp
cmp
gs
sbb
mov
add
lods
sar
aas
ins
and
pop
xchg
xchg
(bad)
sahf
sub
and
lds
enter
jge
sbb
xchg
arpl
push
je
lods
std
neg
xchg
stc
mov
inc
and
xchg
adc
inc
sbb
lods
xchg
rcr
dec
es
stos
ror
es
and
adc
adc
cmp
xchg
mov
sar
sub
or
push
mov
mov
sub
daa
sti
cmp
fld
inc
dec
or
pop
xor
movs
imul
in
jns
xchg
(bad)
pop
lock
sbb
rcl
out
mov
test
sub
or
adc
cmp
hlt
sub
xchg
loopne
cmp
aaa
js
xor
popf
jmp
xor
jno
push
adc
xchg
std
xchg
outs
neg
popf
arpl
add
out
and
fldcw
fwait
rcl
or
jmp
push
sbb
dec
mov
inc
in
mov
and
loop
retf
sbb
jne
mov
cmp
test
pop
loopne
ret
jae
and
cmp
pop
aam
push
fisubr
(bad)
cld
ret
cdq
int3
jecxz
popf
sahf
pop
dec
inc
shl
fsubr
adc
ret
adc
and
adc
xlat
mov
inc
iret
aas
jg
or
aam
mov
add
test
clc
sub
sbb
ficomp
nop
ins
jge
retf
je
ret
jae
in
loop
icebp
repz
add
out
or
dec
call
js
jmp
cmp
aas
mov
imul
bound
dec
or
imul
or
int3
pushf
mov
cmp
sbb
mov
(bad)
cld
(bad)
sbb
shl
outs
out
pop
and
or
jnp
pusha
sub
mov
dec
cmp
cmp
and
ror
cmp
sbb
aad
rol
push
cmp
sub
cdq
mov
mov
fsubr
mov
aas
pop
jbe
shl
fidivr
inc
push
cdq
cs
iret
push
inc
sbb
xchg
mov
pop
std
or
js
sub
sub
cmps
mov
push
in
stos
or
das
push
add
pop
push
mov
fwait
adc
bound
les
mov
aaa
jno
scas
pop
scas
ss
jl
cmp
loopne
call
imul
mov
cdq
mov
ss
cdq
push
and
pop
and
jmp
outs
out
or
int
shr
movs
fsubr
adc
lahf
cmp
cmps
dec
pop
mov
lea
sub
mov
scas
jo
popf
jecxz
jge
lods
jecxz
xchg
fistp
mov
ficomp
mov
ror
lea
nop
pop
icebp
hlt
loopne
push
cmp
lods
mov
loope
popf
dec
mov
mov
push
lock
xchg
lahf
sbb
repnz
in
retf
cmp
mov
in
or
mov
mov
mov
in
xchg
sub
(bad)
ds
inc
scas
out
mov
cmp
test
add
icebp
es
in
adc
ja
cmp
(bad)
inc
neg
sbb
mov
call
xchg
sti
pop
out
sbb
xchg
jns
adc
pushf
fs
mov
popf
fstp
push
add
scas
sahf
mov
(bad)
out
ins
sbb
dec
jns
outs
pop
scas
cli
sub
cwde
cmp
mov
daa
cld
mov
inc
jle
cli
shl
cmp
push
push
sar
iret
and
mov
addr16
test
inc
ficom
(bad)
or
xor
repnz
sbb
add
push
lods
xchg
popf
pop
mov
jl
ins
movs
or
ror
xchg
push
xchg
addr16
jbe
mov
not
out
retf
mov
jns
dec
cmp
mov
sbb
ins
and
and
jge
inc
mov
dec
xchg
into
ja
fucom
inc
fstp
adc
xor
cs
idiv
loopne
adc
loope
pop
(bad)
gs
cmp
icebp
ja
enter
call
sbb
popf
(bad)
push
push
push
loope
cmp
push
cld
sbb
xchg
loope
pop
inc
(bad)
std
cdq
into
inc
shr
jnp
push
in
lahf
inc
adc
sbb
call
mov
rol
push
sbb
dec
cmp
or
das
and
cmp
push
in
retf
jp
jae
pop
ret
adc
push
int3
jnp
fcmovnb
cld
pop
push
(bad)
movs
or
push
cwde
push
add
ror
xlat
mov
sub
pop
inc
ret
shr
and
loop
mov
mov
leave
push
add
jnp
pop
js
mov
cld
out
push
shr
test
fadd
and
dec
mov
mov
xlat
je
and
shl
push
add
mov
int3
retf
push
cs
push
xchg
cmc
mov
in
mov
mov
loope
repz
stc
std
dec
mov
inc
(bad)
scas
(bad)
jge
je
into
cwde
cmp
cmp
jg
(bad)
es
xchg
mov
fcmovb
int
sub
xchg
std
enter
scas
push
cwde
int
ds
dec
mov
cmps
push
push
lea
popa
inc
outs
out
jbe
push
inc
xchg
xlat
adc
loope
repnz
inc
adc
(bad)
sbb
mov
dec
adc
adc
xchg
pop
cli
mov
pop
and
aas
jp
fisubr
not
pop
js
aam
das
push
aas
in
add
leave
xchg
test
inc
add
mov
jnp
ficom
mov
pop
xchg
sti
imul
pusha
xchg
mov
stos
sub
push
cmp
outs
jae
mov
pop
mov
outs
stos
inc
cmp
cmps
inc
loope
mov
add
pushf
fstp
test
in
outs
pop
out
cmc
inc
lds
mov
mov
outs
push
cmps
adc
test
ins
clc
xor
mov
push
inc
fstp
or
add
out
loop
cmp
add
or
cmps
in
pop
push
push
xor
push
dec
movs
pop
mov
lods
inc
add
cld
lahf
xchg
dec
add
push
aad
fdiv
jnp
sub
mov
test
jge
out
dec
fsubp
gs
jl
inc
or
out
xor
ret
retf
and
sbb
dec
push
popf
xor
push
neg
add
das
xor
aad
dec
and
mov
aam
adc
cmp
push
call
mov
dec
mov
out
push
push
jmp
or
mov
out
jl
push
mov
add
xlat
(bad)
sbb
inc
popf
and
xor
in
mov
dec
mov
inc
sti
retf
or
xchg
imul
(bad)
out
fwait
int
les
mov
push
push
(bad)
pop
popf
dec
dec
push
adc
cmp
push
clc
cwde
cmp
adc
(bad)
sbb
or
test
xchg
popf
sbb
xor
push
jge
dec
stc
popa
ficomp
dec
add
xor
sub
adc
jbe
push
pop
xchg
mov
ror
push
scas
jle
bound
and
aam
xor
sbb
stos
push
test
add
mov
scas
or
aad
fwait
jmp
lock
mov
repz
ror
int
adc
in
(bad)
fisub
cmp
test
cmp
pop
popf
inc
ret
mov
scas
aas
xchg
popf
imul
(bad)
inc
jle
adc
dec
mov
jb
adc
test
arpl
arpl
jno
mov
mov
cmp
push
nop
xchg
add
lods
sar
call
test
or
gs
outs
ss
(bad)
ja
in
in
dec
idiv
sar
xchg
outs
jp
jecxz
mov
sub
rcl
dec
jno
mov
dec
adc
mov
popa
mov
add
idiv
retf
sti
js
xor
mov
(bad)
test
fiadd
jnp
enter
or
jns
addr16
dec
stos
xor
stos
add
jbe
sbb
xor
pop
or
sbb
sbb
ja
arpl
mov
loopne
daa
rol
jno
fimul
sti
cmp
mov
std
es
les
stos
fld
fmul
sub
into
cmp
dec
and
addr16
cwde
jecxz
shr
(bad)
fnstsw
sbb
jmp
loop
jns
mov
adc
and
dec
jp
(bad)
ffreep
aaa
pop
ds
adc
cmp
test
cmp
cmc
outs
ss
ja
mov
cmp
lods
cs
fcmovnbe
and
retf
sbb
pop
in
mov
ret
inc
iret
mov
adc
je
mov
pop
test
sbb
int
cmp
enter
retf
stos
(bad)
std
inc
xchg
bound
rcl
dec
add
jo
shl
cmc
push
fidivr
in
sbb
aas
(bad)
outs
push
mov
sub
inc
loope
xrelease
mov
fld
or
xchg
dec
cwde
rcl
cdq
adc
mov
push
repnz
fnstenv
out
test
dec
cli
push
retf
cmp
cli
sbb
es
mov
test
movs
jecxz
inc
add
mul
fldenv
(bad)
outs
dec
or
fnstsw
pop
pushf
ror
in
mov
inc
pop
xlat
clc
cdq
jg
mov
dec
retf
sub
or
fucom
push
scas
mov
repnz
push
pop
gs
fcomp
xor
mov
ret
add
adc
mov
adc
loop
loop
jnp
aad
outs
loopne
ret
or
sti
inc
dec
fwait
push
adc
sbb
cdq
aad
mov
and
repz
in
cs
mov
popf
rol
jge
dec
lods
xchg
mov
mov
push
inc
mov
xor
or
jl
jno
mov
in
ds
inc
stc
sbb
sub
mov
mov
sbb
out
push
mov
(bad)
es
rol
jecxz
iret
nop
xor
ret
dec
and
push
dec
les
mov
and
int
dec
add
push
add
jmp
adc
cli
xchg
fidivr
bound
scas
and
jmp
xchg
push
cli
pop
test
xor
pop
mov
push
popf
in
mov
mov
push
cmp
aad
mov
jge
mov
into
xor
fdiv
mov
fidiv
popf
arpl
pop
(bad)
mov
or
mov
test
popf
or
or
cmp
cwde
in
fimul
test
pop
adc
shr
pushf
sbb
aaa
inc
push
std
imul
mov
push
adc
xchg
stos
outs
mov
mov
sbb
aam
rol
sbb
pop
pop
add
jle
rcr
push
mov
cld
es
sbb
jne
scas
xlat
bnd
into
mov
test
out
inc
add
ins
mov
adc
or
xor
aam
jge
cmp
adc
xchg
jle
pop
jecxz
push
(bad)
sub
ds
jge
in
inc
jp
inc
pop
jo
popf
push
pop
fs
push
inc
xor
lds
pop
shr
push
les
push
std
inc
sub
popf
mov
pop
jg
cmovb
loop
loopne
lar
je
cwde
sub
pop
dec
pop
int
xchg
or
inc
jle
cmp
(bad)
call
pop
dec
cdq
neg
loopne
adc
pop
or
add
jns
jmp
clc
push
mov
mov
mov
pusha
xchg
repnz
leave
repnz
push
adc
adc
add
repz
mov
mul
pop
pop
dec
pop
push
inc
mov
push
retf
xor
mov
mov
scas
icebp
adc
(bad)
mov
inc
sbb
repnz
sbb
jne
les
aas
inc
shl
sbb
push
pusha
cld
out
aas
adc
mov
movs
lea
fs
cld
add
and
dec
data16
jnp
rcl
ss
loop
cdq
test
jmp
pop
push
outs
in
sti
push
jno
sbb
fneni(8087
add
leave
pop
test
adc
or
js
sub
retf
or
dec
sbb
sub
mov
push
stc
xchg
rol
mul
pop
mov
daa
ret
jg
movs
dec
mov
sub
mov
and
xchg
out
push
inc
inc
pusha
sbb
xchg
xchg
aam
jnp
cmp
fild
andnps
pop
scas
and
repnz
lahf
fiadd
add
repz
(bad)
div
mov
into
dec
ds
jmp
and
mov
sub
sahf
sti
sub
shr
shr
push
imul
or
mov
mov
cmp
in
push
jb
int
add
popf
ja
out
outs
test
mov
fwait
(bad)
fisub
into
fisub
and
cmps
ret
dec
fadd
ds
mov
dec
gs
xor
rcl
arpl
hlt
sub
in
jae
mov
jmp
aad
pop
inc
pop
sub
std
or
popa
les
xor
xlat
mov
rcr
repnz
and
fwait
aas
ret
push
or
(bad)
retf
das
jge
xlat
ror
add
(bad)
data16
leave
sbb
pop
xor
xor
add
sti
mov
loopne
mov
fimul
imul
into
test
cmc
pop
sbb
cs
mov
dec
daa
push
jle
inc
in
fst
push
ror
mov
(bad)
into
stos
sub
push
jb
test
fnstenv
sub
in
jae
xor
and
(bad)
mov
ja
fnsave
adc
out
(bad)
js
(bad)
jg
ret
ds
dec
repnz
push
adc
add
lea
out
push
jnp
cli
movs
adc
inc
or
mov
fsubr
or
cwde
mov
or
pop
fidiv
int
add
sbb
jg
imul
jmp
movs
das
cld
repnz
xchg
push
out
in
ret
jl
pop
loop
dec
inc
repnz
lock
nop
(bad)
fistp
cwde
imul
sahf
xchg
mov
jo
or
mov
dec
lods
ins
sbb
jne
(bad)
icebp
push
and
fwait
popf
push
rcl
das
sub
mov
pop
mov
(bad)
scas
sub
push
mov
or
enter
push
mov
in
add
(bad)
mov
(bad)
daa
rol
xor
adc
(bad)
xchg
sbb
test
sub
mov
sub
nop
and
xchg
outs
std
scas
scas
and
cmp
xchg
test
sahf
jns
sub
mov
push
xor
cmp
out
scas
lods
ficom
movs
sbb
jmp
imul
test
mov
pop
pop
stos
call
adc
add
sub
cmc
cs
ret
(bad)
ret
push
and
jno
scas
fwait
js
mov
xchg
inc
sbb
movs
and
imul
sub
xchg
bound
ror
es
test
inc
dec
fdiv
adc
lock
cmps
mov
xor
sub
pop
out
adc
push
rol
jle
mov
add
test
cmp
das
or
mov
ror
icebp
jb
mov
push
pop
lahf
das
sbb
cli
je
lahf
dec
pushf
push
int3
cmp
retf
dec
sub
mov
mov
mov
add
inc
sahf
call
add
(bad)
gs
adc
or
xchg
in
out
pushf
jp
pushf
lds
test
ficomp
rcr
mov
dec
xor
jae
dec
(bad)
and
stos
pop
(bad)
and
jo
xchg
sub
(bad)
loop
lahf
out
imul
dec
add
fdiv
jl
xchg
sahf
(bad)
arpl
add
xchg
push
out
fnstenv
adc
mov
push
fimul
test
lods
into
sbb
psrlw
dec
mov
xchg
lods
xor
aad
pop
sar
int3
push
scas
iret
adc
or
lea
cli
cli
gs
sbb
push
dec
sbb
mov
hlt
repz
jl
jp
fs
jge
jl
cmp
cmp
cmps
xchg
push
das
stc
stos
sub
mov
retf
inc
inc
mov
not
fcomp
cmc
add
jge
push
dec
xlat
add
int3
xchg
not
test
jl
out
loop
test
in
mov
repz
jne
(bad)
jmp
out
ficom
out
pop
loope
sti
js
and
stc
fwait
inc
jbe
rcl
not
retf
cmp
cmp
mov
and
int
(bad)
pop
ins
pusha
inc
fimul
in
ins
xchg
add
push
or
js
dec
fstp
call
add
les
inc
pop
mov
xlat
leave
mov
jbe
push
aam
push
sub
sub
fwait
mov
dec
ins
lock
inc
pop
xor
int
fcmovnu
imul
dec
add
jns
je
push
fwait
push
mov
mov
mov
mov
mov
pusha
neg
sbb
cli
leave
call
jne
sub
xor
mov
addr16
shl
push
sub
push
es
pop
mov
xchg
inc
sbb
cdq
les
les
xchg
xchg
mov
mov
sub
fsub
nop
cmps
xlat
iret
xor
pop
adc
and
das
rol
imul
stos
pop
push
xor
mov
push
scas
loope
neg
test
je
daa
icebp
mov
xchg
shr
popf
ret
(bad)
aas
int
icebp
mov
stc
fild
popf
pop
jle
das
lahf
mov
mov
xchg
mov
outs
adc
cs
stc
mov
xor
mov
outs
arpl
mov
cmp
pop
xchg
mov
cdq
arpl
mov
in
sub
sbb
fwait
pop
mov
pop
jp
xchg
pop
dec
push
retf
jg
mov
ret
int
cdq
ret
nop
ins
aad
xor
add
repnz
lds
jle
sub
cmp
sub
lea
ror
in
mov
loop
inc
push
mov
imul
scas
cmp
js
adc
cmps
fimul
es
fs
retf
push
(bad)
adc
daa
jl
das
hlt
pop
shl
out
aad
sahf
cld
mov
sub
mov
inc
pop
pop
dec
mov
add
inc
pop
stos
imul
sub
loop
cmps
mov
jnp
pop
jmp
fwait
ja
cmp
and
or
pop
ins
popf
xor
movs
std
mov
cmp
push
andnps
arpl
dec
inc
push
adc
mov
xchg
test
shl
mov
cli
push
sbb
adc
cmc
in
ror
ds
inc
fidivr
test
mov
aam
cwde
retf
fstp
jp
jmp
(bad)
icebp
out
mov
adc
sbb
dec
inc
add
test
in
leave
lahf
shr
test
cdq
fisub
pop
xchg
jg
sub
xor
lods
mov
jns
mov
outs
cmp
sbb
adc
retf
icebp
clc
xchg
jmp
push
ja
inc
test
adc
cmp
clc
sub
lods
push
jne
sub
call
and
hlt
loope
popf
pop
and
lods
movs
(bad)
js
lods
mov
push
ret
xor
sbb
int3
jno
dec
push
lock
sub
test
popf
cmp
les
mov
cmp
sub
rol
sbb
pop
int3
inc
pop
cmps
retf
ins
std
movs
pop
rcl
aam
pop
pushf
mov
sahf
xor
push
sub
xchg
mov
test
pop
fnstsw
add
adc
sub
in
pop
int
cmp
pop
push
call
push
add
ret
bswap
adc
pop
aad
loope
test
cmc
mov
push
cmp
cwde
lahf
jg
mov
mov
into
(bad)
dec
int
jle
cmp
movs
dec
add
add
sbb
vpunpckhqdq
outs
mov
or
push
mov
shl
test
sbb
lods
cli
ret
cmp
adc
movs
out
or
gs
out
cmps
std
in
jg
mov
fstp
dec
dec
jnp
xchg
sti
mov
inc
das
in
push
mov
sub
xchg
cmp
jmp
sub
sbb
mov
push
and
sahf
xor
movs
mov
leave
mov
mov
cmp
cmp
xor
hlt
sar
imul
das
int3
cmc
arpl
ins
int3
lea
lock
jb
out
xchg
movs
enter
xor
xor
mov
cmp
test
popa
clflush
hlt
popa
xchg
loop
push
out
or
adc
pusha
or
sar
jbe
stc
lds
ins
movs
or
dec
inc
fs
inc
fucom
mov
and
or
push
mov
das
test
dec
call
push
retf
cmp
pop
jbe
mov
shl
out
pop
sub
sti
jo
je
sbb
push
bound
cmp
cld
es
or
inc
mov
lahf
imul
mov
lods
or
sub
sub
stc
fwait
xor
loope
push
into
mov
cli
lods
jp
and
js
and
shr
mov
mov
mov
pop
add
push
add
xor
leave
and
inc
retf
push
test
rcr
mov
fstp
and
cmps
cs
xchg
dec
movs
mov
and
push
mov
push
pusha
movs
repnz
dec
xor
jl
xor
push
inc
fcomp
push
pop
xchg
push
cmps
and
cmp
dec
aas
jecxz
push
shl
inc
pop
push
sub
and
mov
mov
into
mul
(bad)
fwait
sub
and
ds
pcmpgtw
jecxz
dec
dec
inc
fcmove
loopne
sub
lds
xor
sbb
ins
and
loopne
sbb
xchg
xchg
pop
aaa
sbb
dec
in
jmp
ror
jne
mov
ins
mov
or
test
vrsqrtps
leave
hlt
(bad)
ss
mov
inc
scas
dec
pop
test
sti
push
mov
hlt
push
retf
mov
add
or
sbb
ror
adc
ret
outs
retf
test
mov
jne
dec
mov
mov
pop
fwait
rol
lods
shl
adc
push
mov
das
dec
cwde
sub
jmp
cmps
jne
test
mov
movs
jns
jns
mov
mov
mov
loop
imul
sub
mov
xor
cld
test
daa
stos
call
and
(bad)
(bad)
mov
shr
dec
and
test
dec
inc
vpunpcklqdq
xlat
xor
xchg
sub
mov
(bad)
fsubp
imul
adc
mov
xor
aad
stos
jo
xor
rcr
cmp
xor
cmp
shl
das
and
bswap
fmul
(bad)
in
xor
push
es
fdivr
mov
cli
or
retf
mov
arpl
jnp
mov
fadd
cdq
(bad)
push
or
pop
pop
dec
dec
aas
xor
jge
loop
rcr
arpl
sub
inc
push
pop
js
in
stc
dec
sub
lods
add
js
cmp
mov
imul
pushf
in
std
adc
imul
fcom
or
pop
dec
nop
xchg
adc
cmp
push
sbb
mov
dec
xor
push
stos
push
jo
dec
repz
lahf
clc
dec
out
pushf
mov
loope
mov
cmc
sub
repnz
and
lods
mov
xchg
push
and
push
or
jle
jns
push
jmp
(bad)
aas
jne
push
lods
and
pop
adc
inc
ss
push
in
and
push
cmps
xchg
stos
mov
push
xor
hlt
and
xor
retf
std
(bad)
xor
daa
cdq
xchg
cmp
push
and
jl
pop
add
out
cmp
jl
sbb
jp
in
cdq
xchg
test
out
ret
mov
jae
out
push
sub
mov
sbb
pop
or
fs
enter
arpl
stos
sub
jo
into
mov
dec
dec
fidiv
push
jns
add
adc
je
mov
xlat
fadd
ret
mov
pop
daa
mov
add
sub
mov
pop
push
sbb
jae
pop
scas
or
and
xchg
xchg
fcomp
inc
and
xchg
mov
addr16
push
mov
je
bound
lds
sub
ds
fist
(bad)
fucomi
stos
add
cmp
push
mov
lods
jmp
mov
pop
or
ret
addr16
adc
jl
dec
sub
std
sbb
enter
fldenv
push
retf
in
sahf
mov
mov
push
ds
mov
mov
dec
and
push
sbb
sbb
call
jl
(bad)
sbb
ja
leave
into
out
push
inc
clc
iret
sbb
dec
xor
aas
mov
fsub
inc
inc
movs
pop
out
pop
into
xchg
test
mov
sbb
in
sub
push
mov
sahf
inc
dec
dec
dec
movs
into
sub
add
jecxz
push
in
add
les
aad
inc
pop
push
cmp
sti
popf
mov
dec
pushf
pop
(bad)
cli
repnz
push
gs
jcxz
sub
inc
fldlg2
cmp
cmps
sahf
aad
int
jmp
aas
push
pop
inc
call
push
mov
fst
xor
mov
loopne
jbe
and
jecxz
sub
outs
mov
xchg
scas
fst
push
daa
cmp
mov
data16
aaa
mov
cmps
mov
add
add
add
and
pop
std
data16
ins
(bad)
jg
jecxz
popa
sbb
shr
aaa
or
outs
mov
in
add
cli
(bad)
cmps
mov
cmps
xchg
or
cmp
fld
xor
loop
call
inc
dec
or
add
popf
dec
movs
les
into
imul
retf
jmp
and
ret
mov
mov
mul
dec
mov
cmp
scas
sub
fld
push
loope
mov
aaa
mov
scas
in
xchg
mov
jno
repz
lock
fwait
pop
xlat
mov
test
push
(bad)
push
dec
cmp
das
in
je
adc
cdq
sbb
ret
dec
jl
push
idiv
jno
xchg
xor
outs
and
xor
loope
imul
xor
(bad)
sahf
sbb
data16
hlt
fbstp
aam
aas
adc
call
stos
(bad)
and
inc
int3
xchg
popa
adc
pop
add
movs
adc
jl
fcomp
pushf
into
cmp
aad
aad
inc
mov
out
mov
aam
pop
cmp
adc
jmp
jbe
push
xor
out
pop
outs
jbe
add
loopne
mov
jg
cmp
outs
push
repz
jl
sub
push
cmps
pop
sub
test
xchg
aad
inc
movs
add
sub
mov
out
ins
cmp
or
mov
cmps
call
pop
fst
int
push
js
sbb
dec
dec
fsubr
xchg
and
xchg
gs
rcr
mov
mov
movs
inc
inc
mov
xor
or
das
loope
xor
sbb
imul
vmulss
xor
fmul
xor
xchg
adc
repnz
fidiv
jno
out
(bad)
xchg
add
ror
mov
int3
or
enter
nop
pushf
push
gs
push
or
push
jmp
nop
mov
xor
popf
xchg
das
cmp
dec
retf
sub
push
xchg
mov
pop
test
push
out
lahf
jge
imul
push
jl
mov
iret
inc
xchg
jp
retf
fs
das
add
sbb
cmp
movs
or
xchg
loopne
test
or
or
out
lock
fbld
mov
rcl
das
arpl
fwait
mov
xchg
mov
stos
pop
adc
lods
cli
dec
in
nop
xor
sbb
add
shl
inc
pop
xor
add
mov
cmp
adc
leave
popf
cmp
jmp
xchg
xchg
mov
loopne
cmp
loop
sbb
vxorps
push
adc
ror
lods
add
ss
cmp
sub
adc
push
ins
mov
jbe
(bad)
mov
pop
mov
adc
jg
sbb
ret
mulps
push
jl
sub
mov
mov
popf
daa
sbb
xchg
ret
adc
mov
xchg
inc
shr
adc
cs
into
cli
mov
and
xor
mov
push
mov
and
loope
adc
test
push
inc
mov
into
inc
cmp
sub
jecxz
or
pop
daa
and
stos
or
jns
cmp
ja
cmp
cdq
ins
push
(bad)
fdiv
leave
mov
xchg
adc
dec
dec
sub
pusha
add
sub
ret
xchg
test
ins
es
mov
xchg
and
mov
jl
(bad)
aad
jmp
icebp
jnp
or
scas
into
xchg
ror
stos
pop
adc
push
into
pop
adc
push
sbb
mov
call
stos
mov
adc
cli
xor
dec
sbb
xchg
jp
fs
lds
sub
lock
addr16
dec
cmc
mov
mov
bound
lock
jmp
lea
repz
gs
xlat
push
sbb
lahf
sbb
outs
inc
push
call
sub
(bad)
and
mov
sub
pop
mov
bound
(bad)
outs
xor
xor
lds
jo
push
cs
and
push
push
mov
dec
rcr
jle
(bad)
mov
stos
cdq
sbb
in
xchg
rcr
jo
call
jg
inc
cmp
dec
and
(bad)
dec
jo
cld
arpl
jae
nop
arpl
dec
adc
lfs
mov
lods
ins
mov
lea
mov
ins
or
(bad)
xlat
adc
lods
ss
mov
xchg
imul
inc
mov
jge
scas
fiadd
jo
pop
inc
sbb
jecxz
in
sub
repz
call
push
push
inc
sub
xor
mov
sub
jmp
jl
cmp
inc
pop
sbb
jp
mov
out
loope
repz
retf
jl
add
popf
repz
inc
cmp
out
ds
out
add
push
pop
das
lea
add
jmp
mov
lods
les
stc
or
xchg
adc
or
hlt
aam
adc
std
xor
daa
mov
jle
jne
and
mov
push
data16
xchg
jbe
mov
dec
jb
xor
and
loope
mov
aas
sbb
mov
ret
sbb
call
push
xchg
mov
xor
and
add
ror
aad
lods
bound
popa
mov
(bad)
test
add
or
push
leave
ror
in
jg
and
fild
or
cwde
js
je
mov
idiv
test
cmc
xchg
fst
push
mov
dec
add
xor
stos
inc
xchg
cli
jnp
pop
dec
rcr
jmp
mov
cli
push
push
popa
jbe
daa
hlt
in
or
jmp
add
jl
push
lods
pop
or
sub
inc
shl
loop
mov
or
cli
rcl
add
int3
pop
int
(bad)
dec
pop
push
push
cwde
add
popf
sub
enter
sar
jmp
inc
aas
sbb
mov
mov
xchg
lock
out
cli
jae
movs
dec
jecxz
adc
mov
push
aam
or
ins
aaa
xchg
icebp
test
mov
jnp
fld
aas
inc
(bad)
(bad)
sub
sub
push
push
cwde
(bad)
in
mov
arpl
pushf
repnz
inc
or
fmul
inc
push
in
mov
jmp
mov
mov
sbb
push
imul
(bad)
in
inc
outs
call
ins
cmp
(bad)
jnp
std
cld
stos
dec
jns
and
or
pop
xchg
cmp
cdq
call
out
mov
outs
fld
lods
jae
mov
adc
add
into
adc
pop
aaa
ror
push
jns
pop
lods
add
in
imul
inc
jmp
mov
pop
out
and
iret
ja
test
add
adc
hlt
mov
xchg
fbld
sub
scas
jle
or
sbb
and
jae
mov
inc
(bad)
push
and
sbb
or
call
xor
inc
lahf
or
pop
push
cmps
add
adc
adc
mov
sbb
(bad)
loope
pxor
(bad)
dec
jmp
mov
or
sbb
add
push
or
pcmpgtd
mov
pop
pop
ins
into
xlat
cmc
pop
jecxz
out
int3
mov
and
mov
push
mov
add
mov
cmp
sbb
sti
xchg
pop
repnz
loope
xchg
push
or
and
sbb
xchg
mov
dec
adc
add
cld
pop
mov
push
sbb
imul
arpl
lods
shl
(bad)
das
out
cmp
loop
ja
call
push
popf
mov
mov
fst
outs
test
pop
and
push
jle
add
pop
mov
push
aam
iret
dec
mov
pop
inc
push
fld
cld
or
mov
pop
(bad)
dec
cwde
mov
and
mov
ret
xchg
inc
cmps
and
dec
cwde
iret
pop
lea
rol
cdq
outs
mov
xor
cs
adc
push
neg
xchg
jae
or
xchg
(bad)
adc
movs
jno
std
movs
jg
cmp
(bad)
jb
test
pop
inc
cdq
mov
add
shr
push
and
gs
push
add
jno
hlt
out
push
inc
or
data16
stos
dec
jnp
(bad)
sahf
cdq
scas
pushf
inc
sbb
scas
out
cwde
les
in
sar
sbb
sub
pop
push
and
pop
loopne
jns
jne
or
daa
xchg
pop
loopne
mov
inc
and
push
add
mov
cmp
aam
inc
sbb
or
movs
push
mov
mov
lea
pop
or
lods
mov
call
or
jnp
neg
(bad)
arpl
jmp
rcl
dec
nop
push
ja
outs
adc
push
(bad)
movs
dec
push
data16
cld
or
pop
xchg
inc
(bad)
int3
dec
adc
fldcw
adc
mov
xchg
xchg
jb
add
push
hlt
dec
xor
scas
jmp
push
clc
and
ds
mov
pushf
sub
dec
cmp
mov
in
(bad)
pop
cmps
xor
into
adc
sub
xchg
shl
and
dec
mov
xchg
cmps
xchg
cdq
mov
jecxz
leave
int
mov
ins
xlat
mov
push
mov
fwait
adc
retf
aad
adc
loopne
xor
jecxz
push
xchg
xchg
jb
in
jg
test
nop
sbb
push
pop
mov
jg
int3
(bad)
sahf
mov
arpl
bnd
enter
retf
or
pushf
inc
and
ja
and
ret
sbb
fs
je
jge
mov
out
jp
hlt
hlt
repz
push
add
icebp
out
stos
adc
call
imul
or
(bad)
stc
mov
and
lods
jmp
jae
sti
jg
add
lock
mov
ins
std
adc
rcr
cmp
ficomp
retf
mov
push
pop
sbb
push
pop
cmp
xor
inc
add
lods
jo
dec
shl
je
jmp
or
fld
arpl
loope
inc
push
ja
pop
adc
or
adc
addr16
and
in
jle
scas
xchg
mov
into
add
add
retf
sub
outs
pop
imul
arpl
(bad)
push
xor
pop
ins
stc
loope
cs
adc
out
cmovae
scas
mov
mov
pop
cmps
outs
pop
pop
xor
rol
repz
push
in
pop
cmp
or
inc
adc
sub
jb
inc
or
and
hlt
ret
pop
pop
dec
adc
out
mov
test
out
js
sub
mov
mov
dec
xor
shr
ret
xchg
mov
mov
out
cmp
fmul
cld
add
jb
mov
push
push
movs
in
sar
fs
dec
iret
or
cs
and
fstp
cmp
push
(bad)
adc
xchg
hlt
pusha
je
mov
or
clc
es
push
jno
leave
and
add
or
sti
js
in
and
ret
mov
inc
pop
(bad)
pop
or
int
mov
mov
adc
xchg
pop
dec
in
shl
push
mov
shl
jae
sub
xchg
xor
les
neg
jae
sti
lds
jmp
mov
(bad)
pop
sbb
ins
dec
or
popa
push
ror
dec
ret
push
les
xor
push
adc
xchg
std
and
pop
lea
sbb
daa
xchg
repz
out
repz
cmp
lea
xor
fldl2e
int
(bad)
outs
or
xor
stos
mov
repnz
loope
dec
cmp
or
xor
or
xor
jp
jge
jnp
repnz
test
mov
popa
push
pop
scas
outs
pusha
in
cmp
push
jle
pop
mov
jmp
stos
xor
or
fdivr
add
jo
dec
cmps
ins
and
leave
mov
movs
jno
repz
gs
and
adc
xlat
xrelease
push
cmps
add
cwde
pop
mov
shl
ins
push
lea
xor
mov
jp
loopne
dec
fild
or
pop
mov
mov
ret
dec
push
adc
retf
fxtract
imul
or
mov
jno
(bad)
out
stos
dec
sub
push
push
sub
and
in
jg
popa
fs
out
adc
or
in
rol
sub
aad
mov
movs
lea
lea
popf
call
or
jb
sbb
rcr
mov
test
push
pop
(bad)
pushf
cmps
dec
ja
dec
pop
retf
fisub
es
dec
lock
mov
mov
inc
leave
ss
cld
jne
sbb
sub
mov
push
or
cmps
fild
fwait
inc
jne
test
pop
fsin
jmp
mov
out
and
jp
dec
ss
aad
dec
and
bound
jecxz
in
ss
add
hlt
sub
ds
stos
movs
xor
xor
adc
mov
or
sub
bound
loop
mov
adc
push
jb
mov
or
jb
ins
(bad)
xchg
repnz
mov
jg
into
shl
in
jmp
aas
sub
dec
loope
es
pop
pop
cld
arpl
mov
cwde
adc
inc
cwde
dec
sbb
adc
fadd
mov
xor
cdq
mov
out
ins
rep
gs
shr
sub
xchg
mov
inc
test
cmp
jle
ficomp
push
in
pop
aaa
test
sub
fwait
xlat
cld
je
bound
sbb
and
mov
retf
arpl
jle
call
mov
imul
dec
in
std
rsm
pop
add
and
fisttp
shr
cmp
push
call
push
jp
push
mov
outs
push
loop
or
out
ror
test
push
sub
pop
movs
sbb
cmp
sahf
jl
xlat
xchg
scas
push
loop
push
in
nop
je
imul
(bad)
mov
mov
jb
std
ja
xchg
sbb
and
(bad)
dec
pop
inc
jg
xchg
push
dec
mov
add
xor
ins
lods
inc
xlat
mov
shr
call
mov
int3
mov
add
push
and
cmp
mov
and
(bad)
jo
sbb
sbb
cmp
pop
les
mov
inc
mov
push
mov
push
xor
sub
cdq
fnsave
xor
stos
xchg
and
push
push
mov
inc
push
shl
inc
pop
fmul
xor
ror
outs
jns
mov
jns
hlt
out
or
iret
icebp
xchg
jecxz
popf
pop
jmp
adc
adc
push
push
dec
sbb
sti
in
sbb
(bad)
jge
jg
les
into
fidiv
sbb
or
sbb
in
mov
pop
sub
movs
cmp
and
cmp
mov
es
pop
sub
aam
cdq
push
in
enter
stc
or
cmps
fadd
imul
jp
pusha
test
jle
imul
and
fmul
adc
bound
(bad)
mov
int
adc
dec
retf
push
shr
cld
and
lds
mov
xor
psadbw
cmp
cmp
dec
aam
jne
(bad)
dec
and
jge
or
jb
ret
dec
leave
push
xchg
xchg
sahf
enter
shr
test
pop
push
stc
xchg
add
call
sti
es
std
lods
sbb
mov
cdq
inc
inc
inc
jnp
dec
arpl
push
push
add
and
adc
cmp
les
fs
int3
or
fisttp
mov
mov
(bad)
out
aas
mov
fwait
xchg
mov
sbb
in
cmp
out
jp
clc
(bad)
(bad)
cmps
xchg
mov
xchg
xchg
sbb
nop
leave
push
icebp
and
cld
fmul
and
out
mov
inc
pop
mov
pop
jmp
bound
not
call
js
push
xor
sbb
cmp
or
mov
pop
or
not
mov
push
sbb
mov
xchg
das
fwait
bound
adc
stos
retf
loop
pop
sbb
test
or
cmp
jmp
stos
fwait
mov
adc
stos
add
xor
arpl
fimul
sbb
call
arpl
lods
xor
rol
push
movs
lahf
pop
loope
retf
aam
cmp
xor
adc
ret
sbb
mov
pop
test
pop
sub
test
or
cmp
fst
(bad)
jnp
inc
lahf
mov
push
in
mov
jno
mov
pop
cmp
faddp
(bad)
outs
push
xchg
int
fisub
lahf
dec
gs
ret
inc
test
xlat
xabort
fsub
xchg
ins
bound
mov
(bad)
fwait
stc
mov
push
xor
push
dec
xchg
push
rcr
arpl
xor
vmwrite
dec
lods
sti
cmp
mov
adc
mov
add
inc
retf
cli
jno
repnz
fs
lahf
(bad)
adc
mov
repnz
xchg
cli
(bad)
jmp
outs
adc
mov
push
cmc
inc
cmc
cmc
push
jge
push
dec
cmc
loope
xchg
xchg
outs
push
sbb
mov
lock
pop
stc
inc
xchg
aaa
and
xor
out
ds
xor
aas
aam
push
je
fnstcw
dec
lods
pop
adc
retf
shr
into
sbb
(bad)
imul
xchg
ret
jle
stc
arpl
mov
retf
lods
lods
jnp
push
ins
or
inc
into
sar
add
or
add
dec
dec
push
and
(bad)
push
retf
adc
mov
das
repz
sbb
stos
loope
bound
retf
xchg
xor
or
sbb
and
and
pop
dec
xchg
xchg
test
add
lahf
jge
cmp
sbb
shl
xchg
push
pop
sub
imul
cmp
nop
xchg
cld
pop
jle
fsub
mov
mov
adc
push
int3
loope
bound
pop
cmp
cs
ins
in
fimul
imul
pop
js
sub
adc
inc
cmp
push
xor
pop
xchg
cdq
xlat
or
add
aad
(bad)
addr16
jmp
pusha
sar
sbb
or
adc
xchg
hlt
or
xor
mov
sbb
jo
aas
cdq
jo
dec
sar
loopne
fnstcw
add
popf
cmps
repnz
mov
sub
add
jmp
mov
pop
sub
fsub
sbb
cmps
mov
pop
mov
mov
jle
xor
ins
jbe
jecxz
test
push
sbb
and
xchg
push
mov
inc
jg
jne
fstp
pop
lods
sar
or
fwait
popa
or
mov
dec
cmp
call
mov
and
jg
push
(bad)
fsub
and
dec
mov
pslld
pop
jne
dec
es
ss
mov
xor
fild
inc
push
inc
hlt
test
inc
aam
sbb
dec
xor
shl
or
scas
test
stos
(bad)
fisubr
out
sar
xchg
out
adc
pop
push
lahf
popf
dec
jb
xchg
adc
xchg
mov
scas
mov
ret
lods
sub
sub
fwait
adc
sbb
pop
pusha
adc
fidiv
jecxz
out
(bad)
push
sub
cmp
inc
loopne
cwde
loope
xchg
sbb
mul
add
shr
pop
pop
ret
aas
les
mov
pop
push
or
push
xchg
cmp
push
and
dec
scas
clc
fdiv
sub
imul
cmp
(bad)
sub
ins
mov
mov
push
xchg
icebp
xchg
fadd
mov
push
dec
pop
sar
enter
inc
(bad)
mov
cli
lds
pop
or
mov
cs
push
out
mov
iret
mov
inc
iret
(bad)
sub
jno
fmul
xchg
sar
test
or
icebp
mov
mov
pop
sub
xor
pop
inc
xchg
inc
cwde
hlt
out
mov
inc
sub
retf
in
jg
xchg
push
test
push
or
cmps
mov
or
jl
xor
mov
sub
shr
call
or
ds
fdivr
cmp
popa
hlt
clc
lahf
ret
push
sub
ins
(bad)
sahf
repnz
add
fldz
repz
push
retf
add
sbb
cmp
mov
xor
cli
push
sbb
xchg
imul
add
fnstsw
adc
out
fsub
jg
add
movs
aad
pop
fld
je
(bad)
jbe
push
in
xor
push
jnp
imul
push
xor
adc
in
clc
jle
xor
and
xchg
mov
lods
aad
ja
cmp
mov
lods
mov
mov
call
mov
dec
loope
or
(bad)
outs
mov
sub
stc
xor
pop
lea
out
and
out
or
and
imul
xchg
push
adc
jmp
mov
mov
jno
and
inc
jge
retf
push
mov
loop
into
jbe
imul
or
xchg
clc
or
and
mov
pop
(bad)
xchg
add
fdivr
pop
mov
jecxz
movs
mov
fsubr
ds
in
stc
dec
sbb
hlt
cld
jmp
js
pop
ffreep
push
stos
add
mov
xchg
sub
sbb
dec
icebp
lods
push
je
lahf
pop
sbb
imul
xchg
adc
cs
aad
mov
inc
jmp
retf
mov
and
int
lea
(bad)
les
in
and
mov
push
leave
(bad)
scas
cmp
dec
jbe
or
lods
dec
mov
mov
dec
lock
lahf
add
xchg
mov
jnp
adc
xchg
(bad)
out
or
(bad)
jb
or
and
test
cmp
or
jmp
imul
sub
call
jp
or
push
jge
adc
ret
outs
jo
ret
imul
xor
sub
adc
or
ror
xlat
shr
js
xchg
cs
ficomp
or
mul
add
dec
adc
into
(bad)
xor
add
and
xor
jg
cwde
jecxz
getsec
and
int3
jecxz
jae
retf
lock
xchg
call
dec
add
inc
ins
in
pop
xchg
jp
les
mov
stos
loope
loop
mov
xor
lock
lods
fwait
sar
add
adc
sbb
in
hlt
jno
sub
int3
dec
jns
stos
or
pushf
idiv
inc
stos
call
xlat
pop
sahf
ins
sahf
xchg
adc
outs
cdq
popf
mov
les
fisubr
rol
jo
sub
icebp
loopne
jno
fmul
jge
jle
mov
clc
pop
call
xor
mov
xchg
js
pushf
pop
push
retf
xlat
aas
cmp
adc
and
jmp
jne
mov
xchg
ret
or
cdq
ret
es
xchg
enter
rol
inc
xor
xchg
mov
sbb
adc
sti
jle
mov
cmps
retf
xor
adc
mov
js
outs
and
not
push
jmp
into
jle
sbb
push
bound
mov
pop
das
xor
xchg
icebp
jecxz
add
fmul
mov
movs
jns
mov
aaa
sbb
movs
or
xor
mov
ror
repnz
add
ficomp
and
jg
push
(bad)
addr16
icebp
lock
out
xor
mov
xchg
clc
jb
jbe
and
push
out
test
add
aaa
dec
jl
mov
push
xor
mov
nop
mov
or
ds
dec
dec
repz
push
test
dec
xchg
adc
out
cdq
imul
pushf
les
movs
daa
mov
lds
jge
mov
data16
mov
xor
jbe
ffree
dec
ins
push
adc
mov
pop
std
push
cmp
test
jl
sahf
cmc
xchg
xlat
movs
lods
xlat
mov
fcom
add
push
(bad)
popf
mov
cmp
cmc
push
(bad)
and
mov
lods
ficom
loope
mov
cmp
xor
(bad)
in
mov
push
add
fisub
mov
sti
stc
outs
push
sbb
push
fcom
(bad)
and
sbb
dec
daa
dec
mov
imul
push
ins
xchg
mov
xor
vmovq
mov
xchg
pop
mov
cmp
mov
pushf
pop
dec
push
fldlg2
mov
loope
xchg
std
sbb
(bad)
in
and
xor
setno
mov
retf
pusha
std
dec
mov
xor
add
pushf
inc
inc
mov
jo
ud0
dec
stc
es
hlt
pop
into
xchg
rcl
sbb
mov
xchg
sub
into
jmp
sbb
enter
mov
ficom
stos
inc
out
test
push
in
xor
int
fdivp
inc
imul
pop
jne
add
cmp
retf
cmps
lds
jne
dec
adc
ins
fdiv
push
jl
sub
cmps
std
outs
xchg
mov
test
pushw
frstor
dec
mov
shr
stos
mov
xor
xchg
sbb
jmp
cld
push
mov
out
sub
shl
mov
pusha
sbb
lea
xchg
mov
adc
imul
dec
lods
es
pop
cld
shl
in
sbb
mov
fisubr
xor
xor
xchg
adc
lods
jo
pusha
fimul
and
or
(bad)
out
in
sbb
hlt
jno
pop
mov
arpl
cld
fistp
bound
mov
out
xchg
jbe
sbb
push
add
test
leave
mov
in
inc
sub
leave
inc
cld
aam
dec
push
in
je
pop
clc
jmp
add
jmp
repz
mov
aam
jbe
fdiv
test
push
add
sub
mov
ret
data16
cmc
popf
sbb
sti
aad
mov
fild
ret
mov
xor
mov
cmps
mov
adc
push
daa
out
(bad)
lock
cmp
adc
repnz
pop
add
mov
leave
cwde
sbb
shl
out
pop
hlt
cld
jl
pushf
xchg
add
push
dec
or
loopne
pop
push
cmovo
ret
or
movs
dec
lods
mov
popf
cs
movaps
jns
loope
inc
bound
cs
sub
pop
push
inc
pop
scas
dec
imul
pop
cld
(bad)
aaa
xchg
xor
dec
jno
stos
arpl
fiadd
mov
inc
pop
push
pop
jecxz
fwait
(bad)
jae
data16
pop
scas
xor
pop
dec
sbb
dec
imul
push
je
push
push
in
in
imul
jle
pop
dec
cmp
stc
adc
jp
sbb
push
sahf
xchg
mov
into
int3
mov
pop
jno
data16
push
push
jmp
in
adc
mov
es
sub
shl
out
sbb
jecxz
aaa
push
push
mov
pop
jbe
aad
pop
cmp
loop
pop
call
xor
dec
sbb
sub
mov
jle
pop
shr
cmps
jbe
or
add
jmp
movs
lods
pop
add
mov
xchg
jo
shl
scas
and
push
mov
enter
fs
scas
push
rol
into
pushf
or
dec
sub
ret
and
pop
test
loop
inc
sub
push
add
jno
cmc
and
push
cmp
adc
loope
inc
xor
mov
mov
dec
adc
cmp
jl
ror
xlat
push
pop
jmp
es
inc
xor
xlat
and
xlat
mov
pop
mov
aas
mov
dec
call
gs
ret
cmp
clc
add
(bad)
pop
rol
add
es
add
ret
push
mov
cmp
sbb
sbb
push
mov
pop
ins
test
rol
repnz
xchg
push
mov
mov
ds
adc
or
inc
ficomp
push
int
sub
repnz
test
fwait
mov
lea
or
rcr
shr
pop
(bad)
cs
out
aas
idiv
out
mov
out
adc
jnp
cmp
test
addr16
sti
dec
or
xchg
mov
pop
xchg
push
rol
jmp
hlt
in
(bad)
pop
shr
rol
mov
sbb
into
push
daa
jb
lods
or
add
mov
pusha
btr
push
outs
into
adc
sbb
(bad)
xor
and
ins
push
or
shl
ror
cmps
adc
push
mov
xchg
in
sbb
les
xor
push
jno
cmps
mov
inc
inc
xchg
icebp
popf
(bad)
ror
pop
fsubr
cmp
jnp
cmc
mov
movs
lods
xor
fnclex
stos
pusha
adc
jnp
enter
js
push
adc
out
scas
(bad)
xchg
cdq
cmps
mov
in
loop
(bad)
out
in
jnp
imul
gs
(bad)
je
cwde
loop
mov
ja
xchg
in
mov
sbb
sub
pop
jnp
push
shl
xchg
or
mov
sbb
aam
(bad)
mov
int
dec
mov
(bad)
outs
jnp
cmc
push
lahf
mov
cwde
pop
sbb
add
dec
ss
xchg
xor
sub
sbb
out
push
imul
mov
pop
(bad)
lock
xor
pushf
mov
scas
(bad)
cmp
dec
cmp
adc
and
push
jns
sub
in
fst
cwde
aam
mov
shr
pop
in
add
test
arpl
push
adc
adc
in
mov
lock
jb
test
dec
loopne
cmc
pop
jg
push
and
pop
mov
jnp
mov
or
jnp
dec
xchg
pop
call
pop
rcl
popa
or
dec
and
dec
and
push
gs
cli
pop
mov
mov
dec
jnp
lahf
int3
and
xlat
les
jecxz
test
pop
les
(bad)
push
mov
mov
fnstenv
mov
hlt
jb
aad
test
push
cli
test
add
iret
cmp
dec
out
xor
sub
cmp
or
dec
jbe
cld
jge
xchg
add
in
xor
xchg
imul
(bad)
jns
das
gs
xchg
out
push
push
imul
dec
or
mov
xchg
fld
(bad)
out
sahf
(bad)
mov
or
cmp
or
inc
xor
sub
mov
sub
mov
jmp
and
stos
bound
push
cmp
push
pop
jecxz
fs
jp
fild
dec
leave
push
stos
ror
adc
sbb
pop
stos
aad
test
push
xor
js
outs
pushf
pop
jnp
stos
movs
mov
fwait
sub
or
mov
jl
leave
pop
lods
fist
cmp
mov
rcl
sub
push
jecxz
fwait
sbb
imul
push
xchg
jl
lds
cmc
xchg
movs
mov
nop
pop
sub
clc
cmp
pop
sbb
pop
fisub
adc
hlt
mov
pop
das
mov
jae
cmp
inc
arpl
cmc
push
inc
adc
mov
lock
nop
or
sub
mov
outs
pop
imul
scas
cmp
nop
inc
jl
lss
out
aam
lock
pop
pusha
sub
enter
add
les
dec
mov
fcomp
jecxz
cmp
dec
fsin
add
mov
outs
iret
xor
adc
jp
jo
call
aas
mov
inc
mov
lods
cmp
adc
out
adc
mov
loope
loopne
cmps
and
fs
in
fdivp
mov
fld
sti
gs
ins
enter
(bad)
not
retf
std
mov
jp
and
xor
pop
aad
retf
fisub
mov
xor
inc
loope
iret
ins
std
cdq
loop
pop
add
rol
pop
sbb
addr16
imul
mov
out
rcr
cwde
pop
stos
movs
jecxz
cmps
std
iret
ja
jae
mov
shr
shl
outs
sub
jge
imul
out
xor
inc
jmp
hlt
and
pop
and
inc
enter
push
cdq
and
sti
rcl
push
loope
cmc
loopne
call
pop
jp
mov
sbb
adc
dec
cmp
sti
dec
add
xor
js
loope
pop
movs
inc
push
and
and
ret
or
int3
test
or
in
push
(bad)
mov
pusha
push
add
xchg
pop
and
sbb
sbb
ret
xchg
test
stc
inc
add
out
loope
push
(bad)
sti
xchg
loopne
and
sti
stc
iret
int
push
cmps
shl
inc
push
push
aas
mov
fnstenvw
and
leave
in
mov
sbb
fisub
jl
rcl
sahf
xor
fdivp
or
add
(bad)
idiv
adc
cmp
sar
cmps
enter
fcom
and
mov
cs
push
mov
jbe
lahf
dec
and
inc
cmp
fild
push
sbb
les
inc
sbb
pop
sbb
jmp
mov
clc
ja
dec
stc
outs
inc
mov
adc
pop
jne
and
add
(bad)
lods
js
test
stc
in
xchg
xor
rcl
ins
adc
mov
pop
icebp
fstp
shl
xlat
dec
cmp
stc
fld1
xor
xor
xchg
pusha
or
sti
bound
(bad)
out
pop
add
pop
aam
sbb
jnp
hlt
mov
(bad)
jl
rcr
mov
imul
cld
add
or
in
aam
pop
rol
icebp
and
loop
scas
add
pop
lods
or
emms
cmovb
sbb
cmp
xchg
shl
or
add
jle
push
jg
xchg
pop
cmps
or
fmul
scas
xchg
fwait
cmp
ds
fcmovnu
in
(bad)
ja
add
mov
sub
popa
test
imul
ret
inc
mov
(bad)
add
enter
nop
pop
push
cmp
in
in
adc
fist
mov
test
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
add
mov
add
js
add
test
add
dec
or
adc
add
sbb
add
pop
adc
add
add
add
add
add
add
add
add
movs
adc
and
add
add
add
add
add
add
add
add
or
add
add
lock
sbb
add
in
add
add
add
add
sub
add
add
call
add
add
add
add
add
cmp
add
pusha
add
add
add
mov
add
fadd
add
add
add
sub
add
push
add
xor
add
js
add
mov
add
add
add
xor
add
lock
xor
add
sbb
cmp
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
xor
add
pop
add
add
add
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
cwde
push
add
rol
or
add
push
add
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fadd
add
add
add
sub
add
push
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
sub
add
in
add
add
add
add
add
or
add
sub
add
xor
or
sub
add
in
add
add
add
add
add
or
add
push
add
add
add
add
in
add
add
add
add
add
or
add
js
add
hlt
ror
add
add
add
add
add
add
add
or
add
mov
(bad)
or
mov
add
in
add
add
add
add
add
or
add
enter
in
iret
or
test
add
in
add
add
add
add
add
or
add
lock
add
add
add
add
add
add
add
or
add
sbb
add
cwde
loopne
add
add
add
add
add
add
or
add
inc
add
add
add
inc
add
in
add
add
add
add
add
or
add
add
fadd
add
in
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
or
add
mov
add
add
in
add
add
add
add
add
or
add
add
add
mov
add
add
in
add
add
add
add
add
or
add
add
add
add
add
in
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
add
sbb
or
push
add
add
add
add
add
or
add
sahf
or
push
add
add
add
add
add
or
add
mov
add
in
add
add
add
add
add
or
add
add
add
add
add
in
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
add
or
push
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
or
add
add
hlt
mov
add
in
add
add
add
add
add
or
add
mov
add
in
add
add
add
add
add
or
add
add
or
push
add
add
add
add
add
or
add
add
or
push
add
add
add
add
add
or
add
push
add
xchg
retf
push
add
add
add
add
add
or
add
push
add
cld
into
or
push
add
add
add
add
add
or
add
add
ror
add
add
in
add
add
add
add
add
or
add
xlat
or
push
add
add
add
add
add
or
add
fmul
add
add
in
add
add
add
add
add
or
add
push
add
pushf
loopne
add
add
in
add
add
add
add
add
or
add
pop
add
add
or
push
add
add
add
add
add
or
add
pop
add
ins
jmp
add
in
add
add
add
add
add
or
add
add
aam
or
push
add
add
add
add
add
or
add
add
cmp
or
push
add
add
add
add
add
or
add
test
push
add
add
add
add
add
or
add
pop
add
or
or
push
add
add
add
add
add
or
add
pop
add
je
or
push
add
add
add
add
add
or
add
or
add
add
sub
add
in
add
add
add
add
add
or
add
add
add
or
push
add
add
add
add
add
or
add
add
ins
or
push
add
add
add
add
push
add
add
add
add
add
or
add
add
or
add
xor
add
pop
or
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
in
add
add
add
add
add
or
add
or
add
or
aam
add
in
add
add
add
add
add
or
add
or
add
or
dec
add
add
add
add
add
add
add
or
add
add
adc
add
add
in
add
add
add
add
add
or
add
add
clc
push
or
xor
add
in
add
add
add
add
add
or
add
sbb
or
add
add
add
add
add
mov
add
retf
cmp
add
and
add
add
add
add
add
add
add
or
add
or
add
pop
or
mov
add
add
add
add
add
or
add
or
add
cmp
add
add
add
add
add
add
add
add
or
add
or
add
add
in
add
add
add
add
and
arpl
add
js
add
mov
add
add
or
sub
add
sbb
or
add
inc
or
or
add
push
add
add
add
add
add
add
or
or
add
or
add
xor
add
pop
or
add
or
add
add
add
or
add
clc
or
add
and
add
dec
push
add
jo
add
cwde
push
add
ror
sbb
add
call
add
add
sldt
cmp
add
pusha
sldt
mov
add
mov
add
fmul
add
add
add
sub
add
push
adc
and
add
js
add
mov
add
add
adc
sub
add
lock
add
add
add
add
add
add
add
add
or
add
nop
or
add
or
add
add
add
add
add
add
or
add
mov
dec
or
adc
add
in
add
add
add
add
add
or
add
loopne
add
lods
dec
or
adc
add
in
add
add
add
add
add
or
add
or
add
dec
or
and
add
in
add
add
add
add
add
or
add
or
add
dec
or
adc
add
in
add
add
add
add
add
or
add
add
clc
dec
or
adc
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
or
add
or
adc
add
in
add
add
add
add
add
or
add
or
add
or
adc
add
in
add
add
add
add
add
or
add
or
or
adc
add
in
add
add
add
add
add
or
add
add
jo
or
adc
add
in
add
add
add
add
add
or
add
add
test
add
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
or
or
adc
add
in
add
add
add
add
add
or
add
or
or
adc
add
in
add
add
add
add
add
or
add
push
add
aam
or
adc
add
in
add
add
add
add
add
or
add
push
add
call
add
add
add
add
add
add
add
or
add
add
cld
push
or
adc
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
push
add
cmp
add
add
in
add
add
add
add
add
or
add
sldt
dec
push
or
adc
add
in
add
add
add
add
add
or
add
sldt
pusha
push
or
adc
add
in
add
add
add
add
add
or
add
add
je
or
adc
add
in
add
add
add
add
add
or
add
add
mov
add
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
sldt
mov
or
adc
add
in
add
add
add
add
add
or
add
sldt
les
add
add
in
add
add
add
add
add
or
add
adc
add
push
or
adc
add
in
add
add
add
add
add
or
add
add
in
push
or
adc
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
push
or
adc
add
in
add
add
add
add
add
or
add
adc
add
add
add
in
add
add
add
add
add
or
add
adc
add
or
adc
add
in
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
ror
enter
in
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
or
add
dec
or
add
add
add
add
add
add
dec
add
add
dec
add
dec
add
dec
add
add
push
add
add
dec
add
add
dec
add
or
dec
add
push
add
push
add
add
dec
add
or
dec
add
dec
add
add
dec
add
(bad)
cld
or
sub
add
adc
add
and
add
add
and
aaa
(bad)
inc
jle
inc
add
(bad)
test
loopne
stos
in
int3
stos
(bad)
shr
lds
stos
xlat
mov
stos
mov
sldt
add
cmc
lock
cmc
push
out
in
out
loope
(bad)
in
fcmovnb
(bad)
jmp
sar
iret
mov
(bad)
jmp
add
add
adc
add
div
jmp
stc
div
(bad)
clc
hlt
out
push
out
out
int
movs
jmp
cmp
(bad)
out
loope
(bad)
hlt
jecxz
call
adc
add
hlt
out
mov
rol
mov
jmp
cmp
fdivr
cmp
into
mov
jmp
mov
xor
add
add
repnz
inc
(bad)
cmps
nop
js
mov
xchg
ja
in
fcmovne
jmp
sar
inc
add
add
add
add
sldt
add
add
add
add
add
clc
hlt
lock
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
call
inc
jmp
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
cld
imul
(bad)
clc
in
loope
in
(bad)
cmc
retf
pop
add
add
stc
hlt
out
mov
test
(bad)
(bad)
(bad)
(bad)
(bad)
sti
stc
idiv
fxch
(bad)
xchg
repz
(bad)
(bad)
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
sti
bnd
jecxz
lds
add
lock
inc
(bad)
(bad)
dec
mov
cmp
imul
in
in
fmulp
push
sub
gs
popf
addr16
popf
push
call
pusha
xor
add
add
(bad)
(bad)
(bad)
mov
mov
jmp
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmc
lock
cmps
jp
(bad)
xchg
pusha
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
mov
mov
ret
mov
mov
test
jmp
ud0
mov
mov
push
push
movs
jmp
sar
(bad)
call
sar
out
mov
adc
ret
(bad)
pop
mov
ret
inc
xchg
pop
inc
lea
ret
lea
ror
in
loopne
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
call
scas
adc
add
add
sar
jmp
sar
jmp
sar
out
mov
(bad)
icebp
in
jmp
loope
mov
div
mov
stc
stc
clc
mov
retf
ret
add
add
stc
cmc
icebp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
sti
cmc
in
call
and
repnz
jmp
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
cld
sti
enter
and
cmps
(bad)
jge
(bad)
inc
add
aas
add
cmp
add
aas
add
add
add
add
add
add
add
add
add
aas
add
(bad)
inc
add
or
sub
add
sbb
add
xor
add
add
and
mov
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
sahf
pop
jmp
fmul
jmp
fstp
jmp
fcmovne
(bad)
(bad)
(bad)
fabs
sar
(bad)
enter
leave
mov
fcmovnb
scas
(bad)
ret
stos
(bad)
shl
jle
inc
inc
loope
stos
sbb
div
jmp
jmp
repz
push
loop
(bad)
in
fmul
(bad)
jmp
jmp
sar
jmp
into
mov
jecxz
mov
jmp
arpl
ffreep
cmps
sbb
cmc
lock
out
push
out
in
icebp
out
(bad)
in
(bad)
(bad)
out
(bad)
jmp
sar
jmp
iret
mov
in
mov
jecxz
mov
jmp
gs
push
loopne
cmps
sbb
hlt
out
jmp
icebp
push
repz
push
out
out
cli
repz
sub
xchg
repz
fcos
out
jecxz
(bad)
hlt
in
(bad)
jge
inc
push
loop
scas
sbb
div
jmp
idiv
loop
into
(bad)
jmp
dec
sbb
jmp
xor
call
mov
mov
(bad)
jmp
push
loope
scas
sbb
div
jmp
(bad)
jno
push
inc
jmp
xchg
js
fmul
mov
jge
inc
(bad)
jmp
aam
(bad)
in
mov
inc
add
add
add
add
int3
mov
div
in
jmp
mov
ja
cmp
aad
lods
inc
(bad)
(bad)
mov
call
mov
into
jmp
aam
jmp
sar
jmp
add
add
add
add
add
add
add
add
daa
add
add
add
add
loope
lods
sbb
div
jmp
leave
(bad)
jp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
ret
(bad)
(bad)
stc
out
(bad)
and
dec
mov
cmc
call
(bad)
cld
sti
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
std
stc
cmc
(bad)
sti
cmc
in
(bad)
clc
out
jecxz
repnz
call
(bad)
mov
loope
scas
sbb
div
jmp
(bad)
pop
ds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
les
push
(bad)
out
(bad)
mov
(bad)
cli
div
(bad)
sti
sti
clc
(bad)
div
in
push
in
jecxz
lock
(bad)
in
(bad)
(bad)
jmp
(bad)
jmp
sar
jo
add
add
add
add
leave
scas
sbb
div
jmp
(bad)
(bad)
jp
ds
(bad)
(bad)
(bad)
(bad)
std
cld
sti
(bad)
cli
div
(bad)
jmp
cmp
mov
bnd
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
stc
(bad)
sti
hlt
in
push
in
loop
repz
(bad)
xlat
retf
jecxz
mov
div
jmp
stc
hlt
out
(bad)
fcmovne
mov
js
cmp
(bad)
std
cmc
push
jmp
mov
(bad)
fmul
mov
(bad)
out
loope
jmp
int3
mov
test
inc
jmp
outs
cmp
mov
jo
jmp
je
call
push
add
add
add
loope
scas
sbb
div
jmp
vhaddps
(bad)
(bad)
(bad)
(bad)
inc
mov
xor
out
into
(bad)
(bad)
sti
clc
push
out
out
bnd
mov
mov
inc
push
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
scas
je
jmp
add
add
add
add
int
sbb
(bad)
(bad)
jmp
retf
fs
(bad)
jmp
push
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cli
(bad)
stc
div
(bad)
in
(bad)
dec
mov
outs
dec
sahf
outs
dec
sahf
ins
dec
lahf
outs
dec
pushf
imul
pushf
imul
call
(bad)
cdq
push
rcr
mov
(bad)
push
cmp
inc
push
add
ret
sahf
js
rcr
(bad)
mov
xchg
ins
(bad)
mov
xchg
push
faddp
movs
jmp
les
jmp
lds
jmp
(bad)
stos
(bad)
ffreep
movs
(bad)
fnstsw
mov
add
add
add
add
xor
scas
jno
jmp
push
cmp
scas
jae
jmp
xor
stos
jo
jmp
outs
xor
stos
jbe
push
hlt
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
div
(bad)
out
out
(bad)
ror
shl
add
add
add
int
ins
sbb
fwait
imul
retf
call
int3
fwait
push
dec
call
int3
call
retf
dec
cdq
data16
clc
hlt
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
std
cld
(bad)
std
std
std
push
out
jmp
add
add
add
add
mov
stos
jmp
stos
jmp
lds
jmp
les
jmp
ret
cmps
jmp
les
(bad)
ffreep
mov
push
in
jecxz
icebp
in
out
stc
div
int
div
iret
cli
stc
test
cli
cli
stc
iret
idiv
not
aad
lds
add
add
add
add
retf
sti
clc
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
std
sti
push
in
jecxz
imul
fdivrp
jg
push
push
(bad)
(bad)
inc
add
add
loope
scas
sbb
div
jmp
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
std
cld
(bad)
sti
cli
idiv
cli
repz
add
add
les
add
(bad)
lods
sbb
repnz
aad
stc
clc
jecxz
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
clc
mul
clc
stc
clc
jecxz
cli
clc
out
xchg
dec
mov
xchg
add
sar
mov
(bad)
adc
mov
adc
mov
adc
mov
adc
vmovups
ret
rcl
aam
adc
inc
add
add
add
(bad)
mov
add
add
add
(bad)
inc
(bad)
(bad)
inc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
mov
or
sub
add
and
add
inc
add
add
add
add
test
pop
and
mov
daa
xchg
xchg
nop
xchg
nop
test
mov
jp
lea
ja
lea
jb
mov
daa
mov
mov
dec
or
add
add
into
mov
imul
jmp
fdivp
in
in
repnz
repnz
(bad)
repnz
mov
repnz
mov
loop
mov
fmulp
mov
fmulp
mov
faddp
lods
repnz
lods
repnz
cmps
repnz
scas
cli
mov
add
add
jmp
(bad)
sti
clc
cmc
(bad)
clc
repz
push
out
out
bnd
aam
out
fmulp
(bad)
in
fcmove
(bad)
jmp
(bad)
jmp
sar
jmp
into
mov
in
mov
jecxz
scas
(bad)
call
jae
imul
add
add
fadd
dec
cli
clc
hlt
(bad)
std
cld
sti
(bad)
stc
div
push
icebp
jmp
call
sar
in
(bad)
(bad)
jmp
(bad)
(bad)
jmp
aam
jmp
sar
jmp
iret
mov
out
mov
(bad)
call
jne
imul
add
add
(bad)
ret
div
(bad)
sti
stc
idiv
sti
clc
cmc
push
icebp
jmp
call
aad
out
(bad)
(bad)
call
mov
ret
(bad)
jmp
jmp
sar
jmp
retf
mov
jmp
imul
add
add
xlat
ret
dec
stc
div
(bad)
sti
stc
idiv
cli
div
(bad)
cli
cmc
icebp
push
repz
push
lock
push
jmp
inc
ud0
xor
push
jmp
icebp
out
push
in
push
jecxz
dec
add
add
fcmovne
dec
sti
clc
cmc
(bad)
(bad)
std
cld
(bad)
std
cld
cli
(bad)
cli
clc
repnz
jmp
loop
icebp
out
(bad)
fcmovne
mov
jmp
mov
sub
pop
inc
sub
call
sar
jmp
int3
mov
jmp
js
imul
add
add
fcmovne
dec
sti
clc
cmc
(bad)
(bad)
std
cld
(bad)
std
std
std
(bad)
jmp
dec
xor
xchg
(bad)
clc
lock
lods
xchg
jne
xchg
je
push
in
jmp
xor
(bad)
out
fcmovb
(bad)
call
sar
jmp
sar
jns
imul
add
add
fcmovne
dec
sti
clc
cmc
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
xor
pop
inc
xor
scas
fwait
xchg
dec
sub
call
lds
ds
(bad)
cld
loop
(bad)
jmp
(bad)
(bad)
jmp
sar
out
fld
call
add
add
add
in
fcmovne
dec
clc
hlt
out
push
icebp
jmp
xchg
jbe
ja
cmp
repz
call
call
xor
out
(bad)
call
xchg
ja
cmc
call
(bad)
(bad)
jmp
(bad)
ret
iret
mov
inc
add
xor
inc
add
cmp
add
dec
add
cmp
cmp
add
cmp
add
xor
add
add
fcmovne
dec
sti
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pusha
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cld
repz
sbb
push
inc
call
movs
nop
push
jmp
fdivr
out
mov
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
sti
(bad)
std
stc
idiv
sti
div
(bad)
cli
repz
imul
jecxz
imul
(bad)
xlat
retf
jmp
leave
dec
sti
clc
cmc
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
inc
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cli
(bad)
cld
stc
cmc
(bad)
in
loopne
call
lds
(bad)
mov
and
dec
mov
(bad)
in
xlat
ret
jmp
int
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
stc
(bad)
stc
cmc
lock
lock
push
out
(bad)
out
loop
(bad)
in
fmulp
(bad)
jmp
(bad)
(bad)
jmp
mov
add
jmp
leave
dec
sti
clc
cmc
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pusha
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
sti
stc
idiv
div
in
(bad)
clc
lock
push
xor
push
sub
(bad)
in
(bad)
jmp
int
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
(bad)
sti
stc
idiv
div
jmp
imul
out
repz
out
loopne
(bad)
in
fcmovne
(bad)
jmp
out
add
add
fcmovne
dec
sti
clc
hlt
(bad)
cld
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pusha
inc
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
clc
(bad)
std
std
sti
(bad)
stc
cmc
icebp
push
jmp
call
and
and
cmc
jmp
fcos
icebp
out
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
cld
stc
hlt
(bad)
stc
repnz
call
sar
fmul
mov
add
fcmove
dec
div
in
(bad)
clc
repnz
(bad)
clc
repz
push
pop
aas
(bad)
(bad)
imul
push
out
push
out
jmp
aad
call
add
mov
(bad)
push
(bad)
out
loop
(bad)
out
loope
(bad)
out
loop
call
mov
jmp
jnp
jmp
jp
jmp
jp
jmp
jle
jmp
jle
call
add
add
fcmovne
dec
sti
clc
cmc
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
mov
bound
(bad)
(bad)
(bad)
(bad)
cld
std
(bad)
(bad)
out
jmp
scas
nop
jo
std
stc
hlt
push
icebp
jmp
out
push
in
call
scas
mov
movs
ins
xor
cmps
ins
xor
cmps
ins
xor
cmps
ins
xor
movs
ins
xor
mov
imul
mov
push
jmp
gs
inc
add
add
fcmovne
dec
sti
clc
cmc
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
mov
bound
(bad)
(bad)
(bad)
(bad)
call
sbb
push
(bad)
(bad)
(bad)
sti
stc
idiv
clc
repz
push
lock
push
out
(bad)
fdiv
dec
inc
mov
mov
mov
mov
ret
mov
ret
inc
xchg
ret
inc
xchg
mov
dec
inc
add
add
fmulp
dec
(bad)
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
(bad)
out
jecxz
push
adc
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
sti
clc
hlt
push
repz
push
icebp
jmp
movs
jbe
shl
call
mov
jne
shl
dec
mov
jb
iret
mov
push
add
movs
jge
retf
dec
lods
mov
int
xchg
call
push
cmp
cmp
add
test
pop
dec
mov
dec
stos
mov
enter
(bad)
cmps
cmp
movs
cmp
movs
jle
enter
enter
lds
popf
(bad)
fdivr
cdq
(bad)
fdivr
fwait
(bad)
fnstsw
sahf
(bad)
fnstsw
cwde
(bad)
fstp
mov
scas
je
dec
mov
push
call
dec
and
lea
jmp
call
call
push
call
addr16
mov
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
push
out
in
bnd
shl
add
add
mov
ret
inc
xchg
ret
inc
xchg
(bad)
mov
ret
xchg
rol
inc
test
ret
inc
xchg
rol
inc
add
inc
inc
xchg
imul
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
sti
clc
idiv
repz
ret
add
add
mov
jno
into
lahf
jo
into
lahf
jo
into
lahf
jo
into
lahf
outs
dec
mov
jo
int
outs
dec
lahf
jo
into
sahf
outs
dec
lahf
outs
dec
lahf
jo
int3
popf
ins
dec
popf
ins
dec
lahf
outs
call
cmps
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
(bad)
std
(bad)
(bad)
std
cld
(bad)
std
std
std
(bad)
cli
div
(bad)
fmul
ret
out
add
add
mov
mov
(bad)
fidivr
popf
(bad)
fdivr
call
mov
cdq
(bad)
fdivr
cdq
(bad)
fdivr
(bad)
fstp
xchg
(bad)
fnstenv
icebp
(bad)
div
out
repnz
clc
cmc
jmp
cli
stc
imul
sti
cli
clc
jmp
cli
jmp
cld
jmp
aam
(bad)
in
fcmovb
dec
cli
div
(bad)
cld
cli
clc
(bad)
sti
cli
clc
(bad)
sti
stc
idiv
sti
clc
idiv
sti
clc
idiv
sti
clc
cmc
(bad)
sti
clc
cmc
(bad)
sti
clc
cmc
(bad)
sti
clc
cmc
(bad)
sti
clc
cmc
(bad)
sti
clc
idiv
sti
clc
cmc
(bad)
cli
clc
repz
jmp
repz
jmp
jecxz
adc
in
aad
out
fcomp
call
out
sbb
out
sbb
jmp
jmp
leave
dec
sti
clc
cmc
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
std
std
cld
(bad)
sti
cli
clc
push
call
in
call
add
fcmovne
dec
sti
clc
cmc
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
cli
clc
hlt
(bad)
stc
icebp
call
imul
add
add
fld
dec
div
repnz
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
cli
cli
stc
sti
sti
clc
cmc
call
add
add
(bad)
mov
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
in
cmp
jge
push
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
xor
add
pusha
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
mov
mov
lods
mov
mov
lods
mov
scas
mov
lods
mov
lahf
lods
mov
sahf
lods
mov
popf
lods
mov
cdq
lods
mov
fwait
lods
mov
cdq
lods
mov
cwde
lods
mov
xchg
lods
mov
xchg
lods
mov
xchg
lods
mov
xchg
lods
mov
nop
lods
mov
(bad)
lods
scas
sahf
mov
pushf
mov
mov
pop
pop
in
stos
push
icebp
jecxz
(bad)
std
sti
idiv
sti
div
(bad)
stc
repz
push
icebp
call
push
jmp
push
out
push
in
push
loopne
(bad)
out
fmulp
(bad)
in
fcmovb
(bad)
in
fld
(bad)
jmp
mov
(bad)
jmp
jmp
sar
jmp
iret
mov
out
mov
out
mov
out
mov
in
scas
jmp
enter
into
mov
popf
and
add
add
enter
in
(bad)
std
(bad)
cld
(bad)
cld
stc
idiv
cli
cmc
lock
clc
repz
push
out
call
push
out
push
jecxz
(bad)
out
loope
(bad)
out
fmulp
(bad)
in
fcmovne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
aad
jmp
sar
jmp
iret
mov
in
mov
in
mov
in
mov
in
mov
loop
lods
jmp
into
mov
popf
and
add
add
enter
in
(bad)
std
(bad)
(bad)
(bad)
std
cld
sti
(bad)
cli
div
(bad)
clc
repz
push
icebp
jmp
push
jmp
push
out
push
jecxz
(bad)
out
(bad)
(bad)
in
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
aam
jmp
sar
out
mov
out
mov
out
mov
in
mov
in
mov
loop
lods
jmp
into
mov
popf
and
loop
lods
push
lock
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
std
(bad)
cld
cli
stc
(bad)
cli
div
(bad)
clc
repz
push
lock
push
jmp
lock
(bad)
in
(bad)
(bad)
in
fmul
(bad)
jmp
(bad)
(bad)
jmp
xlat
ret
aam
jmp
sar
out
mov
jmp
sar
jmp
retf
jecxz
scas
jmp
into
mov
sahf
sub
add
add
(bad)
test
(bad)
(bad)
(bad)
std
(bad)
std
cld
sti
(bad)
std
std
cld
(bad)
cld
cli
clc
(bad)
stc
cmc
lock
clc
bnd
div
call
push
call
xlat
(bad)
out
loope
(bad)
out
fmulp
(bad)
in
fcmovb
jmp
sar
(bad)
jmp
(bad)
call
sar
jmp
sar
jmp
retf
mov
loop
lods
(bad)
call
sub
add
add
enter
loope
(bad)
cli
clc
hlt
(bad)
stc
repz
(bad)
clc
repnz
push
out
out
repz
(bad)
icebp
in
push
jecxz
(bad)
out
loopne
(bad)
in
fmulp
(bad)
in
fmul
push
loop
(bad)
mov
pop
aas
push
faddp
(bad)
out
(bad)
(bad)
jmp
aad
(bad)
call
aad
(bad)
call
sar
jmp
mov
add
add
enter
jecxz
(bad)
std
std
std
(bad)
std
cld
sti
(bad)
cld
cld
sti
(bad)
cld
cli
idiv
cld
stc
idiv
sti
clc
hlt
(bad)
stc
div
(bad)
stc
hlt
out
(bad)
clc
repz
push
repnz
(bad)
clc
repz
call
les
push
and
inc
sbb
push
cmp
dec
scas
xchg
(bad)
cli
hlt
in
push
jmp
repz
bnd
(bad)
icebp
loope
call
add
add
int3
mov
repnz
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
std
sti
stc
(bad)
cli
clc
repz
clc
hlt
out
(bad)
clc
repz
push
lock
push
in
push
loop
call
and
dec
movs
jns
mov
dec
sbb
inc
xor
(bad)
fdivr
mov
(bad)
jmp
iret
mov
out
mov
in
mov
call
test
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
cld
cli
push
out
inc
lods
xchg
(bad)
fmulp
mov
push
call
int3
call
push
jmp
and
stc
jmp
sar
push
xor
(bad)
fcmovnb
mov
(bad)
jmp
aam
jmp
sar
jmp
into
mov
jmp
xchg
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
std
(bad)
std
(bad)
clc
hlt
out
inc
cs
push
cmp
dec
mov
call
jmp
adc
xchg
push
loope
inc
test
dec
sbb
jge
cmp
hlt
jecxz
(bad)
jmp
(bad)
jmp
sar
out
mov
jmp
mov
add
add
int3
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
mov
push
xor
(bad)
jns
xor
dec
ss
inc
or
in
(bad)
cmp
es
call
(bad)
dec
and
jmp
(bad)
movs
(bad)
in
(bad)
(bad)
jmp
(bad)
xlat
ret
(bad)
jmp
sar
out
mov
in
xlat
sar
xchg
in
mov
icebp
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
xor
xchg
sub
xlat
leave
call
daa
dec
push
inc
adc
mov
in
jmp
sar
inc
jmp
jmp
ret
(bad)
jmp
(bad)
call
sar
(bad)
in
fadd
call
add
add
mov
add
in
mov
icebp
in
(bad)
cli
div
push
icebp
jmp
push
jmp
push
xor
dec
xlat
(bad)
fadd
movs
dec
adc
dec
ss
call
mov
sar
popf
jge
(bad)
and
ffree
scas
(bad)
out
(bad)
(bad)
in
fmul
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
sar
(bad)
fidiv
lods
outs
daa
add
add
xor
pop
jno
add
xor
pop
jno
add
xor
pop
je
add
xor
pop
imul
pop
push
sub
pop
pop
sub
pop
push
and
inc
in
mov
icebp
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
xor
xchg
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
out
(bad)
jnp
xor
(bad)
(bad)
(bad)
(bad)
push
in
inc
add
push
cmp
call
cdq
jle
retf
lods
(bad)
jmp
aad
push
in
loop
hlt
jmp
in
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
std
cld
cli
(bad)
cld
stc
idiv
cld
clc
hlt
(bad)
cli
div
(bad)
cli
hlt
out
(bad)
stc
lock
push
jmp
into
ret
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
faddp
mov
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cli
(bad)
cld
sti
clc
(bad)
(bad)
cli
hlt
(bad)
cli
div
inc
movs
test
jo
cmp
gs
sub
push
xor
add
cmp
or
cmp
shl
call
shl
std
std
cld
(bad)
cld
sti
clc
(bad)
cli
div
(bad)
clc
repz
push
lock
push
jmp
lock
(bad)
out
loopne
(bad)
out
(bad)
(bad)
in
fcmovb
(bad)
jmp
(bad)
call
mov
into
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
scas
call
or
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
std
cld
cli
(bad)
stc
div
(bad)
stc
hlt
out
push
jmp
jmp
jmp
fmul
dec
and
jl
out
fcmovne
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
cld
std
cld
(bad)
cld
stc
idiv
stc
cmc
lock
repnz
push
out
call
push
jmp
lock
(bad)
out
loopne
(bad)
out
(bad)
(bad)
in
fcmovb
(bad)
jmp
aam
inc
mov
into
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
lods
call
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
cld
stc
idiv
stc
cmc
out
push
icebp
jmp
imul
out
cmc
in
jecxz
bnd
push
push
push
jmp
(bad)
clc
jecxz
(bad)
jmp
jmp
ret
movs
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
std
std
sti
(bad)
sti
div
(bad)
clc
repz
push
icebp
jmp
push
jmp
push
call
xlat
(bad)
out
loope
(bad)
out
fmulp
(bad)
in
fcmovne
(bad)
jmp
inc
mov
add
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
scas
call
or
xchg
jle
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
std
(bad)
sti
clc
cmc
(bad)
stc
hlt
out
(bad)
clc
repz
push
jmp
xor
pop
inc
push
fadd
(bad)
in
(bad)
(bad)
in
fcmovb
(bad)
jmp
(bad)
ret
movs
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
std
(bad)
std
(bad)
(bad)
std
std
(bad)
cld
sti
stc
(bad)
stc
cmc
out
push
bnd
div
call
push
jmp
fcos
lock
(bad)
out
loopne
(bad)
in
fmul
(bad)
jmp
(bad)
(bad)
jmp
ret
mov
add
in
mov
repnz
(bad)
std
std
sti
(bad)
cld
cli
stc
(bad)
cld
sti
stc
(bad)
std
std
cld
(bad)
fadd
stos
call
or
(bad)
(bad)
(bad)
(bad)
(bad)
sti
clc
hlt
(bad)
sti
stc
cmc
(bad)
cld
sti
clc
(bad)
sti
stc
idiv
stc
hlt
out
(bad)
sti
div
inc
and
inc
push
in
loopne
hlt
jmp
bnd
(bad)
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
idiv
cli
div
(bad)
stc
cmc
out
push
lock
cmc
in
loop
repz
fdivr
icebp
jecxz
(bad)
out
loopne
push
fmulp
dec
shl
in
mov
lock
(bad)
stc
div
(bad)
clc
repnz
push
out
out
cmc
in
in
aad
xchg
dec
push
call
in
loope
icebp
in
push
loop
push
loop
push
loop
(bad)
out
loope
inc
and
(bad)
push
out
out
loope
push
loop
push
loope
(bad)
out
loope
(bad)
out
loope
(bad)
ffreep
cmps
(bad)
mov
mov
mov
arpl
mov
popa
push
mov
mov
pusha
push
mov
mov
(bad)
push
(bad)
push
push
push
push
jmp
add
add
int3
mov
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ffree
lods
call
or
xchg
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
xor
or
movs
test
(bad)
cli
hlt
push
bnd
imul
out
hlt
in
loop
icebp
out
push
jecxz
(bad)
out
loope
(bad)
ffree
movs
call
popa
sub
call
popa
sub
call
pop
sub
call
pop
sub
(bad)
pop
sub
nop
pop
sub
nop
pop
sub
(bad)
pop
sub
(bad)
pop
sub
xchg
inc
add
add
int3
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
stos
dec
or
xchg
and
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
cld
cld
cld
(bad)
cli
div
jmp
sub
push
(bad)
cld
(bad)
cli
div
(bad)
clc
repz
push
lock
push
jmp
fdivr
lock
(bad)
ffreep
movs
jmp
jne
jmp
je
jmp
je
jmp
je
jmp
jae
jmp
jb
jmp
jno
jmp
jno
call
add
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
stos
dec
or
xchg
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
jmp
(bad)
cmp
cmp
(bad)
(bad)
(bad)
cld
cld
sti
(bad)
sti
clc
cmc
(bad)
stc
hlt
out
push
bnd
imul
out
hlt
jmp
push
out
push
in
(bad)
ffreep
movs
inc
xchg
ret
inc
xchg
ret
inc
xchg
rol
inc
test
rol
(bad)
mov
add
add
add
add
add
jns
inc
add
add
int3
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnb
stos
dec
or
cdq
sub
(bad)
(bad)
jmp
aad
call
and
inc
daa
push
(bad)
mov
(bad)
(bad)
(bad)
std
std
cld
(bad)
(bad)
std
cld
(bad)
std
cld
cli
(bad)
cli
div
(bad)
clc
repz
push
icebp
jmp
push
jmp
loope
test
retf
dec
xchg
popa
dec
xchg
popa
dec
xchg
popa
dec
xchg
popa
dec
xchg
popa
dec
xchg
popa
dec
xchg
pop
dec
xchg
popa
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
(bad)
mov
add
add
int
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
lods
dec
or
call
call
pop
(bad)
cmp
add
(bad)
lds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
cli
div
(bad)
stc
cmc
out
push
icebp
jmp
in
loop
in
mov
shr
jge
shr
jl
shl
jnp
shl
jnp
shr
jl
shl
jns
shl
js
shl
ja
leave
fwait
imul
add
add
mov
sbb
loopne
scas
jmp
enter
enter
retf
ret
pushf
jae
dec
cs
test
dec
add
inc
popf
jne
loop
mov
ffreep
lods
(bad)
ffreep
lods
(bad)
faddp
test
fadd
mov
(bad)
ffree
movs
(bad)
fstp
popf
(bad)
fidivr
cdq
(bad)
fdiv
jge
fdiv
cmp
stos
jg
aam
jg
aam
jg
aam
cmp
stos
cmp
lods
cmp
lods
cmp
lods
cmp
lods
test
aad
test
aad
test
aad
test
aad
xchg
aad
test
shl
add
test
pusha
sub
xchg
inc
push
and
xchg
inc
pop
(bad)
cmp
adc
dec
xor
inc
pop
sub
xchg
inc
push
and
xchg
inc
push
and
test
xchg
dec
pop
call
pusha
sub
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
clc
repnz
push
in
in
repz
(bad)
iret
les
add
jns
jmp
jae
jmp
jae
jmp
imul
push
sub
cwde
xor
stos
jae
jmp
jno
jmp
jae
jmp
jae
jmp
outs
jmp
jo
jmp
jo
jmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
sti
clc
cmc
push
jmp
push
out
push
out
dec
lds
add
lea
rol
(bad)
mov
add
add
add
add
test
add
add
add
add
add
add
mov
add
add
add
cmp
mov
jg
(bad)
mov
jns
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
stc
repz
push
call
(bad)
rol
mov
add
cdq
gs
enter
leave
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
dec
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
nop
pop
inc
nop
pop
dec
xchg
pop
(bad)
mov
(bad)
(bad)
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
(bad)
push
repnz
push
out
call
(bad)
mov
add
cmps
jns
shl
call
movs
ja
shl
call
movs
ja
shl
call
movs
ja
shl
call
mov
jbe
shl
call
mov
jbe
shl
dec
mov
je
into
mov
je
leave
xchg
popa
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
cld
cld
sti
push
lock
rol
mov
add
mov
sbb
fidiv
xchg
(bad)
fnstenv
(bad)
(bad)
fnstenv
(bad)
fdiv
(bad)
fdiv
mov
fdiv
(bad)
call
mov
(bad)
fdiv
mov
fdiv
(bad)
(bad)
fdiv
mov
xlat
mov
call
mov
call
mov
dec
mov
(bad)
(bad)
cld
sti
stc
(bad)
(bad)
std
sti
(bad)
std
cld
cli
(bad)
std
cld
cli
(bad)
std
cld
cli
(bad)
std
cld
sti
(bad)
std
std
sti
(bad)
(bad)
std
cld
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
call
retf
loop
stos
sbb
hlt
in
jecxz
repz
(bad)
lock
push
loop
(bad)
out
loope
(bad)
out
(bad)
(bad)
out
(bad)
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
fmulp
(bad)
out
(bad)
(bad)
out
fmulp
(bad)
in
fmul
(bad)
in
fcmovne
(bad)
call
sar
in
fcmovne
(bad)
in
fld
dec
mov
fadd
call
loope
mov
in
mov
out
mov
jmp
out
in
in
jmp
mov
in
in
mov
in
in
mov
out
lock
mov
add
in
mov
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
stc
push
in
loop
bnd
sar
hlt
jmp
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
push
call
(bad)
imul
in
test
xchg
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmc
out
push
out
push
out
in
test
mov
in
mov
icebp
out
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
push
lock
jmp
add
add
int
push
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cli
cmc
out
jmp
add
add
ret
loop
int3
fucomp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
(bad)
add
add
mov
(bad)
adc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
adc
mov
mov
adc
leave
enter
jae
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
sldt
lock
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
jmp
(bad)
stc
in
(bad)
clc
jmp
push
call
loop
sti
lock
stc
out
loopne
stc
in
(bad)
clc
jmp
(bad)
clc
jmp
mul
xlat
push
out
push
in
push
loop
push
jecxz
push
loop
push
loope
push
loopne
push
loopne
push
fmulp
push
(bad)
push
fmulp
push
fcmovnb
push
fcmovnb
(bad)
out
fcmovb
(bad)
out
fld
(bad)
out
xlat
mov
(bad)
in
shl
(bad)
in
shl
(bad)
out
(bad)
mov
stos
in
mov
(bad)
(bad)
std
(bad)
std
sti
clc
(bad)
sti
clc
cmc
(bad)
stc
cmc
lock
clc
repz
push
lock
push
in
jecxz
repz
xlat
(bad)
out
jecxz
(bad)
out
loope
(bad)
out
(bad)
(bad)
in
(bad)
(bad)
in
fld
(bad)
jmp
(bad)
(bad)
jmp
jmp
sar
(bad)
jmp
sar
out
mov
out
mov
in
mov
in
mov
in
mov
out
mov
in
mov
jecxz
scas
jmp
enter
lds
jmp
add
add
int
(bad)
(bad)
(bad)
std
(bad)
std
std
sti
(bad)
cld
cli
idiv
sti
div
(bad)
stc
hlt
out
(bad)
clc
repz
push
lock
push
jmp
push
out
push
in
push
jecxz
(bad)
out
loopne
(bad)
out
fmulp
(bad)
in
fcmovne
(bad)
in
fcmovb
(bad)
jmp
(bad)
(bad)
sar
sar
(bad)
jmp
(bad)
call
sar
jmp
iret
mov
out
mov
in
mov
in
mov
out
mov
in
mov
in
scas
jmp
(bad)
stos
jmp
int3
mov
movs
mov
add
add
into
mov
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
cld
sti
(bad)
sti
clc
cmc
(bad)
stc
cmc
lock
clc
repz
push
icebp
jmp
in
in
repz
fcos
lock
push
loop
(bad)
out
(bad)
(bad)
out
(bad)
(bad)
in
fcmovb
(bad)
jmp
(bad)
(bad)
sar
aad
(bad)
jmp
(bad)
jmp
jmp
sar
jmp
sar
jmp
iret
mov
out
mov
in
mov
in
mov
jecxz
scas
jmp
(bad)
lods
jmp
int
jmp
add
in
mov
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
sti
clc
(bad)
sti
div
(bad)
stc
hlt
out
(bad)
clc
bnd
div
call
push
in
loop
bnd
fcos
lock
(bad)
out
loopne
(bad)
out
fmulp
(bad)
in
fmul
(bad)
in
fcmovb
(bad)
jmp
ret
aad
(bad)
jmp
(bad)
jmp
sar
jmp
sar
jmp
iret
mov
out
mov
jmp
into
mov
in
mov
jecxz
scas
jmp
leave
lods
jmp
int
jmp
add
in
mov
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
std
(bad)
cld
stc
idiv
cli
div
(bad)
stc
hlt
out
(bad)
clc
bnd
imul
out
imul
in
hlt
jmp
push
out
push
in
push
loop
(bad)
out
loopne
(bad)
out
fmulp
(bad)
in
fmul
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
ret
(bad)
jmp
sar
(bad)
call
sar
jmp
iret
mov
out
mov
jmp
retf
mov
in
scas
jmp
retf
in
mov
movs
mov
in
mov
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
std
cld
(bad)
std
std
cld
(bad)
cld
stc
idiv
cli
cmc
lock
stc
hlt
out
push
icebp
jmp
push
in
in
repz
lock
push
loop
(bad)
out
(bad)
(bad)
out
fmulp
(bad)
in
fcmovne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
sar
jmp
sar
jmp
sar
jmp
int3
mov
jecxz
mov
jecxz
scas
jmp
sar
test
add
add
int3
mov
cld
sti
stc
(bad)
cld
sti
stc
(bad)
std
sti
stc
(bad)
std
cld
cli
(bad)
(bad)
(bad)
(bad)
(bad)
std
sti
clc
(bad)
cli
div
(bad)
stc
hlt
out
push
icebp
jmp
in
in
hlt
jmp
push
out
push
in
(bad)
out
loop
(bad)
out
(bad)
(bad)
out
(bad)
jmp
(bad)
cmps
push
mov
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
sar
jmp
sar
jmp
iret
mov
in
mov
in
mov
loop
stos
jmp
(bad)
stos
jmp
iret
mov
movs
mov
in
mov
sti
clc
hlt
(bad)
stc
cmc
out
push
out
out
cmc
in
loop
repz
xlat
push
loop
push
loope
(bad)
out
loopne
(bad)
out
(bad)
(bad)
in
fmulp
(bad)
in
(bad)
(bad)
in
fcmovne
(bad)
in
fcmove
(bad)
in
fcmovne
(bad)
in
fcmovne
(bad)
out
fdivr
inc
adc
jmp
fdivr
(bad)
in
fcmovne
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
fmul
(bad)
in
(bad)
(bad)
in
fmul
(bad)
jmp
test
add
add
int
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
(bad)
std
cld
(bad)
std
cld
cli
(bad)
cld
sti
clc
(bad)
sti
cli
idiv
sti
clc
hlt
(bad)
cli
div
(bad)
cli
div
(bad)
stc
cmc
lock
stc
hlt
out
(bad)
stc
cmc
out
call
push
inc
adc
inc
sub
push
inc
adc
mov
outs
(bad)
clc
icebp
jmp
push
jmp
push
in
loop
hlt
jmp
push
jmp
repz
(bad)
repnz
(bad)
out
fmulp
jmp
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
sti
stc
(bad)
sti
stc
cmc
(bad)
stc
cmc
lock
clc
repz
push
icebp
jmp
in
in
repz
lock
push
fcmovnb
dec
adc
inc
sub
(bad)
mov
and
xor
push
(bad)
cmp
mov
sar
aam
(bad)
jmp
aad
(bad)
jmp
sar
jmp
iret
mov
in
mov
out
mov
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
sti
(bad)
cld
cli
idiv
sti
div
(bad)
cli
div
(bad)
sti
stc
idiv
div
jmp
imul
out
hlt
jmp
push
out
push
in
jmp
sub
adc
out
fcmovb
(bad)
in
fmul
push
loop
jmp
sbb
inc
sub
pop
(bad)
jmp
(bad)
(bad)
jmp
aad
(bad)
jmp
jmp
sar
jmp
iret
mov
in
mov
out
mov
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
cld
sti
(bad)
std
sti
stc
push
pop
sub
(bad)
stc
lock
imul
in
repz
fdivr
fs
inc
call
loopne
(bad)
in
fmul
call
mov
(bad)
sub
(bad)
sub
(bad)
fidivr
(bad)
jmp
(bad)
jmp
(bad)
call
sar
jmp
iret
mov
call
mov
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
sti
stc
(bad)
mov
sub
inc
push
(bad)
jl
cmp
cli
out
in
cmc
in
loop
shl
adc
inc
sub
(bad)
in
shl
push
loop
(bad)
jle
xor
inc
das
pop
(bad)
js
sub
(bad)
jmp
(bad)
xlat
ret
(bad)
jmp
(bad)
jmp
sar
out
mov
(bad)
jmp
(bad)
jne
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fmul
(bad)
jle
inc
push
sub
inc
sub
inc
jmp
sub
(bad)
jp
inc
pop
dec
out
(bad)
out
loopne
jmp
(bad)
movs
(bad)
sub
(bad)
cmp
scas
mov
in
fmul
(bad)
in
fcmovb
(bad)
jmp
(bad)
fadd
(bad)
jmp
(bad)
call
sar
jmp
sar
jmp
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fcmove
(bad)
jg
inc
jmp
mov
inc
inc
jmp
and
inc
sub
adc
fistp
(bad)
push
out
call
cs
jmp
sbb
(bad)
out
(bad)
(bad)
in
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
aam
(bad)
call
sar
(bad)
jmp
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
cld
stc
(bad)
in
fld
(bad)
jle
and
jmp
sti
stc
call
mov
adc
inc
das
pop
inc
pop
jmp
pop
push
out
in
icebp
in
(bad)
out
aam
inc
adc
inc
sub
(bad)
out
(bad)
(bad)
out
(bad)
(bad)
jmp
(bad)
(bad)
jmp
ret
xlat
ret
(bad)
jmp
(bad)
jmp
sar
jmp
int
(bad)
jmp
(bad)
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
mov
(bad)
stc
cmc
out
push
icebp
jmp
push
jmp
loop
test
jbe
and
inc
cs
call
into
(bad)
out
loopne
call
scas
mov
inc
sub
inc
adc
(bad)
in
fcmovne
(bad)
in
fmul
jmp
cs
call
push
push
(bad)
(bad)
in
fmul
(bad)
in
fcmovne
(bad)
in
fcmovne
(bad)
in
fmul
(bad)
in
fcmovne
(bad)
in
fcmovne
(bad)
in
fcmovne
(bad)
in
fcmovne
(bad)
jmp
leave
scas
(bad)
fdivr
mov
scas
jle
lds
push
adc
ins
mov
ins
mov
ins
xchg
ins
xchg
ins
xchg
ins
xchg
ins
mov
ins
mov
ins
xchg
ins
or
dec
adc
dec
adc
dec
adc
inc
adc
inc
adc
cmp
dec
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
fcmovne
(bad)
jge
and
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
(bad)
(bad)
sti
cmc
(bad)
sti
clc
hlt
(bad)
std
cmc
in
call
inc
push
jmp
xor
scas
cwde
cmp
fdivr
test
push
in
in
cmc
in
loop
cmc
in
loop
repz
stos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
cld
sti
(bad)
cld
sti
clc
(bad)
cld
cli
idiv
sti
clc
cmc
(bad)
sti
div
(bad)
cli
div
(bad)
stc
cmc
lock
stc
hlt
out
(bad)
clc
lock
push
in
loop
hlt
jmp
fcos
repnz
inc
mov
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
in
fcmovb
(bad)
jl
and
jmp
(bad)
(bad)
(bad)
(bad)
std
(bad)
cld
cli
idiv
sti
stc
cmc
(bad)
clc
in
loop
clc
repz
push
icebp
jmp
sub
inc
cs
inc
push
inc
inc
adc
(bad)
cmp
ds
in
sar
(bad)
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
sti
clc
(bad)
cld
cli
idiv
cli
cmc
lock
stc
hlt
out
push
icebp
jmp
push
in
in
hlt
jmp
push
call
fcos
lock
(bad)
out
loope
(bad)
out
fmulp
(bad)
in
fmul
(bad)
in
fcmovb
(bad)
jmp
(bad)
call
sar
mov
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fcmovb
(bad)
jl
and
jmp
(bad)
(bad)
std
std
cld
(bad)
std
std
sti
(bad)
cld
stc
idiv
stc
hlt
out
(bad)
stc
hlt
out
(bad)
clc
repz
dec
mov
(bad)
mov
and
test
push
sbb
dec
inc
adc
(bad)
jmp
(bad)
jmp
mov
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
std
std
sti
(bad)
cld
cli
idiv
sti
div
(bad)
stc
hlt
out
(bad)
clc
repz
push
lock
push
in
loop
repz
icebp
in
push
loop
(bad)
out
loopne
(bad)
out
(bad)
(bad)
in
fcmovne
(bad)
in
fld
(bad)
jmp
(bad)
call
mov
mov
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
vhaddps
inc
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
cld
cli
(bad)
cli
div
(bad)
stc
cmc
out
(bad)
stc
hlt
out
push
icebp
jmp
push
in
in
cmc
in
jecxz
hlt
jmp
push
jmp
(bad)
fcmovnb
movs
dec
adc
push
fadd
(bad)
jmp
(bad)
fnstsw
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
cld
sti
(bad)
sti
clc
cmc
(bad)
stc
cmc
lock
clc
repz
push
icebp
jmp
out
in
hlt
jmp
push
call
fcos
lock
(bad)
out
loope
(bad)
out
(bad)
(bad)
in
fmul
(bad)
in
fcmovb
(bad)
jmp
(bad)
jmp
mov
mov
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fadd
(bad)
jp
and
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
cli
idiv
cli
div
(bad)
stc
hlt
out
push
icebp
jmp
in
in
hlt
jmp
retf
lods
mov
inc
sub
inc
pop
call
sbb
out
xlat
mov
(bad)
jmp
(bad)
fnstsw
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
sti
clc
(bad)
sti
div
(bad)
stc
hlt
out
(bad)
clc
bnd
div
call
push
in
jecxz
repz
icebp
in
push
loop
(bad)
out
(bad)
(bad)
out
fmulp
(bad)
in
fcmovne
(bad)
jmp
(bad)
(bad)
jmp
inc
mov
mov
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fadd
(bad)
jns
and
inc
cs
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
cld
cli
idiv
cli
div
(bad)
stc
hlt
out
(bad)
clc
bnd
div
call
inc
cmps
test
inc
sub
inc
pop
jmp
and
icebp
fld
(bad)
out
fmulp
(bad)
in
fmul
(bad)
in
fcmovb
(bad)
jmp
(bad)
(bad)
fnstsw
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
std
(bad)
cld
stc
cmc
(bad)
stc
cmc
lock
stc
hlt
out
push
lock
push
in
jecxz
repz
icebp
in
push
jecxz
(bad)
out
loopne
(bad)
out
(bad)
(bad)
in
fmul
(bad)
in
fld
(bad)
jmp
inc
mov
mov
out
mov
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
in
fadd
(bad)
jns
and
inc
cs
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
cld
cli
(bad)
cli
div
(bad)
stc
cmc
out
(bad)
clc
repz
(bad)
stc
cmc
lock
pushf
ja
sub
inc
jmp
sub
repz
(bad)
out
(bad)
(bad)
out
(bad)
(bad)
in
fmul
(bad)
in
fcmovb
(bad)
jmp
(bad)
(bad)
fidivr
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
std
std
cld
(bad)
cli
div
(bad)
stc
hlt
out
push
icebp
jmp
in
in
cmc
in
loop
bnd
fcos
icebp
in
(bad)
out
loop
(bad)
out
(bad)
(bad)
out
(bad)
(bad)
in
fcmovb
(bad)
jmp
(bad)
(bad)
jmp
mov
mov
out
mov
(bad)
std
cld
cli
(bad)
cld
cli
clc
(bad)
cld
sti
clc
(bad)
cld
cli
idiv
cld
cli
idiv
jmp
inc
jmp
clc
hlt
(bad)
cli
div
(bad)
cli
div
(bad)
cli
div
(bad)
sti
stc
cmc
(bad)
sti
stc
cmc
(bad)
cli
div
(bad)
stc
hlt
out
(bad)
cld
cli
idiv
mov
sub
inc
push
(bad)
jge
cmp
cli
out
loop
hlt
jmp
repz
repz
(bad)
jecxz
stos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
std
cld
(bad)
cli
div
(bad)
stc
hlt
out
push
icebp
jmp
in
in
hlt
jmp
icebp
out
push
loop
(bad)
out
loope
(bad)
out
(bad)
(bad)
in
(bad)
(bad)
in
fcmovb
(bad)
in
fld
inc
mov
add
out
mov
(bad)
stc
cmc
lock
clc
repnz
push
out
out
cmc
in
jecxz
hlt
jmp
jb
and
inc
cs
jmp
out
push
jecxz
(bad)
out
loope
(bad)
out
loopne
(bad)
out
loopne
(bad)
out
(bad)
(bad)
out
(bad)
push
out
jmp
sub
inc
sub
dec
aad
out
loope
(bad)
out
loope
push
loop
push
loop
push
loop
push
loop
(bad)
out
loope
jmp
retf
mov
leave
cmps
cmp
pushf
js
rcr
(bad)
mov
cdq
jno
mov
cdq
jno
mov
xchg
outs
(bad)
mov
cwde
jno
mov
cwde
jb
mov
fwait
jne
mov
call
mov
cdq
jbe
mov
jge
(bad)
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
ret
dec
and
inc
cs
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
call
sub
call
cli
cmc
push
icebp
jmp
in
in
repz
lock
push
loop
(bad)
out
(bad)
jmp
into
mov
mov
popa
xor
xchg
popa
xor
nop
pusha
xor
nop
pusha
xor
nop
pusha
xor
nop
pusha
xor
(bad)
pusha
das
call
pusha
das
dec
pop
das
dec
pop
das
dec
dec
das
dec
pop
dec
sub
icebp
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
ret
dec
and
inc
sub
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
dec
sub
(bad)
sub
mov
push
(bad)
(bad)
(bad)
std
(bad)
stc
cmc
out
(bad)
stc
hlt
out
push
lock
push
in
jecxz
bnd
fdivr
lock
(bad)
out
loope
jmp
into
mov
stos
jne
jmp
imul
push
jmp
push
jmp
imul
imul
imul
popf
imul
pushf
push
xor
pushf
push
xor
pushf
push
xor
fwait
push
xor
call
lock
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
ret
dec
and
inc
sub
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
cli
inc
sub
(bad)
cmp
xchg
push
(bad)
(bad)
(bad)
(bad)
cld
cli
idiv
cli
div
(bad)
stc
hlt
in
(bad)
clc
bnd
div
call
push
jmp
lock
push
loop
jmp
int
push
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
scas
jbe
jmp
jbe
jmp
jne
jmp
cmp
lods
je
jmp
cmp
stos
jae
call
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
ret
dec
and
inc
sub
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
sti
hlt
push
xor
inc
sub
adc
shl
(bad)
std
(bad)
std
(bad)
std
sti
cli
(bad)
sti
clc
hlt
(bad)
stc
cmc
out
(bad)
stc
hlt
out
push
lock
push
in
jecxz
repz
fdivr
lock
jmp
int
inc
mov
ret
inc
test
rol
inc
test
rol
rol
rol
(bad)
mov
add
mov
add
mov
add
add
test
inc
lock
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
inc
jmp
(bad)
(bad)
(bad)
std
std
cld
(bad)
push
in
jmp
sub
inc
cs
inc
ud0
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
cli
idiv
cli
div
(bad)
stc
hlt
out
push
icebp
jmp
in
in
hlt
jmp
push
out
push
in
jmp
int3
mov
retf
cwde
fs
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
xchg
pop
inc
(bad)
push
inc
nop
push
inc
nop
pop
inc
(bad)
push
inc
(bad)
push
inc
(bad)
push
inc
(bad)
push
inc
mov
mov
lea
lds
push
inc
mov
mov
dec
lock
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
inc
jmp
(bad)
(bad)
(bad)
std
icebp
in
pop
ds
inc
pop
inc
ud0
mov
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
std
(bad)
cld
stc
idiv
cli
div
(bad)
stc
hlt
out
(bad)
clc
bnd
div
call
push
jmp
push
call
mov
shl
ins
dec
popf
imul
pushf
push
int
push
int
imul
pushf
push
int
push
int
push
int
imul
pushf
push
int
imul
popf
imul
fwait
imul
int3
fwait
imul
int3
call
int3
cdq
dec
cdq
addr16
cdq
gs
mov
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
jmp
inc
jmp
(bad)
pop
cmp
inc
pop
dec
adc
fmul
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
cld
cli
(bad)
sti
div
(bad)
stc
hlt
out
(bad)
clc
repz
push
lock
push
jmp
push
jmp
mov
xlat
mov
call
stos
cmp
stos
jg
shr
jle
shr
jge
shr
jle
shr
jge
shr
jge
shr
jnp
shl
jnp
shl
jnp
shl
jp
shl
ins
lock
add
loopne
sahf
stc
out
fcmovnb
(bad)
out
fcmovnb
(bad)
out
fcmovnb
(bad)
out
fcmovnb
(bad)
out
fcmovnb
(bad)
out
fcmovnb
(bad)
fnstsw
and
inc
sub
pop
call
adc
inc
das
pop
dec
(bad)
fdiv
(bad)
(bad)
out
fld
(bad)
out
fld
(bad)
out
fcmovb
(bad)
in
xlat
mov
(bad)
jmp
mov
(bad)
in
aam
(bad)
jmp
jmp
int
jmp
retf
scas
jmp
retf
in
stos
jmp
les
call
scas
test
shl
jno
iret
mov
jo
iret
lahf
outs
dec
mov
jo
iret
mov
jo
shl
jae
shl
je
shl
call
cmps
jns
shl
jns
shl
jnp
shl
jae
mov
push
inc
push
daa
inc
push
daa
inc
push
daa
call
push
inc
push
inc
push
inc
pop
inc
pop
(bad)
jle
sub
adc
inc
push
inc
push
inc
push
daa
inc
push
daa
inc
pop
sub
mov
dec
popa
call
addr16
xchg
(bad)
(bad)
(bad)
(bad)
std
cld
cli
(bad)
std
cld
sti
(bad)
std
std
sti
(bad)
std
cld
sti
(bad)
std
std
sti
(bad)
std
std
sti
(bad)
std
cld
sti
(bad)
std
sti
cli
(bad)
cld
sti
stc
(bad)
cld
sti
stc
(bad)
cld
cli
clc
(bad)
cld
cli
idiv
sti
stc
idiv
sti
clc
cmc
(bad)
cli
div
push
in
in
cmc
jmp
push
call
xlat
push
loop
(bad)
out
loopne
dec
mov
add
mov
cmp
fwait
addr16
sahf
imul
popf
imul
popf
imul
call
cmp
inc
push
call
call
xor
pushf
push
xor
pushf
push
xor
pushf
push
xor
pushf
push
xor
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
cld
stc
idiv
hlt
jmp
repnz
push
in
push
jecxz
dec
mov
add
mov
je
jmp
jbe
jmp
jne
jmp
jne
jmp
push
inc
imul
jne
jmp
jne
jmp
cmp
lods
jne
jmp
jne
jmp
jne
jmp
cmp
stos
jb
jmp
jb
jmp
jb
jmp
jno
dec
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
stc
cmc
out
push
jmp
push
call
fcos
icebp
in
dec
shl
les
inc
(bad)
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
cmp
mov
jle
(bad)
mov
jle
(bad)
mov
jle
(bad)
mov
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
push
lock
push
out
push
in
dec
shl
enter
les
push
inc
(bad)
push
inc
(bad)
push
inc
(bad)
push
inc
mov
(bad)
push
inc
mov
mov
lea
lds
push
inc
mov
lds
push
inc
mov
les
push
inc
lea
lds
push
inc
lea
lds
push
inc
mov
les
inc
mov
les
dec
push
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
push
in
jecxz
repz
(bad)
retf
mov
int
ins
stc
retf
cdq
gs
call
int3
call
int3
call
int3
call
int3
call
int3
call
int3
call
int3
cdq
dec
call
int3
call
retf
cdq
dec
call
int3
call
retf
dec
xchg
popa
dec
xchg
(bad)
dec
xchg
popa
dec
xchg
popa
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
cld
sti
push
call
fdivr
retf
shl
shr
js
shr
jnp
shl
jnp
shl
jnp
shl
jnp
shl
jnp
shl
jp
shl
jp
shl
jns
shl
jp
shl
jp
shl
jns
shl
jns
shl
call
movs
jbe
shl
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
cld
cli
clc
push
out
dec
ret
(bad)
scas
xchg
xlat
mov
(bad)
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
xlat
mov
(bad)
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
xlat
mov
(bad)
fdiv
mov
xlat
mov
dec
cwde
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cli
div
dec
shl
loopne
movs
stc
jmp
jmp
sar
jmp
retf
loop
stos
jmp
les
(bad)
ffreep
mov
(bad)
fistp
popf
(bad)
fnstsw
pushf
(bad)
fnstsw
(bad)
fnstsw
(bad)
fnstsw
(bad)
fnstsw
pushf
(bad)
fidivr
popf
(bad)
fdivr
xchg
(bad)
fstp
mov
xlat
mov
call
mov
dec
call
hlt
jmp
stc
lock
stc
out
out
stc
lock
stc
bnd
(bad)
cli
repz
sti
cmc
out
(bad)
cld
div
(bad)
std
stc
hlt
(bad)
std
cli
cmc
(bad)
(bad)
cld
clc
(bad)
(bad)
std
cli
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
int3
sar
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
repz
(bad)
clc
repz
push
out
jmp
int
jmp
leave
lods
jmp
int
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
sti
clc
repz
jmp
(bad)
bnd
fcos
hlt
in
loop
scas
mov
add
out
mov
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
clc
repz
push
call
(bad)
icebp
out
push
in
jecxz
mov
nop
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
push
lock
push
out
push
in
jecxz
mov
nop
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
push
in
loope
bnd
jecxz
mov
xchg
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
std
sti
push
call
out
mov
xchg
test
add
add
sar
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
std
std
cld
(bad)
std
cld
cli
push
out
out
mov
xchg
test
call
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
mov
call
add
add
mov
mov
iret
into
pushf
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
rcl
iret
fwait
ror
into
fwait
ror
into
fwait
ror
into
fwait
iret
into
int
iret
int
fwait
ror
into
pushf
xchg
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
add
psubb
add
add
add
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
sbb
add
add
and
mov
add
add
add
add
add
add
xor
add
add
add
add
add
add
and
sub
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
daa
add
add
outs
add
ins
add
outs
add
add
add
popa
add
imul
and
popa
add
add
add
add
add
imul
je
sub
add
arpl
imul
add
add
jne
and
outs
add
je
imul
jae
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jae
jns
and
inc
add
outs
add
add
je
and
dec
add
outs
add
add
pushf
add
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
and
sub
add
add
add
add
ja
add
outs
add
add
ins
add
add
jb
add
add
ins
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
or
add
inc
add
add
jb
add
add
inc
add
and
inc
add
add
dec
add
data16
add
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
ja
ja
ja
add
outs
add
add
ins
add
add
jb
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
push
or
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
cmp
sub
outs
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
or
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
jae
arpl
imul
or
gs
gs
gs
jb
jbe
ins
gs
or
or
gs
gs
gs
js
arpl
imul
ins
or
or
or
gs
cmp
outs
jbe
imul
or
or
jne
inc
arpl
jae
cmp
jae
and
or
ds
cmp
jb
jno
gs
gs
jb
jbe
ins
gs
or
das
jae
arpl
imul
das
je
jne
je
outs
outs
ds
cmp
sub
outs
je
data16
je
and
jo
imul
and
outs
fs
arpl
jae
and
or
gs
outs
fs
arpl
or
fs
outs
fs
je
jae
gs
bound
or
cmp
jae
gs
bound
fs
je
je
or
or
gs
xor
and
or
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
or
jb
imul
xor
xor
xor
or
or
addr16
addr16
or
or
or
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
or
or
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
das
ds
das
fs
outs
fs
je
jae
gs
bound
or
fs
outs
fs
arpl
or
cmp
outs
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
popa
jo
ins
imul
ds
cmp
sub
and
and
ins
outs
ja
imul
gs
popa
jo
ins
imul
and
jo
outs
jb
and
jb
push
imul
push
imul
ds
cmp
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
cmp
sub
and
and
ins
outs
ja
imul
gs
popa
jo
ins
imul
and
jo
outs
jb
and
jb
push
imul
aaa
and
or
or
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
das
popa
jo
ins
imul
ds
arpl
jo
je
bound
imul
popa
jae
gs
bound
or
add
or
add
add
push
or
add
push
or
add
push
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
or
add
push
or
add
push
or
add
push
or
add
or
add
push
or
add
push
or
add
push
or
add
add
add
push
or
add
push
or
add
push
or
add
add
add
add
add
add
add
or
add
add
add
add
outs
push
or
add
or
add
add
add
add
add
add
mov
or
add
push
or
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
dec
inc
push
dec
xor
cs
ins
add
dec
inc
dec
inc
xor
cs
ins
add
dec
xor
cs
ins
add
push
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
inc
push
inc
dec
push
cs
ins
add
push
push
dec
dec
dec
cs
ins
add
dec
dec
dec
inc
push
cs
ins
add
dec
dec
dec
cs
ins
add
dec
inc
dec
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
inc
gs
arpl
add
popa
addr16
imul
outs
jbe
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
gs
outs
outs
outs
arpl
outs
push
add
inc
outs
dec
outs
imul
add
inc
outs
jne
push
jb
arpl
jae
jae
add
inc
jb
addr16
imul
inc
gs
inc
add
add
fs
jae
jb
jb
imul
push
gs
jne
jb
push
popa
ins
jne
push
add
inc
je
dec
jo
outs
inc
imul
ins
gs
gs
imul
add
add
repnz
rcl
ret
jo
pusha
add
inc
cld
(bad)
(bad)
push
lock
sbb
cmp
out
add
cld
and
push
and
aas
outs
lahf
call
shl
sbb
(bad)
movs
xchg
mov
add
adc
int3
clc
adc
jge
rol
push
movs
jb
add
pop
add
xor
leave
xlat
add
cmp
stos
dec
sahf
jmp
js
retf
jnp
mov
cmp
add
mov
jmp
mov
aad
rol
or
rol
add
aas
enter
cmp
iret
mov
dec
popf
fisubr
(bad)
ds
xlat
adc
cdq
idiv
xchg
std
xchg
setae
imul
mov
into
sub
cmp
sbb
ss
fsubr
mov
mov
stos
cmp
jae
pop
jnp
jbe
pop
repz
cmp
dec
aaa
jl
mov
push
das
jge
sbb
loopne
cmp
and
jg
xchg
loopne
adc
out
ret
xor
and
jo
mov
adc
pop
mov
mov
pop
xor
sbb
jecxz
push
mov
imul
loope
mov
or
push
xchg
iret
xor
lods
cs
leave
cmp
js
dec
and
xchg
mov
push
pop
cld
push
stc
stos
cmp
(bad)
loopne
xchg
push
dec
(bad)
int3
jo
inc
ret
cdq
out
sub
jle
cwde
cmp
call
mov
movs
jns
inc
inc
mov
jns
dec
aas
(bad)
jnp
pop
push
dec
arpl
xor
fnstcw
call
(bad)
push
test
ret
jle
fnstsw
sbb
dec
daa
ins
cwde
imul
cmp
outs
mov
xor
int3
adc
dec
push
loop
nop
sub
ret
mov
mov
movs
add
in
fistp
retf
int3
cli
int3
or
jns
cmps
addr16
pusha
xlat
ja
push
fs
pop
std
lea
ja
pop
ds
jl
add
mov
jae
xor
push
inc
dec
(bad)
(bad)
mov
ins
cmp
sub
mul
cmp
je
cmp
movs
jecxz
jno
and
div
mov
xor
mov
fldcw
adc
dec
dec
(bad)
sbb
xor
sbb
cmp
jl
ss
shl
jno
sub
rol
add
inc
test
jmp
or
retf
push
mov
mov
mov
outs
loop
stc
jmp
and
mov
mov
in
and
jo
fiadd
xor
jle
bound
fnsave
adc
sbb
out
push
test
cld
push
xor
aam
jmp
jae
mov
sub
mov
jmp
stos
mov
jo
cdq
xor
sar
test
inc
mov
inc
mov
test
lahf
fcmovnu
and
lock
out
out
inc
fwait
mul
xor
out
outs
mov
pop
jp
adc
out
inc
jg
push
cmp
xchg
fcomp
into
shl
pusha
sbb
mov
lahf
mov
add
xchg
cmp
arpl
call
push
call
lea
aad
or
nop
xchg
cdq
aaa
outs
push
mov
xlat
lods
sbb
cmps
retf
pop
xor
fwait
mov
cmp
mov
add
imul
fisttp
jmp
xchg
ret
push
call
arpl
fisubr
pop
out
gs
icebp
sub
data16
ret
adc
inc
jge
dec
inc
daa
les
dec
jmp
push
iret
dec
mov
and
movs
inc
rcl
and
outs
pop
pusha
mov
pop
scas
imul
fist
cmp
dec
scas
ds
sbb
ss
push
je
mov
xor
popf
aad
aas
push
es
sbb
push
inc
inc
(bad)
hlt
jg
cmp
inc
ja
mov
jg
cmp
xor
jne
std
xor
sbb
sbb
std
mov
cs
rcr
sub
and
iret
push
pop
add
add
std
clc
pop
push
and
aas
sbb
lahf
sar
mov
addr16
mov
cmp
sti
iret
xchg
fs
inc
inc
pusha
ret
dec
sbb
push
test
cld
mov
push
jno
lahf
ja
pop
aaa
outs
(bad)
jno
xor
outs
jns
lods
cmp
lods
mov
jmp
cwde
pop
clc
stc
or
out
mov
pop
add
dec
mov
jns
jne
dec
inc
and
pop
outs
xor
sahf
jecxz
add
(bad)
mov
fisttp
test
cmp
mov
cs
and
sub
sub
adc
mov
pop
xlat
pop
in
jbe
mov
dec
push
cld
jbe
loope
mov
jae
shl
jae
aaa
xchg
or
pop
cli
rcr
dec
jmp
(bad)
repz
leave
pushf
dec
loope
mov
add
pop
sbb
lods
sub
mov
cmp
inc
fisttp
lods
mov
jp
cmps
add
test
aaa
into
(bad)
mov
not
adc
and
setl
fistp
add
inc
and
push
or
test
(bad)
shl
push
mov
push
das
das
test
push
xchg
lea
adc
jg
adc
mov
rcr
sbb
push
popa
inc
call
push
and
jno
mov
or
add
or
ficomp
cmp
add
jp
mov
lahf
call
and
(bad)
add
fsub
jle
fisttp
sar
adc
loope
sub
lea
or
clc
lods
lods
popf
mov
dec
jno
arpl
mov
mov
imul
xor
pusha
mov
push
(bad)
cli
xor
cmp
in
sbb
retf
nop
sub
fsub
adc
mov
sub
sub
or
lea
and
jns
loop
mov
add
push
in
rol
add
(bad)
loop
push
or
inc
popa
test
mov
pop
cmp
mov
sub
pop
shl
adc
cmp
add
pop
push
add
sub
fistp
xchg
mov
arpl
jmp
push
nop
sbb
movs
sbb
mov
std
and
pop
std
pop
sahf
leave
in
pop
mov
pop
loopne
xchg
fwait
stos
sbb
pop
xchg
and
pop
pop
mov
stc
inc
test
mov
ja
inc
in
push
ret
or
fdivr
aad
dec
out
(bad)
jae
sub
in
cmp
mov
out
cmp
sahf
js
mov
add
hlt
mov
scas
dec
or
lods
or
pop
in
retf
mov
les
mov
sti
(bad)
jae
cmp
aas
jne
out
ret
xchg
mov
gs
in
xchg
xor
gs
add
sbb
jecxz
aam
push
in
aas
and
lahf
pusha
inc
out
push
call
in
neg
jne
pushf
mov
lock
scas
adc
popa
sub
into
stos
add
cli
mov
jl
pop
(bad)
in
(bad)
jb
push
outs
adc
std
cld
fild
or
pop
fsubr
outs
loope
idiv
outs
cdq
adc
rcl
ret
or
daa
inc
mov
xchg
shl
pop
push
ss
xchg
or
sub
pop
jmp
or
mov
dec
test
jg
movs
pusha
daa
push
stc
cmp
fs
repz
push
(bad)
sahf
inc
mov
stos
jmp
sub
ss
(bad)
fmul
pop
mov
ss
xor
leave
test
xor
xchg
cmp
cmp
jecxz
movs
movs
add
inc
pushf
(bad)
jmp
sub
rcr
bound
fldpi
mov
xchg
int3
iret
sbb
xor
push
test
sbb
movs
out
stc
fmul
aad
cld
inc
shl
cmp
add
cmps
xchg
(bad)
cmps
sbb
imul
or
jb
popa
pop
loope
and
and
out
(bad)
bound
or
inc
mov
fnstsw
repnz
sbb
fstcw
das
ret
jl
jae
test
fwait
push
aam
sub
jo
cld
jmp
data16
out
xor
gs
(bad)
xlat
(bad)
mov
cmp
dec
dec
pop
cmp
push
shr
mov
loop
out
sar
and
repnz
jecxz
gs
sbb
mov
out
fs
stos
into
or
dec
fwait
test
je
xchg
mov
adc
mov
out
mov
fcomp
inc
test
adc
outs
and
dec
or
int
sub
cmp
mov
adc
arpl
int3
test
inc
and
loope
push
xchg
lds
xor
sbb
inc
inc
movs
xor
das
fisttp
adc
cmp
pop
ja
out
jmp
jmp
xchg
cmps
sar
adc
loopne
lea
xor
jecxz
pushw
or
inc
test
out
shl
sbb
out
out
push
mov
add
sti
mov
mov
(bad)
jb
push
nop
das
jecxz
cmp
push
daa
cmps
push
xchg
dec
xchg
lods
xchg
inc
mov
mov
xor
cs
cwde
push
gs
mov
and
sbb
nop
int
pop
cmp
scas
push
fwait
cmp
or
cmp
and
sbb
cmp
pop
add
xchg
dec
jp
xor
sub
or
mov
or
mov
jb
cmps
movs
xchg
adc
enter
add
inc
inc
add
sbb
nop
jnp
xchg
(bad)
fcom
jecxz
stc
(bad)
lea
pop
loope
jne
mov
or
hlt
sbb
rol
(bad)
popf
bound
iret
sub
(bad)
mov
pop
dec
movs
lods
or
call
lds
jnp
mov
movs
out
daa
test
lock
mov
adc
cs
stos
or
push
out
xor
sub
mov
pop
jge
lds
mov
xchg
dec
in
jp
xor
and
fs
(bad)
mov
mov
cmp
fwait
call
retf
adc
inc
(bad)
leave
sbb
push
(bad)
nop
push
mov
push
sar
neg
cmp
cdq
scas
cli
jae
dec
mov
dec
xchg
dec
pop
mov
mov
aam
push
sub
xor
sbb
mov
xor
inc
shr
cmp
test
sub
out
idiv
out
mov
mov
jnp
(bad)
rcr
dec
pop
test
add
xchg
sbb
cmp
lds
ins
jmp
pop
(bad)
xlat
xchg
xchg
pop
pop
xlat
xlat
push
addr16
in
in
jmp
or
jbe
in
sub
lods
mov
sbb
mov
push
pop
inc
xchg
loope
and
xchg
outs
cli
dec
ja
rol
dec
mov
or
and
dec
loop
or
push
pop
and
xor
adc
fdivr
dec
(bad)
jecxz
xchg
add
jo
shl
ins
in
jle
dec
push
in
mov
mov
mov
inc
jae
pop
lods
inc
push
nop
add
pop
pop
cmp
mov
sbb
sbb
icebp
mov
sbb
pop
mov
fld
dec
clc
je
mov
(bad)
fscale
fucomp
mov
mov
add
pushf
push
test
mov
or
stos
outs
aad
fcmovnb
xor
or
cs
push
leave
mul
pop
movs
inc
push
repnz
or
cld
and
xchg
cmp
retf
sub
xor
cmp
popa
int3
jecxz
leave
pop
in
(bad)
mov
arpl
push
sbb
push
mov
pop
cs
imul
sar
enter
sbb
add
sbb
stc
sub
sbb
and
inc
les
xlat
xchg
(bad)
mov
sub
jnp
aad
retf
ins
adc
xchg
inc
fisubr
(bad)
jecxz
and
(bad)
(bad)
cmp
lock
xchg
xchg
in
push
inc
jno
adc
adc
mov
inc
loop
and
mov
loop
lock
jle
inc
pushf
dec
in
call
cmp
dec
test
cld
xor
sti
inc
jmp
mov
dec
push
sbb
sbb
push
aad
sub
lods
sbb
ins
mov
stos
and
jle
sbb
push
dec
outs
jmp
xchg
mov
nop
popa
aad
xor
pop
mov
cdq
inc
pop
enter
mov
jmp
add
jp
mov
adc
frstor
std
sar
ss
and
cmp
mov
(bad)
iret
jo
push
out
pushf
sub
jns
adc
add
cmps
dec
sub
lods
push
call
jno
jmp
ror
adc
inc
dec
sbb
cmp
and
jge
(bad)
jge
dec
(bad)
dec
in
add
cmp
xor
ss
data16
inc
add
mov
inc
stos
sub
pop
mov
xchg
shl
add
stc
ret
call
mov
push
in
(bad)
jge
and
mov
cdq
cli
aad
int3
in
(bad)
(bad)
cwde
icebp
ja
loope
je
(bad)
push
jbe
and
(bad)
mov
jnp
mov
jnp
and
mov
sbb
imul
into
pop
mov
push
pop
gs
adc
and
pop
aaa
pop
pop
int3
sbb
out
sahf
inc
call
jge
aaa
lock
lahf
jb
test
jle
bound
int
jbe
in
xchg
ret
add
icebp
mov
cmp
pushf
(bad)
sahf
(bad)
fs
cmps
cs
outs
out
into
push
mov
dec
mov
fcomp
cwde
sub
lahf
cld
xchg
and
jb
ins
adc
add
dec
mov
imul
enter
jp
cmps
mov
retf
cld
gs
push
int
sbb
push
outs
frstor
mov
repnz
add
mov
lods
aam
(bad)
sbb
adc
cmp
adc
popa
dec
std
inc
loope
into
clc
out
inc
sar
pop
test
sub
imul
push
mov
dec
punpckhwd
mov
out
add
cmp
call
int
gs
dec
imul
lods
sub
mov
sub
out
sahf
bound
push
(bad)
pop
(bad)
mov
fistp
scas
xchg
stos
adc
mov
mov
fcom
jb
leave
into
or
leave
or
xchg
and
adc
pop
aam
add
movd
ret
inc
sbb
(bad)
fnstenv
mov
arpl
mov
push
enter
cmp
lahf
or
les
jmp
inc
ja
cld
push
das
loopne
ret
mov
mov
pusha
adc
lods
hlt
push
or
loope
adc
add
cwde
jecxz
jo
mov
test
jno
rcr
jo
or
aas
push
inc
(bad)
sbb
mov
icebp
sti
mov
rcl
(bad)
pop
les
add
sub
fadd
jmp
call
mov
(bad)
push
xor
iret
xchg
unpcklps
mov
push
ins
ficomp
xchg
pop
push
xchg
add
mov
xchg
out
push
mov
push
dec
mov
jns
sub
pop
lock
inc
xchg
sub
je
cmp
je
push
xchg
add
cmp
and
add
cmp
pop
sub
lea
mov
adc
cmp
dec
xor
(bad)
xchg
sbb
cmp
inc
(bad)
rol
pop
jmp
nop
or
es
dec
inc
or
or
sub
leave
imul
retf
push
ins
push
push
xchg
cmp
hlt
mov
in
add
xor
jecxz
add
not
mov
dec
cld
add
xchg
jnp
push
mov
mov
push
outs
jge
inc
xchg
aaa
popf
and
cwde
lock
inc
clc
mov
cmp
sub
push
add
iret
xchg
push
loope
rol
bound
mov
sbb
jbe
xchg
mov
pop
fs
dec
cwde
and
daa
inc
xor
fsub
dec
mov
jno
icebp
mov
pop
push
jg
in
out
cli
mov
mov
retf
aaa
and
fdivr
xor
jnp
jp
xchg
stos
fistp
ret
scas
xor
jno
inc
sub
mov
imul
ds
outs
jb
xor
jnp
adc
lahf
jmp
imul
or
call
or
mov
cmp
pop
cmp
inc
push
lds
das
push
push
test
jbe
div
xor
das
test
rcl
cmp
ret
xlat
mov
cmp
or
inc
cmp
out
call
jecxz
popf
in
sbb
push
mov
xchg
mov
mov
add
outs
movs
lods
dec
push
inc
fnstcw
dec
inc
pusha
push
call
and
jno
adc
retf
je
sub
movs
bound
fdiv
es
pop
test
cmp
pop
imul
dec
cdq
inc
nop
in
cmp
jmp
inc
div
dec
mov
outs
xchg
xchg
mov
or
mov
dec
sub
push
fimul
ds
inc
push
retf
push
call
and
jmp
pop
das
mov
popf
ins
pop
and
cld
and
inc
jne
int3
std
mov
sbb
lea
mov
stc
aas
ret
mov
repnz
add
and
and
sub
in
sbb
dec
inc
push
leave
in
dec
aad
push
std
mov
mov
scas
add
or
clc
mov
cmovns
inc
xchg
push
adc
pop
cmps
jge
dec
and
in
in
sbb
ja
sub
mov
inc
pop
fwait
sub
lds
scas
adc
dec
pop
rol
(bad)
xchg
mov
xor
xor
xor
jnp
das
jg
idiv
cmps
dec
div
jmp
pop
push
call
bound
mov
xor
nop
stc
cmp
mov
out
lods
jno
adc
push
pusha
das
cmp
je
push
dec
jmp
mov
out
sub
iret
inc
enter
and
ret
adc
bound
clc
xchg
pop
pop
mov
xchg
mov
test
popf
in
ins
inc
xchg
push
jge
sub
push
dec
mov
push
jecxz
xchg
ins
idiv
outs
inc
xchg
jle
dec
dec
ins
sbb
stos
retf
test
jmp
mov
loopne
mov
cmp
push
outs
les
jg
out
dec
jbe
jg
psllw
sbb
jg
cmp
outs
xchg
leave
dec
adc
sbb
or
stc
adc
sub
(bad)
push
mov
jb
fisub
aam
es
or
inc
dec
sub
and
movs
aad
neg
cmp
icebp
dec
jp
jo
jne
dec
call
push
test
sti
bound
push
push
clc
cli
sbb
test
adc
lea
retf
pusha
mov
xchg
xchg
hlt
repnz
push
(bad)
xlat
mov
mov
outs
pop
cmp
or
ud1
add
ss
xchg
xlat
test
out
push
mul
sub
push
sub
call
or
jnp
inc
mov
ins
lods
sub
mov
and
lahf
pop
and
and
ret
fnstcw
and
lds
jo
imul
lods
aas
in
add
xchg
jmp
inc
retf
push
fdivr
dec
mov
cmp
ins
push
test
lahf
shl
test
sbb
xchg
or
(bad)
fdivr
inc
cmps
xor
popa
xlat
cmp
(bad)
pop
test
sbb
stos
add
lods
sub
out
(bad)
fadd
sub
cld
scas
xchg
stc
and
mov
push
lea
sub
jecxz
jns
rol
inc
xchg
cmp
xacquire
xchg
and
shr
inc
xchg
xor
xchg
xor
or
mov
inc
add
ja
cld
push
mov
popa
das
adc
fadd
pop
ds
loope
sbb
mov
popf
fwait
dec
cld
test
ds
rcl
jp
retf
dec
fwait
pushf
xchg
lock
addr16
push
or
jmp
dec
push
push
pop
mov
cmp
pop
sub
arpl
das
enter
fsub
stos
push
ret
cpuid
mov
xchg
in
mov
inc
sub
iret
push
mov
adc
push
xor
fwait
enter
pop
addr16
into
out
into
sub
stos
xchg
aaa
es
cmp
sbb
nop
lahf
push
add
push
stc
mov
(bad)
clc
sbb
rcl
lds
mov
cmc
pop
push
mov
mov
stos
sub
les
mov
cmps
sbb
fidivr
retf
mov
pop
and
sbb
inc
xchg
or
retf
xor
enter
pushf
adc
mov
pop
in
out
je
fbstp
stc
jecxz
adc
dec
inc
lods
jp
mov
sbb
scas
fistp
cmp
mov
sub
pop
jo
add
dec
fisttp
push
push
or
loopne
arpl
ins
shl
mov
xor
push
scas
cmp
lea
push
mul
sub
int
sbb
mov
push
pop
fld
rcr
jmp
jb
cld
inc
jmp
arpl
das
cmp
cwde
mov
pop
(bad)
xor
mov
or
jp
sbb
jmp
je
fwait
inc
cmp
adc
jp
cmp
sub
cmc
jns
mov
and
ret
cmps
cmps
mov
xlat
or
xor
popa
inc
xchg
xor
call
push
and
ss
xchg
dec
xchg
xor
push
imul
jg
das
inc
ret
fs
xchg
imul
push
add
mov
test
mov
or
(bad)
cmp
cmc
dec
xor
(bad)
aaa
cmp
xchg
arpl
pop
push
push
gs
popa
cmc
mov
adc
pop
sti
inc
pmaddwd
xchg
jae
cmp
jecxz
scas
mov
mov
cwde
jecxz
arpl
hlt
cdq
loope
leave
stos
adc
and
jb
mov
mov
out
inc
pop
sub
sub
addr16
fwait
jle
cmp
dec
neg
push
push
adc
mov
inc
aas
xchg
cmps
nop
ja
jmp
dec
cmps
xor
(bad)
jns
dec
stos
imul
(bad)
es
ret
dec
mov
addr16
jmp
loopne
mov
sub
int
scas
xor
mov
outs
sub
aaa
jl
ret
and
push
jmp
in
movs
mov
sti
retf
fsubr
jo
fs
mov
add
push
mov
aaa
jno
dec
lods
push
or
add
retf
call
adc
jge
and
ror
sahf
xchg
dec
repnz
ret
and
jo
mov
mov
mov
fdiv
or
std
and
mov
sbb
inc
sub
in
test
push
pushf
add
pushf
xchg
push
sub
jae
xchg
frstor
inc
or
mov
cmps
jmp
push
jle
add
pop
inc
sub
xor
out
dec
test
add
xchg
outs
popfw
ins
js
arpl
les
rol
xchg
int3
stc
stc
add
pop
test
imul
jmp
and
push
cmp
sbb
test
and
dec
push
pop
pop
xor
test
jmp
and
clc
add
(bad)
retf
sbb
jnp
sub
cmc
xor
xchg
mov
add
push
sbb
sbb
pop
fidiv
dec
test
mov
retf
(bad)
xchg
into
inc
or
stos
jmp
test
sub
popa
sub
xchg
mov
gs
add
mov
out
sub
xchg
daa
jb
dec
cld
lods
rcr
mov
popa
fadd
out
jmp
push
loope
sbb
fnstcw
dec
(bad)
lods
mov
je
push
xchg
push
outs
mov
std
or
jbe
aaa
test
and
pusha
jmp
mov
fist
ret
(bad)
sahf
mov
cmp
mov
and
lahf
bound
pop
(bad)
mov
sub
pop
sub
test
iret
ror
ror
cmp
imul
das
ret
inc
out
fidiv
fs
(bad)
add
rcl
in
fdivr
xchg
movs
es
jecxz
xchg
aas
scas
dec
cs
and
or
loope
or
push
xchg
ins
jmp
div
dec
jecxz
and
xchg
add
(bad)
cmp
(bad)
aaa
repz
lods
inc
dec
cli
sub
nop
pop
jge
mov
lods
popa
test
rcr
(bad)
pop
dec
dec
fwait
add
xor
stos
pop
ficomp
cmp
inc
dec
xor
out
hlt
in
mov
fcmovnb
mov
sub
les
and
jmp
das
mov
xchg
outs
sub
push
lods
jo
sbb
xchg
pop
push
js
add
cld
push
sub
dec
addr16
push
les
clc
cmps
jge
fwait
mov
sub
or
lods
push
fdivr
cld
mov
jmp
(bad)
(bad)
xor
mov
fistp
dec
lea
mov
mov
sbb
mov
mov
and
idiv
dec
clc
std
mov
xchg
pop
mov
mov
mov
mov
inc
xor
mov
js
fdiv
pusha
dec
add
stos
mov
sub
pop
scas
sbb
fimul
mov
pop
mov
in
arpl
dec
sbb
sub
pop
mov
mov
push
jmp
jne
xchg
mov
(bad)
test
and
fldcw
xor
and
out
add
push
sub
stos
shr
scas
(bad)
jnp
jo
pushf
jns
mov
xchg
xlat
adc
push
es
fidiv
pop
sbb
pop
push
std
sub
test
dec
movs
sub
imul
loopne
and
les
not
imul
jo
adc
xchg
mov
adc
in
mov
push
stc
iret
inc
xor
mov
ficomp
leave
sub
pushf
shr
sub
or
push
mov
mov
sbb
and
mov
mov
repnz
dec
fild
(bad)
rcl
sbb
andnps
push
xor
sub
in
lods
and
mov
xchg
mov
and
sar
mov
jo
mov
data16
out
es
pusha
pop
bound
dec
fstp
shl
push
repnz
mov
test
jecxz
scas
aaa
mov
inc
movs
cmp
adc
call
cmp
push
(bad)
call
mov
arpl
ss
push
(bad)
fwait
jne
cld
aam
add
lahf
loopne
push
and
inc
loop
inc
mov
xor
push
pop
cs
pop
mov
dec
(bad)
mov
aad
lds
jp
sub
jno
jae
xchg
nop
dec
mov
pop
xlat
popf
std
nop
stc
dec
cdq
or
mov
fisub
retf
pop
fisub
mov
mov
rol
inc
int
imul
cmp
imul
pop
jae
sbb
dec
dec
cli
mov
mov
rol
mov
mov
jmp
mov
jg
inc
or
mov
xor
idiv
loope
cmps
stos
sbb
mov
push
js
add
push
adc
mov
fs
sbb
jo
lahf
jecxz
dec
rcl
mul
not
push
js
mov
leave
(bad)
jmp
imul
xchg
test
cmp
jbe
pop
in
sub
or
enter
shr
xchg
cmps
shl
push
leave
(bad)
into
test
jmp
aad
mov
adc
and
dec
pop
sub
cs
xchg
ficom
jno
mov
push
xor
mov
stc
fcomp
or
imul
adc
or
shl
mov
jmp
ret
or
fcomp
nop
xchg
xchg
cmp
cli
mov
(bad)
mov
add
sbb
xchg
lock
imul
xchg
movs
and
xor
mov
retf
adc
add
sub
cmps
ror
cmps
sbb
or
xor
out
mov
cmps
addr16
fisub
test
push
sahf
rcr
ret
aaa
mov
lahf
mov
or
sub
dec
mov
jns
int
pop
cmp
adc
dec
daa
inc
mul
lea
not
push
outs
pop
sub
push
out
add
mov
and
data16
add
lods
aam
pop
rcr
push
add
jne
scas
xchg
inc
aas
mov
mov
pop
jmp
clc
sub
cmp
or
or
into
es
arpl
jmp
ret
xor
inc
lods
cli
(bad)
mov
psraw
inc
sbb
push
cdq
cmp
push
int3
imul
jl
mov
xor
movs
cmps
adc
adc
push
push
sbb
ins
addr16
push
mov
cli
jmp
dec
sahf
cmp
pop
push
jnp
call
imul
imul
and
shl
std
in
pushfw
aaa
xchg
(bad)
mov
ds
iret
cmp
mov
arpl
sbb
fs
push
sbb
mov
lahf
jns
inc
mov
pop
pop
adc
inc
mov
(bad)
pushf
icebp
out
xor
cmp
data16
repz
pop
movs
dec
mul
out
mov
popf
lds
push
into
scas
mov
call
push
dec
call
inc
add
xchg
and
or
mov
cmp
aad
dec
pop
ficomp
xchg
pop
icebp
add
mov
test
xor
inc
adc
fisubr
mov
xchg
jl
clc
test
mov
pop
sub
push
retf
xor
ror
test
mov
aaa
out
ds
out
gs
fisubr
adc
mov
mov
ins
mov
pop
arpl
div
inc
comiss
lock
jbe
imul
test
(bad)
repnz
sbb
outs
sar
scas
adc
dec
mov
or
ins
outs
lahf
sti
sub
sahf
add
clc
int
mov
fiadd
push
sbb
ja
inc
lods
jne
loop
js
into
movs
cli
ficomp
jecxz
lods
aad
mov
sub
scas
mov
mov
jno
std
in
push
test
stos
inc
sar
jno
pop
(bad)
in
add
jg
(bad)
jno
jno
call
pushf
sbb
out
mov
sbb
retf
mov
cwde
cmp
int3
adc
popa
pop
pop
jl
iret
or
sub
aas
(bad)
jo
pop
xor
imul
in
lea
stc
sub
cmp
dec
js
add
cmp
jo
out
call
push
into
pop
dec
mov
je
push
cld
jns
test
out
inc
sbb
push
inc
mov
xor
ds
dec
fcomp
addr16
dec
or
dec
ror
out
lahf
and
add
mov
stos
sti
or
popa
xor
add
cmp
les
call
add
div
sub
leave
sub
or
scas
jmp
push
lods
cwde
add
sub
(bad)
add
or
xlat
pop
dec
retf
or
xchg
or
xchg
(bad)
fisttp
cli
jbe
cli
in
mov
cmp
je
inc
jo
repz
stc
iret
adc
popa
xchg
jl
and
pop
ret
int3
pop
in
sbb
not
sar
test
mov
pop
mov
jecxz
fld
lea
xchg
imul
dec
jnp
dec
(bad)
cmp
ss
adc
cld
pop
xchg
fstp
xchg
cs
es
add
adc
sbb
stos
sub
ss
xchg
or
(bad)
mov
imul
retf
sub
sub
arpl
les
pop
pop
or
mov
or
jo
pop
pop
sub
push
fcomip
mov
sbb
xchg
popf
loopne
xchg
mov
xor
(bad)
retf
pop
in
and
aam
sub
stos
movs
mov
out
aad
or
mov
ins
ret
push
aas
jb
mov
adc
dec
jo
fwait
pushf
ror
ins
jmp
out
pop
fimul
push
(bad)
xor
enter
jns
xor
mov
push
sub
inc
aam
sti
dec
sbb
cld
vhaddpd
out
pop
push
pop
or
nop
scas
sbb
aad
fld
into
push
inc
inc
jmp
sub
es
dec
xchg
push
jnp
cmp
fld
jecxz
retf
cs
ins
push
aad
add
ja
loop
xchg
(bad)
loopne
fldcw
dec
leave
push
rcr
sbb
(bad)
adc
cmp
jns
dec
mov
dec
pop
fs
sbb
call
int
test
jecxz
sub
js
jne
sub
dec
lds
retf
cmps
(bad)
hlt
add
jl
aad
xchg
cdq
mov
call
adc
std
clc
or
adc
cmp
es
ss
dec
psllw
nop
xchg
aad
xlat
dec
xchg
mov
pop
nop
xor
es
movs
retf
mov
and
xchg
push
push
jne
or
cmps
cwde
(bad)
cdq
or
dec
adc
or
push
sbb
mov
push
add
push
xor
sub
push
ins
out
push
fdiv
and
inc
and
aam
cmps
shr
cmp
and
ss
imul
dec
dec
lock
dec
cmp
ds
sahf
iret
test
jb
in
adc
mov
fisubr
imul
jnp
push
mov
cli
popf
ror
adc
xchg
and
rol
mov
mov
xchg
pop
push
fidiv
and
ficomp
ret
mov
retf
jbe
xchg
sub
mov
ret
in
je
push
mov
arpl
add
call
mov
aam
sti
pop
(bad)
cdq
adc
ins
dec
fbstp
call
inc
jbe
in
and
inc
fist
das
sbb
cmc
pop
in
sub
dec
fwait
call
mov
lds
push
test
inc
sub
sbb
bound
arpl
repz
fs
or
mov
retf
jo
mov
fsub
dec
aad
sbb
push
aad
leave
adc
push
idiv
jno
xchg
data16
lea
xor
daa
movs
or
ret
mov
addr16
movs
sbb
mov
sbb
jge
iret
ret
mov
and
retf
jns
repz
cmp
stc
ret
rol
rol
dec
lahf
(bad)
mov
lds
ffreep
push
ja
pop
jecxz
xor
dec
adc
aas
sbb
rol
into
movs
cmps
cmp
inc
jge
pop
and
cmps
and
out
pop
cmp
shr
mov
fiadd
jg
and
rep
xor
dec
retf
jnp
icebp
inc
xor
cmp
or
cmp
push
fadd
pop
aas
fbld
xor
cs
mov
mov
(bad)
xchg
mov
inc
cwde
inc
in
push
bound
xor
and
mov
lds
inc
rcr
enter
mov
ins
and
dec
xor
jbe
femms
jmp
out
jo
cmp
xor
and
xchg
xchg
dec
mov
das
push
inc
arpl
jmp
inc
jmp
ins
or
jmp
xor
cmp
imul
adc
adc
or
in
pop
jle
cmps
jmp
das
daa
xchg
scas
enter
nop
add
popf
in
mov
les
mov
cmp
pop
fwait
add
int
sahf
sbb
test
int3
hlt
pop
ffreep
mov
sbb
mov
ret
js
jmp
lods
cmps
call
mov
mov
add
xchg
mov
popa
fbld
arpl
mov
or
rcl
dec
rep
sbb
mov
nop
cmp
sub
in
xor
rol
add
jge
mov
push
sbb
xor
pusha
cmp
dec
jl
imul
sbb
push
mov
in
inc
sub
mov
ss
addr16
hlt
out
sub
scas
jl
jo
and
(bad)
jp
jae
and
in
ficom
dec
fwait
aam
sbb
xlat
loopne
cmp
push
call
std
sahf
pop
sbb
sbb
xor
push
call
aas
pop
cmp
shl
fbld
add
xchg
and
popf
arpl
mov
dec
adc
jb
adc
adc
xchg
into
data16
scas
daa
(bad)
(bad)
pushf
(bad)
dec
dec
mov
bound
stos
cld
lock
xchg
cdq
retf
mov
xor
xchg
enter
iret
aad
pop
dec
jnp
es
movq
inc
sub
iret
mov
loope
mov
lea
inc
arpl
std
sbb
in
aaa
mov
(bad)
cmc
cmps
add
call
fstp
movs
jne
jmp
inc
std
pop
add
jecxz
arpl
jp
add
sbb
mov
jl
mov
pusha
cmp
sub
aam
data16
xchg
pop
in
mov
(bad)
into
fnsave
lea
icebp
adc
push
sub
push
mov
ds
mov
lea
scas
sahf
bound
or
sub
(bad)
jg
ds
repnz
xchg
jg
add
je
inc
call
jb
pop
retf
(bad)
clc
les
jp
mov
inc
scas
js
mov
(bad)
rcr
xchg
shl
dec
mov
test
sub
ficom
push
je
xchg
fwait
pop
push
cmps
inc
popa
retf
xrelease
aaa
daa
sub
frndint
repnz
mov
icebp
out
enter
mov
xor
(bad)
push
jb
jne
aam
mov
add
inc
add
push
loop
arpl
sbb
dec
pop
loop
and
mov
cmp
xchg
nop
mov
setle
leave
imul
outs
lahf
fisubr
into
cli
xchg
test
add
inc
or
sub
dec
sbb
or
ins
sub
mov
call
stos
hlt
push
pop
mov
in
sub
push
or
loopne
fimul
test
out
mov
ja
push
adc
inc
jle
push
cmp
pop
pop
inc
mul
mov
mov
int
call
fcmovnb
fild
cdq
cdq
adc
aam
jne
icebp
pop
cdq
cs
jg
jno
lock
aad
or
push
xor
jmp
in
push
or
jmp
add
and
jns
inc
stos
jbe
retf
and
cwde
int
mov
push
into
outs
aaa
(bad)
test
out
jnp
jne
mov
aad
pop
(bad)
stos
test
imul
cmp
int3
xor
fcomp
jmp
in
mov
popa
add
add
jmp
inc
jle
mov
inc
sub
adc
iret
test
cmp
fiadd
les
test
lahf
nop
icebp
retf
sbb
cmps
repnz
push
cmp
test
xor
out
repnz
repz
inc
mov
mov
add
and
xor
sub
or
scas
cld
(bad)
mov
push
fmulp
inc
pop
xchg
sar
pop
(bad)
dec
pop
inc
aad
popa
rcr
mov
push
jo
out
inc
add
daa
sbb
sbb
xor
adc
rol
cmp
and
sub
retf
xchg
movs
xor
cmc
jo
fidivr
jg
pop
adc
or
scas
mov
mov
fisttp
add
in
push
and
push
daa
sti
push
(bad)
and
arpl
cmp
jnp
mov
add
leave
jge
mov
pop
adc
push
jecxz
fneni(8087
mov
add
adc
mov
loope
fisubr
or
retf
imul
or
out
sub
mov
or
pop
sub
je
adc
and
mov
movs
dec
lods
pop
int3
jo
pop
test
lods
or
leave
xor
adc
dec
pop
js
pusha
ja
push
call
adc
shl
and
nop
pop
jnp
and
pop
es
sbb
mov
adc
in
cmc
lahf
push
addr16
popa
push
adc
call
sar
pop
cwde
mov
out
mov
ss
call
repnz
cmp
sub
(bad)
jmp
ror
mov
pop
adc
or
mov
or
inc
or
jns
mov
scas
imul
sbb
retf
cmp
lods
cmp
pop
in
pop
cdq
pop
loop
xor
cs
int
adc
jmp
mov
aaa
dec
inc
cmp
adc
shr
inc
repz
je
add
and
movs
xchg
cld
cmc
mov
xor
(bad)
inc
adc
add
sar
jne
std
ret
ja
pop
imul
fmul
imul
jae
xor
jmp
mov
out
jp
in
arpl
sbb
(bad)
mov
mov
add
adc
mov
mov
mov
dec
and
pop
inc
dec
cmps
imul
or
lods
ror
or
pushf
(bad)
mov
xchg
or
xchg
ja
js
sub
mov
cmp
mov
sbb
sub
push
add
inc
xor
mov
mov
fdivr
repnz
mov
adc
lahf
jae
pop
retf
cmp
jg
mov
pop
ja
icebp
cmc
cli
fnstcw
jge
fcomp
test
mov
aad
jle
mov
mov
sbb
jmp
mov
jnp
xchg
(bad)
out
or
jb
xor
out
pop
mov
sub
pop
jae
inc
push
ss
mov
jns
sub
cmc
aas
fst
inc
adc
mov
loop
arpl
enter
jmp
lahf
jecxz
sbb
inc
(bad)
xchg
imul
in
sub
push
out
cmp
es
inc
sub
aaa
aaa
push
mov
xchg
mov
sbb
fistp
imul
push
inc
dec
cld
add
mov
mov
dec
adc
or
jae
mov
loope
and
mov
cmp
retf
fcmovnu
imul
or
arpl
test
popf
mov
inc
sub
lods
push
inc
push
shl
jnp
retf
mov
cmp
push
lock
dec
scas
xlat
imul
xor
inc
test
pushf
stos
push
iret
lods
adc
hlt
in
ins
retf
dec
rol
movs
(bad)
jae
xchg
sub
test
addr16
push
mov
or
outs
adc
hlt
ss
pop
add
xchg
jb
sti
aas
cmp
lock
mov
xchg
jmp
cmps
push
lods
arpl
mov
dec
inc
movs
mov
cmp
mov
mov
pop
arpl
in
sub
jle
xchg
lods
add
add
out
cdq
push
mov
xchg
test
movs
outs
and
sub
ret
push
scas
ins
cld
enter
fstp
xor
repnz
pop
in
ret
and
or
addr16
or
in
cmp
lods
fsubr
test
adc
sbb
pop
adc
call
pop
outs
inc
clc
xchg
push
pop
inc
or
pop
inc
xchg
mov
push
std
(bad)
fcmovu
sub
push
sub
data16
cmp
repz
rcl
js
leave
repnz
xchg
call
cmp
lss
rol
mov
jmp
sbb
data16
jle
or
cmp
add
mov
ret
rol
adc
je
sub
xor
stos
lea
jns
or
repz
or
lods
dec
popf
dec
stc
sub
jbe
add
loope
imul
gs
xchg
hlt
outs
cdq
pop
or
jecxz
enter
pop
inc
cmps
mov
xlat
xchg
mov
ret
xor
out
sbb
bound
pop
push
jge
(bad)
lock
jge
mov
xchg
and
cdq
shl
fmul
or
adc
loopne
call
xchg
sub
imul
ja
mov
imul
cmps
(bad)
test
popa
sbb
out
cmp
(bad)
ss
cmc
(bad)
stc
aam
in
and
mov
mov
nop
and
in
push
test
pop
in
xchg
jl
mov
repnz
and
inc
test
scas
test
call
xor
aam
cmp
(bad)
pop
retf
jl
inc
call
or
movs
adc
push
jo
add
push
and
es
pop
js
test
and
je
(bad)
ss
icebp
pop
cmp
adc
std
push
add
jecxz
xchg
ja
mov
mov
retf
rdmsr
lahf
cdq
push
cmp
cmps
movs
cmp
mov
loopne
cli
aas
loope
cmp
fs
xlat
loope
pop
inc
pop
cdq
add
pushf
and
jno
add
out
push
xchg
mov
jno
mov
mov
or
fstp
jns
(bad)
outs
ja
(bad)
sub
jp
je
pop
dec
(bad)
aam
mov
xor
je
retf
shr
jo
div
inc
add
cli
fidivr
test
retf
aad
jp
sub
(bad)
and
iret
shl
out
loope
mov
push
imul
(bad)
and
and
pusha
popf
xchg
adc
popa
add
add
jmp
mov
cdq
xor
jno
add
cdq
int3
popa
dec
pop
cmc
push
in
push
das
cdq
pop
stos
or
mov
jno
test
pop
or
stos
xchg
mov
iret
dec
jmp
pop
inc
jb
jle
bound
sbb
pop
sti
jecxz
cdq
or
xchg
bound
std
sub
cmp
js
popa
stos
cmp
gs
xor
lahf
or
int
out
jno
(bad)
shl
add
int
fadd
xor
fcom
cmp
inc
jo
or
pop
mov
loopne
scas
inc
jmp
arpl
sbb
pop
ret
data16
xor
or
cwde
nop
es
rol
int3
mov
in
pop
aam
adc
or
add
sub
cmps
lahf
dec
lods
dec
jle
jl
inc
ins
adc
dec
lahf
pop
push
shr
repz
push
cld
or
cmp
mov
ret
lods
dec
std
ss
iret
retf
mov
jle
adc
pop
and
out
mov
pop
int
sub
or
jg
js
jae
mov
jge
mov
das
sbb
cmp
es
xchg
fdivp
daa
mov
sti
sbb
and
pop
shrd
cwde
dec
and
mov
pop
xchg
aam
inc
mov
out
das
sub
jns
int3
dec
adc
pop
out
dec
jg
jl
xor
push
xor
mov
xchg
sar
xchg
dec
sbb
imul
pop
shr
xor
push
ins
popa
mov
jl
dec
jbe
mov
dec
push
sub
popf
dec
movs
loopne
popa
outs
ds
xor
xor
outs
sbb
imul
outs
outs
jns
jbe
sub
dec
mov
mov
jnp
sbb
dec
lock
pop
jmp
xchg
jl
mov
pop
dec
vprotd
adc
jge
lahf
out
cwde
sub
or
nop
arpl
aaa
xchg
jmp
push
mov
inc
(bad)
ffreep
test
sbb
xchg
mov
sbb
jae
mov
push
out
xor
push
dec
xchg
cs
cs
cmp
(bad)
test
pop
mov
xchg
mov
xchg
mov
adc
mov
in
or
jg
add
push
mov
dec
in
cmps
sbb
sbb
outs
xchg
jg
ficomp
xor
cmps
call
clc
popa
lock
push
add
xchg
and
mov
xchg
call
push
ja
xor
mov
data16
addr16
mov
call
iret
inc
xchg
mov
test
mov
ret
jnp
push
mov
into
xchg
add
loope
add
mov
sub
(bad)
cmps
adc
cmp
xchg
iret
jmp
(bad)
xchg
xor
jmp
sub
clc
es
or
fnstcw
mov
xchg
or
cld
jne
clc
mov
pop
test
add
or
xchg
aad
pop
cwde
ret
fstp
jmp
inc
out
mov
or
push
in
pop
inc
dec
add
adc
(bad)
js
fsub
popf
pop
or
cs
popa
das
adc
scas
sbb
outs
addr16
dec
loopne
mov
loop
add
aam
icebp
push
fs
lock
loop
inc
sahf
dec
sub
dec
push
repnz
push
jp
sbb
adc
pop
test
mov
sbb
ins
arpl
inc
pop
pop
stos
loopne
mov
les
or
dec
xchg
cmp
jnp
fisub
pushf
add
mov
mov
sbb
cmp
xlat
(bad)
jae
test
pop
push
lahf
adc
mov
(bad)
rcl
push
push
xor
or
retf
inc
ret
fdivr
push
popf
sub
adc
sbb
out
sbb
enter
stos
xor
(bad)
pop
adc
aad
leave
loop
rcl
ret
fisubr
enter
adc
lods
stos
push
out
sub
cmp
jo
lahf
rcl
xchg
jb
and
xchg
jle
in
xchg
lods
xchg
jns
not
pop
push
pop
out
sub
push
out
mov
lock
mov
neg
and
inc
(bad)
mov
pop
(bad)
clc
ja
pop
mov
mov
mov
outs
fs
div
sub
xor
les
xor
cmp
xor
jnp
ins
test
dec
das
rcl
cli
bound
and
or
dec
sbb
jo
sub
aas
or
adc
xor
sub
sahf
sub
sub
push
xchg
mov
or
inc
xlat
in
out
(bad)
out
call
cmp
pop
cmp
sub
push
rol
mov
mov
pushf
mov
call
push
xlat
fisttp
push
jg
loope
movs
pop
jne
xchg
outs
(bad)
in
push
clc
or
xor
aam
and
mov
(bad)
das
push
add
cmc
imul
mov
lahf
iret
and
(bad)
adc
sbb
(bad)
stc
lock
and
mov
loope
fcomp
mov
and
xor
pop
nop
scas
ret
pop
or
mov
popa
loop
sbb
mov
xchg
std
jl
fcomip
les
dec
mov
adc
xchg
sub
ja
push
jge
ss
outs
jae
xchg
outs
out
int3
cmc
sub
sub
outs
inc
popa
retf
mov
mov
lea
lods
cld
jecxz
daa
push
jae
shl
xchg
popf
adc
iret
dec
jb
sbb
jmp
or
lock
sub
outs
dec
jecxz
ins
add
and
test
mov
lods
and
fs
inc
aam
mov
int
mov
jg
jns
js
dec
repnz
pop
sbb
out
adc
adc
jecxz
or
test
mov
add
out
pop
fnsave
dec
sub
add
sti
xchg
add
jb
aas
fistp
mov
mov
ss
jl
jnp
jp
mov
jmp
shl
out
test
pop
mov
hlt
xlat
dec
mov
scas
scas
repz
pop
or
ret
jp
jge
add
(bad)
stc
xchg
mov
xor
mov
adc
pushf
xchg
cdq
aas
pop
mov
sti
loopne
addr16
xchg
sub
gs
and
jl
mov
in
loopne
daa
call
neg
add
xor
pop
je
push
push
or
jne
repz
cmp
or
mov
inc
cdq
aaa
iret
or
pop
test
dec
or
les
sub
(bad)
mov
es
jo
push
test
xchg
jle
(bad)
retf
or
inc
test
(bad)
shr
and
arpl
dec
cmps
mov
xor
(bad)
push
(bad)
enter
outs
mov
into
test
pop
mov
stos
aas
push
fs
cld
and
cmp
in
xor
(bad)
and
out
pop
cmp
(bad)
out
out
jo
movs
and
mov
mov
loope
mov
adc
dec
push
das
mov
outs
dec
jno
jmp
push
cmps
and
data16
xchg
pop
fwait
gs
inc
call
dec
nop
pop
mov
dec
adc
xlat
xchg
mov
and
fist
mov
cmp
int
inc
ins
mov
cli
cwde
mov
test
jge
mov
dec
jnp
mov
or
jg
cmp
cdq
daa
test
pushf
adc
aad
lock
xchg
mov
pop
jecxz
int3
mov
pushf
sub
or
and
sahf
mov
jmp
std
dec
mov
dec
push
jbe
dec
test
cmp
inc
and
dec
fldcw
jmp
or
mov
cdq
mov
pop
jp
neg
ret
mov
inc
pushf
dec
jns
or
pop
das
cs
xchg
mov
xchg
cdq
ins
test
cmp
sub
arpl
xor
je
(bad)
jmp
jo
sub
xlat
pushf
fmul
xor
lahf
sbb
test
bound
push
adc
inc
sub
jge
test
jns
pushf
adc
adc
rcl
mov
xchg
pop
and
xor
push
aam
fiadd
leave
cmp
xchg
popa
or
jae
in
and
inc
(bad)
and
sub
dec
sub
sub
mov
aaa
jne
lods
pop
push
inc
(bad)
mov
aad
sub
outs
inc
mov
pop
mov
icebp
or
int
xchg
dec
jle
jmp
int
sub
adc
and
test
inc
push
nop
gs
clc
mov
push
xchg
les
clc
sbb
imul
mov
ja
mov
add
into
test
shr
scas
rcr
fldcw
mov
std
test
jns
cli
mov
lahf
(bad)
retf
pop
in
pusha
mov
jmp
daa
sbb
jmp
mov
jne
dec
mov
or
popf
mov
add
call
inc
lahf
dec
out
dec
stos
call
sbb
(bad)
fnstenv
xchg
out
add
mov
pushf
sbb
xchg
xor
pop
pop
pusha
mov
or
mov
xor
adc
div
mov
pusha
push
call
push
imul
and
mov
mov
loop
stos
mov
or
mov
pop
imul
xor
xor
rol
add
stc
cmps
push
push
dec
push
cmp
retf
xchg
inc
cmps
xchg
les
mov
gs
test
cs
ret
jg
inc
stos
jl
outs
imul
loop
inc
jp
cli
and
std
icebp
bound
inc
adc
mov
sub
(bad)
add
js
and
dec
cwde
fbld
fwait
and
xchg
or
dec
pop
outs
int3
js
scas
nop
xor
mov
fistp
loopne
test
pop
mov
(bad)
scas
out
sub
fiadd
pop
ficom
std
retf
loopne
mov
cmps
push
jmp
cmps
in
sub
or
test
dec
les
xchg
test
in
xchg
adc
sub
jmp
jae
loop
jmp
jl
or
dec
xchg
dec
sub
push
push
(bad)
lahf
es
dec
imul
int3
mov
fstp
xchg
mov
xor
inc
mov
push
dec
mov
jo
dec
leave
push
movs
sub
inc
xor
adc
in
inc
push
mov
ret
push
or
xchg
jne
xchg
std
imul
neg
push
xchg
cmp
cwde
inc
mov
ds
out
inc
leave
stos
inc
int
enter
lea
mov
jge
es
popf
out
ds
int3
cli
dec
xchg
popf
cli
dec
popa
ss
mov
push
pop
mov
xchg
cmp
out
(bad)
xchg
mov
add
add
into
test
aas
mov
push
fidiv
mov
sub
shl
xor
test
xchg
xor
les
shl
xchg
xchg
pop
mov
pop
in
pop
movs
shl
pop
lock
ds
repz
inc
mov
cdq
call
lods
mov
mov
xlat
adc
fstp
and
mov
add
cmps
pop
dec
cli
je
outs
loopne
sbb
jns
mov
jp
icebp
push
addr16
repnz
xchg
mov
jb
lock
into
adc
xor
repz
or
lods
retf
or
nop
adc
leave
cdq
ror
dec
stc
retf
jmp
fcomp
push
adc
sbb
and
and
inc
test
call
push
xchg
sub
mov
inc
movs
int
push
sbb
shl
and
fistp
pop
and
shr
jnp
inc
mov
rcr
(bad)
cmp
jecxz
das
loopne
fcmovnbe
sub
fidiv
test
mov
pushf
and
jmp
stc
sbb
jle
out
jg
jmp
mov
dec
cmp
jge
test
xchg
sti
add
mov
xor
lds
mul
fdiv
add
add
dec
loopne
ror
mov
mov
lods
push
inc
sbb
sahf
push
and
dec
xor
push
inc
cmp
xchg
outs
outs
js
icebp
jle
push
xchg
xchg
in
popf
test
in
pop
sub
lock
xor
popf
loope
mov
sti
cmps
sub
outs
sbb
mov
pop
sar
add
lahf
pop
or
xchg
dec
mov
pop
push
inc
cdq
dec
add
pop
bound
(bad)
rol
fldenv
scas
xchg
mov
sub
mov
(bad)
outs
(bad)
sti
fild
add
mov
in
xchg
cli
pusha
sbb
mov
xor
mov
pop
mov
push
cmp
(bad)
mov
add
out
test
push
xchg
lods
ret
push
xchg
ja
jnp
fist
pop
sbb
test
push
mov
bound
mov
or
ss
mov
ds
jns
dec
stos
aaa
mov
nop
lahf
push
mov
shl
mov
ret
jo
and
xchg
pop
and
inc
enter
and
aaa
mov
pop
mov
dec
out
stos
fs
or
mov
pop
sub
dec
push
lods
sub
(bad)
retf
jmp
pop
in
popf
in
pop
and
jge
pop
in
pop
mov
or
fdivr
pop
cmp
sub
inc
inc
lock
and
in
xchg
and
out
or
bound
pop
pop
cmp
aaa
sbb
loop
add
sub
out
jl
shl
push
cwde
and
lea
rcr
dec
outs
retf
enter
mov
movs
push
cmp
outs
mov
add
xchg
sbb
test
aaa
mov
daa
iret
and
inc
push
or
xor
inc
dec
sbb
call
xchg
adc
mov
je
stos
adc
push
xchg
cmp
pop
popa
cli
dec
inc
fidiv
mov
out
dec
push
out
cmps
(bad)
xchg
retf
test
les
nop
jp
adc
cmp
imul
loope
jp
enter
ins
std
inc
dec
icebp
sti
aaa
dec
enter
ds
cwde
mov
test
shr
jae
lods
movs
ins
test
nop
mov
test
xchg
sbb
sbb
out
leave
cld
push
dec
mov
pop
sub
mov
std
f2xm1
mov
sbb
jne
sub
in
xor
(bad)
in
inc
and
push
xor
popf
dec
mov
sub
rcl
pop
xor
lds
jae
xchg
(bad)
(bad)
adc
push
lsl
jle
mov
(bad)
mov
xchg
fist
sbb
stos
or
nop
mov
pop
ins
xor
mov
dec
sbb
jnp
call
and
and
sub
data16
and
bound
int3
xor
or
sar
in
jae
stc
xor
gs
or
call
bnd
jo
clc
push
jecxz
mov
pop
loope
add
inc
ja
(bad)
or
out
iret
aam
inc
out
push
jge
cmp
push
push
outs
add
xchg
mov
rcl
push
push
les
pop
(bad)
in
pop
test
into
mov
and
gs
stc
into
mov
jne
test
cmp
shl
fwait
jb
bound
shr
mov
loope
repnz
pop
pop
stc
mov
addr16
fsub
pop
pusha
leave
cli
sahf
stos
in
or
fmul
stos
sbb
pop
sbb
or
xchg
mov
or
das
inc
mov
test
in
jmp
imul
cmp
dec
div
in
cmps
fcmovb
das
and
dec
and
jae
pusha
adc
adc
mov
lods
push
xchg
les
dec
add
cmp
imul
mov
loopne
pusha
or
xor
xchg
jecxz
test
stos
xchg
js
(bad)
mov
push
in
push
retf
stc
mov
cmp
pop
stc
mov
test
sub
jb
xchg
xor
sbb
icebp
shl
mov
cmp
pop
sub
mov
mov
pop
call
xchg
mov
sub
leave
cld
and
icebp
retf
scas
ret
push
popa
daa
adc
cs
jmp
pop
shr
jecxz
adc
mov
sbb
xor
out
xchg
cmp
aaa
inc
cmc
imul
movs
xchg
jbe
fwait
repz
or
in
sbb
inc
nop
(bad)
pusha
nop
fnstsw
sub
xchg
mov
daa
mov
and
in
dec
fld
adc
cmp
icebp
dec
mov
mov
scas
outs
jl
(bad)
lock
ins
(bad)
mov
lea
sti
jl
xor
and
in
jno
cli
mov
arpl
in
pop
in
popa
in
std
and
into
js
and
push
out
sub
(bad)
push
rol
movs
cwde
add
pusha
popa
mov
ficomp
cs
sar
xchg
adc
mov
sbb
ss
stos
pop
cmp
cmovae
sbb
pop
(bad)
ror
rcl
mov
inc
dec
in
adc
fisub
popa
pop
mov
into
dec
and
sub
lds
movs
push
add
ja
push
retf
fbstp
adc
les
js
cmp
jb
lock
cs
jne
and
mov
cld
addr16
jmp
dec
dec
int3
mov
jbe
fimul
les
adc
xor
pusha
cmp
cli
xor
mov
loope
sub
dec
and
enter
sbb
jmp
jecxz
dec
es
xor
mov
int
sub
push
adc
add
adc
lods
xor
xor
or
sti
cmp
out
and
add
or
shl
push
jmp
call
test
adc
xchg
sbb
ds
dec
mov
inc
sub
pusha
jnp
mov
xor
ror
push
jnp
xchg
jo
mov
call
sbb
in
fld
dec
ins
nop
pop
pop
jne
or
pushf
inc
addr16
inc
and
push
sbb
cmp
dec
bt
pop
outs
shl
lods
xor
imul
pop
inc
test
push
shl
call
into
mov
xor
xor
aas
jle
xchg
test
or
mov
jne
stc
jmp
inc
cdq
cmp
mov
inc
movs
xor
and
mov
inc
xchg
jnp
jecxz
fcom
jbe
adc
iret
sbb
add
data16
bound
test
iret
mov
mov
shl
inc
or
jne
mov
inc
out
mov
xchg
sbb
dec
(bad)
xchg
adc
dec
pop
ret
cmp
in
push
xor
xor
popa
pop
mov
or
(bad)
mov
xor
(bad)
jge
enter
mov
sub
dec
push
int
mov
and
xchg
sbb
xor
js
lahf
arpl
cmp
mov
leave
sbb
inc
loop
call
fsub
cmp
hlt
pop
mov
mov
cmps
pushf
outs
and
in
and
mov
jnp
xchg
dec
enter
jecxz
scas
mov
mov
mov
add
push
shl
bound
shl
and
dec
or
(bad)
daa
outs
je
smsw
push
or
cmc
(bad)
adc
jo
addr16
cdq
xor
mov
pop
int
(bad)
call
sub
and
pop
inc
push
jmp
or
into
mov
cmc
jp
fbld
or
mov
adc
mov
jb
rcl
jle
xor
loopne
xor
aas
or
sub
aad
push
mov
push
push
arpl
imul
jne
in
arpl
hlt
or
or
pop
mov
cwde
adc
movs
pop
ins
mov
sub
xchg
inc
and
and
pushf
jae
daa
jbe
sbb
in
cmp
xor
or
xchg
in
and
adc
enter
mov
jl
rol
cmp
inc
aad
jo
scas
and
cmp
mov
pusha
xchg
dec
ds
jp
and
imul
es
xchg
pop
movs
pop
mov
inc
loop
imul
dec
sbb
mov
xlat
out
xor
add
mov
and
ror
repz
jb
je
dec
loop
mov
stc
add
add
imul
adc
and
push
(bad)
aam
adc
adc
lock
cmps
inc
cld
adc
xchg
arpl
daa
xchg
ins
mov
dec
pop
mov
dec
popf
mov
movups
imul
or
cli
xor
jnp
sbb
gs
mov
adc
mov
xchg
mov
stc
(bad)
jae
push
push
neg
push
or
pop
mov
push
pop
icebp
push
push
movs
lds
inc
push
adc
jl
sub
xor
dec
cmp
ret
mov
into
mov
pusha
pop
repz
inc
movs
stc
sub
test
leave
adc
cmp
sbb
dec
test
icebp
cmp
fsub
mov
in
imul
push
and
mov
jae
stos
ds
xor
ins
jae
or
jl
in
xchg
(bad)
dec
dec
sub
sti
imul
call
pop
jb
mov
push
das
xchg
jno
es
pop
sbb
mov
mov
adc
push
mov
fmul
popf
in
and
out
mov
or
test
imul
pop
sub
pop
adc
pop
and
mov
mov
xor
mov
addr16
cmp
push
out
push
or
dec
das
iret
sbb
int
sub
mov
xchg
clc
sbb
mov
sub
xor
jl
aaa
and
loope
xor
int3
xchg
push
inc
retf
fwait
sub
jae
lea
adc
and
adc
shr
repnz
out
cmp
mov
mov
sahf
loopne
pop
pop
push
sbb
push
fsub
push
aad
pop
mov
inc
cmp
mov
adc
inc
xchg
add
push
push
cs
pop
leave
lods
retf
repz
sub
fsubr
push
sbb
inc
add
sub
leave
test
scas
sbb
ja
outs
std
cwde
std
push
pop
mov
test
or
cmps
push
jbe
imul
inc
add
retf
push
jle
or
(bad)
not
xor
mov
xor
xchg
mov
mov
ss
sti
(bad)
retf
imul
dec
add
icebp
pop
dec
push
fistp
sub
pop
xchg
js
mov
xor
aas
ins
xchg
in
sbb
addr16
xchg
fcom
int3
or
xchg
mov
(bad)
cdq
data16
inc
mov
mov
inc
daa
data16
popa
sbb
pop
fs
aad
adc
clc
mov
imul
int
push
nop
adc
pop
jb
lods
int
or
mov
jg
rol
jmp
call
rol
fcmovnu
xchg
mov
push
cmps
arpl
mov
popa
fistp
or
movs
or
shl
push
(bad)
add
and
xchg
xchg
jno
aaa
fsubr
jecxz
test
repz
loop
adc
movs
adc
mov
nop
or
and
sub
jmp
pusha
mov
jmp
je
push
movs
stos
add
ror
sbb
mov
imul
shr
sub
jo
(bad)
mov
das
aas
push
xchg
cld
add
pusha
mov
cmp
sbb
mov
pop
push
es
sbb
nop
sbb
sub
lods
pop
jecxz
inc
rsm
aad
mov
add
xor
push
push
push
rol
mov
sbb
ja
dec
cmc
add
int3
hlt
or
cmc
(bad)
fdiv
sahf
push
mov
inc
or
ret
std
push
and
fistp
(bad)
dec
test
shl
fisub
push
pop
push
stos
ror
out
(bad)
sti
adc
dec
fsub
sbb
sahf
push
push
adc
inc
fcmovnb
add
push
xor
and
sub
adc
mov
xor
inc
add
repz
in
iret
xor
int3
cmp
(bad)
jo
adc
repz
jno
hlt
xchg
shl
pusha
dec
int3
in
inc
push
cmp
call
rcl
bound
jecxz
inc
add
rcl
mov
mov
in
xor
mov
add
inc
ds
test
inc
fiadd
jl
gs
fmul
dec
aad
arpl
jae
inc
xor
ss
cmp
gs
jo
pop
mov
adc
mov
lods
test
inc
cld
in
out
dec
sar
in
cmp
mov
jno
cmc
dec
and
fadd
sub
dec
adc
xor
out
pop
sbb
bound
aas
xchg
mov
mov
push
outs
pop
mov
add
jmp
cmp
loopne
pop
dec
cmp
jle
cmc
dec
sub
(bad)
test
sysenter
inc
or
mov
xor
ins
sbb
fdivrp
test
loope
push
inc
fnstcw
in
inc
sahf
movs
push
hlt
xor
stos
mov
dec
mov
lods
cmp
addr16
sti
fwait
test
sbb
(bad)
in
in
retf
pop
jle
pop
pusha
movs
fisub
dec
sbb
aad
and
sub
mov
mov
dec
pop
mov
xor
mov
les
or
mov
cmc
and
aas
in
fdiv
jecxz
loope
test
push
mov
and
pop
mov
repz
or
std
dec
aam
push
jo
in
imul
hlt
scas
push
test
sub
leave
mov
push
scas
xchg
pop
int3
lahf
jmp
xchg
lds
(bad)
test
ds
xchg
in
aad
push
rcl
mov
arpl
mov
xchg
lods
mov
cmp
mov
mov
adc
and
pop
xchg
sahf
xor
pop
stos
jmp
dec
jns
pop
mov
test
call
jb
inc
sbb
mov
ja
movs
xchg
adc
mov
ret
stos
jb
ret
ror
or
arpl
and
or
movs
(bad)
mov
inc
mov
adc
xor
inc
sbb
sub
cmc
mov
cmp
or
call
cmp
loop
sahf
outs
dec
sub
sahf
les
jns
loopne
xor
retf
mov
sbb
outs
sbb
push
in
scas
mov
mov
fstp
clc
adc
inc
add
sbb
stc
xchg
test
fld
test
or
out
call
scas
pop
cmp
adc
xor
push
mov
stc
mov
sub
in
xchg
add
es
inc
push
lods
hlt
sub
jmp
cmp
mov
inc
cmp
jno
sti
mov
mov
and
daa
sbb
shl
(bad)
xor
push
add
mov
inc
and
stos
adc
jb
push
dec
rcl
sahf
cmp
movs
clc
mov
and
jge
and
sbb
pop
xchg
ins
inc
sbb
cmp
pop
xor
mov
imul
sbb
dec
adc
mov
mov
cmp
xor
push
leave
push
inc
div
inc
pop
(bad)
inc
fs
add
sub
push
dec
and
test
call
mov
push
(bad)
xchg
xchg
hlt
out
mov
and
mov
shl
mov
push
mov
inc
rcr
ret
and
cmp
inc
and
sub
mov
jl
in
int
add
xchg
inc
push
push
aas
test
sub
fwait
scas
fwait
dec
in
aaa
push
push
xchg
xchg
jbe
sub
jnp
imul
pop
loope
dec
mov
neg
fbld
adc
pop
or
and
bound
sbb
mov
mov
push
xchg
dec
mov
sub
jns
lods
push
ror
(bad)
mov
mov
mov
sahf
inc
and
in
rcr
mov
int
xchg
clc
lods
in
inc
shl
movs
(bad)
dec
xchg
hlt
xchg
ins
adc
sti
jae
aad
add
aam
xchg
mov
mov
sub
pop
ins
mov
pop
and
or
nop
adc
in
idiv
(bad)
mov
dec
and
cmp
das
out
out
sbb
dec
gs
fild
xlat
cs
mov
push
lahf
add
cmp
xchg
es
and
jnp
xor
add
push
jmp
call
ret
jo
icebp
or
cmps
aad
shl
das
pop
ds
popf
daa
inc
das
push
ds
or
mov
mov
lock
cs
push
in
and
das
xchg
lods
mov
push
pop
fistp
sbb
sub
inc
cmp
xor
xchg
xchg
test
sub
lock
lea
jo
add
out
fstp
ret
aas
add
push
push
js
arpl
jp
xchg
cmc
mov
mov
aad
push
mov
xor
mov
pop
fisttp
mov
inc
dec
mov
adc
fwait
push
jnp
push
pusha
push
loopne
(bad)
outs
retf
mov
and
or
add
or
adc
adc
repz
das
cld
mov
adc
sub
sbb
shl
mov
fst
push
dec
daa
sahf
ss
out
inc
out
jb
scas
call
dec
push
shr
add
test
pop
ins
inc
dec
pop
dec
nop
mov
fcomp
mov
xchg
out
inc
jecxz
sbb
and
(bad)
cmp
mov
push
add
dec
pop
jne
push
jae
iret
aad
cmp
mov
popa
sbb
mov
icebp
cmps
add
sbb
fwait
fwait
xor
xor
xor
call
loop
add
pop
les
ja
mov
mov
xlat
or
bound
pusha
lds
sub
jmp
adc
jns
pop
repz
cmp
mov
jo
inc
cmp
lahf
in
push
daa
ror
xchg
into
jge
lock
in
and
mov
bound
adc
xchg
cmp
ds
rcl
mov
cli
scas
xchg
movs
aam
sub
gs
out
xor
ins
imul
mov
ret
mov
inc
mov
adc
sbb
or
fs
mov
rcl
cmp
mov
data16
aas
scas
and
iret
das
or
push
jae
pop
sbb
sbb
fdiv
cmp
dec
xchg
cmc
mov
push
cmp
pushf
and
ins
pop
pop
push
cmps
inc
(bad)
sub
xchg
cmp
fwait
test
repz
push
mov
mov
push
aam
loop
jmp
or
dec
fsubrp
pop
into
ret
test
in
mov
aas
inc
adc
aas
dec
mov
sbb
ror
adc
fldcw
mov
jl
xchg
(bad)
adc
ret
ucomiss
iret
(bad)
scas
sub
dec
mov
enter
sbb
dec
pusha
sbb
cmc
ds
(bad)
in
sbb
fucomip
jne
add
ds
xchg
imul
jbe
(bad)
stos
fmul
shl
mov
cmp
scas
jnp
xchg
or
out
test
fs
movs
push
jmp
mov
clc
test
out
xchg
jnp
sub
add
cmp
and
(bad)
jg
pop
fstp
jne
sbb
aad
fnstenv
sub
(bad)
in
(bad)
adc
test
xor
jb
fstp
mov
repnz
lods
aad
test
in
xchg
sub
adc
(bad)
fdiv
mov
bound
xlat
sub
leave
adc
mov
sbb
xor
movs
cmp
cli
daa
mov
movs
jb
std
inc
jmp
sar
sub
xchg
(bad)
or
jmp
sub
ret
jno
mov
outs
and
xchg
rcr
stos
add
mov
pop
sub
fdivrp
or
jbe
pop
mov
out
adc
sbb
inc
(bad)
std
call
jl
pop
push
movd
push
and
mov
int3
fwait
mov
mov
(bad)
popf
stos
add
or
fstp
sub
add
ins
inc
mov
loope
jecxz
mov
movs
push
pushf
mov
sub
fwait
push
mov
mov
loopne
loopne
add
jae
push
cmp
push
and
cmps
gs
jp
pop
lock
cmp
sar
mov
pop
adc
xlat
xchg
mov
outs
lods
or
dec
xor
fdiv
cli
jmp
pop
test
(bad)
hlt
jo
pop
test
or
jge
cmp
inc
ss
(bad)
cmp
jp
(bad)
shr
cmp
inc
xor
inc
cmp
(bad)
push
(bad)
inc
add
mov
call
test
out
adc
mov
es
arpl
aad
inc
add
inc
adc
cmc
mov
(bad)
in
push
mov
fdivr
push
dec
or
push
retf
pop
jmp
inc
scas
mov
cs
xchg
and
test
test
cwde
sti
scas
mov
mov
stos
cmps
or
enter
jae
int3
fbstp
and
add
lock
sbb
je
das
cli
sbb
jge
mov
fisubr
inc
xchg
jae
arpl
out
push
jno
pop
adc
(bad)
jl
dec
je
mov
jp
mov
pop
sbb
adc
movs
inc
(bad)
je
xor
sbb
xor
jae
f2xm1
pop
fst
movs
cmps
div
inc
and
gs
stos
fimul
inc
cwde
mov
add
retf
and
push
(bad)
and
inc
xchg
xchg
dec
mov
in
mov
jp
jno
jg
call
pop
scas
lods
and
out
shr
push
xor
dec
add
fst
push
mov
gs
lahf
retf
retf
pushf
and
ins
ret
fcomp
ret
sub
scas
inc
int
sub
(bad)
shr
or
sbb
xor
sbb
sub
pop
fnstsw
das
jmp
pop
or
pop
jo
lds
xchg
nop
dec
push
cld
movs
sub
jge
inc
cmp
sbb
cs
adc
push
mov
inc
retf
fld
loope
mov
inc
mov
icebp
ins
mov
inc
ins
mov
sti
(bad)
lods
mov
mov
mov
aaa
mov
out
or
cmp
aaa
xor
add
ror
dec
outs
bound
push
dec
inc
dec
loopne
and
sahf
jae
fwait
pop
sbb
and
scas
push
jo
outs
inc
loope
loopne
inc
inc
or
xor
out
nop
push
cmp
xor
mov
cmp
pshufw
inc
les
xchg
sbb
rcr
imul
adc
sub
push
mov
lods
or
pop
jnp
mov
sub
popa
scas
xor
retf
pushf
ds
mov
inc
aaa
rcl
pusha
cmp
bound
cmp
fsub
imul
xchg
and
mov
aad
out
out
inc
mov
sbb
add
mov
dec
xchg
adc
mov
inc
push
xor
ret
xor
repnz
add
jecxz
push
(bad)
add
mov
xlat
mov
inc
test
mov
xchg
cmps
sbb
push
pop
xor
aas
xor
test
cmp
sbb
lds
test
mov
out
mov
adc
into
fs
mov
adc
out
cmps
jns
sub
mov
cli
jmp
lods
ret
retf
je
out
repz
dec
aam
dec
and
in
mov
jno
jnp
(bad)
mov
mov
sbb
inc
fcmove
ds
mov
ret
jmp
lea
or
mov
lea
aaa
(bad)
or
cmps
adc
mov
test
adc
mov
push
xor
dec
fld
add
test
jbe
inc
jbe
mov
or
xor
pushf
ins
sbb
mov
into
out
(bad)
in
out
add
jbe
js
hlt
and
mov
push
int3
retf
fdivr
or
push
fsubp
pushf
mov
dec
ret
sbb
imul
sahf
xchg
outs
push
(bad)
inc
pop
push
mov
lahf
jge
daa
stc
test
aaa
adc
lds
int
ins
mov
out
adc
movs
enter
scas
sub
mov
dec
in
push
fsub
pushf
or
jbe
aaa
or
push
inc
call
test
outs
movs
cmp
adc
ror
adc
sub
cld
in
sti
mov
mov
xor
xchg
jnp
je
aad
xor
and
mov
ficom
or
push
jns
(bad)
fcom
jmp
stos
push
mov
lods
mov
pop
inc
mov
pop
int3
imul
jg
stc
push
or
nop
and
jo
pop
not
loop
test
push
aam
aaa
jge
mov
das
mov
xchg
mov
xor
mov
lods
aaa
inc
inc
inc
popa
outs
cmps
xor
jp
or
call
xlat
mov
lods
adc
jbe
push
scas
xor
cdq
xchg
xlat
add
(bad)
scas
sub
and
xor
adc
sbb
pop
loop
and
das
jmp
loopne
mov
xchg
mov
scas
dec
rol
adc
dec
inc
pop
cli
adc
(bad)
int
jmp
cmp
inc
outs
mov
adc
dec
sub
sbb
lods
rcl
inc
int3
mov
sub
pushf
(bad)
cmp
xlat
mov
xchg
sahf
nop
push
in
mov
fimul
stos
push
sub
add
mov
sti
add
add
mov
jge
xchg
mov
or
pop
jg
cmp
int3
ja
repz
and
push
mov
mov
retf
pop
pop
jnp
(bad)
repz
add
mov
aad
or
mov
mov
test
jb
int3
mov
inc
ret
dec
movs
jle
inc
dec
cld
add
inc
and
pop
mov
iret
cmp
mov
pop
aam
sub
mov
popa
push
mov
arpl
retf
xchg
repnz
aad
popa
xor
push
pop
lds
ins
rcr
inc
test
jbe
int
loopne
jecxz
(bad)
loope
mov
adc
mov
ror
jecxz
(bad)
enter
jo
mov
or
aad
add
inc
mov
ffree
or
xor
jno
mov
cmp
in
push
test
inc
sahf
jecxz
shl
xchg
lods
mov
(bad)
in
push
mov
lods
push
and
enter
cmp
fs
repnz
adc
popa
mov
xchg
inc
jmp
test
adc
stos
pop
push
push
ds
xchg
add
mov
push
icebp
xor
fisttp
dec
adc
pop
clc
jnp
push
in
icebp
cmp
mov
aaa
xchg
jae
inc
pusha
or
in
dec
out
fwait
jl
cli
call
fild
pop
push
or
in
mov
add
xchg
pop
and
add
dec
jmp
test
ins
lock
add
and
cmc
cmp
pusha
fs
mov
aas
cmps
push
push
sti
icebp
rol
pop
xchg
lods
es
mov
je
or
xlat
pop
pop
and
pop
xlat
mov
inc
or
scas
std
mov
sbb
ds
hlt
pop
pop
leave
shl
sbb
icebp
(bad)
lods
fisubr
les
fsubr
adc
dec
imul
fcomi
(bad)
(bad)
(bad)
fild
cld
mov
cmp
lock
(bad)
mov
mov
aad
ins
xor
inc
mov
scas
das
mov
movs
imul
add
fisttp
call
stos
sub
pop
xchg
push
dec
mov
cmp
neg
cmp
sbb
pop
ret
les
or
push
push
int
movq
xor
ret
(bad)
jmp
shl
retf
movs
inc
xchg
pusha
pop
inc
dec
and
xchg
pop
or
mov
leave
into
or
retf
ds
js
fnstsw
jno
push
xor
nop
out
and
mov
dec
(bad)
ss
mov
hlt
sub
adc
sbb
sahf
and
and
dec
pop
or
cmps
mov
call
cmc
outs
cld
and
cs
(bad)
jmp
mov
sbb
repz
pushf
lahf
xchg
jmp
cmps
xor
retf
add
call
out
and
fnstenv
mov
sub
xchg
inc
xor
call
and
pop
xchg
in
lods
int
cmps
lock
xor
add
mov
mov
sub
mov
mov
and
xchg
mov
or
adc
fisttp
adc
test
leave
mov
push
imul
fbld
fwait
push
test
mov
out
push
scas
sub
ret
or
aad
cmp
mov
add
sub
out
mov
in
xchg
adc
and
call
movs
xlat
sbb
aam
add
test
cli
daa
(bad)
mov
xor
icebp
pop
retf
pop
push
pop
loop
mov
cmps
mov
lods
inc
imul
pop
hlt
push
and
inc
scas
adc
mov
cmps
pop
jnp
xlat
js
jne
ror
mov
scas
(bad)
fidiv
leave
pushf
fwait
repz
call
repz
mov
leave
and
and
mov
push
jp
pop
aam
jge
add
dec
or
cmp
dec
rol
dec
jno
mov
mov
gs
ror
jge
js
arpl
fild
cmp
mov
add
scas
call
(bad)
fild
arpl
jmp
jg
push
out
(bad)
mov
rol
ss
xchg
cmp
cmps
mov
clc
inc
pop
in
mov
ds
jecxz
pushf
sbb
dec
sub
les
ins
in
cmp
in
push
adc
rol
pop
push
xchg
xchg
or
cs
shr
fld
jno
(bad)
aam
test
jmp
test
lock
call
fdiv
push
(bad)
lahf
add
and
mov
inc
xor
push
outs
mov
lods
and
or
dec
jns
imul
xchg
mov
in
push
jo
jns
or
and
mov
cwde
lods
pop
jmp
sub
push
mov
xchg
pop
movs
xchg
sub
or
cmps
movs
mov
jl
push
outs
fs
lea
loope
rol
gs
add
mov
cmp
xchg
inc
shl
out
rol
ins
xor
mov
aam
fwait
aam
and
and
clc
push
scas
in
clc
mov
cld
out
push
cmp
fld
aaa
sub
and
adc
ja
ss
in
xchg
cmp
mov
test
js
xor
fsubr
scas
(bad)
push
or
gs
inc
leave
jbe
sbb
lods
outs
sbb
ins
fisubr
mov
cmps
jbe
in
sahf
add
lods
shl
cmp
mov
stc
iret
sar
in
jg
xchg
xchg
cmp
xor
loop
fimul
sbb
mov
fcmovb
imul
mov
jmp
cs
aad
push
jae
dec
mov
xor
lods
lods
ins
sub
cwde
mov
xchg
push
add
hlt
in
sub
loopne
xor
pop
leave
or
xchg
push
(bad)
dec
inc
rcl
rcl
ret
retf
in
test
ret
fsub
or
jg
fwait
icebp
loope
(bad)
and
inc
das
mov
lods
stc
dec
ins
movs
xor
add
test
ds
(bad)
shr
mov
sub
adc
jmp
and
(bad)
aas
mov
inc
sub
es
pop
mov
xchg
jmp
sub
push
pop
or
cmp
fcomip
mov
adc
cmp
outs
repnz
es
test
into
int
lock
je
pop
loop
adc
cmps
lods
cmp
mov
imul
push
les
cmps
mov
adc
mov
jbe
outs
rcl
push
sbb
out
mov
or
jb
lds
mov
push
mov
inc
pusha
fst
jbe
stos
fs
xlat
add
imul
add
repnz
xor
mov
inc
mov
sub
loopne
out
mov
mov
in
scas
jmp
mov
push
mov
pop
mov
add
cmps
add
ret
into
xor
adc
in
jg
dec
xchg
jae
out
push
ret
add
and
xchg
inc
jge
cmp
imul
ret
jmp
mov
mov
movs
popa
jp
dec
push
add
xchg
and
adc
addr16
mov
mov
ja
pop
push
pop
loope
sbb
mov
ins
push
mov
test
sub
mov
ret
sbb
outs
leave
loopne
rcr
test
xchg
or
mov
push
sub
xor
pushf
pop
sub
pop
in
mov
gs
loopne
bound
arpl
(bad)
out
sahf
ins
(bad)
(bad)
sahf
ins
stos
push
lds
aad
jmp
jecxz
sar
(bad)
and
getsec
inc
(bad)
fcom
out
sti
adc
dec
mov
popa
popf
jge
std
out
xor
aas
push
add
pop
addr16
mov
jp
sub
dec
cmp
popf
xchg
cld
mov
jle
xor
fcomp
test
jp
(bad)
jmp
sub
gs
bound
enter
scas
sub
cmp
shl
inc
cmp
xor
sub
ret
jmp
inc
ss
leave
sub
and
sbb
(bad)
(bad)
dec
popf
xlat
inc
mov
xchg
in
sbb
mov
cwde
mov
(bad)
fmul
mov
sahf
loopne
mov
sub
inc
jnp
fucomp
or
(bad)
sub
xchg
retf
loopne
ret
mov
test
jne
sub
lea
cmp
fs
cdq
push
jg
mov
(bad)
loop
nop
lds
ins
and
cmp
xor
mov
and
dec
imul
xor
mov
cs
test
pop
fsubrp
fisub
adc
js
popa
and
xor
mov
lahf
dec
outs
(bad)
jb
addr16
je
push
stc
mov
sub
dec
rcl
add
xchg
jmp
xchg
dec
test
imul
xor
mov
gs
push
mov
hlt
dec
jb
into
pop
ds
fbstp
add
movs
loop
push
in
jb
dec
out
fidivr
out
test
popf
fwait
inc
push
dec
fdivr
dec
xor
inc
sbb
fs
pop
into
push
mov
nop
push
cwde
or
mov
push
icebp
in
push
xor
sub
xor
push
mov
dec
mov
xor
outs
out
sti
mov
push
mov
fbstp
mov
ret
adc
cmc
movs
mov
pop
mov
cmp
sti
add
mov
fcomp
imul
scas
jecxz
and
sbb
outs
(bad)
jne
dec
cmps
pop
std
sub
hlt
mov
mov
mov
sbb
or
cdq
mov
outs
nop
scas
cli
aaa
pop
mov
pusha
sub
fcomp
lods
test
jae
data16
push
loopne
mov
cmp
lock
adc
and
repz
aaa
or
cmp
mov
fmul
retf
jnp
mov
dec
xchg
adc
mov
rcl
add
and
paddq
push
add
add
call
jmp
cld
retf
jmp
inc
jmp
pop
cmp
inc
in
scas
add
in
jmp
test
dec
xor
lods
loopne
pop
gs
mov
aaa
push
repnz
daa
sti
pop
sub
add
test
shr
mov
cdq
popa
retfw
mov
pop
xlat
sub
fldcw
mov
and
rep
xchg
sub
jecxz
xchg
imul
adc
sub
(bad)
sub
pop
dec
inc
jae
mov
imul
ror
pushf
pop
test
sbb
jge
stc
clc
jmp
into
leave
(bad)
arpl
jecxz
push
mov
das
mov
mov
sbb
push
je
in
repz
jne
shr
jge
sub
jo
aad
sbb
hlt
mov
cmp
into
or
stc
(bad)
adc
inc
loopne
enter
jne
push
pushf
xchg
jg
es
and
sub
dec
mov
retf
xor
xchg
jns
mov
jmp
pop
mov
pop
pusha
outs
mov
mov
xchg
lock
jp
add
xor
sti
cmps
adc
inc
out
mov
pop
fs
lods
jno
movs
pusha
mov
in
sub
mov
xor
add
loopne
pop
mov
in
sbb
in
dec
pop
cmp
in
les
mov
test
cmp
inc
fwait
enter
sbb
or
ja
mov
(bad)
push
repz
jnp
sbb
sbb
bound
push
add
test
cwde
adc
sub
fst
ror
cli
cmp
mov
mov
pop
enter
pop
sahf
sbb
sub
movd
xor
mov
and
clc
pop
cmp
adc
movs
loop
es
lea
cld
imul
dec
and
push
jb
cwde
jmp
adc
cmp
adc
inc
push
aad
push
cmp
lds
xor
sub
pop
(bad)
mov
call
das
stos
addr16
push
pop
xchg
xor
pop
push
sub
mov
lods
lahf
and
xor
add
out
jmp
test
inc
out
out
inc
jmp
inc
lea
cmp
and
popa
loope
add
cwde
xchg
jmp
sub
fistp
popa
cmp
push
xor
sbb
inc
sti
mov
lds
call
aaa
sub
ret
sbb
mov
sub
pushf
push
jmp
inc
ret
and
jns
test
xchg
jmp
pop
sti
mov
(bad)
bound
jg
lea
retf
adc
in
sbb
call
ins
cmp
mov
aaa
sbb
sub
and
sahf
or
fcmovu
fisttp
pop
loope
lea
leave
loop
jbe
popa
nop
dec
leave
ret
dec
ins
std
xor
push
(bad)
add
xor
push
fld
mov
pusha
outs
out
adc
dec
pop
lahf
and
xor
lods
jno
xor
gs
aaa
dec
fwait
call
inc
add
movs
ins
adc
outs
inc
mov
ja
add
dec
in
repz
push
(bad)
es
cmp
adc
test
ficomp
push
add
jl
sub
sbb
xchg
dec
popa
std
das
sbb
mov
jecxz
mov
xchg
mov
es
ss
movs
xchg
pop
dec
popf
xor
pop
dec
ins
pop
pop
das
loopne
xor
xchg
sti
retf
stc
add
push
jno
push
test
and
jne
adc
stos
mov
jnp
retf
scas
cdq
pusha
inc
lods
imul
stos
xor
fcom
mov
fsqrt
les
sbb
cmp
ins
test
sti
pop
fwait
ja
mov
out
add
repnz
fsubr
adc
or
scas
retf
cdq
and
dec
dec
jbe
sub
aam
xchg
stos
add
jle
jecxz
jmp
int3
ja
jo
cld
rol
push
nop
arpl
pop
or
xor
mov
mov
or
je
add
idiv
popf
xor
aas
jno
push
test
xchg
(bad)
mov
gs
cli
inc
pop
in
xchg
mov
inc
(bad)
std
rcl
in
arpl
sbb
call
mov
cmp
retf
aam
sahf
ins
mov
inc
inc
fld
dec
std
out
mov
add
sbb
aad
jg
xor
push
inc
into
mov
inc
dec
rcl
mov
jb
adc
iret
scas
mov
xlat
(bad)
test
rcl
pop
in
adc
nop
icebp
aas
or
addr16
jl
enter
lock
(bad)
dec
add
pop
mov
push
mov
(bad)
sub
inc
sbb
jecxz
inc
jno
dec
out
xchg
or
es
fnstenv
or
ret
add
jnp
mov
imul
in
xor
stc
mov
pop
xchg
daa
mov
in
push
(bad)
cs
mov
hlt
js
pop
ds
xor
es
test
xchg
mov
call
sbb
mov
jb
mov
mov
outs
xor
sub
xor
ficomp
cmp
mov
enter
push
das
loope
jecxz
scas
push
push
lahf
stos
ret
das
arpl
data16
ror
pop
mov
clc
aas
jmp
push
retf
mov
ss
call
clc
loop
inc
jnp
mov
cmp
jl
push
mov
fldenv
movs
add
int3
rcl
int
rep
jmp
push
pop
add
sahf
mov
jb
cmps
ret
pop
mov
lods
jb
xchg
clc
inc
addr16
shr
jno
fwait
leave
push
push
inc
dec
inc
fdivr
push
add
sub
mov
or
retf
jbe
repnz
jo
jno
fs
push
outs
(bad)
push
mov
or
mov
push
or
sbb
xor
jno
fistp
out
stc
addr16
call
dec
sbb
fisub
shl
aad
jb
rcl
fcmovbe
ss
add
adc
jmp
cmp
je
test
popa
sub
cdq
retf
inc
inc
adc
in
mov
xor
je
jg
dec
mov
sub
sub
push
mov
or
cmp
jmpw
cwde
xchg
dec
mov
pop
jne
mov
stc
jg
cmc
push
(bad)
pop
sbb
js
retf
icebp
jae
inc
and
test
jecxz
mov
hlt
sbb
cmps
jns
les
xchg
jmp
mov
cmp
es
or
pop
not
cwde
iret
test
aam
xor
and
sub
mov
ja
je
(bad)
fild
pop
in
data16
push
ss
outs
cmp
test
xchg
cmp
std
xchg
jmp
and
sbb
nop
adc
sub
push
imul
arpl
cmps
push
inc
dec
cmps
or
test
xor
add
inc
push
int3
sbb
and
data16
jno
cmp
addr16
fbstp
adc
mov
in
call
les
(bad)
fiadd
xchg
adc
gs
sbb
movs
or
cwde
jbe
clc
jp
jno
shl
shl
fwait
ins
ror
sub
ss
jge
jecxz
sbb
iret
in
retf
adc
sub
sbb
cmp
mov
add
adc
inc
cdq
dec
xchg
stos
inc
shl
je
clc
cwde
les
in
mov
adc
mov
adc
js
push
add
sbb
ret
push
jg
cld
add
jecxz
cmp
jbe
lock
mov
jbe
pop
xchg
inc
aam
addr16
ret
push
bound
xchg
inc
or
rol
ins
mov
dec
call
xchg
loop
xlat
mov
xchg
sbb
loop
jnp
daa
or
(bad)
fld
cmp
jb
ins
mov
es
test
stos
cdq
je
cmc
loopne
call
pop
rcl
ja
add
aam
test
mov
jnp
cwde
iret
inc
jg
dec
stos
loope
fnstsw
nop
in
jne
xchg
or
inc
sbb
jnp
or
push
adc
cmp
mov
in
sub
xchg
mov
jnp
dec
je
ja
movs
cwde
shrd
leave
loopne
div
mov
add
fldenv
jne
or
mov
enter
cmps
cmp
add
loope
pop
mov
push
add
mov
ds
mov
clc
mov
lods
adc
dec
sub
lahf
lock
es
dec
rcl
aad
jl
sar
in
add
cmps
cdq
ins
fcomp
dec
popa
jbe
inc
adc
mov
lahf
(bad)
push
and
mov
mov
add
ja
scas
lds
dec
push
mov
sbb
popf
cmp
popa
mov
pushf
das
ja
test
push
add
pop
pop
jecxz
dec
jmp
lods
out
mov
inc
out
js
bound
lock
adc
cmp
push
dec
fdiv
stos
into
mov
fdiv
retf
pop
jbe
push
stos
xor
jne
cs
(bad)
mov
push
jmp
cmp
fcmovu
cmp
xchg
loopne
add
inc
jmp
cmovl
scas
cmp
pop
pop
por
sub
aam
push
sub
jp
cmps
nop
out
mov
scas
sbb
jl
jo
xor
ins
mov
inc
jno
mov
cwde
ror
das
xchg
imul
popa
pop
(bad)
push
rcr
fistp
mov
in
push
xor
ror
popf
scas
enter
jno
mov
sub
int
mov
cmp
loope
movs
xchg
mov
cld
sub
mov
adc
sub
addr16
mov
jle
mov
in
out
aam
mov
sbb
cld
mov
mov
arpl
adc
ins
jno
gs
inc
clc
lods
hlt
mov
push
xor
jecxz
leave
dec
cld
mov
adc
imul
stos
jmp
mov
dec
sar
add
movs
add
scas
sub
sub
fdivr
mov
mov
add
pop
push
push
cmp
push
daa
mov
adc
mov
mov
push
lea
or
xchg
push
stos
lds
xor
div
mov
cmp
push
aad
xchg
cmps
mov
mov
push
jbe
xor
mov
jb
test
jne
inc
xchg
or
jno
std
jmp
sbb
jno
(bad)
xchg
test
push
gs
pop
push
les
mov
xor
sub
sub
cli
xor
pop
xor
aas
dec
nop
dec
adc
fidiv
xor
jge
xchg
outs
shl
shl
mov
outs
aas
lock
gs
(bad)
and
sub
fld
xlat
ds
mov
sbb
and
mov
sub
cli
pop
clc
test
in
js
fcomp
les
adc
push
cmp
push
xchg
and
int3
jo
xchg
cmp
(bad)
leave
add
sbb
pop
mov
xchg
in
or
shr
retf
xchg
fdivr
loopne
push
mov
jecxz
pop
rcl
jle
fadd
push
push
repz
sub
hlt
stos
jbe
imul
lods
enter
inc
(bad)
mul
sub
push
mov
inc
inc
xor
push
and
loopne
mov
imul
xchg
add
inc
movs
mov
adc
sbb
inc
inc
or
jno
lods
push
cmc
push
ss
icebp
in
pusha
inc
mov
out
push
mov
test
in
retf
movs
jmp
add
lods
(bad)
not
jmp
dec
push
xchg
call
mov
and
mov
sti
xchg
xor
scas
retf
jae
push
popf
pusha
pusha
jmp
inc
outs
dec
imul
jecxz
adc
push
mov
jb
xor
inc
and
mov
mov
nop
push
ins
js
xlat
(bad)
fdiv
or
data16
into
dec
or
sbb
push
stc
jl
add
aas
sar
sub
aam
add
ret
popa
popa
mov
rol
mov
jne
icebp
iret
and
arpl
sbb
and
jb
push
bound
add
cmp
lock
add
adc
add
cmp
das
push
inc
out
wrmsr
sub
leave
ds
xor
dec
mov
test
jnp
scas
aad
sbb
out
ja
xor
pop
adc
scas
scas
or
out
cmp
sbb
sbb
in
mov
add
mov
pop
sti
pop
test
push
test
pop
mov
lahf
mov
mov
lock
xor
ss
popf
and
imul
or
addr16
pop
sbb
arpl
loopne
mov
push
lods
dec
xchg
cdq
in
in
loope
jb
push
push
clc
popf
into
inc
mov
jmp
sub
stos
adc
push
test
stc
js
test
cld
cmp
lods
sbb
daa
mov
adc
gs
mov
(bad)
mov
rdtsc
sti
sub
cmps
cmp
pop
call
xor
inc
xchg
lods
push
icebp
add
xchg
xchg
dec
int
inc
sbb
pusha
test
push
dec
ret
mov
imul
mov
cmc
imul
fwait
sub
xor
repnz
inc
aam
cmps
loopne
test
xchg
mov
out
outs
fs
or
test
push
stos
ins
push
fxch
inc
jbe
cdq
jl
add
inc
shl
mov
push
inc
push
mov
out
mov
out
bsf
inc
jno
dec
mov
fdivr
sbb
daa
push
dec
stc
and
into
push
xchg
inc
jecxz
popf
ret
in
adc
xchg
mov
stc
push
cmc
cmp
pop
dec
jmp
outs
xchg
xlat
mov
inc
add
push
movs
mov
jno
jl
bound
pusha
xchg
popf
js
loopne
xchg
dec
jbe
enter
mov
cld
sbb
imul
jno
jecxz
dec
xor
sbb
cmps
dec
pop
xor
cwde
push
std
std
hlt
adc
xchg
add
xchg
ins
retf
loope
xchg
icebp
rcr
pop
out
std
pop
or
dec
pusha
test
mov
les
sub
retf
aad
popf
lahf
dec
xlat
and
mov
test
and
mov
icebp
pop
pop
sub
jecxz
imul
cmc
sar
in
stos
adc
ror
jl
push
fimul
pop
mov
movs
test
add
add
and
jmp
mov
xor
mov
jbe
sub
mov
in
xor
aaa
mov
pop
fadd
add
lea
sub
js
push
jne
mov
loope
scas
nop
enter
repnz
mov
push
jmp
jmp
ins
add
mov
dec
sub
sub
mov
or
sub
cmp
pop
fisub
ja
push
(bad)
sbb
xor
pushf
fcmovbe
test
jle
mov
mov
jne
ins
loop
cmp
add
arpl
(bad)
retf
sbb
gs
sti
jmp
mov
fisttp
shr
shr
cmc
sub
mov
jmp
aad
test
sbb
or
fs
test
pop
cmp
ret
cmc
ss
pop
push
pop
pop
ins
inc
icebp
int3
pop
fisttp
loop
sub
jne
aaa
xor
pop
dec
mov
es
or
mov
cmp
pop
pop
xchg
fild
cmc
dec
add
ficomp
pusha
push
mov
push
(bad)
jmp
sub
shl
mov
jno
int3
sub
(bad)
retw
out
sub
pop
addr16
xor
add
xchg
pop
bound
dec
arpl
mov
(bad)
sbb
cmp
and
sbb
imul
sbb
sbb
xchg
dec
inc
sub
cld
(bad)
inc
mov
jns
push
push
out
jl
cmp
into
popf
pop
jle
fistp
dec
stc
dec
fld
push
pop
scas
dec
push
push
xor
ins
rcr
pop
mov
test
mov
dec
add
into
sbb
pop
mov
inc
sub
call
aaa
jb
and
xchg
adc
cs
daa
and
imul
xor
leave
dec
mov
pop
inc
jo
add
fist
(bad)
(bad)
mov
jecxz
mov
adc
popf
adc
lea
push
cmp
lea
aaa
xor
push
and
sub
adc
lock
push
lock
mov
out
xchg
ins
mov
cs
in
and
dec
aaa
shl
push
lods
repz
movs
mov
jbe
mov
jge
adc
mov
push
sahf
scas
or
ss
cld
mov
jae
out
add
cmp
pop
int3
pop
dec
push
fwait
ss
and
mov
jp
int3
lahf
scas
xchg
sbb
dec
mov
add
scas
jge
xchg
popf
ds
lock
and
arpl
xlat
fisub
pop
and
not
fdiv
outs
push
pusha
pop
inc
inc
sbb
push
lods
pop
xor
mov
and
ds
lds
jmp
jl
leave
scas
sub
popa
fmul
loope
js
mov
(bad)
pop
jns
daa
mov
popa
push
outs
inc
out
popa
add
sti
rcl
in
fadd
test
loopne
pusha
xchg
jmp
ins
(bad)
fdivr
inc
mov
test
xchg
int3
adc
mov
mov
shl
push
call
add
sbb
mov
adc
outs
lahf
xchg
lods
jno
pop
fnstsw
mov
inc
fcom
sti
rol
loop
sub
mov
sbb
sbb
add
mov
add
mov
jecxz
outs
test
jmp
call
retf
fdiv
or
loope
out
mov
mov
div
imul
neg
push
push
addr16
int
popa
ja
pop
xchg
cmp
lahf
xor
aad
mov
in
sahf
dec
or
jecxz
cmp
out
sub
stc
adc
sub
sahf
cmps
jne
jge
adc
dec
pop
fnstenv
ds
fs
fs
fidiv
(bad)
fcomp
adc
loop
imul
repnz
ins
sub
ret
(bad)
xlat
sbb
movs
cwde
shl
sub
pop
outs
retf
pop
bound
sub
xchg
xchg
jne
mov
mov
pop
cmps
xor
jo
je
mov
mov
add
mov
retf
fcmovbe
imul
outs
and
loop
pop
or
xor
test
sti
mov
add
inc
or
push
pop
loopne
or
sbb
push
inc
test
inc
pop
sbb
nop
push
xchg
out
xbegin
fistp
mov
cli
sub
cmp
pushf
rol
lahf
retf
cmp
xchg
mov
jecxz
lahf
jne
sbb
(bad)
mov
stc
iret
pop
cmp
sti
adc
mov
into
hlt
cmps
sahf
and
dec
xlat
mov
loope
(bad)
jmp
(bad)
push
sub
jmp
fcom
ja
mov
jmp
inc
jmp
xchg
lods
xchg
arpl
and
frstor
stc
jbe
pusha
and
cmp
sub
jmp
add
das
jno
jnp
add
fwait
loop
and
or
loopne
sti
stos
adc
fldenv
xchg
idiv
aas
cld
idiv
ss
hlt
imul
aaa
fnstenv
sub
fld
and
std
cmp
cmp
cmps
mov
movs
cmp
dec
leave
jg
sub
push
add
imul
call
(bad)
jns
dec
mov
adc
mov
inc
retf
inc
inc
add
push
or
in
out
and
pop
and
test
pop
in
cmp
out
jne
mov
(bad)
into
jmp
retf
call
test
push
jno
std
popf
scas
stos
hlt
xor
scas
repz
xor
mov
inc
sbb
std
push
cmc
add
daa
adc
outs
adc
xor
push
fist
dec
sbb
call
ins
add
push
push
add
xor
popa
pop
sub
push
and
jmp
push
mov
push
sbb
test
shl
sti
or
scas
adc
xor
aad
lods
outs
sahf
pop
add
ret
inc
lds
aaa
hlt
push
and
out
dec
jg
sub
dec
fnstsw
inc
popf
cmp
into
mov
ss
in
leavew
sahf
mov
or
xchg
pop
jg
add
stos
jp
or
mov
retf
sbb
cmp
inc
sahf
jns
dec
out
sar
out
add
dec
add
mov
test
cs
lods
(bad)
xchg
hlt
aad
sbb
xchg
cdq
movs
sbb
icebp
or
push
jg
xlat
xor
dec
jnp
pop
(bad)
sar
sub
in
xor
mov
add
leave
xor
lods
mov
mov
pop
(bad)
sub
(bad)
movs
inc
pop
jbe
pop
push
bound
xor
jne
dec
aam
imul
mov
cmp
fist
mov
or
sub
inc
call
jg
xchg
imul
add
ins
push
nop
mov
movs
xor
sub
test
dec
test
pop
dec
adc
add
add
cwde
or
pop
loopne
inc
addr16
arpl
and
(bad)
mov
mov
push
mov
add
popa
data16
inc
jmp
jecxz
ds
add
scas
cmps
(bad)
sbb
xchg
in
xchg
call
inc
fadd
iret
fstp
pop
int3
fdivr
ins
jle
adc
fsubrp
inc
sub
jmp
push
enter
nop
add
ins
mov
aas
jb
push
outs
dec
mov
adc
jo
mov
xchg
leave
repz
gs
mov
clc
inc
xchg
aaa
gs
xchg
in
mov
pop
sbb
push
sahf
lds
inc
jge
shr
xor
cmps
and
(bad)
cmp
cmp
rcr
jmp
cmp
sub
pop
jbe
retf
(bad)
jmp
and
inc
xchg
or
retf
call
mov
xchg
test
adc
(bad)
rcr
inc
inc
out
mov
mov
inc
dec
pop
or
mov
shl
mov
jmp
mov
mov
enter
in
mov
push
int3
mov
push
retf
movs
push
xor
push
stos
in
into
xchg
adc
jae
mov
add
and
cmp
cmc
lea
dec
push
jmp
pop
data16
(bad)
push
not
push
or
push
pop
or
jg
mov
jns
(bad)
stc
scas
call
fwait
push
xlat
pop
and
sahf
pop
mov
mov
ja
ret
in
or
movs
push
cmc
and
stos
int3
in
mov
lds
gs
xchg
push
mov
cmc
push
dec
mov
lods
std
inc
cmp
sub
jecxz
mov
in
les
fsubr
jae
add
fst
push
lods
adc
adc
xchg
xchg
sar
fistp
push
push
sbb
xor
lock
pusha
sub
or
retf
ficom
mov
arpl
push
mov
mov
jne
mov
sub
loop
retf
es
push
adc
in
mov
stos
ror
push
and
ins
jb
inc
and
sub
sbb
mul
mov
push
xchg
addr16
jns
aam
mov
xor
pop
mov
inc
ds
pop
test
out
or
xor
or
(bad)
jecxz
sub
loopne
mov
fidivr
jp
push
jae
adc
jmp
push
in
hlt
std
ds
rol
and
stos
and
fsubr
push
mov
lds
mov
adc
adc
ss
pop
pop
pop
inc
es
jmp
dec
mov
int
stos
mov
lods
shl
ds
neg
pop
pop
test
ror
pop
dec
jecxz
inc
movs
js
(bad)
mov
jo
lea
shl
mov
clc
pop
mov
mov
shr
push
dec
fidiv
jb
ja
aam
add
mov
int3
push
(bad)
xchg
add
jno
pop
test
lds
popf
sub
call
or
std
pushf
inc
ss
fcom
fcomp
icebp
rcr
cmp
(bad)
repnz
jp
push
xor
jo
and
jo
sbb
in
repnz
in
ficom
jnp
mov
sub
in
sti
xchg
add
push
addr16
lods
adc
mov
jge
push
psubsw
and
inc
mov
ss
xchg
jg
icebp
dec
jmp
sti
inc
add
leave
popa
dec
das
js
mov
mov
(bad)
hlt
fidivr
push
mov
sbb
es
rcr
or
enter
cmc
sar
ja
dec
mov
xor
and
outs
jno
out
cs
jl
and
push
add
addr16
sub
in
mov
lods
ds
adc
into
sti
adc
mov
loopne
int3
adc
push
xor
mov
adc
das
fdiv
jmp
xchg
sbb
adc
push
sbb
popa
mov
icebp
movs
xor
scas
call
jge
xor
mov
cs
ss
or
aad
mov
js
fdivr
pop
repz
mov
add
inc
pop
addr16
and
push
pop
pop
mov
push
mov
retf
ret
out
mov
and
int3
inc
movs
xor
fs
pop
sbb
jbe
pop
jns
lahf
in
lds
add
into
sbb
ins
shl
shl
inc
mov
gs
sub
ja
pop
add
sub
sbb
movs
sbb
add
lods
aaa
add
pop
jp
mov
and
imul
push
fs
repnz
mov
jmp
cmps
mov
mov
mov
mov
inc
mov
cwde
push
scas
ss
movs
xlat
ins
or
fisubr
nop
cli
imul
dec
mov
sub
push
pushf
and
fidiv
push
fdivr
ins
popa
leave
and
and
mov
pop
ret
xchg
pop
in
popf
fimul
mov
and
bound
enter
mov
scas
jbe
jb
bound
mov
cmc
cmp
push
gs
sti
mov
in
xor
sub
hlt
test
scas
adc
in
pop
das
mov
out
icebp
imul
adc
es
pop
dec
(bad)
call
xor
std
push
push
ret
test
adc
sti
lock
adc
aam
mov
adc
imul
dec
dec
movs
add
loope
xlat
or
adc
jge
popf
neg
movs
dec
push
push
jne
popf
hlt
fadd
jmp
ins
ss
lock
retf
cmp
aaa
aad
and
popf
jmp
nop
in
neg
ror
cmp
sbb
aas
add
(bad)
movs
pop
mov
sahf
sbb
sbb
cmp
sti
fnsave
test
outs
sbb
jne
xor
jmp
xchg
out
(bad)
jmp
jne
mov
aas
mov
les
mov
call
sbb
pushf
es
sbb
rep
fidiv
fnstenv
pop
inc
xchg
out
cmp
cli
inc
cmp
xor
out
loop
cli
inc
jae
ds
lds
fstp
dec
jmp
fisubr
pop
lods
(bad)
jl
ret
mov
mov
sbb
popf
and
add
mov
sbb
scas
pop
out
xchg
sbb
rcr
pop
add
cmp
xchg
jmp
cmp
mov
psubw
cmp
dec
loope
xchg
lods
push
popf
cmp
xlat
scas
imul
in
cli
(bad)
rcr
shl
mov
jae
jnp
dec
dec
and
xor
pop
jl
idiv
add
xchg
and
xor
test
adc
push
(bad)
mov
(bad)
jno
jmp
adc
data16
pop
ror
inc
aas
pop
inc
loope
mov
fwait
mov
rol
pusha
std
pop
mov
xchg
jbe
icebp
(bad)
loop
pop
mov
jo
cmps
pusha
mov
icebp
cwde
xchg
fistp
jns
inc
mov
cmc
inc
pop
popa
jmp
inc
js
cmp
mov
stc
mov
(bad)
mov
outs
loope
jecxz
lock
pusha
cwde
les
in
ins
cmc
pop
fiadd
movs
cli
rcl
mov
int
shr
imul
jne
ss
test
mov
adc
mov
fwait
add
jo
dec
and
and
test
mov
xor
adc
out
add
and
std
push
or
jne
mov
inc
cmp
push
les
inc
lds
mov
idiv
arpl
lahf
out
jp
(bad)
aad
cld
lea
fbld
les
aaa
fisttp
rol
mov
dec
sbb
xor
scas
inc
add
pop
pop
fucomip
addr16
adc
inc
inc
xor
out
mov
test
sbb
ins
aad
hlt
dec
lea
cli
sti
xchg
inc
stos
inc
mov
ret
mov
imul
fwait
sti
add
mov
inc
rcr
cs
sub
pop
jmp
lds
dec
loopne
scas
cli
or
aad
hlt
js
jl
neg
or
es
pop
and
neg
outs
cli
mov
inc
push
stos
and
stc
dec
sbb
das
cmp
mov
fld
std
push
icebp
push
int3
fs
jns
ins
mov
dec
les
ds
pop
pop
test
stc
movs
pop
xchg
add
jbe
push
push
mov
jl
jb
sub
js
mov
xchg
pushf
cmp
or
(bad)
mov
inc
cmp
gs
aaa
jae
jne
mov
call
and
jno
mov
mov
xor
lds
ss
sbb
into
clc
int
jmp
sbb
sbb
mov
loopne
inc
popa
jne
cmp
call
sub
pop
cmp
pop
sbb
dec
in
loop
dec
lods
sar
or
into
arpl
cmps
and
ret
push
fld
fwait
sub
xchg
call
(bad)
mov
std
cmp
mov
aaa
inc
(bad)
jno
xchg
sbb
cmp
or
cmp
adc
clc
xor
xchg
std
mov
popa
lds
leave
push
adc
mov
inc
shl
scas
cmps
inc
leave
jbe
jecxz
sub
pushf
mov
mov
int
out
xchg
repnz
repz
push
cli
in
ja
sbb
es
outs
cdq
dec
xchg
clc
cmp
mov
xor
pop
jae
out
stos
push
add
hlt
jmp
loopne
mov
adc
pop
in
fsubrp
rol
dec
dec
xlat
dec
or
xlat
xchg
gs
mov
push
daa
mov
sar
or
push
or
scas
xchg
jnp
shl
sti
out
push
(bad)
aas
stos
pusha
(bad)
pusha
cmps
mov
push
lods
ret
or
test
jmp
(bad)
and
jb
inc
test
std
mov
mov
sub
xor
je
stos
sbb
addr16
psrad
or
pop
aas
retf
mov
shr
aam
jne
xor
mov
adc
ror
jae
mov
fild
lahf
jecxz
in
leave
sbb
(bad)
loope
mov
call
mov
adc
dec
mov
pop
movs
ret
rcl
xchg
dec
loop
mov
and
cmps
out
fwait
dec
jae
jmp
hlt
lea
push
adc
push
jbe
and
(bad)
shl
adc
pop
rcr
test
jle
xchg
mov
or
mov
jg
sbb
xor
cmp
lods
(bad)
pop
jnp
outs
into
loope
enter
fnsave
inc
add
xchg
aas
jne
retf
sbb
sub
inc
cmps
div
retf
fisub
in
mov
icebp
and
cwde
aam
cmp
ds
xchg
adc
sar
and
jmp
pushf
or
mov
xor
lods
sbb
sbb
sbb
add
adc
call
lock
mov
(bad)
xor
and
inc
adc
cmp
mov
mov
scas
mov
outs
inc
rol
pop
cmp
sbb
call
push
mov
fs
inc
dec
int
xchg
aad
mov
mov
jbe
fs
xchg
retf
dec
in
retf
adc
into
iret
jb
pushf
lods
mov
mov
xor
adc
ja
mov
mov
sti
cmc
sbb
cmp
mov
stos
jns
add
int
daa
add
pop
xchg
xor
stos
push
pop
pop
push
es
or
sti
mov
push
aad
mov
inc
ins
ins
scas
shl
mov
stc
imul
idiv
and
pop
div
shl
xor
int
es
push
xchg
xor
je
es
es
hlt
xor
lods
or
popf
push
out
fild
std
lea
pop
imul
mov
inc
push
bound
(bad)
dec
scas
sbb
jge
mov
cli
dec
sahf
mov
pushf
push
dec
sbb
mov
mov
pushf
mov
in
mov
shl
inc
addr16
mov
mov
test
in
inc
push
adc
fst
jnp
shl
lea
and
or
push
repnz
and
ds
pop
cmp
or
xor
jg
pop
cli
mov
int3
pop
fwait
dec
inc
or
cmp
xor
enter
test
lods
(bad)
mul
les
add
lock
xchg
pop
sahf
mov
and
lock
dec
loop
aas
and
jno
inc
push
or
lahf
movs
and
scas
inc
aas
or
(bad)
sub
push
outs
shl
pop
fmul
mul
popf
dec
xor
aad
mov
jne
imul
imul
fcmove
mov
dec
outs
jge
mov
or
jp
and
mov
pop
push
fucomi
lods
nop
xchg
sbb
cmp
jmp
lea
xchg
push
div
sbb
push
cmps
lds
pop
inc
xchg
jle
call
jbe
pushf
sbb
fsin
hlt
test
repz
push
ss
lods
es
jne
movs
push
lods
ss
sti
dec
mul
lea
jmp
add
sti
in
mov
js
fbstp
lds
cmps
xchg
aam
(bad)
push
aaa
xor
and
add
bound
mov
sar
fidiv
cdq
ret
jmp
lahf
inc
jmp
ror
pop
sub
and
xchg
xchg
enter
or
ret
adc
mov
sahf
cmp
ins
test
adc
inc
pusha
retf
mov
mul
test
cmp
lods
dec
movs
xchg
mov
mov
fstp
fisttp
pop
popf
sbb
icebp
aaa
out
mov
loopne
mov
ins
pop
dec
pop
pop
popf
jp
mov
xchg
ds
and
mov
push
cmps
in
xchg
add
loopne
push
mov
xor
dec
add
xor
shl
and
xor
mov
jl
rol
imul
xor
mov
push
(bad)
sbb
fisttp
jecxz
retf
xchg
lea
in
sahf
adc
hlt
or
aaa
mov
int3
jo
xor
cmp
gs
xchg
rcr
hlt
stos
mov
out
push
inc
xor
fdiv
(bad)
xchg
jmp
scas
push
jp
out
mov
test
xor
push
xor
cli
xchg
ret
sub
xchg
jge
push
jg
ret
vfmsubadd231ps
ret
(bad)
cmp
(bad)
movs
mov
push
icebp
pop
fnstsw
xchg
ret
or
daa
neg
imul
loope
inc
mov
fnstcw
vunpcklps
dec
pusha
and
adc
in
xchg
jns
gs
inc
imul
rcl
fldenv
jno
push
fcomp
lea
and
shl
xchg
push
das
cld
xchg
les
push
int
addr16
lods
nop
jp
ins
repnz
stos
xor
into
mov
and
movs
dec
mov
fs
ins
pinsrw
mov
les
popf
push
mov
jmp
add
push
enter
xchg
push
mov
fwait
pop
mov
xor
sbb
arpl
test
dec
fcom
and
xor
xor
imul
sub
leave
or
jmp
mov
loopne
mov
inc
adc
in
pop
(bad)
fcmovnbe
xor
into
(bad)
fwait
or
aaa
pop
jp
jge
sub
inc
call
ins
ins
cmps
jne
js
retf
adc
aaa
rol
jb
push
ja
outs
jmp
mov
mov
lods
jnp
inc
bound
mov
aad
sub
or
out
pop
xchg
dec
shr
pop
add
or
retf
xor
outs
cmp
ret
ror
dec
ret
lods
rol
pop
fcom
sub
pushf
push
push
mov
mov
adc
sti
das
mov
mov
inc
xchg
adc
or
sbb
adc
inc
sbb
cmp
gs
add
xor
push
xchg
sub
xor
lods
lds
cmp
dec
div
add
test
xchg
movs
pop
xchg
push
adc
xor
xchg
and
mov
int3
sti
clc
jae
out
popf
jmp
mov
push
into
retf
sub
xor
(bad)
cmc
repz
jbe
push
aaa
pusha
(bad)
stos
cmp
xchg
mov
pop
das
retf
ins
retf
push
movs
jbe
call
push
mov
stos
mov
xchg
mov
aas
add
sbb
vpaddq
push
mov
leave
inc
stos
mov
fld
repz
pop
test
jnp
pop
or
loopne
dec
repnz
push
push
hlt
(bad)
cmp
xor
pop
cmp
mov
xor
push
lock
cmp
scas
or
xchg
ins
add
mov
cmc
out
dec
xlat
jne
or
mov
jle
jb
fsub
(bad)
jle
mov
or
daa
jecxz
jmp
cmps
jl
sbb
jnp
ins
out
xor
es
stos
cdq
arpl
sub
sti
pop
popa
mov
inc
xor
jmp
ficom
and
sub
xor
dec
ret
in
mov
jbe
add
sti
and
xchg
cmps
scas
repz
stc
xchg
arpl
retf
sar
add
shl
lahf
inc
add
cmp
xor
xchg
je
pop
mov
and
or
movs
sub
mov
cmp
out
fldenv
in
out
mov
out
adc
repz
(bad)
lods
les
div
call
inc
mov
loope
aam
dec
push
fcomp
mov
shl
xchg
sbb
and
scas
in
sbb
xchg
jns
pop
push
test
pop
outs
addr16
movups
int
sub
in
sub
in
push
rcr
inc
int
sub
mov
ret
out
call
or
mov
pop
fs
cmps
test
into
fs
or
cld
pop
cmp
push
xchg
push
dec
mov
loop
lea
stos
test
iret
cmp
int
or
and
add
sbb
outs
xchg
das
loope
sub
popa
repz
daa
add
in
out
xchg
mov
adc
sub
bound
xchg
lods
data16
adc
pop
and
xchg
sbb
sub
jbe
das
fucomip
aam
xor
add
fwait
mov
popa
and
add
and
ins
leave
cld
jecxz
js
sbb
pop
cli
mov
adc
sub
pushf
loop
clc
jecxz
inc
std
shr
mov
cs
pop
sar
mov
sbb
xchg
push
mov
stos
or
adc
add
cwde
inc
or
mov
fdivr
das
aad
call
or
xor
adc
mov
stc
(bad)
dec
pop
adc
(bad)
mov
push
push
push
lods
fidivr
adc
sub
clc
jbe
sub
int
aas
(bad)
pop
mov
sbb
repnz
std
jno
in
ja
dec
les
mov
(bad)
ja
xchg
or
and
xchg
pop
ret
mov
popa
jl
adc
dec
imul
mov
mov
sub
call
daa
jo
lahf
or
jne
adc
mov
pop
jmp
adc
in
jecxz
pop
repnz
sub
enter
loope
jae
sbb
jmp
rcr
dec
test
and
mov
cli
les
mov
dec
inc
mov
shl
push
je
xor
dec
clc
xor
fbstp
or
retf
inc
adc
dec
repnz
into
jnp
sub
xor
jb
mov
adc
rep
mov
xchg
add
dec
pop
adc
mov
sbb
jp
xchg
pmulhw
mov
ret
push
jge
cmp
in
xor
add
pop
fimul
jg
inc
mov
fstp
and
into
call
call
test
jne
inc
daa
out
fisubr
inc
mov
dec
xor
push
fs
movs
pop
ins
ins
jb
stos
adc
frstor
movs
loope
in
xchg
outs
gs
shl
add
push
mov
loop
cld
fsub
or
jne
scas
loopne
arpl
pop
adc
movs
xor
inc
add
sbb
out
cmps
lahf
xchg
frstor
(bad)
pop
je
icebp
int3
fwait
pusha
dec
xchg
xor
mov
sahf
cwde
and
adc
mov
or
aas
cld
sbb
int3
fcmovb
push
(bad)
int3
movs
(bad)
mov
mov
pop
test
lods
xchg
cwde
mov
popa
cmp
cmc
add
add
aad
pop
in
out
test
pop
pop
push
add
mov
retf
sbb
or
cmp
fld
cli
and
call
gs
shl
(bad)
mov
push
add
jecxz
(bad)
push
jl
push
aaa
mov
shl
ss
pushf
mov
rcr
mov
mov
idiv
out
sub
inc
pop
jo
retf
jg
pop
push
retf
jno
stos
pushf
ret
sti
mov
sub
pop
call
stos
ja
inc
fdivr
xchg
adc
and
mov
add
cs
(bad)
mov
sub
pop
inc
je
repnz
sbb
pop
inc
out
sub
jns
jg
xchg
xor
movs
jl
or
push
cmp
push
fs
mov
and
sub
or
mov
xchg
push
bound
mov
sbb
jecxz
xor
test
push
sbb
sar
pusha
or
cmc
pop
les
pushf
icebp
mov
(bad)
jmp
ret
imul
rcr
add
je
inc
out
cli
ins
sbb
mov
mov
mov
fldenv
stc
jmp
in
psrlq
hlt
call
pop
jge
or
pop
neg
(bad)
jl
xor
adc
push
aam
jb
dec
neg
add
int3
mov
ja
add
or
adc
mov
cmp
ret
pop
xor
std
fdivp
and
xchg
jns
mov
(bad)
pop
ret
mov
push
out
push
call
daa
xlat
icebp
js
mov
push
jmp
sub
enter
cmp
pop
push
and
aaa
and
sub
sahf
sbb
fcmovu
aaa
stos
out
out
xor
adc
enter
ret
mov
dec
xchg
pop
xchg
test
fs
cmp
inc
mov
bnd
xchg
daa
and
ret
mov
inc
cdq
cmp
stos
push
mov
sbb
daa
push
data16
dec
jmp
and
push
test
rcl
sub
sub
mov
jmp
outs
and
push
inc
(bad)
pop
dec
lahf
cs
or
icebp
add
add
ins
movs
adc
outs
push
jmp
imul
pop
jno
hlt
idiv
nop
popf
mov
dec
shr
stc
or
push
in
dec
mov
sbb
xchg
and
lock
cld
push
lock
shl
mov
aam
aad
push
mov
sub
add
pusha
jp
aas
pushf
fmul
test
das
xor
addr16
fdiv
stc
mov
fsubr
rcl
lahf
xchg
enter
jmp
into
mul
add
retf
(bad)
rol
xchg
sbb
or
jbe
pop
xchg
adc
loope
and
(bad)
push
rol
pushf
mov
das
sub
mov
fmul
cmp
adc
sbb
icebp
jle
sbb
cmp
inc
fwait
add
and
int3
aaa
mov
dec
or
cdq
sub
mov
xor
dec
ret
retf
adc
repnz
out
xor
push
arpl
cmp
mov
int
mov
or
mov
repz
add
cmp
push
add
push
in
add
pop
and
adc
sahf
pop
add
add
in
sub
lods
sar
sub
int
int3
xchg
xchg
ret
jp
and
cs
jle
pop
sub
or
dec
retf
xor
dec
push
mov
mov
sbb
sub
xor
push
or
fs
ins
push
jp
ret
out
jecxz
mov
push
imul
mov
outs
jmp
repz
sti
loop
sbb
mov
dec
stos
add
jb
mov
sbb
mov
test
mov
dec
lahf
or
or
jl
push
test
cmp
cmp
adc
jo
test
fiadd
enter
fld
jmp
mov
mov
(bad)
pop
and
xchg
jo
xchg
mov
sub
inc
cmp
leave
adc
mov
jmp
(bad)
push
(bad)
(bad)
add
fadd
jne
mov
mov
call
inc
mov
cwde
rol
push
cmp
ja
ror
inc
icebp
jl
movs
mov
pop
dec
or
xchg
xchg
xor
call
(bad)
test
mov
jp
adc
fild
(bad)
push
clc
sahf
xor
(bad)
in
fld
sbb
fldenv
repz
push
cld
hlt
(bad)
and
jge
and
or
sar
sahf
cmp
mov
ret
(bad)
sbb
int3
ds
aas
xchg
sti
es
stc
jge
lods
imul
inc
std
fst
pop
scas
jmp
fwait
sahf
enter
jmp
dec
lahf
fcmovb
xor
data16
hlt
fdivp
xlat
xchg
shr
test
push
(bad)
lea
(bad)
and
cs
mov
jg
in
sub
out
test
jno
imul
out
cmp
mov
cmp
mov
dec
mov
jne
out
add
rcl
and
jecxz
pop
outs
or
xor
mov
dec
inc
cmp
jnp
rol
lods
xchg
dec
jmp
pop
xchg
or
sub
dec
jp
scas
int
xor
adc
test
and
inc
mov
xchg
dec
jmp
push
bound
scas
jle
xchg
shl
mov
into
jg
ret
aam
mov
jle
popa
pop
movs
push
sub
push
js
cdq
in
movs
xlat
pop
add
not
sti
inc
add
push
fdiv
xor
int
lea
imul
jnp
and
sub
imul
int
sbb
push
stos
loop
es
pop
sub
mov
push
aad
and
sbb
(bad)
mov
pop
arpl
or
cmps
out
stc
stos
scas
shl
cdq
test
mov
pusha
xchg
jns
xor
jo
mov
mov
jl
call
cld
jne
mov
add
pop
inc
scas
cli
aad
sub
xchg
ficomp
retf
pop
pop
test
retf
mov
pop
sar
jl
mov
cmp
arpl
xchg
pop
das
out
pusha
pop
loop
nop
(bad)
cmps
xlat
loop
xchg
sbb
jge
push
gs
in
mov
aam
ja
gs
inc
outs
or
scas
rol
pop
outs
xchg
pusha
cld
mov
jecxz
push
cmp
pop
xor
push
into
inc
push
mov
dec
popf
test
enter
scas
pop
iret
ror
cmp
jb
ins
in
stos
and
sahf
std
and
inc
inc
add
mov
push
sub
dec
test
ins
mov
push
push
pusha
fiadd
gs
push
(bad)
adc
jecxz
daa
imul
loopne
loope
loopne
cmp
fld
cli
pop
jae
fimul
push
stos
xor
fdiv
jle
in
imul
movs
fidivr
pop
repz
aad
ret
(bad)
into
bound
fmul
aad
and
xor
push
jecxz
loop
and
ret
sub
data16
les
repnz
and
sub
fs
mov
sbb
jns
enter
stc
and
sub
out
and
push
and
inc
psubb
xor
not
or
fsubr
or
icebp
loop
add
inc
xchg
aad
or
pop
push
stos
(bad)
cli
lea
cmps
xchg
lods
mov
sub
mov
add
xor
add
pop
jbe
sbb
push
outs
sbb
mov
int
sbb
je
cmp
add
les
ins
xchg
cmp
mov
push
loop
cdq
jmp
pop
pop
jno
jae
xor
jno
popa
sar
push
repnz
xor
(bad)
sub
cmc
sahf
xor
cli
mov
pop
push
sub
sub
cmp
js
hlt
adc
pop
stc
inc
pop
sbb
pop
mov
fisttp
gs
xchg
sub
add
pushf
shl
int3
test
mov
xor
push
push
outs
push
pop
loop
jl
mov
sub
mov
aaa
xchg
pop
push
xor
repz
xchg
aaa
lods
pop
xchg
sahf
shl
push
repz
add
xchg
mov
push
pop
ret
sbb
dec
pop
dec
and
mov
mov
dec
pop
cld
xor
(bad)
adc
and
aad
jl
cmp
push
scas
mov
jmp
xchg
ds
push
sbb
dec
push
sbb
jnp
loop
popf
adc
jge
loopne
pop
sbb
mov
loopne
addr16
inc
aam
pusha
cmp
sbb
jp
push
fsubr
in
test
nop
pop
stos
in
jge
aad
iret
cmp
ret
rol
xchg
inc
pop
jecxz
or
and
imul
mov
test
sub
into
je
(bad)
inc
rcl
inc
pop
imul
test
jno
push
call
mov
imul
jg
hlt
dec
aaa
nop
clc
add
mov
xchg
(bad)
sub
ret
leave
movs
aaa
add
cmps
dec
xor
pusha
pushf
mov
imul
cdq
test
push
xchg
xlat
out
(bad)
pusha
adc
out
mov
sbb
cs
cmps
sbb
push
sub
push
jl
into
push
stc
jns
and
cld
and
or
fs
inc
push
shl
lods
push
cmps
into
jne
xor
out
xchg
in
ss
jns
cmp
sub
icebp
stc
dec
pushf
loop
fwait
dec
lds
jmp
pop
add
shl
mov
retf
lds
sbb
test
rol
lods
inc
out
rcr
fist
lds
xchg
xchg
mov
push
sbb
dec
ins
(bad)
pop
ror
mov
jmp
xchg
loop
in
jmp
pop
and
cmps
in
lahf
cmps
popf
bound
xchg
sub
dec
jp
sar
call
cwde
clc
iret
jp
stos
in
fst
sar
pop
cmp
sub
inc
xchg
push
arpl
test
dec
xor
pop
sub
aaa
inc
leave
mov
fisubr
jne
mov
mov
jne
jbe
push
jns
push
mov
jle
and
es
push
test
push
adc
push
test
in
nop
xchg
outs
cmp
loop
xchg
adc
dec
test
and
xor
test
aaa
and
xor
int3
cmp
cmp
cmp
cmps
cmp
and
pop
iret
adc
mov
call
add
mov
jne
mov
xlat
or
push
mov
mov
retf
xor
repnz
ja
or
jns
sub
(bad)
lods
sbb
bound
iret
sbb
psubb
dec
xor
fstp
xor
pop
cld
mov
cmp
outs
mov
add
int
add
sbb
outs
cwde
(bad)
lds
daa
gs
(bad)
and
imul
leave
mov
icebp
xchg
test
call
(bad)
loope
xchg
pop
jb
mov
aaa
repz
push
xor
mov
aas
int3
add
lods
adc
add
iret
add
inc
ss
add
das
cmps
cmps
and
adc
ss
shr
sub
inc
aam
(bad)
imul
xrelease
sub
(bad)
out
mov
adc
jg
fwait
ret
dec
inc
call
(bad)
enter
inc
fwait
rcl
pop
cmp
or
xor
xchg
fucomip
pop
xor
imul
out
ret
lods
shl
int3
and
gs
les
loope
or
and
or
mov
retf
jnp
arpl
sub
and
adc
add
xchg
nop
clc
push
xchg
add
pop
pop
pusha
leave
mov
ins
mov
into
shl
sub
out
or
mov
dec
fcomp
cmps
mov
xchg
nop
sub
jecxz
cmp
xor
les
inc
mov
mov
out
cli
push
xchg
dec
xchg
mov
xchg
mov
cdq
out
jmp
pusha
jge
xchg
popa
lahf
pop
pop
add
lods
jmp
sub
xchg
mov
shl
in
sbb
out
mov
adc
pop
rol
inc
and
fnsave
out
lds
test
and
fsubrp
enter
in
out
sub
mov
inc
rcr
fisubr
iret
xor
imul
sub
mov
(bad)
adc
fsub
ins
sar
stos
jmp
mov
ss
fst
xlat
and
pop
xor
(bad)
adc
inc
sbb
sub
dec
cdq
mov
mov
sbb
stos
dec
jmp
cmc
fstp
cs
imul
cmps
jns
stos
fisttp
sub
mov
shl
sub
retf
fisttp
xor
ss
call
push
jns
add
mov
cld
in
lods
adc
movmskps
fst
adc
fsub
sbb
js
or
call
imul
shl
hlt
and
ret
data16
lods
push
loope
adc
je
(bad)
xchg
es
jmp
inc
call
aad
ret
int
test
sbb
sub
and
(bad)
sbb
mov
sub
sub
sbb
mov
stos
jae
jno
mov
sbb
ds
cmps
enter
sbb
in
dec
loopne
push
cwde
jno
mov
inc
pop
in
outs
cmps
cld
adc
fbld
retf
bound
rcl
das
scas
or
xchg
and
pop
mov
test
cmp
ret
iret
pop
mov
hlt
jae
push
cmp
stos
mov
and
mov
or
xor
(bad)
and
inc
(bad)
jno
push
mov
stos
mov
jmp
xchg
push
pop
jecxz
jnp
push
aad
push
int
shl
into
push
pop
add
leave
inc
push
pop
cld
aad
jmp
push
pop
dec
sbb
ficom
and
movs
adc
xor
xor
push
dec
push
cwde
in
inc
inc
or
data16
push
jge
sbb
dec
jmp
fwait
and
push
sahf
add
pop
sbb
shl
stos
mov
mov
js
sub
sbb
xor
ficom
and
sub
and
sub
pop
jmp
dec
sbb
sub
pushf
mov
and
pop
inc
mov
rcl
sbb
fucomip
jl
add
sahf
fldcw
stc
mov
pop
fstp
lea
mov
sbb
cwde
and
(bad)
mul
movs
daa
jb
inc
push
test
jecxz
or
arpl
inc
jg
jno
mov
ja
xor
push
pop
ds
rcl
stc
arpl
popf
idiv
add
and
jo
jl
int
inc
mov
mov
mov
fiadd
pop
xchg
fnstenv
pop
nop
push
jl
movs
pop
imul
add
lock
lods
nop
sbb
push
lahf
ja
cmc
mov
push
in
sub
je
inc
pop
out
mov
(bad)
(bad)
mov
pop
pushf
(bad)
in
aas
pop
xor
cmp
sbb
sar
aad
ins
test
es
mov
nop
push
inc
add
movs
dec
cmp
ins
mov
ficom
sbb
pop
rol
dec
mov
scas
int3
leave
cmp
aad
xchg
cmp
xchg
jle
imul
cwde
loope
mov
mov
test
das
adc
and
dec
ds
(bad)
mov
fidiv
cmp
mov
inc
movs
arpl
lods
xchg
xchg
(bad)
out
aas
addr16
mov
adc
aam
test
cmp
sbb
sbb
and
jo
and
iret
mov
scas
outs
pop
stc
(bad)
shl
mov
movs
test
ds
adc
ret
sbb
inc
cmp
xor
sti
jne
cmc
test
cmp
inc
push
enter
xor
or
dec
shl
mov
push
in
std
scas
and
xchg
jmp
adc
fidiv
or
enter
and
jne
int
pop
add
shr
jns
mov
cmp
pushf
mov
les
icebp
jge
mov
sub
dec
pusha
adc
jbe
mov
shl
mov
cmp
mov
xchg
add
fs
mov
inc
loopne
xor
fs
or
dec
movs
add
cwde
sbb
dec
cmp
cld
sub
in
cmps
inc
add
mov
and
aad
neg
xchg
cld
jl
call
sahf
adc
mov
xchg
mov
adc
mov
inc
fimul
outs
pop
cwde
mov
test
adc
push
push
sub
int
loope
jmp
pop
lds
pop
cld
sar
jge
push
iret
inc
pusha
xchg
cmps
ins
leave
xor
imul
addr16
mov
cmps
jg
out
and
xor
cmp
ja
shl
jg
outs
sub
push
inc
cmp
mov
neg
ss
jne
or
pop
repnz
rcr
comiss
jnp
scas
mov
into
mov
or
enter
ja
std
sahf
sahf
push
pushf
stc
add
dec
nop
mov
aaa
adc
nop
ins
imul
inc
dec
jnp
es
loope
push
scas
ret
and
call
not
mov
call
es
sub
mov
test
movs
cmp
mov
int
clc
addr16
and
fwait
xchg
push
mov
sub
fwait
sub
jmp
sub
add
xlat
pop
inc
and
mov
mov
or
(bad)
lahf
dec
sub
sar
xor
mov
out
pusha
mov
gs
sbb
jb
or
retf
outs
(bad)
call
xchg
outs
cli
call
pop
add
jno
xchg
push
ins
lea
or
jae
mov
sub
pop
dec
aam
sbb
in
mov
ss
(bad)
xlat
lea
adc
mov
je
int
into
imul
xor
add
xlat
jecxz
stos
pushf
sub
icebp
mov
dec
or
pop
xchg
popa
stc
or
fsub
sti
sub
cmp
leave
mov
dec
aaa
bound
retf
repnz
dec
sar
xchg
mov
xchg
imul
mul
nop
fadd
retf
sub
test
mov
stos
xchg
inc
lods
push
aas
adc
jmp
fdivr
or
sbb
push
sub
and
aam
sub
sub
xchg
mov
lock
inc
inc
test
test
(bad)
dec
loopne
and
dec
loopne
lock
iret
adc
mov
gs
call
out
or
xor
(bad)
es
mov
and
pop
mov
cmp
lahf
movs
(bad)
push
and
or
jo
outs
test
js
pop
mov
and
nop
std
xor
jmp
mov
xor
push
ins
pop
sti
mov
jae
call
loope
sub
cmp
mov
aaa
and
sbb
aaa
repnz
and
sbb
sub
xchg
or
cmps
jbe
fmul
inc
mov
xor
dec
addr16
jl
pop
popa
dec
(bad)
popf
repnz
mov
loopne
pop
or
test
xor
call
xor
xor
jl
leave
outs
mov
cmp
and
das
xchg
push
(bad)
sbb
jmp
pusha
lock
dec
mov
in
dec
mov
(bad)
(bad)
xor
jae
les
sti
imul
shr
std
in
das
jp
dec
jmp
xor
aaa
mov
mov
add
clc
xor
sbb
repnz
add
sbb
stc
mov
(bad)
mov
inc
cmps
pusha
push
cmp
cli
sbb
movs
test
inc
and
jmp
(bad)
mov
pop
cmp
xor
pop
push
retf
push
shr
dec
push
xchg
lahf
aad
jne
xor
ja
(bad)
jle
nop
jbe
fwait
stos
push
movs
xor
jbe
movs
pop
xchg
push
cli
jmp
mov
retf
pop
ret
cwde
arpl
xchg
lock
stos
push
scas
stos
cwde
add
fistp
fbld
adc
lahf
stc
pop
push
hlt
xchg
adc
mov
jmp
ror
stos
pop
scas
jge
lods
sub
xlat
sub
mov
cli
inc
adc
xor
aad
clc
push
pop
mov
dec
lea
mov
pusha
aaa
aaa
cmp
inc
xchg
call
add
out
hlt
xchg
push
shr
inc
int3
jl
mov
adc
xlat
or
dec
scas
mov
pop
mov
push
cmp
daa
out
je
cwde
in
pop
or
jle
aam
in
xchg
test
test
dec
xlat
or
rol
fs
and
cmp
jns
push
ret
add
mov
cld
cmps
pop
mov
xchg
mov
inc
inc
in
cmp
adc
fsubr
and
ret
push
cmp
xor
scas
cli
pop
(bad)
into
icebp
test
lods
ins
or
jo
mov
mov
out
cmp
pop
mov
push
xchg
or
or
cld
push
pop
and
xchg
jne
adc
ficomp
push
jle
push
pop
jo
inc
push
in
test
lahf
mov
imul
xchg
outs
xor
xor
je
je
pop
sbb
ins
mov
sbb
(bad)
jne
lock
add
aas
dec
retf
cs
cmps
ins
add
sbb
mov
scas
jmp
retf
mov
cwde
pusha
jmp
(bad)
and
stos
out
xchg
mov
jns
stc
cmp
rcr
push
rol
sbb
mov
cmps
mov
cdq
push
lea
and
or
into
jmp
and
dec
shl
dec
fs
arpl
fwait
(bad)
call
in
and
out
inc
ins
cmc
out
or
jns
xchg
jecxz
jmp
stos
and
cmp
out
lock
enter
call
lods
fisttp
or
xchg
jo
rcl
int3
mov
sub
rol
test
xor
hlt
fldcw
push
and
das
repz
adc
pop
jle
pop
sub
cwde
sub
iret
jnp
dec
pop
mov
push
mov
jnp
pop
fcom
inc
les
(bad)
pop
das
sar
sub
sbb
and
push
int3
mov
and
arpl
jmp
aam
test
sbb
out
stos
sub
in
cmp
mov
retf
jle
in
and
aam
xor
push
add
sbb
sbb
pusha
mov
mov
push
sbb
jmp
out
ret
fiadd
cld
(bad)
lea
cmp
push
jae
shl
aaa
xlat
pop
mov
data16
in
dec
pop
xor
lds
(bad)
(bad)
mov
sub
inc
test
mov
addr16
popf
xchg
and
xlat
icebp
idiv
out
icebp
sub
sbb
inc
xchg
popa
ss
inc
js
xchg
sbb
mov
dec
xchg
shr
cdq
fwait
add
cli
cmp
push
ss
xchg
in
mov
(bad)
in
xchg
repz
mov
fisttp
enter
(bad)
test
inc
xor
mov
adc
test
pop
sbb
pop
and
lds
adc
in
mov
jl
add
push
fwait
and
es
push
jg
sbb
out
cdq
sub
dec
dec
or
inc
cmp
sbb
cs
mov
push
mov
stc
int
pop
rcl
mov
or
scas
jo
mov
sbb
enter
mov
clc
mov
pushf
cmp
out
outs
leave
cmp
mov
sysenter
jmp
das
sbb
out
(bad)
xor
aad
iret
cli
std
pop
call
sahf
jge
mov
dec
loopne
add
adc
ins
pop
aad
add
cmp
jo
inc
mov
loop
xor
add
mov
jnp
mov
popf
inc
cld
mov
call
inc
les
add
scas
mov
pop
imul
clc
sbb
iret
inc
jge
fs
mov
imul
enter
push
xor
mov
outs
fcomp
aaa
xor
out
in
push
outs
mov
sbb
and
in
stc
and
push
push
xor
(bad)
addr16
out
push
push
(bad)
imul
out
lds
xchg
mov
add
inc
add
into
xchg
cld
retf
into
and
arpl
xchg
or
jmp
inc
push
cmp
fs
sub
xchg
ror
cdq
cmp
jne
inc
mov
xor
(bad)
dec
pop
rcl
gs
cmp
aad
ja
out
push
cmps
je
add
in
xchg
mov
push
hlt
pop
pop
jb
clc
rcl
das
dec
push
mov
jl
shl
popf
shr
xchg
inc
int3
jo
daa
pushf
es
pop
dec
jbe
mov
fmul
adc
es
(bad)
xor
jp
imul
jne
xor
(bad)
xor
les
and
fcomp
jle
pop
test
rol
sub
scas
jne
aam
and
imul
mov
xor
rcl
ret
mov
lea
mov
data16
mov
mov
dec
lods
movs
sbb
push
mov
pop
pop
es
cmp
or
mov
(bad)
fndisi(8087
xchg
sbb
fdiv
or
mov
dec
mov
xlat
jp
push
adc
inc
jl
loop
xor
pop
fwait
mov
fmul
dec
cli
xor
push
cmp
inc
(bad)
cmp
sub
jecxz
fsubr
push
aas
push
not
xchg
push
frstpm(287
fnstsw
mov
push
and
cmc
pop
aaa
movs
(bad)
xor
push
test
push
fdiv
mov
rcl
mov
repnz
out
enter
sbb
pop
push
fisub
jp
icebp
popa
add
or
fsub
lea
ret
or
icebp
iret
cmp
out
xor
(bad)
sub
or
jae
inc
loopne
fild
sub
ror
ret
sub
pop
inc
pusha
mov
retf
mov
mov
add
xor
dec
stos
aas
ins
and
cmc
xchg
mov
or
out
sub
mov
jmp
or
cmp
cmp
cmps
jne
std
mov
and
mov
(bad)
sub
or
into
cmp
scas
push
movs
bound
test
mov
fwait
mov
mov
xchg
or
neg
dec
int3
ins
clc
xor
mov
int
cmp
mov
or
ror
aad
cs
movs
popf
(bad)
test
fdiv
js
add
mov
cmp
add
lahf
dec
test
and
cmp
fwait
mov
jmp
out
cmc
and
jmp
fidivr
iret
sub
jmp
aad
scas
dec
pop
cmps
xchg
or
ss
mov
sahf
out
mov
push
outs
ss
lods
jae
popf
leave
cwde
je
out
dec
retf
push
call
jae
add
mov
push
adc
shl
stos
cmp
dec
mov
push
(bad)
test
xor
adc
aaa
pop
fwait
loop
xchg
or
(bad)
adc
mov
jo
or
mov
(bad)
pop
pop
imul
movs
adc
jge
pop
sub
scas
sbb
and
imul
cmp
mov
xor
xor
ds
lods
loop
mov
jmp
aaa
jmp
in
lahf
sahf
push
int3
enter
and
(bad)
not
sub
mov
pop
repnz
cmp
jle
pop
sub
add
ret
pop
pop
mov
inc
bnd
or
jge
dec
inc
mov
out
repnz
lahf
addr16
into
xor
dec
enter
mov
cmp
sub
add
push
ins
adc
pop
and
dec
mov
adc
push
xchg
xor
repnz
cmps
dec
and
addr16
mov
jo
xor
and
push
inc
cmp
int3
pop
rcr
outs
aad
xchg
movs
xchg
inc
fisub
mov
xlat
fiadd
cmc
iret
and
enter
clc
cmp
inc
mov
ret
arpl
iret
adc
mov
int
out
xchg
bound
jecxz
mov
pop
js
test
push
mov
cdq
adc
mov
imul
add
push
push
dec
mov
add
xchg
push
fbstp
mov
neg
jge
jns
sti
mov
call
dec
fild
icebp
and
fcom
jl
dec
repz
mov
enter
and
mov
fld
imul
xchg
enter
cmp
and
mov
sti
adc
mov
daa
cld
movs
adc
xor
(bad)
jno
fldenv
xchg
pop
and
adc
ja
cs
adc
mov
add
shl
add
jecxz
movs
or
inc
loop
stos
inc
add
test
xchg
mov
pop
pop
in
loop
int3
dec
(bad)
jp
xchg
(bad)
cld
pop
jmp
iret
shl
leave
adc
xor
shl
mov
mov
aas
mov
xchg
and
pusha
shl
or
push
mov
cmp
pop
cmp
ret
shr
lock
jle
xor
aad
sbb
jno
out
xor
pop
and
inc
cld
pop
data16
jp
outs
pop
pop
mov
push
das
sbb
mov
dec
cmps
push
and
mov
mov
jno
and
jg
sub
arpl
movs
push
fmul
in
fcmovb
rcr
(bad)
fsubr
pop
faddp
sbb
inc
add
mov
pop
sbb
out
cmp
cmp
pushf
adc
sbb
sub
xor
push
ret
push
or
fadd
pop
cmps
mov
loopne
sub
mov
push
and
jns
add
sbb
stc
push
cmp
dec
fs
push
scas
mov
dec
iret
dec
(bad)
(bad)
shr
jge
sbb
(bad)
mov
jo
imul
cmp
sub
push
(bad)
dec
pop
sub
mov
push
ins
mov
pop
loop
pop
icebp
ins
inc
dec
pop
adc
mov
xor
shl
mov
xchg
add
pop
lahf
mov
or
inc
mov
leave
jmp
add
jle
(bad)
and
jne
sbb
sbb
retf
cli
cmps
add
mov
mov
repz
xlat
mov
adc
test
test
or
sbb
mov
(bad)
adc
sub
jmp
inc
addr16
in
retf
repnz
push
adc
sbb
outs
sub
dec
fstp
clc
mov
or
hlt
clc
xchg
cld
push
mov
mov
xor
ins
pop
rcr
inc
gs
lahf
xchg
fldcw
push
aaa
jno
les
shl
push
xor
shl
(bad)
das
sub
fcomp
pop
xor
call
nop
out
jnp
push
pop
push
scas
push
xchg
es
pop
mov
cmc
ror
inc
mov
xchg
and
popa
jecxz
push
arpl
and
push
(bad)
inc
mov
or
loop
xor
in
pop
add
push
into
mov
ins
mov
fdiv
ss
in
mov
cli
in
stos
jbe
rcl
in
jg
xor
sbb
push
push
shl
jbe
outs
in
sbb
mov
pop
retf
ins
mov
pop
scas
mov
and
mov
sub
mov
jle
xchg
in
ror
inc
pop
add
loope
jmp
daa
les
aas
pop
dec
or
es
(bad)
add
mov
mov
mov
cmp
lock
out
xchg
jp
mov
add
sbb
cmp
jb
sub
xor
push
lods
enter
stos
mov
imul
mov
sar
loope
jmp
push
cmp
push
jae
xchg
mov
dec
sbb
ins
clc
mov
call
inc
or
ins
ins
jnp
xchg
in
aas
push
mov
sahf
push
adc
xor
mov
xor
or
sub
inc
pop
rcr
pop
fndisi(8087
jge
(bad)
iret
jecxz
adc
movs
imul
or
or
push
and
movs
movs
enter
inc
test
inc
add
rcl
lods
clc
pop
xchg
xor
mov
xchg
add
dec
jno
and
cmp
jns
je
loope
dec
arpl
mov
dec
xchg
cs
mul
addr16
xchg
nop
loope
dec
inc
sbb
jne
sbb
xor
jmp
mov
call
call
push
sub
xchg
and
iret
call
jp
ds
push
call
jno
neg
repnz
fmulp
(bad)
sbb
add
div
fs
sub
cs
xchg
and
bound
call
and
mov
mov
mov
mov
push
mov
ins
add
mov
push
out
dec
repz
xlat
mov
popf
loop
mov
stos
repnz
sub
jo
cmp
test
inc
rcr
jg
(bad)
js
repz
icebp
stc
ins
jmp
jge
(bad)
xor
movs
or
inc
mov
push
or
add
add
enter
cmp
push
cmc
shr
push
add
aam
push
mov
fidivr
test
cmp
scas
dec
jl
aam
cmp
arpl
pushf
jle
jge
test
cmp
test
mov
inc
xchg
and
adc
(bad)
mov
and
inc
clc
test
dec
fwait
sbb
mov
test
clc
ret
mov
fisttp
ja
retf
fwait
xchg
dec
and
imul
lea
mov
jno
push
(bad)
or
sbb
daa
pop
outs
cmc
and
dec
js
sub
cwde
mov
cmc
xor
and
xlat
jge
mov
mov
inc
stc
inc
pop
and
mov
into
out
call
shr
ret
outs
xchg
cmp
mov
std
popa
shr
rol
stos
dec
and
pusha
xchg
cmps
lods
loope
(bad)
mov
(bad)
fiadd
xor
rcl
ins
or
not
xchg
sub
outs
cmp
dec
cli
adc
not
retf
push
sbb
lahf
std
mov
cld
sub
jo
cs
outs
out
jge
inc
cdq
in
addr16
xor
aam
es
and
dec
out
icebp
dec
pushf
jo
shl
test
dec
fstp
mov
mov
std
ss
dec
(bad)
or
pop
sub
add
cs
sbb
push
daa
pusha
daa
jbe
mov
and
xchg
retf
dec
or
mov
arpl
aas
pop
in
sub
fwait
test
pop
and
jne
out
retf
mov
mov
sbb
inc
push
sub
movs
sbb
cmps
loope
clc
enter
idiv
sbb
adc
inc
xchg
outs
call
or
adc
push
mov
inc
mov
test
jmp
jle
and
pop
mov
sub
push
shr
dec
shl
dec
jmp
add
out
sbb
sbb
xchg
jp
push
jl
pop
push
pop
mov
jp
ror
loope
in
in
or
cmp
and
sub
dec
aam
cli
cmps
fcom
jge
cmp
and
scas
push
adc
out
mov
dec
adc
int3
fs
jb
inc
dec
je
in
sub
or
and
mov
icebp
clc
test
cmp
out
mov
out
je
mov
fidiv
xor
mov
adc
sbb
adc
inc
and
call
sub
ins
push
mov
mov
mov
hlt
std
fist
xchg
sbb
jp
mov
shl
lods
cld
cmp
ja
lea
push
ror
push
sub
jae
sub
loope
daa
into
dec
dec
sti
mov
fisttp
leave
sahf
repz
mov
imul
rol
inc
arpl
js
xor
ins
loope
cmp
dec
arpl
xchg
shl
data16
arpl
retf
push
in
fadd
inc
xchg
inc
test
mov
addr16
push
mov
rol
mov
pop
sbb
dec
imul
in
cmp
and
dec
iret
mov
and
popa
test
sbb
dec
xchg
jge
mov
and
hlt
mov
into
mov
faddp
out
ret
mov
adc
cmp
icebp
scas
push
(bad)
lods
adc
jmp
dec
cli
sub
pop
jo
jne
add
xor
das
push
lea
sub
adc
bnd
popa
push
out
mov
pop
lds
imul
ja
adc
jp
es
(bad)
std
cmp
imul
jb
gs
xlat
fmul
jo
mov
lock
mov
jnp
out
stos
test
shl
add
jno
(bad)
adc
pop
mov
adc
pop
test
jbe
sub
or
mov
es
jb
gs
movs
dec
push
mov
mov
out
cld
pusha
fidiv
(bad)
cmp
cs
int
(bad)
push
fwait
add
push
mov
or
retf
sbb
push
push
enter
fld
mov
add
repnz
ja
jb
into
lds
mov
inc
mov
or
ins
xor
push
dec
arpl
lea
(bad)
sbb
push
cs
imul
test
leave
pushf
push
and
add
cmp
pushf
(bad)
ror
mov
sub
fcmovnbe
cmc
xor
push
int3
adc
jbe
std
xor
div
mov
sub
cmp
mov
xor
rcr
sahf
fwait
mov
mov
mov
lahf
sub
int
dec
mov
cmc
and
pop
mov
cmp
xlat
mov
cmp
pop
cdq
xchg
test
fidiv
data16
rol
push
push
lods
sahf
je
pushf
jo
repz
jle
cmp
(bad)
in
push
sub
call
mov
test
cmp
push
icebp
mov
cdq
mov
rcr
push
pop
movs
jo
dec
imul
int
fadd
(bad)
test
movs
mov
xchg
jns
push
pop
out
outs
popf
pop
jl
jg
jle
xor
adc
mov
mov
adc
fwait
mov
adc
leave
sti
push
test
mov
inc
(bad)
mov
adc
inc
mov
mul
pop
xchg
mov
cmc
jmp
addr16
pavgw
sub
pop
arpl
xchg
pop
mov
mov
push
arpl
mov
jno
cmp
(bad)
jecxz
or
mov
mov
in
ins
sbb
sbb
sub
pop
adc
pop
rcr
jne
lock
jecxz
add
jmp
xchg
push
retf
inc
gs
arpl
push
sub
mov
sub
sub
xchg
stos
push
jmp
mov
xchg
and
or
pop
jl
nop
call
dec
sahf
fistp
dec
hlt
or
lods
inc
rcl
jl
sub
repnz
mov
int3
clc
pop
stos
jnp
ret
cli
ss
in
lea
xor
pop
pop
xchg
inc
xchg
int
add
leave
mov
bound
ja
mov
adc
sbb
jne
loop
add
sbb
adc
push
and
fiadd
lahf
(bad)
cld
data16
es
shl
cmp
and
sbb
daa
push
add
lock
ins
(bad)
mov
mov
fisttp
mov
aas
mov
in
sbb
cdq
mov
mov
mov
aas
aas
push
xchg
cmps
mov
cmp
jmp
inc
mov
nop
outs
add
inc
adc
inc
inc
iret
jge
xchg
mov
push
sbb
inc
fsubr
mov
or
retf
ret
jle
jbe
xlat
mov
(bad)
into
into
out
xchg
pop
not
mov
mov
rcr
mov
sbb
popf
push
pop
inc
mov
sub
daa
push
(bad)
jno
fs
jmp
test
cdq
aas
stos
mov
cdq
mov
xchg
xchg
and
idiv
leave
repnz
add
mov
jno
dec
out
mov
sbb
ins
repz
sbb
xlat
dec
dec
gs
xor
pop
jo
lods
mov
lods
stos
int3
mov
mov
aad
mov
sbb
cmp
or
out
sub
pop
push
(bad)
clc
fisubr
ror
(bad)
adc
aam
xchg
std
popf
out
mov
cmps
push
out
push
lods
and
mov
adc
or
fisubr
or
mov
mov
out
ds
fadd
xor
outs
or
sahf
int3
push
jmp
xor
add
test
mov
cld
dec
ror
movs
ja
add
mov
or
push
pusha
jecxz
popf
dec
cmp
and
and
sub
mov
push
and
cs
jo
jo
cmp
sub
cmp
push
mov
arpl
call
and
mov
sbb
inc
mov
xor
test
lds
cmc
loope
repz
jmp
movs
dec
fisttp
push
lahf
sub
shl
mov
jb
outs
retf
neg
out
cmp
jmp
or
iret
arpl
gs
adc
in
out
add
arpl
sub
sbb
jg
(bad)
loopne
mov
push
xor
mov
(bad)
cwde
fbld
mov
mov
fnsave
in
mov
push
mov
cmp
ja
ins
ja
clc
aam
push
push
inc
loop
(bad)
into
fldcw
mov
jnp
imul
mov
mov
mov
fild
jb
mov
pop
push
push
and
mov
or
repz
(bad)
mov
sbb
inc
je
lock
xchg
out
and
in
or
les
gs
jge
or
xchg
jbe
jne
push
enter
stc
sbb
cmp
xchg
dec
inc
push
ds
adc
mov
inc
inc
ret
arpl
mov
sbb
in
jl
dec
pop
test
leave
test
(bad)
mov
idiv
push
xor
jp
sub
das
dec
push
jno
and
repnz
fs
sub
mov
mov
loopne
enter
inc
shr
imul
popa
cmovb
stos
mov
mov
loope
add
jecxz
popa
mov
and
jmp
cli
mov
or
or
dec
sub
sahf
add
or
inc
mov
jmp
cmp
out
xchg
test
mov
sahf
out
mov
fadd
fdiv
inc
xchg
mov
clc
fxch
xor
mov
out
mov
mov
clc
sbb
cmp
lock
je
enter
mov
xchg
sbb
jno
mov
call
ret
outs
jmp
outs
add
sbb
and
pop
adc
fcomp
lds
hlt
xor
shr
push
mov
inc
icebp
jne
outs
int3
in
push
sub
adc
adc
sbb
test
es
in
jge
mov
mov
and
jbe
or
lahf
push
es
stos
mov
mov
push
add
mov
in
out
dec
aas
leave
mov
cs
cs
and
das
out
test
lods
addr16
push
jo
lods
adc
mov
push
jb
rol
mov
xor
je
xor
fs
jmp
mov
icebp
dec
lods
push
mov
ret
std
int
lds
dec
ret
jne
adc
cmps
add
push
mov
push
test
cmc
sbb
xor
lea
or
cmp
sbb
in
inc
mov
or
push
stc
sub
push
sti
jmp
ins
or
mov
adc
jnp
std
cmc
fiadd
or
mov
and
push
sahf
mov
mov
sub
sar
dec
movq
sbb
mov
popf
xchg
push
mov
push
inc
add
test
int3
sbb
shl
call
pop
mov
or
aas
add
dec
push
jo
jl
gs
nop
in
out
pop
push
pop
jbe
or
sbb
cs
adc
jmp
lods
push
repnz
ins
pushf
xchg
or
inc
push
movs
imul
and
jle
(bad)
cmc
pop
bound
or
xchg
lods
out
outs
in
jne
jbe
dec
and
inc
mov
mov
enter
sub
gs
sub
(bad)
popf
mov
dec
xchg
mov
(bad)
arpl
ja
xor
push
sar
js
cli
imul
xchg
clc
arpl
pop
movs
xlat
mov
dec
xor
mov
lock
jnp
ror
dec
mov
push
sbb
cmp
outs
xor
inc
aam
mov
in
repnz
in
inc
cmps
movs
xor
dec
cs
push
xchg
lods
int
mov
out
inc
test
push
mov
xchg
lds
sbb
and
push
mov
fsub
cmps
lods
outs
arpl
mov
fsubr
pop
jb
sbb
mov
mov
dec
cmp
adc
jb
hlt
push
loop
or
mul
outs
mov
xchg
jp
es
fsub
loopne
jno
push
add
xchg
mov
fidiv
dec
sbb
xchg
jge
sbb
inc
mov
js
cdq
adc
pop
sbb
shl
int
inc
and
iret
mov
add
dec
mov
inc
cmc
fcmovnbe
nop
ja
scas
push
mov
jbe
or
mov
cmp
sbb
in
jg
xchg
daa
rol
mov
xor
(bad)
je
dec
mov
push
hlt
aas
jae
sub
retf
lahf
in
stos
cmp
mov
sbb
test
pop
mov
add
stos
push
imul
sti
das
inc
xchg
sbb
or
mov
sub
les
js
xor
stc
mov
add
cld
(bad)
ins
nop
imul
pop
mov
jl
in
pop
(bad)
(bad)
mov
call
pop
xchg
xor
retf
(bad)
rcpps
cmp
(bad)
out
test
lock
pop
nop
cmp
repnz
cwde
ss
xor
xor
repz
xor
lahf
(bad)
or
or
mov
test
adc
lea
loop
out
into
dec
mov
int3
pop
inc
fadd
add
pop
loopne
inc
arpl
(bad)
lock
aas
adc
jmp
data16
dec
bound
sub
in
shr
inc
shl
pop
jmp
pushf
pop
add
and
jmp
jae
sahf
int
gs
sti
xlat
inc
mov
cmp
cld
and
xchg
call
(bad)
push
pop
stos
push
or
mov
addr16
and
ins
jmp
or
and
pop
adc
sub
adc
ds
outs
push
pop
sub
sub
sbb
js
call
and
stos
sbb
sahf
mov
jmp
adc
xor
in
cmp
shl
test
dec
and
mov
push
xchg
fadd
mov
fs
adc
inc
dec
js
mov
dec
imul
lea
mov
jno
fnstcw
cmp
xor
sub
lods
sbb
ins
sub
ss
adc
push
ss
jae
xchg
stc
popf
fs
cmp
sbb
hlt
nop
in
jne
pop
jle
xchg
aam
jae
out
xor
cli
push
cmp
push
repz
outs
cmp
maskmovq
neg
hlt
jne
ins
mov
cmp
and
fisttp
push
add
xor
test
cmc
sub
mov
sbb
mov
sbb
xor
(bad)
push
pop
xor
pop
test
cmp
inc
xor
mov
dec
push
jns
ja
push
movs
repnz
mov
pop
or
in
and
mov
cmp
fisub
stos
xor
cmc
xor
dec
jb
mov
stos
cmp
loopne
pushf
mov
(bad)
push
or
in
(bad)
sub
mov
jmp
adc
(bad)
mov
lea
inc
test
pushf
pusha
sbb
xor
repnz
mov
jg
mov
call
push
cmps
xor
sbb
xlat
dec
stos
or
dec
push
ins
in
pop
in
ja
xor
js
out
add
fadd
lods
mov
idiv
js
and
in
xor
adc
pop
psubq
not
sub
repnz
aas
inc
outs
or
sbb
push
xor
and
das
arpl
adc
aad
(bad)
dec
int3
bound
mov
dec
add
mov
call
jne
sbb
xor
pop
and
xchg
mov
push
daa
out
jecxz
mov
xlat
daa
test
add
cdq
stos
stc
xchg
xchg
shl
mov
jne
sbb
inc
(bad)
jo
pushf
xor
mov
call
fnstsw
popf
push
loop
mov
xchg
aas
dec
push
cmp
mov
pop
icebp
imul
(bad)
push
sub
pusha
shl
jmp
fcom
(bad)
pop
inc
mov
lods
add
jg
cmps
lea
jecxz
mov
lods
icebp
test
dec
push
enter
mov
push
jl
gs
or
fucompp
or
mov
clc
movs
rcl
add
mov
and
mov
mov
repnz
retf
and
add
cmp
jle
push
inc
inc
jo
xchg
int
ins
mov
sbb
inc
add
sbb
mov
sbb
mov
inc
nop
ss
stc
cmp
push
stc
sub
aas
rol
jge
das
les
fstp
bound
push
xchg
clc
icebp
push
aad
test
jmp
outs
mov
mov
int
test
lahf
mov
add
or
push
dec
test
cld
ror
adc
dec
inc
mov
and
into
push
std
movs
mov
and
in
dec
xor
mov
mov
adc
mov
xor
out
jnp
pop
cli
ficomp
dec
mov
pop
xor
das
imul
mov
hlt
mov
movs
xchg
aad
sti
sub
test
pop
rcl
clc
inc
cmp
and
les
sbb
xor
ret
loop
mov
xor
and
popf
inc
cmp
fmul
test
call
imul
movsx
int3
lods
inc
push
ins
test
loop
mov
into
xor
jmp
mov
scas
mov
xor
imul
pop
icebp
sbb
lods
cmc
sub
movs
mov
fcmovu
sbb
(bad)
mov
cmp
div
fs
dec
inc
stos
xchg
inc
movs
mov
pop
clc
inc
mov
movs
jecxz
jmp
dec
pop
lds
mov
jns
add
xor
sahf
add
push
mov
xor
pusha
outs
add
xchg
lea
mov
int
fimul
fisttp
sbb
dec
ja
add
(bad)
fdiv
push
into
data16
sub
(bad)
jle
cmps
test
xor
or
mov
jp
add
popa
stos
and
les
mov
and
inc
xchg
cwde
fistp
out
cli
xchg
xor
and
(bad)
std
test
outs
jg
imul
jns
out
iret
jbe
fisub
pop
rol
pop
jge
test
xchg
jns
dec
and
loop
sbb
movs
adc
or
cwde
int
inc
fndisi(8087
loope
(bad)
sbb
xor
and
jnp
push
xchg
int
into
add
pop
cmp
ins
sub
push
cs
jno
sub
inc
push
inc
jmp
(bad)
sbb
sub
xchg
add
pop
outs
mov
imul
xor
jmp
dec
mov
ret
rcl
lahf
hlt
mov
mov
js
lahf
daa
call
dec
(bad)
mov
movs
xor
daa
sub
leave
shl
in
sub
loop
xchg
rcr
adc
inc
push
in
addr16
test
jmp
ja
adc
jnp
(bad)
push
int3
or
mov
out
add
adc
retf
mov
pop
sti
mov
xor
stos
test
pop
test
and
fld
mov
leave
test
cmp
sbb
lods
mov
pop
mov
les
jmp
sbb
jae
sbb
cmps
xor
shl
test
xlat
or
and
mov
mov
jmp
or
mov
mov
dec
std
outs
or
push
lods
gs
dec
hlt
pop
mov
pop
or
jg
push
hlt
cmp
pop
pop
int3
aas
out
pop
ret
xor
and
es
xchg
punpcklwd
sbb
sahf
xchg
sub
stos
dec
mov
ja
fcmovbe
mov
(bad)
iret
push
arpl
test
push
sbb
test
and
mov
retf
(bad)
xlat
cdq
call
mov
pop
test
and
movs
cmp
sub
cmps
jb
mov
sub
xchg
xor
push
fsub
fsubp
pop
div
cld
xor
sub
loopne
sti
mov
ins
out
call
aaa
mov
in
xor
ja
inc
xor
loopne
push
or
daa
jnp
retf
inc
mov
or
push
or
icebp
inc
retf
xchg
inc
lds
fs
call
ret
sbb
xchg
push
pop
sub
ret
test
(bad)
jae
mov
xchg
(bad)
test
retf
inc
xchg
repnz
ds
pop
cwde
ret
pop
popf
das
(bad)
add
sar
cld
xchg
pop
jle
daa
push
ja
or
nop
inc
xchg
fisttp
dec
pop
inc
pop
shr
cmc
popf
mov
add
or
mov
and
mov
cmc
fisub
push
in
adc
test
xor
in
sub
mov
sbb
jne
pop
test
scas
test
sub
mov
repnz
xchg
or
out
sti
sbb
mov
ja
mov
ss
in
enter
xor
mov
mov
mov
mov
push
rcr
enter
pop
imul
xor
mov
gs
cmc
and
cwde
lods
das
mov
cwde
dec
js
mov
or
cs
ins
mov
(bad)
mov
and
sbb
(bad)
xor
jl
jae
add
add
jp
pop
sub
xor
lock
enter
mov
scas
loopne
adc
push
data16
push
cs
adc
lods
call
lea
movs
add
push
nop
nop
(bad)
movs
cs
inc
xchg
shl
mov
dec
test
sub
lods
mov
inc
xor
fisub
scas
push
add
ret
imul
push
stos
into
pop
retf
bts
shr
sbb
lods
cwde
lods
mov
jb
icebp
adc
mov
xchg
bound
ins
in
xchg
repnz
add
add
jp
xchg
mov
mov
in
xchg
mov
mov
add
pop
or
sbb
lahf
jecxz
addr16
shl
sbb
cld
adc
push
sti
ret
xor
pop
mov
std
adc
push
cmp
daa
cmps
fbld
(bad)
dec
out
(bad)
test
aaa
jb
pop
jg
daa
ret
sbb
jb
dec
adc
mov
xchg
or
(bad)
xor
fsubr
pop
xchg
fsubr
sbb
test
stc
out
mov
cmp
jae
jl
jae
dec
rol
popa
(bad)
mov
inc
dec
ins
nop
jle
or
inc
fld
xlat
outs
and
sub
jp
out
pop
mov
jne
iret
in
xor
in
dec
add
or
mov
mov
pop
push
inc
daa
jae
movs
sub
and
vpshld
sti
ins
pop
dec
sbb
aam
pop
inc
(bad)
sar
dec
dec
jp
loope
or
pop
pop
cwde
cli
or
jo
push
cmc
adc
mov
xor
sbb
repnz
sub
xchg
and
rol
sub
sbb
xor
sub
mov
shl
or
sub
jle
mov
inc
(bad)
popf
add
mov
add
aas
push
or
lods
push
add
fsubr
add
loopne
or
dec
pop
push
mov
(bad)
(bad)
repz
les
jbe
xchg
div
scas
inc
test
dec
fstp
mov
mov
cmp
in
rcr
xchg
xchg
(bad)
aam
xchg
iret
push
cmc
mov
xchg
sub
in
scas
xchg
loope
aam
bts
cwde
xor
jg
push
dec
imul
adc
push
push
ror
push
or
outs
cld
mov
pop
das
dec
cwde
(bad)
rol
outs
fsubr
push
mov
jle
xchg
iret
inc
inc
mov
mov
cmp
dec
or
pop
push
call
pop
or
inc
xor
scas
ins
add
jo
scas
test
or
pop
jge
and
jmp
mov
ror
xor
jmp
jg
adc
adc
out
inc
jb
xchg
imul
push
jp
mov
or
mov
jns
sbb
adc
lds
leave
pop
mov
arpl
push
jns
stos
xchg
mov
out
pushf
add
pop
mov
push
mov
mov
cmc
or
and
dec
test
adc
jge
ret
sbb
jne
cld
ja
or
and
sbb
scas
into
adc
sub
pop
fidiv
inc
cmp
push
hlt
ins
xchg
xlat
aas
cmps
mov
mov
cmp
pop
inc
sub
adc
(bad)
test
mov
adc
retf
test
pop
stc
xor
test
cmc
sub
fidiv
cmp
call
iret
mov
fld
mov
cdq
mov
and
xchg
popf
mov
mov
nop
mov
push
or
mov
cmp
lods
pop
xor
and
pop
shr
jmp
dec
movs
jecxz
retf
mov
cmps
sbb
mov
jns
jmp
aad
mov
mov
inc
lea
addr16
mov
adc
xchg
repnz
scas
and
ins
in
out
xlat
mov
sub
test
pop
sub
jle
dec
lea
lods
cmp
dec
inc
call
dec
aas
in
(bad)
cmps
adc
jg
loopne
inc
jb
into
inc
pop
mov
clc
mov
fisubr
loope
ins
push
mov
retf
cs
in
shr
out
lahf
jo
mov
inc
xor
mov
inc
jg
cwde
lds
inc
mov
dec
jo
lea
cwde
call
lahf
cmp
out
imul
xchg
jmp
jmp
pusha
js
jae
fsubr
jg
pop
sahf
fisubr
dec
mov
or
jmp
push
sbb
ins
sub
(bad)
icebp
mov
pop
ret
xor
pop
jb
cmps
test
out
mov
fs
stos
push
inc
outs
mov
out
inc
ret
dec
sbb
fimul
addr16
popf
iret
sahf
mov
jecxz
mov
xchg
xchg
xchg
data16
lea
icebp
das
dec
icebp
xor
mov
adc
mov
add
and
jle
mov
repz
pop
imul
jmp
adc
add
pop
dec
cmps
int
add
add
cmp
jb
loopne
sub
mov
and
std
jb
mov
ret
out
(bad)
cmp
ds
and
mov
pop
mov
xchg
pop
je
sbb
jl
call
xor
test
popa
push
fs
pusha
adc
mov
cmps
adc
cmp
movs
adc
pop
xchg
mov
ror
pop
jp
fst
ins
mov
push
adc
jnp
stos
mov
and
mov
adc
lahf
push
outs
mov
add
xlat
rol
jp
push
add
aas
xchg
shl
pop
cmp
out
sub
and
in
repz
loop
xor
icebp
scas
add
nop
pop
jp
lds
movs
rcr
es
add
rcr
push
arpl
cmp
es
xchg
xchg
xchg
add
sbb
xor
cmp
inc
popf
and
fidiv
aaa
ja
and
mov
mov
adc
out
sbb
mov
test
xchg
dec
js
jns
popa
call
in
in
fcomp
jo
loope
inc
mul
dec
(bad)
push
and
out
jnp
movs
repnz
dec
push
stos
sub
push
iret
inc
sub
cmp
pushf
push
dec
inc
mov
push
shr
inc
(bad)
cmp
not
mov
xchg
mov
cmp
dec
neg
cmps
mov
shl
mov
frstor
shl
ret
pop
sub
or
inc
dec
mov
pop
push
(bad)
xchg
cmp
pop
popa
(bad)
shr
nop
out
inc
and
shl
ror
mov
fistp
dec
in
dec
sar
das
pop
add
and
jl
mov
mov
push
xchg
pop
jg
push
push
adc
jmp
cli
js
iret
jle
or
jmp
mov
out
inc
out
cwde
and
iret
repnz
xchg
adc
cmps
inc
mov
mov
cmps
and
dec
stc
inc
push
call
lods
daa
into
jmp
mov
jmp
pop
xchg
mov
dec
fs
mov
cmps
or
push
gs
push
or
shl
push
push
arpl
fist
add
jmp
inc
enter
dec
jle
shr
(bad)
adc
xchg
mov
js
int3
mov
sbb
retf
xchg
popa
ficomp
outs
add
nop
leave
js
ss
scas
jmp
pop
pop
(bad)
jns
cmp
xchg
adc
pop
and
xchg
pop
sub
sahf
pop
inc
movs
adc
push
stos
cmc
sti
jecxz
scas
jmp
jbe
cmp
fild
pop
inc
fwait
push
and
(bad)
or
clc
aaa
ins
loopne
cdq
out
call
cs
sub
mov
outs
cdq
jmp
repz
dec
sub
mov
cld
jo
xor
fild
jp
sub
jnp
je
and
or
jo
pop
sub
xchg
shr
icebp
scas
dec
or
repnz
push
cmps
pop
or
xor
xchg
retf
mov
jb
fwait
pop
mov
mov
adc
aam
cmp
cs
repnz
cwde
mov
sub
loopne
inc
cwde
lods
cs
cdq
fimul
lahf
jmp
out
pop
test
adc
js
in
mov
lock
mov
pop
sub
aam
(bad)
scas
(bad)
cmp
pop
stos
dec
daa
add
test
jl
jmp
push
sbb
pop
xchg
pop
cmp
jmp
aam
mov
pop
jb
dec
addr16
cs
sar
fstp
pop
pop
arpl
xor
pop
movs
or
or
pop
jmp
sub
pushf
outs
ret
lds
fs
dec
push
outs
leave
inc
mov
repnz
aad
mov
sub
sub
stos
mov
call
mov
jno
sub
mov
(bad)
cli
and
(bad)
aam
aam
and
jno
icebp
xchg
mov
movs
mov
cmc
and
xchg
pushf
jmp
xor
cmp
inc
in
movs
mov
dec
inc
inc
xchg
xor
xlat
push
pop
add
jmp
inc
out
cs
jecxz
mov
(bad)
lods
push
jle
xlat
add
popa
shl
test
and
dec
sahf
stos
mov
mov
sbb
cmp
cmp
push
lahf
and
sar
es
mov
or
mov
and
adc
dec
mov
out
add
jmp
(bad)
mov
test
hlt
mov
imul
push
(bad)
stc
jmp
cmp
shl
repz
dec
sub
test
cmps
fld
pop
mov
jno
call
adc
or
and
jmp
inc
inc
and
sub
or
mov
push
dec
cld
jne
movs
(bad)
aas
xor
mov
jno
rcl
mov
mov
or
(bad)
cmp
iret
inc
in
ss
popa
popf
push
enter
(bad)
xor
push
fdiv
sbb
in
ret
xor
push
jno
mov
xor
jo
xor
xchg
or
imul
xchg
pop
call
jmp
shr
jp
in
pop
shl
movs
mov
in
push
aaa
mov
add
les
adc
mov
pop
xchg
xchg
xchg
pop
in
and
adc
add
ret
dec
mov
out
pop
mov
xor
rcr
jae
mov
sub
and
xchg
cmp
retf
(bad)
(bad)
mov
mov
or
int
lahf
and
out
push
pop
or
push
imul
cmps
jecxz
and
push
xor
xor
pop
icebp
test
cld
sbb
dec
jmp
mov
in
js
sbb
daa
icebp
dec
jle
in
je
pop
or
adc
or
retf
adc
jnp
add
xor
test
fldcw
xor
xchg
mov
mov
mov
sbb
js
add
stc
mov
retf
cmp
push
jecxz
(bad)
mov
adc
es
mov
add
add
fimul
sbb
sti
pmaxsw
(bad)
sbb
inc
imul
push
cmp
pushf
mov
mov
cmp
add
mov
xor
or
mov
cld
or
es
fcomp
add
sbb
or
pop
sub
shl
scas
or
sbb
test
xor
test
bound
out
outs
retf
repnz
jb
iret
mov
mov
(bad)
fisubr
pop
sub
adc
add
scas
cmp
or
stc
cmp
in
loope
enter
(bad)
cmp
pushf
(bad)
jge
loop
fsubr
enter
add
push
jae
cli
data16
sbb
jmp
xchg
xor
ds
add
out
push
repnz
imul
sub
sti
js
or
aam
mov
retf
scas
xchg
fs
add
call
mov
dec
clc
jbe
mov
neg
mov
dec
adc
pushf
xchg
shr
iret
sub
mov
nop
or
jp
fimul
mov
and
pusha
cmc
call
mov
loopne
inc
inc
or
sub
xchg
sbb
(bad)
sbb
and
jae
or
mov
add
add
jmp
jp
dec
das
jg
ret
dec
data16
add
mov
jecxz
gs
jno
rcr
jge
lock
inc
shl
pop
in
mov
ret
xchg
je
push
lods
cmp
pop
mov
ins
loope
mov
push
std
(bad)
call
loop
jmp
pusha
adc
push
push
aas
js
test
popa
outs
popf
cli
inc
ins
cmps
call
jge
fisubr
xchg
jns
in
mov
fisttp
sub
mov
mov
outs
scas
daa
inc
in
ds
inc
sbb
xchg
movs
adc
inc
popa
movs
lock
mov
jp
iret
cmp
bound
mov
enter
or
or
movs
into
sbb
aaa
add
stc
loopne
stos
sub
cmp
mov
lea
xchg
push
xchg
in
mov
cmp
add
ror
and
mov
sub
inc
pop
jne
rol
dec
(bad)
test
shl
dec
inc
inc
iret
add
cmp
test
add
hlt
jo
outs
ja
cdq
inc
ss
xlat
xchg
std
mov
ret
mov
bound
aaa
fwait
mov
mov
cwde
fcomip
push
repz
gs
sbb
mov
xchg
xchg
loopne
add
leave
iret
(bad)
aam
pop
loop
dec
or
bswap
leave
lea
xor
outs
sahf
or
fdivr
dec
or
fisttp
int3
cmp
cmps
sar
adc
mov
mov
push
mov
inc
mov
fsubr
xor
std
push
sahf
xchg
push
mov
xchg
aas
mov
(bad)
js
outs
mov
out
leave
stos
sahf
repnz
scas
push
mov
sbb
push
sub
cwde
pop
mov
dec
cdq
xchg
pusha
mov
mov
or
xor
cmp
mov
or
in
dec
cmps
cwde
dec
je
rcl
jp
sub
sbb
sbb
jg
loope
cmp
push
sub
dec
cmp
fwait
xor
mov
retf
mov
cmp
mov
cmp
aaa
jp
dec
lods
outs
cdq
enter
ja
mov
adc
or
cmps
mov
push
daa
fcom
push
cdq
sbb
lahf
mov
mov
and
mov
pop
dec
jns
cdq
and
jo
cmp
push
sub
xchg
call
xchg
and
sbb
pop
adc
mov
in
sbb
aaa
inc
sti
xchg
pop
movs
in
mov
ret
push
(bad)
jle
pop
dec
cmp
mov
in
xor
lahf
pop
add
mov
sub
cmp
fisttp
(bad)
push
pusha
rcr
pop
sub
jno
dec
xor
adc
popa
pop
add
add
popa
bound
or
or
loope
call
shl
les
fldenv
popf
sub
je
adc
push
mov
pop
fidiv
jmp
sbb
mov
mov
(bad)
xor
mov
fist
push
rcl
sub
and
(bad)
ds
mov
jo
inc
rcl
dec
inc
mov
dec
push
(bad)
jecxz
shr
pshufw
xor
sbb
movs
js
mov
icebp
lock
mov
inc
pop
shr
dec
jnp
pop
retf
push
shl
pop
std
sub
and
xor
lods
dec
cs
test
adc
adc
sub
dec
adc
inc
popf
leave
icebp
cmp
les
jbe
(bad)
sub
or
in
fild
pop
lahf
aas
cmp
inc
dec
ins
or
shr
adc
xchg
mov
and
xchg
(bad)
jge
cmp
cdq
add
fs
or
out
cwde
sub
leave
retf
fcmovnbe
jo
sub
into
jae
scas
int
xor
jb
adc
fs
jg
jmp
pop
ror
das
rol
xor
js
outs
sbb
inc
push
push
jecxz
inc
les
or
mov
mov
cmp
pop
xor
mov
sbb
cmc
(bad)
xchg
outs
outs
inc
in
test
ins
fcomip
in
cmps
and
and
ins
dec
lds
pushw
add
ins
or
add
inc
add
(bad)
xchg
test
or
jnp
arpl
outs
mov
sbb
ficom
fs
imul
js
fisttp
mov
mov
repz
dec
mov
jnp
fstp
inc
bound
push
xchg
fisttp
pop
or
(bad)
pusha
outs
call
pop
mov
cwde
cli
cmp
mov
fsub
gs
cmp
out
ss
aam
adc
mov
jae
les
mov
scas
test
cmp
pop
xchg
xor
ror
loope
lds
sbb
pop
imul
sub
push
idiv
mov
fwait
mov
sti
add
dec
fist
sbb
inc
cmp
mov
push
call
popa
mov
out
inc
lods
cmp
pop
mov
or
loope
mov
xchg
addr16
jle
loop
in
ja
sbb
inc
xor
inc
sub
mov
add
cdq
sbb
pop
aad
pop
jmp
or
adc
cmp
jns
cs
xor
out
ins
lock
les
xchg
mov
ficomp
out
and
cmp
xor
jmp
inc
mov
mov
popa
ds
popfw
mov
xor
imul
pop
ret
pop
dec
inc
sar
add
mov
adc
sbb
mov
push
cs
loope
lahf
dec
mov
cdq
push
icebp
push
push
mov
imul
xchg
push
pop
mov
lods
pop
mov
js
dec
enter
cmc
inc
mov
push
xchg
mov
lds
ror
mov
mov
or
movs
ror
into
jge
mov
xchg
mov
sub
push
ins
sti
push
inc
iret
fcomi
or
in
pop
mov
mov
fdiv
mov
cmp
daa
dec
or
pusha
leave
addr16
loope
es
test
sub
jmp
in
or
lds
vaddpd
leave
inc
icebp
sub
jne
inc
xor
int
sub
sbb
jl
stos
out
jmp
jl
cmp
sub
adc
aad
mov
inc
add
daa
or
outs
ins
mov
xor
xchg
pop
sub
push
xor
adc
scas
clc
mov
repz
push
ret
jb
out
dec
mov
sub
cmovo
jp
mov
fsubr
cmps
mov
push
push
addr16
movs
xchg
inc
pop
inc
mov
mov
sar
inc
or
sbb
adc
or
push
add
test
into
push
daa
mov
sbb
mov
pop
jno
cwde
push
lds
scas
xor
sti
sbb
adc
xchg
jne
sbb
pop
pop
xor
dec
sahf
sub
stc
add
sahf
ins
jns
aas
push
or
test
icebp
push
dec
add
inc
xchg
dec
xchg
(bad)
rol
lahf
dec
cld
test
xchg
add
or
dec
out
push
adc
dec
push
(bad)
shl
fdiv
jb
lea
in
jb
cmp
xlat
mov
cs
aaa
sbb
push
xchg
jb
sahf
ret
cs
outs
enter
cmp
add
loope
xchg
xor
mov
fist
pushf
popf
mov
scas
fisttp
pop
jne
push
mov
and
mov
xor
mov
js
jne
daa
data16
cmc
dec
in
or
push
xor
xlat
lods
jle
stc
jbe
and
mov
xchg
es
pop
xchg
rol
mov
imul
pop
xchg
pop
sub
xor
push
sub
ds
push
je
int
xchg
xchg
jmp
lds
je
jns
aas
repnz
repz
add
(bad)
sub
sti
retf
stc
mov
loop
shr
pop
sub
add
add
sbb
ins
loopne
movs
sub
inc
sahf
dec
jmp
mov
mov
xor
ret
(bad)
out
repz
xchg
aad
jae
add
fs
cwde
out
push
in
ucomiss
add
cdq
and
mov
sbb
sub
push
cdq
mov
icebp
data16
sbb
lods
ja
inc
adc
push
dec
ins
add
gs
jnp
mov
(bad)
jge
mov
xchg
jle
and
int
and
imul
or
cli
mov
cmp
daa
dec
out
int3
push
sbb
and
add
cmc
add
mov
add
loop
and
xor
sbb
jp
test
gs
lds
call
test
(bad)
out
ja
dec
mov
fucomip
cmp
in
clc
ror
jmp
xchg
(bad)
fmul
cmp
mov
stos
lahf
inc
mov
fwait
and
gs
and
das
xchg
jns
retf
add
sbb
(bad)
or
aas
push
movs
mov
sub
cmps
mov
lds
int3
push
pop
mov
icebp
pop
push
mov
test
fnstcw
and
ss
xor
adc
retf
fs
lahf
icebp
mov
dec
test
sahf
cmps
or
pop
or
cmp
sub
mov
inc
(bad)
jo
lds
or
stos
hlt
mov
jns
inc
fcom
stos
jne
or
loop
ret
add
jl
push
rcl
test
addr16
inc
sbb
jmp
icebp
es
jmp
cwde
xor
push
(bad)
jmp
cmps
pushf
jmp
call
adc
daa
sub
imul
lea
inc
xor
mov
xchg
add
and
mov
or
sub
sti
sbb
cmps
push
mov
sbb
call
stos
or
mov
lods
scas
cs
shl
mov
movs
loop
and
push
sub
mov
add
lock
addr16
(bad)
pop
cmp
and
mov
inc
dec
lods
add
fld
sub
in
repz
add
cmp
das
dec
mov
adc
and
sbb
xchg
add
or
cmps
sub
ss
je
push
mov
dec
(bad)
in
fsub
stos
in
pop
test
jg
dec
mov
and
ja
ja
or
ins
push
popa
(bad)
movs
jns
jno
ds
cmp
(bad)
mov
pop
js
fwait
test
or
fadd
inc
ins
push
lock
lods
inc
adc
xchg
push
call
loop
lds
das
xchg
out
das
pop
adc
or
push
je
pop
sub
lods
push
data16
xchg
ins
inc
adc
inc
mov
jecxz
popa
or
vpxor
(bad)
iret
xor
movs
gs
setne
push
pop
adc
and
pop
mov
add
dec
sub
or
mov
scas
or
cmp
jp
fiadd
pop
dec
popa
movs
sub
and
pusha
icebp
loop
dec
push
hlt
dec
sbb
popa
popf
(bad)
push
sub
je
js
push
mov
imul
pop
ficom
lock
dec
pop
inc
mov
adc
pop
and
cmp
into
stos
xchg
jmp
push
push
stos
mov
aaa
dec
xor
jno
rcl
adc
cmp
jbe
fcmove
cmp
sub
js
mov
mov
loope
sbb
or
daa
dec
jg
test
neg
cwde
mov
pop
xchg
inc
movs
(bad)
fst
sti
adc
aam
mov
sub
ret
cs
into
imul
mov
or
scas
add
cmp
into
sbb
xchg
pusha
mov
push
mov
add
push
in
sub
gs
aad
shl
out
xchg
jle
mov
adc
into
cmp
iret
push
cld
arpl
in
std
inc
call
stos
fsubr
inc
jg
iret
sub
stc
pop
leave
add
mov
xchg
push
xor
inc
mov
retf
data16
ds
cmc
xchg
mov
js
mov
mov
js
aas
mov
mov
dec
into
xor
sbb
ret
je
enter
adc
push
pop
sbb
jg
inc
xchg
adc
fwait
pop
sub
int3
repz
jnp
or
adc
das
fxch
xor
fmul
inc
jb
int3
nop
loop
xchg
mov
push
popa
ja
xchg
out
dec
arpl
fs
loopne
mov
aam
mov
scas
std
mov
sbb
pop
imul
leave
loop
rol
adc
mov
imul
out
test
push
push
rcl
add
pop
add
or
and
mov
xor
pop
or
int
cmp
mov
je
or
aam
les
test
sbb
sbb
dec
cs
aam
mov
inc
dec
gs
push
sub
aas
shl
iret
imul
ret
shrd
jb
xchg
pop
inc
add
pop
je
repnz
dec
cmp
cmp
cmps
sbb
rcr
xchg
mov
jb
shr
xor
out
mov
rcr
in
lea
les
(bad)
dec
push
and
xor
loope
pop
loopne
scas
test
lods
test
mov
in
cmp
or
add
sbb
jge
lock
push
add
mov
xor
(bad)
sbb
outs
jp
dec
ss
mov
inc
dec
or
iret
out
xchg
and
les
push
add
popf
jecxz
xchg
inc
loop
imul
fdivr
jb
sbb
adc
inc
repz
mov
(bad)
inc
scas
pop
mov
ins
scas
hlt
and
push
dec
in
cmp
cmps
fimul
out
jns
push
sub
(bad)
mov
xchg
mov
stc
push
fcmovnu
aam
sub
push
(bad)
ja
jo
inc
pop
lock
addr16
push
pop
mov
jbe
sub
jae
sbb
dec
push
(bad)
mov
outs
outs
in
jne
loopne
dec
jo
xor
xor
jnp
out
cmp
leave
jl
pop
retf
repnz
sub
adc
cmp
xchg
stos
inc
push
mov
je
and
inc
aad
xchg
xor
imul
int3
out
out
pop
jp
bound
xchg
pop
adc
push
inc
mov
push
xchg
inc
std
cmp
add
fs
cs
jmp
dec
leave
mov
test
in
ds
aad
and
int
test
xor
ja
shl
mov
inc
dec
inc
push
fimul
icebp
addr16
ja
das
daa
xor
adc
int
ret
aaa
jg
call
icebp
and
mov
ss
into
mov
xor
pop
cmp
push
push
fnstcw
idiv
pandn
sbb
jg
cmp
cmp
rol
daa
or
ret
(bad)
pop
cwde
repnz
add
mov
mov
mov
sbb
jno
pop
in
mov
ficom
mov
imul
out
mov
and
adc
daa
(bad)
in
or
inc
loope
push
pop
and
fwait
leave
bnd
out
or
fcom
mov
xchg
imul
(bad)
or
ss
jge
adc
mov
dec
das
mov
scas
clc
inc
dec
(bad)
iret
movs
lds
push
(bad)
lds
cmp
fld
jle
arpl
and
(bad)
imul
xchg
and
xchg
inc
push
ins
(bad)
sub
jno
push
sbb
lods
add
lock
xchg
jp
push
in
dec
out
retf
push
mov
in
cli
jno
retf
(bad)
icebp
xchg
dec
jb
cmp
lea
cmp
mov
pop
jmp
add
sbb
pop
and
add
icebp
adc
mov
out
lods
loopne
jle
mov
and
sbb
xor
push
test
pop
push
mov
push
pop
ret
sub
outs
leave
add
test
inc
sub
loope
jmp
dec
xor
retf
arpl
xchg
sbb
push
test
aaa
add
fstp
push
mov
call
jns
stc
mov
cmps
mov
sbb
lock
jnp
stc
movs
jge
fisttp
stos
(bad)
gs
jle
outs
cmps
sbb
mov
cmp
fsub
lds
dec
mov
hlt
pop
mov
(bad)
fs
cmp
dec
(bad)
iret
xchg
add
push
jnp
xchg
and
loope
fs
xchg
nop
adc
cli
(bad)
cmp
dec
fdivr
jns
jns
imul
push
(bad)
inc
mov
into
dec
xor
sar
fdivr
mov
ror
test
jge
adc
lods
or
push
mov
stos
xor
ds
lods
rcr
sub
lock
cmps
outs
test
js
cmc
or
ror
shl
ror
sbb
call
sub
inc
enter
dec
and
(bad)
in
std
sbb
sbb
js
daa
icebp
mov
cmp
and
pop
popa
out
sub
sahf
dec
in
push
and
stos
sbb
fcom
mov
or
sbb
mov
gs
inc
int3
stc
call
mov
and
jne
cli
(bad)
inc
mov
push
psubsb
(bad)
ret
mov
and
jo
ror
and
les
movs
aam
xchg
mov
dec
xor
movd
lods
add
outs
repnz
in
sbb
add
adc
and
out
xlat
rcr
outs
out
push
fsubr
fwait
mov
outs
pushf
mov
hlt
dec
gs
pop
js
jno
pop
and
pop
dec
mov
adc
add
cmp
or
adc
mov
xchg
popf
xor
cmp
out
pop
adc
pop
add
mov
neg
or
inc
add
dec
sub
push
mov
loop
rcl
js
mov
out
sbb
push
sub
std
out
push
stos
xor
lds
adc
ins
aad
scas
in
(bad)
inc
push
lods
lods
pop
repz
sub
sbb
or
sahf
fistp
addr16
icebp
in
rcl
mov
inc
adc
xchg
mov
xor
mov
int
mov
loope
rcr
stc
mov
mov
ja
popa
push
or
les
xor
sbb
cwde
in
(bad)
loopne
rcl
cmp
out
jg
jge
push
jno
fs
add
and
(bad)
pushf
cmp
mov
cmp
sub
or
fldpi
sub
inc
int
pop
enter
shl
xchg
rol
jb
xchg
rcl
inc
jne
repnz
rcl
mov
mov
fdivr
dec
and
mov
mov
ins
and
push
adc
mov
in
jg
add
push
adc
mov
out
xor
jae
push
out
dec
lods
test
lea
ins
jmp
add
jo
push
cmp
ss
mov
xchg
adc
or
dec
sbb
shl
outs
fcomp
xor
scas
in
adc
cmp
(bad)
ins
xlat
movs
pop
inc
outs
xchg
rol
mov
push
mov
mov
mov
cmp
ja
aas
adc
cli
(bad)
add
out
jecxz
xor
aaa
or
repz
sbb
mov
nop
mov
mov
xchg
mov
scas
inc
mov
aad
jno
push
sbb
cmp
gs
xor
pop
sbb
sti
push
mul
mov
aad
call
ins
inc
call
out
ins
int3
test
add
sbb
and
push
cli
mov
mov
inc
jmp
movmskps
pusha
test
jae
inc
jno
in
xchg
and
imul
or
imul
fidivr
push
adc
adc
lahf
test
pop
in
ret
pop
push
pop
pusha
hlt
inc
pop
sti
mov
sti
mov
jecxz
cld
xor
sub
pop
cmp
test
adc
push
sar
(bad)
sahf
push
sbb
repz
or
loop
(bad)
loope
pop
arpl
dec
je
pop
fnsave
mov
jecxz
jp
cmps
inc
data16
xchg
icebp
push
in
cwde
mov
mov
push
jns
out
ret
loope
cmps
sub
test
shl
scas
cdq
mov
lahf
aad
(bad)
addr16
imul
sbb
adc
inc
add
mov
stc
cli
cwde
test
xor
inc
repnz
es
pop
sbb
mov
setns
inc
xrelease
and
jne
enter
jmp
add
adc
xor
repnz
js
mov
lods
in
inc
or
imul
pushf
adc
sbb
push
dec
pop
pop
adc
enter
out
inc
into
or
(bad)
cmp
mov
mov
adc
(bad)
sub
es
stc
mov
push
or
pop
push
inc
popa
or
mov
in
mul
add
jmp
and
fisub
sti
push
hlt
rol
lahf
repz
mov
jbe
sbb
cmps
ds
mov
cmp
jae
sahf
push
sar
jns
in
sbb
imul
cmp
lds
outs
mov
popf
scas
imul
mov
push
les
or
(bad)
pop
(bad)
xchg
mov
mov
push
and
cdq
aad
jns
mov
inc
pop
jp
int
xor
into
mov
daa
or
std
and
loopne
sbb
xchg
daa
push
iret
retf
mov
imul
pusha
jnp
cli
sbb
cwde
and
cli
and
cwde
fcmovnb
into
int3
loopne
adc
cdq
jmp
xor
and
pop
leave
cmp
ret
ficom
fbstp
add
mov
and
inc
in
in
loope
es
out
pop
retf
fwait
pop
repnz
push
ss
sar
mov
fld
xchg
cmps
mov
shr
jecxz
mov
repnz
ficom
push
call
leave
cmps
iret
fidiv
jbe
jge
retf
mov
pop
push
add
sbb
enter
mov
mov
fldcw
popa
pop
add
dec
push
sbb
cwde
fcomp
outs
mov
and
and
fisub
or
int3
je
nop
js
nop
repnz
fdiv
rcr
jp
mov
mov
retf
mov
adc
pop
cdq
cli
aam
scas
inc
push
jns
dec
inc
pushf
pop
push
push
in
retf
ins
adc
addr16
sbb
xchg
mov
adc
outs
inc
int3
pop
mov
xchg
repz
push
mov
fsubp
ret
ja
fldcw
jl
out
adc
push
pop
lods
fdiv
int3
stos
push
push
jmp
pop
jg
lods
mov
mov
setae
mov
adc
scas
jmp
aad
mov
mov
sahf
sub
fisttp
cmc
cmp
fisttp
leave
add
and
add
ficom
sbb
jo
sub
ins
cmp
add
sub
sub
shr
cmp
sbb
xlat
outs
(bad)
mov
icebp
fimul
out
adc
imul
inc
les
mov
pushf
and
inc
sub
fld
adc
xchg
add
adc
aam
and
mov
push
mov
cmp
ja
inc
xchg
rcr
leave
out
add
sti
add
fwait
xor
sub
cwde
and
ret
lods
rol
mov
and
js
outs
frstor
jmp
test
int
test
xor
inc
mov
(bad)
cmp
imul
jge
xchg
mov
xchg
jae
repnz
and
cmp
pop
ja
jg
sub
pop
mov
pop
cmp
fidivr
pop
cmps
les
in
leave
(bad)
adc
rol
das
jp
rcl
sahf
inc
mov
rcl
push
push
ficomp
rol
fbld
jecxz
cs
xchg
dec
mov
bound
gs
mov
or
test
packssdw
loopne
arpl
sbb
xchg
(bad)
enter
push
sar
addr16
adc
(bad)
not
mov
and
cmp
dec
jbe
daa
or
sub
test
out
xor
outs
mov
xchg
xchg
(bad)
arpl
lahf
xchg
fwait
xchg
sti
das
cdq
or
xchg
xchg
mov
sbb
pop
or
mov
fld
mov
pop
je
xchg
aam
sub
sub
sub
jecxz
push
xchg
iret
push
add
push
sub
not
and
into
mov
xor
lds
in
mov
adc
gs
dec
pop
push
mov
dec
xlat
ffreep
int
aaa
mov
xor
rcl
cmp
mov
clc
jmp
mov
repz
jmp
out
adc
jle
sub
lahf
and
imul
pop
mov
add
adc
aam
sbb
and
ins
add
ins
jb
sbb
dec
sub
mov
stos
adc
imul
in
shl
inc
sub
mov
mov
or
and
sub
xchg
or
mov
pusha
sbb
out
push
mov
popf
imul
out
mov
into
lock
cs
cmp
mov
test
dec
pop
xchg
lea
jecxz
cmp
test
aaa
jp
add
out
mov
loop
jmp
jne
xchg
add
add
movs
mov
jbe
push
in
and
adc
cmps
fld
in
es
loope
xor
popa
mov
and
ss
dec
jae
or
mov
fimul
mov
mov
pop
cdq
int
inc
xchg
pop
mov
cmps
sub
push
lods
cmp
mov
dec
test
mov
and
scas
pop
aad
clc
in
push
sub
mov
sub
dec
hlt
sbb
lods
pop
je
sub
dec
nop
aaa
cmp
mov
(bad)
mov
repnz
or
xor
in
push
pop
inc
inc
iret
pop
popa
mov
jp
push
jno
mov
xchg
loop
push
test
fs
add
leave
lahf
xlat
push
outs
shr
sbb
cmp
ins
xlat
sbb
in
and
fadd
fprem1
mov
rcl
and
loope
add
loop
xor
xor
push
mov
sbb
inc
imul
retf
call
mov
mov
cwde
sbb
bsf
xchg
cmps
mov
into
pop
dec
inc
(bad)
sti
loope
arpl
fisttp
jae
popa
rcl
dec
cld
sti
xchg
in
shl
and
pop
push
or
add
push
jne
pop
cmp
and
mov
ins
dec
mov
fsubrp
or
pop
or
xor
imul
retf
iret
ins
ficom
pop
push
mov
test
call
sub
jno
jne
push
scas
sub
pop
cdq
jne
pop
dec
outs
sbb
retf
ins
xor
ins
(bad)
int
dec
std
rcl
das
fadd
jmp
xchg
or
push
popf
sub
(bad)
repnz
loopne
inc
repz
loop
xchg
inc
js
cdq
xor
xchg
sub
ror
ja
cmps
mov
mov
sbb
popa
imul
shl
into
ss
and
jle
fimul
movs
addr16
or
(bad)
fwait
or
sbb
cmp
in
inc
jmp
scas
cdq
pop
dec
test
mov
mov
dec
dec
rcl
(bad)
and
cmp
inc
push
mov
add
mov
movs
pop
push
xor
add
pop
std
(bad)
mov
ror
sbb
jge
and
jo
outs
and
fstp
loopne
add
(bad)
(bad)
inc
or
shr
inc
(bad)
pop
and
dec
dec
aad
push
push
mov
imul
inc
jmp
jb
es
dec
cmp
xchg
imul
ret
jg
add
pop
and
shl
out
aad
dec
jo
cmps
or
cdq
push
inc
rcr
aad
(bad)
retf
mov
es
pop
nop
or
fist
mov
add
push
dec
mov
xchg
imul
dec
pop
fwait
repz
adc
mov
add
or
dec
jb
and
push
mov
jge
push
neg
pop
and
inc
pop
jns
imul
bound
dec
jo
scas
pop
cmps
push
test
pop
(bad)
adc
dec
jp
sti
add
fist
iret
leave
call
repnz
into
push
sub
xor
(bad)
in
dec
push
dec
pop
lds
(bad)
sbb
mov
sub
mov
rcl
stos
jbe
cli
jae
fisub
add
pop
cdq
dec
sub
(bad)
pop
inc
fmul
cli
(bad)
sbb
cld
xchg
push
loopne
ss
into
mov
mov
rcr
scas
inc
inc
shr
mov
fs
inc
pop
adc
mov
xchg
xchg
pop
enter
push
pusha
aaa
mov
movs
and
cwde
jmp
repz
mov
dec
shr
sahf
adc
repnz
aas
sub
loop
in
push
cs
sub
imul
fxch
imul
xchg
adc
sub
iret
mov
mov
std
cld
test
jge
es
jg
ror
cmp
xlat
jle
call
aas
test
push
inc
je
add
push
dec
out
stos
push
mov
out
mov
jmp
(bad)
mov
jno
xlat
sbb
add
lea
repz
sti
test
cmps
mov
lock
fbstp
cmps
mov
mov
pop
sub
iret
pop
arpl
mov
pop
pusha
inc
movs
and
mov
fsub
sti
mov
adc
adc
popa
repnz
inc
mov
repnz
mov
call
rol
mov
cs
lock
mov
mov
es
shl
mov
aad
stos
xchg
mov
das
sbb
test
mov
mov
add
cmp
aad
mov
inc
popa
mov
mov
add
addr16
dec
sbb
loop
test
mov
pop
es
lods
sbb
sti
dec
popa
mov
retf
inc
sbb
frstor
call
aad
rol
fidivr
and
in
dec
jae
(bad)
repnz
inc
mov
and
and
retf
and
jne
aaa
fdivr
push
mov
js
hlt
in
adc
pop
(bad)
pusha
jge
je
mov
jmp
fmul
pop
sbb
pop
push
xchg
outs
icebp
mov
or
sbb
adc
and
add
fdiv
jne
sub
ja
jnp
adc
fwait
dec
cld
push
xchg
mov
mov
ins
add
mov
mov
test
fdiv
ja
(bad)
mov
mov
(bad)
leave
out
sub
int
fild
ds
adc
inc
imul
or
enter
jmp
scas
or
ins
inc
bound
popf
pop
lods
lahf
push
sub
lds
or
mov
or
adc
ret
sbb
jp
sub
sub
pop
pop
xchg
aaa
jl
hlt
jmp
pushf
ins
leave
jl
in
stos
xor
mov
inc
xchg
mov
jb
sbb
xchg
xchg
std
push
push
aaa
xchg
inc
and
cmps
iret
xadd
add
jg
loopne
xor
sub
mov
sbb
fimul
push
idiv
push
cmp
in
fcmovnb
dec
adc
jae
push
mov
add
fnsave
mov
je
int
mov
and
sbb
xlat
nop
scas
and
loop
add
push
xor
pop
pop
sbb
imul
sbb
fcomp
push
cmc
out
retf
ret
(bad)
or
and
fidiv
xchg
cld
pop
mov
xor
cdq
inc
sti
rcl
fistp
(bad)
movs
or
inc
lea
retf
fisttp
ins
ret
into
fwait
and
or
jne
mov
fdivr
mov
test
inc
push
mov
jae
movs
jnp
and
js
imul
push
xor
ds
js
mov
inc
jno
dec
push
pop
shl
mov
jecxz
fs
sbb
push
dec
pop
and
and
aad
in
mov
shr
inc
cmp
push
aam
sbb
jb
push
je
cmp
xor
loopne
jne
inc
inc
idiv
mov
push
les
mov
movs
jnp
call
lock
shr
ja
push
retf
aaa
in
add
aam
ins
aas
aad
inc
stos
adc
(bad)
addr16
jg
movs
ss
mov
add
adc
and
outs
(bad)
jmp
pop
jae
repnz
cmp
pop
push
aaa
dec
(bad)
mov
cmp
cdq
movs
dec
jne
dec
mov
call
icebp
mov
aas
push
fcomp
int3
stos
mov
push
(bad)
jecxz
mov
push
mov
mov
test
push
addr16
pushf
in
dec
mov
ja
ror
mov
enter
adc
(bad)
cmp
mov
pop
loopne
jmp
jnp
and
cs
fld
jecxz
mov
or
dec
lock
mov
cdq
retf
std
neg
mov
pop
fstp
add
mov
mov
push
adc
outs
outs
or
pop
cmp
xor
loopne
cmp
sbb
mov
xchg
int
aas
es
push
or
nop
shl
or
jge
pop
sbb
push
int3
mov
xlat
imul
ins
jmp
fisttp
daa
xchg
fwait
hlt
leave
rsqrtps
scas
cmp
pop
pusha
outs
pop
shl
es
ror
nop
adc
mov
in
test
jae
test
xchg
xor
dec
cmp
sub
cdq
retf
ins
loop
aad
in
mov
inc
xchg
aad
jmp
in
(bad)
push
pop
jbe
dec
bound
fidiv
xchg
and
les
icebp
movs
clc
sahf
ds
(bad)
fwait
repnz
add
mov
fsubr
mov
addr16
std
retf
sbb
pop
leave
scas
loope
retf
(bad)
lea
sbb
inc
adc
(bad)
jle
inc
cli
scas
aaa
clc
sbb
pop
scas
push
leave
iret
pop
pusha
dec
test
push
stos
iret
stos
into
sbb
push
dec
(bad)
cmp
add
jmp
scas
dec
sti
push
and
dec
sub
loope
js
or
ficom
xor
jl
and
inc
or
gs
inc
sub
mov
push
sub
out
adc
neg
fisubr
cmp
call
adc
add
mov
ret
and
aaa
cmp
mov
push
ficom
repnz
or
adc
jl
cmps
or
fs
shr
(bad)
je
jle
mov
(bad)
in
mov
pusha
and
push
jl
mov
xor
fsubr
xor
pop
add
sar
sub
pusha
mov
adc
int3
jecxz
fs
in
hlt
jmp
lock
jae
leave
pop
mov
loopne
xchg
add
pop
imul
xlat
test
and
xor
dec
pop
mov
aas
ret
stos
adc
add
sbb
fdiv
in
mov
dec
fidiv
leave
cmp
xchg
jns
fcomi
loope
jge
xchg
push
xchg
sbb
retf
and
and
push
dec
add
adc
retf
inc
clc
jae
test
inc
xchg
sbb
push
gs
xor
fiadd
call
scas
xor
enter
js
std
ins
push
pushf
or
mov
retf
jnp
push
pop
mov
add
and
es
mov
jg
daa
inc
push
test
fistp
and
pop
or
dec
fild
mov
call
mov
retf
push
pop
inc
sbb
rep
fwait
push
push
push
cmp
lods
repz
jno
test
shr
cmc
in
rcl
jmp
xor
and
int
inc
add
rol
loop
sbb
cmp
push
fstp
dec
imul
pop
inc
mov
popa
call
jmp
les
add
push
fcomp
and
inc
xlat
mov
mov
or
sub
shl
ins
mov
jle
xchg
and
or
add
mov
add
lahf
cmp
rcl
jno
pop
fistp
ds
adc
push
scas
pop
jno
(bad)
inc
jns
push
jnp
add
push
xchg
and
ins
je
jl
fsubr
js
cmp
pop
xchg
dec
jb
ins
ins
sbb
cli
xlat
loope
daa
adc
jmp
or
xchg
out
jmp
test
shl
das
test
sub
mov
test
jge
test
xor
nop
mov
fild
neg
jg
jmp
jle
push
data16
jmp
in
iret
fcomp
leave
test
xchg
fwait
ja
cs
cmp
scas
xchg
sbb
int3
jmp
push
cmp
loopne
cmp
mov
aad
xchg
jo
call
test
inc
pop
xchg
rol
js
xchg
cmps
repz
loopne
(bad)
cli
mov
mov
jg
enter
test
xor
leave
jbe
or
(bad)
in
repz
add
arpl
ret
sar
and
or
push
in
jne
(bad)
mov
sbb
mov
(bad)
pop
sub
sub
stos
sub
icebp
gs
rol
cmp
cmp
dec
dec
inc
mov
aaa
push
xor
xor
sbb
fnstsw
cdq
mov
aas
(bad)
fstp
push
ret
lock
out
(bad)
adc
adc
jmp
mov
dec
shr
adc
dec
movs
jmp
in
xor
bound
scas
pop
inc
adc
mov
outs
pusha
leave
addr16
imul
or
and
fnstsw
out
push
sub
xchg
adc
scas
jo
outs
shl
push
and
cmc
cmps
sub
sub
pop
mov
or
retf
dec
shl
mov
xchg
test
xchg
fisttp
sahf
mov
cs
jg
mov
mov
pop
adc
pop
jbe
xchg
xchg
dec
adc
call
in
into
add
es
(bad)
inc
fs
fwait
add
xchg
cmp
xchg
test
fcom
bound
aaa
or
out
push
std
sbb
sar
push
cmps
jbe
test
jno
push
xor
hlt
in
(bad)
adc
mov
fldcw
pusha
dec
mov
or
push
(bad)
or
outs
dec
icebp
jle
add
push
add
adc
xor
sbb
mov
adc
cmps
imul
xchg
data16
imul
mov
fwait
repnz
in
scas
aad
(bad)
je
xchg
cmps
mov
sbb
mov
pop
xlat
jge
add
xchg
pop
inc
popf
ficom
clc
enter
repz
fisub
cld
pop
out
(bad)
loope
cdq
pusha
mov
sub
sbb
mov
repz
cdq
dec
dec
mov
sub
lea
pop
lahf
clc
cmp
xor
in
mov
nop
xchg
mov
in
pushf
sub
cdq
xchg
lds
retf
stos
xchg
test
sbb
xor
cwde
sub
jmp
scas
sbb
dec
lds
adc
adc
sbb
mov
jmp
outs
sub
shl
repnz
jo
xor
inc
sbb
dec
arpl
pop
mov
rol
pop
push
sub
pusha
sbb
cmps
ins
mov
fs
cdq
adc
mul
les
lods
addr16
jg
les
dec
mov
enter
pop
and
sub
sbb
cmp
mov
push
dec
or
call
mov
mov
mov
stos
lahf
ja
cmp
push
cmps
test
or
cmps
daa
push
(bad)
xor
call
pusha
xchg
xchg
or
ret
loope
sbb
sub
cdq
ror
nop
repnz
mov
leave
dec
pusha
inc
xor
jmp
push
push
fs
adc
sahf
or
fidivr
xchg
shl
pop
mov
cmp
jae
and
mov
cmc
in
loopne
sbb
scas
pop
mov
pop
add
push
(bad)
lea
imul
and
call
cmps
sub
sahf
out
call
mov
or
dec
aaa
mov
adc
xchg
int
mov
cld
adc
orps
and
out
add
adc
jnp
mov
and
sub
add
sbb
sti
ja
ds
inc
sar
pop
jge
mov
xchg
outs
bound
leave
push
cld
sub
jg
nop
arpl
cs
shr
adc
sub
retf
dec
xor
(bad)
fwait
pushf
lods
pop
sbb
ror
lock
imul
xchg
mov
sub
and
data16
xchg
jl
add
loopne
push
mov
clc
inc
(bad)
adc
jbe
hlt
mov
shr
pop
xchg
xor
daa
mov
mov
mov
dec
mov
int3
cmpxchg
xor
dec
adc
mov
adc
and
movs
fs
adc
xchg
out
pop
add
icebp
sar
jge
add
jns
dec
sbb
jp
or
xchg
and
cld
repz
outs
sti
in
mov
pop
cwde
ins
jno
cmp
(bad)
scas
mov
outs
(bad)
cdq
test
push
cld
test
or
mov
icebp
(bad)
out
gs
mov
jmp
(bad)
(bad)
outs
or
je
mov
jne
jg
cld
(bad)
cmp
inc
mov
std
aaa
test
outs
add
ret
xchg
cmc
mov
jl
inc
out
xlat
mov
fisubr
cmp
adc
xchg
int
mov
cmc
fisubr
jno
or
cwde
xor
mov
xor
ret
pop
inc
xchg
cmp
lahf
aaa
inc
sbb
xchg
in
mov
mov
push
push
add
pop
xchg
int3
mov
add
and
mov
loopne
push
jp
cmp
dec
xor
ret
mov
and
fmul
into
aas
add
push
or
mov
sahf
mov
dec
mov
mov
push
pop
ins
and
mov
add
daa
adc
pop
(bad)
xchg
outs
(bad)
(bad)
mov
dec
movs
lea
iret
imul
mov
cmps
sti
jo
push
jns
cmps
es
mov
jle
inc
pop
dec
icebp
(bad)
xor
fsubr
sbb
xor
(bad)
dec
(bad)
in
mov
cmp
cld
xor
rcr
stos
sub
jle
sub
jecxz
add
push
push
mov
jmp
push
adc
fwait
cmp
lahf
and
push
mov
cmp
push
imul
jg
inc
in
xchg
inc
scas
jns
dec
mov
lods
sbb
in
in
xchg
jne
nop
or
push
xor
ss
fisubr
fsubr
enter
(bad)
fadd
dec
dec
push
gs
xlat
push
ins
cmp
fs
(bad)
outs
out
lods
icebp
sbb
mov
mov
pushf
xchg
scas
inc
stos
dec
mov
jge
jb
test
out
test
stos
add
inc
icebp
and
fs
mov
inc
dec
ja
mov
lock
mov
loopne
mov
mov
sbb
(bad)
dec
mov
ror
jne
add
neg
adc
xchg
fisub
ins
mov
fwait
add
std
inc
inc
ret
sub
call
add
adc
xor
ret
jns
sbb
jno
xchg
mov
lock
xor
das
push
loopne
bound
nop
add
xchg
mov
sahf
cmp
inc
into
test
stc
retf
scas
inc
mov
lods
and
gs
jne
inc
sub
fnsave
ret
loop
out
and
sbb
rcl
jg
test
pop
dec
xor
out
jo
cld
fst
mov
ror
sar
add
mov
cli
xchg
xor
mov
popa
js
add
imul
out
dec
(bad)
retf
bound
pusha
add
pop
dec
cmps
fs
enter
dec
ret
dec
adc
enter
pop
jnp
fsub
xchg
fwait
test
int3
cwde
in
push
inc
dec
inc
in
push
mov
icebp
les
ret
dec
add
retf
cli
xchg
sbb
fmulp
push
mov
out
idiv
popa
in
sbb
adc
mov
xor
jecxz
jp
xchg
fwait
mov
fadd
add
jecxz
aas
or
and
pop
clc
pop
cs
shl
cmps
mov
out
sbb
cmps
mov
je
sub
sub
fwait
into
into
push
sub
inc
loop
inc
or
fcom
inc
cld
add
test
inc
call
jnp
in
ror
ret
(bad)
dec
pusha
sbb
add
cmp
int
mov
mov
or
inc
sub
je
or
mov
jmp
movs
jo
int3
cld
ror
retf
sbb
bound
xor
jnp
fiadd
pusha
xor
daa
int
cmp
and
sbb
dec
(bad)
aad
dec
pop
mov
or
jae
cmp
cmp
jbe
in
mov
or
(bad)
ficom
and
xor
inc
cmp
mov
stos
fsubr
xchg
xchg
icebp
cwde
loope
(bad)
out
add
jno
lods
into
gs
or
shl
cwde
ins
adc
imul
out
push
inc
jge
or
stos
pop
popa
mov
test
jne
dec
sar
test
sub
jne
rcl
sub
cmp
and
inc
aas
in
xor
pop
or
lds
loop
xor
pop
pop
(bad)
sti
shl
ret
out
and
(bad)
mov
pop
dec
sahf
add
or
sar
dec
jmp
or
pop
clc
ja
pushf
dec
inc
pop
sub
js
stos
into
jp
setno
pushf
push
sub
sbb
test
jmp
adc
mov
pop
and
test
xchg
pop
fisttp
push
dec
sbb
ins
cli
and
xchg
out
sub
imul
out
(bad)
push
cmp
js
sub
dec
adc
dec
hlt
mov
cmp
mov
dec
cld
fiadd
cmp
sbb
mov
test
test
imul
add
jno
add
fidiv
clc
mov
daa
sbb
xor
das
xchg
call
clc
jmp
xchg
adc
mov
adc
es
add
test
div
daa
pushf
dec
push
mov
mov
push
cmp
mov
xchg
cli
mov
out
retf
in
les
sub
xchg
dec
(bad)
jmp
cmp
loop
add
scas
xchg
pop
aaa
retf
dec
stc
mov
inc
js
out
mov
sub
mov
outs
scas
xchg
int3
adc
popf
push
mov
and
loope
jns
addr16
cwde
in
fsub
stos
cmps
inc
stos
or
sub
or
xrelease
int3
xor
cld
loope
shl
enter
ret
dec
push
or
xchg
lock
mov
jle
icebp
sbb
sub
dec
jle
or
push
xor
icebp
mov
test
inc
jmp
pop
push
movs
mov
xchg
or
add
sub
sub
popf
push
dec
popf
and
xchg
cmp
(bad)
out
cmps
xchg
dec
fld
in
(bad)
fild
iret
imul
jp
or
into
cmp
retf
mov
mov
stc
dec
icebp
sub
mov
ss
in
in
xchg
mov
add
xchg
xchg
mov
inc
or
inc
sub
outs
test
adc
xor
test
repz
shl
(bad)
enter
out
adc
cmp
sbb
or
aaa
(bad)
hlt
and
xor
aam
stos
push
xchg
xor
add
int
adc
addr16
fstp
sub
sahf
cmp
in
or
ds
(bad)
movs
mov
repz
fisub
mov
mov
rcr
arpl
fisttp
hlt
arpl
push
rol
xchg
jne
pop
jbe
adc
addr16
pmaxub
xchg
sbb
retf
rcl
imul
loopne
call
inc
ss
ret
mov
dec
jne
mov
sahf
(bad)
sar
mov
adc
mov
xor
mov
in
mov
mov
dec
fsqrt
mov
or
add
ss
cld
mov
push
add
xchg
loop
adc
inc
repz
ficomp
leave
sahf
dec
jmp
std
fwait
or
(bad)
and
xor
(bad)
int
push
into
shl
add
jmp
out
mov
add
jb
jnp
mov
icebp
inc
mov
push
mov
loopne
pop
push
or
dec
in
std
jns
xchg
mov
and
nop
(bad)
test
pop
(bad)
lods
(bad)
clc
or
and
int3
or
int3
mov
mov
xor
xor
cmp
js
push
call
jge
test
inc
and
dec
cmps
mov
jbe
mov
(bad)
stos
cs
add
in
aad
ficom
movs
shr
mov
or
cmps
test
nop
gs
mov
rcl
mov
inc
cmc
mov
push
retf
mov
in
into
mov
sbb
icebp
shr
jle
icebp
stc
cmp
pop
jne
ins
xor
pop
bound
push
(bad)
and
out
shl
jl
jbe
dec
fsub
pop
pop
clc
or
lock
or
(bad)
in
sbb
test
adc
cwde
dec
mov
shl
ficom
in
sar
and
ss
pop
mov
call
jl
test
and
inc
push
ja
das
int
xlat
outs
aam
arpl
jbe
push
sti
in
scas
shr
fst
sub
iret
mov
fcom
jb
loopne
ror
adc
jbe
sub
jp
inc
jne
mov
lock
stos
dec
mov
nop
lahf
pop
mov
loop
jmp
es
inc
imul
mov
(bad)
scas
push
lds
or
cmps
xor
or
add
or
gs
stos
and
sub
(bad)
les
in
dec
je
push
ins
popf
mov
jbe
fnstsw
rep
jns
call
pop
imul
cmp
push
sbb
push
xchg
jb
scas
das
in
inc
arpl
lahf
xchg
rcr
cld
mov
js
in
(bad)
paddd
sbb
dec
into
sbb
xchg
lods
cmp
retf
out
xor
das
repnz
jmp
and
out
int
gs
cmp
mov
cmc
add
sbb
fcmovnbe
cmc
(bad)
out
int3
xor
sbb
mov
(bad)
cli
stos
daa
and
push
fld
or
mov
mov
dec
loop
dec
adc
and
leave
xchg
jb
je
cmpps
fld
push
pusha
push
fwait
mov
ins
imul
pop
xchg
imul
jge
test
inc
pop
sbb
push
push
inc
mov
retf
mov
cli
sbb
and
dec
cmp
call
repnz
fnstenv
es
mov
mov
mov
mov
in
and
(bad)
fmul
popa
mov
add
add
cmp
jbe
mov
(bad)
push
sub
call
jle
stos
adc
repz
rcl
std
inc
mov
inc
jl
xchg
mov
repz
cdq
stos
movs
sub
mov
and
enter
xchg
hlt
xchg
push
and
ins
jge
sahf
adc
int3
dec
cmp
ss
(bad)
sti
mov
push
lock
cmp
ret
aas
pop
sbb
adc
or
mul
in
mov
xor
xchg
loop
jns
mov
cmp
call
scas
cmps
lea
adc
mov
xor
adc
fdivr
test
pop
popa
xor
sbb
push
pcmpeqd
imul
jmp
sbb
mov
fnstsw
and
fist
lahf
pop
jle
stos
or
inc
ja
jnp
mov
pop
cmps
mov
xchg
rol
pop
ins
iret
fmul
shr
cmp
or
fcmovu
rol
mov
repz
pop
jnp
into
xchg
into
and
adc
jg
sbb
stc
fwait
xlat
ror
(bad)
pop
adc
push
out
aas
and
sub
pop
push
js
push
jmp
aaa
inc
bound
push
adc
sbb
scas
gs
dec
mov
aam
push
xor
add
(bad)
cwde
lock
repz
(bad)
js
mov
pop
fld
or
push
cmps
or
jb
or
sahf
xor
test
push
xlat
pop
xchg
push
inc
loope
dec
inc
mov
hlt
inc
cmps
and
dec
(bad)
xor
sbb
outs
lods
bound
push
mov
loopne
push
adc
mov
test
mov
xor
sbb
cs
cmc
in
jns
shl
(bad)
stc
jne
cmp
adc
cmps
inc
pop
int
mov
mov
sbb
xchg
jge
or
fadd
lds
sub
and
pop
or
pop
jl
shr
mov
add
xchg
(bad)
aaa
imul
clc
movs
out
jmp
mov
cmp
mov
add
mov
sub
retf
and
out
cmps
push
sub
outs
lods
call
ins
jns
aad
push
add
jmp
repz
jb
scas
add
int3
fldenv
aaa
fldcw
stc
mov
in
add
xchg
inc
popf
mov
ins
mov
push
mov
xchg
mov
outs
sti
std
in
je
cmp
adc
xor
leave
xor
or
mov
push
cmp
(bad)
dec
sbb
popf
cs
fldenv
sbb
cld
stos
push
jmp
out
xor
adc
mov
xor
dec
xchg
pushf
xor
dec
fst
js
dec
sbb
cmps
popf
push
shl
pop
loope
int
inc
jmp
cmp
out
jo
repnz
sub
sbb
pop
mov
ret
cmp
in
cmp
(bad)
push
push
mov
mov
test
cmp
adc
add
sbb
inc
jbe
inc
push
add
adc
push
jecxz
std
rol
fld
and
sar
sbb
call
stos
lock
mov
mov
out
loope
scas
movs
push
repz
and
stos
repnz
lahf
mov
cli
and
fadd
(bad)
js
pushf
add
push
mov
xor
loopne
les
sub
xchg
in
dec
mov
and
or
sbb
fcomip
push
jno
pop
mov
push
add
mov
mov
(bad)
idiv
mov
out
cmc
fucomip
xchg
and
rcl
ss
in
push
jnp
mov
je
std
pop
add
cld
sbb
outs
jne
jmp
imul
xchg
adc
dec
mov
rcr
lea
cmp
inc
scas
in
mov
bndstx
ret
sar
leave
xor
sbb
mov
mov
xchg
call
mov
dec
push
jno
push
in
int
aam
call
rol
test
xchg
mov
mov
fs
mov
mov
cmc
call
and
js
mov
leave
mov
xchg
push
das
sub
sbb
adc
out
dec
xchg
jbe
and
push
loope
mov
jb
xchg
test
dec
pop
inc
xchg
stos
das
xor
(bad)
jmp
popf
int3
lock
or
jno
add
imul
ins
ds
push
pusha
xor
sbb
out
and
sub
outs
or
and
retf
jnp
jmp
rcl
js
pop
div
daa
retf
daa
fbld
xchg
sbb
dec
fwait
cs
lods
dec
clc
in
xlat
push
cmps
dec
aas
jecxz
fcmovne
loopne
mov
jecxz
sub
adc
cmp
mov
jne
rsqrtps
push
and
sub
sub
ret
sub
adc
push
xchg
cmp
loopne
mov
adc
inc
mov
jl
add
in
cmps
pusha
imul
mov
out
fst
les
mov
mov
movs
out
sub
aam
scas
jae
or
shl
gs
loop
(bad)
in
push
add
or
arpl
outs
mov
adc
inc
pop
mov
pop
addr16
stos
cwde
xchg
inc
stc
jle
in
test
test
jo
shl
pop
push
pop
push
ss
in
sbb
setne
mov
rcr
mov
or
jns
int3
fucomp
cmp
dec
dec
xchg
shl
jl
out
mov
xor
add
cmp
sbb
leave
data16
outs
inc
shl
in
mov
sbb
cmp
iret
cs
aam
movs
imul
mov
(bad)
inc
lods
cwde
and
jb
jecxz
call
mov
in
cmp
pop
push
xchg
add
dec
retf
mov
aas
mov
mov
jne
mov
cmp
mov
add
jmp
xor
out
sbb
mov
push
aad
push
fdiv
push
xlat
lods
inc
call
jge
lea
inc
add
sub
cli
and
test
mov
fwait
adc
mov
jmp
xor
jns
ficomp
(bad)
out
jnp
mov
je
or
mov
sbb
or
push
int3
jbe
mov
push
jnp
outs
mov
rcl
arpl
xchg
stos
pop
and
add
mov
js
div
scas
xor
sub
clc
jno
sbb
mov
bound
stc
dec
xchg
mov
loop
xor
add
mov
in
scas
jmp
stc
stos
mov
test
and
xchg
cmps
pop
cmps
das
popf
inc
retf
outs
mov
xor
mov
mov
(bad)
xor
dec
jecxz
mov
retf
(bad)
icebp
retf
jmp
cwde
bound
(bad)
pushf
stos
mov
xor
inc
je
inc
in
shr
jecxz
call
adc
pop
mov
mov
repnz
mov
(bad)
adc
sbb
push
add
fist
jae
or
push
push
fwait
mov
cmp
cs
mov
add
jge
inc
mov
push
retf
sahf
cvtps2pi
in
fwait
cmps
sub
mov
or
add
mov
sbb
dec
mov
dec
ficomp
or
mov
sub
dec
xor
out
jmp
shr
and
pop
ds
int
arpl
or
sbb
inc
xchg
mov
fild
cmc
xor
out
adc
pop
dec
mov
jae
dec
shr
imul
sbb
dec
ret
ja
pop
test
xlat
xchg
jmp
pop
shl
cmp
and
(bad)
fnstenv
mov
aad
add
cwde
and
rcr
push
daa
mov
es
push
inc
mov
or
push
cmp
(bad)
cld
sbb
adc
pop
jecxz
loopne
lds
div
je
and
(bad)
ficomp
xchg
add
xchg
(bad)
fwait
sub
test
dec
das
cmp
cmp
movs
pop
jl
fidiv
jnp
(bad)
cmp
inc
out
aam
ds
jmp
bound
mov
clc
in
and
das
fadd
xchg
push
adc
pop
dec
shr
pushf
out
push
sbb
das
stos
xor
or
dec
fstp
xor
loop
lea
pop
(bad)
scas
pop
fnstenv
cmps
pop
pop
hlt
and
inc
aad
adc
rol
jl
movs
mov
jge
sub
stos
out
mov
push
retf
sbb
cdq
sar
mov
sti
pop
mov
loop
loop
adc
mov
xchg
jle
rcl
add
push
loopne
cmp
gs
dec
and
ins
lock
xchg
(bad)
daa
inc
jg
fbld
sbb
(bad)
lods
sbb
cmps
out
pop
sub
cmp
dec
dec
popa
inc
sbb
add
dec
push
inc
adc
mov
dec
pusha
jo
mov
xor
js
outs
lock
outs
int3
pop
test
cld
xor
jb
iret
xchg
mov
loopne
add
daa
cmps
test
push
test
pop
mov
call
xchg
xor
mov
test
(bad)
popf
nop
dec
adc
cdq
push
jnp
retf
retf
cmp
int3
popa
cmp
push
ret
xchg
movs
sub
or
pop
mov
inc
and
inc
jb
mov
mov
iret
adc
xchg
out
sar
jmp
mov
lods
js
div
popa
stos
std
and
cmp
sbb
inc
and
sub
sbb
mov
add
fwait
lds
jle
mov
pop
mul
hlt
sub
xor
shl
enter
or
sub
xchg
cmp
aaa
dec
sbb
mov
pop
les
push
mov
inc
xchg
bound
in
inc
push
xor
les
mov
(bad)
mov
lods
push
mov
clc
mov
mov
stc
jno
push
not
jl
test
or
cmp
sub
aaa
fistp
pop
sahf
enter
jne
xor
fst
lds
dec
dec
ds
jbe
loopne
mov
stc
and
fnsave
xchg
movs
xor
jbe
arpl
add
or
cmp
je
int
fisub
dec
cmp
pop
ret
nop
(bad)
(bad)
mov
jg
adc
in
pop
or
mov
repz
sub
sahf
jmp
pop
jno
sub
mov
out
es
jle
push
mov
fwait
xor
out
push
aas
into
outs
push
jp
popf
cmc
hlt
mov
pop
shr
js
push
fadd
xor
jns
loopne
and
cmp
mov
fistp
call
xchg
sub
xor
pop
in
push
jmp
ret
test
call
dec
pop
xchg
lahf
push
push
xor
(bad)
es
cmps
repnz
cmp
mov
add
sub
enter
sbb
xor
xor
(bad)
call
mov
idiv
mov
aas
std
add
and
inc
or
push
dec
je
add
mov
in
shr
cdq
xchg
inc
sbb
adc
idiv
icebp
sbb
stc
dec
addr16
leave
mov
daa
xchg
mov
aam
adc
ret
mov
push
call
mov
(bad)
inc
add
jecxz
jbe
sub
push
xor
xchg
sub
cld
push
out
add
adc
xchg
sbb
jo
push
xor
jo
inc
mov
mov
dec
jne
jmp
mov
push
aas
shr
retf
xor
mov
jbe
outs
xor
push
ret
pop
arpl
shr
pop
mov
shl
sub
inc
xor
jmp
jo
(bad)
push
in
jg
xor
enter
mov
pop
or
in
dec
pop
sbb
mov
push
or
mov
sub
call
cmp
aad
mov
jnp
imul
js
jl
lods
scas
pop
add
stos
jno
out
ror
gs
or
mov
pop
inc
add
lea
adc
in
sub
dec
(bad)
mov
int3
(bad)
stos
inc
es
push
push
xlat
pop
inc
jb
add
add
mov
(bad)
xchg
mov
jg
push
dec
add
jbe
adc
cwde
popa
or
mov
out
iret
loop
popa
inc
jl
xchg
push
scas
nop
(bad)
dec
mov
fiadd
js
cmc
js
dec
mov
inc
push
movs
jne
daa
adc
ret
sbb
dec
add
pusha
jl
add
inc
xchg
or
dec
(bad)
adc
fs
loop
xor
mov
stos
cmps
lea
ds
movs
(bad)
sub
fwait
push
push
push
rcl
rol
enter
ret
aaa
push
shl
in
jl
mov
pop
dec
jbe
mov
pop
pop
adc
mov
lock
xor
std
(bad)
mov
dec
sti
sub
cld
int3
push
fwait
inc
jp
add
or
fidiv
mov
xchg
repnz
jg
loopne
cmp
cmps
or
mov
lahf
push
es
or
mov
xchg
push
cmps
fwait
inc
lock
jb
jle
ds
ret
fld
sbb
nop
or
popf
sbb
jp
lods
add
popa
test
pextrw
add
lahf
xor
cmc
in
adc
add
imul
xor
or
icebp
lods
loopne
mov
mov
xchg
punpckldq
fcomp
cmp
mov
mov
(bad)
aas
mov
out
test
out
shl
call
in
adc
cs
sbb
push
mov
into
outs
mov
push
cmp
scas
fdivrp
fisttp
mov
and
pop
pop
jl
or
mov
inc
xchg
push
out
loope
cmps
jecxz
cmp
(bad)
sub
mov
psubb
lahf
or
xchg
adc
push
cmp
cmp
jge
jge
call
ins
repz
jle
dec
iret
std
push
push
ror
jo
retf
int3
inc
xchg
movs
or
or
out
mov
mov
and
cmc
mov
mov
iret
out
cli
mov
pop
stc
bound
mov
pop
out
retf
das
int
dec
repnz
adc
mov
pop
dec
mov
mov
aad
push
cmp
mov
mov
xchg
push
xchg
xor
ret
xor
cli
mov
dec
inc
jmp
jo
test
fstp
ins
in
pop
mov
sbb
inc
xchg
mov
jle
dec
leave
mov
imul
cmp
(bad)
loop
xor
imul
pop
pop
pop
xlat
out
and
retf
mov
out
stc
out
sub
and
jns
retf
(bad)
cmps
pop
in
cmp
rcpps
mov
jle
cmp
test
or
cs
xor
das
es
clc
sub
(bad)
cmp
mov
mov
outs
out
xchg
jbe
push
fs
xor
repnz
inc
pushf
cmps
(bad)
pop
leave
mov
ret
rcl
je
push
aas
mov
sub
add
push
ret
pop
mov
retf
test
popf
idiv
das
je
adc
jl
jns
(bad)
test
out
jb
xchg
int3
dec
retf
ins
gs
call
push
xchg
sub
fcmovnu
mov
cmp
cs
mov
cdq
jge
push
mov
jge
in
jno
bound
(bad)
inc
fcomp
jno
xchg
xchg
dec
test
dec
pop
push
mov
sahf
or
mov
shl
push
pop
add
mov
outs
retf
pop
rol
inc
push
cmp
out
adc
mov
test
in
mov
inc
sub
push
clc
pop
add
idiv
mov
jle
stos
xchg
(bad)
(bad)
fsubr
jg
mov
fild
in
fild
cmp
or
wrmsr
mov
pop
and
mov
fldcw
cli
leave
lods
mov
es
rcl
xor
out
(bad)
mov
int3
sub
icebp
int
mov
push
lods
ret
xor
mov
mov
adc
cdq
fbld
(bad)
jmp
repnz
xchg
pop
in
inc
inc
pop
jle
aam
jp
jp
mov
cmp
mov
imul
jnp
aam
adc
cmp
xchg
sbb
in
jp
jb
jb
dec
push
dec
les
jb
mov
stos
mov
in
(bad)
scas
add
or
adc
or
mov
jecxz
cmp
ds
std
(bad)
jns
(bad)
jns
push
repnz
adc
jle
std
add
push
add
icebp
aas
data16
xor
mov
int
adc
fldcw
(bad)
pop
cwde
into
inc
mov
dec
jmp
mov
add
jne
dec
jbe
stc
les
repz
push
je
push
push
enter
or
shr
cdq
movs
mov
out
xor
stos
rol
icebp
js
sbb
jnp
push
push
leave
in
jge
(bad)
fidiv
or
push
(bad)
out
imul
mov
sub
push
jle
mov
leave
dec
xchg
jo
(bad)
lods
pusha
loopne
daa
sbb
sbb
add
ss
(bad)
cmps
fst
icebp
jle
fnop
data16
xor
push
or
(bad)
cli
dec
inc
pushf
dec
fldenv
es
dec
jbe
mov
sbb
nop
or
loopne
add
mov
xchg
xor
out
or
mov
int
jne
stos
scas
aad
mov
xchg
push
retf
inc
outs
push
push
and
pop
dec
test
in
add
popa
mov
cs
xchg
jge
inc
xor
add
dec
aas
pop
or
add
sub
fldenv
push
dec
cmp
icebp
movs
cmps
inc
cwde
adc
loop
push
jns
sub
push
outs
mov
and
dec
push
inc
cmp
ss
pop
aam
pop
jmp
pop
(bad)
call
sub
xchg
cdq
push
leave
mov
push
lods
mov
push
call
jg
fidiv
clc
add
and
or
stc
(bad)
sahf
out
cs
pop
dec
and
add
femms
das
test
cmps
(bad)
(bad)
fiadd
scas
dec
and
ficom
mov
xchg
xor
fcomp
mov
cmps
xor
xchg
jecxz
pop
jo
(bad)
jp
adc
xchg
mov
dec
in
nop
mov
hlt
mov
cmp
push
xchg
sub
retf
jmp
mov
sti
push
jno
scas
xchg
out
cmps
inc
stc
adc
sbb
mov
pusha
jbe
or
or
dec
outs
pop
push
mov
adc
mov
mov
pushf
mov
jl
mov
mov
push
xchg
mov
adc
dec
sbb
cwde
cmp
sbb
clc
mov
scas
ds
sbb
push
arpl
call
jbe
retf
lock
call
es
std
mov
sahf
(bad)
rcr
lods
mov
das
leave
or
(bad)
mov
sar
jne
movs
xor
(bad)
in
add
(bad)
sbb
add
imul
loope
cmps
sbb
jge
push
cmp
imul
outs
bound
retf
in
cdq
(bad)
hlt
cmc
call
mov
xchg
pop
div
aas
jae
inc
(bad)
in
push
mov
ja
enter
push
push
aad
mov
jmp
jge
push
call
stos
push
popa
int3
or
out
add
icebp
test
retf
(bad)
cmp
push
(bad)
adc
(bad)
mov
stos
jne
or
fdiv
in
cdq
jecxz
jecxz
and
popf
repnz
scas
and
(bad)
cld
stos
pop
cmc
rcl
push
aam
sti
xchg
clc
sbb
lods
and
loopne
sbb
jo
sbb
inc
es
inc
inc
mov
push
mov
lods
add
setae
scas
cmp
in
test
push
adc
xor
std
mov
mov
mov
pop
and
in
fs
stc
sbb
test
cmp
loop
ins
iret
mov
jg
mov
mul
sub
fstp
mov
pop
ret
ins
pushf
retf
dec
scas
mov
outs
sub
inc
pop
xchg
(bad)
lea
int3
pop
rol
fucomi
pop
sub
lods
fcom
data16
pop
int
int3
jg
retf
mov
fdiv
stos
xchg
sbb
pop
cli
mov
mov
cmp
popf
pusha
mov
inc
imul
xlat
fcmove
xor
push
cmps
mov
cdq
xchg
pop
xchg
sub
aam
das
mov
int
out
xor
add
retf
je
cld
imul
lods
stos
push
test
out
cs
repnz
stos
mov
loope
xchg
mov
xor
leave
add
aas
mov
cmp
adc
ret
inc
jns
pop
mul
mov
popa
inc
test
pinsrw
sbb
push
inc
push
(bad)
(bad)
cmc
fdiv
jne
pushf
enter
loope
test
xchg
jp
xchg
inc
pusha
sbb
add
mov
xlat
xchg
mov
push
lods
mov
out
add
xchg
adc
outs
movs
and
or
and
aam
sbb
outs
hlt
fucom
cld
push
(bad)
mov
adc
and
mov
mov
pop
pop
mov
xchg
sub
sbb
adc
sbb
sub
mov
and
jl
js
loop
xor
(bad)
sbb
inc
pop
xchg
mov
push
xor
sbb
std
jp
cmps
mov
int3
sub
in
lods
inc
popa
gs
in
pusha
pop
adc
pop
sbb
sub
ins
outs
push
add
inc
dec
sub
fxch
pop
scas
les
inc
inc
and
shl
mov
inc
dec
push
pop
imul
jge
hlt
iret
jo
jl
jge
int
scas
lods
hlt
push
(bad)
fiadd
fwait
sbb
and
es
fwait
add
push
scas
daa
fwait
sbb
jg
lea
push
jo
popa
test
fdivr
dec
pop
sub
(bad)
mov
imul
inc
dec
sahf
mov
push
(bad)
mov
ja
ror
or
int
xchg
or
rcl
and
pusha
inc
sbb
adc
mov
(bad)
mov
and
xchg
(bad)
outs
xchg
imul
sbb
sar
push
adc
aas
dec
(bad)
jl
xchg
sub
push
jp
mov
sbb
(bad)
cmps
lea
movs
cmp
ins
call
lea
xor
(bad)
xor
jg
je
inc
std
dec
push
pop
sti
jg
and
jnp
aam
cmps
adc
int
dec
scas
mov
mov
aad
mul
fdiv
jge
enter
mov
test
or
fdivr
xor
pop
push
pop
mov
inc
adc
push
cs
(bad)
pop
cmps
adc
jno
or
mov
test
cdq
mov
xor
xchg
add
xchg
inc
(bad)
idiv
add
bound
je
ror
in
loope
mov
or
jno
ss
mov
adc
pop
add
push
sbb
sub
fcomi
rcr
sbb
out
test
xchg
mov
xor
add
or
sbb
call
pop
out
inc
mov
push
and
mul
jecxz
jecxz
cmp
inc
cmc
jb
and
frstor
or
add
xor
outs
int
push
xor
mov
(bad)
rol
jb
dec
and
add
retf
jmp
ss
dec
ret
pop
cmp
mov
mov
xor
mov
out
hlt
scas
fld
jbe
cmp
test
sbb
mov
jb
addr16
inc
sub
mov
test
fild
in
jle
popf
or
hlt
rcl
lea
xor
jmp
sub
js
rcr
movs
in
stc
sub
xor
jbe
cmps
cmp
out
jecxz
inc
cmp
movs
adc
iret
xlat
add
or
sbb
ss
dec
psrld
push
ret
add
outs
dec
xchg
arpl
push
dec
sbb
pop
outs
push
mov
jle
or
cmp
xchg
pop
aam
xor
lock
dec
xor
xchg
mov
or
push
call
xchg
add
add
inc
fld
imul
xor
daa
nop
add
cmp
popf
rcr
loop
jge
dec
mov
cmp
add
push
outs
popf
aad
lods
jp
or
imul
xor
mov
sub
sub
bound
push
push
cmp
xor
lods
sub
fs
ins
sbb
inc
cmp
sub
or
movs
out
dec
sub
add
xchg
sub
test
xchg
add
mov
stc
inc
mov
xchg
pop
push
ret
xchg
push
fisubr
xchg
shl
pop
loope
or
rcr
ins
ins
data16
stos
aad
fidiv
pop
push
rcl
out
stc
adc
cmp
lock
add
xor
(bad)
jp
outs
mov
sub
push
aad
dec
rcr
dec
and
mov
jg
loope
and
fmul
xor
push
(bad)
cmp
and
int3
xor
lds
jecxz
inc
stc
mov
pop
mov
pushf
aaa
push
jmp
push
addr16
and
test
lock
mov
sbb
push
dec
outs
popf
lahf
push
daa
mov
inc
cmp
aad
call
and
xchg
sbb
aam
cmps
add
cmp
fsub
push
std
sbb
clc
mov
xor
push
xchg
adc
fild
loope
loop
popa
fmul
sbb
add
jp
jmp
lahf
sahf
xchg
sbb
loop
xchg
loopne
std
imul
and
mov
lods
mov
ins
sbb
jno
mov
adc
dec
hlt
push
jns
push
xchg
into
icebp
add
fbld
nop
pop
rcr
adc
outs
fs
rcl
in
jae
ss
add
xchg
arpl
imul
pop
jne
gs
rol
hlt
xchg
pusha
in
xchg
add
and
in
movs
lds
cmp
lea
daa
xchg
test
pop
push
in
mov
sub
inc
dec
test
(bad)
mov
movs
mov
rcr
call
lock
and
in
outs
ret
adc
mov
ret
sti
mov
movs
sub
test
adc
lods
xor
sub
icebp
jne
shl
jmp
and
xchg
mov
pop
mov
xchg
dec
popf
adc
out
and
(bad)
inc
adc
fisub
aad
jb
jmp
inc
mov
sti
fcomp
mov
les
(bad)
cdq
push
or
pusha
jne
ret
scas
and
xchg
lods
xchg
stos
sub
hlt
add
fld
mov
iret
cdq
jecxz
out
ins
cmps
dec
mov
jecxz
push
adc
fimul
inc
add
ins
outs
mov
mov
repnz
adc
pop
adc
inc
sub
push
xor
je
adc
test
lods
pop
push
xchg
lds
add
(bad)
fisubr
cmps
lods
aam
lds
inc
cmp
jmp
fidivr
int3
mov
cmp
sar
dec
repz
mov
xor
sub
jno
pop
call
sbb
(bad)
sahf
arpl
push
adc
mov
mov
dec
pop
loope
mov
popa
pop
jnp
jo
mov
xchg
idiv
faddp
xor
sbb
sbb
mov
mov
retf
sub
gs
hlt
call
(bad)
and
test
(bad)
sub
add
mov
xor
pop
add
out
xor
jecxz
or
lahf
cli
cmp
shl
adc
dec
add
das
mov
push
xor
or
call
ss
pushf
dec
arpl
adc
stos
inc
and
xor
dec
pop
rol
mov
cmp
add
ds
mov
pop
ins
neg
or
(bad)
pushf
push
xor
sub
(bad)
adc
xor
ret
in
(bad)
push
or
push
inc
repz
fidiv
stc
push
addr16
js
lds
pop
adc
sbb
sti
hlt
or
ret
(bad)
bound
mov
or
jle
(bad)
cmp
jge
loope
inc
nop
add
push
int
push
in
test
out
cmp
fldcw
add
xchg
aad
outs
sub
bound
ret
or
and
dec
cmp
pop
adc
retf
ror
call
ja
inc
mov
pop
lahf
cwde
mov
gs
sbb
jecxz
fwait
sub
es
lea
mov
dec
push
retf
inc
xchg
jns
push
inc
sahf
sti
push
mov
cli
cs
pop
dec
cmp
popa
fmul
adc
leave
bound
mov
popa
pop
stos
fnstenv
push
or
ret
retf
and
jns
and
cmp
sbb
rol
aaa
xchg
je
call
jp
sahf
mov
jbe
xlat
cmp
adc
xor
retf
push
pushf
ja
es
popf
mov
bnd
xor
(bad)
xchg
inc
js
sub
call
pop
(bad)
jmp
addr16
pop
xchg
push
das
pop
fnstsw
ds
stc
fstp
mov
and
xchg
xor
or
ins
add
pop
test
xor
xchg
retf
setnp
mov
(bad)
bound
enter
jbe
mov
out
hlt
int3
inc
inc
mov
xor
test
scas
adc
xor
adc
push
and
nop
stos
stc
(bad)
mov
enter
xlat
stos
dec
mov
inc
in
fwait
and
loope
mov
sbb
pop
mov
cmp
mov
ror
mov
pop
pop
dec
ret
push
xchg
inc
adc
outs
sbb
popa
cmps
cmp
sbb
mov
sub
fstp
cmp
in
pop
cdq
cmp
imul
xor
retf
cmp
pop
xor
cld
pop
inc
mov
push
jle
pop
adc
iret
sbb
stc
mov
jg
rcr
push
mov
xor
mov
xchg
mov
adc
add
xlat
mov
fdiv
mov
jno
or
data16
xchg
das
test
dec
outs
sub
xchg
fcomp
cli
push
mov
mov
in
jne
aas
outs
xchg
add
idiv
call
sbb
jno
push
mov
sbb
rcl
mov
jno
clc
ret
cwde
inc
lds
fstp
xor
xor
jg
out
sub
and
push
bound
push
jmp
pop
adc
add
push
jle
ja
or
test
pop
adc
shl
and
inc
lods
adc
sar
or
mul
lods
mov
out
(bad)
into
dec
jg
jge
ins
cs
(bad)
push
pushf
adc
add
inc
iret
mov
loopne
sbb
push
in
pop
push
pusha
outs
shl
inc
xchg
stc
shr
fisub
adc
jge
ret
sbb
or
sbb
inc
test
es
push
fld
add
std
push
mov
push
lahf
pop
cmp
sahf
inc
jno
(bad)
pop
fcomip
mov
mov
sbb
leave
(bad)
jns
das
ja
retf
sub
sub
pop
add
dec
(bad)
pop
cli
mov
push
pop
fs
(bad)
mov
repz
add
retf
(bad)
imul
push
xchg
add
mov
or
jp
pop
sub
xchg
adc
jne
ins
dec
dec
sub
jae
(bad)
(bad)
aam
aaa
xchg
jg
and
jnp
jg
sbb
test
and
enter
cmp
sub
or
out
cmp
cs
call
mov
je
push
cmp
cmps
dec
sbb
jmp
pop
inc
retf
push
daa
cld
pusha
sbb
lahf
retf
ror
cmp
cmp
fidivr
mov
cmps
mov
mov
jmp
shl
imul
and
shr
data16
add
inc
scas
push
jmp
sub
mov
shl
mov
jnp
pop
mov
inc
int
inc
adc
mov
mov
or
push
int
push
daa
bound
ror
or
or
cmp
adc
bound
xchg
out
mov
xchg
outs
pop
mov
aas
pusha
cdq
je
and
pop
jge
mov
sbb
and
mov
leave
push
sahf
out
sub
jns
and
pop
lea
push
cmps
int3
ja
jecxz
popf
jne
pop
lods
popf
(bad)
push
xor
std
fisubr
int3
adc
cmp
and
mov
iret
dec
js
pusha
(bad)
xchg
cmp
rcr
and
sub
dec
jnp
adc
stos
sub
clc
test
inc
test
inc
adc
xor
cdq
adc
xor
inc
iret
rol
xchg
les
nop
and
nop
push
bound
pop
dec
pusha
or
sahf
push
(bad)
sbb
sub
or
or
mov
icebp
ins
test
xchg
cmp
or
cs
mov
rcl
out
cmps
jl
daa
push
and
shl
sbb
shl
out
dec
mov
aaa
push
xor
ss
repnz
sbb
cmp
or
add
cmp
int
inc
push
jnp
xchg
mov
stos
xchg
cmps
ret
jecxz
fdiv
out
pop
pop
xchg
leave
iret
cmp
sub
inc
adc
call
mov
mov
and
or
adc
jnp
lahf
sub
mov
or
xor
mov
mov
pusha
mov
(bad)
jmp
cli
ins
push
ins
mov
mov
in
movs
add
test
mov
test
adc
fild
addr16
push
mov
je
neg
pushw
imul
popa
call
int
cmps
add
dec
lods
arpl
(bad)
outs
jmp
loope
hlt
jnp
loop
inc
cld
jmp
inc
cwde
jbe
xor
call
dec
adc
loop
pop
sub
int
adc
add
rol
adc
add
test
lods
in
or
cmps
test
dec
fdiv
xchg
mov
cmp
test
jmp
jae
outs
(bad)
sbb
xor
xlat
jno
dec
repnz
outs
push
jns
stos
push
into
(bad)
stc
movsx
dec
mov
scas
mov
ds
pop
das
shl
repz
bound
and
shr
movs
and
dec
shl
pop
test
xchg
sub
mov
cmp
cdq
mov
dec
or
jmp
mov
std
ret
jmp
mov
adc
sbb
jb
scas
xor
outs
(bad)
mov
add
mov
dec
mov
xchg
xchg
mov
call
mov
imul
sbb
push
js
dec
dec
(bad)
jne
mov
imul
in
addr16
ja
pop
ds
xor
inc
sbb
imul
inc
sbb
jge
xchg
mov
mov
std
cmp
sbb
repz
xor
cmp
jns
mov
cld
ins
adc
iret
push
call
out
icebp
pop
push
sub
nop
pop
xchg
push
and
or
sub
(bad)
and
pop
mov
out
jg
mul
fild
sbb
test
hlt
xchg
sti
mov
push
test
inc
in
in
inc
rcr
mov
mov
ds
xchg
mov
mov
push
aaa
mov
mov
not
jp
in
ins
jle
fidiv
dec
sbb
sar
aad
(bad)
in
call
adc
iret
or
repnz
pop
shr
rcr
or
push
xor
fs
cmp
cwde
sbb
hlt
clc
fnstcw
xor
cmp
fld
cmp
xchg
jecxz
add
mov
fld
out
push
lock
xchg
and
lods
test
jnp
xchg
ret
push
ud2
push
outs
addr16
inc
xchg
sub
aaa
loop
or
shl
mov
dec
shl
std
and
arpl
call
cld
pop
mov
and
pushf
sbb
sub
adc
std
pop
add
es
(bad)
pop
adc
out
fisttp
ja
dec
bound
loopne
xchg
int3
scas
test
int
mov
aam
mov
sbb
mov
in
retf
adc
imul
mov
cmp
xor
mov
cdq
mov
int
mov
mov
adc
aad
stos
movs
xchg
pop
call
int
mov
pushf
popf
adc
and
popf
js
dec
outs
cmp
add
jecxz
es
pop
shl
shl
or
xor
adc
jl
sbb
add
push
cmp
mov
mov
imul
and
add
or
fadd
stc
pop
and
das
and
inc
push
jnp
(bad)
adc
ret
xchg
test
mov
enter
add
push
loop
pop
cmp
sbb
ds
fistp
stos
push
out
and
xor
rcr
push
imul
sub
mov
mov
scas
fcom
shl
inc
movs
fcom
jne
les
fist
xchg
mov
or
aas
mov
sbb
cwde
mov
(bad)
js
pop
repz
repnz
xchg
cld
add
cwde
adc
mov
mov
bound
outs
mov
lods
in
sbb
inc
push
imul
sbb
and
mov
dec
call
add
xchg
data16
pop
leave
pop
jbe
jbe
gs
gs
xchg
loope
pop
loop
push
mov
jo
lahf
and
mov
mov
adc
cmp
pop
aam
es
out
and
mov
sbb
jmp
push
cmps
fild
push
iret
jne
cs
push
aad
cdq
(bad)
sbb
push
and
jnp
nop
or
mov
imul
jns
push
jne
xor
sbb
push
or
movs
mov
xchg
jg
push
push
jecxz
call
scas
xor
arpl
dec
sbb
(bad)
jno
xor
cmp
ror
add
js
out
jl
xor
mov
push
ja
adc
int
cmps
cmp
and
push
lods
lock
imul
loopne
or
pop
ret
(bad)
pop
imul
jecxz
adc
jns
push
mov
outs
jmp
retf
out
push
aam
stos
ror
sub
sbb
jns
and
push
pop
in
mov
jnp
int3
shl
jmp
mov
test
or
cld
and
jle
mov
push
xchg
in
inc
push
mov
push
js
jge
sbb
mov
mov
or
sub
mov
push
or
mov
mov
addr16
ja
stos
ret
mov
pop
jo
test
sbb
adc
mov
stos
std
pop
jnp
xlat
mov
and
jbe
mov
push
mov
sub
mov
pop
(bad)
movs
retf
fist
enter
fcomp
or
mov
push
fwait
ret
loopne
or
sbb
mov
mov
cmc
arpl
xchg
and
popa
or
add
jne
xchg
inc
sti
inc
call
cs
jmp
mov
clc
mov
pop
sbb
or
xchg
loopne
cld
cmps
mov
les
mov
xor
sub
mov
inc
fdivr
pop
sub
movs
mov
arpl
mov
rol
and
call
into
cmp
arpl
out
sub
aas
hlt
out
ss
out
xor
sub
sub
and
scas
loope
mov
and
mov
jbe
call
jl
ins
call
lahf
test
aad
pop
out
popa
cmc
(bad)
xchg
mov
pushf
out
and
adc
test
loope
ror
cmp
nop
ret
cmp
pop
das
cmps
arpl
loopne
sbb
fsub
shl
fbld
push
jle
outs
mov
nop
sub
out
xor
imul
leave
mov
mov
ins
arpl
cwde
and
bound
mov
sbb
push
push
pop
jns
nop
mul
(bad)
dec
sbb
push
shl
shl
fimul
inc
jmp
stc
mov
test
jns
imul
(bad)
gs
adc
lea
mov
(bad)
lods
mov
and
in
pop
mov
shr
xchg
mov
enter
and
mov
mov
mov
xchg
ss
in
sub
mov
cwde
cmps
cmp
push
mov
rcr
and
sub
out
pop
jge
leave
fadd
std
scas
dec
je
cmp
sub
cli
xlat
inc
inc
in
in
out
gs
dec
inc
dec
add
and
cmp
sub
div
dec
sub
jns
ret
ins
jne
dec
pop
mov
add
sub
jp
add
mov
cmc
xsavec
jecxz
pop
cwde
dec
mov
fidiv
and
mov
in
jg
cmc
(bad)
pop
shl
push
fcom
push
pop
(bad)
into
pop
sub
outs
mov
int
(bad)
fucomp
(bad)
popf
pop
jnp
adc
cmps
lea
js
ja
cmp
fdiv
fnstenv
in
(bad)
fstp
retf
mov
(bad)
pop
in
les
jp
mov
inc
add
and
rcl
cmp
jmp
scas
xor
xor
adc
lock
mov
sbb
jle
data16
push
push
push
iret
jmp
pop
jb
jae
and
jle
push
sbb
aas
push
pop
and
jmp
(bad)
retf
leave
mov
loopne
dec
sahf
bound
mov
xchg
push
inc
in
lods
inc
or
jmp
add
popa
movs
loopne
cmp
arpl
das
add
adc
mov
into
or
popa
lea
adc
and
jae
mov
daa
pop
shr
mov
pop
or
sahf
js
clc
fst
fcmovb
out
mov
xchg
jle
retf
into
fild
icebp
push
bound
sub
dec
or
jns
popa
dec
cmc
or
xchg
pop
sbb
xchg
movs
jecxz
in
add
sahf
imul
stos
mov
jmp
scas
push
repnz
xor
dec
push
out
dec
fs
icebp
dec
icebp
ds
fwait
mov
pusha
mov
and
ins
sar
imul
mov
xchg
sub
js
aam
inc
imul
dec
dec
jnp
adc
xor
test
inc
jae
adc
mov
push
and
stc
inc
loope
push
dec
js
pop
inc
fwait
mov
cmps
stos
inc
outs
into
int
mov
xor
call
ficom
or
mov
or
mov
push
fdivr
stos
lds
adc
ins
pop
iret
leave
fsubr
adc
mov
add
(bad)
mov
das
neg
and
push
sub
cmp
xor
jge
and
sub
stc
call
xor
push
cli
cli
xlat
xor
icebp
(bad)
jp
jmp
in
add
cdq
cmp
stos
popa
or
mov
xor
(bad)
loopne
repnz
jnp
dec
out
test
popa
ror
test
pop
dec
outs
jo
mov
push
pop
fcmovb
pop
cmc
and
jo
jb
into
out
popf
xor
and
stc
aas
hlt
xchg
push
nop
js
or
fild
mov
repnz
out
div
test
push
mov
sub
xchg
movs
retf
adc
dec
sub
ret
cmp
gs
lods
jae
mov
pusha
leave
call
dec
and
jnp
xchg
bound
inc
call
out
stos
cmp
imul
inc
dec
movs
cdq
ins
cmp
jnp
pop
mov
enter
add
inc
xor
test
fmul
cwde
fisubr
mov
movs
call
cli
test
pop
pop
(bad)
mov
xor
in
pop
mov
test
mov
sub
sub
icebp
retf
mov
mov
cmp
dec
xchg
gs
mov
in
idiv
mov
cmp
sti
sbb
gs
(bad)
ja
jge
and
imul
repz
or
rcl
and
mov
and
sub
ror
popf
xchg
lods
ret
cmps
dec
icebp
stos
ins
sar
inc
aam
cmp
stos
lods
daa
adc
fs
test
push
pop
mov
das
and
stos
xchg
addr16
jl
iret
push
dec
push
scas
lock
jl
icebp
rcr
(bad)
sti
sub
inc
and
or
inc
int
xchg
loope
ret
pop
scas
jns
inc
push
xor
xchg
cmps
in
or
scas
aad
imul
loop
loop
sbb
push
mov
adc
test
retf
(bad)
cs
repz
push
mov
mov
dec
sub
popf
es
jnp
add
sbb
cmp
je
jmp
pushf
adc
jae
popf
stos
xchg
test
cmp
jl
xor
fldcw
sub
push
pop
adc
pop
fild
mov
rcr
or
and
loope
push
in
xor
iret
jle
xchg
adc
repz
inc
jns
dec
push
ficom
fst
scas
mov
in
fdiv
bound
sub
adc
aad
inc
push
jae
pop
xor
cld
imul
enter
xor
jecxz
xchg
call
test
push
push
cmp
scas
inc
sub
frstor
push
mov
leave
mov
add
push
xchg
das
lods
xchg
not
cmp
cmp
(bad)
retf
dec
ja
ds
(bad)
push
leave
push
jmp
dec
add
movs
loopne
cdq
(bad)
mov
pop
cli
and
push
aad
jne
sbb
push
adc
mov
ins
pop
int
dec
vandnps
movs
repnz
mov
sub
out
pushf
ja
je
popf
jmp
pop
push
js
in
test
jl
es
stos
addr16
push
rol
mov
fisubr
not
shl
out
out
data16
lods
repz
and
cmp
loopne
pop
pop
sbb
inc
retf
push
mov
imul
es
sti
dec
sub
leave
ret
cli
std
xlat
jge
sbb
cld
push
dec
not
aad
cwde
pop
inc
mov
xchg
aad
mov
mov
mov
test
ror
xor
inc
inc
xchg
les
jb
test
inc
or
pop
jl
sahf
cmp
pop
shl
into
sub
outs
and
data16
dec
leave
adc
xchg
repnz
and
inc
icebp
sub
and
icebp
fnstenv
mov
add
push
and
xor
xor
xor
cmp
arpl
in
in
(bad)
jecxz
arpl
cld
xchg
js
ficomp
cmps
std
cmp
jae
push
pop
sub
xchg
pop
mov
or
cwde
cmp
inc
js
jp
xor
test
inc
jne
mov
std
out
lea
sahf
fsubr
aas
loopne
jo
cmp
jo
xor
shr
mov
pusha
retf
push
outs
les
pop
jae
outs
scas
rcr
test
xor
lock
dec
enter
sahf
popa
inc
jae
sahf
jge
and
hlt
jg
ret
js
adc
divps
sub
adc
push
icebp
aas
xchg
xchg
movs
adc
ja
bound
ins
int3
sub
outs
push
mov
push
out
xchg
jne
enter
jmp
sbb
adc
jae
dec
and
cwde
popa
call
mov
sub
jge
adc
ror
inc
sub
les
je
push
scas
or
sub
idiv
sub
cli
xlat
mov
adc
xchg
jp
pop
sar
pushf
inc
sub
xchg
imul
xchg
fild
cli
xchg
push
mov
ror
mov
mov
jae
mov
inc
dec
(bad)
loope
cld
and
ffreep
xor
and
aaa
(bad)
xchg
lock
and
adc
enter
lods
or
inc
fst
and
mov
or
pushf
ins
mov
mov
movs
arpl
push
fiadd
clc
arpl
and
mul
jnp
hlt
lea
lock
call
bound
sub
jo
adc
mov
xchg
inc
mov
pop
add
inc
cmp
mov
dec
xchg
in
fild
cli
xchg
loope
call
dec
pop
scas
mov
retf
sbb
adc
mov
add
sub
mov
sbb
sti
test
add
dec
mov
push
in
mov
in
xor
sbb
shl
movs
out
mov
cmp
mov
push
mov
inc
add
sbb
out
rol
mov
mov
push
sti
adc
cmp
cld
inc
test
inc
and
ret
mov
fwait
pop
lea
mov
xchg
mov
jns
fnsave
pop
xor
cmp
arpl
mov
ins
cli
(bad)
mul
dec
addr16
int
mov
outs
mov
or
jmp
adc
ins
xor
(bad)
imul
sub
cmp
sbb
(bad)
cli
pop
addr16
jmp
mov
inc
test
sbb
sub
jmp
pushf
dec
movs
fstp
sub
jle
and
mov
push
xchg
leave
xlat
or
and
inc
lea
sbb
sub
(bad)
pop
out
loopne
push
retf
call
or
lods
call
pop
fbld
lock
pop
or
lds
adc
sub
and
xor
das
cmp
xchg
mov
lds
push
jl
mov
pop
std
mov
adc
add
xchg
push
xchg
mov
sub
mov
aas
sbb
mov
mov
scas
sub
hlt
jae
inc
mov
or
dec
rcl
in
mov
and
scas
sub
jbe
(bad)
xchg
test
mov
stos
mov
push
test
retf
rcl
xchg
stos
mov
ss
repnz
imul
dec
ret
ret
jp
mov
ins
loope
into
jge
imul
adc
pop
mov
fnstcw
adc
fstp
mov
mov
dec
add
jmp
xchg
aam
data16
lods
and
or
inc
and
mov
shr
das
xor
out
call
inc
xchg
scas
(bad)
push
retf
cwde
data16
jle
(bad)
mov
and
jp
dec
movs
pop
xor
lods
jb
nop
jl
cmp
in
sti
into
mov
sub
in
pop
lea
inc
sbb
and
lahf
jp
(bad)
lahf
je
nop
jmp
or
loop
sub
fdivr
dec
sbb
stos
mov
movs
mov
add
sub
imul
nop
shl
sbb
inc
mov
and
mov
jl
xchg
adc
adc
or
add
xor
nop
(bad)
ror
lock
jne
cmps
xchg
adc
repz
test
enter
mov
inc
ds
jp
int
mov
sub
jg
dec
int
adc
popf
cmp
bswap
scas
sub
scas
xor
sti
fwait
loop
mov
sub
adc
repnz
sbb
or
push
push
mov
(bad)
mov
add
shl
call
xchg
xchg
sbb
xor
rcl
popf
pop
aas
sub
call
xor
arpl
shl
shl
mov
fwait
addr16
cmc
mov
retf
dec
in
xchg
mov
test
jl
adc
inc
cmp
xor
jle
jge
in
and
jnp
leave
test
sbb
mov
adc
mov
push
lea
rol
js
mov
push
das
push
mov
gs
mov
xor
popa
fwait
sti
out
or
xchg
mov
in
add
movs
popf
ins
mov
in
sbb
and
jge
hlt
jl
popa
push
adc
mov
popf
push
sbb
scas
mov
test
or
ins
pop
retf
jecxz
mov
cmps
jno
mov
and
(bad)
mov
mov
xchg
aam
jp
fsubp
push
pop
movs
xchg
mov
fnsave
pushf
sbb
(bad)
pop
in
scas
call
jnp
push
sti
movs
outs
int3
mov
inc
test
idiv
and
in
mov
daa
jae
push
xchg
adc
aaa
cmps
cmps
xchg
outs
aas
jae
and
dec
pop
outs
(bad)
cmp
cmp
mov
mov
xor
aaa
mov
call
fisttp
push
loope
in
or
ret
push
pop
sbb
ds
cmps
xor
hlt
cmps
repz
add
nop
or
adc
rcr
test
stos
stos
or
fwait
shl
mov
sub
pop
pop
xchg
or
or
lea
mov
jne
int3
cmps
or
jb
pop
(bad)
mov
sub
imul
mov
scas
unpcklps
dec
mov
push
daa
out
pop
bound
movs
dec
daa
pop
mov
push
fsub
mov
push
nop
in
adc
fcom
pop
loop
xor
mov
xchg
cmp
or
xchg
xchg
mov
mov
pop
add
ret
and
jmp
je
mov
cmp
stos
outs
push
adc
popf
cs
push
(bad)
pop
leave
pop
test
pushf
push
in
xchg
inc
push
mov
xor
arpl
jbe
enter
sbb
mov
push
(bad)
mov
in
fld
inc
mov
sti
push
popf
iret
aad
dec
mov
or
call
pop
add
jnp
cmps
xchg
adc
inc
add
(bad)
sub
popaw
(bad)
cmc
icebp
iret
dec
popa
inc
sbb
inc
(bad)
inc
fwait
sbb
sbb
std
psubq
ins
adc
(bad)
sub
mov
mov
xchg
enter
cs
add
adc
retf
dec
fcomip
es
jmp
xchg
mov
sub
jbe
mov
iret
jne
mov
enter
retf
ret
push
icebp
aaa
out
mov
ret
pop
js
imul
push
cmps
movs
loope
repz
and
cwde
push
and
(bad)
lock
push
dec
(bad)
and
dec
xor
jmp
mov
adc
cli
adc
popa
mov
je
dec
lock
push
mov
outs
int3
pusha
mov
mov
pop
ret
jno
dec
fucom
lahf
(bad)
ss
leave
inc
dec
lds
out
push
das
pop
loopne
jbe
and
out
dec
int
adc
cmc
cwde
and
dec
fchs
test
sbb
xor
fcom
fbld
mov
cs
cmp
inc
and
push
repnz
fcomip
sub
out
adc
repz
pop
repz
fucomi
xchg
cmp
push
cmp
(bad)
jmp
xchg
rcr
repz
icebp
dec
and
stos
pop
rcr
push
xor
das
hlt
imul
(bad)
jnp
in
ret
not
test
data16
and
adc
jmp
rcl
adc
int3
sub
inc
retf
xor
add
pop
add
sub
fs
mov
mov
out
mov
mov
pop
out
ins
ins
int
das
ja
and
test
imul
shr
loope
or
pop
fadd
fwait
scas
dec
shl
push
add
stos
lods
(bad)
cdq
jp
pop
jmp
aaa
inc
adc
daa
mov
rcl
xchg
rol
cmps
sbb
xor
je
loop
arpl
cli
bound
jno
xor
int3
mov
cdq
sbb
sbb
in
xor
pusha
inc
rcl
fild
cmp
fs
int3
rdpmc
xor
data16
and
loop
lock
vpandn
add
cmp
bound
adc
cdq
pop
(bad)
rol
daa
in
(bad)
sub
mov
rcl
fmul
pop
mov
sub
jmp
call
or
mov
sbb
cs
lahf
push
mov
dec
inc
movs
mov
lahf
adc
lds
sbb
retf
push
add
out
fs
or
mov
out
mov
mov
mov
pop
jae
(bad)
push
xlat
lods
push
jmp
pop
jmp
shr
je
aad
rol
cmps
sahf
repz
xor
iret
loope
add
push
fldenv
sbb
lahf
cmp
in
jge
jo
dec
or
stos
add
in
ja
xor
loope
std
or
lahf
sbb
inc
in
and
ret
fiadd
push
mov
pop
retf
shl
test
ficom
mov
shl
inc
adc
xchg
ja
loopne
in
pushf
hlt
(bad)
arpl
push
enter
fcom
(bad)
in
scas
jbe
cmp
sub
das
sahf
out
mov
add
(bad)
push
push
xor
sbb
sbb
push
push
pop
push
(bad)
pop
mov
xlat
jb
inc
cmp
cdq
cmps
and
dec
hlt
int3
jmp
jnp
adc
clc
cwde
cld
jecxz
arpl
mov
fldcw
sub
pop
xor
fcmovne
sahf
imul
mov
add
stos
push
nop
add
cmp
dec
mov
fstp
jb
nop
sbb
xor
enter
loopne
dec
adc
div
retf
mov
popa
mov
mov
inc
jo
jle
mov
mov
rcl
inc
mov
sbb
sub
cs
push
inc
mov
pop
outs
loopne
enter
pop
rcr
mov
sbb
push
pop
sub
les
hlt
test
lods
inc
jmp
or
mov
inc
adc
mov
nop
fild
in
(bad)
mov
dec
jbe
repnz
cmp
mov
out
cmc
in
push
(bad)
in
clc
cmp
aas
jae
mov
stos
fs
(bad)
jns
pop
retf
jg
ffree
jne
cmp
dec
sub
stos
mov
jmp
or
mov
stos
xchg
push
pop
loop
cdq
jne
mov
xchg
movs
sbb
or
fisubr
es
jo
jne
imul
jp
call
inc
xchg
pusha
pop
pop
mov
dec
xor
mov
test
adc
lock
out
sbb
mov
hlt
adc
mov
cmc
imul
aaa
add
pop
adc
sar
lea
jae
test
jl
les
push
clc
mov
and
in
xor
mov
stos
and
adc
mov
movs
sub
or
movs
dec
or
sbb
lds
jl
pop
xchg
mov
ror
jge
sub
(bad)
xor
leave
lahf
mov
sbb
and
dec
and
mov
push
adc
dec
out
xor
inc
outs
push
les
push
mov
ds
in
or
outs
cmp
mov
loope
fisttp
xchg
mov
xchg
(bad)
cs
into
inc
jno
sbb
cmp
clc
inc
in
movs
mov
jle
(bad)
mov
imul
paddq
rcl
jbe
mov
fidiv
mov
dec
(bad)
lods
fcmovnb
mov
cmp
das
pushw
ror
pop
jp
(bad)
call
or
cmp
imul
jnp
pop
cs
xor
in
sub
jae
out
test
repz
cwde
out
movs
jbe
(bad)
int
fdiv
ja
sbb
popa
ret
cmps
test
jmp
inc
fcom
mov
cli
jmp
xchg
int3
cmp
or
xor
xor
rcr
stos
jecxz
cli
add
push
dec
gs
mov
hlt
mov
cmp
ja
int
pop
mov
arpl
(bad)
les
(bad)
(bad)
pop
call
sbb
cdq
pop
ds
adc
and
idiv
sar
lea
adc
push
(bad)
sbb
push
cmp
sbb
mov
pusha
sub
daa
add
test
sbb
(bad)
mov
jl
ret
aas
dec
inc
xchg
and
xchg
das
pop
outs
test
sbb
lahf
adc
push
mov
mov
inc
push
and
enter
dec
mov
xchg
les
sbb
lds
fmulp
std
(bad)
push
mov
push
mov
push
add
cmc
sbb
cs
pop
div
aam
test
cmp
inc
jge
imul
cmp
jecxz
cdq
mov
ss
adc
scas
leave
inc
push
or
sahf
cmp
int
dec
scas
rcl
sti
inc
ja
sahf
fist
je
retf
inc
dec
repnz
fs
mov
or
or
lea
cs
xchg
dec
mov
int3
loope
outs
call
mov
adc
xor
outs
pop
ss
es
ins
cmps
stc
dec
scas
test
jmp
inc
xchg
lock
mov
mov
es
xor
ret
lock
jl
addr16
loopne
int3
pop
push
enter
dec
inc
lods
pop
inc
jmp
inc
jl
ins
movs
cs
jae
ja
and
dec
jae
(bad)
dec
stos
pushf
xchg
sub
stos
fld
ss
loop
cmp
add
icebp
push
jle
shl
pop
test
jbe
push
cmp
sub
xor
inc
test
mul
mov
cmps
(bad)
push
or
nop
idiv
je
dec
not
icebp
mov
push
cmp
fwait
mov
push
lds
fs
jns
and
and
jae
call
jbe
repnz
std
test
xlat
cmp
mov
scas
cmp
xchg
bound
or
cs
dec
lods
out
mov
retf
add
mov
dec
push
outs
call
inc
or
pop
fwait
pop
push
xchg
movs
icebp
arpl
sbb
je
ss
scas
jle
shr
jmp
test
mov
cli
dec
add
out
outs
inc
jp
push
jecxz
stc
inc
inc
mov
aam
(bad)
test
ror
xchg
repnz
mov
cmc
popf
das
xor
jle
rcl
sahf
push
test
fs
cwde
add
mov
popf
repnz
pushf
pusha
jne
retf
sub
dec
fdiv
xchg
fs
test
test
ins
popf
inc
in
inc
jge
sar
lds
repz
pop
call
fld
outs
sbb
adc
jnp
cmc
xchg
popf
inc
and
and
mov
adc
fsub
repz
iret
es
xchg
sbb
xchg
cmp
popa
inc
enter
sti
fistp
fimul
mov
pop
mov
jle
jae
ss
adc
enter
and
inc
out
es
cmp
xchg
mov
stos
(bad)
or
xchg
sub
js
int3
add
dec
dec
dec
add
js
push
pop
xchg
adc
call
ins
lahf
pop
pop
push
inc
xor
adc
mov
cmp
sub
push
sub
ins
cmp
and
(bad)
outs
clc
ror
jp
out
inc
sub
pop
rcl
cmp
push
inc
and
dec
inc
scas
call
mov
lods
jmp
sbb
push
xchg
adc
cmp
(bad)
push
fs
das
in
mov
sbb
fcomip
xchg
inc
in
loopne
and
xchg
inc
dec
aas
shl
mov
out
js
add
repnz
loope
pop
mov
sub
shr
push
(bad)
iret
movs
int
inc
xchg
jp
inc
test
repz
push
jb
cmp
out
clc
inc
ficomp
(bad)
(bad)
div
in
(bad)
xor
lahf
push
xchg
push
dec
cmp
enter
push
jl
dec
xor
mov
popf
dec
mov
jb
mov
das
dec
nop
fiadd
mov
repz
or
icebp
loope
ins
xor
add
mov
lahf
add
and
out
push
cmp
std
stos
scas
and
cmp
cmp
dec
sub
mov
and
sub
fcomp
xor
mov
out
pop
sub
fidiv
xor
and
mov
(bad)
sbb
imul
cdq
(bad)
mov
push
adc
test
iret
jae
cmp
cs
lea
aam
xchg
and
clc
and
xchg
in
stc
in
xlat
outs
mov
mov
mov
imul
sar
xor
(bad)
push
pop
dec
inc
mov
mov
cli
jp
adc
jo
out
and
popf
or
mov
(bad)
imul
mov
lea
gs
mov
add
pusha
mov
jmp
dec
or
retf
cmp
hlt
jmp
dec
xchg
test
xchg
movs
inc
jae
ds
inc
adc
push
sbb
jmp
mov
clc
inc
pop
add
(bad)
push
pop
outs
add
iret
push
imul
inc
outs
mov
in
shr
scas
fisttp
sub
pop
pop
mov
inc
mov
pop
test
pushf
das
sbb
adc
pop
push
popf
mov
jg
sub
mov
enter
xlat
adc
test
jne
xchg
cld
cdq
adc
(bad)
adc
je
or
dec
idiv
add
cmp
inc
xchg
sahf
mov
hlt
xor
cmps
lahf
inc
mov
out
adc
push
cmp
inc
push
sti
leave
pop
sub
ja
inc
ds
sti
psrlq
jo
movs
das
shr
add
hlt
sti
mov
data16
add
cwde
cld
mov
sbb
push
pop
jne
ret
pop
push
sbb
sub
xlat
addr16
(bad)
jmp
inc
dec
sar
test
fcomp
xchg
and
xchg
mov
xor
call
pusha
lods
inc
(bad)
cmc
xor
adc
dec
and
mov
(bad)
into
scas
cmp
adc
mul
(bad)
je
scas
dec
test
jecxz
and
mov
and
pop
outs
sbb
ins
jle
push
pop
mov
mov
mov
fcmovnu
xor
mov
hlt
or
dec
fnstcw
jbe
push
repz
arpl
enter
fcmovnu
fbld
in
sub
jp
ss
scas
fstp
mov
adc
fnstcw
leave
lock
mov
jmp
and
and
leave
mov
or
lahf
push
or
test
mov
xor
inc
jns
add
repz
jno
xchg
in
mov
push
sub
(bad)
(bad)
fistp
jge
or
inc
outs
imul
add
pop
jnp
rcr
pop
sbb
pop
mov
mov
int3
retf
test
jecxz
pusha
add
jns
in
scas
imul
les
mov
push
data16
dec
add
jbe
jbe
loopne
push
ds
out
(bad)
sti
sbb
mov
dec
jo
pop
adc
stos
icebp
sub
out
les
icebp
loope
sbb
mov
fstp
push
cmp
aam
mov
sub
mov
dec
dec
push
shl
xchg
out
and
movs
mov
mov
dec
xchg
lahf
push
add
out
imul
lahf
push
xor
cwde
sbb
jmp
mov
scas
and
inc
and
mov
rcl
sub
and
sub
sbb
cmp
(bad)
xchg
sbb
nop
sub
idiv
ins
(bad)
and
lahf
ja
cmp
mov
mov
mov
xor
fmul
sub
xchg
ds
cmp
inc
ins
jb
cmps
jns
xchg
ins
cmp
fcom
push
out
mov
inc
imul
mov
and
fsubr
push
mov
jmp
arpl
or
pusha
jl
and
mov
addr16
ds
mov
or
jmp
sub
cmp
not
ret
push
add
push
std
sub
jg
ja
cli
sar
aad
adc
(bad)
call
out
(bad)
(bad)
repnz
xchg
cwde
test
mov
jp
and
add
popf
adc
out
mov
add
dec
inc
pop
mov
cmp
cmp
daa
inc
mov
test
pop
push
jno
sub
jmp
loopne
jb
repz
cmp
aaa
jmp
shl
mov
aam
dec
jg
adc
sbb
cmp
hlt
inc
pop
and
inc
fiadd
dec
mov
pop
ss
and
std
enter
push
push
xor
hlt
shl
jg
xor
cmp
aaa
pop
cli
cmps
mov
jbe
shr
cld
cmp
repnz
mov
mov
sbb
lock
jo
cli
mov
dec
mov
aad
(bad)
cmp
inc
push
or
pop
lods
jge
push
adc
inc
inc
push
and
std
and
stos
or
mov
stos
dec
addr16
sub
ds
or
popa
push
rcl
mov
cld
js
mov
stc
out
push
out
cdq
hlt
mov
ror
fsqrt
lods
popf
jg
inc
adc
stos
inc
test
inc
repnz
xor
imul
outs
(bad)
push
pusha
pop
mov
mov
lods
(bad)
sbb
das
mov
clc
inc
push
inc
sbb
mov
shl
call
xchg
call
push
jnp
imul
ror
dec
dec
adc
mov
dec
xchg
push
xchg
xlat
pop
xchg
sub
test
mov
test
test
pop
int3
pop
mov
sub
xor
or
cmp
mov
adc
enter
or
cli
push
outs
ds
mov
lahf
test
sbb
js
pop
out
sub
outs
call
sti
add
fadd
shr
(bad)
loop
in
xchg
xchg
xor
mov
fwait
dec
pop
mov
dec
enter
ret
(bad)
pushf
push
pushf
les
jecxz
iret
cmp
neg
test
ror
iret
lds
pop
push
and
push
das
and
xor
test
fdivr
add
adc
ss
aaa
push
lods
inc
mov
inc
ins
mov
outs
mov
mov
repz
test
pop
mov
jmp
pop
lea
scas
adc
xchg
sub
mov
(bad)
test
or
inc
jmp
mov
enter
and
push
xchg
imul
push
inc
mov
jmp
adc
dec
cmp
dec
loope
push
sar
in
test
jb
cwde
hlt
push
aaa
(bad)
xchg
xchg
cmp
ja
fsub
fadd
mov
popa
(bad)
fwait
jne
mov
into
jecxz
enter
fldcw
pop
jns
outs
mov
mov
jmp
dec
int
jl
pop
(bad)
adc
fstp
out
test
inc
fwait
and
jmp
mov
out
mov
enter
jmp
ja
mov
mov
dec
mov
jne
fcom
add
add
fmul
jbe
loope
mov
out
jne
mov
and
and
cmps
xor
jb
pop
adc
fwait
mov
add
retf
ror
sbb
cmp
fst
adc
xor
rcr
nop
aam
pop
addr16
xchg
cmp
inc
mov
sbb
outs
arpl
fmul
add
adc
test
xchg
jecxz
sbb
retf
ds
xchg
sbb
sub
adc
jle
inc
scas
dec
leave
xor
or
je
scas
fidivr
push
mov
not
add
add
xor
test
aad
mov
or
inc
pop
sti
fst
cli
daa
int3
push
in
and
push
or
mov
jl
push
cmps
rcr
inc
outs
mov
pusha
fstp
and
or
add
outs
fild
lods
test
mov
in
cwde
mov
sub
daa
ins
mov
push
aam
cmps
call
je
xor
xor
add
sub
dec
or
mov
lods
inc
inc
fidivr
cdq
sti
out
rcl
dec
sar
movs
sub
cmps
or
ret
out
daa
pop
fld
mov
scas
test
ss
push
mov
sub
mov
movs
arpl
push
xor
add
cmp
bound
dec
cld
sar
and
outs
mov
retf
mov
stos
aaa
outs
imul
nop
scas
stos
push
jo
jmp
adc
in
packuswb
cs
inc
daa
add
shl
cmp
sub
sar
ss
and
sub
adc
jo
jmp
push
sbb
idiv
cmp
inc
leave
push
sub
aaa
fimul
and
sti
push
cmp
in
mov
cmp
dec
sub
fst
pop
mov
data16
addr16
nop
mov
jle
out
or
xchg
cmp
pop
push
push
xor
inc
aas
pusha
cli
in
rcl
sbb
push
lods
push
popa
inc
cmp
rcl
in
mov
and
mov
(bad)
mov
and
aaa
push
lock
add
xchg
outs
hlt
in
xlat
jmp
mov
mov
pop
inc
mov
scas
and
and
clc
mov
lods
adc
push
dec
pop
stos
(bad)
test
cs
sbb
pop
pop
lods
mov
(bad)
mov
xor
mov
mov
repz
push
retf
jg
add
ret
dec
mov
popf
test
ins
adc
dec
jbe
js
or
shr
sub
retf
jle
outs
(bad)
add
mov
push
test
dec
iret
adc
inc
(bad)
fcompp
in
cs
(bad)
sbb
push
cmp
xchg
bound
sub
inc
add
jno
test
jbe
je
mov
iret
add
stc
push
dec
imul
retf
in
adc
scas
jp
adc
jnp
and
jae
add
pop
adc
xchg
push
push
aaa
call
add
pushf
mov
repz
mov
dec
fsub
(bad)
or
adc
pusha
dec
gs
call
daa
sbb
add
adc
test
std
mov
adc
mov
rol
cmc
push
lds
fs
jmp
fs
addr16
sub
xor
mov
fxtract
mov
icebp
push
dec
rol
je
icebp
dec
inc
adc
push
sti
cld
lea
add
adc
xor
mov
inc
lods
iret
vmaxpd
and
jmp
or
mov
out
rcl
hlt
ja
cmp
not
test
clc
(bad)
sub
sub
and
mov
cmp
sahf
xchg
std
add
jge
mov
cld
stos
and
sahf
add
mov
adc
or
dec
pop
push
popf
add
cmp
mov
xor
cli
mov
fiadd
fwait
xor
push
rol
rcl
mov
ja
jae
inc
js
mov
(bad)
popf
push
cmps
dec
lods
ja
pop
or
jmp
test
shl
aam
or
dec
jmp
je
pop
je
arpl
mov
das
push
or
and
sbb
xchg
out
clc
mov
enterw
lods
loopne
dec
mov
ret
mov
pop
stos
push
enter
aad
clc
mov
lahf
in
adc
cs
push
arpl
mov
fisttp
adc
jmp
dec
and
outs
and
push
neg
cmp
jmp
test
ds
jge
sahf
and
sub
frstor
or
mov
inc
xchg
in
cmps
das
fdiv
daa
sahf
mov
int3
push
ret
jae
movs
outs
pop
dec
xor
inc
lds
sub
jle
ss
xchg
pop
add
sbb
sbb
sub
sub
adc
xor
pop
cld
sbb
xchg
mov
data16
test
mov
sti
mov
inc
call
push
push
retf
scas
call
xchg
jecxz
or
loop
std
test
sub
cmp
sub
inc
pop
lahf
lods
or
test
sbb
leave
imul
outs
inc
pop
mov
dec
push
adc
leave
mov
mov
mov
push
ss
and
push
sbb
mov
ins
pop
pop
movs
mov
fcom
and
push
clc
jl
lds
sub
popa
adc
push
dec
mov
iret
push
out
jnp
stos
jb
icebp
inc
dec
xchg
jb
out
es
jge
push
not
mov
lahf
xor
repnz
ins
repnz
jg
mov
stc
daa
pop
mov
jmp
dec
xchg
cwde
adc
jge
jmp
call
mov
or
cmps
jne
pop
pop
arpl
movs
push
pop
push
stc
xor
sar
push
and
xor
clc
movs
xlat
mov
movs
sbb
mov
aam
cs
repnz
sar
mov
fsub
out
cmps
pop
je
popf
aad
jbe
test
cmps
inc
mov
or
jmp
mov
bound
jbe
in
mov
add
or
scas
add
dec
ret
pop
int
inc
mov
push
jl
arpl
jbe
push
jmp
rol
hlt
mov
(bad)
jo
mov
xor
add
(bad)
jno
jb
dec
dec
cmp
mov
nop
xchg
movs
push
into
mov
push
jo
stos
pop
mul
mov
shl
test
(bad)
call
mov
jae
xor
xor
add
jnp
cli
pusha
mov
das
lods
mov
cmp
inc
mov
and
rcl
shr
push
sahf
jl
jle
and
adc
fcomp
mov
dec
in
(bad)
ins
aad
call
xor
or
and
(bad)
fldenv
mov
mov
inc
xchg
out
xchg
fsub
xchg
out
pop
lods
(bad)
retf
cld
dec
sub
xlat
push
aaa
lods
enter
je
jmp
jae
shl
and
sub
add
imul
nop
shl
shr
jmp
inc
and
(bad)
test
mov
enter
and
adc
mov
aad
outs
jle
sub
pop
fwait
repz
pop
jge
mov
inc
push
jp
into
movs
push
pushf
nop
out
ja
sub
hlt
pushf
or
idiv
pop
fs
and
loopne
push
mov
aam
mov
dec
push
cmc
xchg
addr16
(bad)
int3
leave
out
inc
jnp
mov
xor
imul
test
mov
cmc
js
jo
add
dec
inc
(bad)
out
pop
cld
mov
je
inc
les
aad
ret
into
jnp
lods
xchg
shl
lock
lods
push
cli
outs
jp
mov
leave
test
adc
lds
sbb
ret
jle
repnz
outs
scas
aaa
inc
xchg
mov
add
in
xchg
dec
inc
add
sub
xor
and
outs
sbb
mov
addr16
jmp
fs
xor
sbb
bound
aas
cwde
int
and
test
pop
inc
(bad)
movs
cmp
lea
adc
fidivr
mov
xor
xor
mov
popa
or
sbb
jmp
adc
sbb
push
aam
js
xchg
popf
sti
lea
shr
push
imul
cdq
ins
push
pop
ror
push
stos
adc
repz
call
fsub
sub
cmp
push
xor
xchg
sbb
addr16
idiv
lods
xor
shl
sar
mov
mov
sbb
in
push
stos
add
(bad)
push
jl
push
sbb
cmp
lea
les
not
and
test
push
mov
in
and
dec
push
xchg
add
gs
add
aaa
and
jbe
fwait
pop
sbb
movs
frstor
mov
fwait
cli
sbb
xor
xchg
or
dec
aas
(bad)
pop
dec
xchg
fucomip
adc
shl
rcr
mov
cmp
arpl
idiv
outs
xor
arpl
sub
fcmovnb
sbb
inc
loope
push
and
sbb
push
inc
test
ret
mov
add
mov
xor
pop
out
mov
sbb
aam
mov
enter
and
ins
in
in
retf
adc
loopne
xor
mov
inc
je
adc
jg
xchg
or
std
inc
add
test
imul
inc
mov
lods
fisttp
xor
or
dec
imul
stc
or
jnp
dec
ss
jg
xchg
xchg
pop
loope
adc
or
lds
dec
rcr
sub
xchg
push
fist
(bad)
mov
jp
ins
add
dec
cld
lahf
lds
in
jnp
pop
mov
or
jmp
mov
add
add
cmp
stc
not
cli
out
(bad)
movs
xchg
(bad)
jmp
pop
mov
lock
push
inc
xor
mov
ds
add
sbb
inc
into
sub
adc
test
daa
dec
nop
or
jge
mov
inc
inc
call
push
in
inc
adc
fidivr
adc
stos
jbe
or
and
push
sub
push
pop
dec
test
out
shr
scas
into
xchg
sub
dec
(bad)
or
dec
inc
mov
(bad)
in
cmps
sbb
add
and
or
mov
dec
pop
iret
pop
dec
mov
sub
push
inc
mov
rcr
jnp
xchg
and
mov
cmp
push
pop
adc
cmp
inc
push
adc
ret
xlat
enter
imul
mov
das
popf
call
cmps
jbe
cmp
jae
(bad)
push
sbb
sub
outs
mov
jbe
push
xchg
pop
dec
gs
hlt
ins
dec
push
cmp
push
xor
cmps
(bad)
arpl
out
retf
cwde
int3
xor
call
push
dec
ins
add
add
lds
push
add
clc
dec
pop
in
sub
test
xchg
mov
add
std
mov
mov
xchg
push
mov
das
mov
adc
jecxz
mov
xchg
sbb
cmp
loop
and
xchg
and
add
push
mov
fcom
ficom
test
out
shl
or
call
aaa
jne
pop
push
enter
and
sub
xchg
mov
movs
or
in
(bad)
xlat
mov
(bad)
cld
and
xor
into
push
jno
sub
ror
lods
dec
dec
sbb
xchg
push
adc
ins
(bad)
cld
push
cs
aaa
iret
lock
bound
aam
in
and
je
retf
pop
ret
xor
mov
mov
addr16
rcr
and
lods
stos
inc
sbb
int
aad
js
outs
shl
lods
jae
sub
mov
addr16
enter
cdq
adc
xlat
jecxz
out
out
push
and
xchg
int3
add
scas
test
retf
adc
mov
or
call
popf
adc
cli
in
icebp
sbb
or
loop
sub
jg
jae
or
mov
xchg
mov
sbb
xor
(bad)
(bad)
add
jnp
cs
adc
or
add
test
cwde
xchg
(bad)
sti
test
(bad)
inc
adc
loop
or
xor
push
and
xor
mov
fcomip
mov
imul
pop
cli
mov
add
leave
loopne
adc
out
ret
or
pop
mov
jae
fst
std
or
xlat
xor
stc
jbe
mov
and
fst
sbb
and
cmp
call
data16
gs
jge
je
outs
mov
push
xchg
adc
sbb
pushf
pop
and
iret
jg
inc
adc
ret
sub
loop
add
inc
out
push
mov
retf
jl
mov
scas
icebp
xor
and
sub
(bad)
ror
pop
mov
inc
inc
jmp
inc
push
inc
push
out
sbb
pop
mov
and
sub
popf
or
cdq
adc
and
ret
mov
mov
xchg
dec
mov
cmps
jecxz
push
add
movs
call
ret
(bad)
cs
fwait
jle
mov
cdq
pop
leave
popf
movs
dec
loopne
lods
jmp
xlat
jg
add
fs
fdivr
out
fdivr
dec
jl
adc
push
das
(bad)
cli
nop
inc
xor
or
pop
xchg
inc
(bad)
cmc
(bad)
rcr
outs
xor
or
push
es
out
inc
retf
aam
and
mov
(bad)
mov
xor
test
and
pop
and
jne
jg
mov
mov
xchg
jge
xchg
pushf
push
jb
in
pop
sub
cmp
inc
push
jg
adc
out
xor
mov
push
jg
mov
and
xor
das
outs
leave
out
pop
cmp
xchg
add
xchg
jbe
cs
fs
pop
dec
call
(bad)
fisubr
or
aas
out
fucomi
sbb
push
test
test
jg
xor
retf
push
and
into
ins
and
movs
push
add
ja
add
xchg
shl
pop
scas
movups
bound
loop
push
mov
lods
pop
in
das
cmp
daa
popa
push
das
mov
fld
in
dec
dec
daa
(bad)
dec
cmps
jle
fldenv
daa
scas
cmc
dec
xlat
mov
stos
fsub
mov
or
push
scas
lods
jns
dec
or
sub
hlt
sub
lds
shl
and
ror
mov
dec
imul
jns
and
mov
mov
retf
les
iret
add
cmp
inc
outs
shr
int3
xchg
adc
mov
xor
sub
(bad)
jecxz
clc
mov
pop
lea
fnstcw
xchg
call
retf
je
ret
sahf
or
and
rdpmc
jbe
out
sub
in
and
jp
std
ficomp
xor
bound
fdiv
loop
lock
mov
fs
test
pusha
outs
and
or
push
fisub
cmp
imul
aas
cwde
enter
test
push
or
(bad)
xchg
cld
mov
xor
push
inc
or
xchg
(bad)
or
mov
push
jne
inc
lahf
les
sti
ins
pop
cmps
retfw
sub
out
jmp
retf
punpcklbw
mov
stos
pop
and
or
cmp
pop
jo
pop
int
repz
add
inc
idiv
dec
push
sti
test
xchg
mov
xor
cdq
icebp
out
daa
cli
add
fs
xor
push
xchg
add
(bad)
sbb
ror
out
(bad)
icebp
call
ds
jmp
mov
adc
xor
repnz
cs
pop
ins
or
push
scas
mov
les
sub
aaa
in
and
fsub
loopne
pusha
add
mov
jne
fwait
or
push
mov
es
(bad)
pop
hlt
push
cmp
and
mov
les
stos
pop
inc
pop
dec
pop
(bad)
mov
jle
jecxz
mov
dec
push
add
jmp
and
push
out
xor
mov
sub
in
jns
das
mov
outs
xor
jo
jge
sbb
lods
jo
imul
cs
leave
inc
out
sub
sbb
pop
int
clc
jbe
loopne
fsub
or
aad
mov
jo
add
out
jp
retf
outs
out
int3
aad
or
dec
jb
xor
jmp
shl
cmp
xor
and
imul
push
addr16
and
lock
cli
xchg
pop
(bad)
pushf
(bad)
adc
push
and
push
movs
add
dec
xlat
mov
sbb
test
pop
movs
inc
pop
out
adc
aam
nop
jecxz
popf
xchg
adc
push
mov
jg
or
cmp
(bad)
push
xchg
and
fbstp
inc
out
pop
icebp
xchg
and
sub
mov
push
out
push
fxch
call
inc
or
pop
pop
xor
mov
fisub
shr
fsubr
ins
adc
iret
jbe
sar
(bad)
fst
lods
outs
inc
bound
popf
jns
sbb
ja
push
lds
jne
or
neg
mov
add
repnz
inc
cld
xor
add
cdq
mov
push
xor
in
sub
inc
mov
mov
push
fistp
xor
iret
pushf
jmp
(bad)
scas
pusha
js
ins
movs
enter
in
iret
aad
scas
and
mov
ins
adc
jns
dec
lods
push
push
test
or
xchg
xchg
in
leave
clc
dec
xor
mov
add
push
inc
push
daa
dec
inc
shl
ins
pop
and
sub
(bad)
push
mov
es
pusha
addr16
lods
sub
dec
mov
test
dec
jo
bound
je
push
arpl
and
nop
mov
inc
jno
xor
jle
repz
in
gs
xchg
rcr
ret
(bad)
jbe
sub
xchg
or
mov
jne
xor
mov
test
clc
dec
pop
sbb
das
mov
xchg
div
pop
push
push
int3
fstp
sar
cmp
fistp
mov
add
bound
mov
cmp
out
aaa
mov
jo
sbb
in
add
(bad)
fisttp
push
movs
jne
jge
lds
xchg
add
xchg
mov
dec
pop
out
mov
mov
xor
mov
aam
bound
jo
pop
into
fst
mov
sbb
pusha
push
mov
jl
lods
movs
xchg
fiadd
ins
cmp
retf
or
xchg
(bad)
ret
pop
and
jne
sar
movs
adc
push
scas
inc
push
jge
clc
or
ins
sti
pushf
in
mov
iret
popa
rcl
push
and
push
js
dec
or
out
pop
jb
ins
stos
outs
cmp
into
jmp
xchg
mov
fsubrp
push
sub
jne
data16
add
loope
sub
fcmovnbe
sub
cs
movs
sbb
lea
stos
jae
push
xor
fadd
cwde
or
je
cmp
adc
push
retf
repnz
in
je
xchg
mov
mov
and
fdivr
and
sub
jge
pusha
cld
js
xchg
cmps
inc
add
clc
jmp
xchg
inc
js
xchg
ja
imul
xchg
mov
xchg
jl
sbb
les
stc
adc
rol
mov
mov
sahf
dec
(bad)
ins
jl
mov
cs
or
leave
scas
ret
sub
dec
sub
or
mov
call
push
outs
mov
call
outs
pop
in
std
inc
dec
push
sub
or
xchg
dec
mov
loope
imul
stc
push
or
and
dec
mov
jmp
jo
mov
xor
xchg
lds
mov
xor
xchg
repz
mov
cmovg
out
inc
xor
mov
fsub
push
pop
mov
pop
movs
out
retf
pop
inc
mov
mov
inc
and
add
push
xchg
retf
(bad)
pop
jmp
ficomp
aas
(bad)
mov
pusha
pusha
hlt
push
cmp
call
mov
jg
shl
stc
rol
mov
fsubr
mov
add
xchg
repz
jg
xor
aad
xor
mov
call
jb
aad
and
(bad)
ss
mov
jne
mov
xor
fs
stc
in
jge
sbb
and
pop
in
mov
sub
add
movs
add
mov
jl
inc
repz
pop
(bad)
jae
xor
or
ror
call
je
adc
fcmovbe
and
(bad)
jmp
lods
pop
les
fmul
out
fs
fldcw
js
sub
mov
sub
jb
push
push
pop
cmps
and
and
pop
ja
pop
jae
int3
daa
xor
cmp
inc
mov
movs
smsw
in
dec
xchg
add
aas
or
and
movs
lods
gs
adc
push
xor
dec
sub
into
aaa
xchg
pop
jp
dec
lods
stc
pop
jge
adc
push
aam
push
adc
or
call
mov
cwde
cmps
mov
adc
lods
pop
jmp
mov
leave
xor
mov
addr16
clc
std
ret
jbe
test
jmp
inc
dec
fwait
cmp
sbb
xor
lods
call
popa
ins
dec
jge
sbb
inc
sub
sub
add
push
(bad)
add
(bad)
(bad)
into
(bad)
add
(bad)
xor
sub
jg
sbb
jnp
mov
push
sbb
jo
xchg
popa
aad
inc
cs
add
jns
jmp
xchg
inc
cli
jo
push
dec
jns
(bad)
push
std
or
add
or
lods
mov
dec
out
ret
aam
mov
mov
sub
(bad)
or
xor
push
add
cmp
lods
mov
movs
test
jg
mov
jmp
stos
fistp
pop
imul
pop
aas
adc
pop
cld
loope
and
jae
mov
jno
pop
xchg
test
jl
imul
sub
dec
push
aad
adc
rcr
call
add
jbe
pop
idiv
int
mov
cmp
mov
mov
movs
cmp
inc
push
and
outs
push
push
jnp
ins
mov
pop
adc
leave
sbb
sbb
(bad)
lahf
push
jecxz
mov
dec
mov
std
ja
push
xor
or
pop
dec
scas
pop
daa
mov
dec
push
xchg
mov
sub
mov
mov
rcl
mov
cdq
xchg
mov
xor
pop
enter
push
movs
mov
call
inc
jp
sub
test
pop
je
ret
sti
xchg
inc
inc
jmp
int3
cmc
iret
mov
sbb
push
jae
push
mov
stos
jge
cmc
add
dec
int
jl
ds
xor
inc
jb
and
sbb
jbe
pop
popa
iret
add
or
pusha
das
xchg
sbb
popa
in
mov
push
pop
fwait
cmp
add
enter
inc
loopne
add
test
xchg
sub
nop
push
and
jge
iret
fsubr
in
in
int
or
inc
cmp
loopne
das
fwait
popa
sbb
cmp
mov
out
jmp
xchg
push
dec
add
adc
and
push
dec
dec
inc
jmp
arpl
dec
or
pop
or
pop
bound
sbb
iret
push
mov
inc
cmp
inc
xor
enter
ret
fxch
movs
(bad)
dec
dec
ja
jecxz
mov
adc
add
mov
jge
mov
jae
pop
add
pusha
xchg
xchg
mov
mov
(bad)
cli
or
imul
dec
jp
cld
add
jmp
pop
aad
loop
icebp
cmp
les
add
in
int3
mov
loope
sbb
retf
out
mov
popf
mov
jnp
into
jne
repnz
jbe
scas
add
aad
xlat
mov
jne
cmp
les
hlt
sub
stc
jle
sbb
(bad)
(bad)
out
mov
test
repz
jo
mov
ins
leave
sar
loop
jge
mov
add
rcl
push
ja
dec
or
or
test
call
sbb
jae
mov
call
xor
push
mov
xchg
jae
pusha
and
les
stos
je
test
and
idiv
xchg
cwde
sbb
mul
cli
outs
adc
add
pusha
aad
mov
add
or
retf
xchg
outs
cli
outs
(bad)
aad
cmp
jo
test
jp
mov
aas
popa
fdiv
sar
int
pop
into
mov
cmps
in
(bad)
outs
aas
pop
mov
fistp
retf
ins
adc
fcmovnu
bound
call
in
add
push
push
shr
jne
(bad)
pop
and
jmp
icebp
xor
fstp
dec
icebp
inc
iret
inc
dec
aad
aam
add
push
xor
push
sar
les
adc
aad
pop
push
cmp
fild
nop
jbe
fisttp
or
(bad)
fadd
in
(bad)
scas
pop
pop
mov
in
popf
movs
sub
inc
movs
xchg
(bad)
jae
push
adc
sub
xlat
(bad)
push
lahf
scas
aas
sub
mov
stos
or
cli
in
cmp
add
movs
gs
push
mov
gs
fimul
xchg
icebp
add
cmp
(bad)
adc
pusha
fld
dec
pop
sub
fcomp
add
push
mov
pop
imul
jns
xchg
movlps
shl
xchg
mov
adc
sar
retf
les
imul
push
ret
dec
sbb
sar
fld
adc
stos
cld
push
pop
loop
dec
jno
mov
or
ss
out
mov
ds
sbb
test
pop
lods
pop
jge
mov
shl
popa
clc
xor
jne
mov
push
sar
pop
call
fsubr
mov
sub
aad
and
retf
and
scas
add
leave
je
mov
mov
aas
adc
push
sub
ss
data16
add
sub
adc
add
cld
inc
push
jo
lea
sub
ret
dec
sub
ins
stos
dec
inc
sub
mov
jbe
xchg
cmps
(bad)
cmps
pop
jae
sub
push
out
inc
jl
mov
push
push
cmps
cs
sti
pop
jle
mov
pop
mov
test
pop
lahf
adc
mov
adc
pop
push
jnp
push
mov
ins
cs
cmps
push
and
dec
jnp
mov
xchg
js
mov
adc
pop
out
scas
sbb
jmp
imul
js
xor
pop
(bad)
xor
nop
or
(bad)
ja
sub
pop
test
push
add
arpl
movs
(bad)
enter
xchg
jbe
sub
jl
fcom
dec
push
pop
bound
mov
add
mov
movs
in
scas
jl
sbb
push
jo
xchg
mov
cmps
pop
mov
cmps
sbb
pusha
fnsave
in
xor
data16
cmps
fs
sbb
gs
jmp
and
mov
mov
sub
(bad)
jle
arpl
jg
mov
lahf
(bad)
aas
xchg
push
les
jl
test
lea
jmp
push
cdq
fisub
pop
xchg
cmp
push
sub
mov
or
stc
ret
xor
ret
cmp
div
(bad)
mov
xchg
mov
mov
jns
(bad)
and
jbe
aas
hlt
and
in
cli
xchg
inc
mov
mov
xchg
fldenv
(bad)
jp
ficomp
adc
mul
sbb
fisttp
aad
pop
lods
xchg
or
jb
xor
loopne
sub
mov
jne
dec
and
jne
xchg
push
fs
or
xor
retf
icebp
mov
aaa
or
std
movs
and
shl
inc
repnz
add
lahf
xor
jg
push
jae
inc
mov
push
cmp
mul
cmps
dec
out
outs
pop
out
cli
or
mov
test
fadd
mov
jbe
mov
int3
in
lds
pop
out
out
hlt
push
jecxz
mov
icebp
mov
pop
xor
pop
add
and
(bad)
pop
dec
imul
lds
sbb
iret
aad
add
sbb
pushf
scas
jle
hlt
xlat
movs
jnp
jge
pop
adc
sbb
xor
dec
mov
pop
xchg
ret
movntps
clc
push
dec
sub
scas
in
mov
inc
sbb
les
js
mov
and
shr
out
aaa
jge
int3
js
or
shl
test
jecxz
inc
cdq
mov
loopne
retf
loope
adc
test
fdivr
pushf
inc
cmp
cmp
xchg
pop
xor
cmp
add
lea
adc
inc
push
imul
jo
mov
mov
add
inc
cmp
push
adc
adc
mov
sub
xchg
das
scas
int3
pop
pop
int3
add
pop
lock
lods
jl
in
cdq
push
jb
xor
ja
mov
in
jbe
jb
pop
scas
xchg
nop
pop
mov
mov
xchg
ror
or
adc
pop
std
or
shr
or
or
call
sti
xor
jge
jbe
push
call
dec
stc
mov
hlt
jae
stc
jge
sub
pushf
(bad)
test
lods
jnp
inc
mov
jno
(bad)
push
call
inc
in
iret
loopne
out
add
lods
out
inc
(bad)
(bad)
sbb
lds
jmp
rol
lea
inc
sar
push
cwde
push
es
sbb
push
mov
repz
inc
xchg
dec
sti
les
ror
inc
xor
push
xor
jecxz
sub
leave
fwait
rol
mov
cmp
loop
frstor
mov
ret
clc
xchg
nop
mov
mov
mov
mov
sub
pop
fs
test
mov
mov
lds
sbb
jcxz
push
inc
aad
fs
add
cmc
lods
pop
sub
loopne
popf
fs
ins
mov
pusha
aaa
cmc
scas
xlat
ror
in
jno
adc
stos
(bad)
pop
pop
inc
pushf
outs
not
inc
or
cmp
pop
(bad)
daa
jp
add
dec
sub
aad
pop
pop
add
sbb
sub
in
int
jno
ss
ficom
(bad)
dec
leave
push
shr
xor
xlat
popa
xchg
nop
outs
mov
push
call
inc
les
idiv
xchg
xchg
bswap
es
popa
ds
cld
and
inc
mov
fdivr
mov
out
pop
add
or
mov
adc
cmp
sub
sti
data16
out
inc
pop
lods
or
ret
fdivr
jae
cmp
jb
cdq
mov
sbb
es
cli
fist
mov
jno
sbb
mov
dec
clc
jb
inc
(bad)
jbe
not
mov
cmp
sahf
inc
push
bound
cwde
pop
test
xchg
mov
lods
dec
mov
fld
or
repnz
sub
fcmovne
(bad)
sub
pop
test
fs
pop
std
repnz
sbb
adc
cwde
cmp
test
(bad)
cld
nop
dec
mov
bound
xchg
inc
in
xchg
ror
(bad)
push
mov
and
add
jge
dec
push
push
jnp
lods
and
loope
jmp
mov
fisttp
cmp
mov
pop
fstp
into
add
pop
mov
int3
mov
rol
lock
sub
ret
cdq
jbe
loop
mov
es
jmp
retf
jae
add
mov
sti
jb
retf
stc
icebp
dec
mov
lock
sti
jecxz
lods
and
xor
outs
mov
mov
movs
data16
fisttp
(bad)
iret
dec
call
sbb
out
xchg
push
mov
test
dec
xchg
cmps
(bad)
retf
sbb
mov
ss
retf
add
(bad)
aam
test
mov
mov
or
jp
inc
sbb
cmp
sbb
ret
mov
lock
mov
adc
scas
out
jo
pop
jo
pushf
cmp
sbb
jo
inc
xor
pop
es
xchg
mov
mov
cwde
pop
push
rcr
jmp
jp
ror
pop
and
pop
cs
pop
and
pop
jnp
pop
and
popf
mov
xor
mov
cld
cmps
call
fbld
mov
repz
data16
(bad)
int
or
pop
inc
or
sbb
and
dec
xor
and
lea
dec
popf
or
fimul
mov
fsub
pop
aaa
scas
rcl
sbb
cmp
sbb
jmp
mov
inc
dec
scas
add
mov
pop
inc
adc
mov
jb
xchg
mov
je
mov
les
jecxz
push
adc
and
pushf
xchg
sar
fistp
mov
int
ins
inc
lea
imul
ins
pusha
or
xchg
into
ins
rol
cdq
jns
sub
loopne
fwait
mov
mov
xchg
loop
loopne
pmuludq
pop
add
sub
xchg
pop
mov
xchg
mov
push
sub
xor
(bad)
rol
adc
mov
arpl
std
dec
jge
adc
and
daa
movs
out
jnp
xchg
mov
pop
push
stos
cdq
ss
dec
mov
test
add
sbb
arpl
ret
adc
inc
mov
sbb
repz
pop
mov
adc
sbb
xchg
jo
push
jnp
rcl
xor
xchg
or
movs
shl
xor
cmp
add
lds
iret
leave
popa
add
sub
sbb
fldenv
jbe
pop
mov
outs
inc
cmp
xor
sub
add
jns
sahf
dec
fcomip
or
adc
push
sbb
mov
ficomp
jmp
imul
fidiv
jl
nop
shr
ficomp
cmps
mov
dec
popf
out
loop
sbb
in
jecxz
(bad)
retf
mov
add
pop
and
stc
jp
inc
inc
cli
stos
and
aaa
aaa
push
out
mov
not
push
jecxz
inc
loopne
mov
sets
inc
inc
cmps
hlt
cmc
jmp
mov
ds
test
sti
into
and
sahf
mov
push
jbe
dec
xor
addr16
xchg
retf
(bad)
adc
loop
fistp
jno
cdq
outs
sti
xchg
out
add
xchg
data16
iret
jp
cmp
out
jo
mov
cmp
aas
call
mov
ret
pop
stos
mov
ret
shr
xchg
dec
rol
push
stos
xor
mov
adc
sbb
xor
cmp
pop
aam
iret
pop
pop
and
pop
std
sub
ja
and
xchg
xlat
xchg
xchg
mov
(bad)
dec
and
xor
cdq
add
mov
cli
and
dec
stc
scas
add
stos
sub
add
inc
jno
sti
das
jp
sbb
or
push
sub
retf
iret
mov
lock
out
xor
jmp
add
jno
(bad)
sbb
stc
cmp
and
lahf
fcmovnu
cmp
xchg
repnz
jmp
jae
repz
dec
out
jle
fidivr
iret
xor
xor
lds
mul
jl
push
mov
jne
ds
push
cdq
call
in
cli
dec
jg
shl
mov
pop
mov
push
test
fcom
ss
jne
cmp
ins
mov
pushf
xor
and
loop
push
cmp
or
test
ins
dec
mov
or
inc
mov
cmp
push
mov
add
jbe
aad
cmp
test
jmp
fst
inc
ror
or
push
mov
int3
mov
les
repnz
mov
mov
push
xchg
xor
imul
sub
cmp
mov
les
jl
add
pop
mov
popa
dec
aad
push
xchg
and
cdq
leave
adc
push
pop
add
add
push
ins
pop
int3
mov
xchg
dec
ret
or
sar
ficomp
or
icebp
nop
adc
stos
mov
scas
cmc
mov
loop
sub
cwde
sbb
repz
push
cmp
es
xchg
sbb
popf
push
mov
sar
div
pop
mov
fld
in
adc
add
sbb
mov
jl
loope
sbb
xor
(bad)
dec
call
in
push
sbb
xor
mov
pushf
xchg
pop
repz
out
fidivr
adc
cmps
inc
mov
dec
mov
retf
cmp
daa
daa
cmp
cmp
addr16
push
sbb
mov
mov
xor
scas
or
mov
shl
data16
test
and
imul
pop
test
mov
icebp
inc
scas
mov
cwde
fidiv
(bad)
and
and
iret
sub
or
ins
push
std
int
data16
xor
fild
movs
sahf
in
jnp
xor
loope
push
pop
push
and
test
pop
push
addr16
pop
xchg
in
pop
div
pop
mov
cmc
mov
pusha
pop
clc
mov
inc
arpl
fstp
test
or
in
jne
retf
and
and
sub
pop
sbb
add
imul
mov
add
sbb
mov
test
fst
xchg
add
xchg
imul
addr16
dec
cmp
cmps
jns
adc
addr16
aam
jecxz
dec
fcmovnbe
add
push
inc
mov
xchg
fdivr
mov
(bad)
rol
mov
inc
(bad)
(bad)
out
jnp
sti
test
repz
fwait
pop
gs
retf
xchg
popf
jns
fild
leave
push
push
pushf
jbe
add
pop
mov
mul
in
pop
sahf
into
shl
aam
jnp
lahf
mov
(bad)
jge
in
sahf
mov
pop
and
out
add
mov
cmp
mov
jae
fcom
(bad)
mov
push
push
add
push
inc
push
pop
sub
jg
je
movs
cmp
(bad)
loop
pop
jmp
jp
jno
in
cmp
clc
xchg
aaa
inc
bound
sbb
popf
mov
mov
mov
adc
xchg
inc
iret
cmp
sbb
xor
inc
stos
sub
call
and
shr
int
dec
sbb
movs
repnz
cwde
fisttp
pushf
fxam
add
sub
hlt
pop
sbb
retf
imul
dec
movs
ins
sahf
add
pop
adc
pusha
xor
pop
(bad)
pushf
sbb
adc
inc
mov
mov
add
sub
mov
cmps
cmc
sub
stos
jmp
gs
adc
xor
sub
sub
(bad)
into
je
punpcklbw
dec
jle
ss
xchg
mov
fmul
fsubr
add
not
fild
adc
add
add
sahf
mov
jl
fld
xchg
and
sbb
int3
cmp
sbb
shl
out
mov
sbb
cmp
mov
push
jecxz
mov
movs
es
add
adc
lds
enter
outs
fld
inc
repz
dec
bound
out
push
mov
into
add
cld
or
pop
mov
pop
sub
add
inc
jno
lea
fst
scas
add
call
sbb
mov
adc
out
scas
cmp
xchg
jmp
outs
(bad)
mov
int
das
or
lods
test
clc
je
add
loope
xor
pop
cmp
push
mov
or
jge
dec
push
push
fwait
jmp
mov
in
fstp
cs
dec
cmp
and
shl
daa
mov
fidivr
jns
jne
arpl
shl
popa
retf
je
fsub
pop
call
sbb
push
dec
cld
scas
pop
mov
jbe
or
jl
in
rcr
into
inc
mov
enter
cmp
inc
pop
ror
sahf
mov
mov
imul
shl
xor
mov
in
mov
xchg
push
mov
nop
movs
and
xchg
popf
ins
pusha
fimul
push
mov
xor
imul
ja
adc
mov
mov
aad
push
xor
aad
imul
sbb
(bad)
mov
dec
outs
repnz
in
loope
cmps
js
das
mov
pop
lock
sub
ins
mov
xor
inc
into
bswap
cmp
sub
adc
sbb
mov
jo
cmp
pop
sbb
(bad)
stos
std
inc
or
pop
sti
and
or
cmps
cmp
sub
stc
loope
mov
arpl
in
push
and
ins
mov
mov
mov
push
sub
test
je
xchg
in
iret
sub
lss
add
xchg
pop
push
pop
sub
scas
mov
xor
fild
mov
sbb
push
jge
inc
lea
push
xchg
and
sub
inc
out
inc
and
(bad)
aad
sbb
sub
pop
ins
out
add
cli
or
cli
lds
jp
mov
and
call
shr
add
int
retf
add
fwait
movs
inc
test
aaa
inc
adc
mov
jno
jb
mov
mov
lahf
mov
and
push
scas
call
jg
cmps
push
inc
mov
gs
cld
mov
fcomp
jne
es
ror
xchg
in
cmps
movs
xor
add
aas
sub
and
and
xchg
jae
or
xor
dec
shr
es
js
stos
ret
jmp
into
adc
sub
inc
or
jg
mov
and
xchg
or
popa
movs
jne
call
add
push
(bad)
inc
mov
mov
jmp
or
stos
rol
arpl
cli
jle
(bad)
(bad)
cmp
outs
call
ds
stos
cdq
daa
and
push
xor
in
ds
push
xchg
stos
pop
loop
cld
push
stc
adc
call
data16
or
jnp
(bad)
inc
inc
retf
inc
sub
or
shl
aas
push
retf
ja
test
cmp
jle
int
cmp
jmp
hlt
loope
sbb
adc
cmp
sahf
retf
out
out
fsub
iret
cmp
push
cmp
pop
(bad)
cld
into
or
out
mov
data16
mov
sub
adc
mov
mov
mov
sub
inc
jg
dec
or
mov
xchg
les
inc
scas
mov
pop
out
dec
pcmpeqd
(bad)
or
mov
lock
je
ss
hlt
jo
adc
pop
loopne
mov
fwait
sub
dec
ins
mov
cmp
push
fild
out
cs
ds
add
fadd
mov
fld
dec
clc
(bad)
xchg
push
movs
ja
leave
push
or
xchg
out
sub
inc
pop
dec
add
mov
xor
imul
jne
or
lods
icebp
cmp
sbb
fcmovb
jecxz
fiadd
jmp
cwde
test
sub
call
and
xchg
xchg
adc
ret
lahf
mov
repnz
or
fs
push
mov
enter
fstp
sbb
cmps
into
out
inc
mov
(bad)
fsub
adc
and
lods
gs
xor
add
sub
inc
aas
ret
mov
aad
enter
push
or
sub
mov
cmp
inc
mov
test
mov
and
xor
test
push
inc
popf
jmp
(bad)
hlt
jmp
sub
mov
cmp
pop
stc
imul
(bad)
push
es
sbb
dec
shr
fwait
mov
jns
cmp
cld
es
scas
mov
movs
push
imul
push
ins
into
dec
and
mov
pop
xor
jbe
push
dec
dec
sub
mov
cdq
push
leave
xchg
cwde
cmps
xchg
or
push
add
sar
sbb
dec
pop
retf
add
popa
iret
mov
movs
mov
(bad)
icebp
repz
int3
push
xchg
stos
pop
adc
gs
test
inc
jecxz
adc
shr
daa
ds
push
idiv
inc
nop
repz
arpl
inc
pop
mov
dec
mov
mov
movs
imul
mov
rcl
jbe
push
xchg
hlt
cld
cmp
pop
ja
jl
push
jnp
loopne
pop
fsubrp
test
sub
int3
add
jno
shl
clc
jl
add
mov
fwait
inc
call
icebp
fcmovbe
mov
nop
dec
fs
inc
cmp
pop
pop
out
sbb
lea
repnz
add
xchg
mov
mov
sub
dec
push
cmc
js
fstp
repz
cmp
dec
push
sbb
mov
stos
aad
bound
popa
in
test
or
and
sbb
dec
fstp
in
in
mov
icebp
xlat
dec
mov
clc
mov
nop
adc
mov
jne
sub
pop
mov
adc
outs
push
xor
pinsrw
inc
(bad)
dec
jns
into
cmp
and
jmp
out
loope
xor
inc
push
in
push
daa
push
repnz
jmp
xchg
call
or
adc
mov
aas
jnp
lods
mov
mov
push
jecxz
adc
add
adc
jl
fxch
mov
xchg
fchs
dec
outs
dec
sbb
xchg
sbb
pusha
(bad)
les
inc
mov
and
mov
hlt
outs
stc
sub
xor
adc
stos
pop
push
adc
rol
rcl
fdiv
call
lahf
sbb
jno
jp
mov
data16
aam
sub
adc
dec
push
fmulp
arpl
inc
push
or
repnz
add
inc
es
(bad)
adc
dec
dec
pop
xchg
add
jns
call
jnp
pop
lods
dec
inc
in
mov
mov
ret
call
aas
scas
mov
inc
int
fiadd
lea
cmp
fwait
add
sbb
lds
(bad)
ins
push
rol
push
and
push
fsub
mov
cld
jb
stos
scas
retf
adc
(bad)
push
cs
pushf
dec
loope
fldcw
mov
mov
hlt
shr
add
into
adc
hlt
popa
cmp
mov
sbb
cmovbe
push
jb
rcr
mov
pop
sub
ins
cli
push
clc
add
inc
aam
or
sahf
adc
sub
jae
cmp
aaa
inc
pop
sbb
in
gs
xchg
mov
jg
push
cmps
js
pop
pop
or
pop
retf
adc
or
ret
add
stos
inc
movs
mov
movs
inc
cmp
mov
sub
sbb
pop
pop
xchg
xchg
xor
jecxz
call
dec
(bad)
cdq
xlat
aad
or
mov
das
ins
jl
jge
sbb
test
push
mov
inc
push
cmp
mov
sub
sti
mov
pop
ret
je
cmp
mov
ret
push
das
pop
cmps
pop
mov
lods
loop
in
xor
push
shr
mov
movs
sbb
(bad)
lods
loope
add
mov
jg
hlt
or
push
inc
mov
pop
shr
jno
test
dec
nop
and
sar
jecxz
jge
xor
mov
xchg
pusha
push
inc
jns
inc
xchg
fsub
and
pushf
sbb
sub
es
out
ret
adc
in
(bad)
sbb
add
lea
dec
nop
push
xchg
mov
repnz
out
daa
adc
sub
test
shl
repz
sub
hlt
outs
cmp
iret
call
inc
in
mov
mov
push
ror
add
jecxz
shl
sub
or
movs
js
lods
cdq
lea
inc
fcomip
sbb
jae
dec
repnz
dec
retf
push
pop
sub
lods
cmps
xlat
xchg
fist
cwde
sbb
clc
inc
dec
xchg
adc
or
mov
pop
dec
das
je
add
fsubr
mov
mov
pop
xor
xchg
jo
(bad)
ja
sbb
movs
js
in
(bad)
inc
daa
enter
in
movs
lods
inc
push
dec
and
sbb
xor
imul
push
fbstp
mov
aam
mov
or
shr
rol
dec
outs
mov
test
lods
in
fnstcw
jg
cs
add
int3
inc
data16
pavgb
test
jmp
adc
and
cmps
jmpw
or
dec
add
cmove
xchg
mov
shl
jg
cmps
(bad)
cli
jmp
popf
je
and
jle
shr
fnstenv
call
xchg
adc
into
mov
popf
pusha
xor
mov
jp
cld
jg
jmp
xchg
xor
pusha
push
mov
or
and
xchg
xor
pop
sbb
je
retf
pop
mov
xor
jle
iret
cmps
(bad)
scas
ss
adc
mov
dec
icebp
xchg
(bad)
movs
fldcw
add
loop
pop
push
rcl
xor
dec
cmp
jo
adc
mov
ins
je
test
and
cmc
popa
and
or
ret
xchg
hlt
lea
jmp
jp
cli
(bad)
popf
arpl
fadd
(bad)
and
xchg
lock
inc
retf
arpl
rcr
nop
pop
push
ins
cmc
xchg
std
xchg
sti
cmp
pop
fyl2xp1
cmp
xchg
sbb
jmp
pop
pop
xor
cmp
jle
out
push
inc
inc
xor
jo
xor
fbld
lods
bound
dec
or
cmps
xchg
call
and
dec
sub
std
in
jl
mov
dec
sub
pop
sbb
xchg
test
inc
fldenv
mul
fnstenv
cmps
or
in
leave
push
pop
adc
shr
and
jae
push
pop
(bad)
icebp
mov
hlt
cmp
sbb
inc
pop
arpl
into
cmps
(bad)
stos
push
jmp
mov
loopne
mov
cmp
es
push
jge
retf
mov
mov
rcl
cld
jnp
sbb
sti
jae
mov
lahf
movs
dec
rcr
shr
push
inc
dec
push
mov
jmp
mov
push
mov
loopne
(bad)
xor
out
adc
movs
jmp
cli
mov
mov
add
xchg
sbb
fcom
sar
jl
loopne
cmp
add
lock
xor
push
(bad)
ins
lods
pop
pop
std
pop
adc
mov
(bad)
xor
int3
and
ins
xor
add
xchg
scas
jbe
ret
xor
mov
xchg
and
and
mov
sub
and
or
add
mov
pop
jno
std
mov
inc
ins
push
test
dec
ret
jne
imul
add
scas
mov
mov
dec
aam
les
pop
call
mov
ja
cwde
xchg
test
push
xchg
fnsave
mov
addr16
into
call
mov
push
mov
leave
cmp
adc
xchg
lock
add
jg
cmp
(bad)
xor
sub
fdivrp
mov
sbb
xchg
jae
in
xchg
push
sbb
es
push
add
cmp
xor
test
inc
adc
jl
sbb
push
xor
mov
xor
xor
mov
aam
xchg
pop
cmps
jmp
jmp
mov
pop
div
das
mov
push
sbb
iret
cmps
js
and
retf
daa
sub
aas
cld
out
mov
imul
loopne
cmp
xchg
in
xor
mov
sbb
jle
lock
movs
or
in
nop
mov
mov
or
lock
xchg
jb
or
jl
sbb
imul
xor
mov
cwde
mov
out
xchg
test
mov
outs
adc
mov
dec
xor
vmread
js
std
xor
loope
mov
sbb
retf
in
fsubr
jmp
jmp
out
retf
mov
call
sbb
sbb
jl
add
not
push
cdq
dec
xor
inc
(bad)
fmul
adc
or
push
ror
imul
iret
mov
jbe
mov
cli
psllq
ins
dec
out
lock
sub
fisttp
push
sub
xchg
repnz
(bad)
sbb
dec
ins
add
mov
ret
pop
inc
add
ret
inc
adc
repnz
and
push
aas
jmp
sbb
cs
ja
or
pop
mov
push
not
cmp
pop
mov
add
pop
call
fcos
ss
adc
mov
jne
fisub
adc
or
push
pusha
ror
shr
ja
jnp
xlat
in
push
push
(bad)
repz
sbb
retf
xor
pop
retf
push
sub
imul
add
ja
ins
ss
scas
shl
mov
ins
or
ds
sbb
dec
stos
out
sahf
cli
adc
cdq
mov
pop
jnp
or
xchg
daa
(bad)
mov
xchg
and
inc
cmp
cwde
nop
ds
(bad)
scas
sub
adc
ds
push
fsubr
mov
xchg
les
daa
movs
mov
inc
sar
(bad)
ds
jg
push
or
sub
inc
test
mov
and
stc
cli
pop
stos
add
scas
mov
push
xor
jg
adc
jg
popa
js
inc
dec
jecxz
arpl
ds
adc
sbb
std
cs
jns
fadd
mov
outs
retf
push
push
clc
es
cmp
cmc
pop
push
mov
sub
jnp
sbb
addr16
xor
push
push
mov
maxps
cmp
popa
push
fisttp
push
pop
loopne
xchg
out
jbe
dec
fnstcw
int
jp
repnz
inc
sub
ror
loope
rcl
stos
xchg
lock
aam
push
stc
xchg
jmp
push
loop
xor
call
mov
lods
in
(bad)
mov
cmps
mov
pop
mov
test
mov
adc
cld
aas
cmps
rcr
mov
dec
rcl
inc
(bad)
adc
pop
xchg
add
sbb
xchg
jle
dec
aaa
gs
jl
jl
or
outs
int3
mov
jo
bound
cwde
bound
retf
icebp
jge
cmc
mov
lods
shr
imul
jo
scas
jl
stos
fs
cmp
push
int
inc
jg
and
push
aaa
xlat
push
adc
fisubr
ja
pop
arpl
push
mov
dec
inc
dec
aas
cmp
adc
mov
rcl
into
dec
imul
imul
ds
pop
hlt
jle
pop
(bad)
lods
inc
sbb
and
icebp
inc
or
mov
mov
test
test
sar
je
movs
mov
movs
xchg
cdq
mov
adc
mov
inc
stos
pop
sahf
mov
stos
xor
adc
fs
out
or
test
xchg
ins
or
jns
test
ret
fidiv
mov
and
pop
aad
(bad)
mov
jae
test
jnp
stos
jne
sub
cmp
mov
pop
pop
loope
or
bound
pop
and
adc
rcl
cwde
push
inc
push
cli
out
and
mov
mov
fiadd
lock
sbb
sub
adc
jns
xchg
jmp
rcr
pop
jg
mov
mov
dec
dec
add
adc
test
mov
jge
adc
xchg
popf
and
fld
in
fbld
retf
fs
sub
ficomp
inc
add
sub
cmovne
push
gs
jmp
cld
cmp
repnz
inc
dec
sub
mov
lahf
sbb
jge
retf
fiadd
pop
shr
or
cmp
enter
ror
dec
dec
scas
mov
mov
add
xlat
jmp
push
out
and
sub
repz
cmp
add
in
pop
(bad)
dec
add
and
movs
scas
(bad)
test
mov
jg
mov
cmps
loope
dec
packsswb
adc
jbe
scas
jno
cmp
push
mov
adc
arpl
sti
and
sbb
neg
ss
jne
addr16
aas
jp
arpl
out
cmps
mov
or
dec
(bad)
addr16
mov
hlt
push
out
inc
xchg
outs
jecxz
adc
cmps
cmp
stos
pop
loopne
aam
or
cld
xor
push
popf
mov
or
sbb
test
sub
loopne
clc
addr16
fwait
mov
stc
xchg
loop
jmp
imul
dec
xor
(bad)
cmp
(bad)
jnp
adc
out
out
lods
adc
enter
sar
shr
enter
sbb
das
cmp
push
sti
inc
cmp
retf
add
cmp
inc
stc
mov
ins
push
and
adc
das
mov
adc
sahf
scas
jae
cmp
fld
pop
ins
jmp
pop
pushf
fist
xchg
test
and
test
pushf
cmps
push
sbb
push
sub
mov
xor
mov
jbe
push
and
and
mov
add
(bad)
shr
mov
adc
out
dec
dec
adc
xchg
xor
scas
xchg
mov
ins
icebp
pop
(bad)
rcr
js
dec
repnz
mov
jae
sbb
lods
mov
rcr
xor
dec
sbb
mov
dec
push
loope
ret
add
cli
dec
in
mov
or
in
push
mov
mov
jnp
sbb
ret
inc
add
cdq
mov
mov
imul
int3
test
mov
pop
push
cli
xchg
xchg
fwait
pop
cwde
leave
retf
repz
push
cmc
fisttp
add
sub
mov
mov
(bad)
(bad)
out
ja
pusha
inc
push
mov
adc
fild
mov
mov
cmp
mov
lock
mov
(bad)
xor
inc
mov
call
fisttp
(bad)
into
xlat
or
lahf
mov
and
inc
fcom
retf
in
mov
gs
inc
xchg
sbb
xchg
aad
call
lods
test
movs
cdq
adc
cmps
nop
push
popa
aad
jns
fmul
jnp
cmps
push
ffree
jmp
mov
inc
fwait
cmps
inc
je
and
sub
aad
fnsave
mov
shl
adc
loopne
jp
mov
fcomp
(bad)
pop
or
xchg
call
iret
add
mov
int
sar
mov
push
adc
lods
pushf
fldenv
sbb
cmc
fs
loopne
dec
inc
pop
mov
xchg
mov
enter
popf
dec
cs
dec
out
(bad)
pop
(bad)
scas
inc
or
mov
jmp
sbb
leave
fadd
shl
jns
aas
rcl
ficomp
fdivrp
test
inc
jmp
xlat
in
mov
pop
jecxz
dec
pop
fild
(bad)
fstp
pop
and
int3
stc
inc
inc
sub
mov
inc
lahf
jge
dec
cmp
arpl
dec
je
enter
xor
xor
inc
inc
mov
mov
or
cld
dec
fistp
hlt
call
pop
sub
clc
dec
loopne
and
dec
mov
ret
lods
pusha
cli
rol
xlat
enter
shl
dec
call
or
or
and
jl
mov
inc
es
mov
mov
fist
xchg
jbe
mov
pushf
push
ds
fisubr
add
(bad)
push
sbb
fadd
mov
or
dec
push
and
push
fst
aas
popf
pop
loop
rol
out
xor
aaa
scas
inc
mov
jp
es
mov
mov
repnz
jge
add
mov
push
iret
xor
(bad)
xlat
and
stos
add
inc
(bad)
clc
ins
sub
push
dec
mov
loop
inc
adc
mov
dec
adc
aam
mov
ret
les
mov
rol
mov
ficomp
and
scas
(bad)
cli
ins
stc
dec
lds
ror
cmp
inc
mov
hlt
and
adc
adc
popa
jge
dec
movs
sub
and
icebp
adc
inc
xchg
hlt
aaa
repnz
sub
jmp
scas
pop
stos
dec
inc
dec
cmp
mov
fsub
int
mov
repz
add
push
sbb
xchg
hlt
adc
(bad)
test
lock
stos
sbb
call
jne
sub
inc
push
add
xor
inc
jb
js
mov
jge
add
cmps
dec
mov
scas
sub
sub
imul
jmp
lock
jne
jmp
ins
jo
cwde
lahf
int3
mov
mov
pushf
arpl
push
mov
and
cmc
int3
xlat
nop
dec
loope
jo
or
push
mov
sbb
mov
mov
iret
mov
jmp
push
pushf
lods
ja
pop
inc
inc
int
jge
arpl
xlat
adc
fld
cs
shl
in
or
mov
int
out
push
int
movs
call
int
inc
cs
jne
add
lahf
mov
or
inc
dec
iret
shl
lds
shr
or
(bad)
dec
fisub
mov
pop
xchg
jns
out
test
pop
inc
sbb
std
inc
lahf
cwde
adc
in
adc
push
movs
cmps
jns
adc
ins
in
pop
aam
shr
adc
sbb
and
or
push
adc
push
push
or
test
xor
es
push
dec
cmps
mov
push
sub
jge
xor
scas
xchg
fcomp
fldcw
push
stc
cli
and
jbe
pop
pop
pop
mov
pop
retf
clc
sbb
jg
and
sub
mov
fisttp
inc
out
xor
push
imul
xchg
jge
xchg
mov
and
sub
mov
cwde
icebp
mov
out
pop
xchg
and
push
out
lods
xor
mov
(bad)
cmp
loop
and
or
jge
ret
sbb
push
add
sbb
adc
dec
or
mov
out
mov
je
xchg
jno
ss
arpl
popa
int3
sub
dec
cmc
pop
dec
ret
aas
dec
jmp
push
call
dec
test
mov
arpl
jae
imul
rol
imul
call
cld
mov
jmp
inc
jo
test
xor
popf
sub
and
and
lock
retf
stc
ror
xor
inc
into
dec
hlt
fs
adc
sti
gs
arpl
cmc
xchg
xor
push
inc
mov
mov
mov
nop
push
lds
jl
adc
div
or
shr
imul
or
pop
arpl
scas
mov
test
sub
aaa
cmp
add
dec
dec
jmp
dec
fldcw
ror
cmp
(bad)
adc
jp
daa
outs
dec
ds
cmp
pop
jl
iret
push
or
fisubr
stc
jp
mov
je
jecxz
cmc
fcmovu
inc
cmp
mov
mov
fdiv
jge
int3
lds
jno
fst
inc
test
fiadd
movs
in
add
stos
xchg
mul
sub
inc
xchg
lods
(bad)
cmp
pop
icebp
mov
mov
push
jno
jl
shl
test
push
xchg
push
fs
in
mov
add
jmp
jge
pushf
in
js
jp
and
pop
fmul
repnz
push
je
mov
push
lahf
stc
jns
pushf
jg
retf
dec
mov
xor
adc
cld
mov
push
hlt
mov
sar
xor
jne
sub
out
mov
aaa
lods
popa
cmp
xchg
idiv
dec
les
pop
mov
adc
fmul
out
scas
pusha
fiadd
sti
(bad)
xchg
and
push
idiv
repz
je
sub
xor
mov
out
jg
stc
or
in
jns
mov
in
cmps
rcr
loop
push
rcl
lods
mov
call
push
ret
fnstcw
mov
inc
fisub
cmp
jb
jns
mov
or
hlt
mov
leave
sbb
pop
push
mov
data16
adc
ja
push
ss
cmp
mov
and
cld
lods
gs
pop
cli
jl
(bad)
jg
cmps
bound
or
cmp
mov
sub
cs
shr
cmps
xchg
test
mov
jmp
sbb
mov
ds
mov
pop
iret
int
stos
aas
and
fistp
(bad)
xlat
aam
mov
xchg
data16
stc
imul
adc
cld
mov
int
push
hlt
xor
sbb
xlat
cwde
pop
sub
ds
inc
stos
popf
adc
into
push
in
ror
cdq
nop
dec
mov
mov
rcl
or
pop
outs
mov
push
into
push
sbb
inc
ror
std
sub
sti
inc
xchg
call
scas
dec
in
push
outs
push
cmps
movs
scas
or
xor
mov
(bad)
lods
inc
sar
xchg
mov
ror
cmp
sti
sub
fild
jnp
es
mov
cmp
xchg
ins
inc
mov
les
scas
into
ret
clc
mov
xchg
dec
outs
dec
cmps
adc
mov
sar
push
cmp
and
ficom
loop
or
xor
dec
es
mov
pop
push
movsx
xor
pop
jns
jb
mov
into
dec
mov
ins
or
sub
mov
cld
ja
jo
and
xor
xchg
inc
push
xor
push
and
inc
cmps
sti
inc
jne
jmp
sbb
or
out
sub
lods
sahf
int
mov
add
sbb
dec
xor
outs
into
loopne
lods
mov
call
rcl
and
jp
dec
add
(bad)
jl
addr16
call
sti
nop
mov
mov
xor
popf
push
push
test
or
hlt
sub
retf
inc
fbld
adc
inc
(bad)
fucomip
retf
cmp
dec
jno
mov
enter
fnstsw
hlt
pop
push
enter
mov
scas
or
push
add
jbe
jns
dec
push
inc
and
pop
push
enter
and
jns
mov
in
pop
xor
adc
sahf
dec
cmp
push
clc
inc
stos
push
jo
popf
pmulhuw
lods
aas
add
jns
test
int3
sbb
arpl
cld
sbb
fwait
push
jecxz
call
imul
inc
in
test
jb
mov
ret
jmp
jmp
out
cli
icebp
sahf
or
movs
scas
add
push
sub
out
test
adc
into
inc
out
push
cli
bound
mov
pop
jg
mov
test
push
retf
leave
mov
pop
loopne
xor
dec
je
cmc
(bad)
sti
(bad)
neg
jmp
pop
leave
dec
inc
fmulp
addr16
sbb
or
mov
jno
sbb
sti
or
cdq
add
pop
push
lods
pop
cmps
mov
mov
into
adc
iret
in
jmp
pop
xor
cmp
int3
dec
xchg
enter
and
jb
mov
sub
inc
pop
add
nop/reserved
mov
sti
dec
adc
mov
dec
es
cwde
mov
loopne
loopne
ss
sub
jmp
or
in
hlt
frstor
jle
sbb
mov
loop
les
rol
repnz
movs
lods
push
(bad)
cmp
outs
xchg
fst
pop
push
adc
retf
xor
repnz
sbb
lds
mov
cmc
mov
js
push
mov
and
cmc
mov
push
inc
sbb
jnp
test
jecxz
jmp
mov
xchg
adc
sub
or
jg
jecxz
popa
jmp
(bad)
cdq
cdq
inc
mov
mov
repnz
das
aam
jnp
sar
out
aam
dec
test
mov
mov
scas
out
cmps
arpl
cmp
mov
pop
retf
sbb
sub
inc
or
mov
pop
retf
xlat
xchg
jbe
call
ret
fstp
and
xor
cld
push
ins
gs
xchg
mov
mov
(bad)
or
out
sbb
(bad)
mov
jne
xchg
in
pop
les
push
dec
scas
mov
or
push
jecxz
mov
into
(bad)
shr
pop
neg
jge
aaa
call
fsubrp
les
jmp
adc
xchg
xlat
mov
or
(bad)
fcom
addr16
(bad)
imul
ins
loop
repnz
pop
pushf
push
and
jns
cmps
test
sbb
scas
pop
int3
inc
mov
dec
sub
push
std
loopne
(bad)
mov
lahf
adc
jg
inc
cmp
mov
sbb
mov
pop
movs
and
pop
cs
nop
sti
enter
ss
cmp
clc
mov
adc
mov
mov
test
inc
xor
jp
fidivr
dec
and
or
in
aam
xchg
mov
sbb
je
or
push
xor
scas
outs
fldenv
addr16
pop
not
add
sahf
mov
loop
mov
ins
movs
test
icebp
mov
xor
dec
ss
or
leave
(bad)
cmp
das
js
movs
xchg
cmp
arpl
cmp
inc
jb
sahf
and
pushf
cmp
cmp
inc
or
jne
cli
pop
xchg
xchg
cmps
xchg
loop
add
gs
xchg
sahf
pop
cmps
bound
and
mov
addr16
pop
push
ja
xchg
outs
sti
dec
mov
lea
mov
push
fwait
pop
std
push
enter
push
sar
cwde
push
and
adc
(bad)
pop
sbb
ror
and
mov
pop
js
je
ret
push
enter
and
in
ins
imul
ror
inc
dec
repnz
cdq
xchg
cmp
or
pop
inc
dec
mov
popf
fs
add
dec
movs
dec
faddp
mov
xchg
nop
scas
mov
popa
dec
test
sbb
mov
xor
or
add
mov
ins
cmp
push
lahf
jnp
cmps
sbb
adc
fistp
cmp
std
sbb
clc
pop
push
inc
rcr
ffree
es
add
clc
or
pop
add
mov
sub
in
daa
sbb
dec
pushf
adc
gs
loop
mov
jp
aas
jns
sub
mov
mov
mov
enter
in
mov
jbe
imul
arpl
sbb
repnz
sub
mov
add
jp
jmp
xchg
jne
repnz
pop
sub
push
leave
and
sti
jae
and
ins
push
or
mov
xchg
pop
fwait
mov
dec
enter
mov
lds
in
imul
dec
scas
imul
pop
mov
pop
dec
push
adc
and
rcl
aaa
mov
adc
xor
retf
pop
adc
ja
mov
and
lods
fstp
test
lods
pop
xchg
cs
mov
out
add
inc
cld
sti
sahf
sub
push
xor
ror
adc
push
and
push
jmp
jb
mov
ficomp
dec
cmps
ret
cmc
xor
test
test
cmc
sbb
movs
test
fwait
adc
sub
pop
cs
sar
xchg
pop
call
lds
stos
clc
dec
push
xor
dec
push
and
jnp
mov
xchg
and
mov
mov
(bad)
cmps
in
adc
(bad)
and
add
leave
sti
or
sar
and
in
ins
sbb
repz
fwait
ret
mov
test
jecxz
sub
test
jnp
daa
add
scas
dec
jp
cmp
cwde
cmp
iret
inc
addr16
fist
sbb
jne
fadd
sub
ficomp
jbe
sub
adc
sub
adc
fist
mov
popa
nop
clc
push
push
xor
enter
mov
dec
scas
pop
out
push
sbb
mov
in
out
adc
jb
call
idiv
cmp
mov
int3
movs
loope
adc
sbb
aad
imul
pop
jo
mov
jno
add
sahf
sbb
add
inc
scas
mov
pop
sub
lock
add
jae
inc
stc
pop
in
sub
pop
fwait
sbb
mov
inc
mov
fucom
leave
aas
rcr
fwait
mov
loop
pop
mov
inc
movs
xchg
jb
adc
lea
push
aas
jo
mov
cmps
xor
or
imul
jge
loopne
push
mov
sub
mov
orps
out
call
lods
std
icebp
jae
cmc
in
jmp
adc
xor
mov
jmp
push
sbb
fnsave
fsubr
mov
fdivr
lods
std
pop
sbb
stc
push
cmc
push
(bad)
loop
and
xor
int
or
mov
mov
mov
dec
xchg
les
jge
mov
push
(bad)
stc
mov
jg
aaa
jb
dec
inc
push
mov
aaa
jecxz
xor
imul
mov
pushf
xchg
cmp
jae
xchg
stc
ror
mov
and
push
pusha
pop
mov
(bad)
mov
xchg
mov
xor
pusha
cmp
cmps
(bad)
inc
daa
ss
ins
popf
cli
push
into
dec
add
add
xchg
sbb
(bad)
sub
icebp
(bad)
inc
and
call
jle
xor
sub
adc
jnp
sub
ret
mov
xchg
mov
cwde
add
push
xchg
cmc
jne
jmp
cmp
push
jne
cmp
movs
xlat
xchg
push
xchg
je
xor
fadd
stos
aad
loop
aam
or
cmp
cmp
mov
dec
push
push
je
aad
xchg
jle
cmps
push
mov
dec
hlt
push
sub
xchg
fidivr
push
jp
test
rcr
rcr
ins
sub
cs
scas
and
sbb
xchg
loopne
sub
adc
aad
add
mov
add
pop
test
hlt
das
and
sbb
shr
ror
mov
out
pop
fisub
push
nop
jmp
jmp
lods
(bad)
daa
sbb
cmp
fmul
and
sub
xor
ja
push
push
cmp
dec
add
call
call
sub
sub
enter
add
lods
jl
dec
pop
data16
jecxz
mov
mov
jp
or
cwde
mov
or
and
es
scas
icebp
stos
xchg
das
or
mov
lods
rol
test
adc
cmc
mov
pop
retf
inc
mov
cmp
icebp
test
in
(bad)
ds
dec
loope
xor
fiadd
and
sbb
add
xchg
lods
dec
or
test
mov
pop
es
sub
psubq
lahf
or
inc
push
(bad)
push
pop
add
loop
dec
sub
and
xchg
loope
test
rep
sub
adc
jmp
imul
je
mov
fistp
pop
iret
mov
mov
sub
push
outs
(bad)
pop
mov
push
cli
mov
push
scas
sbb
xor
push
push
je
add
sub
cwde
mov
adc
dec
ret
mov
push
cli
pop
test
pop
sahf
inc
or
pop
sbb
std
jns
bound
mov
add
adc
jnp
mov
aaa
fwait
outs
mov
push
and
popa
loopne
xchg
dec
pop
loopne
inc
int3
arpl
test
call
push
movs
xchg
mov
sub
mov
xchg
fist
add
mov
int
xor
jge
adc
repz
(bad)
push
sub
retf
call
or
jo
(bad)
xor
mov
push
scas
jmp
dec
(bad)
jne
stc
in
mov
sbb
shl
jp
(bad)
std
repnz
push
adc
xor
mov
jb
push
sysexit
cmc
cmp
int
ss
push
in
mov
imul
rol
fistp
mov
dec
xor
jle
stos
fcmovnu
fwait
mov
out
ins
mov
rol
mov
aas
lea
mov
(bad)
jecxz
mov
xchg
cwde
mov
mov
mov
pop
or
xchg
jg
pop
or
xlat
inc
je
sahf
dec
in
xor
jp
cs
js
cli
not
sbb
xor
cmp
dec
movs
push
jns
jne
mov
sbb
push
jle
and
bound
xor
mov
jnp
test
(bad)
popf
adc
sbb
rcr
push
cdq
mov
push
ins
jo
sub
ror
mov
aas
sbb
sub
int
mov
paddsw
mov
adc
xor
pop
mov
(bad)
inc
inc
or
mov
stos
ds
ins
fcomip
movs
les
jbe
cmp
dec
push
push
hlt
movs
ins
or
sar
sbb
(bad)
int3
mov
mov
dec
into
stos
pop
mov
cld
dec
fld
ins
xor
(bad)
mov
push
shl
pop
(bad)
out
aas
mov
lock
adc
in
mov
stc
dec
fwait
mov
mov
sub
cmp
out
mov
cwde
dec
cmp
popf
stos
dec
and
inc
mov
dec
pop
out
sti
aaa
cdq
add
pop
aaa
push
out
ins
fst
adc
out
test
adc
movs
movs
or
jns
loopne
xor
fist
and
pop
mov
push
fcom
jo
call
call
mov
das
loop
outs
aad
jmp
out
inc
into
int
in
xor
(bad)
in
pop
test
retf
movs
lock
xor
arpl
push
lock
jle
int3
inc
in
pop
mov
and
leave
pop
popf
and
push
sti
mov
mov
sub
sbb
ins
mov
aaa
loope
mov
pop
jbe
clc
cmp
or
sti
pop
fwait
sub
xor
add
jnp
push
inc
sbb
dec
push
lods
pop
inc
leave
leave
xchg
xor
cmp
int
clc
pop
mov
loope
mov
jnp
scas
cmp
xchg
fstp
add
mov
adc
imul
cmps
and
sub
ret
fimul
jl
and
inc
iret
iret
ret
mov
stos
and
or
clc
mov
xor
jmp
dec
stos
xor
or
and
jecxz
and
mov
ret
or
adc
imul
add
and
pop
jge
scas
lods
int
nop
mov
in
mov
or
add
sub
test
ret
gs
push
movs
in
mov
test
xor
push
(bad)
and
inc
push
cmp
dec
ins
xchg
jmp
mov
dec
gs
(bad)
xchg
call
fidivr
jge
and
mov
push
loop
cmps
add
faddp
pushf
les
movs
into
cmc
add
mov
pop
sub
xor
pop
cmp
loopne
mov
sar
add
xlat
jmp
cmps
les
cmps
sub
pop
cdq
cli
cmp
cmps
jp
sbb
and
add
add
dec
adc
outs
and
dec
push
mov
test
add
mov
xchg
cmps
test
and
ins
xchg
mov
imul
pop
add
mov
sub
or
or
jns
mov
inc
cli
push
pop
repnz
fwait
shl
aas
cmp
pop
xor
ret
(bad)
fwait
iret
stos
inc
mov
adc
bound
mov
jb
mov
inc
add
xor
xor
(bad)
out
cwde
push
cdq
gs
jb
loope
out
jns
jmp
jo
(bad)
(bad)
retf
mov
xor
outs
sbb
scas
push
pop
cwde
aaa
add
push
pop
test
inc
sub
sub
mov
jns
ret
sbb
mov
iret
fs
mov
enter
loop
push
icebp
pop
gs
mov
enter
xchg
adc
dec
leave
out
addr16
add
inc
icebp
add
xchg
xor
jg
push
jb
jmp
pop
jg
jp
ins
arpl
inc
into
push
jl
push
and
je
ret
pushw
(bad)
fucomi
push
js
out
push
sub
inc
lahf
call
and
sbb
rcr
mov
mov
mov
cmp
add
mov
adc
inc
rcr
dec
xor
mov
inc
cli
adc
sbb
(bad)
cvtps2pd
jecxz
xor
(bad)
lahf
in
mov
mov
ins
xor
pop
cld
xor
into
or
out
add
dec
and
mov
sbb
jg
push
jnp
push
push
std
and
xchg
pushf
int3
push
push
test
gs
inc
test
(bad)
fidiv
arpl
fs
into
pushf
mov
sar
out
ds
pop
cdq
retf
call
jle
or
ror
add
fadd
sti
ins
jo
stc
or
je
int
js
mov
dec
cmp
push
sbb
mov
adc
or
or
ss
mov
jmp
xchg
mov
pop
dec
fwait
nop
cmps
inc
push
xchg
and
sar
add
loopne
outs
or
mov
mov
cmp
scas
jecxz
pop
pop
(bad)
movs
push
jne
pop
xchg
pop
daa
add
sbb
mov
jmp
loopne
movs
add
sbb
push
xchg
arpl
and
dec
push
sbb
lds
push
jl
or
push
fwait
out
xchg
sar
out
or
xor
jbe
es
int
mov
jbe
dec
pop
or
mov
out
or
push
xor
int
xchg
jo
pop
cwde
jns
cmp
push
cmp
in
ficomp
ret
jne
das
in
fisubr
sub
stc
jmp
mov
dec
push
pop
imul
std
add
call
fcom
scas
jge
scas
cmps
mov
pop
aam
xor
cmc
sahf
cmps
in
bound
jg
mov
mov
jl
sbb
jns
mov
ins
ja
jbe
out
fcomip
nop
fadd
cmp
and
imul
pusha
fcmovnb
std
push
sahf
inc
std
jno
scas
inc
loope
jae
xchg
cmp
jp
aas
sub
in
inc
(bad)
push
inc
rol
aaa
sub
jmp
mov
nop
xchg
add
pop
mov
dec
xchg
test
repnz
dec
sbb
(bad)
and
test
mov
outs
test
fsub
and
xor
clc
popa
add
iret
jge
fstp
cmp
mov
mov
mov
lds
sbb
and
cli
int3
mov
pop
add
cmp
add
div
push
leave
(bad)
ins
push
sub
pop
out
add
xchg
inc
icebp
adc
or
dec
cmps
push
xlat
mov
aas
mov
add
mov
cmp
sar
pushf
mov
cmp
and
mov
push
add
retf
xor
xor
ja
and
pop
cdq
(bad)
pop
bound
outs
iret
mov
ins
nop
mov
sub
mov
inc
retf
scas
adc
pop
mov
sbb
adc
sub
rcr
movs
idiv
cmp
sti
dec
je
out
mov
les
lds
shufps
jmp
push
mov
inc
mov
hlt
bound
push
scas
loop
mov
xchg
adc
dec
pop
mov
std
push
mov
les
mov
jns
aam
jg
dec
int3
aas
int
xchg
push
shr
jbe
sti
jmp
data16
pop
xchg
jbe
jns
inc
xor
jno
ret
cmc
pusha
or
retf
mov
mov
lea
xlat
pop
push
sar
ins
xchg
dec
add
mov
mov
arpl
imul
gs
(bad)
mov
pop
sub
jns
arpl
push
std
dec
ret
ffree
cmc
mov
cmp
sbb
inc
idiv
dec
aad
nop
pop
mov
out
movs
and
movs
push
inc
xchg
shl
jb
daa
mov
fs
int
adc
dec
out
not
cmp
std
xlat
push
retf
inc
sbb
pop
pop
cs
(bad)
and
dec
in
cmp
cmp
repnz
xchg
js
pop
sar
cmp
add
dec
sbb
ror
push
icebp
popf
shr
dec
sbb
(bad)
push
mov
inc
in
idiv
(bad)
cld
pop
xor
popf
mov
fdiv
jno
add
dec
inc
pop
test
pop
mov
repnz
call
cld
xchg
sbb
sub
xor
(bad)
loope
mov
cmp
sbb
clc
retf
out
ret
mov
fiadd
mov
jae
adc
shr
mov
jae
lahf
aas
add
mov
bound
cmc
in
fisubr
xchg
nop
xchg
cwde
adc
rol
pop
jle
adc
fsubr
dec
call
xor
mov
arpl
and
mov
jns
ret
sub
mov
mov
sub
pushw
int3
(bad)
sbb
in
movs
mov
icebp
out
adc
(bad)
jp
test
xor
test
lahf
push
repnz
sbb
inc
push
mov
mov
push
stos
cmp
jae
dec
cmps
lods
dec
scas
stos
push
adc
push
out
pop
sbb
sub
mov
pop
sub
icebp
cmp
inc
scas
sub
sar
mov
mov
fcmovnu
in
mov
sub
pop
addr16
sbb
sub
enter
leave
les
sub
rol
fnstcw
jg
out
jo
jmp
push
rol
dec
fldenv
fld
out
lock
or
mov
clc
mul
push
shl
test
pusha
pushf
sbb
add
shr
data16
js
mov
inc
cmc
in
cmp
jmp
push
fs
inc
loopne
imul
aam
push
lea
dec
jbe
sub
pop
pop
mov
sub
adc
xchg
inc
mov
gs
dec
add
sahf
xchg
and
pop
xchg
js
cmps
xchg
and
fcomp
cmp
jns
cld
jmp
popa
hlt
cmp
and
jmp
cmps
lock
add
jl
addr16
rol
lahf
imul
lods
popa
je
cmp
mov
rol
add
mov
xchg
jl
jb
leave
das
mov
adc
lea
retf
pop
std
mov
xor
adc
mov
xor
lods
repz
cmp
push
mov
push
call
pop
mov
arpl
mov
pop
xor
aad
cmp
test
in
movs
lods
loop
push
mov
mov
jge
pusha
xor
cmc
mov
sar
or
xchg
mov
add
mov
pop
(bad)
nop
pop
loope
inc
fadd
sub
loope
mov
xchg
mov
xor
mov
push
dec
ins
jo
fsubr
out
mov
jnp
mov
adc
ds
xchg
into
mov
or
imul
ins
scas
sbb
aas
push
inc
or
push
dec
xchg
imul
add
fisubr
fild
inc
adc
push
out
outs
jbe
ret
shl
jle
scas
push
push
in
arpl
cwde
mov
movq
fimul
das
retf
cmp
xor
mov
sub
push
sahf
div
cmps
push
dec
or
mov
cmp
unpcklps
sub
out
ficomp
sbb
mov
push
inc
xor
ret
les
fisubr
xor
xchg
and
jae
adc
clc
mov
cld
adc
push
(bad)
rcl
mov
push
(bad)
adc
enter
ja
arpl
pop
out
jle
xor
data16
xchg
push
inc
pop
add
adc
or
cmps
adc
mov
inc
(bad)
scas
mov
adc
ficom
aas
dec
and
daa
push
push
iret
fnstenv
and
mov
dec
(bad)
ss
in
mov
jl
jg
add
fmulp
push
lods
imul
jbe
dec
inc
mov
(bad)
pop
pushf
push
cmp
pop
das
jmp
jae
sub
pop
and
cdq
xchg
lahf
sub
cli
aam
xor
mov
cmp
mov
sbb
add
jp
in
stc
dec
xchg
popf
dec
pop
sub
(bad)
(bad)
pop
inc
sub
cwde
cmp
dec
lods
push
repz
pusha
movs
xchg
outs
push
(bad)
xor
cdq
pop
out
movs
dec
bound
stos
mov
popa
call
xchg
ja
fbld
and
(bad)
outs
stos
aas
dec
es
dec
jg
mov
mov
adc
popf
jge
inc
data16
push
outs
icebp
add
mov
cmp
mov
inc
ja
cmp
inc
out
mov
jecxz
cmp
das
pop
fsubr
adc
sub
daa
les
and
cmp
pop
xchg
rol
or
mov
in
ret
(bad)
sti
pop
jmp
icebp
in
adc
add
inc
push
mov
call
fdivp
push
out
or
pop
push
mov
inc
cmp
test
pop
add
jo
xor
jb
dec
and
sub
sub
retf
sbb
cs
push
jg
test
add
imul
mov
mov
xchg
popa
jne
push
inc
push
shl
retf
inc
add
push
push
cmp
fdivr
out
mov
sub
loopne
movs
aas
jne
mov
or
(bad)
xchg
mov
popf
lahf
retf
add
and
or
sub
mov
push
lahf
mov
pop
je
(bad)
cmp
cmp
push
xchg
sub
not
push
add
xchg
test
sub
jne
out
and
xchg
pop
arpl
imul
sbb
and
outs
ins
(bad)
aad
adc
or
cmp
pop
xor
pop
cdq
in
jb
or
push
outs
cmp
dec
adc
mov
or
add
push
jnp
cmp
jb
stos
scas
inc
and
mov
xchg
mov
push
inc
or
and
xor
dec
loopne
xchg
je
mov
push
xor
add
fisubr
pop
jbe
add
(bad)
cmp
push
ins
ficom
or
je
mov
xchg
cmp
pop
adc
dec
sub
cmp
add
lea
pop
gs
aaa
out
inc
das
cwde
or
dec
cdq
dec
fidivr
cmp
not
movs
fistp
xchg
cmp
jns
std
mov
out
or
rcl
jne
mov
test
test
popf
sti
jne
cmp
mov
pop
xchg
dec
and
in
cli
adc
adc
mov
sti
jp
loope
and
jg
jno
cmp
mov
loope
pop
out
and
movs
xchg
pop
and
ficomp
lods
push
push
xchg
arpl
mov
lahf
dec
mov
bound
mov
ins
and
pop
fisttp
out
push
push
xor
cmps
xor
jno
push
sbb
in
popa
xor
xchg
add
add
movs
xor
add
lock
outs
retf
imul
out
mov
lea
loop
push
ret
jo
jle
push
mov
sahf
inc
inc
push
rol
ds
sahf
es
adc
pop
ds
xor
icebp
cdq
xor
scas
xor
enter
std
cmp
mov
sub
out
push
cdq
adc
push
das
scas
outs
jo
inc
in
adc
or
popa
cld
es
dec
xor
sub
jns
mov
ret
sbb
test
and
inc
jmp
push
rcr
dec
das
dec
fwait
xchg
mov
mov
inc
inc
imul
push
shr
add
(bad)
push
cs
ins
push
sbb
in
mov
inc
lods
sbb
mov
pop
xchg
pop
ds
out
je
cld
out
push
xchg
or
mov
pop
jnp
hlt
movs
and
fcomp
and
addr16
mov
or
cmps
mov
add
pusha
mov
das
add
and
adc
(bad)
icebp
push
mov
pushf
imul
jp
test
loopne
cmp
call
push
dec
add
and
jo
stc
fwait
bound
push
adc
in
jnp
loop
ins
enter
aas
nop
mov
adc
pop
sub
dec
icebp
mov
ret
test
pusha
retf
loope
mov
cmps
adc
clc
xchg
mov
data16
push
imul
add
or
pop
addr16
mov
jae
fs
jmp
repnz
add
mov
mov
mov
cmp
pop
ins
jbe
out
push
dec
out
shl
out
pop
fbstp
pop
mov
imul
and
(bad)
jne
xchg
jmp
push
adc
call
pop
mov
cmp
and
stos
or
mov
or
loope
(bad)
scas
xlat
outs
and
add
xchg
xor
pop
mov
in
fsub
lock
add
pop
mov
rcr
sub
fbld
pop
pop
inc
sub
ds
cmp
jae
sbb
pusha
dec
push
or
loopne
test
loope
pop
xor
fs
aaa
and
pushf
int3
imul
(bad)
je
mov
rol
or
cmps
sti
mov
mov
fwait
(bad)
mov
mov
mov
scas
dec
loope
loopne
fcomp
movs
or
add
fstp
retf
sbb
cs
add
inc
mov
pushf
jae
ficomp
gs
out
push
jbe
pop
cwde
cmp
movs
icebp
mov
bound
(bad)
sahf
mov
nop
add
push
repz
pushf
pop
xlat
mov
jno
out
imul
cdq
push
adc
pop
push
lahf
xchg
pop
inc
jno
jge
ret
js
adc
bound
mov
cmp
xor
sti
xor
inc
inc
xchg
jl
dec
add
hlt
repz
adc
push
inc
jmp
(bad)
xor
jmp
pop
out
inc
cmp
xchg
jae
jmp
(bad)
lds
jno
mov
sbb
imul
add
push
or
add
fisubr
pop
cmp
(bad)
and
push
or
dec
out
hlt
pop
fisub
push
in
test
fwait
dec
mov
xor
mov
jno
push
ins
xor
jmp
inc
ret
xchg
jns
pushf
dec
pop
shl
jg
jle
push
fdiv
sbb
data16
fidivr
pop
mov
stos
adc
add
push
sahf
dec
push
sbb
inc
add
cmp
cmp
shl
push
test
call
cmp
repnz
mov
cmp
cmc
out
pop
int
xor
lock
(bad)
in
jo
imul
jno
cmps
pop
dec
jns
mov
pop
in
dec
rcr
daa
cmps
push
add
adc
inc
test
cmp
sbb
repnz
lea
iret
pop
push
sbb
data16
sub
pop
xor
imul
mov
add
cmp
cs
inc
pop
rol
in
repz
daa
daa
stc
(bad)
call
push
sub
lock
daa
clc
(bad)
stos
sub
ds
sbb
adc
cs
dec
test
lods
push
and
cli
mov
dec
or
add
adc
(bad)
pop
mov
loop
fldenv
jns
push
cmps
cdq
adc
fidivr
ror
outs
and
retf
dec
repz
push
lea
out
and
ins
pushf
mov
push
add
mov
loopne
jne
mov
shl
mov
shl
or
mov
adc
or
jb
cmovns
or
in
sub
xor
lock
sbb
push
push
test
bound
cmp
xor
jmp
pop
aaa
nop
sub
(bad)
lods
movs
(bad)
mov
cmp
xor
sbb
inc
cmp
es
xchg
sbb
test
cmp
sar
xchg
mov
stos
push
or
int
xchg
mov
fs
aam
push
bound
popf
aaa
das
fadd
imul
dec
(bad)
jo
xchg
jp
arpl
popa
mov
arpl
pop
dec
jmp
adc
lods
leave
xor
cli
adc
mov
jae
(bad)
(bad)
mov
and
imul
push
xchg
mov
dec
mov
arpl
ror
nop
xor
and
repz
in
push
mov
scas
cmp
mov
cwde
shr
outs
jecxz
jmp
into
adc
nop
leave
lods
dec
ins
jnp
lahf
add
dec
gs
adc
adc
repz
xchg
loop
scas
pop
pop
addr16
jecxz
mov
cmc
(bad)
data16
stc
repz
sub
add
fsubr
pop
pushf
cmp
cmc
mov
rol
mov
inc
dec
dec
jne
rcr
xor
mov
sbb
loope
push
mov
push
xor
xchg
add
mov
out
call
add
dec
cmps
push
mov
jge
add
jmp
mov
pop
mov
int3
or
jmp
add
mov
cmp
rcl
into
sub
(bad)
jno
add
in
inc
inc
xchg
loop
(bad)
adc
and
dec
dec
jo
cmp
add
loopne
movs
imul
dec
stos
lods
popa
aam
fadd
jmp
int
push
sbb
fimul
scas
mov
stos
(bad)
clc
loopne
inc
adc
xchg
cmp
jecxz
imul
pop
movs
and
jg
aaa
jle
scas
(bad)
push
and
xor
inc
cmc
jp
in
int3
adc
mov
mov
and
(bad)
dec
out
mov
adc
and
hlt
mov
mov
jmp
pop
call
loopne
push
retf
mul
sbb
sahf
sbb
cdq
pop
add
in
xchg
out
adc
xlat
fimul
xchg
aad
xor
push
cwde
and
xchg
outs
push
pop
out
push
xor
mov
dec
and
ja
call
xor
scas
pop
dec
add
out
dec
test
sub
sub
sbb
push
or
adc
in
xchg
sub
jae
cmp
loopne
pop
push
jge
sub
test
int
sub
adc
repz
popf
mov
push
push
fcmovu
or
or
mov
unpckhps
stos
and
call
test
sub
inc
shl
js
inc
leave
push
sti
jl
loop
sahf
push
call
xchg
mov
mov
mov
mov
dec
fmul
lock
loopne
pop
sub
jb
jbe
imul
pushf
jp
mov
inc
and
leave
lods
mov
lahf
call
adc
lock
imul
lds
ret
out
(bad)
sbb
dec
pushf
fidiv
sub
pusha
fmul
adc
into
push
add
pcmpgtb
cmps
jbe
xor
mov
xchg
mov
sbb
ror
aad
inc
push
(bad)
jmp
sub
stos
stc
push
mov
xchg
popa
ret
mov
cmps
sbb
adc
or
dec
imul
data16
jmp
mov
ins
shr
test
xor
xor
push
cmp
adc
mov
or
loope
cmp
rol
retf
jne
pop
or
shr
outs
daa
xor
ror
or
xchg
pop
fwait
jg
data16
mov
pop
dec
add
inc
sbb
push
cs
test
sbb
fcom
pop
cmp
dec
jbe
xor
bound
neg
mov
test
mov
call
push
dec
jmp
dec
sub
add
sbb
sbb
rcr
mov
inc
adc
cwde
cmps
stos
mov
int3
pusha
ss
out
fdiv
sbb
jno
sti
mov
inc
movs
and
or
addr16
jnp
sahf
cmp
(bad)
mov
icebp
mov
jb
aam
xlat
loope
dec
jno
sub
xchg
cmps
rol
movs
movs
sub
cs
jne
mov
dec
jp
mov
cmp
fstp
jbe
pop
movs
sub
pusha
adc
dec
jl
ret
lock
adc
movs
ror
jno
gs
stos
mov
cmp
cdq
and
rcl
or
xchg
loope
dec
repz
lea
mov
(bad)
mov
sbb
inc
cdq
xchg
xor
(bad)
fwait
dec
cld
mov
cmps
call
test
js
ror
daa
add
dec
mov
je
cmps
pop
fs
jecxz
mov
add
xchg
mov
dec
xchg
shl
cmp
test
fiadd
jg
mov
lock
stc
adc
lods
int
sub
jecxz
test
adc
sbb
push
mov
out
adc
repnz
stc
push
and
jg
lahf
jns
dec
cli
rol
inc
lahf
push
jnp
dec
pop
into
inc
or
mov
loope
add
(bad)
xchg
or
xchg
jge
leave
mov
or
stc
sti
(bad)
or
cmps
out
lahf
or
pop
add
aaa
sbb
or
ficom
inc
jge
or
add
mov
loope
and
xor
add
or
inc
mov
mov
push
rcr
das
pop
jmp
cwde
add
cmps
mov
ins
scas
ret
shl
popa
inc
sub
or
sbb
or
in
sub
sbb
sub
cmp
mov
in
or
imul
out
push
test
test
ds
(bad)
ficom
ja
push
adc
xchg
les
fcos
xor
std
imul
lods
fidivr
adc
arpl
cld
mov
xchg
bound
cmc
(bad)
movs
rcr
fnsave
push
lods
imul
call
jo
loope
xchg
(bad)
mov
les
push
(bad)
leave
bound
arpl
fsub
and
dec
adc
out
fs
add
mov
xchg
ror
mov
shl
out
mov
ret
pop
sbb
sbb
adc
add
(bad)
loop
pop
arpl
adc
add
mov
jae
adc
fsave
xlat
je
ja
cmp
adc
out
cwde
jnp
add
mov
xor
arpl
clc
dec
xchg
sti
add
sub
outs
retf
sbb
xor
bound
or
dec
std
inc
mov
sub
sub
pushf
xor
pop
cmp
scas
jecxz
fcomp
adc
bound
div
or
jecxz
(bad)
je
and
pop
xor
dec
(bad)
inc
xor
sbb
dec
cdq
or
add
das
sub
sbb
or
push
xchg
mul
iret
cmps
nop
mov
rcl
cmp
jbe
out
mov
call
scas
fbld
xchg
pop
dec
popf
sti
scas
add
js
shr
je
outs
adc
sub
add
jle
into
push
js
icebp
stc
sub
fstp
stos
pop
pop
aam
shl
adc
jge
fisubr
lods
inc
rol
pop
inc
loop
mov
pop
jle
stc
push
ins
mov
loope
call
jecxz
sbb
lods
fldenv
inc
pop
data16
out
cmp
pop
int
jl
jecxz
jp
mov
mov
push
mov
xor
out
push
sbb
add
mov
ret
sti
daa
and
push
cwde
pop
push
xchg
mov
adc
mov
mov
add
or
imul
shrd
es
or
jge
stos
jae
sub
inc
repnz
cmp
cmc
aas
jb
fst
mov
sahf
adc
mov
sbb
sub
inc
(bad)
addr16
fdiv
ret
or
int3
loop
pop
sbb
jmp
and
mov
lods
jae
gs
cli
xchg
daa
lods
jbe
jecxz
pop
scas
int
stos
rcl
adc
mov
movs
or
sbb
and
jg
ss
(bad)
stc
imul
xchg
pushf
fisttp
cmc
jmp
sub
pop
repnz
xchg
add
pop
ins
jecxz
stc
mov
xchg
xchg
add
mov
imul
loop
test
into
fcomp
push
int3
cld
cli
std
hlt
dec
push
or
ret
dec
inc
mov
mov
adc
sub
ret
rol
adc
retf
mov
ins
repz
jns
pop
test
pop
adc
popf
fs
in
in
push
int3
add
jp
add
test
or
xchg
je
mov
sub
out
xor
push
(bad)
push
cmc
mov
push
stos
std
adc
pop
ficomp
add
xchg
xor
retf
mov
(bad)
mov
out
push
frstor
frstor
mov
inc
imul
xchg
fidivr
lock
ds
nop
cmp
mov
(bad)
aaa
sub
mov
push
retf
mov
neg
cmp
cli
and
and
dec
and
ret
loope
fdivr
into
imul
jmp
arpl
or
mov
push
call
jmp
inc
mov
inc
xor
out
in
xchg
int3
int
sbb
push
inc
out
fadd
fs
std
push
pop
jg
lahf
cmp
cwde
scas
xchg
xor
adc
jg
pop
pop
xor
outs
das
ror
or
inc
inc
jmp
or
cmc
sub
je
and
sti
call
mov
and
jmp
pusha
jo
mov
push
outs
mov
cmp
stos
mov
and
cli
pop
inc
jb
jae
mov
sbb
sbb
lds
or
clc
mov
lods
add
daa
jnp
xor
in
sti
push
in
adc
jno
imul
(bad)
dec
jmp
sub
adc
jne
dec
sub
sub
inc
popf
adc
enter
repz
cmps
adc
jns
dec
push
pop
(bad)
mov
cmp
imul
add
jno
(bad)
fidiv
hlt
jp
fistp
add
mov
and
cwde
mov
xchg
xor
cmps
cli
xchg
sahf
stos
or
dec
xchg
loop
jg
mov
push
shr
(bad)
jmp
sub
(bad)
movs
ja
cmp
add
icebp
fwait
or
inc
ret
and
sbb
mov
lock
push
push
and
outs
inc
stc
inc
dec
gs
pop
xor
cwde
inc
xor
push
mov
xlat
test
ret
mov
mov
hlt
outs
stos
dec
push
or
cmps
inc
fldcw
stc
pop
mov
fwait
jno
sbb
hlt
mov
pop
xor
movs
jno
jne
jmp
imul
jmp
sbb
sbb
nop
adc
sti
mov
dec
mov
les
xchg
ins
call
fwait
mov
pop
xchg
xor
cli
xor
aam
test
mov
jnp
mov
cmp
shr
shl
or
and
popa
sub
adc
adc
sub
iret
hlt
aas
pop
mov
pop
sub
int3
xor
mov
fwait
shl
fcom
adc
(bad)
loope
jg
loop
shl
pusha
mov
adc
(bad)
pop
sti
xchg
test
stc
lock
gs
add
je
and
arpl
imul
retf
pop
inc
push
push
add
dec
xchg
pushf
inc
dec
movs
push
xchg
sub
dec
adc
aaa
mov
inc
(bad)
push
out
mov
cld
mov
outs
mov
jge
mov
(bad)
add
int3
jne
mov
idiv
ret
lea
ds
xchg
mov
sbb
adc
push
mov
push
(bad)
repnz
and
ins
sub
inc
dec
adc
sar
int
dec
or
or
and
jno
aaa
jbe
dec
cmps
test
rol
jge
xor
leave
ins
fimul
and
sub
mov
aaa
ins
cmp
and
and
lock
test
inc
retf
pop
loop
cdq
inc
inc
mov
addr16
jmp
dec
cmps
retf
aam
sub
imul
add
nop
rcr
mov
addr16
pop
dec
sbb
sbb
ds
iret
(bad)
dec
sar
mov
(bad)
inc
mov
mov
repz
push
fs
(bad)
xchg
pop
(bad)
fisub
icebp
popa
xchg
jae
lods
popa
scas
mov
hlt
out
jno
add
sar
icebp
pop
aaa
mov
pushf
xor
cli
dec
inc
add
call
jle
xor
(bad)
mov
pop
sbb
sbb
mov
and
test
push
mov
dec
xchg
mov
fwait
pop
stos
(bad)
aas
movs
inc
dec
adc
sbb
test
jl
mul
out
ins
and
ret
adc
int3
push
cmps
mov
out
jo
fadd
lods
adc
ffree
lds
dec
adc
mov
xor
fbld
int3
mov
loop
test
jnp
repnz
fsub
push
inc
jecxz
ins
xchg
cmps
nop
fs
pusha
jmp
fwait
pop
add
mov
rol
pop
adc
xchg
add
pushf
mov
(bad)
(bad)
jge
pop
sti
out
ja
stc
out
lahf
and
xor
adc
sub
jnp
jo
push
aam
fadd
push
inc
add
or
jp
pusha
out
or
mov
xchg
mov
xor
or
fs
push
in
int3
sbb
adc
scas
sub
fwait
cdq
loopne
sub
lods
mov
in
sub
jmp
lea
jge
adc
ret
mov
push
(bad)
ins
xor
movs
btc
jb
pop
mov
fild
pop
or
fs
push
nop
popf
mov
push
xchg
enter
mov
(bad)
cmps
loop
inc
adc
or
dec
pop
push
imul
pop
adc
fs
aam
cmp
rcl
gs
xor
das
hlt
imul
popa
cmps
sbb
ins
adc
or
jns
mov
or
mov
mov
jne
mov
ficom
or
push
mov
push
fdivr
scas
aam
xchg
(bad)
pop
xchg
sub
inc
retf
cmps
jmp
in
mov
icebp
push
lods
pusha
cli
daa
cmps
cmp
in
scas
gs
add
mov
stos
loop
jbe
jge
loop
and
push
js
scas
imul
sbb
in
imul
or
cmp
mov
mov
or
xor
shl
inc
js
and
add
jp
jmp
fisub
add
mov
out
xor
sbb
add
mov
pop
ret
inc
popa
cmp
dec
push
and
or
scas
ret
push
ins
or
mov
lahf
add
pushf
jnp
dec
dec
fs
(bad)
and
ror
fsub
add
test
jo
arpl
mov
dec
mov
add
mov
mov
sbb
js
sub
jae
int
sar
dec
xlat
inc
jns
es
and
jb
push
dec
(bad)
adc
cmp
test
ret
add
and
sahf
sbb
sti
es
stos
jp
dec
pop
jns
add
sbb
addr16
std
sub
pop
icebp
and
ret
mov
adc
sub
xchg
nop
xchg
(bad)
pop
sbb
xor
fisttp
outs
pusha
dec
ror
inc
fist
mov
add
ret
pop
mov
inc
das
xchg
repnz
xchg
or
dec
repz
sbb
test
or
mov
dec
ins
aam
jne
(bad)
sbb
pop
stc
cs
xchg
push
jmp
fs
outs
push
mov
push
or
xchg
in
loop
xor
fldenv
outs
jp
imul
xchg
ret
aad
mov
enter
(bad)
mov
mov
sbb
pop
jne
xchg
loopne
sub
jge
addr16
xchg
stc
gs
je
movs
adc
mov
pop
jmp
adc
sbb
add
mov
jbe
xor
pop
sub
push
and
pop
or
imul
pop
int
mov
mov
dec
std
sub
daa
xor
ss
stos
inc
mov
imul
stos
add
ja
pop
imul
outs
daa
fiadd
sbb
xor
pop
pop
loop
leave
fdivr
sbb
jno
jb
mov
(bad)
push
cs
mov
test
inc
jle
popf
mov
xchg
das
pop
loope
stc
out
fld
dec
push
cmp
inc
push
pop
popa
jecxz
js
lea
aam
push
mov
inc
mov
aad
inc
jecxz
arpl
stos
out
adc
movs
sub
inc
addr16
push
inc
cli
xor
cmc
in
push
aad
shl
enter
jg
pop
out
arpl
dec
dec
andnps
jmp
lahf
push
inc
sahf
sbb
pop
sbb
xchg
shr
mov
add
movs
jmp
mov
dec
rcl
das
loope
cmp
and
cmp
sub
loopne
sbb
iret
jb
add
mov
cmc
pop
leave
in
jl
aaa
jno
imul
xor
jge
jbe
es
and
sbb
adc
dec
dec
jmp
jmp
inc
mov
lahf
ret
fnstenv
mov
or
outs
es
pop
rcl
mov
mov
es
pop
inc
or
mov
and
cmps
sbb
mov
call
xor
and
mov
pop
int3
int
sub
pop
leave
mov
rcl
stos
push
ja
adc
out
dec
sbb
cmp
(bad)
lock
sub
fld
lods
jmp
lahf
scas
scas
jns
jno
mov
lods
jmp
or
arpl
adc
hlt
cmp
mov
jnp
pop
aas
int
jecxz
cli
xchg
stc
repz
call
xchg
out
pop
mov
adc
sbb
sub
shr
movs
sub
dec
rcr
aam
push
xor
inc
sub
loopne
push
imul
std
sbb
pop
sbb
bound
xchg
pusha
test
aad
sub
adc
icebp
sub
xchg
mov
scas
xor
sbb
mov
mov
outs
pop
test
es
inc
inc
mov
int
inc
int3
cdq
mov
in
mov
aam
or
inc
fsubr
xchg
inc
adc
add
push
cmp
and
(bad)
cmp
shl
icebp
mov
jns
pop
jns
daa
push
xchg
shl
mov
fnstcw
rcr
stc
and
mov
sub
push
push
mov
push
out
lods
sub
jb
idiv
push
aad
mov
push
pop
loope
push
pop
add
xchg
sbb
pusha
or
stos
dec
adc
xlat
jb
stos
clc
leave
add
xor
xor
push
jmp
and
mov
fsub
pop
jae
pop
leave
ror
cld
rcr
popa
fld
xchg
(bad)
pop
sbb
push
arpl
es
je
adc
xor
ins
sbb
std
fwait
es
pop
repz
mov
test
jge
xchg
inc
(bad)
into
sbb
xchg
dec
fstp
leavew
xchg
scas
test
(bad)
mov
in
das
in
xchg
sub
jo
mov
lods
and
inc
sub
std
and
mov
jecxz
cli
mov
and
call
call
jae
lods
(bad)
jp
ret
(bad)
add
outs
test
jo
add
dec
outs
adc
cmc
sub
ret
call
add
cmp
cli
cmp
mov
push
fcom
xlat
hlt
in
pop
xor
loopne
call
je
and
mov
ret
jle
mov
int3
mov
(bad)
jnp
and
dec
adc
add
xor
cwde
inc
rol
push
jmp
movs
push
xor
ret
dec
cmps
mov
in
sbb
out
push
jge
xchg
adc
aad
cli
shr
push
daa
test
sahf
mov
repnz
inc
mov
(bad)
sub
add
fwait
and
fisub
jo
push
ficom
retf
cmc
mov
mov
mov
loope
push
cmps
stc
ficom
push
mov
mov
adc
or
and
xor
mov
repnz
sub
mov
and
mov
push
dec
(bad)
fldenv
sbb
mov
sbb
xor
cmp
rep
sahf
jb
shl
pop
shr
mov
inc
fidiv
cs
ds
jmp
pop
in
out
call
and
(bad)
stc
push
mov
out
xchg
xlat
dec
push
mov
add
outs
mov
fsubr
sbb
ret
addr16
cmp
js
xchg
and
mov
cmps
adc
nop
popf
adc
inc
nop
scas
ins
jecxz
data16
lds
push
stos
pusha
retf
paddd
into
bound
sar
call
repnz
stos
(bad)
into
div
jmp
adc
test
arpl
xor
lahf
inc
je
and
sub
inc
ss
jns
cs
jno
cmp
es
(bad)
ins
push
jg
push
call
jl
(bad)
int3
jmp
addr16
cmc
dec
aam
repnz
cmp
ja
stos
sub
pop
(bad)
popa
mov
pushf
imul
enter
dec
dec
sbb
mov
dec
mov
cwde
add
setbe
int
push
cmps
sub
outs
(bad)
fcomp
aad
mov
lock
cld
dec
mov
xor
or
cmp
(bad)
cmc
xchg
shr
test
pop
sub
sbb
cmp
dec
fwait
sbb
fcmovne
add
(bad)
sar
xchg
jne
push
cmp
jle
imul
cli
(bad)
rcr
(bad)
rcl
in
and
xchg
push
leave
or
dec
cmp
mov
xor
push
ds
jmp
shl
fcmovnb
imul
sbb
lods
fsubr
cmp
inc
int3
push
mov
out
out
lods
mov
add
and
push
jmp
sub
xor
push
mov
inc
(bad)
jg
xchg
xchg
mov
retf
jg
bnd
stos
ds
inc
sub
ja
mov
cmp
mov
mov
out
inc
xor
and
sbb
rcl
popa
pop
imul
inc
iret
dec
dec
jmp
add
out
cmps
push
sahf
lahf
or
xchg
into
lods
repnz
pop
push
mov
dec
adc
inc
iret
cmp
cdq
fst
sub
fdivr
xchg
xchg
xor
loop
test
sub
nop
push
xchg
mov
mov
clts
data16
xchg
in
inc
xor
inc
iret
shl
pusha
xchg
cmp
mov
fs
icebp
inc
stos
cmp
das
mov
scas
ror
xchg
or
or
or
pop
adc
in
test
cmp
div
xchg
in
xor
cmp
jbe
mov
xor
cmc
jg
xchg
jge
test
cmp
addr16
ja
rcl
push
scas
or
jp
pop
nop
ret
in
cmps
addr16
aaa
jb
and
cmp
fldcw
and
les
cmc
imul
jo
lods
push
xchg
loopne
lea
mov
sub
add
dec
int3
(bad)
hlt
mov
pop
in
jmp
jge
shr
jae
push
mov
loopne
jge
sbb
(bad)
push
call
xlat
mov
mov
daa
popa
je
mov
sbb
in
(bad)
cmp
adc
pushf
aam
loop
add
(bad)
pop
out
add
sub
call
fcom
push
sbb
mul
xchg
aam
ret
int3
scas
pusha
cmp
cmp
and
xchg
fld
or
cmps
jl
rol
ins
cld
leave
dec
outs
push
cmp
add
cld
mov
inc
xor
push
dec
jle
fsub
ins
or
mov
inc
movs
push
push
inc
mov
int
ficom
mov
mov
mov
call
repz
je
shl
shl
push
imul
lahf
cdq
push
xchg
jmp
fwait
mov
or
mov
pop
push
popf
stos
cwde
sbb
pop
in
addr16
or
mov
jmp
cmp
add
das
dec
sub
mov
sub
test
add
ret
push
xor
(bad)
aad
pop
retf
sub
xor
jo
sbb
fwait
mov
call
les
add
dec
jmp
sub
xchg
cmp
pusha
mov
ins
out
movs
push
hlt
sbb
outs
movs
add
inc
cs
fincstp
push
pop
xchg
adc
shl
push
stos
cdq
int3
dec
pop
clc
pop
sub
pop
lods
mov
sbb
jl
imul
lods
jmp
adc
out
add
add
dec
in
rcl
fcom
(bad)
push
sbb
neg
out
ret
inc
mov
fsub
cli
push
ds
inc
add
das
call
and
inc
scas
test
outs
mov
movs
fstp
xchg
popf
or
xor
mov
sub
inc
xchg
jle
mov
pop
mov
leave
pop
out
into
int
iret
jle
mov
fmul
mov
das
rep
cmp
sti
pop
mov
outs
iret
sub
ficomp
push
adc
xlat
xchg
mov
pop
xor
adc
mov
popa
sbb
retw
dec
and
call
cmp
xchg
or
push
jle
xchg
inc
jg
xchg
dec
xchg
scas
mov
jae
adc
mov
icebp
jnp
cmp
mov
ds
lahf
xor
inc
test
pop
cmp
shl
loope
movs
or
arpl
loopne
jp
adc
xor
(bad)
and
loop
sbb
sar
je
lahf
dec
lods
xchg
(bad)
mov
and
mov
jg
sbb
push
adc
out
sbb
push
adc
jnp
loop
shr
push
or
iret
xchg
jle
sbb
in
or
test
jecxz
je
cmp
popf
sub
je
adc
loope
jle
inc
mov
dec
cmp
lds
cmps
ja
or
sar
call
mov
cmp
jle
out
inc
dec
dec
sub
sbb
inc
mov
cmp
lea
(bad)
or
mov
imul
sti
jmp
(bad)
push
(bad)
loope
int3
in
inc
data16
test
push
push
sub
in
inc
sar
xchg
dec
das
and
pop
pop
aas
idiv
jl
(bad)
lahf
ins
mov
dec
jns
dec
jecxz
and
daa
sbb
mov
sub
mov
or
cld
and
call
sbb
and
repz
sbb
xor
sbb
stos
sbb
stos
mov
add
cwde
pop
ins
sbb
nop
jp
xor
ss
enter
dec
popf
xchg
stos
(bad)
retf
pop
jbe
inc
and
(bad)
jno
push
and
pop
cmp
mov
dec
loop
iret
leave
push
lds
cs
add
ret
mov
inc
push
mov
bound
xchg
cmp
nop
push
hlt
data16
shl
scas
or
mov
scas
sbb
movs
fcmovnb
cmps
push
push
aas
cs
cs
jbe
push
pop
jecxz
inc
not
popf
mov
pop
push
inc
dec
sbb
fild
xchg
or
sbb
jno
lods
push
cmp
retf
ret
movs
sub
jmp
mov
movs
jae
cmps
inc
mov
ret
ins
stos
push
mov
push
retf
(bad)
ret
sar
inc
loope
cmovp
in
iret
(bad)
aas
hlt
xor
push
fdivr
or
xchg
loope
out
mov
sbb
retf
xchg
test
xchg
mov
push
push
test
and
pop
jle
pop
inc
add
push
mov
xchg
int3
push
mov
adc
lea
pop
ror
mov
mov
imul
dec
(bad)
jge
and
pop
outs
gs
xor
pushf
nop
cmp
jg
mov
icebp
dec
in
adc
or
lods
enter
add
fnstcw
xor
pushf
loop
dec
xor
dec
jg
nop
cmp
cmp
repz
mov
mov
sbb
push
jl
and
pop
cld
icebp
add
cmp
cld
sub
ins
and
sbb
mov
xchg
fimul
xchg
sbb
adc
fidiv
sar
dec
adc
ror
mov
sub
fld
out
call
add
cwde
adc
lahf
fcmovnb
shl
mov
cmp
ret
mov
and
xchg
push
xchg
lds
test
repz
push
mov
aad
ss
int
stos
jmp
adc
int3
cdq
and
sub
cli
cmp
cs
(bad)
and
daa
or
and
xchg
rcl
out
dec
sbb
push
lods
sbb
inc
jns
pop
aad
icebp
mov
and
sub
dec
lods
dec
pusha
xchg
ins
(bad)
jmp
add
test
and
test
mov
test
mov
pop
push
test
not
das
aaa
add
jbe
repz
jns
out
daa
aad
movs
xor
mov
cld
sub
xor
sub
push
xor
outs
jle
and
adc
push
push
bnd
pop
retf
xchg
pop
pusha
or
cwde
mov
pop
jne
repz
imul
push
sub
sbb
je
stc
mov
das
add
mov
pop
call
xor
test
jo
lods
inc
fidivr
popa
xorps
fsubp
or
je
test
mov
int
arpl
das
cmp
jmp
retf
retf
xchg
sub
adc
mov
retf
fist
std
mov
cli
sbb
dec
inc
cmp
jb
push
sbb
call
push
imul
outs
dec
or
aas
jecxz
scas
idiv
push
icebp
sub
add
mov
call
je
clc
or
ror
arpl
and
xor
sbb
add
mov
mov
repz
pop
js
inc
mul
xchg
xor
mov
out
cmp
mov
retf
fnstcw
push
xchg
clc
xchg
jle
dec
or
mov
ins
mov
dec
xchg
pop
fucomp
and
adc
sbb
(bad)
cwde
ss
aaa
cmp
lods
xchg
fistp
jno
push
and
mov
xchg
and
adc
leave
and
and
and
or
sbb
sub
arpl
jno
jp
mov
or
dec
mov
mov
add
lahf
aaa
sub
daa
mov
loop
retf
addr16
lods
aas
mov
daa
outs
in
or
xlat
bnd
and
sub
ins
retf
lock
inc
mov
pushf
jmp
mov
jecxz
call
loope
stos
sbb
inc
stos
fwait
sar
pop
inc
scas
mov
push
jae
pcmpeqd
xor
jo
dec
stos
lock
push
sbb
aaa
mov
sbb
sbb
mov
lahf
gs
dec
in
sub
sub
int
movs
and
adc
push
cmp
sub
arpl
or
stos
ins
and
add
xchg
(bad)
mov
sub
dec
aam
shr
xor
mov
ret
bound
(bad)
dec
push
sub
repnz
jmp
not
nop
cdq
out
shl
mov
int3
ret
fcomip
jbe
cs
add
loopne
mov
dec
mov
loop
shl
pop
push
push
or
into
loopne
in
shl
fadd
mov
mov
cmp
lods
xor
xchg
mov
sub
inc
adc
and
lahf
mov
repz
aad
js
ds
retf
sub
es
adc
hlt
iret
xchg
xor
add
int3
pop
mov
push
mov
lahf
fistp
out
cmp
xor
in
cmp
adc
mov
imul
mul
mov
xchg
lods
adc
sbb
repnz
jle
sbb
mov
push
scas
jmp
jl
dec
gs
shr
mov
cld
cmc
ins
mov
mov
push
out
sub
mov
adc
push
stos
pop
cwde
mov
mov
adc
dec
es
fimul
cmp
stos
out
hlt
lock
daa
mov
inc
jnp
dec
ds
cwde
xor
ret
shl
mov
mov
xor
and
xor
mov
shr
jns
cmp
adc
pop
sub
loop
js
pop
add
jp
mov
cld
sub
movs
into
idiv
adc
or
rol
or
(bad)
adc
loop
mov
popa
ja
ins
dec
dec
mov
test
adc
jmp
or
jp
shl
int
out
dec
loope
push
leave
jo
call
(bad)
pop
iret
jbe
cmp
and
outs
call
call
lock
mov
aas
outs
sti
test
fcmovbe
rcr
nop
inc
jnp
jno
add
(bad)
push
mov
push
scas
mov
xor
ret
push
adc
cmps
inc
lea
mov
lds
mov
(bad)
imul
scas
sub
dec
rol
jmp
outs
or
sub
aam
inc
mov
pushf
cli
pop
nop
adc
xchg
dec
repnz
retf
push
xchg
dec
enter
jmp
in
xor
leave
cs
xor
int
rcl
or
repnz
cmp
int
mov
hlt
fcomp
ss
hlt
xor
dec
and
adc
imul
icebp
dec
in
and
ins
xchg
sbb
pop
inc
sub
push
push
sbb
fdivp
cmp
cmps
and
ja
jae
loopne
aaa
xchg
push
jno
push
(bad)
std
pop
cli
test
test
xchg
jo
mov
adc
xor
pop
(bad)
in
pop
cmp
in
dec
cmp
stos
sbb
sub
xor
int
xor
adc
imul
pop
aaa
cmc
daa
dec
test
ret
lea
pop
sbb
lods
cmp
cmp
mov
hlt
shl
mov
btc
leave
aaa
out
leave
test
mov
pop
(bad)
push
sbb
dec
adc
outs
dec
mov
push
and
mov
xor
mov
pop
xchg
sbb
loop
nop
push
add
push
add
sbb
(bad)
repz
jl
imul
outs
clc
jl
fisubr
daa
lahf
sub
inc
enter
div
pop
(bad)
sub
jp
movs
sub
mov
rol
and
hlt
addr16
jmp
sub
xchg
sub
(bad)
out
mov
push
stc
xlat
jle
xchg
pop
push
push
call
fwait
arpl
mov
jp
xchg
adc
pop
aad
mov
pop
aas
and
fcomp
push
loope
or
jle
leave
stos
jb
fld
lods
iret
push
mov
cwde
xchg
addr16
cmp
cwde
out
add
fs
scas
jmp
jo
fs
xchg
mov
out
call
in
jmp
call
push
xchg
arpl
loope
and
mov
sub
(bad)
call
pop
(bad)
fsubr
sub
push
xor
or
xchg
aad
adc
dec
sub
pop
test
xchg
mov
aaa
sub
test
lahf
(bad)
mov
jbe
call
add
jmp
mov
fiadd
or
mov
mov
xchg
retf
test
or
jge
pusha
inc
pop
loopne
push
das
inc
clc
xchg
xchg
(bad)
inc
cli
cmp
push
pop
or
jns
mov
movs
jae
loopne
gs
loope
mov
push
or
xchg
jbe
jno
nop
(bad)
clc
js
popf
lods
jne
cdq
inc
std
scas
rsm
jae
sbb
pop
adc
test
sti
pop
popf
std
in
push
push
pop
dec
push
and
scas
mov
rol
call
std
fcomp
sbb
or
(bad)
out
jmp
sbb
or
jle
dec
pusha
ret
adc
or
std
sahf
lea
sbb
imul
cwde
jl
and
push
xchg
pusha
daa
adc
daa
mov
jbe
add
out
call
pop
std
pop
adc
aad
daa
in
push
push
adc
push
pop
addr16
in
push
sti
fld
and
sbb
push
mov
ss
jmp
neg
cmp
mov
dec
jg
mov
gs
cmc
or
pop
pop
sub
mov
push
stos
ja
push
inc
mov
pop
mov
mov
mov
shl
les
and
inc
xor
test
inc
adc
add
retf
mov
je
enter
xor
adc
xor
add
inc
xchg
in
int3
push
xchg
enter
in
jae
ret
fcmovbe
cmps
stos
test
ins
sbb
in
int
retf
inc
js
fild
cmp
and
mov
sub
mov
test
pop
mul
adc
dec
scas
aad
ret
add
stos
xchg
push
gs
gs
test
inc
pop
test
inc
int3
xchg
pop
inc
stc
pop
dec
in
fcmovbe
adc
je
ret
mov
aas
dec
paddw
out
lock
mov
ja
cmps
mov
loopne
push
push
push
imul
dec
pop
mov
lods
push
ret
(bad)
xor
sbb
jo
jns
call
or
lods
or
mov
sbb
push
aas
push
mov
movs
inc
or
pop
mov
loope
fistp
rcr
call
fisubr
xchg
jae
mov
mov
lods
push
dec
hlt
and
inc
xchg
adc
pop
nop
loopne
mov
pop
push
pop
inc
and
and
test
pushf
fincstp
mov
add
xor
jae
daa
sbb
xchg
cmp
mov
cmps
test
pop
push
sbb
mov
jnp
aam
xor
out
add
es
out
(bad)
sbb
shl
nop
adc
mov
icebp
sub
test
xor
mov
or
mov
popf
and
sahf
sub
xor
cmp
mov
or
cmp
cwde
mov
into
imul
es
cmps
iret
add
cmps
cmps
sbb
pushf
jecxz
sbb
(bad)
dec
adc
cwde
sbb
add
mov
(bad)
dec
pop
sub
shr
aad
popa
shl
push
movs
jb
movs
sbb
shl
shl
cmp
and
pop
fwait
daa
stc
dec
dec
adc
ss
in
mov
sub
push
xchg
mov
scas
sub
mov
and
adc
ret
pop
addr16
call
cwde
dec
clc
aad
sub
sbb
movs
imul
ret
xor
mov
xor
adc
adc
sub
xor
je
cdq
mov
daa
or
pop
mov
sub
xor
pop
rol
imul
xchg
add
aad
jo
popa
shl
mov
adc
add
stc
xor
lock
sub
xchg
xchg
push
push
out
fs
push
jbe
sub
push
cmc
add
js
leave
jb
clc
sub
xchg
mov
xor
dec
inc
je
shl
fimul
sub
sub
xor
mov
jmp
into
scas
jne
aam
les
mov
jnp
dec
aad
retf
outs
sub
sub
jae
inc
movs
inc
dec
sub
sbb
mov
mov
mov
mov
mov
out
popa
pop
cld
xchg
mov
push
push
sahf
xchg
ret
and
neg
xchg
jae
(bad)
in
sti
jle
xchg
(bad)
sar
les
mov
mov
push
aaa
inc
jmp
add
clc
jp
imul
xchg
pop
mov
popf
fisubr
mov
or
pop
add
mov
mov
pop
jl
mov
data16
add
cmc
xor
rcr
adc
xchg
mov
add
push
dec
xchg
mov
sbb
jmp
int
add
mov
or
int3
push
add
les
xchg
(bad)
call
addr16
iret
jnp
scas
sbb
icebp
pop
out
lea
rol
imul
enter
neg
fisubr
and
inc
cmps
gs
mov
or
int
pop
mov
(bad)
(bad)
loopne
jle
xchg
outs
mov
hlt
sbb
jg
ins
mov
lds
push
leave
sub
and
mov
gs
xchg
lgs
adc
adc
ins
call
jge
fdivr
lock
mov
loope
add
jb
test
sbb
pop
(bad)
loope
sub
xor
mov
adc
push
cmps
out
inc
pop
xchg
jle
ins
popa
xchg
iret
lock
hlt
inc
pop
(bad)
mov
fisttp
lahf
ins
add
neg
push
fld
cmp
lea
jae
mov
push
popa
dec
mov
enter
and
ret
in
mov
sub
pop
lahf
movs
(bad)
pop
or
push
xor
mov
fist
mov
mov
jle
nop
mov
xor
and
lods
daa
aaa
int3
add
mov
xchg
push
and
mov
adc
adc
dec
call
and
ins
or
cli
sub
cwde
push
mov
std
cmps
cmp
add
mov
and
sub
inc
and
pop
shr
mov
adc
pop
xchg
out
(bad)
fsub
aas
out
push
and
jns
ret
jns
inc
inc
ret
mov
sub
aas
jne
out
test
(bad)
sti
loop
push
in
popa
loopne
pop
push
in
repnz
or
cmovle
pop
fnstcw
fwait
loopne
cmp
inc
xchg
scas
pop
pusha
cmp
out
cmp
and
inc
add
pop
test
movs
bound
jb
dec
xchg
jp
and
add
dec
adc
adc
adc
push
xor
clc
xchg
xor
ins
pushf
inc
in
adc
xor
xchg
add
jbe
fwait
dec
dec
jbe
sbb
pop
add
inc
fild
dec
loop
pop
push
xor
mov
add
adc
or
xchg
cmp
push
jo
mov
adc
into
mov
hlt
sub
in
outs
jnp
dec
mov
fidiv
hlt
mov
mov
xor
scas
or
jnp
cdq
mov
adc
add
leave
enter
mov
sub
shl
sub
jmp
ror
test
inc
dec
cdq
in
stos
cmp
ins
mov
sbb
loop
icebp
outs
loop
jbe
fist
and
sbb
nop
xchg
movs
ins
dec
iret
cwde
jecxz
jnp
push
fidivr
ret
iret
push
adc
dec
dec
xchg
cmp
xchg
imul
not
and
ret
retf
lock
lods
test
das
sbb
loopne
gs
mov
add
cmp
jecxz
sbb
retf
push
mov
stos
adc
shl
jl
jecxz
outs
fmul
sub
inc
jl
dec
(bad)
jl
jno
enter
ja
cmp
test
mov
push
dec
jge
jo
push
stc
mov
push
xchg
mov
xchg
sti
stos
or
jo
mov
adc
inc
cmc
jge
mov
out
int3
push
(bad)
shr
in
or
inc
and
pop
dec
fist
cmp
dec
sti
push
mov
call
pusha
pop
repnz
lods
mov
push
mul
xor
sub
data16
xor
cli
js
push
push
ror
pop
adc
and
add
mov
inc
mov
es
push
inc
out
loop
xor
adc
inc
xchg
inc
bound
pop
add
popf
mov
xor
rcl
dec
jp
sbb
sub
push
mov
sub
adc
icebp
mov
jg
stos
mov
add
or
inc
sti
or
xor
pushf
jns
(bad)
gs
stc
repz
in
dec
pop
lea
icebp
es
push
int
mov
cmps
sbb
add
pusha
rcr
sub
hlt
pop
movups
sub
lock
ror
inc
push
dec
mov
fld
fcmovnu
pop
push
sbb
mov
mov
push
not
or
(bad)
addr16
mov
pop
dec
arpl
jae
es
inc
(bad)
push
stos
lds
cmp
inc
leave
test
dec
mov
xor
pop
outs
pop
ins
sub
enter
adc
fxch
icebp
jne
cmp
xchg
pop
and
push
sub
add
idiv
xchg
inc
rcl
js
leave
cmc
jb
and
fimul
xor
shr
lods
or
out
dec
push
xchg
xor
fwait
pop
inc
repnz
sar
lds
cmp
iret
inc
push
add
jne
mov
pop
jg
in
retf
or
push
and
cs
fstp
push
cld
add
hlt
cmc
mov
dec
hlt
sbb
mov
push
test
push
sbb
fsub
call
add
test
sbb
sbb
xor
xor
inc
cmp
cs
xor
repnz
sub
icebp
in
add
or
xor
mov
push
sbb
xchg
ins
mov
mov
xchg
sbb
aam
dec
add
jle
fsubr
mov
or
push
repz
sub
push
out
nop
add
cmps
mov
adc
and
jae
sbb
jnp
add
sub
lds
and
push
loop
cli
(bad)
mov
cli
mov
jno
cdq
retf
imul
mov
jmp
jg
dec
mov
dec
push
push
cmp
fiadd
adc
xor
xchg
repnz
pop
sub
or
and
jmp
imul
jne
xor
and
xchg
cmps
shl
rcr
(bad)
jmp
mov
jbe
lock
imul
test
mov
fild
hlt
pop
mov
popf
das
xor
sub
mov
jl
xchg
xchg
jbe
cmp
rol
lock
sti
cmps
mov
cmp
stos
rcl
hlt
fcom
leave
add
sub
out
je
aas
xchg
adc
xlat
(bad)
pop
cmp
shr
mov
inc
xor
xchg
mov
stos
jmp
hlt
jp
out
sti
adc
and
test
je
ficom
gs
dec
test
add
sbb
push
sbb
retf
push
or
cmps
lea
lods
pop
and
fs
mov
adc
cmc
arpl
xchg
mov
(bad)
or
cmps
inc
mov
and
and
inc
nop
(bad)
lods
movs
lea
imul
ins
cmp
jge
xor
push
mov
mov
lods
ja
xlat
les
dec
clc
es
lahf
fdiv
xor
sbb
xlat
push
jnp
(bad)
jnp
mov
dec
adc
cwde
push
idiv
inc
jmp
adc
pop
mov
jl
jle
aam
add
fcomi
adc
daa
xor
aad
mov
fdivr
sbb
xchg
jmp
das
or
jo
stc
test
add
xor
push
lods
pushf
cmp
and
gs
sbb
jnp
ja
movs
ret
or
hlt
or
or
push
loopne
sti
and
jg
inc
add
(bad)
mov
test
jp
hlt
xlat
sar
loope
pop
(bad)
mov
sahf
adc
xlat
fiadd
sub
cs
cmps
pop
sub
xor
xlat
(bad)
cmp
daa
sahf
outs
mov
mov
sub
lahf
fnstsw
mov
loopne
push
and
je
or
retf
leave
mov
inc
xchg
push
add
sbb
jmp
loopne
adc
stos
mov
addss
out
ins
call
pop
mov
adc
popa
cmp
fwait
test
ds
jno
ss
arpl
popf
mov
in
and
shr
add
repnz
mov
outs
jle
out
pop
imul
or
in
fcomip
idiv
das
aad
es
repnz
scas
shr
fimul
loopne
mov
mov
dec
lock
fucom
retf
daa
ds
pop
push
cdq
gs
(bad)
das
loop
arpl
sbb
sbb
mov
xchg
inc
cmp
pop
test
mov
dec
mov
mov
mov
out
mov
mov
daa
enter
ret
xor
mov
std
cmp
or
pop
sub
ins
cli
xor
pop
adc
loop
aam
or
(bad)
add
outs
sub
or
pop
jb
into
in
(bad)
imul
fcmovu
out
aam
mov
inc
ficomp
sub
cmp
and
sbb
xchg
pop
add
adc
push
xchg
imul
sbb
push
xchg
mov
inc
mov
not
mov
and
es
arpl
inc
and
xor
cld
pop
(bad)
in
mov
dec
call
adc
jae
and
mov
ss
in
out
or
add
add
sbb
or
(bad)
shl
mov
jo
leave
scas
imul
test
jl
mov
mov
adc
ror
jnp
fs
pushf
lahf
xor
add
lahf
in
loop
cmp
xor
adc
aam
mov
sub
je
gs
sar
or
push
and
cmp
aaa
xor
fucomi
jle
sbb
push
ret
or
das
push
(bad)
test
mov
scas
repz
xchg
inc
retf
push
test
mov
mov
add
push
push
arpl
dec
push
push
and
dec
inc
fs
inc
pop
mov
add
popa
test
mov
and
fwait
sub
iret
fsubr
push
push
hlt
(bad)
arpl
enter
(bad)
in
lds
sub
into
and
xchg
es
and
inc
xlat
clc
sub
inc
rcr
cmp
and
cmp
inc
fistp
and
push
in
pop
leave
mov
stc
mov
jg
jecxz
add
push
mov
loopne
or
pop
mov
aad
das
and
std
ret
sub
mov
add
and
std
ds
call
mov
cmps
retf
pop
mov
pusha
push
mov
push
fprem
jo
in
push
pushf
xor
mov
sbb
mov
xchg
mov
not
push
push
pop
inc
xchg
ins
loope
jle
mov
add
out
or
scas
push
add
dec
and
jmp
push
scas
cmc
loop
jl
fild
int3
add
xor
imul
imul
sub
inc
ret
cmps
sbb
(bad)
cmp
mov
ret
js
das
or
add
or
xor
pop
int
(bad)
jg
inc
and
popf
scas
jo
cdq
jmp
(bad)
into
call
shr
shr
cmps
out
sub
push
imul
or
xor
jle
lahf
imul
mov
xor
adc
pop
imul
dec
jp
jo
mov
popf
mov
xor
xlat
addr16
ret
repz
xlat
rcr
adc
(bad)
ror
aad
rol
add
adc
in
dec
int
les
mov
dec
nop
jae
hlt
pop
jecxz
cmc
push
(bad)
adc
xchg
mov
or
inc
repnz
jmp
in
loope
enter
adc
jecxz
pusha
shr
test
pop
push
xchg
mov
pushf
or
add
pusha
test
mov
mov
jne
inc
add
mov
scas
jns
push
xor
cmp
inc
outs
mov
pushf
scas
mov
cmp
pop
jae
aam
arpl
mov
fnstsw
fidivr
push
xchg
std
push
xchg
aaa
inc
push
sbb
test
cli
add
jl
sti
sbb
xor
push
dec
and
aam
ds
lahf
gs
lods
jmp
std
cmps
and
jns
in
jo
dec
jg
outs
imul
push
lods
xchg
in
xchg
stos
je
xchg
int3
inc
sar
fyl2xp1
inc
jl
push
or
mov
pop
cwde
push
hlt
scas
repz
xor
and
jl
cmp
fwait
xor
adc
xchg
or
stos
ins
mov
popa
ret
adc
mov
jmp
cmp
or
jb
cmp
mov
adc
fsub
shl
gs
(bad)
xchg
movs
ficomp
adc
mov
fistp
dec
sbb
test
jno
out
movs
fmul
loop
cdq
out
mov
ss
(bad)
pop
jmp
mov
mov
into
imul
scas
push
xchg
jno
and
ds
or
sub
js
loopne
outs
out
dec
push
bound
mov
adc
rol
inc
adc
iret
push
aaa
fs
jo
loopne
push
cmp
ror
pop
pop
inc
lods
adc
test
nop
in
popf
(bad)
ja
cmp
sahf
cmc
pop
retf
aaa
in
icebp
jl
dec
mov
cmps
loopne
jmp
ins
xchg
les
arpl
lods
and
fcomp
xchg
shr
shl
push
mov
and
mov
mov
fxch
or
and
mov
in
shl
xor
ss
sbb
dec
sub
jle
or
leave
push
in
push
mov
lahf
pop
xor
int
arpl
or
aad
lds
mov
xchg
push
mov
in
mov
xchg
pop
lahf
inc
push
sbb
cmp
aas
retf
or
push
push
stos
jmp
cmp
and
adc
inc
cmp
push
ins
fld
push
xchg
mov
sub
cmp
imul
cmp
add
dec
out
cdq
bound
and
pop
les
mov
sbb
aaa
pop
or
addr16
jo
mov
jo
les
mov
mov
or
push
jge
or
sbb
aas
(bad)
bound
pop
mov
push
stos
dec
inc
add
out
mov
cmps
(bad)
std
outs
xchg
pushf
mov
stc
daa
adc
(bad)
mov
iret
icebp
inc
and
rcl
arpl
inc
pop
adc
loop
movs
int3
dec
addr16
fld
stos
xchg
add
test
add
xor
cmp
nop
adc
repz
iret
add
and
(bad)
cmp
mov
int3
pop
jns
je
inc
std
xchg
sbb
adc
outs
mov
sub
ret
mov
(bad)
retf
stc
mov
sub
dec
adc
and
cmp
daa
sar
xchg
mov
lock
add
adc
repz
add
out
add
retf
mov
(bad)
mov
xor
push
loop
jge
rol
inc
outs
ret
push
aad
pop
sub
cmps
sub
cmp
je
das
shl
dec
adc
mov
ins
dec
inc
jb
cmp
add
fcom
mov
ins
dec
and
cmc
mov
scas
std
imul
dec
or
pop
js
mov
dec
iret
or
call
loope
fs
das
sub
ins
pop
push
call
ins
cli
bound
and
xor
jns
xchg
sub
and
out
in
call
fnstsw
or
aad
shl
mov
mov
cs
sahf
daa
mov
adc
imul
mov
mov
mov
push
jne
div
mov
icebp
add
mov
push
and
xor
sbb
fcomi
in
mov
ret
in
xor
hlt
xchg
fwait
jp
jmp
test
(bad)
pop
not
and
mov
mov
pop
xchg
int
xor
sub
fisttp
int
nop
(bad)
rcl
mov
jl
or
adc
stos
xchg
in
idiv
in
cmps
cmp
sub
or
mov
cmp
(bad)
xchg
add
es
ror
inc
and
cmc
mov
and
jnp
sub
xchg
ins
push
and
jne
mov
pop
dec
and
loopne
lds
add
adc
pusha
fimul
and
mov
or
push
push
xchg
pusha
push
repnz
mov
mov
cmc
loopne
xor
jmp
fmul
gs
or
and
xor
test
loope
ss
push
pop
push
loopne
xor
or
das
cmp
mov
adc
cmc
out
push
sub
cld
aaa
ret
loopne
aaa
cmp
loope
test
loop
ins
xchg
jp
fadd
stos
fadd
pop
mov
dec
add
add
ins
std
stc
or
aas
enter
jmp
into
add
cmp
and
(bad)
pop
outs
sub
pushf
sbb
pop
dec
movs
js
test
or
cmp
call
in
lahf
dec
fcomp
dec
pop
fld
push
pop
sub
js
aam
ins
mov
idiv
fsubrp
(bad)
test
push
push
xchg
scas
add
mov
cld
or
ds
inc
out
sub
daa
(bad)
mov
enter
(bad)
(bad)
xor
or
ret
add
xor
or
fmul
mov
mov
imul
out
ud2
fucom
and
out
cmps
call
call
push
ret
ror
int
sub
sbb
(bad)
push
xlat
and
into
and
inc
mov
or
pop
or
inc
cmps
xor
cmovp
mov
mov
ret
shl
or
xchg
sub
out
mov
cwde
data16
mov
dec
or
outs
xor
xchg
pop
cmp
(bad)
ror
fidiv
cli
mov
mov
jno
test
mov
(bad)
out
pushf
sbb
inc
or
cmps
repnz
stc
mov
ss
cmps
xchg
imul
or
es
daa
movs
push
mul
call
cmc
jno
arpl
mov
mov
in
add
dec
sbb
les
and
and
pushf
sbb
loope
mov
out
leave
add
into
cmp
mov
(bad)
pop
sub
in
(bad)
dec
mov
aad
lods
jg
stos
push
dec
arpl
adc
rol
test
rol
loop
(bad)
lea
ins
shld
std
jmp
xlat
rcr
cmc
mov
in
xchg
fwait
mov
clc
test
repnz
dec
mov
inc
or
out
xchg
mov
ret
sahf
mov
push
icebp
cli
mov
into
xchg
adc
cmp
(bad)
popf
inc
add
mov
fcomp
adc
cli
pushf
inc
jbe
movs
gs
or
ret
add
and
cmp
addr16
lea
dec
sar
ins
push
and
leave
jmp
xor
mov
jle
xor
mov
fild
cmp
xor
sbb
xor
mov
cmp
mov
jl
xchg
cld
imul
int3
jmp
sbb
xor
lock
ror
jg
push
cmp
imul
dec
mov
mov
pop
movs
or
add
lea
inc
sub
ds
or
(bad)
xchg
or
cmp
pop
sbb
imul
mov
mov
and
adc
ja
mov
push
mov
or
mov
jl
mov
mov
fldcw
push
fwait
push
sub
das
repz
sbb
retf
sub
pop
mov
popf
cwde
(bad)
mov
sahf
cmp
sahf
pushf
dec
(bad)
sbb
sub
jnp
call
outs
jecxz
xchg
push
frstor
into
push
iret
adc
xor
inc
cmc
inc
mov
jno
test
mov
fst
test
inc
cmps
ret
push
jmp
sub
jl
mov
jo
ds
jns
out
shl
xchg
and
lock
test
mov
inc
fmul
push
mov
data16
xchg
adc
push
popf
imul
dec
jbe
fimul
mov
mov
xchg
clc
cmp
jl
loope
jl
jbe
add
mov
imul
imul
and
mov
cs
inc
pop
add
cmp
lahf
mov
xchg
(bad)
jle
sub
inc
mov
inc
dec
out
ds
fwait
sub
or
arpl
dec
sub
and
pop
dec
call
lds
mov
jp
shl
sub
sbb
fstp
or
addr16
or
fiadd
mov
adc
loopne
sbb
test
or
in
aad
adc
neg
pop
push
in
add
cmp
mov
lahf
lahf
push
test
pushw
shr
xchg
loope
inc
jge
sbb
pop
out
in
push
mov
stc
pop
(bad)
dec
jmp
mov
or
adc
mov
push
in
jge
rcl
jmp
sbb
ror
sahf
int3
inc
jae
je
outs
mov
mov
stos
xchg
or
js
mov
popa
sahf
ret
adc
cmp
xchg
mov
js
scas
movs
mov
cwde
sub
mov
pop
jmp
pop
xor
icebp
test
ret
sub
sbb
mov
jnp
sbb
pop
setns
jecxz
test
mov
mov
dec
push
push
cmps
xor
push
pop
xchg
xlat
arpl
cmps
stc
iret
mov
cmp
test
test
dec
aad
xor
fisub
mov
xchg
ins
cmc
scas
dec
push
mov
pop
out
fst
rol
gs
fdiv
fmul
pusha
imul
adc
sbb
leave
mov
out
(bad)
fs
mov
pop
jp
cmps
adc
sbb
sub
push
add
fs
or
push
fidiv
scas
ret
int3
mov
jle
imul
mov
ret
cmps
pusha
int3
lea
(bad)
retf
add
test
lods
(bad)
sahf
loop
sar
dec
inc
add
fimul
xchg
ficomp
fist
int3
inc
fwait
movs
mov
sbb
jnp
repz
sub
enter
inc
test
outs
jmp
jg
sti
push
out
pop
cmps
push
sub
movs
jmp
add
(bad)
(bad)
mov
je
mov
mov
test
or
js
lea
int
mov
xchg
mov
sbb
sub
int3
and
(bad)
or
loopne
jle
fistp
pop
mov
cmp
mov
xor
push
pop
push
xor
jbe
ss
adc
push
or
mov
mov
xor
cmp
mov
and
(bad)
nop
fcomp
mov
dec
mov
and
jno
jno
xor
push
nop
in
call
sbb
imul
xchg
(bad)
lds
adc
mul
or
cmp
scas
stos
and
pop
idiv
adc
push
loopne
cmps
mov
call
cdq
shr
mov
mov
push
sub
sbb
(bad)
mov
jnp
cmc
pop
pop
and
jnp
pop
fiadd
xchg
and
loop
inc
fs
mov
popf
jns
mov
ds
jl
cwde
repnz
xchg
xor
push
cmp
pop
sub
fisttp
xchg
pop
mov
sbb
mov
adc
xchg
outs
mov
aas
cmp
cli
push
ss
cli
mov
scas
movs
sbb
push
mov
pop
cdq
cmp
(bad)
adc
sub
fwait
push
sbb
fs
mov
fwait
cmc
jne
fstp
out
jecxz
retf
test
(bad)
call
ins
inc
add
sbb
repz
add
arpl
mov
xchg
push
push
mov
jns
or
rcr
inc
bound
imul
mov
sub
test
inc
pop
xchg
xchg
xchg
bound
pop
push
test
or
cmp
xor
adc
fldenv
xor
and
add
mov
pop
test
push
xor
dec
push
test
das
xor
not
fcmovu
xor
loopne
push
test
xor
xchg
cmp
stos
dec
retf
rol
daa
pop
fimul
jbe
mov
xor
out
or
fcomp
mov
pop
pop
cmp
pop
(bad)
stos
sbb
loopne
push
jns
(bad)
sar
cmps
lods
pop
push
sbb
mov
shl
fsubr
cmp
lods
pop
jns
mov
mov
lds
sbb
jl
xchg
popa
adc
add
xchg
not
xor
dec
dec
outs
and
fdecstp
idiv
mov
xchg
jg
in
add
cmps
push
repz
mov
pop
adc
fscale
sbb
jns
push
fcmovbe
movs
lods
jecxz
call
pop
hlt
inc
cmps
dec
(bad)
scas
sti
jp
add
movs
cwde
shl
jge
mov
adc
sbb
(bad)
xor
dec
ror
push
cld
stc
adc
stc
jecxz
xchg
int3
pop
aad
add
push
fimul
retf
jno
xchg
mov
xor
mov
adc
jno
jmp
jmp
movs
sar
cmps
mov
pop
add
inc
lods
adc
mov
jne
cdq
ret
add
shl
dec
fadd
sub
aaa
or
gs
scas
retf
sub
mov
sbb
and
xchg
cld
ins
cwde
or
hlt
sahf
ja
xchg
jp
sub
hlt
out
jmp
rol
arpl
(bad)
popa
sub
xchg
ins
pop
mov
movs
movs
cld
push
jnp
adc
ret
cmp
inc
xlat
push
inc
mov
cwde
jmp
out
retf
adc
sbb
out
mov
mov
jmp
mov
stos
or
retf
mov
enter
add
xor
xor
sahf
mov
mov
sub
push
inc
pop
adc
adc
mov
xor
shr
sbb
es
cmps
or
mov
push
push
dec
dec
test
or
xchg
retf
add
jp
(bad)
mov
mov
inc
enter
hlt
lds
add
xchg
adc
add
or
aas
jno
jmp
push
pop
push
mov
xchg
lods
loopne
test
fs
sub
movs
jp
and
fwait
pusha
xchg
test
sar
dec
addr16
sbb
push
jbe
mov
mov
stos
sub
adc
loope
nop
push
mov
iret
jmp
inc
cmp
leave
hlt
pop
scas
setg
pop
cdq
in
cdq
lock
loope
imul
cmp
push
leave
mov
test
add
fiadd
test
mov
adc
xlat
in
std
(bad)
sbb
lods
xchg
fistp
lds
cdq
pop
mov
loope
mov
(bad)
pop
mov
fwait
retf
ret
sbb
ds
xchg
pop
inc
cmp
mov
movs
jmp
dec
sbb
inc
movs
xor
jne
mov
push
add
loop
mov
icebp
mov
jmp
or
mov
outs
ret
inc
ret
cmp
gs
pop
push
adc
fwait
cmp
ins
mov
adc
and
xchg
mov
xchg
mov
mov
or
add
xchg
and
add
adc
daa
sbb
inc
cwde
cmc
xor
bswap
jge
and
pop
enter
(bad)
inc
jne
push
pop
lds
push
jae
mov
in
je
cs
push
jmp
ja
popa
sub
lods
into
loop
repz
push
fidivr
mov
inc
mov
sti
popf
push
aam
and
sub
inc
and
fidiv
add
lds
test
push
xchg
xchg
sbb
test
cli
scas
push
mov
ins
pop
mov
outs
cmp
addr16
mov
jle
push
sbb
adc
fucomi
pop
xchg
inc
xor
cmps
xchg
mov
and
dec
push
movs
(bad)
mov
dec
in
cdq
lahf
(bad)
out
ret
test
(bad)
cmp
(bad)
js
inc
ss
and
push
outs
sub
inc
dec
pusha
jp
dec
xor
test
inc
xor
div
jmp
out
inc
cmps
lock
sbb
pop
xchg
add
(bad)
mov
fild
inc
pop
fmul
adc
cmps
push
cmps
cmp
and
aad
int3
je
lods
ror
and
xchg
xor
je
int3
test
movs
add
fdivr
xor
xchg
stc
mov
xor
push
jo
push
int3
scas
pushf
and
or
xor
clc
(bad)
fmul
mov
test
repnz
retf
adc
inc
push
fwait
lods
ds
pushf
add
sub
outs
jp
rcr
ins
jnp
xchg
xor
sub
cmp
ss
retf
pop
cmp
cs
in
jae
cmps
shl
jmp
popa
pusha
hlt
mov
and
xchg
adc
arpl
repnz
out
cmp
pop
push
icebp
stc
add
pushf
(bad)
into
adc
add
lahf
rcr
shr
mov
retf
dec
stc
cmp
mov
loop
int3
sub
int3
out
bound
sub
cmp
sub
shl
add
nop
fucomp
leave
je
mov
and
repnz
movs
adc
adc
xor
jbe
dec
mov
push
movs
xor
mov
(bad)
repz
ins
repnz
out
out
push
cld
inc
in
push
lock
mov
sar
cmp
lahf
inc
in
cmp
dec
lea
jne
lea
pop
xchg
cli
movs
push
cmp
sub
push
lea
mov
or
or
cmp
pop
fwait
xor
push
ins
arpl
fiadd
pop
popf
leave
popa
mov
sub
add
pop
cmp
mov
inc
dec
sub
rol
hlt
lds
jge
movs
dec
out
sbb
sbb
mov
pop
jle
ret
aaa
jne
add
scas
push
pop
aad
push
pop
cmp
jnp
fadd
cdq
inc
sbb
adc
mov
mov
inc
fs
out
and
mov
push
clc
push
les
xor
movs
mov
xchg
jg
adc
pop
cmp
mov
add
mov
ret
xchg
jne
xchg
or
out
fild
cmps
gs
sbb
mov
(bad)
mov
mov
loope
outs
stos
adc
xor
iret
sbb
stos
pop
inc
call
jbe
sbb
movs
sub
in
shl
mov
xor
das
(bad)
jge
pop
mov
cmp
(bad)
cmp
mov
cmp
mov
fld
ss
sbb
dec
(bad)
pop
popf
arpl
mov
adc
into
pop
dec
imul
stos
lock
movs
scas
push
pop
cmp
jecxz
xor
retf
shr
(bad)
push
push
aam
ds
nop
(bad)
jl
mov
xlat
cmp
and
pop
pop
inc
dec
scas
rcr
shl
lea
cdq
repz
mov
sub
ficom
jo
rcl
xor
call
inc
ins
es
pop
inc
je
inc
jp
pop
out
lods
aas
jge
jmp
cmps
and
mov
xchg
and
movs
fs
inc
fcomip
pop
push
jns
xchg
fwait
sub
enter
ja
mov
outs
into
nop
push
shr
gs
mov
cmp
call
cli
data16
and
xchg
popa
xlat
mov
loop
int
call
or
cmp
inc
pop
mov
cmps
ds
add
jp
mov
jo
unpcklps
mov
xchg
lods
mov
ja
sbb
jl
addr16
mov
xchg
dec
icebp
xchg
adc
hlt
push
fdivr
ins
(bad)
and
and
(bad)
jae
xor
push
push
jl
retf
mov
xor
pop
adc
cmp
(bad)
les
adc
(bad)
sbb
js
cmp
stc
lock
call
cmps
cmp
pop
jno
sub
mov
out
js
and
cwde
fcmovb
out
push
sbb
jp
js
cmp
xchg
nop
xor
dec
adc
addr16
cmp
(bad)
dec
movs
mov
mov
and
fidiv
dec
outs
scas
call
push
xor
push
or
fcomp
or
jnp
mov
sub
mov
cli
inc
or
retf
sahf
mov
cmp
fs
sbb
inc
mov
and
ds
adc
adc
das
mul
mov
sub
push
jecxz
retf
mov
addr16
shl
int3
sbb
push
cmp
push
push
repz
jle
sub
lds
out
mov
sbb
mov
shr
cmp
push
mov
xchg
sub
jb
jne
adc
outs
cmp
in
xlat
or
dec
or
mov
shl
add
inc
mov
and
cdq
xor
push
call
push
cli
dec
xor
or
mov
jnp
aad
jo
ja
icebp
mov
inc
shl
xor
mov
sub
xor
mov
mov
dec
push
or
add
dec
xchg
sbb
arpl
xchg
mov
mov
fisub
mov
jnp
pop
or
cli
jbe
dec
fs
xor
dec
out
inc
js
in
inc
jg
push
mov
and
xchg
xor
cmp
les
sub
loop
inc
push
sar
stos
gs
push
lea
shr
push
sbb
adc
push
int3
inc
xor
in
pushf
pop
push
retf
sub
pop
movs
jae
aam
das
add
sub
jp
(bad)
add
jae
test
mov
aam
dec
daa
(bad)
iret
pushf
js
and
dec
out
mov
pop
pushf
push
retf
retf
hlt
push
pop
mov
xor
mov
call
sbb
and
dec
add
inc
adc
push
fld
repz
dec
jp
sbb
mov
dec
test
mov
or
fild
aaa
and
nop
(bad)
fstp
sub
xor
sbb
iret
mov
push
xchg
cmp
fdiv
or
lods
push
xchg
sbb
rcr
mov
adc
rcl
out
es
xor
adc
dec
xor
daa
stos
and
push
add
mov
addr16
mov
fwait
sub
push
mov
add
popa
clc
ficomp
pushf
jno
cmp
out
xchg
pop
mov
push
fsub
dec
mov
add
mov
leave
push
stos
and
sub
jle
cmp
popa
xor
inc
les
dec
adc
hlt
inc
adc
push
div
addr16
movs
stc
mov
fisttp
mov
mov
add
inc
outs
sub
mov
mov
sub
repz
movs
ins
lahf
xor
fldcw
jmp
dec
retf
adc
movs
pop
sahf
mov
xor
shr
push
scas
cwde
sar
retf
adc
les
movs
into
xchg
inc
lds
adc
inc
scas
mov
fst
inc
jecxz
xchg
ins
and
mov
xor
aad
mov
aad
jp
sub
mov
out
out
cdq
cmp
xor
mov
popf
pop
test
retf
cmp
jbe
movs
add
in
adc
cmc
movs
cli
push
push
test
ret
adc
mov
cmp
pop
jl
xor
add
out
mov
ins
jecxz
call
sub
adc
xchg
xchg
xchg
sub
inc
mov
jne
adc
jbe
loopne
ss
jmp
xchg
mov
push
add
xchg
jg
sbb
and
and
imul
and
popa
aad
jns
mov
inc
jnp
mov
rcl
adc
push
xor
aaa
stos
arpl
ret
lahf
lods
sub
xchg
sbb
and
iret
repnz
dec
sub
mov
inc
adc
lds
ror
cmp
mov
je
daa
jmp
pop
jo
jmp
mov
fs
inc
dec
repnz
add
(bad)
or
xchg
adc
es
ret
mov
push
xor
cmp
push
add
ret
xchg
adc
lods
xchg
nop
push
xchg
das
mov
xchg
xchg
sahf
out
xor
mov
into
add
cld
imul
jb
pop
aad
movs
mov
loop
push
hlt
nop
mov
inc
push
and
(bad)
sbb
call
fsub
ret
sahf
cmp
rol
cs
daa
dec
sub
cmp
and
and
sub
pop
loop
push
daa
cmp
lds
retf
jecxz
lds
xor
and
dec
adc
jnp
mov
test
sahf
les
pop
and
bound
xchg
mov
xchg
out
inc
retf
ja
mov
jae
aaa
neg
add
imul
popf
adc
imul
out
jae
loop
pop
push
push
lock
pop
sahf
xlat
loop
out
test
inc
test
dec
push
les
cmp
shr
fild
jbe
rol
mov
test
(bad)
imul
xor
mov
hlt
push
pop
sahf
popf
arpl
jmp
shl
push
add
sub
cs
push
mov
int3
push
and
gs
je
pop
je
push
adc
jns
lock
scas
mov
lods
pop
push
adc
pop
ins
and
dec
sbb
pushf
jmp
stc
call
push
aam
shl
push
stos
lahf
add
(bad)
cmps
cld
add
aaa
cmp
cmp
and
das
push
das
ins
jmp
out
jecxz
and
cmps
mov
push
sub
movs
and
out
stc
mov
xor
mov
push
push
mov
xor
data16
enter
les
loop
push
push
mov
mov
dec
outs
dec
mov
mov
adc
mov
and
daa
dec
idiv
ror
aam
jp
lds
les
push
xchg
pop
push
xchg
xor
aad
ds
inc
rol
fcomip
imul
pop
push
inc
mov
ds
fist
dec
fsubr
mov
push
xor
mov
(bad)
pushf
xchg
mov
fld
aas
mov
mov
retf
mov
out
mov
fwait
mov
repnz
pop
mov
adc
jbe
retf
fimul
push
and
movs
mov
fisttp
cwde
xor
push
es
gs
stos
int3
pusha
cmp
jne
sub
iret
(bad)
xchg
xor
jnp
cmp
out
mov
push
movs
je
les
inc
scas
pop
into
aam
xor
test
rol
and
push
xchg
leave
lahf
add
fadd
sbb
push
bound
adc
ror
or
mov
jbe
xor
jae
repnz
movs
jns
add
int
cmp
mov
xchg
lods
hlt
cmp
fsub
(bad)
mov
call
xchg
add
push
sbb
add
out
push
sbb
fwait
and
cdq
call
fs
lahf
out
(bad)
stos
push
xor
pop
and
popf
dec
loop
fild
push
add
je
out
xor
out
jl
div
arpl
js
repnz
je
pop
inc
jb
or
in
ret
cmp
jns
jmp
inc
xor
movs
push
lds
out
(bad)
mov
inc
mov
xor
push
jge
and
call
mov
push
jge
push
mov
stos
daa
mov
(bad)
jge
lds
pop
jb
adc
lds
push
fsubr
mov
mov
adc
mov
addr16
mov
stos
ins
push
pop
cmc
add
jmp
imul
add
into
outs
push
rcl
movs
mov
pop
jle
(bad)
push
xchg
jl
test
daa
pop
cmp
and
shl
dec
or
cmc
jbe
dec
xor
inc
xor
pushf
jae
pop
jbe
addr16
dec
shl
icebp
out
add
cli
sbb
stos
mov
pop
addr16
mov
sub
adc
cld
loopne
mul
aad
dec
out
add
repz
jbe
jge
icebp
push
js
push
and
add
gs
repz
mov
imul
inc
arpl
addr16
dec
std
ins
sub
and
mov
jbe
clc
jmp
fstp
aam
bound
xor
(bad)
mov
push
inc
sub
mov
sub
and
adc
push
sub
ret
lods
adc
fcom
xchg
outs
call
out
pop
pop
fs
stos
out
fwait
mov
ja
mov
inc
dec
iret
mov
cmp
movs
push
(bad)
or
pusha
shl
cmps
in
mov
and
cmp
cli
push
add
xchg
push
jl
sbb
ins
push
fwait
adc
scas
cmp
add
jnp
push
xor
sahf
or
out
add
and
dec
or
int
xor
jge
xchg
lea
enter
pushf
popf
hlt
inc
shl
or
rol
add
cmp
ror
jne
jle
enter
adc
daa
xchg
retf
lahf
push
sub
cmp
or
cld
jne
(bad)
pushf
xchg
pop
mov
and
cdq
dec
mov
scas
dec
pusha
out
fcmovu
or
or
mov
and
fwait
mov
push
rol
clc
jnp
pop
pop
dec
xlat
inc
pop
adc
(bad)
mov
sahf
cmps
xor
(bad)
jns
sbb
add
xor
mov
push
loope
inc
daa
inc
mov
xor
jle
sub
and
push
fs
dec
call
aam
cld
pop
dec
adc
and
xchg
leave
xchg
gs
lock
or
test
jns
sub
and
mov
mov
out
ret
ja
js
mov
into
mov
jp
mov
inc
in
mov
loopne
test
aaa
loope
sbb
push
popf
sysret
(bad)
or
and
ss
gs
mov
lock
push
xchg
xor
enter
clc
sbb
add
and
jmp
inc
jbe
int3
xor
mov
outs
pop
xor
adc
push
cmp
arpl
or
lahf
mov
xchg
sbb
gs
xor
mov
test
and
mov
cmp
das
push
rcl
imul
adc
inc
mov
int
out
shl
stc
gs
repz
dec
test
ds
outs
ins
or
inc
cmps
cmp
sbb
int3
push
jg
jb
imul
aas
cwde
mov
and
and
sbb
jge
into
dec
lods
sbb
out
in
dec
mov
mov
mov
pop
dec
scas
xchg
xchg
aad
xchg
(bad)
aas
lea
out
xchg
je
push
and
cmp
pop
pushf
inc
mov
cmps
popa
inc
inc
retf
xchg
test
lahf
push
cdq
mov
pushf
add
imul
aad
pop
xor
nop
test
call
sahf
loope
retf
mov
cmp
lds
and
adc
or
nop
icebp
pop
xor
pop
fiadd
mov
icebp
inc
sub
retf
jmp
dec
arpl
outs
mov
and
daa
pop
cmps
xchg
rcl
mov
push
mov
vunpckhps
inc
mov
stos
cmp
cli
dec
xchg
push
or
inc
dec
into
mov
in
mov
mov
iret
sub
mov
pushf
xchg
les
add
mov
movs
push
dec
push
adc
push
(bad)
outs
movzx
xchg
out
or
mov
add
je
xchg
cwde
aam
mov
dec
daa
pop
and
dec
or
mov
xchg
mov
cmp
data16
call
or
cs
bound
push
(bad)
mov
pop
mov
sbb
in
ret
cmp
mov
and
retf
mov
fcomp
cld
cmp
sar
cdq
mov
adc
cwde
xchg
fadd
pushf
or
movs
pop
dec
inc
imul
jmp
adc
add
cmp
ret
fbld
mov
push
jae
movs
cli
xor
icebp
jecxz
into
inc
cld
pop
test
pushf
push
sbb
fs
xchg
add
popa
jmp
and
jae
shl
or
hlt
jae
nop
mov
popf
dec
cmp
pusha
mov
sub
jbe
call
and
cmc
pop
psubusb
xor
or
sbb
outs
call
rcl
das
gs
cmp
push
stc
mov
nop
inc
sahf
test
retf
fs
mov
call
nop
lock
call
imul
les
in
sub
push
leave
add
and
pushf
jl
sub
jns
das
es
ret
lea
or
dec
or
data16
mov
test
xor
and
push
adc
mov
inc
inc
movs
push
test
and
rcr
push
fistp
fistp
xlat
sbb
std
xchg
push
(bad)
push
fdivr
mov
out
es
leave
cmp
pop
in
popa
call
adc
sbb
ds
cdq
inc
xchg
sub
out
(bad)
repnz
push
push
clc
cmp
imul
mov
frstor
lods
dec
cmp
imul
fcomp
popa
cmps
or
data16
inc
mov
sub
adc
inc
inc
or
loopne
xor
loopne
or
ror
aad
(bad)
mov
fisubr
shl
cld
xor
mov
dec
xchg
push
mov
lock
adc
ret
mov
mov
jb
adc
push
mov
dec
ret
xor
push
leave
into
call
scas
fst
push
add
arpl
sbb
retf
mov
add
dec
or
fnstcw
pop
jp
sahf
cs
aad
jp
sbb
xchg
jecxz
test
sub
int
mov
jmp
js
aad
inc
xchg
jmp
fbstp
mov
sub
or
in
xor
dec
sub
leave
mov
imul
dec
mov
jo
loope
lds
test
mov
dec
repnz
test
aad
mov
pop
aas
lock
push
nop
add
test
test
jbe
pop
fistp
outs
les
arpl
jae
inc
imul
jg
or
jl
push
ins
fist
inc
or
fstp
push
mov
xchg
movs
sti
cmp
inc
std
adc
mov
xchg
jae
mov
ins
xchg
in
ret
dec
popa
ret
mov
retf
jmp
sub
adc
bound
xchg
(bad)
dec
je
out
jbe
mov
dec
loopne
es
dec
(bad)
sbb
mov
into
cmp
popf
xchg
lds
rol
dec
scas
pop
fidiv
cmp
popf
inc
push
dec
push
fwait
cmc
push
rcr
and
out
sbb
push
test
jl
mov
jns
pop
mov
retf
sub
neg
inc
jmp
ror
dec
cmp
ja
add
out
pop
jp
(bad)
mov
dec
xor
pusha
push
push
sar
mov
mov
mov
xor
mov
push
push
add
sub
push
add
cli
add
(bad)
pop
push
push
retf
loop
sbb
ficom
out
xchg
jae
mov
push
push
pop
addr16
cmp
mov
inc
and
inc
cli
dec
jmp
pushf
cmp
dec
push
in
aas
add
xor
push
arpl
mov
jmp
test
pop
fs
(bad)
push
pop
inc
mov
retf
cs
(bad)
jp
pop
jbe
cmp
cmp
nop
inc
pop
push
out
and
scas
outs
xchg
dec
arpl
sub
or
test
fsubrp
pop
inc
or
jnp
mov
ja
dec
cli
xchg
out
xchg
ret
adc
and
mov
call
dec
pop
loope
pop
arpl
cmp
sbb
das
jle
push
cmp
test
jno
test
loop
call
icebp
lock
cmp
rcl
int3
iret
xor
xchg
scas
movs
or
push
cdq
mov
push
adc
dec
imul
cmc
xor
sbb
fs
xor
sub
sahf
test
retf
xchg
repnz
jp
inc
retf
pop
dec
int3
inc
ret
fild
test
jle
call
push
jge
(bad)
cmps
inc
pop
mov
(bad)
pop
ss
push
cmp
or
xchg
(bad)
in
xchg
out
jl
fwait
sub
bound
push
(bad)
xchg
ins
repnz
sbb
and
gs
shr
xor
dec
test
or
movs
push
jmp
movs
(bad)
cmp
jne
cs
pop
or
shl
and
mov
or
inc
sub
dec
pop
cdq
rcl
cmp
ret
ss
cmp
pop
scas
or
push
pop
and
mov
sub
sbb
inc
add
dec
rcr
retf
sub
cwde
dec
xchg
sub
cmps
shl
stos
cmp
or
ror
mov
inc
retf
pop
pop
inc
adc
and
push
and
and
jmp
aam
push
(bad)
ds
add
sbb
jecxz
jns
xor
mov
loop
retf
cmps
sbb
pop
mov
cmc
push
sub
loop
push
sub
cli
movs
pushf
mov
(bad)
(bad)
ret
mov
ret
sub
test
cmp
cli
inc
cwde
rcr
fmul
jb
pop
dec
fcom
push
push
(bad)
jbe
add
sbb
stos
scas
dec
cwde
mov
add
(bad)
daa
and
out
mov
sub
xor
and
mov
js
push
mov
push
popa
cmps
mov
fldcw
jno
fcmovnb
shr
pop
movs
adc
jbe
pop
cmps
xor
push
add
sahf
les
jbe
stos
xlat
lea
mov
xchg
int
fidiv
xchg
fisttp
stos
xor
and
fsubr
push
clc
nop
dec
pop
ds
pop
jnp
push
sahf
sub
pop
pop
test
and
inc
push
inc
and
test
mov
or
gs
add
pushf
dec
or
aam
xor
out
(bad)
les
daa
mov
jns
mov
jmp
xor
arpl
pop
(bad)
mov
imul
inc
mov
(bad)
adc
and
mov
or
adc
cs
in
sti
and
sar
fsub
jp
sub
cmps
xor
(bad)
scas
addr16
scas
push
es
scas
je
icebp
xchg
mov
sub
cmps
rcl
jle
dec
jge
cli
call
cli
jg
sti
xchg
sbb
push
aas
xchg
and
push
sub
out
out
adc
and
inc
adc
popf
pop
and
call
pop
add
or
imul
xor
cmp
mov
inc
js
loopne
dec
sub
jmp
push
mov
int3
int3
in
dec
pop
sbb
push
test
xor
test
xlat
test
and
daa
inc
push
sar
stc
sbb
loop
pusha
bound
hlt
test
or
loopne
xor
add
mov
push
sbb
enter
push
clc
add
shr
lea
lds
out
jb
call
add
push
xor
loopne
cmp
arpl
nop
fs
and
je
dec
xor
inc
sbb
cmps
call
fadd
jle
ss
movs
xchg
pop
add
cli
enter
ss
retf
jb
xlat
iret
stos
sbb
stc
cli
add
iret
mov
bound
cmp
mov
xlat
mov
call
sub
pusha
cmp
or
jnp
jb
xchg
or
push
mov
(bad)
mov
(bad)
sbb
mov
xchg
xor
mov
add
push
nop
mov
dec
mov
xchg
pop
dec
jge
xor
dec
loope
xchg
aam
mov
outs
jge
aam
cmp
mov
dec
add
push
outs
gs
pushf
lods
jb
mov
lds
outs
jnp
mov
mov
pop
ret
fdiv
out
test
in
mov
sub
je
mov
out
iret
jne
sub
mov
pop
enter
jne
and
cwde
stc
shl
push
pop
(bad)
cmp
push
frstor
sti
sub
movs
mov
cs
mov
out
fiadd
fidivr
jp
(bad)
call
js
hlt
pop
add
cmp
or
in
jb
add
dec
xor
loope
cli
inc
mov
stos
mov
dec
imul
xor
aad
or
inc
mov
nop
arpl
(bad)
es
ret
icebp
mov
arpl
fwait
jo
hlt
adc
xor
sub
and
iret
int
mov
aad
sbb
xchg
outs
ss
pop
mov
adc
and
cs
add
retw
in
xchg
out
idiv
inc
scas
retf
fist
sti
enter
sbb
jmp
sbb
pop
ret
push
stos
(bad)
push
dec
sub
dec
mov
pop
cli
add
fisttp
out
out
xchg
fdivr
mov
outs
xchg
addr16
stos
and
jno
mov
imul
push
jmp
push
ret
outs
mov
cdq
(bad)
fadd
adc
aas
cmp
cmps
jns
or
push
pop
daa
dec
movq
sbb
ret
(bad)
or
sahf
out
xchg
cli
movs
push
inc
inc
pop
jno
adc
popa
mov
cdq
jle
in
mov
mov
or
rcr
test
lods
pop
jmp
sbb
pop
aad
idiv
int
adc
and
shl
dec
push
pop
inc
pop
in
cld
into
rcl
shr
push
mov
xor
callw
add
mov
ret
aas
int
lea
aam
jle
jecxz
aaa
push
(bad)
cdq
cdq
jmp
loop
xchg
adc
push
loope
das
push
xor
adc
jno
fisttp
push
test
pushf
mov
inc
popa
adc
std
stc
stos
add
add
call
iret
and
jecxz
repz
adc
mov
xor
mov
fs
popf
push
scas
add
(bad)
enter
lds
jo
rcl
das
xor
je
les
ret
fstp
addr16
jge
xchg
out
mov
neg
jg
rol
pop
inc
ret
push
ja
mov
loope
mov
pop
inc
aad
es
out
je
mov
jge
xchg
(bad)
fcomp
pop
retf
adc
push
push
inc
xor
std
out
add
and
daa
or
or
xor
cmovns
ins
jle
addr16
mov
adc
(bad)
fwait
and
sub
pop
adc
outs
aas
mov
push
xchg
jmp
shl
iret
stos
sub
sub
jl
jbe
inc
ss
jno
push
jp
pop
cmp
mul
sub
jle
rol
cmp
add
bound
add
fdivp
retf
pop
pop
leave
jbe
mov
inc
mov
aad
push
mov
mov
inc
movs
sub
sub
test
outs
popf
mov
sti
pusha
sbb
jb
pop
and
or
mov
adc
cs
pop
out
adc
aas
adc
(bad)
xor
or
movs
imul
xchg
mov
mov
mov
pop
mov
xor
std
movs
pop
shl
add
dec
pop
ret
add
pusha
in
js
mov
xchg
mul
jge
dec
dec
xor
(bad)
sbb
dec
add
inc
cmp
sbb
out
movs
je
repnz
cmp
push
mov
mov
jecxz
adc
mov
lods
loope
adc
jecxz
pop
or
sbb
adc
ret
sbb
cmp
cmp
call
fs
sub
add
aas
cmps
xor
or
popf
and
imul
jg
add
cmp
ret
sar
xor
or
(bad)
(bad)
xor
call
les
sbb
sub
jg
retf
aaa
sbb
mov
xor
pushf
mov
mov
or
cmp
loopne
jbe
fsubr
fbstp
fld
out
mov
mov
jl
in
jbe
pop
test
lahf
and
cs
test
sbb
lods
or
int3
sub
fadd
outs
add
jb
std
neg
mov
jg
xchg
rol
stc
popf
sbb
mov
pop
je
xchg
in
cmp
retf
popf
pop
enter
sahf
xor
ret
mov
mov
jge
ret
jp
mov
dec
mov
or
dec
mul
sbb
cmp
stos
loop
div
pop
repnz
cmp
lea
mov
repnz
push
ja
iret
(bad)
inc
mov
push
inc
fist
dec
mov
popf
sti
hlt
les
push
and
dec
out
sahf
mov
mov
sbb
scas
fdiv
cmp
pusha
lock
push
lds
and
pop
cmp
jle
add
cmp
ret
data16
ret
cmp
std
out
daa
mov
cli
pop
ins
and
mov
iret
xor
sub
fs
cwde
dec
push
fwait
or
fdiv
jp
imul
push
or
ss
or
mov
lods
push
aas
cmp
mov
pop
ja
xchg
loop
xor
scas
pop
mov
std
mov
inc
adc
les
dec
aad
and
jae
sub
cwde
jb
lock
hlt
jmp
cmp
shl
comiss
sub
mov
out
stc
xor
loopne
ds
and
xchg
pop
dec
mov
bound
cmp
pop
mov
sahf
mov
mov
(bad)
pop
xor
(bad)
inc
xor
(bad)
adc
gs
ds
and
ins
dec
inc
out
and
cmps
inc
push
add
jne
cdq
add
mov
push
or
es
dec
lods
shr
push
jb
xor
xchg
jne
mov
xor
add
mov
mov
inc
dec
mov
(bad)
icebp
mov
jns
call
mov
out
push
xchg
jmp
out
mov
dec
lods
xchg
stc
clc
adc
fst
mov
add
fldlg2
cmp
sbb
enter
sub
ret
outs
test
dec
adc
aas
mov
sub
cli
fisttp
retf
out
cmp
loope
sub
mov
and
inc
or
ins
lods
fs
or
jle
call
mov
sbb
cmps
dec
dec
ja
mov
sub
test
aad
call
add
cli
push
xchg
jmp
retf
push
ja
lods
cmps
mov
inc
sub
fadd
push
jmp
mov
jne
jnp
sub
xor
sahf
xor
call
jo
inc
sahf
les
sub
pop
movs
sbb
int
stos
inc
push
and
fcom
add
sub
retf
inc
mov
movs
push
and
iret
cwde
lea
stos
cmp
inc
outs
hlt
mov
sbb
shr
test
das
push
pop
jae
sub
rsm
cmp
dec
int3
sbb
mov
aaa
(bad)
das
clc
inc
mov
outs
mov
aam
aam
lods
outs
jg
icebp
push
out
sahf
test
retf
mov
jg
enter
(bad)
jle
xor
push
repz
outs
push
add
pop
sbb
(bad)
xchg
ja
sar
push
call
push
aaa
es
push
retf
adc
pop
popf
or
ror
add
ins
imul
ss
(bad)
aas
cmp
adc
pop
mov
mov
scas
aam
repnz
sub
ins
mov
mov
or
pop
lods
and
adc
ds
fisubr
and
arpl
iret
int3
jp
retf
xchg
pop
arpl
test
in
push
sub
push
hlt
mov
dec
test
mov
aas
test
dec
xor
(bad)
(bad)
loopne
mov
or
push
adc
scas
test
mov
and
outs
mov
lds
inc
push
retf
jg
mov
or
mov
add
fistp
mov
xor
dec
sub
(bad)
movs
sti
inc
(bad)
mov
shr
cwde
inc
lock
call
jb
fcomp
dec
jmp
add
clc
in
xor
push
pop
push
pop
retf
and
sbb
(bad)
repnz
jno
or
and
imul
xchg
mov
xlat
ret
in
mov
sbb
jmp
jmp
mov
xchg
lods
leave
test
(bad)
and
or
push
jae
lea
xchg
mov
retf
int3
pop
mov
inc
rcr
pop
cmp
pop
mov
int3
scas
push
pop
cwde
dec
test
jecxz
push
sub
sbb
scas
ret
fsubr
inc
xchg
cmp
push
stos
jne
sbb
or
inc
cmp
cmovo
int3
pop
xor
push
push
inc
lods
dec
pop
xchg
leave
pop
mov
aam
int3
in
in
sahf
mov
ror
fcomi
push
pop
jge
dec
cmp
pop
xchg
cmp
nop
dec
xor
js
add
add
push
add
and
mov
loop
(bad)
ficom
stc
mov
push
imul
int3
adc
fs
fild
push
imul
idiv
xchg
xor
mov
arpl
pushf
xchg
adc
inc
mov
mov
sbb
cdq
sbb
mov
adc
push
arpl
add
fs
inc
test
cmp
aad
push
sub
pop
jp
mov
push
mov
movs
pop
fnstenv
int3
out
inc
icebp
stc
adc
inc
rcr
inc
dec
stos
imul
aas
cmovl
stos
or
int3
xchg
xor
sub
je
dec
scas
frstor
js
fldcw
int3
int
xchg
inc
icebp
mov
or
fdiv
sbb
mov
sbb
xor
jmp
mov
in
mov
xchg
mov
jnp
adc
test
xchg
stos
pop
popf
in
push
and
sbb
xchg
push
cs
adc
out
mov
outs
push
mov
jne
leave
in
mov
aas
dec
or
jg
iret
cmp
inc
retf
push
and
sbb
push
sub
jle
test
es
push
ins
lods
pop
push
pop
adc
dec
mov
dec
push
and
(bad)
movs
mov
fcos
push
sbb
int
ret
xchg
adc
adc
fdiv
mov
inc
cdq
mov
in
ins
inc
and
or
push
pop
not
hlt
imul
pop
xchg
sbb
fdivr
pop
aaa
push
(bad)
popa
stos
and
mov
in
push
fs
adc
cmps
dec
test
ret
xchg
fwait
add
xchg
out
cmps
jne
inc
ins
dec
icebp
std
xor
mov
adc
iret
iret
or
mov
dec
fdiv
enter
hlt
call
pop
sbb
and
int3
push
push
jbe
and
ja
or
in
sbb
imul
mov
mov
call
push
push
shl
out
sub
test
xchg
xchg
push
dec
(bad)
int
imul
push
or
cmp
ror
fcom
call
add
mov
push
or
mov
iret
out
fidivr
or
or
xchg
sbb
in
shl
movs
cmp
pop
or
push
in
dec
(bad)
xor
cdq
jg
fcomp
adc
movs
pop
or
mov
xchg
jo
das
stos
jbe
push
cld
hlt
jns
loope
mov
das
imul
shr
lds
pop
mov
mov
or
jecxz
pop
inc
mov
add
push
cmp
pop
xor
or
mov
mov
mov
call
call
pop
sub
inc
jno
pushf
cmp
mov
sub
jl
(bad)
jnp
mul
sub
(bad)
dec
gs
or
shr
nop
scas
inc
xchg
inc
cwde
pop
cwde
add
aam
fs
jecxz
pop
sbb
push
int
pop
xchg
dec
dec
test
pop
stos
mov
movs
mov
fwait
lea
and
test
pop
mov
fwait
add
or
add
ja
inc
xchg
dec
xor
mov
inc
retf
xchg
les
stc
sub
jns
xchg
add
shl
jg
pop
dec
jmp
dec
push
stos
out
and
cmps
inc
shl
sbb
or
pop
jns
pop
jmp
or
in
jmp
adc
mov
imul
mov
inc
cmp
out
mov
(bad)
arpl
sub
jne
aam
lds
ins
cli
cmp
cmp
sub
popa
push
dec
mov
icebp
outs
mov
or
jge
add
or
sub
inc
aaa
jne
jg
out
mov
fdivr
(bad)
jl
or
cmp
push
jl
jmp
push
sub
inc
std
popf
sti
ins
pop
jle
adc
jnp
or
inc
mov
add
mov
mov
inc
inc
xchg
xchg
fbld
loop
add
lea
or
pop
aas
in
mov
sub
mov
push
jno
cmp
in
sbb
sub
imul
add
mov
pop
mov
fdiv
rcl
div
xor
(bad)
jl
xlat
movs
cmc
out
mov
push
push
(bad)
sub
xchg
jmp
xchg
shl
frstor
add
push
xor
add
xor
add
cld
xor
cmp
adc
mov
daa
push
popf
pop
push
adc
cmps
pop
(bad)
mov
add
push
pusha
pop
mov
inc
rcr
movs
jg
std
fs
fisub
fisub
xor
retf
pop
sar
xchg
mov
push
add
fiadd
rcl
pop
std
pop
pop
and
xor
sahf
in
ss
pop
mov
pop
inc
test
mov
repnz
call
jno
movs
push
pop
retf
aas
leave
sar
jecxz
repz
sbb
je
jecxz
mov
push
sbb
jns
add
mov
in
and
cmps
jmp
mov
sub
imul
loope
add
mov
push
sub
cmp
or
jno
(bad)
xchg
mov
data16
mov
dec
popf
pop
pop
out
daa
adc
sub
jp
push
push
mov
test
repnz
rcr
push
mov
mov
popa
xchg
sub
out
push
test
mov
popf
mov
jo
ffree
mov
jae
cwde
lock
sub
dec
mov
mov
ss
fisub
or
mov
mov
sbb
mov
mov
jnp
jg
enter
retf
mov
push
pushf
cmps
cmp
call
push
fild
cmc
or
(bad)
out
arpl
test
or
mov
jo
mov
jbe
mov
mov
daa
hlt
sub
or
and
mov
jo
mov
enter
jge
test
xchg
mov
retf
mov
call
inc
xor
retf
mov
ins
sub
scas
test
int3
repnz
and
dec
movs
mov
sahf
dec
fistp
clc
sub
cmc
out
cld
and
pushf
sub
lea
sbb
je
imul
inc
sbb
sub
xchg
sbb
ja
mov
gs
imul
out
and
xor
scas
scas
lock
mov
cdq
rcl
fld
mov
add
mov
jmp
pop
das
retf
lods
retf
and
mov
mov
push
repnz
(bad)
mov
sbb
xor
repz
ins
in
inc
retf
mov
icebp
inc
ror
sbb
shr
das
repz
nop
(bad)
repnz
fs
fisubr
std
loope
adc
ja
mov
pop
jns
add
test
into
or
mov
add
mov
pop
mov
push
inc
(bad)
rcl
cwde
cmp
int3
and
pusha
jne
xor
ja
(bad)
out
ret
shl
and
ffreep
test
enter
aad
iret
sbb
call
mov
dec
cmp
mov
mov
sbb
mov
aam
aas
mov
pcmpeqb
js
pushf
mov
mov
and
out
or
dec
fadd
repz
(bad)
movntq
cli
ss
stos
je
pop
dec
cmps
ss
scas
cmp
mov
hlt
movs
(bad)
(bad)
out
mov
mov
push
jae
and
out
pop
in
sbb
mov
shl
lds
scas
cwde
fwait
cmp
ret
add
lea
and
(bad)
dec
dec
or
std
hlt
int
mov
out
mov
add
lds
mov
cmp
mov
cs
test
jecxz
pop
ins
ins
ret
mov
push
out
call
ins
pop
cmps
fcomp
inc
nop
and
cmp
push
shl
cmc
mov
ss
xchg
or
mov
sbb
gs
daa
or
adc
xchg
ret
xchg
or
add
xchg
stc
xchg
adc
fisttp
test
dec
mov
dec
adc
inc
push
popa
jmp
sub
cmp
push
adc
jge
mov
sbb
push
test
mov
sbb
ins
sti
fisttp
pop
adc
jle
add
ret
retf
jge
adc
pop
(bad)
add
add
test
dec
push
push
cmp
test
mov
or
ss
mov
inc
jp
jb
xchg
push
or
cmp
jne
sti
lea
xor
pop
div
call
clc
addr16
call
inc
into
dec
ins
xor
int
(bad)
lods
scas
(bad)
push
hlt
jae
fdiv
out
into
push
sar
sub
fsubr
mov
call
mov
test
les
data16
push
or
mov
aam
les
not
push
inc
adc
pop
ss
cmp
sub
in
and
sub
add
xor
jmp
adc
sub
push
lea
push
mov
daa
inc
dec
push
jl
shl
mov
sub
test
cdq
cmp
and
aaa
jg
popf
movs
test
xor
sahf
jbe
stos
enter
ds
mul
sbb
sahf
sahf
movhps
pop
bnd
add
and
jno
add
out
push
sbb
aad
add
jp
cwde
xchg
fcomp
dec
in
push
imul
adc
(bad)
stc
aam
pop
xchg
test
retf
jg
dec
ds
add
shl
jbe
adc
pop
(bad)
fistp
jg
mov
cdq
pop
bswap
les
cmc
and
(bad)
aad
jle
hlt
adc
retf
sbb
jl
mov
and
and
jmp
in
pop
ins
bound
imul
dec
sbb
movs
push
in
rcr
mov
mov
adc
add
inc
or
jbe
or
push
push
frstor
mov
call
repnz
push
or
fidivr
stc
xchg
xor
icebp
fild
dec
sub
mov
cmovl
sbb
push
jbe
mov
sub
or
cmp
(bad)
shl
daa
adc
add
pop
push
or
mov
test
sbb
jle
repnz
ret
ds
xchg
dec
stos
call
mov
cmp
scas
mov
enter
adc
adc
sbb
ret
ja
jp
popfw
mov
adc
inc
test
and
xchg
add
pop
mov
and
pushf
call
or
inc
and
mov
mov
ja
cwde
inc
push
push
jmp
fs
mov
and
ss
mov
ret
imul
mov
inc
cmp
jne
repnz
test
xlat
inc
add
es
lea
retf
or
fbld
add
jl
mov
inc
xor
ja
sub
sbb
jecxz
je
(bad)
int3
jmp
xor
mov
dec
addr16
jbe
arpl
inc
and
inc
pop
gs
repz
jo
or
stos
sub
dec
jns
and
push
sti
addr16
cmp
test
imul
mov
dec
sbb
repnz
cmc
or
mov
fs
add
out
rol
inc
jle
hlt
push
repz
or
sar
pop
call
mov
into
mov
mov
in
inc
sub
inc
fistp
mov
jae
mov
add
mov
test
mov
scas
(bad)
pushf
add
mov
sar
mov
loopne
mov
push
in
sub
fmul
dec
test
mov
xchg
push
push
pop
imul
std
cs
(bad)
test
daa
push
loop
jne
push
cmps
aas
or
test
sub
lods
sbb
shl
ficomp
lods
and
cmc
int
in
xor
and
push
shr
xor
adc
daa
mov
xchg
push
pushf
mov
aad
pop
(bad)
clc
dec
xchg
rol
inc
dec
adc
jg
mul
xchg
ret
add
jnp
pop
imul
out
pusha
sbb
mov
push
out
int
push
movs
mov
and
out
sbb
out
ds
push
arpl
dec
inc
ins
stos
pop
xor
sti
call
sub
mov
sub
push
out
movs
(bad)
push
mov
cmc
or
dec
ret
jmp
xchg
or
adc
or
or
mov
in
mov
mov
clc
fldenv
xchg
mov
in
fbld
test
test
nop
inc
fcmovb
cmps
or
cmp
dec
(bad)
push
mov
push
lds
xor
mov
jbe
std
sbb
xor
and
dec
jl
pop
cli
or
adc
pop
out
inc
push
push
lds
xor
inc
mov
jno
inc
dec
or
jecxz
push
imul
cdq
movs
xchg
and
jl
push
xchg
jne
push
(bad)
push
jb
and
push
ins
sbb
and
inc
mov
mov
les
fistp
add
and
sub
shl
jno
int
in
and
xchg
jle
div
adc
clc
or
mov
imul
aas
jge
outs
call
adc
cmps
repnz
jb
idiv
jnp
push
(bad)
jl
aad
and
ins
aas
dec
cdq
jb
hlt
repnz
xor
add
cmc
push
adc
int3
(bad)
push
or
nop
pusha
pop
mov
and
adc
xchg
movs
js
jae
cmps
shl
jae
jecxz
push
bound
add
push
jne
jno
jnp
push
xchg
mov
int3
inc
loop
inc
hlt
add
mov
or
push
sbb
mov
sub
test
sbb
rol
add
mov
xor
in
in
enter
dec
ins
pusha
cmps
call
icebp
xor
mov
shl
lock
add
rcl
mov
daa
shl
jno
push
push
mov
cmp
ins
dec
aaa
jb
pop
xchg
leave
and
mov
add
ds
push
add
test
clc
and
clc
ficomp
sahf
sub
xchg
or
ficomp
add
jo
test
jne
in
adc
leave
popa
cmc
or
dec
add
aaa
test
sbb
not
dec
push
bound
aad
jns
xchg
loope
xchg
jno
inc
cld
cmp
pop
ret
(bad)
fidiv
je
jp
mov
fmulp
scas
pop
adc
bound
sub
adc
xchg
mov
fmul
adc
mov
movs
rcl
loop
sbb
add
jno
adc
dec
out
add
mov
sub
mov
sub
aas
or
xchg
pop
mov
ja
xchg
xor
xor
mov
aad
cmps
add
push
jg
arpl
call
lods
mov
movs
cmp
test
and
popf
(bad)
int
jp
inc
mov
ss
sbb
dec
push
mov
movs
inc
jle
fldenv
or
mov
and
jle
ins
pushf
and
adc
mov
in
arpl
jo
cmps
aaa
mov
push
sub
pop
dec
push
xor
iret
add
inc
xor
cmp
cli
ss
loope
and
das
push
in
pop
inc
hlt
xchg
out
mov
mov
stc
test
imul
loope
mov
ins
retf
jmp
cmp
scas
ds
pop
cmp
sbb
adc
in
sti
mov
and
or
cdq
cmp
inc
ds
icebp
cmp
xchg
cmp
cmp
pop
and
movs
es
dec
test
xchg
fcomi
imul
outs
adc
ret
mov
pop
(bad)
int3
mov
inc
je
push
mov
arpl
ret
or
add
dec
mov
mov
les
outs
add
jnp
icebp
outs
cwde
mov
test
sub
test
les
arpl
push
enter
mov
xchg
sbb
xor
push
shl
dec
or
mov
add
push
xchg
jecxz
cld
mov
or
loope
not
out
inc
sbb
in
imul
ret
xor
jnp
leave
mov
(bad)
pop
dec
cld
jns
cdq
adc
dec
push
sub
mov
loop
pop
mov
or
adc
sub
cmp
and
retf
leave
stos
iret
xor
pop
sub
and
adc
mov
loope
mov
sub
cs
push
enter
jb
inc
xor
push
mov
cmp
push
xchg
pushf
bound
lods
or
push
fdivr
adc
xchg
leave
xchg
add
sub
addr16
les
aas
into
mov
fwait
(bad)
in
inc
cmps
mov
stos
fiadd
mov
js
xor
enter
pusha
shl
nop
imul
enter
jnp
dec
push
outs
mov
push
xor
(bad)
push
outs
aaa
arpl
mov
inc
outs
or
stc
or
(bad)
retf
mov
vmread
in
test
dec
sub
sub
pop
retf
out
and
inc
clc
adc
and
jnp
push
jp
or
stc
cmp
fiadd
mov
xor
push
cmp
mov
(bad)
clc
jb
call
inc
ds
and
xor
pop
cli
inc
jo
scas
fwait
ins
or
inc
sub
fiadd
mov
out
(bad)
pop
pop
es
sahf
sub
push
stos
add
jbe
xchg
retf
adc
xchg
xchg
(bad)
call
jmp
push
aam
cmp
je
and
rcl
or
sar
ret
mov
loope
fldenv
cmp
dec
jl
(bad)
out
mov
call
mov
lock
mov
loopne
fwait
hlt
fiadd
push
push
pusha
or
cmp
push
bndldx
sar
push
pop
fstp
or
inc
fild
call
sub
mov
mov
(bad)
in
pop
jnp
dec
repnz
enter
dec
jle
push
xchg
dec
mov
jnp
add
mov
sub
neg
hlt
pop
loope
or
int3
rcl
imul
rcr
popf
lods
jmp
dec
add
mov
mov
fdivr
iret
push
cmp
outs
scas
rol
gs
jge
in
loop
and
ror
movs
jne
fldenv
clc
popa
mov
mov
lods
fwait
shr
mov
daa
in
scas
mov
jae
adc
mov
in
fs
push
add
push
out
sbb
cmp
aas
cmps
cld
sub
push
mov
dec
jl
or
push
push
cwde
mov
xchg
pushf
jnp
sbb
call
or
add
adc
xor
test
iret
mov
cmp
mov
(bad)
jae
and
mov
sbb
dec
pop
aam
jne
aad
shl
dec
idiv
and
into
clc
cmp
stos
cmc
fld
ins
mov
mov
add
jo
mov
out
mov
cmp
imul
jnp
mov
mov
dec
dec
dec
add
sbb
inc
out
inc
(bad)
in
nop
ins
push
dec
(bad)
rol
mov
mov
mov
daa
loope
or
add
std
mov
cdq
mov
(bad)
adc
jo
push
ror
ret
sub
mov
stos
int
cmc
pop
and
mov
inc
es
in
mov
mov
add
mov
icebp
jle
push
cmp
jecxz
fidivr
pop
dec
bound
mov
xor
out
ins
sbb
sbb
ret
popf
cs
sbb
adc
cmc
or
scas
sbb
je
xchg
xor
stos
pop
inc
out
xchg
pushf
cmps
xchg
bound
inc
cmp
push
out
cld
(bad)
sub
push
cmp
outs
push
cmp
mov
mov
adc
js
sbb
push
adc
xchg
sahf
add
cmp
pop
aam
mov
popf
stos
xor
xchg
mov
call
cmp
fucomp
sbb
ror
adc
dec
mov
dec
stos
outs
lock
mov
dec
cmp
sub
push
aad
data16
stc
cwde
pandn
pop
je
pop
iret
mov
out
cwde
shl
mov
pop
cmps
pop
rcl
clc
(bad)
lock
(bad)
sbb
sahf
dec
sbb
sub
push
out
pop
xchg
or
jo
dec
cdq
adc
mov
jmp
push
movs
in
(bad)
xor
loop
into
xabort
inc
or
push
iret
cmps
inc
leave
ret
mov
out
xor
sbb
outs
cmp
scas
xor
cmp
mov
out
sbb
scas
mov
adc
data16
das
and
daa
pop
push
add
dec
jge
cmps
xor
pop
jne
sahf
nop
jno
enter
xchg
addr16
sahf
push
mov
xor
test
jg
loope
cli
rol
lea
jecxz
push
mov
pop
scas
and
pop
scas
pop
push
sti
push
xchg
mov
rol
and
ss
lds
mov
addr16
mov
ficom
lahf
lea
jb
mov
adc
or
sbb
daa
add
xchg
mov
pop
je
imul
(bad)
push
inc
ins
or
mov
mov
mov
ins
xchg
pop
xchg
pop
inc
outs
push
pusha
leave
outs
(bad)
sti
adc
cmc
sbb
push
push
mov
add
outs
push
jnp
jl
dec
fiadd
es
popa
and
fldcw
jo
sub
pusha
inc
lds
jne
scas
jo
popa
xchg
jae
mov
test
xor
inc
jmp
mov
out
add
in
xchg
mov
ret
fimul
cmp
mov
ss
in
pusha
pop
lds
inc
inc
mov
in
(bad)
mov
leave
xor
leave
sbb
call
out
push
call
mov
mov
into
shr
push
fimul
jl
adc
cmc
nop
jmp
call
jmp
mov
sbb
out
outs
dec
xor
mov
mov
jge
xchg
ins
mov
and
dec
pop
repz
in
cmps
adc
cdq
loop
mov
icebp
int3
dec
adc
lea
les
dec
push
inc
enter
out
cmp
jne
loopne
sbb
mov
in
in
adc
out
dec
movs
add
js
int3
js
mov
enter
xchg
mov
pushf
and
je
sub
pop
jno
sub
cmp
cmp
sbb
adc
sar
cld
std
inc
dec
cmc
call
call
pop
fwait
dec
scas
(bad)
test
loop
inc
loope
ss
iret
jo
or
mov
in
test
and
cmp
and
inc
and
dec
pop
inc
scas
mov
stc
cmp
pop
xor
cmp
sub
or
jg
sbb
call
pop
push
mov
inc
sbb
repnz
adc
push
pop
enter
xchg
aas
inc
nop
mov
int3
mov
lock
mov
das
sbb
add
pop
dec
sub
push
adc
jns
ret
xor
sub
int3
mov
dec
rol
lea
mov
jmp
dec
lods
nop
mov
push
cmps
fadd
sbb
pop
mov
movs
sbb
jno
adc
mov
sbb
in
jnp
outs
ss
pop
adc
loopne
(bad)
jp
sbb
iret
xchg
xchg
movs
inc
xlat
mov
fist
ins
sahf
add
bound
push
lods
stos
push
aam
cmp
inc
fcmovu
mov
daa
stos
test
(bad)
xor
idiv
pop
or
xchg
daa
inc
rcl
mov
jmp
dec
cdq
sbb
inc
mov
mov
pop
jbe
repnz
outs
cld
(bad)
sub
retf
ja
push
xchg
les
(bad)
sar
pop
movs
push
mov
xlat
lods
in
push
mov
xlat
cs
inc
push
aaa
jle
push
fs
jno
rcl
dec
jb
mov
les
sub
test
outs
je
add
addr16
loope
pop
mov
pop
xchg
pusha
mov
push
push
in
add
cld
sub
je
cmp
sbb
mov
mov
sub
jecxz
mov
mov
daa
(bad)
jg
aad
loopne
sub
add
(bad)
pop
xchg
neg
sahf
cmp
mov
pop
imul
test
lods
mov
es
ja
xor
out
push
outs
fs
sbb
mov
dec
std
fdecstp
dec
cmovg
aas
pop
mov
xlat
xor
nop
pop
pushf
cwde
sbb
sti
imul
adc
sbb
xchg
jns
mov
lds
bound
popf
scas
dec
jmp
out
add
xchg
mov
mov
ja
inc
adc
and
xchg
add
retf
stos
test
jno
rcr
(bad)
clc
shl
push
pop
test
mov
(bad)
mov
sbb
cmps
call
and
fiadd
shr
cmp
mov
iret
ins
and
mov
fwait
das
adc
mov
sbb
fmul
fld
sub
sbb
movs
xchg
sub
xchg
push
cmp
scas
cmps
jmp
jbe
xor
pop
adc
fist
lods
sbb
push
and
movs
or
push
mov
in
cdq
add
fwait
xor
call
pop
xchg
sbb
rcr
mov
mov
popf
outs
cs
mov
dec
xor
fmulp
dec
(bad)
mov
sbb
(bad)
out
fnstcw
popf
ror
test
mov
cwde
mov
test
mov
stos
sahf
pop
fs
add
popf
enter
out
pop
ret
xor
outs
addr16
cld
jg
stos
jns
adc
sbb
xor
pop
sbb
clc
push
je
cmp
mov
xor
movs
inc
in
mov
ds
aaa
xchg
mov
cld
and
movs
test
and
pop
push
push
inc
jmp
add
mov
mov
shl
push
xchg
cdq
ins
lock
sbb
rcr
mov
mov
or
xchg
jae
jge
lea
cdq
repz
xor
add
mov
inc
iret
out
or
fs
push
jmp
es
fimul
dec
or
cmp
jmp
dec
rcl
xor
sar
mov
cmp
stc
stc
and
sub
aas
enter
ror
iret
jb
jnp
add
push
stos
stc
add
or
call
lahf
jnp
fwait
mov
push
fstp
sbb
push
cmp
shl
jae
in
test
les
push
inc
in
loope
dec
addr16
mov
mov
pusha
into
jo
test
retf
(bad)
adc
test
ss
ins
cmc
lods
fisub
mov
mov
loopne
add
movs
repz
inc
mov
add
add
adc
icebp
fdivr
retf
push
adc
xchg
rcl
dec
xor
add
imul
mov
mov
or
push
dec
ins
cmp
xchg
sbb
leave
dec
and
retf
scas
je
push
jmp
xchg
mov
fwait
stc
xor
push
dec
add
push
push
push
inc
dec
fcom
xlat
fisttp
or
sbb
fistp
clc
into
dec
fwait
into
sbb
stos
je
xchg
or
push
(bad)
ds
mov
ins
add
jle
movs
mov
aad
pop
sar
add
jbe
pop
jns
jnp
call
call
mov
pop
fistp
pop
loope
sub
pop
sbb
add
inc
in
lds
test
shl
ins
lds
aam
dec
loope
lds
icebp
lds
sub
iret
fs
ror
mov
stos
mov
push
cmp
jb
les
jmp
cs
fistp
stos
(bad)
lods
ds
xchg
sbb
or
out
ja
xchg
popa
out
mov
jno
push
rcl
pop
fst
mov
imul
int
mov
sub
mov
std
dec
xchg
aad
jbe
je
js
lea
adc
ds
and
inc
mov
add
mov
retf
enter
lock
xor
sbb
stos
sub
mov
neg
out
movs
aad
stos
ins
dec
sub
jae
test
(bad)
push
push
call
mov
fs
cmp
out
mov
loopne
and
aas
fsubr
mov
ret
in
ss
cmp
xor
aaa
jbe
sub
mov
in
and
xchg
mov
test
jp
add
in
jo
push
mov
pop
pop
fisub
pop
and
popf
pop
inc
sub
lahf
and
pop
lods
clc
pop
inc
jecxz
cmp
sar
pop
xor
dec
mov
int
jbe
cmps
xor
(bad)
jno
daa
mov
dec
push
cmp
test
stos
fcomip
jb
icebp
push
retf
outs
mov
xor
rcl
test
fld
mov
jp
out
jo
jle
repnz
push
in
bound
push
and
imul
scas
sbb
push
mov
loopne
setg
mov
inc
sbb
outs
push
xor
xchg
push
repz
dec
popa
arpl
shl
retf
push
sub
cmps
dec
jp
lahf
adc
push
lods
int
(bad)
jns
aad
jmp
addr16
adc
dec
push
mov
sub
xchg
ficomp
fcomip
push
nop
movs
add
lods
(bad)
lds
mov
ror
ins
xor
sbb
push
repnz
inc
bound
inc
sti
fwait
lds
movs
shr
sub
inc
dec
cmp
hlt
dec
xor
movs
sub
dec
inc
xchg
sbb
push
ins
sahf
jnp
std
dec
xor
push
push
mul
or
loop
int3
test
mov
jbe
push
arpl
in
call
fimul
mov
push
adc
arpl
mov
mov
cdq
aam
bound
outs
cmps
jb
hlt
imul
(bad)
or
or
out
mov
mov
out
ret
jno
fs
or
sbb
out
out
add
add
ins
fld
retf
fidivr
jnp
div
shl
int
je
(bad)
icebp
inc
cmp
fwait
push
or
mov
sbb
icebp
cdq
inc
nop
jg
stos
cdq
mov
ins
cli
lahf
mov
jecxz
jnp
js
in
lahf
pop
nop
enter
addr16
cdq
int
pop
lds
sub
mov
fdiv
push
emms
dec
stos
sub
add
daa
mov
jae
push
lds
sti
xor
xchg
dec
mov
loop
or
add
mov
push
lock
pop
cmp
sbb
jp
enter
jg
pop
jb
adc
and
cld
clc
cmp
mov
inc
push
mov
cmp
adc
aad
test
xchg
xor
push
ja
cmp
pop
pop
retf
movs
call
(bad)
in
pop
retf
pushf
push
lds
or
xchg
mov
lods
push
popf
sub
mov
ffreep
into
inc
ss
fdivr
clc
outs
lods
xchg
ss
(bad)
aad
je
scas
mov
or
mov
cld
lock
mov
cmps
int
mov
ins
dec
pop
mov
or
popf
mov
sub
inc
xor
pop
or
xchg
pushf
mov
pop
sub
fistp
inc
fst
add
mov
dec
sbb
mov
cwde
xchg
fsub
js
and
pop
push
cmps
sar
pop
out
pop
cmp
das
and
xchg
pushf
mov
(bad)
push
sub
aaa
push
aad
inc
imul
retf
das
cwde
cmp
scas
popf
mov
jle
idiv
mov
dec
inc
inc
push
inc
call
inc
jne
push
retf
int3
rcr
dec
pop
jo
dec
in
pop
add
je
outs
and
std
idiv
and
sbb
jo
cli
sub
lea
lock
pop
fcomp
inc
sub
adc
xchg
xlat
in
scas
pop
cmp
arpl
test
sbb
jns
outs
pusha
push
dec
jmp
(bad)
push
fld
mov
test
xchg
int
test
and
in
cmp
xor
sbb
fimul
arpl
pop
mov
and
inc
dec
xchg
jns
sub
ds
xchg
xor
adc
jno
in
ror
and
test
movs
adc
mov
add
add
ret
stos
xchg
sub
retf
inc
(bad)
jb
dec
mov
dec
xor
ss
aam
or
push
fs
push
fwait
jmp
(bad)
es
scas
fs
out
push
in
cmp
cwde
cmc
mov
sub
jp
repnz
push
das
test
pop
push
pop
xchg
test
fidivr
movs
sub
sbb
xlat
mov
jbe
push
dec
inc
adc
nop
jle
cmps
dec
xor
test
mov
push
daa
sub
mov
outs
mov
mov
cmc
mul
pop
and
pop
xchg
addr16
mov
(bad)
jmp
into
adc
movs
and
out
mov
jne
pop
cmp
add
scas
mov
sub
ins
scas
jle
retf
scas
push
xor
(bad)
sbb
rol
xor
pop
dec
pop
ins
not
mov
jmp
fcomip
outs
je
push
aam
mov
ror
test
test
(bad)
and
mov
jae
xor
out
clc
data16
mov
cmps
arpl
xchg
fmul
dec
mov
and
mov
imul
test
cdq
int
and
call
test
(bad)
mov
(bad)
cmp
mov
xor
es
stos
cmps
jne
ret
inc
cmp
pop
test
pop
pusha
xchg
jae
push
call
pop
push
xor
fnstenv
ins
xor
(bad)
pop
adc
(bad)
and
iret
std
(bad)
aam
test
xchg
xchg
pop
ret
nop
(bad)
xor
push
sub
sbb
inc
xchg
mov
hlt
mov
popf
jmp
out
dec
add
in
xchg
push
xor
sti
cmp
mov
ret
repnz
mov
ret
fwait
movs
push
jbe
iret
fild
sub
pop
jmp
sbb
dec
retf
adc
or
aad
xchg
call
ret
sub
push
les
in
pop
es
add
mov
jae
adc
pop
adc
adc
adc
cld
cmp
mov
scas
sub
mov
mov
fdiv
cld
lahf
and
es
push
jo
mov
retf
imul
lock
inc
push
mov
pop
or
and
dec
cmps
or
rcr
mov
repz
add
or
ss
mov
int3
pop
aas
popf
mov
mov
xchg
fldcw
pop
mov
inc
int3
loope
push
enter
dec
sbb
mov
dec
cmp
gs
mov
dec
jg
out
inc
cli
push
mov
call
xor
sub
das
mov
fmulp
dec
lds
push
rcl
inc
mov
sgdtd
stos
popa
sbb
pop
fmul
xchg
jg
adc
es
sub
push
xchg
movs
loop
push
mov
lods
dec
push
jg
dec
jno
and
xchg
push
mov
mov
out
movs
jmp
aam
leave
mov
nop
pop
sbb
sub
daa
jle
jg
retf
fadd
adc
ins
jae
stc
in
pop
jg
jl
jmp
inc
rcl
cmp
mov
int3
xchg
fidivr
jne
sahf
cdq
jno
mov
xchg
xchg
loopne
or
in
cmps
stc
jl
(bad)
mov
push
mov
pop
fnstcw
stc
cmp
jge
sub
mov
icebp
cli
(bad)
dec
mov
ds
cmp
cli
enter
sub
fwait
or
push
and
pop
(bad)
cmp
dec
leave
scas
fimul
cmp
sbb
xchg
dec
mov
lea
imul
xchg
retf
adc
and
sahf
dec
cmc
ins
icebp
jp
lds
je
xor
iret
mov
fadd
movs
ins
(bad)
ins
dec
push
je
pushf
xchg
je
mov
dec
sbb
pushf
jno
sti
jecxz
cs
jo
not
or
mov
cmps
(bad)
adc
push
dec
aad
xchg
adc
out
fwait
aas
es
push
mov
mov
cs
jmp
jae
pusha
lods
rcl
loop
sub
lea
cmps
cmp
dec
ret
mov
int
lods
test
adc
jge
repz
popf
mov
cmc
cwde
imul
pop
push
or
jg
xor
data16
(bad)
and
sbb
bound
cld
cmc
gs
jno
test
add
xchg
sahf
pop
xor
mov
pinsrw
and
out
mov
xor
stos
mov
cmp
lods
mov
dec
dec
test
bnd
or
fwait
int3
pusha
jg
mov
push
(bad)
pop
in
mov
stos
hlt
lods
inc
fbld
leave
cmp
sti
loopne
in
cs
cmp
ins
mov
cmp
mov
add
xor
adc
inc
add
ss
dec
div
addr16
push
mov
test
jmp
bound
cmp
das
inc
xchg
ins
pop
arpl
dec
push
sbb
mov
xchg
xchg
pop
or
mov
inc
jb
repz
dec
(bad)
jae
test
xchg
xor
cld
xchg
mov
call
std
js
into
sbb
nop
cdq
dec
popa
add
in
jns
inc
aad
sub
and
call
push
dec
mov
mov
mov
mov
xor
or
sub
sbb
mov
retf
xchg
mov
jb
xchg
scas
mov
and
xchg
mov
cwde
aas
ficomp
pop
jp
loope
pop
pop
xor
imul
jg
leave
or
push
arpl
ret
jno
hlt
add
(bad)
push
and
sahf
xor
jne
mov
fisub
dec
in
sbb
jb
adc
iret
pop
xor
(bad)
xchg
outs
pop
pop
ja
retf
inc
adc
jecxz
sbb
pop
pop
jmp
mov
int
add
push
fist
fcom
in
call
push
xchg
jp
pushf
xchg
shl
xor
mov
and
call
and
or
pop
cmps
fld
push
adc
mov
mov
push
icebp
sub
push
iret
xor
jne
pop
push
ss
jae
(bad)
and
or
mov
(bad)
movs
adc
mov
push
dec
xor
mov
imul
sahf
mov
shl
bound
dec
js
mov
aam
cmps
xor
ins
scas
mov
push
scas
imul
jg
dec
nop
or
mov
mov
xchg
push
les
mov
pop
(bad)
hlt
shr
cmps
jecxz
out
test
into
fisub
out
out
add
mov
in
xor
push
mov
mov
xchg
out
push
sbb
push
lods
jns
test
dec
movs
push
cmp
dec
mov
dec
aam
retf
scas
retf
sar
or
inc
mov
sbb
sbb
pusha
mov
in
adc
mov
loop
push
pop
ret
stc
pop
inc
(bad)
shl
mov
imul
hlt
(bad)
test
pusha
in
(bad)
jl
push
push
sar
pop
xor
(bad)
fimul
cmp
xor
adc
xor
(bad)
loopne
loope
mov
rcr
(bad)
outs
lahf
movs
cmp
or
sub
fimul
push
stos
push
fnstenv
scas
int3
add
fiadd
push
(bad)
xor
popa
or
inc
stc
mov
inc
lock
xor
imul
pop
(bad)
daa
fs
aam
jge
ins
(bad)
ficomp
aas
icebp
cdq
or
pop
push
xchg
cmc
jmp
sub
lock
dec
popa
loope
lods
push
js
sub
aas
push
xchg
xor
pop
repnz
push
call
and
icebp
aaa
aaa
mov
lods
in
cmp
enter
mov
mov
xlat
push
gs
push
xchg
xchg
addr16
bound
test
dec
xchg
hlt
dec
jecxz
pop
sbb
add
add
xchg
inc
sbb
icebp
icebp
sub
in
das
hlt
pop
inc
repz
xchg
pop
mov
shr
jno
xchg
sysret
(bad)
jge
cs
and
test
cmp
inc
push
push
mov
push
fs
fs
dec
(bad)
(bad)
mov
shl
sub
inc
jl
inc
mov
lahf
test
icebp
stc
cmp
xor
inc
mov
aam
xor
rcl
and
arpl
mov
into
aad
push
stos
pop
dec
xchg
inc
ret
mov
jg
jg
ret
ret
cmp
imul
sbb
jo
push
add
fwait
mov
pushf
xchg
jne
scas
js
cmp
sbb
jg
push
int
xchg
lahf
xchg
int3
and
mov
test
adc
adc
pop
jns
daa
jmp
ficomp
jns
ins
mov
cmps
xchg
bound
push
fisubr
xor
ins
pop
push
or
pop
rol
pop
aam
out
sbb
sbb
fisubr
mov
call
and
js
int3
out
enter
inc
pop
sub
dec
inc
inc
xor
adc
jp
je
mov
dec
fidivr
pop
and
adc
sbb
leave
mov
fwait
jb
push
das
repnz
adc
and
fst
pop
pop
es
ret
jbe
enter
jno
pop
aam
repnz
out
and
jge
scas
dec
push
addr16
loopne
cld
nop
ror
fisttp
or
xor
leave
test
inc
pusha
dec
les
push
hlt
push
mov
fld
sbb
ja
mov
cmps
jecxz
or
call
inc
adc
call
xor
mov
dec
into
inc
aad
fldcw
sub
jmp
jno
dec
nop
and
sub
fnstenv
bound
jp
pop
sub
enter
jb
aaa
jge
xor
add
xor
mov
jmp
xor
pop
sub
test
sbb
stos
sbb
mov
fld
mov
popf
les
test
movs
dec
out
and
dec
int3
push
xor
sbb
push
cwde
xchg
push
fsubr
pop
fisub
mov
mov
add
cli
outs
bound
jl
adc
pop
jno
push
xor
inc
mov
clc
scas
sbb
sub
test
xchg
out
call
lods
rol
mov
or
mov
and
or
xchg
call
xor
push
jecxz
push
mov
push
and
push
mov
mov
cmp
ja
cli
adc
ins
shr
sbb
ret
mov
inc
clc
push
das
inc
into
mov
cmp
pop
test
jne
or
pop
cmp
mov
xor
xor
cmp
jbe
or
push
mov
fbstp
loop
jbe
adc
pop
mov
mov
mov
push
imul
pushf
add
mov
mov
js
mov
fsub
ffreep
neg
add
movs
lea
shl
pop
jecxz
ficomp
cli
cmp
std
pop
popa
and
repz
bnd
push
imul
in
push
push
pop
ja
in
mov
mov
add
iret
popf
jge
xor
fmul
add
(bad)
(bad)
cdq
in
ja
mov
cmc
mov
fwait
iret
dec
xchg
sub
stc
push
repnz
push
add
aad
and
mov
(bad)
sub
mov
and
or
inc
dec
aaa
dec
cmp
(bad)
(bad)
cmc
fld
in
outs
sub
int
push
pop
lock
push
push
mov
xchg
hlt
lea
add
cdq
outs
aaa
sbb
dec
add
test
or
(bad)
(bad)
loopne
pushw
dec
xlat
mov
test
aaa
fcomp
cmps
fnstenv
push
sbb
cmp
pop
fld
xor
pop
xchg
in
add
fild
pusha
add
inc
and
loop
imul
mov
rcl
fcmovnu
test
dec
nop
movs
adc
xchg
fild
out
mov
sub
cmp
fninit
int
jne
(bad)
pop
sub
fldcw
mov
add
cwde
leave
cwde
jmp
loopne
fst
dec
(bad)
aam
mov
push
push
jecxz
rcl
adc
mov
mov
lock
clc
dec
sbb
test
push
sub
fst
and
into
add
mov
push
idiv
or
xlat
scas
mov
xchg
(bad)
jmp
stos
cmps
inc
scas
pusha
imul
sbb
fisub
cmp
mov
(bad)
sub
mov
ja
jmp
mov
xchg
and
outs
xchg
(bad)
ret
mov
xor
mov
stos
fstp
not
mov
retf
xchg
fidiv
stos
sub
test
mov
inc
xor
fcmovnb
jmp
inc
ins
xchg
pop
ds
sahf
stos
push
sbb
punpckhdq
out
out
and
adc
add
cwde
push
lds
jnp
xchg
call
aaa
in
mov
push
pop
xor
mov
xchg
imul
retf
(bad)
add
push
sub
sub
popf
sar
bound
pop
sub
mov
or
add
and
mov
js
iret
push
jg
lds
data16
sbb
push
cmovp
(bad)
icebp
out
sar
sub
mov
loop
push
data16
adc
jge
pusha
leave
in
aaa
pop
shl
popa
out
xor
(bad)
shr
and
mov
sub
push
repz
arpl
leave
mov
sti
repz
or
push
pop
and
pop
ret
cmp
jns
fld
sbb
gs
mov
hlt
fcomp
fisubr
int3
adc
retf
mov
inc
push
ror
pop
fst
mov
shl
inc
sub
jg
ret
adc
and
sbb
jl
aaa
mov
lods
addr16
in
inc
mov
fst
xchg
sbb
jl
mov
jno
cmp
mov
xchg
adc
int3
sub
mov
xchg
push
les
push
ja
or
push
sub
or
and
adc
icebp
popf
loope
stos
nop
pcmpgtw
aas
loopne
shr
jl
loopne
leave
ror
cmps
or
mov
push
fcom
shl
in
call
mov
test
and
jl
adc
sub
push
add
mov
dec
inc
sbb
icebp
setns
push
jb
mov
and
(bad)
in
lahf
bound
cmp
cdq
jg
mov
inc
aas
sbb
fild
add
and
je
mov
inc
xchg
das
scas
out
fwait
nop
pop
or
push
inc
sbb
inc
test
out
mov
xor
movs
pop
mul
je
retf
(bad)
push
arpl
into
jno
sub
mov
(bad)
call
pushf
and
mov
int
fcom
out
mov
xchg
pop
xchg
cmp
test
add
cld
push
cmp
dec
pusha
jnp
(bad)
jb
jge
ins
fisubr
das
pop
adc
or
sahf
inc
not
sub
in
sbb
cmps
pop
and
ficomp
xchg
aas
or
(bad)
cwde
add
inc
in
ss
xchg
jno
xor
repnz
xor
push
mov
pop
test
rcl
sbb
cmp
and
das
ror
retf
fimul
or
(bad)
into
hlt
div
mov
loop
das
push
cmp
push
push
jecxz
jl
pop
dec
ret
xchg
push
pop
or
push
jl
xchg
xor
aas
and
mov
add
jae
push
jmp
test
xchg
xchg
jecxz
ins
mov
add
test
add
loope
(bad)
and
mov
jl
and
into
hlt
ror
in
xchg
imul
stos
cmp
jne
inc
xor
fs
test
icebp
out
sub
shl
adc
ud1
push
xchg
test
(bad)
cmc
ja
adc
sti
test
mov
(bad)
scas
lock
fwait
out
repnz
inc
dec
or
jge
mov
sbb
sub
pop
test
test
mov
mov
xlat
shl
adc
retf
and
xchg
mov
mov
test
stos
aad
stos
mov
(bad)
jmp
mov
and
dec
test
cmps
loop
cmp
cmc
(bad)
je
outs
pusha
out
ja
push
pop
mov
inc
lods
in
and
test
into
sbb
or
pusha
sub
ins
inc
push
inc
sub
push
xchg
xchg
pusha
pushf
add
sub
dec
fs
in
bound
ja
add
nop
push
aaa
in
or
sub
mov
ds
mov
inc
xchg
mov
sub
mov
inc
neg
pop
sti
aad
push
pop
dec
add
push
cdq
daa
jg
sub
loop
popa
movs
inc
adc
sub
jns
cmp
add
cmc
jbe
std
aam
push
mov
and
inc
add
jmp
aas
cmp
js
mov
cmps
imul
lea
jbe
sbb
cld
inc
pusha
inc
dec
mov
movs
jae
in
mov
sbb
sbb
dec
mov
sbb
inc
into
mov
add
(bad)
jl
sbb
fld
jne
nop
out
std
mov
mov
retf
in
out
jp
sbb
pop
push
idiv
das
sub
mov
mov
push
mov
inc
mov
lock
stc
addr16
jae
fild
push
sub
cmp
xchg
stos
adc
xchg
mov
push
gs
fild
add
cmps
imul
pop
pop
dec
xor
pop
lea
inc
bound
jae
popf
test
jg
ror
jne
imul
loopne
sbb
mov
call
cmp
fwait
pusha
fidivr
mov
add
sub
lods
retf
sub
cmps
add
test
inc
mov
mov
retf
mov
movs
js
mov
fadd
pop
sbb
push
and
xchg
pop
dec
repnz
sub
or
lldt
add
sbb
push
jecxz
repnz
punpckhbw
and
enter
outs
js
dec
jmp
lahf
jecxz
jg
add
jnp
test
cmp
dec
jne
and
mov
adc
cmp
fstp
pop
dec
or
push
and
adc
daa
mov
(bad)
cdq
iret
cmps
xchg
scas
xor
or
cmp
pushf
and
sub
xchg
daa
test
or
inc
dec
clc
mov
jp
(bad)
pop
daa
sub
jle
sub
enter
inc
and
(bad)
xor
push
sub
or
jle
in
pusha
es
pop
mov
fild
mov
xor
pop
in
es
(bad)
retf
cdq
dec
sub
and
xor
adc
mov
loope
push
pop
idiv
stos
or
push
shr
jmp
dec
and
mov
in
call
das
inc
pop
daa
and
and
aas
push
icebp
and
jle
mov
mov
mov
idiv
cmp
test
pop
and
pop
imul
jg
inc
ja
cmp
mov
push
mov
scas
cmp
popf
test
es
jbe
and
int3
dec
and
cmp
iret
jp
aam
sub
ss
push
in
sbb
mov
cli
neg
ins
stc
rcl
sahf
sbb
(bad)
lock
jns
dec
sub
sahf
imul
shr
aaa
in
xor
out
pop
adc
js
xchg
mov
push
fld
jecxz
sti
pop
pop
popf
jno
shl
out
arpl
or
mov
aad
popf
rol
pop
sub
adc
lods
pop
pop
xchg
push
inc
outs
sbb
fstp
arpl
loope
dec
jne
inc
pushf
add
scas
mov
mov
test
sbb
enter
out
test
mov
pop
fadd
(bad)
ficom
sti
add
or
movs
lock
mov
and
mov
int
add
push
fisub
scas
ins
xor
pop
cmps
sub
test
sub
and
loop
push
lea
ds
shr
shr
mov
add
pop
mov
or
sub
or
ins
mov
pop
hlt
pop
int3
push
cmp
test
inc
mov
clc
or
ins
pop
outs
push
outs
dec
xor
pop
lods
cld
cwde
xor
retf
int
ins
das
rcr
push
jl
adc
dec
adc
(bad)
and
push
or
mov
push
push
pop
sbb
(bad)
mov
out
ss
mov
ret
jmp
jne
xchg
add
into
dec
or
aam
sub
dec
retf
push
fild
ss
enter
jnp
(bad)
push
ret
jle
icebp
push
fwait
push
jno
cmp
sub
fs
mov
in
sbb
pop
add
lea
in
push
mov
pop
dec
fmul
mov
arpl
dec
xor
sbb
push
cmp
xchg
add
pop
call
push
pusha
out
and
cmc
test
jg
call
dec
test
scas
mov
sub
mov
adc
retf
mov
mov
icebp
sar
dec
hlt
aam
pop
and
ret
pop
repz
mov
pop
cwde
pmulhuw
or
fadd
jg
shl
lods
sub
dec
jg
dec
int3
cmp
enter
out
je
ret
jno
pop
call
mov
xor
push
xchg
(bad)
and
add
sub
mov
stos
xchg
pop
jnp
and
jns
inc
test
popa
xor
int
adc
out
adc
pop
ins
repz
push
pop
loop
add
mov
push
rcl
mov
sub
sub
leave
xchg
in
cdq
or
cli
inc
movs
or
and
mov
or
xchg
jmp
pop
lea
scas
outs
jbe
adc
and
fs
sub
jnp
pop
mov
enter
les
jo
scas
call
pop
push
int3
aam
inc
mov
dec
cmpps
or
xor
fldcw
mov
ss
or
sysret
rcl
xchg
push
repz
dec
ror
clc
(bad)
cli
pop
pop
in
adc
cmp
xchg
mov
int
push
dec
mov
aad
jecxz
adc
(bad)
out
mov
add
mov
xor
mov
sbb
mov
push
out
outs
jmp
or
xor
ja
jmp
sti
lahf
pop
xchg
test
mov
fist
(bad)
adc
fld
cmp
(bad)
or
rcr
xchg
xchg
mov
cli
cwde
inc
aad
(bad)
hlt
lods
adc
or
ret
jp
adc
(bad)
mov
popf
xchg
adc
aas
jb
adc
bound
retf
xchg
cmp
mov
cdq
cmp
mov
mov
das
aas
jl
sbb
arpl
inc
sbb
pop
push
push
pop
ss
adc
mov
stos
push
mov
repnz
inc
dec
jmp
xor
loop
cld
ins
pop
popf
mov
scas
js
imul
dec
inc
je
sub
(bad)
push
or
clc
cmp
rol
call
mov
or
shl
sub
sbb
out
shl
clc
js
xor
dec
sahf
jno
in
push
mov
rol
rcr
call
lods
jmp
hlt
or
mov
addr16
dec
push
push
mov
or
fnstenv
sub
jmp
pop
xchg
pop
mov
sbb
(bad)
frstor
pop
push
mov
lods
mov
add
ret
hlt
ds
xor
fisttp
mov
mov
outs
mov
sub
mov
mov
adc
iret
dec
adc
jo
test
jp
and
(bad)
jmp
push
xlat
pop
pop
js
cmps
scas
in
rcr
adc
dec
sbb
inc
mov
xchg
sub
push
add
mov
add
xchg
dec
sbb
sub
adc
cmp
push
or
push
mov
mov
lahf
repnz
out
push
and
popf
mov
jae
mov
adc
push
pusha
and
stos
mov
test
shl
retf
mov
sbb
lea
inc
xchg
jp
xor
cdq
popa
lea
adc
or
cmp
dec
and
and
cmp
das
hlt
add
jne
arpl
xchg
mov
dec
aad
arpl
lds
std
inc
jnp
dec
int
fild
add
pop
clc
repnz
movs
rcl
fcomp
fld
or
mov
and
clc
mov
sahf
and
jecxz
out
mov
mov
arpl
loopne
jae
(bad)
jns
lahf
mov
mov
push
jl
dec
sbb
cld
inc
push
pop
sahf
div
push
mov
pop
and
loop
addr16
lods
dec
in
jmp
inc
or
sbb
add
lock
dec
xchg
inc
mov
gs
ret
and
xor
cld
mov
adc
sbb
cmc
imul
and
out
stos
in
pusha
loopne
enter
mov
adc
int3
cld
std
call
or
xlat
gs
ror
xchg
mov
je
fstp
and
dec
sahf
int3
fwait
out
mov
xchg
ins
dec
push
movs
mov
std
or
xlat
cmp
xor
pop
outs
test
sub
into
xor
rcl
cmp
mov
sub
or
jno
jae
sahf
or
and
div
gs
dec
test
(bad)
jecxz
addr16
lea
scas
dec
cmp
jle
mov
stos
std
shl
aas
mov
lahf
cmp
add
fsub
shl
pop
les
sahf
push
call
cmp
enter
jmp
(bad)
pop
pop
jmp
jne
mov
xor
xchg
xchg
pop
outs
inc
mov
cli
es
int3
pop
push
jmp
jo
mov
int3
dec
sub
mov
push
outs
add
inc
push
lahf
test
ja
outs
mov
pop
cwde
mov
hlt
inc
iret
and
pop
mov
daa
cli
nop
inc
mov
jnp
cld
adc
movs
mov
pop
enter
sahf
leave
or
jno
or
add
or
inc
or
in
repnz
mov
xchg
ins
in
out
es
cli
sar
add
and
or
hlt
es
mov
fdiv
mov
popf
nop
stc
fidiv
adc
xor
mov
add
fwait
jmp
fwait
int3
push
and
sar
mov
(bad)
pop
aad
lods
adc
mov
enter
cs
clc
lock
adc
test
aad
jmp
push
pop
mov
pusha
cld
mov
pop
jb
jle
push
sar
(bad)
mov
aas
jmp
inc
test
(bad)
fadd
das
in
mov
les
cmp
test
xor
xchg
cdq
inc
stc
jl
popa
mov
repnz
cmp
jbe
popf
sbb
push
daa
mov
mov
mov
call
cmp
clc
inc
xchg
out
mov
ret
mov
bound
mov
lods
call
jo
xchg
mov
push
jmp
xor
mov
call
or
inc
adc
(bad)
jp
adc
mov
xchg
out
push
rcl
outs
lds
sti
push
sbb
test
inc
(bad)
inc
xchg
fprem1
scas
push
xchg
cmc
mov
push
lods
jecxz
add
jnp
xchg
xchg
jge
adc
and
outs
adc
cmp
in
not
cs
adc
icebp
cmps
in
jg
add
jo
sbb
arpl
jns
test
mov
or
enter
inc
ja
jecxz
or
xchg
data16
mov
push
inc
xor
test
arpl
or
xlat
sub
mov
xor
dec
push
pusha
and
cmps
sbb
adc
inc
sub
or
push
xchg
addr16
fdivr
jg
adc
inc
or
je
jno
jb
je
popf
dec
mov
test
jge
mov
stos
fstp
pop
push
mov
and
and
adc
and
loope
jns
or
jnp
sub
add
ss
pop
out
into
dec
nop
out
clc
(bad)
cmp
sub
push
aam
test
push
mov
mov
or
ret
ss
out
push
cmp
out
je
xor
push
sub
sbb
call
mov
repnz
les
jl
inc
cli
xor
cmp
add
(bad)
out
push
or
jp
sub
sub
inc
pop
pop
gs
outs
loopne
movs
and
sbb
ins
cld
xor
(bad)
jmp
push
jno
pop
push
push
cmp
repnz
xchg
mov
in
data16
sbb
pop
lods
(bad)
pop
icebp
pop
daa
pop
daa
jno
xchg
and
stos
scas
jmp
cmp
ins
mov
adc
add
stos
(bad)
sar
xor
add
lds
icebp
leave
xchg
imul
cmp
data16
cmp
and
and
in
dec
cwde
push
sbb
loope
and
(bad)
xchg
mov
mov
mov
cmp
les
mov
sub
test
mov
retf
sub
cwde
pop
imul
ins
pop
xchg
xchg
xchg
sbb
aam
xchg
iret
push
lea
inc
lahf
jne
movs
imul
or
jmp
mov
push
daa
or
mov
scas
cmp
dec
pop
adc
adc
repz
lds
ja
inc
push
pop
imul
test
adc
lods
mov
ret
jmp
or
inc
lods
add
inc
lea
call
rcr
mov
sar
or
mov
pusha
jg
and
sbb
xchg
clc
xor
adc
sar
push
aad
or
mov
jmp
cmps
mov
mov
pop
fidiv
push
and
cmp
ja
out
pop
jmp
jmp
scas
mov
stos
dec
shl
xchg
mov
adc
test
pop
and
test
pushf
iret
mov
mov
frstor
imul
cmp
jne
pop
pop
retf
in
sti
pop
in
and
call
xchg
ins
mov
or
ror
mov
inc
cmp
mov
sbb
sub
fcom
fist
mov
enter
or
fdivrp
add
or
xchg
ins
stos
jecxz
ret
xor
mov
imul
jno
das
xor
clc
mov
pop
lea
pop
xchg
out
jge
dec
loop
add
jns
push
fwait
adc
sub
adc
add
test
adc
int3
sub
in
addr16
repnz
stos
call
pop
rcl
(bad)
mov
retf
test
cmp
ret
pop
stc
jle
jns
outs
xchg
cmps
pop
outs
retf
addr16
xchg
mov
lods
mov
and
stos
push
mov
imul
das
aad
push
jge
test
fiadd
dec
cmp
stc
scas
fadd
dec
mov
dec
inc
sti
and
mov
scas
shl
push
xor
test
or
outs
imul
or
outs
rol
sub
outs
pop
jns
push
sub
ret
add
sahf
repz
mov
xor
mov
cld
lods
or
into
or
in
xor
jo
adc
mov
jno
call
inc
rol
cmps
jno
into
add
pop
fistp
or
mov
ret
adc
and
dec
cmp
sbb
xlat
sar
mov
popf
loop
mov
in
stos
or
out
mov
aas
ror
cmp
xchg
xchg
push
jb
(bad)
sub
fld
xchg
dec
das
int
xlat
push
loop
cmp
pop
nop
test
out
imul
sub
inc
cmps
push
mov
dec
out
fdiv
gs
pushf
or
jne
loope
test
dec
call
imul
dec
pop
cld
out
or
lea
(bad)
std
fimul
pop
rol
sbb
inc
mov
dec
cmp
sbb
mov
fst
cs
sub
mov
repnz
mov
fisttp
add
cwde
dec
cmp
pop
fdivr
pop
xchg
adc
pop
popa
leave
xchg
mov
clc
cli
bound
dec
cli
push
xor
retf
popf
sbb
(bad)
push
mov
nop
lahf
rcl
mov
jae
dec
mov
lods
leave
pop
ja
sar
push
gs
leave
call
mov
mov
mov
jp
sub
mov
(bad)
cmps
ss
mov
sbb
por
packuswb
sti
sub
in
popa
jge
pop
bound
pop
fsub
mov
sbb
hlt
lods
xor
jl
repz
add
sbb
test
lods
mov
daa
int
ret
popa
pop
cmp
push
(bad)
push
cmp
or
xor
cmp
shl
stos
pop
aad
call
sbb
dec
push
loop
mov
bound
or
and
xchg
adc
pop
jg
push
lods
add
add
gs
sub
sahf
mov
xchg
jb
and
push
xlat
xchg
enter
(bad)
xchg
retf
mov
jmp
inc
mov
test
and
cmp
mov
pop
cmps
ror
inc
test
sub
sahf
fsubrp
retf
test
pop
jl
test
fisttp
fadd
in
pop
(bad)
pop
add
pop
push
cwde
sub
add
jg
xchg
xchg
scas
dec
lock
inc
fldl2e
fcmovnb
cmc
pusha
cmps
imul
cli
jl
fisttp
add
cs
and
xor
xor
push
cmp
mov
std
inc
sub
add
popa
or
(bad)
aas
in
adc
loope
jecxz
retf
xor
fldcw
ret
call
jg
dec
retf
ret
adc
add
pushf
jl
hlt
arpl
mov
jb
fnstcw
and
pusha
sub
jne
add
aaa
dec
out
test
and
cmps
xchg
addr16
clc
pop
inc
mov
into
(bad)
lods
cwde
rcr
or
cmp
cdq
or
or
in
xchg
vmovntpd
enter
imul
out
ds
dec
ret
(bad)
jno
inc
cmp
or
shr
sub
mov
cmc
icebp
imul
pop
xor
outs
jno
jge
sub
adc
mov
inc
adc
mov
inc
xor
enter
add
jb
out
and
mov
les
dec
or
jecxz
or
push
cmc
jnp
xchg
adc
or
test
mov
sti
retf
std
xlat
mov
(bad)
sub
lods
dec
jge
cmp
mov
pushf
jmp
scas
pusha
pop
sbb
sti
pop
fdivr
mov
leave
jae
neg
aam
(bad)
push
mov
and
ret
nop
and
ret
inc
out
arpl
sti
jle
in
sub
add
xor
lods
sbb
cs
pop
jo
cdq
into
mov
sub
mov
jg
xor
ror
jnp
xor
mov
test
icebp
cdq
lahf
lea
out
enter
into
in
das
xor
nop
pop
mov
imul
mov
(bad)
fld
fimul
mov
mov
inc
push
add
xlat
adc
mov
shl
adc
and
stc
add
or
mov
push
fcom
es
jmp
and
add
cmp
add
dec
inc
cli
mov
mov
jp
cwde
inc
mov
in
inc
jg
xor
xchg
out
call
mov
adc
sub
shl
fs
shr
cmp
push
scas
mov
dec
(bad)
mov
push
icebp
mov
and
ins
add
mov
or
dec
or
xchg
hlt
leave
cmp
leave
mov
pop
mov
arpl
scas
add
adc
(bad)
mov
jp
mov
out
(bad)
jmp
pusha
int3
dec
cmp
jns
in
mov
pop
dec
cwde
push
in
cmp
outs
adc
arpl
sti
fwait
push
xchg
cmp
sub
sub
stos
int
icebp
inc
in
mov
xor
jns
jo
arpl
repz
mov
loope
xor
shl
fnstsw
aad
hlt
je
xchg
push
pop
stos
push
cdq
(bad)
in
xor
div
ins
cmp
test
pop
mov
xchg
mov
or
test
adc
add
cwde
(bad)
stc
fstp
mov
jbe
out
pop
and
scas
cmp
add
int3
cmp
jp
ss
cmp
aam
or
test
je
hlt
mov
into
outs
lock
dec
push
sub
retf
push
mov
cmps
xchg
rcr
sbb
inc
xchg
outs
sub
test
pop
cmps
fwait
imul
cli
pop
pop
aas
test
xchg
jbe
movs
dec
cmp
sbb
neg
pop
dec
fisubr
push
cmps
jne
xchg
scas
fmul
jns
mov
rsqrtps
jnp
pop
pusha
or
ret
or
mov
or
ret
mov
loope
jb
dec
(bad)
rcr
cmp
adc
lea
int
arpl
pop
jmp
jbe
ret
es
retf
popa
cs
out
cld
jmp
cld
fild
inc
sbb
add
fisubr
ror
mov
xchg
inc
mov
outs
or
sbb
push
into
xlat
es
jae
in
mov
popf
mov
add
ss
or
cmp
mov
sbb
cvtdq2ps
hlt
jne
call
dec
cmp
sar
lods
mov
sbb
mov
xchg
out
sbb
mov
mov
sti
(bad)
xor
addr16
push
push
xchg
mov
lds
add
cli
mov
in
push
add
dec
test
sub
loop
test
mov
mov
mov
(bad)
adc
xchg
dec
inc
in
enter
jbe
scas
loop
jae
fild
cmp
and
xor
mov
popf
cmp
and
imul
std
mov
push
push
retf
xchg
js
std
sbb
ret
jae
cld
mov
ins
call
scas
or
pop
push
dec
imul
jmp
sbb
inc
std
pop
stc
cmp
lods
ss
neg
mov
push
xchg
jb
std
aas
jmp
mov
xchg
popa
jle
jns
bnd
enter
movs
sbb
addr16
inc
fxch
fdiv
pop
cmp
mov
adc
xchg
and
(bad)
mov
ret
fwait
arpl
arpl
adc
adc
(bad)
stc
mov
jnp
mov
mov
inc
rcl
movs
test
fst
push
fsub
sub
push
cmps
repz
mov
fbld
mov
mov
push
lahf
pop
xor
push
jecxz
clc
popa
in
cwde
ret
iret
lahf
mov
out
jecxz
sub
movs
xor
cmp
lods
dec
xchg
xchg
sbb
fs
adc
jge
and
pop
mov
inc
cli
push
pop
std
or
adc
arpl
loop
mov
inc
hlt
loopne
dec
cmps
mov
mov
xchg
mov
shl
ret
cmp
jle
scas
ror
dec
movsx
mov
fstp
pop
inc
ds
out
xchg
pop
pop
sahf
out
mov
sub
xlat
pop
jmp
mov
adc
cmp
add
fisttp
sub
sahf
adc
fistp
out
lock
sub
and
inc
fnsave
inc
cmc
outs
jle
in
inc
mov
pop
jge
inc
les
aas
jnp
and
xchg
push
ret
cli
adc
inc
mov
div
lods
mov
lock
fsubp
mov
(bad)
popa
iret
loop
mov
sbb
aas
(bad)
jle
pusha
pop
mov
popf
mov
xchg
outs
or
push
sti
lods
and
jb
fimul
pop
xchg
out
std
aas
jae
inc
hlt
retf
jnp
popa
cmc
dec
movs
mov
cmp
inc
cmp
aam
test
icebp
(bad)
aad
add
pop
mov
pop
xor
xchg
dec
mov
fdivr
xor
pop
into
dec
mov
cmps
repnz
test
mov
mov
fdivr
retf
add
cmps
adc
in
xor
pop
dec
nop
pop
or
stc
inc
sub
xlat
cmp
pop
retf
test
lock
out
jle
out
out
imul
push
jmp
into
sbb
daa
out
pop
test
shr
mov
ds
push
mov
push
fadd
push
ja
std
movs
(bad)
jmp
mov
shr
pop
add
xor
adc
adc
ss
jge
add
fsubr
sbb
adc
cld
out
cdq
les
in
(bad)
cwde
icebp
bnd
outs
jo
or
in
sub
push
pop
or
dec
add
push
xor
ds
aam
pushw
push
inc
add
jmp
movs
je
dec
ret
and
pusha
shr
mov
dec
test
sbb
stos
pop
repz
mov
out
addr16
pop
xchg
aad
loop
in
ins
push
mov
inc
jmp
bound
mov
in
dec
int
dec
add
in
and
mov
add
repz
mov
loope
fld
out
sub
(bad)
push
add
sbb
add
xor
cmp
push
addr16
cli
jecxz
mov
fmul
aas
daa
pusha
mov
aad
call
int
or
cmps
mov
arpl
pop
shl
hlt
cmc
add
out
jmp
mov
mov
adc
jge
pusha
in
call
lock
mov
dec
ja
in
mov
icebp
loopne
sbb
sbb
sahf
mov
add
xchg
mov
xchg
jge
mov
cmp
sbb
or
push
and
and
sar
add
inc
rcr
adc
dec
mov
and
aam
fmul
inc
dec
test
mov
adc
arpl
into
pusha
add
int
stos
xchg
cmp
shl
mov
cmps
lea
mov
les
xlat
test
rcr
pop
into
inc
leave
jne
ja
lahf
(bad)
movs
pop
mov
sbb
inc
ret
sbb
push
popf
scas
popf
imul
iret
outs
mov
lods
sar
fcmovnbe
adc
add
out
stos
or
sti
and
ja
lds
fistp
dec
mov
xchg
pop
pusha
pop
push
mov
mov
dec
shl
out
cld
cmp
cmp
push
sbb
(bad)
in
xchg
test
mov
xchg
xlat
aas
pop
mov
inc
adc
fcomp
dec
jns
xor
jg
rcr
neg
test
mov
mov
sub
dec
jb
adc
movs
push
pop
imul
inc
pop
neg
data16
fnsave
and
cmp
int3
cmc
pop
jge
into
mov
dec
shr
lods
xor
dec
mov
mov
scas
add
pop
sub
retf
mov
gs
push
in
pop
int
dec
enter
addr16
adc
cdq
pop
imul
mov
inc
and
cwde
mov
and
mov
mov
fcomp
test
cli
leave
mov
cmp
pminub
pop
sahf
cmps
jge
mov
movs
ret
mov
das
leave
(bad)
clc
mov
lea
mov
inc
js
push
call
xchg
push
sbb
aaa
push
inc
pop
daa
adc
jb
push
test
repz
out
mov
lods
mov
daa
inc
add
fld
xor
pop
nop
je
mov
push
fnsave
add
mov
mov
mov
in
mov
or
imul
sub
mov
test
ror
cmp
stos
out
fist
adc
mov
scas
mov
pop
dec
outs
and
sub
cmps
mov
int
sbb
cmp
fdiv
repz
or
jp
pop
test
jmp
inc
lods
or
fidiv
das
test
ret
pop
cmp
ror
ins
push
fsubr
inc
out
mov
nop
mov
mov
sbb
movs
inc
mov
outs
adc
sti
ror
ins
imul
cli
jmp
rol
push
clc
or
les
fadd
or
fs
shl
sbb
popf
test
imul
fmul
or
outs
not
repnz
or
hlt
mov
seto
sub
push
fwait
sti
adc
mov
stc
or
xor
enter
loopne
scas
push
sub
inc
push
jmp
pop
mov
lods
cmps
(bad)
fnsave
cmp
mov
sbb
dec
sbb
or
jo
idiv
test
movs
outs
ss
in
mov
cmp
std
stos
dec
ins
dec
mov
bound
pop
rcr
in
and
mov
xchg
inc
jns
shl
lea
or
fadd
(bad)
jmp
push
mov
loop
xor
add
repnz
xor
(bad)
fsub
fsubr
mov
pop
mov
xor
daa
into
ror
pusha
out
sub
pop
cmp
mov
sub
add
add
das
retf
or
jmp
mov
xchg
jmp
mov
push
fbstp
je
fmulp
ficom
sub
inc
retf
xor
fnstenv
mov
outs
xor
mov
mov
mov
cmp
cwde
dec
adc
sub
test
bswap
fldenv
in
jmp
jns
fist
repnz
sub
cmps
movs
adc
pop
jb
sub
lock
arpl
pop
mov
dec
in
dec
repnz
lds
mov
loope
sbb
into
bound
mov
pop
lahf
sub
leave
xor
xchg
out
cmp
and
mov
sbb
hlt
inc
cdq
mov
sbb
ror
ins
mov
vpsllq
mov
sti
dec
dec
mov
push
sub
mov
adc
inc
xor
dec
lock
pop
vcomisd
jmp
sbb
call
out
sub
mov
sbb
fisubr
ret
inc
sub
sbb
stos
loopne
or
or
daa
pop
out
loop
js
dec
dec
cmps
push
(bad)
fdivr
jae
sbb
retf
shr
mul
dec
add
xchg
out
sar
dec
pop
mov
xchg
adc
push
sbb
cdq
jmp
into
lods
cmp
shl
pop
lgs
ds
(bad)
mov
jecxz
dec
repz
ret
dec
push
mov
xor
mov
cld
dec
lahf
or
fldcw
mov
lods
and
idiv
stos
xor
add
ins
add
inc
or
je
pop
pop
loop
ror
push
ds
sbb
mov
inc
cdq
(bad)
clc
mov
dec
mov
add
mov
leave
pop
jns
scas
cmc
xor
jmp
add
cmps
sub
test
fadd
outs
es
ds
or
pop
sub
adc
scas
and
enter
ficom
je
cmc
jne
(bad)
mov
in
add
pushf
lds
out
into
push
repnz
pop
push
xlat
pusha
cli
sub
cmp
adc
dec
cmp
jl
outs
out
icebp
cmc
fistp
clc
push
add
push
push
cmps
aas
adc
cmp
mov
sbb
mov
out
(bad)
fwait
inc
into
adc
jp
inc
cmc
bound
ret
pop
mov
in
sub
or
mov
push
push
icebp
fdiv
and
xchg
std
dec
lea
dec
enter
shl
or
mov
xchg
pop
sbb
les
mov
es
(bad)
clc
and
adc
or
ret
adc
mov
icebp
movs
nop
enter
out
aam
push
or
xor
add
jle
sub
xor
movs
mov
inc
mov
mov
out
iret
jb
xor
dec
push
jmp
mov
adc
bound
es
mov
or
jg
dec
push
cmps
mov
out
add
mov
inc
mov
imul
out
daa
retf
pop
and
cmp
sti
cmp
cs
out
nop
clc
into
inc
(bad)
push
aas
std
inc
rcr
sbb
fs
inc
neg
push
icebp
dec
sub
or
or
xor
mov
sub
xor
mov
js
lea
mov
mov
or
stc
jg
xor
stc
lods
inc
(bad)
cmps
repnz
stc
xchg
sbb
fwait
lock
xchg
(bad)
addr16
pop
adc
pop
lock
or
sub
xchg
les
add
out
(bad)
xor
inc
loope
push
outs
mov
or
stc
mov
cmp
mov
inc
in
inc
out
dec
jnp
or
aaa
js
pop
mov
inc
rcr
mov
push
dec
mov
push
(bad)
repz
std
xor
dec
sub
jne
pop
xchg
mov
add
push
fdivr
retf
test
xchg
pop
mov
xchg
js
stos
aas
or
ss
dec
push
int3
out
pop
aam
add
into
adc
aam
out
pop
or
mov
mov
mov
inc
cmps
je
jge
outs
mov
fild
dec
outs
dec
xchg
dec
xor
mov
(bad)
test
aas
imul
jns
inc
ret
and
out
shl
out
es
mov
xor
(bad)
mov
mov
dec
scas
add
stos
mov
sti
mov
loopne
cmp
loope
sbb
sbb
or
push
jmp
ds
(bad)
xchg
cld
mov
xchg
push
mul
mov
ret
sbb
dec
mov
cwde
imul
scas
adc
and
sar
retf
int3
and
repz
and
sbb
sbb
jl
ins
out
dec
(bad)
in
adc
inc
pop
sahf
mov
pop
cwde
xor
rcl
push
or
cmp
cbw
in
inc
mov
les
xor
rcl
mov
jmp
mov
add
mov
clc
jmp
imul
push
sub
pop
mov
rcr
stc
xlat
frstor
(bad)
jecxz
test
cdq
sbb
hlt
test
sar
dec
(bad)
mov
adc
outs
imul
stc
je
pusha
jg
pop
fwait
mov
jbe
pop
popa
push
push
xchg
mov
or
and
sbb
mov
mov
add
ss
push
dec
push
xor
jge
int
xor
iret
cmp
mov
jns
in
loope
inc
(bad)
rol
pop
sbb
stos
nop
(bad)
popf
ret
(bad)
js
inc
jl
cdq
int
adc
xlat
or
jns
add
inc
(bad)
mov
sbb
mov
xor
xor
call
std
pusha
dec
call
in
dec
aas
inc
popf
test
ins
stc
ds
pop
pop
push
sbb
test
mov
mov
push
sub
and
test
imul
jae
cmp
loopne
in
push
test
adc
xchg
icebp
arpl
pop
sti
pop
dec
shl
scas
mov
dec
pop
std
mov
jecxz
sub
sti
dec
ret
std
or
cmp
or
mov
adc
out
ja
(bad)
sub
cmp
(bad)
pop
cmps
add
push
lock
lahf
xor
inc
add
call
xchg
add
arpl
pop
out
push
xor
push
add
and
add
sti
into
clc
cmc
lods
(bad)
jl
(bad)
bound
(bad)
mov
repz
rcl
mov
and
jnp
int3
test
push
dec
out
pop
add
cdq
mov
mov
push
sbb
pop
stc
test
mov
jmp
mov
cmps
mov
mov
test
sub
mov
pushf
in
jmp
jp
and
fmul
jle
retf
movs
mov
xchg
sub
mov
ret
repz
das
inc
dec
js
scas
or
mov
int3
adc
ins
jmp
xlat
shl
fistp
fiadd
xchg
movs
pusha
iret
ins
cmp
ffreep
icebp
repz
(bad)
jl
jecxz
sbb
mov
fld
gs
mov
cmp
idiv
(bad)
aam
xchg
xchg
ds
lock
push
pop
popf
rcr
xor
push
cwde
xchg
ins
cmp
lods
xor
inc
jmp
jmp
adc
pop
(bad)
cmp
push
jmp
mov
xor
leave
adc
xchg
xchg
fdiv
push
es
jg
mov
add
imul
inc
dec
push
sub
jns
shl
inc
cmp
shl
fcom
int3
clc
xlat
(bad)
jmp
push
inc
xchg
jnp
dec
aaa
xchg
scas
out
cmp
mov
ja
xchg
iret
sar
cmc
rol
sti
adc
in
or
into
rol
sbb
leave
movs
mov
jbe
in
sahf
adc
inc
ret
xchg
dec
inc
push
or
jo
es
sub
mov
and
jno
out
adc
loop
data16
int3
pop
cld
jge
push
mov
das
sbb
cmc
jg
shr
inc
enter
fiadd
stos
int
sub
sbb
mov
daa
dec
repnz
mov
cmps
mov
cmp
or
je
icebp
jno
in
pop
shl
lock
in
aaa
loop
mov
retf
xchg
jmp
jb
and
inc
sbb
or
imul
int3
jb
jg
mov
inc
inc
pop
loopne
retf
fstp
mov
push
(bad)
jmp
(bad)
xchg
daa
test
lock
sbb
pop
sbb
cmp
ret
(bad)
daa
ja
stos
mov
jecxz
adc
sbb
jae
js
push
ins
std
add
mov
cmc
push
push
mov
xchg
pop
push
out
mov
push
test
(bad)
push
push
pop
xchg
jmp
jno
retf
arpl
dec
out
rcr
push
pop
mov
outs
mov
call
pushf
daa
mov
mov
xor
out
pop
lea
or
enter
xchg
and
push
pusha
test
rcr
adc
cmp
imul
cmp
les
je
and
ins
push
stos
mov
pop
loopne
mov
imul
fisubr
and
clc
dec
pop
out
mov
retf
cmp
stos
sbb
fbld
and
dec
mov
xchg
mov
rcr
gs
mov
aad
pop
scas
adc
pop
cld
dec
adc
mov
iret
dec
xchg
mov
sub
ins
or
scas
adc
out
sbb
xor
push
test
test
push
mov
ror
sbb
loope
popf
int
cmp
psubusb
push
js
(bad)
push
ins
jecxz
sbb
movzx
lods
mov
jecxz
mov
adc
aad
ror
mov
adc
cli
ret
pop
scas
add
scas
shr
push
leave
in
xchg
adc
out
mov
lea
pushf
nop
push
pop
or
cmc
leave
pop
daa
in
mov
mov
ss
pop
pop
enter
adc
dec
xchg
and
cmp
pushf
mov
pop
sub
clc
movs
push
shl
out
push
xor
mov
and
mov
retf
inc
fstp
jecxz
fdiv
adc
or
mov
pop
mov
repz
arpl
movs
mov
and
movs
(bad)
pop
and
bound
out
sbb
lahf
xchg
aad
mov
dec
fst
aad
js
mov
xchg
mov
aas
cmp
add
repz
push
daa
pop
pop
add
test
inc
sbb
int
xor
scas
loopne
sbb
push
mov
cmps
dec
mov
int
cmp
push
repnz
les
and
xlat
inc
xlat
loop
ins
outs
mov
or
movs
ss
int3
jmp
mov
cmp
inc
lock
jg
mul
aad
mov
adc
mov
xor
mov
dec
inc
mov
(bad)
in
sub
daa
mov
dec
inc
inc
cmp
dec
out
icebp
outs
cmp
mov
lea
aaa
mov
and
into
jbe
mov
mov
out
ret
ror
mov
and
and
bound
jno
mov
ret
lods
push
fnstcw
fist
push
xor
leave
dec
popa
in
ins
mov
pop
dec
adc
adc
retf
loope
mov
call
mov
cli
out
retf
popa
fsubr
sbb
mov
popa
push
inc
stos
add
adc
mov
sub
and
repz
xor
cmp
jmp
sub
outs
std
add
scas
movs
leave
or
ins
repz
std
lds
stos
aam
mov
mov
xor
adc
jno
rcl
jge
inc
repnz
(bad)
push
jecxz
lods
push
mov
out
std
add
or
and
jno
gs
ficom
mov
hlt
fwait
pop
sbb
jmp
rol
cwde
shr
jmp
mov
ins
pushf
push
pop
fs
and
fisub
mov
push
sbb
leave
sub
mov
mov
mov
xor
ror
push
sub
repnz
inc
or
sub
push
and
xchg
lods
cmc
and
cmp
test
pop
mov
xchg
jmp
nop
loop
sub
xor
sub
leave
into
jb
arpl
xchg
cmp
call
mov
dec
test
ja
jae
imul
shr
fild
xor
cmp
mov
aas
inc
fwait
dec
ins
imul
add
popw
xor
out
mov
fwait
push
pop
mov
ret
cmp
lods
mov
push
and
pop
xor
sub
ins
push
mov
mov
cmp
add
fadd
cmp
and
fisub
pop
cmp
jg
jle
(bad)
mov
ret
push
(bad)
xchg
stc
popa
lahf
rol
jle
and
pop
push
(bad)
ins
int3
add
pop
xchg
cmp
jne
sbb
sbb
jnp
movs
fnstsw
les
rol
popf
or
mov
leave
in
add
sbb
div
mov
inc
repnz
scas
sbb
jmp
(bad)
adc
wbinvd
stos
out
mov
pusha
jle
(bad)
out
js
sbb
push
and
repz
push
sar
mov
mov
or
pop
sbb
mov
xchg
cdq
repnz
xchg
nop
xchg
mov
out
adc
ss
scas
mov
dec
into
or
pop
movs
call
add
mov
in
test
leave
xor
pop
jmp
jmp
sbb
out
and
add
dec
adc
sbb
rcr
shr
add
cmp
pop
sub
or
addr16
xchg
cld
scas
fstp
xchg
retf
cdq
fdivr
sbb
cdq
and
push
pop
jecxz
cmp
and
call
outs
mov
in
and
and
adc
pop
lea
pop
pop
mov
imul
fild
mov
push
sbb
jb
inc
xchg
shl
push
loopne
push
mov
xchg
push
pop
pop
ins
push
push
mov
cld
arpl
ds
sar
bound
sbb
sub
lods
jecxz
aas
cmps
xchg
inc
mov
clc
test
repnz
icebp
mov
sub
pop
add
mov
inc
movs
in
idiv
dec
cli
cmp
mov
xchg
imul
pop
int
jle
hlt
test
outs
mov
arpl
pop
and
and
sub
cmp
push
jl
shl
ror
int3
out
pop
clc
mov
adc
out
mov
fisubr
ins
add
movs
int3
xor
cmp
adc
mov
pop
adc
cdq
cmp
lock
pop
dec
mov
mov
mov
inc
repz
dec
fild
sub
cli
jne
pop
push
sbb
xchg
popf
loopne
mov
mov
pop
icebp
repz
cmp
mov
mov
dec
movs
dec
push
adc
ja
rcl
mov
mov
jnp
mov
shl
mov
rcl
or
dec
or
movs
int
pop
pop
jmp
sbb
hlt
repnz
inc
les
in
cmps
jmp
mov
inc
test
or
jmp
out
leave
daa
jns
xchg
f2xm1
aam
cdq
push
cdq
push
sbb
je
jns
aad
push
bound
mov
movs
pushf
(bad)
jo
sbb
inc
icebp
pop
jmp
xor
rcl
push
mov
imul
ret
mov
ds
push
mov
out
push
inc
jbe
cmp
xchg
jb
or
inc
out
icebp
dec
sbb
cmp
jo
lock
push
sub
mov
nop
and
mov
pop
lods
nop
mov
mov
push
mov
sub
out
js
sbb
aas
movs
pop
int
dec
std
aaa
in
mov
sbb
retf
sti
xchg
jl
cwde
mov
mov
adc
push
push
clc
sub
out
shl
xor
mov
ins
dec
pop
mov
icebp
push
ret
lods
outs
imul
test
and
(bad)
(bad)
mov
sub
xchg
mov
xchg
mov
popf
inc
ja
sbb
fnstsw
aas
sahf
popa
int3
pop
mov
push
lds
pop
jmp
and
sbb
ins
adc
adc
sbb
sub
jae
sahf
mov
xchg
push
xor
jle
arpl
call
push
xchg
lock
dec
int
mov
jg
je
mov
shl
dec
out
mov
xor
popa
movs
je
punpckhwd
mov
sub
push
jo
push
test
dec
or
or
jl
mov
push
mov
cdq
inc
adc
aas
xchg
cmp
and
cs
test
repnz
inc
out
ficom
fiadd
dec
mov
lock
jp
jg
pop
xchg
idiv
fisttp
test
gs
push
ret
ja
add
jnp
scas
mov
(bad)
out
jnp
sub
sub
fiadd
ror
adc
or
add
push
int
hlt
add
inc
adc
xchg
cmps
push
in
mov
retf
xor
ins
sbb
dec
gs
lods
cwde
aam
jmp
pop
adc
out
in
movs
out
retf
ja
shl
mov
jle
and
outs
pop
out
cmps
or
jg
mov
mov
pop
lods
addr16
inc
loopne
aad
mov
push
adc
outs
xor
shl
in
cwde
(bad)
mov
mov
mov
arpl
and
call
xor
std
or
fisub
popf
stc
jo
cmp
dec
out
jo
int3
push
sub
nop
push
and
dec
iret
mov
out
xchg
cmps
nop
push
daa
test
je
out
or
cmp
inc
mov
cli
cmps
cmps
(bad)
out
dec
test
mov
add
lods
xor
pushf
push
jg
mov
xchg
fisttp
pop
and
in
xchg
mov
mov
loop
shl
mov
aad
jnp
popa
mov
mov
dec
jo
retf
xor
mov
shl
das
dec
int3
push
push
pop
outs
mov
push
mov
jb
fnsave
loopne
arpl
scas
inc
lahf
sub
mov
inc
imul
mov
aas
jnp
mov
adc
inc
cmc
out
xor
and
mov
inc
xchg
loop
cmp
popa
scas
xchg
push
popf
movs
mov
add
sub
mov
push
cmc
outs
pop
sub
adc
outs
xchg
scas
adc
aam
mov
ffree
jl
mov
mov
pop
imul
lahf
sub
(bad)
pop
sti
jae
sub
or
int3
ins
cdq
xor
jg
mov
shl
scas
sbb
adc
push
sbb
(bad)
enter
test
or
mov
je
mov
mov
lods
fs
jb
mov
enter
jecxz
and
retf
call
pop
mov
push
nop
call
lods
sbb
mov
jae
mov
fcomp
pop
inc
and
lock
enter
aas
cli
das
fldcw
pop
int3
je
lods
xchg
inc
mov
cli
fwait
in
out
or
fs
stos
out
ja
lds
sub
rol
mov
retf
out
out
pop
aam
hlt
cmp
jae
cmp
stos
xchg
xchg
cmp
add
xor
mov
lds
(bad)
adc
xchg
(bad)
sti
jnp
lods
test
and
cs
add
pop
sbb
sti
jg
stos
icebp
daa
adc
xlat
push
cmp
xchg
cmovl
dec
adc
push
mov
sahf
jns
out
scas
mov
cmc
jmp
mov
sub
sub
adc
ror
mov
cs
push
mov
add
bound
pop
mov
sbb
imul
mov
dec
mov
pop
add
or
add
loopne
pop
daa
rol
mov
jne
rcr
jne
mov
cmp
js
icebp
mov
inc
rol
bound
or
push
adc
fcmovbe
sub
sub
adc
sbb
rol
pop
fwait
sub
mov
loop
cmc
pop
inc
es
sub
sahf
push
repnz
xor
repnz
std
ret
or
ss
mov
pop
(bad)
and
mov
inc
dec
aam
fucomi
(bad)
repnz
popf
ins
push
clc
retf
jne
add
add
sahf
cmc
mov
or
in
jno
pop
pop
inc
jge
mov
test
ss
mov
iret
jne
icebp
popf
outs
call
fcom
push
add
mov
add
sub
push
push
aas
and
popa
aas
sub
enter
ret
pause
addr16
arpl
mov
push
add
aas
stos
cli
dec
inc
cmp
out
jge
sbb
retf
mov
adc
shl
mov
push
movs
cmp
lods
(bad)
test
mov
push
ror
stc
sbb
pop
mov
and
cld
push
lods
out
(bad)
test
jecxz
cmc
push
in
aaa
repz
imul
dec
xchg
out
(bad)
in
inc
(bad)
out
mov
adc
add
daa
aas
fsubr
xchg
fcmovu
sbb
aaa
push
sbb
outs
ret
loop
push
ret
push
xchg
(bad)
je
es
enter
mov
dec
push
sub
arpl
lea
loope
or
jno
jno
in
(bad)
iret
add
or
inc
mov
cmp
pop
jo
loop
dec
test
jecxz
fucomi
out
pop
cmps
lahf
inc
push
mov
nop
shl
jle
xchg
and
call
call
or
inc
or
sahf
xor
imul
outs
sti
movs
mov
popf
dec
fwait
ja
into
aas
xchg
ins
jo
sub
pop
es
dec
js
adc
dec
pusha
mov
repz
pop
mov
shl
xchg
push
push
fcmovb
(bad)
repnz
cdq
adc
and
enter
ret
inc
and
mov
cwde
cmp
loope
push
aad
adc
push
lods
neg
jl
call
and
add
jle
cmps
bound
stos
fcom
call
dec
shl
(bad)
cmp
clc
rcl
out
cmp
neg
add
movs
sbb
in
jmp
lock
mov
jnp
inc
out
stos
fsub
add
push
scas
sahf
adc
mov
push
std
mov
or
bound
add
mov
stos
lahf
xor
fadd
out
pop
or
mov
adc
xchg
xor
mul
cmp
enter
xor
cmp
repnz
push
jge
pop
movs
mov
iret
adc
addr16
adc
lds
jo
cmp
dec
or
sbb
jns
ret
ror
hlt
pusha
pop
cmc
push
rol
hlt
pushf
stos
push
ror
jmp
jns
dec
js
out
cld
pop
add
xor
push
sub
aas
shl
inc
or
mov
and
in
sti
int
push
cmps
pop
ja
xor
nop
push
inc
cs
adc
push
jb
das
out
mov
inc
test
lock
cmps
or
jne
inc
sbb
mov
ins
xchg
dec
jg
or
je
div
retf
ret
cld
in
lock
xor
inc
push
int
and
fdivr
repnz
push
xor
aaa
xor
adc
push
imul
mov
xchg
jo
mov
jl
(bad)
(bad)
and
mov
aad
leave
lods
jg
sar
pop
cld
das
mov
sahf
and
pop
iret
sbb
jne
jge
xchg
je
sub
adc
je
(bad)
cld
mov
in
xchg
iret
and
and
mov
fs
push
cdq
xor
stos
cmp
(bad)
sub
ins
inc
fisubr
ins
popa
loope
jae
mov
push
jns
mov
xchg
stos
aam
jmp
and
inc
mov
or
and
cs
mov
mov
add
mov
inc
dec
jne
gs
outs
in
xor
cwde
push
xchg
dec
fimul
jbe
stos
sahf
scas
hlt
inc
dec
xchg
jg
movs
test
mov
adc
cli
fcomip
jmp
sbb
(bad)
xor
adc
rcl
rcl
(bad)
mul
nop
or
mov
cmc
mov
sbb
adc
test
inc
pop
scas
adc
in
mov
ss
cmp
pusha
repnz
ret
fiadd
xchg
int3
cmps
mov
and
aam
addr16
mul
and
xor
inc
xor
xchg
inc
jnp
jns
enter
xor
test
xchg
aad
(bad)
aad
rol
rcr
fnsave
sub
inc
mov
mov
es
(bad)
and
pop
(bad)
mov
jae
lods
push
xor
mov
add
dec
cmp
lods
arpl
inc
in
lea
les
(bad)
or
push
sub
aas
addr16
push
mov
and
ret
pop
shl
retf
in
adc
xchg
push
daa
xchg
and
sbb
sahf
cmp
and
mov
cmps
jmp
lods
dec
add
mov
sbb
scas
add
sbb
mov
imul
call
push
or
loope
clc
fs
arpl
popa
mov
das
stos
adc
sahf
mov
dec
ror
cwde
sub
lds
push
sbb
fist
enter
call
ret
hlt
xchg
jmp
fst
or
adc
int
cmp
sbb
or
adc
pinsrw
cmps
mov
mov
mov
punpckldq
pop
cmp
(bad)
cmp
stos
dec
sbb
addr16
cwde
adc
jns
repnz
movs
add
lods
push
mov
popa
adc
stos
scas
mov
push
jle
cmp
ds
mov
shl
jecxz
xor
pop
arpl
cli
mov
test
xchg
dec
retf
std
xchg
cwde
mov
(bad)
shl
shl
add
test
mov
inc
cld
jo
int
xchg
sub
jmp
jecxz
movs
mov
dec
je
inc
jp
and
pop
fucomp
fs
cld
out
repz
imul
xor
bound
(bad)
push
popf
mov
pop
daa
pop
mov
xchg
adc
data16
sub
enter
test
jmp
push
out
adc
cmps
xlat
push
sbb
xchg
int
jl
loope
ja
jle
mov
fdiv
fwait
lods
aad
cmps
fs
adc
xchg
xchg
mov
cs
div
outs
cwde
outs
sbb
mov
popf
pop
rcl
mov
mov
mov
dec
inc
mov
mov
int3
pop
push
out
leave
sub
pop
mov
not
xchg
arpl
push
push
cwde
jb
test
sahf
leave
(bad)
imul
jmp
jns
add
adc
sbb
mov
sbb
movs
std
jecxz
xor
mov
clc
or
cmp
mov
add
pop
mov
add
shl
pop
jl
mov
into
push
xor
sahf
aam
push
push
cmp
mov
inc
ficomp
xor
int
push
fld
je
and
jecxz
pop
mov
and
je
retf
arpl
cmp
inc
xchg
gs
add
arpl
xlat
movs
inc
sub
xchg
mulps
push
mov
ret
jge
xchg
popa
data16
dec
scas
std
aam
nop
ror
xor
test
sub
push
out
int
add
cmc
push
ins
leave
(bad)
adc
pushf
pop
ds
inc
dec
or
sahf
cmp
pop
lods
cmp
inc
gs
pop
add
aas
not
xor
popa
movs
pop
bound
rol
mov
xchg
mov
mov
cdq
sbb
mov
sbb
je
pusha
loope
sti
jle
loopne
sub
fsub
mov
jb
aam
ds
test
daa
ret
aam
imul
inc
jg
and
imul
rcl
adc
pop
mov
cmps
xor
mov
xchg
sub
iret
sti
pop
or
dec
sar
sbb
inc
xor
add
xor
outs
push
cmp
stc
cmp
xchg
mov
cmp
adc
(bad)
dec
(bad)
shr
sub
out
sar
cmc
sub
pop
adc
and
jle
lods
jle
xor
das
mov
bound
add
leave
inc
icebp
push
inc
cld
or
repz
(bad)
imul
test
mov
retf
sbb
or
mov
dec
adc
mov
aam
nop
jbe
fsub
cmp
sub
ja
aas
add
and
push
in
(bad)
xchg
add
cmps
in
push
push
(bad)
aad
lods
ins
aas
hlt
cmp
lds
xchg
adc
push
mov
(bad)
sub
mov
call
dec
dec
(bad)
rol
test
or
cld
mov
jbe
jne
add
loop
push
hlt
xlat
inc
jl
adc
dec
add
lahf
sub
adc
call
scas
pop
sbb
jl
push
rcl
xor
add
shl
inc
shl
cdq
imul
aas
das
arpl
jecxz
push
sub
arpl
test
inc
nop
dec
fstp
jae
outs
into
aaa
ficomp
dec
add
dec
mov
push
ret
lods
(bad)
sahf
xchg
jno
shr
fnstsw
push
call
pop
xor
out
adc
retf
dec
(bad)
fldenv
cdq
ins
ficomp
mov
pop
sub
test
or
and
hlt
pop
arpl
xor
add
or
int
xchg
dec
sub
ja
les
push
sub
or
ja
ins
mov
scas
sub
div
outs
xor
test
xchg
push
jnp
cdq
mov
scas
mov
mov
cdq
or
inc
es
push
cmps
cmps
mov
leave
ds
cmp
sti
mov
mov
imul
js
sub
or
jbe
mov
test
and
pop
cdq
pop
pop
xor
jmp
in
aaa
fld
sbb
fwait
enter
sbb
std
int3
mov
add
div
aad
mov
cmp
push
mov
jns
sti
or
add
mov
aaa
iret
xchg
jnp
js
mov
pop
fwait
in
pop
jno
lods
and
and
cmp
(bad)
mov
mov
sbb
mov
shr
and
mov
inc
iret
mov
and
idiv
das
xlat
adc
or
mov
not
and
cmp
adc
(bad)
add
jmp
dec
(bad)
scas
ss
cmp
mov
add
xor
xchg
dec
test
cld
jmp
icebp
jno
int3
dec
xor
lods
loop
xchg
xlat
stos
lea
rcr
sbb
dec
mov
test
xchg
and
adc
cmp
out
mov
jbe
xor
jns
jae
(bad)
iret
xchg
leave
inc
js
test
xchg
and
cmp
adc
sbb
push
pop
xchg
rcr
(bad)
js
aaa
xor
ret
(bad)
adc
mov
ret
mov
xchg
int3
scas
mov
add
out
push
inc
cmp
and
cs
mov
cmp
jle
pop
mov
cmps
inc
in
enter
mov
int
in
pop
shl
mov
add
xor
fs
xor
or
push
or
mov
popa
arpl
retf
xor
xor
xchg
inc
adc
out
ins
pop
cmp
dec
int
pop
jmp
loope
arpl
mov
cmc
loope
jne
add
cmp
mov
xor
or
jne
push
cld
inc
cld
dec
add
lahf
pusha
shr
and
fbstp
xchg
mov
or
(bad)
inc
cmp
mov
gs
cwde
push
stc
mov
sahf
dec
ds
dec
fisubr
add
mov
inc
inc
jne
lock
jae
dec
ins
dec
jmp
leave
int3
call
and
call
repz
mov
retf
push
pop
scas
sbb
dec
mov
sbb
mov
mov
jne
xor
push
push
mov
jbe
jmp
pop
nop
sub
enter
pop
mov
cmp
add
pop
and
lods
pop
adc
aad
(bad)
shr
xchg
jecxz
(bad)
lahf
sbb
mov
std
pop
lea
pop
pop
mov
in
add
jle
in
cmp
sbb
mov
pop
in
pop
(bad)
loopne
fwait
add
adc
ror
sbb
mov
cmps
mov
in
icebp
xchg
add
adc
stos
xor
mov
call
sub
int3
mov
popa
loopne
jmp
and
pop
das
push
mov
fwait
inc
(bad)
sbb
cmps
(bad)
push
in
sub
mov
push
sbb
xchg
imul
add
mov
push
ss
fcomip
push
add
adc
mov
ins
xchg
ja
lock
enter
sbb
cmp
(bad)
xchg
mov
repz
cs
sub
fnsave
adc
inc
jecxz
aam
xor
push
pop
push
sbb
mov
mov
pop
mov
retf
sar
inc
mov
push
mov
sbb
std
loopne
cmp
xchg
add
inc
xor
fyl2x
pandn
push
inc
jmp
ficom
test
push
pusha
ja
push
in
outs
rol
cli
sub
inc
xor
popa
clc
(bad)
retf
jne
fstp
adc
es
adc
out
mov
repz
xor
jo
jecxz
inc
pop
mov
lods
clc
add
xchg
mov
ret
imul
cmps
or
aas
mov
xchg
sub
rol
mov
fcomp
add
bound
bound
mov
pop
scas
xchg
leave
mov
adc
adc
adc
push
adc
and
not
arpl
cwde
inc
out
lock
stos
mov
sub
adc
dec
cld
(bad)
jbe
jle
imul
ds
inc
outs
rol
mov
icebp
cld
xchg
mov
aad
add
xor
sub
or
adc
jnp
(bad)
adc
inc
mov
leave
inc
aad
retf
out
lods
test
adc
pop
push
or
dec
pop
xor
xchg
lock
pop
outs
and
loope
push
jnp
adc
pop
test
xor
push
movs
aaa
pop
adc
fwait
xchg
test
adc
ins
push
sub
popa
clc
es
sub
ins
or
fadd
imul
adc
daa
xor
loop
dec
ret
xchg
ss
(bad)
retf
sahf
call
dec
out
mov
ror
pop
mov
icebp
daa
stos
push
add
and
aad
pop
and
mov
xor
jg
cmp
(bad)
pop
adc
pushf
jb
sbb
xchg
adc
lea
xchg
fsubr
icebp
mov
in
dec
aad
into
dec
adc
dec
or
arpl
dec
cmp
sti
dec
xor
neg
add
repz
call
xchg
in
or
fistp
and
or
mov
dec
mov
adc
out
call
inc
mov
add
inc
cdq
add
lods
call
xor
mov
(bad)
sub
out
xchg
dec
add
std
scas
push
ins
into
and
xchg
movs
lock
mov
scas
icebp
lds
add
rcr
dec
pop
neg
cmps
xor
popa
and
xchg
pushf
and
fsubr
cmp
(bad)
fdiv
popf
sbb
push
cmp
mov
addr16
in
xor
or
mov
jo
outs
adc
(bad)
xor
xor
rcl
dec
stc
and
pop
test
inc
pop
mov
jecxz
fidivr
add
cmp
retf
stos
gs
jge
pop
push
ds
xor
inc
call
xor
mov
push
dec
data16
pop
adc
xchg
wbinvd
and
cmp
jmp
xchg
(bad)
cdq
addr16
rcl
(bad)
(bad)
in
xor
mov
or
ds
push
or
mov
cld
jge
xor
and
pushf
mov
inc
arpl
shl
pop
or
adc
popf
sub
dec
rcr
sti
test
lock
sbb
dec
mov
pop
jge
mov
mov
push
cld
loopne
shl
cmp
addr16
xlat
mov
(bad)
jmp
gs
and
aaa
mov
fwait
jl
outs
fisttp
pop
and
push
je
jmp
leave
push
mov
test
push
gs
test
ret
(bad)
sub
or
mov
cmp
in
dec
mov
sbb
jmp
adc
jbe
cmp
or
jecxz
jno
sub
mov
xchg
pop
pop
sub
std
stc
dec
push
lea
in
or
loope
(bad)
mov
pop
push
jb
jle
pop
xor
sbb
cmovp
mov
xchg
in
mov
or
test
scas
jg
mov
add
icebp
sub
lods
cmp
movs
es
jns
dec
ficomp
xor
in
pop
jecxz
scas
or
cmps
mov
push
push
cld
fdivr
out
cmp
lds
dec
ins
rol
clc
sbb
mov
ror
and
mov
and
cmp
push
cwde
mov
push
jne
imul
movs
aas
xstore-rng
cmps
add
es
fiadd
xor
or
dec
popa
jne
jnp
xchg
repz
in
xchg
gs
jbe
pusha
(bad)
mov
add
mov
imul
or
push
jl
out
lds
or
retfw
add
fwait
sbb
repz
iret
cwde
fcomp
js
jmp
pop
jp
pop
xor
inc
popf
arpl
push
in
mov
or
call
mov
sahf
mov
nop
add
(bad)
cld
add
mov
je
push
pop
mov
mov
xchg
gs
cdq
sub
jle
mov
mov
push
jb
and
(bad)
cmc
repnz
or
dec
pop
retf
mov
add
or
mov
(bad)
push
loope
ror
aam
clc
and
out
scas
mov
inc
pushf
push
cld
std
test
jmp
loop
mov
and
bound
sub
mov
dec
jmp
sub
mov
pop
ja
jmp
add
and
clc
gs
xor
pop
inc
pusha
not
scas
mov
dec
mov
fcom
push
or
inc
std
pop
and
and
mov
stos
xchg
adc
stc
add
mov
hlt
dec
icebp
inc
mov
adc
pushf
lds
jmp
sbb
out
(bad)
sti
cmp
ret
mov
xchg
fadd
idiv
in
jo
add
pop
fwait
add
sahf
mov
xor
xor
pop
cmp
cmp
push
adc
mov
int
dec
mov
mov
outs
push
mov
cmp
xor
cwde
(bad)
xor
test
icebp
jmp
and
mov
jmp
shl
xchg
jbe
mov
into
xchg
cli
sbb
into
fdiv
jmp
pop
shr
daa
scas
push
jnp
fisttp
mov
test
push
xor
rcl
and
xor
rcl
daa
xchg
jge
enter
leave
test
add
sbb
and
push
repnz
jbe
ja
ror
adc
mov
test
jne
cmp
sti
aad
jb
adc
cmp
jbe
out
adc
dec
mov
mov
(bad)
pop
popf
sub
in
pop
scas
std
xor
xor
dec
test
out
daa
(bad)
jns
adc
pop
jmp
jle
js
xor
fmul
cmp
repnz
or
dec
and
int
jb
lds
aaa
iret
in
call
sbb
push
rcr
arpl
ret
int
mov
push
iret
sub
push
dec
push
or
push
adc
mov
inc
pop
and
ds
std
in
sahf
lds
arpl
xor
jo
jecxz
call
setbe
movaps
scas
in
and
pop
push
movs
mov
xor
(bad)
cmp
mov
repnz
cmp
mov
fxch
push
aam
(bad)
sbb
and
(bad)
jns
push
jbe
cwde
js
pop
pop
fmul
sbb
xchg
int
xchg
(bad)
cmp
inc
js
ror
fwait
(bad)
loopne
out
outs
out
in
jl
and
sub
inc
inc
lods
or
div
pop
imul
rcr
mov
cmp
push
inc
sbb
dec
sub
push
addr16
call
dec
jb
loope
imul
dec
pop
in
mov
mov
jns
jns
or
icebp
ret
push
adc
pop
aas
enter
fdivr
pop
or
nop
les
nop
mov
pop
dec
movs
sar
cmp
movs
ins
and
mov
test
fwait
jno
mov
jl
push
xchg
lds
push
movs
inc
adc
sub
icebp
push
mov
aam
int3
add
call
add
add
dec
xor
aad
gs
mov
sti
ins
ret
mov
rol
sar
lea
pusha
mov
sub
jmp
outs
dec
xor
int
jae
in
hlt
inc
cmp
jge
push
lahf
rol
inc
push
mov
xchg
setne
push
xchg
mov
int3
aam
std
les
dec
xchg
pop
add
sub
mov
sub
mov
addr16
std
test
jne
call
or
out
frstor
sbb
wbinvd
add
das
mov
xchg
movs
or
shl
fdivr
or
xor
mov
(bad)
sahf
pop
inc
xor
jge
mov
iret
or
adc
(bad)
mov
fild
pop
add
push
loop
mov
jns
mov
sub
inc
adc
fld
std
ins
paddsb
push
shl
jecxz
cmc
stc
bound
mov
lock
pushf
or
test
xchg
mov
out
adc
int3
adc
push
sbb
push
dec
pop
mov
push
or
sbb
inc
mov
loope
loope
clc
frstor
and
mov
or
pushf
cdq
xchg
and
lds
inc
and
pop
(bad)
push
test
aad
aas
dec
inc
mov
cmc
out
in
sbb
repz
mov
adc
mul
xor
push
add
fcmovnu
or
and
cli
push
dec
leave
cli
pop
pusha
daa
sub
(bad)
mov
dec
dec
push
in
js
pop
add
dec
scas
data16
les
jns
das
cli
jno
inc
nop
rol
and
mov
adc
mov
jae
rcpps
inc
dec
mov
call
ja
pop
in
fidivr
call
loopne
lahf
sti
int
xchg
cmps
sub
dec
arpl
mov
or
test
push
fisubr
mov
push
mov
enter
(bad)
outs
jp
aam
popf
test
jl
sub
mov
and
sub
jne
jl
movs
jae
sub
js
sbb
xchg
jge
jle
xchg
ret
int3
das
jmp
test
cdq
pushf
mov
mov
push
cmc
pop
sub
adc
add
pop
sub
push
femms
add
mov
loopne
xchg
xor
mov
outs
mov
mov
neg
and
inc
xchg
jmp
sbb
out
mov
pop
sbb
adc
(bad)
stos
cmc
retf
xchg
(bad)
mov
movs
les
outs
clc
inc
inc
adc
sub
xor
dec
ja
ins
sar
leave
push
pop
xchg
jns
jp
inc
pushf
neg
bound
sub
repz
push
add
inc
jae
sub
sub
fwait
pop
mul
jns
or
jp
mov
dec
scas
push
aad
or
test
mov
pop
fcom
lds
leave
mov
add
into
jne
test
(bad)
fild
stc
(bad)
adc
lock
push
push
test
or
sbb
lea
mov
push
enter
jo
(bad)
sbb
ret
adc
push
or
retf
fs
cmp
mov
push
jmp
out
movs
nop
sub
sbb
jg
data16
stc
xchg
add
les
cmp
fidiv
cld
mov
fistp
ret
sbb
add
jns
(bad)
js
in
hlt
sbb
aam
jl
iret
repnz
fsub
mov
mov
cli
sar
lahf
sbb
sub
pop
ficom
push
and
lods
push
daa
push
push
icebp
cmp
in
adc
jne
fist
pop
or
movs
mul
mov
cmps
adc
pop
cld
sahf
call
aam
sbb
push
lods
bound
aas
jp
icebp
add
inc
adc
ins
ror
popf
push
das
dec
nop
dec
ret
jecxz
das
ror
mov
push
mov
mov
and
(bad)
(bad)
ds
jge
stc
and
or
dec
fsubrp
push
adc
sahf
test
mov
(bad)
add
and
lds
cmc
xor
cmp
jl
pop
repz
mov
or
pusha
xchg
cmp
and
(bad)
add
mov
ins
sbb
add
xchg
adc
xor
or
int3
outs
clc
dec
lods
scas
jae
sub
(bad)
(bad)
xor
int3
mov
mov
not
jb
and
(bad)
sti
clc
arpl
shl
inc
popa
loopne
sar
test
inc
daa
push
inc
cwde
mov
and
mov
mov
fcomi
out
pop
dec
pop
jae
lea
jp
pop
mov
lea
push
dec
aas
jae
sti
add
adc
sub
outs
out
mov
neg
push
or
jns
sbb
jno
push
add
mul
fimul
fcom
xor
push
cld
add
in
xchg
push
inc
fldcw
(bad)
inc
frstor
rcl
int
loopne
ja
pop
ins
adc
imul
mov
jmp
shr
pop
jmp
mov
mov
jmp
or
fisttp
mov
icebp
xchg
clc
js
mov
xor
pop
jmp
call
(bad)
adc
int3
std
and
ss
add
mov
nop
mov
add
and
cmp
mov
daa
call
add
shl
lods
add
and
leave
popf
cmp
retf
jmp
or
and
jge
jg
xor
mov
mov
mov
add
jns
push
push
xor
sahf
or
push
clc
inc
fucom
(bad)
xor
shl
out
add
sub
xchg
cmp
jns
call
jns
mov
xchg
movs
movs
push
in
je
push
jns
push
and
test
cmp
cmp
pushf
sahf
(bad)
in
mov
xchg
mov
jp
xor
or
xchg
int
sbb
movs
push
fcom
push
sbb
aaa
push
jge
lods
push
or
sub
sar
nop
aas
xchg
inc
out
push
popf
xor
clc
mov
(bad)
ds
(bad)
pusha
mov
dec
adc
or
adc
jo
repnz
push
jp
js
push
dec
ret
pop
icebp
sub
daa
daa
(bad)
cmp
cmps
fistp
int
cmp
pop
fld
mov
adc
dec
les
sbb
lea
jmp
pop
lea
xor
popf
add
or
xchg
test
jbe
push
bound
fimul
lock
jecxz
aas
imul
cmp
sbb
push
push
fist
xor
or
mov
(bad)
push
pop
int3
scas
ins
push
out
scas
mov
push
jbe
mov
lds
cmp
pusha
cmp
sti
mov
jle
jbe
cmc
dec
div
jmp
dec
mov
imul
adc
xchg
je
not
daa
popa
sub
push
mov
fbld
cmp
add
xchg
xchg
ja
mov
sbb
inc
std
or
outs
add
and
mov
lock
sbb
retf
(bad)
mov
sbb
std
cdq
leave
inc
jmp
das
cmp
aad
adc
(bad)
xor
pop
aas
sahf
push
jno
adc
(bad)
adc
cmp
xor
je
mov
pop
jmp
or
lea
xchg
lock
mov
mov
adc
xor
cmp
movs
sub
test
rol
push
mov
sbb
dec
xchg
loopne
xchg
popf
fild
cwde
fld
in
sbb
sbb
or
push
js
sub
ficomp
mov
push
call
dec
xor
popa
into
fwait
jo
lock
and
adc
sbb
cs
ret
enter
(bad)
std
or
or
inc
aad
sub
dec
adc
push
and
int
add
push
cmp
fdiv
sub
dec
push
xchg
jnp
movs
out
lods
imul
or
ret
mov
xlat
xor
jb
jmp
and
mov
movs
jbe
push
xchg
push
xchg
lods
(bad)
jmp
(bad)
fwait
lods
fcomp
cld
adc
lock
cli
add
fimul
cwde
cmp
xor
mov
cs
cmp
push
mov
push
xor
ret
repnz
push
mov
xchg
arpl
in
dec
ins
shr
lods
(bad)
fcomp
sbb
sub
sub
outs
gs
js
mov
int3
pop
push
(bad)
push
mov
test
and
cmp
sbb
shl
in
outs
inc
cs
fsubr
lock
or
scas
fsub
adc
add
stos
mov
hlt
cmp
mov
or
nop
adc
lds
mov
mov
out
std
sti
xchg
push
loop
es
call
ret
test
dec
jno
leave
and
inc
arpl
xor
mov
sbb
fsubr
jecxz
lds
jge
jne
pop
test
jo
clc
iret
cmp
pushf
mov
not
cli
pusha
jnp
inc
lock
mov
or
out
pop
push
mov
vmovntpd
(bad)
mov
xchg
out
pop
pop
mov
adc
mov
nop
sbb
or
cdq
add
add
cmp
movs
or
lea
xchg
xchg
fistp
imul
imul
rcl
in
sbb
(bad)
outs
sub
xchg
sub
sbb
and
mov
jl
inc
arpl
mov
ins
addr16
setl
(bad)
xchg
sub
mov
in
mov
mov
jge
lock
pop
dec
je
mov
repnz
push
cmps
mov
mov
jl
inc
and
das
js
add
in
pop
push
scas
jbe
cmp
icebp
xchg
(bad)
dec
test
repnz
aad
push
sub
outs
ficom
sbb
jle
jno
test
das
dec
das
sub
cmp
bound
cmp
stos
cmp
sbb
adc
sbb
fmul
inc
jp
or
in
in
xchg
jp
add
lea
push
ins
sub
sbb
jl
sub
dec
adc
inc
inc
aaa
pushf
inc
pop
ror
pop
hlt
inc
(bad)
adc
popf
dec
or
ja
and
pop
jmp
inc
dec
dec
xchg
or
idiv
cmp
mov
mov
xor
in
mov
in
cld
add
push
and
ins
nop
ds
pmullw
xchg
mov
ds
out
aas
rol
movs
enter
into
data16
push
fs
ss
push
xor
pusha
out
(bad)
jo
jmp
(bad)
inc
add
ds
xchg
push
or
fist
pusha
xor
xor
and
stos
iret
and
outs
ror
out
jnp
inc
sub
mov
inc
lea
jno
push
xacquire
lds
mov
ret
clc
dec
jg
sbb
(bad)
test
fisttp
arpl
les
mov
mov
imul
add
jp
dec
sbb
pop
push
fs
and
sub
jl
inc
cmp
into
leave
dec
hlt
ret
dec
cwde
adc
out
fmul
dec
sub
aam
push
loopne
jns
pop
adc
mov
movs
mov
mov
je
aam
mov
movs
mov
aaa
icebp
addr16
add
pop
sar
mov
scas
mov
mov
jp
xchg
sub
cmp
sbb
popf
bnd
xchg
aas
sbb
les
ffreep
pop
into
or
aaa
pop
xchg
dec
popa
sbb
mov
xchg
sub
xor
mov
out
lods
inc
shl
xlat
push
sbb
mov
ror
push
push
test
jne
sar
popa
or
pop
inc
sbb
cs
imul
ret
jo
cdq
cmps
jae
sbb
fwait
(bad)
aas
cmp
shl
test
inc
xchg
dec
mov
retf
pop
mov
pop
retf
movs
retf
push
cs
ds
sub
in
jecxz
cmc
out
jo
jne
pop
mov
jo
dec
test
sub
adc
test
stc
out
or
add
xlat
xlat
stc
ror
pop
push
cmc
inc
inc
xlat
cwde
lahf
imul
outs
sub
(bad)
sti
push
movs
pop
pop
xor
outs
dec
or
sub
pop
repnz
xor
push
fsubr
call
adc
jecxz
nop
fdiv
cmp
inc
adc
movs
sub
jmp
ins
or
inc
inc
stc
(bad)
jmp
adc
shl
(bad)
xlat
or
test
sbb
mov
sub
pop
(bad)
sahf
sti
scas
jg
mov
or
sub
push
rcr
es
xchg
sub
add
jecxz
pop
ss
pop
jge
(bad)
mov
std
jbe
mov
lea
xor
pop
and
out
mov
pop
repz
and
mov
mov
inc
lahf
sub
sub
das
retf
pop
dec
mov
cmp
test
out
mov
inc
fidiv
cs
push
dec
push
jge
scas
out
dec
out
aam
or
(bad)
mov
jecxz
sub
or
shl
mov
add
or
mov
adc
repz
and
loopne
xor
pop
jmp
ror
rcr
imul
mov
cmp
cdq
push
sbb
ror
into
das
push
dec
div
(bad)
mov
shl
loope
push
xor
push
add
aas
sub
xor
or
int
aad
pop
lock
js
jmp
jmp
mov
add
add
xor
rcl
add
xor
lea
mov
or
xchg
shl
inc
data16
pop
adc
mov
inc
stos
jae
jge
lods
adc
dec
pusha
add
dec
mov
out
jmp
scas
push
(bad)
nop
xchg
int3
pushf
xor
in
shl
pop
call
loop
jp
pop
xor
sub
sbb
es
in
imul
inc
inc
iret
inc
jmp
cmp
pop
add
jnp
into
outs
out
mov
sub
sub
(bad)
pop
xchg
ret
adc
jnp
out
adc
push
lds
stos
pushf
cmp
lods
icebp
sub
sbb
pop
dec
dec
div
fs
dec
jae
pop
out
scas
sub
mov
scas
stos
(bad)
jl
les
sub
fnstenv
movs
test
pusha
dec
sbb
xor
ficom
jl
mov
jmp
ret
jge
jle
inc
add
mov
inc
int3
call
adc
cmp
out
jmp
pop
sahf
xlat
rol
ins
jns
sub
adc
push
lea
cmp
imul
fistp
mov
push
push
lahf
aam
mov
out
push
push
lea
xchg
icebp
mov
sub
or
lock
fwait
pop
ror
sub
mov
ret
in
ret
movs
mov
test
(bad)
xchg
retf
mov
stos
lea
loope
cmp
fldcw
push
adc
lds
push
loopne
inc
mov
dec
mov
inc
retf
loop
xor
fld
cdq
pushf
pushf
arpl
pop
pusha
ficomp
sub
jle
fst
out
aam
mov
sub
cmp
sbb
(bad)
in
loopne
adc
pushf
clc
jge
lea
pop
mov
inc
loop
in
xchg
ss
aad
jmp
imul
sub
addr16
in
dec
or
test
cmp
dec
adc
xchg
aas
adc
jmp
pop
cld
push
mov
and
outs
push
mov
stc
clc
xchg
stc
inc
adc
add
outs
ja
adc
ja
mov
and
pop
in
sbb
das
fiadd
shl
sti
jo
scas
jmp
loope
jno
retf
and
lds
cmp
cmps
loop
lock
sub
in
push
jecxz
sub
stc
pop
jns
and
sub
mov
loope
aaa
inc
inc
test
adc
pop
adc
call
pop
rcr
ins
sbb
add
xor
mov
cdq
jmp
repnz
fcom
add
xlat
cmp
ret
mov
add
stos
ja
mul
pushf
sbb
int3
xchg
push
push
jnp
aas
mov
mov
popf
pop
push
das
and
mov
push
sti
xchg
jmp
ret
adc
push
rcl
sti
cwde
je
and
mov
sahf
test
mul
or
mov
aas
loop
popa
xchg
cdq
sbb
inc
push
jmp
mov
add
or
xor
ja
mov
cli
ds
dec
pushf
pop
rcr
data16
scas
inc
cmps
pushf
sti
fdiv
data16
call
sbb
xor
adc
dec
add
mov
xor
push
sub
outs
jo
mov
jne
retf
movs
pop
nop
test
cld
jbe
inc
sbb
xchg
pop
stos
xchg
aam
fnstsw
pop
pushf
pop
fisub
jg
dec
mov
arpl
cmp
out
inc
stos
mov
and
jmp
xchg
push
xchg
scas
pop
push
mov
sub
and
dec
sbb
mov
loop
inc
loope
mov
and
inc
add
jecxz
lsl
(bad)
mov
adc
jl
fisttp
sbb
into
int
cmp
cmps
or
ss
fild
hlt
sub
sbb
in
push
int3
mov
fcomi
imul
pusha
pop
mov
(bad)
in
lods
stos
daa
mov
push
sub
sub
outs
add
into
ficomp
ins
push
std
mov
fwait
stc
push
push
syscall
sbb
sahf
inc
ds
mov
push
xchg
push
inc
jo
push
pop
cmps
dec
bound
iret
outs
xor
sbb
jg
mov
dec
call
xlat
fldcw
and
neg
test
push
xchg
mov
jo
cmc
outs
mov
sahf
xchg
mov
je
mov
movs
jnp
clc
in
sahf
jo
outs
inc
push
arpl
dec
in
ret
test
retf
test
dec
jae
add
dec
dec
mov
lods
pop
jns
out
iret
dec
lods
or
mov
pushf
stos
or
pop
arpl
xchg
dec
xlat
das
jne
jne
adc
cmp
int
add
jmp
idiv
xchg
cmps
popa
or
fldenv
mov
adc
clc
(bad)
cdq
stos
in
lods
fs
mov
xchg
jae
mov
ins
add
outs
shr
fldcw
pop
push
rcl
pop
inc
idiv
jb
mov
dec
mov
jge
ins
cmc
adc
push
and
pop
cs
pop
es
aas
(bad)
sar
arpl
lahf
adc
xchg
lods
and
in
aas
adc
pop
scas
or
aam
popf
aas
mov
cwde
mov
scas
jae
enter
mov
mov
iret
rol
retf
pop
test
stc
loope
jp
mov
xor
loopne
shl
xor
mov
xchg
fistp
cmp
mov
mov
mov
mov
addr16
mov
cwde
in
popa
xchg
add
and
push
pop
call
fsub
dec
xor
adc
pop
out
ret
and
dec
xchg
lods
js
adc
std
cmps
sahf
and
aas
iret
and
push
mov
inc
leave
mov
out
mov
xchg
hlt
out
hlt
adc
adc
pop
add
out
adc
popf
stos
(bad)
inc
pop
aaa
mov
sub
and
repnz
in
mov
add
data16
mov
mov
jmp
mov
jne
xchg
xor
push
add
pop
movs
jmp
movs
stc
cld
stc
lea
inc
push
jp
ss
pop
mov
sub
mov
jns
imul
mov
fs
xor
aaa
mov
inc
cdq
adc
or
jo
push
cld
imul
loope
xchg
popf
jns
popa
push
or
popf
test
pop
adc
sbb
fdivr
dec
out
je
aad
aam
sbb
dec
dec
sbb
ret
mov
data16
fidiv
push
mov
(bad)
aam
sub
lahf
sub
pusha
sbb
or
inc
test
(bad)
shl
pop
mov
scas
scas
jmp
xor
lods
out
and
or
inc
or
mov
push
aad
es
aam
add
xchg
jp
std
repz
cmp
and
jnp
xchg
add
and
int
xchg
mov
pushf
cmp
les
pop
inc
sub
xor
out
cmp
(bad)
in
inc
and
xchg
bound
cmps
loop
xor
or
pop
je
pop
mov
xchg
fwait
cmps
cmp
mov
imul
lods
test
in
add
fist
push
cmp
push
fs
xchg
shl
aas
lea
add
mov
fsubp
ret
cwde
or
sar
int3
jp
fisubr
fsubr
fmul
sti
push
call
call
daa
xchg
aam
mov
das
arpl
pop
leave
add
outs
ins
jb
lds
add
push
bound
bound
sbb
xchg
fimul
ss
mov
test
mov
cmps
icebp
jne
imul
push
outs
xor
xchg
loope
call
adc
neg
outs
jge
test
push
mov
sbb
aas
idiv
inc
ja
jae
or
lahf
jmp
test
mov
bnd
gs
inc
test
mov
cmp
xchg
sbb
push
sbb
xchg
cli
push
fwait
push
aaa
and
push
mov
je
add
leave
outs
pop
sti
mov
push
shl
add
inc
pop
fnstcw
out
mov
out
test
jns
popf
lods
mov
shl
inc
rol
retf
add
sub
mov
push
stc
daa
repnz
cwde
loope
sub
mov
sub
in
xor
enter
inc
dec
push
je
pop
lock
mov
scas
dec
lock
push
fisubr
call
mov
bound
push
add
mov
sub
xor
sbb
call
xchg
dec
stos
lock
in
out
dec
and
xchg
cs
ret
icebp
stos
sbb
leave
outs
sub
adc
das
lods
pop
aad
test
pushf
stos
mov
jne
lea
push
push
or
cmp
sub
xchg
dec
shl
into
push
ins
call
dec
xchg
inc
lahf
push
cmp
out
test
std
lea
out
stc
sti
jg
aad
scas
mov
dec
mov
or
out
mov
or
mov
pop
(bad)
popf
jno
inc
fist
mov
in
repz
jg
and
sub
dec
loope
or
add
cdq
loope
pop
jg
in
push
dec
(bad)
out
pop
fdiv
adc
cmc
scas
and
je
push
cmc
in
fcmovb
dec
and
inc
push
jns
sti
lods
mov
fdiv
xor
jne
aam
jne
loopne
adc
imul
ins
add
sti
jle
push
popf
pop
mov
mov
inc
outs
mov
dec
pop
dec
mov
or
adc
addr16
dec
mov
mov
out
js
lds
mov
xchg
mov
mov
adc
inc
cmps
dec
xchg
repnz
push
enter
jmp
xor
dec
and
adc
sub
gs
aas
or
repz
pop
int
sub
and
xchg
adc
stc
jo
jne
sbb
repz
dec
cmp
xchg
je
call
mov
fistp
(bad)
cld
fimul
inc
(bad)
aaa
(bad)
ins
mov
or
mov
dec
mov
inc
jne
lahf
or
out
scas
pop
das
dec
mov
mov
popf
mov
push
nop
jns
adc
stos
and
adc
ja
stos
pop
lock
jl
and
test
nop
jb
or
jge
test
pop
test
mov
adc
inc
jmp
xor
cmp
out
add
push
ror
fnstcw
cmp
jnp
dec
and
and
std
movs
mov
mov
pop
gs
imul
push
ja
mov
push
xchg
aaa
hlt
push
push
ins
imul
pop
(bad)
clc
sub
sar
mov
rol
sbb
retf
push
shr
fwait
add
repnz
fldenv
jbe
sub
jge
retf
push
adc
repz
mov
arpl
cmp
out
ss
nop
ds
neg
cmp
fistp
fsubr
(bad)
(bad)
cli
and
call
push
xchg
cmp
cmps
xchg
push
jecxz
pushf
icebp
and
xchg
bound
jne
ss
mov
mov
adc
jne
aaa
sbb
mov
inc
push
dec
rcl
mov
into
jecxz
retf
cmp
xchg
mov
cs
xchg
lods
mov
adc
jbe
mov
fsub
jmp
aaa
adc
out
sbb
arpl
and
mov
add
out
mov
inc
jnp
fdiv
mov
int
test
push
xlat
mov
nop
ret
in
outs
sub
and
neg
movs
mov
aaa
jmp
and
adc
xchg
jbe
in
add
and
mov
inc
xor
sbb
stos
jmp
add
inc
cs
push
xchg
das
push
gs
pop
or
aaa
add
mov
pop
mov
rcl
repnz
jo
std
and
add
in
mov
mov
ret
cdq
inc
pop
js
inc
jb
aam
popf
and
dec
push
test
push
dec
xor
push
mov
xor
xchg
mov
bound
enter
stos
sbb
div
fwait
add
jno
data16
lahf
ins
sbb
out
add
lahf
repnz
xchg
mov
sub
cmps
in
out
jmp
fild
addr16
gs
sbb
call
sbb
push
call
int
sbb
retf
fild
pop
fild
iret
and
mov
sbb
jnp
lock
(bad)
movs
bound
and
mov
push
sub
sub
scas
xchg
loop
(bad)
xor
and
cmp
int3
lsl
(bad)
cmp
pop
lock
movs
jmp
mov
dec
pop
adc
lds
adc
or
out
(bad)
pop
and
daa
loop
je
stos
fdiv
xor
pop
call
scas
push
cmp
std
push
lods
pop
xchg
add
cmp
mov
cld
rcr
push
sbb
sub
mov
sub
push
ja
pop
sub
pop
xor
aaa
dec
mov
inc
jnp
lock
popf
rcr
mov
sbb
into
jmp
popf
jg
cmps
loope
jns
popa
xor
bound
loop
mov
push
mov
aas
std
outs
loope
int3
rcr
and
std
icebp
jle
in
mov
rol
inc
stos
lods
inc
mov
mov
int3
mov
push
aaa
dec
mul
icebp
mov
mov
push
repz
in
jecxz
mov
pop
call
hlt
test
sbb
dec
and
pop
cmp
test
repnz
sub
cmps
test
adc
pop
push
std
adc
sub
adc
imul
jno
jnp
sub
xor
mov
sub
and
shr
lods
jp
out
push
repz
and
arpl
es
fistp
test
imul
add
adc
xor
ins
dec
mov
icebp
mov
push
push
outs
mov
ins
adc
sub
icebp
in
pop
jb
sub
xor
xor
test
aad
mov
outs
mov
jne
cmc
jmp
rcl
lods
xor
sub
fcmovnb
mov
xchg
stc
adc
jbe
(bad)
mov
outs
add
cli
xor
sub
mov
xor
mov
add
pop
add
and
cmp
ins
stc
test
pop
loope
shl
(bad)
loope
xor
inc
dec
sbb
aam
out
ins
movs
lea
leave
(bad)
pusha
fs
push
popa
nop
cld
fistp
or
shl
mov
jmp
sub
cmps
sub
sub
out
push
adc
push
add
xchg
inc
imul
mov
push
adc
call
iret
in
sub
gs
fstp
fld
mov
push
in
cmp
js
icebp
sub
add
xor
popf
ds
mov
and
inc
fwait
test
xchg
data16
inc
pushf
cmps
pop
and
pop
lock
inc
sub
mov
(bad)
ret
aad
pop
inc
(bad)
cli
rcl
ror
loopne
cmps
cmp
sub
stos
mov
mov
rol
cli
fisttp
jmp
adc
out
stc
jae
or
mov
scas
jecxz
int
aas
dec
test
std
and
or
fwait
jecxz
sahf
sbb
stc
ficomp
sbb
and
sub
jl
mov
aam
loopne
inc
setnp
fsub
outs
sub
pop
xchg
adc
pop
dec
sub
cmp
mov
cmp
adc
(bad)
jb
dec
or
aad
mov
sub
or
jns
and
inc
out
sbb
jnp
xor
and
loope
cmp
daa
std
xor
xor
inc
pop
xor
inc
pushf
cmp
lahf
xor
cmp
inc
inc
shl
int
add
dec
cmc
neg
mov
xchg
pop
adc
pusha
dec
ret
mov
fmul
int3
imul
and
loop
test
xor
loopne
lods
sar
jl
mov
push
mov
push
test
mov
ss
xor
ins
mov
jae
sbb
and
pop
dec
or
lock
dec
pop
xor
jl
jbe
cmp
mov
xor
mov
cmp
sub
mov
sub
je
test
jno
mov
mov
cmp
push
mov
mov
loop
sbb
push
cmp
in
in
dec
adc
inc
addr16
retf
xchg
mul
sbb
jmp
es
ror
jb
call
push
mov
out
std
rcl
lock
in
jbe
(bad)
imul
test
adc
outs
test
inc
es
xor
dec
xchg
retf
(bad)
test
ins
stos
xor
mov
xchg
std
jnp
inc
gs
mov
cmp
pop
leave
test
and
cmp
mov
dec
jmp
mov
stc
loopne
or
aaa
fucom
jo
xchg
jmp
sbb
adc
pop
cmp
mov
jo
jmp
mov
ret
mov
fist
in
jle
add
xchg
fwait
test
mov
in
xlat
add
call
lods
push
push
lds
lock
call
cmc
adc
or
cmp
cmp
movs
imul
jle
cwde
pop
imul
out
cmp
dec
sbb
pop
shl
dec
loope
adc
adc
pop
rcl
call
fninit
ficom
fwait
mov
pop
out
test
add
and
out
xchg
pop
sub
inc
add
and
jae
test
loopne
pop
xor
outs
jmp
iret
(bad)
or
fnstenv
ins
pop
sub
adc
sub
test
xor
sbb
stos
sub
and
call
jmp
stos
out
daa
mov
ror
cmp
iret
sahf
pop
call
xor
lods
call
mov
mov
in
outs
pop
ficom
cdq
lahf
dec
push
inc
push
jge
das
dec
sbb
jae
ja
xor
fs
js
xchg
cmp
sub
loop
test
mov
add
and
sub
rcr
daa
xlat
pop
hlt
repnz
sub
test
retf
mov
inc
mov
stc
sti
mov
or
(bad)
bnd
(bad)
bound
outs
repnz
lds
retf
lds
arpl
xchg
js
mov
cli
add
push
jle
lea
fistp
aam
or
jle
mov
adc
push
sub
fistp
xor
xlat
ror
js
lds
add
(bad)
jo
gs
leave
aam
jp
mov
clc
push
sub
ja
lock
sar
out
in
dec
repz
retf
add
jle
dec
adc
pushf
(bad)
xlat
xchg
jle
sbb
out
sti
mov
and
test
jbe
xchg
popf
xchg
fstp
loopne
inc
iret
pop
xchg
lea
inc
adc
cmp
rol
push
fidivr
call
in
movs
mov
add
jbe
or
dec
outs
lahf
outs
xor
retf
xor
xchg
sahf
jmp
sbb
in
dec
or
adc
push
outs
xchg
xchg
sbb
f2xm1
lods
repnz
or
rcr
int3
cmp
jmp
bound
cdq
jmp
and
ret
ret
xor
sub
xchg
shl
out
or
fisttp
mov
add
ror
push
or
int3
test
adc
mov
and
daa
xchg
pushf
mov
hlt
(bad)
mov
test
std
add
das
daa
xchg
mov
out
push
dec
inc
(bad)
ja
push
lea
pop
scas
adc
stc
dec
stos
or
push
hlt
adc
jb
(bad)
(bad)
add
xor
in
or
xor
int
mov
pop
addr16
jae
xor
push
mov
inc
jl
(bad)
sbb
or
push
scas
inc
jge
and
call
fimul
std
sbb
sbb
mov
mov
sbb
cmps
ror
inc
jge
sub
inc
stos
dec
sbb
ins
xchg
or
movs
loop
stc
mov
jmp
outs
pop
jp
mov
addr16
mov
and
jg
inc
sub
aad
daa
pop
pop
sar
jge
cdq
sbb
ror
mov
xchg
data16
(bad)
dec
test
add
sub
and
xchg
pop
jmp
inc
mov
jno
xor
push
mov
fiadd
test
and
sar
fwait
popf
cmps
pop
loop
dec
jp
test
(bad)
add
ss
xor
add
je
shl
int3
sbb
mov
aaa
test
mov
push
xchg
add
pop
xchg
(bad)
mov
mov
add
xchg
call
push
ss
pop
and
repnz
pop
bound
addr16
push
pop
pop
xor
hlt
rol
fdivr
inc
pop
mov
add
call
stos
or
lods
pusha
add
enter
sub
xchg
or
mov
push
fldcw
jo
xchg
dec
cs
fcmovnbe
leave
out
sbb
mov
mov
fldenv
inc
mov
aas
jmp
addr16
jns
push
inc
stc
mov
lock
sub
xchg
mov
xchg
jge
and
out
rcr
mov
in
cli
frstor
fild
lock
out
dec
loope
outs
cmc
or
int3
shl
jge
sbb
int3
xlat
and
and
test
retfw
mov
(bad)
jmp
jge
cmp
pop
lods
in
ret
pop
out
mov
loopne
push
ss
jp
xor
stc
icebp
jo
jp
dec
and
sbb
hlt
in
cwde
jbe
(bad)
jno
push
jnp
aad
and
push
mov
vpclmulqdq
xchg
push
ins
test
stos
cdq
xchg
fmul
stc
xchg
stos
push
sar
dec
mov
out
jae
shl
popa
nop
and
rcr
test
push
neg
icebp
push
retf
mov
dec
les
aaa
fs
mov
mov
adc
fmul
imul
and
inc
pop
call
dec
sbb
shl
xchg
retf
dec
mov
mov
jmp
mov
xchg
mov
jae
cmp
(bad)
mov
jmp
pop
xor
repz
mov
adc
stc
sub
mov
inc
mov
dec
jmp
and
push
mov
cmps
or
sub
cmps
(bad)
and
mov
cmp
int3
daa
movs
mov
sub
out
dec
inc
xor
mov
lahf
mov
test
imul
push
dec
scas
out
xor
into
imul
pop
push
cs
jge
lds
lods
pop
lds
loop
aas
ret
inc
int
jecxz
scas
jge
sub
test
inc
xchg
shl
pop
jle
xchg
pop
pop
pop
cmp
in
int
mov
call
mov
clc
jmp
adc
adc
mov
xor
ret
xlat
clc
hlt
call
sbb
cmp
xchg
imul
cdq
fidiv
mov
inc
or
test
push
sub
push
xchg
mov
cmp
vmovddup
fsub
lds
mov
jne
xchg
sbb
or
iret
sbb
mov
or
sti
sar
push
sbb
xor
xchg
mov
mov
nop
ret
sar
outs
sub
je
je
out
sbb
mov
jmp
test
pop
push
sbb
icebp
leave
aad
or
lods
enter
cmp
and
fisttp
inc
push
test
mov
push
rcr
adc
fdivr
repnz
push
es
fisttp
mov
test
cmp
clc
pop
push
lahf
(bad)
sub
adc
xlat
sub
xchg
in
cmp
int3
leave
jmp
add
jge
mov
(bad)
ror
es
sub
xor
lahf
xchg
sub
cwde
fistp
or
mov
lds
movs
and
loopne
lea
jmp
mov
inc
xor
ret
ret
pop
or
outs
leave
popa
test
inc
xchg
outs
sub
je
xchg
inc
stos
sbb
icebp
xlat
jo
mov
dec
cs
and
inc
arpl
inc
push
adc
or
push
lods
repz
std
imul
aad
dec
mov
xchg
dec
inc
jge
mov
retf
mov
mov
lds
push
fwait
pop
ds
xchg
or
loope
add
dec
xor
sub
repnz
inc
cmp
mov
xchg
das
adc
add
in
ins
inc
in
dec
out
rcr
les
mov
stos
or
popf
xchg
shl
inc
cmp
mov
in
dec
pop
daa
test
out
adc
mov
ficom
adc
lds
call
mov
cdq
iret
jp
sub
arpl
mov
jb
nop
or
shr
mov
push
cmp
sti
xor
pusha
mov
dec
fld
xor
test
hlt
xchg
shl
mov
int
jbe
mov
xchg
in
or
repnz
das
push
popa
push
fst
clc
mov
cmps
icebp
push
xlat
mov
mov
mov
mov
cmps
in
cmp
es
mov
fcmovbe
mov
cmps
cmp
inc
popf
sbb
mov
cld
mov
adc
cmp
loopne
push
ficomp
fisub
jne
or
or
pop
rcr
and
fcomi
inc
out
dec
pop
ds
gs
ret
and
mov
ins
stos
adc
arpl
xchg
cmps
(bad)
fldcw
mov
fild
push
sbb
push
popa
sub
mov
mov
mov
push
sti
cdq
sbb
hlt
mov
jnp
mov
dec
adc
mov
lahf
and
ins
lods
fcom
outs
rcr
push
dec
add
rol
and
and
es
mov
repnz
ror
rcl
dec
std
lods
jecxz
fld
push
cli
pop
call
xchg
lahf
enter
mov
mov
in
mov
test
rcr
sbb
dec
or
(bad)
sub
pop
(bad)
mov
dec
mov
mov
dec
add
push
gs
jno
dec
repz
cmp
and
xchg
dec
mov
dec
das
adc
pop
shl
cmp
shl
outs
push
push
xchg
mov
pop
in
sub
mov
int
add
cld
movs
mov
inc
test
adc
out
push
push
pop
push
loop
cmp
push
mov
and
jno
push
clc
sbb
pop
das
xor
pop
jl
cvttps2pi
call
shr
pusha
sbb
push
xchg
cmp
test
mov
mov
(bad)
push
push
shl
inc
loope
push
xchg
cmp
add
test
add
mov
jmp
push
push
(bad)
icebp
and
test
inc
jecxz
aam
rol
fisub
mov
gs
xlat
repz
cld
mov
dec
pusha
dec
sbb
fiadd
inc
sbb
push
sbb
pop
lds
(bad)
push
int
xchg
in
and
jns
jns
push
into
mov
add
mov
jno
pop
fist
rol
xchg
scas
icebp
stc
or
xchg
add
aaa
pusha
retf
inc
inc
adc
pusha
adc
pop
lods
leave
xchg
imul
out
mov
jns
aad
scas
imul
cmp
fsub
mov
jno
fcmovb
jle
(bad)
dec
test
mov
int3
lahf
ins
jl
cs
movs
push
aaa
outs
ins
sub
movs
mov
lock
dec
and
cmp
lods
xchg
pop
dec
test
mov
lds
add
cmps
imul
sub
fstp
xchg
into
test
ds
cmp
outs
sub
inc
add
gs
jo
enter
xor
hlt
je
pop
in
fisttp
add
cmp
retf
or
sbb
daa
fwait
adc
sub
and
sub
push
repnz
(bad)
xchg
int3
mov
bound
pop
out
jl
dec
repnz
cmps
push
rol
mov
adc
mov
repnz
in
loop
mov
ret
xchg
add
mov
xchg
aam
xchg
push
fnsave
jbe
(bad)
(bad)
jb
or
into
scas
sbb
and
cmp
or
aad
push
dec
test
aaa
(bad)
shl
adc
jns
sub
push
mov
in
jmp
in
arpl
arpl
xchg
inc
bound
xor
jle
mov
ds
bound
lods
and
stos
cmps
pop
mov
sub
sub
(bad)
test
(bad)
enter
repnz
(bad)
dec
in
pop
cmp
test
sub
retf
inc
dec
xchg
nop
jne
and
in
cli
rcr
les
not
and
dec
inc
inc
mov
gs
cdq
mov
pop
sub
and
lods
sub
add
mov
(bad)
xchg
and
push
jnp
jmp
push
xchg
jmp
pop
mov
jns
test
push
adc
arpl
sbb
jg
xchg
sub
std
xor
and
stos
loopne
sbb
jo
xchg
and
adc
xchg
xor
fsubr
leave
adc
pushf
das
inc
push
jle
sub
movs
dec
inc
call
aam
cmp
mov
mov
xlat
loope
js
frstor
xlat
retf
mov
in
and
mov
or
mov
(bad)
in
int3
jle
pusha
sbb
pop
jns
out
pop
adc
ror
addr16
mov
or
rol
jno
xor
pop
fiadd
pop
and
xchg
sbb
mov
mov
xchg
mov
mov
test
inc
push
mov
(bad)
sub
in
imul
fisubr
fst
sub
in
rcl
xchg
(bad)
out
loope
cmc
sbb
mov
or
cmp
push
jo
bound
out
cld
adc
cmps
push
push
xchg
(bad)
xchg
gs
loope
push
test
sub
sub
xchg
jmp
xchg
jnp
icebp
dec
pop
xor
add
xchg
out
mov
in
mov
and
mov
xor
fdivr
mov
pop
and
mov
call
cmp
push
in
mov
test
mov
cmp
cld
movs
xor
and
xchg
xchg
mov
stc
lods
test
add
out
xor
das
sbb
loop
sub
mov
jl
pop
push
out
and
jno
cli
lods
int3
sahf
and
push
into
sbb
xor
cmp
movs
cmp
add
mov
call
int
sub
(bad)
cmp
add
lahf
scas
mov
cmps
jle
dec
stc
test
outs
out
mov
pusha
fisubr
fwait
nop
xor
pushf
scas
push
add
pop
adc
nop
in
mov
add
fimul
push
adc
mov
cmp
adc
(bad)
jge
ds
or
pop
dec
sbb
jnp
jae
sub
in
imul
jp
popa
mov
add
xchg
mov
inc
in
mov
jae
pop
rol
xlat
xor
(bad)
test
mov
pop
in
mov
lods
and
and
rol
in
xlat
mov
cmp
scas
push
out
fs
ss
pop
int3
mov
(bad)
and
nop
mov
sbb
or
mov
adc
mov
pop
xchg
jbe
add
cmps
inc
icebp
and
sub
cmps
add
dec
loope
jns
mov
xchg
ins
adc
or
in
ret
mov
jnp
push
inc
stos
cmc
pop
mov
imul
jg
out
or
in
xchg
out
or
push
jmp
in
inc
mov
xor
pop
loope
add
in
sub
ds
out
mov
sahf
sbb
adc
daa
pusha
adc
inc
ficom
retf
ret
add
sahf
and
test
sub
out
inc
addr16
fwait
daa
mov
sti
xor
pop
dec
cmp
inc
sub
pop
cmp
test
pusha
dec
xor
ins
push
dec
cmps
ds
inc
add
daa
ins
repz
iret
pop
push
mov
mov
sub
cmc
xchg
jp
dec
jmp
dec
jne
cmp
enter
into
cmp
into
or
stos
lods
add
cld
stos
xchg
sub
lds
(bad)
xchg
push
dec
or
sbb
adc
inc
mov
or
movs
enter
xor
mov
mov
in
cmp
cmps
pop
leave
pusha
popa
enter
push
and
int3
loope
jmp
mov
jmp
sub
iret
cdq
xor
icebp
jp
in
cmp
sbb
gs
hlt
loopne
data16
sub
lea
jno
dec
mov
mov
xchg
iret
bound
cmp
xor
add
fild
outs
pop
dec
test
dec
gs
jno
stos
fnstenv
adc
sbb
pop
ror
dec
or
bound
push
ja
das
les
push
mov
test
jmp
adc
in
pop
test
in
call
sub
(bad)
or
pop
ror
cs
icebp
fwait
aad
xlat
out
cs
add
test
push
pop
pop
cmc
jo
jmp
retf
fld
or
xor
sub
ret
(bad)
cld
adc
int3
cwde
xor
mov
fst
xchg
es
mov
fadd
test
out
add
dec
xor
add
in
or
cmp
mov
aad
fidiv
or
stc
fbstp
xor
in
icebp
and
push
and
mov
inc
fnop
cmp
adc
sbb
ds
xchg
xor
mov
adc
add
mov
sub
int3
jmp
in
mov
mov
dec
loop
aam
sub
sahf
fidiv
jmp
inc
pop
sub
lock
sub
icebp
xor
(bad)
push
push
cmp
addr16
int3
imul
sbb
lods
jb
push
retf
fst
mov
mov
sbb
lods
movs
inc
or
and
push
and
les
and
cdq
sbb
int
xchg
pushf
and
add
imul
stos
shl
push
(bad)
fadd
add
push
xor
shr
ds
xchg
repnz
add
cmp
inc
out
push
and
push
scas
sbb
aaa
aam
cmp
call
sub
pop
jl
inc
mov
adc
aam
scas
loopne
jmp
scas
adc
test
adc
mov
inc
hlt
repz
sbb
xor
mov
add
jl
iret
pop
gs
jnp
fsubr
shr
popa
and
and
push
add
loope
fst
jmp
mov
mov
pop
mov
out
sub
push
pop
je
sbb
cs
or
dec
mov
xchg
cmp
mov
mov
das
mov
bound
lods
and
sub
sahf
ffreep
or
fistp
xchg
sbb
(bad)
lock
lods
shl
push
adc
fdiv
adc
or
adc
and
(bad)
mov
call
inc
leave
or
jle
adc
mov
xor
mov
fmul
mov
sub
cmp
lea
cmp
test
adc
inc
sub
dec
or
sbb
dec
push
retf
pop
test
lock
and
popf
inc
inc
sub
ret
(bad)
and
pop
fild
shl
cmps
fdiv
mov
mov
mov
sti
or
xchg
ins
jbe
out
inc
fwait
jno
lock
xlat
push
mov
movs
loop
pop
sbb
fwait
add
mov
inc
dec
xlat
repz
fsubr
push
or
call
leave
leave
cdq
popf
inc
pop
loopne
adc
pop
cli
repz
push
adc
out
es
nop
cmp
jb
aas
inc
xor
push
and
mov
loop
cmc
pushf
inc
sub
xor
jne
sub
cdq
popf
fwait
aad
push
fild
or
add
in
mov
add
and
and
ja
push
jno
lods
mov
sub
jmp
jnp
push
adc
pusha
int3
xor
sbb
outs
ins
addr16
jle
adc
popa
pop
mov
adc
sub
scas
or
leave
dec
and
inc
andnps
or
push
mov
dec
(bad)
lock
int
xor
out
fist
push
movs
rcr
movs
mov
mov
jmp
sbb
lahf
inc
lods
out
fsub
push
bound
iret
call
jno
pop
add
jl
sbb
fst
jbe
ds
fcmove
jecxz
push
mov
lock
sbb
pushf
dec
xor
in
xor
xor
ja
sbb
iret
test
je
jl
or
sahf
inc
adc
fcomp
jge
inc
std
ffree
sub
cmp
mov
idiv
in
sbb
xor
or
xchg
jecxz
mov
add
inc
aam
int3
imul
xchg
xlat
(bad)
jge
dec
call
dec
mov
mov
imul
sbb
out
nop
xlat
cmps
out
jmp
out
jbe
and
(bad)
sti
stos
adc
test
lahf
out
fdiv
mov
dec
repnz
mov
xchg
add
xchg
enter
mov
add
mov
mov
xor
sbb
mov
scas
adc
stc
mov
jns
mov
shl
mov
push
xor
xchg
stos
rol
inc
sub
outs
add
leave
fisttp
cdq
fcomp
pushf
cld
sbb
fdivr
jle
mov
fistp
fs
jl
dec
sub
push
push
stos
shl
loopne
fdiv
fsub
pop
jmp
in
test
jle
or
dec
sub
xchg
pop
push
int
xor
jecxz
mov
pop
mov
xchg
test
out
and
push
pop
fst
sahf
scas
sub
nop
add
mov
cld
rol
lock
imul
dec
jns
aas
js
les
adc
lahf
ret
adc
ret
daa
adc
fs
jnp
int3
clc
mov
xchg
mov
cmp
stc
sti
xor
into
int
pop
lock
adc
mov
scas
cmp
test
out
push
fadd
sub
inc
out
aam
sbb
(bad)
call
jb
stos
jmp
fs
mov
in
outs
cmp
sub
jecxz
icebp
(bad)
push
lock
jb
fist
in
div
sub
adc
xchg
jo
and
ror
ja
loopne
jnp
fdivr
cdq
mov
or
push
adc
push
arpl
push
call
cld
vpunpckhqdq
pop
cli
mov
xchg
xor
inc
popf
pushf
aaa
cld
(bad)
stos
shr
das
fmul
adc
ret
outs
enter
sub
push
mov
sbb
test
lds
jns
das
aam
leave
mov
loop
(bad)
xor
mov
jbe
mov
push
daa
xchg
inc
cmp
ror
pop
sub
call
sub
xchg
xlat
aad
sub
leave
sbb
notrack
test
pushf
retf
scas
(bad)
out
movs
sbb
test
sub
push
out
mov
and
int
loop
cmp
cmp
dec
jl
outs
jle
ret
imul
mov
lock
(bad)
sub
outs
push
pop
mov
jecxz
dec
sub
sbb
jne
or
jo
sahf
pop
leave
xchg
xor
mov
into
xchg
(bad)
clc
push
sub
dec
jmp
(bad)
mov
nop
mov
adc
fldenv
leave
imul
scas
mov
dec
hlt
dec
cmp
out
add
gs
hlt
out
xchg
mov
jp
dec
das
es
movs
sbb
shl
jae
bound
lods
movs
lock
xor
mov
lods
cmp
mov
mov
xlat
iret
icebp
sub
aas
and
inc
aaa
shl
jmp
push
sub
xor
xor
sbb
cmp
adc
into
jle
push
das
stos
popf
cmp
add
aaa
jns
or
mov
sub
add
repz
and
mov
xor
aas
sub
and
jbe
or
sub
fcmovnu
(bad)
leave
pop
xor
mov
inc
add
or
xchg
arpl
enter
pop
out
push
retf
or
lds
out
jae
out
out
mov
push
adc
jnp
aaa
sahf
ins
xor
cs
mov
xchg
push
sahf
jge
ins
daa
mov
icebp
hlt
pop
aaa
dec
retf
stos
pop
xchg
inc
cwde
stos
and
imul
sbb
or
stos
clc
fldcw
pop
data16
add
jnp
jl
sub
jne
(bad)
cld
and
ins
cwde
mov
or
fucomi
nop
mov
dec
add
push
add
ss
cmp
out
call
sbb
mov
out
mov
retf
push
cs
and
cmp
sbb
sbb
out
sbb
xchg
addr16
xchg
pop
stos
pushf
stos
xchg
push
fwait
in
pushf
shl
add
mov
js
dec
mov
xor
outs
in
(bad)
cmc
sbb
je
adc
sbb
push
test
sahf
xor
ss
stc
mov
jnp
clc
(bad)
xchg
aam
iret
fist
dec
es
inc
aaa
aas
push
or
in
pop
sar
les
out
add
mov
mov
xor
sbb
mov
or
mov
das
xor
aam
nop
jns
pop
add
pusha
sar
scas
sub
sahf
leave
mov
sbb
push
pop
cmps
aaa
jbe
es
xchg
out
jecxz
movs
mov
fadd
cmp
jg
dec
mov
mov
cmp
xchg
mov
mov
push
lahf
jmp
or
adc
and
xchg
mov
ret
fwait
push
stc
mov
pop
cmp
mov
add
jl
fstp
push
jl
push
sti
cs
pop
gs
scas
mov
xchg
dec
adc
push
scas
xor
jp
jg
push
dec
stc
(bad)
icebp
retf
mov
dec
adc
xchg
jbe
popf
xchg
mov
stos
sbb
jne
mov
mov
mov
dec
nop
push
jg
jmp
dec
cld
xchg
jno
or
jge
xor
cmp
rcl
adc
ins
xchg
adc
cmps
inc
cmp
ffree
dec
push
movs
cli
(bad)
ficomp
ds
(bad)
fst
adc
mov
and
das
xor
inc
in
sbb
dec
or
mov
and
mov
imul
sub
push
cmp
inc
mov
test
stos
push
pop
mov
std
dec
cmc
lods
test
outs
xor
dec
or
adc
sbb
lods
(bad)
fiadd
in
pop
into
sub
lock
stos
popf
sbb
xor
jb
add
imul
lea
int3
loopne
and
xor
imul
ret
lds
fldenv
sub
loop
inc
dec
push
scas
inc
push
jno
popf
jp
in
jge
es
(bad)
xor
nop
fisub
jns
inc
or
push
cdq
lahf
cwde
je
sbb
xor
pop
clc
xor
dec
test
mov
je
ds
dec
ja
or
pop
mov
std
sbb
push
pushf
xchg
and
hlt
mov
add
cmps
xchg
push
cmp
adc
movs
pop
mov
pop
mov
xor
and
and
movs
mov
nop
sahf
add
jecxz
arpl
or
stos
mov
dec
popf
cmp
xor
mov
fwait
xchg
jno
pop
out
mov
push
and
cdq
cmp
retf
cmp
add
push
xor
imul
rol
add
xchg
sub
or
xor
xchg
xchg
ins
ss
xor
mov
dec
or
xchg
out
dec
dec
(bad)
jmp
loope
push
push
das
shl
jmp
pop
mov
ret
dec
data16
xlat
(bad)
jl
jo
mov
fcomp
xchg
movs
lea
sbb
push
addr16
in
xlat
and
pop
inc
pop
mov
aam
loope
mov
inc
jae
sub
test
adc
icebp
ds
jo
imul
ins
or
jo
jle
(bad)
xchg
mov
sti
popf
sbb
sub
stos
jb
fwait
test
add
and
jecxz
fbld
inc
mov
push
add
inc
in
adc
fstp
xchg
stc
(bad)
out
xor
idiv
(bad)
(bad)
nop
(bad)
cmc
(bad)
scas
pusha
ds
clc
psraw
in
mov
pop
sbb
mov
dec
pusha
out
fdiv
sub
xor
inc
xor
mov
das
dec
and
inc
xor
mov
mov
push
pop
xchg
jmp
inc
sub
dec
outs
mov
adc
daa
or
mov
scas
mov
repnz
pusha
scas
inc
imul
out
in
mov
mov
dec
out
pop
pop
add
add
test
xlat
push
xchg
dec
int
popf
or
mov
sub
mov
cdq
cmps
sbb
sbb
or
add
stc
mul
jecxz
cmp
aad
cwde
cmp
(bad)
cmc
call
add
cld
repnz
sti
sub
enter
xor
lds
adc
sahf
loopne
pop
push
gs
clc
xchg
iret
stos
pop
add
cmp
add
inc
add
fbld
leave
clc
add
ins
(bad)
jmp
imul
stos
jne
mov
push
pop
jne
test
inc
or
mov
jecxz
add
mov
push
jmp
mov
or
pop
(bad)
mov
rol
mov
sti
fiadd
mov
adc
dec
(bad)
pop
adc
movs
popf
fxch
sub
and
cs
aam
mov
dec
out
push
xor
mov
dec
out
mov
ss
jmp
ret
fs
xor
(bad)
out
arpl
sbb
mov
mov
and
imul
sub
xchg
xor
in
std
cmc
and
js
(bad)
pop
mov
mov
mov
sub
mov
sbb
in
fs
enter
mov
pop
mov
adc
xor
jae
and
cwde
inc
sbb
mov
push
mov
nop
jmp
jns
add
cwde
mov
mov
jmp
movs
loop
cmp
push
xor
cmp
aas
mov
mov
add
pop
push
jp
in
push
cs
scas
or
sbb
das
sahf
and
(bad)
pop
xchg
xor
push
psubsw
gs
sub
jmp
das
jmp
arpl
ins
je
jl
xor
push
sub
jne
aam
xor
mov
mov
jg
mov
adc
(bad)
fstp
hlt
jne
dec
dec
pop
inc
sbb
add
sbb
movs
push
inc
push
dec
div
mov
pop
cmp
stos
cmp
push
add
pop
cmp
push
rcl
jnp
retf
jg
ins
lods
mul
ins
adc
daa
cmc
shl
les
lahf
rcr
cmp
mov
add
ins
xor
cmc
les
inc
(bad)
call
imul
aad
mov
or
sahf
pop
add
adc
pushf
mov
push
aas
not
in
or
in
dec
cs
cmp
and
push
fldcw
cs
mul
fsubr
push
add
inc
out
sbb
cmp
inc
cld
xlat
shr
loope
xchg
mov
adc
sbb
cmps
inc
ja
loop
sub
or
cmp
inc
xchg
sar
outs
aas
adc
repnz
push
pusha
sub
xor
lea
jl
fwait
retf
call
imul
adc
adc
shl
xchg
call
xor
sahf
(bad)
arpl
mov
sub
add
jne
fadd
loop
push
inc
jge
rcr
jp
bound
shl
or
leave
adc
mov
push
fidiv
rcl
cmp
cmp
dec
and
xchg
(bad)
cdq
xor
sub
adc
sti
adc
jne
(bad)
jg
fnsave
pop
or
ds
call
or
xor
mov
mov
enter
mov
jno
adc
cmps
inc
xchg
call
fnsetpm(287
mul
retf
dec
(bad)
aam
jmp
push
addps
cmp
xchg
pop
mov
std
call
cmp
in
out
test
inc
xchg
imul
or
and
mov
cmp
test
sbb
sub
sti
pop
cmp
jo
push
cmp
sahf
inc
add
cmp
retf
sbb
js
xchg
xchg
jmp
mov
imul
cmps
or
push
sti
push
stc
int
jbe
cmp
pushf
int3
int
(bad)
je
(bad)
shr
fild
push
cs
sbb
xor
push
repz
stos
mov
mov
cmp
clc
pop
loopne
and
push
out
and
xchg
cmp
xor
pushf
pop
rcr
ja
hlt
pop
es
mov
repz
xchg
das
jl
out
gs
push
call
int3
add
mov
xchg
shl
in
popa
(bad)
fadd
inc
mov
add
mov
repz
setae
xor
pusha
inc
call
fdivr
les
icebp
pop
cli
(bad)
sub
cmp
inc
scas
retf
sub
sub
shr
call
fmul
and
ror
fcmovnb
jae
ins
inc
(bad)
les
aas
into
mov
jmp
mov
cdq
sub
xchg
and
fiadd
mov
inc
not
call
clc
xchg
xor
outs
mov
inc
ins
jno
mov
jb
mov
int
add
mov
lahf
gs
call
adc
xor
jmp
mov
(bad)
xor
mov
mov
sbb
and
in
adc
xor
(bad)
ror
mov
xchg
inc
syscall
pop
pop
pop
cmp
in
xchg
mov
jbe
ins
push
daa
in
fwait
ret
xchg
cmps
dec
pop
sub
dec
sets
rcl
jle
scas
data16
stos
add
pop
push
or
inc
hlt
gs
fmul
push
mov
xchg
xchg
jecxz
push
(bad)
fdiv
sti
dec
pop
in
hlt
scas
aam
stc
(bad)
aaa
jecxz
mov
std
cdq
popa
sbb
inc
adc
push
fwait
mov
enter
inc
cmp
dec
cmp
aaa
mov
xchg
fisttp
inc
mov
mov
mov
pop
mov
mov
sbb
mov
dec
xchg
inc
or
inc
fwait
cs
repz
enter
int
cmp
lea
jmp
xchg
aaa
mov
inc
hlt
fsubr
bound
push
jo
lahf
loop
dec
ficomp
cmp
call
xchg
in
aad
rcr
pop
cdq
adc
sub
out
xchg
pop
in
mov
mov
test
sub
lea
inc
and
push
in
mov
jns
pusha
imul
xor
dec
mov
(bad)
sub
ins
jns
mov
add
adc
movs
push
pop
pop
mov
pop
and
mov
sbb
(bad)
pop
lods
dec
or
pop
sub
adc
(bad)
jmp
inc
data16
sbb
jle
loop
aad
arpl
mov
lods
cmp
std
out
fisttp
fwait
or
(bad)
mov
cmps
jmp
test
sbb
inc
add
in
not
jp
add
push
xor
pop
out
add
sbb
(bad)
imul
mov
das
js
push
jp
fiadd
movs
and
ror
push
jl
stc
xchg
adc
jns
and
xchg
and
xor
dec
cmp
mov
sar
scas
adc
mov
out
sbb
pop
lods
jmp
fisub
jmp
jecxz
repz
sbb
jl
(bad)
dec
xlat
mov
ret
sub
pop
mov
clc
and
das
outs
ss
xchg
and
loop
jns
xchg
cdq
pop
push
mov
fcmove
adc
aam
pop
mov
xchg
fwait
iret
jg
adc
aaa
sub
xor
sbb
jg
dec
mov
pop
mov
into
cs
push
xor
ror
test
add
je
or
xlat
jne
jae
loopne
cdq
sbb
test
xor
jbe
add
ss
stc
(bad)
sbb
push
enter
jne
in
push
(bad)
push
in
cs
ss
pop
adc
push
inc
mov
fistp
lods
les
and
and
test
fwait
scas
in
cmp
dec
jp
jbe
arpl
sub
inc
js
mov
mov
push
fsub
dec
out
xchg
lea
retf
xchg
nop
or
clc
ds
add
mov
or
int3
js
mov
pop
or
rol
jne
(bad)
dec
or
retf
scas
movs
or
pop
loopne
aas
push
lds
or
push
das
stos
jecxz
pop
call
ins
aas
addr16
out
add
popf
adc
inc
mov
ss
mov
mov
stos
add
and
and
cld
jnp
shl
ins
add
adc
(bad)
mov
dec
jg
mov
add
in
stc
sub
fsub
test
sbb
je
add
sbb
adc
in
int
add
(bad)
lahf
popf
cmps
sbb
push
sbb
adc
sub
cs
int3
outs
not
cmps
and
jnp
call
or
or
lods
jg
(bad)
pop
mov
jno
mov
cmps
xlat
pop
or
imul
or
or
out
std
and
dec
test
retf
cmps
mov
sbb
fimul
jbe
cli
je
xchg
jg
enter
fs
cdq
ss
jle
inc
jb
pushf
add
mov
xchg
ret
cmp
push
pusha
dec
dec
sar
nop
add
into
push
sahf
adc
push
push
mov
fimul
pop
xor
and
mov
xchg
inc
mov
and
jbe
xchg
into
sub
and
pop
and
int3
daa
rol
xchg
pop
gs
cmps
cmp
adc
je
xchg
(bad)
sbb
jno
mov
or
cmp
sbb
push
sub
jg
popa
push
in
scas
aad
or
pushf
pop
fxtract
push
mov
lods
pop
sbb
xchg
aad
inc
and
dec
adc
fistp
repz
rol
mov
sbb
inc
js
ja
push
inc
retf
and
fiadd
loope
hlt
push
xchg
mov
pop
loop
push
daa
jecxz
sub
imul
xlat
inc
fimul
pop
ins
popa
jmp
retf
push
sahf
into
shl
push
adc
mov
mov
mov
mov
push
or
je
pop
xlat
stc
cmp
ret
cmp
cmp
xchg
add
jbe
inc
dec
mov
or
or
mov
or
retf
mov
repz
jp
inc
push
jne
data16
call
add
imul
jge
mov
lods
and
movs
fidivr
js
lods
push
(bad)
push
xlat
(bad)
test
popf
(bad)
jl
aas
jns
ja
jle
call
fs
mov
out
inc
cmps
cwde
and
int
and
mov
cmp
retf
aad
cmp
push
xchg
rcr
push
pop
cwde
cld
mov
jg
mov
xchg
jecxz
inc
div
js
cdq
add
test
call
das
inc
xor
imul
scas
add
pop
aam
mov
js
lods
jl
movs
xchg
cmps
ins
dec
cmp
addr16
inc
stos
ds
ins
fisub
stc
ficomp
leave
jne
test
xchg
or
sbb
mov
push
test
clc
call
or
imul
cmp
or
test
pop
clc
mov
inc
mov
sub
push
jmp
add
jg
push
imul
mov
inc
shr
shr
push
(bad)
xor
add
out
and
retf
push
and
lods
or
xchg
outs
xor
push
(bad)
fnsave
cld
jbe
xor
sbb
pop
dec
sub
aas
pop
xchg
movs
dec
test
inc
fcomp
adc
mov
lods
das
adc
in
push
imul
jmp
xchg
jbe
outs
int3
leave
aad
es
xor
pop
and
add
lock
cmp
test
into
lods
xchg
in
mov
adc
inc
es
fisttp
cld
mov
mov
adc
pop
dec
nop
enter
push
fst
pop
mov
add
mov
or
sub
cmp
aam
ins
stos
lock
into
push
stc
retf
ds
mov
cmps
dec
mov
call
les
jae
movs
push
mov
push
int3
les
enter
jmp
das
movs
les
mov
jo
fwait
test
mov
mov
xor
pop
sub
dec
lahf
pop
stos
or
jl
imul
xchg
iret
adc
int
inc
int3
inc
fadd
jmp
add
int3
loope
sub
xchg
cmp
scas
cmc
sub
arpl
sbb
call
(bad)
cmp
and
xchg
stos
jge
mov
sbb
adc
lods
(bad)
cmp
sub
pop
jbe
xchg
sub
cmp
lods
jmp
jno
jns
jb
(bad)
jge
inc
or
movs
mov
sub
add
aas
movs
les
v4fmaddss
repnz
push
fwait
push
add
xor
mov
jmp
gs
push
cwde
mov
xor
mov
add
ret
fcmovb
dec
mov
cmc
pop
fsub
movs
xchg
push
push
stos
sbb
cld
xchg
(bad)
ins
scas
cmc
pop
and
mov
inc
outs
je
outs
push
xor
out
and
stc
dec
stos
fwait
adc
mov
pusha
cwde
mov
mov
test
and
jbe
push
adc
dec
movs
xchg
adc
sub
repz
mov
cmps
sti
dec
jbe
cs
xchg
mov
dec
shr
adc
ja
sub
mov
fnstsw
push
lods
retf
push
and
retf
xor
movs
test
ins
in
adc
mov
adc
mov
pushf
xchg
inc
add
xchg
mov
aas
mov
push
pop
xor
jne
cmp
or
cmp
out
add
cmps
adc
hlt
(bad)
pop
xchg
repz
(bad)
loope
bound
sar
(bad)
dec
mov
sahf
xor
add
and
mul
add
cmp
(bad)
sbb
aam
(bad)
out
sbb
xchg
popf
lods
int
retf
fwait
les
mov
jecxz
adc
clc
iret
out
sbb
sub
pop
add
xor
push
lods
into
(bad)
or
mov
test
adc
retf
mov
inc
inc
dec
mov
loope
and
lock
aas
adc
mov
jmp
(bad)
cmc
adc
inc
sub
mov
mov
add
cdq
fmul
ins
jl
mov
lods
pop
push
xchg
pop
push
cwde
mov
lods
mov
xchg
hlt
in
arpl
test
xchg
clc
jnp
jo
cwde
add
jg
or
sahf
js
test
sti
xchg
jl
xchg
test
push
aam
das
aad
(bad)
test
mov
xor
xchg
mov
mov
ins
icebp
or
retf
aas
retf
pop
dec
dec
repz
mov
xor
out
mov
in
sbb
mov
and
stc
cmp
fs
dec
fmul
movs
xor
jnp
jl
imul
pop
sub
xor
mov
push
call
loope
push
dec
loop
lds
aaa
xchg
cmp
add
sbb
push
adc
(bad)
jle
xor
mov
adc
mov
mov
mov
(bad)
rol
sub
out
cmps
and
sar
shl
mov
sbb
or
fst
xor
adc
imul
repnz
loopne
xlat
adc
cwde
xor
movs
pop
xchg
jp
inc
dec
shr
push
cdq
push
push
cld
mov
stos
xor
inc
lock
fbstp
imul
aad
jp
dec
enter
push
cmp
js
into
xchg
jg
movs
dec
jp
mov
sbb
ret
repnz
jns
sahf
push
(bad)
sub
sub
fnsave
fwait
jbe
mov
fwait
dec
addr16
pusha
ins
shl
call
arpl
js
jecxz
sti
mov
push
mov
dec
popa
es
xchg
les
loop
test
repz
leave
(bad)
mov
ret
int3
adc
and
ret
pop
aad
xchg
pop
ins
cmps
and
dec
push
fstp
and
rcr
int3
xor
fwait
add
cmp
clc
stos
cmp
mov
ss
mov
mov
xchg
aaa
push
push
cmp
shl
and
pop
je
push
pop
aad
pop
ret
js
cmc
mov
test
push
pop
or
movs
push
inc
jo
jl
(bad)
jne
in
inc
stc
and
mov
fs
add
call
xchg
push
push
js
sub
jb
mov
jmp
mov
neg
cmp
sbb
inc
mov
mov
ret
shl
mov
addr16
fistp
push
mov
sub
test
xor
or
inc
ss
clc
jmp
out
int
outs
inc
lahf
xchg
xchg
(bad)
fiadd
pop
dec
mov
ficomp
lds
mov
jl
test
pop
cmp
mov
xor
fadd
adc
adc
mov
dec
mov
call
xlat
pusha
adc
(bad)
dec
sub
int
add
repnz
cld
js
adc
enter
dec
push
cli
jb
push
and
push
xchg
sub
retf
jo
fistp
test
xchg
clc
sar
addr16
loopne
movs
xchg
ins
cmp
(bad)
jecxz
jl
aas
jnp
ins
add
mov
dec
xchg
mov
ins
mov
hlt
jmp
mov
jbe
outs
xchg
test
cmp
xchg
sbb
(bad)
xor
inc
mov
out
mov
(bad)
mov
mov
(bad)
hlt
fnsave
stc
push
mov
inc
stos
or
sahf
jp
(bad)
adc
shr
sbb
and
cdq
jmp
push
int
in
fisubr
clc
push
rol
lahf
sar
fiadd
arpl
jnp
fdiv
xchg
xchg
es
pop
in
inc
lahf
out
les
xor
pop
jl
ror
jnp
(bad)
add
xchg
gs
xor
rcl
ins
sub
out
ror
mov
aas
call
push
add
pop
inc
sbb
mov
les
out
or
pop
or
lds
ret
inc
test
mov
(bad)
cld
hlt
out
(bad)
adc
add
leave
out
in
xchg
shl
cld
(bad)
mov
or
fst
xchg
(bad)
scas
movs
jo
sbb
mov
jp
xor
or
xchg
sub
mov
pop
popf
rol
or
xchg
fbld
jmp
mov
pop
adc
pop
fs
mov
jbe
fstp
jle
xor
xchg
or
lods
mov
pop
rcl
daa
or
dec
sahf
(bad)
mov
addr16
div
sub
aam
or
(bad)
pop
fcom
mov
mov
pop
inc
movs
sbb
lea
into
in
jns
movs
and
movs
sti
movs
test
(bad)
fld
or
out
mov
or
addr16
cmp
xchg
iret
inc
test
xchg
add
hlt
not
jg
xlat
pop
xchg
xchg
jg
jnp
shl
ds
sbb
mov
ins
pop
mov
xor
arpl
test
jbe
mov
test
jmp
pop
test
xor
and
test
jle
call
mul
cwde
xlat
aam
bound
fidiv
dec
push
jno
movs
les
cdq
enter
cmp
cld
mov
push
cmps
aaa
push
pop
mov
cmp
iret
xchg
arpl
dec
pop
xor
or
jge
mov
mov
cmps
std
add
aam
out
cmps
jae
fistp
sub
mov
sub
(bad)
pop
mov
push
out
fisub
adc
cdq
fs
sub
inc
loop
mov
stos
jns
dec
imul
dec
and
mov
or
mov
popa
push
push
xchg
stos
leave
leave
ins
mov
and
adc
nop
es
or
mov
push
pop
addr16
inc
cmps
js
movs
in
push
int3
or
popf
jecxz
push
mov
mov
xor
push
js
and
sub
ficomp
ins
jg
in
popa
dec
sub
inc
arpl
retf
jge
rcl
mov
movs
pop
pop
jmp
fild
jno
jmp
loop
stos
neg
inc
jg
xchg
adc
int
pusha
ret
and
test
arpl
cmp
mov
pop
dec
in
fstp
mov
adc
gs
cmp
mov
mov
xchg
mov
pop
dec
mov
sbb
jl
xchg
es
xor
ret
xchg
mov
leave
push
popf
push
movs
xchg
mov
out
in
lock
cmc
mov
popa
mov
(bad)
dec
ss
in
call
dec
dec
or
adc
movs
sbb
and
cdq
repnz
retf
pop
popa
xchg
loop
or
and
call
mov
ins
nop
add
les
push
and
adc
cmp
out
lods
retf
mov
into
jno
(bad)
neg
iret
iret
iret
out
hlt
(bad)
repz
out
jl
add
mov
int3
inc
movs
iret
xchg
dec
pop
push
out
push
aam
das
sbb
loop
and
mov
aaa
stos
inc
inc
cmp
movs
shl
adc
sub
jl
mov
push
mov
push
cmp
adc
cmp
xchg
adc
adc
mov
stc
xchg
adc
cwde
jo
adc
cwde
jg
pop
cmp
fisub
jo
retf
xchg
cmp
(bad)
sub
sub
daa
cmp
xchg
dec
out
out
and
xchg
jl
adc
push
mov
mov
(bad)
ins
mov
mov
cmp
jmp
push
dec
ss
jmp
and
mov
push
add
mov
push
cmc
push
push
(bad)
mov
fs
mov
jge
clc
cmps
int
mov
sahf
xchg
bound
cwde
in
ins
pop
sti
adc
fild
dec
or
test
sub
push
cli
cmp
dec
call
cwde
cmp
bound
int
sub
sbb
das
add
add
and
mov
or
dec
add
mov
mov
push
mov
sbb
imul
stos
and
bound
jp
xor
leave
int
sbb
fisttp
cld
fisub
push
mov
cdq
mov
jae
shl
loope
retf
clc
mov
retf
dec
mov
xchg
xchg
sbb
(bad)
movs
push
shl
sbb
mov
ret
pop
movs
push
loop
add
test
(bad)
hlt
cmp
loopne
ret
mov
and
pushf
push
or
and
push
pushf
inc
std
sbb
mov
push
stos
hlt
cmp
mov
xchg
sbb
mov
cmp
add
push
jmp
ja
hlt
pop
test
fnstenv
in
out
inc
mov
dec
clc
inc
add
mov
and
push
pop
adc
data16
sahf
pusha
jne
xchg
sbb
xor
inc
js
cmp
mov
or
xchg
mov
and
je
and
xchg
inc
nop
add
(bad)
mov
push
pop
out
jb
stos
cmp
mov
push
fld1
shl
popa
cmps
jmp
(bad)
xchg
cmps
push
sahf
std
rcr
cmp
scas
add
es
push
jmp
mov
xchg
jl
(bad)
sbb
clc
cwde
jmp
mov
mov
pushf
scas
stos
push
test
js
leave
sbb
push
in
bound
sbb
inc
fadd
sbb
in
and
inc
push
pop
push
addr16
jmp
f2xm1
outs
mov
test
sbb
popf
inc
and
call
shl
retf
mov
popa
movs
mov
xchg
xchg
pop
mov
or
mov
mov
aaa
shl
xchg
lock
daa
pushf
aad
adc
ss
in
bswap
sub
data16
xchg
xor
scas
fcom
sub
xchg
