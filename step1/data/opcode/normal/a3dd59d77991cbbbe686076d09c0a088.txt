lock
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
xor
add
add
add
add
add
add
or
add
add
jb
add
jo
or
add
jb
add
jo
or
add
jb
add
jo
or
add
jb
add
jo
or
sub
add
or
sub
add
add
add
add
adc
add
outs
adc
add
add
add
add
adc
add
outs
adc
add
add
jge
add
add
add
xor
mov
add
add
add
jb
add
jo
adc
add
or
outs
adc
push
add
jo
push
add
or
add
jge
add
add
cmp
add
jb
add
jo
push
add
or
add
jge
add
add
and
outs
adc
imul
add
or
add
jge
add
add
pop
add
jge
add
add
jnp
add
add
outs
pop
add
or
jnp
add
add
jge
add
sbb
add
add
add
add
adc
jnp
add
add
xlat
add
jo
sbb
add
add
add
add
sbb
jnp
add
add
outs
sbb
add
add
add
add
outs
sbb
add
jb
add
jo
sbb
add
or
sub
add
add
add
outs
adc
add
add
add
add
outs
adc
add
add
add
jo
adc
add
jge
add
add
jnp
add
add
lea
add
add
jnp
add
add
adc
or
add
jnp
add
add
add
jo
push
add
or
add
imul
jo
sbb
add
add
add
add
mov
add
sbb
add
add
add
add
mov
add
sbb
add
add
add
add
loope
add
sbb
add
add
add
add
add
add
sbb
add
add
add
jo
sbb
add
sub
add
add
jo
or
add
or
jb
add
jo
or
add
jnp
add
add
inc
cdq
add
add
jb
add
jo
sbb
add
jge
add
add
add
add
add
sbb
push
add
or
add
add
jae
add
or
add
add
jnp
add
add
and
add
outs
and
add
adc
sub
adc
outs
and
add
je
add
add
jnp
add
add
outs
and
add
adc
outs
and
add
sub
or
add
add
or
or
adc
outs
and
ficomp
or
jo
outs
add
or
daa
add
or
sub
add
fiadd
jb
add
jo
sub
add
adc
cmp
add
add
add
add
add
xor
jb
add
jo
add
sub
add
or
or
adc
sub
adc
adc
call
add
or
pop
add
add
add
sub
add
adc
adc
jae
add
or
add
or
adc
pop
pop
adc
adc
adc
mov
enter
add
add
fild
es
add
add
pushf
add
add
add
add
add
add
das
add
or
sub
jnp
add
add
jnp
add
add
xor
add
outs
sbb
add
sub
jnp
add
add
jnp
add
add
xor
add
outs
sbb
add
sub
add
add
add
outs
xor
add
add
add
add
adc
jnp
add
add
xlat
add
jo
sbb
add
add
add
add
das
add
or
sub
xor
add
add
add
add
adc
jnp
add
add
outs
xor
add
add
add
add
xor
add
sub
add
or
add
add
add
add
jo
push
add
or
jb
add
jo
sub
add
cmp
sbb
jo
sub
add
sub
xor
add
jnp
add
add
xor
add
sub
add
sub
jnp
add
add
jnp
add
add
xor
add
sub
add
outs
adc
add
add
add
add
xor
add
or
add
sub
add
or
add
fisubr
or
add
or
add
jo
outs
aaa
add
or
add
jo
outs
add
or
cmp
add
jb
add
jo
sub
add
or
fiadd
add
add
add
outs
xor
add
sub
add
add
add
dec
add
add
cmp
add
sbb
add
add
add
adc
add
add
add
add
cmp
add
or
push
outs
cmp
add
push
add
add
add
cmp
add
push
jb
add
jo
jnp
add
add
daa
add
or
add
or
jb
add
jo
jnp
add
add
add
or
add
add
or
inc
add
or
add
or
jb
add
add
or
pop
outs
inc
add
or
push
outs
inc
add
or
jnp
add
add
xor
add
sbb
add
or
push
outs
inc
add
or
outs
inc
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
outs
dec
add
or
add
push
or
add
jae
add
or
add
or
pop
or
add
or
add
push
push
add
push
jae
add
or
add
or
add
add
add
dec
add
or
das
or
add
or
add
aaa
add
or
outs
push
add
or
add
jo
outs
add
or
daa
add
or
sub
add
fiadd
fimul
jnp
add
add
push
add
or
add
add
add
outs
dec
add
or
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
add
add
or
jnp
add
add
cmp
add
or
sub
add
sub
add
add
add
xor
add
or
pop
pop
sub
add
add
add
add
add
jo
push
add
or
jb
add
add
or
sub
add
add
or
sub
jnp
add
add
add
jo
push
add
or
jb
add
add
or
sub
add
add
or
sub
add
add
jo
push
add
or
jb
add
add
or
sub
add
add
or
sub
add
sbb
add
inc
add
add
add
add
jnp
add
add
xor
add
jge
add
add
jnp
add
add
push
add
or
xor
add
jnp
add
add
push
add
or
add
add
add
or
add
or
add
add
jnp
add
add
jnp
add
add
pop
add
or
jnp
add
add
outs
xor
add
add
add
add
xor
add
sub
add
add
add
add
jo
push
add
or
jo
sub
add
sub
sbb
jo
sub
add
sub
xor
add
jnp
add
add
sub
add
sub
jnp
add
add
xor
add
or
push
add
or
add
fisubr
or
add
or
push
add
outs
aaa
add
or
add
jo
outs
add
or
cmp
add
jb
add
jo
sub
add
or
fiadd
add
add
add
outs
xor
add
sub
add
add
add
xchg
add
ret
add
cmp
add
adc
add
xchg
add
add
add
jb
add
add
or
jnp
add
add
cmp
add
or
jnp
add
add
push
add
or
add
add
add
pop
push
pop
sub
add
add
add
add
add
jo
push
add
or
jb
push
add
sub
add
sub
push
add
sub
add
sub
jnp
add
add
add
jo
push
add
or
jb
add
add
or
sub
add
add
or
sub
add
xor
in
add
add
add
add
add
add
pop
add
or
push
add
add
add
cmp
add
push
push
outs
pop
add
or
pop
outs
pop
add
or
pop
add
or
push
add
pop
add
or
jb
pop
add
adc
add
sub
add
or
add
adc
add
or
jnp
add
add
xor
add
sbb
add
or
outs
inc
add
or
outs
inc
add
or
add
add
add
pop
add
or
add
push
outs
pusha
add
or
pop
add
popa
add
or
add
or
add
add
inc
pop
add
add
add
add
inc
add
or
add
or
add
jo
add
daa
add
or
pop
add
add
add
add
inc
add
or
add
or
push
push
outs
arpl
add
adc
or
push
outs
arpl
add
adc
outs
add
or
jle
add
or
pop
push
add
add
add
add
or
or
or
add
or
or
adc
or
add
or
or
pop
adc
sub
add
or
pop
adc
outs
push
jecxz
adc
add
add
or
or
pop
adc
and
add
add
add
outs
dec
add
or
jnp
add
add
outs
dec
add
or
add
push
sldt
push
jae
add
or
add
or
add
push
push
add
push
jae
add
or
add
or
add
add
add
imul
adc
sub
add
or
pop
add
or
add
or
outs
push
add
or
add
jo
or
add
or
daa
add
or
sub
add
fiadd
fimul
jnp
add
add
push
add
or
add
add
add
outs
dec
add
or
add
add
add
add
add
sbb
add
and
add
cmp
add
adc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
je
add
int3
add
add
add
add
add
add
add
push
add
add
add
add
jnp
add
add
push
add
add
add
add
imul
or
cmp
jnp
add
add
push
add
add
ins
add
or
xor
add
add
add
outs
push
add
add
ins
add
or
dec
add
or
add
add
add
outs
dec
add
or
stos
add
add
add
add
jo
push
add
or
jb
push
add
sub
add
sub
pop
add
sub
add
sub
sub
add
xor
add
add
push
add
adc
jnp
add
add
xor
add
or
jnp
add
add
push
add
or
xor
add
add
add
push
add
or
add
add
add
or
add
or
add
add
add
outs
xor
add
push
sub
add
or
add
add
add
add
jo
push
add
or
jb
push
add
sub
add
cmp
add
jo
sub
add
sub
rol
add
sub
add
or
add
or
push
push
jb
pop
add
cmp
add
pop
sub
add
pop
jb
pop
add
sub
add
or
outs
outs
add
or
outs
outs
add
or
(bad)
or
add
or
sub
add
fiadd
fiadd
pop
outs
outs
add
or
add
add
add
add
jo
push
add
or
jo
sub
add
sub
jb
or
jo
sub
add
add
add
add
outs
xor
add
sub
sbb
add
add
cvtps2pd
add
add
mov
cmp
add
add
xor
add
add
add
add
adc
jnp
add
add
xor
add
or
jnp
add
add
push
add
or
xor
add
add
add
push
add
or
add
add
add
or
add
or
add
add
add
outs
xor
add
push
sub
add
or
add
add
add
add
jo
push
add
or
jo
sub
add
sub
sbb
jo
sub
add
sub
rol
add
sub
add
or
add
or
push
push
jb
pop
add
cmp
add
sub
add
pop
outs
jno
add
pop
outs
outs
add
or
(bad)
or
add
or
sub
add
fiadd
fiadd
pop
outs
outs
add
or
add
add
add
add
jo
push
add
or
jo
sub
add
sub
jb
or
jo
sub
add
add
add
add
outs
xor
add
sub
sbb
add
add
cvtps2pd
add
add
xchg
xor
add
jp
sub
add
add
add
or
jnp
add
add
and
add
jb
add
sub
adc
pop
add
or
add
add
adc
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
add
pop
add
add
add
or
jnp
add
add
add
adc
add
add
and
add
add
or
jnp
add
add
add
add
sldt
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
outs
test
add
add
add
add
sbb
add
or
add
or
jnp
add
add
sub
add
mov
add
add
add
add
mov
mov
mov
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
jp
add
sbb
add
add
add
add
sbb
add
outs
lea
add
add
add
add
or
adc
xchg
add
outs
xchg
add
add
add
add
or
jo
mov
add
add
add
add
xor
xor
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
outs
pop
add
add
add
add
outs
nop
add
or
jnp
add
add
inc
pop
xor
add
or
add
or
jnp
add
add
push
or
jo
mov
add
add
add
add
pop
add
add
pop
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
jp
add
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
pop
add
push
jae
add
or
add
or
jnp
add
add
pop
add
add
adc
or
add
or
jnp
add
add
outs
or
jo
mov
add
add
add
add
inc
pop
pop
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
mov
add
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
mov
pop
jae
add
or
add
or
jnp
add
add
sahf
or
jo
mov
add
add
add
add
outs
xchg
add
or
jnp
add
add
fwait
add
add
adc
or
add
or
jnp
add
add
outs
mov
add
add
add
add
outs
xchg
add
or
jnp
add
add
cmp
add
or
add
or
jnp
add
add
mov
mov
add
add
add
add
pop
pop
or
or
add
or
jnp
add
add
outs
mov
add
add
add
add
(bad)
or
jo
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
xchg
add
or
and
add
jae
add
or
add
or
add
add
add
xchg
add
or
and
add
jae
add
or
add
or
add
add
add
call
add
add
push
outs
fwait
add
or
jnp
add
add
call
add
add
push
outs
fwait
add
or
jnp
add
add
outs
test
add
add
add
add
push
jae
add
or
add
or
jnp
add
add
cld
or
jo
mov
add
add
add
add
outs
pushf
add
or
jnp
add
add
popf
add
or
and
add
inc
jae
add
or
add
or
add
add
add
push
add
add
test
mov
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
add
or
jnp
add
add
test
add
add
add
add
outs
test
add
add
add
add
lods
add
add
jae
add
or
add
or
jnp
add
add
and
add
mov
add
add
add
add
mov
mov
mov
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
or
jo
sbb
add
add
add
add
inc
adc
add
jae
add
or
add
or
jnp
add
add
and
add
and
xchg
add
outs
xchg
add
add
add
add
inc
or
jo
mov
add
add
add
add
ja
adc
or
add
or
jnp
add
add
or
add
or
jnp
add
add
pop
or
jo
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
adc
add
jae
add
or
add
or
jnp
add
add
and
add
pop
ins
jae
add
or
add
or
jnp
add
add
outs
or
jo
mov
add
add
add
add
ja
adc
or
add
or
jnp
add
add
outs
mov
add
add
add
add
mov
add
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
adc
add
jae
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
outs
mov
jnp
add
add
dec
pop
xor
xchg
add
outs
xchg
add
add
add
add
cwde
or
jo
mov
add
add
add
add
push
add
add
adc
or
add
or
jnp
add
add
outs
mov
add
add
add
add
sbb
add
outs
lea
add
add
add
add
pop
adc
xchg
add
outs
xchg
add
add
add
add
scas
or
jo
mov
add
add
add
add
xor
xor
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
outs
pop
add
add
add
add
outs
nop
add
or
jnp
add
add
pop
dec
jae
add
or
add
or
jnp
add
add
(bad)
or
jo
mov
add
add
add
add
xchg
add
add
pop
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
or
jo
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
push
add
add
adc
or
add
or
jnp
add
add
fmul
add
mov
add
add
add
add
inc
pop
pop
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
mov
add
sbb
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
jnp
add
add
mov
pop
jae
add
or
add
or
jnp
add
add
dec
add
mov
add
add
add
add
outs
xchg
add
or
jnp
add
add
xchg
add
add
adc
or
add
or
jnp
add
add
outs
mov
add
add
add
add
outs
xchg
add
or
jnp
add
add
inc
pop
sbb
add
or
add
or
jnp
add
add
and
add
mov
add
add
add
add
pop
pop
or
or
add
or
jnp
add
add
outs
mov
add
add
add
add
inc
or
jo
sbb
add
add
add
add
push
add
sbb
add
add
add
add
fimul
add
mov
jnp
add
add
inc
add
movs
add
or
add
or
jnp
add
add
add
add
sbb
add
add
add
add
js
add
mov
jnp
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
outs
test
add
add
add
add
and
xchg
add
outs
xchg
add
add
add
add
mov
add
mov
add
add
add
add
push
add
add
inc
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
cmps
add
or
lea
add
add
pop
push
add
add
add
pop
pop
add
add
add
pop
outs
cmps
add
or
jnp
add
add
and
add
or
add
or
jnp
add
add
enter
outs
mov
add
add
add
add
push
add
add
push
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
enter
outs
sbb
add
add
add
add
loop
add
test
add
add
add
add
cli
add
add
adc
add
or
add
or
jnp
add
add
outs
dec
add
or
jnp
add
add
repnz
jo
test
add
add
add
add
push
pop
adc
add
or
add
or
jnp
add
add
push
or
jo
pop
add
or
and
add
inc
and
add
jae
add
or
stos
add
or
pop
sub
push
add
add
ret
add
add
or
lods
add
or
sub
jnp
add
add
test
add
add
add
or
jnp
add
add
test
add
add
add
or
jnp
add
add
test
add
add
or
jo
add
add
push
sbb
int3
add
add
add
or
add
or
sbb
mov
add
add
jb
or
jo
mov
add
je
add
add
mov
add
add
sub
jb
or
jo
mov
add
add
or
jo
sbb
add
add
inc
add
add
jae
add
or
mov
add
add
add
add
outs
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
outs
mov
add
add
add
add
outs
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
outs
mov
add
add
add
add
mov
add
add
sub
sub
mov
or
add
add
mov
add
add
mov
mov
sub
add
add
sub
push
rol
add
sub
add
sub
and
push
add
ret
add
or
adc
add
xor
add
or
add
jle
add
add
sub
add
or
jb
or
jo
add
jae
add
outs
lds
add
jae
add
or
push
and
add
add
add
sbb
add
add
push
add
sub
add
xor
add
add
or
add
sub
add
push
jb
or
add
add
mov
je
add
add
adc
add
sbb
add
or
add
sub
add
push
jb
or
add
add
mov
je
add
add
add
add
sub
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
pop
ret
aam
dec
in
and
add
add
add
add
add
je
popa
add
popa
add
add
add
ja
outs
add
add
add
add
je
popa
add
popa
add
add
jne
jo
(bad)
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cmp
add
add
or
or
add
or
add
add
or
add
add
ds
retf
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
dec
inc
inc
push
js
in
jge
js
inc
xchg
scas
ret
js
test
into
in
fwait
mov
xor
int
xor
popa
mov
(bad)
idiv
add
fs
or
or
adc
adc
add
cmp
cmp
nop
adc
out
leave
clc
in
call
or
xchg
inc
add
jle
stc
pop
xor
jmp
stos
repz
push
push
out
jp
or
cli
popa
shr
add
sub
adc
adc
push
sbb
cmp
call
ja
stos
mov
jle
sar
cmp
cli
outs
xchg
inc
sub
in
push
into
add
jne
fnstsw
aaa
xor
ret
and
xor
cmp
pop
shl
mov
test
or
sub
fdiv
xchg
jmp
sub
sub
sub
dec
int
xchg
(bad)
int3
pop
mov
xchg
enter
sbb
daa
sahf
pop
ret
cmps
inc
cmps
das
pop
xchg
and
adc
aam
lahf
iret
cmp
hlt
push
cmp
call
cmps
cmp
sbb
xor
push
or
sbb
jns
cs
mov
jno
xchg
cmp
add
sahf
and
add
add
dec
sar
mov
and
sub
xor
outs
cmp
dec
retf
retf
cmp
lods
jl
mov
fmul
out
mov
cmp
stc
movs
adc
inc
gs
mov
hlt
jno
leave
mov
lods
ss
in
inc
loopne
stos
ret
xchg
ret
bound
loop
paddw
test
mov
out
fsubr
hlt
sbb
inc
pop
fwait
inc
mov
cmp
add
call
jbe
jge
cdq
mov
or
leave
sbb
pop
cdq
mov
jo
jo
aad
dec
xlat
jns
or
outs
xchg
mov
(bad)
int
jmp
adc
and
test
sub
rcl
or
int
daa
jg
lock
mov
iret
shl
jmp
mov
or
xor
mov
aam
retf
inc
ja
adc
xor
dec
dec
xor
jbe
inc
scas
ins
xchg
jmp
inc
or
ins
mov
data16
jo
fldcw
popf
xchg
loopne
cmp
dec
mov
loop
push
add
add
dec
iret
xchg
adc
repnz
jae
in
fisttp
xchg
into
fnstcw
jns
mov
xchg
xchg
ja
loopne
ficom
adc
mov
dec
push
int3
shl
cld
mov
retf
jb
lea
test
pop
in
mov
adc
sub
pop
and
and
in
fidivr
push
movs
jne
mov
loope
mov
lock
fnstcw
xchg
in
cmp
jg
nop
fiadd
arpl
mov
mov
in
cmp
out
leave
stos
lods
xchg
lods
mov
dec
das
fisub
icebp
cmp
inc
jno
loop
sahf
and
inc
xchg
mov
das
inc
sbb
ss
xor
cdq
or
xor
jae
mov
in
loop
cmp
bound
and
nop
cs
pushf
cmp
jmp
outs
xor
jle
or
lea
(bad)
jmp
pop
(bad)
out
sbb
popa
xchg
lea
dec
lea
mov
push
adc
hlt
out
xchg
jge
pop
hlt
jle
addr16
pop
push
les
jg
sti
xchg
addr16
xor
icebp
xor
in
jmp
sbb
js
mov
cmp
add
add
push
adc
adc
add
mov
cld
stos
cmp
(bad)
repnz
and
cmps
and
in
nop
test
sbb
inc
mov
mov
and
mov
mov
mov
loop
add
cmp
(bad)
enter
pop
pop
adc
icebp
cdq
add
pop
add
loopne
sbb
mov
leave
add
ffreep
enter
arpl
fnstcw
inc
loopne
xchg
cmp
or
inc
mov
adc
sahf
cmp
adc
or
add
jle
add
mov
rcr
idiv
daa
into
sub
pop
pop
sbb
in
xchg
mov
push
add
and
aam
data16
das
lods
xchg
xchg
loop
xchg
push
pop
movs
add
fwait
pop
sub
cmp
mov
mov
fs
mov
xchg
clc
(bad)
fs
mov
or
dec
or
fs
sbb
shr
add
jmp
in
les
icebp
fist
jge
inc
mov
mov
xor
btr
(bad)
cmp
movs
fs
in
fidiv
mov
addr16
cmp
rcl
dec
into
xchg
repnz
pop
test
jl
push
or
mov
out
cs
imul
push
push
inc
add
push
scas
mov
sub
add
adc
imul
xchg
cmp
jno
mov
pop
jmp
add
pop
in
das
inc
cmp
sub
inc
xor
xor
iret
rcr
popa
scas
jae
sbb
push
js
xchg
and
daa
sbb
outs
fld
mov
popa
call
mov
and
sub
or
shl
stos
jb
or
lahf
sbb
sbb
ja
lods
add
mov
push
call
xor
add
xor
out
cmp
pop
or
loop
adc
fcom
xor
xchg
xor
icebp
mov
sbb
xchg
out
ins
sahf
push
xchg
loop
mov
pushf
inc
inc
lahf
xchg
push
fsub
clc
add
xchg
xchg
dec
movs
xchg
call
add
add
mov
cmps
pop
imul
or
retf
or
lock
mov
shl
jae
loop
push
and
or
add
cmps
inc
mov
or
sub
mov
jp
adc
or
push
mov
cmps
js
and
ficomp
and
imul
adc
pop
into
pop
retf
cmps
sbb
mov
jp
adc
cld
jl
inc
push
jl
pop
popa
pusha
lds
fwait
add
or
mov
adc
inc
std
sbb
aam
sub
xor
int
or
or
aaa
shl
mov
loopne
stc
jl
rcr
cmps
sbb
shl
js
movs
mov
sub
pop
pop
pop
ins
push
and
mov
outs
ja
jo
mov
ja
pop
movs
out
adc
test
mov
fwait
in
in
push
pop
iret
mov
jg
cli
dec
fimul
repz
loopne
cld
jg
push
dec
cdq
add
mov
adc
adc
mov
inc
data16
pop
sub
neg
and
adc
vandnps
into
sbb
lods
xchg
rol
dec
adc
add
add
mov
inc
pop
pusha
or
es
sub
repz
push
add
cld
cmp
push
ds
xchg
or
jl
mov
(bad)
loop
mov
mov
jmp
and
(bad)
xchg
adc
push
pop
out
pop
nop
jbe
inc
dec
inc
jle
adc
or
test
fcomp
jo
lods
jae
nop
and
cmp
and
and
sub
in
test
or
mov
inc
xchg
in
(bad)
and
shr
add
adc
popa
add
mov
es
add
loopne
pop
pop
mov
push
ss
add
sub
mov
jno
lds
jnp
dec
add
sbb
sbb
jno
iret
jmp
add
jmp
js
jne
out
adc
rcl
pop
cli
jge
pop
cmp
or
xchg
aas
inc
in
mov
add
sub
sbb
imul
das
loopne
dec
shr
dec
mov
(bad)
dec
(bad)
test
aas
(bad)
push
(bad)
ins
mov
sbb
push
jns
(bad)
repnz
shl
add
mov
add
dec
ret
add
aad
repz
repnz
jno
dec
scas
add
outs
aaa
shl
enter
pop
add
outs
push
lds
push
and
mov
or
stc
inc
ficom
cld
fwait
mov
ror
call
rcr
xchg
mov
int3
add
mov
fild
sbb
std
lahf
neg
pop
jg
jbe
lods
sub
xor
sar
fisub
shr
mov
nop
and
mov
mov
lds
add
add
sar
in
sub
leave
lods
xor
bound
or
mov
imul
sub
sbb
and
repnz
xor
pop
iret
(bad)
jb
adc
sub
add
int3
cmps
mov
fwait
mov
push
xor
add
cwde
mov
or
xchg
jo
mov
mov
cmp
push
das
pop
sub
outs
cmp
cmp
loopne
lods
fsub
and
push
leave
sbb
inc
das
or
sub
inc
push
add
xchg
add
pusha
and
dec
cli
cmp
aas
jg
idiv
lea
xchg
retf
mov
int3
jg
cld
aas
dec
jns
dec
add
in
aad
retf
mov
retf
aam
cdq
gs
icebp
sahf
add
rol
jmp
jmp
cs
dec
xchg
adc
stos
add
pop
retf
ret
push
and
mov
shl
cmp
xor
(bad)
sbb
fistp
idiv
jne
push
inc
adc
std
(bad)
mov
xor
mov
(bad)
mov
fmul
and
dec
int3
mov
xchg
outs
rcr
mov
dec
add
shl
xor
dec
jne
xchg
loopne
pop
or
mov
push
repz
into
and
bound
(bad)
call
out
inc
add
xor
or
test
mov
repz
shr
pop
rcr
lods
adc
fiadd
adc
loope
mov
xchg
cmps
fnstcw
or
mov
xchg
aad
adc
in
add
mov
out
xor
into
inc
inc
scas
hlt
xchg
xchg
jle
xchg
push
push
test
data16
jbe
test
mov
pop
jo
pop
cmp
jmp
add
push
loopne
mov
sar
jg
or
jle
xor
inc
fisubr
add
push
mov
push
mov
ror
jmp
ins
dec
fucomp
mov
sbb
xchg
jb
pushf
ins
adc
imul
leave
cmp
(bad)
int3
fist
and
dec
cdq
retf
sar
cmp
push
mov
loopne
or
jb
pop
inc
div
shl
daa
jg
int
xor
imul
bound
fwait
mov
pop
pop
(bad)
sub
not
inc
sbb
jno
dec
pusha
sbb
pop
push
ins
dec
or
ja
inc
je
mov
push
iret
pop
sbb
es
fldenv
pushf
cld
fs
push
clc
xchg
push
adc
ja
pop
in
sub
pop
sbb
scas
pop
mov
lds
mov
mov
add
pop
ss
lods
cmc
xor
sbb
fdivr
inc
popa
mov
add
cmps
aas
out
(bad)
sbb
loope
push
push
fdivr
fs
fcom
dec
aas
lods
xchg
mov
mov
add
pop
and
(bad)
fldenv
xchg
xchg
add
fcom
sub
(bad)
stos
popf
xor
mov
ror
adc
mov
sar
pop
add
pop
cmp
das
cmps
and
cdq
push
dec
xchg
inc
xlat
inc
pop
ret
lahf
add
dec
xor
sub
dec
adc
into
js
stc
cmps
cmps
aaa
mov
daa
add
arpl
push
add
xchg
jae
xchg
mov
pop
and
bound
jae
cmp
es
arpl
inc
int
call
push
out
rcl
test
popf
test
adc
xor
or
or
out
popf
add
push
xor
cmc
inc
nop
pop
pop
rcl
ror
int3
inc
out
je
ins
call
cmp
jno
cwde
mov
mov
cmps
imul
mov
inc
adc
mov
add
cmp
js
adc
in
push
or
stos
into
sbb
mov
add
add
lock
add
xor
mov
inc
emms
or
nop
or
loopne
add
sti
into
jne
repz
out
push
adc
lds
imul
dec
add
cmp
mov
lods
jb
mov
add
cld
sbb
dec
out
add
fwait
add
add
and
imul
add
or
dec
fcomp
repnz
ret
cs
movs
test
push
xchg
cli
cmps
sbb
arpl
out
lods
jae
shl
sbb
dec
(bad)
mov
ins
inc
pop
push
cld
cwde
gs
(bad)
ins
or
jp
mov
push
push
push
xchg
ds
movs
jae
mov
sub
fisub
mov
inc
mov
inc
cmp
addr16
pop
shr
mov
lds
scas
xchg
xlat
out
jge
lds
mov
pusha
sbb
ja
loopne
sub
add
jno
cmps
loop
inc
push
icebp
lea
popa
xor
nop
call
mov
inc
push
adc
jae
mov
and
jecxz
mov
test
pop
jmp
and
dec
pop
sub
clc
jp
jl
popa
mov
aam
pop
mov
and
pop
fmul
push
sub
inc
jnp
cmp
aaa
push
(bad)
into
pop
rcl
push
mov
or
mov
push
mov
loope
fimul
fwait
jp
retf
cs
popa
es
add
pop
lock
leave
fisub
inc
enter
aaa
mov
cmp
cmps
das
xchg
adc
inc
pop
jp
retf
cmp
add
xor
mov
mov
mov
lds
cmp
out
nop
and
cdq
mov
push
push
and
ins
dec
pop
dec
fnstcw
stos
and
(bad)
js
mov
inc
inc
into
pop
sub
pop
lea
hlt
sbb
and
push
scas
xchg
sub
pop
in
add
add
dec
push
inc
add
mov
xchg
xchg
scas
xchg
fisub
mov
pop
inc
(bad)
retf
ror
add
add
mov
mov
cli
(bad)
not
retf
pusha
pop
(bad)
jbe
add
loop
xchg
cmp
push
cdq
or
push
jl
jbe
jl
ins
rcr
xchg
das
daa
int3
xchg
adc
div
jle
mov
lods
icebp
xchg
add
push
sbb
pop
mov
xchg
mov
xchg
lea
lea
pop
scas
pop
xchg
xor
or
inc
sbb
repz
or
mov
ja
dec
xchg
movs
pop
push
dec
push
cdq
les
mov
add
sub
lds
jecxz
push
out
dec
(bad)
jp
lahf
sub
data16
ja
test
(bad)
mov
cli
bound
jge
clc
jbe
add
jno
(bad)
cli
mov
ret
fdivr
jbe
jl
sub
rol
or
push
sbb
(bad)
(bad)
int3
retf
xchg
sbb
ja
and
in
xor
(bad)
mov
out
push
sbb
sub
xor
pop
pop
inc
dec
pushf
ins
inc
adc
pop
add
jl
mov
push
mov
mov
push
dec
and
addr16
in
outs
add
stc
inc
or
ds
daa
fld
shr
jl
arpl
dec
mov
add
lods
fdiv
inc
test
in
bound
call
in
dec
cdq
xor
jns
(bad)
sub
in
xchg
data16
fsubr
popa
add
mov
sub
or
sbb
call
retf
mov
or
and
test
adc
sbb
loope
jb
jbe
sbb
xor
xchg
ret
aad
add
cwde
test
sub
cmp
mov
movs
jecxz
loope
test
pop
add
loop
xchg
lods
(bad)
mov
or
jbe
nop
call
into
mov
out
clc
sti
mov
push
cmc
fild
push
(bad)
stos
adc
dec
mov
and
and
dec
cmp
test
out
inc
jne
fs
inc
mov
js
pop
cdq
adc
(bad)
jge
or
inc
ficomp
xchg
or
sub
sar
(bad)
fcomip
idiv
xchg
xchg
xchg
das
cmp
fst
push
push
fucomi
ins
and
pop
inc
mov
enter
push
cdq
lods
cmc
or
inc
lahf
loopne
call
cmp
jns
dec
aam
ret
rcr
xor
sub
mov
mov
loop
mov
mov
div
pushf
jmp
stc
stc
sbb
pop
xor
xor
mov
dec
ja
stos
dec
loop
add
aad
dec
test
adc
xchg
lahf
xchg
scas
dec
cmp
pop
lds
in
stos
aaa
push
icebp
jmp
cmp
mov
mov
jmp
jmp
fdivr
dec
mov
mov
and
cs
cs
mov
xchg
in
repz
sti
cmp
fdivr
sbb
iret
ins
mov
aad
fcmovbe
mov
pop
mov
(bad)
mov
mov
mov
fidivr
mov
xchg
sar
js
daa
int
push
call
dec
aam
jns
jge
jns
pop
aaa
jns
mov
hlt
rcl
scas
dec
scas
nop
popa
loop
sbb
(bad)
out
add
cmp
cmp
and
fld
xrelease
sbb
inc
jmp
push
mov
inc
movs
mov
jb
cmps
int
leave
xchg
call
movs
loopne
pushf
frstor
pop
inc
dec
xchg
pop
scas
jns
pop
loopne
out
sub
jns
or
dec
enter
jns
add
jl
inc
mov
rcr
shr
cmp
gs
mov
adc
cmps
into
pop
inc
mov
push
xchg
or
and
lods
inc
add
mov
dec
pop
xchg
out
stos
or
retf
movs
sti
xchg
add
mov
enter
pop
push
scas
retf
outs
pushf
ficom
jg
jmp
dec
js
sub
not
daa
dec
out
stc
(bad)
cld
sbb
xor
repz
mov
stc
and
(bad)
outs
rol
loop
fnstcw
mov
add
fsubr
pop
adc
lea
nop
cs
sub
shl
cmps
dec
enter
push
and
ss
test
add
test
sahf
pop
and
cmp
pop
iret
add
dec
addr16
mov
mov
leave
add
dec
jmp
addr16
jle
mov
add
mov
neg
scas
and
mov
test
inc
mov
mov
fucom
(bad)
mov
ret
fmul
loop
xchg
sub
push
push
push
push
lds
fwait
mov
inc
mov
push
or
mov
sub
stos
xchg
mov
aaa
sbb
cmp
in
adc
jo
jns
test
pop
push
ret
xchg
cmp
es
in
lock
inc
test
push
(bad)
jl
lahf
(bad)
out
cmp
(bad)
pushf
imul
fbld
call
mov
(bad)
xchg
loop
push
das
or
inc
or
xchg
fs
dec
(bad)
loope
(bad)
jmp
into
cmp
das
das
push
ret
aad
fidiv
cs
sti
xor
add
cld
jle
das
jns
pop
xor
dec
jle
into
xchg
lods
std
into
mov
lock
scas
add
call
int
fiadd
imul
aaa
clc
addr16
shl
test
or
pop
and
or
push
sti
daa
inc
and
pop
push
hlt
fs
xchg
jno
mov
dec
sub
pop
pop
push
scas
mov
or
cmp
das
cmp
cli
jnp
mov
dec
jle
push
stc
in
cli
pmulhw
pop
or
call
and
dec
adc
clc
cmp
xchg
iret
daa
pop
in
cmps
stos
mov
add
enter
aas
mov
add
push
add
and
pop
push
xchg
mov
sub
inc
and
cld
mov
addr16
pop
push
push
jbe
pop
jge
dec
push
nop
push
mov
neg
xchg
fnsave
mov
and
movs
inc
movs
mov
rcr
mov
push
jle
(bad)
jl
loopne
les
fsubr
jne
mov
out
fisubr
inc
sub
xchg
ss
dec
mov
cmp
inc
adc
or
pop
in
inc
js
out
cmp
mov
or
cmp
push
je
add
mov
mov
test
mov
pop
jle
adc
sar
imul
(bad)
jne
cmp
pop
lahf
ds
fcom
inc
add
lock
(bad)
outs
mov
out
lods
adc
lahf
fcmovu
fistp
sbb
add
enter
jg
and
inc
add
aas
imul
inc
sti
or
mov
dec
ficom
das
js
(bad)
sbb
nop
jg
jge
sahf
repnz
scas
add
or
pop
aaa
(bad)
sti
test
mov
pop
std
mov
adc
mov
fcmovnbe
iret
and
or
and
in
cld
sub
and
mov
test
jae
add
pop
and
retf
push
pop
push
test
push
cmp
das
cmp
pop
scas
push
punpcklbw
mov
mov
jl
shr
sub
adc
mov
cmc
ins
mov
loopne
mov
ret
neg
add
repnz
(bad)
adc
shr
mov
and
fdivr
lods
adc
adc
scas
push
mov
bnd
int
out
shl
push
sbb
sub
jbe
xchg
mov
mov
inc
sub
sbb
push
mov
push
call
loopne
loopne
jmp
rol
mov
repnz
jle
sbb
xchg
or
iret
push
mov
jle
and
add
shr
mov
inc
lds
les
push
add
cmp
repnz
icebp
jg
mov
in
push
jmp
jns
sbb
iret
call
or
das
out
test
xchg
ja
cmc
xchg
test
mov
add
(bad)
jbe
push
fcmovnbe
and
or
jmp
shl
rcr
and
in
cld
inc
sub
fwait
std
arpl
rcr
xchg
add
push
sbb
pop
mov
jnp
in
imul
pop
out
push
out
add
nop
and
daa
cld
mov
sub
or
inc
cmps
sar
ficomp
ins
out
daa
lahf
test
xchg
pop
adc
in
push
mov
dec
js
jne
(bad)
ins
xchg
in
imul
mov
aas
retf
loop
repnz
mov
aaa
push
cdq
sub
mov
and
loopne
sti
movs
dec
push
inc
dec
std
jl
fwait
jle
ret
dec
ret
mov
retf
lods
pop
pop
push
pop
fwait
ja
jecxz
xchg
sar
dec
mov
(bad)
xchg
cmc
hlt
add
sub
mov
(bad)
jl
rol
repnz
fisubr
nop
scas
jp
aam
add
dec
dec
add
pop
add
popf
xor
js
add
and
mov
sub
scas
mov
aam
int
cwde
jle
outs
repnz
out
retf
or
ins
aam
dec
sub
push
aas
jmp
xchg
xor
call
ret
test
or
push
ins
adc
or
shl
addr16
fcomp
sub
popa
add
add
and
inc
cld
mov
fcomp
lahf
cmp
(bad)
lods
test
cld
(bad)
cmc
jg
mov
add
ja
test
push
sbb
rol
xchg
rol
jge
fwait
clc
mov
mov
sbb
test
(bad)
(bad)
nop
fdivr
stc
and
xor
das
stc
es
in
pop
sti
ret
jle
push
add
fwait
add
sbb
sbb
xchg
mov
dec
sti
mov
call
mov
xor
push
std
mov
(bad)
(bad)
xor
sti
enter
fcmovu
(bad)
call
add
cmp
scas
jl
sbb
sbb
sbb
add
or
call
ins
pop
sti
jl
lahf
(bad)
out
lods
add
stc
movs
mov
pop
pusha
aas
fcomp
imul
(bad)
fisubr
mov
dec
mov
add
rol
rol
or
retf
push
sub
scas
bound
pop
mov
xlat
adc
daa
aas
jae
sbb
in
test
aas
ss
ja
cmp
xor
mov
sub
push
mov
std
fs
jb
cdq
pushf
les
xor
div
jle
ret
neg
scas
push
add
xchg
pslld
xor
lahf
in
mov
jle
jg
jnp
sbb
(bad)
arpl
mov
add
es
scas
add
iret
or
in
(bad)
out
out
jmp
jg
(bad)
sar
mov
daa
(bad)
cli
jg
out
aam
call
xor
dec
or
push
xchg
shl
mov
adc
clc
xchg
add
xor
sub
dec
sbb
(bad)
icebp
cmps
sti
(bad)
(bad)
ins
lahf
iret
loope
mov
rol
push
cmp
psadbw
psubw
jb
call
pop
lea
js
add
xor
jmp
add
rcl
add
pop
add
das
sub
push
dec
mov
lahf
aaa
xor
iret
dec
xlat
and
xlat
cmp
lahf
retf
pop
(bad)
(bad)
cmp
xor
lock
shr
test
push
cmps
movs
push
xchg
test
jmp
or
dec
sub
div
fnstcw
sub
xor
jl
pop
repnz
(bad)
(bad)
mul
in
dec
retf
push
push
jle
mov
shl
sti
sub
std
dec
pop
loope
jmp
pop
ss
addr16
xor
outs
pusha
inc
sub
xchg
push
pop
test
in
cmp
pop
stc
lods
cld
fdivr
pop
(bad)
mov
mov
out
fcom
aam
dec
adc
or
sar
repz
or
imul
sbb
add
xchg
inc
and
shr
fmul
xchg
add
out
xor
ret
mov
les
push
pop
mov
fsub
mov
jne
mov
fs
pop
lahf
xchg
cmp
adc
in
stos
int
in
pushf
gs
mov
jecxz
xchg
imul
push
and
pop
int
jge
jge
dec
xor
sti
je
shl
jecxz
data16
repz
clc
mov
fwait
add
cmp
mov
add
inc
and
cmp
lahf
in
jl
fsub
jmp
xor
dec
stc
pop
pop
sub
int
add
ret
test
cli
adc
aam
scas
adc
add
push
sub
adc
xchg
loope
sti
xor
push
out
adc
and
cmps
call
adc
dec
or
retf
(bad)
fs
inc
fwait
es
rcl
or
div
hlt
lds
xchg
(bad)
andps
jns
add
and
imul
imul
mov
inc
retf
and
fs
add
add
xadd
std
ins
xchg
and
fdivr
sub
loopne
cmp
aad
push
or
lock
xchg
xor
jmp
scas
add
lea
jle
loope
stc
das
out
pop
int
mov
sbb
shl
add
mov
or
jbe
xor
aaa
stos
mov
xchg
aaa
push
gs
inc
lods
pop
les
outs
nop/reserved
scas
cmc
sbb
inc
outs
nop
lahf
lea
enter
out
fsubrp
and
call
outs
in
cld
(bad)
jmp
stc
mov
mov
sub
or
arpl
mov
es
sar
fidivr
ja
cs
repnz
test
cmp
mov
xchg
dec
cwde
in
out
jp
js
fisub
aas
(bad)
sbb
or
retf
daa
lds
es
inc
mov
pop
lds
stc
and
push
pop
mov
jg
out
mov
test
jmp
aad
cmp
jo
cmp
mov
mov
in
outs
add
bound
dec
or
(bad)
sbb
jns
scas
dec
call
(bad)
and
cmp
add
bndldx
lahf
mov
aam
and
aam
(bad)
loopne
out
mov
dec
adc
jb
jecxz
dec
dec
pop
cmp
mov
xor
fidiv
sub
mov
addr16
clc
xor
hlt
mov
mov
push
gs
aam
or
out
cmp
xchg
js
xchg
jp
mov
push
xchg
jg
ds
(bad)
aad
ins
xchg
sub
inc
repz
xchg
fwait
and
xchg
pop
cmp
inc
inc
(bad)
je
inc
mov
cli
inc
bound
je
push
jl
cld
ja
fsubr
out
pusha
pop
cli
or
sar
dec
mov
pushf
inc
test
addr16
(bad)
push
(bad)
jge
mov
movs
ds
retf
nop
pop
sub
mov
xor
xor
bound
push
(bad)
xchg
fidiv
and
mov
fidivr
pop
shl
mul
sub
cld
lahf
xchg
push
mov
leave
mov
xor
cmc
or
jp
sahf
jle
mov
pop
scas
cdq
test
addr16
xchg
rcl
dec
jp
in
dec
gs
shl
xor
cmp
(bad)
mov
ret
mov
shl
dec
cmc
and
lahf
in
add
ror
and
in
sbb
or
jno
jge
mov
jno
cmp
inc
addr16
dec
pop
xchg
add
push
xchg
out
clc
push
out
cmp
sbb
pop
cli
add
dec
pop
sub
data16
outs
data16
mov
in
adc
xchg
icebp
dec
xlat
retf
push
cdq
cmp
cmp
imul
cmp
enter
retf
pop
fs
fsub
nop
repz
cmp
jl
add
fbld
jmp
sbb
fisttp
xor
add
bound
hlt
in
and
das
gs
ficom
add
out
in
push
popa
add
xchg
outs
mov
jge
mov
or
xchg
pop
pop
or
imul
repz
jg
cmp
adc
sbb
and
hlt
mov
dec
pop
data16
inc
js
dec
pop
fs
int3
xchg
iret
(bad)
int
lock
gs
call
cld
xchg
mov
fisubr
push
enter
outs
and
xchg
loopne
fimul
add
pop
pop
xchg
xor
lahf
retf
cld
mov
mov
shl
xchg
rcr
std
outs
push
pop
xchg
cmp
stos
out
and
mov
add
add
sti
fcomp
fdivr
fcmovbe
push
ds
popa
or
xor
and
outs
xchg
hlt
lahf
mov
pop
(bad)
push
push
out
dec
sbb
dec
bound
jp
jp
and
push
jno
jmp
imul
adc
mov
add
cmp
adc
es
sub
xor
jge
cmp
dec
xchg
jae
lahf
jg
inc
cmps
cmp
and
rol
mov
fdivr
scas
jle
movs
(bad)
mov
data16
add
xchg
test
add
cmp
daa
aad
les
xchg
xor
cmp
data16
cdq
clc
mov
icebp
test
ins
stos
pop
or
shl
jae
test
cld
fsub
jne
pand
or
movs
push
add
and
or
imul
bound
mov
and
mov
pop
out
adc
mov
xchg
mov
pusha
dec
repnz
pop
loope
call
add
add
pop
aaa
add
fld
rcr
pop
mul
fisub
(bad)
push
into
pop
cmp
in
jnp
aas
pop
nop
jmp
pavgw
add
sti
inc
add
jnp
adc
mov
adc
push
loopne
call
or
mov
sbb
xor
es
lahf
add
jmp
pop
add
cwde
(bad)
icebp
sahf
mov
mov
cwde
shr
lea
sti
iret
pop
imul
lods
or
mov
fdivr
inc
shl
shl
repnz
dec
add
fst
add
add
mov
and
and
cmp
ins
push
xor
out
stos
rol
out
outs
adc
retf
addr16
lds
add
push
rol
cmp
ins
mov
(bad)
out
xor
jmp
mov
sar
mov
and
fsubr
xor
je
cmp
jne
es
xor
shl
push
dec
push
sub
fadd
lock
pop
cmps
mov
xlat
mov
pop
and
lea
mov
loopne
mov
out
or
scas
test
and
push
fwait
jns
fcomp
and
sub
leave
das
stc
mov
fdivr
ja
lahf
push
mov
(bad)
add
jp
or
mov
jb
adc
inc
jmp
int3
add
xor
imul
ror
xlat
int
int
lock
jge
push
movs
std
mov
add
ret
in
jl
jg
or
mov
mov
call
jne
sbb
add
pushaw
inc
ins
jp
xlat
mov
xor
dec
mov
add
mov
iret
ins
iret
stos
xchg
shl
(bad)
shr
xchg
(bad)
cwde
cdq
lock
fcomp
mov
inc
xor
xchg
jecxz
xor
scas
dec
repz
in
fnsave
jge
sahf
xchg
pop
sahf
xchg
clc
mov
mov
or
clc
fcom
jp
jno
jl
in
or
stos
imul
lea
sub
pop
inc
jp
and
xchg
in
das
retf
iret
and
cli
or
pop
sahf
imul
add
stos
push
loope
or
loope
mov
int
pop
sbb
dec
or
dec
out
leave
repnz
cld
mov
jp
cmp
cmp
add
pop
aam
shl
mov
xchg
test
sbb
xchg
push
xlat
dec
inc
dec
mov
movs
mov
movs
mov
lods
pop
mov
inc
scas
cdq
neg
mul
(bad)
out
lahf
xchg
test
jmp
mov
jle
and
push
movs
stc
mov
mov
jg
scas
mov
dec
(bad)
(bad)
repz
pop
cmc
pop
xor
mov
clc
dec
mov
push
mov
sub
and
test
popf
sbb
and
out
js
mov
movs
or
or
stos
pop
in
in
jg
(bad)
xchg
fst
add
cmps
call
add
mov
fwait
sub
mov
in
xlat
enter
mov
xchg
xchg
push
lock
ds
hlt
ins
test
pop
fmul
add
or
inc
mov
adc
out
imul
cs
push
and
push
test
and
mov
inc
push
fdivr
jge
sub
sbb
pusha
mov
jg
adc
jecxz
inc
or
xor
pop
inc
mov
xchg
fdivr
leave
ja
add
xchg
inc
mov
out
fsub
addr16
pop
mov
and
jno
test
js
xchg
aam
inc
inc
push
adc
test
cmp
test
xor
dec
jp
stos
and
and
xchg
dec
pop
push
into
add
inc
in
sahf
pop
xchg
pop
sub
pushf
inc
cli
rcl
dec
dec
push
cmps
and
mov
mov
push
sbb
cld
pop
mov
daa
pop
in
iret
xchg
movs
cmps
fs
cmp
xor
out
and
into
fmul
add
jns
add
(bad)
sub
ins
push
inc
movs
add
addr16
and
loope
pop
sahf
movs
jns
scas
jge
add
lods
loopne
pop
sahf
repnz
in
bnd
imul
push
mov
mov
test
(bad)
in
ficomp
shl
xlat
sub
js
adc
mov
mov
mov
cmp
add
pop
sub
push
mov
push
xor
mov
aad
test
cmp
and
ret
shl
sbb
js
cdq
inc
pop
adc
dec
out
aam
cld
mov
ficom
add
xor
and
loop
enter
std
jmp
aad
retf
sub
loope
mov
push
mov
mov
push
cld
bound
loop
sub
mov
jmp
inc
add
aam
fadd
popf
inc
dec
jno
loopne
(bad)
sbb
cmp
cmp
mov
retf
call
movs
out
popa
mov
mov
lea
mov
lods
adc
(bad)
daa
mov
in
dec
imul
mov
test
das
aas
fist
loopne
add
xchg
ret
les
xor
mov
mov
pushf
adc
adc
mov
in
ffree
dec
xlat
das
retf
leave
test
push
dec
pxor
pop
add
ss
dec
mov
or
sbb
mov
and
push
adc
xchg
or
cmp
cld
js
in
cmp
add
aad
xchg
inc
test
ds
cli
sbb
or
call
mov
pop
inc
in
leave
push
ret
imul
mov
lahf
pushf
clc
xchg
dec
inc
outs
loope
int3
outs
int3
mov
rcr
in
test
xor
inc
adc
daa
xchg
xor
(bad)
mov
sub
pop
adc
push
fadd
xor
adc
stc
sahf
call
lahf
dec
in
movs
and
lock
inc
or
sti
adc
add
sub
cld
mov
es
adc
xchg
(bad)
adc
fldenv
call
cdq
xchg
ficomp
lahf
pop
dec
pusha
aad
push
ror
sar
jmp
neg
stos
adc
mov
aad
loop
jns
fld
stos
mov
and
pusha
dec
pop
xor
rcl
cmps
(bad)
or
pop
clc
outs
mov
in
xchg
dec
repnz
mov
mov
sti
leave
shr
jg
or
xchg
aaa
add
popf
push
ret
inc
cdq
inc
push
inc
out
pushf
aam
push
mov
and
mov
mov
repz
push
iret
addr16
in
pop
fidivr
cmp
ds
retf
cmc
movs
out
or
ret
adc
sub
mul
add
add
ja
ss
sbb
stc
jmp
xor
and
dec
aaa
or
leave
push
pop
pushf
cmc
ret
pop
enter
inc
jg
jge
int3
xor
mov
pop
movs
std
mov
adc
add
mov
mov
fld
stos
stos
xor
pop
loopne
lds
and
mov
into
jecxz
ret
fcmovb
sbb
inc
mov
icebp
pop
push
jle
test
pop
ds
mov
adc
(bad)
loop
mov
cmp
fs
test
mov
add
xor
xor
out
jae
js
jecxz
mov
rol
xor
fidiv
pop
mov
(bad)
xchg
sub
les
sar
push
not
leave
cmp
mov
and
add
or
pop
mov
push
and
call
or
mov
adc
push
in
jb
loop
mov
or
(bad)
out
in
mov
add
lahf
aas
cmp
dec
lock
mov
inc
mov
movs
(bad)
lds
(bad)
loopne
cmp
loope
jmp
or
gs
mov
loopne
mov
or
icebp
sbb
mov
pusha
add
ins
lock
sti
xor
mov
vorps
sub
mov
les
setae
out
jle
loope
cmp
mov
push
push
add
fs
adc
in
je
add
sub
jmp
(bad)
pop
sti
stos
adc
shr
adc
and
pop
push
mov
out
push
mov
lods
rol
stc
pushf
fldcw
pop
pusha
out
sti
mov
cmp
(bad)
cmps
mov
js
cmc
mov
fbstp
adc
arpl
and
mov
pop
add
sbb
jnp
in
aaa
cmp
dec
and
jmp
add
std
and
push
sub
jle
fisub
mov
out
ror
rcl
sar
lahf
xor
or
or
cmp
cwde
gs
in
aaa
sbb
shl
mov
mov
add
clc
enter
clc
mov
in
inc
add
mov
sub
jae
sub
ss
xchg
sbb
das
and
das
xor
(bad)
cmp
retf
sub
iret
xor
xchg
jmp
dec
pushf
sbb
sbb
mov
(bad)
jb
sbb
aaa
mov
add
addr16
leave
cmp
aam
jle
scas
mov
(bad)
jp
xchg
push
loop
mov
(bad)
loop
mov
mov
sub
std
into
and
inc
mov
mov
and
push
add
mov
inc
mov
inc
aad
push
leave
push
mov
cmps
sbb
fidiv
jns
cmc
cli
mov
mov
dec
shl
mov
sbb
dec
ret
and
setns
and
mov
mov
add
vxorps
retf
jb
call
sbb
clc
xchg
iret
push
es
retf
daa
inc
js
add
cwde
dec
jle
test
mov
push
ds
pushf
push
adc
mov
shr
push
adc
test
lods
push
lahf
outs
cmp
xor
mov
ins
lods
cld
(bad)
jle
loopne
push
mov
push
mov
or
imul
call
mov
inc
mov
mov
fs
movs
rcr
imul
or
lds
pop
popfw
clc
sbb
and
jb
movs
out
fild
repz
fbld
ins
jg
fwait
int3
icebp
fist
(bad)
and
pop
inc
jg
lea
test
mov
xor
xchg
nop
das
inc
shr
(bad)
pop
xor
(bad)
sbb
add
out
adc
xor
js
xchg
inc
xor
out
hlt
in
push
jl
inc
push
idiv
ret
gs
fstp
and
mov
pop
mov
adc
bound
ja
rcr
inc
popf
xchg
fistp
sbb
adc
fimul
cli
pop
pop
mov
jbe
xor
rcr
scas
repz
and
lea
dec
pop
jecxz
and
and
xchg
sbb
pushf
mov
xchg
xor
and
jnp
add
(bad)
xchg
mov
xor
mov
imul
ins
xchg
in
jecxz
jnp
clc
sub
cld
popf
(bad)
lock
sbb
lods
xor
loope
sbb
and
sbb
push
add
xchg
cwde
mov
inc
out
fisub
mov
icebp
add
fdivr
leave
push
xor
or
xchg
sub
sub
and
add
sub
cmovnp
inc
pop
js
test
bound
sbb
mov
sub
and
cmp
xchg
xor
test
stos
outs
nop
lods
jb
and
push
scas
outs
test
push
adc
sysenter
ret
ret
aas
push
ja
mov
mov
xchg
js
(bad)
sti
(bad)
fidivr
mov
adc
mov
mov
push
push
xchg
inc
in
mov
push
add
add
sub
cmps
adc
jns
or
mov
cmp
pop
std
daa
enter
mov
hlt
sbb
mov
rcl
and
in
repnz
push
cwde
and
outs
dec
sar
(bad)
(bad)
test
inc
jnp
push
inc
fmul
or
sub
add
sub
rcr
mov
shl
jg
dec
sub
mov
sbb
add
aas
xchg
jle
ret
xor
call
xor
xor
fcomip
add
dec
cmps
std
jg
mov
popf
sbb
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
xor
add
mov
inc
or
add
or
add
add
or
add
add
ds
retf
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
xor
dec
inc
inc
push
js
in
jge
je
(bad)
mov
dec
cld
xchg
not
aas
in
in
das
das
mov
push
fcmovnu
fdivr
rol
sbb
inc
xor
ins
xor
sub
xor
dec
or
cs
push
out
inc
or
xor
sar
mov
stos
sub
lods
mov
addr16
in
outs
xchg
cdq
fldenv
cmp
mov
std
push
hlt
add
and
mov
jecxz
push
inc
mov
mov
inc
repz
xor
inc
arpl
add
add
std
mov
ds
sbb
popa
sub
pop
outs
mov
pop
mov
(bad)
scas
jmp
add
loope
sub
popf
pushf
cs
pop
xchg
xchg
cdq
sub
mov
sub
sti
dec
outs
imul
scas
cld
adc
dec
out
ficom
leave
int3
fild
test
xchg
and
sub
adc
mov
in
or
(bad)
fstp
into
pop
mov
push
ins
xor
or
jmp
sar
or
mov
or
shr
fcmovnb
aad
mov
push
or
cmp
pop
das
pop
xchg
(bad)
mov
cmp
push
pop
rol
inc
jo
add
fstp
popf
or
add
jl
cmp
add
daa
mov
call
add
cmp
xor
outs
aaa
mov
fmul
loopne
mov
xchg
loop
dec
test
mov
repz
mov
and
pusha
scas
push
or
popf
add
cli
mov
jno
dec
stos
mov
clc
mov
push
adc
xchg
repnz
sub
(bad)
mov
aad
dec
sar
or
push
inc
and
ficomp
adc
pop
mov
inc
ss
cmps
pop
ins
jno
xor
mov
jl
rcl
pop
fcmove
loop
jbe
aam
add
jno
mov
jmp
fld
daa
paddsw
rcl
fdivr
inc
lds
cmp
ret
and
mov
in
in
adc
add
ins
and
cmp
out
pop
jbe
pop
pop
push
nop
arpl
fiadd
(bad)
inc
daa
jg
call
push
icebp
jle
xlat
jo
push
sbb
push
repnz
mul
enter
int
cmp
rol
mov
(bad)
pop
add
pop
push
cmp
fimul
add
pusha
repz
leave
pop
and
fld
scas
add
mov
mov
mov
cmp
mov
jp
add
rcr
les
(bad)
push
outs
jmp
hlt
fst
pop
ins
jno
push
sbb
jns
sbb
imul
mov
jb
mov
(bad)
es
ins
pop
mov
out
dec
add
jp
nop
push
inc
dec
stos
push
pop
xchg
stos
mov
movs
aam
lods
xchg
jmp
cmp
pop
sub
sbb
mov
pusha
popf
in
cmp
cmovns
inc
test
mov
dec
dec
inc
xchg
inc
and
cmp
xchg
mov
outs
repnz
pop
or
das
dec
shl
mov
dec
ret
test
sti
jle
clc
dec
hlt
and
fnstcw
xchg
mov
stos
add
xor
or
cmp
xlat
sub
hlt
jecxz
ds
xchg
out
loope
ffreep
and
pop
xchg
sbb
lds
in
fisubr
lahf
sahf
or
pop
and
jne
pusha
jp
retf
jmp
mov
leave
xor
cmp
jbe
lods
sbb
jns
push
sbb
dec
imul
inc
add
add
jge
mov
mov
stos
and
test
and
mov
xor
das
xchg
mov
mov
dec
js
xchg
clc
(bad)
movs
leave
not
and
ds
fimul
add
ins
xchg
in
into
mov
cmp
movs
fs
mov
add
out
jle
xlat
popa
lods
fdiv
push
or
mov
or
cld
adc
lahf
xchg
icebp
xor
mov
dec
scas
mov
data16
hlt
ret
mov
(bad)
adc
dec
and
push
mov
inc
adc
cmp
push
(bad)
je
jno
cli
pop
add
fisttp
lods
inc
jns
push
fldcw
add
in
xchg
pop
pop
sub
add
ins
outs
movs
movs
adc
dec
push
inc
cdq
(bad)
out
dec
ins
dec
mov
or
bound
dec
das
shr
and
push
jbe
out
inc
bound
inc
inc
mov
icebp
lea
dec
pop
pop
stc
push
ret
(bad)
cmps
test
sub
jns
js
push
rcl
cmp
push
das
pop
inc
loope
add
mov
pop
xchg
cmp
enter
pop
pop
bnd
scas
pop
xor
je
pop
dec
and
ja
mov
xchg
nop
mov
outs
ror
fimul
movs
imul
loope
mov
ret
lds
popf
mov
jle
inc
mov
pop
add
mov
mov
push
add
(bad)
iret
adc
scas
mov
and
leave
jg
lods
(bad)
add
mov
push
sbb
mov
sub
dec
cs
mov
scas
ss
adc
cmp
loopne
sbb
lahf
fs
mov
or
inc
repz
retf
dec
cmovae
imul
inc
sar
cld
lds
in
adc
and
adc
fld
pushf
sbb
add
jne
and
add
pusha
add
or
cmp
lock
push
mov
pop
fwait
shl
hlt
pop
pop
push
les
xlat
xor
lahf
ficomp
fsubp
imul
or
call
cmp
out
addr16
lods
out
test
pop
hlt
mov
add
dec
add
cmps
test
cmp
outs
add
adc
add
lahf
fist
sbb
rcl
cmp
xor
mov
sub
mov
mov
sub
push
add
or
adc
add
inc
fs
mov
in
mov
sbb
push
cwde
mov
cmp
or
jmp
mov
in
in
mov
das
jl
outs
pushf
jge
imul
aas
pop
adc
sbb
retf
xor
(bad)
loopne
push
dec
push
test
stc
push
mov
scas
test
(bad)
cmps
(bad)
cmp
pop
fisttp
lahf
dec
ficom
or
pop
and
push
add
dec
xchg
ins
and
stos
sbb
nop
int3
sub
xor
inc
pop
push
adc
sbb
scas
test
mov
pop
jl
xor
xchg
hlt
mov
mov
out
xor
push
in
cmps
lock
push
and
idiv
mov
pop
or
adc
(bad)
cmp
mov
add
sbb
test
jbe
add
out
mov
inc
push
cmp
mov
mov
add
xchg
lock
bound
adc
pushf
and
push
(bad)
loopne
int
rol
movs
(bad)
push
push
push
jne
fild
adc
retf
xor
cwde
psrlq
test
dec
xor
add
pop
rcl
rol
stos
iret
fnstenv
shr
add
add
cmp
add
popf
add
push
jno
dec
adc
add
ja
cmp
add
add
test
(bad)
in
sbb
push
lahf
xrelease
sbb
popf
cmc
add
dec
add
in
push
mov
jmp
cmps
rol
mov
rcl
add
fisttp
adc
std
cmps
test
jo
add
or
xchg
cmp
pop
lahf
push
xor
into
aad
push
sar
and
ins
add
lods
inc
cmc
rcl
xchg
call
add
bound
mov
jae
in
adc
inc
lods
mov
fisub
and
push
sub
cmps
in
add
pop
add
or
test
jg
cmc
push
add
ror
xchg
xchg
push
outs
xchg
push
popa
sub
adc
pop
or
fld
cmp
push
pusha
loopne
lahf
push
cmp
(bad)
jmp
jbe
dec
pop
xor
add
data16
frstor
push
cwde
popa
adc
test
inc
mov
cmp
fimul
js
icebp
enter
pop
pop
shl
das
push
pusha
mov
xor
das
out
pop
push
add
cwde
pop
adc
pop
adc
ror
mov
and
mov
inc
cmp
mov
shl
sbb
adc
or
cmps
retf
ds
jno
dec
jmp
xchg
mov
mov
add
ror
jge
mov
pop
xchg
sbb
int
or
inc
jge
inc
lea
inc
lds
push
push
mov
in
or
jecxz
mov
cmps
mov
xlat
push
push
int3
or
(bad)
icebp
jns
jnp
add
dec
pop
shr
xor
pop
push
loopne
xor
(bad)
mov
imul
jp
add
sti
jbe
jl
sbb
sbb
pop
xchg
mov
stos
nop
pushf
mov
mov
adc
pop
cmp
xor
add
jns
(bad)
xlat
out
(bad)
cdq
sbb
lods
cdq
dec
clc
jg
jb
clc
ins
mov
dec
aas
je
pop
cmps
push
dec
sub
jbe
out
sbb
mov
daa
lahf
scas
mov
dec
cmp
and
mov
mov
pop
jo
sub
test
call
push
mov
jo
inc
rcl
fs
ss
push
sbb
jmp
jnp
sub
test
or
and
inc
stc
jle
fisubr
pop
rcl
fmul
xor
add
adc
push
retf
fadd
cwde
cwde
adc
mov
add
test
pop
fs
inc
cdq
imul
jle
sbb
fisubr
mov
out
pushf
dec
pushf
shr
xor
mov
out
inc
add
xor
ror
pop
scas
cmc
mov
out
and
cmps
push
shr
jge
cmp
pop
fiadd
adc
loope
mov
lahf
xor
shr
lahf
test
push
push
daa
leave
test
pop
mov
xor
daa
cdq
(bad)
outs
xchg
cmc
sahf
rcl
pop
lods
cdq
repnz
ds
mov
test
fiadd
fst
cmps
sbb
sbb
add
jo
fisttp
inc
and
scas
dec
mov
in
xlat
in
add
mov
rcl
std
(bad)
inc
adc
xlat
push
ins
dec
mov
mov
sbb
sub
mov
(bad)
pusha
out
pop
add
xchg
sbb
xor
mov
sahf
dec
cdq
dec
fistp
jns
jns
push
mov
mov
pop
mov
inc
and
mov
out
mov
shl
and
xor
imul
pusha
sbb
(bad)
sub
stos
jmp
xlat
popf
cmp
daa
xor
mov
test
test
add
cmp
and
test
mov
ins
xchg
cmp
sahf
xor
xchg
int3
mov
xchg
jne
shl
fwait
add
sbb
xor
jmp
in
call
cmp
hlt
xor
cmp
icebp
xchg
and
jmp
sub
and
shl
sti
cwde
add
adc
aam
or
outs
or
sub
add
aam
cwde
add
push
fnsave
js
retf
shr
pop
out
mov
gs
cwde
pop
pop
es
cmp
rcr
clc
pop
adc
aad
jmp
xor
sub
and
int
mov
outs
cli
(bad)
and
dec
mov
int
xor
xor
add
or
pop
add
dec
fld
in
cmp
inc
adc
xchg
xor
mov
data16
cmp
xor
inc
aam
lods
cmp
nop
movs
jbe
push
into
add
pop
cwde
push
mov
and
mov
or
sub
jae
push
sub
xor
lea
pop
rol
je
jbe
mov
mov
pop
or
xchg
test
mov
jmp
sbb
dec
clc
ds
sar
inc
mov
add
mov
mov
add
and
add
fmul
add
push
xor
add
jnp
rcr
add
arpl
je
pop
add
add
jle
icebp
push
add
cmc
retf
push
and
add
add
sbb
mov
pop
or
jnp
lock
add
das
add
or
arpl
pop
inc
and
jo
add
push
sub
jp
sbb
shr
or
jae
clc
sbb
das
mov
and
jmp
bound
fwait
pop
dec
pop
ins
pop
cmp
ret
out
pop
inc
sti
test
fiadd
ud0
jge
adc
fucom
or
icebp
repnz
mov
mov
lock
(bad)
rol
and
or
add
xor
push
jae
test
adc
not
sbb
ds
xchg
inc
mov
retf
inc
xchg
cmps
lahf
mov
sbb
push
cdq
mov
dec
pop
mov
adc
mul
test
sahf
data16
xor
jne
int
xlat
mov
or
jno
pop
ret
test
push
sub
pop
imul
das
out
xchg
idiv
ds
ds
mov
adc
punpckhwd
enter
cwde
add
mov
xchg
repnz
xor
inc
cdq
mov
test
sub
mov
pop
xor
push
push
xlat
mov
loope
mov
xor
lods
cs
fsub
clc
pop
aam
gs
aas
and
pop
push
out
jmp
es
imul
mov
and
xchg
shl
xlat
enter
repnz
or
cmp
pop
test
fadd
ret
movs
or
(bad)
ins
fistp
push
outs
jge
pop
ds
mov
or
test
mov
pop
ret
sbb
jns
pop
jmp
mov
cwde
test
(bad)
scas
mov
lds
xor
mov
shl
or
mov
or
push
xor
es
arpl
and
mov
mov
(bad)
push
add
xchg
push
pop
inc
call
in
aad
in
test
mov
loopne
pop
leave
cwde
(bad)
push
test
sbb
pop
popw
mov
pop
(bad)
rol
sub
rcr
iret
push
jl
jge
mov
mov
(bad)
addr16
arpl
scas
xchg
mov
sub
stos
mov
cmps
mov
inc
mov
fild
icebp
(bad)
jb
fdivr
inc
mov
lods
mov
push
sbb
shr
xchg
fild
int3
daa
dec
inc
sub
mov
xor
fsubr
sub
and
adc
mov
lds
push
lods
pop
ja
in
mov
loope
ficomp
outs
call
ret
scas
add
ret
inc
jge
pop
ins
jo
(bad)
push
mov
add
jl
mov
ret
cmp
mov
into
(bad)
rcr
sbb
sub
jns
fisttp
sbb
lods
scas
aas
add
rcr
ret
je
jb
add
dec
push
lahf
mov
or
cli
fdivr
stos
jp
push
mov
xchg
dec
(bad)
dec
xor
aaa
push
pop
into
mov
fld
in
mov
xor
push
leave
xor
fwait
cmc
mov
jmp
popf
cmp
std
add
or
loopne
adc
nop
jmp
xchg
mov
cmps
sbb
add
in
mov
mov
mov
shr
xor
and
lods
cmp
pop
cmp
mov
retf
into
mov
add
movd
or
adc
xchg
popa
(bad)
jb
push
test
out
jmp
push
lods
pop
loopne
cwde
out
pop
cwde
push
sbb
loope
gs
push
mov
nop
lock
inc
fmul
cmp
xlat
out
jo
dec
inc
loope
pushf
sbb
iret
retf
xchg
xchg
jge
movs
mov
add
rol
das
sub
shr
test
inc
lahf
popa
sub
cs
enter
nop
mov
repz
and
test
inc
je
lock
xor
or
(bad)
xlat
retf
fnstenv
inc
mov
and
jmp
pop
out
cmp
cmp
out
es
(bad)
inc
cmps
das
xchg
nop
and
test
(bad)
out
jle
xor
aas
ss
xor
xor
mov
(bad)
add
jmp
imul
(bad)
in
and
push
(bad)
ins
pop
iret
mov
xchg
call
cwde
jnp
push
inc
xchg
xor
pop
cdq
fcomp
push
adc
loop
stos
sbb
(bad)
pop
mov
pop
cdq
pop
call
lods
sub
in
sub
retf
in
lods
repnz
fcomp
jmp
std
pop
fist
adc
scas
mov
imul
and
push
or
jo
mov
(bad)
jae
cmp
idiv
add
adc
mov
mov
cmps
in
push
ss
mov
push
jle
(bad)
mov
mov
push
fst
xor
iret
add
mov
(bad)
sub
push
cmp
cmc
inc
(bad)
stos
dec
xchg
jno
mov
loope
add
xor
cmc
xchg
aas
fdiv
xchg
popa
(bad)
adc
mov
dec
sbb
sti
jl
lahf
imul
sub
movs
lahf
fnsave
rcl
jmp
fs
xchg
or
sti
sbb
add
pushaw
pop
cmp
adc
daa
or
test
aaa
adc
bnd
sbb
int
xchg
lea
push
xor
out
aaa
cmp
out
stc
jg
dec
xchg
fldenv
adc
xlat
adc
or
fcom
mov
add
mov
pop
pop
cmp
cdq
enter
shr
ret
xchg
push
pop
and
mov
addr16
dec
(bad)
mov
gs
bound
gs
shl
adc
add
in
push
scas
leave
outs
ins
ficom
sbb
nop
(bad)
pushf
aas
xchg
daa
mov
xchg
ds
fcomip
(bad)
mov
push
loopne
mov
fdecstp
mov
push
inc
sbb
cmp
mov
test
(bad)
in
sbb
pop
add
fsubr
(bad)
adc
sub
pop
sbb
cmp
mov
or
pop
xchg
xchg
cmp
pop
jp
add
out
pusha
jl
sub
adc
or
test
retf
pop
cmp
out
clc
mov
xchg
std
push
fwait
inc
repnz
cmps
loope
movs
jmp
jns
ins
je
mov
icebp
jle
ret
neg
scas
inc
xchg
or
cmp
adc
cld
cmps
retf
lods
inc
inc
add
mov
idiv
lds
xor
mov
push
mov
ds
ret
mov
pop
gs
enter
addr16
push
or
ficom
pop
sbb
ins
stos
push
mov
pop
push
sbb
arpl
push
jns
mov
pushf
jle
sar
pop
data16
dec
popa
xchg
xor
sahf
xchg
jnp
not
jg
jl
sahf
mov
shl
dec
nop
mov
fnstcw
lahf
ret
out
mov
popa
mov
fidiv
data16
xchg
cld
sub
mov
or
cwde
ds
js
aam
xor
xchg
pop
jne
mov
loopne
xor
sub
cmp
mov
xchg
shl
lods
sti
retf
pop
mov
xchg
daa
frstor
js
cmp
out
dec
leave
fdiv
ins
mov
ds
jecxz
xor
xor
jmp
fwait
lods
add
and
inc
xlat
dec
pop
outs
and
jge
fadd
add
in
mov
lahf
je
mov
push
out
mov
daa
jmp
push
ret
pop
cmp
cmp
bound
dec
sti
cmp
cld
mov
push
jne
retf
pop
xchg
fild
pop
push
ja
jno
lock
nop
out
lods
mov
test
push
inc
lock
cs
dec
ds
call
call
jno
and
imul
shr
popa
sub
sti
xchg
test
cmp
xchg
cmp
popa
not
push
mov
lods
push
jno
xor
push
mov
dec
pop
push
sbb
sub
push
jl
cld
call
retf
out
add
das
push
sti
ss
leave
inc
fstp
mov
push
add
xchg
xor
pop
mov
jl
stc
and
add
std
push
iret
retf
int
inc
add
or
cld
scas
shl
call
sub
test
or
mov
pop
jle
push
pop
xchg
mov
lock
cld
aas
mov
aas
xor
jecxz
add
or
mov
cmps
hlt
in
mov
enter
(bad)
dec
imul
sub
add
and
in
cld
fisttp
call
adc
(bad)
test
and
div
fisub
movs
jl
ins
jne
cld
jo
mov
jp
jle
xor
hlt
sub
add
add
shr
movs
cmps
jge
inc
fmul
jmp
xchg
mov
in
fist
sti
pop
pop
ret
jmp
mov
aam
or
sbb
and
or
repz
test
fincstp
add
shl
fs
push
sub
sub
(bad)
test
mul
cmp
cli
js
cmp
or
je
jo
mov
das
sbb
and
jp
xchg
jp
mov
sbb
ds
jle
sti
mov
(bad)
jns
scas
out
mov
dec
sub
inc
cwde
add
loopne
jle
jmp
scas
adc
or
in
xor
out
push
or
bnd
int
out
loop
dec
repnz
xchg
test
aad
repnz
div
and
loopne
cmps
sbb
dec
loopne
inc
mov
pop
nop/reserved
hlt
mov
mov
mov
imul
jecxz
add
xor
leave
inc
sub
or
lock
dec
daa
stc
and
dec
mov
aaa
add
inc
and
add
fild
xor
imul
lahf
adc
aaa
pop
sbb
jnp
lahf
xchg
sti
xor
jns
or
add
inc
cmps
push
cli
mov
lea
in
inc
inc
mov
mov
and
add
shr
in
sub
inc
lock
add
add
and
(bad)
aas
cmp
pop
outs
dec
adc
in
pop
sti
mov
mov
fmul
sub
and
cmp
mov
std
dec
test
fcmovb
frstor
mov
push
jle
div
dec
lock
add
dec
call
inc
imul
or
sbb
ret
inc
pop
xchg
stc
mov
movs
aad
mov
loopne
outs
outs
imul
neg
fist
loopne
stc
jl
inc
jle
pop
popa
jo
in
jl
jg
arpl
and
(bad)
jb
clc
in
add
loopne
add
stc
mov
jle
jl
cdq
jle
ret
inc
push
imul
loope
(bad)
pop
in
out
out
aaa
imul
cmp
inc
and
adc
in
inc
clc
aaa
sub
and
push
je
push
mov
cs
jae
push
ds
iret
push
push
cmp
outs
repnz
adc
cmovp
call
rcr
adc
add
jb
dec
inc
jbe
cmps
std
sub
jmp
je
mov
mov
daa
mov
(bad)
sbb
sub
pop
scas
add
and
or
sub
jecxz
xlat
jl
jae
sub
inc
out
outs
push
mov
add
or
xchg
inc
pop
add
add
mov
in
iret
inc
outs
outs
sbb
or
outs
pop
adc
loopne
add
popf
pop
and
sti
imul
xchg
pop
ss
cld
imul
nop
mov
dec
xchg
dec
lea
cmps
ss
movs
jo
movs
rcl
clc
cwde
enter
jb
mov
fisubr
jl
jnp
out
add
repnz
pop
lods
cmp
sbb
mov
pop
sub
in
pop
sti
ret
jle
xchg
clc
cwde
pop
sbb
add
fstp
js
test
xor
mov
arpl
(bad)
loopne
or
sti
dec
push
inc
call
adc
or
mov
ret
jp
(bad)
enter
retf
jmp
out
push
mov
add
cmp
lods
call
xchg
jp
in
jne
push
loopne
push
add
clc
push
xor
inc
mov
adc
cmp
test
clc
fwait
inc
jbe
retf
pop
test
pop
mov
pusha
or
mov
cmps
imul
add
or
loope
and
add
lahf
retf
out
pslld
jle
jl
jle
aas
in
pop
sti
pop
jl
mov
(bad)
popa
ins
xchg
mov
pop
add
push
and
xor
dec
push
push
aaa
or
push
cmps
fcomip
pop
jns
imul
mov
jae
test
(bad)
inc
sub
push
arpl
pusha
test
xor
or
adc
pop
repz
lahf
in
jl
jg
cmp
mov
aas
xor
sbb
lds
add
outs
add
stc
cli
mov
xchg
adc
punpcklbw
fcomp
outs
pusha
pop
aaa
sbb
pop
adc
jae
or
movs
push
xor
add
xor
xlat
sti
dec
stc
in
out
mov
gs
int
fwait
out
adc
js
jne
ror
loopne
inc
lock
inc
leave
out
retf
cld
fwait
mov
out
push
add
sahf
push
or
jg
xchg
cld
xchg
outs
repnz
jle
aas
das
out
jp
inc
icebp
sbb
adc
ret
sbb
neg
push
cmp
lock
sti
jg
pop
jcxz
adc
jp
cmp
ror
push
fidivr
push
push
mov
(bad)
aad
scas
hlt
je
jl
xor
xor
push
stc
(bad)
into
xchg
mov
arpl
mov
rcl
mov
sub
nop
retf
xchg
popa
cmps
jmp
jge
jae
add
mov
out
xchg
out
dec
and
jl
sub
ins
lea
sbb
add
pushf
in
(bad)
and
aam
data16
movs
in
or
dec
out
test
mov
xor
mov
xlat
push
sub
mov
sub
mov
in
mov
cmps
sahf
sbb
iret
dec
sbb
mov
jo
or
push
sbb
pop
(bad)
push
in
jae
loopne
jl
fsub
ret
lahf
ss
fimul
js
jle
or
jo
mov
sar
adc
mov
popf
sub
repnz
dec
retf
push
int
jmp
sub
pop
popa
sub
mov
pushf
sbb
sbb
sar
pusha
cwde
sub
ror
gs
aam
aaa
dec
sub
shl
loopne
xor
pop
daa
mov
pop
movs
dec
cmps
xor
adc
stc
and
outs
rcl
shl
push
fld
jle
sbb
test
jbe
xor
daa
mov
mov
xchg
cdq
xchg
icebp
jecxz
pop
add
mov
icebp
or
imul
retf
jmp
daa
dec
dec
xor
sbb
leave
lock
cld
push
sub
fadd
pop
pop
and
(bad)
lahf
jmp
jmp
mov
xchg
es
cli
enter
jne
jnp
hlt
sbb
repnz
test
pop
lahf
lock
jecxz
in
shr
xlat
add
call
and
jge
call
mov
pop
lods
mov
inc
shl
and
call
mov
test
and
sbb
rcl
addr16
cwde
or
push
enter
in
adc
loopne
jmp
int
and
sub
outs
pusha
cmps
mov
daa
aaa
jle
hlt
out
in
in
repnz
sbb
leave
ror
arpl
adc
xchg
movs
or
test
dec
pop
dec
lahf
stos
mov
ret
loopne
gs
inc
cmps
and
jg
ss
repz
aam
inc
bound
hlt
xchg
aas
outs
jnp
mov
out
pusha
pop
inc
mov
add
cld
mov
cmp
into
mov
pop
clc
push
sub
add
dec
sub
mov
imul
and
adc
popf
ja
and
adc
mov
xor
rcr
pop
sbb
inc
cli
jns
and
jne
scas
xor
cwde
adc
ins
dec
ret
lock
mov
and
xor
sbb
hlt
mov
mov
mov
jg
std
sahf
nop
mov
sub
add
jb
inc
adc
jbe
dec
clc
or
out
inc
cmp
add
rcr
retf
and
mov
sahf
das
and
xchg
dec
out
xchg
jno
(bad)
enter
in
movs
xchg
mov
ss
aaa
retf
sbb
pop
pop
cmp
dec
lock
in
leave
pop
pop
cli
retf
jge
pop
aam
bound
fldenv
mov
sbb
and
push
loope
jne
popa
outs
fnstcw
adc
adc
add
lods
xor
pusha
(bad)
ds
ja
mov
aad
inc
cmc
jb
add
sub
mov
mov
mov
pop
sub
cmp
(bad)
cmps
cmc
pop
pop
lea
test
push
push
jnp
push
ins
jae
xor
clc
cdq
sub
lock
pop
mov
jmp
or
in
std
sub
or
and
cli
cmc
push
cmp
sbb
in
jge
js
adc
add
adc
xor
inc
jne
push
fnstcw
sbb
cmc
mov
add
jbe
rcl
aad
fucomip
les
repnz
arpl
cmps
inc
xor
cmp
mov
sbb
imul
cdq
push
sub
mov
out
jecxz
lods
ins
mov
enter
sar
adc
test
cmc
in
sub
push
sbb
or
mov
clc
hlt
add
xor
(bad)
fs
mov
jnp
sbb
pusha
jb
out
mov
add
lods
mov
fld
add
loope
mov
mov
rcl
iret
retf
mov
fist
scas
fcmovnbe
xchg
mov
test
mov
int
mov
lock
sub
inc
cli
dec
add
sahf
mov
pop
stos
cmp
add
fadd
cmp
pop
outs
add
mov
add
fdivr
pop
into
pop
ficom
or
xor
jmp
out
or
imul
repz
aaa
add
jg
xchg
stc
dec
xor
mov
add
sub
dec
retf
nop
rol
add
inc
jae
mov
sti
test
imul
cmp
mov
mov
xor
cmp
aas
xchg
xor
dec
clc
jg
(bad)
push
xor
dec
div
and
mov
addr16
ins
mov
into
scas
call
mov
repnz
call
fst
add
add
pushf
in
fnstenv
dec
xor
stc
xchg
mov
sbb
mov
(bad)
stos
rol
int
retf
lods
or
push
and
push
lahf
push
fwait
mov
hlt
movs
ficom
mov
sar
jnp
cmp
dec
outs
xchg
adc
inc
mov
int3
fistp
lock
hlt
sbb
cli
dec
add
sub
pop
adc
icebp
xchg
inc
dec
add
xlat
add
sub
xchg
jecxz
jle
xchg
pusha
pop
and
lods
pop
(bad)
and
out
add
xor
jno
pusha
popf
icebp
scas
data16
xchg
std
xchg
pop
cmps
cmc
xchg
in
jg
test
adc
test
cdq
sub
mov
mov
or
inc
mul
mov
ror
jg
in
pop
xor
lea
mov
jg
cmp
cmps
mov
out
add
cmp
dec
popf
push
xbegin
test
(bad)
sbb
sbb
and
push
add
cmps
mov
cmp
inc
loopne
retf
mov
fild
adc
dec
fidiv
xchg
aad
add
ds
jbe
loope
mov
int
or
inc
repnz
mov
in
fucomip
sar
repnz
jg
fstp
cmp
xor
cmp
addr16
push
mov
mov
in
adc
xchg
or
imul
xchg
rcl
das
fstp
(bad)
shr
xchg
hlt
mov
mov
fidivr
in
jns
fbld
ins
xchg
es
jnp
push
loop
xor
mov
fsub
xchg
jne
std
fs
dec
pop
cmp
leave
hlt
and
mov
pop
sub
dec
movs
ins
add
mov
add
or
dec
popa
jnp
or
retf
dec
les
dec
ss
mov
mov
pop
popa
fisttp
js
dec
in
add
test
or
cmp
mov
loopne
xor
jle
scas
pop
loope
inc
push
jnp
push
cmps
inc
mov
and
sbb
jno
mov
sbb
adc
mov
push
loopne
jno
cli
dec
lods
mov
mov
inc
aad
xor
enter
je
addr16
clc
mov
repnz
jle
mov
loopne
mov
(bad)
pop
cmp
sbb
or
xchg
adc
(bad)
mov
addr16
imul
je
mov
dec
movs
mov
aam
mov
ud2
jp
or
out
cmp
lahf
cmp
int
add
mov
jge
and
jae
mov
jmp
xchg
lock
jmp
psadbw
add
cmp
nop
push
popa
std
fwait
test
or
pop
cmp
or
xchg
retf
retf
adc
add
jne
sub
lds
imul
sub
shr
push
inc
test
shl
add
sub
(bad)
movs
cmp
and
and
fisubr
je
lock
sti
sar
pop
xchg
mov
pop
xchg
and
add
and
xchg
imul
sbb
lahf
out
lock
xchg
xchg
mov
jae
aad
pop
popa
test
pushf
bound
dec
retf
cmp
sub
test
cmc
xor
call
cmp
push
pop
xchg
cld
cmp
imul
pop
es
popa
push
rol
in
add
mov
jl
xchg
sbb
(bad)
xor
stc
sub
xor
push
adc
add
pop
fbstp
add
or
leave
fnstcw
into
xor
push
(bad)
or
aad
mov
dec
and
mov
mov
xchg
mov
jae
inc
in
push
push
sub
test
sub
fld
adc
cmp
sub
push
pop
adc
dec
mov
inc
test
mov
jb
cs
std
cdq
adc
movs
jl
(bad)
das
sbb
jbe
add
and
add
arpl
imul
or
push
push
pop
sub
jo
cs
sar
jge
mov
jmp
jne
cmp
mov
into
js
xlat
pop
jae
fld
pusha
jg
inc
mov
leave
stos
mov
dec
out
nop
adc
ja
add
popf
addr16
or
loopne
cmp
jmp
leave
mov
pop
arpl
into
shl
adc
hlt
out
add
mov
or
cmp
sbb
fwait
sub
inc
hlt
popf
adc
mul
int3
ret
enter
dec
cmps
out
add
pop
mov
pop
sub
adc
and
xchg
sub
mov
mov
mov
and
or
add
add
inc
popf
rcr
cmps
adc
add
and
cmp
daa
push
pop
nop
mov
dec
not
repnz
pusha
cdq
hlt
dec
ins
xchg
or
test
add
jle
add
cmp
imul
lea
jmp
aas
fist
loopne
add
mov
or
loop
call
adc
adc
ffree
mov
cs
xchg
test
dec
pxor
out
lods
adc
(bad)
mov
call
push
je
ret
hlt
ffree
in
ins
(bad)
(bad)
fucomi
add
add
push
jb
fs
or
aam
idiv
push
or
pusha
sub
pusha
xchg
add
fld
int3
aas
gs
sti
mov
in
and
inc
lock
jns
(bad)
jl
add
add
ret
xor
repz
sub
jne
inc
mov
or
ret
add
sahf
sbb
push
out
loope
sbb
fld
loope
lea
mov
not
jecxz
call
in
rol
jbe
adc
hlt
das
mov
xchg
and
sbb
push
ror
mov
(bad)
not
adc
mov
push
fst
mov
nop
in
sub
les
jb
mov
push
outs
xor
cli
push
arpl
jg
push
mov
fisttp
add
in
fwait
test
mov
jno
lods
dec
popf
pusha
fs
mov
movs
in
(bad)
jle
xor
cmc
xchg
mov
pop
mov
mov
pusha
inc
retf
xchg
ins
mov
add
stc
pop
call
lahf
and
pop
xchg
mov
ins
cld
je
bound
fsubrp
(bad)
add
inc
push
push
push
popa
in
cmp
xchg
inc
sbb
repnz
dec
or
add
adc
in
push
jno
shl
mov
cmp
or
adc
adc
add
add
jmp
or
ret
in
ins
inc
push
and
cmovnp
test
or
mov
and
pushf
scas
xchg
retf
lods
rol
push
fild
daa
stc
shr
shl
ins
cli
jl
imul
mov
pop
scas
sbb
aas
cdq
mov
movs
sbb
dec
das
adc
add
sbb
pop
gs
sub
mov
outs
aad
add
jl
cdq
rcr
pop
fist
add
adc
mov
mov
or
jo
xchg
lock
push
add
mov
in
adc
or
cwde
cmp
aad
sbb
dec
xchg
cmp
push
mov
mov
test
js
sub
(bad)
jecxz
mov
xchg
icebp
cmp
rcl
or
sbb
add
sbb
mov
ret
sbb
stc
jge
mov
out
(bad)
jg
jl
mov
inc
mov
add
xchg
dec
jns
xor
pop
mov
shl
fsubr
cmp
xlat
cld
outs
pop
out
sbb
mov
out
dec
pop
fisub
cmp
add
and
cmp
mov
add
add
lds
rcl
fdiv
cmp
(bad)
(bad)
mov
dec
out
cs
inc
add
or
push
cld
or
mov
xlat
(bad)
sbb
mov
fdivr
imul
lahf
mov
mov
(bad)
pushf
inc
lock
jo
pop
mov
bound
ret
icebp
adc
arpl
or
out
cwde
sub
mov
add
aaa
mov
push
xlat
sbb
jns
inc
sbb
je
(bad)
movs
iret
dec
adc
loop
out
adc
push
sub
mov
mov
cmp
dec
xchg
mov
inc
and
xchg
and
sbb
jne
add
jg
dec
mov
xchg
imul
cdq
(bad)
inc
test
add
inc
push
ja
test
test
sub
inc
push
ins
xchg
cwde
mov
ffree
pop
and
(bad)
push
dec
sub
dec
mov
inc
dec
out
mov
movs
xchg
xchg
movs
xor
call
lds
sbb
xor
xchg
loope
xor
or
(bad)
pushf
sbb
cmp
pop
inc
pop
pop
sub
neg
cdq
add
inc
inc
test
cmps
(bad)
call
xlat
mov
fist
or
push
ror
cmp
(bad)
movs
or
gs
call
outs
cmps
movs
or
call
add
add
pop
mov
push
icebp
inc
push
xor
jne
lahf
sub
sti
xlat
popa
jno
push
xor
sbb
or
enter
outs
xchg
jg
call
mov
fldcw
shl
fcmovne
pop
ins
jb
ror
imul
loopne
movs
sub
repnz
push
ficom
mov
push
cs
rol
nop
icebp
add
(bad)
cwde
dec
mov
cwde
push
push
add
icebp
fst
sti
add
test
out
add
or
fisub
sahf
iret
aaa
pushf
sbb
test
pop
cmp
mov
js
shl
mov
sbb
xlat
ret
pop
outs
xchg
stc
ss
rcr
add
jmp
dec
xor
mov
ret
in
pop
and
in
pop
or
and
sub
add
dec
jbe
das
xchg
movs
call
pop
jae
cmp
(bad)
test
sbb
dec
movs
scas
imul
pop
hlt
cmp
sub
push
scas
add
adc
nop
test
popf
mov
aas
retf
jo
stc
sub
std
dec
mov
add
and
jno
push
mov
add
cs
adc
add
sbb
cdq
xchg
test
dec
ins
xchg
cmp
outs
inc
push
adc
js
ja
rcl
lock
adc
(bad)
cld
push
leave
in
xchg
mov
loope
pminsw
call
push
push
bound
jbe
gs
mov
jmp
pop
out
and
dec
in
add
sub
sbb
add
add
addr16
dec
pop
pop
daa
add
xchg
sub
mov
mov
sahf
cmps
sub
addr16
adc
mov
iret
cmp
ror
loopne
jge
jg
adc
popa
or
addr16
pop
sub
jmp
in
gs
fimul
movs
fwait
scas
ins
hlt
or
out
pusha
mov
sbb
mov
mov
xor
inc
rol
mov
ficomp
test
add
xor
xchg
or
jb
test
jge
lock
dec
or
nop
mov
je
lea
nop
fcom
mov
loop
loope
sbb
xor
ds
ret
pusha
aaa
pop
in
pop
loopne
in
jge
icebp
ds
sub
(bad)
sar
push
cmc
or
sub
(bad)
sti
(bad)
fidivr
xor
loopne
xchg
(bad)
mov
jg
push
xchg
inc
in
mov
push
add
push
lds
scas
call
pop
xor
dec
cld
or
jno
mov
adc
sbb
jg
sub
stos
jnp
movs
inc
adc
bound
test
movs
fsubr
dec
adc
sub
pop
xchg
mov
repz
sti
inc
mov
loop
pusha
add
in
loop
cmp
or
mov
stos
inc
or
inc
push
inc
inc
aas
or
pop
bound
adc
xor
repz
and
cmp
add
xor
addr16
jle
test
dec
xor
call
shl
je
in
push
sti
add
add
dec
inc
dec
inc
scas
inc
pusha
or
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
pop
pop
pop
arpl
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
pusha
popa
fs
cmps
test
jmp
test
jmp
cmps
test
movs
cmps
cmps
jmp
cmps
cmps
jmp
movs
push
jne
pop
pop
pop
or
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cwde
mov
popf
xchg
cmp
xchg
test
cmps
fwait
mov
lods
mov
xchg
(bad)
mov
mov
inc
mov
inc
mov
dec
mov
stos
dec
shr
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loopne
int
loopne
into
(bad)
(bad)
into
(bad)
(bad)
into
(bad)
(bad)
iret
(bad)
(bad)
iret
(bad)
fcmovnbe
into
call
ror
dec
enter
mov
stos
push
mov
xchg
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
gs
mov
ret
inc
(bad)
(bad)
inc
enter
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
(bad)
mov
jp
call
pop
or
add
add
pop
add
add
add
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
lea
popf
xchg
jle
movs
xchg
cmp
pushf
xchg
mov
mov
mov
stos
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
jmp
loopne
dec
rol
(bad)
std
std
push
repz
jmp
loope
call
int3
ret
(bad)
mov
movs
cwde
call
mov
ins
imul
mov
into
call
(bad)
xlat
(bad)
fcmovu
(bad)
(bad)
(bad)
loopne
loope
loop
loop
in
out
out
call
(bad)
jns
jl
pop
pop
pop
or
add
add
pop
es
pop
pop
rcr
pop
dec
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
popf
nop
jp
mov
cdq
jle
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
(bad)
in
jmp
add
jp
jge
div
cmc
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
in
jmp
jl
mov
into
iret
(bad)
fcomp
fcos
(bad)
(bad)
loopne
loope
loopne
loope
in
in
out
call
(bad)
mov
jp
call
pop
or
add
add
popa
mov
mov
xchg
pop
pop
bound
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
fwait
lea
mov
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
lock
call
(bad)
jl
jle
mov
fcmovnu
(bad)
fcmovu
(bad)
mov
mov
cmps
cmps
test
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
add
call
rcl
(bad)
fcmovnu
fdivr
(bad)
loopne
loopne
loope
jecxz
jecxz
out
out
jmp
(bad)
mov
jp
call
pop
or
add
add
pop
inc
add
mov
mov
cmps
cmps
test
cld
pop
pop
pop
lea
pop
sldt
add
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
fwait
lea
mov
xchg
jae
movs
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
(bad)
(bad)
jle
cmp
test
(bad)
(bad)
(bad)
fstp
fdivrp
enter
(bad)
(bad)
fcmovu
(bad)
add
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
add
call
rcl
(bad)
fstp
fdivrp
loopne
loope
loope
loop
in
in
call
in
in
(bad)
in
in
in
(bad)
mov
jp
dec
mov
xchg
mov
pop
pop
pop
add
gs
call
aad
(bad)
in
in
in
inc
(bad)
(bad)
mov
call
imul
pop
pop
pop
pop
pop
add
add
add
mov
xchg
mov
xchg
mov
xchg
mov
cwde
mov
popf
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
(bad)
sar
lea
(bad)
(bad)
loopne
in
out
rcl
sar
mov
mov
mov
inc
(bad)
enter
xchg
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
add
call
(bad)
xlat
jmp
loopne
jmp
loopne
jmp
in
jmp
call
in
push
lock
out
out
out
(bad)
mov
jnp
jmp
mov
mov
xchg
mov
xchg
mov
add
add
pop
pop
pop
ins
xchg
xchg
xchg
(bad)
mov
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
(bad)
mov
mov
dec
rcr
pop
add
add
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cwde
mov
fwait
mov
popf
mov
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
(bad)
jmp
test
(bad)
jmp
in
(bad)
fcmovu
(bad)
mov
mov
mov
(bad)
mov
ret
ret
(bad)
(bad)
(bad)
xchg
xchg
xchg
call
rcl
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
add
fcos
loopne
loope
loop
loop
in
out
jmp
out
out
push
icebp
icebp
(bad)
out
lock
mov
jnp
(bad)
fcmovbe
(bad)
(bad)
fmul
sar
mov
call
js
mov
jo
mov
mov
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
call
aad
push
lods
lods
(bad)
jge
cmp
pop
pop
pop
sbb
add
add
mov
xchg
mov
xchg
xchg
xchg
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loopne
(bad)
jge
jge
loop
jecxz
jmp
(bad)
mov
mov
(bad)
mov
mov
mov
(bad)
mov
aam
call
aad
(bad)
jg
cmp
div
(bad)
clc
div
push
cmc
repnz
repz
lock
add
(bad)
loope
loope
in
in
call
in
in
push
lock
repnz
icebp
icebp
(bad)
mov
jnp
(bad)
fcmovbe
(bad)
(bad)
fcmovnbe
ret
(bad)
fmul
mov
(bad)
mov
jno
jmp
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
out
out
out
inc
ret
mov
mov
outs
outs
jno
pop
pop
pop
sbb
add
add
mov
xchg
xchg
xchg
test
xchg
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
dec
les
(bad)
out
out
out
inc
ret
mov
mov
(bad)
mov
mov
mov
inc
rol
(bad)
(bad)
(bad)
loopne
test
stos
(bad)
mov
div
push
cmc
repnz
repz
lock
add
(bad)
jecxz
jecxz
out
out
jmp
push
icebp
icebp
push
repz
icebp
icebp
(bad)
mov
jnp
(bad)
fcmovbe
(bad)
(bad)
fcmovnbe
ret
(bad)
fmul
mov
(bad)
mov
jl
(bad)
mov
jmp
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
hlt
hlt
(bad)
mov
xchg
xchg
call
pop
jnp
add
add
mov
xchg
test
xchg
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
lea
jmp
jecxz
(bad)
mov
mov
mov
(bad)
mov
rol
ret
inc
mov
(bad)
(bad)
loopne
jl
jg
out
in
jmp
div
repnz
repz
lock
add
(bad)
in
out
jmp
out
out
push
icebp
icebp
push
repz
hlt
hlt
push
repnz
mov
jnp
(bad)
fcmovbe
(bad)
(bad)
fcmovnbe
ret
(bad)
fmul
mov
(bad)
jl
ja
mov
mov
rcl
sar
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
call
(bad)
(bad)
push
push
pop
or
add
add
test
xchg
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
xlat
sar
test
dec
int
(bad)
mov
mov
mov
inc
rol
(bad)
(bad)
enter
int
into
(bad)
(bad)
(bad)
mov
lahf
lahf
push
cmc
repnz
out
jmp
int3
retf
jne
ja
(bad)
(bad)
xlat
(bad)
(bad)
(bad)
out
call
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
repz
ret
ret
(bad)
jnp
jle
mov
movs
call
enter
into
mov
dec
mov
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
out
out
out
(bad)
mov
mov
push
xchg
mov
xchg
test
xchg
jg
call
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
jmp
mov
jmp
mov
mov
inc
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
aad
(bad)
jmp
jecxz
inc
xchg
call
mov
fdivr
loop
jecxz
jmp
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
repz
mov
call
jbe
push
je
jno
jb
mov
(bad)
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
dec
into
into
jmp
popa
arpl
xchg
mov
nop
and
jg
call
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
call
jle
(bad)
in
in
in
call
(bad)
(bad)
(bad)
mov
mov
ret
inc
mov
dec
int3
int
int
into
call
rcl
jmp
loope
(bad)
fcomp
fcos
aam
(bad)
jmp
loopne
(bad)
(bad)
(bad)
fcmovnu
fdivr
fcmovu
(bad)
jecxz
in
in
in
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
hlt
hlt
dec
leave
leave
inc
mov
inc
rol
mov
mov
inc
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
jmp
out
(bad)
mov
jge
(bad)
pop
pop
pop
xor
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
aad
mov
(bad)
fst
(bad)
aad
jmp
fxch
jmp
fcmove
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
mov
(bad)
out
out
out
inc
(bad)
(bad)
inc
rol
ret
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
into
into
iret
call
rcl
call
(bad)
xlat
jmp
out
jmp
in
jmp
loope
jmp
loopne
(bad)
(bad)
loopne
(bad)
(bad)
out
call
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
call
(bad)
(bad)
dec
int3
int3
inc
enter
(bad)
rol
(bad)
mov
out
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
inc
mov
call
pop
call
add
pop
pop
pop
sbb
pop
sbb
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
cmps
lahf
xchg
(bad)
jg
cmp
mov
jmp
fxch
jmp
fcmove
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
test
jmp
loope
inc
ret
ret
inc
mov
dec
int3
int
int
into
call
rcl
call
rcl
call
(bad)
xlat
jmp
jecxz
jmp
out
jmp
jecxz
jmp
loop
jmp
out
(bad)
jmp
out
out
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
push
repnz
jecxz
call
rcl
dec
rcl
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
(bad)
(bad)
(bad)
mov
jo
hlt
pop
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
jbe
outs
jb
pop
pop
pusha
cmps
(bad)
jge
jg
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
into
ret
jle
jg
cld
cld
cld
(bad)
fstp
fdivrp
test
call
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
aam
into
call
hlt
hlt
call
rcl
dec
leave
leave
dec
int3
int
int3
int3
int
iret
iret
sar
rcl
sar
aam
aad
fcomp
fcos
fstp
fdivrp
loopne
loope
loopne
loope
in
in
out
call
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
push
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
repnz
ret
xchg
cwde
cdq
call
pop
jb
add
add
pop
dec
addr16
xchg
push
cmp
pop
pop
cmp
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
xchg
mov
(bad)
clc
clc
stc
(bad)
out
out
lock
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jle
jle
mov
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
call
aam
(bad)
jmp
dec
int3
int
into
into
iret
call
rcl
call
rcl
call
xlat
fdivr
fcmovnu
fdivr
(bad)
loopne
loopne
loope
jecxz
jecxz
out
out
jmp
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
call
xlat
xlat
push
imul
pop
push
pop
pop
pop
sub
arpl
mov
mov
mov
mov
scas
jmp
iretw
pop
pop
pop
add
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
mov
mov
call
rcl
push
rcl
(bad)
clc
clc
clc
push
clc
clc
jmp
test
in
out
(bad)
in
call
out
icebp
out
jmp
call
cmc
cmc
(bad)
(bad)
fdivr
int
into
call
rcl
call
rcl
call
aad
(bad)
(bad)
(bad)
fstp
fdivrp
loopne
loope
loope
loop
in
in
call
in
in
(bad)
call
loop
(bad)
fstp
fdivrp
xlat
fcomp
call
rcl
call
rcl
call
xlat
xlat
(bad)
fcmovnu
fdivr
jecxz
jecxz
jmp
jmp
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
(bad)
out
out
out
(bad)
mov
pushf
popf
call
pop
movs
pop
pop
pop
add
add
add
pop
adc
pop
xchg
jnp
jle
lods
scas
scas
(bad)
mov
retf
fcomp
fdivr
rcl
aam
mov
mov
call
pop
popa
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
cmp
(bad)
out
out
out
push
mov
push
mov
fdivrp
std
std
std
(bad)
jmp
xchg
xchg
call
(bad)
push
in
out
mov
test
push
div
push
icebp
bnd
rcl
call
rcl
call
aam
(bad)
fcomp
fcos
(bad)
(bad)
loopne
loope
loopne
loope
in
in
loop
jecxz
fstp
fdivrp
rcl
sar
(bad)
inc
ret
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
rcl
jmp
out
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
call
rcl
(bad)
mov
mov
mov
pop
pop
pop
xchg
pop
pop
pop
add
pop
add
pop
pop
push
outs
jno
mov
mov
(bad)
(bad)
fcmovu
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
ret
push
imul
pop
pop
or
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
push
mov
sti
inc
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
inc
ret
jmp
std
std
call
(bad)
xlat
inc
pushf
fwait
inc
repnz
clc
clc
push
div
jmp
out
call
rcl
call
rcl
call
(bad)
xlat
(bad)
fcmovu
(bad)
(bad)
(bad)
loopne
loope
loope
loope
fcmovnu
(bad)
rcl
aam
rcl
aam
rcl
sar
int
into
dec
rcl
call
rcl
call
aad
(bad)
fcmovnu
fdivr
fstp
fdivrp
(bad)
xlat
xlat
call
rcl
dec
leave
leave
(bad)
mov
mov
mov
(bad)
mov
(bad)
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
jmp
loop
(bad)
mov
mov
mov
call
pop
mov
xchg
xchg
xchg
(bad)
mov
ret
ret
(bad)
(bad)
(bad)
loopne
loopne
(bad)
fdivr
fcomp
fcos
xlat
xlat
fdivr
aam
aad
rcl
sar
mov
mov
call
pop
mov
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
mov
dec
shr
fcmovnbe
(bad)
fcmove
(bad)
call
out
(bad)
in
jmp
in
lock
out
add
jmp
jecxz
push
mov
mov
mov
mov
mov
(bad)
mov
mov
mov
push
repz
cld
cld
cld
inc
(bad)
(bad)
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
loop
dec
iret
sar
rcl
sar
aad
(bad)
(bad)
(bad)
(bad)
fstp
fdivrp
jecxz
in
out
out
loop
jecxz
(bad)
fdivrp
fcmovnu
(bad)
fstp
fdivrp
out
out
icebp
repnz
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
push
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
cli
cli
(bad)
call
(bad)
(bad)
(bad)
mov
mov
mov
mov
loope
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
jmp
out
inc
ret
mov
mov
popf
push
rol
xlat
xlat
fdivr
in
out
loope
loop
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
dec
iret
sar
ret
ret
(bad)
push
jbe
cli
pop
pop
pop
and
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
mov
shl
fst
leave
(bad)
jmp
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
idiv
mov
mov
push
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
(bad)
(bad)
stc
cli
cli
(bad)
std
std
std
(bad)
cld
cld
cld
jmp
in
dec
into
iret
call
rcl
call
rcl
call
xlat
fdivr
(bad)
(bad)
out
out
jmp
in
(bad)
jmp
in
(bad)
call
call
out
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
jmp
jecxz
(bad)
mov
mov
push
leave
push
repnz
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
in
inc
rol
mov
rol
rcl
sar
out
call
jmp
jecxz
(bad)
(bad)
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
aam
rcl
sar
int
into
dec
retf
mov
test
call
popa
mov
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
mov
xchg
enter
xlat
iret
sar
loopne
push
icebp
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
inc
clc
clc
call
fcomp
push
mov
mov
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
rol
ret
dec
retf
retf
(bad)
call
jmp
rcl
sar
rcl
aam
(bad)
(bad)
xlat
(bad)
(bad)
fdivr
in
in
in
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
(bad)
in
out
out
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
mov
mov
(bad)
mov
in
in
push
hlt
hlt
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
(bad)
(bad)
int3
int3
int
in
in
jmp
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
dec
into
iret
dec
retf
int3
inc
enter
rol
mov
mov
call
pop
inc
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
stos
call
(bad)
(bad)
push
in
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
stc
push
repz
in
jmp
(bad)
call
(bad)
jmp
fxch
(bad)
fcmovnbe
enter
sar
leave
mov
dec
scas
scas
push
clc
clc
jmp
out
(bad)
mov
mov
push
mov
mov
(bad)
mov
mov
mov
inc
rol
(bad)
(bad)
enter
int3
int3
int
int3
int3
int
iret
iret
sar
rcl
sar
aam
aad
fcmovnu
fdivr
icebp
icebp
icebp
push
hlt
hlt
push
icebp
icebp
(bad)
jmp
call
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
repz
jmp
jecxz
(bad)
fstp
(bad)
fcmovnu
(bad)
loopne
loope
out
out
repz
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
jmp
push
mov
in
icebp
icebp
icebp
(bad)
out
out
out
(bad)
in
in
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
jmp
in
jmp
loop
(bad)
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
dec
iret
sar
int3
int3
int
enter
(bad)
(bad)
mov
mov
movs
call
pop
into
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
scas
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
push
hlt
icebp
(bad)
in
jmp
(bad)
retf
retf
mov
inc
mov
test
inc
mov
test
inc
mov
test
inc
mov
test
dec
mov
push
div
(bad)
fcmovu
(bad)
mov
mov
mov
(bad)
mov
mov
mov
inc
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
into
into
iret
call
rcl
call
rcl
(bad)
(bad)
(bad)
repz
push
div
push
hlt
hlt
(bad)
call
out
(bad)
jmp
push
icebp
icebp
push
repz
repz
in
call
aad
inc
(bad)
mov
mov
mov
(bad)
mov
mov
mov
ret
(bad)
(bad)
(bad)
cmc
div
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
(bad)
out
out
out
inc
(bad)
(bad)
push
mov
call
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
jmp
jecxz
(bad)
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
xlat
xlat
fdivr
aam
aad
rcl
sar
int
into
dec
retf
rol
(bad)
mov
mov
inc
pop
bound
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
inc
mov
loop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
clc
idiv
jmp
loope
fst
int3
dec
les
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
movs
xchg
(bad)
jns
jne
movs
movs
cmps
push
icebp
icebp
push
repz
rcl
(bad)
mov
mov
mov
(bad)
mov
ret
(bad)
dec
retf
int3
int3
int
int
into
call
rcl
call
rcl
call
aad
push
icebp
icebp
(bad)
sti
sti
sti
(bad)
clc
clc
clc
jmp
in
jmp
in
(bad)
call
in
in
push
lock
repnz
jmp
(bad)
(bad)
fcos
rcl
sar
retf
push
movs
call
cdq
call
test
mov
mov
mov
mov
mov
mov
mov
push
cmc
cmc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repnz
ret
ret
push
mov
jmp
in
in
in
(bad)
jmp
in
(bad)
jmp
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
dec
into
iret
dec
enter
mov
mov
jmp
imul
(bad)
jge
jnp
jle
call
and
and
and
test
test
mov
(bad)
(bad)
fst
int3
(bad)
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
sti
sti
jmp
in
call
int3
sar
mov
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
xchg
mov
jbe
jbe
mov
stc
stc
(bad)
in
in
in
dec
retf
mov
mov
sar
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
into
into
iret
call
rcl
call
rcl
(bad)
jmp
(bad)
std
std
std
(bad)
call
jecxz
jmp
out
(bad)
jmp
push
icebp
icebp
(bad)
in
in
in
jmp
in
(bad)
(bad)
(bad)
mov
cwde
inc
xchg
cdq
jmp
stos
push
scas
scas
jmp
xchg
call
mov
push
mov
out
div
idiv
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
(bad)
in
in
in
(bad)
mov
mov
inc
(bad)
(bad)
in
in
(bad)
jmp
in
(bad)
jmp
jmp
jecxz
(bad)
(bad)
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
aam
into
into
iret
inc
ret
ret
(bad)
mov
cmps
test
jo
jae
pop
pop
pop
jb
pop
pop
push
(bad)
jge
jnp
jle
call
and
and
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
cli
jmp
loope
dec
les
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
test
add
(bad)
stc
stc
stc
jmp
in
inc
mov
inc
mov
dec
int3
int
int
into
call
rcl
call
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
jmp
loop
jmp
out
(bad)
jmp
out
out
push
repnz
repnz
out
out
out
(bad)
(bad)
(bad)
xchg
xchg
cwde
call
test
push
cwde
push
cwde
push
cwde
(bad)
mov
ror
jmp
loopne
jmp
add
mov
push
fcomp
push
cmc
cmc
push
hlt
hlt
push
repz
icebp
icebp
jmp
jecxz
(bad)
mov
mov
call
fcomp
(bad)
jmp
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
dec
leave
leave
(bad)
mov
mov
(bad)
jge
cmp
pop
pop
sahf
pop
pop
pop
pop
(bad)
jge
jnp
jle
call
and
mov
xlat
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
dec
ret
mov
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
mov
jp
jb
xchg
xchg
xchg
(bad)
jmp
div
(bad)
fnstsw
loopne
retf
dec
int3
int
int3
int3
int
iret
iret
sar
rcl
sar
aam
aad
out
out
lock
std
std
std
push
div
jmp
loopne
jmp
in
jmp
call
in
push
repnz
hlt
hlt
push
repnz
rcl
inc
movs
popf
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
mov
dec
xchg
cwde
push
mov
(bad)
fcomp
fcos
repnz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
out
call
aam
(bad)
mov
mov
jmp
jmp
loop
(bad)
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
rcl
sar
(bad)
(bad)
mov
nop
xchg
jmp
gs
pop
pop
pop
xor
add
add
jle
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
shl
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
xchg
mov
dec
retf
int3
(bad)
stc
stc
stc
push
hlt
hlt
call
aam
dec
into
iret
call
rcl
call
rcl
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
out
jmp
jecxz
jmp
out
(bad)
jmp
(bad)
cli
cli
cli
(bad)
clc
clc
clc
inc
(bad)
enter
nop
jmp
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
mov
cwde
call
lea
push
loope
push
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
mov
mov
jmp
jecxz
(bad)
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
int
into
dec
leave
leave
(bad)
mov
imul
pop
pop
pop
pop
pop
pop
add
add
add
jle
push
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
mov
call
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
jnp
outs
dec
int
(bad)
stc
stc
stc
(bad)
stc
stc
stc
call
rcl
call
rcl
call
rcl
call
aad
(bad)
out
lock
stc
stc
stc
push
repz
loope
jmp
in
(bad)
call
in
in
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
fstp
fdivrp
lea
cmp
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
cdq
call
mov
mov
mov
jmp
(bad)
in
in
out
(bad)
in
in
in
(bad)
jmp
in
call
fcomp
(bad)
mov
mov
loopne
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
into
into
iret
dec
retf
ret
(bad)
(bad)
call
(bad)
int3
(bad)
jge
jnp
xchg
jns
cli
stc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
stc
push
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
push
addr16
lock
push
clc
clc
(bad)
in
in
out
dec
iret
sar
rcl
sar
aam
aad
fcmovnu
(bad)
div
idiv
idiv
clc
jmp
in
jmp
in
jmp
call
in
push
hlt
hlt
(bad)
(bad)
(bad)
(bad)
push
div
inc
xchg
cmp
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
mov
push
iret
sar
in
in
in
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
(bad)
mov
aam
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
sar
int3
int3
int
leave
retf
jbe
jns
pop
pop
pop
adc
(bad)
jge
jnp
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
mov
xchg
cmc
cmc
cmc
push
div
jmp
loopne
call
rcl
call
rcl
call
(bad)
xlat
jmp
in
push
cmc
cmc
push
repz
loop
jmp
out
(bad)
jmp
out
out
(bad)
stc
stc
stc
(bad)
cld
cld
cld
jmp
sahf
cwde
call
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
lea
add
mov
mov
(bad)
jmp
in
(bad)
jmp
dec
into
into
(bad)
mov
enter
fcomp
call
xlat
fdivr
aam
aad
rcl
sar
iret
iret
sar
int
into
call
pop
push
mov
xchg
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
into
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
inc
outs
jno
add
test
add
add
test
mov
xchg
mov
mov
cmc
cmc
push
cmc
cmc
(bad)
fcomp
fcos
rcl
sar
aad
(bad)
(bad)
(bad)
(bad)
in
in
in
push
cmc
cmc
(bad)
in
in
in
jmp
in
(bad)
call
in
in
push
repz
stc
stc
stc
(bad)
in
out
out
dec
jg
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
call
mov
mov
(bad)
jmp
jmp
in
call
fcomp
(bad)
mov
mov
fdivr
(bad)
(bad)
xlat
call
rcl
dec
iret
sar
rcl
sar
rcl
sar
mov
jnp
(bad)
jp
jge
jns
jge
jns
jl
jns
jl
js
jnp
ja
jp
ja
jp
ja
jp
ja
jp
jbe
jp
jo
jae
pop
pop
pop
jnp
add
add
ret
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
(bad)
jl
pusha
call
loop
jmp
jecxz
jmp
jecxz
jmp
in
jmp
call
jmp
jmp
in
(bad)
in
in
in
push
lock
repnz
repz
hlt
hlt
push
cmc
cmc
push
cmc
cmc
call
rcl
call
rcl
call
xlat
fdivr
(bad)
(bad)
out
out
out
push
repz
call
out
(bad)
jmp
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
mov
fwait
xchg
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
dec
xchg
mov
ret
jmp
jmp
jecxz
(bad)
(bad)
(bad)
mov
mov
sar
rcl
aam
rcl
sar
int
into
call
rcl
call
rcl
call
rcl
dec
into
iret
dec
int3
int
leave
retf
leave
retf
(bad)
enter
(bad)
ret
(bad)
mov
mov
mov
jmp
pop
pop
jnp
add
add
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
js
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
(bad)
js
pop
call
fstp
(bad)
mov
mov
mov
(bad)
mov
rol
ret
(bad)
(bad)
inc
enter
retf
retf
dec
into
iret
call
rcl
call
rcl
call
rcl
call
rcl
call
(bad)
xlat
(bad)
fcmovu
(bad)
(bad)
loopne
jmp
out
out
jmp
out
(bad)
jmp
out
out
push
icebp
icebp
push
hlt
hlt
push
cmc
cmc
dec
jns
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
test
(bad)
mov
loop
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
(bad)
mov
int
call
rcl
dec
into
iret
dec
retf
int3
dec
leave
leave
inc
mov
inc
ret
ret
inc
rol
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
cmps
test
pop
pop
pop
jnp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jne
xor
ins
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
push
push
call
(bad)
(bad)
mov
mov
mov
(bad)
mov
mov
ret
(bad)
enter
int3
int3
int
int3
int3
int
iret
iret
sar
rcl
sar
aam
aad
fcomp
fcos
(bad)
(bad)
loopne
loope
in
in
call
call
in
push
lock
repnz
lock
repz
ins
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jnp
push
dec
xchg
cwde
jmp
mov
(bad)
loope
loop
(bad)
fdivrp
fcmovu
(bad)
leave
leave
retf
mov
retf
iret
sar
int3
int3
int
enter
(bad)
(bad)
ret
inc
ret
mov
mov
mov
(bad)
mov
mov
mov
push
mov
(bad)
mov
test
call
pop
jnp
add
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
cmp
jne
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
(bad)
jnp
push
inc
jbe
call
aad
(bad)
mov
mov
mov
(bad)
mov
rol
ret
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
into
into
iret
call
rcl
call
rcl
call
xlat
fdivr
fcmovnu
fdivr
(bad)
loopne
loopne
loope
loopne
loope
in
in
jmp
push
icebp
icebp
push
repnz
call
in
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
jp
push
dec
xchg
test
test
mov
mov
aad
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
int
into
inc
rol
mov
into
dec
retf
(bad)
inc
ret
ret
inc
ret
ret
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
jmp
pop
pop
jnp
add
add
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
idiv
xchg
mov
xchg
mov
mov
push
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
push
dec
(bad)
jle
push
dec
xchg
popf
mov
cmps
xchg
jle
scas
lahf
xchg
mov
xchg
inc
mov
inc
mov
inc
mov
jmp
cwde
call
mov
mov
(bad)
mov
mov
ret
inc
mov
dec
int3
int
int
into
call
rcl
call
rcl
call
aad
(bad)
(bad)
(bad)
fstp
fdivrp
loopne
loope
(bad)
(bad)
(bad)
(bad)
jecxz
in
in
in
in
push
lock
repnz
out
lock
call
sar
pushf
pushf
sahf
call
ja
push
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
push
dec
inc
xchg
pop
mov
ret
call
ret
iret
rcl
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
rcl
sar
(bad)
inc
mov
inc
enter
(bad)
(bad)
inc
ret
ret
inc
rol
mov
mov
mov
(bad)
mov
mov
mov
push
mov
push
rol
stos
stos
lods
call
pop
jnp
add
add
test
fdivr
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
xchg
mov
mov
push
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
push
dec
inc
and
stos
fwait
cmp
movs
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
jmp
xchg
cdq
call
rcl
(bad)
mov
mov
mov
inc
rol
ret
(bad)
(bad)
inc
enter
retf
int3
dec
int3
int
into
into
iret
call
rcl
call
rcl
call
xlat
fdivr
fcmovnu
fdivr
(bad)
loopne
loopne
loope
fstp
(bad)
(bad)
(bad)
loope
loop
out
out
out
push
icebp
icebp
push
repz
in
in
out
jmp
loopne
call
rcl
call
cli
stc
(bad)
cli
clc
idiv
repz
(bad)
(bad)
sar
sar
call
outs
push
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
dec
inc
xchg
xchg
mov
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
enter
sar
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
sar
int3
int
dec
retf
leave
retf
(bad)
inc
ret
ret
inc
ret
ret
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
inc
ret
lods
lods
scas
call
pop
jnp
add
add
popf
nop
(bad)
out
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jmp
pop
js
lea
pop
jmp
dec
jmp
notrack
cmp
push
inc
mov
cwde
jnp
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
jmp
xchg
cwde
call
rcl
(bad)
mov
mov
mov
inc
ret
ret
inc
mov
dec
int3
int
int
into
call
rcl
call
rcl
call
(bad)
xlat
(bad)
fcmovu
(bad)
(bad)
(bad)
loopne
loope
loop
loop
fnstsw
loopne
rcl
sar
fcmovnu
fdivr
icebp
icebp
icebp
push
repz
hlt
hlt
(bad)
out
out
out
call
aam
call
xlat
fdivr
xchg
xchg
xchg
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
jmp
(bad)
(bad)
mov
mov
push
cmp
jmp
inc
push
push
inc
js
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
call
rcl
call
(bad)
(bad)
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
call
rcl
dec
int
inc
enter
(bad)
(bad)
inc
ret
ret
inc
rol
mov
mov
mov
(bad)
mov
mov
mov
push
mov
push
mov
inc
ret
ret
jmp
pop
pop
jnp
add
add
mov
int
sar
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
cmp
test
mov
xchg
mov
xchg
mov
call
jmp
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
jmp
xchg
xchg
dec
int
(bad)
mov
mov
mov
inc
(bad)
enter
int3
int3
int
int3
int3
int
iret
iret
sar
rcl
sar
aam
aad
fcomp
fcos
(bad)
(bad)
loopne
loope
loopne
loope
in
in
loop
jecxz
iret
iret
sar
rcl
aam
repnz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
dec
iret
sar
rcl
aam
mov
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
inc
mov
cdq
call
mov
lea
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
in
jmp
ret
(bad)
fcos
fcomp
fcos
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
call
aam
call
rcl
dec
int
inc
(bad)
ret
inc
ret
mov
mov
mov
(bad)
mov
mov
mov
push
mov
push
mov
push
(bad)
jmp
pop
pop
jnp
add
add
lahf
xchg
out
fcom
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
dec
lds
jmp
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
jmp
xchg
xchg
dec
int3
int
mov
ret
ret
inc
(bad)
enter
retf
dec
into
iret
call
rcl
call
rcl
call
aad
call
xlat
fdivr
fcmovu
(bad)
(bad)
(bad)
loope
loop
loopne
loope
jecxz
jecxz
out
out
out
call
dec
iret
sar
icebp
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
call
rcl
dec
int
dec
in
jmp
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
hlt
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
(bad)
mov
mov
xchg
fdivrp
fcmovnu
(bad)
(bad)
fcos
xlat
xlat
fdivr
aam
aad
rcl
sar
(bad)
fcos
xlat
xlat
xlat
dec
int3
int3
inc
ret
ret
inc
ret
ret
(bad)
mov
(bad)
enter
retf
leave
leave
inc
mov
inc
(bad)
ret
inc
ret
rol
(bad)
mov
mov
mov
dec
leave
retf
mov
call
pop
jnp
add
add
mov
cmps
sahf
nop
in
mov
cmps
(bad)
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
jmp
xchg
xchg
dec
retf
int3
dec
int3
int
int
into
dec
iret
sar
rcl
sar
rcl
sar
rcl
aam
aam
aad
fcomp
fdivr
fcmovnu
(bad)
(bad)
fdivrp
loopne
loope
loop
jecxz
loop
jecxz
loop
jecxz
in
in
call
in
in
dec
int3
int
int
into
(bad)
jmp
hlt
hlt
push
cmc
cmc
push
div
(bad)
(bad)
(bad)
enter
movs
cmps
cmps
push
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
jmp
fxch
jmp
fcmovnbe
inc
mov
jg
xchg
mov
movs
movs
cmps
push
xchg
xchg
xchg
jmp
out
(bad)
fnstsw
loopne
xlat
xlat
fdivr
aad
(bad)
call
rcl
call
rcl
jmp
loope
(bad)
fstp
(bad)
enter
ret
inc
rol
mov
loop
(bad)
jmp
jmp
out
jmp
jecxz
jmp
loopne
jmp
loopne
(bad)
fstp
fdivrp
fcmovnu
fdivr
fcmovu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
aam
aad
rcl
sar
mov
mov
pop
pop
pop
jnp
add
add
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
push
jno
(bad)
js
jbe
js
jbe
jns
ja
jns
ja
jns
js
jnp
jns
jnp
jns
jnp
jp
jl
jl
jl
jl
jp
jnp
lahf
lahf
mov
jmp
jecxz
jmp
in
jmp
call
in
push
lock
aad
dec
enter
fstp
push
cmc
cmc
push
div
push
clc
clc
(bad)
in
in
in
inc
mov
inc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
mov
les
not
rcl
(bad)
in
in
in
(bad)
(bad)
loopne
xlat
xlat
fdivr
rcl
aam
rcl
sar
xlat
fcomp
jmp
call
loopne
ret
inc
ret
ret
(bad)
mov
rol
jmp
dec
enter
ins
outs
call
ins
ins
jo
ins
ins
jo
ins
ins
jo
ins
ins
outs
fsubr
outs
fsubr
outs
fsubr
outs
fsubr
outs
fsubr
outs
fsub
push
pop
pop
pop
data16
add
xchg
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
leave
push
jp
(bad)
fdivr
fnstsw
loopne
in
in
jmp
out
out
push
icebp
icebp
jmp
jecxz
inc
ret
retf
int3
int3
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
dec
int
inc
(bad)
sahf
lahf
mov
(bad)
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
(bad)
mov
xchg
xchg
push
repnz
out
out
out
(bad)
(bad)
(bad)
aam
aad
rcl
sar
into
into
iret
jmp
loope
(bad)
jmp
in
(bad)
(bad)
(bad)
ret
inc
rol
mov
leave
leave
(bad)
in
in
in
(bad)
jmp
in
call
pop
pop
dec
xchg
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
jp
jns
rcl
sar
(bad)
fdivr
loope
loop
in
in
in
push
lock
repnz
repnz
mov
ret
jmp
push
clc
clc
(bad)
stc
stc
stc
(bad)
in
in
in
(bad)
mov
ret
ret
inc
fcmovu
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
inc
loope
push
repz
in
call
(bad)
xlat
call
rcl
dec
iret
sar
into
into
iret
(bad)
jmp
jmp
jmp
in
dec
iret
iret
inc
ret
mov
mov
fdivr
in
in
out
(bad)
in
in
in
(bad)
jns
jl
pop
pop
pop
or
xchg
jg
sbb
xchg
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
mov
lods
scas
(bad)
fcomp
fdivr
fcmovnu
(bad)
in
in
in
push
icebp
icebp
push
repz
hlt
hlt
call
rcl
(bad)
mov
iret
sar
idiv
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
call
rcl
(bad)
mov
mov
inc
jmp
push
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
dec
int
(bad)
stc
stc
stc
push
repnz
(bad)
(bad)
rcl
aam
rcl
sar
int
into
(bad)
(bad)
fdivrp
lock
jmp
(bad)
mov
mov
mov
(bad)
out
out
out
jmp
in
call
mov
nop
jle
push
xchg
jg
rcl
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
cmps
(bad)
js
jns
mov
mov
(bad)
fstp
fdivrp
out
out
out
push
repz
hlt
hlt
push
hlt
hlt
(bad)
in
in
in
(bad)
mov
mov
call
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
clc
clc
clc
inc
(bad)
mov
scas
mov
add
repz
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
sar
xchg
xchg
(bad)
mov
sti
sti
(bad)
cli
cli
cli
(bad)
(bad)
fdivrp
aad
(bad)
call
rcl
dec
into
iret
dec
iret
sar
repnz
repnz
aad
inc
rol
mov
mov
mov
push
lock
jecxz
inc
pop
pop
sbb
add
nop
jle
popf
xchg
jg
call
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
jge
jnp
xchg
xchg
cdq
dec
int
call
aad
jmp
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
call
(bad)
(bad)
(bad)
mov
mov
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
cmc
cmc
(bad)
mov
mov
mov
add
push
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
mov
xchg
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
call
(bad)
xlat
call
rcl
dec
iret
sar
int3
int3
int
in
in
cmc
cmc
cmc
(bad)
in
in
in
inc
ret
ret
(bad)
mov
mov
mov
(bad)
mov
(bad)
jecxz
in
lock
mov
jno
out
pop
pop
pop
pop
pop
pop
add
add
add
jle
sti
xchg
jg
call
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
retf
mov
test
test
dec
int
(bad)
fcmovu
(bad)
jmp
out
out
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
repz
mov
mov
(bad)
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
std
std
std
push
cmc
cmc
inc
(bad)
(bad)
(bad)
mov
mov
call
mov
(bad)
jmp
call
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
(bad)
mov
xchg
xchg
call
in
(bad)
stc
stc
stc
(bad)
cli
cli
cli
jmp
jecxz
call
xlat
fdivr
aam
aad
rcl
sar
int
into
(bad)
fcmovnu
fdivr
stc
stc
stc
(bad)
clc
clc
clc
call
rcl
(bad)
mov
mov
mov
(bad)
mov
mov
mov
dec
int
(bad)
jmp
jmp
gs
pop
pop
pop
xor
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
iret
ret
pushf
xchg
mov
jbe
js
lods
lods
scas
inc
(bad)
rcl
sar
jecxz
jecxz
call
in
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
push
clc
clc
jmp
jecxz
(bad)
mov
mov
loop
sti
sti
sti
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
dec
into
into
(bad)
mov
mov
mov
inc
mov
xchg
xchg
cdq
jmp
cmps
cmps
call
mov
jmp
loopne
push
cmc
cmc
push
div
push
cmc
cmc
(bad)
(bad)
(bad)
xlat
xlat
fdivr
aad
(bad)
call
rcl
dec
into
iret
call
aad
(bad)
sti
sti
sti
(bad)
cld
cld
cld
jmp
in
inc
rol
mov
mov
mov
(bad)
mov
mov
mov
push
mov
aam
in
in
in
(bad)
fnstsw
loope
xchg
xchg
xchg
(bad)
pop
pop
pusha
call
add
(bad)
jge
jp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
jmp
jae
call
inc
(bad)
enter
(bad)
jecxz
jecxz
out
out
jmp
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
fcomp
fdivr
mov
mov
jmp
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
call
(bad)
mov
rol
(bad)
inc
(bad)
mov
mov
push
retf
int
fnstsw
loopne
out
call
push
lock
repnz
call
(bad)
call
xlat
fdivr
xlat
xlat
fdivr
rcl
aam
rcl
sar
rcl
sar
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
push
lock
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
(bad)
(bad)
out
out
out
dec
into
sar
jl
jg
pop
pop
pop
jb
pop
pop
push
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
popf
(bad)
jl
jbe
mov
mov
call
rcl
jmp
loopne
jmp
loop
jmp
out
(bad)
jmp
out
out
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
dec
int
(bad)
mov
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
jmp
out
call
aam
inc
(bad)
(bad)
(bad)
enter
leave
retf
iret
iret
sar
rcl
aam
fcmovnu
fdivr
in
in
call
out
jmp
loop
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
(bad)
fcomp
fcos
clc
clc
clc
(bad)
std
std
std
push
div
dec
leave
leave
inc
rol
mov
mov
mov
(bad)
mov
mov
mov
push
mov
push
mov
push
mov
rol
jmp
jecxz
(bad)
in
in
out
push
ins
outs
fcomp
pop
dec
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
xchg
xchg
xchg
(bad)
mov
enter
fcmovnu
jmp
loopne
jmp
loopne
jmp
in
jmp
call
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
clc
clc
push
clc
clc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
clc
clc
clc
dec
int
(bad)
mov
mov
fcos
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
in
in
in
jmp
out
jmp
loop
jmp
loope
jmp
in
jmp
call
jmp
loop
(bad)
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
sti
sti
sti
push
cmc
cmc
dec
int
inc
ret
mov
mov
mov
(bad)
mov
mov
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
enter
in
in
out
call
aam
call
rol
add
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
cmps
push
jno
mov
mov
enter
(bad)
loopne
loopne
loope
jecxz
jecxz
out
out
jmp
push
icebp
icebp
push
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
icebp
icebp
(bad)
fcmovu
(bad)
fstp
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
fcomp
fcos
mov
mov
leave
(bad)
jmp
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
jmp
jecxz
(bad)
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
xlat
xlat
fdivr
(bad)
(bad)
jmp
(bad)
stc
stc
stc
(bad)
in
in
in
inc
enter
ret
ret
(bad)
mov
mov
mov
push
cmc
cmc
call
rcl
(bad)
mov
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
out
out
out
dec
pop
pop
das
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
dec
mov
(bad)
loope
loop
in
in
call
in
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
repz
fstp
fdivrp
int
into
dec
int3
int
iret
iret
sar
loopne
loopne
sti
sti
sti
(bad)
sti
sti
sti
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
(bad)
mov
mov
mov
(bad)
jmp
push
hlt
hlt
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
fcmovu
(bad)
call
cmc
cmc
push
cmc
cmc
push
div
jmp
in
inc
(bad)
ret
inc
rol
mov
mov
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
in
inc
(bad)
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
call
cdq
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
lods
call
lds
(bad)
fmul
mov
(bad)
jge
jp
scas
scas
scas
inc
ret
ret
jmp
in
jmp
call
in
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
jmp
loopne
dec
leave
leave
(bad)
mov
(bad)
xchg
inc
rol
int3
int3
int
into
into
iret
jmp
loopne
(bad)
cld
cld
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
call
rcl
(bad)
mov
mov
mov
(bad)
fcomp
fcos
call
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
in
(bad)
jmp
jmp
jecxz
jmp
loopne
(bad)
(bad)
(bad)
in
in
jmp
in
push
lock
repz
in
in
in
call
aam
inc
mov
inc
ret
ret
(bad)
mov
mov
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
jmp
in
(bad)
cld
cld
cld
jmp
loope
(bad)
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
sar
icebp
repnz
jp
jge
pop
pop
pop
adc
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
fcmovbe
ret
fxch
(bad)
call
jmp
push
repnz
(bad)
cli
stc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
(bad)
jl
jg
mov
mov
(bad)
jmp
out
out
push
icebp
icebp
push
repz
hlt
hlt
jmp
out
dec
retf
mov
xchg
cwde
(bad)
jle
cmp
mov
jbe
rol
dec
int3
int
int
into
(bad)
fstp
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
in
in
in
dec
int3
int3
(bad)
mov
mov
mov
inc
(bad)
(bad)
dec
retf
retf
call
rcl
call
fcomp
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
call
xlat
fdivr
fcmovnu
fdivr
(bad)
(bad)
loopne
loope
loope
loop
out
call
(bad)
fcomp
fcos
retf
inc
enter
(bad)
(bad)
inc
ret
ret
inc
rol
mov
(bad)
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
sti
sti
sti
call
pop
pop
jp
pusha
arpl
repnz
clc
stc
stc
call
aad
push
mov
push
mov
push
mov
repz
mov
pop
pop
jno
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
mov
test
mov
les
(bad)
jmp
(bad)
clc
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
push
lock
repnz
jmp
in
dec
int
(bad)
mov
movs
movs
(bad)
js
jp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovu
(bad)
jae
jbe
mov
int3
int
aad
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
(bad)
out
out
out
(bad)
(bad)
(bad)
int3
int
(bad)
mov
mov
ret
(bad)
(bad)
dec
leave
retf
int
dec
iret
sar
iret
iret
sar
rcl
aam
(bad)
(bad)
(bad)
(bad)
fcmovnu
fdivr
aad
(bad)
dec
iret
sar
int3
int3
int
enter
(bad)
(bad)
ret
inc
ret
mov
mov
jecxz
sti
sti
sti
(bad)
clc
clc
clc
call
pop
pop
outs
pop
pop
pop
inc
imul
(bad)
cld
cld
cld
push
icebp
icebp
inc
(bad)
enter
mov
mov
mov
scas
mov
(bad)
(bad)
fdivrp
out
out
out
jmp
outs
fistp
pop
add
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
mov
test
enter
(bad)
int
hlt
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cli
(bad)
clc
div
push
repnz
push
in
call
(bad)
in
out
(bad)
jmp
(bad)
call
(bad)
into
push
push
aad
(bad)
out
out
out
call
aad
(bad)
mov
scas
scas
(bad)
jnp
jle
cwde
xchg
xchg
jmp
fcmovnbe
(bad)
jmp
(bad)
in
call
in
repnz
jmp
ret
inc
retf
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
in
in
out
jmp
in
(bad)
(bad)
(bad)
fcmovnu
fdivr
fcomp
fcos
xlat
xlat
fdivr
(bad)
(bad)
fcmovu
(bad)
(bad)
fcos
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
aam
rcl
sar
int
into
dec
retf
(bad)
inc
ret
ret
inc
ret
ret
(bad)
mov
mov
mov
(bad)
clc
clc
clc
inc
ret
(bad)
call
pop
xchg
pop
pop
pop
add
pop
pop
push
jp
lock
aad
std
std
std
jmp
out
(bad)
mov
rol
idiv
clc
jmp
pop
pop
dec
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
test
jnp
shl
push
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
push
cmc
repz
out
in
out
call
fcmovbe
(bad)
fcmovbe
(bad)
int3
mov
dec
shl
int3
shl
int3
shl
int3
shl
int3
shl
int3
shl
xchg
xchg
xchg
(bad)
mov
mov
mov
mov
ja
mov
shl
int3
shl
int3
shl
jle
jns
mov
mov
xlat
xlat
xlat
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
dec
into
iret
dec
retf
int3
inc
enter
(bad)
(bad)
inc
ret
ret
inc
rol
mov
mov
mov
(bad)
fcomp
fdivr
clc
clc
clc
push
jns
pop
pop
pop
push
pop
pop
pop
adc
pop
xchg
(bad)
nop
xchg
std
call
cli
cli
push
repnz
jecxz
jmp
fs
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
jmp
mov
jmp
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stc
idiv
in
jmp
sar
(bad)
iret
sar
ret
mov
(bad)
mov
test
inc
mov
test
inc
mov
test
inc
mov
test
inc
mov
test
inc
mov
test
inc
mov
cmps
push
jno
mov
mov
xchg
xchg
xchg
push
jno
movs
popf
xchg
inc
mov
test
inc
mov
test
inc
mov
xchg
dec
rol
div
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
repnz
icebp
icebp
push
icebp
icebp
(bad)
out
out
out
(bad)
in
in
out
(bad)
in
in
in
(bad)
jmp
in
(bad)
jmp
jmp
in
jmp
loop
(bad)
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
dec
iret
sar
int3
int3
int
retf
dec
int3
int3
inc
ret
ret
inc
ret
mov
mov
mov
(bad)
mov
mov
icebp
dec
int
call
pop
mov
add
add
pop
sub
mov
stos
push
div
dec
pop
sub
add
add
jle
call
and
and
and
test
test
cdq
xchg
scas
mov
sar
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
in
jmp
loopne
call
iret
ret
dec
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
cdq
mov
addr16
cmp
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
push
jno
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
rcl
aam
fcmovnu
fdivr
in
in
jmp
(bad)
jmp
in
(bad)
jmp
jmp
jecxz
(bad)
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
xlat
xlat
fdivr
aam
aad
aam
aad
fcmovu
(bad)
in
in
icebp
repnz
out
out
out
inc
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
cli
cli
cli
dec
pop
pop
and
add
add
pop
dec
push
outs
ficomp
pop
mov
add
add
jle
call
and
and
and
test
test
(bad)
jmp
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
jmp
mov
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
test
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
(bad)
mov
scas
sahf
call
xchg
xchg
inc
ret
ret
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
(bad)
in
in
in
dec
iret
sar
rcl
sar
rcl
sar
rcl
aam
aam
aad
fcomp
fcos
out
out
call
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
(bad)
(bad)
xlat
(bad)
jmp
in
in
(bad)
out
out
out
push
icebp
icebp
push
repnz
hlt
hlt
(bad)
fcmovu
(bad)
mov
mov
mov
(bad)
mov
mov
mov
jmp
call
loop
pop
pusha
arpl
pop
pop
pop
pop
pop
pop
pop
or
add
add
jle
call
and
and
cwde
jge
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
call
rol
(bad)
mov
test
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
push
cwde
jmp
jb
(bad)
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
call
aad
(bad)
mov
mov
dec
into
iret
call
rcl
call
rcl
call
rcl
jmp
in
jmp
out
jmp
jecxz
(bad)
(bad)
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
aam
aad
call
in
in
(bad)
jmp
in
(bad)
out
out
out
(bad)
fcomp
fcos
iret
iret
sar
icebp
repnz
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
clc
clc
clc
jmp
pop
pop
inc
(bad)
jge
jnp
jle
call
and
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
dec
shl
lods
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
(bad)
jge
jae
mov
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
jmp
in
dec
leave
retf
js
(bad)
jg
je
ins
imul
jg
jmp
rcl
jmp
loop
jmp
in
jmp
loope
(bad)
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
jmp
in
inc
rol
(bad)
nop
xchg
push
jne
xchg
xchg
cdq
inc
in
(bad)
fnstsw
loopne
mov
mov
mov
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
lock
outs
fcomp
pop
add
add
add
jle
call
fcmovbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
mov
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cmps
fwait
mov
cdq
nop
cmp
mov
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
repnz
enter
mov
jne
cmps
fwait
mov
cmps
fwait
mov
sahf
xchg
test
outs
ins
ins
call
rcl
(bad)
(bad)
loopne
loope
loop
(bad)
fdivrp
fcmovu
(bad)
xlat
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
call
rcl
jmp
jecxz
inc
pop
push
mov
cwde
push
icebp
icebp
dec
leave
leave
(bad)
mov
mov
mov
push
mov
push
mov
hlt
(bad)
mov
pop
pop
imul
add
(bad)
jge
jnp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jmp
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
jo
push
stos
lods
lods
dec
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
mov
outs
outs
call
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
jo
ins
dec
iret
sar
(bad)
(bad)
fnstsw
loopne
(bad)
fdivr
fcomp
fdivr
xlat
xlat
fdivr
aam
aad
rcl
sar
into
into
iret
jmp
jecxz
inc
xchg
jle
lahf
xchg
jg
lahf
xchg
jg
lahf
xchg
jg
jg
jns
rcl
sar
in
out
mov
mov
mov
push
mov
push
mov
call
rcl
(bad)
clc
clc
clc
(bad)
jp
jge
pop
pop
pop
adc
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnbe
iret
call
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
xchg
inc
mov
idiv
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
(bad)
in
in
in
inc
rol
lea
outs
call
mov
cdq
mov
cdq
mov
outs
ins
push
int3
int3
int
fcmovnu
fdivr
fstp
(bad)
(bad)
fcos
xlat
xlat
fdivr
aad
(bad)
call
rcl
dec
into
iret
dec
int3
int
fnstsw
loopne
xchg
jbe
cdq
mov
cdq
mov
cdq
mov
xchg
xchg
add
into
iret
iret
(bad)
mov
mov
mov
push
mov
push
mov
in
in
in
call
rcl
call
pop
xchg
mov
cli
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
call
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
gs
mov
loope
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
dec
iret
iret
push
push
call
test
xchg
test
xchg
test
xchg
test
ins
imul
int3
int
(bad)
(bad)
fcmovnu
(bad)
xlat
xlat
fdivr
xlat
xlat
fdivr
rcl
aam
rcl
sar
int
into
dec
retf
retf
(bad)
(bad)
fdivr
test
outs
call
test
xchg
test
xchg
test
ja
addr16
mov
call
mov
push
mov
push
mov
push
enter
out
push
clc
clc
(bad)
jg
cmp
pop
pop
sub
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jg
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
(bad)
jnp
jmp
imul
cwde
call
ret
call
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
jmp
out
(bad)
mov
jge
inc
jg
dec
push
dec
addr16
leave
leave
call
xlat
xlat
(bad)
fcomp
fcos
xlat
xlat
fdivr
aam
aad
rcl
sar
into
into
iret
dec
retf
retf
dec
leave
leave
(bad)
fcomp
fdivr
add
mov
dec
push
dec
jno
jmp
out
call
aam
push
mov
push
mov
(bad)
mov
loop
push
cmc
cmc
(bad)
(bad)
fcos
add
sbb
add
int
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jp
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
jns
inc
js
push
pusha
push
jne
movs
cmps
test
mov
mov
(bad)
in
in
in
push
cmc
cmc
push
hlt
hlt
inc
(bad)
mov
push
popa
inc
jns
inc
jns
inc
push
(bad)
aad
call
xlat
fdivr
(bad)
(bad)
xlat
call
rcl
dec
iret
sar
int3
int3
int
enter
(bad)
call
aam
inc
js
inc
jns
inc
jns
inc
jae
jmp
jmp
(bad)
mov
mov
(bad)
mov
xlat
xlat
push
repz
jmp
call
pop
pop
pop
sbb
retf
call
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jnp
pop
jmp
pop
inc
scas
mov
mov
aad
(bad)
(bad)
(bad)
mov
mov
(bad)
jge
pop
inc
jae
inc
jae
inc
jae
jmp
fs
rol
rcl
sar
xlat
xlat
fdivr
rcl
aam
rcl
sar
int
into
dec
retf
(bad)
inc
(bad)
(bad)
call
rcl
inc
jb
inc
jae
inc
jae
inc
jbe
xchg
(bad)
fcmovu
(bad)
retf
int3
int3
(bad)
jmp
out
out
push
push
pop
cmp
add
add
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
nop
xchg
mov
pop
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jge
push
inc
jbe
inc
jp
inc
jne
(bad)
jg
pop
(bad)
jnp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
push
push
jmp
arpl
mov
mov
mov
mov
jmp
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
jmp
(bad)
inc
rol
rcl
sar
aad
(bad)
call
rcl
dec
into
iret
dec
retf
int3
inc
enter
(bad)
(bad)
inc
(bad)
(bad)
call
rcl
inc
ins
push
(bad)
jp
push
(bad)
jp
push
(bad)
jp
push
inc
ja
cmps
lahf
xchg
jmp
loope
dec
call
jmp
ret
(bad)
(bad)
jbe
in
pop
pop
pop
bound
pop
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
leave
sar
xchg
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
js
push
(bad)
jg
pop
inc
and
mov
popf
(bad)
js
cmps
cdq
cmp
mov
xchg
(bad)
mov
mov
inc
mov
test
call
les
call
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovbe
(bad)
(bad)
sar
(bad)
rol
dec
lds
call
jo
call
push
inc
push
push
push
push
push
push
push
jmp
popa
inc
rol
rcl
sar
rcl
sar
iret
iret
sar
int3
int3
int
enter
(bad)
(bad)
ret
inc
ret
ret
dec
iret
sar
add
push
push
push
dec
mov
xchg
lea
cld
cld
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
pop
mov
pop
push
xchg
mov
aad
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
iret
enter
je
xchg
mov
mov
pop
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
push
dec
inc
jle
call
xchg
jge
mov
mov
mov
stos
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
push
out
out
jmp
rcl
(bad)
(bad)
std
std
(bad)
sti
sti
cli
(bad)
jmp
retf
mov
mov
inc
gs
jmp
(bad)
mov
into
iret
call
rcl
dec
int
dec
retf
(bad)
inc
ret
ret
inc
ret
ret
inc
rol
int3
int3
int
add
inc
xchg
xchg
mov
sahf
xchg
xchg
sti
sti
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
jmp
jb
outs
in
pop
pop
popa
daa
xchg
mov
int
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
bnd
xchg
xchg
mov
lea
pop
jmp
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
(bad)
jge
push
dec
mov
test
jnp
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
out
jmp
(bad)
mov
mov
ret
ret
rol
inc
ret
ret
(bad)
(bad)
inc
(bad)
enter
int3
int3
int
jg
cmp
xchg
xchg
mov
nop
xchg
retf
lds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
bnd
mov
xchg
mov
mov
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
jmp
test
xchg
mov
xchg
mov
xchg
(bad)
jnp
pop
(bad)
jnp
push
inc
mov
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
jle
cmp
xchg
cwde
call
cdq
call
call
call
call
lahf
mov
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aam
sahf
xchg
mov
xchg
mov
xchg
mov
pushf
xchg
xchg
aad
retf
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
in
jmp
mov
pushf
lea
mov
xchg
jae
movs
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
retf
(bad)
mov
mov
mov
mov
mov
(bad)
mov
mov
push
cwde
xchg
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
jmp
mov
movs
clc
xchg
mov
xchg
mov
xchg
mov
xchg
mov
mov
ror
(bad)
cld
cld
cli
jmp
loopne
inc
mov
jmp
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
loopne
push
in
out
cld
sti
cli
(bad)
out
in
jmp
mov
xchg
mov
xchg
xchg
xchg
xchg
mov
fwait
mov
popf
mov
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
dec
mov
mov
add
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
das
xchg
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
cli
int
stos
test
mov
add
xchg
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
add
xchg
jg
jp
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
add
jg
(bad)
xchg
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
push
(bad)
jge
add
xchg
jg
call
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
add
add
(bad)
jge
inc
nop
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
mov
add
add
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
repnz
add
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
(bad)
mov
scas
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
movs
dec
mov
test
call
ret
rol
mov
aam
mov
(bad)
retf
fmul
mov
(bad)
(bad)
enter
int
loop
iret
jmp
fst
jmp
loope
(bad)
jmp
out
(bad)
in
call
out
icebp
out
jmp
push
repz
clc
div
(bad)
cli
clc
idiv
cld
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
xchg
mov
mov
mov
mov
mov
mov
mov
test
xchg
inc
mov
dec
mov
mov
fnop
sar
fxch
jmp
loopne
(bad)
in
call
in
repnz
call
push
repnz
push
cmc
icebp
(bad)
clc
div
(bad)
cli
stc
idiv
sti
sti
stc
(bad)
std
std
cld
(bad)
(bad)
std
std
(bad)
std
cld
sti
(bad)
cld
sti
cli
(bad)
sti
cli
clc
(bad)
cli
stc
idiv
cli
stc
idiv
cli
stc
idiv
sti
stc
idiv
cli
stc
idiv
sti
cli
clc
(bad)
cli
stc
idiv
cli
stc
idiv
cli
stc
idiv
sti
cli
clc
(bad)
cld
cli
stc
(bad)
std
std
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
cld
cld
sti
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
cmps
xchg
jns
test
jp
stos
cdq
jl
lods
fwait
jle
lods
pushf
jg
mov
test
mov
mov
mov
push
in
out
div
repz
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
(bad)
sti
cli
clc
(bad)
stc
div
push
hlt
icebp
push
lock
icebp
out
jmp
(bad)
out
jmp
in
out
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
jbe
cmps
xchg
ja
test
jp
mov
nop
dec
ret
mov
(bad)
int3
(bad)
in
call
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
(bad)
sti
cli
clc
(bad)
clc
div
push
icebp
in
(bad)
out
jmp
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
mov
lahf
mov
mov
xchg
jb
mov
xchg
leave
mov
sar
div
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
(bad)
cli
stc
idiv
stc
div
push
cmc
repnz
repz
icebp
out
push
out
jmp
icebp
in
jmp
(bad)
in
call
(bad)
jmp
(bad)
jmp
loop
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fxch
(bad)
(bad)
retf
jmp
fmul
(bad)
(bad)
retf
jmp
fmul
jmp
fcmove
jmp
(bad)
jmp
loopne
(bad)
jmp
out
(bad)
out
jmp
div
lock
cld
sti
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
stc
clc
push
repz
(bad)
out
jmp
(bad)
call
(bad)
jmp
fst
jmp
(bad)
jmp
fxch
(bad)
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
call
lea
mov
xchg
(bad)
fcmovbe
enter
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
(bad)
cli
stc
idiv
clc
cmc
repnz
repnz
push
out
jmp
lock
out
out
jmp
loop
in
call
jecxz
out
jmp
jecxz
in
call
loop
in
call
loop
in
call
loope
in
out
(bad)
jmp
fdivrp
jmp
(bad)
call
loope
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
aam
mov
(bad)
retf
mov
jmp
fxch
(bad)
call
jmp
push
hlt
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
push
in
out
out
aad
loope
int
(bad)
enter
ret
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
test
cdq
xchg
call
dec
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cli
clc
push
repz
out
call
(bad)
jmp
fdivrp
in
out
(bad)
in
call
loop
in
call
jecxz
out
jmp
in
out
jmp
out
jmp
(bad)
out
jmp
(bad)
out
jmp
out
jmp
jecxz
in
call
loop
in
call
loopne
jmp
fdivrp
jmp
(bad)
call
loope
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmove
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
aam
(bad)
(bad)
(bad)
(bad)
fcmovnbe
ret
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
iret
mov
(bad)
out
jmp
(bad)
sti
cli
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
(bad)
jmp
rol
(bad)
fmul
mov
call
les
dec
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
and
and
test
xchg
mov
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
push
repnz
(bad)
in
call
fcos
call
in
(bad)
jmp
(bad)
in
out
(bad)
in
call
loop
out
jmp
in
out
jmp
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
out
jmp
(bad)
out
jmp
out
jmp
loop
in
call
loope
in
out
(bad)
jmp
(bad)
call
loopne
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
dec
mov
mov
(bad)
retf
in
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cli
stc
(bad)
out
jmp
mov
dec
shr
retf
mov
mov
(bad)
mov
add
add
jle
call
and
and
and
stos
xchg
(bad)
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cli
push
lock
(bad)
in
in
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
jecxz
(bad)
jmp
(bad)
in
out
(bad)
in
call
loop
out
jmp
in
out
jmp
push
in
out
lock
call
push
out
jmp
push
out
jmp
out
jmp
push
in
call
(bad)
out
jmp
(bad)
out
jmp
in
call
loop
in
out
(bad)
jmp
fdivrp
jmp
(bad)
call
loopne
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
ret
iret
mov
call
retf
mov
call
leave
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
stos
(bad)
fst
(bad)
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
in
out
call
enter
mov
test
(bad)
mov
mov
cld
(bad)
jge
jnp
jle
call
and
nop
jae
loopne
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
loop
out
jmp
in
lock
out
lock
call
push
out
jmp
lock
repz
push
lock
push
lock
push
lock
repz
repnz
jmp
in
call
(bad)
out
jmp
(bad)
out
jmp
loop
in
call
loopne
jmp
fdivrp
jmp
jecxz
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
aad
(bad)
fst
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
dec
mov
sar
std
cld
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cli
stc
jmp
fxch
dec
mov
mov
(bad)
mov
add
add
jle
call
mov
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
in
(bad)
jmp
(bad)
in
call
loop
out
jmp
in
lock
out
lock
call
push
lock
repz
push
icebp
in
push
icebp
in
push
icebp
in
push
icebp
in
push
icebp
in
push
icebp
in
push
icebp
in
push
lock
push
lock
repnz
jmp
in
out
out
jmp
(bad)
out
jmp
loop
in
call
(bad)
jmp
(bad)
call
loopne
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
inc
mov
inc
mov
dec
mov
sar
std
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jmp
cmps
inc
mov
(bad)
mov
add
add
jle
(bad)
mov
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
jmp
fdivrp
loopne
int3
jmp
fmul
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
jecxz
out
jmp
lock
call
push
lock
repz
push
icebp
in
push
icebp
in
push
icebp
in
push
icebp
out
push
repnz
push
icebp
out
push
icebp
in
push
icebp
in
push
icebp
in
push
lock
push
lock
repnz
jmp
in
out
out
jmp
in
call
loope
jmp
fdivrp
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
ret
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
mov
cmps
dec
mov
movs
inc
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
enter
mov
add
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
jmp
(bad)
(bad)
(bad)
retf
xlat
retf
jmp
fmul
jmp
fxch
jmp
fcmovnbe
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
jecxz
(bad)
jmp
(bad)
in
call
loop
out
jmp
lock
call
push
lock
hlt
icebp
in
push
icebp
in
push
icebp
in
push
repnz
push
repz
repz
hlt
icebp
push
repz
repz
repnz
push
icebp
in
push
icebp
in
push
icebp
in
push
lock
repnz
jmp
jmp
(bad)
out
jmp
in
call
(bad)
jmp
(bad)
call
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
aam
(bad)
(bad)
(bad)
(bad)
fcmovbe
ret
iret
mov
call
int3
mov
call
leave
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
into
shr
mov
test
retf
dec
mov
movs
inc
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
add
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fst
(bad)
(bad)
enter
retf
(bad)
(bad)
retf
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
jecxz
out
jmp
icebp
out
jmp
push
lock
push
icebp
in
push
icebp
out
push
repz
hlt
icebp
push
cmc
repnz
cmc
repnz
div
push
cmc
repnz
cmc
repnz
hlt
icebp
push
repz
icebp
out
push
icebp
in
push
lock
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
loope
jmp
fdivrp
jmp
loop
jmp
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
into
shr
mov
test
retf
dec
mov
movs
inc
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
mov
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
aad
(bad)
(bad)
retf
(bad)
(bad)
retf
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
in
out
(bad)
in
call
loop
out
jmp
in
lock
call
push
lock
push
icebp
in
push
icebp
in
push
repz
hlt
icebp
push
div
(bad)
clc
div
(bad)
clc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
div
push
div
push
hlt
icebp
push
repz
icebp
in
push
icebp
in
push
lock
push
out
jmp
jmp
(bad)
out
jmp
loop
in
call
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
into
shr
mov
test
retf
dec
mov
movs
inc
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
scas
xchg
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lds
(bad)
(bad)
leave
(bad)
(bad)
retf
(bad)
(bad)
retf
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
in
out
(bad)
in
call
loop
out
jmp
icebp
out
jmp
push
icebp
in
push
icebp
in
push
repnz
push
hlt
icebp
push
div
(bad)
clc
div
(bad)
stc
div
(bad)
cli
clc
idiv
cli
stc
idiv
cli
clc
idiv
stc
div
(bad)
clc
div
push
div
push
hlt
icebp
push
repnz
push
icebp
in
push
icebp
in
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
inc
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
scas
xchg
push
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
div
inc
add
add
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
leave
(bad)
(bad)
retf
(bad)
(bad)
retf
jmp
fxch
jmp
fcmove
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
in
out
(bad)
in
call
loop
out
jmp
icebp
out
jmp
push
icebp
in
push
icebp
in
push
repz
cmc
repnz
clc
div
(bad)
stc
div
(bad)
cli
stc
clc
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
cli
stc
clc
(bad)
stc
div
(bad)
clc
div
push
cmc
repnz
repz
icebp
in
push
icebp
in
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
loopne
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
scas
xchg
call
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aam
xchg
mov
mov
retf
jmp
fmul
jmp
fxch
jmp
fcmovnbe
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
jecxz
out
jmp
push
in
out
repnz
jmp
icebp
in
push
icebp
out
push
repz
cmc
repnz
clc
div
(bad)
cli
clc
idiv
sti
cli
stc
(bad)
sti
cli
stc
(bad)
std
cld
cld
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
icebp
out
push
icebp
in
push
lock
push
out
jmp
jmp
(bad)
out
jmp
loop
in
out
(bad)
jmp
fdivrp
jmp
loop
jmp
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
xchg
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
repz
add
xchg
mov
(bad)
xlat
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
js
scas
cmps
cwde
(bad)
fst
leave
jmp
fxch
jmp
fcmovnbe
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
jecxz
out
jmp
push
in
out
repnz
jmp
icebp
in
push
repnz
push
hlt
icebp
push
div
(bad)
stc
div
(bad)
cli
stc
idiv
sti
cli
stc
(bad)
std
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
cld
(bad)
sti
cli
stc
(bad)
cli
stc
idiv
stc
div
push
div
push
hlt
icebp
push
repnz
push
icebp
in
push
lock
push
out
jmp
jmp
(bad)
out
jmp
loop
in
out
(bad)
jmp
fdivrp
jmp
loop
jmp
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
push
jnp
xchg
mov
jecxz
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
js
popf
xchg
test
ret
mov
iret
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
in
(bad)
jmp
fdivrp
in
out
(bad)
in
call
jecxz
out
jmp
push
in
out
repnz
jmp
icebp
in
push
icebp
out
push
repz
cmc
repnz
clc
div
(bad)
cli
clc
idiv
sti
cli
stc
(bad)
sti
cli
stc
(bad)
std
cld
cld
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
cli
clc
idiv
clc
div
push
cmc
repnz
repz
icebp
out
push
icebp
in
push
lock
push
out
jmp
jmp
(bad)
out
jmp
loop
in
out
(bad)
jmp
fdivrp
jmp
loop
jmp
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovbe
sar
iret
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
inc
mov
inc
mov
(bad)
mov
cdq
xchg
xchg
mov
xchg
mov
xlat
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lds
sbb
xchg
mov
stos
mov
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
int3
ret
nop
cmp
call
jmp
fmul
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
in
(bad)
in
out
(bad)
in
call
loop
out
jmp
icebp
out
jmp
push
icebp
in
push
icebp
in
push
repz
cmc
repnz
clc
div
(bad)
stc
div
(bad)
cli
stc
clc
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
sti
cli
stc
(bad)
cli
stc
clc
(bad)
stc
div
(bad)
clc
div
push
cmc
repnz
repz
icebp
in
push
icebp
in
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
loopne
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
mov
call
leave
mov
ror
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
dec
mov
mov
push
xchg
test
xchg
mov
xchg
mov
cmps
popf
mov
lock
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
into
enter
jp
xchg
mov
mov
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cli
stc
inc
shl
xchg
mov
xchg
mov
scas
cmps
cdq
dec
shl
jmp
in
(bad)
in
out
(bad)
in
call
loop
out
jmp
icebp
out
jmp
push
icebp
in
push
icebp
in
push
repnz
push
hlt
icebp
push
div
(bad)
clc
div
(bad)
stc
div
(bad)
cli
clc
idiv
cli
stc
idiv
cli
clc
idiv
stc
div
(bad)
clc
div
push
div
push
hlt
icebp
push
repnz
push
icebp
in
push
icebp
in
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
leave
(bad)
fst
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
mov
iret
shr
into
shr
mov
test
retf
dec
mov
movs
(bad)
mov
mov
cmp
mov
xchg
mov
cmps
pushf
mov
loope
aad
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
inc
mov
js
xchg
mov
xchg
mov
ret
(bad)
sti
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
clc
inc
shl
xchg
mov
xchg
mov
xchg
mov
stos
mov
mov
loope
sar
in
call
loop
out
jmp
in
lock
call
push
lock
push
icebp
in
push
icebp
in
push
repz
hlt
icebp
push
div
(bad)
clc
div
(bad)
clc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
div
push
div
push
hlt
icebp
push
repz
icebp
in
push
icebp
in
push
lock
push
out
jmp
jmp
(bad)
out
jmp
loop
in
call
(bad)
jmp
jmp
loope
jmp
(bad)
jmp
(bad)
jmp
fst
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
into
shr
mov
cmps
(bad)
mov
sahf
mov
cwde
(bad)
jle
xchg
mov
xchg
mov
xchg
mov
test
(bad)
(bad)
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
jmp
mov
xchg
mov
sahf
xchg
mov
ror
enter
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
xchg
mov
xchg
mov
xchg
mov
call
inc
mov
enter
loope
icebp
out
jmp
push
lock
push
icebp
in
push
icebp
out
push
repz
hlt
icebp
push
cmc
repnz
cmc
repnz
div
push
cmc
repnz
cmc
repnz
hlt
icebp
push
repz
icebp
out
push
icebp
in
push
lock
push
lock
icebp
out
jmp
(bad)
out
jmp
in
call
loope
jmp
fdivrp
jmp
loop
jmp
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmove
jmp
fxch
(bad)
(bad)
retf
(bad)
(bad)
retf
(bad)
(bad)
enter
(bad)
rol
(bad)
fcmovbe
sar
into
mov
call
retf
aam
mov
aam
mov
rol
mov
rol
mov
rol
scas
dec
shr
mov
cdq
jmp
xchg
cmp
mov
xchg
mov
xchg
mov
xchg
mov
test
(bad)
dec
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
jmp
sti
xchg
mov
xchg
mov
xchg
mov
xchg
mov
mov
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
cdq
call
mov
xchg
mov
xchg
mov
xchg
mov
mov
test
lods
dec
enter
(bad)
iret
(bad)
jmp
repnz
push
repz
repz
hlt
icebp
push
repz
repz
repnz
push
icebp
in
push
icebp
in
push
icebp
in
push
lock
repnz
jmp
jmp
(bad)
out
jmp
in
call
(bad)
jmp
(bad)
call
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fxch
jmp
fmul
(bad)
(bad)
retf
(bad)
(bad)
retf
aam
(bad)
(bad)
(bad)
(bad)
fcmovbe
ret
iret
mov
call
int3
mov
inc
mov
mov
jmp
xchg
test
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
popf
xchg
cmp
test
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
fstp
aad
mov
mov
sahf
xchg
mov
xchg
mov
xchg
mov
xchg
mov
lods
cmps
fwait
clc
(bad)
ror
(bad)
cli
cli
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jmp
mov
movs
jmp
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cdq
mov
stos
movs
xchg
push
stos
inc
mov
mov
(bad)
(bad)
sar
jecxz
fcos
out
fdivr
call
out
(bad)
in
out
(bad)
in
call
loop
in
out
(bad)
jmp
fdivrp
jmp
jmp
loope
jmp
(bad)
jmp
fst
jmp
fxch
(bad)
fst
retf
rol
call
into
sar
enter
shl
mov
stos
pushf
jmp
sahf
mov
mov
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
pushf
mov
mov
ror
push
cmc
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
sar
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cwde
pop
call
aam
push
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
(bad)
in
jmp
retf
(bad)
mov
mov
test
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cwde
pop
call
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
sahf
xchg
test
stos
mov
movs
dec
les
push
icebp
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
jmp
in
dec
les
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
mov
mov
(bad)
fcmovbe
sar
div
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
sti
push
icebp
out
(bad)
call
fcmovnbe
call
ror
dec
lds
mov
cmps
jmp
movs
xchg
jmp
sahf
nop
jmp
cwde
mov
popf
xchg
test
call
call
pop
call
cwde
mov
mov
pushf
mov
cmps
lahf
xchg
jmp
cmps
cdq
push
mov
mov
(bad)
(bad)
sar
jmp
hlt
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
enter
test
jg
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
movs
popf
(bad)
repz
lds
(bad)
out
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
stc
clc
jmp
in
call
ror
inc
mov
fwait
call
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
lea
cmps
mov
stos
dec
enter
aad
jmp
loopne
(bad)
in
jmp
(bad)
clc
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
cld
push
bnd
in
(bad)
fstp
aad
ror
leave
inc
mov
popf
call
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
lea
mov
mov
mov
inc
mov
mov
dec
retf
ror
(bad)
call
ror
(bad)
fcom
iret
(bad)
fcmovnu
sar
(bad)
xlat
jmp
(bad)
(bad)
fstp
aad
fcmovbe
sar
(bad)
ror
call
iret
leave
dec
retf
ret
dec
enter
les
sar
scas
test
jmp
xchg
test
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
js
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
cmp
(bad)
(bad)
inc
aas
add
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
ud0
clc
ud0
clc
pop
(bad)
push
aas
(bad)
push
aas
(bad)
push
jg
push
jg
push
inc
push
clc
add
lock
add
loopne
push
add
push
add
push
add
push
add
push
add
jg
add
jg
add
jg
add
push
add
push
add
push
add
push
add
lock
add
add
push
add
push
add
push
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
psubb
add
clc
add
paddb
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
clc
add
push
add
push
add
push
add
push
add
jg
add
jg
add
jg
add
push
add
push
add
push
rol
lock
add
loopne
push
clc
pop
push
inc
push
jg
push
jg
push
aas
(bad)
push
pop
(bad)
push
pop
(bad)
push
ud0
lock
add
ud0
lock
add
pop
(bad)
push
pop
(bad)
push
pop
(bad)
push
jg
push
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
or
add
and
jb
outs
addr16
add
add
add
inc
or
push
add
add
add
inc
push
dec
inc
add
add
das
add
movs
add
add
inc
ins
outs
bound
add
add
add
add
add
push
sbb
add
add
and
add
add
add
add
add
add
add
add
sbb
add
enter
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
repnz
sbb
add
add
add
add
add
add
add
add
add
add
add
test
or
pop
add
add
add
test
or
add
or
icebp
add
add
add
add
daa
add
dec
add
jne
test
push
add
add
add
cli
add
push
push
inc
push
push
add
push
mov
push
add
push
mov
push
add
push
mov
push
add
pop
mov
push
add
pop
mov
push
add
push
push
add
mov
push
add
add
add
pop
fwait
pop
push
add
pop
mov
push
add
pop
mov
push
add
add
or
add
add
dec
or
add
add
ror
add
add
or
or
or
add
or
or
or
add
add
add
add
or
or
add
or
pushf
add
add
or
or
or
push
add
add
add
ror
add
add
or
or
or
add
add
add
add
add
add
add
or
add
add
add
add
iret
add
add
add
or
adc
add
add
add
add
add
add
or
add
out
add
add
push
out
add
add
out
add
add
add
add
leave
or
add
mov
push
add
mov
cs
push
mov
push
mov
push
mov
setl
push
add
setl
push
add
nop
push
add
sbb
sldt
or
xchg
push
add
add
add
cmovb
and
jmp
inc
push
or
sti
push
add
add
adc
adc
test
or
(bad)
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
into
adc
adc
adc
and
sub
inc
push
and
xor
add
test
and
jns
inc
push
push
add
adc
(bad)
adc
add
mov
adc
push
add
add
add
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
push
leave
add
add
rol
or
add
add
add
add
add
add
add
add
xor
add
popf
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
jno
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
ds
pop
add
jle
xchg
add
add
add
add
add
add
push
push
stos
add
add
add
xchg
in
add
add
enter
add
add
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
in
sub
add
add
add
add
add
add
add
adc
lea
add
add
add
adc
mov
add
add
add
add
add
add
sub
add
add
add
add
add
add
les
retf
add
sbb
and
add
add
add
sbb
(bad)
cmp
add
add
add
cmp
add
add
add
inc
cmp
add
add
add
dec
cmp
add
add
add
mov
add
add
xchg
or
push
mov
sbb
xchg
cmp
add
add
add
pushf
cmp
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
in
add
add
add
add
add
in
add
add
in
add
add
in
add
add
in
add
imul
adc
in
add
jno
int
in
add
call
add
lock
das
or
add
aaa
or
add
add
push
or
add
add
add
add
add
add
add
add
add
add
or
in
add
sub
test
add
or
add
add
add
and
mov
push
or
add
add
add
add
or
leave
add
xor
add
fld
jg
cmp
loope
lea
lock
add
add
add
jmp
add
add
or
jns
(bad)
cmc
add
add
or
add
add
adc
outs
add
add
or
add
add
add
add
jle
imul
leave
add
mov
adc
in
add
adc
or
add
add
add
(bad)
or
stos
add
xor
scas
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
and
mov
push
add
out
dec
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
prefetch
popa
add
or
and
es
cmp
dec
or
iret
or
add
push
or
in
add
imul
imul
jns
jmp
add
or
or
adc
mov
sub
sbb
xchg
add
or
stc
or
in
add
imul
test
add
jbe
xor
mov
call
add
or
add
add
mov
loopne
test
add
add
scas
push
add
rol
add
add
add
push
bound
rol
add
popa
add
or
add
cmp
adc
retf
add
fld
and
je
jmp
add
in
add
mov
in
add
xchg
add
add
add
mov
in
add
jno
in
add
rol
add
jns
in
add
cdq
add
add
mov
add
add
add
add
add
add
add
add
or
setno
or
in
add
setle
xchg
add
add
add
shld
xchg
add
movntq
imul
mov
icebp
shrd
add
adc
movntq
mov
fisttp
pusha
add
add
adc
xor
in
add
add
add
add
pusha
add
add
jg
out
jno
mov
rol
add
add
add
add
iret
add
mov
(bad)
add
add
fadd
jno
repz
add
push
adc
add
in
add
add
add
jmp
xchg
add
add
repnz
add
pusha
add
jne
fild
jns
in
add
add
xchg
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
ss
add
daa
add
add
cmp
adc
adc
xchg
adc
adc
xchg
add
add
add
add
fld
cmc
adc
adc
add
jno
sbb
add
adc
jno
push
adc
loope
push
add
add
icebp
add
add
stc
add
add
sbb
in
add
sbb
fst
lods
add
add
adc
add
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
cmp
or
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
ins
add
add
fadd
dec
add
fadd
mov
add
add
add
add
xchg
add
add
add
push
inc
add
add
add
add
add
jp
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
les
add
add
add
cmps
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
repnz
add
add
add
add
add
add
or
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
adc
add
add
add
cmp
outs
fs
gs
arpl
jo
gs
outs
jb
cs
add
inc
inc
push
jns
add
jbe
jb
popa
cs
ins
imul
outs
ins
jae
inc
popa
arpl
jo
gs
outs
jb
push
push
inc
add
imul
jb
addr16
ins
add
jae
jne
arpl
add
jbe
jb
popa
cs
ins
imul
outs
ins
jae
inc
popa
arpl
jo
gs
outs
jb
cs
jb
jo
jb
imul
outs
jb
imul
gs
add
jne
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
push
arpl
popa
ins
jne
pop
pop
add
inc
add
dec
push
inc
push
push
inc
push
add
dec
dec
dec
push
dec
add
popa
ins
add
jae
gs
cs
popa
je
add
jae
gs
cs
popa
je
cs
jno
inc
ins
imul
ins
inc
outs
outs
outs
arpl
outs
add
ins
inc
outs
outs
outs
add
arpl
jae
data16
push
jno
push
gs
gs
push
ins
outs
add
arpl
jae
data16
push
jno
push
gs
gs
dec
popa
outs
popa
gs
outs
je
push
ins
outs
add
jb
gs
jae
ins
push
gs
gs
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
popa
je
bound
add
imul
push
push
dec
pop
push
popa
ins
outs
outs
ja
jb
add
bound
inc
pop
push
popa
ins
outs
outs
ja
jb
add
jns
add
popa
jne
je
popa
outs
addr16
add
je
dec
push
gs
outs
jb
add
arpl
add
outs
je
jb
jae
dec
popa
imul
outs
popa
add
outs
inc
imul
imul
imul
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
arpl
inc
jbe
outs
je
jb
jae
jae
jbe
inc
popa
imul
gs
inc
imul
outs
inc
popa
imul
gs
inc
imul
outs
inc
imul
je
jb
pop
inc
ins
imul
inc
popa
arpl
jo
bound
ins
imul
imul
bound
push
dec
add
arpl
jo
bound
inc
inc
add
arpl
jae
data16
push
jno
push
gs
gs
inc
outs
outs
outs
arpl
outs
dec
outs
outs
add
arpl
jae
data16
push
jno
push
gs
gs
dec
popa
outs
popa
gs
outs
je
inc
outs
ins
ins
outs
outs
add
jb
gs
gs
popa
addr16
jbe
outs
je
jb
jae
bound
arpl
jo
inc
outs
ins
jo
gs
add
outs
push
gs
outs
jb
pop
inc
ins
imul
je
jb
inc
bound
inc
add
jae
outs
jb
inc
bound
dec
add
jb
outs
je
outs
ins
jo
gs
inc
jbe
outs
je
jb
jae
push
gs
outs
je
outs
ins
jo
gs
add
gs
outs
jb
pop
inc
outs
ins
jo
gs
add
jo
gs
outs
jb
pop
inc
outs
je
jb
bound
je
outs
xor
ins
imul
inc
outs
ins
jo
arpl
ins
imul
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jb
jne
inc
outs
js
addr16
inc
popa
arpl
jo
push
popa
bound
popa
jns
jne
push
popa
outs
gs
add
ins
gs
popa
jns
jne
push
popa
outs
gs
xor
addr16
push
gs
outs
jb
add
outs
inc
imul
add
outs
inc
popa
imul
add
je
outs
js
je
je
imul
imul
popa
bound
add
inc
imul
imul
jne
je
outs
add
outs
inc
imul
imul
popa
jbe
inc
imul
add
jbe
inc
popa
imul
add
outs
inc
imul
je
jb
add
inc
imul
je
jb
add
push
gs
outs
jb
inc
popa
arpl
jo
bound
popa
arpl
jo
bound
bound
gs
outs
jb
add
jo
je
je
jae
push
je
je
jae
je
imul
jne
push
je
imul
ins
push
je
imul
gs
inc
popa
jb
jo
outs
addr16
popa
jb
push
imul
outs
js
jo
arpl
gs
outs
js
add
arpl
gs
outs
js
add
ins
push
je
imul
jae
popa
bound
add
ins
push
je
imul
jae
inc
push
jns
add
ins
bound
outs
js
arpl
push
gs
outs
jb
add
outs
push
gs
imul
bound
outs
ins
jo
arpl
outs
addr16
gs
dec
dec
outs
add
add
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
addr16
fs
je
bound
gs
outs
ja
add
je
fs
je
bound
gs
jne
add
ins
je
jb
add
popa
bound
gs
outs
ja
add
popa
bound
gs
jne
add
outs
fs
add
jo
jae
outs
add
ins
jne
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
jo
gs
outs
jb
add
jb
outs
add
jo
jns
inc
jo
ins
imul
add
je
push
je
jb
jne
push
popa
je
add
ins
gs
imul
gs
dec
outs
imul
arpl
jns
inc
fs
jb
popa
cs
ins
imul
jae
push
outs
jb
add
imul
dec
inc
outs
outs
imul
je
outs
add
dec
outs
ja
jb
inc
jno
popa
ins
jae
push
outs
outs
ins
push
je
imul
jae
je
push
gs
add
je
inc
imul
outs
je
outs
ins
add
je
push
imul
inc
gs
dec
push
gs
jo
gs
imul
jbe
jb
outs
outs
outs
arpl
outs
add
popa
bound
gs
outs
ins
ins
arpl
outs
add
je
inc
popa
je
bound
gs
push
ins
outs
inc
outs
ins
ins
arpl
outs
inc
popa
jae
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
inc
fs
jbe
dec
gs
add
imul
ins
add
arpl
je
outs
outs
add
je
dec
gs
popa
add
jb
popa
je
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
gs
gs
jne
je
ins
ins
push
jae
jb
popa
je
add
jae
gs
cs
dec
add
arpl
jns
inc
gs
imul
push
inc
imul
dec
bound
arpl
ins
ins
arpl
outs
add
je
dec
je
ins
jae
push
imul
push
arpl
outs
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
je
inc
imul
dec
imul
jb
ins
add
je
push
gs
arpl
dec
outs
fs
jae
je
inc
outs
popa
bound
add
dec
jne
ins
dec
jb
ins
jo
jns
inc
gs
imul
jns
popa
ins
add
je
dec
push
gs
jo
gs
imul
pop
dec
outs
addr16
inc
jb
outs
jb
inc
outs
outs
arpl
add
jae
popa
addr16
outs
js
jne
je
outs
jae
inc
popa
arpl
jo
inc
popa
arpl
jo
arpl
outs
push
jns
add
je
inc
arpl
outs
add
arpl
jo
gs
outs
jb
inc
popa
jae
add
je
inc
popa
je
bound
add
je
inc
popa
arpl
jo
gs
popa
ins
add
gs
imul
pop
dec
outs
ja
push
outs
push
je
imul
pop
inc
popa
arpl
jo
gs
gs
jb
jo
imul
pop
dec
gs
imul
jae
je
dec
outs
imul
add
je
dec
outs
arpl
ins
outs
je
ins
add
arpl
jo
gs
arpl
je
ins
add
imul
add
arpl
jo
gs
arpl
imul
pop
inc
gs
arpl
add
je
push
popa
ins
jne
add
jb
gs
gs
popa
addr16
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
outs
ins
jo
gs
add
je
push
gs
outs
je
outs
ins
jo
gs
dec
outs
je
imul
outs
outs
add
jb
outs
je
outs
ins
jo
gs
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
outs
je
outs
ins
jo
gs
add
ins
inc
popa
arpl
jo
inc
bound
je
push
jns
je
ins
cs
popa
je
cs
outs
ins
ins
outs
outs
add
outs
outs
outs
arpl
outs
add
outs
jae
add
ins
add
imul
jo
add
je
push
gs
arpl
dec
outs
fs
addr16
push
gs
arpl
dec
je
ins
add
je
dec
gs
jae
je
inc
imul
push
gs
outs
jb
add
jae
outs
jb
inc
arpl
outs
push
jns
add
je
push
gs
popa
arpl
popa
je
bound
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
je
inc
jo
push
gs
imul
je
dec
je
ins
add
popa
push
popa
bound
push
gs
fs
imul
inc
popa
je
push
outs
ja
outs
ins
ins
arpl
outs
add
je
push
outs
ja
add
popa
push
outs
ja
push
gs
outs
arpl
gs
imul
jns
imul
pop
push
gs
outs
arpl
gs
imul
imul
arpl
outs
add
jb
jo
add
jb
outs
addr16
outs
jne
gs
je
jb
push
jno
push
gs
outs
jb
add
je
push
popa
ins
jne
add
je
dec
popa
js
ins
jne
add
je
push
gs
outs
je
push
jns
je
ins
cs
popa
je
cs
jno
push
gs
gs
add
ins
inc
gs
outs
imul
popa
imul
outs
add
jo
imul
gs
js
gs
imul
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jne
jo
outs
fs
popa
jns
jne
add
jne
jo
jb
dec
outs
imul
add
imul
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
push
outs
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
jae
je
push
popa
bound
outs
jo
dec
ins
popa
add
je
dec
ins
popa
add
arpl
gs
outs
js
imul
add
je
push
imul
add
je
outs
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
jae
je
inc
jne
outs
push
imul
pop
inc
outs
ins
jne
outs
inc
outs
jne
je
push
popa
bound
popa
jns
jne
inc
outs
ins
jne
outs
push
je
ins
gs
outs
ins
ins
arpl
outs
add
je
inc
outs
ins
jne
outs
push
je
ins
gs
inc
outs
ins
jne
outs
push
je
ins
add
jp
push
jns
add
ins
gs
popa
jns
jne
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
push
outs
ja
outs
jne
je
push
popa
bound
popa
jns
jne
push
outs
ja
je
ins
gs
outs
ins
ins
arpl
outs
add
je
push
outs
ja
je
ins
gs
push
outs
ja
je
ins
add
fs
inc
outs
je
jb
inc
outs
ins
bound
outs
js
je
ins
add
je
inc
jb
jo
outs
ja
push
je
ins
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
push
imul
arpl
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
imul
outs
ins
push
je
imul
push
je
imul
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
bound
arpl
arpl
add
je
dec
arpl
add
je
dec
popa
js
ins
imul
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
fs
outs
imul
jb
popa
fs
je
jb
bound
add
xor
gs
inc
outs
outs
imul
ins
inc
outs
outs
imul
je
jb
inc
outs
outs
imul
add
je
dec
outs
addr16
jae
je
inc
imul
ins
ins
push
jae
jb
inc
outs
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
arpl
outs
jb
dec
outs
addr16
popa
outs
popa
addr16
inc
gs
outs
addr16
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jbe
jb
popa
cs
ins
imul
outs
ins
jae
inc
popa
arpl
jo
gs
outs
jb
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jbe
jb
popa
cs
ins
imul
outs
ins
jae
inc
popa
arpl
jo
gs
outs
jb
push
push
inc
cs
popa
imul
gs
jne
arpl
add
add
ins
add
outs
add
outs
add
ins
add
sbb
ins
add
outs
add
outs
add
ins
add
add
add
add
inc
add
inc
add
add
adc
add
add
popa
add
add
pop
jae
add
add
sub
ins
add
arpl
popa
add
add
adc
add
popa
add
add
jae
je
add
add
arpl
imul
add
and
inc
add
ins
add
jae
and
sub
sub
add
popa
add
sub
jl
sub
add
popa
add
jl
inc
add
add
add
imul
jae
and
sub
sub
sub
jl
sub
add
add
pop
inc
add
arpl
imul
add
and
inc
add
ins
add
jae
and
sub
sub
add
add
sub
jl
sub
add
add
jl
inc
add
add
add
imul
jae
and
sub
sub
sub
jl
sub
add
add
and
popa
add
imul
add
push
add
jae
je
outs
add
add
push
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
arpl
imul
add
and
add
je
popa
add
popa
add
add
sub
add
add
popa
add
add
add
add
jne
add
add
add
outs
add
sub
ins
add
popa
add
add
add
jo
jae
ins
add
popa
add
and
bound
popa
add
imul
add
add
inc
add
jae
je
popa
add
add
add
add
add
popa
add
add
sub
add
jne
add
add
add
outs
add
add
add
add
popa
add
add
push
push
add
ins
add
outs
add
outs
add
ins
add
add
add
add
popa
add
add
add
popa
add
imul
add
and
das
add
add
add
jne
add
add
add
outs
add
pop
add
add
xor
add
and
push
add
jne
jb
arpl
add
add
push
add
add
jo
jb
add
jae
cmp
dec
add
imul
popa
add
add
popa
add
add
add
cmp
add
jo
add
cmp
push
add
add
and
dec
add
add
popa
add
add
ja
outs
add
ins
add
add
jb
cmp
push
add
jae
jae
ja
outs
add
add
add
ins
add
add
popa
add
aas
inc
add
arpl
add
je
imul
and
outs
add
arpl
jne
jb
add
add
add
add
jae
popa
add
add
add
add
xor
jge
add
arpl
imul
add
add
sub
add
add
add
sub
add
popa
add
add
add
add
and
add
jb
jae
je
and
add
outs
add
add
ins
add
popa
add
add
add
jo
and
push
add
add
add
je
popa
add
add
add
jo
and
je
add
add
ins
add
popa
add
and
sub
bound
jb
outs
add
jae
add
add
add
add
add
and
ins
add
arpl
je
and
data16
ins
add
and
data16
jb
jae
je
and
add
inc
add
jb
outs
add
and
bound
je
outs
add
popa
add
imul
add
inc
add
pop
add
ins
add
arpl
imul
das
inc
add
jb
outs
add
and
bound
popa
add
imul
add
and
add
je
popa
add
popa
add
add
add
add
or
jb
jb
outs
add
add
jnp
xor
jge
and
bound
popa
add
imul
add
and
jae
add
add
xor
add
add
popa
add
add
add
add
xor
jge
add
add
add
add
add
add
xor
jge
add
pop
add
add
dec
add
add
jns
jns
jns
and
push
add
add
inc
add
jae
imul
and
jb
outs
add
and
inc
add
arpl
imul
add
inc
add
pop
add
push
add
or
add
add
and
arpl
imul
add
and
outs
add
add
ins
add
popa
add
je
and
and
add
inc
add
arpl
imul
add
and
arpl
outs
add
jo
ins
add
je
add
xor
add
add
popa
add
add
add
imul
and
add
jbe
outs
add
add
outs
add
add
add
and
je
popa
add
popa
add
add
add
outs
add
add
outs
add
outs
add
and
popa
add
imul
add
and
arpl
outs
add
jo
ins
add
je
add
add
inc
dec
add
add
and
add
jb
jae
je
and
push
add
add
add
je
popa
add
add
add
add
jb
outs
add
jae
add
add
add
add
add
das
inc
add
jb
outs
add
and
inc
add
je
je
outs
add
and
jb
add
je
outs
add
add
add
add
sub
jb
jne
add
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
and
popa
add
imul
add
and
jb
add
je
outs
add
add
add
and
jno
ins
add
imul
dec
add
arpl
popa
add
add
outs
add
add
inc
add
arpl
imul
add
push
add
jae
je
outs
add
add
outs
add
outs
add
pop
dec
add
add
arpl
popa
add
add
ins
add
add
jnp
xor
jge
pop
add
xor
jge
add
add
add
jnp
xor
jge
pop
add
add
add
jnp
xor
jge
pop
add
xor
jge
pop
add
add
add
add
add
inc
add
jb
outs
add
and
jb
add
je
outs
add
add
add
add
daa
push
add
jae
je
outs
add
add
add
outs
add
jo
ins
add
je
add
add
add
sbb
add
add
add
outs
add
jb
arpl
add
add
jb
imul
push
add
je
add
jbe
outs
add
jb
add
add
add
pop
inc
add
ins
add
ins
add
je
add
add
add
adc
jb
jo
inc
add
arpl
imul
add
add
jo
imul
jne
jb
add
outs
add
xor
add
bound
je
outs
add
popa
add
imul
add
inc
add
add
bound
je
outs
add
imul
push
add
inc
add
arpl
imul
adc
jb
outs
add
jae
add
add
add
add
sbb
add
add
ins
add
push
add
inc
add
arpl
imul
sbb
add
add
ins
add
push
add
inc
add
arpl
imul
and
je
push
add
and
jae
popa
add
add
add
imul
cmp
add
je
popa
add
ins
add
dec
add
jns
outs
add
je
push
add
outs
add
ins
add
add
adc
jo
push
add
jae
je
outs
add
add
rsqrtps
add
je
outs
add
add
adc
outs
add
outs
add
jo
popa
add
je
add
inc
add
ins
add
popa
add
je
and
add
bound
je
outs
add
add
popa
add
jb
inc
add
ins
add
add
jo
popa
add
jb
add
bound
push
add
jae
je
outs
add
add
pop
jo
imul
jne
jb
add
outs
add
xor
add
outs
add
add
je
outs
add
add
and
je
outs
add
imul
push
add
push
add
jae
je
outs
add
add
and
add
add
ins
add
push
add
push
add
jae
je
outs
add
add
and
add
add
jae
je
outs
add
add
popa
add
imul
add
add
push
add
ins
add
arpl
je
and
bound
popa
add
imul
add
and
data16
ins
add
cmp
add
add
arpl
imul
add
and
inc
add
ins
add
jae
and
sub
sub
add
popa
add
sub
and
sub
add
add
sub
jl
sub
add
popa
add
cmp
sub
add
add
jl
inc
add
add
add
imul
jae
and
sub
sub
sub
jl
sub
add
add
and
ins
add
arpl
je
and
inc
add
arpl
imul
add
and
inc
add
ins
add
add
add
arpl
imul
add
and
inc
add
ins
add
jae
and
sub
sub
add
popa
add
sub
and
sub
add
add
sub
jl
sub
add
popa
add
cmp
sub
add
add
jl
inc
add
add
add
imul
jae
and
sub
sub
sub
jl
sub
add
add
cmp
add
add
je
and
data16
ins
add
and
data16
jb
and
jae
popa
add
imul
and
bound
popa
add
imul
add
add
add
jo
push
add
add
add
add
jae
je
popa
add
add
push
add
add
jo
xor
add
jo
jb
outs
add
inc
add
jb
add
je
outs
add
ins
add
je
jb
imul
je
popa
add
add
inc
add
push
add
jo
add
pop
aas
add
add
add
or
push
add
add
push
add
add
arpl
outs
add
add
dec
add
imul
imul
inc
add
je
popa
add
popa
add
add
add
popa
add
imul
add
das
add
add
je
outs
add
add
add
je
imul
je
jns
add
add
add
jb
jbe
popa
add
add
ins
add
add
je
add
add
ins
add
add
popa
add
imul
add
push
add
jae
je
outs
add
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
je
popa
add
popa
add
add
add
ja
outs
add
pop
add
je
popa
add
popa
add
add
jne
jo
add
add
sahf
inc
inc
cmp
mov
or
xor
mov
push
or
push
adc
add
add
add
add
add
add
add
push
push
add
adc
or
or
add
adc
sbb
adc
push
and
add
and
and
add
and
sbb
sub
and
add
sub
add
add
add
push
adc
add
adc
add
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
sbb
adc
add
adc
add
add
push
adc
push
adc
add
adc
add
adc
add
add
ins
or
aad
cmp
add
jno
or
adc
or
adc
or
adc
and
add
push
and
add
sub
add
add
add
add
push
add
add
add
add
push
add
adc
and
add
or
adc
sbb
adc
and
adc
sbb
and
add
add
and
add
sbb
add
adc
add
and
adc
add
push
add
add
sbb
pop
or
push
adc
push
push
push
adc
sbb
add
sub
add
add
add
push
add
add
gs
and
add
and
add
push
push
push
or
add
sub
push
adc
adc
add
or
add
push
push
add
push
push
sbb
pop
and
add
adc
adc
sbb
adc
add
push
and
add
and
and
add
adc
or
and
adc
pop
add
push
add
add
push
and
add
cmp
add
inc
adc
or
dec
or
add
add
push
pop
and
adc
and
adc
adc
sbb
add
adc
adc
adc
add
adc
push
adc
or
add
sub
add
adc
adc
add
or
and
add
add
add
adc
add
or
and
add
adc
and
adc
add
sub
add
lods
or
add
adc
and
adc
or
xor
and
add
cmp
add
sbb
and
add
push
and
add
or
adc
add
or
sbb
push
and
add
adc
adc
add
and
xor
add
add
gs
add
push
add
add
add
or
add
adc
sub
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
and
adc
add
adc
adc
and
sbb
adc
pop
add
and
add
or
add
add
add
add
add
and
ins
outs
outs
ja
jb
and
arpl
jo
push
gs
outs
jb
and
imul
add
add
add
add
inc
fs
jb
popa
add
adc
add
jne
push
gs
outs
jb
add
adc
add
ret
fs
jb
popa
and
xor
xor
add
add
and
xor
xor
xor
sub
sub
sub
xor
data16
xor
add
or
add
xor
xor
xor
xor
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
imul
dec
add
add
add
add
cdq
add
add
jecxz
add
lds
add
inc
push
mov
sti
clc
movs
(bad)
dec
mov
adc
add
add
push
cmp
jbe
ins
outs
jo
outs
je
inc
fs
jb
popa
pop
push
outs
jne
arpl
pop
inc
gs
ins
outs
jo
inc
fs
jb
popa
cs
ins
imul
jbe
jb
popa
cs
ins
imul
outs
ins
jae
ja
outs
inc
popa
arpl
jo
gs
outs
jb
push
push
inc
pop
outs
bound
js
ss
push
gs
gs
jae
pop
inc
popa
arpl
jo
gs
outs
jb
cs
bound
add
add
jecxz
add
jecxz
add
and
add
jecxz
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
