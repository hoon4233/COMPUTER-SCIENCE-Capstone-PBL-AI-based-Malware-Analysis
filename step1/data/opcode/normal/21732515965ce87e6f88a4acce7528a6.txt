out
(bad)
in
(bad)
mov
mov
or
lds
(bad)
and
pop
add
or
cs
and
add
add
sbb
mov
push
add
pop
ret
(bad)
and
test
push
pop
pop
mov
popa
mov
pop
call
loopne
fisttp
or
jmp
pop
call
or
outs
sahf
jecxz
in
imul
and
cs
add
jns
push
mov
mov
inc
xor
stos
int3
add
push
(bad)
aas
fdiv
mov
mov
add
add
or
(bad)
std
jg
dec
popf
pop
pop
mov
pop
ret
dec
cmp
je
push
adc
mov
pop
ret
push
mov
xor
cmp
je
push
out
pop
add
jne
push
adc
mov
arpl
mov
xchg
xchg
rcr
add
xor
add
cld
jns
sbb
jno
cld
fdivr
fisttp
and
xor
xor
mov
pop
(bad)
dec
sub
loop
push
or
cmp
jne
mov
mov
jmp
shl
fnstenv
or
mov
lea
fbld
hlt
cmp
jne
sbb
jne
hlt
clc
call
fcmovu
pop
pop
sahf
ret
push
movs
jmp
mov
test
je
mov
jl
adc
inc
jb
push
xor
test
xor
push
lock
sub
push
lea
dec
jne
or
repz
or
and
add
or
sub
jb
fs
fs
pop
pop
ret
add
in
int3
add
dec
cld
push
mov
push
push
push
xor
(bad)
inc
push
push
int3
mov
lea
idiv
(bad)
(bad)
mov
mov
clc
ss
loope
or
push
mov
test
je
push
dec
sub
pop
and
jne
pop
or
xor
fmul
jbe
add
cdq
push
push
dec
or
ins
mov
rcr
cmp
dec
mov
mov
fldcw
dec
mov
not
xchg
pop
fwait
loopne
inc
aad
fimul
xchg
ja
push
mov
fwait
or
cmp
jne
js
lock
(bad)
mov
jge
retf
test
jo
cli
cmp
aaa
push
mov
lods
js
mov
xchg
lock
je
push
dec
push
dec
cmps
pop
mov
sub
out
repnz
je
sub
push
jmp
xor
pop
mov
mov
mov
test
(bad)
(bad)
or
push
loopne
mov
mov
add
dec
popa
push
inc
cmp
jb
jmp
jl
push
or
push
push
fmul
mov
jo
xor
lods
mov
mov
cmovs
ret
or
push
push
adc
pop
rcl
sbb
jnp
int
add
dec
cmps
mov
sub
sbb
push
je
test
and
sub
inc
adc
retf
pop
cmp
je
push
outs
xchg
pop
inc
mov
cmp
push
xor
push
mov
xor
dec
and
stc
cmp
inc
sbb
cmp
or
sbb
jne
inc
daa
jae
inc
add
imul
mov
mov
dec
mov
sub
dec
pusha
push
mov
add
test
fcomp
push
sub
xchg
es
adc
dec
or
imul
sub
sbb
mov
mov
cmp
cdq
add
(bad)
jle
jnp
xor
adc
fidiv
mov
pop
adc
imul
sbb
push
and
cmp
xchg
add
inc
xor
jb
ja
cmp
stc
imul
and
and
adc
fdiv
xchg
(bad)
xor
push
add
push
cmp
mov
mov
push
xor
add
ror
cs
lea
mov
inc
dec
jne
sub
lock
add
add
lock
shl
and
jge
sbb
cld
les
ret
add
or
not
mov
add
sub
add
push
jb
mov
(bad)
sub
xor
aaa
mov
jge
add
sub
sbb
inc
(bad)
push
fwait
dec
fs
adc
add
sub
or
dec
repz
ret
sti
mov
sbb
push
sbb
mov
out
add
lea
pop
(bad)
inc
pop
add
in
fadd
repz
rol
mov
add
rcl
push
xor
mov
mov
pop
js
xor
clc
sbb
add
leave
in
mov
cmps
call
inc
add
push
cmp
xor
(bad)
shl
and
or
push
movs
mov
test
and
popf
fild
test
fwait
sbb
xor
xor
and
jmp
xor
out
mov
sbb
jnp
pop
cmp
xlat
jnp
mov
fnstenv
mov
mov
daa
fstp
jp
push
test
mov
popf
push
xchg
or
push
fmul
loopne
xchg
js
mov
cwde
inc
jae
xor
mov
jg
scas
xchg
and
or
cmps
push
sbb
(bad)
and
cmp
cmp
arpl
push
out
dec
mov
or
jmp
sbb
jmp
adc
leave
sahf
aaa
fidiv
push
sahf
movlps
lds
shl
mov
sbb
dec
mov
fdiv
push
mov
mov
xor
jl
fwait
aad
jg
fs
xor
sub
mov
cmp
xchg
pop
rcl
cmp
rol
xor
lds
inc
jle
fiadd
div
push
or
push
add
pop
ret
mov
es
mov
fwait
stos
fstp
push
jae
mov
push
add
mov
rcr
shl
adc
dec
cmp
xchg
ja
cmp
jb
cmp
pop
lock
jbe
dec
je
dec
popa
mov
std
mov
test
push
mov
adc
jmp
pop
(bad)
jnp
push
aas
scas
aam
lea
sbb
pop
cmp
adc
loopne
jmp
push
mov
jne
rcr
les
mov
test
je
adc
jnp
mov
push
leave
add
push
ins
outs
xchg
add
rcr
mov
mov
lea
test
mov
clc
or
jge
pop
imul
ret
in
or
mov
xchg
scas
push
sbb
cmp
hlt
sar
or
jecxz
jmp
div
je
adc
push
mov
fist
cmp
cmp
jne
mov
inc
cmp
jb
fstp
ss
je
or
jbe
xor
push
loopne
adc
pop
sub
push
add
loope
in
pop
es
adc
fadd
std
lock
push
push
dec
sbb
or
and
lock
jg
int3
out
sbb
clc
jp
or
jle
jmp
adc
in
ret
dec
or
jbe
sti
adc
pop
inc
adc
inc
or
mov
sub
mov
int3
rcl
loop
pop
pop
mov
inc
jae
ror
cmps
out
popa
pop
push
(bad)
mov
jmp
add
sbb
mov
inc
or
add
popa
fimul
add
cdq
and
lds
push
mov
and
or
mov
push
mov
inc
adc
or
cmc
mov
arpl
fs
leave
cld
pop
pop
or
mov
push
mov
ret
pop
mov
xor
mov
clc
mov
xor
aaa
cmp
jle
push
cmp
fld
xor
cmp
scas
push
popa
neg
mov
push
push
mov
or
mov
sbb
cmps
rcr
pop
cld
and
pop
adc
cmp
ret
hlt
imul
push
call
cmp
test
push
pop
pop
sbb
jle
shl
push
jmp
js
push
mov
inc
in
pop
call
add
cmp
jne
pop
call
or
or
push
sbb
inc
sbb
call
pop
mov
ret
mov
je
sbb
cmp
push
arpl
clc
sub
sub
sar
push
or
out
mov
mov
shl
add
cs
add
lods
sbb
push
add
mov
jne
(bad)
fsubr
jmp
sti
test
jmp
je
or
nop
dec
push
add
shr
push
pop
cmp
cs
mov
adc
nop
inc
add
sub
jmp
mov
jge
push
jmp
push
xor
add
pop
jo
scas
sti
clc
outs
lods
cmp
pop
out
push
push
(bad)
add
pusha
push
push
fdiv
jnp
push
out
inc
aam
pop
test
adc
nop
xor
mov
div
add
lds
cmp
int3
je
mov
mov
xchg
add
cmp
iret
and
mov
push
or
sbb
and
push
sub
mov
sbb
out
mov
sub
gs
jo
loope
sub
push
(bad)
mov
call
push
push
push
call
imul
out
push
jbe
fstp
ret
daa
aaa
stos
mov
bound
jecxz
jmp
cmp
push
mov
dec
fcmovnu
jnp
xor
scas
add
mov
clc
sub
call
mov
pop
mov
xor
cmp
lock
or
mov
mov
push
lock
jle
jne
push
or
das
or
push
popf
and
pop
push
push
loopne
push
outs
xor
jge
fcomp
push
or
xor
push
jns
(bad)
loop
cmp
and
push
fisubr
xor
dec
pop
adc
enter
jns
xor
sub
pop
pop
pop
pop
and
faddp
mov
xor
cmp
xchg
leave
call
sub
shr
(bad)
push
aaa
mov
add
aaa
sbb
xor
ror
mov
idiv
jbe
dec
add
mov
mov
push
mov
pop
add
jecxz
lock
cmp
jb
mov
push
sbb
inc
call
mov
sbb
xor
mov
sub
or
aad
adc
push
push
dec
push
mov
and
cmp
mov
ror
lds
adc
dec
inc
gs
test
les
lods
outs
js
repnz
jb
add
je
push
adc
das
ins
test
push
lea
movs
push
popa
mov
ror
not
xchg
add
sbb
jb
jmp
mov
push
push
rcl
dec
mov
xor
push
sub
push
or
sar
push
cmc
sub
push
sar
push
jmp
cmp
(bad)
push
push
pop
mov
pop
lea
push
mov
out
shr
adc
les
sub
sar
inc
aaa
jmp
(bad)
sbb
int3
cld
add
mov
inc
cmps
add
call
jo
lea
or
push
push
pop
jae
les
pop
mov
xor
pop
jb
and
and
loop
cmp
mov
add
repz
iret
sub
sbb
push
add
sub
push
lea
loopne
sub
cmps
iret
call
ror
pop
(bad)
adc
add
push
push
je
mov
and
jns
mov
inc
cmp
nop
push
mov
and
hlt
fld
movhps
mov
mov
inc
shr
xchg
adc
pop
cmp
js
cwde
sbb
mov
sub
mov
test
(bad)
mov
cmovb
push
ret
pop
push
adc
push
adc
jne
stos
pop
pop
ficomp
loope
jecxz
push
dec
int3
mov
xor
xor
push
mov
xor
jns
add
or
inc
and
add
cmp
xor
rcl
push
dec
jo
js
mov
imul
ficomp
cwde
stc
sub
loopne
push
and
jp
ins
aam
int3
sub
aam
or
aad
rol
cmp
popa
mov
adc
inc
movs
nop
xor
cmp
add
ja
xor
or
stos
mov
sbb
daa
pushf
(bad)
sahf
daa
js
add
pusha
scas
sbb
mov
mov
mov
xor
push
and
popa
wbinvd
stos
add
adc
repnz
adc
cmp
bound
jae
popf
mov
nop
not
xchg
adc
mov
js
icebp
or
xchg
or
inc
sbb
sar
xor
xchg
xchg
fdiv
dec
test
fstp
add
mov
rcl
sahf
data16
and
and
or
adc
dec
jo
in
out
es
push
imul
jl
mov
lea
xchg
push
or
xor
popf
jge
inc
call
and
xchg
and
int3
into
dec
mov
adc
sbb
ret
fdecstp
outs
out
or
push
fdiv
inc
push
cld
push
ss
and
add
xchg
inc
ss
cmp
movsx
mov
jmp
test
in
dec
pop
mov
mov
pop
popf
out
xchg
sar
mov
dec
fs
mov
push
push
inc
push
je
lock
push
push
sbb
test
js
or
sub
or
fs
push
sub
shr
pop
loopne
adc
mov
test
push
cmp
je
jg
jne
mov
mov
test
lea
fwait
lods
rcl
test
mov
je
mov
mov
xchg
out
push
outs
shr
push
sub
repnz
push
or
sbb
std
data16
inc
sahf
jne
lea
or
pop
les
push
sbb
dec
add
cld
cld
int
jl
cld
je
cld
cld
das
mov
cld
push
adc
push
jge
jmp
pop
mov
popa
aaa
nop
adc
sbb
fdivr
ror
cmp
mov
out
mov
mov
xor
sbb
and
aaa
lds
or
add
jns
add
add
dec
add
pop
mov
and
xchg
adc
xchg
mov
and
cmp
push
test
push
jmp
add
sbb
push
dec
int
div
je
or
je
or
sub
and
xchg
lods
lods
mov
das
adc
add
jne
jle
dec
or
push
or
aas
add
je
xor
add
nop
jne
sbb
sbb
inc
adc
int3
in
push
sub
jle
por
(bad)
adc
out
dec
cmp
pop
enter
xor
pop
pop
fdiv
xchg
mov
sar
jo
inc
std
xchg
add
push
xor
lds
loopne
pop
fidiv
mov
shr
push
xor
les
inc
rol
ror
pop
mov
mov
xor
sti
stos
add
push
je
ds
jmp
cmp
and
ret
sahf
xchg
and
xor
push
hlt
adc
pop
push
inc
gs
and
addr16
stos
(bad)
jge
add
jbe
add
fimul
pop
sbb
call
call
inc
jo
inc
retf
xor
xor
sbb
cmp
jne
loop
call
xchg
loopne
(bad)
pop
mov
push
dec
sub
push
add
mov
fdivr
pop
pop
jmp
mov
jne
cs
dec
aaa
pop
jne
mov
push
jo
push
cdq
mov
ss
jmp
aaa
xchg
rol
xor
adc
or
and
adc
add
test
mov
ja
and
mov
neg
scas
imul
jo
bound
lea
mov
push
xchg
rcl
cs
ret
into
sbb
in
jbe
xor
push
pop
jg
(bad)
mov
jno
loope
icebp
push
leave
push
mov
(bad)
adc
push
sbb
stos
test
sub
movs
inc
mov
not
xchg
mov
jg
sbb
sahf
add
sbb
add
je
and
fld
add
jnp
mov
je
outs
cs
arpl
push
mov
add
xor
sbb
mov
in
sbb
mov
mov
adc
add
cmp
popf
push
push
xor
adc
sbb
push
or
mov
jge
in
mov
pop
mov
sub
and
dec
sub
je
xor
push
adc
in
add
sub
jl
fld
jne
mov
cmp
pop
ins
stos
mov
ret
shr
and
sub
add
xchg
push
iret
cld
cmp
call
enter
jp
cmp
jbe
mov
rcr
imul
add
loop
jg
data16
imul
adc
dec
cdq
mov
jg
or
pop
mov
retf
sub
cmp
cmps
call
push
cmps
outs
jmp
sbb
add
pusha
cmp
sbb
je
or
mov
mov
mov
push
push
rol
xchg
add
jmp
pop
cld
sub
or
or
les
or
mov
sbb
lock
fcmovnb
ins
ret
sbb
iret
push
xor
fdiv
cld
inc
mov
cmp
push
push
loopne
and
fist
cmp
idiv
cmp
je
push
das
and
mov
dec
fwait
push
push
inc
and
mov
imul
push
pop
or
adc
add
fdiv
pop
xchg
ror
add
sbb
les
gs
cmp
or
or
loopne
add
adc
or
adc
xchg
popa
pop
mov
je
lods
push
mov
mov
dec
adc
pop
nop
sbb
test
pop
pop
pop
popa
mov
sub
and
mov
(bad)
cmp
adc
add
shr
or
iret
or
sbb
jmp
out
in
dec
scas
sbb
lods
jg
mov
add
adc
add
ror
out
or
mov
pushf
mov
mov
pop
add
push
cmp
jo
test
pop
loopne
jae
xor
pop
jnp
fist
(bad)
push
mov
or
cmp
mov
and
inc
pusha
jmp
int
lahf
add
push
mov
mov
hlt
mov
mov
iret
les
and
dec
jae
clc
push
push
mov
jbe
in
push
inc
(bad)
xor
push
js
pop
sbb
and
push
or
mov
not
jecxz
add
push
pop
cmp
sub
shl
out
int
(bad)
xor
repz
push
lea
sub
cmc
mov
(bad)
sub
or
mov
ret
cmp
hlt
mov
jge
push
pop
in
test
add
rcl
(bad)
jge
pop
adc
sbb
jae
fist
mov
out
mov
in
mov
sub
dec
xchg
inc
sbb
sub
or
xchg
add
and
push
cmp
ins
add
lahf
aam
sbb
cmps
adc
clc
adc
xor
adc
xchg
dec
mov
dec
test
jns
mov
call
inc
xchg
lea
jne
rcr
and
mov
out
pushf
and
adc
xchg
push
jne
push
bound
ret
dec
scas
(bad)
jae
and
test
cmps
jns
ins
and
xlat
jno
and
push
add
adc
mov
or
pop
pop
stos
dec
cwde
mov
neg
mov
adc
cmp
pop
lea
push
push
jo
call
dec
movs
push
loop
clc
popa
ror
sti
and
adc
and
cmp
stos
aam
mov
cs
jae
sub
pop
sti
and
inc
cmp
mov
mov
xor
and
movs
mov
push
into
outs
mul
js
inc
sub
enter
cmps
mov
int
(bad)
aad
popf
xor
and
add
mov
mov
add
rcr
inc
or
leave
add
pop
sar
sub
push
pop
mov
addr16
mov
ins
sbb
jbe
clc
cmp
sbb
adc
imul
or
out
sub
sbb
pop
pop
pop
dec
in
and
pop
add
(bad)
test
jmp
sbb
cmp
push
xlat
ins
push
ds
inc
jl
js
push
imul
xor
xchg
rdmsr
push
push
cs
jl
adc
(bad)
jmp
loopne
in
pop
jbe
aad
data16
(bad)
repz
sar
xor
pop
dec
daa
push
add
pusha
push
mov
or
or
mov
les
xor
pop
push
jns
mov
je
repz
mov
xor
sbb
sbb
mov
mov
cs
out
ds
and
lock
add
enter
call
retf
in
jg
sub
pop
fcom
jmp
inc
adc
jg
rcl
loopne
xchg
cmp
je
ret
adc
push
leave
dec
dec
inc
mov
mov
call
fdivr
inc
loopne
or
xor
fisubr
scas
add
mov
cld
dec
adc
sbb
sbb
inc
dec
cli
repz
xchg
fs
jmp
mov
ins
xchg
dec
cmps
out
add
dec
mov
sbb
push
add
add
and
inc
(bad)
ss
sub
pop
add
pop
call
js
or
push
in
mov
je
lea
push
push
pop
pop
push
test
es
adc
ins
sar
aaa
popa
cmp
push
ins
sbb
test
mov
call
sub
js
add
aam
inc
push
cld
add
call
ss
jge
push
pop
push
movzx
pop
data16
adc
xor
fild
xor
inc
add
jae
xchg
cmps
ror
fst
push
je
add
(bad)
fwait
jmp
or
ins
and
loopne
sar
cmp
adc
cmp
inc
or
or
repnz
ins
inc
out
loop
ret
in
icebp
pop
xchg
mov
adc
push
sbb
and
lea
(bad)
ds
dec
push
push
push
mov
call
pop
(bad)
jne
dec
cld
xchg
push
pop
in
cmps
rcl
xchg
sub
leave
pop
out
cmc
js
out
add
cmc
or
iret
nop
cmps
aam
test
or
add
loopne
adc
fisubr
cmp
(bad)
adc
push
pop
mov
push
lea
add
sti
ror
mov
in
loope
(bad)
std
xchg
mov
mul
push
lods
sub
test
push
xor
cmp
repz
xlat
cdq
xlat
dec
push
sub
adc
ja
pop
(bad)
shufps
cmp
cmp
lds
cmp
(bad)
jmp
jns
add
int3
lea
inc
iret
(bad)
sub
cmp
push
push
push
ins
and
mov
int3
pop
stos
cmovnp
adc
xlat
xchg
sub
arpl
mov
mov
and
or
aas
or
fcomp
dec
adc
adc
push
fdiv
add
clc
dec
pop
jmp
push
sbb
jmp
sbb
push
xchg
fist
push
push
or
pop
sbb
inc
(bad)
jae
test
or
nop
inc
push
xchg
or
arpl
ror
or
fstp
inc
fmul
add
jmp
fisttp
retf
or
xlat
sub
clc
sub
inc
dec
and
clc
and
add
cmp
icebp
xchg
push
add
push
std
data16
push
out
sub
stos
or
mov
pop
adc
mov
add
or
sbb
dec
adc
mov
mov
inc
and
in
out
push
sbb
mov
dec
jbe
mov
dec
dec
xchg
add
jae
sbb
pop
fistp
icebp
sar
popa
inc
cmp
out
test
mov
and
sub
xchg
sub
arpl
push
js
add
test
xchg
idiv
jne
jne
push
shl
jbe
inc
inc
jb
in
adc
sub
push
mov
clc
or
add
dec
les
jl
fwait
adc
add
or
fisttp
mov
inc
jle
pop
and
mov
jo
jge
or
or
dec
adc
cmps
out
jecxz
imul
cmp
adc
push
shl
jbe
cmp
pop
xor
mov
jl
lods
loope
outs
icebp
or
push
cmp
sbb
rcl
sub
fmul
mov
xchg
or
sbb
push
into
adc
sbb
fldcw
mov
add
push
pop
sahf
dec
mov
mov
add
push
lea
inc
jg
punpckhwd
mov
pop
fcom
fst
pop
cmovns
jbe
mov
push
add
popa
mov
pop
inc
mov
dec
xchg
outs
inc
and
sbb
jecxz
push
xchg
add
xor
mov
xor
adc
ins
push
retf
or
jb
adc
ret
jnp
aaa
arpl
fs
push
cmp
loopne
xor
xchg
in
or
cdq
addr16
or
jae
pusha
xor
lods
or
mov
sub
cmps
mov
mov
sar
das
lods
ret
push
pop
lea
mov
rep
mov
jb
xor
or
adc
lods
std
fimul
jmp
mov
idiv
cmp
inc
shr
sti
mov
mov
arpl
mov
mov
jne
inc
add
rol
sub
mov
sahf
add
sub
add
in
test
cmp
cli
data16
stos
sub
inc
and
retf
(bad)
jl
loopne
mov
or
je
lods
inc
push
lahf
mov
add
xor
data16
xor
mov
push
push
ins
sbb
icebp
mov
pop
pusha
mov
cmp
outs
into
mov
out
push
loopne
fdiv
jmp
mov
mov
inc
xor
and
or
cmp
inc
popa
inc
or
inc
push
sbb
mov
outs
add
mov
mov
and
in
sub
loope
dec
out
push
fsubr
cmp
fcom
test
gs
pushf
retf
push
sar
and
inc
dec
xor
cmp
mov
lods
sbb
neg
(bad)
cmp
cld
dec
mov
imul
arpl
pop
cmp
push
push
push
jl
mov
dec
sbb
inc
sbb
test
mov
sbb
and
and
add
cdq
add
into
dec
sbb
or
bound
pop
ret
lea
ret
wrmsr
sti
sub
int3
addr16
push
(bad)
data16
push
mov
add
ins
adc
stos
movs
loopne
fidivr
jne
pop
dec
mov
dec
lods
xchg
mov
in
inc
inc
mov
hlt
cmp
lds
ds
xor
cli
mov
xchg
adc
out
or
dec
jmp
cs
push
sar
mov
inc
icebp
popf
stos
jo
test
or
push
movs
adc
sbb
sbb
push
pop
push
pop
and
inc
pop
mov
xor
sub
jbe
test
xchg
jo
and
call
inc
xor
pop
add
or
push
cmp
push
push
xchg
movzx
push
or
dec
outs
pop
jnp
xor
add
sbb
rol
and
out
enter
das
sbb
(bad)
dec
xchg
mov
push
fwait
adc
es
or
add
jmp
xor
add
movs
js
mov
and
rcr
(bad)
jecxz
push
sub
rol
cmc
movs
repnz
mov
add
mov
cmp
dec
cmp
cmp
add
push
je
cmp
and
and
push
das
test
pop
add
mov
fstp
lahf
cwde
stos
sbb
fimul
rol
add
hlt
mov
idiv
sahf
pop
fsubr
add
add
or
dec
sub
or
xchg
or
xchg
add
adc
retf
mov
pusha
ins
std
inc
sbb
daa
or
js
pusha
pop
jmp
cmp
retf
(bad)
imul
dec
pop
jl
cwde
xor
pusha
outs
mov
sub
pop
mov
xor
sub
ds
xor
xor
mov
popf
adc
aaa
rcl
lea
movs
push
rol
loopne
rcl
xchg
clc
mul
sahf
sub
sbb
push
mov
fcom
scas
jmp
cmp
nop
push
adc
and
cmp
fcomp
mov
xchg
xor
xor
int
test
arpl
je
fidivr
sub
cdq
in
sbb
iret
mov
mov
pop
pop
inc
arpl
xor
sahf
sbb
jns
jne
inc
mov
adc
ror
push
pop
mov
and
adc
or
or
adc
push
sbb
into
mov
jbe
movs
add
loopne
xor
and
or
test
cmp
push
jbe
fmul
cmp
ja
pushf
cmp
push
add
aas
dec
and
mov
and
adc
add
pop
push
inc
sbb
jae
xchg
jge
ds
out
sub
adc
lods
in
adc
inc
xlat
je
push
pop
dec
loope
jnp
rcl
pop
and
adc
pop
(bad)
inc
sub
push
fs
inc
pop
lds
ds
and
fsub
rcl
ret
(bad)
scas
pop
dec
inc
adc
sbb
(bad)
inc
or
add
inc
hlt
xchg
pop
shl
add
inc
jne
dec
mov
push
sub
xor
add
or
xchg
jno
sub
out
add
push
sbb
mov
or
inc
jo
arpl
repnz
or
jmp
or
xor
or
sub
aad
movs
in
push
shr
and
or
lods
adc
adc
add
stc
mov
ror
jns
inc
and
jns
inc
adc
pop
repnz
sbb
xchg
add
jb
cs
sar
pop
mov
das
and
lea
xchg
mov
in
mov
mov
cmp
loop
jnp
mov
lock
neg
cmp
push
(bad)
mov
lock
add
jbe
sar
mov
enter
mov
sbb
rol
mov
fiadd
shr
(bad)
ret
retf
fidiv
mov
fld
push
int
xor
stos
imul
jmp
xor
add
inc
cmp
clc
ss
lea
xchg
nop
sbb
idiv
int3
cld
es
add
xor
adc
sbb
pop
sbb
mov
jg
or
mov
cmp
xor
scas
cmp
sbb
adc
or
sbb
call
adc
ret
mov
push
les
mov
cmp
xchg
mov
fst
(bad)
inc
sub
aaa
sar
push
pop
mov
mul
seto
jb
enter
mov
ins
dec
test
and
pop
mov
mov
leave
out
xlat
jne
adc
adc
ins
(bad)
push
adc
push
cld
outs
push
aam
test
mov
jmp
mov
arpl
mov
or
lods
outs
sbb
pop
fisttp
mov
pop
jmp
outs
sbb
pop
ret
push
push
add
inc
pop
scas
push
mov
push
xchg
jmp
cmc
sub
xchg
mov
lea
inc
and
add
adc
adc
loope
pop
sti
push
dec
scas
or
inc
jmp
push
stos
mov
jae
rcl
and
outs
loope
add
push
inc
movhps
dec
add
dec
add
mov
pop
retf
lea
test
sbb
lods
add
dec
or
xor
jo
fldcw
pop
push
and
mov
adc
jo
mov
add
jns
xchg
mov
push
xchg
inc
xchg
add
jno
ds
in
ret
add
push
jmp
xor
stos
pop
aas
cs
rol
test
pop
arpl
and
push
sbb
pop
push
add
mov
sahf
into
pop
add
xchg
dec
and
inc
fmul
or
test
xchg
movs
sbb
cmp
adc
add
adc
pop
ret
fdivr
or
jg
fs
add
mov
push
push
xchg
and
add
call
out
xor
xchg
clc
popa
jecxz
xor
and
or
adc
mov
aaa
idiv
aaa
je
or
shl
jle
jae
cmp
inc
rol
xor
and
jle
cmp
lea
xchg
bswap
push
fld
sub
jg
adc
mov
movs
sub
or
jo
push
das
sbb
and
sub
or
fiadd
sub
add
lods
pop
pop
push
neg
mov
outs
add
pop
sbb
push
push
and
add
and
and
mov
add
lahf
and
sbb
nop
mov
sbb
leave
or
ret
add
inc
(bad)
stc
add
pop
popf
bound
pop
push
cmp
pop
xor
and
and
mov
mov
pop
hlt
push
xor
jmp
stos
push
movs
add
mov
pusha
sbb
add
bound
xchg
call
and
mov
dec
ja
stos
push
xor
xchg
push
lea
jno
xchg
push
bound
jmp
fld
shr
mov
adc
add
xchg
sbb
lods
jo
pusha
add
sbb
dec
ins
and
xor
enter
mov
ret
sub
(bad)
leave
(bad)
mov
ror
adc
xor
xchg
out
cmps
cmp
pop
test
dec
movs
xchg
out
jle
xchg
ja
push
adc
movs
jo
sbb
sub
push
inc
mov
pusha
xchg
mov
js
pusha
dec
push
repnz
push
inc
into
adc
mov
mov
jno
pcmpgtb
ss
push
inc
mov
xchg
jno
pop
fist
add
mov
inc
mov
push
inc
sbb
add
xor
sbb
(bad)
inc
ret
js
push
in
push
sbb
push
jmp
sbb
aaa
je
jnp
out
dec
mov
lea
or
pop
ror
cmc
ins
sub
push
add
pop
adc
cld
xor
fs
sub
sub
pop
jo
inc
add
aaa
pop
pop
mov
mov
stos
test
mov
loope
add
or
add
mov
or
lea
outs
inc
in
push
pop
mov
push
xor
or
cmc
or
cdq
or
pop
mov
out
sbb
mov
dec
xor
les
inc
pushf
sub
jb
xor
inc
sub
sbb
repnz
js
test
sbb
mov
ins
sub
retf
fcom
sbb
mov
inc
shr
xor
fsub
call
xchg
inc
pop
mov
lea
add
or
mov
shl
and
cwde
jne
les
push
push
push
push
mov
adc
jo
pop
dec
inc
push
and
inc
stc
push
add
adc
xor
adc
jle
lea
or
shr
inc
sub
or
sub
aaa
mov
xor
retf
add
nop
xor
dec
sub
inc
lock
xor
adc
add
jo
inc
inc
pop
push
das
mov
cwde
jl
jb
mov
mov
in
add
sub
adc
xor
xchg
cmp
pop
jge
dec
inc
jge
out
pop
call
jne
aaa
add
loopne
aam
adc
sub
ss
pop
test
retf
or
add
int3
(bad)
mov
ins
add
shl
scas
jecxz
mov
imul
add
push
loope
aas
not
mov
bound
jns
adc
mov
stc
pop
inc
sbb
push
sub
xor
imul
pop
adc
pusha
jmp
outs
ret
mov
mov
rol
inc
outs
mov
sub
cmp
mov
jmp
mov
xchg
jl
jne
test
add
enter
or
int3
add
mov
test
jno
push
cmpxchg
rcr
jo
mov
ror
jae
mov
cmp
cmp
inc
retf
fimul
add
inc
sbb
push
pop
sbb
fistp
mov
or
mov
cld
and
(bad)
sub
ja
mov
inc
add
jo
test
test
push
mov
sub
movs
cmp
dec
or
mov
mov
test
pop
fsubrp
fisttp
fmul
adc
addr16
clc
mov
or
imul
(bad)
mov
inc
xchg
cmp
adc
sbb
jmp
push
sbb
adc
in
mov
js
mov
mov
push
cs
mul
fild
inc
xchg
shl
or
push
xchg
sbb
cmp
mov
sub
dec
xchg
ror
jl
xchg
dec
jp
jecxz
mov
mov
mov
dec
(bad)
sbb
(bad)
retf
mov
add
pop
ret
imul
xor
sbb
inc
aaa
xchg
dec
mov
sub
push
js
xchg
cmp
ret
sub
popa
sbb
out
rol
es
je
mov
shl
movs
inc
and
in
xor
dec
inc
mov
adc
dec
loopne
mov
ds
mov
push
xchg
fisubr
sbb
lock
mov
je
test
cmp
xor
sbb
js
(bad)
retf
mov
inc
add
pop
adc
or
cmp
or
dec
mov
scas
push
and
cmps
cmp
push
or
jge
rcl
out
test
xor
mov
inc
fist
sbb
lahf
icebp
enter
mov
sbb
ret
jno
mov
int3
xchg
neg
sahf
mov
and
push
into
addr16
mov
mov
mov
mov
outs
inc
popf
and
inc
add
pop
mov
js
push
call
xor
mov
inc
mov
xchg
pushf
fs
xchg
in
mov
pop
rcr
stos
stos
push
and
mov
sbb
fst
adc
inc
lock
xor
div
shl
cmp
sbb
ins
add
jmp
xchg
mov
sbb
ret
sub
push
clc
adc
mov
sbb
dec
xchg
sub
lods
jnp
push
or
imul
mov
mov
and
dec
mov
push
or
clc
or
inc
jl
xor
lods
lea
cld
dec
fmul
cmp
movzx
cmp
lods
push
(bad)
leave
clc
push
cmps
sub
push
lahf
shl
mov
loopne
and
mov
punpcklbw
pop
popa
shr
dec
pop
dec
call
and
sbb
aas
mov
out
test
movsx
test
add
cmp
cdq
rol
fwait
add
jbe
inc
popa
push
mov
je
inc
xlat
dec
xchg
xchg
sbb
bound
dec
aad
fnstenv
jb
fwait
mov
dec
mov
mov
and
jle
mov
clc
daa
into
inc
pop
int3
adc
scas
jmp
sahf
test
push
int3
and
(bad)
movs
xchg
das
cmp
pop
pop
cdq
push
ret
enter
and
pushfw
dec
data16
movzx
retf
sub
dec
xor
sub
push
dec
jo
cdq
xor
sub
cmp
lahf
mov
jne
pop
lahf
ret
js
cmps
sub
mov
sub
aad
fimul
or
dec
call
ret
mov
sub
cmp
cwde
jne
cmp
movs
or
inc
sbb
aam
or
call
push
cmp
rol
ds
or
leave
sbb
xor
xor
mov
pusha
mov
jne
jl
and
dec
cld
(bad)
retf
fisttp
dec
cmp
cld
not
add
inc
push
push
xchg
fsubr
cmp
leave
movs
cmp
jns
and
scas
call
inc
xchg
adc
hlt
cmp
call
push
lds
push
retf
rol
jmp
jmp
pushf
(bad)
rol
xor
(bad)
int
dec
mov
xchg
or
shr
imul
mov
and
addr16
jl
mov
fcomp
cmps
mov
test
or
push
sub
sahf
push
inc
mov
nop
xor
xor
mov
xor
lods
cmp
sub
inc
dec
pop
dec
cld
mov
test
outs
xor
imul
aaa
in
scas
ss
inc
add
inc
add
adc
or
jne
in
xchg
shl
or
inc
ret
push
mov
ss
(bad)
push
push
lods
pop
(bad)
jmp
cmp
inc
test
mov
clc
out
push
cmps
pusha
shl
jg
jmp
ret
sub
push
or
inc
jne
mov
add
and
lock
add
into
outs
cmp
dec
push
push
sbb
setg
or
dec
and
push
ret
sti
add
push
lods
mov
shl
add
js
scas
add
pop
or
test
mov
inc
pop
dec
imul
jns
or
and
js
daa
ret
mov
outs
std
push
mov
push
push
mov
or
shr
pop
test
loope
ds
sub
mov
mov
mov
sub
pusha
ror
(bad)
or
mov
push
xchg
hlt
inc
push
bound
mov
imul
fcom
jl
js
sbb
push
fs
adc
cmp
cmp
fstp
in
and
(bad)
push
stc
fs
or
sbb
push
dec
rol
cmps
test
and
jmp
inc
add
mov
inc
hlt
scas
cmp
je
inc
adc
fmul
loope
sahf
das
lds
cmp
and
push
fadd
xor
cbw
rcl
pop
sub
sub
int3
and
pushw
ja
dec
dec
xchg
mov
or
mov
mov
and
outs
adc
pop
ins
lahf
scas
mov
shld
lahf
or
sub
and
push
lea
rcl
add
dec
xchg
pusha
push
sahf
and
cmp
sbb
jne
sbb
ins
mov
jmp
and
mov
pop
xor
test
test
mov
or
sbb
call
cmc
mov
mov
inc
add
loope
jle
dec
aaa
cmp
and
or
add
push
or
pusha
cmps
retf
pushf
mov
sub
sbb
or
dec
xchg
push
pop
arpl
push
cwde
push
cdq
pop
inc
sbb
pop
adc
mov
loop
xlat
adc
or
add
adc
lock
mov
cmp
les
and
mov
push
aaa
pop
out
cmps
or
and
jb
lea
cmp
jb
pop
lods
cmps
dec
jp
cmp
or
(bad)
js
adc
push
in
pusha
push
push
xchg
xchg
and
xor
out
jae
rol
mov
data16
inc
pop
push
and
dec
in
jno
inc
or
push
clc
(bad)
in
inc
and
or
cmc
sbb
jae
clc
sub
ror
pop
cs
jbe
(bad)
jmp
pop
cmp
jge
test
ret
mov
mov
inc
dec
inc
xor
fstp
or
pop
and
mov
jl
sbb
movs
mov
(bad)
mov
mov
and
sbb
push
sub
call
or
jne
test
cmp
adc
(bad)
cmp
ins
stos
sub
loop
cmp
in
dec
jg
add
shl
pop
test
sub
cvttps2pi
inc
pop
outs
mov
dec
in
and
sub
push
xor
adc
sbb
sahf
jnp
xor
push
cmp
push
inc
test
jmp
or
movs
shr
and
js
push
nop
cmp
pop
adc
adc
adc
popa
mov
test
enter
mov
(bad)
pop
inc
push
cmc
jl
lods
cwde
int
pop
jg
aam
and
call
push
add
lods
mov
xchg
clc
das
and
push
cmp
std
push
push
push
dec
fwait
icebp
jb
sti
push
mov
sahf
cmc
pop
and
xchg
mov
add
ret
std
daa
sub
and
xlat
adc
adc
sub
rep
cmp
lea
push
add
stos
popf
pusha
and
and
data16
jl
pop
clc
jbe
add
in
xchg
push
mov
xor
mov
paddusb
aad
lsl
mov
mov
repnz
dec
out
fsubr
stos
sbb
push
out
or
xchg
add
sbb
dec
je
push
and
add
daa
jne
jne
mov
mov
outs
outs
cmp
aad
cld
cmp
xor
add
ret
sbb
pop
cmp
or
push
push
dec
and
popa
pop
inc
jo
and
push
push
pop
mov
push
inc
push
add
sbb
and
inc
pop
mov
xor
fisubr
call
ret
sub
pop
pusha
add
nop
sub
sub
pop
in
ficom
mov
xchg
in
push
push
push
jno
mov
push
shl
ret
das
jo
adc
dec
test
or
cdq
out
popa
add
dec
shl
sti
jno
repnz
mov
rcr
rcr
out
xchg
push
jle
sbb
sub
jnp
test
cmp
sub
xchg
pop
push
inc
adc
mov
mov
sbb
cmp
cmovb
inc
jg
cmp
punpckhbw
add
push
rcl
and
cmps
sbb
lock
mov
cdq
std
push
lahf
add
adc
push
or
shr
(bad)
out
mov
or
mov
push
cbw
ja
add
lods
nop
mov
mov
imul
call
adc
ror
adc
inc
aam
mov
test
inc
lods
shr
jge
adc
sub
test
and
or
add
push
adc
gs
xor
les
ror
add
(bad)
cmp
dec
(bad)
xchg
call
icebp
lods
loop
push
es
cs
adc
jmp
inc
loop
inc
mov
out
popf
add
and
pop
sub
mov
push
call
xor
add
outs
dec
cmp
mov
xchg
inc
ins
jns
loopne
repnz
and
push
mov
iret
cmp
pop
adc
cmp
je
or
and
and
inc
mov
das
jnp
sub
inc
das
xor
imul
jp
cmp
ins
inc
push
add
rcr
adc
add
or
mov
std
pop
or
mov
add
cmp
jb
adc
iret
inc
pop
sub
ins
std
inc
add
clc
jmp
cmp
mov
mov
ret
clc
ja
ror
cwde
fisttp
inc
mov
nop
mov
enter
mov
jl
and
les
int
mov
in
mov
mov
mov
es
mov
data16
lea
add
hlt
pop
dec
mov
and
adc
adc
sbb
ss
into
cmp
ja
and
xor
outs
sub
test
sbb
jbe
mov
aad
in
lods
push
sub
sti
imul
retf
push
sub
fild
cmp
mov
aas
push
dec
push
inc
cmp
ins
sar
int3
sti
cmp
cmp
xchg
dec
sbb
and
sbb
gs
cs
seta
pop
sub
jbe
sbb
enter
pop
imul
adc
or
and
popa
pop
adc
dec
sub
inc
add
add
adc
outs
loope
jmp
fs
push
push
mov
xchg
xlat
push
pop
cmp
mov
jge
(bad)
das
mov
aam
add
push
push
rep
add
xor
add
(bad)
mov
jae
and
nop
add
rcl
sbb
fiadd
pop
mov
mov
add
push
add
jmp
mov
test
or
fs
fidiv
mov
mov
mov
or
add
pop
in
push
add
cmp
cwde
fild
or
adc
stos
push
mov
xor
push
push
mov
loope
pusha
add
push
sbb
sbb
xor
push
add
lods
inc
cmp
add
pop
outs
gs
lea
pop
sub
push
and
add
add
jns
mul
fs
mov
in
and
xor
outs
inc
sar
retf
aaa
call
hlt
ds
loopne
push
add
add
mov
add
aas
push
test
pop
mov
in
lods
loope
cld
adc
repnz
push
mov
outs
or
loopne
(bad)
pop
push
push
dec
add
les
shr
mov
in
aaa
sub
push
or
ret
sub
sub
or
mov
fcom
add
div
mov
cli
clc
sub
dec
loopne
dec
lock
ins
add
push
imul
inc
push
mov
xlat
inc
add
data16
mov
sub
cmp
test
mov
clc
xor
ins
repz
cmp
push
inc
cs
les
pop
add
in
push
push
adc
add
inc
push
jne
xchg
or
inc
das
test
or
xor
std
inc
or
sbb
push
lods
push
mov
lods
cmp
mov
push
ds
sub
jb
xor
test
pop
jle
cmp
jbe
cli
pusha
xor
pop
adc
push
inc
and
in
pop
sub
jle
mov
test
sub
test
dec
push
pop
push
mov
dec
inc
(bad)
cmp
int
or
jne
dec
cld
iret
jmp
jne
pop
pop
les
xchg
push
inc
pop
neg
and
xor
cmp
mov
(bad)
jmp
pop
jmp
mov
movs
test
and
inc
imul
scas
jl
int
test
std
jae
or
jo
push
push
add
test
outs
push
imul
cmp
cmp
je
cmp
fdivr
inc
je
cmp
je
cmp
je
cmp
je
cmp
loopne
bound
arpl
push
cmp
je
cmp
je
cmp
cmp
cmovne
push
mov
adc
cmps
mov
mov
xchg
test
cmp
js
jns
and
jle
mov
push
push
hlt
and
add
lahf
fsubr
or
fldenv
lock
pop
xchg
sbb
ss
pop
pop
sub
or
push
fldenv
ins
test
sbb
sub
pop
cmp
push
jb
adc
xlat
add
push
jae
mov
loopne
jp
pop
lea
outs
jmp
mov
test
and
add
mov
lea
push
inc
or
fisttp
pop
mov
mov
ret
(bad)
push
mov
(bad)
jb
push
cs
cmp
xor
sbb
mov
pop
cmp
push
or
jmp
outs
inc
enter
imul
sub
sbb
retf
sbb
push
repz
jmp
out
movs
stos
ror
sbb
jb
je
push
call
outs
or
pop
std
pop
lock
mov
adc
jne
fwait
outs
add
shr
push
push
add
clc
xor
jne
rcl
or
adc
or
cmp
aaa
mov
and
fimul
xchg
inc
jb
js
xor
out
jnp
aaa
push
call
and
jb
mov
xchg
loop
mov
std
mov
pop
inc
inc
mov
cmp
mov
add
adc
mov
cmp
inc
xchg
push
mov
aad
jmp
repz
sbb
mov
add
fadd
ins
inc
scas
inc
popf
imul
pushf
jp
cdq
push
hlt
add
jne
ds
aaa
je
rcr
in
push
push
pusha
jnp
pop
cmp
repnz
fisub
push
dec
push
pop
sti
cwde
or
in
in
push
xlat
inc
bound
loopne
jg
int3
jbe
pop
push
mov
rcr
outs
mov
mov
push
sbb
iret
fcmove
sub
adc
mov
jle
fs
or
iret
aad
cwde
mov
std
stos
mov
mov
pop
movzx
xor
arpl
int3
push
out
push
mov
jmp
inc
ins
pushf
or
xchg
or
fisubr
mov
add
add
mov
pop
ins
xor
addr16
(bad)
push
sbb
adc
(bad)
imul
and
xor
sbb
fdiv
jns
add
inc
ret
dec
push
cli
test
inc
push
sub
mov
mov
rcl
fucomip
aas
push
lock
or
and
sub
pop
xor
jl
sahf
jl
data16
outs
and
lea
(bad)
jg
psubusw
(bad)
fadd
shl
push
sbb
push
inc
fdivr
add
jle
movaps
lea
cwde
or
mov
add
sbb
pop
inc
and
inc
xor
es
jmp
movsx
shl
inc
imul
mov
lock
push
push
inc
inc
sahf
mov
xor
clc
inc
imul
inc
xor
mov
pop
mov
sbb
sub
(bad)
xor
mov
mov
jae
scas
push
push
push
mov
pop
outs
inc
sbb
push
std
movs
mov
dec
xor
push
mov
jb
mov
stos
mov
movs
mov
pushf
push
add
cmp
jne
inc
cmp
jne
test
loopne
add
mov
xlat
fs
fisttp
movs
lea
cdq
or
add
add
push
or
loopne
out
and
daa
push
push
push
mov
push
fstp
push
or
cmp
data16
mov
pop
pop
pop
cwde
in
je
or
ja
jg
adc
sahf
mov
sbb
add
adc
mov
jmp
mov
adc
push
xchg
shr
mov
gs
or
sub
lock
mov
test
aas
pop
or
cli
add
jbe
cmp
ss
lock
xchg
dec
fwait
add
mov
cmp
pop
adc
mov
lods
push
das
mov
daa
shl
int3
sbb
cmp
inc
repnz
dec
add
push
cmps
mov
add
xchg
add
ret
sub
fs
movs
jl
loopne
fwait
mov
xor
test
jne
daa
jb
data16
xchg
or
cmp
mov
sbb
movs
gs
js
push
nop
cmps
mov
xchg
push
sbb
jne
js
out
dec
xor
dec
movs
leave
imul
mov
sbb
shr
push
mov
add
aad
inc
mov
or
adc
pop
imul
js
dec
jnp
jecxz
adc
cmp
push
push
fwait
push
jbe
cmp
ja
test
fwait
retf
sbb
je
jmp
test
cwde
adc
mov
jne
push
jne
cmp
or
jle
(bad)
cmp
mov
jmp
mov
nop
jmp
scas
jl
push
cmp
jmp
mov
or
es
fdivr
push
mov
pushf
shr
sbb
jne
xchg
out
frstor
adc
push
addr16
cmp
ins
add
jmp
test
leave
inc
sub
mov
pop
cmp
sub
(bad)
mov
xor
je
cmp
(bad)
push
das
div
pop
or
jmp
mov
or
(bad)
aam
pop
sub
ret
add
movs
loope
mov
sub
or
xor
lods
mov
mov
push
in
enter
imul
or
or
mov
jp
push
pop
cmp
adc
push
ins
pusha
adc
push
inc
pop
add
hlt
lods
inc
cmp
aas
and
add
push
add
nop
jmp
push
push
jne
sub
dec
ds
sub
je
and
mov
push
ins
jne
adc
and
call
arpl
mov
adc
add
cmp
hlt
(bad)
pusha
outs
add
movs
and
dec
jl
inc
adc
or
cmc
adc
imul
and
push
push
fisttp
push
adc
sysenter
sub
adc
push
pusha
lea
dec
mov
pop
test
les
inc
pop
or
push
faddp
rol
fdiv
and
push
sub
sbb
push
aad
jl
pop
iret
(bad)
mov
mov
test
push
rcl
inc
(bad)
pop
add
cmp
xchg
pop
xchg
add
ror
add
bound
cmp
aad
(bad)
sahf
cmp
shl
add
ret
sub
and
jmp
cdq
push
pop
idiv
sbb
ret
sbb
pushf
pop
sub
out
jnp
push
xlat
adc
push
inc
pusha
mov
push
sbb
and
dec
xlat
rcr
mov
movs
ins
enter
sbb
gs
xor
pop
rcl
pop
mov
add
inc
mov
inc
mov
mov
adc
sub
jmp
jbe
loop
in
je
ficom
push
push
jle
jecxz
ins
jp
cmps
or
dec
call
mov
sub
add
shl
sbb
pop
adc
shl
push
mov
inc
gs
pop
jmp
push
sbb
aam
nop
inc
mov
sbb
add
pop
ins
xchg
neg
in
shl
pushf
in
pop
push
call
add
clc
or
cld
push
xor
imul
or
ret
inc
mov
mov
lea
push
adc
xchg
fistp
or
adc
adc
or
cmp
jbe
mov
sub
neg
cmp
inc
(bad)
dec
push
pushf
inc
pop
(bad)
pop
jecxz
test
adc
les
adc
test
ja
sbb
cmp
les
je
xor
fdivr
push
sbb
and
adc
push
repnz
xor
imul
fs
je
mov
out
lds
sub
das
mov
adc
inc
je
push
addr16
dec
aaa
rcl
test
push
vrcpps
test
lea
push
fdivr
pop
test
push
cmp
xchg
sub
xor
add
and
and
(bad)
std
cmp
add
movs
(bad)
jmp
imul
xor
lock
test
mov
clc
cmp
mov
cmp
cmove
clc
int3
add
or
enter
in
jne
shl
fiadd
aam
sbb
pop
xor
and
mov
data16
into
enter
lock
or
in
mov
loopne
push
out
mov
loopne
sub
cmp
test
sbb
lods
xchg
or
cmp
outs
sbb
push
sub
mov
pop
xor
je
lods
call
xchg
or
push
sub
cmp
mov
cmp
jb
mov
retf
pop
cmp
ret
mov
pusha
stc
mov
in
push
rcl
(bad)
fisubr
or
mov
pop
gs
or
dec
xor
fidiv
push
adc
loope
jle
or
sbb
or
ss
xor
call
mov
push
cwde
sub
cmps
xor
scas
mov
call
add
test
jmp
les
shrd
out
mov
dec
inc
mov
shr
push
pop
adc
inc
adc
shr
push
xor
das
and
scas
xor
mov
imul
shl
call
cdq
pop
idiv
push
pop
push
or
cdq
adc
ins
pop
(bad)
jo
(bad)
loop
and
sar
mov
rol
inc
cmp
sbb
rol
jb
adc
mov
dec
(bad)
mov
cmp
clc
sahf
(bad)
in
jecxz
xchg
cmps
add
push
mov
test
imul
pop
and
push
mul
sbb
mov
xchg
jne
jmp
cli
adc
or
mov
pop
pop
ret
les
push
jb
repnz
push
stos
cld
test
lock
(bad)
jno
repz
xor
stc
and
popa
in
mov
push
adc
out
neg
shl
mov
xor
test
jns
cmp
inc
or
mov
pop
std
mov
mov
pop
sub
push
cmp
or
mov
adc
push
push
je
fiadd
or
push
jne
push
sub
jmp
pop
mov
in
xchg
mov
lock
and
push
mov
push
movs
(bad)
xor
sub
loopne
xchg
and
fmul
or
shl
cmp
sub
add
into
adc
(bad)
or
xor
sub
enter
pop
scas
or
mov
pop
scas
and
inc
xor
cmp
test
or
push
fsub
inc
push
add
(bad)
dec
cmp
lods
or
cmp
div
in
hlt
cdq
push
dec
push
add
mov
ret
xor
loopne
jb
sbb
add
or
(bad)
jp
and
inc
lock
nop
cmp
popa
dec
jno
cdq
push
(bad)
pop
mov
imul
or
xor
std
mov
test
or
or
dec
movs
fcmovnu
add
add
pop
adc
sbb
adc
movs
or
xchg
ja
or
push
inc
sbb
jbe
xor
pop
scas
jmp
mov
xor
dec
xor
sbb
push
retf
pop
das
jl
sbb
push
loop
stc
pop
mov
test
sbb
inc
fdivrp
fs
push
and
sub
inc
dec
inc
cmp
adc
push
sbb
dec
jge
arpl
lahf
rol
leave
je
mov
pusha
and
fld
js
imul
lods
mov
fcmove
out
jno
cmp
dec
jmp
mov
mov
jl
nop
pushf
or
jb
movs
mov
test
pop
data16
test
or
cmp
add
push
dec
cwde
loope
in
push
xor
in
jl
xchg
outs
mov
mov
jg
sub
call
push
lahf
add
test
pusha
mov
inc
loopne
in
or
mov
adc
ret
dec
sbb
pop
sbb
add
add
pop
movs
pusha
clc
xor
sbb
sar
imul
fcom
mov
pop
test
sbb
dec
add
push
pop
adc
into
dec
cmp
or
jnp
into
cmp
push
inc
push
push
mov
je
xchg
outs
loopne
retf
fistp
aam
xchg
mov
xor
pop
push
mov
es
adc
dec
push
and
cmp
je
xchg
lock
and
je
cmp
jge
(bad)
mov
inc
jmp
pop
adc
rol
loop
push
pop
sub
mov
add
rep
das
pop
cmp
arpl
adc
sub
ins
into
cmp
mov
add
fidiv
jmp
jb
mov
outs
cwde
dec
add
sbb
push
push
stc
mov
adc
push
in
adc
mov
mov
fiadd
adc
ja
in
inc
sub
cmc
ror
in
mov
out
jl
add
mov
add
mov
xlat
sbb
je
rcl
cmp
sbb
in
dec
sub
mov
and
add
mov
not
cmp
push
add
js
test
jmp
lea
cmp
xor
jb
jmp
xor
std
je
mov
sub
push
sub
push
cmp
sbb
(bad)
jmp
(bad)
dec
stos
or
jbe
out
mov
xchg
cmp
je
lahf
aaa
sar
stc
push
push
cdq
test
adc
sub
sub
stos
sbb
sub
sub
call
mov
scas
inc
and
dec
add
ja
sub
or
mov
mov
lock
or
fisttp
stos
lock
mov
cmp
jns
adc
sbb
cmp
adc
clc
jbe
add
js
push
jle
jb
ror
ret
xor
mov
inc
adc
or
add
xchg
mov
outs
sbb
xlat
jmp
mov
out
(bad)
cmp
add
xchg
fs
in
adc
das
add
nop
add
cmp
inc
mov
mov
lock
iret
xchg
mov
outs
push
inc
sbb
mov
mov
sbb
out
and
pop
loop
sub
arpl
push
fidivr
push
push
sbb
outs
sub
sub
pmuludq
loopne
sbb
dec
add
cmp
out
sbb
inc
mov
cdq
inc
or
jnp
cmps
cmp
clc
outs
enter
cmps
pushf
addr16
and
and
mov
and
cmp
cmp
sub
test
movs
ficom
dec
and
fwait
cmps
add
or
test
or
test
retf
push
inc
xchg
lock
add
sar
(bad)
call
pop
inc
les
dec
or
and
mov
inc
lods
jbe
mov
je
or
out
mov
bound
pop
sub
sbb
in
mov
xchg
dec
push
pop
mov
js
dec
gs
cmp
dec
sub
ret
xor
sbb
or
add
movs
or
adc
jge
je
mov
(bad)
mov
pop
jl
fnstenv
pop
mov
fsubr
(bad)
pop
sbb
mov
in
xchg
adc
shl
js
push
movs
add
add
fs
pusha
push
sub
mov
add
dec
fst
nop
loopne
jnp
jg
(bad)
push
adc
sub
out
jae
lahf
adc
inc
xlat
xor
add
jae
lods
adc
mov
push
mov
adc
dec
mov
imul
add
rcl
mov
hlt
adc
out
jnp
or
cli
add
pop
push
push
push
push
push
mov
or
adc
jp
stos
xchg
loope
loope
mov
push
push
push
ret
push
adc
xlat
fisttp
and
xchg
push
xchg
call
adc
cmp
pop
fisttp
int3
mov
sahf
cmp
je
push
pop
push
aaa
jae
jo
jne
leave
arpl
inc
sbb
dec
call
xor
pusha
aas
and
add
push
jne
arpl
movs
in
sub
das
rcr
xchg
or
sub
push
inc
ins
cli
add
(bad)
retf
and
ds
leave
mov
jne
inc
sub
aad
push
imul
xor
or
movs
lds
sbb
or
jns
dec
jecxz
inc
fs
daa
ja
mov
pop
or
dec
xor
dec
push
std
popa
daa
mov
sbb
je
sub
lods
xor
fisttp
jl
cmp
and
cmp
ret
push
ret
jmp
and
mov
ins
add
out
mov
pop
pop
movs
add
cs
jnp
stos
mov
stos
stos
jns
test
pop
and
dec
inc
xchg
mov
rcr
sub
xchg
add
mov
fimul
inc
jmp
fmul
or
fdivr
fimul
fiadd
mov
adc
xchg
les
pop
xor
pushf
adc
les
fiadd
fbld
dec
mov
sbb
cmp
cmps
icebp
pop
movs
hlt
ja
xchg
popf
push
push
mov
je
ins
sub
inc
sbb
push
ret
mov
mov
and
icebp
ja
ja
inc
xchg
loope
mov
add
test
pusha
and
cmc
xor
dec
ret
sub
cmp
dec
sub
dec
add
pushf
(bad)
cmp
loope
jo
aam
push
pop
jle
xlat
sbb
xor
call
or
sbb
adc
mov
cmp
add
ins
pop
inc
add
outs
fucompp
cmc
jge
je
adc
mov
sub
or
loope
push
jle
jns
out
push
push
push
push
popa
add
aas
int3
add
pop
stos
jp
or
dec
je
popf
cmp
jge
jnp
mov
pop
and
add
push
cmp
push
dec
clc
pop
add
push
push
jne
ja
lods
pop
push
jmp
xor
jmp
mov
mov
push
add
xchg
push
jmp
mov
ja
or
and
or
sbb
adc
fs
sar
sub
or
or
fist
mov
mov
and
loop
rol
and
xchg
jae
adc
xchg
stos
aad
and
add
jo
in
fwait
sar
cmp
mov
in
sbb
call
mov
or
loop
add
pop
jne
into
js
icebp
inc
xchg
inc
inc
add
dec
loopne
les
push
push
xor
mov
xor
inc
mov
sahf
sub
xor
add
inc
sbb
add
jl
aaa
test
xchg
mov
pop
iret
dec
inc
stos
and
shr
lock
mul
dec
sbb
mov
adc
xor
adc
push
push
enter
mov
das
adc
fisttp
imul
data16
mov
adc
mov
push
jl
inc
cdq
push
or
push
jne
mov
ins
cwde
dec
movs
and
dec
maskmovq
test
and
sub
mov
lea
mov
and
mov
sub
sbb
pop
clc
mov
popa
push
popf
clc
mov
imul
aaa
xchg
inc
cmp
jns
push
jge
xchg
and
sbb
sti
adc
push
out
and
inc
mov
outs
mov
cmp
or
xor
xor
push
mov
test
dec
gs
pop
inc
and
jbe
add
bound
add
mov
adc
and
ret
daa
int3
cmp
enter
imul
cmc
xchg
test
add
je
mov
call
pop
adc
adc
pop
cli
or
push
pop
xor
cmp
xchg
inc
mov
out
mov
les
jns
xchg
and
add
push
retf
cmp
xchg
mov
pop
clc
xchg
add
inc
and
push
or
mov
int3
ins
mov
shr
add
push
and
mov
xor
dec
sbb
add
inc
pop
cdq
cwde
pop
lock
xchg
xor
fisubr
push
push
dec
in
jmp
mov
fist
jnp
add
push
inc
cmp
mov
cli
pop
push
push
add
mov
loop
pop
popa
mov
loopne
(bad)
push
xchg
jl
(bad)
stos
dec
(bad)
loopne
pushf
push
cmps
cdq
inc
mov
adc
shr
mov
ffreep
adc
inc
or
and
sub
jl
jbe
xor
fcom
sbb
pop
stc
cs
frndint
fiadd
or
xlat
cmp
movs
popf
in
call
or
or
sub
or
sbb
add
in
out
push
xor
aas
add
or
mov
hlt
jo
lds
jle
adc
xor
sti
inc
jmp
or
in
or
pop
pop
retf
pop
adc
xchg
xlat
dec
mov
adc
sbb
ret
or
cli
jne
push
in
mov
mov
sbb
sbb
mov
cmp
fstp
xor
adc
mov
pop
in
push
fs
stos
inc
cmp
stc
pushf
ret
xchg
or
push
and
dec
inc
cdq
or
dec
imul
fistp
push
pop
pop
add
adc
xchg
repz
fwait
add
ds
ror
jg
rep
inc
ins
xor
cdq
mov
adc
jb
sbb
fisubr
inc
jns
aas
pop
push
in
loop
mov
shl
mov
mov
dec
xchg
mov
mov
cmp
cmp
ins
pop
rol
add
or
jp
ror
sub
enter
push
xchg
adc
out
pusha
test
rcr
mul
add
clc
jae
or
adc
push
cwde
in
pop
mov
lods
or
je
sbb
or
daa
mov
cld
dec
inc
cmp
jp
xor
hlt
or
scas
out
js
xchg
sbb
xchg
mov
hlt
ins
inc
add
xchg
jae
imul
pop
imul
int
jmp
cmp
test
mov
jmp
xchg
mov
mov
xlat
add
mov
cli
or
jno
cmp
mov
xor
push
in
push
rol
or
or
add
(bad)
cld
fidiv
ret
mov
adc
push
mov
and
imul
test
adc
(bad)
pop
add
mov
adc
push
and
or
js
sbb
cld
or
add
add
mov
hlt
cmp
inc
in
or
jo
loopne
push
sub
fadd
test
mov
ins
push
xchg
mov
pusha
(bad)
out
nop
aaa
sahf
les
sub
mov
(bad)
jle
pushf
jb
lea
lea
xchg
or
lea
and
and
push
push
pop
aam
dec
mov
add
shl
cmps
adc
push
lea
lods
inc
out
inc
adc
push
stos
add
inc
iret
ins
xchg
loope
push
jo
sti
fmul
test
and
xor
mov
dec
enter
lock
xor
sub
test
cdq
and
nop
add
push
pusha
xor
add
and
data16
std
call
stos
add
rcl
add
mov
dec
pop
inc
push
movs
loopne
cmps
or
mov
mov
push
or
fsubr
aas
add
or
cmp
xor
test
mov
test
mov
cwde
mov
push
lock
fldenv
cmp
sbb
sub
push
mov
loop
sub
adc
jp
push
int3
cs
popa
repnz
call
xor
add
mov
in
or
or
pop
bound
jno
sbb
enter
ins
leave
add
fwait
and
aam
and
cmp
data16
idiv
sahf
jbe
add
rcr
imul
mov
push
push
jne
sub
inc
inc
cmp
jb
pop
cmps
lea
in
retf
ret
cdq
cmp
inc
out
xor
cmp
mov
cmp
sub
sbb
sbb
cmp
jbe
fist
pushf
or
iret
pop
mov
or
popf
xor
pushaw
xlat
pop
lea
xchg
inc
mov
jmp
pusha
in
lods
pop
dec
xor
mov
or
or
push
ins
mov
dec
inc
push
cmp
jmp
xchg
sar
dec
adc
imul
pop
jbe
add
xchg
fcmovb
out
sbb
jle
arpl
sub
xlat
les
lods
fstp
mov
dec
test
dec
pop
xchg
dec
test
rcl
mov
push
daa
add
mov
mov
and
adc
lock
call
push
cmp
jne
je
or
and
rcr
or
or
cmp
cmp
sbb
or
imul
mov
or
add
or
sbb
dec
cmp
adc
les
mov
and
scas
jne
sub
sahf
les
jne
pop
adc
cmp
daa
and
sub
lahf
mov
jb
sbb
jbe
es
push
xor
sbb
jl
pop
mov
mov
(bad)
cmp
into
inc
leave
adc
add
cmp
out
cmp
adc
pusha
popf
add
mov
add
lods
test
adc
cmps
add
or
jo
inc
and
je
xchg
fst
in
sbb
addr16
retf
ss
dec
dec
push
mov
and
xor
sub
push
fmul
mov
pop
test
pusha
ss
ins
sbb
xor
add
adc
fwait
adc
push
fsubp
push
push
adc
push
scas
push
inc
stos
or
add
dec
sub
inc
cmp
sbb
push
and
cld
dec
xor
pop
mov
inc
aam
inc
sbb
mov
push
mov
and
les
xor
push
pop
add
and
sub
inc
sub
mov
push
sub
or
mov
adc
mov
pop
pop
push
ja
lods
inc
adc
inc
(bad)
adc
mov
push
jl
pop
sbb
les
add
ror
inc
(bad)
lods
add
shl
pop
dec
adc
adc
mov
or
dec
aaa
inc
add
push
jge
sbb
mov
push
in
adc
add
jne
dec
in
jl
shr
xchg
retf
xchg
stos
mov
push
sbb
jnp
xor
lock
lods
cmps
adc
push
into
mov
lock
push
or
rcl
jnp
dec
push
(bad)
jmp
push
adc
cmps
lea
inc
and
push
loope
add
lds
and
and
push
push
aas
sbb
add
sbb
or
cmp
add
adc
inc
inc
mov
push
aaa
stos
fcmovb
lods
mov
mov
mov
test
cmp
push
xor
inc
pop
push
jae
nop
div
push
cs
xor
enter
or
in
push
add
add
ss
ds
push
in
cmp
inc
aaa
add
push
xchg
inc
cmps
mov
das
or
push
jmp
inc
dec
icebp
loop
das
sbb
test
xor
lock
or
or
bound
dec
pop
fimul
pop
mov
push
add
retf
cld
cmp
or
lods
repz
push
push
push
mov
add
pop
lea
jno
add
imul
jno
in
lock
sbb
mov
(bad)
mov
jle
adc
pop
mov
jmp
add
mov
sar
dec
pop
push
call
push
test
lahf
imul
cmp
mov
add
pop
inc
push
or
inc
stos
arpl
dec
mov
inc
data16
jb
(bad)
jbe
iret
and
mov
add
jp
push
adc
jno
pop
mov
cmp
test
sub
push
pop
jl
jle
sub
xchg
pop
outs
imul
(bad)
cmp
or
adc
(bad)
lods
sub
or
fcmovbe
push
sti
jns
out
pop
push
inc
jo
and
mov
push
pop
pop
cmp
lods
sti
adc
sbb
in
add
stc
jmp
clc
gs
cmp
jne
adc
es
nop
or
push
or
inc
ja
mov
dec
and
dec
sub
adc
(bad)
mov
dec
inc
sub
xchg
inc
(bad)
mov
rcl
mov
pop
pop
sbb
xchg
inc
jl
inc
or
add
in
or
adc
clc
lea
cmp
cmps
mov
mov
call
lea
mov
xchg
mov
fild
jmp
dec
rcl
cwde
fst
mov
sar
loopne
outs
ja
push
pop
sub
or
je
and
imul
je
adc
call
mov
lods
xor
daa
add
and
or
into
sub
ror
or
add
test
mov
mov
jnp
cmc
js
sbb
pusha
push
and
add
scas
pop
inc
pop
call
mov
xor
push
iret
mov
xor
movs
mov
push
sbb
push
(bad)
xchg
ss
call
and
add
and
add
sti
out
push
cmp
jb
cmp
xchg
mov
mov
das
pushf
mov
or
push
jmp
stos
xor
(bad)
cmp
sbb
imul
leave
mov
rol
mov
add
fistp
mov
jmp
jns
and
addr16
xor
push
inc
jae
cwde
dec
adc
test
adc
push
sbb
jmp
xchg
mov
sub
retf
lock
clc
push
outs
ja
xchg
push
in
ret
cmps
push
sub
dec
and
sub
push
mov
lahf
mov
jmp
pop
lahf
mov
iret
cmp
pusha
xor
(bad)
and
push
sub
rol
add
aas
and
push
adc
add
loope
jmp
mov
or
mov
les
fldz
pop
inc
inc
retf
sbb
push
jne
jne
pop
and
mov
gs
inc
adc
inc
jb
add
fmul
inc
push
out
mov
sahf
and
sub
jle
jle
xchg
pop
mov
or
stos
add
inc
add
call
jl
inc
jmp
int3
mov
jg
pslld
cmp
jae
addr16
(bad)
aam
pop
add
fdiv
ret
sbb
fs
push
add
inc
xor
ret
add
leave
push
jmp
mov
mov
sub
pop
jmp
jno
dec
push
mov
into
sbb
mov
cmp
pop
add
cmp
lock
pop
jmp
inc
dec
pop
lea
xlat
stos
fidiv
scas
push
cmps
add
inc
fs
shl
sub
adc
sbb
(bad)
ins
scas
out
dec
es
in
fcomp
iret
inc
iret
inc
pop
aas
push
imul
sbb
or
add
pop
dec
cmp
dec
inc
inc
out
bound
push
add
inc
or
ror
int
popa
sub
lods
cmp
into
xlat
mov
ja
add
push
xor
pop
jno
pop
inc
(bad)
ret
dec
or
mov
mov
mov
in
adc
cmp
or
xor
pop
pop
(bad)
in
or
paddd
cmc
jnp
cmps
add
ja
or
or
out
pop
cmp
les
ja
inc
std
test
mov
and
add
mov
xor
lods
pop
or
jmp
frstor
es
fimul
xchg
inc
mov
mov
mov
adc
mov
stos
cmps
int
dec
sti
cmp
ret
mov
pop
pop
aaa
sbb
cmps
or
add
mov
jnp
mov
imul
test
not
inc
es
imul
xor
xchg
nop
mov
hlt
jg
sbb
mov
retf
xor
jnp
pop
pop
pop
push
xchg
loope
inc
mov
loopne
lea
stos
cmp
stos
push
scas
cmp
or
mov
add
push
int
push
mov
je
or
mov
mov
aad
ja
jne
retf
push
jmp
outs
fwait
outs
sub
enter
inc
stc
pop
ds
lea
add
bnd
push
je
xor
pusha
jge
nop
cmp
jae
into
out
cmp
jo
or
ss
cmp
ja
push
pop
sub
(bad)
cmp
cmova
pop
mov
mov
mov
push
jo
imul
clc
xor
pop
and
inc
push
cmp
rol
pop
ins
add
ds
or
xabort
mov
icebp
push
scas
cld
mov
and
add
movs
adc
and
rcl
test
(bad)
nop
js
shl
add
inc
and
loopne
retfw
sar
sub
fbld
jecxz
test
test
test
mov
mov
jne
shl
not
sbb
(bad)
sub
call
(bad)
cli
jae
fidiv
leave
jne
pop
and
or
lahf
pusha
add
sahf
or
cld
and
ins
and
mov
loop
and
xchg
inc
dec
call
and
jl
shl
adc
or
pop
rcl
inc
xchg
sbb
push
out
add
and
inc
movs
inc
adc
sub
sar
sar
add
(bad)
rcl
and
test
or
and
test
mov
aas
jae
fidiv
inc
push
lods
or
inc
and
enter
mov
inc
lgs
xor
dec
rcl
inc
ins
fs
mov
dec
sbb
push
push
add
xor
mov
sbb
and
cmp
add
push
dec
dec
push
aas
in
iret
pop
pop
pusha
outs
fs
jl
xchg
mov
pop
sbb
or
mov
mov
in
adc
mov
push
js
cmp
mov
pop
push
jns
dec
sbb
push
push
or
mov
dec
push
inc
push
xchg
jg
imul
retf
push
ss
scas
stc
sbb
into
out
push
mov
inc
push
test
or
cwde
xchg
pop
loop
mov
addr16
cmps
cmp
sbb
pushf
adc
jns
das
adc
in
adc
xchg
in
enter
cmc
test
call
out
sub
jle
mov
lods
push
inc
out
sbb
je
xor
enter
sar
cwde
fcmovu
sbb
sbb
sti
shl
adc
popf
daa
ins
loopne
mov
add
mov
mov
mov
iret
push
and
push
(bad)
push
mov
and
cmp
adc
dec
je
jno
sbb
inc
mov
imul
mov
pushf
xor
iret
inc
xor
inc
push
retf
pop
addr16
push
push
or
leave
addr16
or
mov
adc
add
xor
ins
or
cmp
or
pop
push
push
dec
ins
nop
cmovne
(bad)
(bad)
push
push
push
xchg
rcr
xor
mov
out
and
mov
test
sub
pop
ret
xor
mov
cmp
fs
das
mov
sbb
or
xor
aas
and
ins
cmps
movs
xor
popf
inc
adc
sbb
dec
and
dec
cs
add
int3
cmp
mov
jbe
rcr
cwde
jo
mov
adc
adc
cmps
push
and
sub
pop
mov
repz
inc
ds
js
sbb
pop
je
ins
in
inc
scas
movs
xor
push
adc
sbb
call
xor
daa
xor
cdq
sbb
(bad)
std
ret
push
sub
xchg
mov
adc
or
pop
cmp
push
or
xor
xor
clc
push
push
pop
in
inc
adc
cmp
mov
or
sbb
mov
jo
test
xor
push
dec
out
cld
xor
xor
xor
int3
in
dec
mov
cli
dec
fld
adc
mov
cmp
and
sub
jae
sub
mov
mov
jns
and
lock
mov
pop
je
and
es
dec
lods
vmovss
dec
add
adc
and
mov
(bad)
mov
cs
mov
sub
xchg
sub
sub
xor
xchg
mov
push
cmp
jo
cmovb
pop
lock
or
retf
xor
ja
push
add
cli
jo
pop
add
pusha
inc
add
fwait
and
mov
inc
add
loopne
add
rol
dec
cmp
mov
push
fcom
mov
fs
ins
sub
or
(bad)
out
lahf
mov
shr
pop
dec
cmp
xchg
sub
scas
mov
push
jno
je
fnstsw
and
xchg
fs
add
push
test
jb
fld
sar
mov
dec
or
jo
mov
arpl
test
sbb
add
xchg
movs
jecxz
xchg
jecxz
and
push
es
and
into
sbb
push
mov
das
xchg
jge
mov
xor
lock
sbb
xor
pop
ss
ror
std
rcl
sub
mov
(bad)
les
jle
push
adc
lock
or
lock
jne
mov
lock
mov
sti
or
and
inc
add
sub
mov
cwde
jnp
sbb
mov
clc
mov
sub
and
scas
or
mov
mov
mov
xchg
test
sti
in
add
dec
dec
mov
jmp
int
xor
and
pop
jmp
add
pushf
stos
loop
cmp
add
loop
fmul
xchg
test
cmp
fstp
or
loopne
jp
push
int3
add
mov
sbb
clc
pop
arpl
jmp
jno
retf
fld
retf
xor
imul
push
mov
jle
or
lock
mov
in
adc
sahf
cmp
ret
cmp
hlt
and
mov
sbb
push
and
call
xor
add
adc
xchg
xor
fst
xchg
pop
add
xor
es
loop
mov
fwait
loope
cvtps2pd
mov
fsub
mov
add
sub
add
mov
jmp
mov
fcomp
pop
cmp
or
jns
ds
cmp
ficomp
ret
jmp
cmp
xor
jne
sbb
jp
loopne
rol
call
movs
mov
test
ds
push
pop
add
rol
ins
call
push
jg
sbb
icebp
cmp
lock
xchg
fdivr
shl
mov
call
mov
xlat
mov
push
inc
sub
not
fadd
test
pushf
mov
push
test
xor
mov
inc
repz
push
mov
mov
pop
lock
jns
test
stc
fiadd
xchg
lods
mov
jl
in
shl
push
test
mov
mov
js
in
(bad)
mov
loope
xchg
add
call
sub
cmp
sub
push
mov
dec
xchg
fcomp
sar
jge
xchg
xor
push
and
push
popa
adc
inc
pop
adc
pop
mov
inc
(bad)
rep
push
fwait
daa
xlat
mov
test
add
mov
maxps
aam
imul
pop
mov
or
mov
aad
add
xchg
cli
push
(bad)
(bad)
sahf
ret
cmc
inc
jmp
lds
cmp
je
mov
or
dec
mov
push
rcl
aas
int3
jo
xchg
push
push
dec
out
inc
out
or
imul
mov
sub
pop
cmc
mov
xchg
jl
sub
xchg
test
mov
adc
xor
sbb
inc
cmp
adc
js
stc
outs
mov
pop
hlt
jns
cmp
dec
add
loope
sbb
mov
sub
ret
pop
xchg
pop
dec
shl
jns
add
adc
dec
loopne
xor
cwde
xchg
jo
add
sub
push
dec
clc
cdq
jecxz
aaa
push
out
pop
icebp
mov
mov
loopne
(bad)
xchg
ins
ret
mov
fadd
dec
inc
cmp
cld
jge
das
or
std
pop
add
xor
xor
add
mov
(bad)
jecxz
outs
in
cdq
sub
aaa
in
dec
mov
push
test
add
test
je
dec
pop
adc
or
movs
nop
les
cmp
sbb
test
mov
inc
ja
movs
cmc
(bad)
add
xor
adc
cmp
xor
into
add
push
cmp
pusha
push
pop
adc
cwde
sbb
loope
dec
mov
shl
(bad)
ror
inc
sub
adc
fild
mov
lahf
sar
inc
jecxz
int3
push
sbb
(bad)
and
or
test
(bad)
jmp
mov
in
scas
push
fdiv
inc
inc
mov
lds
div
xor
nop
(bad)
mov
xor
add
sub
push
shr
or
and
lea
pop
imul
sub
mov
mov
shl
xor
popa
cld
mov
push
inc
pop
inc
jl
sub
dec
loopne
xor
jle
sbb
cmp
lock
shr
xchg
dec
sub
push
push
jmp
push
pop
jmp
enter
arpl
ins
scas
lock
lock
inc
ins
loop
lea
cmp
push
shl
push
push
pop
push
out
mov
push
xchg
lds
sbb
inc
cmp
jae
push
sbb
lahf
or
sbb
jb
pop
pop
or
sub
bound
adc
jbe
out
sbb
push
sbb
pop
inc
mov
ret
xchg
sbb
retf
lods
lea
sbb
inc
mov
push
xor
xor
aaa
je
mov
xor
mov
(bad)
mov
xor
push
push
sbb
mov
sbb
mov
and
in
sbb
or
push
push
xor
dec
sbb
sti
or
loopne
push
jle
ds
xor
outs
or
pop
add
dec
dec
push
sub
mov
push
rcl
adc
dec
inc
push
push
dec
fs
fcomp
xor
call
cmp
mov
push
or
je
inc
xchg
adc
pusha
mov
stos
sub
sub
int
jmp
je
sbb
in
pop
mov
sbb
push
mov
lds
push
sbb
aas
rcl
not
shr
adc
cmp
pop
(bad)
add
mov
inc
inc
sbb
or
or
ret
push
mov
call
jo
push
call
pop
or
inc
push
ret
sbb
pop
add
jge
sbb
and
or
push
pusha
jmp
mov
jge
xchg
nop
outs
(bad)
dec
outs
xor
mov
pop
add
add
add
mul
jle
dec
outs
xor
inc
xor
loopne
inc
cmp
jl
(bad)
adc
scas
mov
push
mov
push
add
cmp
aaa
pop
aas
push
sti
xchg
cmp
mov
les
ss
pop
pop
iret
mov
int
daa
pop
xor
jne
jo
push
jle
jle
das
add
and
aas
jg
sub
call
cmp
jge
fidivr
adc
mov
mov
cmp
dec
mov
mov
jl
cmp
sar
or
ror
fmul
mov
add
add
sahf
cmps
das
push
enter
(bad)
call
cwde
repz
ja
push
adc
(bad)
and
add
stos
sbb
iret
xor
or
pop
cmp
movs
xchg
inc
test
mov
int3
push
cmpxchg
xchg
in
ror
xchg
or
test
adc
add
std
xor
leave
cli
add
jmp
mov
lods
pop
hlt
adc
shl
shl
push
add
jne
jns
shl
pushf
dec
adc
jae
(bad)
xor
push
jne
and
xlat
push
js
imul
mov
repz
dec
cmps
pop
cwde
adc
mov
mov
jmp
add
pop
pushf
cmp
sub
add
js
sub
or
inc
push
das
iret
sub
and
pop
adc
xchg
add
pop
hlt
imul
movs
imul
jmp
cld
and
sub
cmp
adc
push
pop
imul
cmp
daa
or
(bad)
adc
mov
jecxz
adc
imul
icebp
jns
loope
push
xor
push
add
jmp
fimul
(bad)
push
sbb
retf
mov
inc
push
sub
enter
pop
call
push
xor
sbb
repnz
bnd
jmp
retf
mov
or
xor
retf
mov
and
ins
jo
xlat
sbb
push
jbe
(bad)
inc
jns
or
das
pop
cmp
push
jne
test
xchg
push
xchg
cli
das
and
or
pop
iret
je
push
call
xchg
data16
or
pop
(bad)
push
sub
add
push
push
mov
rcr
sbb
push
push
test
repz
loopne
fidiv
add
pop
cmps
icebp
and
push
mov
sbb
shr
and
pop
sbb
jmp
and
pop
les
jmp
or
push
xor
dec
or
adc
in
push
cmp
or
adc
sub
adc
aam
sbb
clc
sbb
mov
inc
outs
push
dec
test
js
lea
loop
aad
les
push
cmp
sub
jo
or
in
push
movs
sti
xchg
je
push
jmp
pop
js
jmp
ret
xchg
add
mov
mov
inc
add
js
stos
sbb
xor
es
cli
int
add
imul
cld
sbb
dec
lea
in
jne
push
push
push
or
movs
pop
adc
sbb
or
sub
dec
jmp
jo
loope
imul
mov
add
adc
sub
mov
fsub
aas
xchg
shl
mov
sub
mov
mov
loope
fcomip
xchg
(bad)
les
loop
pop
lods
int3
xor
dec
cmp
or
jmp
aas
push
ss
sbb
adc
inc
iret
inc
add
out
jo
sbb
add
adc
jmp
adc
cmp
jmp
ds
ficomp
aaa
ins
cmp
or
push
call
cmp
je
fcom
xchg
jle
test
push
stos
test
mov
(bad)
adc
ffreep
inc
loopne
loope
jne
inc
mov
and
stos
xchg
out
(bad)
adc
icebp
or
cwde
cld
push
pop
dec
cmp
xchg
shl
sub
xor
xchg
leave
rcl
frstor
and
cdq
leave
rcl
movs
add
jecxz
(bad)
imul
add
ret
sti
test
pop
test
les
fs
sub
add
jmp
pandn
arpl
xchg
(bad)
aaa
cmp
and
adc
pop
cmp
push
out
push
enter
dec
aam
push
sbb
lods
and
xlat
inc
jnp
pop
fdivr
test
jle
(bad)
rcl
outs
mov
sub
ret
movs
and
sahf
clc
xor
or
jbe
lods
ret
inc
inc
jbe
lahf
push
add
ja
sub
jmp
or
jmp
xor
mov
dec
adc
add
pop
sub
shl
or
inc
push
pop
cmp
jl
inc
test
sbb
jge
(bad)
xor
xor
pop
jne
ja
outs
imul
dec
cmp
sbb
xchg
cmp
jnp
add
mov
aam
sub
vmovhps
sub
pop
dec
sbb
sub
xchg
and
add
rcl
pop
rol
add
mov
xor
mov
push
mov
jmp
inc
or
sbb
push
je
and
xor
sbb
shr
or
add
sub
add
call
add
aas
cmp
jl
and
sbb
add
mov
xor
movhps
adc
push
mov
xchg
add
pop
test
push
xchg
push
add
xor
inc
cs
cld
xchg
push
in
ds
xchg
jb
pushf
ja
and
sbb
adc
gs
and
cmp
push
les
add
push
pop
or
aaa
push
push
pop
rcr
jmp
ficomp
add
mov
and
xchg
mov
(bad)
adc
pop
bound
outs
add
push
mov
pop
inc
add
inc
sub
nop
ds
ja
xor
push
lock
adc
xor
mov
jmp
push
add
cmp
pop
retf
cmp
(bad)
sub
cmp
adc
(bad)
push
jge
dec
cdq
in
push
push
push
jno
(bad)
mov
add
outs
push
xchg
loop
pop
sbb
add
test
sbb
ds
fdiv
leave
in
xchg
push
pop
ret
add
(bad)
(bad)
mov
pop
pop
sub
lock
cmp
or
push
jbe
retf
add
push
stos
in
mov
jno
xor
xchg
push
es
mov
nop
mov
mov
ret
sahf
xor
lock
xlat
cs
nop
(bad)
xor
mov
sub
sub
leave
sbb
movs
jb
fmul
mul
dec
pusha
pusha
mov
cmc
js
ss
ss
rcr
clc
or
jo
lea
fild
jp
add
cmovle
ret
xor
js
sub
sar
clc
dec
adc
sar
push
into
cbw
jo
mov
fcom
fwait
je
loope
sbb
mov
sub
cmp
sbb
mov
adc
fmul
cli
or
lea
sbb
ret
sbb
and
int3
sbb
out
mov
push
or
je
fnstenv
loope
(bad)
add
cmp
ret
sbb
(bad)
(bad)
adc
sub
out
adc
or
or
jbe
or
cs
and
aaa
or
mov
fisubr
pop
jae
(bad)
adc
iret
jne
push
and
in
push
xchg
iret
inc
daa
es
pop
pop
and
xor
adc
cmp
cs
push
sbb
or
push
pop
enter
push
mov
fstp
mov
mov
test
or
jge
mov
sub
or
inc
xor
sub
sbb
pop
stos
lods
pushf
shl
dec
or
and
iret
cmc
push
pop
xor
sub
sub
jbe
dec
cmp
push
mov
shl
cmp
and
pop
out
repz
inc
add
fdivr
mov
retf
out
xchg
or
popf
and
lahf
or
fcmovnu
sbb
int
jmp
xchg
cmp
cmp
add
jne
jns
cdq
sbb
sti
add
push
or
add
rol
xchg
imul
pop
mov
mov
push
fld
(bad)
jbe
add
push
mov
ror
mov
stc
cs
pop
xchg
jmp
gs
push
dec
lahf
push
pop
aam
jne
(bad)
and
data16
or
push
jo
pop
add
cwde
je
jns
jp
les
push
sbb
xchg
push
clc
add
fldcw
into
inc
xchg
pop
das
repz
xlat
jo
push
cmp
lods
fist
mov
xchg
ret
sub
inc
adc
sbb
mov
push
or
sbb
mov
daa
push
adc
dec
int3
int
sub
mov
xchg
or
dec
or
and
add
shl
loope
popf
xor
cmps
inc
add
loope
xchg
xor
fisttp
cmovne
cwde
fs
inc
je
rcl
push
inc
idiv
sub
sub
pop
mov
or
jnp
and
xor
retf
mov
(bad)
sar
inc
cmp
jne
aam
nop
pop
fstp
xor
mov
imul
push
test
pop
add
fcmovb
pop
inc
sbb
push
in
fild
lods
cmp
pop
cmps
cmp
outs
retf
imul
xchg
lods
jae
int
in
aad
adc
fld
push
jno
shl
pop
lahf
inc
outs
jl
cmp
sub
push
lea
icebp
and
sbb
mov
pushf
xchg
adc
pop
outs
shl
push
xor
xlat
frstor
pop
inc
dec
test
xchg
or
sub
cmp
dec
mov
or
jmp
retf
mov
std
cwde
and
jmp
pop
add
sub
cmp
pushf
das
add
nop
pop
adc
sub
and
or
addr16
dec
jmp
sbb
add
popf
clc
push
sti
jmp
pop
ret
mov
aam
sbb
enter
mov
mov
mov
outs
sbb
das
sar
push
push
aam
add
adc
icebp
test
sbb
xor
add
xchg
and
or
dec
jb
fisub
mov
pusha
mov
js
sar
dec
cwde
or
and
je
add
daa
dec
sub
mov
mov
adc
mov
cmp
shl
sbb
test
pop
lahf
pop
imul
cmp
sbb
sub
add
mov
mov
and
sub
mov
jo
push
fistp
dec
sar
jbe
iret
test
push
aas
daa
and
ins
aas
pop
gs
or
das
test
loope
cld
inc
les
imul
call
or
pusha
sbb
mov
fistp
cmp
ja
add
xor
jns
or
test
jbe
cmp
ret
adc
cmp
mov
cmp
sub
ror
hlt
sbb
(bad)
pop
retf
popa
in
adc
sbb
or
or
imul
xchg
pop
rcl
push
sbb
sub
push
(bad)
dec
gs
loopne
xor
hlt
and
push
sbb
xchg
iret
xchg
push
mov
shr
or
hlt
mov
stos
fidiv
rol
dec
push
add
test
dec
and
(bad)
icebp
rol
push
(bad)
mov
push
rcl
jle
cld
push
dec
pop
jmp
jg
shl
je
cmp
push
das
jbe
or
dec
sub
cmp
push
adc
cmps
shl
in
or
and
aad
lea
je
push
or
lsl
or
inc
loopne
ret
push
xor
push
ret
xor
cmp
mov
jo
mov
jns
les
add
int
fs
dec
sar
cli
scas
xor
pop
and
pop
fucomp
push
mov
adc
leave
lahf
push
and
adc
push
sti
push
jl
clc
lea
push
push
add
sbb
loope
push
ret
sti
push
push
push
pop
push
loopne
es
push
pop
mov
cmc
push
fst
aas
sub
rcl
sbb
push
call
pop
cmp
jae
push
je
std
push
fisttp
imul
jge
mov
or
lock
icebp
pop
xor
jnp
popa
xlat
pop
call
sub
sub
aad
test
arpl
adc
adc
add
ret
daa
or
rcl
ret
mov
or
je
inc
sbb
test
call
test
jne
mov
shr
ins
add
mov
fdivp
shr
mov
ss
movlps
or
sub
push
ja
(bad)
clc
push
cmp
or
or
pushf
push
mov
jbe
outs
jmp
fs
add
cmp
mov
lea
sbb
ins
mov
mov
sar
inc
outs
xor
shl
or
adc
add
rol
vpsrlq
adc
gs
push
cld
inc
loopne
into
xor
push
pop
js
pop
xchg
aad
sub
gs
or
lock
or
or
rcl
jns
daa
adc
fwait
rol
add
sub
fwait
and
je
pop
je
or
push
mov
hlt
dec
ud0
cld
inc
dec
and
push
push
fwait
cmp
inc
pop
push
cld
or
inc
cmp
jne
push
adc
arpl
pop
mov
or
imul
mov
dec
pop
adc
les
push
data16
mov
jmp
pusha
nop
cwde
push
pop
sub
(bad)
icebp
push
pop
push
push
fdiv
fs
mov
xchg
imul
xor
ins
mov
shl
fild
popa
jp
and
xchg
jo
mov
adc
ss
sbb
inc
push
add
imul
je
push
dec
and
gs
fwait
pop
xor
push
jae
push
sub
jae
jae
inc
lods
push
adc
lock
push
inc
aas
sbb
popa
mov
mov
pop
lock
hlt
adc
mov
arpl
push
pop
jmp
call
pop
dec
loop
mov
push
les
pushf
dec
push
pusha
push
dec
fsubr
in
or
call
sub
icebp
pop
retf
xor
jbe
lock
or
sbb
dec
add
inc
pop
or
cmps
std
and
sub
adc
aad
int
xor
int3
sbb
popa
cmp
in
sbb
test
xor
in
imul
enter
pop
aam
pop
and
mov
push
and
not
push
xchg
xchg
pop
mov
dec
jmp
xor
push
ss
xchg
iret
sbb
dec
sbb
icebp
ins
add
mov
cmp
ins
jmp
and
in
stos
mov
in
dec
push
sbb
adc
add
jecxz
ds
inc
and
mov
test
and
cmp
sub
adc
sbb
loopne
sbb
wrmsr
add
pop
popf
add
pop
dec
or
and
fmul
lods
or
or
sub
shl
pop
sbb
or
mov
rcl
sbb
inc
adc
fsubr
push
int3
mov
aaa
aam
fst
lods
inc
cld
clc
cmp
out
ror
je
ins
add
add
leave
pmaxub
push
sbb
sub
jbe
mov
or
push
ret
cmp
cmp
cmp
fnsave
push
mov
inc
push
lahf
and
out
fsubr
data16
push
mov
and
xchg
sub
adc
sub
mov
ins
push
rol
xor
repz
add
cmp
push
arpl
mov
dec
or
inc
shl
or
or
xor
push
push
cmps
loopne
popa
or
push
xor
inc
gs
jo
mov
sbb
push
jmp
out
adc
inc
(bad)
mov
dec
mov
push
push
mov
push
cmp
mov
mov
and
inc
sub
sbb
aas
pop
dec
mov
lea
mov
jmp
pop
test
push
or
jb
mov
clc
movs
adc
add
imul
js
mov
loop
pop
pop
loope
into
call
jl
mov
test
jne
xor
mov
aad
pop
addr16
and
in
push
test
je
lock
mov
ss
add
mov
sti
gs
xor
sti
xchg
lea
mov
inc
bound
test
cmps
fwait
aas
adc
out
push
mov
inc
or
push
jne
inc
add
pusha
pop
push
sbb
ror
cmc
push
mov
mov
fwait
mov
mov
hlt
push
push
push
stos
sub
arpl
cmp
xchg
jle
movzx
push
push
pop
or
inc
cmps
push
add
add
or
std
add
into
inc
jg
jbe
or
inc
(bad)
push
mov
or
add
or
imul
clc
push
daa
pop
push
jo
into
or
jl
mov
lahf
sbb
cmp
cmp
xor
xor
mov
jbe
rcl
stos
push
dec
pushf
jne
ins
inc
mov
adc
(bad)
in
sub
loopne
inc
xor
add
(bad)
add
xor
pop
inc
adc
into
mov
or
xchg
push
add
xchg
ja
add
xchg
es
pushf
sbb
xchg
mov
and
or
or
clc
pop
sub
in
aam
sub
cmps
sub
mov
mov
jl
sbb
push
in
or
jne
cmp
add
fdiv
pop
lea
fidivr
mov
(bad)
xchg
shl
pop
or
cmps
mov
into
jmp
push
jns
push
mov
xlat
(bad)
sub
leave
dec
fxch
xchg
add
test
popa
inc
dec
jne
adc
jge
fwait
dec
cmp
jl
sub
test
xor
je
dec
sbb
or
std
xor
hlt
and
out
xor
in
adc
test
add
or
mov
cmp
jecxz
push
in
je
loope
inc
ja
or
mov
and
and
push
test
sub
xor
into
cmp
imul
push
pop
mov
je
or
jne
push
jae
fcomp
xor
sbb
loope
xchg
add
mov
pop
jne
mov
jbe
fild
sbb
pusha
inc
cld
add
call
xlat
jmp
mov
and
or
rol
jmp
or
sar
add
jl
pop
push
or
jo
loope
sahf
fisubr
inc
ja
mov
push
in
dec
hlt
sbb
dec
mov
adc
aam
stc
push
ret
dec
shr
mov
lods
jge
dec
out
or
inc
cmp
retf
jecxz
add
add
retf
sbb
sahf
es
jecxz
cmps
cmps
cmp
in
mov
add
jne
fcmovb
jmp
fwait
pop
sbb
and
add
std
jnp
imul
add
jmp
or
mov
push
and
test
xor
or
push
pusha
add
clc
cmps
(bad)
xchg
jmp
cmp
loope
jge
daa
dec
mov
ss
bound
(bad)
mov
jmp
push
fcmovbe
adc
sbb
mov
cmp
shl
in
push
test
cmp
and
push
cmp
add
pop
and
leave
cwde
push
and
int
fdiv
or
add
sub
inc
in
or
(bad)
loopne
cdq
lds
jle
mov
ror
jp
je
or
jne
jmp
sub
cld
or
add
inc
gs
push
call
cmp
push
sbb
push
test
add
jle
aaa
pop
ret
adc
sbb
or
cmps
or
inc
mov
jne
push
jmp
push
inc
inc
arpl
inc
xchg
sub
jne
push
xor
movs
xor
sub
enter
out
cmps
inc
sbb
xor
mov
gs
pop
and
mov
xchg
in
inc
pop
enter
mov
xor
mov
iret
ret
aas
and
jge
icebp
cmp
(bad)
dec
push
add
jnp
push
mov
cmp
lods
data16
add
jmp
add
div
ret
test
iret
or
ds
cmp
fwait
dec
test
mov
inc
mov
pop
pop
in
(bad)
or
mov
xor
cmp
fwait
xor
add
pop
imul
mov
dec
add
fimul
pop
fadd
push
ja
sbb
sbb
push
in
bound
xchg
je
sbb
inc
fwait
pop
inc
sbb
mov
pop
mov
and
push
pslld
pop
test
add
jo
rol
or
xor
sbb
push
inc
mov
dec
add
mov
add
add
mov
mov
xchg
jmp
and
mov
pop
mov
cdq
imul
aam
add
jecxz
fist
neg
jne
mov
and
xor
xor
fld
dec
jnp
int3
sti
push
push
xchg
xor
popf
lods
dec
add
jb
lahf
hlt
rol
mov
dec
mov
adc
mov
jae
dec
bound
and
xchg
sahf
test
div
push
push
mov
jb
inc
js
and
jmp
push
or
out
jg
invd
jmp
cmp
cmp
jne
arpl
inc
loopne
mov
mov
mov
(bad)
stos
push
jl
int3
jo
inc
push
inc
cwde
push
mov
and
test
xor
sti
cmp
popf
push
xor
sub
test
push
or
and
sbb
aaa
fadd
adc
mov
inc
mov
jmp
and
pop
gs
aas
(bad)
push
jo
mov
sbb
jnp
pop
mov
adc
push
xor
icebp
xor
daa
inc
sar
adc
les
pushf
xor
daa
push
pop
pop
in
sub
in
dec
into
push
int
add
into
sti
mov
cmp
mov
cdq
xchg
push
push
dec
cmp
add
fldln2
mov
add
gs
inc
mov
cld
sbb
xchg
push
dec
loopne
sbb
fistp
pop
(bad)
cmp
adc
test
ret
jmp
jnp
sbb
neg
das
push
cmp
jmp
cmp
jnp
in
popa
sub
popa
mov
add
cs
fcom
call
mov
mov
add
push
cmp
int
clc
mul
ret
xor
adc
xchg
and
jnp
xchg
add
in
js
fld
repz
push
and
adc
or
test
sub
test
sbb
sub
jo
ror
fwait
es
cmp
cdq
loopne
cmps
adc
cmp
push
push
add
inc
arpl
and
shl
add
add
loopne
lds
(bad)
in
cmp
dec
add
cmp
stos
push
or
ret
in
sub
sbb
call
or
add
xchg
xchg
in
jmp
les
in
cli
push
adc
or
or
sbb
es
pusha
sub
and
inc
mov
icebp
fstp
out
pusha
mov
dec
mov
lods
push
adc
cld
mov
pop
push
push
les
cwde
and
mov
mov
repz
call
imul
popf
or
out
fmul
push
mov
jno
push
movs
adc
sub
int3
sub
and
mov
sub
and
pop
mov
lds
mov
cmps
nop
add
sub
test
adc
and
mov
add
lock
inc
les
xchg
jmp
push
test
add
mov
cmp
push
xor
sbb
and
js
adc
xlat
ss
dec
sbb
inc
mov
daa
out
xchg
ret
fcmovnu
pusha
rol
leave
cdq
mov
or
add
xor
sbb
jo
adc
inc
dec
loop
add
pop
sti
pop
inc
popa
xor
mov
js
in
add
scas
stc
inc
add
mov
clc
add
mov
movs
rol
call
xor
mov
in
mov
inc
(bad)
dec
mov
push
push
push
aaa
es
jns
push
mov
adc
sub
popf
dec
(bad)
lea
(bad)
sti
xor
mov
mov
cmp
jbe
jmp
pop
lods
pop
cmps
push
or
and
icebp
cmp
cmp
sbb
and
sahf
mov
adc
cmps
xor
add
and
mov
jmp
cmp
or
jl
xor
mov
cmp
jb
mov
(bad)
pop
pop
mov
cmp
jae
sub
push
cmp
cdq
mov
pop
or
xor
xor
adc
mov
aad
bound
and
pop
repnz
add
or
add
les
(bad)
sub
lds
dec
jbe
leave
dec
sub
retf
ror
leave
push
adc
add
adc
nop
imul
loope
mov
mov
push
push
mov
adc
retf
add
cwde
or
inc
dec
cld
and
shr
ror
gs
adc
push
out
int
cs
lea
aaa
dec
rcl
add
mov
outs
pop
pop
mov
inc
punpckhbw
pop
not
ss
push
dec
sbb
outs
cmp
inc
stos
xchg
sub
mov
popf
inc
adc
jbe
sbb
sbb
jns
cmp
mov
ret
add
test
and
sub
lahf
pop
imul
inc
sbb
add
push
mul
mov
call
or
cmc
sbb
fs
or
sub
sbb
out
data16
mov
inc
inc
sbb
inc
inc
xchg
sbb
lods
sbb
push
or
inc
jmp
push
adc
lea
adc
aad
cmp
inc
xchg
nop
fs
imul
add
pop
cmp
stos
out
adc
inc
repnz
test
mov
jno
(bad)
out
div
shl
add
add
xor
fs
sbb
xlat
ror
sti
daa
mov
inc
(bad)
or
or
mov
sar
add
xor
add
mov
sub
add
int
jb
push
push
and
lods
cmps
pop
mov
add
loope
cmp
or
push
pop
bound
inc
cli
mov
lahf
aam
cmp
sar
cmp
mov
(bad)
adc
ss
lock
int3
and
and
stos
inc
imul
out
fistp
lock
repz
add
jmp
rcr
nop
imul
in
pop
cmp
xor
sub
lock
jnp
pop
pop
mov
sub
je
inc
stos
mov
pusha
sbb
pop
mov
sbb
ret
sub
and
ror
nop
mov
and
and
dec
addr16
icebp
fidiv
push
cmp
mov
inc
dec
es
add
gs
scas
into
fs
mov
dec
adc
jbe
dec
mov
iret
adc
add
ret
sti
cs
or
jbe
lods
shl
aaa
aaa
je
cmp
sti
data16
lock
push
cmp
test
sbb
imul
enter
(bad)
sbb
fcomp
mov
and
cmp
push
xor
pop
movs
scas
movs
or
xor
xor
arpl
lds
and
out
and
mov
or
xchg
jg
out
je
inc
aaa
and
mov
xchg
mov
jbe
out
nop
in
jne
cmp
jl
jmp
es
jmp
adc
or
push
dec
movs
stc
mov
push
adc
adc
test
dec
std
sub
lock
ret
jno
adc
cmp
pop
dec
ss
aaa
test
lea
hlt
jne
push
push
or
jb
inc
mov
push
cmps
xchg
outs
or
clc
call
jo
sbb
sbb
or
push
xor
sbb
mov
mov
cmp
pop
pop
(bad)
std
retf
repnz
push
mov
pop
cmp
aam
arpl
cdq
add
xlat
mov
push
push
jo
sbb
push
ret
or
loope
adc
push
popa
addr16
mov
sbb
mov
push
rol
pop
or
sbb
xchg
rol
jbe
push
dec
not
dec
clc
test
or
(bad)
jbe
mov
mov
shr
and
or
das
das
das
das
aam
fdivr
fsub
loopne
ret
imul
add
adc
dec
js
or
push
shl
out
add
or
inc
cmp
mov
inc
and
dec
(bad)
add
js
addr16
mov
add
xchg
adc
test
loope
mov
test
clc
shr
test
mov
dec
(bad)
jecxz
gs
(bad)
jmp
ror
xor
stc
sub
adc
int
xchg
push
mov
sbb
cmp
ins
popa
(bad)
dec
dec
cmp
mov
int
add
loop
jmp
or
push
cmp
dec
cmp
call
inc
pusha
jne
xor
push
pop
push
push
mov
or
(bad)
xor
jbe
mov
xchg
pop
and
mov
les
aam
sub
push
add
cmp
fadd
add
and
or
stos
cmp
ret
adc
pop
xchg
mov
mov
add
add
sbb
loopne
femms
fistp
das
dec
int
jae
sub
add
push
and
data16
add
jp
sub
push
imul
jne
scas
adc
or
hlt
pusha
or
sbb
mov
fs
movs
sbb
clc
jae
and
sbb
xor
or
sbb
adc
xchg
and
adc
movs
adc
mov
add
pusha
outs
test
adc
or
shl
mov
je
add
xchg
movs
push
js
dec
test
push
call
and
mov
in
cld
hlt
mov
call
mov
push
mov
and
ins
cmp
xlat
mov
sbb
add
or
xchg
push
xor
test
add
add
fld
sbb
sbb
(bad)
push
xchg
xchg
daa
jb
test
adc
or
ficomp
pop
in
push
in
shl
xchg
adc
pushf
enter
movs
lock
clc
push
test
inc
jae
lahf
adc
push
push
idiv
test
mov
add
lods
aam
adc
sub
push
mov
pop
sbb
or
push
scas
sbb
xor
and
fmul
lahf
and
and
dec
enter
sub
inc
add
cmp
or
fst
div
adc
je
pop
push
sahf
fcomp
iret
or
pop
aam
add
call
mov
repnz
xor
je
sbb
rcr
ror
cmp
mov
mov
(bad)
cwde
punpckhdq
push
and
pusha
xor
jnp
push
cmp
add
add
dec
int3
fadd
out
dec
push
fcom
aam
or
aam
mov
sahf
fdivr
loopne
and
dec
xor
repz
test
mov
jns
dec
repz
fiadd
cmp
sub
ja
leave
pusha
mov
fs
enter
mov
imul
adc
xchg
je
cmp
jmp
sbb
cmp
(bad)
(bad)
and
xchg
cs
push
shl
mov
xchg
mov
inc
or
retf
inc
adc
leave
cli
test
out
sbb
out
mov
test
push
lods
mov
xchg
ja
je
je
push
jo
lock
cdq
add
test
mov
push
dec
je
or
push
push
nop
adc
aam
cmp
fbld
out
mov
push
mov
push
mov
xchg
(bad)
lds
lods
sbb
std
push
enter
fadd
add
dec
cmp
mov
push
push
jo
xchg
sbb
je
gs
inc
enter
or
or
lods
retf
in
add
lahf
cmp
stos
lds
add
sahf
sub
not
ret
add
fst
push
and
hlt
mov
lods
dec
mov
push
repnz
aas
rep
add
jl
mov
sbb
add
add
dec
in
sbb
mov
or
mov
out
add
sbb
std
adc
cmp
inc
lea
into
test
add
fs
mov
lock
sahf
and
stos
lock
sbb
cmps
pusha
(bad)
add
pop
pop
mov
sbb
add
mov
outs
xchg
out
pop
add
sub
or
retf
adc
enter
ror
cdq
mov
cmp
add
mov
pushf
neg
das
mov
cmp
add
add
jns
push
ret
aas
sub
shl
xor
add
mov
dec
lea
xor
mov
scas
icebp
jnp
sub
and
sbb
inc
jge
retf
lods
or
push
jmp
ficomp
add
loope
rcr
cmp
faddp
mov
add
cdq
sub
int
or
sbb
adc
fisub
xchg
sti
or
pop
cmp
cmp
adc
ret
mov
es
or
add
retf
imul
cmp
ins
(bad)
mov
pusha
inc
mov
dec
fist
or
or
or
fs
test
lods
sahf
lahf
popf
test
and
ins
aam
sbb
jp
or
push
add
cld
dec
sbb
mov
jmp
or
inc
clc
in
in
xor
ret
add
ret
pop
je
pushf
pop
xor
and
mov
adc
and
adc
mov
and
inc
sub
xchg
dec
dec
mov
adc
jmp
push
pop
jnp
xchg
sbb
lahf
nop
data16
pop
in
jbe
test
jg
pop
(bad)
aad
or
bound
or
add
xchg
test
lock
aas
and
cmp
test
xlat
inc
cld
(bad)
sub
add
xchg
ror
pop
mov
daa
mov
pop
fisttp
je
mov
lods
and
dec
inc
lods
sbb
inc
popaw
xlat
sub
cmp
add
movs
nop
popa
add
pop
push
or
loop
inc
sub
test
mov
inc
mov
sub
and
cmp
push
adc
mov
pop
cmps
mov
xlat
call
in
and
mov
or
mov
je
ror
xchg
popa
cmp
lock
paddusw
sub
mov
sar
ret
cmp
clc
sub
push
sub
sbb
sub
jns
ret
sub
cs
lea
or
jle
cmps
push
cmp
or
xor
cmc
dec
shr
repz
push
sub
enter
inc
cli
sub
fcom
dec
jo
inc
popa
int3
xor
mov
scas
mov
adc
push
push
outs
adc
jns
cmps
inc
sbb
push
pop
repz
add
ftst
sub
and
or
adc
sub
or
movs
imul
neg
sub
xchg
fdiv
jbe
icebp
jmp
loope
out
mov
pop
push
fwait
loop
test
icebp
add
in
pusha
pop
fld
and
test
pop
mov
push
in
es
addr16
fisttp
repz
add
pop
enter
push
cli
cs
cmp
mov
push
enter
hlt
sub
in
sub
push
mov
xchg
mov
adc
outs
xchg
stos
adc
in
dec
aas
pop
dec
ss
pusha
pop
push
stos
add
sub
xchg
sub
in
lock
cwde
dec
jecxz
popf
mov
pusha
sub
sub
cmp
add
int
jmp
test
sbb
popa
add
aas
ror
fiadd
or
xchg
in
inc
mov
mov
inc
loopne
(bad)
dec
jge
jbe
lds
inc
jmp
or
sub
js
das
push
pop
dec
pusha
push
push
or
fld
ds
push
xor
pop
jbe
retf
scas
je
retf
int
or
mov
jne
enter
push
pop
movs
movs
xchg
lock
pop
jae
sub
sbb
jg
pop
icebp
lds
cmp
iret
sub
jp
(bad)
mov
cmps
add
mov
sbb
push
or
and
adc
arpl
xor
mov
inc
bswap
xor
jecxz
dec
dec
xchg
jge
lock
sbb
fsub
cdq
in
xchg
cmp
aam
dec
cmp
clc
add
jns
dec
(bad)
pop
inc
pop
adc
sbb
and
pop
fs
push
dec
mov
rol
add
xor
cli
test
xor
leave
sbb
jp
mov
vphaddbd
sbb
outs
addr16
ficomp
cmps
sbb
(bad)
dec
pop
movs
das
aaa
pop
sub
je
cmps
add
ret
ror
add
ret
adc
xor
scas
xlat
call
icebp
movlps
adc
or
jbe
pusha
out
ret
mov
and
mov
push
shr
cmp
xchg
mov
push
test
jo
sub
in
movs
out
and
or
jo
xchg
ja
les
pop
cmp
pop
cli
mov
inc
scas
jo
nop
adc
sbb
enter
sbb
push
jae
jne
cmps
sbb
xchg
dec
dec
jmp
jne
xchg
(bad)
iret
mov
syscall
lods
fsubr
add
push
enter
ss
mov
inc
sbb
xor
add
sbb
pop
imul
or
loopne
add
loopne
push
imul
std
jmp
lea
mov
inc
pop
es
rcl
enter
sub
pop
sbb
pop
clc
cmp
dec
push
(bad)
cmp
and
cmp
out
ret
add
into
in
data16
mov
jmp
ja
push
cmps
ret
or
std
jo
jl
nop
or
mov
sub
adc
enter
call
call
xchg
add
adc
mov
mov
dec
out
daa
push
nop
pop
aaa
push
inc
mov
xchg
xchg
aas
inc
cs
das
cwde
sub
mov
fdiv
inc
das
adc
and
outs
arpl
push
mov
add
js
cmp
add
cmp
push
pop
call
loope
repnz
pop
je
or
repnz
and
cmp
mov
xchg
mov
shl
pop
in
hlt
test
lods
cmp
ds
test
loop
push
and
lea
fist
nop
js
sbb
mov
neg
mov
outs
xor
jle
xor
or
push
shr
pop
push
inc
cmp
jge
sub
xor
mov
lock
nop
nop
inc
and
jle
lds
dec
push
mov
pop
aam
pusha
add
cmp
inc
push
and
sbb
test
adc
cmp
mov
in
sub
push
cmp
or
jne
test
pop
mov
jbe
and
je
out
retf
adc
mov
imul
add
cmp
call
pop
pusha
xor
inc
push
clc
ins
leave
clc
outs
jns
jne
adc
dec
add
cli
add
(bad)
push
test
les
add
jge
add
mov
rcr
std
int
jo
adc
pop
add
cmp
je
cmp
lea
sub
lds
shl
mov
sub
add
pop
push
push
clc
fmul
and
sbb
stos
push
pop
lock
dec
mov
jne
inc
sub
test
je
jecxz
xchg
xor
pop
xor
fcmovb
inc
mov
sub
push
push
fwait
xlat
add
inc
sbb
push
add
cdq
outs
je
mov
jmp
rcl
fidiv
or
inc
fisttp
mov
ret
add
jecxz
push
aas
or
pop
aas
or
ds
call
jbe
push
push
cs
fstp
daa
lahf
xchg
pop
jne
inc
add
cmp
loopne
pop
xchg
adc
sti
xor
sbb
add
add
or
lds
push
dec
pop
or
mov
dec
inc
xchg
or
loope
test
xchg
mov
rcl
(bad)
(bad)
pusha
pusha
sub
es
add
or
call
cli
pusha
mov
pop
fmul
test
jne
sbb
rol
ror
mov
mov
sti
je
mov
push
push
jg
push
jb
xchg
in
mov
mov
das
arpl
pusha
fdiv
add
imul
fld
cmp
pop
sub
add
je
leave
mov
sbb
sbb
sub
push
shl
lock
xchg
xchg
adc
push
or
leave
leave
cmovle
loope
add
and
mov
add
push
pop
cmp
sbb
sbb
cmp
sbb
rcr
dec
inc
dec
ret
xor
jne
inc
in
mov
je
push
and
xchg
or
xor
or
or
not
cmps
add
sti
xchg
setle
in
mov
adc
or
(bad)
xchg
jno
jb
xor
mov
mov
ja
push
and
adc
adc
sub
jb
xchg
or
push
or
daa
xchg
daa
add
lock
jnp
inc
xor
or
les
push
jae
mov
je
and
jnp
les
adc
fs
mov
fcomp
sbb
xchg
ror
and
test
push
into
hlt
and
push
mov
push
or
data16
fs
sbb
mov
or
push
and
sub
xchg
nop
mov
jae
or
shr
mov
xor
mov
hlt
mov
repnz
or
pusha
xor
mov
lea
pushf
retf
push
push
pusha
pop
mov
mov
ja
jne
pop
pop
in
test
sbb
rol
xchg
ins
add
sub
jbe
and
pusha
push
or
retf
push
inc
(bad)
imul
or
out
and
outs
push
inc
add
add
inc
jle
test
cwde
mov
or
add
push
stos
lock
call
out
adc
push
push
inc
lods
sar
fdiv
retf
and
scas
jnp
mov
dec
xor
inc
xchg
std
adc
iret
rcr
sahf
push
sub
pop
cmp
or
dec
inc
push
ins
retf
push
clc
add
or
in
adc
je
test
cmp
lea
and
or
loope
push
scas
and
out
movs
pop
sbb
enter
jo
stc
loope
jmp
push
sbb
push
cmps
jecxz
push
add
pop
cwde
mov
sbb
pop
nop
dec
xchg
mov
push
lods
and
mov
hlt
shl
jae
lods
hlt
inc
cmp
mov
sbb
adc
clc
fild
xor
call
arpl
adc
retf
jecxz
rol
and
xchg
pop
popa
mov
xchg
enter
stos
xor
cmp
mov
or
sub
or
lods
(bad)
das
neg
mov
xor
rep
pop
sub
fidiv
dec
(bad)
xchg
mov
nop
fcmovu
aaa
adc
bound
pop
xlat
mov
jmp
sub
inc
out
xchg
push
push
or
xchg
shr
mov
cmp
frstor
push
inc
mov
add
movs
test
daa
xor
fs
pop
pusha
adc
mov
repz
mov
sub
xor
xchg
xor
jb
jo
out
push
and
and
imul
lds
adc
pop
ret
dec
add
pop
push
or
add
(bad)
cmp
cmp
dec
ins
arpl
inc
das
test
je
ret
cmp
ror
inc
ror
jae
sub
push
pop
push
cld
je
push
lea
adc
or
lods
add
add
test
call
ficom
mov
jae
or
mov
dec
adc
inc
mov
retf
and
xor
inc
add
movs
jae
in
test
adc
or
add
mov
ror
cmp
pop
lods
pop
iret
ret
ret
ds
data16
(bad)
cwde
js
test
popf
gs
pop
mov
or
cwde
aad
cmp
jge
inc
sbb
push
popf
inc
adc
rol
cmp
mov
inc
adc
das
mov
pop
xchg
cmp
cs
jb
pusha
xor
inc
push
jb
sub
sub
ret
rcr
dec
jb
pop
pusha
xchg
and
sub
test
add
outs
iret
lods
dec
add
adc
push
push
lods
jmp
cmp
jbe
popa
scas
xchg
pusha
push
into
or
fistp
push
add
mov
in
shl
shr
xor
int3
shl
ret
jmp
addps
loope
jp
push
jle
ja
jb
test
dec
add
push
fwait
add
jmp
add
xor
dec
xor
imul
jae
iret
dec
mov
cmp
(bad)
js
pop
inc
inc
mov
mov
adc
cmp
jbe
mov
sbb
or
add
pop
jno
test
les
xchg
(bad)
shl
jmp
pop
xchg
test
mov
enter
or
or
clc
nop
xor
into
jo
popf
sub
jmp
mov
es
sub
dec
test
sbb
cmps
jnp
out
rcl
inc
or
sub
cmp
lock
mov
fild
les
ret
jne
mov
outs
mov
jmp
add
aam
(bad)
mov
mov
sbb
rol
clc
push
lahf
(bad)
clc
jle
cmp
dec
dec
fsubr
jmp
and
imul
cmp
fisttp
jne
mov
jmp
push
les
mov
enter
pop
inc
int3
pop
add
jmp
mov
aam
cs
fucomi
in
mov
hlt
push
cli
fdivr
lock
sbb
add
ret
pop
jo
mov
aas
or
add
adc
mov
adc
or
push
es
pop
or
sub
or
(bad)
adc
gs
push
or
or
mov
fiadd
mov
or
cmp
stos
popf
ss
push
xor
pushf
lods
stos
or
shl
fbstp
jecxz
add
sbb
pop
jl
cmp
cld
push
push
call
sbb
mov
add
ror
pop
dec
in
push
jae
dec
sub
push
sar
dec
gs
sub
push
setnp
(bad)
sbb
or
pause
sbb
lock
mov
xchg
jle
mov
mov
stos
xchg
ret
fmul
push
(bad)
(bad)
mov
mov
mov
push
and
sub
std
cmp
fcomp
mov
test
push
jp
cmp
imul
push
or
ss
add
jne
push
mov
lahf
push
cs
shl
mov
xor
dec
jo
xor
data16
ja
push
mov
cvtps2pi
add
adc
and
pop
cmp
or
jb
mov
push
xchg
mov
clc
dec
les
jmp
fist
mov
sbb
test
loopne
pop
cmp
sub
mov
mov
xor
adc
and
out
mov
jbe
push
xchg
lahf
je
lods
xchg
mov
push
mov
push
dec
add
jp
bound
js
mov
pop
rep
movntq
out
imul
push
xor
cmp
into
cmp
xor
sub
addr16
xchg
xchg
cmp
scas
adc
push
and
sar
fs
sub
or
cld
stos
mov
jecxz
sbb
loop
nop
aam
in
cmp
enter
pushf
cli
loopne
cmp
xchg
(bad)
iret
push
add
jmp
imul
enter
push
pusha
fild
push
mov
inc
xchg
sub
stos
aas
nop
mov
cmp
mov
jge
push
fld
jmp
stos
movsx
je
sub
or
mov
pusha
sub
add
or
inc
cmp
cmp
jmp
loop
test
add
sbb
dec
adc
popa
fs
(bad)
dec
cdq
xor
mov
cmp
jne
push
pop
call
xor
pop
rcl
push
inc
call
pop
or
mov
push
mov
jne
mov
pop
bound
and
aam
and
cmps
in
shr
cmp
nop
inc
and
dec
dec
(bad)
add
movs
cmp
test
jle
mov
js
or
mov
push
mov
push
mov
dec
xchg
xlat
out
push
pop
cmp
xchg
loopne
pusha
adc
add
push
and
or
add
jmp
or
fmul
jecxz
cmp
outs
jp
cwde
pop
dec
retf
cld
jmp
jecxz
mov
mov
cmp
jb
mov
add
jl
mov
sahf
call
jae
nop
dec
addr16
mov
xor
sbb
sub
dec
idiv
das
adc
lock
sub
dec
cmp
sbb
pushf
cwde
(bad)
mov
mov
inc
lahf
mov
mov
xor
lods
or
mov
add
test
or
(bad)
pop
lea
not
add
rol
scas
xor
sbb
add
cmp
sbb
mov
mov
mov
outs
inc
mov
sbb
and
ja
pop
inc
mov
add
shr
or
mov
bound
movs
imul
adc
and
loop
lea
rol
fdivr
in
jnp
push
inc
cld
popa
ret
pop
cmp
(bad)
jge
mov
add
leave
shr
retf
adc
cmovg
adc
js
inc
sbb
push
adc
xor
stc
sbb
and
xor
jae
add
adc
cmp
iret
enter
add
enter
xor
xor
mov
iret
cmp
cmp
inc
iret
enter
push
inc
clc
dec
xor
ds
pop
dec
or
push
nop
and
in
push
sbb
pop
mov
sub
pusha
mov
ds
in
or
ins
dec
or
in
repz
jo
push
fild
xchg
or
in
and
ins
push
test
in
enter
jl
add
nop
mov
outs
bound
mov
or
int
adc
in
push
pop
ret
xor
mov
sbb
dec
(bad)
or
data16
jp
loopne
xor
rol
mov
(bad)
mov
mov
dec
lea
mov
add
call
push
add
xchg
xchg
cmp
cld
sub
dec
(bad)
jg
cld
xchg
push
cmp
clc
ja
jne
push
xor
cdq
sbb
sqrtps
in
jg
scas
in
mov
or
add
test
nop
dec
mov
cmp
xchg
sub
add
jb
je
leave
sbb
xchg
pop
jo
je
jb
pop
ins
ins
lock
sbb
and
sbb
push
push
jb
fs
push
leave
xchg
in
pop
and
loopne
xchg
sbb
pusha
pop
pop
jb
xchg
sbb
pop
push
pop
jb
push
push
fcomp
pop
leave
adc
aam
dec
enter
dec
rcl
leave
xchg
sbb
dec
int3
push
jb
xchg
dec
inc
inc
sbb
pop
leave
inc
inc
les
pop
jb
cmp
sbb
and
xchg
sbb
xchg
cmp
xor
leave
sbb
xchg
pop
xor
sub
mov
sbb
and
sbb
sub
and
test
leave
sbb
xchg
mov
cmp
jge
xor
cmp
sahf
das
xor
xchg
mov
xchg
retf
nop
adc
add
jb
pop
jl
add
in
inc
cs
add
inc
inc
push
inc
ins
and
push
fs
fs
pop
push
fs
add
leave
enter
add
pushf
pop
jb
inc
dec
and
and
or
leave
inc
add
add
daa
xchg
pushf
cmp
xor
xor
div
add
mov
sub
and
xchg
pop
or
add
retf
and
dec
add
add
push
nop
adc
jg
push
in
movs
and
nop
dec
mov
sbb
and
xchg
sub
sbb
pushf
scas
in
cs
adc
mov
xchg
and
in
push
in
or
add
arpl
sub
shl
add
or
retf
test
int3
pop
push
push
(bad)
sets
add
xor
mov
mov
sub
jne
or
rol
add
jge
push
mov
mov
add
out
add
jg
mov
fmul
push
xor
inc
xchg
test
fcomp
cwde
xor
push
pop
cld
cmp
dec
xchg
scas
mov
std
jmp
rol
pop
sti
aaa
push
sub
jmp
out
out
pop
test
push
add
sar
clc
add
movs
push
fcmovb
repnz
sti
pop
pushf
sub
nop
lock
jne
repnz
bound
xor
shl
lea
lea
mov
or
fs
fs
dec
adc
shr
dec
test
je
sbb
push
dec
and
jnp
pop
pop
rcl
inc
push
push
adc
dec
push
movs
test
repz
inc
mov
and
mov
push
dec
jge
repnz
je
stos
mov
and
add
jecxz
and
in
jle
push
inc
shr
mov
movs
aaa
sub
sbb
cld
ret
push
movs
lds
arpl
test
xchg
sub
inc
aam
push
and
les
push
repnz
pop
ja
push
mov
mov
mov
ret
jle
and
outs
dec
adc
dec
mov
add
movs
stc
sar
push
rol
shl
cmp
add
imul
pusha
or
sbb
cmp
js
inc
jo
popf
mov
neg
pop
fcomp
inc
jne
sub
jl
loopne
mov
sar
lock
call
sub
push
sbb
mov
jg
jp
mov
outs
(bad)
sbb
movs
loope
cs
arpl
push
in
enter
adc
adc
nop
sbb
pop
lock
rcl
retf
mov
push
or
jbe
inc
cmps
pop
adc
jge
sbb
lahf
cmp
and
inc
or
xor
push
ret
and
sti
push
xchg
xchg
(bad)
aas
cmp
push
xor
pop
fiadd
call
xor
mov
jle
fwait
cld
inc
adc
inc
dec
jb
mov
sub
and
or
out
ins
ret
js
pusha
in
sub
out
mov
sti
or
add
test
adc
rol
xor
(bad)
xor
or
sbb
in
mov
jo
add
imul
sbb
loopne
dec
mov
in
sub
sbb
mov
dec
dec
popa
adc
out
inc
add
sub
mov
or
push
or
push
jo
imul
cli
pop
call
pop
cs
mov
loop
ficomp
sub
lock
pop
out
adc
lods
pop
clc
inc
adc
xchg
je
ret
add
imul
push
push
jmp
jne
mov
dec
std
aam
inc
xchg
or
outs
add
gs
les
in
jmp
lea
lock
add
jb
mov
jb
(bad)
das
call
icebp
or
dec
inc
es
jae
xchg
or
fdiv
jo
mov
and
popa
fcom
xchg
xchg
mov
adc
jp
fnstsw
repz
icebp
pusha
aaa
sub
add
push
and
loope
vcmpss
nop
call
lods
dec
pop
mov
fld
add
xchg
sar
mov
push
pop
es
pop
jmp
push
xchg
cmp
call
xor
sti
sbb
test
retf
mov
and
ins
shl
mov
les
push
pop
mov
imul
lea
mov
jmp
aaa
and
pop
push
fwait
clc
clc
push
push
ret
and
push
or
(bad)
ds
aaa
stos
or
repz
mov
and
sub
pop
mov
pop
mov
mov
cmp
enter
imul
xchg
cmp
or
adc
(bad)
push
hlt
xor
xor
xchg
mov
pop
sbb
rol
xchg
rol
sti
clc
cwde
fadd
or
pop
in
xchg
add
loop
inc
lea
add
adc
imul
add
cmp
test
fst
dec
or
or
add
enter
xor
jne
js
mov
retf
jp
ins
mov
sbb
sbb
inc
push
out
add
rol
lock
lock
daa
loop
(bad)
test
ret
mov
adc
xchg
test
or
sbb
dec
dec
or
ins
mov
jmp
das
or
pop
or
fsubr
call
and
jbe
inc
adc
push
and
mov
sbb
idiv
push
push
dec
or
push
mov
(bad)
ror
xor
add
add
dec
pop
mov
cmp
and
xchg
call
cmps
push
and
pop
adc
cmp
inc
pop
mov
sbb
jg
jne
mov
icebp
sar
or
cmp
and
add
mov
inc
ins
test
leave
daa
cmp
and
pop
dec
add
fisubr
adc
dec
or
gs
(bad)
sub
loope
or
add
xchg
jne
xchg
lfs
xor
mov
mov
outs
push
je
or
pop
icebp
fmul
push
pop
push
mov
dec
and
inc
cmp
inc
adc
mov
sbb
or
dec
cmp
daa
fadd
jne
dec
adc
mov
sub
or
cmp
xor
inc
ds
arpl
add
add
xchg
sub
mov
mov
push
inc
mov
push
jae
and
daa
adc
pop
jnp
vpunpckldq
mov
mov
mov
xor
sub
outs
setl
add
cmp
pop
cmp
je
cwde
push
jno
cmps
adc
fcomp
sar
pop
jne
adc
aaa
div
out
pop
xlat
push
and
push
inc
sub
inc
pop
and
push
mov
and
adc
pop
sub
mov
cmp
fst
daa
inc
rol
imul
mov
test
je
js
mov
out
(bad)
aam
or
or
mov
push
adc
mov
cmp
mov
fcom
pop
retf
and
mov
mov
call
or
int3
ret
inc
jne
iret
cmp
into
xor
ds
and
daa
(bad)
addr16
dec
loopne
jmp
xor
cmp
cdq
rcr
cmp
ins
push
mov
adc
sub
shr
int
pop
mov
cld
fistp
xchg
ret
div
inc
fcomp
loopne
push
mov
fist
dec
push
out
cli
mul
pop
cld
ins
fnclex
sbb
dec
or
jl
pop
jp
push
adc
test
jmp
sub
mov
movs
or
jle
xlat
sub
mov
add
sbb
add
fimul
xor
sbb
push
out
inc
adc
js
jmp
test
cmp
aaa
jae
fisttp
dec
mov
or
add
shl
jl
dec
push
and
pusha
xlat
add
adc
pop
adc
dec
dec
cwde
dec
ja
outs
push
add
add
mov
rol
fsub
icebp
pop
aas
sbb
or
push
daa
addr16
(bad)
cs
or
mov
dec
dec
inc
lea
leave
xor
or
xor
inc
inc
mov
dec
dec
mov
loop
add
hlt
sbb
lahf
and
(bad)
push
adc
adc
or
lock
and
cmp
cmp
mov
loopne
xchg
inc
rol
cmp
cmp
scas
loopne
jns
cmp
(bad)
cdq
jnp
clc
shl
add
jmp
dec
dec
cli
xchg
dec
cmp
or
jne
bnd
repnz
xor
sub
leave
push
and
fisttp
inc
or
inc
dec
push
hlt
mov
gs
adc
leave
add
lds
cpuid
mov
pop
ror
mov
xor
sti
inc
mov
jge
push
xor
sbb
mov
imul
xor
adc
xchg
adc
jne
pop
(bad)
outs
shl
cmp
mov
dec
or
dec
jne
and
cmp
cmp
imul
adc
sub
add
or
loope
mov
iret
repnz
sub
idiv
pop
lock
xor
(bad)
adc
mov
test
imul
mov
ins
inc
test
adc
je
mov
pop
loope
xgetbv
int3
in
mov
cli
dec
lock
es
fsubr
jne
scas
mov
jbe
enter
mov
mov
fidiv
and
sahf
outs
pop
cmp
pushf
loopne
pop
test
(bad)
sub
pop
inc
test
sub
out
mov
inc
int3
add
fdivr
mov
inc
jmp
lea
mov
mov
xor
xchg
movs
or
lea
movs
ins
or
stc
rep
push
loop
xchg
imul
test
or
in
fwait
pusha
add
cmp
pusha
pop
bound
inc
xor
mov
jnp
jno
mov
push
fistp
lds
xchg
sbb
outs
inc
fisttp
ss
add
add
js
or
pop
adc
lods
mov
dec
mov
ret
push
rcr
not
add
ss
push
or
pop
enter
in
add
cmp
ins
loopne
and
jne
mov
je
cmp
and
inc
cdq
call
lock
cld
mov
add
mov
xor
push
or
fisttp
loopne
xor
lds
outs
scas
or
pmullw
popa
inc
mov
fldenv
xor
push
sub
dec
pop
test
dec
retf
fwait
mov
fnstsw
mov
fwait
inc
add
sbb
add
enter
gs
jne
pop
cs
add
cwde
sbb
adc
xor
push
cwde
leave
outs
sbb
lea
fcmovu
popf
jb
dec
das
jo
pop
jns
dec
call
sub
ds
mov
jae
push
inc
in
out
pop
cs
addr16
int3
cmp
test
icebp
or
arpl
mov
mov
jl
sbb
push
pop
xor
adc
addr16
mov
jo
xchg
adc
stos
xchg
in
outs
ret
sub
push
add
shl
jbe
out
mov
(bad)
sub
or
not
inc
or
sti
jg
jmp
mov
mov
cmp
jne
mov
test
jne
or
adc
loopne
or
jo
not
lods
and
(bad)
sub
pop
pushf
push
pusha
mov
or
dec
push
ds
aas
(bad)
push
popf
add
adc
or
pop
cmp
(bad)
or
cmp
out
aaa
mov
fdivr
sub
icebp
or
jb
dec
ss
clc
mov
jae
push
mov
ret
clc
sbb
jb
push
dec
in
cmps
push
rcl
aaa
sub
test
add
adc
sub
or
cwde
scas
add
dec
dec
push
pop
aas
mov
dec
dec
popf
push
adc
cmp
xor
ret
into
cmp
or
cld
xor
repz
and
vphaddbw
push
add
mov
inc
or
lods
mov
sbb
dec
je
shl
outs
adc
enter
js
add
imul
cmp
jg
mov
push
shl
add
stos
push
hlt
imul
xchg
mov
dec
jo
xchg
jbe
call
pop
cmps
iret
xor
in
arpl
jecxz
inc
mov
and
ss
int3
add
cmp
push
cld
adc
add
inc
sub
mov
pop
je
in
into
adc
xchg
sub
jb
test
js
jbe
test
jge
mov
cmc
pop
sbb
(bad)
dec
test
xchg
inc
add
push
sbb
dec
or
sti
and
lea
mov
xchg
jno
mov
mov
js
adc
sbb
gs
in
mov
cli
cs
xchg
into
or
test
cmp
add
je
mov
mov
add
cmp
je
jmp
mov
mov
jmp
jmp
je
bound
sub
sbb
ins
imul
sbb
aad
mov
jp
xchg
dec
enter
push
fild
call
xlat
and
mov
dec
cli
lea
adc
pushaw
ror
mov
fsubr
mov
push
adc
sub
imul
inc
adc
jecxz
or
mov
fiadd
jo
nop
mov
mov
pushf
xchg
test
sbb
xor
cmp
adc
jmp
push
imul
ins
mov
jmp
fadd
or
shl
dec
dec
xchg
push
add
lods
jge
mov
push
adc
ret
pop
push
cmp
or
add
mov
push
mov
cld
lea
mov
cli
jmp
pop
rcr
test
clc
scas
push
or
or
cld
adc
add
jmp
in
pop
adc
mov
mov
add
jmp
xchg
and
cmp
adc
fmul
cmp
inc
add
jmp
ss
das
loopne
sbb
cmp
cwde
jecxz
adc
cs
and
sbb
pshufw
jo
pop
cmps
jge
sub
sub
xor
jne
push
jmp
outs
mov
xlat
rcr
ret
dec
loop
adc
call
add
test
rcl
jne
sbb
(bad)
lahf
inc
dec
ss
and
retf
retf
dec
loopne
sahf
enter
into
mov
fdiv
sub
cmp
pop
clc
clc
je
add
add
jmp
aam
mov
add
and
outs
inc
dec
pop
pop
pop
xchg
add
(bad)
mov
mov
daa
js
pop
jmp
jl
stos
cld
pushf
fmul
pop
pop
jne
pushf
scas
and
fld
outs
cmp
dec
mov
fwait
ret
pop
or
mov
inc
mov
out
aaa
test
cmp
pusha
sbb
ror
add
dec
jmp
add
fst
shl
add
data16
popa
push
int3
(bad)
les
xor
enter
arpl
mov
jno
lock
fild
inc
add
jne
and
pop
enter
movs
jecxz
inc
add
adc
or
shr
lahf
std
inc
jae
lea
fmul
xor
hlt
sbb
inc
add
call
or
inc
ret
call
out
leave
aad
repnz
ret
aam
xor
cmp
call
pop
jne
retf
cmp
and
(bad)
and
ds
adc
add
pop
mov
adc
adc
(bad)
popf
daa
adc
pusha
jg
cmp
add
sar
xor
dec
(bad)
scas
cld
sub
sti
inc
add
pop
cmp
retf
bt
(bad)
std
cmp
xchg
and
add
repz
and
cmp
ja
test
loopne
push
retf
stos
add
test
rcr
xchg
(bad)
push
dec
out
jae
std
out
or
lea
pop
lea
and
jae
movq
cmps
mov
cmps
sub
je
cvttps2pi
push
fist
cmp
add
mov
outs
dec
hlt
inc
hlt
mov
xlat
add
call
test
xor
inc
and
xor
mov
pop
ror
repnz
sub
pop
sbb
ret
sbb
or
outs
and
xor
ins
or
dec
sbb
int
mov
add
add
or
lock
push
addr16
cld
and
jb
add
add
cdq
cmps
loope
add
adc
outs
adc
(bad)
loope
jg
xchg
mov
dec
loope
inc
add
ins
cli
lahf
loop
jmp
push
je
mov
mov
dec
add
mov
and
scas
pop
out
sti
pop
inc
fdiv
movs
and
jmp
int
fsub
nop
or
in
clc
bound
ins
jg
out
nop
cdq
pop
mov
mov
and
dec
cmp
daa
or
add
int3
out
dec
lock
add
inc
or
call
fdiv
(bad)
dec
nop
fadd
mov
push
ds
ins
pop
popa
xor
out
add
cld
jnp
out
jle
bound
test
out
movs
sub
add
pop
add
and
and
sbb
(bad)
cmovns
mov
sbb
push
out
inc
imul
dec
adc
push
and
repz
jl
xor
outs
push
jbe
out
mov
pop
push
dec
dec
jg
jg
mov
addr16
jg
jg
jo
ins
rol
rol
and
push
ins
imul
int
out
and
jl
movs
dec
loopne
push
cld
je
xor
jno
je
sub
or
jmp
nop
xor
push
add
retf
jmp
sahf
and
dec
adc
aas
sahf
or
jmp
sub
mov
test
data16
movs
shl
sub
data16
mov
mov
add
mov
add
cmp
mov
jo
pop
in
ror
rcl
loopne
mov
mov
aam
mov
mov
pop
lock
inc
inc
dec
jne
jge
sbb
lahf
mov
rcl
jnp
(bad)
push
mov
shr
or
retf
add
leave
push
rol
lahf
movs
pop
(bad)
xor
or
ret
in
fs
sahf
push
or
add
fild
mov
add
lock
lock
push
push
stos
or
xchg
call
mov
mov
mov
shl
or
je
cmps
add
fcmovu
xor
fcmovnbe
adc
test
iret
dec
mov
loopne
inc
adc
sub
push
je
rcr
test
mov
ja
fidivr
sti
mov
daa
nop
rcl
call
fnstcw
pushf
ror
mov
add
rcr
push
and
shl
shl
test
jne
and
cdq
das
or
retf
sub
fisub
aas
in
out
adc
lds
test
adc
sbb
pop
sbb
mov
ins
loop
cmps
scas
cli
or
pop
sub
stc
addr16
loope
outs
int
dec
and
xchg
(bad)
paddusb
dec
aam
add
fsubr
jmp
push
fadd
mov
adc
inc
jmp
or
test
ja
jae
aad
cmp
loope
sub
int
pop
aas
fidiv
ja
jno
jns
or
xor
loopne
push
sbb
call
stos
js
ret
clc
outs
inc
and
test
out
adc
test
je
cdq
call
sbb
lahf
cdq
xor
lods
cli
call
(bad)
xchg
(bad)
jle
mov
test
je
add
les
mov
push
mov
icebp
loope
(bad)
fucomip
stos
imul
sbb
scas
inc
or
or
or
pushf
loope
ret
add
rol
add
mov
pusha
imul
cli
ret
inc
clc
out
out
mov
add
movups
mov
in
iret
jmp
dec
mov
movs
lea
or
push
sub
pusha
jo
mov
jb
(bad)
push
add
push
and
jmp
jae
out
ins
xlat
add
sbb
test
and
test
pop
inc
bound
mov
arpl
jg
add
mov
xchg
sbb
sub
mov
jb
in
lock
and
imul
xchg
cdq
adc
dec
jmp
gs
xor
es
xor
sub
imul
xchg
adc
cs
test
pop
mov
ret
lods
add
sub
push
rol
push
cmp
push
sub
imul
push
loopne
cmps
ins
out
add
int3
lds
call
adc
xor
fmul
sbb
and
add
call
pop
mov
out
mov
adc
dec
add
xchg
mov
cmp
xor
dec
fcom
clc
jmp
pop
pop
jbe
push
cld
pop
pop
test
and
mov
fdivr
ins
jge
cdq
pop
pusha
mov
dec
jp
push
mov
leave
test
or
dec
or
pop
pop
mov
js
imul
inc
add
or
push
test
push
adc
cmp
push
jge
push
or
jge
cmp
adc
cmp
cli
dec
imul
inc
mov
cmc
iret
mov
ror
ja
xchg
pop
pop
nop
jecxz
jecxz
add
adc
cmp
pop
cmp
inc
push
adc
ins
int3
arpl
imul
ret
xor
jge
clc
in
push
xchg
and
imul
inc
add
cmp
adc
mov
sbb
push
retf
or
or
add
in
out
add
adc
imul
(bad)
(bad)
sub
dec
and
adc
neg
cmp
mov
pusha
ds
(bad)
fadd
inc
cs
mov
mov
out
icebp
jmp
adc
popa
jae
es
dec
ds
sub
xor
dec
in
inc
mov
jge
je
xor
inc
and
pop
mov
push
add
jo
or
and
and
jne
test
sbb
iret
test
pop
imul
xor
sbb
imul
inc
fwait
ret
or
cld
xchg
shl
arpl
frstpm(287
int3
shl
and
push
xor
xor
or
mov
in
mov
daa
js
pop
mov
das
push
das
xor
and
pop
or
push
or
mov
popf
sub
loopne
push
test
jmp
pop
push
fwait
sub
mov
js
xor
fstp
push
sub
pop
mul
push
jnp
push
pop
and
lock
fmulp
sbb
cwde
jecxz
enter
jmp
adc
adc
push
scas
jb
push
in
adc
test
test
push
das
mov
cmc
dec
jmp
js
(bad)
jmp
adc
and
shl
pop
push
or
jmp
push
lds
fiadd
sbb
fidivr
xor
xchg
ret
jnp
mov
loopne
ror
xor
inc
xchg
add
pop
ret
js
call
movs
xchg
adc
pop
add
push
bound
xchg
sub
icebp
sub
jae
adc
(bad)
jae
data16
outs
js
or
xchg
imul
out
and
jb
jle
push
jae
inc
rol
stos
cmp
push
jae
jns
stos
pop
jb
push
dec
adc
sub
xchg
lods
jb
jg
cmp
or
mov
xchg
push
movs
cli
inc
add
retf
mov
jg
inc
mov
rol
add
mov
cmp
jne
pop
lahf
daa
push
mov
add
adc
push
enter
cs
cwde
jne
arpl
movs
push
dec
gs
nop
push
mov
push
mov
(bad)
clc
sbb
aaa
es
xchg
inc
mov
or
in
mov
push
das
out
jmp
add
push
add
add
shl
test
pop
movs
les
sbb
dec
adc
push
pop
cmps
lds
imul
mov
add
mov
inc
xor
(bad)
sbb
pop
adc
test
push
mov
fmul
pop
mov
mov
jne
rcl
mov
dec
or
sbb
adc
pop
loopne
jo
int
cwde
dec
lock
cmps
push
loopne
sbb
inc
xchg
pop
loop
test
mov
cmp
jne
push
in
mov
cmp
and
add
mov
fcomp
fwait
js
(bad)
push
int3
add
xchg
inc
aam
mov
push
fwait
add
adc
std
and
fwait
(bad)
hlt
cdq
sub
stos
xor
xor
ja
xchg
(bad)
(bad)
(bad)
call
cmp
test
jbe
lea
lea
sub
outs
cmps
or
int3
push
mov
pop
or
in
cmps
jmp
pop
and
jo
mov
add
push
add
hlt
push
popa
rcl
jb
(bad)
mov
pop
inc
xor
mov
mov
jb
mov
push
pushf
xor
mov
xor
xor
jle
jmp
ret
nop
sub
push
bound
or
shl
es
or
hlt
push
inc
push
push
jb
push
shr
and
fwait
shr
mov
fcomp
cli
cmp
dec
sbb
push
les
pusha
je
mov
adc
mov
mov
es
rcr
pop
sbb
xor
dec
inc
adc
pop
inc
or
push
(bad)
mov
stc
fisttp
mov
rcr
rcl
test
sub
sub
jp
and
shl
sub
or
pushf
jmp
and
push
dec
popa
mov
bsf
add
sbb
xor
mov
nop
scas
loope
mov
rol
sar
or
cmp
je
mov
sub
fmul
ret
shl
in
jecxz
push
adc
jle
div
retf
sub
std
add
add
xor
or
iret
xor
jo
mov
cmps
and
and
xchg
jno
retf
out
jne
aas
pop
cwde
push
push
push
inc
dec
hlt
cmp
je
push
jmp
repz
push
push
in
jnp
iret
jmp
fs
or
js
std
ret
xor
addr16
int
data16
or
loop
test
(bad)
pop
mov
or
dec
jbe
les
or
pusha
push
xor
dec
dec
fadd
add
add
mov
sbb
cwde
retf
out
shl
push
xor
mov
jmp
push
push
(bad)
sub
push
daa
int3
xor
sub
xor
mov
jbe
shl
mov
clc
ret
push
pop
repz
mov
jmp
mov
rcr
test
clc
and
add
push
daa
daa
xor
inc
push
sbb
adc
pop
xchg
add
push
jl
xor
sbb
pop
jmp
stc
add
add
scas
test
inc
pop
pop
pop
leave
mov
cmp
adc
cmp
adc
and
sbb
or
and
add
mov
stos
jo
mov
inc
cld
les
mov
mov
(bad)
fdivr
in
rcr
int3
in
arpl
js
cmp
or
dec
dec
ret
and
cmp
push
outs
push
dec
clc
inc
sub
int3
jbe
int3
js
push
ret
jae
and
jge
xor
sbb
push
movsx
add
idiv
imul
dec
or
cmp
cwde
(bad)
out
std
pop
fdivr
inc
cmp
jle
mov
or
add
cmp
gs
pop
adc
imul
jmp
inc
jb
pop
or
retf
add
jg
mov
xchg
or
pop
inc
popa
out
int
add
fsubr
jge
add
add
lods
test
mov
cmp
pop
icebp
int3
pop
fcom
or
cmp
in
adc
dec
cmp
test
and
cmps
adc
sbb
sub
mov
xchg
dec
xchg
mov
push
mov
mov
ret
push
sahf
mov
adc
xor
out
popa
js
sbb
jg
stos
or
jecxz
sbb
ret
test
mov
push
or
cmps
push
xor
xor
xor
or
pusha
lea
(bad)
push
ror
sub
and
stos
xchg
and
xchg
dec
inc
jmp
fisubr
and
push
xor
(bad)
cmp
jne
das
je
mov
pusha
push
push
mov
test
data16
or
cmp
add
seta
fiadd
fcmovbe
cmp
mov
sbb
pop
fadd
mov
push
inc
inc
clc
loop
add
and
or
inc
add
lea
adc
ds
aad
push
inc
jle
test
adc
or
push
ror
add
and
pop
mov
data16
jo
mov
sub
(bad)
cmp
sub
xchg
inc
xchg
mov
adc
aaa
jge
fnsave
mov
je
leave
sbb
or
inc
ins
adc
adc
ins
pop
es
push
inc
mov
xchg
or
jg
aam
loopne
mov
inc
mov
push
dec
push
inc
inc
xchg
cmp
jl
jmp
mov
or
ret
pusha
mov
and
out
add
or
xchg
jbe
stos
push
jecxz
push
inc
and
jl
outs
addr16
int3
cmp
jae
fsubp
lea
push
clc
dec
add
inc
lock
sub
movs
lds
bound
sbb
(bad)
fdiv
add
call
(bad)
add
add
adc
adc
xor
loop
lock
dec
push
push
inc
or
sbb
fimul
dec
inc
sbb
xor
add
add
add
aam
sbb
and
daa
jg
mov
cmc
mov
test
test
sbb
inc
sbb
clc
fild
xchg
or
push
pop
sub
mov
and
jne
sub
pop
mov
add
imul
cwde
mov
sbb
stos
dec
(bad)
xchg
push
jbe
mov
cs
push
mov
pop
dec
mov
jbe
cmp
jl
mov
jne
cmp
jo
push
lahf
jne
inc
rol
mov
mov
sbb
test
cmp
push
or
add
call
xchg
rcr
pusha
or
ss
sub
pop
sbb
pop
(bad)
pop
lock
jo
je
pop
dec
dec
xchg
push
push
inc
add
sahf
inc
and
push
sbb
cmp
or
fist
fs
cmps
into
cmp
dec
clc
pop
cmp
jae
(bad)
fdivr
add
adc
inc
hlt
jl
or
jg
es
fs
mov
sub
mov
hlt
ins
adc
(bad)
fild
hlt
pop
cmp
jne
inc
add
add
xchg
test
jne
xor
lahf
mov
das
out
push
div
into
inc
add
adc
jb
jp
lds
adc
iret
or
ds
push
push
push
rcr
scas
mov
test
cs
lock
adc
and
cmp
clc
faddp
mov
or
jb
mov
push
lds
add
fdiv
inc
pop
push
ins
add
pushf
jg
mov
ds
ret
push
test
add
lahf
aaa
jo
ror
stos
push
fmul
and
rcr
sub
or
xor
jo
pop
lea
adc
jp
push
push
push
mov
popf
pop
xor
mov
xchg
shl
ins
push
sbb
or
xchg
loop
mov
sbb
shr
sbb
ret
test
dec
adc
xor
lock
add
jo
dec
jmp
pop
or
arpl
mov
cmp
repnz
inc
push
or
neg
add
mov
adc
leave
jns
mov
(bad)
mov
enter
mov
adc
mov
outs
jmp
loope
test
dec
cmp
xor
(bad)
in
mov
in
push
cmps
push
jmp
pop
push
je
div
rcl
adc
push
in
push
mov
mov
mov
or
retf
push
push
mov
loop
push
(bad)
sbb
jns
movs
cdq
je
cmps
adc
cmc
pop
mov
push
pop
xlat
jecxz
rcl
imul
jmp
inc
mov
inc
(bad)
push
mov
dec
shr
imul
scas
adc
push
aam
lock
jo
mov
mov
sub
test
push
rol
sbb
mov
dec
inc
mov
rcl
sbb
jl
sbb
rcr
into
xor
test
inc
inc
sahf
sub
add
jmp
xchg
cmp
mov
mov
push
fdiv
jecxz
pop
nop
adc
jmp
or
jae
mov
arpl
sbb
mul
mov
cmps
mov
and
(bad)
jbe
sbb
adc
and
cmp
jb
neg
xchg
rol
pusha
xor
mov
add
(bad)
mov
push
jmp
dec
or
sbb
addr16
call
lock
ins
jp
add
jp
add
clc
jbe
mov
cmps
cmps
and
rol
and
stos
push
push
and
sbb
pop
out
mov
xor
test
cmp
lar
or
cmp
pop
pop
loop
sub
xor
jne
mov
pop
dec
sbb
inc
or
test
mov
adc
and
xchg
mov
and
ins
or
popf
sub
test
add
adc
mov
add
sbb
or
sar
xor
sbb
adc
sub
stos
lea
mov
dec
add
mov
(bad)
sbb
mov
add
add
xor
imul
aas
movs
imul
std
jle
push
stos
mov
jne
sbb
or
dec
int3
jmp
mov
cmp
inc
push
push
push
add
icebp
mov
sbb
xor
in
scas
xor
cld
add
sub
and
dec
les
lds
xchg
sbb
retf
loopne
dec
adc
dec
xchg
cdq
aam
push
jg
add
mov
push
mov
repnz
push
cmp
mov
das
jne
mov
pop
sub
xchg
adc
or
gs
add
sub
or
jg
ficom
cmp
jne
mov
push
pop
pop
scas
push
push
mov
mov
push
xor
jecxz
or
imul
pop
or
pop
dec
dec
cwde
sbb
push
xor
stos
add
add
mov
outs
jnp
jae
inc
inc
dec
ins
push
daa
mov
mov
dec
mov
push
lods
or
std
add
pop
int
add
loopne
cs
cmp
jb
mov
or
test
pusha
inc
add
or
popa
fst
daa
pop
test
sub
fisttp
jecxz
and
xor
or
outs
add
aaa
inc
setle
cmovb
push
push
jno
jo
pusha
pop
les
ret
sub
or
into
add
pop
in
pop
hlt
xor
push
push
sti
push
loope
add
int
mul
push
inc
mov
adc
pop
ficomp
and
cmp
jge
call
adc
jl
test
fcom
push
test
ret
call
sahf
rcr
into
adc
or
jno
pusha
popf
xchg
test
fistp
sbb
fist
add
popa
xchg
jmp
mov
clc
jne
push
cmp
jne
pop
mov
sbb
arpl
inc
not
pop
mov
arpl
add
xor
out
es
sub
sub
push
dec
add
sbb
mov
fild
xchg
pop
cdq
and
mov
cld
add
or
enter
dec
jo
in
mov
pop
xor
or
dec
pop
inc
sahf
dec
scas
aaa
sub
mov
lahf
adc
cmpps
(bad)
push
rol
into
scas
and
(bad)
retf
inc
test
test
mov
loopne
daa
add
sbb
pop
ins
xchg
mov
cmp
pop
sub
popf
cmps
push
lock
mov
fucomp
dec
fs
mov
iret
or
mov
pop
mov
or
push
xchg
out
mov
out
movs
push
loop
das
adc
mov
sbb
shr
or
je
or
adc
test
mov
jmp
sub
repz
jo
push
aam
sub
movs
adc
push
add
por
pop
mov
sar
dec
in
sbb
mov
or
mov
and
daa
mov
rol
mov
imul
out
push
pop
mov
mov
and
push
mov
loope
push
jb
xchg
mov
shl
add
jbe
mov
sub
bound
mov
mov
neg
pop
cmc
jmp
inc
nop
std
push
pop
inc
add
out
dec
add
jmp
inc
and
push
mov
mov
jns
popf
mov
and
adc
ret
jmp
adc
xchg
dec
or
xor
inc
jmp
add
dec
cwde
cmp
out
push
mov
stos
cmp
and
call
test
hlt
div
jmp
dec
setae
fwait
mov
add
cmp
retf
movs
or
lea
cmp
push
pop
inc
push
xor
mov
(bad)
pop
push
sub
pop
lds
push
cmp
mov
dec
adc
or
or
or
icebp
bound
or
fmul
jmp
mov
push
push
sub
hlt
ins
jg
dec
movs
jb
xor
sub
jmp
jno
add
cs
data16
stc
in
pop
adc
popf
cmp
hlt
sub
or
jg
mov
(bad)
hlt
add
mov
int3
(bad)
fstp
cmp
add
scas
rol
jmp
fs
mov
mov
fistp
add
mov
mov
cmp
jle
cmp
and
or
dec
and
popa
sub
add
enter
mov
xor
lds
sub
mov
mov
nop
fmul
in
and
or
hlt
repz
out
into
inc
pop
adc
in
add
and
push
push
xchg
sub
cld
add
mov
cld
stc
adc
inc
sub
in
or
adc
jle
aas
jmp
push
or
sub
inc
cmp
jmp
mov
and
movsx
arpl
stos
push
or
push
jmp
pop
popa
in
mov
pop
les
cmps
add
adc
cld
int
dec
and
mov
cmp
inc
(bad)
bound
adc
inc
add
lea
fs
popf
rcl
cmps
imul
cmps
imul
push
mov
shl
xchg
xchg
xchg
in
lea
sbb
xchg
mov
cmps
imul
adc
cmps
jb
call
or
jl
inc
pop
add
push
add
xor
sub
test
sub
inc
or
lds
push
loopne
out
jbe
pop
outs
adc
loopne
bsf
adc
fistp
lea
and
lea
dec
mov
lock
dec
push
push
add
or
movd
mov
iret
mov
sbb
hlt
faddp
and
add
jne
add
js
xor
fnsave
add
or
push
pop
xlat
sub
push
jl
push
mov
sub
sbb
pop
inc
mov
test
je
jmp
jp
xor
das
icebp
mov
loop
jbe
ja
cli
cmp
jne
dec
mov
inc
inc
mov
es
dec
loopne
pop
ja
sub
mov
(bad)
fucomi
inc
jp
enter
test
sub
jbe
imul
and
arpl
sub
lea
add
shl
stos
aad
sub
loop
outs
pop
mov
jmp
inc
dec
sbb
cwde
mov
push
js
clc
fadd
jne
mov
fwait
or
add
enter
daa
jno
sub
or
and
xor
outs
pop
in
shr
mov
daa
shl
lods
movs
push
test
mov
pop
inc
cld
cmp
pop
mov
lods
pop
add
jb
shl
push
push
add
nop
adc
mov
cmps
cs
cmp
pushf
jmp
push
ret
js
adc
test
pop
(bad)
test
jecxz
jp
xor
inc
dec
pop
sbb
mov
test
xor
mov
mov
mov
or
imul
add
dec
sub
xchg
addr16
in
fwait
jo
adc
jmp
cmp
jmp
adc
mov
js
sbb
test
adc
mov
and
xor
addr16
test
inc
stos
mov
outs
stos
scas
inc
and
add
pop
pusha
xor
imul
push
out
sahf
int
xchg
push
pop
and
cs
dec
mov
xchg
xchg
xchg
push
sbb
dec
xchg
popf
cwde
xor
and
out
adc
push
and
aas
dec
mov
sahf
out
push
pop
aaa
iret
int
cmp
xchg
ret
xchg
xchg
(bad)
nop
mov
xor
leave
enter
les
and
inc
push
pop
dec
sahf
pushf
and
mov
push
add
test
daa
xchg
ss
xchg
xor
sahf
out
pop
gs
(bad)
nop
mov
cwde
in
sub
and
or
in
inc
sbb
cli
push
gs
sahf
out
outs
or
mov
xor
das
mov
pop
cld
mov
push
jne
dec
and
jmp
or
adc
jmp
and
add
(bad)
popa
sub
mov
rcr
adc
adc
cmp
and
scas
(bad)
cdq
call
add
loop
vmovq
lock
push
call
mov
push
pop
push
xor
and
mov
add
inc
cmp
sbb
rol
enter
je
test
push
mov
add
fiadd
cmp
fdiv
and
jg
pop
loop
jns
sub
sub
ret
add
inc
inc
adc
inc
cmp
or
push
sub
sbb
cmps
xor
pop
mov
inc
scas
adc
in
push
sbb
adc
cmp
jmp
add
pop
and
push
loop
aas
xor
in
add
inc
data16
jp
jg
sub
int
dec
je
or
push
xor
mov
sbb
cmp
lahf
jns
in
jne
inc
fsubr
push
loop
push
in
das
jnp
add
pop
or
sbb
push
ins
add
inc
leave
xor
cli
jp
xor
xor
jle
ss
ss
ud2
jmp
sar
int
or
cmp
je
cmp
je
cmp
out
inc
out
outs
in
js
add
pop
jne
inc
or
push
adc
cld
ins
je
or
mov
je
lods
aaa
cmp
push
sahf
retf
adc
ficomp
popf
ins
jne
inc
fiadd
push
add
pusha
sbb
pop
or
mov
cmp
inc
in
popa
xchg
ror
mov
push
inc
xor
pop
cmp
aam
or
fmul
add
popf
call
or
fcom
pusha
imul
add
mov
jge
add
or
ss
mov
pop
jecxz
jg
fs
and
imul
xchg
popa
pop
dec
push
or
xor
outs
repz
jb
and
dec
and
pusha
adc
fisubr
js
jg
ins
xchg
pop
jg
mov
or
pop
inc
push
inc
jle
and
jle
adc
test
hlt
out
lahf
addr16
mov
push
cmp
add
je
dec
inc
push
out
movs
pop
ficomp
cmps
outs
jmp
fsubr
xchg
jo
dec
je
sub
aas
or
int3
mov
outs
sar
mov
push
jmp
adc
dec
and
(bad)
adc
cmps
xchg
jmp
adc
push
in
shl
jnp
rol
inc
rol
stos
stos
cli
call
bound
push
data16
mul
clc
mov
mov
lods
test
je
adc
push
outs
fcmovnu
mov
xor
adc
jmp
xor
call
mov
cmp
cmp
addr16
adc
push
popa
je
and
test
mov
aaa
int
lods
rol
cmp
rcr
rcl
mov
std
icebp
out
and
sub
test
cmp
shl
lea
mov
xor
push
add
lea
int3
ror
inc
lea
push
out
pusha
or
shl
xor
push
xor
cmp
pop
jle
mov
xor
xor
jnp
xlat
push
and
jae
pop
inc
jb
jne
add
push
dec
pop
jnp
cmp
push
cmp
js
pusha
jbe
cdq
nop
dec
dec
aas
cmp
mov
jns
push
adc
retf
and
jmp
mov
or
enter
push
jb
pop
mov
jnp
and
cmp
cmp
sbb
(bad)
adc
clc
icebp
daa
nop
ret
hlt
fs
mov
bound
sub
adc
push
pop
mov
jmp
test
int3
pop
cmp
jbe
shr
add
xor
fldz
dec
and
or
pop
push
cmp
mov
mov
in
test
mov
ss
push
fldz
inc
push
jl
in
xor
jl
loopne
loope
jb
sbb
add
pop
test
xchg
sbb
and
push
and
lods
and
xchg
add
push
push
rep
add
adc
add
dec
leave
push
pop
and
test
rol
mov
and
push
mov
dec
in
mov
or
mov
dec
fimul
or
jmp
jnp
inc
sub
fsubr
popf
mov
stos
jns
retf
scas
pop
cmps
bound
add
pop
jmp
mov
pop
imul
adc
popa
and
out
dec
mov
add
data16
inc
jmp
adc
push
mov
cwde
push
dec
cmps
and
out
cdq
jbe
mov
(bad)
pop
hlt
mov
xchg
loopne
in
inc
int3
or
mov
or
sbb
or
dec
retf
sub
sbb
je
ins
cmp
pop
sub
push
xchg
push
mov
cdq
iret
jns
xchg
add
dec
sbb
pusha
add
xchg
rol
pop
dec
push
int3
mov
inc
pop
clc
mov
add
mov
sbb
ffreep
push
inc
jo
dec
jecxz
mov
iret
pusha
outs
mov
lods
push
mov
push
jo
(bad)
(bad)
sbb
xchg
push
sub
xlat
or
int3
imul
push
test
add
cmp
jne
sub
inc
dec
sbb
mov
ds
jmp
sbb
mov
jp
mov
inc
test
xlat
push
xor
and
pop
mov
jae
fiadd
pop
popa
push
cmp
lock
push
mov
in
xchg
add
lds
xchg
and
push
pop
jne
inc
jns
sbb
or
xor
xor
mov
inc
or
add
fisttp
push
pop
sub
jo
xor
(bad)
imul
fwait
sbb
xchg
push
jecxz
pushf
add
out
inc
cmp
loop
push
les
aam
jo
mov
cmps
leave
sub
fucomi
iret
mov
cmp
or
aaa
in
push
xor
sub
adc
pop
cld
jns
xor
mov
inc
std
loope
and
sbb
cmp
inc
inc
mov
sbb
sbb
and
push
cmp
sub
cmp
or
mov
mov
adc
mov
and
cld
jmp
sub
and
xchg
add
shr
cmp
push
movsx
and
jmp
cmp
and
cdq
xor
lea
sar
loopne
les
jl
jae
neg
div
(bad)
mov
pop
ds
pop
jge
loopne
popf
xchg
add
and
in
mov
jle
sub
loop
loopne
pusha
sub
cmp
ins
mov
jmp
adc
mov
call
rcr
movs
cmp
hlt
dec
and
xor
cmp
dec
xchg
xor
call
add
inc
ret
push
movs
lds
adc
fld
je
sbb
aam
fwait
or
add
into
xchg
cdq
pushf
add
les
adc
test
xor
pushw
inc
add
ins
push
mov
aad
and
mov
or
xchg
jmp
ret
jp
inc
sub
js
sbb
xchg
sub
and
mov
pop
pusha
sbb
js
add
and
xor
sbb
inc
dec
aas
jge
mov
ins
sub
adc
in
xchg
add
add
in
repnz
push
or
data16
cmp
inc
imul
mov
icebp
or
repz
xor
int3
jle
push
sbb
jae
cmps
sbb
inc
or
sbb
je
inc
inc
adc
jl
loopne
(bad)
fstp
aam
gs
les
sbb
pop
je
dec
pop
bound
adc
mov
lds
cmp
xchg
movs
mov
xor
jmp
sbb
add
inc
or
mov
jmp
sbb
jbe
inc
or
pop
enter
push
cmp
pop
test
popa
xor
cmp
push
cli
or
push
pop
add
mov
push
pop
and
pop
adc
int
daa
mov
cmp
push
je
pop
aaa
cs
into
ss
sbb
inc
pop
cmp
jb
sbb
jmp
dec
adc
sbb
dec
add
xchg
cmps
inc
lods
pop
jns
adc
aaa
jne
dec
mov
cmp
cmps
dec
xor
push
add
dec
aas
mov
xlat
adc
out
test
xor
pushf
dec
or
ret
retf
xor
push
add
mov
in
retf
dec
pop
out
(bad)
xchg
dec
pop
xor
js
xchg
sbb
dec
inc
shl
sub
pop
add
mov
repz
clc
xchg
mov
lea
mov
or
push
xchg
add
jmp
pop
call
xchg
push
leave
movd
bound
inc
and
push
and
or
pop
push
imul
add
clc
clc
push
lea
pop
rol
xor
js
pop
rcl
fwait
xor
or
ins
jge
xor
push
movs
cmp
pop
pop
mov
mov
sbb
fadd
add
inc
mov
and
or
retf
add
test
or
cmc
fcom
jne
aad
stos
push
add
mov
test
xchg
sbb
repnz
ds
cmp
add
jl
pop
add
ins
and
(bad)
xor
jmp
(bad)
cmc
and
retf
retf
pop
(bad)
pop
rol
xlat
pop
and
shl
je
add
jle
shr
(bad)
adc
lea
lock
rcl
xchg
lock
or
sub
bound
(bad)
js
mov
rol
mov
clc
or
jg
cdq
shl
sbb
push
and
cld
or
sbb
or
dec
call
pop
jge
popf
(bad)
cmp
add
add
enter
ins
movs
or
mov
xchg
jg
(bad)
mov
or
dec
jg
loope
js
rol
idiv
in
add
or
adc
in
repnz
pop
pop
pop
cdq
out
fsub
or
and
inc
pusha
addr16
jp
xor
pop
imul
xor
inc
sbb
lock
xchg
xor
push
xor
push
daa
sbb
stos
mov
pusha
jl
add
jmp
popa
push
ret
and
gs
push
inc
ret
inc
pop
adc
push
dec
in
stos
mov
ja
jle
test
call
xor
dec
rcl
imul
push
cld
ficom
mov
sbb
ins
inc
std
mov
cmp
xchg
dec
sbb
jge
push
es
xor
(bad)
pop
fdivr
inc
leave
cs
dec
add
(bad)
inc
inc
lea
add
test
popf
or
jle
add
xchg
adc
loope
js
push
ja
xchg
sub
sub
push
pop
and
cmps
inc
es
cmp
les
adc
and
mov
sub
mov
ja
ins
mov
cld
sbb
adc
sahf
inc
gs
mov
and
les
les
pop
or
dec
and
mov
and
cmc
add
push
int3
adc
shr
sub
adc
jg
dec
stos
cdq
cli
sbb
(bad)
mov
js
push
cld
int3
inc
adc
sti
mov
cmp
sub
mov
xor
dec
jg
bound
jmp
adc
bound
(bad)
out
add
adc
shr
pop
rcr
repnz
pop
sbb
shl
xchg
jp
ret
xchg
cmp
dec
repz
push
push
loope
and
dec
outs
xor
xchg
ins
add
in
in
mov
mov
mov
jne
mov
add
mov
mov
add
rol
and
fild
clc
das
adc
retf
pop
push
fdiv
add
sahf
xor
dec
lock
sub
mov
into
test
or
dec
call
popa
sbb
imul
(bad)
and
cwde
cmp
xchg
dec
dec
hlt
push
adc
inc
inc
movs
pusha
in
xchg
ds
mov
xor
loope
adc
cli
jle
js
ror
dec
data16
int
jo
jg
out
out
scas
mov
pop
dec
or
test
or
mov
mov
gs
in
jo
push
lods
cld
std
xchg
push
and
or
push
mov
pop
mov
lods
ficom
and
pushf
sub
fst
mov
push
cs
in
sbb
dec
inc
add
into
out
aaa
sub
lock
or
adc
jae
out
rcr
pop
or
call
and
xchg
in
cmp
or
pusha
push
loopne
enter
iret
jae
sub
cmp
movs
or
js
xor
xchg
fldenv
js
fs
mov
pop
jg
in
in
test
jo
jb
jb
mov
sbb
push
add
pop
pop
jecxz
mov
push
shl
in
sar
(bad)
int3
jns
cmp
cdq
in
dec
test
out
push
jns
mov
push
movs
cld
cmp
fidiv
sub
pusha
loopne
cmp
mov
dec
test
out
addr16
jl
loopne
xor
imul
ins
and
pop
adc
fs
in
icebp
imul
add
cmp
jl
out
push
jbe
adc
sub
fbstp
sbb
jbe
ins
call
jge
xor
lods
call
push
pop
lods
mov
inc
test
mov
lods
sahf
jmp
inc
or
jns
movs
in
movsx
mov
cmp
push
call
inc
(bad)
add
js
sub
push
inc
xor
mov
fcom
push
dec
jmp
mov
je
loopne
and
xlat
dec
shl
mov
fwait
pop
push
dec
rcr
fwait
pop
mov
dec
rcl
dec
sar
sbb
xlat
ds
xchg
pushf
mov
xlat
jle
or
jle
aas
xchg
pushf
mov
xlat
jle
or
fimul
shl
ins
inc
xlat
mov
in
inc
xlat
dec
sar
in
inc
xlat
dec
sar
in
inc
xlat
dec
ror
in
dec
ror
jb
in
dec
(bad)
shl
and
and
sbb
ror
rol
hlt
test
ja
rcl
sub
mov
call
xchg
inc
(bad)
dec
mov
iret
popaw
test
lods
cmps
ret
adc
jmp
mov
sbb
test
test
enter
ret
xchg
mov
inc
sub
fcomi
mov
xchg
jo
cmp
push
rcr
or
or
push
cmp
icebp
xchg
lock
sar
arpl
mov
xor
xor
(bad)
sbb
jecxz
cdq
das
push
enter
cmps
out
push
in
mov
xor
mov
scas
jmp
jns
mov
mov
inc
mov
daa
xchg
adc
pushf
dec
dec
mov
repnz
mov
test
or
imul
mov
sbb
cmp
jg
in
mov
xchg
push
push
add
shl
jae
sub
retf
or
ret
mov
xor
test
pop
sbb
scas
cmp
jb
mov
and
mov
jb
dec
dec
cmp
cmp
dec
repz
mov
xchg
xor
or
pop
push
jb
jo
fcom
cli
xor
sbb
dec
xor
enter
ss
fs
push
scas
mov
mov
pop
les
mov
jno
retf
and
cmps
jb
int
dec
mov
test
sub
cmps
or
out
xchg
das
and
sbb
mov
or
and
test
stc
ret
push
ins
div
loope
out
mov
adc
dec
into
test
or
pop
in
mov
cmp
out
inc
lahf
movs
or
mov
push
aas
rcl
pop
cmp
dec
fldcw
imul
jmp
jle
or
adc
sbb
inc
aas
inc
or
or
mov
push
dec
fdivr
or
pop
push
jmp
dec
jge
(bad)
adc
add
sbb
retf
jbe
mov
jmp
dec
inc
sub
out
xchg
lods
adc
inc
out
ret
adc
ror
push
or
or
inc
movs
sar
outs
or
outs
cmp
aam
ins
(bad)
mov
mov
test
hlt
in
inc
xchg
data16
cwde
je
adc
inc
sbb
push
sbb
or
xchg
xchg
xor
movs
xor
adc
call
test
mov
xor
add
inc
and
sub
add
in
loope
and
inc
std
push
cmp
leave
xor
lea
mov
popf
and
push
xor
hlt
sub
pop
sbb
add
and
xchg
cmps
add
enter
add
cmp
pop
and
je
adc
dec
push
ror
rcr
mov
push
push
je
les
cld
ds
or
adc
lods
mov
push
pop
push
stc
sbb
mov
sub
inc
jno
xchg
or
call
or
outs
fidiv
push
lahf
sbb
mov
cmps
outs
jnp
xor
fidivr
(bad)
jl
dec
push
cmp
lods
pop
cmc
loop
adc
cs
call
lock
xchg
xor
or
jg
fsubr
test
or
xchg
xchg
lds
(bad)
std
cwde
sbb
mov
sbb
add
out
jmp
mov
pop
push
sub
shl
sbb
mov
in
dec
xor
xor
lahf
pop
nop
jmp
arpl
outs
inc
push
scas
lods
cmps
(bad)
fucomp
cmps
adc
ins
push
and
sar
pop
xor
sahf
mov
retf
les
jb
cdq
loopne
sahf
out
retf
in
cli
jb
and
adc
jno
test
push
cmp
mov
repz
inc
mov
sbb
xor
mov
out
sub
jmp
and
dec
jmp
aad
mov
sbb
pusha
scas
out
out
repz
or
or
jae
or
cmp
(bad)
out
mov
jp
mov
jg
dec
loopne
push
mov
scas
cmp
ficomp
sub
jl
or
sbb
adc
int3
aas
fild
sub
sbb
inc
rcl
imul
jmp
pop
sub
out
xor
sbb
xchg
add
fs
jne
push
push
scas
outs
push
and
jo
test
push
shl
pop
inc
or
aas
jnp
lea
icebp
jb
(bad)
sub
sahf
js
ss
jae
sbb
or
jb
mov
ret
sub
mov
and
daa
stos
lea
daa
xor
pop
or
fcom
mov
pushf
das
repz
in
dec
push
fimul
xor
arpl
and
or
(bad)
xor
and
out
(bad)
jb
daa
fnclex
mov
push
addr16
(bad)
mov
cmp
mov
in
dec
div
jg
fwait
xor
xor
faddp
xor
or
daa
out
cld
sbb
mov
mov
mov
or
push
lock
lea
ret
xor
sub
popa
mov
push
inc
push
pop
mov
aas
and
sbb
inc
push
push
push
aas
jle
sub
mov
add
mov
movs
push
test
or
sbb
xor
in
(bad)
(bad)
enter
push
dec
sti
mov
bnd
adc
in
and
lea
jb
and
dec
xor
dec
xor
pop
jb
or
sbb
dec
jbe
dec
cs
dec
es
call
ss
mov
arpl
mov
js
mov
test
jecxz
mov
push
xchg
push
add
mov
jno
pop
inc
mov
and
data16
clc
jae
jmp
mov
push
stc
fwait
dec
mov
or
cs
outs
or
std
or
pop
sbb
scas
or
jle
mov
lock
jae
xchg
pop
lock
or
inc
mov
test
aaa
fadd
jb
adc
pop
hlt
xor
sti
(bad)
cmp
jb
ja
fs
pop
add
js
clc
jmp
add
inc
(bad)
(bad)
xchg
(bad)
out
pusha
fimul
push
pop
mov
js
fld
cmp
cld
leave
push
sub
xchg
pop
test
jne
jbe
adc
jl
jno
cmps
inc
ins
fld
or
inc
and
lahf
gs
std
xor
adc
or
add
pop
mov
pop
psubsb
mov
popf
shl
lock
push
cmp
psadbw
pop
neg
sub
fisttp
(bad)
cmp
adc
rol
fs
pop
jg
stos
or
rcl
mov
and
fldz
pop
adc
outs
(bad)
add
icebp
sbb
int3
fstp
pop
dec
movs
out
jbe
cmps
or
les
gs
test
jno
in
mov
popa
mov
lea
xchg
xlat
shl
dec
in
xchg
pop
iret
adc
inc
dec
and
fstp
mov
lea
cmp
outs
and
ret
aam
cmp
push
xchg
inc
push
mov
sub
add
adc
into
add
lea
cmp
xor
enter
icebp
fnsave
add
(bad)
xor
or
repz
jmp
inc
push
or
push
repnz
rol
pop
mov
lahf
jge
pop
(bad)
mov
xchg
mov
ss
or
(bad)
sub
lods
add
cmp
jne
ss
or
in
je
lods
mov
sub
push
rcr
dec
jge
xor
and
adc
es
mov
(bad)
mov
push
and
scas
pop
ret
sub
and
add
sbb
repz
int
addr16
xor
jo
or
ds
ret
adc
push
pop
add
out
mov
cmova
dec
inc
adc
aad
clc
adc
cmps
fs
mov
call
cld
cld
clc
nop
sub
jle
shl
jecxz
xor
mov
push
popa
stos
dec
pushf
mov
in
imul
jo
lock
into
sti
push
mov
ror
or
push
call
or
mov
push
push
dec
xlat
push
stos
popa
dec
js
jne
mov
sub
test
cmps
mov
inc
push
ror
add
inc
in
inc
test
pop
jb
add
mov
addr16
sbb
lods
mov
inc
add
mov
je
out
mov
push
outs
xor
in
add
je
push
sbb
or
jp
retf
ins
sti
and
adc
xchg
add
push
push
test
imul
pusha
adc
sti
push
hlt
mov
adc
jnp
cli
ins
fidivr
movs
push
push
movs
movs
cmp
arpl
(bad)
push
ss
or
pushf
cs
ss
loopne
cs
enter
inc
and
pop
mov
mov
hlt
ffree
int3
cwde
jbe
or
les
pop
div
outs
iret
jns
cmp
xchg
push
jle
push
pop
cld
dec
jp
mov
cmps
mov
and
push
sub
mov
mov
push
lds
mov
push
sahf
fdiv
add
add
ss
fist
pop
add
test
pop
xchg
adc
adc
sub
mov
ins
gs
add
repz
out
neg
sub
mov
sbb
retf
dec
imul
or
mov
xor
pop
sub
inc
jnp
shl
add
lods
and
fist
fadd
sbb
cmp
mov
lahf
fldcw
or
int3
dec
jne
add
test
add
rcr
mov
js
lods
popa
iret
int3
jne
je
and
cmp
add
sub
mov
or
repz
pusha
ja
mov
(bad)
je
add
out
mov
jbe
jmp
and
sbb
add
fcom
mov
pop
jl
inc
mov
(bad)
dec
and
call
sbb
shr
retf
clc
xchg
jmp
retf
push
add
enter
enter
adc
idiv
jbe
add
jbe
pop
cld
(bad)
inc
push
adc
xor
fistp
rcl
dec
add
test
add
neg
mov
push
mov
xor
fsub
pushf
xor
inc
push
retf
sbb
int3
cmp
mov
add
les
fdivr
int
inc
and
mov
and
or
mov
movs
push
adc
adc
sub
into
sbb
enter
ret
inc
cmp
data16
(bad)
adc
mov
je
movs
and
mov
test
jo
cli
inc
shl
push
sbb
or
xor
or
jmp
jp
sahf
out
cs
jmp
loopne
or
jne
add
ss
fs
ins
and
or
jg
repnz
cdq
add
(bad)
adc
or
je
add
jp
pop
sbb
(bad)
fdiv
ret
pop
or
(bad)
mov
in
add
dec
arpl
(bad)
fmul
xchg
imul
aam
sar
dec
sbb
mov
cli
inc
jb
xor
aad
pusha
mov
xor
sbb
dec
hlt
fsub
inc
movs
cmp
call
call
dec
call
xchg
push
dec
mov
cld
ret
test
jbe
and
push
mov
clc
out
inc
cmp
loope
mov
cmp
jle
push
cmp
add
cmps
(bad)
stos
not
hlt
mov
repnz
mov
cmp
pushf
shr
mov
sar
inc
es
mov
or
xchg
push
sub
int
or
sub
test
cmp
inc
call
cmp
jbe
mov
aam
cli
xor
add
fidiv
pusha
dec
dec
push
pop
mov
pop
add
push
pop
fs
jl
push
outs
xlat
cld
push
out
add
xor
ja
push
mov
xchg
add
imul
mov
add
cmp
out
xor
dec
loopne
push
cmp
add
cli
int3
aas
cmp
and
loopne
adc
mov
es
mov
(bad)
(bad)
jmp
(bad)
lock
fadd
movs
shl
enter
inc
add
loopne
add
movs
ret
inc
mov
adc
mov
mov
mov
add
or
test
hlt
aas
movs
sbb
cmp
xchg
lds
scas
not
adc
and
pushf
add
cs
or
movs
cwde
sub
loopne
ret
in
test
push
or
xor
sbb
dec
fsubr
xchg
les
jns
js
and
clc
dec
sbb
xor
shl
les
ret
add
sub
test
mov
neg
mov
test
and
xchg
rcr
test
push
nop
fisttp
or
sbb
push
bound
rol
sub
shl
sub
popf
int3
jno
or
test
xchg
aam
test
xchg
mov
(bad)
scas
in
fcomp
cmp
or
rcr
mov
stc
or
mov
popf
ja
shl
mov
mov
adc
and
adc
cmp
call
movs
mov
push
dec
mov
sub
shl
mov
mov
add
and
into
sbb
sub
mov
cmp
ror
push
imul
mov
dec
das
or
mov
add
lock
dec
in
pop
add
nop
gs
inc
mov
es
and
ret
xchg
cmp
or
cmps
rol
imul
inc
inc
rol
(bad)
fnstenv
push
int3
fild
mov
lea
dec
inc
retf
repz
fdivr
fbld
jbe
push
pop
cwde
or
cmp
loop
pop
imul
pop
rol
out
add
push
inc
mov
inc
or
test
and
lea
inc
push
jb
or
xor
mov
pop
lahf
dec
jmp
test
(bad)
pop
not
je
sbb
scas
cmp
jne
mov
outs
pop
fucomp
adc
(bad)
call
daa
cmp
inc
sti
(bad)
mov
ret
sbb
xchg
sub
or
adc
push
daa
push
(bad)
cmp
lods
and
jmp
leave
popf
jns
add
sub
je
jae
loopne
out
mov
pusha
add
sub
or
in
ficomp
push
jg
dec
xor
fst
shl
test
add
and
loopne
lock
xor
inc
cmp
(bad)
shr
xchg
setb
pop
and
aad
int3
jecxz
and
push
add
sti
popa
push
fwait
adc
aas
cmp
jbe
out
rcr
mov
mov
cld
ror
adc
pusha
sbb
lock
scas
mov
sub
jne
adc
xchg
or
fsub
push
mov
xor
jbe
xchg
(bad)
in
jecxz
mov
mov
pop
out
or
pop
sub
std
push
div
dec
pop
(bad)
rol
movs
ins
out
sbb
out
test
xchg
cmc
out
shr
inc
leave
inc
(bad)
cwde
xor
les
cmp
jnp
into
adc
std
ins
adc
fwait
(bad)
adc
inc
jmp
addr16
cmp
out
inc
push
sar
popf
(bad)
cli
mov
call
fst
ja
movs
jp
xor
in
sub
lods
mov
scas
mov
out
cmp
sub
jl
jl
push
dec
imul
ror
jns
test
dec
(bad)
jae
add
scas
mov
fsub
scas
stos
jae
aam
call
push
xor
sbb
ror
(bad)
lea
lock
nop
(bad)
jne
cmp
pusha
rol
and
xchg
test
and
cs
adc
and
enter
mov
xchg
xchg
inc
jmp
or
(bad)
or
call
in
push
clc
add
aad
loope
inc
cmps
push
add
add
xlat
loopne
ror
dec
inc
jmp
cmp
cmps
push
inc
call
hlt
scas
das
add
cwde
mov
xchg
or
addr16
loopne
mov
call
retf
pop
fst
sub
sub
cmp
or
sub
sbb
mov
ins
retf
sbb
dec
test
pop
jl
lea
mov
lahf
or
bnd
movs
and
mov
aas
addps
bound
lahf
xchg
xchg
out
cmp
(bad)
(bad)
rcl
sub
gs
inc
not
pop
inc
stos
cli
mov
cmps
imul
stc
cld
adc
(bad)
sbb
xchg
pop
inc
enter
loop
rol
test
inc
push
bound
movs
ins
rol
pop
mov
sub
mov
xchg
pop
je
pop
xor
push
loope
cmp
push
(bad)
loop
aad
add
in
add
pusha
ror
add
aas
xor
shl
add
shr
inc
dec
push
bound
sbb
add
out
push
add
test
inc
test
or
cmc
std
jecxz
mov
add
mov
(bad)
jmp
dec
jmp
enter
lea
lea
sub
push
and
fnstcw
(bad)
(bad)
or
fcomp
xchg
fdivr
(bad)
jae
mov
add
xchg
mov
mov
test
test
loopne
mov
cli
mov
pop
test
dec
pop
(bad)
loope
xor
mov
and
inc
jne
mov
adc
mov
test
ins
lods
mov
test
and
dec
cmp
mov
dec
dec
jns
test
push
lea
fdiv
sbb
aam
test
and
popf
push
and
ins
fmul
and
mov
jns
cli
jmp
jo
sahf
cmp
adc
nop
cli
nop
cli
add
(bad)
xor
jns
scas
xlat
nop
cli
mov
xchg
in
popa
jns
jmp
loope
popf
mov
nop
cli
movs
sub
rcl
jb
push
or
cmc
sbb
jns
inc
jmp
cmp
test
or
adc
minps
xlat
cmp
adc
fisttp
mov
shl
into
push
jmp
mov
and
dec
push
les
add
mov
sbb
or
mov
enter
cli
pop
stos
popa
inc
ds
rol
gs
fcomp
sub
and
add
add
mov
pop
cmp
sub
jae
mov
nop
cli
pop
push
jb
jmp
test
inc
out
test
test
pop
test
fdiv
add
aad
fild
push
push
jecxz
xchg
push
dec
or
nop
xchg
mov
pop
cmps
loope
repnz
jge
sub
or
ins
imul
pop
neg
movs
xchg
das
mov
or
mov
dec
jne
mov
pop
iret
mov
inc
ret
inc
lea
xor
das
in
cld
pusha
cld
jg
fiadd
inc
fwait
mov
mov
add
pop
lea
jmp
sub
repnz
push
xor
xchg
xor
(bad)
push
or
in
adc
retf
inc
dec
jmp
pop
push
xchg
xchg
xchg
xchg
adc
xchg
pop
rol
xor
mov
push
fsub
push
cmp
daa
pop
cld
push
jmp
fld
test
inc
fidiv
jg
push
and
in
mov
and
and
test
or
cli
in
add
rcl
shl
mov
mov
aaa
iret
out
(bad)
fmul
dec
in
mov
idiv
and
push
add
test
xor
pushf
popf
dec
sub
shl
dec
sub
jne
cmps
aam
dec
test
lods
or
cmp
inc
repnz
fwait
jle
fadd
ss
mov
fnstcw
jl
inc
aaa
mov
retf
cmc
adc
cmps
mov
dec
push
call
imul
pop
out
fldcw
or
lock
and
inc
cmp
mov
inc
add
pop
test
hlt
push
imul
add
add
add
in
mov
cld
cmp
hlt
fdiv
jmp
in
lock
out
pop
mov
xchg
out
div
mov
fld
in
cld
jae
push
push
lahf
push
lods
lds
jl
aas
xor
push
daa
cli
aam
jle
xor
cwde
outs
inc
sub
push
mov
add
push
push
dec
push
dec
or
mov
scas
ret
iret
in
ficom
and
mov
adc
scas
mov
add
cdq
fiadd
dec
push
inc
mov
cmps
loop
sbb
cwde
sub
cmp
push
sbb
and
pop
jbe
add
cdq
push
shr
addr16
or
inc
mov
and
inc
and
pop
jnp
dec
mov
ror
stos
mov
rcr
inc
(bad)
jl
sub
jo
cmp
mov
out
cli
jae
test
pop
ror
sub
(bad)
js
cmp
jb
push
pop
ja
adc
popf
mov
(bad)
push
fnsave
repnz
inc
je
push
push
add
add
sbb
push
sahf
jae
sbb
adc
(bad)
daa
and
or
and
enter
fisttp
jecxz
iret
pop
shr
jle
dec
dec
icebp
iret
pop
js
lock
out
jmp
mov
xor
test
inc
scas
outs
push
pop
cmp
stos
mov
aam
pop
dec
jl
xlat
pop
ror
(bad)
cmp
mov
fadd
cmp
inc
push
clc
repnz
xor
sbb
sub
stos
leave
xchg
sub
push
cmp
jmp
mov
sub
cmp
ja
jb
lods
mov
mov
cmp
test
ja
ret
call
loop
icebp
clc
js
retf
dec
test
dec
sbb
push
add
push
pop
rcl
xchg
add
mov
mov
xor
dec
sub
in
xchg
idiv
mov
cmp
sub
imul
cmp
ja
aam
sub
and
mov
mov
cmp
(bad)
movs
div
xor
dec
sbb
and
(bad)
push
js
cwde
jl
xor
adc
and
and
idiv
add
pop
and
ror
nop
popa
cld
iret
jecxz
js
dec
ret
loop
out
pop
push
inc
and
sbb
cmc
add
iret
enter
inc
fld
lea
in
aas
dec
js
jmp
sub
test
lock
fsubr
or
push
jmp
dec
jbe
out
push
scas
pop
pop
push
push
lea
or
sar
add
push
push
or
push
icebp
inc
jbe
or
dec
pushf
and
dec
and
add
loop
(bad)
inc
add
enter
arpl
icebp
je
daa
push
push
int
stos
fidiv
jb
mov
sbb
shld
cdq
shl
clc
adc
sub
inc
repnz
(bad)
rcr
jmp
xor
out
xor
mov
je
xor
sub
cdq
js
jne
push
push
or
inc
cmp
push
push
gs
adc
inc
sub
and
(bad)
out
sbb
sbb
push
or
mov
push
mov
mov
arpl
mov
(bad)
shl
mov
(bad)
or
push
mov
hlt
mov
push
dec
or
mov
cmp
and
and
mov
add
in
push
call
pop
daa
push
(bad)
xchg
call
mov
fistp
data16
(bad)
jne
add
mov
div
es
cs
outs
mov
pop
sbb
pop
neg
sub
or
jl
add
pop
adc
les
jbe
mov
sbb
mov
fs
lock
and
xchg
or
lods
cmp
into
enter
jbe
es
add
js
stos
int
adc
sbb
or
or
stos
in
outs
scas
jne
sub
push
nop
shr
push
dec
or
outs
aaa
(bad)
push
stos
arpl
push
cld
inc
pop
add
dec
dec
loop
and
pop
inc
in
inc
mov
mov
fmul
into
cmp
jl
cmp
cmp
aam
add
dec
das
js
aaa
into
jge
jmp
add
mov
sahf
movs
bound
icebp
add
add
or
push
clc
inc
push
dec
enter
pop
adc
cmps
or
add
int3
sti
pop
push
sub
mov
add
mov
push
pop
add
xchg
inc
inc
shr
call
les
shl
shl
or
push
mov
psrad
call
leave
gs
jle
or
or
ret
mov
in
mov
xchg
sahf
lock
push
lods
or
sbb
mov
loopne
add
xchg
jge
add
jecxz
pop
or
fadd
add
dec
fs
in
or
sbb
ret
pop
shr
and
or
or
mov
jae
loopne
mov
and
clc
add
jb
repz
push
gs
add
mov
stos
int3
push
test
pusha
mov
pop
out
fcomp
ret
push
sub
push
and
push
mov
in
xor
ret
add
pop
cmp
push
or
add
neg
push
ja
jb
push
fistp
pop
dec
push
dec
test
sbb
sub
and
adc
ret
inc
lods
add
mov
iret
je
jbe
jbe
or
mov
sub
jmp
arpl
push
jp
rol
and
xor
jb
adc
gs
push
mov
inc
push
out
mov
test
cmp
jae
fadd
or
mov
lock
cmp
hlt
add
cmp
cld
mov
push
adc
out
shl
retf
and
loop
push
pop
(bad)
pusha
fmul
rol
xchg
push
ins
es
cmp
cld
adc
add
mov
xchg
xor
lods
xchg
call
cmp
aad
push
xor
out
mov
fidivr
fnstsw
adc
out
lock
dec
js
push
fwait
ss
jge
inc
or
mov
out
pusha
adc
mov
inc
lods
add
clc
mov
mov
fwait
pop
outs
xlat
ret
jb
ss
mov
je
pop
dec
(bad)
fdivr
xchg
shl
pop
or
add
sahf
or
sub
jno
cmp
mov
jno
jb
ja
cmp
ja
rcl
jno
dec
movs
sar
push
or
xor
or
dec
add
das
ret
js
test
es
jmp
push
dec
pop
mov
retf
not
push
mov
je
not
inc
inc
push
xor
shl
mov
cmp
(bad)
jnp
mov
shr
bound
or
jne
push
scas
mov
cmps
inc
test
mov
jbe
and
es
xor
mov
lahf
hlt
sbb
stc
sub
jle
or
cmps
loopne
scas
outs
mov
(bad)
or
mov
sub
inc
cmp
call
push
pop
inc
retf
test
mov
cwde
test
(bad)
daa
arpl
pop
cmp
ret
push
pop
shr
clc
jmp
jne
int3
ds
xchg
lods
push
mov
pop
ret
popa
in
adc
sbb
mov
adc
outs
sbb
je
pop
adc
sub
mov
repz
dec
and
das
call
inc
inc
std
aam
sbb
in
mov
(bad)
stc
jmp
std
ins
int
xor
push
and
jb
jmp
add
into
sahf
sbb
out
or
adc
jmp
les
mov
cld
adc
lahf
cmps
mov
mov
jns
mov
rol
inc
je
jno
mov
je
mov
and
ret
push
and
dec
imul
adc
mov
int
clc
jno
(bad)
pop
add
dec
adc
retf
or
jl
mov
sbb
xor
jne
adc
add
xor
pop
mov
fld
or
or
lea
jg
stos
std
test
inc
sbb
add
shl
ins
xor
ret
leave
les
jmp
sub
mov
(bad)
aas
into
xchg
jmp
sbb
sub
sub
sti
mov
icebp
rol
pop
pop
sti
inc
push
xor
movs
xchg
test
push
dec
pushf
ss
xor
and
inc
add
cmp
xchg
sub
pop
test
sub
inc
sbb
sub
movs
xor
jns
sahf
cmp
js
mov
cmp
push
add
add
inc
sbb
in
xlat
dec
mov
pmaxsw
mov
add
sbb
call
imul
(bad)
sbb
push
or
jne
and
add
push
repnz
adc
fcomip
jp
into
mov
pop
xor
sbb
rcr
cmp
sub
adc
xor
mov
push
pop
in
cmp
int
or
in
dec
in
pop
mov
mov
inc
stos
push
je
sub
cmp
popa
xor
out
xor
test
push
add
pop
sbb
data16
test
push
sub
add
mov
jno
gs
stc
pop
mov
iret
adc
sbb
cli
cmp
sub
add
mov
or
mov
jb
dec
xor
sar
mov
jge
inc
cmps
lea
daa
xor
pop
push
and
das
pop
arpl
cdq
in
add
or
in
xchg
imul
xor
sbb
movs
add
mov
in
and
ja
shr
mov
push
arpl
jbe
mov
mov
dec
test
cs
inc
aaa
jg
xor
daa
aam
shl
jae
jns
aas
mov
jo
sub
mov
pop
sbb
dec
pop
sub
inc
(bad)
ja
(bad)
loopne
mov
ret
jbe
jae
jmp
pop
mov
mov
push
add
cli
push
jne
cmps
dec
bound
jmp
mov
mov
jns
cmp
iret
mov
add
dec
je
push
je
push
pop
cmp
aam
lea
pop
push
mov
unpcklps
add
dec
push
add
fs
in
xor
or
adc
out
mov
add
push
xor
mov
xor
inc
xor
xor
jae
loopne
or
sar
cmp
iret
cli
cli
cli
cli
pop
jne
mov
mul
and
ins
jb
sub
xor
xchg
je
jne
cmp
pop
dec
and
add
or
add
push
jns
or
stc
ja
shl
or
push
adc
inc
sub
push
adc
lea
xor
mov
leave
sti
popa
adc
mov
mov
push
idiv
popa
mov
pop
lods
pop
or
lods
push
mov
repnz
test
pop
mov
sbb
clc
sub
je
das
mov
popa
cmp
push
adc
and
outs
ja
shl
dec
dec
inc
jmp
mov
call
jl
je
or
test
fisttp
inc
dec
jo
push
and
std
adc
xchg
mov
pop
push
loopne
adc
jmp
push
fwait
cld
or
dec
dec
pop
xor
or
fsub
lds
add
add
jns
dec
or
inc
bts
mov
popa
jmp
inc
sub
mov
or
nop
mov
inc
je
or
push
or
adc
fs
(bad)
cmc
inc
add
shl
jo
movs
push
jge
shr
cmp
std
dec
or
inc
pusha
iret
inc
push
shl
test
pop
push
add
dec
sub
adc
leave
std
in
add
sub
or
push
shl
mov
mov
pop
mov
mov
scas
test
jmp
sahf
dec
ja
jb
sbb
cmp
or
mov
inc
add
sahf
pop
or
or
push
or
(bad)
xor
lock
xor
data16
out
loopne
mov
cmp
ja
and
dec
dec
pop
pop
push
clc
xchg
mov
push
mov
movs
sbb
push
lea
test
jne
popf
loope
push
and
add
sub
stos
push
jge
aaa
pop
dec
inc
call
mov
cld
or
jle
add
pop
sub
jnp
seto
cli
add
lds
or
inc
(bad)
dec
or
popa
test
shl
sub
add
cmp
inc
loop
loopne
sub
sbb
or
add
sbb
add
cmp
push
loope
popa
xchg
add
push
inc
cdq
mov
sahf
add
mov
loopne
push
sbb
fcom
mov
rcr
cmps
test
add
xor
push
or
or
xor
popa
jb
(bad)
jle
pop
fcom
jmp
mov
mov
inc
or
test
pop
(bad)
pop
cmp
push
lods
cmp
imul
and
sub
mov
add
xlat
test
pop
ins
mov
dec
or
and
call
xchg
sbb
gs
lock
jmp
xlat
lock
inc
mov
add
sahf
mov
or
mov
adc
cmps
push
and
xor
out
jmp
and
adc
xchg
clc
sahf
jmp
test
ror
push
out
pop
jne
jae
mov
and
sbb
jbe
jmp
(bad)
int
inc
pop
ds
push
pop
add
imul
js
adc
add
push
mov
stc
fsubr
clc
sub
pop
and
dec
adc
push
and
test
jb
push
inc
mov
or
test
lock
jbe
adc
rol
aas
mov
hlt
and
sub
mov
cs
push
jl
dec
nop
ret
dec
pop
push
sub
mov
sbb
sub
stos
mul
loope
out
je
sub
movs
clc
jg
or
dec
pop
mov
jbe
push
pop
pop
test
add
cmp
cli
int3
mov
mov
ror
jno
mov
adc
xor
jmp
xchg
(bad)
inc
mov
dec
scas
fcomp
fadd
outs
sub
inc
aas
inc
cli
add
xor
fild
xlat
push
sahf
xchg
or
call
div
xchg
mov
sbb
push
mov
stos
jmp
mov
push
in
or
push
into
shr
data16
fst
popf
lock
jo
mov
xchg
lods
addr16
call
ror
mov
pop
sub
ret
int
fwait
pusha
arpl
xor
jle
xchg
test
mov
xchg
daa
pop
clc
out
push
push
nop
cmp
jbe
test
sbb
and
int
sbb
and
rcl
cmp
fisubr
dec
iret
xlat
pop
(bad)
fst
fist
mov
jbe
lods
aam
pop
sub
shl
or
xchg
jg
sub
out
fwait
cmp
push
mov
pop
in
mov
sbb
and
mov
mov
sub
and
pop
aas
adc
repz
sub
movs
xor
fisttp
test
daa
fisub
mov
mov
xor
xor
push
xchg
bound
mov
mov
add
dec
xor
xchg
(bad)
sub
(bad)
mov
ret
cmp
jl
clc
sbb
or
sbb
test
movlps
add
jmp
sbb
jbe
jno
push
mov
gs
jae
pop
xchg
jno
push
fs
sub
and
fbld
js
mov
fcom
je
or
jns
jb
or
adc
test
test
pop
xchg
pop
sub
inc
adc
adc
iret
iret
push
gs
daa
lock
shl
add
adc
jmp
out
and
rcl
lea
std
sub
ficom
fsubr
dec
dec
shr
(bad)
or
out
inc
xor
dec
sbb
repnz
ss
mov
push
xor
fadd
(bad)
sti
cs
or
jmp
push
lea
mov
ret
jbe
inc
call
xchg
out
push
mov
mov
neg
pop
sbb
not
and
dec
outs
adc
jl
dec
rol
cmps
jl
dec
(bad)
push
dec
jl
ret
sbb
and
adc
push
add
cmp
aam
sub
push
div
fldcw
xlat
clc
add
call
pop
sub
vxorps
add
rcr
out
hlt
vpcmpeqb
(bad)
movs
test
lock
call
test
vzeroupper
call
add
push
jne
xor
call
mov
iret
clc
adc
sub
and
call
mov
sbb
out
xor
cmp
mov
stos
xor
xor
xor
jl
mov
push
daa
xor
or
add
retf
ror
lock
or
icebp
and
sbb
mov
add
ins
shr
cmp
pusha
push
sbb
mov
mov
mov
mov
mov
test
je
je
sub
jne
(bad)
rcl
cli
xor
xor
mov
pop
jmp
retf
enter
sub
and
int
add
rcr
cmp
or
sar
rcr
add
add
mov
add
xchg
mov
(bad)
data16
add
push
add
xchg
jmp
pop
je
call
push
(bad)
push
out
mov
scas
cdq
sub
shl
pop
loopne
adc
sbb
inc
xchg
sub
jmp
and
dec
mov
add
or
add
unpcklps
adc
xor
pop
jmp
add
repz
shl
mov
push
xor
adc
clc
or
mov
xor
inc
and
push
sbb
mov
leave
adc
dec
(bad)
push
or
and
hlt
cmp
loopne
(bad)
cs
dec
movs
aam
int3
clc
in
in
mov
mov
lock
lea
and
jbe
mov
and
add
inc
mov
(bad)
repz
leave
cmp
(bad)
ins
add
push
int
test
or
inc
jne
inc
arpl
lea
sub
test
daa
rol
inc
imul
nop
xor
xor
mov
add
adc
mov
pusha
daa
push
push
xor
mov
jnp
mov
div
dec
xor
and
mov
pop
add
repnz
xchg
adc
push
add
pusha
loopne
or
push
clc
push
push
push
mov
aam
jb
lea
push
adc
push
ins
xchg
outs
add
pop
cmp
rol
pop
cld
out
xlat
arpl
push
mov
adc
or
pop
dec
pusha
and
hlt
mov
test
adc
push
adc
pop
jmp
add
sbb
jle
test
add
mov
pusha
push
iret
inc
repz
call
(bad)
cmp
imul
pop
(bad)
jnp
ds
sub
push
cmp
sahf
and
(bad)
adc
mov
mov
push
lods
jne
ins
movs
rcl
outs
je
cld
cmp
jmp
outs
xchg
mov
stos
sub
lods
add
sbb
pop
pop
lahf
mov
inc
jl
jg
cmp
ja
imul
pop
mov
add
test
sub
stos
add
rcl
dec
sbb
pop
mov
or
rcr
push
sahf
sub
int3
jbe
icebp
aas
pushf
mov
sbb
inc
or
(bad)
fiadd
add
mov
clc
jg
lds
out
pop
dec
je
jae
lahf
aas
add
or
ss
sti
aaa
in
sub
xor
gs
or
imul
xchg
int
daa
movs
jge
test
je
cmp
and
cmps
test
and
nop
adc
sbb
sbb
fsubr
mov
call
outs
mov
nop
mov
add
(bad)
mov
test
push
ss
pop
mov
inc
sbb
clc
cmp
mov
jecxz
and
xchg
mov
inc
pop
call
or
ret
sub
cmp
ja
xor
sbb
shl
in
cmp
test
iret
scas
sbb
cmp
into
imul
cmp
sbb
pop
xor
ss
push
cmc
xchg
mov
(bad)
push
out
sub
jo
lahf
test
div
cmp
xchg
pop
cld
mov
lea
cmp
retf
add
fimul
ficomp
nop
leave
call
sub
and
mov
retf
cmp
jb
arpl
mul
jmp
scas
mov
cld
aas
adc
test
xchg
lahf
aam
or
push
sbb
fdivr
sub
sub
add
pop
or
bswap
inc
jno
jmp
and
push
fimul
add
test
jl
fadd
js
imul
xor
adc
and
fiadd
jle
pop
cmp
push
clc
xchg
inc
cs
hlt
cvtdq2ps
xor
mov
add
xchg
movs
mov
icebp
jne
fstp
pop
inc
ret
aas
out
jecxz
mov
cmp
aaa
sub
adc
shr
enter
mov
pop
ror
imul
fisttp
push
adc
add
jmp
cmp
cld
(bad)
xchg
mov
xchg
nop
inc
sbb
(bad)
mov
pop
es
mov
cmp
mov
xchg
xchg
lock
mov
enter
inc
out
fwait
pop
enter
or
sbb
cmp
fs
or
push
leave
leave
mov
or
or
and
xchg
or
test
ss
or
jb
or
pop
xor
in
xor
movs
rcr
jb
dec
xor
imul
nop
xchg
aas
pop
inc
adc
loopne
dec
dec
inc
(bad)
sbb
pop
xor
sub
mov
sub
pop
mov
out
xchg
add
adc
add
test
pop
push
inc
pop
adc
and
dec
nop
cmp
pop
add
cmp
ds
push
stc
add
daa
jns
jge
mov
mov
mov
div
cmp
in
enter
and
inc
leave
mov
dec
push
and
jle
jns
cmp
jle
jle
in
repnz
jle
xchg
inc
leave
and
jle
jle
das
push
and
xor
adc
add
and
jne
or
rol
mov
ror
add
or
mov
add
clc
xchg
dec
test
jge
push
and
leave
hlt
ds
and
stc
data16
jns
sbb
gs
pop
(bad)
lea
cli
fild
test
sbb
sub
and
ror
(bad)
shl
cdq
or
enter
xchg
hlt
jg
or
inc
frstor
sbb
push
adc
pop
adc
dec
ins
xor
cdq
sbb
cmps
push
xchg
retf
push
in
daa
jo
leave
stos
repnz
mov
retf
in
mov
repnz
repnz
sar
xchg
or
mov
and
push
jbe
xor
pop
push
jp
das
pop
es
and
sub
mov
jb
xor
test
bound
out
jb
daa
shl
and
mov
mov
mov
sub
in
mov
xchg
xchg
inc
aam
lock
add
aad
cmp
push
pop
data16
xchg
cmps
sbb
inc
out
and
push
cmp
xor
add
adc
jmp
sub
int3
add
mov
mov
fcom
adc
loopne
dec
mov
sub
xor
push
sbb
in
lahf
lahf
pop
jbe
mov
pushf
es
arpl
inc
imul
push
cmps
sbb
pop
sub
inc
sub
es
daa
xor
(bad)
lahf
das
pop
bound
add
xchg
lock
mov
leave
sbb
push
mov
arpl
(bad)
sahf
out
neg
ret
adc
imul
lahf
pop
aaa
jg
cmp
xchg
xchg
xor
scas
lahf
xchg
out
in
xchg
enter
dec
inc
sbb
jecxz
jnp
jge
jae
js
loopne
cli
sti
cmp
pushf
dec
clc
jb
xor
lods
sub
adc
sbb
mov
sbb
cmp
jb
shl
nop
call
push
jmp
or
int
jmp
push
push
rcl
es
add
sbb
xbegin
popa
add
add
add
or
xchg
cld
data16
hlt
mov
push
push
xor
ins
xor
lahf
retf
jmp
cs
popf
sbb
ins
fld1
xchg
add
or
sbb
cmp
in
stos
test
cli
call
xor
mov
rcl
mov
loopne
jl
mov
add
mov
in
and
xchg
mov
adc
imul
(bad)
push
xchg
xor
add
xor
fiadd
dec
in
push
sbb
jo
adc
ja
not
mov
sub
test
mov
neg
les
jne
jmp
mov
push
or
rcr
xchg
ret
jge
add
and
pop
sbb
out
mov
jb
(bad)
mov
add
mov
xor
add
adc
push
cdq
loopne
jmp
gs
dec
push
mov
push
sub
inc
adc
ds
loop
ds
fld
add
pop
add
sar
or
dec
mov
inc
add
call
dec
sbb
jne
mov
cmps
sahf
push
outs
pop
mov
add
fisub
dec
fild
movs
push
push
sbb
ins
push
pop
cmp
add
or
cmc
sbb
adc
cmp
ret
fisubr
lods
add
add
icebp
fld
loop
xlat
sbb
dec
cld
push
inc
dec
in
fadd
sbb
mov
iret
movq
adc
mov
mov
sbb
sbb
repz
pop
add
pop
rol
shr
pop
xor
jp
inc
rcl
cwde
fsincos
into
sbb
ret
push
xor
mov
or
fwait
into
movs
sar
push
imul
aas
call
mov
mov
xor
je
iret
fist
push
push
inc
pusha
cmc
adc
pop
push
add
dec
loopne
jecxz
pop
imul
push
sub
sub
jl
cmp
jg
inc
jmp
pop
cmp
dec
imul
dec
pusha
add
pop
add
je
inc
pop
xor
dec
sbb
mov
sub
push
(bad)
xor
xchg
xor
ss
jo
popa
sbb
(bad)
mov
add
in
fiadd
pop
jno
rcl
hlt
lds
xchg
xor
mov
xchg
pop
sub
sub
adc
in
mov
xchg
dec
and
adc
xor
or
add
mov
xchg
or
fprem
mov
ins
imul
adc
ds
cmp
ins
xor
mov
cmp
and
push
movs
push
fisub
or
inc
movs
push
push
push
xchg
in
xor
push
cmps
sub
test
test
push
nop
pop
inc
mov
sub
pop
lock
jnp
push
fs
mov
jmp
or
push
jbe
xchg
int3
pop
cwde
pop
(bad)
pop
xor
cs
add
mov
retf
nop
dec
popa
xor
or
hlt
adc
push
sahf
jo
pop
call
mov
xor
sbb
and
das
pop
and
mov
pinsrw
inc
mov
mov
push
or
jnp
jmp
es
xor
mov
xlat
xor
dec
mov
pop
or
je
ds
sub
xor
push
inc
sub
pop
push
inc
sbb
pop
jle
or
inc
mov
pop
mov
xor
inc
sub
pusha
cwde
xlat
sbb
sub
pop
lock
js
dec
mov
cs
mov
bound
push
(bad)
jge
addr16
and
pop
or
push
ffree
movs
mov
nop
das
out
ror
leave
pop
mov
jb
nop
out
sub
jns
sbb
or
add
jge
inc
push
mov
mov
sbb
mov
retw
sub
jg
cmp
inc
jb
xchg
and
push
adc
sti
mov
jbe
jl
jne
mov
jae
gs
rcr
ins
sbb
jl
loopne
shr
(bad)
and
ja
pop
nop
in
mov
cmp
add
mov
push
and
fstp
adc
adc
or
sbb
dec
adc
ins
inc
mov
aam
inc
or
idiv
xchg
adc
test
sub
cmp
push
mov
cmps
das
(bad)
lea
pop
add
and
call
pushf
adc
dec
inc
lods
mov
(bad)
(bad)
xor
pusha
inc
cs
xchg
push
push
sub
lods
bound
xor
jo
mov
lock
test
jmp
lea
add
sub
shl
adc
rol
add
add
mov
(bad)
int3
rol
or
and
inc
imul
lock
jmp
push
xchg
adc
xchg
dec
retf
sbb
les
scas
push
inc
fisub
fs
mov
inc
test
jle
clc
je
xor
xor
push
imul
mov
iret
and
jmp
retf
sahf
inc
jl
sbb
ret
and
mov
mov
jno
dec
in
sbb
fldenv
sbb
pop
enter
cmp
push
adc
mov
je
and
sbb
test
jae
js
and
add
push
out
lea
aaa
fisttp
mov
add
sbb
fist
or
xor
retf
cmp
add
adc
cmp
std
or
lds
das
test
sbb
and
or
jno
loope
mov
loope
cmps
hlt
xor
icebp
cmp
sub
adc
retf
mov
cdq
ds
cdq
aam
cmp
xchg
scas
fisttp
jne
pop
dec
call
adc
cmps
adc
sub
in
js
cmp
mov
pop
adc
sar
sub
xchg
xor
dec
cmp
outs
or
cmp
xor
leave
dec
pop
gs
pop
and
mov
lods
push
mov
push
or
push
popf
xchg
int3
arpl
push
add
pop
cli
sub
repz
add
(bad)
je
movs
out
out
sbb
and
je
jbe
cmp
test
cmc
push
in
add
mov
nop
shl
and
add
retf
xchg
inc
(bad)
pop
push
or
xchg
add
and
xor
add
sub
sbb
cmp
xchg
mov
sub
popf
cmp
imul
xlat
fwait
add
push
xor
and
xor
or
cmp
ror
sub
sbb
imul
dec
(bad)
fsubr
push
mov
xlat
cmp
or
inc
xor
(bad)
adc
jge
outs
add
push
mov
stc
or
psubsb
jl
mov
outs
(bad)
adc
jp
cmp
push
add
cmp
test
ror
pop
clc
jbe
in
adc
std
jne
pop
int
add
nop
xor
mov
adc
movs
retf
sub
xlat
cmp
xchg
aam
pop
int3
xchg
jecxz
or
cmp
jg
je
mov
jnp
or
push
sub
push
jne
jmp
or
int
int
or
je
adc
cmp
jg
push
jne
loopne
jb
popf
jmp
xor
or
cmp
inc
sub
xchg
sar
loopne
cmp
shl
leave
push
sbb
hlt
cs
loop
ret
js
cmc
mov
sbb
and
add
inc
loop
inc
cmp
and
adc
(bad)
adc
retf
ret
ror
mov
(bad)
jmp
push
or
mov
push
loop
sar
xchg
lods
or
adc
rcl
mov
inc
sub
add
inc
sbb
rol
jne
inc
ss
mov
cs
loopne
pusha
mov
and
test
push
das
sub
xchg
sub
outs
xchg
and
jp
jmp
in
ins
stos
cli
sub
pop
cmp
cmp
imul
inc
pop
push
mov
rcr
pop
sbb
aaa
push
pop
call
add
enter
mov
push
retf
sbb
iret
inc
mov
or
adc
test
popf
push
test
shl
and
fs
lods
imul
xchg
shl
pop
movzx
add
sub
ret
ret
outs
add
dec
fbstp
xor
mov
loopne
push
push
cmp
ins
(bad)
cmps
xchg
aaa
and
or
dec
or
sub
xor
dec
loope
or
and
sbb
je
(bad)
in
lea
(bad)
cmp
in
jns
pop
dec
sbb
mov
imul
adc
stos
adc
data16
dec
add
je
jne
test
jg
enter
test
sub
pop
push
sub
pop
in
jo
jb
push
jecxz
test
ja
dec
and
out
push
jmp
sub
and
sar
mov
add
push
enter
popa
das
stos
pop
sub
pop
lods
lea
div
sub
test
and
adc
xchg
sbb
dec
clc
jecxz
ret
jo
cmp
inc
push
pop
ficomp
int
push
imul
jle
cmp
push
ret
je
mov
jmp
and
mov
ficom
jo
xchg
movs
push
and
(bad)
pop
stos
pop
add
sub
pop
fwait
clc
movs
and
lahf
ret
push
stc
inc
ja
inc
xchg
push
add
mov
xchg
cmp
sbb
mov
cdq
push
fadd
jl
(bad)
push
les
sub
addr16
iret
add
mov
pop
mov
(bad)
test
jo
adc
or
or
lods
jmp
and
js
mov
jmp
les
clc
call
cmp
clc
cdq
idiv
addr16
inc
enter
test
in
sbb
loopne
and
cmp
je
adc
add
or
in
inc
cmp
out
pop
clc
add
or
call
mov
add
in
xlat
xchg
jae
jmp
sub
sbb
int3
jne
adc
ret
xor
and
xlat
inc
lock
mov
mov
dec
shr
inc
imul
mov
imul
add
daa
push
xlat
xchg
(bad)
mov
xchg
lea
clc
loop
push
cmp
jl
dec
fist
xchg
cmp
pop
sub
call
inc
xlat
add
jmp
mov
aad
jo
cs
pop
cmc
sub
xor
sub
jb
mov
imul
lock
in
call
sbb
push
mov
ins
rol
add
mov
(bad)
scas
repnz
scas
fisttp
jmp
pop
or
or
lea
in
fst
push
pop
test
pop
dec
std
push
mov
push
cmps
lea
rcl
cmp
or
mov
ror
mov
pop
cmc
push
addr16
pop
lea
adc
or
or
xor
inc
pop
shl
push
mov
or
sbb
sbb
push
add
lea
mov
jmp
mov
cmp
pop
retf
xor
test
and
cmps
nop
jne
cmp
sub
test
inc
sbb
jb
cwde
xchg
xchg
mov
mov
push
jns
mul
push
lea
adc
retf
mov
sub
sub
pop
cmp
and
adc
sbb
mov
pop
mov
inc
icebp
jge
dec
mov
sbb
or
add
adc
dec
pop
movnti
add
mov
or
sbb
retf
mov
push
cs
jl
fistp
push
(bad)
hlt
popf
inc
(bad)
push
ds
cmps
or
or
xor
mov
jno
lea
push
push
jge
sub
push
sub
mov
aam
xor
loopne
fucomip
dec
outs
ret
sub
pop
cmp
test
mov
jmp
fistp
sbb
xchg
iret
mov
push
test
and
cs
ficomp
(bad)
(bad)
lea
and
dec
in
gs
xchg
call
adc
pop
xchg
adc
pop
std
je
or
mov
mov
push
dec
ret
adc
pop
sub
push
and
or
push
test
or
add
pop
sbb
pop
adc
push
cmp
push
pop
adc
out
stos
adc
sar
fucom
shl
les
inc
(bad)
sbb
adc
mov
add
xor
popf
mov
fidivr
push
clc
xchg
jb
jne
rcr
mov
das
inc
je
pop
es
sub
add
not
mov
inc
push
xor
push
ret
inc
mov
push
and
adc
jno
sub
adc
shr
jmp
cmp
xor
push
xor
push
out
sbb
jns
fsubr
mov
sahf
je
pop
add
loope
and
push
cmps
fidiv
addr16
out
lods
jne
int3
mov
sti
lock
aas
jb
cmp
and
das
or
add
jne
cmp
out
jmp
add
(bad)
cmp
ja
sbb
sub
shr
data16
daa
add
out
xor
pop
inc
push
add
dec
jns
mov
or
je
cmp
fiadd
mov
bt
mov
jo
imul
pop
pop
adc
gs
cmps
jle
pop
imul
jecxz
mov
es
xor
mov
in
xor
iret
sbb
push
add
cmp
sbb
icebp
mov
xchg
popa
movs
cmc
adc
int3
push
imul
sub
push
mov
add
std
cmp
fadd
and
int3
aaa
lds
add
pusha
xor
mov
jne
push
in
or
and
clc
out
test
sbb
pop
push
adc
jno
lods
push
xchg
and
push
pop
dec
pop
add
cmp
test
mov
pop
sbb
and
jp
sbb
push
xor
clc
xor
cmp
jo
ror
retf
inc
aaa
pop
xor
(bad)
cmp
je
xchg
pop
add
repz
adc
out
inc
mov
xor
mov
add
push
icebp
lea
jle
jne
or
lea
add
test
(bad)
jae
push
xchg
es
pop
add
jmp
fcomp
jne
jg
popa
mov
rol
call
ins
jecxz
pop
mov
jb
test
push
js
outs
add
push
popa
out
lods
xor
push
fld
dec
repnz
mov
push
or
in
mov
ret
sti
inc
mov
lea
lock
push
cld
movs
sbb
fidivr
jmp
push
(bad)
enter
mov
add
cmp
cmp
xchg
imul
adc
xchg
call
add
jmp
ret
pop
popa
fucom
inc
mov
sub
lock
push
inc
int
inc
cmp
scas
inc
fisttp
sti
sahf
jnp
xor
fstp
ja
inc
jle
shl
xchg
dec
jbe
add
jo
dec
mov
nop
adc
sub
jo
push
dec
or
jb
into
mov
test
rcl
(bad)
call
jge
jmp
jns
lock
pop
add
xor
mov
jl
and
fcmovbe
iret
ror
pop
into
push
push
adc
sbb
add
call
jb
adc
imul
xor
ror
sub
push
xchg
mov
shr
sub
mov
add
xor
mov
shld
xchg
fimul
jne
mov
mov
mov
test
inc
mov
cli
push
or
ins
outs
(bad)
dec
mov
ror
pop
call
nop
int
adc
push
add
cmp
adc
or
inc
dec
sub
push
xor
push
dec
les
inc
lods
push
cli
cs
mov
cmp
mov
sub
pop
lods
and
movs
test
adc
jno
add
movs
cmp
hlt
hlt
sbb
inc
push
dec
mov
ret
in
clc
sub
cmovno
ret
adc
shr
mov
cmp
xor
sub
jo
jp
jmp
iret
dec
xchg
inc
add
add
mov
xchg
push
shr
je
loop
pop
cmps
inc
mov
std
or
and
jo
ins
mov
add
pop
sub
push
add
pop
aam
or
dec
sbb
push
sub
or
ds
mov
in
pop
and
and
or
add
or
dec
sbb
aaa
xor
cmp
jne
nop
dec
xor
xchg
fwait
test
mov
shr
inc
push
fdivr
push
sbb
dec
ja
dec
pop
xor
not
cmovns
sete
mul
jbe
jo
sahf
aaa
or
ss
jmp
push
push
dec
dec
xor
fisttp
add
aaa
pop
ror
cwde
pop
push
lock
jp
clc
xor
jne
fiadd
mov
and
fnstcw
cmps
fsub
jl
xor
loopne
sub
sar
or
cmp
xor
or
and
dec
retf
hlt
add
pop
pop
and
movs
sub
and
pop
add
pop
xchg
push
mov
adc
adc
jno
loopne
pop
push
les
test
int3
out
and
cmp
mov
and
shr
int
into
or
push
iret
in
lods
sbb
js
jbe
jmp
out
or
(bad)
pusha
data16
pop
(bad)
into
ja
fst
cmps
pop
and
cmps
and
cmp
pop
ja
out
loopne
or
dec
test
inc
push
sbb
out
sub
jp
pusha
movs
push
fiadd
std
sbb
not
and
rol
jo
sahf
lods
dec
enter
into
add
push
inc
xchg
mov
mov
pop
inc
cli
push
jmp
fisttp
xlat
ret
sbb
push
dec
sets
cmps
cmc
mov
add
mov
nop
mov
imul
hlt
xchg
das
dec
mov
mov
adc
cdq
fild
pop
ins
mov
arpl
mov
mov
jl
or
fnstenv
push
mov
push
outs
inc
mov
lea
xchg
pop
jg
jg
idiv
and
imul
je
imul
xchg
in
mov
loopne
ja
ins
dec
mov
inc
call
scas
stc
inc
add
sbb
mov
inc
out
mov
repz
add
add
sub
adc
dec
fsub
sub
lahf
test
cmp
xor
pusha
mov
ins
lahf
out
inc
clc
cmp
ja
pop
inc
jmp
jmp
add
adc
aas
sub
test
ror
lea
or
xor
or
das
push
sub
retf
cmp
aam
dec
jbe
push
pop
pop
sbb
adc
xchg
xchg
jmp
push
and
ret
sar
sub
sbb
ins
cs
xor
cmp
call
mul
cwde
cmp
call
pop
popa
push
inc
push
adc
test
xchg
jmp
xor
jbe
and
mov
inc
xor
mov
dec
push
xchg
mov
push
stos
jo
push
push
push
scas
cld
or
cmp
ret
mov
outs
cmp
pop
mov
push
adc
push
inc
or
push
js
cdq
popf
or
sub
push
jo
call
mov
ret
or
xor
repz
adc
push
ficomp
adc
jecxz
adc
jmp
jno
loope
xlat
jmp
nop
js
push
out
mov
je
lods
adc
push
(bad)
out
add
pusha
mov
adc
push
xor
test
pop
test
push
push
jno
adc
and
data16
daa
cmp
jl
stos
cmp
xchg
add
or
or
loope
mov
cmp
mov
rcr
xor
add
imul
mov
mov
js
add
mov
(bad)
pop
rol
hlt
cmp
xchg
push
loopne
jg
jne
jne
jg
sbb
sbb
sbb
push
daa
jg
adc
jmp
sbb
xor
lods
pop
pop
mov
push
jbe
mov
adc
nop
mov
add
xchg
sub
or
repnz
pop
push
pop
mov
adc
sbb
(bad)
shr
into
pop
call
jbe
adc
push
xchg
adc
pop
cs
(bad)
(bad)
sub
cmp
addr16
push
add
sbb
adc
je
(bad)
shl
push
xor
sub
repz
sub
sub
call
mov
push
and
(bad)
xor
ficom
ins
cwde
xor
add
aaa
call
outs
call
and
push
mov
inc
or
push
xchg
inc
enter
shr
pop
pop
inc
dec
sub
pop
sbb
push
or
add
pop
rol
sub
push
push
inc
cmp
adc
push
nop
xor
adc
xchg
gs
adc
icebp
cld
dec
aam
fmul
mov
popa
mov
mov
add
dec
xor
gs
xchg
mov
pop
sysenter
add
dec
xor
in
or
jbe
imul
or
adc
dec
xor
xor
sub
and
inc
inc
shl
xchg
imul
xchg
jne
jns
add
call
fs
and
movs
or
sahf
xchg
pop
and
js
dec
jp
pop
cmp
xor
inc
popf
jns
(bad)
mov
sub
push
bound
ins
(bad)
push
xor
popf
inc
pop
xchg
xchg
jne
sub
cmp
xor
inc
and
pop
jb
cmp
mov
iret
pop
test
xor
cs
imul
call
xor
add
and
mov
sub
addr16
mov
or
and
sbb
mov
lahf
inc
or
jmp
inc
fstp
(bad)
in
outs
fnstsw
xor
xchg
ret
cmp
or
daa
aaa
mov
ret
xchg
and
dec
mov
mov
pop
sbb
mov
aam
pop
rcl
test
pop
outs
in
(bad)
out
and
push
cmp
rcl
cmp
jne
sbb
and
loopne
(bad)
jle
jmp
aam
push
or
mov
jmp
jle
add
xor
adc
lock
add
int
mov
data16
out
xchg
xlat
enter
fimul
jg
mov
rcl
aam
cmp
jecxz
sub
sub
add
and
hlt
mov
mov
add
jmp
mov
or
pop
pop
mov
pop
jo
bound
popa
dec
add
rol
cmp
(bad)
pop
xchg
push
std
push
push
jmp
nop
and
ret
gs
icebp
mov
fiadd
fmul
(bad)
jg
movs
pop
mov
leave
and
add
mov
mov
rcl
add
mov
inc
lock
test
push
push
loopne
dec
in
loopne
lock
ret
daa
and
je
popa
inc
fist
or
push
aam
and
data16
repz
call
shr
jmp
movs
push
dec
ret
add
(bad)
mov
ja
out
test
mov
xor
pusha
push
std
mov
jle
jle
and
add
fsub
ror
outs
mov
and
inc
cmp
popa
ja
add
loope
ror
lock
loop
enter
mov
adc
shr
in
dec
pushf
test
imul
add
or
scas
jle
popa
mov
sahf
or
mov
cmp
les
xchg
mov
dec
into
jne
adc
add
inc
call
in
mov
cmp
inc
mov
cmp
lock
inc
jmp
adc
jecxz
rol
lock
pusha
pop
inc
loopne
and
mov
push
ins
nop
xor
and
xor
adc
and
fadd
aaa
mov
sub
jg
jb
mov
clc
or
inc
add
jl
push
adc
arpl
xchg
dec
jl
fstp
data16
repnz
sub
pop
add
pop
mov
xor
pop
add
sbb
fs
mov
fs
or
adc
js
rol
mov
sbb
sbb
daa
(bad)
mov
movs
das
mov
jle
jbe
loopne
mov
jo
call
sbb
dec
adc
cld
lods
hlt
sub
test
loop
adc
outs
mov
test
leave
cmp
xor
mov
xor
cdq
out
dec
or
mov
jmp
mov
and
dec
sbb
pusha
and
das
sub
mov
pop
mov
ja
dec
imul
aad
jecxz
mov
in
shl
sar
sbb
cmp
or
add
mov
dec
sbb
sub
nop
hlt
inc
mov
lea
out
enter
push
cmps
ret
cmp
sbb
sub
push
inc
add
jbe
pop
mov
adc
push
inc
clc
xor
push
(bad)
xlat
lock
add
mov
and
idiv
push
adc
cwde
sbb
enter
sbb
sub
add
add
push
ret
fiadd
je
lock
pusha
push
xor
stos
add
popa
cwde
sbb
enter
and
jne
or
push
mov
ret
int3
add
es
push
or
(bad)
mov
outs
xchg
fcom
sbb
outs
mov
sbb
add
rcl
sub
dec
sbb
jg
sbb
std
cmp
mov
inc
int3
sbb
and
push
or
and
xchg
or
xor
add
cmp
push
xor
mov
(bad)
int3
scas
call
sti
adc
nop
shl
cmp
inc
neg
push
jae
ret
cmc
dec
cmp
sbb
jecxz
fadd
or
dec
sub
rol
mov
lock
arpl
xor
ficomp
pop
(bad)
adc
adc
rol
add
or
dec
cmp
shr
jl
fs
test
enter
(bad)
mov
mov
mov
jmp
jmp
push
pop
fwait
jmp
dec
xor
mov
xchg
and
mov
fadd
pop
sbb
lods
adc
fwait
or
sub
add
ss
xchg
or
xchg
push
shr
popa
push
enter
in
xor
and
fdivr
xor
xchg
idiv
aam
cmp
(bad)
aas
int
in
rcl
cmp
mov
or
adc
jg
rol
lock
fmul
mov
mov
cmp
sbb
inc
adc
jmp
push
sub
test
or
sbb
cmp
pop
lds
out
push
push
adc
cmps
push
out
mov
rcl
enter
or
arpl
clc
fwait
lar
ja
or
sub
inc
adc
inc
je
inc
je
fst
into
in
adc
add
and
jecxz
sbb
jne
fistp
pop
(bad)
add
push
les
sub
addr16
jmp
arpl
mov
jmp
(bad)
ins
add
scas
popa
jg
nop
out
jecxz
push
imul
or
sub
in
add
xor
or
jno
in
gs
out
sti
add
jo
(bad)
jmp
sub
outs
data16
popa
add
adc
sbb
adc
mov
jle
ins
push
jl
out
frstor
push
cmp
jge
mov
xor
out
sbb
jo
cmp
imul
xor
add
add
pop
dec
sbb
mov
test
clc
cli
push
mov
jl
imul
push
or
or
loopne
shl
xchg
or
add
aam
rol
sbb
mov
cmp
dec
aaa
ror
push
call
imul
xor
xchg
sbb
movs
pop
mov
fdivrp
mov
dec
push
inc
outs
and
push
iret
aam
int3
pop
daa
ror
mov
mov
or
sbb
xchg
add
jmp
xor
jns
movs
bound
push
add
or
inc
rol
and
iret
add
fs
and
xor
jo
sbb
lods
or
or
mov
jb
or
xor
mov
and
mov
test
stc
push
imul
add
xchg
jle
mov
mov
es
(bad)
inc
loop
jmp
jle
add
into
jnp
xor
xor
cmp
jg
sbb
call
sub
dec
mov
mov
adc
push
or
or
in
ins
push
push
neg
pushf
lock
std
mov
xchg
adc
dec
cmp
sbb
pop
inc
in
fsubr
dec
mul
add
or
push
mov
enter
add
mov
call
cwde
sbb
jo
sbb
or
(bad)
retf
shl
out
lahf
sub
mov
daa
jo
or
mov
cmp
inc
mov
test
xchg
ret
mov
dec
sub
pusha
xchg
jo
xchg
dec
push
imul
cmps
pop
cmp
shl
dec
jmp
test
add
ins
movs
sbb
mov
xor
cmp
fcomp
fdivr
(bad)
jae
adc
in
inc
rol
jmp
pop
adc
pushf
(bad)
dec
rol
clc
lea
les
dec
or
rcl
cmp
pop
inc
add
shl
xchg
dec
sub
test
js
cld
dec
fmul
repnz
jmp
xchg
fcmovu
or
inc
jbe
and
or
xchg
xchg
out
dec
popa
adc
pusha
js
inc
push
sbb
loopne
and
inc
(bad)
in
sbb
jnp
in
mov
dec
popf
jmp
or
mov
and
pop
mov
pusha
sub
(bad)
jmp
xchg
or
push
add
adc
jbe
sbb
out
loopne
pop
stc
dec
out
pusha
cmps
inc
fstp
leave
lods
fsubr
shl
ret
ins
or
pop
cs
add
lods
pop
add
inc
shr
add
mov
xor
cwde
dec
pop
movs
aad
mov
in
xlat
test
sbb
ss
sub
mov
jne
ja
sub
cdq
cmp
adc
mov
dec
jmp
psubusb
cmp
cmp
xor
xlat
or
pop
cmp
sbb
xchg
fs
mov
push
xchg
movs
push
test
push
push
xchg
movs
xor
js
pop
into
adc
or
dec
pop
xlat
call
mov
jne
xor
mov
dec
aaa
add
test
outs
mov
push
sbb
ins
fild
out
test
jmp
add
imul
shl
push
stos
xchg
ins
add
mov
and
mov
sbb
add
dec
sbb
test
sub
add
or
in
xchg
or
xor
or
or
sub
in
fmul
nop
sub
adc
(bad)
mov
dec
and
dec
ret
or
add
push
ret
xor
xchg
mov
les
and
cld
adc
movlps
push
in
mov
pop
std
mov
sbb
sbb
push
lds
adc
sub
sti
push
mov
adc
mov
or
das
test
mov
push
aaa
push
repz
popf
dec
add
xchg
(bad)
cmps
pusha
mov
in
dec
int3
push
sub
mov
movs
push
jae
sub
pop
add
sbb
push
xor
mov
stos
loope
or
pop
je
sbb
sub
sbb
scas
nop
inc
xchg
movs
nop
movs
loopne
fnstsw
add
push
movs
fs
push
pop
push
call
pop
mov
ret
in
dec
or
cmp
cmp
add
adc
push
ins
xor
xor
cmp
sbb
dec
lea
js
jg
xor
(bad)
add
xlat
ror
jbe
cmp
lea
mov
sbb
inc
inc
push
adc
dec
and
inc
jne
enter
jnp
cmp
repz
imul
jb
push
xchg
adc
movs
inc
inc
pop
or
and
dec
xchg
sbb
jo
mov
xchg
push
sahf
test
and
out
pop
retf
dec
retf
jnp
lds
or
and
xor
and
jo
push
(bad)
es
iret
jne
movs
and
jb
adc
cmps
js
xchg
outs
(bad)
sbb
pop
cmps
mov
add
xrelease
xor
jne
adc
std
inc
or
add
mov
add
push
pop
ins
leave
cmps
mov
or
or
fstp
push
dec
and
(bad)
pop
call
test
test
sub
dec
hlt
push
lods
mov
aas
call
paddsb
jne
or
test
pop
data16
or
and
pop
ret
mov
lods
test
or
mov
ins
dec
dec
test
mov
jns
shl
or
push
push
fistp
fwait
mov
push
cld
push
ret
inc
push
call
dec
or
mov
shl
adc
adc
sbb
jb
in
sbb
and
pop
cs
loopne
dec
cs
cmp
inc
call
inc
in
dec
xor
jb
lock
hlt
leave
xlat
adc
test
mov
or
xor
xor
dec
mov
fadd
or
cmp
scas
out
loope
inc
pop
fxtract
adc
adc
jecxz
pop
adc
shl
jl
imul
les
or
dec
push
cmp
push
mov
push
or
test
dec
fist
lea
cmp
mov
inc
dec
jnp
ror
add
adc
sbb
sub
int3
clc
cmps
add
movs
aas
ror
mov
mov
ss
or
mov
and
mov
mov
add
fsubr
xor
adc
cwde
and
jmp
or
push
stos
xchg
test
sbb
js
push
(bad)
ret
fcom
lods
add
daa
into
add
test
and
add
cld
fstp
dec
adc
nop
inc
fldenv
and
inc
inc
mov
test
mov
jb
add
and
es
xor
jmp
out
mov
xchg
scas
xor
lods
lods
sbb
ret
inc
jp
inc
or
(bad)
(bad)
cwde
add
mov
lods
mov
je
cwde
mov
dec
add
jns
es
dec
mov
mov
add
add
pop
mov
jo
adc
adc
jnp
push
stc
jle
mov
inc
js
lahf
(bad)
jl
pop
(bad)
outs
movs
sbb
sbb
enter
cdq
jne
pop
inc
xor
mov
movs
push
ins
push
stc
mov
xor
sbb
sub
push
and
mov
shl
cwde
sbb
mov
sbb
lea
mov
jle
cmp
stos
mov
test
sbb
call
dec
pop
movs
repnz
or
aaa
ret
sbb
pop
push
into
xchg
mov
adc
(bad)
dec
sar
inc
add
cmp
inc
jecxz
scas
leave
cmp
push
push
mov
adc
dec
mov
lods
jbe
mov
mov
add
nop
add
or
or
push
cmps
in
or
adc
or
sbb
pop
ja
inc
movs
aas
scas
adc
dec
push
sbb
inc
jl
bound
and
inc
add
(bad)
inc
popa
add
cmp
xor
ret
pop
sub
arpl
add
push
mov
or
pop
jne
add
push
ss
rcr
in
test
rcl
jge
jge
pop
xchg
rol
jge
cmp
add
sbb
xchg
inc
adc
test
aaa
xor
and
sub
push
cmp
xor
dec
jl
push
xor
add
out
adc
xor
jns
xor
retf
jo
(bad)
jge
(bad)
(bad)
jmp
mov
push
cwde
or
and
aam
pop
or
stos
call
inc
xor
push
les
rcr
cmps
int3
inc
fadd
xchg
push
or
mov
std
xchg
aam
xchg
xchg
push
imul
cmp
shr
inc
shr
sbb
cmps
retf
mov
or
jle
push
lea
shl
jbe
sbb
movs
add
mov
jmp
jns
xchg
inc
sub
mov
inc
sub
aas
lods
inc
in
and
pop
clc
or
xor
ret
push
push
into
shl
in
pop
add
test
(bad)
mov
or
loope
call
push
int
aas
dec
test
or
pop
and
xchg
ret
or
ins
shr
push
mov
out
push
(bad)
ja
jae
ds
push
push
or
xchg
rcr
sbb
cmp
ficom
jbe
int
add
or
sbb
mov
loopne
out
mov
and
loopne
xchg
sub
out
pop
sub
shr
push
lea
mov
sar
adc
mov
sbb
or
cmp
sbb
sub
mov
pusha
add
sbb
sub
pop
bound
sbb
ret
cld
xor
test
dec
js
adc
cwde
daa
pop
and
outs
stos
push
xchg
lock
lea
movs
sub
inc
popf
add
cwd
mov
sub
sbb
sahf
mov
push
pop
(bad)
push
pop
retf
fcmovnbe
int
cmp
test
mov
sbb
(bad)
rcr
xchg
cld
cmp
inc
jae
ja
xchg
iret
cmp
cli
sbb
dec
push
test
out
call
cmps
jne
scas
aad
add
je
lea
mov
call
jno
cmps
rcr
mov
jle
push
cmp
mov
mov
inc
adc
pusha
mov
push
jg
cmp
cmp
ret
push
and
in
mov
sub
cmp
je
cdq
jo
dec
and
stos
(bad)
cdq
push
xor
adc
lods
in
aas
sub
xor
or
inc
add
test
cmp
sbb
push
mov
push
stos
pop
xor
js
cdq
push
sub
cmp
std
xchg
mul
jmp
dec
jne
aad
inc
stos
jl
stos
not
add
cs
cmps
mov
push
test
inc
cmp
jbe
enter
sbb
jb
je
mov
leave
push
sbb
int3
dec
into
add
rol
retf
bound
and
fs
mov
mov
test
add
cld
jle
mov
sub
xor
sub
lea
mov
xchg
cmp
je
cmc
and
inc
ror
fwait
cmp
pop
jnp
fs
lea
lock
adc
mov
je
enter
hlt
mov
inc
jae
mov
dec
js
inc
push
sbb
inc
cmp
jbe
enter
cmps
pop
cmp
mov
sbb
xlat
inc
or
push
hlt
lock
add
fiadd
gs
dec
or
cmp
mov
mov
ror
pop
shl
ret
pop
and
sbb
or
test
fs
sub
xor
pop
add
movs
mov
mov
jo
mov
or
inc
or
push
jne
sub
aad
inc
push
mov
ins
iret
sbb
mov
js
push
into
int
inc
mov
push
jp
jne
fdiv
shr
popf
sbb
pop
push
sub
pop
js
mov
lea
push
sbb
dec
add
test
shr
fcom
lods
inc
lds
fld
jge
rcr
mov
fcom
loopne
push
je
push
push
imul
div
clc
out
pop
pusha
xor
adc
jmp
js
hlt
xchg
cmpps
fadd
loopne
arpl
aam
and
fdiv
pop
mov
shr
sub
inc
shl
sar
and
les
mov
in
push
sbb
cmp
es
inc
in
jnp
push
call
add
stc
ins
jl
loop
fld
(bad)
jne
jp
fstp
in
push
cs
xchg
or
ja
ret
and
inc
lock
ror
jl
inc
mov
bswap
lock
mov
shl
je
jb
push
cmp
mov
outs
in
inc
push
div
adc
outs
movs
fbld
push
repnz
mov
stos
les
loopne
stc
cmp
ss
(bad)
aam
test
icebp
cmps
sub
es
pusha
jo
xchg
hlt
repnz
outs
jo
test
mov
pop
or
jmp
xchg
adc
push
pop
imul
pop
xor
dec
sub
add
xor
push
push
mov
add
jmp
or
aaa
pop
add
loop
add
and
sub
fnstenv
aad
push
mov
cmp
jmp
cmp
shl
inc
and
in
push
sub
mov
jne
cmp
sbb
jne
lea
mov
push
xor
dec
lods
add
add
pop
mov
push
push
sub
repnz
inc
adc
(bad)
push
scas
inc
xchg
pop
ins
push
sub
movs
add
or
mov
call
lods
or
pop
push
call
mov
pop
push
idiv
sub
mov
fisttp
gs
loopne
add
outs
push
push
js
pop
sub
fsubr
mov
fimul
xor
in
sbb
repnz
cmp
xchg
mov
sub
dec
inc
push
in
xchg
(bad)
cs
cmps
push
arpl
lods
(bad)
lds
or
add
jb
pop
cmp
fcom
inc
ret
or
dec
jge
add
aaa
jmp
(bad)
xchg
ja
dec
xor
aaa
mov
xor
adc
sbb
gs
push
push
xor
test
in
dec
stos
fs
pop
add
ja
or
mov
and
add
xchg
dec
sub
or
mov
clc
pop
adc
aaa
adc
int3
sub
sar
fsub
std
(bad)
sbb
push
mov
mov
test
push
shr
cwde
jp
daa
movs
mov
jb
and
ja
pop
pop
and
adc
retf
clc
or
int3
push
inc
and
mov
inc
adc
into
loop
dec
mov
or
fs
pop
jns
add
nop
jmp
cmp
mov
cmp
fwait
cli
sub
sar
inc
jne
push
push
dec
and
pushf
push
retf
pop
sbb
das
xchg
into
sahf
cli
push
dec
push
add
mov
cwde
mov
dec
cmps
sbb
fst
fucom
add
adc
aaa
push
add
mov
cli
xor
xlat
(bad)
xor
add
mov
pop
cmovns
xchg
mov
test
jl
cmp
lock
mov
sub
xchg
dec
adc
jmp
cld
cmp
push
sbb
jne
pop
(bad)
fdivr
add
js
mov
mov
cmps
iret
inc
add
call
add
dec
xor
les
cmps
outs
in
jns
mov
out
ds
sub
add
test
mov
movs
les
mov
push
xor
in
pop
pop
js
popf
addr16
xchg
pop
iret
mov
lock
add
dec
and
outs
movs
jo
push
retf
xchg
mov
jmp
push
ds
add
cmps
inc
mov
push
cmp
inc
sbb
jne
(bad)
push
push
cmp
scas
push
dec
(bad)
mov
and
test
cs
or
jg
lahf
lods
cmp
jae
jbe
cmp
lock
cmp
test
fmul
push
add
mov
in
push
into
test
xor
sbb
inc
test
xchg
bound
test
jle
mov
mov
lds
mov
test
ds
pop
pop
call
jb
cmp
je
add
test
push
das
or
ins
push
test
push
loop
sub
jo
pop
sbb
sbb
arpl
lock
mov
xor
scas
pop
push
push
mov
mov
or
xor
pop
lods
mov
mov
sub
push
xchg
call
cs
cmps
mov
test
cmps
push
test
or
sbb
cli
ror
fldcw
imul
xchg
mov
mov
xor
push
xlat
jmp
fisttp
lea
hlt
leave
lock
es
push
lock
dec
pusha
adc
xor
adc
adc
adc
out
or
or
sbb
or
jp
mov
cld
cmp
arpl
js
inc
les
sub
or
adc
add
test
dec
aas
test
pop
dec
lods
pop
pusha
pop
es
adc
cdq
iret
xlat
dec
jbe
mov
loop
(bad)
sbb
xor
fsubr
ss
push
dec
clc
data16
outs
jmp
lea
jo
add
int3
dec
mov
cmp
mov
or
idiv
sbb
inc
fdivr
dec
xor
dec
or
inc
fmul
and
mov
mov
pop
add
add
pop
es
lea
enter
aas
xor
out
(bad)
retf
push
imul
add
xor
ror
dec
in
sbb
pusha
dec
sbb
int
jmp
jl
push
mov
cmp
in
xor
ror
add
(bad)
xchg
(bad)
jnp
out
adc
lods
jae
rol
inc
jmp
mov
imul
repnz
add
inc
rcr
test
ins
adc
jae
dec
jo
or
fdiv
mov
inc
add
xor
or
pop
push
cmp
mov
mov
lock
fmul
aaa
test
loopne
xchg
push
div
xor
add
iret
mov
outs
stos
or
dec
outs
push
les
add
mov
cmp
inc
dec
adc
fmul
daa
cmp
xor
xor
dec
clc
leave
test
pop
int
les
les
fwait
push
mov
test
mov
scas
sar
test
(bad)
xor
push
test
or
adc
test
mov
push
les
sar
loop
ror
(bad)
pop
int
int
xlat
je
cmp
sbb
pusha
push
mov
fisubr
inc
jo
push
adc
pop
and
pop
pop
cmp
or
inc
cmp
es
pop
rcr
jge
fnclex
fadd
adc
cmp
sahf
and
test
je
mov
push
test
or
retf
or
adc
adc
add
pop
xlat
stmxcsr
inc
das
adc
loopne
dec
cmp
or
push
hlt
sbb
leave
leave
leave
iret
or
imul
cld
pop
jmp
data16
je
or
ds
push
jns
or
or
add
add
bound
(bad)
or
and
out
push
or
xchg
cs
ins
xchg
mov
jnp
and
ud2
ins
mov
scas
loopne
mov
mov
push
push
push
scas
je
ja
js
into
out
das
cmp
jne
and
mov
ret
test
retf
xchg
aam
fbld
icebp
and
or
mov
ret
test
ror
cld
test
and
in
pop
into
into
into
xor
gs
into
inc
daa
aaa
js
retf
je
push
imul
retf
cmp
bnd
or
jae
jo
retf
loop
mov
sub
jb
into
shl
fisttp
or
cld
lock
imul
jns
(bad)
fist
add
outs
movs
sbb
add
jo
icebp
mov
and
pusha
fld
and
add
xchg
xchg
out
leave
leave
jecxz
sti
aaa
jp
inc
and
je
sub
ret
sar
sar
pop
mov
pusha
std
mov
and
retf
cmp
adc
add
or
mov
imul
hlt
adc
dec
cs
rcl
in
xchg
(bad)
push
rol
or
mov
jecxz
and
sbb
adc
adc
mov
movups
and
and
idiv
push
xlat
lock
add
pushf
xchg
retf
or
data16
pop
pop
fcomp
rcr
inc
test
jnp
pop
gs
rcl
push
dec
and
xchg
mov
and
(bad)
sub
mul
push
in
xor
es
inc
or
push
sbb
fadd
add
sbb
out
mov
or
sub
sub
pushf
sbb
push
lods
or
add
jmp
mov
push
push
lea
aas
in
pop
inc
fdivp
inc
adc
movs
rcl
es
pop
mov
add
ja
movs
and
or
rcr
xchg
cld
adc
dec
cld
test
je
mov
pop
dec
xor
(bad)
fdivr
cmp
xor
enter
scas
inc
jne
or
jnp
inc
or
mov
jl
add
adc
lods
mov
gs
cmc
xor
pop
jmp
adc
add
push
mov
xor
or
cwde
inc
ror
push
test
call
add
add
dec
call
les
mov
int3
adc
imul
pushf
pop
xor
and
lock
mov
pop
inc
bound
xor
dec
and
in
inc
(bad)
aas
test
cwde
js
cmp
jl
jmp
sbb
dec
cmp
xchg
push
mov
cmp
xor
push
fs
into
pop
sub
mov
or
push
dec
inc
jne
cmp
xor
cmp
jmp
fwait
push
or
jmp
sub
loopne
xchg
int
or
cdq
add
xchg
lea
and
sbb
fs
leave
adc
mov
das
xchg
and
repz
pop
mov
rol
test
sub
and
mov
ja
mov
test
mov
mov
ret
inc
xchg
push
fdiv
inc
and
and
adc
call
(bad)
out
xchg
mov
enter
jb
mov
inc
(bad)
mov
sub
sub
test
rol
mov
add
shl
dec
pop
stos
popf
arpl
fcom
inc
jmp
dec
sbb
lock
lea
or
ficom
mov
and
in
push
push
les
retf
imul
cmp
mov
popf
ins
gs
(bad)
in
adc
add
js
and
in
hlt
test
sub
bound
sub
adc
test
mov
cmp
push
mov
test
jmp
stc
or
sub
lods
rcr
add
pop
mov
adc
inc
cwde
mov
loope
sbb
lea
pushf
mov
iret
mov
dec
adc
test
cmp
enter
clc
out
push
xlat
pop
(bad)
out
jb
push
jb
fistp
mov
push
mov
push
(bad)
xchg
repnz
mov
mov
and
(bad)
les
dec
js
inc
cmp
loop
ret
mov
movs
jge
jle
and
call
or
mov
push
test
and
or
push
xchg
inc
into
xor
add
fs
jle
push
inc
xchg
pop
mov
add
dec
imul
and
sub
xchg
and
push
cmp
dec
adc
movs
std
jo
mov
nop
lea
ins
jb
adc
cli
ins
add
icebp
imul
sub
idiv
dec
enter
mov
nop
mov
leave
adc
mov
cmp
mov
in
or
xchg
xchg
pop
sbb
lea
ret
xchg
retf
jb
cmp
mov
dec
inc
mov
mov
xchg
sub
bound
movs
mov
test
clc
rcl
inc
(bad)
and
retf
out
adc
in
inc
adc
in
xchg
sahf
arpl
sub
sbb
icebp
iret
out
leave
pop
(bad)
fincstp
add
jns
mov
es
cmps
cli
mov
push
mov
add
rol
loope
add
aas
std
loop
mov
mov
jmp
jl
rcr
xchg
push
ficom
sub
ret
pop
ficom
shr
xor
shl
or
jae
and
push
xchg
or
push
dec
out
lea
dec
outs
sbb
mov
aaa
add
loope
daa
popf
mov
push
xor
mov
sbb
(bad)
fild
jb
clc
pop
mov
or
cmp
xchg
dec
sti
fwait
xchg
pop
cmp
mov
and
repz
shl
lods
sub
ins
sub
arpl
cmp
adc
inc
dec
lods
cwde
test
ja
js
inc
sub
mov
ror
push
jb
xchg
pop
fisttp
xlat
out
xor
mov
mov
sbb
inc
xchg
push
sbb
dec
mov
fadd
test
nop
loope
arpl
les
mov
jp
xor
and
or
jnp
clc
sbb
pop
nop
cli
or
hlt
outs
stc
add
dec
inc
push
dec
mov
adc
push
sbb
mov
cmps
inc
loop
mov
daa
jo
adc
add
std
mov
pusha
cld
pusha
cld
mov
pop
in
pusha
xor
movs
cdq
mov
out
pop
cmps
rol
in
cmp
and
push
jne
pop
sbb
pop
popa
dec
std
add
push
enter
test
outs
mov
(bad)
call
push
sbb
cmp
test
gs
mov
adc
mov
sbb
neg
and
jmp
jns
inc
loope
clc
jl
sar
pop
push
stc
test
faddp
clc
dec
xor
rol
dec
or
or
xchg
jmp
push
sar
cmp
ins
jmp
(bad)
push
rol
cld
mov
cmp
jb
icebp
mov
sar
clc
jb
out
sar
clc
sbb
scas
jl
push
inc
sub
rcl
inc
clc
hlt
push
cwde
mov
ins
mov
sub
movs
jno
fist
adc
pushf
clc
adc
sub
cmp
fisub
push
mov
(bad)
(bad)
add
test
aas
push
sub
(bad)
xor
push
(bad)
or
fmul
mov
cmp
mov
sub
jle
cmps
and
xlat
daa
cmps
mov
stos
cwde
neg
leave
lods
nop
mov
in
dec
mov
stos
nop
or
sub
(bad)
jns
cld
xor
sub
jno
fnsave
sbb
push
xor
pushf
(bad)
fnsave
les
fstp
fst
or
scas
jl
xor
xor
xchg
test
les
aad
ds
or
sub
cdq
in
(bad)
nop
sub
mov
add
inc
sub
pushf
xlat
pop
lea
imul
dec
movs
movs
nop
cdq
in
push
pushf
movs
movs
xor
(bad)
and
mov
xor
inc
ja
shr
retf
movs
jle
mov
mov
dec
rol
add
add
xor
xchg
cmp
dec
popa
mov
iret
xchg
xchg
(bad)
xor
pushf
clc
jecxz
push
dec
dec
test
jmp
aam
pop
xor
shl
jg
sub
mov
xor
mov
sub
fxam
dec
(bad)
adc
or
xor
mov
pop
mul
inc
ss
inc
(bad)
xor
loope
repz
cdq
test
inc
test
jae
sbb
pop
xchg
cmp
mov
adc
sbb
pop
add
inc
sbb
mov
shl
pop
xor
pop
xor
jmp
mov
push
test
adc
(bad)
nop
into
jo
clc
pop
add
xor
xadd
inc
and
jmp
and
js
aas
add
adc
xor
cs
sub
xchg
lea
or
ja
sub
dec
data16
mov
add
loopne
(bad)
cmp
fisttp
mov
mov
mov
pop
sub
mov
xor
inc
jge
xor
or
dec
mov
aam
aaa
or
div
xchg
aaa
dec
sbb
call
lahf
sahf
loope
add
(bad)
mov
popf
sub
dec
push
sub
fmul
jmp
push
rcl
jge
test
daa
cmp
into
sti
or
mov
pushf
mov
or
push
call
scas
add
push
sub
dec
ins
je
jmp
dec
push
or
push
(bad)
push
lahf
je
adc
pop
push
add
ins
push
push
fadd
push
inc
dec
push
aas
outs
bound
mov
xor
sub
rcl
movs
icebp
or
jno
and
cmp
dec
adc
dec
dec
push
test
xchg
test
cmp
mov
mov
arpl
mov
mov
loope
js
adc
xor
jmp
or
cmp
fdivr
pusha
leave
jo
push
push
and
xlat
sub
rcr
js
cmc
xchg
cmp
pop
adc
mov
lahf
add
or
jmp
jnp
(bad)
popf
fisttp
add
sbb
sbb
nop
xor
pop
mov
test
lock
inc
dec
loop
mov
xchg
and
push
or
pop
addr16
pop
jg
add
mov
xchg
jmp
mov
inc
in
pop
or
(bad)
jne
or
jecxz
mov
and
shl
xor
or
dec
mov
lds
add
mov
mov
or
adc
dec
dec
push
adc
jecxz
and
push
sbb
pop
xor
mov
push
loop
add
push
loop
adc
bswap
(bad)
or
mov
and
add
adc
movzx
out
mov
jmp
repnz
test
cmps
addr16
and
test
sub
xor
ret
adc
add
sub
loopne
int3
ret
cmp
pop
shl
dec
ja
sbb
pop
add
and
adc
loope
xchg
xchg
aam
(bad)
stc
cmp
pop
or
sti
push
mov
test
movs
jmp
(bad)
push
and
xor
or
pop
jo
outs
push
add
xchg
add
add
icebp
sahf
dec
ror
and
in
fs
or
add
or
in
or
xchg
and
fistp
and
push
(bad)
stc
test
ret
push
pusha
mov
mov
std
and
jnp
cdq
fcomp
div
xchg
adc
jne
mov
mov
cli
add
or
loopne
sbb
jp
and
or
sub
sbb
rcl
adc
push
or
add
add
xchg
mov
push
fmul
sbb
jge
push
pushf
dec
xor
popa
(bad)
dec
add
mov
sbb
test
pop
or
pop
and
mov
test
arpl
push
scas
and
rol
pusha
out
mov
loopne
sar
ja
or
push
and
xchg
mov
cdq
into
loope
ret
mov
jbe
out
adc
jns
fwait
or
imul
or
pop
pop
test
add
clc
add
xchg
push
call
or
push
fidiv
and
loopne
call
lock
adc
gs
daa
fs
mov
sbb
pop
ds
movs
jmp
mov
mov
jns
int3
fsubp
sbb
das
inc
enter
adc
add
mov
mov
stos
enter
add
loopne
xor
test
ror
sbb
dec
enter
ror
dec
repnz
mov
push
push
and
sar
je
imul
jbe
fmul
and
ss
sbb
lea
add
pop
push
cmp
jle
jge
pop
mov
xchg
(bad)
sbb
cmp
bnd
mov
les
jge
shr
push
cwde
(bad)
sahf
add
mov
fwait
fs
sub
or
lods
mov
jo
jnp
jne
sub
dec
scas
jb
push
or
jmp
adc
pop
jp
or
fwait
enter
xchg
and
adc
inc
xchg
add
fild
fcom
imul
inc
add
push
add
mov
dec
and
cmp
or
jg
jo
jno
cmps
add
add
mov
jmp
add
xchg
dec
(bad)
mov
sub
out
pop
mov
jmp
add
push
and
inc
je
push
lock
loope
cwde
je
xchg
push
adc
xchg
jp
dec
sti
cdq
add
sub
cmps
xchg
in
(bad)
and
in
xchg
push
adc
mov
inc
dec
add
mov
dec
(bad)
cwde
lods
mov
shl
dec
cld
jbe
dec
sub
or
ins
clc
push
das
test
cmp
fisttp
jmp
mov
dec
fidivr
adc
pop
hlt
fwait
sbb
(bad)
(bad)
movs
loopne
ror
out
fld1
fdivp
fstp
sbb
push
loopne
xchg
fldpi
xor
adc
not
or
test
inc
sahf
inc
cmp
sbb
lods
xchg
jne
retf
in
fs
mov
jmp
cli
adc
mov
inc
ret
xchg
test
int3
push
sbb
inc
add
das
pop
cmp
std
shr
bound
icebp
sub
cmp
js
out
and
inc
xchg
pop
push
mov
add
add
fst
sahf
pop
dec
je
cmps
adc
pop
sub
mov
ret
add
cmp
and
mov
fnstcw
data16
adc
jg
jg
inc
cmp
dec
int3
mov
daa
js
in
jg
ja
mov
adc
sub
cld
adc
test
push
jp
mov
dec
call
adc
dec
adc
test
cli
je
test
fxch
(bad)
cmps
mov
icebp
cmp
cmp
(bad)
mul
sar
push
dec
js
jl
jmp
test
(bad)
out
imul
add
lods
nop
fstp
or
add
test
mov
xlat
rol
lock
nop
pop
jb
add
lahf
push
sbb
sbb
mov
pop
movapd
aaa
out
push
enter
shl
jle
xor
mov
rcl
cli
rcl
retf
(bad)
or
jge
repz
or
jg
(bad)
dec
popa
lock
mov
xchg
ret
adc
(bad)
jnp
mov
cmp
xchg
aam
adc
lds
mov
aam
jns
loopne
pop
pop
add
mov
add
loopne
lahf
pop
shl
addsd
int
xor
fidivr
jae
ret
push
dec
sbb
adc
cmp
outs
es
push
jmp
aad
xchg
test
mov
inc
fwait
aam
fst
inc
fmul
mov
rcr
sbb
and
dec
add
ja
adc
retf
call
jg
mov
mov
mov
jmp
mov
and
pop
into
sar
mov
mov
pop
jo
mov
mov
xchg
je
cmp
enter
movs
fimul
or
adc
push
mov
rol
sbb
ss
sub
into
(bad)
sub
add
dec
jecxz
outs
enter
dec
sar
mov
inc
pusha
cmp
xchg
pushf
sbb
rcr
mov
pop
pop
repnz
cmp
jb
cmp
jne
pop
cmp
adc
mov
loopne
in
fdivr
pusha
jno
cmp
jb
(bad)
jl
pop
fcmovb
mov
out
xchg
push
aam
ja
lock
mov
cmp
or
loopne
sbb
xor
adc
aam
and
test
or
mov
loope
add
cmp
jae
mov
xlat
adc
sub
out
mov
sti
pop
adc
rcr
ss
cld
jb
in
shr
leave
(bad)
mov
mov
in
pop
push
cmp
out
xor
or
jle
add
test
adc
add
adc
add
pushf
xor
mov
push
xchg
icebp
cmp
rol
cmp
sbb
add
sbb
xor
sub
add
das
cmc
mov
lock
clc
jmp
rol
pop
sub
push
rol
push
loopne
xor
mov
mov
inc
mov
pop
stc
xlat
mov
sti
inc
jo
dec
jb
lea
push
add
and
mov
pop
mov
add
jb
jno
fnstcw
or
mov
cmp
or
push
pusha
nop
add
add
or
adc
mov
xchg
loop
or
mov
stos
jmp
cli
jge
inc
jo
aad
and
dec
xchg
cwde
daa
push
fild
sbb
xor
test
dec
adc
in
xlat
test
mov
pop
adc
mov
into
rol
and
call
jae
jae
jp
pxor
sbb
stos
retf
clc
pop
mov
push
int3
lea
pushf
xor
int
jo
lods
and
push
push
shl
and
call
cli
loopne
(bad)
ret
cmp
arpl
js
and
mov
inc
mov
retf
mov
sub
les
mov
inc
jae
mov
rcr
cmp
sub
add
push
(bad)
lods
or
(bad)
jne
jge
or
dec
mov
retf
jle
loope
sbb
xor
scas
(bad)
iret
dec
mov
popf
add
sbb
push
lea
or
mov
push
sub
sub
aam
push
and
jp
ret
unpcklps
sub
sub
adc
cs
pop
jmp
jecxz
mov
add
xor
stc
xor
fiadd
cld
lods
dec
dec
mov
loope
loopne
leave
inc
pop
(bad)
std
stc
shl
fs
fs
in
mov
xor
pop
adc
cmp
or
or
lds
push
sbb
mov
mov
or
adc
(bad)
push
cmp
lds
mov
add
cmp
sbb
xchg
xor
add
lock
pop
sub
cmp
or
int3
dec
mov
je
cmps
or
bound
fucomi
pop
xchg
sub
mov
mov
nop
xadd
mov
push
dec
dec
or
add
adc
xor
inc
and
add
push
xor
push
retf
outs
fld
jne
jge
movs
add
fisub
fcom
pushf
adc
pop
inc
call
sbb
sub
or
call
push
es
sbb
nop
mov
add
loopne
mov
pushf
sahf
cmc
xor
sub
sbb
sub
dec
mov
iret
add
and
pusha
or
rcl
and
sbb
pop
stc
pop
mov
and
(bad)
mov
dec
jmp
loopne
ret
adc
push
pusha
cmp
inc
pop
idiv
ror
inc
pusha
clc
aaa
ds
cmp
rcl
jb
jne
sbb
je
jnp
xor
retf
xchg
mov
sbb
adc
pusha
push
nop
cwde
add
cmp
push
retf
push
cmp
mov
or
xchg
aad
data16
lds
xor
(bad)
movs
xadd
int3
add
add
movs
and
pop
rcl
dec
inc
cmp
cmps
out
and
pop
cmps
xor
pop
cmp
push
adc
cmc
lods
push
xchg
push
adc
and
sti
js
sbb
xchg
cmp
pusha
test
inc
sub
aaa
das
xchg
adc
adc
add
adc
ins
xchg
or
arpl
push
aam
sub
aad
adc
ds
pop
adc
ja
jbe
dec
pop
cmc
add
cmps
pop
jl
pop
inc
dec
test
jns
jg
icebp
add
call
mov
jge
mov
mov
rcl
test
dec
adc
loopne
mov
addr16
pop
stos
mov
ins
int
or
push
inc
sub
add
push
inc
fidiv
add
xchg
shr
lock
and
pusha
push
sahf
add
push
ror
sub
shl
arpl
mov
adc
mov
scas
dec
rol
mov
cmp
and
push
test
fsub
in
adc
fs
inc
retf
push
cmp
pop
sub
jl
mov
adc
arpl
(bad)
add
popf
int
shl
repz
sbb
popw
aam
push
inc
sbb
adc
mov
sub
movs
or
pusha
icebp
jnp
push
mov
dec
out
je
mov
inc
test
mov
cmp
jb
cmp
jbe
push
jmp
add
xor
fcom
mov
push
jp
leave
push
dec
push
add
or
sub
push
dec
arpl
loopne
pop
mov
and
jo
mov
(bad)
loopne
sub
pop
aas
out
add
and
(bad)
scas
and
add
nop
push
and
cs
data16
push
push
(bad)
mov
sahf
lods
sub
leave
push
imul
dec
adc
pop
sbb
dec
je
push
jmp
sub
push
lods
in
mov
imul
add
cmc
ror
movs
add
arpl
xor
lock
add
retf
jmp
push
and
unpcklps
outs
mov
int
mov
xor
adc
inc
sbb
stos
shl
xor
push
cwde
pop
loopne
fnstcw
and
dec
fldenv
jmp
push
lock
(bad)
push
pop
hlt
repnz
clc
out
jne
(bad)
push
les
push
(bad)
movs
fcom
stc
std
sti
shr
loop
out
or
add
pusha
sub
cmp
shl
add
ror
nop
pop
add
cmp
cmp
dec
fcom
mov
enter
retf
repnz
push
sub
jo
cmc
push
stos
or
(bad)
out
xchg
cmps
jnp
cld
outs
repnz
es
sub
unpckhpd
retf
push
sbb
inc
sub
out
loopne
rcl
jo
mov
retf
pop
movzx
ss
enter
add
ja
sub
(bad)
(bad)
popa
sbb
ds
push
loope
test
retf
ret
ret
ficomp
out
(bad)
mov
pop
test
push
adc
sbb
inc
pop
sar
inc
test
add
clc
or
cmp
jp
mov
xor
adc
out
popf
dec
rcl
jecxz
xchg
sub
(bad)
jae
and
rcr
pop
mov
jb
cmc
(bad)
aaa
add
aas
mov
or
jne
add
mov
and
in
fldl2e
fmulp
(bad)
iret
stos
or
push
xor
test
std
pop
dec
test
jne
fscale
data16
cdq
fcmovu
mov
in
or
mov
not
cwde
loope
scas
cmp
push
or
paddusw
imul
add
fldln2
inc
push
lock
std
in
fnstsw
inc
jne
push
ret
inc
pop
in
scas
(bad)
int
or
jne
pop
in
or
fidivr
inc
mov
mov
or
loop
fldz
and
popa
xchg
xor
jmp
mov
pop
ja
or
out
pusha
and
rcpps
or
lea
cmp
or
jmp
in
aaa
xchg
cmp
fisttp
fcmovnu
fsub
daa
jbe
lock
fdivr
loopne
jne
lods
xchg
out
ins
push
fmul
je
add
loop
xor
cmc
out
mov
je
hlt
or
stos
or
jbe
mov
add
adc
mov
sbb
jmp
and
icebp
jg
cli
jne
mov
and
mov
mov
mov
pop
pop
sbb
or
mov
loopne
fwait
pop
add
or
rol
mov
and
xlat
ja
in
xor
sbb
add
push
fild
and
and
fisub
popa
push
iret
cmp
and
icebp
in
std
rol
mov
mov
or
in
popa
sub
add
les
call
cld
sub
adc
imul
movs
cwde
or
ret
fstp
mov
nop
imul
push
cwde
std
jne
or
scas
ret
mov
ins
dec
jmp
adc
fsub
jge
pop
es
not
or
movs
push
pusha
mov
pop
fld
or
and
push
mov
loope
loopne
rcr
ret
fstp
sti
fistp
and
fiadd
fldcw
test
loope
test
mov
pop
fmul
fisttp
clc
or
pop
add
add
mov
pusha
mov
mov
cmp
fwait
shld
loope
push
dec
push
pop
cmp
sub
or
add
mov
popf
or
scas
xchg
and
aad
fld
scas
adc
inc
cmp
dec
push
push
and
adc
or
ja
mov
and
int
in
int3
stc
stos
jmp
daa
je
xlat
pop
xchg
inc
push
mov
sbb
fcomip
cli
sbb
shr
stos
cld
cmp
(bad)
out
fcomp
pop
dec
mov
aad
out
and
jmp
push
hlt
in
test
retf
jbe
add
xchg
aas
(bad)
loopne
pusha
jmp
xchg
hlt
jmp
sbb
jmp
sub
xchg
dec
inc
inc
pop
adc
int3
jge
jle
lea
push
push
xchg
fist
or
clc
outs
jge
ins
add
xchg
or
sub
add
sub
in
pusha
movs
ror
bound
icebp
cli
pop
mov
sbb
(bad)
and
xchg
push
inc
rcr
cmps
add
sbb
add
xor
je
pop
fwait
loop
imul
xchg
sbb
pop
frstor
je
push
lea
in
push
dec
or
push
bound
pop
(bad)
dec
or
inc
clc
lahf
xchg
arpl
mov
jmp
das
adc
sub
xchg
xchg
and
push
xchg
inc
cs
or
and
je
in
mov
pop
cwde
faddp
jmp
push
add
sub
fdivr
fadd
sbb
dec
call
inc
jne
add
xor
mov
mov
jbe
mov
xor
xor
dec
cs
push
xor
jne
mov
and
fstp
shl
fs
pop
(bad)
loopne
sbb
mov
xchg
jmp
push
mov
dec
mov
pusha
cmp
dec
cmp
ja
push
push
pop
inc
arpl
scas
les
cs
fstp
push
fprem
push
or
aas
dec
fcomp
push
clc
jge
lock
or
inc
jp
push
jle
add
push
pop
mov
push
test
xchg
in
stos
add
sbb
mov
sub
sar
loopne
mov
mov
pushf
sbb
outs
popf
jmp
push
cdq
sub
test
xchg
and
ret
sbb
repnz
push
retf
retf
xor
nop
push
scas
fdivr
adc
enter
xlat
retf
test
push
jge
inc
(bad)
in
xlat
push
add
xor
dec
push
add
xlat
xlat
sbb
imul
push
sub
and
dec
mov
push
push
call
dec
cld
mov
inc
pop
sbb
inc
sub
sub
inc
outs
inc
or
jmp
je
aaa
xchg
hlt
mov
or
pusha
sahf
iret
and
rcr
inc
adc
add
push
pop
shl
mov
cmp
xlat
mov
bswap
clc
mov
add
pop
or
mov
xor
sbb
or
or
sub
sbb
outs
xchg
jb
or
je
xchg
test
push
clc
inc
mov
mov
outs
es
mov
je
dec
add
push
and
cmp
jb
cmp
repz
jecxz
add
out
(bad)
adc
(bad)
cmp
in
or
ror
adc
js
test
and
xchg
js
test
lock
in
nop
jne
and
leave
sahf
sub
and
sub
fsubr
jle
fnsave
inc
clc
fucompp
ret
dec
inc
add
aad
fmul
mov
stos
fabs
mov
adc
cmp
in
adc
add
mov
(bad)
push
(bad)
fisttp
rol
push
fimul
cmp
adc
xor
or
sahf
push
xor
fidiv
ror
mov
sub
lods
inc
adc
jge
imul
jmp
call
loope
jne
pop
inc
fnstcw
es
jp
enter
xchg
ins
aad
push
sahf
and
adc
and
cmp
add
rcr
push
pop
stos
inc
cmp
mov
push
add
inc
inc
xor
push
xor
bnd
fld
sub
and
add
push
mov
jb
ror
push
dec
adc
push
xor
data16
or
dec
shl
fnsave
aaa
add
cld
or
je
outs
mov
ss
(bad)
jmp
rcr
sub
sub
jecxz
add
pop
mov
shl
pop
or
cs
xchg
mov
sub
fist
push
js
and
push
push
ret
ins
or
loopne
push
rol
cld
pop
js
iret
loop
pop
add
icebp
aas
dec
cmp
mov
cmp
add
mov
or
cmps
es
add
cld
or
sub
add
test
mov
push
xlat
lock
or
fidivr
ss
and
(bad)
cdq
add
outs
add
fdiv
or
cmp
cmp
and
and
push
cmp
je
jo
test
sbb
call
or
lock
push
outs
pop
das
pop
sub
push
fs
sub
inc
add
jmp
mov
std
push
test
and
xor
add
test
cmp
add
add
es
mov
inc
mov
push
add
pop
cmp
or
push
sbb
fcomp
fmul
or
sub
fstp
sub
jmp
sub
fisttp
push
or
psrld
inc
inc
retf
add
mov
adc
ret
inc
xchg
add
in
call
add
push
jle
jecxz
retf
or
sub
add
into
push
inc
test
leave
inc
jmp
fsubrp
pop
push
aas
(bad)
fild
inc
pop
idiv
cmp
push
xchg
and
test
jge
push
lock
fldenv
call
mov
pop
cld
fidiv
adc
ins
hlt
into
fcmovu
adc
rcl
add
push
xchg
xor
dec
clc
mul
sbb
std
jnp
sahf
jp
sbb
mov
sub
mov
pop
fcomp
cmp
add
add
js
add
xchg
mov
add
and
xor
call
(bad)
xor
pop
add
imul
or
xchg
sub
add
and
enter
mov
mov
add
es
push
pop
js
mov
shl
inc
rcl
xor
sub
aam
or
or
shr
add
scas
jb
shl
add
and
and
mov
pop
outs
dec
or
mov
outs
or
xor
add
mov
cmp
mov
and
pop
or
xor
push
and
iret
mov
or
movs
pop
mov
and
mov
and
aam
out
and
jecxz
sbb
or
or
jmp
inc
(bad)
imul
loope
add
sub
mov
sub
pusha
and
(bad)
mov
fstp
cmp
pop
sbb
pusha
loope
add
jbe
shr
scas
inc
and
push
test
fstp
dec
fisubr
dec
push
inc
pusha
mov
add
push
cwde
js
sbb
not
pop
idiv
es
adc
sti
in
cmp
add
add
add
je
fbld
aaa
ret
sub
hlt
xor
and
jmp
jnp
adc
sub
pop
test
xchg
es
div
xor
and
dec
add
adc
add
inc
push
fstp
jmp
fisttp
sbb
outs
or
sbb
dec
aaa
mov
push
ja
lea
or
addr16
xor
ret
add
and
in
inc
outs
sbb
jne
mov
jns
mov
xor
and
stos
sbb
xchg
call
std
and
adc
mov
dec
pop
mov
jo
push
xchg
push
pop
jmp
imul
pop
mov
and
ret
and
and
inc
jo
fstp
push
push
push
data16
cmp
test
(bad)
jne
daa
test
aad
ret
mov
push
ja
in
out
pop
mov
pop
add
mov
shr
push
js
add
dec
das
je
cld
test
mov
cmp
add
sbb
mov
lea
lock
sbb
jge
xchg
pop
push
push
jmp
and
fdivr
sbb
retf
out
add
out
xor
add
out
(bad)
icebp
jecxz
or
cmp
repnz
loope
cs
fwait
and
mov
add
(bad)
xor
sbb
mov
int3
mov
mov
cdq
or
cmp
xchg
adc
loopne
clc
jg
retf
ret
cmp
cmp
adc
inc
or
test
dec
dec
pop
sar
or
jge
push
test
push
pop
cli
adc
mov
fwait
cmp
cmps
(bad)
in
icebp
pop
and
mov
mov
pop
inc
xor
add
test
les
inc
cmp
add
add
mov
(bad)
mov
(bad)
add
rol
push
jae
idiv
sub
push
mov
daa
inc
ja
loopne
inc
stos
push
mov
adc
cmp
and
add
and
jmp
fs
les
sbb
jo
or
je
ds
pop
add
push
clc
or
sub
shl
xchg
je
push
cmp
ds
adc
mov
inc
das
cmp
and
lock
add
add
push
sub
xchg
push
xor
jl
xchg
call
and
pop
or
nop
add
mov
popa
mov
jb
ins
loop
and
mov
dec
adc
pop
ss
cmp
sbb
add
stos
cmp
pop
fadd
sbb
mov
mov
in
push
sub
xor
pop
arpl
outs
and
xor
or
mov
cli
inc
mov
mov
push
test
cs
out
ja
add
jmp
push
pop
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
mul
jnp
jmp
jb
cmp
or
cmp
or
xor
and
cmp
sub
adc
add
test
sbb
dec
add
leave
shr
fisubr
sahf
out
or
shl
inc
push
in
mov
ror
in
adc
add
pop
jge
mov
stc
inc
jae
and
shld
shl
xchg
dec
inc
push
inc
rcl
out
xchg
shr
xor
in
xor
call
pusha
or
inc
in
dec
jge
inc
inc
repnz
fs
out
sub
adc
ss
or
mov
cmp
adc
sbb
out
ja
push
push
inc
and
fnstenv
fcomi
sbb
pop
sahf
xchg
xchg
adc
sbb
push
or
pop
mov
or
jbe
push
and
rol
sbb
dec
es
lahf
or
jmp
loope
iret
or
cmp
sub
sbb
adc
mov
push
jbe
dec
cwde
mov
push
push
fistp
sbb
jl
fcomi
jmp
mov
stos
xchg
adc
mov
add
mov
pusha
das
sbb
push
add
or
mov
pusha
or
add
lods
sub
add
ins
add
and
movs
in
int
add
jmp
pusha
sbb
mov
adc
push
je
lods
ins
cdq
cmp
sub
add
ror
mul
and
or
movs
(bad)
addr16
adc
jle
lds
jns
jmp
adc
push
popa
iret
popa
dec
dec
sub
or
jae
pop
adc
out
or
dec
inc
or
ja
push
movs
push
push
clc
push
dec
add
cvttsd2si
sbb
add
pop
mov
je
pop
add
sbb
cmps
jecxz
shl
fistp
cmp
dec
inc
adc
cmp
jmp
jo
fldcw
mov
xchg
push
jmp
xchg
sbb
fidiv
out
adc
ret
mov
and
inc
and
jg
nop
adc
call
enter
mov
mov
aam
cld
test
push
rcr
push
repnz
add
out
mov
add
inc
repz
jmp
and
push
nop
or
pop
push
jl
jns
cmps
pusha
push
lock
or
stos
sbb
sub
adc
dec
push
add
inc
out
imul
mov
add
in
mov
xor
mov
adc
outs
rcl
adc
sti
ins
cmp
cmp
add
aas
sub
adc
leave
shl
lea
mov
pop
xor
mov
add
cmp
add
jns
add
dec
add
xor
aas
add
enter
ss
xor
pop
pop
adc
test
sahf
sbb
add
jae
adc
or
sahf
push
push
pop
pop
inc
call
or
nop
or
or
nop
out
or
or
int
or
or
cmp
enter
cmp
enter
(bad)
cmova
test
add
and
or
jns
nop
adc
adc
cmps
nop
out
adc
or
imul
or
push
push
jb
jns
pop
pop
fild
fs
cmps
sbb
sbb
cmp
sbb
sbb
cdq
inc
sahf
and
sbb
xor
sbb
sbb
sbb
iret
sbb
and
adc
pop
aad
call
fld
icebp
add
cmp
jmp
add
ss
repz
cmps
loopne
fwait
mov
mov
jmp
push
in
mov
in
jne
lahf
in
sahf
and
push
in
out
sub
cmp
out
test
adc
call
enter
jmp
jmp
and
in
in
iret
adc
sbb
in
out
out
adc
sbb
out
out
nop
inc
call
or
icebp
icebp
repnz
nop
bnd
cmps
jb
add
hlt
je
push
hlt
sahf
hlt
and
cmp
cmc
cmc
in
inc
sahf
div
div
inc
call
inc
sahf
and
sahf
and
cmp
cli
sti
sti
movs
test
cld
cld
nop
out
sbb
std
std
out
jns
(bad)
(bad)
call
jne
retf
sbb
dec
and
sbb
jecxz
or
and
or
daa
out
jno
inc
push
imul
and
mov
cmps
nop
cmps
ror
push
imul
cmp
cmps
nop
cmps
ror
rcr
out
inc
jb
jne
stos
cmp
and
or
test
push
repz
or
push
inc
cmp
jns
or
div
sahf
dec
xlat
gs
idiv
div
inc
xor
dec
xchg
cli
cli
or
push
dec
int
sti
sti
sti
jb
jne
cld
stos
cmp
dec
add
(bad)
jle
out
dec
inc
inc
mov
sbb
in
push
push
inc
cli
xchg
push
mov
loop
xor
test
cmp
sub
jmp
sti
and
out
out
or
and
or
or
enter
jmp
in
in
repnz
in
in
mov
inc
enter
out
out
out
sbb
push
in
retf
adc
xor
icebp
icebp
pop
mov
repnz
cmp
sub
imul
div
div
inc
in
fnsave
xchg
lods
in
sbb
movs
test
cli
cli
mov
or
cli
sti
in
call
loopne
and
sub
popa
sbb
push
xor
or
loope
inc
jne
lock
loop
sub
inc
jb
push
dec
rcl
inc
(bad)
mul
in
jne
or
out
dec
add
or
dec
and
jmp
jmp
and
or
pushf
inc
enter
mov
or
in
out
(bad)
sahf
push
and
or
cdq
inc
inc
icebp
cmp
in
test
push
sub
pushf
inc
sahf
hlt
hlt
mov
lea
dec
add
test
clc
xor
stc
stc
cli
xor
test
cmp
sub
imul
mov
add
jle
cmps
jbe
shl
dec
arpl
cmp
mov
dec
fs
or
and
xor
lock
add
push
push
fdiv
inc
iret
add
add
lods
icebp
inc
scas
(bad)
dec
dec
push
mov
imul
inc
push
fadd
or
leave
je
jae
ds
cmp
fcmove
add
jmp
xchg
and
test
lea
cmps
bound
and
out
(bad)
pop
cli
xchg
push
(bad)
push
add
add
out
ins
fiadd
retf
add
iret
stc
mov
add
add
ins
sahf
int
mov
jge
fisub
fisttp
push
add
add
div
sti
scas
inc
out
jns
daa
(bad)
cld
ret
imul
mov
push
jne
pop
push
push
xchg
jno
push
ins
loop
dec
ja
fimul
and
add
dec
out
and
dec
repz
shl
sub
xor
bsf
inc
pusha
jmp
push
leave
jge
ins
leave
sahf
add
inc
inc
sar
push
xchg
shl
push
inc
fldenv
fcom
loope
push
jnp
xor
sub
dec
and
pop
dec
inc
ret
add
push
in
je
cmp
outs
push
arpl
cmp
cmp
out
sbb
ret
inc
loopne
jle
lock
lea
(bad)
loopne
shl
mov
fnclex
and
rol
mov
scas
mov
jne
cmp
adc
xor
push
adc
bsf
add
jmp
clc
ins
xchg
out
repnz
ss
lock
push
add
sbb
add
pop
fcom
cld
rcl
dec
and
in
fincstp
rol
(bad)
inc
test
je
fdiv
ret
shr
and
shl
fbstp
inc
and
sbb
pusha
loopne
push
and
(bad)
out
shr
xor
scas
ins
les
push
adc
push
mov
outs
sbb
cmp
jb
xor
adc
mov
jge
out
xor
pop
cwde
inc
ret
adc
in
fs
cmp
xor
ret
mov
ret
adc
mov
out
push
call
and
mov
fisttp
cwde
adc
jp
inc
and
xchg
loopne
mov
retf
aam
mov
sub
sub
lds
mov
pop
mov
shr
add
loop
shr
pop
inc
sbb
or
(bad)
jecxz
xchg
or
out
mov
or
adc
out
xchg
pop
or
add
adc
stos
loopne
inc
bound
aam
lock
loopne
mov
inc
clc
aas
arpl
popa
mov
add
add
cmp
or
scas
or
dec
loope
dec
mov
inc
or
sub
ror
jae
pop
psrlq
inc
dec
push
pusha
mov
dec
mov
ss
add
adc
adc
in
sahf
dec
adc
pop
lds
xor
lods
fimul
(bad)
cmps
call
or
retf
push
adc
mov
mov
pop
push
cmp
inc
icebp
xor
sar
mov
sub
(bad)
mov
or
je
cmp
lea
ror
aas
cmp
sub
inc
cli
js
xlat
bound
add
sbb
fcom
stc
jmp
xor
sbb
cdq
or
mov
sub
(bad)
fmul
jl
adc
mov
retf
xchg
inc
jo
pop
cmp
add
nop
dec
pop
sub
mov
cmps
mov
dec
jge
push
lea
lea
cmp
cs
call
jl
pop
fsub
sbb
adc
rol
cmp
fistp
sub
add
add
int3
dec
sbb
xor
xchg
and
push
dec
or
pop
addr16
push
(bad)
rcr
test
inc
jns
inc
adc
and
out
cmp
je
cmp
sub
push
jne
fs
mov
jmp
or
lock
(bad)
in
ins
ins
mov
pusha
mov
mov
xchg
add
clc
or
inc
dec
and
arpl
stos
dec
adc
adc
push
or
(bad)
fist
leave
add
and
sbb
cmp
div
cwde
push
sub
aaa
mov
pop
fimul
out
xor
or
inc
out
fsubrp
retf
and
cdq
add
adc
pop
push
scas
in
xor
fstp
call
push
sub
out
pop
cld
dec
or
aaa
jmp
or
lds
ret
sahf
inc
mul
xchg
inc
or
mov
ja
bound
mov
test
popa
pop
movs
push
pop
ins
fwait
sub
adc
adc
ins
iret
or
leave
imul
xchg
stos
(bad)
ins
jg
push
mov
or
sar
sub
sub
jg
add
(bad)
hlt
add
je
push
xor
pop
push
inc
mov
ret
mov
mov
or
enter
call
fadd
add
dec
jne
cdq
(bad)
mov
inc
fcom
xor
dec
rcl
mov
jne
sub
pop
lds
es
js
jmp
jl
ja
pop
lds
jmp
cmp
push
push
aas
aaa
enter
push
inc
sub
sbb
pusha
xor
jmp
cmps
add
add
sahf
shr
push
loope
inc
sbb
sub
cmp
dec
imul
je
ins
jns
aam
adc
outs
push
cs
add
cmp
push
in
inc
loope
ja
dec
fwait
ins
lds
dec
cmp
mov
cmp
xchg
and
and
inc
xchg
nop
pop
fild
inc
sbb
dec
rcr
add
std
cmp
inc
mov
(bad)
clc
mov
xchg
cmp
sub
das
sbb
or
adc
dec
cdq
in
or
sub
and
cmp
es
imul
and
aad
sbb
mov
push
pop
pop
in
jb
push
jmp
xor
mov
pop
and
xchg
push
sub
ins
add
ffreep
pop
adc
xchg
(bad)
pop
jge
push
popa
test
aam
mov
mov
pop
sub
mov
(bad)
aad
mov
push
inc
jecxz
popa
ret
test
add
inc
mov
data16
mov
inc
xlat
scas
popf
sbb
sub
dec
push
sahf
xor
jmp
cmp
jne
cmp
das
push
adc
fisttp
cmp
cmp
jne
add
push
push
data16
push
inc
add
pop
push
xor
cmp
jb
das
xor
cmp
sbb
fistp
pop
xlat
mov
adc
mov
rol
and
jge
fwait
and
leave
inc
rol
cmp
pop
enter
ss
(bad)
fist
in
jmp
das
addr16
jmp
stos
(bad)
jmp
add
add
sbb
mov
retf
jmp
add
test
sub
imul
jmp
add
mov
inc
pop
push
pop
cmp
add
push
imul
and
push
inc
adc
rcr
call
xor
cmp
fdiv
adc
cld
add
jns
xor
push
push
sub
rcl
arpl
inc
push
push
jl
inc
sbb
lea
dec
push
push
mov
aas
data16
cmp
fld
push
sub
or
or
mov
loopne
data16
fmul
loop
aam
push
or
add
mov
pusha
or
imul
fist
sub
adc
pop
mov
aam
pop
and
dec
imul
cmp
or
mov
test
cli
in
add
sar
mov
inc
stos
(bad)
cwde
out
add
outs
dec
cdq
mov
movs
into
or
test
cdq
test
push
enter
cs
cld
sti
in
cs
stc
clc
mov
adc
add
inc
sub
push
cld
inc
lock
je
mov
inc
lods
push
fild
je
retf
xchg
push
ss
std
cld
in
call
jecxz
sub
sbb
xchg
push
cmc
icebp
sub
sbb
dec
ror
sbb
add
pop
neg
pop
add
sbb
push
mov
pmuludq
popf
ret
test
mov
adc
daa
adc
inc
pop
xlat
jl
cli
push
mov
lods
ja
push
sbb
cmp
push
mov
adc
call
sbb
push
mov
adc
dec
add
retf
loopne
mov
daa
push
dec
push
mov
ss
(bad)
shr
stos
shr
add
pop
sub
shl
loop
lods
or
or
inc
mov
dec
sti
ror
dec
ds
inc
mov
in
sub
test
add
ins
cmp
test
or
loopne
or
inc
push
sar
or
pop
mov
movs
les
dec
retf
lods
xor
sbb
pop
ror
jmp
adc
cmp
ja
pop
xor
mov
hlt
stos
fstp
sti
add
lds
push
or
cli
add
push
shl
and
test
or
fmul
(bad)
cmp
or
cwde
and
ror
add
lock
ins
test
xchg
add
jp
ret
movs
daa
and
adc
push
into
add
clc
inc
adc
sbb
jb
ret
test
jle
sbb
or
loopne
inc
js
test
push
enter
je
inc
cs
and
inc
imul
and
ret
add
push
pop
jo
sbb
or
sbb
fcom
sbb
sbb
pusha
out
and
jne
jne
adc
repnz
mov
pop
push
fdivr
mov
jl
enter
mov
jmp
rcr
mov
mov
call
add
sbb
ret
dec
sbb
adc
adc
hlt
cmc
push
cmp
push
jo
mov
jnp
dec
sbb
sti
sub
or
mov
jns
loopne
sbb
movs
push
ror
out
sahf
(bad)
repz
stos
loopne
pop
outs
hlt
mov
mov
mov
sahf
out
and
or
push
imul
test
push
pop
lods
nop
adc
jns
jge
adc
add
add
es
xor
cmps
shr
mov
dec
or
sub
je
sub
jno
pop
cmp
jmp
mov
pop
lea
es
pop
fsub
mov
sub
mov
ds
jmp
mov
mov
cmp
fst
(bad)
aas
or
and
scas
movs
push
adc
xor
fisttp
call
cmps
adc
or
push
es
imul
xchg
or
jmp
jecxz
push
lea
inc
popf
push
aam
adc
xchg
sbb
es
push
loop
pop
stos
lea
add
cmp
mov
pop
mov
sahf
daa
std
ds
jb
bound
je
out
sub
or
and
and
jo
adc
cvtpi2ps
dec
mul
add
jb
cmp
dec
xor
adc
jmp
adc
xor
mov
inc
in
sbb
lds
and
movzx
fld
movs
ror
push
retf
hlt
pop
cmp
xor
loope
stc
mov
sahf
inc
mov
mov
popa
test
je
push
ins
jmp
inc
into
sub
inc
dec
and
call
jg
or
adc
imul
add
jge
jae
sub
add
jns
add
mov
push
cmps
add
cmps
pop
inc
loop
xchg
jge
xor
sti
xchg
rcr
add
in
sti
sbb
sub
jnp
push
pop
fisub
adc
and
cs
mov
add
sar
push
mov
xor
rcr
mov
xchg
in
xor
jmp
add
sub
xor
mov
push
cdq
fdivr
and
add
and
addr16
xchg
pop
(bad)
(bad)
cmp
jg
add
add
dec
bound
int
push
js
in
jne
sub
fmul
mov
push
jne
je
(bad)
push
jo
je
xchg
or
dec
mov
jl
xchg
jbe
push
push
ins
xchg
sbb
nop
mov
push
mov
dec
mov
mov
call
push
je
or
add
inc
cmp
clc
in
and
retf
inc
or
iret
leave
sar
xchg
and
dec
push
inc
add
xor
push
add
pusha
pop
mov
movs
rcr
dec
and
or
stos
cmp
xchg
sub
mov
push
lods
jnp
sbb
mov
mov
ins
ret
jecxz
and
cli
fadd
jl
lods
xor
xchg
add
mov
push
cld
mov
sbb
montmul
cmps
ret
xor
hlt
std
lods
cs
loop
or
cs
repz
mov
call
or
adc
xor
ds
sbb
and
add
mov
rcr
lea
ja
xor
xor
adc
and
jp
mov
test
sbb
ret
cmp
inc
and
push
ins
pop
aam
mov
sahf
jbe
jle
mov
stc
inc
cmp
xor
data16
mov
and
inc
fs
pop
movups
shl
nop
xchg
ret
or
arpl
ins
mov
add
and
or
mov
cwde
ficom
jmp
les
jno
dec
inc
push
cmps
inc
stos
gs
adc
mov
in
(bad)
inc
sbb
jnp
imul
fiadd
imul
repnz
lods
jb
pop
add
push
jmp
sub
sub
inc
xor
dec
lods
sbb
mov
int3
mov
hlt
into
cmp
mov
add
stos
cmp
mov
cld
push
push
inc
push
xchg
cmp
sti
sti
sbb
and
fbstp
ins
dec
je
adc
int3
add
and
add
push
dec
add
inc
mov
(bad)
or
or
popa
call
(bad)
dec
or
fwait
scas
jmp
sar
xchg
push
cdq
mov
shl
cmp
pop
sbb
sbb
add
jnp
lods
repnz
push
and
push
dec
push
pop
push
dec
jns
addr16
push
and
pop
adc
nop
push
jnp
add
adc
mov
push
pop
or
sub
pop
stos
xchg
call
sub
adc
ret
xor
in
jo
(bad)
cmp
add
push
or
adc
push
cwde
adc
mov
aam
and
cmp
xchg
add
cmp
cmp
adc
add
cmp
push
pop
aam
jp
mov
(bad)
aas
test
add
ja
retf
mov
shr
sbb
daa
pusha
pop
or
mov
(bad)
int3
or
push
or
shr
sti
movs
aas
or
retf
and
pop
inc
aad
dec
pop
jecxz
mov
je
sti
fdiv
mov
inc
cwde
xchg
rol
addr16
into
dec
sbb
mov
dec
push
or
bound
sbb
push
mov
push
ja
shl
push
dec
shl
ror
adc
and
ret
sub
retf
mov
(bad)
xchg
js
dec
jo
inc
sbb
and
dec
retf
ja
cmp
dec
sbb
nop
dec
or
ins
or
pop
or
push
in
inc
cdq
and
outs
or
push
push
bound
jne
lock
sub
adc
lock
lock
mov
ret
push
movs
add
gs
outs
outs
outs
aas
mov
je
or
je
ss
ds
jnp
mov
fs
hlt
cmp
sbb
or
test
jmp
sub
je
sbb
mov
mov
sub
pop
sbb
jmp
(bad)
(bad)
repz
lahf
div
repz
adc
repnz
cmp
xchg
xchg
addr16
enter
fwait
test
cmp
cmp
and
jmp
daa
ret
jo
mov
popa
icebp
mov
lods
pinsrw
test
and
adc
sub
mov
jmp
dec
sahf
mov
pop
and
dec
ds
js
and
cmp
in
mov
fimul
sub
mov
jg
stc
cmp
sub
push
jg
inc
adc
xlat
es
adc
sahf
jp
and
cmp
and
adc
jbe
inc
sbb
add
aas
aam
mov
ja
mov
test
out
adc
or
adc
or
cld
imul
in
(bad)
pusha
fsubr
adc
mov
stc
mov
idiv
sbb
add
pop
cmp
je
and
adc
sub
cmc
es
sbb
cdq
test
sbb
pushf
and
fndisi(8087
cmp
into
fist
push
sub
mov
cmp
push
sub
mov
and
cld
push
in
push
popf
nop
inc
jnp
lods
outs
inc
push
popf
movs
pop
xchg
mov
test
pop
inc
pop
mov
(bad)
mov
mov
popf
cmp
(bad)
int
sub
scas
add
sbb
inc
cmp
ss
cmp
jne
sbb
mov
ja
sbb
in
cmp
inc
aam
imul
add
mov
sbb
or
inc
(bad)
das
in
and
dec
cs
imul
mov
imul
adc
loope
popa
or
add
or
and
add
add
add
outs
add
xor
test
dec
or
loope
in
not
pop
xor
inc
add
mov
std
cmp
jbe
push
pop
cmp
mov
xor
sbb
mov
daa
add
mov
cmc
(bad)
sub
add
or
xchg
hlt
je
retf
enter
sub
outs
jp
push
xchg
xchg
jp
jne
fiadd
or
call
imul
ins
dec
sahf
and
mov
cmp
cmp
cmp
rcl
cmp
cmp
or
push
and
adc
ins
pop
inc
div
jo
or
xor
and
icebp
iret
jecxz
les
lock
and
push
mov
or
add
enter
out
in
popf
mov
mov
or
or
adc
test
je
sbb
into
mov
xchg
inc
push
(bad)
mov
ret
push
push
arpl
push
scas
sbb
add
inc
add
push
fwait
mov
popa
adc
mov
and
mov
add
leave
push
mov
rol
out
push
jae
dec
xchg
jne
movs
push
add
add
cmp
mov
out
jge
(bad)
rol
sar
mov
push
mov
xor
push
inc
sbb
xchg
xor
clc
push
imul
cmp
xor
adc
adc
push
test
adc
fwait
pop
inc
push
shr
mov
inc
aaa
sub
popf
push
cwde
shr
ret
ret
fcmovnb
repnz
ins
xor
inc
loope
iret
xor
dec
and
push
inc
mov
inc
add
iret
inc
add
(bad)
xchg
add
add
(bad)
rcr
push
add
sub
push
js
and
pop
sbb
ret
and
pop
mov
mov
xchg
and
mov
push
outs
push
xchg
addr16
stos
mov
sar
xchg
ret
cld
call
sahf
hlt
push
retf
or
adc
mov
sbb
add
hlt
adc
mov
mov
jnp
sub
and
ret
mov
sbb
or
clc
stos
dec
or
stos
or
mov
xor
pop
jnp
or
push
and
add
cmp
test
dec
mov
add
adc
sub
add
push
fisub
ins
dec
cmp
mov
and
pop
and
ss
es
add
dec
sbb
mov
shl
adc
shl
pushf
jb
cmp
in
js
adc
push
sbb
inc
fs
inc
imul
int3
sub
inc
ins
je
pusha
icebp
and
mul
test
inc
mov
or
je
fptan
fcom
cmp
xchg
mov
aam
pop
mov
inc
or
(bad)
push
add
mov
add
(bad)
js
inc
shl
xor
or
inc
sub
push
sub
sbb
imul
scas
aad
or
or
ror
cmp
ja
imul
sbb
dec
push
xor
inc
(bad)
sbb
enter
loopne
test
jo
rcl
add
adc
rol
push
bound
add
mov
jb
ja
test
jo
inc
stos
and
dec
mov
and
sbb
sahf
in
fimul
push
xlat
and
xchg
jo
mov
adc
sahf
scas
xor
out
add
push
dec
cmp
sub
je
pop
adc
lds
adc
js
outs
jl
fmul
and
jecxz
mov
push
dec
xchg
dec
movs
xchg
(bad)
retf
sub
xor
std
xor
outs
(bad)
pop
xor
inc
pop
sbb
or
ret
push
jecxz
cmp
jl
mov
icebp
lds
popa
add
jp
sbb
add
cmp
and
mov
dec
fist
(bad)
int
mov
push
por
pop
adc
adc
out
adc
pop
sbb
call
loop
and
sbb
mov
test
ins
iret
xchg
and
nop
in
sub
sub
push
and
cmp
call
dec
jo
and
mov
icebp
mov
and
xor
inc
xor
add
push
push
adc
dec
inc
retf
push
inc
push
xchg
cmp
sar
mov
mov
pop
mov
xor
xor
mov
and
push
clc
jo
fnsave
sbb
stos
inc
sub
adc
dec
push
shr
push
and
ds
ror
push
and
mov
mul
add
or
adc
inc
or
mov
inc
pusha
mov
adc
aad
ret
cmp
ja
iret
xor
jae
push
xchg
dec
sbb
inc
sbb
xchg
and
out
cmp
and
or
ds
scas
mov
or
cwde
call
pop
jns
jnp
add
jp
sbb
popa
cld
xor
popf
pop
popf
test
push
shl
mov
xchg
(bad)
sahf
push
adc
mov
scas
inc
mov
xor
mov
push
cli
out
dec
or
xor
mov
xor
push
(bad)
mov
ins
in
push
lds
repnz
lock
pop
mov
push
push
or
mov
shr
mov
enter
push
lock
or
test
mov
rcl
imul
hlt
sbb
xchg
icebp
pop
push
pop
call
xor
mov
mov
add
pop
xchg
fiadd
hlt
movs
cwde
sub
sar
adc
sub
shl
dec
int
cmp
mov
mov
shr
lds
shr
lock
mov
fcomp
add
shr
test
ret
ja
fadd
mov
mov
adc
je
push
push
mov
out
push
push
dec
cmp
jle
adc
(bad)
out
lds
mov
fisub
mov
add
adc
je
scas
mov
sbb
dec
fcmovne
imul
or
dec
add
jg
inc
syscall
loopne
or
ds
popa
dec
sub
or
add
movs
nop
cmp
daa
iret
ret
sbb
dec
dec
fs
ret
jne
fs
js
jmp
popa
daa
push
fadd
mov
loopne
and
push
jno
loopne
xor
xor
pop
add
rcl
xor
and
pop
repnz
imul
lods
dec
(bad)
daa
dec
dec
in
add
mov
clc
aaa
cmp
xor
rcl
jb
sub
push
test
inc
cs
cmp
or
add
bound
lods
out
ja
push
pusha
jbe
pop
push
jb
jge
and
xchg
or
mov
dec
js
dec
inc
ficomp
adc
mov
mov
dec
arpl
imul
pop
push
test
test
push
add
mov
or
ins
push
movs
jo
sbb
lods
sub
in
aas
jnp
jo
adc
pop
sub
sbb
cdq
repnz
mov
or
sub
aas
cmp
jne
mov
cmp
inc
push
mov
or
cmp
movs
xor
xor
out
mov
test
jb
xchg
lock
enter
call
sbb
sbb
or
and
stos
mov
loope
jmp
cli
jno
ror
sbb
inc
jb
mov
pushf
std
(bad)
dec
ins
push
jo
cmp
push
or
std
mov
std
push
inc
pop
loope
push
add
adc
lahf
sbb
stos
mov
lock
int3
xchg
inc
mov
sbb
ret
or
(bad)
jne
ror
inc
ins
inc
lods
jmp
pushf
push
pop
cmp
jne
cmp
jno
mov
add
test
mov
test
cmp
dec
dec
jl
(bad)
hlt
stc
stos
fisttp
mul
inc
adc
out
sbb
clc
js
jle
call
jne
das
inc
ins
pop
xor
fs
js
enter
and
jl
das
push
mov
or
or
shr
inc
or
mov
xor
cwde
(bad)
pusha
or
and
neg
push
push
dec
ins
daa
fist
pop
fwait
lock
add
pusha
and
in
bound
popa
shl
add
add
add
push
sbb
in
mov
inc
mov
ret
lock
push
sub
ror
and
popa
sub
adc
call
adc
and
jge
inc
cmp
popf
cmps
call
inc
push
sub
ret
mov
bswap
ss
mov
mov
xor
inc
add
mov
adc
jo
outs
adc
outs
or
pop
jb
call
or
mov
les
scas
inc
call
or
jecxz
popa
dec
pop
jo
jg
cmp
ret
(bad)
test
push
or
mov
ins
call
(bad)
lock
mov
mov
pop
push
xchg
or
adc
mov
gs
shl
sub
pop
xchg
or
jnp
loop
stc
mov
xchg
dec
aad
adc
cli
mov
loop
loop
or
clc
push
stos
push
mov
ja
jmp
and
push
jmp
fimul
add
dec
mov
iret
cwde
mov
retf
mov
outs
nop
dec
into
and
movs
cs
sub
xchg
int
xchg
sub
fimul
push
cmp
or
mov
inc
dec
jns
push
dec
add
fadd
test
xchg
xchg
jmp
rol
pop
xchg
and
ret
retf
or
sbb
adc
ret
loopne
jo
repz
dec
xor
mov
jge
adc
xchg
mov
push
iret
cdq
xor
mov
cmp
fcomp
call
ja
push
push
mov
push
(bad)
xor
mov
data16
push
push
lods
pop
xor
test
jne
jmp
push
add
xchg
sbb
out
jb
cmp
jb
shr
imul
inc
sub
xchg
inc
mov
neg
jb
push
inc
and
add
xor
rol
in
jns
and
pop
push
and
fstp
xchg
rol
or
movs
addr16
add
scas
add
mov
cmp
push
push
xor
xchg
sbb
or
hlt
add
add
dec
mov
add
cs
cli
retf
clc
in
sbb
test
icebp
aam
xlat
dec
pop
xor
mov
adc
movs
mov
cmp
loop
dec
adc
ficom
lock
ret
clc
cdq
pusha
cwde
xor
mov
add
jne
adc
sub
je
inc
and
adc
push
adc
std
int3
add
in
push
ror
or
and
mov
scas
shl
cwde
std
loope
daa
(bad)
inc
sub
gs
inc
ret
xchg
and
mov
cmp
ins
sbb
dec
js
or
or
pusha
or
mov
add
cmp
pop
jno
mov
out
inc
and
and
pop
(bad)
adc
mov
popf
in
xor
inc
push
ret
push
xor
mov
add
jo
nop
pop
push
xchg
test
mov
icebp
fld
or
sbb
push
lahf
add
je
or
push
and
lock
cld
or
dec
mov
and
jmp
inc
mov
and
iret
mov
sub
xchg
jne
mov
jno
push
ror
cmp
mov
mov
rol
xchg
hlt
lds
or
ret
jmp
sbb
cmp
inc
sbb
in
loopne
outs
sar
xor
xchg
sub
or
enter
adc
and
push
sbb
fsub
clc
jle
pusha
sub
mov
popf
shl
jmp
cs
loopne
test
pop
add
xchg
out
sbb
add
sbb
push
jne
push
push
je
inc
or
xchg
out
xor
or
push
mov
push
jg
es
mov
mov
je
adc
rcr
cmp
je
mov
push
dec
adc
adc
loopne
cmp
call
mov
inc
sub
enter
(bad)
mov
dec
ins
push
aaa
sbb
inc
cmp
add
jnp
jno
adc
or
xor
push
jg
mov
shl
dec
sbb
je
je
fdivr
out
fptan
jns
arpl
clc
inc
push
ins
push
pop
jl
sbb
xor
and
cs
jmp
jno
sub
jno
jno
fst
dec
es
and
lods
jb
cmp
inc
inc
in
in
inc
cmp
and
ror
clc
leave
dec
push
push
pop
dec
mov
add
push
hlt
dec
in
sbb
add
add
push
sahf
pop
push
xlat
aaa
cld
push
clc
sub
inc
clc
scas
and
jno
sub
pop
push
push
and
and
pop
loope
sub
add
test
jp
or
ret
bound
xor
jmp
out
sbb
jg
rol
sti
dec
and
push
push
cmp
inc
jne
push
ja
test
cmps
fisubr
adc
test
arpl
arpl
dec
adc
or
pop
shr
ins
je
sub
add
xlat
(bad)
into
push
lds
out
push
(bad)
jl
stos
adc
inc
scas
pop
cmp
je
iret
nop
jo
xchg
std
addr16
clc
push
test
(bad)
jmp
loop
inc
(bad)
imul
push
push
xchg
adc
aaa
push
mov
jle
fs
push
adc
pop
adc
outs
imul
pop
xor
cmp
push
nop
retf
jmp
cmp
retf
fist
sub
clc
das
cmp
int
sahf
es
test
mov
cmc
ror
xor
(bad)
mov
movs
xchg
add
lea
mov
adc
shl
push
jg
and
jbe
clc
and
cmp
adc
sti
mov
push
ret
les
and
std
inc
add
aam
fadd
mov
push
sbb
clc
push
mov
bound
in
shl
xchg
mov
xor
adc
xor
xchg
mov
xchg
inc
ss
mov
cmp
dec
dec
inc
dec
icebp
inc
lods
ds
(bad)
cmp
adc
pop
xchg
push
pop
les
dec
pop
gs
push
mov
jbe
mov
ja
inc
push
rcl
sub
push
push
cmps
push
lock
xor
sub
sahf
jb
ja
add
shr
xchg
js
mov
loope
jae
repnz
jle
imul
mov
test
mov
dec
std
adc
stos
lock
retf
xchg
inc
enter
push
ret
fisubr
adc
adc
sbb
dec
and
shl
cmp
fsub
add
dec
lock
or
stos
sub
adc
sbb
fbstp
pop
nop
push
lds
fmul
sbb
push
mov
push
add
inc
adc
js
call
add
pushf
imul
std
mov
hlt
add
push
clc
mov
hlt
or
push
outs
xchg
mov
pop
add
and
push
pop
mov
out
inc
sbb
sbb
or
add
(bad)
out
cmp
(bad)
push
adc
xor
call
out
jle
sbb
pop
and
adc
cmps
pop
or
out
(bad)
cmc
nop
mov
fldcw
push
dec
daa
out
xchg
xchg
xchg
pop
sub
pop
inc
adc
sar
imul
in
sbb
sbb
and
call
rcr
sbb
pop
push
sbb
xor
inc
ret
arpl
xor
sub
adc
dec
inc
sub
dec
out
cs
in
pop
mov
daa
xchg
adc
adc
jmp
mov
xchg
fimul
or
sbb
push
jo
add
xor
clc
bound
cmp
mov
mov
stos
fisttp
add
sub
inc
adc
inc
imul
or
push
push
adc
daa
in
xor
fld
ds
pop
mov
fistp
sbb
or
cld
add
shl
rol
push
push
sbb
or
je
add
add
rol
icebp
mov
mov
ror
adc
idiv
ret
xchg
lahf
jnp
fadd
dec
aam
add
ss
xchg
push
cmps
out
push
fwait
sbb
mov
add
sub
push
cwde
nop
cmovo
aaa
or
pusha
popa
sub
dec
fadd
or
rol
cmp
push
lock
push
xchg
lea
loop
ficomp
shl
cld
xor
adc
and
sbb
ja
and
lds
ins
or
jle
fild
mov
add
mov
mov
xor
loope
ins
(bad)
or
outs
(bad)
push
mov
shr
mov
bound
lds
sub
sbb
sub
popa
sbb
xchg
retf
pop
and
xor
(bad)
and
inc
ja
push
shr
jmp
jl
sub
pop
mov
adc
adc
mov
test
jo
cmp
xor
pop
push
sbb
adc
jmp
push
or
pop
mov
sub
bound
add
in
push
jmp
or
aaa
jbe
test
or
or
sub
pusha
mov
(bad)
pop
jbe
imul
clc
push
push
jo
mov
add
sub
push
aam
aad
ins
adc
ficomp
push
or
push
pop
into
mov
pop
jno
push
adc
adc
scas
mov
test
(bad)
idiv
mov
mov
and
mov
rcl
mov
add
pop
mov
push
cmps
repnz
ret
add
movs
xchg
fiadd
jno
test
add
and
dec
loope
mov
mov
or
adc
add
push
cmp
jns
inc
dec
mov
dec
je
ds
imul
scas
sbb
ds
sbb
push
lahf
mov
jo
mov
inc
add
lahf
pop
add
and
pushf
cmp
test
push
loopne
dec
mov
movhps
dec
adc
mov
dec
cmp
call
sbb
js
cmova
mov
or
sub
lods
jne
(bad)
or
xor
xor
xchg
call
neg
inc
call
add
mov
mov
outs
inc
push
inc
call
fdivr
jl
push
pop
jmp
add
xor
imul
inc
cld
push
shl
dec
popf
inc
jecxz
dec
jno
add
mov
mov
push
rol
pop
xor
mov
ja
push
les
add
or
dec
shl
xor
dec
jl
jp
xchg
enter
sub
dec
add
or
push
push
(bad)
and
into
dec
nop
fdiv
push
xor
int
cwde
xchg
in
lods
lahf
cmp
fist
jae
sbb
sub
mov
test
mov
add
cli
push
popa
test
dec
push
loope
sbb
dec
fsubr
mov
sbb
push
mov
adc
dec
test
dec
push
mov
adc
and
add
and
mov
or
inc
icebp
mov
pop
adc
popa
pop
add
add
pushf
lea
pop
sub
loope
inc
lock
dec
lods
mov
sub
sub
es
scas
and
push
in
adc
loop
push
sub
jnp
mov
cmp
inc
(bad)
push
push
pop
repnz
xor
cmp
les
cli
fidiv
rol
fidivr
add
inc
sub
dec
ins
mov
(bad)
sbb
xor
test
cmp
push
inc
mov
inc
dec
xchg
mov
pop
int
fmul
inc
out
or
sbb
cmp
pusha
xchg
inc
loop
and
sub
mov
jecxz
pusha
dec
add
lea
sbb
cmp
cmp
inc
dec
push
push
mov
adc
dec
in
mov
repz
jne
movs
fs
inc
push
or
mov
jb
jmp
inc
or
gs
xor
bound
fwait
xor
gs
and
jg
int3
push
jmp
fisttp
(bad)
loope
dec
xor
mov
out
sbb
mov
push
shl
add
mov
jmp
sub
inc
add
inc
cli
into
or
cmp
xchg
cmp
jo
das
inc
add
std
jmp
sub
add
mov
xchg
inc
or
ror
outs
push
repnz
xchg
lock
xor
push
push
and
xor
popf
addr16
mov
pop
out
add
mov
jo
outs
nop
in
inc
mov
js
xchg
push
fs
add
jno
loopne
ret
cmp
xor
adc
and
loop
push
rcr
dec
cmp
imul
xchg
jl
movs
push
mov
fcom
xor
sbb
sub
inc
adc
inc
mov
jl
dec
aaa
sti
jnp
(bad)
rol
inc
add
mov
push
adc
and
mov
popf
mov
cmp
mov
enter
inc
sbb
idiv
add
push
or
dec
sbb
push
jmp
push
fsub
test
arpl
ror
xor
ret
cmp
jo
popa
movs
pusha
and
cmp
mov
mov
into
mov
sbb
mov
es
es
xor
and
add
sbb
pusha
adc
jns
mov
mov
loop
int3
test
xchg
pop
mov
push
xor
pushf
or
mov
pop
call
imul
mov
push
dec
mul
repz
inc
sub
lock
dec
call
icebp
push
add
and
sub
sub
jo
ins
inc
imul
add
or
sub
lea
out
sub
inc
push
sbb
mov
xor
loopne
test
mov
xor
enter
xor
sub
addr16
aaa
dec
sbb
fiadd
and
je
bound
push
fisttp
add
loope
js
cmp
dec
xor
clc
enter
sub
xchg
mov
mov
fld
mov
mov
cdq
and
add
(bad)
xor
cmp
pop
loop
jge
pusha
sub
mov
push
ficomp
stc
mov
dec
mov
ret
sub
or
loopne
iret
cmp
ss
sbb
mov
add
cmp
xor
push
push
push
adc
pop
add
mov
cmp
test
push
jp
cmps
xchg
add
or
mov
fcomp
daa
mov
xor
push
mov
or
aad
ds
cld
inc
or
enter
add
pop
xchg
xor
cmp
jne
les
rcr
sbb
mov
pop
pop
ror
mov
mov
pop
pop
sbb
out
pop
and
fcmove
or
mov
cmps
lea
push
cmp
fistp
xor
or
mov
or
cmp
pop
shl
scas
xchg
dec
ins
call
rol
dec
sbb
adc
movs
xchg
and
xor
adc
push
lock
(bad)
sbb
add
cmp
mov
push
pop
lock
clc
cmp
xchg
shr
lock
sbb
ins
push
or
mov
sub
add
sbb
arpl
call
push
(bad)
pop
pop
inc
push
ins
bound
clc
or
dec
mov
sbb
or
mov
push
adc
jo
sahf
ror
mov
dec
push
lock
adc
pushf
dec
repz
sub
inc
in
jmp
nop
jo
pop
mov
pop
pop
add
lea
add
js
(bad)
mov
inc
mov
scas
jnp
ds
sub
mov
jle
jae
retf
xlat
sub
push
sbb
sbb
std
adc
inc
sbb
cmps
push
push
xor
es
popa
fwait
cdq
lahf
push
les
fnstcw
scas
mov
adc
add
shl
imul
cmps
mov
into
lea
or
sbb
out
inc
sub
adc
fcmovb
inc
and
jmp
enter
in
mov
cmp
dec
mov
sbb
or
sub
xor
popa
leave
or
fnstenv
add
or
or
ins
inc
sub
sahf
push
shl
ins
repz
xchg
ret
add
sbb
push
and
adc
leave
pop
sbb
dec
loopne
xchg
cmp
shl
lods
jbe
pop
push
or
pop
jo
dec
icebp
outs
lea
xor
xchg
mov
mov
test
cmp
gs
test
sar
and
jae
jp
mov
add
je
fldenv
loopne
cmp
pusha
test
adc
pushf
jns
push
adc
pop
mov
nop
pop
inc
dec
push
test
and
push
(bad)
cmps
add
sbb
xchg
test
mov
dec
pop
sbb
call
rcr
cmp
xlat
adc
or
loopne
ret
mov
int
sbb
fst
aad
push
cwde
cld
push
sub
mov
push
out
jmp
and
daa
shl
dec
jne
pop
pop
xchg
rcl
fsub
pop
xchg
pop
or
imul
mov
add
cmp
push
ja
outs
adc
xchg
cmp
pop
outs
daa
mov
bound
mov
jae
test
push
cmp
push
mov
fst
pushf
cmp
or
jg
stos
stos
pop
adc
mov
loope
xchg
enter
out
jae
pop
cmp
and
pop
fcmove
mov
ret
fnstsw
adc
adc
mov
pop
mov
loopne
add
mov
test
xor
cmp
add
jge
leave
sbb
jmp
data16
xlat
cmp
cmp
xor
or
ficomp
sbb
or
mov
je
rol
jle
push
out
or
add
push
test
and
dec
clc
xor
jl
mov
push
or
retf
in
aaa
push
and
cli
and
mov
mov
cmp
cmps
clc
nop
or
shr
in
cmc
sbb
xor
cmp
pop
dec
je
or
movs
fimul
hlt
push
mov
mov
(bad)
jl
and
sub
or
or
pop
ret
adc
adc
inc
mov
mov
or
not
pop
and
sub
xchg
push
mov
pop
ss
mov
outs
mov
sbb
and
pusha
push
jmp
adc
jmp
bound
sub
push
push
sub
sahf
je
and
jecxz
xchg
cli
push
cmp
adc
push
push
pop
dec
repnz
rcl
inc
dec
dec
jb
test
xchg
(bad)
into
adc
nop
xchg
mov
(bad)
add
or
popa
jo
push
pusha
nop
inc
xchg
lock
cmp
inc
sbb
not
je
hlt
xchg
imul
xor
jo
aas
imul
mov
nop
mov
adc
push
(bad)
mov
cwde
std
rep
xchg
mov
jno
ror
neg
pop
je
dec
loop
dec
sub
mov
ins
aam
inc
shr
jnp
add
push
cwde
dec
jnp
aam
add
adc
mov
jne
or
in
cmc
nop
cmps
dec
push
jnp
mov
sbb
mov
jnp
push
push
mov
cmp
cmps
add
call
test
test
int3
xchg
sub
out
pop
scas
stc
xchg
mov
mov
fnsave
xchg
inc
dec
cmp
add
cdq
cmp
inc
adc
in
pop
pusha
push
push
hlt
xor
daa
pusha
pop
lea
fwait
movs
sbb
pop
push
push
ds
jb
sahf
jmp
movs
dec
int3
sub
xor
jb
sbb
mov
xlat
push
push
mov
loopne
or
sbb
adc
push
cs
outs
or
sub
cmps
dec
cmp
mov
push
push
cs
out
mov
cmp
inc
xchg
dec
in
pop
push
mov
push
pop
adc
retf
pop
pusha
fs
call
add
or
lds
add
jns
icebp
dec
shl
(bad)
nop
out
or
js
adc
dec
mov
faddp
cdq
and
and
inc
je
aas
lea
sar
inc
shl
add
leave
ins
xor
mov
inc
aas
inc
pop
inc
mov
mov
xor
mov
cmp
sub
sbb
mov
xlat
mov
rol
ins
popa
pop
imul
push
push
jge
ret
(bad)
pop
cwde
dec
dec
lds
adc
es
mov
test
jns
add
shl
dec
and
sahf
inc
call
int
and
adc
mov
sub
pusha
or
test
push
ins
pushf
sub
dec
add
test
mov
push
cmp
daa
mov
shl
push
fs
in
jmp
mov
lods
das
mov
rcl
movs
xchg
cmp
sbb
xchg
dec
adc
or
add
push
jmp
ja
jp
(bad)
test
inc
lea
xor
or
adc
test
movs
je
test
push
addr16
push
sbb
js
push
adc
shl
jmp
out
mov
or
loope
ffree
or
fmul
xor
rcr
xor
xor
data16
mov
mov
bound
mov
cmp
dec
or
or
sbb
push
in
sbb
rcr
outs
cli
mov
jne
es
mov
cmp
popa
sbb
enter
mov
push
das
cs
cli
int
jecxz
inc
loop
mov
js
cmp
xchg
push
icebp
cmp
cwde
inc
push
lock
sub
add
cli
and
cmp
or
aas
mov
push
pop
push
aam
clc
inc
and
mov
test
sub
cmp
push
or
push
ins
cmp
dec
or
test
pop
adc
jo
xor
adc
mov
in
das
push
add
mov
fcom
sbb
mov
fwait
push
cwde
sub
lods
jle
xchg
xchg
mov
or
shr
enter
mov
pop
add
push
ja
fsub
shr
imul
inc
mov
aam
sub
xchg
mov
sub
rol
pop
test
dec
xchg
test
in
sbb
lea
retf
cmp
and
push
fwait
mov
and
js
in
or
xchg
in
hlt
xor
pop
les
cmp
cmp
nop
das
cld
fistp
loop
(bad)
jp
fucomip
adc
mov
bound
mov
aam
xor
psubsw
outs
adc
dec
adc
and
in
imul
xor
not
inc
cwde
test
retf
push
push
rcl
or
jno
mov
cmp
inc
adc
and
push
sysenter
add
push
arpl
add
loopne
push
xor
loop
dec
std
and
es
test
sub
push
pop
xchg
jl
push
loope
pop
jne
mov
sub
test
mov
call
xchg
cmp
mov
repnz
fnsave
in
cld
add
test
mov
sbb
mov
movs
scas
dec
in
dec
jl
push
jnp
pop
je
mov
pop
arpl
iret
fld
jp
nop
shl
ss
into
jo
scas
test
jmp
xchg
mov
mov
pop
sub
mov
inc
lea
enter
pop
in
or
fsubr
push
jbe
arpl
inc
dec
ror
int3
pop
test
pf2id
or
inc
dec
and
fld
push
dec
xchg
and
aam
int3
fisubr
js
adc
inc
mov
cs
cs
inc
shl
lods
cs
cmp
bnd
imul
mov
sbb
mov
adc
inc
lock
jl
mov
frstor
rep
xchg
ins
mov
sar
pop
jns
jae
outs
push
ret
xchg
or
push
cwde
push
js
fist
or
push
ficomp
retf
ret
mov
sbb
jne
and
int
test
dec
clc
xor
pop
je
outs
ret
(bad)
or
mov
jmp
mov
push
cmp
mov
ds
mov
xchg
jmp
push
jl
and
mov
pop
(bad)
lods
rol
and
mov
rcr
push
push
dec
pop
jne
xchg
fdivr
xchg
fdivr
cli
pop
push
ja
mov
mov
ss
xor
lods
sub
jno
xchg
mov
adc
sbb
(bad)
sar
ds
loope
mov
mov
jl
or
ss
mov
mov
cmp
bound
shl
add
cwde
or
add
and
mov
xchg
test
sbb
push
and
pop
or
push
pop
adc
je
push
mov
js
je
push
sub
mov
lds
pusha
call
fsub
inc
add
sti
adc
enter
and
popf
mov
fxch
das
in
sbb
or
or
clc
push
jmp
dec
sti
ror
jne
hlt
pop
popf
bnd
(bad)
cmp
push
push
aaa
adc
cmp
xor
push
adc
push
or
xor
adc
or
push
maskmovq
div
or
sbb
push
adc
ja
pop
(bad)
xchg
retf
add
clc
ds
mov
or
inc
xchg
sbb
and
nop
int3
leave
jb
mov
(bad)
repz
mov
or
les
je
adc
jae
dec
mov
cwde
ret
and
push
sti
add
int
lea
arpl
mov
add
add
loope
or
mov
add
les
imul
and
add
mov
add
mov
cmp
jbe
movzx
sbb
stc
sub
inc
jbe
and
imul
int
jge
pop
jbe
retf
pop
add
stos
fadd
jmp
add
add
dec
sbb
jo
in
loopne
es
jmp
add
mov
fnstsw
je
dec
add
faddp
clc
inc
cmp
add
mov
leave
add
add
adc
add
ins
dec
dec
cs
loope
inc
movs
fistp
imul
shr
iret
xor
jnp
jmp
cmp
xchg
pop
xchg
lods
add
or
xchg
inc
jb
out
in
outs
xchg
push
rcl
lods
add
mov
inc
dec
inc
je
and
add
and
mov
add
in
pop
sbb
out
loopne
xchg
sbb
call
imul
inc
or
sbb
in
add
adc
ja
test
push
xchg
inc
enter
ficom
rcl
pop
mov
jae
in
mov
mov
dec
or
inc
or
or
sub
mov
jmp
or
and
iret
inc
lea
cmp
jb
jne
fidiv
add
mov
test
fimul
clc
add
inc
push
inc
add
xchg
sub
sbb
jae
sub
repz
or
mov
push
mov
es
mov
push
xor
test
inc
add
bnd
test
adc
mov
sub
add
mov
movsx
inc
sbb
push
add
mov
ds
loop
dec
push
push
mov
dec
hlt
ret
popf
dec
inc
mov
nop
mov
aad
and
jle
push
xchg
or
ret
and
rcl
sbb
or
ret
into
inc
inc
sti
adc
mov
sub
pop
daa
repnz
mov
mov
imul
and
int
sbb
push
add
ret
add
add
rol
shl
ret
add
cmp
icebp
sar
cmps
mov
mov
sub
and
add
jnp
dec
cmp
cmp
add
ror
add
and
mov
retf
(bad)
lock
(bad)
sub
fld
retf
nop
(bad)
jecxz
fnstenv
add
cmp
fcmove
retf
setle
mov
imul
adc
test
cmp
lea
mov
mov
repnz
add
dec
sahf
pop
and
cwde
sub
mov
push
ret
repnz
(bad)
scas
test
iret
dec
add
ror
divps
xor
xlat
lds
xlat
pop
mov
fst
and
popa
adc
ds
fcomip
push
adc
xor
mov
scas
xchg
jno
data16
xchg
ret
push
mov
out
mov
not
out
loop
pop
jbe
test
fs
bnd
mov
cmps
test
es
rol
repz
mov
out
in
dec
(bad)
and
mov
pop
ror
or
xlat
or
fcomp
jl
mov
add
pusha
ret
lock
mov
and
ss
inc
mov
rol
or
scas
aad
or
clc
ret
push
pop
push
fs
es
cmps
push
mov
inc
push
aam
test
mov
stos
(bad)
mov
jae
(bad)
mov
or
nop
loop
cmp
rcr
das
(bad)
(bad)
lock
into
adc
ds
jb
push
adc
add
mov
xchg
rol
pop
enter
mov
jbe
aad
(bad)
jns
enter
xor
out
repz
repz
loope
inc
iret
iret
call
add
ins
pop
add
lea
cmp
mov
mov
xchg
fcmovne
xchg
int
ffree
jmp
fdiv
cmp
retf
jb
fs
or
pushf
repz
stos
xlat
or
imul
cld
div
jecxz
loopne
sahf
clc
mov
inc
cmc
mov
inc
cmps
test
push
lea
mov
ret
loopne
inc
pop
les
mov
scas
inc
push
mov
jge
xchg
push
xor
popf
or
ret
add
clc
cmp
inc
inc
mov
inc
sbb
add
or
lods
xor
xor
lock
or
stc
xor
popa
popf
ins
mov
xlat
rcr
mov
lods
xor
sub
in
xchg
lock
or
xor
jmp
xlat
shr
xor
iret
scas
std
lea
mov
cmp
and
mov
in
pop
test
pop
jmp
lds
and
mov
out
aam
repz
ja
shl
aad
add
ror
in
jbe
xor
into
aam
rcl
fldenv
data16
mov
scas
retf
add
push
icebp
cdq
cdq
mul
sub
jl
pop
stos
pop
and
(bad)
sub
lods
les
ror
scas
sbb
mov
cmps
in
fwait
push
or
fcom
sahf
mov
mov
cmps
and
jnp
cs
fstp
cmp
cs
mov
out
pop
gs
xchg
int3
or
sub
in
nop
jge
out
dec
pop
jns
and
test
outs
inc
push
mov
dec
mov
out
push
and
mov
(bad)
lea
and
xchg
out
or
adc
add
jns
mov
xor
add
(bad)
mov
int
icebp
gs
dec
les
add
(bad)
sbb
push
pusha
retf
ins
push
sub
or
pop
in
jns
imul
(bad)
pusha
pop
adc
loope
add
outs
nop
hlt
cmps
cmp
mov
add
xchg
rol
mov
inc
icebp
xor
push
inc
ss
push
das
loope
mov
add
pop
mov
loope
mov
in
mov
add
hlt
jae
mov
inc
cmp
add
push
mov
push
inc
sbb
cmp
es
sbb
mov
pop
or
xchg
jle
push
sbb
add
pop
jecxz
add
add
je
adc
and
enter
jb
test
mov
push
push
cwde
or
or
pop
je
cmp
add
cmp
push
pop
js
bound
push
pushf
pop
and
pop
gs
push
push
inc
mov
fist
std
call
xor
inc
jmp
pop
inc
(bad)
inc
loope
mov
das
fld
sub
jne
test
bound
(bad)
lds
jb
jmp
(bad)
sub
jbe
cmp
dec
xor
push
out
cwde
nop
sar
and
inc
cmp
cs
lea
shr
movs
retf
jl
cmp
or
add
inc
or
and
xchg
addr16
push
dec
iret
or
inc
ret
or
adc
or
mov
jbe
mov
adc
enter
add
sub
mov
movs
xchg
bound
sbb
ret
pusha
arpl
push
lock
sbb
fcmovb
mov
add
and
inc
hlt
prefetch
or
jb
xor
arpl
aas
and
push
push
xchg
xchg
fild
dec
add
loop
lea
sbb
push
(bad)
push
inc
cmp
mov
pop
bound
jns
pop
sbb
xor
push
sbb
add
sbb
adc
scas
inc
cwde
leave
je
mov
jmp
ret
push
movsx
adc
jb
add
pop
outs
xchg
add
pop
push
(bad)
out
push
mov
je
jle
mov
ret
push
pop
lahf
push
js
add
nop
(bad)
psrlw
or
and
sbb
adc
xor
cmp
lods
pop
int
movs
test
call
sub
inc
stc
xchg
adc
jmp
dec
xchg
mov
jle
mov
push
cli
and
pop
jmp
sub
pop
inc
add
cmp
and
jo
loopne
mov
scas
daa
mov
and
add
xor
sub
inc
ins
out
or
cmps
mov
jecxz
adc
jp
shl
cmp
les
push
push
pop
add
or
nop
sbb
rep
mov
dec
or
movs
add
ds
sbb
mov
(bad)
sar
dec
mov
(bad)
cmp
fdivr
out
int
or
(bad)
fdivr
xor
xchg
mov
jb
(bad)
pushf
or
fcomp
lock
jecxz
mov
add
or
ja
xchg
sub
fistp
xchg
(bad)
rol
sub
sbb
mov
clc
or
dec
or
add
stos
sti
dec
push
xchg
enter
mov
or
repz
mov
cmps
mov
and
adc
mov
sbb
fimul
loop
add
dec
inc
mov
or
push
icebp
mov
push
cmp
cmp
and
outs
aad
sbb
xchg
cmp
lds
pop
push
jg
and
jae
stos
not
cmp
pop
mov
ins
je
idiv
in
xchg
cli
adc
push
jb
js
push
and
add
mov
sub
scas
dec
xor
add
sub
mov
and
scas
push
jle
mov
sbb
mov
push
dec
sbb
loope
sahf
mov
inc
dec
pushf
inc
jl
mov
inc
mov
ror
add
stc
push
and
das
xor
or
nop
retf
test
adc
mov
sar
xchg
and
cwde
sub
or
inc
jmp
ss
mov
add
add
push
or
mov
adc
dec
inc
js
jno
popa
pop
mov
push
cmp
js
push
ss
test
cmps
xchg
aam
push
jo
add
push
adc
not
push
das
add
rol
push
(bad)
sbb
lock
into
inc
or
pusha
or
fdivr
mov
and
sbb
stos
movs
ror
sub
cmp
test
repz
ror
adc
nop
push
mov
mov
pop
test
into
bound
mov
ins
xchg
jne
pushf
push
movs
ins
xor
je
dec
inc
sub
sub
gs
rcr
add
call
rcl
call
cmp
test
push
xor
test
or
and
add
or
loope
jmp
dec
sub
or
xor
in
mov
lock
adc
pushf
data16
add
mov
xchg
and
sub
sbb
sub
shl
sar
add
and
in
inc
imul
or
daa
mov
cmp
inc
inc
xor
mov
add
mov
ins
adc
dec
jecxz
les
xor
or
push
rcr
sbb
cs
dec
sbb
sar
dec
adc
mov
or
adc
sbb
fs
dec
xchg
dec
jmp
(bad)
jnp
push
test
jg
loope
je
dec
inc
push
ror
inc
(bad)
sub
xor
daa
inc
fcomi
ficom
sub
and
jmp
inc
rcr
aaa
aad
push
push
jmp
xor
call
push
mov
or
or
loope
xor
mov
fidiv
or
jns
sbb
outs
add
addr16
jbe
(bad)
mov
push
or
dec
or
mov
stc
ficom
and
aaa
or
inc
or
xchg
inc
or
data16
movs
inc
and
dec
clc
or
add
adc
stc
dec
(bad)
adc
or
or
fist
or
adc
sbb
mov
sbb
popf
xchg
xchg
xchg
and
inc
jle
sub
mov
mov
ss
dec
inc
loope
cmps
or
js
cmp
cmp
mov
push
push
push
adc
ins
and
pop
test
out
inc
call
mov
aas
and
or
push
test
push
int
inc
clc
xor
(bad)
out
enter
jecxz
jmp
adc
sbb
cmps
sbb
push
or
cmps
imul
xchg
push
sbb
clc
or
xchg
and
rcl
or
mov
stos
lds
jl
push
rol
xchg
pop
mov
cmps
push
mov
test
stos
jp
stos
sub
(bad)
ins
loopne
daa
or
inc
imul
fnstenv
popa
icebp
jmp
or
js
jmp
test
cmp
xor
mov
adc
shl
ds
sbb
and
lock
je
fbstp
jl
xor
jg
mov
inc
nop
imul
add
dec
mov
mov
or
cmps
(bad)
popa
adc
sub
jnp
push
cmp
or
cmp
shr
pop
je
xor
add
jnp
mov
adc
hlt
push
sub
sti
loopne
push
mov
loopne
pop
add
adc
gs
retf
test
test
ds
sti
jo
cmp
cmp
ins
loopne
xor
call
sub
sub
and
daa
ins
std
mov
push
mov
enter
out
pop
pop
or
cmp
sbb
mov
add
pushf
and
(bad)
inc
push
mov
and
or
rcr
dec
and
ret
shl
push
aam
and
push
mov
push
inc
dec
cs
jnp
add
or
add
sub
and
xchg
hlt
daa
nop
jp
jb
push
pop
and
push
idiv
lahf
lea
jmp
sub
mov
cmp
cmovbe
sub
mov
cmp
ins
and
add
sub
pop
or
fidiv
push
xor
data16
and
add
mov
xchg
sub
(bad)
fadd
inc
xchg
icebp
dec
cdq
mov
add
in
je
mov
xor
repnz
mov
cmp
aas
mov
adc
add
jne
inc
loop
imul
cvtps2pd
cmp
jne
dec
sbb
mov
inc
ret
push
cmps
or
fcom
or
jb
add
(bad)
jecxz
adc
pusha
push
inc
xchg
lods
iret
cmp
(bad)
ficom
repz
jbe
and
add
fs
inc
or
xchg
fprem1
add
sub
push
jb
adc
and
dec
pusha
jle
push
pop
cmp
test
or
adc
mov
jp
hlt
add
push
add
mov
jbe
or
(bad)
push
jb
scas
xchg
cmp
add
cwde
ror
aaa
xchg
adc
inc
and
rcr
js
xor
lock
pop
lods
pop
push
pop
push
cmp
push
int3
cmp
push
xor
sub
and
xor
popf
and
add
(bad)
dec
div
sub
out
add
jmp
xor
cmp
add
jno
gs
adc
and
mov
shl
int
pop
add
fiadd
mov
mov
sub
ror
(bad)
mov
jo
mov
mov
sub
mov
adc
jl
add
mov
sti
arpl
jle
mov
mov
mov
sbb
push
jmp
pusha
push
xlat
shl
pop
retf
sub
xor
jp
push
cmps
sahf
inc
adc
out
pop
or
outs
dec
(bad)
shr
and
add
mov
scas
pop
inc
cli
ror
adc
das
add
inc
shr
test
jne
mov
in
and
add
fiadd
pushf
jp
sbb
js
clc
pop
add
xchg
pop
push
mov
ins
fidiv
push
push
inc
push
add
push
inc
repz
(bad)
loopne
mov
and
clc
xchg
ror
mov
sahf
xor
daa
cmp
push
cmove
cmps
add
sub
ret
dec
cld
pop
fadd
ja
int3
jae
lea
jmp
cwde
mov
inc
retf
std
mov
inc
sbb
add
shl
sbb
mov
inc
pushf
add
stc
in
push
or
mov
or
push
mov
cdq
popa
js
and
mov
(bad)
adc
mov
std
sub
cwde
pop
xchg
push
dec
cwde
add
ss
mov
xor
clc
inc
cdq
add
js
xor
popf
push
pop
mov
js
sbb
and
inc
add
or
add
enter
add
repnz
sbb
fdiv
mov
outs
fst
shr
dec
mov
xor
jns
lahf
das
cs
shl
jmp
pushf
push
repnz
les
mov
(bad)
push
push
mov
and
or
mov
(bad)
ins
ss
mov
push
(bad)
nop
pop
add
cmp
or
push
jmp
sbb
push
adc
ins
inc
xor
lods
cmc
xchg
or
cs
or
mov
mov
pushf
lea
add
push
out
cmp
mov
fld
push
mov
dec
mov
dec
loope
add
mov
add
aam
sti
(bad)
stos
imul
sahf
mov
sub
in
add
imul
push
or
dec
sahf
out
sahf
xor
xor
dec
sub
fucomip
imul
pop
cmp
sar
push
mov
mov
xchg
mov
dec
sar
call
inc
sbb
jae
inc
or
(bad)
add
repnz
pop
ret
and
call
xlat
mov
jmp
mov
ins
mov
jne
or
cmps
add
dec
mov
jmp
ret
inc
mov
shr
sub
or
lds
inc
dec
mov
push
sub
and
xchg
push
adc
add
push
inc
hlt
mov
loope
jmp
cs
mov
rcl
inc
push
das
shr
lock
adc
and
stos
pop
adc
inc
shr
sar
mov
jne
ss
aas
f2xm1
adc
mov
bound
loopne
xor
test
push
pop
add
movs
add
into
pop
mov
xor
sahf
xchg
mov
test
pop
xor
pop
ds
xchg
hlt
push
dec
cwde
or
jbe
addr16
jae
sub
das
inc
inc
adc
jne
xchg
jmp
bound
pop
inc
cmp
and
dec
push
sbb
push
inc
mov
movs
xor
push
rcr
in
sbb
pop
mov
movs
stos
jp
push
cli
add
sbb
dec
cmp
enter
pop
sbb
call
mov
inc
or
pop
cmp
jns
jecxz
push
fnstenv
mov
ret
add
cli
add
push
adc
call
cmp
ins
cmp
addr16
(bad)
xchg
add
xchg
into
enter
imul
or
adc
mov
out
jbe
add
mov
inc
inc
cmps
movs
sub
lods
test
retf
jle
push
and
dec
inc
jle
adc
ror
add
aad
mov
(bad)
call
dec
cdq
ret
inc
adc
pop
adc
lds
ret
test
inc
add
rcl
dec
pop
addr16
xchg
sbb
mov
ret
shr
into
dec
push
dec
jmp
aaa
shr
jmp
and
js
add
cs
test
and
pushf
test
cwde
mov
mov
or
add
mov
and
mov
cmova
mov
add
dec
mov
ja
nop
ret
fldcw
test
push
xchg
pop
mov
push
rcl
jbe
popa
inc
mov
and
xchg
mov
je
mov
or
mov
or
(bad)
xchg
adc
adc
adc
or
push
imul
xchg
xrelease
loop
call
aas
cmp
or
inc
sbb
sub
inc
push
add
or
push
xchg
mov
rcr
cmp
add
inc
mov
sbb
xor
rcr
bts
in
sub
sub
add
scas
pop
add
or
cmc
or
jl
add
cmovne
inc
jb
pop
jmp
data16
ret
dec
push
lahf
rol
push
dec
jl
stos
xor
pop
cdq
imul
xchg
xchg
sahf
cmp
sub
mul
into
and
add
jbe
sbb
popa
out
movs
mov
mov
add
imul
and
pop
sbb
adc
ret
stos
mov
push
jp
inc
push
retf
rol
xchg
aad
push
and
jp
push
xor
mov
bound
or
mov
cmp
xor
addr16
mov
test
pop
push
jmp
inc
jbe
sub
jl
(bad)
mov
mov
push
ins
and
jne
(bad)
jge
inc
mov
mov
mov
adc
(bad)
fimul
or
sub
scas
inc
lahf
jl
mov
or
sar
push
mov
hlt
dec
jge
cmp
fdivr
test
inc
int3
and
cmp
shr
push
pop
mov
mov
and
mov
push
fs
mov
add
jo
rcr
add
mov
cmp
sbb
inc
and
inc
mov
xchg
rcl
pop
mov
mov
dec
and
gs
add
repz
int
add
xchg
cmp
imul
cmp
xchg
rcr
push
push
retf
and
mov
add
add
sub
xor
inc
add
and
add
sub
dec
pop
add
enter
mov
jl
sahf
movd
jo
and
and
pusha
pop
mov
and
add
mov
ins
adc
shl
xchg
rcl
adc
jp
adc
ins
jg
out
mov
or
rcr
add
push
and
jp
push
gs
mov
add
test
xor
lea
xchg
hlt
sbb
dec
xchg
dec
add
dec
mov
xor
leave
mov
lock
sti
mov
and
(bad)
loopne
pop
pop
loope
aas
enter
mov
mov
mov
xor
cmovle
cmovg
aam
pop
loop
out
ds
ret
adc
xor
inc
outs
add
and
mov
pop
mov
ror
loopne
cmp
ret
push
scas
mov
add
sbb
loope
not
adc
sbb
mov
sbb
xchg
add
inc
stos
mov
ds
mov
mov
fistp
inc
push
in
jne
sbb
fnsave
jo
retf
dec
cmp
pop
add
clc
mov
sub
adc
sar
mov
ins
pop
lods
pop
jmp
lea
sbb
adc
pop
shl
sub
cmp
pop
adc
inc
dec
test
scas
and
rcl
pop
xor
mov
mov
lahf
imul
sub
sbb
arpl
mov
jb
pushf
mov
dec
jbe
ja
ds
stos
mov
xchg
mov
inc
test
and
add
mov
cmp
adc
fiadd
inc
ins
popf
ins
lds
jne
push
das
fist
sbb
mov
or
inc
dec
mov
mov
jnp
and
hlt
sub
cmovno
add
xor
mov
mov
add
ret
pop
and
test
movs
call
inc
sahf
mov
pop
fisttp
xchg
xor
(bad)
les
pop
inc
add
icebp
into
mov
lods
sbb
sbb
mov
cmp
je
cmp
jge
es
jl
mov
cs
sbb
inc
mov
or
daa
push
cmp
sbb
pop
adc
sub
push
lds
in
(bad)
stc
add
push
test
push
or
test
push
ret
stc
call
or
pop
xchg
popa
movs
inc
aas
aaa
shl
or
ret
cmc
sbb
add
jmp
out
fadd
dec
pop
sahf
inc
push
ins
or
cld
sbb
inc
es
inc
cld
out
mov
xor
outs
sti
movzx
adc
adc
sbb
(bad)
aam
inc
cmp
jl
sub
mov
repz
mov
dec
ret
pop
js
pop
outs
inc
add
and
paddsb
int3
add
mov
jmp
xor
sub
adc
add
sub
push
loopne
xchg
aad
sbb
loopne
inc
and
add
mov
cmp
jge
push
pop
fisttp
je
add
cmps
nop
das
or
pop
xor
inc
aad
dec
sub
cmp
pop
push
push
ret
cmp
xchg
mov
jne
jl
adc
and
jbe
and
jo
in
jl
in
dec
call
icebp
data16
pop
jo
and
fcomp
xchg
jb
sbb
sbb
xor
and
dec
jmp
pusha
pop
pop
mov
sbb
sbb
or
jb
int
lea
leave
hlt
mov
inc
repnz
fld
add
out
ret
inc
pop
inc
push
(bad)
nop
and
cmp
into
ret
add
pusha
mov
and
in
mov
xchg
daa
xchg
les
jle
cmc
dec
cmps
dec
pop
mul
fwait
and
nop
pop
push
xor
in
jne
mov
call
xor
jmp
push
pop
push
pop
sub
adc
sti
push
test
int
ins
(bad)
pop
jle
jmp
fs
or
mov
or
push
pop
lea
cmp
cmp
and
sbb
rcl
movs
inc
inc
outs
xchg
mov
ret
ins
aas
jo
ret
test
cmp
add
test
push
jnp
adc
xor
nop
loope
and
jge
pop
stos
add
pop
push
jo
ins
push
xor
push
rcl
aas
push
ins
enter
cmp
inc
jo
pop
sbb
loopne
push
fsub
or
loop
mov
test
rol
add
jl
add
add
xchg
add
jnp
cld
ret
push
mov
scas
rcl
adc
ffreep
sbb
pop
add
js
sub
sub
push
sbb
add
inc
push
xor
nop
inc
scas
inc
sbb
addr16
scas
fist
and
cmps
pushf
sbb
int
xchg
and
mov
cmc
xor
mov
lds
pop
test
call
iret
lds
push
scas
jns
add
pop
movs
test
add
scas
add
sbb
sub
daa
mov
addr16
dec
mov
cmp
ror
jmp
lahf
cmps
or
dec
shl
jecxz
lahf
pushf
jmp
cmp
cmp
or
sub
xor
mov
les
rol
xor
adc
dec
mov
mov
xchg
shl
scas
inc
add
inc
push
dec
push
push
mov
xchg
(bad)
ret
not
inc
ja
adc
ret
es
jge
gs
shl
dec
mov
inc
sbb
jo
cmovs
jl
sbb
test
leave
pop
call
rol
and
push
outs
pop
rcl
sti
mov
sbb
adc
add
push
pusha
inc
rol
mov
ror
ja
adc
sbb
cs
xor
pop
sub
jl
adc
sbb
pop
jl
mov
test
mov
cwde
push
mov
lods
pushf
out
adc
hlt
xchg
shr
loop
sbb
or
mov
out
sbb
sldt
test
mov
xor
cmc
adc
xor
(bad)
aaa
xor
lock
add
xchg
bnd
mov
xchg
jbe
cmp
mov
jl
repz
sar
mov
xchg
lock
je
ret
adc
ret
inc
and
dec
add
add
mov
add
lsl
push
pop
or
xchg
xchg
xchg
xchg
or
or
xor
fld
adc
in
rcl
cmp
int3
je
imul
mov
pop
sub
adc
cli
jne
mov
mov
adc
xchg
rol
jmp
rcl
dec
push
lea
test
push
inc
stos
pop
fisub
cwde
shl
(bad)
and
cmp
xchg
mov
call
adc
js
cmovbe
push
dec
stos
inc
lods
aaa
jp
leave
mov
out
mov
inc
ins
or
add
sbb
add
ins
pop
sub
sbb
repnz
imul
jle
fnstcw
mov
fmul
or
and
sbb
add
add
pop
sti
push
sbb
cmp
enter
pop
les
jb
cmp
(bad)
lea
call
add
push
dec
std
(bad)
enter
inc
mov
inc
mov
add
sti
fimul
ret
adc
(bad)
inc
xor
adc
add
or
inc
add
sbb
pop
xor
fs
shl
rol
adc
inc
in
sbb
xor
xchg
mov
add
retf
and
xchg
pop
cdq
jmp
push
cmp
push
fld
loope
mov
loope
retf
pop
dec
pop
push
int
shr
and
sub
push
sub
dec
ret
and
sub
jb
xor
xor
pop
xor
sub
sub
aad
rcr
(bad)
xchg
or
sbb
or
sbb
mov
adc
adc
mov
retf
mov
in
pusha
adc
pop
rcr
or
or
cmps
test
sub
rol
movs
not
inc
push
(bad)
(bad)
ins
loop
add
inc
je
push
sbb
sbb
fisub
jne
xor
or
push
pop
xor
ja
push
hlt
pusha
hlt
add
ins
dec
cmp
imul
pop
shl
movsx
and
xor
and
cs
sub
xor
or
push
ins
push
jl
push
jnp
pushf
imul
xor
inc
inc
push
dec
arpl
ss
add
mov
outs
pop
lods
imul
call
mov
jp
sub
into
sub
dec
ss
xchg
sub
adc
(bad)
outs
popa
outs
(bad)
mov
sbb
das
push
pushf
pusha
cmp
ja
cmp
adc
sub
cmp
lea
(bad)
(bad)
repz
inc
pusha
ja
xor
dec
add
mov
test
sub
lods
add
inc
jo
lock
cmps
add
xchg
push
pop
test
(bad)
test
adc
add
xchg
sub
lock
sbb
fsubr
mov
lahf
dec
cmp
mov
cmp
xor
ins
push
push
mov
mov
ja
daa
and
sub
mov
and
aam
sbb
lahf
adc
mov
loope
(bad)
(bad)
retf
mov
xchg
loope
shl
or
inc
sub
xchg
cmp
shl
mov
imul
enter
pop
inc
fst
mov
lahf
shl
ins
xor
xor
inc
jno
mov
sub
mov
ret
popa
enter
dec
mov
call
xchg
cmp
pop
icebp
das
mov
leave
adc
mov
jno
and
(bad)
das
mov
pop
out
push
mov
dec
or
aas
lock
fs
or
cmp
add
loopne
ja
and
mov
into
push
aaa
push
shl
pop
hlt
imul
mov
jp
cs
in
test
sahf
add
pop
pop
nop
add
dec
cmps
add
inc
cmp
pop
test
dec
cmp
sub
push
or
pop
fcmovbe
fwait
cwde
in
ror
bound
pop
cmc
push
cmp
and
jne
retf
fst
loop
xchg
leave
in
push
add
test
sub
scas
je
jb
dec
pop
sti
push
ins
push
dec
dec
popa
cmp
loopne
jns
shl
or
pop
or
mov
jmp
add
push
xor
pusha
add
dec
sub
add
out
xor
retf
jmp
ins
div
xor
outs
into
out
xor
cmp
mov
cmps
xchg
dec
xchg
ret
sbb
sbb
sbb
cmp
cwde
repz
fiadd
minps
jmp
ja
js
sub
push
jmp
(bad)
adc
js
sub
adc
sti
xchg
inc
call
rcr
je
jl
xor
xor
sbb
dec
jle
add
add
es
or
push
shl
lock
cdq
scas
dec
cld
push
call
cmp
dec
xlat
retf
into
inc
xchg
inc
push
jmp
sub
iret
sub
inc
jb
push
mov
xchg
push
inc
icebp
test
push
dec
xchg
inc
into
sbb
je
jnp
movs
lahf
jne
pop
pop
test
adc
fdivr
rcl
pushf
or
ficom
mov
mov
lea
clc
cmp
jne
sub
inc
clc
outs
sti
lahf
nop
inc
mov
mov
cmp
jne
(bad)
stc
repnz
jne
add
add
es
pop
mov
push
inc
jbe
adc
ins
retf
std
or
sub
add
push
jl
enter
and
clc
pop
jo
inc
(bad)
mov
inc
push
sbb
jo
sub
jb
nop
inc
add
pop
cmp
add
mov
mov
mov
dec
or
dec
sub
add
and
popf
push
cmp
mov
or
adc
adc
mov
out
pop
shr
ja
je
adc
and
adc
bound
fcmovu
mov
cmp
sbb
add
add
xchg
inc
cmp
push
fs
pushf
test
xchg
pop
repz
mov
inc
dec
emms
js
ja
cmovl
dec
ja
cmovl
dec
or
loope
inc
jbe
adc
dec
into
aas
ror
mov
into
cmp
push
jne
jbe
mov
inc
rol
sub
cmps
add
push
push
lods
mov
mov
pop
xor
xchg
mov
mov
inc
pop
inc
sbb
jmp
or
sbb
dec
mov
(bad)
mov
nop
ret
jnp
int3
mov
adc
lods
add
fadd
cmp
mov
or
xlat
stos
cmp
jb
mov
mov
dec
xor
sub
add
pop
add
jg
sub
lea
cmps
cmps
test
rcl
js
hlt
inc
movs
inc
enter
dec
sbb
retf
rcl
push
pop
and
jo
and
dec
push
sub
and
pusha
lods
movs
push
and
mov
inc
add
test
push
rcr
adc
in
jns
ja
mov
retf
add
mul
adc
ds
push
cmova
xlat
push
sub
mov
sbb
ss
push
adc
out
pop
(bad)
outs
jmp
add
xchg
xor
adc
and
mov
loope
adc
(bad)
or
test
jl
scas
in
and
arpl
daa
xchg
add
icebp
push
sbb
add
xor
or
call
mov
icebp
mov
push
and
or
push
push
(bad)
mov
fst
ds
mov
pop
icebp
scas
mov
aad
dec
add
mov
popa
or
add
sub
add
invd
cld
push
sub
ret
or
aad
dec
xchg
add
mov
sbb
pushf
in
adc
xor
cmp
dec
mov
test
hlt
or
adc
sbb
or
sbb
cmp
sub
jp
inc
jge
sbb
es
jae
adc
ficom
rcr
retf
push
dec
rcr
inc
inc
adc
out
adc
stc
fucomp
inc
pop
add
cmp
dec
add
dec
adc
frstor
rcl
pop
lock
jmp
or
test
aad
adc
les
mov
and
dec
fst
xchg
mov
fisttp
adc
mov
int
inc
nop
or
inc
add
sti
les
into
mov
jmp
sbb
cld
lods
push
mov
out
dec
not
sbb
call
pop
mov
mov
push
mov
add
lea
retf
lods
je
inc
jmp
inc
cli
sub
mov
out
xchg
int3
loopne
aam
lods
pop
sbb
loop
xlat
dec
xchg
cmp
clc
mov
jle
test
xchg
sbb
ror
dec
and
sub
int3
cmp
lock
xchg
add
jecxz
push
retf
or
cmp
xchg
jnp
inc
sbb
popf
and
jmp
arpl
test
je
adc
pop
call
mov
pop
xchg
dec
or
push
cmp
or
xchg
add
loopne
rcl
movs
push
and
rol
(bad)
add
test
ret
les
and
xchg
movs
std
test
pusha
pop
test
ins
pop
and
repnz
jo
sbb
mov
push
xor
adc
movs
lods
icebp
ss
sbb
add
cdq
loope
and
inc
sub
ins
(bad)
add
xlat
std
adc
test
daa
xchg
retf
sub
adc
xor
adc
mov
inc
daa
(bad)
xor
inc
xor
pop
inc
cmp
jo
popa
loopne
or
add
sub
clc
mov
dec
inc
ins
int
adc
or
cli
dec
xor
imul
shr
push
inc
dec
in
push
loop
and
mov
push
into
enter
xor
repnz
aad
inc
sbb
pop
add
pop
nop
sub
imul
push
add
repnz
cmp
pminsw
inc
push
or
pop
stos
cmp
repnz
xor
xchg
inc
pop
or
daa
mov
cmovge
cmp
xchg
dec
clc
or
call
inc
inc
adc
and
xchg
adc
adc
sub
xchg
push
inc
inc
mov
sahf
sub
push
scas
lahf
sbb
pop
adc
clc
or
int3
or
sub
ja
loopne
pop
and
pop
or
xchg
pop
dec
xor
cmp
pop
pop
ds
mov
sub
cmp
jle
mov
jl
sti
not
js
sar
sbb
or
dec
shl
push
(bad)
or
leave
and
jne
ins
das
add
pop
pop
inc
jne
add
les
fsub
add
cmc
mov
and
cmps
ret
div
cmp
pushf
(bad)
jno
inc
fisttp
fmul
das
mov
xor
add
into
jnp
xor
sbb
push
loope
cmp
jmp
stc
in
es
push
add
push
or
icebp
(bad)
add
shr
xchg
inc
push
push
and
inc
ret
push
loopne
dec
sub
mov
push
pop
jecxz
mov
int3
adc
or
inc
sub
jmp
aaa
mov
pop
ss
(bad)
div
cmp
bound
push
(bad)
ret
or
js
call
test
es
mov
mov
sbb
sbb
mov
loope
xlat
gs
or
add
push
xor
push
mov
adc
icebp
mov
add
aad
and
imul
cmps
jno
mov
mov
inc
add
sbb
out
femms
rol
popa
ror
ret
call
das
inc
push
pop
repz
push
adc
fiadd
adc
push
push
pop
shr
pop
fadd
inc
push
push
stos
add
aam
sub
inc
jo
cmp
arpl
push
cmp
jb
mov
out
sahf
jmp
adc
jb
movs
push
add
dec
or
dec
mov
push
adc
or
nop
mov
test
and
js
sbb
cli
push
lea
mov
xor
cwde
xor
mul
push
lods
popa
sbb
out
mov
add
cmp
nop
cwde
xlat
or
mov
inc
push
mov
and
rcl
add
loopne
jno
push
cmc
or
icebp
es
push
jo
mov
push
xor
nop
mov
iret
or
neg
jae
cmp
or
icebp
cmps
retf
push
ins
aas
je
pop
dec
mov
fisub
dec
xlat
es
es
mov
mov
push
cmp
dec
and
retf
outs
pushf
xor
pop
aam
jb
gs
pop
stos
push
outs
test
or
cli
imul
add
shl
dec
add
rcr
ret
rol
or
dec
xor
inc
inc
adc
cli
jae
je
in
lahf
and
push
scas
mov
call
mov
sbb
sbb
and
ror
pop
push
fs
cmp
fs
dec
pusha
add
ret
ss
xchg
adc
and
xor
or
adc
pop
gs
sbb
test
push
sbb
cmc
and
cmp
lea
movs
pusha
adc
push
ss
js
bound
jns
jl
lea
xlat
inc
shr
mov
hlt
test
js
adc
fdivr
adc
call
adc
or
cmp
sbb
enter
outs
cld
add
jb
repnz
mov
jp
mov
hlt
and
adc
mov
rcl
inc
(bad)
out
mov
mov
mov
das
mov
add
test
add
add
enter
add
call
loopne
std
mov
sbb
mov
ss
adc
add
cmps
fisub
dec
bound
(bad)
fld
pushf
pop
fisubr
rol
pushf
mov
xchg
ja
int3
add
and
enter
or
add
sbb
dec
dec
inc
dec
xchg
push
(bad)
ds
mov
cmps
hlt
add
movzx
add
mov
int3
iret
dec
and
shr
cwde
pushf
add
mov
xlat
test
sbb
mov
add
nop
pop
lds
sub
adc
pop
or
and
inc
jns
inc
loope
fs
cmp
int
(bad)
adc
mov
inc
fisubr
push
jmp
inc
arpl
ret
retf
sbb
repz
jne
inc
inc
outs
scas
adc
and
xchg
pop
push
xchg
add
push
inc
push
dec
dec
add
push
imul
icebp
push
out
sub
dec
adc
sub
test
xchg
mov
fisttp
inc
inc
dec
sub
xchg
sub
sahf
inc
fcomp
(bad)
cmp
ja
push
add
mov
and
sbb
inc
push
mov
mov
adc
fsubr
outs
sub
adc
cs
adc
mov
les
inc
shr
or
fisubr
(bad)
into
push
les
movs
sub
dec
es
lods
mov
add
inc
mov
sub
or
loop
pop
jnp
and
inc
sub
in
sub
lods
mul
ret
scas
in
mov
jmp
push
cmp
ins
and
sub
scas
push
or
mov
sbb
push
sbb
push
mov
lods
sbb
mov
xchg
or
sub
add
xor
push
mov
inc
pop
jne
mov
push
ret
mov
arpl
mov
add
sti
cmovne
cmp
or
lahf
iret
clc
outs
lea
je
push
je
cmps
je
imul
and
sti
aad
pop
sbb
(bad)
out
mov
or
loopne
dec
sbb
sub
pop
mov
push
cmps
test
out
mov
out
ret
cmp
fs
dec
dec
mov
push
mov
fld
push
loope
pop
jle
jne
push
sbb
mov
adc
xlat
out
add
pop
push
mov
cld
sbb
dec
je
jle
mov
dec
sbb
fdiv
lock
mov
pop
jge
mov
das
cmp
sbb
not
sub
retf
xlat
or
add
push
mov
and
mov
cs
(bad)
loope
add
lods
inc
cs
xor
fstp
mov
cmp
ss
sub
adc
push
add
adc
int
iret
inc
mov
jecxz
fwait
int
ret
ret
xchg
daa
fldenv
iret
mov
lds
(bad)
out
ins
sahf
dec
(bad)
enter
outs
jns
fwait
int
and
iret
jb
ja
int
shr
shl
mov
inc
aam
xor
xor
in
jecxz
jp
paddq
fwait
inc
sbb
(bad)
clc
fsub
pop
movs
push
or
and
sbb
loopne
nop
sar
add
inc
mov
sub
dec
movs
ret
cli
movs
jg
add
js
fld
test
sbb
pusha
add
jmp
xor
fistp
sub
push
pop
jne
and
xchg
push
outs
iret
aaa
jbe
div
push
in
jmp
mov
dec
movs
or
jo
movhps
sbb
pop
nop
into
xchg
pushf
add
xor
add
sbb
sbb
fcom
fadd
das
jmp
xor
jmp
pop
sbb
fistp
lea
mov
mov
fsubr
sub
lea
add
add
push
jle
ror
test
add
mov
dec
mov
and
xor
sar
test
pop
push
push
test
pop
nop
icebp
daa
push
cli
or
push
push
add
mov
jo
(bad)
add
rcl
hlt
je
sbb
mov
add
pusha
fild
mov
adc
xor
inc
lds
adc
push
add
sub
push
loop
push
push
cmp
retf
(bad)
lock
mov
sbb
sub
(bad)
jne
add
cs
and
mov
mov
push
(bad)
sar
mov
mov
add
mov
add
stos
scas
sbb
nop
adc
and
test
or
inc
sbb
jnp
jnp
push
out
sub
cmp
in
in
sub
sbb
xor
sub
inc
inc
jo
jbe
inc
dec
xchg
push
js
xchg
pop
test
ins
mov
add
push
retf
fsub
sub
cmp
nop
pushf
mov
xchg
test
xor
fidiv
(bad)
sbb
(bad)
push
div
and
push
adc
sub
push
fbld
jmp
mov
xor
mov
shr
mov
and
sar
into
hlt
sub
in
xchg
test
inc
ror
rol
addr16
sahf
xchg
ja
ss
cmps
xor
or
and
aad
mov
sbb
ret
mov
leave
mov
(bad)
call
or
or
inc
shl
and
dec
mov
mov
push
add
inc
sub
jmp
stos
sub
std
icebp
pop
sbb
popf
test
adc
(bad)
lods
in
push
dec
pop
jns
jl
jae
lock
lahf
addr16
lea
dec
pop
mov
movs
jns
add
out
xchg
or
add
cmp
mov
pop
add
aam
cmp
jmp
pushf
and
jno
fdiv
sub
movs
mov
enter
sub
push
dec
mov
movs
mov
mov
lock
sub
or
je
or
fdivr
add
loop
mov
fcom
cmp
ins
jecxz
inc
mov
push
inc
cs
pop
sub
ss
cmc
daa
ins
sbb
mov
sbb
pop
inc
or
or
cmp
push
adc
adc
add
pop
fistp
and
mov
cmp
dec
mov
nop
je
and
loope
or
mov
pushf
mov
cmps
mov
cmp
int
push
rcr
cmp
jge
fisub
ret
je
mov
push
mov
inc
and
sub
je
cwde
ins
jle
mov
push
rcl
add
inc
dec
or
mov
pushf
int
dec
fs
ret
out
mov
cmp
cmp
push
and
jle
icebp
nop
sbb
mov
sub
mov
fprem
mov
daa
or
sub
sbb
sbb
ror
mov
loopne
fsub
stos
loope
push
mov
rcr
nop
mov
cmp
mov
nop
mov
loop
lock
cdq
je
mov
jae
ja
repnz
and
push
jl
stos
push
ret
(bad)
std
push
add
push
xor
cmp
(bad)
push
push
mov
add
push
into
inc
push
pop
aaa
jnp
or
popf
add
add
cmp
fidiv
jo
lea
sbb
bound
loopne
jbe
and
cmp
nop
add
test
pop
add
sbb
popa
sahf
outs
inc
add
pop
add
adc
mov
iret
mov
fstp
add
mov
cld
xor
dec
xor
xchg
mov
je
fmul
push
cmps
pop
ja
in
sbb
shr
sub
bound
js
push
and
retf
lss
or
add
push
in
stc
mov
out
ins
sbb
cmp
push
lahf
add
push
mov
sub
lahf
ins
lods
fwait
pop
jmp
sbb
imul
aas
cmp
xchg
imul
shl
add
jl
mov
and
cmp
ins
pop
mov
cmp
sub
dec
xor
lock
cmp
nop
xor
xchg
sbb
push
(bad)
add
pop
out
pop
add
sti
rol
xchg
shl
aam
mov
sbb
xor
jne
mov
push
inc
cmp
ss
add
xchg
fs
mov
jo
in
ins
or
pop
sub
pop
inc
lock
mov
stos
sub
add
mov
and
add
sbb
sbb
mov
and
or
inc
mov
or
sbb
push
(bad)
out
add
ds
dec
or
xor
lahf
mov
and
stos
mov
xor
add
adc
pop
lods
retf
and
(bad)
loope
ret
test
add
sbb
(bad)
pop
push
fadd
test
jl
jo
movs
dec
or
stos
cmp
in
cmp
pop
int
cmp
and
pop
sub
or
push
add
sbb
and
fwait
(bad)
pop
inc
add
daa
pop
cmps
adc
mov
movs
repnz
imul
mov
mov
cmps
adc
sbb
add
ja
push
lea
pop
push
add
(bad)
cmp
out
xor
es
popf
nop
xchg
das
xor
repnz
mov
loope
add
jmp
movs
sub
pushf
test
xor
add
aad
cld
rol
inc
sub
js
jb
and
push
add
xchg
xor
sub
sub
xchg
jne
sti
loopne
sbb
sub
rol
inc
or
or
inc
leave
stos
jge
fucom
or
add
mov
add
test
sti
xor
es
lods
call
add
fst
mov
test
xchg
dec
push
push
cs
inc
jecxz
mov
push
jo
adc
aad
xchg
sbb
aas
mov
popf
sub
sub
inc
adc
mov
sub
dec
push
dec
enter
inc
mov
fwait
les
je
rcr
mov
xchg
cmp
add
aas
inc
aad
push
(bad)
out
test
lods
dec
popa
push
push
adc
nop
mov
mov
lea
popf
mov
mov
inc
adc
div
mov
pop
mov
xchg
sub
std
fcom
sub
push
test
call
jo
sbb
fidiv
cwde
inc
mov
sbb
add
xor
push
and
rcr
adc
adc
movs
push
xor
xor
pop
mov
adc
dec
ror
xor
add
(bad)
movs
and
inc
xchg
fistp
jae
aad
add
rcl
xlat
push
fisubr
gs
dec
and
inc
push
iret
and
xor
push
sbb
bound
in
xchg
dec
retf
cmp
ins
and
adc
jbe
in
cwde
jae
ins
mov
add
jge
call
test
dec
mov
add
mov
out
sar
sbb
adc
pop
lea
out
add
mov
mov
enter
inc
push
call
push
imul
(bad)
and
mov
sub
push
popa
nop
or
cmps
jecxz
shr
aaa
jno
push
xor
leave
sbb
cmp
pop
sar
and
lea
sahf
rcr
je
aas
pusha
xchg
xchg
mov
popa
xor
in
ficom
push
out
adc
pusha
xor
cmp
push
mov
pop
mov
jo
add
dec
or
aas
lods
mov
imul
(bad)
repz
addr16
sbb
aam
ret
dec
mov
leave
ja
daa
call
imul
loope
(bad)
xor
push
repz
add
scas
or
loopne
xor
cli
add
es
cdq
mov
out
add
sub
xor
and
mov
push
adc
adc
or
push
add
das
and
dec
push
mov
test
enter
pop
cwde
inc
ficomp
dec
aas
sbb
nop
adc
cmp
lds
xchg
(bad)
cmp
adc
mul
pop
and
mov
adc
fcomp
mov
in
xchg
sbb
push
push
clc
inc
es
(bad)
dec
mov
jb
sbb
xchg
mov
pop
cmp
je
(bad)
addr16
dec
sbb
in
jmp
push
mov
push
add
sub
loopne
sub
xchg
and
mov
cld
xor
les
xchg
pop
bound
test
dec
add
mov
mov
and
xor
mov
repz
cmc
pop
loopne
out
jbe
cli
mov
shld
out
out
push
mov
push
test
push
pop
enter
jnp
add
ins
mov
xchg
enter
inc
xchg
cmc
in
std
mov
stos
or
inc
and
sbb
add
or
sahf
adc
or
nop
pop
xor
je
(bad)
adc
mov
mov
dec
jo
sahf
pusha
cmp
pop
iret
cmps
movs
mov
and
cmp
or
mov
loopne
add
mov
xor
adc
out
aaa
add
daa
mov
sbb
mov
or
inc
xor
push
xor
mov
inc
add
test
push
and
std
(bad)
mov
data16
movs
jnp
dec
int3
ud1
pop
lods
mov
test
je
mov
rol
and
mov
shl
xchg
mov
(bad)
jo
add
cs
or
sbb
aad
rol
push
jae
call
pop
arpl
nop
das
repz
or
adc
int3
cdq
dec
scas
cmc
and
jns
xchg
mov
inc
pop
mov
clc
mov
not
je
pusha
mov
dec
add
xchg
add
add
loopne
xor
outs
add
dec
jno
ins
cmp
add
iret
enter
nop
xor
and
in
and
rol
push
ds
gs
jbe
or
addr16
push
(bad)
push
pop
xchg
mov
push
or
test
xlat
mov
xchg
and
rol
xor
push
imul
mov
sbb
fnstenv
or
jnp
sbb
cmp
mov
daa
not
adc
jnp
push
in
leave
add
int
hlt
loopne
add
push
pop
test
lods
xchg
push
imul
fstp
jno
jmp
outs
sbb
xor
jg
jno
sbb
sub
rcr
mov
(bad)
div
mov
cmp
or
push
inc
loopne
add
mov
adc
std
dec
lds
cmp
jmp
popa
hlt
xor
stc
inc
rol
push
dec
add
(bad)
(bad)
nop
scas
push
ret
retf
mov
pop
cmp
inc
adc
outs
push
dec
push
pop
sbb
mov
repz
mov
and
mov
ror
or
mov
sub
cmp
sub
les
out
popf
and
xchg
js
jl
lock
add
jle
fs
mov
out
lock
add
jmp
icebp
dec
cdq
mov
adc
jle
xchg
mov
les
push
es
adc
xchg
add
jne
les
sbb
jmp
ins
adc
iret
and
push
clc
mov
push
pop
dec
int
mov
xchg
and
ret
or
js
add
mov
add
push
xchg
mov
xchg
icebp
sbb
push
or
mov
jne
jnp
pop
mov
and
adc
ret
sar
jp
pop
adc
and
and
test
test
push
xchg
cmp
adc
popa
out
pop
cmps
sub
loopne
mov
mov
sub
test
xor
int3
push
mov
lea
xchg
add
je
stc
or
push
fdivr
fadd
mov
enter
ret
jns
adc
loopne
or
or
cmps
in
mov
sub
movs
mov
sub
js
fwait
jg
mov
test
dec
movs
hlt
pop
mov
xor
mov
in
mov
push
add
xchg
xchg
cs
mov
retf
(bad)
jnp
adc
dec
add
cmp
loope
dec
xlat
adc
mov
cwde
mov
out
push
aam
push
mov
movs
add
and
sub
or
(bad)
fild
xchg
mov
sbb
arpl
or
adc
pop
stc
add
or
hlt
cmp
xor
shr
movs
retf
mov
sbb
xor
push
imul
std
cld
hlt
test
add
rol
test
outs
retf
xchg
add
lea
ss
mov
mov
and
jo
cmp
cwde
sub
sub
add
and
mov
lea
test
loopne
ins
test
lds
and
add
jo
pop
pop
jne
(bad)
cmp
or
shl
sbb
jnp
fcomp
push
lea
add
sar
lea
shl
xlat
and
movs
dec
or
push
xor
push
pop
ja
(bad)
stos
mov
sub
mov
push
in
add
add
mov
lea
int
in
bound
cld
and
push
add
xchg
push
imul
xor
mov
push
les
popf
add
in
pop
push
and
or
mov
push
inc
pop
jae
cmp
push
and
pop
nop
lea
mov
icebp
inc
mov
rol
add
xor
inc
mov
xor
ret
mov
call
daa
xor
xchg
xor
les
xbegin
dec
push
xor
fstp
out
pop
push
ds
or
ficom
arpl
fiadd
xor
psrld
mov
add
xchg
test
popa
sub
and
mov
lods
xlat
push
push
xor
cmp
adc
mov
and
fwait
ja
clc
and
je
add
(bad)
std
and
add
and
pmaxub
mov
out
mov
and
lea
push
push
repz
gs
cmps
cmp
sahf
mov
scas
repnz
test
lods
or
dec
mov
popa
lods
dec
fmul
xlat
test
pop
inc
or
adc
xchg
xor
xchg
mov
enter
int3
je
adc
sbb
cli
add
xor
inc
and
in
push
adc
sub
icebp
cmps
mov
or
jnp
pop
cmp
repz
mov
pop
mov
imul
adc
pop
adc
int
cmps
pop
adc
add
pusha
cmp
mov
cmp
cmps
or
mov
mov
mov
xchg
out
sti
rcr
cmp
repnz
jle
enter
ror
aam
rcr
test
sbb
mov
mov
jmp
jb
push
data16
or
inc
popa
addr16
xchg
test
aaa
mov
ins
pop
js
mov
fcmove
xor
shr
les
jb
pop
enter
cmp
fsubr
imul
or
inc
sbb
ret
jmp
scas
dec
rol
lods
adc
adc
push
inc
enter
sar
xchg
xor
pop
je
push
popf
je
xor
mov
into
shr
sub
xor
pusha
sub
xor
les
pusha
mov
or
inc
pop
fs
cld
or
pusha
cdq
add
fld
es
add
xchg
fcomp
mov
inc
jg
les
test
pop
sahf
(bad)
cmp
pop
cdq
pusha
or
aam
xor
hlt
inc
add
ins
jb
jmp
imul
and
mov
cli
mov
mov
and
fdivr
jmp
sbb
sub
call
pop
(bad)
fstp
or
imul
loop
push
cmp
adc
mov
pop
pop
addr16
push
test
outs
fnop
cmps
add
mov
lea
xor
dec
jo
scas
and
(bad)
sbb
ss
shr
lock
(bad)
dec
jnp
and
mov
test
test
push
adc
ret
xor
dec
or
rcr
jg
mov
and
mov
sbb
loopne
into
sti
sbb
adc
and
xor
or
add
sub
jae
mov
jl
and
das
push
sbb
repz
not
es
data16
popf
sub
ins
fld
lods
mov
push
fcmovnbe
add
pop
in
gs
movs
pop
loopne
call
and
call
not
sti
test
jnp
fwait
or
ret
push
mov
and
pusha
and
aaa
inc
dec
push
lea
loop
push
call
mov
mov
mov
push
es
icebp
rcr
mov
(bad)
ror
outs
xchg
ja
sbb
jmp
or
and
dec
in
nop
clc
or
mov
pop
and
imul
add
(bad)
and
mov
jecxz
sub
ret
pop
cs
jl
or
ror
dec
test
mov
or
mov
cdq
and
sub
pop
and
cmp
xchg
and
or
add
add
jno
and
dec
add
and
cmp
add
dec
xchg
adc
mov
sub
inc
shl
hlt
clc
cld
sbb
mov
adc
and
sbb
into
and
loopne
mov
xor
mov
dec
or
push
or
dec
sub
mov
adc
and
into
mov
popf
fiadd
sub
xlat
xor
and
dec
retf
add
add
rcl
adc
add
dec
xchg
inc
jb
pop
and
mov
sub
jae
inc
in
enter
push
mov
cmp
push
(bad)
jmp
cmp
shl
pop
push
push
push
jecxz
pop
das
jl
adc
aam
or
ffree
sbb
(bad)
sbb
pop
(bad)
sub
inc
sbb
add
test
ror
retf
mov
jle
jg
mov
push
clc
das
out
pushf
sbb
cmp
je
aas
aas
mov
xor
sub
je
jl
pop
dec
jg
dec
dec
int3
lea
lea
ficom
adc
cdq
out
jmp
adc
fadd
adc
icebp
shl
add
in
fist
ret
cmp
rol
dec
push
in
add
stos
push
dec
movs
pop
adc
add
es
ss
ret
sbb
inc
rep
gs
inc
add
dec
push
xchg
jge
push
test
cmps
inc
or
ins
gs
enter
fdivr
lahf
pop
lds
jb
xor
sub
cmp
mov
jae
inc
mov
or
loop
(bad)
jl
and
ja
push
sahf
xchg
test
sahf
test
inc
(bad)
or
jle
cld
ins
lahf
and
xchg
xchg
fwait
and
pop
or
inc
or
xlat
stos
popa
mov
and
push
pop
sub
cli
and
mov
popa
pop
ins
pushf
and
sub
loopne
and
push
add
jbe
fwait
in
jl
add
and
ret
push
or
sbb
adc
cmp
sbb
and
sub
or
adc
add
xlat
aaa
xchg
mov
dec
fwait
pusha
xor
push
mul
or
sub
jbe
adc
cmp
sub
adc
mov
xlat
adc
test
fidiv
js
or
aam
jecxz
xor
push
push
iret
mov
int3
add
or
dec
cmc
add
add
and
xchg
sub
or
sbb
(bad)
les
add
fucomip
les
jge
cmp
inc
rcr
icebp
add
add
add
cmp
add
shl
mov
test
xchg
add
mul
mov
xchg
sub
test
add
xchg
ja
icebp
popa
jl
mov
cmp
adc
popf
mov
inc
push
imul
cs
sub
pop
(bad)
mov
pushf
add
jecxz
lods
ja
sbb
mov
test
mov
shl
icebp
push
mov
and
dec
pop
dec
movs
xchg
shl
adc
retf
mov
mov
add
or
and
pop
jp
out
adc
pop
mov
repz
inc
lock
lea
add
loop
add
xchg
add
and
dec
mov
mov
jb
fdiv
and
or
dec
scas
or
jne
mov
jmp
or
mov
add
adc
adc
ret
ds
push
push
mov
inc
fisubr
movs
mov
lahf
stos
cwde
adc
ret
adc
xor
add
icebp
or
sbb
fwait
push
sub
mov
add
mov
adc
add
not
add
test
add
push
std
cdq
test
aam
push
mov
sbb
push
add
mov
pusha
iret
fmul
pop
lock
sar
xchg
pusha
dec
sbb
fs
(bad)
mov
sub
scas
icebp
test
(bad)
out
hlt
add
inc
jecxz
cld
add
fstp
pop
shl
mov
mov
xor
inc
and
inc
xor
xor
sub
or
pop
dec
jmp
or
ss
and
in
mov
ja
sub
test
pop
sub
jl
cmp
jns
jo
repz
mov
stos
sbb
and
adc
mov
ins
jae
test
sbb
push
je
ss
jns
xor
mov
nop
add
mov
or
pusha
xchg
xor
pop
inc
push
inc
fs
push
cmps
and
lods
adc
push
push
ds
fadd
stos
or
mov
lea
scas
and
or
pop
retf
addr16
enter
pop
push
scas
fdivr
movs
lods
div
and
cmp
push
ret
jmp
xchg
pop
bnd
xchg
sbb
mov
pop
sbb
dec
xor
mov
fdiv
fistp
(bad)
ret
jmp
ins
aam
and
jl
mov
xchg
add
dec
xchg
ret
(bad)
or
add
and
or
icebp
mov
mov
xor
push
adc
mov
cmps
test
dec
ret
add
push
mov
jmp
xor
in
cmp
jbe
and
out
pop
and
jle
pop
sub
or
and
xchg
lock
pop
adc
mov
lea
lea
inc
dec
inc
add
cmp
lahf
inc
adc
loop
lahf
adc
and
shr
call
sbb
movs
call
pusha
enter
mov
enter
add
jmp
mov
xor
in
add
fld
inc
xchg
jo
mov
mov
add
cmp
inc
call
mov
mov
xor
das
xor
xchg
mov
xor
adc
adc
je
pop
shl
sbb
xor
out
es
mov
xchg
or
mov
lods
pushf
(bad)
popa
xchg
call
mov
setb
rol
mov
jae
sbb
lods
std
cwde
dec
adc
sar
std
push
ss
xchg
sti
div
enter
mov
push
fs
rcr
fcmovnb
sub
fadd
stos
nop
jo
jbe
sbb
stos
dec
jne
adc
and
cmp
sbb
cdq
inc
and
or
pushf
pop
xchg
js
(bad)
ss
movs
ror
or
movs
xchg
xchg
pusha
js
aam
(bad)
(bad)
dec
nop
push
mov
ins
(bad)
rcr
popa
mov
lea
int3
push
mov
jge
jl
cmp
outs
test
push
sub
ds
pop
push
mov
push
retf
xchg
cmp
sbb
nop
mov
pop
and
(bad)
cmp
adc
mov
or
add
or
es
call
and
imul
add
adc
sub
add
popf
pusha
retf
clc
pusha
js
add
into
into
cmp
mov
inc
sbb
je
or
add
xchg
adc
add
cmp
pop
out
and
inc
sub
daa
dec
and
pushf
sbb
xor
mov
sub
inc
or
inc
push
fld
or
adc
add
mov
inc
or
loope
add
cmp
je
out
adc
and
xchg
(bad)
rol
xchg
pop
or
sbb
mov
pop
adc
lods
adc
(bad)
dec
xor
mov
mov
or
xor
sub
or
ror
pusha
mov
jae
and
sub
(bad)
push
add
or
and
fnstsw
or
mov
push
cdq
or
sbb
xchg
das
push
push
or
arpl
adc
(bad)
out
ja
jmp
or
dec
jmp
xchg
int3
adc
(bad)
jg
sbb
push
loop
xchg
iret
adc
pop
dec
mov
in
add
add
push
shl
pusha
out
fld1
pop
inc
dec
xchg
pop
imul
mov
test
icebp
pushf
inc
dec
mov
pop
cmp
inc
add
jecxz
dec
je
out
push
fs
push
je
inc
movs
push
inc
int
mov
scas
xor
push
popf
xchg
dec
xor
xlat
or
das
jns
pop
gs
add
je
xor
aaa
and
adc
add
fdivr
and
adc
jecxz
xor
repz
add
jo
add
pop
pop
sahf
pusha
outs
out
cld
mov
cmc
pop
jmp
inc
test
jo
ret
mov
pop
ins
dec
fidiv
sub
call
add
in
stc
lds
enter
mov
inc
das
sbb
loopne
push
cmp
call
in
sub
dec
add
add
clc
adc
xor
mov
cmp
mov
dec
pop
adc
icebp
inc
mov
pop
jb
add
mov
cmp
adc
fsubr
mov
or
lea
ss
add
inc
mov
mov
lahf
sti
inc
ror
fwait
sbb
push
sbb
cld
jmp
xchg
push
or
dec
ja
push
add
add
fs
mov
push
or
lds
lock
mov
push
cmp
jns
sar
cli
pop
movs
xlat
int
jp
sub
add
(bad)
pop
xlat
retf
gs
movs
mov
xchg
mov
or
push
repnz
jne
add
test
push
xor
gs
pop
jl
pop
and
hlt
pcmpeqw
pop
addr16
stc
add
dec
out
dec
jl
sysenter
movs
data16
add
push
mov
jbe
loope
sbb
enter
adc
add
push
fmul
jo
loopne
sbb
popa
aad
add
dec
push
push
in
ret
xor
add
add
push
jne
pshufw
fs
add
xchg
adc
fimul
add
stos
pop
jmp
(bad)
add
mov
call
add
aam
sar
loope
add
add
enter
xchg
xchg
mov
sbb
frstor
or
js
push
das
movs
adc
ja
aas
jo
sub
cmp
and
pop
(bad)
mov
into
sub
push
sbb
add
pop
ins
outs
imul
inc
xor
push
xor
push
xchg
movs
out
mov
pop
mov
mov
add
and
ret
xor
mov
push
inc
movs
movs
adc
loopne
pop
sbb
push
loope
push
loop
out
push
pop
pusha
pop
push
xor
xchg
jo
inc
push
jae
xor
retf
jb
test
jb
nop
retf
adc
push
or
je
xlat
inc
adc
add
inc
into
adc
or
push
lea
fwait
rol
add
ds
cmp
popa
mov
sar
in
or
inc
sub
add
(bad)
jl
fsubr
nop
jnp
adc
and
and
inc
shr
jo
cmp
adc
rol
cli
jl
jmp
not
das
or
pop
punpcklbw
mov
pop
loope
dec
lds
cwde
sbb
retf
mov
push
and
shl
adc
sub
or
dec
jae
sbb
stos
pop
popa
sbb
pop
ret
inc
pushf
jb
sub
dec
xor
test
dec
mov
sub
sbb
imul
cmps
jecxz
xor
pop
cmpps
popa
fiadd
cmp
lds
fcmove
xchg
daa
lock
sub
push
ror
js
outs
add
push
sub
hlt
lods
enter
add
pop
(bad)
mov
lahf
cld
or
dec
add
mov
push
lods
sbb
mov
jle
adc
xchg
add
sbb
mov
sub
mov
dec
pop
sub
and
and
ret
mov
nop
(bad)
aam
ss
mov
xor
hlt
xchg
push
lea
ret
ret
or
pushf
dec
dec
cmp
xor
jno
ret
imul
adc
or
fistp
dec
add
cli
mov
cmp
and
jo
dec
push
cmp
dec
cmp
mov
sete
inc
sbb
jno
test
push
ret
inc
cmp
jb
sub
push
rcl
xor
cmp
xchg
or
das
mov
push
fcmovbe
add
lock
add
into
push
inc
ror
fdiv
mov
shr
loop
jo
or
ins
fistp
cmc
xchg
popa
jecxz
ret
cmp
retf
sub
imul
inc
jnp
cmp
stos
les
mov
sbb
push
movs
(bad)
add
push
pushf
cs
je
mov
lods
sub
cmp
data16
mov
push
push
dec
call
ror
scas
sbb
daa
xor
or
sbb
lock
push
jnp
and
lea
pop
ds
mov
clc
ror
xor
cmps
ins
mov
out
retf
sbb
(bad)
push
mov
shr
push
inc
jecxz
mov
ds
lds
xor
push
adc
nop
jmp
gs
fidivr
pop
xchg
stos
mov
cmps
fidiv
arpl
popf
add
cmp
mov
xor
mov
cmp
loopne
int3
jmp
mov
and
ror
or
push
xchg
push
or
cld
sbb
fwait
xor
dec
push
inc
outs
imul
jle
push
dec
mov
sub
jo
push
sbb
aas
mov
mov
movs
out
sbb
retf
xchg
(bad)
xchg
pop
imul
cmp
inc
and
add
adc
dec
mov
push
mov
inc
je
push
mov
leave
aam
in
(bad)
inc
mov
sub
sbb
movs
add
or
retf
and
add
ret
popf
or
inc
cmp
or
out
push
jns
dec
cli
adc
sbb
cs
xor
test
mov
ins
aaa
test
adc
cmp
mov
test
cmps
dec
lss
mov
aaa
arpl
(bad)
mov
pop
push
les
popf
in
inc
jl
dec
js
sbb
mov
add
mov
lock
sbb
shl
cmp
pop
sub
lods
add
add
icebp
xchg
sar
sub
dec
outs
jo
add
dec
mov
or
sbb
fisub
xchg
adc
or
jno
fwait
dec
repz
lea
add
mov
mov
add
pop
push
pop
int
mov
adc
fcomp
je
mov
arpl
aam
mov
in
add
popf
shl
fcomp
in
loopne
jbe
xchg
and
or
shr
mov
xchg
mov
jne
jno
xchg
add
ins
inc
ins
imul
rcl
jp
mov
loope
adc
sar
jb
ret
jb
inc
xchg
pop
cmp
mov
pop
cmp
push
inc
lea
push
cmc
xchg
sar
xchg
lea
push
inc
in
hlt
test
shl
cmc
add
hlt
aad
sar
mov
js
add
ret
add
inc
xor
pop
and
adc
sti
or
cmp
ret
popa
sub
jo
ins
sbb
and
scas
inc
sbb
movs
xor
push
jmp
or
add
mov
inc
adc
jbe
or
inc
pop
add
aam
cmp
cdq
or
inc
xor
retf
daa
push
sub
or
clc
(bad)
cmp
xor
or
loopne
pop
fs
(bad)
cdq
aas
js
or
mov
push
sahf
jl
pushf
sub
call
mov
pop
mov
xlat
pop
int
pop
ror
les
and
test
lods
add
add
push
mov
je
clc
js
jl
inc
rcr
jmp
(bad)
popf
and
retf
mov
lea
dec
xor
(bad)
or
sbb
push
xchg
imul
pop
pusha
and
xor
dec
shl
add
cmp
call
aas
mov
test
or
lods
pop
adc
rol
push
cs
clc
lock
jle
mov
scas
aam
jbe
sbb
or
push
mov
or
cmp
and
fbstp
out
test
fsub
or
or
and
push
mov
fidiv
xchg
and
pop
imul
dec
cmp
je
jge
jp
repnz
adc
mov
inc
dec
xchg
ror
mov
js
int3
push
pop
in
mov
out
cmp
cmp
and
sub
sub
test
jae
xchg
loope
and
pop
fs
add
mov
xor
pop
je
mov
in
push
adc
push
fs
ds
push
cmp
xor
pop
repnz
sub
xor
sub
xchg
push
shr
pop
mov
ret
add
std
add
or
das
mov
dec
jno
leave
or
lea
jnp
cmps
inc
fdivrp
mov
(bad)
add
push
cmp
and
not
add
lods
dec
mov
mov
stos
cmc
add
push
push
ret
mov
xor
stos
add
outs
imul
test
fiadd
ins
or
pop
sbb
in
xor
dec
pop
icebp
dec
jb
sar
inc
adc
rcr
stos
pop
adc
bswap
push
jp
jmp
fdivr
cld
xor
dec
inc
fwait
adc
jne
sbb
sar
fdivr
cmp
ja
jb
or
and
test
xor
add
add
ror
repnz
pop
cwde
xchg
sar
xor
xor
ret
push
inc
fadd
enter
mov
mov
add
vmovaps
sbb
out
push
aam
lods
adc
out
or
ret
cli
add
je
js
sti
xor
push
stos
add
push
or
mov
test
call
and
xchg
(bad)
xlat
test
loopne
cmp
adc
fsub
ret
add
xchg
mov
cmps
je
shl
lods
push
sbb
sub
pop
push
pop
pavgw
nop
adc
imul
adc
and
xor
das
adc
dec
push
idiv
sbb
stc
sbb
cmc
pop
jbe
clc
mov
or
sub
mov
movs
aas
mov
mov
cmp
add
pop
mov
outs
mov
pop
mov
mov
lods
cwde
cmps
xor
or
fstp
inc
jmp
pop
fwait
mov
sub
push
sub
and
imul
jne
or
or
sbb
mov
movs
lea
sub
lock
cvtpi2ps
lock
or
(bad)
(bad)
xor
dec
fdiv
mov
ror
mov
pop
inc
or
out
pop
adc
aaa
xor
mov
dec
push
sub
es
add
cmp
jne
cmc
xchg
rol
push
jae
into
mov
nop
loope
rcr
mov
ror
movs
push
enter
add
loop
adc
dec
aas
pop
lock
mov
push
js
iret
push
stos
or
ja
sbb
mov
push
scas
push
pop
pusha
lods
mov
sub
and
(bad)
push
sbb
push
cs
cmp
adc
jmp
inc
add
fwait
xchg
jp
push
mov
sub
mov
mov
mov
fst
push
cmp
mov
mov
jle
xchg
or
xlat
jne
pop
repnz
pop
movq
adc
add
bound
push
sub
stos
dec
or
aad
(bad)
xlat
push
push
clc
shl
xchg
shr
aas
pop
sub
mov
push
push
xor
xchg
ds
xor
(bad)
xchg
xchg
pop
or
add
dec
mov
xor
and
movs
xor
nop
push
(bad)
push
push
push
je
jo
pop
fcomi
mov
or
fdivr
jbe
dec
ins
mov
and
pushf
add
or
sub
mov
xchg
outs
push
push
cmp
jne
call
mov
mov
mov
cmp
retf
call
push
sub
mov
add
jne
lahf
ja
or
jmp
push
popa
pop
adc
sbb
inc
or
cmp
inc
add
push
aam
call
jmp
iret
adc
dec
cmp
push
shl
nop
push
pop
push
daa
inc
arpl
mov
cmp
in
and
fs
lods
mov
push
aam
addr16
add
xor
adc
xor
push
mov
enter
sbb
sbb
test
lock
repnz
(bad)
out
and
test
sbb
clc
retf
and
out
xor
push
mov
adc
dec
fcomp
cmp
jecxz
fwait
sub
mov
cmp
add
lods
mov
(bad)
ins
loopne
xchg
pop
mov
or
adc
jge
scas
lea
imul
push
(bad)
loopne
push
mov
jge
popa
int
pop
mov
mov
bound
mov
or
aam
dec
int3
outs
clc
arpl
cdq
std
jmp
xchg
dec
mov
lock
shl
enter
ror
sbb
or
jno
fwait
inc
sbb
adc
loope
push
mov
mov
push
(bad)
xchg
jg
inc
es
pop
push
adc
mov
adc
jmp
add
sahf
sahf
lahf
xor
test
aam
jg
inc
mov
stos
mov
and
shl
fwait
in
sub
add
cmp
ret
push
mov
dec
adc
fidiv
push
or
or
or
loope
leave
and
pop
sbb
je
setle
rol
cmp
sbb
pop
push
sub
push
adc
xchg
pop
sub
fcomi
jl
ret
fs
dec
out
add
(bad)
adc
mov
add
push
ret
xor
cmp
dec
ror
mov
push
mov
lea
push
sti
xchg
rol
cs
out
test
(bad)
mov
outs
inc
dec
push
dec
sar
and
ins
push
adc
or
sbb
je
inc
xor
pop
dec
sbb
retf
pusha
sbb
call
fisttp
inc
mov
cmp
mov
mov
jne
outs
and
sbb
sbb
mov
(bad)
ins
dec
dec
inc
cmp
mov
mov
hlt
in
js
cmc
cmp
clc
stos
push
clc
daa
or
cmp
jae
sbb
adc
ins
cdq
movs
ret
xor
arpl
xchg
cmc
inc
lea
push
call
cmp
pop
sub
xor
jnp
fistp
push
les
add
push
adc
jnp
jmp
out
xchg
(bad)
mov
push
inc
add
cdq
nop
add
adc
(bad)
ins
rcl
retf
jo
shl
rcl
inc
xchg
sbb
xchg
or
adc
ins
enter
add
bound
out
arpl
cs
xor
sbb
mov
(bad)
cmps
add
lods
cli
pushf
aaa
and
or
lock
jbe
dec
mov
movs
js
inc
jmp
inc
inc
ror
call
les
push
xor
mov
and
mov
mov
rol
xor
add
dec
loopne
ror
pop
mov
data16
jge
mov
mov
mov
icebp
mov
(bad)
jmp
mov
jae
dec
shl
in
call
mov
inc
and
in
ds
mov
mov
pop
and
hlt
movs
add
hlt
dec
retf
loope
add
dec
cmps
jge
ret
add
xchg
dec
mov
lods
add
cmp
enter
hlt
mov
movs
jo
pop
ins
add
nop
cs
jl
xor
jnp
shl
jne
data16
mov
ror
clc
sar
ins
mov
aaa
add
xchg
je
add
or
mov
inc
adc
xchg
add
cmps
neg
adc
mov
sbb
pop
xchg
ins
fwait
repz
or
neg
push
xor
adc
jmp
cmps
dec
xor
add
inc
test
fs
leave
loope
hlt
lahf
ins
std
pop
mov
ja
push
hlt
adc
(bad)
je
mov
mov
inc
xchg
mov
stos
and
loopne
(bad)
mov
(bad)
mov
mov
and
dec
ret
loope
add
sub
adc
add
mov
cld
enter
adc
push
daa
imul
ja
xchg
dec
or
pop
rcr
pushf
rol
loope
xor
push
js
(bad)
and
fisub
fimul
pop
fbld
dec
push
das
dec
push
push
fadd
adc
sub
mov
pop
mov
loop
xchg
lea
add
cld
out
sti
or
icebp
sub
adc
mov
cmp
sub
movs
mov
call
adc
clc
cld
jo
bound
cmp
mov
cld
popa
aas
adc
dec
loopne
add
and
fmul
xor
sub
add
and
lea
icebp
add
lea
add
jo
jge
fiadd
mul
stc
cmp
sub
push
push
or
(bad)
jbe
add
sub
aad
and
inc
add
sub
fs
icebp
lea
pop
and
add
ret
xchg
call
and
jne
aad
fcom
dec
inc
jns
hlt
xchg
xor
jmp
and
fidiv
and
inc
retf
rol
fcmovu
scas
push
or
jnp
and
rol
sbb
sbb
pop
fimul
or
push
push
mov
mov
sbb
jns
cmps
mov
(bad)
ds
cmp
pusha
hlt
sbb
mov
adc
xor
and
repz
mov
add
iret
cmp
mov
test
dec
dec
push
add
aad
shr
es
hlt
pop
cmp
ret
into
push
jnp
inc
and
add
xchg
push
jae
lahf
out
dec
sbb
jmp
inc
test
aas
shl
lea
mov
push
xor
out
mov
shl
mov
movs
scas
out
rcr
movs
test
inc
dec
jmp
dec
loopne
int3
sbb
xchg
adc
add
mov
dec
loopne
rol
xor
add
je
push
xchg
add
sub
inc
enter
xchg
or
adc
jae
dec
vshufps
das
lods
mov
xor
push
into
lds
jae
jns
arpl
inc
cwde
je
ss
int3
je
inc
and
movs
fcomp
sbb
jl
xchg
cmps
jns
sub
sub
xchg
ror
sub
test
jle
mov
push
mov
jns
dec
repz
pop
daa
push
adc
aas
loopne
jo
nop
or
ret
std
fdivr
clc
sub
mov
(bad)
loop
fdiv
mov
shl
pop
cmp
push
fbstp
dec
cmps
rol
adc
pop
movs
sbb
jge
outs
(bad)
js
arpl
shl
(bad)
lods
pusha
inc
mov
mov
arpl
push
adc
mov
xchg
fsubp
pop
(bad)
mov
or
bound
cli
repnz
in
mov
or
jnp
pop
icebp
add
cmp
in
call
mov
cmp
lock
adc
add
cmp
sbb
add
add
or
daa
sub
inc
sti
add
test
ret
mov
inc
bnd
sahf
clc
mov
jmp
add
cmp
std
jb
add
or
cli
xchg
jae
mov
je
mov
mov
pop
add
cs
push
cs
sbb
ja
outs
aaa
loop
mov
jge
add
lock
enter
stc
or
dec
movs
imul
lds
rcl
xchg
inc
sbb
add
les
pushf
add
cwde
clc
pop
and
rcl
inc
pushf
jb
out
inc
mov
les
das
ja
mov
aaa
(bad)
(bad)
ja
mov
mov
xchg
mov
cmovs
pop
jmp
cmp
adc
movs
and
pop
sub
adc
jge
addr16
mov
pushf
in
sbb
and
inc
sub
xchg
add
iret
lea
jno
movs
scas
inc
jno
aad
test
push
add
sbb
aas
cld
lea
mov
(bad)
lods
pushf
ins
inc
or
pop
xchg
push
inc
jmp
cmp
shl
imul
add
add
pop
add
push
add
fnstsw
nop
hlt
ja
dec
loopne
or
mov
sbb
pop
xor
js
push
xchg
push
xchg
inc
rcl
aaa
dec
xor
ja
adc
and
movs
jb
pop
je
nop
sbb
mov
(bad)
in
jecxz
adc
pushf
dec
mov
xchg
ins
mov
outs
adc
jae
add
adc
adc
popa
add
retf
mov
push
jae
sbb
out
int3
loope
xchg
sub
pushf
loop
xchg
test
je
loopne
xchg
sub
cmp
and
sub
shr
push
inc
in
mov
pop
adc
mov
mov
or
test
cmp
sbb
push
add
pop
sbb
sbb
mov
aad
leave
dec
imul
or
push
push
jg
sbb
stos
test
cmp
add
xchg
mov
mov
jnp
jne
jmp
inc
xchg
in
sub
stos
lahf
xchg
and
xchg
push
fiadd
into
adc
(bad)
fistp
adc
loope
sub
push
sbb
scas
sar
sbb
push
(bad)
xlat
enter
and
sbb
and
inc
(bad)
push
pop
dec
mov
sar
dec
loope
jno
imul
inc
pushf
loope
cmp
(bad)
mov
mov
icebp
or
int
movs
(bad)
repz
sbb
test
xchg
xchg
and
inc
pop
push
xor
test
jb
test
xchg
ins
mov
pop
sbb
shr
add
mov
adc
daa
and
shl
push
adc
jmp
jmp
sub
test
ret
or
fnstsw
lods
mov
push
sub
dec
(bad)
mov
iret
cmp
push
and
add
mov
nop
push
push
rcl
add
cs
add
and
mov
or
rcr
add
mov
hlt
cmp
ror
or
add
popf
inc
in
xchg
out
adc
popf
js
mov
sub
mov
aas
enter
movs
mov
das
inc
lahf
add
in
adc
or
or
and
out
test
mov
inc
push
mov
sbb
xor
shr
and
or
lods
inc
nop
mov
cmp
xor
mov
jmp
add
inc
bnd
mov
(bad)
cmp
mov
sub
stos
iret
(bad)
xor
popa
and
xor
sbb
jmp
loopne
je
adc
and
add
or
and
pop
add
lods
imul
jno
pop
aad
mov
fst
pop
(bad)
xor
push
mov
jnp
in
mov
adc
or
inc
or
fidivr
or
stc
xchg
and
scas
sar
scas
push
cwde
rcr
lds
sub
dec
add
jae
call
pop
outs
cmc
test
or
push
or
dec
cmovbe
mov
add
(bad)
mov
imul
or
js
or
pop
push
push
mov
dec
xor
mov
add
push
dec
xor
jmp
sti
dec
jmp
xchg
in
xor
and
sar
mov
xchg
nop
sahf
rcl
adc
idiv
pop
lea
jecxz
das
or
add
inc
fmul
idiv
nop
(bad)
stos
xchg
(bad)
clc
xor
pop
jb
jmp
int3
jbe
mov
mov
fld
aas
jnp
call
or
lea
pop
jmp
mov
rcpps
mov
cmp
pop
jnp
pop
out
fisub
in
sub
je
je
adc
jge
addr16
aas
jge
and
or
mov
test
jb
pop
jmp
xchg
clc
fld
adc
mov
data16
test
aas
xor
imul
xor
stos
mov
jns
hlt
inc
push
and
cmp
pop
add
clc
add
or
and
jl
movs
(bad)
ins
dec
fadd
aam
aam
pop
xor
sbb
icebp
stc
jp
sub
jmp
push
dec
adc
xchg
lock
fadd
ins
or
dec
sub
in
or
mov
rol
add
adc
and
loopne
(bad)
pop
mov
jne
in
in
mov
cmp
test
test
mov
es
xchg
mov
not
cmp
std
cmps
ins
je
aam
mov
push
xchg
mov
pop
addr16
push
fnstenv
jne
or
dec
fld
adc
push
ins
ins
loope
pop
ficom
jmp
in
fbld
and
sub
inc
out
xchg
out
inc
adc
jns
pop
add
out
pop
or
loope
jecxz
mov
out
jnp
lods
ror
or
inc
in
or
jb
dec
and
iret
fcmovnb
mov
adc
sbb
push
jo
add
or
xor
sbb
fs
push
cmp
push
dec
mov
xchg
push
mov
xchg
bound
mov
rcl
sti
push
fstp
push
inc
push
imul
inc
pop
jno
xchg
push
ror
push
retf
dec
xchg
retf
ror
sbb
xor
xlat
mov
cdq
sub
mov
xchg
icebp
rol
mov
mov
sub
lds
shr
push
mov
aad
jnp
push
push
inc
cmps
pop
mov
fsub
pop
movs
jae
pushw
call
or
or
dec
cmp
sbb
xor
int3
imul
pop
mov
icebp
adc
adc
(bad)
xor
cmp
inc
add
mov
mov
rcr
pusha
add
xchg
dec
in
sub
xor
pop
movs
ret
cwde
fnstenv
xor
adc
add
or
jbe
shl
and
lds
daa
sar
jl
xchg
clc
adc
or
test
or
sbb
popf
jo
in
dec
mov
jl
inc
or
test
lock
pop
mov
adc
jmp
adc
nop
push
mov
adc
jg
push
or
(bad)
pop
inc
movs
add
popa
nop
int3
xor
xchg
cmps
test
xor
fcmovbe
pop
movs
ins
push
add
xor
pusha
cmp
cmp
cli
inc
push
mov
or
mov
shr
mov
adc
push
fst
das
cli
xchg
push
(bad)
inc
loope
int3
cmp
jae
ins
mov
retf
lock
movs
cmp
cmps
popa
push
ret
cwde
cdq
in
scas
popf
xor
dec
or
cmp
bswap
push
sbb
and
sahf
sub
loopne
dec
rcl
pop
adc
inc
jmp
cmp
sbb
inc
(bad)
jo
cmp
loopne
xor
adc
ss
inc
sbb
jmp
sub
ins
and
gs
nop
out
xor
aaa
test
pop
dec
jns
aam
jne
out
dec
and
push
jg
xchg
adc
add
xchg
dec
popf
imul
cmp
xor
xchg
loop
mov
pop
and
ins
movs
or
das
mov
add
cmp
iret
pop
les
and
retf
popa
xor
je
adc
jne
leave
pushf
mov
shrd
push
inc
(bad)
(bad)
iret
dec
dec
rcl
pop
jae
inc
and
pop
adc
sbb
add
jmp
pop
lods
add
or
mov
shr
das
popf
adc
or
sbb
fisttp
enter
pop
imul
cmp
adc
jne
fidiv
test
rcl
jp
sub
dec
adc
ins
arpl
cmp
sub
inc
jne
imul
mov
pop
push
push
or
add
inc
out
fiadd
mov
ins
jbe
mov
scas
fsubr
inc
push
push
enter
lods
ret
jns
push
in
xchg
adc
jns
iret
je
pop
dec
(bad)
push
or
push
adc
loopne
pop
sbb
mov
push
fist
repnz
mov
dec
fdivp
(bad)
loopne
rol
xchg
inc
xchg
jb
fld
ror
adc
call
xchg
sub
add
pop
sbb
add
and
hlt
daa
and
pcmpgtd
pop
jo
outs
pop
adc
push
adc
aam
pushf
adc
mov
or
or
lods
xor
mov
jl
loopne
rcl
jl
jmp
mov
jp
sar
lea
aaa
cmp
inc
mov
mov
xor
das
inc
pop
and
add
and
ins
jl
cld
mov
jmp
fnstsw
lea
ret
push
mov
adc
mov
or
(bad)
xchg
xor
aam
retf
movs
sub
call
imul
xor
js
inc
mov
push
call
xchg
jae
cmp
das
jp
sub
xchg
je
sbb
pop
adc
test
xor
mov
rcl
mov
push
cmp
mov
adc
lds
loopne
adc
xchg
sbb
dec
es
inc
ret
adc
shl
sbb
lea
adc
cmps
sbb
and
js
push
adc
mov
cs
shl
int3
xchg
sub
inc
push
push
test
mov
in
addr16
push
fcom
dec
sub
mov
shr
test
sbb
adc
jg
add
icebp
cmp
mov
mov
clc
test
push
lods
mov
cmp
jg
jl
adc
aad
cwde
or
sub
sbb
push
push
jle
dec
es
movs
adc
pop
ins
xchg
push
test
cld
shr
mov
retf
movs
(bad)
enter
aaa
mov
out
cmp
dec
(bad)
add
adc
sub
or
popa
(bad)
mov
xor
add
jl
cmp
jg
pop
inc
mov
inc
scas
rol
jmp
pusha
mov
pop
sub
inc
cwde
jo
add
js
pop
xchg
outs
js
dec
jo
movs
scas
mov
int3
inc
sti
fsubr
test
jge
je
inc
add
ins
int
xchg
cli
inc
sub
and
push
call
test
int3
lock
xor
and
adc
fdivr
retf
sbb
and
dec
test
add
pop
(bad)
cmp
xchg
cmps
les
ror
in
scas
outs
and
and
fs
aad
dec
lahf
mov
ins
add
xchg
mov
scas
je
sub
cmc
xchg
nop
outs
mov
sbb
out
jmp
jmp
xor
add
arpl
out
cwde
(bad)
dec
inc
push
test
leave
push
into
daa
or
adc
pop
jp
mov
pusha
jecxz
inc
pop
inc
sbb
(bad)
and
scas
lea
and
pop
ss
ret
test
push
and
sub
shl
inc
dec
fidiv
and
cmp
xor
sti
enter
nop
sar
lds
mov
enter
add
adc
ins
jns
pop
sbb
pop
test
cld
jo
enter
mov
mov
pop
mov
inc
and
cmp
mov
ins
push
push
adc
jp
adc
adc
test
sahf
ins
push
pop
repnz
es
mov
jbe
push
movs
test
mov
xchg
out
repnz
enter
or
xchg
or
push
dec
jle
jge
fsubr
cs
mov
pop
ja
adc
fsub
push
adc
ret
push
ss
outs
or
and
test
pop
and
and
ret
div
or
adc
add
lea
cmps
push
adc
imul
call
push
aam
add
js
(bad)
or
dec
cmp
sahf
sbb
adc
popf
ja
pop
neg
pop
adc
inc
popa
fist
(bad)
inc
xchg
fnstcw
cmps
cld
jp
out
mov
nop
in
add
push
sbb
aas
cli
repz
lea
or
mov
sbb
iret
scas
das
mov
push
xor
or
hlt
push
test
aas
xor
pop
sar
push
dec
jns
pop
cwde
mov
ror
test
jg
mov
dec
sbb
add
mov
mov
pop
add
rol
imul
es
xor
jmp
ret
cmps
pop
mov
sbb
add
jno
fld
int3
mov
pop
mov
add
xchg
aad
ja
dec
es
jmp
or
mov
push
xor
and
mov
xchg
or
cmp
inc
mov
jbe
inc
add
sbb
cwde
mov
xchg
mov
dec
xor
fs
rol
pop
jmp
add
daa
adc
sbb
in
add
inc
sub
dec
in
retf
sbb
nop
add
or
lea
pop
cs
or
pop
cmp
mov
ret
mov
call
or
dec
movs
mov
xchg
test
mov
int
movs
add
mov
adc
sar
mov
pop
inc
cmp
jne
cmp
inc
push
sbb
pop
cmp
push
push
push
push
or
mov
bound
ficomp
ins
dec
iret
mov
jns
(bad)
ret
push
cmp
mov
fcmovnu
dec
mov
(bad)
fdiv
xchg
cmp
dec
jo
movs
pushf
js
push
imul
and
loopne
aam
cmp
ins
pop
call
test
fistp
cmp
add
ss
or
push
enter
xor
dec
sub
std
sub
or
jl
loope
xor
inc
inc
mov
sbb
mov
test
adc
pop
or
jns
add
cwde
push
add
push
mov
mov
add
clc
push
arpl
ret
push
xor
ror
mov
add
pop
aad
nop
dec
push
lods
mov
xchg
mov
xor
xor
and
xor
test
test
fs
shld
mov
sbb
fisub
sar
push
pop
xor
es
cmp
shl
add
pop
dec
out
pop
pop
scas
daa
ret
pop
not
xchg
or
bound
aaa
or
or
dec
int3
iret
mov
(bad)
aas
lock
fwait
xchg
(bad)
aas
adc
scas
cs
push
pop
pushf
cmp
je
sbb
push
movs
mov
(bad)
jmp
sub
pop
dec
sub
add
inc
cli
and
lea
enter
cmp
jmp
fistp
adc
imul
push
enter
pop
inc
shl
imul
cwde
dec
mov
add
jne
xchg
cwde
push
or
adc
clc
add
and
adc
icebp
push
test
inc
push
hlt
xor
dec
mov
xchg
shl
dec
cmp
ds
cmp
mov
lods
ror
pusha
or
xchg
and
xchg
clc
adc
xchg
out
push
rol
sub
xchg
xor
or
jb
add
xchg
ss
imul
xor
and
sbb
xchg
adc
and
push
adc
xchg
cmc
dec
sbb
out
xchg
push
ins
icebp
cmovnp
add
mov
adc
sub
je
movs
cmps
test
ja
mov
or
hlt
pop
push
mov
(bad)
movs
addr16
popf
add
xchg
hlt
outs
fisttp
and
iret
jns
ins
adc
mov
xchg
(bad)
xor
mov
sub
mov
push
or
xor
cwde
sti
dec
add
lods
cmp
add
cwde
sti
in
std
sbb
cmp
sub
ins
add
inc
shr
iret
cmp
sbb
fld
jo
mov
bound
jmp
add
cmp
pushf
or
cs
sbb
add
test
or
lods
stos
stc
fcomp
push
jge
add
jle
sub
xchg
ins
lods
sub
xchg
mov
pushf
les
pop
add
cmc
mov
inc
add
lahf
retf
inc
pop
add
adc
stc
outs
pusha
jp
shl
push
test
aaa
and
xabort
adc
adc
cmp
ins
push
push
adc
jo
rcl
ins
lods
adc
clc
inc
stos
jo
sbb
push
mov
faddp
pop
sub
icebp
call
test
fiadd
aas
adc
mov
sbb
ror
fild
in
sbb
jge
add
(bad)
or
mov
retf
or
xor
aas
add
jmp
cmc
test
jle
sub
push
mov
je
inc
push
ins
jb
sbb
mov
popa
leave
popa
xor
and
push
jnp
fstp
ror
add
in
retf
fidivr
jb
jo
or
xor
pop
mov
xchg
cmp
pop
inc
add
mov
in
leave
(bad)
loop
push
stos
cmp
sbb
add
sahf
sub
xor
pop
aad
lock
leave
outs
push
gs
test
test
or
ret
mov
mov
xchg
dec
inc
add
out
pop
dec
fsub
jnp
sbb
pop
(bad)
xlat
(bad)
sbb
ja
cmps
push
mov
(bad)
push
lea
(bad)
mov
call
push
push
imul
and
out
xchg
add
hlt
sbb
mov
mov
ins
loopne
mov
int3
add
dec
dec
push
or
or
in
dec
repnz
pushw
rol
push
je
mov
shr
inc
movs
mov
pop
mov
aam
test
sar
js
mov
jmp
mov
adc
add
adc
or
push
into
xor
xchg
sbb
test
mov
jne
dec
xchg
cli
ret
cmp
push
cmp
mov
dec
jo
lea
pop
cmp
mov
xor
arpl
ins
push
push
dec
ret
js
ret
fild
jno
rcr
jns
pop
inc
sub
sar
pusha
retf
hlt
sbb
retf
adc
mov
adc
stos
and
sbb
mov
out
cmovl
mov
mov
dec
movs
sti
jns
adc
xchg
and
add
clc
sub
jl
push
movs
imul
push
jl
sub
scas
icebp
frstor
push
jne
in
jmp
(bad)
mov
jne
stos
dec
ret
jmp
jbe
sar
add
hlt
add
test
ja
dec
aas
out
and
pop
xchg
push
rcl
dec
stc
inc
mov
ret
adc
mul
add
mov
mov
xchg
test
scas
sbb
rcr
ffreep
mov
xchg
xchg
mov
test
inc
xchg
adc
push
movs
push
dec
or
mov
arpl
or
cmp
push
inc
jae
add
into
add
jmp
push
je
out
xchg
hlt
ds
dec
inc
xor
adc
xor
aas
fdivp
fs
adc
fadd
inc
or
daa
mov
add
push
loopne
adc
add
mov
fcom
mov
aaa
sub
jne
mov
fild
push
xor
or
sub
pop
push
cmp
mov
std
or
jp
call
test
pop
and
je
adc
adc
call
cmp
and
jne
mov
pushf
xor
jno
add
sub
pop
adc
fs
add
cmp
pop
cmp
aaa
mov
dec
mov
or
and
in
sbb
jge
or
sbb
and
and
not
mov
gs
add
jp
mov
scas
xchg
inc
adc
xor
xor
fcom
enter
call
jnp
cmps
pusha
push
pop
call
inc
int3
add
jns
dec
pop
lods
daa
dec
loopne
mov
jo
pop
lea
ret
or
lock
or
xor
das
lds
push
xchg
in
push
sub
or
arpl
outs
rcl
and
pusha
xchg
mov
xchg
jae
les
dec
dec
jae
jne
pop
push
pushf
retf
in
or
lea
or
mov
adc
xor
xor
stos
cmp
or
add
cmp
mov
cmp
popf
mov
or
push
adc
xchg
jb
pop
xchg
dec
sar
push
xchg
(bad)
lea
xchg
xchg
lods
popa
pop
dec
sbb
pusha
test
leave
mov
dec
popf
rol
push
adc
cdq
fisubr
outs
cmp
cwde
clc
fsubr
fcomip
push
sbb
std
jne
add
push
or
or
lods
and
je
dec
mov
ds
jne
imul
mov
pop
push
add
cmp
jns
jp
test
pop
sub
xor
and
push
loope
add
cwde
das
aam
leave
sbb
fisttp
mov
pop
or
dec
add
sub
mov
call
xchg
fidiv
(bad)
repz
add
out
inc
ins
rol
ret
pop
pop
pop
jp
push
cmp
aaa
cmps
mov
int3
push
scas
in
div
adc
sbb
std
pop
xor
lock
js
stc
(bad)
out
mov
pop
push
add
and
inc
pop
movs
and
push
dec
push
xor
in
repz
add
and
jne
push
aad
jl
mov
xor
push
sub
dec
and
inc
pop
and
fcomp
pop
pop
mov
jmp
or
mov
arpl
jmp
and
push
shl
hlt
les
and
or
or
jb
icebp
stos
and
push
sbb
fadd
or
add
jmp
cld
imul
inc
call
sbb
xchg
fmul
scas
sbb
imul
add
enter
pop
lea
xchg
cmp
fild
add
pop
dec
jne
movs
and
pop
imul
test
mov
fdiv
add
xor
pop
jmp
(bad)
and
adc
inc
mov
arpl
gs
cmp
jge
push
shl
add
out
pop
jle
push
call
dec
and
xor
inc
mov
xchg
adc
mov
sti
and
add
std
adc
mov
push
scas
scas
jecxz
ins
loop
rcr
imul
pop
jge
sbb
mov
ret
sub
mov
aaa
enter
sbb
std
pop
cmp
fcomip
lods
pop
cmp
leave
pop
mov
scas
lods
xchg
out
je
cwde
jecxz
sub
push
adc
or
shl
cli
push
mov
xlat
adc
cmp
or
test
push
aas
dec
fsub
sub
in
test
or
call
es
dec
mov
cld
inc
adc
pop
aam
(bad)
call
cmp
xchg
xor
add
dec
cmp
or
into
xor
push
mov
mov
xor
js
je
mov
fcomp
lock
dec
dec
push
xor
add
ins
repnz
or
mov
sbb
fs
jl
add
push
inc
icebp
inc
sqrtps
push
(bad)
mov
add
bound
jg
dec
add
sub
inc
clc
cmp
adc
push
ins
dec
adc
ret
xchg
mov
into
xchg
ds
in
jp
xor
push
push
inc
xor
mov
dec
jecxz
add
shr
push
das
ret
push
(bad)
ja
inc
or
inc
or
pop
movs
movs
bound
data16
or
and
inc
cmp
lea
xor
popf
ins
mov
dec
mov
add
xchg
into
je
adc
aam
loopne
adc
mov
and
movs
test
cdq
jb
add
pop
cmp
jge
aad
test
rcl
inc
xlat
nop
sub
sub
fs
cmp
add
sbb
mov
jns
(bad)
ins
ins
clc
sub
or
cmp
imul
sub
and
cmp
jae
(bad)
cmp
fsubr
lds
adc
add
xor
pop
repnz
or
add
xchg
xchg
ret
xchg
loopne
xchg
adc
adc
or
mov
sub
arpl
add
jo
not
push
mov
imul
mov
and
add
mov
clc
or
and
sahf
outs
xchg
clc
mov
mov
out
add
adc
in
mov
cmp
push
xchg
jno
sub
inc
pushf
jo
add
mov
jne
popa
and
jnp
push
fisubr
pop
cmp
into
sti
ds
in
cwde
jmp
arpl
dec
mov
lds
xor
ja
mov
adc
dec
in
ret
sub
push
inc
inc
shl
out
in
jl
push
cmp
and
mov
xor
into
fst
mov
sbb
jp
sbb
test
inc
loopne
imul
sbb
ficomp
sub
sbb
retf
xlat
inc
push
cmp
jge
and
cmp
xchg
hlt
fld
push
push
sbb
dec
(bad)
test
(bad)
in
ror
and
ror
lea
fnop
mov
imul
push
lock
adc
mov
and
outs
mov
out
inc
sub
xchg
(bad)
pop
call
jmp
fldenv
mov
and
(bad)
adc
outs
(bad)
loope
je
inc
sbb
jecxz
push
push
(bad)
clc
rol
cdq
or
fwait
jne
call
push
in
sbb
inc
or
or
add
sub
xor
or
xor
jne
jp
(bad)
or
dec
mov
push
movs
push
push
and
and
push
aaa
push
mov
ret
je
xor
ss
mov
enter
push
push
test
inc
or
inc
xor
and
das
loop
xor
jo
neg
mov
scas
cmp
sub
push
cli
jb
jmp
push
fldenv
sub
loope
mov
test
pusha
pop
ja
pop
rol
sbb
xchg
push
xor
or
ins
mov
rol
inc
push
and
jne
mov
lods
int
arpl
nop
mul
in
sub
sbb
cmp
inc
ss
retf
test
jb
jmp
outs
cmps
jae
jmp
(bad)
and
cs
push
fst
or
outs
sbb
add
ret
shl
add
add
and
mov
pop
sub
jbe
loop
ret
inc
movs
xor
jo
cmp
push
rcl
mov
movs
repnz
div
out
jge
mov
mov
dec
push
(bad)
xchg
push
cmp
pusha
icebp
je
push
jbe
outs
pop
sub
aad
adc
jge
inc
iret
adc
cmp
fs
sub
inc
and
or
and
dec
jb
add
cmp
add
or
jb
fisub
and
add
adc
jl
add
push
xchg
sub
pop
pusha
in
dec
fisub
add
adc
loopne
daa
ret
cmp
sbb
cmp
adc
push
retf
add
inc
cmp
movs
in
imul
dec
movs
and
dec
add
clc
mov
xchg
jae
lods
inc
pop
jmp
rol
dec
add
nop
xor
sbb
out
xchg
shr
jecxz
fldpi
or
xor
jmp
add
gs
in
add
inc
pop
push
imul
(bad)
sbb
pop
inc
outs
pop
call
and
sbb
lock
xchg
dec
pop
adc
pop
add
popa
shl
sbb
mov
jae
mov
(bad)
test
cmps
inc
dec
push
clc
js
push
or
and
push
mov
test
aas
rol
daa
pushf
push
pop
mov
or
push
xchg
and
cwde
add
retf
arpl
(bad)
or
mov
xchg
mov
call
loopne
outs
cmp
push
mov
dec
cmps
adc
mov
pop
add
xchg
inc
add
sub
sub
push
ins
or
sub
mov
inc
jecxz
sahf
push
inc
xor
pop
inc
xor
mov
enter
mov
push
lahf
ret
dec
pusha
loope
aam
fmul
mov
push
cwde
test
cmp
mov
rol
je
sbb
(bad)
cs
es
lea
out
sub
add
pop
pop
mov
xor
and
ja
xor
ins
fs
sbb
xor
out
xor
adc
add
add
xchg
mov
push
pop
ins
loopne
imul
pop
sub
js
jbe
sbb
cmps
mov
push
push
sbb
xor
add
and
pop
adc
and
or
cmp
pop
pop
dec
mov
push
jb
add
or
cmp
cmp
inc
clc
lods
add
pushf
test
and
popa
bnd
lahf
inc
shl
retf
push
rcl
sahf
jp
inc
sub
pop
ins
and
and
sub
movs
nop
xor
jg
ja
dec
arpl
test
and
loopne
push
pop
js
cmp
adc
or
mov
and
pop
aam
adc
test
je
fstenv
push
cmps
nop
sbb
leave
fsub
xor
push
pop
add
xchg
inc
push
push
push
shl
ins
add
adc
add
add
xor
aaa
add
icebp
jae
imul
xchg
mov
mov
movs
test
retf
adc
push
mov
inc
clc
cmp
jb
mov
mov
and
add
mov
sbb
mov
jmp
sbb
rcr
pop
and
xlat
int
cld
push
jo
push
rcr
pop
fcom
mov
mov
jmp
ds
add
data16
push
lock
pusha
mov
rcl
xchg
mov
outs
sub
or
cmp
inc
mov
js
sbb
sbb
jns
cwde
jge
inc
mov
sub
adc
inc
mov
dec
enter
jle
ja
fmul
and
inc
rol
dec
sar
mov
mov
or
push
or
jmp
rol
add
xor
cli
ja
cmps
dec
aam
fsubr
or
jle
dec
mov
push
sub
add
sahf
adc
ins
jge
inc
adc
or
icebp
sbb
push
mov
je
test
jle
cmp
ret
xchg
(bad)
mov
ret
out
mov
adc
add
adc
out
push
jns
push
pusha
test
mov
test
mov
adc
or
dec
sub
push
hlt
push
jne
add
pusha
ss
movq
push
xor
mov
xchg
sbb
mov
scas
cmp
cmp
lea
test
clc
pop
push
adc
and
or
add
jmp
pop
and
xchg
inc
jb
in
inc
add
repnz
fstp
add
fcom
pop
aam
lahf
in
mov
mov
sbb
jmp
push
jge
cmps
push
xor
pop
push
xchg
push
jg
sbb
or
push
mov
adc
lods
jl
movs
push
pop
jle
sub
or
movs
sub
mov
adc
sub
xchg
lock
mov
adc
test
dec
pop
xor
in
sar
in
mov
aad
inc
jmp
sbb
mov
ret
adc
das
(bad)
enter
mov
das
vmwrite
fmul
call
(bad)
loopne
hlt
nop
clc
mov
lock
add
or
xchg
push
repnz
and
sub
pop
pop
pop
xchg
cmp
pop
int
cmps
add
cmps
stc
mov
fiadd
push
repnz
sahf
sar
sahf
out
push
inc
xor
cs
ror
xchg
cmps
out
cmp
mov
das
sahf
out
sahf
sbb
inc
pop
outs
test
sahf
out
xchg
stos
mov
scas
stc
pop
(bad)
xor
push
stos
nop
jl
repz
fs
cmp
adc
out
inc
mov
data16
push
cs
fstp
sub
hlt
call
fadd
scas
mov
repz
pusha
dec
ss
repz
sti
or
mov
ret
sti
cmp
push
sub
inc
xor
cmp
jo
and
push
(bad)
aam
out
call
es
out
sahf
xor
push
pusha
jo
jns
out
xchg
test
fsub
sar
int
test
push
adc
push
sub
jns
out
and
lahf
out
int
and
es
div
sub
inc
pop
ss
ins
and
push
jbe
out
cmp
scas
(bad)
loop
add
cmp
repz
sbb
push
dec
bound
imul
stos
inc
and
push
fsubrp
test
(bad)
repz
mov
inc
push
xor
jns
imul
clc
and
push
retf
call
adc
push
iret
repz
sub
inc
push
data16
mov
cmp
cmp
cmp
sub
jl
jnp
sub
sbb
add
pop
(bad)
iret
repz
retf
xchg
jle
cmp
repz
inc
xor
adc
out
add
push
out
enter
mul
xor
sbb
or
cld
sahf
out
call
jns
out
xchg
dec
cmp
jl
out
sbb
and
iret
repz
retf
xchg
xchg
test
push
into
loopne
xor
cli
dec
cmp
pusha
je
mov
xchg
add
jns
test
mov
int
add
adc
mov
(bad)
hlt
push
push
push
push
mov
in
repz
xor
dec
(bad)
mov
outs
jne
fdiv
or
ss
cmp
iret
repz
pop
push
sub
out
sahf
out
mov
out
sahf
test
push
cmp
fild
jns
add
sub
mov
out
out
push
lock
es
cwde
neg
repz
js
data16
cmp
repz
repnz
rol
mov
repz
ds
push
ds
sub
imul
daa
in
sahf
out
sahf
les
jns
out
push
dec
inc
sub
xor
out
add
es
iret
repz
mov
jle
cmp
sub
mov
cmp
xchg
add
push
ds
out
and
loopne
call
xchg
iret
jnp
pop
scas
push
add
jae
div
cmp
bound
sahf
out
jbe
call
out
push
out
push
adc
cmp
shl
mov
repz
test
sbb
js
out
cmp
jp
pushf
(bad)
mov
dec
in
sbb
fisttp
inc
sub
jb
sahf
out
fiadd
push
data16
fsub
out
out
jns
cld
pop
or
adc
aaa
scas
fistp
xor
aad
rol
ss
int
add
cmp
mov
retf
mov
fst
adc
mov
add
stc
adc
rcr
and
add
aas
mov
or
aas
sub
dec
sar
inc
aam
mov
fistp
lock
scas
xchg
add
and
cmp
add
mov
popa
inc
mov
sbb
imul
mov
ins
or
arpl
arpl
out
jnp
das
and
jae
and
outs
or
xchg
je
inc
dec
inc
dec
cmp
clc
int3
xor
or
popa
je
pop
imul
ins
ins
pop
inc
push
pop
inc
sti
rcr
outs
arpl
gs
push
popa
das
dec
outs
imul
push
outs
inc
outs
fs
inc
jb
ja
rol
div
sub
ja
push
push
push
aaa
sub
and
jns
push
jo
push
push
xor
xor
cmp
push
ins
add
jb
aaa
or
fisub
xor
aaa
and
outs
mov
imul
or
jb
bound
imul
push
push
gs
inc
push
outs
push
popa
imul
movs
ss
imul
push
into
cmp
pop
fadd
push
xor
ja
and
arpl
cdq
aas
enter
and
cmp
inc
jb
popa
jns
outs
gs
mov
addr16
mov
or
mov
test
xchg
add
push
or
int3
pop
data16
lock
bound
jae
pop
mov
add
pop
js
jp
jnp
pop
gs
ins
jae
inc
bound
cmp
daa
jecxz
in
sbb
inc
gs
ins
jne
push
jnp
xor
add
adc
pop
retf
inc
arpl
add
retf
add
xchg
sbb
ja
aas
pop
add
inc
push
pop
iret
repz
fs
mov
cmp
mov
int3
sahf
out
scas
jp
push
fadd
loopne
in
lock
out
hlt
clc
cld
popf
add
cmp
repz
sbb
iret
repz
and
sub
xor
cmp
repz
inc
inc
dec
dec
neg
(bad)
repz
push
jo
pop
push
sahf
out
sahf
pop
pusha
fs
out
je
jl
test
jns
out
xchg
mov
jns
int3
fsubr
sahf
or
dec
cmp
repz
mov
out
lahf
adc
push
fs
jo
movs
lods
mov
enter
sub
jl
int
cmp
(bad)
call
xchg
jns
adc
icebp
ja
mov
pop
pop
push
jae
sub
aad
cmp
xor
jo
jnp
xor
daa
jae
fs
ins
mov
mov
sbb
je
fstp
outs
jb
(bad)
ins
sbb
gs
bound
je
ss
jb
cli
adc
cdq
mov
daa
xor
addr16
mov
inc
push
or
(bad)
and
inc
je
cmp
ds
push
and
cmp
lods
cmp
gs
pop
sub
inc
sub
sub
push
inc
inc
sub
repz
aaa
sub
das
and
in
repz
scas
push
sub
sub
pop
sahf
ja
cmps
pusha
jl
xchg
cmp
int
jnp
addr16
cmp
inc
cmp
iret
pop
pusha
jbe
je
daa
add
bound
fcomp
or
pusha
je
dec
outs
dec
mov
out
and
dec
sub
jae
mov
shl
fs
std
outs
pusha
xor
sbb
jbe
cli
es
fs
mov
pusha
lds
push
cmp
xor
jne
je
arpl
xor
int
push
fdiv
jb
jae
mov
fsub
mov
push
(bad)
mov
(bad)
cmp
aas
jne
add
pop
outs
inc
imul
jo
fsub
cmp
ins
popa
jo
gs
adc
inc
or
aas
or
imul
fs
je
test
sbb
push
push
push
dec
ja
dec
ins
adc
pop
mov
xchg
pop
pop
adc
outs
ins
or
and
jae
out
sub
mov
dec
jge
adc
(bad)
cmp
jl
add
push
jns
and
xchg
dec
lahf
or
test
mov
fsubr
or
jbe
cmp
inc
nop
aaa
mov
lock
sar
inc
mov
inc
xor
pusha
sbb
fisubr
scas
pop
mov
pusha
(bad)
in
mov
jge
push
ins
mul
and
and
mov
mov
push
shl
stos
arpl
popa
lods
ins
inc
inc
ins
or
add
sub
jnp
and
inc
dec
pusha
sbb
jecxz
sti
jb
push
jo
or
bound
and
add
retf
push
mov
out
sub
adc
out
sbb
cmp
pop
or
aaa
xor
pop
mov
pop
mov
or
pusha
xor
in
cld
add
js
js
sub
add
call
mov
add
add
pop
out
ss
mov
pop
(bad)
daa
push
and
mov
data16
retf
sub
jb
int3
push
and
ja
jo
outs
jne
sub
sub
sbb
mov
ret
sbb
in
push
ret
adc
aad
je
pop
(bad)
imul
sar
sbb
or
cmc
mov
ret
icebp
sub
ja
push
fldenv
xor
(bad)
rol
cmp
nop
gs
std
call
inc
and
lahf
xchg
add
mov
cli
lds
enter
lods
jmp
add
call
ror
mov
out
and
out
fild
ds
or
outs
inc
int
or
data16
cmp
add
inc
pop
and
dec
ret
(bad)
(bad)
(bad)
pop
ror
mov
jl
and
or
les
xchg
and
lods
dec
adc
sbb
ficom
mov
stos
pop
(bad)
or
add
rcl
(bad)
(bad)
jg
mov
sub
(bad)
and
mov
push
test
mov
pop
loopne
inc
(bad)
(bad)
fadd
inc
(bad)
imul
sar
dec
xor
inc
lock
(bad)
dec
popa
and
mov
je
pop
ror
sub
shl
(bad)
jmp
pop
popa
dec
cmp
jnp
sbb
push
add
xor
das
out
daa
push
arpl
jno
cmps
push
jmp
or
cmp
outs
sbb
inc
xor
(bad)
(bad)
jmp
inc
lods
add
jb
stc
aad
xchg
sub
cmp
lods
push
fidiv
mov
ret
stc
mov
dec
dec
jecxz
sub
and
(bad)
mov
repnz
adc
fdivr
cmp
cdq
sbb
(bad)
call
sbb
xchg
add
adc
xchg
(bad)
mov
push
or
sbb
call
pop
xchg
cmp
int3
mov
jmp
es
popf
call
sar
or
jno
push
dec
mov
push
jg
cmp
in
mov
pop
lock
(bad)
fld
fbstp
gs
(bad)
dec
ja
loopne
ins
ret
push
iret
leave
xchg
daa
push
stos
loop
daa
out
pushf
cmps
mov
(bad)
(bad)
(bad)
call
shr
hlt
lock
jg
ins
or
add
inc
ret
pop
sub
out
sbb
mov
(bad)
push
hlt
int
movs
sbb
inc
imul
push
sbb
movs
(bad)
(bad)
jmp
int3
loope
mov
xchg
push
aas
int
cmp
inc
inc
dec
push
(bad)
(bad)
(bad)
std
xchg
xchg
and
adc
push
cdq
out
inc
xor
mov
jno
inc
mov
sbb
lods
push
xchg
adc
add
sub
iret
rol
xlat
jge
ficomp
popf
fidivr
retf
fsub
(bad)
call
cmp
loop
stos
stc
outs
ja
es
or
adc
(bad)
(bad)
fild
nop
or
pop
fcmove
es
push
xchg
xchg
call
mov
cld
inc
mov
out
sar
inc
add
mov
and
and
(bad)
inc
add
cmp
pop
movs
into
xor
dec
ins
ins
mov
xor
push
adc
and
xchg
xlat
jmp
test
xchg
shl
dec
push
scas
sub
xchg
ror
cli
mov
xchg
call
sub
shr
pop
imul
(bad)
fbstp
inc
sbb
dec
pop
outs
push
scas
(bad)
in
stos
mov
out
(bad)
mov
pop
repnz
stos
xor
mov
or
dec
push
xor
popf
(bad)
call
fild
cmp
js
fwait
xor
lds
es
(bad)
(bad)
(bad)
call
sti
scas
rcl
test
dec
fwait
clc
push
xchg
stos
or
scas
add
sub
imul
(bad)
(bad)
call
aad
jbe
ror
(bad)
call
lock
je
pop
cmp
(bad)
(bad)
(bad)
call
dec
in
mov
adc
retf
xchg
call
jb
mov
stos
nop
pop
and
xor
(bad)
(bad)
(bad)
(bad)
jmp
outs
call
xchg
or
lock
repnz
inc
mov
leave
popf
xchg
or
mov
inc
imul
cmps
adc
pop
sar
jp
in
mov
jmp
fcom
in
int
lds
mov
sar
(bad)
(bad)
call
mov
mov
add
leave
dec
sbb
dec
jns
or
shr
(bad)
(bad)
clc
and
call
into
jb
(bad)
js
mov
xchg
in
cli
call
pop
ins
outs
jge
fwait
out
cmp
mov
(bad)
inc
push
(bad)
call
fidivr
pop
inc
adc
jne
es
addr16
(bad)
(bad)
call
arpl
std
jecxz
cmp
xor
mov
pop
and
inc
pop
fcom
add
stos
mov
stos
(bad)
jge
das
add
dec
mov
cmc
loope
dec
mov
push
or
pushf
out
dec
addr16
mov
test
cmp
ret
int3
xchg
sub
aas
cmp
(bad)
(bad)
(bad)
push
mov
and
js
fild
rcr
ds
pop
in
ja
retf
pop
push
das
add
dec
inc
and
(bad)
push
or
loope
mov
cs
mov
dec
outs
jp
mov
ja
dec
ror
shl
clc
test
addr16
lods
mov
enter
(bad)
(bad)
call
dec
pop
cmp
fst
call
sbb
or
stos
xlat
jl
das
lock
pushf
movs
fwait
jne
mov
pop
push
xchg
aam
icebp
add
jb
sbb
test
dec
ss
stos
js
sub
jmp
adc
jg
push
add
mov
inc
sahf
mov
ret
jl
bound
(bad)
jmp
bound
fld
adc
stos
lea
xchg
xchg
test
shl
rol
loope
mov
push
icebp
lods
fadd
sub
cmp
jae
ins
jmp
fwait
push
clc
repnz
mov
and
xlat
test
fst
iret
add
xchg
cmp
push
call
std
(bad)
call
sti
pop
pop
das
cmps
dec
mov
in
bound
inc
data16
aaa
add
adc
int3
repnz
test
rcl
ja
cmc
shl
jbe
jmp
dec
hlt
xor
icebp
mov
adc
dec
adc
dec
jae
(bad)
pusha
inc
adc
mov
(bad)
push
and
fimul
inc
dec
stc
(bad)
ins
(bad)
(bad)
(bad)
cmp
mov
in
xchg
push
les
bound
jmp
mov
dec
adc
ror
ss
sahf
sub
hlt
or
dec
repz
cmps
movs
adc
mov
pop
mov
xor
mov
xor
jg
(bad)
call
jbe
and
int
ds
(bad)
jo
pop
mov
std
clc
(bad)
(bad)
call
int3
inc
clc
fnstsw
out
xchg
imul
icebp
mov
scas
stos
mov
sbb
add
scas
jmp
sbb
xlat
loope
das
out
or
jb
(bad)
(bad)
(bad)
call
test
inc
pop
sub
into
fadd
sub
fld
lea
daa
lods
shl
mov
mov
push
mov
(bad)
jg
(bad)
jmp
inc
fmul
popf
(bad)
fadd
mov
xor
pop
das
xor
cli
jmp
adc
mov
vmwrite
std
ss
jbe
loope
bound
push
mov
sbb
(bad)
jg
add
adc
aas
cs
mov
loop
(bad)
(bad)
(bad)
jmp
mov
aad
popa
xchg
and
or
sub
pop
pusha
push
mov
jae
(bad)
(bad)
(bad)
push
pusha
(bad)
retf
fild
aaa
xchg
data16
dec
sbb
lea
ss
xor
sub
mov
and
push
fild
call
cdq
sub
fstp
out
mov
cmp
test
std
and
iret
retf
(bad)
jg
xlat
movs
lea
fmul
outs
or
je
push
mov
push
(bad)
je
aam
(bad)
mov
outs
arpl
push
int3
pop
mov
jmp
les
fstp
icebp
mov
jmp
stc
fdiv
arpl
sub
xchg
mov
ja
cmc
(bad)
mov
mov
mul
out
push
in
inc
pop
cli
in
lods
rcr
int3
scas
test
(bad)
(bad)
(bad)
aas
pop
popf
shr
call
outs
xchg
imul
cmp
xor
cmp
mov
cli
(bad)
(bad)
push
dec
daa
mov
fimul
cmp
mov
sub
jle
in
cdq
push
mov
mov
add
add
add
push
pop
and
int
ins
or
or
push
push
or
fwait
int
or
add
push
nop
setg
mov
int
push
ldmxcsr
mov
adc
adc
fild
add
adc
or
pop
pop
jo
int
aaa
sbb
sbb
jecxz
xor
or
or
std
add
mov
loope
dec
and
sbb
fdivr
sub
mov
mov
sbb
jne
pop
dec
fild
ficom
pop
jnp
pop
jnp
scas
jns
es
pop
je
mov
bound
mov
pop
mov
inc
cmp
data16
outs
neg
mov
addr16
jo
mov
jbe
repz
rcr
(bad)
push
jbe
fs
jge
shl
imul
out
arpl
push
int3
adc
add
add
adc
add
pop
lds
pop
add
dec
add
mov
push
es
add
jbe
pop
scas
popf
jns
inc
push
add
jbe
in
inc
push
and
jae
sub
jne
fld
fs
jmp
cmp
in
add
add
add
iret
push
or
or
fst
aaa
or
outs
(bad)
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imul
push
and
fcmovne
repz
push
pop
and
fucomi
or
pop
dec
dec
sahf
out
sub
pushf
(bad)
cmps
mov
into
aas
xlat
aam
enter
pop
push
pop
daa
jae
push
add
fbld
inc
outs
jb
inc
cmp
push
pop
push
jb
arpl
inc
add
in
out
ss
sbb
in
lea
mov
nop
xchg
xchg
leave
and
mov
aas
pusha
bnd
inc
add
popa
retf
outs
inc
outs
setne
push
jno
add
and
fstp
fnsave
in
std
push
shl
fwait
int
push
pop
pusha
mov
imul
into
pop
cmp
aaa
cmps
dec
sub
dec
lea
jae
dec
sbb
adc
mov
outs
popa
outs
movaps
inc
push
cmp
jae
push
das
push
inc
adc
scas
fs
sub
add
jbe
aad
mov
push
fimul
in
push
push
popa
je
fs
test
sahf
jnp
cmovbe
dec
outs
adc
neg
(bad)
pop
jb
outs
adc
daa
test
cmc
loopne
ss
or
mov
ins
inc
jo
dec
sub
out
ins
push
jne
add
ss
gs
jo
outs
jbe
xor
arpl
jns
jb
(bad)
ja
mov
jle
dec
mov
sbb
jae
xor
into
test
gs
cmps
outs
adc
arpl
in
scas
and
push
push
cmp
dec
das
fs
jns
add
dec
and
sub
dec
cmp
cmp
(bad)
rcr
ret
mov
test
pop
push
jo
jae
mov
outs
fs
jg
pop
mov
and
fidiv
pop
(bad)
or
jbe
daa
dec
cmovbe
div
push
jb
jo
dec
push
dec
jge
jne
mov
ins
aas
push
cmps
gs
push
jle
dec
bnd
cmp
ret
jbe
push
mov
jbe
jns
jb
out
jnp
(bad)
push
out
imul
ins
fucomi
pop
test
sub
sbb
ins
shl
outs
pop
das
inc
imul
dec
(bad)
into
out
in
dec
add
add
push
shr
add
dec
add
and
push
dec
add
mov
faddp
rol
mov
push
hlt
clc
repz
out
mov
add
or
repz
adc
and
cmp
jns
idiv
push
pop
pop
pop
pusha
out
sahf
out
push
out
sahf
js
or
dec
movs
push
lods
mov
enter
repz
call
test
cld
mov
rcl
sbb
and
sahf
out
sub
cmp
dec
out
sahf
out
fs
cwde
sahf
out
sahf
lods
mov
cmp
out
lock
mov
or
repz
repz
sub
inc
out
addr16
push
pusha
pop
mov
push
js
sahf
out
sahf
xchg
test
int3
loopne
xor
add
in
sahf
push
mov
and
sub
and
adc
inc
scas
in
adc
dec
add
add
adc
rol
add
lds
sub
add
out
fdiv
out
mov
mov
fld
sbb
add
add
push
test
pop
shr
dec
pop
push
pop
push
shr
sbb
cmps
add
inc
add
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
(bad)
call
je
add
add
push
pop
or
or
or
push
movups
adc
adc
(bad)
(bad)
call
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
and
aaa
cmp
cmp
cmp
ds
inc
popa
bound
addr16
(bad)
jmp
ins
outs
outs
jo
jb
je
jbe
js
jp
pop
push
lock
lods
pop
pusha
aas
jnp
jge
jg
aas
stos
sbb
inc
inc
inc
inc
mov
(bad)
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
aas
or
and
dec
pop
add
dec
sahf
addr16
mov
or
jns
ja
fimul
lock
shl
out
cmp
out
clc
ret
ss
push
loop
mov
push
push
mov
les
sub
mov
xor
cmps
xchg
sub
mov
inc
xor
sbb
inc
mov
cmp
adc
xor
pop
jno
arpl
popa
test
sbb
push
(bad)
loopne
lods
mov
outs
cmp
inc
(bad)
cmp
mov
inc
pushf
pandn
push
leave
rcr
aas
scas
mov
pop
xchg
xor
cmps
es
jae
outs
(bad)
dec
mov
dec
jg
pusha
stos
lea
push
repnz
jae
outs
xor
xor
into
jg
mov
inc
mov
adc
sahf
jne
or
mov
cmp
pop
and
and
sti
and
mov
imul
inc
fisub
cmp
mov
mov
mov
outs
cmps
bound
pop
(bad)
mov
and
fcom
push
fwait
pop
(bad)
mov
mov
xchg
pop
pop
cmp
nop
ffreep
popa
jb
push
les
add
cmovbe
and
add
lods
push
clc
in
inc
jne
jo
je
popa
arpl
dec
out
outs
fild
jae
push
imul
jae
outs
daa
int
inc
jae
imul
dec
inc
dec
popa
ins
in
dec
popa
jo
das
aam
jne
ins
dec
popa
push
outs
inc
dec
inc
add
xor
les
xchg
daa
push
bound
xor
in
lock
sub
xor
pop
xor
push
pop
push
push
in
bound
mov
cmp
add
sub
ins
lods
push
xchg
and
dec
cmp
inc
or
jb
in
jo
mov
push
or
pop
or
fs
ins
pcmpeqb
jl
xchg
mov
outs
pushf
adc
jb
enter
push
movs
sbb
mov
mov
jb
enter
push
fcomp
in
pop
mov
in
and
and
and
xchg
and
mov
jb
sub
xor
cmp
enter
inc
sub
sbb
jb
pop
aaa
cmp
ds
and
jl
test
inc
cmp
enter
inc
movs
inc
lods
inc
and
sbb
dec
mov
jb
enter
dec
fcom
push
pop
mov
in
push
hlt
pop
cld
gs
movs
jg
in
and
add
add
sbb
sbb
sub
in
xchg
and
or
sbb
jb
or
or
enter
mov
adc
jb
les
rcl
adc
pop
mov
sbb
cmp
enter
sbb
sbb
mov
pop
push
and
ins
jb
enter
and
sbb
pushf
es
mov
shr
enter
sub
sub
sub
cld
das
movs
or
adc
and
sub
cmp
inc
cmp
jb
push
cmp
cmp
and
cmp
inc
cwde
inc
cmp
enter
inc
enter
das
inc
mov
inc
in
dec
clc
dec
movs
add
in
xchg
dec
adc
sub
mov
xor
inc
push
dec
push
pop
push
in
xchg
and
test
push
cmp
ins
movs
xor
enter
loopne
sbb
jb
in
or
adc
xchg
and
sbb
sub
xor
cmp
enter
cmp
jl
and
(bad)
sbb
imul
jb
enter
or
or
or
mov
clc
cmp
in
xchg
xchg
adc
cmp
inc
or
or
sbb
xchg
xchg
inc
add
nop
add
pop
sbb
jb
test
mov
ror
enter
fdivr
lock
test
or
jb
or
sbb
sbb
cmp
add
or
jns
enter
cmp
inc
mov
or
jns
enter
or
cmp
add
xchg
inc
mov
or
or
sub
repnz
or
xor
pop
push
cmp
ins
add
or
nop
add
pushf
or
cmp
mov
rol
int3
or
or
xchg
das
in
dec
lock
push
nop/reserved
stos
or
adc
and
inc
dec
clc
repnz
pop
stos
sub
addr16
(bad)
add
cmp
cmove
push
mov
sbb
jb
mov
adc
xchg
and
rcr
cmp
mov
mov
int3
in
inc
mov
mov
sub
enter
fwait
xchg
stos
adc
pop
into
into
cmps
ret
mov
pop
xor
cmovo
and
aas
dec
mov
add
pushf
popf
dec
out
pop
jo
(bad)
xchg
cmp
ins
add
push
xchg
mov
cmp
mov
stos
sbb
fwait
add
inc
jg
mov
ss
mov
dec
xchg
or
in
mov
jb
int
add
adc
sbb
enter
sub
sbb
jb
dec
(bad)
pop
shl
shl
mov
or
mov
jle
frstor
mov
xchg
and
rcl
fsub
lods
hlt
fild
xchg
and
sbb
cmp
enter
ficom
(bad)
in
fld
dec
sub
cmp
ins
sub
test
cmp
ins
or
nop
dec
ins
cs
jae
cmps
mov
or
mov
shr
mov
addr16
lock
cld
jg
or
scas
enter
or
adc
aas
mov
in
and
ins
or
sbb
cmp
inc
push
pop
pop
sbb
jb
push
popa
je
pop
push
jl
ss
into
mov
pcmpeqb
adc
xchg
mov
jno
push
imul
jb
enter
js
cmp
pop
adc
hlt
aas
mov
mov
push
loop
push
inc
xor
int3
jns
jbe
enter
addr16
in
das
dec
sbb
jb
mov
ins
aaa
cmp
jb
or
aam
addr16
mov
test
popf
(bad)
data16
xchg
and
push
ja
sbb
into
pop
pop
xchg
punpckhbw
mov
fwait
cmps
adc
mov
jb
xor
adc
cwde
push
movs
adc
movs
push
cmpxchg
pushf
dec
lea
fsubr
pop
fwait
sbb
mov
clc
pop
pop
cmp
inc
mov
mov
test
cmps
sbb
sub
sbb
xor
outs
or
inc
mov
mov
jecxz
xchg
and
retf
pushf
(bad)
xchg
das
addr16
sbb
lods
pop
stos
and
jnp
enter
(bad)
mov
add
sbb
sbb
mov
jp
inc
cmp
cmps
(bad)
xchg
and
xchg
and
scas
pop
sbb
into
shl
inc
sbb
xor
mov
pop
xchg
bound
push
mov
in
fldcw
daa
fsubr
mov
call
add
adc
enter
and
dec
adc
inc
inc
push
jo
adc
imul
outs
xor
add
rdpmc
mov
aam
mov
lea
add
add
pcmpeqd
aas
movups
das
pop
mov
ret
adc
js
push
adc
inc
pop
(bad)
call
adc
xor
pop
cmp
or
psubd
pushf
lock
jg
stc
into
xchg
(bad)
jmp
add
or
xor
(bad)
(bad)
jmp
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
jbe
mov
out
and
mov
clc
data16
or
ss
or
sbb
xchg
std
jae
and
gs
in
add
jno
ins
rep
push
sar
iret
mov
idiv
and
aas
adc
or
dec
jmp
pop
add
cmp
xor
pop
jg
imul
mov
or
out
arpl
inc
cwde
ror
(bad)
icebp
mov
addr16
xchg
imul
outs
mov
popa
arpl
jae
jb
mov
in
test
jl
sbb
push
sub
fidiv
(bad)
outs
inc
imul
xchg
fisubr
loope
or
cld
cmp
mov
ficomp
sahf
rcr
xor
out
jb
mov
sub
ds
idiv
mov
icebp
push
or
pop
push
pop
cmps
aas
fist
mov
nop
ds
iret
push
(bad)
aas
xchg
ror
push
shl
inc
ret
sub
pop
inc
fprem
fstp
cld
push
call
jo
sub
sub
in
pop
pushf
mov
aam
push
push
aas
loopne
(bad)
jg
jmp
sbb
mov
loop
lds
rep
(bad)
int
(bad)
jmp
push
pop
jae
mov
lahf
jge
and
ret
pop
dec
lea
mov
jp
(bad)
std
(bad)
sti
mov
jle
dec
or
mov
int3
in
cmp
and
mov
mov
xchg
xor
icebp
ss
push
mov
mov
and
push
sub
loopne
add
jmp
sub
jmp
ins
shl
repz
(bad)
(bad)
and
lea
mov
cmp
fwait
ins
sar
(bad)
cmp
cli
loope
lea
or
or
mov
push
shl
(bad)
out
aas
mov
sbb
add
(bad)
push
ret
ja
inc
or
mov
test
or
jns
jmp
mov
jb
jns
pop
push
mov
les
xor
mov
in
xchg
into
(bad)
cli
and
push
push
push
cs
xor
adc
(bad)
aas
(bad)
aas
sub
fbstp
neg
sbb
push
adc
sub
mov
mov
cdq
xchg
cld
sub
in
fiadd
sub
(bad)
aas
int
inc
bound
mov
sbb
xchg
mov
lds
xchg
sbb
jle
mov
mov
xchg
lock
or
int3
(bad)
jg
aaa
fbld
ss
out
fistp
aas
in
(bad)
jp
and
mov
inc
pop
jmp
xor
inc
add
movs
outs
retf
sub
push
lds
stos
fs
imul
fidiv
jl
mov
jb
js
and
xor
mov
jl
fwait
mov
adc
aam
xchg
jb
out
inc
mov
nop
adc
jl
jmp
adc
aas
or
sbb
std
stos
pop
lahf
jae
xlat
mov
sar
pusha
jle
cmp
xchg
repnz
dec
aas
xchg
adc
push
pop
jmp
pop
(bad)
fistp
sbb
jge
and
or
fistp
or
and
pop
push
call
(bad)
adc
out
push
ds
push
xor
fisub
mov
cld
stc
fwait
(bad)
xor
xor
int
inc
scas
jecxz
mov
mov
mov
(bad)
imul
xchg
jp
cdq
pop
sub
pop
lods
xor
jle
(bad)
mov
ds
cmp
lock
fisttp
or
cs
daa
dec
inc
dec
push
es
mov
(bad)
aas
stc
pop
movs
sub
jle
adc
sbb
sbb
jl
inc
shl
aaa
sahf
lods
imul
rcl
aaa
leave
inc
mov
xor
lods
mov
or
fdiv
mov
aas
sqrtps
jns
dec
lock
and
rcr
mov
dec
enter
and
jns
push
sub
xlat
pusha
scas
enter
cwde
pop
ror
or
dec
add
test
jns
dec
enter
in
aad
cmps
inc
dec
enter
inc
and
add
in
pusha
cmps
push
inc
clc
sub
cmc
rcl
jb
push
cmp
pushf
nop
dec
js
jo
rol
fdivr
and
in
dec
mov
and
in
mov
jo
dec
enter
imul
jmp
jb
dec
cmp
test
add
iret
sub
daa
in
sub
in
pusha
lahf
and
in
add
sbb
in
cmp
(bad)
int
xchg
push
pop
in
cmp
loopne
pusha
jecxz
or
and
lock
jo
jns
dec
enter
test
adc
sbb
ins
js
or
popa
adc
xor
mov
sub
data16
outs
repnz
push
cmp
bound
ins
outs
fs
mov
mov
movs
pop
arpl
pop
push
dec
cmp
in
mov
jns
push
xor
(bad)
adc
outs
ss
data16
add
das
dec
neg
repnz
adc
sbb
fdivp
adc
and
popf
popf
sbb
sub
adc
mov
cmp
nop
adc
xchg
and
xchg
and
or
or
lods
sbb
sbb
inc
mov
push
aam
fsub
cmp
enter
and
and
jo
clc
mov
cmp
dec
mov
dec
push
push
(bad)
jmp
adc
ja
popa
push
out
mov
les
(bad)
(bad)
(bad)
dec
movs
arpl
mov
mov
push
movs
mov
aad
mov
rcl
(bad)
(bad)
(bad)
(bad)
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
(bad)
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
(bad)
(bad)
(bad)
inc
add
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
(bad)
(bad)
(bad)
push
fild
or
shr
cmp
ficom
push
xlat
enter
mov
dec
mov
cdq
xchg
mov
mov
or
mov
or
and
or
(bad)
(bad)
push
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
(bad)
(bad)
(bad)
out
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
(bad)
jg
jmp
mov
cmp
xchg
add
hlt
push
imul
ins
sbb
xor
(bad)
jg
test
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
(bad)
(bad)
jmp
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
into
idiv
inc
or
mov
inc
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
inc
shl
jmp
outs
xor
mov
sar
add
in
add
pop
(bad)
(bad)
(bad)
dec
leave
jl
fnstsw
add
daa
adc
or
and
test
or
(bad)
(bad)
call
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
or
pop
mov
jl
in
mov
mov
(bad)
jmp
mov
call
jmp
fild
push
fdiv
or
test
fs
ds
(bad)
(bad)
jmp
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
jg
push
add
inc
push
imul
xor
sbb
push
imul
aam
(bad)
(bad)
(bad)
jmp
sub
mov
ficom
int3
dec
frstor
fistp
mov
mov
aad
mov
call
(bad)
(bad)
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
(bad)
(bad)
call
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
jmp
or
sub
mov
cmps
call
ret
shl
sbb
ret
aam
(bad)
jmp
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
push
pop
sub
mov
loop
sub
or
mov
xchg
(bad)
(bad)
(bad)
dec
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
call
mov
outs
ja
mov
out
cli
jo
(bad)
call
ds
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jg
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
ja
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
push
mov
xor
mov
add
push
xlat
int
push
ficom
(bad)
(bad)
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
mov
out
add
and
ret
push
sub
xor
jge
cmps
pop
push
(bad)
(bad)
mov
in
fxch
dec
mov
out
cli
retf
fxtract
jecxz
(bad)
(bad)
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
(bad)
(bad)
(bad)
call
scas
cs
mov
xlat
mov
sbb
test
sbb
add
call
call
ja
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
cmps
loope
icebp
out
repz
(bad)
scas
(bad)
jmp
(bad)
(bad)
(bad)
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
std
pop
(bad)
jno
jo
add
test
and
sub
xchg
data16
(bad)
(bad)
jg
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
mov
sub
pop
add
jle
jmp
(bad)
sbb
adc
push
call
pop
adc
cmps
ret
mov
dec
hlt
mov
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
(bad)
jmp
cli
mov
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
(bad)
call
retf
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
cmp
jmp
adc
and
inc
and
inc
out
and
cmp
dec
clc
(bad)
jg
mov
mov
and
cmps
xor
mov
lods
out
sar
mov
(bad)
jmp
adc
stos
and
leave
jmp
sti
push
jns
das
mov
(bad)
(bad)
(bad)
jmp
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
std
(bad)
jl
rcl
cmp
mov
js
mov
test
cwde
cmp
test
cwde
and
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
(bad)
(bad)
(bad)
inc
shl
add
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
pop
push
(bad)
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
pop
cli
and
xchg
push
(bad)
push
hlt
jg
(bad)
(bad)
out
les
fdecstp
jmp
lea
inc
xor
adc
retf
jo
outs
sbb
sub
loope
fisub
(bad)
(bad)
(bad)
jg
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
(bad)
(bad)
(bad)
std
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
push
jae
xor
mov
jo
cmc
shr
add
mov
arpl
(bad)
jg
mov
ror
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
mov
(bad)
(bad)
inc
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
push
cmp
bound
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fdivr
(bad)
(bad)
call
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
(bad)
(bad)
(bad)
fldenv
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
jg
scas
add
sub
adc
jns
movs
dec
mov
call
cld
jmp
mov
shr
(bad)
in
and
out
mov
rcl
cld
(bad)
jmp
es
xchg
aas
mov
adc
out
sar
mov
(bad)
(bad)
jmp
fdiv
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
(bad)
out
or
outs
aam
add
inc
add
test
dec
retf
push
mov
(bad)
push
dec
add
(bad)
sti
mov
test
or
stc
sbb
xchg
fmul
or
mov
inc
leave
in
push
ja
pop
(bad)
(bad)
(bad)
jmp
sbb
das
sbb
fild
sbb
repnz
adc
(bad)
(bad)
call
pop
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
(bad)
(bad)
(bad)
mov
out
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
add
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
jg
(bad)
fsub
leave
pop
sub
and
mov
and
mov
(bad)
(bad)
(bad)
js
pop
fidivr
sub
ds
sbb
sub
call
das
ror
jo
out
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
(bad)
(bad)
(bad)
call
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
std
pop
dec
(bad)
jnp
cs
fdivrp
cmp
nop
es
xchg
call
loop
in
ja
add
push
or
bound
data16
(bad)
(bad)
jmp
jmp
gs
fs
imul
dec
pop
mov
pop
sub
cld
arpl
dec
retf
or
xchg
mov
dec
(bad)
(bad)
(bad)
jmp
call
test
shl
inc
xor
inc
jae
cmovo
out
inc
(bad)
(bad)
(bad)
call
push
xor
mov
mov
mov
clc
push
mov
adc
push
fcomip
(bad)
call
jle
push
call
push
and
in
pop
mov
movs
pop
lock
add
sub
(bad)
(bad)
call
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
(bad)
(bad)
(bad)
jmp
xor
in
or
es
mov
out
push
sahf
mov
in
in
das
call
add
ss
jmp
pop
imul
fcom
cld
sahf
ins
xchg
(bad)
test
(bad)
(bad)
jmp
sbb
sbb
sti
inc
les
clc
dec
jmp
push
repnz
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
(bad)
(bad)
(bad)
(bad)
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
(bad)
(bad)
jmp
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
(bad)
(bad)
(bad)
call
daa
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
push
retf
lahf
lds
adc
pop
inc
int3
inc
ins
xchg
sbb
ror
mov
xchg
ja
ins
nop
cs
(bad)
(bad)
inc
xchg
sbb
jmp
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
(bad)
(bad)
(bad)
call
cmp
outs
mov
adc
xor
xor
dec
mov
add
jmp
or
(bad)
in
popf
or
(bad)
(bad)
(bad)
ffreep
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
(bad)
(bad)
call
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
(bad)
(bad)
jmp
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
(bad)
(bad)
(bad)
(bad)
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
(bad)
(bad)
(bad)
dec
dec
mov
mov
pop
dec
adc
mov
mov
fidivr
jmp
cld
pop
pop
mov
gs
stos
out
scas
mov
imul
bound
pop
imul
(bad)
(bad)
mov
or
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
(bad)
(bad)
(bad)
call
push
cli
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
(bad)
(bad)
(bad)
(bad)
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
(bad)
jmp
mov
mov
cmp
rol
xchg
or
in
xchg
loop
call
movs
xchg
xchg
loopne
fstp
(bad)
iret
aas
sub
add
(bad)
jg
adc
jmp
in
inc
push
lock
pop
mov
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
call
push
aad
shl
mov
(bad)
lds
xchg
lahf
mov
inc
std
(bad)
out
cli
(bad)
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
sbb
(bad)
(bad)
jmp
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
(bad)
(bad)
(bad)
inc
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
clc
(bad)
(bad)
(bad)
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
out
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
dec
pop
fwait
push
add
in
mov
dec
leave
(bad)
jmp
out
arpl
adc
push
mov
(bad)
(bad)
(bad)
jns
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
dec
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
stc
push
nop
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
push
cld
(bad)
(bad)
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
repnz
(bad)
(bad)
jmp
dec
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fcos
(bad)
(bad)
inc
push
jmp
xor
(bad)
and
push
mov
rol
ss
(bad)
(bad)
jmp
lods
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
(bad)
(bad)
call
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
cmp
inc
push
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
(bad)
(bad)
mov
aam
jmp
(bad)
stc
mov
mov
lock
imul
(bad)
(bad)
(bad)
(bad)
daa
test
(bad)
cs
mov
call
mov
loope
into
cs
stos
dec
mov
add
pop
std
pop
jmp
icebp
and
mov
ins
inc
popa
ds
ins
iret
test
(bad)
(bad)
(bad)
(bad)
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
(bad)
(bad)
dec
adc
mov
jle
cmp
pushf
in
adc
add
(bad)
(bad)
call
mov
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
(bad)
jmp
mov
dec
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
mov
push
add
xchg
out
push
popa
sub
or
pop
ins
les
(bad)
(bad)
(bad)
push
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
(bad)
(bad)
(bad)
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
inc
ins
fucom
jmp
aam
push
sub
push
imul
mov
(bad)
fbld
push
pop
dec
arpl
ins
fsqrt
(bad)
arpl
(bad)
push
cmp
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
(bad)
(bad)
jmp
mov
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
clc
call
cld
pop
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
sar
inc
mov
(bad)
(bad)
inc
call
(bad)
or
mov
or
and
outs
jl
pop
push
(bad)
(bad)
(bad)
call
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
in
mov
leave
les
and
(bad)
(bad)
call
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
(bad)
(bad)
(bad)
(bad)
inc
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
push
icebp
mov
(bad)
fstp
mov
sub
repz
aam
gs
mov
test
into
mov
mov
dec
fbld
xlat
movs
(bad)
(bad)
(bad)
call
les
(bad)
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
(bad)
dec
dec
pop
fisttp
jno
daa
add
mov
or
xchg
mov
and
mov
(bad)
jmp
mov
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
(bad)
fild
cmp
mov
pop
cmp
mov
and
mov
icebp
mov
mov
sub
inc
cmp
(bad)
adc
jecxz
jmp
adc
ds
pop
test
push
iret
or
dec
fs
daa
jge
sahf
mov
setae
mov
push
inc
ret
bound
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
addr16
(bad)
(bad)
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
call
loopne
fadd
les
repnz
sar
addr16
mov
fisttp
ss
call
(bad)
fmul
sbb
dec
test
fbld
ret
test
fist
outs
mov
stos
or
out
inc
imul
outs
shl
(bad)
jmp
ss
or
xchg
mov
add
mov
lds
or
sub
(bad)
(bad)
jmp
ret
cmps
mov
iret
xor
sahf
mov
scas
sbb
in
arpl
es
mov
retf
xchg
or
ss
jb
addr16
push
adc
loope
jmp
mov
sub
xchg
ror
repnz
mov
fcmovnu
(bad)
(bad)
(bad)
jmp
xchg
rcl
icebp
aam
inc
push
fiadd
int
mov
ja
sbb
mov
pop
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
(bad)
(bad)
(bad)
call
push
ins
iret
inc
mov
or
adc
ret
es
shl
test
inc
dec
outs
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
(bad)
(bad)
(bad)
dec
jg
mov
jmp
retf
mov
xchg
xor
mov
add
push
fdivrp
jmp
fldenv
data16
les
mov
sub
xchg
mov
mov
ret
mov
sub
sbb
inc
xor
bound
sub
add
ja
inc
push
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
(bad)
(bad)
(bad)
call
js
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
(bad)
(bad)
(bad)
call
mov
cli
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
jmp
cmps
mov
and
call
shl
ret
fiadd
gs
scas
stos
inc
(bad)
(bad)
(bad)
inc
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
stos
call
mov
jo
jno
imul
sub
mul
sbb
jne
(bad)
jmp
call
test
jns
mov
cmp
jg
(bad)
jae
jns
push
dec
push
lds
jge
fisubr
cmp
jns
add
(bad)
(bad)
(bad)
inc
dec
sub
(bad)
xchg
adc
mov
cmp
lds
push
icebp
(bad)
dec
xchg
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
(bad)
fcomip
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
(bad)
(bad)
(bad)
dec
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
inc
gs
imul
and
add
lahf
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
xchg
mov
leave
dec
(bad)
(bad)
(bad)
jmp
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
jmp
mov
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
(bad)
dec
mov
cli
call
js
cmps
cmp
sbb
or
(bad)
(bad)
jmp
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
(bad)
(bad)
(bad)
push
adc
out
movs
add
test
mov
push
ja
cwde
pop
(bad)
fcomip
jmp
adc
ss
daa
mov
fnstsw
xor
jmp
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
mov
jmp
pushf
xor
imul
jo
sub
(bad)
jmp
inc
sub
data16
loope
lds
cmc
arpl
lods
mov
in
test
xchg
sub
in
scas
mov
(bad)
call
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
(bad)
(bad)
(bad)
call
xor
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
(bad)
cmp
out
stc
add
xlat
push
scas
xchg
adc
lea
or
hlt
jo
test
sbb
ins
je
(bad)
(bad)
jg
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
(bad)
(bad)
(bad)
push
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
(bad)
call
std
jnp
sub
sub
xchg
mov
xchg
push
mov
repz
(bad)
(bad)
in
inc
gs
dec
xchg
outs
jne
mov
call
or
jg
sbb
in
jns
(bad)
mov
sbb
mov
daa
repnz
inc
jmp
lea
out
and
loope
or
mov
(bad)
aas
xchg
mov
jo
and
imul
inc
cmp
ja
fsub
push
jle
add
(bad)
push
out
push
or
test
mov
adc
xor
(bad)
cmp
ret
add
pop
lods
test
push
retf
ret
(bad)
(bad)
(bad)
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
call
loopne
sub
sbb
mov
inc
pop
mov
sbb
(bad)
jmp
or
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
cmp
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
inc
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
(bad)
call
test
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
(bad)
(bad)
jmp
aam
es
dec
dec
and
cdq
and
and
adc
sub
call
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
(bad)
(bad)
(bad)
push
jae
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
(bad)
(bad)
dec
or
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
popa
xlat
ja
xchg
cli
fisub
nop
jmp
ja
pop
push
jmp
push
add
cmp
arpl
popa
sub
push
cmps
xlat
scas
cli
(bad)
call
fs
mov
dec
xlat
retf
and
mov
dec
call
add
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
(bad)
(bad)
(bad)
(bad)
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
(bad)
(bad)
dec
push
xor
addr16
jne
ds
mov
or
ror
adc
push
mov
jle
pop
loop
call
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
cld
mov
jmp
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
push
stos
mov
or
cmp
in
paddsb
hlt
popa
call
(bad)
(bad)
(bad)
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
(bad)
(bad)
(bad)
(bad)
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
mov
retf
sub
test
fnstcw
pusha
fdivr
call
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
(bad)
(bad)
call
test
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
dec
ret
int3
push
cld
(bad)
inc
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
jg
(bad)
push
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
ja
sub
(bad)
inc
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
(bad)
fcomip
call
jns
cwde
mov
and
add
dec
call
(bad)
(bad)
(bad)
push
mov
pop
mov
mov
sbb
mov
or
fs
(bad)
(bad)
dec
sbb
out
(bad)
rol
cmps
arpl
aad
or
(bad)
(bad)
jmp
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
cmp
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
(bad)
(bad)
call
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
(bad)
(bad)
jmp
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
fisttp
mov
enter
scas
out
(bad)
bound
xor
(bad)
pop
fcomp
jl
jge
dec
mov
loopne
xlat
(bad)
(bad)
(bad)
mov
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
(bad)
(bad)
(bad)
clc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
(bad)
(bad)
jmp
sahf
sbb
call
inc
mov
and
xor
pop
or
sbb
(bad)
cmp
mov
add
das
push
cmp
in
cld
mov
lock
in
xchg
xchg
fnstsw
ror
loope
jg
aas
jmp
jecxz
in
fmul
lock
jmp
lahf
les
xor
loop
push
dec
jg
outs
test
or
rcr
jge
rcr
lahf
ror
and
lds
sub
mov
(bad)
call
add
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
iret
(bad)
(bad)
(bad)
jmp
retf
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
clc
mov
fs
das
push
ret
ja
imul
setl
(bad)
(bad)
inc
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
out
(bad)
sbb
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
inc
nop
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
(bad)
(bad)
(bad)
inc
mov
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
(bad)
(bad)
(bad)
call
add
shl
pop
jns
psrad
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
hlt
pop
call
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
(bad)
inc
scas
xor
in
pop
mov
push
in
pop
inc
jg
dec
pop
mov
in
sbb
bound
and
inc
sbb
jmp
cmp
clc
jmp
in
sahf
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
in
dec
mov
cmps
ins
mov
cld
sbb
dec
sub
scas
cmc
test
(bad)
(bad)
(bad)
jmp
jbe
mov
mov
sbb
ror
sar
add
push
movs
idiv
call
dec
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
pop
fidiv
push
jp
jmp
fwait
(bad)
jmp
add
arpl
and
stc
popa
call
dec
mov
lods
mov
ss
dec
call
push
jnp
adc
(bad)
loope
xchg
adc
int
lods
mov
inc
and
and
(bad)
data16
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
(bad)
call
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
inc
mov
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
(bad)
(bad)
(bad)
call
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
(bad)
(bad)
(bad)
aas
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
(bad)
jg
or
aaa
test
cmp
es
jl
(bad)
(bad)
push
mov
retf
pop
sbb
mov
repz
in
test
adc
ja
mov
jg
(bad)
inc
mov
cmp
cdq
in
or
data16
(bad)
(bad)
call
cmps
fidiv
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
(bad)
(bad)
(bad)
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
add
dec
push
jns
pusha
mov
pop
pop
jo
dec
repz
xor
jo
out
out
jns
pop
pop
pop
mov
pop
cmp
repz
pop
push
push
out
jns
repz
push
push
es
push
push
push
sub
repz
push
push
dec
mov
dec
push
imul
iret
out
dec
dec
dec
lock
cmp
retf
and
and
fstp
lock
push
sbb
out
sbb
sbb
mov
sahf
sbb
sbb
pop
ds
out
cmp
push
adc
out
call
ds
repz
push
or
dec
in
or
nop
add
stc
call
adc
sub
jns
out
in
nop
cmp
in
(bad)
push
ror
xor
cmps
test
mov
repz
repz
cmps
repnz
jl
jp
jo
push
jns
pop
cmp
xor
push
dec
test
mov
jns
aam
in
repz
out
dec
or
cmp
repz
inc
push
pop
ins
jl
cmp
repz
movs
lods
mov
repz
repz
in
out
sahf
int
dec
add
sbb
out
sahf
sub
inc
dec
push
pusha
jns
out
jo
mov
out
(bad)
shl
in
iret
repz
cld
push
or
sub
cmp
repz
push
pusha
ins
js
cmp
repz
fnstcw
aam
hlt
push
or
out
sahf
xor
adc
shl
clc
repz
mov
or
xor
pop
iret
repz
jo
cwde
mov
hlt
cmp
ror
mov
sahf
out
aam
in
clc
push
add
repz
adc
xor
dec
cmp
repz
fs
nop
repz
repz
out
sahf
int
push
add
sbb
sahf
out
sahf
cmp
fs
jns
out
nop
mov
jns
out
loopne
cld
push
or
repz
sbb
inc
push
pusha
cmp
repz
js
xchg
mov
mov
(bad)
aam
out
sahf
int
push
add
and
out
sahf
cmp
push
pusha
ins
jl
sahf
out
mov
ins
sahf
out
in
push
add
repz
sbb
cmp
push
cmp
repz
je
mov
test
rcl
out
ss
in
clc
pop
add
and
inc
push
pusha
jo
jns
out
mov
jns
out
rcr
call
iret
pop
add
and
cmp
repz
pop
fs
hlt
cmp
repz
mov
push
mov
sar
jns
rcr
loopne
repz
out
pop
add
and
repz
sub
dec
push
pop
cmp
repz
ins
js
mov
cmp
repz
test
ror
repz
fsub
lock
pop
or
out
sahf
sbb
xor
push
jns
out
pusha
ins
js
xchg
out
sahf
out
lods
mov
out
loopne
pop
pop
or
sbb
out
sahf
out
dec
pop
ins
jl
out
sahf
mov
iret
mov
hlt
pop
add
and
cmp
repz
push
pusha
ins
iret
repz
adc
repz
loopne
clc
pop
add
sahf
out
adc
sub
out
sahf
out
dec
push
pop
push
je
mov
out
aam
in
cld
pop
or
cmp
repz
cmp
repz
pop
push
cmp
repz
enter
jns
out
pusha
or
sub
dec
out
sahf
out
ins
jl
xchg
sahf
out
sahf
mov
fdivr
mov
in
popa
add
xor
repz
repz
ins
jl
pushf
iret
repz
lods
mov
sahf
out
cmp
bound
or
sub
out
xor
dec
pop
ins
out
sahf
out
mov
ins
sahf
loopne
arpl
sbb
inc
cmp
repz
pop
fs
repz
repz
mov
fnstcw
aam
lock
sahf
out
sahf
sub
push
fs
sahf
out
test
sahf
out
fsubr
clc
gs
repz
or
sbb
cmp
iret
repz
push
fs
repz
repz
iret
ror
fsub
in
sahf
out
cmp
data16
and
sahf
out
xor
push
pusha
out
sahf
out
js
nop
pushf
sahf
out
sahf
test
ror
in
iret
mov
hlt
add
sbb
repz
repz
ins
iret
repz
jl
pushf
movs
lods
mov
rcl
in
clc
jns
out
push
sub
jns
out
inc
push
pusha
jo
out
sahf
test
iret
out
fsubr
imul
iret
repz
push
pusha
ins
iret
repz
jl
mov
int
cmp
in
clc
push
adc
sahf
out
and
inc
dec
mov
inc
out
mov
nop
into
test
outs
dec
test
cmp
repz
mov
ror
int
cmp
fsub
call
out
sahf
add
adc
and
jns
out
cmp
push
pusha
push
jo
or
cwde
mov
ins
sahf
out
aam
in
clc
dec
add
cmp
repz
sbb
sub
repz
xor
inc
dec
push
pusha
cmp
repz
js
nop
cwde
repz
repz
iret
repz
enter
call
cmp
dec
dec
ins
mov
repz
push
sbb
sub
cmp
repz
inc
dec
push
pop
repz
repz
push
repz
mov
cmp
repz
fsub
call
repz
dec
add
adc
out
sahf
out
xor
push
sahf
out
sahf
pusha
push
jns
out
nop
cwde
mov
sahf
out
ror
fmul
mov
sahf
loopne
clc
dec
add
sbb
iret
repz
xor
dec
pop
repz
repz
mov
pop
out
push
es
add
push
and
push
aam
fwait
push
fimul
ins
loopne
in
add
lock
cmc
imul
adc
xchg
test
ds
lods
repnz
xor
pop
xor
dec
pop
iret
lods
repnz
push
push
pop
or
pusha
js
jns
ds
test
aaa
mov
mov
xchg
aaa
repnz
push
loopne
pop
in
fld
hlt
push
outs
add
outs
in
cld
pop
outs
add
sbb
and
sub
in
sub
pop
xor
cmp
pop
repz
push
push
adc
sub
je
jl
test
in
pushf
mov
pop
mov
mov
aam
fsub
aaa
stos
sbb
loopne
in
sbb
lock
lods
repnz
clc
sbb
cld
push
jo
sbb
in
cld
pop
jo
and
in
sub
pop
cmp
inc
pop
pop
xchg
aaa
stos
mov
pop
push
push
pop
and
lods
repnz
pusha
push
ins
and
jo
jl
retf
and
add
and
nop
sub
jns
pushf
and
es
lods
push
mov
les
aaa
stos
sub
enter
pop
fcom
lods
repnz
call
clc
sub
cld
push
jno
adc
jno
aaa
stos
mov
pop
and
sub
fld
inc
das
pop
inc
push
jl
pop
in
sub
pop
push
push
pop
xor
or
stos
mov
pop
jo
mov
push
xor
push
mov
aaa
stos
xor
ss
mov
lods
jg
mov
mov
int
mov
enter
or
stos
cmp
aam
in
mov
in
clc
cmp
cld
push
jb
cmp
pop
jb
sbb
sub
xor
pop
xor
inc
pop
dec
push
push
jns
retf
pop
push
push
pop
inc
pop
jns
lahf
addr16
jo
inc
jl
test
sub
inc
pop
mov
cwde
inc
pop
pushf
stos
mov
inc
pop
test
mov
pop
repnz
aaa
mov
les
int3
fwait
push
fisubr
dec
pop
fadd
push
jns
retf
pop
call
bnd
ins
clc
push
jae
dec
pop
jae
push
adc
pop
adc
and
and
push
jns
retf
pop
xor
cmp
pop
in
sub
push
dec
push
pop
dec
push
push
aaa
stos
mov
push
pop
push
pop
pusha
push
jne
xchg
push
mov
cwde
pop
jl
push
pop
test
nop
push
cwde
pop
aas
pushf
lods
repnz
push
pop
movs
push
lods
pop
pop
retf
fidiv
rol
nop
fldenv
mov
jg
bound
in
sbb
lock
lods
repnz
push
jo
add
sbb
fwait
push
ficomp
and
pop
sub
xor
jns
ja
xor
cmp
pop
inc
jnp
bnd
push
push
add
pop
pop
push
and
jo
mov
nop
out
stc
cmp
test
mov
inc
ds
enter
int3
loopne
call
jg
add
pop
jne
push
sbb
or
aas
pop
cmp
cdq
std
add
jne
push
pop
pop
rol
iret
enter
fmul
enter
push
movs
sbb
xor
sbb
(bad)
cdq
dec
pop
jne
cmp
clc
push
xor
rcl
pop
and
pop
inc
(bad)
pop
or
aas
cmp
(bad)
movs
into
jg
dec
aaa
jbe
jg
data16
push
ins
add
jg
pop
mov
inc
jg
movs
or
push
or
mov
jbe
or
int3
retf
mov
or
add
(bad)
or
adc
push
sub
outs
fs
xor
push
inc
or
in
lea
or
push
or
mov
pushf
add
mov
mov
pop
adc
clc
iretw
in
xchg
not
js
or
and
enter
xor
cmp
inc
sbb
fistp
pop
add
fs
js
retf
in
retf
or
adc
inc
dec
lods
jg
add
in
xchg
dec
in
sbb
jns
or
ins
ss
pop
sub
jns
lea
ja
inc
jg
pop
or
jl
mov
jl
mov
and
out
int3
xor
pop
pop
jns
int
popw
int3
fistp
fdivr
add
xchg
xchg
(bad)
pop
hlt
jp
or
jp
and
sbb
push
and
sub
retf
mov
mov
push
jg
or
enter
test
sub
sub
jb
in
mov
xor
int
sar
or
in
xor
add
adc
jnp
aaa
mov
sbb
push
xor
cmp
push
dec
or
mov
add
xchg
dec
mov
or
test
in
retf
cmp
ds
or
hlt
lahf
jl
add
or
mul
sbb
pop
and
push
cmp
stc
in
leave
inc
pop
or
or
mov
or
xchg
xor
out
push
pop
dec
addr16
or
push
mov
jnp
jns
inc
dec
pop
scas
mov
fidivr
iret
or
jns
fwait
jp
es
(bad)
fsub
fstp
push
mov
adc
sub
inc
push
iret
repz
mov
push
or
push
(bad)
push
mov
enter
rol
cmps
mov
mov
mov
ja
out
or
and
mov
out
fisub
fs
repz
mov
mov
mov
mov
sub
cmp
repz
cmp
push
pop
jo
dec
cmp
cmps
push
out
jns
jmp
push
shl
sahf
mov
cmps
arpl
fnstcw
mov
sti
into
jnp
sub
xor
mov
sti
into
jmp
pop
push
push
sbb
cmp
es
neg
out
inc
push
fmul
int
call
aam
cmp
push
adc
and
cmp
mov
push
push
pusha
dec
push
mov
ins
push
movs
mov
(bad)
hlt
fadd
hlt
cld
mov
or
sbb
xor
jns
jmp
add
mov
test
mov
aam
mov
jnp
in
push
cld
mov
repz
cmp
push
ja
out
ds
je
mov
dec
cmp
dec
cwde
mov
iret
repz
lock
mov
jns
sub
cmp
out
sahf
out
fs
test
out
scas
mov
enter
cmp
in
cmps
push
mov
add
and
jl
push
inc
fistp
out
pop
pusha
ins
mov
aam
sahf
out
push
test
repz
(bad)
int3
fsub
mov
sahf
adc
sub
inc
lea
cwde
cmps
iret
repz
push
lods
push
mov
sahf
out
ss
dec
out
pop
loopne
pop
pusha
cmps
mov
out
dec
cmp
push
movs
out
dec
cmp
mov
jmp
jnp
fcomp
in
cld
xadd
cmp
cmp
pusha
push
xchg
cmp
lods
push
lods
mov
cmp
jnp
mov
in
cld
out
sahf
rol
sub
inc
repz
dec
push
xadd
jmp
daa
shl
push
rol
movs
sahf
int
push
loopne
ret
daa
cmc
sub
ret
into
ret
dec
ror
pop
(bad)
push
(bad)
mov
push
je
(bad)
ret
cwde
out
fdivp
fsub
rep
sahf
in
cld
ret
add
sbb
(bad)
aam
cmp
inc
dec
xchg
aaa
cmps
sahf
test
xchg
pop
sahf
out
sahf
jl
mov
fdivr
lahf
outs
in
pop
loopne
aad
out
pop
clc
les
push
sbb
sub
inc
dec
repz
repz
pop
push
cmp
cwde
movs
lods
mov
repz
in
hlt
lds
inc
imul
imul
inc
call
(bad)
and
test
std
xchg
out
add
lods
xchg
cmp
adc
bound
pop
sahf
fistp
push
xchg
add
xchg
outs
out
jle
xor
push
das
pop
add
cld
outs
out
and
add
adc
add
add
outs
inc
xor
add
dec
dec
add
dec
pop
or
or
dec
dec
or
ds
fs
test
pop
add
pop
enter
add
(bad)
repnz
xor
out
fiadd
sbb
out
sahf
adc
sbb
adc
jns
out
sbb
push
push
push
out
sahf
out
adc
sbb
adc
or
cwde
out
sbb
pop
pop
shl
cmp
jge
or
mov
dec
int3
sub
repz
lods
ins
in
sbb
pop
cmp
repz
cmp
jl
repz
repz
repz
mov
push
cmp
repz
xor
iret
repz
repz
stos
push
sbb
cmp
cmp
iret
repz
xchg
es
repz
cmps
data16
xchg
push
cmp
repz
ss
div
cmp
repz
mov
cs
repz
scas
outs
out
push
sahf
pop
cmp
repz
ds
iret
repz
repz
mov
push
cmp
repz
xor
iret
repz
repz
test
pop
cmp
repz
cmp
iret
repz
iret
repz
movs
gs
xchg
push
cmp
repz
xor
cmp
repz
iret
repz
lods
ins
in
sbb
repz
cmp
pop
sar
adc
or
xchg
push
xchg
push
out
sahf
out
rcl
xor
sahf
out
sahf
mov
jae
repz
out
or
mov
out
retf
retf
sub
sahf
out
sahf
stos
stos
imul
jns
out
sbb
fwait
fwait
pop
out
sahf
out
fcmovnu
cmp
sahf
out
sahf
mov
sti
jns
out
pop
pop
xchg
out
mov
jns
cmps
cmps
addr16
jns
out
pop
pop
xchg
xchg
push
out
sahf
out
xlat
xlat
aaa
aaa
sahf
out
sahf
mov
ja
div
jns
out
pfadd
out
iret
iret
das
das
sahf
out
sahf
scas
scas
outs
outs
out
out
jns
out
pop
pop
lahf
lahf
pop
out
sahf
out
(bad)
aas
aas
sahf
out
sahf
mov
dec
repz
jo
inc
push
and
cmp
repz
xor
dec
repz
repz
pop
cmp
repz
js
inc
and
adc
iret
repz
xor
add
cmp
inc
ret
and
adc
lahf
add
add
cmp
jns
or
in
mov
xchg
mov
sahf
dec
adc
adc
adc
push
nop
or
cmp
sbb
mov
and
mov
inc
add
or
adc
daa
daa
daa
adc
adc
and
jb
push
pop
xchg
pop
and
sbb
mov
test
call
adc
push
or
out
mov
add
add
pop
add
add
xlat
adc
inc
or
jbe
cmp
cwde
inc
js
add
sbb
test
out
or
jbe
fst
sbb
sub
cmp
mov
jbe
fist
push
fild
add
dec
or
xor
arpl
bound
mov
fwait
ds
outs
fbld
jae
jo
bound
jae
imul
cmp
bound
xor
xor
mov
xor
xor
xor
daa
daa
js
js
leave
leave
leave
add
add
pop
jb
leave
ja
ja
in
and
xor
pop
jo
xor
gs
pushf
pushf
pushf
gs
xor
pushf
gs
fs
and
mov
xchg
pop
fs
xchg
xchg
xchg
or
jb
jb
xchg
xchg
xchg
jb
jb
pop
xor
in
add
xor
rdmsr
fwait
jl
pop
push
data16
mov
jb
arpl
rdtsc
xor
daa
daa
daa
xor
daa
aaa
inc
arpl
leave
mov
pop
xor
shl
das
in
in
fs
in
fs
fs
dec
cs
cs
rdtsc
in
in
xor
xor
mov
aaa
pop
je
rdtsc
dec
dec
dec
dec
xor
xor
inc
ror
ss
add
and
xor
and
ss
xchg
pop
jb
cmp
xlat
xchg
pop
jb
xor
xor
xor
leave
and
xor
outs
and
outs
mul
jae
and
pop
add
jo
and
jae
push
imul
leave
in
in
outs
mov
lods
pop
pop
outs
xchg
jg
add
xor
fstp
cs
bound
jne
sbb
idiv
jb
jp
pop
je
ror
fimul
arpl
arpl
ja
ja
ja
gs
adc
dec
arpl
fs
fidivr
pushw
jne
push
fistp
ins
rcr
mov
fwait
outs
pop
outs
sbb
bound
mov
outs
jp
mov
outs
fadd
jo
enter
jo
mov
pop
ins
pop
addr16
jo
repnz
push
mov
(bad)
leave
and
jno
lods
xor
js
addr16
or
xchg
imul
jae
add
data16
rcl
mov
jae
mov
xor
jo
imul
imul
lock
ja
out
loop
cmp
shl
jae
daa
(bad)
jecxz
push
inc
pop
daa
imul
or
pop
and
or
sar
inc
loopne
outs
aad
movsx
outs
mov
psrlq
cmp
fs
jae
in
arpl
jae
sub
jae
adc
div
cmp
or
xor
xor
(bad)
mov
fadd
jge
sbb
jo
das
pop
je
je
mov
bound
(bad)
js
in
movs
imul
add
in
cs
mov
dec
in
inc
pop
gs
gs
jmp
aas
sbb
pop
xor
aaa
mov
bound
imul
xor
(bad)
push
push
mov
pop
imul
jo
bound
enter
data16
sub
dec
lods
lods
sub
aaa
and
push
scas
outs
and
mov
pop
inc
pop
push
and
ret
xor
pop
mov
pop
jnp
pop
dec
ret
dec
pop
jb
imul
ucomiss
mov
xor
push
xor
je
stc
fcmovbe
inc
sub
add
pop
cmp
loop
cmp
ins
pop
mov
sub
sbb
and
(bad)
imul
nop
mov
sbb
aaa
push
ret
mov
js
outs
mov
daa
imul
outs
ja
popa
xchg
out
pop
ja
and
jno
scas
dec
cs
cmp
push
or
not
and
jo
pusha
fisub
imul
fistp
dec
pop
cmps
js
dec
das
daa
cmp
aas
pop
imul
mov
mov
je
cmp
jns
js
les
pop
ja
sti
ja
in
pop
jae
paddusw
(bad)
or
pop
dec
imul
retf
daa
or
ret
psllq
ja
lea
xchg
fs
movq
cmp
mov
pop
popa
and
jb
pop
fs
push
push
pop
bound
xor
ds
repnz
jae
jo
xor
in
movs
aaa
jmp
mov
and
pop
jb
fmul
cmp
call
push
repz
ins
test
es
jnp
mov
xchg
mov
mov
pop
arpl
outs
pop
ins
push
xor
xlat
sbb
bound
ja
jb
and
cmp
gs
clc
lea
push
ins
mov
mov
imul
push
out
pop
jae
jae
adc
in
xlat
sbb
ins
inc
jg
pop
jae
jae
or
xchg
jg
add
mov
pop
punpcklwd
or
aaa
scas
jne
mov
jno
pop
jne
popa
ja
xor
xlat
push
push
pop
enter
and
mov
daa
outs
sbb
cmps
pop
imul
mov
jae
xchg
dec
ins
leave
jno
popa
xor
mov
pusha
iret
ficom
ja
add
fs
ins
jecxz
push
xor
push
loope
js
pop
jne
psubusb
jp
xor
pop
jb
fisub
jae
jae
adc
fisubr
or
leave
mov
ds
mov
jae
jbe
(bad)
(bad)
pop
ja
pushf
dec
cs
fdivr
push
fs
sub
xchg
bound
and
mov
pop
ja
(bad)
fisub
and
xchg
es
outs
inc
gs
ficom
ja
inc
jno
mov
fs
addr16
enter
je
ja
scas
add
xchg
push
nop
lea
pop
ins
sub
loop
or
aas
js
imul
lock
jg
aas
jnp
ins
push
adc
jne
jne
inc
outs
pop
ficomp
xchg
ins
mov
mov
jne
iret
(bad)
pop
jb
loop
data16
retf
mov
das
xchg
xchg
out
je
daa
fistp
aad
popa
das
jecxz
add
pusha
das
xor
loope
jmp
mov
loopne
dec
pop
and
or
mov
push
imul
jno
ja
pop
mov
ss
fs
mov
xchg
sbb
ins
ja
(bad)
bound
ja
xchg
dec
cs
sahf
push
jb
pop
ja
aad
mov
pop
scas
loop
mov
mov
daa
jbe
fdiv
rcr
sub
ins
ins
ins
mov
stos
outs
mov
movhps
cmp
pop
das
mov
sbb
jo
push
fwait
gs
div
cmp
pop
pop
xor
lahf
dec
outs
inc
add
lahf
imul
push
push
dec
sti
sbb
xlat
sar
ins
inc
or
inc
dec
imul
pop
call
pop
loope
push
js
outs
movhps
ins
(bad)
pop
outs
mov
xor
xchg
es
mov
jae
push
jb
jbe
or
pop
jo
movs
pop
fcmovbe
loop
pop
test
fmul
je
dec
jae
retf
mov
mov
call
jae
jbe
lea
pop
ins
packsswb
aad
repnz
pop
xchg
leave
sar
cmp
ja
mov
gs
nop
fld
(bad)
leave
sbb
shr
jbe
inc
popa
jae
inc
push
in
jae
jo
leave
mov
xchg
ins
outs
das
gs
mov
outs
inc
scas
jae
cmp
inc
inc
fs
jb
xchg
fcmovnbe
scas
dec
pop
jae
imul
mov
pop
pop
pop
fs
push
fadd
mov
or
jp
(bad)
imul
aaa
mov
push
bound
xchg
dec
cs
stos
mov
jge
sub
aad
xchg
fld
jae
mov
push
inc
xor
jns
add
(bad)
add
daa
js
xor
add
jno
mov
pop
mov
jmp
and
pop
jnp
jae
mov
jb
ja
pop
pop
ror
jb
ja
mov
imul
pop
div
popa
lock
mov
fwait
lods
call
jne
add
pop
sbb
push
ins
push
push
mov
push
ja
lock
test
pop
bound
loopne
scas
js
aad
outs
and
pop
sbb
fs
mov
js
mov
push
and
rol
mov
dec
test
repnz
cmp
cmp
outs
fld
jg
xchg
sahf
mul
popa
push
push
aaa
fisubr
pop
ins
xlat
jns
and
stos
js
jo
js
not
imul
or
pop
mov
fdiv
add
les
outs
sub
outs
jmp
popa
das
popa
or
cs
and
push
ss
cmps
xchg
mov
xor
add
pop
inc
loop
mov
cmp
fst
pop
sub
pop
mov
aas
jg
pop
add
pop
push
ja
cmp
cs
pop
mov
jns
fsub
pop
and
mov
data16
or
sbb
imul
loope
rol
or
fld
cmp
pop
fdivrp
ret
pop
mov
arpl
jne
push
and
lods
sub
fisub
and
jnp
pop
xor
pop
mov
daa
bsf
pop
cmovno
call
ins
sub
and
imul
dec
das
jb
sub
ins
addr16
pop
bound
shr
cmp
imul
adc
inc
add
pop
fistp
ja
inc
jp
arpl
inc
cmp
jae
sbb
(bad)
outs
inc
gs
sbb
adc
ja
addr16
gs
sub
sub
dec
sub
ins
xor
pop
push
xor
jbe
cwde
dec
fiadd
sub
mov
inc
adc
sub
add
cmp
sti
shl
push
sub
adc
push
enter
into
fsubr
popa
in
popf
cmp
out
or
bound
pop
js
pop
push
xor
mov
fstp
cmp
cdq
pushf
hlt
cs
or
dec
popa
popf
cmp
test
xchg
imul
fild
std
dec
gs
jb
cwde
fnsave
sub
gs
jbe
mov
outs
imul
bound
ss
or
jo
pop
pusha
cmp
imul
push
jo
jb
popa
enter
fsubr
ins
sar
push
ret
jns
neg
mov
xor
sbb
and
sbb
loop
xor
jbe
cmp
inc
pop
(bad)
and
ins
bound
push
ja
fwait
mov
gs
jbe
sub
add
xchg
push
push
sbb
call
jb
jns
xchg
fincstp
cmp
outs
pop
stos
imul
ret
mov
hlt
cs
bound
(bad)
fild
gs
jae
jae
push
rcr
daa
gs
jp
sbb
ins
jbe
and
in
cmp
imul
lahf
loop
test
push
adc
imul
mov
sbb
mov
jns
jp
scas
xor
sub
pop
sub
sbb
inc
popa
sbb
gs
jg
cmps
push
bound
(bad)
into
pop
push
dec
and
fwait
inc
mov
ins
imul
inc
push
inc
outs
xor
push
and
add
in
push
jae
addr16
or
and
ja
push
enter
cwde
stos
scas
dec
jmp
lods
inc
hlt
ds
or
cmps
popa
pusha
mov
data16
clc
addr16
add
addr16
outs
mov
shr
imul
cs
je
jge
xor
test
jo
xchg
dec
xor
dec
arpl
lods
stos
js
sahf
or
fs
jns
jns
lock
popa
jns
jb
cmp
ins
ins
jns
sub
lock
jp
inc
adc
mov
jle
push
add
sbb
div
rcr
sahf
imul
imul
jne
push
jo
or
push
jb
je
idiv
cmp
fs
cmp
push
push
outs
in
repnz
xchg
out
adc
xchg
dec
jb
xor
jns
cmp
cmp
sahf
and
push
gs
inc
xchg
push
popa
fisubr
mov
inc
mov
hlt
jo
popa
into
jae
mov
call
std
add
into
jmp
ss
outs
inc
ja
push
imul
push
add
jnp
leave
arpl
push
sahf
inc
inc
outs
sahf
ds
push
adc
mov
push
xchg
(bad)
outs
aam
ins
pop
scas
imul
mov
mov
cmps
lahf
jae
push
cdq
ftst
cmp
dec
pusha
add
push
clc
mov
div
cmps
add
pop
retf
and
lds
adc
mov
dec
jmp
addr16
mov
outs
cmp
sbb
jnp
jp
outs
pop
daa
or
iret
or
cmp
push
add
fwait
and
dec
adc
imul
jbe
jge
arpl
je
sar
jbe
rol
ror
xor
adc
sbb
cmp
bound
mov
dec
inc
fwait
pop
loope
push
pop
enter
add
int
or
icebp
push
out
xchg
adc
add
jne
bound
add
outs
sbb
pop
sar
sbb
sahf
jo
arpl
ins
xor
pop
mov
pusha
imul
aas
xor
cmps
movs
(bad)
arpl
jae
add
push
pusha
or
push
dec
adc
and
out
ss
out
popa
inc
xor
inc
lock
jmp
pop
ret
lods
(bad)
aaa
inc
mov
retf
dec
lds
addr16
je
ds
jb
dec
or
push
retf
sbb
inc
dec
mov
jmp
and
pop
ins
cmp
popa
jne
pop
popf
mov
inc
popa
mov
xchg
and
imul
adc
jo
aas
mov
pop
fs
dec
jne
add
inc
push
outs
xor
aas
ins
jne
enter
add
arpl
inc
pop
jnp
je
les
addr16
retf
mov
dec
and
lods
cmp
sub
jp
pusha
jo
lock
pop
push
lods
nop
call
jb
ins
pop
imul
pop
movs
icebp
jmp
outs
jp
outs
je
and
add
movs
cmps
popa
arpl
fmul
ss
bound
inc
sub
pushf
adc
jle
pop
mov
mov
adc
imul
push
div
loope
cmp
push
jne
sub
inc
lods
(bad)
push
inc
jo
rol
es
push
adc
cdq
ds
cmp
cmp
gs
(bad)
iret
out
sbb
push
and
push
pop
xchg
push
fisttp
imul
repnz
inc
dec
and
ins
xchg
push
bnd
daa
dec
inc
add
jbe
lahf
pop
cmp
cmp
jns
mov
bound
and
inc
fisubr
inc
aas
shrd
jns
xchg
mov
pop
repnz
push
bound
jne
gs
(bad)
pop
lds
aad
dec
fs
int
inc
jbe
push
push
out
call
mov
sub
js
les
imul
adc
nop
outs
mov
dec
inc
jbe
mov
and
mov
lock
imul
inc
arpl
in
lock
aas
gs
jle
mov
jbe
imul
dec
jne
mov
scas
pop
push
push
(bad)
push
add
jo
ds
ret
inc
outs
arpl
inc
loopne
push
pop
push
push
mov
lahf
popa
pop
mov
hlt
or
mov
and
addr16
push
mul
pop
cmps
xchg
jns
enter
push
add
and
outs
adc
call
mov
add
cld
fild
jbe
mov
shl
je
adc
fist
fs
xchg
push
push
dec
push
stos
add
data16
outs
xor
mov
or
push
push
and
mov
dec
pop
retf
inc
aaa
adc
mov
fisub
xor
ins
cmps
pop
mov
imul
add
inc
jecxz
aaa
push
ins
jbe
xchg
jo
cmps
mov
mov
lea
dec
ja
mov
sub
maxps
or
ins
lods
and
call
push
bound
add
fist
fwait
shr
bound
into
xchg
aaa
ins
out
xor
jg
das
packuswb
push
add
or
ds
push
inc
rcr
cmp
inc
mov
out
outs
xor
push
add
popa
int
ror
das
mov
fidiv
mov
nop
jno
imul
test
out
add
repnz
iret
add
lods
movs
sahf
jb
mov
add
cs
pop
push
push
pop
push
jbe
call
inc
retf
mov
out
sbb
push
push
dec
jg
xor
or
mov
xchg
xchg
pop
mov
ins
mov
mov
(bad)
addr16
dec
pop
and
aaa
add
cmp
out
xor
(bad)
rcr
std
jg
outs
adc
push
mov
xor
adc
add
mov
mov
pop
in
bound
xor
pop
adc
or
xchg
inc
repnz
(bad)
(bad)
cmp
iret
pop
pusha
or
adc
mov
(bad)
mov
and
jg
dec
sbb
scas
sub
(bad)
push
or
iret
(bad)
shr
dec
leave
loop
adc
xor
dec
pop
pop
sahf
ret
fldcw
xchg
(bad)
hlt
daa
xchg
sub
jnp
out
jbe
mov
nop
into
addr16
ss
sub
push
sti
aas
xor
pop
and
aas
ins
ins
addr16
stos
add
add
sub
repz
aad
frstor
cs
pop
jns
pop
adc
and
lds
add
mov
xchg
or
bound
shl
push
cmps
loopne
jo
mov
xchg
jmp
pop
dec
and
inc
repz
mov
and
pop
sbb
mov
cmp
sub
cmp
adc
repz
repz
push
popa
xchg
lods
cmp
xor
popa
imul
dec
mov
aaa
rol
jecxz
fidiv
ss
dec
cmp
out
add
(bad)
xchg
cmp
fcomp
pop
idiv
lock
cli
inc
pushf
or
pop
inc
cmp
iret
(bad)
clc
add
push
jo
out
cmps
cmp
js
addr16
sar
stos
xlat
es
ins
ds
push
inc
dec
push
repz
mov
pop
xchg
lods
mov
out
sahf
addr16
adc
int
iret
rep
sahf
loope
inc
sub
cmp
adc
dec
pop
pop
and
cmp
push
jo
aas
inc
dec
push
push
pusha
jns
iret
repz
in
inc
sub
jns
out
and
int
jns
and
adc
xlat
mov
add
idiv
vpackuswb
mov
sahf
out
inc
pop
imul
dec
dec
pop
lahf
into
out
sahf
int
dec
push
cs
outs
int
jns
xchg
mov
push
iret
out
sahf
pushf
ret
jmp
repz
mov
in
push
adc
out
sub
jg
jg
pop
sbb
lods
cs
and
iret
adc
mov
lods
sub
pop
sbb
or
sbb
rol
ss
adc
(bad)
(bad)
dec
lods
pop
dec
movs
enter
push
push
mov
and
mov
add
adc
outs
push
mov
aas
mov
cmp
shl
sub
xchg
cmp
xor
lods
test
sub
xchg
pushf
fs
sub
test
adc
xor
xor
jl
dec
jb
imul
dec
pusha
aad
xchg
xchg
jo
add
jns
push
push
push
mov
xchg
push
add
add
test
cmp
xlat
lock
push
ja
mov
(bad)
cmp
dec
pop
dec
xchg
jecxz
dec
nop
es
dec
lahf
dec
stos
arpl
int
push
adc
inc
rcl
popf
mov
jne
add
dec
aaa
pop
inc
jo
mov
or
push
aaa
daa
sbb
das
arpl
mov
jecxz
mov
arpl
jae
jb
fisubr
ins
mov
pop
add
jmp
and
xchg
pusha
gs
scas
or
push
int3
inc
and
test
retf
dec
ror
lds
adc
fld
jmp
sbb
add
stos
jne
push
add
aaa
pop
sbb
cmp
dec
in
sbb
push
scas
aaa
push
sbb
sbb
arpl
pusha
push
aaa
ja
push
add
push
ret
outs
push
shl
ja
xor
sub
sar
fiadd
mov
dec
ja
add
call
xor
xchg
mov
pop
mov
cmp
cmp
mov
dec
dec
loopne
pushf
pop
addr16
jbe
clc
js
in
mov
call
ja
lahf
sub
jb
sbb
xchg
pop
aas
xchg
pop
mov
inc
inc
push
push
adc
repz
mov
add
mov
jb
das
dec
cmp
sbb
inc
fs
loop
imul
retf
and
dec
sub
inc
inc
out
(bad)
or
or
xor
out
fist
cmps
xor
ds
dec
xlat
push
loopne
imul
das
inc
push
loopne
adc
mov
cmp
pop
push
in
ss
call
jb
iret
stos
pop
pop
pop
lds
inc
daa
add
xor
nop
pop
mov
clc
cs
addr16
inc
das
push
cmps
adc
aas
sub
sub
adc
mov
out
push
dec
dec
inc
jg
push
inc
sbb
arpl
dec
jbe
push
mov
mov
fisubr
and
adc
inc
test
test
fmul
out
aaa
cs
push
mov
or
lods
mov
ds
leave
mov
outs
mov
add
sti
or
ja
xor
push
and
jmp
cmp
daa
cmp
iret
sbb
pusha
fwait
and
sub
ja
inc
cmp
stos
(bad)
sbb
mov
xchg
inc
pop
out
stc
(bad)
sub
addr16
jbe
loopne
mov
imul
ins
push
push
inc
push
adc
push
inc
aas
xlat
test
mov
stos
jecxz
xchg
mov
jne
js
mov
xor
jne
mov
dec
lahf
jmp
in
test
scas
jnp
and
aaa
xchg
push
push
add
xchg
dec
in
or
xor
lahf
xchg
add
rcr
outs
dec
push
add
push
sub
xor
and
push
push
inc
inc
mov
stos
and
adc
(bad)
cmp
jecxz
pop
pop
stos
xchg
or
add
xor
adc
fild
or
mov
sub
pop
mov
test
xchg
test
cmps
mov
inc
xchg
cmp
pop
mov
pop
imul
and
test
inc
jbe
fucomi
dec
scas
fs
push
inc
daa
in
movs
sbb
inc
inc
push
mov
stos
xchg
mov
aam
inc
jmp
cs
and
popa
lds
daa
inc
jns
push
daa
mov
pop
jg
ja
mov
sub
mov
imul
repz
fcmovnu
push
or
lahf
and
cmc
test
aaa
and
pop
mov
adc
enter
daa
push
jecxz
test
js
pop
imul
ss
sub
push
shr
jmp
add
add
mov
dec
arpl
outs
sub
mov
fisttp
push
es
sub
pop
lock
mov
into
push
imul
mov
add
add
xchg
dec
push
add
fdivrp
or
dec
add
push
aaa
es
mov
push
inc
inc
inc
rol
shl
imul
in
mov
out
sub
xor
idiv
mov
out
stos
inc
mov
add
add
aas
push
push
cmp
daa
add
or
aas
sub
verr
or
sub
cli
fwait
xor
jge
mov
sub
ins
xchg
enter
mov
scas
fisub
sbb
mul
sbb
stos
push
fisttp
(bad)
bound
outs
jns
aaa
cmp
imul
pop
outs
data16
out
inc
fistp
jge
push
pop
xor
call
or
lds
or
ja
(bad)
mov
jae
bound
scas
(bad)
fsub
dec
repz
repz
add
jmp
push
sbb
ds
mov
or
jno
xor
ret
in
xchg
fdiv
jl
inc
pop
das
push
xor
jp
aaa
push
das
jp
fidiv
pop
popa
sbb
pop
xchg
mov
pop
out
add
dec
(bad)
mov
pop
jnp
icebp
out
lock
pop
retf
sbb
pop
push
cmps
ror
(bad)
xor
sbb
mov
jo
outs
imul
xor
add
mov
mov
add
sub
fidiv
ret
xchg
dec
push
mov
add
inc
sahf
shr
les
aaa
xor
push
add
ins
ds
and
(bad)
out
push
lods
mov
lidtd
bswap
or
scas
cmp
je
inc
xchg
mov
into
lds
jnp
adc
push
sub
or
das
push
sub
ins
jae
mov
in
push
or
outs
xchg
dec
push
(bad)
mov
pop
inc
outs
inc
inc
pop
call
outs
inc
jb
fiadd
add
or
xor
pop
add
dec
push
jo
lock
pop
stos
inc
ss
mov
ja
das
push
sub
out
jge
inc
mov
dec
add
aad
rcr
push
inc
or
mul
lods
adc
fcmovnbe
bound
xchg
iret
xor
sbb
add
jb
jo
js
test
nop
add
pushf
outs
shl
or
and
popf
and
push
popf
ins
popa
test
mov
(bad)
outs
addr16
fimul
push
dec
adc
and
js
cmps
sub
gs
test
mov
jns
outs
jae
arpl
push
mov
push
fwait
or
inc
(bad)
jo
jge
rcl
ret
push
pop
addr16
lock
arpl
ret
stos
ret
pop
out
pop
mov
jns
cmovnp
push
addr16
or
xchg
sub
inc
out
cmp
mov
ja
xchg
aad
xchg
dec
jnp
xor
bound
jl
mov
aam
cld
lahf
or
sahf
out
adc
dec
jbe
jo
pop
push
ret
outs
jae
inc
gs
gs
fadd
push
ins
test
ret
inc
add
pop
stos
adc
mov
hlt
mov
push
das
(bad)
(bad)
(bad)
in
xchg
jae
jnp
sub
(bad)
add
out
push
cmps
je
imul
cmp
jo
jb
das
cmp
lahf
mov
jle
out
jb
int
push
pop
fistp
jae
in
ins
(bad)
(bad)
ins
ins
cmp
inc
iret
fild
mov
out
outs
push
imul
outs
imul
fistp
xchg
outs
jg
aas
jbe
mov
pop
imul
leave
in
je
jo
iret
iret
sbb
scas
in
or
das
(bad)
outs
outs
ja
sbb
ins
(bad)
inc
push
push
cmps
inc
mov
push
mov
sub
sbb
mov
pop
push
inc
add
dec
(bad)
mov
mov
push
shl
mov
sub
jmp
ja
dec
pop
mov
dec
bound
push
pop
je
shl
push
out
push
and
cmp
dec
xchg
mov
bound
jo
imul
push
cmps
inc
push
retf
or
jb
push
push
pop
push
mov
inc
daa
seta
je
shr
mov
out
dec
imul
inc
mul
push
mov
pop
cmps
ins
dec
(bad)
in
pop
fidivr
push
pop
je
aam
mov
das
sub
inc
dec
aaa
dec
dec
aas
inc
hlt
adc
pop
imul
sub
mov
pop
js
pop
mov
mov
ins
pop
mov
mov
xlat
inc
cmps
outs
dec
iret
test
aaa
dec
mov
xchg
mov
das
cs
(bad)
ins
mov
pop
jns
pop
xor
pop
fist
mov
in
mov
inc
ja
es
addr16
outs
das
je
js
mov
xchg
in
mov
pop
jb
jae
pop
rol
jns
inc
xlat
imul
arpl
int
out
jecxz
mov
mov
retf
mov
xor
or
xlat
ins
cmps
adc
sbb
push
aaa
dec
pop
pop
xor
ins
mov
xlat
pop
div
inc
scas
pop
jg
movs
lds
push
cmps
inc
xor
jnp
pop
pop
push
mov
out
fisttp
div
fcmovbe
dec
scas
pop
mov
inc
daa
out
add
mov
inc
dec
not
mov
repnz
inc
add
ror
pop
out
xchg
and
imul
and
repnz
dec
add
add
(bad)
(bad)
test
jmp
mov
(bad)
push
repnz
retf
mov
mov
and
add
wrmsr
sbb
fist
ins
mov
xchg
scas
xchg
ja
push
scas
push
das
inc
inc
outs
xor
popa
(bad)
or
daa
pop
fsubr
pop
xchg
or
push
xchg
dec
sub
push
jmp
jae
pop
aaa
data16
pop
inc
fisub
jb
aad
sub
inc
mov
sti
pop
or
jg
push
mov
jae
dec
inc
sbb
push
pop
inc
inc
dec
(bad)
scas
loopne
das
outs
mov
inc
ins
jbe
adc
inc
pop
pop
imul
or
add
add
sub
adc
push
iret
mov
jae
lds
data16
mov
addr16
bound
xor
pop
rcr
repnz
imul
in
adc
push
pop
jbe
mov
dec
pop
jns
out
xchg
int3
sahf
mov
das
jno
rcl
pop
ja
addr16
jp
arpl
test
mov
inc
cli
inc
or
pop
fiadd
xchg
jbe
ja
ret
in
rcr
ja
mov
dec
push
(bad)
add
dec
ins
cs
adc
xchg
fcmovu
or
es
jne
jecxz
add
pop
jecxz
(bad)
jb
push
pop
xlat
push
arpl
jp
dec
pop
bound
push
pop
xchg
arpl
pop
(bad)
outs
mov
or
jo
push
pop
jb
add
push
ja
sub
sbb
stos
mov
xchg
ss
mov
mov
sbb
ins
(bad)
pop
jae
lods
test
pop
int
fwait
mov
pop
arpl
pop
jb
test
gs
lea
xchg
jns
das
jns
mov
je
gs
push
bound
xchg
jno
icebp
outs
aas
or
or
or
jbe
scas
pop
pop
pop
push
ins
(bad)
daa
pop
dec
shl
fisub
das
out
pop
ja
daa
cmp
mov
mov
das
out
popa
pop
or
dec
mov
xor
(bad)
or
mov
outs
or
dec
pop
daa
fisubr
or
inc
sub
pop
imul
fisttp
sbb
bnd
pop
dec
jb
jns
jo
icebp
ss
or
ja
mov
or
mov
stos
outs
outs
fist
sub
inc
mov
mov
out
cmp
dec
adc
pop
or
jae
ja
int
fcmovnbe
pop
or
call
cmps
test
aas
push
pop
rcl
fcmovbe
sti
pop
jae
push
call
or
jae
jno
and
ja
ror
pop
imul
xchg
imul
test
(bad)
pop
imul
cdq
lea
push
sti
pop
jae
test
mov
jg
xchg
jl
adc
jo
mov
mov
pop
sbb
ja
imul
mov
and
xor
or
inc
add
xchg
jg
ja
jle
aaa
jne
jne
and
data16
out
push
lods
pusha
xchg
jbe
loopne
out
inc
(bad)
out
mov
aas
pop
je
fnstcw
jbe
pop
push
jns
loop
jle
push
call
fidiv
mov
arpl
es
and
out
test
inc
cmp
mov
pusha
add
(bad)
jnp
dec
inc
mov
sub
aaa
mov
sti
xlat
in
jnp
pushf
mov
comiss
pop
imul
push
mov
inc
aaa
clc
popf
stc
push
dec
cli
mov
hlt
and
es
std
xor
cmp
pop
cli
repz
repnz
inc
out
arpl
push
inc
outs
sbb
cmc
jnp
sti
xor
pop
jnp
add
daa
or
leave
add
je
mov
and
xchg
push
retf
cdq
jp
bound
adc
stos
pop
rcl
jb
push
jl
outs
bndstx
imul
imul
pop
test
jb
sub
addr16
dec
lds
mov
scas
xchg
outs
jnp
loop
pop
pop
jae
inc
mov
jbe
daa
out
jge
mov
gs
xchg
fneni(8087
retf
add
jp
pop
xor
cmps
imul
mov
bound
pop
sahf
iret
cmovb
mov
gs
mov
mov
cs
addr16
imul
repnz
cmp
das
outs
dec
das
jae
(bad)
imul
into
addr16
daa
add
pop
ret
jb
ins
pop
loop
ss
and
test
jecxz
daa
fild
jmp
add
mov
jns
push
movs
(bad)
out
das
pop
add
jp
shl
imul
imul
jae
push
jne
movs
popa
repnz
push
inc
jbe
jb
imul
das
call
xor
outs
movs
xor
jbe
daa
jb
repnz
(bad)
pop
cs
mov
retf
pop
imul
lahf
adc
test
push
loope
pop
xor
inc
xor
sbb
out
dec
scas
je
outs
js
jb
aaa
and
ja
jbe
(bad)
ja
sti
outs
shl
mov
ja
push
imul
ja
sbb
fiadd
push
scas
mov
idiv
push
outs
add
scas
pop
inc
jge
imul
arpl
sbb
push
mov
(bad)
pop
(bad)
fcom
imul
out
addr16
(bad)
dec
jecxz
jne
xchg
dec
pop
lds
imul
popa
daa
popa
fisub
inc
(bad)
cmp
sbb
dec
jp
adc
cmps
in
imul
shl
stos
jne
outs
scas
outs
into
popa
inc
pop
fisttp
cmp
daa
fist
aaa
aas
add
mov
sti
imul
cmp
daa
jb
addr16
ficomp
test
jl
sbb
mov
das
imul
add
pop
outs
arpl
lods
and
fwait
shl
repz
mov
mov
jmp
or
push
in
or
cmp
outs
aas
xlat
ss
fcom
jnp
push
dec
jb
ss
mov
xchg
push
push
dec
cmps
inc
ins
jns
or
and
(bad)
imul
ja
(bad)
outs
xchg
bndldx
jns
jns
pop
push
ins
test
push
ss
jnp
daa
addr16
xchg
jl
pop
jne
fs
pop
mov
(bad)
push
jmp
fisttp
mov
outs
cmps
addr16
stos
dec
or
jnp
outs
outs
imul
aas
imul
sub
dec
outs
sub
pop
sahf
dec
jne
das
in
in
imul
mov
jne
jbe
dec
vmread
addr16
push
sbb
mov
dec
xor
xchg
ins
sbb
sub
jp
dec
ins
je
mov
das
arpl
imul
jae
dec
cs
push
push
ins
push
pop
(bad)
dec
pop
xchg
dec
mov
dec
push
xchg
out
pop
mov
jbe
mov
sahf
icebp
(bad)
in
and
fsubr
das
gs
(bad)
jo
push
adc
adc
inc
outs
div
xchg
aaa
mov
mov
jns
dec
imul
or
jns
cld
pop
retf
mov
jne
movs
in
jb
xchg
mov
ret
das
push
bound
in
mov
jno
jmp
outs
inc
mov
jbe
add
pop
in
push
mov
jmp
jno
arpl
jg
ins
pop
adc
lods
loop
jecxz
scas
push
pop
mov
js
repnz
iret
jnp
cmps
(bad)
ror
fbld
in
pop
loope
xchg
outs
mov
in
jecxz
ror
mov
inc
add
and
dec
das
mov
push
inc
arpl
les
outs
xor
jb
jb
push
pop
ins
aaa
xchg
mov
cmp
cli
call
xor
add
pop
mov
pop
jae
aaa
dec
(bad)
adc
aas
(bad)
push
and
mov
imul
repz
mov
inc
push
and
mov
mov
jg
outs
dec
push
jl
push
lock
xor
cli
loop
mov
gs
rcl
cmp
pop
repz
outs
dec
lods
aam
add
jmp
xor
retf
jns
ret
add
jbe
out
ja
fistp
je
fnsave
inc
cmp
push
mov
loopne
neg
ja
xchg
xchg
sub
out
loope
fld
adc
mov
jae
fmul
scas
pop
stos
adc
mov
mov
arpl
xchg
xchg
test
jae
ins
jae
xor
test
pop
in
je
fbstp
mov
jae
aaa
push
mov
imul
ja
xor
push
addr16
mov
pop
movntq
imul
jo
jo
push
repz
jp
loope
cli
aas
imul
rcl
and
mov
xlat
les
sub
iret
push
jbe
mov
ds
outs
mov
jns
xchg
jg
push
sbb
cmps
clc
mov
xor
js
push
rol
jge
ficom
das
outs
xchg
in
ret
xlat
pop
xchg
push
fild
fdiv
adc
daa
cvtdq2ps
in
pop
push
std
or
add
xor
pop
addr16
pop
add
(bad)
je
dec
fwait
in
ja
cs
jns
out
add
jg
adc
adc
adc
push
pop
sbb
sbb
jns
out
sbb
inc
add
and
push
add
mov
mov
rcl
and
ret
sbb
add
push
add
add
adc
sbb
lds
cli
and
xor
inc
jg
add
leave
leave
leave
adc
adc
mov
leave
add
in
push
cli
xor
or
push
ficomp
pop
push
pop
sbb
aad
bound
(bad)
cmp
call
sbb
pop
shl
adc
(bad)
cld
(bad)
outs
in
add
adc
adc
int
fild
inc
ds
add
int
sbb
adc
push
add
sub
sar
sbb
dec
push
push
popa
pusha
add
xor
cmps
shl
xor
mov
out
pop
push
dec
adc
pop
push
jo
xor
sar
mov
push
pop
cmp
loopne
push
pop
cmp
shl
nop
out
pop
cmp
cmp
repz
rol
adc
adc
mov
cmp
repz
dec
lock
jns
mul
mov
jecxz
sub
jns
out
or
out
sahf
add
inc
call
stc
out
sbb
add
push
jl
fdivr
repz
sahf
pop
(bad)
ins
sub
or
cmp
repz
push
iret
repz
adc
cmp
repz
bound
movs
add
cmp
repz
pop
iret
repz
sbb
iret
repz
push
mov
repz
repz
add
cld
push
add
add
jbe
int3
repz
repz
lods
push
iret
repz
xchg
or
cmp
repz
arpl
(bad)
jnp
neg
push
outs
cs
cmp
call
adc
push
ret
jns
popa
and
out
jns
pop
sbb
jns
shr
xchg
out
sahf
mov
mov
cmps
push
mov
push
out
jns
retf
stos
dec
sahf
out
add
sahf
out
jns
call
dec
ins
sub
out
jns
cli
push
adc
out
jns
jae
(bad)
arpl
cmps
add
jns
pop
sbb
sahf
cmp
imul
out
jns
or
sahf
out
pop
ja
into
addr16
out
daa
scas
pop
xchg
sahf
out
out
pop
pop
sahf
jg
out
in
aas
fisubr
das
mov
push
lahf
(bad)
push
dec
(bad)
jmp
inc
cs
mov
cs
shl
icebp
leave
mov
jmp
or
mov
stc
lds
in
aad
cs
mov
mov
lods
in
or
in
mov
cs
mov
in
shl
repz
stos
or
xchg
or
cs
cs
cmps
out
cs
xchg
xlat
mov
test
scas
out
nop
or
adc
mov
inc
je
sar
out
or
or
into
push
mov
cmp
ret
pop
add
sub
mov
pop
or
mov
cmps
lds
push
push
fild
cmp
aas
adc
add
fbstp
arpl
mov
push
push
sbb
or
mov
cmps
push
sbb
or
imul
fcomp
adc
xor
inc
imul
or
add
mov
pop
sub
jo
and
lods
movs
cs
scas
pop
imul
push
je
mov
or
or
(bad)
adc
sub
mov
fbstp
add
pop
and
mov
mov
fisttp
mov
arpl
sub
daa
xor
xchg
mov
push
push
dec
mov
ss
inc
inc
sub
xor
mov
fcomp
je
retf
or
loop
pop
add
mov
and
pop
sub
popa
or
xor
push
sbb
ins
outs
xchg
adc
jp
iret
pop
arpl
xchg
and
xlat
call
jmp
pop
sub
aas
cmp
das
fcmovb
dec
scas
xor
(bad)
shl
cmp
ss
(bad)
lods
xlat
scas
repz
pop
xor
cmp
je
test
pop
push
pop
or
aam
mov
outs
loopne
fcmovnb
push
dec
fld
(bad)
dec
inc
and
push
jo
pop
add
mov
ror
aam
mov
jmp
pop
and
test
sub
xlat
mov
fdivr
daa
outs
push
inc
push
push
jmp
adc
push
inc
or
push
mov
addr16
shl
leave
das
packuswb
das
sub
pop
mov
xor
push
gs
daa
add
shl
cmps
cs
outs
pop
les
mov
inc
cmp
aaa
int3
add
xor
add
push
imul
push
mov
jmp
xchg
mov
jmp
dec
dec
sbb
aam
sub
ds
jg
push
aaa
dec
repnz
push
or
xchg
pop
jo
add
pop
cmps
mov
js
test
sbb
sub
das
push
jo
push
xchg
xchg
mov
xor
inc
xchg
jb
xor
aas
xor
xor
mov
in
pop
mov
(bad)
and
jb
push
mov
add
(bad)
mov
jb
cmps
mov
sub
cmp
icebp
or
inc
ret
or
retf
(bad)
or
loopne
cmps
popa
ins
cs
inc
dec
rol
fidivr
fs
dec
xor
jb
jecxz
jecxz
sbb
inc
push
dec
xchg
add
sub
aas
sub
jmp
rol
cmp
add
sbb
sti
push
jo
ins
pop
mov
dec
imul
ret
xchg
mov
add
fisttp
enter
xor
enter
xor
call
xor
nop
push
sub
push
xor
fwait
div
jg
add
cmp
xor
cmp
rol
xor
stos
mov
(bad)
ficomp
push
cmp
xchg
inc
outs
adc
push
retf
inc
fist
imul
adc
pushf
dec
add
lods
sbb
xlat
aaa
ss
adc
dec
fbld
or
out
paddd
ds
bound
lahf
fs
or
and
das
jo
add
aaa
sub
push
mov
cmp
push
and
rcl
fwait
sbb
adc
jg
pop
push
dec
ins
fist
add
das
mov
push
sti
inc
sbb
sub
sub
sbb
push
sbb
mov
repnz
mov
and
sbb
mov
mov
or
jmp
pop
jno
sub
mov
ret
dec
or
mov
xor
pop
add
pop
jo
test
inc
push
rol
jp
mov
xlat
dec
lds
dec
add
sbb
ror
ins
out
je
arpl
adc
inc
pop
lahf
mov
stos
bound
ret
shl
ins
retf
dec
shl
fs
lock
sbb
(bad)
nop
pop
adc
pusha
sbb
sub
leave
push
xlat
xor
popa
mov
push
shr
sub
movs
ja
sbb
aaa
outs
or
jecxz
aaa
sbb
cmp
cmp
cld
push
ret
sub
dec
movs
xchg
xchg
(bad)
movs
push
mov
pandn
xor
bound
mov
xor
sub
daa
cmc
mov
arpl
dec
inc
add
out
addr16
dec
ret
das
adc
jmp
ds
call
out
sbb
test
and
inc
pavgw
outs
test
rol
jl
movs
outs
mov
aas
pop
data16
jecxz
sar
push
xchg
jae
outs
ja
xor
pop
xor
xchg
xchg
and
leave
data16
add
sahf
push
pop
cs
sub
xor
push
push
or
stos
test
test
pusha
jae
inc
push
bound
mov
inc
inc
push
repz
pop
adc
push
pop
stos
dec
sti
push
lods
add
adc
fild
test
aaa
outs
ret
inc
in
mov
pop
jne
aam
dec
aaa
fstp
dec
fbld
cmp
and
out
pop
xor
mov
pop
pop
cmps
dec
jmp
das
dec
push
icebp
dec
jnp
ja
dec
aaa
inc
cmp
mov
das
ja
add
pop
mov
push
cmp
jmp
push
mov
aaa
mov
push
dec
cmp
retf
cmp
jnp
mov
jmp
adc
ja
fcom
and
aaa
outs
lods
sbb
(bad)
cmps
or
mov
jbe
mov
daa
dec
or
rcl
int3
lods
ret
push
test
xchg
outs
mov
test
arpl
(bad)
push
mov
sbb
mov
xor
mov
iret
jns
imul
stos
outs
in
or
pop
jo
jne
test
daa
inc
pop
or
xchg
inc
xor
(bad)
pop
adc
pop
add
out
aad
push
sub
jae
mov
imul
ret
mov
aas
mov
scas
stos
data16
pop
mov
cmp
inc
daa
or
bound
mov
lods
test
imul
push
or
mov
test
pop
iret
jo
mov
cmp
outs
pop
mov
data16
outs
xchg
adc
call
mov
sub
sub
js
je
jo
cmp
xchg
addr16
cwde
xor
mov
xor
das
add
mov
inc
in
jecxz
call
cwde
mov
sbb
ja
sti
add
ret
test
lahf
add
pop
or
pop
cmps
lahf
sbb
and
inc
in
clc
push
jbe
pop
daa
jb
pop
and
das
xlat
bound
mov
jb
retf
addr16
dec
ins
shl
pop
js
(bad)
ins
test
idiv
call
pop
mov
inc
and
mov
ret
jg
add
and
or
inc
(bad)
repz
je
sbb
push
(bad)
pop
pop
popf
js
fsubr
mov
adc
daa
pop
push
ja
add
mov
add
imul
mov
std
mov
ja
lahf
imul
inc
pop
cmp
xlat
push
out
mov
and
into
ins
jae
push
mov
or
mov
ja
mov
pop
pop
mov
fild
mov
je
ins
arpl
rol
add
lds
pop
mov
fadd
add
pop
push
or
je
jb
mov
fs
fmul
mov
xor
arpl
xchg
adc
mov
lea
(bad)
push
sbb
add
je
rcl
cmp
js
outs
arpl
jbe
loope
call
pop
push
shr
add
rol
cmp
sbb
daa
xchg
and
rol
and
cmps
xor
repz
neg
dec
sub
pop
pop
das
push
inc
jae
add
sbb
lahf
push
inc
loope
je
or
push
imul
fs
dec
mov
push
xor
inc
(bad)
and
outs
pop
push
jg
sbb
sbb
outs
push
fnstsw
jb
lods
fistp
sub
xor
push
xor
out
xor
add
xor
out
mov
jg
ins
sbb
rcr
cmp
and
mov
jae
scas
adc
pop
lahf
sbb
scas
mov
lahf
inc
add
xor
jmp
jp
fs
inc
das
xchg
sub
xor
cmp
ins
je
shr
(bad)
xor
daa
div
(bad)
add
arpl
or
es
adc
je
sub
mov
fadd
out
dec
or
dec
push
mov
data16
daa
fsub
pop
adc
fsubr
xor
sub
adc
outs
inc
and
dec
and
gs
mov
sub
fist
xor
pop
sahf
and
or
pandn
js
mov
iret
jo
addr16
jl
lock
jge
iret
test
popa
sub
call
sahf
add
add
or
mov
cwde
add
inc
ret
ret
add
and
stc
mov
enter
mov
inc
xor
fwait
sub
mov
ss
xchg
in
movs
push
lods
aas
jmp
inc
inc
push
jns
sbb
cmp
ss
xor
dec
cli
sub
lods
dec
pop
push
cmp
dec
lahf
cs
repnz
add
sub
ja
js
(bad)
cli
mov
nop
aas
mov
js
shr
rol
fadd
mov
xor
es
int
ss
lds
xchg
add
in
(bad)
fbstp
push
dec
test
nop
cs
test
push
data16
cmps
cmp
mov
mov
cwde
push
scas
dec
pop
sbb
mov
jns
mov
int
scas
imul
add
xor
and
arpl
push
dec
inc
push
mov
stos
sub
inc
push
daa
out
imul
es
cdq
fcom
and
daa
dec
pop
mov
push
pushf
(bad)
dec
mov
sahf
inc
movs
inc
jbe
sbb
sub
dec
in
jb
dec
enter
pop
push
in
push
shl
or
movs
fwait
pop
dec
fsub
inc
fdivr
nop
das
and
xchg
ja
es
lock
add
pop
sub
or
jb
jl
pop
aaa
push
and
add
and
adc
or
jae
jge
cmp
mov
movs
add
bound
in
in
femms
push
jb
arpl
inc
daa
xchg
and
cmp
daa
dec
aam
ins
jae
repnz
rcr
fsub
pop
mov
js
addr16
out
js
cs
les
pop
or
repz
add
push
xor
push
mov
es
xor
fldlg2
scas
call
sbb
push
push
add
imul
loopne
fistp
stos
pop
out
mov
iret
popa
stos
stc
push
cmp
add
nop
or
mov
mov
jo
div
clc
xor
daa
jo
cwde
gs
xor
out
push
lods
out
jae
push
mov
fiadd
pop
sahf
rcl
leave
add
aaa
pusha
jne
fiadd
scas
xor
cld
pop
xlat
push
sub
dec
call
in
inc
dec
rol
jecxz
fnstcw
add
push
adc
sub
add
mov
mov
int3
adc
dec
or
sub
pop
mov
clc
mov
and
(bad)
js
ja
cmp
and
push
popf
sub
shl
adc
fdivr
dec
test
add
push
mov
bound
ja
pop
aaa
stc
sub
add
and
mov
xchg
push
dec
or
ret
xchg
inc
push
xchg
pop
ret
dec
repnz
aas
mov
fisubr
in
jl
sub
xor
mov
sbb
imul
mov
add
in
add
retf
aas
imul
ss
xor
dec
add
and
mov
pop
dec
aam
and
xor
and
fimul
or
dec
adc
add
push
dec
cmp
dec
adc
pop
sbb
mov
and
fimul
push
adc
dec
dec
jl
sub
jge
out
aas
xchg
adc
push
test
ds
add
or
xchg
mov
movhps
dec
adc
lar
ret
xor
dec
(bad)
dec
(bad)
cld
jge
pushf
dec
xlat
int3
add
pop
cmp
push
and
lock
nop
test
mov
jle
cmps
in
mov
shr
push
xor
mov
jnp
sub
sub
sub
scas
xor
test
push
ja
xor
xchg
dec
lock
sub
inc
xor
lods
fs
xchg
cmps
inc
push
add
pop
add
add
push
inc
push
xchg
arpl
mov
sbb
sbb
inc
int
pop
push
add
imul
dec
or
push
outs
fcom
mov
add
xchg
mov
in
and
(bad)
xlat
push
sbb
out
pop
shl
pop
das
aaa
test
(bad)
fimul
xor
mov
sub
cmp
jnp
inc
pop
mov
push
push
push
pop
aaa
pop
mov
push
inc
jg
lock
add
nop
xchg
test
sub
cmp
pusha
cmp
cmp
movs
sbb
sub
push
pusha
daa
mov
cmp
cld
dec
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
inc
scas
push
adc
adc
add
and
or
dec
adc
add
aas
(bad)
mov
mov
stos
xor
cs
cs
add
pop
adc
ss
pop
mov
mov
es
js
leave
and
adc
add
inc
bound
aas
in
pusha
test
mov
sub
stos
jmp
dec
dec
aas
ficom
dec
xor
ficom
sub
xor
mov
fstp
inc
mov
aam
pop
add
jg
push
aas
int3
xor
or
sar
or
ins
mov
inc
ror
mov
push
jg
mov
call
add
adc
mov
aas
mov
mov
xor
or
mov
push
aas
sbb
inc
or
or
and
add
add
add
pop
adc
push
jne
pop
adc
mov
sbb
mov
dec
push
push
adc
jg
sbb
adc
stos
(bad)
call
sub
push
push
add
sub
pop
add
dec
fwait
test
(bad)
(bad)
mov
adc
inc
add
push
dec
jg
mov
int
adc
and
and
xor
bswap
pushf
cmp
push
and
dec
adc
add
push
or
pushf
aas
add
sub
mov
and
scas
lods
outs
aas
add
inc
inc
test
push
cmp
test
inc
leave
cmp
outs
popa
jg
dec
es
cmp
and
jbe
add
add
shl
fimul
dec
aas
and
adc
push
or
sbb
xchg
jecxz
inc
dec
out
and
dec
inc
mov
inc
or
es
mov
dec
call
push
sub
adc
jmp
xchg
pop
ins
aas
inc
add
add
and
and
leave
mov
dec
and
pop
cld
adc
cs
mov
xchg
leave
inc
jb
aas
xchg
xchg
xchg
pop
and
dec
pop
pop
leave
inc
jb
pusha
dec
dec
xchg
mov
and
cs
dec
xchg
xchg
inc
xor
call
jg
jg
jbe
cdq
daa
outs
add
mov
xchg
outs
jo
enter
aas
pop
add
sub
leave
add
int3
add
dec
add
shr
fwait
mov
push
bound
jg
dec
add
mov
arpl
stos
stos
shl
or
ror
mov
and
leave
inc
xchg
jno
pop
imul
push
xchg
mov
aas
(bad)
and
mov
ins
mov
jb
pop
pop
sbb
sbb
inc
jb
push
add
add
sub
sub
pop
mov
mov
inc
jb
jae
mov
fs
xchg
mov
mov
mov
arpl
mov
and
mov
mov
add
push
add
test
stos
dec
or
adc
int
in
idiv
and
pop
pop
jb
pop
sbb
add
repnz
aas
add
mov
(bad)
inc
inc
inc
or
aas
jg
pop
pop
adc
enter
add
dec
mov
aas
inc
inc
repnz
and
leave
pusha
into
add
jg
aas
or
(bad)
aas
pop
and
in
inc
aas
cmp
add
and
inc
sahf
mov
inc
add
leave
inc
shl
icebp
mov
aas
cmp
ds
mov
and
cs
inc
inc
ret
in
mov
dec
cs
mov
ret
mov
and
cs
ret
mov
xchg
mov
and
cs
cs
mov
mov
mov
and
cs
mov
mov
cs
mov
push
scas
bound
aas
(bad)
cmp
inc
jb
aas
cmp
pop
aas
inc
pop
leave
inc
jb
inc
inc
jb
pop
add
pop
leave
inc
jge
inc
jb
pop
jge
pop
and
leave
jge
lea
and
stos
dec
ja
aas
add
pop
xchg
jg
in
xchg
xchg
imul
cs
or
inc
ins
xchg
adc
cmp
and
sub
push
xchg
outs
xchg
aas
cmp
dec
aas
inc
dec
cs
mov
mov
mov
in
mov
dec
mov
mov
mov
xor
and
leave
jg
jg
inc
xor
sar
add
xchg
mov
in
mov
cs
mov
mov
xchg
mov
mov
mov
cs
mov
mov
cs
xchg
and
xchg
test
test
xchg
mov
(bad)
mov
and
cs
xchg
xchg
xchg
and
loop
nop
jg
es
and
bound
cdq
dec
es
mov
and
mov
mov
(bad)
mov
ret
mov
and
ret
dec
cs
xchg
mov
mov
mov
and
cs
mov
mov
mov
mov
xchg
mov
and
cs
mov
mov
mov
adc
(bad)
mov
mov
pop
and
mov
jg
mov
mov
es
fs
xchg
mov
sub
loop
dec
sar
jg
dec
and
xor
pop
pusha
dec
es
data16
imul
imul
and
dec
xchg
mov
mov
cs
mov
loopne
jns
jns
inc
xor
and
jns
adc
inc
xor
jp
and
add
inc
jb
jp
xchg
pop
and
jp
inc
rol
jp
call
leave
mov
jb
mov
pop
mov
jo
(bad)
mov
mov
jb
mov
pop
mov
jb
test
test
test
add
add
add
pop
sub
pop
mov
mov
inc
jb
mov
and
test
xor
inc
ret
jae
leave
inc
xor
and
jae
adc
inc
xor
je
and
add
inc
jb
je
xchg
pop
and
je
xchg
ret
je
call
jne
leave
inc
xor
jne
xchg
dec
and
jne
adc
inc
jbe
inc
xor
and
leave
jbe
jbe
adc
xchg
jbe
add
mov
and
leave
inc
ja
inc
xor
and
leave
ja
ja
inc
xor
and
jnp
adc
inc
xor
jnp
xchg
dec
and
jnp
leave
add
and
inc
xor
aas
xchg
xchg
jbe
mov
aas
push
jg
xor
xor
push
pop
pop
jle
leave
inc
jb
outs
outs
xchg
pop
and
outs
outs
pop
leave
inc
jb
outs
outs
pop
adc
and
push
inc
jb
jo
xchg
pop
and
jo
pop
leave
inc
jb
jo
mov
jg
cdq
dec
es
jno
jno
mov
jno
cdq
dec
es
es
mov
jb
and
es
mov
sub
sub
sbb
and
dec
es
mov
and
and
and
rol
jle
xchg
mov
xchg
and
es
mov
xchg
mov
inc
xchg
mov
and
shl
dec
cs
xchg
mov
rol
add
push
pop
aas
mov
xchg
dec
push
jg
mov
adc
inc
mov
inc
xor
adc
call
mov
inc
add
fiadd
cwde
cdq
aas
call
nop
mov
mov
in
(bad)
test
inc
jb
pop
movs
(bad)
pop
and
leave
cmps
or
enter
pop
scas
scas
pop
leave
inc
jb
lods
lods
jne
pop
and
xchg
pop
mov
cmp
mov
mov
add
mov
and
xchg
lahf
mov
and
mov
jg
xchg
mov
imul
and
mov
mov
mov
mov
mov
cs
mov
in
js
and
cs
mov
js
jle
and
cs
mov
mov
and
cs
jle
mov
mov
cs
in
mov
dec
mov
mov
mov
cs
mov
in
add
sub
mov
add
test
test
test
test
dec
and
leave
mov
xor
and
add
push
mov
mov
jbe
aas
mov
mov
int3
int
leave
inc
mov
jbe
sub
jg
mov
inc
cs
mov
mov
inc
shr
mov
mov
mov
and
call
inc
or
inc
jb
jg
leave
inc
jb
int3
int
pop
leave
inc
retf
fsubr
lds
div
aas
mov
sbb
aas
sub
add
inc
imul
add
dec
add
dec
fidiv
mov
mov
mov
mov
mov
cs
cs
int3
int
dec
je
dec
rol
aas
shr
rol
sub
and
aas
sub
push
xor
scas
xchg
inc
add
inc
sar
push
pop
div
pop
and
stc
fwait
call
cmp
push
xor
pop
leave
inc
mov
and
and
lds
fsubr
cmp
fidiv
mov
push
mov
sahf
xor
sub
adc
cmp
shl
mov
and
cs
push
pop
ins
dec
dec
jno
mov
cmps
mov
add
inc
add
jb
or
push
xchg
mov
or
mov
xchg
or
dec
cs
into
or
and
mov
xchg
inc
and
cs
mov
add
add
and
mov
or
add
mov
cs
mov
and
add
dec
mov
jno
aas
dec
inc
xor
movs
xor
adc
add
adc
add
shl
cmps
adc
inc
and
bound
outs
adc
outs
popa
sar
(bad)
mov
mov
arpl
add
sub
(bad)
aas
outs
ins
or
jg
lods
outs
adc
push
call
ficom
aas
adc
xor
stos
inc
cmp
jle
and
xchg
pop
inc
add
pushf
dec
dec
inc
add
bound
cmp
jmp
xchg
test
in
mov
cs
mov
mov
cs
into
into
into
xchg
mov
and
into
leave
push
shr
rcl
aas
or
jb
or
and
or
mov
mov
(bad)
sti
sti
and
leave
inc
sti
sti
cmp
pop
ins
jg
sti
add
dec
xchg
pop
and
in
jb
and
and
xchg
adc
mov
add
add
and
xchg
pop
adc
aaa
push
pop
leave
inc
jb
aaa
aaa
pop
xchg
pop
and
add
sbb
sar
xchg
aas
das
xor
xchg
pop
xor
pop
and
leave
xor
pop
call
pop
leave
inc
pop
pop
inc
jb
pop
pop
pop
pop
and
leave
pop
pop
cmp
aas
xchg
xchg
mov
and
sub
mov
scas
nop
mov
sub
ins
mov
ins
ins
xchg
mov
and
and
mov
in
inc
call
imul
pop
add
dec
adc
cmp
scas
ja
add
rcl
pop
les
in
fdivr
or
xor
rol
aas
mov
dec
add
mov
(bad)
ds
inc
jb
loope
xchg
pop
and
jecxz
pop
leave
inc
jb
out
jb
pop
and
jmp
jmp
in
mov
aas
pop
leave
inc
mov
xchg
minps
dec
add
jg
sbb
leave
push
sbb
es
mov
sbb
inc
cmp
ds
mov
jg
mov
mov
mov
pop
call
mov
jb
pop
sub
pop
and
leave
sub
sub
adc
sub
push
cmp
int3
sbb
push
sbb
call
in
dec
and
aas
cmp
test
jae
dec
push
repz
aas
inc
and
push
add
push
outs
push
mov
outs
(bad)
jg
inc
add
dec
mov
jmp
cdq
call
mov
inc
mov
dec
stos
jo
inc
dec
and
aas
push
(bad)
mov
movups
adc
mov
sbb
pop
and
(bad)
xchg
aas
aas
daa
cs
mov
sub
sub
and
lods
nop
mov
sub
ret
in
adc
(bad)
call
add
sbb
stc
jg
aas
dec
push
or
jg
add
jg
mov
mov
mov
lea
in
(bad)
mov
sub
jne
jge
pop
in
mov
aas
dec
jo
pop
and
dec
dec
ficom
add
add
pop
dec
scas
nop
ja
ds
mov
and
cs
pop
pop
pop
lea
pop
in
and
or
or
or
and
jg
push
add
test
add
aas
inc
aas
lea
repnz
(bad)
repnz
adc
sbb
lock
test
add
inc
(bad)
aas
inc
and
add
aad
in
and
rol
retf
push
aam
and
adc
push
xchg
jg
imul
or
and
xchg
and
add
and
imul
mov
mov
sub
and
adc
jmp
outs
jg
adc
jg
stos
cmp
adc
sbb
sbb
or
aas
and
rol
adc
adc
adc
in
sbb
jg
(bad)
jge
push
rcl
aas
jg
stos
imul
inc
jmp
cmc
add
inc
mov
pop
mov
inc
xor
and
mov
cmp
aad
mov
push
and
in
or
cmp
leave
inc
in
mov
adc
inc
jne
jg
ror
js
adc
adc
mov
inc
pop
aas
rol
xchg
sbb
jg
sbb
(bad)
xor
ja
rcr
cmp
aas
cmp
inc
daa
jmp
mov
sbb
hlt
jg
cs
cs
repnz
push
cmp
inc
es
pop
mov
sub
inc
jb
adc
jb
pop
and
adc
jle
ror
pop
add
sbb
jmp
stos
call
mov
aam
add
scas
mov
pop
jmp
fiadd
add
add
and
sub
mov
or
dec
push
push
pop
dec
sub
(bad)
mov
pop
ins
cli
aas
add
es
pop
ins
or
or
mov
mov
add
xor
cmp
aas
adc
add
sub
aas
or
mov
push
jg
ret
inc
jb
fstp
mov
or
sbb
inc
push
inc
leave
cmp
add
inc
jecxz
jg
call
in
and
or
or
and
and
inc
ror
sbb
xor
sbb
or
and
dec
aam
ins
sub
enter
inc
jb
sbb
xchg
dec
and
dec
sub
leave
inc
xor
pop
es
pop
dec
aas
inc
add
pop
lea
mov
and
push
mov
push
rol
mov
sub
sub
xchg
mov
sub
sub
and
cs
mov
xor
xor
xor
mov
daa
adc
inc
mov
in
(bad)
call
mov
sub
adc
leave
inc
and
leave
inc
xor
and
inc
std
adc
inc
xor
movaps
dec
and
pop
mov
aas
xchg
dec
and
leave
inc
pop
pop
inc
jb
pop
pusha
dec
pop
and
leave
nop
xchg
xchg
add
pop
push
jg
mov
jg
(bad)
jge
pop
rol
inc
xor
aas
sbb
cs
aas
pop
aas
pop
les
pop
gs
adc
jo
mov
dec
pushf
(bad)
xchg
fdivr
dec
fistp
in
xor
loope
cs
mov
jecxz
in
mov
cs
out
call
jmp
cs
cs
mov
in
out
sar
aas
aam
and
dec
cs
mov
fmul
fidivr
(bad)
xchg
mov
and
fbld
mov
inc
ror
pop
dec
mov
inc
adc
aam
aas
jmp
push
enter
aas
add
sbb
inc
cs
push
(bad)
cmp
inc
xor
pop
and
leave
out
daa
push
adc
adc
jg
dec
sub
add
jg
pop
jo
cs
aas
cmp
or
bound
adc
or
adc
aas
push
inc
push
mov
aaa
in
mov
inc
wrmsr
xchg
xor
cmp
adc
dec
mov
add
pop
and
cmp
push
dec
enter
call
jmp
out
mov
jbe
mov
sub
xchg
mov
and
sub
mov
adc
aas
jg
adc
adc
xchg
dec
push
imul
xor
mov
push
xchg
pop
and
push
push
pop
leave
inc
jb
gs
jno
pop
and
or
jb
inc
pop
imul
dec
in
mov
dec
cs
mov
mov
and
mov
es
mov
sub
dec
es
mov
cdq
mov
mov
push
jg
lahf
sub
aas
push
add
mov
adc
adc
jecxz
jbe
test
cmp
cld
inc
jbe
add
sub
add
or
and
push
add
push
adc
push
push
xor
adc
dec
js
push
ja
gs
popa
mov
std
arpl
xor
and
call
lock
push
inc
aaa
mov
xor
pop
or
xor
pop
sbb
in
in
lahf
xor
xor
xor
adc
or
add
xor
fsubp
xor
ss
add
pop
mov
xor
xor
sbb
loopne
push
push
mov
ja
jb
push
fadd
xor
or
xor
push
xor
inc
gs
ins
outs
jo
test
pop
add
sub
add
add
or
push
(bad)
(bad)
jmp
add
cmp
xchg
mov
fld
(bad)
in
add
dec
lds
(bad)
(bad)
(bad)
jmp
sar
fcmovbe
inc
adc
inc
xor
shl
jns
or
pusha
push
aad
inc
retf
push
(bad)
(bad)
(bad)
dec
cmp
mov
ins
and
push
jmp
fs
movs
xor
outs
mov
mov
(bad)
(bad)
call
jae
mov
repnz
sub
or
xor
or
cmp
mov
cld
cmp
cld
outs
imul
dec
push
xchg
xor
arpl
or
push
jp
aas
mov
push
out
pop
icebp
(bad)
mov
sub
(bad)
mov
ins
into
push
push
lods
mov
pop
loop
(bad)
(bad)
(bad)
call
into
xchg
sbb
dec
or
jne
cmp
jb
shr
retf
retf
mov
(bad)
(bad)
(bad)
push
loope
mov
mov
push
arpl
cmps
je
xor
pop
lock
or
std
repnz
adc
jle
xor
sbb
add
pop
mov
sbb
add
jmp
push
ret
sub
je
cmp
das
arpl
lock
and
pop
jecxz
xchg
xchg
das
jne
push
push
mov
scas
push
xor
pop
jns
call
push
push
or
push
sbb
add
push
or
add
xor
out
mov
jbe
xor
adc
push
lock
mov
and
add
xor
cs
int
pop
xor
xchg
movq
jo
push
icebp
or
ds
inc
push
pop
shl
push
pop
add
(bad)
(bad)
(bad)
call
jl
pop
mov
in
jl
sub
movs
sub
cmp
mul
push
dec
pop
std
(bad)
(bad)
inc
lahf
and
cmp
inc
cmps
es
cmps
lahf
and
enter
cmp
xor
loopne
ret
neg
adc
outs
sub
(bad)
mov
and
daa
imul
or
sub
stos
mov
(bad)
(bad)
(bad)
call
pop
in
jbe
fdiv
outs
xchg
retf
and
jp
and
bound
push
jb
(bad)
(bad)
call
shl
arpl
pop
adc
mov
cld
stos
add
fistp
and
lahf
ror
adc
mov
imul
(bad)
jmp
outs
adc
xchg
mov
sub
cs
es
pop
mov
jae
sbb
jb
out
and
xchg
xchg
push
jmp
add
stos
dec
inc
icebp
clc
lea
jnp
xor
sub
or
mov
xchg
push
xchg
shl
ins
(bad)
(bad)
xchg
sbb
es
cmp
push
(bad)
(bad)
jg
jns
cmp
jns
imul
retf
aad
ja
jg
in
in
add
xlat
xor
arpl
adc
inc
rcr
cmps
adc
xor
fmul
mov
aad
jnp
ror
jbe
adc
cmp
ret
xor
mov
cmp
inc
push
jae
jo
xor
jno
inc
add
outs
adc
add
(bad)
jg
or
sub
add
push
adc
cs
fyl2xp1
jg
stos
xor
xor
xor
xor
xor
xor
push
dec
jo
scas
sbb
sbb
adc
xchg
add
xor
pop
adc
iret
cdq
aas
and
pop
push
mov
(bad)
(bad)
(bad)
push
jecxz
jle
js
aad
sub
outs
pop
adc
idiv
cs
or
sti
out
popf
(bad)
(bad)
(bad)
inc
cs
leave
and
call
jl
xor
inc
ret
mov
push
cdq
mov
(bad)
(bad)
(bad)
call
push
jae
xor
lds
add
loop
mov
push
pop
rcr
mov
(bad)
rcr
test
popf
push
and
lods
fdiv
xchg
sub
adc
xchg
pushf
loopne
xor
xor
and
(bad)
(bad)
jmp
push
lds
nop
sahf
std
retf
add
popa
dec
movs
(bad)
loopne
or
xlat
xor
call
gs
push
in
(bad)
aad
xor
(bad)
cmp
test
add
cmp
lds
int3
add
(bad)
(bad)
inc
into
cmp
xchg
cmp
xor
xor
cld
cmp
fiadd
ins
push
push
adc
(bad)
jmp
adc
jmp
and
xlat
lods
sahf
out
popf
ins
(bad)
cmc
rcl
jo
ins
ja
add
aaa
dec
sti
jne
(bad)
dec
inc
push
mov
xchg
push
dec
jb
in
sub
call
jnp
add
add
in
add
fbstp
jg
loopne
or
add
(bad)
xor
xor
in
aas
popa
(bad)
aad
jno
cld
aas
inc
xor
lods
(bad)
fisub
adc
and
clc
inc
and
adc
into
add
(bad)
aas
jne
xchg
pop
addr16
mov
sub
inc
sub
dec
icebp
jmp
je
adc
push
ret
cs
cmp
pop
arpl
xor
adc
shl
(bad)
call
ja
call
pop
add
iret
or
and
add
ret
lea
fnstsw
fild
call
dec
mov
in
jmp
jle
push
inc
mov
adc
imul
mov
stos
ins
stos
mov
(bad)
(bad)
call
rcl
movs
nop
adc
sbb
dec
push
inc
cdq
xchg
cmp
(bad)
jg
scas
jns
iret
xor
xor
inc
xchg
rcr
es
push
mov
scas
call
ffreep
cmp
stos
sub
pop
(bad)
(bad)
(bad)
jmp
xor
leave
mov
or
sahf
scas
ds
inc
xchg
sbb
push
cmp
pushf
stc
add
lods
jnp
es
mov
jmp
or
das
call
dec
inc
out
in
xchg
mov
rol
aas
clc
jg
pop
fcom
(bad)
dec
aas
retf
ds
movs
and
xor
nop
jae
and
push
fwait
movs
fstp
repz
mov
dec
in
and
inc
aas
mov
fisubr
icebp
repnz
inc
mov
add
cmp
call
add
sbb
sbb
rcr
or
push
add
pushf
(bad)
lock
add
mov
add
das
xchg
adc
pop
xchg
xor
inc
dec
add
inc
inc
call
out
xor
enter
dec
adc
cmp
popa
je
sahf
add
nop
or
push
jmp
xor
add
fs
test
sbb
push
cmp
leave
ins
inc
push
mov
inc
or
pop
adc
inc
repnz
dec
push
loopne
dec
add
les
inc
shufps
out
cmp
mov
add
push
add
jb
popa
sub
cdq
pop
push
xor
dec
aas
inc
push
push
dec
inc
movs
push
pop
inc
jle
inc
and
xor
push
outs
push
fist
dec
dec
or
inc
xor
test
jg
and
add
mov
add
add
or
inc
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
add
fwait
aam
jmp
add
mov
dec
inc
or
or
add
out
out
add
cld
or
mov
rcr
inc
pop
je
dec
imul
and
fdivrp
mov
push
gs
fs
leave
gs
add
outs
pop
dec
dec
cmp
cs
inc
jmp
nop
mov
cmp
js
popa
arpl
in
(bad)
in
gs
sub
outs
cmp
and
imul
jo
gs
imul
push
arpl
arpl
and
and
cmp
push
and
ins
outs
jae
pop
fmul
mov
sub
imul
xchg
rcl
sub
push
mov
cld
(bad)
jmp
xor
xor
cmp
aaa
cmp
xor
sub
ss
xor
das
mov
xor
adc
adc
and
and
jb
pop
xchg
idiv
push
inc
inc
xlat
sbb
jecxz
ja
cs
push
int
addr16
add
sub
outs
je
js
xor
test
lods
or
popa
mov
or
and
pop
dec
dec
mov
push
pop
outs
jg
das
js
jo
xor
ins
adc
jae
push
sbb
es
data16
fisubr
jae
jb
gs
and
add
shl
sbb
dec
pop
dec
retf
clc
pop
sub
inc
outs
arpl
mov
inc
outs
xor
fs
inc
xor
xor
jo
rcl
sub
cmp
xor
adc
ret
int3
mov
sbb
xor
(bad)
jg
jl
jg
inc
xor
inc
aaa
aaa
xor
call
aaa
cmp
inc
sbb
sbb
xor
xor
xor
es
test
ja
dec
sbb
cmp
or
enter
outs
outs
ins
rcl
fcmovb
or
outs
and
jo
inc
pop
fadd
jmp
and
push
shl
sub
lock
jbe
fs
jb
and
cmp
in
popa
xor
aaa
bound
mov
bound
or
pusha
and
aaa
data16
xor
sbb
jg
dec
xchg
sbb
mov
or
gs
sub
mov
jbe
ss
xor
and
inc
das
in
mov
xchg
and
jmp
repnz
inc
and
out
add
cli
daa
push
inc
push
js
in
mov
(bad)
call
jne
mov
out
mov
pop
in
or
ins
mov
push
and
sub
aas
and
(bad)
(bad)
dec
aas
adc
jl
and
jns
fwait
out
fisubr
dec
call
(bad)
call
neg
cli
in
jae
mov
shr
cwde
mov
out
scas
fdiv
pop
jnp
mov
ds
out
sti
pop
push
stc
mov
add
enter
add
adc
and
retf
and
pop
inc
adc
mov
(bad)
jl
rol
add
sub
xchg
xchg
add
add
aas
loopne
push
fcos
sbb
inc
out
gs
es
jmp
or
(bad)
(bad)
(bad)
cmp
push
mov
loope
es
push
lods
stc
adc
loope
and
or
call
(bad)
call
push
or
pop
test
into
and
int
add
xchg
jb
in
xor
dec
sbb
rcr
nop
ret
adc
push
or
ror
(bad)
(bad)
call
loopne
xchg
lahf
sub
lock
dec
sbb
test
das
ret
enter
(bad)
(bad)
push
retf
scas
inc
sub
xchg
shl
mov
call
push
push
sbb
(bad)
(bad)
call
inc
fwait
xchg
mov
adc
pop
lea
dec
aaa
pushf
mov
sahf
inc
sahf
(bad)
(bad)
(bad)
dec
push
repnz
clc
push
inc
mov
xor
push
xchg
out
push
(bad)
(bad)
jmp
fxch
jmp
xchg
adc
fldcw
and
cdq
pop
cs
fcomp
or
outs
adc
ud0
jmp
mov
xor
and
mov
dec
sub
(bad)
stos
jecxz
cmps
sub
(bad)
(bad)
jge
arpl
dec
(bad)
clc
aas
rcl
fisttp
xor
add
add
imul
xchg
inc
lods
stos
pop
mov
inc
rcr
lods
and
(bad)
jg
dec
es
mov
push
fs
inc
aas
test
test
(bad)
(bad)
jnp
xlat
xchg
mov
mov
leave
mov
sbb
movs
xor
out
mov
xchg
sti
xor
xor
dec
pop
sub
rcr
(bad)
push
retf
movs
mov
pop
fbld
jmp
in
fmul
dec
sbb
clc
xchg
lds
call
call
icebp
ret
jo
inc
cmp
xchg
ret
xchg
sbb
mov
cdq
clc
in
(bad)
(bad)
(bad)
(bad)
out
inc
mov
jle
fnstcw
fimul
ret
add
movs
clc
lock
jnp
(bad)
(bad)
(bad)
cmp
jno
imul
test
in
imul
jns
or
or
(bad)
(bad)
out
loopne
pop
sahf
sbb
(bad)
lods
rcr
addr16
loop
test
mov
ja
sbb
fdivrp
add
adc
pop
inc
jae
mov
daa
cs
adc
into
xor
call
mov
(bad)
sub
arpl
into
fcomi
cmp
jmp
xor
adc
iret
std
rcl
(bad)
(bad)
(bad)
dec
test
stos
pop
imul
cmp
hlt
or
push
repz
pop
pop
push
daa
jl
jbe
out
adc
(bad)
dec
sub
mov
jae
pop
inc
dec
stos
clc
xlat
test
daa
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
cmp
sub
rcr
das
(bad)
loope
into
mov
in
jnp
jg
inc
outs
test
xchg
push
or
mov
and
xor
mov
fist
sbb
or
lds
xor
cmp
popa
mov
stc
pop
sbb
mov
(bad)
call
push
sahf
cli
aad
pop
push
aad
add
fwait
dec
cmp
lock
(bad)
call
jns
pop
jbe
out
fsin
sbb
push
aam
popf
fwait
inc
inc
dec
adc
(bad)
dec
push
(bad)
adc
xchg
jne
pop
xchg
addr16
and
dec
sti
sbb
arpl
dec
(bad)
jmp
jmp
sub
shl
(bad)
(bad)
out
clc
pop
or
idiv
ds
(bad)
(bad)
jmp
mov
loope
movs
fsubr
dec
jle
adc
ss
cmc
(bad)
(bad)
dec
mov
aam
in
cdq
sbb
(bad)
test
inc
lods
pop
test
sbb
pop
cld
dec
cld
xor
dec
inc
lea
je
ror
es
test
cld
(bad)
call
xchg
je
test
(bad)
fsubrp
xor
stos
xchg
cmc
(bad)
in
(bad)
jmp
xchg
psubd
sbb
repnz
xchg
repz
xor
pop
mov
xor
aad
movs
push
inc
cmp
fs
cmps
mov
stc
icebp
stc
daa
imul
loop
test
or
lods
sub
add
dec
mov
retf
je
(bad)
(bad)
(bad)
dec
jmp
call
std
(bad)
outs
sub
hlt
cmp
pop
push
(bad)
call
scas
mov
add
mov
shl
mov
xchg
or
(bad)
(bad)
call
mov
jge
ret
jge
stc
jp
mov
push
data16
(bad)
push
xor
mov
cmps
add
add
out
in
push
test
(bad)
inc
sar
sub
fbld
xor
cmp
mov
inc
jne
(bad)
jmp
push
cld
out
pop
lds
pop
inc
mov
jle
push
movs
clc
jne
(bad)
jmp
dec
inc
ss
(bad)
retf
push
sti
out
jle
ds
popf
and
sbb
(bad)
inc
(bad)
loope
cs
add
jl
wbinvd
cld
cmp
je
mov
int
imul
push
je
mov
int
xor
add
push
test
dec
and
push
cmp
push
mov
loopne
(bad)
dec
mov
inc
mov
adc
mov
scas
add
js
ret
outs
cmp
(bad)
(bad)
(bad)
jnp
pop
and
mov
cmps
imul
inc
xor
in
xchg
into
dec
(bad)
(bad)
(bad)
push
shl
sub
fwait
jp
jp
fs
push
mov
xlat
add
xchg
call
cli
push
cs
jecxz
out
fdivrp
push
inc
mov
daa
retf
dec
dec
fld
inc
push
xor
cmp
push
movs
dec
xchg
shl
sub
pusha
test
sub
cmp
dec
mov
mov
(bad)
pusha
sbb
cdq
in
imul
clc
mov
out
repnz
push
fisub
xchg
scas
icebp
and
fwait
rol
fbld
jno
(bad)
(bad)
(bad)
call
jae
ds
and
shl
mov
xchg
shr
dec
icebp
data16
mov
push
xchg
(bad)
(bad)
(bad)
jmp
mov
and
mov
push
and
stc
jb
scas
in
aaa
xor
pop
xchg
adc
(bad)
(bad)
call
sti
and
push
mov
adc
dec
hlt
pop
cmp
sti
jnp
clc
(bad)
(bad)
(bad)
cld
lds
clc
mov
adc
fwait
xchg
(bad)
bound
iret
pop
mov
jmp
scas
ss
ja
xchg
loopne
add
fstp
ins
leave
xlat
loope
xor
(bad)
xor
(bad)
(bad)
call
idiv
xchg
test
shl
movs
int
mov
mov
(bad)
jmp
xor
nop
leave
sub
popf
aam
call
adc
(bad)
(bad)
(bad)
jmp
push
and
je
cmps
dec
jno
xchg
and
xor
inc
daa
xchg
cmps
push
sbb
adc
outs
mov
cmp
inc
mov
ret
mov
mov
inc
cmp
(bad)
(bad)
(bad)
call
inc
daa
(bad)
pop
mov
xor
pop
daa
stos
sbb
add
dec
mov
out
call
imul
cmc
cmp
loopne
pop
ret
mov
or
cmovo
loope
jb
add
shr
scas
push
nop
scas
adc
xor
out
nop
sub
xchg
or
inc
sub
mov
(bad)
(bad)
dec
cdq
and
adc
out
cld
test
les
jns
mov
jmp
mov
dec
(bad)
mov
iret
xchg
cli
mov
pop
mov
(bad)
call
pop
push
outs
nop
das
imul
sub
pop
xor
jp
jmp
nop
enter
adc
popa
and
nop
sbb
and
repnz
(bad)
(bad)
jmp
adc
pop
(bad)
stos
jecxz
(bad)
std
daa
mov
cmp
mov
clc
xchg
xor
sar
(bad)
jmp
lock
mov
pandn
loop
push
stos
and
pushf
inc
and
shr
adc
jae
(bad)
lea
inc
dec
inc
mov
lahf
jmp
xchg
xchg
icebp
(bad)
aas
sbb
jns
cs
lahf
adc
add
inc
inc
inc
pop
rcr
das
mov
cli
xor
outs
out
inc
lods
je
ja
inc
(bad)
(bad)
(bad)
dec
mov
(bad)
or
int
test
or
lods
sub
daa
pusha
fst
jmp
into
mov
jmp
add
dec
fiadd
pop
(bad)
mov
rcl
arpl
das
mov
(bad)
(bad)
(bad)
(bad)
clc
hlt
xlat
(bad)
jmp
xor
std
inc
mov
sub
test
cmp
push
adc
adc
dec
and
(bad)
(bad)
jmp
and
sub
ret
xor
mov
push
and
mov
jb
out
(bad)
mov
cli
pop
inc
xlat
adc
dec
adc
xchg
mov
inc
ror
add
imul
imul
dec
xlat
lods
cmps
aaa
jno
scas
sub
inc
outs
(bad)
jmp
mov
add
mov
sub
inc
ret
js
(bad)
(bad)
jmp
cmp
pop
cmp
in
cli
call
in
jl
jle
int3
sbb
rol
and
(bad)
leave
xchg
xchg
call
jno
gs
stos
add
shl
inc
mov
adc
pop
(bad)
(bad)
(bad)
(bad)
mov
mov
fld
addr16
sti
jmp
js
and
inc
jae
pop
and
(bad)
(bad)
(bad)
cld
(bad)
jl
push
cld
jmp
faddp
mov
in
cwde
nop
in
cmp
xor
and
clc
mov
imul
xlat
pop
mov
mov
ud0
jmp
outs
sar
aad
xor
xchg
add
fwait
lahf
adc
and
jmp
inc
jbe
stc
into
mov
cmp
add
sub
xchg
pop
sub
(bad)
dec
xchg
popa
enter
sub
scas
std
mov
jo
lea
sti
rcr
(bad)
fcomip
jg
out
adc
add
sub
les
push
push
jo
(bad)
(bad)
(bad)
call
pop
outs
xor
dec
cmps
fild
les
jl
jae
mov
aam
(bad)
clc
sbb
stc
jnp
dec
pusha
out
(bad)
popa
mov
pop
adc
cld
mov
jg
(bad)
cmp
clc
jg
pop
mov
jne
xchg
dec
add
sub
cmc
imul
(bad)
(bad)
out
xchg
jbe
bnd
fcomp
xchg
lods
cmp
retf
std
pop
lahf
push
aad
inc
or
cdq
test
(bad)
(bad)
cmp
ret
lods
test
mov
xor
jle
ror
sti
xchg
bound
(bad)
(bad)
mov
das
mov
(bad)
clc
fist
pop
mov
and
(bad)
or
shl
outs
loop
enter
pop
lock
mov
imul
(bad)
cli
icebp
adc
add
(bad)
lahf
sar
mov
dec
mov
sbb
aas
push
fidivr
(bad)
(bad)
jmp
push
adc
dec
cmp
mov
(bad)
jbe
jl
(bad)
(bad)
(bad)
dec
les
leave
sub
mov
adc
mov
dec
les
retf
ret
lods
call
inc
(bad)
jmp
xchg
add
jmp
(bad)
fcomip
shr
xchg
sub
data16
mov
into
jg
lock
dec
das
jp
fdiv
(bad)
(bad)
jmp
dec
jg
pop
lods
cmps
xchg
cmp
ins
rol
sahf
mov
into
mov
(bad)
dec
sub
xor
sub
fwait
iret
cmc
leave
and
mov
dec
push
icebp
add
add
xchg
push
inc
xchg
test
mov
xor
(bad)
(bad)
(bad)
fcmovnbe
xor
inc
imul
(bad)
out
xchg
scas
das
sar
test
imul
mov
push
push
fisub
or
pop
pop
cmp
cwde
(bad)
call
xchg
sahf
cmp
stos
out
fidiv
not
cmc
push
mov
call
cmps
push
mov
lods
push
loopne
add
xchg
(bad)
cmp
xchg
cmc
int
dec
and
dec
cmp
mov
add
scas
dec
(bad)
(bad)
call
push
mov
in
jbe
test
mov
sub
cmp
cmp
std
mov
test
fistp
imul
jmp
pop
cwde
pop
mov
(bad)
inc
xchg
(bad)
and
je
(bad)
(bad)
inc
mov
pop
jbe
jbe
aas
mov
in
sub
sahf
jle
stos
pop
outs
aad
(bad)
(bad)
(bad)
dec
push
dec
push
push
mov
das
loopne
xlat
pop
add
or
mov
outs
mov
(bad)
(bad)
(bad)
(bad)
push
and
btr
push
cdq
call
sar
in
jns
out
std
(bad)
dec
(bad)
pop
stc
mov
or
imul
movs
mov
jl
xchg
xchg
dec
mov
jmp
ror
imul
xchg
and
jp
or
shl
fs
fmul
(bad)
fcomip
xchg
arpl
adc
xor
xor
(bad)
(bad)
(bad)
call
sbb
std
test
clc
mov
pop
adc
inc
jge
cmp
adc
inc
push
inc
xor
xor
pop
sahf
inc
mov
ret
shl
sbb
in
push
jmp
enter
mov
xor
cmp
push
xchg
pop
fcom
cs
es
hlt
(bad)
(bad)
call
int3
aas
mov
xchg
repnz
add
mov
loopne
mov
scas
fnstenv
mov
xor
(bad)
(bad)
(bad)
fisttp
and
movs
into
sub
mov
les
and
and
in
xchg
sub
(bad)
(bad)
push
gs
movs
mov
mov
dec
push
retf
scas
xor
sbb
(bad)
fistp
movs
jo
cmp
mov
jne
mov
sar
es
sbb
(bad)
(bad)
jmp
sub
daa
and
(bad)
out
cmp
or
sub
lea
jbe
shl
pop
(bad)
(bad)
(bad)
push
fidivr
xchg
clc
les
mov
ret
cmps
sbb
mov
mov
or
and
sbb
mov
hlt
jp
cmp
cli
jmp
test
and
dec
(bad)
sar
(bad)
mov
(bad)
dec
pop
pop
sub
call
xchg
jmp
ja
das
mov
(bad)
jmp
in
fld
jg
mov
call
mov
out
push
cli
(bad)
(bad)
jmp
pop
and
outs
sub
or
adc
leave
fcomp
pop
and
leave
mov
jmp
retf
(bad)
ret
dec
jg
cdq
xor
add
daa
outs
push
jmp
les
in
(bad)
inc
or
adc
out
jge
jo
call
ficomp
(bad)
cmc
jmp
and
pavgb
pushf
fdiv
jl
push
pop
mov
jl
cmps
mov
(bad)
mov
hlt
pop
repz
ja
sub
in
lock
cmp
outs
jnp
mov
clc
dec
dec
cld
xchg
mov
outs
ss
loop
mov
pop
adc
mov
(bad)
(bad)
(bad)
(bad)
cli
xchg
adc
add
fs
push
dec
mov
mov
adc
mov
rcl
cmp
lods
xor
es
push
pop
sbb
imul
push
dec
shl
(bad)
xchg
or
lds
xchg
sub
cmp
inc
jecxz
(bad)
(bad)
(bad)
js
outs
(bad)
scas
scas
cld
popf
jno
out
mov
xchg
in
sub
jmp
xor
jmp
call
out
jl
push
test
cli
cmp
cmp
leave
ss
cmp
call
or
scas
ins
ja
jmp
loopne
(bad)
sub
(bad)
jmp
imul
mov
(bad)
jle
mov
popf
sbb
(bad)
(bad)
(bad)
mov
jbe
cmp
dec
dec
dec
inc
push
call
cmp
daa
or
vmread
mov
cli
mov
xchg
mov
push
clc
mov
mov
jae
mov
lods
stos
(bad)
(bad)
(bad)
jmp
xor
lods
bound
leave
dec
dec
mov
xor
pop
jno
sbb
(bad)
fcomip
call
or
aas
(bad)
xchg
cwde
loopne
fistp
cli
dec
xchg
xchg
push
test
idiv
lods
aaa
(bad)
dec
(bad)
fdiv
cwde
sub
in
cmp
push
and
mov
sar
jmp
rcl
mov
xor
pop
mov
mov
jg
(bad)
(bad)
(bad)
jg
mov
sti
outs
mov
rcr
fidiv
movs
dec
pop
loopne
pusha
fld
(bad)
mov
shr
jl
(bad)
xor
pop
mov
push
xchg
dec
xchg
sub
(bad)
(bad)
jmp
mov
push
icebp
fnstcw
xchg
pop
inc
leave
pop
mov
les
(bad)
(bad)
or
fcomp
cs
jmp
out
pop
call
pop
mov
sub
and
emms
(bad)
(bad)
(bad)
push
xchg
fdiv
and
inc
and
dec
inc
mov
in
mov
pop
xor
dec
mov
in
(bad)
std
addr16
xchg
jle
mov
rcr
mov
or
(bad)
sub
stos
and
sbb
pop
outs
cli
and
xchg
mov
push
mov
dec
xchg
mov
enter
pop
(bad)
fnstenv
or
mov
(bad)
dec
(bad)
inc
stos
push
retf
ret
or
out
inc
mov
in
push
and
adc
(bad)
(bad)
(bad)
jmp
lds
test
mov
call
mov
ss
pop
call
(bad)
cld
out
imul
rcr
jmp
aam
dec
xchg
daa
dec
rol
inc
cs
into
data16
js
shr
(bad)
(bad)
(bad)
call
pop
mov
int
fistp
mov
sub
aam
ds
jmp
jecxz
sti
loopne
(bad)
call
stc
inc
push
ja
mov
or
sbb
loope
or
(bad)
(bad)
call
out
jb
out
xor
popa
(bad)
(bad)
(bad)
push
and
pushfw
jno
push
sbb
ret
(bad)
(bad)
inc
jl
mov
pop
or
fnstenv
mov
test
push
sar
jg
movs
outs
ret
cs
xor
cli
dec
inc
or
pop
xchg
add
sbb
pop
std
(bad)
(bad)
fstp
jl
pushf
jmp
xchg
pop
mov
pop
or
mov
mov
and
mov
dec
mov
sbb
(bad)
adc
dec
inc
arpl
jp
push
lea
pop
scas
inc
push
daa
retf
push
es
outs
fnsave
(bad)
(bad)
(bad)
(bad)
jns
xor
out
sbb
mov
sub
inc
fsub
mov
or
(bad)
call
add
bound
fnsave
cmps
add
iret
and
gs
std
fcmovu
(bad)
(bad)
jmp
mov
retf
xor
pop
inc
mov
out
xchg
mov
mov
jbe
mov
(bad)
call
lahf
cmps
das
pop
or
push
loope
sub
mov
jnp
es
xor
cmp
call
dec
stos
mov
mov
cdq
jb
and
scas
mov
sub
pop
sub
aad
(bad)
(bad)
call
and
aas
loopne
xchg
and
dec
adc
mov
and
adc
movs
adc
stos
and
sbb
push
(bad)
call
dec
dec
test
scas
ins
test
(bad)
pop
(bad)
stc
pop
pop
push
sub
pop
neg
cmc
(bad)
(bad)
cld
adc
retf
add
sub
or
xor
cmp
push
jae
jns
(bad)
(bad)
push
dec
xor
lock
mov
mov
cs
mov
sahf
mov
(bad)
cmp
sbb
(bad)
(bad)
(bad)
mov
inc
icebp
clc
imul
(bad)
in
shl
mov
dec
and
push
push
cmp
jmp
aad
push
out
clc
(bad)
out
shr
out
loop
or
loope
push
sbb
loope
mov
lock
pusha
lds
(bad)
sar
das
mov
in
aaa
xlat
inc
(bad)
mov
jg
pop
pop
movs
fsub
cwde
stos
int
push
adc
call
mov
(bad)
(bad)
(bad)
(bad)
fisttp
cmp
mov
bound
shl
sahf
pop
gs
repnz
sbb
add
xlat
sub
or
and
(bad)
call
mov
jmp
(bad)
in
pushf
clc
in
out
retf
pushf
jl
dec
or
clc
(bad)
(bad)
(bad)
call
pop
cmps
jmp
fldenv
sub
or
call
aas
cmp
cli
(bad)
push
mov
cld
sbb
xchg
mov
pop
sbb
xor
mov
dec
mov
sbb
xor
cmc
(bad)
sub
call
push
std
call
jb
hlt
pop
add
mov
ins
dec
pop
sbb
in
inc
mov
sbb
lods
in
ret
jl
inc
shr
push
sbb
bound
iret
out
push
out
cmp
(bad)
(bad)
dec
movs
jl
and
sub
jbe
pop
dec
stos
out
pop
sar
push
data16
sbb
jmp
leave
int3
repz
mov
je
aad
lock
adc
(bad)
scas
clc
(bad)
cmp
int
cld
fnsave
out
rol
or
shr
pop
icebp
mov
loopne
call
outs
popf
scas
(bad)
(bad)
(bad)
(bad)
fidiv
(bad)
out
std
inc
jno
in
sbb
jo
sbb
mov
scas
push
dec
push
fwait
inc
jg
jmp
pop
loop
fdivrp
dec
repnz
sbb
(bad)
(bad)
push
les
test
sub
stc
lea
loope
call
xchg
mov
(bad)
jle
pop
scas
cmp
scas
(bad)
(bad)
(bad)
(bad)
jnp
imul
out
jbe
adc
pusha
pusha
mov
repz
aas
iret
outs
mov
or
or
pop
(bad)
(bad)
cmp
push
jg
stos
jecxz
mov
or
pop
dec
(bad)
inc
in
push
std
(bad)
inc
ret
scas
into
jno
gs
and
and
cwde
inc
xor
test
(bad)
(bad)
(bad)
call
cmp
and
dec
ss
dec
xor
xor
fdivr
and
dec
test
sub
movs
call
(bad)
(bad)
mov
mov
test
das
shl
xchg
jl
push
test
xchg
xor
(bad)
add
fwait
sbb
jno
sub
ja
xor
inc
and
stc
mov
sbb
ret
cmps
cmc
nop
(bad)
(bad)
(bad)
jg
outs
call
jnp
imul
movs
sbb
mov
pushf
test
test
call
loopne
pop
inc
daa
lods
sbb
mov
sahf
sub
mov
dec
and
(bad)
(bad)
(bad)
(bad)
dec
iret
into
mov
sub
fsubr
int
popa
test
xor
repz
push
cld
push
(bad)
jecxz
leave
adc
xor
push
pop
ss
cmp
in
clc
(bad)
(bad)
jg
lea
call
cmp
mov
add
mov
loopne
(bad)
(bad)
(bad)
inc
mov
or
mov
adc
call
(bad)
jmp
mov
enter
push
cmps
scas
clc
mov
clc
adc
jno
sahf
xchg
lods
xchg
sbb
mov
clc
out
cmp
loopne
(bad)
fnstcw
cmovae
mov
and
mov
into
int
sbb
lock
(bad)
(bad)
(bad)
in
outs
sar
inc
imul
mov
repnz
cld
add
mov
mov
jmp
js
cmp
test
jl
addr16
(bad)
fs
push
jmp
cmps
(bad)
(bad)
jmp
pop
(bad)
stc
jmp
icebp
movs
lahf
into
jecxz
ja
(bad)
sti
mov
loopne
mov
jae
(bad)
(bad)
(bad)
call
jmp
(bad)
popf
xchg
hlt
or
xchg
sub
icebp
call
out
sbb
in
dec
in
icebp
sti
mov
or
mov
inc
(bad)
(bad)
(bad)
fistp
cmp
inc
and
and
aas
sub
retf
xchg
push
(bad)
pop
pop
mov
xchg
mov
(bad)
(bad)
(bad)
dec
not
imul
push
sub
mov
pop
arpl
dec
out
es
aas
adc
xchg
hlt
movs
inc
mov
xor
gs
fcmovbe
sahf
cmp
cmp
jmp
(bad)
xlat
(bad)
(bad)
(bad)
dec
ret
scas
ret
mov
fwait
and
mov
xlat
retf
dec
ror
(bad)
(bad)
(bad)
push
out
int
mov
cs
fstp
mov
int
mov
and
inc
(bad)
(bad)
(bad)
(bad)
dec
xchg
or
sub
enter
or
arpl
mul
rcr
dec
sahf
pop
add
pop
pop
dec
xchg
dec
sub
fdiv
cmc
out
sub
jno
rcl
jmp
(bad)
jmp
push
push
(bad)
xchg
dec
movs
dec
or
xor
xor
(bad)
(bad)
(bad)
inc
imul
mov
rol
bound
xor
ret
daa
movs
lods
jmp
(bad)
(bad)
fistp
jle
mov
jae
pusha
jle
xor
rcl
mov
jp
cs
inc
sar
mov
stc
bound
mov
test
pop
mov
adc
(bad)
(bad)
inc
ins
mov
dec
fisttp
jae
aad
cwde
mov
push
pop
std
pop
pop
jns
jp
mov
adc
mov
lods
clc
lds
push
jno
cli
inc
pushf
(bad)
(bad)
(bad)
(bad)
mov
jno
pop
inc
xor
out
enter
imul
clc
fimul
loope
jmp
jo
pop
retf
xchg
mov
adc
lds
call
retf
(bad)
jmp
sub
icebp
xchg
inc
outs
(bad)
xchg
jge
mov
jecxz
inc
push
push
xchg
dec
(bad)
(bad)
jg
push
mov
pop
icebp
hlt
mov
jnp
inc
fs
mov
xchg
and
(bad)
outs
mov
test
dec
adc
cdq
adc
pusha
mov
cmp
in
(bad)
dec
lock
imul
shr
mov
(bad)
(bad)
call
test
mov
lock
(bad)
and
je
jecxz
xor
jmp
popf
(bad)
nop
sbb
and
daa
cmc
std
aam
call
test
pop
and
xchg
(bad)
mov
mov
cmp
cld
int3
test
xor
mov
sub
mov
inc
xor
cmps
retf
jae
ret
jl
test
pop
push
lock
(bad)
mov
mov
loopne
in
add
or
xchg
jp
mov
xor
(bad)
(bad)
push
inc
adc
cmp
gs
pop
test
daa
cmp
jb
or
lea
stos
gs
(bad)
(bad)
jmp
ins
mov
jecxz
gs
lock
sbb
push
sub
(bad)
call
ja
add
div
pusha
ficomp
stos
out
fdivr
in
dec
pop
(bad)
(bad)
(bad)
push
and
outs
shl
or
(bad)
stos
pop
dec
pop
sub
jl
ret
sti
inc
bound
(bad)
push
mov
cmp
inc
xchg
sub
adc
lea
lahf
sahf
shr
loopne
(bad)
call
mov
stc
outs
lock
fld
ja
or
mov
inc
fdivr
or
jge
pop
out
jl
add
pusha
pop
pop
xor
dec
xchg
in
dec
inc
mul
movs
adc
int3
xchg
cli
sub
fimul
pop
hlt
(bad)
(bad)
(bad)
dec
movs
pusha
mov
scas
hlt
sbb
push
push
push
les
sti
(bad)
(bad)
(bad)
inc
mov
dec
(bad)
cmp
or
mov
(bad)
je
inc
les
js
(bad)
jg
dec
gs
mov
mov
mov
addr16
add
mov
jl
push
cli
cmp
jmp
std
(bad)
(bad)
fild
sbb
mov
in
cmp
jno
jbe
lock
sbb
sub
jno
lea
xchg
aaa
imul
inc
repnz
(bad)
(bad)
call
movs
mov
jae
movs
mov
test
cmps
sbb
stc
push
mov
dec
outs
add
sub
jne
push
into
shr
es
mov
(bad)
(bad)
(bad)
cmp
inc
cmp
lds
enter
jb
add
sub
mov
mov
push
lods
cmp
xchg
fidiv
adc
ins
int3
enter
(bad)
stc
icebp
cmp
xchg
das
inc
and
adc
test
lods
shl
jb
sub
mov
or
xchg
mov
sub
test
loopne
push
(bad)
(bad)
(bad)
push
jg
dec
dec
and
jns
jae
fs
daa
popf
mov
cmp
mov
sbb
mov
iret
add
mov
sub
not
leave
cmp
(bad)
call
daa
inc
mov
je
out
ins
es
(bad)
pop
fsubr
scas
sub
(bad)
(bad)
(bad)
(bad)
jns
cmp
sub
out
mov
adc
in
mov
lahf
(bad)
(bad)
(bad)
jmp
add
fadd
addr16
hlt
jbe
stc
retf
lds
daa
dec
push
push
xor
pop
icebp
(bad)
cmp
xor
mov
sahf
mov
adc
aam
(bad)
(bad)
dec
mov
adc
in
popf
cwde
das
aam
arpl
mov
retf
iret
mov
pushf
pop
mov
(bad)
loope
loopne
inc
mov
jmp
adc
cmp
leave
(bad)
(bad)
push
mov
sti
mov
fs
int3
icebp
mov
loope
or
push
retf
call
sti
arpl
and
dec
in
(bad)
push
test
test
push
inc
iret
inc
movs
xor
call
je
mov
mov
sub
xchg
ins
(bad)
into
sub
cld
jg
inc
mov
mov
mov
push
icebp
xchg
(bad)
jmp
cmps
icebp
retf
clc
mov
out
cmp
mov
mov
xchg
jl
(bad)
(bad)
(bad)
out
scas
ret
inc
hlt
cli
xor
xchg
test
xchg
cli
repnz
test
hlt
dec
add
clc
(bad)
jmp
adc
jbe
movs
and
call
adc
loopne
dec
sub
cmps
gs
movs
(bad)
ins
xchg
(bad)
(bad)
(bad)
jmp
xchg
and
inc
gs
jl
and
call
(bad)
(bad)
(bad)
jmp
push
add
xchg
mov
sbb
adc
int
fcomp
fisub
push
(bad)
mov
(bad)
call
nop
vpsrlvd
mov
push
shl
and
mov
xor
call
sbb
mov
or
dec
enter
inc
add
push
out
sahf
enter
mov
xchg
inc
inc
xor
clc
call
sub
mov
jbe
aas
mov
data16
mov
mov
movs
inc
xor
sub
das
jp
jmp
das
push
xchg
das
js
iret
and
push
lods
mov
sub
(bad)
call
stos
jo
cmp
sbb
jg
call
dec
movs
rcr
fiadd
into
(bad)
(bad)
mov
(bad)
popa
adc
in
pop
(bad)
(bad)
out
clc
mov
adc
in
add
je
jbe
mov
and
(bad)
xor
or
(bad)
(bad)
(bad)
dec
xchg
out
hlt
fdivr
xlat
hlt
and
adc
bound
int
mov
(bad)
(bad)
mov
dec
in
mov
js
mov
sahf
aam
push
xlat
mov
push
cld
push
bnd
bound
dec
pop
cs
jmp
aad
cmps
test
(bad)
call
stos
fisubr
xlat
mov
pop
or
out
push
pop
and
or
(bad)
(bad)
call
and
outs
pop
cmp
repz
cmp
rcr
cwde
fdivr
(bad)
(bad)
push
dec
sbb
jb
pop
(bad)
out
mov
pop
mov
mov
cmp
(bad)
(bad)
(bad)
aas
sub
xor
sbb
xchg
(bad)
out
ds
imul
sbb
sbb
cmps
addr16
pushf
ds
dec
bound
pop
pop
jmp
out
push
cmp
(bad)
loopne
and
popa
dec
fs
adc
xchg
(bad)
(bad)
jmp
jno
lds
stos
mov
jmp
dec
jnp
push
clc
(bad)
aaa
jle
(bad)
(bad)
dec
inc
enter
inc
xlat
stc
sub
dec
inc
inc
outs
daa
sub
sub
bound
arpl
arpl
call
or
(bad)
fs
out
cwde
and
clc
mov
iret
repnz
ret
(bad)
xor
stc
mov
xchg
mov
(bad)
(bad)
call
jmp
aaa
std
call
inc
or
xor
(bad)
fistp
imul
(bad)
mov
inc
outs
xchg
loope
jmp
xchg
(bad)
(bad)
(bad)
dec
in
and
(bad)
mov
(bad)
dec
inc
xchg
adc
fdivr
mov
movs
bound
call
cmps
pop
xor
call
and
xchg
js
pushf
nop
(bad)
(bad)
(bad)
jmp
out
das
out
clc
retf
mov
push
dec
test
addr16
mov
fidivr
push
lahf
mov
or
cmc
call
rcl
scas
movs
pusha
in
rcl
mov
sar
inc
mov
mov
imul
retf
sub
and
pop
inc
movs
sti
xchg
outs
ins
inc
jnp
(bad)
(bad)
(bad)
jnp
xchg
sbb
push
or
popf
scas
mov
sub
scas
ins
jb
out
nop
mov
mov
mov
push
xchg
jecxz
mov
aad
fadd
popa
mov
daa
add
(bad)
(bad)
jmp
in
xor
imul
xchg
pusha
and
pop
repnz
mov
cmc
clc
sahf
(bad)
(bad)
(bad)
(bad)
jg
pop
inc
cmovg
js
mov
pop
sbb
inc
shl
jmp
add
(bad)
(bad)
call
mov
int3
psubsw
dec
(bad)
jns
sbb
cmp
pop
call
repz
aas
ja
(bad)
call
xchg
lahf
test
js
adc
pop
push
fdiv
jmp
(bad)
jg
call
loope
pop
(bad)
sbb
xchg
mov
stos
mul
xor
(bad)
mov
mov
call
call
rcr
add
push
in
mov
pop
jbe
notrack
jnp
jne
cmpxchg
(bad)
(bad)
(bad)
jl
cmp
hlt
add
adc
ins
inc
jae
add
pop
es
into
mov
xchg
sbb
(bad)
(bad)
(bad)
(bad)
mov
daa
addr16
jg
pop
mov
fst
ss
jnp
jmp
jge
push
sti
fdivr
(bad)
(bad)
call
addr16
sbb
jne
pop
push
inc
add
sbb
push
adc
sbb
les
mov
(bad)
push
stos
test
outs
fs
shr
int
xlat
movs
cmp
or
test
jmp
mov
(bad)
cmp
ror
and
lods
aaa
cmps
dec
pusha
or
sub
movs
rcr
dec
ror
(bad)
(bad)
jmp
jecxz
sub
popa
xchg
adc
rcl
retf
pop
out
jmp
adc
dec
(bad)
(bad)
(bad)
jmp
dec
les
or
js
pushf
imul
mov
add
mov
(bad)
push
sti
add
outs
lods
(bad)
mov
jmp
ins
and
leave
adc
and
xor
mov
cdq
das
in
leave
call
and
fs
(bad)
(bad)
call
in
mov
lds
js
ds
or
xor
(bad)
test
add
pushf
outs
ret
(bad)
aam
dec
bound
fwait
jo
out
out
cli
(bad)
(bad)
inc
lods
icebp
xor
adc
jnp
nop
jae
adc
xor
xchg
aaa
int
je
(bad)
jmp
sub
xchg
cmp
out
sar
sub
js
push
ret
xchg
sbb
dec
adc
std
outs
cli
int
call
pop
stos
dec
lds
and
(bad)
(bad)
(bad)
(bad)
std
xchg
lea
pop
aas
leave
jnp
lock
or
push
xor
daa
mov
mov
mov
(bad)
(bad)
(bad)
jmp
push
xchg
daa
inc
movs
loop
mov
mov
mov
xchg
jmp
imul
(bad)
(bad)
mov
push
mov
dec
xchg
push
(bad)
and
jmp
cli
into
xchg
ins
add
mov
(bad)
(bad)
mov
rol
pop
fsub
test
dec
add
fcmovnbe
jns
(bad)
jecxz
mul
pop
jnp
jle
jle
(bad)
(bad)
call
stc
test
sub
test
xor
lods
pop
mov
pop
mov
and
jno
push
(bad)
(bad)
(bad)
inc
aas
inc
jecxz
daa
(bad)
fneni(8087
mov
int3
(bad)
arpl
das
mov
imul
(bad)
(bad)
(bad)
call
mov
leave
jno
jle
sub
jmp
jnp
into
mov
out
sbb
call
mov
repnz
mov
mov
(bad)
cli
mov
fldl2t
mov
hlt
jecxz
in
(bad)
(bad)
(bad)
(bad)
imul
jno
scas
cs
sub
pop
xor
(bad)
(bad)
(bad)
mov
jecxz
push
xchg
es
scas
icebp
movs
mov
adc
pop
dec
lock
and
(bad)
(bad)
push
rcl
bound
imul
adc
cmp
sub
imul
adc
jne
lods
mov
adc
jns
adc
or
(bad)
(bad)
(bad)
call
pop
lods
sar
jae
mov
mov
test
cmp
jmp
call
and
mov
scas
mov
xchg
rcr
add
aam
(bad)
(bad)
(bad)
dec
cmp
(bad)
xlat
cmc
and
movs
mov
pusha
pop
push
call
fild
or
mov
pop
jns
(bad)
cdq
cmc
xor
xchg
movs
lods
(bad)
(bad)
call
aad
aad
imul
sub
xor
repnz
dec
and
push
fld
xor
(bad)
out
cli
ins
sar
xchg
xor
mov
or
sbb
mov
call
or
dec
sbb
call
enter
pop
push
and
in
(bad)
(bad)
(bad)
call
mov
adc
out
fld
xchg
es
fcmovnbe
mov
test
xor
call
jns
ficom
ins
iret
cs
dec
jbe
sub
sar
sbb
in
mov
(bad)
(bad)
(bad)
jmp
jecxz
iret
adc
push
xor
clc
sar
das
retf
xchg
xchg
inc
inc
ja
adc
cmp
sub
cmp
mov
pusha
fst
aad
or
(bad)
(bad)
(bad)
jns
dec
mov
jb
pop
leave
out
popa
push
nop
lock
dec
dec
mov
and
(bad)
dec
mov
xchg
xchg
xchg
outs
sbb
fistp
sub
cli
idiv
(bad)
(bad)
(bad)
jmp
jns
jmp
hlt
loop
mov
out
test
cmp
or
mov
xcrypt-cbc
cmps
xchg
xchg
push
mov
jmp
xor
lds
hlt
mov
mov
cmp
sub
xchg
sbb
or
pop
inc
dec
lods
and
inc
arpl
jo
and
inc
add
jmp
push
mov
add
sub
and
ret
push
jns
(bad)
fld
inc
xor
(bad)
(bad)
mov
jns
xchg
out
cs
mov
arpl
pop
jno
dec
adc
pusha
(bad)
(bad)
(bad)
call
out
push
push
sti
std
xlat
push
ret
lods
mov
in
inc
push
add
inc
into
push
imul
(bad)
(bad)
fst
out
add
idiv
jmp
(bad)
(bad)
out
call
cs
or
mov
mov
dec
mov
cld
jmp
js
mov
cmp
ret
sbb
dec
jp
push
fstp
(bad)
jmp
movs
jmp
repnz
cwde
imul
fisttp
(bad)
and
dec
pop
std
(bad)
(bad)
(bad)
jmp
pop
mov
and
leave
sbb
and
or
mul
dec
cmc
call
loopne
pop
mov
(bad)
js
push
xchg
push
pop
or
jp
cld
call
stc
adc
dec
mov
or
movs
push
xchg
mov
inc
add
or
int3
xchg
fcmovb
lock
cld
lahf
out
fiadd
loope
outs
cmps
add
ja
sbb
mov
jle
test
icebp
pusha
cmps
cmp
(bad)
mov
cmc
inc
call
push
xchg
loope
ret
sti
mov
adc
(bad)
(bad)
(bad)
mov
inc
xor
push
in
aaa
(bad)
aad
dec
lods
test
xchg
ss
test
call
movs
xor
cmp
scas
jae
call
push
jnp
mov
int
pop
(bad)
pop
rsm
push
(bad)
(bad)
(bad)
jmp
(bad)
out
jge
in
movs
lods
loop
add
fwait
call
mov
out
outs
pop
icebp
cli
jmp
xchg
inc
(bad)
(bad)
(bad)
dec
daa
jae
push
ss
cld
iret
je
(bad)
out
movs
repnz
jge
test
and
jne
iret
(bad)
(bad)
(bad)
push
adc
sbb
dec
bound
lock
cmp
rol
inc
(bad)
cmp
into
mov
sbb
(bad)
call
addr16
jle
xchg
xor
shr
xchg
sub
jle
retf
adc
call
xchg
dec
ds
sahf
xchg
test
(bad)
(bad)
clc
ds
rol
inc
(bad)
(bad)
mov
sub
adc
call
stc
push
out
jae
lahf
rcl
(bad)
(bad)
(bad)
call
and
mov
sbb
xor
call
js
inc
push
dec
sub
test
cmc
or
pop
sbb
adc
dec
jecxz
adc
and
ss
(bad)
(bad)
jmp
xchg
jmp
and
fnstenv
xchg
pop
mov
ffree
pop
cmp
xchg
popf
or
add
jecxz
inc
jmp
mov
iret
mul
push
jg
xor
lahf
repnz
outs
mov
aas
mov
jno
movs
daa
outs
mov
pop
fisubr
or
(bad)
(bad)
(bad)
call
cld
je
stos
xchg
out
pop
fwait
movs
out
pop
push
xor
addr16
dec
retf
jno
std
in
pop
(bad)
(bad)
jmp
fbstp
in
push
jge
cdq
xchg
jns
imul
idiv
imul
xchg
xchg
clc
(bad)
(bad)
jmp
dec
xlat
xchg
outs
jno
push
(bad)
jb
mov
push
sbb
test
inc
pop
dec
jae
movs
adc
nop
and
mov
popf
aas
fs
jge
add
aam
cmp
(bad)
call
loopne
gs
(bad)
push
mov
repnz
cld
xchg
mov
retf
loope
sbb
call
mov
shr
lods
in
movs
xor
and
sub
jae
push
pop
mov
mov
call
fs
sub
inc
adc
pop
fcmovnb
(bad)
cmp
fwait
ins
and
pop
arpl
(bad)
(bad)
(bad)
inc
pop
adc
cld
(bad)
cs
stos
jmp
push
pushf
ja
iret
mov
(bad)
call
inc
das
and
repnz
xlat
jbe
hlt
mov
mov
retf
xchg
and
cld
dec
xor
inc
in
or
or
cwde
mov
add
test
dec
lock
add
test
mov
(bad)
mov
xchg
xchg
fsub
loopne
ins
shl
popa
and
push
jg
pop
cmp
cmp
in
lea
cdq
into
sbb
inc
or
inc
mov
xlat
push
std
push
int
dec
xchg
jno
ds
pusha
jne
outs
mov
daa
div
repz
pop
push
or
jmp
cld
push
lahf
scas
pop
jno
push
test
(bad)
(bad)
jmp
xchg
xor
cmps
test
xlat
adc
and
mov
(bad)
(bad)
fild
xor
loope
dec
jg
jg
push
retf
std
fiadd
lods
pop
jge
call
loopne
xchg
xor
jl
cmp
das
fstp
popa
dec
dec
or
scas
clc
jmp
in
movs
jne
ficomp
mov
(bad)
(bad)
(bad)
jmp
pminub
fidiv
lods
call
mov
push
adc
inc
arpl
enter
test
std
test
push
push
cmc
mov
fcom
xor
fwait
jae
ins
imul
fisub
scas
out
je
movs
imul
push
sub
and
mov
jge
lock
cmps
or
sar
sar
(bad)
(bad)
(bad)
call
int
pop
sbb
(bad)
addr16
popa
aas
and
xor
into
fwait
add
pop
fdivr
(bad)
(bad)
(bad)
(bad)
fistp
push
clc
shl
pop
xor
shl
xlat
push
test
jmp
(bad)
inc
out
fdivp
xor
int3
es
cmp
cmps
test
dec
dec
(bad)
jmp
test
leave
cdq
mov
out
mov
(bad)
(bad)
dec
nop
cdq
adc
ja
pop
dec
mov
adc
int3
pop
ss
repnz
(bad)
(bad)
(bad)
(bad)
fisttp
outs
cmps
pop
jp
push
arpl
xor
xor
inc
fs
mov
jo
push
imul
inc
push
aas
xchg
lods
fmul
fdivrp
mov
mov
or
and
ds
cmp
push
jg
(bad)
(bad)
cli
iret
rcr
jp
or
dec
(bad)
dec
test
mov
sbb
call
inc
fsubp
adc
fadd
ss
mov
xor
lock
lock
jmp
mov
cmp
(bad)
cmp
or
js
(bad)
(bad)
(bad)
mov
cs
out
fsubr
mov
or
dec
cmps
outs
iret
cs
(bad)
(bad)
call
mov
mov
mov
or
or
mov
loope
dec
call
dec
div
cld
xchg
call
(bad)
jg
inc
mov
sti
adc
clc
daa
in
xchg
push
xchg
xchg
lock
and
mov
mov
(bad)
push
ds
movs
stos
jae
sbb
aad
ss
jne
jns
cdq
iret
dec
mov
mov
(bad)
aas
imul
icebp
xchg
ror
cli
clc
out
js
ja
pop
cmp
in
(bad)
(bad)
adc
dec
popa
xor
fmul
inc
mov
(bad)
inc
movs
pop
and
jne
ror
and
inc
xor
add
sbb
iret
push
movs
icebp
push
push
std
adc
or
scas
test
bound
fstp
movs
movs
or
(bad)
(bad)
jmp
outs
pop
mov
fnstsw
mov
mov
pop
pop
cmp
(bad)
(bad)
(bad)
imul
sub
mov
test
or
mov
dec
(bad)
ud0
(bad)
jmp
jp
outs
int3
loopne
out
mov
shl
mov
pop
xor
int3
cmp
or
lds
dec
xor
mov
fisttp
mov
jnp
adc
stos
jle
push
lods
cwde
mov
jae
jmp
xor
sub
or
clc
(bad)
ffreep
(bad)
jmp
fisttp
mov
adc
(bad)
outs
jnp
(bad)
scas
pop
pop
mov
xor
mov
(bad)
jmp
push
enter
jne
dec
jmp
and
xchg
test
aas
(bad)
(bad)
(bad)
call
cld
out
push
int
rcr
push
pop
shl
movs
cmp
shl
daa
cwde
in
test
(bad)
(bad)
(bad)
push
outs
sar
retf
mov
repz
jp
mov
dec
xor
(bad)
jmp
data16
jl
push
pop
inc
pusha
test
and
sti
fstp
int
xor
imul
pop
cwde
or
(bad)
(bad)
dec
sbb
hlt
push
mov
fsub
add
jg
xor
lahf
xchg
lea
jmp
inc
xchg
movs
loope
popf
push
dec
and
sbb
inc
push
push
(bad)
jae
(bad)
(bad)
(bad)
dec
mov
(bad)
pmaxub
fisttp
jns
mov
arpl
pusha
sub
in
lea
(bad)
(bad)
jmp
cld
inc
push
aam
jns
scas
ret
(bad)
sub
sahf
sub
cld
call
sbb
cmp
(bad)
(bad)
dec
cdq
add
mov
repnz
or
xchg
add
retf
(bad)
jmp
out
xor
pop
mov
pop
mov
pop
jae
jns
or
inc
sti
dec
cmp
(bad)
(bad)
call
out
and
pop
in
cld
fstp
stos
mov
mov
cmp
fnstenv
inc
imul
retf
adc
icebp
repnz
push
outs
xchg
(bad)
retf
and
push
push
pop
push
or
jg
(bad)
call
int3
inc
(bad)
lods
dec
xchg
out
xchg
dec
(bad)
xor
xchg
(bad)
(bad)
dec
inc
rcr
out
nop
pop
(bad)
sub
xor
int3
ror
mov
sbb
jge
jp
(bad)
(bad)
jg
dec
pop
cli
push
xchg
repnz
mov
push
cld
ins
jmp
adc
pop
or
cmp
out
xchg
mov
xchg
xor
pop
xor
dec
xchg
call
(bad)
cmp
jae
push
or
sbb
cli
cdq
leave
dec
test
(bad)
jmp
sbb
push
xchg
jecxz
mov
(bad)
out
cwde
lock
int
mov
call
aas
mov
lods
pop
fild
fiadd
adc
and
and
(bad)
(bad)
jmp
lods
pop
mov
pavgb
pop
cld
add
movs
pop
fwait
cmp
and
ins
loop
sub
and
mov
adc
mov
mov
dec
adc
in
mov
pop
sub
(bad)
(bad)
inc
scas
xchg
mov
retf
mov
stos
sahf
mov
sub
lods
inc
(bad)
(bad)
(bad)
push
idiv
xor
call
ss
cwde
ja
jle
xchg
std
cmps
into
outs
push
outs
jmp
sar
fsubr
rol
pop
cli
mov
imul
sub
dec
lock
push
(bad)
shl
stc
inc
divps
(bad)
(bad)
(bad)
inc
cmp
sbb
dec
(bad)
dec
inc
mov
int3
out
jl
test
adc
cmp
imul
cmp
gs
dec
data16
retf
loop
mov
fcomp
cmp
shl
xor
(bad)
(bad)
call
retf
inc
mul
shr
jbe
and
mov
mov
stos
mov
ss
mov
(bad)
(bad)
push
prefetch
or
iret
jmp
add
out
mov
(bad)
js
cmp
push
(bad)
jmp
clc
(bad)
icebp
cmp
in
sub
mov
fs
or
push
push
jp
add
or
cmc
jl
leave
mov
inc
sub
fs
(bad)
mov
sub
sahf
cdq
retf
mov
mov
mov
gs
cmp
push
gs
iret
xchg
push
je
dec
arpl
(bad)
(bad)
jmp
push
push
and
mov
mov
mov
xchg
mov
pop
ror
pop
and
dec
lods
repnz
sub
mov
pop
call
mov
cwde
push
outs
mov
(bad)
(bad)
(bad)
(bad)
cmp
in
pop
inc
pop
daa
ins
cs
rol
movs
jmp
mov
xor
(bad)
and
pop
cmp
sar
inc
mov
xor
lds
shr
mov
(bad)
mov
adc
call
pop
pop
jp
shr
mov
jnp
pop
imul
(bad)
(bad)
in
mov
std
fnstsw
arpl
arpl
and
xor
cdq
loopne
(bad)
loop
jo
jp
(bad)
(bad)
inc
cmp
fisttp
mov
pop
inc
xchg
mov
nop
and
lods
pop
fld
adc
(bad)
dec
int3
int
add
or
test
hlt
or
pop
xchg
xchg
inc
and
fst
jmp
in
ss
or
sub
and
mov
retf
add
xchg
push
mov
mov
(bad)
mov
cmp
or
call
adc
inc
and
and
(bad)
lea
ud0
(bad)
push
mov
stc
and
daa
push
sahf
mov
sub
push
and
sbb
(bad)
jmp
je
jmp
push
push
fnstcw
mov
ins
adc
hlt
sahf
sub
test
xlat
and
(bad)
(bad)
dec
shl
ja
test
popa
mov
cmp
dec
xlat
ds
repz
repnz
lods
cdq
dec
jbe
sti
(bad)
(bad)
call
mov
add
mov
cmp
mov
mov
gs
(bad)
jmp
adc
sbb
push
mov
inc
xchg
lods
xchg
pop
sbb
stos
inc
jo
ds
dec
pop
(bad)
(bad)
jg
mul
movs
xchg
lea
push
sbb
inc
and
es
cwde
dec
inc
or
push
stos
push
clc
push
mov
(bad)
jmp
mov
pop
xor
jmp
jp
inc
add
cmp
stos
(bad)
(bad)
jmp
xor
add
dec
jo
sbb
ins
xchg
fs
nop
cmp
(bad)
(bad)
inc
add
mov
cs
jno
and
in
fcom
repnz
mov
mov
sbb
(bad)
(bad)
(bad)
inc
sbb
mov
mov
call
rcl
and
cmp
popf
inc
jae
cwde
in
mov
(bad)
(bad)
(bad)
(bad)
in
or
test
movs
push
push
inc
jnp
mov
outs
ret
std
xor
adc
rcr
push
das
mov
push
jns
test
sbb
add
push
dec
(bad)
(bad)
(bad)
dec
div
mov
push
dec
(bad)
jns
sub
outs
jae
jp
div
pop
(bad)
(bad)
inc
call
dec
jb
cli
mov
jnp
mov
call
cwde
scas
pop
retf
test
adc
shr
jnp
rcr
(bad)
dec
sub
call
int3
loop
lods
inc
mov
or
(bad)
(bad)
(bad)
jmp
daa
xor
js
cmps
into
(bad)
or
xor
pop
ret
dec
(bad)
jns
loopne
fnstenv
(bad)
push
mov
ins
fnstenv
fwait
shl
cmps
pop
cmp
push
je
sbb
data16
(bad)
(bad)
jmp
mov
xor
xor
mov
popf
or
bound
inc
cs
std
loopne
out
js
xlat
(bad)
jg
sbb
cmp
mov
nop
loop
cmp
mov
adc
(bad)
ret
pushf
push
cmp
jae
dec
retf
jns
pushf
xchg
push
in
ins
js
dec
mov
shl
out
je
addr16
pop
or
jne
out
pop
push
xor
(bad)
call
cmps
imul
pop
jb
adc
fnstcw
ins
ds
(bad)
(bad)
mov
stos
xchg
adc
in
les
call
leave
stc
cmp
es
(bad)
jbe
ss
test
pop
ret
xchg
inc
repnz
pop
adc
push
fmul
push
sbb
(bad)
inc
push
mov
xchg
cmc
nop
repz
xchg
or
jne
lock
sub
das
and
loop
pop
adc
inc
mov
addr16
out
fadd
(bad)
(bad)
call
xchg
js
mov
or
inc
test
pop
sub
and
(bad)
(bad)
lahf
sub
ja
(bad)
(bad)
call
push
jle
(bad)
cld
and
imul
in
lock
inc
mov
push
inc
mov
sti
shl
pop
xchg
push
pop
add
(bad)
jmp
mov
push
jmp
push
pop
call
or
addr16
mov
leave
loope
xor
push
bound
xchg
enter
or
push
jns
out
movs
cli
(bad)
(bad)
(bad)
inc
inc
mov
fidivr
mul
inc
movs
arpl
imul
inc
nop
iret
shl
(bad)
(bad)
jmp
test
out
(bad)
mov
retf
fld
mov
and
je
inc
xor
cmp
(bad)
jmp
push
cdq
out
xchg
cmp
test
std
sbb
(bad)
pop
pop
push
xlat
nop
adc
ins
out
(bad)
(bad)
(bad)
dec
aas
(bad)
(bad)
sbb
cli
pop
das
inc
sub
mul
inc
das
jne
into
popa
je
or
call
(bad)
outs
xor
not
aaa
push
addr16
push
ss
ror
push
out
movs
repz
xchg
(bad)
(bad)
jmp
icebp
jb
xchg
and
setnp
xchg
cmp
shl
imul
repnz
(bad)
(bad)
(bad)
mov
push
int3
in
jo
imul
mov
lahf
push
mov
int3
(bad)
(bad)
(bad)
fild
dec
xchg
push
in
test
int
lds
xchg
pop
and
xor
inc
inc
stos
push
xor
push
add
(bad)
jmp
clc
xchg
xor
xor
pusha
xchg
dec
mov
and
push
(bad)
(bad)
cmp
(bad)
cmp
mov
sbb
lock
push
enter
lods
jmp
xor
fdivr
(bad)
(bad)
(bad)
jmp
mov
or
sub
xor
fs
test
sahf
inc
and
sar
ror
pop
push
imul
nop
rol
mov
lods
adc
out
ja
cmp
mov
fwait
pop
movs
lock
(bad)
jmp
or
sbb
cli
sahf
(bad)
shl
xor
std
jl
mov
mul
fsub
dec
(bad)
(bad)
(bad)
inc
xchg
ror
xchg
pop
enter
push
lahf
mov
mov
outs
fs
call
clc
jbe
(bad)
(bad)
(bad)
jl
ror
sub
xchg
mov
ss
pop
cdq
addr16
loopne
movd
sbb
jg
(bad)
(bad)
cmp
popa
rcr
dec
mov
movs
add
jg
mov
jg
inc
imul
je
push
mov
and
mov
add
(bad)
or
(bad)
(bad)
(bad)
call
push
outs
adc
js
jle
retf
daa
aas
movsx
cmps
daa
jno
sahf
xchg
and
ret
mov
(bad)
(bad)
(bad)
fisttp
xchg
out
jbe
cmc
and
sbb
stos
jns
jp
jbe
cdq
mov
inc
fwait
xchg
test
inc
aas
ds
inc
inc
aad
and
ret
adc
cdq
push
call
std
call
(bad)
shl
jb
inc
jae
mov
push
push
xchg
xchg
xor
ss
lahf
loop
out
cli
(bad)
(bad)
cmp
std
fistp
mov
sbb
and
mov
cmp
adc
(bad)
call
jecxz
cmp
or
adc
lods
or
(bad)
(bad)
(bad)
inc
add
mov
jge
mov
xlat
gs
fs
aad
push
sbb
inc
rol
(bad)
(bad)
dec
mov
ror
dec
out
in
mov
and
mov
sub
(bad)
(bad)
(bad)
inc
outs
call
repz
inc
pop
and
in
adc
mov
pop
or
ins
ins
retf
scas
data16
stos
dec
(bad)
mov
adc
sub
(bad)
(bad)
dec
push
xor
out
movs
mov
mov
cmp
js
cmp
push
add
inc
retf
out
mov
push
inc
in
mov
pop
mov
(bad)
(bad)
call
add
pop
rcr
rol
mov
cmp
pusha
pop
xchg
mov
jo
or
gs
(bad)
(bad)
jg
sahf
mov
inc
les
inc
int3
dec
(bad)
and
shl
xchg
mov
std
(bad)
call
jnp
fdivr
mov
dec
xor
call
cmp
(bad)
call
xchg
mov
jns
(bad)
sub
push
xor
or
adc
das
(bad)
(bad)
(bad)
call
test
scas
stos
in
sbb
lds
sub
xchg
add
or
jg
(bad)
(bad)
(bad)
jmp
inc
dec
call
aad
cli
cwde
(bad)
add
pusha
mov
sub
int
mov
(bad)
dec
fmul
xor
push
(bad)
(bad)
sbb
sub
in
mov
addr16
or
(bad)
(bad)
(bad)
call
lea
jne
retf
in
push
pop
inc
lea
dec
cmp
into
into
lea
fcomip
dec
mov
sbb
and
sub
in
pop
pop
sbb
push
push
inc
or
xlat
call
ss
sub
inc
sbb
psrlq
(bad)
(bad)
call
pop
xor
ret
jecxz
jb
mov
dec
jmp
jnp
js
imul
xchg
cmc
pusha
arpl
ret
outs
lods
or
sub
das
clc
(bad)
push
mov
imul
and
and
jecxz
sbb
jle
iret
push
nop
daa
(bad)
(bad)
(bad)
call
jnp
inc
pop
lock
pop
dec
(bad)
sbb
movs
pop
shl
shld
dec
pop
fdivr
pop
adc
mov
pop
orps
int
stos
sub
mov
sbb
(bad)
push
into
sti
pop
inc
xchg
(bad)
imul
das
test
movs
sar
dec
ret
mov
xchg
push
fisttp
sar
data16
mov
xchg
(bad)
(bad)
jmp
adc
mov
dec
or
stc
xchg
xchg
neg
sbb
sbb
add
push
cmp
adc
mov
dec
test
inc
fldenv
daa
call
inc
fsubr
mov
sbb
jb
xor
adc
nop
ins
enter
scas
shl
icebp
(bad)
call
sbb
xor
inc
mov
and
dec
mov
push
fdivr
pop
lods
imul
(bad)
push
and
in
ret
and
sar
xchg
mov
fsubr
xchg
idiv
push
lods
inc
cmp
inc
aaa
and
fiadd
sub
inc
lods
adc
cmp
push
sub
stc
push
sahf
adc
jmp
fs
clc
fcmovnbe
push
inc
pop
xchg
mov
mov
cmp
sahf
iret
imul
(bad)
dec
jne
das
in
call
ds
xlat
sti
int3
xlat
sbb
mov
xchg
out
in
ficom
adc
jmp
xor
clc
mov
dec
popa
pop
sub
mov
inc
xor
sub
push
xchg
jl
inc
(bad)
ins
cmp
in
jnp
lods
xchg
push
adc
shl
push
adc
xchg
cmp
psraw
fld
out
and
(bad)
fcomip
adc
out
add
cld
div
pop
or
push
mov
pop
icebp
jmp
push
push
sub
rcr
mov
loop
(bad)
call
ss
inc
out
push
addr16
scas
mov
dec
push
rcl
sbb
fwait
and
enter
(bad)
mov
dec
jp
mov
lds
bt
movs
cdq
sbb
cmp
daa
(bad)
jg
push
(bad)
and
dec
outs
cmp
shl
mov
sbb
pop
sub
inc
cmp
dec
cld
(bad)
(bad)
dec
sar
(bad)
loopne
pop
outs
cmc
push
aam
xchg
jl
xchg
jmp
mov
das
push
sbb
add
cli
fistp
aad
sbb
ds
inc
jo
lock
and
(bad)
jmp
mov
aam
aam
xchg
push
inc
fdiv
sbb
addr16
(bad)
(bad)
(bad)
clc
js
xor
push
and
ss
mov
dec
sahf
sar
bound
xchg
popf
fwait
(bad)
(bad)
(bad)
call
fld
in
inc
xchg
dec
xlat
lock
fs
cmps
mov
jmp
mov
fnstcw
mov
test
je
lods
mov
test
lea
push
cmps
js
cmp
xor
sbb
push
adc
in
fadd
mov
inc
mov
add
data16
(bad)
call
popf
ret
in
jle
sbb
mov
stos
xor
inc
(bad)
mov
(bad)
(bad)
inc
cmp
or
das
pop
xchg
cmp
cmp
and
(bad)
adc
icebp
xchg
call
jmp
mov
fdiv
pop
cmps
fistp
into
ins
xchg
not
mov
xchg
jne
test
ret
xchg
and
pop
inc
jnp
add
(bad)
mov
js
add
mov
int3
push
xor
push
dec
mov
shl
sbb
xchg
dec
aad
(bad)
jg
xchg
pop
mov
inc
adc
lock
xchg
(bad)
pop
pop
ror
(bad)
(bad)
(bad)
dec
daa
pop
je
or
mov
mov
mov
cs
fwait
xchg
mov
jae
mov
scas
adc
clc
pop
cdq
loop
push
ret
sub
sbb
ja
jmp
pop
mov
sbb
test
xlat
add
out
push
int3
(bad)
(bad)
dec
clc
addr16
test
and
bound
pop
or
xchg
scas
(bad)
(bad)
jmp
xlat
test
aaa
mov
into
jge
cld
mov
iret
pop
add
rep
pop
loop
fcomip
fwait
(bad)
gs
mov
out
and
adc
clc
(bad)
call
leave
sub
aas
pop
shr
mov
test
dec
push
je
cmp
mov
jmp
fild
imul
mov
sar
cmp
mov
jmp
mov
and
and
movs
popf
je
and
(bad)
(bad)
(bad)
dec
js
in
push
push
ja
in
outs
ret
fisttp
sbb
lods
push
das
add
ds
mov
(bad)
inc
mov
pop
lea
test
into
repz
inc
ret
mov
sub
mov
xchg
push
test
fld
sbb
lds
(bad)
add
sbb
cld
(bad)
(bad)
cmp
fild
jmp
mov
pop
(bad)
inc
mov
(bad)
adc
imul
mov
enter
lea
mov
cmp
dec
mov
xor
popf
(bad)
(bad)
leave
ret
test
cmps
mov
outs
clc
jmp
or
stos
out
push
call
js
ins
push
imul
mov
adc
(bad)
call
or
adc
out
lea
cmp
rcl
sahf
inc
mov
add
jge
scas
mov
inc
sahf
fsub
jge
jnp
mov
pop
cmps
(bad)
(bad)
(bad)
dec
gs
outs
call
xchg
mov
adc
cli
stc
jl
dec
es
nop
sbb
jae
das
(bad)
(bad)
(bad)
jmp
pop
enter
or
scas
and
dec
pop
fdiv
mov
daa
call
jmp
mov
add
mov
mov
ds
popa
pop
cs
xchg
test
push
(bad)
mov
cmp
rcr
cmp
adc
jb
lea
int3
xor
mov
fs
movs
mov
(bad)
(bad)
dec
imul
pop
adc
call
daa
inc
loopne
mov
scas
fdiv
(bad)
push
xchg
aam
or
sbb
ja
fnstcw
fbstp
outs
or
add
clc
cmc
outs
les
(bad)
(bad)
(bad)
(bad)
(bad)
div
imul
push
out
(bad)
jnp
cmps
pop
push
movs
jg
fwait
(bad)
cmp
retf
(bad)
inc
dec
or
dec
call
push
rep
xchg
push
pop
clc
dec
push
(bad)
(bad)
(bad)
(bad)
jns
push
dec
addr16
push
inc
sub
xchg
leave
fnstenv
dec
inc
pop
loope
fs
into
sar
call
push
test
in
jne
mov
xor
daa
fdivr
jmp
(bad)
jmp
pop
xchg
lds
jg
hlt
sub
mov
aam
pop
push
outs
push
add
(bad)
(bad)
call
sub
push
retf
(bad)
popf
inc
xchg
xor
sbb
data16
aam
cmp
cs
or
(bad)
(bad)
(bad)
(bad)
jp
mov
xor
or
sbb
mov
stos
mov
stos
mov
gs
dec
mov
jg
inc
daa
and
jl
jecxz
inc
mov
repnz
ftst
call
(bad)
jmp
xchg
aaa
(bad)
ins
mov
pusha
cdq
(bad)
in
icebp
jg
mov
jp
dec
popa
dec
xor
adc
mov
(bad)
inc
(bad)
xchg
addr16
jl
xchg
cld
movs
ror
xor
lods
adc
push
loopne
ror
lods
(bad)
(bad)
(bad)
inc
pop
and
pop
bound
aam
mov
or
(bad)
and
fiadd
(bad)
(bad)
inc
mov
test
pop
mov
push
fisttp
mov
mov
mov
mov
xor
(bad)
(bad)
push
std
lods
int
hlt
fdiv
xor
fisttp
fnstenv
mov
es
xor
sar
(bad)
(bad)
mov
aaa
(bad)
dec
cs
cmps
xchg
cs
cmps
push
fstp
div
(bad)
(bad)
(bad)
call
sub
xchg
push
mov
xchg
xor
pop
loope
add
add
pop
(bad)
(bad)
(bad)
call
adc
lods
call
(bad)
dec
or
scas
test
test
retf
loope
sbb
(bad)
(bad)
dec
fidiv
jne
bound
popa
jb
pop
leave
loope
mov
(bad)
(bad)
jg
lock
dec
faddp
inc
mov
mov
lods
imul
sar
(bad)
inc
arpl
jb
push
aam
ja
push
push
pusha
jmp
push
fst
add
sub
mov
jmp
aas
mov
push
sti
or
jns
imul
xlat
mov
pusha
pop
xchg
or
(bad)
(bad)
jmp
out
fsubp
pop
xor
or
(bad)
push
cmp
call
and
mov
or
jp
and
add
lock
jmp
popa
xchg
fldenv
pop
and
ds
retf
pop
lods
out
cld
(bad)
call
cmp
push
mov
xchg
loop
js
lods
cmc
dec
xchg
mov
pop
movs
mov
push
repnz
in
xchg
lahf
aad
arpl
adc
pusha
imul
add
movs
(bad)
div
jg
ja
(bad)
(bad)
(bad)
inc
cmp
aad
xor
(bad)
outs
jmp
mov
in
push
sub
je
sbb
sub
(bad)
jg
inc
inc
dec
inc
adc
stc
xchg
mov
push
or
cwde
add
repnz
outs
clc
add
int3
or
jo
xchg
sti
repnz
(bad)
(bad)
out
mov
mov
(bad)
cli
xchg
sti
or
repnz
jp
mov
dec
dec
xchg
inc
mov
push
(bad)
(bad)
fmul
(bad)
xchg
stos
sahf
ret
xchg
jmp
cli
sbb
mov
xchg
or
cmp
dec
(bad)
fmul
popa
cmp
hlt
sub
dec
iret
lods
push
repz
sub
dec
adc
mov
gs
(bad)
(bad)
push
enter
jle
or
pop
adc
in
sub
in
scas
mov
repnz
xor
push
repnz
(bad)
call
cmps
scas
mov
test
cmps
jmp
fdivr
imul
(bad)
(bad)
call
fdivr
jmp
sub
fidivr
mov
sub
push
dec
outs
xchg
dec
inc
and
adc
dec
(bad)
ss
push
es
test
mov
mov
and
fstp
fstp
push
fisubr
dec
mov
gs
ds
(bad)
(bad)
call
xchg
out
aad
out
cdq
ja
jns
cdq
jns
sbb
mov
lahf
pusha
popa
add
sar
call
(bad)
(bad)
call
jo
or
push
movs
xor
xor
mov
and
jns
(bad)
aad
dec
dec
dec
adc
clc
outs
jbe
sbb
push
adc
cmpxchg
jl
(bad)
in
cmp
(bad)
(bad)
call
in
cmp
cmps
ret
or
sbb
test
sub
les
(bad)
add
(bad)
jmp
and
addr16
out
and
mov
inc
cmps
and
scas
adc
(bad)
mov
(bad)
mov
push
push
jmp
or
icebp
push
jbe
sti
cmp
out
(bad)
(bad)
jmp
jno
mov
gs
mov
call
test
scas
pop
lea
fneni(8087
mov
dec
lock
or
sbb
pop
jns
jno
push
mov
(bad)
inc
repz
jle
cmp
xlat
outs
rol
jmp
xchg
shl
push
cld
jmp
mov
jle
cmp
pop
mov
mov
rcr
pop
(bad)
call
bound
inc
call
loopne
fsubr
push
sti
movs
dec
mov
and
inc
lds
gs
jp
outs
mov
mov
test
jmp
or
cmps
add
inc
jl
mov
dec
push
fdivr
scas
lods
mov
fdivr
(bad)
(bad)
call
aaa
push
outs
xor
push
cmps
or
pop
push
dec
xchg
cdq
mov
test
jns
sar
lock
scas
(bad)
mov
ins
mov
out
cdq
pop
push
cmc
test
mov
push
ins
int
(bad)
(bad)
(bad)
inc
(bad)
sahf
mov
adc
lea
xchg
sub
or
int
xchg
xor
add
sahf
lods
pusha
xor
mov
mov
cwde
es
(bad)
in
fcom
adc
adc
dec
push
inc
(bad)
inc
and
adc
cdq
or
and
(bad)
(bad)
call
xor
inc
push
inc
and
cmp
adc
lods
ins
es
icebp
ret
jecxz
mov
std
int3
xor
push
(bad)
(bad)
(bad)
push
into
dec
(bad)
jmp
inc
adc
push
push
add
cld
aad
je
inc
sbb
popa
jns
jbe
pop
mov
(bad)
call
add
popf
dec
shl
sbb
mov
inc
and
jne
imul
mov
sbb
inc
ror
sub
jae
cdq
inc
cmp
(bad)
(bad)
call
adc
les
popf
jb
(bad)
pusha
mov
or
shr
cmps
aaa
std
(bad)
inc
jno
xor
add
push
sub
push
fdiv
icebp
call
and
inc
xchg
fwait
aad
sbb
add
je
clc
pop
pop
pop
cmp
or
pop
mov
or
push
arpl
cmp
leave
enter
or
mov
jmp
mov
bound
add
inc
scas
pavgw
push
rcr
std
push
dec
lods
cli
scas
push
stos
shr
sahf
mov
call
(bad)
jp
mov
sti
pop
mov
call
or
int3
aam
pop
hlt
jmp
sub
call
pusha
div
and
mov
xor
in
cmc
(bad)
(bad)
(bad)
inc
cmp
xchg
mov
dec
mov
icebp
xchg
or
jmp
add
inc
(bad)
(bad)
out
cli
out
call
movs
shl
imul
sbb
adc
rol
(bad)
lahf
out
mov
mov
cmc
pop
arpl
cmc
jle
sub
dec
mov
or
dec
push
cs
ins
mov
std
out
out
clc
(bad)
jnp
outs
or
xor
lock
mov
mov
sbb
jl
sbb
(bad)
(bad)
jmp
sbb
arpl
cmp
sub
aaa
mov
mov
arpl
int3
pop
mov
out
(bad)
(bad)
(bad)
call
(bad)
jno
lods
jg
cmp
nop
mov
(bad)
dec
mov
mov
xchg
(bad)
pop
mov
jg
add
jne
mov
mov
cmp
jae
(bad)
(bad)
(bad)
(bad)
mov
mov
das
lock
xchg
repz
pop
loope
pushf
sar
ret
dec
xor
cli
iret
pop
mov
and
dec
pushf
arpl
mov
adc
sub
mov
inc
mov
repz
mov
or
push
fsub
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
addr16
xchg
add
adc
push
loop
mov
sub
ret
retf
data16
(bad)
(bad)
(bad)
push
les
xor
loopne
mov
retf
adc
shl
jne
xor
dec
mov
xchg
pop
jmp
call
(bad)
cmp
mov
inc
push
push
jg
inc
clc
mov
fdivr
(bad)
(bad)
(bad)
jl
jge
pop
mov
jbe
js
xchg
inc
cmp
pop
jb
repz
cmp
mov
aaa
xor
mov
mov
xchg
jg
lock
(bad)
pop
add
(bad)
call
push
sti
cli
nop
and
imul
fist
cli
add
(bad)
(bad)
(bad)
(bad)
fimul
and
push
fist
aad
dec
aam
pushf
fcomp
pop
shr
sar
sub
sbb
neg
add
mov
call
sbb
les
mov
rcr
jl
mov
mov
(bad)
(bad)
dec
push
xor
mov
bound
imul
test
mov
retf
mov
(bad)
into
inc
add
ins
ss
(bad)
(bad)
(bad)
inc
neg
and
(bad)
cld
jmp
xchg
pop
dec
cmp
aad
ror
(bad)
(bad)
(bad)
inc
shl
mov
cmp
cli
pop
or
fist
mov
mov
(bad)
(bad)
inc
adc
cmp
or
lds
cmc
outs
dec
xchg
ja
xor
jmp
clc
mov
sub
jecxz
pop
shl
cmps
mov
or
(bad)
(bad)
(bad)
jmp
out
mov
fbld
out
hlt
in
push
mov
dec
(bad)
(bad)
(bad)
cmp
cmc
adc
pop
test
jae
mov
jmp
pop
push
pop
fbstp
(bad)
inc
iret
cmp
dec
mov
mov
mov
sahf
les
cli
inc
push
nop
outs
mov
jmp
sbb
lock
push
push
loopne
jne
inc
pop
adc
(bad)
(bad)
dec
call
adc
fmul
repnz
bound
sub
pusha
cmc
shr
sub
mov
dec
out
xchg
pop
add
outs
mov
stos
mov
adc
aaa
cmp
outs
inc
mov
ins
mov
lods
mov
jge
xchg
inc
mov
pop
lock
cmp
outs
xchg
imul
sahf
xor
enter
(bad)
(bad)
jmp
stc
cmps
lahf
mov
ja
jmp
arpl
iret
jg
inc
lahf
cmp
sbb
jmp
retf
sub
sub
mov
inc
shr
add
adc
popf
fdiv
pop
lods
mov
mov
sub
jno
(bad)
fsubr
push
or
(bad)
dec
scas
jo
pop
int
mov
rol
loope
fadd
nop
aas
stos
in
pushf
(bad)
leave
pop
mov
imul
scas
mov
(bad)
(bad)
(bad)
xor
adc
push
mov
add
or
loop
push
les
mov
jg
xor
cmps
inc
add
mov
aaa
adc
mov
call
les
xlat
cmp
inc
jmp
cmp
xlat
fsubrp
ret
aam
jle
mov
(bad)
(bad)
inc
in
fdivp
mov
cli
lods
mov
test
outs
push
movs
std
inc
mov
icebp
xchg
(bad)
(bad)
jmp
arpl
rcr
xchg
retf
inc
push
pop
or
inc
neg
lea
cs
fcomip
call
jno
neg
pop
fst
jne
retf
mov
aam
cmp
(bad)
(bad)
(bad)
dec
xor
enter
xor
jge
into
test
rcr
xor
bound
(bad)
push
cli
xchg
(bad)
xlat
nop
repnz
in
or
sbb
mov
jge
(bad)
(bad)
call
cmps
push
ja
popf
outs
imul
fucomi
into
adc
push
sbb
mov
rol
sbb
mov
(bad)
push
movs
(bad)
repnz
jl
pushf
loop
inc
dec
cs
call
enter
dec
imul
add
push
sti
cmps
rcl
je
cs
in
pop
scas
loopne
dec
(bad)
(bad)
(bad)
cmp
adc
mov
dec
in
lods
fnstsw
mov
xchg
xchg
sub
scas
dec
(bad)
(bad)
(bad)
dec
sub
adc
sbb
push
stc
in
and
mov
pop
and
fimul
(bad)
clc
and
and
xchg
test
adc
sub
pusha
mov
dec
add
pop
pop
adc
(bad)
push
push
mov
dec
daa
mov
ror
call
jg
sbb
mov
jnp
scas
push
and
mov
ficomp
xor
(bad)
cli
loopne
xchg
mov
(bad)
test
mov
rcl
and
jne
jl
sbb
(bad)
mov
xor
(bad)
(bad)
mov
div
dec
mov
or
dec
rcl
or
std
scas
cli
xor
sub
(bad)
jno
retf
pop
pop
push
(bad)
dec
loop
cmp
in
pop
arpl
adc
es
adc
(bad)
dec
ins
inc
mov
jmp
(bad)
(bad)
push
js
jge
retf
and
outs
or
push
push
mov
test
aaa
jle
enter
push
add
repnz
pusha
cmp
push
aad
int
pop
icebp
pop
aas
(bad)
(bad)
(bad)
(bad)
clc
sbb
jle
aaa
cs
lds
mov
inc
push
mov
lahf
mov
aas
cmp
adc
sar
jmp
cmp
adc
inc
mov
cmp
sar
std
jnp
test
fs
xor
xchg
(bad)
adc
push
add
cmp
aam
(bad)
(bad)
call
aaa
inc
and
pop
out
or
inc
push
ins
test
push
into
push
sub
push
and
(bad)
call
or
mov
mov
hlt
inc
rcr
pcmpeqb
sub
jmp
in
and
xchg
sahf
push
dec
nop
cmp
mov
jo
inc
pop
sub
(bad)
(bad)
(bad)
call
loope
xor
mov
adc
nop
jmp
sub
cmps
jae
sub
push
(bad)
(bad)
(bad)
call
inc
es
adc
mov
pop
jmp
cmps
dec
pusha
lds
xor
fsub
pop
scas
push
or
js
push
jle
lock
push
outs
push
xchg
out
fstp
movs
jb
sti
inc
and
pop
and
cmp
push
gs
xchg
jg
and
adc
mov
nop
fwait
xor
lds
pop
data16
ins
(bad)
(bad)
(bad)
jmp
fisub
fsub
fidivr
fld
daa
mov
rcr
sub
(bad)
test
adc
pop
cmp
add
jns
call
loope
adc
(bad)
(bad)
call
xlat
fsub
retf
sub
push
push
jl
add
sahf
jecxz
mov
das
jmp
(bad)
(bad)
(bad)
mov
scas
push
and
jbe
dec
call
mov
(bad)
idiv
sbb
push
sbb
or
ret
sub
shl
and
xchg
stos
loopne
jae
(bad)
(bad)
(bad)
jmp
fidivr
push
cmps
pushf
ins
xor
pop
jge
xchg
icebp
dec
ins
pop
pop
loope
mov
sub
mov
jmp
cmp
pushf
lds
mov
outs
call
nop
idiv
pop
dec
mov
call
or
or
sbb
sbb
hlt
(bad)
(bad)
mov
dec
add
mov
pop
enter
or
add
jb
add
sub
(bad)
(bad)
fbld
cmp
jecxz
cmp
and
xchg
shl
add
je
dec
cwde
(bad)
(bad)
jg
xlat
mov
add
xor
mov
call
jmp
(bad)
(bad)
call
mov
jo
dec
imul
nop
rcr
daa
aaa
adc
adc
(bad)
call
mov
inc
stos
clc
lock
fnsave
jo
rcl
stc
pop
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
je
popf
nop
scas
fs
mov
jb
xchg
je
and
add
xchg
pop
adc
xor
mov
icebp
or
mov
dec
ins
or
mov
repz
(bad)
call
xchg
jl
and
sti
jb
cmp
mov
xchg
add
shr
scas
inc
ss
jmp
(bad)
(bad)
(bad)
dec
dec
mov
and
call
fistp
xchg
rcl
ds
out
jnp
xor
mov
pop
inc
call
dec
cmp
xchg
or
bnd
int3
(bad)
(bad)
(bad)
fcomip
loop
xlat
mov
frstor
dec
mov
pushf
push
mov
loope
(bad)
(bad)
(bad)
jmp
add
mov
mov
cmps
in
lahf
push
dec
mov
arpl
cmp
(bad)
(bad)
(bad)
fbld
retf
enter
inc
dec
mov
mov
xor
(bad)
jmp
jmp
jo
inc
(bad)
inc
add
adc
push
mov
xlat
xchg
popa
pushf
jne
fnstcw
(bad)
std
pop
and
mov
lahf
ds
cs
popa
xchg
(bad)
mov
pop
pop
jae
jbe
xor
pop
mov
lods
push
in
call
(bad)
cmp
xchg
(bad)
(bad)
(bad)
jmp
adc
mov
scas
dec
push
int3
mov
or
xchg
dec
push
jb
jae
inc
enter
jo
(bad)
(bad)
(bad)
push
cli
scas
xchg
into
mov
jo
mov
mov
cmps
xor
inc
jmp
test
cmp
into
cmp
jmp
mov
out
call
out
js
test
and
shl
jp
add
sbb
fstp
(bad)
inc
out
cld
(bad)
(bad)
call
loop
and
xchg
js
jae
arpl
mov
loope
loopne
pop
sub
(bad)
call
stos
fsub
retf
out
xchg
retf
jge
cdq
clc
pop
test
push
dec
(bad)
mov
outs
clc
(bad)
call
inc
jno
adc
inc
or
rcl
xchg
xor
pushf
jo
ins
inc
add
loop
jg
(bad)
push
in
xor
xchg
ins
cmp
dec
addr16
sub
ds
(bad)
call
jnp
pop
(bad)
push
add
jp
mov
das
pop
add
and
(bad)
jmp
pop
retf
push
dec
jle
jo
fndisi(8087
or
arpl
push
jg
jp
sbb
hlt
(bad)
(bad)
call
inc
(bad)
(bad)
popf
mov
lods
jae
sbb
add
xor
xor
push
pop
cld
call
fadd
mov
mov
call
ret
enter
(bad)
dec
adc
jbe
cmp
dec
sbb
add
neg
movs
(bad)
call
or
ret
mov
clc
mov
mov
std
fcmovnu
fiadd
xchg
(bad)
dec
into
jecxz
inc
inc
ins
jmp
dec
jmp
ret
data16
mov
cmp
in
inc
dec
movs
and
(bad)
(bad)
jmp
inc
pushf
(bad)
xor
(bad)
std
fld
cwde
or
retf
inc
sbb
cwde
dec
test
(bad)
(bad)
push
xor
shl
loopne
out
mov
jo
adc
mov
add
mov
bound
fadd
fs
adc
jns
push
(bad)
(bad)
(bad)
call
mov
dec
mov
pop
pop
rol
movs
lea
mov
xor
je
push
(bad)
(bad)
(bad)
call
test
inc
mov
xchg
leave
adc
shr
in
in
shl
loope
mov
adc
(bad)
call
mov
or
hlt
ret
adc
in
push
adc
mov
repz
(bad)
(bad)
call
(bad)
pop
sbb
rol
fwait
sbb
aas
retf
les
jb
jnp
or
call
les
fadd
push
inc
sub
mov
xchg
test
push
clc
cdq
add
jl
add
jecxz
mov
retf
and
add
xlat
(bad)
(bad)
cmp
inc
inc
xchg
imul
lods
enter
hlt
and
cmp
jle
sar
(bad)
(bad)
dec
adc
xor
inc
mov
inc
push
mov
fwait
sub
jle
dec
(bad)
xor
mov
(bad)
jg
push
rcr
out
mov
cmp
pop
add
(bad)
cmp
call
mov
add
pop
div
xchg
sti
out
shl
cli
dec
(bad)
loopne
pop
rcl
(bad)
(bad)
(bad)
push
jmp
lds
jge
push
test
inc
cmp
mov
cmc
and
fstp
jmp
inc
inc
cmp
inc
adc
scas
sbb
add
xor
loopne
(bad)
jmp
push
cwde
pop
jne
jno
xor
imul
ret
(bad)
xor
(bad)
call
dec
dec
and
fdivr
xor
lock
sbb
fwait
dec
int
xchg
xchg
or
(bad)
(bad)
(bad)
jmp
cwde
dec
data16
xchg
out
call
push
arpl
fist
add
jp
mov
(bad)
(bad)
(bad)
jmp
ror
adc
sar
pop
addr16
push
cld
retf
mov
pop
mov
test
pop
(bad)
fcomip
call
fwait
sub
adc
retf
push
push
push
inc
(bad)
(bad)
(bad)
call
test
rol
pop
dec
imul
outs
(bad)
cmc
repnz
stos
aad
(bad)
(bad)
call
mov
lods
push
fdivp
inc
mov
mov
loop
push
xor
(bad)
(bad)
(bad)
(bad)
in
mov
enter
adc
adc
mov
std
pop
mov
and
test
or
mov
cmp
sub
and
dec
mov
pop
mov
mov
sti
das
mov
inc
dec
lods
mov
pusha
xor
fild
xor
(bad)
(bad)
call
push
and
add
mov
mov
sbb
test
leave
sti
or
pop
lahf
clc
xor
xor
popf
test
xchg
cmc
cmp
(bad)
call
cmp
bound
push
test
stos
adc
xchg
(bad)
inc
sbb
and
out
(bad)
(bad)
(bad)
push
xor
adc
arpl
mov
lods
nop
inc
in
out
mov
mov
enter
(bad)
(bad)
(bad)
(bad)
jmp
add
outs
mov
mov
int3
in
(bad)
rol
mov
(bad)
sbb
idiv
adc
xor
jp
pop
(bad)
mov
inc
iret
mov
fsubrp
(bad)
stos
inc
stos
test
(bad)
(bad)
call
or
imul
das
jmp
test
dec
xlat
lods
push
(bad)
(bad)
inc
bound
outs
push
sub
inc
push
dec
les
std
out
and
stos
stos
and
mov
ins
adc
(bad)
(bad)
mov
int3
mov
scas
movs
imul
sub
inc
(bad)
inc
xchg
(bad)
mov
aas
pop
arpl
mov
mov
mov
or
push
xor
jmp
dec
dec
mov
rcr
loopne
popa
(bad)
(bad)
(bad)
(bad)
(bad)
enter
retf
xchg
std
or
(bad)
push
in
dec
xor
add
stos
fiadd
(bad)
jmp
and
ret
adc
les
jle
mov
sbb
cmp
push
cmp
push
imul
and
xlat
xor
sub
call
(bad)
dec
mov
ss
popa
jb
test
mov
adc
mov
adc
mov
(bad)
(bad)
jmp
pop
and
outs
xchg
(bad)
dec
in
in
mov
inc
jns
pop
pop
shr
jle
lods
(bad)
(bad)
(bad)
cmp
repz
inc
bound
(bad)
loope
scas
out
xchg
nop
sub
(bad)
(bad)
call
repnz
mov
aaa
outs
daa
ins
mov
sbb
dec
fwait
sbb
inc
xor
mov
jmp
xchg
sbb
adc
fsubr
mov
or
jns
add
(bad)
jl
push
xchg
push
out
mov
fwait
movnti
mov
inc
dec
adc
or
sbb
mov
call
loopne
mov
stc
jle
lds
scas
mov
movs
(bad)
(bad)
(bad)
inc
stc
push
add
pop
fwait
push
mov
mov
pop
xor
sbb
mov
mov
or
push
std
stos
sbb
xchg
cwde
mov
enter
fistp
fstp
jg
ret
out
jmp
scas
cmps
loop
mov
stos
cdq
xor
xchg
das
xor
fmul
(bad)
(bad)
(bad)
call
mov
out
pop
mov
fsub
sub
je
enter
push
imul
loop
inc
cli
pop
xor
int3
imul
loop
pop
in
std
push
addr16
inc
push
ja
stc
fnsave
xchg
mov
dec
and
push
bound
mov
xchg
dec
or
pop
adc
mov
inc
ret
adc
xchg
hlt
mov
and
and
(bad)
(bad)
(bad)
dec
rol
inc
ins
je
loop
mov
fcom
in
mov
test
xchg
xor
(bad)
mov
(bad)
ins
clc
or
clc
dec
hlt
in
fiadd
push
or
mov
jp
push
jmp
mov
test
cmp
(bad)
(bad)
(bad)
jmp
enter
retf
mov
bt
add
cli
popa
test
mov
mov
(bad)
(bad)
(bad)
dec
dec
movs
sub
fdivr
cmp
das
push
lea
ret
sahf
enter
pop
cmp
add
stc
lds
aaa
aas
mov
sbb
cld
jg
xchg
mov
xchg
sub
xor
rcl
js
xchg
scas
(bad)
(bad)
(bad)
jmp
nop
cmps
xchg
and
sbb
push
add
lods
lea
mov
aam
(bad)
(bad)
(bad)
(bad)
adc
jp
adc
xchg
(bad)
and
int
add
jge
(bad)
(bad)
(bad)
jmp
sti
xor
add
xor
push
ss
add
adc
pop
cmc
(bad)
(bad)
cmp
ret
popa
sub
movs
sub
adc
cmp
dec
aas
repz
adc
daa
idiv
dec
(bad)
inc
dec
mov
sar
push
push
div
scas
dec
mov
es
xchg
int
push
dec
adc
test
pop
push
xchg
mov
dec
jge
jmp
push
ds
movs
mov
jmp
inc
xchg
lds
sub
xchg
test
lods
mov
push
push
adc
pop
lock
pop
loopne
and
addr16
dec
int
push
xor
jbe
lea
mov
(bad)
(bad)
(bad)
(bad)
out
xor
mov
sub
mov
(bad)
rcl
ja
mov
push
fwait
loopne
mul
repnz
(bad)
(bad)
mov
(bad)
inc
pushf
cwde
fsub
xor
xchg
ror
leave
and
xchg
or
adc
loop
rol
into
(bad)
in
and
repnz
imul
stc
cmp
add
(bad)
(bad)
push
mov
mov
dec
outs
sub
ds
pop
pop
outs
fisub
popf
(bad)
adc
(bad)
(bad)
(bad)
(bad)
ds
jmp
push
jg
fistp
add
mov
mov
shl
lods
pop
lds
cmp
lods
mov
fsubr
xlat
je
jecxz
(bad)
(bad)
(bad)
fild
daa
mov
pop
imul
stc
and
sbb
ret
push
ins
pop
jb
dec
ud0
(bad)
jmp
enter
xchg
push
call
sub
popaw
test
cmps
xchg
jns
(bad)
mov
sub
and
or
sbb
adc
sbb
gs
(bad)
(bad)
(bad)
jmp
jb
cmc
loope
adc
jecxz
push
and
jnp
(bad)
out
xlat
pop
push
sub
(bad)
mov
retf
retf
fwait
call
mov
cmp
pop
mov
(bad)
(bad)
(bad)
inc
bound
sbb
popf
or
jb
add
cmp
xor
retf
xor
pushf
dec
inc
xor
lahf
sub
push
jb
pop
(bad)
(bad)
(bad)
inc
mov
mov
push
add
ficomp
sbb
sbb
(bad)
(bad)
call
les
in
fisttp
imul
push
rcr
js
and
mov
mov
test
call
dec
rcl
cs
das
(bad)
inc
lds
cmc
pop
and
icebp
(bad)
jmp
lds
pop
add
mul
mov
sbb
add
outs
cli
(bad)
jmp
cmp
push
movs
cmp
mov
pop
in
pushf
jmp
add
call
pushf
std
lods
push
inc
iret
fld
mov
loop
jne
adc
push
in
or
(bad)
jmp
arpl
inc
push
xlat
inc
in
cmp
jecxz
fcom
sbb
ss
in
fst
popa
leave
stos
(bad)
(bad)
(bad)
mov
jne
inc
mov
xor
cmp
js
(bad)
ret
movaps
xchg
(bad)
mov
push
(bad)
cli
inc
push
or
in
xchg
or
add
inc
ret
push
jae
cmp
outs
(bad)
(bad)
(bad)
jmp
jecxz
and
enter
and
xchg
push
cmp
push
or
retf
out
int3
(bad)
(bad)
call
mov
pop
std
rcr
jmp
in
mov
xor
scas
in
pop
(bad)
(bad)
(bad)
call
shl
xor
push
enter
fidivr
push
inc
mov
arpl
push
nop
mov
pusha
jbe
inc
mov
add
cmp
clc
push
sub
xchg
retf
inc
retf
inc
inc
xchg
pop
retf
adc
(bad)
(bad)
(bad)
jmp
mov
xchg
mov
sbb
nop
pushf
rep
inc
xor
in
pop
bound
bsf
(bad)
(bad)
jmp
jmp
(bad)
cli
sahf
mov
and
retf
shl
inc
lahf
leave
or
(bad)
jmp
inc
add
and
nop
sub
pop
push
cmp
sub
cmp
adc
and
push
sbb
sahf
les
add
mov
mul
push
push
mov
leave
or
and
das
xchg
xor
jle
sbb
dec
mov
dec
ret
imul
inc
ins
test
out
cmp
push
fsubr
xchg
cmp
xchg
test
dec
xchg
fcomp
push
shr
fisttp
shr
or
(bad)
(bad)
jmp
or
mov
jge
js
cmp
cmp
adc
mov
scas
and
xchg
adc
push
addr16
pop
repz
mov
cmpps
inc
mov
int
mov
loope
(bad)
(bad)
push
inc
pop
jecxz
std
ins
mov
xor
jp
sub
adc
jecxz
mov
(bad)
(bad)
jmp
adc
jmp
pop
sub
mov
retf
jmp
and
(bad)
(bad)
(bad)
call
aas
retf
mov
jne
icebp
and
xchg
dec
ss
ror
sub
mov
(bad)
(bad)
(bad)
cmp
fwait
jmp
mov
clc
push
iret
xor
test
dec
mov
cdq
jl
(bad)
(bad)
push
aaa
std
loope
outs
jge
pop
pop
je
imul
and
clc
xlat
dec
add
cld
push
cmp
mov
arpl
fadd
and
sub
jmp
add
outs
sar
(bad)
inc
mov
mov
(bad)
retf
push
xchg
mov
adc
test
adc
(bad)
cld
aad
and
hlt
or
leave
and
std
pop
xor
push
mov
cmp
shl
xchg
int3
mov
dec
lock
scas
sbb
aas
adc
cs
loope
fs
pop
push
ins
lods
(bad)
(bad)
(bad)
(bad)
jl
in
adc
ror
adc
push
xchg
pushf
inc
push
or
arpl
loopne
pop
movs
call
out
stc
movs
inc
push
push
movs
retf
jge
push
mov
push
xchg
pushw
jns
xor
mov
out
js
(bad)
(bad)
mov
inc
lods
push
clc
int
xchg
shl
pushf
es
or
(bad)
(bad)
inc
mov
sub
push
xor
push
dec
mov
dec
inc
cmp
test
aam
mov
jmp
ins
pop
lods
repz
leave
or
cs
jmp
or
inc
leave
push
adc
retf
popa
cmp
lds
sub
adc
movs
(bad)
cld
add
inc
mov
(bad)
dec
push
data16
cli
(bad)
jmp
mov
(bad)
fidiv
cmp
std
lahf
or
xlat
mov
call
cmp
ror
or
inc
mov
dec
push
fistp
call
or
dec
(bad)
(bad)
(bad)
jmp
jmp
ins
outs
adc
(bad)
out
inc
fistp
adc
fucomp
add
lock
(bad)
push
lods
pop
xchg
and
mov
sub
jnp
(bad)
(bad)
fistp
xchg
lahf
inc
out
movq
bound
xchg
repnz
aaa
fabs
fadd
mov
(bad)
jmp
es
in
xor
les
ret
fdivr
pop
popa
sbb
mov
(bad)
(bad)
jmp
dec
pushf
jnp
es
inc
xchg
xor
inc
jl
sbb
add
jl
call
(bad)
(bad)
(bad)
(bad)
dec
and
or
mov
or
sti
test
leave
mov
icebp
cmp
(bad)
(bad)
(bad)
dec
cmc
sar
leave
and
add
mov
adc
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
fild
lods
adc
xchg
jmp
shr
cmps
dec
xchg
fistp
repz
(bad)
(bad)
call
xor
or
ret
or
jle
sbb
sbb
iret
je
jnp
pop
int3
mov
adc
clc
stc
cmps
arpl
les
sar
jbe
cmp
retf
pop
imul
mov
jg
dec
in
xor
les
pop
fnstenv
js
cmp
cs
(bad)
(bad)
jg
cdq
jmp
pop
jp
je
inc
pop
out
pop
sti
lahf
cmp
aaa
jmp
mov
(bad)
(bad)
(bad)
call
mov
mov
icebp
out
add
(bad)
loope
sub
ds
imul
(bad)
(bad)
(bad)
js
call
mov
shl
imul
fcmovu
cmp
adc
xchg
push
(bad)
(bad)
jmp
add
cmps
popa
loopne
dec
push
js
mul
or
outs
test
mov
jmp
cmps
mov
daa
sbb
jge
pop
popa
lea
jmp
pop
sub
(bad)
jmp
mov
jnp
jmp
std
xchg
fdivr
iret
lock
popa
jecxz
xchg
popa
stc
ret
inc
xchg
call
(bad)
jl
enter
and
sub
sbb
fdiv
enter
add
fcomip
(bad)
push
add
ss
adc
pop
xchg
outs
mov
daa
push
cli
cld
(bad)
(bad)
jmp
out
pop
mov
fadd
fdiv
leave
fnsave
pop
push
sub
cmp
dec
(bad)
(bad)
push
mov
or
ficomp
jle
adc
sbb
dec
xlat
loop
dec
xor
stos
stos
hlt
(bad)
(bad)
inc
xchg
push
dec
or
inc
fisubr
(bad)
cld
gs
popa
pop
das
ins
stos
inc
ds
cmp
(bad)
call
mov
cmp
or
rcl
pushf
xchg
dec
xor
cld
push
adc
imul
push
nop
mov
pop
mov
(bad)
(bad)
call
mov
stc
jne
pop
xchg
jmp
adc
mov
dec
clc
fisubr
mov
clc
(bad)
(bad)
push
jb
into
mov
dec
jmp
sar
clc
push
(bad)
mov
mov
das
clc
jmp
stos
jmp
(bad)
cmp
fisttp
call
nop
or
(bad)
(bad)
(bad)
call
call
js
adc
jecxz
mov
retf
int3
mov
xor
stc
inc
mov
(bad)
scas
(bad)
jmp
push
and
movs
dec
test
cwde
setg
push
jge
pop
jle
xlat
pop
cmp
sub
enter
call
fld
mov
cmp
(bad)
retf
pop
or
pushf
ins
pop
(bad)
call
mov
cmp
add
pop
sar
call
test
add
fs
mov
pop
add
sbb
mov
xor
dec
(bad)
out
adc
sub
cld
out
adc
adc
adc
shl
mov
shr
push
push
retf
sub
pop
test
jae
adc
cld
(bad)
mov
fiadd
fild
out
pop
rcl
mov
pop
pop
mov
cli
data16
mov
sub
mov
push
shr
pop
add
mov
pusha
cdq
mov
dec
inc
popa
jo
std
dec
movs
(bad)
(bad)
(bad)
push
mov
adc
retf
inc
iret
popa
jl
out
iret
push
dec
cmp
out
sub
cli
sub
(bad)
(bad)
push
clc
cs
jnp
cmc
stos
or
(bad)
inc
pop
stc
(bad)
repz
inc
xchg
test
rcr
(bad)
(bad)
(bad)
call
test
pop
in
arpl
push
jecxz
sub
mov
inc
test
fs
mov
push
movs
add
or
(bad)
(bad)
(bad)
jl
int
xchg
mov
sub
shl
jo
sub
mov
jmp
cmp
adc
pop
lods
enter
jmp
dec
adc
das
push
jbe
pop
(bad)
push
ret
loop
jle
enter
cmp
div
ins
int
rol
(bad)
push
or
lea
adc
jl
outs
push
jl
(bad)
stc
call
hlt
or
(bad)
mov
push
dec
jge
hlt
call
dec
or
push
fwait
adc
adc
push
repnz
ja
ret
pop
in
cmp
movs
fcom
mov
(bad)
(bad)
mov
and
jne
imul
cld
xor
push
jecxz
cmp
jb
(bad)
(bad)
(bad)
fist
ss
pop
jl
sbb
inc
test
mov
mov
adc
inc
jae
mov
bound
pandn
(bad)
(bad)
(bad)
std
push
int3
imul
sbb
call
mov
jae
cmps
inc
ret
mov
(bad)
(bad)
call
leave
fdivr
xchg
repz
jae
lahf
loope
imul
cld
lds
inc
(bad)
(bad)
(bad)
(bad)
call
leave
jmp
sahf
and
ins
or
inc
ins
cmps
nop
xlat
adc
cmp
sbb
(bad)
(bad)
(bad)
dec
div
xor
shl
call
movs
mov
fisttp
or
pushf
push
(bad)
(bad)
(bad)
(bad)
cmp
mov
test
stc
xor
or
cmp
movs
xor
push
mov
(bad)
fiadd
sub
addr16
(bad)
out
clc
and
int3
loop
pop
push
xor
push
mov
repz
mov
(bad)
(bad)
jmp
or
cs
enter
xor
bound
jmp
popa
cld
or
ds
test
ret
push
xchg
test
jle
(bad)
(bad)
(bad)
dec
repz
aas
inc
or
add
mov
inc
imul
sub
aam
jge
js
sbb
ins
pop
lsl
or
xor
iret
(bad)
or
aad
jmp
(bad)
icebp
(bad)
mov
pop
lds
(bad)
push
popf
push
sahf
sbb
arpl
push
jle
fwait
fwait
test
(bad)
(bad)
call
je
out
pushf
mov
or
push
adc
mov
js
(bad)
mov
mov
push
ins
jecxz
(bad)
call
push
mov
mov
arpl
mov
ror
leave
les
mov
cld
jecxz
adc
(bad)
(bad)
inc
aaa
mov
mov
(bad)
xchg
add
push
lds
xchg
js
movs
or
add
(bad)
jmp
mov
or
out
add
call
call
js
enter
nop
adc
fisub
add
dec
(bad)
(bad)
(bad)
ds
cmp
aaa
mov
sub
adc
pop
mov
rol
(bad)
(bad)
inc
pop
push
pop
les
outs
inc
dec
retf
cmp
mov
in
cmp
add
push
rol
(bad)
mov
mov
jmp
int
repnz
lds
mov
push
data16
(bad)
fmul
sbb
inc
jno
stos
je
sbb
shl
loop
or
movs
jne
sbb
dec
adc
lahf
fwait
or
add
pop
sti
sahf
push
mov
adc
xchg
jb
mov
add
xchg
cmp
(bad)
(bad)
mov
cmps
dec
xchg
cmp
inc
je
(bad)
rcl
lock
cdq
jl
xor
(bad)
(bad)
jmp
shr
mov
mov
push
mov
pop
repnz
sub
add
add
(bad)
(bad)
(bad)
jmp
or
pop
mov
mov
aas
clc
repz
fdiv
mov
jno
(bad)
(bad)
(bad)
dec
enter
adc
adc
xor
lock
jo
fsub
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
dec
mov
mov
pusha
jge
int3
push
cmp
fst
mov
pop
(bad)
xchg
(bad)
mov
push
cmp
add
jno
sub
add
push
out
cdq
dec
call
ret
aaa
(bad)
(bad)
call
stos
sbb
not
xor
je
ret
std
add
sbb
daa
(bad)
push
les
jmp
lods
in
push
mov
mov
push
nop
rcl
or
les
(bad)
push
pop
popf
push
mov
lods
mov
cmp
lock
imul
cmc
lea
shl
mov
fs
data16
in
mov
push
lds
clc
dec
push
mov
inc
xor
out
out
push
mov
inc
inc
mov
(bad)
jg
sti
pusha
sub
movs
pusha
pop
loop
or
adc
jnp
bound
sahf
lds
(bad)
(bad)
dec
pop
mov
retf
cmps
loope
mov
adc
cmps
adc
dec
fld
out
mov
xchg
mov
(bad)
jl
mov
ror
xchg
enter
sub
imul
ins
imul
mov
out
cli
(bad)
call
(bad)
aam
(bad)
push
mov
mov
mov
imul
in
(bad)
(bad)
(bad)
(bad)
fyl2x
adc
inc
in
and
jle
aaa
ins
mov
push
movs
lea
jmp
or
imul
enter
jmp
dec
(bad)
enter
xchg
add
les
mov
cmp
ds
jns
jl
(bad)
(bad)
(bad)
call
jno
outs
mov
lock
call
jp
pop
mov
ficomp
(bad)
jmp
xchg
sti
lahf
(bad)
(bad)
(bad)
jmp
cmp
iret
out
fld
aas
lahf
test
cld
mov
dec
pop
rcr
and
push
xor
jmp
ss
es
mov
xchg
iret
jle
push
xchg
jmp
(bad)
jg
xchg
add
and
iret
rcl
ins
pop
or
stos
inc
scas
pop
hlt
ffreep
dec
mov
ja
dec
push
mov
pop
inc
(bad)
(bad)
(bad)
push
sub
adc
lods
dec
inc
in
and
push
sub
(bad)
pop
inc
pop
std
(bad)
(bad)
(bad)
jmp
out
and
rol
arpl
push
es
int3
inc
cmp
jne
fild
mov
and
jbe
inc
mov
in
xor
inc
(bad)
(bad)
(bad)
fist
xor
mov
addps
clc
mov
mov
test
(bad)
(bad)
(bad)
dec
sub
sub
xor
movs
push
cs
jns
ja
xchg
mov
hlt
sub
mov
(bad)
push
sub
repnz
ffreep
inc
ins
clc
into
out
jl
fsub
add
pop
(bad)
(bad)
(bad)
inc
adc
popa
cwde
test
mov
lea
jle
jg
stos
movs
ss
push
test
(bad)
(bad)
inc
xchg
adc
cdq
adc
pop
add
xchg
iret
mov
imul
(bad)
jg
push
push
sti
fmul
arpl
mov
and
jmp
(bad)
jmp
imul
push
mov
lods
adc
in
cwde
pop
jo
jo
std
or
push
jne
inc
mov
iret
shl
fadd
out
in
jge
test
repz
or
push
sub
xchg
popa
mov
lods
and
(bad)
jmp
js
mov
adc
(bad)
repz
jne
lahf
int3
sbb
(bad)
jmp
pop
sbb
rol
push
or
or
xchg
popa
xchg
or
and
cmps
(bad)
inc
sub
add
js
pushf
inc
sbb
cmps
push
fdivr
paddsw
cld
cmp
(bad)
jg
mov
dec
xchg
adc
mov
data16
(bad)
(bad)
inc
imul
mov
data16
aad
push
loopne
jp
pop
pop
leave
inc
xor
mov
scas
cli
stos
stos
dec
call
(bad)
xor
xlat
lea
cld
(bad)
(bad)
mov
repnz
push
xor
ds
mov
and
fdivr
out
sar
call
mov
ror
aam
xchg
or
mov
mov
pusha
xor
(bad)
(bad)
mov
call
push
or
xchg
inc
aad
or
(bad)
(bad)
push
or
push
pop
inc
push
out
inc
cmps
jecxz
xor
stos
jb
je
dec
adc
sub
imul
(bad)
(bad)
dec
sbb
add
xchg
ja
mov
push
mov
inc
stos
add
jmp
(bad)
(bad)
jmp
and
lods
jo
add
xchg
retf
jp
sub
loope
out
ror
push
mov
jg
push
outs
cli
inc
xchg
aas
xchg
bound
(bad)
(bad)
std
or
repz
cmp
and
arpl
mov
lahf
jbe
arpl
(bad)
(bad)
dec
xchg
and
jno
and
loopne
xchg
push
xor
cmp
cld
ins
fwait
inc
and
jb
addr16
(bad)
(bad)
dec
sbb
cmp
jp
xchg
(bad)
dec
lds
out
mov
dec
inc
sbb
(bad)
(bad)
(bad)
call
pop
in
mov
dec
daa
popa
mul
mov
dec
neg
les
jg
jle
push
ins
iret
adc
stc
hlt
(bad)
outs
ret
jl
ins
push
out
adc
(bad)
(bad)
call
(bad)
pop
fwait
dec
scas
out
fs
bound
call
addr16
enter
sar
(bad)
(bad)
call
idiv
imul
ret
aaa
arpl
(bad)
jb
inc
jnp
add
xor
push
loop
add
push
fidiv
push
test
gs
(bad)
(bad)
(bad)
mov
xchg
xor
cwde
loope
jnp
cwde
dec
in
mov
test
scas
inc
pop
push
xor
lods
dec
push
je
xor
in
pop
lods
add
xor
out
retf
ret
scas
(bad)
jb
(bad)
(bad)
(bad)
(bad)
jg
mov
cmp
ins
daa
mov
movs
push
les
mov
stos
add
mov
sar
cld
dec
psrlq
je
and
inc
rcr
and
push
int
mov
(bad)
(bad)
(bad)
mov
arpl
sub
mov
push
pop
dec
dec
idiv
cld
jle
outs
cmps
test
cdq
or
dec
lock
xor
sub
and
mov
test
(bad)
dec
adc
jle
jle
stos
mov
jmp
in
push
(bad)
(bad)
(bad)
jmp
pushf
jle
sbb
push
imul
add
xchg
mov
loop
add
or
std
inc
(bad)
(bad)
(bad)
(bad)
(bad)
les
xor
lods
or
pop
ret
jecxz
ret
(bad)
mov
and
dec
dec
(bad)
(bad)
(bad)
inc
cwde
in
add
cmp
fcmovbe
push
and
lods
push
and
xlat
mov
add
push
mov
idiv
jle
cmp
in
lahf
(bad)
fdivr
mov
icebp
xchg
shl
inc
aas
sub
mov
push
(bad)
std
movs
sahf
mov
pop
into
(bad)
cdq
sbb
sahf
sub
(bad)
mov
xchg
dec
xchg
or
cmp
mov
push
imul
shr
xchg
cld
inc
pop
adc
or
shr
cmp
xchg
icebp
es
mov
(bad)
xchg
(bad)
push
pop
in
retf
cmp
mov
sar
cmp
xor
icebp
imul
(bad)
(bad)
(bad)
call
popa
rcl
arpl
les
add
shl
push
xor
jnp
jo
test
loope
(bad)
icebp
(bad)
(bad)
(bad)
call
jno
xchg
inc
inc
push
inc
stc
pop
mov
fst
or
or
sub
dec
cdq
xlat
(bad)
(bad)
inc
sti
rcl
sahf
(bad)
xor
ins
xchg
scas
stos
add
sbb
(bad)
(bad)
(bad)
(bad)
jg
push
das
ret
mov
and
fdivr
sbb
(bad)
jmp
pop
inc
scas
jmp
cmp
mov
adc
test
push
cld
(bad)
cld
xchg
int3
jp
hlt
adc
aad
cmp
test
aaa
push
(bad)
dec
in
(bad)
(bad)
(bad)
jmp
sub
clc
fdivr
fild
repnz
or
call
outs
imul
sbb
(bad)
(bad)
(bad)
call
movs
mov
pop
mov
lea
mul
adc
dec
or
call
out
fdiv
inc
sub
lea
xor
pop
xor
mov
inc
cmps
test
repz
cmp
fneni(8087
mov
int
jno
inc
add
mov
popf
push
out
(bad)
push
pop
loopne
call
jge
data16
imul
mov
jmp
(bad)
(bad)
jmp
sbb
es
xor
test
aas
(bad)
adc
mov
ins
(bad)
(bad)
(bad)
mov
jl
mov
xor
fwait
inc
sbb
rcl
push
cs
(bad)
(bad)
cmp
js
dec
add
cmp
frstor
add
mov
add
int
push
xor
shl
test
test
hlt
sub
std
jg
ins
mov
mov
adc
dec
mov
out
(bad)
fbstp
inc
adc
test
or
xchg
pop
pusha
sub
push
(bad)
call
lods
or
xchg
int
retf
cmp
ins
or
call
(bad)
(bad)
(bad)
push
cdq
add
mov
xor
mov
retf
mov
in
out
jge
retf
(bad)
pop
ins
xor
push
rcr
out
inc
ins
dec
sbb
xchg
xchg
hlt
or
cmp
fisubr
jecxz
and
push
repz
(bad)
(bad)
dec
xchg
test
(bad)
test
mov
xchg
mov
push
fwait
aas
psraw
icebp
mov
sar
(bad)
mov
scas
mov
and
xchg
les
scas
(bad)
(bad)
call
or
cmp
jge
in
xchg
(bad)
jmp
scas
rcl
clc
xchg
fisub
bswap
retf
push
bound
(bad)
(bad)
(bad)
call
mov
addr16
mov
(bad)
sbb
clc
mov
xchg
xchg
fcomip
(bad)
(bad)
cmp
dec
imul
fld
scas
sbb
leave
adc
or
jg
ret
push
inc
mov
fbstp
mov
cdq
popf
adc
pop
pusha
(bad)
jg
push
push
or
pop
sub
jnp
pushf
out
out
or
ds
mov
(bad)
call
repnz
clc
(bad)
shl
ret
and
ss
mov
ret
xchg
call
hlt
stos
sti
(bad)
(bad)
inc
arpl
xchg
mov
arpl
cmp
aaa
lods
mov
inc
dec
pop
sbb
repz
js
(bad)
(bad)
(bad)
jg
cmp
cmp
mov
push
test
cmp
push
inc
mov
cmp
(bad)
push
fnstenv
sub
hlt
das
aad
xchg
pop
data16
mov
and
jne
sub
(bad)
jmp
cmp
mov
push
push
pop
mov
adc
rcl
(bad)
loope
or
dec
push
fidiv
(bad)
(bad)
(bad)
jmp
inc
sbb
rcl
push
jno
inc
adc
xor
mov
addr16
mov
sti
sub
(bad)
cmp
sbb
jle
pop
bound
ins
in
mov
xchg
inc
in
inc
add
out
push
ds
(bad)
(bad)
cmp
pop
cdq
mov
pop
ror
out
sub
ins
in
movs
adc
aaa
or
mov
(bad)
(bad)
dec
or
ficom
or
mov
pop
aam
shr
fwait
cwde
mov
jo
and
(bad)
(bad)
call
pop
xchg
shl
ret
xchg
mov
mov
pop
add
jmp
sub
add
clc
mov
(bad)
pop
sub
shr
or
adc
mov
(bad)
(bad)
jmp
dec
add
add
loope
mul
cmp
sub
sbb
(bad)
(bad)
dec
std
sbb
pop
and
repz
mov
mov
pop
retf
adc
(bad)
(bad)
(bad)
call
lahf
sub
shr
loopne
add
pop
xor
inc
into
fwait
add
jle
(bad)
(bad)
(bad)
fbstp
inc
jmp
ins
push
stos
jnp
inc
cwde
shl
mov
inc
int3
nop
jae
repz
in
mov
cmp
inc
pop
pushf
mov
xor
test
cmp
pop
nop
inc
add
mov
(bad)
(bad)
(bad)
(bad)
fadd
sub
jmp
or
mov
sbb
xor
jge
shl
leave
rol
mov
test
cmp
int
pop
retf
jp
(bad)
(bad)
inc
data16
sub
(bad)
adc
test
cmp
(bad)
xor
cmps
out
or
repnz
enter
(bad)
(bad)
mov
ss
lahf
ret
mov
xlat
add
(bad)
clc
gs
push
mov
push
aad
test
ins
stos
dec
stos
xchg
xchg
pop
jp
xor
push
push
cli
test
(bad)
(bad)
push
not
(bad)
rol
dec
out
push
sbb
cwde
fist
fldcw
cs
inc
data16
sub
call
cmp
or
push
mov
mov
mov
jns
lock
push
and
jne
mov
lods
xchg
xchg
mov
int3
dec
loope
jmp
and
out
das
jg
sbb
cmp
(bad)
(bad)
(bad)
jmp
out
(bad)
in
leave
imul
inc
mov
sub
(bad)
shl
and
movs
pop
mov
adc
(bad)
call
out
inc
fisubr
xchg
cs
inc
inc
iret
dec
sbb
psubq
sbb
inc
arpl
and
cs
js
imul
push
into
mul
or
mov
retf
mov
ficom
add
in
mov
ds
xor
cmps
(bad)
(bad)
(bad)
(bad)
js
mov
adc
push
cmp
mov
push
int3
push
mov
fld
imul
sar
jge
push
xchg
jb
and
pop
adc
lds
es
(bad)
mov
add
dec
fstp
xchg
jne
inc
add
out
clc
call
hlt
add
adc
test
fdivr
or
js
(bad)
(bad)
(bad)
push
(bad)
dec
and
or
loope
sbb
out
pop
push
into
movs
rol
jl
push
inc
retf
shr
(bad)
(bad)
(bad)
js
sti
xor
dec
fcomi
repz
push
fnsave
sub
out
sub
(bad)
(bad)
dec
and
sbb
jmp
imul
mov
test
shr
call
(bad)
cwde
fyl2x
xor
inc
jecxz
mov
mov
adc
sub
mov
jmp
movs
mov
inc
lods
inc
dec
imul
pusha
push
mov
pop
(bad)
(bad)
(bad)
call
ins
xor
test
or
xor
pop
cmc
inc
push
lods
mov
(bad)
inc
mov
push
adc
add
cmp
push
or
sub
(bad)
(bad)
(bad)
call
sub
frstor
xor
mov
xchg
push
xor
or
(bad)
(bad)
(bad)
(bad)
jmp
inc
outs
cmc
loope
lds
mov
popa
and
push
fist
es
rcl
icebp
(bad)
mov
pop
imul
adc
push
jg
aas
cmp
push
(bad)
(bad)
fist
jnp
cmp
hlt
xor
test
sub
leave
mov
mov
(bad)
(bad)
(bad)
push
fs
fnclex
pusha
ror
or
mov
sbb
jne
sbb
push
sub
fcomip
(bad)
jl
addr16
rol
jle
pushf
outs
imul
jo
inc
mov
sbb
adc
pop
cmp
adc
push
push
jl
out
and
mov
stos
ret
(bad)
push
call
fisubr
push
inc
movs
pop
or
xor
(bad)
(bad)
(bad)
call
pop
pop
pop
adc
pop
dec
push
push
(bad)
push
(bad)
lds
es
inc
scas
shl
ret
fs
(bad)
(bad)
call
dec
ror
shl
dec
in
iret
and
inc
scas
dec
(bad)
dec
lods
cmp
shl
stos
cmc
pop
into
sahf
(bad)
in
(bad)
(bad)
jns
jg
xchg
(bad)
push
jae
scas
add
pop
adc
(bad)
cmp
sub
loopne
std
(bad)
(bad)
inc
mov
dec
jl
pop
lock
mov
stos
inc
mov
cmps
pop
jno
cmc
into
outs
jge
pop
(bad)
(bad)
(bad)
push
retf
add
fisubr
mov
push
rcl
movs
sub
dec
cdq
dec
pusha
cmp
(bad)
(bad)
(bad)
jmp
sub
int3
adc
(bad)
call
jb
dec
sub
mov
(bad)
(bad)
(bad)
push
xchg
sahf
mov
xor
aam
xlat
popa
xor
sbb
mov
(bad)
fist
outs
retf
mov
popf
mov
mov
outs
jle
jecxz
cli
pop
inc
lock
(bad)
dec
xlat
and
xor
push
(bad)
mov
sub
loope
cmp
mov
(bad)
mov
inc
sub
jl
fninit
fs
push
adc
push
push
cs
(bad)
(bad)
jmp
pusha
sbb
mov
test
out
mov
jmp
jle
sar
cli
div
lock
out
cmp
and
mov
(bad)
(bad)
mov
jns
ret
sbb
repz
pop
mov
jbe
(bad)
(bad)
(bad)
push
jne
shl
ror
push
mov
cmps
mov
cmp
(bad)
(bad)
(bad)
call
or
fdiv
sbb
jne
mov
or
cmc
cdq
(bad)
mov
pop
push
lods
sub
adc
pusha
movs
pusha
sahf
mov
inc
lods
fild
(bad)
call
pushf
mov
mov
mov
jnp
cdq
cwde
fidiv
xchg
ror
cmps
lea
dec
leave
cmps
jno
mov
lods
sub
sub
inc
cmc
addr16
bound
mov
retf
xchg
push
or
(bad)
(bad)
fidivr
fimul
ds
(bad)
xchg
and
inc
add
scas
out
add
(bad)
(bad)
(bad)
push
call
and
loop
push
inc
push
dec
retf
aad
cmp
shl
test
(bad)
(bad)
jmp
aas
pop
cmps
ror
fcom
test
aad
cmp
and
cmp
pop
jg
cmc
add
pop
jo
es
sbb
dec
inc
inc
call
ror
into
mov
sahf
jnp
or
sub
dec
aad
mov
sbb
ret
lods
jmp
add
loope
jg
or
sbb
mov
into
cmp
jmp
push
std
test
mov
jg
out
pop
ja
push
sahf
(bad)
(bad)
(bad)
push
imul
adc
enter
mov
inc
movs
je
mov
jmp
fidivr
xchg
jns
aaa
cld
push
xchg
stc
cmp
jmp
ins
jne
pop
or
(bad)
(bad)
(bad)
ffreep
push
aaa
inc
inc
clc
xchg
call
lahf
loop
push
retf
int3
repz
imul
scas
and
outs
movs
xor
les
dec
mov
aad
lock
call
ds
loop
cmps
push
sub
or
mov
cmp
jmp
cmp
sbb
or
(bad)
(bad)
(bad)
dec
add
sub
mov
mov
mov
int3
xchg
rol
jo
jb
(bad)
(bad)
(bad)
call
sub
dec
hlt
mov
xchg
cs
push
xchg
fdivr
(bad)
mov
fst
or
std
jg
cli
stos
out
mov
jmp
sar
(bad)
(bad)
(bad)
call
stc
stos
cmp
fs
mov
das
or
jne
sub
inc
(bad)
(bad)
(bad)
(bad)
mov
test
leave
pop
push
or
cmp
sub
push
xor
cmp
out
inc
fisttp
lock
mov
fisttp
aam
adc
mov
ins
push
pop
stc
or
ja
ja
loopne
sbb
imul
pop
(bad)
(bad)
jle
push
xchg
(bad)
(bad)
(bad)
dec
or
je
inc
sbb
aad
out
push
dec
les
pop
sbb
std
(bad)
(bad)
(bad)
push
sbb
cmp
sbb
sub
jnp
loopne
rcr
vcmpps
xlat
jmp
dec
mul
inc
iret
add
stos
add
(bad)
ds
adc
dec
mov
stos
pop
loopne
(bad)
cmp
shl
sub
dec
adc
cmps
out
test
fstp
and
(bad)
inc
inc
cmp
push
sbb
push
inc
inc
fdivr
(bad)
jmp
(bad)
in
push
shl
cdq
push
daa
adc
loopne
(bad)
jns
ret
xor
(bad)
dec
jg
sbb
inc
es
or
shr
xor
les
jmp
cmp
shl
test
out
or
inc
xchg
hlt
mov
sar
cdq
fcomip
add
or
dec
cmp
ja
jecxz
(bad)
(bad)
inc
sbb
movs
test
scas
cmps
cmp
stos
push
ss
leave
xchg
dec
lahf
or
cli
pop
xchg
mov
sar
movs
pop
imul
call
or
bound
pop
hlt
outs
loope
stos
mov
jns
sub
in
dec
lock
outs
(bad)
(bad)
(bad)
inc
mov
ins
rcl
sbb
adc
push
sub
push
jg
dec
or
imul
jl
inc
mov
jno
add
movs
mov
inc
lods
pop
push
(bad)
dec
(bad)
stos
sub
(bad)
sbb
jo
push
inc
mov
ds
inc
or
xor
sbb
(bad)
(bad)
call
jbe
int3
jl
adc
sbb
test
fiadd
fcomi
dec
test
jb
(bad)
(bad)
call
cmp
stos
inc
fcomip
xor
sti
push
mov
pop
rol
fwait
ret
sub
mov
(bad)
(bad)
(bad)
(bad)
inc
dec
pushf
sub
inc
bound
xchg
lods
rcl
jae
adc
test
mov
inc
and
adc
nop
(bad)
stc
popf
push
jg
xchg
rep
fidiv
mov
call
stos
xchg
cs
push
inc
cmps
and
or
retf
mov
leave
jmp
and
(bad)
inc
jp
xchg
jmp
cmp
jl
jmp
popf
push
loop
(bad)
(bad)
(bad)
inc
mov
adc
out
std
ins
xchg
pop
sub
xor
dec
fst
cmp
imul
(bad)
imul
xor
movs
out
lahf
jae
xor
test
push
test
and
out
mov
(bad)
push
push
push
mov
(bad)
(bad)
jmp
push
enter
mov
cdq
mov
or
hlt
pushf
push
mov
ins
jp
retf
dec
add
fcomip
(bad)
cmp
sub
and
mov
pop
mov
pop
or
movs
pop
stc
outs
lods
inc
pop
mov
jge
cld
or
cmps
pop
int3
inc
das
iret
clc
div
(bad)
imul
loopne
inc
add
mov
imul
cdq
sub
push
in
cli
gs
adc
pop
sbb
xchg
(bad)
jmp
adc
and
jno
(bad)
loope
jecxz
imul
jle
retf
lods
or
ret
jmp
jl
push
or
sbb
add
out
push
jns
sub
(bad)
(bad)
(bad)
push
pop
push
jbe
add
scas
or
jge
int
cdq
ret
inc
aam
adc
ins
shr
lahf
(bad)
(bad)
(bad)
call
xchg
repz
mov
imul
xor
sub
sbb
xor
inc
sbb
jmp
push
imul
daa
stos
rol
inc
mov
out
inc
test
xrelease
jmp
or
or
mov
pushf
test
cli
call
test
sbb
push
xchg
jbe
cld
das
cli
jg
dec
sbb
mov
outs
cs
mov
in
or
push
pop
imul
in
mov
xchg
inc
adc
in
and
pop
push
sbb
nop
mov
(bad)
test
loop
dec
mov
mov
push
pop
je
pusha
call
jg
jae
(bad)
xchg
and
ret
mov
test
mov
fld
(bad)
(bad)
(bad)
call
aas
popf
add
xor
sbb
ficomp
in
cmp
xchg
fadd
xchg
(bad)
(bad)
(bad)
in
cwde
jne
cmps
push
rcr
leave
pop
in
pop
movs
inc
inc
hlt
or
xor
pusha
inc
(bad)
(bad)
(bad)
fistp
fdivr
cmp
lea
dec
and
cmp
and
xchg
sar
call
and
dec
cmp
mov
push
cmp
fstp
mov
in
sub
(bad)
(bad)
(bad)
push
outs
aam
inc
sub
pop
enter
mov
jp
cmps
into
in
lea
fild
cmc
(bad)
(bad)
(bad)
push
arpl
xchg
call
mov
mov
pop
aaa
sahf
mov
and
(bad)
jmp
xor
bound
mov
xlat
jmp
dec
or
inc
mov
inc
xor
mov
or
mov
test
xchg
scas
jnp
jne
xlat
jecxz
mov
sahf
pop
inc
xor
les
sub
lahf
retf
and
retf
pop
cmc
jnp
cmp
outs
es
xchg
xchg
or
jmp
cmp
lahf
(bad)
mov
sub
and
test
(bad)
(bad)
(bad)
call
dec
lds
enter
sbb
jecxz
out
js
xor
jnp
cmp
(bad)
(bad)
push
xchg
cmp
iret
(bad)
pushf
lock
or
mov
pop
daa
movs
fsub
stos
cmp
call
mov
add
dec
ins
mov
mov
jns
lds
mov
imul
loop
stc
fmul
or
arpl
lods
dec
mov
call
(bad)
(bad)
(bad)
jmp
popa
(bad)
xchg
adc
mov
test
mov
imul
adc
mov
data16
sbb
xor
aad
and
(bad)
(bad)
cmp
pop
pop
sub
sar
fs
sub
clc
fcomp
adc
repz
ja
fadd
aaa
std
mov
adc
jo
shl
jns
stos
aad
jmp
jle
inc
(bad)
and
pop
cld
(bad)
mov
pop
mov
cli
cli
fisttp
loopne
xchg
mov
fcmovu
cmp
sbb
pop
(bad)
(bad)
jmp
shr
rcr
mov
jns
or
fisttp
loope
jg
push
mov
jp
cmp
pop
mov
mov
fdivr
push
inc
(bad)
call
mov
pop
(bad)
test
das
arpl
out
inc
sbb
xor
test
mov
test
push
push
(bad)
mov
mov
dec
outs
jl
(bad)
(bad)
(bad)
call
pop
int3
pop
jbe
pop
xchg
(bad)
lea
ret
fiadd
cmp
mov
jns
sub
ss
dec
cmp
(bad)
fcom
pushf
pop
(bad)
sbb
sbb
icebp
inc
push
dec
cmps
stos
add
inc
(bad)
jg
in
inc
jmp
jp
and
cwde
or
in
ins
pop
arpl
cld
(bad)
(bad)
call
std
xchg
and
mov
push
adc
call
dec
ror
and
out
add
ret
pop
hlt
inc
dec
cmc
in
scas
inc
(bad)
mov
fcomp
fcomip
pop
jl
clc
(bad)
(bad)
in
aas
mov
mov
pop
test
ins
add
inc
fwait
mov
adc
dec
push
push
push
pop
shl
sbb
fdiv
mov
jecxz
push
je
mov
icebp
icebp
mul
cld
idiv
mov
push
stc
hlt
mov
jl
sub
ja
(bad)
jle
(bad)
push
jno
fnsave
push
fisttp
in
sbb
fdivr
fisubr
jmp
add
jmp
(bad)
(bad)
inc
lods
pop
jne
mov
std
sti
push
mov
scas
adc
jl
mov
xchg
mov
fcomi
mov
jge
or
inc
lahf
mov
shl
pop
xchg
mov
or
push
js
xchg
adc
out
lods
cmp
loopne
mov
imul
lods
sub
(bad)
and
call
inc
mov
(bad)
adc
mov
xchg
popa
imul
mov
popa
lock
enter
xchg
push
(bad)
stc
add
call
or
retf
into
call
loope
(bad)
mov
ret
mov
jne
sbb
leave
push
call
dec
shr
enter
(bad)
mov
sahf
xor
mov
imul
cmp
(bad)
(bad)
push
int3
sahf
cmp
lahf
push
sbb
push
pushf
lea
loope
push
sbb
pop
test
jmp
shr
jle
loopne
push
cmp
mov
sbb
call
mov
(bad)
call
mov
sub
mov
ja
and
mov
jmp
dec
inc
retf
gs
clc
(bad)
(bad)
into
add
ror
fwait
je
push
xor
and
daa
(bad)
(bad)
jmp
clc
test
xchg
pushw
mov
repz
jb
adc
push
arpl
jmp
and
and
sar
mov
and
stc
mov
mov
inc
aam
call
xor
scas
sub
xchg
in
(bad)
(bad)
(bad)
push
push
mov
or
mov
jne
rcr
sar
das
outs
stc
jecxz
(bad)
(bad)
(bad)
jge
sbb
(bad)
jae
(bad)
push
pop
mov
stc
aas
cmp
(bad)
jmp
push
ja
stc
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
pop
vphadddq
ret
adc
pop
daa
es
jb
mov
cmp
(bad)
(bad)
(bad)
(bad)
jmp
pop
pop
mov
mov
sub
xor
fs
(bad)
fdiv
mov
(bad)
(bad)
(bad)
jmp
lock
ja
cmp
fisub
or
xor
mov
in
shr
(bad)
(bad)
push
hlt
mov
stos
stos
mov
push
jns
xor
pop
mov
adc
inc
sbb
(bad)
cmp
mov
(bad)
dec
mov
xor
push
es
scas
scas
mov
xor
movs
jge
into
sbb
imul
sbb
xchg
call
jns
inc
rcl
repz
and
mov
sar
(bad)
dec
cli
jl
inc
jp
lods
xlat
imul
in
mov
outs
out
in
(bad)
(bad)
in
call
jns
jl
sub
fnsetpm(287
add
push
push
test
out
inc
sub
adc
(bad)
(bad)
(bad)
jmp
jecxz
mov
xor
scas
aas
call
(bad)
mov
adc
sbb
mov
lods
stc
or
sahf
retf
(bad)
dec
(bad)
mov
and
push
ret
and
adc
ss
(bad)
mov
add
sub
loope
neg
fwait
mov
xchg
cmp
pushf
mov
and
bswap
clc
aam
rcl
add
scas
fucomi
cmc
shl
dec
inc
sbb
inc
xchg
ror
(bad)
(bad)
fstp
pop
sbb
inc
ins
ds
retf
scas
xor
idiv
pop
pop
(bad)
les
(bad)
jmp
stc
cmp
adc
les
enter
cmps
pop
cli
ss
mov
sub
add
jb
sub
movs
adc
into
(bad)
out
clc
mov
out
test
and
xchg
inc
sub
nop
lods
or
push
hlt
(bad)
(bad)
jmp
lock
pop
mov
rcr
fwait
test
inc
xor
(bad)
call
fsubp
pusha
bound
in
adc
dec
pop
sti
stos
into
xlat
out
jmp
(bad)
(bad)
cli
repz
push
(bad)
std
ret
mov
shl
outs
push
mov
je
xchg
(bad)
(bad)
mov
imul
adc
sbb
push
xor
dec
add
inc
push
or
add
(bad)
inc
in
jbe
lods
test
out
jns
daa
dec
ret
jns
jne
arpl
lahf
adc
pop
std
xchg
cli
(bad)
jmp
fdivp
jb
stc
loope
push
push
inc
xor
mov
popa
(bad)
(bad)
mov
dec
xchg
les
fst
enter
pop
fdiv
add
(bad)
(bad)
(bad)
(bad)
jge
aam
cld
push
push
imul
jne
outs
shr
out
xor
cmp
cmp
(bad)
cmp
shl
xor
sbb
push
pop
inc
std
jmp
ja
sbb
pop
fadd
enter
dec
sahf
bound
(bad)
(bad)
fsub
popa
test
cmps
jbe
adc
(bad)
dec
mov
mov
jmp
add
or
shr
push
in
fsubr
dec
loope
stos
jp
out
clc
(bad)
cld
aam
inc
cwde
rol
jnp
stos
ficomp
xchg
xchg
clc
or
(bad)
(bad)
(bad)
jmp
pop
mov
or
je
pusha
jle
xor
rcl
les
div
scas
dec
xlat
jl
stos
cmp
(bad)
(bad)
(bad)
jmp
inc
js
push
fild
in
mov
mov
jne
jo
sub
enter
sub
pop
leave
(bad)
(bad)
(bad)
(bad)
push
jmp
fild
add
ins
aam
test
imul
out
or
in
es
outs
and
bound
xchg
retf
cmp
jae
sub
daa
push
push
(bad)
(bad)
out
mov
lock
lahf
out
loop
inc
into
cmp
xchg
xor
jg
(bad)
(bad)
inc
rcl
cwde
scas
cmp
mov
dec
in
xor
inc
into
inc
push
pop
outs
sti
jle
mov
inc
dec
leave
inc
das
imul
imul
pop
popf
cmp
lock
enter
push
movs
adc
les
or
mov
ins
add
cli
(bad)
call
mov
ror
pushf
test
sub
jae
cmp
cmp
clc
(bad)
jmp
rol
sbb
adc
sub
(bad)
(bad)
push
sbb
mov
imul
mov
mov
sti
inc
and
movs
cli
call
(bad)
daa
xchg
inc
mov
add
pop
mov
and
mov
loope
cwde
retf
jmp
xor
popf
addr16
lea
mov
push
in
mov
das
lahf
mov
(bad)
(bad)
in
or
clc
(bad)
(bad)
pop
test
std
sahf
hlt
les
mov
fidiv
sar
test
call
repnz
push
imul
and
ins
jmp
or
dec
(bad)
imul
xlat
mov
(bad)
(bad)
(bad)
mov
sar
push
mov
mov
(bad)
add
mul
(bad)
fdiv
hlt
or
es
inc
pop
xchg
rcl
or
retf
inc
aaa
in
sub
call
arpl
mov
push
sahf
mov
je
xlat
stc
push
scas
fstp
in
sub
fwait
(bad)
(bad)
(bad)
jmp
mov
dec
outs
dec
lods
pop
dec
sbb
mov
fs
imul
mov
cmc
in
sbb
(bad)
(bad)
inc
mov
fwait
jmp
fistp
clc
pop
int3
mov
std
dec
into
xor
xor
jge
(bad)
(bad)
fistp
pop
rol
xchg
mov
add
push
pop
out
shl
(bad)
(bad)
(bad)
call
xlat
out
test
adc
dec
fs
pop
(bad)
fmul
shl
xor
mov
adc
cmps
pop
test
cmc
cmp
std
add
xchg
scas
lea
nop
push
pop
adc
sar
(bad)
jmp
mov
pop
(bad)
push
out
std
cli
mov
xor
dec
jge
dec
lods
test
and
push
iret
xchg
inc
or
mov
or
call
mov
mov
add
pop
cwde
sahf
or
lds
and
(bad)
(bad)
(bad)
call
int3
(bad)
loop
popf
je
adc
es
sar
xlat
xor
js
add
(bad)
(bad)
lods
push
cdq
lds
fld
adc
and
daa
scas
pop
es
fdiv
enter
pop
mov
pushf
repnz
(bad)
(bad)
call
sti
inc
push
jae
scas
mov
pop
jle
retf
sbb
(bad)
jmp
outs
shr
jnp
jp
xor
ret
add
inc
push
adc
js
push
(bad)
(bad)
(bad)
mov
or
jecxz
das
cmp
std
fiadd
fdivr
test
(bad)
(bad)
inc
(bad)
jl
push
add
test
inc
out
(bad)
std
jg
pop
fistp
jl
xchg
(bad)
in
push
xchg
inc
sbb
fld
or
je
add
mov
push
xor
dec
jbe
test
mov
sbb
add
cmps
mov
(bad)
jmp
imul
push
xchg
mov
frstor
ret
nop
in
jmp
push
(bad)
(bad)
(bad)
call
xor
sbb
adc
stos
push
lea
or
dec
dec
xchg
xchg
pop
xchg
fs
call
xchg
pusha
test
retf
mov
cli
adc
jl
fist
leave
add
push
pop
inc
std
jmp
cmp
fst
cs
pop
dec
jno
push
test
imul
xchg
sub
(bad)
mov
or
push
das
movs
add
add
xchg
dec
(bad)
(bad)
(bad)
push
outs
pop
mov
cmp
jmp
cmp
lods
loope
mov
push
mov
(bad)
(bad)
inc
rol
inc
mov
pop
cmp
xchg
daa
jbe
lods
test
(bad)
mov
clc
sbb
push
icebp
imul
push
std
(bad)
mov
into
(bad)
(bad)
(bad)
(bad)
jmp
mov
stos
push
ja
jno
mov
or
inc
std
adc
adc
mov
(bad)
(bad)
jmp
or
pop
rol
test
sbb
and
sbb
(bad)
pop
mov
stos
lods
mov
fucomi
int3
cld
(bad)
(bad)
(bad)
in
hlt
jbe
fdivrp
cmp
mov
ins
xchg
nop
pop
jl
outs
inc
ficomp
out
jnp
repz
(bad)
call
pushf
pop
xchg
push
jp
ret
mov
pop
mov
into
inc
or
cmp
out
adc
ss
je
lods
fld
and
cmovne
stc
shr
ja
(bad)
(bad)
(bad)
mov
jno
fcmovnu
push
sub
nop
ja
loopne
jp
cmp
inc
xchg
rol
clc
(bad)
push
cmp
push
aam
add
jmp
pop
arpl
inc
pop
mov
xchg
mov
dec
out
(bad)
call
movs
outs
repz
outs
pop
ins
dec
jb
iret
aaa
jge
jnp
int3
push
stos
outs
jb
(bad)
(bad)
(bad)
(bad)
jge
mov
lods
or
cmp
dec
xchg
seta
mov
xor
(bad)
dec
int
shl
jbe
sub
outs
aaa
cmp
cs
sbb
int3
ds
mov
arpl
cs
call
(bad)
inc
sub
sbb
test
scas
ss
ja
jle
sahf
sbb
fistp
clc
or
bound
or
(bad)
(bad)
jmp
mov
adc
cwde
pop
cmp
(bad)
push
inc
fcmovu
cmps
leave
(bad)
(bad)
(bad)
(bad)
mov
push
jne
loope
mov
push
cmp
sbb
and
(bad)
jmp
call
jae
das
mov
std
jle
sbb
and
sahf
ins
loope
jg
xchg
sub
adc
mov
ret
inc
fistp
or
rcr
stc
cdq
scas
sub
mov
leave
add
cwde
retf
out
das
mov
jmp
inc
mov
inc
pop
nop
cmp
dec
loopne
pop
or
fcomip
outs
ds
pusha
imul
sbb
ret
(bad)
(bad)
jmp
nop
sub
adc
mov
fstp
fsubr
or
sub
(bad)
fbstp
es
in
or
mov
and
enter
mov
mov
mov
sub
xchg
mov
pop
retf
adc
push
std
cdq
pop
in
sar
(bad)
(bad)
mov
add
in
stos
xor
(bad)
rcl
and
or
in
das
clc
call
sahf
mov
and
out
fwait
dec
fwait
sub
stos
neg
call
leave
jl
jb
inc
push
mov
cmp
test
push
xor
mov
push
mov
stc
cli
mov
repz
jle
cmp
add
pop
pop
hlt
lods
cmovs
retf
inc
aam
iret
loop
cld
ret
aas
jl
lahf
mov
dec
mov
and
sbb
push
movs
push
push
lods
dec
xlat
mov
add
push
ret
xchg
rcr
into
rcr
dec
loop
rol
mov
cmc
sub
pop
(bad)
(bad)
(bad)
jmp
shl
and
mov
cmc
(bad)
nop
and
mov
pop
inc
fwait
clc
adc
arpl
add
(bad)
fcomip
mov
push
adc
pop
dec
adc
aaa
loop
cs
clc
cld
sub
(bad)
jg
cmc
xlat
sub
ret
neg
scas
push
jo
cmp
call
(bad)
push
push
mov
mov
push
ffree
and
ins
shr
push
cli
mov
push
and
jg
jmp
cmp
std
in
rcr
push
call
xor
je
ja
fcom
jmp
stos
jge
cmp
mov
outs
mov
dec
push
add
mov
and
push
and
lds
cmp
mov
lods
outs
xchg
dec
fucomip
(bad)
(bad)
(bad)
dec
xchg
pusha
aaa
cmp
adc
and
pop
push
jp
fs
adc
test
(bad)
(bad)
(bad)
dec
xchg
sbb
push
outs
movs
scas
dec
or
adc
iret
sub
adc
jmp
das
rcl
(bad)
jmp
pop
sar
mov
ret
shl
pushf
cmps
iret
ror
jg
xor
or
(bad)
jg
(bad)
frstor
pop
jg
call
mov
dec
outs
cli
(bad)
push
(bad)
out
xchg
dec
(bad)
out
mov
rcr
fadd
adc
cmp
adc
(bad)
sahf
clc
mov
pop
lea
loopne
pushf
popf
push
cmp
push
push
cmc
sub
push
or
aaa
or
ret
dec
add
into
or
pop
push
ror
xor
retf
mov
in
sbb
scas
(bad)
(bad)
(bad)
jmp
cmp
mov
sub
(bad)
leave
inc
mov
repnz
mov
out
dec
cli
inc
das
add
sbb
dec
jb
jmp
mov
stos
lock
mov
push
pop
xchg
add
push
cwde
mov
adc
push
and
pop
(bad)
(bad)
inc
popa
mov
movs
out
xchg
stc
xchg
rcl
inc
ss
pop
rcl
sbb
jbe
cmps
daa
loope
cmp
cld
add
cli
popf
push
and
stc
retf
sahf
mov
xor
popa
mov
pop
aaa
std
inc
adc
aaa
cmp
addr16
lods
fsub
(bad)
(bad)
call
ja
xor
mov
lock
push
idiv
cmps
xchg
cli
in
mov
mov
cmc
or
sar
add
test
xor
(bad)
call
xchg
mov
sbb
pop
cmp
and
dec
mov
mov
(bad)
fdiv
inc
sbb
push
out
stos
int
sub
adc
xlat
cmp
(bad)
(bad)
(bad)
(bad)
jg
out
cmp
xchg
lahf
repz
arpl
cdq
mov
xor
sub
cmp
sbb
jns
repnz
jg
(bad)
(bad)
mov
or
ret
jg
in
out
or
mov
cld
pop
mov
jl
fimul
mov
cmp
mov
mov
in
xchg
bound
jae
jg
jmp
int3
shl
or
cmp
ficom
fs
outs
std
outs
clc
adc
inc
vrsqrtss
scas
xchg
mov
adc
(bad)
(bad)
call
pop
ja
dec
in
mov
mov
rcl
clc
hlt
daa
outs
ret
out
lock
(bad)
(bad)
(bad)
push
mov
adc
cmp
fwait
adc
add
dec
jp
or
pop
adc
cmp
(bad)
(bad)
cmp
dec
mov
jl
jno
in
jg
pop
mov
or
mov
stc
pop
mov
leave
es
lods
fwait
jp
in
sbb
ins
xchg
test
int
xor
imul
call
dec
in
dec
pop
cmp
dec
dec
mov
pop
es
mov
dec
popf
stos
sub
ins
(bad)
call
icebp
jne
xlat
push
dec
adc
xchg
sbb
es
fld
mov
jle
retf
in
push
xchg
push
xor
out
xor
adc
aas
or
adc
dec
call
ins
adc
sar
xchg
ds
mov
adc
call
mov
xrelease
(bad)
xchg
pop
jg
mov
ror
clc
clc
int3
mov
xchg
mov
(bad)
sub
outs
movs
pop
test
(bad)
(bad)
(bad)
addr16
cmp
fbld
xchg
les
test
mul
enter
push
(bad)
jmp
in
mov
or
jae
pop
jmp
push
pop
dec
jp
mov
fsub
jae
cli
outs
(bad)
dec
pop
aaa
add
stos
mov
int
mov
mov
fsubr
mov
mov
(bad)
mov
sub
je
scas
adc
into
fbstp
(bad)
out
cli
xchg
inc
or
adc
bound
ret
ins
ret
mov
(bad)
dec
jle
mov
popf
push
inc
les
push
and
ror
jmp
dec
add
(bad)
mov
mov
ja
pop
int3
mov
cs
gs
inc
xor
adc
mov
(bad)
(bad)
inc
jmp
scas
or
push
test
mov
pavgw
sbb
(bad)
(bad)
jmp
add
pushf
mov
scas
mov
mov
jp
pop
fldcw
(bad)
lahf
(bad)
(bad)
(bad)
push
mov
inc
das
push
push
mov
hlt
mov
dec
xchg
cmps
lahf
add
or
lahf
jp
ficomp
inc
pushf
push
jmp
mov
cmc
pop
fiadd
fcom
dec
fdivr
outs
clc
(bad)
call
std
sahf
adc
mov
xor
ins
in
repz
or
jmp
in
data16
cmp
xor
repz
xor
imul
xchg
push
(bad)
dec
cmp
mov
mov
pop
mov
add
mov
xchg
addr16
(bad)
(bad)
jg
dec
in
push
inc
inc
adc
mov
cmps
mov
js
xchg
sahf
out
minps
jmp
(bad)
push
out
shr
adc
mov
loope
sub
mov
jb
cmp
mov
sar
rcr
jns
call
(bad)
stc
inc
push
mov
jnp
fnsave
inc
pop
adc
sar
fxch
push
(bad)
(bad)
(bad)
(bad)
mov
xchg
dec
(bad)
aad
and
fs
jb
or
pop
loope
xchg
push
xor
movs
xor
(bad)
lock
aad
out
add
rol
in
sbb
xor
or
sub
pop
mov
(bad)
out
or
(bad)
push
sahf
shl
dec
addr16
mul
pusha
sbb
mov
and
ret
mov
mov
mov
jecxz
jo
int
int3
add
push
cmp
mov
in
mov
mov
mov
jmp
sub
inc
add
pop
fstp
fwait
xchg
sub
mov
fild
push
hlt
and
pop
mov
(bad)
(bad)
jmp
sub
icebp
ret
pop
fmul
mov
outs
and
cmp
and
sar
jb
or
(bad)
div
add
inc
pop
(bad)
(bad)
jmp
or
inc
mov
inc
jle
jbe
pop
inc
push
inc
(bad)
(bad)
(bad)
jmp
fwait
int3
aam
pop
push
pop
ins
dec
xor
push
popa
cdq
stos
or
loope
sub
mov
std
outs
ficomp
(bad)
call
mov
mov
inc
out
mov
sub
into
pop
and
push
(bad)
(bad)
(bad)
call
stos
sti
iret
aad
outs
arpl
mov
ret
push
dec
nop
lds
(bad)
(bad)
(bad)
push
sub
cmp
xchg
sub
call
xor
js
adc
rcr
fld
(bad)
(bad)
(bad)
(bad)
call
mov
aaa
jae
and
cmp
mov
popa
push
int
iret
cmp
mov
cmc
(bad)
(bad)
(bad)
push
mov
xor
xchg
xchg
retf
jmp
mov
mov
push
mov
inc
outs
inc
mov
inc
call
in
sahf
cwde
fsubp
add
mov
push
icebp
(bad)
(bad)
push
cmp
nop
sahf
mov
mov
nop
xchg
sbb
inc
cs
sub
fldlg2
jb
(bad)
(bad)
(bad)
fild
dec
push
rol
pop
mov
sub
adc
dec
test
loope
(bad)
(bad)
call
jb
(bad)
sbb
mov
jno
add
je
addr16
out
fs
mul
mov
(bad)
(bad)
cmp
sbb
xchg
(bad)
sub
and
pushf
inc
jns
sub
movs
mov
leave
loop
outs
clc
ja
outs
icebp
aad
jb
and
movs
enter
inc
fwait
sub
in
xchg
(bad)
(bad)
dec
jmp
stos
sar
clc
xchg
ret
adc
mov
retf
xchg
rcr
adc
sahf
mov
js
jb
shl
(bad)
(bad)
call
dec
cs
mov
jmp
cli
sbb
add
sbb
mov
(bad)
les
push
call
(bad)
dec
hlt
rcl
scas
mov
aaa
sbb
in
aad
(bad)
data16
or
sbb
sar
js
or
es
cld
(bad)
dec
mov
pushf
jno
mov
xor
(bad)
aas
mov
les
bound
sar
aam
mov
(bad)
call
fcmovbe
(bad)
das
cmp
sbb
inc
mov
mov
cmc
sbb
inc
jge
mov
push
ror
inc
(bad)
(bad)
jmp
mov
std
ja
in
xlat
and
sar
clc
aam
push
pop
(bad)
(bad)
(bad)
(bad)
cld
adc
dec
fucomip
das
nop
pop
mov
dec
neg
repz
cmp
mov
add
(bad)
(bad)
dec
shr
mov
mov
loop
mov
repz
int3
ds
sbb
leave
mov
push
(bad)
(bad)
push
mov
es
ds
pop
clc
sbb
push
sub
(bad)
(bad)
push
xor
pusha
xchg
or
mov
push
sub
lock
ror
bound
cmp
sbb
fs
sub
call
adc
fbstp
retf
std
pop
sbb
jle
mov
and
xor
fldenv
(bad)
jl
loop
dec
ja
out
push
ret
add
popf
jbe
out
xchg
repnz
pop
pop
ret
xchg
mov
inc
or
dec
jne
jo
loopne
pushf
cmp
stos
jmp
fild
scas
jp
pop
aam
mov
cdq
int
push
das
ret
test
(bad)
inc
mov
popf
push
sub
jnp
push
mov
inc
jg
sbb
xor
(bad)
(bad)
call
lods
scas
pop
and
out
cmps
imul
push
push
cmps
inc
(bad)
sbb
pop
add
das
loope
(bad)
jmp
cld
xchg
push
ins
fdivr
scas
mov
xchg
cmp
bound
xchg
(bad)
(bad)
(bad)
call
fld
inc
in
lods
cmp
xchg
inc
pop
sub
mov
lods
ret
aas
mov
(bad)
(bad)
(bad)
inc
inc
out
cmp
mov
scas
(bad)
lods
dec
lea
cs
popf
mov
(bad)
(bad)
call
dec
(bad)
icebp
cmc
cmp
aaa
icebp
add
outs
xchg
jb
imul
jmp
adc
sub
fs
sbb
popf
jb
cmps
adc
push
lahf
std
ins
test
and
sahf
cmp
(bad)
(bad)
dec
addr16
into
fbld
xlat
ror
js
out
add
pop
mov
(bad)
call
ins
and
dec
pop
imul
xchg
jno
cmps
add
mov
sub
aas
xor
(bad)
(bad)
(bad)
jp
ror
jge
or
mov
test
in
sbb
out
int3
jno
test
pop
std
(bad)
inc
iret
ins
mov
mov
outs
jmp
sub
lock
(bad)
call
lahf
push
les
xchg
mov
stc
and
scas
pop
and
or
jecxz
cmc
push
(bad)
add
ins
sub
mov
(bad)
(bad)
(bad)
(bad)
pop
sbb
scas
das
jne
jns
jns
xor
cmps
imul
push
mov
in
dec
call
jmp
or
repz
push
sbb
pop
mov
sub
test
sub
jbe
out
test
xchg
sub
popf
xlat
fucom
ds
ret
(bad)
(bad)
jmp
popf
sbb
aaa
cmp
call
push
(bad)
out
mov
cdq
push
xchg
or
stos
mov
pop
inc
jb
push
cmp
(bad)
fsub
out
movs
lahf
outs
call
(bad)
fcomip
cmps
shr
in
adc
xor
in
imul
unpcklps
dec
outs
enter
ja
cdq
pop
sub
arpl
xor
xor
pop
sbb
das
sar
out
adc
mov
cmp
or
out
loopne
dec
adc
(bad)
(bad)
(bad)
call
add
pop
fcmovnu
or
push
or
cmp
xchg
cdq
(bad)
mov
inc
inc
repnz
(bad)
(bad)
jg
lea
mov
xor
mov
xor
xor
nop
mov
jmp
(bad)
jns
cli
test
mov
dec
fnsave
(bad)
(bad)
(bad)
(bad)
in
jge
lods
scas
repnz
pushf
mov
pop
dec
out
sub
adc
cmps
popa
daa
mov
in
sahf
(bad)
(bad)
(bad)
jmp
cdq
ret
jno
enter
pop
xchg
add
jnp
retf
pusha
fstp
cmp
mov
test
(bad)
(bad)
(bad)
(bad)
jb
mov
cld
push
cli
out
movs
mov
je
jmp
jp
jns
sbb
mov
xlat
scas
sbb
dec
cmp
test
mov
push
rcl
ret
(bad)
(bad)
(bad)
call
pop
xlat
test
repz
xchg
dec
or
jno
(bad)
movs
inc
mov
(bad)
jmp
pop
jg
aam
aam
aam
test
iret
(bad)
or
(bad)
loop
mov
jle
push
cli
cli
pop
aam
xchg
retf
sub
lds
cmps
pop
rol
(bad)
(bad)
mov
mov
or
or
(bad)
rol
arpl
pop
pop
out
fisubr
mov
sub
fs
mov
rcr
call
adc
(bad)
jle
push
mov
cmp
bound
push
and
pop
add
mov
xor
dec
sub
js
adc
jl
ds
shr
push
and
(bad)
(bad)
call
add
inc
loopne
mov
pop
inc
add
mov
fcmovu
jmp
daa
(bad)
(bad)
dec
lock
bound
rcr
(bad)
mov
add
into
retf
jb
mov
(bad)
(bad)
jmp
movs
sahf
xchg
pop
jb
and
int3
test
adc
mov
mov
jmp
(bad)
call
and
addr16
dec
pushf
pushf
mov
dec
xchg
xchg
xchg
sub
pop
lock
dec
push
pop
mov
xchg
(bad)
call
dec
out
push
stc
sbb
push
or
daa
sbb
sahf
inc
cmps
mov
(bad)
(bad)
(bad)
push
mov
push
sub
dec
jge
(bad)
scas
jl
test
jle
or
mov
(bad)
jmp
cmps
mov
xor
js
movs
fst
inc
out
sahf
dec
sti
daa
imul
test
(bad)
(bad)
(bad)
call
ja
iret
or
cmp
fsub
out
gs
cwde
mov
stos
sbb
loop
test
(bad)
(bad)
(bad)
dec
push
push
jno
hlt
sar
hlt
dec
dec
scas
xlat
sub
out
(bad)
adc
mov
(bad)
fcomip
call
stos
push
fild
mov
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
jne
pop
ss
repnz
jae
mov
call
(bad)
push
adc
add
out
mov
mov
out
ret
out
je
pop
scas
pop
lahf
sbb
or
(bad)
out
inc
imul
inc
retf
cmp
(bad)
push
(bad)
dec
nop
jne
enter
(bad)
pushf
push
fwait
shl
xor
pop
mov
aam
(bad)
inc
sub
daa
mov
adc
in
in
call
and
cmp
sti
loope
push
dec
leave
icebp
stos
push
mov
test
xchg
jo
mov
(bad)
(bad)
inc
retf
in
mov
jmp
in
jo
and
xchg
or
jle
xchg
sbb
ss
push
push
mul
(bad)
fcomip
iret
hlt
cwde
mov
fdiv
add
fwait
mov
shl
out
or
(bad)
call
adc
(bad)
rcl
popf
mov
mov
mov
mov
mov
(bad)
cmp
(bad)
jns
fs
cmc
jge
xchg
xchg
int
(bad)
imul
jne
jp
push
sbb
(bad)
(bad)
inc
fsub
sbb
mov
push
vmovups
mov
xchg
inc
sub
mov
fnstcw
sbb
pop
icebp
(bad)
jg
ror
add
pop
enter
(bad)
popf
ins
lods
test
sbb
(bad)
jmp
inc
sub
pop
xchg
pop
mov
inc
dec
retf
lea
inc
cmps
call
mov
in
xor
(bad)
(bad)
(bad)
(bad)
jmp
mov
out
minps
fstp
in
lock
mov
imul
dec
(bad)
inc
leave
into
jae
cld
pop
or
xor
fnstcw
loop
adc
push
pushf
mov
jmp
fmul
pop
jl
imul
das
inc
mov
mov
(bad)
(bad)
fisttp
xchg
mov
aaa
aam
es
xchg
inc
or
and
sub
(bad)
(bad)
jg
adc
inc
add
and
loopne
out
sub
js
mov
fst
sub
pop
mov
cmp
jnp
aaa
(bad)
xchg
call
mov
jae
stos
ja
inc
sti
push
dec
ret
es
mov
mov
jmp
sub
xchg
(bad)
(bad)
mov
test
adc
cmp
fs
jcxz
xor
mov
outs
out
mov
outs
mov
in
add
xor
xor
xchg
(bad)
mov
sub
popf
sbb
(bad)
jge
shr
in
sbb
aam
cwde
and
(bad)
jmp
das
mov
(bad)
aam
sar
cmp
inc
fild
fucom
adc
idiv
mov
(bad)
pop
outs
pusha
int
ss
stc
dec
jg
jae
lods
mov
(bad)
call
dec
xlat
inc
fcomp
push
dec
sub
sbb
push
pop
icebp
jmp
or
mov
xlat
in
jp
or
mov
movs
call
in
clc
test
mov
inc
inc
adc
movs
retf
(bad)
inc
cld
xor
inc
arpl
out
xor
aad
sahf
pop
aam
or
clc
(bad)
(bad)
(bad)
fbstp
jge
add
fwait
jp
inc
jmp
jle
aaa
(bad)
ins
jge
push
xchg
mov
sti
(bad)
(bad)
(bad)
out
pushf
rol
rol
fwait
xchg
ret
retf
push
popa
mov
sti
out
adc
and
pop
nop
das
cli
inc
ror
and
neg
mov
jle
add
mov
loope
add
cmp
(bad)
test
mov
(bad)
(bad)
mov
movs
jbe
xor
hlt
xchg
loop
xchg
leave
xchg
dec
sbb
popw
retf
cdq
les
(bad)
(bad)
mov
sbb
call
pushf
out
bound
in
cmp
(bad)
(bad)
call
mov
int
gs
movs
int
lds
or
inc
ins
mov
pop
pushf
(bad)
(bad)
jmp
pop
(bad)
je
jne
neg
dec
and
fdiv
clc
add
call
int
mov
mov
enter
icebp
dec
xor
xlat
or
or
pusha
call
(bad)
jmp
in
and
fisubr
adc
(bad)
lods
(bad)
(bad)
(bad)
(bad)
mov
sahf
popa
pop
xor
mov
retf
mov
(bad)
pop
ss
jmp
fcomip
jmp
movs
mov
jno
push
xchg
fs
es
pop
test
retf
jae
pop
(bad)
push
push
push
jne
sar
xchg
xor
jno
ds
xor
and
ja
add
adc
mov
std
cmp
adc
add
(bad)
push
lds
sub
inc
mov
mov
jmp
(bad)
aad
mov
or
shl
in
pop
outs
sbb
inc
adc
sbb
std
fs
(bad)
sub
dec
mov
dec
xor
adc
in
imul
xchg
ret
dec
mov
(bad)
(bad)
jmp
cmps
scas
mov
dec
xor
arpl
push
pop
aas
mov
mov
jmp
mov
scas
cli
(bad)
fucomip
xchg
std
sti
lock
adc
in
pop
(bad)
pusha
xchg
mov
popf
jle
into
sbb
shl
cli
call
in
lds
sub
rcr
in
or
mov
dec
inc
(bad)
(bad)
jmp
cs
pop
pop
lods
xchg
adc
in
jmp
mov
or
jns
outs
(bad)
(bad)
(bad)
push
and
pop
sub
ror
into
dec
jp
adc
jmp
fs
call
cld
or
dec
inc
fdivp
stc
lods
mov
ret
xor
aas
mov
call
pop
xor
or
repz
jo
iret
aam
hlt
retf
aaa
mov
pop
(bad)
(bad)
(bad)
inc
push
pop
test
stos
cmc
mov
mov
jmp
loop
or
fcmovb
test
(bad)
jmp
inc
pop
(bad)
mov
push
retf
adc
pusha
pop
mov
mov
gs
(bad)
dec
jg
pop
push
sahf
hlt
loopne
cmps
imul
call
sub
mov
(bad)
(bad)
push
sub
vmovhps
test
mov
repnz
and
dec
cwde
movs
push
shl
xor
pushf
outs
aaa
cmp
pop
mov
gs
popa
ret
push
lods
test
(bad)
(bad)
call
inc
mov
cmps
xor
ror
mov
mov
adc
test
pop
xchg
scas
pop
cmp
push
mov
mov
inc
pop
inc
add
sbb
(bad)
dec
push
mov
stos
cmp
enter
adc
or
adc
ret
pop
and
je
sub
pop
xor
dec
int3
icebp
(bad)
aas
jnp
pop
(bad)
in
dec
xor
add
jp
mov
pop
xor
cli
call
pop
xchg
push
(bad)
jb
push
dec
push
adc
call
sti
(bad)
call
leave
adc
and
pop
fwait
sbb
movs
xchg
mov
loopne
into
clc
pop
mov
cmp
(bad)
(bad)
(bad)
fdivp
mov
loopne
jg
stos
cli
enter
dec
sub
cmps
push
sub
jno
mov
call
push
shl
pop
js
loop
rcr
nop
test
outs
sub
(bad)
inc
outs
mov
mov
dec
jmp
imul
clc
cmp
(bad)
(bad)
dec
fbstp
add
jne
jns
sar
xor
mov
lock
cwde
inc
mov
dec
cli
scas
fld
push
into
and
dec
dec
popf
sbb
mov
pop
sub
dec
dec
and
sti
mov
(bad)
(bad)
(bad)
push
push
shl
fisttp
adc
xchg
push
xlat
movs
enter
jmp
sub
ds
(bad)
(bad)
(bad)
push
aad
or
adc
stos
xchg
add
xor
iret
ret
popa
hlt
scas
sti
(bad)
jg
(bad)
xor
in
xor
cli
jmp
(bad)
pop
xchg
inc
scas
push
je
in
stos
(bad)
(bad)
(bad)
push
mov
sahf
pop
jo
scas
sub
stc
xchg
pop
movs
pushf
push
popf
sbb
xchg
xchg
mov
fisub
(bad)
(bad)
(bad)
cmps
sbb
int3
add
in
cmps
sbb
jecxz
sub
inc
test
push
int
cmp
(bad)
(bad)
mov
inc
cmp
sub
out
imul
mov
(bad)
call
mov
xchg
dec
in
fimul
scas
cmps
outs
add
adc
out
fbld
fcomip
stos
call
jp
mov
ror
pop
dec
(bad)
mov
xchg
or
stos
(bad)
(bad)
(bad)
call
pop
lods
out
je
fidivr
push
jmp
(bad)
mov
je
in
xchg
push
inc
daa
xchg
ins
xchg
(bad)
jmp
mov
mov
daa
loopne
push
cmp
jmp
(bad)
mov
(bad)
(bad)
dec
jns
xlat
lahf
dec
push
stc
inc
stc
dec
popa
pop
(bad)
out
loop
imul
push
ffree
icebp
leave
idiv
cmp
and
mov
or
jno
(bad)
mov
js
sbb
sub
and
cmp
xchg
lea
imul
or
out
mov
cmp
mov
jmp
mov
or
out
call
jmp
enter
xor
and
push
div
add
or
xor
out
lahf
iret
std
jb
fs
push
stos
shl
xlat
loopne
inc
(bad)
jg
jmp
mov
(bad)
jge
push
xchg
(bad)
sbb
(bad)
sbb
(bad)
jmp
dec
daa
popa
mov
lock
add
mov
mov
(bad)
(bad)
jg
nop
fbstp
push
mov
pop
mov
dec
xchg
dec
mov
(bad)
(bad)
(bad)
dec
add
stos
push
xchg
outs
jo
cmp
cmps
adc
cmps
adc
and
mov
adc
mov
xor
je
popf
jb
xchg
test
(bad)
(bad)
(bad)
in
fwait
mov
cmps
(bad)
mov
mov
jbe
int3
inc
test
daa
jg
sub
push
sbb
jg
and
outs
imul
mul
adc
cdq
lds
(bad)
push
fs
jmp
xor
adc
ja
into
lahf
or
inc
dec
cmps
inc
loop
shl
jo
dec
add
dec
stos
sbb
daa
call
idiv
jmp
jns
ret
hlt
in
dec
sbb
inc
outs
sbb
mov
sar
(bad)
into
mov
push
retf
jmp
xchg
data16
retf
xchg
sbb
(bad)
mov
popa
sti
scas
jae
nop
add
int3
bound
(bad)
(bad)
jmp
push
cmps
xchg
sbb
shl
fidiv
push
xor
(bad)
(bad)
dec
lods
adc
sar
or
sub
or
icebp
cmc
hlt
cmp
cmp
(bad)
jg
call
mov
sahf
or
in
or
cmps
out
mov
dec
pop
rcr
dec
jmp
mov
fadd
aad
inc
and
cld
stos
or
fsub
into
gs
call
call
inc
inc
outs
mov
xchg
data16
call
(bad)
jmp
xor
cmp
jmp
xchg
pop
sub
(bad)
mov
adc
(bad)
(bad)
inc
stos
pop
cmps
and
pushf
inc
jmp
mov
jae
mov
push
xchg
pop
jl
dec
(bad)
(bad)
(bad)
(bad)
cmp
dec
ficomp
hlt
sbb
jno
data16
push
mov
ret
(bad)
pushf
inc
aas
mov
std
or
fidivr
jg
sbb
pop
cmps
shr
xchg
dec
mov
sub
shr
cli
jge
adc
jne
(bad)
(bad)
jmp
push
fldenv
movs
call
arpl
adc
fdivr
and
call
cmp
adc
pusha
dec
out
cwde
fild
xlat
add
aam
sar
ins
imul
(bad)
call
call
aas
cmp
out
push
add
fistp
xchg
sbb
(bad)
(bad)
(bad)
jmp
xor
mov
repz
pop
cld
push
dec
cmp
or
addr16
shl
mov
jmp
(bad)
(bad)
call
(bad)
ins
es
mov
pop
mov
add
out
sbb
add
adc
(bad)
(bad)
dec
in
cs
mov
(bad)
rcr
lea
cmp
push
push
sahf
movs
(bad)
jmp
jnp
popf
inc
int
les
dec
dec
call
(bad)
(bad)
jmp
leave
dec
and
btc
(bad)
mov
call
(bad)
jg
jne
xchg
test
add
cmp
sub
xor
adc
(bad)
(bad)
(bad)
in
mov
sbb
sub
(bad)
push
sbb
icebp
retf
sub
shl
xchg
dec
jmp
jae
mov
and
push
rcr
xor
scas
add
iret
jmp
sub
or
cmps
ficom
das
daa
ficom
push
int3
mov
cmp
(bad)
(bad)
(bad)
call
ds
not
pop
lds
into
iret
jle
stos
fadd
xor
or
jmp
(bad)
jmp
inc
int
inc
call
movs
iret
pop
(bad)
frstor
dec
xlat
arpl
mov
adc
add
ins
and
je
jg
cmp
dec
(bad)
(bad)
(bad)
jmp
adc
fwait
fwait
cmp
push
xor
stos
sub
retf
cmp
and
inc
mov
push
xor
loopne
(bad)
call
cmps
imul
int3
push
sub
jp
fidivr
sub
dec
loopne
cmp
pop
inc
jge
mov
xchg
stc
pushf
sar
dec
mov
(bad)
(bad)
jmp
cmc
push
mov
jmp
jns
jbe
mov
aaa
fidiv
retf
jo
(bad)
inc
mov
push
mov
or
pop
pop
fild
outs
jo
or
xor
cmp
scas
mov
cld
gs
sub
inc
cmps
(bad)
(bad)
(bad)
inc
into
test
adc
pushf
fwait
or
adc
aaa
movs
(bad)
call
lea
clc
(bad)
(bad)
fcomip
das
(bad)
ss
inc
add
jmp
mov
scas
xor
mov
(bad)
rol
pusha
(bad)
(bad)
(bad)
out
xchg
out
lahf
std
(bad)
push
pop
jo
sbb
mov
repnz
inc
cld
mov
cmp
sar
test
bound
jo
imul
sbb
sbb
call
jp
or
hlt
retf
push
(bad)
jmp
ins
adc
and
jmp
cli
out
mov
sahf
mov
sub
(bad)
lds
mov
sahf
sbb
mov
push
mov
cmp
fidiv
test
cdq
aaa
lds
jae
pop
jmp
ins
outs
mov
loope
pop
mov
test
inc
ss
mov
mov
mov
out
mov
pushf
sub
sbb
pop
pop
cs
(bad)
(bad)
(bad)
inc
xchg
mov
xchg
test
mov
retf
inc
(bad)
pushf
jle
aam
fisub
les
xchg
push
clc
(bad)
(bad)
dec
das
fld
lea
ds
(bad)
iret
pop
movs
std
out
mov
lods
loop
popf
adc
(bad)
push
aaa
fdivr
imul
call
adc
(bad)
pop
ins
cwde
dec
pop
cld
cwde
int3
vmovhpd
ror
test
jmp
(bad)
(bad)
(bad)
(bad)
daa
pop
mov
push
loopne
imul
and
test
inc
jp
xor
(bad)
(bad)
(bad)
jmp
(bad)
pusha
sbb
jno
push
mov
sar
pop
add
inc
or
(bad)
(bad)
mov
outs
mov
lock
jle
cli
loope
or
fimul
loopne
cmps
out
jnp
pop
mov
in
jp
adc
cld
xchg
stos
ficom
ds
mov
or
(bad)
(bad)
(bad)
cmp
push
pop
(bad)
and
xchg
into
jae
adc
imul
push
(bad)
(bad)
(bad)
jmp
add
repnz
lea
test
mov
out
dec
sbb
(bad)
(bad)
(bad)
inc
push
js
cmps
int
mov
std
(bad)
push
mov
sbb
imul
fbstp
pop
add
(bad)
(bad)
aas
test
ins
pop
adc
sar
loope
dec
dec
fist
js
sar
idiv
(bad)
jae
outs
push
ss
stos
frstor
mov
dec
enter
cmp
ret
jecxz
(bad)
(bad)
(bad)
jmp
rcr
pop
nop
jb
arpl
cmp
fwait
sbb
inc
scas
push
(bad)
mov
cmps
push
dec
fs
inc
(bad)
fcom
(bad)
(bad)
(bad)
(bad)
cmp
adc
jp
call
mov
push
adc
xchg
sbb
pop
(bad)
retf
sub
bnd
(bad)
jmp
sti
fs
icebp
ret
jecxz
jae
jae
ss
xor
xchg
ins
ds
sub
mov
ret
sbb
pop
(bad)
je
cmps
cs
push
js
cmp
add
call
push
pop
xchg
fs
psubsb
lods
mov
xchg
dec
aad
(bad)
jg
ss
dec
fucomp
pop
std
int
pop
push
jb
fld
push
mov
mov
or
dec
cdq
cmp
mov
movs
cmc
ret
clc
leave
std
mov
jmp
fisubr
(bad)
jb
daa
add
mov
not
push
(bad)
dec
lock
sbb
sub
jl
les
scas
mov
test
pop
gs
ins
and
sar
(bad)
inc
sub
daa
mov
sub
dec
push
test
clc
adc
fstp
(bad)
(bad)
(bad)
call
arpl
push
ja
adc
cmps
aas
mov
stos
jmp
inc
mov
(bad)
(bad)
push
fnstenv
mov
push
mov
jb
add
outs
cmp
or
rcl
fdivr
jb
mov
std
dec
loope
dec
cmc
fbld
push
push
stos
pop
jne
(bad)
pmaxsw
call
inc
dec
rol
movs
dec
pusha
scas
popa
stos
mov
mov
push
repz
xor
stc
add
jnp
mov
mov
or
(bad)
(bad)
jmp
xor
mov
push
sbb
xchg
sbb
pop
sub
jp
pop
ret
mov
mov
push
mov
adc
cmp
gs
or
aam
jo
or
aam
mov
je
(bad)
jmp
push
outs
mov
mov
popa
xchg
push
xor
cmp
adc
mov
mov
hlt
sti
mov
test
into
mov
mov
repz
stos
inc
test
(bad)
(bad)
inc
cdq
out
adc
mov
sti
xchg
mov
dec
iret
dec
mov
mov
call
mov
push
movs
mov
inc
xchg
not
sbb
sbb
pop
in
(bad)
jg
inc
pop
mov
addr16
aam
ins
or
xor
dec
ss
ret
sbb
sbb
mov
cmp
ret
inc
adc
xor
cmc
sbb
(bad)
(bad)
iret
sub
xchg
cli
push
cmp
dec
push
addr16
xchg
push
je
scas
pop
xor
(bad)
(bad)
jmp
sbb
xchg
cmp
pop
repz
jmp
pusha
sub
sbb
lods
push
cmp
(bad)
(bad)
(bad)
(bad)
fadd
into
cmp
xor
pop
mov
std
mov
xor
push
mov
(bad)
(bad)
(bad)
jmp
cmp
in
call
push
inc
fcomp
inc
jnp
inc
push
jo
mov
add
and
es
and
cmps
aaa
cld
ins
std
in
xor
mov
cwde
test
cs
xchg
leave
add
(bad)
(bad)
push
int3
ss
fidiv
xchg
loop
lea
mov
cld
xchg
jae
(bad)
(bad)
dec
repnz
fs
push
jne
fstp
das
pop
cmp
imul
int3
xchg
mov
outs
cli
(bad)
(bad)
cmp
aaa
pop
inc
push
add
fisttp
js
lods
push
push
sbb
cmps
loop
(bad)
(bad)
fist
and
inc
movs
ins
fiadd
sub
in
les
push
sbb
pop
or
pop
fisubr
in
ss
pop
cmp
(bad)
(bad)
push
jo
ds
scas
mov
test
and
add
xor
into
out
(bad)
(bad)
(bad)
push
add
xchg
popf
pop
loopne
push
or
test
ins
les
pop
mov
icebp
mov
(bad)
jmp
stc
mov
fld
jns
jp
xor
aad
rol
fcom
cli
(bad)
jmp
fdiv
mov
in
xchg
fnsave
xchg
adc
inc
mov
dec
(bad)
(bad)
(bad)
inc
outs
jno
sbb
dec
xchg
ficom
sti
dec
sbb
imul
inc
push
repz
lds
xor
or
mov
adc
push
adc
fbld
jmp
outs
nop
shr
inc
mov
inc
push
lods
clc
(bad)
(bad)
dec
aas
or
mov
cmp
in
repz
into
push
sub
mov
pop
xchg
fld
cmps
fdivr
mov
xchg
adc
(bad)
(bad)
in
jmp
xor
fs
(bad)
pop
jge
add
inc
sub
mov
mov
data16
(bad)
(bad)
(bad)
cmp
xor
xlat
cmps
or
(bad)
xchg
dec
jecxz
lahf
mov
push
sti
(bad)
(bad)
(bad)
dec
dec
mov
add
lods
aad
mov
outs
pop
stc
inc
pop
mov
jmp
(bad)
(bad)
(bad)
call
or
cli
fwait
js
mov
inc
adc
adc
fsub
xchg
jg
(bad)
(bad)
(bad)
mov
imul
cs
int
xor
loop
or
cmp
cwde
adc
lods
(bad)
(bad)
(bad)
out
(bad)
out
jbe
push
add
sbb
lods
xchg
xor
inc
add
lea
(bad)
(bad)
jmp
lods
dec
loopne
dec
xchg
arpl
ds
xor
out
push
fcomp
in
sub
(bad)
(bad)
(bad)
inc
xor
jle
fs
leave
push
stos
or
in
leave
icebp
imul
mov
pop
(bad)
(bad)
(bad)
push
jmp
movs
aaa
sahf
mov
(bad)
jmp
rcl
sbb
dec
jmp
(bad)
(bad)
(bad)
push
sbb
cmp
add
push
sbb
imul
lahf
fsubr
jno
cmp
scas
clc
(bad)
mov
pop
adc
adc
cmp
jae
mov
and
clc
(bad)
inc
sub
cwde
lods
push
dec
dec
nop
adc
xor
(bad)
(bad)
(bad)
mov
dec
cwde
and
retf
xchg
rcr
pop
cmp
dec
adc
nop
repz
call
cmc
(bad)
(bad)
(bad)
(bad)
mov
pop
clc
pop
sbb
das
or
sahf
sahf
popf
sahf
in
in
frstor
ss
(bad)
(bad)
(bad)
(bad)
out
fdivr
pushf
loope
jp
daa
cmp
sti
push
inc
call
int3
adc
repz
jmp
(bad)
(bad)
(bad)
(bad)
jp
mov
xchg
jl
dec
push
mov
sbb
dec
pop
test
xchg
cmp
push
pop
or
idiv
call
test
(bad)
retf
inc
dec
mov
add
addr16
stos
add
push
std
(bad)
jmp
jp
data16
pushf
mov
push
and
retf
dec
mov
push
dec
out
(bad)
(bad)
dec
imul
add
xor
sbb
ffree
lds
cmp
push
mov
(bad)
(bad)
call
push
xchg
cmps
iret
int3
in
jmp
mov
lahf
pop
xchg
fdiv
bnd
mov
sub
enter
(bad)
(bad)
(bad)
mov
push
inc
jae
xchg
ret
retf
(bad)
adc
icebp
repnz
mov
dec
and
(bad)
(bad)
(bad)
jmp
fidiv
dec
pop
cmp
and
push
mov
push
jmp
sub
or
jg
rep
fstp
hlt
jmp
iret
jge
jno
dec
sub
popa
mov
jg
dec
scas
mov
popa
arpl
fwait
adc
dec
inc
sub
popf
sbb
lock
xor
aas
pop
inc
jmp
mov
repnz
imul
test
dec
adc
lods
adc
push
mov
imul
mov
and
add
xchg
cld
loope
push
fcmovu
pop
cmc
in
jmp
pop
jns
mov
(bad)
(bad)
fcomip
mov
jge
ja
test
jmp
fdiv
pop
dec
fwait
(bad)
(bad)
push
cmps
nop
test
mov
add
stos
pop
push
aam
add
dec
xor
test
addr16
inc
mov
mov
jne
dec
(bad)
int
dec
inc
(bad)
(bad)
call
pushf
test
cmp
mov
enter
dec
xlat
add
inc
fs
call
xchg
add
xchg
add
dec
or
push
mov
movs
js
jnp
sbb
dec
loope
in
jp
mov
sub
std
out
pop
push
inc
dec
ja
jl
sub
jmp
imul
xor
mov
pop
add
mov
cmc
(bad)
(bad)
jp
inc
rcr
push
stos
data16
or
je
mov
adc
cmp
(bad)
mov
jmp
mov
xchg
dec
jb
push
pushf
pop
jl
out
je
retf
mov
jmp
test
js
push
test
mov
into
rol
and
lods
adc
fstp
nop
jmp
data16
(bad)
(bad)
(bad)
call
loope
pop
jo
add
xchg
xlat
mov
(bad)
out
add
cs
(bad)
(bad)
call
mov
lea
retf
fs
js
cmps
bnd
stc
in
test
jmp
(bad)
push
cmc
mov
xor
add
pop
adc
in
push
ret
pusha
jae
ss
sub
inc
repnz
mov
(bad)
(bad)
dec
sbb
pop
dec
sub
sbb
les
mov
pop
vpsrld
or
(bad)
(bad)
(bad)
fdiv
aam
hlt
push
cmp
loope
test
xchg
aaa
xchg
push
xchg
test
ret
sti
push
push
lea
mov
adc
(bad)
(bad)
(bad)
mov
mov
(bad)
fld
pop
or
dec
repz
div
(bad)
(bad)
(bad)
call
ret
or
shl
or
fstp
call
pop
popf
jmp
call
(bad)
call
xchg
xchg
jno
iret
and
mov
les
dec
movs
(bad)
(bad)
(bad)
inc
push
fisttp
arpl
test
pop
or
lds
pop
retf
xchg
popf
das
sbb
jecxz
outs
ja
inc
inc
ins
mov
into
push
xor
or
cmp
mov
mov
(bad)
(bad)
aas
cdq
sbb
es
xor
shl
jne
cli
mov
jp
int3
(bad)
xor
push
lods
test
hlt
mul
stc
loop
xchg
(bad)
(bad)
jmp
or
mov
push
sub
adc
adc
or
(bad)
(bad)
(bad)
call
mov
les
jns
int
sub
mov
scas
mov
test
or
cmp
xchg
inc
xchg
xor
fcmovbe
and
shl
cmp
call
add
or
inc
mov
jge
or
(bad)
(bad)
mov
add
xchg
in
stos
cmc
stos
movs
mov
xchg
xor
retf
(bad)
(bad)
(bad)
call
mov
aam
into
push
sub
jo
mov
fldcw
and
(bad)
(bad)
fcmovnu
and
(bad)
(bad)
jmp
cwde
cmp
loopne
scas
jmp
mov
push
stos
push
ficom
mov
aad
(bad)
(bad)
(bad)
dec
cmp
sar
outs
xchg
xchg
stos
pop
xor
xchg
ret
loope
inc
pop
mov
cmp
fldenv
sub
imul
retf
sbb
xchg
ins
pop
mov
clc
sahf
fldenv
call
in
xor
push
adc
jl
and
(bad)
cmp
adc
aaa
and
add
jb
(bad)
(bad)
(bad)
call
shl
xchg
sbb
xor
sbb
xor
cld
jmp
js
std
(bad)
push
addr16
addr16
push
push
push
mov
sar
cmp
repz
(bad)
(bad)
push
jae
mov
daa
es
shr
jp
call
aad
push
mov
(bad)
dec
mov
mov
cmp
xlat
fnsave
xchg
mov
stos
cmp
push
cmps
xchg
(bad)
(bad)
call
fwait
sub
cmp
imul
inc
fisubr
pop
push
push
pop
or
jb
jae
enter
jmp
je
ins
pushf
cmp
call
cmps
or
fdivr
(bad)
(bad)
call
push
daa
pop
movs
test
mov
(bad)
scas
pop
test
inc
stos
pop
adc
cmp
(bad)
sahf
scas
push
jge
ins
ins
shl
jmp
lds
inc
in
or
fdivr
push
int3
fdivr
(bad)
jg
inc
xchg
adc
jmp
xchg
scas
inc
call
(bad)
(bad)
call
cs
fsubr
repz
jb
cmp
adc
sar
sub
pushf
call
scas
mov
mov
in
dec
pop
std
push
jbe
push
pop
pop
push
add
aas
jmp
jg
mov
cmp
repnz
(bad)
(bad)
jmp
sbb
iret
fild
xchg
push
(bad)
scas
or
ss
xchg
into
(bad)
(bad)
(bad)
dec
ds
push
sub
stos
mov
lds
enter
mov
inc
xor
sbb
aad
(bad)
(bad)
push
sub
add
int
inc
xlat
scas
xlat
sub
ss
jmp
out
gs
sbb
loopne
cld
dec
xor
adc
js
jmp
sbb
es
ss
aad
jbe
je
dec
call
dec
xchg
movs
(bad)
jb
lds
fimul
ss
push
fiadd
sub
jmp
cmp
mov
retf
(bad)
stos
mov
jne
aam
or
xchg
push
jnp
sub
mov
out
cli
punpcklwd
(bad)
repz
jno
xchg
fs
and
neg
adc
(bad)
(bad)
push
cli
addr16
(bad)
mov
out
ret
inc
bound
repz
mov
ficomp
jmp
and
adc
hlt
cmp
mov
call
(bad)
(bad)
(bad)
(bad)
out
and
push
mov
idiv
adc
jmp
int
jb
mov
push
movs
and
div
xchg
icebp
sub
cdq
jmp
xlat
mov
mov
(bad)
(bad)
(bad)
fild
nop
push
jg
xchg
aam
call
pop
mov
mov
iret
(bad)
(bad)
(bad)
call
dec
fdiv
xchg
xor
in
sbb
jno
push
scas
pop
(bad)
fdivrp
pop
mov
sbb
dec
int
mov
(bad)
(bad)
push
mov
movs
adc
inc
lahf
leave
imul
shl
fsub
pop
(bad)
mov
arpl
mov
sbb
push
xor
ins
mov
gs
adc
xor
in
adc
(bad)
call
(bad)
outs
shl
mov
mov
dec
cmp
push
cmp
ins
cs
in
(bad)
(bad)
call
ss
(bad)
bound
stc
repz
push
outs
push
call
sti
add
out
clc
(bad)
(bad)
mov
int3
stos
sbb
push
daa
cmp
xor
xor
jae
or
(bad)
(bad)
push
push
cmp
mov
mov
fdivr
out
jl
lea
push
pop
in
(bad)
(bad)
(bad)
jg
xchg
mov
jno
add
jg
xchg
lds
mov
gs
jnp
(bad)
(bad)
dec
or
movs
sbb
ds
hlt
rcr
add
je
inc
mov
cwde
leave
sbb
jmp
shr
or
rcl
in
sbb
mov
jmp
push
push
inc
arpl
call
lahf
add
jmp
imul
pop
push
push
push
mov
jge
fldenv
sahf
sub
es
cdq
aaa
pop
cmps
mov
and
(bad)
jmp
or
mov
loopne
aam
loop
lods
les
xor
(bad)
(bad)
inc
push
push
mov
not
push
sbb
cdq
cwde
inc
push
in
push
arpl
cmps
add
(bad)
push
ins
xor
and
imul
sbb
push
scas
cld
in
scas
jmp
cmp
(bad)
(bad)
(bad)
(bad)
ds
sub
pop
push
sub
stos
imul
fcmovu
aaa
dec
imul
inc
fdiv
push
std
(bad)
inc
mov
pop
mov
retf
icebp
add
add
mov
frstor
cmp
jmp
inc
arpl
xor
scas
sbb
retf
adc
sub
call
es
pop
cli
(bad)
(bad)
call
bound
fwait
and
add
lock
xor
scas
lahf
or
(bad)
(bad)
jmp
mov
std
prefetchw
mov
push
lea
into
fstp
ror
cmp
leave
dec
mov
ins
aam
mov
sub
in
cmps
stos
(bad)
(bad)
(bad)
jmp
push
dec
mov
arpl
push
out
stc
ins
xor
aaa
xchg
mov
cmp
mov
(bad)
(bad)
(bad)
dec
mov
jns
push
in
sti
lea
hlt
or
mov
mov
pop
mov
mov
jmp
inc
test
out
lods
mov
or
mov
das
cli
call
mul
cli
call
call
mov
sub
pop
cmc
(bad)
jmp
sti
fimul
shl
mov
cmp
sbb
jmp
mov
pop
call
dec
or
inc
(bad)
mov
test
mov
lods
pop
je
xchg
jmp
dec
push
punpckldq
fnsave
xchg
(bad)
cld
jne
call
std
fdivr
ret
mov
jmp
cmova
add
les
fld
(bad)
(bad)
std
mov
sahf
sbb
xchg
pop
xchg
icebp
int
add
adc
div
(bad)
(bad)
(bad)
call
(bad)
mov
mov
loop
(bad)
shl
inc
cmp
out
ja
xor
std
cmp
repnz
jmp
out
jg
adc
leave
std
xchg
ss
adc
adc
mov
(bad)
(bad)
(bad)
dec
dec
and
sar
(bad)
daa
addr16
mov
and
jge
pushf
shl
sub
jmp
pop
add
xchg
sbb
mov
mov
leave
cwde
adc
fdivr
das
sar
cdq
add
push
mov
adc
mov
(bad)
mov
jle
sbb
adc
arpl
pop
in
add
mov
jmp
cli
jg
jg
jle
mov
loop
mov
xchg
sahf
xchg
xchg
(bad)
(bad)
(bad)
(bad)
fmul
dec
pop
jnp
pop
mov
(bad)
shr
into
push
mov
cmp
jg
(bad)
inc
and
imul
pop
cmp
dec
fsub
outs
xchg
jl
lock
push
adc
add
mov
sahf
xor
push
adc
dec
adc
lds
or
dec
aaa
movs
pop
adc
push
jmp
pop
into
call
ret
mov
mov
sub
(bad)
jmp
adc
push
push
fisttp
leave
pop
jl
out
std
(bad)
(bad)
jg
push
jb
cmps
loope
dec
outs
mov
dec
xor
adc
jmp
inc
jbe
add
mov
mov
rcl
ins
add
mov
dec
addr16
lahf
or
inc
or
push
mov
rol
adc
loop
or
(bad)
(bad)
(bad)
mov
adc
nop
pop
or
inc
sub
pushf
stos
cli
int3
(bad)
(bad)
(bad)
dec
add
or
xor
cmp
xor
fwait
iret
out
add
cmp
jp
adc
xor
jne
xchg
imul
jno
dec
not
dec
or
(bad)
(bad)
(bad)
ficom
cwde
and
call
jecxz
rcr
adc
sahf
neg
cli
xor
fwait
(bad)
call
out
(bad)
xchg
jg
das
mov
jecxz
loopne
sbb
ss
sbb
mov
add
mov
(bad)
(bad)
jmp
push
inc
ins
mov
sbb
sbb
adc
xor
fidiv
ins
nop
loope
into
push
fwait
(bad)
(bad)
(bad)
call
dec
adc
jle
cld
jle
mov
or
retf
(bad)
lahf
push
(bad)
(bad)
(bad)
inc
mov
cmp
or
mov
pusha
movs
(bad)
out
mov
mov
sbb
fmul
add
sbb
(bad)
mov
(bad)
(bad)
(bad)
push
stos
leave
and
es
dec
or
xchg
lods
and
mov
retf
shl
jo
or
jno
jl
pushf
mov
(bad)
(bad)
push
scas
dec
push
jo
nop
cmp
fldcw
sbb
rcr
xor
(bad)
(bad)
jmp
jl
rcl
addr16
(bad)
loopne
mov
test
pop
aaa
retf
inc
mov
scas
cmps
add
cmp
push
xchg
aam
or
(bad)
(bad)
(bad)
jg
lods
push
cmp
jnp
xor
arpl
pop
iret
mov
loop
push
sub
(bad)
(bad)
jmp
std
jb
xchg
rcr
movs
enter
es
dec
add
adc
xchg
dec
xchg
xchg
daa
dec
xlat
cmp
jle
or
adc
sub
mov
repnz
fnstcw
lock
mov
jge
cdq
(bad)
(bad)
(bad)
call
pop
shl
bswap
iret
adc
jo
scas
leave
bound
loopne
scas
cli
(bad)
(bad)
sti
xor
mov
add
and
sbb
jmp
jmp
mov
hlt
hlt
je
icebp
lds
(bad)
outs
pop
mov
iret
mov
loop
(bad)
pop
push
je
call
loop
stc
push
push
mov
test
jns
das
add
stos
retf
mov
ja
xor
div
daa
mov
cmp
jmp
dec
loope
pop
test
iret
jle
cmp
fild
movs
cmp
mov
push
popa
inc
cld
inc
repz
ss
mov
(bad)
leave
jmp
(bad)
(bad)
jmp
retf
retf
mov
and
js
or
(bad)
jg
xor
aad
vcomisd
adc
sbb
adc
(bad)
(bad)
into
std
jecxz
(bad)
call
cmp
dec
shl
rcr
(bad)
jnp
cmc
or
ss
pop
or
movs
cmp
loopne
ror
push
mov
dec
(bad)
(bad)
(bad)
call
xchg
pusha
movs
cdq
fist
jne
xchg
js
inc
imul
add
rcl
inc
jle
(bad)
(bad)
(bad)
(bad)
jp
ja
sbb
mov
dec
cmp
adc
pop
sbb
(bad)
shr
sbb
(bad)
jnp
data16
outs
add
out
in
xor
out
sti
sar
mov
call
cs
mov
jl
inc
cmp
ret
sti
jno
cmps
or
or
(bad)
(bad)
(bad)
push
sub
adc
fstp
push
test
and
jp
test
(bad)
shr
xchg
inc
or
(bad)
aad
outs
std
mov
xchg
icebp
mov
(bad)
(bad)
fcomip
inc
hlt
lods
(bad)
xchg
mov
call
xor
sub
outs
(bad)
(bad)
(bad)
inc
cwde
or
outs
or
pop
cs
inc
inc
and
add
dec
and
dec
enter
mov
shl
into
cs
(bad)
and
mov
(bad)
(bad)
(bad)
call
clc
add
call
addr16
mov
mov
fisubr
inc
out
fs
out
cli
(bad)
mov
inc
scas
test
ins
dec
push
adc
jno
push
fistp
mov
inc
data16
(bad)
shr
jo
inc
movs
pop
outs
mov
sub
test
(bad)
call
adc
mov
pop
jge
fcomip
xor
sbb
dec
and
jmp
xchg
rol
je
fwait
mov
sub
enter
jmp
and
clc
mov
out
mov
cmp
in
cmc
jp
mov
jg
(bad)
(bad)
js
mov
dec
cmps
movs
cwde
vpsadbw
jae
xlat
pushf
mov
fist
(bad)
(bad)
(bad)
dec
xchg
jecxz
and
ins
out
add
out
sar
out
mov
loop
jl
bound
jmp
push
std
inc
add
jmp
enter
dec
shl
mov
addr16
inc
(bad)
(bad)
(bad)
call
inc
cmp
sub
aad
cmc
sbb
cmps
cmc
or
fstp
pop
dec
ret
clc
in
lock
fst
int
scas
aas
xchg
(bad)
enter
test
(bad)
push
in
int3
jno
and
cmp
mov
adc
and
jp
mov
mov
adc
shl
dec
fs
mov
sahf
mov
(bad)
jmp
or
movs
addr16
add
pop
push
into
push
in
xor
bound
ret
stos
cmp
or
pop
push
sbb
cmp
xor
sub
push
xchg
jge
jae
cmp
inc
cmp
inc
int
mov
sti
push
jnp
out
and
stc
add
(bad)
mov
stos
push
xchg
push
inc
outs
cmp
and
(bad)
call
push
cmp
and
sar
outs
push
loop
push
int3
cmp
mov
in
ror
pop
(bad)
(bad)
(bad)
dec
pusha
add
jl
push
dec
je
test
sub
fsubr
fs
sub
call
movs
jne
sbb
xchg
imul
inc
fisubr
and
(bad)
shr
mov
shl
cli
(bad)
call
movs
mov
jno
lds
mov
cmp
sbb
(bad)
jmp
(bad)
aad
ret
xchg
stc
in
mov
movs
arpl
es
push
lahf
(bad)
(bad)
inc
int3
add
(bad)
hlt
xor
mov
repnz
ret
or
shl
sub
dec
and
xchg
dec
movs
or
(bad)
(bad)
(bad)
call
inc
test
and
sbb
cdq
iret
mov
fisubr
pop
arpl
mov
sub
or
mov
mov
sub
(bad)
(bad)
(bad)
(bad)
inc
mov
jbe
jg
push
cwde
daa
pusha
lods
pop
cdq
push
retf
(bad)
hlt
jl
scas
into
(bad)
jmp
sub
mov
(bad)
pop
pop
xchg
dec
pusha
fisttp
sbb
(bad)
(bad)
mov
push
hlt
scas
fild
test
imul
jae
lods
shl
mov
mov
(bad)
cmp
push
or
inc
fnstsw
push
inc
sub
ret
call
push
sub
(bad)
(bad)
(bad)
call
dec
cmpxchg
retf
and
dec
and
cmp
not
add
cwde
pop
cmp
mov
cmps
xor
xchg
dec
(bad)
(bad)
call
sbb
mov
loope
sub
loopne
inc
stos
sbb
nop
inc
xlat
imul
in
(bad)
(bad)
(bad)
call
mov
out
fcmovne
stc
jmp
(bad)
out
out
ret
scas
xchg
retf
call
(bad)
(bad)
(bad)
jmp
(bad)
sbb
add
lods
inc
es
inc
dec
sub
inc
mov
jmp
cli
ret
push
or
fsub
xor
pushf
cwde
or
push
(bad)
cmp
add
sbb
leave
cmp
jl
cmps
dec
in
inc
fnstsw
(bad)
(bad)
(bad)
jmp
pop
sti
cmps
fsub
sub
mov
scas
loopne
popa
mov
and
or
mov
cmps
(bad)
ins
mov
or
(bad)
inc
jo
std
mul
inc
xchg
stos
lahf
fisttp
scas
cmc
bound
rcl
mov
jmp
int3
aas
jp
sbb
(bad)
jmp
fisubr
push
test
jb
inc
movs
mov
out
sbb
cld
sbb
and
dec
imul
icebp
(bad)
jmp
adc
je
jl
stos
cs
sahf
pushf
pop
arpl
(bad)
jmp
ins
aas
add
pop
mov
jg
xchg
sbb
(bad)
(bad)
jmp
dec
cmp
mov
dec
daa
call
loopne
xchg
or
push
stos
add
push
es
cmp
add
xlat
cmp
mov
(bad)
(bad)
call
or
ss
test
inc
sub
imul
(bad)
(bad)
(bad)
push
mov
das
pushf
xchg
loop
cld
clc
aas
jge
daa
inc
mul
out
lock
pop
(bad)
fbstp
data16
les
ja
xchg
mov
xchg
mov
jmp
mov
jecxz
add
je
icebp
fsubr
ret
(bad)
(bad)
jg
sub
js
test
scas
or
or
push
adc
dec
push
dec
(bad)
jg
repnz
pop
xchg
and
sub
aad
adc
xor
adc
adc
push
jb
sub
ror
pop
xor
movs
in
mov
mov
sub
(bad)
(bad)
fild
mov
jbe
xchg
into
in
cdq
je
iret
pop
jae
pop
mov
leave
mov
lahf
test
out
(bad)
std
inc
pusha
fild
add
arpl
call
fidiv
sub
loop
ins
ss
xchg
add
push
(bad)
(bad)
(bad)
dec
fdivr
cmp
push
test
fsubr
jb
call
movups
mov
shl
sti
(bad)
(bad)
fistp
cmp
push
cmp
lahf
test
mov
pop
jle
test
leave
lds
mov
(bad)
jmp
(bad)
xchg
jmp
cmp
fs
pop
dec
mov
push
sbb
(bad)
jmp
adc
fisubr
inc
mov
cmp
dec
lods
jmp
pop
pop
adc
dec
sub
sbb
sub
call
loop
inc
pop
or
call
test
(bad)
(bad)
dec
xchg
(bad)
test
fiadd
inc
gs
adc
jns
jb
sub
(bad)
(bad)
(bad)
cmp
lahf
fild
pop
test
dec
cwde
sub
aaa
cmp
mov
shl
dec
add
loopne
cmp
mov
(bad)
push
push
mov
mov
mov
cmp
or
stos
or
adc
inc
mov
xor
mov
pop
and
in
inc
out
imul
(bad)
jmp
dec
(bad)
push
fiadd
xchg
adc
fsub
fist
enter
inc
add
sbb
hlt
in
movs
mov
(bad)
jmp
rcl
jo
call
or
out
push
retf
fsub
xchg
(bad)
mov
xchg
pop
mov
out
(bad)
adc
ret
lods
fwait
iret
adc
inc
pop
(bad)
(bad)
(bad)
aas
sub
adc
sti
xor
dec
xor
int3
popf
aaa
mov
inc
sub
outs
movs
push
pop
sar
xchg
sahf
retf
out
fcom
(bad)
(bad)
(bad)
jmp
push
xchg
pop
popf
mov
hlt
call
mov
mov
fnstenv
cmc
push
fdivp
dec
cmp
test
push
mov
(bad)
(bad)
call
dec
push
push
mov
dec
sbb
not
mov
sti
jb
(bad)
(bad)
(bad)
jmp
test
jmp
arpl
(bad)
mov
loope
mov
sub
pop
out
cli
(bad)
(bad)
(bad)
(bad)
cli
dec
pusha
mov
pop
xor
mov
and
hlt
jo
je
ss
jle
stos
mov
adc
icebp
(bad)
call
rcpps
(bad)
iret
addr16
bound
cmp
daa
jns
out
mov
jecxz
push
imul
add
ror
mov
mov
cmc
ret
mov
mov
xor
pop
xchg
jbe
repnz
mov
retf
in
hlt
ret
sti
fistp
(bad)
(bad)
sti
mov
inc
lock
adc
jbe
loope
int3
adc
sub
pop
popf
and
jg
jmp
popf
fild
mov
faddp
in
jp
in
sar
pop
cmps
dec
cli
stos
fnstcw
jo
and
ins
add
lock
sub
pop
(bad)
push
sbb
or
or
repz
pop
shl
ja
(bad)
jmp
cmp
loopne
jle
test
mov
ins
mov
jg
call
fcmovbe
xchg
(bad)
and
push
sar
fsub
push
in
(bad)
enter
(bad)
(bad)
(bad)
in
add
mov
mov
sar
int3
repnz
imul
jnp
cld
(bad)
jmp
cmp
adc
xchg
pop
mov
test
outs
mov
ss
inc
pop
loop
(bad)
jg
xchg
xlat
xor
mov
das
or
icebp
dec
pop
inc
sbb
stos
adc
jg
call
push
fs
je
and
jo
xor
dec
mov
push
mov
test
stos
mov
outs
mov
loopne
scas
psadbw
fwait
test
icebp
inc
and
(bad)
cmp
jl
stc
(bad)
(bad)
(bad)
jmp
enter
inc
xchg
iret
gs
lods
mov
retf
push
out
adc
add
cmp
cmp
pop
dec
loopne
paddb
repnz
out
enter
fwait
int
xchg
(bad)
(bad)
call
fst
test
fs
dec
loope
pop
cld
sub
dec
mov
(bad)
(bad)
(bad)
call
add
pusha
adc
into
fld
xor
jne
ins
inc
xor
mov
mov
mov
xor
(bad)
(bad)
(bad)
push
scas
mov
fld
in
inc
mov
stos
inc
jmp
push
push
call
cld
jmp
leave
jmp
pusha
inc
mov
ins
cwde
inc
sub
inc
gs
ret
and
mov
(bad)
(bad)
push
sti
xor
push
sub
cmp
(bad)
cwde
pop
pop
pop
and
pop
and
xlat
sbb
(bad)
(bad)
fistp
dec
repnz
bound
add
loop
mov
icebp
mov
mov
xor
xor
stc
and
stc
jmp
and
push
movs
faddp
push
jb
ds
loopne
(bad)
(bad)
(bad)
push
xchg
xchg
xor
cmp
sbb
mov
mov
out
mov
stc
mov
dec
pushf
cmp
(bad)
repz
(bad)
(bad)
jmp
push
pop
jno
fldcw
push
and
shr
dec
mov
inc
push
jns
adc
dec
mov
sub
push
xchg
xor
or
clc
jg
jp
and
cmp
inc
add
fwait
push
clc
stos
mov
cld
jmp
lock
call
pop
in
push
push
mov
xchg
(bad)
(bad)
(bad)
(bad)
std
cwde
gs
push
sub
es
mov
jo
add
vpshufd
add
gs
jne
pusha
inc
or
data16
fwait
sub
inc
pop
adc
std
(bad)
(bad)
(bad)
inc
xchg
jae
sub
mov
add
push
imul
push
cs
ret
bound
jb
(bad)
(bad)
jmp
or
pop
(bad)
jmp
ret
mov
fadd
sbb
bound
(bad)
(bad)
push
adc
sbb
(bad)
mov
add
int
jecxz
add
ins
(bad)
(bad)
(bad)
push
pop
in
loopne
xchg
mov
lahf
xor
icebp
fdiv
jmp
inc
idiv
adc
mov
push
(bad)
lods
pop
jmp
mov
mov
cli
sub
push
rcr
or
adc
fwait
mov
jecxz
(bad)
std
addr16
pop
lahf
js
(bad)
jg
fsubrp
mov
nop
sub
cdq
cwde
(bad)
cld
ret
pushf
rol
(bad)
cld
call
ret
test
pop
mov
and
dec
test
adc
(bad)
(bad)
call
xchg
mov
pop
mov
fmul
or
jge
mov
loope
pop
jecxz
(bad)
in
sar
out
(bad)
and
mov
mov
mov
jmp
add
sub
ins
aaa
mov
repz
jle
sub
(bad)
mov
jmp
shr
and
aaa
mov
pop
cmps
not
inc
mov
fstp
jecxz
test
sub
add
xchg
or
push
jns
mov
enter
mov
or
in
fiadd
gs
aad
mov
mov
jb
out
out
(bad)
dec
xchg
sbb
inc
jp
mov
adc
inc
dec
cmc
ficomp
call
setae
pop
mov
cwde
mov
or
or
xchg
test
(bad)
(bad)
inc
ret
sub
sub
ror
push
inc
dec
jg
repnz
sar
aad
cmp
call
jecxz
adc
mov
jnp
dec
inc
jecxz
ja
mov
test
punpckhdq
push
ret
(bad)
(bad)
fistp
push
sbb
pop
jl
ds
repnz
js
std
lock
xor
inc
lods
cwde
mov
cld
fiadd
fld
or
sbb
and
cmp
(bad)
mov
adc
and
dec
iret
popa
xchg
push
stos
dec
dec
and
cld
(bad)
call
scas
loope
(bad)
adc
outs
hlt
ret
cs
jmp
aam
jl
and
push
and
js
add
(bad)
dec
je
ja
bound
sub
or
clc
(bad)
(bad)
cmp
xor
push
sbb
hlt
cmps
adc
fsubr
jmp
fcmovu
push
bound
xchg
sar
mov
push
sbb
(bad)
(bad)
call
jmp
scas
push
(bad)
xchg
fdiv
push
imul
mov
jp
push
leave
loopne
shl
jnp
(bad)
(bad)
jmp
(bad)
mov
add
stc
pop
pop
dec
mov
frstor
in
adc
aad
or
mov
or
call
imul
ds
inc
popa
popf
loopne
lds
xor
push
cmp
jmp
push
jge
imul
pop
push
jnp
fwait
call
ss
cmps
push
push
jle
(bad)
(bad)
push
inc
or
test
(bad)
loope
aaa
jge
pop
mov
(bad)
jecxz
sahf
xor
sub
adc
(bad)
call
xor
push
cdq
mov
pop
xchg
or
fdivr
add
popf
inc
fwait
iret
inc
out
adc
jp
cmp
sbb
call
adc
add
inc
dec
scas
call
gs
xchg
int
stc
cmp
lds
or
sbb
jne
xchg
sub
sti
int
(bad)
(bad)
mov
adc
pushf
add
cmp
stc
mov
out
fld
cmp
idiv
test
test
(bad)
(bad)
call
repz
arpl
xchg
or
sbb
data16
sub
mov
test
mov
sbb
cmp
dec
shl
sbb
cmp
std
ins
mov
mul
(bad)
loopne
mov
xor
jle
mov
hlt
pushf
(bad)
fst
pushf
fsubr
jmp
adc
sub
test
sbb
(bad)
(bad)
jmp
push
cmovns
push
cdq
mov
cwde
xchg
shl
outs
enter
nop
mov
fmul
cmp
(bad)
(bad)
(bad)
inc
loopne
lods
sub
sub
dec
mov
jbe
mov
push
sbb
dec
xor
(bad)
call
loopne
es
test
jg
popf
aaa
(bad)
adc
mov
or
add
sbb
(bad)
call
cld
iret
pop
loop
jle
mov
cmp
jmp
movs
pop
inc
fs
mov
(bad)
(bad)
(bad)
dec
inc
fist
mov
fcomp
bound
mov
das
push
les
cmp
es
cmp
jb
ror
push
movs
(bad)
(bad)
cmp
retf
sub
ret
imul
adc
(bad)
call
and
(bad)
mov
add
adc
or
mov
test
and
pop
inc
icebp
xchg
leave
pop
ror
adc
sbb
dec
cmp
ret
cmps
sbb
jmp
arpl
call
mov
mov
mov
inc
or
xor
sub
jle
out
jmp
mov
pop
jmp
(bad)
(bad)
cld
fldenv
xchg
or
gs
jb
lds
mov
test
das
jg
stos
daa
xor
idiv
(bad)
(bad)
(bad)
fsubr
loopne
(bad)
push
mov
pop
in
mov
push
(bad)
std
sti
fild
fimul
cmc
(bad)
inc
fdiv
pop
aam
shr
mov
xchg
sbb
mov
inc
inc
dec
sub
jmp
retf
dec
neg
hlt
and
adc
(bad)
(bad)
(bad)
(bad)
jl
mov
es
jno
inc
xor
shl
pop
or
or
pushf
push
(bad)
(bad)
call
pop
push
lds
test
xchg
push
jne
outs
jae
jnp
ja
dec
xor
lods
mov
inc
(bad)
popa
push
push
mov
(bad)
jg
inc
outs
(bad)
daa
jno
adc
jmp
mov
sbb
pop
jnp
repz
mov
shl
movs
imul
mov
sub
adc
(bad)
cmp
dec
aad
mov
fnstsw
les
lods
or
ret
movs
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
rol
pop
out
inc
sbb
bound
sbb
add
(bad)
(bad)
jmp
push
sbb
and
push
bound
arpl
ret
ins
fbld
inc
dec
test
add
fcmovnu
and
(bad)
jg
jmp
adc
sub
pop
dec
mul
(bad)
(bad)
mov
cld
push
push
outs
mov
and
sub
xchg
xchg
sub
sub
jg
loope
add
pop
xchg
iret
and
xor
mov
(bad)
retf
cmp
pop
cmc
(bad)
jmp
(bad)
mov
jae
xchg
rcl
dec
mov
mov
push
gs
(bad)
(bad)
push
stos
les
xchg
(bad)
xor
mov
lock
out
(bad)
mov
arpl
ja
(bad)
fwait
or
sbb
rol
lock
dec
stc
add
jle
lahf
loope
xchg
jecxz
jb
sbb
fdiv
std
mov
call
(bad)
test
in
pop
pop
int
xor
inc
clc
mov
mov
into
jbe
cwde
push
jl
call
(bad)
dec
(bad)
jp
nop
and
sub
mov
adc
mov
mov
scas
push
xchg
adc
(bad)
mov
arpl
xor
push
add
rcr
(bad)
and
jge
push
or
cld
movs
sbb
(bad)
pusha
shr
(bad)
(bad)
dec
bound
cmp
stos
jb
mov
dec
sar
inc
jmp
mov
or
mov
movs
sahf
xchg
xchg
xchg
sub
popf
gs
data16
mov
push
mov
pop
je
movs
dec
shl
inc
jmp
mov
(bad)
(bad)
fistp
or
cmp
jle
cmp
cmp
sti
ror
lock
push
mov
call
ret
(bad)
jmp
loopne
retf
aaa
mov
add
push
or
jmp
inc
addr16
pop
(bad)
(bad)
(bad)
(bad)
jmp
popf
daa
xchg
retf
dec
push
lock
icebp
sub
in
and
fimul
pushf
add
sub
push
sbb
cli
ret
cmp
inc
pop
push
mov
cmc
lock
std
(bad)
jmp
sti
rol
pop
inc
mov
das
popa
in
or
and
(bad)
cmp
(bad)
mov
adc
retf
pop
mov
(bad)
stos
inc
hlt
push
or
xor
pop
(bad)
(bad)
(bad)
push
movs
lock
stos
dec
mov
push
or
inc
pop
in
dec
in
jmp
jmp
(bad)
(bad)
call
add
jmp
outs
xchg
sbb
or
dec
bswap
push
sub
xor
je
nop
pop
and
jmp
inc
cmps
mov
out
mov
out
and
and
sbb
sti
push
xchg
mov
(bad)
(bad)
(bad)
call
pop
iret
add
xchg
cdq
test
inc
push
cmp
push
outs
enter
push
(bad)
(bad)
jmp
(bad)
(bad)
mov
out
es
sahf
fwait
jae
sbb
mov
retf
push
(bad)
and
(bad)
dec
sbb
pusha
sbb
xchg
int3
cs
add
sbb
(bad)
(bad)
push
xchg
shl
push
out
pop
leave
xchg
lods
push
sub
push
push
(bad)
(bad)
(bad)
dec
fidivr
sti
std
cmps
dec
bound
jge
js
js
fucomp
mov
call
fucomip
(bad)
(bad)
(bad)
(bad)
jge
mov
xchg
scas
fstp
inc
ret
push
pushf
inc
xor
mov
bnd
(bad)
(bad)
jmp
iret
in
sar
ret
das
mov
repnz
js
cmps
pop
and
push
mov
cmp
jmp
add
pushf
stos
fild
popf
mov
dec
ds
push
(bad)
pop
(bad)
(bad)
(bad)
(bad)
out
push
scas
scas
sar
inc
popa
sbb
sbb
sbb
sahf
enter
xchg
retf
cmp
(bad)
(bad)
jmp
jbe
lahf
add
mov
inc
mov
in
cmp
and
mov
cld
fdivr
(bad)
(bad)
call
call
adc
in
es
cmp
xor
sub
outs
fwait
dec
test
(bad)
(bad)
jmp
fincstp
xchg
call
adc
das
push
(bad)
push
sbb
in
xchg
inc
push
inc
xchg
sub
(bad)
(bad)
(bad)
jge
adc
shl
add
cmp
add
sub
lea
(bad)
(bad)
jmp
call
sbb
stc
sbb
or
loop
aaa
fld
fiadd
fsubr
cli
fwait
xor
jge
out
clc
lock
xor
rcl
(bad)
(bad)
clc
loopne
inc
cli
cli
adc
xchg
aam
xchg
push
ins
cld
clc
(bad)
(bad)
call
in
jecxz
xor
call
lds
mov
push
mov
adc
(bad)
jmp
adc
das
fwait
cdq
pop
xor
dec
stos
sbb
(bad)
push
or
ret
and
pushf
cmp
loope
push
stc
or
outs
fcomp
cmp
(bad)
(bad)
jmp
xchg
xor
in
div
lods
stos
cdq
jge
cmp
push
(bad)
(bad)
(bad)
jmp
xchg
shl
scas
arpl
sahf
dec
call
call
jne
in
(bad)
(bad)
(bad)
inc
cmps
in
cmp
in
cld
lock
sbb
pop
mov
cmp
adc
ins
jo
sbb
and
inc
sbb
pop
dec
jno
fs
(bad)
(bad)
inc
gs
js
push
lods
sub
arpl
jmp
(bad)
push
jno
adc
xchg
xchg
push
push
shl
jbe
ja
xchg
add
jle
push
(bad)
jmp
pop
mul
jecxz
mov
ins
add
adc
jmp
jmp
or
(bad)
jg
loopne
out
mov
retf
in
jae
std
ficomp
inc
push
sub
inc
xchg
xor
stos
ins
js
xor
cmps
ror
adc
call
das
xchg
rcl
popf
push
cmp
mov
dec
loope
(bad)
cmp
inc
in
(bad)
(bad)
(bad)
push
out
sbb
jl
popf
mov
stos
fcmove
pop
xchg
dec
mov
mov
sub
sub
(bad)
cmp
repz
fsub
sbb
push
dec
stc
hlt
div
sub
add
dec
(bad)
(bad)
mov
fxch
popa
iret
cmp
dec
and
pop
leave
test
(bad)
(bad)
push
in
fnstsw
stos
pop
fmul
push
fld
popa
setnp
pop
cmp
sub
outs
fistp
(bad)
(bad)
jmp
mov
mov
cmp
pop
rol
push
dec
jmp
adc
(bad)
(bad)
(bad)
clc
js
js
pop
bnd
bound
bound
jae
je
lock
or
retf
jg
inc
pushf
cmp
jmp
inc
(bad)
mov
into
call
fimul
jg
jbe
xchg
adc
sub
cmps
inc
mov
popa
lods
xlat
ins
inc
jno
sub
(bad)
(bad)
jmp
add
mov
inc
xlat
les
xor
sbb
pop
dec
mov
dec
lock
test
ins
mov
(bad)
mov
out
jmp
(bad)
(bad)
(bad)
(bad)
aas
sbb
(bad)
(bad)
ficom
add
push
pop
jp
lahf
jo
iret
ds
mov
(bad)
(bad)
(bad)
dec
pop
mov
rcl
inc
jl
mov
add
cmp
iret
(bad)
(bad)
(bad)
jmp
and
lahf
rcr
(bad)
retf
outs
(bad)
push
addr16
dec
pusha
data16
fwait
mov
mov
stos
cmps
shl
mov
mov
lods
sbb
push
test
mov
aad
(bad)
(bad)
inc
retf
lds
(bad)
mov
cld
int3
cmp
sbb
xor
inc
aam
fld
dec
iret
pop
stc
inc
rcr
mov
std
iret
stc
fnstcw
or
push
sbb
(bad)
jmp
clc
mov
cmp
jb
push
inc
dec
push
int
mov
mov
cmp
inc
loop
push
and
push
scas
push
push
stos
clc
xchg
repz
mov
outs
(bad)
(bad)
jg
pop
adc
scas
addr16
in
xlat
sbb
retf
ss
mul
fmul
sbb
(bad)
(bad)
jmp
test
mov
out
xchg
pop
imul
inc
retf
add
icebp
dec
mov
fbld
push
stc
mov
cld
sub
movs
loop
fcom
shl
and
sub
xor
shr
fwait
movs
leave
cmp
aaa
jb
mov
std
sub
cmps
fsubr
stos
xor
in
(bad)
enter
pusha
rcl
add
(bad)
push
cs
xor
ja
loop
sub
jmp
fild
dec
sbb
ins
addr16
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
push
arpl
imul
mov
imul
repz
dec
mov
in
or
shl
lea
inc
sbb
(bad)
js
xchg
xchg
movs
movs
or
mov
jnp
mov
mov
xor
xchg
lock
inc
dec
int3
neg
call
add
inc
(bad)
(bad)
push
jmp
xchg
mov
sub
out
jge
popf
fistp
lods
mov
(bad)
(bad)
jmp
in
dec
test
std
cmp
repnz
ret
aas
cld
xor
std
sub
out
es
(bad)
(bad)
(bad)
cmp
ds
adc
cmps
pop
cmp
jb
ins
ins
push
ds
clc
cmp
pop
pop
iret
lahf
ret
out
(bad)
inc
mov
mov
mov
sahf
ins
(bad)
jmp
stos
jl
adc
(bad)
jmp
dec
adc
dec
sub
pop
and
imul
pop
adc
or
adc
(bad)
(bad)
call
pop
xchg
push
aaa
(bad)
aas
push
push
jb
std
xchg
push
ficom
jmp
(bad)
(bad)
call
mov
mov
int3
adc
loope
sub
icebp
mov
call
loopne
(bad)
inc
jb
jle
cdq
rol
jno
cmp
inc
test
lock
icebp
out
ud0
mov
out
jmp
(bad)
ds
pop
jle
adc
(bad)
fild
xchg
or
test
jo
cmps
les
inc
mov
jnp
out
inc
(bad)
(bad)
(bad)
mov
sti
arpl
les
mov
test
sub
jge
popf
sbb
mov
sbb
cmps
push
into
xchg
loopne
jns
jl
jl
jns
add
data16
icebp
test
jmp
pop
lock
inc
ror
fnsave
pop
push
(bad)
mov
jo
xchg
xchg
loope
(bad)
(bad)
dec
cmp
jle
adc
leave
push
sahf
into
xchg
iret
and
or
enter
jge
outs
cli
jmp
xchg
mov
jo
nop
or
sub
push
or
mov
inc
sub
push
call
add
test
inc
fdivr
mov
fwait
or
movs
repz
xchg
addr16
(bad)
jne
gs
adc
and
jg
jo
sub
dec
cmp
dec
cld
mov
cmp
mov
(bad)
(bad)
call
cmc
jle
pop
ja
mov
jno
ds
sbb
inc
sub
scas
inc
dec
pop
xchg
cwde
ja
(bad)
jmp
ret
jmp
cmps
sar
cmps
retf
lock
pop
leave
push
(bad)
(bad)
(bad)
call
add
jbe
jne
in
jmp
popf
popa
lods
inc
xchg
jge
test
inc
cld
push
fcomp
es
and
and
fisttp
outs
mov
scas
fsubr
cmp
sar
sti
aas
ret
sbb
(bad)
(bad)
(bad)
dec
(bad)
jp
std
scas
ja
gs
xchg
rcl
test
hlt
dec
and
retf
mov
adc
fwait
jne
add
movs
les
xchg
lods
jg
pop
jnp
and
fs
test
cmp
(bad)
(bad)
xchg
ds
sub
pop
xchg
jge
jg
jbe
test
imul
mov
jmp
lds
popf
push
in
(bad)
mov
loopne
in
fidivr
mov
dec
(bad)
call
sahf
adc
mov
inc
(bad)
mov
aas
jl
pop
test
lock
clc
adc
(bad)
(bad)
(bad)
cmp
push
lds
jb
sub
sahf
pop
les
jp
jne
push
in
or
mov
retf
popa
out
xor
shr
xabort
sbb
mov
test
push
mov
jge
mov
inc
mov
inc
out
cmp
sub
push
addr16
sub
and
or
push
repz
xchg
inc
mov
mov
cmps
dec
mov
shl
add
(bad)
(bad)
(bad)
push
mov
pop
or
leave
xchg
jle
in
repnz
clc
jnp
add
rcr
cmps
pop
dec
mov
(bad)
inc
and
xchg
repnz
(bad)
shr
jne
cmp
das
and
cmps
(bad)
(bad)
(bad)
(bad)
js
or
stos
(bad)
cmps
fwait
loopne
stos
add
mov
or
xchg
or
mov
(bad)
(bad)
inc
pop
into
add
popf
and
mov
push
popf
xor
cmp
mov
lahf
cmp
nop
into
dec
add
pop
xchg
cmp
pop
ret
loopne
(bad)
(bad)
(bad)
(bad)
fdivr
mov
xor
int
pop
imul
mov
nop
add
jno
imul
(bad)
(bad)
call
sahf
mov
sub
xchg
pushf
and
push
sub
iret
imul
dec
(bad)
(bad)
(bad)
push
pop
scas
sbb
mov
xor
sbb
ss
inc
adc
jg
(bad)
(bad)
push
or
and
sbb
jbe
int3
stc
mov
inc
cmp
jb
jmp
dec
add
(bad)
(bad)
out
repnz
in
xchg
addr16
jle
sar
pop
cmp
add
xchg
in
(bad)
(bad)
(bad)
(bad)
jmp
pop
cmp
sbb
sbb
or
push
or
fs
or
dec
(bad)
call
sbb
inc
and
inc
push
cli
call
sahf
jns
jno
cs
(bad)
inc
xlat
arpl
mov
xchg
and
adc
mov
stos
int3
or
(bad)
(bad)
inc
(bad)
lock
pop
jp
push
sti
ss
jp
inc
ins
ins
add
ins
sbb
(bad)
(bad)
(bad)
dec
enter
sub
repz
lahf
sahf
mov
out
mov
(bad)
(bad)
jmp
xor
dec
jecxz
sub
and
push
imul
sub
inc
adc
pop
lock
std
jmp
int3
mov
and
bound
fs
fisubr
out
mov
jg
(bad)
mov
mov
test
stc
addr16
test
push
and
cdq
fst
mov
pop
add
mov
push
stc
sbb
push
dec
push
bound
jmp
sbb
fidivr
sub
xchg
xchg
cmps
and
(bad)
mov
aaa
lea
dec
movs
(bad)
iret
push
int
test
fdivr
add
or
xor
add
xchg
out
(bad)
(bad)
call
popf
mov
addr16
xchg
mov
jno
push
inc
pop
ss
aam
xor
xchg
mov
das
clc
add
pop
call
scas
in
(bad)
xchg
(bad)
inc
ffreep
adc
cli
(bad)
call
dec
mov
ins
xchg
mov
shl
test
or
adc
(bad)
(bad)
inc
enter
mov
cmc
mov
test
add
data16
fbstp
addr16
lods
(bad)
push
push
mov
adc
dec
sbb
jmp
adc
(bad)
(bad)
dec
mov
jnp
sbb
jp
adc
rcl
mov
lea
or
popf
xor
aam
fwait
sar
mov
xchg
jmp
test
les
dec
pop
mov
(bad)
inc
jb
pop
cmp
rol
std
push
adc
retf
mov
pop
sbb
xchg
cmp
adc
aaa
mov
jae
inc
in
mov
(bad)
(bad)
jmp
sbb
inc
ja
xor
ret
gs
sti
cmp
sar
leave
jne
xor
(bad)
(bad)
(bad)
call
push
dec
and
stc
fld
ins
mov
push
movs
and
push
les
shr
or
adc
mov
push
in
jae
push
data16
gs
mov
mov
popa
mov
(bad)
(bad)
call
jg
es
std
data16
jae
aas
icebp
pop
mov
rcr
sub
(bad)
mov
retf
push
sbb
mov
or
popf
inc
scas
pop
pop
dec
xchg
enter
(bad)
jmp
or
push
mov
aad
adc
add
xchg
cmps
cmp
mul
stos
(bad)
(bad)
mov
lods
shr
push
loop
xchg
bound
(bad)
pusha
fist
dec
scas
mov
retf
(bad)
(bad)
(bad)
jmp
sub
cmp
fldpi
adc
sbb
out
jbe
lea
(bad)
(bad)
(bad)
(bad)
call
movs
bound
ins
call
cmps
adc
mov
xchg
cmp
dec
sbb
cmps
sbb
(bad)
outs
clc
push
push
jnp
cdq
dec
xchg
jnp
loop
pop
mov
mov
jbe
add
(bad)
(bad)
mov
dec
cmp
inc
ror
sub
xor
cmp
xchg
mov
(bad)
mov
push
jmp
cmp
pop
mov
not
loope
add
(bad)
(bad)
jmp
and
mov
(bad)
push
cmp
fdiv
or
sbb
sub
jg
(bad)
(bad)
jmp
cs
mov
pop
adc
push
push
and
fmul
add
lahf
jne
inc
jmp
xor
fst
mov
mov
sti
test
call
mov
or
mov
sbb
pop
push
inc
out
(bad)
call
loopne
fstp
and
and
pop
and
cmp
(bad)
mov
sbb
(bad)
(bad)
(bad)
call
cmp
out
cdq
mov
dec
sar
mov
int3
jb
aad
(bad)
mov
(bad)
ja
mov
arpl
cmp
aam
mov
push
xor
xor
mov
jmp
pop
sub
leave
xchg
dec
icebp
int3
sbb
xchg
into
fwait
mov
(bad)
(bad)
call
sub
scas
enter
mov
inc
pusha
xor
add
retf
out
(bad)
(bad)
(bad)
(bad)
fist
inc
nop
into
xchg
loop
mov
xchg
mov
sbb
in
dec
pop
ss
(bad)
(bad)
(bad)
call
mov
jecxz
add
dec
jb
int
loop
pop
scas
ror
btr
(bad)
(bad)
inc
adc
mov
(bad)
add
jmp
xchg
add
xchg
popf
(bad)
(bad)
(bad)
jmp
fsub
mov
out
sbb
lock
mov
out
js
adc
add
stc
or
cmps
mov
mov
ud0
(bad)
jmp
mov
fs
mov
sahf
mov
inc
aas
(bad)
call
push
add
(bad)
fdivrp
div
mov
not
icebp
inc
(bad)
(bad)
call
fs
or
(bad)
movs
test
adc
cld
int3
jno
push
lods
fcmovu
inc
(bad)
(bad)
(bad)
call
idiv
and
inc
cld
add
cmp
xor
mov
mov
(bad)
(bad)
(bad)
push
push
mov
sbb
cdq
sbb
cmc
sub
cmc
outs
in
add
(bad)
(bad)
jmp
(bad)
lahf
xchg
mov
and
jnp
sub
pop
cmp
ins
push
dec
pop
jl
sub
repz
or
inc
ja
mov
(bad)
mov
sti
ds
loopne
(bad)
(bad)
call
push
push
push
(bad)
rcr
xchg
shl
test
dec
push
cmp
(bad)
jmp
clc
ds
cmp
mov
cs
and
inc
cmps
cmp
fld
call
jne
mov
lds
pop
ret
mov
sub
xor
mov
(bad)
call
push
inc
adc
mov
mov
mov
ds
std
mov
loope
add
test
pop
scas
mov
xchg
jbe
add
adc
(bad)
call
out
mov
adc
fcomp
adc
add
sub
loopne
xchg
fs
and
xchg
or
xchg
clc
outs
(bad)
(bad)
(bad)
push
das
push
and
sbb
mov
(bad)
ficom
mov
xchg
ror
or
call
(bad)
(bad)
(bad)
mov
jl
xchg
in
cmp
(bad)
push
jg
push
lock
mov
ds
and
aas
ffree
ja
call
fisttp
ds
mov
xchg
pop
push
mov
(bad)
(bad)
(bad)
jp
inc
fcom
add
adc
add
xor
dec
sub
cdq
call
in
retf
jae
sbb
sbb
test
sbb
retf
test
(bad)
cmp
jmp
pop
shr
push
or
popf
xchg
gs
sbb
call
(bad)
push
ds
mov
xlat
push
sub
sti
add
pop
jle
push
mov
push
mov
(bad)
(bad)
(bad)
(bad)
jg
xor
(bad)
push
xor
and
xor
mov
and
mov
push
std
jmp
xor
in
imul
xchg
ins
mov
mov
xor
pop
inc
and
jmp
arpl
addr16
inc
outs
xor
cs
(bad)
jmp
adc
xchg
(bad)
frstor
imul
cld
dec
sahf
sahf
add
lahf
jle
xchg
jb
pop
js
shl
(bad)
and
dec
cwde
and
xor
pop
ret
cdq
mov
mov
pop
adc
sar
fild
loopne
push
dec
pushf
dec
and
mov
jl
retf
stos
sub
out
clc
push
or
push
inc
adc
test
mov
jmp
sub
jmp
sub
loop
arpl
mov
and
add
mov
jmp
inc
mov
and
call
mov
add
cdq
cmp
mov
(bad)
jg
mov
ja
loopne
cmp
aaa
out
inc
(bad)
pop
out
cwde
pushf
xchg
adc
(bad)
(bad)
jmp
leave
dec
shr
mov
sub
pop
sahf
add
fwait
mov
daa
add
mov
(bad)
(bad)
(bad)
call
not
(bad)
and
xchg
std
in
xchg
jae
loopne
pop
sub
pop
pop
dec
pop
test
xor
shl
mov
dec
enter
pop
ret
and
mov
mov
(bad)
pop
mov
(bad)
(bad)
(bad)
jmp
sub
fbld
jecxz
iret
pop
mov
xor
sahf
jns
(bad)
(bad)
not
ret
(bad)
inc
cld
dec
aad
outs
dec
mul
mov
jns
dec
retf
sbb
push
rol
loope
(bad)
(bad)
(bad)
dec
xchg
aad
shl
xchg
inc
cmp
sbb
sub
aaa
mov
(bad)
jmp
xor
test
mov
nop
shl
lods
xor
bound
nop
mov
mov
(bad)
(bad)
(bad)
jg
inc
out
imul
sahf
sub
data16
daa
stc
inc
lods
push
push
outs
mov
mov
(bad)
ds
add
outs
mov
pop
or
test
mov
adc
jbe
enter
fbstp
scas
cli
inc
rcl
out
pop
adc
adc
add
xor
sub
push
mov
movs
jne
(bad)
push
mov
adc
std
popa
neg
jae
aas
mov
adc
push
call
fnstenv
xchg
inc
ss
and
test
js
fwait
scas
push
add
test
into
push
mov
cmps
xor
adc
cli
(bad)
(bad)
inc
mov
xor
inc
mov
add
sti
aad
leave
sbb
lds
sbb
(bad)
icebp
push
cmp
call
mov
mov
dec
xchg
adc
mov
push
dec
in
outs
aad
fstp
(bad)
(bad)
push
test
(bad)
or
pop
pop
add
loop
imul
mov
(bad)
(bad)
(bad)
call
je
push
std
ss
push
push
std
jmp
jo
or
xchg
out
add
scas
mov
adc
in
xchg
mov
sub
push
adc
rcl
jge
push
cmp
jmp
mov
xor
(bad)
(bad)
(bad)
push
cmp
leave
sub
jecxz
pop
dec
arpl
shl
push
ss
dec
ss
lods
jg
(bad)
(bad)
dec
sar
or
(bad)
jecxz
xor
and
add
clc
push
pop
pushf
inc
test
push
sar
sub
pop
push
jmp
dec
int3
idiv
jmp
clc
(bad)
mov
inc
je
adc
fdivr
fsub
add
(bad)
dec
mov
(bad)
(bad)
fist
mov
out
scas
add
out
push
das
xor
xor
cwde
les
call
xchg
mov
mov
or
pop
das
sbb
shl
adc
(bad)
jmp
pop
push
xchg
shl
stos
lods
inc
cs
cmc
mov
js
fwait
xchg
sub
dec
jg
icebp
mov
xchg
mov
into
loop
cmp
in
(bad)
(bad)
dec
mov
mov
rcl
std
cs
fcom
neg
leave
push
mov
inc
sub
or
xchg
(bad)
(bad)
(bad)
(bad)
stc
push
sub
cmps
add
outs
add
push
sub
aam
pop
cwde
nop
xchg
stos
das
jns
inc
mov
(bad)
(bad)
(bad)
dec
ror
daa
data16
and
in
pop
xor
ret
fadd
data16
push
inc
(bad)
(bad)
(bad)
(bad)
cmp
pop
call
shl
jl
pop
cmps
fs
ror
(bad)
call
and
iret
cdq
mov
mov
pop
ss
sbb
mov
(bad)
(bad)
inc
cmps
xor
or
jp
mov
jle
adc
test
push
jge
hlt
(bad)
inc
repnz
in
mov
push
adc
cmp
pusha
ins
add
(bad)
sbb
daa
jle
sti
cwde
push
push
push
(bad)
mov
mov
outs
add
sbb
xlat
ins
aam
scas
sub
pop
mov
xor
fst
loopne
pop
cmc
shl
fimul
push
sar
sahf
mov
ror
mov
mul
jne
mov
jl
je
imul
retf
call
jmp
retf
pop
xor
xchg
mov
mov
imul
fiadd
and
pop
cld
(bad)
jl
sbb
inc
adc
xchg
xlat
jmp
sub
cmc
jmp
xor
jbe
fsubr
adc
bswap
or
xor
sbb
mov
inc
xor
dec
mov
push
mov
call
push
ss
and
in
xchg
sahf
xor
test
iret
gs
jnp
(bad)
(bad)
(bad)
(bad)
enter
mov
mov
inc
ficom
pushf
in
jno
shr
ret
jno
inc
scas
cli
call
cmp
push
jb
ins
outs
stos
push
cmp
xchg
repnz
loopne
or
add
ins
mov
outs
jnp
jg
dec
(bad)
(bad)
(bad)
jmp
mov
dec
(bad)
fnstenv
ror
mov
xchg
(bad)
push
cld
lock
mov
stos
ins
mov
add
or
fwait
test
push
bound
(bad)
(bad)
call
xor
not
adc
mov
shr
inc
out
xchg
jg
fs
(bad)
jmp
sub
stos
jl
mov
in
cli
inc
add
push
push
(bad)
pop
icebp
(bad)
jmp
test
movs
call
loopne
js
cmp
push
imul
ss
(bad)
(bad)
(bad)
inc
shl
repz
or
adc
(bad)
es
xchg
jbe
xchg
lahf
xchg
and
outs
cmps
mov
outs
rcr
sbb
repnz
sbb
jbe
add
cmc
mov
pop
fcom
mov
(bad)
sbb
cmp
stos
(bad)
push
pop
push
xchg
aaa
mov
in
mov
nop
retf
push
and
jecxz
sbb
inc
xor
sti
leave
jnp
mov
cmp
and
lds
enter
repnz
mov
(bad)
fcmovnu
pop
shr
pop
mov
outs
mov
jns
fwait
mov
and
mov
scas
test
not
push
das
jbe
iret
cmp
(bad)
(bad)
(bad)
mov
adc
cdq
icebp
ficomp
sbb
jmp
adc
bnd
mov
(bad)
push
xor
sbb
lahf
mov
ins
jmp
mov
mov
sub
inc
and
jmp
inc
mov
mul
xor
es
mov
lods
das
add
lods
data16
dec
movs
(bad)
(bad)
out
mov
inc
ror
daa
dec
pop
sub
sbb
mov
(bad)
call
sbb
test
cli
add
inc
xor
xchg
and
adc
pusha
push
cdq
mov
test
pop
pop
add
mov
xor
ds
imul
lds
call
jnp
sub
loope
leave
movs
jnp
pop
or
mov
test
(bad)
(bad)
jmp
arpl
loopne
pop
(bad)
iret
repnz
cmp
lea
mov
sub
jne
xor
(bad)
(bad)
jmp
cs
(bad)
pop
(bad)
mov
cmp
mov
jno
pop
mov
je
fs
(bad)
(bad)
dec
xor
push
jbe
inc
aad
inc
push
push
or
and
cmps
jo
(bad)
in
push
fdiv
mov
cmp
enter
cdq
xor
cmc
call
add
(bad)
dec
sbb
stc
cmp
sub
mov
idiv
lock
or
(bad)
(bad)
(bad)
(bad)
(bad)
loopne
je
div
mov
stc
mov
(bad)
test
cmp
mov
mov
adc
retf
jb
jmp
nop
cmp
mov
out
dec
and
(bad)
(bad)
(bad)
push
push
ins
mov
mov
jns
push
retf
retf
imul
fild
pop
(bad)
(bad)
(bad)
jmp
mov
retf
mov
xchg
add
sub
mov
in
(bad)
icebp
mov
mov
out
xchg
dec
aaa
scas
scas
arpl
xchg
fcos
call
mov
retf
gs
mov
ins
inc
mov
sar
dec
inc
(bad)
(bad)
(bad)
call
adc
sub
adc
xchg
into
fmul
push
les
dec
mov
cmps
(bad)
(bad)
call
in
into
test
mov
call
rol
xchg
and
(bad)
(bad)
jmp
mov
fsubrp
xor
dec
fs
out
std
mov
sbb
aas
mov
std
inc
(bad)
push
stos
push
pushf
or
mov
rol
std
ror
(bad)
hlt
int3
(bad)
dec
(bad)
dec
push
cwde
xchg
mov
ins
add
lods
(bad)
lods
data16
(bad)
(bad)
(bad)
jmp
jne
(bad)
iret
scas
push
cmps
les
xor
mov
inc
xor
aad
add
enter
(bad)
cmp
iret
arpl
lods
fs
inc
push
fimul
fcomp
stos
mov
mov
loop
(bad)
push
std
(bad)
jmp
gs
xchg
xor
xchg
loop
inc
mov
imul
mov
xchg
sub
pop
enter
sbb
jmp
test
outs
mov
(bad)
add
icebp
call
nop
cld
cmp
(bad)
fist
or
dec
ins
je
mov
pop
push
jb
inc
pop
mov
xor
push
inc
je
sar
jmp
retf
fiadd
fptan
(bad)
les
aas
mov
pop
nop
jl
add
sbb
push
sahf
inc
cmp
fstp
and
test
inc
addr16
(bad)
(bad)
jmp
sub
xchg
movs
sbb
xchg
sbb
dec
arpl
fisub
cmp
pop
call
dec
sub
xor
jae
mov
scas
jno
pop
dec
jb
jl
(bad)
(bad)
call
mov
sbb
mov
mov
call
jno
call
push
retf
test
ss
adc
sbb
ss
xchg
mov
(bad)
call
push
xchg
inc
cli
hlt
mov
xchg
fdivr
ficom
dec
(bad)
(bad)
jmp
inc
mov
cmps
loop
bound
out
and
or
sub
mov
mov
data16
(bad)
(bad)
(bad)
jg
cmp
mov
out
out
dec
pop
mov
adc
inc
sbb
test
dec
(bad)
push
push
ja
adc
pop
sti
(bad)
push
les
loope
or
(bad)
(bad)
call
push
(bad)
jmp
arpl
mov
jnp
std
push
sar
(bad)
call
mov
or
push
xchg
fs
sar
les
punpckhdq
cmp
xchg
xchg
repnz
or
adc
shl
sbb
int3
mov
pushf
in
push
jbe
jle
(bad)
jmp
in
popf
mov
in
push
fsub
cmp
in
mov
cwde
mov
out
(bad)
(bad)
(bad)
fbstp
stc
mov
adc
pushf
jle
jmp
push
fnsave
mov
xor
mov
(bad)
jmp
or
adc
xor
sub
xor
retf
ror
rcr
cmp
xchg
jg
movs
xor
hlt
mov
pushf
lahf
pop
inc
pop
and
addr16
mov
stc
les
dec
jb
dec
sub
es
imul
les
enter
inc
sub
shl
cmp
or
mov
pop
and
inc
(bad)
sub
mov
(bad)
call
scas
hlt
cmc
jbe
jl
inc
pushf
adc
fadd
mov
fisttp
xchg
add
int
movs
mov
jmp
ss
mov
les
out
icebp
shr
ja
outs
jecxz
sub
pand
retf
out
push
(bad)
(bad)
dec
rcl
into
sub
inc
or
push
or
and
(bad)
in
(bad)
push
sub
cmp
xor
cmps
pop
ret
shl
jne
push
cmp
test
xchg
adc
cld
ret
xchg
mov
and
push
and
pop
movs
(bad)
jmp
xchg
dec
push
adc
mov
and
cld
jmp
mov
call
loope
or
adc
xor
xchg
hlt
loop
push
cmp
aaa
pop
out
(bad)
(bad)
(bad)
(bad)
cli
in
inc
adc
mov
dec
push
inc
inc
pop
xchg
cmp
fwait
retf
push
mov
(bad)
or
xlat
pop
(bad)
out
js
and
inc
mov
push
mov
iret
lods
nop
adc
xlat
lods
(bad)
(bad)
(bad)
call
and
movs
inc
cmp
lock
mov
and
mov
jns
jg
(bad)
jle
sbb
out
xchg
sbb
cmp
push
ret
push
dec
xlat
ret
hlt
(bad)
(bad)
(bad)
push
fs
frndint
jle
mov
xor
fldlg2
fnsave
adc
popa
scas
push
addr16
jmp
jmp
fldenv
push
xor
stos
pop
and
mov
xchg
adc
jl
xchg
push
cmp
mov
xchg
hlt
ins
and
pop
mov
mov
push
fdivr
enter
push
arpl
arpl
(bad)
call
clc
sbb
dec
int3
test
test
jmp
movs
adc
cmps
(bad)
(bad)
(bad)
jmp
xor
push
push
arpl
cmp
cwde
in
ret
ja
gs
pop
jge
jo
movs
mov
cli
(bad)
dec
mov
xlat
push
xor
jecxz
sti
inc
(bad)
jmp
sbb
adc
or
mov
mov
xor
repnz
jb
push
mov
inc
and
(bad)
(bad)
(bad)
inc
pop
or
push
jno
and
sbb
aaa
test
jo
leave
(bad)
(bad)
jmp
out
xchg
push
fisttp
imul
adc
dec
scas
dec
add
imul
(bad)
(bad)
(bad)
inc
shr
mov
mov
xchg
imul
in
aad
fcom
xchg
cmp
cmp
jmp
aas
jno
popf
dec
div
popa
cmp
out
lods
(bad)
adc
dec
push
popa
out
mov
dec
pop
sub
xchg
retf
ror
iret
dec
ret
(bad)
call
inc
int3
xor
pushf
mov
and
mov
jmp
mov
(bad)
cmp
ins
pop
cmps
mov
mov
in
mov
stos
sti
fucomp
aaa
ret
jg
call
mov
rol
sub
stc
fcomp
adc
mov
aam
sub
push
(bad)
call
std
mov
mov
scas
test
dec
dec
sub
dec
inc
cmp
retf
(bad)
(bad)
in
xchg
xchg
dec
pop
pop
test
sub
(bad)
test
jne
loope
xchg
mov
(bad)
(bad)
jmp
inc
clc
fmul
nop
div
jno
jnp
push
sub
fidivr
sub
jne
int
sub
jne
fcomip
fild
pop
mov
push
mov
sub
inc
dec
pop
lahf
retf
(bad)
(bad)
(bad)
jmp
sbb
push
out
pop
jb
into
push
movs
sub
jp
dec
push
(bad)
in
inc
(bad)
xchg
into
(bad)
(bad)
(bad)
inc
fidivr
retf
mov
jge
or
out
jns
dec
sbb
ret
pop
jl
(bad)
(bad)
jg
test
push
dec
inc
add
ret
jae
cmps
es
bound
push
mov
push
jne
retf
(bad)
(bad)
sti
int3
xchg
adc
or
cmp
and
fimul
mov
jbe
das
lock
push
push
jns
(bad)
sbb
out
shl
push
sub
out
dec
mov
adc
(bad)
(bad)
call
mov
fwait
mov
pop
cli
jecxz
(bad)
aas
jmp
fcom
retf
push
sti
test
(bad)
(bad)
jmp
inc
pop
ucomiss
arpl
aam
sub
and
jecxz
in
sahf
xchg
mov
(bad)
(bad)
(bad)
jmp
adc
call
or
dec
adc
dec
adc
push
stos
jb
sub
jno
cmp
dec
cmp
push
inc
enter
mov
dec
enter
mov
adc
jmp
and
mov
in
xor
mov
mov
pushf
dec
cli
push
sbb
cmp
cmps
rol
xchg
adc
ja
cmp
cdq
test
push
es
stos
sar
in
mov
repz
pushf
arpl
out
cli
push
into
pop
sub
xchg
iret
xchg
call
xchg
or
cdq
outs
(bad)
(bad)
(bad)
inc
cdq
pop
push
stos
int
sbb
push
popa
adc
lahf
cmp
dec
xor
call
push
mov
aas
sti
ja
lock
xchg
add
int3
sahf
mov
out
fsub
dec
(bad)
(bad)
(bad)
dec
sbb
shr
mov
out
adc
inc
pop
inc
and
mov
mov
xchg
add
(bad)
call
inc
das
stos
cdq
adc
(bad)
push
adc
cmp
(bad)
inc
mov
dec
dec
repnz
mov
imul
jp
or
enter
fsub
inc
aad
(bad)
dec
cmp
cmp
mov
xchg
add
xor
(bad)
(bad)
(bad)
push
data16
xor
std
xchg
lods
ds
(bad)
ror
(bad)
loopne
imul
xor
cld
(bad)
push
mov
mov
xchg
push
fs
loop
mov
jg
(bad)
dec
loopne
cmp
mov
retf
push
add
(bad)
(bad)
(bad)
call
imul
addr16
ret
in
repz
dec
jp
jno
push
(bad)
xor
test
add
ins
and
mov
dec
mov
add
fwait
cmp
sbb
dec
fwait
jp
clc
xchg
pop
sar
jmp
loop
mov
sbb
lock
push
in
inc
push
mov
(bad)
(bad)
jg
jmp
inc
xchg
cmp
neg
fs
adc
stc
imul
push
(bad)
(bad)
(bad)
(bad)
mov
mov
jb
popf
out
dec
and
pop
outs
fdivr
shl
popa
sbb
(bad)
mov
and
shr
sub
xor
mov
or
cmp
xor
aad
jmp
push
add
popa
div
cdq
iret
and
sti
xchg
(bad)
(bad)
(bad)
call
mov
jno
jmp
in
test
add
shl
in
xor
jmp
inc
outs
(bad)
(bad)
(bad)
push
fiadd
pop
ficom
or
sub
sbb
mov
(bad)
(bad)
(bad)
(bad)
mov
push
aam
adc
pop
test
inc
lea
pop
popf
pop
retf
call
or
call
xor
bound
push
mov
sbb
fnstsw
(bad)
(bad)
(bad)
push
sub
add
xchg
stos
xchg
jno
stc
fdivr
and
mov
inc
sbb
push
push
call
inc
jo
mov
ror
adc
xchg
das
or
push
push
mov
cli
pushf
fsin
stos
add
(bad)
(bad)
call
cld
sub
adc
cmp
iret
ins
cmp
add
lds
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
push
add
mov
xor
adc
test
pushf
cmp
js
clc
mov
cld
inc
mov
(bad)
in
ss
std
sub
sub
nop
add
(bad)
jmp
aad
cwde
imul
imul
loopne
enter
cld
sbb
cmp
(bad)
mov
and
test
cmp
lds
jno
sti
stc
out
jmp
or
adc
sub
xlat
(bad)
(bad)
mov
mov
dec
mov
and
cmp
xchg
(bad)
(bad)
(bad)
push
ins
scas
(bad)
xor
in
xchg
mov
jmp
imul
jo
int
call
cwde
push
test
xchg
gs
sti
adc
mov
(bad)
inc
cmps
shl
cmp
(bad)
pop
ds
xchg
(bad)
imul
(bad)
cli
xchg
inc
frstpm(287
jmp
test
(bad)
(bad)
push
mov
(bad)
popf
jnp
in
sbb
jns
jnp
shr
out
and
stos
sbb
or
icebp
sub
call
and
popf
xor
xor
adc
mov
(bad)
(bad)
(bad)
(bad)
aas
jns
xchg
mov
jmp
xchg
add
(bad)
adc
pop
inc
inc
cmp
(bad)
(bad)
(bad)
push
jne
in
mov
leave
jb
loope
mov
jbe
and
xor
pop
retf
(bad)
(bad)
(bad)
dec
outs
push
mov
icebp
add
aaa
mov
cwde
jecxz
xor
push
sbb
popf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jns
mov
sbb
lock
call
dec
popa
outs
out
push
loope
mov
mov
pop
fdiv
jle
in
and
jecxz
push
gs
addr16
sahf
shr
add
or
call
fist
ret
mov
fucomp
sbb
sub
xor
add
(bad)
push
cwde
add
in
pop
adc
cwde
mov
(bad)
(bad)
(bad)
mov
call
jmp
xchg
or
scas
mov
cmps
pop
xchg
(bad)
(bad)
call
xchg
(bad)
jne
jmp
inc
inc
inc
mov
dec
sub
or
fmul
sar
xchg
xchg
dec
push
jae
fldcw
arpl
call
jp
(bad)
sbb
into
cld
(bad)
leave
push
mov
(bad)
jg
jmp
add
retf
sbb
fdivr
mov
mov
iret
xor
hlt
sub
(bad)
(bad)
in
push
push
iret
jmp
fnstcw
and
pop
adc
(bad)
std
retfw
sbb
add
call
push
jle
jle
mov
mov
add
add
jo
xchg
xlat
mov
(bad)
(bad)
push
mov
mov
xchg
mov
xchg
push
adc
sar
loop
dec
add
or
data16
mov
aaa
pop
mov
xchg
pusha
add
(bad)
(bad)
fild
push
cli
inc
loop
xchg
xor
sbb
frstor
int3
mov
push
shr
cwde
mov
lods
loope
jbe
test
ret
sti
jp
jmp
add
inc
cs
xor
nop
cmps
xor
lahf
cmp
pop
mov
and
push
es
mov
jg
outs
loopne
sub
std
add
jmp
xchg
ror
adc
mov
cdq
cmp
adc
aam
hlt
sahf
outs
push
dec
or
sub
add
mov
xor
inc
pop
fwait
repnz
pop
jmp
jne
and
fist
(bad)
(bad)
inc
adc
xchg
out
out
dec
jne
jge
hlt
in
aad
sbb
mov
or
jmp
pusha
push
sahf
cmp
mov
cmp
jmp
jmp
sbb
aas
xchg
mov
pop
jo
mov
sti
mov
jno
jmp
jb
jge
imul
jb
jno
cmp
int
jns
add
scas
mov
inc
jo
mul
ins
fbstp
push
in
adc
pop
in
pop
popf
(bad)
(bad)
(bad)
inc
push
pop
xchg
or
sbb
jmp
adc
push
movs
xor
(bad)
(bad)
(bad)
dec
pushf
mov
fist
test
and
fnstenv
retf
cmps
inc
xchg
mov
(bad)
(bad)
(bad)
fistp
test
out
dec
mov
icebp
push
clc
jnp
scas
jle
xor
(bad)
fs
cmp
and
sub
ret
sub
ret
mov
xchg
or
inc
mov
push
xchg
jmp
jbe
js
out
xchg
sub
pop
jo
xor
clc
gs
dec
(bad)
mov
push
cwde
std
test
push
pop
cmps
pop
sub
scas
shl
jns
mov
inc
ins
xor
push
call
mov
nop
movs
ins
popa
jno
add
(bad)
call
cmp
call
int3
test
in
out
out
push
xor
add
jae
mov
hlt
(bad)
pop
dec
shr
xchg
mov
mov
inc
fs
or
(bad)
mov
jmp
out
stos
loopne
add
jp
dec
outs
fidiv
cli
(bad)
(bad)
push
scas
xor
stos
xor
dec
pop
mov
push
cmp
lods
mov
cdq
out
(bad)
(bad)
(bad)
out
xor
daa
inc
sti
mov
aas
(bad)
xor
jg
lahf
adc
gs
mov
(bad)
(bad)
(bad)
inc
daa
adc
jg
(bad)
ds
dec
cmp
adc
mov
(bad)
push
mov
jno
ins
stc
xchg
sub
mov
sub
sub
push
ret
(bad)
(bad)
call
lods
add
mov
ins
sub
mov
adc
call
mov
xchg
or
loope
(bad)
(bad)
(bad)
call
sbb
sbb
or
jns
aaa
in
jns
les
add
push
(bad)
(bad)
inc
or
dec
movs
add
fimul
xchg
in
fimul
inc
dec
dec
(bad)
jg
(bad)
mov
cmps
xchg
lods
dec
mov
push
jmp
pop
aad
retf
push
loop
(bad)
(bad)
dec
sbb
in
fwait
popf
inc
inc
xor
lods
ins
mov
mov
(bad)
jmp
mov
fucomi
mov
fdivr
in
mov
repz
sub
mov
jmp
(bad)
(bad)
out
out
cmp
(bad)
pop
mov
jp
xchg
xor
jmp
leave
and
inc
dec
xchg
rcr
pop
xchg
ret
cld
jns
sub
mov
mov
(bad)
dec
aam
gs
jl
mov
imul
cli
xor
dec
lahf
fs
das
lahf
popf
shl
jmp
xchg
hlt
js
push
xchg
hlt
ja
push
cdq
xchg
xor
sub
mov
clc
push
in
mov
repz
xchg
jge
adc
cdq
adc
add
(bad)
(bad)
dec
adc
or
xor
in
fcomp
pop
iret
arpl
cmp
(bad)
(bad)
cmps
(bad)
jecxz
fbstp
add
cmp
dec
mov
adc
xor
jne
ret
(bad)
dec
cmps
in
es
jb
out
test
imul
(bad)
pop
sar
(bad)
(bad)
inc
mov
push
and
mov
loop
ret
push
add
xchg
cmps
mov
in
jne
stos
ds
(bad)
(bad)
dec
mov
imul
movs
fimul
sub
cdq
mov
inc
(bad)
(bad)
(bad)
fist
test
ds
fmulp
sub
cmp
adc
jecxz
inc
adc
ja
(bad)
xchg
dec
mov
shl
cmps
lea
mov
imul
pop
(bad)
push
xchg
add
or
adc
and
jnp
push
(bad)
(bad)
(bad)
cmp
sbb
je
ds
leave
mov
(bad)
test
ins
xor
rep
popa
(bad)
(bad)
(bad)
push
mov
adc
movs
jns
or
inc
(bad)
into
(bad)
add
sbb
es
(bad)
(bad)
jmp
cs
fld
dec
movs
mov
mov
cld
test
pop
push
or
ins
pop
add
je
(bad)
(bad)
call
xchg
mov
jo
(bad)
ins
test
push
lds
add
lods
mov
cmp
test
xor
cmp
cdq
adc
(bad)
(bad)
(bad)
call
pushf
and
sbb
icebp
cmp
das
xlat
mov
int3
cmp
shr
cwde
jnp
in
clc
jge
fild
loopne
inc
out
cmp
ficom
lea
cs
mov
push
subps
imul
enter
out
pop
in
popf
mov
inc
inc
(bad)
(bad)
(bad)
push
adc
cdq
fldcw
pushf
cmp
xchg
aas
mov
lahf
jp
dec
cmp
mov
(bad)
sti
hlt
jecxz
in
or
jae
or
sbb
je
jae
out
mov
(bad)
inc
pop
jo
pop
sti
shr
pusha
cmp
mov
push
je
sub
pusha
(bad)
(bad)
(bad)
jmp
mov
or
mov
ror
adc
leave
add
adc
jno
(bad)
(bad)
jmp
mov
adc
ss
mov
in
xlat
sbb
aam
ret
in
jno
dec
adc
(bad)
(bad)
inc
into
add
fwait
loop
stos
stos
test
mul
xchg
cdq
cs
inc
jle
mov
sbb
sbb
push
cli
jl
(bad)
(bad)
jg
jo
hlt
sub
aam
inc
inc
xchg
add
push
push
pop
(bad)
in
(bad)
fbstp
out
outs
xlat
sbb
in
jb
je
nop
retf
int3
pushf
xchg
in
or
mov
(bad)
(bad)
(bad)
dec
lods
arpl
gs
push
arpl
cmp
stc
enter
in
in
idiv
adc
(bad)
(bad)
(bad)
inc
data16
call
inc
adc
jo
mov
test
sti
cmp
(bad)
(bad)
call
or
out
loopne
sbb
aam
call
in
xor
push
add
pop
pop
(bad)
(bad)
(bad)
jmp
pop
int
mov
ja
add
enter
pushw
ss
cdq
inc
xor
loope
cli
(bad)
(bad)
jmp
xor
add
fisttp
xchg
fild
sbb
ins
je
cmp
(bad)
(bad)
mov
mov
lds
cmc
loope
add
add
mov
test
sbb
xchg
js
in
int3
mov
movs
in
mov
(bad)
(bad)
(bad)
call
adc
in
xchg
and
daa
mov
jge
fmul
fisubr
dec
leave
(bad)
(bad)
(bad)
jmp
fist
popa
fld
mov
into
mov
gs
ins
fnsave
(bad)
push
aam
fst
imul
push
push
sbb
cmp
xchg
loopne
mov
(bad)
(bad)
(bad)
jnp
dec
pop
cmp
push
inc
pop
cmp
in
sub
inc
jns
lea
cmps
in
jb
das
cs
pop
or
or
push
inc
inc
ds
sub
pop
sbb
les
faddp
cld
ret
jg
mov
jmp
test
iret
xchg
mov
sbb
cmc
(bad)
call
sub
push
push
jae
push
xchg
jae
in
dec
test
stc
mov
jmp
retf
and
js
gs
lea
jbe
(bad)
(bad)
(bad)
inc
add
cmp
adc
and
xchg
fcmovb
pop
xchg
ins
xchg
sub
iret
cmp
loopne
ins
inc
or
mov
cmps
fs
(bad)
(bad)
(bad)
cli
mov
mov
push
sub
mov
enter
int3
mov
loopne
loop
(bad)
(bad)
inc
mov
push
push
and
inc
int3
dec
dec
jmp
cli
add
stos
fisubr
mov
dec
cdq
sar
mov
sbb
mov
cmp
shl
and
xchg
sub
dec
sub
dec
scas
lods
retf
aaa
retf
inc
popa
(bad)
(bad)
(bad)
jmp
mov
mov
mov
push
pop
out
and
pop
push
or
mov
clc
jmp
(bad)
call
loop
pop
mov
das
popa
ins
imul
les
(bad)
call
loop
xor
fdivr
(bad)
shl
and
stos
or
or
jp
cmp
(bad)
(bad)
(bad)
call
mov
or
stos
cld
mov
pop
and
sub
icebp
(bad)
inc
repz
icebp
xchg
retf
jb
pop
popf
fstp
cmps
cmps
mov
(bad)
mov
in
mov
pop
adc
push
sbb
mov
int3
mov
je
jne
fs
(bad)
fsubr
and
xchg
cmp
daa
out
aam
adc
mov
jecxz
jmp
jae
pushfw
mov
popa
mov
pop
in
test
or
cli
jmp
or
repnz
mov
dec
lea
ret
xor
(bad)
push
imul
inc
xchg
mov
cmp
dec
cmc
jnp
out
xchg
imul
(bad)
(bad)
call
sbb
retf
lods
mov
(bad)
xchg
or
(bad)
or
(bad)
mov
and
rcr
push
outs
mov
popf
(bad)
pop
pop
jle
(bad)
jg
lock
ins
or
out
jp
aas
shr
(bad)
(bad)
jmp
sub
std
popf
xchg
push
lock
jmp
push
leave
push
push
sti
mov
out
mov
jns
add
call
cs
mov
cmps
dec
arpl
dec
adc
and
nop
loopne
add
fisubr
sub
(bad)
(bad)
jmp
adc
dec
retf
dec
mov
xchg
cmp
mov
mov
add
cld
fdiv
mov
(bad)
jmp
cli
mov
push
ds
movs
in
test
mov
jmp
pop
(bad)
ret
mov
adc
mov
pop
xor
repz
add
popf
pop
scas
sbb
neg
(bad)
(bad)
(bad)
inc
mov
sub
fisttp
or
adc
xchg
mov
mov
add
rep
stos
es
mov
(bad)
(bad)
call
push
and
iret
cli
(bad)
icebp
pop
test
popa
mov
ins
mov
sbb
xchg
popf
sbb
push
adc
mov
dec
nop
cmp
clc
(bad)
call
test
test
call
fwait
xchg
mov
(bad)
(bad)
dec
lahf
add
fbstp
sti
loopne
pop
loopne
xchg
jmp
or
les
dec
(bad)
dec
(bad)
in
(bad)
test
bnd
(bad)
mov
dec
adc
inc
xor
(bad)
push
mov
leave
sbb
and
xchg
in
and
xor
add
xor
(bad)
(bad)
jmp
pop
inc
mov
mov
sub
jp
dec
lds
add
out
retf
jmp
call
push
jo
or
jle
xchg
inc
iret
inc
xchg
fwait
ret
(bad)
mov
neg
adc
lds
enter
mov
out
(bad)
(bad)
(bad)
out
jb
out
or
lahf
jnp
jle
cmps
jecxz
shr
push
jne
xchg
and
(bad)
call
jl
test
scas
jge
fld
ss
pop
clc
xor
repz
mov
xchg
and
dec
out
mov
fnstenv
test
mov
cld
(bad)
es
idiv
rcl
cmps
mov
inc
(bad)
(bad)
(bad)
jmp
sti
cmp
xchg
loopne
jbe
push
push
inc
frstor
jg
jno
xlat
out
scas
sbb
ja
(bad)
call
sub
sbb
inc
and
dec
xchg
xchg
push
not
push
movs
shl
adc
adc
and
fist
pop
scas
adc
(bad)
dec
cdq
sub
xchg
dec
aas
cdq
adc
bound
int
cmp
mov
(bad)
(bad)
(bad)
call
push
push
mov
imul
push
jae
enter
mov
xchg
and
push
dec
cwde
jmp
imul
shr
add
rcl
shl
and
scas
and
push
jl
inc
cmp
pop
dec
xchg
xor
mov
sub
mov
ret
push
dec
iret
int3
test
mov
mov
inc
leave
dec
cmp
ror
outs
(bad)
(bad)
(bad)
call
popf
sahf
mov
sti
push
pop
push
retf
xor
dec
xchg
in
out
inc
inc
aam
push
dec
scas
movs
(bad)
(bad)
mov
movs
push
mov
dec
imul
cli
popf
adc
scas
push
sub
leave
shl
(bad)
(bad)
(bad)
(bad)
call
fsubr
outs
std
in
add
sti
adc
pop
xchg
sub
jmp
loop
fwait
cli
xor
(bad)
(bad)
(bad)
ds
ret
jmp
mov
add
sbb
pop
push
mov
push
sbb
aaa
rol
rcr
mov
cmp
sub
pusha
das
cdq
inc
lahf
mov
jno
(bad)
push
ret
push
fsubrp
lea
mov
lods
xlat
dec
retf
inc
xchg
adc
push
(bad)
aas
loop
xchg
lahf
dec
xor
inc
mov
or
sar
jmp
cli
lea
xor
iret
jns
out
ja
aad
jmp
movs
sub
hlt
stos
and
mov
push
ins
dec
sub
add
lock
(bad)
(bad)
inc
inc
loope
push
(bad)
loope
cli
push
shr
popf
enter
cwde
call
(bad)
inc
jo
nop
(bad)
shl
test
out
mov
jecxz
std
jg
xor
or
push
into
test
(bad)
jmp
out
cs
ror
pushf
std
sbb
xchg
(bad)
(bad)
(bad)
push
mov
mov
inc
mov
sub
jmp
xchg
adc
iret
ja
(bad)
jmp
mov
rcr
fisttp
push
sub
lods
pop
and
or
pop
ror
mov
cmps
jle
test
pop
mov
cmp
push
jbe
sub
(bad)
(bad)
(bad)
call
sbb
cmps
cmp
mov
mov
jbe
cli
repz
xor
push
xchg
imul
(bad)
(bad)
(bad)
dec
adc
sar
add
inc
sub
cld
adc
xor
sbb
xchg
(bad)
(bad)
jmp
cdq
dec
dec
pop
xchg
and
mov
inc
in
imul
mov
mov
idiv
push
pop
fist
sbb
mov
iret
test
les
movs
mov
push
int3
icebp
inc
mov
sbb
sub
mov
pop
in
cmps
les
xchg
jg
xor
inc
xor
mov
jp
aad
mov
mov
inc
or
mov
(bad)
(bad)
mov
or
sbb
inc
popa
mov
mov
mov
lods
shr
(bad)
(bad)
(bad)
(bad)
dec
inc
sbb
retf
mov
clc
mov
imul
ja
or
inc
out
loopne
(bad)
mov
mov
jns
xor
leave
daa
adc
mov
(bad)
(bad)
dec
mov
out
push
adc
loop
clc
cmp
mov
std
fist
sbb
or
(bad)
(bad)
inc
sbb
in
xchg
xor
mov
sbb
dec
sbb
aas
repnz
out
lods
mov
(bad)
(bad)
push
push
out
inc
push
or
sub
push
mov
or
js
fs
jg
(bad)
leave
mov
adc
lea
or
mov
imul
jns
jmp
sub
push
sub
outs
dec
jns
cli
std
mov
(bad)
(bad)
dec
lods
lods
sti
aas
test
xor
mov
vmovntps
test
(bad)
jg
mov
into
mov
(bad)
mov
jno
cmp
aas
(bad)
fild
xchg
in
neg
cmp
sbb
lock
es
jg
repnz
clc
fadd
repnz
xchg
dec
mov
(bad)
jmp
mov
aam
sub
ds
adc
cmp
pushf
(bad)
or
jp
fld
(bad)
push
gs
lods
inc
popa
sbb
das
pop
cmp
fs
(bad)
inc
hlt
sub
cld
in
inc
dec
pop
rol
fsubrp
fwait
mov
adc
dec
mov
call
and
xchg
mov
es
ins
popf
xchg
aad
and
mov
int3
int
maskmovq
imul
fdivrp
(bad)
(bad)
jg
cld
test
xchg
mov
movs
jl
retf
push
rep
push
xchg
pop
leave
leave
addr16
aam
ret
fimul
adc
push
push
jmp
(bad)
mov
je
adc
dec
dec
ss
lds
(bad)
jmp
imul
push
inc
call
jb
dec
(bad)
aam
cwde
aam
jge
push
pop
sub
mov
inc
jecxz
(bad)
(bad)
fist
imul
jnp
fnsave
xor
push
scas
xlat
or
mov
in
and
retf
inc
push
ss
or
mov
in
fstp
(bad)
retf
fdivp
es
loop
stos
inc
test
test
cmp
(bad)
mov
addr16
and
jno
or
fdivr
push
mov
loope
call
xchg
inc
pop
mov
jp
enter
add
lea
adc
data16
rol
xor
add
jno
dec
xchg
cmps
not
xchg
and
daa
stos
lahf
aad
jb
add
(bad)
(bad)
jle
pop
add
fsub
or
xor
push
add
(bad)
(bad)
jmp
bound
pusha
push
add
inc
fidivr
mov
(bad)
sub
sahf
cmps
add
(bad)
(bad)
call
sub
mov
iret
xor
push
data16
jns
bound
bound
(bad)
(bad)
(bad)
push
mov
inc
test
fsubr
cmp
test
pop
jmp
scas
cli
(bad)
jmp
push
xchg
dec
mov
leave
mov
push
inc
add
add
pop
fild
(bad)
jnp
cmp
(bad)
adc
in
rcl
aad
test
into
rol
and
fcom
adc
inc
(bad)
dec
sbb
dec
aam
cmp
xor
adc
js
(bad)
(bad)
jmp
and
icebp
mov
bound
jmp
ret
rcl
in
(bad)
(bad)
cmps
(bad)
(bad)
dec
jbe
pop
out
cdq
aad
push
adc
in
xchg
inc
xchg
lods
mov
inc
(bad)
(bad)
jmp
lods
repz
in
inc
or
mov
xor
sbb
stos
sub
mov
mov
cs
or
adc
(bad)
or
xchg
cld
(bad)
(bad)
jmp
out
sub
inc
les
mov
ja
sbb
adc
jae
loop
or
dec
or
and
jle
pushf
(bad)
(bad)
(bad)
jmp
xchg
mov
pop
sub
sub
icebp
pop
ret
push
sub
jnp
or
mov
(bad)
call
lods
test
adc
out
cmp
xchg
xor
in
(bad)
jmp
(bad)
cmp
test
test
add
retf
in
mov
gs
xchg
cmp
add
in
push
jae
sub
mov
cmp
push
cmp
jbe
xchg
jbe
adc
mov
add
(bad)
(bad)
(bad)
cli
lock
mov
xchg
jno
mov
repnz
add
(bad)
xchg
mov
repz
dec
adc
(bad)
(bad)
(bad)
dec
and
xchg
mov
fisttp
mov
jb
stos
das
mov
ret
jl
cmc
sti
rol
push
or
xchg
sub
and
xchg
inc
cmp
les
not
mov
leave
inc
(bad)
(bad)
(bad)
inc
and
mov
push
push
dec
ja
scas
push
or
pop
rdmsr
(bad)
or
call
icebp
xchg
add
sub
mov
into
mov
loopne
rol
fdiv
jne
(bad)
inc
xchg
dec
push
stos
mov
xchg
sbb
sub
mov
(bad)
(bad)
inc
sub
imul
pop
cmp
sub
xlat
(bad)
jo
and
cmp
inc
call
in
loope
mov
dec
in
adc
mov
inc
(bad)
(bad)
(bad)
call
push
iret
cmp
call
lock
dec
jecxz
cli
adc
std
jecxz
fdiv
(bad)
dec
scas
cs
adc
and
push
xor
call
xchg
daa
icebp
call
cmps
dec
mov
or
bound
xor
jmp
cdq
push
push
sub
xchg
test
stos
and
mov
dec
iret
cmps
push
xchg
(bad)
(bad)
(bad)
jmp
mov
mul
loopne
jecxz
jmp
mov
ss
arpl
pop
dec
iret
into
and
sbb
(bad)
out
clc
mov
(bad)
cdq
mov
mov
push
jecxz
popf
js
fsubr
aad
xchg
gs
idiv
call
jmp
bnd
or
and
push
shr
ss
or
xor
data16
(bad)
(bad)
jmp
cmp
mov
mov
cmp
add
or
mov
fisttp
loop
aaa
(bad)
(bad)
(bad)
call
push
js
mov
sbb
shl
xor
scas
pop
xchg
xor
push
shr
xchg
aas
cmp
adc
xor
dec
adc
(bad)
(bad)
(bad)
inc
sbb
lahf
ins
sub
push
xchg
int3
mov
xchg
dec
mov
dec
popa
add
push
xor
(bad)
(bad)
(bad)
call
inc
mov
fsub
dec
mov
cmp
lahf
cdq
xchg
sub
(bad)
mov
aad
jmp
imul
jle
pop
les
pop
push
nop
adc
adc
(bad)
(bad)
(bad)
inc
xor
adc
cmps
fisttp
push
movs
jnp
xor
sbb
ins
(bad)
(bad)
(bad)
call
sub
mov
mov
mov
mov
inc
lock
jmp
out
outs
sbb
dec
and
push
or
sub
sar
arpl
xchg
xchg
sub
(bad)
(bad)
(bad)
jmp
cdq
jge
nop
mov
push
jle
movs
movs
loop
ss
mov
and
jmp
(bad)
(bad)
(bad)
call
dec
pushf
and
in
pop
leave
sub
push
pushf
jns
xchg
sub
test
(bad)
(bad)
dec
mov
xor
mov
mov
ins
popa
push
fst
inc
aam
add
xor
jmp
mov
iret
not
and
sub
aaa
inc
push
add
cmp
xor
in
(bad)
(bad)
(bad)
jnp
loop
aaa
pop
sub
sbb
cmc
adc
mov
adc
fild
retf
out
mov
jno
out
mov
lds
cli
jp
rcr
aad
addr16
(bad)
(bad)
push
add
imul
movs
in
das
sbb
and
xor
push
sbb
adc
cmp
(bad)
(bad)
inc
and
adc
cmps
pop
stos
sub
repz
aam
or
cmp
(bad)
(bad)
jle
and
sub
or
out
xchg
jg
sub
dec
hlt
(bad)
inc
ret
call
add
cmp
xchg
movs
ss
call
and
and
imul
push
mov
shl
sub
(bad)
(bad)
(bad)
jns
stos
fnstenv
add
sbb
inc
xchg
cmp
jl
cmp
mov
inc
adc
div
arpl
(bad)
call
cmp
push
and
pusha
maxps
aad
and
(bad)
(bad)
inc
cmps
add
(bad)
push
jp
and
push
inc
fwait
lods
mov
push
adc
jbe
iret
pop
mov
mov
fnsave
mov
clc
fld
fwait
movs
mov
stos
call
(bad)
call
fstp
mov
mov
mov
mov
cli
cmp
(bad)
fstp
popa
mov
jne
(bad)
(bad)
(bad)
dec
pushf
imul
pop
jnp
mov
push
jge
pushf
mov
sar
dec
in
fwait
outs
pop
mov
(bad)
call
pop
inc
gs
addr16
adc
movs
shr
fcom
scas
mov
pop
(bad)
(bad)
push
xchg
lea
mov
xor
dec
mov
in
das
(bad)
jg
call
dec
jnp
push
push
push
outs
cmp
jb
cs
sub
rcr
(bad)
(bad)
dec
sub
cdq
pop
push
arpl
ja
sub
push
inc
ja
adc
in
mov
jmp
test
inc
leave
pop
pop
mov
and
das
fldenv
call
jnp
call
in
and
clc
and
sti
mov
or
(bad)
addr16
js
das
xor
cli
inc
push
ret
mov
retf
add
into
mov
add
cs
imul
add
(bad)
call
push
xchg
adc
jp
mov
aam
xchg
ins
leave
inc
cmp
into
das
dec
ins
ds
sbb
jns
or
ins
jmp
xchg
lahf
jnp
fistp
retf
shl
out
repnz
(bad)
(bad)
call
mov
inc
stos
push
push
cwde
xchg
(bad)
ror
jp
push
and
aaa
call
(bad)
(bad)
(bad)
inc
mov
retf
mov
jns
(bad)
into
scas
lods
in
inc
inc
cdq
lds
mov
dec
(bad)
shr
(bad)
mov
pusha
xchg
xchg
enter
arpl
push
jp
cli
les
and
add
mov
inc
push
xchg
in
cmp
clc
lea
sahf
cmp
imul
pop
ds
inc
push
dec
sti
dec
xor
push
mov
mov
adc
int
dec
data16
test
(bad)
(bad)
push
or
cmp
dec
jno
mov
pop
shl
xor
imul
push
lods
pusha
xor
(bad)
(bad)
jmp
push
(bad)
stos
cmps
std
retf
les
sub
jne
and
mov
lds
jmp
inc
add
pop
loopne
mov
call
lods
(bad)
(bad)
jg
adc
(bad)
mov
sub
imul
ss
cmp
and
call
call
and
adc
xchg
and
push
(bad)
(bad)
jg
mov
pop
js
sub
int3
dec
mov
sahf
aas
mov
sub
(bad)
(bad)
call
mov
mov
stos
shl
mov
push
mov
jl
test
stos
dec
xchg
stos
(bad)
fild
(bad)
adc
cld
int
in
test
mov
data16
sbb
das
mov
or
xchg
je
sti
in
or
(bad)
(bad)
call
mov
sbb
pop
cli
pop
lods
push
les
dec
mov
pop
pop
imul
and
dec
(bad)
(bad)
(bad)
call
xchg
pop
add
mov
jge
pop
rcl
addr16
leave
dec
(bad)
les
xor
fdivr
pop
std
push
fdiv
xchg
sub
shl
or
mov
clc
pop
into
mov
(bad)
mov
or
pop
mov
pushw
xchg
xor
jb
jle
cmc
jbe
push
push
into
arpl
test
and
or
(bad)
(bad)
jmp
inc
shl
xor
mov
sbb
popf
cmp
or
std
mov
fiadd
out
(bad)
(bad)
(bad)
call
mov
mov
and
and
enter
imul
cld
cmp
xor
pushf
rcr
lea
and
(bad)
fild
pop
hlt
(bad)
(bad)
cmps
mov
popa
xchg
ror
xlat
mov
push
pop
add
push
xor
and
call
enter
sbb
fs
mov
stos
jmp
imul
cdq
dec
dec
(bad)
dec
fmul
out
and
jnp
and
xlat
add
(bad)
(bad)
(bad)
push
or
mov
outs
sub
mov
cmp
add
xchg
stc
and
(bad)
retf
(bad)
(bad)
(bad)
imul
fisubr
push
inc
mov
jmp
xchg
mov
push
ror
dec
inc
pop
imul
push
pop
push
stos
bound
lods
jp
or
mov
clc
jmp
or
fs
(bad)
add
xor
xor
(bad)
(bad)
jmp
iret
cmp
lds
ds
fidiv
call
xlat
push
pop
cdq
ror
(bad)
(bad)
(bad)
jmp
adc
and
cmps
sbb
retf
retf
(bad)
jne
or
(bad)
(bad)
inc
push
push
mov
xor
clc
mov
loope
push
gs
jl
(bad)
jmp
rcr
jb
shl
add
fwait
(bad)
(bad)
inc
lahf
inc
(bad)
jo
outs
fdiv
dec
mov
in
xchg
mov
call
jns
xor
and
inc
mov
xchg
dec
hlt
call
call
test
xchg
mov
xor
fadd
mov
jl
gs
pop
imul
add
inc
fwait
(bad)
(bad)
inc
sbb
xor
pop
fidiv
(bad)
scas
mov
sbb
stos
fdivr
jmp
jmp
(bad)
movs
arpl
imul
lds
and
or
inc
(bad)
(bad)
(bad)
(bad)
inc
bswap
js
pop
das
sti
rcl
out
popf
xchg
test
xchg
sbb
es
xor
shl
(bad)
adc
hlt
movs
mov
cmp
xchg
fisttp
dec
mov
inc
jle
fist
stc
lods
push
(bad)
(bad)
mov
leave
sub
es
idiv
cmps
lods
inc
movs
movs
mov
jbe
in
ds
xchg
inc
and
mov
jmp
test
ror
aad
gs
into
jmp
cmp
mov
and
retf
pushf
pop
xchg
cmc
(bad)
(bad)
inc
bound
int
mov
and
sbb
das
xlat
adc
(bad)
fistp
dec
cs
gs
fidivr
stos
sub
loop
inc
push
push
popa
test
(bad)
mov
pop
hlt
lahf
dec
pop
dec
test
ret
pop
jecxz
(bad)
pusha
cld
(bad)
(bad)
inc
jecxz
enter
push
dec
jb
sbb
test
cmps
popa
icebp
fisub
add
(bad)
push
xchg
cwde
inc
inc
jne
lahf
mov
add
lahf
mov
aas
into
mov
xchg
push
(bad)
(bad)
jmp
add
push
push
pop
js
outs
sub
arpl
cld
xlat
pop
ret
in
adc
push
in
push
ror
(bad)
call
hlt
mov
scas
xor
mov
push
rcr
test
jb
xchg
push
or
inc
fst
and
mov
mov
mov
push
jo
retf
fcmovu
ins
adc
call
mov
dec
int3
loope
sub
inc
mov
add
sub
(bad)
jmp
std
jo
addr16
fwait
outs
lds
call
ins
push
aam
sbb
(bad)
sahf
(bad)
(bad)
(bad)
inc
add
retf
bound
sbb
shl
aad
xor
jecxz
xchg
in
mov
cmp
push
jmp
xchg
in
scas
imul
scas
sub
cmp
mov
das
or
xor
mov
inc
shr
(bad)
(bad)
jmp
retf
shl
pop
push
sub
fisub
nop
cmp
daa
jae
add
arpl
je
pushf
(bad)
(bad)
(bad)
inc
cmp
out
sbb
mov
or
mov
les
sbb
ja
(bad)
jmp
cli
and
sub
pop
dec
arpl
mov
cmp
cmp
(bad)
xchg
ror
add
in
mov
mov
(bad)
mov
sti
mov
mov
pushf
and
cdq
sahf
mov
inc
xchg
xchg
inc
push
xchg
retf
(bad)
(bad)
(bad)
in
and
jno
in
inc
cmps
retf
and
ja
pop
es
xor
jg
(bad)
call
cdq
mov
shl
mov
push
jo
inc
(bad)
(bad)
(bad)
dec
in
shr
xchg
xchg
cmp
rcl
fldcw
push
xchg
cmp
(bad)
dec
mov
cmp
adc
repz
dec
xchg
je
pop
sbb
cdq
(bad)
sbb
pop
out
aaa
rol
(bad)
dec
or
pushf
jae
nop
in
ins
jge
sub
push
sub
cmp
push
std
push
stos
mov
in
xchg
and
or
and
add
(bad)
push
mov
push
mul
test
sbb
iret
xlat
ins
cmp
inc
ja
(bad)
(bad)
(bad)
mov
sar
mov
clc
push
inc
sub
or
push
lds
dec
(bad)
(bad)
(bad)
push
or
rcr
outs
(bad)
cmp
inc
mov
xchg
xor
jecxz
xchg
or
(bad)
(bad)
(bad)
call
xor
adc
jns
outs
mov
xor
pop
test
mov
loope
rcl
clc
out
retf
fcom
mov
retf
mov
mov
push
mov
movs
adc
push
ins
mov
dec
int3
mov
ins
inc
mov
jmp
jne
cld
sbb
stos
add
je
mov
sub
sbb
pusha
addr16
xor
(bad)
(bad)
(bad)
call
mov
nop
xchg
pop
cld
lahf
pop
sti
adc
stc
push
cmp
jecxz
call
adc
xchg
mov
adc
dec
add
mov
ud0
stos
lds
push
push
dec
xor
(bad)
jg
call
jmp
sub
xor
push
outs
xchg
sbb
jg
hlt
(bad)
fstp
sub
add
outs
pop
shl
sub
(bad)
dec
lock
add
sbb
mov
in
xchg
dec
js
mov
mov
push
or
(bad)
(bad)
(bad)
mov
mov
outs
jg
fwait
xor
push
lahf
(bad)
hlt
xchg
mov
mov
adc
pop
cmc
(bad)
(bad)
push
cmp
jb
fidiv
test
ins
sbb
adc
lock
adc
mov
cmp
mov
(bad)
jmp
in
sbb
inc
ins
dec
ss
mov
push
(bad)
into
mov
ins
inc
mov
cmp
cld
jmp
leave
push
dec
cs
(bad)
push
inc
ja
push
popa
aam
and
push
mov
(bad)
(bad)
(bad)
(bad)
call
pop
ficomp
sub
data16
call
fucomp
mov
(bad)
(bad)
jmp
ret
pop
imul
sbb
in
xor
push
loope
ss
fnstsw
mov
shl
jge
int
pusha
rcr
retf
leave
cld
(bad)
(bad)
jmp
in
stos
inc
mov
mov
pop
mov
icebp
pop
ss
je
jo
or
into
loop
call
add
mov
and
cwde
sahf
retf
mov
push
push
(bad)
(bad)
inc
cmp
fst
outs
inc
dec
or
mov
mov
sbb
push
mov
push
adc
std
sbb
mov
and
or
stos
call
into
dec
lock
xor
mov
or
add
mov
mov
fwait
push
jle
hlt
inc
pop
fs
fs
adc
lock
mov
pop
dec
hlt
(bad)
(bad)
(bad)
jmp
dec
push
push
in
sub
jne
das
lahf
pop
mov
hlt
cmp
xchg
int3
mov
sbb
xchg
fs
movs
imul
pop
lea
jecxz
rcl
dec
mov
dec
cmps
mov
pop
sub
and
mov
inc
lahf
cdq
adc
jb
das
cmps
and
mov
jmp
and
push
cwde
sub
xchg
xchg
out
dec
xchg
push
lds
mov
mov
add
imul
mov
(bad)
(bad)
(bad)
call
sub
popa
cbw
fwait
in
stc
lock
lock
cli
and
in
cmp
out
cwde
pop
scas
(bad)
(bad)
mov
addr16
stc
cmp
add
mov
lods
cdq
imul
push
pop
sbb
cmp
inc
stos
lods
mov
aam
lods
scas
push
(bad)
out
cli
jmp
mov
fs
push
fstp
mov
rcl
mov
cld
repnz
mul
and
and
ins
xchg
jbe
(bad)
(bad)
jmp
inc
jmp
stos
mov
mov
lods
test
pop
lahf
addr16
ret
cmps
rcl
(bad)
(bad)
(bad)
push
pop
and
imul
or
and
pop
ins
adc
inc
push
lods
js
xor
push
push
push
int
sub
mov
ficomp
outs
clc
(bad)
(bad)
fldcw
mov
out
pop
es
sahf
sub
(bad)
fidivr
adc
scas
dec
aam
aam
arpl
adc
pushf
mov
ds
outs
loope
(bad)
mov
or
jne
xor
data16
jno
pushf
mov
add
out
xor
pop
bound
iret
mov
(bad)
inc
cmp
sub
push
mov
dec
mov
inc
jp
jmp
div
out
mov
pop
jns
xlat
sahf
imul
jns
inc
mov
fdivr
jmp
pusha
mov
push
nop
xchg
mov
nop
in
fsubr
push
fwait
add
add
pop
push
gs
dec
xor
adc
push
fadd
dec
movs
adc
cmp
dec
(bad)
(bad)
(bad)
inc
jno
mov
inc
outs
xchg
pushw
fist
fst
jecxz
push
addr16
pop
sub
cwde
ins
stos
(bad)
(bad)
(bad)
(bad)
call
mov
jno
cmp
dec
out
sbb
jo
push
fisub
xchg
dec
add
(bad)
jmp
sti
push
pushf
popf
pop
ret
push
lock
add
(bad)
aas
mov
(bad)
(bad)
fisttp
push
popa
mov
sbb
pop
les
cmp
lds
(bad)
dec
outs
sub
xor
mov
lock
outs
jle
xchg
mov
mov
xlat
(bad)
dec
sbb
ins
shl
in
repz
mov
call
(bad)
(bad)
(bad)
jmp
adc
imul
imul
ins
mov
pop
inc
cmc
jns
(bad)
(bad)
(bad)
call
mov
int3
sub
inc
scas
mov
or
cmps
mov
in
(bad)
mov
mov
(bad)
(bad)
(bad)
js
push
ja
xchg
(bad)
sahf
jnp
mov
clc
cmp
push
xchg
lods
loopne
mov
popf
fwait
(bad)
(bad)
out
clc
xor
adc
inc
(bad)
jmp
mov
outs
into
push
ja
ret
mov
(bad)
(bad)
(bad)
dec
loop
daa
and
mov
in
retf
into
sahf
ret
daa
mov
fwait
cli
movs
ret
scas
loopne
cmps
psraw
call
ret
cmp
scas
sbb
add
aas
std
or
(bad)
(bad)
(bad)
mov
dec
cmps
daa
(bad)
jno
pop
stc
mov
dec
push
inc
add
adc
add
add
(bad)
(bad)
call
add
imul
xchg
inc
fs
add
mov
stos
jmp
mov
(bad)
inc
xor
push
xchg
xor
popf
test
sbb
push
scas
mov
call
mov
dec
loopne
push
lods
js
scas
(bad)
and
fiadd
inc
sub
xchg
and
pop
xlat
(bad)
(bad)
push
out
push
pop
dec
sbb
leave
dec
push
sbb
mov
das
mov
mov
mov
imul
xor
arpl
dec
pop
sbb
xlat
(bad)
cmp
in
push
xchg
stos
addr16
fsubr
mov
sub
mov
(bad)
cld
out
inc
cmc
mov
(bad)
mov
pop
leave
pop
sub
add
test
(bad)
hlt
(bad)
(bad)
(bad)
inc
sbb
mov
and
adc
in
je
int3
pop
push
push
xor
or
(bad)
(bad)
out
clc
scas
arpl
xchg
repz
and
cmps
add
cmp
outs
popa
jle
in
loopne
jb
sar
(bad)
(bad)
dec
stos
inc
mov
jmp
push
rol
jb
imul
ja
data16
jne
imul
leave
js
and
fdivr
(bad)
(bad)
push
adc
sbb
dec
ret
(bad)
add
or
mov
cli
xlat
sub
xor
mov
(bad)
enter
(bad)
call
push
mov
stos
inc
(bad)
lahf
cmp
inc
(bad)
(bad)
lods
fs
call
sub
out
cmp
sub
scas
icebp
(bad)
(bad)
jmp
cmp
dec
push
imul
dec
push
pop
jge
js
xor
cdq
adc
(bad)
(bad)
call
ja
nop
jbe
mov
(bad)
adc
cld
in
fdiv
pop
pop
cmp
jne
xchg
sub
iret
jns
add
fdivr
cmps
aad
push
cmp
xor
ret
fidiv
(bad)
(bad)
mov
inc
push
popa
ins
jecxz
leave
sub
mov
(bad)
out
pop
cmps
add
sbb
mov
(bad)
inc
push
loope
cmp
lods
pop
cmp
mov
add
call
lock
xchg
mov
jmp
les
inc
xchg
jne
pop
jne
popf
scas
pop
cmp
lea
pushf
add
push
(bad)
xor
sbb
cmps
jmp
jecxz
inc
pop
mov
mov
daa
cwde
aaa
xor
jge
or
xor
mov
jo
xor
add
ins
pop
pop
and
(bad)
(bad)
dec
xor
and
in
xchg
pop
mov
xchg
add
push
scas
fldcw
xchg
xchg
loopne
and
ja
lock
jo
pushf
js
mov
pop
shr
(bad)
(bad)
(bad)
(bad)
dec
xchg
add
call
out
mov
out
sub
add
dec
add
jmp
scas
rcr
mov
ret
dec
ins
scas
int
outs
mov
lods
pop
popa
xchg
mov
inc
xchg
inc
(bad)
(bad)
(bad)
jg
push
xor
push
fcom
pop
add
push
lock
out
aas
sbb
xchg
adc
dec
and
sub
adc
mov
loopne
sbb
mov
inc
test
js
sbb
ret
(bad)
(bad)
(bad)
jmp
mov
sub
mov
xchg
add
in
(bad)
(bad)
jmp
pop
call
or
inc
and
xor
pop
out
inc
retf
call
mov
push
shl
add
stc
sub
mov
in
and
jmp
sbb
inc
mov
bound
mov
pop
mov
(bad)
(bad)
(bad)
jmp
xchg
ins
dec
fdivp
rcl
addr16
dec
mov
cmc
les
xor
outs
icebp
and
ss
repnz
imul
icebp
sub
call
xchg
icebp
scas
test
cmp
stos
or
jmp
sub
or
loop
lds
mov
(bad)
(bad)
jmp
test
(bad)
xor
leave
or
or
sti
cwde
jmp
xchg
test
xor
(bad)
push
cwde
push
mov
adc
loop
and
mov
sub
rcr
pop
es
loope
leave
xor
jmp
jmp
xor
pop
cmp
inc
fnstenv
lds
loop
leave
jmp
loopne
or
test
pop
mov
add
sub
cmps
out
call
add
pusha
loope
call
aas
jle
adc
pop
mov
lds
(bad)
cmp
(bad)
(bad)
(bad)
mov
das
dec
loop
cmp
arpl
inc
sub
cmp
cli
push
cwde
stos
mov
pop
(bad)
(bad)
(bad)
dec
dec
pushf
or
jbe
and
jno
sbb
cs
jl
fnstsw
(bad)
(bad)
(bad)
call
cmp
push
sub
lods
and
inc
inc
scas
test
inc
and
pusha
ss
test
or
sbb
mov
xlat
or
cdq
ret
(bad)
les
push
(bad)
push
sub
ins
sub
loope
jbe
outs
xor
xchg
popa
or
dec
adc
cmc
inc
mov
out
or
adc
jns
retf
imul
(bad)
and
cli
(bad)
(bad)
jmp
push
into
pop
call
jmp
push
or
clc
enter
js
xchg
stos
pop
gs
pusha
add
xor
fdivr
pop
pop
les
cld
(bad)
push
loope
xchg
retf
sub
div
pop
push
cld
lahf
stc
jno
int
push
and
dec
dec
add
jno
xor
push
jmp
in
xchg
sub
xchg
push
mov
in
mov
add
pop
pushf
inc
mov
aas
xchg
dec
add
inc
in
arpl
dec
(bad)
fist
std
pop
int3
cmp
pop
(bad)
jmp
cs
out
jge
aas
jae
hlt
mov
xchg
mov
shl
cwde
xchg
dec
nop
inc
and
add
ret
adc
adc
nop
adc
ss
popa
loope
mov
scas
mov
xlat
xor
mov
mov
(bad)
(bad)
jmp
mov
int
and
jp
jns
into
fdivrp
fcmovnu
mov
mov
cmp
mov
rcr
and
call
aad
add
xor
loopne
pop
cmps
cwde
inc
mov
or
xchg
jl
out
stc
lock
bound
loope
mov
(bad)
jmp
out
jo
shl
jne
(bad)
in
mul
jp
ret
js
repz
dec
dec
adc
xlat
(bad)
jns
test
pop
adc
mov
addr16
and
jo
in
inc
ss
(bad)
push
mov
int
xor
adc
rcl
cmp
mov
jmp
xchg
inc
jmp
and
shl
in
or
bound
push
sub
aaa
dec
mov
(bad)
jle
out
xchg
jge
movs
iret
mov
je
out
ror
leave
js
in
push
pusha
(bad)
popa
jl
xchg
test
jno
sbb
retf
cmps
nop
shr
stc
push
mov
(bad)
(bad)
mov
in
aas
call
sbb
add
(bad)
call
nop
jle
mov
xchg
mov
jno
repz
data16
mov
push
mov
jne
ja
lods
(bad)
mov
cmps
in
retf
iret
cdq
das
adc
(bad)
mov
(bad)
or
lock
inc
je
add
mov
ss
push
xchg
mov
stos
xchg
mov
mov
fcomip
(bad)
call
int
fst
sbb
and
loope
xchg
and
mov
lds
and
inc
pop
jmp
or
(bad)
mov
xor
popf
inc
iret
cmp
arpl
push
pushf
es
jg
(bad)
cmp
(bad)
imul
sbb
or
pop
lock
shr
or
arpl
adc
sub
clc
pop
mov
jne
retf
je
sbb
jge
imul
das
jmp
pop
mov
xor
retf
cmp
or
push
dec
sahf
and
sahf
rol
leave
(bad)
jg
jecxz
pushf
pop
stc
pop
(bad)
jg
(bad)
jmp
push
mov
popf
call
mov
and
sbb
ds
inc
stos
(bad)
(bad)
(bad)
call
pop
jnp
xchg
sub
ficom
and
sbb
stos
retf
shr
popa
out
(bad)
(bad)
jmp
outs
popa
(bad)
mov
or
movs
or
and
push
leave
lods
lock
pop
xchg
(bad)
(bad)
(bad)
(bad)
jge
push
jmp
jo
int
dec
inc
mov
cmc
sbb
fwait
mov
js
cli
(bad)
dec
jbe
repz
scas
shl
das
or
push
leave
add
(bad)
jmp
or
in
push
mov
push
bound
pop
push
iret
sub
(bad)
fimul
hlt
sbb
pop
loop
pop
lods
pusha
and
dec
mov
xor
int3
(bad)
(bad)
push
xor
loope
aaa
fmul
jp
xchg
jge
mov
inc
jmp
(bad)
(bad)
call
cdq
mov
js
mov
dec
cmp
aas
push
iret
dec
loope
mov
les
(bad)
inc
pop
push
mov
inc
xchg
push
pusha
out
rcr
outs
jmp
in
pop
(bad)
(bad)
(bad)
call
and
loop
xor
push
and
or
retf
leave
loope
xchg
add
inc
inc
cmp
jo
inc
(bad)
pushf
xchg
or
jge
(bad)
(bad)
(bad)
(bad)
out
iret
fsubr
mov
cmp
retf
fadd
in
jmp
fdiv
adc
ins
mov
dec
ss
or
jmp
(bad)
(bad)
mov
cmp
pop
sub
add
ins
cmp
(bad)
mov
push
mov
adc
sbb
mov
inc
xor
cmp
pop
cmp
mov
(bad)
jg
jmp
xchg
lea
inc
sbb
mov
mov
jge
or
(bad)
adc
jno
sbb
inc
(bad)
(bad)
(bad)
(bad)
call
inc
adc
push
or
retf
xor
aaa
ja
push
xchg
outs
mov
mov
cld
push
mov
cs
cmp
cwde
cdq
popf
(bad)
(bad)
(bad)
call
mov
cmp
xor
lock
lock
push
fadd
xor
jmp
shl
es
mov
lahf
cmps
retf
sbb
idiv
(bad)
(bad)
inc
std
mov
iret
repnz
cmp
mov
out
lods
jae
jecxz
jg
push
cld
clc
stc
jns
mov
jecxz
popa
movs
xor
(bad)
xchg
inc
rcr
(bad)
xor
ret
(bad)
(bad)
(bad)
push
ret
and
xor
rol
test
push
jb
xor
jae
and
jg
(bad)
push
ins
xchg
and
adc
lods
retf
adc
xor
lods
mov
(bad)
(bad)
(bad)
dec
inc
scas
inc
out
inc
inc
mov
fisub
cmp
inc
adc
xchg
call
lock
imul
jnp
mov
fstp
cmp
call
push
jb
fdivr
inc
push
clc
cmp
addr16
sbb
dec
sbb
mov
push
mov
or
mov
(bad)
fistp
(bad)
mov
(bad)
(bad)
call
push
inc
test
(bad)
sub
shl
sub
cmp
sti
inc
cmp
sar
int
push
cmc
mov
dec
cmps
inc
call
push
pushf
xor
inc
mov
xor
dec
or
and
mov
or
mov
lock
xlat
jo
(bad)
mov
ss
jge
push
je
movs
jb
mov
repz
lahf
mov
loope
push
xchg
shr
call
retf
mov
(bad)
call
dec
xchg
pusha
xor
sbb
mov
mov
inc
js
push
jg
(bad)
mov
lock
mov
sub
dec
addr16
mov
xchg
ja
mov
(bad)
(bad)
dec
dec
push
(bad)
neg
xlat
cmp
jb
in
pop
sub
inc
jmp
xchg
or
(bad)
(bad)
dec
inc
mov
push
mov
jno
sub
inc
push
mov
sar
(bad)
(bad)
(bad)
cmp
adc
arpl
adc
and
shl
gs
mov
mov
popf
inc
and
jmp
jmp
add
(bad)
sar
aad
inc
mov
(bad)
(bad)
inc
loop
jmp
mov
or
adc
xchg
dec
jmp
(bad)
(bad)
(bad)
jmp
dec
popf
aas
(bad)
shl
popa
(bad)
leave
(bad)
sub
cs
jecxz
repnz
inc
stos
and
sar
push
rcr
gs
dec
or
stc
pushf
(bad)
gs
rcl
jmp
mov
adc
push
neg
xchg
jmp
xor
std
data16
das
call
cld
or
stc
jmp
(bad)
(bad)
fbstp
ins
es
arpl
cmps
lods
pop
mov
outs
push
movs
mov
movs
inc
(bad)
(bad)
(bad)
dec
dec
prefetchw
sub
pop
cli
iret
dec
adc
mov
fwait
pop
xchg
(bad)
fsubr
(bad)
(bad)
jg
xchg
add
cmp
mov
dec
jl
mul
jge
jle
(bad)
jmp
cld
jge
repnz
cmp
push
ins
sbb
push
mov
loopne
sbb
(bad)
cmp
jl
and
pop
adc
cmp
ret
arpl
cmc
cmp
ret
inc
std
mov
mov
cld
push
into
push
and
pop
jg
into
(bad)
call
ds
xchg
inc
dec
mov
mov
mov
mov
xchg
add
hlt
stc
push
push
(bad)
(bad)
(bad)
call
jmp
xor
arpl
enter
adc
mov
lods
shl
cmp
(bad)
(bad)
jmp
test
aam
fisttp
movs
sub
mov
aam
jmp
jns
push
call
cwde
retf
jle
jne
cmp
xor
mov
(bad)
dec
out
rcl
or
retf
aas
sbb
popa
in
mov
mov
inc
mov
ins
(bad)
(bad)
(bad)
jmp
sub
cdq
pop
popf
out
gs
xor
xchg
inc
sbb
iret
in
mov
jg
inc
fldenv
push
gs
loop
xchg
inc
dec
stc
daa
push
pusha
(bad)
push
(bad)
push
mov
iret
sar
jbe
stc
int
add
(bad)
(bad)
jg
inc
fcomp
jecxz
out
inc
call
(bad)
jmp
fimul
adc
inc
int
dec
retf
mov
xor
(bad)
call
ss
fadd
jp
test
xor
mov
lea
lds
bound
mov
and
dec
xor
sbb
(bad)
rcr
push
xor
sub
mov
dec
sahf
mov
cs
pop
dec
ret
push
mov
push
mov
call
ss
shl
into
into
loopne
pop
fnstsw
mov
jb
xor
pop
bound
jmp
dec
test
das
add
jge
lods
cdq
jl
jns
fisubr
jg
and
cmps
add
rcl
or
lds
sub
retf
xchg
pop
jnp
cli
jl
sbb
push
mov
xchg
push
xchg
scas
mov
punpcklbw
mov
icebp
movs
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cld
std
repz
xchg
push
jae
cdq
test
xchg
cli
jno
pop
pop
(bad)
out
frstor
push
or
(bad)
dec
xor
out
or
sbb
gs
inc
push
xor
mov
jmp
jnp
pop
fcomp
cmps
pop
(bad)
mov
(bad)
push
push
push
adc
lds
cmps
test
data16
(bad)
dec
mov
push
jp
add
in
retf
or
push
fucomip
(bad)
cdq
push
xor
retf
pop
cmp
xchg
pop
mov
and
stos
fisub
or
dec
lods
sub
push
test
push
out
mov
lea
rol
add
ffreep
cmps
(bad)
(bad)
(bad)
sti
sub
sub
fwait
pop
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
call
add
push
and
pop
cs
push
push
inc
cmp
jg
(bad)
jmp
jmp
push
mov
xlat
sub
loopne
dec
in
adc
les
fs
cmc
cmc
jnp
mov
sbb
jg
ss
int3
loop
nop
mov
jae
dec
pusha
int3
js
push
xchg
clc
mov
(bad)
jmp
lock
ret
fst
dec
xor
adc
xchg
ss
dec
inc
(bad)
(bad)
(bad)
dec
xchg
popa
jno
dec
pushw
xor
and
lock
out
(bad)
icebp
mov
sar
mov
fadd
movs
adc
int3
mov
or
mov
jge
dec
rcl
jl
call
xchg
into
pop
retf
mov
(bad)
(bad)
dec
enter
scas
sbb
xchg
cdq
cmp
mov
and
mov
cmc
(bad)
dec
pop
mov
and
leave
aam
popf
ins
pop
lea
sbb
push
xchg
clc
adc
test
ficom
or
mov
cmps
sub
push
pop
mov
mov
pop
loopne
aad
out
sbb
(bad)
(bad)
dec
inc
dec
xchg
dec
cmp
mov
cmc
cmp
mov
adc
xor
push
xor
mov
int3
icebp
adc
add
push
ret
mov
mov
sbb
add
and
jecxz
cs
cmp
ds
mov
jmp
nop
pop
mov
jbe
dec
movs
sub
jle
pop
dec
ficom
sbb
(bad)
(bad)
(bad)
push
lock
mov
aas
lock
test
retf
xchg
cld
fild
cmp
in
mov
cmp
inc
and
xor
in
sbb
mov
dec
in
outs
or
cmc
dec
clc
mov
inc
hlt
ins
repnz
icebp
push
jg
adc
call
pop
shl
pop
jle
add
jmp
test
mov
es
(bad)
(bad)
(bad)
cmp
dec
cmp
retf
jecxz
cs
(bad)
xor
mov
or
and
fcomp
(bad)
(bad)
(bad)
inc
xchg
jge
out
cli
adc
clc
ficomp
mov
repz
shl
xor
dec
cmp
(bad)
jmp
sub
(bad)
mov
inc
pop
xor
jg
js
leave
out
sbb
fbstp
stos
mov
mov
arpl
popf
and
(bad)
(bad)
push
das
sbb
call
jl
ret
and
ins
fdivr
jl
retf
loope
(bad)
pop
loopne
and
icebp
sahf
cmp
cmp
pusha
fs
in
pop
(bad)
(bad)
push
cmp
scas
clc
(bad)
fist
fwait
cmp
xor
cmp
(bad)
jno
cli
aam
fistp
jno
aaa
push
pop
enter
aas
mov
cli
or
xchg
aaa
(bad)
(bad)
(bad)
(bad)
call
mov
mov
es
mov
lock
pop
dec
xchg
jae
pop
popf
loope
dec
mov
mov
cld
jbe
xchg
sbb
je
jg
or
dec
ss
mov
pop
mov
(bad)
sbb
mov
(bad)
fucomp
dec
pushf
(bad)
stc
jae
fdiv
mov
or
fst
lahf
sbb
push
push
jp
clc
fsub
jmp
jno
pinsrw
xchg
pop
mov
mov
(bad)
jg
xchg
int3
sub
cmp
push
xor
sub
loope
jecxz
aas
(bad)
(bad)
jg
out
in
adc
push
(bad)
pop
xchg
jle
add
push
mov
mov
std
inc
(bad)
(bad)
fcomip
test
mov
movs
lahf
mov
repz
movs
(bad)
ins
mov
add
push
fs
(bad)
(bad)
(bad)
(bad)
out
mov
not
repz
pop
xchg
mov
sbb
gs
cmps
(bad)
sub
(bad)
(bad)
dec
and
or
pop
fwait
scas
sar
cdq
fs
xor
(bad)
and
movs
cli
sub
stos
leave
bound
(bad)
jmp
mov
fsub
cmp
sub
jp
cmp
push
repz
(bad)
(bad)
dec
je
ins
(bad)
(bad)
mov
xlat
ds
adc
jo
adc
lock
loopne
mov
lods
(bad)
(bad)
(bad)
(bad)
mov
jbe
(bad)
cld
sub
icebp
imul
ret
mov
fnstenv
pop
jge
(bad)
(bad)
(bad)
inc
sbb
jl
cwde
pop
fnsave
xchg
call
and
shr
iret
cmp
in
sub
cwde
imul
dec
inc
xchg
push
rol
aam
push
test
xchg
sbb
cmp
(bad)
js
(bad)
ds
imul
data16
es
adc
inc
or
mov
mov
pop
cmc
das
rol
cdq
pop
cmp
cmps
xchg
fidiv
xchg
(bad)
inc
push
lds
jbe
add
int3
push
lds
dec
stos
sbb
popf
das
xchg
mov
dec
xlat
sti
xor
lds
xchg
mul
fcomip
push
fst
das
mov
je
retf
lods
(bad)
(bad)
(bad)
call
data16
enter
xor
dec
mov
xor
inc
bound
jl
js
(bad)
(bad)
jmp
jecxz
popa
lods
iret
movs
cmp
pop
inc
push
fsubr
fldenv
push
aas
inc
scas
and
jmp
xchg
sub
maskmovq
int
leave
cs
push
jge
add
push
add
fcmovb
cdq
out
mov
add
inc
in
push
loopne
mov
mov
jo
pop
iret
repz
call
(bad)
(bad)
(bad)
cld
mov
rcr
push
inc
and
xchg
xchg
retf
(bad)
pop
or
and
and
jle
jg
cwde
loopne
(bad)
(bad)
inc
cmps
or
mov
xchg
and
hlt
jle
inc
fstp
into
fwait
dec
jnp
inc
inc
call
mov
pop
pop
pop
(bad)
movs
xchg
pop
sub
sub
xchg
xchg
mov
ror
lea
lds
cmc
mov
pop
test
mov
dec
inc
dec
out
(bad)
(bad)
(bad)
jg
adc
pop
jp
or
mov
aam
icebp
int3
das
xor
lods
adc
call
(bad)
(bad)
(bad)
call
mov
jbe
cmp
rol
dec
movs
call
loopne
dec
xchg
test
cs
out
loope
(bad)
(bad)
(bad)
call
in
mov
fwait
xchg
mov
dec
(bad)
xlat
imul
icebp
bnd
(bad)
(bad)
(bad)
jmp
iret
arpl
ret
arpl
das
int
pushf
es
push
test
pop
and
cmps
jnp
or
(bad)
(bad)
(bad)
call
mov
jno
rcl
fild
dec
pop
ffreep
mov
xchg
adc
and
(bad)
mov
cmp
mov
mov
inc
mov
pop
jmp
jb
fs
(bad)
in
(bad)
(bad)
cli
arpl
or
xor
mov
push
cmp
loopne
mov
out
clc
jbe
adc
mov
mov
loope
lea
aam
(bad)
(bad)
dec
sbb
(bad)
push
enter
mov
xchg
cmp
jmp
call
fxch
mov
mov
xchg
dec
mov
or
or
lahf
jnp
jg
fwait
mov
dec
jg
fistp
cmps
loope
jmp
ret
nop
dec
(bad)
(bad)
(bad)
dec
push
scas
test
adc
cmp
mov
cmp
pop
jns
adc
(bad)
(bad)
(bad)
dec
repnz
lahf
fldenv
mov
push
or
cmps
sub
push
mov
call
mov
inc
shl
mov
and
mov
mov
add
outs
push
xchg
cmp
lock
(bad)
inc
mov
and
js
push
jnp
cld
adc
mov
nop
cmp
jmp
dec
pop
hlt
push
pop
and
adc
std
clc
dec
fs
clc
(bad)
call
shl
cli
sar
ss
jp
or
jno
call
push
pop
sub
mov
xor
and
(bad)
fcomip
aaa
fadd
leave
pushf
or
call
push
adc
xchg
xchg
xchg
rcl
(bad)
dec
jmp
inc
fiadd
mov
std
test
sti
pop
mov
mov
mov
fcomip
pop
sbb
mov
sbb
(bad)
fstp
cli
jg
(bad)
(bad)
cmp
(bad)
mov
xor
test
stos
dec
repz
or
jne
inc
(bad)
(bad)
(bad)
(bad)
jmp
inc
xchg
popf
xor
packsswb
sub
jmp
in
test
gs
xchg
mov
(bad)
mov
inc
dec
xchg
movhps
mov
pop
push
imul
test
add
mov
mov
(bad)
call
mov
xor
fadd
xchg
mov
mov
adc
cs
and
sub
jo
cmp
xor
lods
in
cdq
xchg
xor
xchg
(bad)
jmp
and
sbb
in
mov
or
cmp
(bad)
(bad)
(bad)
inc
pop
jle
ja
in
mov
jnp
into
int
mov
and
mov
popf
pop
cmp
mov
shl
cmp
outs
fld
add
scas
movs
mov
mov
push
cmps
xor
enter
dec
call
cmp
not
push
loope
sbb
mov
inc
sbb
cwde
scas
test
(bad)
(bad)
call
mov
loope
dec
pop
jg
mov
mov
or
sub
leave
(bad)
push
fcom
jno
jle
jns
test
sbb
sub
or
mov
sub
mov
or
lods
retf
inc
imul
mov
stos
out
xchg
nop
xchg
rcl
mov
sbb
movs
mov
in
std
jg
(bad)
std
lea
add
cwde
jno
pushf
das
xor
call
(bad)
push
add
mov
push
sub
and
mov
inc
xchg
xor
inc
(bad)
(bad)
(bad)
push
jo
adc
imul
mov
aaa
dec
mov
les
pop
aad
cdq
mov
(bad)
(bad)
(bad)
jmp
xchg
rcr
enter
cmp
sub
pop
inc
shl
dec
addr16
test
addr16
(bad)
(bad)
call
jmp
fstp
ja
(bad)
out
sar
jecxz
retf
xchg
lea
sub
hlt
pop
push
leave
sub
dec
inc
ror
jbe
pop
pop
sbb
test
in
mov
mov
js
mov
hlt
test
(bad)
push
cmps
lahf
jns
push
pop
jns
shr
loop
inc
mov
std
jg
jl
into
push
add
test
and
dec
sar
clc
jmp
xchg
pop
xor
movs
xchg
or
push
mov
mov
enter
mov
ins
lods
test
xchg
jb
cmp
sbb
int3
(bad)
(bad)
(bad)
(bad)
cmp
pusha
mov
ror
mov
enter
pop
call
sti
dec
xchg
sti
cmp
(bad)
(bad)
jmp
push
sub
das
pop
dec
sti
sar
jg
enter
stc
sbb
mov
(bad)
(bad)
push
sbb
add
sbb
leave
mov
and
out
jno
ret
cmp
(bad)
in
shl
add
xor
enter
dec
xchg
lea
pop
fucomi
ficom
hlt
cmc
lea
inc
(bad)
(bad)
(bad)
push
fist
(bad)
int3
sti
mov
icebp
xor
mov
(bad)
rcr
lahf
je
xor
(bad)
inc
in
dec
cmps
push
xor
dec
push
xor
sub
dec
inc
cmc
(bad)
inc
sub
add
cmp
enter
outs
mov
jge
jo
(bad)
(bad)
(bad)
call
push
jmp
adc
test
lds
fisttp
inc
jae
or
shl
sahf
sbb
jp
inc
in
cmp
sub
(bad)
scas
cli
mov
pop
xor
ins
push
push
pop
sub
int
rcr
(bad)
(bad)
call
push
pop
adc
xchg
rcr
sbb
cmp
test
aad
(bad)
(bad)
(bad)
jmp
push
mov
jbe
cmp
out
dec
aaa
out
jg
inc
outs
js
out
jl
push
xchg
hlt
ins
(bad)
(bad)
(bad)
call
test
lahf
ins
xchg
lods
jg
xchg
pop
sub
outs
rcr
mov
jns
(bad)
out
clc
(bad)
fnstsw
mov
daa
xchg
cmps
fisub
cmc
cmps
xchg
push
lods
add
adc
push
xchg
mov
hlt
dec
pop
out
mov
mov
fcomp
inc
leave
dec
shr
add
mov
mov
repnz
fbstp
xor
jg
xchg
ret
or
test
inc
ds
(bad)
(bad)
jg
icebp
add
mov
push
ja
add
arpl
daa
cmp
fwait
test
and
(bad)
(bad)
push
dec
not
sbb
movs
dec
mov
loopne
clc
(bad)
mov
fimul
(bad)
(bad)
(bad)
jmp
cs
test
out
cmps
xor
(bad)
cdq
or
xchg
xchg
pop
fistp
cmps
and
cmp
in
outs
cmps
push
sbb
call
pusha
idiv
mov
outs
fdivp
sti
js
mov
mov
(bad)
(bad)
push
es
inc
jns
(bad)
cmp
add
stos
int
cmp
fadd
push
mov
add
(bad)
(bad)
(bad)
(bad)
jle
pop
push
jmp
fstp
ffreep
arpl
fidivr
or
lds
push
fist
pushf
and
lock
in
pop
repz
ja
and
rcr
cwde
(bad)
(bad)
fcmovnu
outs
jle
mov
xchg
ret
push
lahf
sub
jae
cmp
pop
pop
iret
retf
pop
push
call
std
pop
xchg
test
or
ja
in
dec
(bad)
(bad)
mov
int3
ret
lea
(bad)
adc
inc
pop
out
cmc
jns
push
sub
or
je
sub
(bad)
mov
iret
popw
jge
pop
mov
adc
int3
nop
(bad)
(bad)
mov
fdivrp
in
out
icebp
aaa
lahf
mov
aaa
xchg
inc
ins
push
nop
aam
sub
pop
hlt
(bad)
inc
hlt
dec
adc
out
mov
stos
pop
pop
mov
(bad)
cmp
xchg
xor
sar
(bad)
(bad)
dec
pusha
stos
jl
dec
pop
mov
inc
push
xchg
cmp
test
push
pop
xor
jge
(bad)
(bad)
(bad)
call
enter
add
push
adc
sbb
and
lods
mov
adc
dec
xchg
not
call
fcom
(bad)
push
push
les
enter
ror
mov
cmp
gs
cmp
jmp
jo
ins
and
mov
lods
and
xchg
add
loopne
(bad)
ds
scas
fldz
mov
xchg
pop
xchg
dec
rcl
cmp
(bad)
(bad)
(bad)
(bad)
mov
add
push
dec
cld
fnstcw
int
je
cmc
out
sub
pop
dec
imul
(bad)
(bad)
call
xlat
cmp
nop
push
adc
lea
ret
adc
das
clc
mov
mov
mov
(bad)
jmp
imul
js
adc
dec
or
in
jnp
and
call
or
add
mov
sbb
xor
sub
outs
cdq
sbb
(bad)
(bad)
dec
rol
pop
xchg
jmp
push
mov
cmp
hlt
test
cmp
(bad)
push
dec
adc
mov
inc
jb
lds
repnz
xor
scas
das
shr
dec
push
mov
xor
int3
cli
int3
fst
aaa
push
mov
in
outs
push
adc
pushf
daa
(bad)
jmp
mov
mov
xchg
idiv
ins
inc
lods
and
retf
mov
(bad)
(bad)
(bad)
jmp
lea
movs
and
and
xor
xchg
mov
mov
mov
(bad)
sbb
loopne
out
mov
jmp
fisttp
or
sub
cmp
bound
cmp
out
rcr
aad
or
dec
mov
inc
push
test
xchg
fst
or
and
(bad)
iret
aad
xchg
(bad)
loop
sub
enter
leave
movs
aas
mov
cmc
push
ins
and
mov
femms
and
(bad)
das
mov
pop
int
sar
jmp
cdq
xchg
mov
fld
inc
or
test
jp
dec
(bad)
mov
clc
clc
cwde
scas
jmp
jp
mov
ret
das
push
inc
je
fs
call
rol
mov
into
loope
lahf
inc
nop
loopne
test
lods
inc
js
lods
pop
pop
adc
(bad)
(bad)
call
adc
xor
fidiv
imul
retf
cwde
cmp
or
inc
das
rcl
scas
cli
fisttp
fadd
je
in
mov
xchg
push
mov
(bad)
movs
lods
push
outs
xchg
mov
cli
fwait
icebp
ss
(bad)
dec
mov
ror
call
ficom
push
in
ret
(bad)
loope
jno
imul
push
jmp
pop
mov
(bad)
(bad)
call
xor
cmp
xor
xor
xchg
int3
pop
and
mov
in
sub
(bad)
mov
pop
sahf
xor
mov
pop
test
push
adc
(bad)
(bad)
call
mov
int3
sub
cmps
mov
mov
sbb
inc
push
popf
add
addr16
(bad)
(bad)
(bad)
jmp
mov
inc
mov
adc
jno
inc
addr16
das
sub
(bad)
(bad)
call
adc
mov
inc
out
ja
cmp
jp
fistp
adc
fnstsw
(bad)
(bad)
jmp
xchg
cmps
mov
mov
mov
je
add
or
ss
push
popf
(bad)
xlat
and
pop
ins
sahf
popf
mov
and
stos
iret
push
loop
test
(bad)
fild
data16
js
add
hlt
pop
pop
ret
adc
aas
jg
mov
sub
jns
mov
mov
dec
cmp
pop
fdivr
mov
cmp
test
inc
inc
pop
sub
pop
test
(bad)
(bad)
(bad)
dec
sub
xchg
mov
nop
cmp
jge
mov
int3
shl
loope
adc
(bad)
(bad)
(bad)
dec
mov
push
rcl
(bad)
dec
ret
xchg
push
adc
push
lahf
ror
nop
xchg
ins
(bad)
(bad)
(bad)
jmp
fisub
jmp
and
xlat
adc
int3
aam
call
ret
add
(bad)
call
pop
adc
inc
popf
adc
adc
xchg
sbb
xor
call
test
(bad)
(bad)
mov
mov
retf
pusha
push
xchg
cmp
dec
ret
ds
shr
cmps
icebp
mov
(bad)
(bad)
dec
out
(bad)
pop
(bad)
jne
(bad)
and
mov
or
ds
sub
addr16
movs
(bad)
call
inc
or
cwde
cli
dec
mov
ds
or
in
dec
pop
pop
jae
cmps
(bad)
out
push
(bad)
jmp
repnz
push
push
rcl
jmp
fnsave
xor
and
test
call
ror
es
test
or
and
add
xchg
(bad)
(bad)
(bad)
(bad)
fist
push
sbb
int
push
fmul
shl
ins
adc
sub
jge
idiv
leave
mov
loopne
rol
push
jno
mov
xor
in
gs
call
push
(bad)
xor
dec
pop
xor
mov
or
in
pop
fimul
mov
cld
mov
pushf
cmp
dec
inc
in
mov
mov
(bad)
(bad)
jmp
mov
adc
cmp
imul
rcr
ins
push
gs
lock
sub
xor
jmp
inc
dec
inc
inc
jmp
or
sub
add
inc
popa
test
jmp
les
dec
(bad)
(bad)
(bad)
jg
cmp
mov
pop
cmps
lods
jp
mov
and
ds
cld
jecxz
sar
loop
or
push
std
cdq
movs
inc
cwde
or
lods
jae
or
sahf
mov
lds
mov
or
nop
stos
std
(bad)
(bad)
jg
icebp
or
add
mov
retf
or
cdq
aas
fidiv
and
popf
sbb
sbb
ins
jo
push
movs
push
imul
add
jbe
xchg
ror
lea
test
sub
adc
or
(bad)
(bad)
(bad)
jmp
movs
pop
add
iret
push
js
test
pusha
dec
aam
test
(bad)
nop
loopne
inc
(bad)
(bad)
(bad)
(bad)
(bad)
clc
cmp
lahf
mov
mov
pushf
das
jecxz
pop
out
or
bound
(bad)
jmp
mov
pop
retf
cmp
lds
cmp
sub
jo
adc
cdq
stos
(bad)
(bad)
(bad)
call
jne
mov
sar
es
in
dec
pop
movs
sub
mov
retf
(bad)
(bad)
(bad)
call
cdq
loop
cmp
dec
ins
jb
in
push
pop
retf
test
outs
push
cmp
jg
dec
test
aad
pusha
ret
and
popf
dec
add
sub
leave
call
mov
mov
pop
cmp
push
jmp
dec
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
inc
ret
iret
jl
dec
xchg
mov
dec
mov
pushf
mov
cmp
or
push
popa
mov
jmp
(bad)
(bad)
cmp
jb
ja
mov
pushf
ret
fdiv
test
or
sub
dec
das
nop
jnp
cmp
pop
out
mov
das
data16
sbb
mov
push
mov
jmp
das
(bad)
or
or
inc
mov
jge
pop
push
or
pop
test
and
jg
call
push
lock
mov
jae
(bad)
fstp
sar
(bad)
(bad)
jmp
stos
ret
sbb
dec
shr
or
outs
push
cmp
xchg
outs
fmul
cld
(bad)
cmp
adc
cmc
scas
cmps
call
sets
inc
xchg
test
(bad)
(bad)
(bad)
sti
sbb
enter
lock
pop
inc
mov
cmp
mov
and
mov
inc
bound
(bad)
(bad)
fcomip
shl
or
jp
leave
dec
call
mov
call
ror
fimul
fild
add
(bad)
(bad)
inc
mov
mov
data16
stos
(bad)
mov
xchg
fs
les
out
xchg
clc
out
push
ror
add
jmp
cmp
mov
shl
fdiv
into
cmp
fidivr
or
clc
adc
and
cmp
mov
add
fcom
sbb
fstp
jmp
lds
mov
xor
sub
or
je
imul
sbb
ror
cmp
(bad)
ja
mov
and
inc
sar
(bad)
(bad)
call
popa
cmp
fisttp
adc
push
add
movs
xchg
das
loop
call
jmp
or
fidivr
mov
add
repz
bnd
jmp
(bad)
out
dec
sbb
mov
push
aad
mov
dec
daa
cmps
call
call
mov
rcl
int3
inc
mov
(bad)
(bad)
(bad)
jmp
popa
push
sbb
cmp
stos
sbb
int3
and
xchg
data16
pop
sbb
(bad)
adc
shr
jle
xor
das
test
push
cmp
in
(bad)
adc
fdivp
call
pop
pop
pusha
pushf
push
inc
pop
(bad)
(bad)
cmp
clc
enter
out
cld
clc
mov
outs
mov
mov
(bad)
(bad)
(bad)
inc
dec
xchg
inc
mov
iret
(bad)
repnz
xchg
das
xor
xchg
fstp
push
xchg
mov
jg
(bad)
call
sub
push
mov
fdiv
outs
mov
mov
(bad)
(bad)
(bad)
jmp
in
in
mov
movs
sbb
add
mov
jecxz
xor
push
(bad)
jmp
cwde
mov
aad
test
add
sbb
movs
data16
(bad)
(bad)
call
jns
not
(bad)
sbb
sbb
icebp
cmp
adc
jmp
(bad)
push
pop
pop
mov
dec
scas
cs
nop
(bad)
push
mov
jb
retf
arpl
in
mov
enter
mov
pop
jecxz
rol
xor
lods
stos
add
or
add
(bad)
cmp
sub
jl
adc
sub
loope
dec
jno
push
jb
(bad)
sbb
(bad)
(bad)
jmp
jmp
pusha
test
in
cmp
mov
in
pop
adc
push
jge
(bad)
(bad)
push
inc
repz
mov
sbb
mov
mov
inc
enter
movs
sbb
push
aaa
mov
inc
in
call
dec
cdq
dec
sar
adc
outs
mov
pop
adc
movs
std
push
scas
stos
ins
sar
(bad)
(bad)
dec
inc
xor
loop
dec
imul
cmp
xchg
shr
pop
fild
jnp
mov
fcomp
out
jne
int3
dec
mov
sub
jmp
bound
mov
xor
mov
pop
mov
pop
xchg
bnd
rol
pushf
rcl
fs
or
or
dec
loope
lods
int
call
sbb
stos
push
pop
lea
xchg
mov
dec
movs
mov
mov
stos
(bad)
(bad)
(bad)
call
xchg
icebp
sub
add
bound
pop
lods
inc
ins
es
and
test
pop
lods
mov
sti
(bad)
out
lods
dec
ins
inc
add
add
in
(bad)
(bad)
(bad)
jg
rcr
xchg
lods
pop
ja
mov
cwde
cmc
jns
fistp
cs
jmp
lea
xor
mov
add
(bad)
jmp
aam
mov
popa
push
jns
(bad)
(bad)
(bad)
mov
mov
shl
jmp
loop
out
mov
(bad)
(bad)
adc
ss
(bad)
(bad)
dec
pusha
or
stos
stc
dec
jns
and
imul
call
dec
jne
mov
lods
cmp
pop
cmp
mov
pusha
add
sbb
inc
push
test
int
fdivr
retf
jl
(bad)
jg
jmp
jo
push
and
xor
push
in
adc
cmc
jl
das
pop
ret
call
push
mov
inc
adc
mov
xlat
xor
adc
pop
je
and
pop
loop
add
sbb
jmp
ret
jge
mov
fmul
cmp
scas
jae
jle
out
pop
jo
out
lea
cld
jg
sahf
sbb
mov
mov
scas
loope
aad
(bad)
call
pop
xor
pop
mov
jl
lock
popf
pop
clc
ins
mov
fnstenv
xor
add
mov
xor
(bad)
(bad)
(bad)
jmp
mov
inc
out
push
push
or
shl
std
inc
retf
inc
jae
xor
pop
(bad)
(bad)
(bad)
call
js
add
mov
push
jae
jmp
fsub
rcl
push
inc
ins
jo
pop
aas
repnz
jmp
and
jmp
clc
(bad)
(bad)
fistp
adc
clc
jo
mov
in
(bad)
mov
mov
push
out
mov
add
pop
inc
or
and
pop
mov
data16
(bad)
(bad)
jg
lds
hlt
dec
or
push
inc
adc
lods
retf
out
xchg
adc
and
inc
push
(bad)
dec
lods
ins
cld
inc
sub
jno
push
xor
dec
sbb
push
mov
(bad)
pop
push
adc
cmp
(bad)
outs
jle
out
jo
addr16
addr16
in
mov
(bad)
(bad)
call
repnz
mov
jmp
movs
mov
cmp
mov
cmp
mov
nop
inc
mov
(bad)
(bad)
mov
(bad)
ss
loopne
pusha
in
push
pop
and
vphsubdq
xchg
aad
mov
jg
call
cwde
(bad)
jne
imul
pop
adc
adc
push
mov
cs
(bad)
cs
sub
fld
mov
out
clc
(bad)
call
and
addr16
mov
or
enter
(bad)
rcr
mov
xor
mov
pushf
das
mov
in
push
cld
ficomp
daa
jo
(bad)
(bad)
(bad)
inc
out
jo
adc
jmp
das
pop
cmp
add
loop
scas
inc
dec
cmps
or
xor
(bad)
(bad)
(bad)
(bad)
cmp
sub
dec
mov
scas
call
push
xor
inc
push
movs
(bad)
dec
jo
mov
icebp
push
cmp
in
jno
jp
leave
imul
(bad)
(bad)
call
inc
xchg
sbb
pop
push
push
test
iret
retf
mov
dec
ret
sbb
cld
cmp
xor
fldenv
(bad)
jmp
mov
pop
imul
inc
int
pop
into
shl
aad
add
dec
sub
(bad)
call
fcom
sub
adc
mov
cs
hlt
or
inc
jle
(bad)
mov
icebp
not
fcomp
inc
sub
(bad)
jmp
jmp
dec
jb
xor
inc
das
daa
dec
out
xor
xor
push
jmp
mov
or
cmp
push
or
and
sub
cli
jg
push
jbe
arpl
repnz
mov
sbb
(bad)
(bad)
jmp
mov
pop
push
or
sub
outs
es
xchg
or
inc
addr16
cmp
(bad)
call
mov
neg
retf
test
out
mov
add
push
dec
repz
jbe
(bad)
jmp
xor
xor
cmps
inc
dec
inc
jnp
dec
push
adc
adc
stc
dec
mov
(bad)
(bad)
push
fisttp
dec
lea
push
mov
sti
jo
gs
mov
jle
test
jmp
push
call
pop
int3
movs
xchg
pop
pop
pushf
inc
sub
inc
outs
adc
mov
mov
(bad)
(bad)
push
sahf
adc
in
fisub
shl
in
or
popa
daa
and
loopne
cmp
mov
(bad)
(bad)
dec
push
and
stc
js
mov
test
xor
adc
jg
push
adc
loope
in
fucomp
fdiv
pop
movs
std
and
dec
and
out
es
imul
push
bound
mov
mov
cwde
jmp
iret
inc
mov
push
shl
(bad)
outs
shr
jge
leave
mov
cld
cmps
pop
aam
xchg
jmp
in
(bad)
(bad)
push
call
test
mov
xor
fimul
in
pop
retf
loop
sbb
das
(bad)
pop
or
cli
pop
rcl
shl
jnp
mov
sub
xchg
cmp
aad
or
repz
and
mov
pop
loop
(bad)
shl
(bad)
(bad)
jmp
mov
fisubr
mov
dec
push
lods
daa
daa
xor
(bad)
call
or
mov
inc
icebp
jecxz
push
inc
cmc
icebp
and
cld
arpl
xchg
loope
cdq
call
pop
xchg
test
clc
mov
mov
xor
mov
sbb
mov
(bad)
(bad)
jg
movs
or
fidivr
jge
daa
adc
fs
out
and
xor
pop
xchg
xor
cmp
ja
clc
stos
stos
retf
mov
inc
in
jmp
sub
(bad)
call
test
loop
in
mov
add
xor
sub
pop
movs
inc
jb
ins
jmp
(bad)
(bad)
(bad)
sti
dec
sub
out
mov
xchg
in
mov
sbb
inc
inc
sub
shl
(bad)
(bad)
(bad)
in
sub
leave
jns
xchg
dec
lods
fs
jmp
sti
pop
cmp
mov
mov
mov
jnp
mov
fdivrp
(bad)
(bad)
push
rcr
mov
inc
xchg
jl
lods
mov
sub
cmp
sbb
ror
mov
(bad)
push
stos
test
das
test
xor
pushf
test
cmp
ins
xchg
(bad)
(bad)
call
push
repnz
mov
retf
(bad)
arpl
pop
sub
rol
in
es
ja
cli
stos
(bad)
push
in
inc
enter
daa
lahf
jle
push
das
jg
out
cli
dec
lock
inc
(bad)
mov
lock
pop
std
push
sahf
jle
sbb
aaa
mov
cmp
sbb
sbb
jmp
(bad)
(bad)
inc
je
or
shr
cli
(bad)
jbe
les
dec
dec
and
gs
loope
(bad)
fild
cld
jp
jle
pop
cwde
add
lock
xor
(bad)
pop
mov
(bad)
(bad)
(bad)
call
das
retf
jnp
jp
xchg
call
and
mov
jle
mov
ret
stos
lods
test
pop
(bad)
(bad)
(bad)
call
stos
add
mov
popf
xchg
test
push
stc
mov
mov
(bad)
jmp
mov
idiv
ds
arpl
xchg
(bad)
(bad)
(bad)
call
xchg
mov
cmp
inc
adc
pop
xor
popf
pop
mov
ins
(bad)
(bad)
(bad)
push
pop
push
repnz
sub
fist
ins
mov
popa
dec
pop
fidivr
push
rol
push
lock
(bad)
(bad)
(bad)
dec
mov
xchg
dec
(bad)
cmp
xor
aas
sub
movs
mov
(bad)
pop
xchg
jno
xor
std
(bad)
(bad)
(bad)
cmp
inc
cdq
xchg
xchg
fistp
adc
inc
(bad)
mov
jge
rcr
inc
inc
inc
loop
dec
shl
fld
cmps
fld
adc
sub
mov
fidiv
cli
fwait
inc
loope
cs
sub
int
in
or
cs
push
inc
fsub
push
ss
xchg
fwait
mov
dec
mov
xchg
push
xor
mov
rdmsr
adc
adc
sub
inc
mul
loopne
retf
xor
xchg
sbb
cdq
fdiv
jmp
sahf
in
test
(bad)
pusha
xchg
sbb
jmp
icebp
inc
cwde
pop
(bad)
(bad)
(bad)
mov
xchg
test
mov
iret
idiv
pop
jp
adc
loope
(bad)
(bad)
push
sub
pop
imul
pop
jb
cwde
lea
xor
dec
inc
sub
(bad)
xchg
add
outs
and
inc
lahf
and
mov
or
mov
test
(bad)
(bad)
(bad)
inc
lahf
inc
imul
xor
sub
popa
ss
nop
dec
push
test
xchg
adc
cdq
dec
iret
into
loop
ret
outs
cdq
adc
iret
adc
sbb
enter
pop
mov
adc
push
and
sub
(bad)
(bad)
call
add
pop
addr16
jecxz
test
push
lods
cmp
mov
cdq
mov
(bad)
pop
(bad)
(bad)
call
add
jge
sbb
push
repnz
fisttp
frstor
sbb
std
jmp
pop
sub
(bad)
int
rcl
add
(bad)
(bad)
std
lods
and
popa
imul
inc
mov
cld
jecxz
mov
pop
and
fistp
ds
push
xchg
ret
imul
test
cdq
dec
xor
(bad)
(bad)
call
add
cs
sbb
loop
mov
(bad)
(bad)
cmp
dec
jg
or
cmp
cmc
fdivr
inc
inc
imul
inc
std
jmp
sbb
retf
push
movs
jae
cmp
sub
(bad)
(bad)
(bad)
mov
dec
push
jg
fld
loopne
mov
popa
sub
mov
(bad)
jmp
mov
cld
(bad)
pop
out
loopne
stos
stc
xor
fnstenv
int
mov
neg
adc
add
inc
xchg
adc
dec
fdiv
in
mov
push
dec
or
(bad)
(bad)
(bad)
call
mov
mov
repnz
test
cmp
push
pop
lods
int3
mov
push
push
mov
sbb
fcomp
data16
call
xchg
pusha
ror
inc
lea
imul
jmp
lock
pusha
(bad)
call
fistp
les
(bad)
jne
jnp
push
pop
aaa
in
(bad)
rol
into
(bad)
xor
(bad)
(bad)
jmp
arpl
(bad)
ja
test
jg
in
mov
sahf
inc
nop
lahf
cmp
loope
(bad)
(bad)
inc
sti
xor
push
dec
sub
dec
inc
sbb
mov
mov
add
cld
jmp
fwait
add
mov
and
and
mov
(bad)
inc
loopne
data16
mov
inc
callw
jle
fbstp
aaa
xor
pop
and
inc
inc
(bad)
mov
sbb
add
adc
adc
jno
sbb
int3
scas
movs
(bad)
(bad)
(bad)
inc
inc
or
sbb
int3
std
(bad)
sbb
jecxz
in
not
adc
mov
jmp
(bad)
(bad)
call
inc
jp
mov
popf
fsub
lods
mov
inc
mov
shl
inc
and
cmp
jnp
xchg
lahf
ret
dec
shl
xor
(bad)
out
clc
inc
pop
xchg
gs
into
inc
cmp
rcl
xor
gs
push
cmp
(bad)
(bad)
(bad)
jmp
sub
push
out
inc
push
sub
sub
mov
jns
jg
sar
(bad)
in
test
lea
mov
outs
fiadd
add
cld
adc
mov
jecxz
js
fistp
int3
adc
xor
(bad)
clc
mov
jl
scas
jecxz
aad
sbb
out
call
(bad)
inc
adc
push
scas
dec
adc
or
sub
fiadd
pushf
sub
jmp
out
bound
or
es
or
repnz
xchg
(bad)
(bad)
(bad)
call
sti
ret
jae
jbe
test
mov
arpl
pop
add
(bad)
push
jb
xor
hlt
(bad)
jmp
sub
call
setge
mov
adc
sti
call
push
repnz
push
xor
pushf
movs
aam
jbe
iret
cs
jg
pop
xor
cld
jmp
jmp
or
(bad)
jae
dec
jmp
push
adc
cs
add
add
out
(bad)
fist
push
retf
add
addr16
adc
cmp
leave
leave
inc
push
fst
sub
(bad)
(bad)
(bad)
ficomp
les
in
retf
lea
dec
add
pushf
out
aad
jne
div
push
fs
adc
push
mov
test
stos
adc
js
fcos
call
or
jnp
out
xchg
dec
cdq
sub
movs
jno
cld
cmp
jmp
bound
cmp
mov
cdq
push
dec
push
jb
xor
test
cld
jnp
jns
(bad)
(bad)
(bad)
cli
mov
xchg
or
mov
mov
inc
push
mov
xchg
out
pop
push
pop
or
jmp
xchg
sub
shl
jns
je
add
out
in
adc
(bad)
(bad)
(bad)
inc
xchg
sahf
add
adc
cmps
cs
push
std
lock
jmp
pop
cmp
clc
call
and
ret
enter
(bad)
and
dec
movs
jmp
test
or
(bad)
mov
mov
inc
mov
add
and
movs
push
sub
jno
(bad)
(bad)
jmp
jl
aad
aam
dec
and
dec
(bad)
ja
push
mul
push
lods
sbb
(bad)
(bad)
inc
pop
xchg
daa
xchg
repz
add
adc
xor
add
(bad)
(bad)
(bad)
push
(bad)
mov
iret
xor
call
retf
fsubp
and
call
pop
push
shr
pop
out
(bad)
(bad)
(bad)
fmul
dec
dec
scas
(bad)
xchg
inc
iret
fwait
mul
xlat
pop
inc
retf
adc
cmovnp
(bad)
push
out
enter
data16
jne
dec
leave
lock
fmul
push
fcom
cmps
pop
ja
clc
dec
jns
sub
or
std
push
jno
pop
(bad)
jmp
sar
out
jnp
mov
cwde
mov
out
das
call
call
stos
ins
pop
movs
adc
and
or
call
mov
ret
call
mov
das
dec
call
cmc
push
or
dec
push
and
cwde
fist
cmp
(bad)
(bad)
(bad)
call
aas
popf
mov
sbb
cmp
mov
imul
jmp
jle
xor
stos
mov
ret
(bad)
sbb
xchg
jle
mov
(bad)
outs
sbb
inc
lods
stos
or
out
call
and
out
repz
push
cmp
data16
or
adc
jmp
push
push
bsf
mov
imul
lock
sbb
and
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
jae
shl
push
dec
mov
(bad)
(bad)
jmp
in
sub
daa
movs
aaa
int3
shl
push
add
xor
lods
retfw
(bad)
fadd
push
pop
popa
(bad)
(bad)
inc
sbb
nop
stos
push
es
sbb
imul
sbb
sbb
cdq
lea
rcl
adc
js
cld
(bad)
(bad)
call
iret
in
or
push
lea
pushf
fwait
sar
xchg
cmp
int3
cmp
cwde
sahf
(bad)
(bad)
push
call
cmp
xor
push
(bad)
push
popf
mov
imul
in
mov
loopne
call
xor
pushf
scas
jb
cli
sub
nop
push
pop
imul
jmp
ss
sub
dec
ret
adc
cmp
push
mov
add
cmp
xor
cs
(bad)
push
adc
or
es
xchg
lods
int3
dec
dec
js
inc
pushf
std
in
icebp
adc
jmp
xlat
mov
adc
mov
(bad)
in
mov
data16
(bad)
(bad)
mov
idiv
mov
bnd
scas
sar
in
mul
das
test
pop
push
and
call
mov
lods
mov
imul
xchg
add
push
pop
cmps
int3
cdq
xchg
pop
movs
in
(bad)
(bad)
(bad)
jmp
lea
sub
mov
push
mov
mov
mov
das
xchg
jnp
(bad)
lods
xchg
cmp
(bad)
in
in
fwait
hlt
and
rcr
push
cli
lods
pop
add
(bad)
(bad)
push
loop
xor
rcr
retf
ret
pop
jnp
into
mov
or
jp
mov
sar
(bad)
call
enter
mov
mov
dec
fs
adc
cwde
scas
je
(bad)
(bad)
jg
or
mov
shr
push
inc
std
sub
jp
cli
pop
jae
mov
jmp
clc
fistp
sahf
popa
setae
aas
or
add
sub
pop
movs
repz
(bad)
(bad)
(bad)
push
repnz
jbe
outs
cmp
xchg
or
sbb
aam
imul
loope
popa
xchg
shl
(bad)
(bad)
dec
push
das
mov
shl
jp
sbb
adc
adc
outs
fidivr
add
push
sbb
cld
mov
fistp
cmp
ret
(bad)
mov
fcomip
(bad)
call
jge
in
test
and
mov
lahf
(bad)
aaa
sub
arpl
push
(bad)
(bad)
call
jae
mov
hlt
sbb
loope
push
push
nop
retf
cs
(bad)
(bad)
push
dec
push
sbb
mov
mov
sahf
inc
sub
mov
(bad)
(bad)
(bad)
jmp
mov
sub
int3
or
pushf
and
lods
xor
imul
mov
mov
(bad)
jmp
push
sub
out
dec
lahf
retf
lds
jecxz
stos
dec
mov
push
mov
into
call
push
lods
addr16
std
gs
ss
mov
mov
and
test
test
mov
call
push
test
inc
sub
fwait
xor
ins
scas
xor
test
(bad)
inc
in
xor
jmp
cwde
sbb
repz
(bad)
lea
jae
jg
imul
(bad)
(bad)
call
mov
push
or
aas
mov
retf
rcr
dec
jae
(bad)
cli
mov
pop
mov
mov
addr16
cmp
rol
leave
adc
(bad)
(bad)
cld
out
inc
mul
mov
inc
fwait
clc
in
jnp
stc
addr16
ret
mov
jge
shr
jbe
popa
mov
mov
(bad)
(bad)
jmp
jp
dec
pop
mov
test
nop
mov
jp
inc
pop
push
mov
mov
jl
add
(bad)
push
out
pusha
hlt
ins
mov
jo
std
mov
dec
lock
xor
fdiv
pop
mov
pop
ja
dec
xchg
shl
out
cli
inc
fwait
and
or
cmp
pusha
and
std
fsubr
stos
sub
mov
(bad)
(bad)
(bad)
call
jnp
popa
or
fisttp
lock
push
mov
inc
sbb
inc
(bad)
(bad)
(bad)
dec
dec
xchg
mov
push
adc
inc
or
cs
fs
sbb
inc
mov
(bad)
jmp
sbb
rdpmc
mov
pushf
inc
fild
jge
pop
mov
popa
es
(bad)
(bad)
(bad)
call
ret
add
sub
dec
and
es
inc
adc
mov
mov
aaa
(bad)
dec
pop
(bad)
mov
dec
fucomi
cmps
or
cld
push
sbb
push
fcmovnbe
cmp
(bad)
(bad)
fild
outs
jnp
gs
or
pusha
movs
add
jb
ror
sbb
mov
test
cmp
cmp
gs
ins
xchg
add
sbb
(bad)
(bad)
(bad)
call
int
xchg
lods
inc
ret
je
cmp
(bad)
out
(bad)
(bad)
(bad)
mov
shl
inc
mov
push
and
cmp
test
icebp
cmp
adc
mov
xor
shl
pop
sub
xor
sti
xchg
dec
test
clc
(bad)
call
dec
es
loopne
pop
jp
cmp
and
adc
or
adc
(bad)
sar
(bad)
(bad)
jmp
or
jp
or
mov
shl
inc
adc
movs
xor
xchg
or
(bad)
(bad)
call
and
sbb
add
sub
ficomp
jae
push
push
sub
dec
push
(bad)
(bad)
(bad)
jmp
jbe
int
shr
test
aad
sbb
sbb
adc
test
push
mov
jo
int3
je
sbb
mov
push
fsubp
fldl2t
xor
das
imul
ds
cld
(bad)
(bad)
(bad)
mov
xchg
mov
mov
jge
ror
or
pop
(bad)
mov
push
jns
adc
(bad)
call
cwde
cmp
test
lds
or
movs
pop
dec
and
xchg
sub
sbb
mov
(bad)
(bad)
push
cdq
loope
jne
and
out
stos
call
or
cpuid
icebp
cs
enter
call
and
out
sub
xor
fsubr
jnp
into
xchg
or
xor
fcmovnu
in
add
call
sahf
pop
idiv
add
(bad)
(bad)
jmp
mov
bound
xchg
std
inc
scas
add
mov
mov
sbb
jmp
retf
push
icebp
mov
inc
fbstp
mov
pop
or
call
into
(bad)
dec
sbb
push
in
mov
sbb
inc
dec
xchg
test
jmp
(bad)
push
xor
or
pop
cdq
sub
arpl
push
loopne
sbb
fisub
mov
pop
dec
(bad)
(bad)
(bad)
(bad)
fistp
les
add
out
or
mov
(bad)
mov
sub
mov
(bad)
cdq
and
ds
rol
fld
(bad)
(bad)
inc
(bad)
(bad)
arpl
adc
lea
loop
(bad)
retf
hlt
dec
xchg
sub
mov
pop
push
dec
sar
hlt
dec
scas
lahf
cmps
shr
adc
lods
mov
(bad)
(bad)
ret
pushf
sbb
mov
mov
cmps
std
dec
sbb
adc
jecxz
clc
(bad)
(bad)
jmp
or
in
push
xor
inc
lods
pop
adc
fimul
daa
fld
cmps
(bad)
(bad)
(bad)
jmp
mov
sub
fstp
mov
jnp
cmc
push
xor
add
ror
xchg
les
cmp
out
mov
in
push
mov
xchg
clc
sbb
adc
or
inc
dec
cmps
sub
sbb
imul
push
push
test
scas
add
pop
push
fidiv
mov
cmp
enter
test
inc
(bad)
push
cld
fnstsw
sub
aad
pusha
sar
(bad)
(bad)
call
stc
sbb
inc
sbb
mov
inc
imul
sub
push
mov
dec
jae
scas
sbb
xchg
mov
(bad)
(bad)
jmp
jb
ds
leave
out
cli
dec
retf
cld
or
fmul
cmp
(bad)
(bad)
mov
add
stc
fstp
jnp
jle
pop
or
test
out
mov
jl
pop
mov
pop
or
clc
(bad)
(bad)
push
call
sbb
inc
mov
ja
xchg
clc
pop
xchg
(bad)
call
fnstcw
cmc
icebp
inc
ret
aad
mov
rol
jp
sub
push
dec
out
push
(bad)
(bad)
(bad)
(bad)
aas
sbb
jl
pop
out
js
add
jge
lods
rcl
in
push
arpl
aas
inc
sahf
ins
fwait
mov
push
test
fist
mov
inc
ins
jl
in
pusha
xchg
dec
and
scas
(bad)
call
movs
inc
fs
mov
push
push
mov
mov
(bad)
(bad)
inc
ror
add
xor
xchg
sbb
jmp
icebp
imul
aam
xchg
jg
test
test
mov
ins
xchg
cmp
(bad)
fcomip
fdiv
test
js
ret
cmp
in
sahf
pop
aaa
iret
push
cmp
jmp
lock
xor
loop
jns
inc
dec
pop
(bad)
mov
xchg
cmp
push
mov
mov
cmp
pop
std
(bad)
(bad)
jmp
movs
jp
cmc
jle
sbb
leave
mov
(bad)
(bad)
push
xor
(bad)
(bad)
call
aas
dec
add
push
jb
and
jg
cmp
cs
mov
lahf
and
push
(bad)
jmp
in
or
xchg
mov
sub
cli
mov
add
(bad)
(bad)
call
push
out
out
in
inc
xor
dec
popf
lahf
movs
ins
xor
call
ss
inc
inc
fisubr
rcl
push
mov
int3
dec
push
dec
cmps
push
ret
mov
push
inc
xchg
fs
out
fnsave
icebp
inc
aaa
cdq
(bad)
pushf
sbb
cmp
(bad)
fcomip
dec
mov
sub
outs
(bad)
lahf
aas
cli
jg
fidivr
icebp
jmp
pop
add
test
loop
mov
xlat
jg
sub
push
rcl
adc
sub
mov
in
jp
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
stos
mov
repz
jmp
or
call
sbb
mov
inc
ds
xchg
lea
(bad)
(bad)
(bad)
(bad)
cmp
imul
retf
scas
or
add
call
(bad)
(bad)
(bad)
call
pop
out
and
push
add
fwait
in
and
xlat
fcmovbe
lds
xor
outs
add
jmp
rcl
je
aaa
jge
ror
inc
not
xchg
jg
(bad)
dec
fisubr
or
pusha
fisubr
lods
xchg
xchg
push
cli
movs
inc
mov
popf
xchg
jmp
mov
imul
xor
or
jns
sahf
pushf
and
and
and
(bad)
(bad)
push
pushf
sbb
cmp
sbb
mov
popf
enter
outs
(bad)
out
sbb
sar
cmp
call
inc
xor
imul
int3
enter
mov
loope
cmp
jo
mov
cwde
inc
push
add
inc
mov
mov
enter
(bad)
mov
retf
repz
jb
movs
xor
cmps
test
and
(bad)
(bad)
(bad)
sub
xor
ds
and
imul
lods
shr
cli
jns
mov
(bad)
jmp
push
and
sbb
hlt
(bad)
mov
les
aaa
sbb
add
clc
sub
or
call
or
mov
mov
mov
add
adc
mov
clc
add
ss
mov
mov
mov
jmp
in
push
cmps
lods
aaa
dec
sar
mov
xor
xchg
sub
(bad)
mov
mov
cmp
lods
stc
cmc
lahf
dec
js
pop
xchg
call
std
das
mov
outs
clc
(bad)
jmp
mov
fadd
sbb
sti
out
stos
aam
movs
and
jo
mov
jmp
out
push
and
sbb
or
mov
(bad)
ficom
daa
test
jecxz
(bad)
(bad)
(bad)
jg
adc
in
sub
call
arpl
lock
sub
and
in
pop
test
mov
(bad)
push
xchg
sahf
cld
ds
push
jg
cmp
call
xor
sbb
(bad)
(bad)
call
loope
jg
or
(bad)
fs
(bad)
shl
inc
pusha
outs
adc
cld
(bad)
(bad)
(bad)
(bad)
mov
xchg
jl
xor
xor
movs
loop
xchg
and
or
cld
pop
mov
(bad)
(bad)
(bad)
jmp
fdiv
add
inc
addr16
loop
or
mov
and
cmp
retf
push
aam
inc
or
(bad)
(bad)
(bad)
mov
mov
loop
mov
xor
sub
(bad)
(bad)
jg
(bad)
mov
les
cmp
sbb
xchg
outs
loope
loope
les
mov
inc
(bad)
jmp
xchg
dec
adc
jl
stc
push
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
jg
fcomp
stos
pop
popf
pop
leave
inc
test
pushf
push
mov
(bad)
mov
test
mov
pop
call
mov
(bad)
(bad)
(bad)
(bad)
out
call
sbb
add
mov
mov
dec
dec
sbb
scas
repnz
sbb
add
jae
(bad)
call
xchg
sbb
jns
dec
dec
shl
sub
push
retf
push
cli
(bad)
jg
cmps
inc
nop
in
mov
mov
jmp
mov
lock
jl
add
es
(bad)
push
mov
fisub
jecxz
xchg
cmps
push
rcr
inc
loop
and
es
popa
sbb
mov
rcl
(bad)
(bad)
(bad)
(bad)
clc
pop
dec
or
mov
inc
adc
add
in
xchg
or
pop
and
cmp
(bad)
(bad)
call
push
frstor
ins
fnstenv
push
cmp
pushf
sub
fwait
cwde
cmp
or
(bad)
push
mov
cmp
mov
add
scas
xchg
mov
rcl
cdq
ss
pusha
dec
test
call
ins
mov
cdq
int
jno
jp
(bad)
jg
sub
repnz
int3
nop
pop
shr
xchg
es
fs
xor
dec
(bad)
shr
cli
call
loopne
cmp
cmc
cmp
xchg
pop
into
jecxz
out
mov
ror
pushf
(bad)
jne
(bad)
icebp
cmp
sbb
movs
sub
inc
outs
les
aas
std
shl
jl
add
sbb
adc
loopne
loopne
jbe
or
adc
inc
pop
mul
sub
dec
dec
adc
adc
inc
cli
mov
fucomp
fdivr
push
stos
add
fs
push
loopne
add
ss
cld
(bad)
dec
add
ins
sbb
xor
scas
test
push
push
pop
cli
rcr
int3
xor
xchg
xchg
movs
push
dec
or
out
je
clc
popf
out
sbb
mov
(bad)
(bad)
inc
aam
inc
enter
in
fdiv
gs
mov
dec
outs
fimul
aad
imul
sub
add
dec
call
in
inc
push
adc
push
ins
in
add
lock
pop
dec
shl
ins
cli
imul
pop
fstp
nop
mov
scas
jmp
sti
and
outs
loopne
int
pop
jne
ror
(bad)
(bad)
mov
and
push
sub
inc
fistp
bound
push
xor
sbb
je
(bad)
(bad)
(bad)
(bad)
ds
or
dec
sahf
mov
xor
test
and
xchg
in
(bad)
push
cld
jmp
dec
sbb
xor
mov
(bad)
(bad)
(bad)
call
xor
repz
movs
test
dec
js
xchg
xor
pusha
pusha
inc
stos
dec
cmps
dec
mov
mov
test
in
dec
hlt
xchg
or
addr16
jmp
sub
jmp
test
mov
test
(bad)
cmp
fwait
(bad)
(bad)
(bad)
dec
xchg
mov
cmc
or
retw
xor
jl
popa
xor
xchg
cmp
(bad)
jmp
jl
mov
jle
mov
jg
push
aad
pop
les
enter
jmp
add
cld
stos
cmp
mov
scas
jnp
sub
xor
inc
inc
(bad)
(bad)
(bad)
jmp
xor
xchg
push
aad
enter
sub
imul
mov
xor
movs
mov
sbb
pop
xchg
push
push
retf
stos
sub
jo
retf
sbb
mov
mov
in
repnz
gs
fdivrp
push
cwde
mov
mov
sub
xchg
mov
xor
mov
pop
cmp
adc
xsaveopt
pop
xor
fcmovbe
adc
adc
addr16
rcl
jno
pop
mov
mov
repnz
(bad)
(bad)
dec
sbb
aad
gs
aam
inc
test
xchg
(bad)
push
out
xchg
xor
inc
pop
mov
push
(bad)
(bad)
fcomip
test
pop
rcl
xor
mov
sbb
mov
(bad)
jge
sbb
call
(bad)
add
dec
vpunpcklqdq
call
aaa
std
inc
shl
cmp
and
out
sbb
and
jns
mov
movs
mov
clc
stos
cmp
push
(bad)
out
or
mov
shr
xor
clc
push
xor
(bad)
(bad)
jg
add
pop
sub
sti
cmp
mov
push
dec
sbb
(bad)
(bad)
jg
inc
fmul
add
bnd
adc
lds
and
inc
clc
inc
cmp
and
into
cdq
sub
loop
xchg
mov
adc
je
pushf
call
push
add
xor
into
(bad)
(bad)
(bad)
jmp
push
push
push
pop
inc
push
(bad)
mov
dec
mov
or
xchg
enter
sub
sti
sti
loope
mov
or
sub
imul
(bad)
(bad)
(bad)
mov
mov
sbb
mov
(bad)
inc
push
jbe
xor
cmps
ret
mov
shl
(bad)
(bad)
(bad)
push
leave
outs
dec
mov
cmp
inc
and
jecxz
mov
inc
cwde
push
call
mov
inc
scas
cli
(bad)
dec
movs
mov
push
xchg
pushf
mov
shr
jno
ins
inc
mov
das
shr
or
sbb
or
dec
rcl
loop
or
add
mov
(bad)
push
xor
retf
cmc
cwde
or
fcom
push
inc
push
mov
push
or
mov
add
mov
mov
jns
test
mov
popa
sub
pop
shl
clc
xor
movs
call
std
call
pop
xchg
mov
mov
jmp
cwde
(bad)
fisub
call
mov
pop
ins
cmp
or
pop
stos
in
and
or
inc
(bad)
(bad)
(bad)
mov
sahf
ret
adc
and
sub
lea
pushf
ret
dec
repz
in
fdivr
out
or
mov
xchg
mov
pop
cdq
inc
ss
mov
(bad)
(bad)
push
dec
push
rol
retf
sub
imul
ret
cmps
mov
sbb
xchg
cli
(bad)
(bad)
(bad)
push
xor
cmp
sub
call
(bad)
sub
es
inc
sti
daa
or
(bad)
(bad)
jmp
and
stc
jg
(bad)
jb
sub
nop
mov
test
cwde
inc
pop
jbe
cmp
mov
mov
(bad)
call
add
fnstsw
retf
fcmovne
or
pop
mov
or
mov
(bad)
(bad)
(bad)
call
inc
add
jle
iret
aas
jnp
push
jb
mov
adc
test
dec
addr16
(bad)
(bad)
push
rol
mov
xor
pop
in
call
xlat
mov
dec
sbb
push
shl
call
out
scas
pop
inc
repnz
ins
pop
add
scas
cli
(bad)
call
mov
pop
inc
sbb
sbb
jmp
mov
mov
(bad)
in
clc
loop
pushf
jns
jp
and
pop
sbb
ret
add
cmp
fisttp
out
xor
data16
rol
movs
imul
jbe
fucom
test
std
xchg
(bad)
(bad)
(bad)
inc
xchg
stc
cmp
xchg
dec
addr16
xchg
dec
cmp
int3
mov
jle
loopne
push
add
(bad)
call
sbb
mov
retf
aam
mov
icebp
jmp
retf
push
call
mov
rol
in
int3
(bad)
out
aad
scas
mov
fnstenv
pop
fs
and
je
sub
jo
mov
(bad)
mov
jnp
ins
jg
movs
dec
bound
jne
pop
mov
arpl
adc
dec
cmp
(bad)
(bad)
call
js
(bad)
loop
xlat
mov
clc
neg
cmp
out
inc
jp
add
mov
dec
or
fisttp
push
rol
cdq
mov
dec
sbb
pop
fmul
adc
in
dec
inc
or
or
(bad)
(bad)
(bad)
jmp
imul
mov
aas
jp
mov
ds
mov
push
xor
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
data16
or
push
sub
sub
data16
adc
cld
(bad)
(bad)
(bad)
jnp
fdivr
sub
dec
pop
clc
pop
sub
call
imul
lahf
push
movs
cmps
stos
mov
jecxz
loopne
mov
scas
popa
rol
out
shl
jnp
(bad)
call
or
jge
outs
sbb
xor
lods
sub
xor
push
shl
(bad)
(bad)
jg
out
aas
mov
inc
or
mov
call
je
sbb
scas
stos
jp
inc
inc
jbe
in
mov
(bad)
(bad)
(bad)
jmp
jg
push
mov
(bad)
das
add
lods
or
add
push
or
(bad)
jmp
xchg
jno
aad
and
or
repz
adc
fwait
retf
mov
(bad)
(bad)
jmp
mov
sbb
pusha
cmp
mov
push
(bad)
call
inc
imul
(bad)
je
jmp
(bad)
jmp
pop
sub
das
arpl
ret
gs
cmc
push
mov
sbb
jge
(bad)
(bad)
mov
cmps
cs
mov
cmp
jno
jbe
mov
(bad)
adc
xor
fild
lea
pusha
xor
aam
xor
dec
xchg
add
push
nop
sub
sbb
mov
xchg
gs
in
(bad)
jmp
imul
xchg
mov
std
lock
jb
(bad)
(bad)
(bad)
call
loopne
int3
pop
mov
(bad)
sbb
jle
xchg
xor
cmps
stc
mov
cmps
and
sub
cmp
imul
jmp
les
push
(bad)
(bad)
jmp
in
dec
mov
retf
es
push
xor
cmp
add
xchg
imul
mov
jno
je
fcmovb
cmp
pusha
aad
clc
mov
push
enter
pop
mov
sbb
or
imul
loope
jg
lea
(bad)
(bad)
call
movs
loop
push
jge
push
push
pop
enter
cmp
mov
or
mov
push
lock
(bad)
popa
ds
test
pop
sbb
mov
sar
(bad)
(bad)
jmp
shl
jl
or
xor
xchg
popf
cmp
or
mov
shr
jle
mov
leave
sub
xchg
mov
pusha
pop
mov
cwde
mov
jmp
(bad)
(bad)
call
mov
gs
sbb
fdiv
inc
cdq
test
sbb
adc
or
imul
cmp
mov
iret
xchg
cmp
(bad)
(bad)
call
ret
mov
inc
lock
mov
jae
sbb
pushf
movs
dec
jno
mov
sub
fild
xor
mov
mov
(bad)
(bad)
jmp
inc
jg
and
pop
scas
test
mov
inc
and
mov
jmp
pop
lods
pop
movs
fisubr
enter
cmps
clc
aaa
add
lahf
or
cmp
jne
and
scas
loope
(bad)
jg
fs
(bad)
inc
lea
cs
ret
pop
jb
push
fdiv
or
(bad)
(bad)
dec
xor
xchg
cmp
and
and
inc
inc
(bad)
xchg
or
add
cmp
push
aad
push
(bad)
dec
int
arpl
adc
ds
sub
call
(bad)
(bad)
(bad)
jmp
mov
pop
mov
dec
adc
popa
inc
mov
pusha
push
shrd
(bad)
(bad)
(bad)
jnp
mov
mov
test
inc
pop
enter
out
cmp
sbb
arpl
fs
jno
push
daa
(bad)
pop
mov
movs
inc
sbb
stos
std
pop
in
pop
out
adc
push
cld
push
cmps
jle
dec
call
es
inc
stc
and
scas
cli
call
jg
sbb
xchg
mov
jne
fdivr
xor
ds
sar
in
(bad)
(bad)
dec
aas
and
loope
mov
pop
dec
shl
push
push
cmp
sub
inc
push
cmp
pop
add
xchg
pop
inc
mov
pop
out
cmp
(bad)
(bad)
inc
adc
loopne
pop
inc
into
cli
adc
inc
jno
cmp
xchg
push
aas
sub
call
add
xchg
or
mov
sbb
cwde
pop
or
jg
adc
shr
(bad)
(bad)
(bad)
(bad)
in
xchg
pop
call
test
jb
push
je
bound
push
cli
jmp
(bad)
(bad)
cmp
shl
sar
push
jle
xchg
mov
xor
daa
xchg
(bad)
(bad)
(bad)
jmp
(bad)
jbe
pop
or
retf
dec
adc
xchg
(bad)
(bad)
call
push
inc
jecxz
lock
or
aad
popa
scas
cmp
sahf
or
js
(bad)
(bad)
(bad)
fistp
fistp
pusha
loop
mul
pop
mov
in
(bad)
xchg
push
xchg
clc
xchg
ror
(bad)
(bad)
(bad)
push
push
mov
(bad)
xchg
aam
add
les
inc
cmps
sbb
stos
dec
retf
inc
jae
sbb
imul
(bad)
(bad)
call
test
add
hlt
mov
add
inc
push
out
cmp
or
jmp
xchg
clc
push
ss
les
sub
xchg
scas
(bad)
(bad)
(bad)
jmp
mov
push
xchg
add
and
push
data16
xchg
(bad)
out
cli
mov
inc
cmps
ja
mov
mov
jne
dec
inc
jo
push
add
jmp
sbb
rol
ret
ss
sbb
movs
movs
enter
(bad)
fldcw
mov
pop
js
mov
stos
nop
mov
ss
test
call
cmp
push
fs
sti
dec
pop
push
out
mov
and
adc
adc
(bad)
(bad)
(bad)
call
out
in
push
(bad)
iret
movs
sub
push
rcl
pop
mov
push
ss
test
(bad)
(bad)
jmp
adc
sub
call
aad
and
add
sub
movs
int
cmp
cld
(bad)
jmp
and
xchg
inc
pop
adc
push
mov
jno
(bad)
dec
lods
pop
in
inc
mov
in
jecxz
mov
out
(bad)
xlat
out
fwait
inc
jl
(bad)
dec
(bad)
or
jns
(bad)
(bad)
sbb
add
jbe
(bad)
cld
mov
pop
aaa
adc
clc
jmp
and
pop
cmp
sti
leave
fcomip
(bad)
call
dec
das
pop
jmp
mov
push
mov
clc
inc
adc
pusha
and
ja
ja
fld
mov
movs
fsub
mov
(bad)
(bad)
(bad)
in
inc
push
pop
into
pop
js
iret
pop
cmp
movs
jg
jmp
xchg
aad
cmp
stos
sbb
add
mov
pop
inc
out
out
xchg
cmp
(bad)
(bad)
call
sbb
xchg
scas
sbb
mov
in
loop
adc
push
or
pop
out
pop
stos
add
push
movs
xchg
sub
fiadd
movs
sub
outs
mov
mov
push
dec
(bad)
(bad)
(bad)
jmp
mov
in
popf
cmps
push
loope
jo
jae
cmps
pop
xchg
mov
addr16
movs
clc
les
add
(bad)
inc
xlat
push
pop
sbb
jmp
rol
cmp
out
inc
icebp
mov
add
inc
dec
push
aad
(bad)
mov
pop
pop
mov
dec
push
aam
mov
sbb
loop
and
ins
ror
iret
mov
dec
loop
cmps
(bad)
(bad)
jmp
jp
cmc
sti
shl
cmp
sahf
(bad)
and
mov
dec
sahf
in
push
pop
and
call
(bad)
cmp
mov
jmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jle
or
adc
sub
inc
iret
dec
jnp
neg
aas
mov
pop
inc
dec
push
dec
xchg
xlat
cmp
xchg
mov
inc
fucomp
in
dec
pusha
out
xlat
jecxz
(bad)
out
mov
or
fidiv
mov
sub
lds
je
xchg
pop
(bad)
jg
outs
push
dec
jp
push
pop
cmc
je
shl
ja
xchg
call
in
or
repz
in
xchg
sbb
mov
scas
(bad)
(bad)
jmp
es
dec
stos
dec
popa
pop
push
and
mov
push
(bad)
jle
pop
dec
pop
jae
call
and
sbb
pushf
(bad)
(bad)
(bad)
dec
adc
daa
jmp
ret
fidivr
stc
repz
mov
adc
(bad)
(bad)
(bad)
push
mov
pop
cmp
shr
inc
pop
or
imul
dec
fist
sub
(bad)
(bad)
dec
add
mov
push
arpl
add
imul
into
mov
xchg
(bad)
(bad)
mov
mov
imul
dec
cmps
nop
fwait
mov
(bad)
in
(bad)
frstor
sar
jg
loopne
outs
loope
sbb
repz
add
(bad)
call
inc
mov
adc
in
dec
cmp
sbb
aas
test
pop
mov
cli
(bad)
(bad)
jmp
sbb
and
pop
out
and
or
or
js
(bad)
mov
inc
test
or
je
cmp
xor
cmp
inc
jnp
(bad)
(bad)
inc
ret
xchg
jae
sbb
jnp
inc
xor
lea
add
(bad)
loopne
(bad)
(bad)
jmp
fbld
jmp
jle
push
jnp
lds
int3
(bad)
xor
retf
xchg
cmp
mov
into
sahf
cdq
into
test
aas
out
not
retf
cmp
jmp
mov
jb
dec
push
sar
jl
sti
(bad)
out
int
push
push
retf
(bad)
(bad)
(bad)
ficomp
pusha
rcr
push
retf
or
nop
jge
pop
js
rep
les
std
leave
inc
lock
sar
inc
movs
rol
out
lds
mov
(bad)
pop
js
fnstcw
dec
test
mov
ja
mov
(bad)
xor
(bad)
dec
outs
div
loope
out
sbb
lahf
std
(bad)
jmp
(bad)
aas
es
popf
call
mov
xchg
sub
cmp
cmp
jbe
and
sahf
cs
pop
mov
test
(bad)
(bad)
jmp
int3
pop
ins
dec
xor
mov
popf
fwait
sub
xchg
sbb
push
fnstcw
jmp
(bad)
mov
add
in
xchg
mov
sub
(bad)
rol
(bad)
jmp
(bad)
(bad)
(bad)
call
add
and
mov
je
mov
inc
retf
mov
push
inc
idiv
(bad)
(bad)
dec
xchg
push
sub
dec
pop
mov
(bad)
and
test
fcmovb
test
not
(bad)
(bad)
(bad)
jmp
(bad)
les
ret
xor
push
push
jecxz
and
aas
cmp
mov
(bad)
fbld
jecxz
pop
das
and
jl
lahf
std
aam
dec
stos
shr
cmp
(bad)
(bad)
call
xor
fcmovbe
push
xchg
add
push
mov
in
jmp
pop
cmps
out
(bad)
(bad)
(bad)
dec
inc
imul
test
leave
test
pop
aam
xchg
adc
push
ret
int
(bad)
fcomip
sar
stc
pop
fsubr
or
cwde
xchg
cmc
xchg
cmp
(bad)
call
inc
imul
push
cmp
push
xchg
or
sub
frstor
mov
in
lods
(bad)
sub
test
fs
mov
fdiv
and
fwait
in
mov
(bad)
(bad)
call
ja
adc
jmp
dec
retf
arpl
shl
gs
stc
or
and
pushf
retf
clc
(bad)
(bad)
jmp
lahf
xchg
cmp
cmp
fwait
je
jge
int
mov
pop
pop
(bad)
(bad)
jmp
sbb
cwde
ins
fnstcw
test
leave
inc
push
add
fnstenv
adc
(bad)
(bad)
dec
leave
adc
push
mov
push
push
test
std
cmp
iret
daa
adc
(bad)
(bad)
in
push
add
adc
loop
xor
out
(bad)
(bad)
(bad)
jmp
sbb
(bad)
cmp
sbb
sbb
sbb
cmps
fwait
mov
pop
call
(bad)
call
ins
pop
mov
loopne
sbb
or
ret
adc
adc
outs
clc
(bad)
jns
popa
push
lock
mov
cmp
jp
and
or
or
ins
mov
push
mov
sub
pushf
ins
dec
jae
addr16
sbb
mov
int
xor
jle
dec
cmp
je
fs
loope
retf
xchg
sbb
xchg
sub
scas
mov
cmp
xor
test
dec
mov
(bad)
(bad)
cmp
repz
mov
(bad)
bsf
xrelease
jecxz
(bad)
call
in
enter
(bad)
(bad)
push
je
push
mov
mov
clc
hlt
mov
mov
test
jl
mov
(bad)
jg
dec
gs
xor
add
lds
sbb
add
test
mov
add
aaa
mov
enter
mov
mov
(bad)
(bad)
(bad)
(bad)
out
mov
pop
(bad)
neg
pop
push
or
test
popf
inc
and
push
mov
fnstcw
inc
mov
out
enter
and
mov
out
idiv
(bad)
(bad)
jmp
jmp
jecxz
dec
imul
push
dec
cmps
fwait
mov
dec
xor
pop
(bad)
(bad)
(bad)
(bad)
fisub
dec
sbb
pop
aad
mov
cld
repz
mov
xor
xchg
std
shl
xor
call
(bad)
(bad)
jmp
jno
sbb
test
sub
shl
test
daa
jp
cld
arpl
dec
sbb
inc
(bad)
(bad)
(bad)
(bad)
aas
call
jl
test
bound
jecxz
jge
inc
ret
push
and
jmp
fs
mov
fst
sbb
xor
fs
aas
xchg
sbb
mov
ret
dec
fwait
xor
adc
and
lahf
and
sbb
(bad)
sar
scas
clc
adc
mov
into
sbb
adc
hlt
inc
cmp
pop
(bad)
(bad)
mov
inc
dec
and
sub
imul
mov
mov
retf
(bad)
push
inc
sbb
inc
not
jb
out
cld
mov
(bad)
(bad)
dec
shl
mov
jo
xor
jmp
and
push
sub
test
nop
mov
aas
xchg
dec
in
inc
retf
push
push
int
jg
push
dec
xchg
cmps
jle
mov
jle
clc
(bad)
inc
xchg
jb
mov
rcr
xchg
inc
xor
push
cwde
and
cmp
sbb
jmp
dec
shr
(bad)
mov
retf
jno
fbstp
mov
std
retf
test
jne
sbb
ror
int
mov
inc
push
les
ins
jb
(bad)
(bad)
(bad)
mov
xor
inc
dec
ds
inc
bound
dec
fild
push
cmp
icebp
pop
push
(bad)
and
dec
lahf
mov
mov
or
aam
inc
arpl
or
jb
cwde
(bad)
lahf
js
inc
(bad)
(bad)
(bad)
jmp
mov
std
lods
loopne
pushf
sti
hlt
stc
mov
sahf
dec
inc
movs
pop
lds
mov
sbb
xchg
(bad)
(bad)
(bad)
push
(bad)
jbe
inc
inc
retf
int
outs
mov
add
movs
sub
sub
(bad)
(bad)
(bad)
dec
stos
ret
or
mov
fadd
jbe
std
sub
sbb
call
outs
xchg
movs
inc
push
mov
sbb
sbb
cdq
or
(bad)
(bad)
jg
xchg
jge
cmc
aas
mov
xor
push
adc
data16
mov
mov
mul
in
out
fsubr
xor
(bad)
(bad)
inc
cs
sub
jae
and
inc
mov
enter
pop
in
(bad)
cmp
(bad)
(bad)
(bad)
push
and
sub
cmp
es
xchg
push
push
fcomp
ret
sub
outs
outs
mov
(bad)
(bad)
call
test
push
mov
loop
lahf
shl
loope
sbb
in
adc
xor
in
push
pop
inc
stos
push
into
call
jecxz
inc
xor
test
mov
rcr
sbb
mov
cmp
sar
(bad)
(bad)
(bad)
jmp
pop
shl
pop
xor
dec
test
push
xchg
xor
lock
loopne
sbb
add
jle
(bad)
(bad)
(bad)
push
sti
sahf
movs
out
mov
cmps
xor
jnp
adc
pop
inc
xchg
ins
fidivr
xor
pop
sar
jmp
rcl
jmp
inc
inc
xchg
sub
jmp
iret
call
stos
mov
mov
dec
jp
scas
imul
mov
in
stos
add
add
retf
out
mov
xchg
xlat
and
pop
(bad)
(bad)
inc
adc
sub
cwde
sub
jge
into
sub
(bad)
(bad)
call
ds
nop
xchg
cmp
adc
sbb
sti
xlat
outs
aad
les
idiv
inc
mov
add
sub
mov
mov
fistp
sbb
mov
mov
ja
(bad)
(bad)
(bad)
mov
iret
loope
fmul
mov
ret
cmp
inc
xchg
sub
je
sub
sub
clc
call
leave
push
outs
ror
gs
enter
jmp
sub
jge
lahf
inc
sar
or
add
xor
pop
in
out
(bad)
(bad)
inc
call
push
imul
and
cdq
and
ja
sbb
adc
scas
retf
mov
aad
jne
mov
std
cmp
scas
aaa
jge
cmp
cmp
inc
inc
push
cmp
fbstp
xor
sub
test
cmps
or
call
xchg
fwait
xchg
jno
repnz
icebp
jo
push
mov
sub
xchg
mov
into
cld
lods
int3
mov
(bad)
mov
imul
inc
or
sahf
ret
mov
out
(bad)
(bad)
(bad)
cmp
sti
fistp
dec
scas
mov
shl
sbb
es
ja
sahf
add
icebp
or
test
inc
push
pop
push
pop
ins
shr
sbb
aam
jns
(bad)
(bad)
(bad)
mov
call
xchg
xor
sub
scas
sub
mov
(bad)
call
pop
jp
pop
pop
movs
(bad)
sar
sub
xchg
and
adc
mov
push
xor
push
push
fwait
dec
xlat
not
sbb
stos
shr
test
mov
call
xor
pop
cmp
je
and
lods
jge
mov
jae
xchg
inc
mov
xchg
(bad)
(bad)
push
cli
in
pusha
sub
shl
aad
test
pop
jg
xor
stc
mov
jecxz
jmp
and
popa
repz
mov
mov
cmp
sbb
call
hlt
jne
add
test
mov
mov
lods
jb
xlat
adc
outs
(bad)
in
call
and
pop
push
mov
not
mov
fcomp
push
push
(bad)
push
dec
push
cmp
in
xchg
cli
cmp
xchg
dec
adc
jmp
inc
mov
mov
(bad)
push
aad
rol
pusha
and
out
mov
xor
pop
adc
into
mov
lods
jbe
(bad)
(bad)
dec
xchg
adc
in
cmp
in
mov
setne
cmp
cmp
repnz
(bad)
(bad)
cmp
inc
adc
imul
jl
sbb
push
adc
(bad)
inc
cli
into
scas
sahf
xchg
push
aas
out
jnp
fldl2e
fst
aaa
in
inc
mov
lds
jmp
test
adc
jg
mov
xor
inc
sub
cmp
sub
adc
leave
je
in
adc
push
mov
sub
(bad)
movs
mov
adc
(bad)
(bad)
push
xchg
outs
pop
rcl
jecxz
jnp
lock
mov
cdq
sar
xchg
(bad)
fstp
call
lods
std
mov
cmc
and
jg
xor
inc
jb
dec
mov
dec
or
mov
cli
mov
(bad)
mov
je
cwde
mov
(bad)
(bad)
inc
jmp
je
lahf
lahf
lds
cmp
add
dec
into
mov
push
sahf
(bad)
(bad)
(bad)
(bad)
jge
out
jnp
pop
xor
cmp
in
mov
xor
mov
(bad)
add
lods
(bad)
in
adc
pop
or
sub
xor
inc
add
out
(bad)
(bad)
push
push
aad
rep
xor
xchg
leave
add
inc
imul
push
icebp
loopne
push
dec
cmps
cmp
(bad)
(bad)
cmp
cmps
pop
loop
add
ret
ins
pop
fst
jmp
les
(bad)
push
mov
rcl
ja
mov
ins
gs
repnz
addr16
cdq
sbb
dec
test
add
scas
gs
pop
jae
jne
(bad)
(bad)
(bad)
inc
cdq
jmp
test
rcr
(bad)
shr
xor
jb
popf
mov
(bad)
jg
inc
mov
sub
pop
pop
xor
sub
inc
or
dec
neg
jne
mov
mov
push
sbb
jae
in
(bad)
(bad)
(bad)
jg
push
push
and
pop
push
adc
loopne
shr
jnp
pop
(bad)
outs
cmps
sub
add
push
push
popa
cld
fiadd
les
ds
movs
mov
cmc
mov
cmp
push
fsqrt
ret
pop
clc
sub
ret
cld
aam
xor
cmp
idiv
cld
loope
(bad)
and
(bad)
ret
test
(bad)
(bad)
jmp
or
sbb
jle
aad
idiv
push
ret
(bad)
sti
xchg
test
jl
pop
pop
aaa
add
mov
push
(bad)
jmp
addr16
dec
mov
cmp
jo
ss
stos
into
add
pop
cs
not
imul
ret
pop
jns
lock
push
jmp
adc
cmps
push
call
add
in
pop
mov
(bad)
jmp
mov
xchg
mov
jmp
mov
jb
or
sar
jmp
sub
fisub
sbb
xchg
cmp
sbb
retf
fcomip
sar
jmp
dec
and
sub
call
pop
dec
jp
(bad)
(bad)
call
cwde
pop
cdq
inc
fcomp
popa
(bad)
fadd
ins
jmp
leave
in
dec
jb
(bad)
dec
pop
repz
retf
jb
fcomp
inc
sahf
(bad)
(bad)
cmp
sbb
mov
adc
into
(bad)
xchg
adc
push
imul
(bad)
(bad)
jg
mov
cli
cmp
nop
js
xchg
mov
ins
ins
mov
dec
mov
loope
(bad)
(bad)
(bad)
out
jmp
or
movs
mul
fdivr
sbb
inc
loope
mov
(bad)
(bad)
(bad)
jmp
hlt
jns
fbstp
into
cmps
mov
pop
inc
or
mov
imul
jnp
dec
sbb
or
push
test
xchg
(bad)
(bad)
(bad)
jmp
call
out
and
sahf
inc
and
cmc
ins
push
push
mov
jns
cmp
xchg
pop
pop
(bad)
(bad)
(bad)
jmp
jmp
sbb
loopne
or
mov
xor
add
pushf
jne
mov
jmp
(bad)
xor
nop
movs
test
fdivr
cli
outs
dec
sub
rol
pop
retf
lods
add
in
enter
fsubr
loope
xlat
mov
cmps
pop
jne
jle
inc
pop
shl
(bad)
(bad)
inc
aam
add
mov
mov
or
scas
push
shl
fcomp
arpl
iret
enter
push
xchg
in
(bad)
push
dec
xlat
lods
hlt
nop
pop
shl
mov
daa
add
(bad)
(bad)
(bad)
dec
push
(bad)
scas
stc
pushf
icebp
or
cmp
push
stos
mov
pusha
mov
jle
shr
sbb
fisttp
inc
mov
xchg
inc
and
imul
inc
imul
idiv
(bad)
(bad)
dec
mov
bound
push
and
xchg
jne
dec
fld
cdq
mov
xchg
call
cli
(bad)
(bad)
jmp
or
pop
and
sbb
sar
out
mov
dec
xor
cs
mov
pop
mov
xlat
mov
stos
ret
push
or
xchg
inc
ins
push
leave
call
(bad)
(bad)
(bad)
(bad)
cmp
fidivr
add
mov
scas
sbb
stc
inc
pop
xor
sub
fistp
dec
sahf
dec
jnp
add
(bad)
mov
mov
push
outs
sbb
pop
sbb
out
mov
xor
push
inc
mov
or
jp
or
(bad)
jmp
scas
mov
jae
push
fdiv
push
or
call
cld
dec
cmp
call
scas
sahf
jmp
addr16
or
cmp
or
inc
(bad)
cmp
mov
hlt
ror
and
(bad)
(bad)
jp
lea
cmp
ds
mov
adc
sbb
fsub
jg
jno
adc
(bad)
(bad)
(bad)
jl
mov
or
fisubr
xor
and
xor
mov
xchg
dec
mov
(bad)
(bad)
push
inc
cmp
(bad)
shl
loopne
mov
push
adc
rcr
mov
call
add
mov
popa
push
pusha
int3
xchg
popf
inc
scas
mov
std
aam
pop
mov
call
push
mov
arpl
mov
je
inc
push
movs
push
(bad)
(bad)
(bad)
inc
mov
fsub
jnp
push
rcr
data16
add
(bad)
call
jge
mov
dec
cmp
fcom
or
jbe
std
pop
push
(bad)
pop
scas
out
mov
ins
and
mov
jmp
test
sar
pop
(bad)
(bad)
(bad)
mov
jo
stos
pop
sub
scas
retf
sub
push
pop
mov
aad
mov
jo
sub
xchg
add
cmp
dec
jbe
js
(bad)
jmp
shl
push
xchg
adc
fiadd
addr16
push
loope
cmp
call
(bad)
cmps
clc
push
je
popf
xor
out
and
sub
sub
mov
fwait
scas
cli
mov
stos
idiv
clc
add
into
jo
and
(bad)
jmp
shl
in
cmp
mov
xlat
(bad)
and
repz
(bad)
inc
repz
(bad)
mov
neg
dec
rol
(bad)
(bad)
dec
sub
pop
nop
sahf
dec
mov
imul
inc
or
(bad)
in
test
(bad)
(bad)
jmp
jecxz
dec
test
and
jg
aas
sub
xor
js
xor
movs
(bad)
xchg
add
leave
jecxz
xor
(bad)
dec
mov
loopne
sahf
mov
inc
bound
in
jg
mov
push
xchg
pushf
lock
aam
add
sub
int3
and
dec
pushf
mov
sahf
xchg
or
xor
dec
je
aam
iret
push
jp
(bad)
(bad)
(bad)
call
mov
add
out
push
mov
push
rcl
push
ret
imul
jmp
ins
and
mov
ret
lock
push
push
xlat
sbb
outs
and
stos
cwde
add
sub
push
outs
cmp
enter
icebp
les
cmps
and
mov
pop
mov
cs
xchg
xor
js
mov
mov
imul
je
inc
sahf
scas
bound
shr
sbb
mov
(bad)
inc
inc
adc
sub
lahf
mov
pop
cmp
mov
out
int3
push
call
pop
cs
push
rcl
inc
mov
(bad)
(bad)
js
sbb
cmp
adc
icebp
and
xchg
mov
sar
(bad)
(bad)
repz
add
cmp
inc
cmp
(bad)
(bad)
mov
cmp
ins
cld
fnstenv
jno
(bad)
pop
mov
mov
xor
push
mov
(bad)
(bad)
inc
jle
xchg
loop
push
test
gs
xchg
and
push
push
sub
out
mov
(bad)
(bad)
jmp
cmp
sub
mov
add
xchg
cmp
xor
mov
xor
xor
pop
xchg
(bad)
(bad)
(bad)
inc
or
or
fdivr
jmp
stos
shr
aaa
cld
(bad)
jmp
arpl
loopne
outs
inc
icebp
xor
jge
fistp
fdivr
sbb
movs
icebp
pop
fcomip
dec
dec
lahf
rol
cmp
xchg
(bad)
(bad)
clc
jle
in
clc
ja
mov
aas
clc
sub
jno
cmp
jge
sub
cmp
push
and
sbb
add
sub
dec
mov
jl
pop
out
pop
fwait
jmp
push
rcr
shl
jle
add
into
ds
and
jge
dec
je
pop
aam
into
pusha
out
mov
(bad)
cmp
dec
sub
call
aam
shr
and
mov
xor
stos
adc
daa
sub
cmc
push
aam
adc
push
jmp
sar
sub
dec
inc
pop
nop
cmp
and
adc
push
retf
(bad)
mov
rcr
jecxz
sub
fild
hlt
sar
(bad)
(bad)
(bad)
jmp
outs
mov
xchg
xor
fldpi
and
aad
mov
mov
jle
mov
(bad)
(bad)
call
xchg
xchg
dec
(bad)
shr
dec
push
sub
mov
push
dec
test
mov
mov
daa
adc
xchg
frstor
(bad)
dec
(bad)
or
(bad)
call
pop
pop
fmul
add
bnd
push
movs
fwait
es
out
clc
(bad)
call
xchg
xor
cmp
aad
and
and
in
(bad)
(bad)
(bad)
jmp
clc
dec
xchg
mov
test
sbb
adc
inc
jbe
out
pop
xor
(bad)
call
out
mov
sbb
nop
fs
mov
fxch
cmc
jmp
push
sub
xor
cs
fisubr
(bad)
(bad)
cmp
jge
sahf
jns
dec
xchg
lahf
aas
adc
test
dec
dec
dec
imul
xchg
hlt
mov
pop
xor
push
cmps
into
movs
addr16
ins
mov
jle
mov
icebp
(bad)
(bad)
call
pusha
call
ins
or
aad
or
in
jmp
out
mov
mov
clc
(bad)
(bad)
fbld
in
sub
pop
ins
cmp
push
bound
pop
cli
retf
cmp
sub
(bad)
mov
dec
(bad)
jno
daa
out
mov
pushf
adc
jl
xor
sbb
jmp
cli
(bad)
(bad)
clc
(bad)
mov
sub
hlt
mov
pop
sub
jbe
popf
cmp
pusha
cld
cmps
mov
inc
aaa
push
xchg
cmp
mov
cwde
jbe
lea
int3
and
ret
pop
clc
jl
(bad)
pusha
jmp
jmp
sub
fldcw
mov
cmp
mov
xor
fcomip
sub
inc
xchg
icebp
or
sub
popa
ins
xor
out
clc
call
add
out
sub
sahf
(bad)
enter
(bad)
(bad)
(bad)
jg
popa
loope
ror
pushf
adc
in
lods
add
in
imul
(bad)
call
xchg
mov
sti
test
sub
int3
dec
xchg
jno
(bad)
loopne
inc
adc
xchg
enter
jg
retf
dec
stos
pop
sub
add
not
call
cld
call
loop
cmp
js
inc
mov
jmp
push
ret
aaa
sub
sbb
pop
(bad)
(bad)
(bad)
(bad)
cmp
out
imul
mov
jo
inc
mov
dec
cmp
lods
xlat
sar
mov
mov
out
mov
xchg
nop
mov
mov
mov
inc
(bad)
(bad)
dec
mov
rol
dec
in
sub
or
mov
xor
mov
test
sub
pushf
movs
inc
adc
hlt
push
cmp
leave
xchg
lods
add
loop
sbb
(bad)
call
inc
les
leave
cmp
ror
fild
stos
test
shl
(bad)
inc
cmps
sub
gs
jle
sub
and
les
(bad)
(bad)
dec
pop
fild
gs
push
mov
push
leave
xchg
sbb
xchg
mov
cli
les
dec
fld
mov
xor
xor
sub
lods
(bad)
ins
(bad)
(bad)
call
loop
gs
or
xlat
aas
outs
repnz
adc
test
(bad)
(bad)
(bad)
call
inc
shl
fbstp
addr16
in
and
dec
sbb
ins
lahf
cmp
pop
fcomp
jo
push
adc
cmp
mov
dec
add
inc
int
popf
xchg
mov
push
outs
push
cmps
sub
sbb
ins
std
clc
rcr
jg
scas
mov
clc
or
dec
(bad)
jmp
adc
lea
out
cmp
icebp
out
jle
fdivrp
(bad)
pop
lds
xchg
icebp
in
dec
cwde
loope
push
xchg
sar
jne
jbe
jo
cmp
hlt
pop
daa
outs
mov
test
or
ret
popa
das
into
lahf
inc
fisubr
pop
pop
std
call
pop
or
adc
and
jo
inc
pop
out
(bad)
(bad)
inc
jl
je
sbb
ss
jno
jge
pushf
push
and
bound
pop
cmp
clc
inc
cmp
push
fist
ins
dec
cdq
fwait
add
fist
int3
jbe
jle
movs
sahf
int
scas
cli
call
dec
fwait
out
push
cmp
imul
adc
jmp
sub
push
hlt
and
in
fisubr
mov
outs
push
mov
xchg
cmc
mov
(bad)
jg
inc
inc
sub
sub
je
cmp
xchg
cdq
jg
xor
mov
(bad)
(bad)
push
sub
mov
in
sbb
push
out
in
sbb
inc
mov
call
call
mov
sub
adc
clc
call
(bad)
(bad)
(bad)
fisub
and
ds
fadd
out
mov
or
fld
pop
lods
imul
(bad)
push
jb
out
and
stos
out
cmps
test
enter
shl
imul
mov
in
dec
jmp
or
cmp
xchg
xchg
pop
jg
pop
xor
loop
jmp
inc
call
and
std
sub
mov
sbb
js
lds
sbb
sar
cmp
lock
xor
cld
hlt
xchg
cmps
(bad)
mov
(bad)
(bad)
(bad)
cmp
mov
jnp
inc
jbe
inc
mov
fisubr
add
xor
(bad)
cmps
xchg
push
push
push
xlat
sar
(bad)
(bad)
jmp
ins
mov
out
cs
pop
pop
in
or
shl
pop
inc
lods
in
or
pop
cld
(bad)
call
mov
in
out
mov
enter
les
or
(bad)
std
(bad)
(bad)
(bad)
inc
psubq
jbe
pop
inc
jecxz
cli
mov
inc
mov
iret
ins
das
imul
outs
push
push
mov
gs
jge
mov
pop
sbb
push
fisttp
jmp
and
(bad)
jo
std
adc
sub
sub
rcl
add
(bad)
scas
fcom
fist
lea
sbb
cmc
(bad)
mov
push
push
test
outs
scas
repz
push
pop
cmc
push
lods
sub
mov
jl
sbb
(bad)
call
(bad)
call
sahf
popf
inc
xchg
add
inc
jmp
dec
stc
mov
push
xchg
outs
(bad)
(bad)
call
es
inc
jno
lods
xor
pop
scas
ins
retf
bound
adc
out
dec
(bad)
(bad)
(bad)
jmp
sti
shr
lea
ret
jo
mov
cwde
fdiv
pop
mov
(bad)
push
lahf
mov
push
lock
(bad)
arpl
or
inc
(bad)
(bad)
(bad)
call
or
call
push
jb
xchg
push
lods
pop
mov
pop
inc
or
pop
or
dec
inc
(bad)
jmp
sbb
or
(bad)
dec
fistp
or
xchg
pop
mov
ss
adc
push
fbstp
xchg
stos
xor
int
cmp
sub
das
jae
dec
add
pop
mov
out
dec
scas
(bad)
xchg
in
cld
jmp
jmp
je
rcr
xchg
enter
out
inc
leave
xor
dec
mov
sub
adc
(bad)
in
xchg
stos
push
pop
pop
and
pop
push
sbb
inc
movs
pop
adc
xor
dec
add
mov
dec
xchg
(bad)
ja
(bad)
jmp
adc
popf
or
fbld
or
(bad)
call
not
cmc
fidivr
jae
and
movs
sbb
int3
push
mov
xchg
sbb
sub
div
out
mov
idiv
ins
outs
int3
mov
mov
inc
(bad)
push
jbe
and
cld
in
xchg
push
inc
daa
jmp
mov
push
(bad)
(bad)
(bad)
inc
shl
xlat
movs
pop
int3
jge
imul
jmp
shl
dec
test
call
fild
das
mov
(bad)
out
sub
push
push
mov
pop
ja
fdivr
add
push
aas
aas
lock
fsub
(bad)
(bad)
(bad)
mov
xchg
clc
(bad)
sbb
fnstsw
mov
pop
stos
and
jecxz
(bad)
call
jb
or
stos
pop
fdivr
(bad)
jmp
pusha
fucomip
mov
(bad)
(bad)
mov
adc
pop
ret
push
xor
cmc
repz
loop
out
sti
and
jle
or
(bad)
jmp
push
xchg
(bad)
arpl
sub
jecxz
imul
pop
cld
shl
jmp
(bad)
dec
enter
jmp
pop
add
out
aad
(bad)
mov
das
dec
sti
cdq
(bad)
sar
mov
xor
mov
cs
mov
lods
sub
cmp
push
pop
scas
rol
ins
or
mov
mov
lods
inc
pop
sbb
mov
inc
cmp
push
and
in
or
test
cmp
loopne
inc
mov
or
aam
mov
sbb
xchg
push
les
xchg
(bad)
(bad)
(bad)
push
retf
call
or
add
mov
sub
or
loopne
movs
(bad)
call
in
loopne
cli
xor
push
push
mov
mov
jg
out
or
ins
mov
adc
jecxz
(bad)
(bad)
mov
dec
inc
bound
xor
xchg
xchg
popf
pop
or
cld
or
(bad)
(bad)
mov
xchg
mov
ret
movs
rol
inc
and
leave
popa
xor
(bad)
push
pushf
sbb
xor
mov
adc
push
fidiv
mov
mov
xor
call
inc
xchg
sub
xchg
int
les
mov
jg
(bad)
call
cmp
push
cmp
lods
inc
adc
lods
fnstenv
inc
stos
cmps
(bad)
(bad)
(bad)
call
call
jp
movs
cmp
fiadd
into
push
shr
jno
lea
enter
add
call
out
aas
in
pop
mov
das
ds
(bad)
(bad)
(bad)
mov
push
and
jo
cmp
rcl
sub
(bad)
(bad)
(bad)
dec
or
xor
push
cmp
fld
pop
jns
and
push
push
jp
cmp
cld
sbb
mov
xor
xor
out
clc
call
(bad)
inc
jmp
or
inc
pop
(bad)
(bad)
(bad)
out
xchg
mov
lds
sti
mov
mov
lea
xor
(bad)
inc
inc
push
inc
fs
sbb
(bad)
scas
lods
arpl
loop
pop
mov
mov
jno
(bad)
(bad)
push
xor
and
fwait
mov
mov
xor
mov
xchg
mov
dec
sub
and
(bad)
(bad)
dec
push
out
adc
sbb
jg
jns
pop
jns
rcl
test
rcr
and
call
aas
mov
pop
clc
neg
push
lds
sbb
sub
pop
and
jb
dec
and
xchg
pop
adc
jo
imul
(bad)
(bad)
jmp
pop
ds
mov
mov
enter
(bad)
out
mov
ficom
inc
lds
das
fild
scas
cmp
icebp
inc
jp
cdq
mov
hlt
(bad)
(bad)
jmp
xor
retf
ficomp
jmp
inc
data16
(bad)
(bad)
(bad)
call
leave
mov
fimul
or
std
icebp
inc
sbb
test
cmp
(bad)
call
push
sbb
cdq
test
rol
pop
push
mov
mov
sar
inc
push
mov
pop
stos
je
push
inc
retf
(bad)
inc
mov
sbb
mov
shr
add
pop
loopne
mov
sahf
pop
inc
je
xchg
je
cmp
push
pusha
test
add
(bad)
(bad)
dec
mov
pop
fsub
jge
pop
frstor
jl
(bad)
(bad)
(bad)
(bad)
jg
xchg
cwde
and
idiv
push
jno
xlat
push
jno
xor
je
aas
inc
addr16
or
(bad)
push
inc
js
pop
jae
es
inc
(bad)
jbe
cmp
jns
(bad)
(bad)
inc
add
add
push
in
add
retf
(bad)
xchg
pop
rcr
jecxz
aas
add
mov
dec
ins
loopne
(bad)
mov
outs
mov
(bad)
loopne
mov
cli
(bad)
(bad)
(bad)
mov
les
movs
mov
fsubr
jae
test
jl
push
inc
sub
sar
dec
push
mov
jmp
shl
sub
(bad)
(bad)
dec
aad
xchg
sub
sub
mov
jge
sti
mov
in
jmp
xchg
jbe
push
mov
sub
jle
(bad)
(bad)
dec
inc
push
ret
mov
shr
pop
les
test
pop
cmp
mov
test
inc
je
xor
mov
out
inc
xchg
sti
xchg
xchg
mov
sbb
int
adc
(bad)
call
inc
lods
and
inc
add
cmc
out
xchg
(bad)
pop
mov
mov
(bad)
dec
jp
scas
jbe
sbb
test
inc
xchg
cmp
or
mov
cmp
idiv
(bad)
(bad)
dec
pop
fbld
jnp
mov
xchg
daa
std
int
call
repnz
in
mov
jne
mov
xor
popa
div
(bad)
outs
sub
xor
(bad)
(bad)
fistp
lods
adc
push
pop
cmp
sub
stos
add
sub
scas
(bad)
(bad)
(bad)
call
dec
mov
mov
das
in
cdq
jl
dec
sub
adc
lds
inc
and
inc
(bad)
fnsave
inc
(bad)
(bad)
(bad)
(bad)
push
xchg
pop
inc
in
cmp
cmps
mov
and
lahf
call
push
ror
cmp
push
movs
(bad)
(bad)
(bad)
inc
es
mov
movs
jmp
cmps
xchg
cmp
stos
(bad)
jmp
mov
dec
mov
mov
nop
cmp
popa
cmp
loop
and
(bad)
(bad)
push
push
fiadd
adc
rcr
ja
fwait
xchg
shl
mov
xor
ss
bound
pop
(bad)
(bad)
(bad)
cmp
inc
mov
call
ror
in
xlat
inc
jb
ret
mov
jmp
ja
aam
sub
mov
push
mov
loopne
pop
daa
in
repz
mov
mov
add
mov
lods
idiv
idiv
enter
iret
cs
js
cld
(bad)
call
enter
push
push
jl
rcr
out
sub
repnz
cmc
dec
adc
pop
pop
stos
pop
ret
ret
call
daa
(bad)
(bad)
(bad)
push
sbb
(bad)
mov
push
add
pop
cmp
sahf
cmp
sbb
fiadd
sbb
sub
sub
pop
xchg
aam
inc
mov
rol
fidiv
inc
(bad)
(bad)
call
push
sub
shl
std
bsf
xchg
mov
fiadd
or
lds
pop
lea
xchg
mov
call
pushf
mov
shr
mov
sbb
dec
pop
xor
mov
out
(bad)
(bad)
mov
inc
cmp
push
fnstenv
mov
into
mov
ja
in
push
push
call
ds
xchg
imul
inc
sub
out
dec
nop
jecxz
xor
(bad)
(bad)
jmp
rcr
dec
gs
imul
push
in
xor
lds
inc
add
ss
cmc
jne
(bad)
(bad)
jg
push
jnp
je
rol
(bad)
call
enter
pop
pop
inc
popf
ss
movs
dec
cld
(bad)
(bad)
call
scas
push
sbb
shr
xchg
xchg
enter
cmps
and
jmp
or
lahf
pop
movs
ldmxcsr
xchg
(bad)
(bad)
call
xchg
push
adc
add
lods
fcmovnb
rcl
mov
add
(bad)
inc
xor
cs
jecxz
ja
pusha
jns
aad
jne
jo
jne
rol
mov
mov
xchg
mov
mul
cwde
mov
ror
fld
push
xchg
(bad)
(bad)
(bad)
inc
and
data16
push
enter
leave
jl
jb
cmp
or
inc
int
adc
pop
jecxz
or
call
xor
sar
xchg
shl
xor
hlt
enter
push
or
ja
test
into
mov
xchg
jb
push
shl
push
mov
mov
push
cs
adc
ins
daa
inc
jo
nop
inc
les
cmps
push
sub
add
(bad)
mov
add
mov
jmp
inc
cmc
xchg
inc
ds
(bad)
(bad)
call
aas
icebp
mov
lahf
inc
jl
and
jg
mov
(bad)
(bad)
sti
icebp
out
idiv
aaa
pop
jnp
jae
mul
jno
neg
test
(bad)
(bad)
rcr
push
(bad)
(bad)
inc
sbb
ins
sbb
mov
jno
jo
push
xchg
bswap
sub
clc
jmp
sbb
or
outs
and
jnp
(bad)
fdivr
sbb
call
daa
lahf
(bad)
int3
cld
or
daa
sub
inc
hlt
and
cmp
call
mov
sahf
fsubr
cmp
hlt
sahf
add
ret
std
jge
jbe
mov
(bad)
(bad)
dec
test
push
rol
sub
or
adc
push
cmc
in
cmps
test
mov
mov
jne
leave
(bad)
(bad)
(bad)
jmp
ret
ss
mov
ins
add
xchg
jae
cdq
ror
sahf
dec
dec
cdq
loop
sub
cmps
(bad)
(bad)
jmp
inc
rol
or
adc
ret
or
inc
sub
or
(bad)
mov
pop
fst
loope
sar
shl
imul
pop
aam
ins
mov
call
sub
fld
add
loope
data16
lahf
(bad)
pop
test
leave
add
dec
fucomi
ss
pop
add
xor
pop
lock
lahf
js
mov
popf
(bad)
(bad)
(bad)
call
ja
sub
int3
mov
lods
out
aam
cli
repnz
fsubr
or
ret
fcomip
(bad)
push
sub
adc
or
mov
rcr
mov
xchg
(bad)
in
and
and
jge
jmp
jb
push
xchg
hlt
fs
jmp
cmp
into
call
dec
cmp
stos
(bad)
or
pop
dec
push
test
jno
shl
aam
and
cmp
pushf
(bad)
(bad)
(bad)
dec
push
and
pop
icebp
aad
sar
mov
ret
add
cmp
je
xor
(bad)
(bad)
(bad)
(bad)
cmp
jo
aam
call
mov
cs
push
add
inc
(bad)
(bad)
(bad)
call
cmp
out
mov
test
xlat
aas
rol
dec
jnp
repnz
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
int3
add
push
das
push
ins
and
(bad)
rcr
fdivrp
mov
(bad)
jmp
in
cmc
outs
cld
jbe
pop
pop
jecxz
jecxz
es
jmp
retf
mov
mov
dec
clc
pop
and
push
sbb
inc
push
retf
inc
fs
pop
fdiv
retf
xor
imul
(bad)
in
arpl
(bad)
mov
lea
aaa
das
mov
(bad)
(bad)
(bad)
cmp
retf
cdq
repz
jno
int3
or
and
or
das
mov
cmp
cmp
(bad)
(bad)
inc
repz
jns
enter
push
fwait
cmp
xor
(bad)
out
std
(bad)
(bad)
(bad)
jmp
jge
sbb
inc
scas
xchg
cmps
jmp
push
test
pop
test
mul
or
(bad)
(bad)
(bad)
jmp
addr16
inc
fs
cmp
les
xor
fwait
mov
pushf
dec
popa
out
push
bnd
std
(bad)
(bad)
cmp
js
or
gs
lock
push
pop
pop
stos
arpl
cmp
push
dec
std
(bad)
(bad)
call
xchg
or
add
mov
xchg
scas
lea
cmc
fdiv
ds
cmp
cmp
pop
xchg
dec
ins
shr
push
sbb
mov
jle
or
shl
or
loop
inc
or
dec
jmp
sbb
xor
sub
std
cdq
(bad)
dec
lock
inc
pop
test
bswap
popa
je
inc
inc
mov
push
retf
(bad)
(bad)
push
adc
test
loopne
into
callw
retf
or
mov
or
(bad)
(bad)
(bad)
cmp
lahf
daa
sub
ins
pop
aas
pop
sbb
aaa
inc
rcl
sahf
ja
imul
(bad)
dec
xchg
dec
aad
push
sbb
inc
shl
pusha
dec
out
out
call
pop
mov
adc
inc
xor
nop
in
test
(bad)
sub
jp
popf
leave
inc
sbb
rcl
daa
pop
pusha
adc
sbb
movs
push
out
cmp
(bad)
(bad)
(bad)
out
xchg
xor
(bad)
mov
and
std
mul
cmp
bnd
rcr
ret
cmc
inc
sar
ja
lock
(bad)
inc
mov
pop
(bad)
(bad)
mov
or
(bad)
mov
add
(bad)
(bad)
dec
pop
push
and
rcl
cmp
push
pop
jmp
cmc
gs
(bad)
(bad)
dec
ss
ss
jae
data16
or
test
xor
fsubr
(bad)
data16
(bad)
(bad)
sbb
out
shl
push
fsubr
or
xchg
pusha
lea
popf
retf
mov
(bad)
(bad)
fnclex
psrad
and
xor
pushf
aam
jno
cld
xor
jno
mov
dec
xchg
or
sbb
cs
call
cld
inc
cdq
inc
call
hlt
ss
(bad)
dec
(bad)
lock
push
movs
and
mov
mov
call
jb
pop
gs
jg
inc
cdq
or
mov
and
neg
add
push
xchg
int
xchg
dec
add
push
mov
mov
mov
push
ins
mov
stc
jl
(bad)
(bad)
call
shr
popf
add
push
inc
dec
popa
mov
xchg
(bad)
je
dec
mov
retf
mov
jle
(bad)
(bad)
(bad)
dec
sbb
or
cmp
out
xor
and
cwde
sbb
icebp
sar
add
jmp
(bad)
call
inc
ret
movs
lahf
mov
jns
lods
shl
push
(bad)
push
push
jb
(bad)
(bad)
(bad)
call
repz
or
jg
(bad)
retf
call
mov
cmp
cmp
and
pop
test
jae
pop
fcmovnb
test
daa
ss
rcr
into
stos
pop
cmp
xchg
arpl
cmp
movs
mov
pushf
cmps
fmul
lahf
mov
adc
in
(bad)
call
sbb
mov
jmp
lock
in
in
aaa
loope
pop
jbe
mov
lock
jae
sub
and
jo
lods
je
clc
(bad)
(bad)
jmp
in
fnstsw
sub
mov
(bad)
sti
lahf
jle
gs
aas
mov
jle
xchg
shl
(bad)
(bad)
inc
icebp
fstp
fucomp
daa
cmps
(bad)
fs
(bad)
aaa
aas
pop
jmp
int
(bad)
call
(bad)
repnz
jp
or
lea
cmp
push
movs
dec
adc
(bad)
(bad)
(bad)
(bad)
jmp
push
sub
fcmovnu
xor
sub
xchg
xor
jmp
(bad)
(bad)
call
dec
inc
push
adc
xchg
ret
daa
in
adc
clc
(bad)
imul
sub
inc
bound
cdq
int3
push
lock
dec
and
retf
(bad)
jg
repz
cwde
stc
idiv
(bad)
call
fild
pop
adc
inc
nop
pushf
pop
call
inc
sbb
mov
popf
push
and
mov
out
fwait
pushf
pop
in
call
sar
jns
shr
inc
sub
dec
pop
mov
jp
outs
iret
ret
data16
test
rcr
retf
(bad)
(bad)
dec
shl
cmps
push
adc
mov
mov
stc
sub
(bad)
jmp
mov
mov
movs
sub
shl
fsubr
push
movs
ins
xchg
jg
pop
jle
pop
(bad)
outs
rcr
repnz
push
jo
(bad)
(bad)
jmp
xlat
fdiv
cli
xlat
rcr
sbb
jp
push
cmp
mov
jo
adc
mov
sub
aaa
cld
(bad)
dec
mov
cmp
ins
pop
and
xor
cdq
xchg
fiadd
xchg
push
std
call
loope
dec
dec
sub
fnstcw
ss
dec
faddp
pop
xchg
sub
(bad)
cmp
push
push
in
push
add
inc
loope
inc
enter
dec
mov
lea
ins
(bad)
in
and
(bad)
xor
ja
fstp
idiv
cmps
sbb
(bad)
mov
in
(bad)
xor
mov
and
xchg
xchg
adc
(bad)
(bad)
(bad)
jmp
or
movs
add
sub
push
jbe
add
jne
int
arpl
outs
push
(bad)
out
pop
imul
pop
pushf
push
mov
cmps
xor
dec
and
(bad)
(bad)
jge
js
leave
xor
mov
cdq
add
(bad)
(bad)
jmp
popw
and
mov
push
jo
dec
sbb
scas
jge
mov
xchg
(bad)
in
shl
xchg
ins
push
fmul
xlat
enter
(bad)
call
xchg
jp
jl
mov
std
cmp
(bad)
xor
inc
fdivr
les
lock
(bad)
(bad)
int3
leave
(bad)
(bad)
(bad)
dec
xchg
mov
cld
jp
xchg
inc
mov
xchg
fisub
xlat
sbb
cmp
sub
(bad)
push
sub
pop
lods
imul
test
cmp
lock
xchg
cmp
sub
xchg
and
inc
loopne
or
cli
sbb
(bad)
(bad)
jmp
pusha
mov
sbb
sar
arpl
or
jp
cli
ins
add
(bad)
(bad)
mov
add
aaa
mov
mov
mov
dec
lahf
sbb
mov
push
fwait
add
inc
imul
xchg
repz
or
pop
(bad)
in
jmp
sub
and
popa
xor
aas
fstp
fild
jmp
cmp
pop
mov
(bad)
mov
mov
xor
add
mov
cli
push
jmp
call
sbb
mov
mov
push
xchg
das
lahf
add
mov
ret
mov
sbb
inc
dec
(bad)
pop
mov
(bad)
(bad)
(bad)
(bad)
fidiv
or
cmovg
call
iret
jne
rcr
hlt
mov
mov
inc
push
sub
cmp
fist
es
lock
das
and
(bad)
jg
movs
pop
inc
pop
pop
mov
cmc
inc
mov
loopne
je
test
add
adc
sub
(bad)
(bad)
(bad)
call
mov
rsm
int
mov
push
xor
ja
sub
pop
jmp
lock
das
sbb
xchg
das
xor
sub
fisttp
leave
jg
pop
(bad)
(bad)
(bad)
fbstp
pop
fdiv
push
repnz
lods
lock
xchg
lahf
cmp
jmp
outs
pmaddwd
(bad)
(bad)
call
adc
ins
loope
sahf
cmp
jmp
cmps
cli
daa
dec
ins
lock
(bad)
(bad)
(bad)
mov
and
push
imul
cmps
iret
jmp
call
adc
ins
cmp
in
int3
outs
(bad)
pop
push
ss
clc
(bad)
jmp
and
ins
mov
push
inc
(bad)
loopne
lea
jle
(bad)
fisubr
mov
(bad)
(bad)
(bad)
call
and
sbb
jbe
int
ins
xor
mov
push
and
jo
ins
loope
jge
(bad)
(bad)
jg
or
adc
jb
xchg
cmps
out
xchg
push
dec
push
inc
cmps
aaa
cld
(bad)
jmp
or
push
mov
mov
hlt
sub
(bad)
(bad)
(bad)
push
mov
dec
xor
mov
inc
(bad)
mov
popa
mov
sbb
ds
(bad)
(bad)
(bad)
dec
adc
std
fs
mov
sbb
aas
(bad)
popa
jb
push
sbb
(bad)
(bad)
push
xchg
(bad)
mov
sub
push
fldenv
test
jmp
(bad)
push
(bad)
xchg
push
mov
ins
pusha
popa
stc
adc
sub
sbb
push
inc
mov
outs
mov
(bad)
call
sbb
(bad)
ds
mov
js
adc
cmps
loop
sbb
fbld
mov
mov
(bad)
jae
inc
cwde
ret
push
cmp
fbld
je
gs
sahf
mov
out
push
jns
clc
push
std
inc
dec
pop
jbe
lods
stos
scas
mov
repnz
out
(bad)
(bad)
(bad)
out
inc
pop
mov
or
scas
xchg
pusha
scas
inc
out
mov
ins
fstp
mov
sub
shr
cmc
call
mov
or
loopne
mov
pop
(bad)
(bad)
(bad)
dec
call
adc
mov
xchg
cld
into
(bad)
xor
outs
fadd
(bad)
(bad)
(bad)
(bad)
jmp
arpl
movs
mov
jmp
scas
idiv
out
js
sbb
test
(bad)
(bad)
mov
mov
sbb
push
mov
xchg
nop
or
push
xchg
lods
(bad)
call
xchg
cmp
sbb
and
xchg
cwde
mov
fcos
outs
cli
inc
mov
sar
(bad)
clc
out
inc
ins
or
clc
xor
out
cli
jmp
mov
mov
ret
dec
iret
cmp
aad
fld
repz
add
mov
sbb
mov
mov
aad
fs
clc
(bad)
(bad)
call
mov
adc
jp
mov
lods
adc
lods
xchg
repz
lods
sub
cli
int
fcomp
or
into
inc
push
cmp
mov
(bad)
(bad)
(bad)
push
(bad)
addr16
js
add
xor
dec
add
nop
inc
pop
lods
leave
ror
add
call
xor
pop
sbb
pushf
in
sub
imul
cmp
stos
dec
cld
dec
cmp
inc
cwde
or
mov
int3
fs
movs
(bad)
(bad)
(bad)
push
gs
sub
and
in
in
pusha
bound
mov
pop
push
fld
(bad)
(bad)
(bad)
inc
mov
sar
call
sbb
xor
(bad)
(bad)
(bad)
push
in
sar
adc
cmp
mov
pop
outs
mov
(bad)
(bad)
(bad)
(bad)
cmp
or
jbe
sub
enter
sbb
pop
cmp
(bad)
pushf
jb
pop
(bad)
(bad)
(bad)
inc
xor
and
adc
fnstenv
push
call
sbb
daa
cli
jmp
(bad)
jg
sub
xchg
pushf
or
inc
mov
jo
mov
popf
add
inc
lock
jecxz
aaa
(bad)
stos
jbe
cmp
dec
push
lds
cmp
mov
(bad)
jmp
or
ins
jmp
jae
xchg
lods
add
push
ins
mov
or
jp
mov
mov
in
ss
sahf
jnp
add
(bad)
(bad)
(bad)
(bad)
in
shl
es
pop
mov
jbe
dec
int
mov
aaa
push
mov
sbb
shr
aad
(bad)
dec
out
jbe
fimul
cli
outs
sub
xchg
push
(bad)
(bad)
(bad)
call
and
rcl
data16
movs
cmp
push
(bad)
add
sbb
loop
out
jle
cmc
(bad)
(bad)
(bad)
inc
pushf
mov
dec
test
ror
jecxz
and
lock
jle
inc
fldenv
cdq
das
fs
sar
jmp
dec
leave
fwait
mov
lods
add
pop
pushf
stos
hlt
or
xchg
das
xor
jp
dec
mov
jae
mov
pop
xlat
fwait
mov
in
mov
mov
mov
retf
(bad)
call
and
or
hlt
ret
int3
cmp
adc
inc
sub
repnz
sbb
dec
inc
retf
cmps
add
jno
cmp
(bad)
(bad)
(bad)
jmp
adc
add
mov
push
pop
push
dec
inc
jae
out
mov
mov
(bad)
(bad)
jmp
xchg
cmps
mov
push
lea
dec
mov
add
jno
dec
(bad)
retf
lods
scas
sub
cmp
or
dec
add
jns
or
nop
dec
mov
popf
sahf
ss
cwde
int3
mov
pop
jb
mov
int
mov
push
idiv
movs
cs
jne
sbb
(bad)
(bad)
jmp
int3
adc
add
pop
xchg
push
jmp
mov
pop
adc
mov
retf
(bad)
shl
ins
sbb
pop
xchg
sub
(bad)
pop
fsubr
jmp
pop
push
pop
stos
lods
dec
sbb
clc
loopne
cld
and
(bad)
(bad)
dec
xchg
ins
or
mov
inc
mov
jg
imul
imul
(bad)
(bad)
dec
inc
lods
pop
in
dec
add
icebp
call
stc
in
call
inc
aas
int
mov
call
push
dec
aas
stc
or
movs
xchg
test
imul
(bad)
(bad)
(bad)
(bad)
fimul
or
(bad)
movs
in
ins
xor
xchg
mov
mov
push
sbb
(bad)
(bad)
mov
hlt
retf
cdq
adc
sbb
mov
mov
stos
add
(bad)
fs
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
xchg
xor
jne
popa
loop
std
inc
xchg
(bad)
add
and
call
cmps
inc
mov
inc
mov
aam
or
or
sar
(bad)
(bad)
push
daa
cmps
imul
pop
in
cmc
sub
stos
sub
int3
xor
jae
and
(bad)
jmp
jnp
dec
shr
push
nop
dec
inc
cmp
sbb
mov
dec
outs
and
loope
cmp
imul
or
and
mov
fmul
je
sub
data16
jbe
dec
mov
mov
lahf
adc
jmp
movs
adc
mov
hlt
sbb
pushf
adc
sub
sub
lods
retf
xor
jmp
push
push
jp
or
hlt
dec
nop
sbb
xchg
jmp
and
rcr
stos
lea
add
out
or
(bad)
call
mov
cli
mov
add
jge
rcl
cmp
mov
mov
mov
(bad)
in
ja
xchg
mov
out
(bad)
(bad)
call
cli
addr16
retf
xor
cmp
mov
scas
fisubr
stc
xchg
mov
(bad)
(bad)
inc
outs
hlt
xchg
jmp
lahf
neg
jmp
adc
xchg
pushf
lock
push
(bad)
(bad)
cld
aas
aaa
add
sti
jne
in
(bad)
in
push
mov
(bad)
call
push
sub
std
dec
push
cli
int
neg
loop
push
gs
pop
xor
lock
push
xor
push
pusha
mov
and
mov
sub
iret
dec
(bad)
push
jae
push
sub
inc
dec
loop
or
inc
sti
(bad)
mov
fcomp
inc
add
daa
std
adc
sub
(bad)
(bad)
push
push
dec
xor
mov
in
sbb
sbb
sub
mov
(bad)
dec
mov
pop
cmps
sbb
push
cmp
mov
leave
sub
adc
inc
sbb
xchg
sahf
inc
cmp
adc
into
(bad)
adc
xor
xor
imul
es
dec
std
(bad)
(bad)
fdivr
fidiv
jb
adc
add
ror
(bad)
(bad)
dec
(bad)
retf
mov
mov
and
mov
iret
test
movs
jp
pop
inc
cli
inc
scas
xor
pshufw
xor
pop
std
int3
sub
sub
jle
aad
xchg
jle
jp
cmc
call
mov
(bad)
fcomip
adc
mov
inc
ins
fld
outs
fsub
ret
jns
(bad)
(bad)
(bad)
jmp
data16
and
ss
pop
std
add
or
xor
mov
(bad)
(bad)
(bad)
call
jl
sub
retf
ins
stos
dec
mov
xor
dec
xor
(bad)
call
ins
or
fld
(bad)
cmc
test
pop
add
jno
xor
stos
mov
call
or
mov
inc
int
sbb
cld
pop
mov
cdq
and
push
dec
out
jmp
cli
ret
dec
loop
in
mov
pop
repnz
hlt
aaa
pop
dec
arpl
mov
in
jo
(bad)
(bad)
out
adc
into
sub
mov
sub
push
cs
or
fcmovnbe
cli
movs
pop
or
(bad)
(bad)
(bad)
mov
mov
sbb
imul
fwait
mov
sbb
jne
inc
test
(bad)
(bad)
jmp
es
je
xchg
xchg
push
sbb
mov
and
push
fwait
pop
mov
sbb
je
mov
pop
ins
cs
mov
add
das
sar
mov
sbb
inc
dec
rol
(bad)
(bad)
push
movs
out
xor
rcr
sbb
(bad)
pop
ins
call
sub
lahf
ret
push
(bad)
(bad)
(bad)
call
adc
push
sub
rcl
loop
out
outs
and
int3
ss
(bad)
(bad)
(bad)
dec
sahf
jecxz
or
dec
(bad)
dec
loope
fadd
lods
test
mov
out
xor
in
jmp
mov
js
daa
aad
add
scas
cmp
lds
jo
dec
sub
mov
in
lods
mov
int3
sar
(bad)
(bad)
(bad)
jnp
or
popa
pop
push
addr16
add
inc
test
repz
or
cdq
cmp
(bad)
dec
sbb
sbb
repnz
repz
data16
sub
adc
mov
dec
cwde
into
fist
add
(bad)
(bad)
(bad)
(bad)
js
imul
sbb
inc
inc
or
push
mov
push
push
mov
cmc
inc
push
mov
mov
scas
mov
loop
pop
mov
cmp
sar
dec
cmp
(bad)
(bad)
jg
jp
fucomip
out
jne
or
fstp
and
int3
inc
adc
dec
(bad)
push
(bad)
dec
pop
and
movs
shl
cld
outs
(bad)
loop
and
add
call
(bad)
mov
xchg
les
jg
pop
mov
dec
stc
push
out
test
adc
(bad)
(bad)
(bad)
call
push
cmps
repz
push
bsf
dec
pop
int
addr16
pushf
(bad)
(bad)
dec
pop
mov
mov
sbb
and
mov
mov
cmp
(bad)
jmp
stc
inc
xchg
dec
sub
sub
repnz
jecxz
xchg
fst
retf
add
mov
dec
adc
lahf
popa
sub
sbb
(bad)
pusha
or
xchg
mov
les
scas
push
mov
xchg
xchg
ds
out
call
cmp
test
sub
popf
xchg
adc
or
(bad)
(bad)
(bad)
mov
dec
xchg
shl
xchg
aam
leave
dec
imul
push
pop
cmp
pop
mov
(bad)
dec
xchg
je
popa
mov
gs
iret
sbb
data16
sub
xor
(bad)
(bad)
(bad)
jmp
adc
mov
inc
fild
pop
in
sub
arpl
inc
and
(bad)
out
popa
(bad)
pop
lahf
xor
int
xor
jb
ins
xor
inc
pop
jnp
pop
inc
xor
mov
and
je
addr16
mov
sbb
jb
(bad)
(bad)
call
push
add
sahf
mov
push
int3
(bad)
lahf
lods
sbb
popa
push
and
(bad)
call
pop
jb
jge
imul
xchg
add
cs
std
or
or
into
pop
lds
pop
sbb
repz
sub
(bad)
jnp
or
xor
mov
xchg
mov
bound
lea
mov
call
dec
ret
push
inc
add
inc
add
sub
cmp
jg
mov
adc
and
outs
add
fcomip
or
mov
or
pop
lock
scas
pushf
(bad)
movs
lea
(bad)
(bad)
fld
ret
pop
jle
aaa
sbb
push
pusha
out
jp
sub
mov
jno
(bad)
(bad)
(bad)
std
pop
ins
pop
xor
cmc
enter
icebp
add
int
add
hlt
add
mov
call
push
stos
ror
cmp
add
fdivr
shl
popa
gs
out
push
mov
adc
jl
push
in
inc
sbb
dec
push
fstp
sub
xchg
pop
jmp
ins
xchg
pop
pop
call
test
ins
test
jns
into
push
and
scas
dec
(bad)
(bad)
(bad)
push
xchg
sub
pushf
cmp
hlt
(bad)
push
add
sub
shr
xchg
fnsave
cld
xor
dec
push
mov
push
(bad)
fld
mov
mov
in
sar
(bad)
jmp
inc
pop
sub
call
push
push
xor
and
inc
xor
mov
inc
jmp
adc
xchg
icebp
mov
mov
push
sbb
push
(bad)
(bad)
leave
mov
add
ret
jmp
(bad)
jmp
loopne
jno
or
xchg
adc
lahf
pop
inc
mov
call
xchg
dec
out
inc
mov
adc
imul
scas
mov
ss
scas
cmp
cmps
add
inc
xor
or
add
jmp
(bad)
sti
xor
jns
pushf
outs
mov
movs
out
push
sti
xchg
dec
ss
movs
add
pop
stc
(bad)
(bad)
mov
jl
shr
ja
iret
int3
mov
mov
sbb
sbb
repnz
(bad)
(bad)
call
cmp
ja
jb
dec
icebp
sbb
adc
daa
mov
xor
jmp
(bad)
(bad)
inc
es
mov
jecxz
cwde
dec
add
das
jns
mov
pop
jle
and
push
loopne
(bad)
(bad)
(bad)
dec
jae
mov
into
es
jp
pop
jmp
movs
cmc
xchg
and
jbe
mov
(bad)
(bad)
(bad)
jmp
xchg
retf
adc
xor
inc
test
xlat
cwde
movs
popa
jnp
jle
inc
fs
mov
inc
mov
pop
sub
ins
icebp
clc
jne
xor
jne
mov
lock
outs
jl
sbb
push
xchg
pop
push
push
cmp
push
push
mov
out
stc
cmp
and
mov
sbb
pop
cmc
(bad)
jmp
xlat
pushf
sub
mov
or
cmp
test
jmp
or
fdiv
push
pop
push
(bad)
(bad)
(bad)
push
outs
bound
and
push
xchg
iret
mov
jns
(bad)
ins
push
test
xchg
add
or
in
(bad)
(bad)
(bad)
push
sub
xlat
sub
fldlg2
jmp
inc
stos
mov
jmp
mul
(bad)
(bad)
(bad)
jmp
mov
xor
punpckldq
dec
mov
loope
inc
pop
mov
(bad)
(bad)
dec
(bad)
cdq
or
xchg
add
fucomp
ret
(bad)
movs
pop
lods
test
(bad)
(bad)
(bad)
call
cdq
je
inc
into
popf
mov
sbb
jae
pop
and
cmps
dec
inc
cld
xchg
xchg
jecxz
loope
(bad)
mov
fcomp
jmp
adc
add
(bad)
adc
enter
inc
(bad)
cmp
inc
sbb
call
movs
push
cmp
inc
(bad)
(bad)
inc
xchg
jnp
xchg
cmp
std
push
mov
mov
retf
jge
sar
mov
cli
sub
push
lds
daa
(bad)
(bad)
(bad)
mov
jp
(bad)
into
xchg
add
cdq
mov
cwde
mov
and
add
adc
clc
cmps
dec
(bad)
(bad)
cmps
inc
(bad)
call
ds
lock
and
mov
nop
dec
clc
push
scas
rcl
jb
outs
cmp
scas
mov
out
fcmovu
xchg
push
xor
pop
sub
jecxz
fwait
xlat
and
xor
sub
cld
jmp
jge
pop
ror
cmp
sti
mov
cmp
(bad)
(bad)
(bad)
jmp
out
out
stc
dec
fdivr
stos
adc
lahf
inc
aad
repnz
gs
cs
inc
or
mov
loopne
(bad)
dec
or
or
mov
sub
xchg
pop
sub
inc
or
gs
and
clc
xor
xchg
push
sbb
test
es
retf
fisttp
mov
dec
into
(bad)
(bad)
(bad)
jmp
jle
popa
js
sub
addr16
imul
aad
gs
clc
shr
test
(bad)
(bad)
dec
in
pop
xor
sbb
or
mov
pop
loope
inc
fmul
sbb
xchg
cmp
push
stc
mov
xchg
mov
int
cmps
pop
loopne
add
sub
rcl
cmps
imul
xchg
sbb
cmp
sbb
adc
pop
adc
mov
add
mov
(bad)
(bad)
(bad)
cmp
sub
sub
push
adc
xor
out
movs
in
inc
std
(bad)
clc
jg
jo
mov
dec
mov
sub
repnz
cwde
push
mov
push
mov
int3
jmp
stc
cdq
jns
xor
imul
mov
std
(bad)
dec
xchg
retf
enter
(bad)
mov
sub
icebp
xchg
sti
mov
(bad)
(bad)
push
ja
and
or
and
cmp
clc
addr16
out
call
mov
push
sar
(bad)
(bad)
(bad)
call
call
test
in
xor
xor
imul
pop
(bad)
(bad)
jmp
repnz
mov
jmp
jns
adc
mov
mov
or
sub
cs
cwde
or
movs
retf
hlt
(bad)
(bad)
(bad)
mov
mov
xchg
sub
mov
inc
mov
inc
ret
push
mov
(bad)
in
lahf
sar
aaa
mov
ja
sbb
push
add
(bad)
call
and
daa
dec
je
in
push
icebp
aad
push
das
js
adc
daa
fidiv
test
fcmovne
pop
icebp
(bad)
dec
cmp
mov
rcr
ds
sub
mov
push
and
sbb
sahf
(bad)
(bad)
(bad)
inc
push
xor
(bad)
cmps
clc
hlt
pop
ds
repz
mov
xor
lea
es
cmp
(bad)
(bad)
(bad)
cmp
mov
jp
cli
or
sub
pop
adc
push
and
(bad)
mov
mov
inc
pusha
xor
cdq
test
cmps
jno
xchg
movs
xchg
imul
outs
pop
mov
leave
xor
aad
shl
adc
inc
fcmovnu
mov
(bad)
push
dec
jecxz
dec
fisttp
cmp
pop
pushf
scas
add
pop
xchg
xchg
xchg
repnz
inc
mov
and
leave
mov
dec
mov
push
jbe
push
stc
(bad)
mov
jmp
dec
mov
ins
test
aaa
and
mov
cmp
cdq
mov
mov
(bad)
call
adc
xor
in
icebp
test
or
and
push
popf
icebp
or
leave
mov
sub
(bad)
(bad)
push
pop
iret
pusha
cmp
push
sbb
push
xchg
jne
ins
adc
cmc
xchg
pushf
sub
cld
and
loope
mov
stos
hlt
sub
fnsave
(bad)
(bad)
(bad)
(bad)
jle
xlat
ds
enter
adc
cmp
and
xor
jbe
daa
jo
iret
dec
mov
loopne
int
(bad)
(bad)
(bad)
call
mov
in
jmp
clc
shr
pop
add
(bad)
outs
(bad)
pop
fiadd
fs
sub
sbb
stos
sbb
dec
xlat
push
sub
popf
fisub
jmp
or
dec
jbe
inc
jb
and
(bad)
(bad)
call
inc
ins
or
fst
ins
mov
dec
inc
les
imul
(bad)
(bad)
(bad)
(bad)
jmp
push
js
add
(bad)
mov
dec
jnp
mov
retf
jg
lods
(bad)
(bad)
(bad)
dec
es
aam
and
sbb
xor
mov
mov
rcl
data16
mov
(bad)
(bad)
jmp
sbb
or
adc
xlat
xor
push
(bad)
mov
lahf
inc
gs
popf
ss
outs
mov
and
fs
inc
mov
or
add
adc
adc
push
inc
and
pop
dec
stos
(bad)
(bad)
dec
pushf
dec
test
lea
leave
xor
aad
mov
nop
cmc
pop
and
xor
ins
jb
mov
nop
jae
(bad)
(bad)
(bad)
jmp
add
pop
inc
data16
dec
dec
pushf
icebp
das
hlt
sti
rcl
out
and
js
hlt
pop
jbe
outs
clc
dec
push
xor
cmp
xchg
stc
gs
cli
lock
ret
push
stos
inc
and
mov
sti
and
cli
jnp
(bad)
pop
icebp
push
ficom
dec
mov
mov
pop
ret
cmp
mov
lahf
adc
(bad)
cmp
test
test
pop
xor
test
mov
idiv
(bad)
(bad)
(bad)
jmp
loopne
jg
mov
iret
out
add
(bad)
xchg
push
lahf
inc
dec
xchg
loopne
out
out
sbb
gs
jl
(bad)
(bad)
push
mov
stos
and
push
outs
adc
add
mov
mov
cld
xchg
jmp
loop
xor
lods
inc
pop
dec
mov
jnp
iret
(bad)
ficomp
mov
imul
(bad)
(bad)
(bad)
push
sbb
sub
fdivr
mov
loope
sub
enter
push
std
inc
or
repz
adc
adc
and
jbe
(bad)
(bad)
(bad)
(bad)
mov
push
adc
test
push
ror
out
pop
mov
inc
fcmovnbe
xor
into
inc
xchg
and
sti
pop
push
mov
in
or
jo
fistp
sub
bound
clc
xchg
popa
(bad)
(bad)
sub
gs
xlat
adc
mov
sub
(bad)
(bad)
cmp
loop
cmp
push
or
jb
push
sbb
(bad)
call
and
fwait
int
inc
push
jl
pushf
fnsave
mov
inc
sbb
imul
mov
jg
inc
cdq
sub
fisttp
mov
rcr
shl
call
fmul
sub
fmul
repz
(bad)
fild
loopne
cmp
push
aaa
adc
xor
mov
inc
cmp
lea
repz
test
sub
or
cdq
jecxz
sar
(bad)
jmp
hlt
cdq
xchg
mov
xchg
repnz
push
dec
sar
imul
ret
dec
xchg
pop
sbb
(bad)
(bad)
dec
in
sub
pop
aam
sar
pop
jp
lahf
mov
cmp
push
cwde
sbb
bound
ret
call
(bad)
inc
jl
dec
(bad)
ss
jnp
mov
fnstsw
das
sahf
pop
push
adc
shl
aas
test
mov
hlt
call
clc
mov
repz
ins
fadd
in
cmp
out
(bad)
(bad)
inc
enter
ret
push
cld
rcr
sar
les
sbb
gs
adc
push
(bad)
push
cld
mov
jno
pop
xchg
or
xor
aam
pop
(bad)
(bad)
mov
cmps
xor
xchg
push
gs
sbb
cwde
pop
pop
aaa
sub
rcl
test
mov
test
jne
sub
loope
rcl
adc
and
mov
ins
xchg
mov
es
push
ss
ror
or
repz
lea
xor
mov
(bad)
(bad)
(bad)
jg
jne
dec
rcl
xchg
ret
sbb
sbb
movs
lods
xor
inc
stos
jmp
and
cmps
xlat
ja
dec
lock
dec
jp
add
out
jbe
outs
outs
lods
push
jmp
xor
sub
call
inc
shl
xchg
and
push
(bad)
(bad)
(bad)
jmp
fsub
cmp
fld
aad
shl
outs
and
sub
das
call
retf
fsub
sub
(bad)
(bad)
push
sbb
mov
jo
mov
or
int
mov
jb
mov
call
fmul
shl
and
fist
test
jmp
inc
(bad)
(bad)
(bad)
dec
push
xchg
or
leave
jl
dec
shl
push
jge
xchg
pop
push
ss
cmp
sub
push
ins
jmp
(bad)
fnstenv
loop
scas
enter
jmp
sbb
fucomp
pop
inc
ret
fidiv
mov
mov
inc
(bad)
(bad)
(bad)
jmp
and
(bad)
push
mov
retf
push
lock
cmp
movs
xchg
add
daa
aas
(bad)
pushf
mov
in
int
push
jnp
std
(bad)
push
push
dec
mov
push
push
retf
js
mov
(bad)
jmp
loop
mov
xchg
rcr
mov
adc
(bad)
(bad)
(bad)
dec
ret
leave
or
xlat
push
stos
int3
dec
xchg
and
gs
xchg
lds
in
xchg
mov
(bad)
(bad)
(bad)
push
xor
cmp
out
adc
pop
cmp
push
mov
sub
(bad)
(bad)
(bad)
(bad)
jle
in
in
mov
mov
mov
cs
js
pop
loop
cmps
cld
xchg
mov
(bad)
jmp
jbe
mov
aas
les
cdq
push
adc
dec
jns
sbb
ret
mov
and
xchg
jmp
adc
(bad)
mov
inc
jle
cdq
adc
xchg
cmp
movs
cmc
mov
(bad)
(bad)
inc
rcr
lods
or
xlat
movs
int3
int
sbb
(bad)
gs
aam
inc
cmp
mov
jb
std
(bad)
call
jo
pop
imul
jmp
in
cmc
mov
movs
and
mov
cmp
cmp
mov
cmp
jle
popf
mov
je
xor
jg
jmp
sbb
sbb
pop
fdiv
fsubr
pop
mov
inc
cld
pop
loopne
dec
push
fcomp
lods
cmp
sti
jmp
xor
push
shl
sbb
dec
mov
mov
(bad)
(bad)
(bad)
fcmovnbe
fstp
cli
inc
jg
push
jl
cmc
pop
jmp
data16
popf
jl
aas
std
outs
scas
inc
inc
(bad)
call
fild
adc
add
pushf
push
pand
in
push
pop
jmp
stc
cmc
(bad)
cmp
xor
retf
xchg
mov
stos
inc
inc
lahf
push
int3
pop
clc
(bad)
(bad)
(bad)
fisub
inc
jmp
ds
mov
nop
mov
jno
inc
add
cwde
js
adc
fs
popf
(bad)
push
add
in
push
in
and
retf
imul
inc
mov
(bad)
(bad)
(bad)
(bad)
in
lea
js
mov
cmp
imul
adc
outs
mov
dec
(bad)
(bad)
(bad)
call
mul
mov
push
int3
fwait
cwde
popf
shl
call
mov
jno
cmp
(bad)
push
or
mov
jb
mov
pop
mov
or
(bad)
(bad)
mov
xchg
je
je
cmp
sub
call
push
pop
dec
(bad)
(bad)
(bad)
call
and
or
aas
in
inc
jne
sub
mov
cdq
popf
adc
mov
iret
push
cmp
pop
cld
push
ss
inc
mov
xchg
cwde
push
int
xor
aad
sar
(bad)
push
cmps
add
push
fs
sub
adc
retf
dec
push
es
call
jmp
inc
arpl
mov
sub
push
pop
bound
jb
sbb
and
loop
jecxz
idiv
iret
scas
push
push
fisub
fs
das
jg
movs
push
xchg
fisttp
(bad)
in
mov
and
and
and
jp
xor
sti
enter
sti
mov
push
sbb
ror
cmc
pop
sub
push
jge
push
sub
(bad)
jmp
retf
rcl
jge
jmp
cmc
dec
sar
lods
in
mov
rcr
mov
fisub
pop
xor
xor
mov
mov
sti
xor
dec
js
clc
aad
repnz
sti
xor
(bad)
mov
sub
sahf
imul
and
das
pop
sub
vunpckhps
fs
inc
sub
out
fmul
cdq
sub
popf
mov
(bad)
call
and
int3
dec
loope
dec
xchg
xor
cmc
data16
inc
(bad)
(bad)
(bad)
(bad)
(bad)
and
call
jo
in
mov
shl
inc
pop
ins
push
jns
pop
cmp
and
cmps
and
mov
jbe
or
pusha
out
fwait
and
test
hlt
jns
es
lock
or
repnz
sti
push
fcos
(bad)
jg
sbb
push
adc
mov
dec
or
popf
int
mov
(bad)
out
aam
pop
scas
fnstenv
sahf
push
mov
mov
push
imul
mov
(bad)
fcomip
inc
sbb
xor
xchg
outs
dec
mov
dec
xor
pop
fstp
inc
xchg
aaa
(bad)
(bad)
(bad)
and
sub
in
push
and
sub
xor
inc
xor
adc
(bad)
(bad)
(bad)
dec
jo
sbb
cmps
mov
xlat
ror
loope
in
nop
push
fisttp
popf
sbb
movs
xlat
dec
adc
mov
je
mov
push
imul
mov
cmp
cmp
jns
outs
daa
sub
inc
ins
pop
inc
int3
cmp
lea
lock
xchg
loopne
push
adc
in
pop
ror
(bad)
out
xchg
cmc
retf
inc
xor
dec
cdq
das
ret
(bad)
imul
jmp
cmp
jae
cmps
test
push
sub
cmps
pop
es
sbb
push
cdq
scas
out
cmp
dec
lods
cmp
popf
mov
fld
mov
outs
or
(bad)
push
mov
jo
add
lods
sbb
mov
(bad)
fist
out
jmp
std
push
push
lock
scas
mov
(bad)
adc
(bad)
(bad)
jg
fsub
sbb
hlt
jg
loope
jle
cmp
lahf
stc
ds
cmp
jmp
and
(bad)
push
xchg
ret
xchg
jno
sahf
adc
aam
cmp
xor
(bad)
fadd
push
cmp
jnp
adc
cmp
mov
(bad)
(bad)
(bad)
aas
jae
repz
hlt
cmc
fs
cmp
paddw
test
jecxz
test
(bad)
jmp
and
out
rcl
(bad)
jbe
add
aam
push
(bad)
stos
mov
add
inc
adc
aas
and
and
lock
and
(bad)
(bad)
dec
cmps
shl
mov
push
dec
(bad)
cli
xor
dec
sar
mov
xchg
data16
(bad)
(bad)
call
imul
mov
cmp
popf
push
repz
frstor
shr
cmps
pop
sub
addr16
(bad)
(bad)
jmp
push
stos
bound
ins
inc
test
push
mov
and
(bad)
(bad)
(bad)
(bad)
jp
and
mov
outs
jecxz
adc
adc
test
push
dec
shl
mov
push
pop
push
push
leave
jg
and
jl
repnz
pusha
mov
(bad)
das
mov
enter
rcr
cmp
xchg
iret
arpl
cmps
or
adc
dec
out
scas
cmp
(bad)
sti
scas
inc
mov
(bad)
xor
mov
or
(bad)
jg
mov
int
bound
stc
mov
popa
out
pop
jmp
dec
or
mov
cli
push
mov
inc
lods
ficom
cmp
cmp
jecxz
bound
ins
xor
ret
scas
stos
sub
mov
jle
xlat
add
and
mov
sub
cmp
movs
(bad)
(bad)
(bad)
(bad)
js
fmul
and
ret
cmp
call
mov
fucom
xchg
(bad)
sub
(bad)
(bad)
call
jmp
mov
pop
pop
mov
mov
adc
mov
ret
dec
aad
cli
in
jmp
pop
iret
sub
hlt
cmps
sub
fst
cmp
daa
jle
dec
loopne
xor
cmp
int3
mov
jno
ficom
adc
(bad)
(bad)
(bad)
push
mov
sub
or
ins
mov
loopne
add
mov
xor
dec
xchg
dec
(bad)
(bad)
inc
or
sahf
rol
retf
inc
ret
call
jge
xor
aaa
sar
pusha
adc
mov
test
push
in
les
std
(bad)
(bad)
push
leave
mov
shl
jg
and
dec
(bad)
mov
repnz
jle
out
icebp
pop
cli
call
call
jno
rol
imul
ja
mov
in
inc
sbb
mov
(bad)
xlat
xor
(bad)
(bad)
(bad)
call
ror
dec
mov
jl
jno
cdq
mov
test
fsubr
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
in
fs
mov
mov
xor
mov
adc
rcl
cmps
cld
sub
into
mov
xor
jmp
inc
data16
push
(bad)
shl
(bad)
out
aam
push
fwait
(bad)
(bad)
(bad)
(bad)
call
cmp
mul
push
push
and
shl
lods
ds
test
xchg
xchg
mov
mov
(bad)
(bad)
call
jo
mov
cmp
sar
or
addr16
mov
add
js
sbb
(bad)
(bad)
(bad)
call
mov
sub
scas
inc
idiv
stos
ror
add
push
cmp
rcr
sbb
jge
or
(bad)
mov
mov
dec
mov
xchg
mov
shr
xchg
adc
mov
mov
nop
add
popa
retf
ss
and
xchg
lahf
into
icebp
out
dec
(bad)
cli
addr16
and
inc
cld
push
mov
loopne
enter
(bad)
cmp
mov
(bad)
push
inc
lahf
jge
jae
xchg
mov
fld
jmp
mov
movs
imul
jae
fisub
cli
(bad)
or
bound
push
std
in
aam
movs
mov
push
mov
sbb
in
push
stos
push
and
int3
arpl
stos
dec
pusha
push
jo
loope
push
(bad)
fprem1
(bad)
(bad)
(bad)
(bad)
jmp
in
xlat
clc
sub
add
test
std
jle
gs
fwait
jns
(bad)
(bad)
dec
in
cs
fnstcw
mov
arpl
je
cmps
sahf
sub
hlt
xor
push
cli
enter
mov
or
iret
out
div
and
dec
xchg
add
cld
sbb
add
cwde
mov
mov
push
in
or
dec
or
(bad)
(bad)
jmp
xor
pop
xor
out
shr
retf
cmps
lods
cwde
or
add
cmp
lds
and
leave
ins
push
ins
retf
mov
xchg
mov
push
sbb
clc
xor
inc
daa
xchg
push
jmp
push
pop
push
or
push
sbb
test
(bad)
jmp
lds
xchg
fldenv
out
adc
mov
mov
or
and
loope
sar
int3
xchg
push
outs
cmp
push
or
pusha
and
or
dec
dec
iret
enter
fadd
(bad)
(bad)
(bad)
call
ret
lods
lods
push
in
dec
mov
loop
ss
and
mov
dec
jmp
jns
jg
or
adc
jae
retf
sbb
sub
out
scas
add
ds
(bad)
(bad)
jg
jp
sbb
mov
inc
call
out
sub
std
cmp
rol
icebp
in
inc
lock
cmp
nop
fcomp
mov
jae
xchg
push
(bad)
(bad)
(bad)
call
cli
jnp
dec
(bad)
fldcw
pop
add
out
sbb
(bad)
iret
call
rcl
inc
out
push
out
cli
(bad)
jmp
jnp
in
mov
std
mov
jg
lods
sbb
sti
mov
(bad)
jle
or
xor
pop
fdivr
ror
and
adc
ret
or
cmp
mov
sti
sub
lock
xchg
ds
iret
aas
sti
xchg
sbb
adc
(bad)
(bad)
jmp
adc
sbb
sub
inc
out
cli
(bad)
sti
pop
add
out
aaa
sbb
mov
(bad)
(bad)
dec
cmp
retf
test
ret
mov
rcr
xchg
lock
mov
adc
lds
mov
mov
(bad)
(bad)
jmp
aam
mov
mov
cmp
scas
inc
or
mov
inc
lock
jge
leave
mov
test
xchg
(bad)
(bad)
(bad)
call
mov
fbstp
int3
mov
pand
mov
pop
les
push
movs
jmp
nop
push
and
(bad)
(bad)
jmp
stos
in
sub
out
retf
xor
cwde
inc
xchg
pop
mov
ins
xchg
sub
shr
adc
movs
pop
mov
dec
in
(bad)
mov
jg
into
pop
cld
jg
lods
push
pop
in
call
pop
aad
(bad)
(bad)
(bad)
call
pop
das
mov
scas
js
or
pop
or
push
xor
and
add
or
leave
nop
in
push
(bad)
pop
sbb
and
fs
sbb
nop
mov
fild
dec
(bad)
call
bound
shr
push
out
fnsave
js
cmp
xor
out
or
pop
scas
ror
mov
jae
mov
xchg
sbb
(bad)
push
les
ret
bound
and
jge
into
outs
or
jo
lods
(bad)
out
clc
call
jbe
cmp
pop
xor
sub
add
ins
movs
das
(bad)
lods
lock
fs
sub
mov
mov
push
shl
(bad)
inc
dec
leave
dec
xlat
or
push
sub
pop
scas
and
fisub
(bad)
(bad)
push
loopne
xlat
cmp
or
jp
xchg
ss
test
fwait
and
dec
or
cmp
xlat
out
movs
hlt
(bad)
(bad)
fild
mov
push
push
sahf
jno
stos
(bad)
(bad)
(bad)
jg
cld
shr
loopne
fistp
cmp
xchg
ret
mov
inc
loope
outs
jle
dec
mov
inc
push
cs
in
sub
je
mov
icebp
ins
cmp
(bad)
call
sub
lods
jmp
stc
cmp
sbb
imul
(bad)
mov
arpl
jp
jns
test
sub
leave
(bad)
sbb
adc
xchg
(bad)
(bad)
(bad)
dec
push
shl
push
jno
pop
aaa
adc
adc
and
xor
dec
ret
xor
dec
mov
arpl
(bad)
in
and
mov
(bad)
(bad)
(bad)
jp
or
or
dec
cs
push
xchg
cmp
sbb
push
mov
adc
pop
je
call
xlat
movs
jb
adc
pop
mov
fild
retf
add
popf
mov
(bad)
(bad)
(bad)
call
push
mov
retf
jmp
ret
xchg
sub
mov
push
shl
sar
jmp
out
lock
push
out
ds
sub
or
test
fcmovnbe
fcom
push
jmp
call
fisubr
jae
bound
sbb
adc
xlat
adc
dec
pop
sub
xchg
out
mov
aad
stc
mov
pop
mov
add
loop
(bad)
cmp
dec
stos
add
pop
cs
iret
jmp
call
cli
adc
shl
sub
inc
push
ins
faddp
sbb
mov
pop
(bad)
(bad)
mov
test
cmp
xor
mov
pop
and
push
jmp
out
rcr
test
xor
add
mov
(bad)
(bad)
dec
jle
fyl2x
(bad)
out
or
xchg
movs
adc
ins
jne
jmp
(bad)
(bad)
(bad)
(bad)
push
call
jno
cmps
sbb
movs
sahf
xchg
sub
adc
inc
repz
jg
pop
pop
pop
loopne
jmp
ret
mul
clc
test
and
inc
xor
sbb
(bad)
cmp
inc
in
jmp
xchg
cli
add
push
jmp
(bad)
movs
push
shl
out
ins
jle
cli
jb
(bad)
(bad)
push
aam
jecxz
repz
mov
dec
and
les
jp
and
fwait
stos
gs
(bad)
(bad)
call
js
pop
pop
gs
popa
xor
mov
inc
sub
fisttp
outs
mov
xchg
pop
xchg
add
test
push
jne
pop
test
(bad)
lods
jmp
repz
jmp
sbb
mov
or
nop
or
call
sub
arpl
push
aad
aas
ret
loop
xchg
(bad)
fdivr
xchg
mov
(bad)
jmp
sub
popa
mov
jecxz
ja
(bad)
icebp
out
cmps
push
pop
xchg
(bad)
(bad)
(bad)
jmp
into
sbb
call
dec
pop
sbb
cmps
mov
call
(bad)
(bad)
call
xchg
add
pop
xchg
or
arpl
loop
cwde
mov
outs
push
stc
cwde
fcmovb
mov
or
mov
sub
(bad)
jmp
mov
popa
scas
add
mov
xchg
push
sar
(bad)
(bad)
inc
mov
mov
ret
mov
push
sub
and
in
stos
push
xchg
(bad)
jmp
sub
mov
lods
scas
ret
or
shl
(bad)
push
lods
add
(bad)
(bad)
(bad)
jmp
xlat
pop
dec
pop
leave
scas
add
xchg
lods
int3
addr16
movs
mov
daa
inc
test
fadd
aam
cmp
(bad)
(bad)
dec
int
in
popa
xchg
enter
lds
dec
stos
test
jnp
jp
push
jmp
cmp
rol
popf
pusha
ins
shl
xchg
ins
sub
stos
mov
push
nop
dec
popa
add
xchg
call
shr
jne
(bad)
loop
push
ins
ret
sbb
pop
and
jl
mov
pop
mov
mov
xlat
pop
jnp
mov
(bad)
(bad)
(bad)
(bad)
in
pop
mov
daa
mov
mov
push
jp
in
mov
xchg
mov
mov
adc
popa
call
(bad)
call
mov
outs
loope
jl
pop
jp
sub
sub
test
mov
sub
inc
iret
(bad)
(bad)
(bad)
dec
push
shl
push
bound
adc
mov
sbb
pushf
imul
adc
(bad)
(bad)
jmp
mov
mov
stos
jo
jns
stos
jle
pop
sub
push
sbb
scas
int3
mov
or
inc
mov
leave
adc
js
sbb
xor
push
or
push
or
icebp
adc
adc
(bad)
in
shl
not
(bad)
mov
call
jo
aam
xchg
in
pusha
xchg
xor
jecxz
cmps
(bad)
(bad)
(bad)
dec
or
mov
fst
stos
push
sub
push
ror
call
mov
movs
(bad)
(bad)
(bad)
jmp
jl
dec
sub
imul
ins
push
movs
lods
push
push
mov
sub
(bad)
retf
push
test
(bad)
(bad)
call
sbb
pop
add
out
lock
and
dec
inc
mov
or
(bad)
(bad)
(bad)
jmp
fadd
jb
mov
inc
add
mov
push
mov
jmp
push
mov
pop
ss
idiv
ja
hlt
sbb
jbe
push
xor
sbb
data16
loop
mov
cmp
xor
inc
pop
cmp
sbb
pop
das
(bad)
xchg
int
push
ret
adc
(bad)
(bad)
(bad)
jmp
scas
hlt
inc
sar
or
mov
xor
arpl
mov
lahf
push
(bad)
jmp
push
push
fsub
not
or
xor
add
cwde
mov
jmp
jmp
adc
mov
aas
sti
test
fs
(bad)
loopne
push
out
cld
mov
(bad)
(bad)
(bad)
cmp
sub
popa
call
push
sub
hlt
and
mov
pop
jg
lods
mov
push
(bad)
enter
sar
leave
jge
mov
sub
inc
ret
lods
push
push
addr16
cs
(bad)
push
sbb
stos
pop
xchg
(bad)
data16
rol
xchg
xchg
and
test
push
cs
xor
(bad)
(bad)
(bad)
fidivr
adc
retf
cmp
cmp
add
loop
sbb
mov
inc
fimul
mov
icebp
dec
fdivr
sbb
(bad)
(bad)
(bad)
dec
add
xor
enter
movs
les
adc
dec
mov
cmps
das
sbb
scas
jmp
in
xchg
das
and
loope
in
mov
ja
mov
push
stos
dec
mov
hlt
mov
popf
loopne
lea
dec
(bad)
xor
stos
push
(bad)
(bad)
(bad)
push
mov
cmp
sbb
xor
pushf
mov
adc
dec
push
ret
(bad)
dec
ficomp
pop
mov
(bad)
call
push
data16
mov
add
sahf
rol
(bad)
jg
lods
(bad)
xchg
jbe
push
cmps
sbb
jns
cwde
xchg
sbb
rol
pop
hlt
or
pushf
in
push
(bad)
call
pushf
mov
and
pop
shl
out
cmp
aad
dec
repnz
jno
cld
cmps
(bad)
jmp
xchg
mov
mov
scas
lahf
mov
xor
jp
(bad)
push
xor
pop
gs
and
lods
fs
mov
jp
mov
icebp
mov
ins
mov
push
rcr
ret
int3
dec
(bad)
test
mov
sbb
or
jns
sbb
mov
lahf
rcl
pop
mov
fs
xor
or
pop
ja
cwde
cmp
cmp
(bad)
(bad)
dec
xchg
xor
lahf
lods
cmp
out
push
inc
mov
pop
dec
cmp
cmp
pmaxub
(bad)
(bad)
push
out
loope
ds
mov
cmc
pusha
jbe
mov
cmp
dec
aad
mov
clc
(bad)
(bad)
mov
jmp
psrld
cmp
fs
shl
ret
adc
(bad)
(bad)
(bad)
jmp
push
arpl
xor
(bad)
adc
sub
scas
dec
inc
and
mov
cli
push
stos
popa
push
(bad)
(bad)
push
add
mov
lea
addr16
inc
mov
lds
xchg
test
mov
movs
das
or
xchg
sub
sub
cmps
sti
addr16
mov
jmp
loopne
jle
push
out
jge
add
dec
(bad)
jmp
shr
inc
mov
lea
into
lds
mov
pusha
jb
mov
mov
jg
lods
jmp
aas
aaa
adc
call
and
(bad)
(bad)
jmp
dec
cld
lock
cmps
jnp
arpl
(bad)
and
inc
add
mov
and
sub
(bad)
push
push
fmul
sub
fsub
jmp
mov
jb
outs
rcr
inc
outs
xchg
pop
add
das
cli
(bad)
push
dec
cmps
sbb
scas
gs
femms
rol
inc
imul
call
pop
dec
sahf
sub
clc
dec
xchg
not
push
data16
push
add
rcr
fsubr
jmp
dec
cmps
push
ret
add
imul
jle
jno
xor
data16
jmp
dec
shl
out
mov
adc
arpl
(bad)
jmp
popf
inc
cli
xchg
test
mov
aas
rcr
dec
lds
addr16
push
xchg
hlt
stos
inc
pop
push
je
jle
enter
push
call
std
(bad)
call
stos
mov
mov
adc
outs
retf
ret
xchg
cmps
lahf
jbe
mov
(bad)
(bad)
call
pop
mov
cdq
sbb
push
xchg
xchg
mov
repz
jle
lods
lods
in
adc
inc
(bad)
(bad)
jmp
push
(bad)
cld
pop
push
xchg
pop
(bad)
pop
pop
cld
test
cdq
mov
mov
add
iret
mov
call
icebp
sbb
repz
pop
out
js
fisttp
(bad)
sbb
(bad)
pop
xlat
outs
sbb
add
cmp
retf
xor
les
ret
test
jl
mov
cmc
test
(bad)
xlat
(bad)
rcr
xchg
xor
test
inc
test
call
jns
xchg
cdq
pop
inc
xchg
(bad)
(bad)
dec
repz
(bad)
loopne
mov
xlat
and
inc
aam
push
icebp
xchg
jne
dec
adc
sub
(bad)
(bad)
(bad)
(bad)
stc
ds
inc
out
repz
fld
fdiv
sub
xchg
leave
out
dec
test
fisttp
and
(bad)
(bad)
jmp
out
xchg
aam
idiv
xor
idiv
imul
jg
(bad)
jmp
ret
into
inc
mov
mov
sub
push
pop
lods
pop
mov
(bad)
(bad)
push
ret
dec
shl
nop
fild
pop
cwde
mov
(bad)
jmp
pop
and
and
jbe
nop
ss
nop
xchg
ss
xchg
mov
test
fisubr
stos
pop
sub
rcr
add
add
(bad)
(bad)
inc
aad
mov
outs
fist
mov
xchg
test
add
pushf
imul
out
(bad)
(bad)
(bad)
inc
sbb
mov
outs
(bad)
stos
jecxz
(bad)
or
dec
pop
dec
stos
mov
push
(bad)
(bad)
(bad)
dec
push
adc
repnz
xchg
lods
add
js
rol
and
adc
jo
pop
mov
loopne
retf
scas
cmps
int3
gs
xor
shr
push
loopne
stc
test
and
test
jmp
shr
jmp
out
(bad)
call
mov
jp
cmc
leave
jge
daa
add
cmp
out
jae
lock
shl
clc
rol
(bad)
call
or
(bad)
clc
ss
(bad)
add
cmp
ins
dec
shr
add
fild
mov
xlat
jmp
imul
cdq
inc
mov
sti
fldenv
jmp
scas
pop
cmps
mov
loopne
les
cmps
arpl
jb
pusha
xchg
pop
stos
pop
jns
cld
(bad)
(bad)
ds
dec
and
retf
fwait
sub
outs
dec
rol
inc
lds
lods
(bad)
dec
fst
fcom
aaa
jno
xchg
rol
push
in
(bad)
(bad)
(bad)
jmp
sub
sub
and
cld
mov
clc
inc
push
loope
stos
jbe
cmp
(bad)
(bad)
jg
sub
ds
sbb
sti
cld
mov
cmps
aam
(bad)
adc
loop
(bad)
(bad)
dec
push
jb
repnz
jb
and
mov
iret
xchg
or
inc
lock
mov
mov
lods
jge
sub
push
(bad)
mov
mov
sub
pushf
mov
stos
(bad)
(bad)
(bad)
push
inc
sub
cli
adc
fisubr
imul
ins
jae
pop
push
pop
fcmove
fistp
(bad)
(bad)
(bad)
jp
sub
push
in
ds
loopne
outs
adc
ins
pop
push
je
mov
cli
mov
(bad)
jg
jmp
pop
jae
in
push
movs
ror
or
test
cs
rol
test
pusha
adc
(bad)
(bad)
jmp
jecxz
add
mov
sar
test
push
out
(bad)
fistp
(bad)
(bad)
jmp
adc
or
jne
add
mov
adc
jp
stos
inc
out
ss
sub
dec
push
cli
dec
dec
add
push
fst
aad
retf
mov
movs
push
cmps
add
pop
in
shl
or
(bad)
(bad)
dec
ds
jae
jno
repnz
(bad)
ficomp
pop
(bad)
adc
add
cmps
xor
sub
push
cmps
push
add
jbe
xchg
hlt
pop
sahf
ss
ja
adc
pushf
pop
add
rcr
(bad)
dec
cld
lea
cli
sub
dec
ret
loopne
das
scas
jge
mov
adc
mov
and
(bad)
(bad)
call
adc
xor
mov
(bad)
out
(bad)
cmps
sub
or
cmp
(bad)
adc
test
(bad)
(bad)
(bad)
(bad)
push
lock
push
and
push
stc
out
shr
push
cwde
cwde
les
(bad)
(bad)
(bad)
jmp
sbb
mov
inc
cwde
xchg
call
cmp
div
xchg
pop
jp
or
(bad)
(bad)
jmp
mov
xchg
and
retf
or
pushf
dec
inc
push
adc
mov
(bad)
(bad)
(bad)
mov
addr16
loop
pop
mov
mov
jmp
ins
outs
rol
(bad)
(bad)
(bad)
call
push
add
push
int
movs
adc
jo
aam
test
push
sub
mov
nop
stc
and
push
pushf
popa
scas
jo
sub
add
(bad)
push
add
sahf
mov
push
nop
dec
call
inc
dec
xchg
add
add
(bad)
scas
adc
push
adc
(bad)
call
cmp
mov
icebp
push
adc
mov
in
or
or
mov
or
ret
hlt
(bad)
call
sub
enter
mov
aam
and
movs
imul
retf
in
(bad)
(bad)
(bad)
call
ins
fsub
aad
add
fld
outs
sti
push
xor
or
push
jmp
(bad)
(bad)
dec
mov
cwde
ins
push
lds
cmp
in
xor
(bad)
(bad)
(bad)
dec
xchg
cli
inc
loope
enter
popf
fst
stos
or
pop
adc
(bad)
(bad)
(bad)
dec
and
sbb
jmp
sbb
mov
repz
or
(bad)
(bad)
(bad)
push
js
outs
jge
and
ret
jne
scas
mov
xchg
mov
mov
dec
test
stos
je
js
sub
arpl
outs
inc
fwait
push
call
sub
ret
(bad)
(bad)
(bad)
call
adc
repnz
ret
xor
jbe
data16
xor
call
add
(bad)
(bad)
(bad)
aas
inc
jmp
frstor
lds
jmp
mov
fadd
or
(bad)
call
jb
inc
and
retf
sbb
mov
fimul
(bad)
(bad)
(bad)
jmp
cli
fidiv
je
inc
sub
adc
aaa
mov
xor
(bad)
(bad)
dec
dec
(bad)
gs
xchg
iret
and
scas
and
pop
rol
aad
ficom
dec
push
dec
adc
loop
jl
sbb
hlt
fdivp
call
dec
(bad)
call
add
popa
mov
fwait
cmp
xchg
mov
scas
call
cdq
mov
hlt
nop
mov
(bad)
(bad)
(bad)
call
outs
or
or
lds
vpmacssdqh
cmp
jecxz
pop
iret
(bad)
(bad)
(bad)
(bad)
cmp
gs
and
mov
and
xor
call
cmps
pop
shl
sub
(bad)
(bad)
(bad)
jmp
mov
fstp
arpl
fadd
sub
xchg
xchg
inc
idiv
push
mov
scas
cli
jmp
inc
pushf
scas
mov
sahf
scas
(bad)
push
xor
lock
jle
mov
cld
add
fstp
ja
xor
test
mul
mov
and
(bad)
call
sub
cmp
mov
js
sub
arpl
sbb
icebp
(bad)
inc
xchg
mov
add
scas
sub
leave
scas
mov
add
sbb
mov
(bad)
inc
jge
arpl
jl
pusha
or
(bad)
mov
jg
add
ss
ror
jecxz
sub
push
popa
cwde
mov
(bad)
sti
lahf
xor
xor
jg
cmps
dec
mov
cdq
cmp
and
aam
rol
lods
arpl
(bad)
(bad)
call
popa
sub
int3
add
cdq
or
ja
xor
loop
xchg
ins
pop
ffreep
movs
jmp
adc
xchg
and
test
(bad)
(bad)
(bad)
jmp
in
pop
xor
mov
ins
cmp
pop
ins
mov
sbb
mov
lock
(bad)
jmp
daa
ror
xchg
loope
add
cmp
pop
rol
cmps
or
rcl
pop
pop
cli
jle
xchg
pop
mov
push
inc
dec
(bad)
(bad)
mov
pop
mov
cmp
jmp
push
push
fs
jae
xchg
(bad)
(bad)
(bad)
jmp
cld
cld
cmps
lea
dec
js
mov
pop
lods
ins
or
pop
call
jae
nop
leave
mov
cmp
xor
addr16
inc
int
dec
pusha
xor
push
push
add
jbe
push
or
stos
(bad)
(bad)
push
adc
push
scas
mov
mov
push
cmp
pop
pop
mov
call
inc
xlat
push
mov
mov
mov
lahf
pop
sub
enter
(bad)
jmp
in
xlat
in
popf
or
fcomp
test
sbb
mov
mov
xchg
cwde
jg
(bad)
(bad)
in
add
ins
cmp
fistp
cmps
xchg
test
rdmsr
mov
fdiv
call
fwait
iret
not
jnp
scas
int3
or
gs
(bad)
(bad)
(bad)
(bad)
cmp
mov
lds
add
add
jb
jmp
jno
ins
ret
cmc
pop
cld
push
mov
mov
pop
mov
(bad)
(bad)
jmp
jmp
sbb
mov
sbb
xor
call
call
call
arpl
call
pop
js
mov
js
dec
cmp
dec
cmps
(bad)
(bad)
(bad)
(bad)
jnp
push
mov
out
cld
rcr
jmp
shl
ds
add
test
inc
stos
xor
jbe
mov
mov
push
mov
mov
add
stos
adc
ins
idiv
(bad)
(bad)
(bad)
dec
dec
mov
mov
ins
adc
pop
add
push
enter
(bad)
dec
push
jne
adc
mov
je
mov
xchg
in
cmp
push
inc
out
xchg
retf
arpl
jg
shl
mov
sub
cmp
movs
mov
das
pop
add
mov
sbb
mov
fnstcw
(bad)
cmp
je
and
rcr
push
xchg
test
data16
or
(bad)
xchg
sbb
xor
add
clc
ror
xor
(bad)
jnp
es
(bad)
(bad)
(bad)
dec
retf
inc
jbe
lods
out
test
or
push
sti
fsub
mov
and
mov
in
sbb
cmp
push
ss
dec
lock
mov
ret
push
(bad)
mov
or
pop
pop
cmp
sbb
inc
pushf
inc
mov
pop
xlat
outs
fldenv
xor
xor
or
jmp
adc
cld
xchg
xor
aaa
cld
inc
stos
inc
je
mov
push
xor
jmp
dec
mov
jne
pop
pop
inc
mov
in
mov
cmp
addr16
inc
xchg
movs
jb
scas
clc
jmp
daa
leave
ja
sahf
xchg
cmp
sbb
mov
adc
(bad)
(bad)
push
or
jp
push
pop
(bad)
dec
nop
sub
xchg
(bad)
jge
and
and
(bad)
fucomi
enter
xchg
jmp
call
(bad)
(bad)
push
add
pop
jle
cs
pushf
lock
mov
jecxz
pop
jg
pop
jmp
lahf
pop
(bad)
lahf
in
or
call
loop
push
sar
jb
inc
loopne
jecxz
push
or
inc
ins
out
inc
clc
inc
pop
jbe
xchg
out
inc
aaa
add
in
cmps
(bad)
clc
pop
aam
sbb
lods
aad
aam
arpl
sub
rcl
out
neg
aaa
mov
jne
add
imul
cmp
mov
mov
push
fidivr
clc
push
cmp
call
ror
mov
cli
into
fld
inc
es
sbb
(bad)
cmp
jo
mov
mov
(bad)
(bad)
(bad)
(bad)
fcomip
add
and
mov
ins
pop
mov
ins
or
call
(bad)
fsubr
xacquire
fnstenv
ss
mov
hlt
jne
jae
cmp
enter
(bad)
(bad)
inc
mov
jnp
cmps
aas
imul
(bad)
int3
call
add
jmp
cli
push
in
fs
xor
ss
adc
imul
cld
xor
(bad)
(bad)
(bad)
push
pop
and
pop
je
inc
dec
sbb
cmps
jg
push
mov
push
jmp
jmp
xchg
ss
enter
enter
in
jb
ret
rcl
movs
add
out
push
icebp
call
xchg
cmp
push
lods
sub
jns
xchg
aam
popf
mov
mov
mov
jge
sbb
ins
mov
mov
shr
sub
or
adc
mov
or
fwait
mov
inc
jo
mov
call
imul
(bad)
mov
aas
mov
jmp
pop
jmp
mov
leave
(bad)
(bad)
(bad)
push
dec
xor
mov
sub
retf
call
cmps
test
ds
aaa
sub
lods
scas
cli
(bad)
push
xor
adc
mov
dec
rol
int3
cdq
sbb
repz
stos
fidivr
or
dec
loop
les
sub
or
(bad)
(bad)
(bad)
fdivrp
mov
into
aas
(bad)
and
in
dec
ret
js
stos
mov
outs
mov
push
and
dec
xor
(bad)
jg
pop
sub
lods
ds
mov
xor
dec
xor
iret
xor
in
push
je
dec
test
fstp
loopne
pop
jbe
js
loope
stos
(bad)
call
bound
dec
jle
fstp
outs
fst
inc
dec
pop
add
test
(bad)
(bad)
mov
push
retfw
mov
rcl
cli
fbstp
pop
(bad)
pop
loope
or
mov
push
cs
ds
popa
lds
fcomp
mov
sbb
(bad)
mov
cmp
gs
mul
cmps
imul
mov
gs
pop
loopne
add
and
push
mov
sub
(bad)
jg
inc
mov
pop
jecxz
add
mov
fwait
stos
jae
imul
adc
(bad)
call
push
stos
and
adc
pushf
ss
inc
sub
(bad)
jg
push
cmp
add
fst
dec
loopne
sahf
pop
shl
imul
jmp
lock
rcl
stos
jl
adc
inc
push
int
addr16
sub
jg
mov
idiv
(bad)
(bad)
(bad)
ffree
pop
ds
mov
or
jae
mov
push
sub
vmovhps
in
sbb
push
adc
mov
sub
sbb
bound
(bad)
dec
and
retf
sar
test
inc
inc
aaa
jbe
mov
mov
sbb
sbb
pop
(bad)
(bad)
push
mov
in
jb
into
xchg
lds
fisttp
(bad)
(bad)
fcomip
or
les
mov
dec
lods
cs
out
fadd
or
adc
loope
(bad)
(bad)
call
mov
push
or
and
push
ret
push
popw
dec
mov
das
dec
call
push
aas
adc
push
pop
inc
cmc
xor
inc
xor
loope
(bad)
(bad)
mov
cdq
imul
aaa
out
inc
mov
or
popa
inc
mov
(bad)
jmp
outs
stos
sar
fdiv
clc
fsub
jno
jbe
inc
mov
jg
push
push
xor
jns
xor
js
(bad)
(bad)
(bad)
jmp
sahf
je
push
push
fdivr
cmp
cmp
repz
push
jp
imul
mov
mov
cmp
les
cld
ret
fsubr
scas
inc
xor
ficomp
jne
icebp
outs
pop
rcl
into
push
inc
(bad)
sub
cmps
daa
jle
setnp
xchg
mov
(bad)
in
mov
jmp
sbb
lahf
xor
inc
cmp
mov
in
jmp
push
inc
out
rcr
jno
mov
(bad)
call
sub
iret
clc
push
int
test
cdq
leave
popf
cmps
int3
push
mov
mov
aad
cs
inc
adc
mov
inc
xchg
cmp
sar
(bad)
call
jle
bound
cmp
jae
mov
xchg
mov
dec
xchg
inc
imul
test
push
popf
xchg
sub
clc
(bad)
(bad)
call
int
jg
into
stos
jecxz
inc
sub
jne
aam
sub
movs
std
adc
(bad)
(bad)
jmp
das
scas
test
adc
mov
stos
cmp
pop
cmps
shl
lea
fiadd
inc
sbb
and
addr16
push
ja
movs
inc
ins
push
jb
arpl
fwait
aam
sar
(bad)
mov
scas
out
(bad)
(bad)
(bad)
(bad)
mov
add
lods
cmps
rcr
test
push
js
fwait
sbb
(bad)
(bad)
push
push
pop
cmp
cmps
push
fisubr
lea
test
imul
push
push
adc
idiv
jp
(bad)
mov
icebp
mov
mov
dec
adc
dec
push
jo
scas
jne
jne
push
mov
(bad)
(bad)
cld
push
jno
jg
aaa
std
dec
mov
inc
dec
sbb
clc
jne
cmp
js
adc
push
bound
pushf
leave
cmp
iret
mov
(bad)
jmp
lds
pmaxub
fimul
xchg
(bad)
(bad)
jmp
xchg
or
imul
dec
adc
push
leave
int3
sbb
mov
push
mov
xchg
mov
dec
ss
mov
pop
sbb
sahf
arpl
mov
ret
sbb
addr16
push
fs
(bad)
jmp
aaa
ret
jbe
cmps
outs
adc
cmp
call
dec
mov
stos
mov
icebp
shl
push
pusha
hlt
ss
in
sub
dec
fcomi
stc
sbb
jb
(bad)
(bad)
inc
rcr
fisttp
fild
add
imul
fwait
mov
les
mov
(bad)
(bad)
(bad)
fild
sar
mul
aas
dec
xlat
jmp
mov
mov
retfw
cmp
adc
call
cmp
retf
and
and
inc
push
sar
jp
push
and
push
xor
dec
push
sub
xchg
fs
(bad)
(bad)
jg
fnstsw
cmp
popf
pushf
js
and
jmp
clc
push
and
jno
sahf
out
jns
call
lock
sub
jle
push
aad
inc
and
(bad)
push
sbb
xchg
add
or
adc
pushf
xchg
dec
sub
xchg
dec
hlt
enter
or
sub
push
nop
movs
loopne
data16
jbe
(bad)
jg
add
dec
and
mov
or
xchg
jbe
sbb
fwait
add
dec
cmp
jbe
dec
cmp
movs
(bad)
(bad)
jg
cmc
call
xor
retf
xchg
int
inc
inc
enter
dec
popf
adc
adc
xlat
imul
cli
in
pop
movs
xlat
pop
push
xor
xor
or
jno
jb
std
jmp
pop
xor
mov
das
aam
lahf
mov
repz
(bad)
fild
adc
push
mov
push
scas
and
cmc
fild
add
(bad)
jmp
dec
lods
xchg
and
test
jmp
cld
int
outs
lds
repz
rcr
(bad)
dec
js
ins
jnp
aam
dec
jg
outs
cwde
mov
ror
les
jmp
push
gs
imul
and
or
movs
cmc
jns
(bad)
(bad)
jmp
sbb
inc
lds
jb
cmp
dec
in
mov
je
retf
sbb
inc
(bad)
(bad)
(bad)
call
mov
cmc
aaa
shl
fild
call
mov
ja
inc
(bad)
movs
fs
cmp
sub
(bad)
(bad)
(bad)
jmp
dec
pop
in
xchg
dec
jbe
jno
icebp
or
cmp
pop
mov
ja
ret
jmp
dec
mov
retf
jnp
outs
xchg
retf
gs
mov
mov
(bad)
mov
mov
dec
and
mov
test
cmp
jmp
inc
enter
mov
add
jg
pusha
mov
cmps
mov
adc
test
pop
add
stos
push
stc
shl
mov
retf
(bad)
(bad)
(bad)
inc
into
or
xchg
push
sbb
xchg
sub
int3
jns
pop
mov
(bad)
jmp
jnp
push
dec
mov
sbb
(bad)
mov
sub
out
call
mov
in
je
sub
xor
push
push
or
xchg
outs
xor
gs
js
cmp
xchg
mov
lock
jae
inc
(bad)
(bad)
(bad)
(bad)
mov
sbb
mov
aam
push
jge
fld
push
movs
sub
inc
rol
(bad)
(bad)
push
bnd
dec
sbb
adc
or
(bad)
mov
push
pop
lds
fistp
sahf
cmp
xchg
inc
inc
add
leave
rcr
mov
icebp
or
sahf
sar
imul
jl
inc
mov
(bad)
jg
jmp
inc
add
pop
sub
mov
lods
sub
xchg
mov
inc
imul
outs
clc
sub
call
out
ja
(bad)
(bad)
inc
jbe
push
pushf
cmp
ret
sbb
jmp
cmp
dec
mov
scas
(bad)
(bad)
(bad)
dec
fbstp
mov
retf
xchg
mov
xchg
loope
add
in
xor
mov
or
adc
or
(bad)
(bad)
cmp
mov
mov
das
and
pop
or
(bad)
call
push
mov
pop
mov
pop
dec
or
movs
add
(bad)
fbld
jnp
inc
call
inc
inc
xor
xchg
enter
dec
(bad)
jg
push
mov
fsub
or
cmps
or
hlt
push
call
daa
xchg
sbb
jle
arpl
call
out
mov
jae
or
(bad)
jmp
(bad)
vmovlpd
mov
popf
xchg
aas
shr
int
(bad)
jg
xor
pop
pop
ds
movs
in
sbb
xor
pop
sbb
sub
call
outs
pop
pop
push
and
ins
test
(bad)
(bad)
jmp
mov
adc
xchg
cmp
xchg
pop
inc
cmp
cld
jge
fisttp
idiv
(bad)
(bad)
jmp
in
sbb
mov
and
jmp
mov
xor
sub
jnp
push
call
dec
(bad)
xor
repnz
jmp
inc
lahf
jmp
fstp
loopne
cwde
vcmpps
dec
les
mov
jmp
out
call
dec
jle
popa
pop
sbb
jle
and
dec
iret
(bad)
xchg
jne
pop
xchg
dec
mov
out
inc
(bad)
(bad)
fbld
adc
ret
jp
push
sub
mov
lock
(bad)
(bad)
dec
lods
cmp
jbe
push
mov
enter
push
fstp
adc
leave
aam
fiadd
or
cmp
push
int3
cdq
arpl
call
cmc
pop
xor
scas
cmps
pop
icebp
into
and
push
sub
imul
sub
lock
dec
inc
adc
movs
push
cmps
mov
xchg
gs
pop
push
add
retf
adc
outs
or
dec
ds
lods
sbb
sub
mov
add
push
xchg
cdq
cdq
pop
and
pop
lods
pop
(bad)
in
(bad)
(bad)
(bad)
call
iret
and
inc
or
dec
pushf
push
jl
mov
and
repz
(bad)
pop
mov
std
cmp
icebp
mov
pop
add
mov
sbb
(bad)
(bad)
jmp
loop
push
pop
in
adc
cld
push
xchg
push
push
jle
xor
(bad)
(bad)
out
mov
push
aas
cmc
movs
lods
fwait
sbb
cmc
jmp
xchg
and
int3
cwde
jl
(bad)
scas
clc
dec
out
sahf
test
in
pop
inc
xchg
into
nop
or
imul
dec
rcr
into
xor
mov
and
vmovq
stos
addr16
jmp
mov
shl
jo
dec
cmps
iret
push
adc
int
jecxz
xchg
jg
ins
xchg
jmp
call
lods
cmp
movs
add
inc
mov
pop
icebp
add
or
cdq
lea
test
(bad)
(bad)
(bad)
cmp
fwait
aam
or
int3
out
arpl
jge
push
sbb
stos
cmp
adc
mov
stos
push
scas
xchg
and
frstor
enter
jnp
push
sub
jl
and
repz
call
push
(bad)
add
out
(bad)
inc
cld
int3
fld
fcomp
in
sbb
mov
add
and
cmp
clc
mov
rcl
mov
call
pop
test
retf
pop
ret
std
jo
lods
shl
add
jle
bound
outs
fsubr
jp
shl
out
mov
(bad)
(bad)
(bad)
push
cmps
nop
mov
xor
jle
ja
sbb
out
xchg
lock
std
(bad)
(bad)
(bad)
(bad)
jmp
xor
loope
int
push
mov
jl
inc
repz
xchg
push
fcomp
fisttp
mov
push
test
jo
sbb
mov
mov
(bad)
jg
mov
xor
popa
call
sub
inc
adc
(bad)
(bad)
dec
mov
shl
pop
sbb
arpl
pop
int3
mov
mov
jae
sar
(bad)
(bad)
(bad)
call
ret
or
cmps
pop
(bad)
xchg
xchg
sbb
lea
add
(bad)
call
dec
movs
mov
jns
cmc
sub
or
mov
shl
mov
push
movs
xchg
jmp
pop
add
imul
jne
sbb
fsubr
sbb
(bad)
jmp
stos
call
pop
rcl
or
retf
push
hlt
aam
dec
gs
enter
(bad)
(bad)
call
fisubr
mov
dec
push
mul
jnp
cmp
int
xor
pop
cmps
xor
pop
scas
(bad)
push
lds
pop
popa
sub
(bad)
pop
(bad)
ficomp
loope
and
in
dec
call
inc
stos
cmps
sub
mov
add
mov
cmp
retf
jmp
(bad)
(bad)
mov
in
scas
mov
adc
std
les
mov
dec
retf
es
hlt
(bad)
mov
dec
test
inc
mov
adc
add
xor
(bad)
(bad)
call
pop
xchg
test
repz
rol
jmp
(bad)
jg
sar
xchg
sub
loope
mov
xchg
nop
nop
push
clc
out
cmps
push
sbb
add
daa
test
ja
adc
(bad)
cwde
adc
lods
cmp
cmp
xchg
sub
(bad)
mov
cmp
xchg
sub
xor
ins
sub
add
jbe
call
jg
inc
(bad)
add
cmp
mov
das
push
add
add
(bad)
(bad)
mov
mov
inc
push
scas
stc
test
aaa
(bad)
(bad)
(bad)
inc
lods
mov
mov
lds
cmps
add
mov
loop
inc
xor
hlt
(bad)
(bad)
jmp
ret
fbld
add
pop
bound
fwait
std
push
lahf
call
(bad)
das
xor
sbb
add
jle
sbb
enter
push
and
cmp
or
(bad)
fbstp
stc
inc
dec
or
es
pop
mov
loope
(bad)
loopne
nop
mov
cmp
(bad)
(bad)
(bad)
jmp
dec
cmp
mov
into
inc
bound
jmp
retf
xchg
(bad)
(bad)
(bad)
jmp
gs
pop
in
jl
xor
fcomp
sti
push
mov
into
or
(bad)
(bad)
jmp
fdiv
dec
pushf
cmp
inc
add
cmp
aam
push
and
ret
js
retf
popf
jg
(bad)
dec
push
scas
shl
push
adc
(bad)
xor
pop
push
mov
mov
sbb
sub
(bad)
inc
(bad)
out
lods
push
sub
outs
lock
shl
push
jnp
gs
clc
sub
sub
dec
mov
xchg
xor
call
ja
jmp
push
and
mov
call
xor
mov
adc
(bad)
(bad)
dec
cmp
push
xor
push
push
jae
fwait
pop
pop
pop
sbb
mov
cmps
movs
adc
dec
(bad)
(bad)
mov
pop
add
or
clc
fsubr
(bad)
dec
or
inc
mov
pop
inc
(bad)
dec
mov
js
xor
sbb
mov
fnsave
push
fwait
pop
ja
dec
xchg
(bad)
(bad)
dec
les
rol
adc
int
iret
mov
arpl
test
fadd
adc
inc
jne
adc
push
clc
mov
jecxz
dec
and
and
arpl
movs
xchg
loope
dec
cmp
(bad)
(bad)
inc
pop
jae
cmp
xor
addr16
mov
clc
mov
dec
ds
ffreep
(bad)
(bad)
jmp
ds
mov
scas
(bad)
aad
mov
cmps
push
loop
mov
or
(bad)
(bad)
dec
mov
xor
in
leave
ins
nop
adc
mov
push
cmp
stc
lahf
cmc
cwde
(bad)
std
push
adc
push
mov
es
inc
push
fistp
push
xor
cmps
(bad)
(bad)
jmp
xchg
jbe
or
cdq
lods
std
inc
leave
mov
daa
mov
xchg
dec
fcomip
dec
dec
mov
push
clc
push
bound
imul
mov
(bad)
(bad)
dec
loop
pop
mov
dec
sbb
das
and
inc
sub
nop
inc
xor
pop
imul
(bad)
push
mov
mov
clc
xchg
lods
pop
cmp
or
sub
cmp
push
mov
pusha
(bad)
(bad)
(bad)
inc
test
dec
arpl
mov
(bad)
xchg
jns
inc
or
xor
(bad)
dec
jnp
ja
sub
jl
(bad)
(bad)
(bad)
sub
xchg
inc
retf
sbb
push
adc
mov
sar
popa
adc
into
inc
shr
jo
cmp
loope
(bad)
push
push
stos
push
push
lods
push
inc
in
mov
mov
aaa
outs
jg
inc
pop
outs
clc
call
add
cmp
lahf
pop
pop
lahf
dec
pop
dec
mov
(bad)
dec
scas
and
out
lods
and
push
add
(bad)
scas
stos
xchg
jae
pop
jo
(bad)
cmp
call
mov
retf
cmps
loop
or
fucomip
push
inc
mov
inc
xor
push
stos
(bad)
das
xchg
sbb
mov
in
ins
mov
(bad)
(bad)
(bad)
fistp
aam
mov
sub
cmc
fisttp
pop
loope
repz
pop
xchg
je
cmp
sbb
pop
(bad)
(bad)
(bad)
inc
arpl
call
xchg
sub
call
repnz
pop
inc
dec
in
jg
mov
or
mov
mov
jle
pop
(bad)
(bad)
jmp
retf
getsec
jmp
retf
outs
sbb
sub
mov
cmp
push
(bad)
(bad)
in
(bad)
jmp
cmp
(bad)
sub
int
pop
inc
xor
mov
ror
mov
jmp
nop
scas
jecxz
fistp
outs
jnp
xlat
test
in
push
mov
rcr
mov
push
stos
xchg
adc
ins
(bad)
je
jp
adc
out
xchg
pop
adc
clc
mov
push
cmp
cmp
mov
pop
mov
push
inc
shr
cdq
out
add
pop
imul
lock
xchg
(bad)
in
cmp
and
outs
fdivr
mov
shr
out
mov
lds
in
cwde
fdivr
(bad)
inc
sar
int
mov
fwait
push
sti
inc
lahf
mov
(bad)
call
push
push
jbe
ret
sti
jg
push
pop
or
stos
cs
or
mov
movs
push
mov
adc
inc
std
icebp
push
xor
pop
stc
sub
bound
les
xor
cmp
sti
xor
xchg
rcr
inc
add
dec
push
aad
jb
jnp
popa
int
aam
mov
retf
mov
test
mov
(bad)
(bad)
call
dec
sub
sahf
adc
neg
aas
lods
cdq
dec
out
mov
cmp
(bad)
inc
inc
out
sub
adc
xchg
movs
ficom
pop
push
lock
push
into
xchg
jmp
imul
and
push
push
mov
iret
xchg
sbb
call
inc
push
(bad)
fcomp
jp
mov
stos
sbb
jg
sbb
push
xor
push
(bad)
(bad)
(bad)
push
xor
mov
and
adc
scas
ins
sub
nop
imul
xchg
sub
and
lock
(bad)
(bad)
fnstcw
pop
scas
std
aad
loope
pop
mov
pop
cli
ret
jp
push
add
fdivr
call
push
lahf
cld
call
push
jecxz
and
mov
add
fadd
pop
xchg
into
arpl
cmps
add
call
jecxz
lea
test
cmp
push
inc
lea
cwde
push
(bad)
(bad)
(bad)
call
sbb
cld
addr16
mov
aas
xor
and
mov
mov
jne
cli
sub
cmp
(bad)
(bad)
push
cmp
dec
rol
lds
sbb
enter
add
lock
sar
(bad)
(bad)
(bad)
(bad)
mov
xchg
and
mov
inc
push
fs
and
mov
(bad)
jmp
imul
xchg
popa
data16
fld
xchg
repz
in
(bad)
inc
pusha
enter
ja
scas
enter
adc
jge
lock
mov
sbb
(bad)
dec
sbb
jb
or
loop
xchg
sub
adc
ss
fistp
retf
cmp
(bad)
(bad)
call
sbb
shl
jno
fbld
pop
int3
mov
dec
(bad)
les
jle
out
cmps
lahf
lods
jecxz
(bad)
call
mov
std
add
sub
shl
cmp
push
lock
adc
(bad)
add
(bad)
pusha
repz
mov
stos
pop
stos
push
mov
sar
mov
ins
inc
es
cmps
mov
xchg
in
out
mov
or
(bad)
(bad)
dec
cmp
in
cmp
fucomp
xor
xchg
cmps
pusha
sub
sbb
dec
jae
(bad)
(bad)
push
xor
push
mov
sbb
mov
cmps
shr
mov
(bad)
xchg
xor
sahf
xor
jae
push
cmc
fnstenv
mov
push
adc
sub
cmps
mov
xor
push
loop
lods
jbe
add
xor
xor
sub
call
mov
push
or
pushf
cmp
(bad)
in
loop
lods
xor
push
or
wbinvd
test
jmp
add
mov
adc
sub
push
movs
sub
mov
sub
jmp
mov
or
add
mov
mov
mov
mov
pop
or
inc
or
push
fsub
and
jnp
cmp
cmps
arpl
ret
rcl
pop
fwait
push
push
pop
loopne
push
into
inc
in
pop
mov
inc
popf
(bad)
(bad)
dec
ss
stos
mov
add
lahf
(bad)
imul
dec
sbb
and
iret
pusha
or
push
mov
adc
(bad)
push
cmp
in
sbb
cwde
mov
test
add
jmp
mov
fisttp
in
sub
scas
stos
arpl
aaa
mov
(bad)
inc
stos
pop
inc
jp
cmovno
cmp
jb
in
repz
test
inc
(bad)
(bad)
(bad)
(bad)
js
sbb
dec
dec
fmul
sub
(bad)
push
mov
not
push
cmp
push
popa
inc
lock
pusha
inc
inc
and
and
dec
add
fcmovb
pop
loope
(bad)
movs
lods
mov
dec
inc
xor
and
adc
push
mov
jns
call
fmul
loopne
icebp
lods
es
add
(bad)
(bad)
(bad)
call
xor
ret
pusha
iret
dec
dec
pop
cmp
mov
icebp
push
test
and
test
call
daa
mov
stos
fild
mov
and
fdiv
ret
(bad)
(bad)
in
mov
cmp
pusha
les
popf
dec
shl
call
push
and
(bad)
cmps
jl
(bad)
(bad)
(bad)
jg
sbb
out
inc
jle
mov
push
(bad)
xchg
push
dec
call
or
jbe
fdivr
(bad)
(bad)
(bad)
jl
icebp
(bad)
outs
or
lods
jmp
cmp
icebp
call
fwait
inc
push
adc
fmul
and
mov
(bad)
push
ins
jno
icebp
dec
fldenv
xor
(bad)
(bad)
(bad)
out
nop
xchg
scas
loopne
(bad)
loopne
cmp
push
das
pushf
leave
loop
shl
ret
jmp
lds
(bad)
push
sub
(bad)
ret
fwait
outs
sub
in
cwde
call
add
mov
aam
jmp
mov
mov
rcl
lods
sbb
jmp
out
call
(bad)
(bad)
(bad)
cmp
xor
fcomip
fimul
mov
pop
sti
sti
test
cmp
or
test
setp
mov
inc
sti
daa
sar
dec
ret
mov
xor
push
fdivr
xor
sub
in
sub
outs
pop
sub
nop
add
and
call
pop
iret
xor
cld
outs
(bad)
(bad)
call
sub
mov
cs
jbe
or
mov
jb
(bad)
(bad)
dec
mov
mov
fcmovnbe
or
ds
push
call
mov
aas
lods
inc
(bad)
(bad)
fcomip
stos
pushf
xor
jl
outs
mov
(bad)
mov
dec
test
(bad)
(bad)
inc
push
imul
iret
sub
mov
jae
mov
mov
sar
(bad)
push
cld
and
stc
int3
das
loope
fwait
push
inc
(bad)
call
jbe
scas
fs
mov
call
jmp
mov
jge
aas
fdiv
add
pop
cmp
aam
in
mov
aam
mov
adc
sbb
cdq
mov
(bad)
(bad)
call
mov
mov
push
push
test
bnd
pop
stos
aad
mov
jno
(bad)
(bad)
jmp
sbb
(bad)
ins
jo
aaa
dec
or
adc
fwait
leave
pop
mov
imul
dec
fwait
(bad)
(bad)
(bad)
jle
imul
arpl
cmc
push
push
jl
cmp
ja
push
pop
(bad)
(bad)
(bad)
(bad)
call
dec
mov
sbb
xchg
js
add
jnp
push
or
jp
imul
sar
(bad)
(bad)
push
xor
jo
stos
push
shl
ss
cld
sub
dec
xchg
fcom
(bad)
(bad)
(bad)
dec
sub
xor
(bad)
dec
test
pop
clc
(bad)
jnp
imul
dec
sahf
mov
mov
out
daa
sahf
cld
jnp
rol
ins
(bad)
(bad)
cwde
sbb
push
shr
push
leave
repnz
(bad)
(bad)
push
or
jns
(bad)
mov
mov
repnz
pusha
ret
leave
sub
outs
push
test
jmp
loopne
out
in
imul
test
out
jle
aas
inc
pop
cwde
sar
cmp
shl
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jl
pop
clc
fwait
aaa
(bad)
int
cmp
fsub
mov
push
call
cs
push
sar
or
cmps
mov
mov
sti
jmp
jle
fisubr
pop
add
shl
dec
sub
cld
jmp
lea
inc
push
mov
jge
cmp
or
(bad)
jg
xor
rol
aaa
out
lea
pop
jo
cmp
movs
cmc
(bad)
jmp
inc
add
cdq
fild
mov
and
ret
jl
mov
or
mov
in
fcmovne
data16
(bad)
fild
push
rcl
ins
and
popf
add
jg
mov
or
icebp
mov
or
(bad)
(bad)
(bad)
(bad)
out
mov
addr16
and
or
cld
xchg
cmp
js
loopne
call
and
inc
cmp
cli
pop
cmp
push
pop
stos
xchg
dec
stos
add
mov
xchg
sar
(bad)
out
pop
inc
mov
call
lods
and
stc
aad
sub
mov
mov
xchg
dec
neg
or
bound
or
(bad)
(bad)
call
mov
(bad)
jbe
inc
test
int
pop
mov
cmp
sub
(bad)
fild
sub
popf
cmps
xor
call
out
jnp
(bad)
shl
in
inc
hlt
aam
jle
(bad)
fidiv
das
jle
or
cmp
jbe
call
sub
mov
rcr
not
icebp
fidivr
mov
pop
std
sahf
(bad)
(bad)
(bad)
mov
mov
fild
rcl
mov
(bad)
scas
mov
and
(bad)
jmp
xchg
in
mov
push
pop
inc
or
mov
or
(bad)
rcl
cmps
jmp
call
loopne
mov
inc
push
imul
aam
lock
jns
lahf
pop
neg
(bad)
sti
jne
fadd
jmp
cmp
fcomi
jmp
sub
pop
add
pop
adc
jmp
ret
jle
sbb
hlt
add
ss
sub
and
push
adc
push
add
call
ins
cmp
scas
sub
mov
pop
call
(bad)
int3
sub
jp
mov
jp
out
jmp
mov
(bad)
(bad)
inc
ficom
cmc
mov
inc
test
sti
les
jmp
ret
call
mov
mov
pop
pop
mov
sub
cwde
ret
add
pop
fs
cmp
call
(bad)
(bad)
call
rol
mov
test
mov
jmp
idiv
(bad)
(bad)
jmp
cmps
ja
xor
inc
mov
aad
or
or
ror
mov
les
push
inc
dec
push
mov
inc
cmp
leave
fnstcw
aam
xchg
push
and
push
and
push
mov
jmp
or
push
sub
cdq
inc
cli
stos
xchg
mov
pop
daa
cmp
test
push
xor
(bad)
(bad)
call
addr16
imul
fmul
adc
(bad)
mov
sub
mov
(bad)
(bad)
(bad)
call
cmp
in
or
jp
imul
dec
mov
fdiv
xor
(bad)
call
mov
out
adc
aaa
aaa
aas
lea
pop
test
mov
int3
scas
mov
out
jle
scas
sbb
sub
cmp
fbstp
inc
mov
push
adc
pop
pop
and
dec
mov
(bad)
das
int
(bad)
sbb
data16
mov
or
jg
(bad)
push
mov
ror
(bad)
xchg
scas
adc
imul
cmps
loope
ret
push
in
push
cmc
(bad)
adc
cs
popa
imul
jbe
or
jmp
push
das
xchg
test
scas
enter
or
xor
mov
ds
mov
add
sar
jne
leave
dec
lar
sbb
jmp
das
mov
pop
fcom
(bad)
mov
fs
aam
(bad)
sar
jp
sahf
stc
clc
xchg
icebp
(bad)
(bad)
cmp
ret
xchg
jle
rol
mov
pop
add
or
add
into
sub
(bad)
(bad)
call
(bad)
test
pop
jae
xchg
sub
test
dec
ret
and
sub
leave
inc
cli
(bad)
call
pop
cmp
pop
cmp
lea
sub
fidivr
xchg
(bad)
(bad)
jmp
dec
fdiv
fwait
jbe
push
cmp
out
lea
shr
add
int
push
(bad)
call
xchg
sbb
jns
dec
(bad)
retf
jl
cmp
cmp
sub
cmp
mov
lods
and
popa
and
xor
push
jle
clc
fmul
(bad)
(bad)
call
cmc
lods
mov
sbb
push
mov
fnstcw
sar
cmp
dec
mov
lods
test
(bad)
call
(bad)
xchg
test
rcl
cli
(bad)
(bad)
jmp
imul
outs
mov
test
addr16
sbb
scas
call
loopne
imul
jp
outs
mov
movs
jb
push
xor
dec
xor
and
xchg
pop
adc
push
mov
dec
ins
push
movs
mov
dec
iret
rol
outs
or
pop
scas
mov
rcr
mov
std
mov
jns
(bad)
push
cld
pop
call
loopne
in
jmp
test
sbb
jnp
cs
mov
fdivr
shl
fdivr
out
retf
lock
sbb
push
das
adc
adc
iret
jl
and
sub
call
jae
and
test
(bad)
call
or
sbb
stos
mov
or
loop
mov
xor
jmp
stos
jb
jne
nop
nop
out
(bad)
jo
xor
cmps
sbb
pop
jmp
fnstenv
je
(bad)
(bad)
(bad)
push
les
jp
mov
fdiv
jae
ins
movhlps
push
jb
mov
test
aas
lahf
(bad)
(bad)
(bad)
jmp
cmp
pcmpeqd
ret
mov
mov
mov
out
fcom
jmp
pop
sub
jmp
lock
shl
push
cmp
xor
(bad)
(bad)
jmp
lock
push
fiadd
arpl
jns
mov
mov
shr
dec
les
movs
dec
frstor
mov
push
mov
sub
xchg
mov
(bad)
(bad)
dec
cld
fs
push
mov
shr
aaa
loope
inc
fwait
lock
cmps
add
imul
inc
dec
ror
inc
add
int3
jmp
mov
xchg
(bad)
(bad)
mov
gs
jmp
out
outs
popf
in
dec
sub
loope
lock
shl
mov
(bad)
dec
and
push
and
das
mov
mov
inc
out
xchg
push
mul
mov
hlt
jp
stc
xchg
dec
jne
fdiv
sub
xor
jmp
rcr
fidivr
xchg
add
sbb
std
retf
stc
and
lea
inc
xchg
xor
xor
aam
xchg
jmp
pop
jecxz
mov
and
hlt
push
pushf
inc
hlt
or
loopne
mov
xlat
push
imul
iret
push
cmp
sahf
push
sbb
out
sub
inc
pop
xor
inc
loope
mov
lahf
ud0
call
movs
xor
daa
sub
inc
pop
mov
loopne
xor
adc
(bad)
(bad)
inc
std
inc
arpl
push
call
retf
inc
rol
cdq
inc
fnstsw
rol
mov
add
mov
jo
enter
pop
pushf
fwait
lds
inc
jecxz
(bad)
mov
ret
pop
push
add
jmp
mov
leave
stos
jno
fistp
dec
dec
push
ret
xor
xchg
push
cdq
dec
es
xchg
sub
(bad)
(bad)
call
lea
xor
xchg
jle
int
inc
aaa
jo
call
dec
mov
mov
shl
xchg
(bad)
jmp
rcr
cli
xchg
test
call
or
cmp
(bad)
inc
adc
test
sub
stos
repnz
mov
and
(bad)
call
(bad)
push
xchg
cmp
inc
dec
cmp
xlat
mov
(bad)
(bad)
(bad)
jmp
add
or
sub
mov
mov
push
(bad)
jmp
enter
aaa
push
retf
jbe
cmp
in
scas
mov
jg
(bad)
push
add
cmp
dec
cwde
lahf
cmp
sbb
jb
lock
(bad)
(bad)
push
out
jb
dec
cmp
fadd
xchg
add
mov
(bad)
(bad)
(bad)
(bad)
mov
push
add
mov
and
aad
popf
dec
mov
xor
mov
xchg
ss
adc
(bad)
into
xor
mul
adc
leave
mov
out
ins
add
(bad)
(bad)
(bad)
jns
fcmovb
iret
adc
jecxz
pushw
aam
cdq
test
je
addr16
mov
jmp
jno
in
adc
test
xor
retf
xor
mov
jge
(bad)
out
rcr
ret
adc
cmp
and
jne
push
fld
sub
cli
call
pushf
aad
jmp
jg
aas
jecxz
aaa
popf
(bad)
fidiv
fsubr
clc
(bad)
call
mov
aad
in
movs
sub
test
aad
sub
bound
shl
mov
adc
out
or
sbb
icebp
(bad)
(bad)
(bad)
fnstcw
and
jb
jp
in
jno
xchg
es
xlat
sar
push
inc
mov
(bad)
out
and
pusha
xor
mov
hlt
clc
sbb
rcl
retf
(bad)
(bad)
mov
pop
xchg
sub
inc
test
pop
adc
or
cmp
xchg
push
stos
loope
arpl
xchg
out
push
div
and
outs
fcmovbe
fisubr
mov
ret
aaa
push
or
xchg
push
(bad)
(bad)
(bad)
dec
icebp
mov
stc
xchg
lock
mov
cli
imul
test
stos
pop
stc
mov
(bad)
(bad)
inc
addr16
cli
pusha
scas
loop
mov
test
addr16
aad
or
gs
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
fdivrp
xchg
add
in
std
fdiv
outs
or
sub
xchg
xchg
and
sbb
xor
call
out
cdq
leave
or
pop
inc
mov
fidiv
inc
fadd
(bad)
cmp
aas
adc
aaa
push
test
xor
cmp
cmc
jl
sub
adc
dec
jmp
mov
stos
(bad)
(bad)
(bad)
jmp
add
jb
dec
pop
call
dec
out
mov
out
inc
inc
dec
imul
mov
inc
sbb
sub
scas
out
cmp
les
jecxz
(bad)
dec
inc
mov
sub
mov
hlt
and
xchg
inc
test
ja
pop
add
cmp
and
inc
loope
out
jmp
sbb
lock
jg
lods
test
xlat
push
mov
push
mov
adc
(bad)
(bad)
push
into
adc
mov
lods
push
jb
and
lea
call
mov
(bad)
push
jg
pop
pop
jb
mov
ins
std
fsub
fdiv
(bad)
(bad)
(bad)
(bad)
out
sbb
inc
clc
lods
or
call
cmps
dec
inc
inc
call
rol
out
mov
iret
mov
(bad)
(bad)
(bad)
push
xchg
jl
daa
jnp
and
or
jmp
and
(bad)
jg
jns
cmp
pop
xor
xchg
addr16
es
or
(bad)
inc
daa
neg
inc
lods
pop
inc
fmul
xchg
dec
mov
or
adc
or
jle
call
lods
fcomp
push
jp
or
popa
popa
mov
(bad)
mov
cmc
mov
mov
lahf
sub
add
(bad)
(bad)
(bad)
call
sub
sbb
mov
sbb
jle
cli
ror
scas
dec
dec
int
out
mov
mov
loop
pop
mul
inc
(bad)
ss
sbb
and
loope
clc
pop
lock
dec
mov
inc
sbb
imul
repz
ret
sub
or
ret
movs
inc
(bad)
(bad)
(bad)
fistp
mov
les
dec
add
mov
jp
xor
call
loop
mov
adc
sub
mov
inc
xor
les
mov
push
(bad)
(bad)
(bad)
(bad)
ds
mov
mov
push
cmp
outs
xchg
(bad)
fnsave
cmp
sub
mov
arpl
(bad)
(bad)
fist
adc
inc
mov
sbb
sub
lods
add
mov
gs
(bad)
(bad)
dec
push
cmp
iret
dec
arpl
out
jge
es
sbb
popf
into
jp
sbb
(bad)
(bad)
(bad)
call
popf
xchg
out
daa
pop
mov
push
push
rcr
les
xor
pop
jnp
adc
jbe
(bad)
(bad)
(bad)
jmp
pop
fild
sahf
icebp
fldcw
lock
pop
mov
fidivr
scas
jg
pop
mov
idiv
pop
icebp
dec
xchg
inc
or
inc
loopne
dec
mov
inc
pop
les
lock
scas
mov
push
fild
mov
add
mov
(bad)
mov
movs
test
gs
inc
push
push
mov
mov
or
js
rol
or
sub
addr16
cmp
add
fcomip
(bad)
(bad)
mov
cmp
fisttp
push
clc
push
mov
mov
in
sti
(bad)
(bad)
call
sahf
mov
lea
sub
xlat
sbb
icebp
enter
dec
out
sbb
mov
pop
test
sbb
mov
fsub
cs
scas
cmc
pop
hlt
cmp
(bad)
(bad)
inc
pop
jmp
push
rol
mov
stos
dec
neg
clc
xor
jno
(bad)
(bad)
dec
cmp
xchg
mov
dec
arpl
cwde
mov
sbb
add
hlt
in
and
imul
add
inc
sahf
test
sbb
sub
sar
mov
mov
mov
sub
(bad)
jp
and
mov
ret
(bad)
sbb
(bad)
(bad)
(bad)
jmp
cmp
idiv
cwde
dec
mov
cdq
xchg
retf
dec
pop
mov
in
not
enter
(bad)
(bad)
push
cmp
add
sbb
cmp
leave
into
int
inc
mov
add
in
mov
(bad)
(bad)
call
hlt
push
mov
jns
adc
cmps
into
and
pop
pop
pop
sub
adc
loop
fistp
push
(bad)
dec
lock
and
fsubr
or
push
xchg
jmp
add
(bad)
jmp
pop
and
sub
lahf
cmp
jecxz
fimul
fistp
dec
jnp
sub
addr16
mov
dec
push
pop
push
(bad)
(bad)
dec
icebp
(bad)
cmc
mov
pop
cmp
jle
jp
sbb
mov
les
pop
mov
adc
jne
sub
loop
retf
jg
adc
lods
loopne
pop
pop
fist
(bad)
(bad)
(bad)
jg
xor
mov
mov
xchg
daa
addr16
jb
loopne
sbb
(bad)
(bad)
jg
test
ja
jo
movs
movs
dec
ins
ficom
js
cmps
and
stos
(bad)
pop
sub
call
ds
ficom
mov
mov
cmp
inc
adc
out
stos
scas
pusha
jb
push
(bad)
(bad)
jmp
pop
mov
jge
addr16
or
scas
and
(bad)
jmp
pop
popa
out
les
stc
adc
(bad)
cmp
pop
xor
stc
js
jno
movs
dec
cs
(bad)
(bad)
mov
test
pop
fwait
xchg
mov
add
ret
mov
stos
mov
dec
(bad)
(bad)
(bad)
jmp
xchg
mov
add
movs
xchg
mov
fnstcw
xor
clc
cli
pop
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
ss
addr16
ror
or
sub
ret
push
push
mov
dec
jle
jmp
sahf
jle
push
pusha
mov
(bad)
(bad)
(bad)
call
xchg
mov
push
pop
sbb
out
mov
and
ins
(bad)
cmp
sub
mov
in
pop
ret
xor
call
pushf
mov
mov
and
inc
cmp
sub
push
ret
lods
call
jmp
inc
movs
cmps
mov
outs
out
inc
js
stos
jns
in
mov
(bad)
mov
ja
inc
neg
ret
(bad)
ins
push
push
loope
fidivr
mov
ins
movs
ins
aam
push
aam
int3
dec
(bad)
pop
ss
push
xchg
sub
fs
adc
(bad)
(bad)
push
push
pop
add
mov
jg
stos
dec
aad
jmp
mov
dec
mov
(bad)
dec
jns
fmul
sahf
push
adc
sub
xor
push
dec
stos
push
mov
rcr
cmps
not
scas
clc
jmp
jmp
fdivrp
sahf
pop
lds
fs
ds
pop
pop
(bad)
(bad)
(bad)
out
xor
add
imul
paddd
out
addr16
stc
iret
fld
(bad)
(bad)
(bad)
call
icebp
cmp
dec
add
add
stos
outs
mov
sub
push
cld
cwde
cmp
ror
out
add
(bad)
js
pop
mov
test
stos
mov
push
add
loopne
push
sub
sub
jo
jbe
loope
sbb
cdq
stos
push
in
sub
(bad)
(bad)
(bad)
jg
mov
jg
cmc
push
dec
in
push
mov
cmc
cmp
retf
mov
pop
cmp
jmp
in
lods
xchg
and
scas
add
inc
jle
ins
sbb
(bad)
(bad)
dec
dec
dec
imul
add
popa
add
dec
neg
sar
sar
jmp
in
out
fwait
(bad)
add
stc
shr
push
xchg
movs
and
hlt
aaa
(bad)
(bad)
(bad)
call
test
out
pop
or
mov
jno
cmp
cdq
cld
cli
pop
xchg
add
mov
je
mov
(bad)
jmp
adc
ins
adc
ret
inc
sar
int3
fidiv
je
mov
push
(bad)
jg
lock
icebp
or
ror
aas
jmp
and
mov
iret
fisubr
ja
not
ror
push
mov
(bad)
cmp
idiv
sar
mov
retf
pusha
(bad)
loopne
jnp
jle
mov
(bad)
jmp
jecxz
hlt
and
adc
stc
jno
sub
outs
cmp
xor
adc
and
push
aam
repnz
into
sahf
(bad)
mov
test
jns
das
sar
xor
movs
mov
sub
jno
dec
jmp
add
div
retf
cwde
retf
jo
(bad)
xor
and
push
cmp
mov
cmps
daa
cli
inc
and
sbb
add
mov
into
cmp
mov
(bad)
rcl
xlat
mov
test
fdivr
imul
adc
jp
outs
jo
nop
inc
push
leave
mov
inc
adc
xchg
pop
(bad)
in
loop
fs
aaa
jg
mov
ror
mov
(bad)
(bad)
(bad)
call
rcr
loopne
pop
push
mov
adc
shr
mov
dec
sbb
(bad)
ret
cmp
jmp
loope
pop
retf
(bad)
mov
cs
xor
sub
(bad)
jmp
push
ss
push
sub
inc
cwde
sub
movs
cmp
pop
or
(bad)
jbe
push
cmp
mov
cmp
call
cmp
xor
push
mov
test
cmc
fild
cld
std
cld
sbb
cmp
mov
adc
es
xor
mov
(bad)
cdq
jecxz
and
jecxz
pusha
pop
popf
int3
loop
mov
mov
aaa
sbb
adc
ret
sbb
and
(bad)
(bad)
(bad)
push
shl
(bad)
std
js
pop
dec
aad
cs
and
ret
test
fwait
add
(bad)
mov
fstp
push
add
ret
sbb
in
(bad)
(bad)
(bad)
jmp
stos
pusha
or
int3
pop
das
pop
push
(bad)
mov
push
retf
call
xchg
sub
push
(bad)
(bad)
dec
shr
add
int
cmp
jge
and
icebp
rcl
(bad)
mov
sub
sub
stos
xor
sbb
(bad)
(bad)
(bad)
(bad)
cmp
cmc
mov
scas
push
mov
out
rcr
jmp
jne
(bad)
(bad)
jmp
cmp
dec
push
or
inc
dec
xlat
dec
hlt
cmp
pushw
jle
call
pop
add
imul
aas
sbb
mov
je
cdq
addr16
jb
xlat
test
sub
int
inc
(bad)
(bad)
(bad)
call
jo
dec
fsubr
and
data16
dec
mov
cmp
jmp
ss
(bad)
(bad)
(bad)
jmp
xchg
ds
or
pop
cwde
scas
popa
ret
js
jnp
stc
cmp
pop
sti
push
inc
loopne
(bad)
fdiv
pop
jl
jmp
inc
xchg
lds
push
sub
fdiv
mov
stos
ja
(bad)
(bad)
(bad)
(bad)
jge
int
in
sbb
out
dec
ret
sub
pop
shl
cmp
cmp
in
(bad)
dec
push
mov
pop
call
cmp
sbb
cmp
mov
push
jg
jmp
mov
dec
push
mov
add
fild
or
in
xor
(bad)
mov
mov
pop
push
cs
popf
xchg
in
xor
cmp
push
dec
rcl
mov
dec
mov
xchg
test
adc
mov
mov
pop
sar
(bad)
(bad)
call
aaa
jmp
clc
in
scas
adc
imul
xor
jle
icebp
jg
inc
mov
int3
xchg
push
vcvtps2pd
mov
and
(bad)
jmp
test
jle
sbb
push
add
add
push
(bad)
(bad)
(bad)
dec
mov
icebp
ficom
jo
cmps
daa
icebp
aam
imul
loopne
retf
daa
out
je
retf
dec
jmp
fstp
xchg
nop
pop
sub
shr
xchg
push
hlt
pop
idiv
(bad)
dec
lock
inc
mov
mov
(bad)
(bad)
pusha
inc
sbb
pop
stos
std
(bad)
(bad)
call
mov
adc
jmp
loopne
sbb
add
pop
dec
add
(bad)
(bad)
call
mov
dec
je
jns
dec
mov
add
ja
mov
and
cmp
jne
(bad)
(bad)
(bad)
mov
mov
adc
xchg
push
mov
xchg
xor
adc
sub
loopne
xchg
mov
fnstsw
and
(bad)
call
mov
pop
scas
out
jbe
jp
mov
lods
shr
lock
add
dec
sub
or
push
mov
cs
xchg
dec
dec
iret
mov
(bad)
inc
push
stos
lock
xor
(bad)
repz
js
stc
test
scas
imul
jmp
adc
adc
lock
movs
adc
js
inc
cld
add
cmp
ds
xchg
sbb
(bad)
(bad)
call
cmp
lods
dec
imul
and
push
adc
push
sbb
pop
adc
gs
xchg
call
out
cli
inc
cmp
pop
les
jge
stc
add
stc
scas
dec
xchg
mov
or
jmp
lahf
xcrypt-ecb
cmps
dec
iret
loop
mov
stc
jl
(bad)
jmp
clc
add
std
cld
(bad)
(bad)
(bad)
jmp
out
int
jg
xor
out
mov
jmp
xchg
sti
sbb
loopne
sub
pop
mov
mov
daa
test
push
pop
retf
into
jg
ds
push
out
in
shl
pusha
xchg
inc
into
pushf
fs
(bad)
(bad)
(bad)
inc
add
scas
scas
mov
xchg
sub
sbb
pop
and
xchg
(bad)
dec
pop
jg
daa
movs
popf
dec
mov
shr
loop
push
sar
(bad)
(bad)
jmp
pop
dec
jae
ss
mov
pop
pushf
jne
std
pop
int3
out
ds
stos
pop
mov
(bad)
dec
add
cmps
in
out
add
imul
movs
aas
pop
sub
sub
les
clc
sbb
fcom
push
xor
dec
jne
push
jne
push
stos
fist
into
mov
or
push
push
add
jbe
push
idiv
sbb
movs
inc
int3
pop
test
(bad)
(bad)
push
jno
popf
std
les
pop
add
fmul
jne
data16
fld
outs
lods
(bad)
ss
lods
xor
sub
stos
mov
test
mov
rcl
(bad)
(bad)
(bad)
dec
xlat
out
cmps
iret
jmp
popf
sub
mov
int
cs
push
lock
nop
push
mov
fwait
out
dec
sar
inc
jmp
fnstsw
out
jl
pop
(bad)
xchg
clc
lock
adc
jmp
ret
adc
retf
ins
xor
stos
call
add
cli
or
ds
mov
fdivr
(bad)
(bad)
push
pop
add
das
sbb
xchg
pop
xchg
or
lock
aam
out
dec
(bad)
sub
dec
xor
movs
(bad)
inc
shr
and
(bad)
(bad)
jg
(bad)
jmp
sbb
lods
inc
iret
(bad)
xchg
or
movs
in
push
inc
sub
(bad)
(bad)
inc
mov
inc
fwait
sbb
and
xchg
stos
fidiv
or
mov
push
(bad)
call
sub
push
movs
push
sbb
bound
xlat
(bad)
fisub
mov
add
dec
fstp
push
xchg
inc
dec
cmps
xchg
sub
enter
pusha
jecxz
test
(bad)
(bad)
(bad)
push
ficom
inc
je
inc
jnp
fwait
mov
jge
aaa
jmp
xor
cdq
xor
(bad)
xchg
pop
dec
add
js
jb
cmps
stos
push
test
mov
sti
sahf
imul
jmp
gs
imul
inc
retf
jnp
inc
icebp
mul
and
jb
out
(bad)
(bad)
jmp
mov
movs
les
fdiv
jecxz
inc
in
jbe
cs
xor
pop
dec
jnp
dec
push
and
(bad)
(bad)
(bad)
dec
pmaddwd
pop
xor
mov
js
dec
or
pop
xor
loop
mov
pop
inc
scas
nop
inc
(bad)
(bad)
(bad)
jmp
adc
or
add
test
xchg
jb
sub
(bad)
(bad)
(bad)
(bad)
call
jmp
push
or
dec
add
adc
pop
jno
mov
call
jnp
sar
stos
(bad)
call
or
inc
mov
mov
jmp
and
inc
sbb
in
and
jmp
jle
cmp
out
lods
sub
xlat
icebp
dec
cmp
jne
inc
mov
pop
fcmovbe
xchg
mov
pop
das
cli
retf
mov
sub
adc
xchg
inc
rcr
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
and
mov
in
mov
scas
imul
out
scas
push
pop
pusha
in
std
add
or
mov
daa
shr
xor
jns
mov
(bad)
call
js
shl
retf
test
iret
sub
rol
mov
(bad)
(bad)
call
cmc
dec
xor
out
fs
ins
cmp
rol
popf
es
mov
fs
(bad)
(bad)
inc
mov
adc
out
ret
scas
inc
loope
jnp
mov
sbb
cld
dec
mov
(bad)
call
jmp
data16
ss
pop
and
loopne
sbb
mov
pop
sbb
ds
cmp
(bad)
(bad)
inc
in
cmp
push
pop
sahf
push
mov
jne
lds
lock
push
mov
inc
xchg
xchg
mov
xchg
cdq
pop
inc
add
clc
inc
dec
or
cmp
jmp
inc
scas
cwde
add
inc
retf
and
xor
xor
(bad)
call
mov
push
out
sub
push
ins
cmp
inc
fsub
(bad)
(bad)
out
cli
cs
inc
xchg
xor
cmp
or
or
dec
mov
data16
je
jmp
(bad)
jmp
inc
es
xchg
mov
mov
mov
sub
push
adc
push
sar
(bad)
(bad)
push
pop
movs
push
sbb
or
mov
stos
cmps
push
push
push
sbb
pop
jmp
fwait
mov
out
cmp
lods
shl
adc
mov
(bad)
(bad)
jle
lahf
pop
ds
out
dec
ins
ja
mov
imul
into
and
std
(bad)
push
shl
xchg
pop
cmps
or
sbb
aaa
je
fsub
adc
in
outs
xlat
and
xlat
adc
movs
mov
out
(bad)
(bad)
fcomip
imul
push
je
push
outs
leave
js
xlat
pop
mov
(bad)
pushf
data16
pop
dec
idiv
int3
iret
inc
je
ret
lods
sbb
(bad)
dec
push
mov
and
cld
out
sub
stos
dec
and
enter
mov
(bad)
(bad)
jmp
mov
sub
lock
jns
mov
repnz
cwde
fcomp
(bad)
stos
ret
push
or
sbb
jmp
dec
jbe
ret
test
mov
jle
sahf
adc
cmp
xchg
mov
push
loope
inc
fimul
or
(bad)
mov
jnp
leave
in
int3
movs
gs
call
neg
cdq
push
call
repz
lahf
or
shl
movs
mov
lods
mov
jp
jmp
in
mov
xchg
call
and
jmp
out
lock
gs
push
add
ins
or
dec
leave
dec
leave
push
inc
inc
jo
cmps
jb
bound
loopne
(bad)
(bad)
(bad)
jmp
into
sbb
xor
cmp
int
(bad)
cmc
inc
jns
push
aad
sub
add
cmp
movs
(bad)
(bad)
jg
add
cmp
mov
sti
sub
movs
std
xchg
jbe
jmp
cmp
jmp
mov
not
sbb
sbb
(bad)
jmp
xor
or
mov
sbb
loope
add
rcr
jmp
mov
scas
jecxz
pop
daa
and
inc
jecxz
inc
or
and
mov
cmp
jmp
inc
leave
adc
hlt
hlt
mov
shr
push
sub
inc
dec
mov
dec
dec
xchg
sub
xchg
jmp
push
mov
dec
(bad)
(bad)
(bad)
call
fidiv
xchg
adc
dec
std
jge
jb
mov
in
push
(bad)
(bad)
push
xchg
inc
mov
mov
cmps
xchg
sbb
cmp
adc
gs
std
add
inc
in
sbb
cmp
and
icebp
fcom
push
adc
(bad)
jmp
inc
xchg
imul
mov
int3
mov
out
ja
shr
mov
sub
sar
push
iret
ficomp
xor
pop
jmp
and
cs
out
(bad)
(bad)
call
fiadd
pop
sub
add
fld
xchg
inc
cdq
xor
(bad)
jmp
dec
cli
inc
icebp
int
lods
pop
pop
test
jnp
(bad)
sbb
inc
or
xor
sub
sar
cli
mov
adc
fcmovnb
inc
(bad)
mov
ret
sub
bound
or
mov
(bad)
or
call
loopne
out
fs
pop
std
sbb
out
sub
xor
ret
jmp
(bad)
(bad)
(bad)
sub
fdiv
imul
lea
call
retf
sub
(bad)
(bad)
(bad)
mov
and
es
mov
iret
mov
je
sbb
add
loopne
sub
sub
push
movs
test
jbe
repnz
je
(bad)
(bad)
inc
xor
leave
rcr
(bad)
hlt
and
in
ror
call
xor
cmp
adc
idiv
push
xor
add
sbb
pop
cld
movs
in
and
mov
movs
mov
loopne
xor
aam
test
ret
(bad)
(bad)
(bad)
jmp
add
sar
mov
in
std
xchg
movs
(bad)
arpl
mov
inc
ja
div
xbegin
ret
imul
movsx
movs
fwait
bound
or
add
shl
adc
push
inc
jbe
jp
mov
sbb
(bad)
(bad)
(bad)
jmp
xor
mov
ds
sub
pop
cld
repnz
(bad)
xchg
out
cmp
(bad)
inc
push
imul
jmp
dec
cmps
or
jg
mov
adc
or
outs
enter
(bad)
call
je
mov
push
or
sbb
retf
pop
xor
(bad)
(bad)
dec
mov
sar
mov
pop
xor
mov
loopne
add
jmp
fcmovnu
add
imul
fild
repz
push
mov
ins
stos
fstp
jmp
out
mov
aad
js
cwde
cmps
add
mov
mov
add
sub
xchg
cmp
loop
int3
sbb
das
addr16
mov
mov
inc
jl
clc
loop
push
or
das
mov
cdq
mov
and
(bad)
dec
sub
adc
aad
pushf
push
cli
jb
fisubr
pushf
xchg
(bad)
(bad)
(bad)
jmp
mov
pop
fs
cwde
repnz
movs
or
pop
sub
ja
(bad)
fcomp
jo
test
inc
pop
clc
idiv
outs
loope
cld
not
call
add
fiadd
fdiv
lods
mov
cmp
sub
and
dec
or
mov
out
clc
(bad)
(bad)
jmp
push
adc
add
push
inc
add
movs
(bad)
fs
cmps
(bad)
out
jmp
out
mov
dec
inc
enter
lock
daa
xor
(bad)
(bad)
(bad)
(bad)
cmp
pop
outs
sti
xchg
(bad)
sub
cmp
into
fcomp
aaa
outs
jb
dec
sbb
lock
cli
mov
pushf
ret
mov
pop
mov
(bad)
(bad)
jmp
popf
out
pop
cmp
pusha
mov
je
es
rcr
jmp
data16
sub
(bad)
(bad)
push
bound
xor
leave
loop
fld
inc
cmp
mov
stos
test
push
fisttp
or
imul
or
mov
mov
dec
jb
enter
cli
push
push
popa
gs
js
or
pop
fldcw
dec
inc
cmps
and
(bad)
(bad)
call
aad
add
cmp
push
cli
loop
mov
or
jmp
inc
fcom
mov
(bad)
(bad)
(bad)
(bad)
out
add
icebp
cmp
sti
push
imul
das
jae
cmp
jge
sbb
push
dec
daa
(bad)
(bad)
(bad)
(bad)
jg
mov
lods
dec
mov
push
aam
(bad)
out
jle
xchg
xchg
aas
out
sbb
(bad)
(bad)
(bad)
fisttp
mov
adc
icebp
(bad)
int
ud2
pop
xor
adc
scas
xchg
pop
xor
sbb
add
enter
scas
ss
call
and
les
sbb
push
xchg
(bad)
(bad)
push
pop
aam
sub
push
in
add
fisubr
jg
ret
sbb
mov
jmp
pop
loopne
call
xor
mov
add
and
cmp
iret
std
cmp
hlt
mov
ins
cmp
(bad)
neg
dec
loopne
gs
jle
(bad)
(bad)
out
clc
adc
pop
pushf
fdivr
jmp
ret
aas
or
dec
mov
aas
push
or
xor
(bad)
(bad)
dec
add
mov
inc
in
pop
aas
pop
sbb
dec
mov
cs
in
fidiv
dec
retf
(bad)
out
mov
jno
shl
lds
mov
lea
push
cmp
jb
pop
sahf
mov
movs
sub
cs
xor
mov
mov
xor
xor
xlat
(bad)
(bad)
call
pushf
and
adc
xor
lahf
cmc
xchg
sbb
(bad)
loopne
mov
cld
jg
sub
mov
push
pop
jg
aaa
add
mov
dec
push
xchg
adc
(bad)
(bad)
(bad)
(bad)
cld
rcl
repz
lods
fisubr
fisttp
clc
cwde
pop
jmp
cli
(bad)
call
mov
add
(bad)
cmp
xor
fidiv
mov
call
and
retf
sbb
ds
imul
pop
daa
jmp
(bad)
push
cmp
xor
cmp
movs
iret
les
icebp
in
or
xchg
cmp
pop
lahf
mov
cmp
pop
add
fistp
or
pop
std
(bad)
ds
test
mov
jb
addr16
in
jmp
(bad)
jmp
imul
dec
shl
mov
mov
pop
mov
push
xor
stos
imul
call
inc
push
sar
mov
les
hlt
and
jmp
je
iret
fdiv
push
lahf
sbb
add
jecxz
adc
(bad)
popa
test
out
mov
(bad)
(bad)
dec
cmp
xchg
xlat
push
ss
push
jmp
cmp
std
(bad)
mov
dec
fdivr
retf
and
mov
push
xchg
push
mov
or
dec
out
aam
xchg
test
jecxz
dec
test
push
sub
xor
hlt
xchg
jno
fistp
call
mov
push
mov
dec
stos
fprem
mov
or
aaa
(bad)
(bad)
(bad)
(bad)
call
adc
pop
ret
cmp
outs
sbb
cld
hlt
pop
xchg
jo
js
clc
(bad)
inc
fwait
scas
sti
std
pop
fistp
aas
xchg
imul
inc
or
(bad)
jg
je
loopne
mov
cmp
xchg
pop
jb
call
pusha
xor
push
fst
neg
jnp
xchg
xchg
div
movs
push
(bad)
std
dec
out
movhps
ds
(bad)
(bad)
(bad)
dec
fwait
cmps
loopne
pop
sbb
fcmove
dec
sbb
add
retf
mov
unpckhps
or
dec
hlt
add
push
pop
test
movs
jnp
xchg
popf
mov
repz
(bad)
jmp
fwait
rol
ins
adc
dec
push
(bad)
(bad)
inc
ror
rol
jecxz
jmp
in
jbe
dec
adc
mov
inc
out
mov
mov
add
pop
jno
adc
aas
clc
mov
jno
adc
or
xchg
fsub
sbb
xchg
xchg
out
(bad)
(bad)
mov
sbb
xchg
mov
mov
push
cwde
jmp
call
dec
jmp
dec
xchg
pop
icebp
sub
popf
push
and
mov
(bad)
(bad)
(bad)
call
sub
mov
imul
mov
xchg
icebp
movs
retf
sbb
leave
movs
lea
imul
lock
cmp
sub
mov
push
push
movs
das
jle
cs
or
xchg
and
mul
pusha
scas
(bad)
(bad)
jg
imul
jle
sbb
jo
mov
rcl
enter
lahf
imul
jmp
sub
mov
sbb
(bad)
(bad)
out
xchg
ret
lods
ds
neg
add
mov
in
dec
or
push
pusha
addr16
scas
mov
jmp
or
jle
add
fwait
push
sbb
xchg
(bad)
(bad)
(bad)
(bad)
cmp
jnp
jmp
or
movs
out
inc
cs
add
xchg
mul
push
and
call
pop
scas
xor
icebp
scas
out
mov
add
jp
popa
jmp
cmps
xor
fwait
call
leave
imul
pusha
add
test
out
pop
(bad)
(bad)
jmp
push
or
inc
cmp
mov
xchg
fist
push
dec
pop
pop
jae
inc
sub
mov
dec
(bad)
(bad)
(bad)
inc
mov
or
dec
mov
sbb
daa
and
xchg
mov
dec
adc
stos
out
mov
fdivr
loopne
fdivrp
pop
jno
out
fcomi
mov
ja
idiv
mov
(bad)
dec
mov
add
jmp
mov
xchg
stos
addr16
pop
(bad)
hlt
pop
call
inc
lods
(bad)
aaa
outs
popf
rcr
(bad)
in
mov
pop
jno
cld
inc
pop
int
pop
xor
gs
scas
jo
inc
mov
or
mov
(bad)
push
inc
out
loop
ja
hlt
xchg
fmul
add
mov
xchg
(bad)
xlat
(bad)
(bad)
(bad)
jmp
ja
mov
push
mov
jmp
out
inc
test
iret
push
fsub
int
clc
mov
outs
or
dec
mov
mov
shl
(bad)
(bad)
jmp
js
cmp
loopne
bound
xchg
fs
stc
mov
(bad)
(bad)
jmp
loope
or
out
xchg
cmp
cmp
shr
retf
sub
test
pop
cmps
push
cld
repnz
(bad)
(bad)
jmp
sbb
xchg
mov
icebp
add
jmp
xchg
shr
rdpmc
ja
adc
dec
xor
in
cmp
jmp
mov
xchg
xchg
stos
js
retf
imul
inc
in
pop
push
mov
(bad)
jmp
pop
jbe
and
jle
inc
iret
lods
adc
lock
push
(bad)
(bad)
(bad)
jl
adc
mov
clc
and
shl
enter
in
pop
push
(bad)
(bad)
(bad)
jmp
in
pop
mov
pop
xchg
and
(bad)
dec
cs
push
add
jns
mov
(bad)
(bad)
(bad)
jmp
inc
push
cmps
jmp
and
push
sub
jl
pop
aaa
mov
jmp
add
hlt
mov
aam
push
inc
dec
dec
fwait
inc
mov
mov
xor
(bad)
(bad)
(bad)
(bad)
call
aad
out
xchg
loop
xlat
adc
cmp
push
iret
ins
push
add
mov
inc
ins
fadd
fiadd
mov
inc
xor
pusha
das
push
sti
popf
mov
(bad)
scas
(bad)
dec
or
fdivr
push
in
mov
es
cs
(bad)
and
imul
clc
ds
sar
(bad)
in
pop
inc
sub
sbb
mov
inc
sub
jl
add
gs
jmp
dec
jl
or
iret
es
mov
jp
add
leave
cld
int
cli
pop
loopne
pop
lock
mov
fwait
xor
dec
inc
cmp
imul
jmp
xchg
mov
cmp
mov
lds
lds
pop
scas
(bad)
(bad)
dec
fld
pop
and
das
mov
ins
mov
mov
ret
(bad)
(bad)
(bad)
fdivr
test
sbb
mov
arpl
enter
mov
jmp
neg
popf
cmova
data16
dec
sbb
dec
mul
sbb
fnstsw
adc
jecxz
int3
sar
call
and
out
push
adc
cmp
adc
pop
and
(bad)
adc
mov
(bad)
call
cli
inc
pop
bound
push
lods
cmps
ret
ins
clc
cmp
pusha
out
cli
(bad)
mov
push
inc
(bad)
pop
movs
jnp
dec
adc
shr
loop
or
sub
mov
mov
pop
dec
and
cmp
(bad)
jmp
xlat
sbb
cmp
mov
and
dec
out
push
fsubr
(bad)
(bad)
(bad)
call
pop
adc
mov
in
in
pop
aas
cdq
jle
sahf
adc
das
mov
std
add
aam
push
addps
es
jno
in
mov
dec
dec
pop
lea
neg
sbb
cmp
(bad)
iret
jmp
cmps
inc
imul
(bad)
scas
push
(bad)
(bad)
(bad)
jmp
jle
sbb
(bad)
and
or
ficomp
adc
in
ret
enter
(bad)
(bad)
inc
cmc
mov
jg
idiv
or
jl
cs
ins
fbld
out
sti
out
loop
(bad)
(bad)
std
repz
rcr
adc
repz
or
adc
neg
test
(bad)
(bad)
(bad)
mov
aam
fwait
sub
fcom
dec
pop
add
es
inc
xchg
call
out
xor
(bad)
(bad)
(bad)
jmp
rcl
push
inc
push
ret
push
mov
test
inc
xor
pop
cli
xchg
adc
xlat
jl
push
jle
dec
test
sub
mov
addr16
(bad)
mov
jbe
or
mov
and
jb
mov
xchg
mov
or
pop
jecxz
sub
arpl
(bad)
(bad)
jl
sbb
(bad)
or
out
sub
jle
xchg
add
(bad)
jg
call
xchg
in
aaa
xchg
xor
or
cmp
xchg
fldcw
xor
call
retf
xchg
xchg
mov
xor
jmp
cmp
and
lock
xchg
popa
in
fisub
leave
jl
fisttp
aad
fld
jmp
adc
fldcw
sar
mov
mov
pop
(bad)
mov
das
jge
mov
or
or
jecxz
clc
cmps
dec
cmp
sar
mov
xor
xchg
inc
mov
mov
cmp
cmp
sbb
ret
or
fs
retf
ins
call
or
mov
ror
sahf
adc
test
dec
xor
xchg
mov
cmp
loope
cmps
pop
into
out
(bad)
stc
fnsave
fwait
(bad)
inc
cld
inc
xchg
fucom
sahf
jge
mov
adc
cmp
bound
(bad)
(bad)
dec
xchg
in
add
icebp
ins
(bad)
arpl
ins
push
popf
jmp
mov
mov
lock
leave
ret
push
mov
fsubrp
daa
call
add
push
and
inc
fcomip
push
cmps
dec
jle
jmp
sahf
loope
inc
fs
sbb
pop
adc
(bad)
(bad)
inc
ins
sub
fld
jg
out
das
rep
je
dec
pop
test
sbb
jb
(bad)
inc
into
xor
jg
sub
pop
push
inc
dec
dec
jo
cmp
scas
push
xchg
or
push
cmps
iret
test
sar
pop
pop
ins
cli
out
add
sar
(bad)
(bad)
(bad)
dec
adc
and
les
test
cmps
les
loope
cmp
(bad)
lea
jmp
test
(bad)
shr
or
fdivr
(bad)
(bad)
sbb
xor
adc
mov
adc
jns
sti
cmovs
rol
test
inc
jb
rcl
call
sub
or
in
mov
dec
push
xor
into
dec
adc
pop
mov
stos
fs
jbe
mov
mov
or
retf
(bad)
(bad)
(bad)
call
sub
lods
push
(bad)
add
rcr
mov
lock
pop
scas
mov
outs
ss
jmp
arpl
cmp
and
mov
cs
xchg
jne
or
cmp
(bad)
push
(bad)
jne
jne
and
push
sub
rcl
pop
lock
outs
pop
sbb
xchg
xchg
cmps
jmp
jmp
(bad)
cmp
pop
fstp
icebp
fucomp
jg
aas
out
(bad)
push
jmp
(bad)
(bad)
mov
(bad)
add
and
jbe
iret
rcr
clc
adc
je
popa
sub
add
stos
fs
fild
fisttp
pop
push
pop
pop
int
inc
imul
mov
pop
and
(bad)
ss
inc
retf
jp
hlt
call
scas
mov
iret
mov
jl
repz
out
pop
mov
jg
aaa
pop
ficom
push
lock
push
outs
jp
pop
leave
test
shl
call
test
pop
jo
lods
imul
stos
xor
or
jb
mov
and
cmc
out
mov
or
cmps
scas
mov
mov
sbb
add
cmps
imul
stc
into
in
retf
cmc
cwde
dec
lahf
inc
mov
mov
into
ins
jbe
jnp
cs
adc
pushf
pop
movs
xlat
in
imul
(bad)
(bad)
push
xchg
inc
sbb
add
paddsb
(bad)
leave
sbb
ret
cmp
out
ret
ror
push
cmp
(bad)
(bad)
(bad)
(bad)
cli
mov
addr16
lods
int
mov
sub
mov
xor
jae
(bad)
(bad)
(bad)
jmp
aam
ds
inc
popf
(bad)
fcmovbe
dec
push
push
jmp
or
and
lea
or
or
(bad)
dec
mov
pusha
popa
push
test
adc
ss
or
stos
sub
xchg
cmp
xor
and
cmp
call
inc
(bad)
(bad)
(bad)
push
mov
(bad)
popf
pop
mov
stos
mov
sbb
sar
lock
(bad)
mov
dec
mov
fisub
ss
(bad)
dec
in
cmp
lods
pop
test
xor
test
fwait
pop
cmp
ret
sub
jns
rol
lea
cdq
xor
mov
cmp
fldenv
and
ret
(bad)
(bad)
(bad)
inc
push
scas
push
cmc
adc
xor
pop
xchg
je
imul
or
(bad)
(bad)
scas
mov
(bad)
fnstsw
cwde
addr16
nop
mov
pop
inc
fisttp
popf
or
(bad)
dec
ins
pushf
sbb
ins
or
push
cmps
movs
das
sub
xchg
lds
and
dec
jmp
pop
jg
add
stos
add
cmp
jbe
jae
(bad)
(bad)
(bad)
mov
ret
pop
into
xchg
jl
ret
lahf
pop
pop
inc
test
(bad)
push
cwde
jo
call
mov
call
aas
jg
xor
out
(bad)
jmp
adc
inc
in
pop
je
sub
sbb
call
adc
xchg
dec
and
fiadd
into
lahf
popf
add
(bad)
call
jmp
(bad)
adc
test
jle
cmp
(bad)
jg
(bad)
bound
ret
loope
arpl
mov
outs
fild
cmc
in
outs
loope
scas
jge
cmp
idiv
(bad)
sbb
pop
jmp
shl
cmps
in
les
jp
xchg
fst
call
stos
addr16
mov
rcl
int3
pop
scas
sub
push
push
xchg
inc
inc
ret
mov
(bad)
push
and
inc
inc
lahf
jae
jb
mov
pop
mov
or
sub
shr
add
movs
cmp
inc
shr
or
cmp
push
jl
repnz
sub
iret
mov
aaa
(bad)
push
sti
rol
jp
pop
shr
fcom
xchg
(bad)
(bad)
push
aam
enter
ret
int
xchg
jl
push
call
xor
(bad)
push
retf
(bad)
(bad)
push
dec
xchg
jmp
ja
xor
sub
out
sbb
sub
mov
and
in
mov
stos
popa
loopne
adc
test
sub
(bad)
jmp
jnp
fild
pop
out
loope
call
mov
jns
jmp
sbb
xor
mov
mov
daa
repnz
(bad)
jmp
or
aam
cld
test
jo
push
adc
fisub
add
add
jmp
jo
mov
push
inc
clc
(bad)
in
mov
sbb
fdivrp
cmps
das
(bad)
jge
dec
loope
ja
loop
in
xchg
mov
add
icebp
cld
mov
push
(bad)
(bad)
(bad)
(bad)
fdiv
test
movs
and
ins
repz
shl
fld
(bad)
arpl
ds
cld
(bad)
dec
add
push
xchg
jns
loopne
test
push
add
(bad)
(bad)
push
inc
push
adc
idiv
lahf
punpckhdq
call
push
in
dec
or
(bad)
(bad)
jmp
add
add
mov
jno
mov
fs
movs
or
pusha
stos
ss
(bad)
(bad)
call
ds
mov
test
cmp
xchg
test
shr
ror
pop
mov
mov
adc
adc
or
stos
push
repnz
sub
hlt
adc
std
or
(bad)
jmp
or
mov
nop
loope
out
je
mov
call
repnz
out
fadd
mov
aad
push
jmp
sub
cli
inc
jle
movs
sub
outs
outs
sbb
call
pop
push
sub
jp
push
sahf
jp
mov
(bad)
(bad)
jmp
xchg
ds
cld
xchg
mov
in
outs
inc
jae
outs
hlt
mov
(bad)
jmp
shl
retf
pop
cs
adc
sbb
clc
iret
mov
retf
sahf
mov
popf
push
retf
and
test
xor
movs
xchg
mov
sbb
fmul
mov
push
ret
adc
pop
(bad)
aam
(bad)
shr
enter
imul
and
test
(bad)
(bad)
mov
sbb
repnz
mov
sub
pop
or
mov
ret
out
ja
xor
(bad)
(bad)
mov
inc
add
sbb
pop
mov
dec
fisubr
repnz
(bad)
(bad)
call
aad
lods
mov
sub
test
mov
dec
fnstcw
(bad)
out
cli
pop
out
mul
pop
shr
jg
punpckldq
mov
(bad)
(bad)
(bad)
jmp
pusha
out
shl
jl
movs
mov
in
jae
xchg
shr
aaa
loope
mov
cmp
loopne
(bad)
jmp
repnz
mov
mov
sbb
ror
sbb
clc
(bad)
jge
movs
push
inc
mov
movs
movlps
adc
push
jnp
dec
dec
inc
shl
jmp
shl
jmp
cmps
in
xlat
shr
inc
sub
cmp
add
jmp
jbe
(bad)
(bad)
mov
(bad)
into
sub
xor
mov
std
sub
push
in
hlt
mov
test
add
mov
repz
out
or
outs
(bad)
(bad)
mov
call
into
clc
call
shl
sbb
xor
(bad)
(bad)
(bad)
dec
rep
xchg
jns
fsubr
in
jbe
xchg
mov
or
adc
or
call
(bad)
(bad)
(bad)
mov
mov
dec
aas
inc
xlat
int3
pusha
xchg
bound
aad
mov
fcos
(bad)
mov
push
adc
das
cdq
das
xor
add
xchg
in
adc
clc
dec
sti
or
pop
dec
sub
cmps
loop
inc
xchg
push
(bad)
(bad)
(bad)
jmp
(bad)
cld
mov
int
dec
cli
test
fbstp
(bad)
mov
in
or
test
(bad)
(bad)
inc
push
dec
lods
push
(bad)
fidiv
jmp
aam
mov
sbb
sub
imul
or
repz
sbb
repz
(bad)
(bad)
(bad)
jl
int3
inc
pop
mov
lods
jp
cmps
call
dec
dec
push
lahf
cmps
xlat
loop
inc
add
jmp
pop
int3
pop
pop
ret
sbb
loop
psraw
(bad)
cmp
mov
pop
sbb
mov
arpl
(bad)
push
sub
jp
xor
push
aaa
cmp
push
mov
aas
dec
loopne
sahf
jbe
add
xor
iret
mov
cmp
mov
cld
pushf
add
cwde
nop
imul
adc
(bad)
(bad)
(bad)
push
mov
aaa
in
je
ins
sbb
fwait
out
mov
(bad)
cmp
in
js
popf
retf
mov
std
push
stos
xor
clc
xchg
pop
cmc
fisttp
jmp
(bad)
(bad)
inc
push
push
div
gs
pop
dec
push
cli
je
out
push
pop
imul
mov
cwde
sbb
mov
daa
dec
jmp
mov
jge
ret
inc
arpl
rcl
or
lods
push
and
pushf
mov
xchg
add
(bad)
call
xchg
popa
or
hlt
fdivr
xchg
jne
mov
out
adc
push
and
mov
sbb
push
inc
into
fidiv
stos
repz
scas
loopne
xor
call
(bad)
(bad)
inc
inc
add
xchg
shl
xor
push
pop
push
lods
lds
mov
mov
(bad)
(bad)
call
mov
jle
xchg
ret
dec
movs
pop
ins
loopne
scas
mov
(bad)
xor
mov
call
cld
fcmovbe
mov
push
das
cs
shr
clc
int3
es
cmp
(bad)
(bad)
(bad)
mov
popa
data16
mov
(bad)
add
jl
add
sar
js
dec
shl
(bad)
mov
ins
mov
in
and
push
hlt
lock
cli
out
pop
xor
in
push
fwait
(bad)
(bad)
call
popa
or
mov
minps
push
stos
cmc
(bad)
(bad)
dec
push
dec
ins
jecxz
je
pop
mov
in
test
mov
cmp
fadd
xchg
fwait
inc
jne
push
jne
push
bnd
and
repz
stos
int
(bad)
(bad)
call
xor
and
push
nop
jb
addr16
add
scas
ds
in
and
mov
call
stos
mov
inc
fcmovb
mov
mov
movs
call
(bad)
loop
jmp
ins
out
jnp
pushf
cmp
or
sub
sbb
(bad)
(bad)
dec
xchg
aas
leave
call
xchg
push
adc
aad
or
xchg
fldcw
mov
(bad)
in
xchg
pop
xchg
aaa
jns
sahf
aad
into
or
loopne
(bad)
(bad)
outs
cmp
rcr
out
or
out
out
aas
mov
jp
(bad)
fbstp
mov
shl
pop
push
std
jbe
hlt
push
clc
ror
jne
call
and
ficomp
push
fist
movs
mov
push
(bad)
(bad)
(bad)
jmp
mov
aad
jns
xchg
dec
mov
sbb
les
xchg
(bad)
(bad)
(bad)
call
xchg
pop
lahf
popf
jo
(bad)
xor
lods
fdivr
shl
mov
xchg
pusha
xchg
and
and
ss
cmp
pop
dec
dec
push
sti
or
movs
mov
inc
ret
(bad)
(bad)
jmp
push
push
xor
mov
jg
mov
fisub
dec
cmps
mov
mov
sbb
(bad)
(bad)
(bad)
push
add
repz
pop
push
cmp
retf
sar
cdq
jbe
bound
call
cs
push
stos
sub
(bad)
aas
or
(bad)
mov
addr16
shl
xchg
fbstp
(bad)
call
cmps
mov
test
sbb
mov
sub
(bad)
(bad)
(bad)
jmp
jmp
js
xchg
into
jo
xchg
inc
cmp
pop
ins
loopne
iret
mov
cld
(bad)
(bad)
(bad)
sti
jno
and
ja
pop
neg
movs
pushf
(bad)
shl
push
pushf
mov
adc
aas
(bad)
(bad)
jg
add
das
jge
div
xchg
daa
lahf
mov
jle
(bad)
(bad)
(bad)
(bad)
mov
dec
mov
cld
xchg
hlt
add
adc
out
in
popf
dec
imul
or
push
push
or
iret
sbb
(bad)
adc
jo
(bad)
call
cmp
imul
out
ja
push
add
push
xor
into
aas
push
test
ror
(bad)
data16
ins
xchg
pop
fimul
and
cmp
in
(bad)
(bad)
(bad)
dec
jnp
jae
cs
jno
push
push
cmc
je
push
mov
pop
(bad)
mov
sahf
inc
dec
cmp
pop
mov
rcr
(bad)
(bad)
jg
pusha
or
repz
iret
and
cmp
or
je
push
inc
jne
ret
(bad)
(bad)
(bad)
inc
adc
sub
pop
scas
inc
push
adc
fs
sbb
pop
test
pushf
(bad)
(bad)
(bad)
push
test
adc
ins
mov
(bad)
sbb
gs
and
xor
int3
and
mov
(bad)
(bad)
jmp
(bad)
cmp
jg
stc
jne
(bad)
mov
pop
push
cmps
stos
sahf
scas
push
cmp
test
call
sub
repz
das
push
sub
mov
das
inc
mov
and
cmps
mov
jmp
shl
inc
sar
xor
lea
add
cs
or
xor
fistp
test
adc
add
(bad)
aam
sbb
mov
jp
pop
lods
add
iret
dec
(bad)
(bad)
(bad)
jmp
adc
pusha
pop
inc
xor
in
jg
xor
ins
aad
mov
inc
pop
popa
pop
sub
(bad)
(bad)
(bad)
dec
aam
test
ficomp
jne
movs
cld
xchg
sub
jle
dec
mul
(bad)
(bad)
dec
rol
cmps
daa
(bad)
dec
cmp
xlat
cmps
adc
aaa
loope
cmps
(bad)
inc
shr
fcom
scas
mov
sbb
mov
pop
and
xchg
outs
shr
mov
xor
or
sbb
rol
movs
ret
(bad)
sbb
dec
repnz
aad
push
mov
(bad)
push
adc
iret
daa
test
push
sbb
mov
cmp
push
mov
(bad)
call
call
pop
jae
xchg
adc
cmp
mov
call
push
out
nop
fwait
(bad)
(bad)
dec
(bad)
div
inc
jge
imul
clc
pop
jo
imul
(bad)
jmp
cdq
ds
fld
jno
je
imul
cli
repnz
xor
(bad)
(bad)
jmp
sbb
repz
inc
retf
xchg
or
icebp
sbb
(bad)
mov
jp
push
sub
mov
pop
outs
fwait
(bad)
(bad)
call
dec
cmp
(bad)
pop
xchg
add
jmp
push
div
jmp
add
mov
add
call
add
sub
(bad)
(bad)
jmp
fbstp
mov
call
jecxz
rcl
std
(bad)
retf
(bad)
xchg
rcl
jge
scas
cli
mov
mov
inc
retf
imul
jp
(bad)
jg
add
dec
mov
mov
push
mov
(bad)
(bad)
(bad)
dec
imul
cmps
imul
ror
repnz
and
sub
(bad)
call
cmps
mov
mov
(bad)
xor
xchg
inc
ds
jge
outs
arpl
(bad)
(bad)
inc
loope
lock
pop
cmp
outs
stc
mov
mov
test
(bad)
(bad)
(bad)
jmp
pop
lock
jae
retf
pop
call
outs
jns
mov
lods
(bad)
out
les
stos
xchg
sbb
cmp
call
and
pop
out
pop
(bad)
xor
scas
bnd
jmp
mov
and
(bad)
(bad)
push
call
dec
cmp
retfw
imul
add
cs
jp
mov
adc
(bad)
call
push
sahf
dec
stos
and
dec
mov
scas
dec
dec
sub
imul
mov
pushf
or
out
dec
xchg
mov
push
(bad)
sub
jae
popa
sti
cmc
test
fcos
(bad)
(bad)
mov
retf
push
repz
pop
jno
dec
inc
cwde
dec
push
test
call
popa
loope
jge
test
dec
push
stos
dec
(bad)
(bad)
(bad)
cld
sub
fiadd
pop
add
mov
pop
or
sar
jmp
jnp
xchg
cmc
in
out
mov
mov
popf
lods
jmp
popf
das
cli
(bad)
jmp
jns
dec
stos
dec
xchg
sahf
(bad)
(bad)
mov
fwait
pop
std
mov
sti
out
fdivr
xchg
or
(bad)
(bad)
push
push
loopne
cmp
and
xchg
(bad)
lds
add
shr
push
call
mov
fisttp
nop
cld
int3
test
lahf
mov
jp
jnp
sub
icebp
arpl
inc
shl
adc
imul
ja
fild
push
and
sub
imul
leave
rcr
cmp
int
cmp
(bad)
(bad)
mov
lods
ins
add
mov
call
bound
push
sub
jne
cmp
dec
fwait
lock
(bad)
(bad)
(bad)
call
imul
fcomi
mov
(bad)
faddp
xchg
add
std
repnz
ins
in
call
(bad)
(bad)
dec
push
repz
jmp
mov
jge
cli
iret
cld
fdiv
pop
mov
cmps
dec
iret
mov
call
add
scas
sub
aas
pushf
inc
movs
jmp
mov
xchg
cmc
xchg
aam
clc
(bad)
call
sub
sahf
cmps
mov
sbb
js
add
push
(bad)
(bad)
(bad)
inc
pop
push
sbb
push
sbb
sub
mov
inc
mov
mov
mov
mul
mov
push
(bad)
std
xadd
pop
mov
daa
xchg
jg
mov
adc
xchg
test
arpl
sbb
fstp
jmp
clc
jg
sub
leave
jl
push
push
xor
mov
imul
call
sti
push
jg
(bad)
(bad)
fisub
lds
pop
mov
sbb
add
scas
jp
test
(bad)
jmp
(bad)
(bad)
out
enter
inc
xchg
loope
sbb
mov
sub
test
or
mov
jp
gs
(bad)
(bad)
(bad)
js
dec
pop
sub
repz
int3
pushf
cmp
cmovl
pop
or
pop
adc
push
loop
jno
(bad)
(bad)
mov
jo
fucom
test
fstp
(bad)
jmp
js
sub
icebp
int
mov
icebp
pop
dec
scas
push
jle
inc
add
dec
sbb
sbb
add
(bad)
(bad)
call
xchg
mov
push
jno
xchg
push
mov
(bad)
xchg
sub
adc
push
push
xchg
add
pusha
test
pop
mov
or
cmp
inc
push
sub
dec
xor
sar
(bad)
(bad)
(bad)
out
mov
xor
pop
(bad)
arpl
fld
cmp
sbb
das
cld
sar
lock
mov
jecxz
(bad)
(bad)
(bad)
cmp
xchg
jl
hlt
repnz
xor
xlat
(bad)
icebp
xchg
push
cld
leave
lahf
mov
inc
dec
adc
xor
xor
mov
cld
enter
add
std
(bad)
fild
fnsave
push
(bad)
imul
mul
mov
add
lea
adc
cld
push
adc
xchg
sub
(bad)
(bad)
(bad)
(bad)
cmp
sbb
test
adc
sub
aam
fcmovbe
mov
or
sti
cwde
(bad)
push
mov
icebp
ss
add
ficom
(bad)
mov
jbe
(bad)
(bad)
dec
adc
xchg
fsubr
jge
test
das
clc
(bad)
jmp
mov
push
setne
ss
cdq
inc
ds
or
or
sbb
pop
addr16
lods
in
jmp
pop
imul
mov
pop
ror
mov
call
mov
fidivr
push
(bad)
fcomip
pop
cmps
mov
xor
jge
add
hlt
loope
(bad)
call
sahf
sub
mov
stc
popa
dec
cs
mov
(bad)
(bad)
jmp
inc
dec
ins
sbb
call
fadd
xor
ja
cmps
jecxz
mov
(bad)
(bad)
jmp
sub
jae
cmp
popf
adc
ins
add
jl
sbb
or
enter
std
(bad)
(bad)
(bad)
in
cdq
push
dec
dec
js
cmp
ins
fadd
ss
retf
test
push
ss
mov
imul
ins
nop
iret
sub
cli
test
aad
pushf
push
retf
std
jg
std
cdq
jne
or
scas
daa
xor
das
cmp
push
cs
je
dec
(bad)
(bad)
(bad)
(bad)
mov
icebp
gs
push
add
sub
data16
ret
jp
cmps
cmp
xor
cmp
add
(bad)
das
dec
add
aad
dec
sbb
xor
(bad)
(bad)
out
add
enter
jo
fsub
cld
fadd
jno
sbb
lock
pop
pop
aam
add
(bad)
(bad)
(bad)
jge
add
test
cmc
fwait
and
xor
jle
mov
hlt
sbb
xor
xchg
pop
push
jb
inc
cmp
jle
test
inc
popa
js
jg
lods
jmp
jmp
sti
cmps
rcr
ja
adc
or
scas
scas
clc
call
jge
popf
(bad)
pop
inc
xchg
mov
sub
cli
loop
std
(bad)
(bad)
call
jge
xchg
xchg
xchg
push
inc
adc
loope
ins
and
cdq
mov
(bad)
mov
push
cmps
scas
hlt
sub
sub
xchg
dec
lahf
xchg
stos
and
mov
cmp
movs
add
inc
push
add
fimul
frstor
call
ins
xor
(bad)
(bad)
jmp
cmp
add
loop
cmps
imul
mov
inc
sub
and
cmp
inc
sub
pushf
cwde
loopne
ins
das
inc
or
stc
bound
mov
test
shl
jg
lock
fwait
xchg
cmp
sub
pop
adc
dec
movs
cmp
mov
mov
inc
dec
sub
and
sub
pop
aas
cmps
daa
push
lods
push
pushf
xchg
clc
popa
(bad)
jo
(bad)
jmp
mov
lods
pop
into
pop
mov
fcmovne
xchg
bound
jmp
sahf
test
dec
call
pop
jbe
rol
clc
ficomp
(bad)
(bad)
dec
jp
ror
mov
out
pop
adc
fidivr
(bad)
dec
inc
jge
scas
xchg
int
xlat
mov
outs
cld
sub
(bad)
(bad)
call
sti
add
loopne
das
(bad)
icebp
cdq
sahf
int3
jp
not
cmp
imul
mov
mov
(bad)
(bad)
(bad)
call
add
outs
jae
sbb
fs
sub
xchg
pop
(bad)
(bad)
(bad)
jmp
xor
cwde
scas
std
xchg
into
xor
ret
jbe
movs
fs
sar
rcl
sbb
adc
and
dec
and
jmp
pop
mov
int
dec
cwde
add
in
mov
out
cli
fwait
int3
and
shl
xor
jo
pushf
inc
sbb
popa
loopne
(bad)
clc
aad
push
sbb
enter
push
(bad)
hlt
sbb
or
(bad)
cmp
push
sub
dec
inc
nop
test
dec
sub
mov
(bad)
call
out
push
or
push
and
jmp
mov
pandn
adc
das
or
xchg
push
cmps
(bad)
in
enter
sub
pushf
dec
mov
mov
(bad)
(bad)
(bad)
jmp
dec
mov
rol
or
pop
or
jecxz
les
popw
cmp
pop
lock
test
sub
pop
mov
dec
(bad)
mov
add
test
adc
cli
gs
sub
fimul
jno
xchg
xor
and
xor
pushf
mov
fild
mov
xchg
adc
jae
jmp
ja
push
(bad)
(bad)
out
xchg
(bad)
cmp
addr16
shr
call
(bad)
(bad)
(bad)
(bad)
fbld
sbb
std
xchg
add
aaa
mov
movntq
out
(bad)
cs
xor
inc
cmp
aam
cwde
mov
aam
and
stos
(bad)
imul
jmp
sub
(bad)
(bad)
jmp
sub
jbe
push
ins
jnp
fld
mov
sbb
hlt
push
clc
(bad)
jmp
adc
mov
xchg
mov
les
arpl
mov
xor
(bad)
mov
push
sbb
sbb
mov
mov
(bad)
dec
shl
outs
pop
jno
sahf
or
(bad)
out
les
sbb
fisttp
mov
mov
(bad)
mov
(bad)
mov
or
loop
push
(bad)
(bad)
call
ins
xor
xchg
in
dec
dec
xchg
test
mov
sub
push
xor
sub
(bad)
jg
fisubr
or
push
mov
lea
pop
arpl
(bad)
(bad)
jmp
xor
scas
mov
push
jno
dec
out
ret
jbe
repnz
mov
mov
mov
loop
fs
mov
rol
xchg
(bad)
(bad)
call
sbb
mov
xchg
xor
jno
aad
mov
jge
imul
movs
cmp
(bad)
(bad)
call
and
fst
mov
cmp
repz
dec
sub
jecxz
inc
std
inc
int3
adc
or
pop
cmp
(bad)
dec
ins
stos
out
xor
inc
or
lock
je
jle
push
jmp
loop
arpl
sbb
arpl
jmp
shr
in
xchg
arpl
mov
adc
pop
lahf
call
push
or
mov
sub
loop
mov
pop
lahf
push
out
cld
call
sbb
imul
lock
push
std
adc
jl
pop
mov
jl
sar
(bad)
(bad)
(bad)
inc
mov
(bad)
cmp
aaa
mov
xchg
lahf
(bad)
(bad)
jns
xor
retf
mov
xchg
(bad)
dec
add
or
and
sahf
aad
push
in
neg
sub
(bad)
(bad)
(bad)
sub
rcr
inc
into
push
dec
cmps
pop
pusha
cmp
imul
pusha
jg
sub
xchg
(bad)
(bad)
push
lock
and
retf
adc
imul
jns
xchg
add
(bad)
call
aad
mov
jae
cdq
lock
push
add
(bad)
(bad)
call
pop
(bad)
jl
xor
shr
imul
and
adc
repnz
push
jge
(bad)
(bad)
(bad)
fiadd
je
push
sahf
xor
ror
lahf
shl
jg
je
(bad)
jnp
add
out
ror
(bad)
(bad)
(bad)
push
xchg
lahf
rcl
push
popf
dec
add
stos
icebp
test
lods
mov
push
out
jge
xor
(bad)
(bad)
jmp
inc
adc
adc
jle
push
in
inc
mov
in
dec
aas
push
pop
cld
ins
pop
(bad)
stc
mov
mov
inc
xor
neg
dec
sti
xchg
sbb
inc
add
cli
push
test
push
jecxz
lock
push
cld
mov
test
and
fdiv
jle
cwde
or
loop
inc
gs
(bad)
(bad)
(bad)
inc
mov
push
or
push
jmp
mov
xlat
dec
add
out
(bad)
fistp
dec
arpl
push
sub
loop
daa
daa
xchg
dec
leave
sbb
add
dec
ins
bound
dec
adc
inc
test
in
rol
fsub
gs
(bad)
(bad)
(bad)
mov
xchg
or
inc
jl
outs
sbb
imul
arpl
xor
add
jle
(bad)
(bad)
(bad)
(bad)
cmp
xor
aaa
imul
push
push
sbb
pusha
or
lods
sti
sub
movs
sub
addr16
(bad)
aas
mov
add
xchg
mov
pop
adc
(bad)
mov
sbb
mov
inc
aaa
fwait
iret
mov
(bad)
pop
mov
inc
cmp
sbb
in
jl
or
(bad)
call
std
sbb
jmp
stos
lods
jmp
push
xor
jae
sar
mov
clc
out
or
dec
mov
sbb
outs
or
push
(bad)
call
dec
xchg
movs
xor
sbb
pop
cwde
push
push
imul
xchg
bound
and
push
je
cmp
(bad)
data16
cmp
jmp
jle
or
ja
aam
pop
dec
xchg
std
dec
pxor
(bad)
(bad)
(bad)
push
out
inc
cmp
sbb
jmp
(bad)
scas
fsubr
je
xor
(bad)
(bad)
(bad)
mov
sbb
xchg
imul
adc
adc
mov
lock
sub
xor
jb
inc
add
sbb
dec
rcr
out
icebp
mov
add
(bad)
fcomip
jmp
add
rcr
out
pop
daa
lods
retf
and
shl
(bad)
(bad)
(bad)
call
adc
xor
push
shr
test
rol
mov
push
and
out
popa
(bad)
or
(bad)
(bad)
inc
cmp
jp
push
ins
iret
not
test
bound
inc
adc
sbb
pop
push
scas
jle
xchg
ins
fwait
cli
xchg
(bad)
(bad)
(bad)
(bad)
out
pop
aad
popf
mov
xlat
xchg
jnp
bound
and
cli
scas
loopne
outs
ins
push
jg
shl
call
(bad)
or
test
and
lock
lods
inc
cld
js
mov
mov
xor
jmp
pop
js
push
es
das
sub
mov
jb
bound
nop
stos
cli
fs
test
and
dec
cmps
cmp
add
popf
retf
mov
stos
cwde
pop
movs
(bad)
(bad)
call
sbb
sub
enter
jl
mov
(bad)
out
mov
sub
nop
dec
sbb
adc
in
sbb
dec
pop
out
test
mov
scas
push
inc
popf
neg
rol
test
(bad)
(bad)
(bad)
call
jecxz
fs
inc
add
cmp
lods
mov
inc
(bad)
push
std
jmp
outs
mov
call
sbb
cmp
sbb
mov
and
(bad)
(bad)
mov
or
fs
retf
fst
dec
dec
cwde
xchg
jnp
fs
(bad)
or
fwait
cmc
inc
out
adc
std
call
(bad)
iret
cmp
int
pop
xor
clc
jae
and
sub
jg
jl
inc
imul
and
in
ja
xchg
pop
repz
jmp
pop
cmp
mov
lods
pop
mov
inc
jmp
cmc
xor
(bad)
jmp
mov
ja
je
clc
pop
cld
loope
xchg
(bad)
(bad)
inc
jg
jmp
push
lods
mov
shl
and
and
cmc
jae
dec
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
in
fsubr
sub
mov
adc
fdiv
jne
movs
mov
or
sahf
lds
lock
aad
push
cdq
mov
inc
jle
dec
daa
push
sar
xor
stc
ror
rcr
cmps
cs
push
xor
clc
movs
xchg
pop
enter
fistp
mov
xor
and
xlat
popa
in
movs
lods
dec
in
aas
mov
mov
lock
(bad)
(bad)
(bad)
jmp
and
test
call
fst
icebp
jns
push
movs
add
addr16
addr16
(bad)
(bad)
dec
inc
push
lea
inc
mov
xchg
ins
cwde
fdiv
jbe
popa
push
mov
inc
dec
cld
and
sbb
sti
sub
popf
jns
(bad)
clc
(bad)
(bad)
(bad)
dec
fwait
adc
mov
out
mov
int3
pop
add
std
call
loop
inc
adc
call
mov
cmp
adc
inc
hlt
fwait
pop
jns
xchg
add
or
ret
cmp
or
sbb
ins
add
scas
test
inc
push
lahf
rol
mov
call
add
ins
js
sbb
mov
in
mov
jl
ret
or
(bad)
call
stos
lods
inc
jno
sub
mov
dec
mov
das
push
test
dec
xchg
shr
lock
mov
(bad)
(bad)
(bad)
push
fsub
push
ficom
dec
add
xor
pop
push
fsub
xchg
call
repz
(bad)
(bad)
(bad)
inc
pusha
mov
inc
adc
sbb
(bad)
push
fwait
push
les
cmp
lea
cmps
add
mov
movs
xchg
push
jg
mov
xor
add
hlt
aaa
ins
(bad)
jmp
push
test
mov
add
sub
(bad)
(bad)
(bad)
jmp
mov
pusha
add
fwait
bound
outs
nop
fnstsw
movs
add
sub
(bad)
(bad)
call
imul
(bad)
outs
jbe
add
dec
jmp
dec
ror
loopne
cs
cmp
push
imul
std
(bad)
(bad)
ds
sbb
fcmovnbe
mov
pop
pop
test
dec
sbb
ds
mov
inc
push
loopne
(bad)
(bad)
jmp
cmc
jne
pop
push
cmps
out
sbb
or
into
movs
push
test
jne
mov
jg
sub
aaa
add
ins
push
call
(bad)
jmp
and
outs
push
pop
sbb
jnp
cmp
into
daa
sbb
not
push
push
cld
out
xor
push
adc
idiv
addr16
test
fwait
popa
rcr
sahf
pop
pop
xor
fist
sbb
jns
lock
cmp
sbb
js
push
hlt
inc
cmp
add
push
not
addr16
in
mov
sahf
(bad)
cmp
cmps
(bad)
(bad)
(bad)
(bad)
jmp
dec
inc
sbb
sbb
call
or
cmc
cmp
sub
(bad)
in
push
movs
pop
pop
pop
inc
cld
(bad)
(bad)
dec
push
int3
jns
pop
shl
sar
rcr
dec
retf
imul
push
scas
cmp
mov
jl
xlat
sub
(bad)
or
ins
stc
add
loope
mov
hlt
in
rcl
pusha
pop
(bad)
in
out
inc
ins
dec
mov
cmp
mov
or
xchg
xchg
ret
(bad)
(bad)
(bad)
out
inc
(bad)
mov
sub
pop
ret
pop
mov
or
js
jns
jecxz
adc
cmps
ret
jne
(bad)
(bad)
inc
sbb
xchg
sub
mov
out
arpl
ss
pop
hlt
mov
mov
fist
fisub
pop
fsubr
inc
pop
(bad)
jg
pop
gs
mov
inc
lods
std
imul
push
push
rcr
(bad)
call
dec
mov
ins
push
ins
ins
ss
xor
adc
push
nop
shl
sar
into
stos
cmp
inc
cmc
imul
das
(bad)
out
adc
lods
push
in
ror
es
xor
ror
(bad)
(bad)
(bad)
out
popf
stc
repz
cdq
stos
lods
push
sbb
fcomip
adc
adc
pop
pop
inc
shr
adc
rcl
mov
cmps
daa
aad
dec
aad
add
test
(bad)
call
sbb
in
push
mov
movs
dec
lahf
sub
(bad)
(bad)
inc
push
adc
mov
test
or
mov
loopne
push
push
inc
xchg
inc
fdiv
outs
inc
outs
test
and
add
movs
(bad)
(bad)
jg
call
div
inc
data16
or
shl
or
(bad)
inc
dec
push
mov
subps
fbstp
or
(bad)
cli
push
aaa
fs
loop
js
repnz
out
sub
(bad)
(bad)
jmp
stos
int3
pop
add
ins
cmp
xor
cmp
(bad)
(bad)
(bad)
push
or
cwde
dec
or
dec
inc
sub
xor
cmp
pop
cmp
mov
xor
cmp
lods
rol
lods
jno
and
or
pop
(bad)
(bad)
push
or
adc
(bad)
in
and
push
and
and
push
jo
push
and
outs
inc
outs
sub
pop
and
xor
sahf
sbb
pusha
cli
dec
and
leave
fcomip
(bad)
(bad)
(bad)
sti
push
push
mov
jae
mov
pop
jno
or
ins
cli
push
std
ss
dec
movs
mov
jl
sbb
dec
mov
in
xor
cmp
jmp
mov
and
leave
xchg
jg
ret
(bad)
cmp
pop
icebp
add
(bad)
gs
bound
pop
fwait
jbe
mov
out
push
nop
or
adc
(bad)
push
mov
mov
call
cld
(bad)
xor
into
sbb
popa
jecxz
jg
jmp
(bad)
outs
pop
mov
cmp
jmp
(bad)
(bad)
push
call
jmp
mul
div
mov
mov
cmp
movs
mov
inc
lea
push
fadd
xor
imul
dec
movs
fiadd
lods
(bad)
call
inc
jmp
fs
leave
cmp
adc
xor
(bad)
(bad)
dec
add
push
fstp
ret
jns
xchg
(bad)
inc
mov
dec
ret
xor
les
(bad)
(bad)
inc
dec
pop
std
push
jns
loop
xor
jl
pop
pop
imul
(bad)
(bad)
(bad)
call
jbe
add
ror
inc
ret
push
inc
ret
stos
sahf
mov
xor
sub
and
loope
or
adc
jo
mov
(bad)
mov
fadd
bound
jbe
xor
mov
rcl
ds
(bad)
(bad)
(bad)
(bad)
jmp
hlt
pop
dec
dec
jo
ja
(bad)
int3
jle
fisub
gs
cmps
mov
fadd
imul
or
ss
outs
xor
or
pop
clc
cmp
(bad)
(bad)
dec
repnz
dec
mov
mov
pop
fidivr
aad
call
xchg
and
inc
or
jge
sbb
jle
dec
cmp
(bad)
(bad)
(bad)
call
push
push
dec
movs
test
rcr
jle
ror
fsubr
sbb
mov
xchg
retf
(bad)
(bad)
(bad)
jmp
fadd
ror
jnp
into
test
and
mov
xor
call
pop
sbb
mov
inc
imul
je
(bad)
(bad)
jmp
pop
and
dec
pop
inc
aad
imul
ins
inc
mov
(bad)
icebp
dec
add
(bad)
(bad)
jmp
add
out
xor
out
shl
int
mov
push
xchg
dec
inc
mov
test
aas
clc
(bad)
(bad)
(bad)
(bad)
push
lods
fidiv
xchg
(bad)
push
call
adc
mov
jns
sub
(bad)
dec
add
out
add
lahf
inc
inc
pop
xor
and
retf
jg
jmp
movs
movs
sbb
mov
dec
and
fdivr
adc
and
push
fild
gs
inc
jo
cdq
mov
sub
sbb
hlt
mov
scas
cdq
(bad)
(bad)
mov
mov
cmp
mov
or
pusha
pop
enter
(bad)
dec
push
push
inc
xchg
pop
push
mov
call
movs
jb
dec
lea
or
push
loope
(bad)
inc
xor
push
pop
mov
mov
pop
mov
fwait
and
xchg
cmps
(bad)
(bad)
(bad)
call
dec
or
sbb
xchg
rcl
arpl
jmp
rcr
adc
dec
ds
aaa
dec
cli
call
loopne
out
pop
jg
mov
mov
mov
sti
movs
pop
add
es
mov
pop
out
(bad)
jmp
or
cmp
xchg
push
popf
jl
(bad)
(bad)
mov
arpl
add
push
test
jbe
push
imul
fwait
or
pop
mov
and
movs
dec
pushf
aaa
lock
xor
push
dec
mov
jns
jne
cli
emms
jo
(bad)
cmp
mov
pop
adc
out
jmp
mov
xchg
xlat
in
aaa
or
jmp
dec
xchg
pop
add
or
les
push
cmp
fiadd
adc
data16
pop
sar
pushf
jl
(bad)
(bad)
(bad)
cmp
sub
sub
cmc
push
fst
mov
in
jp
jbe
retf
or
cmp
mov
mov
jmp
sbb
fs
jnp
int3
push
fmul
(bad)
cmp
les
xlat
jnp
push
(bad)
mov
stos
aad
test
js
(bad)
(bad)
(bad)
jmp
(bad)
out
(bad)
inc
in
push
sub
push
dec
fcmovu
ficom
sub
mov
sti
data16
sbb
(bad)
(bad)
(bad)
adc
cmps
in
jae
xchg
mov
xchg
xchg
jecxz
in
loopne
test
(bad)
dec
loop
popf
jg
lds
or
stos
(bad)
das
mov
(bad)
(bad)
(bad)
in
adc
sub
mov
xor
mov
mov
xchg
push
(bad)
inc
(bad)
(bad)
dec
mov
or
arpl
cmp
(bad)
(bad)
(bad)
jmp
nop
enter
inc
retf
je
nop
stc
and
(bad)
call
stos
jo
(bad)
(bad)
(bad)
call
dec
dec
dec
xor
push
mov
int3
pusha
out
in
push
adc
out
sahf
cmp
sbb
icebp
adc
scas
sub
(bad)
(bad)
(bad)
js
pop
jae
push
call
cdq
pop
sub
dec
ror
ins
stos
repnz
int
cmc
pop
push
add
dec
repnz
sar
push
dec
retf
out
inc
cmps
in
popf
into
pop
cmp
scas
clc
mov
sbb
je
ret
arpl
stos
mov
out
ficomp
(bad)
(bad)
(bad)
jmp
adc
(bad)
retf
dec
loop
pop
jnp
jbe
jo
int
jno
movd
scas
add
cmp
std
leave
push
mov
(bad)
(bad)
(bad)
call
adc
jo
inc
pop
inc
xor
sbb
pop
call
ret
mov
sbb
(bad)
(bad)
(bad)
(bad)
std
pop
sub
cmp
adc
or
popf
stos
mov
mov
adc
or
inc
call
sti
push
(bad)
arpl
mov
imul
ins
sub
push
out
fldenv
ins
outs
jp
in
(bad)
(bad)
(bad)
jmp
loopne
dec
mov
popf
aas
sub
js
test
inc
or
dec
(bad)
push
cdq
add
adc
xchg
popa
jbe
jge
or
cmp
loop
stos
push
cmps
mov
dec
pop
inc
adc
aam
push
or
or
bound
retf
out
call
and
(bad)
inc
or
mov
(bad)
shl
jmp
lods
clc
(bad)
(bad)
(bad)
(bad)
fisubr
movs
gs
sbb
jecxz
cli
shr
or
imul
lods
gs
jecxz
in
clc
mov
addr16
lds
xchg
xchg
movs
cwde
mov
clc
int
dec
pop
xchg
xchg
enter
pusha
call
and
adc
cmp
lods
pop
popf
ret
pop
dec
loope
cmp
xchg
jecxz
pop
cmp
pop
retf
jmp
sbb
xor
jecxz
mov
xlat
(bad)
(bad)
dec
cli
mov
mov
jl
retf
arpl
adc
aaa
xchg
out
(bad)
(bad)
(bad)
jg
je
dec
sti
jge
icebp
ret
push
mov
cmp
data16
inc
xor
cmp
(bad)
(bad)
(bad)
jmp
pop
jg
add
inc
pop
pop
fdiv
imul
ret
cmp
int3
shl
(bad)
(bad)
(bad)
fdivr
dec
cmp
push
gs
out
xchg
iret
je
xchg
test
or
jmp
pop
jg
inc
mov
jmp
sub
imul
in
push
stc
ins
push
cs
(bad)
jmp
pop
fadd
mov
aad
daa
dec
mov
cld
push
mov
adc
dec
sbb
sti
sti
out
cli
aas
mov
add
mov
cwde
scas
(bad)
(bad)
(bad)
jmp
and
fisub
fucomi
lahf
push
fcmovnbe
adc
out
cdq
out
addr16
call
jecxz
cld
(bad)
(bad)
stc
lahf
cmp
push
stos
xchg
daa
sub
jmp
(bad)
jmp
jbe
xchg
inc
dec
jb
ret
(bad)
arpl
or
pop
jmp
(bad)
(bad)
jmp
adc
dec
cli
or
jmp
test
xchg
push
mov
mov
push
jl
or
repnz
repz
mov
xchg
(bad)
(bad)
(bad)
(bad)
ds
xor
adc
inc
pusha
stc
cmp
xor
xchg
adc
and
(bad)
(bad)
(bad)
inc
mov
test
sahf
retf
cmps
inc
dec
stos
xlat
or
jge
pusha
xchg
xchg
xchg
popa
push
inc
(bad)
call
loopne
dec
or
dec
sbb
sbb
inc
(bad)
pop
pop
and
(bad)
(bad)
inc
inc
nop
pop
(bad)
lock
fidiv
cli
pop
cli
mov
test
dec
push
(bad)
and
xchg
push
mov
jg
(bad)
call
fs
mov
xchg
mov
adc
aaa
push
add
jmp
aam
retw
and
cmp
in
out
xor
and
xor
jbe
out
or
or
js
lods
xor
das
(bad)
outs
clc
dec
pop
jbe
in
sahf
data16
mov
cmps
ja
xor
mov
test
(bad)
(bad)
(bad)
dec
sbb
sbb
pop
sar
jbe
jle
inc
lock
mov
lods
ror
mov
push
(bad)
push
cld
idiv
rol
arpl
sub
bound
and
xor
cld
(bad)
dec
pop
arpl
(bad)
jg
xor
repnz
movs
inc
cwde
aaa
cmps
xor
enter
mov
lods
push
pop
cmp
cld
repnz
or
clc
and
mov
and
and
xor
or
jge
xchg
sub
(bad)
xor
test
stos
test
(bad)
(bad)
(bad)
(bad)
jge
xor
pop
xor
bound
call
pop
fidivr
mov
stos
sub
test
lock
arpl
mov
add
das
ds
mov
inc
pop
cli
push
push
xchg
inc
lds
jmp
ins
(bad)
jmp
movs
jmp
sub
test
add
(bad)
call
add
imul
mov
cmp
aam
scas
pushf
rol
(bad)
(bad)
(bad)
call
push
or
bound
bound
jmp
bound
jmp
pop
adc
mov
arpl
add
xor
jns
push
lea
(bad)
(bad)
(bad)
call
sar
jp
outs
cmp
gs
add
dec
pop
jns
or
test
dec
xor
int
xchg
test
push
dec
mov
push
adc
(bad)
(bad)
(bad)
jg
mov
mov
daa
out
pop
dec
out
mov
scas
fldenv
push
fimul
(bad)
(bad)
dec
scas
retf
push
call
sub
sti
out
lds
xchg
(bad)
(bad)
(bad)
mov
jnp
out
push
ds
loope
stos
mov
and
or
ret
sti
(bad)
dec
int
out
push
mov
xchg
outs
shl
(bad)
mov
jmp
inc
shl
mov
mov
pop
jne
cdq
js
aas
dec
aaa
pop
(bad)
mov
pushf
dec
test
jge
xchg
cmc
mov
(bad)
mov
mov
push
xlat
or
sbb
mov
sub
retf
ja
pop
(bad)
hlt
ror
inc
sbb
jae
test
(bad)
(bad)
(bad)
(bad)
jle
dec
adc
ror
retf
cmp
repz
in
imul
hlt
jge
pop
(bad)
push
and
fwait
push
cmp
jnp
xor
retf
popa
inc
cdq
jb
stos
sbb
jo
mov
repz
jmp
sbb
push
cmp
cmc
out
mov
(bad)
(bad)
(bad)
call
jmp
push
fcomp
aaa
mov
dec
mov
mov
iret
out
adc
push
fdiv
loop
std
and
rol
ror
stc
ds
ds
ror
call
inc
inc
push
dec
hlt
(bad)
int3
stc
and
call
std
(bad)
out
call
into
lods
out
or
pusha
into
hlt
inc
mov
in
in
std
sar
mov
aas
aaa
cmc
cmp
int
jae
arpl
cmps
clc
(bad)
(bad)
(bad)
(bad)
mov
in
in
in
sti
sub
icebp
add
xchg
adc
xor
ds
pop
pushf
repnz
daa
jo
and
xchg
mov
cli
sub
dec
push
push
jae
xchg
push
in
sub
cmps
(bad)
jmp
cld
or
sub
(bad)
dec
push
mov
outs
push
xor
push
mov
call
sbb
(bad)
(bad)
inc
add
push
je
sbb
gs
jnp
or
(bad)
hlt
dec
sub
into
(bad)
(bad)
(bad)
jg
call
sahf
mov
loop
ss
sar
stos
sub
dec
xlat
mov
xor
popf
xchg
(bad)
jg
mov
pop
(bad)
fadd
xor
(bad)
(bad)
(bad)
dec
xchg
fdivr
add
adc
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
pop
pusha
ucomiss
sar
inc
xor
cmp
test
xchg
cmp
(bad)
mov
mov
sub
into
sub
scas
xchg
aam
mov
stos
xlat
pop
ss
icebp
(bad)
(bad)
call
inc
add
mov
scas
fwait
mov
cmps
push
and
mov
aaa
std
scas
fmul
pop
sbb
xchg
lea
xor
jne
(bad)
(bad)
call
ds
xchg
fwait
xor
fwait
cmp
jp
push
in
mov
scas
push
add
jno
ror
in
sbb
adc
xlat
pusha
(bad)
(bad)
(bad)
jmp
cmp
mov
pop
call
xor
lea
push
(bad)
add
mov
(bad)
(bad)
(bad)
call
sub
jl
push
iret
push
ficomp
rcl
(bad)
and
cmp
jmp
retf
imul
inc
repz
or
stc
jle
jo
pop
sbb
(bad)
call
call
(bad)
mov
out
jecxz
inc
aam
add
lahf
jmp
xchg
cmp
mov
push
sbb
(bad)
mov
in
hlt
xor
psrlw
pcmpgtb
adc
or
(bad)
dec
stos
xchg
test
aad
xlat
push
pop
ins
hlt
sahf
inc
fstp
aas
(bad)
(bad)
call
sub
mov
xchg
scas
(bad)
rol
js
mov
dec
fist
inc
cmc
scas
cld
and
hlt
push
xlat
pop
pop
test
jg
(bad)
(bad)
fnstenv
in
pop
push
arpl
cmc
stos
fistp
bndldx
clc
lods
mov
mov
fisubr
cmp
xchg
test
(bad)
(bad)
(bad)
cmp
push
jae
push
or
adc
dec
xor
dec
les
retf
(bad)
(bad)
(bad)
dec
ins
loope
xor
sbb
mov
and
dec
cmps
xchg
sahf
idiv
mov
push
(bad)
fbstp
dec
(bad)
fwait
in
sub
xlat
aaa
or
cmp
jp
pusha
movs
inc
mov
(bad)
(bad)
call
dec
add
lds
in
retf
addr16
inc
or
retf
nop
cmp
(bad)
(bad)
push
sahf
loope
xor
and
int
xchg
sub
movaps
jmp
cwde
mov
cmp
stos
sbb
jo
pop
mov
mov
mov
jmp
mov
inc
sub
fnstsw
in
stos
adc
mov
nop
or
inc
dec
mov
imul
adc
cmp
jmp
das
jb
cmc
arpl
mov
sti
push
jge
mul
(bad)
(bad)
(bad)
(bad)
mov
movs
lds
add
adc
jmp
cdq
push
iret
xlat
retf
pusha
aas
jno
or
(bad)
call
mov
int
retf
sub
dec
movs
lea
iret
cmp
push
adc
pop
cmps
xchg
in
xchg
inc
(bad)
(bad)
(bad)
dec
cmp
(bad)
out
shl
push
jno
das
jl
adc
and
pop
add
push
mov
push
shr
adc
(bad)
(bad)
(bad)
(bad)
cmp
neg
sbb
add
xor
rcl
fild
sbb
(bad)
(bad)
(bad)
push
ret
or
aas
xchg
xchg
inc
mov
jl
adc
scas
mov
(bad)
call
lea
sub
fs
sahf
mov
xchg
mov
(bad)
(bad)
jmp
mov
mov
mov
fdiv
aad
pop
fst
clc
fwait
int3
xor
pop
sub
repz
(bad)
(bad)
call
sahf
das
(bad)
(bad)
clc
mov
cmp
dec
rol
leave
imul
cld
cli
or
mov
retf
std
(bad)
(bad)
call
(bad)
shl
fwait
jmp
add
dec
div
xor
fcom
and
out
push
clc
add
icebp
loope
or
(bad)
(bad)
mov
mov
xchg
arpl
test
cmp
jae
pop
jnp
addr16
dec
aam
cmp
sub
jmpw
int
gs
inc
nop
movs
stos
call
hlt
call
call
iret
mov
mov
test
or
sub
dec
(bad)
mov
push
out
pop
jno
hlt
data16
push
stos
(bad)
dec
mov
mov
lahf
sub
and
mov
mov
mov
pop
xchg
xchg
out
jecxz
push
add
or
das
retf
test
scas
dec
arpl
pop
(bad)
(bad)
(bad)
call
(bad)
aam
scas
icebp
dec
pop
mov
imul
fst
shr
mov
loopne
cmp
iret
fnstsw
aad
adc
popf
jge
outs
(bad)
(bad)
(bad)
(bad)
mov
mov
stos
scas
test
push
xchg
pop
out
cdq
fidiv
add
les
(bad)
(bad)
(bad)
fsub
xor
lea
cs
adc
mov
or
sub
push
in
(bad)
stc
(bad)
(bad)
(bad)
(bad)
call
sbb
lock
jg
mov
sti
push
js
stos
scas
mov
out
test
int3
cmps
(bad)
(bad)
jmp
jbe
data16
aam
sti
mov
popf
push
xlat
pop
mov
jge
pop
(bad)
(bad)
(bad)
jge
cmp
mov
call
pop
icebp
ds
mov
(bad)
(bad)
(bad)
inc
and
or
cmp
and
jns
stos
sub
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
pop
fisub
add
mov
adc
ja
jp
mov
movs
push
jnp
xchg
int3
push
cmc
sub
(bad)
(bad)
push
lahf
or
adc
lea
rcl
push
mov
(bad)
dec
jmp
cwde
inc
xchg
add
imul
jmp
or
loop
inc
jp
adc
or
jg
(bad)
cmp
in
mov
jae
add
imul
je
(bad)
(bad)
(bad)
(bad)
aas
mov
xor
add
xchg
jl
jmp
dec
cmp
add
(bad)
(bad)
inc
aam
scas
dec
test
pop
fnsave
imul
adc
(bad)
(bad)
(bad)
fist
mov
fnstsw
sar
ins
pop
mov
das
or
(bad)
(bad)
(bad)
jg
cmp
lea
fild
int3
mov
push
dec
sub
imul
pop
xchg
rcr
sub
sahf
jge
out
aad
pop
xchg
(bad)
(bad)
mov
sar
aaa
add
sbb
outs
(bad)
lock
mov
gs
sub
(bad)
jmp
fisub
lods
inc
cmp
pop
popa
(bad)
pop
sub
jo
daa
pop
ja
mov
(bad)
call
call
call
add
lahf
lods
and
push
(bad)
(bad)
(bad)
(bad)
cld
sub
pop
std
mov
xor
mov
cli
shr
fs
jle
mov
je
or
aaa
stos
dec
cmps
(bad)
push
push
pop
ret
jge
dec
stos
mov
adc
(bad)
(bad)
(bad)
call
sub
std
call
in
sub
pop
lock
push
fucomi
(bad)
(bad)
(bad)
call
add
cs
ins
add
xchg
xor
mov
lds
push
mov
(bad)
(bad)
(bad)
call
dec
movs
sub
shl
je
xor
sub
pop
jp
test
adc
and
jmp
addr16
add
mov
nop
xor
dec
retf
cdq
xchg
retf
adc
(bad)
inc
push
in
xchg
xor
push
mov
fstp
ins
data16
pop
add
dec
xchg
and
icebp
jmp
out
ds
stos
dec
(bad)
jl
cmp
lods
push
stos
push
and
adc
jmp
(bad)
(bad)
jmp
aas
sub
test
sbb
ret
sub
inc
xchg
ret
lock
mov
sub
mov
push
jg
and
repnz
pop
sbb
inc
pop
cmps
mov
fcmovne
sbb
add
push
sbb
(bad)
call
pop
xchg
push
sbb
dec
or
int3
sahf
jae
xchg
retf
push
xor
xor
cmps
mov
sbb
jg
inc
pop
jb
mov
(bad)
mov
(bad)
out
outs
dec
mov
or
popf
jb
shl
sub
cwde
in
(bad)
(bad)
dec
mov
sub
dec
mov
sbb
xor
int3
cmp
cmp
and
cmp
(bad)
dec
push
mov
sbb
in
icebp
inc
cld
into
out
pushf
xchg
mov
test
jg
mov
repnz
jne
ret
lahf
push
mul
add
(bad)
(bad)
jg
or
cmps
fcmovnu
mov
lods
pop
stc
cli
addr16
clc
loope
xchg
js
out
mov
enter
(bad)
(bad)
jmp
adc
out
neg
sub
fucomi
and
les
retf
(bad)
(bad)
(bad)
push
pushf
jmp
outs
xor
ret
xor
dec
stos
mov
mov
(bad)
call
std
mov
inc
jb
push
mov
or
int
mov
jp
xchg
cmp
push
inc
cli
ret
jmp
xor
je
out
push
xchg
nop
adc
inc
ret
or
sbb
iret
inc
pop
aaa
cmp
xor
(bad)
(bad)
call
(bad)
ss
bswap
push
and
mov
sbb
jl
sbb
sar
sahf
pop
mov
(bad)
cmp
iret
adc
lock
adc
sub
ret
adc
(bad)
jmp
sbb
inc
mov
mov
jbe
push
test
inc
(bad)
(bad)
push
rcl
popa
and
lods
stos
jnp
mov
sub
mov
mov
in
fmul
hlt
imul
pop
push
ror
je
and
push
dec
(bad)
jg
pop
sbb
bound
push
inc
dec
psubb
push
jo
cmp
out
movs
test
lea
push
gs
or
(bad)
(bad)
jg
xchg
gs
into
inc
sbb
out
shrd
retf
mov
adc
pop
add
(bad)
(bad)
inc
sub
cmc
sub
mov
jmp
jae
xor
add
pop
and
adc
xchg
pop
mov
ficomp
out
popa
rcr
cmp
push
xor
rcr
jmp
mov
(bad)
cli
push
push
kaddw
(bad)
pop
mov
ins
or
(bad)
(bad)
jmp
mov
stc
sub
aas
pop
(bad)
test
dec
xchg
in
mov
cmp
jmp
arpl
xchg
cmps
test
das
xlat
mov
(bad)
int
(bad)
(bad)
dec
xchg
ror
out
pop
aad
xor
mov
cmps
lock
inc
adc
push
jmp
in
(bad)
(bad)
dec
sahf
scas
pop
enter
xor
xor
je
pop
(bad)
sub
mov
addr16
xchg
inc
retf
retf
lods
mov
dec
arpl
or
scas
pop
cdq
xchg
add
mov
mov
xchg
and
lea
cmc
cli
mov
sub
(bad)
(bad)
inc
pop
inc
cmps
pop
adc
push
inc
rol
rol
jmp
jne
dec
and
push
mov
mov
shl
sar
pop
add
mov
mov
arpl
sbb
jae
pop
(bad)
(bad)
jg
fbld
sbb
jnp
add
inc
cmps
inc
xor
ds
imul
(bad)
jecxz
rol
in
out
movs
arpl
(bad)
(bad)
mov
jmp
movs
dec
pop
imul
int
jp
(bad)
(bad)
inc
retf
loop
div
out
jge
mov
jb
in
shr
aad
jecxz
fdiv
in
(bad)
(bad)
(bad)
dec
push
mov
cmp
adc
pop
scas
sub
bound
cwde
push
dec
clc
pop
mov
push
dec
jno
adc
jg
mov
mov
cwde
lahf
call
sbb
(bad)
lahf
ins
dec
loope
ret
(bad)
(bad)
jg
xor
adc
outs
fmul
fdiv
ja
(bad)
imul
fidivr
mov
pusha
fucomp
adc
push
push
(bad)
and
inc
(bad)
dec
lock
loopne
scas
in
loope
(bad)
pop
or
inc
cmp
lock
push
jp
pop
test
rcr
sub
and
push
scas
aam
ret
push
mov
(bad)
(bad)
(bad)
jmp
xchg
sub
xchg
push
xor
mov
sub
je
lods
jno
push
or
lea
or
push
cmc
push
lods
adc
fiadd
sbb
push
(bad)
(bad)
(bad)
(bad)
jl
or
push
pusha
and
mov
sbb
xchg
popa
popf
lea
mov
cld
stos
xchg
es
(bad)
(bad)
dec
mov
pusha
in
rcl
cmp
xchg
xor
or
adc
push
mov
xchg
xchg
loopne
sar
mov
adc
sbb
push
sub
cmp
nop
scas
jp
shl
scas
movs
popf
retf
dec
push
and
jne
(bad)
(bad)
push
gs
fsubr
pop
sub
push
nop
sub
sub
ret
mov
dec
cmp
xchg
dec
test
icebp
hlt
(bad)
add
das
cli
(bad)
sbb
pushf
or
enter
mov
xlat
or
push
lods
adc
add
scas
push
shr
adc
xchg
and
jge
cs
(bad)
push
ins
ror
mov
mov
adc
mov
(bad)
jmp
popf
sti
inc
stos
ficom
adc
push
sub
clc
pushf
pop
loope
aaa
and
je
inc
mov
(bad)
(bad)
call
pmuludq
or
adc
adc
into
dec
sbb
xchg
cmp
ret
popf
dec
test
jge
sub
mul
test
cmc
fisubr
push
push
cli
ja
es
jg
dec
mov
jmp
xor
(bad)
ins
and
pop
daa
dec
out
cmp
mov
xchg
shl
adc
ret
(bad)
pop
pop
and
jecxz
mov
fild
pop
adc
mov
(bad)
push
cmp
jg
lods
lods
jp
push
jbe
jmp
mov
push
add
jo
cwde
std
cmp
cmp
(bad)
popf
stos
fistp
sbb
sub
jmp
(bad)
(bad)
mov
dec
shl
(bad)
test
add
inc
adc
stos
ins
call
jle
fldenv
(bad)
(bad)
(bad)
call
inc
pop
loop
push
pop
adc
mov
retf
push
mov
les
cwde
addr16
push
(bad)
(bad)
(bad)
call
pop
stos
(bad)
nop
cmps
and
xchg
dec
mov
or
repnz
pop
movs
inc
into
in
(bad)
(bad)
(bad)
jmp
fs
sbb
cmps
xor
ins
cmp
das
sub
dec
lahf
arpl
(bad)
(bad)
push
call
aas
push
sub
xchg
push
pushf
xor
inc
or
jb
ret
mov
test
add
or
(bad)
inc
xchg
sbb
js
stos
daa
fld
sbb
ret
jae
retf
adc
(bad)
push
xor
fsub
ins
sti
jno
cdq
push
jmp
mov
lds
jmp
push
gs
mov
sar
add
inc
push
lods
mov
call
sub
xlat
dec
push
dec
sub
jl
or
popa
push
inc
sahf
stc
les
and
mov
(bad)
cmp
push
mov
pop
mov
cmp
das
mov
sar
dec
sar
shl
push
ins
repnz
cmc
jno
mov
(bad)
daa
mov
(bad)
mov
aaa
loop
scas
ds
inc
xor
inc
or
and
inc
clc
xchg
inc
or
or
repz
pop
(bad)
out
sbb
test
(bad)
(bad)
(bad)
out
in
xor
jb
test
xchg
mov
push
sbb
jnp
mov
xchg
push
lods
fcmovb
(bad)
(bad)
(bad)
call
mov
and
inc
aaa
mov
test
pop
imul
imul
xchg
dec
outs
cli
pop
std
cmp
hlt
jmp
addr16
jge
mov
(bad)
(bad)
jmp
add
pushf
xchg
ret
out
adc
sbb
sbb
mov
mov
add
(bad)
call
jnp
mov
nop
outs
call
fs
(bad)
(bad)
call
pushf
mov
dec
and
leave
ins
mov
xchg
and
mov
add
mov
mov
inc
mov
mov
movs
fcomp
mov
add
mov
fbld
(bad)
(bad)
(bad)
jmp
mov
xor
leave
fadd
loope
xchg
pop
fcomp
push
xchg
and
(bad)
jmp
and
out
push
sbb
jp
ss
jno
repnz
pop
repz
fcom
push
jge
adc
(bad)
(bad)
mov
(bad)
sbb
in
fmul
leave
jmp
pop
jnp
ja
mov
add
add
rol
out
mov
sub
scas
or
shr
(bad)
jmp
lods
scas
fs
and
mov
add
test
daa
xor
sub
mov
icebp
adc
jnp
xchg
pop
pop
out
scas
mov
mov
and
cli
(bad)
jmp
(bad)
rcr
jmp
jmp
es
mov
jl
(bad)
(bad)
(bad)
call
or
sbb
xchg
mov
mov
xchg
xor
in
(bad)
mov
jb
retf
(bad)
(bad)
(bad)
call
mov
ds
or
daa
lock
bound
xrelease
test
mov
scas
mov
es
xlat
xchg
pop
clc
mov
and
push
test
(bad)
(bad)
jmp
adc
mov
cmp
mov
mov
push
dec
xchg
inc
in
mov
mov
adc
mov
adc
add
bound
(bad)
xchg
inc
rol
lds
jbe
ror
dec
and
inc
(bad)
sub
(bad)
(bad)
jmp
xor
push
sahf
xor
shl
mov
pop
or
cli
aam
inc
scas
and
out
pop
gs
movs
and
xor
ss
inc
mov
out
adc
(bad)
(bad)
jmp
(bad)
push
rcl
mov
dec
in
cmp
jp
add
xchg
adc
add
(bad)
inc
(bad)
lea
mov
sbb
mov
repnz
bound
mov
push
xchg
and
call
(bad)
fstp
pop
test
jbe
mov
cwde
retf
call
push
in
mov
lock
add
ss
int
imul
enter
cli
in
add
out
xor
sub
and
push
dec
inc
push
std
(bad)
call
call
and
push
add
xor
mov
push
bound
push
rol
fidivr
ins
cld
ja
rcl
shl
push
(bad)
(bad)
(bad)
(bad)
cmp
jg
(bad)
jo
mov
idiv
mov
jp
popa
jb
xchg
mov
pop
(bad)
(bad)
(bad)
call
or
mov
cmp
adc
xchg
aaa
push
push
sub
loope
cli
pop
(bad)
(bad)
(bad)
jmp
repnz
push
mov
je
mov
dec
sbb
xchg
imul
jmp
(bad)
push
bswap
std
mov
pop
mov
lods
(bad)
js
fucomi
rcl
xchg
push
call
rol
mov
mov
test
inc
pop
loop
xchg
nop
inc
or
(bad)
(bad)
(bad)
mov
cs
and
arpl
lahf
inc
cmps
enter
push
push
cdq
xor
aad
(bad)
jg
jle
xchg
rol
dec
neg
mov
cmp
xchg
pop
cmp
and
mov
and
add
push
sbb
movs
(bad)
(bad)
(bad)
call
jns
out
out
xchg
or
xor
fld
retf
fisttp
inc
cdq
inc
lahf
push
jmp
stos
add
ret
xchg
inc
mov
in
and
imul
and
mov
call
(bad)
test
xor
repnz
idiv
fwait
retf
call
mov
call
jle
mov
jnp
int
xchg
retf
in
(bad)
fbld
mov
addr16
(bad)
(bad)
dec
pusha
movs
cmp
lahf
lds
jbe
add
or
gs
sbb
sub
or
(bad)
(bad)
push
test
jo
aas
ds
neg
xchg
push
inc
mov
push
and
and
push
(bad)
(bad)
(bad)
jmp
popa
xor
hlt
adc
shl
retf
or
pop
sbb
ss
outs
cmp
jmp
(bad)
push
sbb
mov
ds
loope
inc
xor
ret
push
shl
pop
and
retf
(bad)
aad
lahf
loopne
jmp
xchg
cld
xchg
ins
fistp
xchg
pushf
inc
pop
inc
in
enter
inc
enter
mov
jmp
or
jle
pop
(bad)
(bad)
(bad)
mov
add
sbb
inc
loop
dec
and
sbb
xadd
(bad)
(bad)
mov
xchg
add
mov
dec
sbb
adc
fcmovbe
push
sub
sub
and
mov
cmp
sar
cld
mov
out
add
nop
push
push
addr16
push
(bad)
call
dec
outs
xchg
xchg
fnstenv
adc
xlat
fisubr
test
stos
(bad)
(bad)
(bad)
dec
bound
outs
push
mov
fld
mov
movs
cmp
add
inc
(bad)
loope
cdq
(bad)
(bad)
(bad)
jmp
cmp
inc
xchg
sub
push
add
out
nop
dec
pop
movs
ret
mov
jo
pop
(bad)
(bad)
(bad)
push
loope
push
mov
xchg
sub
and
(bad)
or
sbb
sbb
aas
dec
mov
(bad)
sbb
out
test
xchg
hlt
mov
or
dec
sbb
sbb
(bad)
ds
pop
loopne
pop
pusha
jle
jl
xor
jp
enter
dec
pushf
repz
dec
jle
mov
jnp
movs
mov
inc
out
(bad)
(bad)
(bad)
call
fldenv
(bad)
fild
jb
jbe
rcr
push
cmp
or
sbb
(bad)
(bad)
(bad)
(bad)
cmp
fucom
hlt
fld
movs
xchg
pop
mov
aam
cmps
jo
fcmovnbe
cmps
mov
mov
push
adc
cmps
jmp
fldenv
cmp
sub
ret
lea
retf
mov
out
aaa
loope
lahf
jnp
loopne
mov
cli
paddusb
je
xchg
cmc
pop
sbb
fdivrp
inc
ins
adc
divps
push
jecxz
hlt
fistp
jmp
inc
inc
stos
(bad)
push
mov
dec
sar
pop
or
and
dec
add
mov
adc
inc
dec
inc
movs
mov
(bad)
(bad)
(bad)
call
jae
nop
mov
pop
lods
push
gs
mov
jmp
dec
sbb
mov
repnz
(bad)
sub
cmps
jp
or
(bad)
(bad)
mov
xlat
sub
mov
adc
xchg
add
sbb
fbld
test
xchg
call
mov
adc
call
int
xchg
push
stos
push
ret
in
ja
js
mov
jmp
xor
(bad)
(bad)
(bad)
call
add
call
shl
dec
mov
sbb
sub
(bad)
(bad)
dec
sbb
xchg
sub
mov
push
inc
and
or
xchg
and
inc
inc
into
push
mov
mov
push
adc
jmp
push
int
in
scas
(bad)
(bad)
push
jns
cli
(bad)
cmp
pop
repnz
std
int
mov
movs
xchg
test
(bad)
out
clc
call
mov
into
sbb
pop
inc
add
ds
mov
(bad)
(bad)
jg
jge
inc
(bad)
fidiv
xor
dec
lock
ret
xchg
add
mov
inc
scas
nop
xchg
push
or
push
nop
lock
js
sbb
(bad)
jmp
pushw
sub
mov
ja
das
inc
add
push
rol
sub
repnz
mov
pop
mov
xor
inc
cld
(bad)
call
adc
pop
push
mov
adc
scas
rcl
(bad)
(bad)
call
xchg
mov
pop
inc
aaa
icebp
out
pop
je
(bad)
mov
dec
adc
fdivr
mov
stos
dec
cld
dec
idiv
inc
mov
jle
addr16
outs
js
jp
xchg
(bad)
(bad)
jg
enter
jge
and
mov
in
xor
lea
pushf
loopne
(bad)
(bad)
(bad)
call
xchg
jle
in
sub
adc
and
shr
push
mov
in
(bad)
ret
(bad)
(bad)
jmp
mov
pop
add
cmp
test
(bad)
mov
(bad)
pop
fdivr
jg
lods
stc
into
push
xchg
jo
dec
xchg
es
cmp
push
(bad)
(bad)
(bad)
call
push
or
cmp
shl
mov
pop
push
mov
mov
test
(bad)
(bad)
inc
or
sbb
call
cmp
enter
pop
das
test
mov
dec
push
outs
cli
lods
cmp
push
out
inc
and
sar
(bad)
dec
icebp
fidivr
mov
cmp
jmp
lods
sbb
xchg
nop
(bad)
jmp
sub
(bad)
(bad)
cmp
out
xor
ficom
fst
mul
jp
push
stos
out
ins
cwde
inc
push
mov
out
call
inc
jl
cs
cmp
mov
(bad)
inc
mov
ins
fsubr
arpl
lods
xchg
and
ja
fcomp
test
arpl
mov
call
adc
fadd
cwde
pop
stc
sbb
lods
jecxz
(bad)
dec
fist
(bad)
push
fwait
xchg
out
out
xchg
adc
(bad)
(bad)
(bad)
mov
test
ins
arpl
cmp
push
aam
out
pop
scas
mov
mov
jmp
cmps
(bad)
(bad)
fld
cld
cmc
xchg
xchg
ds
mov
and
call
(bad)
inc
mov
sub
inc
fbstp
jae
cmc
push
cmp
dec
adc
add
inc
push
lds
(bad)
(bad)
inc
fisubr
push
inc
rol
add
in
or
sub
xchg
sub
aam
inc
and
push
and
fs
(bad)
(bad)
(bad)
(bad)
cmp
aad
push
jne
xlat
mov
jle
imul
iret
xchg
stos
out
outs
daa
cmc
je
(bad)
jmp
cmc
scas
(bad)
inc
not
retf
out
js
dec
pop
mov
(bad)
jmp
(bad)
loopne
ds
(bad)
call
imul
push
dec
add
mov
sbb
jae
(bad)
(bad)
(bad)
inc
xchg
rcr
mov
sub
cmp
out
adc
(bad)
(bad)
(bad)
jmp
js
and
cmp
pop
cmps
lds
jp
cmp
inc
loop
(bad)
(bad)
(bad)
(bad)
jbe
inc
dec
(bad)
push
add
mov
pop
mov
(bad)
jp
(bad)
jg
(bad)
pop
xchg
mov
xor
pop
pop
mov
xor
jg
ret
jmp
pop
xor
jne
ret
or
cmp
and
push
test
pusha
lock
cmp
add
icebp
call
shl
jmp
sbb
cmp
in
jl
(bad)
and
push
sbb
sub
(bad)
(bad)
(bad)
jg
push
test
retf
out
and
sub
jb
je
sub
jae
hlt
mov
subps
(bad)
(bad)
call
aas
(bad)
push
in
mov
outs
popa
in
scas
xor
rol
fs
jno
and
ret
(bad)
(bad)
inc
retf
sahf
rol
sbb
fstp
scas
cmp
pop
mov
or
mov
adc
push
or
adc
mov
dec
not
das
shl
je
mov
mov
xchg
lock
(bad)
dec
fcom
div
jge
pop
or
repz
mov
(bad)
(bad)
(bad)
inc
add
int3
bound
jmp
test
aaa
in
pop
out
jg
(bad)
jg
loope
nop
jl
mov
mov
in
mov
cmp
add
(bad)
(bad)
push
outs
pop
sbb
outs
cdq
push
sub
sbb
cmc
and
jge
lods
and
enter
sub
clc
sbb
iret
outs
sub
or
out
cmp
dec
jge
(bad)
cmp
ficomp
adc
test
ins
and
pop
xchg
(bad)
sar
push
mov
scas
imul
pusha
mov
jb
fld
sub
movs
push
or
mov
inc
cs
fimul
mov
dec
pop
and
or
dec
mov
or
ret
addr16
jmp
clc
dec
and
jle
call
xchg
cmp
adc
and
mov
(bad)
(bad)
(bad)
call
cwde
mov
mov
jo
jecxz
sbb
test
mov
(bad)
(bad)
(bad)
jmp
fs
or
sbb
push
gs
mov
add
in
or
pop
test
(bad)
(bad)
call
adc
jbe
leave
xchg
cld
inc
leave
mov
cli
(bad)
pop
sub
test
mov
lods
pop
(bad)
(bad)
(bad)
(bad)
fidiv
movs
hlt
call
scas
jnp
out
ja
idiv
jns
sub
les
pop
call
mov
out
jg
dec
outs
sbb
ror
cmp
in
fidivr
and
xlat
(bad)
les
fwait
push
clc
jmp
mov
inc
dec
stos
xchg
addr16
push
add
retf
add
pop
dec
mov
add
mov
(bad)
(bad)
aas
les
repnz
scas
mov
or
mov
mov
jb
mov
(bad)
(bad)
(bad)
jmp
fbstp
xchg
mov
jmp
loopne
fdiv
push
js
adc
in
dec
pop
inc
aam
call
cmps
jmp
pusha
stc
(bad)
fsubr
ss
push
push
out
dec
(bad)
das
pop
pop
in
mov
jo
cwde
lahf
test
push
dec
cmp
test
push
lock
ds
fdiv
(bad)
jmp
push
or
mov
icebp
or
dec
shr
out
jge
cmp
or
xchg
pop
aam
popa
sub
(bad)
(bad)
(bad)
inc
jb
sub
ret
rcl
dec
inc
imul
sbb
sub
(bad)
(bad)
(bad)
cmp
xchg
sbb
xor
xlat
fisttp
arpl
test
test
int3
dec
inc
add
xchg
adc
or
adc
shl
aad
enter
lock
push
inc
push
je
cmp
jge
push
mov
pusha
ret
xor
(bad)
(bad)
jmp
add
pop
mov
(bad)
pusha
jge
and
movs
repz
lsl
(bad)
dec
pop
mov
pop
cmp
adc
int
(bad)
(bad)
(bad)
inc
mov
cs
push
pop
iret
mov
pop
fdiv
imul
mov
loop
rol
pushf
mov
mov
xor
xchg
add
loop
out
mov
inc
(bad)
(bad)
call
iret
mov
pop
ror
or
jg
pop
scas
stos
xor
or
(bad)
mov
xchg
sar
mov
outs
jbe
push
xchg
xor
mov
jno
test
xchg
lods
push
inc
add
ds
mov
loopne
jmp
and
aas
cmp
and
pop
push
mov
ret
sahf
mov
popf
xor
js
retf
sti
xor
js
call
lock
(bad)
cmp
xor
push
(bad)
mov
fisttp
js
lock
scas
jmp
lea
sbb
sbb
(bad)
(bad)
(bad)
dec
out
ins
pushf
pusha
jmp
iret
clc
sub
push
jl
mov
pop
jge
nop
shl
(bad)
mov
div
jmp
inc
add
clc
dec
pop
data16
jg
call
retf
call
mov
repz
(bad)
call
rcr
mov
data16
ja
or
enter
mov
(bad)
(bad)
push
call
dec
inc
int3
mov
add
gs
push
(bad)
gs
sub
xchg
dec
sub
xchg
sub
mov
aam
(bad)
call
(bad)
sub
nop
fidivr
repz
gs
mov
(bad)
call
push
inc
adc
dec
lahf
addr16
dec
(bad)
push
sub
add
mov
add
adc
icebp
(bad)
stc
push
les
hlt
hlt
fcom
pushf
adc
add
stc
scas
push
out
jmp
call
inc
pop
xor
es
jecxz
cmps
inc
iretw
ror
(bad)
mov
pop
fdivrp
scas
ja
jae
popf
aad
cmp
shl
nop
xchg
(bad)
(bad)
(bad)
push
jae
and
jb
cmp
or
cwde
adc
sub
movs
inc
sub
pop
and
inc
mov
push
pop
cmp
bound
jns
dec
test
dec
fisttp
stos
loop
enter
ret
mov
loop
fcomp
mov
cwde
mov
int
call
loop
(bad)
(bad)
(bad)
jnp
sbb
out
(bad)
sbb
xchg
aas
adc
into
jecxz
xlat
inc
(bad)
out
aaa
add
pop
or
and
(bad)
jmp
div
adc
cmc
cmps
sar
and
and
xor
mov
sub
aad
addr16
mov
dec
and
(bad)
(bad)
jg
(bad)
mov
sti
ss
push
aas
mov
pop
(bad)
mov
ficomp
(bad)
(bad)
inc
xchg
mov
push
cmps
out
push
sbb
ret
xchg
fild
or
sbb
(bad)
(bad)
call
gs
stc
call
pop
push
cmp
gs
outs
js
push
fdivp
stos
sbb
out
(bad)
(bad)
push
popa
stos
test
sar
mov
fcom
jmp
lods
(bad)
(bad)
(bad)
push
xchg
fsubr
sub
in
not
inc
imul
(bad)
(bad)
(bad)
dec
pop
inc
cmp
mov
add
jno
shl
test
(bad)
(bad)
(bad)
inc
std
mov
stc
rcr
xchg
jns
pushf
inc
scas
inc
das
scas
into
mov
xor
dec
inc
lods
popa
je
es
mov
mov
and
dec
mov
sbb
(bad)
(bad)
inc
popa
in
in
test
push
xchg
scas
das
push
sub
dec
push
cmp
idiv
jae
mov
ja
pop
sub
movs
popf
mov
(bad)
xlat
jge
outs
mov
cdq
movs
call
pop
mov
mov
fcomp
xchg
mov
(bad)
push
std
pop
xor
inc
cmp
inc
push
mov
jno
test
dec
out
sar
(bad)
call
dec
stc
mov
xchg
inc
rcr
retf
into
(bad)
mov
shr
(bad)
mov
sti
pusha
stos
mov
xor
addr16
daa
(bad)
call
sar
mov
push
cmps
in
ss
je
xor
retf
into
fiadd
test
(bad)
inc
shl
icebp
mov
iret
ja
pop
xor
xchg
(bad)
mov
(bad)
dec
add
call
fxch
in
pop
fcom
fild
(bad)
dec
lock
leave
and
hlt
cmp
lock
clc
(bad)
(bad)
(bad)
jmp
add
dec
sbb
add
xchg
sbb
jb
xor
push
push
or
jmp
inc
cdq
stos
jnp
cmp
add
(bad)
rcl
dec
f2xm1
xor
sub
(bad)
jmp
cdq
sbb
mov
bound
mov
into
call
addr16
pop
or
stc
add
and
push
push
push
push
(bad)
(bad)
inc
dec
mov
imul
add
jns
lods
push
arpl
(bad)
(bad)
(bad)
fmul
out
inc
lds
ins
clc
or
outs
pop
fstp
or
(bad)
jmp
(bad)
mov
push
jl
mov
mov
add
stos
mov
adc
(bad)
(bad)
dec
cld
mov
or
jno
xchg
out
mov
in
lods
lods
popf
shl
out
(bad)
(bad)
(bad)
inc
push
das
lods
dec
jne
idiv
xor
mov
nop
sbb
jmp
and
sub
jmp
mov
retf
aaa
std
call
test
mov
pushf
(bad)
leave
lods
inc
movs
outs
mov
jg
or
outs
shr
adc
shr
cmp
hlt
(bad)
call
(bad)
scas
bound
dec
imul
cmp
dec
std
lahf
mov
mov
(bad)
(bad)
fisttp
fcomip
push
jl
dec
daa
jno
loop
stos
adc
sub
push
popf
loop
iret
repz
and
(bad)
(bad)
inc
(bad)
jge
stos
add
or
ret
or
cmp
and
jnp
call
(bad)
jmp
imul
outs
cld
stc
pop
ret
std
xor
pop
jecxz
test
mov
pop
das
repnz
aad
xor
ins
std
fdiv
or
lock
(bad)
(bad)
std
pop
inc
sub
call
cmp
mov
rcr
jne
jmp
xchg
and
aaa
addr16
cli
mov
sbb
data16
(bad)
jmp
fs
repz
inc
daa
inc
inc
jo
sub
out
sbb
sbb
(bad)
(bad)
cmp
jb
(bad)
fidiv
dec
jo
movs
cmps
mov
dec
jmp
out
sbb
in
lea
mov
push
xlat
sub
inc
xchg
inc
jnp
repnz
push
jmp
sbb
xor
cs
es
(bad)
out
stc
sbb
jp
ror
clc
(bad)
jmp
inc
pop
adc
(bad)
push
mov
sub
loopne
xlat
cld
push
sar
jne
stos
xlat
ds
out
cli
(bad)
push
pop
data16
test
mov
dec
mov
fmul
add
push
dec
pushf
(bad)
(bad)
jmp
xchg
les
loope
cmc
push
jo
lahf
lock
loop
out
xor
pop
mov
aaa
(bad)
(bad)
(bad)
call
push
inc
idiv
fwait
sahf
mov
(bad)
sub
aaa
lock
inc
xchg
jecxz
add
aad
inc
in
inc
data16
jmp
inc
nop
jno
(bad)
mov
push
outs
sub
retf
loopne
(bad)
push
sbb
xor
cli
scas
mov
sub
loope
mov
sahf
iret
sbb
rcl
out
aaa
mov
jle
dec
sub
jbe
sub
inc
ficomp
in
(bad)
daa
shr
add
cmp
(bad)
test
cmc
ss
xor
cli
adc
fsub
adc
inc
pop
std
mov
scas
es
(bad)
jmp
add
xchg
imul
aam
cmc
mov
iret
add
or
ds
icebp
push
sbb
cs
ret
mov
inc
mov
xchg
mov
out
mov
sub
push
mov
xchg
scas
test
sbb
icebp
iret
call
push
cmp
mov
aas
pop
(bad)
loopne
lds
mov
loopne
jno
(bad)
(bad)
(bad)
inc
fisubr
gs
xor
xchg
jge
out
sahf
jnp
xor
stos
in
popf
rol
mov
pop
(bad)
(bad)
dec
neg
xor
and
gs
cdq
xchg
and
push
je
(bad)
(bad)
(bad)
jmp
xchg
mov
out
mov
gs
sar
in
inc
xchg
mov
cld
(bad)
dec
ss
cmc
hlt
(bad)
dec
mov
dec
inc
adc
inc
inc
fmul
mov
and
out
call
std
sti
aaa
cmp
sbb
push
(bad)
push
mov
add
cs
jmp
fdivr
sub
out
mov
mov
cdq
ins
call
inc
xchg
xchg
call
test
cmp
jge
dec
jbe
jmp
inc
xor
(bad)
(bad)
(bad)
call
test
mov
test
cmc
cmove
sub
cdq
or
(bad)
fisttp
cmp
in
icebp
jg
lds
pop
mov
call
(bad)
inc
jnp
jge
icebp
adc
xchg
add
test
mov
cmp
call
cld
loopne
imul
call
xchg
push
inc
(bad)
jmp
cmp
add
sbb
or
jmp
stos
mov
xchg
add
jns
sar
jge
push
jecxz
pop
mov
push
push
xor
pop
mov
mov
outs
and
jl
push
lods
jmp
inc
std
push
fs
les
or
addr16
lods
push
jb
in
sub
(bad)
(bad)
call
push
(bad)
or
fs
int3
adc
mov
in
inc
(bad)
cmp
call
fbstp
scas
pop
mov
mov
stos
imul
pushf
ins
(bad)
(bad)
(bad)
call
das
shl
and
add
aad
stos
repnz
mov
or
(bad)
inc
cmp
mov
pop
xchg
fsub
(bad)
cwde
xchg
or
cmp
mov
cmps
mov
hlt
adc
rep
xor
xchg
shl
adc
pop
retf
cmp
fstp
mov
pop
pop
dec
ins
imul
(bad)
push
and
or
rcl
mov
inc
inc
inc
jmp
lods
dec
cmp
(bad)
scas
xchg
into
mov
stc
jge
lea
lods
imul
cld
(bad)
call
jne
call
mov
inc
sub
int3
(bad)
(bad)
jg
cli
mov
test
aad
sub
scas
inc
or
xchg
jg
movs
ror
ds
scas
jmp
call
push
int3
cmp
(bad)
dec
jl
out
call
and
add
iret
pop
rcl
fdivr
(bad)
jg
mov
jg
inc
inc
in
sub
ja
shr
jbe
into
(bad)
(bad)
(bad)
inc
sbb
cs
sbb
add
push
imul
jp
shl
add
lods
push
mov
lahf
sar
(bad)
jmp
mov
out
outs
jmp
adc
jmp
dec
jbe
(bad)
(bad)
(bad)
jg
lock
aam
xchg
pop
popf
xor
inc
jl
add
pop
sub
mov
call
xchg
pop
add
pop
inc
push
rcl
inc
(bad)
cmp
aad
cmps
sub
cli
and
inc
and
or
cmp
arpl
fcmovbe
sbb
(bad)
(bad)
(bad)
fiadd
cmc
sbb
mov
addr16
out
xchg
sub
out
jne
jecxz
adc
or
dec
xor
adc
daa
mov
push
loope
lea
call
enter
xchg
add
pop
int3
int3
das
jecxz
mov
(bad)
mov
pop
ret
inc
lea
inc
mov
inc
mov
movs
arpl
out
xor
(bad)
(bad)
jmp
dec
pusha
mov
push
push
leave
push
adc
adc
jo
outs
test
push
(bad)
(bad)
(bad)
push
push
imul
jge
cmps
shl
rcl
add
jne
mov
inc
or
cmps
and
out
xor
xchg
fxtract
dec
out
repnz
arpl
and
in
mov
(bad)
jmp
cmps
mov
ficomp
cmc
inc
outs
ret
push
out
xchg
pop
lahf
shl
es
cmp
jl
sar
sbb
fistp
jbe
xchg
jne
lods
out
(bad)
(bad)
jmp
push
pop
or
adc
inc
dec
jp
int3
idiv
(bad)
mov
push
js
fidivr
cmp
mov
jecxz
test
mov
je
enter
daa
ds
cmp
mov
(bad)
pop
(bad)
(bad)
(bad)
call
ins
shl
pusha
test
xchg
add
mov
test
lahf
clc
std
outs
loope
lahf
jl
cs
(bad)
(bad)
call
int3
cs
push
mov
mov
xchg
sbb
pop
lods
mov
push
and
inc
or
sbb
ds
xor
push
retf
or
fimul
mov
(bad)
mov
loopne
xchg
inc
es
(bad)
jg
xchg
aad
add
sbb
pop
lods
rcl
bound
leave
push
pop
mov
ins
(bad)
(bad)
(bad)
call
sbb
xchg
(bad)
cmp
shl
jb
mov
jne
sub
(bad)
(bad)
call
(bad)
xchg
jmp
and
out
cmp
and
dec
out
and
inc
adc
pop
xchg
xchg
jne
out
push
cmps
cmp
add
(bad)
call
sbb
inc
adc
in
(bad)
mov
mov
push
gs
xor
xchg
xchg
int3
fnstenv
jl
cmp
cmp
push
dec
or
lds
shr
vandnps
sub
das
lods
test
into
scas
lods
xor
call
jno
adc
ins
xchg
jns
cmp
fcmovnbe
(bad)
pushfw
inc
xchg
div
jmp
jge
mov
jmp
and
xchg
or
pop
dec
lock
movs
movs
jecxz
ret
adc
dec
xchg
jecxz
outs
xor
sbb
nop
dec
or
inc
clc
(bad)
mov
ss
pop
or
mov
movs
mov
cwde
popf
sbb
push
cmp
int
inc
xchg
fistp
xchg
mov
sub
call
shr
push
xchg
out
mov
(bad)
inc
mov
(bad)
enter
ins
xor
pusha
pop
sbb
cmp
test
mov
mov
call
aas
xchg
jnp
inc
sahf
aad
(bad)
sbb
icebp
dec
frstor
adc
jmp
add
fcomip
jg
push
jno
enter
enter
pop
mov
imul
sti
(bad)
(bad)
(bad)
(bad)
jge
push
inc
mov
cmp
push
jae
sbb
clc
xchg
call
shl
push
jp
inc
pop
(bad)
(bad)
(bad)
call
dec
jmp
or
or
mov
out
xchg
jae
arpl
or
call
fistp
imul
(bad)
xor
jp
cmp
repz
add
(bad)
(bad)
(bad)
(bad)
mov
in
test
cdq
jecxz
call
pop
ror
pop
pop
sub
aad
hlt
(bad)
(bad)
(bad)
call
das
mov
xchg
bound
js
aaa
stos
add
mov
xor
push
fs
sar
(bad)
dec
sub
das
pop
inc
push
in
test
arpl
add
arpl
adc
(bad)
dec
fist
fs
int3
scas
push
push
ins
mov
or
inc
adc
(bad)
(bad)
(bad)
jg
xchg
(bad)
sbb
int3
mov
hlt
mov
xlat
jae
xchg
jle
stos
push
mov
data16
mov
(bad)
(bad)
inc
shr
and
and
or
adc
sub
xor
jae
mov
ficomp
add
inc
leave
sub
jecxz
mov
(bad)
(bad)
jg
cmps
pop
out
mov
fstp
div
pop
cwde
aas
mov
out
(bad)
(bad)
fst
gs
mov
(bad)
pop
(bad)
mov
shr
add
cmp
dec
imul
aas
mov
jle
je
or
push
ins
popf
sti
movs
imul
in
cdq
stos
jnp
(bad)
(bad)
(bad)
(bad)
out
fwait
lahf
repz
(bad)
jmp
push
pop
int
jo
push
xchg
dec
sbb
xor
mov
add
sbb
(bad)
pop
sbb
movs
ffreep
mov
int3
jecxz
dec
sub
lock
mov
lock
xor
pop
pop
sub
push
popf
xchg
cmp
lock
sub
xchg
in
pop
js
xchg
dec
sbb
out
sub
nop
int
jp
imul
das
cs
mov
inc
xchg
add
js
jmp
fs
mov
enter
cs
bound
mov
cmp
sbb
ins
loope
scas
jle
(bad)
jg
jmp
ret
cwde
mov
push
jbe
mov
push
in
sub
ins
fisubr
(bad)
sub
popf
jle
fst
push
xlat
pop
pop
(bad)
mov
ret
mov
push
add
push
cld
cdq
(bad)
inc
pop
xor
(bad)
pop
ja
mov
or
inc
mov
(bad)
(bad)
jmp
or
dec
pushf
mov
std
or
xchg
retf
xchg
popa
into
cmp
inc
icebp
dec
cs
mov
lock
(bad)
inc
fist
mov
or
and
xor
mov
in
(bad)
(bad)
call
enter
loope
xchg
mov
xchg
add
add
push
lea
sub
cs
(bad)
push
inc
mov
leave
xlat
dec
xlat
popf
mov
pop
es
(bad)
(bad)
call
iret
cld
mov
lahf
cmp
mov
jo
mov
nop
push
call
cld
push
out
aaa
xor
add
pop
dec
push
mov
or
(bad)
(bad)
inc
adc
aam
mov
ds
(bad)
aad
(bad)
push
in
xor
and
jl
mov
stos
stc
fcomip
out
(bad)
(bad)
(bad)
(bad)
cli
sbb
call
pop
jb
adc
or
mov
lds
loope
jge
fcom
or
(bad)
(bad)
inc
cmp
jmp
push
mov
ss
stos
aaa
inc
call
sar
xchg
out
(bad)
(bad)
(bad)
out
int3
mov
das
inc
sbb
ror
aam
or
pop
nop
sar
cs
ds
stos
(bad)
inc
inc
push
ss
nop
or
cmp
mov
xor
cdq
mov
(bad)
(bad)
cmp
xchg
ficom
cwde
test
cmps
mov
mov
ins
pop
xchg
sbb
pusha
scas
mov
mov
fild
add
xchg
(bad)
(bad)
(bad)
mov
mov
pop
cmc
jle
mov
mov
pop
dec
imul
push
adc
call
and
ret
or
into
dec
xchg
inc
or
cmps
(bad)
push
push
mov
(bad)
(bad)
mov
test
mov
sub
pushf
xor
dec
sbb
adc
cs
(bad)
(bad)
(bad)
(bad)
in
adc
retf
mov
push
into
mov
and
inc
gs
pop
adc
(bad)
(bad)
jmp
dec
iret
push
ror
cmp
ret
lea
int
cs
sub
xor
push
outs
in
dec
not
int3
dec
scas
inc
(bad)
ficom
clc
(bad)
fisttp
push
es
cmc
dec
repz
mov
ins
hlt
pushf
(bad)
fbstp
mov
hlt
nop
mov
pop
(bad)
rol
add
push
out
xchg
add
cli
or
inc
cmp
push
jmp
lea
pop
cmps
mov
and
dec
(bad)
or
cmp
mov
mov
loope
mov
cmp
pop
and
(bad)
fdivr
lahf
popf
adc
nop
sbb
mov
call
xchg
jge
icebp
gs
lock
icebp
ins
and
mov
test
or
xchg
loop
mov
out
sti
sub
mov
(bad)
(bad)
(bad)
(bad)
inc
push
pop
retf
mov
in
xchg
push
stos
cmp
cmp
xlat
mov
or
mov
and
fadd
(bad)
jmp
movs
xchg
pop
push
push
sub
mov
inc
mov
xor
sar
js
xchg
icebp
clc
jecxz
dec
sub
popf
(bad)
and
sub
nop
push
sub
cmp
jmp
fistp
xchg
ds
add
repnz
lea
add
int
sbb
inc
je
dec
mov
cmps
cld
mov
fdiv
out
xor
je
mov
jg
test
sub
std
add
sub
test
jmp
test
mov
jecxz
cmp
or
adc
cld
(bad)
(bad)
fadd
fs
daa
mov
leave
rcl
xor
xchg
mov
sub
mov
addr16
out
pop
lea
(bad)
(bad)
push
popa
sahf
mov
ror
mov
call
pop
inc
push
repz
xor
imul
(bad)
(bad)
(bad)
mov
loope
mov
iret
inc
scas
mov
std
mov
sbb
(bad)
(bad)
(bad)
jg
push
cmp
or
fstp
addr16
cmp
add
jae
fdiv
mov
hlt
add
imul
js
(bad)
mov
scas
and
mov
xor
and
xor
(bad)
mov
(bad)
(bad)
(bad)
jmp
fimul
clc
leave
mov
repz
or
xchg
cdq
xor
(bad)
pop
push
sub
(bad)
(bad)
(bad)
call
mov
cmc
cli
into
call
cdq
loopne
test
test
xchg
pop
or
(bad)
(bad)
(bad)
cli
inc
or
ja
sbb
add
mov
imul
inc
rcl
(bad)
call
cmp
xchg
pop
arpl
(bad)
mov
sti
aas
jno
lock
xchg
cmp
sub
jmp
ja
(bad)
(bad)
call
lock
adc
jmp
arpl
mov
cmps
fcmovnbe
mov
add
xlat
cs
(bad)
(bad)
inc
out
cmc
repz
lea
mov
xchg
add
stc
(bad)
xchg
push
data16
sahf
les
(bad)
jmp
cmp
dec
stos
lea
pop
dec
dec
imul
jmp
push
pop
cmps
cmps
sbb
outs
and
inc
aam
jecxz
stc
adc
or
and
gs
mov
test
stos
adc
ja
push
cmp
in
jmp
xor
call
(bad)
sbb
pop
mov
xor
fadd
fdiv
in
dec
icebp
(bad)
(bad)
dec
popa
(bad)
scas
cld
mov
inc
scas
aam
mov
mov
pushf
pop
xor
(bad)
(bad)
ffreep
(bad)
out
ret
mov
and
(bad)
add
test
cdq
mov
repnz
mov
test
dec
mov
sbb
ins
dec
push
loopne
push
push
or
aaa
push
mov
xor
(bad)
dec
cmp
xchg
call
rol
ins
pop
pushf
jp
das
mov
add
add
in
inc
int
mov
sahf
pop
add
inc
fadd
dec
fidivr
mov
arpl
fwait
mov
lods
add
loopne
ret
adc
dec
xor
mov
or
das
xchg
aaa
ds
imul
jmp
pusha
fistp
dec
add
push
cmp
mov
div
mov
mov
(bad)
(bad)
out
sub
push
push
xchg
xor
sub
icebp
mov
mul
xlat
pop
jg
ds
aaa
ffreep
mov
mov
sar
inc
xchg
ret
test
cmp
fnstenv
xchg
jl
fdivp
sar
push
retf
mov
imul
xor
mov
add
xor
jo
adc
mov
dec
mov
cmp
pushf
sahf
shr
sbb
call
jg
loop
stos
inc
and
je
pop
(bad)
shl
sti
int
(bad)
int
(bad)
jg
pop
xchg
xchg
inc
not
pop
inc
mov
fs
into
sub
push
push
(bad)
(bad)
(bad)
call
and
or
dec
imul
pop
pop
mov
in
mov
pop
icebp
xor
scas
(bad)
(bad)
(bad)
push
xchg
(bad)
mov
xchg
and
out
out
aam
xor
push
mov
xchg
or
inc
je
sti
mov
scas
dec
scas
dec
clc
out
clc
(bad)
jg
dec
enter
inc
loopne
stos
inc
sbb
ins
inc
sub
lock
mov
mov
xor
call
mov
das
cwde
pop
push
scas
das
stos
loope
fldenv
(bad)
mov
xchg
jns
fdiv
adc
sbb
add
pop
or
clc
cwde
dec
mov
sbb
(bad)
jmp
sbb
cdq
movs
shl
popf
mov
xor
sbb
(bad)
(bad)
dec
dec
(bad)
arpl
xor
jae
xchg
jno
mov
add
(bad)
(bad)
jnp
xor
pop
pop
pop
xlat
sub
sbb
add
ficomp
in
sbb
(bad)
(bad)
mov
cmps
mov
or
mov
xchg
repz
jmp
inc
(bad)
mov
out
mov
in
cmps
mov
xor
jmp
ins
hlt
lods
mov
popa
ins
sub
inc
movs
mov
(bad)
push
(bad)
jnp
iret
stos
adc
dec
sbb
cmc
(bad)
fisub
mov
xchg
(bad)
mov
fxam
cmp
(bad)
test
div
das
test
mov
(bad)
(bad)
call
cld
aad
mov
jl
mov
ins
js
out
and
sub
sahf
(bad)
(bad)
(bad)
dec
push
cmp
pop
lahf
jmp
int
xchg
xchg
push
mov
dec
dec
lods
cld
cmp
lock
(bad)
call
(bad)
ss
adc
call
mov
mov
mov
dec
dec
cmps
out
vcvtsi2sd
and
cmp
(bad)
(bad)
call
fld
das
mov
jmp
mul
mov
es
nop
xchg
and
mov
sbb
loop
loopne
sub
cmps
enter
add
(bad)
(bad)
jmp
sti
push
xrelease
popf
jl
or
pop
(bad)
call
aaa
push
arpl
call
loopne
adc
(bad)
retf
into
imul
or
ja
mov
sbb
push
add
ror
and
stc
loopne
cmp
jg
jge
lock
retf
pop
inc
mov
jo
(bad)
(bad)
jmp
and
loope
inc
test
add
jp
mov
iret
xchg
inc
push
jbe
sub
loopne
cld
pop
pop
cmp
jmp
das
clc
mov
mov
push
mov
or
stos
(bad)
(bad)
(bad)
inc
push
cs
inc
xchg
pop
pop
retf
cmps
xlat
or
adc
call
stc
xchg
(bad)
push
dec
xchg
mov
sahf
inc
adc
jo
xor
push
adc
repnz
cmp
add
(bad)
mov
enter
mov
aad
and
fbld
jmp
mov
mov
cld
push
sbb
cld
pop
or
clc
sti
iret
dec
jmp
les
sub
cmp
sbb
xchg
push
and
fdiv
mov
xchg
test
or
ret
push
jmp
test
(bad)
inc
(bad)
stc
mov
cmp
ret
adc
mov
rcr
xchg
fisub
sbb
outs
mov
aad
sub
repz
test
(bad)
fiadd
test
(bad)
push
mov
or
push
mov
or
aas
(bad)
(bad)
pop
inc
ds
addr16
push
push
mov
mov
mov
fstp
pop
rcl
add
test
cmp
cld
(bad)
push
shl
pusha
outs
imul
int3
fcmovbe
xor
xchg
inc
xor
lods
jmp
popf
xor
jo
inc
push
xchg
cmp
inc
xor
adc
(bad)
(bad)
in
cmp
xchg
xor
ret
jmp
add
dec
ja
(bad)
(bad)
(bad)
inc
xor
cwde
stos
inc
jg
icebp
mov
xor
or
aaa
xor
aaa
cmp
in
mov
imul
pop
mov
addr16
icebp
rcl
(bad)
dec
sub
jo
inc
cmc
dec
or
push
aam
ds
sub
movs
sahf
shl
imul
aad
xor
sbb
lahf
add
dec
pop
xchg
cmp
lahf
mov
sahf
ins
loop
jg
test
adc
and
(bad)
fstp
int3
mov
fist
mov
jl
jge
ds
lock
or
inc
and
outs
xor
cli
outs
ret
cmp
gs
sbb
call
dec
jmp
fs
movs
dec
shr
int
sub
inc
sti
cmp
mov
pop
outs
rol
jae
sbb
pop
rcr
(bad)
(bad)
(bad)
push
inc
push
jge
inc
push
mov
and
xor
ja
push
mov
in
pop
(bad)
(bad)
(bad)
jmp
cmp
lock
in
fsubr
fnsave
dec
xchg
ins
dec
clc
cmp
push
loopne
(bad)
(bad)
(bad)
inc
cmp
ret
or
cld
lock
ds
adc
pop
jle
call
outs
and
daa
loop
addr16
xchg
xor
(bad)
(bad)
(bad)
call
cld
in
dec
sbb
sub
aas
pop
je
xchg
int
aam
sbb
mov
dec
clc
push
ins
jo
imul
(bad)
jno
ins
es
sahf
push
sub
or
aas
cmp
icebp
fstp
push
cmp
shr
pop
dec
jg
(bad)
dec
cmp
ds
(bad)
or
xchg
cmp
adc
mov
jne
(bad)
(bad)
(bad)
(bad)
cmp
sbb
loop
mov
je
push
or
repz
dec
test
call
(bad)
(bad)
cli
mov
push
and
inc
dec
stos
fidivr
and
fisttp
jae
int
and
(bad)
(bad)
call
mov
cmp
jmp
cwde
fidiv
add
xchg
inc
cmp
inc
test
or
add
push
pop
sub
jmp
inc
or
mov
or
sbb
loop
(bad)
(bad)
inc
retf
addr16
(bad)
sbb
mov
and
jl
xchg
jmp
push
lea
jle
inc
jmp
sub
dec
shl
cld
mov
xlat
cmps
fistp
rol
sub
add
cmp
pop
sahf
jp
sahf
jle
sbb
push
pop
dec
je
ins
mov
data16
fisub
(bad)
imul
inc
adc
xor
and
cmp
data16
aaa
jmp
enter
(bad)
jg
(bad)
movs
dec
dec
xchg
aas
push
sbb
sub
dec
ret
mov
les
sar
cmps
mov
es
enter
(bad)
(bad)
fild
or
lea
inc
sub
lods
loope
in
and
fild
(bad)
mov
loope
xchg
cmps
cli
mov
sbb
(bad)
sbb
cmp
iret
jnp
mov
cli
fwait
scas
push
adc
ret
sbb
icebp
jecxz
push
std
das
in
pop
jno
dec
ret
(bad)
cmp
jmp
retf
lods
ror
nop
jle
or
inc
mov
pusha
push
or
cmp
sbb
cli
popa
ds
(bad)
(bad)
mov
aas
test
dec
lds
sub
dec
add
(bad)
(bad)
(bad)
push
int3
rcr
scas
retf
pop
out
sub
(bad)
cmp
mov
xchg
and
ja
rol
fld
add
jg
(bad)
push
iret
or
out
cmps
push
dec
iret
(bad)
outs
js
ror
outs
inc
inc
mov
pop
icebp
out
add
add
(bad)
(bad)
mov
mov
jo
mov
jg
not
ins
xchg
iret
and
or
(bad)
(bad)
cmp
test
rcl
fisttp
cwde
scas
or
dec
cli
pop
mov
or
dec
loopne
(bad)
call
sahf
jmp
push
mov
out
add
push
lea
or
iret
mov
jecxz
jo
xchg
inc
test
jg
add
(bad)
push
(bad)
pop
pop
sbb
mov
(bad)
(bad)
push
and
test
shr
dec
dec
mov
cld
dec
push
pop
lods
fild
jmp
pop
loop
mov
sub
sbb
int
(bad)
(bad)
(bad)
call
pushf
out
je
addr16
int
jb
or
inc
and
add
xor
dec
jo
push
and
push
in
scas
cmp
push
stos
or
(bad)
(bad)
(bad)
(bad)
jmp
or
(bad)
fdiv
mov
mov
ins
or
mov
dec
addr16
pop
sub
aad
push
nop
pushf
(bad)
(bad)
(bad)
jmp
adc
outs
push
jge
scas
cdq
ja
pop
retf
mov
inc
lea
dec
jmp
push
jns
aad
and
scas
test
dec
lods
mov
(bad)
jmp
jmp
mov
popf
xor
inc
push
cmp
(bad)
aas
push
sbb
or
les
sub
push
aad
lock
stc
es
retf
addr16
fwait
cmp
(bad)
(bad)
(bad)
call
dec
(bad)
ret
js
cmp
not
push
daa
fwait
out
fsubr
sbb
mov
fs
dec
(bad)
(bad)
(bad)
dec
test
mov
add
js
retf
imul
and
fwait
push
loop
push
and
(bad)
(bad)
inc
inc
dec
int3
dec
andps
test
je
mov
popa
sbb
or
dec
dec
xchg
test
cmp
(bad)
(bad)
jmp
pop
enter
gs
icebp
test
add
inc
sub
adc
inc
mov
push
movs
pop
mov
pushw
xchg
jo
mov
arpl
pop
test
sar
mov
push
push
in
mov
push
ret
jmp
inc
push
push
xchg
xor
sahf
test
push
std
xchg
push
fld1
pop
cmp
mov
arpl
xchg
(bad)
(bad)
mov
push
adc
sahf
cmp
fnstenv
jnp
ret
in
jg
ins
hlt
sub
(bad)
(bad)
(bad)
jmp
xor
sbb
mov
inc
pop
int3
xchg
(bad)
call
(bad)
call
xor
dec
fcom
push
push
or
sbb
(bad)
push
adc
pop
in
mov
call
mov
and
mov
xchg
jecxz
les
test
xchg
pop
pop
xchg
paddd
out
(bad)
(bad)
mov
popa
mov
ja
jmp
ins
jecxz
cmp
lock
or
call
mov
cmp
pop
cs
popf
lahf
inc
mov
mov
pop
cli
cs
fcomip
cs
cmp
sub
xchg
xor
cmp
leave
(bad)
(bad)
(bad)
jmp
lahf
addr16
cmps
mov
mov
fadd
pop
adc
mov
sub
(bad)
call
adc
add
sti
sub
xor
sub
iret
std
(bad)
fld
jg
(bad)
jmp
mov
sbb
out
cmp
sub
mov
xlat
and
(bad)
(bad)
jmp
adc
adc
in
push
mov
mov
cmp
add
aam
and
(bad)
call
xchg
cmps
add
mov
push
xchg
cmp
jne
cmp
add
call
sub
icebp
jmp
push
xchg
clc
outs
mov
call
pop
xlat
push
outs
clc
xchg
adc
xchg
mov
das
cmp
mov
cmp
(bad)
movs
jl
(bad)
iret
fidivr
mov
push
cmp
(bad)
push
lods
mov
in
sub
test
cs
in
mov
pop
cmp
push
(bad)
jmp
movs
inc
pop
icebp
test
dec
xchg
dec
out
jecxz
shl
add
ss
(bad)
jmp
add
repnz
inc
shl
sub
ss
pop
popf
add
adc
push
xchg
movs
mov
fsin
push
push
sub
mov
sub
or
sahf
(bad)
xchg
push
(bad)
(bad)
(bad)
(bad)
fisttp
lods
(bad)
and
mov
addr16
cmp
pop
das
mov
ss
(bad)
(bad)
(bad)
call
and
and
in
cmp
push
and
mov
out
aaa
mov
sar
(bad)
push
fisttp
aad
cwde
mov
(bad)
(bad)
jmp
xor
out
(bad)
popf
(bad)
xlat
jecxz
das
cli
mov
rcr
outs
out
cli
dec
fbld
jecxz
pop
stc
sbb
into
pusha
scas
loopne
lods
pop
add
(bad)
(bad)
(bad)
inc
mov
div
test
(bad)
arpl
call
ins
inc
jbe
mov
outs
or
push
pop
mov
or
xchg
ins
ds
int3
pop
mov
(bad)
(bad)
call
jnp
add
setbe
shl
jb
arpl
pop
(bad)
(bad)
jmp
mov
mov
jb
fld
mov
or
cmp
xor
inc
sub
sar
fst
lock
ins
sbb
inc
aad
cmc
jg
(bad)
call
call
cmps
mov
push
sub
add
es
jmp
push
xchg
aam
jmp
inc
pop
out
into
mov
mov
lods
stos
pusha
fmul
fdivr
pop
ins
adc
hlt
sub
mov
pop
(bad)
inc
pushf
lock
inc
leave
rcr
aam
shl
xchg
mov
inc
cld
(bad)
jnp
mov
sbb
in
sbb
les
sbb
(bad)
call
pop
push
jl
call
sub
scas
sar
xor
mov
xchg
pop
pop
std
(bad)
inc
xor
imul
imul
xchg
mov
es
leave
mov
(bad)
(bad)
(bad)
(bad)
fld
fdivr
mov
xchg
mov
sahf
stos
dec
xchg
mov
or
push
test
dec
lock
cwde
pop
mov
cmp
adc
retf
ret
add
fsubr
(bad)
(bad)
(bad)
jmp
shl
jbe
leave
shl
pop
sbb
jmp
sbb
(bad)
mov
mov
aas
lock
loopne
ds
push
push
push
mov
call
aam
and
loop
pop
mov
ret
(bad)
xchg
icebp
xchg
mov
cmp
(bad)
call
mov
loope
packsswb
js
mov
in
retf
cmp
sahf
not
push
xchg
sub
xor
mov
pop
mov
inc
push
cmp
push
gs
adc
(bad)
(bad)
(bad)
call
jne
out
sub
sub
cmp
stos
fsubr
frstor
(bad)
fmul
outs
pushf
sub
pop
cmc
lods
and
out
icebp
lds
sti
ja
mov
lahf
xchg
(bad)
(bad)
(bad)
call
mov
adc
sub
stos
leave
jmp
xlat
xchg
rcr
jp
jbe
mov
mov
mov
(bad)
clc
ins
pop
pop
fcmovne
call
dec
imul
push
cmp
sub
(bad)
(bad)
jmp
popf
adc
add
jecxz
ret
gs
pop
xor
mov
popa
xlat
test
loopne
mov
(bad)
mov
and
mov
adc
sub
cwde
jnp
test
test
cmp
cmp
mov
xor
jne
adc
cmp
in
pop
cmovns
retf
adc
xchg
xchg
add
and
sub
aam
cdq
jns
xor
push
lds
inc
xor
mov
outs
nop
idiv
push
adc
cmps
xchg
in
fld
add
imul
call
je
mov
mov
sub
ret
push
jno
inc
sbb
push
pushf
sbb
xor
mov
test
mov
(bad)
(bad)
(bad)
jnp
dec
sbb
js
jge
ja
pop
push
jnp
fstp
dec
xor
xlat
jge
mov
jle
(bad)
call
jo
in
pop
mov
sti
shr
cmc
(bad)
(bad)
(bad)
call
push
adc
popa
jmp
pusha
xchg
imul
dec
and
sbb
retf
add
call
icebp
push
xor
cmp
out
ss
inc
dec
sub
mov
sub
sti
mov
and
pushf
or
sub
(bad)
call
xor
out
xchg
adc
call
dec
jg
jp
out
repz
repz
jmp
stos
jmp
inc
(bad)
(bad)
(bad)
call
push
jb
imul
inc
call
xchg
xlat
loopne
iret
jge
fidivr
or
inc
dec
xor
lahf
push
mov
shl
push
jl
movs
dec
pop
(bad)
push
scas
popa
or
or
je
test
push
ins
rcr
nop
mov
mov
mov
push
cmp
push
pop
adc
(bad)
(bad)
(bad)
(bad)
mov
xchg
add
and
out
cmp
dec
rol
in
je
lock
inc
push
pop
add
stc
arpl
xor
sbb
mov
sbb
(bad)
jg
sub
sub
shl
mov
jmp
mov
out
xor
imul
mov
mov
or
fidivr
pushf
dec
pusha
out
cld
adc
(bad)
call
or
dec
dec
outs
clc
mov
daa
fcomip
add
loopne
dec
outs
jg
mov
mov
mov
sar
(bad)
(bad)
jmp
mov
movs
sub
jo
sub
into
push
inc
dec
fst
sbb
data16
fisttp
jmp
je
xchg
dec
mov
inc
adc
sbb
call
(bad)
push
cdq
aam
imul
popa
jo
nop
mov
hlt
mov
jmp
(bad)
jg
std
mov
xchg
add
fidiv
mov
jecxz
jmp
(bad)
mov
pop
cwde
movs
movs
ret
push
cdq
ret
bnd
jb
pop
call
call
xchg
shl
dec
pop
pop
xor
neg
data16
in
jmp
clc
jecxz
lods
pop
xor
xchg
inc
cs
mov
pop
push
imul
adc
push
fadd
pop
inc
fist
shl
(bad)
popa
push
xchg
mov
cmp
mov
pop
std
dec
jmp
retf
sbb
fisubr
add
scas
frstor
jbe
(bad)
(bad)
jg
mov
push
(bad)
aad
mov
scas
and
dec
aad
inc
bound
inc
sub
int3
pusha
jp
or
lahf
dec
and
ffree
imul
jo
call
in
sar
and
cdq
ror
push
mov
cmp
sar
outs
outs
adc
inc
rol
inc
inc
pop
lds
pusha
stc
ins
sar
and
call
dec
push
ins
rcr
loop
data16
rcr
fst
xchg
add
arpl
push
(bad)
leave
and
xchg
(bad)
inc
ffree
(bad)
(bad)
(bad)
call
(bad)
push
rol
popf
inc
or
inc
dec
aad
in
inc
outs
sahf
imul
fild
mov
arpl
mov
int3
xor
mov
sbb
inc
cld
fild
jmp
das
outs
rol
test
xchg
push
inc
mov
(bad)
inc
retf
and
sbb
mov
pop
sbb
fimul
inc
call
fucomip
pop
jnp
inc
adc
add
lods
jne
outs
xchg
mov
xor
(bad)
dec
inc
mov
ins
daa
dec
jo
fcom
data16
fimul
sbb
mov
iret
sub
jmp
ins
rcr
dec
push
movs
lods
jle
push
(bad)
ss
clc
shl
cld
dec
adc
adc
call
mov
hlt
cld
es
inc
inc
in
(bad)
(bad)
(bad)
mov
push
pop
add
mov
jmp
sub
mov
clc
cmp
call
(bad)
mov
addr16
inc
mov
outs
std
push
fdivr
mov
push
dec
mov
or
(bad)
(bad)
call
or
mov
or
out
dec
or
mov
setbe
pop
mov
pop
fmul
out
push
sbb
sub
(bad)
sub
inc
or
in
mov
mov
mov
std
(bad)
(bad)
jmp
fxch
aam
sub
push
(bad)
push
shr
sbb
adc
sahf
shl
sbb
cmps
xchg
js
sub
(bad)
(bad)
(bad)
ds
push
iret
icebp
scas
fucomp
push
scas
out
sti
mov
fst
les
jnp
ss
(bad)
das
and
(bad)
push
sub
mov
add
pop
sar
xor
adc
ins
cmp
(bad)
(bad)
call
popa
and
dec
mov
push
xchg
jge
stos
sub
inc
dec
dec
push
cmp
pop
sbb
dec
mov
jp
fisub
fnstcw
pop
cld
pop
punpcklwd
nop
das
push
loope
cs
retf
out
sub
cs
sbb
test
push
inc
cwde
pop
pop
and
(bad)
sar
adc
cli
(bad)
(bad)
jg
xchg
add
mov
sbb
mov
push
xchg
jle
jno
(bad)
(bad)
out
cmps
cmp
push
mov
dec
jg
add
sub
mov
adc
lock
clc
out
dec
xchg
add
(bad)
pop
cmc
call
in
or
or
shr
leave
sub
jo
pop
mov
pop
leave
ret
mov
mov
sbb
fsin
(bad)
inc
push
dec
pusha
sub
sti
push
cwde
cwde
inc
jp
sub
mov
fcomip
dec
fdiv
inc
jnp
cs
lods
test
cmps
push
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
or
xor
std
fcomi
push
imul
enter
jmp
sbb
clc
pop
pushf
call
ret
cmps
shl
mov
(bad)
(bad)
push
mov
mov
cli
mov
sbb
loope
shl
retf
push
jmp
jmp
popa
xor
pusha
push
div
push
inc
dec
or
inc
or
dec
sbb
(bad)
mov
pop
mov
jmp
mov
mov
sub
(bad)
(bad)
mov
xor
stos
scas
dec
dec
push
add
cmc
stc
inc
push
xor
sbb
(bad)
(bad)
push
hlt
mov
jb
pop
adc
out
pusha
in
inc
mov
aad
ds
cmc
gs
ret
mov
mov
loope
sti
cmps
jns
add
mov
imul
xlat
xchg
cmp
(bad)
(bad)
dec
cwde
push
pop
sar
out
adc
int3
jnp
test
sahf
add
sub
loop
jg
call
cmps
(bad)
addr16
mov
(bad)
out
and
test
(bad)
jmp
pop
jg
add
pop
sub
pop
(bad)
(bad)
jmp
lds
sbb
ret
jne
(bad)
out
sbb
or
(bad)
(bad)
jmp
xchg
add
cld
inc
adc
xor
movs
mov
das
(bad)
cmc
sbb
push
(bad)
aaa
std
mov
iret
popf
jp
cmp
or
mov
dec
shr
adc
sbb
(bad)
(bad)
(bad)
jg
and
outs
fwait
xlat
lahf
xor
clc
sub
dec
popf
and
(bad)
es
mov
xchg
loopne
(bad)
(bad)
(bad)
push
sub
pop
test
mov
mov
mov
lahf
ss
dec
push
push
popa
dec
push
popa
sub
(bad)
(bad)
push
(bad)
cmp
dec
mov
iret
jns
pop
or
and
ret
fild
pop
(bad)
(bad)
(bad)
jmp
and
scas
test
(bad)
add
jnp
mov
stc
lock
pusha
cli
inc
cmp
pop
popa
ins
das
aas
mov
mov
push
(bad)
popf
fidivr
or
ja
pop
and
loopne
adc
sbb
push
adc
sahf
cld
lock
pop
mov
adc
aas
push
push
(bad)
jge
(bad)
(bad)
(bad)
inc
sub
pop
in
rcr
sbb
sub
jmp
or
outs
pop
lods
(bad)
dec
mov
test
mov
nop
or
pop
mov
xor
(bad)
mov
int3
fisttp
sub
jmp
scas
(bad)
(bad)
jg
mov
lods
dec
and
fiadd
mov
dec
push
and
(bad)
(bad)
(bad)
cmp
dec
push
movs
es
push
cwde
add
pop
(bad)
mov
and
push
rol
sub
sti
pop
rcl
(bad)
mov
scas
clc
mov
add
and
xchg
cmps
cmp
dec
or
lods
adc
or
sahf
push
in
mov
(bad)
(bad)
out
mov
mov
pop
and
loope
jg
mov
mov
adc
xchg
sbb
and
ins
mov
lods
add
pop
daa
out
test
dec
(bad)
call
nop
retf
out
dec
sbb
ja
sbb
repnz
push
(bad)
fild
add
(bad)
call
ins
xchg
sub
jb
adc
imul
outs
mov
jnp
(bad)
(bad)
(bad)
mov
std
adc
mov
fdiv
push
xchg
pop
ss
jne
in
mov
jge
cmp
push
pushf
cdq
cmps
lods
iret
call
jns
pop
repnz
jmp
ins
(bad)
(bad)
(bad)
(bad)
ins
adc
icebp
repz
jne
mov
rcr
xor
lods
call
fist
mov
and
fiadd
movs
cmp
jp
inc
scas
ret
movs
mov
xchg
stos
or
cmp
nop
push
push
fdivr
dec
push
pop
dec
aaa
std
jmp
out
xchg
pop
mul
inc
fldln2
(bad)
inc
sbb
cli
stos
pop
neg
jno
jmp
fdivr
jmp
dec
retf
popa
sbb
addr16
test
(bad)
(bad)
(bad)
fwait
lock
fnsetpm(287
xor
inc
lahf
mov
not
adc
or
mov
xor
std
jmp
repz
sar
ret
or
movs
call
lock
stos
aam
add
xor
cmp
xor
(bad)
inc
and
popa
mov
cmps
enter
shr
(bad)
fst
pusha
loopne
xchg
fwait
inc
int3
pushf
xlat
bound
adc
test
fisub
mov
jg
or
pop
(bad)
int3
loop
or
stc
xor
out
xor
(bad)
call
ret
push
scas
fisub
jmp
sbb
sahf
or
cmp
inc
mov
mov
adc
and
test
sub
xchg
not
xchg
jne
xlat
pop
xor
popa
mov
gs
cmps
(bad)
(bad)
(bad)
jmp
iret
and
sar
mov
jns
inc
rol
stos
adc
(bad)
(bad)
(bad)
(bad)
cmp
mov
xlat
leave
mov
xchg
mov
pop
jns
dec
sbb
(bad)
(bad)
(bad)
call
fadd
dec
out
mov
mov
mov
mov
jg
rol
sar
xchg
mov
(bad)
jmp
jle
loope
test
push
(bad)
push
icebp
jmp
iret
push
jne
stos
jmp
(bad)
(bad)
call
arpl
jmp
lods
pop
sub
jae
adc
les
es
push
lds
xor
dec
jo
(bad)
(bad)
call
add
push
cmp
loopne
ror
(bad)
mov
mov
pop
pop
sub
mov
fisttp
jp
rcl
mov
rcr
adc
shl
mov
or
sbb
mov
movs
and
mov
jno
stos
jo
mov
cmp
xchg
pop
cld
inc
(bad)
(bad)
(bad)
inc
dec
das
fadd
stc
lahf
fld
pop
sub
dec
cs
jmp
xor
push
lods
push
(bad)
out
das
fincstp
(bad)
(bad)
(bad)
call
cmp
push
(bad)
rcr
or
sbb
push
push
xor
dec
adc
rep
push
scas
(bad)
mov
push
mov
loope
cli
mov
hlt
cdq
(bad)
call
scas
dec
retf
xlat
fstp
xor
jg
xchg
test
hlt
push
xchg
push
jcxz
(bad)
(bad)
push
adc
movs
sar
arpl
not
sahf
(bad)
loopne
jbe
lock
sbb
(bad)
(bad)
(bad)
jp
inc
xchg
xchg
call
fidiv
fbld
cmp
sbb
mov
frstor
push
out
hlt
sahf
push
popw
and
sbb
(bad)
jmp
xor
cli
mov
lock
add
xor
push
les
push
int3
xchg
pop
dec
cmp
out
je
sbb
sub
in
add
mov
mov
mov
mov
add
(bad)
jmp
sub
in
push
test
mov
loop
fcomp
out
jns
adc
mov
jns
pop
add
push
(bad)
mov
or
jecxz
mov
out
cli
(bad)
jg
dec
xchg
jle
sub
lahf
repz
outs
imul
jp
add
mov
int
lock
out
fisttp
lods
sub
pop
std
scas
int
out
inc
or
fld
dec
xchg
adc
std
stos
adc
daa
push
imul
jmp
stos
frstor
pop
jbe
ret
inc
mov
aaa
popf
outs
fstp
(bad)
(bad)
call
or
xchg
mov
mov
push
mov
cmp
push
mov
je
add
call
jg
leave
pop
xchg
test
enter
push
xchg
lods
scas
sub
(bad)
(bad)
(bad)
inc
and
mov
gs
adc
(bad)
jns
mov
sar
mov
push
adc
loop
outs
jge
ds
fxch
loope
dec
mov
shl
jnp
sub
jns
mov
adc
adc
mov
(bad)
(bad)
call
movs
fcmovne
lods
pop
call
ins
mov
mov
in
data16
lods
imul
mov
aas
jne
mov
das
clc
push
gs
enter
push
ins
and
js
mov
mov
std
(bad)
mov
call
pop
shl
je
ins
pop
(bad)
xor
in
stc
retf
sub
mov
call
or
dec
adc
or
repnz
lods
lods
mov
(bad)
je
(bad)
(bad)
jmp
or
leave
cmp
mov
jno
mov
mov
pop
dec
enter
sub
scas
xchg
mov
lds
jge
xchg
xchg
jmp
leave
mov
and
mov
iret
(bad)
(bad)
(bad)
push
jne
mov
cmps
into
dec
jg
adc
push
out
jbe
mov
push
test
fptan
mov
cmp
fs
ret
jo
sub
and
or
inc
stos
loopne
js
jmp
clc
mov
lods
xor
in
push
push
jmp
icebp
add
dec
cmp
pcmpgtb
rcl
pop
mov
sub
cmp
xchg
sahf
and
(bad)
sub
imul
push
movs
cmp
(bad)
(bad)
jmp
cmp
and
mov
inc
popa
retf
mov
or
(bad)
jg
test
addr16
jmp
push
jg
jmp
and
out
fwait
sub
pop
addr16
test
(bad)
(bad)
call
mov
push
cli
inc
adc
inc
cmp
jl
ja
adc
pop
or
cmp
(bad)
inc
xor
sbb
repnz
push
imul
pop
shl
dec
adc
or
mov
mov
dec
ror
stc
ss
mov
sar
pop
sbb
mov
aam
push
getsec
mov
scas
inc
jmp
pop
or
mov
js
sar
call
ss
dec
mov
cli
aad
movs
cmc
jmp
sbb
nop
ins
sti
and
and
mov
adc
(bad)
jmp
js
dec
mov
and
mov
and
ja
clc
add
pop
jo
mov
call
lock
push
inc
jno
jne
jle
stc
inc
push
jl
shl
inc
xchg
lock
(bad)
(bad)
inc
pop
sub
sbb
jb
add
neg
pop
pop
sub
clc
pop
rcl
jmp
nop
dec
popf
inc
arpl
mov
sub
mov
or
(bad)
(bad)
inc
rcr
sbb
inc
jmp
lea
inc
mov
rcl
pop
(bad)
(bad)
(bad)
push
push
cmp
addr16
add
dec
mov
mov
mul
cli
sub
sbb
sbb
jns
add
jae
aam
retf
xchg
rol
(bad)
jg
jmp
iret
pop
adc
and
sub
hlt
jae
dec
sub
inc
adc
inc
(bad)
(bad)
(bad)
(bad)
std
les
pop
add
adc
or
lods
aaa
and
xchg
xor
ffree
dec
fcomip
(bad)
call
sbb
push
outs
or
mov
sub
xor
inc
adc
push
inc
les
ret
jbe
(bad)
(bad)
jg
xchg
std
js
mov
push
pushf
cmp
xchg
inc
xor
mov
sub
inc
pop
push
push
cwde
jne
cmp
cs
xor
ins
lahf
sbb
(bad)
inc
imul
mov
ds
adc
jnp
xor
jmp
adc
scas
test
push
lods
sbb
pusha
sub
sbb
pusha
push
mov
sbb
scas
cmp
int
push
xor
cmp
inc
pop
or
(bad)
jg
mov
repz
adc
in
xchg
je
jmp
push
dec
mov
fdiv
or
adc
and
sar
nop
pop
ins
loop
ror
bound
pop
pop
add
cmp
popa
and
xchg
cmps
(bad)
(bad)
(bad)
cmp
push
sar
add
cmp
and
mov
add
int
(bad)
jmp
(bad)
sub
cmp
xor
push
and
(bad)
(bad)
jl
cmc
mov
adc
mov
dec
scas
mov
sbb
fwait
jb
jmp
mov
addr16
cmps
push
stos
(bad)
aad
(bad)
inc
aaa
aas
sub
clc
in
xchg
shr
retf
outs
and
bound
cli
imul
movs
pusha
imul
push
cmp
add
pop
shl
jmp
out
fistp
(bad)
jmp
icebp
adc
lea
outs
stc
sub
add
in
pusha
loopne
cmp
sub
stos
test
scas
clc
call
(bad)
jecxz
xor
popf
cld
mov
js
imul
pop
mov
out
nop
icebp
add
push
cmp
cli
mov
movs
cdq
adc
add
shl
jbe
xchg
mov
dec
mul
mov
xor
or
cli
push
sbb
inc
dec
stos
mov
and
inc
push
movs
push
(bad)
(bad)
(bad)
jmp
mov
std
xor
cmp
cmps
iret
jmp
pop
jnp
loope
cmp
bound
dec
add
sub
(bad)
push
or
adc
xchg
push
lock
push
scas
sbb
fldcw
xor
or
(bad)
(bad)
inc
cmp
mov
jmp
daa
sub
bound
and
retf
in
sbb
dec
jo
and
(bad)
(bad)
call
mov
popa
push
test
push
cmp
push
int3
dec
cwde
jne
xchg
(bad)
arpl
mov
(bad)
(bad)
jmp
pop
jae
gs
sub
cld
movs
addr16
mov
or
das
xchg
(bad)
aas
or
arpl
pop
int
jbe
inc
test
mov
(bad)
dec
ins
mov
cli
ds
mov
jb
or
sbb
jecxz
movs
lahf
pop
stos
mov
std
(bad)
jmp
movs
leave
dec
adc
add
push
mov
dec
add
mov
aaa
cld
(bad)
call
loopne
mov
adc
adc
jmp
in
pop
or
jb
and
(bad)
(bad)
(bad)
(bad)
fsub
pop
jae
or
jb
push
jge
xor
fld
pop
jl
or
push
inc
sar
jge
aam
or
cmp
dec
(bad)
(bad)
(bad)
call
daa
mov
xlat
retf
gs
scas
adc
adc
xor
sub
inc
pop
xchg
jne
(bad)
(bad)
push
test
cmc
out
std
jle
rcr
or
jmp
scas
test
loope
in
pop
xchg
dec
(bad)
dec
(bad)
xchg
cli
fcmovnu
dec
and
or
push
pop
loop
cmp
dec
mov
stc
xor
(bad)
lock
push
mov
imul
and
push
in
sahf
jmp
in
cmp
sub
pop
inc
push
sbb
(bad)
call
fldenv
or
adc
sub
jno
shl
add
xchg
sbb
(bad)
(bad)
(bad)
dec
xor
mov
mul
out
gs
push
jno
bound
mov
shr
and
(bad)
aad
(bad)
adc
pop
or
jne
rdtsc
lock
push
std
pop
push
xchg
mov
push
nop
mov
mov
xlat
repnz
cmp
bound
mov
mov
inc
fwait
and
ins
aad
clc
lds
push
cmp
(bad)
cmp
inc
jne
pop
cmp
out
out
jnp
mov
mov
sbb
loopne
sbb
(bad)
(bad)
(bad)
out
pushf
add
sub
sahf
js
(bad)
mov
mov
shl
xor
arpl
loope
(bad)
(bad)
inc
in
adc
(bad)
fld
retf
sub
jno
dec
jbe
mov
pop
pop
adc
jg
pop
xchg
push
mov
xchg
pusha
xor
(bad)
call
or
or
shl
jecxz
or
sub
dec
repz
jmp
pop
cmp
sub
add
xchg
or
je
cld
xchg
(bad)
(bad)
push
xor
cbw
je
inc
mov
inc
(bad)
and
xchg
int3
xchg
sub
sub
mov
js
clc
out
sub
das
repnz
add
js
scas
xchg
mov
inc
ret
push
push
retf
jmp
leave
sar
les
mov
mov
sub
xchg
mov
mov
mov
jmp
loopne
out
jl
dec
cmp
lea
(bad)
(bad)
(bad)
(bad)
in
sub
xor
nop
or
and
aam
retf
and
shr
pop
imul
movs
leave
(bad)
sub
les
lahf
ins
loopne
adc
xor
fwait
add
push
dec
sbb
test
push
push
cld
(bad)
(bad)
inc
loop
or
and
gs
js
xchg
(bad)
imul
hlt
sub
retf
xchg
push
xchg
sub
pop
scas
mov
inc
retf
outs
cli
scas
pusha
xchg
movs
adc
mov
cmp
bound
(bad)
push
arpl
jb
in
dec
xchg
fs
push
xlat
lea
jb
dec
pop
add
dec
pop
cdq
imul
or
ja
jmp
rol
movs
cmp
xchg
and
mov
or
(bad)
(bad)
cmp
cmps
in
or
mov
sbb
mov
(bad)
repz
addr16
adc
rol
hlt
pop
adc
(bad)
(bad)
(bad)
jg
and
xchg
mov
jno
push
xchg
add
mov
push
(bad)
fsubp
daa
nop
aad
jne
cmps
and
jg
lods
pop
dec
loope
loop
jmp
push
loope
xlat
aaa
xchg
pushf
cmp
cmp
mov
outs
(bad)
(bad)
(bad)
mov
and
test
xchg
xor
push
xchg
lods
sbb
sbb
mov
in
or
jo
(bad)
(bad)
(bad)
inc
pop
jae
mov
adc
mov
inc
add
xlat
sub
and
xchg
sbb
(bad)
mov
lock
adc
or
dec
leave
cmp
jmp
xchg
dec
xchg
xchg
fcom
(bad)
test
stc
and
push
add
mov
scas
popa
jge
or
mov
leave
mov
pop
xor
in
mov
xor
cmp
cli
mov
cmps
dec
(bad)
adc
sub
xchg
out
cli
daa
push
sub
enter
cwde
push
int3
fcomp
retf
inc
cmp
(bad)
call
cmps
into
cmp
push
cmc
xor
cdq
and
push
sbb
xlat
leave
outs
xchg
cmc
mov
out
test
out
outs
aas
(bad)
aas
jg
cmp
cs
shl
cmc
cs
out
jg
mov
in
cmps
cmps
push
mov
pop
gs
adc
packsswb
std
mov
dec
fisub
icebp
les
sbb
pop
retf
or
test
mov
repz
jmp
dec
in
ins
jbe
mov
push
rol
sub
xchg
pushf
inc
xchg
mov
call
ret
jnp
(bad)
test
dec
mov
push
lods
je
lods
mov
xor
test
xchg
push
data16
stos
mov
xchg
imul
mov
push
adc
add
adc
(bad)
jmp
mov
and
push
or
lods
mov
bound
int3
loope
sub
dec
mov
sub
cs
fcompp
mov
xchg
mov
fadd
icebp
jae
pop
shl
repz
pop
(bad)
(bad)
(bad)
inc
push
lods
fs
or
call
ss
or
push
cld
(bad)
test
ret
ret
mov
add
sub
mov
jp
mov
inc
xor
jle
add
clc
call
(bad)
popa
xlat
test
pop
mov
xor
add
ror
loope
je
mov
pop
jmp
js
push
pop
mov
ja
cld
push
inc
push
jl
jnp
sti
sbb
(bad)
out
mov
icebp
mov
loop
cmp
push
adc
(bad)
out
clc
jmp
scas
and
sahf
jmp
sbb
pusha
add
ins
(bad)
(bad)
(bad)
dec
inc
stc
aam
xchg
mov
sbb
sub
or
shl
xor
mov
sub
push
add
js
int3
(bad)
sub
inc
push
and
pop
shl
xchg
dec
(bad)
movs
fistp
push
cmp
(bad)
(bad)
(bad)
push
imul
das
xchg
mov
adc
mov
or
jo
jae
(bad)
(bad)
(bad)
(bad)
push
out
xchg
push
rcl
repz
adc
mov
pushf
mov
idiv
aaa
jecxz
in
inc
mov
cmp
xor
and
push
pop
mov
out
std
(bad)
(bad)
inc
push
mov
mov
aaa
out
ins
mov
xor
sbb
nop
dec
cmps
lock
retf
je
push
dec
fcomp
call
loope
in
lock
adc
xchg
jmp
or
fwait
dec
xchg
xchg
mov
clc
(bad)
jns
mov
add
xchg
inc
mov
ss
jnp
inc
xlat
shl
retf
jae
(bad)
(bad)
mov
into
mov
and
mov
xchg
(bad)
(bad)
(bad)
jmp
pop
lods
sub
or
mov
mov
mov
gs
retf
jp
and
test
xchg
sbb
mov
pop
inc
cmp
push
push
(bad)
adc
(bad)
leave
les
cmc
(bad)
(bad)
mov
mov
jmp
fisttp
push
data16
mov
mov
stos
add
and
and
add
test
pusha
dec
clc
test
into
cmp
test
ret
inc
mov
aam
out
push
inc
sbb
mov
mov
fsubr
out
or
out
sahf
xor
cmc
jl
dec
(bad)
(bad)
(bad)
inc
(bad)
pop
cmps
cmps
or
aas
adc
repnz
or
xchg
dec
es
(bad)
push
clc
adc
mov
in
jnp
add
call
mov
mov
push
mov
dec
sub
iret
cmp
mov
stos
push
or
xchg
xlat
add
jbe
pop
mov
int
(bad)
enter
jno
aaa
jbe
cmp
cmps
pop
or
or
mov
jmp
and
(bad)
jg
(bad)
scas
fistp
push
stos
sub
jmp
sub
inc
ss
(bad)
(bad)
(bad)
push
daa
dec
pop
int3
mov
in
push
sub
into
or
retf
les
sub
adc
xchg
call
(bad)
in
sar
leave
mov
cli
fnstsw
add
fnstenv
mov
int
(bad)
(bad)
(bad)
fcmovbe
pop
outs
push
pop
shl
mov
lods
imul
mov
xor
ja
(bad)
dec
dec
cwde
mov
mov
jmp
je
loopne
pusha
hlt
inc
push
mov
sub
faddp
call
add
dec
xchg
and
adc
out
fs
or
sub
ret
dec
jo
int3
call
mov
mov
add
lea
push
xor
(bad)
jmp
cli
inc
cmps
mov
sbb
lahf
sbb
sbb
retf
pusha
out
mov
ret
sar
(bad)
cld
or
inc
sub
outs
mov
xchg
sahf
push
push
enter
cmp
jmp
push
mov
xor
test
test
add
jne
sub
(bad)
mov
sub
adc
ss
cs
cmp
or
popa
mov
jbe
int3
nop
(bad)
aad
(bad)
(bad)
fisubr
jnp
es
jmp
loop
jecxz
(bad)
jmp
cmc
repz
(bad)
idiv
retf
sti
mov
jp
test
jg
and
daa
pop
pop
sub
mov
iret
jle
push
fild
xchg
mov
lea
push
pop
sub
into
pop
push
xor
xchg
pusha
jp
(bad)
(bad)
jmp
adc
add
je
mov
push
mov
adc
stos
and
sahf
cwde
sub
outs
call
add
dec
pop
ret
(bad)
mov
push
ret
aad
ds
aaa
fdiv
dec
jle
jae
sbb
mov
cmps
push
ret
sub
add
jg
es
add
jne
sbb
test
call
(bad)
(bad)
inc
mov
ret
cmp
xor
mov
and
aaa
fdivr
mov
sbb
cld
sbb
movs
(bad)
(bad)
(bad)
call
adc
in
or
ret
iret
mov
clc
js
push
adc
imul
or
sar
add
sbb
push
ret
xor
and
xchg
int3
xor
jecxz
mov
call
xor
xchg
and
mov
(bad)
(bad)
(bad)
(bad)
cmp
out
shl
mov
xchg
icebp
cmp
pop
jge
pop
out
loop
sti
out
rcr
push
out
pushf
(bad)
(bad)
(bad)
call
fucom
add
push
dec
dec
in
test
int3
inc
push
cmp
cmp
in
aaa
fdivrp
dec
push
retf
(bad)
call
test
iret
sbb
loop
out
pop
xchg
jns
(bad)
pop
push
jb
push
scas
add
(bad)
call
aam
clc
push
mov
sub
loopne
dec
pop
jmp
jnp
and
jbe
cmp
push
cmps
and
adc
loopne
outs
(bad)
jmp
out
stc
mov
mov
mov
(bad)
in
cmp
xlat
(bad)
(bad)
(bad)
call
inc
lahf
push
mov
gs
mov
jbe
sahf
sbb
repnz
in
fist
(bad)
(bad)
(bad)
jmp
pusha
xor
push
xor
(bad)
pop
sub
je
gs
inc
sahf
addr16
mov
inc
or
aad
pop
out
xchg
aaa
mov
xor
mov
xchg
cmp
call
xlat
xchg
push
pop
into
cmps
and
mov
pop
cmp
rcl
cmp
xchg
add
add
inc
mov
mov
(bad)
jmp
test
sbb
fbld
adc
jb
lea
cld
outs
clc
fnstenv
pop
pop
pop
retf
hlt
imul
imul
(bad)
std
imul
clc
popf
fisub
inc
call
ds
mov
cmps
sar
(bad)
(bad)
fisttp
adc
dec
(bad)
fld
jl
enter
mov
out
sahf
mov
je
xor
repz
or
loop
dec
loope
xor
stos
or
pop
mov
(bad)
call
sbb
pop
pop
mov
dec
ins
xor
sahf
sti
mov
push
cmps
inc
cld
inc
and
in
stc
xor
or
pusha
xor
(bad)
(bad)
call
fstp
(bad)
ins
or
mov
fst
enter
(bad)
(bad)
jmp
stc
in
adc
mov
lods
mov
outs
cmp
jmp
stos
js
mov
mov
pop
int3
or
xchg
jae
pusha
mov
pop
jbe
pop
jg
mov
xor
xor
sti
outs
push
jl
idiv
jmp
ins
xchg
adc
cmc
mov
sbb
loopne
std
(bad)
mov
pop
aam
(bad)
inc
popf
mov
mov
dec
fdivr
inc
sbb
es
(bad)
(bad)
(bad)
dec
scas
pusha
mov
or
cdq
cmp
and
add
enter
push
aaa
adc
xchg
scas
movs
int3
mov
(bad)
(bad)
(bad)
inc
nop
dec
xchg
mov
sub
xor
clc
call
add
movs
or
cli
(bad)
jmp
inc
scas
aaa
pop
jo
stc
imul
push
sbb
int
mov
(bad)
(bad)
call
jmp
leave
out
test
mov
dec
adc
dec
pop
sbb
sbb
(bad)
(bad)
call
adc
dec
or
aas
test
jecxz
jno
mov
add
sbb
sbb
(bad)
jg
jo
sub
pop
lods
mov
fild
out
fdivrp
cwde
pop
pop
ret
call
mov
xor
into
sbb
xor
push
(bad)
(bad)
(bad)
dec
adc
xchg
dec
lds
cdq
cmp
push
mov
and
mov
arpl
shl
cs
inc
(bad)
adc
daa
xor
xchg
retf
ss
mov
(bad)
xchg
push
test
jge
fucomi
add
jo
cmps
jmp
xor
idiv
(bad)
(bad)
inc
popf
hlt
fadd
xor
inc
ins
xlat
or
loop
into
pop
lahf
lds
js
xor
xchg
or
sbb
(bad)
inc
sar
retf
push
aam
mov
and
bound
test
and
jp
or
ror
mov
or
adc
jp
mul
cmps
movs
xlat
sbb
mov
mov
out
pusha
mov
or
mov
imul
and
cmps
adc
cmp
movs
fild
fs
xor
or
or
mov
jl
hlt
push
mov
rol
inc
xchg
(bad)
(bad)
jg
fcomp
push
int
pop
sub
sub
mov
mov
jmp
jmp
dec
mov
pop
mov
idiv
psubsb
jl
cmp
mov
push
inc
(bad)
xor
dec
iret
fcomip
rcr
nop
imul
pusha
push
ja
stc
fistp
enter
xchg
aad
(bad)
(bad)
(bad)
jmp
mov
mov
in
repnz
mov
in
mov
or
jmp
jbe
fst
iret
dec
aaa
pop
in
ret
inc
or
daa
jecxz
cmps
iret
mov
push
add
mov
inc
cli
fisub
push
push
je
ret
pusha
push
(bad)
sub
stc
ret
scas
mov
and
pusha
std
(bad)
(bad)
inc
adc
retf
cmp
xor
shl
sbb
stos
enter
cmp
inc
mov
push
ins
xchg
fldcw
sbb
out
(bad)
(bad)
jmp
sbb
jne
mov
push
int
cmp
dec
sar
call
sbb
mov
pop
dec
ret
mov
sar
loop
and
push
fbld
dec
nop
push
dec
mov
mov
out
or
lea
pop
add
(bad)
(bad)
(bad)
push
inc
out
cmps
xor
xor
enter
xchg
jae
addr16
adc
out
(bad)
(bad)
call
pop
mov
arpl
(bad)
imul
inc
lods
jne
jnp
lea
sbb
(bad)
(bad)
dec
inc
cdq
fadd
sub
mov
cs
mov
test
jnp
pushf
push
(bad)
call
mov
mov
adc
adc
lea
lds
into
aam
(bad)
(bad)
(bad)
dec
enter
sub
xchg
nop
mov
nop
mov
clc
push
inc
(bad)
(bad)
dec
ins
jg
mov
and
sar
(bad)
stc
fadd
and
(bad)
(bad)
push
ret
mov
mov
(bad)
sti
test
cmp
pushf
out
xchg
daa
(bad)
(bad)
(bad)
(bad)
(bad)
pop
xchg
push
(bad)
(bad)
cmp
push
leave
jmp
sub
cmp
and
mov
jmp
(bad)
(bad)
inc
cmps
push
add
sbb
mov
dec
popa
jl
inc
sub
fcmovne
adc
dec
shl
nop
pop
xchg
jle
and
sbb
jmp
mov
dec
push
mov
jecxz
pusha
cmp
movs
or
jmp
scas
js
sbb
nop
call
dec
cmp
scas
mov
stc
add
fdivr
xchg
dec
ds
(bad)
push
in
mov
int
std
pop
cmp
dec
pop
rcl
(bad)
arpl
movs
cs
call
and
push
stos
pop
js
jge
lods
mov
inc
mov
or
jb
sbb
pop
lock
xlat
pop
sar
loope
push
or
(bad)
fcomip
call
loop
sub
xchg
outs
pop
pop
ret
popf
or
ret
jb
mov
call
mov
imul
cmp
outs
test
(bad)
call
sar
push
push
rcr
sub
fld
pop
ret
mov
cmp
popa
push
repz
xchg
ror
scas
jl
xor
enter
scas
inc
mov
(bad)
(bad)
push
es
test
and
sar
pop
dec
xor
(bad)
dec
loope
pop
add
dec
jp
and
sub
test
pop
push
stc
(bad)
(bad)
(bad)
jmp
inc
inc
inc
jg
lahf
adc
mov
(bad)
xor
jp
(bad)
(bad)
(bad)
push
ret
jae
jl
push
lds
mov
push
adc
and
cmp
or
nop
(bad)
(bad)
(bad)
jmp
jb
xchg
sahf
pop
xor
inc
aas
sbb
int
(bad)
call
pusha
icebp
loop
and
xor
add
call
stos
iret
dec
push
pushf
jne
push
mov
dec
ss
xchg
pusha
(bad)
jmp
push
jmp
fstp
cli
mov
(bad)
or
dec
(bad)
push
mov
ja
(bad)
scas
pop
(bad)
shl
inc
push
mov
idiv
or
dec
cmps
mov
adc
in
aad
push
retf
sbb
int
call
xchg
(bad)
loopne
or
(bad)
(bad)
push
jne
retf
push
jp
in
cwde
add
and
add
movs
push
int3
das
pop
(bad)
(bad)
(bad)
inc
jne
adc
sub
(bad)
mov
adc
shl
xlat
add
inc
sub
(bad)
(bad)
(bad)
(bad)
out
retf
inc
call
pop
popf
mov
xor
es
hlt
sbb
mov
int
sbb
(bad)
(bad)
jmp
and
es
push
bound
mov
sbb
push
dec
retf
pushf
and
cmp
push
(bad)
(bad)
(bad)
jmp
and
dec
inc
fidiv
mov
add
add
shr
cmps
arpl
mov
cld
outs
call
or
div
lock
and
sbb
jp
mov
cmp
pusha
cmps
scas
xchg
mov
cmp
dec
lahf
jl
sub
xchg
(bad)
(bad)
call
mov
jbe
(bad)
xchg
jnp
mov
sub
xor
push
ja
(bad)
stc
mov
cmp
dec
call
hlt
jno
cmp
add
movs
(bad)
in
(bad)
fcomip
mov
fwait
iret
outs
add
fs
int3
data16
test
(bad)
call
(bad)
dec
ins
and
xchg
fdivr
jb
cmp
daa
int3
out
sub
(bad)
inc
out
or
das
push
mov
sbb
(bad)
mov
or
push
(bad)
push
(bad)
out
pop
repz
(bad)
(bad)
enter
loop
fild
pop
or
(bad)
(bad)
(bad)
ds
jae
retf
fild
jae
push
cmp
gs
cs
mov
inc
fwait
(bad)
(bad)
fst
popa
je
inc
pop
cld
rcl
jg
add
hlt
stos
fidivr
push
inc
fs
gs
jne
jne
mov
inc
push
sbb
(bad)
(bad)
dec
lock
pop
pop
add
retf
add
(bad)
(bad)
jg
aas
add
inc
leave
pop
push
lods
fsub
push
std
dec
(bad)
mov
pop
or
inc
inc
add
pushf
sti
inc
push
mov
clc
jmp
iret
push
cdq
xchg
adc
jge
mov
sbb
sub
lds
dec
pop
push
jo
hlt
cmp
sbb
xor
xlat
or
xchg
shr
xchg
jae
je
xchg
and
cdq
cmc
push
sbb
cs
in
pop
shl
dec
nop
movs
mov
enterw
jbe
js
(bad)
fdivr
call
mov
ret
dec
clc
shr
xor
fisub
adc
sbb
fidivr
pop
xchg
(bad)
call
and
jae
retf
xor
(bad)
inc
mov
lahf
in
das
in
(bad)
out
outs
add
adc
popf
or
clc
pop
in
jecxz
pop
fisttp
imul
fidivr
jl
pop
aam
mov
push
data16
dec
stc
jl
jg
(bad)
call
pop
cmc
xchg
gs
fnstcw
dec
fdivrp
inc
retf
sub
cli
loope
dec
xor
push
cmp
shl
and
call
(bad)
jmp
cmp
nop
movs
xchg
dec
mov
and
jmp
(bad)
(bad)
jmp
icebp
outs
push
sub
mov
inc
lea
xchg
test
jae
add
dec
std
jns
adc
mov
jg
or
xlat
fwait
jmp
(bad)
cmp
inc
iret
sub
arpl
cmp
scas
sub
test
ja
dec
dec
(bad)
(bad)
(bad)
jmp
mov
sub
push
out
imul
imul
mov
in
mov
call
retf
inc
in
les
bound
inc
cmp
cwde
shl
xchg
adc
mov
das
out
pop
or
je
add
mov
push
pushf
jle
fild
xor
call
add
xor
xor
sub
mov
bnd
(bad)
(bad)
(bad)
dec
xor
ins
dec
push
xchg
(bad)
cld
xlat
aas
pop
(bad)
jl
fistp
sub
dec
fild
and
mov
mov
sbb
loop
inc
test
ins
imul
inc
sbb
(bad)
(bad)
dec
sbb
stos
cmp
dec
and
jmp
mov
(bad)
(bad)
push
aad
pop
xchg
mov
scas
fisubr
into
in
rcr
pop
gs
xchg
xlat
inc
(bad)
adc
imul
retf
mov
adc
repnz
mov
jmp
std
(bad)
(bad)
jg
out
push
and
cmp
mov
(bad)
movs
dec
add
jge
test
ja
call
jo
inc
das
mov
lock
jmp
mov
int3
bswap
lahf
daa
in
aas
(bad)
loop
jle
(bad)
(bad)
call
mov
ret
iret
ror
(bad)
adc
out
mov
sub
sbb
call
adc
pop
ds
sub
(bad)
(bad)
fist
nop
lods
add
cdq
mov
push
in
pusha
cwde
sbb
push
sub
mov
or
addr16
mov
xor
(bad)
adc
xor
add
div
sbb
mov
ret
xchg
xor
(bad)
fcomip
inc
pop
xchg
xchg
push
in
and
test
sbb
mov
and
(bad)
(bad)
push
fimul
xor
xchg
xlat
dec
je
into
iret
pop
test
(bad)
push
xchg
jg
add
jg
clc
(bad)
(bad)
inc
fiadd
pusha
mov
repz
jno
jno
sub
and
cld
add
jno
cli
mov
dec
(bad)
(bad)
jmp
clc
fild
jg
sti
retf
or
xor
cwde
int
pop
pop
cs
sub
cmp
sbb
sar
in
(bad)
not
in
leave
adc
xchg
aam
dec
(bad)
(bad)
(bad)
jmp
in
or
inc
call
mov
fsubr
and
popf
enter
lods
js
pop
pop
icebp
(bad)
rol
test
jb
into
movs
adc
fcomip
call
bound
test
pop
js
push
je
pop
in
xor
(bad)
(bad)
(bad)
jmp
xor
cmps
sbb
mov
popf
push
add
adc
les
fcomip
(bad)
add
push
mov
das
out
xchg
daa
cli
mov
mov
jns
jbe
cli
(bad)
(bad)
(bad)
call
aaa
and
and
(bad)
fisub
aam
jle
ret
inc
add
push
sub
dec
out
pop
mov
mov
mov
jb
inc
(bad)
(bad)
(bad)
push
jmp
mov
push
mov
sar
ss
mov
mov
or
pop
lock
push
test
adc
ins
mov
push
jne
push
popa
add
dec
test
or
stos
stc
(bad)
dec
rcr
add
outs
adc
test
in
ds
sar
cld
(bad)
clc
push
mov
cmp
lea
retf
mov
cmp
cli
adc
(bad)
(bad)
jmp
jb
fcmovu
arpl
mov
sahf
dec
push
jmp
ja
jne
sbb
pop
pop
(bad)
(bad)
push
sub
jbe
push
test
sub
add
xor
or
sbb
(bad)
(bad)
(bad)
(bad)
jns
cmp
arpl
sbb
fdivr
push
int3
es
cmp
lods
or
mov
sbb
shl
ja
(bad)
(bad)
jmp
pop
mov
out
jl
sbb
inc
imul
pop
cmp
cmp
cmp
mov
adc
pop
inc
jmp
push
(bad)
(bad)
(bad)
call
jp
xchg
xchg
cmp
mov
inc
(bad)
mov
mov
jne
or
(bad)
call
test
mov
ss
ret
ror
std
add
aam
(bad)
(bad)
jmp
dec
lods
repnz
ins
test
xor
addr16
xchg
or
cdq
pusha
arpl
int3
shl
cli
ss
inc
add
xchg
xlat
test
cmp
(bad)
(bad)
jmp
cli
sti
fist
push
(bad)
div
add
aaa
push
test
(bad)
jmp
clc
xchg
mov
popf
loopne
mov
fmul
mov
jo
xor
mov
mov
(bad)
cmps
lea
inc
and
(bad)
(bad)
(bad)
mov
pop
addr16
sti
leave
les
jo
fdivp
jno
sti
inc
pop
mov
jp
(bad)
(bad)
call
xor
out
xor
enter
dec
add
ret
mov
fdivr
jmp
cmps
hlt
dec
or
mov
cmp
push
aas
push
pop
jbe
jmp
xchg
add
adc
clc
push
or
bound
fcmovnbe
popa
sbb
and
inc
(bad)
mov
(bad)
(bad)
(bad)
inc
jo
push
std
jae
out
pop
cmp
and
mov
scas
cdq
adc
fist
popf
(bad)
(bad)
(bad)
(bad)
cmp
scas
jne
jmp
movs
or
xchg
push
scas
pusha
shr
jp
push
test
or
call
cmp
inc
mov
enter
jecxz
loopne
(bad)
call
ins
or
push
daa
loope
jecxz
add
jle
imul
jg
or
iret
popa
jle
jle
(bad)
call
repnz
add
arpl
call
and
outs
in
sbb
sbb
push
push
pop
enter
in
aaa
sbb
aad
sub
push
imul
ror
jg
or
lods
mov
std
std
int
(bad)
(bad)
(bad)
push
jae
cwde
pop
ins
retf
loope
bound
adc
movs
ror
fldln2
fbstp
es
pusha
pop
or
mov
(bad)
(bad)
jmp
je
sbb
mov
bound
gs
add
and
push
stc
dec
call
cld
call
dec
add
outs
movs
sar
cmp
sbb
push
pop
mov
push
test
inc
sbb
outs
call
retf
(bad)
dec
or
loopne
data16
leave
mov
mov
xchg
ret
inc
pop
add
dec
pop
cmp
imul
bound
dec
adc
push
and
sub
inc
push
jo
sahf
jle
mov
sub
mov
shl
add
pusha
lods
out
or
repnz
out
sbb
shl
ja
movs
fstp
jo
mov
hlt
dec
in
icebp
aas
jnp
xor
xchg
test
inc
inc
emms
cmp
stos
pop
icebp
add
fsubr
enter
(bad)
jg
pop
repnz
lods
ja
clc
mov
push
mov
ds
loope
(bad)
(bad)
dec
mov
out
mov
loopne
xor
icebp
dec
movs
jmp
(bad)
(bad)
push
pop
rcl
test
inc
add
xchg
mov
ins
jns
nop
rol
icebp
add
bound
dec
(bad)
jmp
clc
into
aad
nop
repnz
movs
and
pop
neg
fcom
or
(bad)
inc
mov
sbb
adc
stos
sar
sbb
sar
(bad)
fcomip
lods
fcmovbe
dec
fisubr
imul
and
pop
adc
scas
or
je
inc
lock
xor
enter
out
push
retf
mov
(bad)
jmp
or
outs
call
inc
mov
push
(bad)
fild
push
sub
shl
push
jmp
fcomip
cli
pop
loop
retf
lods
mov
add
bsf
ss
add
das
(bad)
push
and
cmps
cmp
fs
adc
or
xor
mov
(bad)
(bad)
call
mov
or
pop
pop
in
push
mov
repz
(bad)
(bad)
jg
xchg
mov
sti
(bad)
hlt
jae
jb
or
xor
fbstp
inc
add
and
dec
push
cmc
cld
icebp
(bad)
(bad)
(bad)
fisttp
gs
mov
(bad)
inc
repnz
mov
ror
ret
out
clc
call
repnz
push
xor
jnp
ficomp
pop
push
test
loope
mov
cmps
pop
mov
cmp
fdiv
adc
(bad)
(bad)
sti
and
in
in
fld
pop
jge
xor
or
xchg
dec
jbe
lods
and
pop
mov
(bad)
(bad)
jmp
jne
cmps
cwde
in
stos
adc
and
mov
xchg
pop
cmc
ins
mov
pop
xchg
scas
push
xchg
dec
xchg
cmps
cmps
jns
cld
mov
pop
mov
(bad)
xlat
cmp
xchg
push
out
scas
push
pusha
(bad)
add
sbb
mov
test
fcomip
sub
out
push
fld
out
inc
(bad)
lahf
loope
dec
(bad)
jmp
pusha
scas
push
sub
dec
inc
xchg
push
aad
push
lods
inc
push
xor
cmc
in
pop
(bad)
jmp
out
repnz
ins
pop
pop
fs
jno
adc
fistp
mov
mov
(bad)
mov
(bad)
push
lods
mov
cs
jmp
nop
loope
mov
jo
cmp
sbb
mov
shl
(bad)
fwait
xor
add
push
movs
stc
push
cmp
jmp
(bad)
nop
push
nop
xchg
mov
jl
adc
scas
(bad)
fbld
out
rcl
and
out
and
(bad)
jmp
shl
jb
pusha
mov
sbb
jecxz
in
loop
push
sub
out
sub
jg
sub
and
stc
out
pcmpgtw
dec
arpl
inc
xlat
lods
mov
mov
(bad)
jg
inc
pop
outs
or
shl
sub
xchg
pop
dec
(bad)
(bad)
(bad)
(bad)
mov
xor
div
sbb
in
out
mov
jmp
(bad)
push
pop
push
xor
adc
sub
sti
or
test
cmps
xor
test
fimul
pusha
xchg
into
(bad)
(bad)
(bad)
jg
mov
dec
call
pop
daa
out
lea
mov
std
dec
jecxz
(bad)
(bad)
(bad)
jmp
jnp
fld
jmp
xchg
shr
adc
cmp
sahf
pop
push
clc
das
popf
mov
pop
std
(bad)
(bad)
jmp
(bad)
cs
out
clc
mov
pop
sti
rcr
test
cmp
iret
pop
cmps
sar
(bad)
call
cli
(bad)
scas
shr
cmp
cmp
shl
adc
sub
(bad)
(bad)
(bad)
call
(bad)
fs
cmp
sub
es
enter
lods
sbb
loopne
cmp
std
dec
loop
dec
sbb
or
sbb
add
test
dec
dec
jp
out
jnp
inc
sar
test
(bad)
(bad)
jmp
outs
in
mov
inc
push
icebp
mov
jp
adc
mov
in
xor
xchg
xchg
push
clc
ja
(bad)
(bad)
call
mov
icebp
xor
push
call
dec
mov
lds
ins
(bad)
(bad)
(bad)
push
pop
push
push
lahf
mov
pop
call
lahf
mov
outs
in
sbb
mov
jl
(bad)
(bad)
(bad)
jmp
movs
imul
jmp
dec
adc
js
push
cmp
adc
mov
push
lahf
jge
cwde
push
xor
or
stc
cmps
outs
sub
adc
test
ds
mov
jmp
(bad)
(bad)
call
test
jge
pushf
or
test
stos
jae
lock
pop
jb
aas
(bad)
jmp
sbb
inc
es
push
add
and
imul
int3
mov
shr
xchg
mov
into
adc
or
and
dec
and
lock
(bad)
dec
dec
ins
clc
cmc
jmp
in
das
aaa
sub
inc
clc
push
jb
sbb
movs
jmp
(bad)
(bad)
(bad)
jmp
adc
adc
mov
push
aas
mov
jns
inc
push
in
scas
or
or
outs
clc
dec
jno
ror
fcmovbe
and
cdq
ficomp
pop
sbb
xchg
mov
clc
dec
fst
sbb
test
imul
(bad)
mov
mov
shr
aam
ret
dec
mov
(bad)
in
(bad)
dec
cmc
jns
lock
push
sti
inc
mov
fld
test
inc
inc
jecxz
(bad)
(bad)
dec
sub
das
repz
lahf
test
enter
and
add
pop
in
mov
xor
xchg
mov
ss
(bad)
(bad)
cmp
div
bound
xor
test
enter
dec
xor
call
inc
test
add
inc
cld
push
push
leave
(bad)
sub
inc
fcomi
in
xor
mov
sar
(bad)
gs
(bad)
(bad)
(bad)
jmp
sub
imul
adc
pusha
scas
sbb
adc
push
pop
or
sub
(bad)
dec
dec
and
or
dec
lds
mov
push
sub
adc
dec
cld
aad
jg
mov
call
std
jb
test
mov
push
(bad)
(bad)
push
retf
pusha
and
repz
cmps
sub
sbb
mov
stc
xchg
(bad)
(bad)
(bad)
call
jl
xchg
pushf
aas
jge
into
movs
and
inc
adc
je
and
popa
sbb
adc
(bad)
(bad)
(bad)
push
gs
mov
add
cdq
rcl
shr
xchg
xor
lods
pop
jns
loopne
retf
cmc
(bad)
call
mov
xchg
adc
sbb
jp
mov
in
test
mov
adc
(bad)
(bad)
jg
aam
add
fnstsw
movs
and
mov
cmp
adc
cmp
in
(bad)
(bad)
(bad)
mov
or
shl
cs
add
jmp
mov
push
(bad)
(bad)
push
leave
loope
mov
jmp
stc
mov
sahf
push
stos
(bad)
(bad)
call
test
or
xor
cmp
enter
bswap
push
into
push
icebp
in
push
pop
dec
jmp
lock
call
mov
pop
xchg
(bad)
jmp
dec
cmc
jae
sbb
jge
sub
fs
movs
pop
std
(bad)
call
xchg
rep
xor
sub
imul
sbb
outs
aam
mov
xor
popf
xchg
cmp
sub
push
and
cmp
jnp
pop
(bad)
(bad)
(bad)
push
sbb
ror
cli
xchg
sbb
push
(bad)
icebp
daa
jg
outs
(bad)
mov
xchg
idiv
mov
out
test
movs
xor
lahf
(bad)
call
sub
out
cld
pop
and
xchg
test
rcr
add
mov
mov
popa
clc
call
fcomp
jp
xchg
add
push
loop
fcmovu
bound
(bad)
jg
cwde
rol
fldenv
jmp
and
call
(bad)
dec
cld
test
imul
and
and
cmc
lea
(bad)
(bad)
dec
pop
scas
xor
in
cli
mov
stos
sti
movs
cli
xchg
dec
(bad)
jecxz
mov
push
mov
add
(bad)
(bad)
mov
jbe
call
(bad)
repnz
in
push
outs
and
fst
and
or
dec
pop
call
mov
push
fwait
adc
cli
mov
ja
push
push
sbb
push
sbb
jnp
lods
xchg
jge
mov
(bad)
dec
push
fs
call
ss
adc
movs
(bad)
xchg
adc
sbb
pop
xor
sub
(bad)
(bad)
dec
jnp
out
out
cmc
fimul
(bad)
mov
aas
add
and
jg
add
lea
lock
inc
dec
ss
pusha
adc
(bad)
sahf
cld
sysenter
xor
inc
inc
inc
xor
test
and
div
xor
cmp
arpl
inc
cmps
add
and
icebp
push
(bad)
inc
add
or
cli
out
xchg
outs
dec
jne
in
fst
cmp
call
(bad)
sub
add
cmps
shl
div
arpl
sbb
(bad)
mov
sbb
cmp
es
pusha
nop
add
sbb
std
mov
fnstsw
lods
jge
icebp
(bad)
(bad)
fwait
pop
and
sub
mov
or
scas
mov
jge
adc
mov
adc
mov
(bad)
(bad)
mov
or
test
xchg
retf
out
jle
(bad)
cdq
pop
or
cmc
clc
out
clc
jmp
dec
in
clc
xor
hlt
inc
xor
stos
gs
test
call
or
xchg
mov
mov
scas
inc
(bad)
(bad)
(bad)
mov
xchg
or
jo
pop
sbb
xor
cmp
ins
sbb
mov
fdivr
ret
sbb
sub
inc
and
fimul
dec
cld
mov
clc
fcmovu
mov
xor
mov
(bad)
(bad)
dec
mov
sub
mov
shl
sar
(bad)
mov
rcr
daa
jl
pop
fild
(bad)
(bad)
(bad)
call
mov
cmp
test
fwait
dec
or
and
ret
push
and
pop
mov
cdq
clc
(bad)
jmp
mov
lahf
adc
inc
mov
call
mov
(bad)
dec
out
inc
mov
mov
out
jecxz
mov
fld
call
(bad)
repz
cmp
cli
sub
in
mov
ins
dec
inc
and
int3
mov
and
jb
xchg
push
cmps
loope
sbb
(bad)
(bad)
push
jns
shl
xchg
cmps
cpuid
shr
dec
shr
mov
adc
inc
(bad)
(bad)
(bad)
jmp
mov
std
ffreep
cmps
sub
jmp
mov
push
pop
mov
push
mov
push
pop
std
push
mov
aas
ret
dec
popa
add
jmp
jmp
test
pop
ins
jecxz
inc
ret
js
sbb
ret
sub
jmp
clc
adc
dec
iret
mov
sbb
(bad)
jb
ss
push
mul
sahf
(bad)
(bad)
(bad)
dec
(bad)
cdq
adc
arpl
inc
out
mov
mov
lock
test
inc
jmp
lods
pop
outs
xor
js
xchg
jg
mov
mov
sbb
mov
push
or
in
push
adc
(bad)
(bad)
dec
movs
nop
push
enter
mov
pusha
jp
or
inc
pop
dec
xchg
pop
xchg
test
cmp
mov
xchg
into
popa
aad
(bad)
mov
dec
fcom
mov
pop
pop
pop
xor
pop
or
mov
stos
inc
je
mov
sahf
in
and
popa
sti
(bad)
(bad)
(bad)
(bad)
fidivr
popa
(bad)
mov
outs
or
ret
jae
and
push
jecxz
fisttp
test
add
dec
(bad)
xor
push
add
adc
call
stc
in
inc
xor
cld
lds
cld
and
or
nop
push
ja
outs
clc
dec
sub
arpl
pop
xchg
and
jmp
call
push
mov
push
(bad)
out
int
pusha
jo
fxrstor
jns
outs
push
dec
cmps
mov
mov
sbb
or
push
fcomip
adc
nop
sub
(bad)
(bad)
(bad)
(bad)
sti
inc
test
push
fwait
test
enter
rcl
int3
idiv
mov
fiadd
aas
sub
(bad)
(bad)
mov
mov
hlt
mov
jmp
test
pop
scas
mov
dec
in
or
cmp
bound
outs
mov
(bad)
rcr
xlat
push
pop
ss
lods
(bad)
(bad)
(bad)
jg
mov
pushf
int
fstp
stc
in
neg
jp
out
mov
(bad)
(bad)
(bad)
call
ret
or
popa
fst
mov
stos
xchg
push
dec
stc
add
cmps
or
adc
xchg
in
cld
(bad)
(bad)
(bad)
jmp
dec
cli
inc
jle
or
loopne
mov
mov
aaa
or
adc
cmp
imul
call
mov
test
cmp
jmp
inc
add
pop
pop
outs
jp
imul
(bad)
ficom
or
fistp
jle
inc
adc
mov
pop
call
clc
(bad)
(bad)
(bad)
call
das
clc
sti
(bad)
out
push
xor
out
xchg
ret
mov
sub
(bad)
(bad)
(bad)
call
mov
inc
fwait
dec
ret
jle
mov
push
lods
inc
in
es
jmp
data16
mov
stos
sti
call
jne
int
mov
(bad)
jmp
dec
xchg
ret
mov
ficom
fwait
push
mov
dec
dec
lock
(bad)
jmp
xor
or
add
and
dec
or
iret
pop
bnd
(bad)
(bad)
dec
mov
xor
or
sbb
std
out
xor
or
fisubr
sti
ins
out
and
jg
lahf
sar
(bad)
(bad)
(bad)
jmp
inc
scas
adc
(bad)
xchg
sbb
ret
nop
cmp
xchg
mov
(bad)
call
ins
and
mov
lea
(bad)
sub
ret
nop
pushf
mov
(bad)
(bad)
(bad)
mov
bnd
test
ins
(bad)
dec
call
cmp
ss
call
add
(bad)
call
iret
ins
fucomp
ret
cmp
rcl
loopne
inc
cmp
mov
mov
repnz
call
int
jb
xchg
cmp
push
and
jmp
or
(bad)
(bad)
sti
ja
push
mov
shr
pmaddwd
(bad)
pop
jg
jmp
movs
xor
(bad)
mov
imul
(bad)
(bad)
inc
xchg
mov
movups
cmp
leave
mov
sub
iret
je
(bad)
(bad)
call
test
(bad)
pop
lahf
push
push
fidivr
jle
pop
mov
mov
sub
push
cdq
fwait
scas
jmp
dec
fst
addr16
fwait
or
fidivr
imul
jg
(bad)
mov
rcr
out
dec
out
aas
loop
xchg
or
(bad)
aaa
dec
push
cli
imul
pop
popf
push
mov
(bad)
(bad)
(bad)
cmp
test
jle
int
mov
fs
(bad)
dec
push
sub
and
mov
shl
adc
jnp
dec
hlt
cmp
or
add
fcom
xchg
out
scas
mov
cld
mov
shl
ins
lods
and
sub
cmp
(bad)
(bad)
std
aaa
xor
jae
ret
push
jb
lahf
ss
dec
jo
push
sub
(bad)
xchg
add
sbb
ins
mov
(bad)
jg
sub
(bad)
mov
aad
mov
scas
(bad)
out
retf
mov
jmp
xlat
stos
sahf
pushf
fidivr
sub
fs
xor
cmp
xchg
ret
clc
(bad)
mov
and
cmp
pusha
mov
mov
jle
(bad)
(bad)
inc
pop
xor
sti
mov
call
call
or
maxps
push
stos
ss
leave
rol
dec
push
push
jmp
dec
lock
rol
idiv
mov
fisub
xor
sub
and
lods
pop
push
mov
jmp
setg
daa
les
xchg
add
je
dec
aas
fst
pop
icebp
stos
ds
stc
mov
in
sbb
and
mov
fld
call
inc
repz
gs
call
nop
pop
cld
mov
or
scas
pop
or
(bad)
mov
dec
(bad)
(bad)
(bad)
(bad)
out
mov
es
pop
ret
(bad)
pop
pushf
std
(bad)
jnp
mov
inc
xchg
adc
cwde
xor
(bad)
mov
(bad)
and
rcr
sub
(bad)
(bad)
call
cld
ins
rcr
mov
(bad)
and
xchg
rcr
rcl
cmp
cdq
sub
imul
imul
adc
cmc
cmp
(bad)
(bad)
call
int
mov
sub
cmp
push
imul
fild
sbb
push
push
es
pop
mov
and
div
mov
jle
cmp
(bad)
(bad)
fdivr
repz
in
call
mov
cld
jmp
fs
adc
or
fdivr
cmps
adc
ins
xchg
call
pop
(bad)
(bad)
call
jne
les
out
cmp
(bad)
mov
lods
inc
fld
(bad)
ja
ret
clc
jmp
cmp
inc
add
(bad)
(bad)
(bad)
mov
dec
xlat
cld
cmp
fldcw
(bad)
fnstsw
jb
ret
in
aam
adc
cmp
fwait
mov
jmp
call
sbb
iret
enter
inc
adc
movs
ss
cld
(bad)
jmp
push
or
outs
or
and
aas
cld
cld
push
xchg
(bad)
call
adc
mov
ja
jae
fisttp
sbb
xchg
mov
pop
inc
dec
xor
(bad)
(bad)
(bad)
mov
fwait
mov
pop
jmp
ret
jge
mov
pop
call
pop
mov
pushf
out
dec
sahf
mov
mov
or
and
push
xchg
(bad)
(bad)
(bad)
dec
fstp
scas
shl
add
daa
je
inc
xchg
dec
push
loope
or
(bad)
(bad)
(bad)
dec
movs
rol
jns
mov
or
pop
push
(bad)
(bad)
jmp
jae
push
sar
sbb
inc
ss
pop
das
dec
nop
mov
ja
les
adc
stos
adc
scas
inc
(bad)
mov
nop
jp
aad
leave
xchg
and
in
push
adc
(bad)
(bad)
mov
test
mov
(bad)
xor
mov
jg
jnp
jae
(bad)
shl
jge
pop
cmp
ins
xor
xchg
add
(bad)
push
pusha
and
jne
mov
jne
test
fld
jg
inc
xor
(bad)
(bad)
call
add
sbb
retf
pushf
nop
cmp
dec
hlt
mov
adc
sub
xchg
mov
mov
out
mov
cmp
sbb
icebp
(bad)
(bad)
sti
pop
and
cdq
stc
inc
hlt
jbe
jecxz
pop
jg
(bad)
clc
repz
fstp
(bad)
std
jecxz
clc
call
sahf
mov
mov
je
ins
sub
pop
sub
(bad)
(bad)
call
mov
gs
icebp
push
ret
and
sti
dec
call
rol
(bad)
call
cld
leave
aaa
sbb
and
pop
jmp
(bad)
jne
ret
mov
add
sub
ins
xchg
sbb
(bad)
(bad)
(bad)
mov
push
xchg
xchg
repz
nop
gs
sub
sbb
jmp
cli
mov
std
stc
test
lock
push
sbb
aam
dec
xchg
out
call
(bad)
call
sahf
jae
xchg
mov
addr16
(bad)
(bad)
(bad)
(bad)
js
sar
jae
cwde
jmp
mov
lods
aaa
xchg
gs
mov
lds
in
push
lock
(bad)
call
mov
bound
xor
xchg
sahf
ins
or
call
fiadd
(bad)
(bad)
fucomip
cmc
xchg
mov
test
aas
aaa
fwait
lea
rol
(bad)
aad
jl
scas
clc
dec
hlt
xchg
cwde
out
movs
sti
fdiv
jmp
clc
inc
xor
cs
or
jmp
xor
stc
sub
push
outs
sbb
(bad)
call
push
cmp
aad
cmp
retf
rcr
fsub
in
enter
or
(bad)
(bad)
inc
lock
push
stos
in
shr
sar
cmp
sti
mov
das
sar
pop
adc
xchg
jmp
daa
and
int
icebp
mov
mov
lock
cld
or
(bad)
loope
mul
(bad)
jg
aad
mov
cwde
push
inc
cli
(bad)
jle
scas
mov
std
mov
(bad)
(bad)
dec
scas
cld
or
retf
fdivrp
div
sti
mov
(bad)
(bad)
push
sbb
mov
cdq
or
push
jle
stos
push
cli
xor
(bad)
(bad)
(bad)
jmp
jl
sub
and
aam
cmp
inc
or
dec
(bad)
je
xor
cmc
push
lock
hlt
jmp
and
add
jne
adc
into
(bad)
call
adc
cmps
imul
dec
es
js
mov
(bad)
call
movs
(bad)
sub
std
lods
movs
rol
inc
daa
add
xor
push
dec
popa
scas
test
mov
sub
repnz
jbe
test
(bad)
in
aas
push
stos
ins
arpl
mov
dec
fdivr
sbb
in
cmp
and
adc
outs
push
mov
(bad)
(bad)
(bad)
(bad)
jmp
jmp
hlt
dec
lahf
mov
std
sti
cwde
jecxz
das
aam
mov
ror
jecxz
or
nop
in
sub
les
clc
mov
cwde
test
adc
fnstcw
cmp
call
faddp
ins
icebp
ds
int
adc
add
adc
leave
inc
mov
(bad)
dec
and
movs
jp
sub
fcomp
mov
scas
aam
cmp
aad
(bad)
(bad)
inc
push
stc
xchg
ss
mov
or
sbb
int
sub
mov
stos
fs
fiadd
cld
xor
jp
lahf
pop
sahf
xchg
jp
cli
(bad)
dec
out
(bad)
ficom
test
mov
lock
rol
pop
enter
retf
shl
pop
xchg
fs
(bad)
dec
ins
fcmovnb
syscall
ss
(bad)
nop
bswap
repnz
popa
adc
sbb
mov
aaa
mov
adc
es
dec
push
and
ror
inc
mov
(bad)
(bad)
(bad)
call
and
dec
(bad)
cld
fidiv
popf
sahf
mov
clc
sub
rcl
test
fdiv
mov
(bad)
(bad)
jmp
mov
lahf
cmp
jl
mov
sub
test
daa
dec
popa
jbe
(bad)
(bad)
jmp
icebp
mov
fwait
sbb
enter
mov
mov
ficomp
outs
(bad)
(bad)
(bad)
(bad)
fidivr
add
push
daa
mov
adc
outs
loopne
aas
test
mov
mov
icebp
dec
push
mov
fs
addr16
movs
sub
inc
push
or
mov
outs
cmps
fisubr
pusha
adc
jg
sbb
pop
dec
mov
fistp
push
or
loopne
and
mov
mov
(bad)
call
adc
imul
inc
jae
std
mov
adc
and
jbe
mov
jmp
or
xor
pop
inc
add
mov
xor
mov
(bad)
mov
or
inc
aad
repz
fmul
enter
pop
and
pop
or
(bad)
jmp
rcl
in
retf
aas
repz
jg
jmp
std
movs
(bad)
in
push
and
xchg
mov
(bad)
jmp
sbb
pop
mov
inc
push
loopne
add
cmc
sub
(bad)
call
nop
sub
cld
popf
pusha
sub
fcom
sar
(bad)
or
push
push
popa
pop
push
cli
fisttp
jg
push
scas
sub
repz
and
push
sub
xlat
dec
push
sbb
ficom
rcr
retf
adc
movs
pushf
dec
js
jl
or
das
cli
jg
out
mov
fcmovnu
inc
push
adc
dec
loope
ds
div
(bad)
(bad)
cmp
call
sti
jmp
inc
push
outs
fiadd
(bad)
(bad)
mov
add
std
call
jns
dec
out
outs
loop
imul
out
xor
dec
dec
in
shl
sar
mov
push
pop
in
inc
lahf
cmp
ja
scas
fld
cli
fwait
xor
ss
sbb
mov
mov
in
int3
xor
fwait
pop
mov
xor
add
call
xchg
lock
arpl
adc
addr16
jl
fist
repnz
lock
dec
mov
data16
jl
sub
lock
call
retf
push
xchg
pop
add
leave
addr16
bound
test
jmp
mov
push
clc
fdivr
(bad)
call
or
and
dec
mov
sar
je
in
pop
and
(bad)
call
cmp
stos
test
xchg
push
lods
fisub
pop
aad
and
(bad)
jns
jecxz
out
mov
and
ins
bound
(bad)
call
and
(bad)
lds
jge
shr
(bad)
daa
mov
cmp
ja
mov
aad
jno
xchg
loop
ins
les
(bad)
push
test
out
xor
repnz
pop
dec
into
dec
add
mov
fs
xor
icebp
sub
jg
cmp
nop
lods
push
cdq
xchg
sub
mov
sbb
cld
cmp
mov
add
xchg
repnz
push
push
and
adc
inc
lods
clc
retf
sbb
js
adc
outs
fnstcw
jo
mov
(bad)
call
fistp
call
or
inc
cmps
jl
inc
(bad)
sar
icebp
jge
jg
inc
addr16
(bad)
jg
mov
inc
popf
call
je
mov
and
aam
mov
sub
(bad)
(bad)
inc
jecxz
and
scas
lds
dec
pop
inc
mov
loope
jmp
loopne
scas
mov
imul
mov
jl
inc
pop
adc
test
(bad)
push
std
mov
es
add
rcl
cmp
mov
jbe
fs
(bad)
(bad)
(bad)
(bad)
cmp
xchg
aad
ds
pop
cli
or
rol
or
sub
or
(bad)
call
pop
dec
add
(bad)
or
inc
or
fs
xor
push
add
pop
jmp
adc
das
cli
dec
and
xchg
push
lods
inc
retf
repz
and
adc
mov
or
ret
fadd
ret
hlt
ja
test
mov
sub
lock
or
dec
sbb
retf
jmp
cmp
scas
xor
(bad)
call
test
sar
jmp
pop
retf
iret
(bad)
and
push
in
retf
lds
inc
scas
fdivr
add
pop
das
mov
jmp
jmp
(bad)
(bad)
(bad)
(bad)
jnp
xchg
ins
xacquire
shl
cmp
leave
adc
sbb
push
add
(bad)
(bad)
(bad)
jmp
push
loope
adc
shl
fs
and
dec
ficom
cmp
sbb
and
sti
mov
cld
jmp
cmp
fwait
inc
movs
pop
inc
lds
mov
outs
and
fmulp
fdiv
daa
xchg
mov
imul
out
sbb
xchg
sar
(bad)
fcomip
es
ror
cmp
and
scas
das
scas
dec
fistp
jle
push
sbb
(bad)
(bad)
call
and
mov
fcom
mov
sbb
sbb
out
mov
inc
aam
fucomp
mov
cmp
lock
mov
sub
(bad)
(bad)
xlat
pop
ret
mov
out
aas
mov
or
das
jle
rcr
or
ret
inc
leave
dec
lock
outs
std
and
jbe
jg
imul
iret
cmp
sti
ins
adc
pop
cmp
inc
dec
push
mov
loop
sbb
xchg
bound
fmul
or
(bad)
(bad)
call
fwait
das
rcr
jl
pop
or
dec
or
pushf
mov
rcl
adc
(bad)
(bad)
call
sbb
jbe
sahf
leave
lods
push
mov
fstp
(bad)
loopne
add
mov
leave
aam
mov
stos
and
call
mov
jno
cmps
sahf
cmp
cmps
rcr
mov
mov
(bad)
mov
mov
outs
add
dec
outs
push
(bad)
(bad)
(bad)
jmp
jbe
mov
(bad)
sub
mov
and
(bad)
xchg
(bad)
jg
or
push
mov
push
aad
(bad)
jns
mov
call
mov
shl
xchg
sub
loop
rcr
or
sbb
test
(bad)
push
jecxz
bound
dec
iret
adc
ins
mov
or
jl
push
mov
(bad)
hlt
cmp
(bad)
call
int
test
xchg
in
enter
adc
xor
lods
gs
iret
in
daa
mov
xchg
(bad)
dec
(bad)
aad
call
adc
rol
mov
mov
jb
(bad)
(bad)
call
sti
(bad)
pushf
les
mov
jg
(bad)
in
(bad)
icebp
sahf
mov
mov
pop
sar
std
(bad)
ds
jb
push
mov
push
push
dec
dec
loop
add
ins
call
push
jno
mov
add
lea
cmp
popa
and
popa
ins
sbb
xor
(bad)
(bad)
call
shl
call
fisub
pop
mov
pop
pop
icebp
std
in
mov
call
pushf
xchg
adc
inc
lods
ss
or
sbb
ins
xchg
push
xor
in
imul
sbb
and
dec
mov
cwde
inc
mov
inc
pmulhuw
mov
retf
pushf
inc
lahf
int
inc
jnp
neg
inc
es
les
(bad)
(bad)
call
fdivr
rcl
popa
and
(bad)
std
inc
(bad)
pop
ret
cmps
std
mov
(bad)
jns
cmps
add
mov
cld
xchg
add
in
retf
mov
cmp
dec
retf
cld
iret
int3
addr16
push
(bad)
(bad)
jmp
mov
ss
jmp
dec
fnsetpm(287
and
dec
fwait
adc
call
std
inc
mov
mov
sbb
bnd
sub
iret
rol
pop
out
sbb
pop
sbb
(bad)
dec
in
pop
jne
pop
ror
dec
loopne
push
cmp
pop
movs
adc
mov
(bad)
dec
jne
mov
jbe
mov
in
lahf
mov
jmp
mov
jo
sbb
shl
xchg
(bad)
(bad)
push
fist
scas
mov
push
test
sbb
sbb
cvtpi2ps
(bad)
(bad)
(bad)
push
push
mov
add
push
mov
cmc
ja
test
fisttp
and
sub
mov
pop
ja
ror
push
test
xor
sbb
(bad)
hlt
call
xor
inc
push
mov
pop
imul
(bad)
mov
pop
jle
retf
js
jl
lods
iret
pop
fsub
add
inc
mov
and
loope
add
mov
dec
(bad)
jmp
bound
mov
aad
or
pop
daa
cmp
dec
and
and
adc
leave
xor
jo
or
in
push
(bad)
(bad)
(bad)
jge
sbb
mov
pop
and
mul
aam
(bad)
(bad)
mov
mov
cmp
call
cmp
cmp
pop
push
pop
adc
push
cld
sbb
add
pop
mov
pop
call
ins
xor
pop
in
sub
retf
or
les
mov
emms
loopne
in
jb
ins
jg
inc
dec
out
cmps
jmp
inc
xchg
mov
gs
movs
loope
(bad)
(bad)
call
xor
and
mov
add
addr16
loopne
loopne
inc
pop
push
mov
sub
sahf
loope
xlat
daa
jb
and
dec
and
std
outs
dec
addr16
(bad)
call
das
jnp
cdq
cmp
mov
mov
bound
cmp
je
push
inc
mul
jl
call
push
imul
jl
mov
adc
cmps
pop
mov
scas
push
pop
cmc
dec
test
fs
dec
push
loop
jbe
js
mov
addr16
(bad)
(bad)
(bad)
fisub
(bad)
icebp
hlt
cmp
jae
lea
aaa
pop
mov
pop
fdivr
sbb
pop
fisttp
mov
push
xor
pusha
or
in
(bad)
call
jl
dec
push
dec
loope
imul
icebp
xchg
sub
cmp
xchg
aad
aam
(bad)
(bad)
dec
mov
mov
and
leave
jae
jp
mov
mov
jl
mov
xchg
in
xchg
sub
mov
data16
xchg
sbb
pop
mov
js
test
movs
mov
ins
xlat
(bad)
(bad)
jmp
sub
leave
inc
rol
adc
pop
cmp
dec
test
inc
(bad)
jg
xchg
sub
jp
call
mov
xor
pop
dec
call
gs
(bad)
stos
out
push
inc
lods
push
daa
xor
dec
cmp
imul
add
(bad)
es
sub
dec
fisub
sbb
jb
mov
nop
mov
xchg
push
or
call
dec
push
ret
inc
mov
jl
dec
lods
xor
mov
nop
in
int
pop
mov
retw
pop
repnz
push
dec
jmp
outs
loope
out
inc
mov
addr16
mov
in
sar
mov
loope
(bad)
call
pop
jecxz
test
repz
push
stos
outs
(bad)
aam
xor
(bad)
mov
sbb
pop
ja
cmc
test
or
rol
xchg
push
add
lds
into
mov
(bad)
(bad)
(bad)
dec
and
call
dec
shl
mov
mov
jo
cld
jecxz
fdivp
sahf
ret
ins
rcl
sbb
mov
jb
and
mov
and
jp
test
and
leave
xor
inc
mov
push
add
jcxz
das
(bad)
addr16
pop
push
mov
xchg
push
add
(bad)
(bad)
(bad)
jmp
xor
(bad)
sahf
clc
std
call
mov
or
shl
popa
pop
cmc
adc
pop
(bad)
mov
add
mov
fldcw
mov
ss
add
xor
nop
push
inc
dec
cmc
xchg
pop
loopne
jg
sub
inc
jg
mov
(bad)
or
mov
cmp
pop
xor
mov
(bad)
dec
vfnmadd231sd
shl
bound
(bad)
pushf
sahf
or
push
mov
nop
add
(bad)
inc
call
jmp
cmp
mov
(bad)
dec
jle
cdq
out
xor
xchg
out
sub
clc
xchg
adc
mov
dec
ss
adc
(bad)
(bad)
(bad)
dec
sub
call
ret
ins
mov
retf
inc
cmp
shl
lods
sbb
(bad)
inc
xchg
rcl
shl
retf
jmp
jne
or
and
mov
(bad)
(bad)
(bad)
inc
retf
sbb
dec
dec
push
add
rcl
fs
xchg
jns
mov
xor
or
ss
sub
stos
(bad)
mov
call
ret
xchg
cmps
xchg
repz
(bad)
(bad)
(bad)
dec
cmps
fistp
push
jbe
push
jne
fwait
cmp
in
les
push
xor
cmp
jo
push
pop
jmp
cld
mov
push
and
adc
mov
adc
outs
(bad)
(bad)
(bad)
jmp
pop
pop
or
cmps
loopne
xchg
pusha
mov
sahf
mov
push
hlt
sbb
pop
repnz
pop
push
std
(bad)
(bad)
fstp
mov
inc
into
int
dec
adc
cmp
ror
push
inc
dec
and
and
sbb
mov
in
mov
xchg
(bad)
lock
pusha
and
(bad)
(bad)
mov
and
mov
inc
dec
dec
xchg
scas
shl
imul
fnstenv
or
(bad)
push
mov
dec
pop
ror
std
in
movq
(bad)
jmp
out
fistp
xor
fwait
inc
and
and
push
mov
push
fistp
jo
jne
jae
clc
jmp
push
lods
sar
ficom
(bad)
ins
scas
mov
add
sahf
and
sbb
std
(bad)
jg
aas
je
dec
dec
push
icebp
lea
jge
cmp
or
cmp
cdq
movs
adc
retf
pop
mov
or
xor
add
mov
clc
mov
push
push
add
adc
xchg
cmp
adc
iret
das
push
(bad)
lock
adc
pop
cmc
jmp
cld
repz
pop
int
xchg
in
pop
push
inc
pop
inc
or
sbb
nop
je
jmp
ret
mov
sbb
in
lods
les
xchg
ins
shl
cvtpi2ps
sbb
rcl
loopne
lods
adc
outs
cmp
movs
out
xchg
xchg
dec
cmp
mov
lock
fs
cmp
jge
or
je
mov
inc
(bad)
(bad)
(bad)
fild
shl
mov
add
cmp
sbb
jl
cmps
jo
scas
xchg
lahf
(bad)
(bad)
(bad)
(bad)
jg
int3
mov
mov
cmp
imul
lds
push
mov
pop
call
nop
clc
pop
iret
mov
or
sbb
add
(bad)
push
mov
pop
(bad)
ficom
sahf
xchg
xchg
fsub
xchg
sbb
adc
cmp
sub
mov
sbb
sbb
imul
mov
(bad)
(bad)
push
sub
xlat
lods
(bad)
test
jecxz
mov
int3
addr16
xchg
cmps
mov
jecxz
lahf
pop
or
pop
dec
and
clc
(bad)
dec
and
push
and
movs
cs
stos
xchg
mov
push
cmp
inc
fiadd
jle
imul
mov
cmps
xchg
push
ds
rcl
cmc
jae
cld
push
pushf
mov
mov
(bad)
dec
cmp
mov
and
scas
pusha
mov
jg
jno
cli
cli
popf
clc
stc
ja
or
xchg
nop
xchg
outs
popa
jle
push
sti
dec
dec
popa
fbstp
jmp
xor
leave
mov
stos
xchg
shl
arpl
and
clc
js
ret
mov
(bad)
(bad)
out
jp
xchg
dec
jecxz
ja
clc
xor
push
mov
cmp
adc
pop
cmp
(bad)
jmp
fist
shr
imul
adc
sub
or
dec
jne
or
(bad)
(bad)
jmp
repz
repz
lods
or
dec
icebp
test
test
ficom
(bad)
jg
cwde
push
sub
cmp
xchg
shl
bnd
pop
fld
dec
and
(bad)
call
leave
fnstenv
mov
pop
and
push
push
sub
mov
test
lahf
jmp
in
pusha
adc
test
clc
(bad)
(bad)
mov
js
test
xchg
imul
stc
pop
xchg
push
sub
(bad)
shl
inc
rcr
cmp
(bad)
(bad)
mov
jne
and
mov
mov
xchg
out
mov
push
mov
mov
imul
(bad)
in
add
mov
lds
jnp
(bad)
mov
pop
and
movs
xlat
sub
int
mov
call
pop
add
jmp
mov
fisttp
dec
and
cmp
and
push
sub
jnp
push
adc
repnz
push
xchg
mov
sahf
dec
jecxz
(bad)
stc
cmp
(bad)
call
push
movs
daa
pop
les
cdq
mov
sbb
jmp
fsub
(bad)
(bad)
push
pushf
mov
or
mov
dec
mov
mov
lods
push
dec
ret
jbe
sar
repz
retf
(bad)
(bad)
jmp
clc
add
(bad)
or
movs
adc
and
pop
(bad)
ins
mov
scas
clc
cmc
push
stc
loopne
inc
imul
mov
daa
mov
clc
dec
jl
mov
jp
scas
(bad)
bound
sub
inc
dec
fisttp
sbb
outs
bound
xchg
sar
cld
(bad)
jmp
(bad)
pop
push
in
ror
xlat
pop
push
adc
mov
(bad)
push
int
or
ret
enter
test
arpl
pop
dec
adc
cwde
cwde
cdq
ret
mov
(bad)
(bad)
mov
(bad)
shl
retf
adc
add
fs
mov
xchg
sahf
push
sahf
(bad)
(bad)
(bad)
jmp
xor
push
cmp
jmp
mov
loope
in
mov
out
gs
push
push
add
iret
retf
dec
mov
mov
(bad)
(bad)
(bad)
push
dec
(bad)
pop
inc
cmp
push
xchg
outs
test
loop
scas
add
arpl
(bad)
(bad)
(bad)
call
push
pop
aas
push
pop
pop
or
jecxz
lock
lock
xchg
scas
lods
lods
stos
inc
cdq
(bad)
(bad)
(bad)
call
mov
lds
cmps
pushf
mov
dec
(bad)
xor
mov
stos
out
jle
jmp
mov
jge
inc
cld
or
fistp
dec
push
int
push
mov
fnstenv
repnz
inc
and
jg
(bad)
call
(bad)
scas
xor
mov
int3
ret
retf
addr16
mov
mov
lahf
mov
fwait
push
xor
daa
test
hlt
mul
(bad)
fbld
repnz
repz
sahf
shr
adc
dec
sbb
sbb
add
rcl
gs
dec
int
enter
loopne
ds
xchg
jecxz
pop
cwde
add
inc
xchg
xchg
inc
or
sbb
mov
sar
lods
(bad)
dec
sbb
mov
and
xor
xlat
pop
fnstcw
adc
pusha
in
sbb
cmp
out
sar
jne
clc
(bad)
(bad)
call
dec
data16
icebp
cmp
std
cmp
xor
dec
int3
pushf
les
mov
por
mov
adc
lds
dec
cmp
cmp
jl
push
jmp
(bad)
mov
scas
(bad)
dec
(bad)
xor
add
loopne
mov
fild
mov
or
adc
mov
call
(bad)
(bad)
fbld
push
mov
and
xchg
sbb
mov
jle
mov
pushf
pop
sbb
ja
cmp
inc
ja
(bad)
(bad)
cmp
or
les
sub
mov
xchg
dec
(bad)
(bad)
(bad)
(bad)
jl
mov
dec
push
test
and
mov
clc
sti
sbb
mov
fsubr
cmp
xchg
jbe
(bad)
(bad)
(bad)
call
push
sub
xchg
xor
in
inc
in
adc
call
into
(bad)
jg
inc
ret
mov
pop
xlat
push
mov
daa
(bad)
and
jmp
scas
mov
aam
les
or
out
mov
jnp
jne
cli
(bad)
jmp
fimul
(bad)
inc
loope
nop
cs
js
punpckhdq
ss
jmp
or
dec
push
inc
cmp
hlt
(bad)
cmp
xchg
inc
cmps
in
loopne
gs
dec
in
int3
shr
pop
mov
sbb
inc
xchg
ja
(bad)
(bad)
cld
dec
fcomi
pop
scas
xchg
iret
jno
daa
xchg
jle
push
repz
adc
lock
std
sbb
or
inc
mov
xor
adc
jg
jo
dec
pop
in
adc
popf
jle
movs
rcr
sub
sti
in
adc
add
(bad)
call
sbb
outs
int3
jns
inc
scas
lock
xor
outs
ss
pop
je
(bad)
(bad)
mov
in
jno
sahf
mov
mov
bound
inc
sbb
cs
out
not
clc
push
cld
jmp
push
idiv
cmc
lahf
mov
(bad)
movs
jb
movs
shl
scas
jmp
add
out
sahf
cwde
pushf
jle
xor
cs
(bad)
(bad)
jmp
pop
sub
mov
cdq
push
xlat
shr
je
pusha
dec
mov
inc
retf
ss
clc
(bad)
dec
sub
mov
retf
dec
(bad)
cmps
ret
jg
inc
xor
dec
fimul
jmp
(bad)
mov
sub
xlat
cmp
xor
or
cld
cmp
loop
mov
mov
in
call
call
mov
(bad)
in
sti
icebp
(bad)
out
jno
scas
mov
fst
push
(bad)
(bad)
mov
ret
push
pusha
in
mov
aaa
sub
adc
cmp
(bad)
inc
cld
pop
test
addr16
popf
xchg
scas
or
jmp
(bad)
(bad)
(bad)
inc
mov
aad
inc
int3
aaa
pop
movs
stos
and
push
push
xchg
xchg
dec
jecxz
jmp
cmp
mov
lock
imul
dec
(bad)
(bad)
jmp
dec
inc
inc
xchg
out
imul
dec
inc
dec
push
sub
fcom
(bad)
call
inc
push
inc
sbb
in
jl
shr
add
stos
(bad)
jg
das
sub
mov
aam
pop
sub
int3
ja
js
dec
cmps
mov
jg
stos
xchg
pop
xchg
mov
(bad)
lea
fisttp
lock
fild
(bad)
(bad)
(bad)
call
or
push
stos
movs
jp
push
mov
std
xchg
aam
(bad)
cmp
in
jns
mov
scas
inc
imul
pop
ror
xchg
xchg
fs
fidiv
jns
add
retf
sbb
sub
fidivr
fsubr
(bad)
sbb
not
mov
cld
or
into
retf
daa
rcl
mov
pmuludq
sbb
xor
sbb
sub
xor
mov
add
retf
inc
add
(bad)
jl
(bad)
pusha
jecxz
mov
xchg
adc
scas
(bad)
(bad)
call
aam
jb
test
(bad)
or
stos
movs
and
cli
add
leave
jbe
(bad)
(bad)
(bad)
jmp
into
inc
je
popf
mov
scas
pop
push
or
mov
lea
(bad)
push
repnz
(bad)
(bad)
(bad)
jmp
sti
and
scas
in
(bad)
cmps
gs
sar
cmp
push
lahf
inc
and
outs
adc
sbb
push
mov
aaa
jae
cmp
cmps
add
xor
(bad)
fisttp
out
ss
xor
sub
fisubr
test
jae
push
and
out
(bad)
(bad)
dec
mov
test
xor
jl
stos
movs
adc
jg
in
mov
(bad)
(bad)
call
nop
mov
scas
jmp
or
hlt
mov
scas
int
cmp
sub
inc
push
adc
stos
push
(bad)
(bad)
(bad)
dec
jnp
and
clc
outs
out
jl
ret
pop
cs
shl
mov
sbb
push
(bad)
pop
or
aam
rcl
inc
mov
add
ins
cmp
test
scas
rol
sbb
outs
in
sbb
sub
loope
aaa
fiadd
stc
(bad)
mov
jmp
cmp
rcr
jge
jo
daa
mov
dec
aaa
pop
(bad)
(bad)
std
or
cld
pop
add
les
add
xor
dec
dec
int
mov
dec
xor
fcos
jmp
fs
sahf
out
test
gs
pop
fst
lea
push
ret
nop
xlat
(bad)
(bad)
call
and
xchg
rcr
jae
push
mov
pop
fnstenv
(bad)
(bad)
(bad)
jg
add
xchg
push
jo
mov
js
loope
mov
dec
fiadd
jge
mov
test
cld
push
sbb
adc
fcomip
xor
xchg
pusha
push
movs
push
iret
mov
(bad)
(bad)
call
push
sub
sbb
xchg
dec
int3
loop
mov
movs
inc
mov
inc
lock
cld
mov
add
test
stos
mov
mov
(bad)
call
xor
mov
icebp
mov
clc
gs
inc
cld
cmp
jp
fwait
in
in
leave
or
add
(bad)
mov
inc
mov
js
cdq
out
pop
repz
cmp
push
rcr
iret
cs
mov
jb
loopne
(bad)
(bad)
call
leave
adc
imul
adc
pop
push
je
mov
pop
xchg
mov
call
xor
sub
call
and
sbb
out
(bad)
retf
mov
call
and
sti
mov
dec
in
sbb
cmp
addr16
sbb
jmp
clc
(bad)
(bad)
(bad)
(bad)
jge
inc
jno
in
mov
movs
add
dec
sub
movs
icebp
pop
stos
push
in
pop
(bad)
(bad)
(bad)
inc
mov
ror
leave
js
div
or
cli
addr16
sbb
mov
add
pop
or
sbb
cmp
or
cmp
mov
inc
pop
stc
out
arpl
cld
call
shl
xchg
mov
dec
add
aaa
cld
mov
mov
imul
outs
xchg
mov
mov
mov
adc
pop
xchg
test
inc
arpl
inc
fdivr
mov
add
(bad)
(bad)
(bad)
call
push
and
sbb
stos
or
mov
jmp
dec
retf
jmp
(bad)
(bad)
inc
das
add
sti
in
xchg
das
in
int3
retf
lahf
or
fisttp
fcom
test
jmp
xor
shr
mov
call
jg
mov
and
pop
mov
inc
cli
or
and
(bad)
(bad)
(bad)
call
adc
sbb
pop
pop
and
pop
inc
add
xlat
jmp
in
pop
inc
cmps
(bad)
(bad)
dec
test
push
ins
fild
xchg
rol
xor
ror
or
add
(bad)
(bad)
inc
cdq
and
inc
imul
fcomip
mov
cmp
lods
jbe
loope
pop
daa
fisub
(bad)
retf
xchg
fucom
inc
adc
push
imul
cs
pop
(bad)
inc
sbb
sbb
or
out
inc
lea
movs
jbe
ss
ret
dec
cdq
mov
test
(bad)
jmp
aas
push
lods
and
(bad)
or
ins
mov
ins
jbe
arpl
sbb
outs
or
jo
mov
test
sar
jo
(bad)
sti
sbb
(bad)
(bad)
push
dec
xchg
sbb
sub
adc
mov
add
pop
das
out
xchg
iret
(bad)
fldcw
div
jae
cs
mov
jle
stc
fmulp
hlt
sahf
mov
inc
test
dec
xchg
jae
(bad)
(bad)
(bad)
(bad)
(bad)
jle
gs
cmp
movs
and
in
mov
dec
aad
dec
arpl
and
and
jmp
mov
mov
mov
mov
jo
rdpmc
adc
push
ret
pop
loopne
or
push
stc
cmc
cmps
jno
inc
in
jmp
inc
ret
mov
adc
mov
(bad)
(bad)
(bad)
mov
add
dec
add
int
push
das
mov
aaa
inc
into
jmp
movs
ja
in
cld
xchg
and
sti
push
push
cld
xchg
out
pop
jp
gs
mov
jnp
mov
push
adc
jno
sbb
(bad)
or
ret
jns
jo
imul
jo
(bad)
dec
adc
push
nop
repnz
loopne
push
(bad)
(bad)
(bad)
inc
mov
fdivr
push
pop
lea
(bad)
mov
mov
xor
stos
adc
ret
(bad)
ja
daa
mov
bound
sbb
pop
xchg
stos
(bad)
(bad)
call
fstp
pop
ins
dec
xor
mov
out
std
adc
(bad)
(bad)
fimul
add
in
mov
scas
mov
(bad)
push
retf
push
push
int
sbb
jb
(bad)
(bad)
call
mov
mov
xchg
daa
cmp
mov
fisttp
in
push
stos
jo
or
(bad)
(bad)
jmp
add
lods
fcomp
sub
sar
sub
add
in
(bad)
addr16
dec
or
in
(bad)
(bad)
(bad)
(bad)
call
dec
dec
add
xchg
mov
stos
add
mov
push
into
repnz
(bad)
(bad)
fdiv
cmp
dec
stc
cmp
dec
adc
xchg
test
test
int
push
cs
lahf
mov
leave
dec
xor
cmp
or
lock
and
scas
dec
(bad)
(bad)
(bad)
dec
xor
cmp
and
xor
mov
fld
aas
push
int
(bad)
(bad)
(bad)
call
repnz
sub
sbb
aam
jo
mov
retf
mov
jge
inc
neg
(bad)
cmp
test
cmp
movs
(bad)
ins
xlat
sub
jne
xor
cmp
(bad)
push
(bad)
(bad)
(bad)
dec
ins
addr16
pop
lds
or
add
mov
(bad)
idiv
jp
ja
call
push
ins
mov
loop
fsub
cmc
rcl
add
hlt
call
call
push
cmp
shr
push
ror
push
adc
ret
cmps
addr16
(bad)
cmp
mov
dec
jp
mov
std
clc
cs
and
call
cvtps2pd
(bad)
jns
jns
aad
scas
mov
mov
loop
pusha
shl
ficom
out
mov
push
clc
jbe
or
xchg
xchg
jl
pop
cmp
(bad)
jmp
cwde
jo
and
aas
sbb
iret
test
fs
dec
push
sub
mov
not
idiv
mov
loopne
jns
mov
pop
xlat
push
rol
mov
repnz
jmp
xor
sbb
clc
inc
daa
ss
mov
inc
(bad)
sub
jg
add
or
(bad)
(bad)
(bad)
(bad)
fdivr
adc
cmp
(bad)
pusha
mov
leave
and
or
cmp
retf
mov
(bad)
(bad)
(bad)
inc
inc
inc
scas
fbstp
(bad)
inc
pop
xchg
jne
xor
mov
adc
or
push
cmp
jge
fs
(bad)
(bad)
jnp
pop
cwde
loope
int3
das
mov
inc
popf
pushf
push
(bad)
repz
clc
imul
xchg
sbb
jg
sbb
push
push
or
(bad)
call
(bad)
in
xor
out
(bad)
fild
cmp
sar
jg
jg
cli
xchg
retf
push
push
repnz
je
jbe
pop
push
sbb
pop
inc
(bad)
(bad)
dec
sbb
lods
jl
aas
cmp
fwait
cmc
retf
xchg
mov
xor
and
mov
outs
push
pop
adc
dec
repnz
cmps
movs
je
jg
jbe
jg
cmp
(bad)
(bad)
(bad)
jmp
sbb
xor
inc
mov
adc
shl
sbb
add
enter
xchg
sub
stos
loope
lahf
mov
ror
push
ss
jmp
push
push
sbb
mov
mov
fsub
loop
popf
dec
enter
mov
outs
sahf
dec
inc
fdivr
cmp
xor
loopne
adc
jno
sub
inc
push
push
xor
(bad)
xor
(bad)
(bad)
inc
stos
in
lds
aaa
call
mov
lods
xchg
frstor
inc
in
sbb
ror
dec
inc
dec
shr
lds
sub
sub
popa
ds
fwait
mov
jg
movs
ds
je
mov
xchg
jns
pop
mov
dec
or
(bad)
dec
lock
push
ss
nop
cmps
cli
dec
shl
dec
and
movs
cs
outs
xchg
test
pop
es
ret
rcr
sub
fs
xchg
(bad)
mov
fistp
fbld
cmps
les
mov
push
mov
mov
mov
mov
sar
fisttp
mov
lock
int
je
stos
stos
pop
retf
(bad)
mov
jne
nop
jns
add
pop
push
push
cmp
pop
(bad)
das
(bad)
(bad)
dec
push
ret
(bad)
call
sbb
xchg
mov
xchg
jge
arpl
(bad)
pop
and
jno
call
dec
outs
xchg
out
dec
(bad)
jmp
jbe
or
cmp
cs
movs
sbb
dec
and
movs
and
(bad)
(bad)
(bad)
jmp
xlat
sub
push
or
push
dec
jns
scas
je
retf
mov
mov
jle
adc
(bad)
cmp
outs
xor
jge
add
mov
daa
pop
div
or
(bad)
(bad)
(bad)
push
pop
and
lods
mov
inc
cmc
xchg
mov
test
xor
test
cmps
xchg
popa
mov
mov
sbb
mov
(bad)
(bad)
push
mov
or
pop
mov
pop
cmps
dec
push
xor
subps
(bad)
(bad)
(bad)
mov
or
jb
ss
inc
(bad)
jge
mov
(bad)
js
aad
mov
(bad)
(bad)
(bad)
jmp
test
jge
sbb
lock
cmc
jg
int3
test
adc
call
(bad)
(bad)
jmp
je
sar
xor
xlat
push
inc
in
xor
jne
xchg
pop
(bad)
(bad)
(bad)
(bad)
ds
adc
cmp
push
enter
in
sub
lahf
or
jge
mov
mov
jmp
pop
add
xor
and
sub
in
mov
in
(bad)
(bad)
(bad)
jmp
imul
mov
ror
pop
push
jmp
push
call
(bad)
inc
inc
es
mov
jns
mov
fs
pop
cmp
jl
in
js
(bad)
(bad)
jmp
(bad)
xor
lods
push
retf
xchg
pop
cmc
jp
and
sar
cmp
push
(bad)
dec
test
dec
or
and
ficomp
aad
sub
ret
test
cmp
add
mov
jp
or
jo
lods
adc
cmps
imul
(bad)
imul
aaa
hlt
push
push
out
mov
and
and
inc
push
aaa
cld
(bad)
call
in
fisttp
xor
mov
fwait
mov
jae
shl
(bad)
dec
push
push
shr
(bad)
sbb
xchg
push
pop
stos
adc
inc
ret
ds
clc
popa
std
fadd
jl
(bad)
sbb
iret
push
xchg
push
sub
repnz
pop
in
mov
jo
in
push
test
idiv
inc
push
(bad)
xchg
add
sub
in
(bad)
mov
xor
rol
jmp
cmc
add
dec
or
int3
pop
int
mov
cmp
retf
xchg
(bad)
mov
into
es
cmps
mov
movs
xchg
jmp
(bad)
(bad)
inc
(bad)
dec
dec
cmp
add
jne
call
push
movs
pop
mov
jl
xchg
(bad)
mov
mov
push
mov
sub
loop
(bad)
(bad)
jg
xor
or
mov
mul
cmp
pop
mov
pop
bound
fild
mov
fdivr
ins
inc
ja
sub
mov
(bad)
(bad)
(bad)
jmp
pop
push
out
push
pop
push
xlat
inc
outs
daa
adc
out
sub
mov
xor
(bad)
stc
iret
mov
or
into
pop
retf
call
jmp
sub
add
or
lock
lock
(bad)
(bad)
mov
inc
(bad)
loopne
or
and
pop
mov
jp
(bad)
(bad)
(bad)
(bad)
xchg
sar
dec
cmp
sub
mov
sbb
inc
mov
cmp
(bad)
jg
dec
sub
out
ret
(bad)
fcom
in
jmp
jns
stos
pop
shl
or
(bad)
jmp
xor
cwde
mov
cmps
mov
push
cli
lds
leave
pop
out
repnz
mov
(bad)
dec
fcomip
retf
js
out
std
ds
cmp
jecxz
inc
mov
call
and
out
mov
retf
lahf
xchg
je
cmps
and
jns
and
out
nop
in
in
addr16
mov
sbb
sub
(bad)
(bad)
inc
test
cmp
call
add
push
push
repz
jo
sbb
fimul
inc
xchg
add
(bad)
(bad)
dec
push
pop
cwde
and
test
xor
mov
sbb
mov
dec
clc
push
mov
leave
int3
dec
pop
sbb
leave
push
(bad)
(bad)
jmp
adc
sbb
cmp
ret
xchg
ret
mov
(bad)
cmp
mov
sbb
(bad)
fadd
aam
xchg
repnz
jmp
icebp
mov
int
xor
mov
xchg
dec
dec
(bad)
(bad)
(bad)
jg
dec
movs
fdiv
xor
pusha
cvttps2pi
icebp
mov
repnz
jne
leave
sub
ins
(bad)
(bad)
(bad)
push
imul
mov
lds
sub
fs
mov
and
icebp
(bad)
jmp
jns
push
int
sbb
shr
out
arpl
jg
push
and
xor
bound
hlt
(bad)
(bad)
(bad)
inc
hlt
outs
fisttp
mov
jb
movs
push
xchg
adc
and
in
cld
mov
call
pop
xchg
test
icebp
jno
xor
fild
(bad)
scas
inc
push
pop
ja
je
or
adc
(bad)
(bad)
call
adc
outs
jo
cld
loopne
pop
dec
loopne
les
mov
inc
iret
inc
and
(bad)
(bad)
jmp
fsubr
shl
addr16
dec
jecxz
adc
and
xchg
loopne
inc
mov
and
dec
fidivr
bound
aad
in
(bad)
sub
clc
cld
inc
ds
add
pop
loopne
(bad)
(bad)
fcomip
fidivr
xchg
mov
je
fcom
shl
in
and
arpl
cld
lods
adc
push
ror
push
sbb
xor
stc
gs
int3
arpl
push
movhlps
inc
or
stc
(bad)
retf
mov
retf
(bad)
dec
adc
jmp
rcl
rcr
xchg
nop
dec
daa
sbb
jg
lods
(bad)
(bad)
(bad)
clc
xor
cmp
ins
cld
pop
or
xchg
sti
lea
pop
(bad)
(bad)
jg
aam
sahf
mov
jmp
(bad)
mov
inc
in
dec
(bad)
(bad)
(bad)
(bad)
clc
movs
inc
sbb
or
fmul
xor
in
jp
mov
push
add
jmp
dec
sbb
call
(bad)
adc
mov
(bad)
rcl
call
cmps
push
aas
jbe
dec
das
adc
out
in
adc
call
mov
mov
call
xor
xchg
sub
push
nop
jecxz
in
and
(bad)
call
mov
mov
mov
inc
mov
or
outs
jecxz
(bad)
call
frstor
stc
in
cld
test
(bad)
not
inc
mov
(bad)
(bad)
jmp
test
stos
fcomi
leave
cmp
std
sti
ins
call
jae
jne
or
call
aam
xor
or
lods
pusha
mov
add
repz
sbb
and
scas
cli
jmp
mov
pop
pop
data16
out
inc
mov
inc
dec
jmp
(bad)
(bad)
jg
ret
loope
out
cmps
cmc
push
leave
xor
jbe
xchg
ds
(bad)
adc
scas
jmp
std
mov
imul
in
(bad)
(bad)
push
pop
shr
jnp
jnp
test
sbb
xchg
xchg
loop
mov
ins
push
ret
jg
(bad)
mov
inc
jg
jg
pop
mov
test
call
inc
ds
push
adc
and
jmp
call
(bad)
push
pop
push
loop
(bad)
cmp
or
in
in
bound
rol
lds
pop
or
cmp
sti
ud0
(bad)
out
or
fdiv
adc
push
pop
xlat
adc
or
push
cmps
sar
(bad)
(bad)
dec
das
pusha
out
and
mov
aaa
add
and
stos
sbb
gs
repz
(bad)
dec
lock
int
pop
pop
sub
cmp
pop
jb
in
push
push
call
outs
xchg
mov
or
or
sbb
out
(bad)
(bad)
(bad)
inc
aam
pusha
xchg
sbb
mov
test
adc
mov
jbe
mov
shr
clc
scas
(bad)
(bad)
(bad)
(bad)
fstp
mov
pop
push
popf
sahf
inc
shl
rcl
xor
dec
pop
(bad)
xchg
push
(bad)
(bad)
mov
mov
push
aaa
sbb
xor
aas
mov
scas
mov
(bad)
dec
gs
ds
xchg
test
pop
movs
inc
(bad)
(bad)
jmp
xchg
push
(bad)
jmp
ret
in
jbe
out
les
repnz
call
jmp
sub
repnz
adc
pop
sahf
into
and
push
pop
sub
(bad)
(bad)
(bad)
call
inc
cmps
ror
ret
cli
popf
fdiv
mov
cmp
and
inc
cmp
and
cmp
mov
cli
jp
mov
cmp
jmp
sbb
xor
jle
mov
sti
push
pop
(bad)
(bad)
jmp
mov
call
(bad)
xchg
shl
iret
arpl
push
cmp
(bad)
(bad)
dec
or
mov
mov
mov
sbb
jp
ja
mov
in
in
sub
inc
icebp
popf
daa
ja
out
jnp
mov
ud0
pop
pushf
jo
arpl
clc
(bad)
daa
(bad)
loop
int3
jb
push
clc
aaa
std
push
jmp
mov
movs
adc
cs
pusha
shl
mov
(bad)
jmp
jecxz
sub
jne
fst
jmp
out
clc
dec
fwait
dec
out
push
inc
(bad)
(bad)
int
lock
std
jg
cmps
cmp
sbb
sbb
xchg
sub
push
push
xbegin
cmp
int3
sub
sti
in
rol
cwde
inc
mov
jg
loope
fadd
icebp
std
jmp
cmps
xor
adc
(bad)
call
sub
add
leave
and
imul
into
push
mov
retf
rol
in
jmp
mov
pop
sahf
inc
mov
into
(bad)
popf
sar
(bad)
fcomip
pop
jge
pop
div
dec
(bad)
(bad)
fst
aam
in
sub
sub
(bad)
call
cmp
nop
jmp
xor
in
daa
leave
rcl
push
lahf
aas
fcomip
(bad)
jmp
sub
xchg
rcr
enter
leave
push
mov
jg
shl
test
mov
jmp
sub
pushf
or
fld
xchg
popa
retf
shl
push
jbe
loopne
(bad)
(bad)
jmp
lods
mov
jp
sub
mul
xchg
cmc
mov
push
xchg
into
ret
xchg
(bad)
jg
sub
ds
adc
js
push
mov
add
and
cmp
popf
xor
aam
(bad)
aad
scas
pop
push
(bad)
(bad)
(bad)
jmp
add
dec
aas
mov
rcl
pop
movs
jb
adc
adc
jmp
sar
aad
mov
xor
mov
fisubr
(bad)
(bad)
mov
scas
(bad)
ror
cmp
daa
dec
int3
mov
push
add
xchg
sbb
rcr
push
add
ja
push
xchg
sub
movs
xchg
mov
xor
ss
std
(bad)
jmp
movs
mov
sti
(bad)
push
push
mov
mov
cmp
icebp
fistp
mov
in
dec
push
jecxz
(bad)
test
sti
pop
pop
inc
dec
in
(bad)
call
dec
retf
cli
jle
xchg
cdq
scas
push
sahf
sahf
sbb
(bad)
(bad)
dec
icebp
inc
cmps
push
(bad)
mov
mov
clc
xchg
in
add
je
jg
aaa
pop
(bad)
dec
retf
xchg
inc
adc
fcomp
xor
test
cld
or
(bad)
(bad)
jmp
shr
ret
dec
and
fnstenv
imul
retf
ret
std
push
outs
cli
call
sahf
test
sti
cmp
push
dec
add
hlt
or
ret
cmp
mov
call
pop
fnsave
mov
cli
out
pushf
xchg
ja
repz
mov
or
push
sbb
xchg
push
scas
cmp
jle
push
cwde
jb
ja
inc
xchg
pop
and
ins
mov
cmp
mov
mov
jg
mov
pushf
test
sbb
sub
ja
(bad)
(bad)
(bad)
out
test
sti
in
addr16
dec
mov
cmp
out
adc
fst
das
cmp
call
pop
fisub
in
js
or
(bad)
push
fs
inc
mov
xor
mov
sar
repz
jecxz
(bad)
push
pusha
sahf
jae
pop
retf
dec
in
clc
popa
pop
js
jmp
mov
enter
jmp
sub
adc
outs
adc
popf
pop
(bad)
jp
(bad)
(bad)
dec
into
dec
not
fs
mov
cdq
ret
sub
sbb
dec
outs
inc
inc
fistp
push
stos
lds
dec
ins
sub
add
idiv
out
adc
jmp
adc
pop
and
dec
lds
xchg
sbb
add
in
cmp
(bad)
(bad)
(bad)
jg
sub
jle
mov
jg
into
jmp
adc
mov
(bad)
mov
jecxz
nop
loope
es
adc
push
jg
pop
cdq
les
out
pop
adc
xchg
dec
std
dec
test
movs
cmp
ja
jmp
addr16
xor
sub
(bad)
fidivr
retf
mov
scas
ja
cli
aas
test
xor
(bad)
(bad)
(bad)
call
daa
aam
es
cwde
sbb
xchg
mov
ds
push
ffreep
sbb
push
(bad)
in
dec
icebp
jmp
(bad)
cmp
popf
scas
out
cli
(bad)
mov
mul
ret
(bad)
inc
popa
pop
lahf
or
pop
ins
out
adc
call
jle
xor
call
fadd
jb
push
push
ret
(bad)
(bad)
js
adc
fidivr
mov
je
jmp
adc
pop
pusha
icebp
cmp
(bad)
push
aam
imul
out
shr
outs
test
(bad)
add
nop
mov
jecxz
jo
adc
(bad)
(bad)
jmp
repz
shl
push
pop
cli
xor
push
or
jns
repz
aaa
add
mov
sub
fs
push
aas
pop
pushf
fwait
or
(bad)
out
adc
sub
ficom
pusha
aas
xchg
mov
mov
inc
lods
fwait
mov
int
mov
inc
cld
(bad)
jmp
xor
and
inc
xchg
or
(bad)
mov
push
cli
out
jns
neg
pusha
loop
aaa
sbb
jnp
jns
dec
repz
xchg
(bad)
call
aad
repz
retf
daa
pop
mov
mov
(bad)
(bad)
(bad)
mov
inc
sub
mov
lea
mov
shl
and
mov
inc
rol
add
push
popa
or
jp
jmp
ret
(bad)
(bad)
(bad)
call
pop
rol
mov
in
out
sbb
leave
jecxz
adc
loope
or
sub
loope
jle
call
pop
cdq
sar
dec
into
pusha
ror
sbb
or
xchg
mov
into
pop
mov
test
cmp
mov
mov
(bad)
(bad)
(bad)
call
push
retf
fidivr
inc
xchg
push
cmps
icebp
xchg
or
sbb
call
jmp
shr
sbb
(bad)
(bad)
call
mov
mov
push
jle
iret
dec
into
and
dec
or
loopne
sbb
into
lds
(bad)
(bad)
call
enter
sbb
nop
xchg
mov
pop
loope
sar
shl
addr16
scas
jg
je
(bad)
(bad)
(bad)
(bad)
jl
pop
imul
sbb
add
popf
cmp
pushf
call
es
push
mov
xchg
icebp
adc
inc
sahf
jmp
mov
cwde
ja
test
ss
push
jae
mov
popa
mov
(bad)
jg
sahf
out
icebp
ins
dec
lock
adc
xchg
sbb
push
inc
mov
and
(bad)
mov
popa
outs
push
sti
sahf
cmp
sahf
mov
out
pop
call
std
push
push
clc
cmp
fst
dec
(bad)
inc
call
add
cmps
jecxz
cld
cmps
sbb
ins
pop
mov
je
and
and
push
mov
push
sbb
cmp
(bad)
(bad)
(bad)
jmp
ret
loopne
mov
es
outs
fwait
leave
inc
pushf
sub
cld
(bad)
ror
imul
frstor
adc
call
faddp
sbb
mov
ja
jnp
xchg
out
dec
pop
(bad)
(bad)
(bad)
(bad)
clc
jno
les
pop
xchg
cmp
shl
pop
jmp
mov
push
stc
shl
ror
push
inc
mov
adc
dec
xchg
mov
and
jns
inc
cld
retf
(bad)
call
lea
pop
mov
or
jle
outs
test
push
fwait
push
sub
pop
push
xchg
xchg
lock
adc
pop
xor
test
(bad)
(bad)
ds
pop
adc
mov
dec
popa
sbb
ins
les
test
and
mov
cmps
sti
dec
(bad)
(bad)
(bad)
jg
cmp
arpl
mov
xor
aad
repz
cmc
loopne
adc
scas
outs
mov
out
lock
xor
jecxz
fwait
mov
cs
add
jno
and
ss
inc
push
pop
shl
jb
(bad)
(bad)
dec
imul
dec
retf
fdivr
and
and
jecxz
mov
ja
(bad)
push
aam
mov
cwde
cmp
rol
mov
jmp
(bad)
iret
mov
loope
mov
int3
sbb
(bad)
call
mov
add
inc
lds
and
in
jge
loope
(bad)
call
loopne
outs
retf
repnz
mov
retf
das
xchg
add
icebp
call
lds
or
out
mov
jmp
xlat
and
dec
push
inc
rcr
sbb
call
pop
fsubp
fstp
push
pop
inc
xchg
clc
mov
(bad)
mov
div
push
leave
push
adc
cmp
aam
in
outs
fidivr
in
cli
inc
cmp
mov
and
mov
outs
std
fsub
outs
mov
sti
dec
and
(bad)
xor
mov
aad
sahf
sbb
mov
jmp
iret
dec
lahf
fstp
icebp
mov
(bad)
call
mov
xchg
iret
adc
fdiv
leave
enter
into
int
daa
loop
aam
ret
inc
mov
pop
(bad)
in
dec
lods
loop
lea
cli
(bad)
inc
sbb
(bad)
fs
xchg
in
enter
sbb
xor
mov
jecxz
(bad)
adc
repz
ja
push
popa
(bad)
(bad)
(bad)
(bad)
jmp
adc
loope
call
xlat
mov
dec
psubd
aam
out
mov
(bad)
jmp
or
mov
retf
test
enter
sbb
adc
mov
or
pop
mov
iret
aad
icebp
cmp
push
and
stc
mov
mov
sub
int
cli
mov
mov
mov
(bad)
jg
jno
adc
xlat
push
adc
and
addr16
fs
and
jmp
out
inc
es
and
cmps
and
jp
call
rcl
sub
aad
add
xor
xchg
dec
(bad)
call
xor
mov
out
xor
loope
sahf
in
inc
sub
fs
(bad)
(bad)
mov
mov
(bad)
pop
jmp
cmps
and
jp
stos
xchg
(bad)
jmp
or
imul
mov
and
sub
adc
xchg
ds
pop
stos
xor
pop
fidiv
cwde
(bad)
jo
(bad)
(bad)
jmp
cli
scas
sub
mov
xchg
pop
std
aam
mov
shl
in
cmps
inc
mov
or
jg
scas
out
cmp
push
mov
sub
ds
movs
scas
(bad)
(bad)
dec
mov
inc
xlat
cmp
inc
inc
mov
fwait
(bad)
inc
shl
push
mov
inc
popa
or
ja
push
inc
call
outs
push
div
jnp
lods
sbb
pop
inc
mov
inc
mov
sahf
sub
shr
shl
call
inc
cmp
test
bound
leave
aas
test
into
and
push
(bad)
(bad)
inc
dec
jmp
pop
clc
retf
fcomip
xor
add
rcr
jnp
(bad)
(bad)
call
fwait
out
and
and
push
not
inc
cwde
lods
stc
push
int3
rol
nop
fnsave
int3
fild
test
push
ret
push
js
(bad)
(bad)
(bad)
clc
leave
pop
inc
data16
mov
push
into
test
sar
add
or
ins
ret
fild
xor
mov
(bad)
(bad)
inc
inc
jne
or
in
cmp
mov
pop
test
call
add
dec
ret
dec
mov
fwait
xchg
pop
icebp
push
dec
int3
call
mov
add
xchg
mov
mov
psadbw
arpl
mov
sub
pop
fiadd
xchg
(bad)
push
jg
sub
in
push
mov
out
aad
pusha
sahf
(bad)
(bad)
(bad)
call
ret
push
and
mov
jno
enter
inc
lods
loopne
imul
push
pop
and
pop
cmp
(bad)
mov
in
outs
fmul
pop
xchg
dec
mov
jns
or
(bad)
inc
out
add
push
jl
js
dec
mov
int
or
cmp
sbb
call
(bad)
(bad)
jmp
mov
lods
xchg
shl
mov
out
fstp
mov
mov
clc
jg
hlt
xor
mov
int3
dec
aas
or
push
nop
add
aas
es
cdq
out
popf
fmulp
into
idiv
stos
idiv
sub
in
test
inc
clc
xchg
nop
inc
cli
pop
loopne
lock
add
(bad)
(bad)
(bad)
jmp
dec
sub
or
adc
mov
stos
xlat
xchg
mov
lods
mov
in
into
dec
out
xor
es
jmp
and
xor
js
pop
retf
mov
ret
mov
out
push
dec
cmps
push
push
xor
lods
or
(bad)
call
jg
or
retf
adc
pop
jge
ins
push
sbb
mov
adc
sbb
mov
fmul
and
popf
out
(bad)
(bad)
(bad)
mov
aaa
fnsave
push
outs
mov
mov
jns
or
cmp
or
fstp
pop
add
sub
mov
mov
and
ror
jae
or
dec
mov
pop
push
in
sbb
dec
mov
aas
fdivr
push
adc
or
stos
imul
adc
cmp
jo
and
mov
mov
sahf
push
push
int3
mov
(bad)
jg
cwde
adc
adc
popa
fs
xchg
imul
push
(bad)
(bad)
(bad)
jg
(bad)
mov
xbegin
cmp
cdq
scas
push
(bad)
dec
cmp
es
sbb
add
and
out
shl
loopne
mov
leave
lods
loop
mov
test
mov
mov
call
(bad)
mov
xor
mov
movs
call
jb
push
jo
push
inc
xor
dec
or
mov
in
out
outs
xor
push
lahf
dec
daa
(bad)
cmp
loop
movs
rcr
es
jns
test
sbb
(bad)
(bad)
call
shl
or
ins
out
adc
jmp
cmp
(bad)
(bad)
(bad)
(bad)
and
aaa
fidiv
mov
pop
add
or
pop
or
mov
hlt
(bad)
call
retf
cmps
shl
jle
jno
in
dec
call
ret
out
call
(bad)
mov
mov
inc
out
pop
push
aad
int3
mov
dec
jg
(bad)
push
push
scas
adc
sub
sub
xchg
jge
in
std
das
rcl
pop
(bad)
sub
int
xor
push
into
mov
leave
adc
sbb
cmp
sbb
(bad)
(bad)
(bad)
call
push
mov
mov
mov
scas
push
mov
cli
sbb
jbe
cld
jle
fild
push
lock
mov
lods
ss
pop
(bad)
mov
in
ss
pop
jg
mov
dec
icebp
(bad)
(bad)
(bad)
jle
daa
and
add
fisubr
jmp
jl
pop
mov
scas
xlat
mov
ss
push
lods
add
mov
push
retf
gs
xor
out
cli
(bad)
fst
cmp
mov
(bad)
mov
xor
push
xchg
int
ins
(bad)
(bad)
(bad)
push
mov
xchg
jae
out
xchg
jnp
cwde
imul
(bad)
cmc
push
outs
ret
(bad)
jo
mul
add
sub
rol
clc
outs
clc
call
sbb
dec
fsubr
or
mov
and
(bad)
call
dec
xor
pop
shl
sbb
(bad)
jo
shl
(bad)
dec
and
xor
push
push
inc
mov
dec
adc
cmp
pop
cmp
das
adc
pop
or
je
sub
pop
in
clc
shl
push
cmps
add
or
adc
arpl
out
mov
into
xor
adc
mov
inc
xchg
inc
adc
mov
pop
xchg
(bad)
(bad)
(bad)
call
jo
push
(bad)
fbld
dec
scas
pop
dec
pop
movs
cmp
sbb
sbb
(bad)
fs
mov
mov
jmp
dec
add
mov
movs
cmps
and
test
push
inc
and
(bad)
(bad)
inc
sbb
les
push
adc
and
loope
xor
lahf
pushf
inc
cmp
pop
push
xor
(bad)
dec
mov
(bad)
xor
mov
je
lock
cmp
cs
mov
jnp
daa
jle
mov
push
inc
cmp
pop
cld
and
inc
cwde
and
outs
ret
xchg
ror
jmp
xlat
inc
fisttp
stos
xchg
data16
test
or
(bad)
jg
xor
in
out
jae
test
cmp
pop
sbb
ret
pop
lock
(bad)
icebp
inc
(bad)
xor
in
shr
mov
jmp
inc
icebp
mov
mov
es
(bad)
(bad)
(bad)
(bad)
fldpi
jge
dec
and
sub
jno
adc
xchg
(bad)
(bad)
mov
fwait
fwait
sub
test
repz
adc
(bad)
fcomip
sub
jbe
mov
lahf
sbb
(bad)
sub
xor
das
cli
in
mov
fucomp
add
fsubp
add
adc
out
lock
gs
shl
js
and
out
(bad)
dec
mov
push
jmp
test
adc
mov
xchg
(bad)
(bad)
inc
int3
or
jno
out
(bad)
inc
pop
gs
inc
mov
xor
in
repnz
xor
cld
scas
cmps
lods
(bad)
leave
outs
call
jmp
dec
out
jns
xchg
test
pop
mov
clc
lock
dec
mov
sbb
sub
push
(bad)
popa
fwait
inc
loop
push
enter
pusha
test
fldl2t
inc
cmp
jo
(bad)
push
es
mov
dec
shl
inc
sub
aas
xor
in
cmp
(bad)
(bad)
call
sbb
fcomip
aad
cwde
cmp
in
xchg
popa
pop
adc
jg
(bad)
(bad)
(bad)
(bad)
jmp
and
mov
cli
call
sub
jp
pop
dec
retf
mov
cdq
or
dec
mov
adc
and
xchg
mov
jo
mov
adc
(bad)
(bad)
jmp
and
int
fdivr
movs
mov
stos
ins
dec
ret
fs
(bad)
fbld
and
push
or
cmp
shr
cmp
dec
(bad)
(bad)
(bad)
jg
mov
and
(bad)
fadd
add
fidivr
push
sbb
rep
int
xchg
pop
cmp
(bad)
(bad)
jmp
popf
imul
xor
shl
out
fild
into
int
jp
(bad)
(bad)
(bad)
call
shl
sbb
mov
fdivrp
cmp
xchg
out
or
sbb
jo
cwde
and
adc
loopne
cli
mov
xchg
or
in
(bad)
(bad)
jmp
aas
mov
aas
hlt
jnp
movs
cmp
cmp
ins
mov
fwait
sar
leave
push
add
add
inc
int3
dec
ror
idiv
push
imul
cmp
fldcw
mov
pusha
out
xlat
cs
(bad)
(bad)
(bad)
jmp
dec
cmc
hlt
mul
mov
jo
xchg
cmp
xchg
in
push
ja
xor
call
imul
jno
xor
call
(bad)
(bad)
(bad)
jmp
cmps
push
retf
test
xor
dec
push
inc
mov
mov
mov
push
ret
cli
dec
mov
or
mov
xchg
sub
mov
push
(bad)
(bad)
(bad)
call
sub
mov
jbe
popa
pop
push
push
cmps
adc
cmp
clc
push
xor
(bad)
(bad)
push
out
cmp
stc
popf
scas
cmovnp
daa
pop
dec
mov
mov
or
jl
jg
in
add
jle
mov
add
imul
arpl
lock
leave
jl
movs
mov
fstp
adc
inc
fldcw
pop
mov
shl
or
fisttp
mov
jb
and
popa
mov
mov
pop
cld
sbb
(bad)
out
xchg
scas
inc
out
jmp
(bad)
(bad)
(bad)
inc
xchg
outs
or
adc
sbb
jb
add
popa
sar
pushf
xchg
mov
adc
sbb
(bad)
(bad)
(bad)
inc
stos
popa
outs
sbb
cli
xchg
mov
sub
adc
(bad)
(bad)
jmp
pop
les
pop
pop
lods
inc
xor
mov
and
(bad)
push
sub
mov
xchg
or
jae
arpl
and
ret
adc
leave
clc
ja
leave
bound
mov
add
sar
cmps
add
and
mov
and
pushf
or
or
ret
cdq
pushf
(bad)
es
mov
add
cmps
or
ds
fdiv
mov
jmp
lods
xchg
mov
icebp
push
lea
inc
adc
cmps
cmp
test
jae
ss
addr16
add
mov
or
(bad)
es
jmp
push
(bad)
in
daa
adc
leave
mov
xchg
gs
sbb
aam
sbb
adc
ficomp
mov
mov
(bad)
sti
in
sub
cmp
pop
pop
dec
ja
mov
dec
not
dec
mov
test
inc
inc
sub
jmp
mov
jmp
nop
std
and
call
adc
pop
inc
scas
jae
push
add
dec
(bad)
dec
ret
mov
mov
loop
mov
(bad)
(bad)
mov
xor
xchg
(bad)
cld
cmp
adc
xchg
mov
dec
lea
in
out
leave
jno
rol
adc
jmp
push
fiadd
adc
(bad)
fs
cmp
(bad)
call
dec
ss
call
push
dec
push
mov
idiv
popa
dec
call
or
(bad)
dec
out
cmp
push
outs
lahf
or
daa
out
cmps
or
jmp
mov
jg
mov
adc
cmp
fsub
jae
mov
shr
mov
(bad)
(bad)
dec
jp
shl
sbb
nop
cs
stos
mov
popa
jle
inc
jae
in
(bad)
(bad)
(bad)
jmp
fisub
cmp
lahf
sar
scas
mov
sti
mov
jmp
xor
jecxz
out
dec
jecxz
add
mov
call
fisub
sar
(bad)
(bad)
call
mov
xor
push
xor
cmp
ret
test
jne
fadd
(bad)
(bad)
dec
adc
mov
ins
pop
mov
arpl
es
dec
sub
out
sbb
mov
arpl
shl
call
loop
ffreep
cld
test
jl
jp
mov
shl
or
(bad)
(bad)
call
sbb
stc
xchg
dec
int3
adc
pusha
fs
pop
popf
or
fwait
mov
pushf
cdq
xchg
fdiv
xchg
push
popa
adc
(bad)
stc
daa
mov
mov
gs
cwde
jg
or
leave
mov
and
stos
(bad)
(bad)
(bad)
jmp
fstp
nop
xchg
stc
pushf
pop
jb
ret
push
lods
cmps
add
int3
dec
(bad)
(bad)
(bad)
call
mov
clc
outs
sub
mov
aam
xlat
jle
jbe
jae
stos
pushf
push
setl
out
pop
cmp
dec
jge
mul
fcom
pop
test
jnp
inc
inc
inc
call
fcmovnb
sub
(bad)
stos
inc
pop
push
mov
push
call
std
mov
in
(bad)
cmp
pop
push
and
jb
(bad)
(bad)
(bad)
(bad)
jmp
std
cs
jl
adc
test
fwait
mov
mov
aas
dec
scas
sub
sub
(bad)
call
fisub
mov
test
push
jno
sbb
mov
test
popa
xor
popf
xchg
icebp
test
pop
mov
add
add
call
iret
and
pop
jp
cmp
mul
call
pop
(bad)
or
inc
dec
dec
mov
aad
adc
pop
sub
cmp
cwde
cmp
xlat
pop
xor
sti
push
fdivr
xchg
sub
cmp
fld
into
dec
mov
(bad)
jg
xchg
jb
cmp
cmp
xchg
cwde
iret
stos
outs
push
(bad)
(bad)
(bad)
(bad)
jnp
jecxz
mov
fs
fs
mov
ins
xor
(bad)
repz
cmp
push
sub
(bad)
call
or
lds
xlat
retf
mov
or
dec
(bad)
call
neg
pop
scas
mov
push
pushw
(bad)
jmp
xchg
scas
fmul
jns
fisttp
jmp
adc
mov
cs
(bad)
jmp
bound
std
hlt
repz
cmp
jnp
sbb
aas
xchg
test
(bad)
(bad)
push
xchg
int
in
hlt
mov
es
xchg
cld
call
mov
ins
cmp
std
cmp
xor
mov
popf
mov
xor
test
inc
push
cmc
imul
jmp
cmp
(bad)
fucom
mov
cwde
sbb
fwait
lock
mov
adc
add
nop
mov
(bad)
(bad)
(bad)
(bad)
fist
pusha
lds
in
push
scas
mov
cmps
in
not
and
(bad)
(bad)
(bad)
(bad)
mov
jmp
add
pusha
add
mov
or
sahf
xchg
pop
fdivr
sub
int3
inc
mov
(bad)
jbe
ja
mov
call
(bad)
jmp
push
fnsave
jbe
adc
jmp
push
add
mov
mov
loope
sub
cld
jmp
out
test
mov
in
adc
fnstenv
jle
cmp
mov
icebp
in
dec
aam
xor
mov
call
outs
sti
in
inc
and
mov
jp
(bad)
(bad)
jg
arpl
xchg
or
pop
ins
xor
mov
cmp
mov
sbb
inc
mov
repnz
ins
imul
mov
fst
mov
push
imul
nop
stos
(bad)
call
jmp
fcmove
aad
xor
push
or
jge
add
and
cwde
cmp
ja
cmp
(bad)
scas
fdivr
cmps
mov
sub
sahf
sahf
into
clc
pop
cld
inc
inc
jg
shl
push
retf
jo
mov
push
cdq
lahf
enter
(bad)
(bad)
mov
retf
dec
lahf
cmp
cmp
mov
mov
dec
push
sub
ret
aaa
xchg
jmp
lods
ret
inc
jmp
or
call
xor
or
data16
jg
sub
std
in
(bad)
(bad)
(bad)
(bad)
out
test
in
cs
cmp
loopne
dec
ins
pop
xchg
xor
lock
je
jae
adc
adc
(bad)
es
or
sbb
adc
test
mov
(bad)
(bad)
(bad)
fisub
and
sub
movs
shl
adc
sbb
push
movs
push
test
mov
loopne
fsub
or
inc
pop
js
xchg
adc
dec
jle
mov
(bad)
push
and
mov
mov
lea
xlat
inc
rol
xor
test
mov
es
and
(bad)
(bad)
(bad)
jmp
adc
popf
fucomi
sub
pop
ss
retf
lds
stos
(bad)
fisubr
xchg
and
lods
(bad)
(bad)
(bad)
jmp
dec
sti
mov
jb
pop
mov
sub
cmp
mov
adc
(bad)
(bad)
jmp
shl
xchg
push
scas
push
sbb
or
retf
jo
jecxz
adc
aam
jg
add
jb
sar
jge
or
push
iret
pop
cmps
cmc
cmp
mov
out
div
int3
adc
pop
mov
adc
or
and
and
(bad)
ds
shr
sbb
jbe
mov
stos
stc
(bad)
(bad)
jmp
push
jne
daa
jae
in
add
fucom
dec
rol
pop
nop
cmp
mov
push
sbb
daa
out
dec
mov
fst
mov
cld
test
or
mov
or
cld
mov
lods
daa
dec
imul
xchg
push
inc
retf
(bad)
jg
dec
in
sbb
pop
add
mov
(bad)
(bad)
jmp
push
mov
push
and
xchg
iret
popa
fs
daa
pop
push
mov
lods
sbb
(bad)
(bad)
(bad)
(bad)
jne
jnp
in
xor
jge
push
pop
jno
jb
aad
loopne
pop
push
cld
xchg
or
jg
lods
jmp
pop
aas
outs
in
test
sar
cmp
(bad)
(bad)
inc
mov
xor
clc
xor
loopne
xchg
adc
(bad)
pushf
push
mov
sbb
test
(bad)
xchg
out
and
mov
aas
or
jb
(bad)
(bad)
(bad)
call
jbe
push
inc
dec
pusha
fbstp
(bad)
push
add
jmp
jmp
jg
jl
aam
int3
adc
iret
ds
inc
pop
sub
xchg
cmp
(bad)
push
add
mov
add
lock
mov
cmp
icebp
cmp
jecxz
dec
xadd
bound
mov
cmps
dec
sub
mov
mov
in
mov
xlat
retf
push
or
push
sub
cld
or
cmc
es
(bad)
(bad)
dec
mov
movs
xchg
outs
xchg
push
(bad)
into
repz
sbb
out
dec
jl
(bad)
out
call
loopne
mov
sbb
int
cmps
(bad)
jno
add
int3
jno
leave
sbb
clc
or
mov
(bad)
jmp
inc
iret
icebp
push
sub
je
out
aaa
mov
mov
ret
(bad)
mov
mov
adc
mov
sub
sbb
jle
in
mov
(bad)
call
push
mov
imul
stos
jmp
in
xchg
inc
mov
enter
mov
(bad)
(bad)
(bad)
jmp
ret
mov
(bad)
mov
sbb
mov
pop
adc
mov
(bad)
(bad)
dec
ds
push
pusha
and
add
dec
shl
pop
scas
push
or
pop
data16
(bad)
call
hlt
jge
mov
and
sub
retf
rol
inc
into
push
xchg
inc
and
sahf
nop
pop
inc
(bad)
(bad)
mov
push
mov
or
jecxz
dec
hlt
daa
xchg
sub
stc
(bad)
(bad)
(bad)
push
and
inc
mov
mov
jb
outs
(bad)
pop
jb
cmp
movs
js
jg
(bad)
(bad)
push
and
or
in
test
or
pop
xchg
sbb
vfmaddsubpd
mov
std
call
in
mov
in
cmps
(bad)
cmp
mov
stc
repnz
idiv
add
loope
sub
add
add
sti
(bad)
mov
test
or
daa
xor
sbb
inc
clc
(bad)
call
in
or
imul
push
mov
aad
(bad)
das
cli
es
sub
stos
and
pop
jae
into
imul
(bad)
aad
xor
in
mov
and
repnz
or
mov
je
pop
aas
xchg
pop
adc
pop
dec
inc
and
xchg
ins
mov
dec
lock
ins
fld
jno
or
xchg
cwde
xchg
(bad)
cmp
dec
lods
ins
sub
inc
(bad)
(bad)
(bad)
dec
dec
cmps
xor
push
pop
sub
out
sbb
jecxz
mov
pop
mov
jmp
jle
mov
add
add
(bad)
(bad)
mov
or
repnz
or
fmul
movs
inc
retf
xor
(bad)
(bad)
(bad)
inc
push
xchg
fbld
scas
mov
mov
mov
mov
and
fadd
data16
(bad)
(bad)
push
out
inc
mov
outs
inc
lods
lods
dec
movs
repnz
push
add
inc
(bad)
(bad)
jmp
push
adc
nop
xor
mov
add
aad
sbb
bound
sar
mov
icebp
xor
(bad)
ret
sub
(bad)
cs
cld
(bad)
call
cli
cmc
in
fsub
fdiv
xchg
daa
sbb
ret
pop
scas
xor
std
(bad)
(bad)
fbstp
fs
test
adc
pop
(bad)
or
push
mov
xchg
stos
out
jmp
cmp
cmp
jg
mov
push
ja
adc
inc
data16
hlt
in
out
into
leave
fstp
push
ins
xor
sti
call
sbb
or
shr
fcomp
ins
call
inc
cld
cld
jmp
mov
adc
fist
ds
into
lea
pushf
adc
lock
fld
cli
shl
mov
(bad)
dec
pop
adc
(bad)
imul
cs
ret
repnz
sahf
jae
mov
aaa
add
retf
outs
mov
call
sbb
movs
out
iret
inc
(bad)
(bad)
(bad)
(bad)
in
mov
(bad)
scas
jle
push
jns
push
das
cmp
aaa
sbb
jb
push
push
push
loopne
mov
add
iret
push
mov
es
iret
and
mov
div
test
movs
jnp
dec
(bad)
(bad)
(bad)
jg
imul
sub
(bad)
dec
xchg
adc
arpl
call
sbb
adc
das
cli
or
cmp
aad
sbb
(bad)
jg
bound
dec
sbb
mov
or
add
je
repnz
and
sbb
sbb
pop
mov
(bad)
(bad)
(bad)
inc
sub
out
jne
pop
pop
mov
lds
and
cmp
sti
dec
mov
xchg
lock
cmp
mov
enter
nop
push
jl
(bad)
mov
repz
(bad)
mov
sar
pop
inc
neg
xchg
pusha
aam
sub
mov
jp
ret
xchg
cmp
add
adc
sub
mov
fs
sbb
pop
adc
out
pop
(bad)
(bad)
(bad)
push
ins
in
push
jnp
call
xor
dec
xchg
imul
mov
add
clc
movs
sbb
mov
test
and
cmp
fisttp
adc
mov
sti
ror
(bad)
outs
mov
inc
jl
lods
es
sbb
retf
dec
fs
cld
dec
jl
jmp
xchg
bound
mov
sbb
sbb
mov
in
jnp
sbb
clc
inc
nop
xor
mov
mov
ja
push
ja
jb
ret
dec
mov
(bad)
out
jmp
ins
mov
pop
jge
(bad)
call
daa
dec
xor
bnd
sahf
(bad)
fstp
jl
gs
(bad)
(bad)
jmp
pop
int
mov
or
jmp
and
adc
nop
xor
xor
shl
(bad)
pop
cwde
dec
and
int3
mov
add
xchg
add
aaa
lods
movs
xor
dec
cmp
(bad)
(bad)
(bad)
(bad)
mov
dec
or
cmp
stc
cld
xchg
shl
std
fsubr
push
cmps
(bad)
enter
sbb
xchg
daa
sub
jne
and
push
call
ins
iret
sbb
jmp
or
xchg
nop
jmp
stos
adc
fnstenv
movs
mov
imul
stos
std
or
dec
sbb
pop
imul
inc
stos
dec
inc
dec
cld
mov
and
(bad)
(bad)
fsubr
movs
adc
xchg
sbb
std
inc
clc
fstp
data16
aaa
inc
or
jle
mov
psllw
jg
ss
fnsave
je
adc
(bad)
dec
cmp
adc
bnd
aaa
int3
stos
jmp
push
mov
and
add
pop
push
mov
in
mov
ret
fsub
(bad)
(bad)
call
adc
push
test
ret
icebp
daa
fwait
jecxz
outs
cmp
add
dec
lock
mov
mov
add
jecxz
mov
cmp
(bad)
(bad)
(bad)
mov
add
lds
(bad)
outs
fiadd
pushf
gs
movs
stc
cmp
cmp
jmp
xchg
(bad)
call
inc
enter
add
cmp
(bad)
jecxz
sbb
(bad)
(bad)
jmp
or
xor
inc
push
sbb
adc
and
cmps
sub
pop
imul
sti
pop
dec
or
(bad)
(bad)
mov
scas
nop
dec
mov
pop
xchg
imul
(bad)
out
es
mov
push
add
cmp
dec
jnp
mov
(bad)
dec
test
cs
fnstsw
int
and
rol
mov
xor
inc
mov
ins
sub
popa
push
int3
int3
pop
ja
push
mov
out
mul
leave
ror
movs
push
sbb
sbb
call
or
sbb
push
jnp
pushf
mov
pop
(bad)
stos
aaa
lock
std
sub
iret
shr
aaa
jmp
jge
loope
mov
call
shl
inc
cmp
and
mov
mov
fsub
cmps
xchg
enter
push
sar
clc
aam
enter
outs
dec
xor
mov
adc
jl
xchg
mov
add
cli
(bad)
(bad)
jns
call
pop
jmp
loope
cdq
nop
dec
xchg
ins
imul
xor
enter
push
lock
aas
cld
adc
and
mov
jl
ins
call
xor
(bad)
(bad)
push
sbb
shr
jecxz
add
xchg
in
push
or
into
dec
mov
jmp
adc
sub
cmp
(bad)
(bad)
push
aas
mov
popf
shl
ret
push
stc
sbb
dec
inc
test
call
das
xor
lar
inc
pushf
mov
add
mov
stos
sub
icebp
or
dec
dec
xor
(bad)
xchg
scas
ret
or
xchg
jo
fimul
shl
cmp
mov
(bad)
jmp
add
shr
xor
xlat
(bad)
dec
mov
push
mov
or
fistp
cli
add
inc
lods
pop
hlt
nop
mov
and
cmp
call
mov
ss
aas
xchg
sub
push
mov
dec
sub
pop
push
aas
sbb
iret
jae
lea
inc
mov
dec
xchg
repz
jb
in
dec
fldenv
inc
sub
push
xor
(bad)
enter
out
rcl
push
inc
sub
(bad)
(bad)
(bad)
js
add
retf
jno
pop
std
push
mov
sti
(bad)
add
mov
mov
(bad)
(bad)
(bad)
jmp
pop
pop
inc
rol
loope
loope
mov
es
pop
iret
and
cld
scas
dec
push
loopne
inc
(bad)
jmp
jmp
in
shl
js
movs
(bad)
cld
mov
sbb
shl
add
(bad)
jmp
xchg
mov
inc
fsubp
cmp
mov
inc
add
and
jmp
mov
or
clc
not
cwde
fwait
pushf
pop
xor
(bad)
(bad)
call
cmp
je
xchg
or
jb
sbb
ins
or
div
adc
ins
out
(bad)
(bad)
(bad)
inc
mov
sti
into
std
mov
pop
call
xor
ret
aas
pop
xor
inc
les
cwde
test
cmp
pop
mov
fst
inc
sti
mov
mul
(bad)
(bad)
jmp
mov
xchg
ret
test
in
test
imul
sub
adc
out
cli
pop
dec
mov
loopne
in
and
adc
xlat
scas
xchg
inc
outs
jbe
inc
(bad)
(bad)
(bad)
(bad)
js
mov
push
inc
movs
ja
lods
inc
sbb
gs
imul
(bad)
(bad)
(bad)
jmp
push
jmp
xor
mov
pop
mov
sbb
push
cmp
test
cs
xchg
(bad)
call
sub
es
mov
aas
adc
test
neg
jmp
mov
adc
fisub
pop
push
call
repnz
add
xchg
mov
aam
push
movs
and
sub
(bad)
(bad)
(bad)
jmp
jmp
dec
movs
mov
iret
imul
sti
ds
push
mov
cld
push
fldcw
(bad)
(bad)
dec
inc
or
dec
int3
and
fnsave
data16
gs
xor
pop
adc
int3
cs
sbb
jns
aad
(bad)
cmp
push
inc
push
test
mov
ins
(bad)
in
jle
outs
adc
inc
cmp
push
mov
daa
adc
xor
(bad)
(bad)
push
jl
adc
and
dec
ret
push
and
mov
inc
in
pop
int3
mov
dec
dec
adc
(bad)
(bad)
push
sti
enter
xchg
ins
mov
shl
lods
jae
mov
mov
call
sbb
call
fbstp
retf
repz
jge
data16
in
cmp
xor
ja
add
data16
dec
fisubr
(bad)
(bad)
in
jb
push
outs
mov
push
add
pop
stos
gs
xor
call
movs
jle
test
xchg
stos
(bad)
sar
sub
sub
(bad)
(bad)
mov
test
stos
in
xchg
in
(bad)
jns
jecxz
test
(bad)
call
lods
xchg
add
jno
adc
xor
mov
dec
sbb
or
(bad)
push
mov
mov
sar
mov
pop
sub
inc
ja
sbb
outs
dec
ins
mov
call
mov
lahf
mov
(bad)
lods
test
mov
ins
sahf
mov
test
(bad)
call
into
imul
ds
sbb
cs
les
jne
xchg
inc
mov
inc
cmp
daa
push
xor
(bad)
(bad)
(bad)
mov
xchg
xlat
lock
ret
adc
jne
add
ins
(bad)
dec
(bad)
(bad)
(bad)
mov
aad
shr
(bad)
dec
push
xchg
and
stos
or
cmp
cs
pop
les
cmp
int
cmc
jbe
popa
outs
push
lds
jnp
sbb
(bad)
fbstp
out
mov
push
push
jnp
xchg
movs
(bad)
(bad)
call
add
je
ss
cs
mov
mov
push
xchg
(bad)
(bad)
mov
xchg
or
pop
fwait
mov
sub
jns
xor
mov
in
push
pop
scas
dec
xor
(bad)
push
xor
adc
(bad)
mov
fldcw
imul
test
idiv
xor
xchg
call
(bad)
jg
xor
mov
mov
out
rol
cmp
cmps
mov
(bad)
mov
dec
sub
and
js
or
xor
inc
xchg
or
(bad)
(bad)
call
jnp
cli
bound
js
outs
push
lds
pop
retf
imul
iret
pop
sbb
adc
out
jle
out
mov
jmp
dec
in
xchg
repnz
(bad)
sbb
out
es
jmp
dec
add
or
pop
cmp
cdq
ret
adc
(bad)
dec
or
not
cmc
call
cmp
push
add
push
cli
das
push
and
(bad)
stc
fcomip
(bad)
(bad)
fstp
jmp
dec
sub
hlt
cmp
xchg
leave
bound
xchg
push
sbb
(bad)
(bad)
(bad)
call
pop
pminub
out
inc
fidivr
push
or
dec
pop
pushf
jno
mov
in
hlt
lea
adc
(bad)
stc
adc
in
xchg
dec
sbb
cmp
das
data16
inc
int3
pop
sub
jnp
cmps
mov
out
push
push
in
std
lods
(bad)
(bad)
call
jmp
jnp
add
sbb
xchg
gs
vcvtsi2sd
lods
nop
lock
stos
fs
dec
gs
(bad)
(bad)
dec
adc
jo
dec
xlat
and
dec
lea
mov
ins
imul
psubq
inc
clc
jmp
lds
call
fmul
(bad)
call
mov
dec
sbb
and
pop
lds
leave
mov
test
(bad)
push
and
aas
cmp
jp
gs
out
cmp
sbb
cmp
(bad)
(bad)
jg
mov
lea
frstor
jge
xchg
jnp
jo
jbe
xchg
lods
movs
mov
sub
(bad)
(bad)
(bad)
fnsave
and
enter
movs
mov
pop
ret
sahf
vgf2p8affineqb
(bad)
cmp
leave
pop
jns
push
call
push
cmp
xor
lods
jmp
and
xlat
sbb
cmc
shl
add
(bad)
inc
cmp
nop
push
sbb
push
aas
call
outs
or
pusha
jmp
cmp
inc
daa
inc
adc
push
lods
sbb
mov
push
add
mov
or
xor
clc
jmp
pop
push
mov
int
sti
out
fcom
or
and
sbb
(bad)
call
leave
dec
xchg
mov
out
cmc
leave
or
jge
test
cs
and
(bad)
(bad)
(bad)
mov
in
jbe
cmp
jl
pop
repz
pushf
cli
pushf
mov
jmp
bound
movnti
cmps
xchg
scas
scas
pop
(bad)
icebp
std
jnp
and
sbb
cmp
mov
lea
push
fbstp
cmp
(bad)
cwde
iret
mov
xchg
xchg
sbb
ds
cmp
clc
fsub
sub
xchg
rcr
or
ins
cld
(bad)
jg
test
push
aaa
(bad)
into
mov
loopne
push
std
jg
inc
out
out
add
call
mov
push
in
mov
xor
scas
or
mov
add
push
das
lods
xlat
jae
out
inc
inc
pop
daa
add
fdivr
mov
sti
jecxz
bound
cmp
xor
add
pop
lock
dec
inc
sub
xchg
(bad)
lods
pop
fldenv
cmps
dec
jmp
clc
pop
pushf
push
ins
inc
in
enter
sbb
ja
cmp
sbb
aas
in
(bad)
(bad)
(bad)
call
in
cs
sbb
int
int
xchg
cld
retf
mov
xor
lock
inc
(bad)
mov
mov
inc
push
call
cmp
pop
mov
into
dec
sub
adc
add
dec
(bad)
jmp
cmp
mov
jb
jo
(bad)
fcmovu
add
sahf
leave
nop
and
movs
(bad)
jg
xchg
mov
push
ror
js
dec
xchg
(bad)
(bad)
jg
cmp
cdq
xor
pop
je
in
add
xchg
aad
imul
call
add
and
mov
sbb
aam
push
or
call
push
push
stos
das
mov
xor
jecxz
cmps
sahf
xchg
jmp
scas
(bad)
mov
hlt
jne
in
not
pop
pop
loop
add
(bad)
inc
shr
movs
movs
sbb
out
je
ror
sbb
mov
push
dec
(bad)
(bad)
(bad)
jg
pop
mov
imul
push
(bad)
gs
push
cwde
mov
cmp
(bad)
(bad)
jmp
into
adc
sub
mov
or
enter
call
sar
mov
push
xchg
(bad)
mov
push
idiv
and
in
jnp
sahf
mov
movs
jg
(bad)
(bad)
(bad)
push
jbe
shl
or
jle
hlt
jmp
xlat
push
std
xchg
outs
rcl
sbb
pop
cmp
dec
mov
push
int
push
adc
xchg
pop
retf
mov
imul
lock
xor
xchg
add
icebp
fadd
adc
out
inc
xchg
mov
jl
push
ins
std
or
add
in
sub
lods
jno
sar
(bad)
push
ss
xchg
xchg
imul
dec
movs
xor
or
punpcklbw
mov
and
(bad)
cmp
inc
push
int3
fimul
call
pop
mov
jle
retf
das
sar
fwait
std
push
jp
cmp
test
add
sub
in
lahf
ss
(bad)
(bad)
push
femms
jle
push
in
mov
movs
in
push
jmp
add
mov
cmc
sub
(bad)
lods
call
xchg
mov
xchg
mov
sbb
out
fwait
(bad)
cmp
sbb
mov
idiv
ins
or
mov
push
sub
push
mov
inc
or
(bad)
bound
popf
inc
sub
shl
(bad)
(bad)
inc
push
and
xchg
cmp
dec
in
std
addr16
inc
jg
std
scas
clc
aaa
cmp
or
xor
stos
mov
iret
and
sar
jbe
push
(bad)
(bad)
push
nop
pushf
cdq
pop
adc
cli
fstp
shr
(bad)
in
xor
sbb
int3
lahf
dec
xor
neg
or
jmp
jne
push
shl
loopne
sbb
adc
push
retf
int3
shl
lock
hlt
jmp
loope
fmul
dec
test
outs
(bad)
(bad)
(bad)
jmp
cdq
stc
pop
add
inc
inc
push
pop
mov
dec
out
adc
es
and
(bad)
push
cld
pop
dec
int3
dec
sbb
fdiv
jo
cmp
cmp
or
mul
(bad)
(bad)
jmp
lds
outs
mov
adc
mov
clc
mov
les
mov
lods
jl
sub
cmp
mov
push
push
ss
xor
lock
or
cli
vcvtps2dq
ret
into
(bad)
dec
cmp
pop
int3
daa
mov
jl
movs
js
and
(bad)
out
(bad)
call
les
ror
push
in
adc
cmp
adc
or
cld
(bad)
dec
push
in
sbb
lea
pop
push
les
cli
or
jmp
(bad)
(bad)
out
mov
xchg
push
mov
shl
leave
cmp
cli
and
(bad)
cld
dec
neg
retf
or
sbb
fcmovne
mov
xor
outs
je
dec
sub
push
xor
or
mov
mov
(bad)
xchg
test
push
adc
iret
outs
enter
fbstp
cmc
cmp
mov
push
mov
add
cwde
mov
test
(bad)
mov
add
dec
cmps
sub
add
pusha
rcl
or
jmp
cmp
ret
ret
cwde
mov
je
or
call
out
dec
mov
shl
and
jg
fimul
cld
or
sbb
ins
imul
jmp
lods
mov
jp
and
into
push
jne
mov
call
imul
rcl
stos
mov
loopne
pop
mov
test
and
loopne
js
push
(bad)
(bad)
call
adc
shr
mov
fild
xor
push
hlt
push
mov
(bad)
(bad)
(bad)
fistp
jp
scas
xchg
mov
mov
push
imul
dec
frstor
leave
sbb
cmc
clc
call
cld
mov
mov
ja
inc
loope
push
call
adc
mov
(bad)
jmp
dec
imul
sbb
outs
inc
addr16
mov
cmp
mov
mov
pextrw
cmp
and
pop
inc
jnp
mov
and
inc
push
imul
and
or
jae
(bad)
(bad)
(bad)
push
or
leave
adc
sahf
mov
jecxz
push
jb
repz
inc
cli
inc
xchg
(bad)
imul
inc
xchg
push
arpl
mov
or
jmp
jecxz
pushw
push
add
push
pop
(bad)
outs
pop
inc
pusha
outs
adc
pop
or
inc
jb
push
pushf
push
scas
add
rcl
push
mov
call
fist
add
jmp
or
loope
jae
(bad)
mov
pop
lea
pop
push
(bad)
dec
xchg
fsub
js
pop
add
jno
or
js
mov
or
mov
and
sub
fild
dec
mov
and
cld
mov
adc
popf
pop
xor
jle
dec
std
int
jg
sub
or
and
(bad)
xor
dec
cmp
add
fild
cmp
sahf
(bad)
push
std
adc
ja
ds
mov
sbb
jecxz
gs
lock
(bad)
fnsave
jle
mov
sahf
add
call
call
sbb
mov
cmp
sbb
inc
sahf
ins
(bad)
pop
leave
ret
(bad)
inc
cs
dec
lds
mov
mov
jl
in
addr16
lea
jb
pop
mov
pushf
mov
xlat
cmp
movs
loopne
movs
mov
mov
std
fxch
mul
out
push
add
in
in
leave
and
or
rcl
shl
clc
or
dec
jmp
mov
cmp
js
push
cdq
(bad)
gs
push
mov
sbb
adc
(bad)
(bad)
(bad)
push
and
push
jno
lahf
jl
aaa
mov
xor
leave
push
sahf
fistp
mov
dec
mov
cli
xchg
in
jge
popf
icebp
fistp
dec
jg
setne
cmp
ror
mov
inc
cld
pop
cmp
push
sub
mov
je
pusha
cmp
addr16
std
(bad)
jmp
out
mov
sbb
sub
cmps
xor
ins
sub
(bad)
out
xor
jo
add
jno
outs
mov
mov
iret
out
push
repnz
mov
sbb
mov
retf
sti
jge
test
(bad)
ror
xor
ds
adc
jbe
xchg
inc
retf
lods
(bad)
(bad)
(bad)
call
jle
ret
call
ins
push
leave
mov
pop
aad
arpl
and
mov
xchg
(bad)
pop
ins
ds
clc
call
int
and
ficom
cld
push
(bad)
fs
sbb
add
(bad)
loope
fs
(bad)
(bad)
call
mov
fsubr
lahf
xor
pop
dec
push
stos
mov
cld
stc
add
(bad)
inc
xor
push
lods
push
hlt
sub
aas
(bad)
jg
(bad)
ins
int
mov
test
outs
jnp
popa
mov
popa
mov
(bad)
(bad)
push
jbe
in
retf
push
pop
hlt
cmps
jmp
cs
shr
(bad)
(bad)
(bad)
jmp
fidivr
fwait
mov
lods
and
ret
(bad)
adc
daa
jo
rol
out
loopne
dec
int3
int
jecxz
(bad)
jmp
cs
sub
es
imul
loope
dec
(bad)
cld
and
mov
sbb
mov
(bad)
(bad)
(bad)
dec
mov
call
out
(bad)
shl
mov
xchg
xchg
jmp
daa
fld
aam
pop
rcl
sub
scas
mov
or
(bad)
jmp
shl
mov
repz
sub
sbb
pop
dec
stos
or
add
sbb
inc
fwait
inc
and
js
sbb
mov
fs
std
aaa
and
(bad)
(bad)
(bad)
push
dec
ins
mov
in
adc
adc
dec
or
inc
dec
xchg
mov
inc
pop
pusha
jbe
adc
adc
in
rcl
fcmovbe
sysret
(bad)
mov
sub
mov
cmc
pop
dec
or
sub
out
std
sar
stos
faddp
xchg
(bad)
out
jp
aas
adc
(bad)
imul
push
(bad)
jg
adc
enter
cmp
push
(bad)
lock
sbb
(bad)
jg
sub
and
add
pop
jno
dec
mov
fcom
das
cmps
jae
scas
cmp
sbb
aaa
xlat
test
mov
(bad)
(bad)
(bad)
jmp
mov
jl
mov
dec
xor
call
cmp
and
push
test
pop
rol
xchg
jmp
ret
xor
or
xchg
(bad)
(bad)
(bad)
jmp
fidivr
add
mov
mov
imul
jnp
jmp
jg
mov
icebp
lds
cmp
jne
sti
(bad)
sbb
cmp
cmc
(bad)
dec
cwde
(bad)
ins
sub
mov
adc
in
add
sbb
fmul
add
pop
jne
inc
pop
stc
fwait
jg
xchg
xchg
ins
inc
pushf
mov
and
(bad)
dec
(bad)
adc
or
bound
in
dec
rol
(bad)
push
sti
aas
out
xor
jmp
fwait
out
test
out
lahf
call
ds
(bad)
(bad)
call
xor
in
pushf
iret
cmp
push
jo
mov
sub
es
cmp
inc
ds
cmps
dec
push
icebp
(bad)
jg
sbb
mov
bound
test
(bad)
loopne
test
call
cmp
push
shl
add
sbb
dec
dec
push
out
es
in
sub
and
xchg
adc
call
push
test
sub
cmp
aaa
inc
mov
mov
mov
xor
jo
(bad)
(bad)
(bad)
push
jmp
mov
push
cdq
sub
cmps
loop
movs
out
hlt
add
push
mov
xchg
dec
mov
repz
test
sbb
mov
jb
fucomi
xchg
inc
into
scas
stos
gs
mov
imul
std
sbb
add
call
cmp
sub
(bad)
mov
adc
addr16
sub
push
push
fnstsw
mov
jg
stos
scas
adc
xchg
or
aas
or
out
mov
jg
xchg
loop
(bad)
(bad)
aas
std
cmp
sbb
push
lock
xchg
call
or
stc
hlt
or
fs
outs
(bad)
(bad)
(bad)
mov
mov
pop
or
push
mov
push
and
xchg
jge
pop
lods
int
leave
mov
(bad)
push
jns
xchg
sub
jl
sbb
movs
adc
fnstenv
mov
movs
pop
(bad)
scas
(bad)
(bad)
scas
clc
idiv
inc
pop
jnp
mov
inc
cmps
mov
sub
push
xlat
push
push
xchg
xchg
mov
jmp
fst
pop
(bad)
fisttp
lds
xchg
icebp
and
call
fisttp
aaa
mov
(bad)
(bad)
(bad)
dec
or
push
hlt
mov
stos
mov
ja
mov
int3
jecxz
adc
sbb
pop
cmp
adc
mov
add
or
(bad)
cmps
mov
aam
sbb
dec
(bad)
(bad)
(bad)
call
repnz
add
test
inc
push
and
in
jp
xor
ja
inc
jg
fs
lods
les
push
inc
das
xchg
mov
mov
(bad)
(bad)
inc
inc
mov
jns
or
fxam
push
retf
fwait
shl
mov
xchg
cld
(bad)
(bad)
inc
xchg
adc
repnz
mov
out
lea
xlat
ins
or
movs
and
mov
mov
sub
pop
push
fcmovb
jb
dec
and
je
data16
(bad)
fcomip
pop
and
add
cmp
sub
mov
ss
or
(bad)
(bad)
(bad)
(bad)
in
cmp
or
push
outs
jmp
jnp
sub
cld
addr16
nop
test
(bad)
push
cld
adc
sbb
fcmove
jp
rcl
sub
stos
sar
(bad)
call
scas
jg
ss
sub
jno
(bad)
in
fs
mov
or
add
sub
ret
ret
push
inc
mov
aaa
xchg
add
mov
bound
test
jmp
mov
outs
(bad)
popf
packsswb
push
mov
dec
dec
add
lock
outs
out
and
jmp
mov
call
repnz
retf
aaa
jb
jge
movs
xchg
ja
jb
repnz
out
aas
xor
mov
xor
(bad)
(bad)
mov
xor
cli
clc
inc
in
mov
lods
scas
add
iret
jmp
cs
(bad)
(bad)
(bad)
jmp
jns
pop
add
dec
jo
fabs
hlt
lock
retf
lods
push
lods
pop
mov
cmp
aad
ss
fcomip
jmp
add
push
leave
mov
xchg
lods
cwde
ds
daa
pop
fimul
jmp
dec
adc
pop
test
dec
cwde
and
stos
scas
fimul
adc
sub
jne
cld
(bad)
call
enter
pop
mov
pop
fbstp
push
div
(bad)
jg
or
sub
jo
dec
dec
inc
push
pop
inc
pop
cmp
sub
(bad)
(bad)
call
sub
mov
repz
retf
mov
test
mov
scas
aam
std
mov
xor
xchg
arpl
mov
pop
(bad)
mov
and
pop
rcl
xchg
xchg
mov
jb
adc
loop
jge
clc
adc
(bad)
(bad)
(bad)
fcomi
shr
sbb
mov
inc
xchg
ret
xchg
ins
scas
add
(bad)
fnstenv
in
movs
xchg
xchg
fwait
mov
mov
test
js
dec
jmp
lods
fild
jo
(bad)
(bad)
call
xchg
mov
sub
stos
loope
mov
repz
fist
aas
xor
mov
mov
ss
jmp
shr
fidiv
push
in
out
(bad)
(bad)
call
push
xchg
int
adc
out
mov
lock
iret
push
jbe
push
ins
mov
(bad)
(bad)
jmp
and
and
test
es
inc
outs
cld
popf
(bad)
(bad)
(bad)
(bad)
std
js
popf
sub
imul
sbb
call
cmp
cwde
dec
cli
and
js
mov
call
inc
scas
loope
(bad)
idiv
(bad)
(bad)
call
shl
(bad)
stc
inc
lock
jb
push
jns
not
js
mov
in
mov
inc
aaa
push
add
jae
sbb
inc
test
daa
out
in
jmp
pop
cmp
(bad)
(bad)
inc
hlt
sub
icebp
jl
pop
add
add
add
pushf
sti
pop
cs
leave
inc
pop
inc
das
and
pop
sar
test
dec
jnp
jmp
sahf
sub
sar
test
pop
popf
daa
imul
and
mov
mov
jmp
stc
push
fdivr
dec
push
push
adc
and
sar
retf
add
enter
sub
in
inc
cmp
adc
mov
jle
cld
mov
jl
fist
and
xchg
cmp
push
mov
sbb
inc
fisttp
std
(bad)
(bad)
fild
push
and
dec
push
cmp
mov
ja
sbb
stc
sub
(bad)
(bad)
(bad)
mov
cmps
(bad)
sbb
jbe
gs
jl
sbb
popf
fucomi
jp
loope
fimul
call
pop
inc
or
mov
inc
and
push
sbb
addr16
or
js
sbb
inc
sub
lahf
or
add
pop
fiadd
(bad)
(bad)
(bad)
cmp
fisttp
mov
(bad)
icebp
xor
jmp
and
sbb
dec
dec
popf
cmc
jle
adc
stos
int
call
jle
push
or
call
mov
ds
inc
xchg
(bad)
jmp
xchg
into
repnz
push
test
js
jne
mov
into
sbb
cmc
lock
cmp
mov
or
in
(bad)
fcomp
cli
out
push
mov
lods
jmp
test
call
mov
xor
sar
sbb
ret
sbb
shl
mov
pop
dec
into
jecxz
jmp
adc
pop
mov
cmps
(bad)
push
popf
or
daa
jno
lock
lds
mov
cli
addr16
dec
loope
cmp
cmp
add
scas
mov
out
jge
sbb
jb
jle
mov
pop
pop
inc
sub
cwde
mov
ret
push
pop
add
(bad)
(bad)
call
jmp
inc
xor
out
jae
in
hlt
(bad)
and
dec
pop
mov
(bad)
dec
xor
mov
or
retf
dec
sbb
daa
(bad)
out
and
(bad)
call
adc
shr
daa
xchg
ins
loop
outs
jb
outs
cmps
test
push
sub
jns
jle
ds
cmp
sub
pop
jb
pop
ja
cmps
pop
(bad)
(bad)
(bad)
(bad)
mov
cmp
int3
and
or
sub
dec
jbe
mov
jg
(bad)
cwde
pushf
rcl
cmp
xor
mov
sub
xchg
bound
mov
cmp
cs
(bad)
(bad)
jmp
fs
mov
mov
ins
push
lods
jbe
ds
je
out
pop
(bad)
(bad)
(bad)
(bad)
jg
rol
or
pop
jnp
ins
xchg
int
bound
add
jge
and
lahf
icebp
jmp
sbb
push
icebp
mov
sbb
cmps
(bad)
pop
in
mov
lods
es
call
cmp
fdivr
add
(bad)
call
jg
imul
jbe
div
shr
sub
(bad)
call
test
repnz
retf
pushf
fs
jne
iret
mov
(bad)
dec
imul
frstor
popa
in
shr
mov
(bad)
sub
out
jmp
adc
jns
fwait
or
inc
jge
das
xchg
jmp
pusha
(bad)
(bad)
(bad)
jmp
inc
pop
xor
(bad)
or
pushf
mov
inc
mov
xchg
cmp
popf
inc
pop
jb
mov
icebp
(bad)
(bad)
call
lods
mov
dec
aad
ins
popf
in
cmp
addr16
inc
adc
or
dec
call
adc
test
xchg
(bad)
(bad)
(bad)
inc
shl
stos
mov
mov
inc
dec
nop
push
icebp
jge
dec
xchg
inc
clts
cmp
cmp
xor
push
js
pop
cmc
enter
dec
dec
xor
ret
mov
and
(bad)
cdq
test
dec
fld
mov
jle
in
nop
fisttp
ror
inc
(bad)
(bad)
(bad)
call
push
sar
ss
sbb
popa
aaa
and
js
lods
js
pop
(bad)
(bad)
(bad)
(bad)
adc
or
sbb
inc
and
repz
mov
clc
(bad)
arpl
inc
in
mov
adc
(bad)
dec
(bad)
(bad)
jmp
lahf
repz
jecxz
push
inc
mov
adc
loope
loope
sbb
jo
sar
jp
jnp
scas
mov
(bad)
xchg
xor
dec
and
(bad)
(bad)
shl
out
(bad)
pop
lods
ins
popa
mov
push
cs
les
xlat
jmp
jl
movhps
ret
jae
hlt
jmp
or
inc
dec
mov
fld
mov
jbe
je
ror
jb
push
data16
add
jg
lds
cmp
out
mov
fild
ret
sbb
mov
push
pop
mov
(bad)
(bad)
push
push
xchg
xchg
lock
dec
dec
dec
and
pop
mov
adc
clc
loopne
push
ins
outs
ret
sti
ds
or
retf
push
inc
jg
mov
(bad)
loope
iret
cld
xor
adc
or
out
(bad)
sti
jmp
dec
fcomip
pop
add
aas
div
sbb
add
jmp
sar
cmp
add
mov
pop
mov
(bad)
loop
cli
xor
inc
xchg
cmp
jl
(bad)
dec
pop
call
imul
shl
cmp
(bad)
fcomip
call
sub
je
cmp
inc
add
ja
outs
fidiv
add
(bad)
mov
xchg
out
cmp
add
shr
push
(bad)
jmp
(bad)
mov
fdivrp
mov
ds
ja
(bad)
(bad)
mov
pop
lahf
jl
mov
ror
aas
add
cmp
add
call
hlt
popa
sub
out
push
loope
in
adc
mov
xor
pushf
inc
clc
(bad)
(bad)
call
xor
scas
jle
retf
dec
push
lahf
sub
into
(bad)
out
mov
dec
(bad)
jmp
push
(bad)
enter
(bad)
out
xor
ret
pusha
outs
pop
(bad)
(bad)
(bad)
dec
dec
xor
test
movs
mov
push
jb
xor
add
push
dec
aad
mov
in
mov
shl
push
or
ss
scas
(bad)
(bad)
bound
mov
(bad)
mov
daa
fnsave
imul
sahf
ja
adc
bound
or
(bad)
(bad)
sbb
sbb
adc
in
xlat
stc
cmp
arpl
(bad)
out
jge
repz
(bad)
(bad)
(bad)
jmp
sub
repnz
add
xor
loopne
mov
add
lds
cmps
(bad)
out
es
mov
inc
mov
pop
and
inc
dec
add
lea
clc
out
outs
push
lds
ret
or
sbb
mov
ins
sub
cmp
data16
in
lock
(bad)
jg
sbb
sub
jae
xor
jbe
mov
and
iret
xchg
jl
ud0
push
and
test
pop
sbb
scas
fnstenv
outs
mov
in
(bad)
(bad)
jmp
ins
mov
fmul
outs
cwde
ss
call
(bad)
cld
in
clc
repnz
add
nop
cwde
jne
outs
xchg
(bad)
(bad)
(bad)
(bad)
cmp
lock
data16
push
push
push
movs
mul
icebp
xor
sub
clc
push
pop
clc
dec
sbb
mov
fdiv
popf
call
clc
cmp
or
fidivr
(bad)
push
aas
test
pusha
std
outs
clc
dec
shr
loope
addr16
cmp
adc
call
mov
out
daa
mov
loope
hlt
jo
dec
xchg
pop
mov
or
in
jo
es
(bad)
(bad)
(bad)
dec
lock
sbb
jne
xchg
in
dec
(bad)
jg
(bad)
and
jns
and
(bad)
(bad)
push
clc
test
inc
mov
inc
dec
clc
enter
adc
xor
dec
jne
in
sub
cli
repnz
fcmovnbe
sbb
pusha
fs
clc
fld
push
jl
cmovg
xchg
mov
push
jg
mov
push
aaa
std
mov
pop
cmp
pop
and
loopne
(bad)
(bad)
(bad)
sti
aas
and
pop
jp
mov
mov
jne
test
mov
fiadd
mov
push
hlt
inc
je
fisttp
es
inc
popf
mov
fsubr
mov
icebp
outs
clc
popf
cmps
test
jge
nop
sbb
jno
fsub
push
(bad)
(bad)
call
andnps
xlat
gs
sub
push
inc
(bad)
push
mov
pop
cmp
je
cli
push
mov
aam
in
movs
mov
shr
push
lods
pop
adc
or
lea
mov
push
mov
out
fs
dec
xor
std
cmp
rol
ins
or
out
and
sbb
int
mov
jg
and
ja
mov
cwde
inc
push
lods
or
out
sub
mov
mov
or
adc
sub
scas
mov
push
mov
(bad)
(bad)
(bad)
push
ficomp
les
and
ja
or
imul
push
xchg
das
aad
loopne
mov
(bad)
(bad)
(bad)
(bad)
cmp
and
add
sub
mov
inc
fcmovnb
mov
cmps
adc
or
(bad)
(bad)
(bad)
(bad)
call
rcr
cmp
mov
adc
ins
sub
stos
sub
call
pop
iret
xor
ror
xor
lahf
jb
cmp
inc
jmp
sub
call
arpl
push
sub
out
cld
movs
xor
xor
scas
or
xchg
rol
iret
jnp
add
mov
mov
xchg
sbb
or
pop
dec
jl
or
scas
mov
(bad)
(bad)
jmp
fst
sti
fwait
push
sbb
ins
push
push
adc
jae
enter
stos
push
in
je
pushf
jp
mov
(bad)
(bad)
(bad)
jp
ss
imul
mov
aas
inc
jle
dec
push
pop
add
or
test
cmp
(bad)
(bad)
(bad)
push
adc
adc
push
pop
in
dec
push
mov
jmp
es
mov
inc
(bad)
jmp
js
pop
mov
fs
cmp
sbb
mov
mov
or
call
xchg
fdiv
je
push
ins
retf
pusha
daa
mov
inc
out
and
shl
xor
iret
add
pusha
popf
jne
add
es
mov
daa
xor
(bad)
(bad)
(bad)
call
xchg
imul
pop
mov
xor
dec
test
jmp
and
inc
add
adc
or
and
enter
(bad)
(bad)
inc
addr16
fucom
repnz
jl
(bad)
addr16
outs
ins
(bad)
and
cmp
(bad)
dec
mov
fcmove
in
lods
push
cs
pop
mov
outs
cs
mov
push
shl
jl
xchg
in
test
call
sub
xlat
sub
call
xlat
add
xchg
not
into
dec
lahf
cli
mov
hlt
fwait
pop
(bad)
fbld
data16
xlat
imul
dec
scas
and
fisttp
outs
and
ret
fist
sbb
(bad)
(bad)
inc
dec
jge
iret
lock
aas
fmul
fprem1
aaa
loop
(bad)
pop
(bad)
pop
aaa
(bad)
(bad)
(bad)
jmp
jnp
in
mov
jge
int
shl
in
enter
adc
xor
mov
dec
(bad)
jg
data16
stos
daa
mul
imul
hlt
lock
and
(bad)
(bad)
call
outs
movs
lea
and
mov
cmp
push
test
xchg
cwde
data16
lds
(bad)
(bad)
(bad)
call
jo
mov
sbb
mov
nop
lods
jp
and
loopne
cwd
jb
(bad)
(bad)
(bad)
(bad)
jmp
test
pop
mov
(bad)
xlat
sahf
mov
pop
lods
lods
fmul
sbb
inc
inc
push
test
repnz
jno
pusha
aaa
add
sub
(bad)
(bad)
jnp
mov
inc
push
cs
mov
imul
sar
jo
xchg
xor
pop
in
jo
in
fdiv
clc
clc
std
jmp
fsubrp
outs
les
mov
sbb
aam
and
ret
sub
lea
je
cmp
push
mov
mov
js
retf
ds
stos
imul
shr
imul
outs
rcr
rcr
sub
retf
xor
pop
enter
pop
fwait
sub
out
(bad)
adc
xchg
test
dec
mov
or
out
mov
cmp
retf
loope
(bad)
(bad)
jmp
out
lock
mov
xchg
shl
cmp
nop
mov
mov
push
cld
dec
pop
lods
adc
daa
jae
add
pop
sbb
push
cli
shl
(bad)
mov
div
sbb
std
adc
xor
data16
inc
adc
xor
adc
mov
cmc
pop
push
or
jle
jle
aas
xchg
clc
retf
(bad)
aaa
(bad)
(bad)
(bad)
(bad)
mov
inc
cmp
in
lds
xchg
repz
and
mov
daa
mov
loop
in
mov
dec
or
mov
push
or
std
outs
inc
mov
or
lods
jmp
hlt
loop
jbe
jg
jecxz
inc
sbb
hlt
push
mov
mov
xchg
mov
(bad)
(bad)
call
cmc
inc
dec
sub
or
inc
sar
int
push
dec
adc
jg
dec
fcmovnbe
ret
sar
ja
mov
icebp
or
(bad)
jmp
hlt
test
jne
sbb
cs
mov
loope
loop
and
pop
adc
mov
or
cmc
push
or
and
in
cs
fbstp
xchg
sbb
rcr
cld
aam
test
push
dec
mov
lds
pop
test
add
fwait
rcl
jmp
add
in
mov
imul
hlt
mov
mov
addr16
dec
push
outs
clc
(bad)
mov
pop
int3
push
jbe
sbb
or
inc
test
push
(bad)
(bad)
(bad)
call
and
push
shl
test
or
xchg
das
lock
popf
aas
in
pop
arpl
xor
aam
popa
dec
push
push
ret
jg
and
shl
mov
(bad)
(bad)
out
mov
iret
bound
sub
into
test
or
addr16
(bad)
jg
cmp
inc
and
inc
jb
mov
cmp
(bad)
xchg
jg
(bad)
data16
or
(bad)
cmps
jmp
rcr
gs
aaa
or
adc
cwde
jae
inc
and
ins
retf
add
push
call
(bad)
call
int
pusha
imul
ja
pusha
jb
jb
mov
fimul
call
sbb
das
rol
aad
xor
dec
rcl
popf
and
dec
sbb
mov
or
(bad)
(bad)
(bad)
jle
test
push
enter
mov
gs
mul
lds
mov
mov
clc
(bad)
out
inc
das
neg
test
inc
mov
(bad)
mov
xchg
inc
or
(bad)
jmp
lahf
cs
jecxz
lea
mov
mov
sbb
xchg
inc
lods
xchg
(bad)
jg
sub
shl
cmp
sub
xor
dec
mov
outs
pop
movhps
(bad)
fcom
push
dec
cmps
push
movs
dec
in
cmc
test
and
in
and
call
in
(bad)
sbb
inc
mov
push
jmp
leave
icebp
rcr
push
int
inc
fs
cld
es
(bad)
call
inc
mov
sub
xchg
(bad)
aaa
mov
call
cmp
xchg
jp
or
jns
pop
sbb
ja
ds
jmp
aaa
dec
or
and
jb
std
mov
mov
adc
inc
pop
and
jmp
sar
dec
neg
push
imul
add
lock
(bad)
mov
sbb
jae
and
pop
add
jno
daa
loop
mov
xchg
test
(bad)
sub
movs
add
(bad)
call
jg
pop
cmp
or
(bad)
mov
data16
gs
sub
push
rcl
repz
clc
(bad)
(bad)
(bad)
jle
sub
push
xor
jae
fs
cdq
add
adc
pop
xchg
(bad)
jmp
cdq
xor
movs
xor
or
gs
(bad)
inc
cmp
daa
sub
mov
pop
and
mov
ins
add
xchg
popf
cmc
nop
mov
push
in
pop
test
call
fsub
or
pop
dec
imul
jg
and
mov
ss
jne
in
arpl
adc
mov
xor
mov
adc
sbb
aas
add
test
mov
or
xchg
sahf
jmp
push
outs
jg
fdivrp
jmp
and
fiadd
scas
sub
pop
clc
cmp
(bad)
(bad)
(bad)
call
cmp
jmp
add
fist
popa
sub
dec
push
adc
(bad)
(bad)
dec
(bad)
in
sbb
das
outs
or
mov
leave
ja
mov
mov
lods
(bad)
(bad)
(bad)
(bad)
cld
lds
call
jns
stc
dec
mov
test
dec
cmp
(bad)
(bad)
(bad)
cmp
jl
fnstcw
pop
out
out
mov
daa
iret
ror
jno
aas
jp
sbb
and
(bad)
(bad)
(bad)
jmp
ret
mov
mov
test
inc
sbb
popa
pop
mov
sbb
jb
sub
adc
call
jmp
ret
pop
xlat
out
fadd
es
mov
loopne
xlat
punpcklwd
out
sar
push
or
push
adc
cli
bound
add
mov
push
add
jle
(bad)
iret
pusha
(bad)
cs
sti
jp
inc
sbb
mov
jecxz
pop
cld
push
out
mov
cmp
add
mov
mov
gs
push
enter
pop
nop
pop
mov
aad
mov
test
loopne
sbb
arpl
jmp
retf
mov
mov
and
(bad)
call
stos
retf
inc
mov
xchg
mov
fnsave
xor
cs
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
jbe
loop
fsubr
or
jp
pop
cmp
ins
mov
pop
(bad)
(bad)
dec
jno
les
and
arpl
mov
mov
mov
retf
xchg
cmps
(bad)
(bad)
inc
xor
ret
frstor
add
push
jge
pop
and
lock
inc
jbe
inc
rol
aam
adc
std
das
clc
sbb
pop
adc
std
fsubr
sbb
scas
cwde
xadd
lock
mov
cmp
aaa
xchg
xchg
hlt
and
mov
jle
fild
add
enter
push
imul
sub
cmp
sbb
icebp
sar
(bad)
jns
repz
or
pop
sbb
les
repnz
adc
push
sub
mov
loop
pop
dec
inc
pushf
pop
xchg
leave
mov
(bad)
(bad)
(bad)
call
and
xor
lahf
inc
xchg
sbb
popf
(bad)
ret
in
jg
mov
sti
(bad)
(bad)
(bad)
(bad)
inc
adc
xchg
repz
dec
imul
cmc
ficom
cmp
ins
ja
and
inc
add
addr16
fdiv
cmps
leave
(bad)
sahf
sbb
inc
ja
daa
push
or
push
jb
mov
mov
push
imul
xor
leave
mov
fnstsw
pop
add
mov
sub
es
jne
fs
lods
mov
aas
aas
das
sub
inc
stc
push
and
pop
mov
push
ret
push
xchg
mov
jns
add
lods
dec
pusha
sub
(bad)
dec
cli
lock
shr
xchg
or
mov
dec
dec
shr
jl
cs
jle
mov
cwde
adc
inc
in
ror
or
or
scas
sti
mov
cmc
sbb
lea
adc
hlt
movs
xor
ja
mov
call
cdq
retf
pop
(bad)
push
out
stc
addr16
mov
ins
jge
cmc
(bad)
jmp
mov
cmp
sub
sbb
jno
bound
inc
push
cmp
lea
mov
ins
sbb
sub
les
jge
xchg
in
stos
icebp
(bad)
(bad)
(bad)
(bad)
mov
xor
push
aam
push
pop
pop
add
pop
pop
pop
cli
cld
dec
ds
sub
mov
test
mov
jne
loopne
(bad)
mov
jp
xor
or
mov
cmp
sar
jmp
dec
jle
push
jb
bound
sar
outs
or
call
pop
call
lods
xchg
mov
xchg
movs
push
int3
repnz
(bad)
(bad)
dec
shl
shl
stos
push
movs
retf
mov
jg
mov
(bad)
sbb
(bad)
call
dec
cli
fucomp
and
mov
add
inc
jno
jge
inc
push
xchg
and
mov
or
push
clc
pop
idiv
dec
outs
xchg
cmp
(bad)
(bad)
dec
inc
xchg
jle
out
nop
mov
enter
xchg
pop
pusha
adc
out
inc
mov
fidivr
jl
outs
jl
(bad)
(bad)
(bad)
jg
mov
push
enter
(bad)
fisubr
xor
cmp
call
and
dec
adc
sbb
mov
pop
mov
add
mov
cwde
cdq
mov
jmp
cmps
movs
dec
sbb
stos
xor
(bad)
out
pop
push
push
xor
pop
add
push
arpl
out
stos
(bad)
cld
pop
push
jmp
clc
mov
xchg
mov
dec
and
and
fdivr
imul
in
ins
les
xchg
add
or
jecxz
cdq
cmp
sbb
mov
lods
pop
mov
pop
adc
sub
(bad)
call
sub
inc
shr
scas
enter
xchg
dec
pushf
jmp
jmp
mov
add
mov
jge
loop
(bad)
(bad)
sti
cmp
xor
push
in
pop
dec
sub
imul
push
dec
scas
ficomp
and
sar
call
hlt
adc
outs
mov
pop
js
pop
call
(bad)
(bad)
(bad)
dec
stos
lods
push
fs
jae
out
(bad)
popa
out
jo
pop
sub
mov
leave
xor
adc
lods
in
jmp
push
clc
imul
fs
aaa
inc
stos
in
(bad)
push
out
test
mov
in
mov
cmps
dec
bnd
jl
ds
(bad)
(bad)
out
clc
mov
ret
sahf
add
mov
aaa
jmp
inc
mul
and
push
stos
add
arpl
pushf
inc
shr
scas
pop
je
data16
not
retf
xchg
xchg
(bad)
(bad)
jmp
dec
sbb
fchs
push
out
fdiv
push
and
mov
(bad)
call
or
repz
and
add
enter
cli
sahf
xchg
ds
loope
imul
bound
push
shr
repz
clc
sar
clc
or
hlt
push
or
cmp
xor
aam
xor
jecxz
(bad)
call
adc
push
dec
mov
(bad)
sbb
inc
adc
cmp
jb
mov
cmp
hlt
inc
dec
xchg
rcl
adc
cmp
stc
add
push
xchg
inc
test
mov
mov
outs
xor
stc
aam
cmp
in
xor
cli
call
out
adc
(bad)
push
fldenv
pop
xlat
adc
push
adc
push
pushf
xor
gs
daa
arpl
pop
les
dec
or
and
(bad)
(bad)
push
ret
jmp
xchg
retf
dec
adc
mov
add
add
hlt
pop
sub
cmps
fs
neg
cmp
pusha
ins
mov
adc
sub
push
into
loope
dec
inc
and
(bad)
(bad)
jg
clc
mov
inc
lahf
dec
or
outs
inc
leave
in
mov
push
sub
out
ja
sbb
(bad)
jmp
dec
and
mov
loopne
inc
aaa
int3
leave
fwait
movs
push
cmps
or
dec
(bad)
call
dec
jnp
enter
ret
iret
popf
cmp
(bad)
(bad)
in
inc
ror
fisub
mov
rol
(bad)
(bad)
out
add
cwde
add
and
inc
dec
cmc
(bad)
(bad)
inc
add
sbb
stos
xchg
xchg
jbe
in
jge
lahf
mov
add
push
mov
jle
adc
stos
popf
fnstcw
not
std
inc
xchg
inc
fstp
dec
scas
jg
(bad)
xchg
icebp
push
sub
inc
mov
pop
mov
in
(bad)
(bad)
(bad)
call
add
mov
leave
in
hlt
pop
jge
movs
ret
pop
enter
or
ins
fsub
jg
(bad)
jmp
xor
pop
test
add
inc
imul
cmp
(bad)
(bad)
call
retf
jmp
stc
push
sub
inc
lods
dec
jb
lock
xchg
call
scas
aaa
add
repz
pop
or
mov
dec
ss
jg
mov
es
iret
jmp
rcr
xchg
fbstp
xchg
ins
pushf
call
sbb
inc
in
lds
mov
mov
fs
mov
(bad)
(bad)
(bad)
inc
sub
leave
lods
mov
or
(bad)
cs
pop
pop
jmp
cmp
in
pop
(bad)
mov
fstp
or
xor
aad
jnp
sub
mov
inc
mov
pop
adc
mov
(bad)
(bad)
inc
cmps
push
(bad)
and
xchg
xor
movs
cmps
std
sub
xor
stos
sbb
add
(bad)
call
pushf
shl
repz
sbb
ins
gs
or
sbb
popf
xchg
bound
mov
and
pop
mov
xchg
arpl
xchg
lds
ror
(bad)
(bad)
(bad)
std
add
imul
dec
scas
lods
rcr
dec
aaa
push
dec
cmp
in
outs
(bad)
(bad)
jmp
stc
ror
inc
cmp
cmp
mov
(bad)
(bad)
inc
xchg
nop
call
aaa
xchg
xchg
aas
leave
sub
iret
pushf
imul
or
dec
dec
mov
jle
ins
ins
add
mov
pop
repnz
push
pop
adc
test
out
sar
inc
jae
addr16
and
clc
push
sbb
cmovge
lea
and
shl
xor
pop
loopne
(bad)
xor
mov
mov
ror
mov
xchg
nop
mov
sbb
adc
cmp
cmp
jle
mov
mov
pop
pop
fadd
out
fstp
(bad)
jmp
nop
jmp
push
adc
pop
sbb
shl
dec
add
ret
mov
push
data16
cmp
jmp
jae
es
jmp
mov
rep
dec
repz
ja
add
out
imul
int
pusha
aaa
movs
out
hlt
cld
pop
xor
dec
dec
fild
push
jne
fs
inc
rcr
je
xchg
enter
pop
sbb
or
std
aad
jg
mov
and
fdivr
xchg
pop
mov
stc
jb
out
in
fidiv
mov
add
dec
repnz
mov
jmp
mov
dec
mov
(bad)
call
fs
test
in
test
xor
xor
pusha
inc
clc
aas
out
xchg
push
mov
adc
lock
stos
mov
or
les
push
pop
mov
mov
retf
jl
xor
xchg
mov
xchg
and
sbb
and
imul
jno
jmp
sahf
cmp
idiv
das
fiadd
mov
loopne
sub
lock
stos
out
inc
out
mov
enter
mov
xchg
mov
and
mov
push
lahf
lahf
adc
cmc
(bad)
dec
adc
sbb
xor
mov
and
mov
pushf
pop
push
mov
cmc
jb
push
xchg
adc
pusha
jb
cli
imul
pop
mov
jne
lahf
xlat
mov
lods
pop
jecxz
jnp
or
mov
(bad)
call
cmp
add
(bad)
jg
ror
lods
cmp
neg
add
in
sub
iret
into
cmp
bnd
mov
and
pop
stos
in
outs
xchg
mov
leave
sbb
in
(bad)
(bad)
(bad)
call
fldenv
stos
popf
je
dec
leave
mov
jb
sub
pop
loope
xor
pop
pop
(bad)
(bad)
jg
fild
dec
mov
xchg
cmp
repnz
into
mov
(bad)
call
adc
sar
xor
xchg
or
es
pusha
js
add
jae
dec
(bad)
(bad)
(bad)
dec
inc
add
sbb
xor
loope
add
pop
or
call
mov
cld
(bad)
sti
fmul
mov
popa
jo
inc
jl
pop
sbb
adc
(bad)
mov
cmp
out
pop
cmps
mov
cmp
stos
xchg
(bad)
(bad)
call
fiadd
into
fwait
mov
push
ja
dec
imul
ss
push
cli
jp
fmul
push
inc
clc
jmp
mov
push
sub
push
mov
inc
inc
jmp
nop
xor
mov
sbb
push
lods
and
loopne
rcl
sbb
and
(bad)
mov
ret
sbb
ins
adc
out
out
js
add
(bad)
(bad)
push
js
je
pushf
sahf
add
in
or
data16
repz
mov
inc
sbb
mov
xchg
je
mov
ds
call
and
sbb
sbb
(bad)
cwde
inc
or
shr
mov
mov
mov
fnsave
jae
inc
dec
jl
hlt
scas
pop
add
inc
mov
dec
cmp
pushf
mov
xlat
fmul
outs
or
xor
fild
jae
xchg
call
test
(bad)
jmp
jns
mov
outs
jle
pop
cmp
dec
jecxz
fwait
das
shl
(bad)
mov
test
mov
push
test
mov
(bad)
(bad)
(bad)
mov
ss
inc
dec
inc
cli
inc
fsubr
je
(bad)
and
xchg
jecxz
call
sahf
ins
fidiv
jns
add
fscale
out
scas
mov
fild
cmp
dec
int3
xchg
shr
cs
test
fnstenv
jb
push
adc
pop
jno
loopne
mov
mov
test
ds
in
(bad)
(bad)
(bad)
call
lahf
pop
or
retf
mov
popf
popf
pop
popf
xor
add
gs
jmp
cli
mov
leave
out
adc
(bad)
jg
xor
rcl
sti
dec
outs
dec
gs
js
mov
(bad)
(bad)
(bad)
inc
mov
(bad)
outs
test
xlat
loop
sbb
inc
xor
jmp
adc
pusha
fsub
sbb
(bad)
(bad)
jmp
dec
or
mov
jle
sub
push
sub
jbe
inc
mov
out
sahf
cli
(bad)
(bad)
dec
enter
inc
or
fs
out
mov
sub
xchg
push
mov
(bad)
(bad)
(bad)
out
sbb
iret
push
mov
add
jp
adc
xor
jmp
test
enter
data16
rcr
add
nop
or
pop
push
aam
mov
cmp
mov
in
or
(bad)
(bad)
(bad)
call
adc
dec
fdivr
mov
dec
pop
cmps
sub
dec
inc
aaa
movs
(bad)
(bad)
(bad)
dec
(bad)
push
pushf
xor
pop
into
xchg
inc
(bad)
sub
retf
mov
out
mov
mov
xor
dec
lahf
sub
in
push
fadd
sub
cmps
scas
dec
aaa
shl
(bad)
(bad)
(bad)
(bad)
mov
jecxz
jae
push
or
mov
dec
call
jne
sbb
(bad)
(bad)
(bad)
call
and
outs
jb
fst
xor
pop
adc
adc
rol
(bad)
in
call
dec
lahf
mov
and
push
fwait
rcr
push
mov
(bad)
jg
and
inc
sub
retf
cwde
pop
sbb
xchg
adc
std
fsubr
sar
mov
outs
mov
push
sub
lods
xchg
icebp
frstor
sub
imul
inc
pop
xchg
sbb
int3
xor
retf
push
jmp
push
in
pop
sub
call
inc
mov
movs
cld
mov
xchg
fldenv
xor
or
pop
ins
sbb
jg
inc
loopne
jmp
lahf
daa
jcxz
pop
push
shr
xchg
fdiv
fadd
mov
dec
test
(bad)
jmp
cli
nop
and
and
jne
xchg
lds
jb
(bad)
(bad)
fild
inc
xor
and
arpl
cmp
dec
sbb
inc
ret
outs
add
mov
rcr
popa
mov
fbstp
xchg
and
call
mov
add
xlat
lock
fwait
outs
push
imul
mov
or
(bad)
clc
loopne
cmp
inc
jmp
out
jg
inc
ret
js
test
inc
push
inc
adc
push
sub
inc
xchg
adc
sub
sub
(bad)
(bad)
dec
xchg
xor
pshufw
test
or
mov
xchg
popa
jg
add
pusha
mov
les
lods
mov
(bad)
(bad)
jmp
sub
es
aad
imul
push
scas
dec
jle
lea
pop
(bad)
(bad)
(bad)
push
fld
adc
ret
es
iret
ds
jbe
xor
lea
ds
lea
and
push
(bad)
(bad)
inc
mov
out
(bad)
adc
into
nop
scas
xchg
jno
lahf
jge
and
cmp
(bad)
(bad)
(bad)
stc
mov
cmps
jbe
in
jl
in
xor
push
mov
jbe
pop
(bad)
(bad)
(bad)
call
add
add
cmp
fdiv
xchg
fnstcw
fstp
cmp
jmp
cmp
fwait
retf
sub
pop
and
sub
xchg
ret
and
(bad)
call
cmp
sub
xor
es
(bad)
jmp
jmp
add
push
rcl
lods
push
mov
push
mov
push
sub
jg
inc
cmps
mov
(bad)
(bad)
inc
fdiv
jmp
push
popf
repz
sub
sbb
pop
jmp
cld
movs
inc
icebp
push
sub
sub
mov
pop
out
jbe
(bad)
(bad)
(bad)
push
pop
dec
pop
fmul
fist
push
inc
outs
call
ins
mov
inc
jbe
sahf
nop
fwait
(bad)
(bad)
(bad)
call
ins
dec
jnp
jo
pusha
jne
inc
sbb
pushw
jge
fadd
iret
jge
bound
add
mov
mov
daa
push
adc
shr
pop
fisub
push
adc
cs
pop
sub
scas
iret
dec
sbb
jns
stc
loopne
(bad)
jmp
add
test
nop
sbb
sbb
jp
pop
jle
cmp
sbb
xchg
iret
(bad)
sar
pop
(bad)
mov
out
adc
outs
iret
(bad)
shl
xor
(bad)
mov
inc
sub
xchg
fistp
xchg
pop
xlat
sbb
loopne
jnp
int3
aam
or
jecxz
and
push
jmp
xchg
lock
pop
mov
adc
push
pop
cs
call
xchg
pusha
sbb
jno
push
jns
sub
(bad)
(bad)
(bad)
call
test
inc
popf
or
push
and
cwde
ret
ins
sub
and
pop
cmp
adc
call
cmp
inc
(bad)
loope
retf
out
xchg
mov
cdq
ret
adc
mov
(bad)
(bad)
inc
aaa
inc
iret
sub
bound
sahf
mov
dec
mov
inc
pop
adc
and
jmp
(bad)
dec
out
xor
std
jmp
sub
jb
sub
jb
dec
mov
je
xor
(bad)
(bad)
jmp
imul
ret
and
aaa
lea
(bad)
xor
mov
dec
inc
pop
imul
and
xor
frstor
dec
push
jecxz
jae
ror
sub
mov
call
mov
(bad)
int
(bad)
push
je
adc
sbb
and
in
rcr
jno
daa
inc
outs
cli
mov
enter
sbb
out
stc
and
(bad)
(bad)
(bad)
inc
sub
sbb
ja
ins
push
daa
fcmovu
loop
in
push
and
ror
ret
push
repz
lock
jl
lahf
aaa
lock
cdq
adc
sbb
or
push
outs
pop
cmp
ret
(bad)
call
mov
iret
pop
xor
dec
dec
mov
ins
adc
dec
mov
mov
jle
xchg
(bad)
(bad)
jmp
sahf
jnp
cmps
daa
or
enter
mov
mov
(bad)
cs
out
dec
pop
popa
adc
mov
and
jmp
(bad)
mov
lds
add
add
stos
mov
lea
(bad)
call
cmps
ss
(bad)
stos
fs
add
mov
adc
jg
popf
cld
cmp
jmp
(bad)
stc
or
cwde
pop
jbe
mov
stos
cmp
push
not
retf
mov
(bad)
call
lahf
dec
cmps
jno
fwait
outs
(bad)
call
jae
mov
imul
mov
retf
test
call
pop
js
ret
jo
clc
push
bound
(bad)
(bad)
out
shr
shl
pushf
sbb
popa
fs
jo
dec
or
xor
fadd
cld
les
gs
mov
dec
jecxz
mov
push
push
xor
push
rcl
sti
cmp
(bad)
jmp
add
push
jo
out
push
pop
mov
mov
div
retf
lods
out
sbb
ins
popf
mov
je
or
sar
pop
in
gs
or
call
jae
scas
adc
les
fiadd
loopne
mov
push
mov
adc
add
sar
in
mov
jb
rcr
push
call
dec
cmp
gs
int3
push
sbb
fnstsw
mov
add
pop
push
inc
mov
call
test
es
and
dec
inc
inc
aad
and
mov
and
(bad)
(bad)
fild
nop
repnz
pop
ret
call
rcr
fisttp
mov
(bad)
jg
and
or
mov
mov
sbb
inc
cmp
imul
add
push
imul
(bad)
sbb
ret
out
adc
ja
mov
ins
(bad)
(bad)
(bad)
dec
jmp
clc
fnstenv
ds
xor
xchg
outs
xchg
xor
dec
(bad)
mov
mov
(bad)
jbe
jle
pop
push
push
fs
fist
or
xlat
das
mov
or
fldenv
retf
outs
pop
xchg
cld
(bad)
(bad)
(bad)
js
movs
xor
xlat
push
sar
jmp
pop
outs
lods
icebp
jle
(bad)
(bad)
call
jo
or
xchg
cmc
int3
jl
stos
push
dec
ror
and
xchg
inc
sub
in
jl
(bad)
(bad)
(bad)
jmp
rcr
dec
pop
loope
(bad)
cmc
mov
fbstp
lods
push
dec
adc
arpl
ds
xor
sub
inc
test
adc
mov
or
fwait
jbe
adc
mov
std
test
pop
lock
stos
stos
push
int
sub
movs
push
sbb
fisttp
mov
mov
in
mov
enter
and
mov
icebp
into
stos
sub
jmp
movs
je
shr
arpl
xor
(bad)
(bad)
(bad)
(bad)
mov
stos
cdq
cmp
cmps
shr
xchg
stc
dec
imul
cwde
faddp
imul
inc
mov
jge
out
sbb
dec
mov
add
stos
jp
shr
call
fmul
out
mov
stc
loop
push
repnz
fst
test
leave
jmp
push
icebp
sub
(bad)
inc
cmp
push
fstp
sub
sbb
xchg
in
mov
mov
cmp
jmp
out
sahf
inc
imul
mov
jmp
shl
stc
repz
jmp
mov
mov
sub
icebp
cmovs
and
mov
lock
ss
jg
jle
(bad)
(bad)
icebp
push
stos
add
rcr
mov
inc
push
mov
jmp
add
jns
sbb
or
js
imul
clc
(bad)
inc
cmp
adc
iret
sbb
jae
int
das
mov
lea
(bad)
repnz
pop
shr
mov
call
fisttp
outs
jne
icebp
push
mov
mov
ins
lods
(bad)
adc
mov
imul
and
pop
jecxz
push
dec
pushf
add
inc
imul
(bad)
(bad)
inc
and
aaa
adc
or
(bad)
mov
(bad)
(bad)
(bad)
(bad)
fsub
pop
in
(bad)
dec
stos
add
pop
addr16
sub
int
cli
fcom
les
pop
jmp
pop
cli
repnz
loopne
lock
sti
dec
lahf
ret
ins
mov
sbb
push
std
cs
jl
mov
pop
add
movs
and
(bad)
(bad)
call
sbb
mov
xlat
xlat
daa
out
fstp
push
loopne
jecxz
sub
in
xchg
je
je
cmp
loop
ins
inc
pop
pop
push
or
mov
add
aaa
pop
adc
(bad)
(bad)
(bad)
call
out
test
mov
dec
sbb
cmc
retf
vpgatherdd
ret
retf
addr16
cs
mov
xchg
addr16
(bad)
(bad)
inc
repz
js
dec
xchg
fdivr
xlat
mov
clc
sub
inc
ror
idiv
inc
cmps
xor
(bad)
(bad)
dec
pop
dec
aad
or
retf
push
jnp
pushf
and
and
mov
xchg
loop
add
(bad)
dec
(bad)
sbb
movs
pop
ror
hlt
xchg
adc
js
fwait
aad
(bad)
(bad)
(bad)
(bad)
mov
aaa
ja
xor
sbb
mov
jae
mov
mov
pop
mov
xor
call
(bad)
or
loopne
stos
push
adc
in
setne
mov
loop
pop
fidiv
call
xor
and
loope
cmps
xchg
push
jmp
mov
mov
cmp
add
call
xchg
sbb
(bad)
(bad)
call
dec
mov
lea
inc
push
sub
mov
ror
mul
in
popf
mov
cmc
mov
mov
or
push
daa
mov
stos
(bad)
inc
movs
dec
jmp
jp
loopne
test
ins
(bad)
push
out
mov
adc
push
(bad)
(bad)
(bad)
call
sti
out
stc
jnp
les
xchg
rcl
stc
stc
xchg
xor
ret
cmp
ficom
cs
nop
rcr
cld
(bad)
(bad)
inc
mov
aad
mov
push
xor
or
aas
jae
dec
test
out
ret
sub
ja
sub
mov
adc
fst
mov
hlt
sbb
ret
adc
rcr
popa
push
adc
out
(bad)
(bad)
mov
xor
out
js
out
jns
push
retf
arpl
jo
fidiv
mov
dec
mov
add
adc
push
stos
add
add
icebp
test
inc
mov
cld
(bad)
jg
mov
js
lock
pop
mov
in
pop
adc
push
xchg
(bad)
xor
daa
xchg
push
mov
popa
sbb
xchg
mov
stos
bound
ror
sbb
jmp
(bad)
mov
and
(bad)
jmp
adc
test
std
pop
scas
adc
or
jp
dec
std
xor
dec
leave
fnstcw
pop
(bad)
(bad)
mov
pusha
jp
jg
paddsb
cwde
arpl
xor
out
std
leave
or
call
push
push
jb
clc
pop
ret
mov
int
mov
(bad)
(bad)
fisttp
jmp
pusha
ret
mov
(bad)
hlt
jns
dec
adc
xchg
loope
push
and
or
loopne
add
jge
adc
sub
(bad)
mov
mov
int
vaddps
imul
sub
cmps
pcmpgtb
ret
inc
js
(bad)
(bad)
(bad)
jg
pop
pop
jmp
jne
outs
xchg
setae
(bad)
add
mov
mov
push
push
(bad)
(bad)
call
xor
jg
in
(bad)
int
icebp
pop
lea
lahf
loope
(bad)
call
adc
iret
stos
ret
int
dec
or
jnp
pop
call
pop
hlt
or
(bad)
(bad)
sti
call
lock
mov
jmp
fs
test
xchg
into
jns
xor
das
cli
sbb
push
fwait
into
fcomp
imul
add
call
and
lock
call
add
outs
or
pop
ret
dec
out
movs
push
and
movs
lods
jb
xor
(bad)
call
lods
repz
xchg
bnd
int
push
jmp
push
dec
xchg
sbb
je
adc
call
(bad)
call
sahf
xlat
inc
cdq
lea
(bad)
dec
add
clc
lea
mov
cmp
sub
adc
add
int3
out
ret
out
aaa
mov
add
out
jnp
dec
jl
push
inc
sbb
(bad)
(bad)
cli
stc
(bad)
xchg
fcos
cmp
fst
fwait
push
sub
mov
enter
push
mov
sahf
sbb
or
add
add
dec
or
mov
jns
in
(bad)
retf
xchg
outs
lods
add
jg
loopne
aam
sahf
jbe
call
not
sub
(bad)
(bad)
dec
jne
adc
jns
xor
iret
lods
push
popf
and
bndstx
(bad)
fistp
(bad)
jmp
leave
xchg
lahf
sahf
adc
dec
jl
popf
cs
(bad)
jg
push
inc
cmp
mov
sbb
mov
scas
jmp
(bad)
(bad)
inc
mov
xchg
lds
mov
ins
ss
mov
lds
fsub
add
mov
mov
stos
stos
lea
outs
cmp
sub
popa
mov
jmp
mov
pop
cmp
xor
cmc
jmp
rcl
loop
inc
jo
mov
outs
mov
popf
push
aaa
data16
popf
(bad)
ror
lds
sub
sub
(bad)
out
test
(bad)
(bad)
call
leave
mov
cld
sbb
in
adc
(bad)
cmp
(bad)
adc
mov
movs
inc
call
cmp
add
adc
stos
test
xor
shr
sub
loopne
push
cmp
pop
cmp
ins
or
pop
push
stos
pop
sub
nop
pop
cmp
(bad)
test
mov
ds
shr
mov
(bad)
(bad)
dec
jp
stc
sbb
je
dec
(bad)
push
or
not
push
hlt
cli
mov
mov
imul
push
jmp
add
adc
xor
(bad)
(bad)
call
xchg
out
pushf
es
adc
sub
test
mov
std
sub
(bad)
(bad)
cmp
pop
adc
scas
inc
loope
jae
sti
iret
ja
fisubr
(bad)
cli
call
fbld
test
out
(bad)
loopne
(bad)
jmp
pop
icebp
(bad)
mov
mov
jb
adc
leave
push
scas
mov
pop
xchg
add
cmp
in
push
or
call
push
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cmp
rcr
mov
iret
loopne
lahf
std
sbb
outs
std
jecxz
(bad)
push
dec
es
(bad)
or
push
js
adc
ins
(bad)
fxch
sbb
(bad)
fild
mov
icebp
sbb
movs
fs
fisttp
inc
scas
add
mov
mov
push
cmps
sub
loopne
neg
mov
(bad)
inc
pop
pop
arpl
inc
pop
xchg
and
vpaddd
dec
fbld
movs
xchg
call
inc
pop
gs
test
gs
mov
stc
and
jb
cli
(bad)
(bad)
jmp
std
lea
mov
add
in
(bad)
xchg
push
mov
xor
inc
(bad)
dec
add
mov
mov
fist
(bad)
(bad)
dec
cmp
inc
das
ret
in
add
mov
inc
xchg
inc
pop
mov
jl
push
ins
jecxz
push
xchg
ret
jnp
dec
mov
or
and
(bad)
dec
add
fs
scas
int
ds
inc
stos
mov
inc
outs
and
jne
mov
call
pop
jbe
in
test
in
lea
(bad)
(bad)
call
ss
pop
aad
popa
dec
dec
mov
iret
pop
and
mov
mov
cmp
call
adc
jecxz
cmp
outs
mov
dec
adc
sbb
cld
jg
mov
pop
fcmovu
push
pop
add
call
ror
bound
sbb
or
dec
push
(bad)
call
iret
cmps
mov
pusha
adc
ins
adc
mov
jmp
sub
(bad)
(bad)
dec
xchg
pop
ss
jne
mov
into
xor
(bad)
(bad)
inc
or
pop
movs
pop
xchg
cdq
dec
daa
jg
cmp
(bad)
sbb
push
(bad)
call
mov
inc
pop
push
lahf
and
jge
sub
sar
dec
cs
(bad)
(bad)
(bad)
(bad)
cmp
xor
fdiv
pushf
cmp
sub
daa
es
mov
les
fiadd
(bad)
(bad)
call
ds
mov
out
clc
repnz
daa
leave
mov
scas
pop
aad
(bad)
(bad)
(bad)
jmp
jmp
cmp
sbb
mov
cwde
add
in
mov
mov
(bad)
(bad)
(bad)
push
xchg
add
pop
add
pushf
inc
jae
and
mov
arpl
mov
mov
add
sahf
(bad)
(bad)
clc
mov
or
addr16
shl
imul
(bad)
lahf
fdivr
inc
xor
xor
popa
(bad)
pop
inc
imul
jmp
mov
aam
pop
mov
(bad)
(bad)
dec
(bad)
aad
xlat
(bad)
imul
mov
cld
scas
mov
(bad)
(bad)
(bad)
js
cmp
dec
enter
(bad)
and
mov
js
retf
inc
into
dec
and
mov
or
sbb
movs
je
ss
add
(bad)
jg
ss
push
mov
inc
adc
shr
mov
cmp
sub
xor
sbb
pop
xlat
pusha
(bad)
inc
xlat
sahf
int
(bad)
(bad)
(bad)
push
mov
xor
repnz
xor
int3
xor
mov
(bad)
(bad)
(bad)
dec
and
mov
jmp
rcl
fwait
inc
xor
inc
sbb
movs
xchg
ja
(bad)
(bad)
cmp
sub
in
or
xor
(bad)
(bad)
jg
int3
push
add
pop
dec
das
cmps
outs
lods
push
(bad)
fsub
outs
or
int
(bad)
(bad)
(bad)
(bad)
push
pusha
xchg
(bad)
addr16
shr
(bad)
js
mov
pop
rol
(bad)
(bad)
push
or
push
push
add
out
retf
mov
mov
adc
fs
cs
inc
sbb
call
call
out
in
or
lods
fwait
cwde
inc
adc
jge
inc
les
mov
ss
mov
mov
imul
jmp
push
and
cmp
push
mov
jmp
mov
out
add
adc
jb
pushf
js
retf
dec
iret
pop
push
jmp
outs
add
mov
push
aaa
fiadd
ret
cmp
(bad)
into
push
jp
push
cld
in
mov
js
xchg
inc
sub
adc
lock
into
cwde
shr
mov
inc
mov
das
sub
mov
in
mov
fisttp
pop
cmc
in
mov
pusha
adc
cmps
or
and
and
imul
(bad)
mov
push
sub
sbb
mov
and
sbb
(bad)
(bad)
call
fcomp
inc
cmps
out
mov
push
test
and
(bad)
adc
scas
cmps
test
ds
xchg
xor
jp
ja
jecxz
mov
xor
fistp
(bad)
cmc
das
inc
pop
xchg
mov
lock
enter
mov
add
cmp
sar
jecxz
jmp
add
ret
rcl
push
(bad)
in
push
(bad)
jge
push
(bad)
(bad)
(bad)
jg
sub
mov
retf
and
xor
lea
xchg
cli
or
mov
fbld
add
jmp
out
mov
dec
hlt
xor
call
push
jmp
shl
dec
xchg
jecxz
jb
dec
push
popa
cmp
and
outs
cmc
hlt
sub
ror
div
dec
xchg
mov
(bad)
mov
sbb
test
movs
test
(bad)
(bad)
call
pop
stc
or
lods
jns
dec
sbb
rcl
jl
ja
cld
pop
xor
sahf
mov
(bad)
(bad)
jmp
sub
loopne
out
mov
arpl
or
dec
add
sti
jecxz
das
dec
and
adc
out
fwait
pop
jb
(bad)
(bad)
fwait
not
cmp
pop
mov
and
loopne
fwait
dec
xor
mov
rcl
mov
scas
loop
xchg
or
pop
mov
dec
lock
mov
inc
xlat
mov
bound
cwde
push
pop
xor
sub
jmp
gs
jmp
fdiv
int3
and
imul
(bad)
adc
jmp
push
das
adc
fcomp
(bad)
push
and
pop
xchg
scas
std
or
loop
jg
mov
call
(bad)
(bad)
(bad)
call
inc
out
popf
leave
and
repnz
sub
leave
(bad)
ja
js
mov
xor
test
mov
jmp
lock
(bad)
call
add
xlat
pop
jge
mov
mov
push
mov
jp
cmp
test
cmp
push
push
jne
inc
dec
push
pop
sahf
and
jecxz
clc
jmp
shl
mov
adc
mov
mov
jno
pop
rcl
sub
fs
pop
push
xor
dec
in
mov
jmp
je
cmp
(bad)
fidivr
sbb
mov
nop
or
dec
movs
mov
sub
loope
fs
mov
pop
in
jle
adc
xchg
and
jbe
push
test
mov
jmp
test
mov
cmp
xor
mov
jo
xchg
and
mov
enter
retf
test
ja
in
sub
(bad)
mov
mov
call
jns
cmp
cmp
pop
(bad)
dec
iret
in
jle
push
cld
clc
xchg
(bad)
icebp
popf
pop
cld
sbb
hlt
outs
std
(bad)
aas
inc
pop
mov
cmp
fst
ret
push
xor
pop
or
inc
pop
sub
fyl2x
sbb
push
(bad)
jg
scas
test
outs
popa
inc
ret
pop
bound
stos
test
dec
xchg
xchg
(bad)
(bad)
call
lods
mov
xchg
push
mov
mov
mov
cmps
xchg
mov
fdivr
shl
sbb
call
adc
mov
shl
mov
and
fcom
fistp
lock
push
pop
fstp
div
scas
push
fldenv
inc
cmc
fcomip
add
mov
cmps
cmp
xor
call
cmp
pop
mov
pop
das
sbb
sub
pop
cmp
sahf
stos
adc
xchg
xor
xchg
pop
pop
inc
mov
call
aas
es
les
retf
push
enter
pop
lock
inc
add
lea
cmp
sbb
es
pop
std
dec
mov
mov
aaa
jb
inc
fwait
ret
and
cmps
mov
sub
xchg
push
mov
cld
push
in
fmul
lods
lods
js
mov
jg
dec
jle
je
inc
sbb
jnp
lock
(bad)
jmp
adc
mov
push
repz
and
shl
ins
jo
pop
bound
cwde
push
push
push
and
enter
repnz
(bad)
mov
call
call
mov
xlat
adc
lock
fst
mov
jo
or
(bad)
push
(bad)
bound
jnp
pop
mov
stc
mov
ins
xor
call
jle
sub
(bad)
push
sub
fidiv
push
int
jae
adc
mov
inc
add
ss
pop
or
mov
jg
(bad)
dec
or
lods
shr
mov
cmps
cwde
enter
xchg
mul
(bad)
(bad)
(bad)
push
or
push
push
(bad)
addr16
out
(bad)
xor
js
pop
dec
sbb
mov
push
sbb
(bad)
(bad)
(bad)
jmp
lds
xchg
les
add
pop
int3
fistp
stos
jbe
shr
cmp
jmp
(bad)
pop
sub
fcmovnbe
hlt
add
jmp
inc
outs
ss
fbld
push
pop
adc
clc
(bad)
inc
jmp
ss
mov
leave
sahf
xor
push
mov
pop
dec
int
xchg
push
sti
xchg
xor
mov
xor
(bad)
push
mov
mov
mov
test
or
test
(bad)
mov
sub
pop
aam
dec
cld
loopne
jge
(bad)
or
(bad)
inc
jo
call
mov
xchg
shl
and
push
in
(bad)
adc
scas
jo
add
imul
(bad)
(bad)
(bad)
inc
lods
and
dec
sbb
jns
xchg
adc
ja
mov
adc
xchg
ins
in
js
in
int3
stos
(bad)
call
and
into
xchg
mov
add
inc
in
xchg
cmp
jp
jl
test
(bad)
(bad)
(bad)
(bad)
jl
mov
test
sub
test
iret
hlt
xor
idiv
mov
mov
fstp
ja
sar
lock
(bad)
push
movs
scas
adc
xor
sub
repnz
mov
daa
aas
mov
ja
or
out
inc
movs
imul
xchg
(bad)
call
sbb
jno
jns
fldcw
xor
outs
jbe
xchg
aaa
sbb
mov
sar
adc
les
std
test
add
(bad)
xchg
imul
scas
cli
(bad)
inc
or
cmps
mov
ret
ja
bound
cmp
(bad)
call
mov
add
or
push
mov
fiadd
push
xor
(bad)
xchg
mov
jo
mov
xor
(bad)
mov
aaa
jl
mov
sbb
popf
cmp
out
(bad)
(bad)
(bad)
call
fwait
movs
adc
dec
add
fld
outs
pop
mov
sub
pop
into
xchg
and
out
push
(bad)
jns
stos
dec
retf
movs
cmp
inc
(bad)
lock
jmp
sbb
mov
jne
pusha
sbb
fcomp
or
jmp
push
mov
loope
bound
or
jne
push
(bad)
jg
pusha
pop
pusha
sub
scas
ret
jge
xchg
push
push
mov
call
(bad)
(bad)
jmp
out
ss
xor
out
fidiv
ins
test
nop
fwait
add
(bad)
call
test
(bad)
cmp
cmc
enter
and
(bad)
mov
lea
mov
sub
aas
jmp
mov
cwde
call
call
cmp
pop
clc
sbb
jg
cmp
in
fwait
push
sbb
(bad)
mov
jmp
ss
ret
mov
xchg
xor
mov
dec
xchg
pop
(bad)
(bad)
(bad)
fist
rcr
ret
fisubr
jno
shr
inc
aam
jmp
daa
ret
nop
or
mov
pusha
sar
in
pusha
shl
jg
push
ss
xchg
xchg
xchg
(bad)
dec
addr16
dec
xchg
mov
lods
adc
addr16
mov
pop
lea
imul
(bad)
(bad)
inc
and
aaa
sub
cmps
xor
xchg
lods
push
cli
in
dec
add
jbe
mov
(bad)
cmp
sbb
ret
fcomp
fwait
xor
mov
scas
(bad)
(bad)
push
and
pop
les
pop
pop
pop
mov
or
aaa
adc
inc
jbe
pop
sub
(bad)
jg
dec
int3
mov
ret
adc
fs
fdivr
imul
xor
pop
xor
xchg
push
call
dec
les
adc
adc
bound
test
(bad)
call
adc
cld
pusha
mov
adc
mov
dec
pop
cmp
or
(bad)
(bad)
dec
dec
push
jmp
lods
div
imul
(bad)
stos
and
mov
cld
(bad)
(bad)
dec
cmps
mov
and
retf
fdiv
pop
inc
push
or
xor
outs
inc
not
enter
arpl
lock
jne
mov
mov
cmp
scas
mov
cwde
clc
call
sar
adc
ror
add
cmp
dec
pushf
retf
(bad)
dec
add
mov
xor
outs
xor
xor
mov
jnp
add
idiv
(bad)
(bad)
call
adc
test
out
int
hlt
sti
out
cmps
xor
jnp
es
add
(bad)
(bad)
(bad)
std
aaa
dec
inc
adc
xchg
mov
mov
and
je
fwait
scas
(bad)
(bad)
(bad)
cli
test
mov
loope
push
xchg
sbb
pop
nop
inc
rol
lahf
scas
or
sbb
jo
mov
sbb
jmp
and
inc
xor
lahf
sbb
xchg
les
dec
pop
enter
stos
fild
inc
call
fwait
xor
push
fidivr
jge
(bad)
(bad)
call
bound
popf
or
adc
add
push
and
push
out
add
(bad)
call
xchg
add
hlt
dec
xchg
fisubr
cmp
arpl
jbe
dec
xchg
data16
nop
into
xor
add
inc
gs
mov
(bad)
pop
in
lock
pop
xor
mov
bsr
mov
pop
(bad)
(bad)
inc
into
fcom
jbe
adc
mov
sti
push
mov
scas
sbb
cmp
clc
(bad)
(bad)
jle
movs
mov
mov
out
movs
fidiv
mov
fst
(bad)
inc
into
out
pop
arpl
shl
test
add
aaa
loop
ins
(bad)
fbld
cdq
dec
loop
or
loop
ins
loop
xor
cld
push
cmp
int3
rcr
mov
pop
mov
push
sar
inc
movs
inc
daa
dec
mov
ss
das
pop
pop
pop
xor
inc
cld
icebp
(bad)
lock
pop
sub
iret
dec
(bad)
(bad)
(bad)
(bad)
cmp
ror
icebp
ins
stos
loope
xor
daa
jg
cmp
push
es
push
jae
and
(bad)
(bad)
mov
retf
add
daa
xchg
lods
(bad)
retf
fild
loop
mov
jecxz
(bad)
cmp
mov
rcr
pop
imul
xor
imul
sar
(bad)
push
cmp
cwde
sar
and
addr16
nop
pop
scas
ss
xlat
mov
daa
std
push
add
jg
inc
test
jp
shr
mov
mov
or
cmp
push
adc
pop
cmc
ret
adc
jae
(bad)
jmp
ss
pop
sub
add
xor
mov
sub
sbb
(bad)
(bad)
jmp
sbb
dec
adc
aad
push
pusha
repz
xchg
mov
mov
inc
jb
or
(bad)
push
(bad)
out
mov
aaa
xor
scas
dec
popf
fmul
xchg
or
add
ins
mov
(bad)
fld
or
adc
cli
(bad)
rol
fisttp
(bad)
(bad)
(bad)
jmp
jge
mov
cmp
mov
push
mov
jae
imul
imul
add
mov
popa
repz
push
in
xor
pop
cmps
push
std
fistp
pop
(bad)
adc
xor
and
mov
das
call
call
cld
stos
test
shl
lods
into
lea
inc
inc
add
(bad)
(bad)
inc
and
in
gs
leave
pop
pushf
imul
or
mul
push
and
(bad)
jmp
shr
gs
call
dec
jecxz
add
adc
mov
push
xchg
ret
popf
mov
or
jge
aam
daa
mov
mov
ja
push
addr16
xor
cs
pop
in
jge
jbe
inc
jae
sahf
ret
xor
call
jae
cli
cld
out
dec
fs
jno
outs
inc
int3
xchg
push
push
scas
rcr
sub
jecxz
cld
cs
mov
leave
xchg
sub
fidiv
and
std
(bad)
push
aas
ret
inc
jno
stc
cmp
fs
inc
mov
xor
(bad)
dec
mov
mov
xor
xchg
(bad)
sub
sbb
mov
pop
jmp
scas
adc
or
jbe
jp
loope
mov
jae
or
ror
add
cmp
(bad)
call
pop
add
add
pop
mov
enter
addr16
stc
mov
shr
pop
jg
test
mov
jbe
sahf
mov
mov
pop
sub
bound
and
(bad)
jmp
and
out
and
mov
push
inc
out
(bad)
call
dec
xor
cwde
jne
mov
stos
push
int3
in
popa
pop
sti
in
xor
(bad)
push
iret
mov
add
xor
out
lea
out
clc
out
call
outs
pop
(bad)
fisttp
push
mov
pop
rcl
mov
jns
int
in
aaa
xor
inc
mov
mov
(bad)
mov
add
popa
adc
popf
sbb
cli
(bad)
(bad)
push
and
xchg
inc
sub
xchg
jmp
je
sub
pop
xchg
in
sub
lock
push
(bad)
push
sub
fldcw
or
sahf
jnp
or
sbb
xchg
ret
jbe
(bad)
(bad)
dec
cli
add
shr
retf
cmps
out
test
das
mov
outs
fimul
mov
mov
jmp
mov
mov
mov
jmp
cmp
jo
hlt
sbb
mov
mov
jmp
pop
xor
rol
(bad)
(bad)
call
int3
dec
out
lods
dec
mov
in
and
in
cmp
adc
pusha
leave
fcmove
(bad)
scas
test
mov
(bad)
push
cli
leave
(bad)
fcmovnbe
loope
pop
cli
imul
lahf
fild
push
sbb
cwde
repnz
jecxz
sbb
imul
mov
fistp
mov
or
vsqrtpd
mov
jo
push
call
(bad)
call
repz
push
test
outs
inc
arpl
add
or
add
mov
pop
mov
pop
loopne
sti
call
(bad)
jg
sbb
xchg
dec
sub
(bad)
(bad)
(bad)
jmp
push
idiv
cdq
mov
clc
(bad)
ja
loopne
pop
pavgb
in
in
mov
dec
xchg
repnz
push
clc
repnz
daa
(bad)
(bad)
(bad)
(bad)
jmp
jb
push
jbe
call
cmp
fistp
adc
aam
xor
(bad)
(bad)
jmp
jmp
xor
and
out
jmp
test
and
cmp
xacquire
ror
scas
daa
(bad)
(bad)
(bad)
(bad)
call
leave
mov
xchg
push
pusha
add
sub
adc
repnz
(bad)
sti
pop
cmp
icebp
jmp
cmp
mov
sub
data16
(bad)
(bad)
jmp
into
leave
or
push
cmp
xchg
jecxz
and
and
fild
jmp
(bad)
jg
add
mov
cmp
(bad)
icebp
xor
xchg
jg
pop
mov
inc
aas
cld
aaa
xor
dec
pop
dec
cmp
inc
mov
(bad)
mov
sbb
shl
cld
cmp
das
cmp
xor
es
inc
sub
xchg
sti
jbe
imul
cmp
push
(bad)
(bad)
inc
dec
push
dec
push
sbb
fwait
push
cmp
pop
push
lods
mov
push
movs
in
les
jmp
pusha
ror
(bad)
(bad)
push
ins
sar
mov
or
imul
cmp
(bad)
sbb
(bad)
(bad)
(bad)
jmp
inc
push
xchg
xchg
cmp
cmp
push
outs
mov
push
xchg
rcr
jbe
add
pop
outs
sbb
mov
mov
(bad)
(bad)
push
es
inc
ja
stos
or
fdivr
mov
add
inc
xchg
jmp
cdq
inc
dec
cmps
rcr
jmp
pop
data16
(bad)
(bad)
push
or
and
fld
aas
clc
xor
out
jns
xchg
mov
xchg
arpl
(bad)
and
push
or
pop
jmp
sub
in
(bad)
popa
pop
sbb
(bad)
(bad)
dec
and
xchg
mov
into
or
or
test
in
gs
mov
mov
clc
dec
dec
mov
lea
(bad)
jmp
fdivr
aaa
popa
jo
and
jns
mov
mov
and
push
push
mov
mov
cmp
sub
push
retf
push
add
jo
fild
mov
or
inc
inc
xchg
fwait
retf
pushf
in
push
push
sbb
shr
adc
sahf
cmp
sbb
mov
std
pop
mov
(bad)
(bad)
mov
cwde
leave
push
or
lock
pusha
cs
add
pop
addr16
or
xchg
push
(bad)
xchg
sub
clc
(bad)
(bad)
dec
movs
sub
mov
xchg
outs
icebp
inc
adc
fnstsw
pop
xrelease
aam
sbb
sub
xchg
jle
push
fcom
stos
and
bound
mov
les
(bad)
(bad)
(bad)
jmp
push
test
jns
mov
jbe
(bad)
fsub
ins
rcl
arpl
dec
xchg
dec
fs
push
dec
fdiv
mov
mov
dec
xchg
ret
and
int3
cmp
(bad)
fmul
xchg
and
pop
loopne
and
bound
xchg
pop
sti
(bad)
(bad)
call
arpl
outs
fiadd
lahf
pop
cmps
add
xchg
call
xor
jmp
ret
mov
push
jp
mov
psubsw
jg
(bad)
push
push
sbb
out
pop
pop
cmp
out
cwde
fwait
dec
cs
call
xchg
cld
adc
cli
loop
dec
fwait
mov
movs
imul
add
add
jmp
xor
pop
dec
je
ja
(bad)
(bad)
(bad)
jmp
outs
mov
adc
pop
iret
loopne
daa
lahf
(bad)
xchg
mov
cmps
sti
jecxz
test
inc
mov
jle
cld
jle
inc
and
push
lahf
int
push
push
xor
les
pop
push
mov
push
es
xor
lock
pop
xchg
ins
fdivr
in
call
(bad)
mov
sbb
xchg
dec
or
es
cmp
out
inc
push
push
add
shr
enter
das
mov
(bad)
and
jno
into
push
mov
xchg
adc
sub
outs
add
aas
mov
hlt
fbld
sub
repnz
add
cmps
fstp
add
out
cli
or
pop
xor
mov
mov
lea
ret
sahf
lock
(bad)
stc
hlt
push
add
loop
cld
ins
inc
loope
adc
fstp
popa
jne
shl
ins
mov
add
or
add
cmp
bound
cwde
mov
inc
call
dec
jecxz
dec
mov
int
mov
out
clc
(bad)
inc
mov
mov
imul
pop
sub
or
ret
fld
pop
loope
dec
inc
fwait
push
jg
or
(bad)
(bad)
(bad)
mov
add
lods
pop
sub
outs
leave
jmp
sub
ja
sbb
dec
mov
imul
lods
mov
sbb
xchg
jmp
cwde
dec
popf
adc
mov
cmp
in
sbb
mov
jne
loope
je
lock
(bad)
push
jl
fcmovne
(bad)
cmps
loope
mov
xrelease
push
sbb
xchg
sub
retf
aaa
std
aad
mov
ins
loope
or
cmp
(bad)
(bad)
jmp
or
sub
into
dec
add
cmps
cmc
enter
sbb
cmp
and
cmp
mov
mov
push
stos
movs
out
cli
(bad)
(bad)
fimul
cmp
xor
pop
xor
in
sbb
dec
in
int
hlt
leave
cmp
(bad)
call
adc
out
inc
cdq
pushf
adc
sbb
xlat
retf
(bad)
call
out
pop
adc
(bad)
arpl
stos
in
pushf
pushf
call
(bad)
mov
int3
call
shr
push
ds
jb
lea
adc
add
(bad)
(bad)
call
push
adc
or
or
mov
mov
dec
stos
xor
call
(bad)
xchg
pop
jecxz
jae
movs
out
ins
or
jmp
pop
jns
shl
lock
push
mov
aaa
(bad)
imul
pop
ret
jne
fcomi
mov
mov
dec
aad
jo
rcr
xchg
mov
inc
stc
sar
jmp
out
scas
xchg
fild
add
ret
std
sar
call
push
sar
pop
xor
jg
dec
push
je
push
(bad)
int3
and
loope
(bad)
push
retf
aaa
movs
arpl
pop
ss
sbb
adc
mov
xor
sbb
sbb
lods
nop
das
adc
and
ds
add
push
mov
inc
fdiv
test
loope
xchg
out
push
fdivr
and
(bad)
inc
fwait
and
pop
cmp
push
mov
ret
inc
or
aam
(bad)
(bad)
push
fadd
ds
xlat
imul
or
add
mov
pushf
mov
lods
xor
shr
(bad)
call
(bad)
dec
setg
outs
mov
push
mov
inc
sti
xchg
ja
(bad)
(bad)
inc
out
mov
sub
pop
mov
sbb
mov
stos
or
(bad)
cdq
(bad)
jo
sub
jo
mov
outs
clc
jmp
mov
push
and
inc
sbb
jg
push
jbe
push
test
aad
aaa
je
adc
push
mov
ret
fadd
sbb
(bad)
(bad)
inc
jae
mov
scas
jae
sbb
push
retf
jecxz
xchg
mov
dec
pushf
jg
jnp
(bad)
(bad)
(bad)
call
ret
retf
mov
paddsw
mov
or
push
pop
stos
fsubrp
jae
pop
bound
ret
inc
(bad)
call
or
fld
scas
add
repz
sti
sub
mov
or
jg
sar
xchg
xchg
push
and
lea
mov
imul
arpl
mov
call
(bad)
es
mov
adc
call
neg
(bad)
(bad)
fbstp
or
dec
add
sbb
fcom
xor
and
(bad)
jg
mov
mov
cli
and
jmp
and
(bad)
jmp
in
sub
repz
mov
(bad)
push
fidivr
rcr
mov
push
xlat
les
cs
xchg
fidivr
mov
(bad)
jg
loop
cli
xor
add
lds
add
xchg
mov
push
loop
(bad)
(bad)
(bad)
call
cwde
dec
push
mov
iret
and
push
sbb
jge
add
lods
es
mov
adc
in
mov
and
pushf
(bad)
(bad)
(bad)
inc
icebp
sub
sti
(bad)
outs
and
fadd
xor
mov
enter
inc
(bad)
(bad)
(bad)
call
dec
out
cmps
movs
(bad)
enter
jae
les
ins
jb
or
pop
ss
sub
pop
adc
clc
ds
in
dec
mov
or
jmp
pop
sbb
or
pusha
pop
loope
jmp
mov
aas
sbb
inc
inc
push
cmp
movs
sti
sub
shl
fcomip
(bad)
mov
addr16
out
mov
mov
mov
push
movs
(bad)
movs
icebp
(bad)
(bad)
jmp
mov
adc
shl
adc
adc
mov
inc
leave
in
dec
rcr
fisttp
(bad)
mov
push
shl
out
outs
or
(bad)
(bad)
cmp
push
and
and
enter
shl
inc
cmp
or
adc
and
addr16
dec
xchg
mov
inc
lock
je
jae
pop
cmp
inc
call
xor
in
cmp
fucomi
(bad)
(bad)
inc
inc
out
arpl
xlat
in
mov
sub
dec
jg
add
das
or
cdq
div
popa
daa
jmp
inc
(bad)
dec
shl
sar
xchg
push
fucomi
jp
push
outs
mov
icebp
or
pop
mov
pop
rcl
cmps
mov
or
mov
(bad)
mov
sahf
iret
pop
out
movs
and
mov
(bad)
(bad)
(bad)
mov
dec
inc
pop
xchg
and
es
mov
sbb
mov
idiv
cmp
inc
cmps
ror
mov
jmp
mov
cli
pop
cwde
sbb
jno
movs
and
cmp
loopne
shl
jbe
(bad)
(bad)
(bad)
dec
out
cmp
scas
popa
in
out
not
mov
pushf
clc
ret
out
pop
mov
dec
test
or
dec
test
xor
outs
mov
xor
sbb
sub
(bad)
jmp
out
shl
sbb
push
test
adc
shl
retf
jecxz
sub
mov
lock
int3
loope
jmp
lock
jmp
(bad)
fstp
jmp
out
aad
(bad)
rcr
pop
inc
dec
pop
mov
push
retf
(bad)
(bad)
(bad)
call
cmps
cmps
inc
jae
xlat
popa
lds
push
pop
mov
iret
fisttp
mov
idiv
fcomip
(bad)
dec
movs
inc
retf
and
inc
(bad)
adc
fmul
pop
jp
(bad)
(bad)
(bad)
dec
(bad)
pop
jo
imul
jo
pop
test
stos
cli
xchg
es
and
push
dec
clc
(bad)
(bad)
mov
inc
fistp
inc
pop
jg
add
ins
loopne
ja
push
enter
imul
(bad)
push
je
cmc
mov
call
sbb
loopne
and
sub
test
aaa
enter
sub
inc
jbe
ins
mov
stos
test
popa
inc
add
fld
aam
cli
mov
(bad)
mov
and
dec
hlt
data16
dec
repz
mov
out
sub
sahf
aas
repnz
mov
lock
fbld
mov
sbb
neg
cmp
mov
cmp
add
stos
test
das
xchg
xchg
loop
push
lods
aaa
js
dec
push
(bad)
(bad)
call
call
scas
lea
jmp
call
jp
cmp
(bad)
inc
inc
xchg
(bad)
test
adc
pop
hlt
lock
sar
mov
dec
mov
or
and
add
je
or
jo
loopne
out
out
icebp
mov
pop
jnp
sbb
retf
(bad)
call
sbb
add
or
adc
jge
mov
(bad)
fcomip
mov
pop
jecxz
push
ins
adc
das
(bad)
hlt
xchg
icebp
scas
(bad)
inc
(bad)
call
jnp
in
scas
and
add
cmp
xor
cli
(bad)
(bad)
in
inc
leave
add
mov
movs
mov
sub
shl
or
pusha
pushf
jne
adc
je
lea
jle
retw
cmp
int3
in
fadd
(bad)
out
jne
pop
xchg
pusha
push
lea
(bad)
(bad)
jg
pop
sar
pop
mov
bnd
mov
push
test
(bad)
fild
mov
fcomp
add
cmp
adc
les
jg
jle
or
cwde
(bad)
jmp
jp
or
lods
adc
mov
outs
xor
out
or
or
inc
cdq
popa
std
jge
(bad)
mov
add
cdq
dec
push
push
adc
and
add
mov
cs
jle
std
(bad)
(bad)
call
cmp
mov
retf
test
push
pop
shl
cld
push
push
jmp
or
add
sub
test
je
sub
dec
dec
jo
add
push
dec
addr16
std
and
jae
js
gs
(bad)
(bad)
(bad)
fst
lahf
ror
iret
sbb
sub
cmc
ins
je
in
lea
sub
push
mov
xchg
jp
test
adc
lock
inc
push
push
gs
mov
xchg
or
(bad)
(bad)
(bad)
jmp
or
inc
arpl
in
add
rol
push
mov
ds
clc
push
je
push
and
std
jp
lods
push
les
inc
push
dec
(bad)
mov
(bad)
jg
in
mov
rcr
aad
popf
mov
in
xor
xlat
fldenv
rol
call
inc
mov
push
mov
mov
stos
push
dec
minps
out
(bad)
(bad)
mov
iret
dec
out
lahf
imul
dec
sbb
(bad)
(bad)
(bad)
call
mov
push
fsubr
mov
call
les
icebp
mov
call
adc
adc
in
call
pop
loopne
sbb
loop
ret
in
(bad)
retf
xor
adc
(bad)
(bad)
(bad)
(bad)
dec
mov
cmp
inc
aas
adc
pop
outs
sub
pop
(bad)
(bad)
(bad)
push
les
clc
or
adc
inc
outs
sbb
or
or
pop
and
mov
addr16
dec
(bad)
mov
cmp
mov
mov
mov
(bad)
(bad)
(bad)
inc
cld
cmp
mov
dec
test
push
mov
pop
push
test
and
dec
jmp
not
ins
mov
mov
xchg
push
xor
jbe
add
inc
xor
jo
sub
push
cmp
(bad)
(bad)
out
push
test
cmp
xchg
dec
lock
(bad)
jmp
loope
mov
loop
aam
push
dec
cmps
repz
push
(bad)
call
rcl
cmc
sbb
or
inc
mov
clc
sar
mov
add
imul
ret
shl
rcr
aad
dec
cmp
repz
nop
mov
sbb
into
(bad)
push
std
into
pusha
xchg
(bad)
pop
out
in
clc
dec
mov
std
repnz
test
cli
call
das
cli
(bad)
mov
push
sar
call
scas
pop
mov
fild
pop
or
jmp
dec
mov
pop
inc
or
rol
inc
arpl
mov
inc
sti
cld
das
in
test
add
xor
call
scas
(bad)
mov
cwde
mov
ja
pop
std
clc
mov
sbb
iret
mov
inc
test
(bad)
jmp
mov
add
(bad)
repz
hlt
loop
jmp
aas
pop
scas
jl
ss
jp
push
mov
std
(bad)
call
mov
imul
xchg
push
jns
shl
lods
mov
test
push
adc
pop
sub
or
mov
test
inc
sbb
cmp
pushf
cmp
mov
mov
stos
add
mov
je
(bad)
(bad)
fcomip
in
adc
out
xor
call
sbb
je
lea
lock
retf
ins
or
(bad)
(bad)
push
std
loope
fcmovnbe
aam
dec
call
fdiv
out
cmp
arpl
aaa
or
ds
jb
jle
xor
(bad)
(bad)
call
sti
inc
out
or
jo
sub
mov
inc
addr16
xor
cmp
popf
push
icebp
mov
ja
les
inc
pop
int
(bad)
mov
mov
and
cmps
les
(bad)
jg
mov
xchg
cs
dec
in
and
iret
or
dec
dec
jo
bound
dec
bound
adc
add
faddp
sbb
(bad)
repnz
out
test
jae
sub
add
mov
fisub
dec
jp
cmc
(bad)
pusha
cmp
xor
rol
fsub
cmc
test
or
pop
sbb
(bad)
(bad)
jmp
inc
sub
xor
in
outs
dec
icebp
push
les
icebp
sbb
pusha
xchg
jmp
das
lods
and
movs
out
(bad)
jae
push
(bad)
(bad)
fist
sub
and
xlat
call
jmp
lods
xor
(bad)
(bad)
call
call
push
mov
pop
jo
fs
fs
mov
pop
mov
xlat
(bad)
(bad)
(bad)
(bad)
(bad)
aas
push
mov
mov
aaa
stos
cmp
stos
cdq
enter
sub
pop
or
adc
push
bound
test
adc
clc
or
fst
xlat
sbb
cmp
mov
sbb
push
sbb
je
sbb
jae
mov
test
jp
jne
retf
cli
loopne
mov
sub
ror
push
jbe
pushf
xchg
int3
out
loope
mov
(bad)
jmp
pop
and
in
test
jb
(bad)
(bad)
(bad)
jmp
addr16
clc
sub
cmc
(bad)
not
jg
sub
jmp
mov
scas
cli
enter
dec
sbb
sub
stos
(bad)
jae
adc
pop
mov
or
(bad)
(bad)
inc
out
call
jae
pop
fidivr
ja
out
ins
scas
push
jecxz
retf
cs
(bad)
(bad)
inc
std
pop
test
pop
ins
outs
ins
mov
ja
pusha
jl
sbb
cwde
cwde
push
push
xchg
call
sub
jb
xor
jo
imul
cmp
iret
ficom
(bad)
(bad)
jmp
pop
xchg
cmp
cmps
add
cmp
adc
push
cwde
(bad)
inc
ins
mov
mov
cmc
bound
add
adc
xor
pop
xchg
mov
(bad)
(bad)
(bad)
(bad)
mov
ss
jb
js
daa
(bad)
loopne
and
daa
icebp
lea
xchg
cmp
in
jg
dec
dec
mov
or
mov
xrelease
je
mov
sub
xor
jmp
xchg
rol
xor
in
in
inc
(bad)
inc
cmp
mov
in
dec
or
cmp
jbe
adc
inc
in
and
test
cmps
inc
push
das
push
mov
mov
push
and
cdq
sbb
mov
(bad)
dec
das
ret
jns
xchg
shl
push
stos
bound
jmp
mov
cld
(bad)
jg
inc
lods
and
sbb
call
jl
push
gs
cli
xor
cmps
paddusb
adc
jl
ins
push
(bad)
jmp
cmp
sbb
fst
push
popa
loopne
dec
loope
(bad)
lahf
sbb
sar
(bad)
inc
out
sub
jp
sub
xor
xor
icebp
icebp
scas
aas
add
(bad)
dec
push
imul
mov
dec
mov
out
mov
hlt
push
aas
mov
jp
sub
inc
dec
mov
pop
xor
dec
pop
ss
xchg
dec
mov
outs
clc
pop
pop
dec
fs
lea
and
fwait
aas
imul
(bad)
(bad)
call
push
sbb
movs
psubsw
xor
int3
xchg
(bad)
push
dec
(bad)
(bad)
call
mov
adc
vpunpckhbw
(bad)
nop
movs
in
push
mov
(bad)
(bad)
jmp
push
xchg
xlat
push
(bad)
aad
xchg
xlat
pop
sub
inc
jns
arpl
xchg
jmp
xchg
scas
es
iret
(bad)
ins
stos
cs
jne
clc
(bad)
(bad)
inc
rol
popa
jo
push
or
jp
mov
pushw
(bad)
call
pop
rol
lea
es
sbb
(bad)
dec
pusha
xlat
mov
cmp
fwait
sub
xchg
inc
ss
fst
and
inc
pop
call
call
or
add
(bad)
jge
in
push
mov
sbb
sbb
and
xor
mov
mov
jle
lea
xor
cmc
cld
adc
dec
jge
push
push
popa
push
pop
cmp
es
(bad)
mov
repnz
adc
mov
pop
jle
push
dec
or
cli
in
mov
push
leave
mov
sar
aad
(bad)
adc
xchg
sbb
out
pop
scas
mov
outs
(bad)
cmp
(bad)
fmul
lods
pop
add
bound
cmp
pusha
or
mov
sub
loopne
(bad)
jmp
iret
or
sub
ds
shl
mov
or
nop
jnp
xchg
fld
inc
iret
gs
or
dec
fs
scas
and
jp
push
xchg
pop
cli
push
pop
rcr
clc
jmp
mov
pusha
inc
mov
(bad)
cmp
push
or
jo
out
dec
psubw
loopne
stc
(bad)
dec
and
cmps
pop
ins
push
imul
jg
cmp
in
mov
out
inc
(bad)
(bad)
(bad)
(bad)
cmp
adc
in
shr
out
scas
pop
cdq
push
mov
push
test
jbe
(bad)
jle
lock
xchg
aad
icebp
jmp
or
fnstsw
jmp
and
push
push
bound
jmp
sti
loope
(bad)
(bad)
dec
lds
sub
sub
popw
arpl
pop
and
loopne
xchg
push
mov
push
and
nop
arpl
jmp
rol
xlat
fmul
mov
xchg
outs
int3
sar
(bad)
(bad)
(bad)
call
cli
das
jge
pop
retf
test
xchg
mov
shr
cdq
or
(bad)
(bad)
dec
pop
aaa
shl
movs
or
inc
iret
bound
mov
mov
mov
test
rcr
inc
scas
push
mov
push
lahf
mov
(bad)
imul
cmp
inc
call
sbb
and
(bad)
(bad)
fisttp
popa
jecxz
add
and
outs
xor
add
xchg
add
retf
cli
aas
mov
mov
in
push
clc
push
inc
div
outs
push
pusha
scas
inc
mov
mov
jp
adc
icebp
jns
(bad)
jg
(bad)
jmp
loopne
inc
mul
add
jp
sbb
inc
xchg
push
(bad)
(bad)
(bad)
inc
nop
add
cmps
loop
add
(bad)
xchg
mov
ins
pop
mov
inc
bound
rcl
(bad)
(bad)
(bad)
jmp
add
and
jnp
xchg
in
test
ret
mov
adc
mov
(bad)
(bad)
(bad)
(bad)
call
mov
or
mov
push
mov
mov
push
push
jmp
pop
mov
(bad)
(bad)
call
ret
mov
jmp
js
retf
sub
mov
push
test
call
shr
xor
sub
aas
ret
pop
push
fld
pop
and
rcr
or
inc
mov
cwde
add
dec
ss
jns
and
jae
(bad)
(bad)
push
stos
or
cld
call
mov
mov
loopne
(bad)
loop
fcomi
call
ret
and
aaa
cmp
bound
(bad)
pusha
adc
cmp
std
add
aam
jg
xlat
pop
aad
dec
jp
(bad)
aad
push
mov
call
mov
clc
xchg
xor
repz
or
sub
lahf
sti
xchg
idiv
or
cmc
add
push
(bad)
or
or
inc
(bad)
(bad)
(bad)
push
enter
jne
test
pop
jo
f2xm1
and
in
mov
inc
gs
(bad)
(bad)
inc
push
jmp
shl
jmp
add
dec
inc
jmp
lock
sub
sub
cmps
mov
jno
test
inc
sbb
fs
sahf
xlat
out
push
hlt
jl
out
or
imul
lods
push
add
cmp
inc
ins
bnd
call
cdq
leave
mov
jno
xor
add
adc
cmp
inc
out
aaa
or
and
fs
inc
sub
loop
(bad)
(bad)
(bad)
jmp
out
scas
sar
(bad)
and
mov
xchg
loope
or
iret
jbe
add
fs
(bad)
(bad)
jmp
mov
les
lock
sti
mov
sub
xor
push
aaa
cli
(bad)
(bad)
in
adc
pop
or
mov
(bad)
fbstp
retf
xchg
and
stos
cmc
mov
call
sbb
jae
add
push
mov
out
adc
(bad)
mov
mov
ds
jmp
mov
outs
mov
jmp
test
or
adc
mov
dec
mov
test
cli
push
inc
clc
mov
dec
jo
(bad)
(bad)
(bad)
mov
mov
lds
loope
add
or
jns
xchg
jg
lea
out
int3
xchg
jle
jmp
xlat
(bad)
call
jo
or
jl
sub
push
pop
xchg
sub
daa
add
lahf
test
out
cmp
mov
sbb
(bad)
(bad)
(bad)
cmp
jbe
lahf
ja
push
xor
int
mov
mov
pop
data16
inc
pop
or
test
push
sub
call
into
(bad)
(bad)
(bad)
jg
(bad)
test
pop
lods
in
cmps
rol
or
sbb
add
test
(bad)
push
pop
enter
hlt
xchg
dec
mov
or
adc
je
arpl
and
fimul
xchg
push
pop
dec
add
js
iret
or
jbe
(bad)
call
sub
out
fnstsw
pop
adc
pop
hlt
mov
data16
dec
in
push
cmp
inc
ins
mov
jp
sub
adc
push
aaa
call
push
les
mov
cmp
int3
(bad)
(bad)
(bad)
dec
cmps
ror
dec
mov
mov
push
xchg
iret
xchg
inc
shl
aad
(bad)
(bad)
(bad)
jmp
lds
out
out
sbb
pop
stc
out
pusha
sub
mov
xchg
addr16
or
je
(bad)
(bad)
(bad)
(bad)
cmp
add
xchg
imul
in
mov
fistp
xor
jmp
push
arpl
jmp
and
add
(bad)
(bad)
call
jne
xchg
xchg
jae
enter
mov
mov
cmp
loope
cmps
push
(bad)
call
rcr
inc
push
adc
xchg
ror
inc
and
popf
push
sbb
test
jl
pop
imul
push
adc
mov
ret
jmp
es
inc
fmul
sbb
adc
adc
push
or
neg
fidiv
jne
lock
dec
ret
mov
jmp
mov
aam
sub
add
movs
push
jne
jno
sub
jmp
call
retf
xchg
and
ins
sub
xchg
xchg
dec
sub
lods
mov
push
jl
adc
jb
cmp
(bad)
(bad)
(bad)
cld
leave
dec
int3
(bad)
pushf
inc
cmp
inc
es
dec
scas
loope
pop
xchg
pop
mov
lahf
loopne
sub
pop
xor
xchg
push
pop
shl
adc
sbb
dec
cdq
lods
dec
aaa
jae
fsubr
sbb
mov
cdq
pop
pop
jnp
ss
outs
loop
mov
(bad)
(bad)
jmp
mov
mov
sub
add
jnp
fdiv
test
idiv
cmp
test
jle
mov
and
inc
(bad)
loope
sbb
xchg
xchg
inc
mov
jmp
aas
cmp
sub
aaa
mov
sbb
js
adc
jb
retf
jp
(bad)
jmp
aas
jge
sar
(bad)
(bad)
cmp
rol
in
sub
xor
pop
ret
cli
bound
dec
das
gs
xor
sub
pop
bound
mov
bound
or
and
test
xor
outs
push
cli
into
cdq
(bad)
mov
(bad)
fmul
je
and
pop
pop
lock
mov
test
sub
sbb
rol
loopne
lock
inc
push
jae
(bad)
cmp
dec
lds
mov
jle
mov
cs
jecxz
mov
scas
rcl
hlt
pop
movs
stos
mov
mov
xor
fwait
mov
(bad)
call
enter
cmp
inc
iret
leave
sub
xor
sbb
or
push
call
sub
mov
add
in
sub
xor
xor
into
popa
adc
(bad)
in
mov
stos
mov
mov
scas
dec
jae
mov
pop
stos
cwde
pop
loopne
fcmovne
or
pop
hlt
scas
xor
mov
mov
in
pop
out
cmp
lahf
call
std
je
dec
lds
jle
repz
jae
inc
(bad)
(bad)
mov
inc
jno
ret
and
stos
popa
fdiv
sub
ret
in
repz
(bad)
dec
ins
xchg
jl
xchg
into
mov
std
std
or
outs
(bad)
xlat
adc
aaa
cmp
pop
or
inc
int3
mov
call
push
mov
cmp
cmps
icebp
mov
xlat
xor
and
sub
push
sbb
cmps
int
add
(bad)
(bad)
fist
adc
hlt
adc
sbb
sub
push
dec
hlt
sbb
dec
cmps
cwde
popa
repnz
div
(bad)
mov
ret
inc
ins
xchg
inc
imul
enter
mov
aas
and
call
enter
push
xor
loop
push
fmul
mov
daa
fstp
push
add
iret
(bad)
(bad)
(bad)
(bad)
cmp
mov
test
mov
mov
je
jae
mov
sub
jmp
vaddpd
loop
call
push
mul
test
aad
push
test
dec
imul
(bad)
jb
fucomip
mov
pushf
pop
xchg
xor
fcmovne
popa
aad
gs
rcr
scas
push
js
xchg
mov
xor
xor
mov
(bad)
or
(bad)
jmp
(bad)
retf
jno
jmp
dec
or
mov
enter
div
call
jle
or
xor
xchg
and
xor
(bad)
dec
mov
icebp
gs
xor
and
(bad)
ret
(bad)
jmp
dec
in
cmp
inc
sub
push
das
or
stc
xchg
push
scas
(bad)
(bad)
(bad)
call
push
mov
lods
outs
imul
push
psrlw
mov
mov
les
(bad)
(bad)
(bad)
jmp
fcom
mov
out
cmps
fcmovne
mov
add
fcom
mov
xchg
fwait
shl
mov
call
sub
sbb
push
mov
jmp
je
(bad)
(bad)
push
inc
xchg
push
mov
inc
inc
sbb
cmp
(bad)
xchg
sub
outs
aad
mov
mov
sbb
stos
inc
in
dec
pop
pop
outs
in
cmp
(bad)
(bad)
dec
pop
aam
inc
lods
inc
sbb
popf
adc
inc
pop
xor
sub
sub
and
les
fnstcw
cli
dec
mov
pop
bound
pop
cld
jg
scas
imul
xchg
shl
push
inc
and
and
xor
adc
sbb
dec
iret
arpl
stos
aad
xchg
(bad)
(bad)
jmp
iret
and
or
mov
mov
out
mov
(bad)
stos
jmp
or
adc
jno
outs
jle
push
(bad)
call
and
dec
mov
lds
shl
pop
and
jo
pop
or
idiv
(bad)
sbb
mov
sti
mov
es
fcmovnb
sbb
mov
push
fs
pop
(bad)
(bad)
(bad)
inc
mov
fnstenv
and
push
jg
jnp
xor
shr
icebp
(bad)
(bad)
sti
int
xlat
pop
cmp
ja
(bad)
jmp
push
pushaw
sbb
fs
cmp
inc
sbb
mov
aam
(bad)
(bad)
(bad)
inc
mov
xchg
cdq
jmp
cmp
in
outs
into
jno
std
lods
mov
scas
jmp
(bad)
mov
sub
cmps
cli
or
(bad)
mov
inc
mov
cwde
and
mov
pop
lds
sahf
cmp
out
arpl
pop
mov
inc
loope
mov
(bad)
mov
push
mov
sbb
(bad)
(bad)
in
lock
clc
mov
inc
das
jl
pop
jbe
mov
push
scas
data16
sub
bound
(bad)
push
in
pop
jp
adc
stc
imul
cmp
inc
push
mov
sbb
cwde
and
imul
pop
mov
mov
mov
pop
jmp
add
adc
sbb
and
shl
push
sar
cmp
jno
aaa
push
(bad)
fcom
test
xor
inc
int
inc
cli
cmp
(bad)
(bad)
call
(bad)
mov
in
retf
cmc
ror
movs
xor
or
cmps
and
(bad)
mov
stos
mov
jp
je
push
scas
pop
sar
adc
cmps
aas
(bad)
(bad)
(bad)
call
out
mov
repnz
lea
es
test
int
std
ins
ror
sbb
push
sar
call
mov
stos
call
pop
dec
leave
jecxz
xchg
mov
push
cmp
(bad)
(bad)
dec
sub
jae
xchg
data16
sub
(bad)
push
xchg
in
ret
movs
push
push
(bad)
(bad)
(bad)
cmp
cmp
aam
nop
fdiv
scas
adc
inc
push
pop
xor
call
(bad)
(bad)
(bad)
push
jbe
mov
loopne
cmp
push
in
cdq
push
jg
aad
push
jno
pusha
mov
push
inc
mov
push
ss
mov
out
clc
gs
call
call
fisttp
push
das
idiv
ins
inc
and
(bad)
(bad)
(bad)
cdq
jge
ret
push
mov
jecxz
mov
add
sbb
test
mov
sbb
inc
(bad)
dec
(bad)
adc
adc
and
sub
nop
push
pop
and
and
(bad)
(bad)
dec
push
mov
lds
push
xor
xchg
imul
test
shl
mov
pop
lods
push
(bad)
jg
call
pusha
ret
push
jmp
mov
in
(bad)
mov
sahf
inc
pushf
fisttp
(bad)
(bad)
mov
in
enter
jnp
cmps
movs
sar
jg
and
sub
adc
into
into
pop
jg
jg
sbb
add
in
sbb
mov
(bad)
fbstp
dec
loope
xor
push
out
inc
enter
(bad)
(bad)
(bad)
cmp
add
jmp
xchg
mov
dec
xor
outs
and
icebp
aas
pop
mov
adc
xchg
shr
sbb
sub
dec
call
xchg
pop
or
mov
pop
push
pop
pop
stc
xor
hlt
stc
xchg
cwde
fbld
outs
mov
push
dec
jmp
mov
movs
xchg
adc
(bad)
(bad)
(bad)
cli
mov
and
sub
ret
adc
mul
loop
ret
pop
dec
(bad)
push
mov
or
add
icebp
loop
or
scas
(bad)
sti
mov
sub
lods
(bad)
out
loop
pop
pop
dec
mov
add
(bad)
(bad)
call
mov
cmp
in
call
xor
jle
ror
dec
rcr
push
(bad)
(bad)
call
jns
ss
dec
out
mov
bound
nop
push
adc
out
fcom
mov
fdiv
inc
inc
dec
jbe
ds
mov
sar
mov
out
movs
hlt
jmp
jge
lock
mov
inc
retf
mov
lock
cmp
mov
jp
jmp
clc
or
xchg
and
mov
idiv
es
movs
mov
mov
scas
xchg
xchg
mov
push
(bad)
jmp
xchg
retf
test
mov
push
add
call
pop
mov
ret
xchg
or
jns
inc
fwait
push
pop
cld
add
scas
sbb
xor
sti
cmp
retf
outs
mov
jmp
je
push
cmp
(bad)
(bad)
(bad)
push
das
mov
inc
int3
stos
pop
xchg
and
cmp
xchg
mov
(bad)
(bad)
(bad)
inc
adc
iret
or
fnstcw
sbb
pop
in
mov
mov
jecxz
scas
repnz
push
test
out
cmps
jns
or
std
clc
loopne
aas
dec
mov
popf
mov
cmp
(bad)
(bad)
jmp
jp
stos
ret
xchg
lds
sub
mov
mov
lock
pushf
aas
retf
(bad)
(bad)
dec
mov
cmc
(bad)
cmp
cmps
jno
hlt
and
lods
push
xor
xchg
push
cmp
call
repnz
pop
sti
cmc
(bad)
pusha
push
xor
sahf
ds
(bad)
pop
cmp
cli
mov
outs
pop
ret
jg
ja
(bad)
jmp
or
(bad)
in
ins
jo
xchg
pop
sub
nop
dec
mov
in
fadd
jmp
fwait
clc
mov
mov
pop
xchg
jne
cmps
xchg
popf
test
mov
add
dec
int3
mov
push
cwde
fdivr
jo
mov
test
mov
out
jp
cs
pop
xor
push
pop
stc
arpl
scas
fdivr
sub
(bad)
(bad)
call
sar
call
fist
loope
movs
adc
or
in
(bad)
(bad)
(bad)
jle
push
lods
xor
jp
xchg
stos
add
rcr
mov
test
sbb
lahf
push
xor
addr16
test
xchg
hlt
fwait
jecxz
cmps
pop
(bad)
test
outs
mov
clc
inc
rcl
(bad)
(bad)
push
xchg
adc
inc
lahf
sub
cdq
inc
push
or
mov
push
pop
stos
and
inc
fs
mov
and
test
fwait
rol
mov
retf
(bad)
(bad)
push
pop
ret
and
cmps
(bad)
sbb
xchg
sahf
jno
jle
popa
mov
clc
(bad)
mov
push
scas
push
add
sti
jns
mov
into
dec
and
push
inc
sbb
jbe
pop
fld
pop
jbe
cmp
(bad)
(bad)
call
outs
pop
out
cmc
pop
jns
in
mov
ret
push
cmp
push
shl
jns
dec
or
fcmove
inc
mov
mov
fadd
mov
aas
pop
fbld
retf
(bad)
fist
sub
push
int3
aaa
loopne
mov
sbb
sbb
imul
mov
sar
inc
pop
es
call
jae
inc
clc
mov
hlt
push
adc
stos
xchg
add
fild
or
adc
(bad)
(bad)
(bad)
call
dec
pop
adc
inc
dec
lea
cmp
fwait
cmp
(bad)
(bad)
(bad)
(bad)
call
fidivr
std
sub
sbb
push
mov
push
fwait
or
mov
aad
pop
push
cli
call
retf
mov
(bad)
aam
or
fnstcw
scas
adc
and
sahf
jo
dec
inc
push
inc
xor
loopne
int3
(bad)
(bad)
(bad)
jmp
jbe
ins
mov
xchg
lods
xchg
xor
aam
pop
movs
jae
addr16
ss
fwait
jo
in
xor
(bad)
fcomip
adc
jno
ins
stos
std
mov
je
(bad)
mov
mov
pop
loopne
call
jbe
cmp
pop
xor
or
cmp
ins
cdq
mov
(bad)
dec
pop
loopne
call
xor
and
mov
fimul
hlt
retf
mov
sub
sub
xchg
xchg
jmp
and
repnz
(bad)
(bad)
push
lods
mov
xlat
pop
(bad)
(bad)
push
or
mov
sbb
push
push
cmp
sar
(bad)
(bad)
call
outs
sbb
jl
out
sbb
das
dec
loopne
into
jno
xchg
inc
fisubr
(bad)
push
pop
adc
adc
(bad)
call
in
jb
pop
dec
inc
add
cmps
shl
or
push
fnsave
fistp
ss
sub
imul
rcr
jp
xor
or
stos
(bad)
jg
add
mov
add
test
retf
js
loopne
(bad)
stc
leave
xlat
xchg
rcr
cmp
and
mov
retf
or
icebp
mov
sub
repz
in
cmp
loopne
(bad)
push
dec
mov
test
add
push
popa
mov
or
leave
pusha
adc
(bad)
mov
repnz
mov
mov
and
add
push
mov
fdivr
(bad)
inc
xchg
ret
lds
rcl
ss
inc
cmp
mov
lea
cmc
or
push
icebp
call
dec
xchg
jle
lock
cli
jns
dec
jecxz
push
sbb
inc
lods
sub
mov
jecxz
fdivr
(bad)
inc
cmc
xchg
sbb
iret
gs
sbb
pop
(bad)
pop
push
call
(bad)
mov
rcr
and
(bad)
(bad)
inc
bound
adc
test
stos
mov
mov
pusha
shl
loop
add
iret
dec
dec
lds
(bad)
rcl
jnp
adc
pop
add
ins
mov
cmps
sub
stos
addr16
cmp
nop
mov
inc
neg
ja
hlt
fs
loopne
(bad)
jp
add
lock
jecxz
pusha
loop
push
xchg
sbb
pop
in
xlat
outs
or
jns
cmps
cs
xchg
call
sbb
outs
clc
(bad)
call
xchg
(bad)
loop
(bad)
or
mov
sub
bound
ret
(bad)
(bad)
(bad)
dec
cmps
je
stc
cdq
xchg
sub
mov
mov
stos
dec
or
into
pop
lods
jae
sti
(bad)
(bad)
(bad)
(bad)
(bad)
pop
dec
jg
subps
cmp
add
adc
xchg
(bad)
lea
inc
jg
or
mov
in
mov
add
xchg
das
cli
pop
jmp
aaa
mov
stos
xchg
mov
call
mov
sbb
sub
mov
pop
dec
cs
stos
fwait
ss
icebp
test
mov
and
jecxz
or
(bad)
(bad)
call
sub
mov
and
pop
cmc
dec
ja
xchg
popf
int3
pushf
js
test
js
(bad)
pop
push
xor
into
bound
out
inc
cdq
add
lahf
push
push
adc
mov
(bad)
(bad)
call
push
pop
mov
dec
dec
(bad)
pop
loopne
test
scas
imul
arpl
bound
(bad)
(bad)
push
sub
ja
dec
retf
pop
inc
sub
dec
dec
jg
jne
lods
cmp
mov
adc
inc
mov
(bad)
call
(bad)
fwait
jne
adc
jle
in
sbb
fiadd
stc
(bad)
fadd
jb
sbb
mov
mov
jo
pushf
loopne
js
inc
xchg
mov
lods
pop
mov
and
popf
retf
call
mov
cmp
mov
pop
call
jg
pushf
pushf
and
mov
push
in
pop
and
xor
js
in
adc
xlat
(bad)
jle
jp
mov
push
add
int
or
shl
add
sub
fsub
lods
cmps
cdq
out
cs
cmp
(bad)
call
xchg
out
retf
adc
sub
scas
adc
loop
(bad)
fisttp
call
adc
hlt
sbb
fidiv
aad
mov
inc
(bad)
(bad)
(bad)
(bad)
jp
or
bound
pop
dec
inc
test
test
mov
or
test
(bad)
(bad)
(bad)
call
inc
hlt
xchg
rol
ret
mov
jmp
ret
mul
cmp
jecxz
outs
(bad)
jmp
jmp
mov
pusha
pop
hlt
inc
call
mov
(bad)
(bad)
(bad)
jmp
adc
fs
xchg
jo
(bad)
mov
fmul
xor
mov
(bad)
cmp
outs
aas
out
and
enter
lds
pop
sub
mov
repz
cmp
(bad)
(bad)
call
xlat
stos
xor
cmp
jae
xor
mov
gs
lds
mov
test
(bad)
(bad)
jmp
pushw
(bad)
xor
mov
jbe
pop
mov
mov
bound
mov
sahf
out
add
add
sbb
clc
(bad)
(bad)
jmp
and
sbb
dec
add
mov
jp
jae
outs
mov
into
jmp
(bad)
(bad)
out
mov
cwde
jae
sub
imul
adc
mov
pop
mov
sbb
xchg
jbe
add
lock
(bad)
out
xchg
mov
outs
xchg
loop
mov
sbb
sbb
dec
popf
xor
pop
(bad)
lea
sahf
inc
idiv
leave
cdq
cwde
dec
test
daa
(bad)
popf
es
mov
lods
xor
(bad)
call
daa
push
fsubr
popa
imul
pop
push
cwde
mov
jmp
into
addr16
fwait
sahf
pop
adc
jbe
out
cmps
arpl
test
aam
adc
xor
jmp
xchg
xor
sbb
xor
add
and
mov
adc
push
jbe
(bad)
(bad)
(bad)
jmp
fsubr
dec
iret
mov
adc
test
xchg
jne
pushf
sub
sbb
(bad)
(bad)
jge
or
jg
addr16
rol
retf
jnp
cmp
adc
(bad)
(bad)
(bad)
push
aaa
out
cmp
dec
test
xchg
or
ins
out
pop
cli
(bad)
jmp
in
shl
dec
sub
outs
jo
cmp
arpl
dec
lds
add
scas
icebp
in
adc
(bad)
(bad)
call
call
and
inc
dec
stc
xor
and
loop
mov
ret
das
ds
(bad)
(bad)
(bad)
jnp
fild
adc
imul
retw
lods
sahf
push
sbb
outs
(bad)
push
xor
xor
imul
and
dec
test
push
mov
cld
(bad)
jge
add
sub
int
sbb
outs
(bad)
(bad)
(bad)
jmp
push
mov
ja
lock
xchg
out
int
cmp
pusha
js
out
pusha
jmp
inc
cld
xchg
jbe
fcmovu
adc
push
cmc
(bad)
cmp
retf
xchg
cmp
mov
lods
ja
push
addr16
ins
fbld
cmp
(bad)
xchg
push
push
fwait
sbb
jmp
adc
(bad)
test
into
mov
cdq
adc
mul
je
xlat
or
or
(bad)
call
pop
xor
dec
mov
cld
sbb
aad
push
jbe
arpl
xchg
test
call
or
sub
fld
sbb
push
inc
dec
xchg
xchg
(bad)
(bad)
call
repz
loope
movs
enter
femms
shr
outs
std
out
xor
and
adc
dec
jmp
scas
mov
lods
and
fisub
fcom
std
sbb
sub
push
jae
retf
mov
aam
outs
inc
jmp
daa
xor
mov
cli
call
nop
jae
leave
sbb
(bad)
loop
or
pushf
xor
inc
sbb
xor
inc
add
leave
mov
push
ret
sub
call
shl
mov
mov
aad
jb
or
adc
and
cmp
repnz
cld
xor
sahf
shl
dec
adc
inc
leave
sti
jb
sbb
sub
jmp
add
sbb
add
in
mov
(bad)
(bad)
cmp
int
rcr
push
jmp
(bad)
ret
push
xchg
outs
or
push
int3
pop
cmp
jne
(bad)
(bad)
(bad)
out
add
mov
ds
int3
(bad)
fnstcw
add
fwait
sub
popa
adc
mov
mov
push
add
sbb
jmp
inc
out
sbb
into
pop
shl
fisttp
sbb
xchg
iret
lods
dec
jb
mov
mov
fild
stos
out
ins
ins
aam
test
mov
cld
(bad)
push
sub
je
mov
scas
pop
jb
jecxz
and
fisttp
int3
sar
xchg
sub
cwde
dec
and
loope
jno
out
mov
pop
(bad)
mov
dec
cmp
sub
pop
or
mov
and
rcl
xlat
and
pop
inc
xor
sub
dec
ficom
sbb
inc
add
(bad)
(bad)
(bad)
inc
lock
out
ja
cmp
mov
pop
jg
or
out
mov
test
(bad)
(bad)
(bad)
out
inc
in
jg
or
das
fldenv
inc
and
jmp
pop
popf
int
cmc
ficomp
loopne
jle
test
(bad)
fcom
mov
add
(bad)
fbld
test
xor
or
retf
mov
(bad)
inc
sbb
xchg
sub
pop
jp
icebp
scas
cmp
icebp
pop
mov
(bad)
(bad)
(bad)
call
sub
pusha
retf
mul
scas
out
shr
jge
lods
dec
popf
ds
(bad)
(bad)
(bad)
dec
or
movs
call
movs
mov
mov
and
(bad)
stc
inc
outs
add
loop
(bad)
xchg
rcl
test
inc
inc
das
fcom
pop
and
or
gs
mov
cld
call
inc
jge
les
dec
or
cli
(bad)
jg
call
(bad)
daa
popa
adc
adc
push
pop
cmps
inc
mov
mov
(bad)
(bad)
push
push
pop
setl
pop
and
sub
loope
inc
test
test
jbe
inc
pop
push
daa
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jge
jg
inc
movsx
push
mov
in
fild
cmp
movs
fimul
jecxz
into
xchg
mov
inc
inc
dec
mov
sbb
(bad)
call
mov
or
jmp
enter
jecxz
jg
ror
loop
dec
lods
shl
pushf
mov
xchg
outs
pop
ss
mul
clc
les
add
adc
(bad)
(bad)
(bad)
call
sbb
icebp
repnz
daa
jmp
cld
repnz
or
loop
sbb
mov
lods
mov
mov
out
xchg
fnstenv
sub
stos
call
in
xchg
inc
sub
sbb
(bad)
push
mov
leave
inc
cwde
push
fiadd
fsubr
jo
mov
jae
sbb
daa
cmp
xchg
js
xchg
(bad)
push
ret
popa
cwde
mov
ret
cdq
sti
sbb
pand
cli
sub
int
enter
inc
mov
(bad)
jmp
mov
mov
outs
je
xchg
dec
popf
push
push
bound
cmp
(bad)
cld
sub
adc
push
cld
add
xchg
(bad)
in
push
pop
fs
mov
and
xchg
sbb
dec
mov
test
int3
dec
cmp
(bad)
(bad)
(bad)
inc
lods
push
mov
pop
into
cmp
pop
add
int3
jns
dec
mov
pop
stos
or
(bad)
(bad)
jmp
out
nop
in
push
push
fmul
xchg
inc
dec
cmps
push
cmp
cmp
mov
lods
adc
dec
push
aad
add
mov
loopne
pop
mov
xlat
jg
jmp
cmp
mov
bound
adc
xchg
pop
jl
mov
(bad)
(bad)
(bad)
call
loopne
pop
cmp
gs
push
in
ss
into
jg
pop
dec
push
enter
sbb
iret
ins
mov
call
in
retf
imul
sar
(bad)
(bad)
(bad)
fcomp
daa
cli
int3
xchg
scas
mov
add
or
push
(bad)
(bad)
call
dec
inc
mov
push
mov
push
sahf
push
les
or
lds
xchg
pop
inc
clc
cwde
pop
(bad)
out
retf
in
adc
(bad)
(bad)
(bad)
cmp
push
stos
mov
pushf
pop
pop
push
stos
xor
mov
fs
mov
(bad)
(bad)
(bad)
jmp
adc
xchg
rcl
pushf
sti
mov
xor
xchg
add
lods
pop
inc
cmp
cmp
mov
fbld
hlt
mov
push
jnp
add
mov
(bad)
(bad)
(bad)
call
scas
jp
adc
fbstp
xor
jmp
dec
shl
ret
fnstcw
and
(bad)
jmp
in
sub
cs
ret
in
retf
lds
repz
sbb
(bad)
mov
sub
push
aad
and
push
scas
mov
sbb
cdq
repnz
(bad)
(bad)
(bad)
dec
ss
call
push
mov
mov
inc
cmps
nop
jne
stc
mov
or
(bad)
lds
dec
ins
inc
bound
fcomp
inc
jmp
retf
or
jp
mov
icebp
(bad)
fild
(bad)
pop
(bad)
push
or
jg
jns
shrd
jmp
test
call
jmp
fidivr
js
jle
(bad)
dec
imul
mov
les
data16
(bad)
(bad)
(bad)
jg
and
inc
fcmovne
sbb
imul
sbb
mov
popf
iret
movs
fwait
ss
xor
and
loopne
add
scas
pop
inc
jo
or
es
cli
(bad)
call
fdivrp
cld
jno
icebp
and
mov
mov
(bad)
sti
out
loop
jg
jmp
cmp
das
std
add
xchg
leave
sbb
(bad)
(bad)
dec
mov
sahf
nop
arpl
and
shl
mov
jb
(bad)
arpl
pusha
push
inc
sub
(bad)
(bad)
mov
jb
movs
dec
dec
adc
ret
push
stos
imul
cld
jno
or
popf
push
pop
inc
mov
push
xor
bnd
sbb
inc
and
mov
ret
(bad)
call
ret
ret
and
out
scas
or
dec
xchg
popa
fxch
pop
pop
jb
ja
clc
ds
shl
push
sub
(bad)
(bad)
fild
pop
pop
xchg
fcomp
aam
and
sub
bound
(bad)
cld
stc
pop
inc
push
mov
mov
outs
(bad)
(bad)
(bad)
(bad)
fnstcw
mov
pop
das
loop
out
ror
inc
dec
ja
sbb
div
adc
call
xchg
jecxz
test
inc
xacquire
test
popa
push
outs
mov
sub
sbb
jmp
lahf
ja
jecxz
push
mov
push
ret
jmp
das
outs
(bad)
(bad)
jg
shl
dec
in
out
cmp
inc
jg
pop
stc
aad
rcr
(bad)
mov
pusha
jecxz
jecxz
jo
popf
clc
loopne
push
loop
std
cmp
(bad)
(bad)
inc
test
push
or
jne
jp
out
in
dec
adc
sub
mov
ja
cmp
stos
or
(bad)
jp
xchg
pop
mov
(bad)
(bad)
(bad)
push
xor
lahf
sbb
lods
popa
cmc
cmps
cmp
ja
adc
in
out
jb
mov
jmp
cs
(bad)
ins
mov
(bad)
cmps
mov
call
mov
jo
(bad)
(bad)
inc
jp
pop
aas
gs
aad
mov
cmps
iret
sbb
(bad)
movs
sub
cld
(bad)
(bad)
dec
sbb
in
inc
(bad)
sub
dec
xor
out
mov
mov
hlt
mov
ret
inc
jmp
psubd
es
loopne
inc
out
or
(bad)
(bad)
(bad)
fist
sbb
cmps
enter
in
jae
loop
inc
mov
mov
and
aaa
rcl
dec
in
sub
jo
fucomip
hlt
mov
(bad)
push
dec
stc
bnd
push
sbb
adc
jb
hlt
cli
push
sub
push
jmp
loop
(bad)
(bad)
jmp
push
ins
fsubr
cmp
mov
inc
mov
cmp
gs
mov
(bad)
(bad)
(bad)
mov
mul
loopne
dec
pushf
push
sbb
lods
xchg
div
sub
mov
(bad)
jmp
sbb
cs
mov
mov
cwde
mov
inc
hlt
xchg
jecxz
and
loopne
cld
(bad)
dec
sar
int
(bad)
enter
and
into
(bad)
(bad)
adc
mov
dec
call
sbb
fnstsw
inc
mov
rol
in
lods
jo
dec
stos
(bad)
inc
pushf
cmp
or
cmp
loop
popf
loope
test
cli
jmp
test
jo
clc
ja
test
(bad)
xor
gs
lods
std
mov
idiv
xchg
call
aam
jecxz
(bad)
into
lahf
xchg
ins
stos
call
les
(bad)
pop
lods
or
shr
retf
push
aaa
popf
push
and
sbb
adc
push
fwait
inc
out
out
add
cmp
test
(bad)
call
ds
sbb
fld
das
cs
mov
(bad)
xchg
clc
pop
and
std
push
mov
xor
aas
lea
scas
jle
cld
push
mov
stos
nop
call
xchg
es
repz
adc
pusha
push
jno
and
add
out
popf
and
or
outs
stos
or
inc
ret
push
cmp
iret
ss
mov
mov
or
ins
push
push
(bad)
and
out
loopne
(bad)
(bad)
call
fcmovnbe
dec
out
mov
jne
adc
int
dec
(bad)
mov
(bad)
jg
loopne
dec
cmp
sbb
cmc
mov
not
xchg
mov
inc
fucomi
pop
inc
out
stc
mov
xlat
out
fmul
push
stc
dec
dec
int
(bad)
(bad)
(bad)
inc
jns
pusha
and
sbb
mov
in
outs
lods
and
pop
jge
jmp
aas
dec
mov
push
push
out
adc
outs
sbb
call
inc
fsubr
adc
push
movs
pushf
jle
sbb
mov
outs
sbb
(bad)
(bad)
(bad)
inc
mov
ja
data16
lods
pushf
cmp
and
sbb
xor
ss
into
and
or
push
jg
(bad)
jmp
rol
adc
or
fcom
nop
mov
dec
pop
ret
(bad)
push
cmp
adc
jmp
inc
inc
retf
push
in
icebp
xchg
popa
or
mov
pop
and
enter
std
leave
pop
inc
sub
add
pop
lock
jbe
out
mov
nop
jecxz
pop
test
xchg
add
(bad)
jmp
mov
mov
inc
jns
aaa
call
(bad)
(bad)
(bad)
mov
je
jg
icebp
test
not
fs
sti
push
jp
test
scas
cmp
sar
pop
xor
mov
pusha
mov
and
(bad)
and
push
mov
push
xchg
(bad)
(bad)
mov
cwde
adc
lods
xchg
xchg
jne
push
jge
xchg
in
test
call
mov
repnz
adc
push
sub
push
mov
lds
outs
pop
cwde
in
xchg
(bad)
call
dec
lock
xor
loope
jle
popf
push
or
push
(bad)
push
cld
fcmove
int3
inc
sbb
sbb
inc
jmp
pop
mov
or
retf
or
jnp
pop
leave
dec
dec
pop
ror
cdq
sar
push
xor
(bad)
(bad)
jg
stos
jle
repz
xlat
sub
sahf
push
pop
call
jecxz
cmp
ins
ss
push
pop
(bad)
(bad)
(bad)
jmp
jmp
stos
stc
int
ja
sahf
std
cwde
mov
cmp
call
(bad)
je
(bad)
jg
xchg
div
jmp
pop
fisttp
add
jae
mov
not
push
xchg
xchg
(bad)
(bad)
(bad)
call
gs
mov
test
inc
scas
xchg
cdq
cmp
cli
(bad)
xor
cmps
movs
mov
inc
jmp
xchg
mov
push
dec
dec
in
push
aaa
int3
mov
stc
add
(bad)
mov
sub
mov
push
sbb
jb
sbb
push
pop
not
or
mov
ss
jo
aad
add
add
mov
idiv
push
jmp
ds
jg
lahf
(bad)
into
sbb
adc
xor
(bad)
(bad)
jg
int3
sar
and
cmp
pop
cs
jne
mov
add
inc
inc
mov
xchg
xchg
inc
mov
sbb
(bad)
(bad)
(bad)
js
push
movs
ss
xor
sub
xchg
pushf
sub
inc
in
je
(bad)
push
cld
gs
outs
retf
arpl
mov
bound
or
loope
or
(bad)
(bad)
call
inc
mov
add
sub
aad
cdq
pushf
stos
dec
fs
pop
lea
pop
cmp
call
add
jmp
xor
xchg
xor
pop
sub
rcr
ret
inc
xchg
stos
jno
mov
pop
cdq
into
or
std
rcr
pusha
loop
sub
jl
cmp
jmp
nop
in
inc
ds
jp
xor
loopne
loopne
pop
jmp
pop
inc
cs
rol
(bad)
(bad)
(bad)
call
mov
lock
jge
mov
dec
enter
adc
in
add
sub
scas
outs
jecxz
fisttp
imul
clc
cmc
cli
out
das
pushf
jle
cmps
pop
sub
jmp
scas
pop
frndint
pop
jo
pop
pop
(bad)
shl
xchg
les
call
mov
stc
lds
sub
in
(bad)
push
pop
sti
and
xor
add
mov
sub
push
and
add
lea
cmp
xchg
push
xor
fld
mov
cld
jg
lea
sub
je
call
inc
imul
(bad)
push
cld
cwde
cs
and
in
in
jno
repz
pop
inc
(bad)
out
popf
mov
stc
adc
icebp
jmp
lds
aad
adc
retf
lods
jbe
adc
pusha
call
movs
jl
scas
sti
mov
(bad)
(bad)
inc
sub
test
dec
inc
jne
mov
xor
scas
xor
mov
jmp
xchg
and
inc
jp
mov
pop
mov
pop
gs
cli
adc
sub
fstp
clc
(bad)
(bad)
(bad)
(bad)
stc
jnp
loope
cmp
sub
mov
add
movs
inc
xlat
int
aad
mov
jb
inc
sbb
add
sub
adc
fldlg2
imul
inc
cwde
xor
fyl2x
clc
mov
xchg
inc
or
pop
loop
sub
xchg
mov
out
sar
inc
xor
hlt
and
mov
fstp
sbb
mov
add
stc
add
(bad)
(bad)
mov
mov
div
lock
sbb
arpl
mov
and
push
and
das
aad
cmp
out
data16
(bad)
jmp
movs
dec
stos
call
test
adc
js
popa
pop
adc
and
outs
pop
stos
jmp
cmp
inc
inc
and
(bad)
inc
sbb
mov
ds
fld
int
xchg
and
pop
push
cmps
(bad)
(bad)
(bad)
jmp
cmp
fidiv
dec
mov
mov
adc
data16
in
pop
das
pop
sub
add
xchg
retw
aam
call
lods
cmps
(bad)
cmc
push
sbb
fdiv
mov
mov
push
lds
cmp
dec
test
pop
cmp
jge
loop
jb
add
lahf
cmp
inc
mov
and
push
push
in
sbb
xor
push
pusha
pop
(bad)
(bad)
(bad)
dec
imul
inc
outs
dec
imul
dec
push
push
ins
sbb
into
mov
add
(bad)
(bad)
call
jle
push
push
lods
adc
mov
sub
out
mov
movs
or
xchg
pop
sub
push
outs
or
(bad)
cld
popa
pusha
out
and
jp
or
adc
inc
int3
call
cld
mov
in
or
fstp
mov
imul
inc
sub
jg
add
mov
cmps
out
and
or
push
ins
fld
sbb
ret
jecxz
(bad)
pop
push
cs
cmp
add
xchg
nop
sahf
jmp
call
std
adc
mov
mov
mov
add
(bad)
mov
mov
(bad)
jmp
xchg
and
outs
mov
out
fld
inc
lock
scas
out
pop
(bad)
mov
dec
push
popf
lahf
dec
xchg
mov
jns
push
and
cmp
daa
push
cmp
retf
test
jmp
mov
and
addr16
stos
or
aas
jo
or
(bad)
mov
data16
mov
ins
icebp
test
and
(bad)
(bad)
jmp
xor
in
pop
mov
pop
je
add
repnz
into
pop
pop
inc
(bad)
xlat
inc
outs
jg
ret
ret
(bad)
(bad)
(bad)
call
dec
neg
sbb
add
sbb
or
stos
js
enter
inc
xchg
push
shl
inc
rcl
xor
jae
push
adc
or
(bad)
(bad)
call
cmp
fld
add
cld
fiadd
std
(bad)
xchg
loopne
fdivr
(bad)
(bad)
(bad)
fild
fadd
mov
or
inc
jbe
mov
sbb
adc
fbstp
rcr
fldcw
sar
and
and
leave
enter
lods
pop
pop
fist
cmp
test
(bad)
(bad)
(bad)
jnp
ins
or
inc
xor
cmc
add
xor
dec
sub
pop
scas
pop
cmp
out
in
xchg
iret
addr16
(bad)
lods
dec
hlt
mul
push
and
clc
adc
(bad)
inc
cmp
popf
pop
loope
sbb
lods
xchg
push
addr16
mov
or
add
call
test
sahf
(bad)
jmp
jns
sbb
(bad)
(bad)
(bad)
(bad)
jp
sar
mov
lods
pop
cmp
sti
push
mov
mov
dec
fiadd
sub
inc
xchg
dec
je
mov
mov
push
shr
or
sub
(bad)
dec
ds
or
clc
mov
aas
or
retf
test
jg
push
and
outs
push
or
or
xor
(bad)
jg
add
clc
loopne
mov
aaa
mov
cmps
ds
mov
call
outs
scas
shl
(bad)
mov
mov
lock
and
inc
jnp
jle
mov
cmps
fld
push
out
sub
sbb
jecxz
mov
test
xor
ret
scas
jmp
jp
mov
cmp
dec
mov
(bad)
inc
js
jb
(bad)
mov
add
and
mov
clc
(bad)
jmp
jno
jp
pop
cli
jnp
and
or
clc
lea
(bad)
(bad)
(bad)
(bad)
jmp
jns
fwait
dec
test
jne
mov
mov
push
movs
pusha
mov
aaa
retf
test
fwait
(bad)
pop
loopne
jp
jl
jno
push
adc
jae
sbb
fs
or
out
cmp
mov
ret
jmp
inc
pop
mov
mov
lods
int
(bad)
(bad)
call
vpsllw
shr
lahf
and
test
cmp
pop
adc
or
pop
scas
push
loopne
add
(bad)
sbb
dec
lea
push
scas
sub
jns
movs
cld
inc
jno
and
shl
into
out
adc
(bad)
(bad)
inc
push
cmp
movs
ins
retf
cwde
mov
aam
push
into
addr16
stos
push
enter
call
dec
mov
xchg
jmp
jne
xchg
(bad)
(bad)
(bad)
inc
push
lods
neg
outs
call
cmp
ds
imul
and
jl
mov
call
sbb
and
cmp
jmp
syscall
rcr
adc
sbb
inc
xchg
mov
xchg
push
(bad)
push
ret
sahf
fwait
and
je
jp
and
pop
cmc
push
push
fidiv
repnz
jae
push
movs
and
or
jmp
shl
fwait
jg
cld
dec
inc
or
in
retf
cmp
sbb
lock
lock
and
icebp
dec
jne
push
imul
(bad)
call
inc
pusha
js
adc
sbb
mov
fistp
mov
cmp
jg
or
and
xchg
stos
inc
loope
aaa
push
jbe
push
pop
inc
repnz
mov
std
stc
cld
repz
sbb
adc
(bad)
mov
xor
mov
jae
mov
mov
or
test
scas
imul
fwait
lds
sub
out
cwde
sub
loope
mov
pop
mov
and
inc
add
test
pushf
lds
das
pop
inc
retf
loopne
aas
(bad)
dec
es
loopne
jo
jne
(bad)
jmp
les
push
mov
pushf
sub
adc
neg
inc
outs
dec
inc
add
jmp
cmp
xchg
call
mov
sahf
pop
gs
pop
enter
enter
push
inc
in
pop
in
fstp
xchg
fwait
pop
push
push
xchg
loop
jno
pop
pushf
xchg
mov
pop
add
bound
mov
or
popf
pop
xchg
cmp
sub
xor
cmp
mov
icebp
(bad)
pop
push
xchg
movs
and
ins
and
sub
pop
inc
movs
inc
push
stc
jne
mov
out
mov
nop
aam
test
inc
xchg
pop
mov
pop
pop
add
mov
icebp
(bad)
jg
pop
and
xor
xor
push
test
and
fild
(bad)
call
aad
push
les
or
ret
ds
jbe
cmp
(bad)
jmp
test
xchg
out
mov
or
(bad)
fdiv
mov
icebp
mov
cmp
cdq
int
(bad)
(bad)
inc
sar
xlat
jle
xchg
dec
sti
cmp
inc
enter
ror
into
mov
(bad)
jg
mov
call
dec
pop
push
cmp
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
dec
iret
dec
jnp
sub
pop
sahf
out
push
movs
bound
mov
sub
cs
(bad)
(bad)
jmp
pop
add
xchg
fsubr
mov
or
clc
cmp
adc
mov
(bad)
out
ins
sub
cli
dec
pop
pop
(bad)
mov
sbb
js
or
call
xlat
xchg
es
in
sbb
xor
or
movs
fwait
les
cmc
(bad)
(bad)
jmp
mov
mov
sahf
mov
sbb
cs
iret
gs
sub
aaa
cld
(bad)
(bad)
push
xchg
repz
pop
cld
mov
fnsave
push
(bad)
xor
adc
(bad)
(bad)
(bad)
ficom
dec
mov
or
mov
adc
cli
xchg
sub
mov
mov
fdivp
jmp
mov
(bad)
cli
dec
jb
test
je
mov
test
(bad)
call
ficom
cmps
addr16
shl
or
lds
pop
pop
dec
nop
rol
and
(bad)
jmp
popa
out
add
pushf
shl
retf
sbb
and
ss
(bad)
cmp
mov
mov
pop
int3
dec
mov
push
loopne
ja
(bad)
(bad)
(bad)
jle
pop
or
xor
popa
inc
fsub
repnz
jns
test
(bad)
(bad)
push
xchg
stos
outs
retf
jne
dec
adc
jle
xchg
stos
loop
repnz
inc
idiv
(bad)
(bad)
push
icebp
push
adc
enter
add
fist
fmul
clc
xor
(bad)
call
mov
iret
dec
into
stos
nop
push
cmp
int
repz
jae
mov
(bad)
(bad)
stc
div
sbb
jcxz
fnstenv
out
mov
fcom
fwait
pop
cli
jmp
shl
push
mov
shr
xchg
arpl
fdivr
std
loope
loopne
popf
dec
mov
and
pop
std
dec
call
ficomp
and
fcom
sbb
movs
xor
dec
jmp
ins
ret
add
fild
jmp
arpl
mov
test
mov
xchg
pop
add
xor
push
ds
nop
dec
jecxz
(bad)
(bad)
int3
lods
stc
das
jns
sub
mov
fidivr
push
jmp
imul
lods
mov
mov
pop
cmps
lahf
aas
outs
rcl
test
pop
mov
mov
add
xor
add
shl
dec
iret
sbb
dec
cmp
cld
fnstsw
(bad)
(bad)
jmp
xchg
and
mov
pop
cdq
xchg
imul
inc
push
(bad)
mov
pushf
test
sbb
sub
ror
sub
adc
mov
mov
sti
cmp
(bad)
push
push
mov
mov
adc
jns
aas
jl
push
(bad)
jmp
cs
(bad)
(bad)
(bad)
(bad)
push
adc
jnp
pop
rcl
lods
mov
jecxz
pusha
(bad)
push
cmp
xchg
nop
jmp
(bad)
mov
pop
(bad)
cdq
test
pop
je
add
adc
hlt
push
mov
mov
fadd
(bad)
jle
inc
call
aad
hlt
pop
cmp
(bad)
(bad)
dec
sub
jge
inc
fistp
popf
ja
adc
or
test
and
(bad)
(bad)
(bad)
(bad)
cmp
je
jo
div
inc
cs
mov
jmp
out
loop
into
xchg
aam
xor
sbb
aam
les
loope
sti
push
mov
arpl
cmc
(bad)
(bad)
inc
lods
mov
xor
cmps
jnp
sbb
xlat
dec
arpl
jno
arpl
addr16
enter
sub
xchg
adc
into
sub
repz
push
daa
push
sbb
sub
repz
jns
scas
xlat
(bad)
xor
in
in
ror
sbb
jbe
aad
xor
scas
inc
int3
push
inc
push
retf
fcom
retf
popf
xor
lock
pop
cmp
iret
or
sbb
shr
mov
or
jg
lods
push
rcl
(bad)
(bad)
(bad)
jmp
adc
icebp
retf
add
mov
call
lods
cmp
xor
cmp
test
jmp
ficom
cwde
mov
pop
cmp
cwde
(bad)
(bad)
(bad)
(bad)
fsubr
fst
inc
(bad)
pop
scas
sub
into
test
inc
push
jp
mov
push
mov
xchg
xor
sbb
adc
lea
les
xchg
add
nop
out
or
mov
add
fsub
lock
mov
mov
call
add
mov
(bad)
dec
fcom
fisttp
call
mov
leave
mov
stc
shr
idiv
(bad)
fstp
inc
arpl
int3
adc
inc
je
sbb
mov
adc
fild
cmps
iret
jg
push
or
(bad)
jo
push
pop
mov
(bad)
(bad)
(bad)
fiadd
mov
outs
mul
into
jecxz
xor
out
sbb
mov
pop
ret
jg
mov
cmps
or
(bad)
(bad)
jmp
into
sub
cmps
push
mov
sbb
jmp
pop
dec
sub
or
cli
addr16
loopne
ja
(bad)
(bad)
(bad)
(bad)
call
pop
inc
push
pop
(bad)
sbb
jnp
dec
dec
add
fisubr
mov
das
pop
sub
jmp
xchg
enter
inc
loopne
out
cmps
push
(bad)
push
sbb
mov
xchg
cwde
fld
xor
hlt
mov
mov
lods
fucomi
or
in
ins
repnz
jne
(bad)
call
cld
icebp
shr
out
mov
out
push
hlt
je
adc
sub
dec
(bad)
cmp
sti
(bad)
(bad)
push
lods
dec
mov
arpl
repz
lods
sub
jnp
push
pushf
mov
(bad)
(bad)
jg
xchg
out
push
xor
jl
enter
mov
or
cmp
out
cli
lods
mov
out
push
pop
ret
or
je
cmp
imul
(bad)
(bad)
(bad)
jg
jp
push
mov
mov
loop
or
xchg
jo
push
mov
push
xchg
fisubr
aam
mov
push
lahf
jne
mov
popa
jmp
div
lods
ss
fcomi
mov
dec
fisubr
(bad)
(bad)
(bad)
std
rol
fdiv
mov
jmp
(bad)
loop
fistp
mov
(bad)
(bad)
(bad)
push
mov
imul
mov
outs
pop
mov
fldcw
mov
test
(bad)
(bad)
(bad)
push
jmp
popa
jecxz
hlt
(bad)
fcmovnbe
sub
mov
dec
or
movs
or
(bad)
(bad)
(bad)
(bad)
(bad)
out
jp
mov
cmp
cmp
in
jbe
test
lock
jmp
sbb
(bad)
(bad)
(bad)
clc
mov
pusha
nop
adc
pushf
jmp
sbb
into
outs
test
jb
jp
pusha
adc
mov
push
xor
pop
lods
jns
leave
(bad)
mov
inc
mov
xchg
(bad)
inc
xchg
(bad)
mov
mov
cmp
and
rcl
push
or
push
mov
jmp
imul
inc
daa
push
inc
cmp
jno
sbb
(bad)
push
test
sbb
add
(bad)
(bad)
(bad)
jmp
es
stos
rol
mov
inc
fcom
xor
push
jecxz
jp
fdivr
(bad)
(bad)
inc
loopne
mov
loopne
mov
sub
and
pop
or
add
(bad)
(bad)
fnstenv
mov
ret
outs
fld
loope
lods
arpl
or
mov
jmp
retf
je
into
fnstenv
and
call
add
inc
xor
pop
lahf
sub
cld
call
popa
xor
sbb
jmp
fild
(bad)
jmp
or
fst
add
add
mov
push
fsubr
(bad)
(bad)
mov
ins
add
inc
(bad)
add
inc
test
es
cli
jbe
or
dec
inc
or
(bad)
iret
push
sbb
stos
mov
dec
(bad)
out
or
hlt
outs
sbb
(bad)
(bad)
push
dec
stos
xor
out
repz
or
iret
cmp
scas
fadd
xchg
mov
dec
xchg
out
fdiv
(bad)
jmp
inc
test
mov
cmps
addr16
mov
jbe
call
in
sbb
std
icebp
jae
iret
pushf
adc
in
pop
std
(bad)
(bad)
inc
ins
jbe
pop
test
cmp
sub
and
cmps
rol
pop
pop
cwde
adc
or
sub
pop
and
popa
sub
repz
mov
sub
jmp
(bad)
clc
push
sub
xchg
adc
es
dec
mov
shl
jb
pop
jg
adc
inc
add
(bad)
(bad)
dec
inc
(bad)
enter
jo
adc
xchg
and
dec
scas
pop
push
nop
jne
jae
lock
(bad)
fild
bound
mov
jns
out
test
xchg
mov
loop
std
cmp
xchg
stc
cli
and
je
jns
popf
popf
inc
xchg
jbe
(bad)
(bad)
jno
rcr
hlt
gs
or
inc
jne
sbb
pop
leave
add
ret
sbb
outs
xor
fisttp
test
xor
mov
jg
and
fadd
pop
cld
jae
jmp
mov
pop
or
icebp
xor
ins
ss
push
(bad)
jb
clc
sbb
in
enter
das
mov
mov
(bad)
clc
stos
fidivr
call
out
call
dec
sub
stos
jns
scas
adc
data16
scas
xchg
call
add
(bad)
(bad)
(bad)
jmp
(bad)
jae
div
mov
sbb
dec
sbb
int3
mov
cdq
std
(bad)
jmp
sub
inc
inc
and
call
sbb
jg
and
sub
dec
pusha
ins
push
cmp
adc
dec
shr
aaa
call
test
stos
cwde
jge
fsubr
cmp
daa
mov
cld
dec
xchg
mov
sar
mov
std
into
xchg
sub
pop
adc
adc
cmp
(bad)
(bad)
call
push
lods
xor
mov
sub
cmp
sub
sub
(bad)
adc
call
inc
mov
cmp
lods
imul
or
jmp
and
retf
sbb
push
cli
sbb
inc
outs
dec
mov
icebp
es
jmp
retf
ss
pop
lods
imul
xchg
neg
clc
fsub
jg
outs
(bad)
cmc
outs
jecxz
jmp
(bad)
std
jb
inc
mov
and
stos
ss
ins
cmp
jmp
das
cli
inc
stc
push
out
fadd
xchg
mov
in
jl
xor
sub
sub
aaa
dec
cld
bts
pop
jmp
jecxz
ins
or
clc
or
jne
shl
fwait
daa
pop
or
mov
stc
pop
xor
jmp
add
lea
sbb
into
js
test
popf
adc
dec
call
jmp
mov
inc
xor
push
push
xor
push
xchg
(bad)
(bad)
mov
xor
mov
icebp
or
jle
lock
cmp
loop
mov
mov
mov
dec
test
mov
push
mov
xchg
ins
mov
mov
sub
xchg
lock
je
add
mov
inc
sub
or
mov
and
fdiv
push
xchg
and
ror
and
das
xchg
inc
(bad)
(bad)
dec
jb
sbb
fstp
dec
fcomp
fwait
cmp
fmul
ret
jg
(bad)
mov
rcr
out
inc
cmps
lea
fs
sub
dec
mov
ins
dec
test
test
xchg
and
add
jnp
sub
cmp
pop
pop
cmp
(bad)
inc
sbb
lahf
and
test
pushf
ffreep
dec
cmp
add
(bad)
(bad)
(bad)
inc
test
fcmovb
inc
cmp
cmps
cs
jecxz
pop
mov
push
xchg
enter
aam
nop
jg
(bad)
(bad)
(bad)
jge
outs
jle
aas
sbb
cmp
mov
cmps
loop
les
and
fwait
or
xor
cmc
das
mov
dec
fst
(bad)
inc
mov
or
cmp
pop
test
xchg
test
shl
add
mov
out
call
fiadd
test
fs
mov
jae
rcr
repz
push
push
jae
(bad)
(bad)
(bad)
mov
inc
in
(bad)
sbb
out
in
call
(bad)
pop
aas
cmp
ds
push
lock
cli
fsub
add
mov
aaa
xchg
mov
(bad)
(bad)
inc
jnp
pop
sub
cmps
aam
and
retf
xchg
dec
test
(bad)
jmp
push
pop
(bad)
jmp
cmp
jae
(bad)
repnz
(bad)
(bad)
mov
jne
popa
(bad)
sbb
into
sub
jnp
xchg
iret
outs
in
out
std
aaa
or
jae
add
jae
and
push
xlat
cs
(bad)
cmp
xor
push
pop
js
in
test
xchg
inc
lods
or
icebp
(bad)
jg
imul
es
mov
push
mov
(bad)
(bad)
call
jle
mov
or
push
je
es
mov
stos
imul
aaa
mov
addr16
xchg
je
(bad)
(bad)
(bad)
dec
jge
sub
mov
ins
jmp
int3
pop
mov
stos
adc
xchg
dec
in
sbb
ins
cld
(bad)
call
(bad)
jecxz
lahf
(bad)
sbb
leave
movs
dec
loop
lahf
mov
(bad)
jg
es
dec
jecxz
inc
push
mov
icebp
outs
arpl
sbb
repnz
add
push
mov
push
cmps
xor
ss
(bad)
(bad)
mov
inc
xor
dec
inc
cdq
in
or
xchg
mov
sub
dec
xchg
(bad)
dec
xchg
imul
imul
int3
and
ss
pop
cmp
(bad)
fild
outs
jmp
push
call
(bad)
out
push
gs
lds
sbb
lea
sub
or
jg
xchg
das
mov
sbb
xchg
jbe
cld
jmp
push
movs
dec
jmp
mov
cmp
mov
or
add
sbb
sub
xchg
xchg
and
pop
(bad)
(bad)
push
fs
scas
stos
xlat
jecxz
arpl
adc
xor
sub
sbb
inc
dec
lock
sbb
int
in
cmp
pop
cwde
test
in
test
dec
call
(bad)
fsubr
lods
mov
scas
jb
shl
dec
lds
push
icebp
or
int3
xchg
lock
(bad)
inc
mov
and
push
test
push
push
cmp
stos
mov
ret
jne
adc
pop
push
jmp
clc
les
pop
fiadd
hlt
call
adc
push
dec
and
aaa
movs
psubusw
mov
and
(bad)
(bad)
call
stos
mov
dec
mov
cmp
cdq
(bad)
ss
mov
and
cmp
je
and
scas
push
jle
(bad)
into
sub
pushf
aaa
mov
inc
(bad)
(bad)
(bad)
jmp
pop
ins
fldenv
and
jecxz
and
pop
(bad)
fwait
dec
pusha
dec
jno
(bad)
(bad)
(bad)
dec
cs
push
and
dec
hlt
dec
and
pop
popa
xor
sub
cmp
(bad)
(bad)
(bad)
push
dec
sbb
inc
jno
cmp
les
mov
jno
shr
(bad)
(bad)
outs
dec
(bad)
(bad)
(bad)
call
fwait
pop
pusha
cmps
cwde
push
xor
aas
mov
or
(bad)
push
data16
adc
pop
sahf
not
and
sbb
int3
cmp
stos
push
retf
xlat
adc
ficom
call
mov
aaa
mov
inc
ja
xchg
cli
mov
jge
sbb
(bad)
(bad)
jmp
and
ret
out
js
or
jae
cmp
data16
(bad)
mov
bound
(bad)
inc
add
xchg
(bad)
push
int3
sbb
push
sub
rcr
out
out
jmp
sbb
movs
xor
lock
(bad)
jg
movs
mov
and
add
xchg
shl
loop
(bad)
fcos
jg
test
add
inc
jo
fdiv
mov
inc
dec
cld
mov
in
or
jmp
(bad)
jmp
les
sbb
xchg
int
cmp
call
fs
jp
adc
das
cmp
not
pop
(bad)
jp
pop
(bad)
(bad)
push
xlat
ror
repz
scas
sar
test
inc
outs
imul
into
pop
mov
int
adc
sub
(bad)
(bad)
dec
aaa
dec
mov
adc
dec
test
data16
daa
mov
(bad)
hlt
hlt
add
(bad)
push
nop
imul
pusha
lock
mov
(bad)
icebp
mov
or
inc
dec
ss
call
stos
pushf
pop
test
push
movs
imul
in
mov
rol
xor
dec
dec
jns
or
aaa
out
xchg
pusha
loop
or
push
push
test
sub
dec
cld
dec
data16
(bad)
xchg
add
cli
jg
test
cs
fadd
ficom
jne
xchg
pop
dec
pop
sub
ins
jl
mov
(bad)
(bad)
dec
mov
xchg
call
xor
pusha
inc
out
stc
adc
sub
ror
xor
pusha
ja
(bad)
dec
push
lods
out
jmp
mov
(bad)
(bad)
call
cmp
xor
pop
out
cmp
add
je
enter
fstp
repz
pusha
mov
cmp
call
jmp
push
pop
inc
rcl
loope
jmp
fldenv
retf
lods
push
call
sbb
sub
xchg
dec
sub
xlat
jg
iret
nop
cmp
aas
jle
mov
cmp
and
outs
mov
into
xchg
dec
call
pop
jge
mov
pop
xor
(bad)
clc
jne
jno
mov
sahf
into
adc
xchg
xor
sbb
add
retf
mov
mov
inc
fwait
sahf
int
test
outs
popf
sbb
adc
sti
out
cmp
adc
push
push
and
(bad)
jmp
xchg
outs
mov
in
loop
repnz
ret
mov
sbb
jmp
rcl
mov
fwait
xor
sub
cmp
adc
and
cmps
cs
(bad)
inc
sbb
pop
loope
ret
fs
push
(bad)
das
cli
(bad)
jge
adc
mov
adc
jno
push
cld
rcl
xchg
popa
xor
pop
xor
jl
sar
mov
loope
jmp
movs
sub
add
(bad)
call
add
push
or
pop
aam
pop
xchg
adc
inc
fwait
sub
call
rcl
movs
sub
dec
xchg
cmp
dec
adc
mov
lods
rdmsr
nop
xchg
outs
sbb
(bad)
mov
aad
arpl
out
xchg
and
(bad)
in
xor
xchg
push
and
pop
dec
jmp
jge
inc
cld
xchg
(bad)
dec
jmp
loop
(bad)
jae
lds
icebp
fisubr
cld
jmp
lea
bound
dec
pop
outs
jle
imul
mov
test
call
and
jge
mov
fwait
jae
push
std
(bad)
(bad)
fnstsw
mov
mov
enter
jle
mov
hlt
daa
jmp
add
mov
mov
js
ss
cmp
(bad)
inc
xor
dec
imul
out
jae
push
and
ret
push
cwde
shr
ss
add
fucom
adc
cmp
(bad)
(bad)
(bad)
fiadd
in
(bad)
xor
sub
int3
pop
xor
jge
push
lods
popa
out
inc
aas
adc
push
cwde
ret
xchg
jg
sar
or
imul
and
mov
data16
(bad)
(bad)
call
pushf
lahf
mov
pop
in
cmp
xchg
fldenv
sub
sub
clc
int
adc
clc
mov
mov
or
xor
inc
ret
les
sub
mov
mov
(bad)
(bad)
mov
hlt
inc
mov
enter
into
retf
lea
and
(bad)
call
nop
shl
in
inc
push
addr16
mov
fidiv
sbb
mov
(bad)
fbld
mov
fsub
out
cmp
pop
lds
adc
xor
dec
stos
(bad)
vphadddq
ds
fldcw
xchg
sahf
pop
jg
add
xlat
popa
mov
or
jae
push
and
jo
pop
mov
lahf
fistp
movs
dec
cmps
xor
cmp
adc
aam
jmp
hlt
jle
or
ret
out
push
ja
and
inc
addr16
(bad)
(bad)
push
inc
mov
sbb
repz
mov
das
test
sbb
cdq
aaa
shl
pop
inc
into
aaa
inc
into
call
adc
imul
push
mov
xor
jmp
add
add
idiv
adc
bound
cwde
retf
fst
jno
xchg
cmp
ret
dec
xchg
js
enter
std
(bad)
(bad)
jmp
cmp
popf
adc
mov
cmp
add
int3
inc
pop
and
mov
mov
pop
push
adc
(bad)
mov
cmps
jno
clc
pop
fdivr
(bad)
(bad)
scas
clc
mov
loop
push
sbb
ins
inc
ins
sbb
inc
jno
movs
mov
inc
mov
adc
add
into
pop
movs
(bad)
(bad)
jmp
or
pop
jmp
mov
mov
(bad)
jg
adc
out
add
repz
out
push
xchg
les
psadbw
(bad)
jmp
retf
xchg
sar
adc
imul
(bad)
(bad)
jmp
push
(bad)
call
sahf
inc
jmp
(bad)
jbe
ret
sub
inc
sbb
repnz
out
repnz
ret
push
and
nop
add
fdivrp
(bad)
(bad)
inc
ja
adc
fs
add
stos
rcr
mov
aaa
mov
repnz
inc
cli
jmp
(bad)
jnp
loopne
pop
cli
or
ins
retf
mov
cmp
repnz
ss
pop
pop
mov
les
(bad)
push
ret
sbb
inc
dec
aad
daa
jecxz
pop
lds
or
(bad)
(bad)
mov
or
cwde
xchg
int
sub
jbe
sar
jl
mov
push
sbb
mov
arpl
ins
push
sbb
ins
or
inc
push
sbb
jnp
xor
xchg
pop
(bad)
(bad)
(bad)
cmp
push
les
lea
cmp
pop
mov
xchg
popa
or
or
dec
sub
arpl
sbb
lods
inc
js
sahf
adc
and
test
and
out
sub
(bad)
(bad)
jmp
mov
jbe
ins
dec
mov
(bad)
xchg
js
push
pushf
mov
test
aad
push
sbb
je
jmp
(bad)
call
or
sbb
pop
push
xchg
push
mov
call
cli
cmp
mov
stc
lock
(bad)
or
inc
jecxz
(bad)
std
ret
cmp
xchg
jnp
pop
jbe
bound
xor
int3
inc
xchg
adc
jne
cmps
mov
rcl
es
stos
sub
push
cmp
inc
(bad)
jg
test
mov
lahf
cmp
add
lock
jg
mov
cld
pop
clc
aad
mov
adc
scas
mov
jge
fcomip
out
xchg
dec
push
add
mov
ins
jmp
xchg
sub
push
mov
mov
jb
lea
(bad)
jnp
imul
push
movs
(bad)
mov
test
in
sbb
sub
(bad)
rol
jns
fisubr
or
movs
inc
jnp
ins
out
gs
jge
pushf
inc
sbb
(bad)
jmp
and
mov
pop
stos
sub
pop
or
ja
push
leave
sbb
shr
xchg
std
es
jmp
and
rol
(bad)
jg
(bad)
mov
pop
scas
bound
leave
pop
out
addr16
int
jge
(bad)
mov
enter
cmp
mov
popa
cdq
push
lods
cmp
mov
(bad)
(bad)
jmp
cwde
cmp
dec
push
push
jb
cld
in
jbe
push
fs
push
fisttp
aaa
fwait
into
fwait
or
cmp
sar
push
inc
ret
mov
mov
pop
lods
nop
adc
pusha
movs
(bad)
(bad)
(bad)
dec
dec
push
je
ret
xchg
xor
mov
shl
ss
xchg
lods
stos
dec
les
(bad)
(bad)
dec
bnd
cmp
sbb
ins
data16
scas
or
pushf
mov
rol
jmp
jmp
leave
into
push
mov
adc
xchg
out
shl
imul
push
dec
mov
and
xchg
ss
ja
inc
pop
cmp
sti
dec
xchg
add
cmp
(bad)
(bad)
mov
sahf
pop
sub
mov
movs
cwde
(bad)
pushf
hlt
aam
lock
jnp
fisttp
dec
xchg
sub
lods
daa
xlat
mov
aas
adc
dec
out
mov
adc
inc
or
popf
pop
cmp
jo
std
(bad)
call
and
cwde
jge
xlat
mov
xor
dec
adc
inc
lock
(bad)
dec
cdq
scas
popa
gs
test
jg
popf
in
and
cmp
dec
jg
sub
jmp
loop
push
retf
pop
(bad)
(bad)
(bad)
inc
push
cmp
arpl
adc
sbb
mov
mov
fist
(bad)
(bad)
dec
dec
int3
lahf
jg
pop
mov
out
dec
loopne
(bad)
aas
dec
xchg
mov
outs
fimul
(bad)
dec
es
mov
and
mov
xchg
bound
in
jp
(bad)
loope
push
movs
into
test
cmp
jmp
mov
fwait
test
cmps
ins
mov
mov
adc
mov
push
js
lock
outs
mov
xor
xor
sub
mov
(bad)
(bad)
dec
inc
push
sbb
jge
pop
mov
pop
sbb
jl
sub
cli
(bad)
mov
mov
call
jnp
loopne
out
xor
adc
or
xchg
test
lds
sub
cmps
mov
or
(bad)
inc
pop
out
or
jmp
adc
imul
fisub
add
xchg
xlat
cmps
scas
push
icebp
mov
pop
add
out
cmps
add
(bad)
loopne
push
push
jmp
int3
lods
xor
sub
fwait
dec
es
push
xor
sbb
xchg
xchg
stos
outs
das
cmp
mov
xor
je
sbb
repz
or
div
sar
(bad)
ds
jnp
mov
jnp
jns
sub
out
mov
pop
jge
push
inc
arpl
jo
test
jae
add
mov
jnp
sub
stos
(bad)
adc
xor
mov
sub
pusha
xchg
lods
cmp
int3
aas
cmp
adc
pushf
dec
and
aam
fcomp
iret
jb
jbe
out
leave
push
dec
adc
push
rcr
jge
fdivr
pop
sub
or
dec
or
jp
stos
cmps
test
jmp
xchg
es
ja
sbb
out
xor
mov
xchg
jmp
pop
mov
sub
xchg
test
popf
test
mov
(bad)
(bad)
(bad)
(bad)
cmp
pop
pop
adc
pextrw
dec
dec
imul
out
mov
je
test
(bad)
cmps
and
xchg
pushf
push
out
sbb
shl
and
(bad)
(bad)
(bad)
inc
pop
popf
mov
adc
sub
cmps
xor
imul
int3
(bad)
add
adc
push
call
add
div
repz
mov
fwait
sar
jmp
xor
or
pop
xchg
int
push
sar
inc
pop
pop
mov
pushf
out
jp
inc
or
push
lods
cld
scas
sbb
sub
mov
gs
(bad)
(bad)
jmp
fwait
mov
dec
lods
mov
sahf
jle
pop
pop
jmp
enter
pop
and
push
je
pop
call
inc
cli
je
in
cmp
sbb
inc
push
std
mov
imul
loop
dec
(bad)
neg
mov
(bad)
call
add
xor
adc
scas
mov
scas
push
add
sar
push
inc
cmp
push
pop
(bad)
push
(bad)
call
stos
outs
or
xchg
jbe
stos
in
or
hlt
xchg
sub
pushf
scas
cdq
jecxz
(bad)
push
mov
inc
in
int
popa
rcr
scas
(bad)
(bad)
call
cmps
mov
sar
popf
push
push
jecxz
jmp
gs
out
sbb
cmp
(bad)
call
xchg
sub
pop
jne
aas
mov
out
fnsave
imul
rcl
sub
pop
enter
mov
lea
mov
imul
dec
inc
jmp
stos
in
cdq
pop
sti
leave
rcr
adc
jnp
out
mov
inc
(bad)
call
push
xchg
push
mov
imul
xchg
mov
cmp
(bad)
xlat
movs
(bad)
call
mov
dec
aaa
mov
sbb
xor
mov
sub
sbb
sbb
(bad)
(bad)
jmp
inc
mov
addr16
mov
cmp
pop
loope
daa
add
pop
ret
and
lea
dec
ja
loop
imul
setp
cmps
cmp
mov
pop
movs
pop
inc
xchg
into
pop
sub
scas
sub
inc
sahf
(bad)
sbb
retf
lfs
(bad)
(bad)
pop
cmp
jmp
fild
xor
mov
(bad)
(bad)
push
movs
push
int
pushf
cmp
and
cmp
in
cmp
add
outs
sti
(bad)
(bad)
in
(bad)
jnp
fcom
loopne
jb
push
fnstsw
test
inc
sbb
stos
and
and
push
mov
repz
mov
popa
aas
push
xor
bound
stos
hlt
push
lahf
cmp
sbb
lds
out
(bad)
(bad)
(bad)
push
xchg
push
outs
push
xlat
out
jnp
push
hlt
out
inc
int3
push
mov
jle
ret
bound
mov
je
cmp
sbb
sbb
jo
jo
or
xor
(bad)
push
xlat
loop
movs
adc
xchg
xor
adc
push
repnz
push
push
inc
xchg
cmp
or
jb
adc
popf
in
inc
or
(bad)
call
fisttp
cdq
pop
inc
jg
retf
lods
call
das
mov
and
in
(bad)
out
ss
sbb
sbb
push
or
in
imul
bound
jnp
jl
mov
adc
jge
dec
movs
push
pusha
imul
inc
dec
mov
rcr
mov
push
mov
shr
(bad)
mov
inc
mov
(bad)
(bad)
(bad)
inc
jle
mov
mov
xchg
mov
xchg
iret
sbb
or
pop
leave
or
bound
cli
and
enter
ret
pop
or
pop
xor
(bad)
xchg
adc
cmps
inc
pop
sti
js
shl
push
inc
jle
pop
std
(bad)
(bad)
jmp
retf
std
push
stos
mov
inc
jb
cmp
fcomp
dec
sahf
aaa
mov
jg
add
imul
pop
std
call
loopne
mov
cmp
dec
pop
xor
ret
push
or
(bad)
inc
inc
icebp
sti
fistp
div
pusha
jns
adc
sar
lea
out
gs
cmp
inc
or
cmp
pop
or
rcl
and
jbe
inc
in
(bad)
lea
xor
jns
mov
mov
sub
fimul
js
scas
and
(bad)
mov
loope
push
cli
jae
scas
sub
inc
jbe
sbb
sbb
(bad)
(bad)
(bad)
fild
sub
mov
mov
sbb
sub
arpl
mov
sbb
stos
fs
pop
and
(bad)
std
int3
xor
call
inc
xor
ret
rcr
int3
mov
out
mov
cdq
or
jo
xor
popa
push
inc
dec
pop
lock
lods
push
dec
cmp
dec
(bad)
(bad)
mov
cmps
mov
pusha
retf
lock
sub
fmul
(bad)
jmp
lahf
clc
in
movsx
pop
cli
cli
dec
loop
ins
mov
cmc
push
js
ss
mov
inc
cwde
fcmovbe
aas
aam
mov
add
ss
mov
sbb
lods
dec
cld
(bad)
(bad)
call
dec
retf
aam
out
and
test
push
mov
mov
pop
pop
lods
mov
rcl
inc
lods
or
in
mov
out
(bad)
(bad)
push
retf
inc
lods
test
push
imul
fwait
push
add
xor
sbb
xchg
jo
cdq
xchg
pop
pop
push
inc
das
sub
lods
cmp
outs
cmp
or
not
(bad)
(bad)
mov
icebp
data16
(bad)
fcmovnu
clc
ds
in
mov
mov
adc
(bad)
(bad)
jg
inc
mov
(bad)
nop
rcr
retf
sub
repz
cmp
xchg
and
hlt
call
inc
xor
call
add
push
in
nop
bound
lock
pop
les
sbb
push
outs
fmul
je
(bad)
(bad)
push
jno
cdq
inc
sbb
sub
mov
add
cmps
ins
in
adc
mov
bound
cs
adc
nop
add
lock
jmp
(bad)
call
mov
lea
ins
push
xor
dec
test
xor
(bad)
sub
mov
or
dec
pop
movs
fwait
rol
xchg
call
pop
call
inc
jmp
add
std
(bad)
dec
call
dec
hlt
in
mov
xlat
jne
das
sahf
cmps
addr16
xchg
and
ss
aaa
jl
lods
inc
scas
push
in
jae
cwde
pop
movs
inc
call
xor
and
mov
or
pop
into
mov
call
call
mov
inc
dec
std
dec
ins
sbb
ror
ins
(bad)
outs
cli
(bad)
push
les
outs
mov
lea
sbb
nop
inc
sahf
popf
push
push
call
stc
or
jmp
test
or
(bad)
(bad)
(bad)
call
xor
and
movs
scas
(bad)
cmp
mov
dec
hlt
mov
push
inc
cmp
iret
mov
jg
fs
ret
sbb
fld
icebp
sbb
ja
pop
jo
cld
push
js
inc
sub
xchg
(bad)
(bad)
(bad)
call
cmp
mov
cmp
test
jo
add
arpl
cs
push
jmp
jbe
scas
imul
sti
sbb
out
inc
jmp
and
cli
add
jmp
jbe
gs
lock
xchg
push
and
arpl
adc
or
out
in
(bad)
(bad)
(bad)
mov
sbb
repz
cli
(bad)
xchg
loope
in
aam
add
rcr
jmp
pop
fsubr
push
jb
sbb
popf
scas
dec
cmc
rol
cwde
push
rcr
dec
pop
in
xchg
test
(bad)
(bad)
push
rcl
xchg
mov
mov
xchg
js
mov
lahf
jmp
sbb
das
out
das
ret
js
(bad)
(bad)
jmp
fld
dec
mov
jmp
imul
js
push
retf
icebp
clc
jge
(bad)
(bad)
dec
pushf
aas
jae
stos
xchg
dec
retf
add
mov
pop
adc
push
loope
pop
in
repz
enter
inc
loopne
add
lahf
lea
jmp
and
mov
ds
xchg
adc
mov
jl
jae
les
push
call
cld
stos
pop
stos
pop
dec
repnz
pop
test
pop
xor
(bad)
(bad)
jmp
mov
aaa
ret
xchg
in
xchg
imul
xchg
ret
shl
(bad)
(bad)
call
push
fcmovnb
test
hlt
cmp
fxch
fdiv
ds
mov
dec
dec
mov
xor
(bad)
(bad)
mov
and
in
sbb
xor
inc
mov
sub
adc
sbb
adc
sahf
dec
mov
jg
call
mov
xchg
pop
jb
dec
imul
and
ret
loopne
mov
mov
cmps
mov
add
add
retf
out
jbe
out
cld
call
cli
adc
push
jp
mov
pop
sub
lock
jg
mov
jae
jle
test
ret
shl
popa
test
mov
sbb
xchg
mov
lahf
ret
jmp
sti
movs
cmp
std
cmp
in
jo
push
push
push
into
sbb
cmc
out
test
xchg
ficomp
repz
sbb
scas
sub
call
dec
loop
scas
mov
cmp
cdq
dec
dec
jmp
cmp
(bad)
(bad)
jl
jmp
rol
dec
fs
retf
xor
retf
pop
rcl
sub
movs
jae
and
fisub
lds
pop
mov
(bad)
mov
nop
inc
outs
stos
enter
ret
xor
dec
test
add
mov
(bad)
(bad)
(bad)
inc
ret
xchg
(bad)
in
jns
or
out
and
xchg
pusha
inc
xchg
leave
push
in
cmc
sbb
adc
dec
pop
jmp
icebp
inc
sbb
inc
ret
jg
pop
std
aas
stos
pop
pop
fwait
leave
fs
push
push
(bad)
js
into
push
cmps
out
jo
(bad)
mov
dec
out
sbb
test
mov
mov
call
(bad)
(bad)
call
in
add
pusha
xor
xor
cmp
pop
xor
shl
out
sub
cld
int3
mov
sahf
and
into
pop
js
loopne
fwait
movs
(bad)
(bad)
(bad)
call
jg
pop
xchg
pop
inc
jnp
bound
fst
xchg
movs
jns
imul
cmp
push
jg
push
xchg
or
xchg
movs
jge
mov
loop
pop
int3
xor
inc
pusha
inc
xchg
jbe
aam
cmp
cld
jmp
mov
jno
test
jnp
xchg
jnp
movs
mov
(bad)
(bad)
(bad)
(bad)
call
or
push
jecxz
pushf
push
das
mov
loope
scas
pushf
inc
sub
or
inc
jbe
xor
clc
jge
sbb
es
(bad)
(bad)
loop
popf
and
cmp
pop
enter
xchg
loop
fild
dec
dec
adc
push
add
rcr
pusha
jbe
dec
push
repz
gs
adc
cmc
fwait
pusha
dec
mov
jnp
adc
lock
jmp
pop
jle
gs
sahf
call
add
(bad)
cmps
movs
mov
lods
sbb
adc
idiv
dec
mov
addr16
inc
sub
sbb
or
(bad)
cld
cdq
(bad)
jg
popa
mov
leave
ret
adc
enter
jo
call
mov
mov
into
repz
sbb
mov
xor
test
sub
or
pop
push
fist
(bad)
out
ss
ds
push
bound
inc
jecxz
shr
ja
rcr
je
and
or
jecxz
sbb
movs
jp
call
pop
jne
(bad)
repnz
or
jo
xchg
hlt
mov
ins
je
scas
and
or
test
(bad)
(bad)
push
dec
xchg
int3
push
sbb
test
in
popf
or
test
jmp
pop
mov
jmp
ja
shl
sbb
mov
sbb
or
(bad)
(bad)
(bad)
inc
fmul
loopne
test
movs
dec
lock
xlat
call
sbb
or
adc
rcpps
mov
push
(bad)
(bad)
clc
sbb
je
in
jae
sub
outs
icebp
adc
or
xchg
or
adc
test
inc
jns
jmp
test
addr16
(bad)
(bad)
(bad)
mov
js
push
outs
enter
mov
mov
js
add
mov
inc
into
scas
push
and
inc
test
lock
mov
call
add
xchg
adc
loop
push
jg
inc
cld
or
outs
mov
out
test
mov
push
imul
or
pop
pop
cmc
sub
and
les
cmps
out
out
mov
push
test
cmp
jmp
clc
jb
movs
aaa
jo
aad
test
(bad)
jmp
add
imul
sbb
push
xchg
adc
sbb
icebp
inc
leave
out
ss
sub
cmp
jmp
adc
or
aas
sbb
pop
lods
xlat
out
push
(bad)
xor
fisub
out
idiv
out
inc
mov
and
fnstcw
aas
movs
jb
and
(bad)
(bad)
(bad)
jg
fs
je
stos
rol
les
mov
ror
mov
mov
(bad)
mov
push
lods
(bad)
pushf
clc
fadd
mov
jg
push
jb
imul
fisttp
sbb
or
scas
jle
imul
call
inc
cmp
(bad)
push
outs
clc
jle
cmp
push
or
sub
xchg
in
mov
adc
mov
mov
stos
xchg
xchg
push
inc
sub
cld
pushaw
sub
push
jp
jbe
dec
xor
mov
retf
pop
jmp
rcr
or
jb
movs
sub
jg
(bad)
jmp
jge
fiadd
fs
and
arpl
pusha
mov
sub
(bad)
(bad)
call
(bad)
and
out
sbb
mov
dec
pop
cld
mov
idiv
(bad)
fisttp
push
hlt
(bad)
ss
shl
test
mov
mov
stc
call
(bad)
stc
cmp
in
in
out
inc
pop
pop
scas
leave
mov
int
(bad)
popf
pop
fldpi
clc
cmps
ja
inc
push
or
popa
xchg
jle
outs
dec
je
lock
jle
inc
and
ret
and
or
pop
add
mov
sti
scas
ins
jecxz
(bad)
mov
mov
pop
or
pusha
cs
(bad)
(bad)
(bad)
push
mov
and
call
and
xor
xchg
sbb
popa
pop
hlt
(bad)
call
xchg
inc
fild
or
inc
jb
outs
push
lds
inc
sub
inc
dec
inc
call
bound
jmp
cmps
movs
jg
mov
rcl
repz
push
push
push
add
adc
add
sbb
(bad)
(bad)
(bad)
js
jmp
ja
sbb
leave
pop
pop
jge
cmp
out
jmp
cmp
ss
sbb
inc
inc
cmp
sub
push
arpl
lahf
ins
mov
jl
int3
fisttp
dec
adc
adc
add
shr
scas
ret
fld
pushf
jnp
pop
cmc
(bad)
(bad)
(bad)
(bad)
fnstsw
jp
add
adc
mov
xchg
mov
jnp
or
sub
sbb
fstp
arpl
inc
ret
mov
ins
fcom
mov
fmul
fsubr
(bad)
loop
pop
add
call
daa
add
(bad)
call
dec
outs
cli
ja
inc
or
(bad)
imul
mov
cmc
dec
adc
cwde
cwde
pop
les
fs
es
(bad)
(bad)
dec
pop
inc
xchg
cwde
ja
pop
xchg
push
stos
xchg
test
and
xchg
inc
(bad)
(bad)
(bad)
(bad)
aas
mov
pop
dec
dec
lods
jmp
add
mov
cmp
mov
dec
inc
aas
in
push
ins
(bad)
(bad)
(bad)
push
xchg
sub
out
lock
jle
jne
movs
adc
jge
fcmovnu
shl
imul
mov
pop
retf
pop
push
jecxz
std
mov
push
mov
call
mov
and
std
(bad)
jmp
push
sub
adc
(bad)
(bad)
(bad)
jg
pushf
inc
dec
out
sbb
bt
pop
push
xor
aad
pop
dec
mov
inc
(bad)
(bad)
(bad)
call
inc
out
push
push
int3
ins
mov
dec
and
pop
test
sbb
movs
push
or
test
cmp
dec
inc
lea
(bad)
jmp
sar
fistp
rol
jecxz
aaa
cmps
adc
icebp
add
mov
arpl
dec
addr16
inc
ficom
xchg
mov
call
add
push
inc
std
pop
jnp
pop
mov
pop
ins
test
(bad)
mov
daa
loopne
je
div
jmp
mov
lods
adc
jmp
inc
enter
pop
push
aas
dec
out
and
(bad)
(bad)
(bad)
jmp
mov
xchg
stos
stc
hlt
push
xchg
iret
lahf
mov
sahf
int
sahf
or
shr
imul
inc
mov
mov
xor
pop
in
(bad)
stc
add
push
push
je
fimul
int
sub
push
pop
mov
aas
dec
call
(bad)
(bad)
jmp
pop
in
cli
mov
jno
jbe
xchg
sbb
xor
jmp
jbe
jb
(bad)
jo
xor
jg
fbld
shl
push
ins
xchg
jbe
adc
scas
cmps
dec
loope
(bad)
jg
cmps
mov
(bad)
or
push
pop
adc
push
mov
and
cld
jmp
loop
arpl
push
fstp
cwde
test
movs
bound
or
movs
add
(bad)
jg
dec
inc
mov
cmp
mov
rol
dec
movs
xchg
mov
lds
test
pop
je
test
mov
jg
sbb
(bad)
(bad)
inc
mov
jbe
pop
pop
pop
lds
fdiv
mov
xor
adc
and
cmp
(bad)
(bad)
inc
pop
(bad)
inc
aad
push
mov
pushf
mov
cli
hlt
imul
push
mov
lods
(bad)
iret
fbld
(bad)
sti
icebp
xor
jl
push
pop
(bad)
mov
cbw
dec
leave
jp
mov
xor
out
or
hlt
push
add
sahf
cmp
fistp
retf
or
adc
retf
dec
jmp
int3
mov
je
shl
or
mov
loopne
mov
push
jge
mov
(bad)
mov
jno
dec
mov
push
test
inc
mov
cdq
stos
push
das
call
stos
pop
jp
in
mov
inc
call
je
dec
(bad)
(bad)
(bad)
call
push
icebp
ja
imul
test
push
mov
pop
jns
(bad)
(bad)
(bad)
mov
mov
push
jl
mov
mov
mov
ins
pop
pop
icebp
push
jle
pushf
ret
je
aas
ja
(bad)
(bad)
dec
pop
mov
and
iret
fwait
inc
jae
les
cdq
add
aam
mov
sar
(bad)
fcmovnu
mov
sbb
call
(bad)
(bad)
jmp
jmp
inc
icebp
sub
call
mov
adc
sbb
pop
rol
ret
pop
and
fisubr
leave
jae
lods
(bad)
push
push
mov
movs
sahf
loop
enter
add
test
retf
lods
nop
scas
and
pusha
or
or
mov
xor
(bad)
(bad)
jmp
mov
data16
mov
sbb
inc
sti
ss
and
inc
fisub
or
sar
push
mov
and
cmc
retf
sub
loopne
aad
(bad)
lahf
add
icebp
push
pop
out
mov
add
sbb
fisttp
xchg
mov
dec
jecxz
ja
movs
cmp
mov
inc
lds
xchg
mov
xchg
xor
cmps
in
or
out
clc
add
push
nop
sub
pusha
pop
inc
sub
inc
xchg
into
test
sub
dec
cmc
push
jmp
push
xchg
imul
push
pop
and
mov
iret
cmps
(bad)
(bad)
(bad)
(bad)
jmp
sub
call
cs
mov
jns
or
inc
push
and
mov
cmp
mov
(bad)
out
adc
int3
(bad)
adc
in
cmps
loopne
sbb
cli
adc
(bad)
jmp
pop
pop
dec
dec
stc
test
cmps
jae
pop
sti
jbe
imul
movs
dec
jecxz
lahf
stc
ror
(bad)
(bad)
call
mov
sbb
popf
push
mov
mov
jg
adc
jno
jmp
mov
or
push
ret
fxam
xchg
pop
test
call
(bad)
mov
xchg
(bad)
mov
inc
cs
(bad)
(bad)
jg
mov
and
jb
scas
xor
dec
xchg
mov
scas
sub
movs
mov
ins
push
mov
into
iret
jb
cwde
imul
fcomp
jno
inc
pop
cmps
aam
(bad)
cmp
je
call
ins
ret
sbb
pusha
test
es
dec
sbb
jmp
(bad)
mov
add
hlt
scas
mov
jnp
mov
call
or
push
inc
and
ins
movs
rol
inc
stos
shl
or
(bad)
mov
in
mov
out
pop
and
pop
inc
jmp
fstp
mov
push
std
loopne
fld
xchg
push
mov
inc
and
dec
rcl
pop
aam
popa
movs
stc
mov
push
xor
pop
and
lock
fdiv
cwde
loop
(bad)
cld
mov
(bad)
jge
repz
ins
pop
fidivr
mov
shl
fisttp
(bad)
in
inc
pop
sbb
out
mov
icebp
adc
das
clc
push
fild
mov
loopne
int3
cmp
mov
xchg
sub
inc
jne
add
daa
dec
arpl
xchg
call
dec
jecxz
pusha
jmp
xor
xchg
adc
es
arpl
pop
push
icebp
jae
pop
ja
xlat
(bad)
(bad)
(bad)
in
call
pop
pop
test
mov
sahf
xchg
add
nop
test
push
jae
call
lahf
mov
mov
xor
aas
dec
cmp
out
mov
(bad)
jmp
iret
or
lea
fcom
xchg
sbb
mov
ficomp
dec
(bad)
(bad)
(bad)
inc
test
test
push
call
pusha
enter
cmp
shl
int3
add
(bad)
mov
xchg
enter
jmp
shr
pop
push
mov
les
cmp
repnz
jno
outs
push
mov
mov
mov
leave
push
cmp
cmp
(bad)
dec
out
mov
xchg
rcl
push
retf
popf
popf
pop
inc
call
add
mov
sbb
mov
and
(bad)
(bad)
(bad)
call
cdq
inc
xchg
in
xchg
aad
fmul
xchg
das
imul
shr
cmps
push
call
sub
and
fidivr
call
call
out
and
(bad)
jmp
push
ret
xor
rol
call
dec
pop
(bad)
(bad)
ret
retf
movs
stos
aad
and
out
mov
inc
sbb
out
loop
stc
retf
int
loop
adc
push
out
pop
pop
dec
shl
(bad)
mov
dec
xchg
jnp
push
adc
mov
fwait
mov
mov
cmp
clc
(bad)
adc
call
sti
cmps
xlat
mov
jnp
or
les
aad
xor
(bad)
call
push
ins
sbb
xchg
dec
pop
xor
sub
js
ret
cmc
sub
pusha
mov
jbe
mov
sub
jmp
dec
repnz
fbld
push
xchg
lods
fs
retf
dec
(bad)
jmp
dec
inc
dec
sbb
das
jecxz
fistp
icebp
mov
add
dec
loope
lods
shl
(bad)
jg
loop
jbe
xchg
dec
add
or
push
lock
jb
out
fdivr
(bad)
(bad)
cmp
rcr
fdiv
dec
das
cld
cmp
cmp
lods
sahf
(bad)
(bad)
(bad)
jmp
bound
lea
mov
cmc
or
jmp
jle
jl
(bad)
(bad)
dec
cdq
and
adc
sbb
div
and
push
sbb
movs
jae
dec
sti
repnz
icebp
add
mov
aaa
sub
jbe
add
retf
cmp
jmp
fnsave
jg
(bad)
mov
pop
enter
(bad)
movs
pop
leave
push
sbb
xor
leave
(bad)
(bad)
inc
cmp
popa
xchg
(bad)
jle
push
mov
jo
cdq
mov
test
mov
loope
mov
mov
lock
sbb
sbb
scas
pop
ror
paddb
outs
mov
cld
adc
mov
test
cli
inc
mov
sub
mov
jbe
adc
push
jp
jns
nop
mov
add
scas
and
aas
sbb
dec
pop
repnz
(bad)
(bad)
call
inc
(bad)
call
ret
std
fadd
push
jg
mov
cmp
cld
xor
inc
sar
push
push
hlt
aas
ror
out
ins
xor
(bad)
(bad)
jmp
xchg
sbb
int3
xor
into
rol
pusha
sub
sbb
ds
ins
ins
mov
(bad)
in
cmp
mov
xchg
(bad)
(bad)
vmovhpd
xor
mov
xchg
inc
sub
adc
adc
dec
sbb
jbe
test
ret
call
cmps
cwde
sbb
jb
xchg
adc
call
mov
add
aam
fdivrp
std
mov
sbb
adc
pop
jl
js
inc
push
movs
popf
push
jl
(bad)
(bad)
(bad)
jg
fsub
(bad)
in
cmp
ds
ins
int3
xchg
add
push
shl
std
cmp
fbld
add
jns
aas
sub
sub
mov
inc
stos
das
gs
repnz
and
cmp
(bad)
push
std
in
enter
xchg
jnp
stc
daa
mov
int3
push
stos
jp
(bad)
(bad)
(bad)
(bad)
in
or
mov
jmp
mov
in
outs
(bad)
rcl
inc
jno
xlat
mov
dec
mov
dec
shl
or
cmp
in
or
ret
popf
or
inc
mov
sbb
ins
je
xchg
push
data16
movs
jp
(bad)
(bad)
call
mov
inc
mov
jb
cmps
into
mov
arpl
dec
xchg
and
inc
fdivr
fstp
sbb
(bad)
(bad)
jg
bound
(bad)
(bad)
xor
sti
(bad)
(bad)
or
push
rcl
mov
(bad)
(bad)
(bad)
dec
test
cmp
jecxz
mov
inc
pushf
pop
cmp
ret
and
push
jno
xchg
(bad)
(bad)
(bad)
call
repz
dec
cmp
or
mov
and
in
fistp
or
cdq
lds
addr16
mov
test
das
adc
retf
sbb
add
clc
jge
push
inc
pusha
push
imul
loop
xchg
mov
les
scas
arpl
pop
out
lock
sbb
shr
and
jae
or
repz
pop
pop
jg
or
pop
and
fcmovnu
jecxz
outs
jle
xlat
(bad)
jmp
mov
and
ins
mov
adc
out
fdivr
(bad)
(bad)
(bad)
cld
mov
inc
cmc
(bad)
jmp
mov
aaa
cmp
shl
xor
ret
xor
(bad)
(bad)
jmp
daa
cdq
lea
push
dec
xchg
add
das
pushfw
int3
scas
in
push
xchg
sbb
vinsertf32x4
(bad)
call
test
adc
mov
clc
push
lods
sub
cmp
push
leave
cmps
les
lods
outs
pop
add
inc
sub
not
mov
(bad)
inc
enter
test
or
mov
fs
mov
or
dec
(bad)
push
cmp
cmp
cmp
cli
loopne
in
push
dec
shl
loope
push
adc
retf
rol
stos
and
(bad)
fild
imul
push
addr16
mov
sti
shl
jg
call
push
sub
jns
or
hlt
test
stc
pop
pushf
dec
xchg
in
mov
jecxz
adc
jmp
sbb
mov
cvtdq2ps
lock
cmps
mov
out
cli
fistp
mov
and
(bad)
out
push
(bad)
mov
(bad)
xchg
or
xchg
cwde
xor
mov
push
(bad)
fadd
mov
shl
iret
sub
push
pop
lds
cmps
(bad)
(bad)
call
push
pop
sbb
xchg
(bad)
test
stos
loopne
ds
dec
adc
sub
jmp
and
xor
out
pop
dec
js
jb
and
les
mov
dec
push
shl
cmp
mov
popf
imul
adc
loopne
fwait
sbb
stos
imul
(bad)
(bad)
call
rcl
mov
ja
leave
add
push
out
outs
jp
xchg
dec
(bad)
mov
mov
mov
and
(bad)
jg
fsubr
sub
(bad)
retf
ror
mov
xchg
add
cmp
pop
cld
sbb
leave
dec
(bad)
(bad)
cli
jae
fwait
pop
and
retf
(bad)
mov
stos
(bad)
(bad)
jmp
mov
addr16
daa
adc
jbe
(bad)
shl
jecxz
clc
lods
dec
fcmovbe
pop
(bad)
(bad)
mov
test
call
fnsave
aam
test
call
(bad)
push
shr
and
mov
inc
arpl
pop
ins
sub
(bad)
(bad)
or
pop
aad
mov
sbb
mov
(bad)
(bad)
(bad)
inc
adc
test
jge
push
leave
(bad)
xchg
loopne
inc
jo
loope
pop
(bad)
scas
loop
mov
or
iret
(bad)
aad
jmp
inc
lods
retw
xchg
sbb
(bad)
(bad)
mov
xor
nop
inc
inc
aaa
mov
imul
jmp
aas
add
out
gs
jge
fsubr
cmp
jo
or
not
push
inc
adc
nop
ret
cmp
(bad)
(bad)
(bad)
jg
cld
shl
out
ds
lahf
pop
xchg
(bad)
movs
pop
test
rol
jecxz
and
call
lahf
pop
inc
jmp
arpl
(bad)
(bad)
jg
into
aas
clc
dec
sub
sahf
xchg
test
inc
ins
ret
js
aad
inc
popa
popf
add
fcos
(bad)
(bad)
dec
jns
loop
pop
addr16
mov
jmp
xchg
inc
xor
mov
jp
test
fisubr
cld
(bad)
push
push
test
mov
ret
arpl
call
bound
cmp
jmp
(bad)
dec
dec
lea
push
mov
mov
and
in
and
jmp
loopne
cmp
mov
and
add
(bad)
call
xchg
mov
pop
dec
mov
push
dec
mov
das
xchg
icebp
fs
push
(bad)
fcomip
call
shl
inc
push
iret
jmp
(bad)
das
pusha
jbe
sbb
(bad)
(bad)
(bad)
jmp
jbe
pop
pop
cwde
sahf
movs
inc
mov
(bad)
mov
and
push
retf
adc
cs
mov
(bad)
(bad)
call
pop
pop
pop
shl
(bad)
mov
jg
cmp
push
jle
xchg
out
inc
cmpxchg
popa
icebp
(bad)
(bad)
dec
adc
cmp
jns
xor
loopne
adc
pop
push
inc
mov
xlat
add
cmps
push
mov
fstp
adc
cmps
call
ins
push
ds
mov
cmp
in
popf
ret
mov
ds
jb
cmp
jmp
loope
sbb
mov
xor
arpl
inc
sub
fstp
add
(bad)
jg
mov
jmp
mov
mov
xor
xchg
cmp
sar
push
xor
fwait
jl
mov
mov
cmps
int3
lea
pop
pusha
push
sbb
add
ins
jecxz
aam
sub
xor
mov
(bad)
fbld
inc
iret
sar
pop
rol
xor
mov
(bad)
call
test
cmp
push
or
pop
(bad)
jmp
pop
dec
and
dec
xchg
sbb
jmp
bound
jmp
clc
or
les
sar
mov
rcr
ret
cld
add
js
mov
pushf
jbe
lds
les
add
add
cmp
jge
repnz
push
addr16
sti
adc
stos
or
cmp
mov
sti
iret
(bad)
dec
sbb
mov
sbb
lea
lock
ret
(bad)
in
or
mov
icebp
(bad)
(bad)
inc
adc
push
cmps
jne
mov
cmps
cmc
push
lods
and
leave
lds
jle
fs
ja
(bad)
fidivr
push
jne
(bad)
fmul
mov
dec
iret
xchg
shr
rcl
cmc
sbb
scas
jne
add
jge
inc
jle
rcr
imul
cmps
out
ss
sbb
(bad)
(bad)
call
push
scas
ins
aam
mov
lock
push
adc
shl
ds
inc
mov
add
jmp
jp
fadd
push
sub
dec
adc
jbe
icebp
call
loopne
fld
fidivr
stos
enter
into
out
pop
mov
aad
scas
cmp
fwait
inc
xchg
into
mov
push
jmp
retf
loop
out
scas
test
imul
(bad)
(bad)
call
xor
daa
adc
hlt
jae
out
dec
and
popf
add
inc
idiv
push
push
cli
sbb
and
daa
and
cld
call
arpl
and
add
jg
sar
inc
hlt
push
jo
je
test
hlt
call
in
dec
retf
mov
(bad)
(bad)
jmp
lea
push
jne
ror
(bad)
mov
sub
and
icebp
cmc
jns
(bad)
xor
(bad)
inc
test
call
push
push
jecxz
pop
pushf
ja
add
jmp
je
call
int3
stc
add
cmc
shr
(bad)
jg
push
dec
int
sbb
cld
lock
loope
jb
mov
iret
cmp
push
xchg
sbb
push
inc
orps
movs
(bad)
fsubr
dec
out
test
ret
pop
cwde
adc
push
aam
mov
jo
xchg
ins
pop
mov
mov
call
mov
aaa
push
std
dec
pop
rol
(bad)
hlt
test
xor
dec
aas
mov
lahf
(bad)
(bad)
(bad)
(bad)
std
mov
call
xchg
add
(bad)
jne
xor
cli
xchg
cmps
aaa
adc
loop
pop
jmp
jmp
cmc
push
adc
add
sar
daa
xor
adc
or
int3
pop
test
scas
add
cmp
or
add
cmp
inc
mov
push
push
(bad)
(bad)
inc
jmp
jmp
add
mov
fdivr
pop
sbb
outs
shl
adc
push
sar
out
fistp
adc
jl
cdq
imul
test
enter
mov
mov
bound
push
das
pop
mov
mov
add
fcmovnb
xor
cld
xor
pop
jns
mov
lods
cmps
or
mov
ins
adc
lock
jmp
jp
das
(bad)
pop
mov
fwait
cld
and
push
cmp
(bad)
(bad)
push
inc
sub
sbb
mov
or
jne
sub
mov
jmp
or
jb
jo
fmul
mov
mov
loop
sbb
aas
out
fdivr
(bad)
jmp
xchg
repz
mov
pushf
mov
push
dec
out
xchg
pop
shl
loope
inc
ins
ins
ret
adc
add
or
into
xchg
dec
ja
(bad)
call
pop
mov
cs
pop
or
xchg
jmp
or
jge
les
retf
scas
cli
(bad)
jmp
retf
cmp
pop
jecxz
lahf
jg
aaa
in
imul
test
sub
or
aaa
cmp
mov
mov
adc
(bad)
(bad)
(bad)
mov
cli
inc
push
or
scas
or
popa
rcl
fs
les
and
cs
aaa
retf
mov
jno
stos
(bad)
(bad)
fbld
xor
cdq
xchg
(bad)
jo
inc
movs
cmc
scas
aaa
sub
pop
imul
sub
call
sub
scas
jnp
and
(bad)
(bad)
(bad)
out
push
push
push
adc
add
jns
gs
stos
stos
xor
lea
bound
jne
fild
push
mov
and
clc
jg
dec
jg
pop
xchg
test
mov
mov
icebp
cmp
jg
inc
cdq
mov
mov
aas
adc
sub
push
inc
mov
aad
add
jns
in
out
sbb
call
inc
mov
(bad)
ins
adc
jne
(bad)
add
(bad)
inc
fwait
add
dec
ror
(bad)
frstor
stos
(bad)
(bad)
inc
xor
je
sbb
adc
cmc
xor
bound
pop
(bad)
(bad)
(bad)
jmp
jne
push
jg
inc
dec
mov
inc
jge
popf
jnp
jo
or
imul
sub
sub
lods
pop
push
xlat
in
pushf
fidiv
xchg
retf
js
dec
xchg
int3
sub
add
ss
push
nop
aad
cmp
mov
push
jmp
add
and
mov
mov
(bad)
(bad)
inc
add
cmp
lods
push
push
movs
jecxz
cmp
fcomp
les
adc
push
arpl
jg
cmp
mov
push
inc
push
sub
iret
inc
jle
loope
dec
cli
jae
add
mov
sti
fisttp
(bad)
(bad)
dec
es
fdivp
jbe
push
inc
dec
scas
inc
and
mov
and
scas
stos
je
repz
aaa
cld
fcomip
loopne
dec
outs
cmp
pop
js
(bad)
(bad)
jmp
lahf
sbb
push
es
pop
pop
sub
inc
scas
xchg
(bad)
mov
push
cmp
cli
mov
mov
bound
sbb
ins
sbb
mov
and
scas
dec
and
xor
fild
(bad)
(bad)
mov
daa
add
cmp
inc
mov
xchg
mov
xchg
in
cmp
ja
shl
adc
loope
pop
xlat
sub
(bad)
dec
fld
or
xchg
sbb
lods
push
mov
out
inc
test
add
inc
test
(bad)
mov
ret
sbb
out
jbe
dec
outs
mov
pmullw
xor
ins
xor
cld
popa
(bad)
(bad)
(bad)
jmp
xor
dec
dec
pop
xor
jne
push
ja
mov
(bad)
cwde
xchg
or
in
add
inc
lds
mov
ficom
jo
loope
or
ss
or
lds
dec
call
es
test
cmp
(bad)
cmp
pop
push
iret
popf
shr
dec
and
xor
jo
cmp
add
lock
adc
(bad)
(bad)
(bad)
push
sbb
addr16
jecxz
sbb
xchg
jno
enter
jge
inc
or
mov
icebp
jmp
js
mov
mov
pop
pop
outs
aam
out
mov
out
mov
sar
(bad)
in
rcl
mov
push
sahf
xchg
repz
xor
mov
sbb
mov
(bad)
(bad)
jmp
adc
and
sar
rol
sub
and
jo
pop
(bad)
lods
or
sub
dec
jbe
add
and
bound
js
loop
jg
test
aad
dec
xlat
call
add
cld
xchg
sbb
test
jmp
mov
mov
stos
pusha
enter
inc
mov
or
pop
jbe
add
pop
jmp
cmp
mov
imul
sub
(bad)
(bad)
jmp
rol
imul
(bad)
shr
add
add
neg
not
jae
push
pop
mov
call
dec
imul
cmp
xchg
(bad)
(bad)
mov
lods
retf
cmp
add
or
mov
or
and
sbb
fisubr
add
add
nop
aas
mov
adc
pop
ret
adc
scas
stos
or
mov
fs
aaa
(bad)
fild
mov
mov
mov
cdq
jmp
inc
sahf
sub
lods
push
sub
stos
fisttp
scas
int
repz
(bad)
(bad)
mov
outs
movs
outs
jbe
xlat
dec
int
xchg
retf
jl
dec
in
mov
call
sub
(bad)
daa
cwde
arpl
jg
pop
(bad)
call
fstp
ror
sub
inc
(bad)
stos
add
push
(bad)
(bad)
(bad)
(bad)
js
inc
jecxz
and
add
mov
mov
inc
mov
cmp
xor
popf
inc
fstp
dec
cmps
xchg
add
push
pop
call
jg
jle
out
mov
sub
cld
das
imul
sbb
fsubr
sub
mov
pop
(bad)
pop
jg
mov
cmp
jns
jbe
cmp
push
cmp
scas
sub
(bad)
hlt
hlt
cmp
imul
das
(bad)
(bad)
(bad)
jmp
shl
test
sub
jne
sub
pop
ins
and
pop
stos
loopne
out
out
mov
dec
and
(bad)
inc
(bad)
stos
cmp
jle
movs
xor
stos
enter
pusha
cld
call
and
cmp
and
sub
xlat
xchg
mov
jg
sub
fild
setp
(bad)
(bad)
jg
ss
into
lods
test
sahf
(bad)
int3
and
jbe
mov
add
sub
jp
fadd
call
adc
out
in
in
into
lock
mov
adc
pushf
or
dec
pop
push
(bad)
add
jg
outs
hlt
xchg
adc
repnz
call
xchg
mov
pop
test
int
jp
dec
xchg
mov
inc
xchg
sub
inc
ror
lahf
mov
popa
push
jg
mov
cmp
aaa
cmp
int3
inc
sub
xchg
jo
sahf
inc
mov
xor
ret
aaa
cmp
test
hlt
xchg
jmp
add
jmp
cdq
retf
pop
(bad)
fcomip
test
outs
test
jecxz
(bad)
mov
(bad)
jno
mov
jbe
lds
fwait
into
in
fidiv
mov
scas
cmp
lea
sar
inc
jns
scas
lods
mov
icebp
and
pop
imul
ja
clc
pop
mov
retf
mov
imul
jp
add
loopne
repz
(bad)
xchg
push
lods
rcr
(bad)
xchg
imul
lock
mov
(bad)
adc
add
(bad)
(bad)
dec
fstp
into
inc
icebp
pop
jae
out
mov
mov
test
addr16
pop
jle
clc
(bad)
mov
fimul
add
cmp
jbe
xor
mov
adc
inc
sub
mov
shl
imul
or
push
or
dec
lods
mov
mov
mov
mov
xlat
adc
mov
mov
pushf
push
(bad)
(bad)
call
(bad)
ins
icebp
scas
push
test
leave
inc
and
or
fst
mov
data16
dec
pop
xor
add
inc
movs
out
mul
jo
mov
inc
mov
push
out
push
push
cwde
jl
and
add
xor
(bad)
(bad)
call
test
add
das
lods
bound
xor
sub
je
mov
sub
cli
(bad)
inc
ror
out
pop
pop
fneni(8087
cmp
dec
xlat
jno
test
int3
adc
call
cmp
lods
adc
sub
push
xchg
in
xchg
cli
(bad)
(bad)
call
fs
fst
push
push
mov
cmps
sub
pop
or
cmc
cmps
mov
jb
jmp
rcl
xchg
sub
fsub
and
xlat
test
(bad)
(bad)
(bad)
push
mov
outs
mov
lods
mov
mov
push
xchg
and
cli
(bad)
(bad)
call
sbb
mov
pusha
push
lds
adc
sar
rcr
cmp
xchg
(bad)
inc
pop
push
(bad)
mov
jae
add
adc
loop
sub
inc
pop
in
sub
rcr
inc
inc
stos
add
adc
outs
imul
jne
leave
(bad)
fnsave
xchg
scas
fiadd
pushf
mov
pop
out
cld
imul
cs
dec
xlat
push
call
add
ss
jmp
inc
or
repz
jb
jg
ds
sub
xchg
out
adc
pop
sub
sub
cmp
mov
xchg
jmp
fwait
adc
mov
aam
in
loopne
sbb
cdq
xchg
cmps
sub
mov
mov
inc
xchg
(bad)
(bad)
dec
mov
push
and
and
xchg
inc
call
(bad)
cmp
repz
into
mov
repz
xchg
ins
daa
mov
(bad)
jmp
dec
(bad)
(bad)
adc
lods
loope
mov
inc
movs
jne
push
ins
push
adc
push
dec
and
jmp
aaa
in
inc
retf
lock
xor
inc
mov
(bad)
(bad)
cmp
repz
dec
(bad)
mov
jbe
jge
stc
ficomp
pop
idiv
add
add
(bad)
sub
and
call
xchg
or
lahf
cmps
mov
(bad)
inc
sub
jns
add
xlat
xchg
lahf
gs
imul
ja
dec
(bad)
nop
cli
lods
aam
jne
pop
jp
or
dec
imul
fdivrp
(bad)
(bad)
(bad)
jns
adc
or
loopne
inc
inc
mov
push
jno
lods
addr16
pop
cwde
add
or
(bad)
jmp
and
es
xor
(bad)
dec
(bad)
not
mov
jmp
or
cmc
loop
(bad)
(bad)
fld
push
into
cmp
add
je
call
pop
(bad)
(bad)
(bad)
dec
mov
call
in
xor
aad
xchg
adc
push
sbb
xchg
dec
fstp
cmp
sbb
test
sub
(bad)
fbld
rol
out
xchg
and
shr
(bad)
sahf
into
xchg
ret
mov
fs
dec
or
outs
or
fisttp
mov
and
mov
shl
mov
lods
xchg
(bad)
(bad)
(bad)
dec
into
xchg
mov
inc
xor
aad
test
bswap
push
inc
xlat
mov
xor
(bad)
dec
pusha
fsub
and
mov
ret
inc
out
(bad)
(bad)
(bad)
jg
ja
push
jle
imul
js
scas
into
mov
add
pop
(bad)
lea
ins
jle
ja
pop
inc
mov
fistp
sar
stos
add
mov
(bad)
(bad)
dec
cmp
outs
(bad)
mov
push
dec
jl
or
pop
(bad)
dec
mov
lock
fcmovne
mov
ins
popf
pop
or
mov
leave
cmc
jmp
imul
or
ds
adc
jp
(bad)
mov
fld
(bad)
mov
or
arpl
aam
(bad)
sar
gs
jp
mov
sub
push
cmps
leave
or
loope
(bad)
mov
add
ja
shl
test
stos
dec
and
xchg
sbb
pop
mov
ja
sub
(bad)
call
mov
daa
iret
inc
sub
lea
call
xor
out
pusha
imul
(bad)
inc
dec
ret
dec
int3
rcl
aad
jl
and
push
aad
mov
call
mov
inc
cmp
cmps
nop
adc
xchg
pop
cs
shr
shl
inc
sub
xchg
mov
popa
(bad)
(bad)
(bad)
fstp
sar
clc
mov
fsub
xchg
xor
jb
lahf
(bad)
imul
mov
push
in
jo
cmp
out
hlt
cmp
stc
xchg
lea
jg
inc
adc
mov
ins
cmp
scas
mov
sbb
(bad)
(bad)
(bad)
jmp
push
push
sub
push
push
inc
(bad)
lods
push
inc
mov
mov
sar
stos
cld
data16
(bad)
mov
sbb
adc
dec
aas
pusha
scas
pop
add
(bad)
push
push
xor
popf
jp
xlat
out
push
xchg
sbb
cmp
mov
push
mov
xchg
iret
push
(bad)
femms
ret
or
jno
or
sub
out
fdivrp
push
cmp
mov
cmps
cs
ins
xor
jl
sbb
(bad)
dec
mov
pop
jl
push
mov
mov
fwait
test
sub
pop
mov
scas
xor
div
pop
sbb
fbld
retf
or
pop
pop
inc
shr
mov
(bad)
(bad)
pop
mov
jbe
outs
inc
cmp
sub
loopne
jg
(bad)
inc
loop
adc
pusha
jl
mov
retf
jg
lods
or
lods
mov
mov
jg
sub
mov
xor
(bad)
ror
(bad)
cmp
stos
aad
stc
jp
aaa
mov
pop
xchg
and
cmp
icebp
mov
int
xor
es
lea
mov
test
(bad)
(bad)
jmp
mov
call
dec
test
push
and
and
xchg
jae
ret
pop
dec
sbb
(bad)
(bad)
dec
adc
jns
cdq
lods
rcr
es
adc
dec
(bad)
xchg
sub
pop
mov
push
(bad)
fcomip
(bad)
push
dec
stos
test
ret
or
cmp
fst
lds
pop
icebp
out
pushf
call
std
(bad)
call
(bad)
and
inc
enter
push
jecxz
sar
adc
(bad)
jmp
mov
or
mov
sub
jae
mov
sub
xor
xlat
xor
sub
dec
(bad)
sub
lods
xlat
(bad)
(bad)
inc
xlat
(bad)
enter
not
xchg
std
loopne
mov
mov
jg
cmpps
inc
stos
mov
movs
inc
jg
sub
add
fadd
inc
jge
cmp
(bad)
jg
mov
xor
fld
sbb
and
inc
(bad)
(bad)
(bad)
call
cmp
cmp
inc
or
das
mov
pop
stos
jb
mov
test
icebp
sub
(bad)
(bad)
jmp
pushf
stc
adc
dec
aas
sub
fistp
fxch
into
mov
inc
out
pusha
sbb
test
jmp
adc
jae
into
int3
test
pop
xor
cmp
and
mov
cld
fdivr
mov
jno
into
stos
xchg
shl
and
and
inc
imul
jne
(bad)
(bad)
in
sub
call
je
out
sub
inc
out
sub
repnz
inc
scas
push
call
mov
sti
sbb
ins
ret
push
push
imul
mov
je
sub
add
cmp
lods
lods
xchg
repnz
loope
push
in
addr16
mov
push
cld
(bad)
(bad)
jmp
shl
(bad)
sub
gs
jecxz
ins
adc
fpatan
or
jmp
xchg
jmp
loope
lods
pushf
push
rcr
mov
pop
loopne
mov
enter
jo
push
pop
iret
push
mov
ret
and
nop
add
dec
dec
stos
sbb
and
mov
int3
mov
mov
cdq
xor
clc
jg
js
mov
aaa
mov
outs
(bad)
jmp
cmp
pop
(bad)
fcomp
jmp
ins
push
fld
fs
sbb
jg
sahf
test
outs
xor
or
push
add
sar
retf
enter
js
ficom
das
pop
jmp
push
fwait
(bad)
xlat
sbb
mov
cmp
xlat
adc
call
jmp
or
stc
sbb
dec
fdivr
pop
dec
lods
or
imul
(bad)
call
out
sbb
jecxz
mov
imul
dec
je
and
(bad)
mov
cmc
js
pop
imul
mov
hlt
add
jb
push
(bad)
(bad)
(bad)
(bad)
(bad)
out
sub
cwde
fistp
in
test
dec
pop
jo
lods
cmc
test
shl
pushf
cmps
popa
shl
sbb
push
stos
mov
cwde
or
ret
jmp
inc
mov
pop
into
lock
or
test
(bad)
(bad)
(bad)
cli
rcr
mov
push
sub
sbb
cs
into
dec
mov
jge
ret
pop
pop
pop
fwait
add
add
call
sbb
push
test
push
xor
mov
aam
xor
outs
jp
sub
imul
pusha
int
push
inc
data16
ret
dec
ins
mov
mov
data16
std
dec
cmp
rol
or
jg
sub
add
mov
mov
and
jmp
sbb
in
pop
pushf
call
cmp
fdivr
je
dec
jl
pop
aas
(bad)
push
push
scas
push
sbb
loope
movs
mov
xor
and
ror
mov
(bad)
(bad)
(bad)
jmp
mov
(bad)
and
push
mov
(bad)
fwait
ds
and
sbb
int
jb
enter
adc
cli
(bad)
jmp
sbb
pushf
ret
jg
into
into
(bad)
mov
mov
stos
fisubr
das
mov
(bad)
(bad)
dec
mov
shl
ins
pop
mov
adc
call
aam
(bad)
sub
dec
push
sbb
in
lods
fucom
mov
pop
loopne
inc
push
push
fwait
xor
fsubr
or
shl
rcl
outs
imul
sub
loope
pushf
pop
jecxz
aaa
scas
movs
data16
sbb
cli
scas
dec
dec
xor
call
in
in
jmp
pop
jge
out
addr16
mov
sub
pop
enter
ss
sbb
or
stc
scas
push
jl
movs
or
(bad)
jmp
jmp
lods
sti
imul
cwde
inc
bound
mov
mov
cs
in
fldcw
mov
arpl
sub
mov
ret
bound
jbe
pop
lds
mov
pop
loopne
call
adc
sbb
arpl
mov
cld
dec
inc
jnp
and
(bad)
(bad)
(bad)
jg
int
pop
xor
inc
or
xlat
nop
mov
cli
and
sahf
jns
shl
out
(bad)
(bad)
push
cmp
je
data16
jnp
jbe
popf
inc
push
xchg
ror
inc
addr16
mov
and
mov
or
into
jmp
shr
(bad)
jmp
stos
jnp
lds
xor
push
and
mov
add
cmp
fisubr
adc
(bad)
ffree
xor
adc
jmp
xor
sbb
jo
cdq
mov
sbb
fild
dec
ror
push
mov
stos
and
fwait
mov
(bad)
(bad)
(bad)
inc
shl
outs
cld
sar
in
(bad)
stc
mov
iret
popa
cld
in
data16
addr16
mov
jmp
movs
lea
sub
out
cmp
jae
mov
ret
add
clc
data16
mov
jecxz
(bad)
inc
in
add
stos
and
movs
mul
loopne
leave
(bad)
xor
movs
jecxz
mov
call
cmp
loopne
sub
inc
imul
xchg
dec
loop
mov
sbb
(bad)
(bad)
out
je
jl
mov
pop
xchg
xor
dec
cmp
imul
(bad)
(bad)
(bad)
dec
cmps
xor
mov
scas
push
cmp
jle
mov
mov
sbb
fs
sbb
jno
ins
fisub
sbb
pop
xor
cmps
cmp
ins
mov
add
cwde
outs
daa
sbb
push
inc
jl
fmul
clc
jecxz
fmul
mov
cmovo
(bad)
(bad)
aas
jae
ret
pusha
retf
out
fld
inc
jmp
push
push
fnstsw
aam
je
icebp
jg
(bad)
clc
jo
sbb
loop
or
(bad)
in
mov
mov
inc
push
cmp
mov
les
(bad)
call
ret
retf
ja
mov
div
pop
inc
or
scas
shl
fucomip
sub
(bad)
(bad)
jmp
adc
add
add
xchg
sub
cmp
cmp
cmp
jle
(bad)
fadd
or
mov
push
jo
test
scas
mov
(bad)
(bad)
call
loope
mov
ficom
out
mov
inc
xchg
push
adc
call
jg
pop
sub
es
in
outs
cli
or
mov
or
push
cmp
(bad)
(bad)
inc
sar
mov
adc
xor
xor
jge
imul
icebp
cld
test
mov
xchg
push
adc
sub
hlt
xchg
in
inc
jbe
test
call
cmps
cmp
dec
enter
clc
(bad)
dec
add
scas
sbb
call
bound
mov
das
sbb
mov
not
cld
mov
mov
(bad)
inc
movs
push
cmp
stos
les
retf
movs
mov
add
add
cwde
mov
or
aam
ret
mov
jb
mov
or
adc
dec
mov
inc
xchg
int3
popf
mov
and
xchg
(bad)
fcomip
pop
inc
ds
jbe
push
fnsave
clc
xor
int
mov
retf
lock
std
cmps
sub
xor
xchg
xlat
pop
(bad)
les
pusha
jge
aas
jo
mov
nop
(bad)
or
cmp
jmp
loope
enter
(bad)
inc
pmuludq
mov
in
cs
jbe
lods
enter
jg
push
jae
imul
xchg
jmp
gs
imul
out
cwde
jl
xor
sub
and
and
(bad)
mov
mov
or
jle
aaa
retf
(bad)
(bad)
(bad)
inc
mov
ins
ret
and
adc
dec
cs
movs
and
mov
mov
ins
call
daa
mov
repz
and
push
in
adc
pop
jmp
or
lods
xchg
cmp
arpl
aaa
jge
or
ret
jg
inc
cld
push
mov
rcl
fbld
fisubr
cld
(bad)
(bad)
inc
rol
mov
mul
mov
(bad)
movs
sub
dec
xlat
outs
mov
jg
or
gs
lods
push
mov
push
mov
aas
or
jge
iret
inc
js
retf
jg
or
jle
cdq
(bad)
lahf
(bad)
out
ret
mov
mov
cwde
fmul
(bad)
mov
jl
retf
loopne
push
inc
add
add
jle
adc
mov
dec
and
push
jecxz
call
ds
adc
(bad)
(bad)
call
sbb
and
xchg
shr
jp
enter
cmps
mov
inc
loopne
and
inc
xor
push
std
mov
xor
xchg
mov
(bad)
mov
test
inc
mov
retf
cmp
mov
(bad)
(bad)
fsubr
inc
xchg
mov
xor
jb
aad
daa
xchg
cdq
ror
pop
pop
jecxz
mov
popa
mov
fcom
lock
pop
cs
inc
cmp
call
push
adc
or
sbb
loope
pop
mov
push
mov
push
jno
mov
loop
mov
lahf
sahf
aaa
movs
aaa
mov
jns
inc
(bad)
jmp
xor
(bad)
cwde
mov
call
(bad)
call
das
dec
xlat
mov
cmc
mov
sahf
iret
sub
fsubr
push
std
fwait
jp
fistp
mov
lods
cmc
(bad)
(bad)
push
push
xchg
push
add
jmp
jge
push
jl
outs
xor
sbb
out
xchg
nop
sub
or
add
xor
mov
into
ss
pop
(bad)
(bad)
(bad)
push
cdq
ds
rcl
or
sbb
sub
inc
ds
inc
fistp
(bad)
(bad)
(bad)
out
clc
xor
mov
xor
ins
cmps
mov
adc
ins
or
sub
(bad)
(bad)
(bad)
in
ror
xor
bound
sub
jnp
pop
pop
mov
sub
adc
popf
popf
inc
dec
(bad)
call
stc
push
popa
jae
xchg
sub
scas
call
je
loope
jp
xchg
icebp
(bad)
and
(bad)
(bad)
(bad)
sti
mov
aam
push
xchg
das
dec
mov
inc
dec
int3
jmp
clc
mov
sti
clc
add
adc
scas
fs
xor
(bad)
jmp
into
dec
popa
outs
sub
xor
lods
cmp
aam
(bad)
dec
sub
dec
je
dec
jge
ins
jae
jl
pop
dec
sahf
pop
inc
jmp
mov
stc
mov
dec
sbb
int
adc
mov
mov
push
jae
push
into
mov
idiv
popf
ret
fst
(bad)
(bad)
(bad)
jmp
arpl
test
push
mov
ret
inc
mov
jl
inc
cmp
mov
(bad)
clc
xor
adc
pop
sub
sbb
aam
aam
lods
(bad)
clc
(bad)
mov
ret
or
xor
sbb
popa
pop
push
ret
rcr
fnstenvw
clc
jae
test
inc
push
ins
cld
(bad)
jmp
popf
mov
pushf
popa
inc
into
in
int3
push
or
cli
(bad)
out
(bad)
jmp
sub
dec
movs
sub
xchg
cmp
aaa
fidivr
call
enter
jl
dec
jle
fsubr
ret
xlat
or
push
outs
jp
fwait
xor
(bad)
jg
ror
push
jo
aaa
mov
jle
pop
std
rcr
cld
pop
mov
inc
cmp
xchg
bound
(bad)
(bad)
jg
mov
fsubrp
inc
fdiv
mov
mov
cmp
fcom
or
push
dec
(bad)
xchg
push
nop
das
in
test
imul
sub
mov
cwde
repz
sbb
loop
lock
pop
(bad)
clc
mov
(bad)
imul
inc
jmp
data16
inc
push
or
or
popa
mov
cs
push
lahf
outs
pop
mov
imul
push
jge
sahf
icebp
ror
push
push
and
(bad)
jg
mov
sub
mov
push
xlat
in
mov
jmp
retf
sub
inc
dec
dec
fisubr
xchg
cmps
adc
jne
shl
(bad)
(bad)
(bad)
push
pop
ins
adc
call
pop
mov
and
aam
pop
rcr
jb
lock
mov
(bad)
mov
push
rcr
mov
and
lea
adc
inc
dec
xor
daa
sub
mov
sar
sbb
and
mov
cld
jmp
adc
(bad)
(bad)
call
mov
push
loopne
sbb
jnp
jle
cmp
sbb
cmc
and
mul
add
cli
call
fimul
xchg
mov
fdivrp
mov
adc
cmp
cmp
lea
push
cmp
jbe
jle
push
out
add
push
adc
sar
add
bound
(bad)
(bad)
inc
aad
or
jp
popa
call
inc
cmps
xchg
pusha
adc
iret
dec
(bad)
(bad)
fisttp
xor
cmp
ret
lods
cmp
ja
lea
(bad)
(bad)
dec
in
stos
dec
sbb
shl
jle
jae
(bad)
repnz
jecxz
and
sti
push
inc
cli
mov
inc
pop
std
jb
clc
mov
sub
scas
jp
pop
cmp
and
(bad)
aad
xor
push
clc
fild
mov
dec
sbb
shr
popf
shl
leave
fdivp
mov
mov
xor
dec
push
mov
xor
sub
jo
dec
jae
mov
jmp
into
sub
retf
mov
ins
leave
dec
addr16
push
test
and
sub
aas
and
sub
(bad)
(bad)
(bad)
cmp
jae
(bad)
inc
sbb
jbe
outs
adc
ds
jl
fsubr
in
pop
pop
fs
pop
push
cs
nop
fidivr
(bad)
(bad)
call
jb
and
arpl
in
sbb
movs
jb
sub
inc
ins
cmp
(bad)
(bad)
jg
gs
inc
out
aas
jecxz
(bad)
and
ja
cli
adc
in
xchg
add
(bad)
(bad)
(bad)
in
pop
cmp
pop
push
mov
imul
push
cmps
shl
cmps
lock
ret
ins
mov
das
jp
(bad)
(bad)
push
mov
mov
sbb
cmps
xor
aaa
adc
test
(bad)
fisttp
sub
rdtsc
jne
in
mov
cdq
out
ds
out
jbe
dec
cli
retf
popf
popa
xchg
lods
gs
call
fcom
imul
pop
test
push
push
xlat
mov
cli
int3
inc
mov
aaa
(bad)
(bad)
(bad)
call
mov
es
call
adc
cmc
dec
mov
je
push
(bad)
(bad)
dec
push
xor
cmp
or
and
xor
lahf
int3
dec
div
loopne
xchg
pusha
mov
or
xor
lea
and
shl
ret
xchg
jp
push
push
sub
es
pusha
push
sbb
inc
mov
stos
jl
pop
lds
call
mul
inc
pop
cld
jmp
ds
(bad)
ins
lock
fdivrp
jg
or
fisubr
pop
pop
out
rol
mov
lods
mov
aaa
cmp
pop
xchg
shr
(bad)
(bad)
(bad)
push
ja
or
mov
dec
push
mov
mov
call
mov
xchg
and
aam
adc
aam
lods
or
(bad)
(bad)
(bad)
jmp
repnz
in
mov
int
push
push
sub
mov
fs
fcomip
(bad)
push
popf
retf
mov
ror
(bad)
jmp
pop
or
mov
adc
mov
mov
xor
ficom
push
arpl
mov
stc
mov
mov
mov
or
jmp
jbe
stos
mov
cmp
icebp
(bad)
jmp
and
sub
xchg
cmps
outs
aam
cmc
mov
(bad)
inc
ss
adc
mov
lods
jmp
and
cwde
xor
(bad)
call
mov
mov
movs
hlt
(bad)
sub
retf
shl
inc
lea
add
dec
mov
xor
pop
inc
test
(bad)
(bad)
inc
call
push
xchg
pusha
xchg
fwait
jno
cmp
push
adc
inc
fwait
scas
inc
aas
pop
adc
push
icebp
shl
ds
stos
mov
(bad)
(bad)
jmp
pop
jne
sar
adc
adc
stc
sub
pop
mov
div
add
sbb
outs
rol
stos
(bad)
(bad)
jmp
sbb
aaa
rcl
dec
xor
inc
(bad)
fucomi
je
(bad)
cmp
in
mov
je
(bad)
in
sbb
ret
push
or
push
dec
ja
(bad)
jg
sub
inc
xor
ins
cmp
daa
data16
adc
xor
(bad)
(bad)
call
xlat
rcl
mov
cmp
ins
sti
sub
xchg
addr16
into
sbb
repnz
(bad)
(bad)
jmp
mov
xor
xor
gs
lods
pop
into
and
cmp
jmp
dec
cli
jmp
imul
xor
movs
pusha
not
(bad)
mov
push
push
movs
loope
retf
sub
data16
mov
push
not
adc
js
retf
out
hlt
(bad)
dec
xchg
mov
inc
jne
aas
mov
or
jno
outs
jo
lock
test
(bad)
jnp
add
stos
lods
or
(bad)
aad
js
sar
mov
dec
push
mov
movs
sbb
inc
outs
ja
mov
call
xchg
sbb
(bad)
(bad)
(bad)
mov
lods
je
jp
push
pushf
cmps
loopne
sbb
das
call
mov
mov
(bad)
call
and
xor
ins
push
pop
sub
mov
(bad)
sar
xchg
mov
shr
push
jnp
(bad)
fyl2xp1
fdiv
(bad)
arpl
(bad)
(bad)
(bad)
fild
and
sar
imul
ret
pop
mov
sub
rol
adc
push
bound
pop
fwait
xor
mov
mov
sub
inc
and
mov
shr
add
lea
icebp
cmp
mov
retf
rcr
fdivrp
ja
clc
mov
loopne
lahf
jge
aaa
call
daa
shl
(bad)
aas
sub
rcl
adc
test
mov
fwait
shl
cmps
ret
(bad)
(bad)
call
cs
add
inc
and
test
mov
daa
ins
jl
mov
(bad)
(bad)
cmp
mov
ja
ss
lock
jmp
in
jnp
stos
lock
(bad)
(bad)
(bad)
inc
clc
and
adc
stc
xor
or
pop
mov
leave
int
(bad)
jmp
mov
enter
outs
arpl
out
mov
outs
mov
push
fwait
cmp
bound
test
xchg
mov
clc
dec
(bad)
dec
xor
dec
mov
ins
mul
adc
hlt
mov
dec
mov
jne
xchg
in
rcr
(bad)
(bad)
jmp
or
push
adc
in
mov
addr16
icebp
push
xchg
or
xor
pop
dec
(bad)
(bad)
(bad)
call
sub
or
add
xlat
mov
sbb
cwde
inc
adc
xor
mov
jg
(bad)
dec
call
ror
dec
push
cmp
adc
mov
cld
(bad)
push
popa
or
inc
jge
inc
sub
push
sub
push
jb
jo
or
adc
or
jp
adc
or
mov
push
call
mov
cmp
(bad)
dec
mov
sbb
loope
mov
and
out
and
(bad)
(bad)
(bad)
push
cld
out
jp
pop
mov
push
dec
cld
out
popf
jg
sbb
test
in
(bad)
jp
pop
pushf
mov
sbb
arpl
lds
sti
out
js
xchg
(bad)
loop
sbb
sbb
xchg
mov
in
lea
test
(bad)
(bad)
jmp
sub
pop
(bad)
test
cs
push
bound
popf
shl
cdq
xchg
or
mov
jp
icebp
cmp
sub
aas
imul
dec
stos
mov
xor
clc
aaa
(bad)
(bad)
cmp
inc
mov
jbe
jae
sbb
mov
in
add
pop
add
cli
bts
sub
movs
(bad)
in
(bad)
mov
jne
push
cmc
ins
call
jae
pushf
loop
pop
mov
cmps
mov
into
dec
adc
loopne
xor
pusha
(bad)
out
cmp
adc
(bad)
stc
jbe
fdivr
retf
xor
jb
retf
(bad)
call
shl
rol
xor
imul
test
sbb
outs
adc
or
(bad)
aas
dec
adc
icebp
sub
call
jg
push
sub
arpl
mov
adc
jnp
movs
xor
(bad)
call
push
mov
mov
mov
or
sbb
(bad)
(bad)
(bad)
jmp
retf
sbb
ret
mov
inc
mov
fldcw
lds
lock
push
and
mov
sar
jmp
bound
xchg
out
lock
(bad)
(bad)
(bad)
call
inc
xchg
push
dec
stos
sub
sbb
int3
push
test
push
ret
add
push
xchg
sbb
call
mov
imul
sahf
adc
outs
out
adc
mov
mov
dec
pop
push
inc
push
(bad)
hlt
jnp
(bad)
cmp
movs
fldcw
sub
int3
mov
(bad)
nop
dec
and
ins
test
and
imul
mov
jecxz
shl
add
fcomip
das
push
cmp
mov
hlt
mov
mov
(bad)
(bad)
call
loope
adc
in
jno
cwde
std
cmp
dec
xlat
mov
inc
push
dec
push
sbb
loop
std
call
xchg
or
mov
pop
pop
mov
mov
repnz
(bad)
(bad)
(bad)
mov
inc
aaa
push
popa
ret
sub
pushf
sub
and
jne
and
sub
mov
imul
xchg
sub
push
sub
push
lahf
or
adc
push
sub
ror
pop
retf
cld
add
mov
call
cli
scas
mov
shl
and
or
(bad)
mov
jns
(bad)
stc
and
outs
jg
fiadd
jnp
sbb
jmp
icebp
pop
pop
sub
inc
ffreep
es
sub
push
or
mov
pop
mov
push
arpl
cld
(bad)
jmp
dec
outs
les
(bad)
in
fwait
cmp
int3
sbb
sti
and
test
jmp
push
push
in
jmp
jbe
add
adc
out
fsubr
(bad)
(bad)
pop
push
out
cld
cmp
jecxz
inc
or
cli
gs
dec
retf
xlat
jg
(bad)
mov
jb
sbb
arpl
sbb
or
add
out
int3
add
(bad)
cmp
daa
adc
inc
aad
adc
scas
cli
jmp
mov
mov
sbb
adc
ja
shl
add
clc
and
mov
addr16
pusha
imul
scas
push
mov
mov
mov
add
dec
das
inc
int3
and
pop
icebp
and
pop
les
gs
(bad)
(bad)
fild
fnsave
pop
fwait
imul
aaa
mov
and
or
sub
add
(bad)
jg
es
inc
inc
fwait
mov
pop
mov
arpl
cmps
adc
(bad)
call
sub
(bad)
repz
imul
out
push
movs
mov
mov
mov
iret
je
add
dec
adc
inc
dec
pop
lods
sbb
ret
(bad)
(bad)
sar
xor
(bad)
(bad)
(bad)
call
xor
sbb
xor
loop
out
cld
add
push
ja
dec
ds
add
iret
dec
sbb
push
jmp
scas
idiv
jl
frstor
mov
outs
sbb
retf
jg
test
jno
mov
aad
aam
sub
adc
(bad)
dec
je
out
mov
pushf
sbb
adc
xor
cmp
dec
in
xor
fs
jo
(bad)
(bad)
lods
dec
movs
pop
cmps
loopne
ds
imul
xchg
mov
or
sbb
or
call
adc
cmp
aam
cmps
push
dec
es
in
xchg
sti
stos
fmul
(bad)
(bad)
call
ret
mov
mov
jmp
pop
test
dec
imul
adc
stos
or
clc
push
adc
xor
pop
and
(bad)
(bad)
jmp
movs
jno
into
inc
loope
jne
pop
popf
loop
pop
pop
add
xor
pop
add
retf
jns
pop
sar
call
in
fiadd
loop
stos
sbb
mov
cli
and
cs
(bad)
call
pop
sbb
mov
push
addr16
xor
cmp
sti
call
(bad)
jg
test
std
jo
jle
pop
cmp
pop
mov
mov
(bad)
call
push
mov
pop
inc
ss
mov
imul
xlat
push
aad
xchg
lds
xlat
dec
lock
inc
push
and
imul
cld
jb
push
(bad)
(bad)
(bad)
jmp
fistp
adc
inc
ret
mov
dec
adc
pushf
ins
xor
(bad)
mov
and
(bad)
(bad)
jmp
movs
(bad)
mov
mov
xor
les
hlt
sbb
xchg
mov
add
ins
jbe
sar
mov
push
dec
and
jle
js
adc
(bad)
(bad)
dec
imul
xor
call
mov
push
or
jbe
(bad)
(bad)
(bad)
mov
and
sbb
cmp
push
lds
jle
cmp
ja
sub
sub
lods
outs
pop
mov
jbe
or
imul
sbb
pop
xor
pop
hlt
pop
dec
gs
(bad)
(bad)
call
ficomp
jae
mov
je
dec
xor
lahf
jns
cdq
pop
stos
cmp
mov
scas
sub
(bad)
fdiv
inc
ins
sub
fs
pop
jmp
test
cmp
leave
xor
fwait
imul
xchg
jb
sbb
pop
jae
fiadd
fdivp
xlat
out
xchg
test
jae
cmc
and
in
loopne
out
mov
inc
fld
jo
sub
(bad)
in
in
xor
sbb
jmp
mov
or
jmp
pop
jno
mov
loop
push
dec
xchg
rol
in
(bad)
dec
jo
pop
pop
push
fild
xor
pop
test
dec
xchg
(bad)
(bad)
call
je
pop
sbb
lds
adc
mov
(bad)
mov
cli
daa
jl
dec
jmp
inc
jmp
sar
(bad)
call
bound
mov
and
pop
test
inc
aas
ins
outs
jne
call
jg
hlt
out
lahf
lods
cld
cmp
lahf
ret
pop
std
(bad)
gs
fldcw
fstp
loope
xchg
aaa
(bad)
(bad)
(bad)
cld
xlat
xchg
add
sub
mov
(bad)
cld
pushf
sar
sbb
sbb
call
jmp
xchg
mov
ss
dec
(bad)
xchg
xchg
loopne
movs
sub
js
imul
out
les
(bad)
(bad)
inc
int3
repnz
add
call
or
imul
(bad)
fdivrp
(bad)
dec
mov
push
cmps
je
xor
outs
retf
test
mov
clc
xchg
(bad)
pop
hlt
jmp
inc
clc
adc
aaa
xchg
test
sub
cmp
hlt
sbb
xor
xor
jmp
jmp
es
and
or
call
call
jl
fist
push
fsubr
call
mov
outs
jno
and
int
mov
jl
inc
clc
call
hlt
call
xchg
aad
mov
push
inc
push
rcr
mov
je
imul
sbb
idiv
(bad)
(bad)
jmp
mov
loope
mov
lahf
dec
popa
cmp
add
or
add
xor
bnd
push
(bad)
ss
(bad)
(bad)
(bad)
jg
shl
outs
mov
mov
ja
fstp
outs
or
cmps
mov
xlat
bound
sar
xor
xor
sbb
xor
fsubr
cmp
cmc
xor
xor
dec
movs
cs
jb
xchg
xlat
sbb
daa
dec
stc
lock
fnstcw
pop
addr16
cmp
out
xchg
mov
cwde
iret
mov
add
push
mov
xchg
and
(bad)
fmul
out
cli
call
fdiv
jmp
xor
adc
arpl
(bad)
call
pop
outs
xchg
imul
test
int3
sub
test
xchg
and
add
(bad)
(bad)
(bad)
inc
mov
packuswb
xchg
cld
xchg
leave
xor
push
int
cmp
adc
out
sub
sbb
mov
icebp
fdivr
or
sbb
and
and
(bad)
cmp
test
add
mov
inc
push
ja
mov
ror
xor
add
jg
mov
mov
or
(bad)
movs
and
sbb
(bad)
jmp
add
sbb
out
imul
ret
(bad)
mov
add
mov
fpatan
retf
fdivr
adc
pop
(bad)
daa
test
sub
call
mov
cld
pop
and
imul
sbb
add
fsub
sbb
(bad)
loope
push
sub
mov
neg
mov
adc
mov
add
push
imul
(bad)
(bad)
(bad)
jmp
outs
sub
or
mov
lods
inc
xlat
jo
push
retf
xchg
dec
cli
sbb
and
(bad)
(bad)
(bad)
fst
call
out
adc
xchg
xchg
dec
out
add
ret
push
cs
mov
(bad)
(bad)
fcomip
xchg
jmp
adc
cs
retf
fs
es
into
mov
adc
(bad)
call
mov
mov
push
(bad)
lods
mov
or
add
shl
add
ret
out
jbe
jae
mov
fnstenv
jle
pop
movs
out
and
(bad)
(bad)
mov
jg
lods
inc
(bad)
(bad)
adc
push
sbb
adc
les
xchg
lahf
loope
addr16
cli
test
or
push
mov
pop
test
rcl
(bad)
sti
mov
mov
dec
and
in
add
xchg
les
in
pusha
xchg
pop
data16
push
mov
rol
or
pop
add
xor
push
xchg
iret
pushf
inc
test
fwait
push
movs
push
pop
ins
(bad)
dec
(bad)
(bad)
(bad)
push
test
retf
inc
pop
imul
lock
fs
jbe
add
xchg
(bad)
inc
mov
dec
dec
in
jmp
mov
xor
int
mov
mov
dec
cmp
outs
mov
(bad)
jmp
pushf
cmp
out
retf
inc
pop
cmp
in
icebp
mov
pop
mov
(bad)
jmp
jge
mov
fcmovu
in
jle
cld
add
bound
aad
fmulp
clc
(bad)
(bad)
call
not
inc
mov
xor
aad
mov
(bad)
inc
dec
xchg
dec
das
jbe
adc
jg
xor
xchg
cwde
das
xor
mov
cmp
outs
lds
call
adc
dec
adc
ja
adc
xchg
mov
dec
mov
stos
leave
cli
(bad)
call
nop
mov
rcl
shl
or
mov
arpl
(bad)
movs
mov
dec
scas
mov
dec
mov
pop
mov
or
sub
stos
sbb
int
inc
aam
adc
mov
inc
loop
(bad)
mov
(bad)
dec
data16
and
fstp
mov
or
push
addr16
gs
(bad)
out
add
scas
shl
scas
dec
dec
(bad)
call
stos
(bad)
aad
and
fsubr
rcr
addr16
test
mov
cmc
sub
mov
popf
shr
ret
sbb
stc
sbb
cmp
(bad)
rcl
xchg
fcmovu
mov
sbb
aaa
cld
push
aaa
cmp
xor
jl
pop
mov
xor
push
icebp
dec
dec
cli
jle
cmp
dec
outs
dec
add
fdiv
int
pop
or
jmp
aaa
mov
inc
(bad)
cmc
adc
dec
fiadd
pop
pop
lds
jmp
fist
push
popa
jne
add
jg
mov
xor
adc
outs
mov
cli
pop
(bad)
jmp
cs
nop
sahf
sbb
pop
jne
inc
imul
mov
(bad)
(bad)
push
mov
sbb
jnp
(bad)
add
and
pop
shl
pop
cmc
(bad)
call
pop
repz
xchg
ret
aaa
add
pop
adc
xlat
ds
(bad)
in
(bad)
jg
(bad)
dec
bound
push
daa
sbb
add
xchg
and
out
les
add
(bad)
(bad)
call
jnp
cdq
mov
(bad)
cmp
mov
xchg
adc
cmp
mov
lock
push
call
(bad)
cmp
jnp
push
cmp
cmp
arpl
loopne
and
(bad)
call
mov
inc
pushf
retf
jns
sub
call
mov
bound
call
or
loope
adc
mov
(bad)
out
test
mov
sbb
clc
(bad)
(bad)
push
mov
and
clc
jl
cmp
xor
xor
cmp
int
push
(bad)
dec
outs
test
scas
(bad)
out
and
test
push
(bad)
fnstsw
fdiv
mov
(bad)
rol
xor
(bad)
(bad)
mov
dec
lock
aaa
or
loopne
or
push
clc
ret
ret
iret
movs
mov
jbe
test
and
dec
pop
mov
sub
fcom
mov
test
ret
add
loopne
adc
popf
out
pusha
push
mov
loopne
sbb
std
neg
(bad)
jg
xchg
inc
bound
mov
mov
cmp
pop
scas
cli
in
jmp
xor
adc
int3
test
dec
out
shr
in
mov
cdq
pop
cmp
mov
ret
mov
scas
or
test
and
call
sub
jo
adc
je
mov
ins
add
test
lock
test
cdq
repnz
cmp
sub
or
test
je
outs
js
lahf
jno
pop
and
sbb
sub
jae
pop
dec
jle
mov
(bad)
jmp
add
div
jne
rcl
std
fdiv
mov
loopne
xlat
(bad)
sbb
(bad)
push
and
arpl
ficom
sub
adc
test
das
cwde
sbb
sub
add
(bad)
(bad)
jmp
mov
dec
sbb
stc
dec
adc
ins
cwde
aas
stc
mov
jno
sub
dec
sub
adc
dec
shl
mov
int3
inc
cmp
hlt
push
cld
in
jmp
jbe
jbe
popf
lea
mov
adc
add
(bad)
(bad)
jg
inc
enter
cmp
scas
(bad)
movs
push
or
cmp
inc
loope
cld
(bad)
jg
out
jns
jmp
mov
sbb
(bad)
test
push
std
dec
retf
mov
xchg
clc
jp
pop
inc
dec
dec
(bad)
aad
push
ror
cdq
(bad)
(bad)
(bad)
jmp
cmp
ret
add
mov
push
dec
leave
in
xchg
dec
lea
jo
(bad)
(bad)
call
in
jno
fidivr
adc
retf
push
daa
cmp
and
call
dec
mov
dec
pop
pusha
jmp
inc
sbb
dec
sub
sahf
sub
or
(bad)
inc
movs
xor
or
inc
inc
xchg
jmp
cli
and
popf
push
add
(bad)
push
ins
fdivr
add
icebp
mov
or
or
jmp
mov
mov
mov
(bad)
push
adc
jmp
cmp
sar
(bad)
(bad)
call
and
lods
outs
dec
xlat
xchg
and
jbe
fisubr
mov
mov
nop
pusha
cmps
pop
pop
cmp
jl
add
test
ss
adc
xor
inc
adc
(bad)
ffree
and
fisubr
cmp
(bad)
(bad)
out
jle
cs
test
ffreep
xor
inc
call
xchg
dec
pop
or
(bad)
(bad)
(bad)
(bad)
mov
adc
push
xchg
mov
jge
pop
xor
addr16
cmps
xchg
int3
ret
push
icebp
int3
pushf
inc
ins
mov
push
mov
(bad)
xchg
push
xor
(bad)
(bad)
mov
xchg
mov
inc
(bad)
and
std
ret
outs
xchg
aaa
stos
stos
mov
mul
mov
dec
scas
aaa
sbb
sub
pop
add
cmp
dec
bound
sbb
jne
xchg
je
stos
(bad)
sbb
sub
loop
sub
and
(bad)
jg
aam
xor
and
push
pop
xor
mov
loopne
mov
sahf
cmps
adc
(bad)
push
out
sub
movs
lea
pop
(bad)
(bad)
(bad)
mov
mov
dec
push
mov
cmps
mov
jmp
sbb
inc
aad
(bad)
(bad)
dec
cs
test
das
shl
cmovg
lea
fcomip
mov
sub
sbb
push
clc
pusha
xchg
sahf
popf
fwait
(bad)
(bad)
(bad)
inc
retf
xlat
mov
out
ret
call
pop
add
inc
idiv
mov
(bad)
jmp
and
cmps
pop
call
push
xor
lds
add
push
adc
(bad)
inc
pushf
sub
jle
imul
int3
es
inc
and
jl
(bad)
call
xor
or
jg
sub
(bad)
(bad)
(bad)
jmp
data16
xchg
mov
and
dec
ret
sbb
pop
mov
enter
push
fild
mov
mov
sub
pop
and
pop
jle
std
scas
(bad)
(bad)
(bad)
(bad)
clc
sbb
mul
loope
or
addr16
clc
jmp
cld
in
cld
(bad)
(bad)
(bad)
inc
call
add
sub
pop
jns
popa
jl
cmp
xchg
push
shl
(bad)
cmp
xchg
pusha
xchg
bound
mov
out
xchg
add
lahf
fcom
xor
call
mov
or
in
sbb
shl
test
(bad)
(bad)
dec
jle
(bad)
std
push
sbb
out
(bad)
shl
stos
call
(bad)
xor
pop
push
cdq
in
cmp
cmp
(bad)
(bad)
push
and
add
adc
outs
sub
or
outs
or
jle
neg
jp
sahf
cmp
out
les
mov
jnp
pop
outs
or
sub
mov
jne
pop
mov
aaa
jo
mov
pop
sar
fwait
hlt
outs
xchg
sub
js
adc
dec
sub
dec
shr
(bad)
push
or
mov
cwde
pop
cmp
push
pop
add
sbb
(bad)
(bad)
push
sub
xor
clc
fimul
(bad)
jmp
mov
cwde
push
and
(bad)
lock
cmp
mov
cmps
out
jp
(bad)
(bad)
(bad)
push
jl
scas
and
fiadd
ins
mov
jnp
int3
jge
(bad)
enter
test
push
(bad)
(bad)
(bad)
call
inc
imul
inc
cmp
dec
aas
daa
ret
jmp
xchg
daa
mov
xchg
dec
mov
(bad)
jmp
pop
call
and
dec
xor
(bad)
jg
xchg
dec
mov
lds
sbb
cmps
push
mov
jne
sbb
push
ret
loopne
loop
push
sbb
sub
inc
ficom
push
fstp
push
js
xor
jne
push
popa
rcl
mov
fcmovnu
mov
push
ja
or
push
scas
dec
and
shl
aad
mov
sbb
loop
add
jmp
jp
push
enter
pop
add
std
stc
pop
cdq
(bad)
(bad)
jmp
pop
add
dec
sbb
repz
ins
in
call
jmp
xchg
test
ss
lock
fisttp
or
push
dec
push
or
add
(bad)
jmp
xlat
pushf
cmp
into
int
and
sub
add
jmp
jg
dec
fwait
rol
test
lahf
lods
dec
cmp
mov
xor
(bad)
(bad)
call
(bad)
pop
call
aaa
cmp
shl
(bad)
clc
daa
call
inc
sbb
(bad)
(bad)
(bad)
call
mov
jne
std
sbb
pop
(bad)
jecxz
shr
shl
ficomp
ret
jae
bound
icebp
jmp
outs
into
xlat
pop
movs
jbe
jae
call
mov
ins
int
addr16
jge
jne
lea
scas
add
clc
jnp
xlat
adc
xor
(bad)
rcr
push
mov
mov
push
push
pop
ret
sbb
(bad)
dec
dec
push
arpl
fsubr
sbb
jnp
(bad)
mov
ja
imul
das
pop
mov
adc
mov
xlat
data16
(bad)
(bad)
(bad)
mov
in
(bad)
hlt
xor
shr
xchg
ins
or
lods
aad
push
arpl
or
(bad)
jmp
push
mov
xlat
or
mov
mov
(bad)
pop
and
test
inc
pop
sub
(bad)
call
ret
push
out
movs
scas
test
hlt
inc
movs
movs
js
xor
push
call
(bad)
jnp
(bad)
add
jg
ss
xchg
rcl
stos
xor
arpl
cmp
repz
rcl
sar
jbe
sbb
rcl
add
imul
ds
(bad)
dec
dec
lock
mov
mov
movs
bound
mov
cmp
sti
mov
xor
jbe
jp
inc
mov
push
mov
loopne
jmp
adc
lea
aaa
jae
mov
mov
call
cli
outs
clc
pop
cmp
push
(bad)
cmp
cmc
aam
inc
jmp
sbb
and
(bad)
jmp
iret
mov
add
push
jecxz
add
pop
ins
push
mov
jae
push
jb
jl
cli
(bad)
mov
(bad)
(bad)
(bad)
mov
inc
sub
pop
sbb
cmp
mov
lock
and
push
cs
inc
dec
sar
cdq
pushf
xchg
outs
pop
hlt
inc
push
sbb
xor
jo
push
in
fisub
aam
(bad)
dec
pop
les
sar
jle
add
jg
xlat
daa
nop
dec
fdiv
ss
rol
aaa
add
ror
dec
movs
call
push
xor
pushf
and
xlat
arpl
out
mov
xor
mov
xchg
xchg
sub
into
mov
ret
inc
sub
loop
mov
inc
jmp
mov
sub
pushf
pop
jb
mov
leave
jmp
(bad)
(bad)
fisttp
mov
push
adc
dec
cwde
(bad)
stc
or
jp
cmc
jl
cs
ss
icebp
(bad)
(bad)
jmp
mov
mov
pusha
jmp
inc
ja
stc
aas
arpl
das
jle
jmp
call
mov
mov
cmp
mov
cs
pop
movs
dec
or
add
mov
stc
push
mov
(bad)
jg
jmp
push
fsubr
movs
push
mov
repnz
sub
add
ja
shl
and
pop
mov
mov
or
inc
data16
and
js
or
hlt
popf
clc
aad
cmp
daa
xor
jmp
enter
je
inc
sbb
std
test
popf
cmps
popf
xlat
(bad)
(bad)
(bad)
jmp
mov
jl
or
int
sahf
(bad)
out
pop
dec
xchg
lea
dec
dec
fdivr
sbb
or
je
inc
dec
outs
nop
out
sbb
dec
mul
sbb
test
nop
cli
pop
dec
adc
lods
adc
test
inc
xchg
sub
lods
test
(bad)
(bad)
inc
push
call
rol
jge
mov
and
sub
jnp
push
int3
jae
jne
(bad)
inc
ins
add
xchg
and
sub
mov
sbb
mov
mov
sbb
int3
in
pop
nop
or
test
inc
das
(bad)
xchg
pop
pop
adc
mov
pop
mov
ret
sub
data16
neg
cmp
mov
sub
jge
mov
(bad)
(bad)
(bad)
jge
enter
jge
mov
rcl
add
add
and
retf
or
cmp
xor
(bad)
in
call
sub
mov
shl
aaa
(bad)
mov
js
(bad)
jg
pop
xchg
jnp
inc
(bad)
mov
mov
cld
out
inc
or
jecxz
and
mov
jl
sti
fdivp
jns
or
call
cmps
mov
sbb
ret
(bad)
sbb
mov
push
call
call
js
aad
int3
mov
cmps
(bad)
(bad)
fcomip
dec
sub
xor
mov
cmp
mov
push
arpl
shr
js
jl
xchg
or
dec
std
mov
jmp
lahf
stos
mov
add
fisub
or
jg
dec
mov
out
out
cmp
fwait
ins
jecxz
mov
aaa
dec
xor
cli
mov
(bad)
(bad)
(bad)
jnp
jo
xor
repz
xor
pop
cmp
out
sub
push
out
ret
push
fmul
iret
or
mov
(bad)
retf
mov
or
iret
call
add
mov
mov
push
sbb
mov
ja
sahf
int
dec
xor
or
data16
loop
cli
mov
or
iret
xor
mov
data16
xor
(bad)
cmovle
pop
or
sub
mov
es
retf
pop
jae
(bad)
(bad)
(bad)
push
ret
sub
test
pushf
sbb
push
mov
(bad)
in
dec
adc
pusha
dec
outs
neg
mov
les
jmp
(bad)
rcl
(bad)
push
std
jecxz
dec
add
add
out
inc
dec
dec
fldcw
sbb
stos
dec
push
jle
or
mov
daa
sahf
xor
into
loop
and
jmp
jmp
pop
loopne
mov
out
push
icebp
loopne
ja
loope
mov
imul
(bad)
(bad)
call
push
sahf
push
daa
fiadd
mov
sbb
cmps
jecxz
popa
ret
jo
in
xor
sub
call
dec
int3
sbb
dec
stos
inc
mov
fisttp
pop
loopne
push
or
inc
xor
push
mov
mov
ret
cmps
and
push
inc
gs
inc
pop
sub
pop
xchg
cmp
or
addr16
push
cli
rcr
sti
retf
xchg
or
call
jae
pop
jns
sub
cmc
mov
lods
int
xchg
cmp
(bad)
jnp
in
jo
mov
sub
sub
loop
ja
fisttp
js
xchg
arpl
jno
aaa
inc
cld
lods
jecxz
fdivp
cs
xchg
(bad)
dec
dec
sub
ret
retf
out
jp
pop
sti
and
(bad)
(bad)
push
clc
lds
pop
cmp
loopne
in
cmp
lods
test
icebp
sub
daa
arpl
(bad)
(bad)
call
jns
inc
arpl
inc
outs
adc
push
lds
cmp
sti
push
add
push
lahf
mov
(bad)
shr
pushf
(bad)
(bad)
(bad)
(bad)
ds
push
push
push
mov
aaa
lahf
call
jnp
clc
js
repz
(bad)
push
dec
mov
mov
push
inc
push
sbb
mov
adc
mov
les
inc
xchg
popa
inc
das
imul
(bad)
ficom
(bad)
mov
add
mov
jle
dec
pop
cld
stos
sti
in
and
xor
data16
or
mov
les
(bad)
(bad)
jg
sub
mov
das
push
mov
push
push
adc
lock
int
dec
xchg
mov
(bad)
(bad)
jmp
fimul
cmp
and
addr16
inc
dec
sbb
adc
test
mov
push
add
adc
rcr
jmp
out
out
call
and
jno
mov
mov
fdiv
(bad)
in
into
enter
(bad)
(bad)
or
(bad)
jg
cld
loope
xor
xlat
(bad)
hlt
(bad)
call
ins
xor
pop
xor
(bad)
(bad)
dec
aaa
call
xchg
push
int
outs
dec
add
jp
loopne
xchg
push
add
add
mov
add
cli
fs
mov
pop
inc
scas
mov
inc
inc
or
cli
fisub
cmp
adc
dec
jp
xor
or
(bad)
add
cwde
sbb
(bad)
call
jl
dec
adc
scas
in
xchg
add
mov
and
into
dec
xchg
ds
(bad)
(bad)
call
add
push
test
push
and
out
int
call
mov
(bad)
jmp
mov
sub
sahf
sub
popf
xlat
push
fcom
push
jbe
(bad)
(bad)
(bad)
jmp
popf
dec
leave
mov
ror
inc
push
out
test
mov
fstp
adc
sbb
(bad)
(bad)
call
test
sbb
dec
mov
lahf
scas
pop
xchg
push
int3
mov
xlat
mov
dec
outs
sub
mov
xor
test
inc
imul
xor
test
icebp
dec
popa
inc
jo
(bad)
js
mov
pop
push
mov
ret
xchg
in
and
xchg
clc
fnstcw
sar
test
mov
mov
fild
mov
xor
push
push
or
rcl
aas
(bad)
jecxz
icebp
jmp
mov
lds
adc
mov
fcom
(bad)
jmp
mov
add
cmp
push
lea
adc
(bad)
call
(bad)
sbb
xchg
cmc
adc
loope
push
js
xchg
mov
sub
sbb
clc
inc
push
iret
xor
cmp
push
mov
mov
adc
cmps
sbb
inc
xchg
pop
xor
icebp
(bad)
jmp
cs
outs
sub
test
or
pop
xor
push
add
jmp
inc
sbb
jnp
jb
sbb
cwde
cmp
enter
dec
and
(bad)
(bad)
(bad)
inc
and
xchg
lea
repz
and
gs
add
mov
mov
mov
pop
(bad)
fcmovu
and
scas
sbb
fwait
fs
adc
inc
pop
nop
(bad)
(bad)
(bad)
push
fild
cmp
mov
fcmovbe
stc
js
xchg
or
pusha
es
and
xchg
mov
cmc
mov
jg
jbe
sub
pop
pop
jge
pop
adc
out
adc
inc
cld
add
push
xchg
and
lock
movs
adc
sbb
idiv
call
aam
loop
neg
inc
clc
push
rol
(bad)
cmp
jnp
dec
jne
fidiv
cmp
xchg
iret
retf
mov
inc
cmp
retf
cmc
into
push
and
(bad)
in
dec
jp
push
pop
inc
mov
mov
sbb
repz
(bad)
(bad)
(bad)
cmp
ret
fcmovnu
cli
es
jle
jle
(bad)
in
mov
shr
xor
cdq
xor
loope
add
jmp
das
add
mov
dec
adc
sub
in
add
pop
inc
dec
dec
sub
jb
mov
(bad)
jmp
ds
adc
mov
sub
jmp
(bad)
in
xor
push
mov
movs
imul
repz
(bad)
jnp
adc
add
jl
(bad)
jmp
inc
sub
lods
call
or
arpl
jge
(bad)
(bad)
push
jmp
jb
push
cmp
(bad)
lea
jg
fidivr
icebp
push
pop
jl
push
add
call
repnz
cdq
jae
(bad)
xchg
enter
dec
stc
mov
jl
mov
clc
hlt
addr16
lods
arpl
sti
outs
push
pop
rcl
(bad)
(bad)
call
dec
daa
loope
daa
dec
jecxz
cmps
add
xchg
mov
(bad)
(bad)
(bad)
mov
movs
(bad)
push
mov
loop
adc
or
lahf
fist
xor
cmp
call
mov
test
sbb
adc
hlt
in
test
scas
push
fwait
int3
mov
mov
ret
out
mov
inc
aas
popf
mov
and
call
push
test
adc
leave
pop
sub
xchg
fnsave
data16
inc
cmp
call
imul
outs
pop
outs
(bad)
dec
repnz
test
push
psubusw
mov
pop
les
pop
pushf
push
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
xor
out
or
mov
shl
movs
xchg
and
adc
adc
push
mov
sub
xor
pop
hlt
push
pushf
cmp
adc
(bad)
call
mov
and
cmp
shl
cmp
mov
(bad)
(bad)
(bad)
out
jp
inc
mov
lods
jb
je
rol
mov
push
out
(bad)
and
ja
(bad)
shl
jmp
dec
scas
clc
(bad)
jmp
xchg
xchg
gs
push
mov
mov
mov
shr
(bad)
(bad)
dec
jbe
or
mov
mov
add
or
push
dec
je
in
mov
pop
cli
test
pusha
data16
or
(bad)
call
inc
addr16
rol
dec
test
jmp
out
popf
js
mov
lock
jecxz
dec
(bad)
cmp
cmps
ja
xchg
jnp
shl
in
jne
inc
(bad)
mov
or
adc
(bad)
(bad)
call
cmp
mov
test
out
jb
enter
xor
sbb
(bad)
data16
adc
mov
mov
xchg
hlt
out
lahf
or
ja
cmp
push
sub
xor
sbb
stc
mov
cmp
push
adc
aad
test
call
xor
lods
scas
repz
(bad)
push
or
mov
mov
or
jp
call
inc
add
daa
pop
aaa
(bad)
retf
mov
inc
(bad)
call
sub
sbb
fnstsw
(bad)
(bad)
call
xor
jl
adc
or
jmp
adc
cmp
(bad)
(bad)
(bad)
call
xchg
xor
push
push
in
jae
pop
iret
mov
packsswb
sub
inc
add
cmp
(bad)
jg
push
arpl
xchg
nop
fbstp
push
lods
ds
cmp
ja
adc
xchg
nop
ins
mov
jp
popf
dec
retf
nop
loop
aas
mov
mov
fisttp
les
hlt
into
data16
les
(bad)
jmp
lea
sbb
dec
(bad)
ds
(bad)
(bad)
(bad)
mov
push
fistp
iret
jb
jns
ret
dec
pop
sbb
xor
addr16
xor
ja
(bad)
(bad)
sti
fwait
dec
xchg
repz
lods
pop
lock
mov
shl
(bad)
(bad)
(bad)
call
ss
ins
xor
xchg
in
nop
out
sub
and
leave
jmp
mov
and
(bad)
(bad)
(bad)
jmp
push
in
pop
cmc
mov
repnz
dec
in
std
pop
std
shl
icebp
maxps
sbb
(bad)
(bad)
(bad)
inc
and
outs
inc
lods
cmp
dec
cmps
adc
pop
nop
retf
daa
cmc
mov
mov
mov
mov
cmps
dec
dec
(bad)
popa
mov
xchg
sbb
dec
das
lahf
jnp
cmps
fcomip
gs
fs
jmp
loop
mov
cwde
mov
push
test
pop
aaa
fwait
in
fisub
xchg
mov
sub
out
pusha
mov
cmps
(bad)
(bad)
(bad)
jmp
popa
call
cwde
push
ins
push
(bad)
push
out
ret
test
hlt
push
sub
add
(bad)
dec
out
js
pop
cld
xor
cld
(bad)
jg
(bad)
cld
pop
push
lock
addr16
sti
jle
jbe
data16
jne
jmp
cli
pop
scas
sub
ret
clc
test
pop
test
fcom
in
(bad)
(bad)
call
imul
xchg
rcr
mov
outs
mov
xor
loope
adc
adc
fcmovnb
jmp
aas
loopne
jg
leave
loope
mov
std
dec
xor
(bad)
sub
daa
mov
push
lods
sbb
out
(bad)
in
sub
mov
push
cmps
sbb
ss
(bad)
(bad)
mov
fimul
pusha
mov
sub
in
ffree
ds
popa
jb
(bad)
(bad)
dec
pop
out
mov
lahf
mov
mov
das
pop
inc
inc
sbb
mov
push
push
mov
mov
mov
(bad)
(bad)
jmp
fdiv
neg
add
mov
popf
and
jp
shr
and
add
pop
pop
stos
xchg
cmp
ins
bound
pop
mov
shr
hlt
pop
jns
cdq
adc
add
fist
adc
(bad)
jg
sub
mov
rol
mov
mov
mov
pop
sub
jmp
dec
and
cmp
and
adc
outs
(bad)
mov
push
(bad)
jo
sub
test
out
and
stos
cmps
retf
mov
call
nop
add
imul
xchg
popf
sub
(bad)
jmp
jl
and
dec
mov
pop
mov
xor
gs
call
mov
adc
fcmovbe
mov
retf
gs
sub
xchg
test
dec
shl
(bad)
(bad)
inc
jmp
and
js
leave
add
xor
mov
push
cmp
pop
dec
hlt
or
jmp
dec
mov
(bad)
(bad)
(bad)
(bad)
inc
pop
ja
jno
out
jle
sbb
lods
(bad)
xor
inc
mov
pop
std
mov
loop
daa
mov
sub
mov
(bad)
out
cli
and
jnp
ret
xor
popf
loop
jae
mov
mov
clc
(bad)
jl
add
sub
mov
(bad)
fdivrp
outs
cli
dec
cmps
cmc
pop
sbb
mov
and
arpl
sbb
ja
cmc
call
or
adc
es
aas
or
mov
(bad)
(bad)
(bad)
push
or
pop
ret
and
xchg
arpl
les
mov
dec
leave
loopne
inc
or
repnz
jb
xchg
inc
inc
jmp
js
stos
outs
and
dec
lea
mov
bound
retf
sbb
js
mov
sbb
cmp
add
or
(bad)
(bad)
call
adc
xchg
mov
ret
sbb
inc
inc
test
inc
popf
sbb
je
idiv
outs
(bad)
call
mov
sar
idiv
lods
pushf
retf
test
int
leave
ret
loop
fisttp
int3
pop
cmp
bound
popa
or
or
jno
aad
call
loopne
mov
(bad)
cmp
xchg
les
mov
push
mov
jle
dec
(bad)
mov
adc
jae
jge
and
xchg
sbb
cli
fild
(bad)
(bad)
bnd
lods
test
aad
push
js
(bad)
(bad)
jmp
pusha
dec
shl
lds
(bad)
pop
stc
mov
inc
shl
mov
add
or
pop
inc
or
mov
mov
jno
lods
pop
imul
out
in
mov
sbb
dec
pop
lahf
mov
cld
(bad)
(bad)
out
xor
adc
sub
mov
dec
gs
call
(bad)
call
jo
mov
cmps
and
jne
stos
in
xlat
sahf
pushf
lahf
jno
mov
out
loope
mov
loop
sbb
jb
cmps
pop
ret
jo
adc
daa
fiadd
sahf
clc
cli
scas
cmp
push
(bad)
call
mov
js
or
xchg
push
cld
gs
cmc
retf
aam
sub
cld
inc
sub
call
jns
xor
in
sub
retf
pop
rcl
jns
jl
mov
lea
and
hlt
and
test
enter
push
jmp
int
sar
pop
ret
mov
(bad)
inc
sti
mov
inc
xchg
sub
and
mov
jmp
xor
(bad)
out
loopne
rcr
fiadd
pop
dec
inc
sub
fs
retf
(bad)
(bad)
jmp
das
dec
add
xchg
fcmovnbe
pop
leave
js
and
xor
mov
add
in
mov
cld
push
mov
jl
inc
inc
cmc
adc
jmp
jg
(bad)
out
sahf
ret
pop
mov
pop
clc
jo
jb
jecxz
inc
mov
push
xchg
push
jg
inc
std
scas
sub
pop
jp
pop
mov
aaa
cli
adc
pop
jle
pop
fwait
loop
call
add
jecxz
sbb
nop
retf
add
retf
mov
cld
(bad)
sbb
mov
aam
pop
jmp
test
cld
or
cmp
iret
rol
loopne
add
add
fs
mov
out
lods
or
pop
jnp
or
sbb
imul
sbb
(bad)
(bad)
(bad)
std
lea
pop
lea
cmps
inc
shl
scas
push
adc
mov
movs
out
loop
stos
inc
clc
pop
and
sub
sub
retf
and
rcl
mov
fstp
test
inc
out
retf
popa
bound
imul
xchg
in
xor
(bad)
jmp
xor
fldl2t
cmc
pop
add
pop
pop
sub
inc
or
and
jp
mov
push
adc
mov
adc
(bad)
inc
adc
cmp
dec
xor
or
loope
xchg
or
fs
mov
mov
push
sahf
sub
mov
mov
(bad)
(bad)
(bad)
dec
mov
out
outs
mov
out
lahf
ret
(bad)
(bad)
xchg
(bad)
js
sbb
into
pop
jmp
and
push
inc
daa
push
(bad)
out
ret
xchg
mov
(bad)
(bad)
push
fwait
sbb
movs
mov
inc
sub
cmps
scas
loop
sbb
jo
xchg
adc
scas
bound
(bad)
dec
test
dec
and
add
shl
retf
sub
(bad)
pusha
retf
(bad)
(bad)
jg
mov
push
imul
enter
scas
call
jne
pop
std
(bad)
call
mov
sbb
pop
in
retf
xchg
dec
fs
fisub
(bad)
(bad)
(bad)
jmp
out
fbstp
mov
je
mov
or
pop
sub
jnp
mov
mov
(bad)
stc
jb
out
ror
xchg
mov
cli
and
xchg
std
(bad)
(bad)
inc
ficomp
cmps
into
outs
sub
dec
add
xchg
xor
inc
jmp
or
pusha
dec
pop
clc
ja
push
push
out
dec
or
je
(bad)
(bad)
(bad)
dec
push
mov
cwde
retf
out
hlt
sbb
push
test
inc
sub
jmp
iret
push
and
sub
fidivr
xlat
fidivr
lods
repnz
call
call
xchg
mov
xor
push
mov
xchg
mov
dec
dec
(bad)
cwde
aam
mov
cwde
nop
inc
xor
add
lea
add
sti
mov
pop
mov
jmp
xchg
mov
mov
xchg
(bad)
mov
jo
mov
mov
enter
and
xor
in
(bad)
mov
add
jmp
mov
repz
test
pop
out
adc
xor
jns
pop
dec
clc
retf
sbb
imul
(bad)
(bad)
(bad)
jmp
push
(bad)
or
mov
cmp
stos
jmp
lods
int
cld
shl
push
adc
(bad)
call
push
loope
fcomi
retf
das
jge
push
push
jno
popf
sahf
sbb
aad
cmps
jns
inc
pop
out
movs
scas
out
mov
scas
inc
mov
outs
cli
inc
cli
(bad)
(bad)
cld
ret
jmp
sub
das
popf
inc
and
mov
mov
(bad)
(bad)
dec
mov
push
mov
pop
inc
test
xor
std
push
addr16
pusha
jne
dec
adc
or
adc
mov
movs
add
dec
dec
arpl
(bad)
dec
shl
stos
pop
cmp
jb
push
fcmovnb
and
dec
push
(bad)
(bad)
mov
xchg
and
mov
xor
lds
std
leave
addr16
inc
fild
dec
(bad)
(bad)
(bad)
call
je
sub
inc
xor
(bad)
call
jae
lods
mov
jnp
not
add
clc
call
mov
fdiv
scas
mov
(bad)
dec
lods
sbb
mov
sahf
jl
outs
or
es
and
mov
adc
(bad)
(bad)
call
enter
leave
cs
fimul
cmps
repz
nop
lds
sub
enter
aaa
add
inc
arpl
and
nop
aad
(bad)
(bad)
push
cwde
mov
repz
sub
inc
dec
pushf
jb
mov
mov
dec
retf
add
cld
push
mov
sub
ret
mov
cli
xchg
jmp
lds
mov
fst
js
lods
cmp
add
mov
and
loop
rcl
xor
outs
sbb
and
sbb
arpl
jae
or
sub
mov
xor
push
push
pop
mov
ret
mov
sub
(bad)
scas
and
jg
sub
(bad)
in
cmp
inc
push
sbb
adc
push
jmp
call
adc
addr16
adc
mov
inc
stos
mov
jmp
(bad)
(bad)
call
data16
les
not
mov
or
aaa
cli
jae
clc
jp
cmp
outs
fucomip
fisttp
inc
pop
xchg
icebp
jge
pop
inc
jecxz
sub
stos
add
stc
dec
pop
ret
jg
sar
cmp
xchg
fdivr
mov
sub
movs
cmp
and
mov
(bad)
jg
lea
or
test
lods
movs
out
out
mov
fld
add
inc
ret
xchg
and
mov
(bad)
jg
mov
call
push
test
dec
jg
fcom
dec
repnz
std
inc
neg
call
adc
(bad)
(bad)
jmp
sbb
bound
mov
mov
stos
(bad)
mov
ret
or
shr
adc
sahf
mov
xchg
jecxz
ret
and
dec
dec
adc
add
inc
dec
sar
jno
or
push
out
push
dec
in
xchg
cmp
sbb
push
cmp
push
lds
retf
ins
bound
pop
inc
hlt
xchg
and
dec
sub
jmp
and
mov
out
adc
pushf
das
add
dec
retf
mov
cmc
bound
(bad)
(bad)
(bad)
inc
ret
ds
cmc
cs
ret
fcom
dec
dec
xchg
out
ret
pop
fstp
int3
in
xchg
loop
sti
adc
pop
add
cld
(bad)
(bad)
(bad)
mov
ja
arpl
mov
hlt
xchg
pop
xor
push
sbb
scas
jecxz
dec
pusha
xchg
or
call
call
jae
pop
push
sub
lods
je
adc
adc
(bad)
mov
(bad)
out
bound
int3
outs
div
fcom
and
cmc
int
fs
(bad)
(bad)
out
sub
fadd
push
sub
test
ins
sub
rol
or
(bad)
inc
ins
popa
inc
mov
iret
xor
pop
(bad)
es
aas
inc
enter
sub
inc
mov
sub
pop
inc
pop
xchg
mov
es
jne
sbb
(bad)
(bad)
(bad)
jmp
inc
je
scas
mov
mov
out
mov
ins
inc
es
push
fnstcw
mov
(bad)
in
call
lea
call
push
mov
mov
arpl
push
cmp
jl
outs
mov
call
jg
ror
(bad)
cmc
mov
mov
retf
out
sbb
pop
xor
jle
imul
(bad)
push
jecxz
movs
popf
inc
dec
mov
inc
pop
mov
cmp
xor
loop
push
out
adc
mul
dec
out
and
aad
xchg
lahf
adc
(bad)
mov
rcl
shl
bound
cmps
(bad)
call
(bad)
loop
cld
sub
(bad)
sti
xor
jl
fsubp
mul
or
(bad)
call
or
repz
inc
sbb
div
mov
(bad)
aas
icebp
mov
fdivp
mov
shr
jne
xchg
xlat
fild
add
push
or
les
(bad)
jl
xchg
(bad)
lds
inc
cmps
cmps
std
and
je
cdq
mov
lea
(bad)
push
shl
xchg
iret
movs
shl
cmp
add
add
mov
inc
and
in
pop
xchg
(bad)
mov
repz
popf
mov
sar
and
add
ficom
(bad)
fst
xor
push
mov
rcr
mov
pop
iret
cmp
or
inc
(bad)
jmp
cmp
fsub
lea
in
loopne
out
aaa
retf
mov
jecxz
fimul
repnz
fistp
cli
inc
mov
or
mov
sub
sti
ja
imul
(bad)
(bad)
dec
in
es
xchg
mov
jge
mov
outs
or
(bad)
sar
(bad)
(bad)
cmp
dec
outs
dec
mov
retf
or
cmp
pop
jnp
sub
cmps
sub
and
(bad)
(bad)
call
sub
sub
test
aad
cmp
jecxz
push
and
(bad)
dec
mov
dec
pusha
mov
cmps
adc
jmp
js
icebp
sar
retf
(bad)
(bad)
(bad)
dec
mov
pop
or
xlat
loop
popf
mov
sub
retf
pop
jne
pop
(bad)
loopne
daa
jno
int
fdivr
(bad)
pushf
rcr
(bad)
call
mov
stos
xchg
or
xchg
loop
data16
aad
pop
sub
push
clc
mov
(bad)
(bad)
(bad)
inc
in
test
stos
dec
push
pop
add
push
sub
test
adc
cmp
jecxz
jb
leave
jp
jmp
sahf
inc
cmp
das
mov
cmp
push
inc
dec
sub
mov
pusha
rcr
imul
mov
mov
call
fcomip
stos
(bad)
and
(bad)
sub
dec
mov
das
mul
and
(bad)
(bad)
jmp
mov
retf
pop
mov
ret
mov
xchg
rcr
xor
cld
jae
mov
push
sar
aad
inc
fnstenv
sub
in
xor
cwde
les
xchg
lods
dec
or
(bad)
dec
lds
test
mov
and
jo
mov
mov
push
dec
hlt
(bad)
call
lahf
mov
push
mov
cmp
xor
aaa
std
and
(bad)
inc
(bad)
sahf
mov
fadd
xor
out
arpl
xor
(bad)
(bad)
(bad)
call
push
jae
xchg
push
pushf
test
or
les
mov
fadd
xchg
and
repnz
dec
(bad)
(bad)
(bad)
jmp
sbb
add
adc
lods
mov
add
lds
outs
sub
cli
(bad)
(bad)
(bad)
inc
jecxz
or
inc
jmp
into
jne
add
cmp
stos
jo
sub
call
jmp
pop
sbb
mov
imul
int
mov
(bad)
(bad)
dec
bound
sar
dec
leave
repnz
mov
push
(bad)
jmp
xchg
jle
add
jp
pusha
cld
aas
inc
cmp
shl
movs
int
cld
pop
shr
jle
sub
jmp
pop
adc
cli
fiadd
push
mov
repz
fwait
jns
xchg
icebp
mov
mov
push
cld
call
inc
bound
mov
push
(bad)
jle
adc
and
(bad)
call
or
shl
sahf
lods
das
cdq
mov
xor
movs
rcr
clc
(bad)
and
std
and
sar
push
shl
jno
jbe
dec
xchg
popa
scas
xchg
(bad)
(bad)
call
aaa
push
and
sbb
sbb
call
and
inc
std
mov
arpl
out
jo
outs
or
mov
into
mov
(bad)
fstp
add
icebp
(bad)
(bad)
lahf
inc
je
dec
cld
loope
push
pop
sub
sbb
dec
inc
xchg
into
out
adc
push
jno
xor
out
pop
rcl
shl
retf
jmp
ret
lods
call
retf
inc
pop
hlt
and
dec
cmps
inc
std
add
mov
bound
(bad)
(bad)
(bad)
jg
push
xchg
adc
cdq
lods
sbb
add
test
fstp
pop
mov
(bad)
(bad)
jmp
inc
inc
cld
sbb
dec
jno
sti
mov
rol
fcom
xchg
push
push
(bad)
(bad)
(bad)
mov
cmps
nop
popa
imul
mov
mov
sti
outs
adc
mov
test
(bad)
call
jge
call
dec
les
push
imul
cmp
and
xchg
dec
sbb
(bad)
jmp
pop
iret
imul
es
imul
dec
test
push
inc
and
cmps
dec
sbb
push
sahf
sbb
sub
bound
movs
pop
xchg
es
adc
cld
mov
and
frndint
jo
pop
cld
dec
mov
push
repnz
ins
cdq
iret
and
aaa
mov
push
popa
pop
and
(bad)
jmp
out
pop
push
jns
ins
in
mov
jnp
jp
icebp
out
sbb
pusha
sub
or
shl
mov
scas
imul
ja
dec
jge
(bad)
aas
jg
(bad)
(bad)
(bad)
jmp
jne
pushf
fdiv
mov
jle
xchg
jg
out
popf
into
movs
mov
retf
fist
movs
cld
(bad)
(bad)
dec
pop
jne
sub
cmp
jle
xor
add
repz
pop
sub
(bad)
jg
add
mov
inc
add
idiv
inc
lds
and
fs
cmp
sbb
(bad)
(bad)
(bad)
cmp
jns
pop
jne
or
int
loope
ins
data16
xchg
and
ss
mov
in
test
(bad)
jg
push
push
cmc
xchg
cmp
cmp
sub
cmp
pop
test
sub
clc
fwait
add
pop
loop
push
push
leave
in
fimul
mov
push
mov
stc
or
ja
cmp
mov
cdq
or
adc
pop
adc
into
(bad)
(bad)
(bad)
push
and
push
mov
inc
fsubr
aaa
pop
sub
cmp
inc
or
cmps
into
cli
mov
jg
(bad)
jmp
pop
xor
jnp
mov
cmovb
mov
(bad)
jmp
stos
or
inc
(bad)
sbb
ins
clc
shl
(bad)
movs
loop
gs
jmp
dec
and
jbe
cmp
or
(bad)
(bad)
call
mov
push
cli
pop
push
aam
call
cmp
scas
in
xor
shr
sbb
push
or
popf
aam
cmp
push
inc
(bad)
repnz
(bad)
mov
sbb
loopne
push
int3
push
mov
(bad)
xchg
(bad)
jle
or
xor
mov
and
(bad)
(bad)
(bad)
inc
out
sbb
loop
add
pop
mov
inc
es
retf
(bad)
arpl
fcomip
(bad)
push
cdq
ins
fcomi
call
ret
(bad)
dec
sar
inc
sub
mov
sbb
loopne
jl
jb
aam
xlat
or
fadd
push
cmps
icebp
jge
mov
mov
sub
ja
cli
(bad)
jnp
daa
dec
xchg
and
cmps
scas
inc
sbb
pushf
outs
cli
(bad)
(bad)
dec
push
sub
sbb
xor
or
shr
in
leave
adc
ins
mov
aam
inc
(bad)
adc
es
sti
aaa
push
sbb
pop
dec
and
dec
hlt
sub
mov
pushf
mov
sub
adc
jne
int3
iret
adc
mov
leave
push
push
movs
(bad)
(bad)
(bad)
inc
jle
and
icebp
out
out
inc
cmc
xchg
mov
push
dec
fidiv
call
(bad)
(bad)
cmp
cmp
clc
les
adc
aam
enter
xchg
or
xchg
mov
(bad)
jg
inc
loop
es
lock
fdiv
add
push
jbe
cdq
(bad)
push
sub
sub
xchg
pop
repnz
sbb
cmp
(bad)
xchg
push
sub
mov
push
(bad)
std
rol
cmps
jbe
and
and
dec
and
pop
(bad)
(bad)
jg
cmps
pop
sbb
sub
int3
xor
int
ret
inc
mul
push
inc
cmp
shl
std
shl
pusha
ror
shr
jmp
mov
outs
mov
adc
add
retf
push
test
lods
inc
sbb
arpl
outs
xchg
js
icebp
cmps
and
pop
lock
inc
adc
jne
(bad)
push
sbb
(bad)
(bad)
(bad)
jle
fnsave
rol
popf
fwait
pop
push
push
or
daa
sahf
cmp
push
adc
(bad)
(bad)
jg
add
imul
sub
mov
sub
sbb
lds
stos
(bad)
push
dec
and
in
xchg
pop
fcomp
pop
push
mov
and
into
inc
mov
add
jg
inc
cld
sub
les
(bad)
sahf
mov
movs
xchg
add
jmp
and
dec
cmp
enter
loop
clc
jmp
jg
cmc
out
fist
jne
sbb
jne
mov
and
cmp
cdq
and
xchg
push
pop
ret
fld
sub
jb
or
movs
dec
add
jmp
inc
enter
xchg
cmp
jle
mov
(bad)
fist
fadd
bound
cmp
mov
adc
sbb
(bad)
(bad)
jmp
(bad)
ins
or
cwde
fnsave
add
mov
pusha
or
shr
jno
cmps
test
retf
pop
(bad)
(bad)
(bad)
inc
mov
(bad)
outs
or
lods
and
xor
sub
push
ins
xlat
je
cli
push
sbb
aad
scas
ss
and
clc
(bad)
(bad)
jg
daa
mov
test
inc
cmc
les
in
out
sahf
mov
sub
in
push
dec
and
(bad)
jmp
jns
rol
dec
out
ja
(bad)
(bad)
call
les
mov
cmps
movs
(bad)
push
sbb
inc
mov
xor
nop
fcomip
(bad)
call
imul
movs
add
cmc
in
test
mov
xchg
adc
(bad)
(bad)
in
mov
pop
fidivr
into
stos
xchg
pop
jb
jne
cmp
sbb
arpl
mov
(bad)
mov
(bad)
inc
inc
es
xor
(bad)
scas
cmp
in
push
push
pusha
ss
retf
push
push
xchg
rcl
dec
out
aad
outs
push
adc
xor
cmp
cmp
and
xchg
inc
push
pop
mov
loopne
std
jg
clc
add
jp
pop
fcomp
xor
hlt
dec
movs
and
clc
stos
jbe
or
inc
icebp
push
pop
ins
std
(bad)
jmp
jmp
and
into
(bad)
sti
sahf
sbb
outs
jns
aaa
std
call
outs
pop
int
dec
retf
cdq
push
(bad)
and
pop
xlat
and
(bad)
(bad)
(bad)
dec
mov
dec
cmps
sti
mov
cmp
sti
hlt
cld
(bad)
scas
int
movs
pop
sub
call
mov
out
cmc
push
es
mov
scas
cmp
sar
aaa
ins
xor
or
gs
cmp
in
cmp
push
sahf
cmp
push
cmps
xchg
mov
jp
int
inc
leave
sub
(bad)
jmp
adc
outs
dec
arpl
sbb
sub
loopne
mov
adc
mov
fldz
scas
es
push
jae
push
hlt
dec
mov
mov
dec
lods
pop
adc
out
adc
out
xor
cmp
cmp
shr
mov
stos
cwde
loope
in
adc
cmp
(bad)
(bad)
mov
je
das
xchg
push
loopne
in
add
dec
cmc
pop
and
sub
push
aad
test
mov
fstp
xor
out
dec
(bad)
(bad)
and
pushf
inc
sub
push
cmps
(bad)
(bad)
(bad)
aas
jle
mov
movs
repnz
sub
dec
stc
jle
push
(bad)
call
pop
pushf
jb
sub
pop
pop
inc
xchg
xor
dec
xlat
or
(bad)
(bad)
call
dec
sbb
rcl
or
mov
rcr
add
mov
(bad)
(bad)
call
int3
xchg
in
cld
imul
mov
pop
pusha
dec
mov
xor
jmp
(bad)
call
mov
dec
or
sub
ror
xchg
cmps
and
pop
ror
cmp
(bad)
push
loop
arpl
or
push
xchg
or
imul
inc
les
pop
std
pop
stos
(bad)
push
push
into
lds
mov
(bad)
pop
test
push
mov
ja
and
retf
movs
jge
mov
pop
popf
dec
mov
(bad)
(bad)
push
push
cli
daa
jne
in
pop
mov
enter
in
fiadd
mov
stc
daa
loop
(bad)
dec
ja
jbe
(bad)
out
stos
(bad)
loope
pop
jg
aaa
sbb
mov
lea
loope
inc
jle
(bad)
imul
jle
lea
iret
lock
sbb
inc
push
cmp
retf
xor
xchg
mov
add
clc
ss
push
cwde
jb
out
loope
xchg
jnp
ret
(bad)
(bad)
(bad)
push
imul
adc
fldcw
inc
pop
mov
pop
and
shr
clc
push
(bad)
cmp
xchg
jno
(bad)
lods
jl
xchg
jnp
popf
xchg
jo
enter
adc
ficom
cli
(bad)
(bad)
dec
in
stc
mov
outs
push
repz
or
test
loopne
sbb
(bad)
in
retf
outs
mov
and
sub
leave
dec
push
adc
movs
loop
repnz
loopne
mov
lods
jmp
sar
imul
dec
dec
cmps
cmp
add
inc
push
add
xlat
das
scas
clc
mov
xchg
pop
add
push
(bad)
dec
lock
(bad)
dec
ins
jmp
pop
xchg
repz
movs
or
inc
dec
cmp
cwde
and
mov
mov
outs
mov
int
sbb
push
inc
or
pop
adc
ins
(bad)
(bad)
dec
xchg
int
dec
ror
fisubr
sbb
(bad)
repz
add
in
xchg
jl
popa
addr16
jno
inc
inc
xchg
adc
mov
xchg
mov
dec
cmp
dec
inc
cli
jns
push
into
lds
lahf
push
mov
outs
jmp
bound
dec
aas
ret
jmp
add
jmp
mov
lahf
xchg
mov
push
dec
shl
cwde
and
add
(bad)
cmp
cmc
inc
mov
push
cmp
ds
and
mov
aam
xor
(bad)
jmp
xchg
dec
xchg
(bad)
mov
mov
push
jl
lock
sub
mov
shr
cmp
jns
sub
sbb
cmp
pop
mov
pop
pop
pushf
jl
(bad)
(bad)
(bad)
jmp
jg
(bad)
cmps
pop
push
lea
(bad)
jmp
pop
fist
stc
lods
(bad)
idiv
bound
repnz
ins
xchg
in
cmp
sub
movs
inc
mov
push
pop
sbb
into
shr
mov
lea
pop
mov
push
jmp
(bad)
jmp
mov
out
jle
fwait
daa
sar
and
ret
add
jp
mov
loopne
pop
inc
add
mov
add
adc
out
mov
(bad)
(bad)
mov
jp
and
mov
sub
push
out
inc
(bad)
xlat
sbb
idiv
mov
and
lods
outs
enter
pushf
dec
call
mov
loop
into
ds
ss
fwait
jnp
cld
(bad)
jmp
(bad)
or
retf
das
jnp
push
cmp
mov
add
xchg
jge
fs
sbb
mov
mov
(bad)
(bad)
(bad)
mov
pop
pop
fmul
cmp
nop
mov
cmp
adc
jge
mov
(bad)
and
dec
(bad)
push
dec
test
daa
push
xor
add
jnp
ret
and
pushf
les
leave
loope
(bad)
sbb
cwde
test
push
mov
xchg
mov
mov
(bad)
jmp
inc
sti
xchg
aam
pusha
cmp
je
ror
dec
jnp
sub
pop
hlt
jmp
fdiv
xor
pop
jp
ficomp
jo
and
push
pop
mov
data16
call
xor
and
imul
pop
call
inc
cmp
adc
cli
xchg
sti
pop
std
addr16
call
push
repz
test
xchg
or
(bad)
jg
lock
dec
jns
xchg
mov
call
call
(bad)
jmp
(bad)
out
arpl
mov
push
out
mov
mov
scas
lock
(bad)
js
mul
and
cmp
cmp
lea
(bad)
(bad)
call
push
aas
mov
mov
outs
jmp
scas
fstp
pop
pop
cs
jge
inc
std
(bad)
push
test
test
mov
cmp
mov
mov
mov
push
push
lds
jg
loopne
jno
jo
cdq
gs
data16
es
in
out
test
aad
fucomi
aaa
inc
aam
test
dec
pop
sub
jo
and
(bad)
(bad)
(bad)
cld
rcl
jmp
(bad)
push
jno
call
push
aam
daa
adc
mov
es
cli
push
pop
fcomi
aaa
sbb
add
push
sahf
pushf
aad
(bad)
(bad)
(bad)
(bad)
mov
bound
scas
fs
fistp
jp
sub
leave
fldl2t
dec
xor
mov
repnz
lods
xchg
ret
pop
mov
xchg
xchg
in
cld
lods
mov
mov
and
mov
sub
stos
sub
mov
outs
ss
push
inc
sub
pop
pushf
(bad)
call
sbb
push
or
mov
aam
(bad)
(bad)
(bad)
jmp
movs
dec
xlat
mov
imul
movs
sub
cmps
cmp
popf
sbb
hlt
mov
retf
pop
pop
fs
std
fbld
fwait
icebp
sub
mov
pushf
je
sub
test
sbb
(bad)
(bad)
(bad)
push
sbb
cli
xlat
packsswb
stos
lods
push
sub
shl
data16
mov
cld
vandnpd
ss
js
cli
sbb
add
gs
jmp
fiadd
pop
aad
enter
rcr
jne
in
test
and
je
dec
dec
push
inc
shl
ss
jle
pop
inc
cli
call
mov
xchg
xor
pop
push
mov
push
call
pop
mov
jecxz
(bad)
out
mov
mov
mov
add
dec
in
cli
repnz
(bad)
jg
dec
xchg
jmp
fsubrp
test
and
shl
pop
leave
and
jmp
stos
jnp
shl
retf
movs
cmp
dec
(bad)
shl
(bad)
fdiv
pop
cmp
test
aad
movs
pushf
fs
in
fwait
fs
push
scas
pusha
icebp
lock
arpl
pushf
cdq
popf
jmp
(bad)
call
push
jmp
push
adc
lods
inc
(bad)
pop
pop
mov
(bad)
(bad)
mov
xchg
jl
mov
sahf
sbb
sbb
cmp
xchg
adc
movs
xor
cmc
(bad)
(bad)
jg
bound
sub
stc
mov
cmps
xchg
stos
mov
arpl
(bad)
js
fs
retf
gs
jns
inc
jle
push
push
pop
and
(bad)
shl
scas
es
adc
movs
sub
jecxz
cmp
sbb
pop
cmp
(bad)
xchg
aaa
test
(bad)
cmp
(bad)
cmps
jo
enter
adc
push
iret
cmp
jbe
in
jb
dec
inc
jecxz
pop
sbb
push
inc
test
push
sub
(bad)
(bad)
jmp
fidivr
loope
shl
call
push
imul
(bad)
(bad)
(bad)
jg
and
test
sbb
mov
inc
ret
sbb
ror
(bad)
mov
hlt
jg
pop
retf
pop
xchg
dec
aam
cmp
(bad)
(bad)
push
imul
lods
pop
shl
mov
push
cmp
(bad)
scas
push
enter
(bad)
mov
in
pop
adc
inc
sub
rcl
push
jmp
in
les
dec
loop
sub
sbb
sbb
dec
mov
call
and
pop
mov
sbb
or
sub
aam
stos
adc
loope
aam
(bad)
fld
mov
and
xor
sub
sahf
xlat
das
stos
ficom
shl
or
pop
cmps
or
or
pop
jg
or
imul
push
loopne
cmps
xchg
lock
pop
cmp
in
loopne
inc
addr16
(bad)
(bad)
mov
jae
push
push
daa
leave
sub
jmp
stc
(bad)
iret
aam
jne
retf
pop
(bad)
call
call
jmp
push
pushf
mov
xlat
outs
call
xchg
mov
in
mov
aad
pop
push
jge
movs
test
outs
lods
adc
xor
daa
shl
(bad)
mov
lods
shl
mov
ja
in
pop
shl
stos
adc
retf
(bad)
call
(bad)
hlt
sbb
jp
loop
sbb
xor
mov
xor
cs
mov
outs
add
scas
hlt
xchg
jns
mov
es
aad
jg
cmp
adc
mov
scas
mov
sbb
call
or
cmp
movs
jge
dec
hlt
push
outs
clc
push
pop
es
mov
dec
and
xchg
add
adc
fnsave
and
dec
fimul
jmp
pop
sub
sbb
sbb
push
push
rcr
jmp
hlt
std
bound
mov
xchg
adc
push
cli
bound
or
stos
xchg
or
call
(bad)
int3
xor
inc
lahf
cmp
clc
pop
ins
mov
std
and
(bad)
jmp
shl
in
retf
and
mov
mov
out
mov
call
imul
ret
jp
pop
(bad)
call
(bad)
xchg
nop
adc
(bad)
xor
in
push
jo
jbe
rol
sbb
lahf
mov
sar
(bad)
(bad)
dec
cli
and
aam
push
dec
add
inc
dec
lods
sub
jns
ds
mov
push
jnp
ins
ret
in
(bad)
(bad)
(bad)
push
shr
stos
outs
ret
cmp
(bad)
jp
lock
mov
mov
(bad)
(bad)
(bad)
push
mov
jnp
jnp
js
(bad)
in
push
mov
daa
iret
cmp
xchg
mov
mov
fdivr
(bad)
(bad)
call
test
jbe
cmp
sti
shl
cdq
ss
out
jge
dec
jmp
sub
call
xchg
(bad)
(bad)
dec
mov
push
enter
(bad)
mov
stos
jle
movs
pop
push
out
ret
(bad)
(bad)
push
fdiv
add
and
daa
cvtpi2ps
cmp
mov
ja
(bad)
call
mov
test
mov
push
dec
or
test
gs
out
lock
es
aaa
cld
jmp
jmp
in
pop
icebp
imul
shl
inc
std
(bad)
(bad)
fisttp
jge
jne
pop
lods
fsubr
rcr
jp
fs
push
pop
(bad)
(bad)
push
mov
xchg
cmp
popf
sbb
sahf
xchg
cmp
js
mov
lock
fmul
mov
mov
xchg
rcr
(bad)
cmp
mov
jmp
cli
fistp
dec
or
sbb
cmp
xor
call
inc
loopne
sahf
aas
(bad)
(bad)
dec
sub
mov
fwait
mov
xor
xor
arpl
push
leave
(bad)
(bad)
(bad)
call
adc
xor
inc
je
icebp
inc
pop
sbb
xor
mov
or
mov
into
mov
jl
pop
std
(bad)
jmp
mov
push
sbb
dec
xor
adc
jge
hlt
dec
dec
mov
(bad)
fld
int3
in
fadd
xor
jg
push
mov
inc
sti
jns
shl
pushf
dec
(bad)
(bad)
(bad)
call
mov
xlat
repz
retf
les
or
xchg
and
popa
retf
jl
(bad)
(bad)
(bad)
(bad)
jp
inc
and
push
rcl
shl
cli
push
cmp
js
xchg
and
push
(bad)
and
cmps
cmp
pop
fdivrp
push
cld
out
(bad)
(bad)
jmp
(bad)
lahf
cmp
inc
sti
clc
retf
cmc
sub
out
adc
(bad)
jmp
mov
rol
bound
js
pop
sbb
div
loope
lock
cli
inc
pop
pop
xchg
enter
add
(bad)
call
scas
xchg
retf
pusha
js
pop
gs
mov
iret
enter
fcomp
mov
lds
pop
and
int
fisubr
pusha
js
pusha
clc
(bad)
(bad)
call
mov
xchg
cs
arpl
dec
mov
ss
idiv
jmp
mov
and
mov
cwde
jle
jb
mov
dec
inc
shr
adc
int
xchg
xchg
in
imul
inc
sbb
clc
or
in
or
call
inc
pop
int
fstp
je
int
iret
inc
int3
fdiv
inc
jmp
ins
std
sbb
and
sbb
jl
jbe
push
adc
inc
cdq
shl
test
pop
test
mov
shl
cli
xchg
fsubr
in
clc
and
outs
pop
loop
mov
clc
mov
push
jbe
or
retf
xchg
cmp
and
aas
cwde
(bad)
dec
cli
sbb
inc
mov
sbb
(bad)
jmp
or
mov
dec
xor
xchg
dec
int3
dec
dec
mov
(bad)
inc
pop
aaa
(bad)
sar
mov
pop
jnp
aas
fdivr
jg
or
inc
sub
jge
push
ja
iret
fldenv
pushf
shl
hlt
das
cli
ja
ret
xor
test
add
(bad)
dec
aad
gs
and
test
mov
xchg
jecxz
fwait
push
loope
cmp
cld
scas
mov
pop
xchg
cmp
jmp
jg
outs
mov
mov
scas
fdivrp
ins
fistp
(bad)
(bad)
(bad)
call
xor
mov
xchg
adc
sbb
dec
lahf
mov
je
sub
(bad)
fnsave
mov
push
(bad)
in
pop
sbb
fdiv
(bad)
(bad)
(bad)
dec
mov
int
inc
jb
loop
in
adc
fwait
inc
stc
fsub
pushf
cwde
cmp
fcomp
(bad)
(bad)
dec
pop
dec
adc
movs
dec
je
jecxz
std
add
mov
xor
sbb
sbb
mul
loope
adc
mov
push
add
xchg
jns
xor
push
mov
jg
stos
out
jl
sbb
int3
arpl
into
jge
std
xor
jmp
xchg
push
dec
xlat
dec
in
pop
or
les
movs
jb
or
test
pop
test
mov
jns
sub
or
and
(bad)
in
pop
loopne
int
push
push
push
pop
out
xchg
je
and
jg
dec
and
in
ja
add
adc
fcmovbe
lea
or
(bad)
(bad)
(bad)
jmp
jns
in
add
pop
sub
mov
jns
sub
pop
(bad)
jg
dec
pop
pushf
nop
fs
xor
int
jne
rol
retf
(bad)
mov
dec
(bad)
(bad)
inc
imul
pop
xor
je
call
pop
or
jbe
xchg
popf
cmp
daa
cmps
adc
pop
mov
inc
mov
into
lods
adc
fbld
das
sar
push
cwde
rol
adc
(bad)
mov
daa
icebp
jmp
sub
pop
pop
xchg
pop
xchg
pusha
es
test
cmp
xchg
jns
pushf
(bad)
(bad)
jg
mov
aam
xchg
xchg
fs
adc
xor
out
pop
push
fwait
and
pop
cdq
jmp
mov
movs
pop
nop
inc
add
mov
pop
mov
jno
les
fcmovbe
ret
clc
mov
icebp
call
adc
xchg
fild
pop
aas
xchg
xor
(bad)
call
sub
jns
fdivp
cmp
mov
inc
xor
(bad)
(bad)
inc
sahf
sbb
inc
sub
mov
inc
adc
into
sbb
loopne
pop
xchg
mov
loopne
test
bound
into
aas
ret
mov
inc
aam
hlt
mov
xchg
dec
daa
push
sbb
imul
into
cmp
movs
(bad)
jg
push
repz
or
sbb
mov
out
ret
or
inc
mov
xchg
imul
scas
push
xchg
dec
(bad)
(bad)
(bad)
push
test
ror
xor
outs
push
into
test
or
stos
sbb
inc
fwait
add
(bad)
(bad)
push
xchg
push
xchg
mov
jno
push
repz
inc
pop
ss
push
stos
push
inc
xor
into
stos
loop
and
mov
xchg
add
mov
xchg
jg
xchg
ret
pop
lods
mov
(bad)
mov
rcl
jo
out
xchg
ja
clc
sbb
sahf
adc
mov
iret
outs
jg
(bad)
push
(bad)
sub
cld
ret
(bad)
xchg
(bad)
(bad)
adc
gs
or
(bad)
jle
push
(bad)
(bad)
(bad)
jmp
arpl
push
imul
stc
les
fdiv
into
stc
jae
xor
mov
(bad)
(bad)
jmp
push
push
jne
sbb
icebp
(bad)
cmps
cmps
cld
cdq
mov
(bad)
(bad)
call
adc
cmp
es
je
into
das
sub
fisub
call
adc
sub
loop
(bad)
(bad)
mov
jle
movs
loope
xchg
fmul
xchg
sub
cs
and
add
jmp
dec
loopne
inc
mov
stos
fcmove
mov
cld
dec
ds
or
sub
(bad)
(bad)
jg
push
push
clc
fidivr
pop
shl
xor
test
in
jno
in
jg
(bad)
call
xor
cmp
add
popf
jp
bound
push
cmp
lock
adc
cdq
mov
mov
jb
xor
push
movs
(bad)
fldenv
xchg
inc
mov
out
(bad)
(bad)
call
sub
fmul
int3
xor
mov
mov
inc
sbb
call
pop
sbb
gs
push
add
cmps
push
jl
jmp
jg
sbb
xchg
sub
mov
dec
push
leave
add
(bad)
push
push
xor
lods
mov
adc
(bad)
dec
adc
pusha
push
xchg
pop
shr
mov
fdivrp
cld
xlat
and
and
inc
push
add
push
daa
cmc
inc
(bad)
(bad)
pop
ret
js
xchg
adc
push
add
mov
and
loop
and
(bad)
(bad)
call
nop
jmp
push
lds
(bad)
pop
rcl
add
loop
mov
mov
(bad)
call
imul
aad
and
int3
pusha
in
in
leave
mov
(bad)
jmp
or
add
sbb
mov
cmp
in
in
gs
(bad)
(bad)
push
dec
jle
xchg
loopne
sub
es
arpl
ja
jns
and
xor
ror
clc
(bad)
call
stos
sahf
add
fst
rcr
cmp
cld
fcmove
jp
mov
add
out
add
mov
pop
lods
mov
ja
dec
xor
inc
je
ins
xor
push
sbb
(bad)
jmp
(bad)
shl
fldenv
push
sub
dec
push
dec
adc
cmps
cld
scas
call
(bad)
mov
loope
mul
loope
sub
and
loope
pop
(bad)
addr16
xchg
repnz
inc
jnp
jecxz
cmp
fsubrp
jmp
outs
(bad)
mov
xchg
xchg
xchg
fs
dec
xor
std
outs
cmp
rcr
cmp
rcl
clc
(bad)
dec
in
or
xor
jae
jge
lea
idiv
mov
sub
sbb
cmp
scas
loopne
dec
push
cmp
xchg
js
aad
inc
adc
cld
sub
sbb
pop
aam
(bad)
push
adc
rcr
retf
sbb
sub
clc
pop
dec
jmp
gs
aad
fst
and
push
bound
jae
(bad)
jmp
call
rcl
repnz
outs
addr16
int3
pop
lea
jg
jb
cmp
hlt
and
popf
fidiv
add
stc
sub
out
cli
jmp
scas
outs
stos
push
xor
imul
pusha
loope
or
dec
push
(bad)
(bad)
inc
pop
inc
push
mov
xchg
test
pop
sub
sbb
call
(bad)
(bad)
in
movs
mov
pop
scas
dec
shl
stos
jmp
(bad)
mov
push
dec
fbld
adc
sar
jae
sar
pop
stos
push
sbb
and
(bad)
(bad)
dec
cmps
xchg
pop
cdq
jge
xchg
xchg
add
(bad)
jmp
ins
pop
sbb
or
dec
(bad)
pop
pop
(bad)
(bad)
dec
es
jb
cmp
adc
dec
add
or
fsub
(bad)
(bad)
(bad)
dec
lahf
xchg
jge
data16
add
aad
xor
sbb
pop
movs
daa
pop
add
ds
ret
out
jb
sbb
(bad)
fld
repz
loope
push
fwait
xchg
mov
(bad)
(bad)
fdivr
xchg
or
ror
loope
std
jno
pop
cmc
inc
sub
mov
lock
(bad)
and
int3
call
adc
pop
push
daa
dec
popf
lds
fwait
and
jmp
test
hlt
add
push
cld
add
bound
(bad)
mov
in
mov
cmc
pop
ss
jo
pop
cmp
adc
aas
adc
add
in
(bad)
sbb
sbb
cmp
(bad)
mov
adc
loopne
daa
jbe
push
add
(bad)
(bad)
(bad)
cmp
and
jne
into
(bad)
fcom
inc
repz
xor
ficomp
(bad)
sub
add
dec
pop
test
mov
ficom
jo
daa
pop
in
cmc
in
mov
jbe
lods
cmp
sub
inc
mov
jnp
jnp
ds
pop
sub
pop
icebp
inc
pop
cs
inc
push
or
je
and
sub
cmps
pop
movs
(bad)
(bad)
call
in
inc
mov
int
je
inc
sbb
inc
xor
mov
jg
movs
jmp
or
test
dec
clc
loope
inc
shl
jns
sub
jg
ud0
cld
and
jae
dec
mov
dec
fcomp
dec
sub
frstor
push
enter
imul
(bad)
(bad)
(bad)
inc
fwait
scas
mov
(bad)
pop
adc
mov
push
test
fwait
or
ja
cli
push
inc
in
or
imul
mov
std
les
stc
push
(bad)
jmp
sbb
gs
pop
mov
pop
xor
xor
cmp
fs
mov
call
or
cmc
mov
outs
(bad)
fs
fnstcw
xor
xchg
mov
popa
sbb
(bad)
(bad)
cmp
lods
jge
rcl
or
mov
arpl
fistp
mov
and
mov
ret
sar
movs
sub
(bad)
push
sub
mov
mov
pop
sbb
aad
and
shr
bnd
mov
mov
outs
ss
lea
std
and
mov
fs
push
mov
dec
pop
pop
mov
mul
jno
jnp
ins
test
pushf
adc
sub
or
(bad)
out
jmp
int3
xchg
cdq
xor
dec
add
sbb
jne
pushf
inc
or
jnp
add
test
xor
push
inc
xchg
push
out
test
pop
das
clc
push
clc
inc
adc
jmp
fisttp
icebp
out
sbb
icebp
(bad)
(bad)
jg
in
inc
jae
retf
xor
add
mov
(bad)
call
cs
mov
mov
jl
dec
outs
push
xchg
xor
(bad)
inc
xchg
jmp
outs
repnz
sbb
rol
mov
dec
push
xchg
xlat
(bad)
pusha
cmp
(bad)
jmp
jno
adc
clc
mov
stos
lods
pop
pop
scas
cdq
repz
mov
dec
or
mov
dec
(bad)
(bad)
dec
sahf
ds
xacquire
dec
ins
and
xor
push
mov
pop
xor
add
pop
(bad)
fsub
mov
mov
adc
dec
jb
fwait
mov
mov
inc
cld
mov
xor
lods
(bad)
in
dec
cmp
jne
ret
cmps
inc
pop
pop
lock
xchg
xchg
cmp
leave
loope
(bad)
mov
sbb
adc
lahf
(bad)
popa
imul
(bad)
jmp
and
xchg
std
fcom
popa
data16
cmp
in
es
dec
cld
call
jnp
scas
je
mov
cmc
xor
in
call
movs
xor
stos
pop
xchg
xchg
(bad)
fwait
adc
inc
ret
dec
dec
int3
and
sbb
inc
clc
les
dec
lock
add
mov
daa
adc
cmp
sahf
sub
shl
inc
ss
aam
ret
and
push
adc
and
dec
inc
adc
jmp
add
push
adc
pushf
(bad)
jg
pusha
add
xor
dec
pop
push
outs
call
cld
jmp
leave
mov
mov
sub
and
mov
xor
xor
(bad)
(bad)
call
sti
sub
sbb
adc
cs
es
push
push
mov
mov
jne
sar
lods
call
xlat
fiadd
pushf
pop
add
bound
clc
out
mov
xchg
test
and
or
xchg
mov
popf
xchg
or
push
mov
dec
mov
fisubr
inc
mov
sbb
int3
push
cli
je
scas
scas
jge
xchg
(bad)
(bad)
push
sti
addr16
ss
fs
xor
or
xor
mov
sub
or
out
cs
adc
pop
inc
retf
xchg
cmps
sbb
xchg
sub
push
push
jl
and
and
aad
cli
pop
fcmovb
mov
loop
lahf
mov
push
in
mov
nop
sbb
loope
fs
aad
mov
call
loopne
lea
inc
jmp
(bad)
icebp
aam
sub
jmp
fs
ret
(bad)
call
jo
sbb
xor
sub
mov
jecxz
sbb
mov
pop
add
aaa
adc
add
sub
cli
pop
iret
lods
bound
cli
jg
xchg
stos
lock
dec
push
ret
(bad)
(bad)
dec
mov
lods
stos
mov
and
aaa
mov
shl
pusha
out
sti
in
dec
cld
cmp
call
or
test
outs
leave
call
cmp
sbb
pop
cmp
(bad)
jg
mov
ins
push
adc
neg
cli
(bad)
(bad)
mov
not
test
rol
sbb
mov
and
add
push
xor
sar
(bad)
(bad)
jg
fs
std
cmp
inc
fisub
add
mov
jnp
lods
push
ins
fmul
and
test
jmp
std
pop
data16
fsub
test
cdq
inc
popa
inc
xor
aam
xor
movs
mov
push
inc
ins
into
sahf
jno
(bad)
jg
dec
dec
or
inc
xor
dec
sub
or
xchg
cmp
xor
out
in
pop
push
popa
int
sbb
pop
popf
jge
push
pop
sbb
mov
mov
mov
sbb
mov
xor
stos
xlat
fbstp
jl
ret
cmps
(bad)
loopne
js
pop
cmp
pop
jle
outs
jns
outs
loope
pop
jge
pop
movs
idiv
mov
scas
sti
scas
pop
arpl
jecxz
mul
fidivr
test
fdiv
sbb
sbb
mov
ret
pop
fsub
xchg
pop
dec
ss
inc
dec
push
cli
dec
imul
stos
jmp
es
shr
(bad)
(bad)
jmp
cmc
push
push
repnz
in
inc
add
sbb
fwait
repnz
outs
repz
mov
pop
sbb
(bad)
call
push
jp
ffree
mov
addr16
in
sbb
addr16
icebp
mov
(bad)
jmp
in
sti
pop
and
fsubr
mov
fcmovb
jo
nop
pusha
(bad)
mov
cmc
mov
or
int3
mov
mov
push
dec
xchg
mov
dec
dec
inc
scas
push
add
cmp
loop
xor
daa
mov
push
sub
inc
xor
cdq
mov
xchg
mov
xchg
into
inc
stos
and
sahf
pop
add
scas
adc
jmp
and
cdq
dec
inc
adc
retf
fldenv
mov
mov
push
pop
jmp
cmp
jmp
or
xchg
sub
call
lods
ins
call
aam
cmp
(bad)
(bad)
pop
lock
hlt
adc
fisubr
pmaxub
and
xor
sub
adc
mov
shl
pop
jb
mov
ret
adc
out
xchg
or
inc
popa
mov
add
xchg
adc
in
mov
mov
je
cmp
out
jae
mov
std
(bad)
dec
jle
push
sahf
sub
and
neg
(bad)
call
sub
clc
xchg
add
and
add
repnz
inc
pushf
into
add
(bad)
inc
cld
xchg
(bad)
push
pop
fdivr
pop
pop
pop
std
test
jae
jle
inc
xor
(bad)
(bad)
(bad)
call
nop
jae
xlat
adc
mov
ins
jmp
sub
push
mov
mov
inc
xchg
jb
(bad)
(bad)
call
mov
cmps
loop
push
out
xchg
mov
sbb
rcr
or
cld
repnz
mov
popf
xchg
test
stc
jno
sub
adc
(bad)
(bad)
jg
push
(bad)
stc
lods
add
xchg
sub
les
sbb
push
hlt
imul
dec
pop
(bad)
(bad)
(bad)
push
shr
jle
jecxz
jg
xchg
sub
push
cmp
hlt
sbb
enter
xchg
in
sub
(bad)
jmp
jo
aad
adc
(bad)
push
scas
and
cli
fwait
dec
stc
into
xor
push
or
adc
(bad)
inc
sub
lods
mov
jb
mov
add
dec
imul
push
dec
pop
retf
push
or
inc
sub
xchg
mov
inc
loopne
xchg
adc
sub
call
cwde
loopne
in
pop
sbb
inc
enter
(bad)
call
xor
pop
fsubrp
fnstenv
cmp
cwde
xchg
pop
push
int3
push
push
inc
mov
xchg
shl
and
pushf
in
add
(bad)
call
loop
call
add
jns
ss
jl
cmp
(bad)
(bad)
dec
inc
pop
xlat
fnstsw
sub
jmp
shl
add
stos
mov
(bad)
adc
xchg
sti
xchg
xchg
mov
ins
cmp
aad
push
dec
xlat
jmp
push
sbb
repz
js
not
pop
fdivr
out
jmp
ds
test
les
neg
push
pop
sub
(bad)
pop
mov
in
imul
inc
xchg
pop
das
clc
call
fidiv
sub
pop
xor
xor
ret
push
xor
icebp
nop
adc
repz
pop
dec
sub
(bad)
jg
jg
adc
sub
mov
pop
(bad)
fstp
ret
clc
call
inc
(bad)
cld
dec
xor
and
shr
mov
lock
aas
(bad)
sti
out
jnp
aaa
(bad)
(bad)
(bad)
(bad)
fbstp
cmp
dec
fisub
push
xor
sbb
mov
dec
rcr
mov
jp
ja
les
and
inc
xchg
es
clc
jmp
add
imul
or
scas
push
(bad)
(bad)
(bad)
call
inc
sub
inc
pop
call
sbb
imul
(bad)
adc
xchg
xchg
push
(bad)
(bad)
(bad)
push
mov
loopne
add
pusha
movs
inc
xor
xchg
and
xor
or
(bad)
jmp
dec
ret
push
pushf
movs
fsubr
mov
pushf
mov
push
or
(bad)
jmp
int3
mov
in
sub
(bad)
mov
fcom
aad
pop
adc
and
dec
jo
add
je
pop
loopne
jmp
adc
sti
shl
push
dec
(bad)
sete
adc
loopne
jno
xchg
xor
dec
dec
mov
bound
xchg
shr
and
pop
(bad)
sub
mov
stc
in
jmp
mov
imul
popf
mov
out
sahf
pop
sbb
int3
or
outs
cmps
test
xchg
or
out
rcr
and
jmp
inc
xor
je
jmp
pusha
pop
inc
rcl
add
icebp
push
jae
ja
(bad)
mov
mov
pop
sti
jge
mov
pop
lahf
jmp
data16
sar
pop
pop
jle
cdq
or
push
sub
fld
mov
inc
sahf
outs
hlt
(bad)
(bad)
call
shl
fiadd
aaa
pushf
add
mov
jae
pop
iret
or
call
jmp
cdq
fs
repz
out
pop
cld
(bad)
inc
pop
add
stos
in
sbb
mov
sar
jmp
or
jo
jg
(bad)
call
mov
push
sbb
jno
ins
fxch
dec
out
xchg
lea
dec
loope
push
push
rcr
ret
sub
ss
pop
sub
adc
push
into
and
(bad)
push
imul
int3
dec
sbb
repnz
ins
sbb
(bad)
cmp
fnstenv
outs
mov
mov
(bad)
jg
aaa
xchg
fmul
dec
jnp
dec
test
xchg
gs
mov
mov
(bad)
fiadd
sub
mov
ins
fwait
pop
enter
repz
(bad)
jg
(bad)
mov
(bad)
jle
xor
repz
dec
pop
mov
cmc
(bad)
push
imul
push
movs
movs
rcl
das
lods
loopne
aaa
fisttp
aam
sar
(bad)
(bad)
dec
mov
sbb
outs
dec
iret
pop
les
pushf
enter
pop
movs
pop
retf
ret
adc
pop
repnz
cdq
enter
pop
ret
jle
or
imul
adc
les
(bad)
(bad)
push
mov
clc
mov
mov
dec
sbb
adc
cmp
xor
imul
loopne
aam
(bad)
(bad)
call
jne
mov
in
mov
jecxz
and
imul
addr16
sbb
and
add
ins
xlat
mov
and
addr16
rcr
push
adc
cmp
jmp
sbb
(bad)
jecxz
xchg
mov
jp
cmp
pop
mov
(bad)
mov
stos
test
adc
(bad)
(bad)
(bad)
call
outs
mov
pop
leave
enter
inc
mov
push
add
into
sub
mov
jmp
xlat
dec
cmp
jg
cli
dec
mov
mov
sahf
loop
jmp
(bad)
pop
mov
rol
bound
fdiv
push
(bad)
fmul
lods
mov
(bad)
mov
(bad)
not
xchg
sub
rcl
inc
push
daa
fcmovu
stos
mov
outs
sbb
pop
leave
jnp
retf
les
(bad)
fbstp
stos
std
call
rol
cwde
adc
(bad)
(bad)
inc
div
(bad)
cld
or
repz
inc
icebp
mov
ss
or
jno
mov
sti
jnp
ror
(bad)
(bad)
push
inc
xchg
mov
loop
or
adc
mov
sbb
or
ss
(bad)
inc
jnp
xor
cmp
xor
mov
add
(bad)
mov
push
popf
and
repnz
add
xor
xchg
jmp
enter
shr
or
mov
dec
(bad)
inc
xor
aad
adc
mov
sbb
mov
jmp
mov
push
retf
pop
pop
sbb
lods
fs
mov
inc
sti
and
je
jmp
das
inc
jnp
aad
mov
mov
(bad)
fbld
cmp
add
xchg
daa
pop
lods
mov
add
mov
(bad)
(bad)
(bad)
jmp
adc
fsub
fadd
push
xor
add
mov
sub
fwait
inc
adc
je
fcos
mov
pushaw
enter
cmp
sbb
outs
mov
(bad)
(bad)
cmp
sub
adc
sbb
dec
rcr
addr16
mov
and
jmp
add
ja
outs
data16
aaa
ret
mov
or
shl
enter
inc
arpl
retf
int
sbb
ss
in
mov
ins
mov
(bad)
call
push
sbb
imul
call
rol
mov
fimul
(bad)
stos
fdivr
pop
shl
ins
add
push
mov
and
jl
add
enter
in
mov
push
das
rcl
dec
inc
dec
lds
call
xor
(bad)
(bad)
dec
xchg
popa
les
push
mov
sbb
inc
dec
(bad)
(bad)
push
jl
mov
jae
jecxz
into
dec
hlt
ret
jo
cmp
stc
inc
dec
bound
or
sbb
sub
call
jns
nop
push
(bad)
sbb
xchg
mov
adc
shl
cmp
(bad)
(bad)
(bad)
mov
adc
test
add
sub
jne
push
xchg
inc
xchg
dec
xchg
jae
hlt
inc
in
int
icebp
dec
(bad)
adc
adc
(bad)
mov
sbb
repnz
xchg
enter
inc
sbb
sti
mov
and
icebp
retf
outs
inc
jmp
inc
mov
mov
(bad)
(bad)
jmp
inc
lds
cmp
pushf
jle
cmp
into
ret
sbb
nop
mov
aas
xchg
cli
mov
lahf
push
(bad)
call
out
sar
adc
xor
jmp
inc
and
dec
stos
iret
adc
jp
(bad)
(bad)
dec
and
test
cmp
sbb
cmp
int3
cwde
test
movs
lock
dec
push
push
aaa
je
call
ds
mov
lds
jg
adc
cmps
into
pushf
cmp
sbb
add
mov
sub
jg
and
daa
mov
xor
nop
(bad)
jbe
xchg
sbb
retf
jno
int
add
mov
or
cmp
jg
ja
in
mov
mov
mov
popf
gs
mov
(bad)
(bad)
dec
mov
mov
sbb
jno
inc
(bad)
or
dec
mov
mov
sbb
xchg
scas
jp
fcmovnu
std
into
(bad)
js
fidivr
(bad)
(bad)
(bad)
mov
ret
rcl
sbb
in
sbb
data16
adc
jle
or
cli
stos
xor
cmps
int
lock
(bad)
dec
(bad)
jmp
mov
loop
push
adc
retf
xor
data16
and
dec
jle
add
(bad)
in
outs
inc
mov
les
(bad)
xchg
mov
jmp
and
das
popa
data16
das
push
(bad)
pop
into
cld
cmp
ja
mov
std
repnz
jo
jecxz
xchg
mov
(bad)
(bad)
call
ficomp
dec
addr16
in
fsub
mov
lds
pop
push
call
jg
(bad)
push
jnp
in
dec
ret
cmp
outs
xchg
add
inc
ficom
push
call
int3
push
mov
xor
cli
imul
mov
lds
mov
test
dec
cld
call
sbb
in
jnp
out
or
(bad)
(bad)
jmp
and
arpl
mov
or
push
leave
hlt
mov
xchg
xchg
jmp
(bad)
and
(bad)
push
adc
enter
pop
fwait
in
es
call
out
mov
(bad)
(bad)
jg
movs
(bad)
mov
(bad)
and
push
inc
test
mov
je
ins
and
(bad)
inc
arpl
sub
or
leave
(bad)
inc
mov
ins
call
jnp
or
push
enter
fcomip
das
out
mov
and
push
xchg
repz
xchg
cmp
fst
push
sbb
call
push
retf
sahf
pop
push
repnz
or
push
adc
adc
out
fcomp
shl
xor
jg
stc
pop
mov
inc
stos
and
mov
or
call
pop
sub
inc
das
xor
cmps
movd
dec
and
add
(bad)
call
cdq
sbb
pop
xor
out
sbb
jle
jle
push
(bad)
(bad)
(bad)
inc
jno
xor
xchg
call
lea
pop
pop
mov
in
out
(bad)
call
pop
inc
hlt
in
fdiv
movs
(bad)
push
jmp
(bad)
sbb
cld
cmp
scas
sbb
(bad)
(bad)
(bad)
js
fnsave
iret
xor
movs
fwait
cmp
sbb
inc
ja
mov
mov
sbb
not
push
inc
and
cli
sub
adc
push
int3
pop
outs
xor
dec
push
stc
fnsetpm(287
aad
adc
or
es
mov
loopne
(bad)
(bad)
jmp
xor
push
ret
inc
xor
mov
dec
add
fidiv
lods
push
inc
dec
sti
call
mov
shl
adc
movs
(bad)
(bad)
(bad)
mov
or
clc
stos
out
inc
cli
mov
popa
repnz
fcomip
scas
add
jno
jne
mov
sti
mov
rcl
jbe
nop
xchg
sub
jae
mov
lea
dec
(bad)
mov
cmp
div
ror
jl
icebp
(bad)
mov
push
jns
sti
inc
xchg
(bad)
(bad)
jmp
out
lds
or
int
mov
jmp
mov
pop
loopne
fiadd
and
dec
jg
adc
aas
inc
out
pop
or
addr16
jle
(bad)
jmp
jge
jae
dec
aas
stos
addr16
sbb
hlt
ds
retf
sbb
ret
xor
sbb
das
dec
outs
sub
retf
retf
jns
xor
adc
in
cmp
cli
add
add
call
loop
imul
mov
cmps
sbb
xchg
ins
cs
lahf
mov
outs
or
(bad)
mov
aaa
call
pop
jnp
aaa
popa
fist
jl
pop
mov
out
scas
xlat
outs
mov
cwde
retf
dec
cmp
jge
mov
lahf
(bad)
push
push
mov
fld
pop
cdq
rol
mov
cmps
mov
add
pop
icebp
lods
outs
push
fs
test
(bad)
jns
or
inc
pusha
pusha
test
jmp
add
sub
adc
lods
das
jle
sub
stos
and
aam
(bad)
(bad)
mov
hlt
and
and
cmp
sbb
add
shr
div
ret
mov
adc
xchg
or
cdq
jp
aam
jb
and
xor
push
mov
lods
mov
int3
int3
int
clc
dec
nop
clc
cmp
sar
xchg
loope
nop
xchg
inc
sub
xchg
cmc
adc
pushf
retf
in
mov
add
cmps
aad
not
ins
rsm
adc
xchg
xlat
test
(bad)
(bad)
jmp
in
fidivr
rcl
mov
scas
inc
push
and
sar
pop
cmp
fcomip
push
stos
(bad)
pop
cld
or
cs
test
ds
push
popf
push
jmp
(bad)
push
and
popf
sub
std
xchg
lods
xchg
std
push
pop
rcl
jle
ds
cmp
(bad)
(bad)
(bad)
cli
(bad)
repz
lods
int
sbb
push
in
or
add
adc
jmp
leave
jae
rol
psubq
test
push
add
daa
(bad)
cs
adc
es
mov
(bad)
jg
movs
movs
jne
mov
xor
inc
add
adc
xchg
fcom
aaa
sbb
les
ds
cwde
in
loop
xchg
movs
lahf
cmp
rcl
cmp
data16
add
(bad)
(bad)
cmp
int
inc
adc
sbb
aaa
cmp
sbb
dec
sub
or
inc
jg
cmp
jns
outs
outs
lahf
rcr
jmp
(bad)
cmc
(bad)
(bad)
dec
push
jecxz
data16
imul
mov
mov
mov
add
dec
push
push
movs
mov
mov
sub
ror
cmps
adc
jp
and
stos
and
mov
pusha
(bad)
fild
lahf
std
or
mov
call
adc
pop
mov
js
arpl
test
inc
(bad)
(bad)
jp
lock
mov
(bad)
hlt
outs
jmp
cmp
(bad)
or
pop
push
jp
aaa
inc
aam
add
ja
cmps
pop
jo
fs
scas
test
dec
loop
cmp
(bad)
(bad)
jmp
xchg
(bad)
mov
xchg
or
lds
adc
cmps
push
cmp
aas
icebp
mov
push
jmp
adc
mov
xor
pop
call
(bad)
les
mov
mov
ret
repz
pop
sub
pop
xor
out
lods
ins
cld
not
sar
das
loop
pop
sti
xor
and
xchg
push
es
imul
sbb
adc
lods
addr16
les
aad
fdivr
cmp
fisub
les
sub
sbb
aam
fwait
cli
lea
(bad)
sbb
pop
cmp
ins
sub
in
outs
xor
je
loop
(bad)
jg
test
sbb
or
mov
mov
movs
jmp
xchg
or
(bad)
(bad)
mov
jbe
and
add
adc
jbe
cmp
mov
stc
jge
xor
cmc
mov
(bad)
(bad)
jmp
and
push
cmc
pop
xor
aaa
clc
jl
adc
mov
push
cmc
jns
xchg
inc
push
(bad)
mov
(bad)
(bad)
call
cmp
push
das
jge
sbb
lods
stos
adc
fsub
push
mov
ss
inc
mov
inc
mov
(bad)
(bad)
inc
lahf
push
adc
push
add
jae
jle
and
jo
and
push
cmp
clc
test
and
hlt
daa
repnz
int3
mov
sbb
cmp
leave
inc
or
pop
pop
pop
inc
(bad)
lods
add
(bad)
clc
mov
shr
stos
xor
push
cmc
aaa
std
shl
adc
lods
push
(bad)
xor
repz
movs
jl
xchg
test
shr
xor
jmp
iret
loopne
cld
and
xchg
mov
sub
(bad)
clc
jg
and
lock
(bad)
adc
push
aas
jo
jl
ficom
cmp
fimul
inc
les
rcl
mov
out
test
(bad)
push
sbb
popf
dec
ret
aad
dec
pop
ret
(bad)
(bad)
jmp
mov
lock
addr16
mov
ficomp
data16
cwde
sub
add
and
jmp
mov
nop
cdq
lods
nop
sbb
jnp
in
mov
(bad)
(bad)
in
mov
mov
repnz
loopne
mov
ret
dec
cli
inc
mov
sub
inc
ret
sbb
mov
aaa
xor
cwde
in
xchg
(bad)
aam
lahf
adc
inc
clc
scas
outs
xor
loop
mov
fstp
sti
and
(bad)
dec
js
popf
nop
int
cli
pop
es
lahf
mov
out
jmp
xchg
out
add
call
or
lods
dec
hlt
jg
(bad)
pop
loopne
xlat
mov
outs
pop
popa
xchg
inc
and
push
test
pop
cmp
out
leave
cli
(bad)
(bad)
(bad)
mov
inc
xchg
mov
mov
clc
mov
cmps
mov
mov
sbb
(bad)
(bad)
(bad)
jmp
jl
and
mov
cmc
data16
hlt
ss
mov
adc
cmp
push
inc
dec
neg
retf
stos
inc
test
jbe
jp
jecxz
icebp
out
clc
inc
mov
imul
std
inc
mov
nop
dec
inc
mov
xor
mov
cmps
mov
xchg
jge
(bad)
jmp
mov
jb
mov
xchg
inc
or
push
mov
dec
fstp
cmp
mov
push
fisttp
inc
push
mov
enter
adc
cli
ja
jmp
call
scas
aad
xchg
inc
mov
xlat
ss
pop
push
mov
cmp
pusha
xlat
ins
xlat
(bad)
jmp
adc
pop
cmp
push
and
fst
jbe
sbb
sub
aaa
mov
xchg
adc
and
test
xchg
ret
mov
inc
push
jge
(bad)
push
push
(bad)
repnz
sub
sub
jne
int3
push
mov
inc
xchg
cmp
fwait
inc
mov
fidivr
sub
xor
daa
iret
mov
clc
dec
push
and
and
mov
jne
xor
inc
sub
(bad)
jmp
inc
sbb
ja
sbb
pop
std
and
call
call
xchg
dec
cld
xor
or
xchg
outs
(bad)
inc
xchg
imul
dec
clc
movs
out
pop
jno
outs
jns
mov
(bad)
(bad)
push
mov
mov
and
rcl
or
ds
cmp
hlt
cmp
(bad)
(bad)
call
out
ins
mov
and
cmp
add
ins
mov
pop
aas
cmp
ror
or
sbb
(bad)
(bad)
call
jno
ja
push
out
stos
pushf
nop
in
jmp
call
in
adc
dec
dec
(bad)
(bad)
dec
pop
inc
addr16
mov
fisttp
or
lods
pusha
xchg
ins
push
push
inc
(bad)
(bad)
fbld
fdivr
adc
xlat
mov
imul
(bad)
(bad)
xor
xor
scas
enter
addr16
or
and
outs
lods
popa
inc
pushf
xor
fldenv
and
pusha
cld
dec
jb
xchg
test
dec
jl
cmp
and
adc
inc
push
jb
imul
pusha
sbb
fs
xchg
push
lods
adc
jo
cdq
(bad)
jg
call
mov
dec
mov
lds
mov
cmp
je
push
ret
jle
call
(bad)
push
nop
or
lock
pop
(bad)
xchg
xchg
pop
xchg
addr16
and
mov
xchg
scas
mov
inc
or
std
aaa
dec
loop
xor
jmp
clc
push
lds
or
sti
repz
add
das
loope
pop
cld
lock
sub
add
rcl
shl
lods
add
es
stos
rcl
cmp
pop
cmp
xor
scas
cmp
ficom
sbb
call
call
aaa
stos
clc
inc
loope
dec
xchg
pop
mov
pushf
add
dec
stc
cdq
push
pop
inc
test
push
jg
or
ret
shr
movs
jge
(bad)
mov
icebp
inc
adc
(bad)
dec
mov
and
adc
lods
sub
inc
push
js
mov
icebp
add
das
mov
das
dec
jmp
jnp
add
ret
call
idiv
mov
test
add
jecxz
scas
(bad)
jmp
mov
jl
jle
sbb
test
and
xor
dec
es
(bad)
out
cli
call
mov
(bad)
(bad)
out
add
mov
inc
push
xor
retf
sbb
pop
idiv
call
cld
sub
cmp
aas
sbb
mov
stos
pusha
dec
dec
add
(bad)
(bad)
(bad)
(bad)
fsub
fmul
xor
jnp
(bad)
call
mov
lods
(bad)
call
push
sbb
xchg
push
pop
call
or
mov
cmp
dec
cmps
(bad)
(bad)
call
and
and
stos
adc
cwde
retf
stos
sbb
pop
xor
fdivr
cmp
(bad)
cmp
out
xchg
adc
push
lods
(bad)
call
pop
ret
jbe
hlt
cdq
retf
inc
cld
loop
mov
repz
adc
pmaxsw
aad
inc
cmp
(bad)
jg
scas
mov
cmps
push
mov
je
outs
adc
pop
dec
mov
lods
mov
or
jp
in
and
xor
sbb
cmp
fsave
cmp
mov
div
ins
inc
mov
(bad)
jg
mov
lahf
xchg
adc
outs
sbb
enter
(bad)
(bad)
(bad)
(bad)
sti
test
push
adc
inc
pop
add
inc
in
movs
out
dec
add
xchg
scas
(bad)
xchg
fild
test
outs
mov
sub
hlt
lods
cmps
in
jl
repz
fild
mov
int3
loope
ss
or
(bad)
(bad)
mov
mov
js
jg
xor
cs
jb
(bad)
and
ins
sbb
pop
(bad)
stos
bswap
and
adc
cli
fwait
cwde
out
std
adc
xchg
(bad)
(bad)
call
push
rol
cmps
jo
pop
cmps
test
nop
(bad)
ss
jns
call
inc
push
add
push
test
and
(bad)
(bad)
(bad)
jmp
jns
cmp
mov
sbb
cmc
ffreep
fidiv
cmp
cmc
sub
(bad)
fdiv
adc
inc
(bad)
inc
mov
aam
pop
ficom
push
(bad)
lea
cmp
sbb
pop
(bad)
mov
mov
ss
fs
aaa
ins
inc
xor
(bad)
mov
ss
dec
sub
jnp
popa
out
xchg
movs
pop
sub
(bad)
adc
clc
sahf
push
sbb
sbb
add
push
mov
adc
(bad)
(bad)
(bad)
(bad)
and
mov
stc
mov
popf
ins
jmp
sahf
scas
ins
loopne
(bad)
push
sbb
jno
mov
aaa
and
div
sbb
and
jne
jb
sub
jb
cs
scas
movs
sbb
sahf
mov
and
sbb
and
test
xor
push
adc
movs
repnz
mov
inc
mov
(bad)
call
addr16
cmp
push
leave
test
dec
and
dec
xchg
xor
inc
xor
or
(bad)
jmp
xor
lods
retf
test
inc
xadd
mov
aam
pop
lods
mov
push
pop
int
xor
das
push
movs
test
xchg
fsub
iret
inc
xchg
(bad)
mov
jg
scas
(bad)
cdq
(bad)
loopne
jg
inc
mov
adc
das
(bad)
xor
pop
pop
pop
rcl
ins
(bad)
push
clc
in
(bad)
imul
fwait
pop
mov
xchg
cmp
pop
cwde
adc
mov
arpl
pop
daa
cli
mov
icebp
jg
jl
inc
sub
inc
imul
cli
sahf
std
mov
inc
push
mul
add
daa
adc
push
add
dec
push
bound
jbe
iret
les
(bad)
in
jae
cmp
(bad)
(bad)
dec
mov
cld
cmp
mov
cmp
push
loop
das
mov
mov
call
pop
push
mov
retf
lahf
ins
mov
(bad)
(bad)
jg
jbe
adc
push
pusha
sub
jmp
and
out
(bad)
(bad)
(bad)
jmp
dec
je
jmp
and
ror
mov
test
sbb
mov
gs
(bad)
(bad)
jg
not
in
mov
cmc
outs
imul
dec
std
ja
(bad)
mov
(bad)
ss
mov
dec
sub
retf
mov
ins
(bad)
(bad)
(bad)
jmp
or
out
sahf
imul
test
retf
bound
sub
scas
mov
(bad)
(bad)
fmul
ss
xor
add
inc
daa
and
pop
sub
pushf
nop
push
jmp
add
(bad)
shr
push
out
pop
aas
das
inc
dec
mov
in
jnp
not
adc
sti
sbb
dec
mov
mov
rcr
arpl
cmp
xchg
or
pop
std
(bad)
call
mov
fldpi
cmp
xchg
aam
out
jne
xchg
and
mov
(bad)
(bad)
(bad)
cmp
popf
mov
out
sbb
pop
mov
(bad)
jmp
loopne
jae
inc
xor
mov
jns
mov
add
mov
xchg
clc
push
dec
or
push
mov
inc
outs
mov
outs
or
mov
cmps
xchg
mov
jecxz
stos
jo
shl
call
cmp
jb
dec
xor
jmp
(bad)
(bad)
clc
lods
mov
fistp
imul
int
aam
xchg
pop
xchg
dec
and
cmp
(bad)
(bad)
call
pop
add
push
fs
xor
scas
movs
cli
ror
int3
addr16
sahf
mov
mov
push
hlt
imul
movs
sbb
xchg
cld
ja
test
out
in
mov
mov
and
adc
dec
inc
fcos
(bad)
push
out
xchg
call
sub
retf
in
jecxz
int
mov
dec
lods
mov
out
(bad)
(bad)
xor
dec
sub
pop
push
push
inc
jns
push
arpl
add
jmp
sub
pop
icebp
std
dec
(bad)
repz
std
mov
(bad)
fisttp
push
out
inc
popa
dec
mov
outs
clc
(bad)
jmp
aaa
add
rcl
fwait
mov
mov
mov
jne
dec
out
jae
jae
das
mov
push
xor
pop
mov
push
jo
cdq
dec
pusha
push
jbe
push
inc
cmp
lods
mov
sbb
push
pop
scas
dec
inc
fs
push
pop
mov
push
(bad)
out
xor
xchg
pop
mov
ret
mov
mov
jae
inc
(bad)
fld
jmp
push
add
jp
repz
and
push
adc
leave
inc
push
loop
jae
jg
or
into
jnp
jo
adc
mov
call
push
stc
cwde
repnz
les
addr16
mov
out
mov
jmp
stc
fnstcw
ret
aas
xlat
les
mov
nop
push
dec
hlt
(bad)
xchg
(bad)
jg
mov
(bad)
jbe
lahf
clc
aam
jecxz
das
jle
mov
fbld
jmp
or
loope
(bad)
imul
pop
and
data16
jge
sbb
push
popa
pop
push
sbb
add
(bad)
jmp
sub
xchg
xor
and
cmps
mov
sub
xor
outs
cmp
(bad)
(bad)
call
sbb
ds
mov
cs
cmp
adc
int3
ins
sbb
jbe
fsub
mov
ret
push
jbe
inc
sub
pop
sbb
rcr
push
mov
mov
jl
dec
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
dec
sbb
in
xor
xchg
nop
fsub
adc
jbe
sbb
or
sub
(bad)
(bad)
call
pop
iret
sbb
xor
out
pop
dec
in
sub
jmp
(bad)
(bad)
jg
push
sub
ins
dec
or
mov
mov
imul
leave
xor
push
cmc
mov
ret
(bad)
pop
lds
push
sub
jecxz
fs
(bad)
(bad)
out
js
bound
inc
xor
push
mov
push
jp
xchg
dec
cmp
movs
mov
(bad)
out
push
icebp
test
data16
jmp
in
repz
sub
inc
(bad)
pop
inc
mov
vdivsd
retf
in
sub
and
add
sar
cld
mov
xchg
out
xor
adc
ds
ret
mov
(bad)
fiadd
pop
shl
loopne
fcom
ja
xchg
(bad)
out
shr
in
mov
and
mov
(bad)
jnp
pop
(bad)
das
sbb
pop
mov
pop
outs
out
ret
(bad)
rcl
(bad)
(bad)
(bad)
call
(bad)
fidivr
retf
inc
sub
xor
movs
call
addr16
cmp
(bad)
clc
pusha
or
xchg
(bad)
cli
dec
iret
ret
and
jb
ja
or
imul
push
xor
xchg
mov
loope
mov
push
mov
popw
movs
add
fild
nop
(bad)
xchg
in
aaa
fmul
mov
clc
loope
or
adc
outs
xor
scas
gs
mov
outs
pop
adc
(bad)
mov
inc
pop
sub
pop
aad
lahf
inc
loop
std
call
(bad)
jmp
scas
imul
test
mov
dec
push
pop
movs
lods
cmps
icebp
(bad)
add
inc
dec
aam
inc
scas
outs
add
adc
call
cld
adc
popa
std
cmp
mov
cmp
loopne
or
in
sahf
(bad)
(bad)
(bad)
dec
shl
sbb
dec
ror
adc
ja
jecxz
mov
test
jmp
jmp
(bad)
xchg
call
dec
sbb
movs
outs
cmc
sub
xor
push
int3
pop
add
pop
jb
adc
mov
push
push
cmp
(bad)
(bad)
push
pop
cdq
dec
dec
xor
xchg
mov
ret
loopne
mov
int3
dec
loop
cmp
mov
jle
dec
add
push
pop
xchg
fsub
mov
(bad)
jp
push
pop
cmp
(bad)
(bad)
jmp
push
sbb
in
adc
inc
or
sub
xchg
mov
xchg
sar
pop
adc
sbb
hlt
or
(bad)
(bad)
(bad)
push
gs
sbb
fs
add
cmp
add
stos
sbb
stc
cmp
bound
mov
das
add
sbb
aaa
icebp
fist
(bad)
inc
pop
out
mov
sub
pop
lock
jg
jno
sbb
adc
call
lock
dec
mov
mov
es
or
pusha
scas
cli
cmp
fwait
div
les
test
adc
dec
retf
inc
arpl
test
aas
test
rol
adc
inc
xor
and
aad
(bad)
pop
sub
xchg
shl
cmp
sub
jnp
push
xlat
(bad)
(bad)
(bad)
jmp
xor
add
popa
loop
xor
pop
push
add
adc
not
adc
push
mov
imul
in
in
inc
jne
dec
adc
lods
and
push
xchg
cmps
jne
mov
rcl
(bad)
and
xor
call
lock
ins
ret
enter
push
cmp
test
inc
stc
sbb
(bad)
call
add
xchg
cmp
or
push
in
(bad)
and
pop
cmp
sbb
cmp
sub
(bad)
(bad)
(bad)
call
imul
mov
push
dec
cmp
not
(bad)
push
imul
in
je
mov
and
dec
push
xchg
dec
inc
addr16
dec
jle
xor
push
les
pushf
addr16
ror
(bad)
(bad)
(bad)
jmp
mov
pusha
inc
imul
or
push
cmp
cmc
cli
xor
pop
jno
js
xchg
and
out
(bad)
(bad)
inc
add
jge
(bad)
aam
int
rcl
or
adc
jae
aaa
jmp
mov
xlat
dec
cmc
xchg
dec
cld
cmc
jge
rcr
(bad)
cmp
mov
push
fbstp
fistp
cmp
mov
jae
mov
int
push
inc
mov
add
cmp
(bad)
push
lds
dec
aam
cmps
aas
scas
or
xor
jmp
mov
dec
(bad)
(bad)
(bad)
fnop
or
fs
gs
push
and
xchg
add
mov
icebp
push
mov
mov
ins
jmp
jb
mov
(bad)
(bad)
(bad)
add
push
add
jno
cmp
xchg
aad
outs
(bad)
push
int3
add
jmp
or
add
shr
ret
cwde
es
aaa
mov
imul
or
pop
(bad)
(bad)
push
jb
lds
jmp
jl
(bad)
shl
je
adc
jg
push
movs
cli
stos
leave
cmp
mov
lock
or
sahf
movs
(bad)
(bad)
(bad)
push
xor
push
(bad)
lods
test
cdq
and
mov
sahf
pop
cmp
jnp
aas
push
(bad)
in
(bad)
call
(bad)
sub
test
dec
push
xchg
ficom
mov
sbb
popa
cmp
jmp
cdq
cli
jno
test
mov
and
retf
and
gs
out
cli
call
inc
sti
fisttp
sbb
mov
enter
repz
movs
push
and
cld
mov
pop
or
pop
jbe
(bad)
(bad)
(bad)
jmp
int
mov
lods
push
xchg
mov
adc
mov
cmp
(bad)
(bad)
jmp
repnz
outs
es
mov
nop
pop
dec
test
(bad)
fbld
movs
push
or
adc
sub
cmp
xor
call
jne
cwde
shl
cdq
push
cwde
xor
shl
(bad)
adc
imul
call
mov
inc
addr16
lods
dec
mov
(bad)
dec
inc
pop
(bad)
cmp
loop
mov
rol
mov
sub
inc
in
pop
cli
mov
jecxz
sub
push
sub
cmc
idiv
cmp
(bad)
dec
fnstenv
jl
and
je
pop
and
mov
add
(bad)
call
and
push
or
bound
cmp
aam
and
out
mov
cmp
(bad)
(bad)
inc
cmps
(bad)
hlt
daa
fld
inc
adc
arpl
call
(bad)
call
loopne
pushf
sbb
imul
popa
cmp
rcr
mov
xchg
dec
fld
dec
add
(bad)
(bad)
(bad)
inc
xchg
inc
jb
fld
(bad)
int3
push
fimul
xchg
mov
daa
sti
mov
(bad)
inc
inc
xor
push
mov
pop
pop
mov
inc
into
add
mov
(bad)
(bad)
(bad)
jmp
or
(bad)
loop
test
ds
add
jns
push
or
sub
sbb
sar
inc
dec
xor
sub
mov
pop
(bad)
(bad)
jg
stos
cmp
sbb
repz
mov
fucomp
stos
dec
test
push
fist
in
(bad)
inc
push
adc
pop
out
(bad)
mov
shl
mov
das
addr16
stos
mov
dec
push
lea
add
imul
mov
bound
inc
test
sub
repz
test
cld
or
xor
(bad)
fild
(bad)
inc
hlt
jl
xlat
fdivr
scas
cmps
aad
(bad)
(bad)
pop
mov
inc
jns
in
push
movs
and
ror
pop
cmp
push
(bad)
(bad)
(bad)
jns
push
jmp
fst
sbb
sub
scas
sub
dec
cld
scas
pop
add
mov
mov
stc
xor
add
cli
stc
int3
xchg
in
push
(bad)
(bad)
(bad)
dec
add
mov
xor
nop
fild
add
adc
ins
sbb
ins
or
in
and
inc
lock
enter
adc
or
pop
in
mov
mov
sbb
pop
stc
adc
or
(bad)
(bad)
(bad)
mov
test
cld
add
call
xchg
mov
adc
sub
sub
sbb
(bad)
(bad)
(bad)
(bad)
out
mov
push
imul
inc
std
fmul
pop
bound
inc
mov
add
lds
cld
(bad)
(bad)
push
(bad)
mov
dec
lods
push
mov
pop
neg
in
sub
or
xor
fsub
retf
cmps
push
fs
mov
popf
cmp
ds
lods
xchg
(bad)
(bad)
(bad)
call
pop
loope
cmp
arpl
ss
test
mov
pop
gs
jne
mov
dec
push
test
aad
push
sbb
fcom
mov
and
inc
mov
(bad)
mov
jp
lock
xchg
xor
xor
ret
xor
hlt
addr16
(bad)
dec
add
xlat
sub
sub
scas
nop
mov
xchg
mov
mov
nop
and
(bad)
mov
adc
xchg
xor
mov
popa
aas
cli
(bad)
(bad)
inc
ins
xlat
dec
adc
ja
mov
push
or
push
repz
mov
add
(bad)
call
rol
xor
xchg
imul
push
cmp
inc
fdivr
xor
(bad)
pop
iret
sbb
add
cmp
sub
jno
mul
scas
mov
jl
or
fdivr
jns
sar
(bad)
(bad)
(bad)
out
(bad)
pop
cld
out
inc
call
aad
jp
push
sahf
pop
jg
dec
bswap
and
das
jns
retf
lock
pop
ret
(bad)
sub
into
lea
add
push
jge
mov
test
or
xchg
popa
jecxz
ins
shl
(bad)
call
or
jle
xchg
aad
mov
mov
pop
int
mov
fwait
sahf
and
jge
sbb
cmp
lock
(bad)
iret
je
cmp
fiadd
jbe
out
and
push
outs
mov
stos
sbb
pop
xor
pop
(bad)
jmp
ror
mul
aas
cmps
into
inc
push
test
lahf
scas
ret
(bad)
(bad)
dec
je
mov
xchg
xor
sbb
sbb
addr16
dec
mov
mov
ret
xchg
jmp
push
add
adc
jb
adc
mov
(bad)
(bad)
jmp
pusha
ret
adc
jno
mov
xor
lods
xor
mov
lea
sub
aam
jmp
(bad)
mov
out
push
aad
out
xchg
les
sub
dec
mov
xchg
mov
sub
test
(bad)
mov
push
inc
push
mov
ins
nop
dec
xor
(bad)
retf
dec
mov
pushf
add
call
jmp
mov
xchg
add
sub
jp
cmp
xchg
xchg
aas
jecxz
lahf
jle
and
push
scas
jo
adc
jo
adc
sbb
jnp
jmp
(bad)
cmp
dec
xadd
or
push
std
mov
pop
js
adc
std
aad
popf
or
adc
jp
imul
loopne
out
cli
(bad)
retf
imul
lods
cmp
xchg
add
clc
aaa
rol
leave
mov
jmp
loop
enter
dec
mov
cli
mov
adc
out
outs
hlt
pushf
pop
and
outs
and
adc
(bad)
mov
fisub
xchg
mov
(bad)
(bad)
(bad)
jmp
mov
inc
push
or
mov
mov
adc
mov
push
sbb
pop
add
js
into
call
pushf
add
(bad)
(bad)
(bad)
jns
jo
mov
in
fisubr
aaa
nop
fisub
(bad)
pop
test
or
xor
pop
ins
push
std
cmp
mov
(bad)
jmp
loopne
sub
leave
scas
push
cmp
lock
lods
pop
xchg
and
in
mov
sbb
out
xchg
mov
ins
jno
test
sbb
cdq
sbb
in
push
jbe
adc
adc
jbe
jmp
jne
out
test
pop
mov
push
mov
xor
pusha
xor
push
mov
push
ins
sub
shl
(bad)
(bad)
(bad)
call
sub
xor
xchg
sahf
data16
cmps
sbb
jmp
rcr
hlt
pop
cmp
enter
in
and
mov
sbb
xchg
loope
shr
pushf
(bad)
dec
push
add
mov
mov
inc
mov
dec
(bad)
cmp
sahf
loop
call
leave
adc
(bad)
jmp
push
cmc
add
jae
scas
push
jp
add
aad
popf
push
lock
ds
mov
cmp
in
inc
fsubr
or
jmp
test
mov
mov
sub
pop
fdiv
mov
lods
call
adc
add
jmp
pop
scas
je
jae
add
(bad)
rcr
sbb
push
in
cdq
pop
inc
push
dec
push
(bad)
push
mov
or
stos
dec
loopne
(bad)
(bad)
(bad)
call
cmp
sbb
pop
inc
scas
fisub
jecxz
xchg
loop
das
(bad)
loop
cdq
cmp
(bad)
dec
iret
mov
out
push
mov
retf
sbb
jmp
jl
and
scas
loop
fdivrp
cmp
push
mov
(bad)
(bad)
js
(bad)
xlat
dec
push
xchg
xor
mov
cld
or
les
fnstenv
and
scas
add
add
adc
mov
push
inc
(bad)
(bad)
(bad)
call
sub
mov
mov
cmp
xchg
jmp
enter
neg
das
nop
inc
(bad)
jbe
(bad)
(bad)
(bad)
inc
sbb
and
jmp
inc
fdiv
jmp
jmp
adc
mov
inc
das
das
sub
and
pop
(bad)
dec
dec
jg
ins
jo
push
mov
imul
nop
adc
pop
push
xchg
popf
nop
icebp
call
dec
inc
into
adc
mov
ja
imul
cwde
dec
jno
adc
es
out
rcl
aam
cli
(bad)
(bad)
(bad)
js
cdq
adc
or
sbb
stos
dec
repnz
stc
jns
es
imul
mov
jnp
add
test
(bad)
(bad)
(bad)
call
aad
iret
and
sahf
inc
cmp
push
dec
dec
ss
nop
cwde
in
mov
aad
and
ja
cli
add
cmps
sub
(bad)
or
out
dec
(bad)
push
daa
sub
(bad)
push
xlat
mov
into
fbld
xchg
push
add
(bad)
(bad)
(bad)
mov
and
cli
mov
add
and
lods
mov
push
or
pop
out
cvtps2pd
mov
daa
vpunpckhbw
pop
push
cmp
rcl
inc
jmp
(bad)
mov
gs
(bad)
aaa
jecxz
test
loope
or
cld
lahf
or
das
hlt
scas
ja
(bad)
jmp
pushf
inc
(bad)
lea
cmp
lock
jnp
clc
cmp
fld
(bad)
push
ins
retf
mov
jae
cmp
and
mov
gs
leave
jg
je
clc
mov
bound
stc
jne
(bad)
cmc
or
push
cmp
adc
cmp
xchg
jmp
lods
lods
mov
mov
inc
xor
inc
mov
mov
dec
jmp
stos
(bad)
test
push
adc
(bad)
mov
mov
ret
retf
cmps
inc
shl
inc
and
(bad)
(bad)
jmp
dec
xchg
mov
out
sub
sbb
repz
inc
pop
push
push
in
pop
jns
js
loopne
int3
aad
out
ds
test
mov
pop
push
(bad)
fst
(bad)
loopne
ins
mov
(bad)
mov
clc
mov
push
bound
xchg
clc
call
cld
xlat
inc
fimul
(bad)
fprem1
rol
call
xor
and
(bad)
(bad)
(bad)
mov
out
push
in
dec
cmp
mov
dec
inc
push
jle
ins
in
xor
repz
idiv
mov
and
cmp
aad
outs
sub
or
(bad)
(bad)
push
retf
repz
jnp
adc
(bad)
sbb
fcomi
repnz
xchg
aam
sub
mov
sub
scas
jmp
sub
les
fwait
cmp
lock
jmp
(bad)
jmp
jae
add
stos
xchg
test
adc
fmul
ja
jle
pop
out
cmps
and
lea
xchg
add
test
outs
ds
shl
(bad)
(bad)
(bad)
call
add
jo
fcomp
nop
stos
popf
cmps
jl
mov
mov
mov
sbb
pusha
fdivr
(bad)
(bad)
jmp
das
inc
cmp
mov
sbb
mov
sbb
push
or
in
movs
push
adc
cs
lds
jge
lds
(bad)
jg
sub
xor
sub
mov
push
les
mov
fcomip
push
xchg
outs
std
push
dec
jbe
icebp
int
repz
into
fisttp
inc
adc
imul
ds
and
cld
lea
(bad)
out
(bad)
hlt
adc
imul
fist
push
mov
lea
or
(bad)
(bad)
mov
jo
push
and
xor
add
xlat
xchg
xlat
fiadd
mov
(bad)
jg
inc
fsub
hlt
xchg
les
jmp
(bad)
out
loop
aas
ja
add
pop
imul
not
cmp
ds
mov
push
pop
sub
mov
sbb
(bad)
cmp
push
sbb
sbb
dec
rcr
sbb
pushf
lds
jp
inc
mov
(bad)
(bad)
jg
gs
mov
pop
popa
in
data16
aam
cmp
push
sub
test
(bad)
(bad)
jns
pop
and
ret
add
mov
test
push
fwait
jne
(bad)
(bad)
cmp
js
ds
stos
hlt
or
fs
leave
mov
call
jmp
mov
adc
enter
iret
mov
sar
fcomip
scas
push
adc
xor
push
ins
mov
scas
xor
call
or
jmp
inc
mov
(bad)
(bad)
cli
xchg
push
sub
sub
mov
xchg
inc
int
sub
mov
movs
dec
dec
mov
sub
inc
xor
xlat
lea
int3
hlt
lods
and
mov
aaa
out
inc
cld
push
jne
pusha
dec
ins
cld
mov
xchg
imul
xchg
ins
mov
mov
(bad)
inc
repnz
xchg
or
pop
scas
in
fcom
mov
jb
int
cli
jmp
cmc
lar
mov
(bad)
jmp
stc
mov
pop
ds
fnsave
jge
jne
mov
popa
pop
es
cmp
cwde
inc
int3
dec
bound
jb
mov
xor
mov
push
push
mov
jmp
push
outs
inc
stc
xchg
push
test
lods
sub
test
mov
mov
sbb
inc
sub
leave
mov
push
inc
adc
call
jo
inc
add
ins
adc
lds
dec
jno
push
movs
mov
mov
jle
inc
mov
inc
and
(bad)
jmp
iret
sub
in
push
and
push
out
xor
push
jmp
out
(bad)
out
outs
xor
rol
mov
adc
call
aam
fptan
mov
call
mov
pop
sub
daa
jbe
pushf
cmps
sub
fnstenv
lock
xor
lock
out
add
dec
stc
(bad)
jg
jmp
dec
shl
inc
jle
cmp
pop
cmp
enter
stc
outs
(bad)
shl
mov
jmp
cdq
loopne
lds
lods
xor
pop
add
jg
mov
repz
bound
mov
inc
enter
(bad)
dec
mov
(bad)
out
stos
inc
imul
inc
sbb
inc
cld
push
adc
jns
push
cmp
in
lahf
pop
and
dec
xor
jg
pusha
and
loopne
les
cmp
movs
mov
mov
xchg
popf
nop
xchg
push
xchg
mov
mov
dec
mov
pushf
mov
xchg
ja
retf
(bad)
cli
(bad)
(bad)
inc
pop
sub
bound
mov
mov
inc
cmp
out
(bad)
xchg
(bad)
inc
adc
add
lods
sub
add
cmp
dec
(bad)
sub
jle
scas
ins
inc
push
(bad)
sub
dec
ret
int3
jmp
(bad)
call
fmul
repnz
lahf
(bad)
cmps
push
std
clc
icebp
xchg
pop
mov
jge
cmp
adc
test
add
xor
in
jns
out
xchg
dec
jle
xor
dec
push
ret
repz
mov
push
fistp
jecxz
lahf
loop
add
loop
enter
pop
mov
xchg
jg
test
aam
mov
fidivr
pop
iret
add
(bad)
(bad)
call
arpl
mov
dec
add
sbb
xchg
bound
shl
mov
dec
sub
(bad)
(bad)
(bad)
(bad)
cmp
dec
mov
adc
ret
loope
mov
shl
shl
and
imul
(bad)
push
push
sub
push
xor
jb
sub
jb
sahf
add
mov
jg
(bad)
inc
mov
cmps
dec
adc
mov
pop
inc
jno
dec
pop
mov
xor
aad
icebp
daa
xor
sahf
push
mov
fsub
and
call
mov
lds
rol
outs
lods
cld
fsub
movs
ins
mov
and
in
jbe
xlat
dec
(bad)
(bad)
call
lods
xchg
aad
jne
xor
shl
(bad)
xchg
imul
push
inc
jns
pop
dec
sub
jmp
pop
repnz
popa
in
or
(bad)
(bad)
sahf
mov
and
inc
out
(bad)
jg
ja
(bad)
aad
jnp
dec
leave
adc
fimul
or
add
jmp
inc
push
test
pop
ficom
pop
push
xor
int3
pop
cmp
mov
aaa
test
(bad)
pop
push
(bad)
(bad)
mov
jno
(bad)
imul
dec
xchg
sahf
inc
jbe
je
or
dec
pusha
xlat
stc
outs
xlat
shl
stc
ja
pop
dec
loopne
sub
jmp
imul
icebp
dec
add
inc
push
int3
stc
das
sbb
mul
(bad)
(bad)
call
les
das
stos
jl
sub
jge
iret
scas
cmps
pop
jne
(bad)
jmp
inc
fld
lods
xor
pusha
(bad)
in
hlt
popa
cs
clc
dec
push
jnp
test
xchg
sahf
test
sub
(bad)
inc
cmp
xchg
mov
gs
cmps
adc
inc
loope
inc
ins
jge
cmps
outs
inc
ins
inc
repz
daa
xchg
push
cld
(bad)
call
mov
inc
arpl
jbe
mov
jnp
imul
pop
call
add
add
popa
int
jmp
push
(bad)
(bad)
(bad)
push
rol
int
xor
adc
popa
jl
rol
pop
movs
xor
rol
lods
sub
(bad)
mov
ins
out
enter
int3
dec
pop
sbb
pop
xor
jg
loop
pop
pop
ficom
(bad)
(bad)
dec
jb
sbb
data16
shl
cmp
div
in
jnp
(bad)
(bad)
fisttp
in
or
mov
adc
add
xchg
adc
jae
dec
sbb
xlat
xchg
mov
adc
(bad)
(bad)
(bad)
(bad)
sbb
mov
sahf
and
xchg
test
pop
mov
cmp
add
call
sbb
xchg
dec
adc
xchg
ror
hlt
xor
clc
ja
les
mov
xchg
jmp
xor
lods
rcr
dec
jmp
or
aam
jns
rcl
clc
(bad)
push
mov
icebp
dec
cmp
jle
cmp
les
mov
sub
xlat
stos
adc
stos
xchg
test
loope
fwait
inc
mov
pusha
mov
dec
pusha
and
cld
or
xchg
les
dec
add
(bad)
jg
dec
mov
adc
xchg
mov
jns
mov
lock
clc
jmp
loopne
aas
mul
mov
sub
(bad)
cli
jns
hlt
ja
add
(bad)
add
(bad)
mov
xlat
dec
mov
test
and
ret
pop
imul
enter
fisttp
sub
pop
(bad)
mov
test
cli
or
idiv
je
pop
or
xchg
test
jb
sub
ja
ss
jmp
cld
(bad)
out
clc
cmps
push
jno
push
fs
call
dec
jmp
adc
jge
mov
xchg
lods
mov
sbb
push
std
call
sti
pop
dec
not
cmps
jno
dec
dec
ret
adc
(bad)
(bad)
call
cld
ins
pop
jbe
add
push
imul
mov
adc
stos
call
inc
retf
test
ss
add
aaa
xchg
push
sbb
pop
adc
jmp
mov
cmps
sub
add
fs
(bad)
mov
(bad)
dec
inc
mov
and
sti
ds
adc
add
(bad)
(bad)
(bad)
mov
js
lods
cli
stos
sbb
mov
clc
les
sub
mov
test
adc
jg
jmp
jo
ins
xlat
cmc
or
(bad)
and
dec
lds
bound
jns
dec
push
add
sub
lock
mov
mov
popf
(bad)
(bad)
(bad)
dec
je
sbb
pop
mov
outs
retf
adc
iret
icebp
shl
jmp
(bad)
dec
jae
mov
jo
fcomip
xchg
add
or
enter
movs
cmp
xor
call
test
add
xor
jns
aam
ret
shr
jge
xor
cmps
dec
inc
add
jbe
sar
pop
aad
call
stos
pop
adc
and
mov
xor
adc
inc
sub
aaa
hlt
push
push
sti
fisttp
cmp
xchg
mov
je
push
push
clc
call
enter
pop
out
test
lea
shr
scas
into
cs
fdivp
jne
scas
mov
mov
shl
mov
aam
jg
call
mov
aam
xor
or
push
jle
or
stos
mov
sub
and
dec
dec
mov
shr
dec
out
adc
mov
cli
jmp
(bad)
inc
bnd
jg
mov
retf
inc
ret
mov
(bad)
add
jbe
push
or
cmp
test
xlat
adc
std
add
mov
push
pop
adc
adc
mov
popf
jmp
push
inc
arpl
data16
ins
dec
outs
hlt
aaa
rcl
push
lods
and
push
stos
int3
sbb
mov
(bad)
call
arpl
cmp
mov
call
jp
mov
fsub
xor
xchg
retf
push
or
sbb
adc
cli
adc
mov
daa
sub
cmp
add
mov
sub
add
mov
jmp
ins
imul
cmp
mov
inc
push
pusha
ja
(bad)
inc
lods
imul
in
sub
sub
pop
mov
rol
(bad)
(bad)
cli
(bad)
cmps
aad
loopne
imul
jbe
cmc
(bad)
push
sahf
dec
retf
mov
ins
aaa
sub
jns
(bad)
mov
lea
mov
jmp
mov
test
cmp
xlat
ds
leave
fdivr
jle
(bad)
(bad)
(bad)
push
in
fisttp
cli
xchg
mov
mov
fcom
sbb
push
xor
nop
mov
(bad)
jmp
push
xor
add
xor
push
stc
adc
rcl
clc
outs
scas
jge
jg
jmp
ds
fld
js
fcmovnu
sub
jnp
push
scas
mov
movaps
jb
(bad)
call
and
ins
or
cmp
paddd
jle
fnstsw
push
iret
mov
mov
cmp
test
(bad)
das
cwde
scas
not
cmp
push
cmc
xor
cli
or
hlt
test
ret
jne
and
jmp
and
cwde
dec
sub
in
xor
adc
or
sbb
(bad)
(bad)
jmp
daa
xor
adc
(bad)
inc
fldcw
mov
int
dec
das
pusha
push
out
(bad)
(bad)
(bad)
call
xchg
movs
scas
mov
fidiv
dec
xchg
aad
mov
rcl
(bad)
inc
bound
sub
sub
cmp
push
push
pop
fs
jae
inc
clc
(bad)
fnstenv
ret
mov
mov
es
jmp
mov
dec
(bad)
cmp
int3
inc
cmp
mov
and
and
arpl
cld
(bad)
cmp
inc
stc
das
sub
shr
mov
jg
or
(bad)
push
sub
add
and
adc
dec
scas
fist
(bad)
(bad)
push
jmp
lods
jg
outs
in
push
mov
push
inc
mov
adc
(bad)
call
into
xchg
or
test
xchg
aad
fimul
mov
jmp
dec
and
arpl
fdivr
std
jne
push
cld
(bad)
(bad)
(bad)
std
pop
mov
xchg
bound
push
cli
mov
sbb
sar
(bad)
(bad)
call
mov
and
iret
or
rcl
aam
or
cmp
(bad)
jno
or
cmps
xor
mov
stos
push
enter
cdq
mov
in
outs
icebp
inc
dec
sub
mov
xchg
icebp
jmp
out
push
mov
sbb
adc
xchg
fcomp
mov
ins
push
jb
mov
inc
(bad)
(bad)
(bad)
(bad)
cli
dec
jmp
pop
sub
sbb
std
mov
push
pop
pop
xchg
sub
mov
(bad)
push
arpl
pushf
dec
and
and
test
cwde
fsubr
and
mov
inc
add
xchg
push
dec
addr16
sar
(bad)
jg
add
leave
data16
dec
(bad)
mov
and
xchg
outs
test
inc
(bad)
(bad)
(bad)
(bad)
call
pop
sahf
into
cdq
clc
arpl
retf
pop
sub
xchg
push
mov
(bad)
call
lock
dec
dec
mov
imul
jecxz
loopne
dec
es
stc
clc
add
loope
push
mov
outs
ins
push
ins
sar
inc
pop
test
pop
dec
test
out
loope
sbb
jp
jp
adc
lock
cli
test
ins
fidiv
movs
pop
in
(bad)
sub
test
sub
clc
(bad)
jns
aaa
adc
mov
add
test
(bad)
cmp
aam
clc
loopne
mov
xor
push
fwait
cdq
inc
clc
pop
call
and
mov
aad
xchg
xchg
movs
push
xchg
jecxz
data16
stos
dec
sub
add
ja
sub
xor
pushf
jns
add
xchg
pop
(bad)
(bad)
(bad)
dec
scas
fst
mov
and
jmp
clc
retf
lahf
sbb
jg
aad
mov
or
into
in
fnstsw
jae
or
xchg
call
jl
dec
jns
mov
sub
xchg
lds
sbb
pop
aaa
inc
(bad)
push
xor
addr16
mov
imul
retf
push
inc
leave
inc
xchg
ss
inc
sahf
mov
(bad)
jmp
adc
gs
push
(bad)
jge
(bad)
faddp
in
(bad)
(bad)
jmp
(bad)
in
outs
jg
mov
mov
in
dec
jl
jae
xor
dec
arpl
xor
mov
pop
(bad)
push
sahf
paddb
sahf
je
pop
mov
das
mov
or
call
fistp
add
mov
xchg
pop
scas
dec
inc
mov
inc
(bad)
(bad)
(bad)
(bad)
jp
jmp
xchg
adc
jp
add
aam
cmp
push
aaa
out
pop
repnz
cmp
push
pop
pop
xor
inc
ja
push
test
out
pop
icebp
mov
stos
pop
dec
(bad)
xchg
sbb
retf
inc
dec
mov
ins
xchg
and
aad
or
es
(bad)
xchg
mov
cli
clc
repnz
add
mov
and
lods
data16
xor
and
pop
add
cmps
push
gs
mov
ja
(bad)
(bad)
(bad)
fstp
sbb
stos
pushf
lods
mov
adc
(bad)
xor
sbb
clc
(bad)
ins
popf
out
jecxz
inc
xor
(bad)
push
xor
inc
stos
out
enter
dec
stos
jmp
sub
retf
rcr
(bad)
(bad)
(bad)
push
jne
xchg
aaa
dec
add
pushf
repz
mov
mov
ret
fldcw
pop
xor
in
popf
push
mov
mov
adc
and
std
scas
dec
jb
and
push
mov
in
loope
stos
(bad)
outs
clc
push
mov
int3
fs
and
dec
jae
fisubr
inc
shr
and
pop
and
jns
je
adc
dec
adc
xchg
test
(bad)
push
into
jge
cmp
push
(bad)
cmp
inc
addr16
and
push
stos
jnp
add
std
(bad)
(bad)
(bad)
fild
ss
jno
fist
enter
jno
stos
dec
gs
or
pop
adc
push
int3
push
std
mov
idiv
in
pushf
sti
jg
neg
fst
call
or
cld
cld
ret
mov
sahf
mov
test
(bad)
(bad)
jmp
cmp
rcl
mov
sahf
push
shr
stos
pop
adc
gs
xchg
mov
push
mov
xor
or
in
or
(bad)
(bad)
dec
out
mov
fs
push
(bad)
xchg
fidivr
add
dec
pop
shl
cmp
(bad)
(bad)
inc
ins
mov
call
fsub
sbb
cmp
fwait
push
dec
mov
es
push
retf
ret
push
cmp
in
shr
test
retf
mov
aad
mov
mov
push
ss
and
mov
inc
addr16
(bad)
(bad)
(bad)
(bad)
fdiv
mov
lock
cmp
or
movs
and
cld
inc
and
in
xchg
fwait
ja
(bad)
(bad)
(bad)
jmp
std
jbe
or
inc
movs
repnz
jge
aad
stc
lods
lods
je
mov
xchg
(bad)
inc
add
dec
add
jp
jns
cmp
mov
mov
jle
outs
imul
enter
xor
(bad)
(bad)
jg
or
cmp
mov
push
mov
push
or
retf
arpl
jne
jb
or
(bad)
(bad)
(bad)
call
popf
sbb
push
div
push
inc
add
inc
push
mov
movs
out
xor
and
dec
xor
out
scas
fbstp
ror
pop
sbb
(bad)
jg
out
data16
push
sti
(bad)
xchg
inc
push
hlt
jmp
aam
cld
mov
js
ja
mov
je
mov
push
add
push
mov
mov
cli
dec
(bad)
dec
mov
sub
aad
jge
add
and
aam
or
call
hlt
or
retf
je
mov
call
(bad)
(bad)
(bad)
mov
retf
neg
dec
lock
push
fimul
shl
and
dec
(bad)
jg
(bad)
mov
nop
(bad)
call
outs
jl
int
stc
gs
enter
call
neg
mov
adc
scas
dec
aam
xchg
cdq
inc
xchg
xlat
push
adc
cld
(bad)
(bad)
(bad)
call
(bad)
and
push
shl
movs
and
pop
sbb
iret
push
sub
mov
mov
aas
push
inc
push
enter
adc
or
cld
inc
jg
iret
imul
adc
clc
arpl
mov
inc
mov
call
sbb
mov
cmp
xchg
xchg
jmp
mov
shl
cmp
xchg
or
cmc
sub
inc
(bad)
(bad)
(bad)
dec
adc
cwde
jbe
fcmovnu
or
mov
bound
loope
or
push
sbb
dec
inc
neg
stos
(bad)
stos
(bad)
(bad)
call
imul
repz
retf
stos
xor
nop
mov
outs
jb
sub
sti
mov
sub
daa
pop
shl
loope
or
or
push
scas
fstp
cmp
mov
stos
mov
mov
and
(bad)
(bad)
call
enter
pop
stos
and
sub
jg
mov
push
das
cmp
shr
mov
ins
aaa
pop
aaa
std
jno
icebp
mov
jg
sub
retf
call
sbb
xor
lea
pop
cmp
cmps
js
shl
bswap
push
lods
push
jbe
aas
adc
js
inc
test
push
fnstcw
jmp
mov
aam
adc
mov
inc
test
jp
sahf
jnp
das
sti
jg
mov
fs
dec
sub
inc
add
shl
(bad)
jg
mov
mov
cmp
jge
(bad)
dec
mov
cmps
adc
add
call
xor
adc
mov
(bad)
mov
pop
mov
pop
(bad)
mov
jp
in
mov
jmp
std
and
call
jmp
and
dec
fdivr
or
push
sub
dec
mov
(bad)
hlt
(bad)
(bad)
push
jmp
cs
mov
sti
mov
(bad)
push
xor
xor
pushf
retf
and
adc
std
scas
lea
and
(bad)
(bad)
call
dec
(bad)
inc
sahf
jno
add
push
push
dec
xor
repnz
jmp
cmp
(bad)
(bad)
call
jmp
jecxz
adc
cli
or
jmp
jecxz
cmp
mov
or
cmp
dec
std
cli
stos
jo
stos
pop
mov
inc
vpcomd
std
push
movs
fdiv
xchg
xor
or
call
sub
mov
dec
ficomp
dec
cmp
xlat
movs
ins
in
mov
mov
hlt
scas
arpl
push
dec
jp
ror
out
cld
cmp
je
mov
inc
sbb
nop
lods
in
lods
hlt
mov
das
fs
pop
sub
mov
dec
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
mov
xor
adc
and
sbb
aaa
out
loope
inc
cli
cmp
xchg
stos
pop
xor
sahf
adc
nop
sti
das
test
push
ficomp
inc
test
(bad)
push
xor
rol
push
(bad)
ss
sbb
cmp
popa
pop
ror
mov
inc
lods
mov
sahf
call
in
in
pop
jmp
pop
(bad)
(bad)
(bad)
call
or
lods
(bad)
stc
test
sbb
hlt
xor
stc
aas
pop
mov
jge
add
inc
jl
fwait
ud0
jmp
outs
(bad)
repnz
jno
out
sbb
mov
mov
sub
mov
(bad)
(bad)
(bad)
call
push
add
add
pop
dec
cmp
xlat
push
xchg
inc
push
cmps
iret
sahf
jl
or
pusha
frstor
cmc
jmp
test
lods
xchg
out
(bad)
sbb
fild
inc
jmp
in
inc
nop
mov
iret
mov
dec
pop
sbb
xchg
pop
(bad)
dec
cmc
dec
(bad)
(bad)
(bad)
(bad)
cld
shr
ds
jb
pop
fidivr
push
mov
push
cs
dec
test
pop
xor
or
stos
or
dec
enter
or
dec
mov
cmp
mov
daa
push
stc
or
mov
ret
test
jno
(bad)
(bad)
(bad)
(bad)
mov
pop
jno
(bad)
inc
xchg
inc
in
xor
es
sub
sub
retf
dec
ret
dec
(bad)
out
(bad)
mov
lock
test
shr
test
test
(bad)
inc
bound
add
mov
cmp
inc
(bad)
call
dec
dec
ror
outs
adc
mov
xor
leave
bound
and
arpl
jg
fwait
in
test
inc
aam
js
and
stos
inc
movs
adc
ret
sub
and
inc
loope
sub
scas
adc
and
addr16
fwait
mov
pushf
jl
dec
mov
in
shl
das
adc
lods
test
or
mov
lahf
add
(bad)
mov
xchg
leave
sub
cmp
js
dec
movs
cwde
(bad)
(bad)
jmp
out
cwde
pushf
call
rcr
leave
repz
ss
cmp
loope
mov
bound
sub
fwait
or
jmp
xor
add
mov
sbb
ffree
or
pop
in
call
dec
jo
bound
(bad)
(bad)
(bad)
jmp
lahf
mov
in
jl
test
sbb
mov
xor
sub
call
adc
jge
sub
xchg
mov
clc
icebp
push
pop
pop
pop
push
jno
cld
(bad)
call
push
bound
jl
pop
repnz
cmp
xor
jne
inc
mov
jg
add
add
mov
(bad)
(bad)
(bad)
jle
xor
ds
aas
clc
and
inc
xor
movs
js
push
push
adc
(bad)
(bad)
jmp
push
sbb
jae
cmp
cmps
mov
mov
push
xchg
mov
xchg
retf
xor
jo
and
sub
pop
sbb
jns
lahf
cmp
test
pushf
xchg
lea
(bad)
call
xchg
stos
xor
stos
shr
cwde
mov
fld
test
add
out
out
jns
inc
push
pop
dec
fdiv
inc
ror
adc
aad
jno
in
push
(bad)
jmp
or
inc
mov
dec
outs
frstor
mov
repnz
xchg
(bad)
(bad)
mov
xchg
jns
call
mov
leave
mov
(bad)
fsubp
popa
jnp
push
mov
pop
and
(bad)
(bad)
jmp
mov
int3
add
pop
jecxz
sbb
adc
push
gs
jmp
inc
clc
push
add
xor
push
mov
push
and
adc
call
movs
xor
jl
icebp
xchg
push
shl
mov
mov
js
dec
fcmovbe
and
and
inc
push
xor
call
push
add
push
je
adc
test
call
idiv
sbb
xchg
nop
pop
int3
add
jmp
add
ja
dec
xor
imul
pop
into
dec
(bad)
(bad)
dec
jg
ss
adc
mov
fdiv
sub
xor
sub
inc
dec
clc
call
inc
(bad)
sub
xor
icebp
mov
fnstcw
scas
mov
sti
das
fisttp
pop
sar
(bad)
(bad)
mov
(bad)
xor
push
fld
pushf
mov
add
mov
stos
pop
in
test
(bad)
push
sbb
xchg
jnp
mov
mov
cdq
inc
cmps
xor
sub
pop
imul
fadd
out
(bad)
pop
cld
push
pop
arpl
inc
cld
(bad)
cmp
cld
icebp
iret
loopne
iret
fisttp
sbb
mov
arpl
sub
popa
adc
cmp
loop
fistp
pop
icebp
cld
fistp
inc
jp
or
or
push
push
cld
sar
js
imul
sti
scas
int
hlt
das
xchg
dec
mov
hlt
xor
repnz
add
movs
(bad)
(bad)
call
ror
movs
add
sahf
mov
ror
push
xchg
mov
or
enter
push
hlt
jno
jl
jb
loopne
jne
pop
inc
cmp
sub
(bad)
(bad)
call
rcl
in
jnp
adc
(bad)
push
jge
mov
aas
mov
(bad)
mov
mov
cs
(bad)
jmp
ss
inc
sub
mov
cwde
fdiv
mov
mov
and
movs
xchg
adc
ret
(bad)
(bad)
jg
out
fdivr
cmp
jb
sti
xchg
xor
jae
scas
or
mov
jmp
xchg
(bad)
mov
xchg
jp
cmp
mov
xor
call
ja
push
push
rcr
add
lds
sub
xor
inc
fisubr
stc
movs
outs
inc
jecxz
pop
lods
jb
mov
ds
call
mov
adc
and
mov
sbb
jp
mov
sub
mov
dec
push
sbb
ins
fbstp
test
lahf
xor
jae
dec
daa
xchg
retf
gs
xor
cld
(bad)
ficom
jmp
and
jmp
jg
outs
xor
pusha
loop
cmp
rcl
xor
add
not
or
movs
jno
lds
bnd
enter
adc
push
nop
(bad)
fisttp
clc
in
cmp
das
mov
sar
fadd
or
(bad)
(bad)
(bad)
(bad)
add
stc
cmp
push
dec
das
sub
mov
cmp
hlt
(bad)
in
jbe
aaa
push
call
jg
push
aaa
or
fdivr
and
int
(bad)
(bad)
dec
pop
sti
add
stos
mov
loop
push
push
out
ins
sbb
push
(bad)
ja
aam
sub
fs
icebp
int3
in
jg
popa
mov
int3
pushf
jmp
xlat
mov
push
sub
mov
and
popa
mov
sbb
jmp
shld
push
imul
cmps
inc
sar
(bad)
(bad)
jmp
shr
dec
test
xor
movs
jle
inc
sbb
jp
pop
test
(bad)
(bad)
(bad)
dec
rol
call
inc
inc
cdq
mov
push
aas
cmp
rcr
fdivr
mov
adc
jmp
mov
pop
jne
jmp
push
xor
sub
pop
clc
(bad)
push
int3
mov
pusha
dec
xor
or
es
cmp
and
scas
pop
push
sbb
stos
mov
sbb
test
shr
bound
xchg
xor
(bad)
call
xor
out
cli
retf
sub
push
jo
adc
adc
mov
ins
int
pushf
mov
mov
push
mov
and
cmp
adc
(bad)
(bad)
(bad)
jg
inc
jg
cmps
mov
mov
inc
cmp
sete
jecxz
dec
pop
pop
lea
ficomp
mov
mov
mov
cmc
mov
cmps
cmps
daa
mov
cmp
sbb
rcr
pusha
sahf
mov
push
sbb
(bad)
(bad)
(bad)
(bad)
mov
or
xor
mov
nop
mov
loope
sbb
jns
pushf
ins
icebp
call
jmp
mov
leave
std
fistp
sub
loope
cmps
pusha
pusha
mov
ins
mov
fdivp
xlat
pusha
jmp
in
jp
adc
(bad)
push
mov
addr16
out
cmp
retf
test
ror
enter
fs
(bad)
(bad)
(bad)
dec
gs
scas
inc
inc
dec
add
sar
mov
jno
cmps
out
call
ins
cld
leave
cmps
mov
push
ds
(bad)
test
xchg
shr
xchg
(bad)
(bad)
(bad)
jmp
sar
jmp
mov
xor
sub
adc
aad
push
xchg
push
cld
(bad)
daa
dec
push
and
mov
mov
ss
sbb
out
xor
mov
cmp
adc
dec
sbb
sub
mov
dec
dec
adc
mov
dec
retf
sar
call
jl
mov
scas
and
test
mov
mov
das
inc
das
jg
aas
sti
sar
not
lahf
(bad)
(bad)
(bad)
call
cmp
mov
into
(bad)
int
dec
pushf
cmp
inc
cmp
pop
fnstcw
lahf
or
das
icebp
mov
rcr
nop
fst
push
adc
pop
mov
xchg
mov
push
cld
pop
push
jecxz
fld
and
xchg
inc
xor
push
es
scas
fsubp
div
xor
loop
rcl
stos
fnstcw
ja
and
in
xchg
popf
mov
cmc
xchg
fdivrp
scas
push
mov
inc
repz
mov
add
adc
leave
jle
inc
mov
adc
loopne
and
movs
inc
pushf
pop
jb
(bad)
(bad)
push
dec
ror
fsub
outs
adc
jle
jl
mov
out
mov
and
aaa
add
out
orps
mov
imul
push
outs
ins
(bad)
daa
fist
mov
out
add
sub
dec
push
or
cli
aam
adc
ja
mov
mov
bound
das
lock
(bad)
jecxz
fldcw
push
sub
ror
push
and
or
call
xor
pop
sbb
push
(bad)
lahf
push
mov
call
or
mov
pop
cli
dec
(bad)
sar
(bad)
push
jge
icebp
and
mov
sub
imul
mov
xchg
jmp
in
lock
cwde
mov
iret
xor
xor
pop
pushf
xchg
fild
pusha
in
cmps
sbb
sub
icebp
clc
fcomip
fwait
lods
adc
inc
call
loopne
and
(bad)
js
push
and
imul
xor
xchg
and
es
mov
or
(bad)
inc
(bad)
fcom
(bad)
sbb
(bad)
cld
stos
jge
ins
fild
scas
xor
add
push
push
jge
sar
push
cli
ds
out
cmp
lock
out
nop
xor
inc
adc
add
inc
stos
aam
and
push
(bad)
(bad)
call
push
call
or
sbb
fucom
lods
idiv
cmp
push
mov
mov
jmp
xor
outs
mov
cmps
sbb
sub
call
stos
dec
loopne
jae
out
inc
sbb
cmp
popa
sbb
es
retf
jo
test
dec
push
xchg
in
inc
mov
inc
xor
rol
imul
sahf
push
cwde
cli
(bad)
jmp
xchg
dec
push
sub
sbb
push
int3
push
inc
sbb
cld
mov
fs
sub
ins
(bad)
call
push
movs
arpl
mov
mov
jne
rcr
xor
add
mov
movs
mov
in
aaa
imul
(bad)
(bad)
inc
xor
adc
(bad)
nop
popa
xor
sbb
pop
inc
dec
aas
(bad)
mov
jg
inc
dec
push
or
hlt
jge
ds
inc
push
and
mov
jecxz
hlt
push
add
repz
sub
(bad)
mov
iret
loop
and
call
dec
push
(bad)
mov
dec
in
fsub
fisttp
test
(bad)
jmp
loope
push
jecxz
jne
add
std
out
movs
mov
in
das
jp
sbb
jns
(bad)
jmp
or
movs
shl
inc
mov
mov
es
std
(bad)
call
pushf
call
push
mov
in
xchg
js
sbb
jae
out
mov
mov
(bad)
(bad)
jmp
jae
sub
icebp
xchg
xchg
loope
mov
mov
in
lods
clc
out
mov
pop
jl
mov
xchg
adc
jl
sub
inc
push
jg
lock
ds
pop
scas
add
lock
ja
shr
push
addr16
rcl
call
cmp
ins
dec
movs
push
mov
daa
push
adc
(bad)
imul
mov
xchg
iret
inc
xor
push
fisttp
sub
or
jb
movs
xchg
jmp
pop
sbb
fdivp
adc
sbb
mov
jg
mov
xchg
xor
clc
jae
pop
(bad)
iret
fdivr
(bad)
(bad)
(bad)
jmp
icebp
loop
ja
pop
xchg
aaa
into
jns
and
lods
jmp
in
ins
push
xchg
pusha
(bad)
sbb
enter
int
(bad)
dec
jmp
inc
pop
or
xor
call
ret
and
mov
inc
jns
and
neg
out
sub
mov
idiv
(bad)
push
add
adc
push
push
hlt
mov
fldcw
cld
dec
mov
(bad)
call
dec
add
add
test
dec
bound
mov
retf
pop
inc
cld
jg
sahf
aas
mov
jmp
push
ds
sbb
lahf
(bad)
(bad)
jg
shr
popf
ds
in
xor
xchg
fnstsw
arpl
mov
adc
mov
jg
or
js
and
ins
stc
mov
pop
xor
ret
jge
xchg
add
js
sub
(bad)
jmp
inc
ror
movs
repnz
dec
mov
aad
shl
in
loop
or
sahf
lea
and
(bad)
hlt
jg
fldlg2
jg
test
outs
or
not
mov
in
pop
mov
clc
push
in
mov
int3
scas
sbb
push
inc
retf
test
lea
inc
(bad)
(bad)
jmp
movs
movs
and
push
push
jmp
adc
test
fbstp
jmp
std
inc
add
mov
fld
dec
bsf
loopne
loope
sbb
jb
push
sbb
cmp
fcom
mov
daa
jo
cld
inc
adc
retf
lea
xchg
addr16
push
pop
mov
cli
xchg
adc
jg
adc
ss
push
out
pop
stc
mov
jbe
xor
and
adc
pop
inc
repz
push
pop
sub
jb
mov
(bad)
(bad)
push
xchg
idiv
cmp
xchg
adc
in
aad
mov
or
and
adc
aad
mov
call
cmc
popa
xchg
test
and
xchg
mov
fst
sub
push
je
push
test
lock
fdiv
mov
or
es
sub
add
fistp
cmp
test
inc
btc
lods
cmp
jle
adc
(bad)
(bad)
mov
in
ins
or
push
or
jmp
in
out
data16
inc
mov
call
stos
(bad)
push
test
sub
ss
cdq
ret
call
inc
cmps
cmps
mov
xchg
fisub
lea
adc
push
addr16
jnp
pop
fwait
xchg
ins
push
(bad)
call
push
mov
adc
test
fcom
cli
into
or
fisttp
push
mov
mov
icebp
mov
icebp
pushf
dec
pusha
jg
or
jmp
inc
xchg
jg
(bad)
(bad)
(bad)
(bad)
fcmovne
stc
aad
pop
xchg
scas
mov
ins
cmp
fisubr
not
mov
in
pop
jno
les
inc
pop
ret
lods
iret
mov
xor
inc
and
pop
mov
mov
(bad)
(bad)
out
pop
loopne
cmp
push
jmp
pop
inc
test
mov
data16
push
push
jns
push
and
clc
mov
ficom
mov
xchg
sar
pop
(bad)
dec
jmp
adc
adc
pop
sub
std
xchg
fs
jnp
ins
push
mov
aas
pop
ja
(bad)
and
dec
std
ficomp
inc
inc
adc
cmp
(bad)
call
jbe
popa
retf
hlt
into
jle
nop
dec
cmp
test
pop
stos
fwait
ror
push
in
and
adc
(bad)
(bad)
(bad)
mov
adc
xchg
jg
sbb
enter
mov
aaa
xchg
lds
cli
xchg
mov
sbb
pushf
nop
and
loop
and
shr
and
push
repz
cmp
mov
nop
sar
mov
fild
inc
sbb
stc
lahf
ja
retf
jne
(bad)
(bad)
call
sub
(bad)
fdivr
mov
les
fsqrt
xchg
inc
mov
mov
sub
pusha
xor
mov
(bad)
jmp
retf
(bad)
mov
xchg
sub
inc
dec
sub
scas
lahf
jno
sti
(bad)
(bad)
(bad)
call
lods
dec
adc
mov
fldcw
nop
sub
retf
mov
(bad)
call
sbb
sbb
inc
cmps
hlt
mov
je
dec
ret
test
push
dec
adc
addr16
pop
xchg
movs
adc
jecxz
mov
shl
(bad)
xchg
jb
add
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
jo
pop
jl
out
in
jo
push
fcmovnu
enter
xchg
mov
inc
scas
inc
sahf
dec
mov
mov
cmp
loope
and
mov
nop
cmc
mov
jmp
lods
sub
cmps
pop
into
jmp
cli
xor
dec
aas
popa
mov
scas
fnsave
pop
sub
mov
xor
push
jne
stos
xor
mov
mov
(bad)
ins
push
inc
shl
and
fld
pop
add
cmps
ds
call
nop
push
ror
shl
pop
ret
jmp
cs
and
(bad)
(bad)
call
call
xlat
aad
pop
rcr
mul
out
mov
(bad)
(bad)
jmp
jle
jbe
jle
add
pop
mov
jnp
mov
inc
jle
jge
push
std
aad
mov
setns
cmps
xchg
loop
call
imul
inc
mov
test
rol
inc
(bad)
sbb
(bad)
fild
in
addr16
cmp
cwde
mov
jnp
sbb
loope
cmp
(bad)
(bad)
fstp
fldcw
mov
ret
call
pushf
sbb
fstp
pushf
mov
cmps
push
mov
push
inc
cwde
(bad)
(bad)
(bad)
dec
in
repz
int
(bad)
jmp
cmp
ror
sbb
xchg
or
jns
dec
adc
jl
ret
xchg
or
jb
jp
(bad)
inc
add
shr
mov
neg
pop
xchg
push
pop
fcomip
push
(bad)
call
pop
jmp
xor
into
dec
dec
call
cmp
ja
pop
int3
jno
push
movs
sar
movs
pop
outs
aam
scas
stos
ins
push
xor
xor
adc
(bad)
(bad)
(bad)
call
rol
mov
lods
in
or
mov
adc
dec
adc
(bad)
(bad)
jmp
xor
pop
imul
xor
add
mov
xlat
pop
ds
scas
jnp
aaa
sub
and
mov
adc
dec
rcl
(bad)
dec
stos
mov
and
daa
nop
or
adc
int3
pushf
mov
xchg
test
mov
or
mov
dec
out
fcom
icebp
dec
push
push
and
dec
bound
sbb
das
clc
cmp
xchg
xor
ds
or
cmps
aas
icebp
jns
sbb
loop
(bad)
(bad)
call
lods
pop
mov
stos
dec
push
div
jo
or
xor
cld
fild
cmp
daa
pop
(bad)
mov
fisub
sub
jg
pusha
push
je
(bad)
clc
xor
mov
mov
(bad)
(bad)
(bad)
out
cmp
sbb
lock
mov
push
(bad)
jns
std
inc
jle
jg
mov
js
mov
cli
scas
cmps
data16
pop
mov
aaa
out
mov
mov
push
sar
mov
add
mov
ins
retf
add
add
jmp
push
dec
mul
mov
add
cld
push
mov
pop
mov
fst
into
sub
xchg
add
(bad)
(bad)
jg
aad
add
push
adc
outs
mov
cdq
stos
in
inc
jmp
(bad)
fisttp
jno
adc
dec
inc
(bad)
sbb
adc
mov
xlat
ins
xchg
pop
mov
jg
(bad)
es
xchg
jbe
xchg
loopne
or
int3
sbb
push
call
dec
sahf
lods
dec
inc
jmp
aas
jns
jo
adc
inc
xchg
cwde
nop
xchg
jg
(bad)
call
dec
je
inc
lods
mov
arpl
push
jmp
(bad)
(bad)
jmp
pop
inc
cmp
pop
pop
mov
cmp
sbb
ins
dec
out
push
out
(bad)
jmp
ins
mov
in
adc
sub
bound
sbb
xor
jg
(bad)
push
stos
pop
scas
(bad)
imul
xor
inc
rcr
(bad)
(bad)
js
imul
sahf
cdq
mov
and
aam
xchg
retf
push
or
mov
test
adc
xchg
cli
cs
cld
rcl
(bad)
(bad)
(bad)
push
adc
jle
aas
ins
mov
sbb
add
mov
(bad)
scas
mov
add
cli
int3
push
lock
mov
jno
retf
push
push
sub
(bad)
inc
pop
and
lahf
shl
inc
xor
dec
pop
mov
rcl
in
push
and
dec
gs
cmp
popf
(bad)
fsubrp
stc
inc
push
fnstenv
test
(bad)
(bad)
dec
jle
xlat
(bad)
(bad)
cwde
push
fist
lahf
and
movs
push
int
sar
jmp
pop
(bad)
mov
fisub
mov
(bad)
or
das
pop
mov
add
(bad)
jmp
in
dec
adc
inc
xchg
out
ins
xlat
jno
cld
jno
cmps
pop
leave
(bad)
(bad)
(bad)
mov
jbe
fnsave
mov
sub
jmp
xchg
movs
sub
popa
loopne
stos
xchg
sbb
aam
icebp
pop
sbb
out
sub
leave
and
not
stos
pop
and
outs
(bad)
(bad)
cmp
push
add
mov
ret
xchg
dec
dec
cmp
mov
or
or
xor
(bad)
(bad)
jg
in
cli
mov
push
xchg
pop
sub
lock
in
in
test
(bad)
int
push
push
fisttp
scas
jnp
retf
movs
and
xchg
ret
out
pop
out
dec
shl
mov
add
(bad)
jmp
loope
into
movs
adc
mov
lods
dec
pop
loopne
lea
xchg
mov
cmps
ds
pusha
sub
(bad)
cmp
rol
xor
and
sub
lods
(bad)
(bad)
call
mov
add
sbb
push
fs
xchg
mov
mov
jge
cmps
mov
shr
in
lahf
pop
xchg
rcl
sbb
test
inc
movs
and
das
js
test
dec
add
ret
cdq
popf
(bad)
(bad)
jg
rol
mov
ins
fsubr
push
mov
inc
mov
rcr
cmp
jl
movs
scas
(bad)
jmp
jo
or
jmp
lods
repnz
sub
mov
(bad)
(bad)
(bad)
(bad)
inc
xor
clc
xor
js
repz
sbb
retf
sub
add
(bad)
(bad)
(bad)
push
sahf
repz
pop
xor
xor
nop
dec
dec
loop
pop
rcr
jno
pop
aaa
xchg
fimul
call
dec
aas
std
aas
mov
pop
out
ret
cmps
ret
inc
cmc
push
popa
jmp
(bad)
xchg
fst
cmp
push
dec
mov
(bad)
dec
outs
stc
pop
cld
mov
iret
jg
dec
jo
int3
sbb
iret
nop
dec
push
xor
jbe
(bad)
inc
push
xlat
out
push
mov
stos
jbe
cli
xchg
xchg
lahf
test
(bad)
jmp
jl
lods
sbb
test
fs
sub
retf
and
in
shr
fld1
cwde
sub
add
(bad)
(bad)
jle
push
push
test
mov
stos
inc
xchg
sahf
stc
sub
pop
dec
(bad)
cmps
jle
aaa
mov
ins
test
mov
xchg
fs
mov
and
pop
stos
and
or
sub
inc
enter
or
inc
stos
(bad)
(bad)
(bad)
cli
push
inc
sahf
dec
lock
in
jo
jmp
(bad)
and
xchg
cmp
adc
(bad)
(bad)
(bad)
call
mov
jne
jp
sbb
shl
or
or
push
out
dec
(bad)
popf
push
pusha
les
xor
pop
rol
cmp
lahf
in
sahf
mov
out
xor
mov
cmp
and
(bad)
(bad)
(bad)
mov
mov
mov
cdq
sbb
lods
xor
in
retf
outs
lahf
(bad)
loope
xchg
arpl
(bad)
(bad)
push
ja
out
mov
loop
adc
mov
push
mov
jp
sbb
mov
ss
ret
cli
retf
movs
adc
sti
aaa
add
lods
bound
(bad)
lock
mov
jnp
fst
cli
cs
popa
loopne
adc
out
dec
loope
sbb
or
cmp
in
and
or
(bad)
(bad)
call
(bad)
mov
sub
jl
stos
lods
xor
mov
push
push
xchg
cmps
pop
cwde
add
and
push
dec
into
push
xchg
xchg
push
mov
xchg
mov
push
cld
jge
adc
pmullw
xchg
cmps
into
(bad)
(bad)
(bad)
jmp
imul
or
iret
pop
add
(bad)
jle
jns
xor
cmp
xchg
loope
(bad)
(bad)
jle
pop
mov
loop
jns
lahf
adc
xchg
nop
mov
(bad)
mov
mov
popa
or
pop
mov
lahf
fdivr
imul
test
cmc
mov
clc
lock
ins
mov
aam
sub
(bad)
in
push
outs
sbb
std
pop
push
gs
mov
nop
mov
je
sub
push
imul
hlt
(bad)
fsub
or
(bad)
stc
xor
test
dec
cmps
and
jge
das
(bad)
(bad)
(bad)
dec
(bad)
fistp
xchg
or
dec
retf
mov
dec
push
lea
lock
push
dec
in
or
(bad)
push
(bad)
mov
popa
retf
clc
hlt
inc
iret
sbb
ret
and
mov
dec
inc
and
imul
mov
(bad)
(bad)
(bad)
inc
push
or
add
movs
aam
lds
data16
out
mov
scas
xlat
push
cld
fidivr
fbld
jmp
dec
mov
add
jmp
inc
pop
aad
outs
jmp
jb
movs
inc
call
or
push
add
stc
jge
xchg
(bad)
mov
(bad)
(bad)
(bad)
jle
push
inc
adc
sbb
push
xchg
sbb
and
int3
mov
retf
xor
xor
(bad)
(bad)
(bad)
(bad)
jmp
imul
bound
push
call
mov
dec
nop
(bad)
(bad)
jg
cmps
sub
aaa
aam
fnstsw
jl
out
mov
fwait
push
sar
dec
data16
add
in
and
add
iret
clc
aam
(bad)
(bad)
(bad)
(bad)
inc
xlat
pop
ja
jbe
fisub
fadd
js
aas
aaa
xor
push
push
sub
aam
inc
mov
push
dec
mov
(bad)
sbb
(bad)
(bad)
jmp
xor
sbb
add
mov
outs
inc
sub
ret
cld
stc
inc
pop
mov
(bad)
(bad)
push
mov
aaa
(bad)
aam
loop
xchg
mov
ret
fstp
xor
xor
sti
shl
lea
adc
enter
retf
(bad)
(bad)
(bad)
cmp
push
loope
push
push
cmovnp
sub
and
inc
not
or
(bad)
push
mov
and
push
pop
inc
sar
xlat
(bad)
mov
fimul
sar
xchg
js
gs
mov
sbb
(bad)
call
pop
adc
and
adc
push
into
sbb
push
inc
test
test
sti
push
adc
jecxz
call
les
popf
repz
rcl
lods
rcl
jg
(bad)
jmp
pushf
cmp
mov
imul
(bad)
(bad)
(bad)
jle
inc
dec
pop
pop
scas
jae
imul
push
xor
adc
mov
dec
sub
(bad)
jle
xchg
arpl
ins
push
cmp
dec
sub
push
jg
test
loop
sbb
pop
mov
fcmovb
cli
jbe
push
xchg
mov
jmp
stos
adc
xor
push
stos
pop
popa
sub
mov
inc
xchg
or
aam
(bad)
(bad)
(bad)
cli
push
fnsave
lahf
sti
mov
dec
mov
push
push
ret
jns
sbb
xor
push
clc
(bad)
(bad)
push
cs
imul
cs
fwait
jno
les
lods
sub
adc
(bad)
dec
dec
out
pushf
xchg
in
mov
aaa
ret
test
inc
cmp
(bad)
(bad)
fcomip
(bad)
and
fsub
addr16
leave
mov
mov
xlat
idiv
mov
(bad)
mov
mov
(bad)
cmp
stos
or
pop
(bad)
int
es
movs
(bad)
jmp
cmovge
sbb
loopne
iret
jg
enter
cld
outs
test
jp
jnp
ret
iret
fs
cld
mov
and
std
(bad)
push
(bad)
push
out
mov
neg
push
fist
dec
mov
(bad)
jg
out
out
push
dec
or
ret
sahf
test
test
(bad)
mov
cmp
jge
scas
push
pop
adc
inc
pop
int3
adc
sbb
fs
mov
pop
cld
cmp
cmp
aam
fbld
pop
jmp
pop
nop
cmp
sub
lahf
popa
fmul
jns
dec
cli
push
mov
and
mov
loopne
jmp
neg
mul
and
jno
jmp
mov
loopne
aaa
loopne
cli
pop
aad
mov
pop
cld
adc
mov
sbb
data16
(bad)
(bad)
dec
xor
cmp
ds
add
cmp
mov
xchg
outs
inc
jb
xchg
fst
imul
push
sbb
ins
mov
lea
or
psubsw
xor
push
sub
or
mov
sbb
aaa
mov
jbe
pusha
mov
xor
push
mov
daa
and
cdq
sub
mov
sbb
cmps
jp
mov
mov
test
or
xor
mov
mov
rol
mov
(bad)
jmp
and
pushf
pop
inc
mov
ror
push
lea
add
es
dec
cs
inc
sub
(bad)
(bad)
inc
jnp
mov
imul
xchg
jmp
mov
(bad)
ret
cmps
(bad)
(bad)
inc
jb
bound
mov
xlat
(bad)
ss
sub
popf
popf
(bad)
mov
sahf
jno
(bad)
dec
pop
inc
ret
stos
ins
data16
fdivr
sub
inc
hlt
shl
lock
add
ret
(bad)
std
jmp
loope
test
jmp
sti
push
xchg
mul
hlt
or
ds
cld
es
(bad)
outs
ret
lahf
std
push
call
std
sbb
cmp
(bad)
rcr
mov
clc
jp
(bad)
(bad)
call
out
(bad)
xchg
mul
outs
sti
gs
fiadd
test
clc
shr
inc
stos
inc
mov
(bad)
push
mov
daa
hlt
xchg
push
pop
mov
sbb
(bad)
push
and
dec
in
std
neg
mov
sub
push
cmp
sbb
push
(bad)
(bad)
jmp
push
in
dec
pop
cli
xchg
dec
add
pop
jp
push
ror
jg
push
cli
arpl
push
outs
lods
in
mov
in
adc
mov
sbb
xor
fild
inc
enter
dec
ins
push
sub
jo
ja
jmp
stc
sahf
loop
pop
inc
adc
(bad)
popf
sub
mov
sbb
push
pop
scas
and
fldenv
shl
aam
cld
add
imul
dec
xlat
(bad)
(bad)
(bad)
jmp
and
sbb
add
jnp
loopne
adc
pop
mov
pop
popf
aad
dec
xchg
push
mov
and
inc
mov
mov
mov
(bad)
(bad)
jmp
mov
sub
(bad)
movs
int3
jmp
sub
or
inc
mov
lock
and
call
lods
nop
push
mov
mov
inc
jb
sti
sbb
mov
fsubr
dec
cmc
call
fwait
les
dec
add
pop
stos
mov
std
dec
cmp
out
pop
aad
fadd
or
(bad)
clc
(bad)
(bad)
jg
push
cmp
leave
ins
scas
leave
(bad)
vpbroadcastmb2q
push
push
fiadd
jno
pop
inc
jne
add
push
push
cmps
imul
ss
aam
out
lods
sub
fisttp
sti
pop
adc
cmp
fbstp
sbb
adc
mov
sbb
ja
dec
ret
xlat
jp
(bad)
aaa
fdivrp
ja
xchg
adc
mov
scas
pop
test
(bad)
(bad)
call
fdivr
cmp
push
(bad)
into
inc
mov
enter
cmc
cmp
(bad)
cmp
or
xor
push
xor
(bad)
fbld
xchg
inc
dec
add
xchg
or
or
out
(bad)
(bad)
call
cmp
add
out
dec
sub
(bad)
inc
dec
cmc
dec
int
fiadd
fisubr
sub
data16
test
xor
xor
daa
(bad)
(bad)
jmp
ja
cli
outs
mov
enter
mov
popf
jle
jmp
cmp
push
mov
push
sbb
cmp
sbb
ins
mov
(bad)
out
xchg
fmul
retfw
xor
aad
and
gs
or
add
jmp
xor
adc
cmp
ror
mov
sub
mov
mov
or
pop
int3
inc
(bad)
(bad)
(bad)
inc
pop
pop
push
jns
cmp
push
push
push
inc
cmps
xor
movs
mov
ins
dec
(bad)
(bad)
jg
xchg
pop
(bad)
pop
dec
inc
cmc
mov
out
sahf
sub
ror
int3
pop
mov
inc
(bad)
jmp
call
loopne
add
add
cmp
add
test
(bad)
(bad)
(bad)
fcom
and
jmp
(bad)
mov
push
add
(bad)
fdivrp
mov
pop
ins
movs
cli
add
ret
and
into
pop
inc
dec
push
and
retf
xchg
pop
push
jecxz
retf
div
or
push
jp
or
push
call
enter
jae
push
imul
jmp
mov
mov
rol
in
loop
xchg
cli
out
in
xor
pop
(bad)
aam
add
(bad)
jecxz
mov
dec
pop
dec
pushf
call
(bad)
(bad)
(bad)
jmp
ins
mov
xor
ja
loope
xlat
std
ja
out
mov
xchg
xchg
jno
or
adc
or
(bad)
(bad)
jg
mov
es
xor
cmp
stos
sub
shr
in
pop
repz
sub
loop
mov
fimul
fidiv
(bad)
dec
pop
xor
(bad)
xchg
popa
rdtsc
lods
or
call
pop
mov
adc
outs
mov
or
mov
shr
sub
cmp
(bad)
dec
sub
addr16
test
xlat
mov
xor
or
iret
xchg
scas
xchg
(bad)
(bad)
call
push
pop
jne
xor
test
out
push
inc
gs
into
idiv
(bad)
(bad)
(bad)
push
xchg
dec
adc
inc
xlat
xor
fld
xlat
mov
fdiv
sbb
(bad)
jns
(bad)
retf
shr
dec
xor
loop
lahf
fnsave
push
iret
(bad)
(bad)
(bad)
call
or
ins
sahf
or
cmp
mov
mov
enter
mov
(bad)
(bad)
inc
inc
mov
xor
xchg
mov
xchg
and
xchg
fadd
add
movs
fisttp
clc
stos
and
idiv
or
test
nop
(bad)
jmp
jb
mov
pushf
mov
in
loop
cmp
mov
push
pop
sub
ds
cs
ins
jl
nop
pushf
adc
arpl
mov
repz
ss
(bad)
(bad)
(bad)
call
shl
xchg
jl
int
inc
mov
dec
mov
sbb
test
pop
mov
jmp
stc
call
adc
jmp
add
clc
les
inc
ffreep
dec
xchg
xchg
call
push
mov
out
arpl
(bad)
pop
xor
gs
or
or
jecxz
setge
mov
cs
je
sbb
mov
xchg
mov
jne
xchg
out
sbb
call
ins
mov
pop
lods
mov
mov
dec
in
cmp
jp
jg
stos
add
mov
js
fisub
in
cmp
(bad)
jmp
cmc
cwde
mov
ins
push
(bad)
jge
ss
sysenter
data16
icebp
lock
jg
or
(bad)
and
xor
cld
(bad)
(bad)
dec
stc
mul
inc
adc
mov
in
cld
inc
mov
xchg
out
sar
push
jnp
jae
jmp
dec
(bad)
sbb
push
cmp
lea
pushf
scas
and
retf
push
cli
dec
add
inc
in
and
jo
push
test
push
push
test
cmps
test
pop
(bad)
mov
lods
jecxz
loopne
(bad)
xor
leave
jnp
mov
add
dec
call
(bad)
mov
push
xor
rol
jmp
mov
popf
xchg
push
add
cwde
rcl
xor
xchg
mov
inc
aaa
std
(bad)
mov
aad
or
push
xchg
retf
aad
loopne
pop
rcr
pop
push
(bad)
(bad)
(bad)
mov
xchg
leave
orps
aas
pop
pop
xchg
inc
and
mov
cwde
push
stos
mov
cwde
call
(bad)
(bad)
stc
scas
jno
sub
(bad)
in
jns
mov
test
dec
cmp
scas
ss
xchg
(bad)
jecxz
fwait
scas
shl
cmps
addr16
lods
in
in
stos
mov
cmc
int3
mov
or
mov
neg
es
loope
jo
xor
(bad)
js
jmp
xchg
jmp
pop
ret
cld
jmp
pop
cmpxchg
jns
repz
jp
outs
jns
scas
sbb
daa
lods
sub
add
jmp
xchg
loopne
mov
hlt
adc
jns
gs
scas
fild
loope
cmp
mov
stc
mov
pop
cs
sub
and
(bad)
(bad)
fldcw
mov
ret
add
dec
jmp
ud0
(bad)
cmp
xchg
into
lahf
stc
push
jbe
repnz
gs
ja
leave
sub
lods
fadd
add
imul
into
inc
mov
jg
sub
jo
std
sbb
and
(bad)
call
push
sahf
inc
mov
jle
fcmovbe
fisubr
mov
dec
mov
and
scas
fs
out
xor
fucomi
call
aad
or
inc
bound
adc
retf
cmc
cld
(bad)
(bad)
mov
cmp
jns
int3
or
push
ret
data16
and
retf
jecxz
popf
cli
fbld
test
sub
data16
(bad)
jg
or
(bad)
fst
sub
adc
add
inc
adc
stc
sbb
ss
loopne
ins
mov
shl
ss
push
cdq
or
(bad)
dec
adc
or
lods
mov
pop
ins
dec
xor
jae
(bad)
jg
push
push
neg
out
repz
iret
test
mov
in
dec
call
call
daa
sti
aam
jno
pop
mov
shr
std
(bad)
(bad)
dec
cmp
mov
jne
add
jg
icebp
fidivr
jge
shr
jg
dec
add
xchg
xlat
pop
mov
lods
sub
push
(bad)
(bad)
(bad)
cmp
sbb
mov
sub
jns
ficom
sub
cld
xchg
(bad)
push
pusha
xor
mov
pusha
retf
cmp
add
(bad)
(bad)
jmp
and
jmp
cmp
or
ins
mov
pop
mov
jp
fsubr
pop
cwde
aam
(bad)
es
jp
(bad)
shl
push
sar
(bad)
jmp
xchg
pop
mov
(bad)
jmp
in
ds
inc
inc
mov
pop
movs
jmp
add
pop
xchg
push
lea
jmp
clc
(bad)
(bad)
jg
lods
jmp
(bad)
cmp
addr16
cdq
cmp
mov
push
in
mov
jg
not
(bad)
call
enter
pop
jge
mov
xchg
mov
jo
(bad)
(bad)
(bad)
jmp
cmp
sti
adc
in
(bad)
loopne
mov
mov
inc
push
clc
adc
iret
inc
call
jg
mov
sbb
jae
ins
xchg
mov
xchg
adc
fcomip
call
rcl
sti
mov
push
pop
out
jp
into
hlt
das
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
in
fwait
retf
cmp
(bad)
sub
mov
mov
push
pop
mov
dec
sub
ja
popa
retf
in
(bad)
stos
popf
out
push
mov
add
mov
call
bound
lock
outs
fs
or
jg
mov
adc
push
pop
stc
mov
not
bound
movs
data16
add
das
cmp
mov
dec
call
push
push
jp
cmps
cmp
call
addr16
je
leave
movs
lods
sbb
stos
lds
cwde
mov
test
addr16
loop
fdiv
sbb
(bad)
(bad)
jmp
cs
je
jp
push
js
aas
mov
mov
lods
dec
mov
adc
add
(bad)
(bad)
inc
dec
or
and
arpl
xchg
push
mov
ss
push
ins
cmp
add
pop
cmp
fs
jae
loop
mov
dec
and
inc
inc
dec
popf
ds
dec
xlat
shl
repnz
(bad)
jmp
mov
jmp
(bad)
(bad)
cmps
or
aaa
add
loop
sti
call
leave
test
movs
ins
leave
gs
jecxz
or
(bad)
push
retf
lods
xchg
retf
jecxz
cmc
outs
cmps
cmp
cmp
or
call
and
cmp
bound
shl
jg
add
pop
cmp
mov
sar
cld
cmc
dec
push
clc
fcmovnbe
(bad)
push
outs
(bad)
loope
xlat
mov
fsubr
xchg
clc
mov
pxor
int3
(bad)
sbb
(bad)
(bad)
inc
loop
xor
sti
mov
icebp
dec
sahf
ret
push
mov
aad
mov
cwde
xchg
sar
push
xor
mov
xchg
out
xchg
add
rcr
fisttp
lock
cmp
jb
scas
sub
push
fneni(8087
xor
fwait
retf
popa
mov
inc
jmp
sbb
dec
cmp
push
inc
sub
adc
xchg
cmp
fisub
cmp
icebp
or
add
dec
out
mov
xchg
xor
sub
frstor
(bad)
(bad)
(bad)
call
inc
cmp
inc
cmp
adc
enter
shl
sti
(bad)
sub
lock
jp
retf
cmp
inc
dec
xor
jmp
(bad)
dec
es
cmc
mov
adc
ror
fistp
xchg
loop
(bad)
push
xor
pop
push
inc
xor
outs
test
scas
xchg
xor
push
mov
or
ds
dec
push
scas
cs
lahf
xchg
pop
or
test
stc
add
in
sub
stos
dec
imul
push
sbb
jp
adc
aad
call
mov
leave
in
stc
push
sbb
es
pop
inc
in
jno
jno
mov
mov
xor
loopne
stos
mov
(bad)
dec
scas
jmp
cmp
scas
push
pusha
cmp
pop
mov
mov
inc
mov
imul
(bad)
(bad)
jmp
(bad)
xchg
mov
add
jne
push
sbb
add
in
or
jl
xchg
xchg
aad
icebp
call
push
setge
aad
cmp
mov
push
dec
(bad)
hlt
fild
stos
scas
mov
outs
dec
pop
cli
lods
mov
(bad)
(bad)
call
ins
push
call
int
cmp
js
hlt
inc
cdq
aad
pop
inc
mov
dec
push
(bad)
(bad)
sub
dec
pop
das
(bad)
mov
pop
mov
movs
loop
inc
add
xchg
clc
das
(bad)
or
(bad)
sti
icebp
pop
pop
and
mov
outs
or
inc
loope
jnp
cmp
or
mov
sahf
dec
add
(bad)
(bad)
jmp
ror
xor
jmp
mov
lock
imul
sti
sub
ffreep
(bad)
(bad)
jmp
(bad)
call
retf
mov
cmps
sub
lock
stos
sub
push
(bad)
movs
add
xor
add
(bad)
dec
adc
mov
popa
mov
fnsave
ret
and
xchg
(bad)
(bad)
(bad)
jmp
scas
push
mov
js
pop
xor
clc
cmp
ja
push
daa
and
dec
es
(bad)
(bad)
dec
adc
push
lods
mov
pop
sub
out
mov
mov
clc
call
movs
push
shr
int3
add
call
mov
data16
call
sub
(bad)
mov
(bad)
jg
mov
add
jle
jl
retf
mov
in
sar
sbb
xor
sbb
xor
(bad)
call
shl
mov
cs
or
push
ins
pusha
and
jecxz
(bad)
add
dec
mov
jmp
pop
push
xchg
fisubr
adc
and
jmp
sbb
enter
sbb
outs
rcl
push
dec
imul
pop
xchg
loopne
dec
xor
cli
jl
jl
cmp
gs
(bad)
(bad)
inc
es
mov
and
(bad)
shl
mov
mov
out
nop
test
jmp
jg
sar
cmp
nop
cli
in
pop
cmp
jne
xchg
mov
mov
dec
ss
push
(bad)
aam
jb
in
xlat
mov
ds
push
inc
or
push
repnz
(bad)
mov
inc
(bad)
xor
sbb
xchg
mov
dec
adc
pushf
inc
add
imul
and
sbb
or
pop
setbe
in
jmp
(bad)
(bad)
(bad)
dec
bound
xchg
pop
dec
or
jne
rol
xor
sbb
out
(bad)
mov
push
fmul
dec
sahf
adc
sub
add
sahf
cdq
adc
mov
cmps
push
jbe
stos
mov
xor
jo
bound
mov
(bad)
(bad)
(bad)
push
outs
jl
push
pop
pop
xchg
gs
pop
add
inc
mov
sub
push
cli
push
test
addr16
add
mov
mov
xchg
xchg
enter
push
hlt
mov
jmp
push
push
and
leave
mov
(bad)
(bad)
(bad)
in
mov
sbb
shr
push
adc
movs
fsubr
and
adc
js
mov
imul
(bad)
dec
cdq
mov
(bad)
xchg
pushf
movs
imul
scas
lods
cmp
loopne
inc
addr16
(bad)
(bad)
(bad)
(bad)
js
ds
or
nop
mov
test
mov
add
retf
out
sahf
test
mov
inc
mov
and
iret
pushf
lds
fbld
mov
add
cmp
push
fcmovbe
cmc
mov
lds
out
mov
xchg
(bad)
(bad)
inc
cmp
sub
out
adc
mov
dec
pop
jbe
pop
jmp
rcl
jg
jmp
lea
pop
stos
and
jle
fwait
pop
ret
mov
loop
add
pop
mov
inc
ss
xchg
add
sbb
cmp
(bad)
mov
out
sbb
cmps
mov
push
cld
push
add
loope
and
dec
sbb
sbb
jbe
fwait
leave
int
xor
dec
jmp
jecxz
mov
popf
cli
das
popa
or
mov
out
mov
jmp
adc
ins
pop
(bad)
fucomp
mov
cmps
ins
adc
and
das
xor
fsubr
mov
jb
and
xor
dec
pusha
pusha
ins
sbb
das
push
lods
mov
aaa
scas
adc
push
inc
out
push
pop
imul
and
sub
sbb
call
pop
fisubr
adc
nop
mov
mov
adc
sar
call
int
mov
xor
push
mov
(bad)
(bad)
lods
push
sub
mov
lods
(bad)
(bad)
(bad)
call
mov
fidivr
shl
or
fs
icebp
sahf
into
sub
into
or
retf
(bad)
(bad)
(bad)
jmp
in
popf
push
cdq
xor
jl
aad
pop
(bad)
adc
adc
cli
cdq
dec
add
enter
sbb
test
out
mov
push
inc
push
je
in
fcomp
jmp
cli
jb
int
pop
fmul
push
ss
ins
pop
cs
adc
jno
push
rcl
call
sub
js
push
jbe
pop
dec
stos
or
push
adc
mov
add
cmp
retf
test
fdivr
fadd
es
mov
sub
mov
gs
push
or
fsub
and
mov
add
(bad)
jmp
fdiv
adc
es
xchg
mov
das
loopne
jb
and
push
mov
(bad)
(bad)
(bad)
mov
add
push
xor
inc
(bad)
mov
jmp
cmp
xor
cs
cli
sahf
xlat
aad
div
pop
cwde
pop
dec
shl
(bad)
jmp
retf
jb
mov
ror
int3
pop
mov
pop
(bad)
push
std
popf
mov
mov
adc
jmp
xor
pop
xor
cli
pop
mov
push
pop
sbb
mov
mov
jecxz
xchg
lock
(bad)
mov
in
fsubr
mov
nop
dec
xchg
nop
and
test
(bad)
(bad)
js
mul
cli
pop
mov
mov
sbb
xchg
xchg
iret
jmp
aaa
sar
cmp
fild
jno
mov
mov
cld
mov
lods
in
inc
cdq
dec
jmp
and
jo
sub
call
test
stos
push
in
sub
sahf
cmp
mov
(bad)
(bad)
call
mov
daa
daa
out
jle
mov
sbb
stos
aam
test
push
xchg
imul
jecxz
neg
scas
pop
lods
jae
mov
in
xor
dec
inc
fldenv
popa
jp
(bad)
pop
cmps
fs
jg
pop
adc
jo
stos
in
xchg
add
nop
imul
pop
or
ror
push
jle
rol
in
push
mov
cli
(bad)
(bad)
dec
push
inc
mov
in
pop
(bad)
pushf
pop
or
sbb
jno
inc
jp
jl
std
jmp
jbe
movs
adc
sub
jmp
dec
xchg
out
adc
stos
rcr
(bad)
(bad)
(bad)
fidiv
or
scas
out
mov
jb
xor
pusha
scas
ret
loope
pushf
cs
out
mov
(bad)
(bad)
jmp
xchg
xchg
mov
fadd
xor
mov
mov
jbe
aam
or
push
push
out
fcmove
bound
cmc
(bad)
jns
mov
push
push
js
mov
or
js
add
bound
add
push
stc
imul
(bad)
out
xor
enter
jbe
jl
fwait
lea
add
(bad)
(bad)
(bad)
(bad)
dec
mov
cmp
loopne
xchg
dec
retf
ret
movs
rcr
mov
dec
mov
jmp
push
mov
test
cmp
jp
dec
xchg
mov
rcr
mov
movs
adc
pop
std
int
retf
xchg
jmp
shr
out
mov
inc
cdq
mov
scas
cmps
(bad)
(bad)
push
and
inc
mov
sbb
cmp
fistp
jge
scas
mov
or
shl
(bad)
(bad)
cmp
dec
mov
xchg
mov
xchg
sub
movs
int
in
jmp
das
in
jp
adc
push
mov
cld
(bad)
mov
aam
dec
jo
xlat
cdq
data16
xor
lods
sar
cli
call
jg
imul
pop
mov
pushf
addr16
ins
mov
sub
pop
out
(bad)
(bad)
(bad)
jmp
cmp
inc
imul
sar
hlt
pop
aas
arpl
jmp
lahf
sbb
adc
pusha
mov
(bad)
(bad)
call
xor
mov
push
(bad)
dec
add
adc
int3
cmps
push
and
cmp
aam
movs
cli
mov
adc
push
xor
inc
adc
cmp
aam
outs
push
pop
(bad)
jmp
mov
xor
push
xor
rol
call
add
add
loop
dec
into
cmps
(bad)
(bad)
(bad)
mov
int3
ret
bound
loop
ja
shl
ins
xchg
cmp
jnp
cmp
mov
inc
popa
or
inc
shr
inc
enter
mov
xor
enter
and
add
or
lock
pusha
fdiv
push
sbb
aam
mov
or
cmp
or
sar
(bad)
(bad)
jmp
popa
add
leave
push
mov
ins
mov
push
xchg
sti
in
mov
and
inc
cli
(bad)
(bad)
(bad)
cmp
ret
or
jmp
aas
call
ins
pop
push
adc
stos
jle
inc
jp
jmp
push
call
adc
(bad)
loopne
xchg
loop
mov
push
sbb
(bad)
push
lods
je
xor
fwait
icebp
dec
outs
(bad)
adc
(bad)
cmp
lock
call
(bad)
mov
loope
(bad)
stc
or
inc
pop
sbb
cmc
adc
cwde
xchg
(bad)
(bad)
(bad)
jmp
bound
jp
inc
sbb
dec
or
fcmovnbe
imul
mov
(bad)
push
nop
repz
movs
in
(bad)
pushf
pop
jae
adc
(bad)
(bad)
(bad)
jg
sub
inc
push
movs
and
das
push
repz
in
sahf
mov
test
movs
imul
out
in
push
cs
mov
call
(bad)
inc
bound
xor
adc
pop
ret
push
in
pop
cmp
mov
mov
into
popf
ss
sbb
push
jg
or
inc
test
sbb
sbb
or
inc
push
mov
das
sub
xor
out
test
call
add
xchg
stos
sbb
cdq
jne
mov
pop
fstp
push
mov
jae
daa
push
(bad)
arpl
xor
dec
and
mov
(bad)
fbstp
pop
push
mov
test
ds
pop
sbb
fcom
(bad)
cmp
fs
sbb
xor
mov
xchg
(bad)
hlt
call
xor
sub
cmps
test
push
test
push
push
sub
(bad)
jmp
sub
dec
fisttp
iret
fiadd
push
and
(bad)
(bad)
call
lods
dec
ficom
mov
jp
adc
mov
pop
cmps
or
sub
push
add
nop
(bad)
(bad)
jmp
enter
push
jno
sub
out
(bad)
out
popf
test
mov
clc
(bad)
(bad)
call
sub
leave
jmp
rcl
cmc
pop
mov
std
mov
pop
or
sub
add
call
rol
and
cmp
cld
(bad)
(bad)
call
iret
sbb
xchg
loope
pop
xor
adc
dec
enter
jp
jl
(bad)
(bad)
inc
push
push
push
pusha
movs
pop
rcr
inc
call
mov
jne
or
adc
pop
ja
adc
repnz
xchg
(bad)
call
mov
push
push
rcr
out
sahf
dec
mov
sub
(bad)
jmp
iret
sbb
cmp
data16
xor
inc
jg
mov
mov
xchg
movs
jmp
pop
clc
and
or
call
mov
xor
adc
cmp
mov
xor
mov
and
mov
add
adc
xchg
dec
jns
xchg
sbb
cwde
jns
scas
xchg
test
(bad)
dec
sub
ja
ffree
push
add
push
and
xchg
push
jb
cli
mov
mov
jbe
ds
loopne
sahf
pop
int3
arpl
or
mov
loop
outs
xor
dec
sbb
pusha
ss
inc
cmp
inc
aas
cmp
xchg
sub
jb
fdiv
cmc
adc
out
mov
jmp
sub
(bad)
mov
dec
(bad)
jno
inc
dec
pop
(bad)
lea
inc
aad
pop
xchg
dec
je
lods
push
sbb
sub
mov
(bad)
jmp
cmp
call
daa
sub
pop
mov
mov
rcr
sar
mov
pop
inc
push
iret
int
leave
adc
imul
or
cmp
pusha
popa
or
imul
jmp
inc
test
(bad)
and
xor
retf
jbe
mov
(bad)
(bad)
(bad)
cld
icebp
pop
mov
mov
in
mov
sar
out
xor
xlat
and
idiv
inc
pop
out
fdivp
into
rcl
ret
sub
das
ror
in
js
iret
loopne
outs
mov
pop
inc
inc
mov
mov
imul
call
cmps
and
lods
xchg
(bad)
or
call
scas
adc
jae
ficom
jns
push
and
dec
inc
xchg
rcr
fist
shr
sar
in
js
cwde
sub
dec
add
mov
mov
xlat
stos
mov
out
(bad)
(bad)
jg
mov
int
cmc
push
ficom
lock
retf
pop
xchg
mov
xchg
pop
xor
add
call
inc
cmc
(bad)
(bad)
(bad)
(bad)
jg
pop
push
dec
cs
push
sub
or
sar
das
shl
mov
mov
push
movs
(bad)
dec
push
pop
xor
ins
mov
sub
pusha
jbe
and
aam
test
iret
loop
push
add
mov
cmps
popa
mov
push
fmul
mov
jbe
lds
in
out
test
(bad)
inc
add
ins
inc
loope
xor
adc
sub
scas
out
sub
fs
imul
lds
aas
aas
idiv
mov
mov
push
ins
mov
xchg
lahf
not
adc
adc
cwde
adc
outs
add
push
jbe
js
popa
xchg
data16
pop
hlt
jmp
xlat
fisubr
dec
scas
add
popa
rcl
addr16
out
pop
pop
cmc
mov
call
push
pop
arpl
jns
clc
scas
and
jmp
loopne
xchg
jle
jnp
icebp
into
hlt
xchg
sub
mov
icebp
enter
cdq
ins
loop
dec
(bad)
call
lds
aam
jl
xor
sbb
movs
push
(bad)
call
std
xor
(bad)
(bad)
mul
xchg
stc
(bad)
popa
sbb
retf
pop
add
je
mov
xor
jl
outs
mov
(bad)
inc
(bad)
rcl
gs
push
div
or
stos
push
inc
out
ss
dec
push
(bad)
sbb
(bad)
call
mov
xor
shl
ins
cmp
mov
pop
retf
cmc
(bad)
sub
(bad)
into
push
jno
fbstp
jo
nop
xor
(bad)
jmp
shr
xor
shr
jp
rol
in
mov
std
inc
sti
in
mov
jmp
sbb
jae
cmp
js
(bad)
jg
jmp
mov
stos
test
fs
sbb
cmps
mov
or
out
mov
ret
or
bnd
pushf
ret
or
mov
mov
mov
movs
stc
fnstenv
pop
int
add
inc
fstp
(bad)
(bad)
(bad)
call
jns
stos
stos
vandnps
gs
xlat
mov
fadd
pop
pop
mov
popf
cmp
xchg
(bad)
jl
call
add
inc
ret
jmp
xor
push
mov
mov
call
sub
repnz
cs
jb
das
(bad)
(bad)
(bad)
(bad)
fdiv
cmp
mov
mov
inc
or
mov
dec
(bad)
call
loopne
and
rcl
ins
pushf
mov
retf
retf
sbb
pop
xor
cld
inc
dec
adc
stos
dec
jmp
loope
bound
push
xchg
sub
inc
sahf
cmp
jecxz
mov
jl
add
std
jmp
jb
adc
mov
in
adc
jae
data16
js
data16
mov
jnp
adc
clc
rcl
jecxz
and
aad
lock
mov
addr16
cwde
pop
sub
mov
jmp
shl
scas
inc
add
loopne
aas
mov
(bad)
pop
test
sub
push
mov
sub
popa
xor
mov
mov
and
jae
rol
dec
jnp
movs
sbb
in
cmp
and
mov
(bad)
cmc
(bad)
(bad)
mov
pop
xchg
pop
lea
and
in
(bad)
jge
cs
idiv
(bad)
push
and
cmp
in
xchg
add
jb
hlt
add
(bad)
push
push
in
ja
js
lock
cmps
ds
jp
daa
xor
(bad)
(bad)
jmp
inc
adc
sbb
ror
out
adc
sub
pop
cmp
sub
clc
mov
clc
jmp
mov
aam
dec
inc
or
mov
iret
cmp
scas
sar
or
xchg
(bad)
inc
(bad)
repnz
test
imul
sbb
ss
push
cdq
dec
rol
iret
jbe
call
stc
mov
aam
aad
sub
call
mov
not
(bad)
(bad)
jmp
shl
dec
mov
mov
aam
mov
mov
jnp
imul
mov
nop
sahf
pop
les
pop
dec
in
int
or
test
mov
loop
mov
inc
mov
pop
xor
(bad)
push
pop
inc
out
push
push
xor
push
cmp
push
mov
(bad)
jmp
data16
push
popf
fbstp
pop
jnp
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
and
sti
mov
or
fst
jo
xor
repnz
ins
mov
adc
cld
(bad)
call
sub
xchg
lods
fbstp
ja
pop
xor
ss
mov
jmp
out
add
lahf
pop
js
fidivr
dec
in
cmp
fs
lahf
hlt
sti
pop
jecxz
or
ins
inc
es
rol
sti
cmp
jl
aas
(bad)
clc
and
(bad)
dec
push
shr
cmp
(bad)
(bad)
dec
sub
jb
jge
sbb
(bad)
sub
mov
stc
jge
or
test
adc
jnp
stos
(bad)
(bad)
fist
inc
hlt
cli
jmp
outs
jo
out
ret
cmps
mov
ins
cld
call
pop
pinsrw
jo
jb
call
mov
jnp
pop
loopne
lods
mov
std
inc
lods
ins
call
xchg
lock
xlat
fisttp
inc
sub
ror
push
sub
mov
popf
and
data16
popf
lahf
(bad)
jmp
pusha
div
push
pop
mov
aam
adc
adc
xor
enter
aaa
std
jno
sub
xchg
xchg
dec
adc
cwde
or
imul
cmp
jp
adc
and
sub
mov
sbb
adc
pop
nop
icebp
fwait
xor
mov
xchg
pop
dec
das
jge
inc
cmp
out
retf
movs
mov
sbb
fwait
inc
push
and
aas
lahf
stos
bound
jb
adc
pop
mov
in
jge
pop
sahf
(bad)
jg
outs
mov
test
push
and
xchg
push
in
jo
mov
(bad)
inc
sub
lahf
(bad)
fsub
or
js
(bad)
cmp
data16
mov
xchg
cmp
rcr
cmp
neg
loop
mov
lds
inc
fcmovnu
pop
(bad)
or
(bad)
(bad)
(bad)
call
int3
in
dec
pop
enter
or
scas
mov
out
f2xm1
retf
fist
sbb
scas
push
mov
(bad)
(bad)
(bad)
call
adc
icebp
pop
dec
sbb
(bad)
fisubr
inc
and
out
mov
or
stc
(bad)
aaa
ret
clc
test
outs
jle
test
push
push
and
dec
sub
aas
mov
sbb
mov
mov
pop
(bad)
push
inc
rcr
mov
or
popf
popf
(bad)
dec
mov
(bad)
jmp
sbb
or
js
pop
pop
out
pop
es
loope
jb
and
(bad)
jg
jno
shl
xor
inc
popa
lahf
ret
mov
and
test
push
out
loopne
jae
jmp
push
pop
cmc
jmp
test
xlat
inc
rcr
and
inc
or
pop
test
(bad)
jp
or
adc
aad
pop
out
mov
call
(bad)
inc
adc
out
mov
(bad)
(bad)
(bad)
jns
fwait
dec
mov
test
mov
xchg
pop
mov
and
xchg
xor
sbb
mov
popf
mov
jl
sar
jmp
cwde
fwait
dec
sti
xchg
xor
test
mov
shl
mov
cmp
xchg
rcl
xchg
xchg
(bad)
(bad)
(bad)
call
iret
ror
sbb
push
inc
sub
dec
mov
or
movs
jae
cdq
cmps
clc
(bad)
mov
dec
(bad)
into
cmps
rcr
ror
fbstp
lahf
jp
nop
adc
pop
(bad)
call
lods
les
ror
jbe
jae
adc
add
stos
ficom
adc
cmp
push
call
mov
or
xchg
push
mov
es
mov
movs
fiadd
jmp
xchg
mov
ja
mov
cmp
aam
lock
scas
xor
add
inc
inc
mov
inc
rcr
(bad)
call
inc
stc
mov
and
fst
cs
jmp
xchg
sbb
(bad)
inc
cmc
mov
push
popa
int
mov
loope
jg
(bad)
(bad)
(bad)
(bad)
jp
lock
outs
inc
test
mov
cmps
ins
mov
mov
std
cmc
hlt
add
add
mov
sar
(bad)
call
xchg
mov
pop
sbb
(bad)
outs
mov
and
jge
sub
icebp
mov
mov
rol
and
mov
inc
jae
cmps
cld
(bad)
(bad)
dec
and
jb
stos
xor
out
jb
mov
cmp
dec
mov
and
cs
xchg
sbb
sub
adc
(bad)
xchg
scas
arpl
mov
dec
mov
jae
and
jp
push
test
cmc
mul
push
mov
nop
mov
retf
fs
fwait
cmp
push
(bad)
call
aas
adc
repz
rcl
pop
adc
and
push
(bad)
(bad)
(bad)
jmp
inc
or
pop
test
cmp
pop
pop
dec
jns
jb
sub
push
out
(bad)
out
xchg
lods
jmp
call
cwde
sbb
inc
adc
xchg
icebp
jmp
call
dec
loope
xchg
lahf
pop
cld
sbb
pop
mov
adc
add
xchg
fyl2xp1
inc
loopne
mov
movs
(bad)
call
mov
sbb
push
sub
jg
call
popf
outs
inc
xchg
fwait
outs
jb
addr16
(bad)
push
jmp
hlt
nop
fstp
jg
shl
mov
clc
gs
ja
pop
or
fcomip
(bad)
loop
jmp
loope
stos
ja
cli
or
hlt
(bad)
(bad)
inc
pop
mov
mov
adc
repz
xor
mov
(bad)
push
push
popf
into
jns
or
(bad)
or
shl
cmp
lock
mov
sbb
movs
dec
nop
fisttp
ds
movs
lods
sub
cmp
inc
dec
push
pop
inc
add
stos
jb
int3
mov
lods
sbb
xchg
(bad)
jmp
cli
lock
cmps
aas
(bad)
pop
lahf
sti
inc
mov
pop
jg
pop
pop
sub
dec
fist
(bad)
jmp
jle
dec
inc
scas
or
ja
in
add
dec
scas
mov
leave
pop
or
(bad)
mov
and
(bad)
stc
jb
adc
sub
cmp
dec
into
xlat
lds
cld
(bad)
mov
sbb
cs
jmp
fsub
jnp
pop
dec
popa
syscall
ds
jo
pushf
sbb
or
jl
mov
test
sub
add
ss
mov
pop
es
mov
cwde
mov
mov
push
jno
jge
inc
popa
std
jmp
jnp
scas
pusha
dec
jp
gs
push
ficom
and
ret
adc
mov
and
adc
dec
js
loope
jecxz
enter
mov
(bad)
xchg
js
scas
imul
sti
(bad)
(bad)
(bad)
(bad)
in
inc
sub
and
inc
xlat
in
or
lock
pop
imul
sub
push
push
sub
es
adc
cdq
ficom
lds
cmc
jmp
ja
push
cld
outs
fs
jge
(bad)
(bad)
jmp
inc
fst
add
sahf
mov
xor
mov
stc
jge
mov
call
inc
sbb
mov
xchg
std
in
ins
push
imul
sbb
cld
(bad)
jmp
pop
jmp
test
fild
mov
sub
sahf
pop
repnz
jne
xchg
mov
mov
mov
int3
(bad)
jmp
cmp
add
(bad)
(bad)
(bad)
stc
stos
int
and
xchg
mov
jbe
in
jb
cmp
rcr
adc
test
(bad)
dec
mov
sub
jg
xchg
cmc
fdivr
xchg
call
ret
or
ss
and
cwde
jl
xor
or
aad
enter
jmp
lds
and
aam
mov
lahf
dec
call
push
shl
std
(bad)
inc
inc
adc
xchg
mov
adc
ret
retf
xor
and
(bad)
(bad)
(bad)
dec
jle
fstp
push
inc
jnp
in
outs
cmps
fs
pop
mov
lea
mov
cmp
out
or
xor
call
jo
sub
retf
pop
jmp
xor
hlt
pushf
in
fisub
sbb
mov
add
dec
mov
shl
retfw
adc
mov
xor
jne
ss
inc
clc
mov
xchg
cmps
test
adc
sbb
(bad)
out
add
pop
(bad)
stc
aad
loope
call
sub
out
pop
fdivr
call
sbb
inc
push
add
sub
leave
adc
add
push
inc
adc
cwde
pop
cmps
iret
icebp
(bad)
call
jo
ss
push
inc
xchg
lods
pop
outs
shl
mov
icebp
stc
cdq
cmp
leave
xor
(bad)
(bad)
jmp
retf
mov
shl
out
jae
mov
push
xor
dec
dec
lods
pop
mov
jbe
(bad)
sbb
jg
nop
pop
fwait
mov
push
pop
in
fsub
loop
mov
std
(bad)
push
popa
mov
xchg
out
in
movs
xor
jnp
clc
std
int
notrack
in
clc
in
jmp
loop
inc
cmp
xchg
adc
add
test
mov
push
mov
sub
xchg
cmps
nop
movs
(bad)
jg
jg
(bad)
fdivr
pusha
jbe
lods
retf
ja
xor
(bad)
dec
dec
scas
mov
xchg
das
inc
inc
push
xor
jmp
fisubr
cwde
or
(bad)
(bad)
fcomip
sub
add
adc
jl
jecxz
jge
(bad)
(bad)
(bad)
inc
mul
icebp
inc
out
cli
sbb
outs
fiadd
xor
fcom
addr16
cmp
or
push
out
mov
adc
aam
mov
jmp
xlat
loop
jecxz
sbb
adc
xor
mov
pop
cmp
adc
outs
cli
(bad)
jmp
pop
push
mov
push
mov
ss
iret
push
xchg
dec
jl
lahf
(bad)
(bad)
mov
pop
sbb
fdivr
int
pop
mov
jmp
pop
adc
sub
xor
out
dec
or
mov
mov
adc
xor
xor
pop
enter
inc
int
pop
sahf
(bad)
mov
and
aas
pop
out
bswap
pop
jns
(bad)
(bad)
call
xchg
icebp
sbb
jmp
ins
and
add
dec
or
(bad)
(bad)
(bad)
push
sub
stos
mov
mov
push
jle
add
push
call
sbb
lods
mov
je
(bad)
(bad)
(bad)
push
adc
mov
sbb
push
jl
xor
test
inc
pop
sar
in
mov
mov
(bad)
(bad)
jmp
or
sar
push
push
pop
cs
cdq
dec
xchg
adc
cmp
jp
cld
(bad)
jmp
out
cs
in
mov
fld
inc
mov
mov
sbb
int
retf
or
(bad)
fcomip
push
dec
addr16
dec
adc
inc
adc
cli
in
mov
ret
cmps
inc
xchg
mov
pop
out
add
pop
lods
lods
lds
push
dec
pop
push
mov
dec
jbe
pop
cmps
dec
ins
jne
mov
(bad)
jmp
dec
stos
add
mov
ins
arpl
fidivr
dec
push
ror
cld
mov
sar
mov
dec
mov
and
sub
rcl
xchg
inc
mov
(bad)
(bad)
jmp
jo
lea
cmp
jmp
(bad)
test
pop
sub
jle
call
jmp
clc
jg
and
sub
cmp
test
loopne
enter
shl
movs
and
mov
fistp
xchg
(bad)
dec
cmp
aas
jnp
mov
(bad)
xchg
rcr
(bad)
(bad)
(bad)
call
cld
mov
jae
mov
jnp
scas
dec
or
lods
lods
mov
inc
pop
ins
mov
fcmovb
xchg
lods
mov
pop
dec
push
mov
gs
pushf
fwait
mov
js
push
add
push
rol
add
(bad)
mov
repnz
int
in
inc
aam
data16
mov
es
inc
(bad)
jmp
call
(bad)
jmp
int3
in
xchg
enter
fwait
xor
push
adc
in
pop
aaa
sub
int3
sbb
les
call
das
jns
sbb
mov
push
xor
call
jmp
or
mov
xor
loope
fwait
(bad)
jmp
ret
xor
out
sub
mov
mov
sbb
aam
test
fst
adc
enter
inc
fdiv
hlt
cld
push
(bad)
(bad)
jmp
add
push
sub
push
sub
push
cmp
inc
cmps
dec
clc
les
cld
(bad)
xchg
loope
fisttp
adc
add
mov
jle
push
stos
enter
or
push
outs
and
push
hlt
icebp
daa
out
jnp
ficomp
stos
inc
or
je
not
sbb
add
push
loope
(bad)
(bad)
jmp
inc
mov
and
rcr
push
xchg
test
add
rol
add
adc
jg
dec
call
dec
lds
aad
xor
(bad)
push
push
shl
or
add
xchg
pop
cdq
nop
test
mov
sbb
xor
push
fsub
js
jmp
xchg
test
push
js
mov
pusha
clc
inc
mov
mov
mov
adc
(bad)
lock
shl
call
addr16
(bad)
push
nop
sbb
cmc
xchg
dec
popa
jo
xchg
sbb
jge
push
cmc
add
call
sbb
push
push
loop
or
inc
lock
iret
jne
or
mov
sbb
movs
xchg
repz
fiadd
stos
inc
mov
ror
and
adc
into
addr16
rcl
es
dec
add
or
jecxz
mov
out
ror
cli
movs
jo
(bad)
push
shl
sbb
ficom
lods
sahf
aam
cmps
pop
call
jmp
inc
sub
mov
mov
push
or
adc
and
pop
popa
inc
xor
dec
mov
lods
jg
jmp
xor
xor
shr
pop
stos
and
cmps
xchg
mov
push
(bad)
hlt
inc
outs
push
iret
sbb
pop
cmc
hlt
(bad)
(bad)
(bad)
call
scas
es
mov
xchg
test
idiv
loop
mul
adc
(bad)
(bad)
jmp
dec
dec
mov
int3
pop
or
or
call
xchg
sbb
lods
sahf
mov
inc
and
adc
cli
call
push
shl
mov
mov
addr16
mov
push
cmp
in
ins
dec
pop
xor
(bad)
cmp
mov
mov
shl
cmp
out
jg
call
icebp
mov
push
test
aaa
mov
mov
aad
sti
(bad)
(bad)
dec
jns
fld
outs
xchg
fs
cmc
imul
xchg
aam
adc
pop
mov
outs
xchg
jl
das
(bad)
lahf
call
pop
cmp
scas
fistp
adc
mov
clc
jbe
xor
aad
jnp
xor
sub
loop
inc
aad
or
and
lea
mov
push
enter
mov
jns
cmps
sbb
ficom
push
ss
neg
xor
dec
push
mov
cld
call
nop
jmp
xchg
jne
(bad)
sti
es
fsub
pop
dec
call
dec
scas
leave
jle
pusha
sub
cmc
out
in
add
bound
mov
adc
sbb
jmp
cli
call
sub
sbb
ds
ror
and
push
pushf
mov
movs
sub
scas
test
pop
stos
xchg
pop
fiadd
les
adc
(bad)
(bad)
jmp
popa
ja
pusha
add
retf
add
hlt
popa
sbb
dec
adc
xchg
adc
rcr
xchg
and
(bad)
fstp
je
jae
sub
mov
das
(bad)
sbb
fucomip
movs
inc
cs
jp
add
(bad)
jmp
adc
and
call
in
jae
arpl
test
(bad)
jg
cmp
into
rol
and
pushf
cmps
lahf
pop
sahf
lahf
inc
cs
inc
xchg
mov
cmp
mov
and
or
or
mov
inc
neg
pop
test
(bad)
pop
fnsave
jb
loopne
clc
ffreep
mov
movs
add
(bad)
xchg
lock
cmp
clc
xchg
ins
sbb
outs
pop
xchg
pop
test
add
xor
jae
cmp
ror
sub
sub
ja
loop
sbb
xor
in
test
sbb
(bad)
(bad)
call
jle
xor
xor
adc
xor
sahf
add
data16
jmp
fucomip
push
int3
inc
push
pop
aad
pop
outs
into
mov
fiadd
cli
(bad)
in
(bad)
sbb
jne
jnp
pop
pop
cmp
pop
inc
sar
jmp
bsf
(bad)
jmp
push
ret
jns
ficomp
(bad)
aaa
mov
inc
pop
cli
(bad)
(bad)
fs
mov
add
retf
outs
cmps
jmp
add
mov
scas
(bad)
inc
or
push
cli
(bad)
(bad)
jmp
call
push
je
clc
mov
sti
out
jmp
(bad)
cli
stos
add
inc
xor
movs
daa
es
das
sar
jg
adc
push
cmp
xor
adc
call
jnp
jo
enter
mov
cmp
xor
pop
mov
je
cli
(bad)
(bad)
(bad)
call
jmp
fwait
jnp
jae
pop
cmc
inc
push
test
mov
pushf
icebp
cmp
ja
cli
call
rcr
gs
outs
and
cmc
xchg
xor
sbb
(bad)
inc
dec
aad
sub
(bad)
nop
add
mov
addr16
movs
mov
imul
mov
cmps
dec
fiadd
fbld
push
push
(bad)
mov
movs
xor
popa
fwait
pop
(bad)
(bad)
mov
das
xchg
and
nop
adc
push
sub
mov
(bad)
(bad)
(bad)
push
out
xchg
jmp
xchg
add
adc
xchg
int3
cmp
pop
jmp
sbb
dec
ds
or
inc
fwait
into
(bad)
(bad)
(bad)
call
mov
pop
inc
xor
push
pop
movs
lods
mov
das
inc
xor
fdiv
mov
adc
(bad)
(bad)
jmp
call
push
lods
mov
jbe
adc
(bad)
mov
adc
nop
fsubr
jo
sahf
xchg
imul
and
or
movs
fld
cmp
fs
in
std
dec
xor
lds
jg
nop
(bad)
(bad)
jmp
cli
lea
std
add
fs
inc
cli
pop
retf
(bad)
push
mov
scas
fisubr
(bad)
(bad)
call
dec
and
push
jns
rcr
adc
dec
fisttp
lahf
adc
ins
inc
mov
(bad)
jmp
mov
rcr
and
xor
into
xchg
xor
xchg
sbb
loopne
pop
sub
inc
xchg
mov
pop
xchg
mov
jmp
push
nop
lock
adc
mov
jecxz
(bad)
(bad)
jmp
push
or
cmp
mov
into
stos
sub
cli
push
fild
fistp
cmp
test
cs
call
pop
push
inc
push
pop
cmc
jnp
sbb
and
ret
jge
cwde
xor
pop
or
push
call
dec
in
adc
rcr
mov
(bad)
inc
sub
test
push
mov
aaa
adc
xchg
jp
popf
or
addr16
push
add
dec
push
test
iret
movs
dec
mov
mov
ret
(bad)
(bad)
(bad)
call
sub
xchg
gs
je
mov
(bad)
in
pushf
fcom
xchg
sbb
and
cmc
call
rcl
data16
ds
shl
loopne
fst
adc
fbstp
popa
add
imul
mov
out
fnstsw
mov
(bad)
(bad)
call
xchg
ss
jns
mov
add
sbb
into
into
(bad)
stc
test
sahf
das
mov
cmp
adc
inc
cwde
shl
adc
call
out
cmp
xor
mov
xor
ret
push
jp
mov
pop
push
sbb
int
test
sub
or
call
cmps
cmp
dec
ror
not
cmp
test
(bad)
push
aas
sti
xor
jge
pop
stc
mov
repz
jl
stos
cld
(bad)
call
dec
test
js
stos
pop
xchg
js
(bad)
sar
loop
out
xchg
mov
push
add
adc
lds
(bad)
inc
ins
sar
test
pusha
jle
test
mov
aam
ss
mov
movsx
call
add
loope
mov
idiv
js
adc
mov
pop
test
(bad)
(bad)
(bad)
push
loop
sbb
repz
cdq
pop
rcl
add
mov
cli
add
fcos
(bad)
(bad)
call
in
sbb
retf
sub
sub
scas
mov
xchg
gs
sahf
int3
sbb
push
out
push
mov
or
cwde
into
push
xchg
test
push
mov
mov
adc
(bad)
(bad)
(bad)
call
bound
xor
in
or
adc
in
leave
mov
mov
jmp
loopne
dec
and
push
rcl
loopne
jmp
out
add
dec
js
ins
mov
cmps
adc
in
idiv
mov
addr16
push
push
sbb
and
push
(bad)
(bad)
(bad)
call
inc
jmp
sbb
mov
shl
cmp
popf
retf
imul
fidiv
and
dec
loopne
rol
push
mov
sbb
shl
(bad)
(bad)
jg
adc
and
gs
dec
xchg
inc
imul
xchg
stos
xchg
mov
mov
(bad)
(bad)
(bad)
call
xor
push
inc
cmps
lods
jp
test
stc
or
in
test
push
(bad)
(bad)
push
mov
jne
int3
in
not
mov
inc
mov
bound
in
(bad)
call
adc
lock
je
adc
or
aas
sbb
lahf
in
(bad)
(bad)
(bad)
push
(bad)
push
call
xchg
sbb
mov
and
jns
repz
shl
lock
pop
movq
sub
xor
cmps
push
popf
mov
and
aad
push
lock
inc
jp
inc
sub
xchg
xchg
dec
(bad)
(bad)
(bad)
dec
loope
inc
jp
and
mov
jae
push
scas
(bad)
and
ss
call
(bad)
cmp
call
fbld
loope
inc
fwait
xchg
movs
leave
pusha
aaa
stos
push
mov
hlt
(bad)
(bad)
jmp
(bad)
lock
pop
movs
jne
xchg
cmps
dec
fwait
in
inc
outs
das
cs
popf
rcr
adc
mov
xchg
je
es
(bad)
push
(bad)
sub
(bad)
xchg
jnp
dec
or
(bad)
(bad)
(bad)
fdiv
repnz
ja
stos
(bad)
arpl
jle
mov
xchg
pop
or
es
push
sub
pushf
(bad)
(bad)
(bad)
dec
xor
dec
mov
sub
imul
es
iret
shl
dec
inc
pushf
cmps
xchg
sahf
(bad)
(bad)
(bad)
dec
loop
ret
and
jmp
and
pop
cli
loope
imul
dec
push
mov
int3
inc
lods
sub
dec
dec
(bad)
jge
ds
pop
les
inc
retf
dec
into
das
cli
(bad)
jmp
outs
xlat
aaa
xor
push
jl
mov
imul
(bad)
call
aam
push
jbe
icebp
popf
outs
jge
xchg
fisttp
mov
cli
(bad)
(bad)
cmp
dec
fld
add
xor
(bad)
sar
sub
lods
loopne
(bad)
dec
sahf
or
or
js
add
aas
jl
pop
mov
push
cmovbe
jnp
push
std
inc
iret
inc
pop
or
clc
and
add
pusha
xor
std
push
test
mov
cmp
xchg
sub
push
stos
mov
xchg
(bad)
mov
rol
add
out
mov
or
int
dec
movs
xor
icebp
popa
jle
mov
ficomp
cmps
out
(bad)
xor
xchg
aas
ret
pop
(bad)
cli
test
(bad)
dec
(bad)
mov
dec
jno
int3
add
mov
xor
and
iret
push
into
loope
pop
(bad)
jg
jg
addr16
pusha
fidiv
ins
sahf
sbb
cmp
xor
(bad)
mov
mov
test
fnstcw
ins
jecxz
mov
or
pop
add
scas
jg
out
cli
or
mov
mov
sbb
mov
dec
in
pop
xor
mov
test
rcr
adc
gs
lea
arpl
push
push
and
(bad)
(bad)
jmp
push
cli
loopne
pop
mov
jge
dec
ror
into
xlat
das
mov
mov
cmp
stos
inc
fnstenv
mov
(bad)
xchg
pop
int
inc
pop
dec
andps
gs
push
inc
jb
(bad)
(bad)
(bad)
(bad)
(bad)
daa
add
fsubr
jo
adc
inc
xor
es
dec
(bad)
mov
cld
adc
imul
cmp
cmp
shl
xor
aad
pop
dec
shr
mov
xchg
push
inc
xchg
mov
sbb
jae
int3
xchg
push
das
and
push
call
jno
outs
fs
loope
daa
scas
loop
scas
(bad)
call
jecxz
xor
xchg
sbb
ins
ss
repz
xlat
das
xor
jmp
sub
in
je
out
mov
dec
pushf
das
pop
cli
(bad)
inc
jg
pop
jmp
lods
aad
push
inc
mov
push
jmp
mov
sub
movs
cli
mov
call
fisttp
arpl
(bad)
(bad)
(bad)
push
retf
xchg
cmp
or
jno
scas
jo
invd
dec
pop
add
jae
bound
clc
inc
fcmovb
sbb
aas
cmp
inc
jbe
leave
xor
sbb
mov
(bad)
call
sbb
cmp
ds
(bad)
xor
cdq
sub
jmp
adc
ds
sub
push
cli
inc
nop
cmp
lahf
test
rol
call
shl
retf
das
cmp
lods
push
call
aad
out
xchg
cs
(bad)
jmp
cmps
fiadd
sub
adc
push
mov
inc
adc
fld
shl
(bad)
std
(bad)
push
jns
pop
adc
xor
test
jmp
jle
dec
xor
out
sub
or
scas
je
adc
(bad)
mov
pop
push
mov
sar
xor
(bad)
call
sub
add
imul
xchg
sub
nop
xchg
les
movs
push
pop
cmc
dec
faddp
loopne
inc
icebp
mov
stos
neg
cmp
icebp
add
(bad)
(bad)
(bad)
jmp
and
xor
inc
inc
es
add
nop
cmp
leave
test
(bad)
cmp
ret
and
dec
pop
pop
push
inc
es
aam
rol
xchg
daa
adc
(bad)
(bad)
call
dec
xchg
mov
ss
mov
das
add
sbb
cmps
mov
pop
jp
test
inc
xchg
dec
out
and
inc
imul
sbb
call
movs
jmp
dec
in
repnz
and
push
lds
inc
xor
rcl
cld
jmp
hlt
xchg
mov
lds
jmp
xor
hlt
sbb
push
outs
jmp
jle
add
jnp
int3
xchg
sahf
add
or
mov
sub
push
or
retf
xor
in
es
(bad)
fsubr
xchg
dec
outs
sbb
es
sub
cmps
jmp
jg
sbb
cmp
xchg
imul
test
icebp
(bad)
jmp
mov
pop
gs
mov
(bad)
cld
(bad)
inc
(bad)
xlat
mov
jg
push
jae
nop
mov
cmp
ficomp
pop
(bad)
das
adc
clc
(bad)
(bad)
clc
sub
sbb
sbb
iret
bound
(bad)
mov
rcl
(bad)
(bad)
out
jg
aaa
pop
jae
push
jnp
xor
jge
lea
sar
loope
cmc
repnz
(bad)
jg
aaa
mov
push
cmps
mov
mov
je
movs
les
ret
cmp
or
jl
xchg
sar
sbb
(bad)
es
out
cs
out
and
(bad)
(bad)
(bad)
(bad)
mov
mov
and
or
mov
add
(bad)
jns
push
or
or
(bad)
(bad)
jmp
pop
imul
jmp
dec
mov
or
push
outs
jb
arpl
or
loop
dec
into
cwde
sub
jmp
(bad)
bsr
in
or
add
test
and
jne
lods
dec
jmp
std
outs
and
and
pop
ds
push
(bad)
(bad)
jg
mov
out
test
dec
lods
sub
les
mov
mov
stos
push
movs
mov
jge
push
ss
dec
shr
mov
dec
hlt
fidivr
in
add
mov
into
jbe
mov
stc
dec
mov
ret
mov
pop
xchg
adc
mov
or
push
cmp
outs
and
sub
mov
outs
es
ss
cmp
dec
retf
into
fucomp
push
sbb
(bad)
push
sahf
mov
fldenv
mov
imul
rcr
call
jns
sub
jmp
xor
ss
mov
les
jb
mov
jb
sbb
cmc
bound
call
pop
cmp
sub
add
mov
jmp
ret
or
jmp
imul
sbb
jmp
lods
inc
fdiv
sbb
xor
sub
cs
sbb
(bad)
call
or
loope
ret
imul
ins
jnp
cmp
mov
fild
std
lahf
clc
sub
push
movs
mov
dec
movs
(bad)
(bad)
mov
call
pop
inc
mov
dec
mov
(bad)
ss
ficomp
mov
jle
shr
adc
push
mul
xor
xchg
cmp
(bad)
dec
and
sahf
call
push
inc
mov
rcr
push
test
bound
(bad)
jg
(bad)
and
or
call
rcr
inc
idiv
xor
daa
fimul
xor
cmp
fadd
pop
retf
ds
std
inc
adc
inc
xchg
inc
or
xchg
jg
and
clc
fild
gs
rol
lods
(bad)
jb
into
inc
pop
(bad)
bound
test
cwde
adc
push
mov
clc
mov
in
jmp
xor
cmp
dec
cwde
mov
leave
into
ficom
out
sbb
(bad)
call
push
fs
es
jns
xor
hlt
nop
push
repz
daa
pop
stos
or
hlt
shr
mov
cld
in
rol
xchg
retf
inc
dec
std
(bad)
(bad)
fdivr
jecxz
out
jno
not
pop
(bad)
cmp
push
mov
aaa
cwde
xchg
lods
(bad)
popa
sub
pop
loopne
xor
xor
push
sbb
das
adc
(bad)
mov
gs
test
dec
(bad)
sti
popa
xchg
(bad)
(bad)
(bad)
inc
mov
imul
cli
and
rcr
jmp
pop
pushf
dec
push
push
inc
inc
(bad)
out
jo
clc
call
push
xchg
bound
dec
inc
test
enter
jg
mov
mov
movs
mov
inc
mov
cmps
push
adc
jnp
fmul
mov
in
pop
mov
pop
push
mov
add
mov
sub
jp
mov
fcom
xchg
cmp
loope
jg
aaa
sub
daa
adc
sub
ja
scas
pop
cdq
sar
push
and
pop
adc
mov
sar
jg
mov
aas
cmps
in
(bad)
jle
arpl
fist
(bad)
(bad)
fdivp
pop
sub
fistp
xor
(bad)
int3
fdivr
(bad)
(bad)
mov
and
mov
jbe
and
adc
hlt
sub
(bad)
pop
hlt
pop
or
fbld
in
inc
lods
fmul
inc
mov
xchg
retf
cmp
(bad)
sbb
ds
ss
neg
in
loopne
mov
enter
rcl
jge
in
out
cmp
in
mov
lahf
cmps
and
clc
out
dec
loope
push
sbb
inc
loop
(bad)
(bad)
push
in
sbb
in
jb
push
div
cmp
stos
jmp
ror
mov
pop
imul
mov
shr
movs
jmp
dec
mov
xchg
xchg
and
push
xchg
fldcw
(bad)
(bad)
dec
popa
or
(bad)
adc
xchg
loop
add
add
pop
(bad)
(bad)
(bad)
call
out
cld
aam
adc
pop
call
push
jb
xchg
and
jo
add
(bad)
sbb
sub
mov
xor
add
(bad)
(bad)
(bad)
call
mov
mov
out
xor
xor
sahf
retf
out
and
sbb
(bad)
(bad)
dec
mov
mov
xchg
mov
dec
push
loop
sbb
jmp
loop
(bad)
call
ror
stos
pop
xlat
fs
jnp
inc
std
mov
sahf
dec
xchg
xchg
scas
cmp
mov
rcr
lock
(bad)
and
cdq
cmp
retf
in
sbb
adc
and
and
rcl
hlt
and
pop
inc
ins
je
and
shl
inc
call
fnstcw
test
outs
jmp
inc
das
ret
repnz
popf
std
sub
inc
addr16
inc
push
jae
in
mov
ins
pushf
pushf
push
xchg
int3
(bad)
(bad)
mov
enter
xchg
add
sbb
js
shl
cmp
std
push
mov
sti
sar
mov
shr
inc
cdq
sbb
sbb
lock
in
call
fs
sbb
outs
test
and
aad
sahf
imul
(bad)
(bad)
push
loop
mov
mov
push
sbb
repz
jb
or
mov
int3
mov
(bad)
jg
jmp
hlt
mov
and
clc
leave
lock
pop
pop
adc
sub
(bad)
rol
aam
(bad)
xchg
mov
cmps
fisubr
mov
outs
stos
cs
pushf
lock
add
mov
jbe
mov
aam
leave
adc
jnp
js
jne
loop
(bad)
jmp
clc
jle
and
push
idiv
mov
and
or
push
pop
add
xchg
out
inc
cdq
mov
shl
jmp
cli
jmp
test
sahf
mov
mov
add
or
xchg
jmp
hlt
(bad)
call
in
adc
std
clc
push
in
jg
adc
aas
(bad)
(bad)
jg
add
push
inc
lock
loop
mov
pushf
sbb
call
(bad)
call
dec
popa
jo
xchg
cmp
sti
loopne
psrad
and
mov
retf
cmp
sar
lahf
dec
and
sub
fsubr
movs
cli
inc
mov
xor
jle
cmp
imul
or
(bad)
rcr
(bad)
cli
je
(bad)
jg
in
fld
inc
scas
and
dec
int3
ss
inc
xchg
out
xchg
jne
loop
cmps
clc
push
sub
shl
lahf
mov
pop
sar
fdiv
fwait
enter
xor
adc
sub
(bad)
into
dec
mov
fwait
scas
dec
call
sub
ja
push
leave
imul
push
(bad)
push
icebp
cli
icebp
sbb
dec
sbb
in
leave
lods
cmp
(bad)
int
clc
(bad)
fcomip
int
adc
adc
dec
jge
out
or
pop
js
pop
sub
jmp
mov
aam
push
mov
repz
int3
dec
push
fcomi
(bad)
dec
and
loopne
enter
jg
call
data16
mov
cs
or
(bad)
ds
(bad)
(bad)
call
pop
popa
mov
sub
movs
in
xchg
pop
test
fwait
mov
lea
dec
scas
aad
clc
pop
jbe
xchg
xor
jecxz
push
push
test
mov
sub
or
(bad)
call
and
pop
pushf
mov
cmp
loope
cwde
call
xchg
mov
mov
call
es
js
and
(bad)
push
cmp
aad
mov
js
push
push
jnp
and
(bad)
jmp
aam
dec
jae
loopne
mov
fdiv
xchg
fs
mov
stos
xchg
inc
mov
adc
sub
out
ins
push
fcmovne
mov
inc
out
popa
call
sbb
loopne
bound
push
fidiv
xchg
sbb
fwait
jg
aad
push
mov
ret
xchg
loopne
pusha
push
pop
push
jl
hlt
or
shl
jbe
mov
mov
ds
(bad)
push
clc
pop
mov
mul
cmp
dec
mov
jg
inc
jge
push
sub
movs
ins
movs
sahf
pop
(bad)
fisttp
mov
call
cwde
aas
mov
ror
sar
push
inc
cmp
ret
inc
dec
jo
gs
add
int3
in
and
xor
fstp
imul
ret
pushf
hlt
jge
push
mov
mov
aam
clc
mov
test
pop
mov
add
mov
retf
std
mov
xchg
shl
mov
inc
(bad)
adc
mov
retf
pop
fisub
sub
push
jb
mov
imul
pop
and
xlat
(bad)
push
xchg
pop
xor
xchg
mov
dec
mov
call
fwait
(bad)
(bad)
jg
sar
leave
sbb
xchg
fadd
mov
push
and
sar
(bad)
(bad)
inc
sub
aam
xchg
and
xor
or
(bad)
lds
loop
lods
pop
stos
dec
mov
mov
add
(bad)
dec
gs
sahf
fisttp
pop
pop
dec
retf
idiv
(bad)
(bad)
out
ins
adc
iret
jb
sub
shr
mov
stc
or
jle
pop
ja
(bad)
out
and
adc
js
jle
xchg
jge
ins
xchg
cli
mov
mov
ret
in
xor
cli
jg
push
cli
mov
imul
push
sbb
lds
jmp
jo
dec
es
(bad)
(bad)
call
and
int3
aaa
nop
mov
movs
inc
jge
repnz
jg
dec
cld
cld
mov
push
sbb
mov
mov
sub
jno
xchg
push
cmp
inc
les
(bad)
outs
sar
inc
mov
mov
clc
jns
icebp
mov
imul
(bad)
fcomip
sbb
scas
frstor
jl
add
retf
lea
add
stc
pop
in
loopne
adc
jp
mov
stos
add
mov
cmps
(bad)
dec
loop
popf
ret
add
arpl
jg
(bad)
inc
inc
jg
icebp
aad
loop
mov
inc
aas
(bad)
fdiv
xor
(bad)
jmp
jmp
pop
add
mov
rcr
xlat
out
sbb
jne
dec
add
xor
sub
mov
inc
xchg
ret
(bad)
jg
int3
or
add
mov
div
adc
cmp
pop
loop
push
fdivr
mov
mov
loope
jb
bound
sar
(bad)
mov
outs
push
cmp
push
inc
jmp
xor
add
pop
cmps
clc
in
jb
(bad)
mov
push
cmp
sub
mov
retf
or
(bad)
call
or
xlat
dec
xchg
ins
jae
(bad)
push
bound
movs
adc
add
icebp
mov
sbb
(bad)
(bad)
(bad)
call
cmps
movs
or
stos
stos
cmp
add
jno
push
movs
mov
cmp
lea
dec
mov
pop
scas
and
fwait
dec
imul
cld
call
mov
daa
pop
pop
push
push
(bad)
(bad)
(bad)
jg
adc
fdivr
nop
add
xor
cmps
jne
lahf
sub
ins
jmp
sub
mov
(bad)
dec
lods
scas
lahf
cmp
mov
(bad)
cwde
dec
imul
push
pop
stos
pop
out
data16
aaa
or
push
iret
xchg
lds
(bad)
call
inc
cwde
mov
movs
mov
jb
rol
mov
lock
jnp
mul
mov
hlt
and
shl
out
jbe
add
xor
lahf
idiv
inc
pusha
xchg
dec
ins
sbb
push
pop
mov
xor
sub
push
retf
nop
or
xchg
ds
aad
pop
hlt
(bad)
cmp
push
rcl
dec
inc
mov
xchg
sahf
mov
mov
pop
dec
sar
dec
xchg
or
pop
add
jge
pop
les
ret
sbb
dec
mov
fwait
aam
mov
sbb
(bad)
jbe
(bad)
dec
aaa
in
mov
call
mov
adc
scas
dec
sar
xor
loop
enter
mov
push
repz
ds
jno
out
lock
jmp
addr16
mov
xchg
(bad)
fidivr
mov
jnp
(bad)
inc
movs
and
dec
inc
mov
ja
fwait
ins
popf
push
push
jmp
pop
icebp
call
or
jmp
sbb
dec
pop
pop
pop
xor
(bad)
cmp
and
pushf
mov
jns
fs
test
(bad)
call
pop
xchg
or
call
aas
and
je
and
dec
mov
pop
xor
mov
das
add
js
pop
jl
fsub
cmc
(bad)
(bad)
call
out
push
mov
add
std
hlt
and
or
(bad)
call
std
ds
sbb
aaa
in
ret
sbb
and
enter
sbb
int3
mov
(bad)
jmp
in
adc
jmp
add
sub
scas
inc
pushf
(bad)
jg
(bad)
(bad)
call
loope
cmps
daa
sub
test
enter
in
pop
cwde
dec
and
inc
ret
or
inc
mul
fstp
xchg
and
xchg
dec
jg
sub
dec
or
fisubr
call
repnz
dec
mov
int3
push
std
add
jmp
imul
mov
in
sbb
or
call
arpl
data16
inc
movs
pop
sub
dec
out
lea
or
pusha
(bad)
(bad)
(bad)
jmp
ins
clc
jmp
cmp
cmps
ins
mov
mov
jbe
jae
loopne
mov
(bad)
push
ret
stos
inc
pop
and
daa
push
jo
int3
dec
or
(bad)
(bad)
jmp
mov
stos
addr16
jle
jp
fstp
sar
inc
add
clc
(bad)
aas
mov
mov
es
xchg
jo
pop
ins
cld
jmp
cdq
jne
cmp
mov
mov
jg
test
inc
dec
push
cwde
sbb
test
scas
cli
mov
(bad)
cmp
(bad)
jnp
or
mov
jle
and
repz
std
pop
mov
sbb
sar
ficom
mov
inc
xchg
jb
and
or
scas
gs
mov
dec
mov
je
call
add
push
add
mov
out
ja
jo
inc
xor
(bad)
(bad)
jmp
dec
mov
mov
test
xor
cmp
aam
xor
dec
mov
es
ret
mov
pop
aas
ins
call
std
sub
dec
popa
dec
mov
push
dec
int3
rcl
(bad)
(bad)
(bad)
call
enter
push
pop
lods
xchg
cmc
in
push
jne
xchg
(bad)
(bad)
xor
add
pop
pop
mov
mov
and
mov
mov
jg
shr
mov
mov
mov
(bad)
(bad)
aaa
xlat
(bad)
(bad)
(bad)
(bad)
cmp
ins
push
ss
fst
test
fnsave
jmp
push
lods
repz
shl
push
(bad)
(bad)
(bad)
push
out
mov
int3
and
push
std
movs
push
enter
cld
jns
outs
cmp
mov
dec
push
outs
clc
(bad)
call
int3
test
sbb
pop
outs
sbb
outs
loope
and
lods
xchg
push
sahf
(bad)
(bad)
(bad)
inc
mov
xchg
ins
pop
sbb
pop
push
push
and
ins
pop
fs
sbb
dec
(bad)
movs
dec
xor
retf
cmp
adc
loopne
(bad)
dec
or
mov
popf
adc
(bad)
mov
push
cli
scas
movs
mov
xor
jae
(bad)
(bad)
jmp
cwde
sub
adc
and
(bad)
dec
(bad)
out
aas
lock
mov
fnstcw
cs
push
icebp
(bad)
mov
sahf
mov
xchg
cmp
fnsave
in
imul
add
movs
cmp
dec
xor
add
inc
jp
int3
nop
(bad)
(bad)
dec
adc
adc
add
fadd
jg
test
cld
xchg
retf
push
fadd
jns
and
std
retf
ds
sbb
mov
push
dec
mov
pop
inc
and
cli
call
shl
mov
adc
push
aaa
jl
xor
add
cmp
xchg
sub
sahf
mov
cli
pop
and
test
enter
(bad)
nop
int3
aaa
adc
xchg
push
sar
(bad)
call
adc
inc
les
fs
xchg
xor
mov
(bad)
sbb
cs
sub
adc
xor
aas
mov
mov
lahf
dec
mov
pop
lock
(bad)
(bad)
(bad)
(bad)
jg
(bad)
dec
and
fdivrp
fstp
aam
mov
inc
jns
fcom
mov
loope
cld
add
inc
cld
fsub
bound
mov
sbb
push
add
sub
movs
adc
mov
iret
shr
push
dec
mov
inc
jge
shl
ret
inc
mov
inc
std
aaa
loop
pop
cli
push
pop
cmc
cmp
(bad)
cmps
aas
cwde
lds
cli
bound
jg
movs
popf
sahf
xchg
jecxz
mov
lds
cmc
pop
lock
xchg
retf
(bad)
mov
aas
js
or
jae
xor
fidiv
jnp
jge
cli
adc
dec
push
(bad)
(bad)
(bad)
(bad)
(bad)
aas
mov
das
fadd
jle
test
sti
jo
es
cdq
movs
aam
mov
jecxz
lods
jmp
jns
mov
loop
pop
jle
(bad)
jmp
xchg
jle
xchg
(bad)
mov
(bad)
jg
mov
in
mov
test
jae
or
retf
xchg
movs
jns
loopne
(bad)
(bad)
cmp
push
cs
pop
xchg
loope
rcr
pop
mov
fld
push
test
data16
(bad)
mov
adc
scas
fisttp
in
sahf
dec
clc
dec
cmp
(bad)
cmp
sub
test
(bad)
(bad)
out
shr
sub
add
mov
sub
hlt
mov
outs
fwait
jo
(bad)
mov
pop
and
push
movs
xor
ds
xchg
es
call
arpl
dec
adc
jle
das
or
(bad)
das
pop
aaa
and
xchg
xor
call
(bad)
mov
or
mov
jne
fsubr
call
jmp
mov
cmp
mov
(bad)
(bad)
(bad)
jmp
sahf
js
lahf
inc
(bad)
shr
nop
lods
scas
xor
or
push
inc
inc
retf
fcom
std
push
mov
push
mov
out
scas
scas
jle
mov
push
cmp
cmp
repz
or
(bad)
(bad)
push
or
xchg
xchg
dec
pop
or
loope
mov
sub
push
xchg
call
add
je
jp
out
test
(bad)
(bad)
call
int3
and
and
push
aaa
jmp
movs
sub
das
ss
or
cmp
and
inc
call
xchg
cmps
les
or
pusha
cmps
push
movs
das
pop
lods
div
sbb
(bad)
jno
in
sahf
sub
test
push
pop
ins
fidiv
fild
xchg
xor
(bad)
jmp
outs
xor
das
sbb
push
test
xor
or
push
xor
(bad)
(bad)
(bad)
call
pusha
and
inc
stc
add
cmp
iret
add
cs
fs
(bad)
dec
mov
enter
jle
fld
push
into
ins
pop
test
lock
cdq
sub
jg
stos
xchg
sbb
push
in
or
std
(bad)
inc
outs
sub
cmp
daa
bswap
mov
jo
sub
(bad)
call
or
mov
ins
rcl
xor
div
pop
xor
movntps
out
loopne
jae
jl
fstp
jns
ins
lods
es
adc
xor
cld
xchg
pop
imul
(bad)
xor
shl
adc
ins
fbstp
mov
sub
fldenv
(bad)
shl
adc
mov
pop
pop
mov
fbstp
adc
(bad)
push
adc
xor
into
fcmovb
sub
mov
xchg
mov
mov
repz
jmp
xor
repz
hlt
jmp
dec
sti
xchg
cmp
in
lea
cmp
mov
cmp
(bad)
mov
mov
cmp
xchg
pushf
loope
push
int
or
(bad)
call
popa
push
test
xchg
rcl
mov
add
dec
push
loopne
dec
fcom
cmc
push
leave
sahf
in
xchg
sub
xlat
push
sub
es
in
pop
jl
lahf
dec
cs
jmp
int3
mov
call
outs
and
adc
fcmovu
inc
jg
sub
(bad)
lock
push
and
ins
inc
sbb
(bad)
call
ds
jne
sahf
pop
popa
popa
jno
aas
std
leave
div
aaa
mov
(bad)
(bad)
(bad)
(bad)
jmp
and
xor
or
fwait
adc
xchg
aaa
or
imul
xor
scas
mov
shl
cmp
xlat
out
sbb
loope
lea
pop
lea
or
call
retf
and
dec
inc
cmp
inc
dec
mov
jmp
xchg
shl
lods
or
or
jmp
fwait
movs
mov
(bad)
cmp
js
call
cmp
das
sbb
mov
adc
mov
push
test
(bad)
(bad)
dec
gs
stos
xchg
aas
das
sbb
mov
push
cmps
ins
test
jge
nop
sbb
(bad)
jmp
push
mov
ss
push
ss
dec
lods
mov
int3
push
(bad)
(bad)
mov
pusha
inc
add
pusha
dec
cmp
movs
and
xchg
retf
and
ret
inc
fcomp
call
inc
out
xchg
outs
inc
in
xlat
cmp
fwait
sahf
mov
(bad)
(bad)
fbld
les
xor
jno
(bad)
movs
jmp
jno
int3
mov
push
dec
jnp
sub
outs
push
mov
mov
in
cmp
pop
sti
imul
(bad)
(bad)
inc
ss
jns
mov
xchg
xor
jle
add
jp
sub
(bad)
jg
cmc
icebp
retf
outs
mov
fnstcw
aad
jmp
(bad)
(bad)
jmp
mov
sub
jae
outs
adc
jle
xor
sti
shl
(bad)
(bad)
(bad)
jmp
ins
mov
pop
inc
pop
in
jae
pop
push
cwde
adc
dec
out
sub
xchg
adc
mov
cmc
and
pand
(bad)
mov
shl
mov
sbb
mov
(bad)
call
call
xchg
stc
dec
(bad)
lods
sbb
mov
into
push
push
imul
pop
retf
mov
or
cdq
ins
and
xor
(bad)
(bad)
(bad)
jmp
lods
mov
cli
and
test
sbb
push
and
or
pop
(bad)
(bad)
(bad)
(bad)
push
lds
push
enter
mov
adc
sub
scas
ret
or
mov
mov
mov
and
cli
pop
in
add
(bad)
(bad)
push
add
mov
mov
loop
sub
int
add
xchg
add
(bad)
(bad)
(bad)
push
inc
dec
adc
mov
pop
mov
clc
push
jg
sub
ret
or
inc
dec
push
(bad)
(bad)
(bad)
jmp
and
jb
mov
pop
sub
jbe
lea
cmc
(bad)
call
or
inc
pop
mov
lea
xchg
push
sub
pop
(bad)
push
pop
retf
mov
(bad)
(bad)
call
fimul
popf
cmp
xchg
ins
gs
ds
jge
std
(bad)
inc
shl
out
pop
enter
int3
cdq
int3
pop
fwait
fwait
shr
(bad)
(bad)
jg
pop
ror
sub
mov
cs
fwait
(bad)
and
mov
jmp
and
mov
movs
pop
adc
pop
scas
and
out
push
out
icebp
mov
and
cli
or
add
std
clc
stc
dec
pop
jmp
clc
inc
dec
ret
inc
pop
shl
pop
outs
mov
add
(bad)
and
(bad)
call
mov
adc
rol
in
cmp
repnz
add
es
and
(bad)
(bad)
out
int3
(bad)
outs
retf
sti
and
dec
iret
jle
jns
arpl
inc
xor
call
mov
jge
mov
shl
and
(bad)
dec
rcr
adc
push
retf
mov
jmp
pop
(bad)
(bad)
(bad)
dec
lods
int3
and
mov
xor
push
fiadd
stos
pop
(bad)
cld
into
stc
xchg
cmps
mov
(bad)
(bad)
jmp
fdivr
mov
pushf
pop
xchg
stos
adc
retf
shl
cmp
(bad)
jl
(bad)
je
mov
lods
push
minps
aam
int3
popa
push
aas
add
(bad)
call
pop
popf
mov
sub
cdq
mov
inc
or
xchg
(bad)
(bad)
call
loopne
ret
ds
cs
cwde
fsubr
dec
repz
outs
xchg
pop
xchg
jns
icebp
or
mov
xchg
ret
mov
(bad)
fisttp
xchg
cmp
pop
lock
jl
xchg
out
sub
push
imul
or
adc
jnp
xchg
(bad)
(bad)
jmp
push
mov
out
pop
retf
sub
inc
jl
inc
dec
jae
retf
(bad)
mov
scas
mov
cmps
in
loop
pushf
pop
int
pop
jae
js
push
cld
jmp
rcr
dec
jnp
inc
jnp
sub
sub
mov
repz
call
jae
sub
imul
add
sbb
clc
(bad)
(bad)
(bad)
jmp
cmps
sahf
fnstsw
push
fisubr
pop
cmp
(bad)
sbb
cmp
sub
push
push
rcl
pop
jb
mov
xor
(bad)
push
movs
lods
push
int
loopne
jnp
xchg
lahf
adc
sub
push
push
repnz
add
ds
(bad)
(bad)
push
aas
sbb
pop
gs
add
mov
in
dec
inc
(bad)
jp
jnp
mov
(bad)
(bad)
jmp
xchg
add
push
xchg
mov
or
adc
rol
cmp
lds
cli
(bad)
(bad)
in
rol
sub
repnz
stc
push
test
inc
push
fisubr
fs
xchg
cdq
mov
not
(bad)
jmp
es
and
arpl
popa
out
xor
(bad)
(bad)
jmp
test
shl
pop
pop
pop
sbb
fwait
sbb
and
ffreep
xchg
scas
adc
(bad)
dec
push
mov
sub
int
rcr
call
adc
xchg
aad
mov
(bad)
call
and
arpl
inc
xchg
xchg
pushf
pushf
scas
sub
xor
hlt
(bad)
push
ret
mov
(bad)
rcl
push
aaa
std
(bad)
ffreep
mov
movs
adc
inc
(bad)
adc
push
ins
mov
rcl
pusha
xor
jb
arpl
(bad)
fbld
repnz
int
push
jp
ret
push
mov
jl
and
or
(bad)
fist
sbb
mov
sahf
ucomiss
(bad)
call
jle
ds
cmp
fidivr
add
pushf
cmp
xchg
mov
add
ss
popa
xchg
scas
xor
(bad)
out
mov
out
addr16
mov
cli
loop
fiadd
push
loope
call
adc
jae
les
stos
push
(bad)
jecxz
dec
dec
iret
and
(bad)
jmp
dec
test
adc
dec
mov
pop
cs
(bad)
mov
adc
retf
jae
mov
sub
nop
gs
(bad)
inc
scas
outs
sub
pushf
cdq
fadd
popf
xchg
ins
jbe
movsx
mov
es
cmp
mov
in
shl
mov
mov
xchg
std
cmp
xchg
add
cmc
daa
out
adc
fild
(bad)
mov
mov
loopne
pop
stc
sub
inc
aaa
pop
call
(bad)
sub
jmp
in
cmp
repnz
inc
ror
jge
add
mov
repnz
mov
fldcw
add
sahf
mov
jp
idiv
test
daa
dec
cmp
sbb
(bad)
fdivr
adc
(bad)
call
mov
mov
mov
xchg
in
push
mov
xor
nop
jge
mov
adc
(bad)
call
push
shr
mov
ret
lods
xor
jmp
push
cmp
jg
cmp
retf
xchg
movs
or
cmp
sub
adc
scas
data16
(bad)
(bad)
mov
mov
jl
sbb
jp
sbb
add
mov
mov
addr16
mov
(bad)
(bad)
(bad)
jmp
mov
ror
adc
out
cmp
fist
jmp
push
xor
rcl
adc
pop
sbb
das
adc
movs
and
mov
ret
es
movs
in
mov
cmps
jmp
repz
sub
xchg
sub
inc
jmp
cmps
cmp
xchg
(bad)
(bad)
(bad)
jmp
sbb
cdq
stos
imul
jne
aaa
jne
and
sub
cmps
js
rcl
add
push
outs
lods
int
gs
stos
repnz
push
mov
outs
imul
pop
jecxz
popf
sub
shl
push
cmp
(bad)
jmp
out
sub
(bad)
mov
jo
push
cmps
fldenv
push
jecxz
mov
pushf
inc
fstp
(bad)
(bad)
call
push
fdiv
mov
pop
pop
dec
add
hlt
fcos
jmp
(bad)
call
push
out
repnz
hlt
jmp
adc
pop
xchg
fiadd
fcom
call
cld
or
fsub
jle
loope
or
xchg
ins
xor
(bad)
out
mov
cmp
mov
fwait
loop
mov
sar
dec
and
aaa
std
mov
popa
movs
mov
push
stos
mov
(bad)
jmp
loope
call
add
retf
pop
(bad)
push
mov
arpl
(bad)
(bad)
jmp
loope
retf
test
xchg
sbb
pusha
inc
ror
add
imul
stc
pop
add
imul
popa
xor
pusha
sbb
(bad)
call
hlt
and
sub
daa
out
push
and
nop
(bad)
out
add
(bad)
repnz
mov
jnp
sahf
aaa
xor
rcr
rcr
(bad)
aad
or
jnp
push
lea
mov
stos
jmp
mov
mov
fbld
pop
push
and
sub
xor
cmp
and
cmps
or
loop
addr16
fidiv
lds
cld
call
jg
dec
mov
enter
stc
push
and
lds
mov
adc
push
sbb
jmp
xchg
out
lahf
xor
mov
add
fyl2xp1
stos
adc
sbb
or
dec
jl
dec
push
mov
sbb
and
(bad)
push
xor
adc
dec
lds
stos
enter
jecxz
xor
pop
push
jg
lods
call
js
(bad)
cwde
jne
lock
out
mov
sbb
lods
xor
xor
fs
mov
cmps
call
cmc
les
sbb
mov
(bad)
fsub
ret
lock
jg
out
xchg
hlt
idiv
adc
lock
jecxz
out
push
mov
jmp
pushf
or
test
(bad)
cmp
jmp
ins
scas
sar
cmp
outs
jmp
xlat
out
fimul
ds
imul
pop
std
xor
xchg
(bad)
(bad)
in
out
in
addr16
mov
loopne
and
lahf
cli
sbb
pop
xchg
fadd
dec
add
mov
in
and
cmp
xchg
and
add
outs
fldcw
enter
sbb
mov
cmp
into
fbld
call
pop
jl
jle
neg
xchg
pop
mov
mov
inc
xchg
jnp
(bad)
call
mov
mov
mov
js
std
push
aam
sub
mov
gs
sub
cmp
leave
enter
sbb
les
dec
std
dec
mov
inc
add
push
fadd
xchg
dec
mov
push
or
lock
mov
out
dec
(bad)
cmp
ret
popf
out
pop
loopne
dec
dec
mov
pop
xchg
(bad)
(bad)
(bad)
jmp
lea
shl
xchg
rol
mov
dec
cmp
(bad)
(bad)
jmp
mov
int3
call
fs
and
call
outs
jle
sahf
iret
mov
(bad)
(bad)
fidivr
out
scas
and
sub
mov
fwait
push
dec
stos
stos
neg
mov
or
jg
xor
dec
mov
inc
sbb
(bad)
(bad)
(bad)
(bad)
jp
dec
mov
aas
sub
inc
rcl
xor
xor
stos
mov
cmc
(bad)
and
push
shl
cs
xlat
push
mov
(bad)
inc
pop
inc
mov
clc
and
sbb
or
push
fldcw
pushf
mov
xlat
fdivr
mov
inc
mov
out
sahf
fld
into
aas
mov
mov
(bad)
(bad)
(bad)
js
or
ror
add
int3
inc
adc
mov
aad
out
hlt
push
mov
jg
sub
dec
dec
push
add
arpl
(bad)
(bad)
(bad)
in
push
enter
int3
dec
or
std
jge
pop
mov
movs
iret
fist
inc
push
mov
test
(bad)
cli
adc
push
(bad)
(bad)
(bad)
call
sbb
inc
das
mov
xor
jmp
mov
in
test
pusha
in
jmp
mov
jnp
ror
jmp
sub
mov
or
xchg
pop
in
push
(bad)
fcomip
(bad)
mov
call
sbb
stc
jl
outs
scas
xor
push
inc
dec
fstp
sub
scas
add
push
mov
xor
jp
push
xchg
dec
mov
xor
loop
(bad)
mov
mov
xor
imul
dec
inc
mov
xchg
lock
stos
cs
fimul
dec
rol
inc
fwait
xchg
inc
xchg
xor
adc
inc
call
push
or
pushf
fdiv
xor
or
pop
and
fcom
sbb
jne
(bad)
(bad)
call
rol
addr16
dec
xchg
ftst
mov
cdq
mov
mov
cwde
sahf
sub
push
mov
(bad)
jns
adc
adc
push
out
imul
jmp
xor
cdq
mov
cmp
(bad)
int
ret
je
(bad)
cmp
lds
(bad)
sub
ja
sbb
(bad)
(bad)
dec
out
dec
or
test
adc
stos
ss
iret
out
jmp
mov
in
dec
inc
add
mov
div
fisubr
jle
cdq
out
mov
in
(bad)
jg
ins
sar
dec
in
push
hlt
fistp
into
pop
inc
and
xchg
mov
out
outs
lods
icebp
mov
ss
enter
arpl
test
sbb
mov
xor
(bad)
(bad)
call
mov
jle
jb
sti
daa
inc
std
(bad)
cmps
push
shr
xor
ins
xchg
add
cmps
push
and
(bad)
fisttp
ret
aas
cmp
clc
jecxz
in
clc
int3
jecxz
(bad)
(bad)
(bad)
jno
sbb
push
mov
or
test
fisubr
cld
adc
(bad)
(bad)
pop
ins
add
mov
clc
(bad)
gs
dec
(bad)
call
lea
aaa
jle
add
out
(bad)
(bad)
(bad)
inc
push
add
jns
fisubr
sar
jno
jae
mov
ins
loopne
rcl
frstor
int3
pop
mov
inc
cmp
(bad)
xchg
and
scas
pop
imul
mov
mov
out
push
jmp
mov
mov
push
jl
cdq
inc
sub
enter
(bad)
cmp
cmps
fistp
jnp
push
je
xchg
(bad)
call
adc
and
cli
adc
inc
xchg
or
aaa
xlat
lock
daa
inc
mov
dec
bound
icebp
xchg
mov
fcmovbe
call
pop
js
push
repnz
gs
mov
jne
pop
jnp
or
and
adc
hlt
lods
push
shl
jns
mov
mov
push
cmc
(bad)
and
add
xorps
and
test
std
(bad)
jmp
je
in
and
bnd
iret
xchg
mov
mov
(bad)
(bad)
jg
cmps
popa
and
inc
cdq
mov
mov
(bad)
lock
popf
mov
popf
lods
js
(bad)
jmp
cmp
or
cmc
lea
stc
adc
pusha
jmp
sbb
fisttp
xor
add
cmp
xchg
xchg
clc
mov
mov
bound
dec
std
jmp
cli
outs
push
jmp
jo
jae
in
pop
or
mov
fiadd
xchg
scas
sub
(bad)
(bad)
push
xor
push
(bad)
jmp
dec
scas
add
(bad)
cmp
ret
pop
add
sub
cmc
(bad)
call
mov
mov
mov
shl
daa
scas
ret
test
aaa
sahf
cmp
imul
je
mov
ds
mov
ins
mov
loop
inc
pop
cmp
fcomp
cmp
jle
imul
(bad)
jmp
pusha
adc
mov
(bad)
int
mov
jl
inc
(bad)
mov
xor
push
aam
lahf
scas
mov
jmp
pop
inc
sbb
push
pop
push
sub
adc
imul
clc
outs
sbb
call
retf
cwde
cwde
enter
lds
or
jmp
mov
sub
mov
(bad)
and
pop
ins
sti
pop
fs
call
into
fadd
push
add
push
jecxz
or
cmp
sar
(bad)
jmp
xor
or
cmp
cmp
pusha
add
xchg
xchg
push
add
es
jbe
jecxz
stos
mov
push
(bad)
sbb
and
lock
int3
or
(bad)
(bad)
mov
mov
movs
dec
xor
sub
(bad)
(bad)
inc
ret
pop
push
fisub
repz
loope
mov
sti
mov
jno
test
fidiv
(bad)
jmp
pop
mov
pop
push
into
pop
popa
sub
xchg
fmul
cmp
xchg
les
(bad)
jp
mov
mov
inc
movs
(bad)
jmp
or
xor
rcl
sbb
enter
inc
or
(bad)
and
das
sar
in
mov
je
mov
(bad)
mov
add
ins
pop
pop
rcr
dec
jmp
sbb
rcl
fwait
or
(bad)
sbb
test
mov
jmp
addr16
push
adc
repz
fdivr
ud0
or
in
cli
push
popf
ds
push
test
or
(bad)
dec
cmp
lahf
cld
fistp
mov
cmp
(bad)
mov
loope
xchg
(bad)
mov
ss
fmul
pop
or
gs
cmp
out
xor
ins
shl
enter
xchg
lock
rcl
ins
sub
and
and
(bad)
(bad)
out
inc
nop
gs
pop
cmp
dec
je
jmp
mov
idiv
(bad)
jmp
pop
ds
call
jno
addr16
pop
loopne
add
(bad)
test
inc
adc
pop
dec
clc
xchg
gs
xor
xchg
(bad)
jmp
mov
fistp
cmp
out
mov
mov
je
fwait
mov
inc
sbb
mov
test
pop
loopne
and
repz
bound
jp
cmp
(bad)
call
mov
std
lods
mov
sub
dec
pop
adc
sti
ret
scas
test
adc
pusha
bound
mov
mov
outs
adc
push
sbb
cmps
mov
sbb
jmp
leave
out
jb
(bad)
ja
in
call
idiv
(bad)
pop
and
adc
out
call
mov
jno
imul
not
pop
xor
ss
pusha
ret
and
fiadd
scas
sar
outs
mov
retf
add
inc
add
xchg
loopne
ret
add
(bad)
(bad)
call
xor
hlt
inc
fiadd
retf
dec
add
ins
ins
fcomip
xchg
sub
jecxz
test
(bad)
frstor
mov
add
(bad)
(bad)
(bad)
dec
(bad)
push
xlat
xor
push
inc
sub
aam
pop
and
sbb
jae
cld
mov
adc
sar
cmp
cmp
cmp
sub
call
jnp
push
mov
add
adc
and
enter
dec
inc
je
inc
dec
sub
cdq
xchg
push
lock
sub
daa
lods
lds
ins
pop
dec
data16
clc
mov
ret
bound
hlt
out
scas
test
or
(bad)
(bad)
dec
arpl
add
push
test
(bad)
mov
dec
push
jg
rol
push
or
ins
outs
sahf
add
ins
loop
sub
xor
(bad)
(bad)
call
fst
adc
cmps
sub
cmovbe
pop
inc
cmps
pop
pop
mov
push
cmp
int
icebp
call
xor
pusha
sahf
mov
mov
mov
xchg
(bad)
cmp
mov
ss
push
sti
lahf
jb
and
jne
mov
(bad)
mov
fwait
lods
add
test
add
mov
ins
dec
dec
push
xor
(bad)
(bad)
mov
stos
in
push
es
scas
xor
cmp
lods
lods
ins
mov
dec
retf
cli
push
mov
mov
fprem
inc
(bad)
(bad)
(bad)
(bad)
ficomp
js
and
inc
iret
call
fnstsw
xor
imul
jne
mov
(bad)
pop
cld
adc
scas
cmp
mov
xlat
xchg
jnp
sbb
fimul
add
or
retf
cdq
mov
fbstp
fsubr
aaa
mov
je
pop
les
sub
out
call
pusha
xor
call
jl
mov
shl
mov
push
sub
pop
ffree
es
std
stos
imul
out
lea
jbe
(bad)
(bad)
call
sahf
fstp
sbb
mov
adc
idiv
adc
out
lds
(bad)
(bad)
(bad)
(bad)
jmp
pop
cwde
call
mov
xor
and
sahf
shl
mov
jecxz
xlat
cmp
test
loope
mov
mov
loopne
sbb
sahf
cmp
jnp
inc
loop
inc
push
mov
clc
xor
pop
xchg
aam
mov
dec
in
jmp
cmp
std
call
into
int3
cmps
jo
loopne
pop
or
cmp
(bad)
(bad)
push
daa
outs
cmp
inc
add
inc
jmp
mov
mov
(bad)
clc
dec
or
(bad)
inc
xor
int
ss
enter
adc
bnd
les
xchg
(bad)
(bad)
jmp
inc
adc
push
mov
push
mov
jnp
mov
pop
cmc
(bad)
jmp
xchg
inc
outs
out
mov
and
fcmovu
fdivr
push
cmp
ret
(bad)
(bad)
push
dec
lds
nop
lds
pop
xor
pop
lods
call
(bad)
mov
xchg
xor
cwde
jno
and
mov
(bad)
(bad)
call
push
inc
mov
movs
test
pop
les
iret
out
or
sbb
test
mov
xor
shl
xor
popa
jns
mov
jmp
mov
push
or
sub
test
lock
xchg
cmps
inc
dec
mov
mov
int
ficom
in
pusha
sbb
adc
outs
rcr
jle
bound
test
outs
pop
and
sbb
scas
inc
push
test
pop
test
pop
aam
in
movs
sar
lock
adc
push
cmp
repnz
sbb
(bad)
(bad)
inc
push
ficomp
retf
popa
xor
sbb
scas
and
out
jl
ds
out
mov
(bad)
dec
push
push
repz
neg
hlt
xlat
push
jns
mov
mov
jecxz
repz
retf
in
adc
hlt
inc
xor
adc
outs
leave
adc
popf
lahf
retf
movnti
inc
(bad)
sub
and
(bad)
(bad)
inc
dec
inc
fdiv
cmp
in
js
xchg
addr16
push
mov
shr
push
nop
add
mov
pop
cld
push
sbb
pop
outs
jg
pop
test
push
ds
jb
sbb
sub
jmp
sbb
out
fld
(bad)
(bad)
and
jle
test
hlt
jb
int
out
add
(bad)
fild
(bad)
jmp
push
dec
pop
sbb
xor
xchg
xchg
adc
mov
(bad)
fdivr
addr16
addr16
sub
test
add
(bad)
fbld
jmp
cmp
in
push
inc
test
push
std
dec
and
pusha
xchg
xchg
lock
pop
xor
dec
jb
dec
add
pop
clc
(bad)
(bad)
call
ins
aas
and
push
inc
cmp
adc
lods
int3
push
mov
mov
mov
out
in
xor
(bad)
outs
jns
and
jbe
mov
(bad)
cld
test
mov
jg
sub
pop
dec
pop
cmovle
sub
(bad)
(bad)
jmp
test
sub
mov
add
mov
pop
dec
jg
sbb
test
(bad)
(bad)
jmp
pop
pop
mov
mov
sub
out
js
stos
mov
cld
inc
popa
jae
jecxz
(bad)
(bad)
call
imul
sbb
ror
fld
add
(bad)
(bad)
(bad)
inc
fwait
in
adc
and
pop
mov
inc
and
cdq
cmp
sub
cmp
ror
call
or
cmp
inc
ja
cwde
(bad)
dec
pop
call
jnp
scas
push
xchg
mov
ds
cdq
iret
mov
test
(bad)
push
shr
lods
mov
daa
or
call
rcl
jo
stc
daa
lock
xor
cld
mul
jmp
in
leave
mov
sub
sbb
add
rcr
sar
cs
mov
xchg
in
push
jbe
sbb
in
arpl
add
(bad)
sub
mov
cmc
sbb
(bad)
jmp
scas
jmp
inc
inc
or
scas
faddp
into
into
push
cmp
imul
ret
mov
pop
jmp
and
sbb
mov
(bad)
mov
dec
idiv
stc
fnstenv
or
cmps
and
lods
(bad)
call
sahf
in
mov
sahf
lds
adc
(bad)
jmp
jp
aad
push
add
retf
jb
fld
and
mov
and
adc
inc
cdq
mov
out
nop
pop
movs
adc
shl
scas
test
inc
jecxz
jg
shr
cmp
xchg
push
fisttp
ds
adc
fcom
cmp
cmp
jmp
jnp
and
ds
lods
mov
mov
sbb
push
and
cmp
pop
clc
test
mov
imul
clc
iret
mov
mov
and
dec
outs
ss
or
popf
mov
lods
(bad)
fild
jl
sub
add
xchg
jnp
fnstcw
xchg
fucomp
and
dec
(bad)
jo
cmc
add
inc
jp
data16
and
xadd
pusha
clc
mov
and
mov
jno
add
pushf
pop
rcr
rol
(bad)
(bad)
(bad)
in
loop
sar
push
scas
bound
imul
mov
push
push
mov
popa
cli
(bad)
(bad)
push
fst
mov
les
imul
lods
pusha
neg
sahf
fisttp
cmps
idiv
or
je
les
push
or
pop
inc
jmp
les
push
clc
push
mov
adc
mov
cld
inc
cmps
mov
xchg
cli
adc
push
jns
pop
add
ja
pop
fcomp
mov
adc
inc
(bad)
outs
add
aaa
enter
sub
shr
jg
jmp
push
movs
dec
add
adc
xchg
(bad)
repnz
push
and
pop
movs
addr16
(bad)
jmp
into
xchg
das
pusha
stc
or
mov
mov
add
push
das
xor
add
push
jge
ret
and
inc
in
jg
(bad)
sti
fst
sub
fwait
aam
ret
or
or
sbb
ins
and
js
jg
add
aad
std
inc
jno
dec
push
call
lock
(bad)
dec
mov
or
int3
inc
hlt
jl
xchg
out
dec
loop
les
xchg
call
adc
cmp
and
pop
and
in
in
and
cli
cmp
mov
jb
icebp
xchg
xchg
mov
cmp
inc
leave
movs
comiss
fcomip
sbb
fmul
leave
inc
push
pop
mov
push
lds
call
test
nop
mov
(bad)
test
ss
sbb
(bad)
mov
call
and
xchg
in
fcom
jne
cmc
fisttp
stos
stos
cmps
mov
(bad)
scas
mov
ins
mov
fistp
aaa
ficomp
aas
lock
mov
pop
loopne
cmps
or
dec
in
iret
push
sar
cmps
inc
daa
push
or
loop
inc
addr16
cli
jmp
inc
dec
inc
rcl
jno
out
add
lods
jb
jbe
fptan
xor
dec
and
(bad)
jmp
mov
repnz
fs
mov
outs
mov
jo
ffree
fdivr
dec
mov
push
(bad)
(bad)
push
pop
fsub
rol
fwait
shr
pop
add
xor
mov
pop
cmp
cmp
out
(bad)
call
dec
sub
ds
dec
loope
ret
or
dec
add
pop
daa
xchg
cmc
aaa
cdq
cli
popf
pop
les
call
sub
xor
jmp
pop
pop
cmp
fidiv
cdq
push
mov
push
cmps
dec
cmp
push
and
sub
fs
(bad)
(bad)
inc
dec
fadd
(bad)
adc
sub
lds
jns
add
aam
dec
pop
hlt
and
cmps
add
dec
sub
(bad)
(bad)
out
cli
call
lea
gs
movs
mov
and
fstp
xchg
ret
or
or
das
rol
imul
inc
hlt
dec
ret
cli
sub
and
pop
ficomp
sti
pop
sar
mov
push
jo
loope
cs
add
sbb
xor
or
pop
cs
(bad)
dec
lods
and
push
mov
pop
adc
adc
fwait
and
xor
(bad)
out
rol
xchg
(bad)
fcomp
pop
mov
push
dec
xchg
std
(bad)
(bad)
call
mov
arpl
pop
jnp
pop
xor
xor
push
mov
push
(bad)
fistp
out
ins
sub
adc
sub
sub
fld
pop
cdq
sar
xchg
xlat
shr
lods
cli
dec
shl
dec
sar
ja
aad
jae
push
xor
cmp
add
call
cwde
fnstcw
sub
xor
adc
pop
pop
in
xchg
lods
pcmpeqb
(bad)
mov
pop
int3
inc
and
mov
cmp
xor
(bad)
shr
(bad)
in
cmp
cmp
cmp
(bad)
fcmovbe
push
shl
ret
(bad)
frstor
and
jg
lods
mov
dec
test
iret
sub
scas
mov
cdq
ins
jecxz
fcom
(bad)
jp
bound
ds
jg
sahf
mov
iret
lods
(bad)
fcmovnbe
in
jo
cli
lock
xor
in
(bad)
(bad)
jmp
and
sbb
and
retf
out
mov
mov
popa
sub
adc
cli
mov
adc
stc
jmp
mov
mov
xor
rcr
mov
je
(bad)
(bad)
inc
cmp
jl
aad
add
sahf
cmc
jg
stos
scas
scas
pop
and
inc
das
xchg
mov
ffree
jl
retf
cmp
sub
(bad)
(bad)
mov
mov
test
jae
xchg
imul
inc
enter
cmovne
std
(bad)
(bad)
jmp
ret
and
xor
cmp
out
cld
into
jnp
enter
repz
sub
cs
adc
mov
pop
sub
repnz
xchg
hlt
inc
into
xchg
push
mov
push
pop
cwde
mov
(bad)
(bad)
inc
xchg
test
in
shl
sub
jl
or
xchg
adc
or
jmp
or
fidiv
lahf
cdq
in
hlt
dec
pop
pop
push
rol
jb
lods
call
jle
aam
dec
(bad)
call
pop
push
aam
jns
int
scas
sahf
sub
push
imul
pop
scas
sub
call
js
lods
inc
cmp
and
fwait
lea
xor
(bad)
(bad)
(bad)
push
xchg
pushf
cmp
ja
push
leave
cmc
das
popf
jg
repnz
in
cmp
clc
idiv
stc
adc
clc
(bad)
fdivp
ins
pop
fidivr
jmp
adc
retf
sbb
add
loop
pop
push
mov
adc
cmps
xor
jg
gs
shl
dec
(bad)
pop
pop
lods
mov
(bad)
(bad)
(bad)
cld
inc
mov
xlat
adc
inc
in
shr
or
popf
xor
leave
jge
icebp
cmps
adc
mov
out
dec
mov
ror
(bad)
jg
ins
jle
mov
sahf
cmp
sub
dec
adc
(bad)
(bad)
call
aam
pop
jo
loop
(bad)
lock
pop
fcmovnb
idiv
loopne
pusha
data16
call
jl
cli
scas
add
(bad)
lods
pop
scas
pop
lds
fdivrp
sbb
outs
mov
or
sbb
jg
sbb
dec
add
mov
(bad)
push
pop
aam
or
push
push
mov
cwde
lahf
pop
inc
popa
jb
mov
pop
repnz
sbb
jne
pop
jmp
dec
sub
xchg
movs
daa
daa
es
in
jae
arpl
cmp
jb
out
call
imul
aam
jb
rcr
popf
sar
cld
and
pop
push
jb
cmp
push
mov
adc
adc
call
hlt
jg
push
rcr
popa
cmp
daa
jno
aaa
cli
(bad)
(bad)
call
pusha
(bad)
fcomip
js
jmp
cmp
sti
fisub
push
mov
dec
jns
(bad)
(bad)
(bad)
call
dec
add
fwait
sbb
jmp
out
push
jl
cli
cmp
cmp
cmp
loop
outs
cmp
sbb
dec
js
push
call
scas
cmp
dec
and
mov
mov
(bad)
(bad)
(bad)
mov
or
test
inc
xor
imul
or
push
sub
dec
jg
(bad)
push
jmp
imul
retf
loop
cmp
sbb
stc
je
das
pop
cmp
sub
popf
push
push
nop
lahf
std
rcr
jmp
or
and
arpl
or
sub
dec
sbb
mul
push
(bad)
(bad)
(bad)
call
mov
push
jmp
push
and
xchg
repnz
xor
inc
push
jmp
out
xchg
jmp
(bad)
cmp
out
into
aaa
adc
addr16
xor
mov
test
mov
cmps
(bad)
(bad)
(bad)
(bad)
mov
in
(bad)
pusha
mov
cmp
xchg
test
inc
xor
adc
je
adc
std
mov
jo
aaa
add
or
dec
movs
mov
cmp
push
mov
add
test
dec
fcomp
aam
inc
cli
(bad)
(bad)
jmp
adc
mov
scas
jmp
mov
pop
fidivr
dec
add
fld
mov
mov
sar
(bad)
inc
dec
popf
inc
call
mov
(bad)
aaa
xchg
sub
stc
mov
test
addr16
push
pop
inc
pop
xchg
addr16
mov
(bad)
(bad)
jmp
das
jg
xchg
imul
adc
mov
sub
sbb
jmp
hlt
mov
enter
sub
mov
add
(bad)
call
mov
lds
iret
xrelease
mov
ja
sbb
sahf
and
(bad)
(bad)
(bad)
call
cmps
cmps
fsub
mov
leave
mov
pop
nop
into
fidiv
adc
outs
inc
jno
dec
inc
movs
test
inc
imul
xchg
mov
loope
xchg
or
pop
inc
xor
adc
dec
loope
cld
(bad)
(bad)
jnp
xchg
adc
push
pop
pop
stc
mov
cmp
mov
push
mov
mov
jno
scas
pop
cmp
add
shr
push
iret
push
ja
cli
mov
hlt
enter
fisttp
cmp
ins
out
pop
loop
inc
hlt
sbb
jecxz
dec
aam
test
clc
(bad)
out
jg
(bad)
call
jle
inc
out
inc
lods
call
aas
inc
adc
icebp
fsubrp
jl
push
(bad)
(bad)
(bad)
(bad)
jge
imul
jge
inc
xchg
cmps
shl
into
or
jg
imul
adc
stos
mov
cs
nop
rcl
mov
int3
cmps
popw
test
repnz
mov
pop
sar
enter
lods
cmp
mov
xchg
(bad)
inc
scas
pop
ret
fsubr
cmp
inc
out
shl
loope
sti
mov
(bad)
(bad)
(bad)
cmp
lock
jne
fsubr
loopne
sti
push
shl
mov
xchg
inc
mov
in
nop
test
sub
repz
mov
(bad)
call
and
sbb
sahf
inc
test
cs
loope
popa
nop
xchg
repz
dec
(bad)
(bad)
(bad)
dec
adc
stc
dec
in
in
sahf
(bad)
(bad)
xor
nop
pop
cmps
jecxz
addr16
or
xchg
push
xchg
(bad)
(bad)
(bad)
jmp
inc
(bad)
xchg
push
or
(bad)
jp
cmc
test
pop
ss
stc
in
and
xor
pop
mov
fcomp
dec
mov
cmps
sub
(bad)
(bad)
inc
or
ret
cmp
cli
xor
mov
nop
loop
xchg
out
pusha
dec
out
jp
mov
adc
call
jmp
pusha
add
xor
adc
fcomp
ins
add
fcomp
or
retf
sbb
jae
pop
fcom
adc
(bad)
(bad)
(bad)
dec
sar
push
mov
sbb
jbe
dec
ins
pop
hlt
lock
stc
adc
pop
(bad)
dec
cmps
mov
or
loop
(bad)
jg
push
cmp
xchg
pop
cmp
retf
fstp
pavgw
stos
data16
shl
sar
daa
push
mov
pop
mov
stos
(bad)
(bad)
inc
inc
movs
pop
cmp
cwde
cmps
xor
pop
dec
xor
mov
into
ror
in
and
xor
stos
cwde
mov
adc
jg
push
sti
sti
xchg
add
aad
inc
stos
mov
fiadd
ret
ss
mov
mov
ret
pushf
ficomp
sub
mov
jmp
jp
(bad)
clc
loop
cmp
(bad)
(bad)
(bad)
out
push
cdq
sbb
data16
in
sti
jnp
inc
mov
call
(bad)
jmp
adc
(bad)
in
pop
jp
sub
jl
test
(bad)
call
(bad)
movs
sub
fisttp
inc
shl
or
sti
shl
je
rcr
pop
add
call
mov
inc
shl
(bad)
xchg
arpl
(bad)
(bad)
(bad)
call
jbe
inc
push
fldenv
mov
and
call
jne
add
or
loopne
fistp
mov
or
(bad)
call
xor
ret
test
xchg
push
mov
call
call
inc
sar
ins
cmp
icebp
(bad)
and
xor
outs
(bad)
sbb
jo
mul
push
std
(bad)
inc
jp
xchg
stos
adc
imul
and
(bad)
(bad)
call
add
adc
mov
sbb
in
mov
les
cmp
add
add
(bad)
jmp
shr
sub
xchg
xchg
aas
push
lods
dec
iret
xchg
cmp
aam
xchg
fdivr
ss
dec
dec
dec
mov
mov
mov
mov
int3
mov
or
out
ror
bound
jp
cmp
push
dec
jmp
adc
inc
test
xchg
scas
rcr
or
lds
or
fimul
lea
jne
popf
sbb
mov
xchg
cmps
xlat
add
dec
cld
out
das
loopne
(bad)
clc
jnp
mov
pop
push
daa
push
icebp
mov
jle
jmp
mov
sar
sbb
xor
pushw
outs
mov
(bad)
fadd
shl
sbb
das
add
jg
push
jnp
add
les
call
xchg
addr16
mov
pop
push
jl
and
jb
inc
jmp
and
(bad)
mov
jnp
or
mov
adc
test
jmp
(bad)
jmp
or
xor
xchg
and
mov
stc
fdivr
jle
jecxz
or
(bad)
push
inc
sub
(bad)
repz
cli
out
enter
xor
inc
add
sbb
inc
or
mov
adc
mov
(bad)
cmp
adc
mov
add
(bad)
(bad)
(bad)
push
out
xchg
mov
xchg
adc
fsubr
bound
loop
cmp
or
mov
sub
adc
(bad)
(bad)
dec
sub
outs
sbb
xlat
popf
xchg
dec
mov
push
inc
mov
or
pop
xor
in
icebp
jg
push
inc
sbb
sub
ret
leave
repz
push
fs
dec
sub
ror
(bad)
mov
rcl
test
mov
movs
(bad)
xchg
jmp
scas
push
sbb
(bad)
(bad)
(bad)
inc
mov
inc
adc
lods
das
jp
or
nop
pusha
mov
aad
sar
(bad)
inc
ror
sahf
cmp
mov
icebp
sbb
cs
ss
mov
call
adc
test
out
pop
jo
cli
lods
dec
pushf
stc
(bad)
mov
jae
pushf
jg
jns
xchg
cmp
(bad)
fcomip
(bad)
(bad)
stc
mov
pop
mov
aas
xchg
out
mov
outs
scas
(bad)
(bad)
(bad)
push
and
mov
mov
mov
adc
je
imul
jmp
sti
fcom
(bad)
pop
rcl
sbb
cli
(bad)
(bad)
mov
sub
sbb
lea
adc
inc
add
neg
lds
aad
test
jo
xchg
jns
(bad)
(bad)
dec
pop
imul
je
nop
jg
bnd
bound
stos
pop
cld
mov
cmps
call
(bad)
(bad)
fiadd
and
imul
xchg
pop
pop
push
sub
cmc
fsub
aad
sub
(bad)
(bad)
dec
pop
cli
inc
sbb
mov
in
jnp
add
sub
aad
cmp
or
bound
in
(bad)
(bad)
(bad)
push
push
int3
dec
pop
lods
iret
sub
pop
mov
mov
int
outs
and
cwde
int3
pop
jo
jno
pop
mov
dec
shl
sti
into
sub
sub
lds
push
aas
pop
ja
ins
jo
mov
add
(bad)
(bad)
push
or
mov
pop
mov
retf
addr16
mov
mov
mov
push
stos
aam
dec
push
cmp
test
fwait
out
ret
and
pusha
push
jmp
clc
dec
sub
jecxz
rcl
fcomp
push
fsub
push
es
popa
mov
mov
shl
mov
xor
sub
adc
hlt
jmp
mov
jbe
or
sbb
(bad)
(bad)
inc
into
push
pop
fisttp
mov
pop
cmps
adc
dec
jae
cmp
xor
jb
test
push
pop
(bad)
inc
jbe
adc
les
retf
push
clc
(bad)
call
(bad)
cmp
or
mov
jg
inc
or
pop
fwait
push
pop
out
add
sbb
outs
pushf
inc
icebp
leave
mov
inc
jae
or
sahf
out
xchg
call
cwde
and
loop
jg
sub
cld
cmp
mul
sar
inc
pop
inc
test
les
fidivr
jle
ja
(bad)
(bad)
call
pop
and
sahf
xchg
lods
or
lods
test
fisubr
push
test
mov
xchg
xor
or
jmp
(bad)
(bad)
jge
mov
inc
cmp
es
jo
mov
arpl
adc
das
xchg
or
jo
clc
(bad)
fcmovnu
and
sub
inc
cld
nop
dec
addr16
jns
or
retf
test
dec
hlt
fadd
push
mov
out
sbb
cmp
arpl
stos
cwde
sbb
(bad)
call
data16
(bad)
(bad)
aam
cs
call
imul
call
and
int3
je
data16
jecxz
ror
mov
ins
cld
push
mov
inc
pop
inc
into
jmp
jno
cdq
outs
enter
call
loopne
(bad)
out
add
hlt
or
xor
cmp
cld
or
cld
(bad)
jmp
lods
cmc
rcr
jae
shl
adc
rcl
inc
adc
jno
(bad)
(bad)
jg
in
mov
das
mov
repnz
repz
inc
pop
adc
aam
in
xor
out
dec
inc
mul
scas
push
mov
lods
movs
(bad)
(bad)
call
dec
push
scas
push
mov
inc
jmp
(bad)
call
xchg
or
inc
xchg
scas
aad
jbe
push
in
mov
loopne
loop
xlat
cld
retf
ss
ins
popa
lods
in
into
pop
push
sub
retf
sbb
and
sub
(bad)
(bad)
jmp
mov
nop
out
xor
jnp
sahf
dec
(bad)
sti
ins
jb
imul
inc
mov
(bad)
push
js
mov
hlt
sar
cli
neg
mov
aad
or
std
(bad)
(bad)
inc
and
mov
pusha
outs
cmp
mov
cmps
(bad)
cmp
fdivr
jmp
and
dec
cmp
mov
jb
(bad)
(bad)
(bad)
jge
out
cmp
adc
push
add
xchg
sbb
lock
push
scas
sub
idiv
(bad)
dec
aas
clc
xchg
ja
out
movs
add
cmp
outs
stos
out
in
or
cdq
(bad)
(bad)
jg
lea
stc
add
mov
pop
mov
clc
push
imul
(bad)
dec
mov
pop
lock
cmp
push
out
xor
fdivr
xor
or
mov
(bad)
cmp
xchg
xchg
pop
popa
aas
jmp
dec
aam
call
jecxz
sub
lock
std
loop
outs
cli
mov
pop
pop
mov
int3
test
cs
addr16
faddp
add
(bad)
(bad)
stc
mov
loopne
outs
fbld
ud0
call
adc
push
jl
mov
rol
jp
xchg
out
retf
div
push
add
(bad)
dec
mov
and
repnz
aas
les
xchg
mov
outs
(bad)
(bad)
(bad)
out
mov
fcomp
push
add
mov
rcr
cmp
pushf
les
(bad)
(bad)
(bad)
push
pop
scas
push
call
sub
pop
xchg
shr
and
lock
dec
iret
stos
dec
cmp
push
(bad)
adc
pop
dec
dec
fidiv
xchg
ja
(bad)
outs
cmp
adc
cmp
je
xchg
(bad)
fcom
mov
jle
jb
cmp
and
cmp
(bad)
(bad)
dec
mov
jae
popf
retf
jecxz
nop
jp
test
pop
lea
sub
xchg
cld
or
adc
call
push
xchg
jmp
or
cdq
mov
sbb
cmc
daa
add
mov
pushf
inc
push
movs
xor
fiadd
(bad)
cdq
mov
add
(bad)
call
inc
xor
add
jne
dec
repz
mov
cmp
call
(bad)
(bad)
(bad)
dec
dec
out
or
mov
xor
mov
dec
pop
lods
or
jns
fcomip
call
sub
jae
(bad)
jmp
in
and
bound
pop
or
mov
jo
imul
fstp
push
push
call
lock
and
ja
and
inc
sbb
je
enter
pushf
dec
ins
(bad)
(bad)
(bad)
mov
cmp
test
jae
(bad)
and
retf
test
jecxz
sahf
lods
cmp
pop
icebp
dec
and
fldcw
or
mov
sti
cmp
mov
les
fdivr
push
pop
cli
jmp
adc
es
(bad)
cld
enter
mov
jmp
sbb
enter
ret
sbb
jecxz
icebp
or
neg
dec
jno
mov
push
(bad)
(bad)
fild
rcl
imul
sub
ficomp
test
mov
imul
(bad)
call
int
inc
sub
pusha
lea
bound
movs
sahf
loop
test
xchg
(bad)
(bad)
(bad)
dec
mov
jecxz
daa
pop
push
pop
icebp
mul
test
loopne
movs
push
sahf
jl
mov
push
(bad)
(bad)
(bad)
inc
je
sar
mov
sbb
xor
push
(bad)
inc
sub
cmps
add
mov
or
clc
mov
retf
bound
adc
scas
xchg
hlt
(bad)
mov
fcom
loopne
mov
mov
lock
adc
sahf
(bad)
push
and
jnp
lods
dec
fwait
gs
fist
mov
jmp
ss
cmc
(bad)
leave
push
push
push
(bad)
(bad)
mov
pop
add
adc
(bad)
push
jmp
jo
push
jge
cmps
jge
sub
retf
(bad)
(bad)
jmp
cdq
jmp
mov
mov
call
jno
or
adc
jp
jmp
and
repz
mov
fcomip
ins
inc
rcr
imul
dec
daa
cli
scas
out
sbb
jle
jmp
mov
(bad)
fadd
sub
addr16
push
cli
dec
adc
push
adc
pusha
cdq
cmp
mov
(bad)
scas
gs
sub
loope
(bad)
(bad)
push
mov
fisubr
stos
int
fwait
scas
icebp
(bad)
leave
rcl
push
aad
stos
(bad)
fbld
xor
(bad)
(bad)
(bad)
fcom
inc
inc
sbb
jp
aaa
cmp
xor
imul
and
or
or
mov
jl
mov
cli
(bad)
push
adc
sub
or
sahf
scas
data16
jnp
iret
jecxz
push
sar
pop
inc
mov
shl
(bad)
(bad)
(bad)
mov
shl
mov
xlat
test
loop
jne
mov
jmp
loope
xchg
mov
int3
sbb
(bad)
aam
rcl
lock
dec
mov
cmps
mov
push
jp
xchg
cmp
push
jge
lods
jmp
push
dec
ins
nop
into
cmp
mov
pop
and
mov
or
movs
adc
adc
sub
push
push
dec
pusha
out
lock
cmp
sahf
sbb
xchg
movs
(bad)
push
shl
and
pop
mov
push
jmp
pop
fadd
mov
loopne
push
or
(bad)
(bad)
dec
or
popf
cli
cmp
sbb
push
mov
scas
mov
ja
jne
cwde
and
stos
mov
inc
xor
call
rcl
(bad)
mov
mov
pop
cmp
mov
cmc
push
push
push
xchg
and
jae
rcl
jmp
dec
mov
pop
adc
mov
lock
jnp
loopne
(bad)
(bad)
call
retf
hlt
in
or
push
add
xor
mov
sahf
mov
shr
mov
(bad)
jmp
pop
sub
cmp
and
cmp
(bad)
jmp
mov
xchg
fcomip
mov
ins
push
and
adc
mov
in
test
(bad)
(bad)
ficomp
call
(bad)
inc
test
repz
cld
(bad)
jmp
push
out
jg
rcr
jp
jns
xor
call
fwait
cwde
repz
(bad)
push
(bad)
test
jbe
shr
je
or
mov
push
cmps
sub
inc
movs
clc
mov
fwait
(bad)
(bad)
(bad)
jmp
push
jno
or
or
mov
mov
dec
adc
and
inc
scas
mov
push
retf
sub
adc
(bad)
(bad)
push
stc
iret
retf
inc
sub
div
div
int3
(bad)
mov
sbb
push
xchg
aaa
mov
(bad)
jp
inc
sahf
push
xchg
ds
imul
jno
xor
mov
clc
dec
test
fld
jp
cwde
cdq
int3
imul
or
(bad)
xchg
lods
jle
add
(bad)
call
iret
mov
push
(bad)
hlt
addr16
out
out
sbb
dec
popf
adc
out
and
frstor
jl
test
push
lods
repz
(bad)
(bad)
(bad)
push
cli
jmp
gs
push
in
adc
mov
mov
retf
jne
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
inc
lods
push
daa
cmp
inc
ja
jl
adc
jb
xchg
cli
dec
(bad)
adc
js
ins
cmp
cmps
mov
scas
in
sahf
call
and
fmul
call
(bad)
fistp
mov
in
inc
ret
cmp
jb
cmp
ja
cmp
je
sub
push
inc
out
cmp
add
lods
out
mov
adc
cmps
xchg
repz
xor
(bad)
(bad)
jmp
arpl
stc
push
adc
and
jnp
sub
pop
ret
into
jg
jmp
adc
pushf
movs
inc
cmp
call
sete
add
jnp
nop
xor
out
push
jo
jmp
add
shl
mov
(bad)
inc
xchg
push
cs
xor
sbb
ret
stos
add
push
cmp
jp
mov
inc
cmp
lods
(bad)
(bad)
(bad)
jmp
add
push
int3
nop
stc
stos
inc
retf
loopne
in
pop
std
xchg
dec
cmps
sbb
popa
mov
ret
add
mov
(bad)
mov
pop
pop
into
repnz
cmp
and
pop
js
push
sbb
in
push
ins
scas
scas
mov
mov
shr
fsub
(bad)
jmp
inc
jo
call
push
call
leave
int
sbb
cmc
sbb
pop
jnp
push
cmps
inc
rol
(bad)
push
inc
mov
mov
or
xchg
es
xor
fs
or
or
mov
dec
dec
mov
push
pop
mov
add
inc
jb
movs
data16
nop
cwde
in
cmp
aad
or
jle
ja
shl
jb
ins
pop
xchg
pusha
and
pop
loopne
(bad)
call
mov
aaa
add
jbe
sti
repz
out
jae
jp
in
es
bound
cdq
jmp
retf
stos
dec
test
std
es
(bad)
call
jne
out
jo
popf
inc
pushf
push
dec
mov
pop
ret
xlat
push
test
adc
aaa
(bad)
(bad)
jg
push
gs
rcl
inc
dec
or
test
inc
sbb
sub
mov
lods
ret
aam
imul
retf
sbb
cmc
pop
dec
cwde
sub
(bad)
(bad)
call
jl
xchg
push
dec
das
lods
loop
pop
jle
(bad)
jl
xor
mov
das
push
mov
sahf
mov
mov
(bad)
(bad)
call
sub
xchg
inc
adc
imul
pcmpeqd
(bad)
inc
rol
das
nop
js
sub
mov
cdq
rcr
data16
(bad)
(bad)
(bad)
(bad)
jp
pop
ror
mov
dec
dec
mov
dec
sub
(bad)
mov
dec
xchg
sbb
(bad)
call
lock
inc
lahf
imul
xchg
mov
push
mov
inc
fisttp
jo
in
aam
cmp
push
sub
jmp
mov
shl
ret
iret
scas
outs
(bad)
data16
stc
repnz
scas
push
sahf
aad
sub
mov
lods
out
scas
jecxz
scas
clc
cs
pop
or
call
outs
iret
add
(bad)
fadd
jns
push
aaa
into
pusha
cmc
push
adc
inc
int3
(bad)
(bad)
(bad)
jg
cwde
cmp
cmp
stos
lea
push
or
mov
cli
bnd
outs
push
jbe
in
sub
(bad)
push
push
lea
push
or
aam
dec
cmp
jle
outs
mov
mov
iret
pop
(bad)
loop
mov
lea
or
sti
pop
add
test
adc
jo
daa
sahf
fidiv
cmp
scas
jg
test
dec
inc
sub
lds
inc
div
adc
sub
add
(bad)
inc
sub
cwde
or
ficom
enter
push
pop
jae
fcos
sbb
jmp
mov
hlt
jle
cmp
cli
sar
sbb
(bad)
call
pop
cdq
mov
mov
mov
ret
mov
cvtps2pi
repnz
mov
dec
(bad)
(bad)
in
aas
stc
(bad)
(bad)
(bad)
inc
push
push
push
sbb
leave
call
or
in
data16
lock
jge
fadd
jmp
stos
fwait
mov
pop
or
push
push
and
xor
add
push
repz
scas
cli
mov
mov
es
and
cmp
mov
sbb
adc
in
das
inc
sar
jmp
mov
or
out
inc
mov
cs
(bad)
(bad)
jmp
dec
rcr
lock
xor
sti
jmp
stos
test
jo
retf
sbb
(bad)
fcomip
jg
js
cwde
fimul
and
jmp
mov
out
repnz
sbb
sbb
add
(bad)
(bad)
ds
xor
mov
test
push
jmp
fsub
(bad)
(bad)
fbld
mov
enter
sbb
push
inc
lahf
ja
test
ins
mov
pop
sar
(bad)
call
rol
pop
mov
mov
pop
dec
test
outs
pop
mov
(bad)
jmp
pop
lods
das
aas
icebp
pop
test
mov
jl
(bad)
sub
or
sub
cmp
fnstsw
and
xor
push
fs
mov
and
xchg
aad
lock
mov
mov
mov
cmc
pop
adc
aas
sub
cmp
lods
adc
(bad)
(bad)
(bad)
(bad)
fldenv
jg
stc
sub
test
call
(bad)
mov
aam
pop
test
pop
(bad)
data16
jmp
out
fld
imul
(bad)
(bad)
(bad)
cmp
mov
push
out
xchg
and
and
fimul
xchg
int3
bound
sahf
or
sbb
add
xlat
push
pop
mov
push
je
test
jg
xchg
sbb
inc
sub
adc
pop
pop
out
cmp
(bad)
jmp
mov
push
lock
test
xchg
jl
push
les
dec
std
(bad)
dec
push
push
or
fstp
icebp
inc
pop
cmp
jp
cli
cmp
xchg
xchg
cld
test
sbb
cmp
(bad)
mov
sub
mov
sar
inc
retf
in
add
outs
nop
cmp
stos
or
dec
gs
xlat
in
inc
jne
fbld
pop
frstor
js
fcomp
and
in
jge
xchg
pop
aam
xchg
xchg
cmp
add
(bad)
(bad)
(bad)
push
xchg
sbb
or
int
jae
xchg
adc
cmc
sub
dec
div
jmp
inc
into
xor
and
enter
xor
push
ss
test
jmp
retf
inc
ret
xchg
addr16
call
fs
cli
mov
outs
pop
(bad)
inc
adc
(bad)
call
and
xchg
into
shl
mov
enter
cmp
int3
sbb
into
test
pop
movs
and
jl
sub
sbb
push
imul
mov
(bad)
aad
or
test
sti
(bad)
jmp
iret
test
es
cmp
rol
pop
adc
enter
mov
inc
dec
in
mov
test
inc
sti
out
jmp
call
cdq
es
imul
jp
cld
(bad)
call
leave
fadd
ja
mov
ins
mov
inc
push
jnp
hlt
fst
sar
inc
sbb
mov
xchg
lods
pop
mov
xchg
in
pop
mov
mov
jb
cmps
and
sub
(bad)
(bad)
(bad)
fucom
rol
pop
inc
dec
mov
mov
xchg
aaa
mov
sbb
push
push
(bad)
(bad)
(bad)
push
test
je
fdiv
outs
adc
out
sbb
push
jmp
dec
loopne
xchg
push
xchg
mov
xchg
mov
ja
cld
lods
lods
pusha
pop
nop
fcomi
icebp
dec
or
push
fnsave
jg
sub
dec
jg
aas
std
add
xor
inc
(bad)
call
std
sub
js
mov
jg
add
jmp
and
dec
call
jno
xchg
les
push
(bad)
(bad)
(bad)
ffree
jge
ret
push
adc
ret
jno
int3
push
adc
nop
out
adc
sub
sbb
cmp
ror
xor
and
lock
xchg
icebp
imul
adc
scas
test
cld
not
add
neg
icebp
(bad)
(bad)
jmp
aad
mov
fldcw
aaa
fmul
ror
out
mov
mov
xchg
jae
ins
mov
call
call
sub
sahf
shr
dec
retf
push
xchg
push
out
xchg
mov
out
leave
pop
inc
test
cwde
jnp
jno
stos
dec
int3
sub
mov
mov
pop
mov
lock
ja
(bad)
(bad)
jmp
jb
mov
pop
ficom
mov
mov
(bad)
jmp
out
aad
push
fistp
loopne
iret
jge
pop
(bad)
cld
mov
lods
sahf
inc
push
clc
icebp
pushf
adc
shr
push
push
add
(bad)
shl
jge
dec
and
pop
adc
adc
or
movs
sbb
mov
mov
inc
add
hlt
shl
pushf
ret
scas
jmp
mov
(bad)
(bad)
(bad)
jmp
add
add
and
and
(bad)
xchg
xchg
push
and
jns
pop
add
lods
outs
push
aas
add
dec
pusha
jnp
(bad)
out
add
cli
mov
xor
fnsave
aas
(bad)
fstp
movs
xchg
push
fadd
fsub
jnp
dec
cmp
int
hlt
inc
lds
mov
sub
(bad)
(bad)
call
mov
fwait
xchg
outs
stos
ds
push
cmp
push
fisttp
sbb
rcr
(bad)
jg
inc
nop
push
xlat
fs
shl
sub
inc
lock
(bad)
inc
jmp
cmp
enter
ja
jp
adc
ss
(bad)
(bad)
jns
mov
sub
and
jo
fnop
(bad)
(bad)
jmp
mov
call
cmc
or
cmp
bound
pop
(bad)
(bad)
inc
gs
loope
mov
iret
loop
ds
hlt
int3
mov
cdq
add
inc
or
sub
xchg
dec
jnp
jle
inc
repnz
popa
sub
and
xchg
pusha
outs
in
int3
sub
jmp
mov
repnz
test
sbb
ret
lea
fnsave
fisttp
int3
sahf
push
mov
lds
jae
jae
sub
push
hlt
cmp
popf
cld
loopne
icebp
(bad)
jmp
in
icebp
mov
fld
mov
xor
mov
cmc
jmp
call
sub
jmp
loop
test
mov
out
jbe
push
mov
fiadd
(bad)
jmp
int
push
add
cmps
adc
in
(bad)
(bad)
(bad)
fbstp
das
aam
ins
lock
movs
add
loop
adc
and
add
sub
test
shl
nop
(bad)
pop
test
clc
inc
inc
fmul
(bad)
jg
sbb
rcl
mov
mov
ret
xor
mov
jg
inc
cld
pop
test
out
mov
test
push
imul
sahf
cmc
sub
int3
(bad)
sti
ret
ret
sbb
xchg
add
xor
test
sbb
inc
xlat
scas
pop
sub
(bad)
mov
scas
inc
cmps
and
pushf
cmp
mov
pop
cmc
mov
add
in
clc
mov
outs
dec
pop
mov
std
jae
cmps
in
sar
mov
mov
lock
sbb
mov
mov
lea
sbb
dec
push
stos
and
gs
mov
mov
add
das
pusha
loop
shl
out
ficom
call
cmps
cmp
imul
js
dec
out
(bad)
cld
in
sar
push
clc
mov
adc
(bad)
call
jge
sbb
jp
outs
icebp
call
scas
pop
(bad)
call
adc
js
pop
cmp
mov
push
das
cwde
fwait
(bad)
(bad)
(bad)
jmp
sti
ja
pop
popa
cmp
mov
das
pop
add
imul
mov
ss
xor
fisttp
sub
call
call
xor
xchg
cmp
xchg
xlat
push
shl
sar
sub
fidiv
(bad)
call
add
in
cmps
shl
and
icebp
sbb
push
xchg
ss
outs
cs
das
jle
outs
pop
cmp
out
(bad)
stos
or
(bad)
fisubr
movs
push
call
push
jno
(bad)
jg
fadd
cmp
xchg
(bad)
dec
bnd
mov
push
sub
push
mov
inc
(bad)
mov
pusha
or
sub
dec
cld
jns
cmc
push
sub
cmps
dec
test
adc
(bad)
fild
in
int
scas
jecxz
leave
push
dec
cmp
aas
jns
(bad)
(bad)
call
and
or
mov
push
imul
sub
rcl
mov
loop
ret
(bad)
mov
or
scas
sahf
scas
fwait
(bad)
(bad)
fild
mov
rol
and
and
das
(bad)
(bad)
mov
in
inc
push
std
sub
je
jns
retf
push
(bad)
aam
or
movs
dec
sbb
push
cmp
dec
cli
repnz
mov
scas
bound
mov
inc
cmp
sub
rcl
(bad)
(bad)
dec
popa
fmul
rol
fstp
pop
sub
xchg
push
jp
xchg
fyl2x
and
(bad)
mov
call
add
add
movs
adc
jmp
mov
(bad)
jmp
inc
call
in
in
in
mov
ins
jmp
and
rcl
in
hlt
(bad)
dec
repz
inc
sar
repnz
cmp
cmp
push
and
mov
ss
ret
dec
xchg
push
push
cmp
shl
(bad)
(bad)
call
xchg
cli
xchg
mov
cmp
popf
daa
movs
and
mov
scas
mov
push
sub
sar
xor
arpl
xchg
je
cdq
mov
outs
xor
enter
movs
(bad)
(bad)
(bad)
cli
xchg
and
fstp
jnp
or
mov
mov
cmps
int3
test
jecxz
mov
ss
jno
pusha
jo
hlt
mov
rol
stos
dec
ds
movs
mov
adc
ja
mov
push
out
or
jmp
div
pop
dec
iret
out
mov
sahf
(bad)
retf
sbb
dec
dec
fs
fnstcw
dec
(bad)
(bad)
dec
sahf
pop
adc
cmp
imul
cmp
pop
mov
cli
(bad)
(bad)
dec
ret
sub
adc
mov
imul
xor
sub
push
dec
ret
test
sbb
jp
dec
mov
cmp
fwait
icebp
inc
add
(bad)
call
cdq
xchg
cli
cmp
cmp
or
shl
mov
push
jl
xchg
sub
dec
jg
inc
jle
test
jmp
fwait
je
mov
clc
or
or
outs
mov
jo
pop
dec
cli
(bad)
(bad)
(bad)
fdivp
xchg
dec
xchg
out
arpl
and
cmp
mov
(bad)
jmp
lods
sbb
out
jae
shl
std
mov
xor
jnp
shr
push
lods
loope
add
inc
mov
mov
(bad)
(bad)
(bad)
mov
lahf
jnp
xchg
mov
xlat
add
push
push
mov
mov
fild
int3
aad
das
add
sub
(bad)
(bad)
(bad)
push
out
jno
popa
imul
fcmove
and
sbb
mov
or
pop
aam
fdivr
ret
xor
jae
ret
aam
sbb
jmp
adc
movs
leave
cli
add
sbb
mov
out
pop
jmp
push
lock
mov
das
loope
lahf
jg
aaa
(bad)
(bad)
(bad)
(bad)
mov
push
adc
xchg
push
cmp
sbb
sub
sbb
push
inc
jg
(bad)
(bad)
mov
rol
addr16
jle
iret
sahf
fcmovb
dec
outs
push
mov
sub
sbb
(bad)
nop
mov
dec
ret
or
or
inc
in
xchg
sar
ror
in
cmp
xchg
sbb
inc
push
adc
bnd
push
sti
cmp
out
fs
mov
mov
pushf
(bad)
int
pop
pop
pop
xchg
dec
push
push
(bad)
(bad)
fild
and
cmovae
and
mov
std
(bad)
call
mov
or
mov
mov
nop
fld
jmp
mov
lods
mov
(bad)
(bad)
call
jge
and
pop
pop
dec
shl
inc
xor
test
pop
adc
imul
cld
jmp
popf
sar
or
icebp
(bad)
sahf
les
push
or
mov
jmp
pop
movs
test
imul
int3
dec
pop
ror
adc
cmp
adc
outs
cli
in
and
mov
or
cmps
call
(bad)
jmp
ja
lea
sar
(bad)
mov
ret
sub
mov
fcmovnb
movs
out
lds
fcos
(bad)
mov
push
cmp
nop
icebp
test
movs
scas
jb
inc
test
sbb
xchg
loope
(bad)
(bad)
inc
inc
adc
shl
cmp
push
mov
out
(bad)
popf
in
int
push
call
nop
and
lods
jb
shl
(bad)
fistp
mov
in
push
pushf
scas
sbb
mov
pop
dec
xor
cmp
jp
cdq
(bad)
(bad)
(bad)
mov
xor
xchg
sub
mov
and
imul
call
push
xor
test
and
sar
ins
retf
adc
adc
cmps
(bad)
enter
outs
jmp
push
push
loop
mov
xor
mov
es
hlt
push
push
inc
(bad)
(bad)
jmp
adc
std
pop
jns
(bad)
in
jmp
cmp
inc
clc
push
retf
nop
or
(bad)
mov
sub
shl
push
inc
test
cmp
xchg
test
xor
push
jp
ds
jb
cmps
sahf
jge
push
std
(bad)
outs
cmp
mov
pop
adc
ror
push
mov
fst
repz
(bad)
(bad)
(bad)
jg
dec
or
das
imul
dec
movs
repnz
mov
(bad)
popa
cld
aam
sbb
sahf
idiv
(bad)
(bad)
call
outs
aas
jo
aad
push
mov
icebp
gs
sbb
call
hlt
xchg
sti
addr16
(bad)
clc
(bad)
(bad)
in
inc
loopne
call
push
call
or
(bad)
add
dec
or
nop
sbb
mov
mov
mov
es
(bad)
(bad)
cmp
(bad)
mov
push
pop
fst
ins
push
std
in
mov
sub
ret
cli
(bad)
out
shl
scas
out
mov
(bad)
jge
outs
cli
jmp
aam
lods
inc
stos
sub
or
std
dec
sbb
sbb
das
lds
cdq
jae
cmps
push
mov
xchg
call
data16
popa
(bad)
(bad)
call
movs
pop
test
mov
or
or
xchg
cmc
xchg
jbe
pop
push
jecxz
stos
bound
adc
or
sar
adc
xchg
adc
and
pop
add
or
pop
scas
jg
jns
loop
(bad)
(bad)
mov
in
jnp
adc
icebp
mov
popf
cmp
fcom
(bad)
(bad)
mov
or
and
mov
jmp
jmp
ja
sub
fiadd
dec
jl
scas
adc
(bad)
adc
es
mov
int3
or
push
fmulp
sbb
xor
sbb
(bad)
mov
in
call
inc
inc
adc
(bad)
mov
in
stos
es
sub
adc
cld
(bad)
call
jns
leavew
push
imul
fmul
adc
popa
inc
sbb
stos
xchg
test
movs
out
(bad)
(bad)
jmp
adc
inc
je
pop
or
adc
popa
inc
or
jo
inc
mov
or
or
dec
ret
in
loop
cmp
jb
dec
(bad)
jg
(bad)
dec
fadd
frstor
cwde
mov
or
(bad)
(bad)
(bad)
inc
in
add
imul
scas
inc
shr
xor
pop
add
(bad)
(bad)
(bad)
push
dec
in
mov
adc
jae
adc
jns
sbb
inc
xchg
(bad)
fucomi
movs
cmc
jmp
shr
xchg
dec
xor
dec
(bad)
(bad)
dec
int3
sub
test
ins
cmp
arpl
call
sub
(bad)
(bad)
push
jmp
add
sub
out
out
xchg
mov
jmp
mov
sub
push
pop
xor
in
rol
pushf
mov
(bad)
(bad)
call
jne
daa
mov
data16
fild
daa
int3
imul
push
mov
(bad)
call
jp
or
cld
cmp
movs
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
test
loop
cmp
fadd
shl
hlt
sub
cmp
adc
icebp
cmp
mov
cmp
scas
add
adc
gs
and
es
outs
call
(bad)
retf
sbb
pop
aaa
in
bound
add
mov
inc
sbb
pop
jle
(bad)
mov
sbb
inc
inc
test
(bad)
(bad)
(bad)
jmp
test
xor
mov
mov
mov
test
lods
push
sub
(bad)
(bad)
(bad)
jle
jmp
jae
pop
bound
dec
dec
in
push
mov
xor
outs
mov
dec
sti
dec
jne
scas
iret
add
sub
test
repz
push
sub
sbb
scas
dec
cmc
pop
pop
rcr
(bad)
jmp
(bad)
mov
js
in
jp
fstp
adc
loope
add
add
mov
mov
xor
jno
fbstp
(bad)
into
push
arpl
mov
int
ss
hlt
mov
xor
push
(bad)
jo
adc
out
(bad)
(bad)
inc
mov
test
jbe
std
cmps
aas
jae
fsub
mov
scas
and
icebp
imul
jno
jns
(bad)
outs
cli
sti
xchg
or
mov
stos
fs
test
iret
pop
jns
mov
inc
fbld
push
or
dec
inc
loopne
push
mov
and
aam
and
les
sahf
jg
ja
(bad)
jmp
mov
mov
jle
aaa
(bad)
mov
push
int3
pusha
push
call
jle
cwde
xor
scas
in
test
adc
neg
clc
popf
sahf
adc
cs
jg
cmp
sbb
js
cmps
fs
cdq
ins
sar
and
push
shr
mov
out
push
cli
fdiv
xor
out
adc
xchg
dec
xlat
adc
mov
and
(bad)
(bad)
(bad)
mov
xor
call
je
add
mov
xchg
jns
cmp
xchg
jbe
mov
popa
jmp
and
fisub
pop
xchg
jge
xor
(bad)
(bad)
(bad)
call
xor
sbb
sub
sbb
pop
pop
pop
inc
pushf
dec
dec
adc
(bad)
dec
mov
cmp
ja
jmp
pusha
adc
or
push
fist
mov
fdivr
iret
jae
lock
(bad)
jnp
stos
aad
push
mov
(bad)
jmp
dec
inc
xchg
mov
(bad)
(bad)
push
shl
or
dec
ret
iret
pop
and
cdq
out
shl
and
inc
add
(bad)
mov
push
pop
dec
cdq
clc
cmps
jecxz
js
call
fwait
jmp
fs
dec
push
mov
cmp
(bad)
(bad)
out
cld
and
test
xchg
out
shl
pushf
cmps
inc
xchg
dec
(bad)
sbb
dec
push
lea
aad
sbb
es
jmp
jbe
clc
test
jg
aad
bound
and
call
sar
and
inc
imul
sbb
(bad)
jmp
mov
js
xor
loop
repz
adc
ins
inc
dec
push
fdivr
(bad)
(bad)
dec
adc
or
sbb
in
out
xchg
pop
div
movs
sub
inc
sbb
add
(bad)
rcl
lock
(bad)
(bad)
(bad)
jnp
movs
or
mov
xchg
movs
dec
sbb
mov
js
xchg
shl
pop
dec
pop
ss
cwde
iret
out
jmp
dec
out
adc
add
mov
out
pop
sbb
test
outs
cli
outs
fs
mov
cmps
adc
mov
in
imul
jne
dec
mov
ret
pop
fcomip
jmp
cdq
icebp
iret
in
dec
inc
enter
add
pop
cld
(bad)
call
data16
test
inc
mov
fld
lock
inc
imul
test
dec
xchg
int3
fmulp
mov
add
(bad)
(bad)
(bad)
call
mov
in
ss
mov
int
cdq
push
sub
cli
xlat
data16
into
pop
adc
shl
scas
push
sub
shl
push
outs
test
ret
push
xlat
std
sahf
jno
sbb
add
ins
mov
mov
movs
(bad)
jmp
mov
mov
lods
das
mov
pop
dec
sub
sbb
jl
fwait
out
les
or
pop
pushf
out
sub
cmp
sbb
add
mov
or
(bad)
(bad)
fbstp
popf
test
xchg
xor
sbb
mov
pop
mov
call
fwait
push
mov
hlt
push
xchg
(bad)
(bad)
(bad)
call
add
mov
mov
cwde
daa
push
push
mov
jmp
or
std
cdq
gs
xchg
(bad)
mov
push
movs
ja
retf
add
push
test
jle
jecxz
(bad)
(bad)
(bad)
(bad)
in
std
popf
pop
add
fisttp
shr
jp
jmp
out
das
cld
aam
fdivp
mov
(bad)
jmp
pop
lods
dec
mov
fucomip
mov
fisub
mov
aaa
push
mov
sar
jns
gs
daa
cdq
dec
fsubr
enter
(bad)
(bad)
call
inc
xor
(bad)
loop
jno
push
sub
sbb
ficom
std
xor
(bad)
(bad)
push
out
jp
ins
pop
jmp
jmp
ror
(bad)
(bad)
fisttp
push
jno
mov
xor
ret
jae
pushf
and
aaa
fs
out
mov
je
aaa
ror
jmp
and
push
int3
pop
pushf
retf
or
sbb
dec
pop
sub
mov
jae
in
xor
or
sbb
inc
aaa
cmp
jbe
(bad)
(bad)
(bad)
cld
sub
mov
clc
mov
push
xchg
pop
mov
add
push
push
pop
push
push
lods
scas
xchg
stos
mov
or
jecxz
push
pop
add
movs
and
(bad)
call
stos
adc
lock
mov
sar
mov
jecxz
mov
mov
xchg
fwait
push
outs
cli
inc
lods
mov
push
scas
(bad)
mov
and
pop
dec
iret
jnp
inc
(bad)
(bad)
(bad)
push
mov
es
jo
jnp
xor
out
iret
sub
cmp
ja
out
aad
je
push
dec
dec
repnz
lods
inc
iret
test
movs
jg
ds
iret
ret
jne
inc
xchg
pop
leave
mov
jmp
push
or
pop
jge
xchg
dec
pop
shr
fidiv
pop
ret
mov
and
mov
sahf
cmp
cmps
sub
ss
das
(bad)
push
int3
enter
(bad)
inc
jmp
aam
adc
lods
inc
lea
test
outs
mov
cmp
(bad)
(bad)
call
retfw
in
mov
inc
fist
in
shl
in
adc
popa
jmp
push
add
dec
jae
(bad)
addr16
bound
xchg
clc
or
mov
ss
pop
cmp
sar
jmp
cmp
mov
jl
mov
ja
shl
cmps
(bad)
push
add
ja
clc
sbb
leave
mov
sbb
stos
and
fwait
scas
sub
mov
call
mov
or
outs
lock
enter
imul
and
jp
out
lea
xlat
pop
repnz
dec
into
dec
jle
pop
movs
pop
movs
cli
jmp
mov
neg
shl
mov
pop
cmp
ret
mov
(bad)
fisttp
ins
test
mov
inc
enter
mov
mov
inc
icebp
in
in
dec
fsub
int
inc
cdq
xor
sbb
rcl
(bad)
jmp
rcl
inc
mov
(bad)
adc
fisttp
mov
pop
loopne
inc
mov
xor
fcomi
jb
stc
jle
jmp
clc
(bad)
(bad)
jmp
(bad)
sub
imul
enterw
sub
(bad)
jmp
ds
jmp
and
lds
adc
into
ss
add
mov
pop
fwait
dec
or
js
jge
xchg
call
push
ret
cmc
lods
xchg
js
sti
xor
rol
cmp
(bad)
(bad)
jg
mov
scas
jge
and
daa
push
imul
xchg
mov
or
(bad)
jmp
rol
push
cmc
mov
cmp
mov
cmp
sub
xor
out
and
pushf
inc
add
js
mov
push
les
or
lods
adc
not
or
(bad)
(bad)
(bad)
in
ins
push
and
sti
ds
jmp
test
mov
sub
lds
(bad)
dec
dec
in
(bad)
call
add
fnstenv
cmc
jg
outs
cmp
pop
cli
ret
add
(bad)
mov
or
inc
mov
(bad)
(bad)
(bad)
jg
scas
inc
xchg
xor
hlt
bound
call
push
out
daa
pusha
add
cmp
push
(bad)
(bad)
(bad)
jmp
jp
fwait
adc
shl
or
sbb
mov
or
cmp
fdiv
lock
ja
lea
add
ja
(bad)
dec
lea
aas
dec
dec
aas
dec
aad
push
push
or
in
movs
add
in
inc
dec
or
sub
sub
mov
mov
(bad)
(bad)
(bad)
call
xor
loop
xchg
mov
jge
dec
call
lods
(bad)
or
jno
(bad)
(bad)
(bad)
(bad)
jp
iret
sbb
cmp
call
pop
mov
push
mov
sub
push
mov
adc
adc
scas
mov
fdivr
and
mov
or
jb
sbb
inc
mov
mov
dec
add
push
and
push
fistp
cwde
add
pop
btr
inc
xor
(bad)
(bad)
inc
pop
mov
cmc
enter
add
fbld
mov
test
sub
adc
pop
add
iret
test
add
stc
(bad)
(bad)
(bad)
push
or
mov
cmp
add
stc
push
mov
js
push
push
xchg
imul
jne
mov
call
out
(bad)
loopne
repnz
sub
arpl
push
jno
jne
mov
shl
cmp
retf
sub
xor
jmp
add
fcomip
jg
mov
add
push
arpl
sub
add
sub
cdq
xor
add
stos
lahf
sbb
stos
int
cld
ja
shl
dec
cli
je
mov
sub
(bad)
jmp
jl
pop
adc
bound
(bad)
push
sbb
hlt
mov
push
mov
push
or
aam
jns
mov
ficom
jo
mov
push
and
mov
(bad)
inc
mov
or
push
mov
dec
sub
int
ss
(bad)
(bad)
(bad)
call
rcl
dec
sub
lds
sbb
mov
mov
dec
arpl
adc
pop
mov
sbb
push
stos
push
mov
ja
fld
add
mov
xor
gs
sub
and
(bad)
(bad)
out
clc
xor
sub
sbb
div
xor
in
cmp
cmp
inc
scas
pop
add
or
in
ins
cdq
and
idiv
scas
call
pop
test
dec
(bad)
(bad)
(bad)
mov
jns
mov
popf
dec
out
add
sti
(bad)
mov
test
push
sar
movs
loop
pop
stos
(bad)
(bad)
(bad)
dec
arpl
les
cmps
fisttp
in
jle
xchg
(bad)
jo
movs
mov
jp
addr16
cmp
in
jg
into
pushf
dec
sub
xor
xchg
enter
clc
call
fldcw
push
jecxz
add
and
adc
push
mul
nop
rcr
inc
sti
sbb
and
inc
mov
jg
dec
cld
xor
out
mov
lds
(bad)
inc
stc
sub
xchg
pushf
sbb
sahf
dec
push
adc
add
dec
jecxz
inc
and
or
xor
dec
adc
adc
ds
push
(bad)
and
(bad)
lods
push
mov
(bad)
jg
dec
adc
outs
mov
mov
(bad)
sub
fwait
clc
(bad)
inc
sbb
repnz
sbb
mov
add
mov
(bad)
mov
in
cmc
xchg
neg
sbb
imul
lods
xchg
push
(bad)
(bad)
(bad)
jmp
(bad)
shl
mov
shl
rcr
ins
std
jb
xchg
leave
mov
(bad)
fild
dec
push
push
mov
sub
hlt
adc
(bad)
inc
pop
enter
das
sbb
gs
fcom
ss
pop
icebp
rcl
repz
stos
(bad)
(bad)
(bad)
out
and
cmp
ficom
ficom
mov
jle
xchg
adc
jle
je
fbstp
xchg
dec
shl
sub
call
sub
mov
pop
cmp
daa
shr
sbb
push
mov
dec
inc
sbb
mov
dec
(bad)
lahf
jb
je
daa
inc
cld
(bad)
jmp
push
test
fsub
push
int
or
dec
(bad)
jg
cwde
aad
push
call
enter
push
push
mov
add
fld
push
and
not
jae
hlt
jg
or
or
sbb
in
(bad)
call
push
movs
shr
mov
rcl
test
jle
cmp
fild
cli
jnp
inc
test
mov
les
mov
je
mov
aad
iret
cwde
pop
in
sbb
in
sbb
dec
inc
dec
sbb
mov
call
or
(bad)
mov
mov
or
in
cmp
ret
data16
cmps
inc
push
(bad)
(bad)
(bad)
mov
ror
xor
push
arpl
mov
arpl
sbb
pushaw
arpl
shl
adc
(bad)
(bad)
jmp
stos
ins
cmc
or
adc
pop
mov
jo
pop
retf
dec
mov
fisubr
or
or
lods
loop
in
test
and
push
lock
loope
addr16
mov
leave
xchg
pop
stc
dec
mov
jmp
push
test
test
mov
ins
aad
mov
push
add
hlt
mov
pop
mov
lds
icebp
push
xor
(bad)
jle
call
xor
cmps
fs
cmp
xor
pop
mov
fbstp
loopne
mov
shl
cld
(bad)
(bad)
jmp
ret
repz
push
add
leave
sti
imul
adc
mov
jg
inc
and
inc
vunpcklps
pop
pushf
ret
push
(bad)
jmp
sub
ja
adc
dec
int3
xor
mov
sahf
(bad)
(bad)
(bad)
jmp
loopne
push
mov
mov
in
jle
sbb
fbstp
lods
inc
call
(bad)
(bad)
call
cmc
sub
cld
add
pop
fcom
shr
mov
pop
sbb
jmp
cmp
(bad)
(bad)
push
in
dec
mov
adc
jne
fs
icebp
sbb
jb
jle
out
mov
loop
inc
mov
pop
xchg
test
int3
out
test
mov
dec
xchg
lock
cs
rcl
adc
popa
mov
shr
jmp
push
imul
hlt
lods
jb
sub
mov
mov
cdq
fmul
dec
mov
sbb
jle
mov
mov
sub
dec
je
inc
mov
outs
push
jae
push
dec
pushf
sbb
call
inc
call
mov
jmp
pusha
fs
loop
outs
mov
and
and
(bad)
(bad)
jmp
call
or
retf
xlat
mov
mov
das
call
dec
or
shl
lea
jbe
push
fdivr
push
inc
adc
add
cwde
ins
xor
fst
(bad)
call
mov
lods
mov
xchg
movs
pop
sub
(bad)
(bad)
jmp
mov
mov
das
xchg
ret
add
cmps
mov
stc
aaa
pop
ins
or
pop
adc
inc
out
xor
pop
rol
int
push
fs
out
je
mov
ds
mov
jmp
pop
gs
sub
div
add
sbb
sbb
(bad)
push
xor
and
test
xchg
xor
cwde
std
fcomip
shl
ins
xor
xor
add
(bad)
mov
fistp
je
mov
fwait
repnz
inc
scas
nop
test
sub
out
jnp
cmp
mov
(bad)
(bad)
call
dec
popa
inc
jb
dec
pop
retf
mov
mov
mov
(bad)
mov
(bad)
fidivr
outs
(bad)
dec
sbb
ins
or
sbb
push
jmp
or
(bad)
fild
cwde
or
mov
mov
outs
fadd
shl
add
sti
push
mov
call
(bad)
(bad)
mov
aam
xor
lock
mov
push
pop
clc
sub
fnsave
bound
push
(bad)
and
pop
fwait
retf
cwde
(bad)
shl
arpl
aam
(bad)
(bad)
call
pop
popa
fsubr
adc
cdq
jmp
es
push
cmp
(bad)
call
loopne
rcl
push
cmp
loopne
iret
dec
mov
jg
add
loope
mov
ss
(bad)
jmp
in
lea
jp
mov
data16
xchg
adc
xchg
ins
std
mov
xchg
jmp
mov
scas
jno
or
cmp
sub
mov
cmp
loopne
aaa
inc
mov
xchg
xor
mov
add
xchg
cmc
mov
movs
cdq
add
lods
xchg
add
nop
pushf
mov
and
mov
add
retf
(bad)
(bad)
(bad)
sti
add
(bad)
neg
cli
cmps
shr
cli
xor
outs
xchg
ret
fptan
ret
jmp
inc
xchg
sub
iret
cmp
sub
adc
adc
mov
ss
out
pusha
and
add
in
rcr
out
ret
lods
jg
(bad)
jmp
stc
ficom
arpl
pop
dec
loop
lahf
cmc
or
imul
(bad)
(bad)
(bad)
dec
cmp
fwait
xchg
out
mov
stos
dec
pop
inc
out
and
mov
call
pop
int
jo
push
iret
and
rcr
loopne
outs
add
or
mov
js
scas
cmp
(bad)
(bad)
fild
hlt
jno
jp
mov
mov
pop
mov
add
jg
ror
add
mov
xchg
jp
add
int3
aam
outs
cdq
int3
and
adc
mov
leave
mov
jecxz
pusha
gs
inc
push
(bad)
inc
pop
out
push
push
xor
add
dec
rcl
aad
sbb
cmp
push
enter
adc
inc
cld
ror
bound
movs
jp
push
ret
ds
(bad)
jge
(bad)
(bad)
(bad)
out
outs
cld
push
sbb
and
std
mov
(bad)
and
es
ins
clc
in
mov
(bad)
mov
xchg
push
xchg
push
dec
pushf
(bad)
and
jecxz
(bad)
inc
pop
mov
add
cmp
lods
ds
nop
mov
adc
sbb
sti
mov
mov
xchg
jp
cmp
sub
xchg
gs
(bad)
in
(bad)
out
nop
cdq
mov
mov
or
push
inc
add
add
sar
pop
add
add
sbb
(bad)
call
or
daa
(bad)
leave
je
ds
xlat
dec
leave
xchg
loop
and
mov
loope
jmp
xor
(bad)
(bad)
mov
iret
and
xor
mov
lock
xor
mov
adc
xlat
and
test
add
mov
xor
fld
fistp
out
(bad)
(bad)
(bad)
(bad)
fdivr
pop
rcr
mov
xchg
add
(bad)
fcom
cmp
jmp
loope
enter
movs
hlt
cli
xchg
mov
int
lock
fnstenv
sub
iret
cmc
xor
sub
sbb
cmp
(bad)
(bad)
jg
cmp
and
cmc
shl
ss
pushw
mov
stos
cmc
stos
ins
jge
xchg
jmp
retf
scas
loopne
sbb
cmp
or
test
jbe
add
sbb
sub
mov
(bad)
inc
aam
xor
setb
push
add
mov
clc
jmp
or
xor
(bad)
rcr
call
mov
lea
xchg
fdivr
sub
dec
stos
into
sbb
inc
std
jmp
mov
mov
aad
into
sahf
sbb
aaa
jno
(bad)
fwait
pop
jmp
sbb
arpl
lock
fbld
je
cmps
xor
xchg
jp
jb
imul
jmp
(bad)
(bad)
inc
pop
hlt
fmul
fist
movs
mov
dec
inc
mov
movs
mov
(bad)
(bad)
aas
jg
push
jg
push
mov
and
mov
dec
mov
in
jge
mov
sbb
cdq
lock
xchg
adc
push
pushfw
(bad)
fwait
shr
xchg
adc
pop
push
retf
(bad)
call
int3
test
loope
in
mov
sbb
cld
call
xchg
fs
push
sar
push
test
(bad)
jg
add
test
lds
mov
mov
dec
(bad)
jmp
leave
mov
pop
mov
rcl
dec
inc
(bad)
push
mov
pushf
jae
test
(bad)
faddp
or
mov
aaa
test
push
enter
push
dec
xchg
stos
addr16
(bad)
jmp
mov
sbb
or
mov
add
cmps
sbb
cdq
popf
into
add
in
loop
cmps
xchg
(bad)
out
xchg
cmc
mov
sub
inc
popa
cmp
fwait
in
cld
(bad)
jmp
cmps
es
ds
and
jns
call
cmp
mov
(bad)
(bad)
jg
jb
jmp
gs
jns
nop
mov
and
xchg
das
gs
(bad)
jg
jo
mov
xlat
or
jmp
add
and
dec
pop
pop
xchg
push
mov
jmp
cmp
jl
lods
popf
cmp
in
std
(bad)
(bad)
call
into
sbb
jo
mov
jg
add
pusha
enter
cli
cmc
movs
sub
lods
mov
cli
mov
arpl
scas
sbb
(bad)
(bad)
(bad)
inc
inc
pop
sub
and
push
enter
lock
push
jne
mov
fmul
aad
mov
fnsave
lock
push
sbb
shl
push
add
jg
add
nop
test
fistp
call
sub
jno
fidivr
mov
sbb
add
call
dec
loope
dec
push
xlat
push
or
les
retf
nop
in
cwde
sbb
push
mov
mov
bound
cdq
(bad)
(bad)
(bad)
call
das
jge
cwde
in
add
or
(bad)
cli
sahf
call
enter
pop
or
(bad)
(bad)
mov
cmc
iret
sti
(bad)
cmp
and
jmp
xor
jo
(bad)
(bad)
(bad)
fild
dec
xor
push
or
es
(bad)
(bad)
jmp
lods
inc
imul
sti
ss
mov
add
stos
aad
add
nop
icebp
lods
jmp
xchg
out
cmp
push
loopne
mov
rcr
inc
add
xchg
out
fisub
and
lock
bound
mov
mov
jmp
out
mov
(bad)
push
cs
icebp
ins
outs
jg
fdivrp
xchg
and
out
and
sar
cmps
(bad)
(bad)
(bad)
call
rcl
aaa
xchg
cmp
and
push
movs
cmp
xchg
or
inc
mov
(bad)
jmp
xor
icebp
hlt
outs
jmp
xor
iret
pop
je
mov
(bad)
(bad)
mov
jbe
mov
mov
clc
(bad)
fdivr
jmp
outs
push
jne
(bad)
fcomip
add
push
inc
imul
and
test
or
leave
outs
enter
gs
(bad)
(bad)
call
add
repnz
jo
outs
mov
ret
dec
fs
mov
push
push
xchg
call
adc
out
mov
test
rol
mov
outs
and
loop
(bad)
(bad)
(bad)
(bad)
mov
inc
jne
jo
dec
dec
mov
xor
dec
add
inc
sub
jmp
jge
pop
popf
repnz
scas
jmp
test
adc
(bad)
jecxz
add
sbb
jne
mov
call
into
das
(bad)
jl
mov
je
mov
add
or
inc
(bad)
loopne
mov
loopne
loope
pusha
stos
xlat
xchg
(bad)
(bad)
(bad)
aas
push
inc
lea
pop
push
xor
fild
ds
mov
xchg
leave
jo
(bad)
(bad)
(bad)
jge
or
imul
ss
jp
sbb
or
ret
push
add
iret
js
fldcw
cs
cld
daa
psrld
icebp
push
cmp
push
(bad)
(bad)
jg
and
shl
scas
retf
mov
jo
cdq
sub
cmp
or
loope
loopne
fcom
adc
pop
dec
test
fisttp
jge
ss
retf
jp
lods
inc
dec
inc
aam
add
dec
mov
(bad)
jp
clc
sbb
int
sub
or
xchg
inc
mov
cmps
push
jle
(bad)
(bad)
jg
cwde
shl
mov
gs
mov
mov
sub
jb
das
es
imul
enter
outs
fild
xchg
jp
scas
cmps
mov
loop
(bad)
and
or
sti
push
hlt
pop
stos
mov
clc
sbb
cli
cwde
cmp
xor
gs
cwde
xor
rol
push
cmp
mov
cmp
pop
or
jb
jg
cmp
dec
mov
fidiv
add
movs
dec
jnp
mov
js
pop
test
mov
outs
test
scas
jp
out
clc
xchg
xchg
in
call
mov
push
inc
fld
(bad)
(bad)
mov
pushf
mov
xchg
into
out
aad
jo
sub
call
jmp
dec
mov
fidivr
bound
xlat
test
or
(bad)
xchg
mov
push
imul
out
cmps
mov
mov
mov
ret
xor
(bad)
(bad)
call
sbb
and
rol
and
cmp
cli
(bad)
sub
outs
aaa
cmp
scas
mov
mov
mov
sub
mov
rol
jno
ins
xlat
push
stos
and
mov
sbb
jno
adc
daa
pop
mov
out
sar
cmp
(bad)
and
imul
shl
sub
nop
xchg
xchg
(bad)
das
pop
sbb
sbb
push
or
and
enter
jmp
inc
ret
inc
and
push
push
and
js
nop
hlt
push
push
(bad)
mov
rcr
mov
sbb
in
fwait
and
fdivrp
(bad)
(bad)
call
out
xor
jmp
cmp
mov
fnstcw
dec
push
(bad)
jmp
ret
lock
and
sbb
ja
push
dec
call
mov
sahf
ret
out
mov
jo
retf
mov
movs
and
dec
or
and
adc
(bad)
mov
pusha
iret
pop
push
cmp
pop
shl
pop
dec
ror
(bad)
mov
mov
addr16
mov
dec
sbb
(bad)
aam
xor
add
push
ja
stos
adc
xor
(bad)
(bad)
(bad)
(bad)
mov
test
out
aas
test
and
fdivr
push
xchg
sub
ror
jg
(bad)
jl
dec
mov
pusha
ffree
call
jecxz
lods
sbb
repz
(bad)
call
adc
cwde
sbb
pop
cmp
into
jb
sbb
out
pop
sub
or
inc
sub
cmp
sbb
inc
nop
pop
sbb
scas
inc
ret
(bad)
sub
mov
test
and
adc
call
fcmovnbe
call
pop
dec
jne
mov
push
lods
loopne
popf
lahf
sbb
push
cwde
(bad)
loope
dec
cs
cmp
addr16
push
or
(bad)
inc
lahf
mov
outs
cmps
aam
jmp
jle
jae
fisub
xor
(bad)
call
(bad)
pop
loope
imul
shl
cs
jno
(bad)
in
or
(bad)
(bad)
(bad)
jmp
push
cmps
adc
cmp
dec
shr
mov
loop
jmp
dec
inc
call
clc
ds
pop
sahf
int
bound
inc
sbb
push
std
jmp
push
adc
jae
test
ror
cmp
(bad)
jmp
cld
stos
sub
js
mov
xchg
js
xor
dec
jns
jl
clc
push
call
lock
jle
xchg
mov
xor
into
lock
and
sahf
adc
sar
inc
loop
cmp
(bad)
(bad)
push
or
fild
mov
mov
(bad)
xor
cmp
pop
outs
imul
test
in
iret
mov
jp
mov
jl
xchg
push
loope
mov
pop
mov
mov
ins
hlt
(bad)
(bad)
push
cdq
mov
rol
add
dec
xchg
push
sahf
push
xchg
jne
mov
pop
xor
(bad)
(bad)
fistp
add
sub
addr16
retf
push
xchg
mov
gs
icebp
retf
mov
xor
push
and
fwait
pop
popf
imul
lock
dec
xlat
mov
dec
push
xchg
stos
clc
push
ins
fwait
ss
jmp
add
ret
popa
js
lods
mov
rcr
jmp
mov
jo
fbld
dec
scas
mov
ret
and
xchg
mov
pop
(bad)
(bad)
dec
lods
retf
sar
loope
adc
fld
out
cld
jg
mov
movs
xor
loop
inc
aas
(bad)
mov
dec
add
(bad)
adc
bound
sbb
jmp
std
bound
xor
movntps
ret
ret
fadd
jmp
aas
inc
das
call
xchg
addr16
xor
pop
std
(bad)
inc
stos
push
pop
xlat
popf
js
lahf
xor
popf
int3
lods
mov
and
sahf
mov
(bad)
call
test
or
inc
dec
and
(bad)
clc
iret
aas
xor
ret
mov
push
sub
aam
adc
loopne
(bad)
(bad)
push
sbb
adc
and
cs
ret
xor
mov
add
cs
xchg
lods
(bad)
push
mov
bound
sbb
(bad)
icebp
dec
add
idiv
(bad)
(bad)
jg
lds
jmp
cmps
lds
jns
scas
into
enter
int3
aam
(bad)
rcl
dec
into
js
es
mov
mov
ja
sub
test
jmp
add
xor
fsubr
sbb
jbe
popa
dec
jle
push
out
xlat
daa
cmps
cmps
out
sbb
rol
ret
lock
pmaxub
(bad)
(bad)
(bad)
jge
rcl
jae
out
(bad)
fidivr
sbb
xor
popa
mov
pop
ret
push
cld
fsub
jmp
ins
daa
pop
jmp
sbb
rcr
add
(bad)
(bad)
mov
aad
scas
mov
and
xor
sbb
out
push
dec
dec
popa
cmp
dec
aaa
pop
hlt
test
lods
push
xor
sub
(bad)
(bad)
(bad)
fcmovnu
clc
out
call
fadd
loopne
popf
push
cmp
(bad)
lds
fxch
and
bound
cli
(bad)
dec
add
int
cmp
xchg
xchg
pop
cmp
movs
les
cwde
push
ret
push
fistp
(bad)
push
icebp
call
je
lock
sub
outs
outs
adc
xchg
adc
xchg
repnz
es
mov
fs
ret
mov
cmps
mov
(bad)
(bad)
push
jno
leave
add
sub
sahf
add
imul
lods
push
sub
popf
cmp
xchg
(bad)
(bad)
cmp
sub
outs
out
(bad)
xor
in
bound
popa
mov
push
lock
(bad)
jmp
cmp
scas
xchg
xchg
dec
int
xchg
inc
inc
and
(bad)
inc
push
jo
das
cmps
adc
dec
cmps
mov
push
sbb
repz
add
cmps
cmp
inc
push
leave
and
jecxz
dec
push
cmp
jae
jnp
addr16
mov
lea
add
(bad)
cmc
in
sub
pop
add
jmp
jg
(bad)
(bad)
inc
adc
xor
cmp
mov
jg
add
push
jecxz
(bad)
jg
add
cmp
das
jae
adc
jle
dec
pusha
xor
pop
ret
jle
bound
std
(bad)
mov
and
pop
arpl
retf
inc
sub
(bad)
jmp
das
cmc
shr
rcr
rcl
or
and
xchg
push
push
adc
dec
imul
jge
pushf
in
mov
imul
fwait
lods
xlat
nop
outs
rol
mov
push
popa
adc
imul
test
repnz
(bad)
(bad)
jg
or
cdq
into
rcl
cmp
sub
lds
(bad)
bound
push
add
cmp
cld
pop
clc
xchg
sub
(bad)
(bad)
dec
jns
mov
mov
push
sbb
loopne
fbstp
jno
dec
or
jg
ffree
cld
jg
call
outs
loope
gs
shr
in
call
bound
cmps
mov
mov
push
push
sti
xor
push
or
jle
pop
xor
(bad)
call
leave
push
or
(bad)
jmp
xor
in
ja
pop
xchg
ret
icebp
cmp
(bad)
(bad)
cmp
outs
or
mov
sub
mov
adc
cmp
(bad)
mov
mov
adc
xor
sub
inc
ret
and
xchg
and
es
sub
(bad)
mov
mov
mov
adc
or
mov
jg
push
std
dec
xchg
cs
nop
jecxz
retf
push
ss
pop
int3
jbe
mov
and
jmp
out
mov
cmp
test
int
call
adc
jmp
mov
(bad)
push
call
push
xchg
dec
sbb
cwde
cwde
adc
das
pop
(bad)
mov
jmp
movs
xchg
xor
mov
cmp
mov
(bad)
inc
cmp
inc
or
cmp
cwde
and
movs
cmps
dec
lods
(bad)
(bad)
call
out
xor
clc
adc
inc
inc
psubusb
pusha
hlt
jl
or
(bad)
(bad)
push
rcr
(bad)
xor
mov
out
cdq
inc
cdq
(bad)
fstp
mov
sbb
(bad)
(bad)
jmp
push
sub
in
and
cmp
cmp
push
add
mov
mov
(bad)
call
rcr
adc
xchg
cmp
dec
push
les
cmps
mov
ja
or
and
addr16
nop
nop
cld
mov
and
or
addr16
ins
test
cmp
sahf
adc
(bad)
jmp
jns
out
int3
jo
or
xor
js
test
iret
inc
ret
or
xchg
lock
and
sbb
push
frstor
dec
inc
and
pop
push
ret
(bad)
(bad)
(bad)
(bad)
std
addr16
jp
scas
in
or
jae
or
addr16
push
or
cmp
xchg
xor
cmc
(bad)
(bad)
push
and
adc
sbb
add
add
out
or
(bad)
dec
enter
or
mov
(bad)
mov
dec
ret
fs
jle
call
jne
pop
loopne
xchg
xchg
icebp
jmp
pop
repnz
sbb
jmp
ss
loop
push
mov
dec
push
test
xor
cmp
arpl
(bad)
(bad)
dec
dec
std
pop
mov
or
jle
pop
push
outs
mov
push
in
dec
ja
ret
(bad)
div
mov
rep
loopne
dec
(bad)
(bad)
(bad)
(bad)
fisubr
or
(bad)
mov
jns
cdq
xor
pop
dec
scas
xor
and
add
in
sbb
repz
pushf
xchg
call
in
jmp
into
pop
test
pop
movs
retf
not
scas
cmp
pop
enter
xchg
repz
std
loop
mov
mov
div
jecxz
fs
call
push
in
aad
test
cmps
pop
pushf
in
aas
clc
xchg
loope
out
cwde
movs
mov
jmp
pushf
out
mov
inc
jge
das
mov
lock
add
call
aad
push
push
inc
retf
jne
aaa
push
ds
outs
arpl
mov
aas
cwde
pop
movs
and
push
mov
es
inc
mov
scas
sbb
jg
mov
jl
fwait
aas
adc
push
iret
jo
push
mov
jmp
(bad)
(bad)
(bad)
dec
mov
pop
sub
cld
arpl
lea
xlat
push
jmp
adc
mov
pop
fld
loop
sbb
xchg
clc
scas
add
lods
push
inc
aam
iret
pop
in
xor
sar
(bad)
(bad)
(bad)
mov
xchg
or
fwait
mov
mov
push
inc
jnp
adc
fstp
pop
pop
mov
(bad)
jmp
fwait
stos
jecxz
push
ret
aad
add
pop
mov
mov
(bad)
sbb
lock
ins
outs
icebp
out
push
jecxz
cmp
call
lods
sbb
mov
jns
inc
mov
and
dec
fsub
jle
mov
push
jp
outs
add
or
retf
call
(bad)
push
icebp
fisubr
mov
jg
ror
(bad)
(bad)
inc
stos
rcr
mov
xor
out
out
hlt
cli
cld
fmul
jl
iret
sub
mov
cmp
adc
pop
cmps
inc
sub
push
or
(bad)
(bad)
call
xchg
push
mov
iret
popf
or
or
pop
clc
sbb
inc
pop
(bad)
(bad)
out
xchg
xor
(bad)
cdq
jno
xchg
mov
test
push
jle
scas
(bad)
jmp
(bad)
(bad)
(bad)
jmp
pop
add
cwde
sbb
sub
push
or
push
xchg
scas
cli
(bad)
dec
cmp
(bad)
sti
int
ret
mov
xlat
dec
push
test
jo
retf
pop
repnz
(bad)
(bad)
call
adc
stc
aad
jbe
mov
push
pop
(bad)
cld
xchg
lock
add
pop
in
jbe
imul
pusha
dec
aad
sahf
xchg
loop
mov
stos
(bad)
fs
and
call
adc
inc
jmp
repz
mov
push
and
inc
(bad)
mov
fstp
mov
lods
inc
sub
sbb
neg
sbb
jbe
(bad)
(bad)
call
repz
sub
jne
into
loope
gs
xchg
loopne
cmp
inc
or
imul
jmp
outs
inc
mov
pop
jmp
shl
cli
inc
dec
and
gs
shr
jo
mov
mov
std
inc
add
sbb
push
mov
(bad)
dec
jne
dec
leave
push
in
xchg
mov
inc
xor
and
mov
ss
pop
mov
xchg
inc
movs
icebp
pop
stos
xchg
sub
or
mov
pop
hlt
xor
sub
(bad)
mov
dec
arpl
call
cmp
jns
out
dec
pop
bound
stos
dec
(bad)
call
neg
ss
dec
bound
push
pop
ss
(bad)
(bad)
call
retf
in
push
lea
add
inc
mov
sub
jb
repz
jbe
test
test
mov
dec
add
jge
mov
inc
sbb
add
cmp
rcl
fidivr
push
and
(bad)
push
test
mov
(bad)
jmp
add
add
bound
dec
pop
(bad)
mov
mov
rol
xlat
mov
sub
jmp
(bad)
(bad)
(bad)
jmp
dec
dec
push
sbb
mov
push
pop
lahf
pop
jecxz
add
outs
int3
sar
inc
mov
mov
or
aaa
xchg
lock
(bad)
jmp
mov
clc
repz
ror
cmp
jnp
btr
(bad)
(bad)
aas
jl
pop
jp
pop
mov
push
loope
mov
loopne
jae
mov
jno
in
inc
cmc
(bad)
(bad)
fist
lds
lock
jecxz
push
int
xor
mov
(bad)
call
push
xchg
iret
xor
test
and
sbb
push
xchg
int3
xor
xchg
adc
(bad)
push
xor
xlat
mov
jg
mov
mov
mov
and
jl
mov
sbb
(bad)
jmp
add
pop
adc
jmp
jmp
mov
add
stos
sbb
bound
cmp
(bad)
dec
push
push
adc
call
iret
push
or
fild
cmp
cmc
mov
(bad)
(bad)
(bad)
call
dec
mov
sub
mov
jl
clc
adc
in
xchg
mov
push
(bad)
(bad)
(bad)
jmp
shr
loopne
and
jg
imul
sti
punpcklbw
adc
inc
cmps
dec
aam
dec
cwde
dec
dec
cs
xlat
push
(bad)
(bad)
(bad)
mov
mov
push
cmp
xor
retf
push
or
js
xchg
enter
es
lock
inc
mov
xchg
es
adc
xor
mov
xchg
(bad)
int
jo
loop
push
mov
loopne
xor
push
pop
or
jmp
and
pop
and
push
cmc
out
jg
aas
sub
inc
cmp
xor
outs
sub
push
cmp
cmp
cmp
inc
inc
aaa
ja
test
(bad)
push
add
push
pushf
mov
add
and
pop
enter
sbb
div
mov
es
or
(bad)
call
adc
adc
out
jg
in
and
jbe
add
xor
jns
inc
test
leave
hlt
ds
call
ret
adc
adc
std
(bad)
push
jl
int3
fs
jae
frstor
cmc
lods
outs
in
mov
push
ins
fild
add
loopne
inc
jo
stc
push
or
sbb
pop
xchg
xchg
shl
add
push
xchg
mov
push
add
sbb
jbe
and
cmp
push
(bad)
dec
adc
xlat
pand
movs
test
nop
(bad)
(bad)
(bad)
push
adc
xchg
pop
add
mov
sub
rol
push
push
xor
dec
sub
(bad)
(bad)
inc
js
jmp
fdivr
ja
rcpps
pusha
js
add
adc
dec
pop
fadd
(bad)
(bad)
inc
popa
adc
imul
pop
jg
adc
out
sub
mov
adc
sub
add
mov
mov
jmp
fidiv
xchg
jl
retf
test
or
push
add
sub
popa
and
ss
cld
(bad)
jg
cdq
mov
rcr
fadd
inc
aas
cli
xor
(bad)
(bad)
jg
movs
out
push
sub
mov
ja
jb
cmp
into
(bad)
hlt
mov
mov
mov
mov
pop
fidiv
mov
dec
enter
xor
dec
mov
ins
inc
cmp
aas
repz
fiadd
jmp
or
daa
das
fcmovb
(bad)
(bad)
aas
sbb
mov
std
icebp
push
dec
retf
(bad)
jmp
jbe
imul
pop
stos
inc
push
mov
dec
call
loope
(bad)
(bad)
inc
xchg
test
js
cdq
in
mov
and
bound
lods
call
(bad)
(bad)
push
(bad)
pop
enter
ret
scas
outs
ret
addr16
(bad)
(bad)
cmp
adc
add
outs
inc
fidivr
rcr
mov
in
inc
push
cmps
idiv
dec
mov
and
(bad)
dec
push
mov
daa
or
add
push
push
add
xlat
(bad)
push
inc
out
mov
fdiv
fdiv
sbb
adc
test
and
xchg
ins
add
ja
(bad)
push
inc
adc
cmp
imul
inc
icebp
adc
add
pop
aas
and
adc
pop
aaa
rcl
jp
xchg
bound
sar
dec
and
sbb
stos
sub
jmp
add
lock
movs
out
inc
xor
vmovhpd
clc
aam
shl
cmp
retf
pusha
lds
outs
(bad)
(bad)
(bad)
(bad)
call
out
les
adc
stc
fwait
pop
loope
retf
cs
pop
outs
mov
ret
jmp
push
ds
push
push
mov
hlt
mov
push
mov
cdq
mov
cmp
popf
(bad)
(bad)
mov
inc
and
sbb
fld
das
adc
adc
(bad)
gs
(bad)
(bad)
call
enter
mov
ret
adc
lahf
adc
sub
xor
dec
shr
loop
clc
jg
popf
bound
jmp
mov
sbb
sub
pop
(bad)
inc
cmp
xor
cmps
popa
(bad)
fimul
rcl
ins
ins
loopne
pop
lock
mov
push
or
std
push
loope
inc
cmp
(bad)
push
add
shr
(bad)
loopne
xchg
fs
repz
and
pop
call
(bad)
adc
jle
inc
loope
ja
sbb
fcmovne
adc
inc
bound
aas
sar
(bad)
mov
jb
fstp
js
in
jo
int
sub
xchg
cwde
add
(bad)
inc
cmp
add
pop
mov
sbb
mov
mov
add
gs
xor
lahf
ret
idiv
(bad)
(bad)
(bad)
cmp
and
xchg
mov
fcomp
sbb
dec
add
inc
push
movs
(bad)
dec
pop
push
outs
fcmovu
stos
jmp
sbb
aad
sbb
mov
fild
cs
inc
and
inc
sub
sub
and
aam
dec
xchg
int3
sub
mov
fild
out
imul
push
loope
mov
adc
jno
cmp
sbb
std
sti
mov
jmp
(bad)
aaa
(bad)
inc
jg
cmp
sar
xchg
or
(bad)
pop
mov
clc
xor
ins
cmp
ret
sbb
mov
(bad)
inc
aas
jle
jecxz
mov
xor
stos
and
adc
push
(bad)
(bad)
(bad)
jg
cwde
inc
jae
and
jae
data16
mov
jae
out
outs
movs
sub
xor
jmp
mov
mov
pushf
inc
cmps
jmp
in
test
outs
call
sbb
loopne
inc
xchg
sub
inc
add
dec
mov
test
fsubr
xchg
in
fdiv
stc
pop
(bad)
sti
arpl
aaa
jg
add
sub
and
jb
(bad)
(bad)
jmp
repnz
adc
sub
mov
add
push
push
scas
push
mov
sub
pop
icebp
jg
jmp
push
aas
fisttp
std
sbb
mov
outs
mov
and
xor
into
cmp
fbstp
call
xor
and
arpl
scas
mov
sar
push
ficomp
cld
mov
jae
icebp
xlat
dec
jne
pop
or
lds
aas
loope
jg
repnz
pushf
jg
retf
inc
xor
sub
push
clc
mov
jmp
jl
sbb
mov
and
mov
mov
(bad)
(bad)
(bad)
push
inc
mov
push
push
loopne
mov
fnstcw
push
and
and
inc
cmps
dec
sub
jg
and
xor
cmc
repnz
mov
jle
lock
(bad)
jg
sti
jg
repz
das
sti
rcl
mov
cmovl
repz
adc
dec
add
std
mov
and
out
(bad)
(bad)
(bad)
jg
sti
cld
xchg
dec
push
pop
mov
xchg
pop
pop
and
aaa
dec
xchg
movs
xchg
and
jo
pop
xchg
stos
stos
ror
loop
inc
inc
sub
sar
and
rcr
push
les
into
test
jmp
pop
and
or
gs
cmp
push
cdq
(bad)
(bad)
sbb
add
(bad)
(bad)
mov
movs
out
fdivr
(bad)
mov
and
push
fcom
ret
pop
fcomip
(bad)
call
cwde
xor
fnstcw
fcmovnb
ins
call
jnp
test
movs
or
push
cmps
mov
push
pushf
mov
jmp
clc
lock
cmps
sub
jmp
pushf
mov
mov
xchg
ins
cmp
aam
cmp
(bad)
(bad)
dec
stc
sub
inc
fadd
sbb
pop
mov
and
test
xlat
mov
leave
pushf
popf
cs
sub
cmp
cli
cmp
jnp
pop
daa
es
and
lock
sahf
pop
sti
(bad)
fcom
pop
mov
(bad)
(bad)
call
sub
clc
out
popa
inc
mov
test
push
cwde
(bad)
and
adc
cld
mov
add
ss
repnz
ret
mov
mov
add
and
add
push
repz
jp
inc
jmp
xlat
call
inc
es
or
cmps
(bad)
jg
call
inc
repnz
adc
mov
push
icebp
aas
ja
sti
pop
out
hlt
cli
(bad)
dec
jl
mov
mov
enter
loopne
stos
(bad)
js
clc
inc
sub
hlt
mov
inc
cmp
mov
mov
cmps
pop
mov
mov
ficom
xor
aas
loop
add
cmp
sti
push
push
push
mov
and
(bad)
mov
ins
lds
test
jle
push
addr16
(bad)
fild
rcr
mov
repz
mov
pop
jno
arpl
call
cld
push
imul
inc
add
mov
(bad)
(bad)
jmp
jg
sti
adc
cmc
xor
cdq
cmp
call
fimul
or
mov
dec
cmp
fcomp
mov
sub
adc
sub
stos
pop
mov
repnz
xor
fdivr
(bad)
(bad)
mov
xlat
ja
inc
sahf
mov
dec
adc
pop
popf
sbb
adc
xor
pop
pop
dec
lods
out
js
imul
xchg
push
mov
dec
cs
cmp
(bad)
(bad)
fcomip
movs
mov
hlt
adc
out
repz
adc
mov
popf
(bad)
push
mov
enter
(bad)
fcomip
sbb
dec
and
or
or
and
pop
js
(bad)
lds
mov
lock
cli
adc
lahf
mov
or
and
fidivr
(bad)
ja
(bad)
jbe
and
cli
ins
pop
add
and
hlt
jg
dec
test
in
mov
movs
xchg
popf
out
xor
jmp
or
push
test
cdq
xor
fistp
mov
ds
or
adc
(bad)
mov
mov
dec
adc
add
sub
aad
mov
arpl
lahf
inc
pop
push
pop
pop
or
or
sbb
xor
mov
push
and
(bad)
(bad)
fistp
add
hlt
or
xchg
sub
jp
call
(bad)
(bad)
mov
cdq
xchg
inc
not
mov
mov
push
shr
mov
int
stc
fiadd
(bad)
call
rol
out
mov
call
sub
dec
mov
inc
mov
ins
xlat
aad
or
imul
add
mov
jp
xchg
nop
lock
in
out
and
(bad)
(bad)
mov
jl
mov
(bad)
push
popf
mov
dec
fist
cmps
lds
test
inc
es
adc
or
enter
lods
in
(bad)
(bad)
(bad)
call
pop
jns
add
add
lods
mov
inc
mov
mov
inc
(bad)
(bad)
(bad)
call
xchg
wrmsr
jmp
int3
push
clc
mov
lds
rcr
(bad)
mov
ds
call
inc
test
cmps
lahf
outs
pop
imul
dec
dec
je
adc
(bad)
(bad)
(bad)
(bad)
fdiv
lods
fcomp
mov
shl
lds
sbb
ins
icebp
test
jecxz
push
or
push
fisttp
repnz
jp
cmp
sbb
jmp
enter
jmp
ds
mov
hlt
xor
xchg
jg
jmp
test
(bad)
(bad)
inc
fst
mov
(bad)
mov
std
add
popa
mov
nop
push
shr
hlt
(bad)
(bad)
jmp
sar
cdq
push
pop
std
dec
xchg
cmp
sbb
sbb
fsub
imul
lea
inc
(bad)
mov
sub
(bad)
(bad)
(bad)
jg
fisttp
call
mov
fldcw
add
pop
mov
xchg
add
add
jmp
adc
dec
xchg
dec
dec
mov
out
inc
add
aas
or
pusha
mov
inc
push
mov
(bad)
(bad)
mov
stos
movs
jne
sahf
inc
jg
leave
daa
mov
and
pop
xchg
mov
(bad)
(bad)
(bad)
mov
(bad)
fdiv
outs
or
movnti
shr
inc
(bad)
(bad)
(bad)
(bad)
mov
neg
pop
out
cld
ror
lock
(bad)
mov
jae
pop
fs
and
lahf
lods
test
mov
mov
mov
xor
pop
adc
call
adc
retf
adc
test
cld
imul
nop
(bad)
(bad)
jg
pop
fcmovbe
fadd
or
adc
neg
out
inc
fdivr
mov
gs
dec
cmp
push
mov
add
scas
mov
fwait
xchg
int3
sbb
int3
imul
(bad)
js
pop
jno
neg
dec
mov
fs
jmp
adc
pushf
rol
add
(bad)
(bad)
jmp
repnz
xlat
das
dec
das
jmp
mov
inc
mov
sub
(bad)
inc
sbb
pop
sbb
sbb
mov
dec
cwde
lods
std
retf
inc
dec
(bad)
(bad)
(bad)
call
jl
or
adc
fldcw
sbb
bnd
inc
mov
cmp
and
inc
sub
inc
stos
add
jmp
jbe
adc
inc
sub
test
popa
xlat
mov
outs
sbb
ret
mov
fcmovbe
cmp
mov
mov
mov
jmp
mov
push
ins
(bad)
jle
cmp
sbb
sti
sbb
jp
mov
(bad)
(bad)
(bad)
mov
movs
dec
add
xor
gs
and
mov
push
sub
dec
dec
aaa
sub
(bad)
(bad)
(bad)
inc
(bad)
cmp
jnp
xor
mov
xchg
sub
adc
ins
in
(bad)
call
cdq
cmp
fimul
xchg
scas
inc
(bad)
cmp
enter
push
loopne
cmp
or
(bad)
(bad)
sbb
add
mov
out
test
out
and
push
call
sub
push
adc
inc
push
jge
idiv
fistp
mov
pusha
icebp
lods
push
dec
movs
xor
jg
push
pop
cmp
out
mov
pusha
sub
ret
in
retf
out
test
fidiv
sub
mov
fldlg2
sti
or
mov
or
(bad)
mov
aam
adc
pop
xor
jb
push
add
scas
and
daa
mov
imul
inc
test
mov
jg
shr
mov
jp
inc
mov
push
lods
test
jle
mov
jle
mov
les
enter
data16
out
cli
iret
cmp
xchg
sahf
je
outs
call
add
(bad)
push
adc
(bad)
fisttp
jae
xor
jnp
and
mov
ja
sub
(bad)
jmp
mov
repnz
add
stos
inc
push
sbb
push
imul
or
adc
adc
cmp
into
shl
adc
mov
(bad)
(bad)
ficomp
push
test
rcr
cmp
sbb
ret
sub
outs
sbb
sub
push
pop
mov
sti
imul
mov
fidivr
in
imul
jmp
cs
hlt
sub
cmp
mov
into
je
inc
mov
push
pop
push
xchg
adc
adc
shl
mov
mov
jp
(bad)
in
imul
lock
jg
jae
or
jle
lods
aas
fdivr
pop
out
jg
imul
pop
cld
in
clc
(bad)
(bad)
push
adc
popa
and
fidiv
mov
popf
in
push
aad
pop
das
addr16
(bad)
jmp
xchg
std
popf
pop
fisub
or
pop
(bad)
(bad)
(bad)
inc
aas
adc
pop
mov
inc
and
sub
cli
fwait
rcl
mov
sub
(bad)
dec
jnp
fmul
inc
popa
fcmovu
cmps
out
and
jp
pop
cmc
jg
retf
push
sti
jp
cmp
bound
jg
call
loopne
popa
sbb
xchg
push
adc
inc
dec
iret
rcl
lods
clc
(bad)
call
addr16
mov
js
push
in
xchg
fldcw
sbb
sub
dec
jecxz
or
xor
adc
gs
aas
(bad)
jmp
mov
mov
shr
or
ret
into
stos
sbb
adc
dec
fadd
jo
mov
(bad)
call
out
daa
dec
imul
xchg
sti
inc
xchg
icebp
mov
mov
jge
mov
rcl
cmps
xchg
push
pop
adc
(bad)
cmp
push
push
sbb
js
pop
bt
xchg
dec
fisttp
jg
arpl
cmc
cmps
adc
call
(bad)
(bad)
inc
clc
neg
icebp
mov
out
pop
test
std
jne
mul
dec
loop
mov
mov
in
mov
(bad)
clc
dec
into
mov
out
aam
sti
cmp
cmp
mov
pop
or
jno
test
adc
fidivr
and
pop
mov
mov
(bad)
(bad)
jg
xor
dec
dec
fisubr
nop
sub
cmp
outs
adc
add
mov
jmp
mov
in
mov
push
lds
or
lock
push
fs
pop
in
fmul
push
mov
jae
push
xor
pop
movs
in
sub
mov
sub
call
xchg
mov
mov
test
fmul
lods
in
jb
ja
test
fs
cmp
fist
sub
push
add
sub
ja
jmp
adc
xchg
jle
call
fbstp
inc
repz
adc
pop
shl
lds
ds
mov
sub
dec
std
(bad)
(bad)
(bad)
call
jl
pop
mov
jmp
mov
jb
xchg
(bad)
(bad)
call
sub
jge
leave
(bad)
rcr
out
std
out
jmp
and
popf
fdivr
(bad)
(bad)
call
imul
retf
pop
mov
pop
add
in
lods
lea
inc
rcr
adc
int3
imul
cmc
hlt
mov
inc
jae
and
lock
scas
sar
push
(bad)
outs
out
(bad)
jmp
inc
sub
inc
push
imul
pop
(bad)
cmps
lock
(bad)
(bad)
in
fnsave
jnp
pop
test
stc
mov
stc
mov
je
xchg
and
and
pusha
(bad)
jmp
enter
ss
ds
sbb
sub
xchg
push
inc
ret
or
jg
add
shl
inc
cs
mov
(bad)
(bad)
call
push
and
bnd
jp
push
fdivr
push
aas
inc
(bad)
inc
xchg
add
out
stos
leave
or
(bad)
(bad)
cmp
ins
push
xchg
hlt
inc
adc
sub
in
jo
or
pop
sbb
or
call
add
loopne
adc
repz
ins
pop
nop
dec
dec
ins
jno
push
mov
std
(bad)
jmp
ror
aas
ja
xchg
push
cmp
adc
pop
dec
xchg
(bad)
(bad)
inc
dec
or
and
(bad)
leave
xor
inc
mov
enter
call
into
cmp
adc
xor
and
inc
fild
dec
mov
xor
loop
(bad)
(bad)
jmp
ss
mov
lods
adc
xchg
retf
shr
sti
neg
cmp
aad
(bad)
(bad)
(bad)
jnp
icebp
in
out
sahf
lahf
dec
addr16
aam
repz
adc
std
leave
fadd
(bad)
(bad)
(bad)
jg
std
jns
fwait
pop
lahf
jne
adc
jno
sbb
inc
jno
test
jg
mov
cs
outs
jp
mov
ret
jmp
cs
call
xchg
outs
sub
sbb
xor
fst
xlat
and
pop
loopne
cmp
mov
(bad)
(bad)
call
or
mov
div
mov
lea
out
(bad)
retf
call
je
stos
cdq
outs
inc
pop
arpl
pop
ja
sar
leave
pushf
stos
sub
cmps
push
dec
movs
idiv
(bad)
(bad)
(bad)
fistp
and
mov
and
add
dec
jmp
(bad)
(bad)
inc
call
out
fwait
jae
jmp
mov
xor
adc
(bad)
(bad)
(bad)
push
repnz
ret
inc
neg
xlat
ror
sub
cmps
pop
test
js
pop
xchg
push
or
(bad)
ffree
(bad)
fldz
mov
stc
mov
das
hlt
stos
call
push
lods
pushf
xor
(bad)
(bad)
jmp
sbb
jl
mov
or
dec
jle
cmp
cmc
cmc
outs
dec
shl
mov
dec
outs
and
cmp
xchg
jb
repz
jnp
push
cmps
call
stos
xchg
xor
xchg
and
(bad)
(bad)
jmp
mov
ds
add
out
fimul
inc
jbe
movs
es
xchg
sub
popa
cwde
adc
fisub
test
add
jg
jno
sbb
sahf
mul
(bad)
mov
sar
fbstp
push
test
jne
clc
inc
lahf
inc
notrack
dec
shl
icebp
inc
add
into
mov
out
xchg
fiadd
mov
(bad)
call
popf
das
pop
pop
cmp
(bad)
fdivrp
sbb
arpl
sbb
loopne
cmp
dec
test
mov
cmp
(bad)
lock
pop
sahf
mov
push
xor
push
mov
(bad)
jmp
(bad)
outs
inc
jp
or
addr16
jne
test
shl
das
mov
call
(bad)
(bad)
push
sahf
cs
int
dec
shl
(bad)
sti
(bad)
jno
icebp
repz
cmp
int3
into
pop
pop
xchg
hlt
dec
add
dec
cli
jmp
and
mov
enter
scas
mov
in
jp
out
clc
outs
and
(bad)
push
mov
stos
and
add
and
sar
(bad)
(bad)
(bad)
jg
outs
mov
mov
sub
into
shl
xor
mov
mov
sub
sbb
cwde
cmp
push
adc
fist
and
sbb
ins
les
or
faddp
and
inc
in
icebp
xor
add
(bad)
jmp
inc
push
inc
gs
mov
jno
clc
sbb
dec
ret
hlt
outs
pop
sub
or
fsubr
or
and
dec
or
inc
and
mov
xor
mov
xchg
and
push
sub
hlt
in
and
sbb
mov
xor
sbb
(bad)
jmp
pop
add
and
(bad)
inc
xor
movs
sub
pop
jb
adc
sub
sti
(bad)
dec
mov
xchg
rcr
cmp
aaa
adc
pop
pushf
dec
cdq
ja
fdivr
ret
adc
jbe
out
test
xchg
cmp
or
lods
imul
lock
push
scas
(bad)
imul
stos
(bad)
mov
cwde
rol
mov
mov
(bad)
(bad)
jmp
add
adc
mov
pop
add
fdiv
loopne
cmp
loope
(bad)
push
out
pop
mov
cmps
mov
ret
scas
(bad)
cmp
adc
call
test
mov
cmp
sahf
enter
and
mov
or
(bad)
jmp
cmps
stos
mov
xor
cmp
adc
leave
sub
sbb
sub
call
clc
cmp
(bad)
cmp
mov
dec
pop
push
test
push
(bad)
call
add
cmc
pusha
pop
out
xor
cmpps
jmp
push
or
aaa
test
pop
sbb
adc
xchg
mov
xchg
test
(bad)
(bad)
cmp
hlt
mov
cmp
add
jecxz
cmp
rcr
inc
jnp
add
paddd
loopne
in
inc
xlat
push
std
pusha
xchg
imul
in
or
mov
ret
cwde
xor
mov
test
adc
arpl
mov
pop
mov
(bad)
dec
call
mov
inc
and
sub
aam
push
or
cld
call
and
mov
(bad)
iret
call
jae
sub
xchg
lods
mov
pop
jne
add
sbb
or
lea
icebp
or
lea
pop
(bad)
(bad)
push
gs
lea
mov
outs
(bad)
int
outs
ins
fwait
dec
loopne
(bad)
ja
jae
push
gs
xchg
dec
add
or
mov
call
and
or
dec
je
ds
mov
inc
rol
push
les
dec
cmps
cwde
push
mov
pop
das
into
cmp
mov
dec
fdivr
mov
imul
scas
scas
mov
popa
adc
mov
xor
jle
out
icebp
mov
mov
lods
scas
and
fcom
mov
repnz
in
loop
(bad)
(bad)
push
fucomi
rcl
mov
add
adc
adc
jmp
mov
(bad)
push
(bad)
(bad)
jmp
lock
ins
popf
out
dec
push
jg
xchg
push
pushf
test
mov
idiv
call
pop
cwde
and
sbb
std
in
jmp
pop
push
mov
stc
lods
jne
sti
loop
cli
pusha
sbb
std
push
mov
push
hlt
aaa
pop
push
popa
lea
rcr
fbld
test
push
aam
lods
xchg
adc
jle
(bad)
(bad)
call
inc
dec
jae
popa
dec
sbb
inc
aas
inc
repz
xor
pop
iret
and
cmp
add
and
(bad)
(bad)
(bad)
in
cmps
mov
mov
ds
dec
push
(bad)
or
and
dec
cmps
sub
test
mov
(bad)
and
(bad)
sbb
dec
cli
add
mov
dec
neg
pop
sub
inc
jae
(bad)
(bad)
(bad)
call
adc
rcl
sub
jo
xor
clc
inc
adc
push
sub
into
gs
xchg
jne
push
inc
loope
jmp
mov
or
mov
adc
lock
inc
hlt
out
mov
fwait
clc
cmps
xchg
inc
sub
inc
es
sub
imul
lods
stos
dec
in
test
call
outs
mov
(bad)
dec
push
sbb
cmps
and
loop
fs
xchg
test
mov
mov
and
or
(bad)
(bad)
inc
cmps
pop
or
dec
js
dec
scas
jge
lahf
cli
loopne
mov
hlt
(bad)
(bad)
jg
jle
pop
stc
call
mov
pop
jg
outs
lock
pop
fild
(bad)
(bad)
fistp
pushf
mov
out
test
jle
ja
loopne
div
cmp
and
sub
in
mov
sbb
into
mov
(bad)
push
idiv
pop
push
pop
mov
pop
sbb
loope
mov
bswap
mov
adc
mov
ins
xchg
fs
adc
test
(bad)
jmp
shr
cli
lahf
(bad)
retf
xchg
inc
and
add
neg
add
imul
imul
(bad)
dec
lods
int
imul
stos
sbb
(bad)
call
ds
xor
add
jl
add
mov
cwde
cwde
mov
mov
push
inc
cmps
ins
bound
adc
adc
clc
mov
jmp
int
push
lea
sbb
icebp
in
sahf
fistp
sbb
loope
mov
stc
push
add
(bad)
mov
repz
mov
ret
loop
adc
jnp
je
dec
pop
stos
shr
mov
mov
(bad)
(bad)
call
xor
scas
arpl
cmc
retf
dec
cmp
and
or
or
popa
(bad)
mov
or
stos
ss
xor
push
cld
jmp
retf
mov
xchg
clc
push
in
stc
xchg
pushf
inc
push
xchg
jae
cmp
test
(bad)
leave
rol
jmp
sub
jle
nop
mov
stc
sahf
dec
lahf
dec
inc
not
cmp
cwde
sar
or
push
adc
out
pop
icebp
enter
call
inc
jl
mov
mov
inc
pushf
mov
and
(bad)
(bad)
inc
lea
aas
inc
out
iret
jge
test
pop
mov
mov
jg
add
pop
pop
sti
je
(bad)
(bad)
dec
cwde
(bad)
(bad)
sti
gs
jns
daa
and
cvtps2pd
lods
cmp
adc
jns
aaa
icebp
into
sbb
(bad)
(bad)
inc
cld
push
pop
dec
cwde
push
and
adc
jmp
xor
fwait
jo
jmp
sar
jmp
mov
(bad)
jmp
outs
sub
(bad)
out
inc
pop
je
and
mov
sti
outs
int3
cmp
push
jno
lods
aas
push
hlt
fs
xchg
and
mov
(bad)
(bad)
mov
imul
inc
shr
ins
pop
push
repz
inc
(bad)
sti
out
mov
sti
call
inc
push
mov
xchg
movs
stc
loopne
jnp
sbb
je
mov
(bad)
pop
out
mov
sub
cld
sar
(bad)
jmp
sbb
cld
and
aam
jmp
or
and
inc
cwde
(bad)
(bad)
push
js
outs
mov
sar
sahf
or
lock
cmp
es
cli
(bad)
(bad)
js
push
das
pop
inc
cmp
data16
sbb
sbb
pop
add
cmc
pop
or
in
ss
push
iret
icebp
sub
fbstp
fimul
jae
rcr
jb
and
sub
sbb
cmp
sbb
js
icebp
jmp
lock
repnz
dec
xlat
jge
xlat
adc
push
mov
sub
(bad)
mov
fcmove
and
and
cs
(bad)
repz
adc
mov
jg
adc
cmp
ins
dec
xchg
lods
xor
pusha
bound
scas
(bad)
mov
and
inc
cli
call
push
and
push
adc
cs
xor
cmp
sbb
pop
lock
lods
(bad)
mov
adc
mov
(bad)
jg
dec
imul
call
scas
lods
movs
ss
xor
ret
mov
call
xchg
movs
mov
cld
(bad)
(bad)
fdiv
outs
ins
clc
inc
ja
int3
jb
xchg
pop
repz
mov
xchg
jp
ret
or
(bad)
cld
(bad)
(bad)
dec
jmp
mov
hlt
inc
mov
gs
pushf
or
call
cld
loope
cmc
jg
or
jns
scas
jne
aam
jle
(bad)
call
xor
or
xchg
iret
jmp
call
pop
inc
(bad)
loop
mov
mov
ds
pop
or
in
ret
(bad)
mov
mov
loope
(bad)
call
pop
fistp
dec
and
jmp
loop
pop
xchg
and
(bad)
(bad)
call
out
or
stc
scas
stos
scas
fidiv
add
imul
xor
(bad)
(bad)
jg
add
add
icebp
adc
mov
aam
ss
and
mov
je
jmp
lods
fwait
push
sbb
in
popa
xchg
inc
mov
ffree
psrld
sub
add
es
(bad)
(bad)
(bad)
sti
dec
sar
or
scas
mov
dec
icebp
pushf
add
jae
xchg
sahf
fiadd
cmc
lahf
stc
add
mov
loope
push
jl
(bad)
movs
setb
(bad)
call
cmp
mov
jl
je
sbb
adc
jmp
(bad)
test
out
lock
pop
fisttp
ret
ja
loop
(bad)
fiadd
outs
fdivp
cmp
mov
pop
sar
cmp
add
(bad)
call
(bad)
fidivr
fmul
or
xchg
test
jecxz
loopne
add
bswap
mov
jl
out
(bad)
(bad)
(bad)
out
shl
mov
xor
ficom
add
test
je
(bad)
call
mov
mov
retf
int
dec
inc
(bad)
and
call
adc
(bad)
jg
sbb
mov
imul
push
xchg
inc
adc
stc
mov
push
ins
addr16
mov
(bad)
es
mov
lock
mov
in
call
mov
and
or
retf
fidiv
pushf
(bad)
call
xor
in
rol
aaa
sbb
pop
mov
fcomip
fisubr
dec
adc
and
(bad)
(bad)
(bad)
cmp
jb
xor
bound
stos
imul
js
(bad)
jg
xchg
fadd
or
out
(bad)
(bad)
mov
sbb
(bad)
call
sbb
fwait
xchg
push
cli
sti
inc
rcl
lds
daa
scas
(bad)
cld
jmp
popf
test
xchg
mov
mov
(bad)
mov
lds
retf
popa
ins
js
hlt
push
je
out
mov
fist
data16
(bad)
(bad)
push
clc
leave
loope
cs
jecxz
(bad)
mov
sub
adc
xchg
xor
(bad)
push
or
jg
add
jb
dec
dec
and
call
in
outs
hlt
jg
pusha
cld
cmp
fs
or
loop
pop
aaa
xchg
sub
pop
sub
sahf
cmp
and
and
push
mov
jge
int
es
lahf
std
jmp
adc
je
aad
fwait
ss
sub
(bad)
cli
sub
xchg
(bad)
cmp
cmc
(bad)
push
cs
xchg
loope
and
in
push
and
adc
(bad)
mov
ret
pop
pop
mov
loop
add
not
adc
pmaxsw
mov
(bad)
call
call
call
push
ja
xlat
stc
shl
imul
cmp
inc
leave
adc
xchg
lahf
mov
xor
hlt
ds
call
sub
add
rol
mov
sbb
mov
movs
jp
mov
(bad)
(bad)
call
push
mov
add
sub
(bad)
jecxz
mov
fs
daa
and
sbb
push
cmp
push
ret
cwde
dec
xor
xor
(bad)
(bad)
mov
xchg
ins
leave
loop
cwde
xor
xor
mov
mov
xchg
push
aaa
pop
sar
outs
mov
lds
std
lods
add
push
push
(bad)
(bad)
(bad)
cmp
fcom
retf
retf
test
lea
je
pop
lahf
clc
ja
outs
repnz
mov
jmp
add
adc
out
stc
adc
loope
adc
in
xor
pop
out
shr
rcr
adc
pop
mov
or
arpl
sub
lods
(bad)
mov
add
or
inc
fcom
les
sub
push
mov
xor
aam
sub
outs
inc
push
mov
jbe
push
gs
out
jne
sub
sub
(bad)
jge
and
ds
popa
jo
das
out
and
lods
cli
jmp
mov
sub
fs
xor
scas
ret
ins
shr
jp
mov
pop
mov
adc
push
xchg
test
aad
icebp
arpl
pop
fbld
jb
cdq
dec
bnd
jg
mov
dec
mov
pop
adc
and
xchg
outs
pushf
ins
in
fnstcw
outs
imul
mov
fwait
dec
jae
cli
(bad)
(bad)
(bad)
inc
fnstenv
lahf
xchg
inc
test
push
addr16
mov
sub
cmp
sub
icebp
xchg
mov
call
push
mov
pop
jns
rcr
call
stc
and
lahf
xchg
dec
cmp
mov
loop
push
jge
jmp
(bad)
jmp
mov
xor
sti
jge
ss
call
addr16
data16
xchg
in
(bad)
popf
pop
jp
dec
or
xor
std
out
inc
mov
int3
(bad)
jg
lock
inc
jge
sbb
mov
fdivr
call
and
xchg
pop
ins
or
ins
adc
ret
std
(bad)
(bad)
jmp
add
add
test
das
mov
lods
mov
jne
lea
loopne
test
jns
cmc
lds
mov
xchg
sub
mov
mov
push
rol
das
cwde
xor
rep
lods
and
sub
rcr
mov
adc
mov
push
and
jmp
cs
inc
dec
dec
test
addr16
data16
inc
inc
pop
lods
pop
sub
fadd
sub
aas
push
(bad)
mov
call
cmc
fcomi
xchg
hlt
inc
dec
dec
xchg
pop
sub
inc
fcomp
out
mov
and
test
mov
fisubr
test
mov
das
ficomp
pop
xchg
and
sahf
stos
addr16
mov
xchg
xlat
mov
cmp
adc
jmp
cmps
and
inc
fsubr
jecxz
jbe
xchg
(bad)
(bad)
mov
adc
and
ret
add
into
pushf
mov
les
sub
lea
jl
dec
das
pop
jae
in
inc
sub
(bad)
out
clc
push
jo
push
xchg
lods
(bad)
call
dec
(bad)
sub
mov
out
inc
mov
sub
adc
test
scas
xchg
or
sti
xor
repz
sbb
ins
retf
pushf
popa
mov
adc
add
mov
in
mov
(bad)
jmp
pop
mov
into
add
in
lock
jo
xlat
int3
adc
and
mov
pop
fwait
dec
pusha
(bad)
hlt
(bad)
(bad)
mov
and
add
(bad)
jecxz
dec
xlat
outs
fstp
movs
pop
outs
(bad)
sti
pop
mov
or
xchg
cld
(bad)
(bad)
dec
mov
inc
les
inc
xchg
idiv
lods
leave
adc
call
or
push
(bad)
jg
popa
fisubr
xor
dec
inc
xchg
jnp
xor
sub
dec
pop
mov
ret
mov
test
mov
jecxz
mov
xchg
cmps
mov
sbb
ja
lock
mul
jns
or
mov
ja
clc
jns
mov
sti
or
fsub
push
sti
stos
(bad)
ja
jle
fnstenv
(bad)
mov
in
ins
xchg
inc
(bad)
fild
in
call
cmp
cmp
(bad)
(bad)
(bad)
cmp
mov
mov
movs
in
loop
push
cdq
call
cli
sbb
(bad)
(bad)
push
leave
(bad)
pusha
sbb
adc
cmp
sub
jo
mov
sub
cmp
ins
ficom
shl
jae
and
cmc
push
test
in
jge
ins
test
pop
cs
popf
xchg
(bad)
aam
lahf
rcl
hlt
stc
mov
movs
xchg
adc
call
mov
cli
cld
xchg
inc
(bad)
ss
loope
(bad)
or
(bad)
(bad)
call
pop
mov
sbb
cmp
ror
mov
jg
mov
sar
mov
sub
xchg
sub
(bad)
(bad)
push
stc
mov
or
es
clc
sbb
add
xor
es
xor
(bad)
call
test
icebp
gs
sub
mov
inc
push
inc
xlat
into
(bad)
cmc
dec
push
pushf
dec
jecxz
js
xchg
stos
enter
cmp
jp
clc
(bad)
(bad)
js
inc
adc
xchg
retf
ficom
loop
mov
push
mov
inc
pop
pop
mov
and
jbe
push
loopne
lea
ror
and
sar
dec
jno
pop
inc
xchg
dec
arpl
or
inc
jle
mov
test
(bad)
(bad)
out
and
test
jle
or
inc
icebp
call
(bad)
call
push
or
lds
stc
xchg
jne
adc
inc
mov
inc
pop
in
outs
mov
pop
dec
adc
sub
mov
stos
xchg
das
(bad)
js
pop
mov
ss
(bad)
shr
leave
(bad)
daa
cli
xchg
sbb
jmp
inc
xor
xchg
xor
push
cmp
cmp
inc
neg
mov
mov
cwde
stc
or
addr16
sbb
or
xor
push
dec
adc
sbb
fwait
out
pop
(bad)
mov
dec
push
(bad)
clc
xchg
mov
lock
aas
mov
cmc
rcr
mov
jmp
push
mov
aad
jns
dec
pop
lea
inc
ja
fadd
lock
shl
xor
(bad)
int
sahf
adc
mov
std
(bad)
fnstsw
dec
mov
cld
repz
(bad)
jg
ins
ss
sbb
into
ins
inc
aad
js
fsub
(bad)
mov
dec
cwde
retf
mov
repz
xor
dec
(bad)
out
push
test
outs
ror
dec
and
mov
mov
icebp
or
jo
sbb
fisttp
(bad)
(bad)
(bad)
call
cmp
cmp
adc
inc
leave
in
es
add
popa
or
adc
out
shl
ror
pop
rol
jmp
clc
mov
jl
loope
retf
push
ret
inc
clc
dec
inc
cli
movhps
sub
fst
icebp
or
pop
in
(bad)
(bad)
(bad)
(bad)
jge
jne
mov
pop
inc
push
mov
push
fs
enter
xchg
sbb
outs
adc
dec
mov
(bad)
(bad)
(bad)
mov
mov
ss
es
icebp
je
jle
fcomip
jg
shl
dec
sbb
mov
stos
and
fwait
popa
js
int3
popf
cmp
mov
xor
jmp
lods
(bad)
jg
pusha
es
hlt
pop
sub
cmp
stos
cmp
push
outs
sub
inc
and
call
xor
fwait
mov
addr16
lea
add
add
ds
clc
(bad)
jmp
jle
inc
jle
push
mov
shl
dec
push
adc
stos
(bad)
(bad)
out
push
cmc
nop
imul
add
cld
call
pop
mov
test
gs
jmp
rol
or
stos
addr16
push
cld
call
push
jl
xchg
pop
adc
ror
(bad)
(bad)
jg
and
cmps
sbb
or
xchg
sub
push
xchg
pop
mov
sub
out
nop
test
push
sahf
aad
push
into
jmp
(bad)
(bad)
call
fs
js
xchg
jb
pop
cmp
mov
jne
in
mov
xchg
loopne
jp
and
dec
xchg
mov
pop
in
jo
and
adc
inc
popa
cld
pop
dec
add
(bad)
loopne
push
(bad)
xchg
dec
loop
repz
sub
fwait
test
push
and
mov
cmp
(bad)
jmp
jae
mov
dec
adc
push
das
adc
mov
pop
shl
dec
lods
ins
out
mov
push
push
outs
enter
gs
jmp
int
and
es
rol
cs
jl
adc
bound
cmp
mov
(bad)
cli
loop
js
jmp
mov
mov
aas
push
shr
(bad)
jg
dec
test
dec
push
xchg
mov
mov
pop
cmp
mov
mov
pop
cmp
inc
mov
scas
scas
jp
adc
or
mov
inc
repnz
(bad)
(bad)
call
movs
xor
xor
outs
mov
les
inc
dec
test
inc
(bad)
cmp
xchg
(bad)
(bad)
(bad)
mov
ret
add
and
mov
mov
mov
outs
and
sub
or
nop
(bad)
pushf
xor
ret
dec
addr16
(bad)
inc
cmp
push
adc
shl
enter
aad
ror
out
xor
or
push
gs
sub
pushf
fwait
xchg
dec
test
xchg
es
enter
fisttp
popa
movs
test
(bad)
jmp
lahf
xor
cmps
mov
inc
pop
or
adc
fucomip
daa
sahf
mov
out
mov
sub
inc
inc
sub
cwde
xor
jp
pop
cli
(bad)
(bad)
dec
inc
push
ret
ror
inc
push
or
pop
jae
jae
mov
(bad)
out
mov
mov
out
pop
sbb
jle
mov
cdq
dec
adc
js
clc
shl
xchg
cld
mov
outs
(bad)
(bad)
dec
in
pop
test
dec
jae
and
and
dec
std
add
cdq
sbb
lock
(bad)
jmp
repz
fdiv
cwde
inc
mov
push
add
ds
xor
sbb
or
(bad)
(bad)
call
(bad)
call
daa
iret
adc
jno
nop
inc
fsub
ss
xchg
xor
retf
call
or
iret
fisttp
xchg
in
mov
mov
movs
ftst
movs
add
fdivr
(bad)
(bad)
jmp
mov
repz
out
inc
ja
sub
mov
das
retf
xchg
test
clc
call
jg
xor
sahf
jno
pcmpgtw
xchg
je
(bad)
(bad)
jmp
iret
out
mov
mov
movs
push
in
mov
mov
(bad)
fs
xor
movs
lock
and
ret
adc
(bad)
fld
inc
sbb
aad
sub
ret
add
jb
xor
jmp
pop
mov
mov
sbb
or
adc
lods
sbb
(bad)
jg
or
stc
xchg
repz
push
inc
div
outs
(bad)
(bad)
(bad)
(bad)
jge
or
clc
in
(bad)
js
sub
loope
sub
xor
and
sbb
(bad)
(bad)
out
cli
and
adc
call
inc
int3
sbb
and
retf
jg
(bad)
(bad)
(bad)
(bad)
cmp
sub
pop
mov
dec
mov
or
div
mov
mov
xor
test
test
mov
jle
test
arpl
and
xchg
or
mov
cs
outs
ret
xor
call
xchg
adc
pop
sbb
out
jmp
jnp
or
sub
cld
(bad)
(bad)
jmp
add
stos
dec
retf
inc
fs
xchg
(bad)
loopne
aam
cmp
fisub
hlt
je
(bad)
push
les
push
push
jo
cld
enter
or
pop
sub
sbb
movs
xchg
and
enter
adc
inc
inc
lock
dec
inc
into
loopne
dec
push
jecxz
mov
cli
jmp
inc
scas
jbe
jmp
jge
xchg
mov
jnp
add
cli
cmp
mov
cmp
fld
(bad)
call
bnd
and
les
pop
fadd
sub
inc
loopne
jnp
cmp
call
inc
shl
loop
mov
stc
fstp
sbb
jnp
sbb
(bad)
(bad)
(bad)
jmp
and
stos
and
mov
and
int
xor
lds
fldcw
test
sbb
mov
xlat
hlt
cs
mov
dec
arpl
(bad)
dec
call
and
dec
mov
or
inc
into
adc
inc
arpl
inc
mov
pop
adc
repz
push
(bad)
(bad)
jmp
and
or
loope
mov
sub
pop
(bad)
mov
pop
pusha
mov
retf
data16
or
movs
pop
cld
(bad)
call
adc
loop
retf
fnstcw
jle
xor
(bad)
xor
jmp
push
or
jmp
(bad)
clc
icebp
in
sbb
xchg
imul
xchg
or
and
lods
loope
sub
dec
and
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
and
dec
mov
sub
mov
and
jmp
and
addr16
call
call
(bad)
jmp
rcl
push
in
daa
push
rol
out
jmp
or
scas
jmp
leave
rcl
push
sub
pop
pop
jmp
mov
(bad)
jg
dec
call
(bad)
xchg
sti
ins
bound
stos
inc
(bad)
cs
call
cmps
pusha
push
jo
and
xor
pop
sbb
ret
dec
inc
dec
inc
cmp
into
(bad)
(bad)
jmp
dec
push
bound
imul
mov
into
(bad)
or
mov
jg
dec
std
push
sub
fldcw
loop
sub
sub
sbb
mov
repnz
pop
mov
pop
sahf
ins
dec
jo
fwait
inc
and
iret
popf
int
test
mov
js
xchg
lock
pop
sub
push
hlt
pop
loopne
ret
test
xchg
sub
jo
jmp
jb
sahf
popf
in
repz
je
jae
adc
ins
sbb
adc
das
push
icebp
inc
mov
aam
and
fadd
sbb
(bad)
jmp
adc
adc
stos
sahf
movs
inc
xchg
lahf
dec
add
mov
out
sbb
(bad)
out
jnp
mov
popa
sbb
xchg
dec
std
call
xchg
xchg
push
sahf
inc
gs
pop
jo
mov
(bad)
dec
lds
xchg
xchg
arpl
out
add
sbb
mov
lods
shl
loope
xchg
call
pop
aaa
xor
mov
or
dec
rol
pusha
fwait
aas
aaa
std
fisttp
inc
mov
pop
xchg
or
sbb
outs
and
dec
arpl
jne
jno
hlt
loop
popa
inc
mov
ficomp
mov
mov
add
jp
lods
adc
js
jg
cld
(bad)
call
test
les
std
loop
xor
and
(bad)
dec
stos
sub
sbb
movs
sbb
fld
push
mov
out
jle
xor
cld
(bad)
jg
xor
xor
sub
or
push
mov
jbe
sub
(bad)
div
popa
and
(bad)
jmp
cmps
js
icebp
xchg
or
hlt
and
(bad)
stc
xor
(bad)
(bad)
call
fdivr
sahf
gs
out
(bad)
sub
das
jmp
fidivr
addr16
into
add
push
outs
inc
inc
and
imul
aas
cmc
je
jmp
test
jne
ds
mov
cmp
fbstp
mov
xor
test
lods
add
and
cmp
mov
and
std
call
out
add
pop
int3
out
or
es
lods
lods
lahf
(bad)
(bad)
call
and
adc
jg
(bad)
fsubr
inc
loope
push
add
(bad)
(bad)
jmp
xor
loope
push
and
jns
cmp
(bad)
jg
push
data16
add
jb
enter
add
dec
xor
outs
sbb
or
je
xor
jmp
add
fdiv
cli
call
xchg
xchg
dec
inc
and
dec
dec
push
cmp
int
call
xor
push
mov
movs
loopne
sbb
das
mov
jle
mov
cdq
retf
cwde
mov
jbe
arpl
loopne
outs
mul
sar
jmp
adc
push
shl
ror
test
adc
mov
aaa
clc
js
(bad)
mov
movs
cmp
adc
stos
test
lods
(bad)
pusha
pushf
(bad)
mov
jne
test
retf
xor
and
add
fild
jg
or
jnp
mov
xor
nop
inc
int
jns
mov
(bad)
mov
push
cld
jle
test
push
stos
adc
mov
ss
in
icebp
inc
xor
inc
das
mov
adc
out
pop
add
stos
out
scas
cli
sbb
aam
hlt
or
scas
sub
add
sahf
mov
xchg
lods
pop
(bad)
out
push
cmp
les
sbb
jmp
sub
int
jnp
cdq
retf
icebp
cli
(bad)
inc
and
dec
fisttp
mov
stos
dec
pop
(bad)
jmp
fidiv
dec
repz
test
push
xchg
dec
out
loope
add
(bad)
jg
pop
(bad)
cmp
and
mov
sar
mov
out
mov
(bad)
dec
and
dec
pop
aas
or
or
mov
jg
dec
shr
lock
outs
clc
(bad)
(bad)
cmp
xor
mov
or
js
mov
add
mov
(bad)
jmp
adc
pop
pop
mov
iret
inc
xor
push
pop
dec
xor
lea
std
clc
out
pop
lahf
inc
pushf
ins
inc
out
leave
or
xchg
mov
jmp
popf
push
jne
cmc
xchg
dec
jbe
movs
nop
lock
push
adc
mov
scas
icebp
add
jecxz
(bad)
jg
jmp
pop
loope
add
sub
jno
jnp
sti
mov
xchg
adc
(bad)
aam
(bad)
(bad)
mov
pop
xchg
dec
test
sahf
stc
in
jp
pop
call
mov
sbb
inc
(bad)
(bad)
inc
hlt
cmp
das
jnp
hlt
hlt
cmp
jne
inc
jp
add
dec
test
test
(bad)
(bad)
call
jmp
cmp
ret
sbb
push
sbb
mov
xor
loope
retf
fdivr
sub
and
jmp
pop
cmps
test
sar
xor
adc
adc
push
jbe
aas
sbb
imul
sbb
jbe
(bad)
(bad)
(bad)
inc
cmp
fcom
xchg
popf
imul
or
jns
jmp
clc
(bad)
(bad)
push
cmps
scas
ds
push
outs
mov
aam
mov
xor
(bad)
dec
retf
mov
cs
mov
inc
pop
cs
inc
sub
call
adc
imul
std
sbb
push
push
push
jne
popa
jmp
clc
(bad)
imul
js
cmp
jo
and
fs
dec
mov
cmp
or
in
push
cdq
or
stos
cmp
dec
mov
xlat
std
inc
mov
(bad)
out
call
(bad)
dec
mov
push
in
popf
mov
push
adc
mov
pop
pop
(bad)
or
jns
test
xor
and
jle
dec
pop
movs
xlat
sub
std
inc
cld
(bad)
push
inc
cmp
mov
sar
ds
test
sbb
mov
(bad)
(bad)
jg
jns
sub
or
test
imul
push
cli
(bad)
popf
lahf
cld
(bad)
(bad)
(bad)
jg
clc
add
cld
pop
pop
nop
push
sub
add
cmp
cli
jp
adc
push
dec
cmc
adc
(bad)
popa
rcr
imul
(bad)
jmp
jle
lock
mov
cdq
inc
adc
pop
jmp
dec
stos
and
outs
push
and
movs
lods
inc
mov
(bad)
call
pop
sbb
xor
cmp
jb
ds
push
pop
cld
jmp
push
add
std
mov
std
in
sbb
xchg
hlt
mov
(bad)
dec
pop
jmp
sbb
ins
fist
push
inc
jmp
dec
push
fsub
pop
fbstp
dec
push
fs
(bad)
(bad)
call
add
pcmpeqd
scas
ffreep
repz
jl
mov
sbb
pop
cmp
out
add
cs
jg
(bad)
jg
lods
or
push
pop
fild
cmp
mov
outs
and
movs
test
pop
push
and
mov
cli
loopne
inc
sbb
jbe
pop
xor
cmp
(bad)
jmp
ins
push
inc
jae
add
mov
imul
adc
mov
mov
fiadd
pop
fidiv
mov
adc
(bad)
(bad)
mov
je
vpmacssww
pop
loope
push
mov
adc
pop
jb
ja
(bad)
call
sub
or
sub
dec
fist
xchg
adc
fiadd
and
dec
jl
out
enter
cmp
sbb
jg
push
gs
xor
popa
fucomi
clc
xchg
sbb
(bad)
(bad)
dec
je
stos
mov
int3
call
shl
aad
push
rol
lea
pop
sbb
(bad)
jmp
cmp
shr
popf
push
shr
xchg
mov
js
addr16
jecxz
stos
dec
xchg
cli
pop
inc
mov
adc
test
cs
jns
stos
mov
xchg
cmps
test
(bad)
jmp
ss
dec
xchg
mov
je
mov
fs
test
ret
jo
ret
call
call
adc
push
adc
add
mov
jbe
imul
mov
push
scas
out
and
shl
(bad)
(bad)
(bad)
call
cmps
aad
xchg
stos
sub
adc
outs
aas
dec
xlat
mov
test
adc
fnsave
bound
daa
xchg
and
cld
(bad)
xor
and
enter
adc
mov
xchg
shr
mov
ja
inc
into
push
adc
ror
pop
jae
sbb
sbb
mov
dec
cmps
sub
(bad)
inc
jno
in
iret
push
mov
adc
(bad)
push
cld
jecxz
and
pop
pop
lods
mov
in
adc
inc
mov
imul
and
sbb
push
fst
hlt
dec
dec
(bad)
iret
jnp
push
clc
(bad)
dec
xor
lods
mov
sahf
add
jecxz
shr
jnp
push
jmp
cmc
(bad)
dec
sbb
leave
push
adc
xchg
rcl
sbb
pop
int
dec
mov
(bad)
call
or
jmp
in
test
xchg
sub
push
mov
(bad)
(bad)
jmp
fnstcw
fcomi
ds
sub
mov
push
(bad)
jae
leave
lahf
fld
pop
clc
inc
in
ins
xchg
adc
fisttp
adc
enter
dec
hlt
fld
stos
jno
(bad)
call
lock
ins
inc
stc
or
call
jecxz
rol
dec
inc
jl
pushf
push
push
jmp
push
xchg
sub
dec
pop
adc
inc
ss
add
int3
inc
outs
and
loopne
push
lods
retf
pop
xchg
add
add
ret
push
jns
mov
add
(bad)
aas
loopne
ret
mov
xchg
add
jge
or
xchg
sbb
(bad)
(bad)
dec
add
mov
frstor
sbb
jecxz
mov
sbb
jle
(bad)
(bad)
(bad)
jmp
icebp
sbb
loop
pop
dec
call
dec
ins
inc
loop
cwde
outs
pop
fsubr
outs
mov
sub
hlt
pop
sbb
sbb
mov
cld
jne
out
cli
mov
mov
out
or
mov
and
jp
mov
mov
add
idiv
(bad)
(bad)
inc
std
fwait
sahf
(bad)
test
push
xchg
push
pop
fadd
ret
ins
sti
retf
mov
inc
pushf
mov
ficom
hlt
(bad)
cmp
mov
cmps
(bad)
(bad)
mov
and
dec
retf
xor
lds
cmp
(bad)
mov
fadd
cwde
aas
jnp
cmps
aad
lock
in
mov
fyl2x
cld
in
(bad)
mov
ds
jne
xor
out
movs
dec
jne
mov
aaa
and
sbb
sbb
(bad)
jg
lahf
mov
or
je
cmp
std
fldcw
cdq
int
cmp
(bad)
(bad)
call
mov
hlt
or
add
adc
jae
es
pop
xchg
das
cmp
(bad)
(bad)
out
retf
daa
xchg
inc
mov
xlat
jns
inc
mov
adc
cmp
stos
inc
ss
lods
inc
push
(bad)
out
mov
test
and
mov
hlt
inc
sar
call
cmp
mov
jbe
or
xchg
out
imul
add
das
add
aad
push
sub
scas
or
and
(bad)
mov
xchg
or
mov
adc
xor
mov
addr16
(bad)
(bad)
(bad)
call
dec
and
mov
das
movs
sub
sub
adc
adc
xlat
icebp
and
(bad)
(bad)
(bad)
cmp
sahf
sub
jbe
push
push
lods
lods
fistp
and
lea
adc
nop
aam
pop
sub
sub
(bad)
inc
lock
sbb
ud0
test
das
adc
mov
nop
xlat
push
and
in
adc
add
lahf
inc
repz
retf
call
lods
and
aam
(bad)
push
bound
dec
mov
cmps
jmp
ds
outs
(bad)
mov
jmp
ins
xchg
jmp
jns
push
mov
ins
(bad)
js
iret
jmp
retf
mov
sbb
mov
aad
or
cmps
and
xchg
sub
jmp
dec
lds
cmps
cmps
mov
dec
in
push
adc
mov
or
and
mov
mov
push
dec
(bad)
call
mov
push
inc
sbb
pop
xchg
arpl
shl
ds
clc
and
jns
test
pop
jge
ret
cmp
cdq
test
jnp
rcl
outs
and
stc
or
pop
adc
inc
mov
lahf
pop
repnz
pop
xchg
mov
mov
jecxz
push
movs
data16
movs
jbe
sub
pop
(bad)
stos
dec
loop
push
pop
fdivr
dec
add
inc
test
cmc
(bad)
push
pop
and
mov
cmp
xchg
cmp
dec
cmp
add
(bad)
inc
mov
dec
inc
jge
and
mov
call
inc
rcr
test
mov
pusha
ds
std
(bad)
call
stos
xchg
movs
fwait
aad
pop
ret
push
mov
sub
jno
jg
add
add
jo
aaa
mov
mov
pop
js
and
dec
xchg
adc
es
adc
movs
inc
inc
adc
jp
adc
aam
loopne
daa
ds
lock
inc
mov
sbb
daa
adc
pushf
pop
fmulp
push
inc
call
loopne
(bad)
call
inc
pop
aaa
(bad)
mov
ret
ds
jno
(bad)
sub
call
xlat
(bad)
xlat
and
(bad)
(bad)
mov
out
mov
into
orps
sub
clc
sahf
(bad)
leave
mov
(bad)
lahf
(bad)
out
test
(bad)
(bad)
jge
addr16
fs
test
add
pop
in
mov
sti
fiadd
test
(bad)
mov
xor
xchg
rol
jae
xor
(bad)
(bad)
cmp
aaa
sub
inc
and
aas
sahf
(bad)
(bad)
(bad)
fisttp
add
sbb
xor
cs
je
addr16
and
(bad)
mov
inc
std
jge
mov
or
or
mov
cmc
or
loop
push
xchg
shl
(bad)
call
adc
sbb
push
out
les
cli
les
mov
test
ins
ret
pop
cmp
mov
lods
push
cmps
jo
and
(bad)
(bad)
(bad)
dec
cmc
lods
clc
mov
pop
cmps
test
xchg
movs
push
out
(bad)
pop
inc
mov
push
xchg
mov
(bad)
pop
sub
or
inc
mov
fisubr
or
jno
out
(bad)
xlat
lock
pusha
popf
add
(bad)
jmp
test
stos
aam
push
scas
faddp
adc
(bad)
(bad)
jmp
iret
or
or
outs
loopne
ret
ret
rcr
cmc
(bad)
(bad)
call
mov
or
fdiv
js
mov
repnz
inc
sar
jb
and
(bad)
ficomp
and
test
(bad)
fucom
pop
ret
pop
adc
pop
and
xor
(bad)
xor
pop
xchg
js
(bad)
(bad)
mov
mov
rcl
rol
or
rcr
rol
cli
(bad)
mov
cmps
sahf
jl
stos
into
and
mov
sub
pusha
cmps
(bad)
jmp
add
or
daa
mov
push
mov
sbb
clc
dec
xor
pop
jg
stos
or
pushf
xchg
cld
(bad)
(bad)
dec
sbb
outs
les
leave
jmp
sbb
dec
in
xchg
xor
ds
and
sub
cmp
(bad)
(bad)
call
out
fld
mov
out
mov
and
mov
mov
cli
xor
(bad)
mov
popa
lock
mov
pop
mov
pop
push
das
sub
(bad)
(bad)
dec
cmps
leave
dec
sub
imul
rcr
test
cmp
push
dec
sub
or
(bad)
(bad)
mov
cmp
(bad)
mov
fild
mov
jns
test
xchg
(bad)
icebp
mov
pop
mov
push
or
xor
(bad)
push
test
push
pop
xor
mov
mov
sti
movs
inc
test
or
(bad)
(bad)
jmp
clc
rcr
or
hlt
jg
xor
jnp
xchg
(bad)
(bad)
jmp
dec
add
push
pop
ss
out
movs
sub
jns
dec
dec
fdivrp
sbb
movs
inc
(bad)
(bad)
jg
stc
lock
iret
aas
xchg
out
clc
push
cli
(bad)
xor
(bad)
(bad)
jg
sub
and
ret
outs
push
(bad)
and
pop
push
(bad)
(bad)
dec
xor
je
pop
mov
fdivr
in
cmp
pop
add
sub
stc
lods
(bad)
jg
add
or
das
out
cmp
test
std
cdq
or
and
(bad)
rep
dec
pop
push
sub
mov
pop
and
jo
add
sub
hlt
call
std
call
push
cmp
inc
mov
or
cmp
test
(bad)
push
outs
push
push
icebp
sub
xchg
pop
sbb
ds
out
pop
(bad)
(bad)
jg
sbb
sbb
pop
ins
mov
jns
xor
mov
mov
ret
jne
pop
js
stc
std
movs
sar
lods
lods
dec
leave
retf
sbb
and
(bad)
(bad)
(bad)
(bad)
fnclex
test
pop
push
lods
xor
inc
mov
sbb
loopne
mov
test
(bad)
mov
xor
adc
sub
loop
imul
pop
repz
sbb
jnp
call
push
or
(bad)
jmp
xlat
(bad)
xor
pop
fdiv
ja
mov
mov
repnz
sub
or
pop
stos
fcom
or
(bad)
(bad)
mov
and
xchg
xor
shr
xor
sbb
in
mov
(bad)
es
call
cli
push
(bad)
mov
movs
jecxz
(bad)
mov
lods
mov
xchg
jb
or
(bad)
(bad)
(bad)
(bad)
jmp
stos
je
or
dec
inc
dec
adc
inc
mov
fwait
jmp
dec
push
movs
add
dec
(bad)
(bad)
call
add
pop
mov
shl
mov
jg
loop
retf
mov
xchg
(bad)
mov
xor
neg
enter
or
test
(bad)
(bad)
call
dec
dec
mov
or
mov
sbb
shl
cmp
daa
(bad)
(bad)
(bad)
dec
jg
mov
pop
call
jns
pusha
or
sbb
or
dec
inc
pop
mov
mov
(bad)
aaa
xchg
out
dec
push
add
fst
scas
(bad)
(bad)
(bad)
jmp
shl
pushf
call
jns
xor
(bad)
into
shl
aas
inc
fs
mov
xor
sbb
fcomip
or
xor
cmps
dec
into
xor
(bad)
push
rcr
sub
inc
push
dec
sbb
xor
xor
mov
lea
and
(bad)
(bad)
jg
pop
push
dec
aaa
(bad)
ficomp
push
leave
add
test
cli
sahf
xor
sbb
push
fsubr
mov
cwde
sub
aaa
cwde
inc
ret
fcomp
ins
cmp
in
data16
data16
and
lock
jae
ret
sti
adc
add
(bad)
dec
mov
mul
(bad)
pop
push
out
call
push
cwde
bound
bound
sbb
faddp
jmp
popf
add
mov
xlat
loope
lds
mov
loope
in
pop
(bad)
(bad)
call
mov
daa
call
(bad)
(bad)
mov
mov
adc
aaa
and
cmc
dec
(bad)
xor
loopne
ud0
(bad)
(bad)
fild
leave
xor
xchg
xor
xlat
push
sub
fcomp
sub
inc
loop
cmps
(bad)
mov
outs
cli
inc
inc
das
mov
mov
jecxz
xchg
mov
xchg
dec
(bad)
fisubr
mov
xchg
push
jmp
pop
aam
out
retf
adc
ret
repz
(bad)
(bad)
(bad)
push
cwde
cmp
sahf
movs
mov
pop
or
jmp
jo
hlt
repz
jge
mov
outs
and
mov
fstp
add
arpl
out
push
ret
pop
cmp
ins
add
push
out
jp
add
pop
and
cmp
les
ds
adc
sub
adc
ret
(bad)
(bad)
(bad)
push
inc
mov
jmp
push
and
bound
int
mov
mov
dec
mov
(bad)
(bad)
(bad)
jmp
imul
loop
dec
xlat
(bad)
fndisi(8087
cmp
movs
xchg
out
sub
fwait
cmp
lock
dec
pusha
jmp
outs
add
fldcw
movs
lea
inc
sbb
rcl
scas
pop
dec
sahf
std
imul
ss
adc
jl
idiv
mov
(bad)
(bad)
(bad)
(bad)
mov
outs
inc
or
push
scas
nop
icebp
cdq
nop
dec
std
test
enter
cmp
das
mov
push
mov
lods
or
cmp
rcl
pop
rol
xchg
jmp
push
adc
sub
dec
mov
retf
and
pushf
sti
add
or
xchg
mov
iret
in
fistp
jne
dec
call
dec
outs
jl
push
(bad)
ss
mov
scas
fisubr
pop
outs
xor
mov
jae
(bad)
(bad)
(bad)
push
adc
push
xor
stc
rcr
xchg
push
xor
call
xor
jmp
sahf
pop
inc
(bad)
clc
cmp
and
ror
pop
xchg
loopne
inc
adc
add
push
lods
test
hlt
sub
push
xchg
call
sbb
in
mov
pushf
enter
nop
and
mov
adc
sub
cli
add
xlat
xchg
arpl
inc
jecxz
jp
popf
jmp
clc
imul
test
pop
mov
ret
lahf
(bad)
in
repz
out
cmp
jg
sub
push
or
sub
icebp
call
mov
jg
(bad)
fistp
mov
cmp
adc
cmp
into
jmp
(bad)
dec
mov
cs
or
loopne
push
retf
pusha
push
(bad)
mov
(bad)
pop
(bad)
(bad)
(bad)
cmp
mov
lods
scas
dec
scas
aad
call
call
retf
add
pop
shl
push
mov
pushf
arpl
cld
out
clc
inc
lea
inc
jecxz
(bad)
dec
in
inc
cmp
sahf
frstor
(bad)
(bad)
call
scas
cmp
sub
jbe
xchg
mov
not
push
and
mov
push
cdq
loop
fld
outs
jge
jmp
jmp
or
out
les
in
or
dec
lock
xor
into
in
push
sub
aaa
dec
and
or
or
sub
or
(bad)
cmps
shl
fst
push
add
ret
xchg
xor
pop
mov
mov
lahf
aad
dec
std
or
inc
shr
dec
test
div
(bad)
(bad)
dec
frstor
enter
in
sub
js
sub
fdivr
xor
sbb
fwait
cs
sbb
loope
mov
adc
popa
loopne
mov
lea
cwde
cs
sahf
and
pop
sbb
cld
dec
jmp
ins
out
aad
(bad)
jg
div
jle
xchg
jmp
mov
std
mov
or
inc
push
push
xchg
inc
ja
jne
jne
call
push
inc
dec
(bad)
push
add
push
xchg
sbb
or
test
cdq
leave
dec
cmps
neg
add
dec
inc
pop
mov
scas
jmp
inc
jae
xor
or
into
jns
ds
test
add
cld
fild
rol
dec
cmps
ror
and
cld
push
cld
jg
ins
inc
jmp
pop
dec
xchg
call
add
in
js
das
xor
xor
out
fild
fsubr
rcr
ror
xchg
sub
fwait
cdq
dec
ja
(bad)
(bad)
dec
mov
into
sub
fxch
test
and
pop
je
pop
dec
das
into
scas
outs
inc
jne
push
dec
shl
std
push
jo
or
scas
cld
and
(bad)
jg
ds
and
call
int3
xchg
jmp
or
pop
or
or
movs
cli
jmp
jp
cs
or
dec
jle
sub
(bad)
mov
add
aaa
hlt
sub
xor
stos
cmp
call
add
pop
(bad)
(bad)
(bad)
jmp
inc
pop
fld
test
out
pop
sbb
sub
leave
mov
aaa
outs
xchg
jne
cwde
bound
or
nop
call
cld
push
cdq
in
add
push
xor
and
dec
data16
fcmovu
pop
clc
dec
mov
call
std
(bad)
fdiv
shl
cmp
int
xchg
(bad)
je
ret
or
pop
add
(bad)
stos
sbb
mov
lds
jmp
clc
pop
xchg
mov
pop
js
mov
xchg
call
stos
xlat
and
jnp
pop
ja
add
cli
jmp
mov
mov
adc
mov
mov
cs
shl
fdivr
jbe
push
scas
fiadd
lods
movs
jno
mov
dec
xor
pop
push
fiadd
add
xchg
mov
(bad)
jecxz
(bad)
sub
sahf
(bad)
(bad)
call
pushf
lock
pop
adc
add
ret
test
cmp
mov
(bad)
(bad)
(bad)
push
shl
enter
mov
int
add
adc
cmp
(bad)
(bad)
(bad)
jmp
mov
xchg
xchg
int
(bad)
loop
int
jae
fdivr
repnz
mov
add
imul
daa
int3
sub
enter
call
push
inc
test
dec
out
in
(bad)
(bad)
(bad)
jmp
lods
in
mov
cmp
sub
xchg
daa
sub
and
(bad)
(bad)
cmp
loopne
and
adc
inc
arpl
and
pop
adc
popf
inc
dec
mov
push
jp
(bad)
(bad)
(bad)
mov
popf
and
iret
inc
jmp
adc
xchg
inc
inc
xor
jmp
mov
popa
inc
(bad)
nop
dec
rcr
add
(bad)
(bad)
call
(bad)
loope
or
and
pushf
cmp
test
adc
cwde
cmp
call
sbb
(bad)
(bad)
jg
int
es
test
sub
popf
push
mov
push
add
stos
retf
push
mov
dec
or
fdivr
(bad)
pop
hlt
call
jnp
add
(bad)
call
mov
mov
scas
pop
fldcw
pop
(bad)
jmp
mov
adc
not
dec
ins
mov
rcl
lods
ss
pop
adc
daa
bound
cli
mov
into
and
mov
pushf
mov
push
or
fadd
pop
clc
clc
push
dec
(bad)
(bad)
(bad)
(bad)
push
fidiv
(bad)
pop
outs
push
cmp
pushf
push
inc
xchg
inc
pop
ds
pop
aaa
sbb
inc
push
inc
mov
jns
in
aaa
jg
sub
inc
cmp
inc
xchg
popw
sbb
(bad)
(bad)
call
push
jne
dec
push
test
sub
mov
adc
lea
cmps
daa
loope
xchg
out
cli
push
xchg
fmul
pop
pushf
add
popa
push
adc
and
dec
int3
jns
add
(bad)
cld
stc
cwde
or
clc
cli
push
gs
push
stos
mov
inc
push
gs
adc
retf
call
xor
das
adc
dec
shl
dec
sbb
mov
test
pop
cdq
fsin
cs
sub
outs
lock
mov
shl
push
dec
(bad)
lds
inc
sbb
gs
(bad)
(bad)
inc
sahf
jecxz
gs
ss
in
jmp
push
scas
or
(bad)
(bad)
push
fiadd
mov
push
(bad)
iret
imul
xchg
mov
cmp
(bad)
clc
leave
aaa
loopne
in
test
aas
adc
or
mov
jecxz
dec
lds
scas
sbb
test
jmp
mov
ss
pop
ss
sub
fbld
cmc
mov
rol
fcomip
fisttp
pusha
mov
jb
push
fwait
mov
out
adc
(bad)
inc
push
ret
call
mov
xchg
and
and
ds
mov
and
and
lds
pop
mov
xor
jle
int
idiv
(bad)
mov
sub
mov
mov
sbb
push
adc
lahf
xchg
popa
stos
imul
imul
inc
(bad)
cmovge
xor
loope
adc
enter
and
inc
xchg
(bad)
into
rcr
jmp
mov
pop
cmps
pop
xchg
(bad)
(bad)
jg
imul
mov
or
dec
aaa
cld
pop
jge
add
out
loopne
add
inc
pop
xchg
call
in
in
mov
imul
sar
cmp
sar
shr
hlt
or
jecxz
or
mov
cli
jmp
push
mov
add
jmp
inc
(bad)
fldenv
dec
mov
mov
dec
(bad)
adc
fwait
(bad)
jmp
cld
xlat
and
bound
ss
cli
cmps
aad
popf
pop
inc
nop
jmp
sub
pop
fdiv
jp
(bad)
adc
pop
(bad)
(bad)
fcomip
out
je
mov
sub
xor
ret
aaa
inc
pop
xchg
fwait
xlat
jae
xor
call
sbb
retf
mov
mov
retf
add
adc
xor
jg
inc
pop
outs
inc
fnclex
aad
pop
xor
jmp
test
in
pop
mov
dec
test
ret
pop
xchg
(bad)
(bad)
call
test
(bad)
int
hlt
inc
inc
shl
int
jg
mov
adc
inc
das
mov
(bad)
(bad)
jg
adc
leave
mov
rcl
ror
push
(bad)
jmp
add
ds
push
sbb
sbb
mov
loop
fidivr
push
pop
fist
cld
call
cmp
adc
pop
popf
ret
cdq
aam
pop
cli
mov
(bad)
call
pop
(bad)
cli
inc
adc
enter
(bad)
(bad)
(bad)
mov
push
js
or
or
mov
jbe
cmp
(bad)
(bad)
(bad)
dec
aas
mov
out
mov
std
adc
mov
stos
scas
push
scas
pusha
aad
cmp
std
and
dec
stos
cmp
test
pop
add
inc
mov
(bad)
(bad)
(bad)
(bad)
aas
mov
jne
cmps
cmc
add
push
pop
out
pop
test
loopne
xchg
pop
movs
jae
scas
fwait
or
dec
cmps
jmp
add
lock
xchg
inc
inc
push
xor
(bad)
(bad)
(bad)
mov
jmp
js
push
test
jbe
mov
and
into
outs
dec
bnd
adc
push
popf
push
sbb
pushw
jp
push
xchg
jno
mov
cmc
inc
rcr
jl
mov
jmp
sub
stos
lock
movs
jmp
data16
adc
xchg
push
add
adc
jmp
repnz
cwde
and
ss
mov
js
fadd
pop
jge
cld
(bad)
call
sub
mov
cmc
loop
mov
test
add
inc
cdq
and
ret
mov
pusha
fwait
int
xchg
mov
adc
push
(bad)
daa
mov
popa
sti
mov
pop
inc
or
out
and
pop
in
push
and
popa
pop
inc
std
(bad)
push
(bad)
fdiv
loopne
inc
fist
push
repz
lahf
stos
mul
test
mov
js
inc
es
test
or
cs
jle
dec
mov
sub
add
cmp
add
jg
mov
dec
jmp
sar
loopne
push
retfw
sbb
pop
cli
ds
push
std
es
xor
xchg
push
mov
and
iret
push
mov
cmp
out
imul
dec
inc
jle
(bad)
(bad)
(bad)
call
daa
sahf
dec
push
sub
add
sti
les
mov
(bad)
(bad)
push
mov
jg
sbb
(bad)
push
mov
(bad)
sbb
xor
mov
cmp
lahf
and
(bad)
push
cdq
inc
jmp
ss
and
ret
inc
add
imul
repnz
test
call
(bad)
les
cmp
daa
jmp
test
rcl
inc
push
and
jbe
pop
mov
icebp
dec
adc
pop
pop
and
mov
xchg
jo
daa
mov
dec
jp
lea
push
lea
call
adc
inc
rol
push
adc
fwait
jae
std
add
push
data16
sahf
inc
sub
fsubr
int
cmp
or
(bad)
mov
jl
mov
test
into
ins
add
(bad)
mov
fwait
or
mov
mov
(bad)
(bad)
dec
pop
rcl
and
push
jl
pop
sbb
adc
mov
sub
adc
sbb
adc
loope
pop
and
rcl
loop
lock
mov
sahf
mov
pop
hlt
cmp
dec
outs
sub
call
xchg
mov
push
stos
push
(bad)
js
std
dec
outs
(bad)
xlat
call
rcl
add
call
mov
ror
push
jno
mov
xchg
stos
jmp
jle
mov
jge
(bad)
(bad)
jmp
leave
cmp
push
xor
pop
jno
mov
and
add
call
lahf
cmp
(bad)
jmp
jle
test
push
inc
jecxz
gs
cwde
fwait
adc
(bad)
mov
sub
repnz
je
out
movs
xor
jnp
iret
mov
icebp
jl
add
dec
or
push
inc
mov
sar
cmp
fs
test
(bad)
(bad)
jmp
loopne
stc
in
dec
and
clc
in
cmps
scas
inc
jo
sub
int3
lods
inc
in
pop
imul
imul
(bad)
(bad)
(bad)
frstor
jp
in
inc
gs
mov
movs
pop
es
mul
inc
cs
push
or
adc
(bad)
call
out
jmp
sbb
in
fwait
xchg
add
xor
jmp
and
sub
cs
jmp
out
adc
push
xchg
aam
(bad)
or
push
(bad)
dec
cmp
mov
in
adc
(bad)
(bad)
(bad)
push
mov
xchg
xor
pop
mov
retf
cmp
(bad)
das
fnstenv
push
(bad)
(bad)
(bad)
(bad)
sti
popa
and
jo
pop
scas
out
mov
xchg
loopne
loop
adc
xchg
jno
call
adc
mov
adc
pop
in
fs
push
das
add
fxch
jmp
pop
inc
sub
mov
leave
hlt
imul
add
das
sahf
(bad)
(bad)
(bad)
call
add
ins
dec
fcomp
or
adc
sbb
xchg
clc
mov
push
add
inc
aad
sahf
retf
dec
pop
mov
xor
mov
aaa
adc
jmp
fisubr
(bad)
(bad)
jmp
mov
sub
xchg
mov
test
and
fucomip
dec
push
test
cmp
cld
dec
fidiv
mov
fs
push
sar
(bad)
(bad)
inc
sbb
pop
mov
pop
pop
sti
sbb
cmp
cmc
lea
pop
sub
(bad)
(bad)
(bad)
(bad)
jnp
xor
retf
adc
bound
repz
xor
mov
std
in
push
into
nop
or
(bad)
(bad)
(bad)
jmp
dec
sub
jmp
mov
ss
out
dec
mov
and
(bad)
jae
das
adc
fstp
sahf
jmp
pop
das
nop
test
adc
repz
rcl
xchg
push
dec
(bad)
jmp
js
jmp
sar
popf
or
mov
je
dec
(bad)
(bad)
call
add
xor
call
rol
add
enter
rol
mov
(bad)
(bad)
(bad)
call
push
mov
sbb
jo
idiv
mov
scas
cld
or
add
imul
jp
add
jb
test
xchg
hlt
mov
cmp
sub
xlat
mov
mov
out
cmps
movs
call
repz
scas
test
sbb
add
dec
cli
jge
push
mov
rol
in
(bad)
(bad)
inc
mov
sub
add
cmp
sub
sbb
xchg
mov
adc
retf
movs
mov
sub
bound
pop
in
movs
or
mov
test
push
call
xchg
push
retf
in
pop
hlt
(bad)
call
stos
out
push
dec
lds
cmp
mov
out
and
push
nop
mov
dec
iret
push
stos
adc
enter
sub
jmp
adc
inc
adc
push
add
push
mov
fistp
(bad)
in
(bad)
(bad)
dec
jg
ret
test
ins
and
call
ds
es
push
sub
fmul
fmul
(bad)
(bad)
jmp
sbb
ret
push
or
mov
xor
stos
js
fst
mov
fisttp
loopne
popa
pop
push
pop
adc
dec
(bad)
lods
sub
aam
mov
ja
call
pushf
jne
loop
sub
popa
(bad)
sub
dec
hlt
pop
into
gs
out
call
cld
(bad)
jbe
stc
daa
mov
hlt
stc
(bad)
jg
or
(bad)
int3
or
cli
jle
mov
(bad)
(bad)
(bad)
(bad)
cmp
inc
inc
and
pusha
mov
sti
lds
(bad)
repz
test
sbb
inc
mov
pop
xchg
outs
test
xor
mov
pop
jbe
sub
jnp
mov
add
cli
call
ret
lds
inc
dec
bound
je
dec
test
jbe
sti
outs
imul
(bad)
fbld
int3
call
daa
lods
(bad)
or
add
(bad)
(bad)
mov
push
push
push
clc
mov
(bad)
or
test
out
xor
pop
cmp
(bad)
(bad)
push
sti
cs
cli
cmp
aad
movs
adc
repz
repnz
push
inc
hlt
test
push
into
jp
mov
(bad)
aam
or
inc
neg
mov
push
push
inc
ins
mov
mov
fcomp
cmp
dec
mov
(bad)
(bad)
jmp
fcom
jae
test
push
jo
(bad)
leave
cdq
in
sub
sub
mov
fucomi
ja
xor
ret
sbb
loop
or
out
xor
sub
pop
test
jecxz
enter
(bad)
jmp
gs
jecxz
cmp
inc
pop
aad
push
mov
xor
mov
lods
xchg
cld
cmp
daa
jnp
ins
xor
push
mov
inc
mov
mov
loopne
(bad)
fcomip
jmp
sub
inc
int3
or
add
jne
mov
icebp
jmp
pop
das
repnz
mov
adc
popa
movs
dec
(bad)
cmp
test
and
lds
(bad)
jmp
in
or
sbb
push
mov
(bad)
(bad)
call
mov
iret
stos
push
cmp
adc
out
push
dec
gs
icebp
jmp
and
out
repnz
js
cmc
mov
pop
sbb
(bad)
push
push
sbb
test
pop
sub
pop
push
inc
cmp
pop
sbb
adc
jecxz
mov
adc
test
xchg
rcl
jo
(bad)
(bad)
call
add
sbb
fs
js
mov
ret
pop
aas
sub
movs
nop
(bad)
nop
std
(bad)
jg
adc
es
inc
gs
jl
pop
sbb
cli
inc
call
adc
out
push
push
nop
adc
push
call
inc
sahf
shl
(bad)
jmp
mov
rcr
sub
sbb
rcr
dec
daa
(bad)
(bad)
(bad)
jmp
mov
xlat
xchg
inc
dec
ret
dec
imul
mov
icebp
pop
mov
retf
cs
dec
(bad)
cmp
mov
sub
out
(bad)
fs
fmul
mov
push
sbb
push
and
mov
dec
stos
int
mov
ret
imul
inc
movs
outs
and
loope
cmp
cmp
out
cmps
xor
xor
test
pop
push
or
mov
add
adc
int3
or
outs
mov
push
mov
and
lds
fcomip
je
add
sub
mov
inc
cmp
and
shl
scas
std
mov
loope
inc
mov
mov
cmp
sbb
mov
(bad)
(bad)
(bad)
cmp
aas
test
lahf
fmul
rcr
mov
jbe
das
fs
cmps
xor
ja
fldpi
ret
lock
shl
pop
jmp
sbb
hlt
pop
lahf
or
jo
inc
pusha
pop
jmp
add
xchg
imul
xchg
mov
inc
cld
(bad)
sti
jmp
add
scas
int3
xor
dec
and
repz
push
pop
ss
gs
cmps
mul
cmps
pop
out
ret
test
call
loopne
ret
mov
push
pop
push
xchg
(bad)
das
fisubr
dec
cs
and
dec
outs
scas
mov
adc
add
mov
popa
movs
call
out
xchg
and
sbb
aam
or
adc
(bad)
jmp
setne
shl
sub
cmp
inc
cld
jmp
sub
pop
ins
push
cmp
cmp
int
mov
sar
cmp
je
retf
(bad)
(bad)
out
repnz
dec
pusha
dec
add
cmps
lods
mov
popa
push
call
mov
and
loopne
rcr
add
(bad)
jmp
push
lods
fisttp
loop
jmp
imul
pop
or
(bad)
jmp
leave
test
jmp
js
sub
test
loope
inc
sti
clc
(bad)
mov
imul
adc
and
movs
popa
jb
adc
fimul
pusha
aam
push
rcr
test
lock
jmp
(bad)
in
push
ins
mov
lods
pop
pop
pop
test
xchg
xchg
dec
(bad)
sub
add
add
dec
mov
mov
inc
outs
mov
(bad)
(bad)
jmp
(bad)
test
sahf
cs
(bad)
and
xchg
fsubr
mov
adc
(bad)
mov
lods
fs
adc
jo
lods
xchg
adc
xchg
fld
movs
add
test
inc
dec
cwde
loope
stos
xchg
rol
pop
stc
and
push
or
jg
sbb
dec
inc
(bad)
(bad)
(bad)
(bad)
js
cmp
bound
js
jl
hlt
push
test
push
cmc
and
xchg
(bad)
int3
(bad)
(bad)
(bad)
call
or
adc
sub
test
or
xchg
mov
push
mov
arpl
jno
(bad)
(bad)
(bad)
jmp
pop
xchg
retf
push
popf
push
fcmovnbe
sub
xlat
(bad)
outs
add
dec
(bad)
(bad)
(bad)
push
iret
inc
imul
xlat
aas
dec
cld
xchg
sbb
fist
xchg
rcr
jne
adc
rcl
cmp
std
in
imul
jnp
mov
push
xor
out
imul
movs
inc
call
jmp
test
xor
add
aad
mov
(bad)
mov
mov
data16
rep
pop
mov
aaa
adc
sub
dec
jl
daa
push
fisub
xchg
(bad)
(bad)
jmp
fld
mov
pop
scas
shl
test
jge
pop
xor
out
xchg
pop
dec
bound
xor
jns
icebp
(bad)
(bad)
out
je
pop
sar
sub
mov
mov
stc
ins
push
inc
das
add
rcl
xor
pop
xor
and
icebp
dec
add
(bad)
(bad)
jg
inc
xchg
jge
out
push
mov
(bad)
adc
sub
mov
pusha
jo
pop
cmp
dec
outs
pop
jbe
fcmovne
jns
add
in
jmp
mov
outs
test
sbb
bound
mov
(bad)
int
call
(bad)
(bad)
(bad)
fimul
lock
jge
sbb
mov
mov
mov
cmp
inc
sub
inc
cwde
nop
dec
lds
clc
(bad)
(bad)
(bad)
(bad)
ret
pusha
mov
dec
push
xchg
cmp
adc
push
cld
sbb
(bad)
(bad)
out
scas
pop
fild
out
clc
mov
push
dec
fadd
xor
and
jmp
ja
fild
xor
or
mov
outs
aas
cli
or
std
jmp
cmp
lods
xlat
jb
(bad)
push
push
push
and
sub
(bad)
mov
jg
mov
jnp
pop
dec
(bad)
(bad)
push
inc
cmp
das
pop
sub
in
sti
mov
(bad)
cmp
jl
repnz
in
jmp
cmp
or
ja
repnz
mov
lods
lods
and
and
ja
(bad)
dec
push
sub
jb
dec
push
leave
adc
and
retf
test
jo
fnstsw
aaa
popa
cld
jmp
xor
shl
cmps
push
(bad)
(bad)
(bad)
jg
push
stc
mov
fdiv
push
mov
aam
dec
ror
pop
repnz
push
inc
or
sar
dec
push
cmps
and
daa
cmp
icebp
ds
(bad)
pop
mov
movs
sti
(bad)
jmp
test
adc
mov
dec
data16
int3
(bad)
addr16
mov
(bad)
jmp
shl
and
aad
mov
cwde
dec
xor
mov
out
retf
cwde
enter
add
mov
dec
jge
test
dec
inc
mov
dec
mov
(bad)
(bad)
(bad)
cmp
jb
out
lock
call
jmp
ins
rol
imul
inc
rol
sub
inc
mov
fld
iret
dec
inc
dec
xor
mov
mov
cdq
retf
sbb
sub
or
lock
inc
hlt
(bad)
(bad)
jmp
dec
xchg
sbb
or
call
mov
xlat
cmps
jo
xchg
dec
add
cmps
push
xor
pop
sbb
or
fnstenv
or
jmp
xor
imul
(bad)
(bad)
(bad)
(bad)
push
and
cmp
and
out
pop
xchg
mov
mov
mov
in
push
push
mov
mov
das
(bad)
cmovb
xor
xor
mov
bts
sub
(bad)
(bad)
inc
in
add
adc
adc
fdiv
std
mov
mov
adc
mov
sar
push
cld
(bad)
dec
shl
cli
stc
ret
iret
adc
add
test
xchg
mov
mov
(bad)
(bad)
dec
jp
jg
xchg
int3
inc
xor
and
mov
and
(bad)
xor
mov
adc
test
sbb
mov
mov
pushf
sbb
in
in
(bad)
out
xor
fwait
dec
in
in
and
mov
push
inc
les
xchg
or
ins
push
retf
int
mov
outs
ret
out
jmp
cli
sbb
jmp
inc
fild
mov
xchg
mov
rcl
(bad)
jmp
push
push
popa
lock
mov
(bad)
dec
das
adc
ret
enter
pushf
cmp
cmp
fnstenv
lds
xor
cli
loop
inc
inc
test
push
and
imul
inc
jmp
mov
cs
mov
adc
ds
das
pop
mov
pop
add
das
adc
ja
cmp
sti
push
xchg
mov
mov
dec
inc
es
fs
cld
retf
into
std
push
std
sub
(bad)
(bad)
call
push
mov
(bad)
leave
and
xor
inc
pop
or
mov
(bad)
retf
clc
(bad)
(bad)
jns
cmp
pusha
adc
mov
dec
push
inc
enter
retf
(bad)
(bad)
mov
and
call
dec
retf
stos
and
jno
push
bound
(bad)
inc
jae
cmp
push
daa
jp
dec
mov
out
dec
(bad)
(bad)
jmp
mov
and
jo
bound
mov
into
pusha
(bad)
(bad)
(bad)
inc
mov
pusha
test
adc
repz
pop
inc
ds
push
or
push
loopne
stos
(bad)
and
mov
cmc
cmps
iret
cmp
loop
jge
push
cmps
pop
shl
mov
bound
sbb
fmul
aaa
pop
push
sub
and
cmp
or
mov
mov
jg
xchg
fdivrp
(bad)
(bad)
call
mov
repnz
rcr
or
cs
adc
add
(bad)
jmp
adc
mov
xchg
mov
mov
push
sub
(bad)
(bad)
mov
pop
pop
mov
adc
std
enter
push
mov
repnz
mov
cmp
(bad)
(bad)
jmp
mov
add
stos
(bad)
dec
mov
add
scas
stc
xchg
xor
xchg
shr
sar
icebp
cli
shl
dec
inc
sub
mov
fs
pop
push
sbb
xchg
aam
in
pop
pushf
mov
imul
xchg
leave
cmps
shr
jae
in
add
shl
imul
xchg
shl
ds
jg
inc
clc
ret
ret
xchg
aaa
sahf
mov
outs
inc
mov
repz
pop
int
sub
das
and
mov
fsqrt
dec
pop
test
cs
mov
lods
jmp
push
mov
jmp
pusha
jl
dec
cmc
cmc
inc
(bad)
call
xchg
ss
push
(bad)
(bad)
(bad)
(bad)
clc
xchg
dec
(bad)
dec
jae
in
shr
stc
pop
and
xor
cmp
sub
jle
pop
sbb
push
shl
inc
or
push
mov
xchg
cmp
mov
test
call
push
dec
rep
loopne
jo
adc
test
mov
and
data16
xchg
std
inc
jno
icebp
hlt
(bad)
(bad)
call
retf
push
dec
mov
stos
inc
xor
mov
adc
(bad)
aam
add
std
cli
call
or
lods
push
inc
jg
jecxz
jnp
(bad)
mov
out
or
or
dec
int3
lods
sbb
dec
int3
retf
adc
xchg
mov
lds
pop
jmp
pop
arpl
cmp
xor
mov
int
cmp
(bad)
mov
stos
xor
je
icebp
mov
rcr
gs
daa
inc
inc
sub
push
and
in
jle
adc
and
add
or
push
(bad)
push
pop
push
push
scas
icebp
mov
call
cld
(bad)
fcmovu
add
icebp
and
(bad)
mov
(bad)
adc
(bad)
jo
call
(bad)
mov
jle
sub
aad
int3
pop
mov
cs
shl
outs
cli
push
daa
fistp
(bad)
xchg
mov
cmc
ins
push
cmp
mov
cmp
or
(bad)
(bad)
(bad)
inc
mov
adc
adc
push
mov
push
stos
mov
mov
retf
push
(bad)
(bad)
(bad)
(bad)
fadd
lds
cwde
or
mov
push
pop
fstp
sub
jge
sbb
mov
mov
test
xor
xchg
les
push
sbb
pop
inc
add
pusha
div
aam
rcr
rcl
scas
push
mov
pop
call
sub
pop
push
pushf
xchg
mov
xor
in
or
mov
push
xchg
jl
out
icebp
fisttp
cmps
(bad)
call
sar
mov
movs
hlt
in
fild
pop
fcom
lea
(bad)
inc
out
xchg
gs
mov
cmp
das
pop
pop
adc
xor
jmp
xchg
or
clc
cli
enter
dec
nop
nop
mov
(bad)
(bad)
call
sar
mov
out
jmp
push
dec
jmp
push
daa
push
fsin
aam
mov
(bad)
mov
xor
aaa
popf
jecxz
cmp
loope
pop
mov
(bad)
jmp
test
je
and
test
fisub
pop
fcmovb
in
mov
push
dec
scas
mov
cmps
call
call
(bad)
jmp
out
sub
mov
(bad)
push
stc
in
test
sbb
loop
(bad)
push
xchg
sub
cli
mov
call
sbb
sbb
call
add
xchg
subps
xor
adc
je
push
mov
adc
(bad)
bound
push
dec
and
sbb
iret
adc
movs
xor
std
loop
hlt
push
idiv
das
add
dec
sbb
cmp
imul
(bad)
(bad)
mov
movs
sbb
add
sbb
jmp
fnstsw
xchg
cmp
xchg
icebp
push
in
mov
and
scas
ror
(bad)
(bad)
(bad)
inc
frstor
loope
jmp
sub
hlt
jnp
cmps
push
dec
rcr
test
(bad)
call
push
call
cmp
mov
call
jne
dec
adc
cmps
mov
add
mov
(bad)
push
xor
loop
and
mov
sbb
fimul
push
adc
jp
sub
cli
cld
mov
lods
std
in
add
(bad)
addr16
jbe
iret
stos
fldcw
movs
movs
ficom
add
xchg
xor
ror
push
(bad)
fist
push
dec
jle
and
ss
aad
xor
adc
(bad)
je
jb
test
cld
or
mov
ss
(bad)
(bad)
jg
jb
adc
call
sub
jne
in
icebp
(bad)
call
movs
out
inc
mov
ret
jmp
push
in
sahf
jle
cli
cli
pop
dec
push
jmp
in
imul
cmp
inc
inc
or
(bad)
mov
lds
ins
and
(bad)
dec
mov
dec
add
xchg
fld
jg
push
mov
fdivr
inc
cmp
dec
(bad)
(bad)
(bad)
(bad)
es
jp
js
aas
je
ror
outs
push
adc
jae
sub
sub
(bad)
(bad)
(bad)
call
pop
xchg
retf
es
xchg
in
cmp
lea
(bad)
push
ins
call
(bad)
(bad)
jmp
jge
sbb
adc
arpl
bound
xchg
dec
sahf
mov
movs
bnd
(bad)
jmp
(bad)
scas
clc
push
lea
ss
cmp
iret
cdq
jp
call
sbb
retf
in
mov
mov
(bad)
and
rcl
and
fld
sahf
(bad)
jg
call
leave
inc
push
test
lfs
popf
xchg
jmp
xchg
mov
mov
inc
call
jp
je
dec
je
sar
aad
(bad)
sbb
mov
and
or
jno
cmp
jmp
inc
cli
sub
pop
jmp
jbe
xor
(bad)
(bad)
dec
dec
aaa
xchg
dec
mov
js
nop
inc
pop
retf
ret
dec
imul
adc
and
(bad)
cmp
or
out
mov
(bad)
inc
(bad)
ja
fs
cs
or
or
xor
in
xchg
nop
(bad)
(bad)
(bad)
(bad)
in
ss
js
sar
rcl
addr16
call
jns
jns
cmp
cmp
mov
(bad)
(bad)
(bad)
(bad)
jge
call
adc
enter
mov
add
in
fistp
mov
les
ret
in
adc
bound
(bad)
(bad)
jmp
lahf
inc
pop
dec
sbb
xchg
aas
cmp
push
pushf
mov
(bad)
mov
or
mov
pop
adc
push
or
lods
es
(bad)
jg
test
cmp
and
bound
inc
and
mov
jecxz
(bad)
in
pushf
push
dec
jno
sti
cmp
sub
out
pop
test
(bad)
lea
(bad)
(bad)
cmp
fnstsw
in
ds
int
mov
sub
sbb
outs
jp
push
xlat
dec
xchg
dec
xchg
(bad)
jg
movs
daa
and
int
lock
out
inc
(bad)
cli
stc
cmp
jecxz
(bad)
(bad)
(bad)
mov
mov
das
ds
cmp
in
je
dec
mov
xor
jge
inc
das
lock
jno
xchg
push
cmp
dec
stos
(bad)
(bad)
(bad)
jge
xchg
call
adc
movs
add
es
xor
jnp
dec
jnp
mov
repz
fistp
nop
call
mov
pop
jg
lock
inc
(bad)
in
push
cmp
ret
inc
pushf
aam
into
ins
or
xchg
sub
repnz
pop
jns
ret
mov
aaa
sbb
addr16
cmp
adc
clc
mov
rol
outs
jmp
mov
fdivr
(bad)
(bad)
call
pop
sar
popa
jecxz
dec
es
rcr
scas
or
lds
mov
(bad)
(bad)
sti
fxch
shl
in
mov
or
(bad)
(bad)
jmp
xor
xor
mov
jl
sbb
mov
retf
aaa
add
(bad)
call
jae
or
lods
xchg
mov
and
inc
stc
leave
(bad)
(bad)
jg
dec
sbb
inc
shl
out
call
(bad)
iret
jb
sbb
mov
(bad)
(bad)
call
cs
pop
inc
push
icebp
xor
pop
adc
(bad)
(bad)
mov
xchg
data16
or
aad
iret
loop
sti
mov
cmp
inc
(bad)
(bad)
(bad)
(bad)
sti
stos
and
(bad)
xor
mov
push
stos
je
(bad)
push
les
pop
cmp
fild
inc
fs
(bad)
daa
push
fiadd
push
cdq
retf
sub
jae
out
xor
lock
(bad)
inc
lods
rcr
add
jge
mov
pop
xlat
mov
(bad)
call
push
inc
dec
pop
xchg
retf
fcmove
xchg
adc
ins
aaa
(bad)
in
sbb
push
jne
(bad)
(bad)
(bad)
jmp
int3
scas
inc
or
pop
ss
in
pop
movs
fmul
dec
adc
xchg
push
add
addr16
dec
dec
mov
dec
jecxz
lar
and
inc
adc
iret
dec
retf
rcr
sbb
(bad)
inc
pop
ja
cli
or
sub
sbb
(bad)
sbb
(bad)
(bad)
(bad)
dec
cmps
or
xchg
int3
pop
sub
cmp
push
xchg
inc
dec
push
xchg
lds
jg
test
and
(bad)
jmp
outs
movs
pop
imul
into
sti
shr
cmp
pop
cmp
mov
and
(bad)
(bad)
(bad)
call
mov
aas
adc
stos
loope
mov
mov
cwde
cmps
dec
push
shl
adc
sub
inc
jg
jo
addr16
xchg
or
loopne
jp
call
std
xchg
mov
inc
cmps
mov
jo
xchg
mov
adc
and
(bad)
dec
xor
xor
mov
mov
pop
loop
add
cdq
mov
inc
mul
pushf
dec
dec
stos
fchs
add
dec
jmp
push
dec
push
fld
idiv
call
fimul
fwait
mov
(bad)
sub
mov
(bad)
js
xlat
(bad)
dec
cwde
inc
mov
and
movs
pop
inc
sub
add
(bad)
(bad)
(bad)
push
movs
out
std
mov
dec
and
addr16
jb
sar
lea
lock
push
cli
or
pop
icebp
(bad)
call
rol
cmps
adc
inc
sbb
xchg
outs
mov
xor
ss
(bad)
jmp
stos
mov
rcl
sbb
jmp
cld
jmp
scas
(bad)
(bad)
jmp
jmp
loop
dec
cmps
xchg
jno
ja
ins
(bad)
dec
dec
fwait
pop
je
outs
jp
mov
aad
add
xchg
and
movs
je
leave
(bad)
(bad)
jmp
pop
test
(bad)
mov
shl
(bad)
fcmovne
jo
pop
pop
in
shl
jmp
sti
xchg
popa
push
rcr
(bad)
dec
das
mov
sub
and
mov
out
sbb
xor
pop
jnp
jmp
cld
jmp
add
je
or
das
mov
ins
out
hlt
xchg
(bad)
(bad)
jmp
ins
jp
xchg
loopne
sub
enter
test
pop
repnz
and
call
add
sub
mov
cld
jp
push
(bad)
call
cld
dec
ja
je
rep
fs
pusha
mov
xchg
pop
fbstp
jp
scas
movs
cmp
(bad)
(bad)
call
out
jecxz
(bad)
and
pop
loop
pop
pop
shl
sbb
sbb
and
(bad)
dec
mov
mov
sub
lea
(bad)
(bad)
mov
xchg
xor
aas
test
loopne
into
push
and
addr16
fnstenv
dec
add
stos
xor
adc
daa
es
mov
loop
push
push
sbb
cmp
xchg
std
(bad)
(bad)
push
cmp
out
dec
sbb
call
xor
cmp
xor
pop
pop
jp
push
xchg
(bad)
(bad)
mov
pop
mov
push
iret
out
test
cwde
test
jmp
push
push
clc
(bad)
(bad)
cmp
sbb
add
stc
bound
(bad)
(bad)
jmp
mov
dec
test
aam
dec
addr16
fs
xchg
and
leave
jae
pusha
sub
or
jg
outs
sub
adc
xchg
mov
add
xchg
inc
jl
mov
stc
xchg
icebp
(bad)
(bad)
jg
jae
cmp
icebp
enter
ja
jg
test
lock
adc
add
fistp
ds
mov
cli
push
sbb
fs
(bad)
(bad)
dec
pop
pop
ja
inc
jecxz
or
dec
mov
cmp
lahf
xchg
fsubr
jge
imul
ja
or
aas
lahf
cdq
enter
(bad)
(bad)
(bad)
dec
push
inc
stos
hlt
mov
or
jno
int3
lea
and
adc
(bad)
(bad)
(bad)
inc
or
test
(bad)
pusha
mov
sub
add
daa
in
xchg
stos
(bad)
scas
jg
sub
dec
sub
pop
outs
aaa
mov
(bad)
ss
std
rcl
fbld
fwait
pusha
lahf
popa
jno
hlt
push
sub
call
loop
ss
cmc
ds
mov
or
xor
fcmovu
xchg
(bad)
(bad)
call
push
add
sbb
sub
iret
scas
and
inc
adc
sti
(bad)
(bad)
call
xchg
mov
mov
aaa
xchg
mov
loop
and
cli
sub
jle
add
mov
(bad)
(bad)
jg
mov
inc
jmp
clts
sahf
clc
(bad)
push
inc
clc
cli
fist
je
fsub
mov
in
(bad)
jmp
es
popf
xchg
lock
xchg
xchg
xor
adc
mov
add
pushw
jl
dec
clc
std
(bad)
xor
and
sbb
aad
cmps
cs
ja
repnz
mov
int3
es
cli
(bad)
(bad)
jmp
cmc
mov
xchg
in
jg
loopne
ret
pop
(bad)
jne
es
mov
dec
fidiv
loopne
in
pop
add
jno
xchg
int
mov
jmp
sbb
shl
xchg
push
push
mov
call
nop
xor
in
es
jb
(bad)
(bad)
dec
pop
push
mov
push
push
dec
aaa
std
push
pop
call
aam
ss
or
mov
aaa
dec
(bad)
xor
pop
sahf
push
adc
imul
ret
or
mov
dec
out
inc
pop
in
dec
test
mov
movs
test
ret
mov
out
fisubr
jg
(bad)
dec
jge
xlat
sub
sub
shl
test
es
cli
mov
jmp
js
(bad)
int3
(bad)
(bad)
(bad)
dec
ds
(bad)
sar
std
sbb
int3
jmp
push
aad
mov
jmp
dec
movs
test
mov
(bad)
call
ins
xchg
movs
adc
sbb
test
lock
jmp
xor
(bad)
mov
stos
dec
mov
lock
daa
jno
loopne
fdivr
int
ins
fmul
scas
or
(bad)
(bad)
(bad)
push
dec
jg
jno
push
cmc
cs
mov
sub
movs
inc
and
std
pop
stc
or
(bad)
call
sbb
lds
fisub
call
sar
(bad)
jmp
sbb
sbb
and
push
test
push
test
cli
push
jl
xor
in
or
(bad)
call
mov
or
idiv
mov
xchg
inc
(bad)
call
fnstenv
push
arpl
jne
enter
leave
test
mov
popa
mov
and
int3
fisub
mov
into
enter
and
(bad)
dec
test
pop
sbb
jecxz
aas
adc
push
inc
mov
in
(bad)
sub
imul
test
adc
ds
popa
pop
std
(bad)
jg
cmp
call
pop
in
test
mov
es
pop
cmp
stos
adc
ss
(bad)
jg
mov
mov
cmp
cmp
scas
mov
aaa
mov
ficomp
inc
pop
mov
retf
iret
shr
les
sub
ret
add
xchg
mov
cmp
pcmpeqw
jg
(bad)
mov
cdq
jecxz
adc
mov
sar
jae
push
fprem
(bad)
dec
pusha
push
icebp
imul
pop
mov
fbld
add
(bad)
dec
out
lea
imul
inc
inc
jno
xchg
mov
adc
or
adc
call
sub
mov
mov
sub
sbb
arpl
es
or
jg
pop
jb
jl
data16
adc
cmp
add
or
movs
push
cmps
or
(bad)
(bad)
(bad)
jg
jo
or
mov
std
jo
cld
cwde
popf
sbb
jo
and
and
mov
jecxz
push
lods
sub
(bad)
mov
dec
push
jno
mov
mov
(bad)
jmp
push
cdq
cs
adc
lods
ss
fwait
jb
(bad)
dec
fmul
lahf
and
(bad)
xor
add
arpl
push
or
out
lock
cmp
push
mov
cmc
jmp
mov
xor
stos
inc
ds
add
(bad)
fisttp
or
scas
fwait
idiv
fist
jp
mov
ins
es
xchg
iret
add
jno
(bad)
(bad)
dec
stos
mov
ss
jg
test
mov
and
jle
fst
out
mov
xchg
xchg
test
inc
mov
fisttp
adc
dec
xchg
div
inc
mov
(bad)
(bad)
jmp
dec
test
sub
cmp
fild
or
jmp
(bad)
mov
clc
aam
pop
and
out
mov
outs
sti
(bad)
gs
push
fiadd
and
loop
test
or
outs
mov
ror
loope
pop
out
daa
popf
dec
(bad)
(bad)
(bad)
out
(bad)
ja
or
jmp
sub
xlat
(bad)
dec
push
mov
mov
xchg
sar
(bad)
dec
dec
push
js
pslld
loopne
inc
inc
push
or
push
stos
or
daa
mov
shl
daa
cmp
adc
leave
xchg
(bad)
(bad)
(bad)
push
jnp
repz
xlat
inc
fwait
ins
add
jbe
inc
xor
cmps
jae
adc
cmc
in
push
(bad)
(bad)
jmp
gs
in
cld
xor
sub
add
mov
jno
ds
pop
cmp
clc
movs
cmp
inc
pop
push
inc
xor
pop
cli
cmps
(bad)
cmp
(bad)
aas
stc
mov
mov
ret
xor
add
mov
jb
daa
clc
(bad)
(bad)
inc
ins
rcr
fstp
lds
lods
xchg
in
xchg
es
mov
pop
add
leave
icebp
(bad)
in
push
aam
mov
xchg
mov
ins
xor
cmp
jae
jb
mov
loop
jg
aaa
adc
lods
jo
sub
inc
xchg
call
mov
sbb
(bad)
stc
xchg
(bad)
addr16
dec
(bad)
fdivr
inc
pushf
aam
mov
pop
ins
mov
pop
stc
mov
sub
fild
movs
ins
jl
fisttp
xchg
jo
dec
push
movs
mov
lods
inc
jp
or
mov
hlt
leave
mov
call
into
bound
add
retf
mov
sbb
mov
(bad)
push
enter
out
add
jns
leave
lock
lea
out
fwait
mov
call
mov
dec
movs
test
test
mul
sub
xor
(bad)
dec
cmp
(bad)
(bad)
dec
call
mov
pop
int
out
call
mov
out
pop
icebp
lea
(bad)
fcomip
push
pusha
pop
jne
aam
ret
(bad)
loopne
inc
pop
dec
pusha
push
gs
(bad)
(bad)
(bad)
inc
sbb
std
lods
cwde
mov
pop
imul
mov
xor
pop
push
idiv
jne
inc
js
sbb
xchg
mov
and
scas
rol
sub
xchg
(bad)
(bad)
(bad)
(bad)
dec
mov
sub
sahf
cwde
sbb
mov
jo
mov
adc
jns
xchg
ss
(bad)
(bad)
(bad)
jge
jbe
jle
jle
repz
mov
push
popf
leave
mov
xor
(bad)
fild
retf
sar
sbb
(bad)
loope
out
addr16
ds
imul
(bad)
(bad)
mov
adc
or
fcmovu
pop
or
jns
(bad)
jecxz
iret
cmp
addr16
mov
xchg
shl
pop
loopne
lock
push
pop
mov
jg
or
and
call
rcr
jmp
and
jb
dec
je
loop
(bad)
(bad)
call
leave
add
dec
xor
(bad)
xchg
ror
mov
cmc
or
cmp
mov
in
xchg
push
movs
(bad)
jmp
je
add
xor
mov
ja
scas
or
mov
push
sub
inc
and
in
mov
lock
(bad)
(bad)
call
xor
xchg
retf
pushf
(bad)
cs
sbb
sahf
xor
xchg
icebp
das
clc
fucomp
pop
iret
stos
pop
jns
push
stos
rol
int
arpl
mov
adc
sub
dec
push
nop
adc
xchg
call
ret
cmova
xor
sbb
or
pop
clc
fbld
call
pop
cdq
dec
pusha
cwde
jb
or
fbld
pop
push
cmp
adc
repz
loop
mov
(bad)
jmp
test
ins
mov
js
pop
jnp
cdq
push
fbstp
test
and
shl
add
(bad)
(bad)
jmp
sub
sub
aas
jge
jecxz
les
imul
call
or
jmp
inc
test
xchg
ror
(bad)
(bad)
call
clc
jb
lea
dec
ret
out
mov
mov
push
rcr
dec
js
pop
out
dec
mov
(bad)
(bad)
fcomip
(bad)
fdiv
daa
pushf
mov
xchg
dec
scas
jo
dec
outs
clc
mov
fcomip
(bad)
out
pop
sbb
xchg
(bad)
rcl
mov
cld
rol
sar
ja
sti
cmps
and
out
add
icebp
call
sbb
daa
inc
pop
jmp
jmp
jae
cdq
or
aad
nop
(bad)
loopne
jl
cmc
cbw
jge
mov
je
rol
(bad)
js
cld
(bad)
(bad)
(bad)
push
push
test
fmul
dec
dec
mov
inc
mov
mov
jle
or
call
(bad)
push
stc
mov
xchg
rcl
nop
data16
jmp
js
pop
add
call
cdq
or
sub
mov
(bad)
(bad)
call
loopne
lea
mov
ror
arpl
xor
fbstp
xchg
jno
popa
sahf
(bad)
dec
mov
sbb
outs
ret
jb
and
in
(bad)
jmp
lods
mov
push
sbb
inc
mov
into
sub
adc
cmps
or
sbb
(bad)
dec
cmp
xor
les
call
adc
sub
xor
in
nop
inc
mov
retf
and
cmp
mov
sbb
dec
int
inc
mov
(bad)
jg
inc
movs
xchg
(bad)
inc
enter
sub
(bad)
pop
inc
scas
jns
es
sti
jle
(bad)
(bad)
(bad)
call
outs
xlat
mov
and
cdq
scas
xchg
fidiv
and
in
cmp
dec
cli
push
jne
ret
lods
sbb
ret
hlt
push
mov
pusha
jge
rol
cmp
das
sbb
dec
cmp
add
je
jae
cmp
rol
adc
in
or
lock
push
and
dec
outs
popa
clc
retf
mov
cwde
mov
outs
clc
jmp
loop
push
pop
sar
adc
(bad)
jmp
mov
das
retf
cli
mov
out
jne
pop
lods
add
nop
xchg
xchg
jb
(bad)
(bad)
(bad)
call
leave
daa
sub
sbb
inc
std
xor
jnp
cmc
cwde
jecxz
jns
mov
movs
push
xor
fsub
inc
retf
push
inc
jg
sub
(bad)
xlat
jno
add
lea
inc
inc
sbb
and
movs
shr
mov
xor
and
xchg
jmp
inc
inc
bound
sbb
iret
enter
mov
(bad)
dec
mov
fdiv
xchg
es
jb
jmp
(bad)
jmp
add
sub
shrd
push
call
add
inc
fmul
lods
jb
(bad)
cmc
dec
aaa
jl
neg
gs
add
enter
or
data16
(bad)
mov
call
and
sub
test
mov
rol
mov
std
(bad)
inc
mov
imul
out
or
idiv
aas
add
(bad)
jmp
xor
mov
pushf
pop
add
and
jg
sub
cmps
cmps
dec
jmp
dec
out
fidiv
dec
push
div
mov
(bad)
call
push
cld
push
add
and
push
sub
and
mov
ss
(bad)
(bad)
(bad)
inc
mov
imul
call
arpl
pop
xchg
lods
pop
mov
push
(bad)
(bad)
(bad)
push
cmp
fldenv
mov
pop
(bad)
and
inc
xchg
cmp
mov
ins
(bad)
(bad)
(bad)
dec
pop
cwde
mov
or
pop
and
test
push
sub
mov
out
inc
sub
sbb
xor
inc
pop
(bad)
(bad)
(bad)
(bad)
jge
push
mov
sbb
mov
pop
imul
mov
sahf
and
sub
or
inc
daa
push
aad
dec
rcl
xchg
data16
das
in
dec
(bad)
jp
imul
or
addr16
leave
add
test
pop
adc
sub
in
lods
adc
or
pop
push
aad
xor
dec
bound
mov
ds
(bad)
(bad)
inc
lea
cld
pop
das
xchg
mov
cmp
or
pop
leave
lods
aaa
shr
and
loop
out
and
jl
pop
jnp
jb
shr
in
push
sar
(bad)
mov
mov
call
sub
inc
fistp
or
das
jb
cli
(bad)
lahf
loop
dec
jge
or
mov
scas
push
adc
(bad)
mov
and
cmp
rcr
push
jl
sbb
or
gs
push
(bad)
mov
mov
sbb
dec
(bad)
adc
bnd
mov
jmp
jmp
(bad)
stc
in
test
inc
mov
or
test
pusha
xchg
jne
push
(bad)
(bad)
(bad)
(bad)
out
bsf
cwde
mov
mov
test
sbb
pop
inc
sub
jg
xor
repnz
or
or
out
and
(bad)
(bad)
(bad)
jmp
sub
xlat
xchg
lds
or
retf
fadd
aad
daa
dec
in
in
sub
add
(bad)
(bad)
jmp
adc
loop
mov
xchg
(bad)
inc
mov
sbb
ficom
jmp
add
add
pop
push
adc
inc
das
jbe
ds
(bad)
cmp
outs
inc
pusha
xlat
arpl
jg
adc
out
enter
call
mov
out
cwde
pop
dec
add
movs
jne
loop
(bad)
(bad)
mov
mov
mov
icebp
in
mov
jg
call
iret
in
push
sub
add
add
in
sbb
cs
in
gs
push
add
mov
cs
clc
(bad)
pop
arpl
(bad)
call
jge
jmp
aaa
jecxz
ja
inc
pop
arpl
inc
push
ja
clc
scas
mov
sub
pop
in
inc
push
js
(bad)
(bad)
dec
enter
jl
inc
mov
jo
dec
mov
and
xor
jbe
scas
daa
mov
nop
and
adc
pop
pop
mov
hlt
push
and
cmp
(bad)
gs
mov
out
pop
in
call
dec
add
mov
movs
outs
cli
cmp
rcr
sub
call
sar
(bad)
push
movs
clc
inc
aaa
int
les
pxor
pusha
iret
adc
pop
push
cmps
inc
dec
xor
inc
sar
call
cdq
movs
xchg
adc
loopne
fistp
or
xor
call
add
jecxz
pop
jle
pop
(bad)
dec
xor
out
sub
mov
and
int3
pop
pop
call
inc
(bad)
inc
or
adc
outs
jmp
jno
pusha
mov
inc
mov
iret
(bad)
mov
(bad)
outs
cmp
mov
inc
mov
add
mov
inc
aas
xchg
fiadd
(bad)
push
int3
ja
or
mov
mov
adc
pop
aaa
pop
pop
in
(bad)
(bad)
jmp
jge
jecxz
pusha
arpl
cmp
hlt
lods
pop
fdivr
sbb
(bad)
jmp
and
mov
popw
ds
shr
mov
adc
jmp
(bad)
ror
push
pop
ret
sahf
mov
cld
inc
into
cmp
adc
mov
xchg
js
sub
je
ins
add
in
call
and
mov
fisub
sub
mov
hlt
(bad)
mov
ins
push
gs
ret
stos
and
test
(bad)
and
sbb
inc
shl
lods
mov
xchg
mov
push
add
sbb
fwait
scas
dec
imul
push
js
and
les
pop
int
clc
(bad)
dec
pop
xchg
push
or
out
int3
inc
xchg
mov
inc
les
int3
or
mov
jmp
ret
repz
and
xchg
pop
je
mov
jmp
and
add
sub
out
(bad)
jmp
sbb
movs
iret
arpl
mov
aas
xor
clc
call
add
push
or
mov
(bad)
jmp
loopne
or
dec
xor
cmps
xchg
movs
sbb
cs
idiv
xchg
test
(bad)
(bad)
mov
push
es
call
push
in
push
into
xchg
(bad)
jecxz
int3
(bad)
(bad)
(bad)
(bad)
mov
add
push
adc
mov
inc
pop
inc
sub
cdq
iret
hlt
retf
pop
inc
xchg
imul
jmp
sub
in
adc
sbb
xchg
clc
test
jmp
adc
rol
rcr
or
in
mov
ins
ds
and
(bad)
(bad)
(bad)
(bad)
mov
cmp
(bad)
cld
imul
in
std
push
cs
dec
push
std
mov
cmc
xchg
(bad)
out
push
xchg
outs
adc
push
dec
ret
je
lock
(bad)
dec
jno
pushf
cmp
scas
xor
scas
xchg
lods
cmps
(bad)
icebp
retf
in
in
sub
retf
leave
mov
fcomp
and
mov
jg
lock
xchg
pushf
pusha
jns
push
(bad)
jecxz
xor
cmp
(bad)
(bad)
mov
inc
out
cs
adc
push
xchg
neg
das
sub
jno
bound
or
jmp
and
stos
jns
dec
mov
sub
outs
(bad)
outs
adc
adc
mov
mov
jmp
mov
inc
les
ror
xchg
xchg
xchg
mov
pop
push
loope
das
push
fs
jae
fwait
(bad)
push
out
push
and
pop
xchg
jg
mov
sbb
test
pop
xchg
imul
(bad)
(bad)
(bad)
call
in
pop
sub
ret
aas
xchg
imul
(bad)
lahf
mov
push
ins
into
aam
(bad)
call
ins
pop
mov
iret
jne
(bad)
fcomp
mov
mov
push
aaa
ds
jae
sar
add
rcl
mov
int
sub
mov
xor
lock
lock
sub
inc
jmp
out
repz
push
push
cmp
xchg
sti
mov
push
cld
call
and
cmp
scas
push
mov
hlt
stc
popf
pop
mov
out
adc
or
push
and
in
push
pop
mov
fwait
dec
jae
jle
nop
dec
jg
mov
xchg
pop
jp
dec
cmps
mov
fcomip
das
and
and
aaa
je
sbb
xor
push
jmp
lea
(bad)
adc
jne
xor
jge
pop
movs
outs
stos
fmul
xchg
cmp
cmp
push
xor
repz
loopne
add
inc
xchg
in
(bad)
(bad)
(bad)
dec
xchg
and
jl
jb
cmp
pop
enter
sub
cmp
sub
xor
dec
jg
jl
dec
aad
push
sar
loop
(bad)
(bad)
(bad)
jmp
xor
or
aas
(bad)
sbb
push
jmp
xchg
pop
sbb
frstor
xchg
(bad)
push
jns
(bad)
(bad)
(bad)
in
icebp
inc
mov
push
and
inc
dec
mov
loop
mov
leave
clc
push
cmp
shl
fwait
jle
scas
sahf
xor
mov
pop
cmp
jmp
shr
pop
call
sub
sar
add
cmp
(bad)
(bad)
(bad)
inc
jno
jl
xchg
mov
push
cmp
fld
add
in
jbe
jmp
cwde
or
lock
in
cmps
repz
mov
sub
push
call
cmp
(bad)
jmp
nop
cdq
sbb
xchg
stos
into
fisttp
movs
cli
je
xchg
or
xchg
shr
jg
call
mov
popa
sbb
gs
sub
test
(bad)
(bad)
ds
sub
jecxz
jg
ret
xor
xchg
sub
fwait
xchg
icebp
or
push
cmp
adc
push
jns
pushf
add
sub
lahf
into
mov
lea
call
push
les
push
(bad)
(bad)
(bad)
inc
add
dec
jmp
call
pop
lock
pusha
mov
jb
pop
xor
jmp
dec
cmp
sub
les
jnp
push
jg
mov
sbb
loop
xor
pop
xor
mov
icebp
test
jno
fist
rcr
jnp
push
adc
adc
fsub
add
jmp
cmp
nop
fdiv
loope
mov
push
push
jmp
test
pop
fistp
pusha
std
mov
mov
(bad)
jmp
jle
inc
jo
(bad)
std
stc
add
fdiv
ds
and
and
cli
jmp
test
jge
sub
inc
or
shr
(bad)
(bad)
call
sbb
pusha
cmp
jp
repz
or
test
push
popa
mov
xchg
sub
mov
bound
xor
arpl
cmps
data16
add
cmp
(bad)
push
mov
mov
daa
cmp
cmp
xchg
xchg
hlt
push
mov
in
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
rcr
fild
push
mov
pop
add
out
or
imul
pop
int
push
jg
popf
fdiv
stc
ds
mov
call
cmp
push
ins
es
mov
pusha
add
sti
aaa
pop
(bad)
(bad)
jg
and
mov
xor
inc
xchg
jmp
popa
cmps
jg
mov
add
lea
nop
das
leave
ret
adc
stc
add
mov
int3
adc
inc
(bad)
mov
pop
(bad)
in
fild
mov
adc
sbb
pop
cmp
push
scas
sub
lahf
scas
or
or
adc
jg
test
mov
aas
xchg
idiv
and
lods
je
adc
push
stos
rcl
push
lahf
rol
xor
mov
jg
push
pop
outs
xor
dec
adc
addr16
das
push
push
(bad)
(bad)
jmp
push
popa
hlt
test
pushf
mov
aam
xor
out
push
jle
loop
jbe
lods
adc
mov
and
xlat
sahf
xor
jg
sub
sub
mov
cdq
rcr
adc
dec
dec
sub
(bad)
jmp
test
mov
rcr
std
lods
jo
sub
add
mov
mov
hlt
iret
(bad)
mov
or
out
(bad)
cmp
retf
lahf
fidiv
enter
fild
dec
mov
aad
push
popf
(bad)
in
(bad)
(bad)
jp
daa
daa
mov
push
push
sub
mov
inc
movs
in
cdq
mov
mov
(bad)
dec
mov
push
and
and
gs
sbb
dec
xor
test
dec
and
cmp
jb
xor
jmp
hlt
add
pop
cli
idiv
loope
inc
es
cmp
ret
cmp
xlat
inc
xchg
(bad)
ror
mov
mov
adc
xchg
shl
sar
cmp
scas
popa
scas
aad
mov
(bad)
(bad)
inc
cmp
dec
jnp
mov
mov
dec
sbb
jbe
jmp
mov
adc
call
sub
out
int3
mov
(bad)
(bad)
(bad)
(bad)
push
hlt
mov
sub
mov
scas
push
bound
dec
scas
xchg
daa
inc
retf
or
cwde
nop
mov
jno
pusha
pop
js
es
repnz
dec
ror
or
out
idiv
movs
jp
popf
push
pop
sti
in
(bad)
(bad)
jg
xor
int3
clc
lock
pop
icebp
clc
shl
jb
xchg
fnstsw
(bad)
out
stc
cld
fstp
jmp
js
repz
lock
push
stc
sub
(bad)
(bad)
jg
nop
leave
enter
adc
inc
dec
and
ins
push
xor
push
leave
dec
fwait
pop
loop
and
call
or
pop
ja
mov
mov
sub
sbb
into
out
adc
or
aas
cmc
push
dec
(bad)
(bad)
(bad)
fdiv
mov
ret
cli
arpl
(bad)
int
aam
sti
test
mov
(bad)
(bad)
dec
(bad)
ret
aam
push
loopne
jnp
arpl
mov
lds
or
int3
and
cmp
sar
mov
jmp
cmps
rcr
mov
int3
dec
cdq
inc
and
jg
inc
or
mov
inc
gs
xchg
ins
das
rcl
jae
cmp
ja
popf
enter
and
cld
call
clc
push
gs
and
xchg
int3
xor
test
and
shl
sub
in
fld
call
jge
dec
in
jg
add
cmp
js
xor
test
popf
sbb
or
icebp
add
(bad)
(bad)
jmp
add
jp
and
xchg
fld
outs
lea
jmp
adc
xor
out
push
xor
sbb
mov
mov
mov
hlt
xchg
pop
jo
pusha
pop
fiadd
aaa
pop
retf
fild
jbe
xor
cmp
(bad)
call
call
xchg
lods
test
jbe
movs
mov
jecxz
xor
cmp
xchg
(bad)
dec
fstp
cmp
xchg
cmps
rep
in
out
test
mov
hlt
mov
fst
(bad)
(bad)
push
dec
std
jnp
mov
jge
bound
loope
mov
fcmovnbe
xchg
xchg
jmp
(bad)
(bad)
inc
fcom
sbb
mov
mov
xchg
dec
adc
jo
mov
test
mov
shr
xor
and
xchg
jmp
loop
ds
jmp
xor
or
iret
call
inc
leave
mov
mov
sub
xor
(bad)
(bad)
shl
adc
(bad)
rcl
mov
lods
sbb
jl
cdq
fld
js
jne
ret
mov
dec
mov
(bad)
in
jg
and
sub
fst
jb
push
mov
hlt
jmp
push
mov
pop
jmp
xchg
(bad)
call
test
je
and
scas
dec
int
mov
pop
add
sub
repz
sahf
dec
pushf
xchg
push
xor
inc
(bad)
(bad)
jmp
ins
xor
and
cmps
xor
int
cwde
inc
and
and
pop
(bad)
dec
xor
ret
push
hlt
push
mov
enter
(bad)
(bad)
fild
and
pop
push
pusha
cmp
inc
dec
xor
jno
pop
sahf
fcomip
cmp
pop
jbe
cmc
(bad)
jmp
gs
clc
jns
shl
xlat
outs
ror
(bad)
(bad)
(bad)
jmp
dec
xor
dec
imul
pop
jnp
cmp
in
adc
add
ror
jmp
push
sbb
sub
pop
(bad)
divps
les
mov
(bad)
call
sub
es
jb
jno
or
ja
jecxz
arpl
pop
lock
test
and
inc
test
ja
or
hlt
lahf
fs
(bad)
(bad)
dec
mov
clc
cs
adc
in
or
sbb
aas
scas
(bad)
in
ud0
xchg
(bad)
out
adc
outs
inc
out
outs
out
ss
(bad)
jg
xor
fidivr
add
pop
cli
pop
jle
daa
push
cmp
jmp
std
(bad)
call
aaa
adc
aas
sub
cmp
test
mov
xchg
xchg
(bad)
jg
cmp
jne
pop
jp
gs
in
cmp
mov
(bad)
(bad)
(bad)
call
out
push
xor
stos
vpmacsdql
pop
out
shl
(bad)
(bad)
(bad)
in
dec
lock
(bad)
pop
jg
pop
mov
punpcklbw
sti
cs
pushf
mov
jmp
sahf
(bad)
retf
shl
scas
pop
pusha
shr
jg
mov
dec
and
test
(bad)
mov
sub
ret
sub
mov
add
scas
xor
mov
mov
jp
in
stos
add
aad
inc
clc
jmp
pop
in
push
mov
js
retf
dec
(bad)
outs
dec
xor
mov
call
ror
sbb
(bad)
fcomip
dec
sub
xor
ins
jae
inc
test
jle
cmc
test
sahf
lods
ins
(bad)
mov
(bad)
(bad)
(bad)
call
(bad)
movs
enter
cwde
aas
cld
cli
mov
popf
imul
xor
fldcw
mov
pop
dec
cmp
xor
ss
mov
inc
es
adc
jno
pop
(bad)
pop
hlt
jmp
ins
(bad)
retf
ror
(bad)
mov
out
into
jns
ret
loope
cs
ins
mov
rcl
jb
lock
or
(bad)
mov
mov
inc
mov
bound
dec
or
sbb
cmc
(bad)
dec
dec
jmp
mov
push
pop
es
jmp
(bad)
(bad)
inc
addr16
lea
mov
inc
je
cmp
inc
repnz
mov
mov
or
mov
dec
jmp
aad
mov
inc
mov
or
(bad)
loop
inc
jns
jg
sub
inc
sbb
adc
ds
jle
jns
loop
pop
clc
xchg
fistp
(bad)
rcr
(bad)
jmp
lock
cli
fnsave
add
scas
add
mov
add
xchg
clc
(bad)
jmp
dec
ins
and
mov
ret
xor
push
and
lock
loopne
rol
and
(bad)
(bad)
(bad)
mov
cmps
cwde
jge
fstp
pop
adc
mov
xchg
pop
mov
call
jbe
js
jo
(bad)
or
gs
adc
fs
out
or
adc
pusha
push
push
sub
pushf
jo
mov
jmp
mov
jge
push
fdivr
jl
xor
ror
ds
or
fidiv
fild
or
shl
jge
push
push
xchg
stos
jmp
(bad)
(bad)
(bad)
in
inc
or
loop
stos
sub
xlat
jmp
jnp
iret
mov
pop
hlt
adc
(bad)
(bad)
push
sbb
ret
aad
cmp
xor
cmp
sub
std
int
cmc
mov
movs
jo
daa
or
xor
jg
imul
sbb
ror
push
int
fcom
call
add
arpl
mov
shr
(bad)
(bad)
call
imul
pop
inc
jmp
push
dec
xor
cwde
cld
(bad)
out
push
cwde
sbb
xlat
jg
ins
repz
je
sub
rcl
lds
(bad)
jg
dec
retf
push
pop
imul
pop
jle
add
popa
or
bound
jno
scas
and
lock
(bad)
push
daa
dec
dec
mov
mov
or
sbb
mov
loope
mov
mov
or
std
add
or
pop
xor
sti
xchg
pop
call
cmc
cmp
ds
(bad)
(bad)
call
sub
rcl
std
or
(bad)
cmp
sbb
in
mov
jge
jmp
dec
cmps
or
aaa
cld
sbb
in
clc
mov
add
(bad)
(bad)
(bad)
(bad)
idiv
cmp
and
repz
shr
dec
je
retf
add
jecxz
cmp
sub
push
jbe
xchg
push
fdivr
adc
mov
scas
fisubr
int
lods
and
out
xchg
adc
out
jbe
dec
ss
mov
push
aas
(bad)
(bad)
dec
cwde
or
mov
iret
test
and
(bad)
(bad)
(bad)
mov
pop
jmp
push
hlt
hlt
sbb
clc
out
mov
xor
(bad)
(bad)
(bad)
(bad)
std
mov
fcomp
sub
mov
sti
lahf
cmp
sub
cld
or
inc
xchg
icebp
(bad)
(bad)
cmp
dec
sar
mov
(bad)
in
cmp
nop
xchg
call
and
adc
mov
mov
and
cmp
push
jmp
es
sub
jmp
add
es
addr16
xor
jecxz
inc
dec
sub
cmp
dec
sbb
leave
and
lock
mov
ss
sub
rol
(bad)
(bad)
jg
into
out
mov
(bad)
jg
adc
int
mov
sub
clc
shl
mov
fs
jno
xchg
mov
dec
test
cmps
mov
sar
call
and
mov
repnz
push
cmp
xor
jnp
push
fild
test
dec
shr
pusha
fld
adc
push
xchg
ret
sbb
ds
imul
in
cli
cmp
mov
int3
fcomip
(bad)
push
inc
pop
and
mov
sub
inc
into
push
cmp
or
push
xchg
jo
xor
pop
icebp
frstor
and
cdq
call
repz
add
and
(bad)
jmp
int3
push
cmp
jmp
xor
dec
push
clc
jae
mov
xor
in
popf
cmps
icebp
dec
push
cdq
dec
int3
cmp
ffree
push
mov
sbb
iret
mov
mov
dec
test
(bad)
(bad)
(bad)
call
gs
inc
and
std
ret
ins
stos
and
mov
pop
xchg
dec
xor
add
in
inc
add
add
xchg
add
cld
(bad)
dec
(bad)
enter
enter
pop
repz
mov
pop
push
cmp
out
hlt
outs
inc
sbb
push
nop
les
sbb
inc
fisttp
cwde
dec
ret
inc
loopne
xlat
or
lods
adc
movs
mov
xchg
jb
(bad)
cmp
jmp
xchg
into
retf
dec
pop
mov
dec
popa
ss
inc
xor
add
leave
test
mul
sub
or
ds
(bad)
fst
add
or
in
ja
daa
cs
mov
mov
mov
mov
and
(bad)
(bad)
push
je
test
mov
movs
jmp
js
and
inc
pusha
dec
or
aad
adc
int3
cmp
xor
inc
fiadd
mov
call
lea
loopne
stos
ret
cmp
(bad)
(bad)
fild
pop
sbb
push
fs
fadd
or
xor
test
in
and
push
(bad)
(bad)
(bad)
mov
arpl
xor
jp
shl
lods
lahf
enter
out
in
sbb
(bad)
(bad)
jmp
mov
xor
lock
(bad)
call
imul
fadd
mov
push
and
push
xor
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
rcl
fistp
mov
data16
cli
cmps
mov
test
dec
cmp
iret
xchg
dec
mov
add
aad
add
fs
(bad)
aam
push
(bad)
jg
out
(bad)
addr16
pop
mov
xchg
aas
call
outs
sbb
aaa
adc
cmp
fcmove
cmc
(bad)
(bad)
call
jns
xor
cld
or
pop
(bad)
int
jmp
push
jnp
ins
cmp
add
xchg
hlt
push
lods
xor
mov
ja
aam
(bad)
call
dec
jae
sub
jmp
bound
je
or
(bad)
(bad)
jg
inc
into
into
mov
div
pop
out
fsubr
cmp
adc
adc
mov
rcl
inc
cmp
in
mov
dec
mov
mov
dec
or
movs
daa
xor
rcr
in
mov
repz
(bad)
(bad)
ficomp
pop
jbe
fucomip
xchg
jnp
in
(bad)
call
rol
js
mov
and
(bad)
call
(bad)
cmp
into
sbb
mov
or
ja
movs
mov
call
std
dec
xchg
xchg
mov
jo
stos
scas
popa
es
(bad)
test
(bad)
(bad)
call
rol
sti
ja
daa
mov
inc
test
test
wrmsr
div
jge
pop
ins
jmp
cld
push
int3
inc
rcr
cdq
mov
mov
(bad)
cmc
push
mov
cld
sbb
xchg
mov
sti
pop
inc
xor
call
xchg
data16
(bad)
mov
sbb
mov
nop
(bad)
mov
dec
pusha
jl
rol
cmp
dec
cmp
sbb
and
or
cli
mov
les
jle
shr
xchg
shr
fstp
call
mov
in
xor
mov
cmp
les
popa
repz
jbe
(bad)
call
sub
lock
adc
daa
out
inc
cdq
push
dec
je
add
dec
inc
repz
jmp
bound
(bad)
(bad)
(bad)
jmp
hlt
lods
and
adc
or
les
imul
cld
dec
(bad)
push
adc
ins
shl
mov
inc
addr16
xchg
inc
mov
mov
dec
(bad)
aaa
add
jge
dec
and
adc
xlat
cmp
push
aam
loope
dec
test
(bad)
mov
mov
xchg
test
mov
fs
pop
or
xchg
arpl
int
arpl
mov
movs
cmp
(bad)
(bad)
mov
pop
sbb
sbb
lock
(bad)
(bad)
dec
adc
mov
shr
jmp
lods
call
and
sar
js
bound
addr16
pop
ret
jmp
jb
inc
or
dec
cld
in
adc
dec
adc
mov
xor
retf
cld
push
push
cld
(bad)
(bad)
mov
and
inc
mov
jnp
mov
sahf
stc
retf
push
dec
and
(bad)
mov
mov
repz
mov
mov
pushf
push
mov
dec
or
xchg
rcr
mov
int
lods
mov
add
mov
and
(bad)
(bad)
clc
fistp
adc
jmp
das
adc
mov
fcomip
adc
cld
test
ret
call
sar
add
sbb
int
jmp
xchg
(bad)
call
fdivr
loop
pushf
mov
call
xor
push
add
sbb
rcr
mov
in
lock
out
sbb
test
mov
and
(bad)
(bad)
(bad)
push
sbb
test
or
(bad)
mov
or
outs
sbb
jecxz
adc
pop
mov
push
mov
shl
aaa
lods
cld
rcr
clc
pop
mov
call
xchg
xchg
mov
push
xchg
xchg
imul
(bad)
(bad)
push
aas
inc
dec
cmp
repz
jg
mov
jge
adc
add
dec
ds
clc
(bad)
iret
inc
mov
jmp
ins
pop
mov
adc
je
or
mov
lds
cmps
add
or
jb
push
(bad)
(bad)
mov
or
pop
int
das
stos
sub
stos
les
cmp
mov
adc
jge
mov
(bad)
js
out
xchg
hlt
(bad)
loope
(bad)
mov
call
adc
repnz
loope
ins
(bad)
or
mov
sub
sub
jno
cld
ret
pop
and
cld
cmc
mov
and
jle
pop
lock
cmp
retf
fimul
scas
pop
out
inc
push
push
cdq
(bad)
fild
mov
hlt
shr
lds
and
xor
xchg
rol
lock
neg
(bad)
(bad)
(bad)
inc
sahf
retf
into
pop
btc
and
xlat
xchg
add
mov
pop
push
jmp
add
popf
mov
xor
mov
sub
jge
mov
ins
sar
mov
fdiv
aam
inc
mov
inc
mov
(bad)
(bad)
(bad)
(bad)
fcmovu
adc
pop
je
shl
push
xor
into
mov
mov
adc
out
or
push
dec
or
inc
and
(bad)
mov
adc
nop
adc
dec
add
add
ficom
lea
(bad)
push
sub
or
adc
enter
test
imul
add
test
(bad)
(bad)
cmp
sbb
xlat
xchg
add
xchg
or
leave
mov
repz
scas
cli
sbb
(bad)
jmp
and
cmc
sub
rcr
mov
(bad)
call
add
(bad)
(bad)
push
mov
sahf
jnp
mov
mov
inc
pop
je
sub
inc
pop
sbb
stc
push
adc
cmp
sar
inc
cmp
inc
sub
and
sbb
sbb
jl
cli
jmp
ins
inc
add
loopne
(bad)
ins
lods
ja
lea
shl
or
iret
int3
jmp
fistp
or
(bad)
dec
jecxz
mov
mul
xlat
movs
shl
mov
add
add
xlat
(bad)
cli
jo
dec
fabs
fdivrp
(bad)
(bad)
(bad)
cmp
dec
cwde
cmp
mov
sub
repz
mov
fdivrp
and
pop
mov
imul
mov
(bad)
call
pop
jno
push
jbe
lds
icebp
loope
sbb
mov
xchg
cmp
pop
and
mov
es
mov
adc
icebp
or
js
sbb
rol
(bad)
jmp
loopne
shl
movs
retf
mov
dec
push
cs
xchg
sub
jmp
outs
jp
popf
pushf
cmp
bound
mov
les
mov
cmp
and
ret
ss
ins
sar
dec
xchg
in
(bad)
sbb
add
std
pop
add
xchg
clc
push
push
cmp
aaa
mov
dec
xchg
adc
rcl
push
(bad)
ss
push
and
push
call
adc
and
stos
dec
cmc
fsub
hlt
jmp
adc
jmp
inc
mov
mov
ret
ret
(bad)
out
clc
call
jne
cmp
dec
sbb
inc
addr16
mov
fisttp
inc
pop
(bad)
(bad)
in
fnstenv
retf
sub
add
popa
xor
push
xor
(bad)
(bad)
(bad)
cmp
iret
xchg
iret
sbb
xor
mov
cmp
mov
(bad)
rcl
jg
(bad)
mov
or
aad
jle
sbb
(bad)
push
xchg
mov
xor
leave
bound
cmp
mov
iret
aas
outs
sar
(bad)
jmp
test
mov
jge
inc
imul
sahf
pop
fnstenv
mov
cmps
jmp
lods
out
push
clc
outs
leave
aas
dec
out
int
xchg
(bad)
hlt
cs
(bad)
cmp
pop
fbstp
lods
ins
or
and
sar
(bad)
(bad)
(bad)
inc
mov
js
sub
int3
inc
and
rcl
jmp
and
shr
fidiv
mov
jno
inc
shl
(bad)
mov
pop
sahf
inc
jns
shufps
push
(bad)
(bad)
(bad)
mov
xor
lock
jo
inc
mov
out
mov
mov
sti
fsubr
adc
cmc
inc
sbb
adc
leave
mov
(bad)
(bad)
(bad)
inc
mov
cs
dec
pop
and
push
mov
pop
mov
stc
cmp
(bad)
call
fxch
stc
xor
xchg
sub
inc
cmp
jns
lods
sbb
fwait
inc
xor
sub
frstor
ret
push
stos
aam
test
into
call
in
xchg
xor
sahf
fnstenv
cld
(bad)
clc
dec
ins
fidivr
xor
ret
clc
cmp
pop
jg
(bad)
scas
mov
inc
mov
fiadd
scas
cmp
push
xor
repz
outs
clc
jmp
out
push
leave
xor
les
jmp
inc
xchg
ins
xor
mov
(bad)
(bad)
call
data16
dec
or
in
pop
xlat
aaa
sbb
stos
movs
add
jmp
movs
nop
sbb
js
pushf
out
and
lods
cmp
lods
jb
in
jb
mov
pushf
jbe
cmp
(bad)
(bad)
(bad)
inc
add
lock
imul
and
or
or
div
sar
cld
(bad)
call
iret
enter
xor
ja
lods
pop
(bad)
mov
(bad)
(bad)
jg
or
inc
pop
mov
mov
adc
sub
push
add
dec
sbb
sbb
jns
(bad)
(bad)
out
cmp
jecxz
xchg
pop
mov
lock
adc
add
(bad)
jmp
int3
or
adc
aam
sub
jmp
cmps
mov
mov
push
int
aas
mov
add
lods
enter
cmp
sub
and
cwde
xchg
mov
cs
(bad)
(bad)
jmp
repnz
nop
(bad)
dec
and
cmp
pop
sbb
pusha
test
jmp
dec
sub
leave
sub
and
sbb
cmps
mov
xchg
in
jmp
aaa
and
(bad)
(bad)
call
std
lds
jg
aam
in
pusha
shl
pop
arpl
(bad)
xchg
cmc
xchg
data16
xchg
pop
nop
mov
sbb
mov
sbb
(bad)
inc
add
rcl
dec
test
shr
sub
inc
nop
mov
(bad)
(bad)
(bad)
dec
push
call
clc
(bad)
xchg
ins
and
aas
(bad)
fisttp
aas
inc
test
inc
in
mov
and
loopne
and
sub
(bad)
call
popf
inc
ret
cmps
out
dec
dec
mov
sbb
outs
cmps
icebp
add
(bad)
(bad)
(bad)
mov
nop
jecxz
cmp
xchg
mov
cmp
lahf
fwait
dec
adc
ret
enter
sub
add
mov
pop
(bad)
(bad)
(bad)
(bad)
fisttp
and
and
(bad)
das
and
xchg
dec
cwde
cmp
adc
pop
es
mov
add
movsx
mov
xchg
or
add
push
out
pop
(bad)
inc
jb
xor
ja
loopne
int
pop
(bad)
ja
jle
test
mov
cmp
bound
(bad)
pop
mov
hlt
jl
push
mov
ret
hlt
fcomip
jmp
sbb
fidivr
test
aaa
mov
lock
sbb
adc
dec
popf
or
mov
aam
je
ror
(bad)
(bad)
(bad)
call
adc
push
fadd
aas
sub
popa
mov
xor
enter
push
js
(bad)
(bad)
dec
icebp
out
mov
and
ror
mov
fs
out
push
call
mov
push
idiv
or
xchg
repnz
dec
mov
push
xchg
sbb
push
std
jg
xor
(bad)
dec
ss
call
ret
add
cli
or
mov
jne
pop
loopne
cmp
cmc
jp
push
sbb
lock
cmp
shl
(bad)
(bad)
jmp
cs
arpl
call
jne
sti
rol
mov
and
fcos
mov
call
push
inc
lahf
xchg
push
mov
lahf
ins
xchg
adc
push
aam
push
test
ss
mov
push
(bad)
(bad)
(bad)
dec
ret
test
add
scas
pmullw
ret
ja
inc
outs
mov
imul
mov
jecxz
or
sbb
xchg
mov
cmp
add
push
stc
je
xchg
inc
fnstsw
jg
pop
out
jge
das
imul
cli
mov
pop
mov
cli
(bad)
(bad)
(bad)
jle
mov
jmp
jmp
jle
ds
imul
(bad)
pop
xor
fs
popf
fiadd
cli
(bad)
inc
aad
ds
retf
xchg
pop
push
or
adc
xchg
pop
and
fisttp
rcl
rcl
push
push
ins
(bad)
xchg
and
(bad)
cld
hlt
pop
inc
sbb
outs
cmp
jb
dec
xor
into
push
add
retf
lds
adc
push
xor
rcl
aad
outs
mov
dec
jb
mov
jmp
clc
jmp
retf
jle
ss
jbe
sub
(bad)
push
fld
push
std
out
mov
dec
arpl
push
add
(bad)
fisub
cmp
iret
lods
cld
cmp
cli
pop
mov
dec
and
dec
jb
sbb
(bad)
(bad)
(bad)
mov
dec
out
jo
and
int
jl
mov
cmp
test
cmp
popf
int3
sar
(bad)
(bad)
(bad)
stc
inc
cwde
push
add
or
icebp
outs
ins
and
inc
mov
in
cmc
mov
mov
dec
cmp
xor
(bad)
call
mov
push
lahf
lea
les
sar
dec
jmp
imul
mov
sub
mov
cmc
(bad)
jg
mov
cmc
aas
jo
and
pop
(bad)
mov
inc
cmp
lock
es
push
das
adc
mov
scas
mov
dec
inc
loop
dec
lock
(bad)
push
int3
fld
push
push
adc
jg
jmp
dec
(bad)
into
push
dec
nop
jo
inc
out
sbb
pop
outs
inc
loop
pop
xor
sahf
and
jmp
push
call
xchg
mov
rol
call
adc
push
js
(bad)
(bad)
(bad)
in
jmp
cwde
sbb
fs
or
push
aas
sahf
mov
inc
mov
sbb
ret
cld
(bad)
push
inc
xchg
dec
or
and
mov
(bad)
jg
cmps
fisttp
push
dec
xchg
lock
call
xchg
(bad)
(bad)
mov
cdq
mov
pop
inc
jge
or
and
stc
(bad)
(bad)
fcomip
outs
out
in
xchg
mov
adc
fbstp
sahf
shl
(bad)
(bad)
(bad)
(bad)
inc
jmp
cmp
inc
test
xchg
loopne
out
inc
mov
inc
les
movs
push
(bad)
(bad)
(bad)
mov
inc
les
push
cmps
test
in
push
push
repnz
push
jb
sbb
sub
daa
out
mul
inc
(bad)
(bad)
mov
mov
cs
jno
pop
add
ja
sub
mov
push
popf
fldcw
(bad)
inc
mov
pop
adc
ja
inc
pop
outs
sar
dec
fmul
bound
dec
test
(bad)
(bad)
(bad)
(bad)
call
in
fbstp
mov
stc
(bad)
in
bound
inc
das
xchg
stos
mov
mov
movs
mov
inc
fs
and
rol
pusha
inc
out
fstp
pop
(bad)
(bad)
(bad)
jg
push
les
sahf
pop
enter
hlt
in
std
lock
mov
(bad)
jg
jmp
outs
mov
pop
out
adc
ins
or
cmc
clc
mov
push
(bad)
call
sub
clc
movs
cmp
cs
movs
in
cwde
push
(bad)
(bad)
mov
and
out
and
jb
int
movs
mov
xchg
dec
out
mov
mov
cmp
pop
in
jg
jecxz
in
(bad)
(bad)
fisttp
xlat
stos
nop
int
mov
in
aaa
div
jb
and
cmp
stos
clc
inc
fdivr
sbb
add
dec
jbe
sbb
(bad)
jmp
outs
rol
ds
popf
mov
xchg
into
dec
iret
xchg
push
mov
loopne
(bad)
(bad)
call
ins
shl
fsub
xor
jg
sbb
mov
popf
stos
pushf
aaa
stos
shr
mov
call
dec
retf
sar
jecxz
push
(bad)
(bad)
call
xor
dec
inc
jne
shl
fcomi
xor
pop
push
outs
data16
aad
pop
pop
dec
movs
pushf
clc
(bad)
(bad)
jmp
xor
and
xor
xor
xlat
mov
fwait
stos
(bad)
(bad)
jmp
cli
out
mov
pushf
mov
mov
sub
ins
frstor
xor
(bad)
(bad)
dec
popa
jno
movs
xchg
fsub
or
fist
mov
mov
sub
gs
(bad)
jmp
popf
in
sub
outs
and
inc
out
inc
push
dec
ret
and
bound
fs
call
cli
mov
cmp
sbb
pop
pop
mov
fstp
push
sar
test
sbb
sbb
and
sbb
push
int3
inc
jbe
(bad)
(bad)
call
in
dec
mov
pop
repz
xor
fptan
addr16
mov
sub
(bad)
in
in
scas
(bad)
dec
outs
les
sub
adc
push
test
jg
jg
push
enter
jp
or
cmp
retf
popa
ja
loop
or
nop
in
add
es
je
mov
mov
pop
fs
mov
sbb
mov
xchg
movs
scas
jmp
jmp
js
loop
push
test
mov
(bad)
mov
sub
(bad)
push
mov
add
call
mov
adc
jmp
jecxz
(bad)
jge
pop
aas
jnp
pushf
cmc
sbb
add
jne
icebp
mov
xor
(bad)
(bad)
jp
lods
mov
xor
je
(bad)
fdiv
jne
dec
sbb
(bad)
hlt
clc
sbb
(bad)
(bad)
jmp
sbb
inc
jae
add
jmp
jle
je
adc
add
pop
jle
pop
jno
(bad)
(bad)
(bad)
mov
lods
ret
add
sub
rol
fs
sar
mov
inc
movs
loope
popf
scas
cs
daa
xchg
dec
xor
sbb
xchg
repz
or
mov
xchg
and
scas
retf
aad
dec
mov
sahf
loope
jo
stos
ja
js
jnp
mov
jbe
(bad)
(bad)
(bad)
(bad)
dec
xchg
jb
or
mov
xor
pop
xor
add
repz
xor
cmp
(bad)
call
cld
xchg
mov
ja
mov
cmp
push
and
pushf
hlt
mov
loop
jmp
dec
mov
retf
jnp
or
cmp
mov
cmp
sbb
pop
pop
xor
dec
xchg
push
cmp
int
ds
fidiv
es
call
push
inc
and
xchg
inc
xor
mov
mov
cli
(bad)
(bad)
(bad)
cmp
inc
lods
cmp
aas
add
sub
rcl
(bad)
cmp
mov
jmp
test
call
mov
inc
sbb
rol
or
call
(bad)
dec
add
nop
sbb
inc
mov
pushf
movs
ret
xchg
ja
(bad)
js
push
dec
(bad)
jmp
dec
and
(bad)
jmp
xor
dec
hlt
mov
out
out
jp
idiv
xchg
scas
jp
sahf
xor
sub
jmp
(bad)
fcomp
daa
cs
sbb
bound
clc
(bad)
(bad)
cmp
jo
add
cmc
mov
add
rol
ins
je
(bad)
jmp
je
sub
cdq
mov
mov
mov
mov
sbb
xor
xor
or
and
cld
call
sbb
inc
lds
shl
mov
mov
popa
(bad)
jmp
out
fstp
jmp
pop
hlt
inc
jb
(bad)
(bad)
(bad)
push
jecxz
nop
push
stc
(bad)
push
sub
mov
or
fcom
stos
in
mov
mov
dec
xor
repnz
xchg
(bad)
arpl
(bad)
(bad)
jmp
stos
aas
and
cmp
repz
jle
push
scas
and
ret
icebp
adc
dec
pop
clc
xchg
lahf
ja
shl
add
add
jae
sar
sbb
fisubr
(bad)
mov
cmc
mov
ss
das
rcr
mov
mov
jl
ss
(bad)
dec
dec
jecxz
or
jle
loope
push
fs
cli
jmp
mov
mov
add
mov
jb
(bad)
jmp
icebp
push
adc
(bad)
jmp
jbe
mov
out
(bad)
(bad)
(bad)
mov
loop
xor
vpunpckhbw
adc
es
out
into
in
addr16
(bad)
(bad)
dec
pop
mov
enter
mov
pop
rcr
mov
enter
add
(bad)
(bad)
(bad)
lds
xor
bound
je
cmps
(bad)
mov
cmc
out
ds
retf
xchg
arpl
call
cmp
cmp
dec
(bad)
dec
add
ins
mov
xor
scas
mov
push
mov
mov
push
cld
mov
mov
scas
retf
cmp
dec
mov
dec
jg
movs
inc
jb
adc
jmp
sar
(bad)
(bad)
inc
jae
xor
ret
pop
ret
lock
(bad)
inc
std
int3
xchg
dec
jno
inc
add
stos
(bad)
(bad)
dec
or
inc
inc
mov
sub
sbb
fwait
cmp
stos
sub
(bad)
jmp
dec
mov
test
js
fistp
and
mov
cwde
(bad)
xor
inc
iret
outs
pop
mov
call
movs
dec
inc
xchg
call
(bad)
outs
js
imul
mov
add
inc
retf
imul
div
jnp
cmp
push
pop
xchg
(bad)
call
xor
test
imul
in
dec
mov
jmp
mov
cmp
adc
sub
xchg
xchg
(bad)
(bad)
push
sub
(bad)
mov
sbb
jp
lock
jge
push
xor
cld
(bad)
(bad)
dec
push
xlat
add
inc
outs
mov
fsub
xchg
inc
shr
(bad)
adc
ss
cmp
(bad)
push
sub
addr16
mov
aam
mov
adc
movs
iret
jp
sbb
lahf
push
int3
aad
and
mov
ret
into
inc
cld
int
loopne
mov
push
(bad)
jecxz
jno
xor
(bad)
jmp
out
int3
mov
mov
outs
adc
popa
add
lods
mov
sub
retf
mov
jg
xlat
jb
cwde
lds
adc
cld
test
and
adc
jg
adc
imul
and
ja
xor
cmps
pop
or
(bad)
rcr
pop
in
xlat
mov
adc
das
inc
in
cmp
and
pop
mov
adc
or
and
call
and
xchg
pop
dec
xchg
jae
jmp
mov
cmps
mov
push
(bad)
pop
xchg
jns
mov
call
adc
bound
inc
cmp
adc
lods
ja
mov
and
mov
sbb
bswap
test
jnp
add
dec
pop
std
dec
ins
add
(bad)
cmp
push
or
mov
(bad)
jmp
call
mov
shr
ret
(bad)
adc
ror
mov
xchg
mov
pop
cs
adc
lock
and
dec
in
mul
sbb
xlat
inc
cmp
stos
rol
push
jg
(bad)
(bad)
dec
(bad)
test
or
inc
xchg
cmp
and
jle
mov
cwde
jge
mov
outs
clc
xchg
lock
out
outs
inc
scas
popa
pop
mov
xchg
test
mov
adc
sub
(bad)
inc
push
jns
lods
(bad)
sbb
out
(bad)
imul
shr
jno
pop
jb
sub
pop
das
xchg
sub
(bad)
dec
lahf
mov
jmp
lds
add
inc
mov
ds
or
(bad)
fldenv
push
cs
(bad)
(bad)
(bad)
jmp
popf
neg
cmps
stc
loope
addr16
leave
dec
dec
shr
dec
call
sub
(bad)
jmp
jb
sti
(bad)
jo
call
pop
outs
fs
pop
sub
rol
and
aaa
add
pop
push
stos
xor
outs
inc
cmps
and
(bad)
sbb
jmp
fadd
es
sti
mov
cmc
push
sar
cmps
repz
dec
xchg
mov
(bad)
jg
jb
cmp
fs
popf
xor
aam
and
bound
pop
jmp
sub
nop
xchg
dec
inc
sub
dec
jmp
aaa
hlt
mov
les
pop
psubsb
add
push
cli
test
add
mov
jmp
mov
sar
int3
mov
stos
hlt
rol
cwde
mov
mov
sub
dec
push
retf
sub
push
add
out
out
mov
jmp
push
imul
xor
addr16
ret
bound
sar
in
int3
in
xchg
or
dec
(bad)
(bad)
fisub
dec
out
push
push
or
loop
ja
aaa
pop
loope
mov
mov
fdivp
call
push
idiv
sub
rcl
xchg
fistp
adc
mov
(bad)
cmp
retf
dec
test
mov
pop
popa
mov
(bad)
call
cmp
push
cmp
fcom
adc
(bad)
or
lods
pop
cmps
(bad)
jg
sbb
cmp
sub
xor
aaa
pop
jg
xchg
push
(bad)
pop
inc
ins
hlt
aad
(bad)
js
xlat
or
int
add
rol
(bad)
popf
mov
adc
mov
mov
(bad)
(bad)
adc
adc
xor
jbe
fimul
sub
(bad)
jmp
inc
clc
lahf
pop
sub
adc
arpl
jmp
(bad)
not
and
push
clc
into
jecxz
dec
leave
cmc
(bad)
adc
cmp
mov
xor
push
daa
cmp
inc
sbb
sar
les
and
dec
sub
cmp
adc
and
(bad)
call
pop
push
jnp
pushf
xlat
mov
call
iret
mov
xchg
jb
in
std
scas
xchg
(bad)
stc
bound
sbb
mov
cli
push
mov
shl
mov
enter
xlat
inc
push
xchg
mov
cmp
cwde
nop
sub
(bad)
(bad)
(bad)
dec
xchg
aas
dec
mov
lock
aas
or
cmp
cli
icebp
ret
ret
fisttp
call
cmp
mov
jae
mov
adc
inc
popf
pushf
inc
cmp
xchg
(bad)
(bad)
(bad)
(bad)
jmp
sub
stos
dec
xchg
test
push
pop
stos
jae
les
jns
sbb
std
(bad)
(bad)
inc
pop
dec
push
ror
cmp
xor
mov
and
loop
clc
call
adc
inc
ins
ds
in
mov
bound
add
jmp
outs
mov
(bad)
stc
mov
(bad)
jmp
jle
mov
pop
xlat
rol
push
and
int
pushf
mov
pop
adc
(bad)
mov
in
or
aaa
jae
xchg
stos
cmps
test
dec
fwait
lea
sbb
mov
jns
or
rol
xor
xchg
add
cmps
jecxz
dec
test
retf
inc
iret
mov
adc
(bad)
dec
(bad)
outs
push
jb
pushf
fwait
mov
xchg
pop
out
lea
mov
sbb
and
(bad)
(bad)
push
mov
push
push
pushf
or
jp
xor
lahf
add
cli
pop
adc
sbb
(bad)
in
es
fmul
fsubr
cmp
push
mov
scas
nop
(bad)
fild
push
in
in
test
(bad)
call
sbb
mov
ret
inc
sbb
repz
(bad)
(bad)
jmp
popa
cld
jecxz
cld
cmp
cmp
adc
and
pop
lods
xor
inc
dec
jmp
jl
sub
inc
pop
daa
popf
xor
cmp
movs
repnz
fcmovnb
stc
dec
push
cwde
sub
sahf
inc
push
mov
hlt
push
mov
mov
dec
cmc
push
int3
in
je
fnstsw
xchg
cmps
push
fldcw
mov
sbb
(bad)
(bad)
(bad)
fild
rcr
jl
push
add
mov
mov
inc
lods
shr
xor
mov
xchg
jge
imul
(bad)
jmp
pop
out
test
popa
push
and
sub
out
cmp
jmp
(bad)
call
nop
loop
in
test
inc
and
xor
ins
rcr
jge
dec
mov
nop
jns
ror
into
or
jmp
jmp
lods
xor
shl
push
xor
or
fwait
call
cmp
sub
out
mov
mov
cmp
mov
(bad)
cmp
inc
das
xchg
and
add
push
adc
push
lock
(bad)
(bad)
jmp
pushf
mov
icebp
add
xor
inc
fcmovnb
shl
imul
inc
cld
call
add
push
inc
mov
sbb
inc
lock
jge
cmp
and
(bad)
(bad)
in
cmp
pop
jle
jae
mov
cmp
xor
in
mov
aam
jecxz
mov
dec
xor
in
daa
scas
sbb
xor
sbb
push
fisub
mov
and
adc
scas
(bad)
and
mov
outs
hlt
hlt
sbb
pop
mov
mov
xchg
jae
adc
(bad)
(bad)
jg
xchg
dec
scas
xlat
mov
dec
dec
dec
mov
lea
jp
out
pop
mov
sbb
dec
call
(bad)
imul
popf
(bad)
(bad)
(bad)
inc
inc
lds
iret
in
(bad)
xlat
sub
mov
jle
cmp
inc
pushf
mov
(bad)
(bad)
(bad)
jmp
inc
cmp
ret
inc
mov
leave
in
fld
leave
in
inc
cmc
dec
ss
mov
mov
xor
dec
ins
add
xor
xchg
cld
inc
mov
cli
sbb
nop
dec
fs
icebp
js
xchg
sub
xchg
fisttp
in
or
mov
sbb
mov
(bad)
(bad)
(bad)
dec
or
add
into
cmp
jge
pusha
or
xchg
scas
mov
icebp
push
repnz
(bad)
push
mov
xchg
or
jne
movs
push
and
pop
in
sub
push
int3
jmp
mov
xchg
mov
aad
lock
es
or
sbb
(bad)
(bad)
jmp
test
pop
adc
fsub
(bad)
cmp
adc
sbb
nop
(bad)
(bad)
push
loop
or
pop
xor
out
push
pop
or
xor
xor
pop
js
(bad)
(bad)
mov
fxch
mov
imul
fistp
outs
cmp
es
(bad)
(bad)
jecxz
sbb
(bad)
mul
xor
or
jge
add
int3
or
add
lahf
mov
(bad)
(bad)
(bad)
mov
inc
lods
xor
sbb
cmp
ins
test
adc
or
add
popf
add
icebp
mov
(bad)
(bad)
call
sbb
ss
jle
mov
aas
jnp
es
sti
add
idiv
scas
add
inc
xchg
add
adc
mov
and
(bad)
inc
pop
imul
jbe
pop
push
nop
ror
pop
mov
xor
pop
es
call
cli
(bad)
in
push
xchg
mov
sub
xor
(bad)
call
cmp
jl
inc
or
xchg
pop
loopne
call
adc
or
pmullw
pop
cdq
shr
hlt
mov
test
not
push
cmp
and
(bad)
(bad)
push
jmp
test
jmp
add
push
mov
sub
leave
pop
or
ret
pop
out
jae
mov
pop
scas
lods
call
les
adc
mov
add
jmp
ds
push
mov
aaa
leave
mov
arpl
les
dec
inc
xchg
mov
lahf
push
nop
ret
out
(bad)
(bad)
out
mov
dec
and
addr16
jno
mov
xor
sbb
dec
xchg
lock
mov
dec
mov
mov
jmp
and
jmp
test
or
inc
enter
mov
sub
push
dec
cli
retf
mov
and
cmp
std
adc
mov
jmp
pop
inc
inc
ja
jbe
(bad)
pop
jg
cmps
push
test
inc
cld
inc
stos
aaa
ret
pop
std
lock
popa
mov
add
mov
push
lds
xor
push
dec
(bad)
(bad)
(bad)
call
pushf
push
xchg
adc
inc
sbb
adc
js
in
push
sub
pop
retf
mov
xchg
ret
pop
test
(bad)
(bad)
dec
cmp
ret
inc
shl
jmp
arpl
lock
jg
daa
jmp
fnop
mov
hlt
adc
imul
out
rcl
pop
clc
in
clc
(bad)
or
cmp
sbb
icebp
(bad)
call
add
test
cmp
cs
mov
gs
mov
push
xor
(bad)
jmp
xchg
dec
ss
(bad)
sub
cmovl
pop
push
mov
scas
xchg
cmp
(bad)
call
pop
(bad)
fbstp
shl
or
lea
loope
xor
ss
(bad)
out
xor
sub
xor
(bad)
mov
adc
or
mov
jmp
xor
ins
shl
xchg
mov
xor
xchg
pop
xchg
jl
xchg
mov
ja
sub
jl
loopne
rcl
fiadd
and
jg
jmp
xchg
mov
loopne
add
sgdtd
pop
retf
add
(bad)
(bad)
mov
nop
mov
cmp
sub
hlt
pop
or
scas
fbld
scas
mov
addr16
popf
imul
sbb
push
xchg
pop
fst
jmp
fidiv
ins
and
and
add
call
jmp
call
repz
mov
daa
pop
and
inc
daa
in
in
hlt
adc
cmp
adc
jmp
test
stc
xchg
nop
push
ror
cmp
mov
pop
pop
inc
call
cld
(bad)
mov
addr16
dec
out
dec
jmp
pop
or
jno
inc
call
sbb
mov
mov
scas
mov
test
leave
cmp
jmp
sub
cmp
add
sbb
xchg
or
cld
(bad)
out
pusha
jbe
add
adc
(bad)
dec
(bad)
(bad)
mov
sar
(bad)
jg
sub
add
inc
mov
xor
sbb
rol
mov
gs
call
icebp
test
adc
cmp
pop
push
mov
pop
addr16
lods
retf
(bad)
jmp
push
or
or
stos
cmc
(bad)
mov
mov
out
je
mov
mov
xor
xor
or
jp
xchg
stos
push
loope
jne
push
inc
int3
mov
pop
pop
xchg
push
pop
ds
push
popa
mov
enter
inc
test
lea
sub
rol
std
(bad)
(bad)
dec
xor
push
pushf
mov
or
adc
xchg
mul
push
dec
in
sub
add
(bad)
mov
test
dec
dec
pusha
mov
add
test
pop
adc
(bad)
inc
cld
das
push
jecxz
lahf
inc
outs
push
ins
das
fadd
hlt
mov
call
dec
lds
cmp
sub
clc
call
dec
stos
mov
(bad)
(bad)
adc
jmp
movs
xor
cmp
shl
test
test
xchg
scas
pop
and
das
fadd
mov
scas
dec
adc
out
xor
lods
inc
into
aad
push
add
(bad)
(bad)
(bad)
inc
lods
imul
xchg
adc
lahf
(bad)
mov
(bad)
(bad)
dec
mov
(bad)
pop
loopne
sti
jno
mov
cld
outs
cmps
repnz
cmp
mov
ret
xchg
test
pusha
mov
push
jno
pop
js
sub
ja
icebp
and
jns
jmp
pushf
jge
pop
push
jl
add
sub
add
jmp
shl
inc
mov
fucomp
call
out
lock
sub
or
add
fisttp
inc
pop
xchg
hlt
outs
mov
sbb
dec
pop
sti
mov
push
push
pop
js
pop
sub
lods
mov
jge
jo
movs
cmc
(bad)
jmp
xlat
in
mov
int3
push
int3
mov
xchg
mov
pop
call
mov
inc
inc
sub
add
(bad)
jmp
pop
pushf
sbb
imul
inc
clc
(bad)
call
jb
repz
jp
(bad)
pushf
cmp
das
stos
xor
jecxz
inc
jae
xchg
mov
sahf
movs
and
inc
pop
cmp
mov
add
pop
xlat
push
add
mov
jmp
push
pushf
aad
test
test
ins
and
dec
dec
or
mov
xor
jle
jl
mov
dec
ret
lods
push
mov
xchg
ret
xor
adc
cmc
jg
jmp
mov
daa
pusha
dec
and
adc
(bad)
cmp
inc
adc
sbb
sbb
push
shr
(bad)
call
pop
test
xor
inc
mov
je
aas
pop
push
stos
or
(bad)
inc
cmp
aaa
jo
std
mov
cld
and
sbb
fldenv
jmp
stos
dec
pop
ja
mov
repnz
int3
shl
fdivrp
adc
adc
and
movs
jae
sbb
pop
jl
pushf
stos
add
pop
push
mov
das
test
lods
xchg
xchg
push
cmps
add
call
xlat
pop
fcom
push
test
addr16
stos
inc
sbb
jo
aaa
xchg
push
sbb
cdq
mov
push
xchg
sub
stc
fs
jbe
outs
mov
mov
outs
pop
push
adc
jg
xor
jmp
ffree
test
push
stos
test
cmp
icebp
outs
clc
aam
shl
fst
test
(bad)
(bad)
mov
in
jl
mul
pop
int
cld
dec
inc
mov
(bad)
(bad)
call
jb
lods
pop
mov
adc
out
cmps
arpl
test
push
sub
mov
push
adc
fcos
(bad)
(bad)
(bad)
cmp
sar
adc
jge
push
stc
mov
mov
shl
cdq
loop
shr
(bad)
(bad)
dec
icebp
sub
fdivr
sub
iret
pusha
popa
push
and
pop
sar
(bad)
mov
or
movs
jbe
dec
sbb
dec
jb
(bad)
inc
cld
sub
jae
stos
popf
test
sbb
or
push
push
lds
pop
jbe
(bad)
xchg
(bad)
(bad)
(bad)
call
popa
(bad)
call
push
mov
and
mov
xchg
ror
mov
stc
push
add
jmp
data16
inc
adc
sbb
clc
jno
jl
mov
out
das
pop
cdq
pushf
jb
mov
mov
cld
imul
jbe
mov
cmp
push
out
repz
mov
(bad)
call
jle
gs
imul
mov
jl
(bad)
(bad)
(bad)
dec
push
push
popf
(bad)
mov
mov
and
(bad)
cmp
xor
push
or
xor
jb
(bad)
(bad)
(bad)
call
rol
xor
jge
test
sub
iret
popa
and
loope
fidiv
jb
(bad)
jmp
mov
cwde
ins
imul
lock
test
std
(bad)
jl
dec
paddusw
jo
iret
mov
out
icebp
(bad)
call
mov
clc
mov
xchg
call
sub
jo
out
or
jmp
or
(bad)
(bad)
(bad)
call
mov
bound
inc
scas
sbb
lea
cmp
imul
(bad)
(bad)
(bad)
dec
push
(bad)
out
jg
enter
pop
jp
mov
and
in
fwait
aam
leave
jne
or
lock
mov
movs
mov
(bad)
movs
call
push
push
data16
scas
mov
loop
jg
(bad)
jmp
mov
jmp
cmp
fadd
add
xchg
mov
inc
push
stos
sub
call
xchg
inc
scas
mov
inc
gs
(bad)
(bad)
mov
and
shl
bound
shl
out
popf
xlat
mov
xor
sbb
mov
fcomip
call
rol
movs
nop
push
inc
xchg
sub
add
(bad)
jg
dec
mov
in
fisttp
fdecstp
xor
cmp
push
scas
clc
(bad)
(bad)
mov
out
sbb
(bad)
mov
mov
jmp
test
(bad)
(bad)
call
in
mov
sub
sbb
add
add
daa
pop
int
cmp
sub
(bad)
jg
add
pushf
ss
ss
lods
in
hlt
jno
cmp
data16
xchg
sti
popa
add
mov
movs
mov
push
pop
popf
arpl
cmp
push
fsub
(bad)
dec
lahf
push
sbb
(bad)
jmp
xchg
addr16
adc
mov
mov
mov
ret
dec
inc
pop
loope
arpl
inc
je
jo
loop
jg
mov
xor
and
adc
scas
rol
stos
fwait
nop
dec
mov
push
(bad)
movs
imul
std
add
loop
(bad)
jle
add
sbb
imul
inc
in
(bad)
mov
out
and
scas
iret
jo
sub
and
inc
sbb
clc
gs
(bad)
jg
mov
inc
leave
(bad)
cwde
in
mov
inc
mov
aaa
xchg
sar
(bad)
(bad)
inc
sar
mov
cmc
push
cmc
aad
adc
scas
mov
mov
push
not
pop
imul
cs
mov
jecxz
inc
es
movs
sub
imul
cwde
push
pop
xor
mov
nop
pop
pop
(bad)
mov
add
pop
out
imul
pop
mul
(bad)
(bad)
inc
ins
mov
sbb
popf
mov
call
stc
sub
dec
push
nop
push
sbb
call
mov
test
mov
sub
(bad)
xor
sbb
(bad)
jmp
lea
mov
loop
js
lahf
sub
xchg
ss
add
push
pop
sahf
movs
adc
lods
push
lds
popf
(bad)
(bad)
(bad)
dec
stos
cmp
xchg
sbb
inc
mov
pop
cmp
mov
stos
retf
scas
push
pop
pushf
hlt
shl
cld
call
mov
in
inc
or
test
jmp
jmp
mov
mov
loopne
loope
pop
hlt
int
dec
lds
xchg
mov
lahf
repnz
mov
push
mov
jmp
inc
lock
fist
ins
mov
lods
mov
and
sbb
push
inc
(bad)
jmp
ss
je
test
outs
jl
cli
mov
retf
cwde
int
stos
aad
(bad)
(bad)
(bad)
dec
mov
pop
sbb
cmp
imul
int3
movs
pop
and
fdivr
(bad)
(bad)
call
or
jo
mov
mov
loop
dec
and
adc
sub
and
dec
dec
adc
mov
xchg
jl
mov
leave
inc
dec
sbb
(bad)
call
xor
dec
mov
test
dec
jae
mov
jle
not
jg
call
push
mov
daa
cmp
test
das
xchg
(bad)
jmp
outs
cli
(bad)
call
enter
mov
pop
mov
les
iret
scas
(bad)
push
and
(bad)
jmp
test
cmp
cmp
(bad)
jmp
mov
mov
out
ss
jnp
(bad)
(bad)
mov
arpl
xor
cdq
push
xchg
repnz
or
jmp
test
pop
pop
mov
call
inc
into
pop
test
cmp
mov
sar
mov
mov
lock
nop
adc
aam
icebp
(bad)
jg
push
mov
test
mov
sub
adc
mov
(bad)
(bad)
inc
mov
jge
xchg
jecxz
push
jae
cmp
xor
jno
loopne
pop
and
jl
mov
inc
(bad)
(bad)
mov
ss
xor
cdq
cmp
push
cs
fs
add
fdiv
or
mov
lahf
js
jb
cmp
(bad)
cmp
dec
mov
dec
inc
scas
clc
je
pop
daa
dec
stos
mov
or
dec
xor
push
xchg
into
sub
xchg
mov
cdq
ret
adc
or
js
mov
(bad)
(bad)
(bad)
push
out
xor
and
data16
cmps
iret
scas
sbb
ins
pop
inc
(bad)
pop
mov
inc
arpl
sub
clc
(bad)
jle
daa
outs
push
into
call
movs
call
call
dec
(bad)
fisttp
(bad)
mov
fidivr
jmp
shl
pop
and
(bad)
(bad)
(bad)
jmp
and
(bad)
not
test
(bad)
or
movs
int
push
sbb
(bad)
mov
xchg
fstp
mov
lea
aaa
out
fcmovnb
rol
div
mov
or
pop
jmp
sub
xlat
add
cmp
je
or
scas
push
stos
(bad)
(bad)
(bad)
jmp
xchg
push
pushf
mov
iret
dec
out
jbe
adc
(bad)
outs
mov
pop
xchg
jno
xor
(bad)
(bad)
(bad)
jmp
jbe
and
or
adc
sbb
shl
addr16
into
pop
jmp
in
dec
mov
fld
movs
je
(bad)
(bad)
call
push
mov
push
jge
or
or
jb
out
(bad)
dec
mov
rol
or
mov
xchg
mov
(bad)
dec
add
pushf
mov
jl
dec
or
mov
add
or
jne
(bad)
mov
(bad)
jg
push
mov
adc
mov
mov
xchg
sub
mov
push
call
jne
lds
(bad)
in
sub
adc
inc
dec
(bad)
out
sub
mov
hlt
into
adc
out
sub
add
xor
ret
(bad)
jg
xchg
or
es
cmc
sar
(bad)
outs
sbb
out
cli
outs
mov
inc
outs
jno
push
push
out
mov
call
jmp
xchg
imul
add
mov
sub
inc
mov
push
lea
or
lods
and
std
retf
call
scas
clc
push
and
(bad)
iret
mov
xlat
loopne
jg
loope
push
jae
(bad)
call
dec
cld
loopne
ds
sbb
jo
push
ins
scas
repz
mov
aaa
fadd
(bad)
lds
sbb
mov
pop
cmp
(bad)
repz
aaa
fwait
clc
cmp
push
cmp
iret
aam
ja
ss
(bad)
inc
cld
ret
adc
lock
cmp
xchg
cld
retf
pop
out
test
or
scas
or
aad
jbe
jnp
mov
mov
jg
cmc
mov
scas
sub
lock
dec
(bad)
loop
addr16
(bad)
jmp
pop
dec
shr
(bad)
in
mov
ins
(bad)
(bad)
fbld
loope
sbb
pop
sti
sbb
xchg
sbb
ins
nop
ret
bound
je
or
push
xchg
inc
mov
dec
sbb
rol
sub
mov
dec
(bad)
pusha
mov
dec
jg
jae
repz
retf
ins
rcl
(bad)
mov
rcl
mov
push
push
repz
mov
das
or
cmp
or
das
jae
(bad)
(bad)
inc
jl
ins
jmp
xchg
test
sub
and
mov
lock
cmp
loope
inc
loope
xor
int
pop
cmps
ret
gs
cmp
adc
adc
je
fcomip
call
mov
push
dec
out
push
popf
ror
ret
cmps
mov
sbb
adc
nop
xchg
xchg
out
(bad)
(bad)
(bad)
jp
retf
test
leave
test
popf
inc
mov
add
xor
stos
out
jg
pop
test
aas
mov
cli
in
adc
jle
xor
fdivr
cli
fdivrp
jg
or
and
dec
jecxz
out
bound
add
(bad)
inc
popf
pop
in
jne
mov
jno
mov
add
(bad)
push
ret
dec
jmp
(bad)
fistp
(bad)
clc
(bad)
in
cmp
jmp
sbb
jmp
sbb
add
mov
ficom
ret
or
mov
out
push
mov
jns
dec
mov
xchg
and
xor
cwde
mov
mov
or
sahf
inc
pop
add
mov
sbb
(bad)
cmp
xchg
shl
sahf
lods
pop
les
sub
or
push
data16
xchg
dec
loop
pop
movs
lock
jns
or
jp
mul
pop
(bad)
(bad)
(bad)
(bad)
fdivrp
ja
and
in
sub
inc
mov
jb
xchg
sbb
mov
fwait
(bad)
(bad)
(bad)
dec
push
mov
fcomip
outs
xchg
int
push
(bad)
sbb
rcr
test
jmp
inc
jmp
xchg
sub
out
cmc
mov
pop
push
add
push
mov
int3
test
retf
xchg
dec
cli
sub
mov
sbb
add
or
out
sbb
loope
xor
push
mov
(bad)
jmp
cdq
add
mov
je
or
xchg
das
fsubr
push
repnz
inc
fisttp
push
add
(bad)
adc
cmp
call
mov
vpsubb
pop
add
sbb
jne
and
(bad)
jg
js
sub
mov
scas
fs
stc
ss
iret
inc
in
movs
push
fwait
sub
mov
mov
lods
pop
cmps
out
cwde
lods
jl
xrelease
sub
push
sub
ror
fadd
fsub
bound
aam
jl
cdq
out
jae
mov
mov
and
or
push
mov
(bad)
(bad)
(bad)
fistp
cmp
retf
dec
jb
cs
mov
add
ss
jmp
(bad)
(bad)
fcomip
pop
ja
mov
add
adc
out
mov
and
sub
test
in
nop
dec
xchg
push
dec
mov
push
es
movs
(bad)
(bad)
(bad)
jmp
iret
pushf
cmps
outs
mov
mov
jmp
je
mov
add
sbb
aad
cli
sar
out
mov
jg
fistp
(bad)
pop
jne
(bad)
out
cli
and
loope
jnp
xor
pop
xchg
mov
push
in
out
fpatan
add
or
div
jmp
inc
jge
ss
iret
lahf
push
jno
dec
xor
fisttp
sbb
push
div
jmp
(bad)
(bad)
dec
mov
stos
jae
add
popf
scas
repnz
imul
cmp
inc
aad
into
push
iret
or
jmp
call
aas
pushf
dec
sub
cmp
push
mov
dec
mov
pop
mov
movs
imul
mov
popa
outs
pop
data16
lock
pop
jnp
jmp
ins
arpl
jne
pop
and
cli
movs
cld
pop
adc
pop
sar
pop
dec
dec
aad
mov
shr
(bad)
push
daa
xor
xor
jnp
je
mov
pop
in
fs
inc
out
mov
push
ret
xchg
dec
mov
mov
(bad)
dec
test
cmps
mov
inc
sub
jg
xlat
(bad)
inc
push
dec
sub
sbb
aam
adc
fwait
mov
sbb
in
(bad)
(bad)
call
rcl
ror
mov
xor
(bad)
mov
stos
mov
std
mov
pop
xchg
jl
sub
xor
mov
xor
cmp
pop
mov
pop
and
xlat
jg
push
sbb
inc
adc
or
pushf
call
xor
dec
mov
iret
sub
mov
xchg
mov
(bad)
(bad)
loope
xor
sub
shl
enter
xor
pop
mov
inc
or
(bad)
(bad)
(bad)
inc
shl
push
pop
aam
mov
dec
(bad)
retf
mov
push
push
inc
xchg
fisubr
dec
int3
dec
retf
adc
or
(bad)
(bad)
push
test
or
dec
mov
(bad)
xor
pusha
cmp
cmp
(bad)
pop
lock
add
mov
stc
xchg
dec
cmps
and
(bad)
xlat
fcomp
and
jns
lea
dec
ss
(bad)
dec
psubsw
call
ins
loop
outs
inc
xchg
imul
adc
push
xchg
icebp
sub
test
inc
pop
das
clc
(bad)
mov
lock
movs
mov
and
(bad)
push
or
jle
adc
ffreep
jae
pop
popa
xchg
ja
into
jg
dec
std
pop
fiadd
das
xor
xsave
mov
das
cli
call
nop
sbb
adc
in
adc
sbb
fwait
ret
daa
xor
int
(bad)
jg
fbstp
sbb
pop
dec
push
into
mov
cmps
xor
pop
xor
and
xchg
(bad)
(bad)
jmp
test
ss
inc
xchg
sub
dec
outs
shl
cs
push
mov
div
pusha
mov
clc
(bad)
arpl
std
sbb
aaa
jge
loopne
(bad)
dec
pop
cmps
sub
bound
cwde
std
inc
pop
mov
(bad)
ja
and
(bad)
mov
fiadd
xchg
sub
jle
not
mov
lahf
inc
dec
shl
jns
ss
(bad)
(bad)
jmp
pop
pop
test
xor
add
lods
outs
push
inc
movs
call
pop
lods
not
cmc
jnp
dec
mov
cs
dec
fs
das
and
lea
and
jmp
ror
cmp
mov
pop
dec
(bad)
mov
push
(bad)
std
pop
cli
popf
xchg
mov
fs
dec
sbb
pop
stos
ret
dec
mov
jp
int3
ret
imul
outs
(bad)
(bad)
mov
inc
sbb
js
retf
int3
inc
out
dec
lds
lods
sar
jmp
mov
pushf
mov
dec
cwde
pop
(bad)
and
ret
(bad)
dec
xor
jns
jp
or
fdivr
push
inc
neg
dec
inc
mov
xchg
jg
mov
lea
ins
add
(bad)
jg
or
stos
push
(bad)
and
lock
cmp
sub
(bad)
jmp
xchg
push
jge
lods
and
gs
or
jo
adc
data16
xlat
mov
lock
ror
ret
(bad)
jmp
add
stos
cmp
sub
js
pop
popf
xor
mov
add
ret
gs
jg
add
ror
cwde
inc
mov
inc
fld
aaa
std
(bad)
call
call
stc
(bad)
js
sbb
xchg
pop
popf
pop
fs
(bad)
(bad)
(bad)
call
call
pop
lods
xchg
and
pop
and
(bad)
sti
(bad)
ins
jmp
jne
outs
mov
mov
mov
sbb
call
call
cmp
push
movs
push
aad
lea
int
ror
cdq
xchg
pop
(bad)
into
mov
sbb
mov
dec
add
cli
ins
mov
in
fild
dec
push
or
xor
fucomi
lods
jno
dec
movs
icebp
(bad)
inc
call
push
out
jne
mov
es
les
das
and
dec
(bad)
mov
mov
scas
xchg
inc
sub
push
jle
dec
sub
(bad)
and
out
ret
or
push
xchg
sub
call
push
adc
xlat
ja
jne
xchg
out
add
jmp
cli
jmp
sahf
pop
dec
aas
fwait
mov
loope
xor
pop
xor
leave
and
sub
(bad)
(bad)
(bad)
dec
xchg
and
add
push
lar
xor
or
push
enter
push
fisttp
jl
test
das
or
ret
sub
mov
pushw
jmp
dec
sbb
(bad)
lahf
and
les
sub
sbb
xor
pop
daa
iret
xchg
inc
mov
jno
or
pop
sbb
sbb
pusha
add
fwait
inc
dec
rol
sbb
adc
data16
clc
(bad)
call
cwde
ror
or
pop
frstor
sahf
inc
ins
jge
mov
(bad)
dec
sbb
sbb
je
pop
je
pop
das
xchg
gs
jp
xchg
mov
add
xchg
add
or
push
jmp
push
movs
aam
(bad)
call
into
pop
jnp
jb
daa
adc
daa
adc
mov
cmp
(bad)
or
push
ss
inc
(bad)
jg
(bad)
and
(bad)
das
test
int3
sbb
cmps
push
adc
int3
jnp
je
mov
mov
pop
data16
test
nop
call
pushf
and
je
into
pop
mov
cmps
pop
leave
xchg
popa
jmp
call
bound
mov
cdq
mov
sar
sbb
push
jno
push
(bad)
sahf
add
inc
xor
pop
hlt
dec
mov
(bad)
imul
jbe
or
call
inc
cmc
mov
fwait
adc
push
movs
add
cld
out
and
inc
jno
je
dec
outs
aas
paddusw
lods
lds
ja
mov
(bad)
call
and
rol
xchg
lods
inc
sub
inc
xchg
and
je
les
fnstcw
imul
(bad)
mov
mov
icebp
xchg
sbb
and
clc
jb
pushf
or
movs
xor
or
icebp
(bad)
ficom
adc
cli
out
mov
xor
push
add
(bad)
(bad)
inc
inc
mov
into
cmp
dec
cld
loop
cmp
lds
push
icebp
sub
loope
lods
in
icebp
mov
repnz
(bad)
fiadd
push
in
mov
cmc
pop
cmp
mov
call
(bad)
daa
in
popa
iret
dec
ss
lock
div
loope
outs
sbb
mov
aas
jg
(bad)
(bad)
jmp
out
pop
lahf
mov
outs
std
and
adc
lea
adc
pop
sub
bound
mov
outs
call
ss
(bad)
dec
push
out
push
fcomp
xor
bound
scas
dec
push
adc
(bad)
mov
xchg
retf
rcr
enter
leave
ja
fld
mov
imul
dec
into
xor
cmps
rol
in
in
xor
xor
mov
aas
mov
loop
cmc
dec
push
jnp
(bad)
pop
dec
cmp
pop
xor
and
and
xchg
mov
mov
sbb
into
jmp
mov
(bad)
(bad)
mov
pop
mov
fs
movs
mov
ja
jae
inc
xchg
out
call
(bad)
(bad)
inc
mov
mov
stc
or
inc
js
mov
sbb
std
(bad)
(bad)
inc
(bad)
xchg
add
xchg
push
jne
in
ja
addr16
hlt
aaa
sub
mov
call
push
inc
inc
mov
fistp
jb
sub
push
shl
in
pop
xchg
mov
and
push
outs
test
push
mov
mov
fldl2e
xor
xor
dec
ins
fcmovnbe
fst
pusha
icebp
cmp
icebp
mov
mov
xchg
js
inc
inc
push
mov
(bad)
sub
push
push
push
inc
neg
pop
std
mov
cmp
mov
lock
std
das
rcr
(bad)
or
pop
xchg
rcr
aad
movs
mov
sbb
and
cmp
pop
jo
(bad)
into
pop
(bad)
(bad)
push
je
push
or
adc
push
sub
in
mov
mov
or
mov
add
mov
add
inc
sub
xor
add
jbe
test
dec
aam
dec
cmp
bound
iret
sub
jmp
(bad)
(bad)
call
cmp
out
push
cwde
xlat
fisttp
lods
cld
inc
shl
mov
js
(bad)
pop
(bad)
(bad)
(bad)
call
push
jg
add
stos
movs
pop
shl
imul
(bad)
fxch
sub
jl
ss
outs
xchg
(bad)
(bad)
(bad)
inc
push
jl
add
scas
rol
sub
sahf
outs
xor
pop
mov
movs
mov
mov
jae
lods
hlt
add
(bad)
(bad)
(bad)
call
cmp
adc
repnz
cmp
ins
ins
inc
jg
add
adc
mov
sbb
pop
mov
ret
les
stos
test
aad
call
jmp
leave
pop
outs
pop
and
nop
dec
daa
mov
xchg
adc
push
scas
xchg
dec
shr
mov
(bad)
inc
mov
pop
cmp
sbb
rol
jmp
or
(bad)
mov
push
data16
or
(bad)
call
mov
(bad)
(bad)
(bad)
dec
jae
cmp
jle
sbb
and
je
add
xchg
ret
pop
std
repz
hlt
shr
mov
mov
pusha
shl
call
shl
cmp
out
mov
push
ret
mov
out
pop
jb
(bad)
dec
mov
(bad)
(bad)
dec
pop
mov
bound
loop
pop
scas
ret
mov
xchg
int3
adc
mov
inc
out
pushf
mov
pop
lods
int
rcr
pop
and
(bad)
mov
call
xor
add
jg
test
inc
mov
jne
scas
and
imul
(bad)
(bad)
(bad)
push
dec
pop
pop
clc
out
pop
mov
sub
jl
adc
mov
mov
repz
mov
(bad)
(bad)
jmp
adc
add
pop
sub
or
test
idiv
test
ret
mov
(bad)
mov
mov
popa
mov
test
out
nop
mov
dec
(bad)
cmp
loopne
or
test
repnz
pop
fimul
mov
(bad)
(bad)
call
cmps
add
xor
push
xor
retf
xchg
mov
xchg
pop
mov
push
ins
add
out
xchg
mov
(bad)
stc
adc
ret
adc
(bad)
jg
lahf
add
in
xor
loope
ja
add
sbb
cld
(bad)
call
push
cmp
sub
ins
inc
fsub
shl
in
(bad)
pop
cmc
cdq
push
pop
jno
scas
mov
lahf
js
jbe
cmp
(bad)
(bad)
inc
outs
mov
pop
rcl
int
sti
sub
pop
lahf
inc
inc
cmp
lock
add
test
sbb
inc
pop
aaa
mov
data16
or
jmp
addr16
cmp
(bad)
call
paddb
push
call
sbb
push
rcl
pusha
sub
jb
xchg
out
bound
icebp
call
push
sub
out
pop
hlt
jbe
dec
aas
xchg
leave
lods
mov
bound
cs
retf
xchg
cli
ins
aam
repz
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
pushf
dec
jae
retf
fdiv
int3
lds
xor
mov
mov
mov
or
adc
push
and
ror
dec
sbb
fcom
test
(bad)
inc
ins
or
push
(bad)
neg
jg
mov
xor
pusha
daa
sbb
call
adc
xor
jae
mov
fs
cmp
sahf
daa
jo
mov
mov
retf
push
mov
arpl
pop
stos
jge
jo
retf
(bad)
jg
stos
and
dec
xor
clc
loopne
dec
std
(bad)
jmp
pop
cs
or
pushf
iret
pop
jmp
jbe
cld
(bad)
(bad)
fistp
imul
sub
in
adc
xor
xchg
xchg
lods
ror
retf
call
and
(bad)
push
xchg
imul
in
inc
mov
call
dec
movs
mov
add
arpl
mov
cmps
add
jnp
mov
(bad)
out
cld
popa
jl
int
popf
mov
neg
bnd
movs
sbb
in
(bad)
into
xlat
mov
(bad)
(bad)
call
ret
ins
sahf
iret
outs
aas
xor
pop
inc
mov
pop
out
mov
push
cmp
add
repz
mov
add
pop
push
push
xor
xlat
and
ds
loopne
stos
sub
into
in
in
(bad)
(bad)
jmp
scas
mov
aaa
scas
sbb
out
adc
leave
pushf
aam
xor
jg
(bad)
dec
xlat
pop
xor
cmp
xor
movs
fistp
mov
push
repnz
jge
out
add
(bad)
dec
dec
push
add
inc
cld
stos
sub
jne
or
(bad)
jg
adc
and
addr16
stos
push
je
add
int3
leave
add
inc
fs
mov
push
(bad)
(bad)
mov
cwde
inc
and
xchg
in
pop
fcomp
mov
mov
inc
push
add
pop
aaa
add
out
cli
push
and
aaa
aaa
inc
mov
mov
or
cmp
adc
(bad)
(bad)
dec
and
test
movs
not
mov
mov
fsub
push
(bad)
shl
bound
(bad)
(bad)
(bad)
dec
mov
push
ins
cmp
mov
xchg
test
int
mov
stos
inc
aas
lods
data16
scas
lahf
mov
test
inc
call
pop
add
pop
xchg
pop
add
mov
lock
dec
pop
(bad)
jg
(bad)
mov
dec
mov
loop
fiadd
les
fdivr
fwait
dec
mov
sbb
cmp
mov
es
push
mov
xor
fisttp
lods
xchg
retf
nop
das
inc
sub
pop
mov
retf
or
xlat
shr
test
(bad)
add
(bad)
(bad)
push
xor
dec
mov
pop
mov
or
dec
sub
push
fs
(bad)
(bad)
(bad)
fcmovnb
popa
sbb
mov
mov
sbb
mov
out
imul
dec
push
cmp
inc
jmp
jns
fs
scas
push
ret
loop
fld
xor
out
dec
int
add
(bad)
(bad)
call
test
lods
daa
out
ins
loop
icebp
ret
pop
hlt
jg
pop
xor
rcl
and
(bad)
fcmovb
imul
retf
cwde
imul
ins
cwde
push
lahf
jmp
stos
addr16
into
test
xor
mov
(bad)
(bad)
(bad)
jmp
lock
movs
xchg
inc
popf
jne
inc
cmps
loop
cdq
jecxz
and
push
out
adc
aaa
dec
imul
pop
hlt
jae
xchg
xchg
pop
sub
test
pop
mov
daa
jno
aas
jle
iret
ds
ret
xchg
lods
jnp
je
pusha
(bad)
test
inc
mov
icebp
xchg
mov
pop
test
std
sahf
rcr
inc
xchg
sti
jno
mov
les
cmp
enter
mov
iret
in
call
(bad)
(bad)
out
aas
test
aaa
aam
lock
jmp
call
inc
je
(bad)
scas
hlt
call
inc
rcl
(bad)
retf
cmps
cmp
xchg
cmp
sbb
fild
(bad)
(bad)
(bad)
jg
nop
cmps
mov
scas
mov
ins
push
jmp
mov
dec
mov
in
adc
(bad)
out
clc
jmp
out
xchg
das
or
lock
outs
lds
lods
cmps
mov
pop
jg
(bad)
jmp
sub
arpl
cmp
fcomp
mov
ins
in
jp
in
xchg
sub
(bad)
(bad)
call
push
jecxz
inc
cmps
adc
pop
dec
inc
lock
iret
in
cmps
aaa
clc
jg
adc
cmp
push
push
mov
cmp
out
mov
int
jb
in
int
adc
or
addr16
(bad)
(bad)
mov
mov
adc
fst
in
(bad)
(bad)
jmp
lods
dec
sub
sahf
xor
mov
movs
inc
xor
mov
jae
or
pop
mov
ret
(bad)
(bad)
push
cmp
dec
or
xchg
xchg
leave
mov
push
mov
mov
dec
lock
ja
retf
mov
test
jmp
adc
aad
adc
dec
iret
scas
cmps
aas
mov
call
pushf
out
pop
add
xchg
and
jmp
and
repnz
(bad)
(bad)
(bad)
dec
push
cli
mov
push
or
inc
adc
mov
pop
popf
leave
cmp
xor
(bad)
mov
clc
aad
(bad)
mov
mov
xor
test
cld
call
mov
test
mov
jg
lds
add
mov
mov
cmp
pusha
inc
and
imul
xor
int3
(bad)
(bad)
(bad)
dec
cmp
fsub
and
leave
lods
add
or
sub
sbb
pop
xchg
aaa
out
out
mov
sar
add
and
in
cmc
fs
adc
pusha
cmc
(bad)
(bad)
inc
mov
jb
(bad)
inc
jnp
or
inc
clc
mov
pop
sub
push
jbe
push
outs
xchg
push
xchg
(bad)
push
xchg
xchg
nop
sahf
(bad)
hlt
mov
sahf
inc
inc
test
sbb
pop
dec
aam
add
and
sub
push
loopne
int3
imul
or
jmp
sub
xchg
test
retf
retf
(bad)
(bad)
jg
push
pop
push
xchg
in
or
push
and
jb
and
loopne
mov
cli
lods
adc
add
(bad)
(bad)
mov
test
xchg
ret
mov
lock
jbe
fidivr
push
popa
aad
sub
mov
fnstcw
inc
cld
(bad)
jmp
or
outs
dec
xchg
mov
shl
or
pop
les
(bad)
(bad)
jg
cmp
pushf
repnz
ror
push
pop
xor
mov
sbb
mov
imul
(bad)
(bad)
(bad)
call
mov
ss
mov
loope
pop
mov
jno
stos
in
repz
std
fwait
mov
mov
jp
les
sar
xor
or
pop
(bad)
in
cmp
imul
xor
dec
cmps
jb
push
mov
pop
ss
jne
add
mov
xchg
inc
jnp
nop
xor
adc
mov
push
inc
xchg
imul
cdq
ret
mov
sub
(bad)
(bad)
(bad)
jmp
outs
mov
sbb
dec
and
and
aam
int3
pushf
pop
outs
movs
dec
pusha
and
fs
ja
nop
icebp
(bad)
fmul
cmp
dec
popf
push
dec
test
movs
icebp
mov
bound
data16
dec
les
aad
mov
(bad)
pop
popa
cmc
sbb
jmp
cmp
xchg
(bad)
cmc
loop
cld
ins
not
(bad)
(bad)
(bad)
ds
sbb
sub
xor
cmp
scas
adc
sub
mov
in
pop
pop
pop
cmp
repz
sbb
cmp
push
loop
mov
(bad)
fcomip
sahf
ds
inc
adc
inc
mov
mov
pop
cmp
jg
gs
ret
ret
(bad)
es
xor
call
js
rcl
cli
je
pop
jno
jns
mov
(bad)
jnp
sbb
repnz
pop
jb
iret
rol
pop
and
enter
(bad)
(bad)
jg
or
in
das
ret
fisttp
add
xor
je
call
out
mov
xchg
mov
scas
rcl
lods
jo
out
xchg
aam
icebp
jno
add
xor
(bad)
(bad)
(bad)
(bad)
jmp
xchg
retf
test
(bad)
fprem
pop
test
sub
xor
fnsave
js
outs
cs
fisttp
mov
jmp
push
test
add
push
out
add
in
or
ds
sbb
mov
sub
push
sti
sahf
leave
test
dec
mov
add
movs
mov
repnz
cwde
cli
jg
jp
std
jp
ins
out
cmp
loope
std
(bad)
(bad)
jmp
cmp
jecxz
xchg
pop
mov
jmp
leave
lea
sbb
jecxz
dec
inc
push
mov
pusha
push
inc
and
and
push
cmc
addr16
les
test
aaa
fnstcw
shl
(bad)
(bad)
(bad)
dec
push
shl
rol
xchg
into
xchg
jno
mov
push
xchg
and
(bad)
mov
and
and
repnz
pop
sbb
(bad)
and
rcl
clc
jne
sub
xor
(bad)
ja
xor
push
push
data16
imul
call
jle
and
nop
lods
add
xchg
sbb
pushf
add
mov
pslld
lods
(bad)
jg
out
arpl
daa
mov
cmp
sub
sbb
in
mov
xor
cmps
push
repnz
jae
sub
sbb
jg
sbb
(bad)
mov
mov
test
loopne
and
push
(bad)
(bad)
jmp
push
add
push
hlt
pop
loope
fst
jp
nop
xlat
lea
call
mov
bound
mov
hlt
mov
pop
ror
(bad)
(bad)
(bad)
inc
cld
ret
stc
jbe
loope
movs
jbe
mov
cdq
imul
aam
push
inc
cli
mov
pop
loop
test
and
mov
(bad)
fldenv
cmp
shl
test
int3
shl
push
sar
mov
inc
sbb
mov
push
mov
repnz
cli
mov
repz
or
jge
add
jge
imul
mov
and
xchg
lods
mov
(bad)
mov
je
mov
rcr
jmp
call
sub
mov
ret
loopne
hlt
dec
cwde
in
lods
mov
jp
rcr
pop
mov
jb
dec
xchg
or
in
adc
cwde
sbb
std
jmp
dec
loope
(bad)
xchg
int3
jl
cdq
mov
(bad)
(bad)
(bad)
dec
icebp
xor
mov
data16
rol
adc
and
pop
adc
outs
and
cmp
push
pop
pop
das
int3
and
adc
dec
adc
mov
push
and
jmp
mov
push
and
adc
dec
adc
js
add
les
mov
inc
pop
lock
mov
add
and
cmp
and
(bad)
push
div
popa
js
push
push
push
pushf
push
cli
dec
(bad)
(bad)
mov
fs
inc
push
les
inc
push
cdq
repz
and
(bad)
(bad)
(bad)
(bad)
(bad)
stc
lods
pop
dec
xchg
pop
push
xchg
sbb
adc
leave
repz
das
cmp
xor
(bad)
pushf
push
push
aam
or
std
or
or
je
adc
mov
mov
mov
mov
ret
xchg
or
or
(bad)
fsub
push
aaa
xchg
call
std
pop
xchg
jo
and
imul
mov
pop
fdivr
ds
call
call
pusha
push
and
inc
cmp
mov
pop
dec
repz
mov
daa
lock
ja
sar
jecxz
js
and
ins
sbb
jl
jge
aaa
inc
rcr
ret
jecxz
jne
xchg
shl
bound
pop
(bad)
call
lods
loope
mov
sbb
push
call
cmp
retf
mov
xor
jle
(bad)
(bad)
dec
outs
pavgw
or
into
pop
or
xor
cmps
mov
pop
pop
jbe
outs
sar
pop
push
push
mov
jmp
sbb
jecxz
jmp
(bad)
mov
push
rcr
nop
(bad)
(bad)
mov
(bad)
mov
adc
pop
dec
push
push
jae
pop
mov
fbld
and
add
add
(bad)
(bad)
push
shr
sbb
xor
add
push
sbb
sub
pop
pop
push
std
call
cwde
mov
xor
mov
fs
push
inc
pusha
outs
adc
add
push
shl
mov
(bad)
jg
stc
sahf
and
fldcw
cmp
jmp
iret
cmp
into
in
dec
sar
(bad)
(bad)
(bad)
jg
js
mov
or
fs
push
pop
in
imul
mov
dec
ins
inc
pusha
sbb
fsubr
mov
movs
cmp
xor
call
jge
(bad)
(bad)
jg
jne
xchg
push
imul
dec
add
push
mov
inc
(bad)
(bad)
(bad)
dec
in
outs
and
ins
out
cmp
mov
dec
jne
(bad)
out
or
dec
pop
add
repnz
rcr
mov
mov
hlt
std
sti
leave
push
mov
daa
call
push
and
mov
fild
out
lahf
sbb
cmp
cmp
mov
out
pop
hlt
loop
dec
push
(bad)
(bad)
(bad)
(bad)
cmp
aaa
hlt
(bad)
jl
mov
sub
inc
jbe
xchg
xor
adc
daa
and
xor
add
mov
dec
not
xchg
fwait
sub
ror
xor
push
les
dec
dec
popa
rcl
(bad)
(bad)
(bad)
(bad)
jp
data16
or
lock
and
dec
mov
popa
popf
jge
cmp
pop
fwait
les
fwait
(bad)
jmp
jbe
add
add
and
adc
cmp
pop
mov
and
(bad)
push
std
and
or
add
or
sbb
je
adc
inc
and
mov
std
movs
adc
ins
vpshuflw
xchg
dec
or
jb
movs
enter
std
mov
call
xor
in
mov
pusha
lahf
pop
sbb
cmps
sub
push
push
iret
dec
and
les
pop
loopne
xor
out
out
cmp
out
jb
lds
aaa
cmp
jg
xlat
nop
sar
add
pop
push
retf
(bad)
inc
cld
jo
pop
xor
mov
data16
lods
sub
adc
mov
pop
and
in
dec
jbe
out
mov
in
call
ret
and
mov
popf
or
xchg
pop
arpl
xchg
in
mov
lods
adc
xlat
add
adc
jmp
aaa
ret
mov
ret
loop
addr16
inc
pop
(bad)
(bad)
cmp
enter
jp
call
(bad)
(bad)
(bad)
fist
xor
dec
shl
push
and
jl
push
imul
or
(bad)
(bad)
(bad)
jmp
adc
ins
and
mov
mov
xchg
mov
inc
inc
and
sub
popf
retf
jb
rcl
(bad)
jg
movs
xchg
xor
xor
dec
jbe
mov
fstp
add
sbb
out
xchg
inc
div
inc
data16
inc
(bad)
push
je
fcomp
pop
mov
adc
inc
das
and
pop
cmp
(bad)
adc
gs
repnz
mov
adc
ror
ud0
sub
pop
in
sbb
xor
mov
jg
(bad)
call
sahf
pusha
mov
jmp
xchg
rcr
shr
sub
push
and
sar
add
in
lods
add
into
push
inc
int3
push
xor
movs
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
jl
icebp
sbb
sbb
loopne
mov
dec
or
test
(bad)
(bad)
(bad)
cmp
sbb
inc
fnstsw
dec
xchg
xchg
gs
test
stc
fsubrp
(bad)
sbb
mov
jp
sbb
pusha
or
or
inc
dec
cmp
pop
jne
pop
rcl
adc
sar
add
cmp
pusha
xor
stos
pop
cmp
and
aaa
or
sti
jmp
sub
je
push
jne
(bad)
iret
sti
cmp
adc
dec
retf
inc
sbb
inc
sub
push
(bad)
fidiv
(bad)
call
sahf
adc
cli
add
stc
push
in
xchg
inc
std
call
pop
push
push
adc
data16
(bad)
(bad)
jg
xor
test
adc
outs
jmp
pop
rcr
xchg
stc
outs
pop
dec
push
sbb
dec
mov
cld
mov
div
mul
inc
dec
xlat
(bad)
dec
int3
pop
cld
sub
inc
loope
add
jne
out
jg
jle
jno
loop
mov
dec
bound
inc
xchg
push
rol
dec
cmp
jle
(bad)
push
and
pop
jmp
add
inc
dec
ja
pop
xchg
(bad)
cs
scas
push
pop
inc
fwait
movs
bound
adc
int3
or
jnp
mov
sti
popa
push
dec
(bad)
jmp
mov
aad
sub
test
bound
shl
(bad)
(bad)
inc
pop
data16
test
mov
in
mov
and
(bad)
(bad)
mov
(bad)
loop
mov
add
imul
lods
pop
test
popa
jle
or
outs
js
call
aam
aaa
loope
nop
sbb
aam
(bad)
jmp
retf
into
xor
aas
xchg
mov
aas
std
xor
or
cmp
add
(bad)
(bad)
mov
dec
add
jmp
jb
push
jns
into
fld
xchg
idiv
fcomip
lea
dec
cmp
add
ficom
or
addr16
push
xchg
(bad)
stc
mov
inc
lods
rcr
hlt
stc
lods
fsub
xor
int
je
gs
clc
call
call
in
add
jmp
adc
fld
das
ds
adc
dec
push
jbe
jecxz
out
int3
(bad)
rcr
jg
(bad)
out
mov
ret
pop
inc
dec
imul
dec
xor
(bad)
push
das
mov
call
aam
test
sub
adc
jg
inc
std
mov
fisttp
out
in
(bad)
(bad)
(bad)
inc
rcr
fmul
cmp
jbe
mov
retf
push
pop
loop
adc
dec
push
jnp
cmp
dec
cdq
int
les
jno
xor
loope
pop
lock
int3
or
adc
popa
inc
or
add
aam
mov
fs
shl
mov
test
jbe
dec
push
ja
inc
movs
inc
rcr
jns
(bad)
jmp
inc
or
ret
test
movs
repnz
cmps
sti
lock
add
jg
loope
mov
sbb
int3
sub
mov
cld
adc
mov
jg
add
push
jmp
ss
pop
loopne
int
jns
sub
xor
cwde
add
(bad)
call
or
jo
xchg
and
mov
lahf
sbb
adc
push
and
dec
xchg
cmps
xor
jmp
inc
xchg
pop
cmps
test
dec
mov
in
jae
inc
int
lods
xor
mov
xchg
(bad)
(bad)
out
cli
icebp
icebp
cmps
outs
xchg
cmp
hlt
shr
inc
pop
ficom
neg
into
mov
inc
(bad)
inc
xor
fcomp
xchg
lods
out
cmp
(bad)
(bad)
(bad)
jecxz
cmps
es
cmps
(bad)
mov
pop
cli
mov
je
push
cmp
mov
ins
sbb
ja
xchg
(bad)
call
cmp
leave
xlat
repz
clc
(bad)
(bad)
jns
and
js
mov
cs
lods
lods
and
cwde
ror
dec
inc
or
dec
push
push
sbb
js
inc
pop
pop
imul
test
mov
aas
ds
test
(bad)
jmp
je
and
mov
ret
mov
mov
jg
inc
loop
lds
and
jecxz
addr16
fnstenv
or
ror
inc
cmp
cmp
jnp
mov
xchg
add
js
fsubp
(bad)
jg
retf
es
xor
repz
inc
lods
ret
mov
movs
add
dec
jg
sbb
(bad)
hlt
jb
mov
add
mov
dec
(bad)
dec
in
push
fwait
sar
push
jbe
call
ret
mov
(bad)
push
mov
das
xchg
mov
adc
cmp
enter
jb
call
push
mov
push
dec
pop
ins
pop
xor
or
mov
push
fwait
lds
repz
repz
sar
(bad)
int
xchg
mov
sbb
cdq
adc
fucomp
retfw
inc
mov
mov
sub
rol
jge
(bad)
(bad)
push
jg
not
lahf
clc
mov
pop
add
loop
ds
fs
push
cmc
dec
jecxz
into
and
cmp
mov
rcr
ins
add
cli
jg
sub
sbb
cwde
xchg
mov
(bad)
inc
out
pop
movs
mov
cs
jno
fisttp
movs
and
fwait
or
in
add
stos
ror
mov
adc
inc
test
(bad)
(bad)
(bad)
dec
mov
jmp
cmp
int
xchg
shl
xchg
test
test
aaa
push
inc
ror
sub
fcmove
jbe
jae
fsubr
xor
(bad)
(bad)
(bad)
jmp
xchg
xor
xchg
shr
jmp
mov
dec
(bad)
les
lods
sbb
jmp
(bad)
(bad)
call
pop
(bad)
ficomp
push
push
cmp
fcmovbe
jp
addr16
test
fldcw
push
(bad)
mov
out
(bad)
(bad)
(bad)
push
sar
in
jno
mov
adc
in
pop
aad
mov
dec
adc
lods
call
shl
cwde
add
inc
jmp
and
jmp
cli
ins
push
mov
inc
push
cli
xchg
cmc
dec
cmc
mov
mov
jecxz
stos
add
scas
push
test
(bad)
push
lds
stc
int
mov
jno
or
inc
sahf
push
les
ins
xor
es
dec
cmp
aad
jb
mov
(bad)
(bad)
call
mov
cwde
sub
lea
into
fdiv
data16
test
daa
(bad)
addr16
pop
dec
inc
push
or
or
jg
xchg
add
out
sub
cmp
xor
stos
xchg
dec
lea
lock
das
cld
shl
xor
daa
push
dec
jb
add
in
add
(bad)
(bad)
jmp
dec
in
sub
ret
ss
adc
cmp
pop
dec
push
rcr
dec
bound
popf
ins
loopne
mov
pusha
ret
or
shl
aam
mov
test
repnz
jmp
fnstcw
fwait
gs
inc
loope
out
sbb
pop
pop
adc
xor
push
sbb
dec
add
fimul
mov
sbb
xor
loope
icebp
jno
(bad)
(bad)
dec
pop
jl
xlat
lods
(bad)
push
popf
pop
xor
xor
sub
rcr
mov
jbe
inc
sub
das
xor
fnstenv
dec
dec
push
xor
pop
call
inc
loope
(bad)
(bad)
jmp
sub
xchg
nop
rol
adc
movs
dec
xchg
push
and
adc
jg
(bad)
call
xchg
bound
push
sbb
jmp
cdq
push
enter
enter
or
(bad)
jmp
popa
jp
jl
dec
imul
inc
dec
(bad)
sub
pop
mov
lods
sub
and
xor
pop
mov
cmp
sbb
out
ins
cmp
pop
dec
fwait
xchg
gs
push
(bad)
lds
(bad)
leave
adc
(bad)
(bad)
jg
stc
sbb
jo
sub
les
test
and
loope
fidivr
mov
dec
pop
(bad)
(bad)
(bad)
jmp
cmp
test
jae
sub
hlt
mov
xor
in
cmp
push
shl
xchg
(bad)
jg
test
dec
jnp
dec
inc
jno
push
retf
scas
inc
xchg
push
add
cld
jmp
int3
out
xchg
ficomp
and
and
(bad)
(bad)
jg
dec
mov
dec
or
mov
loope
retf
pop
mov
mov
movs
(bad)
jmp
sbb
xor
sbb
call
(bad)
jmp
aas
jnp
inc
movs
(bad)
pop
adc
pop
movs
or
xchg
(bad)
jp
xchg
or
rol
mov
or
sbb
clc
leave
push
pusha
daa
jl
xlat
xchg
pop
lods
jg
mov
dec
imul
nop
push
sub
pop
add
sbb
push
cmps
dec
xchg
inc
arpl
in
(bad)
dec
ror
jns
outs
or
xchg
dec
add
sub
xor
cmps
add
(bad)
(bad)
jmp
nop
and
test
and
mov
add
sbb
repz
mov
fisubr
sbb
test
ins
aam
test
fst
cmc
pop
sub
cs
mov
fsub
jecxz
inc
push
and
mov
not
mov
div
push
(bad)
jmp
(bad)
jg
jmp
loopne
mov
arpl
inc
mul
call
pop
ss
add
push
mov
push
sub
(bad)
icebp
or
(bad)
(bad)
(bad)
retf
ror
dec
ss
inc
jb
jecxz
out
inc
sub
(bad)
(bad)
push
xchg
mov
sub
int
fild
push
push
xor
mov
out
xor
sub
mov
ds
mov
or
xchg
popa
daa
xlat
xchg
shl
jecxz
xor
mov
push
aad
or
sbb
xchg
dec
inc
popa
xor
out
jg
cdq
adc
jmp
(bad)
(bad)
(bad)
jns
mov
test
(bad)
cmp
pop
mov
inc
and
and
outs
jb
push
pop
sub
cmps
push
retf
xor
(bad)
(bad)
push
leave
or
fadd
rcl
mov
out
fmul
mov
push
xchg
mov
(bad)
out
mov
call
test
loope
repnz
(bad)
mov
adc
es
mov
call
add
fwait
pop
dec
leave
ret
(bad)
cmp
sub
jmp
in
sti
inc
shr
pop
shl
sti
or
add
js
mov
add
gs
mov
sbb
movs
pop
dec
mov
sti
mov
in
fs
xchg
arpl
call
dec
loopne
push
push
mov
pop
in
cmp
pop
pop
aad
icebp
and
pop
inc
cmc
xchg
cmp
jmp
stos
mov
pop
int3
outs
bound
test
ror
jle
adc
mov
(bad)
(bad)
call
jge
dec
hlt
ja
je
movs
inc
xchg
fsubr
dec
jno
xchg
popa
ins
fmul
cmps
out
ss
call
sar
or
add
lahf
repnz
pop
add
(bad)
(bad)
push
gs
jo
das
mov
leave
xor
je
dec
dec
cmp
ret
scas
ins
bnd
sub
jg
(bad)
call
pop
push
pushf
mov
cmp
cmps
ins
jp
outs
jbe
ss
fdivrp
(bad)
(bad)
call
jbe
add
jno
es
hlt
inc
(bad)
pop
mov
jnp
adc
push
ins
cmp
stos
(bad)
(bad)
std
lea
into
inc
test
pop
mov
fst
pop
(bad)
test
sbb
pextrw
jo
inc
lods
add
popa
jecxz
sbb
ins
inc
jmp
fbstp
jbe
(bad)
(bad)
dec
cmp
aad
outs
lds
(bad)
fldcw
int
push
push
xchg
into
dec
inc
jne
(bad)
inc
je
fs
enter
gs
out
test
test
push
xchg
inc
push
or
fwait
sub
sub
or
sub
mov
jb
cld
inc
es
bound
fsubp
int
pop
pushf
movhps
int3
xchg
fild
mov
popf
add
rcr
mov
jmp
rcl
neg
jl
jle
xor
div
ficomp
and
cmp
enter
push
xor
in
jnp
dec
pop
pop
pop
ret
cdq
lds
in
mov
call
cld
pop
pop
enter
jle
sub
int3
and
retf
stos
adc
dec
pop
das
mov
out
adc
xchg
cli
inc
sub
loopne
sub
clc
test
popf
call
scas
push
xor
scas
rcr
push
(bad)
(bad)
(bad)
jmp
cmps
jae
rcr
xor
pop
gs
test
xchg
ja
int
pop
xchg
jmp
clc
fwait
dec
jg
pop
ret
inc
dec
cmp
(bad)
fdivr
(bad)
jnp
int3
or
mov
test
std
jmp
addr16
(bad)
call
jns
hlt
jp
push
adc
dec
cmps
inc
mov
aam
repz
xor
(bad)
(bad)
(bad)
dec
inc
or
xchg
mov
and
push
test
xlat
and
and
adc
sbb
psubb
(bad)
dec
(bad)
cmp
out
sub
jne
add
adc
mov
inc
(bad)
and
sbb
stos
daa
xchg
scas
push
stos
sar
mov
sub
xchg
ret
adc
and
mov
jmp
sbb
push
(bad)
(bad)
(bad)
dec
jl
fs
push
fimul
int
cmp
cmp
mov
adc
aad
(bad)
fdivr
div
mov
jl
out
mov
pop
xchg
mov
and
out
sar
aaa
cld
cmp
jne
dec
dec
mov
and
xor
mov
fcomip
(bad)
call
push
repnz
ret
xchg
(bad)
test
inc
push
jae
jle
in
add
sub
(bad)
js
push
cwde
inc
pop
(bad)
mov
aaa
cld
jg
call
sbb
jge
or
and
dec
or
add
lock
jns
sub
js
jno
push
push
aam
pop
sub
jnp
(bad)
(bad)
(bad)
call
mov
and
push
adc
inc
jp
adc
mov
push
into
mov
js
push
adc
in
jl
add
or
xor
fnstenv
or
cli
cmps
inc
jo
jle
rcl
(bad)
and
(bad)
jg
fidivr
or
mov
push
clc
jne
daa
lock
ss
call
jb
mov
dec
sbb
sub
hlt
jmp
xchg
pop
scas
xchg
iret
adc
and
sub
add
scas
pop
push
push
sub
cmps
test
loop
or
adc
rol
loopne
rol
fmul
mov
sub
(bad)
(bad)
inc
sahf
rcl
xor
dec
(bad)
in
add
imul
ds
adc
pop
sub
push
mov
jl
outs
in
push
int
dec
xchg
jmp
(bad)
(bad)
push
pusha
fsub
xchg
sbb
lea
stos
cmc
sbb
imul
xchg
add
mov
mov
imul
mov
mov
jne
jle
xchg
out
cmp
fcomip
mov
push
mov
jne
mov
dec
or
adc
(bad)
jae
(bad)
(bad)
call
movs
stos
fpatan
sbb
fcmove
xor
js
mov
xlat
es
and
xlat
lahf
or
fwait
mul
div
fisttp
mov
dec
adc
cmps
ja
mov
sub
sbb
(bad)
mov
push
xor
(bad)
or
pop
push
mov
(bad)
jg
lods
xchg
(bad)
in
test
dec
outs
dec
cs
pushf
add
(bad)
jg
(bad)
cmp
jbe
aad
js
cmp
mov
mov
in
rol
(bad)
call
xchg
pop
dec
lds
push
xor
dec
jp
ins
(bad)
(bad)
call
pop
pop
pop
inc
out
in
js
ja
out
popa
mov
cmp
mov
jg
mov
adc
sbb
scas
gs
mov
scas
xchg
leave
mov
rcl
(bad)
call
xor
sbb
popa
test
rcl
sub
ror
mov
(bad)
xor
dec
jns
pushf
xchg
aam
sub
es
jg
add
fadd
popa
pusha
jbe
jmp
dec
jecxz
mov
lds
jle
scas
call
jb
adc
stos
add
out
dec
daa
scas
jg
add
xchg
repnz
jo
into
sbb
jbe
inc
fild
mov
pop
push
fs
sub
cld
pop
leave
cli
cmp
(bad)
call
jno
(bad)
add
dec
cmc
xchg
sub
sti
outs
scas
inc
mov
stc
ja
xchg
in
lods
lods
and
pusha
or
call
xor
test
ficomp
jmp
xlat
pop
pop
ffree
enter
mov
stos
mov
dec
jecxz
jl
retf
inc
ss
or
(bad)
(bad)
(bad)
call
xchg
js
cmc
xchg
adc
shl
repnz
inc
es
pop
dec
call
adc
add
jle
test
ss
(bad)
jmp
repz
dec
push
rcl
adc
(bad)
jo
(bad)
(bad)
(bad)
(bad)
jmp
cwde
jmp
cdq
jl
xor
jbe
test
or
arpl
(bad)
call
pusha
fwait
and
mov
cmp
dec
push
enter
xor
jle
inc
jg
(bad)
call
shl
scas
xchg
test
mov
or
call
fiadd
push
or
(bad)
jg
dec
int
lods
and
cmc
imul
imul
(bad)
fbld
add
sbb
pop
pushf
cli
sbb
mov
(bad)
(bad)
clc
jno
xchg
pop
gs
xor
dec
push
mov
pop
add
pop
fdivr
mov
fld
(bad)
(bad)
(bad)
call
xchg
retf
jmp
push
cmp
repz
push
sub
icebp
test
push
call
sbb
sbb
dec
inc
pop
dec
cmp
(bad)
fcomip
call
imul
fimul
push
cli
(bad)
adc
mov
jae
inc
sbb
xchg
movs
(bad)
(bad)
push
mov
mov
pop
out
or
rcr
out
out
pop
adc
ret
mul
cli
(bad)
jg
cmp
mov
(bad)
push
jmp
jmp
test
ins
xor
mov
xchg
int
xchg
(bad)
(bad)
jmp
nop
movs
std
xor
mov
ret
arpl
sar
pop
data16
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
push
rol
and
inc
xor
mov
out
hlt
sbb
cmp
call
(bad)
cld
xchg
add
mov
fbstp
sbb
imul
(bad)
fbld
push
lods
lods
sub
scas
dec
xchg
shl
adc
jae
(bad)
(bad)
dec
int3
push
jge
push
cmp
je
jp
into
xchg
inc
sbb
nop
ins
je
sbb
mov
(bad)
(bad)
call
push
xor
sub
add
adc
adc
retf
pop
and
(bad)
pop
rcl
cmp
inc
rcr
daa
xor
daa
fxam
push
xchg
jae
call
mov
add
adc
lahf
mov
arpl
jbe
push
push
nop
call
sti
(bad)
cmc
fwait
mov
sub
mov
(bad)
call
pop
test
xchg
jnp
ins
leave
(bad)
xor
shl
(bad)
test
and
cld
push
fs
out
inc
pop
call
cmps
or
(bad)
jg
ret
iret
xchg
ret
das
rcr
arpl
sbb
test
pop
pop
pop
dec
loop
cld
or
das
scas
and
scas
push
dec
nop
sbb
xor
cs
mov
outs
pop
sbb
add
and
in
xchg
and
pop
lods
lahf
sbb
mov
cmp
(bad)
jp
inc
leave
pop
push
push
(bad)
mov
sti
or
mov
xor
test
mov
push
(bad)
pushf
pop
and
mov
cmp
das
out
push
lods
mov
adc
(bad)
cmp
repnz
sbb
fs
sbb
xlat
xor
(bad)
(bad)
(bad)
dec
mov
adc
cwde
adc
cmp
loopne
mov
(bad)
(bad)
(bad)
(bad)
mov
psrad
push
test
ss
inc
dec
adc
(bad)
(bad)
(bad)
dec
mov
dec
in
and
and
pop
imul
outs
pusha
mov
dec
push
pop
xchg
mov
dec
pusha
cmp
or
(bad)
jmp
and
cmps
enter
xchg
int3
test
mov
and
ins
pop
jnp
out
rcr
fsubr
clc
iret
(bad)
sbb
das
ins
loopne
sub
inc
cmp
cmps
lahf
push
mov
or
xor
jb
aas
jmp
cld
(bad)
in
outs
mov
add
add
sub
or
xor
mov
push
dec
leave
sbb
or
xor
sub
pop
(bad)
in
and
cmp
dec
(bad)
(bad)
mov
xor
xchg
cmp
sahf
xchg
fist
jo
inc
mov
clc
push
paddd
pop
fild
mov
jo
mov
shl
pop
cmp
ret
xchg
mov
cwde
inc
xor
xor
push
outs
clc
inc
test
ja
mov
popa
mov
mov
mov
shr
fiadd
sbb
nop
pop
dec
mov
dec
dec
jo
(bad)
(bad)
inc
push
movs
sub
mov
dec
mov
jp
sahf
add
sub
ror
stos
mov
add
cmp
(bad)
call
mov
lods
lea
int3
adc
mov
or
(bad)
(bad)
(bad)
call
jno
mov
out
cwde
shl
ret
int3
adc
fmulp
adc
or
adc
clc
(bad)
(bad)
dec
pop
pop
pop
sahf
js
push
(bad)
jle
js
jmp
or
lock
imul
mov
cld
pop
lock
pop
adc
pop
sar
inc
inc
push
xchg
adc
push
lock
(bad)
jg
jbe
lea
ss
lds
add
movs
pop
mov
repnz
mov
mov
push
inc
rcl
mov
push
push
and
enter
(bad)
(bad)
(bad)
mov
addr16
push
jne
scas
hlt
cmp
dec
hlt
jge
out
test
adc
cmp
or
inc
mov
ror
pushf
rcr
es
pop
xchg
in
pop
retf
xor
(bad)
call
stc
pop
mov
in
mov
xchg
mov
ja
adc
xor
rcr
add
repnz
(bad)
(bad)
call
xor
fsub
hlt
rol
gs
xor
js
mov
mov
sar
std
mov
ss
jp
out
fiadd
(bad)
(bad)
call
jno
fwait
dec
or
xor
aaa
mov
dec
push
aad
(bad)
(bad)
(bad)
jg
cmps
inc
jmp
cmps
rcl
mov
sub
mov
mov
pop
mov
inc
mov
xchg
mov
mov
dec
xchg
(bad)
fbld
adc
ret
or
dec
scas
gs
ins
pop
push
daa
iret
cmps
cmp
jmp
xchg
std
jecxz
jnp
in
cmp
pop
sub
adc
jge
out
(bad)
(bad)
(bad)
push
xlat
bnd
or
sbb
jecxz
mov
mov
dec
(bad)
int
outs
lods
dec
cdq
sub
add
iret
push
jecxz
retf
in
cld
jg
sub
popf
fwait
lds
inc
ss
int
scas
(bad)
call
into
adc
movs
mov
xchg
(bad)
jmp
cmps
mov
(bad)
(bad)
call
bound
mov
repz
imul
inc
jae
fidivr
stos
jmp
inc
clc
adc
gs
add
adc
pop
sub
lods
loop
add
cs
fbld
jge
xor
pop
ins
dec
pop
out
sub
je
sbb
cmp
cmp
mov
inc
cld
inc
outs
xchg
ds
cdq
popf
cli
aad
(bad)
mov
or
adc
jbe
mov
mov
out
scas
xchg
std
ins
sub
jmp
scas
push
mov
call
add
pusha
xchg
cmp
stos
jo
(bad)
(bad)
jmp
dec
jmp
rcr
stos
xbegin
jmp
scas
loope
arpl
(bad)
(bad)
(bad)
jg
fs
popaw
sub
dec
mov
into
loopne
mov
lock
inc
int3
movs
xor
(bad)
(bad)
(bad)
mov
out
inc
outs
pop
add
pop
jae
xor
mov
jb
jmp
nop
cmc
push
aam
xor
je
dec
ror
push
pop
fs
xchg
pop
test
leave
sbb
cmp
cmps
ins
xor
sub
loope
sbb
(bad)
(bad)
jg
push
fs
cwde
mov
xor
sbb
xchg
pop
dec
dec
adc
scas
(bad)
(bad)
(bad)
call
popa
into
scas
inc
stos
xor
inc
movs
push
jno
(bad)
sbb
mov
mov
or
movs
(bad)
mov
mov
clc
lods
dec
jg
(bad)
popf
cmp
inc
in
sbb
inc
enter
in
xor
data16
mov
ins
pop
push
sbb
ret
aam
call
fwait
sbb
int
iret
pushf
retf
sub
stos
mov
xor
(bad)
mov
cmp
div
adc
dec
push
mov
inc
fnsave
fcom
push
adc
stc
call
mov
cmc
dec
jp
push
or
mov
mov
repz
dec
(bad)
icebp
mov
sub
cmc
add
xchg
test
mov
xor
cmp
ja
or
inc
or
or
test
mov
lahf
pop
(bad)
jg
(bad)
mov
xor
daa
jnp
mov
xor
inc
stos
in
xchg
outs
pusha
jns
(bad)
fdivr
fbld
sub
sahf
sub
or
or
mov
or
sub
push
pop
cmp
jl
fiadd
mov
shl
(bad)
(bad)
(bad)
call
jne
(bad)
(bad)
fdivr
pop
adc
adc
ss
in
ret
xchg
xchg
or
loopne
and
ja
and
loopne
(bad)
(bad)
jmp
and
push
jae
mov
xor
cmp
jmp
pop
mov
fwait
or
sahf
mov
(bad)
dec
retf
cmp
sbb
cmps
add
and
dec
inc
jmp
inc
jnp
aad
loop
nop
fwait
(bad)
inc
icebp
xchg
dec
lock
call
xor
push
and
xlat
dec
jbe
sub
ja
dec
dec
sbb
jl
addr16
adc
pushf
adc
jg
nop
mov
pop
sbb
mov
(bad)
(bad)
dec
and
and
xchg
xor
or
add
test
stc
mov
fsubr
pop
or
mov
add
inc
sub
(bad)
(bad)
call
cmps
imul
jne
xchg
jp
adc
inc
xor
or
xchg
mov
jbe
test
and
(bad)
call
jecxz
mov
jbe
xor
sub
mov
aam
xchg
sub
rcr
dec
add
push
cmps
xor
ud0
(bad)
(bad)
(bad)
cmp
inc
dec
pop
movs
in
pop
icebp
not
shr
in
pop
stc
fldenv
inc
or
adc
cs
rcr
dec
inc
in
push
push
or
inc
ss
push
adc
ds
(bad)
push
call
xor
mov
jae
icebp
inc
cmp
sbb
mov
dec
arpl
(bad)
jg
sbb
call
push
push
push
xor
push
imul
mov
call
(bad)
inc
xlat
mov
(bad)
in
out
mov
jne
and
(bad)
mov
rcr
inc
and
pop
mov
out
add
sub
jmp
nop
(bad)
in
daa
fwait
jo
jle
xor
(bad)
sub
push
sub
aam
in
(bad)
call
lods
enter
push
mov
adc
mov
(bad)
(bad)
(bad)
dec
(bad)
daa
and
jge
pushf
les
mov
addr16
mov
lock
xor
aam
call
fstp
add
aas
add
(bad)
(bad)
call
scas
mov
(bad)
dec
data16
mov
les
xor
push
sub
lock
pop
and
les
add
sub
inc
inc
hlt
mov
clc
sub
pop
pop
xchg
(bad)
(bad)
fbstp
lods
sub
gs
jg
inc
popf
inc
mov
or
in
dec
mov
int
xor
arpl
(bad)
fcomp
push
into
push
mov
ror
rol
fmulp
push
mov
xchg
fnstenv
adc
or
(bad)
jmp
mov
xor
test
daa
inc
aas
xchg
sub
xchg
dec
lock
fld
mov
xchg
jno
dec
xchg
shr
adc
push
and
inc
mov
ss
imul
stos
popa
jp
xor
in
call
rol
repnz
out
dec
push
mov
pop
and
test
mov
push
sbb
icebp
(bad)
dec
les
inc
pop
mov
cwde
add
inc
push
mov
jmp
(bad)
call
loop
ret
inc
xor
sbb
shl
jmp
add
(bad)
call
cs
rol
mov
inc
xchg
or
jl
mov
jo
xchg
loop
scas
adc
mov
xchg
(bad)
(bad)
(bad)
jmp
int3
movs
stos
sub
sbb
shl
mov
sub
dec
int
fcom
dec
add
xor
dec
mov
shl
(bad)
in
aas
(bad)
hlt
jne
call
fwait
mov
mov
or
mov
pusha
aam
loop
cmp
jg
jmp
retf
xor
loop
jp
loope
cli
push
ret
cmp
ret
dec
xchg
mov
jmp
imul
stos
lock
adc
div
shl
call
add
arpl
out
jne
xchg
mov
mov
jo
(bad)
(bad)
jg
xor
jae
retf
mov
and
mov
cld
add
(bad)
adc
push
jg
or
mov
clc
lds
fbld
int3
push
inc
call
jae
shl
je
(bad)
dec
push
call
clc
fadd
bound
nop
pop
adc
(bad)
(bad)
(bad)
inc
xor
mov
fwait
cli
mov
jo
cmps
xchg
ffreep
jns
dec
int
ins
xchg
xlat
ja
sub
aaa
cdq
sar
cmp
(bad)
ss
mov
pop
cs
(bad)
(bad)
(bad)
call
xor
mov
mov
repz
xor
xor
call
(bad)
(bad)
(bad)
(bad)
mov
jno
scas
sbb
aas
cdq
test
xor
dec
mov
jne
cmc
(bad)
stos
inc
mov
aaa
dec
bsr
cmp
(bad)
call
bound
rcl
into
lods
xor
sub
xchg
push
rcl
adc
push
mov
sub
(bad)
(bad)
jmp
retf
sub
fnstcw
cdq
or
iret
frstor
jp
push
fbld
pop
inc
xor
mov
adc
(bad)
(bad)
(bad)
scas
push
bound
dec
adc
and
jbe
and
adc
mov
xchg
test
sbb
imul
add
and
(bad)
(bad)
(bad)
(bad)
mov
jp
adc
xor
out
and
pop
call
fwait
sbb
popa
cmp
(bad)
dec
rcr
aaa
repz
cmc
xchg
dec
mov
pop
scas
and
jecxz
loop
jbe
(bad)
loopne
cmps
(bad)
(bad)
(bad)
call
(bad)
xchg
movs
mov
mov
popa
mov
push
(bad)
call
idiv
shr
js
(bad)
(bad)
(bad)
jmp
jp
and
aaa
or
les
stos
hlt
jle
aad
clc
pop
adc
adc
fbld
push
call
out
push
and
jae
or
or
push
pop
mov
clc
mov
call
std
pop
hlt
add
add
outs
jp
push
dec
jo
jp
sbb
dec
or
(bad)
inc
int
sahf
sub
call
pmaxub
(bad)
sbb
(bad)
call
fdiv
out
ja
mov
pop
pop
jp
or
mov
push
call
(bad)
jmp
data16
and
pop
cmp
mov
retf
mov
xor
inc
test
add
(bad)
(bad)
inc
jae
adc
lods
test
test
leave
shl
lods
adc
int
xchg
xchg
ins
pusha
cmp
pop
mov
jmp
jo
mov
clc
(bad)
(bad)
dec
xor
push
imul
mov
mov
pusha
fld
frstor
test
xchg
(bad)
(bad)
jmp
push
push
sahf
loope
sbb
push
ds
in
sub
jmp
(bad)
(bad)
(bad)
call
aad
mov
jg
fwait
jmp
mov
fdiv
jne
imul
pop
icebp
(bad)
call
inc
stos
cmps
popa
neg
rcr
in
dec
push
push
addr16
cli
inc
stos
pop
in
or
lods
cmp
cli
mov
(bad)
dec
cmp
test
xor
mov
xor
enter
sbb
jg
ins
cmps
pop
push
jecxz
lods
jno
and
fbld
mov
(bad)
add
jnp
pop
fdivr
push
inc
cli
shl
xchg
xor
pop
dec
mov
(bad)
fistp
stc
jns
xchg
enterw
mov
pop
ret
jb
sbb
mov
jle
xchg
out
(bad)
fdivr
(bad)
out
mov
or
dec
movs
jmp
inc
cmps
in
jecxz
call
lahf
cmp
(bad)
pushf
mov
cmp
sbb
or
mov
rcl
push
fwait
xchg
add
sub
js
inc
call
aaa
jmp
cmp
into
lods
mov
ins
inc
sbb
(bad)
fisttp
mov
mov
cwde
pop
pop
xlat
movs
movs
pop
int
inc
ret
xlat
aaa
std
nop
dec
xchg
shl
mov
jmp
inc
sar
test
inc
push
pop
fidivr
add
sub
inc
fs
jmp
xchg
ins
xor
sub
jb
je
dec
cmp
ror
xchg
(bad)
jp
xor
hlt
fcmovb
mov
shr
mov
inc
in
mov
bound
call
mov
jge
fild
sub
(bad)
call
xchg
adc
lds
add
nop
or
jae
aaa
sub
mov
cmp
rcl
jb
jp
mov
mov
stos
mov
jb
or
(bad)
fild
pop
sub
js
cli
ss
or
(bad)
(bad)
(bad)
aas
mov
nop
cmp
cld
outs
stos
aad
jno
xor
ret
popa
sbb
ss
push
xchg
dec
mov
fidiv
mov
data16
out
out
mov
stos
add
sub
stos
cwde
movd
dec
jo
inc
(bad)
mov
sar
inc
rcr
or
xchg
ja
(bad)
jb
hlt
call
push
call
mov
jecxz
xchg
ins
frstor
add
adc
inc
and
popa
sbb
(bad)
mov
jae
xor
cwde
bound
sub
mov
(bad)
(bad)
(bad)
mov
inc
mov
sbb
aad
pop
and
sar
(bad)
jnp
push
pushf
(bad)
(bad)
(bad)
dec
sub
sbb
xchg
stos
(bad)
sar
adc
push
out
lods
test
fwait
call
jmp
mov
(bad)
fild
adc
scas
shr
jns
out
cmp
(bad)
call
xchg
add
retf
cmps
sub
pop
pushf
pushf
ja
test
in
pop
add
dec
les
inc
push
sub
mov
pop
xchg
pop
inc
or
xor
jmp
imul
mov
gs
call
(bad)
(bad)
inc
cmp
stos
mov
pop
inc
popa
test
popf
adc
ins
int
lock
jmp
inc
mov
neg
call
scas
jne
adc
pop
jmp
fsubp
jge
scas
call
mov
sub
or
jmp
mov
jne
add
mov
inc
jbe
sub
es
fiadd
sbb
mov
cli
xchg
pop
(bad)
mov
add
jne
cs
sub
mov
jg
cmp
sbb
call
inc
push
arpl
inc
xchg
xchg
and
(bad)
(bad)
call
dec
in
mov
fmul
js
mov
popa
imul
pushf
add
(bad)
(bad)
push
mov
leave
pusha
push
(bad)
cmc
pop
pop
pop
mov
gs
adc
cmps
rcl
jmp
adc
dec
gs
push
aad
and
imul
fs
dec
pop
test
jae
mov
add
mov
int
js
xor
xchg
ins
repz
in
(bad)
call
fdivr
jg
fs
xlat
jb
cmps
xchg
stos
mov
ja
cmp
add
add
mov
cmp
cmp
sbb
xchg
mov
iret
dec
push
js
push
xor
mov
loope
lds
outs
xor
mov
cmc
arpl
dec
xchg
push
addr16
aas
fsub
int3
retf
dec
pop
imul
jo
xchg
pop
in
fcom
ja
add
test
inc
ds
(bad)
(bad)
(bad)
(bad)
dec
pop
cdq
sbb
jae
push
xchg
mov
lahf
pop
outs
cli
addr16
adc
call
in
xchg
test
gs
(bad)
inc
mov
jecxz
xchg
inc
jp
or
mov
hlt
fist
adc
and
pushf
push
dec
mov
imul
ret
fdiv
jle
or
xchg
arpl
adc
dec
nop
xor
pop
gs
(bad)
jmp
jno
jl
jb
mov
and
fld
adc
jp
dec
dec
icebp
sar
adc
loope
sbb
mov
cli
ja
xor
mov
shl
out
or
jo
bnd
and
pop
mov
sbb
mov
cld
push
out
iret
jae
push
add
ja
push
fs
popf
(bad)
cmp
(bad)
(bad)
(bad)
push
enter
jbe
mov
outs
add
inc
das
pop
sub
jae
lds
call
repz
mov
pop
retf
loopne
call
std
das
cwde
enter
or
add
clc
xchg
arpl
mov
pop
inc
dec
movs
leave
cwde
into
scas
addr16
push
aam
or
mov
push
lock
pushf
mov
nop
test
scas
adc
jge
aaa
sbb
jae
(bad)
cmp
xchg
ret
cwde
rcr
fs
push
xchg
fldl2t
sbb
imul
sbb
(bad)
call
mov
nop
out
cmps
and
jno
test
fs
cmps
sub
lahf
mov
jg
mov
jmp
xchg
out
sbb
loope
mov
pusha
jbe
(bad)
out
xor
cmp
cdq
(bad)
(bad)
(bad)
(bad)
inc
or
dec
push
xor
xor
call
jecxz
inc
jle
clc
(bad)
(bad)
fdiv
fimul
loopne
scas
jmp
fidivr
outs
cld
in
(bad)
loopne
stc
jns
or
push
mov
jno
lea
jne
cmp
xor
and
aas
sbb
dec
fcmovnu
xchg
xor
cmp
bound
pcmpgtw
ins
adc
(bad)
jmp
xchg
and
loop
std
mov
xor
hlt
(bad)
jmp
push
fs
lods
pusha
mov
cmp
xlat
shr
add
sub
inc
xchg
cmp
dec
(bad)
(bad)
(bad)
jmp
sbb
shr
ins
xchg
stos
bound
leave
pushf
cmp
iret
ins
nop
mov
iret
(bad)
(bad)
(bad)
inc
jmp
mov
jnp
xor
xor
push
push
jge
mov
sub
xor
mov
jp
(bad)
jbe
(bad)
call
mov
retf
push
jae
pop
mov
(bad)
aad
(bad)
jmp
mov
dec
jecxz
pop
cmp
sub
or
jae
xchg
push
jl
and
les
push
ret
loop
xchg
and
xchg
(bad)
(bad)
(bad)
dec
jo
push
push
je
movs
sub
or
imul
fisttp
xchg
xchg
cmps
inc
scas
and
jmp
dec
enter
test
outs
je
ins
push
push
adc
(bad)
(bad)
call
jno
xchg
inc
inc
push
pop
pop
mov
jg
dec
aad
lock
mov
scas
es
into
mov
daa
dec
pushf
shl
jp
mov
dec
xor
mov
push
ror
xor
call
pop
(bad)
pop
jns
out
in
mov
sub
(bad)
(bad)
mov
inc
sbb
(bad)
mov
test
inc
xchg
cs
push
or
mov
(bad)
(bad)
jnp
sbb
inc
movs
idiv
rol
in
mov
mov
retf
jmp
lods
daa
sub
jmp
clc
xor
xchg
sub
mov
out
cli
dec
cli
mov
mov
mov
mov
jp
cmp
inc
into
outs
(bad)
(bad)
jmp
xchg
inc
xchg
mov
mov
dec
inc
jmp
(bad)
inc
call
aaa
ds
mov
lahf
dec
(bad)
inc
mov
and
ja
stos
lock
(bad)
jg
std
test
ficom
mov
es
sti
or
mov
repz
(bad)
(bad)
(bad)
dec
daa
sahf
mov
outs
cmp
push
inc
adc
mov
xchg
pop
aam
push
xchg
or
(bad)
(bad)
jmp
jne
pusha
daa
push
sbb
dec
ds
push
(bad)
cmp
mov
ficom
sub
hlt
add
dec
cld
mov
adc
out
fidiv
(bad)
push
sbb
xchg
enter
mov
xchg
int
inc
or
pop
sub
in
iret
(bad)
(bad)
(bad)
mov
mov
or
pop
cmp
pop
std
jp
retf
dec
mov
pop
call
and
ror
clc
sahf
fwait
push
or
mov
and
dec
push
rcr
fcmovnb
iret
dec
jp
adc
cmp
(bad)
(bad)
(bad)
call
mov
mov
xor
jbe
ds
test
mov
and
pop
add
ficomp
(bad)
call
(bad)
push
jle
cmp
jmp
icebp
nop
xchg
repz
data16
jae
sti
sti
pusha
movs
add
jmp
push
jmp
push
inc
loope
(bad)
push
shr
or
pop
(bad)
sbb
xchg
or
push
xor
test
enter
cmps
ins
std
adc
xor
sbb
(bad)
(bad)
inc
jecxz
xor
mov
data16
sbb
outs
mov
clc
(bad)
out
cmp
(bad)
fcomip
inc
push
in
push
shl
fadd
(bad)
retf
ss
ret
(bad)
push
add
lock
adc
aaa
sbb
push
xor
push
lds
mov
xor
jg
add
retf
hlt
jns
cwde
dec
in
mov
dec
in
ss
retf
mov
add
mov
sbb
inc
out
push
std
(bad)
in
push
sar
mov
dec
paddusb
(bad)
(bad)
jg
retf
inc
push
into
dec
mov
(bad)
mov
sbb
inc
gs
inc
xor
push
mov
xchg
or
mov
int3
xchg
lock
call
ja
xchg
imul
(bad)
(bad)
push
clc
icebp
idiv
cmp
std
addr16
lds
mov
fbstp
shr
jne
test
idiv
(bad)
(bad)
(bad)
fucomip
aas
hlt
mov
add
int3
cmp
xchg
and
xchg
shl
loopne
sub
(bad)
(bad)
(bad)
(bad)
jp
sub
sbb
cmc
scas
scas
daa
xor
fadd
mov
stos
sub
hlt
retf
shl
cmp
mov
cmc
sar
mov
mov
mov
jg
lea
in
cdq
pusha
fmul
inc
je
push
cmp
lea
cmp
xor
hlt
sbb
or
ror
and
aas
sahf
(bad)
(bad)
(bad)
jmp
hlt
clc
pushf
mov
sub
fdivr
sub
(bad)
adc
xor
(bad)
pop
add
(bad)
out
mov
in
(bad)
or
xor
jne
ja
ret
push
sbb
cmp
dec
add
xor
adc
mov
jmp
shl
push
add
inc
push
sbb
ss
ins
pusha
and
sbb
lds
inc
ror
loopne
out
fild
ret
loopne
mov
adc
pop
xchg
dec
and
pop
jnp
sbb
sub
mov
pop
mov
rol
rcl
lock
xor
mov
add
call
mov
ins
out
idiv
(bad)
(bad)
inc
jnp
leave
push
loopne
test
push
(bad)
dec
xor
add
pop
mov
push
pop
(bad)
hlt
fadd
push
stc
mov
push
mov
mov
push
fprem
rcl
push
mov
inc
xchg
sti
mov
out
fcmovne
adc
inc
xchg
push
cmps
call
out
imul
mov
jg
xchg
cmp
sbb
js
lods
push
gs
add
mov
add
(bad)
(bad)
call
stos
pop
push
popa
into
jg
fistp
jne
cmp
ficomp
fsub
push
(bad)
(bad)
push
jle
ret
mov
mov
sbb
dec
jae
out
call
xchg
dec
push
cld
aas
add
jmp
pop
popf
ds
pushf
(bad)
mov
jge
mov
aad
mov
mov
xchg
sub
(bad)
mov
loop
jbe
(bad)
(bad)
jmp
xor
scas
cmp
sbb
mov
nop
sbb
xor
dec
lock
(bad)
call
push
mov
fsubr
rol
lahf
rcr
in
sub
lock
xchg
pushf
(bad)
xchg
push
rol
sti
adc
pop
pop
(bad)
xchg
ret
jmp
stos
adc
(bad)
inc
dec
bnd
int
pushf
imul
sbb
dec
dec
and
mov
sbb
sub
xchg
push
jns
add
test
xchg
cs
adc
pop
cmp
ss
jge
push
cmp
movs
cld
sub
mov
and
adc
ja
fld
jmp
pop
scas
sub
lods
push
or
mov
popw
cmp
dec
cmps
adc
dec
clc
(bad)
call
fsubr
add
inc
loop
pop
mov
fadd
cmp
inc
xor
sahf
or
cmc
xor
push
shl
das
dec
test
mov
(bad)
mov
fmul
sbb
popa
fsubr
sahf
adc
push
inc
(bad)
call
adc
(bad)
jne
xor
stos
leave
mov
sbb
inc
adc
or
movs
jmp
retw
ss
or
loope
pop
and
xchg
aam
dec
das
loope
(bad)
mov
rep
and
and
scas
enter
push
lods
retf
adc
scas
sub
or
(bad)
(bad)
push
adc
jbe
in
jg
inc
xor
rol
repnz
(bad)
(bad)
jecxz
dec
call
push
or
in
dec
push
retf
xor
pop
cmps
pusha
into
cmp
sbb
or
mov
mov
jecxz
sbb
jae
sbb
(bad)
dec
add
cmp
cli
push
jb
out
push
stos
jb
mov
sub
fsub
sbb
loopne
push
add
cmp
push
fbstp
addr16
into
retf
xor
cld
push
inc
clc
stos
out
mov
push
jg
(bad)
mov
pushf
and
cwde
pop
into
test
adc
or
push
mov
popa
loopne
adc
cmps
cmc
ja
push
aam
lsl
add
lock
xor
ins
and
mov
dec
pushf
mov
call
aas
mov
daa
adc
(bad)
out
add
and
out
jns
adc
(bad)
fild
dec
cmps
loopne
imul
jmp
fdivp
jmp
out
out
and
dec
mov
jne
imul
(bad)
call
xlat
call
adc
(bad)
es
sub
jmp
add
inc
adc
inc
lods
into
enter
push
push
and
mov
stc
mov
sub
cld
ins
cmp
mov
adc
(bad)
(bad)
call
dec
mov
cs
loope
retf
enter
mov
jae
cmps
jmp
into
rol
jae
test
mov
mov
push
jle
jmp
mov
ja
lea
sbb
mov
into
call
rol
mov
(bad)
dec
and
xor
out
adc
push
pop
push
div
dec
(bad)
lods
mov
pop
add
mov
out
enter
aaa
or
call
inc
mov
imul
data16
int
test
push
mov
outs
or
mov
dec
mov
pop
sahf
aas
add
(bad)
(bad)
dec
push
xor
or
leave
aad
jbe
sbb
ins
ins
data16
test
fwait
or
cld
fwait
in
(bad)
cld
cmp
xor
or
es
mov
mov
retf
aad
and
xchg
sbb
and
cli
fwait
or
stc
aam
aas
mov
ja
je
or
mov
movs
sub
push
out
mov
mov
mov
arpl
inc
pop
hlt
push
mov
mov
hlt
shl
loop
lahf
add
(bad)
jg
mov
fisub
lock
pop
or
sub
mov
mov
pop
push
out
jo
ins
aam
out
(bad)
jmp
jg
mov
cmpps
adc
xor
fbstp
outs
or
(bad)
xor
sbb
(bad)
(bad)
retf
sbb
retf
ret
push
pop
loopne
dec
lods
ins
cmp
jg
sbb
and
ret
mov
push
push
and
daa
pop
(bad)
mov
shl
rol
mov
or
inc
jno
cmp
jo
mov
pop
xor
aaa
and
test
loopne
inc
aam
mov
inc
jmp
xor
adc
xor
add
push
ret
xor
jle
gs
mov
sbb
add
call
inc
cmc
cmp
jmp
sbb
mov
rol
outs
(bad)
call
sbb
sar
imul
jge
push
or
push
pop
mov
xchg
aaa
leave
inc
xchg
add
(bad)
(bad)
call
jge
fcmovb
fs
mov
jl
xchg
xchg
xor
pop
cwde
(bad)
repnz
inc
call
scas
(bad)
(bad)
inc
lods
lahf
fisubr
loope
stos
mov
sbb
js
les
repnz
dec
pushf
xor
inc
push
cld
cmp
outs
xchg
sub
scas
lods
arpl
sbb
xchg
(bad)
(bad)
call
dec
ds
test
sar
iret
inc
xchg
mov
call
or
aad
sub
adc
enter
mov
xor
adc
push
cmp
push
pop
sub
mov
jp
pop
mov
mov
cmp
(bad)
(bad)
(bad)
jmp
inc
cmp
inc
or
add
je
call
jo
ins
pop
jmp
ds
or
js
xor
adc
out
stos
jns
lods
ds
es
mov
test
or
ins
xor
add
std
mov
cdq
scas
or
xor
push
cld
jo
jg
iret
and
cli
(bad)
in
ret
mov
stc
aad
dec
sbb
mov
out
or
sbb
pop
mov
push
rol
add
jmp
pop
push
sar
pushf
or
sbb
push
(bad)
(bad)
inc
stos
mov
inc
icebp
mov
rcl
dec
sub
pop
pop
pop
test
scas
jno
or
jmp
xlat
sub
jge
jmp
hlt
(bad)
jmp
(bad)
jno
clc
pop
xor
sub
scas
rcr
std
push
jno
aam
repz
into
push
loopne
dec
gs
call
or
xchg
and
cdq
xlat
mov
cdq
jbe
inc
xchg
dec
mov
mov
fcom
fucomi
imul
add
cli
(bad)
(bad)
dec
mov
xor
xchg
cmp
out
test
sbb
jns
into
push
std
(bad)
(bad)
out
and
mov
scas
push
aad
mov
fcom
cmp
xchg
lock
fcomip
xlat
jg
or
dec
xchg
mov
ret
fld
(bad)
(bad)
jg
inc
nop
or
fs
ins
mov
and
aaa
dec
xor
js
fs
std
jmp
clc
dec
fs
inc
call
call
sub
pop
test
in
enter
adc
(bad)
(bad)
call
jo
scas
ret
aad
(bad)
push
lea
rcl
jmp
push
pop
ins
stos
push
fisub
sti
add
add
or
(bad)
lock
out
adc
inc
in
(bad)
(bad)
(bad)
push
and
mov
inc
xchg
xchg
(bad)
int
js
mov
pop
in
(bad)
ja
aas
inc
or
dec
test
std
js
jmp
rcl
dec
jns
shl
sbb
(bad)
icebp
mov
xor
fstp
in
in
imul
stos
dec
push
adc
sahf
hlt
test
sahf
sub
sub
mov
lahf
push
cmp
idiv
and
pop
ja
sbb
adc
stc
sub
arpl
fprem
(bad)
(bad)
push
mov
cwde
pop
dec
loope
in
mov
pop
popf
xor
arpl
cmp
fimul
and
push
rcl
xchg
add
imul
and
cmps
mov
push
adc
mov
push
push
xor
into
mov
call
outs
mov
int3
pusha
xlat
leave
push
adc
shl
mov
in
std
mov
push
cwde
lods
or
push
retf
mov
sub
lods
imul
rcl
cmps
frstor
shl
mov
inc
fcmovbe
call
daa
mov
test
scas
mov
test
pop
clc
fimul
fisubr
cli
dec
sub
xchg
and
xlat
push
movs
std
pop
call
shl
je
les
or
dec
lods
into
and
jae
and
cmp
psubusw
sbb
ins
ja
dec
mov
xchg
imul
mov
movs
sbb
repz
mov
ret
(bad)
hlt
ds
mov
xor
push
sub
pop
repz
in
fnsave
cli
dec
call
mov
lds
push
pushf
jmp
add
imul
out
xchg
xor
push
(bad)
dec
aam
inc
inc
mov
jge
pop
js
xor
mov
dec
cli
leave
test
inc
xchg
xor
out
out
(bad)
dec
mov
bound
cwde
fadd
and
sub
mov
mov
push
addr16
mov
push
pop
sbb
mov
add
(bad)
aas
cmp
mov
mov
addr16
xchg
jmp
in
in
sub
sbb
clc
in
hlt
(bad)
call
push
cmps
pop
adc
mov
stos
xchg
shl
pop
mov
jge
(bad)
dec
adc
add
pop
mov
cli
test
fs
(bad)
(bad)
inc
int3
jmp
jl
icebp
xchg
shr
mov
cli
inc
fiadd
cmp
(bad)
dec
iret
sti
rol
adc
jne
push
jmp
(bad)
(bad)
(bad)
mov
dec
int3
adc
dec
mov
rcl
neg
lea
(bad)
(bad)
(bad)
dec
cmps
cmp
in
cdq
loopne
mov
imul
data16
cmc
sti
adc
fs
cwde
pop
add
pop
movs
ss
jge
mov
stos
mov
sar
cli
out
nop
jmp
lods
dec
int
(bad)
call
(bad)
jmp
mov
push
sub
dec
sar
shr
loopne
jge
(bad)
(bad)
(bad)
call
cmp
mov
popa
jecxz
xchg
push
jne
out
mov
pop
int3
push
mov
sbb
sbb
scas
and
and
ret
scas
retf
(bad)
(bad)
jnp
push
mov
mov
mov
cdq
dec
inc
mov
imul
mov
add
cs
sahf
inc
jmp
add
cdq
ins
fist
(bad)
mov
call
pop
or
mov
dec
sar
add
and
aad
(bad)
(bad)
(bad)
push
into
cmp
add
shr
(bad)
sub
repz
sbb
adc
lea
inc
dec
jnp
pop
adc
xchg
pushf
imul
pop
push
mov
inc
pushf
test
sbb
(bad)
(bad)
call
sub
repnz
call
mov
in
call
mov
push
push
out
cmp
in
mov
ss
cs
pop
and
jmp
sub
mov
xlat
dec
aaa
outs
cmp
shr
dec
sbb
int
cmp
lea
(bad)
(bad)
(bad)
(bad)
aas
cmp
xor
cmp
out
inc
jnp
pop
enter
fcom
mov
ins
push
jae
fcomip
(bad)
call
xor
push
xchg
pop
pop
fwait
dec
cmp
call
cli
(bad)
push
ret
arpl
adc
xor
jne
push
vunpcklpd
cli
cmc
or
(bad)
xlat
fdivr
cmp
(bad)
(bad)
call
movs
fidiv
mov
lahf
pop
xor
nop
sub
add
dec
jno
dec
ins
call
sub
sahf
popa
cdq
pop
jae
push
fsubr
push
loopne
rcr
pushf
pop
dec
and
xchg
cmp
pop
push
adc
or
dec
out
dec
(bad)
(bad)
(bad)
push
sub
les
std
fnstsw
fadd
mov
adc
cmp
jle
mov
(bad)
(bad)
(bad)
cli
xchg
test
xchg
xchg
retf
inc
dec
js
dec
xlat
imul
imul
mov
mov
xchg
xor
push
(bad)
repz
sbb
(bad)
jmp
and
xor
rcr
call
pop
js
push
dec
jmp
jae
xor
mov
jnp
mov
push
or
outs
and
adc
push
int
fild
hlt
loop
push
mov
pop
cpuid
dec
mov
es
mov
test
and
push
(bad)
push
xchg
es
lods
nop
mov
pop
xor
loope
stos
dec
xchg
dec
xchg
xor
ret
ss
cs
mov
push
mov
pop
cmps
inc
ds
jae
mov
pop
sbb
ret
xchg
xchg
xlat
pusha
(bad)
(bad)
jg
rcl
dec
mov
cmp
dec
pop
fwait
les
xor
or
dec
(bad)
jmp
push
scas
or
hlt
fmulp
loope
daa
out
jmp
nop
aam
test
xor
sbb
jno
jmp
or
(bad)
dec
inc
div
fwait
cmps
scas
pop
add
cmp
jge
(bad)
push
jl
mov
and
xchg
je
repnz
mov
or
mov
inc
mov
test
sub
pop
sahf
(bad)
(bad)
(bad)
call
cmc
call
clc
mov
xchg
mov
jae
ss
cmp
cli
stos
imul
(bad)
(bad)
clc
cld
addr16
ret
data16
imul
mov
or
xor
shl
jo
adc
and
inc
mov
cmp
(bad)
mov
loope
popa
cmp
sub
mov
adc
(bad)
(bad)
call
sbb
cmc
xor
jae
imul
sti
xor
ja
inc
cdq
xlat
stos
aad
jp
push
(bad)
jmp
mov
ret
shl
aaa
cmp
mov
cmp
lock
call
(bad)
fdivr
add
in
aas
cmps
mov
ins
sbb
ret
inc
sbb
(bad)
test
sub
into
push
cmps
js
dec
and
jge
addr16
add
sub
push
fsubr
scas
inc
push
shl
stos
xor
add
or
jp
or
hlt
cmp
cs
(bad)
(bad)
mov
jg
jne
loopne
fcomip
pop
inc
jno
pop
jp
add
mov
pslld
(bad)
(bad)
call
rcr
stos
icebp
movs
scas
jl
scas
mov
jb
cmp
popf
sbb
or
inc
(bad)
push
dec
out
dec
(bad)
push
cmps
fdiv
ss
out
popf
dec
lods
add
(bad)
(bad)
push
inc
jle
xchg
pusha
mov
das
push
pusha
nop
inc
pushf
xor
bound
or
mov
lods
jl
inc
adc
mov
pop
pop
mov
in
sub
jmp
push
push
xchg
mov
fbld
lock
xor
pusha
jmp
jmp
lea
adc
ret
jg
push
pop
inc
add
ror
jo
fmul
mov
xchg
test
shr
adc
(bad)
(bad)
mov
xchg
push
or
pusha
xor
test
fld
loop
outs
mov
fbld
push
dec
sbb
lods
cmp
xor
pop
popf
and
or
adc
lock
sub
in
sbb
sbb
mov
test
jmp
push
cli
or
call
sub
mov
adc
jmp
xor
aas
mov
jns
push
xor
push
(bad)
ins
shl
loope
mov
jmp
jle
movs
nop
xor
lds
ret
cli
pop
gs
jo
sbb
hlt
call
push
inc
stc
ins
call
pop
movs
dec
or
ins
fyl2xp1
(bad)
sub
mov
jg
test
mov
mov
call
std
xor
or
jnp
neg
pop
loope
add
popf
lahf
rol
scas
mov
retf
xchg
data16
in
pop
dec
loop
ret
dec
mov
inc
es
adc
ror
(bad)
test
jmp
(bad)
mov
or
pop
sub
shr
inc
sub
popf
pop
(bad)
ror
mov
out
les
mov
and
shl
(bad)
(bad)
(bad)
call
mov
imul
movs
xor
xchg
sub
fs
sub
aad
popa
(bad)
(bad)
(bad)
call
into
pop
iret
(bad)
jae
cld
jecxz
mov
jno
sub
cmp
xchg
adc
icebp
inc
xchg
out
mov
add
xchg
push
or
add
and
jecxz
(bad)
jmp
jb
cmp
pop
das
push
sbb
mov
mul
aas
xor
dec
cmp
loopne
mov
sub
(bad)
mov
shr
xchg
push
push
push
and
adc
(bad)
jmp
inc
es
push
lea
pushf
shl
and
jb
cmp
and
cmp
adc
mov
jp
movs
enter
idiv
(bad)
call
pop
hlt
rcr
jge
shr
loope
sbb
or
(bad)
(bad)
(bad)
dec
cwde
push
iret
and
lock
mov
imul
dec
xor
inc
clc
in
push
mov
cli
push
jns
paddsw
ss
sub
or
and
cmp
std
mov
(bad)
in
daa
out
xor
push
popa
mov
ins
in
ss
(bad)
push
loopne
cmps
dec
add
fdivr
(bad)
call
or
mov
push
jo
xchg
mov
mov
psrad
call
dec
push
add
arpl
mov
das
and
pop
dec
cmp
xor
or
(bad)
out
jle
gs
pushw
xchg
xor
push
icebp
call
pop
(bad)
cmps
push
cld
push
(bad)
inc
pop
add
popa
es
(bad)
(bad)
call
mov
jnp
push
cld
mov
cmp
mov
mov
scas
aad
pusha
(bad)
(bad)
(bad)
mov
popf
and
pop
sahf
js
icebp
mov
popa
jmp
jno
ret
xchg
pushf
data16
(bad)
(bad)
dec
add
or
sub
push
adc
cwde
and
mov
mov
pusha
push
mov
jge
xchg
sbb
cli
(bad)
(bad)
jg
call
dec
mov
mov
mov
dec
jo
pushf
loop
cdq
xor
mov
mov
call
call
repz
mov
pusha
fidiv
mov
repnz
or
fwait
jg
dec
gs
and
adc
push
(bad)
cmp
mov
int3
push
lods
loopne
fld
fdivp
push
icebp
fmul
cmp
sti
or
std
adc
idiv
sub
push
xchg
add
cmp
inc
jmp
outs
test
sub
call
dec
in
mov
gs
jae
fadd
xchg
sbb
push
mov
fcmovnbe
out
or
sbb
inc
inc
sti
(bad)
call
stos
mov
lock
shr
shr
push
pop
ret
cmp
jle
sub
popf
push
mov
add
inc
push
mov
(bad)
fimul
fisttp
ss
inc
ret
test
ret
adc
sahf
adc
dec
popa
or
out
adc
(bad)
xchg
jmp
cmp
jmp
bound
aas
fld
fnstenv
cmps
jle
aad
jp
mov
and
iret
inc
loop
mov
mov
out
mul
mov
(bad)
push
shl
lea
fld
push
imul
add
ja
ror
arpl
ss
xchg
or
dec
push
lock
or
cmp
xchg
jns
and
fistp
inc
pop
mul
idiv
out
(bad)
fbld
xor
mov
push
sub
das
test
ss
(bad)
inc
lds
xor
sbb
in
mov
ins
loope
dec
mov
shl
test
mov
dec
and
mov
mov
fxch
mov
jl
imul
mov
jl
dec
pop
cmc
out
jg
imul
xor
sub
outs
cmc
into
sti
call
imul
imul
inc
and
add
je
aam
(bad)
(bad)
fild
out
lods
sbb
push
or
mov
fisttp
xlat
xchg
jecxz
data16
retf
jns
cmps
mov
add
dec
sar
call
pop
and
fs
mov
sbb
aaa
mov
xor
push
add
push
(bad)
(bad)
(bad)
jg
jo
dec
scas
xchg
shl
pop
(bad)
jge
cli
cmp
dec
add
and
pusha
sub
aas
retf
(bad)
(bad)
call
adc
pop
and
pop
rcr
clc
lahf
mul
pop
inc
inc
fld
mov
cmp
pop
cs
push
cs
sahf
mov
in
(bad)
fild
jb
call
into
xchg
inc
mov
pop
ins
adc
dec
loope
out
fadd
test
adc
aad
cs
sar
or
gs
(bad)
in
push
adc
aad
daa
test
jp
and
aad
loope
clc
push
icebp
(bad)
jmp
mov
and
leave
call
aad
loop
push
ins
test
call
mov
dec
jno
push
or
into
sbb
ret
jmp
hlt
mov
(bad)
repz
cmp
popf
hlt
mov
xchg
(bad)
(bad)
(bad)
call
or
test
sti
jo
fs
push
sub
push
hlt
sbb
sbb
or
test
(bad)
(bad)
jmp
jmp
mov
pop
xor
outs
pop
enter
pop
sub
xor
stos
cmps
inc
call
push
movs
enter
jb
push
push
aam
(bad)
call
lods
je
stos
rcl
mov
stos
sub
add
ret
mov
push
aaa
call
cmp
(bad)
aad
jne
and
inc
loopne
mov
out
out
imul
retf
js
(bad)
jmp
push
(bad)
fisub
call
jp
dec
sub
xchg
mov
movs
daa
push
sub
loopne
sbb
fwait
(bad)
call
pushf
push
ficomp
or
mov
aad
inc
dec
adc
xor
jmp
xchg
pusha
nop
and
push
mov
add
(bad)
sub
jbe
scas
clc
(bad)
mov
adc
lock
(bad)
cmp
(bad)
mov
fisub
aas
jns
jp
push
fwait
mov
sub
(bad)
jmp
je
mov
(bad)
and
xor
gs
aas
jecxz
mov
mov
into
mov
mov
push
shl
loopne
adc
mov
ret
out
add
jo
sbb
aas
adc
sbb
xchg
scas
outs
mul
pop
aam
pop
inc
mov
or
outs
fwait
data16
call
sbb
sbb
int
sbb
enter
(bad)
mov
shl
out
cli
push
outs
jle
xchg
enter
xlat
push
dec
add
scas
pusha
and
cmps
ret
cmps
jecxz
imul
(bad)
jmp
(bad)
(bad)
cld
fdivr
loop
mov
fucomi
shl
ins
inc
stos
in
pop
icebp
(bad)
call
and
jmp
adc
add
mov
test
(bad)
movs
pop
push
lds
cld
data16
jbe
push
xchg
(bad)
jg
(bad)
cmp
repz
into
popa
xchg
mov
adc
pause
mov
push
sub
(bad)
(bad)
call
add
lods
xchg
push
push
iret
push
and
inc
mov
xor
and
psrlq
sar
jmp
mov
shr
test
dec
jl
adc
xor
retf
push
mov
(bad)
call
iret
push
ja
push
ret
or
push
imul
(bad)
(bad)
inc
popf
xchg
cmp
push
frstor
je
pushf
cmp
pusha
daa
out
sub
leave
sub
std
call
std
or
or
fisttp
inc
mov
or
pop
imul
lock
adc
xor
inc
es
test
dec
sub
leave
mov
clc
inc
mov
and
icebp
loopne
mov
add
adc
(bad)
(bad)
inc
iret
sbb
into
pushf
push
gs
jae
inc
cmp
movs
stos
loope
movs
adc
dec
(bad)
mov
(bad)
pusha
or
cdq
dec
jl
out
mov
lock
(bad)
inc
cld
jmp
push
(bad)
je
and
and
or
dec
iret
(bad)
(bad)
(bad)
push
(bad)
aas
call
jge
or
cmp
out
into
shr
data16
jmp
movs
(bad)
(bad)
inc
fwait
jb
cli
adc
or
popa
dec
jae
rcl
aaa
or
inc
fdivr
mov
and
cdq
jb
nop
dec
les
sbb
int3
(bad)
(bad)
push
not
sahf
cmp
mov
int
jbe
push
xor
gs
in
call
or
adc
or
les
cmp
outs
movs
mov
pop
rcr
int3
xchg
dec
(bad)
(bad)
jg
or
ja
jne
sub
jae
imul
cmp
or
jp
xchg
in
xor
call
pop
push
pop
out
push
stos
or
jmp
(bad)
test
sub
shr
shl
outs
js
in
jmp
outs
mov
(bad)
jg
adc
add
jg
pop
jp
fdivr
pop
pop
cwde
inc
call
push
jp
sbb
stos
pop
(bad)
pop
js
rol
pop
inc
push
retf
(bad)
(bad)
(bad)
jmp
vpshufhw
test
mov
inc
mov
movs
shl
jp
inc
popf
pop
dec
or
dec
pop
(bad)
stos
push
push
movs
xlat
adc
shl
idiv
(bad)
nop
movs
lea
inc
bnd
pop
loopne
js
int3
hlt
ror
repz
call
rol
std
mov
dec
movs
sbb
pop
enter
jb
cmc
jo
data16
pushf
pop
movs
and
arpl
(bad)
(bad)
fbld
xor
ins
push
pop
(bad)
fadd
sbb
xor
cmp
(bad)
(bad)
aas
or
push
push
in
mov
mov
inc
and
push
cmp
jbe
call
inc
into
mov
dec
les
leave
ret
push
xchg
mov
mov
mov
mov
fadd
jae
es
ret
jecxz
lds
xlat
popa
xchg
test
rol
add
popf
mov
mov
out
sar
bound
jmp
mov
xor
sbb
mov
mov
hlt
cmp
sub
iret
jmp
push
sbb
mov
sar
sub
aad
jae
hlt
cmp
ret
push
fs
jno
repz
call
sbb
push
mov
cmp
das
retf
(bad)
jmp
xchg
fs
and
inc
xor
jbe
(bad)
push
adc
push
test
arpl
dec
mov
cld
push
xchg
retf
pop
les
jp
sub
(bad)
ins
add
repz
out
xor
cdq
inc
nop
scas
mov
stos
xchg
(bad)
(bad)
jmp
test
aad
and
mov
cwde
push
xchg
addr16
dec
test
dec
out
int
add
das
mov
mov
dec
fdiv
xor
jmp
(bad)
push
jo
(bad)
sub
bound
cs
(bad)
mov
sbb
movs
or
mov
outs
daa
mov
xlat
jg
or
xchg
xor
fdivp
scas
femms
mov
sub
cmp
sbb
xor
repz
and
dec
inc
lock
xchg
xor
pop
add
fdivrp
arpl
xor
movs
sbb
leave
lods
les
sti
inc
sar
(bad)
(bad)
(bad)
(bad)
mov
cmp
ss
into
mov
ins
mov
out
shl
(bad)
jmp
movs
push
in
fnstcw
sbb
stos
pop
and
lds
jge
cmps
jg
clc
jmp
stos
(bad)
xchg
add
jle
and
les
pop
gs
aad
pop
mov
push
pop
shl
sub
(bad)
dec
retf
sbb
in
cwde
mov
mov
lea
xchg
cmc
xchg
test
and
rcr
mov
fstp
adc
pop
fisubr
(bad)
jmp
test
sub
mov
int
repnz
add
or
lea
xor
add
(bad)
sub
push
adc
jmp
sub
dec
loop
stos
push
sbb
or
add
jge
repz
xor
sbb
jbe
jnp
outs
mov
rol
inc
loop
jmp
arpl
lds
bound
(bad)
mov
gs
and
fistp
adc
int
loop
mov
(bad)
(bad)
(bad)
mov
pop
fs
or
xor
sub
fsubr
(bad)
and
push
retf
(bad)
push
jl
and
call
dec
push
xchg
test
push
pop
les
xchg
push
jno
mov
sbb
mov
inc
test
lahf
sbb
(bad)
(bad)
jg
fdivr
scas
loopne
pop
repnz
js
or
or
xchg
cmp
scas
retf
ss
mov
pop
push
jae
test
(bad)
(bad)
(bad)
mov
fwait
hlt
scas
xor
(bad)
sub
pusha
cdq
sbb
fucomp
inc
mov
pop
pop
push
mov
fcom
mov
retf
imul
jmp
sbb
scas
xchg
push
mov
or
fist
das
int
hlt
int3
push
cmps
(bad)
adc
ror
mov
adc
mov
xor
xor
test
push
out
aas
pop
pop
pop
loope
addr16
cmp
inc
cmp
dec
aaa
jmp
sar
enter
popa
cmp
sub
push
sub
mul
xlat
pop
cmc
cmp
push
call
js
cdq
ror
jmp
mov
(bad)
dec
gs
or
fimul
dec
inc
test
mov
jo
cmp
fdivrp
mov
push
push
repz
jno
jne
ficom
aam
dec
xlat
jp
sub
and
hlt
movs
sub
test
pop
or
sahf
das
xor
push
jge
or
adc
(bad)
clc
pop
lock
(bad)
push
(bad)
leave
mov
rol
jp
sbb
test
imul
or
xlat
mov
je
je
pusha
(bad)
(bad)
(bad)
dec
fdiv
fdiv
daa
jno
sbb
inc
mov
stos
and
push
(bad)
mov
js
cdq
mov
push
ins
inc
daa
sbb
inc
inc
sbb
(bad)
(bad)
(bad)
call
cmps
sti
mov
pusha
cmp
mov
cmps
call
xchg
mov
add
mov
cmps
ret
(bad)
(bad)
(bad)
(bad)
mov
push
mov
les
in
fadd
shr
mov
(bad)
sahf
xor
push
jl
es
test
mov
add
mov
outs
dec
cmp
movs
sbb
xchg
int3
adc
(bad)
jg
dec
sahf
mov
mov
xchg
in
loop
push
or
(bad)
mov
arpl
or
dec
(bad)
(bad)
call
xchg
popf
imul
jp
add
ret
inc
(bad)
fmul
inc
retf
cmc
(bad)
dec
sub
(bad)
mov
mov
push
(bad)
(bad)
(bad)
fisttp
and
adc
add
and
and
sbb
sub
stos
cdq
movs
call
mov
pop
pop
(bad)
retf
pop
loop
inc
data16
mov
push
stc
sbb
push
movs
dec
fdivr
(bad)
cmp
dec
jnp
(bad)
inc
dec
add
pop
(bad)
mov
sbb
cli
sbb
cld
sti
ja
xchg
dec
scas
jecxz
mov
(bad)
(bad)
cld
icebp
pop
cld
addr16
pop
or
in
add
jnp
scas
jnp
imul
pop
cld
scas
add
push
xchg
mov
lods
jmp
add
mov
push
mov
jae
mov
dec
popa
or
ret
mov
sbb
sti
jae
mov
jb
mov
nop
test
sbb
xchg
mov
nop
push
sti
add
mov
(bad)
fild
inc
nop
mov
sub
mov
stos
mov
(bad)
dec
cli
push
ss
pop
sti
sbb
cld
cmp
mov
pop
rol
pop
mov
jne
retf
outs
(bad)
(bad)
(bad)
fst
sahf
dec
or
hlt
test
inc
sbb
and
dec
xor
pop
fisttp
sub
jns
gs
sbb
mov
jnp
dec
(bad)
(bad)
(bad)
jmp
loope
sub
lods
call
cwde
xor
pusha
push
sub
fidivr
add
mov
jmp
in
xchg
rcr
xor
mov
sbb
cli
rcr
fsub
(bad)
dec
std
int3
int3
pop
fdiv
adc
pushf
mov
(bad)
mov
pop
mov
icebp
fimul
addr16
rol
adc
cmc
std
test
push
aam
lock
xchg
pop
dec
call
pop
jo
pop
ins
cli
xchg
jp
fstp
mov
mov
inc
mov
(bad)
push
out
dec
call
adc
xchg
cmp
pop
call
jl
push
fs
fdiv
jne
loopne
jmp
xchg
stos
sub
adc
xor
xlat
inc
arpl
xchg
mov
out
(bad)
(bad)
call
aam
neg
or
cmp
push
pop
adc
sub
mov
les
nop
lea
test
or
fdiv
int3
mov
addr16
int3
jecxz
pop
sar
jg
dec
in
jg
add
out
movs
addr16
mov
add
add
xchg
pusha
or
sbb
inc
lea
inc
fsubr
sbb
mov
xor
push
adc
push
les
add
mov
imul
add
outs
cwde
sbb
fld
stos
sbb
mov
sub
rcl
cmp
jecxz
jmp
xchg
push
or
add
mov
ret
jbe
ret
test
pushf
mov
es
(bad)
mov
ins
xlat
adc
repz
je
sub
add
jmp
lea
mov
into
and
dec
loop
clc
aad
xchg
xchg
mov
ret
and
pop
sub
mov
xor
pop
and
outs
aad
adc
daa
cdq
push
jnp
ja
les
sub
inc
fdivr
fist
sbb
and
or
pusha
mov
retf
rol
out
in
popf
ss
jg
sbb
enter
or
xchg
sbb
adc
dec
pop
mov
and
call
lods
aas
or
sbb
ficom
femms
and
pop
mov
inc
add
sub
addr16
aad
dec
add
aam
rcl
cmps
es
xor
mov
and
mov
retf
shl
es
(bad)
jg
xlat
shl
retf
or
add
adc
cmp
sbb
jmp
leave
out
sbb
push
mov
xor
jo
pop
push
dec
(bad)
mov
pop
or
cmp
mov
dec
movs
adc
out
xchg
mov
inc
clc
pop
(bad)
aaa
retf
ja
xor
xchg
cld
(bad)
cmp
test
(bad)
jmp
inc
adc
div
or
xor
movs
test
cmp
push
push
(bad)
jmp
les
(bad)
pop
shl
pop
outs
mov
ins
test
mov
aad
or
or
adc
mov
xor
xchg
dec
cld
push
aas
adc
test
xor
fldcw
cmc
(bad)
jg
inc
or
mov
(bad)
in
enter
xor
(bad)
(bad)
inc
loope
and
and
fistp
sar
(bad)
(bad)
(bad)
(bad)
aas
dec
xor
jo
cmp
sbb
int3
xor
imul
pop
out
std
mov
call
inc
or
push
push
test
add
fild
fcomp
ror
and
mov
retf
and
fistp
and
xor
inc
inc
and
mov
lods
mov
fldcw
xor
fwait
idiv
sub
dec
and
aam
popf
sbb
mov
sar
push
dec
jp
out
leave
inc
hlt
shl
pop
test
(bad)
push
and
mov
mov
cmp
ret
fcomip
(bad)
mov
mov
inc
fcom
inc
outs
xchg
sub
pop
out
aaa
scas
(bad)
(bad)
(bad)
(bad)
inc
cld
je
xchg
ss
add
cwde
arpl
mov
mov
push
cmp
out
iret
and
mov
cmp
leave
outs
push
mov
jb
xor
clc
dec
lock
or
(bad)
std
mov
add
into
lods
add
popf
mov
repnz
pushf
jle
add
movs
test
test
lea
(bad)
mov
(bad)
(bad)
fst
stos
outs
into
inc
mov
test
mov
push
xor
fs
inc
js
or
(bad)
(bad)
in
sbb
mov
iret
add
ret
push
arpl
lock
pop
ror
ins
sar
pop
lock
push
add
popa
jb
sub
pushf
arpl
jnp
push
div
xchg
inc
cld
call
sti
sbb
fisubr
(bad)
(bad)
jg
mov
push
sbb
arpl
aas
out
cmps
xor
jl
call
or
aad
pushf
xor
data16
inc
leave
xchg
inc
xor
(bad)
(bad)
(bad)
stc
add
pop
(bad)
or
inc
push
aad
frstor
jno
add
movs
jnp
sub
xor
(bad)
call
aad
mov
movs
sub
push
outs
(bad)
(bad)
(bad)
inc
dec
mov
ins
add
out
cmps
inc
and
dec
xchg
push
hlt
sar
fidivr
jg
sar
loope
aas
inc
jmp
into
in
inc
retf
cmp
sar
das
fdiv
pop
xor
popa
adc
sar
dec
std
push
jmp
mov
push
nop
dec
into
xchg
mov
lods
xchg
(bad)
scas
cli
jo
mov
(bad)
fistp
in
mov
into
in
jg
and
jno
sub
(bad)
mov
mov
mov
(bad)
cdq
sub
cli
(bad)
dec
scas
gs
mov
lea
cmp
pop
les
inc
aam
or
sub
mov
icebp
inc
sbb
jns
outs
jle
mov
mov
in
jns
mov
(bad)
popf
add
test
push
lods
sbb
mov
push
(bad)
call
movs
adc
adc
dec
push
xor
push
jle
add
gs
inc
jmp
dec
fst
cmp
ficomp
mov
(bad)
call
dec
xor
or
lods
xlat
ret
push
(bad)
fcomip
inc
fcom
mov
call
sub
cmp
lods
inc
loop
cmp
gs
inc
fnstcw
nop
ja
sub
lods
fnstsw
loop
call
sbb
sar
std
add
int3
fsub
mov
add
push
or
cmp
ins
push
aaa
std
repz
ins
sbb
jmp
mov
and
jno
ss
push
cmp
add
or
and
mov
mov
cld
xchg
icebp
(bad)
jmp
sbb
jne
(bad)
loop
les
push
outs
(bad)
(bad)
(bad)
(bad)
or
sub
sar
jbe
iret
xchg
jnp
and
add
iret
dec
pop
daa
out
rol
jmp
mov
test
cmc
retf
in
inc
pusha
mov
call
pop
(bad)
out
fimul
push
ret
aaa
add
push
jb
(bad)
(bad)
call
dec
inc
cli
aas
mov
inc
push
outs
in
cmp
xchg
enter
inc
jecxz
mov
ds
(bad)
(bad)
call
rcr
xor
cmp
xor
fnstsw
das
sub
jl
lods
(bad)
jmp
sbb
in
repnz
add
cmp
xor
inc
push
movs
pusha
mov
scas
inc
xchg
sub
div
jmp
pop
outs
cmp
xchg
bound
(bad)
out
adc
call
std
push
xchg
lods
dec
sbb
repz
movs
jl
jmp
out
fnsave
or
imul
sub
mov
or
inc
mov
inc
enter
cmp
(bad)
(bad)
jmp
add
push
jle
movs
sbb
scas
inc
out
jno
ficomp
push
or
int3
xlat
call
clc
push
push
in
adc
shl
lahf
cld
fsubr
loopne
lahf
jle
std
jecxz
lock
adc
dec
xor
add
jae
sbb
pop
movs
jg
cmp
pop
pop
fist
xchg
(bad)
(bad)
out
cli
shl
aad
xchg
xor
ror
hlt
fst
sbb
scas
dec
mov
add
mov
mov
jle
lock
mov
gs
mov
xchg
xchg
test
loop
and
loop
pop
cmp
dec
jp
and
jmp
mov
mov
es
or
fdivrp
dec
cwde
jp
sub
and
arpl
cmps
and
ret
inc
sti
sti
cld
int3
adc
scas
nop
add
fbstp
mov
gs
and
xchg
jnp
call
push
add
fpatan
imul
loopne
xchg
(bad)
(bad)
(bad)
push
ins
add
and
ss
or
test
xor
mov
adc
icebp
push
jecxz
adc
jno
fnstcw
fcomp
(bad)
mov
xchg
dec
jecxz
inc
test
outs
sbb
cmp
clc
je
mov
sub
mov
mov
push
xor
add
(bad)
(bad)
call
addr16
fidiv
cmp
adc
rol
retf
call
(bad)
call
and
jne
adc
fsubr
(bad)
(bad)
(bad)
fnstcw
cmp
sti
mov
(bad)
std
scas
mov
add
imul
fadd
(bad)
(bad)
call
into
lock
dec
adc
jecxz
ss
xor
fistp
push
mov
aaa
rcl
ror
sub
hlt
sub
bound
adc
and
lods
je
test
cmp
sub
add
xchg
mov
pop
retf
loope
mov
fdivr
les
mov
(bad)
dec
ds
mov
test
push
fisub
dec
in
mov
(bad)
call
stos
pushf
xchg
or
lock
(bad)
(bad)
(bad)
push
lea
mov
xchg
dec
adc
xchg
je
fnstcw
fs
sbb
push
imul
(bad)
(bad)
(bad)
call
add
pop
cmps
mov
outs
pop
xor
cmp
jmp
mov
xchg
out
test
outs
cli
out
gs
je
mov
and
inc
rol
push
(bad)
(bad)
jg
(bad)
mov
stos
arpl
or
lea
xchg
inc
inc
cmp
jmp
dec
mov
pop
pop
cmp
dec
adc
daa
jmp
pop
(bad)
(bad)
jmp
aas
inc
jg
jb
sub
in
pop
pop
gs
es
(bad)
(bad)
jmp
dec
inc
(bad)
jmp
out
dec
jg
(bad)
fst
daa
lahf
clc
push
neg
ds
loopne
dec
mov
adc
daa
and
xlat
(bad)
(bad)
mov
and
xchg
mov
xchg
add
cmovno
pop
cdq
adc
(bad)
adc
mov
push
ss
dec
cli
sbb
jle
adc
clc
mov
arpl
cmps
mov
push
je
and
push
mov
mov
push
inc
jns
es
adc
(bad)
call
sub
retf
lods
mov
dec
add
fs
clc
pop
clc
(bad)
jg
jecxz
adc
mov
test
leave
loopne
cmp
inc
dec
int3
mov
jle
cmp
call
test
mul
pop
sbb
dec
xlat
mov
movs
shr
xchg
(bad)
(bad)
(bad)
(bad)
jmp
inc
nop
cld
mov
mov
lods
scas
push
inc
sbb
and
dec
jb
mov
cmp
(bad)
call
repz
test
adc
ins
jg
sub
test
push
push
call
mov
xor
out
mov
jmp
adc
mov
stc
iret
mov
inc
push
mov
xchg
or
(bad)
fabs
outs
call
in
and
and
(bad)
(bad)
jg
xchg
or
sti
sub
in
pop
mov
pop
std
vmaxpd
jmp
dec
popf
lea
rol
xor
call
jmp
fstp
(bad)
in
adc
ins
(bad)
(bad)
(bad)
call
popf
int
xor
bound
jb
sbb
inc
repz
imul
sahf
sti
out
inc
xor
ror
cmp
sub
dec
dec
mul
jno
enter
fsub
scas
stos
or
retf
or
jecxz
jg
test
push
and
call
(bad)
dec
out
pop
loopne
sti
sub
jl
es
retf
xor
dec
(bad)
(bad)
dec
js
inc
out
out
js
and
test
inc
(bad)
(bad)
(bad)
dec
(bad)
sbb
push
pop
fs
adc
lods
push
sub
in
pop
push
shr
into
and
call
cmp
fistp
push
jno
inc
cdq
lods
fldcw
aad
lahf
adc
cmps
xor
cs
cmc
(bad)
(bad)
dec
mov
scas
mov
and
mov
push
and
mul
push
push
leave
pop
push
jmp
fisubr
and
test
popa
pop
or
mov
sar
dec
push
fst
or
lahf
xlat
mov
lods
movs
cli
and
jo
cmps
lods
fsub
int
ins
mov
xor
mov
cli
(bad)
(bad)
inc
pop
push
xchg
pop
lds
and
xchg
sub
pop
cmps
add
xchg
sub
or
jmp
or
fdivr
fisttp
jo
sahf
xchg
push
(bad)
jp
pop
and
or
push
xor
adc
mov
es
shr
xchg
in
adc
aaa
std
outs
adc
inc
iret
or
(bad)
cmp
sub
aaa
dec
(bad)
dec
leave
jb
shr
sbb
(bad)
push
ins
sub
(bad)
call
cmp
mov
sub
out
cmps
mov
xchg
sub
ins
in
sub
(bad)
push
fadd
out
repz
cs
mov
mov
sbb
dec
out
ret
js
mov
das
push
jp
(bad)
pop
cmp
sbb
std
(bad)
(bad)
out
and
ret
inc
add
fstp
ret
shl
stos
xchg
ins
mov
(bad)
(bad)
(bad)
dec
inc
adc
das
mov
jae
call
inc
arpl
lahf
rcl
add
add
aaa
cmp
call
sbb
cmp
xchg
sub
jmp
adc
mov
jle
lea
cmps
stos
inc
loop
pop
(bad)
pop
mov
cmp
inc
cs
jecxz
xchg
dec
push
cmps
adc
sbb
xor
lods
(bad)
jmp
dec
ins
test
ret
sub
xor
lahf
jo
hlt
retf
dec
xor
ret
cmp
dec
or
mov
xchg
(bad)
(bad)
(bad)
out
add
sbb
xor
movs
or
sub
fsubr
jns
cwde
fld
jmp
mov
sbb
ss
(bad)
(bad)
(bad)
fist
pop
add
rol
fcom
inc
retf
mov
enter
enter
sub
scas
(bad)
mov
xchg
inc
mov
fsubr
jl
rol
or
(bad)
(bad)
mov
pop
cmp
lods
push
cmp
clc
scas
mov
sar
jo
sub
(bad)
out
mov
in
movs
hlt
arpl
mov
jmp
aaa
add
mov
outs
sar
add
or
inc
jns
cmp
jge
pop
mov
outs
clc
xchg
call
pop
loop
(bad)
pop
popf
push
out
call
add
push
shl
sub
sahf
cmps
inc
inc
xor
das
mov
movs
loop
dec
mov
fild
or
fnsave
cmp
sbb
and
movs
dec
pop
pop
cwde
xchg
or
(bad)
jmp
add
ror
and
lds
push
jb
(bad)
fisttp
out
xor
xor
imul
fucomp
sbb
jg
push
out
add
and
inc
inc
in
push
push
mov
(bad)
(bad)
jmp
ins
fcomp
push
je
push
in
mov
aas
movs
jecxz
ror
clc
inc
fdivp
or
int3
test
(bad)
mov
inc
outs
mov
sub
fld
imul
inc
aad
jmp
(bad)
cmc
(bad)
(bad)
(bad)
jmp
iret
xchg
adc
in
gs
push
sbb
cmp
addr16
int3
add
js
(bad)
(bad)
(bad)
(bad)
mov
popa
mov
push
data16
and
cld
mov
inc
je
xor
mov
loopne
or
aas
adc
jmp
imul
mov
sub
daa
jg
mov
out
dec
call
dec
push
xchg
mov
icebp
sub
shl
mov
(bad)
(bad)
inc
mov
adc
xchg
popf
jmp
sub
mov
(bad)
(bad)
jmp
mov
ins
push
add
xor
int3
aas
push
xlat
jmp
ins
and
cmp
(bad)
(bad)
call
sub
inc
mov
sti
mov
fucom
cmp
(bad)
call
je
je
mov
sahf
daa
sbb
fmul
adc
clc
mov
jg
dec
mov
fwait
dec
(bad)
mov
jmp
jae
sub
pop
adc
fisttp
in
test
enter
call
add
jae
popf
dec
(bad)
pop
xlat
adc
or
shl
fnsave
ss
pop
lahf
(bad)
(bad)
jg
mov
push
sub
(bad)
jg
sub
inc
(bad)
(bad)
(bad)
mov
push
mov
daa
mov
xor
sub
cmp
xor
les
fld
mov
(bad)
(bad)
push
jp
imul
in
adc
(bad)
cmp
mov
xor
nop
stos
(bad)
(bad)
(bad)
jmp
mov
lods
mov
nop
jne
inc
inc
or
jns
mov
adc
push
popa
sbb
(bad)
(bad)
mov
test
adc
loopne
stc
dec
cmp
std
jge
and
cmp
shl
test
jbe
fadd
rol
xchg
jmp
call
ins
sub
clc
or
dec
jbe
xchg
(bad)
(bad)
dec
fcom
dec
imul
or
loop
push
push
inc
cli
(bad)
fild
test
jno
(bad)
push
cwde
fdivp
dec
sbb
mov
les
loopne
or
or
hlt
in
outs
mov
mov
dec
test
mov
adc
(bad)
(bad)
inc
jae
mov
aas
inc
mov
mov
sub
out
repz
mov
add
(bad)
jmp
inc
adc
fnstsw
mov
add
adc
retf
sub
and
xchg
inc
xchg
aaa
xchg
(bad)
push
or
push
retf
xor
(bad)
(bad)
(bad)
inc
xchg
mov
jno
and
cli
mov
push
movs
pop
cmps
sbb
or
(bad)
or
sbb
mov
inc
push
pop
sub
and
imul
dec
xchg
(bad)
(bad)
push
add
out
jg
mov
out
test
dec
and
shl
dec
jnp
addr16
mov
push
xor
xchg
lods
test
push
das
inc
push
gs
in
cmp
ret
cmp
or
pusha
cmps
push
and
stos
and
add
pop
and
(bad)
(bad)
inc
rcl
inc
out
and
add
enter
int
(bad)
call
push
cld
iret
iret
dec
inc
sub
inc
sbb
repnz
test
faddp
ror
ret
(bad)
(bad)
push
loop
fmul
shl
test
fcmovnb
xchg
jb
retf
pop
dec
push
jg
jb
enter
mov
ja
jbe
loope
sub
(bad)
sbb
out
mov
sub
mov
(bad)
(bad)
(bad)
jmp
xor
jae
sub
mov
fadd
retf
mov
add
xor
(bad)
(bad)
call
gs
ret
push
iret
and
cmp
popf
lahf
inc
test
dec
dec
ins
shl
xor
mov
repz
push
fcomip
adc
adc
(bad)
aad
das
popa
ficom
call
(bad)
iret
jmp
push
fucom
push
mov
out
fimul
xchg
mov
je
(bad)
mov
das
clc
jg
adc
pop
xlat
cmp
push
xor
or
dec
pusha
je
sbb
cli
(bad)
cmp
jb
pop
xchg
enter
retf
stos
xor
pushw
scas
fld
xchg
fisubr
sbb
sbb
movs
add
jle
mov
cmp
cmp
std
push
jmp
sbb
jbe
xor
inc
cmp
and
lods
bound
mov
lock
(bad)
(bad)
push
add
jns
jmp
fwait
inc
rcr
jae
mov
imul
mov
(bad)
(bad)
inc
add
inc
shr
ins
xrelease
jge
int3
xchg
pop
xchg
stc
jmp
mov
mov
je
adc
mov
nop
mov
pop
and
out
sub
call
mov
jb
xchg
lea
les
sub
imul
fcomip
das
sar
popf
jle
mov
push
dec
cmp
test
fidivr
xchg
xor
mov
rol
adc
lea
std
xchg
cmc
shr
(bad)
jg
ins
movs
add
and
lods
sbb
mov
jno
jno
add
(bad)
fbld
fstp
ja
mov
cmps
nop
in
ret
rcr
(bad)
call
adc
add
jmp
scas
mov
cmp
mov
push
out
(bad)
(bad)
(bad)
cmp
add
nop
ins
pop
into
or
scas
test
enter
sub
jno
add
call
dec
or
jne
inc
pop
fmul
pop
mov
cli
call
mov
sub
pop
jo
jl
xchg
dec
cwde
adc
mov
into
pushf
daa
rcr
adc
push
stos
scas
jo
add
(bad)
call
(bad)
pusha
ret
push
lods
jo
retf
fiadd
iret
push
das
jecxz
push
retf
aam
lock
sbb
pop
mov
mov
call
xchg
or
(bad)
(bad)
mov
xchg
retf
iret
push
mov
mov
lahf
shl
sti
or
dec
(bad)
(bad)
(bad)
push
iret
fptan
sar
cs
pop
mov
inc
ret
jnp
(bad)
in
xchg
pop
jl
push
loopne
mov
loopne
inc
xor
loop
pop
scas
cmp
or
ret
arpl
(bad)
mov
or
cwde
pop
pop
push
mov
scas
movs
cs
(bad)
(bad)
mov
(bad)
stos
inc
dec
ins
fstp
frstor
loop
call
(bad)
(bad)
mov
fldcw
xchg
inc
mov
lahf
(bad)
mov
(bad)
(bad)
(bad)
in
or
jmp
push
push
mov
es
sub
nop
and
xor
test
cmc
(bad)
(bad)
jmp
jl
retf
sbb
adc
mov
inc
(bad)
cdq
mov
stc
pusha
loopne
(bad)
(bad)
call
je
icebp
pop
pop
test
ret
push
loopne
adc
mov
xor
inc
sub
sbb
cld
mov
inc
xchg
inc
cmp
addr16
jge
mov
jmp
enter
mov
sub
in
out
sub
call
adc
das
arpl
push
nop
mov
mov
lods
out
je
inc
aam
dec
fistp
push
dec
fmul
icebp
push
ret
cmp
(bad)
dec
lods
mov
push
pop
data16
inc
xchg
or
lea
(bad)
hlt
or
scas
mov
arpl
(bad)
jmp
pop
mov
mov
clc
xor
jp
mov
cli
daa
pop
test
fs
arpl
mov
lock
(bad)
(bad)
jmp
das
jle
xor
int
(bad)
fnstenv
test
or
out
and
push
mov
cmp
mov
test
mov
mov
xor
jmp
sar
(bad)
jnp
test
mov
call
jmp
pop
mov
push
jmp
call
adc
sbb
lock
paddsb
xor
pop
mov
jmp
sub
movs
ss
sub
xchg
call
jmp
inc
push
imul
shl
jmp
jne
dec
(bad)
(bad)
(bad)
(bad)
ds
add
rol
ins
and
movs
aaa
and
es
and
inc
pop
popf
std
call
scas
xor
xor
jmp
mov
push
xchg
pop
test
pop
(bad)
call
rcr
push
loope
fcmovu
jmp
sar
out
sub
lods
(bad)
(bad)
(bad)
push
add
or
and
xchg
jmp
cmps
lods
sti
retf
sub
fisubr
pop
push
inc
pop
ror
xor
(bad)
(bad)
(bad)
mov
adc
push
loopne
cmps
mov
dec
sbb
xchg
addr16
retf
and
or
or
mov
call
out
(bad)
jg
xor
mov
xchg
and
pop
mov
push
cmp
stos
mov
push
or
(bad)
inc
ja
(bad)
retf
call
ins
sbb
dec
jecxz
pusha
dec
cmc
dec
cmc
fidivr
in
clc
(bad)
(bad)
fbld
dec
into
mov
xchg
mov
jne
aam
xchg
out
dec
out
xchg
int
(bad)
jmp
or
add
aam
jae
xor
(bad)
in
jae
cwde
mov
push
stos
and
jmp
popf
xor
cmp
addr16
jg
jns
and
cmp
call
jmp
xchg
pop
adc
xlat
arpl
(bad)
fisttp
dec
shl
repz
pop
mov
cmc
pop
mov
pop
mov
and
(bad)
inc
ror
outs
mov
mov
pop
test
inc
(bad)
(bad)
mov
loop
cwde
fs
adc
pop
inc
sub
lods
jo
into
lods
cli
(bad)
call
and
jbe
in
cmp
mov
cmp
jp
and
jmp
mov
jmp
adc
repnz
hlt
idiv
sbb
stc
fnstsw
dec
pop
inc
cli
clc
outs
clc
call
das
jno
aas
xor
fcom
dec
pop
mov
cmp
rcr
aad
(bad)
inc
cdq
fadd
or
sbb
loopne
ds
(bad)
(bad)
out
xchg
jno
push
(bad)
jg
and
xor
mov
mov
inc
shl
aas
dec
into
sub
pop
mov
jmp
call
sbb
movs
sbb
lea
inc
(bad)
pop
mov
push
mov
shl
mov
out
sub
shr
rol
(bad)
mov
sub
popa
scas
out
outs
jecxz
paddb
(bad)
(bad)
call
xchg
dec
push
inc
xchg
pop
inc
sub
xchg
ficom
cmp
xor
(bad)
mov
loop
jmp
loop
mov
dec
(bad)
(bad)
cmp
sub
out
sub
fild
es
fild
ret
(bad)
int3
popw
je
adc
jecxz
sub
jmp
(bad)
jmp
adc
pop
inc
loopne
xor
cmp
(bad)
aam
sub
add
shr
es
call
sbb
mov
fwait
mov
sbb
(bad)
(bad)
inc
popa
xor
call
enter
fld
repz
jg
and
mov
sub
fwait
add
(bad)
pop
scas
push
retf
cld
(bad)
jmp
jbe
mov
jbe
popf
and
adc
xor
movs
cmp
scas
push
adc
clc
call
pusha
adc
cdq
xchg
mov
jle
(bad)
inc
cmc
arpl
jbe
and
inc
loop
les
jge
int
xor
add
cmp
in
fst
pusha
shl
dec
push
(bad)
push
jge
jbe
cld
jae
cmc
mov
add
xor
es
(bad)
(bad)
call
cli
call
sub
mov
or
jo
ret
fsubr
(bad)
(bad)
(bad)
inc
sahf
mov
dec
in
cmp
mov
sti
add
adc
pushf
cmp
add
ret
(bad)
(bad)
inc
mov
jl
inc
mov
inc
push
or
xor
pop
inc
aam
dec
call
and
ja
ret
(bad)
call
mov
ret
jge
jmp
add
(bad)
dec
push
(bad)
outs
(bad)
out
icebp
scas
fistp
sbb
xchg
jno
ficom
div
stos
mov
call
stc
sub
icebp
(bad)
xchg
iret
push
rol
fwait
(bad)
(bad)
call
shr
cmp
jnp
adc
movs
push
inc
mov
lods
(bad)
(bad)
(bad)
jmp
push
(bad)
iret
mov
popf
aad
inc
inc
xchg
out
neg
(bad)
in
(bad)
call
push
not
xor
mov
and
fiadd
inc
mov
or
add
sbb
(bad)
int3
repz
scas
call
cmps
xchg
ror
jns
clc
dec
pop
maskmovq
div
xor
jno
fadd
mov
xchg
jmp
dec
mov
cmp
inc
rol
dec
pushf
or
test
movs
fs
pop
lods
dec
mov
test
je
call
push
sbb
adc
mov
fbstp
aaa
mov
dec
sbb
(bad)
hlt
enter
cmps
mov
add
pop
inc
call
add
push
std
fs
and
jmp
push
pop
cmp
(bad)
push
test
and
mov
retf
sar
push
adc
stos
xchg
call
xchg
cli
imul
xor
movs
aas
scas
clc
(bad)
jmp
js
inc
jo
fdivr
push
lock
mov
enter
cmp
pop
cmps
fild
dec
jmp
popa
cdq
add
add
ja
(bad)
out
fisttp
mov
fnstcw
pop
jbe
(bad)
(bad)
jmp
mov
cmp
jmp
out
aas
movs
(bad)
push
nop
test
or
sub
call
scas
xor
inc
ret
push
sub
dec
mov
call
(bad)
dec
sub
mov
mov
call
not
into
jmp
add
sbb
or
push
xchg
dec
jecxz
repnz
icebp
sbb
dec
push
lods
mov
mov
loop
xchg
jmp
std
loopne
(bad)
fisub
lock
cli
dec
cld
neg
(bad)
out
or
(bad)
(bad)
call
add
pop
imul
or
or
and
mov
mov
stc
or
ds
(bad)
(bad)
(bad)
call
mov
(bad)
mov
into
mov
outs
je
adc
push
fmul
dec
nop
add
xor
call
sar
out
pop
mov
inc
push
dec
inc
mov
and
(bad)
fbstp
fistp
sbb
(bad)
call
push
outs
push
jmp
mov
inc
xor
mov
ja
(bad)
mov
sbb
outs
pop
out
loope
cdq
leave
lods
rol
xor
(bad)
(bad)
(bad)
call
lea
inc
jp
ror
cli
cmp
outs
mov
in
scas
xor
and
mov
call
adc
inc
and
xchg
mov
call
push
pop
sbb
push
add
mov
(bad)
(bad)
mov
sub
fwait
hlt
pop
and
jae
jno
bound
xchg
xor
(bad)
(bad)
(bad)
call
cmps
sbb
retf
xchg
xor
or
jne
out
mov
call
sbb
xchg
test
xchg
mov
xor
sbb
fs
(bad)
jmp
xchg
ds
fs
push
mov
mov
mov
mov
xchg
(bad)
jg
(bad)
xchg
and
pop
retf
push
(bad)
xchg
push
push
movs
dec
mov
(bad)
(bad)
(bad)
call
adc
inc
aam
sub
fwait
shr
add
inc
xor
call
adc
jmp
mov
movs
fsubr
sub
mov
(bad)
dec
lock
inc
inc
sbb
sbb
sbb
ins
scas
test
imul
repz
dec
(bad)
pop
rol
jge
in
adc
cli
jmp
mov
adc
nop
pop
or
pop
and
jnp
pushf
aad
fs
mov
add
loop
ins
jno
bound
mov
mov
rol
dec
and
cwde
call
inc
xchg
push
dec
mov
cmp
inc
jae
(bad)
popf
sbb
pop
inc
cmc
jb
jg
xchg
shr
jecxz
xor
call
fistp
mov
cmp
fmul
cdq
lahf
lds
lock
not
(bad)
(bad)
inc
in
sbb
mov
test
bound
stc
pop
js
scas
ins
stos
adc
(bad)
jmp
inc
daa
mov
and
in
or
xor
fnstcw
cs
cmp
iret
fisubr
xchg
mov
push
cwde
mov
pop
in
mov
scas
add
ins
jp
cmps
ja
sbb
test
jmp
cli
inc
and
fadd
cdq
test
not
push
in
fild
sar
inc
jb
cmp
adc
inc
sub
adc
pop
push
scas
shl
inc
les
xor
mov
(bad)
sub
cmp
or
xchg
out
leave
out
xchg
xchg
(bad)
push
je
mov
and
and
xchg
enter
push
adc
jmp
sbb
jmp
bound
sar
fsubr
fs
fldcw
mov
xor
(bad)
(bad)
push
mov
loop
mov
sbb
lahf
or
int3
jno
xchg
sub
fidiv
(bad)
inc
retf
push
pop
inc
cmp
cmp
bound
ins
(bad)
(bad)
(bad)
push
(bad)
fldcw
into
sbb
cmp
jg
pop
div
sub
(bad)
pusha
bound
scas
in
mov
enter
loopne
jmp
pop
fs
(bad)
xchg
mov
mov
(bad)
movmskps
mov
fisttp
and
je
jo
jecxz
push
popf
cmp
push
pop
push
outs
mov
pop
jl
out
jmp
(bad)
push
(bad)
(bad)
(bad)
inc
pop
mov
sbb
stos
hlt
loope
cmp
mov
inc
push
addr16
cmp
pop
mov
and
and
imul
add
loope
sub
inc
in
push
dec
cmps
lods
mov
jg
mov
js
mov
shl
fidivr
jecxz
mov
test
push
(bad)
and
out
jmp
push
(bad)
lock
mov
ins
stos
in
out
and
inc
fldenv
inc
imul
je
int
sbb
sub
dec
mov
dec
ja
test
cmp
ret
sbb
cmp
lds
icebp
es
or
mov
push
add
push
add
lods
std
aaa
loope
xor
cld
or
loope
push
sbb
(bad)
call
rol
int
mov
jle
jge
in
loope
xchg
dec
out
xchg
push
int
(bad)
(bad)
mov
xor
jge
div
ffree
inc
out
leave
push
xchg
(bad)
(bad)
(bad)
(bad)
fisubr
sub
cmp
stc
sbb
push
jmp
(bad)
dec
rcr
sub
adc
jecxz
inc
jge
(bad)
(bad)
out
fdiv
or
push
ins
jb
ds
xchg
cmps
dec
das
cmps
push
outs
nop
ret
popa
outs
push
sbb
mov
stos
and
xor
xchg
mov
xlat
nop
(bad)
(bad)
(bad)
push
aad
mov
nop
mov
mov
sub
sub
nop
xor
adc
(bad)
(bad)
(bad)
jmp
adc
rcr
aad
stos
adc
adc
lea
and
xchg
push
dec
jl
(bad)
ins
and
add
inc
movs
inc
fst
add
cdq
pusha
mov
mov
mov
(bad)
call
cdq
sbb
sahf
adc
sar
mov
mov
movs
loopne
mov
(bad)
jmp
cmps
pop
ret
call
xchg
pushf
xchg
loope
out
nop
lock
mov
and
sbb
int3
ret
sub
or
lock
rcr
pop
cmp
(bad)
(bad)
call
out
pop
cs
push
lock
inc
cmp
push
lahf
int3
sub
(bad)
mov
push
or
in
int
hlt
in
xchg
inc
dec
repz
jg
push
jle
dec
xchg
add
pop
dec
cmps
out
enter
sbb
sbb
shr
xchg
mov
addr16
stos
(bad)
pop
ret
sbb
sar
ins
mov
outs
cld
adc
repz
cs
or
(bad)
(bad)
push
loop
ficomp
jo
and
xor
or
in
pop
cmp
enter
xchg
outs
and
add
call
iret
popf
(bad)
call
inc
shl
or
(bad)
(bad)
xchg
dec
movs
and
jl
faddp
inc
dec
call
add
push
shl
sbb
clc
add
bound
mov
shr
ficomp
pop
retf
pop
jae
xchg
out
fidiv
(bad)
(bad)
out
ins
shr
xor
ins
dec
lods
bound
ret
sbb
sti
movs
shl
inc
adc
inc
(bad)
ffreep
outs
push
sbb
dec
pop
mov
pop
out
je
cmp
adc
dec
sbb
mov
in
inc
or
(bad)
(bad)
(bad)
(bad)
(bad)
fnstcw
test
mov
cmp
adc
into
sbb
cld
push
cmp
(bad)
(bad)
call
jno
jmp
xor
sbb
(bad)
fidiv
dec
mov
int
jecxz
dec
jbe
ret
dec
js
mov
jmp
(bad)
cmp
repz
(bad)
jg
ficom
mov
fcmovnb
scas
dec
sti
xchg
(bad)
xchg
inc
sub
ret
or
xchg
pop
add
(bad)
call
mov
(bad)
inc
xor
push
and
ret
jle
pop
sub
scas
xor
(bad)
(bad)
call
push
mov
jmp
xor
jmp
push
pop
inc
mov
fst
pop
call
cwde
jmp
loope
push
adc
sub
ss
xchg
call
push
(bad)
leave
mov
(bad)
cmp
cs
dec
sbb
cmp
inc
cmp
add
dec
jmp
dec
je
aad
jne
les
lods
inc
jl
(bad)
(bad)
call
gs
stos
dec
mov
jmp
syscall
xchg
arpl
sbb
and
push
data16
push
(bad)
(bad)
(bad)
dec
data16
jne
dec
sti
aas
shl
fadd
icebp
cmps
scas
push
dec
(bad)
aas
clc
out
enter
aaa
dec
cld
(bad)
(bad)
call
lods
shl
fsubr
push
mov
jns
aam
fs
mov
sub
lds
push
ss
lahf
adc
(bad)
enter
out
icebp
(bad)
jmp
fistp
cmp
mov
sbb
add
(bad)
(bad)
adc
xchg
shl
lds
and
ss
pop
aam
cmp
mov
jl
out
mov
mov
sbb
movs
in
sbb
(bad)
call
sete
adc
mov
push
pop
cmps
dec
loop
mov
or
jecxz
push
cmps
movs
sbb
or
(bad)
cld
jns
das
push
in
pop
xchg
or
(bad)
xchg
(bad)
adc
lods
not
push
out
and
daa
cld
jg
test
sahf
jno
(bad)
fwait
rcr
mov
cld
mov
jmp
add
xor
ss
adc
in
dec
retf
xchg
mov
push
(bad)
call
gs
push
cmp
adc
or
pusha
iret
mov
add
imul
mov
lods
(bad)
jmp
pop
shl
cmp
mov
scas
add
adc
xor
inc
or
jg
adc
jge
push
retf
aam
dec
mov
push
(bad)
dec
push
icebp
jb
retf
sub
pop
and
dec
rcl
mov
mov
fs
and
push
aam
test
or
outs
mov
loope
js
das
cli
add
xor
xor
mov
aas
lahf
sqrtps
call
inc
sbb
ss
ftst
es
xor
push
sar
call
call
cmps
aam
arpl
popa
cs
inc
stc
faddp
ss
(bad)
(bad)
in
nop
inc
rcl
aad
inc
push
push
sub
or
push
test
fld
enter
dec
add
mov
jge
inc
int
icebp
(bad)
mov
test
dec
cmp
loop
push
addr16
jmp
outs
dec
mov
jb
lods
mov
nop
add
xor
sar
outs
add
adc
aam
int3
add
gs
das
loop
add
or
and
mov
sbb
idiv
not
icebp
stos
fwait
cmp
hlt
(bad)
(bad)
dec
and
mov
aas
jno
(bad)
hlt
iret
das
jecxz
movd
aas
icebp
jmp
pop
and
dec
jns
movs
dec
cdq
outs
xchg
or
pop
push
inc
cld
(bad)
jmp
dec
mov
dec
mov
mov
cmps
pop
repz
mov
std
(bad)
jg
in
add
lea
or
fimul
in
or
aas
loope
(bad)
call
repz
dec
popa
inc
lea
jno
aam
aad
mov
add
xor
or
push
inc
clc
call
scas
aam
lds
pop
cld
scas
fild
push
fcomi
sub
sbb
pop
icebp
call
rcr
hlt
dec
out
mov
mov
into
popa
lds
sbb
pop
adc
and
sbb
xor
mov
outs
(bad)
jg
jmp
shr
xor
fs
lods
inc
(bad)
ins
mov
(bad)
cmp
jmp
fisub
push
inc
jb
inc
inc
mov
pop
push
push
(bad)
(bad)
pushf
fstp
cmp
add
mov
ret
jmp
mov
shl
fst
xor
outs
jno
or
(bad)
inc
push
rcl
sub
int
mov
lds
in
hlt
call
out
nop
(bad)
(bad)
outs
mov
jg
push
xchg
pop
sub
in
xchg
cmp
push
movs
or
pop
fild
and
push
jo
imul
xchg
mov
mov
inc
mov
push
jae
push
dec
fsubr
sub
lods
cmc
(bad)
(bad)
jmp
cdq
xlat
pushf
mov
lds
and
cmp
call
int3
movs
jae
fadd
jmp
xor
or
xchg
mov
push
pop
aas
(bad)
ret
jg
push
xor
or
repz
out
cmp
jae
pop
cmc
(bad)
dec
push
xor
adc
hlt
(bad)
jmp
push
(bad)
xlat
movs
mov
(bad)
(bad)
dec
repz
mul
mov
fs
hlt
lea
push
jns
jnp
movs
das
add
inc
mov
rcl
ja
(bad)
cmp
loop
out
mov
xor
pop
jnp
test
outs
leave
mov
(bad)
outs
and
jmp
(bad)
call
mov
inc
loopne
mov
fmul
sub
call
or
rcl
ror
cmp
cli
(bad)
(bad)
(bad)
in
adc
cmps
iret
shl
sub
cdq
inc
ins
add
add
fs
enter
sbb
add
rol
in
and
push
mov
imul
ss
pop
push
test
jo
(bad)
(bad)
inc
cmp
rol
retf
movs
mov
aam
iret
lahf
cmp
sub
ret
(bad)
(bad)
(bad)
call
push
ror
push
xlat
lods
js
cmp
cdq
leave
enter
adc
leave
xchg
movs
cli
mov
mov
mov
data16
fwait
adc
lods
std
fadd
add
mov
int3
sar
retf
jmp
call
(bad)
xor
xchg
jne
out
imul
loope
and
iret
(bad)
mov
or
nop
leave
xchg
movs
int3
pop
add
movs
enter
fcomip
pop
jmp
mov
jle
call
jg
and
(bad)
in
(bad)
push
retf
repnz
push
dec
data16
mov
push
mov
mov
movs
and
or
outs
dec
xchg
dec
xchg
push
inc
or
xor
jg
adc
mov
xchg
mov
std
cwde
mov
mov
sbb
arpl
xchg
imul
fwait
sub
jb
stos
retf
pop
in
(bad)
fld
mov
iret
loopne
cmps
(bad)
or
jecxz
(bad)
(bad)
cmp
ficomp
jl
or
dec
adc
mov
xchg
(bad)
call
in
sbb
add
ret
loope
mov
out
sbb
or
clc
int
hlt
ds
sub
mov
push
cld
das
or
in
fs
fisubr
jp
jle
iret
into
arpl
push
or
std
jecxz
jecxz
aaa
jg
push
cs
cmp
(bad)
pop
outs
bound
(bad)
mov
out
mov
(bad)
cli
cmps
mov
and
(bad)
cmp
dec
(bad)
(bad)
mov
add
pushf
cmp
push
ret
sbb
fldcw
sub
cmp
mov
rcr
mov
cmp
(bad)
inc
addr16
imul
jo
jae
imul
jg
xor
(bad)
(bad)
(bad)
jmp
cmps
xchg
fs
push
xor
mov
xchg
sub
and
add
xor
cmp
(bad)
jmp
xchg
adc
inc
bound
stos
cdq
mov
adc
xchg
pop
mov
mov
push
in
aam
mov
test
dec
xchg
cli
dec
adc
xor
fcomip
jo
lea
movs
mov
mov
adc
mov
lock
and
outs
dec
dec
call
imul
pop
int
hlt
nop
dec
mov
int
icebp
pop
rcl
add
(bad)
(bad)
(bad)
(bad)
call
cmps
fcmovbe
loop
jnp
mul
aam
shl
xchg
cmps
rol
sub
addr16
(bad)
(bad)
dec
add
jno
out
mov
ja
out
sub
jp
mov
mov
(bad)
sub
addr16
shr
call
xchg
add
int3
retf
and
jno
int3
gs
(bad)
(bad)
jg
es
ret
pusha
pop
mov
dec
addr16
mov
scas
icebp
(bad)
mov
inc
jnp
push
xchg
push
ret
jns
imul
stos
adc
or
movs
shr
(bad)
push
push
sub
or
cmp
(bad)
jmp
dec
sub
xor
hlt
jmp
mov
retf
imul
pop
(bad)
out
push
sub
out
call
not
push
hlt
jae
sub
call
movs
or
das
adc
mov
call
mov
je
push
cmp
mov
mov
repnz
or
fbstp
sub
pop
or
adc
daa
shl
(bad)
scas
popf
je
push
outs
(bad)
(bad)
(bad)
jg
int3
int3
xor
fistp
mov
xor
cmps
int
dec
xchg
hlt
and
in
mov
and
enter
movs
xor
(bad)
(bad)
(bad)
call
pop
adc
xor
xor
add
xchg
xchg
stc
jae
push
aaa
jne
rep
add
(bad)
dec
mov
sbb
push
xor
mov
cmp
(bad)
(bad)
call
clc
dec
pop
and
loope
sub
adc
xchg
jmp
add
add
stos
and
rol
jg
pop
sub
adc
dec
adc
adc
fisub
(bad)
(bad)
call
cmps
inc
mov
push
data16
enter
je
push
iret
push
mov
fcos
(bad)
(bad)
jmp
pop
xchg
cmp
(bad)
mov
fstp
popa
inc
xchg
jle
int
add
das
jb
movs
inc
push
xchg
xor
inc
(bad)
call
loop
shl
mov
sbb
xchg
and
(bad)
(bad)
(bad)
fisttp
inc
xchg
in
cdq
ret
mov
pop
(bad)
and
mov
pop
add
dec
push
call
add
mov
daa
retf
fs
jl
mov
dec
outs
inc
rol
clc
jmp
outs
in
mov
pop
pushf
jmp
clc
(bad)
(bad)
jp
or
or
lea
mov
sub
imul
enter
cmp
push
xchg
inc
je
push
sbb
dec
jns
leave
jmp
cmps
(bad)
(bad)
(bad)
fst
inc
je
inc
pop
dec
dec
inc
aaa
push
aaa
or
mov
gs
popa
cld
(bad)
(bad)
cmp
rcl
jbe
cmp
leave
cmp
pop
pop
hlt
jg
add
aam
addr16
sub
push
mov
test
jmp
out
add
cs
pop
xlat
add
push
out
pushf
jns
sub
(bad)
out
(bad)
iret
loope
push
fwait
mov
sbb
cmp
xchg
cli
fadd
jo
cmc
pop
ret
or
(bad)
(bad)
(bad)
(bad)
out
scas
sbb
out
adc
(bad)
adc
pop
xchg
pop
mov
sbb
ret
mov
sub
rcr
pop
popa
loope
outs
stos
sahf
sub
mov
sbb
pop
clc
xor
out
icebp
iret
or
icebp
mov
rcr
push
sar
inc
or
je
outs
xchg
add
or
mov
mov
or
outs
cwde
stc
mov
and
cs
outs
fwait
in
(bad)
(bad)
mov
lahf
retf
test
add
call
jne
pusha
add
mov
retf
jno
sbb
push
test
mov
mov
into
push
add
pop
cmc
(bad)
(bad)
(bad)
jmp
jbe
mov
(bad)
adc
aas
fs
xlat
adc
cmps
mov
das
rcr
adc
std
xchg
(bad)
(bad)
(bad)
jmp
xchg
push
adc
sbb
ret
aaa
loope
push
pop
stos
add
fnstcw
stos
and
xchg
stos
sahf
shl
mov
and
loop
cmc
(bad)
push
outs
ret
xor
sub
push
in
cdq
stos
or
xor
dec
gs
(bad)
call
rcl
movs
cmc
(bad)
push
cli
rcr
sbb
pop
push
dec
std
jno
pop
mov
lods
cli
(bad)
(bad)
jmp
fidiv
xor
inc
xchg
jg
cmp
retf
jmp
imul
adc
xchg
mov
ds
push
xchg
test
mov
stos
xchg
(bad)
arpl
rcl
adc
nop
lock
fcmove
jmp
mov
cmps
cmps
ins
push
aaa
push
shr
mov
push
(bad)
(bad)
(bad)
call
pop
or
push
mov
dec
ins
and
mov
xchg
ffreep
cmp
xchg
adc
(bad)
mov
sbb
mul
(bad)
xchg
stc
push
(bad)
(bad)
call
adc
out
jno
les
aad
pop
sub
sbb
mov
call
(bad)
(bad)
in
aam
xor
jmp
add
jmp
fs
adc
push
cmp
test
and
push
mov
cli
push
in
fmul
xor
ret
movs
or
in
inc
int3
in
push
mov
fcom
(bad)
rcr
xchg
pop
pop
(bad)
stos
in
repnz
in
(bad)
(bad)
call
test
cli
gs
test
stos
call
int3
cli
mov
out
add
(bad)
(bad)
cmp
movs
jmp
test
fs
xchg
daa
inc
(bad)
(bad)
(bad)
dec
dec
addr16
outs
mov
add
mov
and
inc
aam
idiv
add
sub
cwde
pop
cdq
xchg
jb
mov
pop
adc
jne
js
jo
cmp
xchg
test
push
sbb
aam
or
pop
hlt
loopne
jb
push
enter
xor
fs
(bad)
cmp
sub
(bad)
out
bound
lea
add
push
and
xchg
jo
sub
lahf
in
add
out
bound
pop
ret
cmp
xor
sar
fcomp
cmp
arpl
(bad)
(bad)
dec
mov
sbb
dec
rcl
xchg
inc
out
rcl
ret
cmp
outs
shl
mov
push
aas
loope
pop
test
cpuid
das
dec
cmp
call
cmp
fld
xor
xchg
dec
xor
retf
retf
aaa
sub
in
call
(bad)
pop
or
inc
inc
cmp
xor
cmp
ret
mov
(bad)
(bad)
(bad)
jmp
rcr
fmul
push
sbb
xlat
pop
movs
mov
stos
mov
mov
out
and
jge
jl
add
sub
dec
add
fbstp
mov
fcom
inc
sti
xchg
mov
faddp
push
xchg
pop
push
add
cdq
dec
fld
push
sbb
jb
mov
jmp
and
idiv
adc
repnz
xor
lds
inc
(bad)
dec
je
push
cld
out
mov
pop
pop
adc
(bad)
call
dec
mov
add
(bad)
jmp
inc
iret
fcom
xchg
fcomp
call
lock
jmp
aad
inc
pushf
push
inc
test
add
loopne
cmp
jo
inc
mov
fisubr
aaa
fidiv
loope
fwait
ja
in
cmps
outs
nop
stos
xor
outs
adc
in
pop
int
stos
push
(bad)
(bad)
(bad)
jmp
inc
out
cdq
or
inc
sahf
test
xor
xor
mov
cdq
mov
scas
(bad)
cmp
mov
fld
popf
xlat
mov
pop
inc
cmp
mov
js
je
cmp
push
dec
loopne
mov
pusha
nop
sbb
add
add
popf
inc
cld
inc
add
repnz
pop
mov
dec
fiadd
push
and
stos
jmp
add
jnp
add
mov
adc
xchg
jns
pop
std
jg
mov
cmp
fadd
imul
pop
jge
je
add
or
std
inc
rol
cdq
sub
(bad)
jmp
cmps
mov
adc
xchg
repnz
sbb
sub
fs
(bad)
(bad)
in
dec
sub
int
dec
shl
xchg
jge
sub
dec
cmp
and
jbe
(bad)
inc
mov
shl
push
in
push
mov
pop
into
in
and
and
push
bound
cld
(bad)
dec
je
mov
mov
retf
dec
jge
mov
lods
mov
push
add
popf
inc
inc
(bad)
std
adc
(bad)
(bad)
(bad)
call
mov
enter
shl
call
shl
ss
test
pop
fcomp
(bad)
(bad)
(bad)
push
(bad)
mov
(bad)
out
mov
cwde
or
mov
iret
mov
mov
mul
cwde
sub
jbe
cdq
je
sbb
add
cmp
mov
out
xor
mov
inc
call
test
mov
in
test
add
ss
cli
jmp
dec
xchg
mov
retf
push
ret
push
das
inc
cmp
add
push
loopne
icebp
sahf
aas
js
stos
fisub
pusha
faddp
mov
ret
mov
(bad)
cmp
mov
(bad)
(bad)
jg
outs
inc
retf
xchg
sub
push
cdq
fmul
out
add
jbe
jle
jae
mov
adc
lods
sahf
scas
gs
fisttp
xchg
jg
dec
lods
test
gs
popa
repnz
(bad)
(bad)
dec
aas
inc
ret
adc
into
fwait
xor
test
push
xor
mov
mov
(bad)
mov
cmc
mov
retf
sbb
out
add
and
pop
mov
jno
jg
dec
xor
cmp
inc
inc
lea
std
(bad)
fbld
mov
sub
mov
push
mov
sub
jp
push
push
ja
jg
(bad)
jmp
mov
ds
and
mov
adc
(bad)
dec
in
(bad)
(bad)
(bad)
call
rol
jmp
jb
sbb
jl
out
or
nop
outs
data16
jle
or
clc
(bad)
retf
sub
int
mov
fnstenv
or
sbb
(bad)
dec
xchg
out
or
sub
test
mov
xchg
xchg
lods
in
sbb
pop
and
dec
add
xchg
push
adc
dec
inc
push
(bad)
jmp
lock
pop
test
fcom
shl
xor
fisubr
cmc
hlt
sub
call
add
sub
push
sub
ret
std
mov
(bad)
dec
or
ja
cmp
lock
test
push
cmp
pop
sub
mov
and
popf
pushf
ret
sub
push
push
fsub
push
(bad)
jg
sbb
cmp
dec
xlat
leave
in
cs
ror
sbb
(bad)
(bad)
(bad)
(bad)
js
push
and
adc
in
adc
sbb
push
stos
stc
sub
das
xor
aad
mov
jecxz
aas
repz
xor
lds
cwde
cmp
and
loope
cld
outs
adc
(bad)
(bad)
test
dec
jbe
jbe
out
lods
(bad)
(bad)
push
mov
hlt
jnp
call
push
ja
inc
add
lods
into
cmps
inc
(bad)
(bad)
jg
sbb
ret
xchg
add
cmp
push
ss
jns
xchg
ret
jb
mov
dec
(bad)
jg
std
sar
inc
imul
in
lea
jne
push
js
dec
jo
(bad)
(bad)
dec
mov
cmp
loope
std
dec
inc
xchg
jmp
sub
ins
dec
add
mov
mov
out
jp
in
call
mov
jno
xchg
adc
(bad)
gs
(bad)
dec
push
jl
jmp
push
add
xchg
in
jmp
lahf
int3
sbb
(bad)
(bad)
(bad)
dec
sub
pop
mov
pop
jae
xchg
dec
pop
test
push
xchg
xchg
inc
retf
jmp
int
pop
pop
mov
loope
xor
aas
mov
dec
nop
sub
and
inc
sub
jae
mov
inc
adc
(bad)
(bad)
jmp
cdq
pusha
inc
mov
aad
and
dec
aam
into
jl
sbb
xchg
mov
xchg
gs
(bad)
jbe
cmp
aaa
sbb
inc
test
xchg
jecxz
(bad)
(bad)
fistp
cmp
sub
je
jne
stos
dec
test
(bad)
jmp
and
ds
inc
outs
cmp
sbb
jg
mov
jo
mov
(bad)
stos
js
jp
hlt
pop
xor
lock
push
les
nop
pop
out
adc
xchg
adc
movs
test
and
jne
add
sub
lods
xchg
adc
push
jmp
cmc
fsubr
xor
int3
hlt
jo
aaa
pop
fcomi
mov
xor
(bad)
(bad)
jmp
gs
stc
mov
push
xor
pusha
dec
add
and
nop
lea
mov
mov
jmp
rcl
push
ror
jb
cs
pop
xlat
xor
dec
sub
and
clc
dec
cld
mov
jne
je
jl
adc
mov
outs
ins
xchg
mov
mov
and
push
fdivr
fnstcw
mov
jl
xchg
(bad)
call
add
or
call
cmp
add
out
cs
stos
ins
loope
inc
loope
pop
pop
ret
jae
pop
jp
fbld
push
dec
mov
add
fnstsw
fadd
mov
cmc
jecxz
xchg
lock
pop
mov
loopne
and
adc
and
or
pop
or
pop
repz
mov
and
cli
jmp
jge
ror
loop
rcl
arpl
push
jl
(bad)
jg
add
mov
inc
add
cmp
jecxz
(bad)
(bad)
jmp
add
sti
icebp
jp
adc
xchg
imul
je
and
mov
cmps
mov
(bad)
(bad)
call
ret
aad
xchg
jp
es
lea
ss
les
es
sub
mov
leave
adc
out
sahf
rcr
int
dec
outs
push
in
dec
jbe
mov
adc
adc
xor
add
mov
adc
mov
jmp
xor
pop
mov
js
nop
scas
out
adc
ins
loopne
inc
repnz
sub
mov
into
mov
inc
aad
cmps
mov
int
push
push
gs
ins
(bad)
call
outs
lea
add
push
dec
xor
mov
(bad)
(bad)
(bad)
mov
add
ret
dec
scas
test
in
ja
or
xor
and
mov
pop
hlt
(bad)
(bad)
call
pop
fwait
in
cmp
aam
addr16
es
inc
retf
loope
xchg
mov
aad
cmp
mov
inc
push
sub
sbb
mov
iret
loopne
fdivr
out
and
add
dec
jno
bound
dec
stos
out
lods
and
test
jmp
pop
into
cwde
imul
fild
or
pop
(bad)
(bad)
jg
mov
jl
mov
mov
sbb
jge
add
(bad)
(bad)
jmp
cmp
mov
into
or
adc
fs
stos
cld
sub
inc
out
scas
pushf
mov
push
mov
dec
fmul
pop
xor
pop
push
cld
mov
mov
jg
xlat
aaa
std
(bad)
inc
icebp
xchg
mov
sub
mov
cwde
mov
jl
mov
loop
(bad)
(bad)
(bad)
jg
clc
adc
lock
cli
lahf
clc
push
mov
dec
and
cmc
sahf
add
sub
call
push
clc
or
dec
xor
mov
(bad)
(bad)
fisub
jge
cmp
pop
fwait
or
pop
out
sar
das
mov
jecxz
popf
test
outs
jle
jg
add
cmps
and
add
sahf
in
mov
out
clc
int
(bad)
push
ins
lods
sub
aad
jb
jno
(bad)
(bad)
mov
dec
mov
sub
push
jae
cmp
pop
pop
mov
xor
mov
mov
movs
or
stos
push
or
push
lods
sub
mov
mov
dec
mov
adc
(bad)
(bad)
jmp
jne
or
jmp
pop
mov
loope
xlat
inc
cmp
(bad)
(bad)
fild
mov
lahf
xor
dec
mov
arpl
es
jno
xchg
(bad)
inc
ret
and
lds
dec
les
xchg
retf
or
adc
dec
lds
pop
push
pop
jmp
dec
pop
xchg
or
outs
sbb
jbe
mov
jnp
sub
xchg
and
inc
add
sar
in
movs
pop
loopne
ins
loope
pop
xchg
call
ins
fs
mov
mov
inc
push
shr
dec
mov
(bad)
sar
cmp
cmps
and
sbb
dec
and
mov
pop
mov
sub
pop
push
lock
(bad)
(bad)
(bad)
call
aad
aam
popf
mov
aad
mov
sbb
mov
push
adc
xchg
pop
(bad)
(bad)
out
xor
or
jb
mov
jmp
sbb
mov
jle
lods
push
dec
jmp
mov
push
cmp
inc
arpl
rcl
cmps
(bad)
cmp
push
mov
rol
pop
call
dec
xchg
retf
push
cmps
xchg
xlat
jmp
aas
inc
push
clc
dec
js
hlt
(bad)
mov
mov
(bad)
call
push
jmp
inc
or
jae
aam
xchg
int3
(bad)
(bad)
jg
ds
mov
test
sbb
lahf
and
push
xchg
iret
mov
imul
inc
call
push
mov
mov
xchg
clc
rcl
mov
mov
adc
push
sub
popa
stc
mov
pop
in
inc
out
into
xchg
push
(bad)
pop
dec
jecxz
xor
shl
sbb
popa
mov
inc
xchg
rcl
mov
out
pop
sbb
(bad)
repz
call
std
hlt
shr
push
push
sub
test
mov
and
pop
popf
addr16
mov
dec
dec
xor
imul
(bad)
(bad)
jl
mov
add
mov
mov
(bad)
(bad)
call
pop
test
pop
lea
stos
sub
pop
xchg
ins
xchg
aaa
cdq
xchg
sub
retf
mov
fdivr
and
(bad)
(bad)
jmp
cs
sti
pop
repnz
sbb
jne
cld
fcmovu
mov
out
(bad)
(bad)
(bad)
jmp
xchg
cmps
gs
shl
sbb
cmc
scas
jge
mov
or
pop
sub
stos
inc
mov
or
rcr
outs
(bad)
jo
or
adc
push
push
xchg
mov
fwait
(bad)
dec
sub
mov
xor
jl
aam
or
sub
(bad)
(bad)
call
inc
cmps
sbb
sub
mov
out
sub
(bad)
cmp
call
popa
jmp
sbb
mov
shr
mov
repz
ret
cwde
push
adc
push
add
sbb
and
adc
mov
imul
add
cli
add
cs
popf
fs
call
mov
pop
(bad)
out
mov
ret
pop
cmp
aas
jno
sub
std
(bad)
push
jge
(bad)
inc
xchg
adc
in
fdiv
jecxz
pop
dec
xchg
dec
ret
cs
(bad)
(bad)
inc
leave
gs
jmp
sbb
jbe
test
pop
outs
mov
pop
jle
xor
(bad)
clc
lahf
(bad)
aas
mov
jmp
aaa
into
mov
ret
movs
retf
retf
js
dec
fisttp
sbb
dec
fsub
pop
(bad)
fmul
test
cmp
ins
daa
or
push
xchg
lods
lods
fwait
gs
(bad)
(bad)
(bad)
jmp
jne
pop
pop
dec
add
mov
push
push
aad
movs
dec
cmps
ins
(bad)
in
xor
cld
jmp
repnz
js
stos
div
sti
fistp
jl
iret
std
stos
jle
jle
adc
test
sar
je
xor
sub
loope
jno
mov
mov
cld
(bad)
(bad)
jmp
xor
push
les
ins
inc
shl
fistp
in
xchg
xchg
pop
xor
add
jg
nop
lods
cs
dec
(bad)
pop
(bad)
mov
and
int3
xor
inc
out
mov
mov
pushf
pop
xchg
dec
aam
cwde
je
pushf
hlt
inc
sbb
imul
mov
push
pop
jnp
mov
(bad)
(bad)
push
xor
sbb
repnz
and
dec
push
xor
arpl
xor
inc
ins
jne
push
retf
int3
cmp
mov
sub
sar
jmp
out
xchg
aaa
adc
mov
es
loope
(bad)
(bad)
(bad)
mov
jmp
sar
loopne
jb
frstor
mov
inc
stos
mov
mov
(bad)
(bad)
inc
gs
loopne
push
gs
add
mov
jbe
pop
enter
fbstp
and
movs
push
sti
loope
push
mov
arpl
dec
or
pop
pop
lahf
mov
ja
push
cmps
sub
cli
(bad)
jmp
jno
sbb
(bad)
cmps
cmp
and
call
push
mov
arpl
pop
mov
lock
fcomp
dec
sub
test
(bad)
(bad)
(bad)
(bad)
fldcw
inc
add
jl
sub
(bad)
xor
aad
xchg
leave
and
imul
dec
push
cmp
push
fist
push
repz
shl
pop
push
loop
(bad)
sbb
outs
or
xor
arpl
jnp
jns
ins
outs
repnz
in
mov
jg
cli
in
(bad)
(bad)
(bad)
inc
(bad)
push
push
pop
jnp
dec
(bad)
fnstenv
pushf
ins
sub
movs
push
cli
sbb
(bad)
jmp
dec
rcl
jo
rcr
pop
pop
pop
ret
jns
repnz
fnstcw
mov
pop
or
sti
enter
pop
cmc
(bad)
dec
mov
push
ror
movs
mov
pop
xchg
shl
ss
ds
sti
jmp
fcmovnbe
inc
jmp
or
mov
ror
ret
sti
ds
lds
(bad)
push
cli
sbb
mov
fist
nop
jmp
xchg
dec
and
push
cmp
call
loope
aad
dec
dec
pop
xchg
hlt
sub
call
scas
xor
xor
and
call
cmp
jmp
out
test
cmp
popa
xor
sbb
xor
ins
cld
(bad)
inc
dec
pop
mov
push
push
adc
jge
ins
dec
xchg
inc
push
pop
jg
jle
add
mov
mov
fs
sub
out
fisubr
and
clc
(bad)
(bad)
(bad)
(bad)
jge
or
sub
(bad)
in
jge
test
stc
sahf
sub
sbb
mov
scas
rcl
in
jo
(bad)
(bad)
(bad)
dec
cdq
cdq
je
outs
pop
out
cmp
xor
push
in
out
nop
mov
mov
(bad)
jg
out
hlt
cdq
inc
cmp
scas
test
enter
lods
fnstcw
cli
jmp
pop
inc
push
ins
data16
int
pusha
retf
test
bound
cmp
jmp
jle
out
es
cmp
jecxz
push
lea
out
sub
jno
loope
jns
(bad)
(bad)
push
cmp
(bad)
(bad)
inc
stc
out
pusha
cli
ret
mov
or
mov
(bad)
mov
pop
cli
jb
jae
int3
mov
jmp
movs
mov
bound
push
jecxz
(bad)
add
test
push
mov
xor
and
jmp
push
fdiv
adc
mov
sub
cmc
xlat
(bad)
retf
mov
jmp
pop
es
mov
sbb
(bad)
mul
mov
sbb
pop
cmp
in
dec
adc
cli
push
mov
dec
imul
mov
popa
jmp
(bad)
(bad)
(bad)
jmp
mov
out
(bad)
cs
rcl
pop
xchg
(bad)
jbe
dec
ja
addr16
shr
push
ja
int
add
(bad)
push
(bad)
dec
dec
popf
outs
scas
loop
xor
scas
xchg
pop
mov
and
pcmpgtw
inc
test
jp
jmp
mov
jmp
pop
(bad)
shr
xor
ficomp
mov
jmp
cli
les
dec
push
jmp
in
cmp
pop
jmp
cli
pop
loop
mov
adc
into
inc
lea
push
pop
or
shl
out
test
jl
test
pop
dec
pop
sar
xchg
fsub
fcomip
cdq
add
mov
dec
and
sub
sub
and
pop
adc
loopne
(bad)
dec
jmp
les
xchg
mov
mov
jg
rol
je
or
jbe
mov
lods
cs
mov
test
sub
pop
std
repnz
cdq
cmps
out
cli
pop
fwait
sub
mov
(bad)
pop
cld
dec
mov
xchg
fild
and
stos
rcl
xchg
cli
jne
out
fsub
push
pop
ins
cwde
jle
test
mov
test
call
pop
xlat
push
cmp
xor
adc
sub
enter
dec
fucomp
push
bound
push
lods
lea
sub
push
xchg
jae
adc
push
shl
lods
es
fld
cmc
fmul
(bad)
(bad)
(bad)
inc
xor
pop
pop
sbb
mov
fisttp
hlt
imul
cmc
jmp
(bad)
xchg
fmul
ins
mov
mov
int3
xchg
cdq
(bad)
(bad)
(bad)
(bad)
push
dec
dec
and
mov
inc
mov
mov
popf
jns
ret
dec
retf
add
jg
(bad)
mov
xchg
lds
or
arpl
xchg
fsubrp
pop
jecxz
add
pop
pop
dec
in
fwait
and
enter
fs
in
(bad)
(bad)
dec
cdq
xchg
retf
jbe
pop
cmp
xchg
call
call
mov
das
and
pop
fistp
mov
mov
xchg
(bad)
(bad)
dec
dec
nop
adc
push
call
add
jp
mov
add
ret
movs
(bad)
(bad)
cmp
jb
fsubr
lds
sar
push
cld
pop
pop
(bad)
(bad)
mov
lds
cs
jbe
cmp
into
xchg
jg
and
jecxz
popf
xor
xor
popf
xor
ja
ror
test
imul
sbb
(bad)
(bad)
(bad)
out
inc
fistp
xchg
push
lods
or
mov
jmp
outs
lods
xchg
xchg
cmp
add
les
mov
leave
scas
jne
scas
clc
jmp
loope
inc
aas
inc
xchg
adc
mov
adc
sar
mov
inc
cwde
adc
pop
aas
stos
or
mul
sub
mov
(bad)
call
mov
mov
fdivr
push
int
ficom
lea
js
push
das
mov
jge
add
into
stos
out
push
es
(bad)
(bad)
call
mov
xchg
mov
int
sub
mov
add
mov
dec
test
popf
cmp
(bad)
(bad)
jmp
or
pop
fdivr
adc
in
pop
bound
or
ret
fisubr
pushf
push
push
push
(bad)
fild
dec
cmp
adc
call
mov
imul
jle
jo
push
sub
es
mov
(bad)
jmp
pushf
dec
mov
cs
xchg
add
out
mov
xchg
repnz
pop
rcl
(bad)
dec
xlat
cdq
jmp
into
cwde
or
(bad)
(bad)
call
adc
jo
adc
mov
scas
inc
inc
stos
retf
jg
rcr
test
lds
jns
jle
cli
or
fisttp
cmp
loope
jl
sar
(bad)
in
mov
sub
mov
mul
xchg
imul
lahf
jns
pop
mov
loope
in
(bad)
fcomip
adc
jmp
pusha
fst
gs
(bad)
(bad)
jmp
test
sub
sbb
pop
mov
sbb
mov
(bad)
(bad)
inc
std
das
sub
inc
ins
stos
cmp
jg
std
pop
push
(bad)
cmc
sub
sar
or
mov
add
lds
xchg
ror
pop
dec
sbb
clc
into
(bad)
jmp
add
dec
mov
and
out
ss
sub
popf
sbb
mov
rcr
dec
scas
int3
les
(bad)
mov
(bad)
jg
dec
fidiv
sub
adc
and
or
das
mov
mov
ja
idiv
lea
imul
neg
stc
in
(bad)
(bad)
push
cmp
adc
in
leave
loope
mov
push
ins
sbb
mov
sub
xchg
and
add
jg
and
adc
and
movs
mov
(bad)
(bad)
fld
js
out
mov
pop
and
call
stc
ins
(bad)
(bad)
(bad)
inc
sbb
sbb
fld
je
pop
jle
mov
and
repz
ja
loop
inc
in
(bad)
aas
repz
jmp
mov
xchg
test
stos
dec
fstp
sub
pop
lods
pop
xchg
mov
scas
inc
int3
icebp
scas
xor
jnp
cdq
dec
mov
pop
jbe
ss
call
pop
repz
xchg
or
in
pop
cdq
pop
shl
popf
pop
ja
(bad)
(bad)
jmp
jns
mov
push
cmp
sti
pop
test
repz
inc
push
fldcw
pop
sbb
adc
cs
jb
sbb
push
and
sahf
mov
leave
cli
xor
xor
pop
rcr
push
imul
(bad)
push
mov
into
xchg
lds
outs
out
pop
(bad)
call
lahf
jp
out
(bad)
call
cld
or
rol
lahf
cdq
div
xor
shl
add
(bad)
(bad)
(bad)
mov
cmp
call
fbld
add
or
mov
(bad)
in
xchg
dec
cmp
push
sbb
xchg
(bad)
call
aas
cld
lock
xchg
or
(bad)
xchg
mov
push
(bad)
mov
loope
into
rcr
mov
sub
sub
enter
(bad)
fnstsw
ins
pop
jg
hlt
push
or
je
lock
adc
repz
(bad)
dec
jne
enter
xchg
sbb
adc
ret
(bad)
jmp
xor
lahf
(bad)
xor
cdq
jmp
in
nop
mov
jle
inc
cmp
in
and
push
retf
xchg
rol
xchg
scas
sar
movs
inc
mov
add
jg
mov
xchg
addr16
mov
pop
fs
out
cli
inc
cmp
dec
popf
sub
mov
iret
cdq
or
shl
(bad)
sbb
jmp
cli
pop
pop
out
mul
retf
dec
aas
hlt
mov
(bad)
(bad)
call
inc
push
gs
js
cld
cmp
or
sbb
and
iret
pushf
in
or
mov
xchg
and
(bad)
(bad)
inc
pop
dec
jae
js
nop
(bad)
or
enter
ss
and
sti
ss
push
cld
pop
push
adc
movs
push
out
mov
les
cld
(bad)
mov
aad
add
sbb
seto
aaa
pop
adc
loopne
ins
xor
leave
call
add
cs
(bad)
pop
loopne
mov
in
je
iret
sbb
leave
xor
xor
movs
(bad)
(bad)
jmp
test
adc
jmp
inc
and
inc
adc
test
jnp
mov
es
shr
sbb
retf
add
iret
xor
jmp
and
xchg
fs
xor
or
sub
or
lods
sub
mov
mov
(bad)
jg
xor
inc
push
(bad)
cmp
gs
call
clc
or
popf
(bad)
jmp
cmp
hlt
dec
out
push
jmp
in
cmp
jmp
cdq
jns
adc
fcomp
lods
pop
pop
pop
rcr
movs
(bad)
fcmovbe
hlt
imul
cli
push
loopne
pop
aas
test
jg
add
out
cmp
xchg
or
push
int
mov
pop
push
cmps
je
call
sbb
mov
xor
xor
adc
adc
(bad)
(bad)
inc
adc
sbb
adc
shl
jecxz
addr16
inc
sub
loop
jl
push
cli
call
test
int
push
repnz
(bad)
(bad)
(bad)
int
or
cli
leave
icebp
inc
test
icebp
pop
cmp
je
test
cmp
fisttp
adc
rcr
fistp
bswap
int3
cmp
sub
in
int
pop
sub
mov
repz
(bad)
(bad)
call
(bad)
fcom
repz
imul
push
fdiv
adc
push
cmps
aas
xchg
mov
inc
aaa
cdq
(bad)
fidiv
pop
sbb
xchg
(bad)
(bad)
call
hlt
jmp
das
aaa
xor
call
add
or
push
and
(bad)
jle
imul
jbe
dec
sbb
and
cmps
xchg
leave
stos
mov
mov
push
arpl
(bad)
(bad)
cmp
mov
pop
mov
push
xchg
dec
(bad)
call
dec
jb
int3
addr16
and
sbb
jne
mov
into
pop
jl
cwde
(bad)
push
push
jl
imul
jae
popa
in
pop
xor
(bad)
jmp
cmp
cmp
mov
jne
(bad)
jecxz
out
cmp
out
mov
jbe
mov
xchg
push
movs
adc
xor
(bad)
sti
push
inc
and
adc
mov
(bad)
push
bnd
popa
arpl
cmp
add
repnz
pop
jae
mov
dec
hlt
(bad)
(bad)
mov
out
cmp
mov
mov
(bad)
push
mov
(bad)
(bad)
in
test
inc
xchg
mov
inc
jbe
(bad)
adc
shr
ins
mov
(bad)
(bad)
(bad)
(bad)
cmp
dec
pop
lods
dec
pop
sub
das
pop
call
inc
xor
fcom
(bad)
dec
arpl
js
cmp
outs
push
out
xchg
jne
cmps
sub
cmps
ja
sar
jecxz
(bad)
xor
(bad)
(bad)
fcomip
hlt
les
pop
arpl
cmp
mov
mov
pop
jnp
sbb
(bad)
(bad)
jmp
mov
and
jno
or
cmp
nop
xor
sbb
data16
jp
(bad)
push
(bad)
call
pop
cmovne
mov
es
lds
out
cmc
aas
(bad)
jg
fstp
into
jns
dec
inc
xchg
jmp
loope
sub
(bad)
(bad)
push
hlt
out
push
stos
jb
test
fst
inc
cmp
mov
mov
fimul
cmp
pop
std
(bad)
jmp
call
push
rol
neg
js
xor
pop
iret
stos
pop
shl
in
retf
push
sbb
mov
(bad)
(bad)
(bad)
mov
jl
cwde
push
xchg
dec
xchg
je
(bad)
pop
push
cmp
mov
jb
aaa
fsubr
or
xchg
cli
mov
outs
mov
ret
imul
and
ds
sub
jecxz
shl
mov
test
das
(bad)
push
shl
(bad)
(bad)
jmp
fcomp
scas
rol
into
test
mov
sbb
ins
push
nop
cmps
lods
jnp
adc
(bad)
(bad)
call
mov
(bad)
loope
ins
xchg
xor
adc
retf
jmp
cmps
stos
popa
retf
sub
repnz
cs
jg
outs
push
ror
jle
cmps
jmp
stos
push
loope
push
out
push
repz
(bad)
in
loop
mov
adc
test
dec
pop
ret
jne
push
cmp
inc
scas
data16
(bad)
(bad)
jmp
adc
mov
or
movs
clc
cmp
mov
mov
aas
mov
fisttp
in
(bad)
jmp
cmp
test
jecxz
xor
add
cs
mov
movs
movs
add
adc
sti
cdq
or
mov
mov
push
fst
enter
sbb
dec
pusha
fisttp
and
pop
or
popa
loope
imul
ins
ja
cli
(bad)
dec
stos
(bad)
out
cmp
je
rcl
test
idiv
leave
sar
mov
mov
mov
fisubr
jl
push
cli
loop
icebp
mov
out
(bad)
cmps
(bad)
out
or
les
clc
fwait
ins
cld
(bad)
jmp
cmp
(bad)
jge
cmps
add
lds
push
mov
call
add
mov
jns
push
xchg
and
sar
into
mov
ss
(bad)
(bad)
(bad)
stos
imul
iret
sar
mov
add
cmp
(bad)
int3
outs
(bad)
(bad)
(bad)
(bad)
fucomp
scas
push
jmp
mov
sub
ds
pop
dec
jecxz
aam
fs
in
(bad)
(bad)
jmp
loope
cs
jno
or
das
sub
push
leave
dec
sbb
lahf
sub
or
push
xchg
(bad)
(bad)
mov
xchg
ret
sar
out
inc
sub
(bad)
in
or
mov
jno
mov
scas
fwait
xchg
lock
push
in
mov
arpl
or
retf
cmp
pop
fwait
and
adc
call
jmp
xor
pop
les
ror
imul
pop
dec
push
push
cwde
adc
stos
jne
in
add
cmp
popa
call
(bad)
(bad)
jmp
loop
or
mov
sub
ins
scas
push
jo
pop
stos
push
imul
cld
(bad)
fbstp
loopne
sub
xor
(bad)
mov
into
int
(bad)
(bad)
(bad)
jg
(bad)
dec
mov
enter
repz
dec
dec
xor
cmp
dec
jae
test
shl
loopne
jg
sub
push
sub
sub
adc
push
cmp
mov
fwait
icebp
mov
mov
hlt
cmc
out
xor
hlt
pushf
test
and
jmp
xor
cmp
push
sahf
clc
(bad)
(bad)
jg
add
int
lock
dec
push
adc
jns
sbb
(bad)
jo
adc
push
push
sti
jae
in
inc
outs
js
mov
mov
push
cwde
adc
loop
adc
(bad)
(bad)
call
test
dec
sti
imul
dec
adc
(bad)
(bad)
out
jp
sub
sub
adc
(bad)
push
stc
sub
xchg
jle
ja
jne
(bad)
pop
(bad)
fbld
xor
std
fdiv
iret
and
mov
jecxz
lahf
add
clc
dec
jbe
(bad)
jg
mov
adc
ins
gs
test
dec
cwde
sbb
mov
test
mov
pop
cld
mov
fstp
ins
fcos
(bad)
(bad)
inc
int3
mov
xchg
dec
arpl
leave
adc
jae
fdivr
(bad)
jnp
cld
shr
cwde
inc
and
pop
or
mov
into
inc
dec
sub
retf
mov
push
xchg
test
outs
add
mov
data16
mov
test
cld
push
ds
iret
ffreep
xor
in
push
cmp
and
outs
cmps
fwait
jmp
push
push
fdiv
ret
pop
adc
mov
xchg
loopne
in
retf
enter
cmp
jg
mov
fnstsw
test
and
jo
add
sbb
sahf
fidiv
mov
mov
in
push
fld
add
push
fucomi
je
cmp
jg
xchg
(bad)
(bad)
(bad)
call
imul
push
rol
scas
mov
cmp
fstp
and
int3
fwait
mov
shl
mov
sar
pop
sub
stos
dec
enter
or
cld
in
hlt
(bad)
or
dec
ret
in
push
rol
xchg
jmp
jmp
jp
and
mov
out
dec
xchg
xchg
cmp
(bad)
(bad)
jmp
movs
xchg
in
mov
inc
cmps
cwde
and
and
pushf
and
mov
(bad)
(bad)
fcomip
or
mov
int3
ds
xchg
xor
push
into
cmp
cmp
out
aaa
mov
jecxz
mov
(bad)
mov
pop
ins
pop
inc
mov
(bad)
xchg
lea
xor
fbld
ja
pop
adc
mov
push
lahf
pop
into
and
or
cwde
(bad)
(bad)
(bad)
inc
sbb
xchg
imul
iret
dec
push
into
and
int3
dec
sti
pop
mov
out
jno
dec
xchg
(bad)
rol
sbb
div
mov
(bad)
jge
ret
daa
pushw
inc
dec
jmp
movs
dec
jbe
xor
mov
adc
(bad)
call
cs
mov
mov
cmp
cli
stc
in
nop
hlt
inc
fdivp
pop
lahf
lds
hlt
cs
call
jp
dec
ss
(bad)
cmp
add
cld
or
icebp
rol
hlt
cmp
ins
(bad)
jg
dec
cs
call
xor
adc
std
push
jmp
fidiv
push
mov
mov
mov
pusha
cld
lods
gs
jo
inc
(bad)
(bad)
(bad)
jmp
mov
inc
in
pusha
out
je
call
fisub
adc
or
sbb
jp
(bad)
(bad)
push
jae
xor
into
imul
mov
adc
test
mov
xor
(bad)
(bad)
(bad)
jmp
cs
or
outs
or
aaa
mov
in
lock
fwait
sub
nop
stos
loopne
scas
es
dec
fwait
jge
fucomi
inc
sar
(bad)
jmp
aad
loope
pop
icebp
mov
push
inc
ins
jmp
add
das
xor
in
test
bound
fwait
inc
mov
call
mov
in
push
inc
icebp
cld
mov
jmp
mov
push
add
mov
pop
sub
fnsave
imul
icebp
jbe
sbb
inc
inc
shl
int
mov
cmps
std
jnp
jnp
and
or
std
(bad)
inc
je
lods
push
mov
mov
mov
sub
jmp
jmp
fiadd
in
inc
cmps
mov
int
call
dec
pusha
jmp
push
cmp
call
pop
add
inc
sar
cmp
inc
ret
sar
cmp
ss
xchg
std
dec
test
push
add
pop
mov
mov
out
mov
jg
mov
sub
pop
pop
frstor
out
adc
xchg
cmps
aaa
aam
jmp
enter
dec
add
dec
dec
xchg
data16
inc
sub
and
and
pop
adc
mov
cmp
push
xchg
pop
std
mov
jno
xor
data16
jmp
pop
inc
sbb
inc
cmps
mov
fcos
or
repz
ins
pop
in
sub
(bad)
jmp
subps
popf
lods
inc
out
inc
sti
icebp
jb
xlat
fnsave
aas
mov
mov
pop
mov
xor
xor
cmp
sub
lea
repnz
pop
and
push
xchg
sub
call
and
sbb
lods
xchg
(bad)
scas
add
jg
add
aas
mov
xchg
push
jge
in
(bad)
fisttp
push
mov
pop
pop
test
xor
mov
jno
push
std
icebp
ret
jne
and
fcom
inc
pop
fdiv
call
(bad)
jg
jns
aad
mov
jecxz
jl
mul
jecxz
icebp
pop
add
adc
int3
add
(bad)
(bad)
(bad)
adc
in
xchg
xor
cmp
push
int3
inc
inc
(bad)
and
es
enter
sbb
(bad)
(bad)
(bad)
aas
pop
pushf
leave
xchg
popa
lods
or
add
aaa
cld
push
neg
pusha
xchg
popf
(bad)
mov
jmp
(bad)
mov
mov
cmp
add
xor
(bad)
(bad)
(bad)
jmp
sbb
fmul
add
add
shl
inc
out
or
fadd
sub
(bad)
(bad)
(bad)
lods
mov
int3
in
in
je
repz
sti
push
aad
mov
lahf
push
(bad)
(bad)
js
movs
fnstsw
(bad)
(bad)
fstp
jne
jmp
in
scas
out
dec
leave
inc
(bad)
sub
dec
hlt
xor
add
jne
mov
loop
(bad)
(bad)
jmp
inc
xchg
mov
mov
sbb
sbb
jmp
bound
jp
ins
mov
out
(bad)
(bad)
(bad)
jmp
nop
push
sub
ss
push
es
ror
lods
push
popa
call
jl
pop
adc
arpl
mov
sbb
dec
std
(bad)
(bad)
dec
imul
loop
or
movs
add
ror
jp
(bad)
push
mov
adc
dec
adc
sbb
adc
repz
out
adc
push
or
jp
jb
rcl
sub
ins
or
mov
push
shr
xchg
sub
enter
pop
mov
cmp
lock
rcr
jmp
daa
cmps
jo
dec
ficomp
sahf
mov
(bad)
(bad)
push
and
jns
mov
loop
mov
loope
pop
xor
jg
xchg
clc
enter
mov
sub
cdq
jmp
test
or
pop
jle
xchg
je
push
std
add
mov
fdivr
(bad)
(bad)
(bad)
out
sub
cmp
push
mov
(bad)
int
inc
fwait
dec
js
or
xchg
jae
(bad)
(bad)
(bad)
call
fdivrp
xchg
cmp
dec
or
(bad)
stc
cdq
jne
in
jnp
mov
(bad)
(bad)
(bad)
clc
cmc
(bad)
and
jae
pop
jecxz
mov
icebp
mov
fs
mov
out
ret
lods
aaa
pop
(bad)
fisttp
jmp
les
pushf
mov
(bad)
(bad)
(bad)
jl
gs
(bad)
movs
gs
inc
fild
or
push
stos
mov
jmp
outs
dec
inc
mov
call
leave
sub
shl
shr
(bad)
(bad)
(bad)
call
mov
pop
cmp
push
cmp
sbb
fnsave
stos
xchg
adc
mov
lock
add
je
add
pop
hlt
(bad)
jmp
xor
dec
sbb
push
xor
clc
mov
xlat
stos
and
push
dec
add
(bad)
mov
dec
out
(bad)
(bad)
(bad)
inc
pop
in
inc
shr
push
push
push
ror
xlat
mov
outs
adc
jb
and
punpckhdq
mov
mov
stos
(bad)
(bad)
dec
imul
rcr
cmc
aad
dec
iret
mov
sahf
and
add
push
mov
popf
sahf
jge
mov
or
(bad)
xchg
(bad)
dec
mov
test
xchg
pop
pop
inc
push
pop
loopne
rcl
test
dec
inc
jno
sahf
mov
ret
sub
sub
movs
push
add
add
lock
lods
(bad)
(bad)
(bad)
cmp
inc
ss
(bad)
clc
sti
in
push
stos
jecxz
sbb
retf
dec
pop
movs
jmp
test
push
(bad)
call
(bad)
call
cs
inc
cmp
cli
jl
adc
imul
(bad)
(bad)
(bad)
jmp
sub
fwait
popa
xor
mov
in
push
or
xchg
repnz
push
and
adc
(bad)
(bad)
push
jae
mov
ins
outs
and
push
clc
xor
in
adc
mov
and
(bad)
(bad)
(bad)
push
in
lea
lea
push
pop
jnp
rcr
fucomip
xchg
(bad)
mov
add
jns
ss
or
(bad)
cmp
addr16
ins
test
jecxz
and
mov
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
xor
mov
in
xor
jge
lods
in
cmp
inc
pop
xchg
mov
mov
fwait
and
cmp
retf
mov
and
add
mov
(bad)
(bad)
out
cli
push
xor
aas
or
das
inc
add
iret
mov
(bad)
movs
aas
imul
test
clc
(bad)
jmp
repz
lds
dec
cli
loopne
inc
inc
sub
movs
mov
fild
je
test
and
and
lods
fcomip
sar
repnz
cli
idiv
outs
and
mov
pushf
mov
popf
jno
addr16
cmp
in
sahf
sub
dec
shl
jns
test
clc
or
cli
and
push
or
or
jo
aad
icebp
xchg
xchg
lds
(bad)
in
out
das
bound
(bad)
shl
mov
cmps
push
sub
sub
test
fnstsw
jae
push
dec
dec
lahf
rcl
inc
test
push
stos
xor
shr
repz
popa
push
mov
adc
outs
das
loopne
shl
dec
sahf
sub
les
adc
mov
inc
cmp
pop
repz
(bad)
jg
call
icebp
(bad)
cmc
jl
outs
pop
jb
mov
shl
sub
push
add
fisubr
loopne
in
jle
(bad)
dec
sbb
sbb
sbb
cs
aaa
fdivr
and
(bad)
(bad)
call
daa
dec
outs
mov
push
outs
hlt
into
push
aas
dec
sahf
loope
cmp
push
inc
shl
ret
ror
dec
jp
stos
(bad)
(bad)
(bad)
push
test
(bad)
mov
aam
or
popf
js
movs
inc
enter
lock
(bad)
jmp
add
sub
cmps
xchg
mov
int3
test
lock
ins
push
lea
sub
jbe
popa
cdq
ret
lahf
ret
(bad)
dec
ret
stos
das
cmps
(bad)
mov
and
pop
test
xchg
xor
mov
xchg
(bad)
(bad)
(bad)
(bad)
mov
inc
(bad)
xchg
pop
push
mov
outs
call
mov
cmps
pop
mov
fs
cli
(bad)
(bad)
dec
ins
cld
or
xlat
in
xor
rcl
jnp
add
rcl
mov
jmp
dec
ins
jecxz
aas
test
scas
mov
shl
out
jmp
or
ss
js
call
sbb
mov
jns
mov
lods
arpl
pop
fs
sub
dec
xor
shr
in
rcr
jmp
outs
dec
or
mov
int3
or
ins
std
loopne
and
int
xchg
lea
(bad)
(bad)
(bad)
(bad)
jmp
or
mov
aas
xor
or
into
jns
xor
jmp
fadd
into
mov
movs
xchg
push
test
mov
lods
scas
idiv
cmp
dec
dec
ins
out
and
inc
push
xchg
test
jns
retf
dec
jmp
cmp
in
jg
push
ins
fwait
call
mov
mov
sbb
and
mov
inc
pushf
mov
jns
sbb
es
mov
test
dec
call
inc
add
add
repz
jmp
push
repz
das
aam
inc
xor
inc
and
mov
mov
in
rcl
xor
or
jmp
ins
add
adc
(bad)
push
rol
hlt
cmp
subps
pop
(bad)
hlt
dec
sbb
call
sbb
mov
loop
jecxz
lahf
jns
lods
cmp
sub
popf
inc
ss
mov
jb
scas
dec
adc
mov
out
ret
adc
(bad)
(bad)
(bad)
(bad)
fcom
and
sbb
loope
jb
xchg
sbb
es
call
push
mov
fst
or
mov
xchg
adc
dec
aas
outs
dec
jae
jae
lods
cld
mov
out
sub
shr
inc
push
jne
mov
adc
les
xchg
xchg
je
cmp
cmc
ficomp
xchg
inc
(bad)
or
add
fadd
jg
(bad)
inc
(bad)
sbb
cmp
cli
push
xchg
pop
add
mov
cmc
dec
pop
retf
fdiv
inc
cld
out
fst
lods
test
jmp
and
inc
fcmovnu
mov
cmc
push
adc
jb
out
out
(bad)
(bad)
jmp
push
xor
fcom
xchg
pop
pusha
aas
fnstsw
lock
push
jmp
dec
lock
repnz
pop
xchg
shr
ins
or
adc
sahf
repnz
jo
(bad)
(bad)
jmp
inc
or
call
push
lock
fiadd
pop
in
jmp
sbb
mov
sub
not
(bad)
(bad)
jg
push
imul
jle
int
or
sbb
pop
add
(bad)
inc
in
lock
pop
xor
inc
sbb
popa
lods
ss
aaa
mov
aaa
xlat
(bad)
(bad)
push
sti
packsswb
adc
inc
mov
clc
rcr
stos
repnz
(bad)
jg
stos
lods
adc
shl
push
sub
cmps
ja
cmp
pop
scas
retf
(bad)
(bad)
cli
add
inc
push
push
dec
xor
cld
(bad)
mov
gs
dec
call
ret
push
leave
and
gs
(bad)
call
test
xor
scas
mov
mov
inc
cli
ja
retf
lea
out
xor
push
(bad)
pop
xchg
mov
popf
je
mov
sbb
sub
add
call
or
xor
sbb
ret
int3
hlt
imul
cmp
(bad)
jmp
or
xchg
cdq
inc
fstp
leave
repz
cli
lea
das
repz
clc
aam
dec
fsubr
ds
xchg
inc
cld
call
lds
sbb
jbe
loope
stc
aad
mov
mov
fisub
pop
dec
push
or
jmp
call
xor
dec
movs
xor
mov
ds
dec
scas
fwait
and
push
dec
enter
ins
push
ds
mov
push
dec
xchg
mov
rol
ret
inc
add
aas
adc
cmp
push
les
inc
add
sub
jmp
call
aam
add
test
std
dec
sbb
xchg
(bad)
(bad)
xchg
mov
repnz
(bad)
or
bound
pop
mov
cmp
cld
stos
pop
pop
jb
mov
add
cdq
jmp
sar
xchg
in
or
test
out
mov
inc
ins
sub
aas
and
mov
mov
cmp
adc
sbb
out
cmps
push
push
and
call
outs
clc
push
fdiv
mov
lods
cmp
adc
mov
cli
xor
cmps
xor
dec
outs
adc
jmp
das
add
pop
jne
push
clc
std
idiv
(bad)
sti
dec
cld
jmp
(bad)
(bad)
inc
mov
(bad)
jmp
pop
repz
pop
jg
(bad)
icebp
(bad)
pop
xchg
jle
dec
sub
jmp
mov
pop
pop
mov
xor
lock
(bad)
(bad)
call
xchg
lods
test
ins
jmp
jno
inc
aam
pop
out
aad
call
mov
jg
jmp
bound
xor
call
mov
pop
jbe
loop
inc
mov
inc
mov
pop
push
mov
mov
sbb
call
aam
sti
scas
ret
cmp
add
inc
pop
in
xbegin
push
push
push
(bad)
(bad)
(bad)
push
xor
add
hlt
jns
xchg
jg
mov
inc
imul
ss
xchg
xchg
(bad)
push
test
adc
xchg
(bad)
jp
mov
mov
(bad)
jg
xor
adc
adc
addr16
push
pop
ja
fmul
or
fbstp
aad
xchg
dec
and
sub
jb
sbb
mov
sbb
sub
mov
lea
dec
mov
gs
sub
adc
pop
in
adc
mov
cld
inc
and
(bad)
mov
retf
(bad)
(bad)
push
mov
or
dec
pushf
dec
jmp
lock
fsubr
imul
shl
mov
imul
push
lods
jge
cmp
outs
sub
iret
push
jecxz
(bad)
call
and
loopne
inc
js
add
and
lea
repz
repz
or
mov
sub
movs
cmp
(bad)
add
mov
mov
sbb
(bad)
mov
(bad)
call
loopne
mov
dec
rol
call
xchg
int3
aas
daa
sub
(bad)
call
sahf
ins
jecxz
imul
fidiv
stos
popa
pop
fcmovb
mov
call
(bad)
(bad)
dec
scas
fndisi(8087
mov
aas
fucomip
call
shl
lods
hlt
outs
shl
jae
adc
sub
mov
cmp
dec
les
cld
push
cdq
cld
in
retf
mov
sti
test
xchg
(bad)
js
or
jmp
inc
pop
mov
repz
cmp
(bad)
(bad)
(bad)
cmp
fld
jno
cmp
rcr
out
repnz
fwait
mov
ins
shr
cli
mov
(bad)
aas
pop
mov
cwde
xchg
xor
push
cmp
(bad)
(bad)
jmp
or
gs
sbb
ret
pop
test
test
mov
ror
push
fcmovnu
ret
sahf
sahf
mov
ins
stos
add
call
hlt
rol
pop
stos
in
movs
test
cmp
mov
xchg
push
mov
xchg
cmp
out
mov
xchg
pop
test
leave
xchg
ja
dec
jle
cmp
sahf
pop
popf
jmp
out
mov
sbb
dec
outs
mov
aam
push
mov
cmc
xchg
retf
dec
movs
cwde
inc
leave
push
or
jmp
loop
xchg
js
or
call
out
mov
push
pop
shr
(bad)
adc
cwde
cdq
sti
dec
fcmovnb
sub
xor
add
pusha
js
sub
inc
(bad)
mov
lds
push
or
add
(bad)
gs
(bad)
mov
or
loope
push
mov
lock
sub
jmp
(bad)
(bad)
jmp
and
pop
les
inc
ficomp
add
(bad)
(bad)
(bad)
call
and
xor
es
in
dec
inc
mov
rcl
sub
xor
mov
call
and
ins
jp
jb
inc
add
and
ror
sub
lods
es
mov
imul
inc
nop
mov
cli
lods
xlat
int3
mov
arpl
pop
and
adc
mov
call
jp
iret
pop
push
jnp
(bad)
(bad)
jmp
sub
xor
cmp
out
mov
xlat
mov
aad
imul
add
mov
std
out
call
mov
(bad)
(bad)
dec
mov
sbb
imul
xlat
push
push
jmp
dec
test
cmc
call
mov
xchg
sbb
out
mov
aam
inc
mov
adc
test
mov
outs
mov
pop
(bad)
xchg
loope
mov
inc
out
jecxz
jle
fdivp
scas
aas
(bad)
out
push
jmp
aam
add
stos
jmp
movs
adc
or
jg
or
fmul
mov
push
enter
sub
pop
je
pop
dec
mov
lock
call
sbb
(bad)
es
lock
(bad)
dec
test
fwait
outs
cli
xchg
mov
loope
xchg
jne
retf
lahf
mov
mov
add
add
and
lods
push
add
cli
dec
push
pop
adc
push
mov
(bad)
push
movs
jmp
hlt
or
(bad)
(bad)
(bad)
out
ficomp
repnz
aad
or
stos
push
test
xor
pop
inc
mov
out
xor
jbe
adc
arpl
add
(bad)
call
inc
aam
test
and
add
jne
xchg
rcr
adc
pop
push
jb
add
pop
push
and
xchg
sub
out
movs
popa
mov
push
jns
mov
mov
push
adc
push
mov
dec
mov
xchg
sbb
mov
sub
jmp
cmp
cmp
jbe
(bad)
jmp
inc
(bad)
call
loopne
cwde
shr
inc
inc
imul
stos
mov
push
int
hlt
(bad)
inc
ja
repnz
nop
adc
pop
je
idiv
inc
(bad)
(bad)
call
cwde
les
xchg
jecxz
aad
xchg
iret
fwait
and
es
jmp
or
rol
xchg
cwde
mov
iret
push
mov
adc
call
fcomp
or
pop
push
cmp
repnz
(bad)
xor
rcl
fsub
(bad)
(bad)
dec
cmps
jns
test
mov
in
jbe
iret
in
mov
mov
lds
loop
nop
(bad)
or
test
aad
push
cmp
add
(bad)
(bad)
out
(bad)
add
or
jmp
test
add
in
and
in
adc
push
pop
scas
mov
shl
push
mov
ror
jle
adc
and
(bad)
(bad)
jmp
xchg
adc
enter
dec
mov
push
mov
cmp
movs
sub
and
xchg
lock
inc
sub
sti
lods
pop
cmp
and
std
(bad)
(bad)
out
lods
xor
cld
neg
fimul
cli
push
jl
adc
mov
(bad)
jg
dec
test
test
ins
sub
out
clc
jmp
xchg
xchg
xlat
sbb
test
int
xchg
and
scas
(bad)
mov
push
pop
fld
ss
(bad)
xchg
or
add
das
and
push
sbb
bound
hlt
inc
sub
fneni(8087
loope
pop
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
sbb
lds
movs
mov
mov
jmp
(bad)
jmp
clc
aaa
or
cmp
fnstenv
sub
fisttp
mov
inc
mov
(bad)
out
cli
jmp
mov
inc
sub
rcl
ins
adc
(bad)
cmps
(bad)
push
cmc
aaa
xchg
clc
iret
xor
mov
dec
ja
(bad)
call
shl
ds
sub
jmp
call
dec
into
out
push
mov
mov
(bad)
push
cmp
pop
sub
or
sti
adc
pop
loope
pop
test
(bad)
(bad)
(bad)
mov
cs
mov
dec
push
sub
xchg
sub
rol
push
push
sahf
sbb
aam
bound
outs
mov
pop
add
mov
ins
mov
xor
pusha
leave
xchg
(bad)
cmp
fmul
nop
ja
mov
call
mov
adc
dec
adc
push
in
mov
adc
xchg
ins
and
sbb
xchg
std
(bad)
(bad)
push
and
adc
xchg
push
jno
sub
mov
sbb
bound
(bad)
xor
ja
xor
pop
jg
adc
cmp
fwait
adc
mov
call
or
xchg
arpl
xchg
mov
test
push
fidiv
cli
mov
pop
arpl
mov
cs
mov
dec
xchg
lods
loop
(bad)
dec
add
in
and
loop
call
std
lea
xchg
ins
scas
ret
jle
jg
popa
sub
loope
outs
jle
dec
cmp
jns
test
rcl
fcom
or
loopne
mov
xchg
mov
inc
idiv
pop
(bad)
repz
jmp
jecxz
inc
pop
lds
leave
cmps
inc
inc
dec
aam
clc
mov
jmp
(bad)
inc
xchg
mov
jns
test
adc
pop
pop
pop
jb
popf
sbb
lock
int3
out
mov
jmp
ins
ret
mov
call
inc
fnstenv
imul
pop
outs
aaa
lea
mov
mov
fwait
(bad)
sahf
imul
sub
(bad)
dec
mov
jns
add
call
test
dec
push
xor
(bad)
cmp
stos
sub
int
stc
jne
pop
in
mov
xchg
push
xchg
cli
push
and
push
lods
retf
fwait
push
in
dec
push
dec
hlt
shl
jmp
lods
mov
fcom
inc
ss
inc
stos
jp
(bad)
stos
sub
rcr
sub
ja
push
(bad)
(bad)
jg
push
aaa
lods
xor
mov
xchg
push
sbb
mov
jp
sbb
std
(bad)
call
out
dec
push
pop
dec
or
in
(bad)
popf
mov
jg
bound
test
pop
cmp
jbe
inc
int3
cmc
test
pop
(bad)
push
jg
popa
enter
pop
(bad)
shl
add
(bad)
std
sti
scas
in
arpl
aas
pop
jo
(bad)
(bad)
(bad)
call
cmp
and
adc
and
mov
cmp
repz
lahf
and
(bad)
(bad)
jmp
xor
dec
xor
retf
pop
jns
adc
ins
ficom
inc
jnp
lds
dec
fs
clc
jnp
addr16
call
xlat
fist
call
and
dec
lods
pop
jg
(bad)
clc
(bad)
(bad)
(bad)
mov
mov
pop
pop
mov
clc
mov
mov
cld
mov
mov
or
test
sar
in
mov
movs
outs
add
ror
test
sbb
fdivr
(bad)
jmp
cmps
xchg
xlat
retf
sbb
lahf
cmp
jecxz
in
cmc
fwait
sbb
mov
dec
fcomp
imul
sbb
mov
outs
pop
or
fistp
dec
dec
xchg
fldcw
std
jle
or
movs
cmps
mov
mov
pop
sbb
adc
cmp
iret
jg
dec
(bad)
adc
mov
lea
imul
jmp
inc
add
xchg
(bad)
(bad)
call
jnp
mov
jnp
add
hlt
jge
cmp
pop
mov
lock
sub
pop
movs
mov
push
(bad)
mov
push
pop
sbb
xor
sbb
xchg
pop
fist
mov
mov
ret
sbb
clc
fild
xchg
push
push
add
ret
fld
(bad)
sub
inc
and
mov
push
mov
add
daa
jbe
jg
dec
stc
jmp
add
push
pop
popa
pop
in
xor
push
fwait
xchg
movs
addr16
dec
(bad)
(bad)
(bad)
call
pop
xchg
stos
add
dec
sub
test
mov
pop
mov
xor
lods
pop
xchg
push
stos
cmps
sbb
iret
sub
aad
mov
inc
or
out
shr
pop
clc
xchg
ja
sar
aad
inc
and
call
(bad)
mov
xchg
cmc
dec
outs
fidiv
push
ret
mov
pop
ja
push
idiv
cmp
test
ja
icebp
lock
mov
sub
inc
cld
in
cmp
retf
sbb
mov
cwde
les
and
ret
mov
jl
pop
or
dec
xchg
jne
pop
(bad)
(bad)
push
add
icebp
mov
push
shr
add
and
shr
add
(bad)
jmp
clc
pop
lahf
in
std
into
dec
popa
add
mov
push
jne
pop
mov
cdq
(bad)
(bad)
(bad)
(bad)
fnstenv
js
pop
sub
push
call
push
fmul
inc
push
in
mov
movs
push
inc
stos
ja
(bad)
call
sub
in
sbb
(bad)
(bad)
dec
mov
dec
cmps
retf
sahf
pop
push
xchg
neg
push
xor
lods
xlat
jmp
dec
das
es
sbb
stos
aaa
dec
fmul
ins
push
jns
inc
and
(bad)
jmp
cmp
fadd
repz
iret
(bad)
sub
and
(bad)
jno
ret
fimul
sub
clc
mov
mov
mov
in
(bad)
(bad)
movs
loopne
outs
std
jne
(bad)
(bad)
(bad)
mov
sti
mov
gs
pop
dec
repnz
ret
push
out
xchg
dec
xchg
xchg
xor
push
cld
mov
add
sbb
mov
rol
adc
(bad)
(bad)
call
(bad)
fld
push
add
bound
rcl
inc
mov
add
mov
pop
xor
mov
(bad)
jg
out
mov
je
int3
jns
adc
xlat
dec
mov
mov
xor
add
xchg
or
loopne
or
das
xchg
retf
push
xchg
test
aad
iret
ficomp
(bad)
sub
inc
mov
push
pop
(bad)
adc
add
jg
pusha
les
(bad)
(bad)
inc
and
mov
cld
mov
inc
aam
out
lock
test
inc
or
mov
(bad)
mov
xor
in
xchg
loopne
jg
cmp
out
xor
xor
mov
inc
pusha
jg
pop
cld
leave
mov
mov
enter
jg
std
sub
pop
jecxz
mov
sub
aam
aaa
xchg
retf
loop
sti
push
or
(bad)
jmp
ja
movs
xchg
adc
mov
or
movs
movs
call
sub
cmps
cmps
push
mov
xor
stos
hlt
fcomp
repnz
stc
cdq
cwde
rcr
xor
(bad)
push
ins
stos
push
cmp
fld
in
(bad)
jg
loop
shl
arpl
sbb
mov
sbb
jns
xchg
jo
jnp
or
sub
(bad)
lea
pop
(bad)
(bad)
mov
mov
cld
scas
retf
ds
xchg
xchg
ins
cwde
sub
mov
movs
retf
sub
adc
mov
cmp
mov
ja
out
or
icebp
pusha
push
push
ret
jns
mov
js
dec
in
stos
(bad)
call
cld
in
leave
inc
jno
loop
fisttp
fucomp
push
(bad)
iret
mov
mov
fmul
and
dec
or
cmp
sub
call
adc
fwait
int
mov
popa
mov
pop
push
pop
adc
cs
aaa
inc
cli
xchg
hlt
inc
mov
push
and
(bad)
cli
outs
sub
mov
out
jmp
lods
inc
test
stos
daa
push
das
push
and
(bad)
(bad)
(bad)
jmp
gs
sub
mov
jp
xor
mov
movs
push
pop
movs
or
(bad)
(bad)
jmp
and
popa
or
retf
add
scas
cwde
xor
ins
ficomp
jmp
mov
pusha
jge
outs
lds
cmps
sub
push
jl
fnclex
fild
call
and
or
call
xchg
jl
scas
and
sti
sub
add
mov
mov
(bad)
(bad)
jmp
jbe
inc
mov
bound
ror
cmp
and
push
not
lods
outs
in
fisub
repnz
rol
aad
lods
ficomp
xchg
(bad)
jg
push
das
add
and
lock
repz
xchg
stos
lock
pushf
cli
fild
fistp
xchg
out
lods
ja
adc
popa
add
fbld
cli
outs
add
jecxz
mov
repnz
cbw
cmp
call
loopne
sbb
cdq
mov
jb
fldcw
xor
(bad)
jg
call
ins
cmps
das
mov
aam
out
cmp
dec
and
xor
call
inc
dec
call
popf
arpl
pop
shr
(bad)
(bad)
(bad)
inc
pop
sbb
or
add
stos
xchg
(bad)
test
in
shl
loop
into
dec
iret
loop
(bad)
(bad)
(bad)
call
cmp
jne
jge
xor
xlat
jb
icebp
mov
push
mov
fneni(8087
icebp
jmp
dec
cli
dec
xchg
push
mov
mov
test
call
call
mov
aas
not
(bad)
retf
push
cld
cmc
push
movs
(bad)
or
and
and
(bad)
inc
mov
(bad)
lds
inc
pop
xor
mov
(bad)
(bad)
cmp
mov
or
cmp
test
push
not
cli
das
mov
outs
bound
popa
mov
das
icebp
sti
jecxz
add
xabort
cmp
sbb
jmp
add
cmp
push
js
mov
dec
pop
pop
mov
rcl
icebp
retf
cmp
mov
clc
call
mov
ret
retf
lea
jl
aaa
repz
(bad)
inc
mov
jns
add
dec
nop
ss
nop
dec
pop
add
(bad)
(bad)
jmp
jns
call
xlat
adc
loopne
xchg
fistp
(bad)
(bad)
(bad)
call
dec
mov
add
mov
and
and
inc
mov
fs
(bad)
(bad)
dec
mov
jmp
(bad)
xor
jmp
dec
imul
jb
mov
push
retf
jp
jmp
push
test
popf
cmp
in
out
aad
pop
(bad)
(bad)
(bad)
call
pop
int3
xchg
inc
aaa
adc
inc
add
(bad)
das
scas
sub
adc
stos
mov
mov
inc
cld
int
cmps
pop
jns
ins
test
sti
push
movs
repz
daa
loopne
loopne
ret
inc
ss
jl
pop
fld
mov
clc
xor
popa
(bad)
ins
dec
xchg
dec
scas
dec
mov
out
call
mov
mov
lods
popf
push
gs
inc
xchg
lea
pop
(bad)
fcomip
pop
inc
iret
inc
test
mov
dec
sub
out
stc
xchg
hlt
rcr
inc
xlat
pop
(bad)
call
daa
in
xchg
sahf
outs
mov
scas
and
in
sub
inc
jne
lods
fidiv
sbb
mov
fwait
aam
inc
pop
icebp
lods
xor
in
repz
cmp
dec
mov
sub
mov
hlt
pop
arpl
and
add
pushf
leave
int3
cmp
and
add
(bad)
(bad)
jg
jae
mov
mov
sub
mov
sahf
jge
scas
sbb
cmps
or
jp
mov
pop
cmc
scas
pop
jmp
in
mov
dec
or
mov
xchg
(bad)
(bad)
(bad)
call
aas
push
lds
das
ret
(bad)
xor
call
xchg
and
clc
sub
sar
jmp
inc
lods
xchg
ja
mov
mov
push
movs
inc
call
loope
sbb
(bad)
(bad)
(bad)
inc
inc
inc
jno
pop
cmp
sti
pop
rcl
call
xlat
in
repz
push
jl
mov
xchg
shl
pusha
xor
je
push
pop
cmps
pop
mov
inc
icebp
je
push
(bad)
(bad)
(bad)
jmp
cmp
push
aaa
inc
xchg
hlt
xchg
xlat
xchg
push
scas
xchg
jno
mov
dec
xor
(bad)
(bad)
jmp
or
mov
xor
xchg
es
push
cmp
sbb
inc
add
sbb
push
je
test
push
or
adc
enter
adc
add
pop
loopne
inc
jmp
(bad)
push
pop
mov
push
jne
iret
push
sar
dec
clc
test
rcl
js
mov
cli
jmp
outs
clc
mov
push
pop
cmps
xlat
fbld
(bad)
(bad)
(bad)
push
fisubr
retf
push
jp
sub
nop
or
int
loope
mov
xor
aas
push
(bad)
jmp
aaa
fwait
push
test
aam
sub
mov
aas
mov
cwde
out
add
dec
cmps
push
call
add
(bad)
jmp
pop
stos
jo
mov
jb
pop
popf
jbe
mov
push
in
(bad)
(bad)
mov
pushf
sar
mov
scas
pop
mov
jmp
call
rcl
adc
mov
int
stos
push
add
cmp
ror
jg
inc
sbb
sub
fdivr
fdivr
and
push
lock
add
dec
mov
aaa
cld
xchg
(bad)
inc
xchg
stc
xor
lds
cwde
jnp
cmps
dec
push
sbb
dec
mov
outs
jnp
int
xor
ins
mov
pop
(bad)
(bad)
(bad)
call
xchg
sub
inc
gs
pop
ss
nop
bound
mov
mov
jmp
cli
leave
fldz
call
repz
add
inc
jb
xchg
popf
sub
or
(bad)
call
push
xor
lea
lock
loope
mov
(bad)
mov
pop
xchg
push
iret
sar
and
icebp
ror
lds
cld
pop
(bad)
aas
ffreep
inc
(bad)
jmp
iret
mov
dec
mov
fstp
fcmovnu
sar
(bad)
(bad)
(bad)
cmp
inc
(bad)
jle
ret
jnp
test
(bad)
stc
cld
mov
inc
add
inc
push
outs
call
clc
ja
fwait
or
ss
(bad)
xchg
push
(bad)
(bad)
(bad)
fst
jmp
inc
and
sub
retf
fst
lock
push
mov
sbb
cli
(bad)
(bad)
jmp
mov
push
leave
mov
jle
movs
pop
shl
iret
jecxz
in
mov
ins
pop
sbb
inc
scas
dec
mov
call
(bad)
push
fldcw
retf
push
shl
jmp
jmp
push
ins
lods
(bad)
movs
les
nop
mov
ins
rcl
out
or
dec
outs
lods
(bad)
(bad)
out
es
(bad)
(bad)
(bad)
(bad)
fnsave
pop
rcr
hlt
imul
bound
sub
les
push
test
and
out
and
(bad)
(bad)
dec
popa
imul
mov
mov
stos
mov
call
inc
data16
lds
aaa
ret
pop
push
or
sbb
das
js
push
imul
mov
in
imul
push
sub
push
out
aaa
xlat
cld
clc
imul
call
into
sbb
out
enter
int
js
aas
mov
pop
imul
lahf
test
(bad)
bound
loope
pop
cmp
pop
sbb
out
out
inc
loop
shl
inc
popa
push
rep
jp
inc
movs
(bad)
pop
clc
call
xchg
sub
xor
jae
mov
stc
mov
(bad)
inc
push
(bad)
push
stos
xor
cs
pop
adc
dec
movs
xor
(bad)
mov
adc
inc
sub
cmp
test
xor
retf
out
mov
loope
call
pop
mov
pop
pop
(bad)
(bad)
(bad)
cmp
jp
stc
xor
(bad)
push
xchg
shr
mov
hlt
out
cld
sub
dec
dec
mul
push
or
mov
adc
push
inc
je
cmp
es
push
jb
pop
and
mov
(bad)
mov
hlt
pop
ret
jae
jae
xchg
jae
in
pop
ret
icebp
les
mov
(bad)
(bad)
(bad)
call
(bad)
xchg
repnz
cmp
pop
in
call
push
(bad)
xor
push
repz
xchg
fiadd
cld
mov
xchg
pop
test
(bad)
mov
push
xchg
dec
pop
in
fwait
add
and
or
ret
ds
ins
icebp
(bad)
fst
popa
jb
pop
inc
cmp
add
sub
inc
xchg
push
pop
out
add
adc
add
xor
js
leave
add
and
push
xchg
mov
clc
inc
(bad)
mov
push
or
xor
inc
pusha
addr16
and
(bad)
(bad)
in
addr16
(bad)
fbstp
cs
cdq
fstp
(bad)
jb
xchg
fadd
mov
les
xor
xor
jmp
pusha
scas
out
jg
push
aaa
les
lea
retf
mov
or
into
(bad)
call
dec
ss
rol
cdq
pop
push
mov
loopne
xchg
jle
(bad)
(bad)
dec
test
or
mov
push
or
ficom
mov
(bad)
(bad)
(bad)
jmp
jne
mov
mov
xor
mov
add
ins
push
mov
mov
cli
call
fild
sahf
lea
pop
ins
mov
sar
jno
fisubr
fidiv
(bad)
jmp
call
pusha
jmp
xlat
(bad)
ins
pop
sahf
dec
dec
or
dec
(bad)
(bad)
cmp
push
add
pop
xchg
mov
mov
xor
sub
aad
xchg
(bad)
(bad)
(bad)
jmp
and
mov
outs
dec
lock
in
stc
movs
pop
dec
mov
es
pop
sti
cdq
popf
mov
stos
sub
fisubr
push
mov
(bad)
jle
out
call
icebp
out
repz
(bad)
jg
lods
mov
je
adc
adc
dec
and
sub
xchg
add
dec
jp
lahf
mov
xor
sti
and
dec
shr
fild
dec
int3
repz
psrad
arpl
pop
(bad)
(bad)
(bad)
(bad)
sub
mov
(bad)
mov
pop
shl
test
and
std
(bad)
mov
stos
jb
and
sbb
sbb
neg
(bad)
(bad)
push
sub
lods
cmp
std
dec
idiv
stos
and
xchg
aam
cmc
call
cmc
(bad)
(bad)
push
pop
dec
inc
imul
aam
inc
pusha
fiadd
jl
arpl
(bad)
call
add
std
xchg
pop
sbb
icebp
push
add
jg
jbe
dec
sbb
pop
lahf
sub
pop
add
sub
add
js
and
mov
jmp
test
(bad)
int3
retf
lahf
sbb
int3
sbb
mov
ja
leave
test
inc
mov
repz
xchg
pop
xor
mov
or
adc
push
push
inc
sbb
inc
test
jmp
mov
outs
push
add
repz
adc
rcr
lahf
pop
ret
(bad)
dec
test
cdq
ror
mov
xor
ss
lds
(bad)
(bad)
cmps
mov
cdq
sub
fiadd
ror
dec
fnstcw
jmp
(bad)
(bad)
(bad)
push
out
pop
mov
(bad)
ja
xchg
jo
je
stos
je
mov
daa
pop
scas
cdq
mov
test
or
cmp
movs
movs
lock
repnz
ss
jbe
mov
sahf
(bad)
les
mov
inc
lahf
xor
(bad)
dec
imul
fcom
stc
popa
pusha
into
or
clc
int3
xchg
push
scas
mov
jmp
cdq
and
or
repnz
(bad)
(bad)
push
out
mov
imul
push
setae
leave
clc
mov
int
xchg
repnz
mov
(bad)
(bad)
jmp
popf
sub
jae
add
mov
daa
fs
das
mov
fsubr
or
mov
sahf
mov
data16
aam
pusha
push
stc
xor
(bad)
mov
push
or
mov
jmp
push
adc
fiadd
(bad)
cmp
call
hlt
mov
ret
dec
jnp
inc
hlt
xchg
push
adc
mov
and
inc
add
mov
mov
(bad)
call
adc
outs
aad
push
mov
push
in
lds
and
(bad)
call
xor
adc
jno
jbe
and
scas
(bad)
cdq
pop
dec
push
(bad)
(bad)
(bad)
call
bound
aam
ret
jb
mov
aaa
gs
xlat
(bad)
lods
dec
ret
and
dec
(bad)
(bad)
call
loopne
cmp
sbb
popa
(bad)
cmc
adc
sbb
shr
popf
addr16
(bad)
(bad)
call
hlt
cli
sbb
pop
mov
dec
popf
mov
pusha
ret
xrelease
or
jmp
fs
mov
xchg
out
ror
(bad)
jmp
mov
fnsave
inc
rcl
push
jl
in
lea
call
mov
add
sbb
fs
jno
sbb
mov
inc
(bad)
push
jo
mov
(bad)
call
mov
sub
mov
jge
jb
ds
iret
xchg
aad
fs
mov
test
xor
push
mov
arpl
out
sbb
sub
test
cmp
add
imul
pushf
pop
add
dec
mov
inc
dec
pusha
shl
imul
mov
ins
sbb
repz
xlat
or
fstp
popf
push
stos
inc
adc
push
dec
jl
dec
test
lods
mov
cmps
add
call
adc
add
(bad)
pop
adc
push
sbb
adc
dec
jmp
(bad)
sub
call
sub
cmp
scas
push
fnstsw
mov
fcom
sti
lock
out
mov
icebp
mov
adc
fcomp
cs
add
call
loop
mov
fwait
int3
push
adc
push
fnstcw
(bad)
call
dec
jp
push
cmp
outs
or
inc
loop
mov
(bad)
(bad)
(bad)
call
cmp
cmp
shr
dec
jle
das
jno
and
repz
(bad)
(bad)
(bad)
(bad)
mov
(bad)
fistp
xchg
mov
cmc
outs
jge
adc
xor
bt
(bad)
(bad)
(bad)
fnsave
mov
aaa
add
stc
sbb
dec
lahf
mov
inc
sbb
sbb
push
loopne
std
jmp
dec
mov
mov
jnp
dec
es
fcomip
pop
sbb
ss
ins
xchg
gs
jae
loopne
aad
enter
mov
inc
inc
pop
inc
mov
fadd
(bad)
fst
jg
sub
xchg
jns
out
pop
retf
je
sbb
(bad)
(bad)
(bad)
push
iret
jns
repz
fsubr
dec
jmp
ss
in
jg
stos
vfnmsub132ss
retf
xchg
mov
push
icebp
sbb
test
icebp
adc
push
nop
dec
in
in
jmp
xchg
jl
retf
and
inc
in
loopne
sub
ror
jg
(bad)
jmp
sub
gs
pop
sbb
sar
call
push
ficomp
sahf
(bad)
(bad)
(bad)
(bad)
mov
jmp
push
jl
gs
adc
(bad)
aam
(bad)
push
pop
sbb
lahf
adc
imul
lock
push
sub
(bad)
cli
and
(bad)
(bad)
jmp
scas
div
push
scas
punpcklwd
jle
mov
sub
popf
push
cmp
dec
pop
(bad)
(bad)
(bad)
jmp
dec
sbb
xchg
pushf
outs
ja
std
les
dec
(bad)
(bad)
xor
outs
sub
fsubrp
cwde
rcl
jmp
hlt
out
(bad)
call
and
out
add
shl
inc
ins
scas
sbb
aaa
icebp
and
(bad)
(bad)
(bad)
jmp
and
in
cmp
ja
or
(bad)
ins
out
mov
test
in
into
mov
add
scas
stc
es
inc
xor
pop
xor
(bad)
mov
aaa
sbb
push
(bad)
out
add
fnstsw
(bad)
mov
or
cld
(bad)
call
rcl
in
dec
xchg
sub
cs
cwde
arpl
(bad)
(bad)
jg
mov
(bad)
cmp
popa
in
test
repz
jbe
pop
dec
cmp
idiv
push
cmp
lds
aaa
iret
imul
push
fwait
aas
daa
add
or
fild
sbb
xchg
push
retf
xchg
pop
test
push
pop
sbb
imul
std
dec
in
dec
rcr
in
cmp
inc
mov
sahf
sti
(bad)
std
sbb
fmul
(bad)
ds
fisttp
pop
dec
jmp
imul
push
and
dec
xchg
mov
hlt
inc
loope
add
sub
(bad)
(bad)
mov
cmp
pop
cmp
cmp
jbe
jno
push
icebp
out
int3
das
sar
push
xor
mov
xchg
icebp
adc
push
adc
and
xor
test
mov
stos
je
adc
xor
popf
adc
pop
cli
mov
clc
xchg
imul
clc
call
ins
rol
sub
mov
test
xchg
mov
pop
jo
shr
add
mov
js
cmc
scas
rol
(bad)
(bad)
mov
sar
(bad)
cmp
jle
repz
out
loopne
(bad)
(bad)
(bad)
jg
outs
dec
mov
ja
push
adc
jecxz
rol
out
mov
mov
mov
fcom
(bad)
nop
xor
lods
das
shl
popa
aam
(bad)
(bad)
dec
push
iret
loope
sahf
ds
imul
adc
dec
xor
leave
xchg
scas
xchg
outs
dec
aad
xchg
in
addr16
jb
mov
inc
cld
jmp
push
adc
mov
mov
movaps
aad
icebp
(bad)
jmp
push
scas
test
mov
pop
outs
push
adc
nop
dec
pop
cli
cli
bound
dec
cld
push
in
and
pop
jo
nop
cmps
es
call
mov
(bad)
lds
add
mov
add
cwde
lahf
jo
or
call
add
push
mov
push
push
(bad)
(bad)
(bad)
jmp
sbb
sub
retf
nop
sbb
xchg
stos
xor
sbb
inc
mov
cs
(bad)
adc
dec
and
inc
aas
mov
add
pop
cmps
mov
jae
mov
clc
xor
xchg
xor
inc
cmps
(bad)
loope
mov
mov
call
cld
(bad)
hlt
scas
pusha
jle
xchg
pop
outs
lds
pinsrw
das
jle
scas
pop
sub
jp
adc
dec
aam
sbb
call
out
inc
xchg
or
repnz
lds
rol
adc
(bad)
(bad)
sbb
xchg
cmps
add
test
jns
aad
sbb
fnstsw
or
inc
pop
pushf
or
pmaxsw
mov
jmp
sub
xor
xchg
icebp
(bad)
cli
jp
enter
enter
dec
ficomp
into
mov
sub
sub
retf
mov
mov
in
cmp
xchg
icebp
lahf
jb
mov
add
cmp
movsx
jg
ins
mov
popa
pop
out
mov
xor
jnp
es
(bad)
jmp
dec
mov
push
stc
addr16
addr16
adc
fimul
mov
stos
(bad)
ins
push
mov
push
repnz
pop
pushf
call
fmul
add
call
fcmovb
pop
pop
add
leave
mov
mov
push
(bad)
(bad)
mov
std
std
mov
cmp
dec
push
js
jno
push
push
inc
pushf
inc
pop
cmp
adc
inc
and
scas
push
test
test
loopne
or
fcomip
dec
mov
mov
fadd
inc
mov
sub
or
(bad)
(bad)
fild
push
ins
push
shl
cmps
mov
jns
mov
(bad)
(bad)
jmp
dec
inc
rol
and
mov
iret
pop
fsubr
cmc
mov
ret
xchg
sub
(bad)
(bad)
jmp
push
xchg
clc
cmps
push
cmc
push
pop
mov
pop
dec
and
stos
retf
stos
aad
mov
(bad)
call
in
and
jae
test
cmc
(bad)
mov
pop
or
stos
outs
data16
sub
add
fwait
aad
or
pop
inc
sbb
imul
int3
icebp
imul
xchg
in
(bad)
(bad)
jmp
out
and
xor
lahf
icebp
jp
stos
arpl
cmp
ror
aam
repnz
pop
clc
leave
repnz
inc
test
add
sar
mov
(bad)
inc
lods
dec
xlat
fstp
repnz
retf
out
je
movs
popf
fist
xor
dec
fwait
(bad)
(bad)
adc
outs
push
add
xchg
dec
(bad)
(bad)
(bad)
out
sbb
call
and
adc
loope
mov
jg
cli
bound
adc
loop
aam
xchg
xchg
fcomp
(bad)
inc
jo
xchg
clc
ror
jecxz
je
psubd
pop
pop
pop
ds
(bad)
call
push
mov
or
cli
cmp
xor
sub
jno
or
(bad)
(bad)
(bad)
ds
sub
lods
cmp
adc
out
pusha
je
inc
mov
and
adc
sbb
xor
(bad)
(bad)
(bad)
cmp
jbe
pop
dec
lahf
mov
test
mov
pop
imul
sub
pop
mov
push
xor
stos
shl
and
dec
ret
nop
aad
lock
cld
repnz
dec
adc
add
or
mov
push
int3
dec
lahf
jne
mov
data16
mov
jge
xor
test
inc
mov
call
pop
hlt
(bad)
jg
icebp
or
pop
push
jne
xchg
sbb
push
pop
repz
jp
outs
clc
(bad)
inc
jp
and
(bad)
fld
mov
or
dec
hlt
sbb
(bad)
call
add
adc
nop
test
(bad)
les
out
(bad)
(bad)
jg
xor
(bad)
(bad)
adc
xor
or
(bad)
jmp
and
sbb
push
sbb
retf
jmp
jbe
mov
lock
jg
cmps
sahf
cmp
pop
(bad)
cmp
lods
push
ret
dec
push
mov
inc
and
popf
adc
inc
outs
icebp
rol
xor
pop
retf
jmp
inc
out
imul
adc
jg
dec
push
vpackuswb
mov
mov
adc
int3
les
popa
xor
cmp
jmp
xlat
iret
lods
dec
xchg
jno
fisttp
lods
popf
inc
test
or
sar
int3
pop
data16
ss
hlt
jno
and
mov
cwde
sbb
push
daa
js
lahf
cld
push
pop
jle
adc
mov
scas
pop
xor
cli
in
cs
mov
clc
(bad)
(bad)
dec
pop
dec
call
pop
loopne
das
fimul
and
push
mov
(bad)
(bad)
js
or
inc
pusha
adc
jb
sbb
shr
jne
rcl
loop
test
(bad)
pop
out
cdq
sub
and
sub
sub
(bad)
push
std
mov
jmp
inc
out
(bad)
mov
popa
push
xchg
add
mov
mov
cld
into
popf
ja
repnz
popa
mov
call
dec
push
(bad)
add
mov
add
call
sahf
adc
jns
jmp
sub
xor
stos
aas
xchg
push
xor
and
stos
mov
repz
mov
mov
aad
jns
xchg
pop
mov
mov
jg
or
cdq
bound
push
or
dec
xchg
jl
jg
dec
inc
(bad)
call
vorpd
bound
ret
movs
aam
jp
or
xchg
jecxz
jae
sbb
mul
pop
rcl
xchg
pop
popf
cmps
sti
arpl
das
xchg
(bad)
(bad)
cld
inc
dec
or
int3
lea
jmp
cmp
jb
xor
or
pop
inc
adc
add
pop
(bad)
(bad)
(bad)
inc
call
mov
gs
ins
or
fadd
lods
push
test
cmp
mov
inc
in
test
dec
jecxz
mov
inc
xor
xor
cld
and
ins
sbb
les
sub
mov
xor
jne
add
pop
or
ror
sub
inc
dec
mov
test
lods
dec
scas
aad
je
xor
(bad)
(bad)
(bad)
dec
test
or
js
mov
inc
cwde
or
add
int3
retf
(bad)
(bad)
(bad)
(bad)
jge
cmp
adc
sub
xchg
xchg
scas
mov
mov
retf
xchg
fs
(bad)
dec
dec
rcl
pop
loop
call
in
icebp
inc
push
add
in
sub
out
xor
test
in
sar
push
inc
inc
lods
mov
and
mov
data16
outs
cli
pop
jmp
lahf
pop
ins
je
out
imul
(bad)
jmp
or
mov
scas
or
clc
retf
xor
xlat
lahf
mov
dec
ja
(bad)
pop
mov
(bad)
(bad)
(bad)
call
rol
pop
aaa
pop
mov
cmp
xor
gs
mov
or
cmp
mov
fs
cmp
in
or
sti
icebp
inc
push
addr16
in
lock
inc
mov
pop
dec
cmp
outs
mov
mov
pop
js
jmp
shl
pop
cwde
jp
outs
jecxz
xor
je
adc
or
pop
mov
cmp
push
into
stc
sbb
test
mov
or
sbb
cmp
sbb
cmp
not
dec
or
mov
xchg
pusha
jns
or
sub
int
mov
(bad)
(bad)
(bad)
js
rdmsr
movs
jns
lods
enter
dec
fcmovnu
call
xchg
adc
push
add
(bad)
fiadd
pop
andps
pop
cmps
(bad)
sbb
jmp
enter
or
add
xlat
adc
jmp
or
stos
rol
out
mov
aad
(bad)
pop
cmps
dec
movs
in
lock
(bad)
push
ins
lds
add
mov
into
mov
push
nop
cdq
mov
sar
pop
clc
stc
loopne
gs
mov
adc
bound
fimul
cs
jno
aaa
(bad)
jecxz
push
(bad)
mov
in
jmp
and
fidiv
jbe
das
dec
ficomp
(bad)
(bad)
(bad)
call
or
pop
add
sub
js
fsub
push
jae
xchg
lahf
xchg
xor
add
add
or
imul
pop
pop
retf
xchg
jecxz
mov
jle
(bad)
(bad)
(bad)
jmp
std
cmps
dec
int3
bound
pop
sub
cmps
xlat
xor
mov
les
sub
(bad)
jmp
stos
sbb
cmp
fcom
into
retf
push
jmp
mov
int3
sbb
pop
(bad)
inc
clc
mov
das
scas
mov
sub
out
shl
imul
movs
rcl
sbb
inc
(bad)
mov
jle
cs
(bad)
pusha
pop
adc
das
jnp
scas
jl
popf
cwde
std
rol
xchg
xchg
push
(bad)
dec
arpl
repz
sahf
(bad)
call
(bad)
icebp
pop
ja
and
(bad)
mov
sbb
fisttp
xchg
lods
jno
ds
push
jae
xchg
push
pop
hlt
push
or
xchg
imul
and
sar
inc
gs
jns
pop
(bad)
(bad)
(bad)
inc
and
sub
repnz
mov
fs
sti
push
daa
adc
and
(bad)
in
sub
call
add
lods
push
and
je
mov
pop
dec
pop
into
mov
lock
fiadd
jmp
fisub
xchg
push
xchg
popaw
gs
xor
iret
imul
inc
mov
and
dec
leave
inc
stc
test
call
movs
inc
sub
xchg
scas
pop
cmc
cmp
push
pop
sbb
cmps
push
movs
sbb
lods
fs
sbb
es
sub
mov
sahf
das
cmp
mov
cld
(bad)
mov
in
fwait
and
mov
out
jle
(bad)
(bad)
call
popf
pop
push
movs
scas
jge
jmp
jae
mov
fisttp
inc
push
cmp
fnsave
and
sub
outs
add
push
add
sbb
pop
int
dec
into
add
adc
add
push
movs
inc
sbb
add
ret
shr
inc
xlat
lock
jg
imul
mov
inc
scas
das
sub
lods
cmp
dec
rcr
mov
outs
test
rol
stos
pop
mov
mov
mov
or
xchg
lock
add
inc
(bad)
(bad)
(bad)
call
push
aad
(bad)
xor
in
adc
pusha
xchg
and
jne
jmp
or
fild
lock
jmp
dec
pop
cmps
loop
loope
or
arpl
lods
test
fwait
(bad)
in
(bad)
(bad)
mov
xchg
or
add
(bad)
cmps
or
add
daa
jmp
cmps
movs
mov
add
std
sahf
adc
jp
sub
lock
mov
fs
mov
sbb
dec
mov
push
mov
or
cmps
sub
(bad)
dec
push
xor
ins
add
mov
xor
add
loop
jnp
mov
in
mov
sub
mov
(bad)
jg
call
div
push
aas
push
fadd
movs
jmp
movs
ins
ret
and
(bad)
dec
or
mov
jno
std
(bad)
out
out
sbb
fwait
mov
in
cs
test
mov
jmp
arpl
rcl
call
das
jmp
rcr
ins
add
add
xor
mov
inc
xlat
and
xchg
dec
lock
inc
and
(bad)
sbb
lea
rcr
(bad)
cmp
ins
fnstenv
movs
inc
inc
aad
(bad)
push
rol
pusha
mov
loopne
mov
pop
sub
(bad)
xlat
push
mov
mov
push
je
fisttp
adc
mov
(bad)
cmp
sbb
pop
or
js
(bad)
adc
add
call
fcom
pop
pop
xchg
ret
jbe
(bad)
(bad)
(bad)
jg
div
sti
fsubr
mov
jge
mov
sahf
mov
fcomip
loopne
js
(bad)
push
or
(bad)
call
pop
les
outs
pop
data16
gs
jg
stos
push
cwde
sbb
scas
stos
retf
push
and
retf
mov
and
cli
test
mov
pop
fsub
(bad)
(bad)
(bad)
ins
fmul
imul
xlat
into
sub
div
jecxz
ds
mov
shl
xchg
push
movs
cmp
call
mov
dec
push
imul
push
sub
and
cmp
dec
push
mov
pop
(bad)
pop
xchg
(bad)
(bad)
(bad)
push
cmps
addr16
adc
aaa
dec
hlt
pop
pop
pop
jb
and
call
xlat
dec
rol
dec
dec
imul
mul
mov
mov
ins
cli
jmp
xchg
jmp
shr
(bad)
fnstsw
jne
ss
sub
(bad)
(bad)
mov
xchg
call
mov
les
push
mov
xchg
clc
(bad)
pop
sub
fadd
imul
push
std
push
push
jmp
loop
mov
inc
add
jno
scas
mov
jmp
cld
gs
fimul
or
sbb
call
data16
in
lahf
ret
jl
fidivr
jecxz
pop
mov
add
mov
arpl
sub
ins
stos
push
sub
add
stos
ret
(bad)
call
fwait
pushf
stos
mov
xor
dec
mov
xor
mov
std
sub
dec
jle
repnz
xor
mov
cmps
(bad)
call
push
mov
in
xor
(bad)
jb
adc
sub
mov
rcr
test
int
(bad)
pop
sub
scas
adc
dec
outs
ja
or
push
cmp
(bad)
jmp
jle
mov
lods
and
retf
cmp
pop
xchg
sbb
or
imul
adc
pop
hlt
inc
sahf
loop
adc
inc
pop
pop
ds
push
loop
sub
(bad)
(bad)
call
mov
cmp
or
hlt
std
ins
xchg
pushf
retf
in
and
ja
inc
(bad)
dec
push
jp
fldenv
aad
in
inc
pop
ja
jg
pop
mov
out
jge
lods
xchg
call
add
push
jae
mov
pop
sbb
fidivr
test
call
push
popa
fcomp
fst
pusha
cmps
adc
inc
mov
mov
mov
push
icebp
lods
mov
out
rcr
scas
push
(bad)
(bad)
(bad)
(bad)
cli
jl
push
repz
enter
cmps
jo
ss
not
cmp
ss
aad
ffree
(bad)
(bad)
(bad)
cmp
xchg
inc
xchg
or
fs
push
jp
in
jl
(bad)
fisttp
jmp
mov
adc
push
mov
(bad)
(bad)
call
int3
pop
jb
out
fnstcw
out
scas
gs
movs
test
adc
(bad)
(bad)
mov
cmps
xchg
div
jmp
mov
mov
jecxz
icebp
mov
pop
xchg
out
aad
cli
(bad)
push
dec
outs
popf
fcmovb
cmp
les
sub
pop
scas
sar
ja
std
loope
bound
dec
cmp
jge
scas
lock
(bad)
call
mov
cwde
mov
mov
ins
test
stos
mov
and
mov
aad
sahf
fsubp
nop
hlt
sbb
pop
ins
or
mov
jg
(bad)
(bad)
(bad)
call
sbb
scas
jns
mov
outs
psubusb
ins
jb
jmp
ja
call
push
sub
adc
mov
jmp
fs
cmps
(bad)
xchg
int3
test
jecxz
(bad)
call
pop
add
shl
in
jmp
adc
jmp
je
test
xor
add
lods
adc
es
(bad)
jmp
mov
in
pusha
imul
pop
jnp
scas
mov
call
sub
and
rcr
scas
xlat
xchg
ss
cmp
ja
add
jnp
xchg
loopne
mov
add
push
add
inc
sbb
dec
js
cmps
mov
pop
jp
sub
jmp
movs
xchg
cld
adc
(bad)
and
lock
(bad)
call
cmp
sub
sbb
outs
lea
neg
mov
sbb
xchg
inc
iret
cli
ja
(bad)
in
mov
ins
in
mov
das
cli
aaa
add
call
rcl
pop
mov
ins
push
call
dec
enter
dec
in
(bad)
inc
loopne
dec
and
(bad)
(bad)
jmp
arpl
cmp
and
adc
xchg
cmps
mov
cmp
sub
repz
(bad)
inc
push
xchg
push
movs
iret
lea
pusha
nop
sahf
sbb
call
add
xchg
retf
in
call
inc
sbb
(bad)
jecxz
mov
cmps
(bad)
ds
call
xor
mov
pop
loop
(bad)
dec
out
or
sub
xchg
jb
adc
xor
mov
sub
jmp
add
sbb
sahf
cmp
mov
or
sub
xchg
mov
(bad)
jmp
inc
or
adc
retf
out
shl
push
or
xchg
pop
(bad)
cmc
das
mov
(bad)
and
push
jo
dec
int3
xchg
pop
je
fld
sahf
pop
iret
add
(bad)
mov
js
adc
mov
adc
inc
in
lods
push
add
(bad)
dec
pop
nop
(bad)
call
pop
popf
aas
xchg
inc
fdivr
xor
(bad)
call
mov
icebp
mov
mov
call
retf
pop
js
ds
add
push
lods
mov
dec
mov
retf
fmul
push
adc
in
ret
scas
add
cwde
cmp
ins
std
(bad)
jnp
stos
jp
mov
stc
mov
(bad)
(bad)
(bad)
jmp
repnz
pop
cmc
(bad)
mov
cmp
test
cdq
in
dec
(bad)
inc
xchg
rcr
ja
leave
pop
idiv
(bad)
addr16
setge
hlt
(bad)
(bad)
fld
push
pop
dec
xlat
mov
xchg
xchg
out
inc
and
repz
(bad)
(bad)
jmp
dec
arpl
xchg
nop
popf
popa
ds
int3
js
jp
ret
loop
pop
xchg
mov
(bad)
(bad)
call
jbe
lahf
jecxz
mov
ds
adc
cmp
popa
jl
ret
push
or
(bad)
(bad)
in
stos
retf
pop
add
mov
jmp
push
cmp
jmp
sub
xor
push
(bad)
jmp
xor
imul
leave
stos
(bad)
jecxz
pop
ss
call
int3
sub
jp
imul
shl
stos
lahf
sub
inc
mov
stos
pop
mov
dec
shl
sub
dec
inc
ja
loop
jmp
dec
retf
(bad)
lock
(bad)
jmp
sar
movs
adc
(bad)
sbb
push
cmp
xchg
pop
adc
(bad)
(bad)
popf
jmp
push
test
sbb
cmc
cmpxchg
add
(bad)
(bad)
cli
mov
pop
pop
xor
clc
movs
aad
inc
push
push
mov
bound
lahf
mov
xchg
inc
push
pop
add
mov
lods
xor
(bad)
je
pushf
lock
cs
mov
xchg
sub
cmp
arpl
or
cmps
xchg
mov
loopne
xchg
pop
mov
ins
push
sti
cmc
lods
repz
dec
(bad)
(bad)
dec
cmc
in
mov
lahf
arpl
shl
xchg
cmps
(bad)
(bad)
push
jl
in
push
dec
mov
push
ss
sub
in
jecxz
sub
push
fwait
or
loop
pusha
arpl
pop
adc
call
loopne
inc
pop
jmp
pop
push
xor
js
int
jno
push
jo
(bad)
(bad)
(bad)
jmp
inc
cmp
retf
cmp
pop
pop
add
in
aas
dec
mov
sbb
in
popf
js
and
aad
gs
(bad)
jmp
mov
int3
pop
popa
dec
das
scas
sub
inc
sbb
aam
cmp
cmps
mov
(bad)
pop
loopne
dec
adc
jno
mul
call
in
sbb
pop
in
in
scas
(bad)
(bad)
(bad)
cmp
mov
pop
cmp
(bad)
out
jmp
(bad)
push
int
xor
jmp
rol
fadd
loope
dec
mov
and
mov
adc
adc
out
fs
mov
stos
and
loopne
dec
fadd
test
inc
jge
test
mov
ins
hlt
add
xchg
or
sbb
mov
mov
mov
push
jbe
cmc
in
(bad)
(bad)
out
xchg
mov
adc
push
retf
test
jmp
and
scas
fld
dec
arpl
xchg
cmps
cmp
in
outs
movs
xor
inc
mov
and
push
adc
(bad)
out
ds
or
sub
mov
push
ins
add
sub
sbb
sahf
inc
test
arpl
fcom
sub
cmp
hlt
outs
fnstcw
ss
loopne
lods
(bad)
jmp
inc
shr
adc
jle
mov
xchg
sub
ficomp
movs
cmp
pop
or
fidivr
sub
or
les
or
(bad)
(bad)
dec
in
pushf
inc
mov
mov
loop
test
add
mov
(bad)
jmp
(bad)
loopne
sbb
pop
fcompp
in
xchg
pop
int
add
jmp
aas
clc
shl
jb
(bad)
(bad)
out
(bad)
hlt
mov
aad
pop
jno
loope
addr16
test
clc
int
std
rcl
fist
push
mov
xor
stc
and
and
jbe
pop
sbb
(bad)
(bad)
(bad)
call
pushf
mov
lds
jmp
clc
cwde
ror
xchg
push
movs
sub
xlat
cs
lds
stc
mov
xchg
jmp
sbb
call
xor
(bad)
stc
cdq
sbb
(bad)
(bad)
(bad)
(bad)
repnz
fild
xchg
cld
jmp
ja
out
sub
cmc
jmp
cwde
dec
inc
push
pop
push
lock
xchg
push
iret
fild
jmp
add
lods
dec
fst
inc
dec
addr16
in
pop
je
add
(bad)
fimul
scas
cli
adc
xor
push
jnp
dec
xchg
xchg
jmp
jmp
cld
(bad)
(bad)
(bad)
fdivrp
mov
add
stos
iret
mov
push
outs
inc
mov
sbb
in
mov
inc
mov
push
pusha
xor
cli
lods
in
fistp
(bad)
into
ret
(bad)
mov
scas
and
jge
sub
jno
pop
or
pop
mov
icebp
sbb
pop
add
stos
pop
push
ins
adc
mov
call
enter
out
rcl
mov
cdq
cmc
push
lea
(bad)
(bad)
push
ds
cwde
test
repnz
in
mov
push
and
leave
ret
inc
xor
test
push
pop
pop
mov
mov
cmc
cmc
adc
(bad)
xchg
push
mov
or
xchg
pop
(bad)
(bad)
(bad)
push
xchg
adc
(bad)
and
jae
mov
lods
add
xor
cmc
call
sub
cmp
(bad)
mov
push
shr
jg
pop
inc
(bad)
jmp
add
mov
and
aas
dec
iret
lods
and
dec
pop
xchg
cmp
dec
or
(bad)
mov
sub
jmp
add
(bad)
(bad)
mov
aad
xor
repnz
cmc
popf
adc
mov
sbb
bnd
pop
inc
dec
mov
(bad)
xchg
dec
pop
sub
cmps
rep
jg
popa
cld
dec
retf
sbb
dec
sbb
push
jo
push
and
xchg
js
adc
dec
stc
cmp
dec
inc
gs
in
dec
mov
dec
ds
call
movs
add
in
push
sbb
push
xchg
(bad)
(bad)
(bad)
push
inc
dec
(bad)
push
xor
int
sbb
movs
adc
push
push
daa
rcr
mov
ss
(bad)
(bad)
(bad)
cmp
repnz
xor
in
jp
or
fsubr
aam
xchg
sub
shr
fs
test
(bad)
in
mov
test
jnp
shl
(bad)
jmp
mov
in
inc
fninit
aaa
mov
jecxz
popf
scas
jge
(bad)
(bad)
jmp
scas
shr
or
std
(bad)
mov
arpl
out
scas
(bad)
(bad)
(bad)
call
and
inc
cld
bound
pop
dec
inc
dec
scas
or
or
imul
push
or
scas
sub
push
(bad)
pop
inc
mov
cld
mov
lods
xchg
test
mov
and
cmps
(bad)
movs
xchg
sar
call
ret
fisub
and
dec
test
sahf
(bad)
(bad)
call
inc
inc
push
cmc
cs
dec
add
jl
add
pop
call
jge
les
inc
or
les
sub
dec
and
mov
fs
arpl
add
or
pop
xor
clc
and
push
dec
and
jmp
mov
imul
mov
lock
sub
fwait
and
sub
sub
mov
(bad)
(bad)
(bad)
(bad)
cli
cmp
test
adc
jl
xchg
in
cmps
or
xchg
shl
retf
test
(bad)
jg
aad
mov
adc
lahf
dec
pop
fst
mov
sbb
ins
sub
push
dec
popa
gs
xchg
jbe
rcl
addr16
std
add
mov
add
hlt
add
test
std
(bad)
mov
xchg
in
(bad)
std
cmp
mov
or
je
xchg
nop
cwde
rol
inc
push
inc
dec
jmp
dec
or
ins
mov
in
(bad)
(bad)
(bad)
jmp
mov
mov
pusha
ret
xor
pop
movs
push
test
mov
ret
mov
jmp
rol
imul
test
gs
call
mul
mov
(bad)
jo
and
aad
sub
sahf
sub
outs
imul
jmp
adc
push
cmp
cdq
(bad)
loopne
pop
push
adc
rcl
sbb
(bad)
mov
rol
cmp
push
mov
scas
pop
call
fcomip
push
cmps
aad
(bad)
jb
jo
loope
mov
xor
jbe
fcomp
das
test
bnd
ja
ja
icebp
adc
push
mov
push
fdiv
arpl
mul
jecxz
cmp
call
not
(bad)
(bad)
(bad)
dec
cld
call
jle
jbe
push
arpl
xchg
inc
xchg
inc
lahf
xchg
adc
shl
pop
popf
dec
xor
mov
or
pop
loopne
pusha
es
lds
push
stc
(bad)
call
mov
mov
fs
cld
fcmovu
jge
outs
sbb
cld
push
shl
jge
push
clc
loopne
(bad)
(bad)
fidiv
js
push
out
lahf
cli
aam
sbb
mov
jae
push
jle
push
leave
mov
cmps
repnz
pusha
loop
jmp
sar
dec
and
icebp
xchg
jmp
sbb
or
popf
sub
pop
hlt
das
je
jg
push
iret
mov
movs
and
push
mov
fdiv
xchg
fs
jmp
dec
xchg
repz
adc
out
push
mov
lds
dec
sahf
rcl
(bad)
push
outs
pop
mov
lahf
dec
loope
cdq
repz
fbld
mov
dec
je
scas
movs
add
call
mov
push
sub
dec
adc
xchg
inc
sti
xchg
mov
call
xchg
lods
pop
and
out
pop
mov
sub
iret
and
out
adc
xchg
or
jmp
(bad)
push
dec
icebp
lahf
mov
or
mov
subps
inc
or
xchg
fnsave
jns
or
sbb
fst
push
pusha
dec
jmp
mov
(bad)
aaa
nop
(bad)
call
inc
scas
mov
push
jne
add
inc
push
push
pop
(bad)
(bad)
(bad)
(bad)
jmp
int
or
popf
push
sub
test
shr
(bad)
lahf
popa
cdq
fbld
inc
add
sbb
ja
push
mov
(bad)
(bad)
(bad)
call
hlt
or
mov
stos
inc
repz
adc
shr
jbe
dec
imul
arpl
(bad)
(bad)
cmp
je
sub
mov
push
ins
icebp
xor
jo
bound
sbb
sar
mov
call
scas
out
das
pop
ds
adc
stos
cmc
(bad)
scas
mov
mov
(bad)
in
pop
cmp
(bad)
mov
test
cmc
std
std
or
cs
pop
call
pop
in
xchg
(bad)
(bad)
push
push
cmp
out
ret
clc
out
(bad)
sub
cmp
and
push
sub
ja
clc
adc
inc
xor
xlat
out
cmp
(bad)
(bad)
(bad)
call
jns
rcl
add
hlt
dec
lea
cmp
loop
mov
and
icebp
jmp
rcr
push
jmp
addr16
mov
shl
pop
or
pop
test
adc
and
outs
daa
xor
clc
movs
jb
xor
jmp
push
fwait
xor
out
arpl
leave
inc
(bad)
(bad)
(bad)
call
xchg
add
adc
jp
mov
xchg
jp
xchg
push
call
call
outs
mov
stos
call
enter
push
retf
js
mov
retf
mov
sub
inc
sahf
mov
cmp
push
lds
or
(bad)
fstp
add
mov
add
and
pop
mov
das
mov
call
and
jbe
jle
jge
ss
or
cmps
pop
pop
xor
mov
mov
add
or
mov
mov
(bad)
out
mov
xchg
jo
lahf
movs
push
and
xchg
dec
cs
imul
pusha
jns
cdq
mov
sub
in
cmc
mov
and
fiadd
inc
retf
mov
sub
add
das
jp
inc
cmps
enter
sbb
fcomip
stc
xor
mov
or
xchg
mov
sahf
mov
or
mov
(bad)
fcomip
inc
mov
mov
aas
xchg
rcr
dec
dec
popa
pop
loop
xlat
cmps
inc
outs
ins
(bad)
(bad)
(bad)
dec
mov
arpl
push
xchg
(bad)
xchg
popa
jne
mov
dec
pop
mov
es
mov
push
pop
mov
inc
lods
lock
push
and
scas
sbb
mov
fldl2e
mov
push
push
xchg
jmp
push
fist
push
bnd
into
scas
push
xchg
cmps
mov
inc
dec
loopne
in
jmp
loopne
ja
sbb
or
pushf
or
out
xchg
lods
call
jmp
(bad)
sbb
stc
jl
(bad)
pop
fsqrt
call
push
cmp
ret
pusha
rol
add
(bad)
mov
push
adc
sub
cmps
test
push
dec
add
popf
mov
(bad)
jmp
(bad)
punpckldq
push
adc
push
mov
mov
adc
pop
out
cld
mov
pushf
ins
mov
popf
shl
adc
cmp
ss
adc
nop
ss
in
push
add
cmps
out
xchg
movs
jmp
es
aad
mov
sbb
(bad)
push
out
leave
cmp
popf
int3
dec
xchg
mov
mov
loope
xor
add
mov
ret
cmps
dec
mov
ja
inc
and
dec
mov
mov
mov
push
shl
(bad)
in
test
test
(bad)
(bad)
dec
or
xlat
fdiv
sub
adc
mov
xchg
lods
and
push
fild
(bad)
(bad)
(bad)
jl
add
push
shl
push
addr16
daa
lahf
ret
(bad)
push
fs
test
rcl
div
xlat
arpl
or
mov
mov
scas
xor
clc
call
mov
jle
pop
(bad)
(bad)
(bad)
call
fs
jne
stc
dec
jg
xlat
and
daa
ins
xchg
sbb
loop
mov
rcr
or
cdq
jge
dec
mov
mov
cmp
out
hlt
sub
(bad)
fbld
dec
(bad)
das
pop
(bad)
std
pop
out
sar
pop
mov
leave
leave
xchg
pop
pusha
dec
jmp
pop
iret
stos
xlat
hlt
(bad)
cli
sbb
test
(bad)
(bad)
(bad)
call
icebp
int3
(bad)
aaa
imul
and
xchg
int
rol
(bad)
(bad)
(bad)
inc
movs
cmp
mov
dec
mov
les
inc
test
push
mov
stc
aaa
sub
cld
(bad)
dec
xchg
in
sub
scas
aam
xchg
push
out
sar
pop
mov
into
jg
rcl
inc
(bad)
popa
xchg
or
je
pop
push
jle
jae
mov
sar
push
fld
push
xor
(bad)
(bad)
jg
ss
call
pop
loope
pop
jnp
popa
mov
leave
inc
jmp
es
clc
mov
lods
outs
shr
jmp
fcomi
outs
dec
cwde
dec
mov
fidiv
scas
mov
stos
sub
jae
test
shl
add
and
inc
std
fsubr
and
(bad)
cmp
push
xchg
push
fstp
sahf
mov
das
(bad)
test
fstp
xchg
stc
movs
in
sti
cli
in
fldl2t
pusha
mov
push
(bad)
(bad)
(bad)
call
pop
das
(bad)
scas
mov
fwait
sub
mov
push
sub
fyl2x
icebp
mov
mov
bound
jne
adc
mov
and
repnz
inc
(bad)
stos
repnz
xchg
int
push
add
aad
sbb
dec
or
out
cld
lds
les
xor
sti
or
aad
jmp
les
sub
mov
cmp
arpl
cs
sub
(bad)
call
gs
or
movs
fwait
sub
mov
gs
stos
aad
dec
ror
es
jbe
mov
push
ret
or
or
jmp
inc
dec
div
(bad)
sbb
inc
ror
pop
hlt
dec
push
dec
inc
test
dec
pusha
dec
xchg
in
in
arpl
(bad)
fisttp
fisub
push
mov
mov
imul
movs
ja
add
sbb
in
push
dec
(bad)
(bad)
out
and
dec
or
mov
cmp
imul
or
inc
fcom
test
xchg
outs
enter
sub
jmp
dec
sti
nop
pop
mov
mov
iret
xchg
test
jp
test
inc
(bad)
pusha
inc
(bad)
frstor
int3
mov
xchg
cmp
sub
ret
mov
cmps
cmps
mov
(bad)
call
outs
fnstenv
test
sbb
jg
push
jg
call
dec
add
mov
arpl
jle
and
dec
mov
mov
pop
pop
(bad)
(bad)
push
fnsave
vorps
scas
mov
adc
mov
test
pop
ret
pop
adc
lahf
or
add
lock
cmp
mov
cli
dec
cmp
(bad)
(bad)
push
std
iret
loop
scas
cmp
je
and
cmp
fdivp
fimul
jecxz
aaa
(bad)
jg
mov
push
outs
and
out
xchg
aam
push
xor
sub
dec
xchg
sub
cld
jg
aaa
cwde
mov
push
and
dec
daa
(bad)
(bad)
push
rcl
jl
sahf
cli
out
sub
push
cmps
jmp
int3
(bad)
(bad)
mov
mov
cmps
push
js
pop
jecxz
xchg
and
in
pop
inc
jae
lock
(bad)
sti
int
cmp
inc
punpckhbw
adc
mov
fdiv
mov
(bad)
jmp
pop
push
or
test
popf
test
push
xchg
mov
mov
push
push
inc
pusha
mov
shl
loop
(bad)
inc
adc
and
xchg
add
scas
xchg
popf
mov
aad
retf
pop
inc
jl
mov
scas
(bad)
(bad)
mov
xchg
ss
(bad)
jl
out
add
inc
ret
clc
mov
popf
sti
sub
pop
loopne
mov
cmp
lock
inc
mov
rcr
ins
inc
jg
clc
rol
mov
cmps
lahf
cld
cmp
xor
mov
mov
add
outs
nop
dec
ja
pop
rol
cld
(bad)
(bad)
cmp
lock
dec
and
stos
cli
lock
mov
ja
or
scas
(bad)
jg
bound
es
cwde
inc
neg
push
imul
sub
mov
scas
jle
lods
das
push
mov
ja
jbe
jmp
xchg
add
repnz
(bad)
(bad)
(bad)
mov
or
cmp
je
jl
aad
jecxz
retf
mov
stos
test
cmps
imul
cli
pop
sub
scas
jmp
and
jmp
outs
mov
aaa
lea
dec
loop
mov
dec
std
call
(bad)
jmp
or
lock
lods
int
imul
sub
imul
dec
fs
stos
leave
push
sub
pop
jl
movs
or
push
xlat
mov
mov
sub
mov
(bad)
mov
pop
adc
dec
cmp
(bad)
jmp
dec
sbb
lods
or
and
xchg
(bad)
(bad)
call
sub
mov
xchg
stos
idiv
xor
(bad)
(bad)
mov
outs
out
in
dec
dec
cmps
pushf
and
pushf
dec
hlt
mov
push
out
or
sbb
cmp
enter
add
clc
repnz
leave
cmp
(bad)
(bad)
call
dec
aaa
mov
adc
mov
push
mov
sub
shl
or
pop
cmps
dec
out
inc
(bad)
call
cld
les
ror
sti
mov
fs
mov
hlt
lahf
or
pop
js
sbb
push
ds
mov
dec
scas
and
repz
clc
(bad)
(bad)
(bad)
sbb
es
leave
jl
cwde
mov
aaa
leave
fcom
or
or
inc
lea
jnp
call
mov
push
dec
loop
sbb
test
je
sti
loope
(bad)
mov
xchg
ret
dec
add
mov
xor
xor
(bad)
(bad)
call
mov
mov
sub
mov
jns
dec
pop
xchg
mov
pop
ins
sbb
test
xchg
pop
jno
mov
add
cdq
fild
inc
dec
int
dec
xchg
xchg
inc
jbe
rcr
push
jnp
sub
call
test
inc
hlt
sar
jb
movs
call
push
xchg
lea
and
inc
mov
pusha
sbb
push
lock
sbb
jo
mov
sub
fisubr
mov
stos
mov
mov
pop
nop
sub
pop
sub
ins
std
mov
fcmovnb
jmp
(bad)
dec
aad
ficom
adc
rol
enter
sub
dec
loope
test
(bad)
(bad)
jmp
inc
inc
inc
mov
mov
lock
cld
xor
and
movs
and
cmp
inc
jae
in
mov
bswap
(bad)
dec
dec
xor
(bad)
in
loope
push
(bad)
(bad)
mov
jl
cmp
imul
loopne
(bad)
mov
ja
cmp
repz
outs
mov
stos
and
xor
aam
cmp
jmp
in
cmp
mov
ja
sar
outs
sar
ret
(bad)
in
inc
mov
push
arpl
add
sub
inc
mov
or
jg
enter
mov
xor
mov
(bad)
jg
pop
xchg
lea
sti
add
sbb
pushf
daa
les
dec
xchg
(bad)
(bad)
(bad)
dec
fldenv
cmc
lods
cli
scas
not
jle
jmp
ja
ret
int
pop
xor
mov
shl
mov
sub
jg
mov
scas
mov
fadd
div
mov
nop
movs
sti
js
gs
aaa
aas
mov
aaa
loop
(bad)
(bad)
(bad)
(bad)
(bad)
mov
loopne
mov
sbb
sti
retf
(bad)
out
xchg
(bad)
fdivr
push
ret
fdivr
test
mov
ud0
mov
xchg
jo
outs
mov
inc
jg
rcr
aam
test
adc
(bad)
call
ja
sub
les
xchg
(bad)
(bad)
(bad)
out
adc
and
mov
test
push
mov
mov
enter
in
not
jbe
in
jmp
das
outs
popf
popf
jnp
mov
dec
fdiv
movs
in
ins
ins
cld
(bad)
dec
movsx
mov
call
mov
sti
sbb
(bad)
cmp
xor
arpl
loop
leave
lds
fwait
ds
inc
dec
test
xchg
aad
fcomip
inc
inc
jmp
pop
xor
sbb
xor
loope
int
or
arpl
(bad)
(bad)
call
push
test
adc
cmp
in
mov
cmp
loopne
dec
pop
(bad)
(bad)
(bad)
jmp
push
out
je
out
mov
out
popa
jmp
mov
mov
and
and
cmp
push
jecxz
test
cmps
call
jmp
sbb
call
mov
shl
ror
push
aaa
jno
in
imul
push
daa
fmul
cmp
loope
inc
inc
shr
cmc
retf
xor
mov
sub
cs
cmc
adc
aam
adc
jle
cmp
jmp
xor
int3
mov
push
(bad)
mov
pop
jecxz
add
ds
mov
mov
mov
std
(bad)
(bad)
jmp
rcr
mov
push
jl
lods
scas
add
ins
stc
data16
jecxz
in
or
(bad)
(bad)
call
enter
inc
mov
jg
mov
fcmovnu
lds
imul
(bad)
(bad)
(bad)
fsubp
fsub
mov
jnp
add
ja
nop
div
sti
lea
inc
add
(bad)
fild
mov
mov
fbld
dec
(bad)
inc
cmps
jmp
cwde
xlat
pushf
in
adc
(bad)
fisttp
pop
int3
ins
cdq
(bad)
cld
cld
dec
in
lods
jnp
das
mov
call
scas
cmp
cmp
call
jae
pusha
mov
pop
add
jne
sub
push
das
sar
jbe
repz
mov
loope
cdq
xlat
nop
pop
mov
cmp
jg
out
retf
in
ret
mov
jle
jg
sub
sub
adc
test
arpl
inc
test
jmp
sbb
sbb
ja
rep
dec
push
(bad)
pop
loopne
xchg
mov
jmp
or
add
xchg
imul
or
icebp
mov
add
jp
fwait
mov
inc
pop
call
cmc
(bad)
(bad)
inc
mov
fdiv
mov
lods
or
pusha
sahf
or
push
or
stos
popf
push
and
sar
(bad)
dec
dec
dec
loop
jno
aad
sbb
imul
xor
mov
sub
push
lahf
mov
retf
pop
cmp
(bad)
(bad)
(bad)
call
pushf
pushf
dec
nop
jl
(bad)
fadd
push
cmps
inc
sahf
inc
xchg
inc
pop
iret
push
(bad)
(bad)
(bad)
push
jno
clc
sbb
repz
cmp
jbe
or
je
dec
sbb
sbb
lods
push
ret
sub
retf
fisub
sub
sub
mov
out
xchg
dec
cld
ret
fdiv
inc
cmp
ds
xchg
jmp
push
stos
fild
sbb
leave
jp
mov
rcr
or
dec
lods
push
push
pop
sub
out
dec
add
mov
call
jns
xchg
pop
push
ret
ret
xor
(bad)
(bad)
cmp
dec
add
movs
js
mov
movs
and
lea
(bad)
push
or
and
in
add
ss
sub
shl
jp
push
adc
aas
aas
inc
int3
inc
cmp
pop
cmp
push
adc
(bad)
imul
jg
jge
push
pop
or
imul
pop
mov
repz
out
cmp
out
(bad)
(bad)
push
xor
pushf
cmp
add
dec
pop
imul
fcomip
call
cdq
aad
or
adc
cwde
jg
mov
xor
or
inc
loop
(bad)
(bad)
aam
arpl
loopne
out
cmp
mov
repnz
fcos
(bad)
(bad)
mov
lahf
mov
jns
jle
out
icebp
retf
test
jns
push
dec
jg
popa
std
xchg
sahf
(bad)
outs
xor
jge
pop
mov
adc
cmps
in
sub
xchg
repz
arpl
(bad)
gs
(bad)
(bad)
call
int
sub
xor
sub
mov
xor
cmp
loopne
push
fcmovb
das
jg
jg
push
fcomi
mov
mov
mov
(bad)
cli
jmp
fisttp
or
pop
add
dec
fs
dec
push
sub
out
ins
fimul
(bad)
call
popa
or
inc
aas
jb
pop
xor
(bad)
mov
in
and
ret
dec
pop
mov
xchg
sahf
cmps
add
pushf
push
inc
adc
call
add
push
sub
mov
ins
shl
mov
rcr
and
sub
xchg
out
mov
add
pop
inc
(bad)
or
dec
push
icebp
sbb
mov
or
xor
adc
mov
or
mov
inc
jo
cs
and
loopne
test
sub
xchg
push
dec
ja
(bad)
(bad)
(bad)
jmp
sbb
inc
leave
push
call
ins
and
push
sub
pop
cmp
lahf
inc
call
scas
add
jmp
xor
ja
inc
ins
inc
repz
(bad)
(bad)
call
or
ret
and
aam
shl
adc
(bad)
das
mov
dec
bound
(bad)
push
mov
adc
in
sbb
jmp
xchg
paddusw
(bad)
push
pusha
data16
inc
and
dec
pop
mov
(bad)
(bad)
(bad)
(bad)
mov
sbb
es
or
je
ret
push
scas
retf
jo
dec
inc
mov
(bad)
loopne
ds
mov
mov
out
enter
sbb
or
sub
add
fst
(bad)
jo
pusha
imul
lds
ds
(bad)
call
(bad)
neg
push
popf
mov
out
retf
retf
scas
pop
mov
inc
mov
mov
(bad)
(bad)
call
lds
add
mov
shr
mov
test
or
icebp
inc
pop
inc
outs
scas
test
aas
mov
(bad)
out
mov
ds
mov
cmp
mov
pop
mov
loopne
clc
(bad)
(bad)
(bad)
mov
(bad)
cld
stos
fdivr
out
pop
test
in
fimul
xor
ret
and
(bad)
(bad)
(bad)
jmp
shr
push
xor
mov
popa
out
movs
scas
mov
clc
(bad)
call
cmp
lods
outs
fisttp
and
inc
js
jle
mov
add
(bad)
jmp
in
pop
loope
in
pop
jbe
shl
fbstp
fnsave
add
sub
push
mov
dec
inc
lods
jmp
(bad)
popa
sar
push
cld
call
pop
xchg
(bad)
push
fcmovnu
mov
cdq
push
or
add
sub
stos
popa
dec
call
gs
push
pop
mov
inc
icebp
fistp
mov
dec
loop
jg
sahf
add
cdq
fnstenvw
imul
mov
call
(bad)
dec
push
xchg
dec
sti
fld
ja
neg
mov
ss
push
jbe
sbb
xchg
icebp
push
pop
cmp
and
pop
jp
outs
clc
sbb
xchg
pop
cdq
xchg
pop
jno
jecxz
ror
and
pop
loopne
nop
stos
inc
push
stc
dec
daa
clc
pop
cmc
push
ds
lock
lahf
sbb
inc
test
popa
outs
jg
mov
das
test
popf
mov
mov
jle
aad
mov
(bad)
push
fimul
div
xlat
xor
popf
and
sub
mov
add
or
mov
jp
out
test
popa
xchg
mov
inc
cmp
(bad)
mov
push
xor
pop
ret
es
adc
cld
(bad)
(bad)
jmp
xchg
test
mov
inc
lock
jmp
jmp
mov
shr
jg
or
pop
mov
aas
repz
sbb
pop
loopne
scas
sbb
rol
fst
(bad)
loope
adc
inc
pop
mov
aaa
fcom
(bad)
mov
shr
xor
dec
mov
dec
xor
sbb
jbe
mov
cld
addr16
add
hlt
or
(bad)
fbld
rcl
movs
sbb
aas
or
xchg
mov
xchg
or
bound
push
xor
cdq
out
sahf
in
cmp
cld
xchg
mov
(bad)
(bad)
in
out
dec
sub
cli
lock
test
pop
shr
adc
outs
mov
inc
js
sub
sbb
sti
or
push
in
or
inc
push
call
scas
mov
push
and
push
mov
and
mov
mov
call
in
push
pop
pushf
cld
jp
int3
lea
arpl
xor
jl
out
mov
cs
cmps
push
mov
sbb
push
jle
dec
pop
adc
ins
cli
mov
(bad)
(bad)
call
push
pusha
aaa
dec
shl
nop
xor
in
sahf
lahf
sbb
inc
add
mov
or
imul
jmp
jmp
ja
xchg
cdq
inc
cmp
sub
ins
(bad)
(bad)
(bad)
mov
jmp
addr16
fist
xor
ins
mov
repz
push
add
cmp
push
clc
or
inc
(bad)
jmp
fistp
push
in
sbb
bound
(bad)
out
cli
mov
and
and
mov
inc
sahf
add
jmp
ret
sub
addr16
call
push
add
(bad)
mov
int3
inc
mov
push
movs
fimul
mov
adc
sbb
(bad)
(bad)
(bad)
call
stos
addr16
or
mov
jnp
in
push
xchg
fist
ficomp
(bad)
(bad)
jmp
loope
les
retf
(bad)
sti
jle
test
out
(bad)
stc
movs
jp
xor
jp
in
push
jecxz
cmp
(bad)
(bad)
loop
add
cdq
push
jl
sub
aad
(bad)
(bad)
mov
div
push
mov
mov
stos
outs
movs
popa
mov
mov
(bad)
call
cmp
fwait
inc
bound
adc
add
sub
call
in
cmc
mov
add
das
lds
inc
adc
aad
jle
mov
rcr
jmp
call
(bad)
and
movs
xchg
sub
xchg
std
dec
fwait
jl
push
mov
stos
(bad)
(bad)
jmp
ins
lods
sahf
xchg
cmps
mov
scas
jae
ins
sbb
sub
(bad)
(bad)
(bad)
(bad)
cmp
popa
stos
mov
xchg
lods
sbb
pop
cmps
dec
cmps
inc
xchg
movs
jmp
ret
jp
call
or
cmp
mov
sub
add
(bad)
out
stc
imul
adc
inc
xor
inc
xchg
and
cmc
sar
out
sbb
adc
retf
sbb
shr
cmp
pop
cmp
(bad)
stc
xchg
jo
jbe
clc
ins
loop
je
mov
out
(bad)
xchg
(bad)
(bad)
(bad)
jmp
sub
xchg
fstp
retf
fs
and
ss
jge
ss
aam
(bad)
(bad)
fnsetpm(287
test
jb
adc
imul
push
adc
push
ficom
mov
mov
call
sub
adc
adc
push
jg
pop
push
int
push
clc
(bad)
dec
xchg
cmp
nop
aad
pop
into
loopne
std
cs
xchg
(bad)
(bad)
inc
retf
adc
sbb
lods
scas
ror
and
sub
sub
call
jmp
popa
add
push
ds
hlt
dec
cwde
sti
jne
fadd
pop
cmp
and
pop
cmp
push
in
sti
(bad)
jmp
dec
sar
pusha
rol
rcr
sbb
dec
jo
xchg
loope
fimul
cld
jle
(bad)
(bad)
jg
in
cmp
add
mov
lds
in
and
pop
mov
cwde
push
(bad)
mov
test
dec
(bad)
(bad)
mov
test
dec
mov
fldcw
mov
sti
cmp
add
jo
icebp
(bad)
(bad)
jmp
loope
xchg
pop
ins
cdq
sbb
repnz
pop
enter
mov
mov
push
xor
sub
mov
out
push
sahf
add
push
icebp
(bad)
(bad)
cmp
mov
hlt
push
jg
cmp
icebp
push
(bad)
(bad)
(bad)
out
fsub
adc
idiv
ds
xor
mov
push
clc
(bad)
push
jp
outs
in
leave
mov
pop
jno
scas
neg
cmp
and
(bad)
(bad)
dec
pop
xchg
ss
in
dec
or
out
cdq
test
sbb
jmp
ds
sub
int
jmp
mov
jns
(bad)
icebp
sub
xchg
mov
icebp
pop
jb
es
dec
push
sti
ja
movs
fnstsw
mov
push
dec
clc
adc
fwait
outs
mov
xchg
jmp
cmps
cwde
iret
or
dec
enter
retf
cmc
outs
aaa
pop
mov
(bad)
fs
push
ret
push
clc
inc
in
int3
mov
sub
xchg
lods
xor
push
mov
jo
ds
cli
(bad)
jmp
jge
dec
fcomip
push
mov
and
adc
ret
mov
dec
jg
inc
cld
(bad)
sub
jg
push
inc
push
jbe
xor
push
shl
fwait
mov
ins
enter
xchg
outs
scas
xor
pop
lahf
cs
(bad)
jmp
push
stos
mov
pop
or
inc
out
push
mov
je
(bad)
push
cmp
cmp
or
int
fisttp
and
mov
push
stc
xchg
cmp
cmc
(bad)
(bad)
inc
mov
mov
stos
jmp
mov
cmc
ins
push
inc
jbe
mov
ss
rcr
xchg
in
sbb
cwde
(bad)
mov
popf
xor
inc
inc
mov
jae
add
or
jb
add
mov
fimul
fld
push
and
int3
rcl
xor
inc
test
inc
bound
pop
or
push
fild
pop
and
mov
xor
mov
pop
xchg
xchg
mov
jno
test
ss
and
jl
xchg
sbb
jnp
(bad)
(bad)
cmp
xchg
jae
movs
and
mov
shl
mov
int3
jae
(bad)
push
cmps
dec
cmc
push
loope
or
xchg
stos
adc
cmps
icebp
popf
sar
jmp
mov
(bad)
std
dec
sbb
dec
or
fs
call
dec
retf
mov
cmp
inc
add
(bad)
call
sti
mov
and
mov
outs
int3
mov
add
(bad)
lods
in
xlat
(bad)
repnz
movs
es
jmp
cmp
jns
loopne
call
in
aam
mul
and
hlt
std
mov
jge
jle
lock
jo
(bad)
call
mov
ret
sub
retf
fstp
js
shl
outs
add
(bad)
(bad)
jmp
dec
adc
and
add
loop
je
gs
mov
lds
repnz
std
clc
lahf
cmp
js
push
lock
mov
data16
dec
loopne
dec
inc
ins
dec
cs
sbb
pusha
(bad)
jmp
rcl
icebp
inc
inc
(bad)
sub
cmp
sub
add
cmp
cmp
pop
xchg
cmp
das
hlt
push
or
or
ds
hlt
(bad)
out
cli
call
hlt
sub
ins
cmp
bound
in
pop
push
out
bound
add
adc
pop
mov
leave
shl
bound
sub
loopne
(bad)
(bad)
mov
and
das
dec
push
mov
xor
push
push
pop
push
xor
(bad)
jae
push
jae
cdq
and
pop
sub
(bad)
(bad)
(bad)
jmp
stos
inc
sub
adc
or
sub
popf
sbb
mov
push
lock
mov
mov
cli
xor
push
xor
fs
or
fcomip
mul
mov
xchg
dec
out
mov
jo
(bad)
(bad)
(bad)
(bad)
(bad)
pop
ror
mov
cwde
ins
jbe
into
les
icebp
pop
test
jp
cdq
xor
(bad)
shr
cmp
popf
adc
cmps
cld
call
mov
sub
or
sar
js
sbb
xchg
cmc
neg
dec
out
add
ja
movs
jge
mov
popa
movs
xor
retf
push
in
mov
adc
fdivp
(bad)
jmp
nop
sub
test
fld
mov
icebp
jecxz
add
lods
test
(bad)
call
idiv
lea
out
imul
(bad)
fs
pop
aas
cmp
in
pop
xchg
shl
jg
xor
cdq
cmc
pop
or
and
jp
or
sahf
call
(bad)
call
xor
cmp
outs
sub
sar
sti
mov
pop
pushf
retf
pop
mov
icebp
fs
pop
adc
out
enter
(bad)
(bad)
(bad)
jmp
int
jne
jmp
and
rcr
dec
(bad)
mov
cmc
pop
xlat
pop
adc
mov
shl
in
bound
inc
es
adc
nop
(bad)
(bad)
(bad)
dec
in
sti
mov
lods
vxorpd
xchg
mov
and
sbb
adc
(bad)
(bad)
out
cli
test
pop
or
adc
push
sahf
or
out
mov
mov
jg
lods
not
pushf
pop
cmp
xlat
push
adc
mov
fwait
add
push
shl
out
outs
jecxz
mov
or
mov
scas
iret
loopne
add
adc
or
push
fdivr
(bad)
(bad)
mov
scas
imul
fimul
jl
test
retf
and
sub
fs
adc
(bad)
(bad)
jg
hlt
sbb
pop
cli
repnz
lods
cdq
fstp
in
lea
fldenv
out
sub
and
repz
ins
loope
cmp
mov
in
mov
jbe
jmp
std
sub
xchg
loope
shr
pop
mov
das
push
movs
(bad)
jns
mov
call
loopne
and
sub
and
xadd
(bad)
xor
(bad)
(bad)
aas
pop
jle
or
mov
ds
or
popf
xlat
pop
mov
add
cli
(bad)
(bad)
push
jg
mov
adc
push
mov
and
retf
ins
adc
push
sub
(bad)
jmp
inc
dec
jo
cmp
mov
mov
das
push
hlt
(bad)
fsubr
cmc
cli
inc
and
mov
dec
(bad)
(bad)
(bad)
jmp
mov
jmp
push
sqrtps
inc
sub
cmp
inc
(bad)
call
cmp
js
cdq
add
jbe
xchg
adc
inc
or
(bad)
(bad)
(bad)
inc
fisub
leave
sbb
arpl
pop
pop
aaa
call
mov
adc
test
add
outs
cmp
(bad)
xchg
inc
inc
js
out
add
call
out
mov
test
mov
cli
inc
loope
outs
xlat
push
sub
mov
mov
cli
scas
sub
bound
stos
sar
test
addr16
dec
arpl
(bad)
fild
(bad)
fadd
dec
cld
mov
pop
sub
(bad)
mov
jle
test
add
push
fdivr
add
call
test
mov
or
popa
push
ret
inc
adc
jno
(bad)
xlat
push
imul
iret
ds
out
int3
push
(bad)
(bad)
(bad)
jmp
test
(bad)
mov
pop
sub
sti
lea
ret
hlt
cld
xchg
sub
mov
jmp
test
pop
movs
dec
neg
inc
in
hlt
jo
mov
inc
push
cmp
and
(bad)
(bad)
(bad)
cmp
jns
aad
cld
call
push
and
inc
retf
and
inc
(bad)
jmp
ror
mov
pop
mov
addr16
adc
ret
in
jmp
mov
std
(bad)
jmp
add
stos
ror
cmc
in
test
add
sub
xchg
jmp
imul
or
inc
shl
les
addr16
mov
cmp
or
stos
jecxz
push
outs
test
pop
push
mov
clc
push
inc
aas
shl
aas
jne
mov
and
jmp
fnstenv
dec
cmp
xor
cs
nop
lods
mov
ror
mov
jne
lods
outs
dec
or
lock
(bad)
push
sbb
sub
movlps
(bad)
(bad)
dec
sar
inc
into
scas
and
xchg
push
loop
ror
fisttp
iret
sbb
and
(bad)
jg
sahf
mov
push
iret
inc
(bad)
xor
lahf
fs
in
pop
(bad)
push
fcom
cmp
cmp
fst
repz
push
scas
sti
xchg
xchg
mov
mov
(bad)
dec
mov
nop
es
data16
loope
ss
scas
pushf
ret
std
add
hlt
in
and
sub
call
mov
aas
xor
adc
(bad)
push
mov
inc
ret
ficom
cmp
add
(bad)
(bad)
call
in
retf
jae
jb
xchg
dec
xchg
lock
or
jmp
sub
ins
pop
xor
push
aad
(bad)
bound
dec
and
out
dec
push
iret
sbb
push
sbb
push
lahf
ja
jne
fnstcw
mov
fdivrp
sbb
cwde
jle
pop
std
and
inc
bound
push
or
adc
es
cdq
and
sub
enter
jl
and
arpl
(bad)
cmp
inc
xchg
(bad)
(bad)
jmp
fisttp
outs
mov
sbb
xchg
mov
or
(bad)
call
jmp
jg
mov
std
dec
mov
(bad)
fild
push
cld
adc
popf
mov
pop
outs
mov
cmp
push
(bad)
(bad)
(bad)
push
js
aad
mov
add
test
and
out
mov
add
inc
add
in
jp
out
and
fucomp
pop
out
fwait
jnp
test
pop
fist
pop
dec
(bad)
(bad)
mov
scas
pop
rcl
or
(bad)
(bad)
inc
inc
shl
jbe
xchg
xchg
std
push
adc
fld
cmps
call
iret
in
mov
push
inc
sbb
shl
(bad)
pusha
clc
cdq
pop
mov
sbb
dec
push
jne
out
(bad)
jmp
dec
fcom
sub
inc
xor
and
add
pop
sar
push
jb
mov
mov
push
dec
dec
cmp
lods
dec
aad
push
sbb
sbb
or
fldcw
mov
int3
dec
push
icebp
call
mov
sub
retf
jmp
push
test
(bad)
(bad)
fild
xchg
gs
inc
and
dec
cmp
imul
das
setl
outs
mov
dec
mov
nop
sbb
inc
sub
(bad)
call
popa
or
xchg
jmp
jg
cmp
jge
push
jp
sahf
je
pop
ror
jne
dec
retf
(bad)
(bad)
(bad)
dec
or
adc
and
xchg
or
mov
in
clc
(bad)
inc
cmp
jp
inc
dec
inc
jb
sbb
(bad)
cli
iret
ins
test
outs
jbe
and
fwait
adc
std
jmp
out
loopne
shl
xchg
ins
add
jle
inc
(bad)
call
adc
test
lahf
cmp
cmp
sub
jmp
(bad)
dec
std
xchg
lods
jbe
jmp
(bad)
std
jmp
pop
or
lock
sub
sbb
inc
mov
mov
into
sub
or
cwde
sbb
(bad)
jmp
stos
sub
xchg
enter
shr
(bad)
mov
jmp
cmp
adc
sete
setge
mov
adc
(bad)
(bad)
inc
stos
or
cmc
ds
(bad)
ret
in
popf
inc
dec
sbb
mov
jg
icebp
inc
mov
iret
mov
jmp
push
add
mov
mov
cmp
bound
repz
mov
inc
shl
out
cmps
or
sub
sbb
movs
hlt
out
cdq
and
loopne
pop
mov
rcl
pop
dec
test
bound
mov
(bad)
call
jl
lods
xchg
les
outs
sbb
ret
mov
cmp
push
mov
xor
and
dec
xchg
lods
xor
ret
cs
push
adc
(bad)
(bad)
(bad)
(bad)
jmp
jge
sbb
js
ds
sub
repz
sub
mov
scas
inc
xchg
jmp
frstor
xor
(bad)
push
pusha
aad
inc
mov
scas
mov
imul
ja
aaa
rol
call
(bad)
mov
sub
(bad)
(bad)
inc
stos
and
sub
cmp
cmp
test
ret
cdq
leave
fild
repnz
add
mov
xchg
call
std
jmp
mov
je
pop
add
cmps
out
out
sar
push
sub
ud0
sub
mov
sahf
mov
jmp
or
xor
mov
js
xor
inc
cld
das
clc
or
add
sub
(bad)
sub
xchg
stos
or
mov
inc
(bad)
jl
adc
jmp
aam
call
mov
mov
inc
outs
xchg
xchg
mov
mov
(bad)
xchg
(bad)
(bad)
(bad)
jmp
pop
into
aad
(bad)
sub
je
hlt
int3
pop
clc
inc
and
aam
sub
push
(bad)
pop
cdq
cmp
mov
std
(bad)
inc
(bad)
ja
add
xchg
push
(bad)
loopne
pop
outs
fwait
jl
in
popf
cmc
cmp
(bad)
(bad)
(bad)
mov
adc
cmps
out
jbe
xchg
(bad)
mov
scas
sbb
adc
adc
mov
pop
inc
pop
dec
adc
sub
jp
pop
es
cwde
pop
jo
(bad)
(bad)
(bad)
jmp
enter
jae
shr
mov
cmp
mov
scas
jns
inc
repz
popa
cld
retf
push
fdiv
pop
or
mov
xchg
add
cmp
(bad)
fbld
mov
cdq
clc
retf
push
sbb
jecxz
cld
std
mov
xor
cmp
mov
inc
popf
add
jecxz
(bad)
call
enter
cmp
mov
inc
stos
data16
arpl
addr16
mov
jbe
je
lods
push
fs
pop
adc
sub
cli
(bad)
(bad)
call
mov
lds
test
mov
or
jns
inc
add
lea
retf
xchg
daa
je
loope
(bad)
(bad)
jmp
aas
dec
jbe
lea
call
fidiv
ror
pop
test
mov
(bad)
jg
inc
xor
hlt
inc
in
test
jns
dec
dec
(bad)
int
icebp
jmp
mov
mov
and
outs
sbb
inc
sbb
scas
xor
call
(bad)
cmp
jb
lods
push
es
sub
dec
jb
jl
les
lods
sub
pop
xchg
(bad)
ins
xchg
xlat
in
sub
xchg
push
into
aaa
adc
loope
outs
lock
jmp
inc
xchg
xchg
or
mov
retf
aam
sbb
call
pusha
and
(bad)
fild
int3
sbb
jo
call
jno
lds
rcr
dec
mov
mov
hlt
popa
mov
call
jg
dec
mov
fs
sub
hlt
dec
add
cld
(bad)
jmp
xor
leave
mov
pop
rcr
push
cmp
pusha
(bad)
and
das
(bad)
(bad)
(bad)
inc
adc
hlt
pop
jae
inc
and
loope
xchg
test
sub
inc
push
js
stc
mov
retf
(bad)
(bad)
(bad)
call
lods
and
es
add
cdq
loope
cmp
mov
movs
imul
lds
lods
aaa
stos
int3
or
dec
mov
(bad)
jmp
imul
nop
and
out
imul
cmp
mov
mov
cmps
lock
(bad)
(bad)
in
out
repz
idiv
ins
xor
ret
push
pop
idiv
and
sbb
dec
mov
(bad)
xchg
pop
sub
sub
mov
cmps
daa
inc
call
fs
xchg
xchg
arpl
dec
mov
popf
(bad)
push
jg
sar
(bad)
jg
outs
js
repz
(bad)
rcl
(bad)
xor
sahf
(bad)
(bad)
(bad)
(bad)
jle
aaa
pop
add
ret
lds
(bad)
scas
adc
mov
je
sub
mul
test
mov
cld
or
jnp
and
mov
adc
ins
add
test
repnz
push
sahf
mov
out
xor
pop
xor
imul
hlt
sub
adc
sub
mov
xor
pop
sub
jmp
jae
cmp
mov
pop
pop
or
(bad)
jmp
mov
mov
jae
jnp
mov
lock
push
lods
inc
jp
leave
jb
push
arpl
mov
(bad)
test
outs
stos
mov
fmul
in
and
inc
call
xchg
xor
(bad)
call
fadd
mov
in
push
sbb
scas
mov
pushf
sbb
popf
(bad)
(bad)
mov
pop
outs
jns
ror
mov
mov
mov
(bad)
(bad)
(bad)
jmp
jle
(bad)
jecxz
enter
ficom
mov
pop
ds
ins
xchg
in
ret
mov
pushf
(bad)
(bad)
(bad)
push
(bad)
push
jne
lods
mov
and
sub
shl
stc
mov
dec
cmp
lods
mov
aad
sub
mov
dec
inc
xor
push
jmp
mov
add
push
scas
mov
call
xor
or
rcl
ret
(bad)
call
cdq
adc
movs
pop
jo
(bad)
(bad)
mov
popa
(bad)
ins
xchg
sub
or
ds
cmp
sbb
xchg
inc
cdq
jnp
mov
dec
ret
(bad)
mov
dec
push
test
(bad)
(bad)
fild
cmp
in
js
push
push
push
add
fld
ja
mov
(bad)
push
aaa
pop
mov
sbb
mov
in
lods
cmp
popf
add
mov
xchg
dec
cmp
jno
repnz
js
cwde
imul
cwde
jo
sbb
jno
sub
jecxz
and
or
rcl
jnp
mov
call
dec
(bad)
pop
push
ret
ins
in
ins
outs
(bad)
and
cli
(bad)
xor
hlt
bound
mov
fcmovb
test
in
mov
out
mov
repz
(bad)
(bad)
inc
pop
shl
cld
fidivr
int
cld
ja
retf
ds
rol
pop
mov
(bad)
(bad)
(bad)
(bad)
jmp
neg
push
cmp
adc
test
sub
inc
mov
adc
lods
pop
sub
neg
test
jle
mov
jle
pop
cdq
jle
ficom
xchg
pop
jl
(bad)
lock
inc
jecxz
scas
mov
inc
xlat
loop
mov
cmps
xchg
pop
cmp
ins
xor
mov
ss
xchg
mov
push
cli
out
add
stos
in
fsubr
jns
dec
xchg
dec
(bad)
or
or
popa
push
repnz
push
push
(bad)
fmul
and
mov
push
pslld
ins
and
movs
push
dec
xchg
sbb
jne
(bad)
(bad)
(bad)
dec
je
imul
jp
or
sbb
mov
imul
jb
sbb
xchg
mov
sbb
sbb
push
inc
jbe
ins
(bad)
fcomip
jmp
push
or
test
add
in
adc
dec
jo
lods
test
adc
ror
jmp
jmp
mov
int3
xchg
add
push
xchg
or
cdq
ins
jp
inc
mov
movs
lods
test
push
stos
cdq
rcl
or
daa
cmp
sti
xchg
jl
lock
add
sub
loope
aas
popf
aaa
inc
sub
retf
ds
and
mov
xchg
xchg
push
and
rol
lods
mov
pop
pop
into
mov
iret
imul
in
jmp
jbe
call
in
inc
push
mov
dec
mov
sub
(bad)
xchg
icebp
shr
loopne
fsubrp
mov
test
dec
xchg
pusha
adc
jmp
and
pop
cmp
iret
mov
mov
test
test
sbb
push
and
pop
arpl
pop
ret
(bad)
jg
cmp
mov
sub
xor
mov
fsub
dec
fdiv
cs
call
dec
push
call
mov
inc
or
jg
push
sbb
mov
movs
mov
call
jmp
cs
pop
mov
cmp
mov
mov
sti
pop
mov
(bad)
mov
popa
and
xlat
pop
cmp
int3
push
mov
(bad)
(bad)
push
inc
push
nop
cmp
lds
add
adc
(bad)
jmp
pop
mov
int
cmps
mov
(bad)
(bad)
jg
push
and
cdq
mov
and
push
cli
loopne
mov
cmp
mov
int3
scas
inc
psrlq
push
test
(bad)
(bad)
call
and
mov
rcl
push
xor
das
lods
mov
lods
dec
stos
mov
int
call
pop
pusha
xchg
inc
jno
clc
sub
into
retf
sub
sub
sub
adc
jg
jbe
xor
mov
ret
pop
xchg
xchg
(bad)
clc
(bad)
(bad)
call
(bad)
hlt
loopne
and
sbb
mov
dec
and
sub
xchg
push
retf
data16
ret
sub
cmps
fsub
mov
jo
(bad)
call
pop
les
out
(bad)
fiadd
stos
dec
outs
cli
dec
push
test
jbe
sahf
stos
inc
(bad)
call
mov
ror
mov
inc
lahf
lea
outs
ss
or
pop
push
pop
loop
and
(bad)
(bad)
call
xchg
pop
popa
in
imul
push
sub
fdiv
and
sbb
pop
pop
xchg
(bad)
fcomip
push
repnz
xor
push
frstor
xchg
mov
mov
lods
imul
xchg
and
sub
sub
mov
sbb
adc
pop
dec
clc
call
fs
and
out
out
(bad)
(bad)
inc
push
xchg
jne
je
in
fsubr
or
inc
bound
out
daa
jp
aam
inc
cmp
jo
mov
push
(bad)
jnp
(bad)
icebp
xor
ja
dec
hlt
lods
fnsave
stos
sub
sub
add
(bad)
(bad)
push
in
adc
jge
aam
movs
or
jmp
cmps
sub
jno
mov
in
or
pop
jmp
nop
into
mov
gs
test
jb
pop
data16
adc
and
arpl
(bad)
and
std
jg
addr16
lock
aaa
mov
loope
(bad)
add
mov
jle
outs
jp
out
mov
scas
aas
cli
xlat
fdivr
cmps
inc
dec
(bad)
(bad)
out
cli
cs
inc
xor
adc
popa
loop
pop
pop
(bad)
iret
sbb
adc
call
add
cmc
xchg
adc
aas
jl
call
addr16
push
push
(bad)
scas
stc
stos
inc
sub
fidiv
jmp
(bad)
call
mov
std
pop
dec
adc
jb
adc
stos
ds
mov
xchg
sbb
cli
push
divps
sahf
nop
mov
pop
fistp
pop
sub
xchg
xor
adc
xor
pusha
enter
jne
and
dec
addr16
movs
jae
push
call
cld
dec
adc
pop
call
mov
push
push
(bad)
(bad)
(bad)
push
jae
test
xor
stos
sub
call
shl
mov
inc
fwait
push
arpl
cdq
sbb
jmp
mov
or
jbe
loopne
mov
shl
scas
mov
mov
xchg
jne
outs
(bad)
(bad)
dec
jp
mov
push
cmc
cwde
addr16
ins
sub
cmovs
jl
cs
movs
test
pop
shl
jbe
lahf
(bad)
jo
(bad)
(bad)
(bad)
dec
(bad)
(bad)
int3
les
and
pop
sbb
jns
rol
ins
pusha
popa
and
mov
clc
inc
cmp
lods
add
pop
je
and
add
push
mov
xor
aad
push
jnp
fcmovb
mov
fiadd
cmp
jo
ret
gs
les
(bad)
aas
rol
(bad)
(bad)
(bad)
push
adc
aas
mul
adc
rcl
mov
sahf
mov
xor
and
sbb
jmp
test
cwde
jge
int
bound
inc
cmp
push
add
jmp
dec
jecxz
fistp
(bad)
retf
js
inc
xchg
aam
jne
and
(bad)
enter
inc
jmp
jecxz
pop
adc
inc
ja
aad
jmp
dec
jle
movs
mov
pop
add
into
pop
shl
pop
xor
movs
dec
ss
leave
cmp
pop
jns
jge
and
retf
test
jmp
mov
cmp
pop
and
dec
inc
fild
adc
clc
dec
and
pushf
sbb
sar
pop
stc
sti
iret
loope
scas
mov
and
cld
stc
ins
jp
sub
(bad)
(bad)
(bad)
jnp
sbb
arpl
fisubr
xor
push
and
ds
shl
daa
mov
jmp
sub
and
push
cdq
(bad)
(bad)
(bad)
call
fwait
dec
cwde
fist
xchg
inc
daa
mov
sub
imul
mov
clc
(bad)
inc
or
xchg
push
pushf
pop
push
inc
mov
ss
and
dec
pop
mov
adc
cmp
cmp
(bad)
(bad)
call
addr16
dec
push
pop
and
inc
mov
lods
push
scas
enter
push
mov
add
(bad)
jmp
xchg
das
cmp
ret
(bad)
fistp
call
adc
or
int3
fbld
(bad)
xchg
inc
outs
aam
mov
imul
gs
scas
xlat
imul
clc
loop
not
fisub
cmp
push
std
jmp
leave
xchg
popfw
cmp
mov
cdq
in
jno
xchg
test
mov
loopne
cwde
clc
clc
jno
jmp
cmps
or
mul
sbb
rol
fwait
jp
push
nop
sub
jmp
sub
sbb
(bad)
(bad)
call
cmps
int
test
or
icebp
outs
or
mov
cmovb
outs
ins
mov
jg
inc
or
scas
xchg
push
fmul
ret
(bad)
dec
xchg
nop
xchg
push
icebp
dec
mov
popf
popf
out
push
dec
retf
movs
(bad)
(bad)
(bad)
call
or
(bad)
push
inc
fldcw
(bad)
out
xor
in
out
out
fidiv
fdiv
sbb
(bad)
(bad)
cld
mov
cmc
add
inc
and
pop
stos
xchg
call
mov
push
add
mov
dec
pop
addr16
ja
jns
(bad)
retf
(bad)
(bad)
(bad)
out
adc
sub
mov
push
lea
les
stos
push
out
out
add
ins
test
pop
push
std
inc
loope
das
jl
dec
cmc
cmps
lock
fdiv
push
adc
test
push
cmc
push
fistp
das
jnp
retf
jo
hlt
pop
sub
or
jg
add
inc
clc
out
push
lds
and
push
mov
daa
jmp
cmc
cmp
es
jge
hlt
bound
cmc
mov
push
push
and
mov
push
scas
dec
adc
ja
inc
adc
das
ss
ja
fadd
in
and
pop
or
jmp
sub
call
stc
jne
scas
or
push
repnz
lock
or
loope
aaa
push
clc
aas
and
hlt
outs
sbb
or
nop
(bad)
fild
dec
adc
fs
fs
je
ds
(bad)
(bad)
dec
jnp
out
aaa
movs
mov
push
mov
xor
cli
cli
push
sub
and
lods
xchg
pop
and
jmp
daa
sbb
rol
sub
cld
xor
icebp
sub
or
pop
lahf
sti
inc
push
in
inc
pop
mov
(bad)
(bad)
(bad)
mov
call
fdiv
dec
es
or
push
cli
aad
xor
je
push
or
push
xchg
clc
adc
retf
push
jbe
das
sar
(bad)
(bad)
(bad)
jmp
shl
test
test
inc
pop
mov
pop
adc
out
leave
ds
rcl
pop
pop
push
push
gs
(bad)
jmp
pop
call
fst
mov
jno
(bad)
in
xlat
and
(bad)
call
add
adc
ds
cmp
scas
jae
lea
enter
(bad)
jmp
ret
cmc
xlat
aas
dec
push
dec
add
xchg
or
aaa
dec
dec
sub
shr
mov
pop
jmp
inc
movs
cmp
out
ss
sub
cmp
sub
(bad)
(bad)
(bad)
jmp
mov
out
xor
cmp
dec
rcl
push
icebp
cmp
movs
sti
(bad)
(bad)
(bad)
call
jnp
bound
mov
mov
sti
sbb
clc
push
stos
sti
nop
mov
dec
mov
(bad)
push
sub
jmp
mov
ins
lahf
into
(bad)
(bad)
call
dec
mov
ins
test
and
xor
scas
aam
inc
push
(bad)
(bad)
inc
push
dec
sub
pop
add
jecxz
mov
mov
(bad)
js
jmp
cli
jmp
dec
cs
pusha
pop
pop
push
sahf
std
idiv
(bad)
cld
push
dec
sub
cmp
pop
retf
scas
push
pop
mov
or
loopne
xchg
mov
(bad)
jg
inc
out
shl
mov
xlat
pop
push
mov
push
(bad)
jg
(bad)
cmp
add
mov
cmps
fsub
sti
mov
or
fiadd
jae
xchg
mov
ret
jl
sbb
iret
(bad)
(bad)
mov
push
add
cli
mov
jmp
xchg
adc
jecxz
sub
(bad)
call
les
push
add
test
push
shl
xchg
out
mov
jmp
adc
repnz
out
sub
popa
sub
push
cmp
fistp
(bad)
(bad)
(bad)
jmp
(bad)
fstp
gs
int3
bswap
xchg
mov
retf
sbb
fadd
retf
ja
(bad)
(bad)
inc
scas
fild
dec
scas
loopne
mov
adc
or
or
dec
mov
sbb
jbe
cmc
(bad)
(bad)
(bad)
cmp
push
add
dec
(bad)
push
mov
inc
cmp
ret
adc
inc
hlt
inc
mov
retf
lea
(bad)
(bad)
fild
in
(bad)
pop
xor
lds
jg
cmp
inc
sub
(bad)
(bad)
push
or
addr16
mov
add
fiadd
adc
icebp
pop
and
add
(bad)
(bad)
out
jp
std
in
xchg
sub
je
out
fnstcw
cmp
in
(bad)
adc
add
(bad)
dec
pop
mov
test
popf
ret
ja
xor
mov
fild
call
xor
(bad)
call
icebp
pop
pop
popa
cmp
mov
cs
(bad)
jecxz
sbb
mov
mov
hlt
es
inc
pop
sbb
cs
or
pop
(bad)
xchg
and
jmp
clc
(bad)
je
call
and
mov
jg
fidivr
cmc
mov
add
pop
xchg
popf
les
inc
push
xlat
inc
push
dec
mov
push
sbb
jmp
mov
lea
pop
mul
jmp
mov
cdq
and
sub
jmp
(bad)
(bad)
mov
popf
push
cld
add
repz
psrad
mov
push
jecxz
push
push
ror
daa
lock
aas
std
jnp
call
push
or
int3
or
mov
and
jno
dec
cld
jmp
test
and
aad
mov
jmp
pop
mov
icebp
lods
ficomp
outs
mov
je
cld
push
imul
(bad)
jmp
(bad)
pop
inc
sbb
fucom
adc
les
push
sbb
add
in
inc
adc
sbb
ins
pop
push
iret
jmp
mov
ret
and
dec
push
dec
lds
pop
or
ffreep
call
jg
sbb
lds
mov
retf
shl
nop
pop
mov
js
mov
stos
and
test
das
sar
loope
xor
stos
out
dec
in
mov
dec
mov
add
enter
call
xor
add
imul
cmps
push
add
addr16
hlt
(bad)
(bad)
jmp
sahf
xor
adc
and
cmp
or
int
dec
cmps
xchg
sbb
(bad)
fdiv
or
cwde
mov
aaa
adc
(bad)
jmp
cli
or
pop
jl
dec
mov
adc
mov
data16
sti
jbe
call
push
js
pop
pop
mov
xchg
ror
bound
lock
scas
mov
ins
(bad)
cs
sub
icebp
stos
sbb
out
pop
add
dec
jae
jecxz
xor
bound
cmp
xor
out
jne
push
(bad)
push
push
fbld
outs
popa
and
test
jmp
(bad)
(bad)
dec
mov
cmp
pusha
in
add
iret
lods
data16
pop
ror
cmp
movs
mov
mov
or
clc
push
push
push
add
jne
daa
aaa
adc
inc
mov
jno
adc
movs
fmulp
fcomip
fcomip
pushf
mov
repz
fisubr
push
nop
int3
and
push
sbb
pop
(bad)
out
xor
stos
aad
imul
push
jg
cmps
(bad)
std
sahf
add
aaa
push
dec
addr16
push
adc
dec
ror
(bad)
(bad)
(bad)
dec
cs
outs
out
xor
jge
stc
pop
mov
cmc
add
fdiv
inc
call
or
es
inc
mov
cmp
fyl2x
ss
(bad)
(bad)
fistp
enter
ins
push
xor
xor
lods
scas
sub
loop
(bad)
mov
imul
(bad)
(bad)
(bad)
inc
push
dec
pop
test
es
loopne
mov
pop
xor
repz
aas
sub
aam
mov
(bad)
dec
aad
aas
xor
add
mov
ins
in
test
rcr
frstor
sub
xchg
pop
sti
in
jmp
ret
dec
je
dec
(bad)
(bad)
call
in
lods
add
les
cmps
cmp
jbe
cmp
ret
push
fstp
(bad)
(bad)
call
xchg
xchg
das
out
ret
stc
jl
mov
or
(bad)
fsub
(bad)
(bad)
(bad)
inc
jo
mov
sbb
and
stc
fiadd
inc
movsx
mov
pop
cmp
out
inc
das
loopne
int3
xchg
xor
test
movs
(bad)
(bad)
cmp
shr
mul
lds
cs
mov
cld
cdq
icebp
push
cmp
push
inc
mov
dec
call
add
push
jbe
xchg
in
lahf
fs
jmp
cli
movs
fs
and
inc
pushf
call
dec
sbb
int3
push
mov
popa
mov
add
sub
(bad)
fild
jle
dec
jb
mov
inc
mov
(bad)
(bad)
dec
(bad)
fs
pop
pop
jne
cmp
mov
es
cli
mov
lods
or
pop
std
jne
xchg
bound
mov
mov
mov
(bad)
(bad)
mov
stos
or
les
(bad)
cmp
jecxz
sti
outs
lahf
and
rcl
icebp
(bad)
push
imul
iret
retf
(bad)
jmp
aas
aaa
mov
out
fdivr
adc
cld
(bad)
push
jl
ins
test
push
ds
fs
pop
dec
int
dec
adc
push
add
cmps
inc
lock
mov
ja
fs
inc
fbld
jns
or
mov
xor
call
call
cmc
dec
loopne
pop
idiv
out
and
call
inc
js
mov
loope
pop
cmp
push
dec
jmp
mov
dec
mov
loop
dec
fnstenv
ja
lahf
jmp
jecxz
add
sbb
jl
fild
mov
cmp
push
dec
popa
or
cmp
sub
xlat
rcl
(bad)
mov
hlt
pop
or
js
push
int
push
add
adc
outs
fs
pop
dec
retf
push
jns
dec
push
(bad)
jg
jmp
pop
int
add
(bad)
fisttp
add
jno
cwde
sub
dec
mov
(bad)
(bad)
mov
fstp
inc
mov
dec
(bad)
repz
outs
add
jge
ret
out
push
mov
pop
sub
sbb
gs
push
js
ds
rcl
and
cmc
(bad)
(bad)
jmp
adc
ror
jp
inc
aad
lea
das
mov
nop
push
mov
aad
fdivr
inc
and
and
mov
fisubr
iret
stos
dec
fsub
aam
xor
adc
xor
cmps
dec
std
(bad)
(bad)
jmp
mov
ja
mov
jae
pop
sub
gs
and
fdivr
mov
(bad)
dec
(bad)
enter
cmp
mov
mov
outs
push
push
jb
daa
dec
mov
xor
(bad)
call
fdiv
cs
or
add
jle
fcmovnb
cmp
(bad)
pusha
popa
pop
adc
(bad)
test
cli
inc
jmp
shl
xor
cmp
lds
add
pop
mov
mov
movs
pushf
arpl
popa
push
ins
stos
dec
pop
adc
push
mov
jmp
call
inc
jle
int
fdivr
lss
mov
(bad)
mov
pusha
jno
fucomp
mov
push
cli
mov
cdq
push
lahf
inc
push
repnz
inc
or
adc
jecxz
lds
mov
leave
and
retf
lds
sub
inc
scas
sbb
out
xor
fdiv
dec
iret
mov
(bad)
(bad)
push
mov
shl
push
retf
cs
adc
(bad)
(bad)
sti
mov
js
test
out
xor
(bad)
jg
das
jp
mov
test
dec
ret
inc
jo
add
add
ja
(bad)
pusha
jg
mov
push
inc
sbb
scas
(bad)
(bad)
mov
mov
in
sbb
sahf
outs
or
sub
fadd
(bad)
(bad)
(bad)
jmp
xchg
inc
frstor
in
inc
scas
mov
cmps
xlat
(bad)
push
inc
and
ss
into
and
(bad)
(bad)
in
mov
dec
out
and
dec
sbb
(bad)
push
dec
mov
xchg
ret
xor
nop
xchg
push
(bad)
(bad)
(bad)
call
xor
repnz
stos
mov
je
and
sahf
pusha
cmps
push
movs
out
lods
ja
bound
enter
(bad)
(bad)
inc
pop
sub
jmp
out
jns
test
dec
arpl
push
ret
outs
fimul
loop
call
sbb
dec
jp
pop
hlt
cmp
cld
mov
std
aaa
or
push
jne
ret
xor
in
add
mov
or
or
(bad)
popf
(bad)
out
add
out
lds
in
pop
inc
or
pop
stc
ins
(bad)
(bad)
cmp
mov
xchg
nop
or
sbb
sub
in
mov
ss
mov
cmp
pop
les
cli
out
xor
dec
xchg
stos
pushf
shr
(bad)
ficomp
dec
sbb
add
(bad)
push
(bad)
adc
cld
mov
push
(bad)
(bad)
jg
dec
mov
pushf
cwde
test
jmp
mov
out
mov
cmp
jne
js
(bad)
inc
jbe
push
mov
mov
adc
cmp
inc
cdq
imul
and
stos
mov
push
aas
adc
or
cmc
push
push
ins
out
inc
ret
cli
fild
push
xchg
fwait
xchg
dec
mov
(bad)
(bad)
(bad)
call
repz
rcr
inc
aam
xor
ret
(bad)
pop
sub
movs
adc
stos
cmp
mov
lock
(bad)
(bad)
(bad)
stc
dec
pop
adc
dec
xor
fisttp
mov
test
sahf
(bad)
cs
in
(bad)
loop
fdivp
xor
call
jg
dec
sbb
test
and
(bad)
out
xchg
jmp
mov
sbb
icebp
xor
out
loop
push
or
inc
cld
(bad)
inc
pop
xchg
xchg
mov
jge
xor
xor
mov
(bad)
(bad)
mov
in
mov
push
test
push
sub
mov
les
hlt
xor
jmp
mov
pop
test
xor
push
stos
and
jp
xchg
sub
push
hlt
scas
(bad)
jl
cli
mov
sub
mov
pop
add
dec
cld
inc
fbld
cmp
ret
mov
dec
cdq
cmp
push
es
rol
xchg
ret
pop
scas
fist
js
inc
and
(bad)
(bad)
(bad)
mov
jmp
cmp
xchg
xor
sub
(bad)
fisttp
mov
das
ja
add
jnp
pop
pop
les
cmps
loopne
lds
cli
mov
sub
jg
lods
jmp
add
gs
lahf
push
js
call
and
sub
dec
ret
xchg
fld
push
pop
inc
es
shr
(bad)
out
cli
popa
jmp
lods
mov
in
scas
rcl
(bad)
add
sahf
ret
pop
sbb
push
out
cmp
push
popa
pusha
shr
sub
sub
lahf
sub
nop
fcomip
repz
mov
(bad)
(bad)
(bad)
push
loopne
fwait
push
rol
imul
jns
sbb
jbe
push
int
lock
jmp
cli
dec
imul
sub
ret
or
in
in
jne
xchg
lea
adc
jmp
movs
test
add
pop
push
pop
add
dec
adc
fstp
push
(bad)
(bad)
mov
sub
call
loopne
aad
jmp
paddd
(bad)
jmp
mov
data16
outs
sahf
movs
dec
ss
xchg
lock
imul
(bad)
jg
ror
mov
adc
idiv
call
fidiv
push
jl
imul
pusha
push
movs
aas
pop
jmp
adc
mov
dec
cdq
shl
enter
pushf
jne
fld
(bad)
jmp
sub
dec
pop
mov
xchg
push
scas
jmp
jge
push
scas
xor
mov
aad
mov
stc
(bad)
in
sahf
addr16
loopne
mov
(bad)
jmp
mov
inc
xchg
(bad)
fidiv
icebp
pop
jns
or
mov
xchg
adc
shr
sbb
push
fisub
retf
mov
mov
imul
sub
(bad)
(bad)
inc
(bad)
test
sub
jg
and
xor
aaa
xchg
adc
add
mov
sbb
pop
into
dec
test
scas
push
mov
fwait
cmp
mov
and
inc
shl
pop
fs
push
and
lea
mov
cs
movs
jmp
iret
sub
sbb
(bad)
jg
mov
inc
mov
mov
adc
popf
fnstcw
fbld
jmp
and
stos
jle
loopne
in
dec
cs
arpl
jl
(bad)
(bad)
call
jb
inc
faddp
(bad)
fdivp
fisttp
jmp
bound
jns
mov
stc
aaa
jg
ins
xlat
(bad)
(bad)
(bad)
inc
cmp
out
inc
push
mov
fsincos
test
inc
movs
pop
xchg
pop
imul
mov
iret
gs
lahf
(bad)
(bad)
(bad)
jmp
cmc
push
sbb
fs
push
sar
out
retf
xlat
sbb
dec
lods
dec
pop
(bad)
push
cli
dec
and
call
(bad)
sub
(bad)
pop
mov
xor
dec
in
mov
adc
std
push
jp
int3
popf
adc
icebp
and
mov
adc
mov
addr16
push
ins
adc
adc
(bad)
(bad)
(bad)
inc
cmp
push
stc
cmp
sbb
loop
pop
add
mov
icebp
out
pusha
push
ret
xor
sub
pop
or
mov
(bad)
dec
mov
js
ficom
and
xchg
ja
rcl
and
mov
mov
in
sbb
das
and
out
bound
imul
outs
mov
call
in
mov
es
jg
movs
clc
hlt
mov
sub
mov
(bad)
fsubr
push
out
stc
loopne
xor
sbb
mov
pop
cmp
cs
mov
or
pop
movs
push
mov
stos
dec
jae
cmpps
movs
sbb
mov
(bad)
(bad)
dec
enter
int3
mov
add
push
int
or
(bad)
sub
lock
pop
cmp
(bad)
jmp
push
mov
sar
push
cmp
aaa
add
sar
std
lods
mov
(bad)
call
jl
pop
adc
std
fld
aaa
test
dec
mov
jne
cs
cmp
jmp
sbb
mov
lock
jp
out
xchg
gs
stos
call
jo
in
xchg
inc
cmp
and
stc
or
mov
(bad)
inc
jg
popw
mov
xchg
adc
es
(bad)
push
cmp
mov
mov
jmp
lahf
or
sub
rol
sar
call
dec
mov
push
adc
in
cmp
xchg
(bad)
(bad)
call
movs
addr16
mov
fild
mov
pop
push
test
fwait
inc
cdq
adc
stc
jg
(bad)
jmp
mov
jp
fwait
pop
outs
mov
es
out
fs
std
int3
mov
adc
(bad)
jmp
and
pmaxsw
cmc
in
mov
shr
outs
jl
out
sbb
movs
clc
shl
pop
(bad)
(bad)
jmp
nop
pushf
inc
shl
loop
jbe
xchg
inc
push
fdivr
pop
mov
(bad)
(bad)
dec
cs
adc
int3
adc
adc
out
into
mov
push
or
arpl
mov
loopne
test
(bad)
jmp
enter
rol
repz
inc
(bad)
jecxz
lods
aad
xor
(bad)
(bad)
jmp
iret
cdq
mov
pop
cmp
sbb
push
mov
jge
mov
cwde
ins
mov
(bad)
(bad)
(bad)
fldcw
dec
sbb
xchg
jo
pop
xchg
and
mov
adc
cmc
jmp
xchg
inc
aas
ret
ins
push
mov
and
adc
sub
(bad)
push
dec
movs
sti
aas
push
add
inc
mov
pop
sub
inc
aaa
stos
jno
adc
loop
and
sar
je
mov
(bad)
out
cli
push
fmul
xchg
lds
or
or
adc
sub
push
shl
dec
les
fisttp
sub
mov
jne
sub
cmp
or
out
jmp
push
cmp
jae
cmp
or
add
pop
icebp
dec
adc
test
pop
les
repnz
adc
or
sbb
std
(bad)
call
leave
mov
ficomp
push
scas
xor
ror
lea
ss
push
mov
pusha
inc
test
push
(bad)
outs
daa
sub
(bad)
ins
iret
pop
pop
scas
das
dec
lods
sub
inc
mov
jnp
call
cmp
ror
mov
lds
ss
imul
std
jmp
dec
push
mov
retf
fwait
add
sub
dec
adc
(bad)
(bad)
(bad)
mov
ficom
jns
adc
xor
(bad)
mov
xor
(bad)
(bad)
inc
ins
imul
push
push
popf
pop
out
(bad)
fistp
repnz
icebp
fild
test
lea
jmp
inc
pop
lahf
fist
push
mov
test
push
push
(bad)
(bad)
(bad)
(bad)
out
add
addr16
dec
mov
jb
adc
xor
sbb
sar
js
push
mov
mov
mov
add
cmp
sar
mov
adc
inc
gs
mov
cmps
in
push
das
(bad)
(bad)
(bad)
call
mov
sub
dec
into
aas
mov
scas
loop
mov
dec
push
out
sub
jmp
cli
shl
lods
dec
or
dec
xchg
and
(bad)
jg
call
sub
mov
pop
and
into
mov
mov
(bad)
(bad)
(bad)
call
sub
lock
sub
je
adc
cwde
dec
loop
push
mov
and
int
jo
movs
(bad)
(bad)
push
jl
jg
neg
(bad)
movq
cmps
out
fdiv
(bad)
(bad)
out
adc
rcr
ds
jae
(bad)
jmp
fistp
add
dec
shl
les
adc
xor
or
add
rcl
cmp
xchg
pop
sbb
dec
leave
and
fsub
ja
clc
imul
add
lock
ja
adc
sub
push
call
mov
jge
cmps
mov
sub
mov
retf
jmp
rcl
sub
hlt
clc
sbb
jmp
hlt
jmp
(bad)
out
cmp
(bad)
(bad)
inc
mov
inc
daa
jmp
jo
int3
pop
xchg
jns
inc
stos
sti
sbb
(bad)
sbb
mov
sub
(bad)
jg
jne
xchg
add
arpl
xlat
hlt
retf
lahf
adc
jb
push
inc
test
jmp
sub
mov
jg
or
(bad)
push
mov
jmp
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
stc
dec
test
dec
iret
call
xchg
movs
xchg
ja
jmp
push
dec
dec
cli
mov
(bad)
(bad)
call
test
popf
div
(bad)
sbb
xchg
shr
sar
out
neg
lods
or
mov
or
(bad)
(bad)
jmp
out
fcom
sub
fsubr
mov
pop
fsubr
jno
cwde
cmps
push
and
popf
mov
and
imul
add
int
shl
dec
jae
fsubr
iret
(bad)
call
xchg
repz
pop
nop
and
mov
es
mov
or
(bad)
(bad)
jmp
or
mov
outs
push
or
imul
outs
arpl
or
mov
(bad)
inc
les
sbb
loopne
or
(bad)
(bad)
mov
je
dec
ins
jo
mov
fild
and
push
mov
out
pop
rol
sahf
pop
hlt
(bad)
(bad)
jmp
mov
xor
and
xchg
push
into
push
xor
dec
nop
jge
enter
xchg
inc
call
and
lods
mov
mov
mov
add
and
sbb
cli
pop
out
cmp
cmp
fidivr
scas
fmul
es
in
daa
inc
add
sar
loope
mov
popf
(bad)
movs
cmp
push
dec
in
fdivrp
(bad)
(bad)
inc
xor
mov
adc
test
push
dec
push
pop
mov
scas
mov
fsub
shr
call
pop
(bad)
sub
cwde
sub
popf
test
or
cmp
jo
cli
(bad)
(bad)
jg
mov
div
dec
mov
mov
inc
fldenv
xchg
les
xchg
dec
mov
das
test
sbb
add
adc
(bad)
(bad)
(bad)
mov
push
les
inc
xchg
leave
lods
sub
push
xchg
(bad)
or
test
(bad)
call
stos
ficom
sub
xor
jns
and
cld
pop
push
(bad)
call
jno
outs
jg
push
stos
rol
adc
sub
jmp
jl
cwde
push
add
jp
into
movs
(bad)
mov
out
push
ds
dec
jecxz
mov
(bad)
jg
mov
dec
pop
xlat
pop
mov
inc
push
sub
(bad)
test
fdivrp
(bad)
(bad)
dec
dec
add
stos
push
sub
pusha
push
fnstsw
inc
sub
repz
add
stos
or
inc
adc
fidivr
push
(bad)
(bad)
(bad)
push
dec
mov
or
xchg
loope
cdq
cdq
rcr
or
dec
and
js
push
lea
mov
sahf
(bad)
(bad)
(bad)
inc
out
inc
pop
mov
xchg
(bad)
out
adc
inc
ds
pop
(bad)
(bad)
mov
mov
pop
add
push
enter
pop
dec
in
hlt
cmp
pop
bound
sbb
(bad)
mov
add
(bad)
ins
push
mov
xchg
mov
fbstp
shr
rcr
mov
repnz
cmps
inc
inc
arpl
(bad)
test
(bad)
jg
xchg
mov
sbb
fadd
sbb
sub
pop
adc
loopne
test
int3
pop
xchg
lea
push
dec
pop
sti
ins
mov
xchg
(bad)
jg
hlt
fisttp
xchg
addr16
ds
inc
pushf
cmp
inc
sar
jmp
ja
push
jg
cmps
addr16
in
aad
rol
fst
mov
sahf
jle
jecxz
mov
jns
(bad)
(bad)
(bad)
jmp
lods
inc
jbe
cs
adc
in
dec
push
pop
loop
aad
out
mov
aad
das
cmp
cmp
and
enter
dec
leave
call
nop
(bad)
cld
push
push
push
jg
mov
test
(bad)
loopne
xchg
inc
out
scas
out
inc
aad
inc
mov
and
enter
and
idiv
(bad)
(bad)
call
movs
pop
leave
or
scas
xor
stos
fld
mov
mov
jecxz
jecxz
dec
xchg
sar
(bad)
fdivr
loopne
lea
ror
retf
xchg
mov
fs
(bad)
(bad)
call
or
clc
inc
hlt
cdq
loop
sahf
pop
mov
fst
add
call
fcompp
inc
(bad)
jno
cmp
clc
(bad)
mov
test
adc
pop
aam
popf
sahf
ins
outs
aaa
cdq
shl
jmp
mov
(bad)
(bad)
dec
xchg
dec
jne
mov
xor
nop
inc
ds
dec
lea
sbb
ret
daa
in
or
jle
push
repz
mov
lock
push
and
(bad)
(bad)
jmp
add
push
and
icebp
mov
xchg
pop
imul
pop
sub
retf
mov
push
inc
(bad)
(bad)
jmp
pop
mov
jns
enter
push
ret
mov
daa
jne
(bad)
jg
(bad)
(bad)
dec
push
addr16
js
sub
out
test
inc
or
shl
push
mov
pushf
leave
in
xchg
add
(bad)
(bad)
push
daa
shl
jg
adc
xchg
and
nop
cld
push
fldenv
xchg
dec
and
sub
js
ret
jae
add
mov
sysret
mov
pop
and
(bad)
mov
clc
and
in
pop
inc
fs
es
clc
das
mul
xchg
pop
hlt
in
jbe
xlat
mov
ja
(bad)
(bad)
dec
stos
dec
bnd
(bad)
and
and
ret
xor
(bad)
sub
clc
xchg
clc
mov
pushf
jmp
or
aad
push
(bad)
inc
outs
cmps
mov
(bad)
out
push
in
sbb
sbb
(bad)
(bad)
(bad)
jmp
add
jecxz
inc
scas
imul
mov
ins
push
mov
dec
sub
call
ret
push
call
adc
sub
cli
(bad)
jmp
or
adc
pop
mov
mov
mov
push
push
cmp
call
mov
aam
pop
loope
cs
sahf
inc
mov
push
outs
cmps
mov
mov
std
mov
pusha
add
repz
mov
push
movs
fiadd
(bad)
jg
push
(bad)
sbb
pop
push
jb
cmc
stos
cwde
data16
(bad)
in
test
ins
aam
cwde
popf
(bad)
(bad)
jg
retf
mov
inc
divps
adc
mov
xchg
mov
call
inc
not
xchg
lock
add
daa
rcr
(bad)
adc
jmp
xchg
ror
test
js
(bad)
push
das
cli
xor
xchg
movs
mov
imul
xchg
add
jno
sbb
mov
jle
imul
les
outs
in
or
dec
mov
push
mov
push
xchg
sbb
dec
mov
push
xchg
shr
mov
(bad)
jg
dec
fistp
lods
dec
mov
push
mov
outs
sbb
movs
sub
out
or
sahf
xchg
dec
mov
(bad)
jmp
cmp
pop
jno
and
(bad)
into
into
data16
(bad)
in
pop
push
fwait
xlat
jno
and
fistp
mov
(bad)
jmp
(bad)
aaa
push
push
aad
in
jge
xchg
inc
jne
pop
cmps
sbb
add
xchg
push
test
out
hlt
(bad)
jg
call
shl
and
cmps
mov
scas
dec
cwde
pop
ins
push
popf
fsubr
mov
(bad)
(bad)
jmp
mov
adc
scas
(bad)
cmc
fs
xchg
fldcw
test
enter
lds
in
js
(bad)
repnz
mov
mov
les
pop
push
(bad)
(bad)
push
ds
add
jl
add
inc
addr16
loop
scas
mov
ja
hlt
neg
push
out
inc
(bad)
(bad)
(bad)
call
or
leave
mov
ror
dec
iret
xchg
mul
pop
daa
xchg
jb
or
jns
(bad)
(bad)
push
out
gs
and
lods
push
xor
fwait
adc
mov
retf
das
add
pusha
sbb
repnz
mov
pop
pop
sub
dec
cli
or
and
cmp
mov
push
push
shl
in
adc
pop
in
adc
rcl
dec
daa
jge
aas
adc
sbb
rcr
scas
dec
cld
(bad)
(bad)
call
add
frstor
outs
pop
popf
ficom
dec
mov
jle
adc
cs
mov
sbb
sub
mov
pushf
mul
inc
adc
jge
clc
mov
cmp
mov
in
dec
xchg
jns
(bad)
(bad)
dec
sbb
test
sbb
mov
add
mov
and
adc
rcl
sub
pusha
jecxz
pusha
cmp
daa
sub
add
cs
jmp
jnp
ds
dec
(bad)
jb
iret
out
jmp
mov
sbb
cmc
mov
sub
push
dec
stos
push
cmp
aaa
es
(bad)
(bad)
jle
sub
mov
repnz
jae
inc
xor
stos
in
(bad)
mov
pop
iretw
mov
clc
enter
out
loope
inc
out
push
jmp
mov
clc
(bad)
(bad)
dec
(bad)
bound
xor
js
jge
popa
mov
push
and
es
and
push
rol
loope
jbe
movs
enter
sar
push
(bad)
call
bnd
xlat
add
cmps
(bad)
and
(bad)
jg
dec
(bad)
call
cwde
repnz
fstp
out
adc
gs
fcomip
mov
lds
mov
jp
fnsave
call
jnp
js
adc
(bad)
(bad)
(bad)
jmp
pushf
add
jl
fild
je
hlt
lock
inc
dec
xchg
sahf
daa
scas
xchg
shl
(bad)
(bad)
mov
ins
xor
xchg
xchg
lahf
mov
mov
inc
call
fst
or
push
jb
inc
(bad)
jmp
and
scas
popf
dec
fs
sub
sub
(bad)
pop
push
jg
sub
pop
cmps
jne
inc
push
xchg
icebp
add
scas
lock
sub
(bad)
(bad)
dec
pop
std
lds
je
fiadd
mov
fs
mov
hlt
xchg
out
push
xor
adc
fbld
push
or
push
sub
shr
add
call
xchg
out
push
jno
sub
xchg
loopne
jmp
jg
sbb
dec
pop
and
xchg
push
cld
int
call
sbb
mov
call
pusha
or
xchg
sub
(bad)
rol
call
sub
sti
xchg
mov
(bad)
call
lock
mul
push
stos
dec
push
rcl
or
ds
xchg
sub
inc
rcr
xchg
test
mov
push
in
fst
mov
jbe
push
xor
call
sti
cld
(bad)
into
stos
pop
mov
(bad)
mov
stos
and
cmp
jno
mov
enter
or
xchg
stos
(bad)
(bad)
out
cli
cmp
jmp
sub
lods
(bad)
sub
and
sar
push
inc
retf
out
ins
push
ja
jge
mov
fwait
lea
dec
mov
sub
jnp
clc
mov
das
adc
push
ret
mov
sbb
pop
jno
xchg
inc
and
xchg
aad
sahf
pushf
and
and
jmp
mov
xchg
xchg
mul
pop
sub
stos
(bad)
(bad)
fsub
call
cli
popf
mov
dec
pop
sti
(bad)
(bad)
jmp
adc
cmp
mov
fnsave
push
imul
ja
mov
mov
call
inc
clc
sub
rcr
pop
and
shl
das
(bad)
jmp
test
fst
xor
sub
pusha
dec
add
daa
jmp
(bad)
cmp
or
inc
(bad)
lods
xchg
cwde
cmp
cld
arpl
mov
ja
(bad)
call
xchg
fistp
or
fidivr
jo
push
jmp
movs
popf
cli
div
dec
(bad)
pop
or
sbb
es
push
mov
stos
test
mov
add
shl
xchg
jge
xor
jle
push
mov
(bad)
call
mov
test
cs
mov
jp
mov
inc
cli
outs
and
and
jbe
dec
inc
mov
inc
add
jg
das
inc
cmc
xchg
daa
pop
inc
sbb
xchg
into
or
sub
movs
aad
jp
sub
lods
data16
push
aam
or
(bad)
(bad)
push
pop
adc
jl
inc
cmp
push
les
(bad)
daa
add
pop
bound
std
jmp
cli
bound
inc
sbb
fld
inc
jmp
mov
jbe
pushf
mov
(bad)
jmp
push
sub
ror
dec
and
xchg
leave
aas
and
xor
imul
(bad)
mov
loopne
repnz
add
mov
xor
cmps
sub
jo
or
(bad)
(bad)
call
mov
stos
jo
adc
and
lea
adc
inc
mov
cmp
sub
cmp
add
sub
loope
mov
fstp
mov
dec
out
(bad)
test
aas
cs
xchg
pop
aas
div
out
(bad)
(bad)
(bad)
call
xor
mov
adc
data16
fnsave
fs
add
(bad)
(bad)
inc
jnp
leave
mov
mov
push
fwait
push
mov
in
jmp
outs
sbb
(bad)
jmp
lods
call
test
lahf
jb
int3
push
mov
arpl
xchg
mov
leave
div
jne
out
loop
or
(bad)
(bad)
mov
ins
cmp
mov
xor
(bad)
or
mov
push
(bad)
xor
xor
aam
(bad)
mov
dec
mov
xor
arpl
adc
fdiv
jmp
std
mov
ins
sub
test
test
adc
(bad)
call
fdiv
jbe
fs
xchg
fisub
mov
pop
ins
sbb
int3
repnz
sub
dec
or
call
sub
cmc
sbb
fild
(bad)
fwait
test
jl
add
in
pop
inc
out
int3
or
adc
mov
sbb
sbb
xor
xchg
leave
outs
(bad)
(bad)
in
mov
xor
push
mov
clc
push
or
(bad)
(bad)
(bad)
call
push
dec
xchg
ins
adc
imul
fcom
(bad)
(bad)
inc
movs
jmp
idiv
adc
sub
test
sub
jb
(bad)
dec
mov
mov
pop
outs
sbb
jae
jnp
push
rol
sbb
(bad)
(bad)
(bad)
jg
dec
fwait
leave
ins
popf
cmp
push
ds
stc
out
fistp
call
(bad)
(bad)
out
cli
test
mov
lods
or
jg
mov
dec
fst
mov
fstp
inc
pop
jl
mov
mov
fxch
mov
xchg
sub
cmps
shr
push
inc
retf
inc
mov
(bad)
sub
(bad)
(bad)
call
bswap
and
or
clc
inc
xchg
out
mov
mov
adc
ins
or
nop
push
xchg
adc
mov
xchg
jecxz
sub
addr16
pop
xchg
cdq
adc
xor
aas
inc
mul
mov
add
fmul
gs
call
or
cmp
retf
pop
(bad)
test
ss
(bad)
pop
or
ficom
(bad)
outs
add
stos
mov
fsubr
and
jb
ja
push
adc
fsubr
(bad)
mov
and
xor
xchg
dec
fucomi
(bad)
mov
(bad)
(bad)
call
and
sbb
ffreep
dec
pop
jg
push
iret
pop
pop
or
mov
(bad)
jg
jmp
dec
test
rol
outs
mov
adc
jmp
jo
mul
and
pop
les
mov
dec
pop
jbe
push
outs
cmp
adc
pop
fild
stos
int
and
cmp
lods
mov
(bad)
(bad)
(bad)
call
push
js
sbb
mov
aas
mov
push
imul
jmp
push
hlt
call
cdq
mov
mov
push
sti
(bad)
(bad)
(bad)
dec
jns
jecxz
push
sub
cdq
stos
pop
lea
add
test
pop
sub
add
(bad)
sbb
mov
and
(bad)
jae
xchg
inc
nop
sahf
(bad)
(bad)
(bad)
call
jl
dec
dec
loop
inc
sub
enter
sub
std
xchg
stos
(bad)
cli
add
out
ret
jg
(bad)
pop
ds
test
xchg
enter
jl
(bad)
(bad)
(bad)
(bad)
push
add
in
sbb
aaa
cmp
enter
stos
pop
mov
or
mov
(bad)
jmp
test
xor
sbb
or
mov
(bad)
push
and
std
in
enter
(bad)
out
aaa
sub
add
(bad)
call
imul
and
inc
xlat
(bad)
sub
test
aaa
xchg
jo
(bad)
arpl
clc
pop
inc
push
xor
(bad)
(bad)
(bad)
jg
mov
and
stos
adc
fwait
sbb
cmc
loope
jno
addr16
addr16
sub
(bad)
jmp
aaa
add
push
enter
xchg
cmps
sbb
dec
dec
loope
(bad)
mov
cs
fidiv
lods
nop
inc
sub
cld
pop
sar
mov
sbb
sub
call
leave
dec
inc
or
outs
aad
push
imul
test
and
(bad)
inc
xor
ss
pop
jmp
dec
imul
pop
adc
mov
add
gs
mov
in
pop
dec
adc
dec
stos
pop
ins
jbe
mov
pop
cmc
pop
rol
mov
dec
je
and
jo
(bad)
mov
and
test
fdivr
add
fcmovnbe
call
inc
popa
fwait
in
outs
mov
dec
(bad)
call
retf
in
rcl
mov
leave
rcr
mov
(bad)
into
mov
cs
ret
adc
add
pusha
mov
(bad)
ja
jae
or
adc
ins
dec
call
data16
jb
and
call
push
cmp
jl
fdiv
scas
pop
ffree
fild
(bad)
mov
push
jg
(bad)
fsubr
(bad)
icebp
sbb
out
movs
sub
sahf
aad
mov
pushf
mov
and
mov
xor
out
in
inc
cmp
sbb
(bad)
jmp
push
sar
mov
out
retf
and
push
int
push
sub
rcpps
push
adc
jb
sub
dec
stos
shl
mov
arpl
pop
hlt
das
shr
add
shr
cwde
mov
or
mov
(bad)
dec
dec
xor
es
xchg
xchg
or
popa
mov
xchg
(bad)
(bad)
(bad)
inc
cmp
mov
sbb
lods
data16
sub
iret
fs
es
push
leave
stos
push
push
add
mov
pop
mov
jnp
jmp
mov
aad
inc
outs
ja
cmps
loopne
(bad)
(bad)
jl
in
movs
cmp
xchg
(bad)
jns
fld
mov
mov
aas
jmp
(bad)
(bad)
mov
xor
mov
push
mov
or
std
je
push
and
arpl
aaa
dec
ins
jmp
je
jl
xor
jg
or
imul
dec
xchg
mov
ss
(bad)
(bad)
(bad)
jmp
mov
(bad)
jmp
(bad)
pushf
int3
cli
and
mov
and
mov
add
std
push
(bad)
in
dec
or
xchg
cmp
mov
or
cld
call
mov
push
mov
out
cmps
retf
(bad)
pop
std
(bad)
call
mov
sahf
dec
jmp
jae
and
imul
jno
cmc
dec
mov
(bad)
cmp
fcomip
pop
push
mov
sub
or
dec
pop
mov
clc
out
mov
cmp
or
inc
(bad)
(bad)
push
out
pop
xchg
fwait
mov
sub
cld
xchg
mul
add
dec
cmp
(bad)
loope
pop
cmc
sub
call
icebp
xor
xor
call
mov
xchg
mov
aad
sbb
xor
loopne
popf
xor
push
gs
sub
cmp
jg
fdivrp
xchg
iret
loope
add
(bad)
mov
jl
mov
js
retf
out
stos
into
cmp
hlt
int3
sub
repnz
hlt
adc
jo
mov
js
sbb
pop
fmul
call
std
jmp
je
jmp
mov
cmps
jmp
out
fsubr
xor
retf
(bad)
scas
push
jp
cmp
sbb
push
mov
inc
(bad)
(bad)
jmp
push
inc
hlt
push
stc
or
dec
jnp
lods
stos
inc
lods
scas
push
jne
fild
(bad)
(bad)
(bad)
cmps
rcl
rol
add
push
sbb
fcmovnbe
call
popf
data16
imul
icebp
cs
out
mov
push
xor
nop
(bad)
(bad)
(bad)
fiadd
adc
fdivr
(bad)
mov
lods
into
test
stos
jmp
(bad)
(bad)
dec
stos
int
pop
imul
add
mov
adc
xor
push
(bad)
(bad)
push
adc
push
fwait
jecxz
into
int3
dec
push
popf
jae
jnp
stc
stos
jnp
push
add
das
nop
lock
(bad)
cmp
in
movs
sbb
sub
mov
(bad)
dec
mov
dec
mov
mov
push
adc
cwde
inc
stos
pop
les
mov
aam
xchg
aam
pop
inc
or
mov
jmp
shl
gs
push
or
lock
nop
mov
(bad)
mov
jo
inc
dec
lea
push
loop
scas
jnp
adc
gs
fsub
push
(bad)
(bad)
inc
add
jns
push
mov
adc
into
cmp
repnz
mov
ja
rcr
xor
cmps
leave
dec
or
outs
(bad)
(bad)
(bad)
jmp
ds
mov
shl
mov
pop
mov
movs
mov
(bad)
(bad)
jns
cmp
outs
ret
test
inc
pushf
dec
cmp
jo
mov
xor
cmps
jle
mov
(bad)
(bad)
inc
sbb
pop
(bad)
(bad)
cmp
mov
jnp
inc
or
in
mov
cmps
mov
movs
inc
add
pop
and
(bad)
mov
js
std
cmp
test
xor
out
dec
cmps
(bad)
(bad)
dec
mov
sub
and
ror
mov
mov
and
lods
scas
xchg
push
inc
mov
sar
(bad)
(bad)
jmp
jno
mov
mov
pop
dec
jl
test
fmul
fwait
cmp
mov
jmp
mov
xchg
fcomp
push
jb
setno
jmp
das
and
call
jp
mov
sbb
aas
(bad)
imul
sahf
(bad)
fsub
(bad)
(bad)
push
sbb
add
mov
stc
loope
mov
sub
inc
push
rol
in
shr
(bad)
adc
add
jmp
jp
sbb
mov
mov
(bad)
call
movs
imul
enter
mov
mov
mov
jmp
data16
(bad)
(bad)
dec
mov
test
(bad)
dec
aad
inc
xor
in
rcr
sbb
leave
jl
jecxz
lock
xchg
(bad)
(bad)
(bad)
call
mov
pop
push
pop
add
addr16
(bad)
mov
test
iret
retf
mov
xrelease
xchg
fldcw
push
jg
out
and
or
lods
das
add
pmaxub
jg
adc
xor
push
stos
mov
jbe
or
jmp
mov
enter
add
xlat
push
inc
add
mov
xchg
jmp
sbb
cmps
push
cmp
pop
inc
jmp
jp
shr
xchg
loope
rcl
or
xchg
dec
cmp
(bad)
retf
jl
adc
add
and
inc
out
neg
call
pop
push
dec
test
jmp
cmp
sub
into
cs
sbb
bound
aam
add
push
push
xchg
sar
xchg
dec
jns
mov
sub
loopne
and
jp
mov
and
movs
xor
cdq
pop
popf
popa
loope
xlat
(bad)
movs
movs
call
xor
mov
xor
cmp
jmp
int
mov
adc
pusha
sbb
mov
jg
and
repnz
retf
(bad)
(bad)
mov
ds
mul
inc
sub
inc
pop
out
retf
cmp
jmp
mov
mov
ds
mov
mov
call
icebp
mov
call
(bad)
jo
or
adc
or
push
mov
fdivp
(bad)
pop
(bad)
(bad)
(bad)
inc
leave
icebp
psrad
mov
outs
or
es
(bad)
mov
js
iret
es
dec
(bad)
(bad)
(bad)
push
adc
mov
pop
lods
or
je
add
fdivr
(bad)
(bad)
popf
sbb
sbb
test
outs
mov
jle
out
jno
mov
je
jge
mov
push
push
(bad)
push
add
int3
ins
push
mov
icebp
sub
(bad)
jg
(bad)
cmp
shr
dec
xchg
in
stos
cwde
cmc
adc
inc
dec
and
imul
adc
sub
inc
xchg
sahf
mov
dec
jl
sbb
arpl
rcl
(bad)
(bad)
call
lock
repnz
xchg
dec
in
cld
cmp
mov
inc
icebp
or
mov
int
mov
push
cwde
out
adc
outs
pop
sub
xor
(bad)
(bad)
jmp
mov
sub
adc
sbb
std
mov
mov
pop
loopne
or
mov
loop
adc
jecxz
(bad)
(bad)
(bad)
(bad)
dec
adc
sbb
inc
adc
out
bound
out
lods
lock
jecxz
inc
scas
(bad)
fild
sar
rcl
and
mov
push
mov
pop
cmc
mov
in
dec
ja
or
test
push
pop
cwde
or
push
inc
test
les
shl
in
movs
sub
xchg
movs
sbb
std
ins
sub
and
fs
sub
test
test
and
cwde
cmp
out
dec
jb
call
pop
cmp
ficom
into
or
sbb
cs
ins
jge
jl
dec
and
(bad)
jg
scas
in
xchg
mov
ds
(bad)
pop
hlt
(bad)
jmp
lods
sbb
mov
inc
dec
fmul
(bad)
test
push
dec
scas
scas
xor
(bad)
jg
and
enter
push
jcxz
retf
bound
into
cli
(bad)
push
(bad)
mov
dec
xchg
sar
xchg
adc
xchg
xor
das
add
cmps
ret
movs
and
mov
clc
cmp
jne
adc
push
xor
push
ja
cli
das
mov
cmps
std
dec
stos
ret
inc
(bad)
push
push
rol
and
(bad)
(bad)
call
xor
jnp
jne
repz
jle
fisttp
icebp
hlt
or
adc
addr16
inc
or
leave
cdq
int3
mov
retf
mov
ret
pushf
into
into
or
jo
(bad)
push
jb
add
adc
fs
push
pop
mov
sub
mov
(bad)
jmp
push
push
loopne
mov
cld
and
sbb
cli
dec
push
test
ja
cld
push
mov
sbb
xor
dec
pop
(bad)
(bad)
call
cmps
int3
mov
inc
cmp
add
rcr
das
pop
dec
inc
mov
inc
std
push
out
xchg
fidivr
fst
xlat
mov
sbb
pop
cwde
cmp
mov
xor
loope
add
(bad)
(bad)
call
mov
pop
sub
stc
sbb
std
repz
aam
inc
sets
jmp
cdq
call
lods
in
jbe
mov
iret
inc
shl
mov
jmp
hlt
xor
div
fdivr
add
jmp
jns
ror
adc
and
cs
fisub
add
(bad)
push
inc
retf
sbb
jbe
sub
add
push
adc
(bad)
jg
dec
mov
in
xor
ja
push
test
pop
dec
sub
cli
outs
mov
xchg
jl
int3
sar
int
(bad)
(bad)
(bad)
call
jmp
cmps
push
out
mov
in
jbe
test
jle
xor
(bad)
(bad)
jmp
mov
in
jmp
jnp
cdq
daa
(bad)
pop
adc
pushf
mov
mov
xor
(bad)
inc
mov
xor
sti
add
add
adc
cmp
jp
adc
movs
jg
(bad)
dec
pop
add
push
jecxz
pop
xor
cmp
mov
stos
stos
and
stc
test
neg
jb
sbb
icebp
or
(bad)
inc
dec
js
aas
loop
jae
icebp
jmp
mov
nop
pop
add
jo
inc
dec
(bad)
jg
mov
outs
std
adc
out
cli
lds
ins
(bad)
pop
mov
std
fbld
call
sub
sub
push
aam
sub
cmc
out
mov
mov
cwde
push
adc
adc
inc
sub
xchg
(bad)
inc
(bad)
jnp
bound
mov
mov
mov
mov
pop
sar
cli
lock
push
or
jo
pop
cld
(bad)
jmp
lahf
cmps
dec
xlat
fbstp
pop
lea
movs
test
mov
(bad)
mov
outs
out
xchg
lahf
dec
lods
dec
or
mov
das
mov
xor
push
pop
and
cdq
or
call
hlt
mov
mov
mov
lock
retf
(bad)
(bad)
dec
jno
pushf
pop
or
push
loopne
xor
mov
pop
les
outs
pop
std
(bad)
push
inc
inc
ret
cmp
xor
cwde
fwait
cmp
xor
shr
adc
(bad)
(bad)
fist
add
dec
adc
sub
mov
xchg
mov
xchg
and
add
push
cmp
sar
mov
mov
imul
aam
mov
mov
or
out
jb
test
retf
jbe
dec
and
inc
jmp
sub
ret
inc
sub
push
mov
(bad)
lahf
imul
(bad)
(bad)
(bad)
jg
jmp
les
retf
pop
out
mov
and
mov
dec
and
sub
jo
xchg
or
inc
push
adc
ja
dec
push
imul
call
and
cmp
push
and
lds
out
push
nop
ins
jo
pop
or
es
jp
dec
mov
or
and
test
dec
push
popa
push
je
mov
(bad)
mov
mov
in
pop
popa
div
imul
xor
(bad)
(bad)
(bad)
jmp
xor
fwait
cmc
or
ret
sar
test
cs
or
clc
call
icebp
cmp
cmps
out
and
sbb
(bad)
(bad)
inc
fiadd
push
jg
lock
xchg
xchg
jns
mov
out
or
cld
scas
lea
(bad)
jg
mov
mov
push
sbb
out
ss
adc
in
int
jae
mov
clc
js
pop
cld
in
mov
cmp
jns
das
xchg
dec
push
and
xchg
ja
dec
(bad)
sar
push
mov
push
leave
push
push
pushf
mov
and
mov
(bad)
jmp
cld
mov
pavgw
mov
jo
out
(bad)
jecxz
outs
mov
retf
dec
sub
ror
ret
cmp
xor
dec
xchg
push
sub
mov
ds
adc
test
jnp
sbb
es
enter
pop
push
iret
std
retf
mov
loopne
push
lods
fcomip
ror
jge
lods
cld
(bad)
(bad)
call
shl
test
cwde
cmp
sbb
test
jae
pop
inc
xchg
sar
cmp
shr
jp
aad
cs
inc
push
sti
pop
jp
cwde
jmp
ins
adc
jecxz
sbb
(bad)
inc
cmp
bnd
mov
test
jmp
out
dec
or
mov
adc
icebp
xor
std
push
mov
jg
ds
mov
inc
inc
push
bound
cmc
dec
xchg
mov
adc
mov
xor
jmp
cmp
sbb
mul
mov
xor
pop
icebp
(bad)
push
test
push
cli
xchg
xor
sub
test
fs
mov
fst
lods
ds
(bad)
(bad)
(bad)
cli
push
in
test
xor
add
or
push
dec
bound
scas
(bad)
(bad)
inc
std
sbb
ror
iret
push
dec
mov
shl
cwde
scas
push
(bad)
inc
pop
sbb
inc
or
adc
ja
push
ja
mov
push
add
stos
add
nop
push
mov
aam
outs
pop
mov
sub
mov
lahf
push
(bad)
(bad)
out
(bad)
push
dec
dec
mov
in
adc
mov
xchg
xchg
add
adc
dec
adc
test
xor
(bad)
mov
push
mov
imul
aas
jge
ds
dec
test
mov
or
call
lock
mov
lock
cmp
sbb
sub
jl
nop
push
icebp
xchg
cmp
test
jnp
(bad)
(bad)
jmp
sub
and
enter
push
mov
sbb
call
xchg
fst
popf
jle
(bad)
jmp
or
push
cdq
gs
jne
fcomp
cmp
sbb
or
and
ins
sub
rcr
jo
sub
adc
sti
cld
push
repz
test
pop
mov
ja
scas
hlt
dec
pop
popf
sbb
(bad)
(bad)
jmp
imul
shr
in
and
push
jmp
mov
(bad)
dec
or
imul
mov
sbb
jmp
add
std
dec
dec
outs
sub
mov
ret
dec
mov
sub
ds
dec
in
mov
adc
imul
adc
cmps
jnp
add
adc
(bad)
fcomip
cld
dec
push
jecxz
dec
mov
popf
cmp
fadd
addr16
shl
add
mov
jl
enter
xchg
stos
push
pop
inc
ds
jmp
hlt
sbb
(bad)
mov
ds
test
pop
cli
mov
scas
push
lods
fcom
aam
mov
cmp
std
(bad)
mov
ret
loope
in
push
(bad)
jg
push
mov
stos
or
push
je
sub
xchg
fs
(bad)
into
addr16
ret
xchg
into
or
inc
cld
aam
xlat
cmps
daa
sub
popf
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
mov
dec
(bad)
and
inc
loopne
jp
pop
(bad)
jno
scas
mov
mov
ins
mov
xchg
dec
pop
clc
jo
xchg
mov
ret
pop
mov
cld
sbb
inc
out
in
mov
dec
mov
aaa
test
(bad)
(bad)
(bad)
push
pop
xor
pushf
(bad)
xchg
add
cwde
fnstenv
jae
mov
aas
test
cld
push
jbe
call
call
sbb
fs
sub
cmp
pop
lea
add
ja
pop
mov
mov
icebp
jl
mov
scas
xchg
lock
jbe
(bad)
mov
mov
mov
and
sbb
xchg
add
sbb
call
repz
daa
test
jae
adc
(bad)
fwait
inc
out
icebp
xchg
cmp
(bad)
in
les
popf
xchg
mov
cmp
jg
fidiv
pop
sbb
push
daa
dec
rcr
adc
enter
or
push
pop
sub
mov
inc
lock
(bad)
push
jnp
(bad)
(bad)
(bad)
dec
sub
mov
or
cmp
in
into
clc
mov
pop
ja
and
inc
pop
hlt
call
inc
adc
jge
lods
fwait
jle
popf
jp
outs
sub
add
jmp
mov
sbb
test
jnp
ficom
mov
xor
ret
in
mov
jo
adc
pop
add
(bad)
jle
and
cmp
mov
add
call
cmp
call
(bad)
(bad)
cmp
(bad)
fistp
test
call
gs
mov
mov
push
pop
jp
lock
jmp
xchg
je
js
(bad)
dec
cli
(bad)
(bad)
inc
movs
mov
mov
jmp
fwait
(bad)
fst
mov
movs
sar
sbb
dec
je
rcr
cmps
push
out
mov
enter
dec
outs
cli
add
movs
cmp
leave
jmp
(bad)
out
adc
and
out
sti
push
pop
(bad)
push
mov
add
ins
out
ret
outs
mov
ss
out
retf
(bad)
inc
sub
aas
pusha
inc
sbb
in
pushf
jl
cmp
enter
xor
gs
outs
mov
(bad)
call
(bad)
xor
rol
ror
jl
(bad)
out
pop
ffreep
in
lahf
jo
leave
test
out
cmc
sbb
out
fsub
mov
(bad)
call
sbb
mov
fstp
sar
dec
jl
push
jl
test
scas
(bad)
pop
scas
outs
cmp
xor
(bad)
jmp
xchg
das
fwait
xor
or
and
cmps
xchg
xor
fcomp
movs
lock
imul
push
aad
push
xchg
push
daa
xchg
dec
sub
mov
(bad)
(bad)
jg
shl
mov
add
mov
mov
xor
inc
mov
adc
cvtpi2ps
cmps
scas
cwde
repz
(bad)
push
xchg
push
cmp
or
outs
xchg
loopne
pop
cmp
mov
push
sub
xor
(bad)
(bad)
cmp
fadd
arpl
mov
stos
into
pop
cmp
setge
fwait
sar
(bad)
jg
mov
push
add
sub
loope
pop
inc
xchg
and
pushf
push
dec
mov
xchg
cmps
enter
mov
shl
mov
adc
bound
(bad)
rol
mov
out
dec
popf
fcmovu
cmp
(bad)
(bad)
jg
sub
int
dec
fsub
mov
imul
cmp
aas
ja
es
jmp
pop
add
xor
jb
push
mov
cmp
iret
adc
push
test
ds
xor
into
retf
cmp
jl
(bad)
jg
jno
dec
mov
cld
fisubr
mov
jecxz
mov
popf
or
push
add
test
stc
(bad)
(bad)
jmp
cmp
pop
cmp
dec
ret
xlat
jecxz
inc
xor
(bad)
in
inc
out
cli
(bad)
inc
inc
mov
dec
scas
push
(bad)
push
fcmovbe
ret
daa
in
dec
(bad)
pop
(bad)
jg
mov
adc
dec
and
popa
push
mov
(bad)
(bad)
(bad)
push
pop
stc
cmp
ins
test
(bad)
(bad)
add
add
pop
pop
mov
inc
add
push
cdq
and
or
in
jl
push
jmp
adc
and
rcr
jmp
fbstp
push
stc
aas
and
push
sub
cld
add
sub
(bad)
fstp
or
(bad)
cli
adc
outs
les
inc
push
shl
enter
(bad)
mov
(bad)
mov
add
aad
cmp
pop
dec
repz
movs
(bad)
jmp
inc
std
jbe
mov
(bad)
in
dec
(bad)
cwde
adc
lds
stc
adc
pop
mov
(bad)
call
outs
cmp
push
mov
push
mov
in
cmp
cmp
pop
xchg
cmp
jecxz
(bad)
call
test
ja
arpl
add
scas
sub
mov
lods
cmps
mov
push
bound
(bad)
mov
mov
push
scas
enter
fs
or
in
lods
xlat
outs
mov
inc
jo
cmc
lahf
mov
mov
or
(bad)
jmp
mov
cmp
daa
rol
push
sub
sub
dec
pop
in
test
push
mov
stos
sub
jge
mov
gs
fnstenv
(bad)
dec
sahf
pop
mov
es
xlat
mov
jge
pop
stos
and
test
fst
xor
lods
and
pop
into
xchg
push
(bad)
jmp
fwait
sub
mov
(bad)
(bad)
call
adc
dec
or
jmp
mov
lea
test
fidivr
stc
(bad)
(bad)
call
loopne
push
sub
mov
sbb
and
(bad)
(bad)
sbb
(bad)
push
xor
jecxz
pop
jmp
out
lea
sbb
arpl
sub
test
jl
(bad)
(bad)
(bad)
jns
xchg
ficom
mov
adc
pop
sbb
inc
jmp
dec
std
jb
or
lods
mov
adc
imul
(bad)
inc
scas
push
and
xchg
jge
daa
pop
inc
(bad)
(bad)
stos
xor
cwde
push
rcr
(bad)
je
data16
jmp
sbb
dec
ret
jmp
push
aam
add
add
(bad)
cmp
mov
add
out
ret
dec
dec
loopne
lock
repz
loope
scas
call
movs
clc
cmp
pop
adc
ret
inc
push
sar
xor
and
inc
sub
pusha
cmp
ds
jmp
add
adc
pop
adc
test
ror
mov
push
push
inc
ret
icebp
xchg
mov
(bad)
jmp
jbe
icebp
ret
sbb
int3
mov
rol
mov
mov
pop
gs
(bad)
fcomip
jmp
cmp
fldcw
or
into
jbe
ds
push
mov
dec
dec
and
(bad)
(bad)
(bad)
jmp
or
push
xor
(bad)
jp
and
ins
jae
mov
das
test
in
jg
das
movs
js
not
or
push
call
dec
sub
(bad)
(bad)
call
pop
inc
xchg
daa
sub
(bad)
cwde
jg
dec
stos
xchg
jae
jae
iret
pop
pop
les
inc
sbb
mov
dec
retf
push
and
sub
jmp
(bad)
(bad)
(bad)
mov
adc
jp
adc
and
addr16
nop
mov
push
or
or
or
and
fmul
clc
push
jge
and
or
and
dec
dec
push
fs
shr
loopne
mov
(bad)
out
jg
dec
std
xlat
and
push
add
outs
adc
ret
mov
jo
jb
mov
sbb
cdq
add
lods
push
(bad)
(bad)
(bad)
(bad)
(bad)
in
mov
sbb
shl
sbb
mov
jmp
dec
ins
mov
jne
(bad)
(bad)
(bad)
jmp
inc
test
mov
or
int3
jmp
dec
fist
or
mov
movs
add
mov
dec
test
fild
xor
or
mov
pop
ret
lods
and
(bad)
int
adc
stos
mov
(bad)
push
fidivr
mov
std
scas
test
cmp
dec
cmps
sbb
popa
stos
push
and
fdivr
jmp
loop
lahf
and
(bad)
pusha
ja
sub
xor
loope
(bad)
jmp
or
test
pusha
popf
fisttp
cmp
push
retw
pop
jo
xchg
sar
sbb
(bad)
(bad)
(bad)
mov
outs
out
mov
ret
and
leave
xchg
adc
cmc
mov
inc
push
rcl
pop
rcr
test
fdiv
ins
pop
push
call
mov
call
(bad)
outs
mov
inc
scas
xchg
jmp
mov
jb
jns
retf
cs
cli
pop
fwait
sub
ins
(bad)
(bad)
shl
jbe
mov
(bad)
cmp
mov
mov
sub
ds
jmp
jae
pop
xlat
(bad)
pop
inc
xchg
movs
fdivr
(bad)
push
adc
out
mov
dec
scas
jp
jb
mov
loop
lods
in
jecxz
(bad)
(bad)
in
jmp
hlt
jb
out
push
jg
dec
xchg
or
loop
mov
sub
stos
out
jns
jns
xchg
(bad)
(bad)
(bad)
(bad)
jnp
sub
cmp
pop
push
es
mov
pop
test
js
in
dec
mov
jl
or
call
mov
shl
jno
test
js
xlat
sub
mov
xchg
stos
dec
and
(bad)
jmp
(bad)
mov
and
inc
inc
push
cmps
and
add
or
dec
mov
mov
test
aam
sub
stos
shl
pop
push
test
cmp
mov
ins
add
pusha
std
dec
add
cmp
ja
(bad)
mov
mov
add
call
loopne
jge
add
std
xchg
dec
mov
test
(bad)
push
mov
push
mov
xchg
test
pop
in
fimul
inc
push
mov
push
cmp
test
ret
rol
das
push
sub
ja
sar
jp
in
sub
mov
int3
mov
fst
sti
add
adc
xchg
push
sar
or
rol
push
or
(bad)
push
cmp
cmp
xchg
add
adc
jb
arpl
movs
stos
imul
aaa
cld
jge
(bad)
test
adc
jl
xor
sar
hlt
push
pushf
cwde
jl
repnz
rcl
adc
jg
dec
ss
in
int3
dec
dec
gs
inc
push
imul
icebp
(bad)
(bad)
jmp
xchg
pushf
scas
mov
sub
ja
sbb
mov
mov
imul
out
xor
lods
gs
cmp
clc
cs
mov
std
push
xchg
mov
aas
xchg
inc
and
(bad)
mov
inc
add
outs
mov
retf
in
add
fcmove
cmp
loopne
cmc
or
(bad)
jmp
(bad)
bsr
pop
dec
int
dec
iret
popa
iret
inc
pop
inc
pusha
jmp
loop
test
add
neg
(bad)
push
adc
setle
jbe
(bad)
push
xchg
push
pop
scas
mov
mov
xor
cmp
and
inc
out
xchg
repz
pop
(bad)
push
push
test
mov
loopne
sub
mov
cmp
and
ins
jne
lahf
ins
retf
nop
lea
retf
mov
dec
add
int3
xchg
aaa
dec
mov
je
das
jbe
call
or
jmp
jg
ins
inc
sub
sbb
mov
and
out
mov
lods
jmp
adc
shr
lea
push
(bad)
(bad)
(bad)
(bad)
in
mov
adc
pop
call
xor
into
lds
xchg
xchg
retf
xor
(bad)
(bad)
in
push
and
call
xchg
into
(bad)
pop
jge
cdq
retf
in
push
sub
sub
xor
(bad)
fistp
and
push
or
cdq
mov
dec
cmp
jecxz
pop
imul
mov
jecxz
pop
hlt
(bad)
(bad)
(bad)
fild
sub
mov
jns
push
push
in
pushf
mov
add
push
mov
test
mov
cmp
movs
cdq
push
loopne
scas
int3
cs
jecxz
(bad)
(bad)
pop
sub
fs
pop
aad
xor
mov
imul
(bad)
(bad)
mov
fldcw
or
mul
push
adc
push
bound
les
mov
adc
mov
aam
call
xchg
dec
push
jbe
xor
adc
arpl
(bad)
(bad)
mov
jnp
xlat
scas
jl
pop
xor
inc
dec
mov
(bad)
ins
jge
jl
sub
jp
cld
shr
mov
(bad)
jg
cli
mov
cld
dec
lahf
jmp
inc
sbb
mov
or
xchg
loop
and
cmp
int
idiv
add
or
enter
test
mov
jne
inc
pop
rcr
inc
mov
or
sub
jp
cmps
js
cs
inc
or
mov
cmp
push
in
cmp
adc
mov
xor
inc
imul
lods
es
sbb
xchg
pop
dec
js
aam
push
add
jnp
dec
add
std
retf
(bad)
mov
and
ret
dec
rdtsc
and
(bad)
push
pushf
xor
mov
mov
ret
into
jg
jmp
pushf
fdivr
loope
sbb
(bad)
(bad)
(bad)
inc
rol
push
mov
loop
push
stos
adc
and
push
push
cmps
or
icebp
jno
adc
xor
cmps
inc
call
loope
ret
daa
lock
add
mov
call
mov
sub
xor
ins
call
mov
int3
mov
(bad)
dec
mov
jo
ds
dec
inc
loop
retf
cld
fdivr
dec
mov
mov
clc
lock
lods
scas
das
test
clc
(bad)
jg
sub
out
jmp
retf
sub
fcmovne
fld
cmc
fstp
jle
in
js
mov
cdq
fldcw
ss
jecxz
xchg
xchg
or
shl
dec
into
pop
dec
fidivr
test
push
sub
mov
push
fs
push
xchg
push
fldenv
(bad)
(bad)
inc
sbb
xchg
jmp
mov
sahf
inc
inc
push
add
mov
and
(bad)
call
mov
mov
mov
or
daa
jmp
mov
push
les
dec
adc
xchg
jo
ss
jg
in
xor
push
fsub
jp
add
(bad)
call
ret
lods
stos
jns
cmp
pop
dec
or
jp
cwde
jbe
xor
cmc
pop
add
inc
jmp
aam
ss
inc
push
xor
std
push
push
inc
xchg
xchg
sub
call
cmp
(bad)
(bad)
jg
in
sub
jecxz
les
fnstenv
push
repz
or
sub
imul
mov
mov
loopne
(bad)
scas
add
or
rcr
mov
arpl
jae
pop
mov
mov
dec
jmp
sbb
nop
test
call
call
jg
stos
xor
jmp
push
out
pop
shl
test
(bad)
dec
xchg
add
dec
and
lods
cld
adc
mov
sti
adc
and
test
lods
stos
div
and
(bad)
(bad)
push
leave
pop
movs
and
test
push
and
sub
pop
int3
shl
sub
(bad)
(bad)
fild
(bad)
pop
sub
fdiv
add
mov
xacquire
inc
mov
push
clc
(bad)
(bad)
inc
sub
pop
push
lea
fisubr
pop
xchg
sub
push
in
mov
call
or
hlt
in
fadd
cmp
rcr
(bad)
(bad)
(bad)
(bad)
mov
xor
fild
movs
cmp
dec
dec
cmp
lea
fiadd
push
aaa
push
sub
ins
(bad)
(bad)
(bad)
jmp
inc
fisttp
xor
or
push
mov
xor
fcmovnbe
xchg
test
mov
fwait
mov
mov
(bad)
(bad)
(bad)
call
push
pushf
mov
out
retf
xor
sub
xchg
dec
push
mov
adc
jecxz
(bad)
jmp
gs
xor
lock
in
or
jnp
enter
ffree
mov
movs
pop
sub
and
stos
dec
cs
retf
scas
ror
pop
ja
out
(bad)
out
sbb
inc
mul
ret
and
mov
jnp
loop
lds
in
jl
mul
mov
adc
add
pop
cli
cmps
xlat
mov
mov
(bad)
jmp
stos
push
pop
repnz
cmp
test
sbb
rcl
cmps
addr16
shl
jns
stos
push
adc
fcom
clc
or
call
mov
mov
lods
sti
jno
xor
es
cmc
scas
cli
call
aas
or
sar
les
rol
mov
(bad)
fistp
cs
das
mov
cmovle
mov
cmps
and
push
and
and
cld
dec
mov
rcr
cld
sbb
push
ds
ss
jecxz
imul
jp
or
jl
mov
xor
push
push
xor
test
movs
(bad)
mov
xor
lock
pop
mov
jmp
(bad)
(bad)
mov
jo
push
nop
cs
and
enter
retf
sbb
pop
(bad)
(bad)
(bad)
cmp
adc
xchg
cs
(bad)
xchg
mov
inc
lahf
adc
pop
mov
std
jmp
sbb
mov
test
ja
scas
jns
(bad)
rcr
or
ret
or
sbb
fmul
adc
imul
jmp
ins
jmp
adc
out
addr16
ins
das
cli
(bad)
inc
pop
push
push
ins
adc
pusha
xchg
jmp
stc
(bad)
stc
mov
loopne
into
(bad)
(bad)
(bad)
push
push
cwde
iret
pop
rol
bound
ins
fsubr
test
in
xchg
mov
inc
hlt
bound
push
lods
lock
mov
sub
jb
dec
dec
push
test
adc
and
ss
(bad)
call
jae
je
sbb
in
cmp
pushf
inc
inc
sub
cmp
mov
(bad)
(bad)
push
sbb
jmp
test
addr16
inc
hlt
cmp
or
clc
inc
hlt
fisttp
imul
(bad)
(bad)
inc
or
mov
and
in
test
xchg
mov
je
fbld
fwait
cmp
adc
lods
xchg
je
mov
lock
push
(bad)
xor
int
push
jne
outs
sub
(bad)
dec
xor
add
into
add
push
sub
arpl
jmp
push
mov
or
ss
cs
inc
nop
xchg
retf
push
add
pop
push
inc
add
cmc
cmp
psraw
call
test
addr16
(bad)
aas
xor
and
in
jecxz
pop
xor
mov
(bad)
call
xlat
dec
(bad)
mov
(bad)
aaa
ror
cmp
dec
into
sbb
lods
inc
xchg
(bad)
(bad)
dec
cmp
mov
pop
shl
sbb
dec
popf
cmp
sar
int
add
call
cwd
cli
das
(bad)
icebp
pop
in
dec
cmps
sub
jp
mov
(bad)
(bad)
jmp
inc
cmp
test
js
call
or
cmp
test
stos
dec
shl
(bad)
fnstsw
movs
mov
lods
or
mov
jns
pop
add
jg
and
lea
and
shr
call
push
cmps
xchg
or
xchg
or
mov
push
out
fcomip
stos
(bad)
pop
adc
shr
mov
shl
test
call
lea
pop
sub
jb
push
iret
sar
or
cmps
mov
cmps
dec
adc
xchg
mov
rcpps
pusha
or
dec
sar
push
out
sbb
xlat
pop
ins
mov
cmp
stc
cdq
cmc
xchg
sub
ja
fmul
aam
xchg
jmp
mov
and
mov
push
jmp
loope
mov
jmp
pop
mov
test
mov
push
mov
xchg
dec
shl
or
call
mov
dec
loop
jno
push
inc
les
lea
inc
lods
int
fisttp
mov
aad
imul
dec
inc
pop
sub
retf
jo
jecxz
mov
mov
cwde
fadd
call
dec
enter
cwde
sub
in
stos
push
sbb
add
jb
and
nop
call
pop
(bad)
shl
jns
inc
and
jns
xchg
jg
mov
lods
pop
cmps
mov
(bad)
mov
movs
(bad)
inc
jecxz
lods
mov
lock
(bad)
(bad)
(bad)
mov
out
test
sub
inc
dec
mov
inc
imul
rep
(bad)
std
idiv
ss
call
sbb
xchg
jmp
mov
popf
call
out
repnz
(bad)
inc
xchg
mov
jecxz
cs
inc
push
and
sbb
push
or
pop
adc
push
les
(bad)
call
cli
jmp
adc
fistp
(bad)
mov
test
cmp
repnz
mov
test
call
rol
jo
adc
or
out
mov
aaa
adc
(bad)
(bad)
dec
mov
push
dec
sub
stos
inc
bound
gs
pop
(bad)
int
xor
adc
or
hlt
rcr
fist
fyl2xp1
int3
xlat
clc
loope
cmps
sti
call
fcomp
inc
paddsw
add
mov
imul
(bad)
ins
ret
aam
inc
adc
call
adc
jp
mov
xchg
xchg
push
mov
rol
call
xor
inc
sbb
inc
dec
add
sbb
push
or
push
dec
add
(bad)
fistp
mov
mov
jge
data16
pop
xchg
out
cmps
and
aad
jp
stos
in
nop
sub
xor
in
jo
outs
mov
dec
cmp
jnp
mov
rcr
call
inc
sub
ret
cmp
je
adc
xchg
loop
dec
pushf
cmp
(bad)
push
sti
mov
cli
mov
fdivr
mov
movs
or
mov
aam
mov
cmps
(bad)
jmp
shl
jo
sti
sbb
cli
sar
cmp
cmp
call
ror
arpl
std
mov
pop
ret
in
movs
fbstp
ins
jp
mov
dec
dec
adc
mov
cmp
mov
pop
ret
in
push
inc
add
test
cmp
xchg
pop
jae
lods
mov
xchg
into
leave
lods
push
cs
(bad)
mov
loopne
add
mov
xchg
es
sub
push
jb
mov
mov
(bad)
(bad)
jg
inc
jge
cmp
push
fdiv
std
add
pop
cld
push
fdivr
sbb
in
sub
dec
sbb
(bad)
(bad)
icebp
inc
cmp
and
xchg
mov
stc
or
inc
cdq
outs
cld
adc
stc
neg
mov
jmp
sbb
pop
lock
nop
aaa
sub
imul
sub
mov
xlat
or
dec
pushf
aad
cmp
jmp
mov
(bad)
jg
xor
outs
jg
lds
pop
das
int3
int
(bad)
jmp
mov
pusha
sub
fcomp
sbb
push
call
jbe
or
ret
pop
jmp
call
int3
int3
push
push
repz
out
mov
rcr
ins
sub
cld
arpl
cmp
sbb
dec
or
xchg
inc
inc
inc
mov
cmc
arpl
retf
or
dec
ret
pop
push
add
fwait
das
cmp
mov
adc
mov
cld
jmp
sbb
or
or
cwde
sbb
dec
inc
add
cmp
call
cld
xchg
lods
or
js
xor
movs
loopne
jbe
(bad)
adc
cmps
mov
outs
pop
loopne
mov
jb
cdq
sub
addr16
mov
mov
int3
icebp
clc
mov
shl
mov
sub
retf
or
sub
test
sbb
(bad)
clc
(bad)
mov
inc
xchg
lods
sub
mov
cmps
data16
fidiv
adc
movs
jp
into
lods
repnz
inc
push
push
mov
lds
iret
imul
inc
test
test
push
arpl
cmp
out
xchg
pop
and
jbe
daa
(bad)
(bad)
(bad)
jmp
fist
scas
jmp
addr16
dec
push
mov
je
mov
ret
sub
in
sbb
push
ja
stos
cmc
outs
aaa
icebp
push
push
outs
fisttp
cld
(bad)
inc
or
int3
push
add
jecxz
shl
shr
dec
mov
pop
fistp
or
and
ja
sar
xchg
push
mov
(bad)
fidivr
mov
lods
rol
icebp
(bad)
mov
sub
test
(bad)
mov
(bad)
call
xchg
(bad)
fucom
in
dec
lea
inc
mov
cmps
(bad)
call
add
add
stos
aas
or
jmp
loopne
(bad)
jmp
cli
fisttp
cmovno
popf
ss
sbb
(bad)
or
jge
(bad)
out
jl
jge
cmp
dec
xor
mov
in
and
xchg
mov
xchg
and
add
jo
aad
(bad)
inc
pop
pop
cmp
(bad)
fmul
xor
arpl
cmp
sbb
fcomp
pop
inc
(bad)
mov
jmp
push
or
xor
adc
shr
mov
cmp
lea
(bad)
mov
jge
sub
jge
daa
daa
inc
jge
xchg
mov
jbe
je
cmp
(bad)
(bad)
(bad)
call
(bad)
je
add
out
clc
aad
mov
lods
das
xchg
ja
int3
iret
mov
es
pmaxub
lahf
call
adc
das
inc
xlat
cli
lods
cwde
cmp
sbb
mov
jge
or
(bad)
fiadd
leave
dec
dec
cmp
jge
movs
(bad)
(bad)
jg
call
pop
xor
(bad)
sti
adc
ins
add
mov
xchg
push
rcl
mov
fisttp
idiv
in
mov
jb
dec
cld
mov
out
xchg
scas
pop
mov
xchg
(bad)
(bad)
(bad)
in
jg
dec
inc
test
xchg
and
push
(bad)
or
ins
out
call
and
(bad)
(bad)
jmp
out
js
or
syscall
pop
inc
or
push
stos
aam
xor
mov
dec
and
jmp
pop
sbb
jmp
pop
inc
lea
in
push
and
push
xor
adc
cmp
ret
mov
sbb
or
(bad)
(bad)
(bad)
call
cs
dec
sbb
ficomp
(bad)
clc
pop
dec
imul
cmps
icebp
call
mov
jne
mov
scas
add
push
cld
(bad)
in
int3
scas
lds
(bad)
(bad)
dec
cs
lods
or
xlat
jmp
push
mov
inc
and
push
call
mov
push
jbe
xor
ins
(bad)
pusha
add
xor
icebp
xchg
pop
repz
loopne
daa
push
loope
(bad)
(bad)
(bad)
dec
cmp
scas
cld
xor
lock
daa
jo
mov
das
mov
jnp
xor
xor
cmp
or
call
jl
dec
mov
pop
fild
hlt
out
xchg
jno
sub
mov
(bad)
push
(bad)
or
mov
xchg
pop
cdq
fiadd
push
mov
cmp
pop
iret
cdq
stc
push
sbb
inc
or
(bad)
jmp
out
sbb
add
test
(bad)
(bad)
call
jbe
es
fld
sub
pop
sub
lds
cmp
adc
scas
fwait
inc
lds
sbb
ins
cld
lods
xor
movs
test
loop
outs
mov
mov
adc
(bad)
jmp
pusha
jno
and
and
pop
push
sub
add
xlat
jno
int
pusha
retf
push
ins
bnd
sbb
bound
inc
adc
call
(bad)
(bad)
mov
imul
xchg
les
push
addr16
lea
inc
aam
jne
lock
(bad)
mov
imul
sub
lds
int
adc
jl
mov
dec
mov
int3
sbb
dec
hlt
adc
data16
dec
jp
(bad)
jmp
dec
popf
mov
sahf
int
(bad)
lahf
xor
jp
sub
and
ss
xlat
push
lea
jecxz
(bad)
jmp
lds
scas
or
jne
in
xchg
and
add
cmp
pop
inc
(bad)
outs
mov
and
xor
aad
push
(bad)
fcmovbe
out
push
add
adc
retf
sbb
pushf
inc
dec
push
ds
sbb
call
mov
mov
adc
ins
ret
ins
sub
(bad)
call
cmp
dec
int3
bound
test
stc
loope
mov
cld
addr16
ret
ss
jne
hlt
(bad)
inc
movs
pop
sbb
or
sub
and
cmp
rcl
out
add
jmp
push
inc
xor
(bad)
mov
sbb
call
(bad)
jmp
pop
mov
sahf
adc
aam
pop
call
dec
int
or
pop
ins
jmp
pop
cmp
ins
cmp
sbb
lods
rcl
jno
call
dec
js
hlt
(bad)
mov
mov
lahf
icebp
in
adc
popf
or
xchg
cwde
sub
mov
dec
push
call
dec
sub
jmp
popf
test
sbb
hlt
inc
(bad)
jo
adc
call
(bad)
(bad)
(bad)
push
jns
sub
lock
ja
add
fwait
mov
rcr
pop
inc
mov
xor
(bad)
(bad)
(bad)
cld
adc
in
cmps
mov
dec
or
xor
ret
push
jnp
scas
and
sti
(bad)
(bad)
(bad)
cmp
pop
inc
xchg
imul
add
jno
das
sbb
mov
(bad)
mov
ja
and
popf
or
cmc
(bad)
jg
cmp
xor
movs
mov
pop
ds
or
(bad)
fstp
xchg
dec
inc
lahf
xlat
xlat
aas
loopne
add
outs
jl
push
pop
je
pop
(bad)
test
xchg
inc
mov
sbb
sub
or
sub
push
test
gs
push
cmps
xor
inc
jmp
aam
add
sbb
fst
or
clc
sbb
test
or
(bad)
call
xchg
(bad)
outs
ret
and
cli
sbb
mov
dec
call
pop
jne
jbe
mov
pop
leave
test
ret
popa
scas
in
(bad)
jmp
push
mov
cmp
pusha
jo
out
icebp
jmp
pop
leave
mov
(bad)
(bad)
(bad)
(bad)
cmp
xchg
xor
(bad)
dec
daa
retf
pop
test
call
mov
dec
(bad)
leave
xor
mov
(bad)
(bad)
call
mov
sub
sar
xor
xchg
ins
push
movs
push
leave
cwde
or
inc
adc
psrad
push
sbb
out
adc
(bad)
(bad)
(bad)
jmp
data16
jmp
stos
lods
push
jo
shl
scas
call
and
push
mov
dec
dec
dec
pushf
jg
call
mul
lock
dec
sbb
mov
out
cmps
cdq
jg
xchg
mov
jp
clc
lock
ins
shl
mov
(bad)
jg
and
ror
and
or
and
pop
call
cmp
mov
cmp
out
popf
(bad)
mov
sub
fidivr
sbb
jg
mov
pop
xchg
jo
pop
mov
cmps
repz
aam
mov
xor
setne
inc
shl
dec
es
jmp
scas
(bad)
fcomip
jg
adc
and
mov
pop
in
fnstsw
adc
adc
icebp
add
sar
bound
mov
xor
loop
in
jnp
xor
jp
hlt
pop
dec
dec
sahf
pop
adc
and
push
or
ins
aam
pop
adc
inc
push
iret
icebp
jnp
mov
push
(bad)
(bad)
call
xor
mov
and
lods
mov
inc
add
aad
test
(bad)
call
out
xchg
sub
dec
cwde
add
in
push
or
(bad)
cmp
jp
inc
ja
gs
jmp
fcomp
(bad)
(bad)
jmp
push
xor
fbld
mov
loop
mov
gs
fadd
hlt
dec
cdq
outs
retf
push
mov
pop
test
int3
dec
(bad)
jmp
push
mov
in
pop
lds
mov
div
shl
xchg
adc
mov
and
sbb
dec
push
repnz
push
adc
js
jg
inc
push
stc
(bad)
push
sub
sbb
and
jmp
mov
jecxz
xchg
push
movs
pushf
inc
pop
jne
inc
int
aam
fdivr
fistp
ret
mov
jne
sbb
jno
xchg
mov
jg
xchg
push
fld
fild
mov
call
push
and
test
mov
popf
and
int3
clc
fild
xor
jge
repnz
push
sub
cli
mov
cdq
cmp
fldenv
push
retf
loop
cdq
push
cmp
push
test
scas
xor
adc
loope
mov
call
push
movs
xchg
popf
push
arpl
int3
cmps
sti
inc
popf
ins
ds
xor
das
ins
(bad)
cmps
in
gs
loopne
mov
call
mov
int
int3
stos
mov
jg
jg
rcr
in
dec
and
xchg
arpl
xlat
scas
in
fwait
js
(bad)
(bad)
(bad)
(bad)
cli
iret
es
or
add
sub
push
scas
(bad)
imul
or
(bad)
(bad)
(bad)
(bad)
call
pop
dec
or
mov
mov
dec
test
shl
retf
inc
pop
add
inc
pop
repz
cwde
cmp
(bad)
stos
push
paddd
sar
rcr
hlt
js
(bad)
xchg
(bad)
(bad)
(bad)
push
sub
loopne
pop
xor
stos
adc
ret
push
mov
loopne
add
(bad)
(bad)
(bad)
call
or
scas
sbb
pop
push
fbld
ret
xchg
cmp
outs
inc
pop
aaa
std
push
push
ds
movs
inc
sbb
fisttp
(bad)
(bad)
fild
pop
inc
addr16
ss
xor
loope
(bad)
das
sahf
cli
adc
inc
sub
sub
mov
mov
daa
jle
ret
je
out
push
mov
lahf
cwde
adc
xchg
retf
lahf
std
pop
cld
(bad)
jmp
pop
cmps
sar
jge
mov
jle
mov
adc
mov
(bad)
(bad)
(bad)
jmp
add
pop
mov
ret
cmp
cmps
mov
mov
(bad)
std
out
mul
or
(bad)
(bad)
inc
aaa
popa
call
scas
fidiv
pop
adc
mov
shl
adc
(bad)
call
aas
cmp
pushf
aad
fld
or
jmp
les
inc
popf
adc
in
push
pop
xchg
and
jmp
dec
pop
in
add
pop
and
or
mov
inc
adc
add
inc
shl
jge
jmp
loop
jmp
into
loopne
jo
dec
(bad)
mov
mul
rcr
int3
xor
push
lods
(bad)
(bad)
fsub
dec
dec
cli
pop
(bad)
mov
and
jmp
dec
sahf
jb
push
repnz
pop
dec
xor
xor
adc
dec
cmp
dec
sahf
sbb
imul
(bad)
(bad)
(bad)
call
cmp
sub
and
(bad)
cmp
add
call
test
mov
movs
ja
ror
sbb
adc
add
(bad)
inc
xor
sbb
addr16
rep
loope
pop
mov
cmp
test
jbe
call
lahf
loope
aaa
pop
mov
push
jl
or
call
push
sub
sub
addr16
and
or
(bad)
(bad)
(bad)
call
push
movs
lahf
leave
push
div
xor
mov
fbstp
enter
cmps
xor
fstp
mov
pop
xchg
pop
and
shl
jg
inc
std
dec
out
(bad)
pop
out
jmp
adc
(bad)
inc
hlt
gs
pop
int
dec
(bad)
mov
push
outs
and
xor
dec
xchg
int
mov
push
xor
retf
lock
fcomip
jmp
pop
push
jmp
mov
shl
mov
stc
or
(bad)
jmp
fcmovnbe
pusha
clc
push
and
inc
fadd
mov
div
(bad)
(bad)
(bad)
inc
and
jge
out
icebp
mov
pop
imul
or
and
xor
add
(bad)
(bad)
(bad)
cmp
test
xchg
mov
jno
mov
sub
push
jmp
mov
xchg
jge
in
(bad)
(bad)
push
pop
sub
pop
adc
xor
sbb
push
sub
jno
add
jmp
mov
adc
lods
add
sub
(bad)
jmp
xchg
cmps
test
ins
cmp
inc
mov
inc
leave
js
jmp
jmp
jmp
shl
retf
in
sbb
dec
dec
ficom
(bad)
call
dec
test
test
leave
sbb
push
cmp
sub
mov
loopne
dec
call
inc
mov
stos
(bad)
(bad)
(bad)
call
pop
push
mov
cmp
stc
cli
dec
pop
les
jl
pop
addr16
inc
cli
jb
or
cmp
(bad)
(bad)
dec
js
rol
inc
sub
jmp
mov
(bad)
(bad)
dec
(bad)
mov
sbb
mov
cwde
fcom
mov
push
ret
out
out
(bad)
dec
movs
out
adc
fdivr
jmp
test
or
jp
xor
retf
scas
scas
cwde
test
jp
aam
pop
adc
mov
(bad)
mov
cld
inc
xchg
sub
cmp
es
test
js
aad
add
movs
or
(bad)
(bad)
(bad)
jmp
inc
pop
test
and
mov
xchg
dec
test
cdq
mov
jae
mov
jmp
dec
and
mov
ja
mov
xchg
sub
and
xchg
lods
cmp
and
or
cdq
(bad)
stos
retf
(bad)
adc
(bad)
(bad)
call
cmp
ret
jne
jge
pop
cld
fdiv
push
pop
sar
mov
shl
xchg
(bad)
(bad)
jg
out
hlt
cmp
adc
out
cmp
sti
sahf
js
dec
fdivr
push
ins
jnp
fwait
mov
popa
push
mov
(bad)
dec
stc
cmc
dec
mov
movs
outs
inc
mov
das
ja
mov
test
mov
cld
sub
pop
dec
add
mov
pop
mov
hlt
out
sbb
fiadd
(bad)
(bad)
jmp
mov
cmc
fsubr
arpl
(bad)
fdivr
mov
in
mov
addr16
pusha
imul
(bad)
(bad)
call
add
mov
sbb
mov
push
jns
pop
mov
mov
(bad)
(bad)
(bad)
jp
dec
mov
outs
xor
ret
sbb
movs
cdq
leave
dec
cwde
imul
loope
jo
mov
iret
rcr
daa
inc
adc
cld
ja
xchg
mov
mov
push
push
mov
add
push
jb
push
inc
cwde
inc
div
mov
adc
aas
cmp
sahf
nop
sub
xchg
jecxz
scas
scas
mov
shl
ins
test
(bad)
push
cmp
inc
add
int
mov
mov
adc
xlat
dec
aas
xchg
jmp
cwde
nop
inc
jp
add
mov
aaa
adc
adc
dec
shl
js
mov
pushf
push
int
lock
lods
push
clc
in
xchg
cdq
clc
pop
leave
mov
pop
xor
add
and
or
cli
mov
sbb
sar
inc
add
mov
jmp
std
adc
jecxz
(bad)
jg
iret
and
jl
xor
jle
jg
icebp
cdq
clc
xchg
mov
(bad)
jmp
inc
leave
rol
pop
sbb
mov
adc
fcomip
cmp
(bad)
push
psrld
mov
cli
pop
addr16
cmp
dec
inc
inc
ds
pop
cmp
hlt
mov
xor
std
retf
fbld
and
xchg
(bad)
(bad)
(bad)
call
xchg
sbb
mov
aad
sub
mov
ds
inc
fsub
scas
inc
(bad)
(bad)
(bad)
call
sbb
push
test
vpcmpgtd
inc
adc
mov
and
push
inc
xchg
(bad)
(bad)
mov
jmp
mov
cdq
inc
adc
inc
adc
(bad)
(bad)
(bad)
mov
sbb
xlat
xchg
mov
cmps
enter
not
jb
or
xor
ret
push
and
dec
mov
and
push
shl
fist
je
and
xor
test
in
cmp
lahf
inc
test
or
ror
ins
sub
jmp
jnp
call
inc
cmp
lods
push
xchg
test
inc
or
pop
(bad)
push
in
push
std
mov
mov
loope
aam
push
cmps
push
mov
(bad)
(bad)
(bad)
inc
xor
pushf
xor
jbe
add
shl
jns
push
mov
lods
cmps
inc
ds
call
cmc
sbb
aad
dec
mov
dec
imul
and
mov
scas
cli
fwait
je
rcr
es
sbb
push
add
out
mov
out
ins
sahf
fstp
cdq
add
push
cmps
test
jbe
sub
xor
aas
in
scas
mov
test
add
pop
gs
jo
add
mov
(bad)
(bad)
jmp
jae
jmp
int3
ret
imul
aas
dec
xlat
ins
data16
mov
mov
and
ss
bound
xor
popa
add
mov
fs
mov
cmps
sahf
fnstcw
jmp
je
aas
fiadd
imul
ss
enter
pop
and
cli
ret
pop
sar
das
sar
sbb
ret
imul
in
sub
push
rcl
stos
push
call
dec
dec
cmps
or
loop
and
push
adc
push
pop
push
xchg
(bad)
inc
(bad)
(bad)
(bad)
call
or
dec
or
int3
adc
pop
mov
out
inc
pop
xchg
xor
jns
jl
(bad)
jmp
(bad)
pop
rol
lods
and
xchg
push
daa
loope
pop
ror
(bad)
jg
ins
push
aaa
push
sbb
test
repnz
mov
dec
jbe
jmp
push
xchg
scas
push
jns
(bad)
(bad)
push
xchg
xchg
push
(bad)
dec
mov
push
xor
push
lods
cmps
les
mov
out
mov
jmp
inc
out
sti
sbb
out
clc
ja
out
(bad)
das
clc
(bad)
mov
cwde
cmp
retf
dec
dec
dec
popa
ret
mov
mov
push
inc
cmp
loopne
not
push
mov
or
je
or
hlt
pop
jmp
dec
(bad)
mov
jmp
clc
stc
sbb
ja
cld
(bad)
jmp
cmp
clc
jns
out
xchg
shr
out
push
(bad)
pop
(bad)
(bad)
jg
xor
mov
adc
mov
vrcpps
or
das
add
cwde
sub
pushf
jmp
fnstcw
sub
mov
mov
lea
inc
and
inc
outs
inc
je
int3
iret
sub
(bad)
(bad)
(bad)
(bad)
jmp
xchg
inc
nop
xchg
pushf
lahf
xchg
sbb
xor
cdq
adc
std
sub
sub
cli
xchg
or
gs
mov
fld
push
add
sbb
(bad)
call
popa
iret
leave
mov
aaa
adc
ficom
(bad)
clc
xchg
out
jg
call
sub
sbb
inc
jmp
adc
(bad)
inc
rcl
fild
push
outs
aas
mov
(bad)
mov
fucomip
mov
aas
div
or
xor
(bad)
(bad)
inc
les
jmp
fdiv
outs
cli
sar
loop
add
xor
(bad)
jg
fdiv
mov
loopne
jno
push
add
or
paddd
jl
jae
or
aas
or
cld
das
cli
call
stc
dec
mov
dec
enter
movs
retf
std
into
test
push
pop
pop
dec
aaa
shr
adc
call
inc
pop
mov
mov
lods
call
jb
mov
pop
push
jbe
fdivr
inc
pop
(bad)
(bad)
cmp
dec
and
lock
and
jg
inc
fdivr
dec
xor
call
loopne
adc
repnz
mov
pop
out
gs
ds
mov
jae
inc
lods
out
mov
(bad)
(bad)
(bad)
jmp
and
pop
dec
mov
push
xor
and
dec
rcr
fs
sub
jmp
shl
addr16
cdq
aad
sbb
inc
(bad)
pop
sub
or
(bad)
dec
push
inc
jns
mov
or
xor
shl
test
inc
fnsave
dec
(bad)
(bad)
(bad)
push
inc
lds
cmps
xor
fiadd
add
je
or
clc
sbb
mov
(bad)
(bad)
push
(bad)
loope
in
fisub
lahf
bound
popa
pop
ror
adc
and
ss
xchg
sbb
movs
ja
or
ja
cmps
push
jmp
(bad)
(bad)
(bad)
call
outs
sti
fisttp
mov
mov
scas
(bad)
mov
sub
dec
xor
iret
(bad)
(bad)
(bad)
call
addr16
mov
mov
and
outs
lods
sti
inc
mov
cmps
ss
rol
(bad)
(bad)
jmp
outs
xlat
rcr
and
push
call
fs
xchg
mov
mov
dec
mov
(bad)
(bad)
(bad)
jmp
pop
ins
dec
mov
jbe
jecxz
stos
cmps
in
popa
xchg
ins
cdq
data16
push
pop
aad
(bad)
call
lods
int
mov
push
ins
mov
frstor
aam
add
jg
xor
fisub
aaa
cmps
aad
lock
jmp
adc
jae
scas
mov
sub
lods
or
test
scas
cli
call
push
pop
push
ret
cld
pop
push
loop
mov
popf
movs
ja
pop
mov
aaa
std
dec
jo
adc
mov
mov
std
and
cli
fild
shl
sub
(bad)
mov
sub
and
je
scas
scas
mov
and
xor
(bad)
(bad)
(bad)
jmp
xchg
mov
inc
or
jg
jns
sbb
test
in
mov
mov
(bad)
mov
mov
sbb
mov
or
repnz
retf
(bad)
(bad)
(bad)
ficom
mov
pop
mov
mov
(bad)
inc
and
xchg
mov
pop
or
int3
icebp
(bad)
(bad)
jmp
cli
sahf
sub
sbb
jp
sbb
xor
mov
or
fcmove
sub
out
loope
inc
cwde
fwait
aad
sbb
ds
sbb
push
xchg
call
in
dec
jns
call
test
(bad)
mov
int
push
inc
mov
pop
dec
push
hlt
(bad)
jmp
mov
pop
mov
mov
in
xor
inc
repnz
cwde
(bad)
(bad)
(bad)
(bad)
xchg
mov
and
ldmxcsr
pop
out
repz
pushf
scas
cld
(bad)
(bad)
(bad)
jge
sbb
jae
sbb
test
addr16
popa
inc
outs
out
and
stc
xchg
jg
mov
mov
int3
shl
int
mov
mov
sub
ret
(bad)
(bad)
(bad)
mov
ja
je
(bad)
lods
sbb
jecxz
inc
(bad)
fld
push
addr16
adc
(bad)
(bad)
(bad)
jmp
inc
adc
and
add
jg
adc
inc
js
ret
sub
xlat
movs
and
sbb
xchg
push
adc
jp
sar
cdq
(bad)
add
aaa
sbb
cmp
(bad)
call
rcl
outs
sbb
mov
shl
(bad)
adc
cmp
cmp
das
mov
fbld
push
xchg
call
(bad)
mov
clc
sti
mov
xchg
inc
leave
mov
sysret
popa
xor
push
stos
xchg
movs
pop
loope
lock
jns
and
inc
push
cmp
add
fstp
clc
sub
mov
loop
push
add
movs
dec
js
shl
lock
loopne
jmp
sar
shl
push
stc
jne
(bad)
lock
mov
jmp
movd
(bad)
cli
mov
and
mov
fsubr
inc
arpl
out
icebp
xchg
ficom
(bad)
(bad)
(bad)
call
jp
sar
jbe
xchg
xchg
(bad)
mov
popf
sbb
inc
daa
jbe
jg
(bad)
mul
or
sar
outs
std
div
adc
inc
jo
jo
xlat
aad
(bad)
mov
jnp
push
fmul
ret
xchg
call
jno
or
mov
mov
mov
cmp
movs
out
mov
fdiv
jmp
mov
xor
repz
call
in
iret
inc
cdq
or
stos
popf
movs
inc
and
push
sahf
test
das
sbb
jae
pusha
adc
or
retf
adc
push
into
aad
mov
lahf
mov
xchg
and
jp
jmp
or
push
not
aam
push
mov
call
push
pop
in
jge
popf
cwde
imul
(bad)
(bad)
(bad)
call
push
xor
sbb
out
call
xor
inc
call
jno
mov
cmp
cmps
dec
mov
call
adc
test
sbb
xlat
rcl
ins
(bad)
(bad)
call
push
jo
les
pusha
popf
add
push
ret
loop
out
mov
inc
jb
mov
(bad)
(bad)
jg
xor
push
(bad)
mov
jmp
popa
jns
jmp
imul
(bad)
call
and
enter
jnp
out
(bad)
(bad)
(bad)
call
hlt
lods
loop
jbe
(bad)
pminsw
fabs
pop
sbb
cmp
sbb
mov
pop
push
pop
imul
cmp
(bad)
(bad)
out
(bad)
ds
aas
mov
dec
arpl
jne
in
retf
ss
mov
shl
(bad)
call
stc
add
and
fs
icebp
sub
pop
fs
in
ins
nop
jmp
fmul
(bad)
dec
dec
mov
sub
inc
cmp
mov
out
pushf
enter
loop
mov
cli
scas
icebp
pop
mov
mov
xor
sub
xchg
add
stos
adc
mov
jne
retf
xchg
call
ins
jmp
movs
aad
adc
jne
mov
rcl
(bad)
adc
movs
in
push
std
test
(bad)
and
icebp
push
loop
xor
add
call
cdq
popf
sbb
out
(bad)
jnp
int
pop
cli
adc
jmp
clc
(bad)
(bad)
jmp
cmc
dec
pop
xor
mov
cmp
scas
in
mov
mov
sub
outs
xor
and
mov
ins
(bad)
js
dec
cmps
addr16
lock
inc
inc
ds
daa
fistp
jg
add
mov
frstor
pop
mov
and
sbb
xchg
lods
mov
mov
(bad)
(bad)
out
cli
push
sbb
xor
daa
mul
aad
inc
ss
jg
(bad)
(bad)
(bad)
inc
push
mov
dec
aaa
pop
cmc
cld
stos
adc
pop
add
pop
inc
(bad)
mov
fld
jno
push
dec
fidivr
clc
(bad)
jmp
and
jbe
iret
jge
in
out
fmul
add
pop
jp
lea
scas
mov
pop
int3
pop
xchg
or
xchg
or
hlt
jge
push
mov
(bad)
(bad)
dec
push
cmps
add
je
inc
pop
movs
iret
xor
sub
push
xchg
gs
arpl
out
push
les
adc
jne
mov
(bad)
cli
fnstcw
sub
iret
or
xchg
inc
add
jge
icebp
(bad)
call
and
scas
pop
sbb
xchg
daa
dec
mov
push
push
mov
cmp
or
call
ret
xchg
push
mov
cmp
adc
adc
jmp
mov
xchg
cmp
popa
mov
and
mov
and
fimul
cli
(bad)
jmp
scas
gs
arpl
push
(bad)
xor
scas
cmp
jno
xor
enter
pop
icebp
mov
clc
cmp
div
(bad)
shr
mov
int
fidivr
sbb
(bad)
(bad)
jmp
and
mov
and
jg
pusha
push
je
inc
and
movs
call
pop
xchg
dec
scas
sbb
push
pop
out
sti
aam
lock
fimul
je
dec
jle
ret
clc
int3
fwait
scas
ret
jle
mov
ss
sbb
cmp
cmps
pop
mov
xchg
fmul
stc
xchg
mov
clc
lods
ja
inc
ds
scas
jnp
int
rol
or
jo
push
sub
xor
mov
jb
scas
push
dec
push
ret
and
cdq
dec
jmp
jmp
inc
jecxz
nop
sbb
sbb
(bad)
mov
in
dec
bound
or
ror
leave
push
mov
pop
sbb
(bad)
(bad)
jmp
xor
cdq
sub
jg
mov
push
call
cs
dec
sbb
scas
or
(bad)
jmp
xor
aas
xor
mov
cmp
(bad)
and
add
push
mov
push
mov
jg
add
mov
sub
(bad)
jnp
sub
adc
(bad)
(bad)
inc
xor
cmp
arpl
sub
xchg
sub
mov
push
mov
(bad)
(bad)
(bad)
push
pop
sbb
movs
sub
xchg
iret
inc
scas
out
pop
outs
cmp
repnz
fcmovnu
fwait
loop
(bad)
pop
gs
ret
(bad)
ss
dec
ds
out
cmps
call
inc
fwait
push
pop
(bad)
lock
sub
mov
(bad)
(bad)
jl
clc
mov
dec
cmps
out
push
pop
jg
dec
call
(bad)
(bad)
out
xor
mov
mov
imul
call
scas
sbb
lock
mov
(bad)
call
cs
xchg
icebp
mov
loop
pushw
stos
sti
xlat
enter
or
and
pop
add
adc
jmp
fwait
xor
in
out
xchg
call
std
mov
inc
lods
sub
sahf
mov
dec
jae
int
ds
mov
arpl
push
xchg
fiadd
mov
(bad)
mov
rcr
lods
in
mov
fwait
sub
cmps
mov
scas
mov
sbb
pop
lock
clc
rcr
stos
int
(bad)
call
cmps
les
cdq
pop
into
xchg
cs
sub
mov
sbb
jg
cmp
push
cdq
and
push
cmps
and
inc
mov
movs
shl
push
mov
sti
repz
(bad)
(bad)
(bad)
(bad)
fdivp
ja
aad
mov
pop
sbb
jns
call
add
jbe
lahf
fadd
icebp
xor
push
lods
sbb
shr
jae
scas
xchg
sub
fwait
loopne
retf
cmp
stos
test
xor
and
xchg
std
or
mov
scas
adc
iret
push
cdq
xor
mov
jmp
movs
or
not
xchg
ins
xchg
repnz
cwde
(bad)
push
scas
xchg
ss
mov
mov
pushf
popa
fwait
dec
push
mov
adc
sub
daa
push
dec
push
mov
or
aas
ja
or
dec
or
adc
ret
mov
cmovl
bound
mov
sub
push
cmp
jmp
cli
(bad)
add
scas
fistp
jp
fnstcw
push
cmps
sar
cld
aaa
std
adc
(bad)
xchg
or
test
cs
dec
sbb
jmp
sbb
icebp
sub
(bad)
inc
rcr
test
xlat
sub
push
cli
pop
push
sub
jnp
mov
fdiv
cs
into
xchg
(bad)
fisttp
xchg
inc
loopne
jl
inc
int
pushf
dec
das
sbb
mov
add
(bad)
dec
loope
jg
bound
nop
inc
aad
pop
in
jb
add
push
daa
add
mov
jns
or
and
lock
cmp
arpl
les
(bad)
push
sbb
dec
hlt
xchg
pop
adc
pushf
test
test
(bad)
push
jns
aam
fst
fdiv
es
xor
movs
jg
jae
xchg
pop
dec
stos
sar
(bad)
push
cs
xlat
push
or
xchg
stos
sub
push
sbb
clc
aad
mov
add
jb
xor
push
mov
mov
sub
mov
fbld
arpl
adc
(bad)
jmp
jno
test
popa
jecxz
or
shl
and
jge
(bad)
inc
or
lods
push
inc
pusha
fnstsw
mov
popf
in
sbb
mov
cmc
add
out
push
(bad)
dec
jecxz
dec
pop
mov
out
sti
(bad)
call
mov
mov
adc
(bad)
sahf
mov
outs
cli
scas
outs
sub
pop
or
cmp
scas
pop
scas
ror
(bad)
(bad)
(bad)
call
xchg
das
push
fcom
les
lods
pop
test
sub
scas
clc
outs
push
rol
lahf
cld
repnz
fsubr
sub
cld
fstp
lock
(bad)
mov
(bad)
in
push
cld
(bad)
or
xchg
(bad)
aam
jo
push
stos
sar
fwait
or
leave
inc
mov
mov
outs
cs
es
cli
std
jl
leave
and
cwde
cmp
(bad)
aaa
pusha
push
push
mov
js
sub
es
(bad)
(bad)
(bad)
mov
inc
adc
cwde
push
adc
mov
sti
fs
adc
in
pop
(bad)
(bad)
fistp
add
xchg
mov
and
ret
dec
mov
test
(bad)
(bad)
fmul
retf
packssdw
push
xor
sub
cmp
ins
push
repz
xor
call
dec
(bad)
adc
mov
pop
sbb
mov
loop
dec
test
mov
sub
add
sbb
sub
xchg
jp
lods
pop
icebp
repnz
adc
test
pop
imul
jae
(bad)
(bad)
inc
fs
fcmovnbe
pop
test
mov
jb
rcl
push
outs
jno
aad
pop
test
dec
jmp
fsubr
fimul
jmp
in
(bad)
(bad)
mov
xor
and
pop
nop
in
in
mov
iret
cmc
not
stos
hlt
stos
(bad)
in
mov
(bad)
loop
std
xchg
sub
ins
dec
int
mov
(bad)
(bad)
mov
and
pop
adc
stos
jge
mov
sahf
mov
(bad)
(bad)
call
mov
pop
push
ss
dec
push
mov
sahf
ins
cmc
arpl
aas
mov
aam
(bad)
hlt
out
ss
xchg
std
ret
jae
jp
jg
idiv
popf
mov
ficomp
push
mov
cmp
mov
imul
gs
xor
ret
add
(bad)
jge
nop
loop
jnp
mov
call
mov
sbb
jo
(bad)
aad
(bad)
sbb
idiv
dec
aam
sbb
or
in
and
jmp
shl
cwde
sub
xlat
mov
(bad)
fbld
pop
loopne
lods
movs
fcomi
fisubr
gs
and
add
mov
and
shl
cdq
xchg
sub
inc
(bad)
jmp
or
jbe
xchg
add
sbb
pop
in
fdivr
cmp
jbe
leave
jbe
imul
gs
sbb
mov
push
pop
pushf
test
jmp
cmp
pop
dec
(bad)
(bad)
clc
fsub
adc
ret
mov
jl
call
mov
or
adc
lea
stos
sar
adc
je
pop
jge
adc
push
hlt
(bad)
(bad)
push
pop
fild
jp
imul
cld
add
in
out
popf
icebp
(bad)
jmp
xor
or
xchg
inc
push
cmp
ja
jmp
int3
icebp
in
mov
xchg
push
retf
adc
mov
addr16
xchg
stos
mov
adc
xchg
mov
inc
(bad)
jg
(bad)
mov
cs
clc
stos
retf
ja
adc
clc
aam
mov
(bad)
dec
je
jmp
mov
and
and
cmp
and
push
mov
aaa
and
mov
fisub
test
dec
(bad)
(bad)
(bad)
call
pushf
pop
les
outs
fst
cmps
in
sar
mov
jbe
cmp
into
and
xor
mov
fsubrp
jmp
inc
and
lods
mov
inc
aam
das
aam
push
jmp
xor
push
dec
rcl
lds
stos
add
xlat
nop
dec
mov
rcl
test
lock
jle
inc
and
add
inc
js
mov
adc
das
mov
addr16
popf
cmp
stos
push
pop
f2xm1
ja
clc
outs
lock
test
fsubr
and
mov
sbb
ss
sbb
shl
adc
jbe
call
test
inc
pop
mov
in
add
aam
pop
(bad)
(bad)
call
cmp
scas
ret
pop
fdivp
xor
mov
pop
imul
cmp
dec
mov
(bad)
inc
rcl
dec
pop
pop
mov
add
push
inc
mov
inc
cwde
pop
hlt
inc
rcl
mov
push
dec
xor
sub
inc
push
push
ret
scas
aaa
pop
sbb
inc
fstp
shufps
mov
gs
jmp
out
sbb
dec
mov
push
ret
es
fcomip
pop
mov
test
xchg
gs
pusha
inc
xchg
xor
shr
call
add
add
retf
inc
sti
fidiv
fcom
outs
fldcw
lea
mov
(bad)
(bad)
(bad)
call
ret
adc
iret
(bad)
adc
inc
mov
pop
mov
mov
(bad)
(bad)
out
pop
xchg
enter
ins
sbb
pop
sbb
push
mov
stos
push
lock
jge
test
ins
dec
dec
call
scas
shr
inc
jg
sahf
cmp
adc
ficom
pop
mov
jg
or
add
xchg
add
sub
lods
cmp
add
retf
jnp
mov
fdiv
sub
int
(bad)
call
adc
fadd
jno
mov
imul
mov
bound
shr
mov
sub
lahf
and
test
shl
(bad)
(bad)
(bad)
(bad)
aas
mov
push
test
in
cmps
pop
mov
cmp
inc
cmp
dec
dec
cwde
enter
mov
inc
add
fsub
int
es
sub
ret
(bad)
dec
in
mov
sahf
jb
push
popa
out
icebp
or
and
das
mov
cli
mov
loope
ja
push
push
jo
les
dec
jmp
lea
and
cli
pop
add
mov
dec
xor
adc
popf
inc
hlt
or
sub
dec
std
jl
mov
retf
adc
jp
push
(bad)
(bad)
(bad)
push
movs
ins
loope
hlt
mov
xchg
dec
(bad)
cmovg
jmp
xchg
jno
aad
retf
cs
push
lds
sub
cmps
das
adc
push
repnz
iret
fsub
sub
outs
cli
jmp
dec
push
ds
(bad)
xor
das
pop
xchg
repnz
(bad)
inc
in
sbb
jecxz
mov
add
popf
lods
pop
(bad)
(bad)
(bad)
push
dec
aas
stc
pushf
dec
inc
push
xchg
lods
rcl
dec
sub
cdq
jp
and
(bad)
or
es
pop
dec
(bad)
into
pop
std
jp
cmp
das
movs
bound
ja
xchg
cmps
pusha
mov
mov
pop
jmp
jb
clc
sar
fwait
popa
jmp
push
push
pop
jl
(bad)
fwait
adc
sub
dec
(bad)
(bad)
(bad)
inc
ret
mov
fisttp
clc
mov
mov
cmps
mov
sub
fcomip
ud0
jo
(bad)
add
mov
xchg
(bad)
(bad)
jmp
loopne
adc
push
inc
add
loop
inc
add
adc
out
cs
and
(bad)
call
(bad)
leave
add
dec
xchg
in
mov
aam
(bad)
ja
das
dec
xor
add
cli
push
dec
push
push
cmps
clc
push
call
sub
(bad)
(bad)
(bad)
jmp
loope
mov
retf
in
sub
inc
push
add
cwde
(bad)
and
aas
xchg
xor
(bad)
call
lods
push
test
sub
cld
hlt
xor
fs
push
scas
xlat
les
lods
retf
loop
ret
add
push
push
inc
or
lds
push
mov
out
fcmove
adc
pop
cli
xchg
jnp
retf
dec
mov
out
mov
cmc
rcr
xor
popa
jecxz
shr
adc
mov
sub
jg
inc
ret
lahf
xor
or
adc
(bad)
push
ret
xor
adc
out
dec
ins
pop
jg
retf
mov
fisttp
mov
into
fsubr
arpl
xchg
xor
xchg
aam
dec
jmp
popf
jecxz
mul
mov
jne
hlt
lods
jge
jle
popf
ja
push
mov
jns
cmp
mov
jns
or
mov
mov
lods
inc
out
lea
(bad)
cmp
sbb
(bad)
jns
mov
div
aad
sbb
mov
fnstsw
dec
(bad)
(bad)
(bad)
dec
test
aaa
mov
xchg
push
xor
xor
inc
xor
mov
loop
adc
or
mov
dec
lods
pop
sub
(bad)
clc
and
(bad)
leave
imul
mov
les
sub
dec
enter
stc
(bad)
push
or
pusha
(bad)
(bad)
dec
push
push
mov
xor
ror
ins
in
xor
(bad)
inc
pop
(bad)
add
xchg
mov
sub
imul
(bad)
mov
adc
test
sbb
rcr
and
push
xlat
rcr
push
out
adc
cmp
(bad)
call
jne
lea
fs
pop
mov
ret
pop
test
outs
aam
or
dec
xchg
xor
jg
(bad)
call
inc
dec
cmp
js
outs
jno
push
sbb
pop
sub
int3
push
and
cmps
mul
mov
mov
mov
push
and
std
sti
dec
dec
push
mov
(bad)
push
(bad)
lds
push
ds
pop
ins
(bad)
(bad)
(bad)
inc
test
sbb
lods
not
cli
dec
jae
inc
and
out
cmp
ds
test
jmp
dec
jno
mov
test
cld
inc
xlat
sub
mov
cs
push
call
dec
mov
test
cmp
call
(bad)
mov
cli
mov
gs
and
xchg
push
pop
xchg
in
mov
adc
(bad)
cmp
pushw
mov
jbe
inc
js
nop
scas
xor
cmp
(bad)
out
xchg
fs
fistp
jnp
cmp
(bad)
call
fwait
mov
mov
inc
push
call
sub
ror
jmp
mul
sahf
sub
in
in
jmp
outs
int
les
popf
dec
mov
call
hlt
pop
dec
mov
fild
jmp
aas
fcmovnb
mov
sub
test
fmul
rcr
add
(bad)
(bad)
stos
aad
(bad)
out
fidiv
pop
push
dec
hlt
movs
(bad)
(bad)
inc
neg
jnp
xor
push
jo
mov
inc
mov
push
call
and
clc
xchg
mov
xchg
jmp
mov
dec
retf
jmp
neg
fwait
mov
(bad)
call
mov
mov
mov
cmp
je
(bad)
(bad)
(bad)
push
push
fstp
lock
cmps
mov
movs
rcr
in
imul
jp
iret
(bad)
loopne
(bad)
inc
mov
xor
sub
neg
sbb
mov
sbb
mov
jno
mov
xor
cld
jg
mov
ficomp
js
mov
adc
push
cmp
xlat
push
cmp
push
push
sbb
mov
jmp
in
(bad)
(bad)
dec
les
sub
jge
jg
xlat
cmp
outs
fadd
cmps
aad
(bad)
dec
jle
in
mov
fbstp
repnz
xchg
jmp
lds
enter
jg
push
adc
retf
xlat
push
push
add
leave
mov
and
lods
pop
xor
or
aam
(bad)
(bad)
dec
out
inc
ja
inc
xchg
mov
cmp
mov
test
sbb
inc
loopne
push
mov
stos
mov
or
or
loope
nop
jle
lds
mov
aas
add
enter
ins
mov
and
mov
fstp
and
pop
pushf
mov
xchg
(bad)
(bad)
(bad)
cmp
(bad)
out
or
cmp
mov
jp
(bad)
xchg
loope
mov
(bad)
(bad)
call
sbb
popf
mov
sub
retf
loop
(bad)
fist
(bad)
push
dec
mov
or
fistp
jmp
div
test
into
ror
(bad)
dec
retf
nop
into
cmps
and
out
mov
lahf
pop
clc
inc
cld
int
lea
jg
or
std
jge
mov
fidivr
cli
or
call
mov
or
je
sbb
js
mov
mov
add
les
sar
mov
shl
lock
inc
arpl
out
loope
xchg
jne
pop
inc
imul
arpl
(bad)
in
inc
mov
xchg
xor
scas
push
outs
pusha
mov
mov
sti
adc
xor
mov
and
jo
mov
inc
mov
repnz
xchg
out
rcl
scas
inc
dec
jmp
xor
xchg
lea
mov
out
fld
dec
dec
shr
xlat
int3
and
pop
idiv
mov
push
and
inc
test
aad
xchg
or
and
xchg
sbb
(bad)
call
dec
xor
mov
sahf
inc
out
leave
pop
mov
push
sub
mov
cli
loopne
cld
(bad)
(bad)
call
daa
aaa
aam
xor
cmp
add
(bad)
sbb
arpl
mov
call
push
pop
fwait
sub
mov
cld
jbe
pop
aaa
ret
adc
pop
mov
push
add
cli
xor
mov
fnsave
sbb
push
imul
jg
mov
xchg
pop
(bad)
cdq
adc
es
test
(bad)
inc
pop
pop
mov
mov
cmc
rcl
or
jnp
sbb
sub
mov
pusha
mov
adc
inc
dec
sbb
int3
int3
sub
push
sti
hlt
mov
ss
xor
(bad)
mov
mov
mov
cmps
adc
mov
cmp
(bad)
(bad)
mov
pushf
xchg
in
daa
jmp
or
imul
jno
loop
xchg
ja
cmp
(bad)
ds
xor
adc
into
sub
or
in
push
mov
xor
outs
clc
in
ds
cs
mov
xor
iret
pop
cmp
stc
inc
je
jmp
add
or
xor
das
push
sbb
imul
(bad)
(bad)
(bad)
jmp
sahf
test
scas
adc
jo
adc
arpl
pop
pop
adc
(bad)
(bad)
(bad)
push
fiadd
popa
jle
mov
out
sar
jg
js
fistp
dec
add
(bad)
(bad)
(bad)
jmp
addr16
fnsetpm(287
adc
fdivr
adc
mov
out
stc
xor
jp
dec
out
push
and
pop
cmc
jns
sbb
push
cmc
mov
adc
shr
pop
dec
add
addr16
add
inc
scas
stos
mov
mov
cmps
daa
lea
sbb
add
add
add
adc
push
repz
psllq
adc
inc
arpl
(bad)
mov
inc
sbb
xchg
inc
inc
xor
stos
mov
ds
jmp
clc
jne
fistp
and
addr16
pop
push
out
sbb
mov
iret
mov
(bad)
mov
test
movs
hlt
es
ins
cmc
das
sahf
sbb
out
test
xchg
scas
cmp
cdq
and
(bad)
dec
ins
cmp
inc
das
mov
cmps
in
pop
push
jge
(bad)
push
pop
addr16
aas
out
mov
stos
repz
jmp
dec
and
sub
dec
mov
ret
dec
xchg
push
or
jno
inc
cmps
push
es
and
xor
jnp
jmp
sub
dec
push
mov
xor
dec
outs
mov
mov
mov
repz
scas
add
pmaxub
ret
clc
inc
les
mov
mov
(bad)
(bad)
mov
(bad)
out
jp
mov
mov
adc
retf
retf
sti
(bad)
call
loopne
(bad)
lahf
jbe
fimul
(bad)
push
push
xor
sbb
dec
xchg
jnp
sub
call
pop
ror
sub
mov
test
retf
ins
push
push
push
jae
stos
mov
jmp
push
mov
xchg
or
xchg
dec
(bad)
(bad)
jg
and
pop
mov
fcom
les
lock
pop
cli
(bad)
push
jp
push
push
jno
cmps
(bad)
sub
adc
cmp
movs
dec
call
(bad)
(bad)
(bad)
(bad)
mov
or
sti
mov
pop
ror
pop
push
mov
sbb
add
adc
jmp
(bad)
sti
mov
mov
sahf
repz
(bad)
mov
add
clc
call
out
dec
push
xchg
pop
jge
pop
push
and
mov
(bad)
(bad)
(bad)
push
inc
bound
retf
mov
movs
es
ror
xchg
xchg
xchg
mov
mov
(bad)
(bad)
call
mov
xchg
push
dec
cs
mov
cli
idiv
push
cli
bound
push
adc
or
add
sbb
adc
(bad)
jg
and
dec
mov
jle
test
std
int
lock
fld
dec
dec
dec
call
pusha
outs
sbb
push
pop
push
repz
loop
aas
xor
jmp
(bad)
ds
clc
shl
mov
inc
pop
mov
pop
pop
(bad)
(bad)
(bad)
mov
(bad)
loopne
xchg
loope
mov
adc
jb
pop
fistp
cmp
hlt
stc
jno
cmps
cs
(bad)
cmp
jno
push
cmps
xchg
into
and
outs
jecxz
pop
ret
mov
addr16
in
sbb
mov
mov
or
cmp
adc
ret
outs
inc
xchg
(bad)
(bad)
and
cmp
(bad)
(bad)
dec
mov
xchg
pop
and
mov
scas
or
movs
mov
ins
add
retfw
sub
mov
icebp
(bad)
jmp
adc
fyl2xp1
jmp
std
cmc
pop
movs
inc
xor
mov
jmp
sbb
cmp
mov
outs
repz
push
cmps
add
pop
gs
or
(bad)
push
lods
dec
inc
sbb
inc
adc
xchg
xor
xor
cli
dec
or
mov
(bad)
jmp
pop
cmps
inc
add
pop
mov
mov
call
cmp
in
push
cli
sub
call
fimul
dec
lea
(bad)
(bad)
(bad)
call
fdivr
cwde
(bad)
dec
dec
sbb
fcomip
xchg
and
cmp
mov
push
popa
popf
or
clc
call
mov
push
adc
das
cli
(bad)
fistp
sub
sub
iret
xor
out
(bad)
jg
inc
push
push
out
xor
jle
cli
lock
xor
mov
jne
push
xor
(bad)
(bad)
jmp
pop
fiadd
dec
movs
scas
or
sbb
mov
mov
push
fs
(bad)
(bad)
mov
jno
pop
ret
xor
fdiv
or
mov
je
mov
in
ss
cs
mov
xor
das
cmp
(bad)
jg
xchg
in
(bad)
iret
out
(bad)
fstp
jbe
test
add
xchg
in
rol
ja
test
(bad)
push
(bad)
loopne
ds
out
inc
and
mov
out
scas
cld
(bad)
jg
adc
cmp
jl
push
lds
jmp
mov
cmp
int3
jle
(bad)
jg
ins
xor
mov
mov
xchg
das
(bad)
(bad)
(bad)
(bad)
jl
test
cmp
loope
jo
push
xchg
pop
fmul
pop
jp
cmp
push
hlt
cmc
(bad)
(bad)
jmp
fstp
inc
push
cmps
stos
lods
cs
mov
popa
jmp
xchg
sar
mov
pop
bound
scas
das
cs
pushf
fwait
cmps
or
mov
call
cmc
ins
int
push
fisub
(bad)
jo
add
jo
add
lods
add
hlt
push
cmp
call
xchg
sub
mov
push
bound
jle
add
ds
(bad)
call
cli
inc
sbb
sbb
xlat
sbb
scas
mov
sbb
or
dec
mov
pop
std
pop
lods
ds
mov
fidiv
pop
cmp
dec
fidivr
pop
notrack
and
mov
dec
iret
jg
fcomip
mov
push
sti
ss
icebp
sar
hlt
int
mov
dec
mov
out
icebp
mov
jb
jb
mov
in
lds
das
cli
(bad)
jmp
cmp
mov
sub
in
(bad)
xor
adc
call
xor
xchg
sub
push
mov
mov
push
mov
push
je
mov
(bad)
(bad)
jg
inc
jnp
push
pop
cs
ret
xor
out
enter
fstp
int
bnd
and
aam
or
lods
stos
fnstcw
mov
retf
cmp
or
outs
mov
dec
test
inc
test
push
add
jle
add
mov
mov
mov
fcomp
dec
aaa
sub
push
mov
mov
out
(bad)
pop
ds
jecxz
dec
test
pop
(bad)
sbb
dec
imul
sbb
test
imul
mov
loopne
(bad)
pop
cmp
mov
stos
lds
xor
jle
mov
(bad)
cmp
adc
sbb
rol
or
loopne
push
jno
(bad)
xchg
xchg
daa
(bad)
and
sar
(bad)
call
je
xor
mov
mov
test
rcl
push
xchg
mov
popf
popf
sub
int3
fsubr
outs
jge
pop
inc
(bad)
sti
pop
jo
icebp
fisttp
arpl
(bad)
(bad)
(bad)
fisttp
jp
sbb
(bad)
cmc
push
add
inc
cmp
mov
jg
stos
clc
les
or
(bad)
push
sbb
loop
clc
(bad)
fistp
push
cld
in
aas
and
mov
(bad)
jo
(bad)
(bad)
(bad)
jmp
xchg
lods
int3
mov
mov
test
test
sahf
inc
push
mov
pushf
sar
test
out
add
retf
hlt
retf
(bad)
dec
xor
mov
xor
jne
push
shl
pop
(bad)
cli
xor
dec
inc
push
in
adc
leave
cdq
stc
cld
lock
gs
test
sbb
(bad)
call
pop
mov
push
lods
aaa
repz
mov
mov
sub
imul
(bad)
call
xor
add
loop
cmps
push
fadd
xor
enter
call
test
inc
jmp
test
mov
sub
pop
fldenv
(bad)
(bad)
(bad)
dec
outs
les
cmps
and
iret
xor
push
add
push
loop
jmp
(bad)
mov
adc
fidiv
mov
cmp
call
(bad)
jmp
adc
ret
in
in
dec
hlt
jbe
imul
dec
mov
mov
(bad)
(bad)
call
cmp
xor
sti
test
movs
adc
imul
xchg
in
xor
jbe
xor
(bad)
(bad)
push
fwait
cmc
inc
lds
and
test
(bad)
and
ret
and
(bad)
jg
xor
icebp
cwde
cmp
adc
jg
imul
push
push
imul
xor
pop
push
adc
add
cmps
push
mov
sahf
push
xor
or
xchg
(bad)
(bad)
jmp
mov
(bad)
adc
and
daa
xchg
add
xor
xchg
xchg
mov
jge
add
cmp
dec
scas
out
aas
movs
or
aas
pusha
mov
lea
fisttp
out
xchg
mov
lock
sub
pop
bound
or
dec
xchg
mov
(bad)
(bad)
(bad)
fbstp
in
pop
and
dec
popa
imul
outs
ret
mov
xchg
dec
and
mov
mov
cmc
add
rcl
pop
inc
out
jge
cmp
sbb
push
ins
fwait
in
stos
test
pop
xlat
push
sti
push
std
inc
mov
mov
pusha
test
fwait
gs
(bad)
(bad)
(bad)
dec
fwait
push
push
push
(bad)
push
jae
out
mov
sbb
xor
fdivr
int3
sub
or
xor
pushf
adc
adc
(bad)
(bad)
fisttp
jb
int3
fsubr
jb
sub
ins
xor
xor
inc
jno
push
hlt
mov
test
adc
ds
(bad)
dec
mov
out
xchg
xchg
cld
mov
leave
cmp
(bad)
(bad)
dec
or
adc
mov
cld
repnz
mov
mov
mov
mov
lock
push
ja
test
test
out
les
pop
adc
test
je
neg
clc
movs
push
jl
adc
dec
(bad)
mul
int3
ret
add
(bad)
(bad)
dec
pop
popf
add
adc
enter
sbb
jmp
xchg
fadd
jmp
sar
jbe
call
inc
mov
cmp
sub
sbb
xchg
jle
outs
mov
cmp
aad
or
out
fisubr
(bad)
(bad)
(bad)
dec
sub
xchg
adc
cmp
sete
xor
xchg
(bad)
fwait
add
(bad)
push
adc
cdq
adc
mov
push
jecxz
pop
inc
cmps
pop
cmps
div
pop
push
gs
inc
lock
fs
shl
lahf
leave
pop
sub
jnp
mov
and
sub
loope
or
xchg
cmp
(bad)
(bad)
jg
mov
lods
ffreep
shl
into
(bad)
loop
hlt
jle
sub
ja
bound
mov
(bad)
(bad)
fild
and
jp
imul
aam
daa
jmp
cdq
cli
(bad)
jmp
enter
dec
and
(bad)
enter
mov
outs
jle
out
cwde
(bad)
mov
out
fisttp
pop
les
ror
out
inc
mov
(bad)
(bad)
dec
mov
push
das
loopne
ja
or
(bad)
stc
out
daa
jno
lock
inc
cmp
cmp
sub
mov
inc
pop
mov
outs
scas
lds
push
mov
jecxz
imul
push
and
(bad)
jmp
lea
loope
leave
xchg
xchg
sub
int
popa
je
sbb
jne
pop
mov
add
(bad)
(bad)
call
in
fst
call
add
adc
xchg
dec
gs
(bad)
jmp
into
dec
jecxz
cmp
mov
gs
stos
out
cmp
mov
imul
cmp
or
sbb
outs
sub
shl
mov
call
ret
mov
mov
aam
imul
push
in
jmp
sbb
push
outs
out
xor
outs
shl
imul
(bad)
(bad)
call
lods
or
(bad)
shl
stos
xchg
sub
xor
mov
mov
xor
inc
fst
loopne
dec
and
cmp
in
loopne
(bad)
(bad)
dec
adc
leave
push
push
sbb
addr16
cli
jmp
test
ins
ror
(bad)
xor
movs
mov
cs
ins
ret
test
mov
shr
jmp
gs
lods
xchg
(bad)
(bad)
(bad)
cmp
push
cmp
mov
mov
dec
add
xchg
pop
icebp
lods
xor
(bad)
(bad)
(bad)
in
inc
pop
add
and
in
loop
out
sbb
mov
xchg
add
in
pop
lock
dec
inc
sbb
rcr
xor
mov
clc
fs
inc
pop
inc
add
push
mov
mov
dec
add
call
addr16
sub
imul
gs
fidivr
cs
push
lea
cmp
push
push
pusha
or
in
(bad)
(bad)
(bad)
call
dec
hlt
loope
mov
fwait
xchg
add
in
aas
sub
js
xchg
and
jmp
jmp
aas
mov
jmp
jne
mov
mov
mov
pop
loope
and
jp
mov
xor
cdq
shl
arpl
nop
iret
mov
test
jp
inc
(bad)
(bad)
(bad)
(bad)
cmp
ret
and
pop
sbb
scas
push
add
push
add
ins
aad
mov
(bad)
mov
inc
push
std
call
popa
imul
fwait
imul
add
mov
adc
data16
pop
sub
sbb
aaa
(bad)
icebp
sar
and
(bad)
(bad)
in
jmp
mov
pop
jne
pop
div
dec
inc
and
dec
pop
mov
add
sbb
or
sub
ins
cld
inc
(bad)
push
pop
sbb
(bad)
(bad)
(bad)
jg
push
jne
xlat
jmp
loopne
mov
aad
scas
imul
inc
(bad)
(bad)
jge
jle
retf
retf
pop
repz
aas
shl
(bad)
mov
loop
cmp
mov
(bad)
jg
inc
repz
add
jl
sbb
in
cmp
shl
repnz
mov
call
mov
out
or
rol
or
fld
inc
cwde
(bad)
cmp
jmp
jl
stos
in
sub
iret
mov
xor
xchg
daa
(bad)
xor
cld
sbb
sbb
jmp
ret
je
mov
adc
iret
jle
jp
dec
aad
sbb
ret
(bad)
(bad)
jmp
xchg
jmp
add
fucomi
retf
xor
retf
mov
add
jmp
out
jns
shl
mov
jl
ret
dec
cs
jo
int3
scas
jo
(bad)
(bad)
jmp
jl
outs
push
jns
bound
mov
call
lods
fdivr
cmp
cs
outs
mov
popf
mov
xor
(bad)
call
lea
mov
ret
push
ins
fistp
xor
in
mov
out
call
outs
pcmpgtw
(bad)
(bad)
(bad)
mov
lods
sbb
ret
cmp
cdq
mov
cmp
fwait
push
or
pop
push
shl
les
pushf
jo
(bad)
(bad)
jmp
adc
mov
loop
addr16
push
dec
cmp
mov
adc
dec
inc
push
add
add
sub
cld
sbb
js
jnp
adc
(bad)
jmp
cmp
and
pop
cmp
and
out
mov
or
imul
sub
out
mov
inc
outs
outs
bound
mov
sahf
inc
ja
cmp
jne
loope
stos
mul
mov
out
cli
sbb
adc
inc
daa
into
or
sar
(bad)
mov
jo
das
repnz
jg
test
xchg
rcr
(bad)
mov
lock
lods
mov
aam
mov
std
(bad)
(bad)
(bad)
jmp
aam
fimul
push
mov
jae
aam
shl
inc
cmps
sbb
xchg
ins
popa
push
std
pop
and
xor
mov
arpl
(bad)
(bad)
call
inc
gs
xor
dec
out
fiadd
popf
sahf
xor
(bad)
call
scas
add
push
xor
and
sbb
mov
mov
call
pop
inc
cmp
retf
(bad)
(bad)
(bad)
call
push
sbb
push
dec
and
jb
push
ja
(bad)
xor
add
test
sbb
pushf
sbb
add
sar
lea
xchg
fldpi
cmp
pusha
xchg
fs
(bad)
outs
sar
call
mov
fsub
mov
(bad)
dec
mov
push
mov
dec
or
pushf
push
(bad)
mov
or
ret
mov
and
(bad)
pop
shl
(bad)
push
aad
scas
ss
cld
scas
push
push
pop
mov
mov
sbb
ins
pop
add
cdq
lods
mov
pusha
push
cmp
(bad)
rcl
cmp
mov
retf
or
pop
dec
sub
(bad)
in
inc
dec
cs
mov
xchg
imul
mov
cmp
rcl
mov
jle
js
outs
fstp
(bad)
(bad)
mov
mov
mov
adc
lock
jge
and
je
mov
call
pop
xchg
movs
and
neg
popf
fs
cmps
gs
icebp
arpl
sbb
(bad)
(bad)
(bad)
jmp
cmp
fwait
out
pop
mov
inc
mov
mov
xchg
jne
stc
je
aad
pop
push
ds
adc
sahf
shl
popa
aas
mov
pop
adc
xchg
nop
sar
(bad)
jmp
jmp
xor
loopne
test
outs
imul
xor
mov
call
inc
cmp
pusha
(bad)
frstor
and
(bad)
mov
push
(bad)
(bad)
mov
ss
mov
add
adc
add
and
loopne
cmp
mov
add
and
jmp
in
xor
sub
mov
(bad)
(bad)
mov
(bad)
pop
add
xor
or
sub
out
lock
cld
fsubr
loop
push
sbb
nop
aas
mul
iret
jmp
xor
mov
mov
(bad)
repnz
push
call
fisttp
sar
(bad)
call
jge
inc
dec
fiadd
push
ja
push
mov
pop
rcl
sub
(bad)
aam
test
mov
pusha
or
xor
sti
sbb
mov
call
pop
lock
ror
mov
outs
sbb
mov
movs
dec
call
loopne
sub
lds
mov
mov
lds
mov
(bad)
(bad)
jmp
pop
inc
mov
pop
push
inc
jmp
and
sbb
mov
idiv
add
(bad)
(bad)
call
mov
aad
fdivr
push
(bad)
aad
out
mov
sahf
mov
scas
and
lods
inc
ja
sti
jle
and
inc
pusha
scas
fwait
sti
aam
cmp
push
jmp
push
xchg
(bad)
jmp
int
data16
bound
mov
xor
test
adc
(bad)
(bad)
(bad)
sbb
je
dec
cmp
inc
and
mov
pop
das
sub
jae
xchg
mov
cmc
mov
inc
rol
cli
and
ss
adc
xchg
mov
add
clc
cli
idiv
mov
ds
xchg
mul
pop
out
(bad)
xchg
jg
(bad)
jg
mov
adc
aam
mov
fidiv
mov
(bad)
(bad)
jg
(bad)
aas
jle
(bad)
mov
js
pop
mov
loop
push
repz
hlt
ffree
inc
adc
(bad)
call
test
dec
fs
adc
dec
pushf
cmps
ins
cmp
(bad)
inc
(bad)
push
je
je
loopne
mov
leave
push
sbb
outs
(bad)
fiadd
cmp
loope
xor
mov
sub
hlt
in
mov
(bad)
(bad)
sti
mov
pop
xchg
jmp
sub
int3
loopne
popa
clc
bound
arpl
sar
jo
test
pop
dec
clc
fwait
pushf
xor
sub
mov
push
and
jmp
sahf
jne
jg
push
cmp
and
dec
jae
test
call
pop
es
(bad)
retf
int
rcl
push
push
adc
stos
adc
(bad)
inc
pop
out
push
ss
gs
(bad)
adc
pop
mov
inc
jnp
movs
push
fwait
aam
jecxz
inc
mov
cmp
outs
mov
mov
or
call
mov
(bad)
fwait
sub
(bad)
sub
or
cmps
movs
js
push
xchg
mov
cs
inc
outs
daa
dec
call
stos
cmps
mov
or
pop
stos
movs
sub
xlat
call
js
cld
sbb
adc
mov
jne
mov
jp
mov
jnp
pop
cmp
adc
retf
jb
(bad)
(bad)
(bad)
mov
fnstsw
sub
mov
inc
cmps
fsub
jmp
push
arpl
movs
mov
in
xor
enter
push
out
ins
popa
aad
or
pop
jmp
dec
stos
gs
inc
dec
cmps
and
(bad)
(bad)
jmp
mov
xchg
fst
jge
enter
daa
cdq
ret
ins
sti
sar
cmc
cmp
xchg
add
inc
ficomp
cmps
ret
sub
pop
aas
jo
jg
jo
rcr
out
out
test
jmp
daa
sub
mov
sbb
pop
(bad)
cs
jmp
shl
mov
scas
out
inc
xor
(bad)
in
xchg
imul
std
push
xchg
inc
(bad)
ficomp
cvtps2pi
cli
jmp
and
push
(bad)
out
and
les
pop
(bad)
push
enter
xchg
sbb
(bad)
(bad)
call
clc
call
mov
and
in
ret
inc
cmp
test
(bad)
(bad)
(bad)
jmp
xor
push
inc
aam
(bad)
out
jge
mov
cli
xor
rol
push
mov
sbb
cs
cli
jne
cmp
sar
(bad)
inc
sbb
mov
mov
xchg
adc
(bad)
mov
(bad)
jg
ins
adc
mov
popf
stos
loope
das
pop
inc
lods
cmp
mov
in
stos
jecxz
cmp
mov
(bad)
(bad)
call
(bad)
mov
call
push
xor
outs
fdiv
push
inc
pushf
mov
xor
popa
jmp
out
(bad)
call
into
out
or
aas
mov
mov
adc
jle
vmread
(bad)
mov
inc
jmp
xor
mov
xchg
retf
jmp
(bad)
inc
addr16
adc
xor
mov
xor
imul
out
not
add
jbe
or
xchg
lods
mov
adc
jns
stc
mov
cmp
(bad)
(bad)
(bad)
call
fwait
call
enter
arpl
xchg
shr
jnp
jmp
mov
pop
and
sbb
push
xchg
push
(bad)
add
xor
sbb
sub
loopne
js
sti
adc
cmp
mov
mov
xchg
xlat
(bad)
jmp
ss
ins
jns
cmp
ss
or
sbb
std
(bad)
jmp
xor
dec
gs
in
xchg
sar
xor
aas
outs
cmp
ss
fwait
out
out
inc
xlat
aad
mov
(bad)
(bad)
(bad)
mov
(bad)
jmp
and
add
push
sub
(bad)
(bad)
jmp
xor
xchg
fst
ds
iret
div
les
dec
inc
(bad)
pop
(bad)
loopne
mov
ja
mov
rol
push
iret
bound
scas
xor
ja
sti
push
clc
loopne
xchg
test
add
scas
pusha
mov
adc
aaa
or
arpl
inc
lahf
daa
gs
adc
(bad)
(bad)
inc
pop
scas
mov
mov
sbb
dec
(bad)
fwait
int
test
ror
scas
inc
in
cli
int
mov
jae
mov
(bad)
(bad)
(bad)
cmp
fst
iret
out
mov
(bad)
sbb
mov
in
cmp
inc
das
pop
fbld
(bad)
(bad)
sub
mov
and
es
(bad)
(bad)
(bad)
dec
mov
dec
mov
dec
fsub
mov
or
xchg
retf
cld
in
loopne
mov
cs
push
std
stos
dec
into
push
adc
call
loope
ficom
or
mov
scas
outs
adc
dec
add
(bad)
(bad)
inc
xchg
or
aaa
(bad)
call
(bad)
push
push
dec
dec
push
(bad)
(bad)
cmp
xchg
popa
sbb
pop
and
mov
mov
cli
pop
push
ins
xor
mov
mov
xor
add
adc
loopne
fnsave
xchg
icebp
fadd
pop
mov
mov
std
push
or
mov
ror
outs
lods
out
ins
adc
or
jns
sbb
dec
clc
(bad)
(bad)
(bad)
fadd
cmp
ins
jge
retf
or
pop
push
add
cmp
sub
dec
fstp
(bad)
adc
int
mov
cmc
sub
retf
ss
mov
xchg
fstp
mov
push
xor
stos
dec
sub
ins
gs
sti
movs
(bad)
fimul
test
or
sub
outs
hlt
inc
xchg
push
mov
lea
(bad)
(bad)
jmp
out
loope
mov
pop
pop
and
push
inc
dec
mov
mov
jno
mov
(bad)
(bad)
(bad)
push
in
and
mov
aaa
cmc
fstp
fwait
cmp
mov
out
push
jl
clc
mov
popf
inc
xlat
cmc
xchg
and
fisttp
call
mov
add
outs
xor
sub
mov
(bad)
(bad)
mov
pop
cmp
fistp
sub
jle
popf
push
out
mov
std
jmp
dec
lea
inc
outs
ss
retf
dec
dec
(bad)
call
mov
sub
lock
mov
adc
inc
popf
push
add
push
xor
stc
pop
ins
mov
mov
(bad)
fst
or
cmp
xor
ja
inc
push
repz
sti
enter
repnz
js
(bad)
(bad)
(bad)
dec
xor
retf
push
imul
dec
xor
or
jae
inc
add
push
sbb
(bad)
(bad)
jmp
add
je
mov
mov
or
cmp
stos
cmc
mov
xchg
add
mov
mov
sub
inc
rol
out
loop
fcomip
es
mov
(bad)
pusha
xlat
adc
das
mov
(bad)
(bad)
loope
rol
mov
ret
xchg
lock
fldenv
jg
jns
not
push
in
call
inc
aad
(bad)
mov
rcl
xchg
mov
nop
cwde
xor
sar
(bad)
dec
in
sbb
and
pop
cmovge
hlt
ins
sub
std
jmp
mov
mov
(bad)
push
inc
out
add
jg
sub
aas
out
repz
leave
mov
dec
repz
mov
and
dec
(bad)
aam
nop
cs
cmc
mov
stos
add
cld
(bad)
(bad)
(bad)
jle
fistp
out
jl
xchg
jge
pop
ss
mov
leave
jge
aas
and
ins
and
adc
pop
(bad)
(bad)
inc
cmp
popa
scas
stos
out
stos
jp
sub
ret
cmp
pop
mov
(bad)
(bad)
(bad)
push
out
mov
sbb
pop
rcl
cwde
mov
xchg
mov
adc
lock
push
out
jne
mov
into
jbe
es
or
fcomip
mov
and
loop
xor
adc
dec
popf
lahf
(bad)
fcomip
fild
sti
jbe
add
jp
jnp
push
mov
pusha
or
lods
lods
and
cwde
out
inc
mov
mov
mov
fdiv
stc
iret
(bad)
dec
ins
sbb
add
adc
lock
or
dec
jl
pop
pop
js
out
cmps
ja
das
into
dec
dec
loop
pop
pop
mov
pop
dec
idiv
hlt
prefetch
gs
(bad)
call
dec
dec
mov
fidivr
xchg
pop
call
pop
shl
out
fdivr
(bad)
gs
daa
dec
rcl
(bad)
dec
cdq
fs
fwait
loop
xchg
adc
mov
test
fdivrp
fistp
out
std
jmp
scas
fld
stc
imul
mov
sar
ror
test
cmc
jb
xchg
bound
ret
xor
xchg
(bad)
jg
icebp
xlat
mov
ret
cld
movs
lods
inc
cli
sub
and
jno
xor
sbb
(bad)
jmp
rol
xchg
inc
popf
cmps
or
stos
xchg
jno
shl
sub
mov
fs
pop
push
ja
pop
sub
(bad)
push
mov
push
mov
push
cld
(bad)
(bad)
(bad)
jmp
fldenv
paddsb
cld
mov
and
movs
jp
loop
dec
dec
jecxz
mov
add
scas
cmps
in
push
(bad)
call
loopne
add
test
dec
add
pop
aaa
lahf
sbb
push
icebp
jmp
(bad)
dec
xlat
mov
ss
sbb
mov
xor
rcl
dec
inc
mov
mov
ss
(bad)
(bad)
push
popa
lahf
xlat
xchg
xor
xlat
rcl
dec
sti
mov
mov
xlat
movs
dec
xchg
mov
jo
ins
add
jmp
jae
in
inc
pusha
sub
loope
(bad)
inc
lods
aad
dec
inc
mov
jb
mov
push
xchg
test
into
les
xchg
jmp
pushf
mov
push
cwde
pop
fwait
xlat
ficom
adc
or
xchg
mov
dec
in
(bad)
push
sbb
loop
pusha
or
lock
les
fwait
inc
cdq
outs
or
fldcw
pusha
jp
outs
mov
cmp
sbb
mov
fwait
scas
and
jo
add
movs
(bad)
dec
mov
lahf
leave
rcr
movs
cld
pop
es
int3
cwde
mov
sar
(bad)
jg
mov
or
nop
pop
hlt
test
sar
jecxz
hlt
loope
sar
outs
mov
nop
out
aam
sub
add
mov
adc
xchg
std
jmp
mov
pop
adc
aam
jne
inc
rcl
xchg
(bad)
(bad)
call
push
mov
push
aam
lea
cmps
in
cwde
lods
or
(bad)
(bad)
jmp
cmc
and
retf
out
aad
rcr
(bad)
loop
std
adc
scas
and
push
fisttp
pop
sbb
cli
or
cmp
repz
and
clc
out
jle
xor
jle
out
data16
jne
outs
clc
mov
xor
mov
outs
fiadd
inc
and
push
test
mov
(bad)
ror
loop
cmp
jmp
fimul
stc
in
push
cmps
jmp
das
and
adc
ja
scas
push
ficom
in
cli
jb
add
shl
sbb
(bad)
cld
loop
call
rcr
cmp
(bad)
(bad)
(bad)
call
cli
ficomp
(bad)
and
adc
sbb
push
cmp
scas
sbb
movs
sub
bswap
mov
loopne
lock
jno
pop
ds
fwait
clc
sub
cdq
add
or
movs
xor
(bad)
(bad)
(bad)
push
sub
xchg
inc
push
nop
rcl
dec
addr16
mov
loope
xchg
outs
sub
xchg
(bad)
adc
cdq
xor
outs
xchg
sbb
jns
aas
(bad)
fiadd
dec
inc
inc
xor
leave
and
push
dec
call
inc
sbb
dec
cmp
sub
mov
in
das
cli
add
cs
je
mov
jbe
add
(bad)
(bad)
(bad)
jmp
movs
(bad)
sbb
jmp
(bad)
dec
arpl
in
inc
pop
packsswb
jp
mov
(bad)
mov
mov
jmp
mov
cmp
mov
inc
fist
popf
dec
bound
and
(bad)
fild
jae
jg
inc
mov
mov
aaa
fcmovb
push
jecxz
sub
jl
or
push
imul
mov
cmps
mov
mov
cmp
dec
mov
dec
cmp
call
mov
and
(bad)
call
xchg
dec
xchg
xor
mov
repz
call
movs
push
or
ins
mov
push
(bad)
scas
mov
repnz
sti
xchg
cli
fidiv
push
jmp
andps
mov
mov
push
(bad)
(bad)
(bad)
jg
mov
jl
retf
dec
cmp
adc
pusha
sti
inc
cmp
cmp
frstor
repz
mov
cli
cdq
cwde
cmp
mov
pop
jmp
(bad)
aaa
jp
pop
mov
hlt
pop
(bad)
jb
loop
xchg
push
sub
adc
(bad)
(bad)
sti
pop
int
mov
jo
inc
sti
push
(bad)
jmp
sbb
out
or
(bad)
jb
mov
push
push
xor
fldcw
aad
mov
(bad)
jmp
pop
or
es
call
addr16
mov
into
mov
fwait
stos
push
dec
pop
clc
(bad)
(bad)
inc
mov
pop
mov
adc
adc
inc
push
int
cs
inc
mov
xor
call
sbb
scas
adc
or
js
clc
ficomp
xlat
popf
xor
in
call
or
cli
popa
or
mov
test
ds
test
dec
sbb
imul
mov
out
dec
leave
xlat
rcr
jb
mov
sub
sub
mov
cs
ror
(bad)
aaa
sbb
loopne
(bad)
shl
fisub
jmp
mov
mov
xchg
iret
call
xchg
mov
adc
mov
leave
(bad)
sub
push
xchg
outs
add
lock
aaa
in
mov
movs
popa
stos
xor
mov
pop
jae
dec
nop
ins
out
or
(bad)
jg
and
pushf
sbb
mov
mov
cmp
mov
in
ins
scas
mov
das
and
mov
arpl
inc
fbld
popf
xchg
mov
adc
add
sahf
mov
test
xchg
mov
mov
mov
jae
(bad)
dec
call
jbe
lds
cmp
(bad)
(bad)
inc
jo
jge
mov
mov
xchg
repz
sub
clc
pop
gs
loop
js
and
jmp
call
jg
loop
shr
mov
mov
cdq
mov
(bad)
(bad)
jmp
or
pop
mov
aam
outs
call
(bad)
(bad)
call
jno
into
pop
jb
mov
xchg
and
sar
or
push
add
ss
sbb
adc
cmp
and
loopne
xlat
movs
scas
and
sbb
int3
in
mov
fs
fs
or
call
leave
jns
int3
clc
ds
jg
pop
push
(bad)
(bad)
call
jo
jmp
outs
mov
nop
sbb
or
jge
test
iret
xchg
jge
(bad)
(bad)
(bad)
call
xchg
cdq
retf
sbb
shl
xchg
aaa
mov
lock
and
mov
sub
dec
shl
aam
fldlg2
leave
(bad)
dec
scas
dec
jmp
int3
mov
pop
xor
fdiv
lods
cmp
jmp
pop
cmp
sub
fcom
mov
and
mov
mov
hlt
cmp
js
(bad)
jg
dec
(bad)
xchg
pushf
enter
mov
fcomp
sbb
mov
loopne
xchg
fs
xchg
ret
and
outs
or
jl
and
mov
leave
xor
addr16
inc
push
(bad)
(bad)
push
mov
dec
push
xchg
dec
adc
mov
sub
push
push
inc
loop
(bad)
jmp
clc
fisttp
and
ins
fdivr
enter
pop
(bad)
and
cmc
psubsb
(bad)
(bad)
push
clc
adc
imul
call
(bad)
out
aad
sub
cmps
lods
or
(bad)
cmp
mov
sub
mov
ret
adc
out
sti
inc
and
jmp
push
int3
lods
adc
jne
outs
(bad)
(bad)
jmp
ins
lods
push
cmp
(bad)
push
and
pop
pop
cwde
ret
and
xchg
push
hlt
call
jmp
mov
popf
pushf
xchg
idiv
push
pop
fsubr
je
loop
jmp
inc
jno
iret
sbb
lods
xchg
inc
mov
stc
jnp
dec
mov
dec
cld
jmp
xor
xchg
pushf
nop
adc
hlt
(bad)
mov
mov
push
pop
arpl
in
mov
cmps
fild
mov
adc
adc
(bad)
jg
push
or
popf
nop
adc
es
mov
retf
xchg
cmp
iret
jmp
sub
sub
in
popf
sbb
rcr
fcomi
push
pop
(bad)
and
leave
and
dec
xchg
xchg
mov
dec
(bad)
scas
cmc
loop
pop
push
pop
mov
in
jmp
or
push
jge
in
enter
sub
add
into
mov
fcmovnbe
jmp
dec
xlat
cmp
adc
or
push
(bad)
test
cwde
ret
mov
sub
jmp
sbb
sbb
jo
sbb
ins
pusha
movs
sub
xor
(bad)
(bad)
dec
xor
add
hlt
dec
aaa
mov
push
add
andnps
(bad)
stos
and
cli
push
in
mov
movs
pop
enter
xchg
ror
(bad)
push
clc
jge
jp
pop
imul
xchg
jl
inc
mov
push
adc
push
adc
sbb
dec
test
pop
add
xchg
lods
pop
mov
xor
hlt
jne
fwait
xchg
in
fsubr
les
jbe
inc
ins
adc
(bad)
(bad)
jmp
cs
cmp
pop
xchg
out
or
aad
inc
xor
cs
outs
(bad)
(bad)
jmp
je
mov
inc
pop
xor
stos
xchg
(bad)
pushf
test
push
scas
push
cmp
test
call
sbb
or
shl
mov
(bad)
inc
jne
call
and
cmp
fsub
xrelease
mov
jne
cmc
mov
dec
add
test
(bad)
(bad)
jns
push
idiv
pop
dec
(bad)
retf
xchg
popa
js
push
shr
cli
xor
cmp
(bad)
sti
movs
mov
pop
loop
add
je
adc
outs
out
jle
xchg
pop
xchg
and
fiadd
(bad)
(bad)
call
mov
pop
jp
ret
jmp
in
jp
aad
mov
cmp
fcom
push
add
(bad)
(bad)
call
mov
ins
fistp
push
(bad)
xor
adc
jbe
pop
gs
aad
sbb
lods
(bad)
(bad)
(bad)
call
rcr
imul
lahf
xor
add
push
and
mov
mov
jp
imul
shl
adc
adc
mov
scas
test
repz
(bad)
repnz
sbb
(bad)
jmp
pop
push
outs
scas
movzx
das
mov
sub
stos
sub
mov
and
mov
fcom
cmc
inc
dec
gs
arpl
sar
loop
test
int3
xor
cmp
fisttp
or
dec
pop
mov
aaa
pop
cmc
inc
mov
mov
add
and
add
leave
push
sub
cdq
cdq
int3
retf
call
cmps
imul
dec
push
in
sbb
and
ss
lea
jge
xor
dec
xor
(bad)
jmp
(bad)
inc
dec
ret
mov
das
or
dec
lahf
jp
(bad)
cli
(bad)
(bad)
(bad)
call
sub
(bad)
mov
mov
mov
mov
mov
(bad)
dec
mov
xchg
loopne
pop
push
(bad)
jnp
ds
(bad)
sub
push
mov
mov
call
jecxz
xchg
adc
xor
mov
push
dec
movs
and
(bad)
(bad)
cmp
js
dec
dec
sub
adc
cwde
xchg
shl
(bad)
bound
cdq
(bad)
(bad)
mov
pop
fimul
mov
lock
pop
outs
push
fwait
sti
xchg
clc
(bad)
push
cmp
shr
push
sahf
(bad)
sbb
pop
std
(bad)
jmp
ja
and
scas
jo
lods
jmp
jg
xchg
mov
(bad)
test
fmul
loop
mov
or
mov
out
test
cmp
pop
lods
cmp
(bad)
inc
pop
sahf
push
xor
sbb
fiadd
fdivr
mov
and
pop
pushf
fwait
aad
pop
out
mov
sub
mov
cmp
jmp
retf
xchg
data16
fcmovb
adc
push
dec
sbb
(bad)
call
sbb
mov
jmp
or
call
call
cli
out
adc
jno
cmp
mov
add
inc
jge
call
mov
xchg
leave
cmp
in
sub
cmp
jmp
retf
daa
inc
cs
add
out
or
(bad)
or
xchg
jo
xchg
inc
data16
(bad)
call
sub
leave
pop
int
push
dec
or
bound
dec
mov
add
retf
cwde
into
push
jno
push
jl
jl
or
retf
in
sub
or
ret
or
(bad)
jmp
jo
mov
dec
add
popf
sbb
out
retf
popf
add
fdivrp
call
xor
cmp
test
nop
lea
xchg
out
cmps
ins
pop
(bad)
(bad)
(bad)
inc
jmp
(bad)
pop
xor
ins
mov
sbb
pop
loope
mov
xor
xchg
(bad)
mov
and
or
or
pop
push
sar
lock
retf
add
fistp
cmp
dec
popf
xor
dec
ret
add
(bad)
(bad)
(bad)
call
jbe
pop
(bad)
gs
pusha
xchg
(bad)
rol
pop
xor
xor
es
cwde
cld
pusha
cmp
(bad)
(bad)
push
ds
mov
add
retf
xor
pop
xchg
sub
(bad)
(bad)
jmp
outs
pop
pushf
add
push
aaa
adc
fwait
pop
and
mov
cmps
add
mov
dec
sahf
ror
les
(bad)
(bad)
jmp
mov
sahf
popa
loope
or
push
or
adc
add
add
inc
mov
test
movs
into
mov
mov
pusha
xchg
sub
add
fwait
stos
xor
sub
ror
movs
push
mov
(bad)
call
fisubr
jp
push
(bad)
jmp
pop
push
xlat
frstor
push
inc
mov
js
cmp
add
lock
dec
in
mov
loope
mov
jecxz
iret
or
rol
mov
lods
inc
fnsave
cmc
push
mov
sti
cmp
(bad)
mov
push
ret
(bad)
movs
xchg
jp
dec
dec
push
aaa
sbb
(bad)
push
ja
fstp
popf
push
mov
test
mov
cmp
enter
(bad)
(bad)
(bad)
cmp
(bad)
dec
push
enter
fnstenv
jmp
mov
mov
xchg
aad
(bad)
mov
cmp
cs
aad
fnstenv
test
cmp
(bad)
jge
fist
ret
xchg
xlat
xor
pop
mov
sar
clc
(bad)
adc
xor
push
mov
inc
inc
dec
pop
ja
lds
or
(bad)
jmp
sbb
outs
js
ret
mov
jmp
cdq
fwait
push
pop
mov
sbb
push
out
(bad)
push
stc
and
xchg
push
dec
jecxz
lds
sar
fisttp
fdiv
(bad)
inc
cs
out
and
xor
jle
aam
push
pop
mov
xchg
ins
loop
inc
pusha
mov
inc
out
call
call
lods
data16
(bad)
jl
sub
movs
rcr
mov
out
addr16
(bad)
leave
call
adc
jb
mov
and
xor
cli
stos
das
js
jbe
shl
mov
xor
pushf
mov
(bad)
call
xor
gs
aam
cmp
dec
test
push
jne
lods
call
or
inc
leave
xchg
outs
jge
lea
cs
(bad)
in
mov
(bad)
(bad)
xor
mov
sub
adc
call
das
push
repz
mov
rol
cmp
or
dec
inc
(bad)
(bad)
jmp
dec
in
lea
jmp
sahf
cs
add
xor
xchg
mov
sbb
(bad)
(bad)
call
gs
aam
enter
ja
sub
cmp
fimul
aas
add
pop
cdq
repz
(bad)
(bad)
jmp
cmp
movs
cmp
iret
mov
popa
lods
sub
(bad)
ins
or
xor
push
(bad)
(bad)
(bad)
push
call
dec
fsubr
cmp
aas
retf
iret
mov
cs
imul
jb
mov
pushf
add
mov
ret
pusha
adc
sbb
ss
inc
cli
mov
lods
or
test
iret
push
cmp
pop
xchg
(bad)
aaa
cld
inc
jbe
push
jb
cs
push
fisub
mov
scas
popa
xor
xor
mov
mov
inc
push
cmp
call
jge
popf
sbb
fs
pop
inc
add
fwait
and
aaa
inc
dec
call
mov
dec
push
rol
adc
sbb
je
(bad)
(bad)
(bad)
inc
push
mov
fdivr
aas
cmp
adc
mov
les
mov
and
dec
adc
fcmove
sbb
aad
rcr
lods
push
loop
stc
sub
mov
cwde
mov
adc
add
neg
jno
and
(bad)
push
push
mov
sbb
mov
call
inc
inc
dec
xchg
(bad)
mov
xor
aad
mov
mov
(bad)
(bad)
(bad)
mov
dec
sbb
les
das
jnp
mov
xor
sub
(bad)
fsubr
cmps
call
pop
not
xlat
cld
sub
pop
cmp
out
into
jp
(bad)
fdivr
sbb
push
scas
loope
not
icebp
fsubr
xor
and
(bad)
(bad)
mov
jo
push
loope
movs
xor
jmp
out
jle
(bad)
(bad)
call
or
(bad)
jle
dec
stc
mov
cmc
or
cli
adc
push
and
mov
sbb
xor
cmp
xchg
pusha
mov
dec
jmp
jmp
xor
in
sahf
or
add
mov
push
jl
push
nop
outs
(bad)
out
cli
jmp
daa
pop
test
push
arpl
add
sub
test
push
(bad)
(bad)
(bad)
dec
push
mov
jecxz
push
mov
dec
and
neg
push
cmps
mov
jmp
push
test
in
xlat
and
cmp
push
stos
mov
dec
xlat
mov
mov
or
outs
pop
cmc
cli
xlat
out
or
push
xchg
arpl
scas
inc
adc
push
mov
frstor
inc
aaa
cld
(bad)
jmp
out
or
jae
out
jp
add
retf
mov
out
sbb
jmp
(bad)
pop
jmp
adc
bound
or
in
int
mov
loop
xlat
dec
(bad)
(bad)
jmp
mov
das
jp
das
call
mov
push
inc
outs
aaa
(bad)
(bad)
mov
loopne
fisub
ins
pusha
push
mov
mov
mov
sar
(bad)
fbld
lds
lds
js
xchg
sub
cli
pop
pop
rcl
jg
mov
dec
xlat
int3
xchg
mov
cmp
and
push
dec
mov
les
ins
fwait
(bad)
(bad)
(bad)
call
push
xchg
mov
xor
inc
pop
mov
xchg
jno
cli
das
sar
add
cmp
les
add
int3
iret
(bad)
inc
inc
mov
xor
sbb
mov
test
dec
loopne
hlt
mov
arpl
dec
scas
mov
out
div
sbb
add
xchg
pop
test
(bad)
(bad)
push
dec
or
or
rcr
mov
xor
(bad)
out
mov
pusha
xlat
mov
pop
mov
movs
(bad)
aad
cmp
fucomp
pop
int
mov
in
int
(bad)
(bad)
mov
jg
xchg
or
cs
push
les
or
fld
fild
fstp
dec
xlat
arpl
hlt
mov
cmp
sub
sub
popf
sub
stos
nop
adc
jmp
push
test
and
sbb
or
and
arpl
jns
(bad)
(bad)
(bad)
cmp
fimul
push
retf
cmp
mov
inc
jmp
fiadd
push
enter
cmp
mov
enter
pop
clc
mov
sahf
xchg
and
jns
jbe
push
jne
fimul
or
nop
into
and
xor
(bad)
cmp
stos
sbb
repz
(bad)
jmp
movs
imul
shl
cmp
sub
je
arpl
fmul
cld
lods
mov
add
(bad)
dec
outs
push
gs
out
inc
mov
loope
mov
push
(bad)
mov
push
(bad)
and
dec
enter
xchg
push
push
cmp
xor
movs
out
lea
xchg
sub
dec
(bad)
(bad)
(bad)
jmp
push
jo
movs
int3
dec
or
fsubr
loopne
inc
adc
ins
dec
(bad)
in
ins
and
(bad)
(bad)
(bad)
cli
push
cmp
sub
enter
adc
xchg
dec
outs
aam
outs
ja
cli
xchg
stos
mov
fldcw
fstp
addr16
aam
(bad)
xor
and
mov
xchg
jl
cmp
stos
sub
or
inc
fbld
sub
xor
cmps
inc
rol
cli
(bad)
in
shl
in
mov
jecxz
retf
pushf
inc
ins
hlt
sti
inc
mov
(bad)
call
mov
retf
adc
push
and
addr16
sub
(bad)
out
push
pop
inc
or
adc
inc
das
and
mov
(bad)
(bad)
(bad)
dec
repz
inc
imul
stos
jnp
mov
cld
mov
push
push
push
idiv
idiv
(bad)
mov
int
dec
mov
xchg
outs
push
pusha
addr16
jge
enter
(bad)
jo
sbb
inc
and
addr16
sbb
pop
cmps
cmp
shr
call
movs
jecxz
jp
int3
push
loopne
ja
add
inc
inc
sbb
push
rol
xchg
rcl
outs
xor
inc
js
or
pop
loope
(bad)
inc
leave
inc
cmp
inc
ins
daa
add
push
mov
add
mov
sbb
lods
adc
in
sub
popa
dec
(bad)
inc
and
retf
jns
sar
into
sub
jnp
or
sub
inc
xchg
shl
push
mov
arpl
dec
cld
in
xchg
stc
inc
jno
int
sar
mov
aam
std
pop
out
mov
add
add
adc
loopne
jmp
bound
jno
push
mov
xor
push
xor
leave
cmp
out
(bad)
push
(bad)
call
repnz
lea
mov
pop
xor
and
jnp
(bad)
(bad)
(bad)
dec
jg
mov
add
add
lock
sbb
push
popa
std
rcr
mov
push
dec
inc
xchg
add
enter
fwait
(bad)
jmp
aas
cmp
icebp
fsub
mov
lods
dec
pop
jb
cmc
fbld
adc
(bad)
(bad)
call
xor
sbb
mov
sbb
jbe
inc
cmc
iret
into
pushf
(bad)
retf
(bad)
(bad)
call
pop
adc
mov
jp
adc
inc
add
xchg
sti
xchg
iret
jecxz
leave
std
sbb
jmp
in
scas
jle
pop
mov
jo
stc
cmp
xchg
hlt
retf
xor
(bad)
(bad)
dec
inc
mov
jge
lods
sub
xor
enter
cmp
mov
mov
adc
push
retf
(bad)
(bad)
inc
sub
cmp
xor
push
xor
jmp
les
in
sbb
mov
dec
arpl
push
dec
xchg
shl
out
xchg
sahf
daa
mov
call
cld
call
jae
mov
xor
shl
mov
jo
fsubrp
mov
retf
(bad)
(bad)
(bad)
call
and
jmp
push
mov
push
loop
inc
xor
push
mov
xor
jmp
outs
dec
outs
ja
in
int
test
mul
inc
iret
mov
(bad)
jmp
push
sbb
ror
mov
inc
cld
push
jecxz
stos
inc
inc
lods
es
push
adc
add
(bad)
cmp
mov
adc
retf
data16
mov
sub
clc
out
fisttp
xlat
call
cdq
inc
or
data16
and
cmps
mov
jg
sbb
push
cmp
xor
xchg
xlat
jecxz
jb
mov
mov
push
adc
into
iret
in
xor
pop
in
pop
(bad)
(bad)
(bad)
(bad)
mov
jmp
arpl
sbb
lock
mov
and
popf
lahf
lahf
and
(bad)
(bad)
(bad)
(bad)
call
fisttp
xor
push
pop
push
pushf
adc
dec
retf
mov
jno
rol
out
(bad)
(bad)
(bad)
(bad)
test
adc
popf
mov
mov
stos
push
int
sub
test
call
or
fld
dec
test
push
scas
inc
aam
push
out
sub
xlat
fs
enter
shr
retf
push
lods
(bad)
dec
xchg
mov
adc
mov
pop
ja
cmp
dec
cmps
pop
fs
ins
sar
dec
or
jno
xor
adc
push
stos
dec
and
and
mov
cmp
add
call
mov
cs
in
adc
cmp
(bad)
(bad)
jg
jne
ja
add
push
sar
fimul
xchg
pop
cwde
lahf
xchg
std
out
adc
jmp
(bad)
jae
add
nop
xor
mov
sub
loopne
(bad)
mov
jle
mov
sbb
fld
push
fsubr
(bad)
call
dec
mov
iret
inc
xlat
inc
push
mov
pushf
test
jae
add
call
push
call
rcr
inc
sub
push
xor
adc
fwait
ret
dec
push
mov
mov
inc
(bad)
push
add
mov
movs
dec
shl
push
ficomp
jg
jmp
add
lock
mov
stc
push
sbb
fisttp
pop
dec
(bad)
jno
cmps
add
cmp
fst
or
or
cld
loop
pop
imul
shr
arpl
or
outs
in
fild
mov
shr
jg
sbb
push
ret
les
mov
call
push
sbb
push
inc
pop
sbb
aam
xchg
pop
jecxz
xor
lahf
out
or
out
ss
das
mov
int3
scas
xor
sahf
sahf
ja
sbb
jmp
jmp
test
movs
aad
adc
inc
daa
fwait
pop
std
(bad)
jmp
lods
loop
in
setbe
sub
jmp
in
inc
sub
adc
test
or
inc
inc
jb
outs
nop
cmps
cmp
call
lods
pop
xor
sti
jno
(bad)
adc
inc
inc
inc
fnstcw
(bad)
(bad)
(bad)
mov
movs
popa
xchg
cmps
fwait
addr16
or
inc
jmp
inc
imul
(bad)
(bad)
call
bound
cmp
jp
fbld
(bad)
out
mov
iret
cmp
int3
mov
add
mov
(bad)
jmp
and
(bad)
stos
cmp
xchg
mov
sbb
xchg
jp
or
fidiv
ror
lea
jl
jl
jle
push
mov
not
leave
test
sub
pop
add
push
repnz
test
outs
jl
sub
mov
xchg
data16
lds
jb
jmp
mov
xor
call
inc
pop
xchg
pop
pop
test
pop
sbb
inc
mov
dec
outs
mov
jp
mov
adc
cmps
pop
push
je
mov
(bad)
inc
xchg
cmps
or
push
xor
inc
movnti
mov
dec
(bad)
mov
sub
ja
enter
cli
cdq
(bad)
(bad)
(bad)
dec
(bad)
push
add
fdivr
mov
test
nop
jmp
sbb
adc
(bad)
call
add
lahf
jle
sahf
jne
mov
sbb
ins
jmp
inc
add
js
call
cmp
sub
inc
inc
ja
jp
fs
outs
cld
in
sub
(bad)
call
arpl
addr16
into
mov
sbb
loopne
cs
fidivr
inc
sbb
and
xchg
dec
adc
jmp
mov
out
or
into
dec
stos
fs
jmp
xchg
mov
jb
js
jmp
ins
push
push
jo
retf
(bad)
dec
dec
imul
adc
mov
retf
in
js
jns
js
push
cld
out
ds
push
push
ret
push
or
add
aam
rcl
out
sub
pop
mov
aam
in
push
retf
repz
call
or
fdivr
cmp
xlat
xlat
lock
jge
jp
popa
js
lods
in
cmp
outs
daa
cmps
dec
and
(bad)
jmp
rol
cmp
pop
mov
in
fcomi
xchg
xlat
out
rol
cmps
xor
(bad)
(bad)
call
jae
mov
dec
cmps
out
lock
inc
xor
push
lods
fstp
add
fwait
pusha
jecxz
or
xor
adc
jmp
and
int3
fnstsw
cli
les
dec
into
dec
ret
mov
mov
or
ja
mov
enter
lods
or
(bad)
mov
cli
mov
aam
jg
movs
push
pop
sub
jns
in
inc
jmp
pop
pusha
pop
pop
xor
mov
fisub
jmp
adc
es
jne
sub
in
push
cdq
push
xor
push
cld
(bad)
jg
pop
xor
push
xor
stos
mov
call
xchg
ja
sub
call
dec
jle
aam
leave
outs
sbb
mov
aam
add
or
inc
dec
pop
fxch
lods
dec
hlt
cmp
bound
mov
fimul
push
cli
dec
add
mov
and
shl
fild
dec
push
sub
jg
jmp
xor
mov
push
jno
ret
gs
adc
push
(bad)
(bad)
(bad)
(bad)
call
and
addr16
mov
pop
mov
xchg
jl
ret
jg
stos
test
mov
sbb
in
mov
enter
repz
fcmove
imul
sub
mov
push
enter
jae
xchg
inc
mov
je
test
(bad)
mov
in
aad
dec
sub
mov
cmps
mov
push
push
fmul
(bad)
(bad)
jmp
jmp
mov
cwde
xor
nop
pop
lock
repnz
adc
sbb
call
es
clc
mov
xchg
or
mov
adc
out
sub
fsubr
push
or
inc
daa
(bad)
in
pop
or
call
xchg
cs
jmp
(bad)
js
cs
test
lea
and
sub
mov
(bad)
(bad)
push
imul
jle
pop
sub
mov
arpl
fnstenv
mov
sub
xchg
(bad)
dec
xchg
test
xchg
or
dec
shl
xor
(bad)
(bad)
push
mov
xchg
(bad)
in
xchg
int3
xchg
fisttp
cmp
into
jnp
jmp
mov
jmp
inc
ror
mov
sbb
mov
mov
push
int
jg
and
js
cmp
push
sbb
enter
retf
(bad)
inc
dec
xchg
xchg
aam
inc
lods
mov
dec
mov
jle
jmp
(bad)
(bad)
call
dec
es
xlat
fsub
(bad)
jbe
jae
jo
mov
scas
cli
call
ror
clc
jg
stos
and
jns
lahf
mov
in
mov
push
inc
jle
cwde
jp
mov
mov
fidivr
xor
rcr
ins
fcmovb
enter
dec
jp
lds
mov
inc
sbb
xchg
adc
inc
(bad)
rcr
cld
and
cmp
or
cdq
sub
popf
leave
mov
(bad)
(bad)
(bad)
(bad)
cli
mov
mov
push
mov
cmp
jmp
shr
add
or
adc
adc
xor
mov
int
xchg
sar
fild
retf
jno
jecxz
and
and
(bad)
jmp
adc
je
cmp
fdivr
clc
jmp
scas
lock
sub
adc
sub
dec
jmp
pushf
pushf
aas
test
iret
and
fs
je
jbe
cmps
int3
stos
sub
(bad)
push
lahf
mov
jb
fst
pop
gs
sbb
inc
cmps
leave
jns
clc
sar
pop
pop
dec
jmp
inc
lock
xchg
jno
push
xor
sub
push
hlt
hlt
je
mov
inc
out
jb
mov
daa
push
fiadd
dec
mov
mul
inc
sbb
xchg
int
into
movs
loope
rol
(bad)
cmp
xchg
sbb
out
jne
call
dec
cmps
jmp
pushaw
add
xor
fadd
ja
cld
(bad)
(bad)
inc
jbe
adc
xchg
push
xor
ins
inc
or
or
jo
in
mov
pop
inc
mov
adc
and
xchg
leave
sub
jae
xchg
inc
mov
out
add
sbb
retf
stos
mov
ret
push
sub
js
or
add
(bad)
dec
xchg
aas
jns
and
adc
xor
add
std
jg
sar
jns
sub
lock
dec
jg
push
and
(bad)
mov
inc
ret
sbb
xor
sbb
xor
sbb
cli
(bad)
(bad)
jmp
rcl
imul
adc
mov
and
aam
jmp
sar
lods
mov
(bad)
(bad)
out
xchg
stc
jp
mov
dec
outs
push
pop
xchg
(bad)
(bad)
(bad)
(bad)
fldl2e
loope
scas
pop
(bad)
cmps
xor
js
adc
repz
inc
adc
cwde
or
add
outs
pause
(bad)
call
or
lea
dec
ss
fmul
push
xor
push
jno
lods
(bad)
das
int
(bad)
(bad)
(bad)
call
cld
pop
and
pop
mov
adc
jmp
xor
mov
mov
xchg
das
in
out
and
push
cs
add
jl
mov
push
jbe
jmp
inc
dec
ret
out
jns
jb
or
int
setbe
mov
xchg
inc
rol
retf
imul
mov
sub
cli
call
lahf
rcl
mov
xor
jp
ss
(bad)
out
push
pop
xchg
xor
push
push
out
cs
scas
test
mov
mov
push
pop
daa
sbb
xor
ret
pop
push
icebp
stos
out
bound
test
pop
push
movs
ss
sbb
mov
jo
rcl
or
jg
adc
ja
mov
jbe
idiv
(bad)
(bad)
call
inc
cmp
lds
out
sub
les
jmp
xor
mov
inc
add
inc
cmp
(bad)
xor
xor
lahf
neg
mov
add
pop
inc
xchg
sbb
mov
jmp
das
cli
dec
sub
cmc
xchg
outs
in
out
sbb
xchg
imul
cmp
out
pop
push
cmovnp
(bad)
(bad)
jmp
dec
out
hlt
cmp
(bad)
push
jecxz
scas
pop
xchg
lods
cdq
sub
ins
mov
fcom
lock
(bad)
jmp
mov
sub
stos
pop
push
adc
push
mov
sar
(bad)
(bad)
jle
pop
pop
mov
(bad)
rol
loope
cmp
cmps
xor
pushf
call
add
imul
clc
imul
mov
(bad)
jmp
cmp
aad
dec
or
sub
jge
imul
mov
or
stc
dec
xchg
ins
out
nop
jmp
cmp
dec
mov
in
jl
je
lods
pop
(bad)
push
(bad)
jb
inc
clc
inc
in
and
(bad)
mov
add
dec
xchg
fdiv
(bad)
(bad)
push
cs
outs
stos
pop
stos
div
push
pusha
dec
cli
ja
ja
pop
cmp
push
sub
in
cli
(bad)
(bad)
call
mov
lock
int3
test
ins
ss
mov
sti
xor
call
push
xor
add
dec
jg
dec
mov
dec
cmp
ret
pop
xchg
jbe
leave
(bad)
jmp
jge
xor
fst
xchg
je
repnz
fwait
movs
mov
data16
(bad)
call
inc
pusha
jl
stos
add
xor
or
adc
pop
dec
xor
(bad)
in
nop
jns
adc
sbb
cld
loop
sbb
enter
ficom
movs
call
cmc
nop
and
push
imul
cmp
adc
stos
adc
(bad)
(bad)
call
arpl
sbb
mov
popf
mov
dec
push
mov
fs
inc
(bad)
or
data16
xchg
mov
test
pop
xor
mov
jp
shl
es
das
movs
mov
push
gs
xor
push
xchg
out
cld
(bad)
(bad)
(bad)
fdiv
imul
push
mov
jg
pop
xchg
jecxz
xlat
jle
pop
ret
jns
add
dec
call
xor
(bad)
(bad)
inc
leave
aam
sbb
push
retf
mov
ffree
sbb
mov
sub
aad
(bad)
mov
cmp
or
inc
retf
push
sub
xchg
dec
lods
cli
push
push
loope
cmp
(bad)
(bad)
jg
mov
les
pusha
test
sbb
push
jb
sub
dec
ror
cli
jge
inc
jp
lahf
(bad)
ds
(bad)
call
(bad)
and
enter
outs
jmp
daa
sbb
shl
popa
push
es
cld
repz
jp
(bad)
(bad)
call
and
adc
fwait
test
push
mov
mov
pushf
scas
push
add
(bad)
push
add
das
xchg
cwde
mov
int3
retf
sub
aad
stos
(bad)
(bad)
(bad)
call
inc
mov
push
call
xchg
pop
push
pop
stos
or
push
inc
aad
xchg
or
int
enter
cs
pop
gs
jmp
push
retf
pop
mov
push
jnp
sti
mov
and
jmp
sbb
stos
and
adc
pusha
xor
cmps
stc
(bad)
(bad)
(bad)
jmp
leave
aaa
movs
das
ins
inc
add
cmps
mov
jae
add
in
arpl
outs
or
jb
test
mov
call
call
neg
xor
leave
jo
test
lds
out
push
arpl
adc
(bad)
(bad)
(bad)
call
inc
cdq
mov
mov
sub
push
ins
test
xchg
nop
xchg
and
(bad)
dec
and
(bad)
(bad)
cmp
adc
ret
outs
pop
adc
pop
dec
dec
push
mov
jge
pop
inc
loop
(bad)
inc
pop
cli
ficomp
(bad)
mov
ret
sub
sbb
shr
and
aam
scas
mov
(bad)
jmp
aad
cmp
mov
sbb
cmp
cld
add
dec
mov
pop
pusha
inc
mov
mov
cmp
xchg
aad
push
aam
addr16
test
sub
bound
mov
dec
add
into
mov
(bad)
call
gs
not
repz
mov
fstp
jmp
mov
ror
int3
cmp
push
xor
and
and
inc
scas
and
loopne
jb
test
aad
icebp
xchg
cli
sbb
pusha
repnz
mov
sbb
cmp
(bad)
out
sub
lods
xchg
ins
jns
jmp
inc
jo
pop
jmp
fstp
cmps
iret
enter
hlt
call
(bad)
(bad)
sub
mov
js
mov
xlat
mov
mov
ret
fiadd
inc
les
bound
outs
sbb
in
sbb
scas
les
sbb
imul
fdivr
(bad)
(bad)
cdq
jmp
adc
push
mov
mov
int
cmc
setne
xor
fiadd
push
add
adc
fwait
retf
cmp
pop
fwait
inc
push
test
xchg
sar
pop
inc
jmp
pop
push
jp
aad
or
(bad)
jg
and
es
cmps
xchg
loop
push
pop
or
jbe
imul
dec
dec
cld
(bad)
mov
test
mov
xchg
loopne
dec
jnp
ret
mov
inc
mov
dec
mov
pop
(bad)
dec
mov
arpl
call
jbe
sub
jns
pop
mov
pop
pop
test
gs
add
stos
cld
cmp
cmp
xchg
sub
ret
xchg
inc
mov
mov
(bad)
rol
or
jns
(bad)
xchg
mov
(bad)
inc
js
loope
fs
dec
pop
push
(bad)
sbb
js
mov
icebp
repnz
cmps
jno
xor
sbb
je
and
mov
imul
push
xor
inc
mov
stc
mov
call
(bad)
cmp
shr
call
xchg
gs
je
mov
fimul
dec
add
mov
retf
ret
add
out
(bad)
(bad)
call
jb
popf
fnstsw
test
mov
xor
(bad)
(bad)
(bad)
call
pop
xchg
mov
gs
retf
repz
(bad)
fcmovnbe
(bad)
or
and
imul
jg
and
loop
test
loopne
out
adc
retf
clc
dec
shl
and
test
jecxz
mov
movs
add
icebp
(bad)
jg
mov
or
dec
jb
leave
ss
jle
inc
push
mov
lock
dec
enter
addr16
sar
jmp
xchg
dec
call
push
add
jns
in
push
xchg
mov
sub
repnz
hlt
das
fldcw
mov
out
(bad)
dec
shl
lods
mov
stos
icebp
addr16
add
dec
neg
add
(bad)
jg
call
inc
or
jg
sbb
pop
inc
xrelease
xchg
(bad)
(bad)
(bad)
(bad)
mov
repz
cdq
sahf
xor
adc
test
popf
xchg
pop
stos
cmps
sub
les
test
lods
data16
stc
es
int
iret
push
xor
xchg
xchg
mov
popa
cmps
and
lock
in
dec
xor
push
lods
aam
dec
adc
test
into
pop
push
adc
(bad)
call
pop
sahf
lds
xchg
pop
cmp
jmp
xchg
xchg
mov
push
std
mov
xor
push
(bad)
out
std
test
fyl2xp1
cmp
or
mov
(bad)
(bad)
(bad)
call
ins
fs
adc
lea
ja
mov
mov
(bad)
dec
add
(bad)
(bad)
push
sub
xor
pop
pop
dec
test
xor
cli
pop
cwde
add
cmps
pusha
cs
pop
pop
movs
ins
xchg
add
and
mov
adc
add
mov
movs
sub
add
(bad)
(bad)
jge
jle
loop
clc
or
add
push
sbb
mov
(bad)
call
jp
xlat
ins
xchg
or
scas
pop
loop
(bad)
xchg
imul
es
sti
rep
add
and
mov
add
arpl
dec
sbb
arpl
xchg
or
add
fst
or
or
fbld
xor
xor
mov
inc
daa
gs
jmp
test
aad
inc
es
inc
jns
add
jl
inc
adc
sbb
dec
ja
ds
dec
fnstenv
retf
xchg
sbb
push
push
jge
in
clc
sbb
lea
xchg
mov
pop
jbe
(bad)
dec
(bad)
pop
lahf
push
not
daa
inc
dec
test
inc
mov
sub
mov
call
addr16
mov
inc
into
mov
jo
xor
ins
jmp
ins
(bad)
adc
sbb
loop
mov
mov
stos
call
pop
(bad)
pushf
dec
outs
xor
jmp
inc
stos
into
retf
sahf
(bad)
(bad)
(bad)
dec
ss
mov
pop
ja
(bad)
pop
sub
xchg
dec
mov
pop
push
adc
aad
adc
cli
(bad)
(bad)
jmp
fwait
int
fs
pusha
push
mov
dec
add
mov
sub
ja
icebp
mov
out
(bad)
mov
das
ret
call
lods
cmp
xor
fdiv
xchg
(bad)
(bad)
(bad)
(bad)
call
hlt
cmp
adc
xchg
(bad)
jb
lds
loop
sar
sti
ret
mov
stos
loope
pop
mov
inc
sub
js
iret
pushf
cmp
outs
(bad)
(bad)
jmp
pop
cmp
sbb
out
cld
push
call
jmp
or
push
dec
shl
pop
shl
adc
or
add
cmps
(bad)
inc
jl
or
data16
clc
push
mov
cli
mov
ins
or
sbb
mov
and
hlt
inc
inc
pop
(bad)
push
pop
cli
push
xor
(bad)
sbb
es
cmp
pop
test
cs
xchg
les
mov
(bad)
sbb
jnp
call
or
rol
imul
dec
xor
ss
cld
jle
mov
outs
call
sar
jmp
and
bnd
pop
retf
rcl
aad
movs
inc
xchg
inc
gs
call
enter
and
push
imul
lock
adc
(bad)
(bad)
jmp
iret
jge
push
out
push
xor
repz
mov
inc
das
xor
das
jb
movd
aaa
std
push
add
sub
mov
aaa
sbb
out
(bad)
(bad)
(bad)
push
and
pop
sub
xchg
jno
lods
mov
int3
rol
iret
inc
sbb
push
fisub
mov
push
call
(bad)
(bad)
(bad)
inc
adc
in
clc
mov
mov
cmps
mov
xor
and
repnz
jns
jae
cli
and
call
int
dec
nop
movs
xchg
pop
aas
push
out
push
dec
int3
fcomp
mov
shl
dec
pop
dec
out
pop
cli
(bad)
(bad)
(bad)
jmp
or
inc
adc
cmp
mov
ret
jno
call
(bad)
xlat
call
ins
dec
(bad)
imul
mov
iret
mov
mov
test
in
xor
aam
or
add
dec
ret
es
pusha
lds
adc
js
jno
imul
jnp
ins
push
xchg
aam
pop
(bad)
mov
cwde
xchg
mov
popa
repz
enter
sub
ror
inc
std
(bad)
call
jno
xor
push
xor
fyl2x
xchg
or
loope
cld
(bad)
jg
pop
enter
repnz
repz
ret
cmp
movs
fcmovnb
stos
in
js
(bad)
fcomip
add
xor
xor
ret
daa
fnstcw
dec
test
(bad)
inc
adc
fistp
movs
addr16
sub
ret
out
push
mov
pop
test
mov
jg
and
ret
dec
sti
popf
adc
and
outs
xchg
xchg
mov
xor
fwait
dec
cmc
and
(bad)
in
fnstenv
cmp
leave
movs
sub
fwait
mov
sar
(bad)
inc
and
popf
pop
cdq
inc
pop
jecxz
lods
xor
sbb
rcr
mov
fwait
movs
push
mov
dec
add
movs
retf
fs
shl
pop
enter
popa
(bad)
(bad)
inc
and
jb
cwde
aaa
cdq
sahf
jg
dec
out
sub
dec
movs
out
pusha
cmc
daa
das
add
(bad)
adc
inc
scas
daa
mov
push
jb
pop
cmp
adc
push
xchg
(bad)
dec
ss
sub
in
dec
adc
xchg
add
fwait
call
test
sbb
popf
or
add
and
add
ds
or
fisub
(bad)
(bad)
(bad)
mov
sub
adc
or
push
mov
add
mov
mov
(bad)
hlt
aam
fcom
call
and
leave
mov
mov
inc
iret
in
mov
seto
(bad)
(bad)
call
in
and
xchg
and
call
xchg
pop
mov
jne
je
mov
call
sub
or
int
fisub
xchg
xor
outs
fs
das
fnstenv
(bad)
fst
ins
mov
pop
cld
push
push
sub
loop
xchg
not
add
cmp
clc
(bad)
(bad)
call
sbb
je
data16
(bad)
inc
cmp
and
test
sbb
push
lahf
lds
push
(bad)
inc
and
push
imul
retf
sahf
jnp
lahf
cmc
(bad)
ja
ret
adc
mov
dec
adc
call
movs
jae
jle
push
or
cmc
(bad)
push
ror
push
fmul
clc
ror
cmc
jecxz
jge
int3
int3
pop
sbb
enter
(bad)
push
cwde
xor
retf
mov
repz
fcmovnu
cmp
in
mov
mov
les
cmp
sub
(bad)
call
push
cmp
mov
retf
out
movs
inc
call
or
cmps
or
mov
pop
cmp
(bad)
std
dec
xor
push
ins
dec
cli
pusha
sbb
not
mov
xchg
jb
sbb
xor
sbb
jmp
add
jns
sbb
in
mov
retf
clc
push
lods
push
pop
pop
dec
pop
mov
and
gs
mov
dec
pushf
outs
and
sub
sar
int
adc
xchg
pop
dec
pop
or
das
sar
repnz
nop
scas
rol
loopne
inc
loopne
xor
xchg
ds
call
cwde
xor
fimul
loope
pushf
fld
add
(bad)
push
sub
inc
or
jne
pop
and
mov
dec
xchg
jge
jmp
push
mov
inc
mov
pushf
cmp
sbb
or
and
mov
mov
(bad)
push
pop
pushf
cmp
sub
lods
dec
into
pusha
jle
aam
pop
ds
(bad)
(bad)
fbstp
push
mov
shr
jo
sub
test
push
adc
call
hlt
(bad)
jmp
dec
xchg
aam
sub
js
cmps
jmp
and
daa
push
adc
sar
push
aad
mov
fadd
int3
push
ins
cmp
sub
add
xchg
sub
mov
call
fild
and
cmp
inc
or
mov
ja
push
pop
shl
jg
sahf
movs
aad
and
push
lods
into
test
scas
(bad)
dec
dec
mov
ret
stos
hlt
(bad)
mov
dec
mov
fild
pop
into
fidivr
in
lods
repz
(bad)
jmp
mov
cmp
sub
cmps
retf
dec
jnp
retf
mov
sbb
jmp
or
xchg
leave
mov
test
mov
xor
call
add
std
shl
push
(bad)
rcr
sub
sbb
(bad)
(bad)
push
test
sub
mov
inc
test
sub
enter
les
add
mul
cwde
popf
push
sub
and
call
cmps
hlt
mov
jmp
retf
loopne
arpl
add
jg
pusha
cld
aas
jecxz
sub
dec
repnz
aam
jb
paddb
(bad)
call
mov
mov
mov
and
aad
dec
(bad)
ret
or
(bad)
push
or
adc
adc
push
or
mov
and
lea
push
dec
or
and
pop
ror
repnz
inc
jae
jmp
mov
ror
inc
sbb
pop
dec
sbb
stos
pop
hlt
or
les
data16
xchg
mov
(bad)
(bad)
jmp
jo
cmp
jnp
xchg
and
std
adc
inc
stos
cdq
sbb
adc
call
push
or
pop
fcom
sub
retf
mov
and
aaa
dec
dec
pop
pop
mov
les
and
(bad)
(bad)
inc
test
daa
lahf
mov
xor
lds
mov
jg
dec
adc
inc
nop
test
sar
stos
imul
ss
push
(bad)
jg
dec
mov
inc
xchg
ret
xor
cmps
mov
(bad)
fcomip
call
int3
xchg
add
jb
jbe
cdq
mov
fld
call
jmp
dec
mov
dec
inc
jecxz
enter
and
addr16
jle
icebp
(bad)
(bad)
(bad)
(bad)
jge
test
(bad)
jle
pop
int3
xchg
xchg
xchg
dec
jmp
jne
nop
(bad)
mov
bound
sub
adc
pop
test
(bad)
jg
dec
test
pop
(bad)
ins
(bad)
(bad)
in
lea
in
aas
std
cdq
ss
cmp
add
mov
dec
iret
clc
loopne
test
fsubr
mov
cmc
call
icebp
xor
das
fild
jmp
call
dec
call
imul
dec
sub
js
stc
cmp
popa
mov
and
or
mov
push
sub
(bad)
(bad)
call
mov
dec
cmps
mov
cmp
dec
mov
inc
xchg
cmp
cdq
divps
xchg
mov
in
outs
push
(bad)
fsub
test
mov
(bad)
(bad)
(bad)
inc
in
bound
pop
sub
and
call
xchg
xchg
push
mov
loop
(bad)
(bad)
(bad)
dec
mov
jno
call
enter
and
xchg
or
sar
hlt
push
push
xchg
(bad)
jl
pop
fnop
outs
leave
ds
leave
mov
cmp
dec
(bad)
mov
mov
mov
xor
xchg
and
stc
fs
push
mov
(bad)
popa
std
(bad)
mov
jmp
aaa
daa
pop
lds
or
call
inc
cmp
mov
aaa
out
cmps
out
shr
adc
pusha
lods
(bad)
jge
call
cs
xchg
push
cmps
inc
icebp
popa
repz
test
je
ins
fsub
xchg
dec
inc
mov
jb
mov
pop
sbb
retf
xchg
(bad)
call
pop
test
pop
cs
jae
(bad)
loopne
sub
adc
adc
xor
call
fcmove
popf
mov
stc
push
xor
inc
rol
in
push
(bad)
(bad)
adc
clc
data16
sbb
(bad)
(bad)
jmp
xor
or
push
jecxz
xchg
les
xor
out
test
das
sbb
sub
jns
cmp
(bad)
(bad)
dec
loope
in
cmp
or
cmp
pop
pop
mov
xor
call
pop
sbb
sub
mov
mov
stos
ds
movs
xor
mov
mov
rcr
in
or
stos
push
stos
pop
xchg
adc
loopne
or
call
xlat
je
inc
or
sub
cs
mov
add
push
clc
les
ret
or
or
test
ret
ds
addr16
xor
mov
pop
mov
shl
gs
es
jp
fcomip
stos
jo
int
adc
sbb
push
add
stos
icebp
pop
lea
jg
fisttp
dec
push
pop
dec
frstor
ror
lahf
imul
add
ret
dec
movs
hlt
retf
in
inc
rol
add
jg
addr16
sahf
jmp
jmp
dec
jb
fdivr
xor
test
add
repnz
xor
cdq
mov
dec
outs
mov
(bad)
(bad)
(bad)
call
jmp
cmp
mov
repz
sbb
movs
and
and
mov
(bad)
(bad)
call
pop
jno
les
pushf
es
movs
cs
add
push
call
push
(bad)
(bad)
call
in
push
jno
push
dec
loope
or
dec
ins
daa
mov
push
mov
dec
and
(bad)
jmp
into
mov
div
mov
sbb
gs
fidivr
(bad)
(bad)
(bad)
push
lods
mov
mov
call
ret
mov
add
leave
(bad)
(bad)
call
pop
jb
xchg
xchg
mov
enter
les
sti
(bad)
(bad)
dec
dec
inc
lea
clc
pusha
loopne
cmp
out
aaa
inc
fsub
(bad)
lds
(bad)
(bad)
jg
jl
mov
xchg
dec
mov
push
mov
jmp
mov
push
jl
dec
retf
(bad)
(bad)
out
clc
mov
or
mov
ins
loope
xchg
dec
in
sbb
in
sahf
cmp
mov
mov
inc
sbb
(bad)
(bad)
mov
shl
into
stos
ret
jmp
xchg
leave
(bad)
out
sub
ins
add
(bad)
(bad)
push
pop
retf
(bad)
(bad)
jmp
or
addr16
rcl
mov
xor
sub
movs
adc
out
xchg
jp
aam
(bad)
(bad)
inc
jge
mov
mov
cmp
movs
arpl
cmp
or
jns
fadd
aad
push
mov
std
fistp
jbe
sar
scas
jbe
inc
outs
mov
cmps
jbe
sti
jle
jbe
xchg
(bad)
sar
mov
push
das
mov
or
pop
loopne
dec
sti
pusha
fild
je
fdivrp
and
mov
add
test
call
adc
lds
mov
xchg
(bad)
xchg
jns
lahf
pop
and
std
fsub
stos
outs
ins
lods
icebp
lods
int
repz
jnp
or
dec
push
(bad)
popa
xchg
cs
cmp
call
and
or
cmp
sahf
cli
cld
xor
mov
rcl
pop
mov
jmp
les
jo
push
stos
int
les
dec
ror
xchg
out
jmp
or
aad
ret
fcmovnbe
aaa
cld
(bad)
(bad)
mov
mov
pop
xchg
out
adc
shl
push
mov
(bad)
fisttp
or
pop
cdq
adc
in
and
dec
icebp
call
add
ror
(bad)
dec
cld
je
pusha
ret
call
push
and
test
cmp
nop
and
(bad)
inc
push
pop
(bad)
shr
sbb
out
jb
out
jmp
lods
(bad)
(bad)
dec
scas
mov
aad
mov
mov
mov
(bad)
jmp
cs
nop
(bad)
out
pop
cmp
test
push
movs
adc
outs
das
test
inc
ja
sub
xchg
(bad)
adc
sbb
mov
(bad)
(bad)
in
fnstcw
jmp
mov
and
add
test
(bad)
(bad)
(bad)
call
inc
inc
xchg
jo
pop
jmp
sub
jp
add
mov
sahf
or
test
push
add
xchg
jnp
(bad)
mov
jmp
xor
inc
push
scas
in
mov
clc
shl
icebp
addr16
or
(bad)
(bad)
mov
lds
arpl
loopne
dec
jno
(bad)
mov
mov
inc
adc
jle
cs
xor
cmp
mov
fisub
sub
dec
(bad)
(bad)
(bad)
inc
div
sbb
(bad)
xor
pop
inc
lods
add
add
shl
pop
test
jmp
push
es
mov
pop
loope
sbb
popf
push
sub
popa
fild
in
fucomi
dec
(bad)
(bad)
(bad)
jmp
xchg
into
call
loop
rcr
(bad)
fsub
hlt
std
int3
aad
(bad)
adc
add
mov
int3
jp
das
adc
call
jmp
jb
pop
sub
in
cmp
cmp
cli
ds
je
mov
clc
jmp
das
rcl
not
pop
aaa
adc
(bad)
(bad)
jmp
mov
jmp
mov
ins
push
lock
jle
imul
std
(bad)
call
cs
retf
repnz
cmp
call
retf
jg
mov
xchg
call
jmp
xchg
dec
xchg
fwait
in
cwde
push
clc
(bad)
dec
jno
ret
outs
sub
pop
jle
fstp
cmp
adc
sub
(bad)
dec
fs
cmp
out
mov
aaa
out
mov
xor
sar
sar
ds
mov
mov
push
or
aas
adc
pop
retf
outs
(bad)
call
jecxz
sub
clc
jge
fisubr
push
xchg
jne
cs
xor
jl
cmp
arpl
cs
mov
test
push
xchg
and
sbb
cmp
jae
clc
cmp
cld
(bad)
(bad)
inc
jg
xchg
test
jo
jbe
pop
or
sbb
(bad)
retf
dec
ja
in
mov
add
jmp
je
je
and
fs
mov
push
fadd
xchg
dec
gs
adc
daa
xor
cs
and
inc
xchg
les
pop
mov
(bad)
call
mov
ficom
out
fild
jecxz
xor
dec
mov
in
out
cld
or
sbb
mov
jns
call
nop
jecxz
xchg
mov
pop
cmp
pop
pop
jg
inc
pop
mov
popf
jnp
outs
mov
aas
idiv
ja
and
pop
in
(bad)
(bad)
(bad)
inc
jle
lock
cs
mov
out
mov
jbe
call
fwait
mov
dec
mov
dec
std
mov
jge
outs
jle
mov
sbb
jmp
fwait
xlat
scas
mov
(bad)
out
sahf
xchg
call
dec
(bad)
xor
adc
xchg
fdiv
addr16
add
(bad)
call
mov
icebp
dec
addr16
jp
outs
sbb
inc
add
(bad)
(bad)
(bad)
mov
cmp
rol
stos
call
jmp
add
sub
xor
retf
push
std
add
call
mov
pop
xchg
lds
loop
test
xor
inc
test
sub
mov
inc
and
pop
dec
(bad)
test
cmc
inc
and
pop
(bad)
(bad)
(bad)
jmp
xor
inc
jge
movups
jl
lock
push
mov
inc
or
jae
loopne
(bad)
(bad)
(bad)
(bad)
cmp
jle
es
cmp
movs
outs
fdivr
bound
dec
mov
mov
repnz
hlt
push
lods
jb
imul
fwait
jb
pop
xor
out
add
cmp
fwait
and
sub
push
mov
cmp
(bad)
mov
lods
mov
mov
xchg
and
pop
and
mov
pop
jno
push
ja
dec
arpl
xor
mov
call
inc
bound
in
xlat
inc
mov
dec
scas
test
dec
and
mov
(bad)
into
push
xchg
(bad)
(bad)
fcomip
and
leave
cmp
inc
xor
sbb
scas
out
add
(bad)
(bad)
(bad)
dec
jl
mov
xlat
fs
inc
jmp
repnz
or
mov
xchg
add
add
cmp
imul
(bad)
jg
push
bound
in
stos
cmps
jmp
adc
dec
mov
lea
add
fisttp
jp
jl
aad
(bad)
mov
cmp
aam
nop
jmp
lahf
cmps
mov
jg
and
icebp
inc
sar
jbe
(bad)
(bad)
(bad)
jmp
push
in
xchg
sub
xor
aaa
xchg
inc
fnstenv
inc
std
mov
mov
lods
push
(bad)
push
and
add
pop
inc
sub
sbb
outs
add
cmp
scas
clc
mov
sbb
mov
mov
jg
clc
mov
lea
(bad)
mov
or
xor
je
jg
mov
ret
sbb
fwait
inc
(bad)
fsub
call
imul
jp
add
aam
inc
jne
push
ja
rcl
into
pop
(bad)
(bad)
dec
sub
xor
and
sub
xor
(bad)
bound
adc
int3
push
std
(bad)
dec
cmps
ret
push
mov
add
sbb
cld
sbb
out
(bad)
call
(bad)
outs
push
jge
sub
loope
ret
adc
sti
cmp
aam
addr16
in
(bad)
(bad)
jmp
inc
or
aaa
xor
and
cmp
shr
dec
mov
pop
fbstp
mov
in
repz
(bad)
loopne
mov
mov
pusha
sbb
popa
loopne
jge
push
daa
mov
(bad)
(bad)
jmp
mov
bound
push
push
sub
outs
das
jg
pop
adc
mov
idiv
enter
(bad)
sti
fcos
dec
xor
fbld
test
aas
inc
movs
stc
(bad)
test
fucom
mov
lods
or
sub
jmp
dec
push
cmp
rol
mov
(bad)
(bad)
(bad)
call
xchg
psubsw
adc
sbb
fbld
adc
inc
add
or
aaa
xchg
sar
mov
mov
mov
outs
sar
jg
or
xor
jg
outs
jle
cli
leave
pop
test
pushf
ret
push
mov
sbb
cli
(bad)
push
rcl
shl
imul
scas
cmp
loop
add
fbstp
mov
and
repnz
(bad)
(bad)
(bad)
call
jo
int3
mov
mov
fwait
jle
mov
dec
xchg
call
mov
(bad)
(bad)
push
dec
or
test
mov
retf
rcl
add
jbe
sahf
addr16
pop
test
adc
mov
fwait
push
(bad)
(bad)
(bad)
dec
fcomp
and
cmp
mov
cmp
mov
push
retf
and
(bad)
(bad)
(bad)
call
scas
or
mov
xchg
stos
aad
test
gs
jno
aas
rol
jae
sbb
mov
mov
inc
sub
lea
daa
mov
inc
add
and
add
(bad)
(bad)
inc
and
jb
sub
xchg
add
xchg
push
js
xor
daa
mov
jbe
jmp
iret
mov
and
or
cmp
cdq
mov
push
adc
mov
movs
inc
pop
cmp
and
retf
xor
add
cli
mov
xchg
jb
ja
cli
aaa
inc
or
sar
(bad)
(bad)
js
sub
loopne
loop
outs
xor
mov
aad
lea
jne
add
(bad)
mov
dec
call
inc
les
test
or
adc
jae
cdq
adc
rol
(bad)
xchg
iret
adc
xchg
(bad)
(bad)
(bad)
in
jbe
inc
inc
mov
dec
xchg
push
mov
in
cmp
sub
mov
in
xchg
push
pop
ja
nop
push
pusha
(bad)
(bad)
(bad)
call
or
shl
inc
xor
unpcklps
inc
aam
inc
js
retf
rol
push
aaa
ds
sahf
mov
adc
inc
(bad)
(bad)
(bad)
call
or
pop
xchg
test
fs
mov
in
xchg
sti
test
aad
retf
cwde
jle
pop
(bad)
ins
sub
push
mov
cmp
and
das
shr
aad
push
sub
mov
mov
push
add
cmp
push
test
test
gs
xchg
mov
scas
pop
fabs
cmp
pop
clc
pop
(bad)
imul
adc
jnp
out
xor
push
xor
pop
jmp
pushf
and
pusha
bound
add
jmp
adc
(bad)
sbb
fist
jl
daa
(bad)
(bad)
dec
cmps
or
pop
sbb
daa
jecxz
pop
mov
pop
retf
clc
sbb
cs
(bad)
(bad)
jmp
mov
clc
cli
mov
ret
ss
mov
xlat
pop
mov
ret
jmp
pop
push
jl
shl
dec
adc
icebp
sbb
(bad)
mov
lahf
loopne
psubq
mov
popf
cli
mov
aaa
mov
mov
dec
loop
push
jo
add
add
jg
mov
push
jmp
cmp
ins
imul
test
push
inc
addr16
int3
retf
lahf
rol
pop
xchg
mov
(bad)
(bad)
(bad)
jg
jmp
and
imul
ins
lock
imul
push
hlt
clc
(bad)
jg
sti
repnz
mov
cmps
adc
adc
sub
scas
mov
add
ret
(bad)
(bad)
aas
inc
out
call
or
cmp
ror
into
std
inc
cli
repnz
and
out
cld
jnp
jmp
movs
daa
fdivp
jge
in
mov
mov
repz
jbe
mov
cmp
mov
sub
(bad)
(bad)
(bad)
out
and
rcr
js
int3
and
mov
push
ins
fsubp
outs
pushf
push
push
cli
or
nop
sbb
mov
push
stos
(bad)
mov
mov
stos
rep
dec
mov
hlt
fisttp
jp
xor
lods
(bad)
adc
sti
and
aaa
adc
aad
dec
jg
jo
inc
(bad)
lahf
mov
mov
mov
(bad)
(bad)
(bad)
aas
xchg
scas
inc
push
test
das
sub
std
jl
push
cmps
aad
iret
shl
scas
mov
lea
(bad)
(bad)
call
jge
mov
mov
gs
out
lock
jmp
xor
(bad)
call
inc
jbe
xchg
add
sub
stos
sahf
adc
das
xor
fucomp
dec
inc
mov
dec
(bad)
(bad)
fisttp
sbb
cmc
add
dec
popa
fs
fs
scas
jmp
lea
inc
xchg
(bad)
jecxz
lea
cmp
(bad)
dec
push
(bad)
enter
add
sub
adc
stc
xchg
mov
sbb
(bad)
adc
mov
adc
pop
push
addr16
add
add
call
mov
pushf
loop
jmp
sub
mov
(bad)
(bad)
(bad)
jg
jne
popf
xchg
fs
or
pop
inc
push
rol
add
sahf
pop
xchg
aas
cli
and
jmp
jecxz
xchg
cmp
sub
hlt
out
pop
jae
cmp
enter
fdivr
or
or
mov
adc
mov
cmp
sub
xor
fild
(bad)
(bad)
jg
mov
dec
or
push
inc
stos
dec
int3
ja
and
sub
mov
(bad)
call
and
je
jns
inc
dec
ror
jmp
inc
mov
leave
sub
push
imul
and
cli
fldcw
ret
jae
in
inc
cli
cmp
adc
test
or
sahf
(bad)
mov
cmp
push
nop
fs
cld
addr16
mov
cld
mov
jmp
(bad)
(bad)
(bad)
call
imul
cmp
mov
aaa
leave
push
or
(bad)
jmp
sub
mov
pop
int3
push
outs
repz
add
pusha
or
push
scas
push
xchg
jg
pop
push
(bad)
call
xor
add
scas
sbb
pushf
push
out
(bad)
loop
fs
test
jmp
ins
cmps
cli
and
lahf
out
daa
or
(bad)
es
push
xchg
ror
fwait
dec
push
sub
jne
in
fidivr
call
pop
sub
es
pop
nop
inc
ja
adc
mov
mov
xchg
inc
and
jmp
sbb
jo
sar
and
out
dec
rcr
(bad)
inc
dec
(bad)
sub
mov
enter
jle
call
int
or
add
fwait
and
aas
or
call
jp
fpatan
push
call
add
mov
push
cmp
lods
push
jne
ss
sub
(bad)
(bad)
(bad)
(bad)
fcom
inc
movs
out
in
les
imul
cmps
test
mov
jmp
xchg
push
(bad)
(bad)
call
inc
outs
fiadd
push
pushf
pop
in
retf
retf
fcomp
in
push
test
jmp
(bad)
mov
jge
ds
inc
add
cmps
inc
jmp
mov
call
cmps
les
xchg
or
mov
add
mov
(bad)
jmp
inc
mov
outs
fiadd
pop
mov
inc
jmp
cmps
pop
push
xor
jae
mov
adc
mov
mov
sub
xchg
call
out
and
icebp
adc
dec
pop
(bad)
sahf
jnp
imul
das
shl
lock
cmps
stos
push
js
jle
(bad)
dec
sahf
mov
lods
cmp
fdivrp
(bad)
(bad)
push
mov
mov
xlat
loopne
fst
push
dec
inc
mov
icebp
mov
mov
mov
lods
aaa
jmp
in
shl
or
or
push
jmp
shl
(bad)
jno
push
sar
mov
ds
jns
aaa
cmp
mov
mov
std
jmp
call
cmp
and
pop
jge
ins
cmp
jg
rcl
rol
div
and
shl
es
shr
mov
popa
(bad)
aam
clc
outs
add
cmp
fwait
lahf
jecxz
iret
out
scas
(bad)
mov
xchg
clc
jmp
es
push
pop
xor
pop
mov
inc
icebp
jge
(bad)
(bad)
(bad)
out
(bad)
in
imul
test
bound
or
cmp
jl
(bad)
pop
mov
(bad)
jg
aam
jo
push
call
adc
push
or
(bad)
(bad)
(bad)
dec
push
sub
js
outs
mov
mov
nop
or
pop
mov
push
cmc
xchg
xor
(bad)
call
in
mov
cmp
aas
xor
pop
add
dec
test
clc
jmp
or
clc
jbe
cmp
inc
ror
popf
cdq
mov
(bad)
jmp
cli
or
or
mov
inc
clc
add
test
imul
mov
test
mov
cld
call
test
fwait
push
test
gs
(bad)
(bad)
jmp
cmp
cmp
push
fs
daa
arpl
or
push
cli
sbb
scas
cmp
add
jmp
add
addr16
jno
rcl
je
(bad)
(bad)
(bad)
fild
sbb
adc
adc
add
(bad)
jp
mov
int
jl
jmp
cli
(bad)
call
xor
leave
jae
leave
mov
and
inc
mov
loop
inc
mov
es
xlat
sti
and
mov
ja
sbb
pushf
outs
xor
je
pop
movs
fwait
(bad)
dec
(bad)
push
(bad)
jnp
mov
mov
xchg
(bad)
jmp
lds
push
inc
ins
xchg
and
call
movs
cmp
pop
neg
sbb
mov
mov
ja
push
dec
cld
cdq
cmp
jg
cmc
and
sbb
ss
push
into
sub
mov
sbb
stos
in
(bad)
(bad)
(bad)
sti
dec
loop
push
cmps
lds
out
fnstsw
jb
mov
(bad)
gs
mov
xor
(bad)
(bad)
mov
mov
lock
das
mov
push
dec
std
sbb
outs
pop
daa
scas
mov
aam
clc
in
inc
imul
or
sbb
call
(bad)
cmp
addr16
xor
cmp
cmp
loopne
lock
pop
sar
mov
xor
mov
pop
mov
cmp
lods
(bad)
jbe
pop
or
xor
fs
(bad)
(bad)
(bad)
(bad)
jge
mov
pop
push
movs
mov
call
xor
mov
out
mov
(bad)
fwait
movs
mul
nop
sar
in
xchg
lods
xchg
mov
(bad)
test
popf
mov
in
inc
cmp
jae
or
pop
std
(bad)
(bad)
mov
xor
dec
cmc
and
pop
das
ret
lahf
push
sbb
mov
(bad)
(bad)
(bad)
(bad)
std
or
mov
inc
fcomip
enter
fwait
and
dec
loope
jmp
call
daa
ja
pop
pop
scas
sar
call
jg
push
cmp
repnz
push
aaa
pop
xchg
cs
fwait
je
(bad)
(bad)
jg
std
sbb
je
push
shl
packsswb
xor
xchg
and
push
(bad)
mov
jg
cmp
int3
das
ror
push
mov
das
inc
inc
repz
inc
jmp
mov
mov
jp
retf
jmp
pop
movs
cmps
frstor
outs
add
jmp
inc
lea
cs
sub
clc
cmp
dec
mov
push
gs
mov
push
stos
movs
xor
or
mov
mov
bnd
test
dec
jnp
(bad)
(bad)
(bad)
jmp
inc
sub
mov
adc
(bad)
(bad)
(bad)
pop
mov
xor
pushf
pop
jl
neg
(bad)
js
xchg
loopne
xlat
sbb
das
jo
push
pop
repnz
cwde
inc
fadd
ror
icebp
and
sub
hlt
sahf
add
addr16
js
mov
iret
bound
in
cmp
jg
mov
push
xchg
(bad)
push
jg
push
sub
ja
jo
mov
scas
ins
dec
mov
sbb
jmp
into
mov
punpckldq
mov
dec
and
and
mov
adc
inc
and
or
push
inc
mov
pusha
or
pop
cmc
outs
aam
jg
(bad)
xor
test
push
lods
ins
cli
dec
cdq
mov
idiv
mov
mov
int3
loope
lods
jg
ja
xor
mov
lods
or
popf
push
(bad)
jmp
xor
inc
xchg
outs
movs
add
ja
sti
push
lds
inc
inc
sbb
inc
push
inc
loop
js
(bad)
call
bound
pop
lods
dec
sub
clc
ror
dec
push
neg
adc
cmp
out
mov
aam
jbe
cwde
mov
inc
rcl
(bad)
(bad)
jmp
xlat
shl
pop
adc
jl
push
pop
daa
in
dec
cmp
cmp
popa
(bad)
div
mov
pop
inc
inc
mov
jb
leave
jmp
(bad)
(bad)
inc
into
fcomp
cwde
sbb
sbb
lock
outs
test
aaa
out
mov
sub
(bad)
(bad)
call
jnp
outs
pop
and
xchg
inc
inc
icebp
sbb
pop
mov
xchg
dec
mov
jg
dec
mov
inc
and
sub
loopne
push
cmp
jae
(bad)
(bad)
(bad)
inc
mov
fadd
cld
add
dec
fdiv
jecxz
vcvtss2si
arpl
fidivr
call
pop
jmp
sbb
pop
lock
jmp
movs
es
sub
dec
mov
fcom
bound
lods
xor
(bad)
shl
sbb
and
or
cmp
or
icebp
pop
or
fwait
mov
fiadd
(bad)
(bad)
(bad)
dec
jle
and
dec
and
mov
cdq
push
xchg
int3
xor
repnz
or
push
or
jle
inc
pop
xchg
add
out
cld
mov
add
or
(bad)
(bad)
(bad)
jmp
mov
sar
(bad)
jecxz
hlt
stc
iret
sub
call
iret
je
or
xchg
mov
stos
or
aad
sub
pop
mov
push
inc
push
mov
push
aaa
std
(bad)
push
xor
stos
sub
inc
cmp
(bad)
mov
cmp
shr
clc
les
or
dec
push
in
add
mov
loopne
sub
xchg
sbb
add
sub
(bad)
adc
outs
fstp
pop
cmp
(bad)
(bad)
fld
inc
in
add
cdq
push
test
mov
and
(bad)
add
inc
jle
fdiv
sbb
inc
div
(bad)
(bad)
mov
push
sahf
add
mov
into
pop
push
lahf
jg
stc
cli
(bad)
mov
sub
sbb
mov
shr
clc
(bad)
jg
xor
lods
cs
xchg
mov
push
fcomp
or
xor
call
loopne
stos
dec
jp
mov
stc
ds
in
sar
daa
iret
fist
fimul
icebp
inc
stos
push
jnp
(bad)
mov
(bad)
hlt
and
and
test
ret
daa
fisttp
into
cmp
jl
mov
outs
mov
sbb
adc
inc
inc
add
fs
aaa
inc
(bad)
jg
dec
lock
icebp
cmp
rcr
(bad)
(bad)
(bad)
(bad)
clc
xor
mov
jno
inc
jno
shl
or
retf
in
push
aad
jmp
idiv
mov
mov
ds
daa
sbb
sar
mov
clc
iret
into
xchg
ja
faddp
pop
sub
rol
imul
jg
cmp
and
imul
fisttp
lock
int3
mov
cmc
stc
jno
adc
ja
xchg
iret
xchg
push
scas
clc
dec
inc
add
pusha
mov
sub
aaa
mov
(bad)
(bad)
(bad)
dec
jnp
cmp
ret
xchg
shr
ret
dec
add
inc
js
inc
add
cmp
pop
clc
mov
jle
popf
outs
in
cdq
add
mov
push
(bad)
xchg
push
cmp
movs
jecxz
aaa
loope
fnstcw
test
jmp
or
xchg
or
push
add
cs
add
(bad)
(bad)
jmp
daa
cld
into
and
lahf
or
aad
test
fld
cmc
je
fiadd
dec
sar
jmp
test
lds
mov
mov
inc
or
(bad)
call
dec
push
in
push
nop
inc
rcr
pushf
cmps
push
stos
add
adc
jne
dec
mov
retf
imul
int3
js
fisubr
xchg
jmp
inc
add
test
cmp
add
cld
mov
and
aam
mov
ror
loop
mov
shr
pop
lea
push
lods
push
loop
fwait
stos
call
jl
shl
add
adc
inc
push
aam
add
push
retf
retf
cli
push
popf
push
xchg
dec
adc
ss
sar
(bad)
(bad)
push
fs
adc
or
stos
xchg
or
test
jmp
xlat
pop
in
mov
shl
shl
jmp
std
dec
rol
test
xchg
or
and
test
add
jg
loop
adc
sub
hlt
jbe
pop
(bad)
cdq
add
xchg
cli
bound
call
shl
dec
ss
jmp
in
or
gs
rep
jmp
cmp
(bad)
(bad)
(bad)
dec
outs
mov
cmps
out
call
mov
out
sbb
or
shl
(bad)
(bad)
pop
and
test
in
push
arpl
adc
inc
mov
cli
stc
sub
imul
push
or
lock
outs
aam
(bad)
out
or
add
repz
stos
bnd
push
adc
adc
push
cmps
(bad)
jg
aas
mov
ins
push
cmps
mov
cmc
pop
sbb
pop
lock
test
ror
add
dec
mov
mov
mov
in
daa
cmp
loop
js
ja
ss
(bad)
(bad)
(bad)
push
push
fmul
jns
pop
jnp
push
push
lahf
mov
xor
inc
dec
adc
dec
or
fwait
add
inc
lahf
mov
in
dec
or
(bad)
(bad)
(bad)
inc
clc
cmp
xor
fstp
leave
push
out
jb
xchg
jnp
cmp
(bad)
call
sbb
or
pop
dec
inc
xchg
mov
xor
(bad)
cli
(bad)
(bad)
push
das
rcr
out
mov
inc
sub
ins
and
dec
call
jmp
das
in
push
ficom
out
setle
loope
cmp
pop
cmp
sbb
lea
cmc
(bad)
fbld
scas
pop
mov
outs
movs
call
jle
cmps
jle
jmp
cdq
pushf
jmp
retf
mov
out
sar
fisttp
loope
sbb
jmp
arpl
in
test
mul
adc
xchg
test
dec
or
call
mov
loope
call
nop
call
cmc
call
xlat
jns
xchg
out
mov
(bad)
(bad)
mov
lea
jae
jae
aad
or
in
hlt
fisubr
mov
fcomip
add
cld
mov
inc
fidivr
add
cs
inc
cs
xor
jns
add
lahf
call
jl
imul
clc
mov
mov
nop
fmul
popf
(bad)
(bad)
(bad)
dec
and
popa
ins
cmp
push
jne
dec
add
or
pushf
mov
cmp
gs
rcr
sahf
xchg
dec
loopne
(bad)
fadd
arpl
mov
(bad)
mov
call
lahf
out
jb
push
add
icebp
mov
(bad)
jno
aam
ror
pop
xchg
cwde
loop
fisub
leave
(bad)
mov
sub
dec
call
(bad)
call
cmps
loopne
(bad)
cmp
push
or
(bad)
rol
js
cli
jmp
cli
mov
(bad)
(bad)
push
or
and
test
inc
push
pop
mov
imul
fs
jno
xor
(bad)
dec
mov
or
or
sbb
in
or
inc
cmp
or
cmp
add
mov
sub
pop
push
xchg
icebp
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
push
aaa
ret
ret
add
(bad)
and
fcom
scas
and
ficomp
daa
(bad)
(bad)
(bad)
jmp
(bad)
stc
mov
mov
pop
std
mov
add
xchg
push
mov
retf
outs
xchg
pusha
std
call
in
xor
aam
data16
mov
test
(bad)
jg
dec
cld
mov
xor
xchg
es
into
push
call
or
xor
fimul
in
lock
loope
cmp
clc
sub
call
dec
stos
pusha
push
in
sub
clc
push
lods
sub
xor
pop
inc
dec
xchg
jmp
mov
scas
add
mov
adc
xor
(bad)
jmp
hlt
shr
push
add
cmps
enter
int3
sub
and
jns
test
sbb
xchg
into
dec
cmp
inc
arpl
cmp
pop
sbb
into
push
in
add
stos
popw
ret
aas
std
jmp
jnp
sub
xchg
or
jns
push
sub
inc
call
inc
or
adc
cmp
cmp
xor
mov
pop
cld
xchg
mov
rcl
mov
xchg
std
mov
pop
mov
outs
add
pop
(bad)
(bad)
stc
mov
scas
sub
jae
popf
adc
add
sub
push
mov
pop
in
jb
push
int
(bad)
(bad)
(bad)
aas
dec
or
mov
movs
ror
adc
in
xor
dec
mov
xor
jg
lock
lock
stc
dec
iret
ret
mov
rcl
inc
cmp
push
or
xchg
in
add
mov
mov
loopne
mov
sbb
(bad)
jg
hlt
popw
loope
cli
fisub
adc
jmp
ror
xchg
add
cmp
inc
out
repz
imul
pop
xor
xchg
sub
xor
sahf
ror
push
fild
rcr
xchg
jno
dec
mov
pop
movs
inc
push
or
stos
push
(bad)
jmp
(bad)
aas
(bad)
cmp
mov
mov
jg
adc
rcr
(bad)
(bad)
inc
cli
into
out
cmc
cmp
call
jg
cmp
sbb
sub
sti
je
(bad)
(bad)
(bad)
mov
cdq
sbb
stos
gs
jo
sub
repnz
sub
sbb
pop
mov
mov
dec
pop
arpl
xchg
xor
fistp
adc
mov
dec
icebp
mov
pop
data16
mov
mov
and
inc
push
cmp
pop
(bad)
(bad)
(bad)
jnp
push
push
lahf
pop
int3
xor
sbb
rcl
cs
ja
sti
mov
ja
in
(bad)
call
jp
outs
(bad)
jge
xchg
jo
cmp
sar
mov
fistp
cld
je
mov
call
inc
push
(bad)
test
loop
inc
es
and
(bad)
pushf
ds
(bad)
(bad)
jmp
push
out
fcomp
add
rcr
cmp
pop
jmp
jle
(bad)
(bad)
mov
jle
xchg
(bad)
(bad)
(bad)
call
xlat
sbb
(bad)
mov
and
inc
aad
dec
rol
or
sbb
push
cmp
inc
cmp
dec
xor
xchg
sar
cmp
mov
or
sbb
(bad)
push
cdq
push
xor
aad
push
aas
cmps
int3
mov
movs
and
adc
sbb
mov
jmp
fwait
sub
sbb
or
or
mov
retf
(bad)
(bad)
(bad)
jmp
leave
fsubr
mov
xor
lods
jl
enter
cld
adc
stos
and
cmp
pop
cmps
pop
addr16
mov
jecxz
iret
sub
loope
mov
sub
add
fcmovnbe
test
mov
push
clc
(bad)
(bad)
dec
sbb
jne
in
rcl
jmp
retf
sbb
test
mov
pop
(bad)
(bad)
(bad)
out
neg
mov
aad
enter
inc
js
inc
test
addr16
outs
cmps
pop
push
(bad)
(bad)
(bad)
(bad)
cld
adc
fs
and
fdiv
and
ins
sub
addr16
or
push
pop
add
(bad)
cld
stc
in
jmp
ins
retf
aam
sub
hlt
je
add
daa
jecxz
movs
dec
jl
pop
cmp
int3
dec
aaa
and
sub
adc
pop
dec
jb
loopne
sbb
xor
mov
call
popf
mov
xchg
push
cmp
xor
or
(bad)
call
clc
outs
mov
push
or
pop
sub
(bad)
(bad)
(bad)
mov
div
xor
jb
(bad)
sbb
out
fs
adc
dec
hlt
ss
dec
dec
inc
ins
(bad)
(bad)
out
or
lods
jp
clc
cld
popa
xor
jmp
mov
mov
mov
sti
mov
xor
cmps
into
pushf
test
pop
rcl
fwait
imul
and
xchg
mov
mov
lods
xchg
dec
mov
movs
add
add
(bad)
(bad)
(bad)
push
push
shl
loopne
in
mov
adc
dec
imul
sub
xchg
lahf
sbb
adc
mov
mov
cs
ss
or
stos
xchg
das
into
jb
sub
and
mov
add
jle
inc
ds
dec
pop
cmps
add
hlt
(bad)
mov
push
or
mov
(bad)
test
loope
mov
mov
mov
mov
lock
mov
and
dec
inc
ret
jmp
(bad)
out
repnz
pop
sub
add
cld
or
(bad)
(bad)
(bad)
push
add
loopne
loopne
mov
lods
(bad)
jl
dec
data16
mov
inc
lods
loopne
and
clc
(bad)
(bad)
call
pop
mov
jle
and
adc
cld
jne
jmp
push
jmp
call
push
shr
mov
mov
mov
idiv
jmp
in
ss
lds
jbe
pop
into
and
rcr
pop
fistp
(bad)
scas
fnstsw
call
out
addr16
sbb
mov
in
mov
mov
and
inc
ja
cmp
jne
(bad)
(bad)
jg
sub
mov
repnz
loope
or
(bad)
hlt
not
xchg
inc
fcos
push
sbb
or
sbb
movs
xchg
das
push
test
pop
std
retf
push
fwait
adc
fbstp
cmp
(bad)
call
in
rol
ret
push
sub
jo
xchg
inc
retf
(bad)
into
rcr
sub
push
retf
mov
mov
std
lods
daa
inc
div
leave
out
pop
lahf
cld
ror
xchg
clc
scas
clc
(bad)
dec
dec
outs
test
pop
or
fimul
test
out
mov
mov
(bad)
(bad)
(bad)
jmp
or
into
push
adc
test
xor
cmp
sub
push
push
jecxz
cmp
sbb
(bad)
aam
sbb
loopne
push
jb
mov
cmp
xor
xor
(bad)
xchg
add
push
shl
pop
shl
or
jmp
fst
loopne
(bad)
xor
movs
cmp
(bad)
jg
jg
push
jne
(bad)
outs
repz
add
aad
je
stos
outs
clc
movs
xor
inc
sub
jmp
sub
mov
xchg
(bad)
mov
leave
pop
out
xabort
xchg
inc
and
outs
div
adc
inc
ds
(bad)
jl
dec
outs
jno
cmp
sidtd
push
std
(bad)
call
add
cld
jp
push
mov
push
adc
inc
jb
jnp
mov
outs
dec
into
ret
fldcw
push
mov
xor
push
std
(bad)
push
pop
fnstsw
xchg
ror
rcr
xor
retf
jge
and
sub
mov
inc
cmp
lea
or
or
add
(bad)
fstp
dec
test
sub
mov
xchg
out
in
popa
cld
call
dec
cmp
push
xor
mov
xor
adc
xchg
push
adc
jmp
xchg
sub
pop
imul
loop
sbb
fdivr
pop
or
inc
pop
cmps
dec
xchg
xor
inc
jbe
fstp
int3
sub
nop
pop
retf
cmp
(bad)
(bad)
(bad)
jmp
inc
push
push
sub
push
cmps
dec
mov
mov
hlt
stos
std
sub
dec
call
sbb
(bad)
(bad)
(bad)
jmp
pop
data16
pop
xor
mov
je
movs
pop
test
push
adc
hlt
push
jbe
xor
jne
movs
aaa
jg
inc
std
xchg
xchg
es
xor
nop
icebp
mov
out
pop
push
cli
(bad)
mov
add
ins
ja
adc
das
jl
mov
adc
jge
out
call
fwait
or
mov
(bad)
pcmpgtb
loope
and
jmp
dec
cmc
sbb
repnz
into
add
xchg
aam
jmp
into
movs
outs
mov
mov
(bad)
dec
xchg
cmp
aad
push
pop
pop
xor
cmp
add
(bad)
shl
icebp
(bad)
(bad)
jmp
xchg
mov
out
push
mov
sti
sub
nop
mov
enter
lea
(bad)
inc
add
es
int3
push
sub
hlt
mov
dec
xchg
(bad)
call
js
adc
mov
sbb
ret
(bad)
xor
sub
and
(bad)
jg
mov
aad
daa
(bad)
call
je
enter
ret
pop
add
enter
dec
repnz
jns
lock
push
cmp
xchg
mov
in
pop
mov
jp
dec
(bad)
xchg
stos
jl
mov
lods
jo
or
inc
mov
jmp
call
push
aam
or
jne
retf
mov
stos
(bad)
test
div
dec
xchg
(bad)
call
fdiv
int3
out
sbb
ja
popf
mov
daa
inc
pop
cli
fistp
inc
jle
xchg
in
add
call
movs
xor
loope
mov
loop
xlat
add
les
add
pop
retf
sub
jnp
(bad)
jmp
shr
push
jp
in
lock
pop
rol
mov
and
into
dec
sub
(bad)
(bad)
(bad)
(bad)
fcomp
xor
stc
inc
or
out
(bad)
xchg
mov
xchg
dec
sub
(bad)
mov
mov
(bad)
(bad)
call
movs
jbe
xor
adc
jecxz
inc
pushf
push
and
outs
pop
pusha
lahf
or
cmp
leave
mov
mov
std
(bad)
dec
jno
cmps
mov
xchg
je
icebp
sub
inc
sahf
cmp
stos
mov
stc
add
dec
jmp
icebp
mov
or
packssdw
xchg
pop
mov
pop
test
jnp
stos
push
xor
mov
cmp
jg
inc
cld
dec
sbb
cmp
div
test
mov
jo
mov
and
sbb
add
xor
(bad)
dec
sub
fst
or
clc
test
add
or
inc
(bad)
push
(bad)
(bad)
(bad)
fisubr
imul
mov
jbe
push
jns
nop
push
xchg
jne
fcmovnbe
and
faddp
in
dec
jne
scas
sbb
push
lods
mov
arpl
xor
scas
lahf
(bad)
(bad)
(bad)
call
dec
pop
jnp
clc
aaa
pop
xchg
sub
cmc
dec
inc
cmp
sub
sub
mov
xor
ins
leave
(bad)
(bad)
(bad)
push
jg
push
add
push
cdq
pop
movs
shl
mov
rcr
xor
call
add
inc
retf
pop
pop
imul
leave
pushf
fisttp
or
call
arpl
mov
rol
cmp
les
mov
mov
or
pop
icebp
jmp
cmp
jmp
aam
cmp
cmp
or
popa
adc
cmp
mov
cmps
or
or
jae
or
(bad)
inc
xor
or
bswap
jge
ja
mov
pop
inc
sbb
aaa
das
repz
cmc
cs
(bad)
out
mov
fidivr
ins
mov
std
call
out
out
add
pop
jg
xchg
icebp
loope
push
dec
lock
dec
addr16
jne
daa
inc
pop
push
fmul
cli
sbb
or
and
xor
xchg
je
mov
inc
jno
sbb
mov
stos
retf
mov
(bad)
jmp
push
movs
push
stos
push
push
outs
adc
mov
mov
test
popa
outs
push
cmp
ret
outs
push
js
mov
mov
or
outs
add
imul
fisttp
inc
jne
sub
xchg
out
adc
in
pop
add
call
mov
mov
mov
pop
xor
(bad)
(bad)
(bad)
jmp
les
(bad)
std
push
xor
loop
inc
outs
cmp
sub
out
sti
(bad)
mov
(bad)
(bad)
(bad)
js
lahf
popf
and
fcomp
push
clc
daa
imul
fstp
pushf
retf
jp
enter
jmp
mov
ficomp
retf
adc
sub
pop
mov
or
or
(bad)
inc
jae
or
jns
scas
out
and
push
pushw
mov
je
mov
retf
xchg
xor
jmp
(bad)
(bad)
(bad)
cmp
test
pop
xor
mov
adc
push
xor
(bad)
(bad)
(bad)
mov
test
cmp
adc
cld
outs
xchg
mov
stc
stos
js
sub
(bad)
jg
and
sbb
fdivr
and
mov
(bad)
mov
and
dec
(bad)
dec
not
aad
nop
ror
mov
xchg
(bad)
aaa
rcr
jge
out
js
xchg
mov
scas
cli
inc
push
push
xor
out
sar
cld
push
lods
mov
mov
dec
out
popa
outs
cld
cmp
lods
sbb
sbb
(bad)
(bad)
(bad)
inc
pop
les
xor
scas
and
or
inc
dec
cmp
push
(bad)
(bad)
(bad)
call
cmp
es
sub
pop
or
mov
ror
and
jno
(bad)
(bad)
call
add
adc
outs
cdq
je
push
cwde
jecxz
ss
xlat
adc
iret
lea
cmps
inc
adc
bound
mov
xor
(bad)
(bad)
(bad)
jmp
pushf
pop
adc
xchg
jnp
outs
loope
aaa
mov
add
ret
shr
cmp
and
lea
add
movs
sti
gs
adc
scas
xchg
mov
add
cmp
rol
or
icebp
add
(bad)
(bad)
fisubr
retf
or
mov
push
jl
mov
iret
mov
inc
push
(bad)
fucomp
mov
lods
inc
inc
out
sar
sbb
push
mov
lods
pop
mov
adc
inc
ins
mov
cs
pop
lods
retf
fwait
lahf
pop
jno
loope
add
xchg
jmp
cmp
cdq
loopne
sub
or
loopne
(bad)
(bad)
jmp
in
icebp
out
ret
push
mov
dec
pop
scas
(bad)
stos
es
jns
push
in
mov
sbb
call
cli
fmul
arpl
popa
or
js
inc
(bad)
cmp
add
cmp
dec
js
jl
jge
lods
repnz
mov
mov
jne
bound
out
(bad)
(bad)
call
(bad)
jmp
push
outs
push
lods
sbb
push
aas
fld
cmp
xchg
(bad)
(bad)
jmp
xchg
mov
mov
xor
inc
push
xchg
out
adc
(bad)
(bad)
jmp
je
lods
es
push
jbe
mov
add
add
adc
inc
dec
lods
adc
inc
(bad)
dec
xor
loopne
or
inc
sbb
mov
mov
adc
push
aam
pop
jno
fucom
cs
call
push
lahf
pop
inc
ror
add
shl
xchg
jb
xchg
jmp
(bad)
mov
ja
dec
xor
call
push
mov
pop
adc
(bad)
jg
mov
test
push
aam
xor
sub
ror
sub
icebp
imul
mov
into
push
in
cmp
clc
cmp
cmc
mov
lods
test
inc
dec
mov
add
mov
mov
loope
les
jg
xchg
push
or
or
jne
loope
mov
clc
cmovl
mov
(bad)
(bad)
(bad)
cmp
gs
add
mov
jns
iret
stc
jg
(bad)
std
mov
xlat
les
sbb
pop
add
push
es
inc
add
or
out
push
mov
cmc
mov
aaa
out
mov
fsub
and
aas
dec
loope
(bad)
xchg
add
push
rsm
dec
out
xchg
sub
push
xor
inc
and
(bad)
(bad)
jmp
in
les
or
mov
mov
out
pop
int
(bad)
fild
mov
jb
inc
adc
in
lea
loope
jmp
(bad)
mov
jmp
movs
nop
pop
pop
pop
mov
push
cmps
in
shl
mov
and
jb
mov
mov
xchg
xchg
sbb
call
(bad)
clc
dec
ror
xchg
jbe
jb
mov
(bad)
(bad)
push
or
jns
fsub
adc
out
jns
jecxz
fistp
int3
test
aaa
sub
es
(bad)
mov
cs
or
inc
cli
add
jne
cwde
add
mov
(bad)
(bad)
(bad)
dec
sbb
mov
popf
fild
inc
sub
enter
js
(bad)
jmp
and
movs
sbb
lods
mov
adc
(bad)
jmp
inc
ss
pop
pop
popf
add
(bad)
(bad)
(bad)
jmp
dec
mov
sbb
dec
pop
push
out
int3
or
sub
fadd
sub
(bad)
(bad)
(bad)
fild
jnp
mov
dec
jns
jmp
(bad)
call
xor
cmp
retf
sbb
ficomp
mov
sti
jbe
and
mov
stc
jmp
(bad)
(bad)
jmp
iret
jno
shr
retf
movntps
lods
cmp
mov
mov
(bad)
(bad)
push
neg
cmp
addr16
add
sbb
out
xchg
or
jb
mov
retf
jo
fcom
(bad)
(bad)
(bad)
call
mov
cs
cmps
push
push
das
push
sbb
mov
mov
sub
retf
call
(bad)
in
xor
cwde
pusha
dec
mov
inc
xor
cli
out
jne
(bad)
(bad)
(bad)
(bad)
sbb
cmp
dec
cld
xchg
ins
dec
les
(bad)
(bad)
(bad)
(bad)
iret
sub
inc
cmp
in
mov
enter
aaa
call
(bad)
in
mov
pop
test
xlat
cmp
pop
sub
int
mov
sbb
loope
lea
lock
(bad)
clc
sti
xor
mov
dec
adc
or
leave
ficomp
pop
in
(bad)
(bad)
jg
(bad)
xor
cmps
arpl
fiadd
sbb
fidiv
sbb
mov
fst
call
ss
and
xchg
pop
xchg
adc
sar
(bad)
(bad)
inc
ror
loopne
gs
jbe
std
int
mov
cli
mov
shl
mov
mov
int3
xor
jge
test
mov
rcr
sbb
cmc
inc
gs
sar
(bad)
call
sbb
(bad)
mov
outs
bound
mov
imul
adc
mov
cs
fnstcw
movs
dec
sub
push
imul
stc
add
mov
push
mov
jg
jmp
cs
jmp
pop
adc
xchg
mov
mov
mov
mov
clc
(bad)
mov
inc
mov
inc
push
mov
sub
jmp
mov
sbb
imul
adc
lds
mov
or
lock
cdq
and
(bad)
call
jecxz
bound
ror
cmp
dec
push
sbb
imul
sbb
adc
test
movs
xchg
pop
sahf
adc
xchg
enter
xchg
data16
inc
xchg
stc
push
repz
jg
dec
jp
movs
xchg
lds
fdivr
xor
inc
cmp
(bad)
(bad)
(bad)
(bad)
sti
push
or
pusha
pop
shr
mov
mov
mov
push
ret
adc
jno
ja
call
out
add
mov
fidivr
add
iret
(bad)
(bad)
mov
adc
pop
movs
dec
int
in
lahf
inc
bswap
test
(bad)
(bad)
jmp
ficomp
push
mov
xor
aas
xchg
test
je
js
push
std
(bad)
call
(bad)
and
popf
das
rcr
pop
stc
xor
test
inc
aas
test
(bad)
mov
and
std
xor
in
jmp
pop
or
(bad)
jmp
cmp
xchg
cmps
add
push
mov
retf
sbb
adc
add
xor
or
push
add
dec
sbb
nop
add
sub
adc
fisub
inc
fsub
mov
adc
xor
cmp
push
xchg
and
and
or
push
addr16
dec
adc
pop
add
jp
add
add
pop
ror
fisub
sbb
push
push
outs
popa
shr
mov
outs
jae
adc
jb
popa
push
mov
inc
rol
cmp
ja
push
outs
imul
mov
repz
sti
fidivr
bound
outs
das
mov
or
sbb
xlat
push
sub
push
or
jmp
dec
or
loopne
sub
fisub
mov
add
mov
or
xor
push
cmps
loope
push
jno
adc
xor
pop
popa
bound
fs
jne
sbb
mov
and
push
xor
cmp
mov
fstp
jg
je
or
ror
aaa
add
push
xor
aas
push
sub
loopne
mov
ja
popa
xchg
mov
jne
push
xor
sub
jns
or
jae
je
push
cmp
jnp
adc
repz
mov
and
inc
sub
imul
imul
lds
xchg
dec
jnp
out
jle
push
outs
jmp
lods
in
mov
je
shl
adc
das
mov
outs
(bad)
not
jmp
adc
ja
cmp
div
repz
(bad)
in
repz
dec
jae
jbe
push
jne
out
outs
pop
mov
mov
or
out
add
jae
imul
xchg
imul
ss
ins
mov
jae
and
sbb
jp
(bad)
push
gs
sub
sbb
pusha
push
arpl
xchg
sub
xlat
jae
mov
xor
movs
pop
xor
xchg
sub
retf
inc
rol
jnp
inc
arpl
outs
loopne
cs
dec
ins
rcl
retf
scas
xor
jmp
mov
mov
jnp
daa
fidivr
mov
and
imul
or
and
inc
xlat
lock
mov
scas
stos
popa
cmps
ins
mov
jmp
cmp
lods
mov
jbe
mov
ds
je
imul
stos
push
jnp
jnp
cs
or
popa
pop
inc
and
(bad)
jns
ins
fbld
jne
inc
push
xor
mov
ret
sub
rcl
bound
push
js
push
mov
xchg
pop
or
dec
add
jmp
add
mov
imul
jo
inc
test
retf
ja
jnp
inc
outs
repz
arpl
push
jl
jbe
pop
cs
shl
je
arpl
or
scas
lods
stos
or
imul
xlat
mov
daa
inc
push
push
outs
sbb
xor
je
push
je
lahf
pop
jo
dec
jbe
mov
movlps
ret
aad
pop
mov
mov
imul
push
test
je
fcmovnu
bound
sar
pop
stos
dec
pop
cmp
rcl
popa
jg
mov
(bad)
mov
xor
adc
test
mov
adc
and
sti
cmp
push
adc
mov
mov
fwait
mov
repz
cmp
jae
jae
inc
hlt
push
cmc
pop
push
add
pop
mov
add
push
jnp
add
mov
shl
mov
adc
push
test
dec
mov
xor
sbb
jmp
outs
sbb
ja
xor
daa
xchg
(bad)
push
test
stos
mov
or
sub
data16
jo
xor
push
jmp
test
shr
jns
arpl
xor
push
jecxz
lods
pop
rol
les
cs
lahf
mov
mov
pop
fild
or
movs
imul
add
pop
add
mov
sbb
xchg
xchg
(bad)
sbb
setb
ja
or
fisttp
pop
jmp
sbb
mov
ins
rcl
xchg
sbb
gs
sbb
cmp
lods
and
arpl
mov
out
pop
mov
lahf
stos
mov
scas
sbb
xor
pusha
jecxz
out
test
push
fadd
xor
push
cmp
xor
loope
clc
push
dec
mov
sbb
jmp
inc
pop
mov
dec
fisttp
adc
jae
cmp
ja
imul
cmps
and
out
push
pop
sbb
pop
shl
mov
shl
push
pop
mov
div
sub
jecxz
loopne
mov
sbb
sub
push
lods
mov
and
xchg
lods
add
je
rol
mov
ins
jmp
pop
xor
dec
dec
ss
ret
stos
(bad)
outs
iret
mov
and
sub
pusha
push
rcr
sbb
retf
imul
push
ror
sti
inc
cmp
sbb
xor
push
movs
cmps
popf
sbb
ret
retf
(bad)
xor
jae
popf
fidiv
pop
lods
push
or
mov
mov
imul
add
add
ror
retf
add
ins
and
push
outs
ja
pusha
test
pop
jo
movs
pusha
les
stos
out
loop
lea
outs
inc
test
adc
ret
or
out
jae
push
loope
arpl
mov
xor
stos
stos
(bad)
fiadd
lahf
push
jmp
pop
repnz
jae
push
ror
mov
push
lods
bound
sbb
xor
sub
sub
gs
aad
outs
jae
pop
ins
jmp
add
imul
and
mov
mov
push
push
inc
or
dec
ret
daa
les
and
imul
fist
pop
sub
cmps
adc
push
retf
pop
adc
pop
mov
sub
shl
sti
jae
movs
push
and
and
sub
pop
add
mov
maxps
sbb
mov
mov
push
shl
ret
jne
pop
adc
lds
ror
or
jb
das
arpl
in
loopne
fwait
aas
bnd
mov
mov
and
cmp
push
mov
mov
stos
sub
xor
add
pop
adc
sbb
mov
test
mov
mov
jo
inc
fbstp
daa
add
fld
fistp
shl
adc
sbb
cmp
xchg
imul
das
rcl
mov
pop
mov
jbe
pop
fwait
push
and
cli
je
out
mov
mov
add
xchg
addr16
push
shl
mov
cmps
jmp
sti
mov
sub
adc
or
add
pop
out
or
mov
add
(bad)
sub
cmp
push
or
out
ins
mov
and
ins
mov
outs
sti
adc
(bad)
jmp
xchg
inc
sbb
mov
pop
daa
ret
cs
dec
mov
and
push
dec
pop
pop
or
stos
pusha
(bad)
dec
mov
or
inc
sub
(bad)
push
lods
push
bound
xchg
push
das
cmp
dec
or
inc
add
addr16
mov
aas
mov
jae
xchg
and
pop
fisttp
inc
cmps
imul
stos
push
push
inc
inc
mov
jmp
sub
mov
cmp
movs
mov
out
push
add
not
xor
mov
sbb
push
fiadd
stos
sti
aad
test
aaa
fistp
out
push
jp
data16
fwait
shl
add
push
ja
jae
mov
push
addr16
and
xchg
push
ins
je
or
push
mov
test
dec
pop
and
aaa
int
fadd
outs
(bad)
ret
jae
aas
pop
ror
sub
and
jmp
push
add
loop
push
push
arpl
or
test
daa
test
push
push
jae
inc
movs
mov
inc
les
retf
stos
pop
mov
das
mov
fld
addr16
adc
and
inc
xchg
push
dec
ret
inc
xchg
mov
lahf
xchg
popa
jne
iret
sti
(bad)
jae
arpl
and
es
lods
and
je
out
pop
sub
push
arpl
js
inc
cmp
mov
push
jb
das
cmp
push
pop
mov
cmps
fs
retf
pusha
mov
mov
jnp
mov
jb
aaa
adc
cs
sub
test
adc
add
push
push
inc
lahf
jne
imul
and
pop
mov
push
jo
mov
mov
push
fld
push
xor
fwait
stos
sub
call
fild
dec
or
enter
mov
add
push
pop
jmp
loope
inc
(bad)
arpl
iret
sub
or
je
add
and
inc
mov
cmp
arpl
cmp
add
cmp
mov
adc
movs
mov
jg
sub
adc
mov
pop
lods
gs
and
les
int3
xor
outs
sbb
je
aaa
push
sub
push
push
fsubr
xchg
aad
and
dec
inc
sub
mov
pop
xchg
push
test
mov
mov
jmp
imul
add
pop
sub
and
push
shr
rcr
add
sub
or
scas
sbb
inc
jae
mov
adc
dec
mov
or
mov
pusha
sub
and
mov
rcl
adc
lds
jmp
xor
xchg
push
dec
xor
fs
xor
(bad)
mov
imul
mov
mov
lahf
das
or
pushf
cmp
ret
test
push
iret
ds
push
and
inc
bound
inc
mov
pop
xor
jae
mov
stos
test
or
loopne
inc
xor
inc
adc
cmp
(bad)
adc
lods
adc
push
pushf
(bad)
sbb
es
cmp
das
inc
xor
xchg
bound
jl
cmps
jnp
loop
sahf
(bad)
jnp
mov
xlat
fwait
loop
and
out
pop
and
arpl
adc
jecxz
inc
test
inc
jmp
popa
sbb
(bad)
cmp
mov
lods
push
push
pop
ret
aaa
xor
test
xadd
pusha
daa
retf
push
mov
inc
sub
test
scas
pop
arpl
mov
addr16
lds
sbb
push
sbb
or
push
sub
or
add
out
mov
push
sar
push
or
sbb
mov
mov
xor
mov
cmp
jae
pop
dec
or
xor
jne
dec
push
mov
popa
cs
add
aas
dec
jecxz
jne
or
sahf
je
ins
das
ret
bound
(bad)
imul
pop
add
push
imul
ds
push
mov
aaa
push
pusha
add
test
test
cs
cmp
aam
add
arpl
adc
ret
stos
sbb
ja
aaa
push
test
adc
rol
sahf
cmps
cs
cmp
and
fild
stos
xchg
adc
pop
mov
retf
add
add
mov
test
and
jno
inc
daa
and
mov
or
and
push
push
and
pop
loop
(bad)
or
cmp
adc
and
stos
sub
jo
pop
xlat
es
and
sti
inc
xchg
mov
mov
sbb
sbb
sbb
jno
and
inc
mov
pop
sahf
pop
or
shl
jb
popa
fisttp
out
dec
mov
push
ret
bound
or
rol
aaa
sbb
call
mov
dec
adc
daa
movs
mov
sbb
jo
mov
jg
or
mov
je
pop
xlat
pop
jb
int
dec
or
aaa
push
push
fwait
mov
jae
pusha
xchg
(bad)
or
test
and
pop
pop
fcmovbe
pop
cmp
jmp
mov
jbe
push
inc
stos
scas
outs
aas
test
add
mul
inc
push
pop
fwait
push
inc
imul
inc
pop
push
mov
dec
imul
xor
mov
xor
mul
xchg
pop
(bad)
(bad)
ffree
push
iret
dec
push
je
dec
aad
dec
adc
loopne
and
mov
inc
pop
in
inc
cmp
movs
adc
and
movs
bound
push
setae
push
gs
aad
jb
mov
xchg
rol
or
sbb
outs
and
push
xorps
dec
sub
sbb
aaa
mov
mov
mov
stos
fild
xchg
cmps
dec
adc
add
mov
xor
add
icebp
fist
push
cwde
push
(bad)
xor
and
xlat
mov
aas
push
cmp
fldcw
sbb
packssdw
mov
jae
daa
jae
shr
pop
test
jae
aas
test
mov
xlat
pop
push
add
adc
xor
rol
ins
and
lods
sbb
mov
imul
ret
mov
fistp
ret
dec
jg
(bad)
jmp
lea
shl
inc
push
lds
mov
out
inc
sub
(bad)
(bad)
mov
push
push
rcr
add
sbb
test
outs
sub
jns
jmp
mov
dec
push
jecxz
xor
mov
mov
pop
jo
mov
(bad)
mov
inc
ror
and
or
or
stos
xchg
xor
sbb
repnz
pop
jnp
(bad)
aaa
retf
je
fwait
sbb
jmp
xor
or
xchg
and
dec
dec
shr
cs
shr
(bad)
loop
jbe
push
adc
imul
sub
xchg
test
inc
xchg
dec
(bad)
push
xor
adc
sub
xchg
mov
pop
iret
cmps
rcl
mov
mov
dec
pop
addr16
adc
fwait
mov
scas
out
push
mov
xchg
scas
adc
and
adc
(bad)
(bad)
mov
pop
mov
jecxz
lods
jge
ret
outs
rol
jne
iret
shl
jmp
sub
cs
mov
test
iret
outs
ins
inc
mov
mov
mov
loopne
sbb
ds
or
mov
fist
mov
imul
scas
daa
xor
movs
lods
call
cmps
mov
aas
imul
dec
xchg
mov
(bad)
rcr
mov
jmp
mov
sub
iret
jmp
inc
stos
mov
inc
mov
cs
ret
loope
sbb
and
test
fstp
pop
mov
popa
aas
sti
inc
mov
pop
xor
pop
adc
inc
sbb
adc
xor
sub
push
push
mov
and
ja
push
mov
outs
adc
push
mov
xchg
arpl
mov
xchg
push
inc
push
lods
sbb
aaa
mov
jnp
jnp
jmp
xchg
mov
sbb
dec
inc
sub
mov
imul
gs
arpl
mov
push
jmp
push
and
inc
inc
movntps
pop
es
sub
pop
dec
push
je
push
out
push
jo
stos
add
push
or
mov
mov
stos
jne
or
sub
xchg
mov
mov
mov
jae
(bad)
add
popa
sti
adc
iret
dec
sbb
mov
shl
mov
aas
fwait
adc
test
mov
arpl
cmp
xchg
sbb
mov
popa
jae
push
sub
sbb
aas
jg
and
test
inc
jno
nop
mov
pop
imul
(bad)
idiv
and
or
mov
adc
inc
push
inc
sub
mov
inc
push
inc
fist
jnp
not
test
and
xlat
dec
xor
popa
lds
push
(bad)
aaa
das
fwait
sbb
push
sbb
outs
xor
lea
jae
pop
pop
rol
adc
mov
push
dec
shld
sbb
daa
pop
add
mov
imul
ss
(bad)
stos
xchg
mov
pop
mov
jecxz
or
movs
shl
mov
(bad)
sub
push
sub
ss
(bad)
xchg
push
mov
mov
sub
add
addr16
popa
sbb
xor
or
mov
or
les
pop
xor
pop
sbb
ja
adc
pop
or
adc
push
shr
add
retf
arpl
sti
sbb
mov
stos
add
and
jb
xor
and
xor
inc
xlat
xchg
push
adc
sub
sbb
nop
adc
fbstp
add
(bad)
rcr
(bad)
les
xchg
pop
lods
je
xlat
imul
inc
lahf
xchg
lahf
fcmovbe
sbb
(bad)
imul
(bad)
cmp
pop
jb
ror
and
pop
inc
mov
xchg
pushf
les
cmp
inc
add
mov
shl
aaa
je
ror
test
loope
mov
jnp
aaa
ins
mov
arpl
jae
lock
aas
cmp
jp
adc
and
iret
xchg
push
test
sbb
aam
or
xchg
test
push
xor
sub
arpl
lea
ret
sub
mov
or
lock
push
out
fwait
mov
das
gs
adc
stos
ret
fisubr
inc
xchg
les
scas
loop
mov
jmp
aad
stos
jg
dec
mov
out
sti
mov
inc
and
js
pop
imul
xchg
dec
pop
pop
lahf
(bad)
jns
mov
xlat
dec
stos
push
jo
mov
lods
jmp
and
add
aaa
and
movs
shr
push
add
(bad)
stos
fld
add
mov
jecxz
fwait
xor
inc
inc
push
movs
mov
dec
imul
repz
or
pop
dec
dec
xor
test
xor
add
addr16
sbb
add
push
ret
bound
fisttp
ja
cmp
bound
cmp
add
repz
(bad)
fld
pop
add
push
xchg
dec
jns
pop
bound
jae
lods
and
ins
mov
and
aad
cmp
test
or
push
es
cmp
imul
das
gs
add
inc
stos
or
(bad)
mul
jl
mov
add
xor
test
xlat
jae
test
xor
mov
xor
bound
popa
push
push
dec
dec
xchg
sbb
or
mov
adc
fbld
(bad)
movs
add
push
sub
push
mov
adc
or
lods
lock
sub
add
add
rcr
test
lods
repz
fwait
mov
mov
mov
lods
jmp
xchg
xor
xchg
inc
inc
dec
or
add
push
iret
sbb
ja
cwde
mov
aas
mov
jecxz
sub
xor
cmps
fisttp
mov
push
stos
pop
xor
inc
bound
inc
or
jmp
pop
adc
arpl
je
mov
scas
mov
pop
mov
or
stos
add
or
retf
stos
xor
adc
les
lods
sub
add
cs
loop
inc
pop
(bad)
cmp
mov
xor
adc
mov
jmp
jae
aad
or
jnp
inc
dec
je
ffreep
or
mov
fisttp
sbb
ror
and
pop
daa
pop
push
inc
cmps
pusha
or
imul
push
xor
jo
and
call
mov
stos
out
adc
(bad)
xor
repz
aas
fidiv
pop
or
mov
stos
dec
ins
inc
arpl
xor
punpckldq
pop
(bad)
aaa
aaa
push
sbb
mov
lods
ins
mov
dec
arpl
scas
lahf
movs
inc
add
push
push
daa
jmp
pop
xchg
xchg
sbb
inc
lods
sbb
das
mov
add
jmp
jb
movs
push
dec
xor
push
ss
cmp
dec
out
mov
add
stos
mov
xchg
pop
or
xlat
sub
dec
mov
adc
retf
aas
fwait
push
fmul
ins
test
aas
add
and
mov
mov
retf
sbb
outs
adc
arpl
xor
sub
inc
and
pusha
cmp
gs
sub
arpl
jae
sahf
mov
mov
jmp
cmp
nop
inc
and
adc
xchg
push
outs
sub
mov
add
test
mov
push
aaa
scas
inc
iret
imul
rol
cs
inc
cmp
dec
push
in
push
inc
adc
arpl
jg
jo
sub
loop
imul
(bad)
mov
xor
mov
lahf
and
mov
stos
adc
mov
and
adc
push
cmp
inc
mov
cmp
xor
nop
das
js
adc
out
mov
pop
xchg
mov
aaa
popa
pop
inc
push
jmp
pusha
adc
sub
inc
and
push
adc
fild
or
shl
xchg
push
sbb
sub
inc
sar
lods
adc
xchg
dec
pop
stos
adc
clc
scas
xor
retf
test
mov
out
sub
outs
add
lea
mov
outs
pop
and
xor
adc
pop
fwait
das
sub
inc
and
bound
inc
xor
mov
pusha
dec
and
adc
(bad)
sti
and
inc
mov
fmul
aas
sub
add
push
iret
iret
add
jno
bound
outs
add
sub
adc
add
lods
pop
js
adc
jg
stos
inc
imul
repz
(bad)
xor
arpl
mov
lods
push
mov
mov
ror
ja
call
stos
inc
mov
adc
cs
addr16
sub
dec
inc
daa
popa
xchg
xor
or
(bad)
pop
adc
sub
lea
sub
ret
sub
mov
fild
sbb
inc
mov
jnp
push
aad
or
data16
(bad)
or
mov
mov
jne
addr16
inc
shr
or
or
sbb
test
cmp
xchg
mov
pop
mov
xlat
outs
pop
aam
sub
test
or
push
or
or
stos
push
push
test
add
(bad)
stos
(bad)
jne
push
pop
add
sub
imul
push
addr16
dec
push
sub
xor
mov
es
jnp
xlat
add
dec
mov
push
arpl
pop
push
add
pop
dec
or
ins
adc
fidiv
data16
jecxz
inc
add
aaa
test
lahf
lahf
adc
jecxz
stos
fwait
dec
mov
cwde
push
aam
out
mov
popf
jp
push
fistp
fcom
sub
jmp
inc
lods
or
xor
lods
es
das
and
add
mov
sbb
xor
sub
sbb
movs
adc
adc
test
stos
repz
and
add
shl
add
(bad)
aam
jne
test
inc
xchg
arpl
inc
add
jne
xor
fist
dec
mov
and
sub
adc
jno
pop
mov
shr
dec
add
add
xchg
stos
inc
dec
pop
mov
rol
stos
and
or
fwait
ror
cmps
jg
test
imul
bound
xor
mov
push
test
adc
pop
inc
mov
add
and
mov
movs
xor
push
add
xchg
xchg
lock
imul
outs
imul
sub
fisttp
ins
mov
stos
cmps
(bad)
mov
ret
cmps
adc
(bad)
ins
movs
neg
and
jno
scas
jae
inc
mov
push
push
shr
pop
xchg
cmp
sbb
pop
cmp
sbb
jne
jge
jg
sub
pop
dec
push
jnp
shr
daa
jae
adc
sti
sbb
and
push
mov
lahf
jne
sub
cmp
sub
cmps
test
add
push
cmps
sbb
fistp
xchg
inc
and
lahf
xor
ss
adc
xor
jae
ror
and
out
ins
mov
push
dec
inc
popa
dec
jae
and
ror
loop
push
stos
push
ret
out
or
mov
(bad)
stos
add
data16
stos
xor
sbb
inc
mov
and
push
icebp
jnp
aaa
xchg
cmps
and
adc
daa
jae
and
out
jo
add
leave
dec
jecxz
and
movs
pusha
sti
xlat
inc
mov
shl
xchg
mov
sub
or
sti
pusha
push
sbb
arpl
add
push
ret
add
dec
push
rcr
bound
aaa
aas
add
sbb
outs
ja
pusha
sbb
pop
add
fisubr
adc
(bad)
iret
les
or
xchg
fcom
mov
stos
(bad)
fstp
int3
and
imul
movs
mov
push
aas
jae
aad
xor
call
dec
sbb
cmp
lods
xchg
loopne
(bad)
retf
rcl
push
mov
je
inc
mov
xor
adc
and
cmp
mov
aam
sub
xor
mov
push
je
test
push
sub
inc
mov
adc
jae
add
xor
or
inc
mov
adc
addr16
aas
test
mov
outs
inc
or
and
pusha
inc
mov
push
mov
sti
sub
adc
lahf
jg
pusha
fadd
dec
xor
out
add
add
stos
mov
aas
sub
adc
xchg
(bad)
sar
cmp
scas
dec
push
add
xlat
out
xor
pop
xor
sub
or
push
nop
stos
loopne
xlat
jae
arpl
cmp
mov
call
dec
dec
push
sbb
ss
daa
add
inc
add
lahf
xor
outs
adc
and
stos
daa
mov
or
mov
loope
outs
aaa
mov
jns
ret
add
popa
push
inc
dec
inc
mov
mov
dec
pushf
sub
sub
jmp
ret
push
and
mov
outs
mov
pop
fwait
and
jmp
inc
sbb
jae
dec
xor
jmp
dec
test
inc
jecxz
and
fwait
pop
pop
cmp
sar
aam
sub
pop
pop
adc
and
sbb
sub
loope
bound
sti
sub
bound
data16
cmp
push
stos
or
lahf
movs
push
inc
movs
mov
ret
daa
cmps
mov
(bad)
test
test
sti
inc
or
xchg
sti
outs
jg
scas
sub
imul
sahf
and
inc
je
push
stos
inc
push
jecxz
gs
pop
(bad)
add
and
aas
movaps
rcr
pop
adc
jae
outs
movs
adc
xor
aaa
xor
or
test
mov
or
or
inc
sub
dec
arpl
jb
retf
or
xor
mov
arpl
mov
inc
jae
push
stos
outs
(bad)
jmp
push
xchg
test
jno
call
rol
call
popa
outs
scas
mov
mov
test
sub
push
mov
das
adc
pop
xor
xor
push
adc
xor
outs
out
cmp
xchg
xor
aaa
mov
or
sub
je
pop
mov
test
push
xchg
(bad)
adc
xor
jg
lods
mov
shl
jecxz
shr
sbb
mov
lods
push
(bad)
lds
dec
sub
or
mov
aaa
ucomiss
push
xlat
pop
out
ror
mov
xchg
(bad)
adc
push
or
and
scas
dec
or
push
cmp
loopne
push
or
sub
out
mov
mov
loop
push
fwait
and
cmp
sbb
inc
sub
push
jne
pop
aam
adc
test
or
xchg
inc
test
inc
mov
cmp
xor
aas
push
mov
(bad)
xchg
xchg
mov
adc
add
retf
jae
push
les
xchg
xchg
xor
imul
cmp
inc
je
shr
sbb
push
jbe
jp
(bad)
dec
ins
out
pop
ret
jo
xchg
ror
xor
push
sub
lods
pop
cmp
push
(bad)
mov
inc
sub
ins
push
stos
push
pusha
leave
fist
nop
adc
das
add
stos
arpl
sub
xchg
mov
jecxz
dec
xchg
xor
out
push
dec
push
sbb
lods
or
daa
inc
push
inc
adc
and
ins
sub
les
and
test
daa
cdq
popa
shl
(bad)
sbb
ret
dec
inc
nop
sbb
adc
or
xlat
jnp
push
push
adc
xchg
imul
dec
cmp
jmp
sbb
fst
daa
and
mov
adc
and
mov
add
adc
vcvtsi2ss
loopne
sbb
aad
mov
out
mov
jmp
bound
cmp
push
adc
lods
aas
adc
add
mov
lods
call
add
test
iret
push
adc
adc
push
sub
push
sbb
inc
stos
xor
sub
push
jae
or
adc
jns
adc
and
push
div
add
xchg
aaa
xor
cmps
and
out
jo
and
dec
repz
icebp
movs
add
sub
or
pop
stos
sbb
inc
retf
outs
jecxz
js
jg
or
ret
or
je
cmp
xor
(bad)
lods
sbb
or
add
dec
(bad)
popw
mov
sub
xchg
call
lahf
mov
test
daa
mov
adc
ret
adc
int
inc
popa
sbb
sbb
sti
adc
dec
or
mov
dec
dec
ret
xor
xchg
loopne
mov
gs
stos
dec
arpl
fs
stos
scas
adc
inc
popa
jg
or
ds
add
imul
and
mov
adc
lds
sub
pusha
les
dec
pop
lea
dec
jns
dec
and
push
adc
movs
enter
pop
les
and
inc
loopne
(bad)
adc
inc
cmp
inc
es
sahf
in
loopne
out
cs
add
pop
pop
push
dec
js
fnstsw
push
ds
dec
push
(bad)
ss
fdivr
ret
push
imul
neg
dec
dec
push
inc
aas
sub
loopne
ret
repz
jae
jae
cmp
inc
xor
push
out
push
mov
push
inc
jnp
push
je
dec
sub
dec
and
xor
ja
test
bound
mov
pop
xor
xchg
inc
cmps
jbe
out
jge
ret
dec
push
pop
adc
jmp
in
xchg
mov
das
inc
or
out
inc
adc
neg
not
mov
rcr
out
mov
pop
inc
jmp
push
es
pop
dec
xchg
dec
dec
inc
mov
inc
daa
inc
mov
mov
xlat
push
aas
push
add
jne
dec
pop
xor
(bad)
adc
sub
dec
push
mov
jbe
add
ror
dec
xchg
js
ja
and
mov
push
mov
mov
xchg
outs
push
push
add
xlat
push
pop
sub
inc
jmp
jle
push
sbb
or
inc
add
pop
outs
inc
daa
and
jno
iret
mov
sbb
cmps
inc
xchg
mov
or
aas
xor
inc
mov
cmps
iret
fiadd
xchg
outs
sbb
dec
adc
rcl
(bad)
neg
jmp
push
add
or
push
inc
inc
out
movzx
stos
bound
fild
and
xchg
inc
mov
sbb
dec
fwait
ss
push
ss
pop
jnp
cmp
daa
call
fimul
xor
imul
add
dec
daa
repz
sar
or
dec
jno
xchg
sub
jnp
lahf
inc
inc
shl
mov
shr
push
xor
movs
and
outs
arpl
test
aad
imul
lea
mov
sahf
sbb
sub
mov
in
push
arpl
inc
cmps
outs
push
arpl
sbb
ret
dec
ins
xor
sbb
call
movs
cwde
ficom
and
sbb
shr
int
push
xor
scas
add
adc
adc
je
stos
pop
jmp
cmp
movs
enter
add
and
and
mov
mov
sbb
and
xor
scas
fwait
dec
pop
or
das
sub
inc
lods
pop
scas
xor
push
imul
dec
icebp
daa
(bad)
sti
aad
loopne
adc
aas
mov
stos
lods
iret
or
add
inc
lods
or
push
lds
mov
mov
ins
inc
pop
bound
out
add
pop
mov
jmp
es
mov
inc
push
(bad)
adc
sub
ja
imul
push
mov
jae
adc
push
or
ja
push
sbb
mov
pop
add
bound
shl
sub
xchg
hlt
lahf
out
(bad)
stos
ss
sub
push
push
mov
(bad)
or
push
fsub
xchg
inc
cmp
add
popa
lods
xor
jo
cwde
or
add
and
mov
adc
dec
inc
and
pop
pop
inc
adc
xor
add
ror
shr
test
push
pop
jg
popf
pop
test
sub
mov
push
ss
jg
test
xlat
(bad)
test
pop
out
add
dec
push
adc
fwait
dec
cmps
imul
xchg
push
movntq
cmp
call
dec
out
loopne
push
int
jmp
jo
cmp
sti
push
ret
mov
mul
and
repz
or
adc
sbb
inc
(bad)
addps
add
push
push
sub
xor
das
and
and
push
pop
lods
scas
jg
mov
mov
add
adc
push
outs
push
out
ja
inc
push
or
lods
fsubr
shl
imul
xor
sub
cdq
cmp
sbb
add
or
xor
test
jae
add
mov
aas
adc
adc
fs
fwait
stos
adc
add
add
outs
jno
cwde
mov
ss
es
adc
and
sbb
and
ins
adc
inc
shl
xchg
mov
pop
repz
mov
ins
(bad)
jnp
stos
pop
push
add
mov
adc
outs
dec
dec
xor
aas
pusha
sub
repz
inc
inc
sub
xchg
inc
xor
inc
cmp
push
shl
and
push
add
out
les
xchg
mov
jno
xor
and
jo
and
jecxz
inc
sub
dec
push
pop
add
add
mov
push
xor
or
fild
ret
mov
xor
(bad)
stos
enter
or
lods
add
test
addr16
fs
add
mov
and
rcr
aam
sub
adc
and
sub
xchg
xchg
shl
adc
arpl
mov
shl
je
push
push
dec
dec
data16
mov
sbb
or
mov
ret
ja
xor
stos
adc
cwde
mov
(bad)
scas
add
(bad)
sub
mov
sti
fstp
xor
jno
xchg
xor
sti
and
loopne
(bad)
dec
cmp
or
xchg
and
sub
mov
dec
lahf
dec
je
cmp
arpl
aaa
push
test
sub
daa
jmp
and
xchg
or
fist
pop
fcmovnb
xor
daa
adc
add
jg
mov
cmc
or
mov
mov
add
sub
mov
stos
pusha
push
outs
xor
mov
pop
and
pusha
outs
inc
ret
mov
scas
pop
sub
(bad)
mov
pop
dec
jns
pop
dec
imul
adc
add
mov
cmps
push
cmp
and
inc
mov
fbld
add
add
aaa
pop
or
test
dec
pop
xor
outs
and
mov
fwait
pop
jo
xor
stos
push
iret
iret
and
bound
call
xor
pop
sub
mov
cmps
sub
inc
add
mov
adc
cmps
das
adc
xchg
push
adc
push
cmps
retf
lods
adc
pop
retf
xor
stos
inc
ja
xchg
(bad)
or
scas
loopne
sub
les
mov
mov
mov
loopne
dec
pop
jbe
dec
push
mov
test
sub
jecxz
sub
mov
movs
mov
es
(bad)
lods
inc
sbb
jnp
mov
dec
mov
mov
jmp
sub
or
iret
rol
or
dec
shr
pop
push
push
xchg
sbb
mov
mov
mov
and
rol
bound
sub
jo
or
inc
or
pop
mov
lds
mov
jecxz
adc
dec
adc
sbb
mov
xchg
jecxz
jnp
and
jns
shl
mov
adc
ja
mov
adc
sbb
push
pop
addr16
cmp
mov
call
les
push
and
es
push
arpl
inc
or
out
test
sbb
or
das
mov
sbb
sub
adc
shl
daa
xor
lea
dec
into
push
inc
int
lds
inc
ret
adc
dec
sub
sbb
pop
ret
or
add
xchg
dec
mov
xor
fucomi
cmp
inc
xchg
xor
xchg
push
mov
mov
adc
mov
sti
mov
shl
jmp
inc
cmp
rol
push
cmp
mov
and
dec
add
mov
dec
sbb
xchg
pop
cmp
jecxz
jl
sahf
pop
push
or
mov
shr
mov
add
fild
dec
lahf
push
pop
mov
fcmovb
inc
mov
xchg
jae
mov
or
mov
mov
fisub
pop
or
loopne
sub
adc
sub
pop
add
loope
stos
mov
rol
mov
ja
dec
ja
and
dec
fimul
cmp
mov
das
adc
push
sub
outs
and
inc
call
dec
(bad)
out
adc
cmps
(bad)
adc
mov
push
or
cs
mov
adc
inc
inc
ss
sbb
fwait
push
xlat
push
ret
mov
shl
das
pop
inc
daa
push
push
inc
mov
sbb
data16
inc
add
dec
cmp
jno
add
data16
imul
or
rol
mov
pop
fdivr
sub
and
dec
repz
test
jae
push
push
lock
ja
sub
xor
mov
jmp
sahf
pop
sub
push
dec
scas
test
push
mov
inc
xor
push
jg
dec
fcmovnb
sar
dec
icebp
xor
imul
adc
cmovae
mov
imul
imul
pop
outs
mov
hlt
mov
xchg
xchg
mov
sbb
push
adc
sbb
xchg
mov
mov
jg
pusha
pop
or
retf
pop
dec
lea
or
sub
fild
mov
popa
imul
pop
fisub
cmps
xlat
outs
push
mov
pop
mov
imul
movs
add
jmp
mov
or
xor
pop
or
fimul
jo
aaa
and
retf
adc
scas
out
inc
iret
dec
inc
pop
shl
sbb
imul
push
ja
pop
rcr
xlat
aas
push
(bad)
or
add
ret
stos
inc
dec
mov
pop
jecxz
loopne
outs
(bad)
dec
sbb
imul
xchg
inc
push
mov
xor
ins
or
push
sbb
add
xchg
cmp
inc
sub
call
repnz
adc
inc
push
lods
mov
sub
lds
dec
xchg
dec
dec
dec
add
movs
sub
or
mov
xor
mov
mov
sub
xchg
sbb
jmp
pusha
xchg
push
mov
mov
cwde
fist
adc
ds
fcmovnu
ret
or
push
fld
push
fist
mov
mov
rcl
outs
inc
sub
movs
dec
out
xchg
adc
pop
addr16
test
popa
or
data16
adc
cmps
mov
inc
xor
pop
loope
outs
pop
aam
dec
sub
popa
cmps
push
lea
shld
or
fld
movs
or
bound
adc
sbb
mov
cmp
cwde
cmps
push
or
js
inc
(bad)
adc
or
cmp
mov
xchg
pop
int
xchg
mov
xor
out
arpl
mov
xchg
and
arpl
adc
lea
dec
psrld
push
xchg
xor
jmp
lods
pusha
(bad)
stos
out
xchg
rol
stos
xor
movs
add
add
sti
(bad)
mov
je
das
mov
jmp
aam
call
pop
pop
shr
push
xchg
mov
arpl
rcr
adc
test
arpl
add
pusha
nop
sub
ja
gs
lods
push
ret
or
mov
out
scas
xor
pop
ins
and
aam
dec
xchg
mov
or
mul
popa
or
and
cli
pusha
(bad)
jns
test
push
fs
jns
test
xor
push
sub
(bad)
xor
xor
out
addr16
or
push
lock
sub
test
dec
sub
dec
daa
mov
(bad)
emms
sub
mov
and
arpl
add
add
sar
cmp
test
dec
mov
daa
add
sub
xchg
push
xchg
outs
bound
push
pop
inc
xlat
push
or
and
dec
pop
pop
(bad)
(bad)
adc
pop
ret
pop
jne
dec
inc
mov
push
inc
repz
xor
sub
test
gs
les
xor
shl
and
pusha
inc
test
pop
pop
cmp
daa
(bad)
inc
xor
mov
mov
out
ret
cmp
sbb
push
xor
imul
test
sub
imul
stos
mov
dec
pop
jecxz
aad
adc
stos
jecxz
dec
add
inc
jnp
imul
xor
sti
data16
push
push
inc
push
stos
cmps
inc
test
jmp
add
sbb
xor
popa
shr
push
pop
pusha
pop
jle
dec
out
xlat
push
add
stos
mov
sti
inc
ds
pop
(bad)
xor
pop
push
jecxz
shl
jnp
imul
adc
test
add
mov
pop
push
jmp
lods
add
in
or
pop
jecxz
or
mov
outs
xor
mov
jecxz
dec
sub
adc
das
fsubr
lsl
pop
(bad)
in
scas
cmps
out
cmp
inc
mov
or
inc
xchg
sub
mov
sub
mov
not
mov
pop
sub
loopne
pop
dec
fcmovnbe
dec
inc
pop
or
mov
sub
cmp
inc
scas
adc
daa
shr
clc
cmove
adc
je
inc
push
out
dec
pop
dec
mov
sbb
mov
imul
inc
and
inc
xor
rcr
jecxz
lods
add
(bad)
sub
add
mov
add
inc
xchg
punpckldq
sub
arpl
das
aas
push
and
sbb
dec
mov
pop
sbb
ret
in
mov
aaa
add
test
mov
push
lds
das
inc
lahf
pop
(bad)
push
xchg
add
cmp
scas
and
push
adc
push
nop
or
pop
aad
xchg
push
mov
mov
aad
xor
fwait
adc
push
add
iret
mov
or
aas
js
adc
add
inc
or
loop
outs
lahf
imul
adc
sub
jg
fisub
pop
push
cmp
or
loopne
mov
(bad)
aad
loope
jmp
adc
push
dec
inc
push
mov
dec
mov
add
inc
pop
and
or
mov
xor
dec
add
pusha
inc
retf
ret
rol
test
jnp
sub
repz
sbb
xchg
dec
pop
adc
jecxz
push
pop
jo
xchg
mov
inc
imul
sub
ficom
jo
mov
pop
ror
imul
ss
loope
jo
dec
sti
imul
push
xchg
arpl
inc
aaa
add
xor
sub
xchg
mov
dec
push
mov
push
outs
push
mov
dec
jle
(bad)
les
sub
dec
mov
adc
push
ja
daa
inc
jp
adc
outs
mov
mov
(bad)
or
out
popf
jo
(bad)
mov
shl
fistp
xchg
or
adc
xor
push
cwde
loop
xor
jae
sub
ins
mov
xor
and
pop
ins
pop
inc
imul
sub
inc
gs
mov
emms
pop
lea
push
fisttp
inc
sbb
in
into
inc
pop
mov
lods
jmp
sbb
stos
push
add
mov
fs
pop
aaa
movs
pop
pop
xor
push
dec
sahf
jle
jo
jle
dec
jnp
push
lods
popf
out
dec
inc
rol
add
cmp
imul
sub
ret
mov
adc
or
(bad)
outs
inc
pop
test
cmps
xlat
pusha
push
pusha
imul
lods
mov
sub
xor
lahf
mov
mov
cdq
cmps
cmps
or
test
xchg
and
sbb
pop
mov
xor
daa
imul
rol
(bad)
cmp
inc
xor
les
fwait
(bad)
mov
sub
adc
stos
push
dec
sti
les
sbb
xor
push
or
inc
xor
mov
lock
xchg
xor
jae
mov
pop
xor
dec
pop
mov
daa
jnp
adc
and
sbb
mov
outs
retf
ret
outs
cmps
test
popa
add
sub
mov
jnp
jb
push
jg
sub
jne
rcr
imul
mov
or
and
fs
inc
and
iret
adc
outs
pop
mov
push
add
shl
xor
adc
add
adc
inc
bound
scas
addr16
shl
ss
ret
xchg
sub
pop
push
add
call
push
dec
push
push
pop
cmps
lods
dec
pop
test
lahf
int
inc
and
sub
mov
sbb
mov
dec
enter
push
jl
jb
inc
pop
ins
xchg
push
fnstcw
cmp
ret
pop
xchg
movs
shl
sub
pop
pop
mov
adc
pop
jns
imul
jae
les
popf
ret
mov
jae
popa
add
and
dec
pop
pusha
mov
adc
pop
shr
adc
scas
adc
jae
lods
mov
xor
sub
jb
sti
dec
cmps
sbb
mov
jae
dec
inc
inc
iret
jecxz
outs
int
sti
jecxz
adc
mov
mov
and
push
add
loop
or
xor
and
inc
inc
pop
shr
mov
push
rcr
xchg
sub
fwait
shl
xor
jg
outs
or
pop
or
fisub
inc
cmp
fs
cwde
inc
cwde
sbb
sub
push
and
adc
cmp
daa
push
adc
push
or
push
or
mov
test
ja
adc
mov
push
jg
movs
xor
push
daa
sbb
stos
push
pop
fstp
xlat
pop
xor
jg
popa
inc
pop
retf
dec
sub
mov
adc
inc
or
shl
add
inc
je
(bad)
ja
push
inc
push
mov
xchg
js
or
cs
ret
push
das
adc
inc
pusha
cmp
fild
cmp
rcl
imul
call
cli
(bad)
xchg
cmps
pop
xchg
and
push
aas
pcmpgtb
or
imul
dec
push
push
dec
rol
jo
out
sbb
or
and
mov
sub
out
sub
push
add
shr
sbb
mov
out
call
inc
mov
ror
js
xor
inc
add
mov
pop
cs
inc
push
ret
movs
or
push
(bad)
cmp
and
add
pop
xor
pop
test
add
sbb
mov
sti
fdiv
sti
call
add
add
add
add
add
adc
add
ds
mov
call
push
xor
add
add
aas
cmp
push
jbe
scas
mov
or
cmp
aas
push
mov
xchg
xor
push
xor
cdq
mul
fiadd
mov
or
test
pop
cmp
jg
adc
cmp
dec
xlat
jnp
xchg
pop
inc
push
inc
sub
xor
maskmovq
stos
and
xor
xor
and
sbb
dec
addr16
push
ret
mov
out
ss
mov
mov
xchg
out
ss
dec
inc
scas
iret
add
ss
push
lock
pop
adc
or
mov
pop
enter
cmp
sub
mov
xchg
xchg
pop
or
xor
xor
adc
mov
cmp
inc
daa
inc
xor
sbb
pushf
jbe
inc
push
ss
out
jnp
inc
daa
sti
cmp
data16
cs
out
xor
mov
add
retf
sub
xchg
(bad)
sbb
fdivr
sbb
call
pop
push
xor
cmp
push
xor
hlt
xchg
sub
mov
dec
adc
dec
cmp
sbb
jecxz
add
or
pop
sbb
xor
pop
outs
add
cmp
xchg
sbb
dec
aaa
dec
sub
sub
cmp
jbe
pop
retf
inc
dec
(bad)
push
cmp
cmp
outs
or
mov
fldenv
fild
pop
sti
pop
cmp
fistp
mov
dec
imul
cmp
push
xor
sbb
or
jecxz
cmp
pop
ror
sar
sbb
xor
mov
je
add
retf
mov
adc
pop
pop
or
outs
jbe
inc
das
push
ja
daa
setnp
iret
cmp
mov
aas
fdiv
loop
xor
cmp
fwait
das
xchg
xchg
iret
mov
inc
cmp
mov
ret
inc
jb
cmp
cmp
(bad)
mov
inc
arpl
retf
imul
je
(bad)
shl
inc
push
cmp
jg
and
adc
stos
(bad)
repnz
cmp
cmps
bt
fwait
sbb
dec
mov
push
scas
or
jbe
bound
mov
pop
stos
faddp
cmp
sbb
aaa
imul
fmul
mov
aas
loopne
(bad)
call
ja
push
pop
dec
jnp
les
arpl
jle
inc
push
adc
mov
dec
xor
aaa
inc
add
adc
test
add
fsub
mov
push
loope
fcom
dec
loop
sbb
pusha
ret
sub
jle
bound
adc
inc
cmc
pop
aaa
push
mov
fild
fiadd
push
cmp
mov
add
cmp
sub
mov
cmp
cmp
fst
mov
jp
jo
add
lock
xor
inc
ja
mov
rol
push
mov
cmp
add
mov
pop
adc
ja
or
dec
push
das
call
mov
jmp
jmp
dec
arpl
adc
out
adc
lods
ss
or
pop
mov
jnp
inc
push
add
mov
mov
rol
mov
add
cmp
(bad)
push
mov
push
out
cs
adc
mov
mov
push
das
aas
dec
xor
jbe
sbb
xor
xor
mov
inc
lahf
push
ret
adc
fcmovnb
call
out
rcl
jecxz
cmps
out
jo
mov
adc
adc
or
dec
xlat
fild
arpl
mov
ror
cmps
dec
push
xor
rol
dec
out
adc
xchg
imul
les
push
xor
inc
xor
mov
jmp
jns
add
inc
add
xor
ret
inc
push
cmp
fstp
xor
iret
scas
fwait
icebp
in
jb
xor
pop
mov
jno
ret
mov
or
cmp
or
stos
add
ret
cmps
add
adc
fwait
cmp
and
repnz
rcl
adc
mov
cmps
inc
enter
movs
xor
xchg
push
jne
ret
cmp
sbb
mov
dec
sub
mov
addr16
push
mov
sbb
dec
dec
cmps
cmp
outs
repz
sub
fidivr
scas
cmp
sub
dec
xor
xchg
dec
push
int3
adc
movs
bound
sub
inc
or
sub
pop
pop
sub
mov
cmps
inc
jmp
cmp
cli
fdiv
mov
mov
outs
sbb
mov
fwait
mov
movs
adc
inc
xchg
scas
nop
or
call
test
or
and
cmp
jnp
aas
rol
mov
inc
cwde
mov
push
jmp
adc
mov
aaa
rcl
mov
loopne
push
sub
dec
pop
jecxz
in
pop
mov
stos
(bad)
js
lods
shl
and
scas
stos
sub
pop
xchg
stos
aam
mov
pop
int
(bad)
adc
sbb
pop
pop
xor
sbb
inc
mov
aaa
inc
add
push
adc
jp
(bad)
and
push
pop
cli
mov
aas
fistp
mov
mov
and
or
pusha
xlat
sbb
pop
push
fild
cmps
test
mov
push
dec
xor
aas
out
jns
aam
sti
xor
dec
dec
arpl
pop
ins
dec
push
mov
inc
bound
(bad)
xor
pop
ds
add
inc
les
sbb
pop
aaa
inc
mov
dec
pop
jo
add
dec
xor
fwait
push
push
dec
and
arpl
iret
ss
nop
mov
pop
jnp
cmp
inc
jl
dec
ffreep
aas
mov
dec
and
mov
(bad)
sti
sub
add
sub
out
xor
mov
outs
add
sbb
xor
cmp
test
retf
dec
mov
mov
dec
push
push
and
mov
mov
sbb
es
add
cs
cmps
mov
cmp
add
ret
sbb
js
xor
es
int
xchg
mov
inc
scas
imul
ds
xor
test
jle
je
mov
and
rol
mov
push
movs
add
xor
or
ret
inc
xor
pop
jecxz
mov
int
mov
xchg
out
lock
jae
outs
dec
sbb
pop
jmp
mov
jmp
les
(bad)
inc
mov
daa
cmp
pop
cs
out
cmps
aaa
ficom
dec
inc
jo
mov
ret
push
lock
(bad)
ja
sub
xor
jbe
jmp
mov
nop
mov
out
sbb
movs
and
arpl
add
add
pop
mov
int
push
jbe
push
dec
sub
push
add
push
cmp
inc
add
mov
mov
fld
fild
xor
dec
test
shr
aad
push
lahf
adc
push
pop
push
test
addr16
adc
and
push
je
adc
jo
push
stos
dec
call
pop
stos
xor
ret
push
sbb
xor
popa
jmp
shl
fadd
add
out
or
inc
pop
arpl
add
rcr
aaa
cmp
cmp
movs
and
xchg
data16
inc
clc
fwait
mov
add
shl
aas
ret
add
pop
sbb
inc
cmp
xchg
mov
push
xor
push
cmp
pop
mov
adc
mov
dec
sbb
jmp
ror
daa
cs
sub
add
fmul
lods
inc
cmp
adc
ins
adc
or
inc
(bad)
das
rol
add
cmps
push
daa
push
mov
arpl
mov
stos
xor
sbb
mov
sti
and
jne
(bad)
pop
jo
xchg
lock
add
pop
iret
(bad)
leave
movs
ret
idiv
xor
or
daa
sbb
(bad)
ret
dec
imul
mov
pop
xor
aad
or
jmp
sbb
dec
push
ins
les
add
daa
or
bound
popa
inc
jnp
aas
and
ret
ja
addr16
sub
lahf
fwait
or
gs
adc
xor
dec
mov
repz
mov
mov
mov
retf
dec
sbb
inc
jle
out
pop
inc
mov
shl
movs
shl
and
adc
popa
push
xor
dec
imul
fwait
test
or
loop
mov
aas
inc
aad
inc
arpl
push
arpl
lods
inc
sub
inc
or
sub
or
sbb
add
pusha
ss
add
rol
jbe
gs
fnstsw
cs
loope
imul
dec
add
imul
add
jno
repz
daa
dec
inc
mov
arpl
int3
dec
aas
or
pusha
jo
mov
xchg
jae
rcl
jge
push
fisttp
xchg
push
ins
mov
mov
fist
pop
xor
mov
xor
and
jecxz
aas
or
pop
inc
push
dec
add
adc
or
xor
mov
mov
mov
mov
movs
or
inc
mov
mov
xchg
aas
lea
nop
mov
(bad)
push
fild
cmp
xor
adc
pop
mov
jnp
mov
pop
xor
mov
stos
pop
mov
imul
dec
(bad)
idiv
cs
add
sub
sub
jb
and
shl
arpl
xor
retf
push
mov
push
scas
aad
pop
fist
xlat
xchg
inc
out
(bad)
sti
outs
cmp
xor
mov
repz
stos
inc
push
iret
ja
add
xor
sub
dec
rol
cs
pop
shl
or
iret
sbb
sbb
inc
xor
mov
inc
mov
cmp
stos
imul
scas
daa
mov
scas
imul
stos
jp
push
and
popa
adc
outs
iret
rcr
add
rcl
jmp
pop
mov
mov
push
adc
cmp
push
cwde
mov
jecxz
add
and
stos
lahf
mov
or
aaa
aaa
nop
cs
sub
mov
sub
test
pop
adc
add
les
pop
ret
cmp
dec
pusha
mov
sbb
mov
or
jl
xor
adc
xor
lahf
add
sar
or
lahf
ja
lods
mov
xchg
shl
add
mov
imul
sahf
inc
je
ret
xchg
inc
dec
and
and
call
pop
and
add
push
adc
sub
lea
xchg
neg
jae
ficom
inc
mov
inc
not
push
scas
das
jmp
lahf
ret
popa
ins
dec
shl
imul
mov
or
loop
imul
mov
xchg
push
outs
aad
dec
and
ins
outs
add
cmps
sub
add
adc
cmp
maxps
call
stos
jg
cmp
jb
dec
dec
ja
test
xor
aaa
xor
add
push
jmp
push
push
(bad)
fucomip
add
or
and
push
jg
daa
inc
push
and
add
and
push
mov
shl
jae
mov
sub
dec
xor
dec
cmp
pop
or
jecxz
bound
(bad)
inc
pusha
adc
dec
loope
push
xor
mov
jbe
jae
bound
xor
(bad)
jne
inc
dec
mov
loope
push
adc
pop
xor
xor
push
inc
ins
sub
arpl
out
sub
push
mov
xchg
sub
cmp
sbb
loope
push
xlat
inc
xchg
(bad)
outs
xchg
pop
mov
mov
(bad)
iret
arpl
sbb
outs
add
cmp
pop
mov
pop
adc
add
inc
mov
rcl
dec
adc
jmp
pop
and
and
push
ret
scas
sbb
das
push
cmps
cmp
push
push
or
mov
add
sti
fbstp
fstp
mov
push
das
sbb
or
push
xlat
xor
fnstcw
inc
repz
mov
dec
iret
out
mov
adc
mov
push
xor
sar
xor
jge
add
mov
and
adc
cmp
cmp
and
outs
cmp
sahf
adc
pop
jle
(bad)
ins
mov
adc
loope
cmp
xor
test
nop
sub
sub
jnp
push
aas
or
and
and
pop
popa
xchg
inc
dec
retf
(bad)
mov
inc
mov
push
lahf
inc
push
js
xor
jg
int3
outs
lods
(bad)
xor
(bad)
or
(bad)
sti
dec
sub
outs
jmp
fwait
aas
xchg
daa
mov
inc
inc
or
and
bound
mov
loope
test
outs
xor
and
bound
bound
out
mov
es
mov
fdivr
aad
ja
pop
and
mov
xor
pop
outs
xor
ins
cwde
dec
push
pop
xor
inc
mov
sub
outs
pop
icebp
push
jno
pop
(bad)
xor
sbb
jmp
xlat
add
imul
(bad)
push
dec
daa
pop
ins
fsub
jne
(bad)
(bad)
fwait
arpl
cmp
jb
pop
cmp
aad
inc
inc
xor
ret
call
lods
imul
movs
or
xor
stos
pop
and
pop
aaa
jae
mov
icebp
mov
rcr
outs
mov
mov
(bad)
pop
popa
mov
sub
loope
inc
pop
cmp
scas
jmp
push
lods
popa
push
push
jae
fimul
mov
call
out
xor
jno
cmp
inc
jno
ins
xchg
daa
jmp
jne
pop
mov
pop
sub
sub
mov
and
shl
xor
shr
inc
pop
jo
shl
xchg
or
pop
pop
cmps
push
lods
fisttp
inc
push
lea
fisttp
adc
sbb
and
pop
inc
inc
mov
push
pop
fdiv
aas
cmp
mov
push
pop
sub
out
addr16
jae
push
lods
and
inc
add
loope
pop
and
sbb
dec
stos
ret
mov
out
popf
jmp
movs
mov
popa
push
add
cmp
jo
or
jg
mov
iret
push
shr
mov
popa
lea
cmp
aaa
xor
das
sbb
push
jg
pop
adc
lock
xor
mov
dec
test
xor
das
inc
imul
aad
scas
rcr
dec
jno
les
int3
fwait
dec
das
sub
and
push
or
retf
push
sub
sub
adc
push
loopne
mov
in
stos
and
dec
push
bound
xchg
idiv
push
lea
push
retf
or
add
rol
adc
xor
ins
fadd
push
pop
out
sub
jbe
jae
ret
add
inc
mov
add
pop
mov
movs
inc
mov
mov
mov
inc
(bad)
lds
xchg
ror
adc
cmp
dec
push
pop
and
test
sub
mov
sbb
pop
mov
cmp
adc
inc
xlat
cmp
test
test
pusha
add
inc
cmps
sub
push
add
mov
cmp
mov
jo
xchg
mov
and
add
mov
dec
sbb
mov
adc
mov
cmc
mov
sbb
pushf
mov
xchg
xchg
mov
sub
adc
xchg
push
mov
adc
push
ror
sbb
popa
inc
xor
not
sbb
xchg
xlat
mov
add
and
and
out
adc
push
and
and
add
(bad)
dec
inc
add
inc
mov
pop
shl
dec
xchg
scas
push
mov
xchg
pop
adc
adc
jg
push
sub
ret
bound
xor
inc
pop
add
arpl
sbb
test
ror
daa
mov
add
imul
mov
xor
push
arpl
sub
mov
and
and
inc
fistp
aas
jae
push
and
loop
push
push
mov
loop
test
pop
fist
add
pop
sbb
adc
mov
sar
lods
imul
sub
cs
loop
pusha
mov
dec
cmp
retf
mov
and
lahf
inc
mov
pop
mov
xor
retf
push
outs
bound
add
mov
jnp
or
or
pop
das
in
sbb
jmp
mov
outs
ret
fild
inc
or
pop
dec
dec
out
or
clc
xor
sbb
add
loopne
ret
cmp
test
sub
lods
dec
push
aaa
ds
cmps
arpl
scas
jge
repnz
xchg
inc
inc
ins
pop
lods
das
xor
dec
mov
and
fwait
adc
inc
mov
stos
push
fisttp
mov
repz
push
scas
cs
sbb
es
adc
xor
aaa
cmp
or
daa
ret
nop
outs
xor
inc
sbb
mov
add
popa
or
jmp
dec
or
mov
xlat
aaa
arpl
imul
imul
arpl
lods
test
xor
lock
mov
pop
inc
cmp
rol
imul
lahf
sti
shl
bound
mov
sub
mov
mov
xchg
fwait
cmp
nop
mov
add
xor
ja
mov
clc
out
lahf
dec
jmp
add
mov
mov
sbb
loop
(bad)
xor
ins
add
aaa
push
mov
dec
pop
pop
mov
inc
adc
stos
outs
cmp
inc
scas
xchg
xor
xor
adc
pusha
xchg
jmp
rol
sub
ret
jmp
cmp
dec
mov
sub
sbb
push
xor
xor
movlps
mov
pop
dec
sti
out
lods
dec
xchg
jecxz
sahf
adc
aas
xchg
fmul
mov
mov
adc
stos
mov
cmp
inc
sub
cdq
dec
mov
or
mov
pavgw
adc
add
xchg
adc
push
test
or
xlat
stos
pop
mov
adc
push
mov
imul
push
xchg
inc
retf
rcl
xchg
call
ss
cmps
mov
sub
pop
cmp
jmp
dec
test
neg
(bad)
popa
ffree
sub
mov
mov
and
jo
aaa
or
and
pop
aad
inc
jmp
aam
fld
xchg
inc
(bad)
and
cmps
inc
fwait
inc
ret
sub
cmp
dec
call
mov
jo
stos
lds
in
and
fiadd
fwait
pop
test
and
add
outs
pusha
lods
(bad)
arpl
pop
and
pusha
(bad)
fiadd
outs
pusha
push
adc
mov
iret
jae
push
push
daa
mov
cmc
test
sti
push
add
imul
cmps
sub
dec
scas
mov
push
in
ror
mov
jno
dec
ss
inc
mov
lea
push
mov
stos
arpl
lds
dec
scas
(bad)
xchg
jo
jecxz
ss
ins
aad
dec
loop
inc
ror
scas
mov
(bad)
or
mov
lahf
dec
aas
rcr
mov
sbb
pop
inc
push
xor
and
repz
add
or
mov
ret
iret
xlat
xor
push
add
call
cmp
dec
inc
xchg
ja
pop
and
jnp
push
push
dec
test
push
and
add
ret
sub
scas
dec
repz
sub
inc
lds
adc
ror
cmp
(bad)
xor
dec
add
popa
shl
test
daa
retf
lods
loope
add
leave
adc
inc
(bad)
loop
dec
fstp
imul
sbb
push
add
movs
mov
add
outs
xchg
bound
xor
jno
pop
xchg
dec
adc
pop
sbb
mov
jecxz
xor
fcomp
mov
shl
mov
arpl
pop
add
cmp
ret
pop
mov
sub
mov
sub
xchg
lods
popa
int
add
data16
retf
adc
sti
inc
pop
cmps
rol
cmp
aaa
ins
shl
sub
scas
ret
mov
mov
mov
and
and
and
cmp
rcl
dec
adc
bound
mov
and
lock
out
aaa
mov
add
daa
daa
scas
sub
aaa
or
and
mov
inc
jo
fidivr
and
sub
pop
xor
cmps
mov
add
inc
sub
lods
adc
(bad)
xlat
mov
jmp
and
adc
xlat
mov
sub
mov
les
dec
sub
bound
aam
pusha
ds
add
dec
fist
pusha
push
(bad)
mul
adc
ret
and
stos
jecxz
push
and
in
xor
or
push
jo
and
int
jmp
jg
xchg
sbb
in
(bad)
rcl
lods
jecxz
fistp
(bad)
out
sbb
cmps
pop
inc
jecxz
mov
pop
imul
push
jo
outs
fidivr
adc
or
cmp
cmp
ret
sbb
sti
es
inc
and
ds
add
sub
mov
mov
outs
lods
add
mov
or
mov
adc
(bad)
mov
xor
mov
ret
sub
adc
mov
and
mov
xchg
or
and
push
pop
popf
les
daa
dec
dec
sub
push
inc
(bad)
jmp
inc
adc
addr16
dec
rcr
adc
add
xor
stos
push
xor
repz
jno
sub
adc
call
push
iret
aad
xchg
lods
and
sti
stos
sbb
fistp
cmp
mov
cmp
adc
ja
mov
nop
stos
push
pop
adc
xchg
push
dec
and
pop
pop
push
adc
or
jle
imul
xor
mov
loopne
mov
jg
movs
dec
xchg
sbb
pop
adc
jecxz
pop
sbb
adc
and
mov
add
inc
sub
nop
pop
sbb
jo
inc
xchg
xchg
imul
jnp
pop
xchg
stos
fwait
dec
loope
int
and
imul
test
or
add
test
sbb
inc
iret
inc
out
pop
ins
mov
sbb
inc
xor
bound
add
jnp
jo
dec
inc
add
and
add
jmp
push
xchg
nop
pop
fmul
xchg
loop
push
out
pop
jno
pop
mov
mov
sub
pop
daa
mov
(bad)
pop
mov
adc
xchg
pop
push
add
mov
out
imul
cs
stos
xor
stos
loopne
arpl
jo
dec
xlat
dec
and
jo
xor
adc
xor
inc
mov
add
daa
jecxz
ret
xchg
cmp
mov
shrd
sbb
mov
cmp
mov
push
xlat
das
leave
pusha
inc
(bad)
out
push
sub
bound
test
test
xor
test
inc
xchg
pusha
(bad)
shr
xchg
sub
mov
imul
or
xchg
dec
iret
das
cmp
mov
fisub
out
out
mov
adc
adc
mov
(bad)
ret
repz
xor
pop
mov
ja
or
mov
inc
mov
pop
repz
sbb
inc
iret
or
out
mov
mov
jnp
(bad)
repnz
xor
pop
vcvtdq2ps
add
aas
ret
add
mov
jae
scas
cmp
jge
repz
out
imul
movs
mov
lods
pop
mov
and
lds
pop
inc
movs
sub
xchg
daa
inc
add
mov
jae
mov
repz
pop
push
and
test
dec
inc
and
cmp
lea
and
add
add
sub
xchg
adc
dec
push
adc
mov
inc
and
add
mov
or
mov
mov
mov
popa
pusha
jmp
push
test
arpl
retf
shr
pop
inc
dec
inc
(bad)
jge
push
add
jbe
push
add
cmp
xor
inc
jg
mov
xchg
mov
inc
adc
ja
outs
cmps
push
jg
cmp
sub
fs
sahf
xor
dec
mov
icebp
dec
push
mov
push
sub
adc
pop
mov
fist
ret
retf
cmps
xor
xor
sbb
mov
push
jmp
das
or
test
cmps
sub
pop
and
pop
ret
sti
movs
or
mov
mov
dec
div
or
jmp
add
xorps
add
push
mov
je
dec
inc
xor
cmp
and
call
push
inc
pop
xor
and
mov
mov
mov
dec
sbb
or
xor
pusha
aad
cmp
inc
scas
iret
xor
pop
add
cmps
inc
xchg
(bad)
rol
pop
cmp
adc
popa
shr
imul
sub
out
(bad)
or
aam
inc
xchg
retf
or
outs
push
out
mov
adc
jecxz
(bad)
xor
pop
pop
push
fidiv
jmp
push
loopne
jg
inc
ret
dec
add
das
sub
sub
sub
rcl
ja
dec
sub
out
xor
xlat
lods
or
pop
jg
push
xor
sub
retf
xor
cs
add
dec
arpl
push
sbb
paddq
sub
pop
add
bound
push
arpl
lahf
stos
lahf
pop
movs
mov
xchg
test
add
inc
stos
mov
sub
mul
sub
cs
adc
push
out
rol
ins
out
add
and
xchg
arpl
sbb
pmullw
inc
mov
jnp
xchg
stos
loopne
and
mov
shl
ss
repz
lock
aas
imul
imul
fstp
ja
mov
repz
adc
jmp
jg
push
push
xchg
orps
sub
shl
mov
and
je
lahf
mov
mov
add
inc
shr
add
mov
push
fist
mov
xchg
push
mov
inc
fwait
lock
pop
mov
or
rol
mov
jbe
pushf
jnp
test
xchg
cmp
lods
shl
mov
outs
stos
adc
dec
add
ror
and
dec
and
not
lahf
sub
outs
add
ret
cmp
mov
push
repz
sti
sbb
and
ja
cmp
adc
addr16
cmps
mov
test
aaa
cmp
xor
dec
xor
cmp
jnp
inc
inc
and
movs
inc
daa
stos
adc
mov
sti
jnp
sbb
add
inc
inc
sub
shr
jmp
sub
and
out
sub
sbb
addr16
adc
add
mov
or
jae
inc
stos
add
fisttp
(bad)
adc
mov
add
mov
data16
lea
xlat
adc
sbb
cmp
(bad)
outs
cmp
or
mov
pop
lds
add
dec
xlat
dec
mov
pop
scas
sbb
add
push
bound
push
or
daa
aas
stos
xor
aad
dec
mov
dec
xor
out
pop
sub
dec
mov
test
and
popa
sbb
mov
(bad)
call
inc
fistp
inc
ret
fcomp
adc
jg
push
pop
pop
repz
aaa
mov
fild
cmp
pop
mov
pop
xchg
lods
stos
add
pop
(bad)
jo
pop
and
out
xor
dec
dec
rol
and
inc
mov
iret
jg
pushf
adc
(bad)
das
test
repnz
scas
movs
inc
push
push
inc
sub
mov
out
adc
shl
pop
popa
cs
aaa
mov
popa
bswap
stos
push
pusha
add
jp
jo
pop
add
pop
push
add
cmp
cdq
out
inc
cmp
sub
test
and
lods
outs
popa
cmps
and
test
sub
dec
xor
imul
fsub
call
das
push
mov
lahf
pop
adc
call
pop
inc
sub
mov
xor
cmp
xchg
addps
lea
or
(bad)
ds
fiadd
inc
add
stos
mov
xor
cmps
push
add
xchg
lock
dec
sub
or
pop
mov
out
push
mov
out
mov
retf
sub
aas
sub
cmp
imul
repz
mov
pop
pop
test
mov
sub
out
sub
xor
xchg
pusha
sub
sbb
mov
push
out
test
sub
mov
mov
add
pop
not
lods
in
cmp
inc
call
ror
or
aas
jnp
pop
ins
xchg
out
sub
push
pop
je
pop
inc
out
inc
push
and
rcr
lds
mov
daa
mov
or
mov
push
les
popa
add
fwait
add
das
mov
retf
pop
mov
pop
sbb
popa
and
adc
repz
rcl
lods
stos
idiv
call
stos
or
push
add
sbb
mov
or
adc
imul
or
sar
sbb
adc
mov
out
jo
movs
dec
(bad)
fild
push
pop
pop
mov
mov
xor
lods
cs
mov
dec
mov
sub
xlat
mov
push
xor
imul
xlat
push
aas
dec
retf
push
push
stos
inc
jae
add
pusha
dec
lds
addr16
mov
push
add
inc
or
pop
mov
out
sbb
sti
arpl
adc
dec
scas
cmp
dec
and
xor
bound
ret
cmp
out
add
push
imul
pop
fisub
(bad)
jmp
or
xchg
test
push
ins
imul
jmp
add
data16
dec
cmps
aas
lahf
scas
adc
xchg
mov
imul
and
mov
cmova
mov
adc
pop
push
add
(bad)
mov
add
adc
lods
fst
(bad)
jl
imul
mov
sbb
cmp
stos
mov
int3
inc
scas
dec
adc
push
sbb
add
add
adc
mov
pop
shl
xor
movs
push
xchg
adc
xchg
retf
xor
fdiv
addr16
or
pusha
and
and
sub
inc
lods
(bad)
jmp
fadd
inc
adc
mov
dec
xchg
push
mov
mov
add
mov
mov
sbb
push
data16
fnstcw
inc
pop
cmp
inc
inc
popa
ror
dec
popa
and
inc
mov
das
andnps
mov
lahf
xor
aaa
ror
push
repz
push
pop
das
xlat
lods
sbb
lahf
xchg
nop
mov
inc
outs
or
adc
call
cmps
xor
sub
mov
add
push
sub
mov
inc
jnp
sbb
es
mov
cs
inc
pop
adc
pop
inc
jnp
test
sub
ins
inc
cmps
mov
adc
xchg
dec
call
push
pop
pop
dec
pop
cmp
les
add
pop
ret
add
inc
xor
sbb
shl
test
sub
sub
mov
inc
or
out
adc
jo
dec
(bad)
add
push
inc
inc
retf
mov
imul
push
iret
sub
call
and
nop
jae
push
add
cmps
mov
mov
xchg
xor
mov
push
fcom
add
jg
xor
push
pop
dec
bound
xchg
ja
push
lock
xor
xchg
mov
and
jne
fld
outs
push
dec
sti
dec
mov
sub
or
sub
(bad)
xchg
pusha
aam
and
mov
xchg
(bad)
ds
mov
ins
aas
cmp
aas
or
adc
or
fild
lods
pop
or
leave
lds
inc
lods
daa
adc
jnp
sub
push
sti
xor
nop
(bad)
loopne
retf
inc
outs
sbb
mov
jmp
daa
jmp
cmps
je
push
mov
les
sub
adc
mov
sub
rep
sbb
pop
aad
sub
imul
rol
pop
or
mov
xor
outs
push
pop
and
je
push
dec
aaa
imul
sti
jecxz
jmp
jne
jae
ret
jnp
cmp
mov
cmp
ins
cmp
mov
xlat
xchg
inc
xchg
jle
or
daa
and
pop
push
cmp
outs
mov
sub
xchg
sub
ficom
call
inc
xchg
xor
retf
cmp
mov
cmp
mov
arpl
mov
or
adc
iret
(bad)
aam
sbb
dec
sub
cmp
or
dec
push
pusha
inc
test
jmp
mov
ja
or
aas
pop
xor
js
push
cmp
jg
xor
mov
lahf
cmp
inc
mov
mov
pop
dec
cs
fistp
test
(bad)
push
xor
xor
ret
ret
xor
and
stos
ret
inc
push
jb
jmp
mov
cmp
add
push
xlat
fiadd
pusha
shl
and
sbb
test
xor
pop
mov
cmp
mov
mov
popaw
add
fs
push
sbb
andnps
dec
(bad)
fild
and
xchg
push
adc
add
mov
shl
(bad)
mov
adc
push
out
sbb
cmp
(bad)
(bad)
lahf
dec
(bad)
bound
xor
imul
xchg
and
sub
mov
xchg
and
or
inc
dec
or
adc
sbb
and
push
les
les
sbb
bound
xchg
test
push
test
adc
outs
or
aad
ret
adc
push
push
or
dec
imul
int
xor
push
and
(bad)
and
ret
outs
or
or
add
sub
add
dec
sub
xor
push
mov
pop
sbb
mov
jecxz
add
sub
mov
add
mov
iret
and
cmp
dec
inc
outs
jecxz
cmps
popf
pop
(bad)
sub
adc
sub
aad
imul
mov
jecxz
sub
mov
pop
pop
sbb
xchg
sub
xor
xor
push
(bad)
(bad)
inc
jo
push
lahf
sbb
out
jae
mov
sub
(bad)
pop
push
fisttp
(bad)
fs
and
mov
or
xor
inc
fs
outs
fldcw
push
jbe
out
imul
pop
xor
inc
jnp
mov
popa
lods
sbb
stos
xchg
icebp
aaa
outs
mov
ja
rcl
or
daa
xchg
mov
mov
stos
xlat
pop
sbb
movs
sbb
mov
sub
add
xchg
and
push
sub
adc
dec
pusha
push
push
inc
aaa
loop
mov
add
daa
inc
jb
or
pop
xor
adc
and
aaa
xchg
sub
sbb
push
push
sub
push
(bad)
adc
and
xor
stos
sub
cmp
fstp
data16
scas
test
add
push
bound
dec
clc
mov
and
sti
popf
xor
pop
aaa
sbb
pop
out
cmp
mov
and
cmp
test
or
aaa
shl
in
and
mov
add
shl
nop
and
and
dec
pop
push
fbld
pop
sub
jb
ins
add
das
adc
sbb
mov
sbb
push
or
or
adc
fcomi
loopne
arpl
and
and
ret
loopne
and
push
stos
fisubr
xor
pop
inc
xor
jnp
fdiv
or
das
and
xchg
adc
pop
scas
rcr
das
push
ret
out
push
outs
ror
dec
daa
sub
mov
sbb
sti
jno
push
retf
sbb
adc
push
push
out
sbb
sbb
and
cs
das
mov
push
sbb
es
mov
and
fisttp
test
adc
mov
das
cmps
sub
dec
sbb
mov
das
out
jmp
(bad)
sahf
cs
pop
jnp
sub
rcr
mov
pusha
stos
dec
test
unpcklps
mov
stos
adc
dec
push
das
pop
xchg
cs
jae
dec
xchg
adc
(bad)
xor
test
fsub
mov
fbstp
mov
adc
push
out
sub
jecxz
sbb
inc
and
pop
lea
loopne
ja
sbb
dec
and
test
inc
jg
pop
mov
xchg
xchg
stos
js
xchg
imul
cmp
stos
inc
cmp
sbb
adc
ss
ds
pop
xchg
das
and
push
push
sbb
aaa
mov
pop
sub
jl
ret
adc
xor
sti
mov
mov
scas
arpl
jg
and
pop
ins
or
(bad)
movhps
mov
add
outs
add
mov
leave
rcl
xor
or
cmp
lahf
inc
dec
inc
and
imul
imul
stos
bound
or
and
fbstp
jecxz
and
jmp
push
sbb
inc
pop
repz
mov
arpl
loopne
push
sub
add
sbb
cmp
inc
mov
cmp
ret
inc
push
movs
mov
xchg
das
bound
lea
jmp
push
ret
sub
dec
call
(bad)
outs
out
popa
retf
mov
pop
test
adc
add
inc
and
xor
icebp
ins
add
data16
xor
jno
out
push
xor
les
loope
cli
stos
sbb
in
cdq
outs
imul
imul
lea
pop
mov
movs
adc
pushf
(bad)
call
arpl
add
mov
push
inc
movs
or
mov
sub
xor
add
loop
xor
push
push
lods
inc
jg
add
call
mov
div
ffreep
mov
repz
mov
stos
sbb
sub
inc
dec
push
cmps
xor
mov
fisubr
push
pop
jmp
add
sub
mov
xchg
and
not
ins
jne
xor
push
sbb
xor
out
js
sub
xor
lahf
dec
punpckldq
inc
dec
sbb
adc
jae
shr
pop
and
lea
pop
push
pop
inc
lahf
or
or
push
push
pop
outs
in
outs
imul
add
push
nop
add
mov
popa
adc
outs
lock
xor
and
sti
jg
or
dec
push
xchg
mov
movsx
ss
jnp
add
adc
mov
retf
pop
stos
mov
(bad)
push
push
and
sti
add
and
stos
cmps
lahf
inc
call
int
xchg
pop
xlat
pop
pop
fnsave
dec
and
xchg
pop
adc
inc
or
inc
sub
mov
lahf
jmp
inc
int
cmps
push
push
out
push
or
cmp
and
add
adc
inc
push
stos
call
rol
mov
sub
inc
add
test
jno
iret
add
mov
push
pop
inc
dec
mov
pushf
outs
push
aas
xor
mov
pop
mov
lds
les
cmp
aam
and
dec
add
arpl
and
or
sub
imul
mov
call
mov
cmp
loop
inc
dec
mov
sub
imul
aas
scas
sub
and
dec
xor
test
fstp
sti
jo
in
pop
pop
cmp
xor
pop
test
fwait
inc
xor
cmc
ja
xor
inc
jmp
push
ror
xor
pop
adc
xor
jmp
push
jo
mov
aaa
fwait
sbb
push
push
inc
inc
mov
pop
aaa
mov
inc
pop
jne
aas
mov
test
sub
add
adc
idiv
lds
dec
aas
xchg
cmps
xor
push
xchg
mov
add
cmp
push
mov
cmp
sub
stos
push
and
mov
mov
adc
add
mov
sbb
(bad)
jmp
(bad)
sbb
or
inc
jecxz
pop
mov
retf
ret
arpl
cmps
ffreep
push
popa
arpl
xor
(bad)
xlat
push
jno
dec
jmp
ss
xor
adc
data16
inc
or
add
and
fimul
add
adc
test
mov
xor
arpl
pop
adc
ret
xor
inc
cmp
or
dec
pop
pop
stc
add
pop
ds
xor
pop
and
das
mov
rol
push
inc
fld
dec
sub
fisttp
push
outs
outs
inc
mov
and
shl
in
xor
dec
dec
aaa
xchg
fistp
push
mov
rcl
out
call
stos
xor
push
xor
or
rol
adc
adc
mov
sti
daa
xor
fwait
inc
and
lea
sbb
jmp
and
ficomp
stos
mov
sub
jg
xor
ret
or
or
sub
sub
mov
pop
iret
sti
push
loope
test
xor
and
fistp
or
(bad)
pop
push
test
adc
test
jno
out
out
out
ss
adc
iret
inc
mov
and
adc
out
shr
lahf
ud1
and
sub
xor
adc
lahf
imul
stos
adc
push
movs
adc
mov
scas
rcr
shl
(bad)
mov
inc
cmp
ss
xchg
shr
xor
pop
sar
dec
adc
pop
xchg
dec
sbb
inc
sub
xchg
imul
rol
push
mov
movs
sub
repz
mov
loopne
pop
sbb
adc
ror
dec
aas
retf
bound
inc
dec
outs
mov
scas
push
xchg
pop
iret
fistp
add
les
adc
call
test
bound
lahf
xor
push
inc
inc
bnd
sub
aam
dec
shl
inc
mov
push
test
lods
pop
pop
test
stos
adc
sub
or
ror
mov
shl
bound
call
test
shr
pop
and
stos
fwait
nop
test
arpl
arpl
sbb
lds
(bad)
or
out
loop
add
push
pop
xchg
and
pop
bound
sbb
mov
ds
pop
test
fs
test
test
mov
in
mov
adc
xor
aas
mov
cmps
push
(bad)
sbb
xor
push
jecxz
retf
adc
adc
(bad)
sub
add
and
cmp
mov
adc
lods
adc
aam
xor
aad
popa
mov
xor
sub
aas
sbb
stos
rcr
fwait
lods
add
test
packsswb
repnz
(bad)
dec
add
fldenv
xor
(bad)
pop
mov
lea
fistp
inc
adc
idiv
das
xchg
shr
xchg
push
mov
arpl
sar
retf
test
test
add
fidiv
fwait
push
sub
dec
push
fbstp
pop
dec
sbb
add
jo
dec
push
inc
cmp
inc
fs
adc
outs
lds
mov
outs
push
daa
push
pop
jmp
out
ret
add
shl
adc
leave
cmp
pop
xchg
push
pop
jg
pop
adc
(bad)
xor
and
mov
repz
xor
call
ficom
inc
popa
adc
or
aam
scas
add
and
lea
xor
xchg
push
fild
xchg
ficom
sub
mov
jecxz
add
mov
ds
or
hlt
jno
ret
mov
movs
jno
not
or
dec
ficomp
mov
out
sbb
call
scas
outs
sbb
lods
jecxz
popf
jne
jg
ret
repnz
(bad)
adc
and
inc
and
mov
jmp
inc
sub
cdq
fist
or
and
xchg
adc
nop
push
mov
jo
dec
sub
repnz
repz
shl
dec
xor
xchg
loope
sbb
and
das
ds
or
jmp
jg
sbb
lahf
sbb
imul
cmp
mul
ss
push
xchg
inc
xor
dec
mov
in
sbb
mov
movzx
fwait
mov
popf
ja
outs
sbb
movs
push
push
out
add
adc
sbb
fisttp
sub
pusha
xchg
adc
(bad)
push
dec
mov
push
cmps
xor
push
jg
retf
iret
aad
and
add
add
mov
mov
cmp
jle
ror
push
fistp
pop
sbb
jnp
jae
and
sbb
xchg
mov
xchg
pop
jmp
sub
mov
pop
into
push
cmp
scas
sbb
dec
stos
(bad)
adc
out
in
in
or
xchg
adc
mov
fisubr
sub
jmp
imul
arpl
sbb
cmc
push
pop
jnp
cmp
aaa
(bad)
jmp
add
sub
or
out
cmp
ret
sbb
bound
dec
iret
fidiv
popa
pop
imul
xor
jae
jg
cmp
or
ret
loop
xchg
jbe
stos
cs
mov
sbb
or
dec
pop
push
out
sub
pop
ins
jmp
xor
add
rcr
adc
push
sub
daa
aas
pop
mov
xor
or
(bad)
sub
push
lahf
pop
add
aad
mov
jnp
ror
cmp
and
imul
inc
inc
sub
pop
mov
movs
sbb
sub
or
push
les
mov
inc
call
movs
shr
inc
dec
xor
stos
pop
push
and
jmp
dec
imul
in
mov
adc
test
xchg
test
xlat
pop
ret
jecxz
sti
mov
fwait
add
inc
xchg
pop
stos
mov
out
and
adc
adc
sub
push
sbb
push
cmp
adc
and
and
add
mov
das
adc
(bad)
push
mov
outs
out
add
sbb
sbb
mov
mov
cmps
sbb
dec
adc
pop
inc
ja
rcl
jb
lods
add
mov
mov
sbb
test
pop
clc
mov
out
das
jnp
arpl
ror
and
inc
hlt
js
adc
push
sbb
ret
sbb
mov
cmps
and
mov
sub
das
mov
and
inc
dec
pop
fimul
sub
sar
rol
mov
pop
test
dec
daa
mov
push
es
sub
dec
fnsave
adc
ret
or
mov
cmp
push
popa
mov
or
stos
test
and
sub
lea
popa
adc
(bad)
and
jnp
and
or
aaa
mov
add
mov
and
adc
xor
test
jmp
inc
lods
sbb
sub
stos
adc
dec
sbb
lahf
dec
push
or
xchg
pop
shr
dec
sbb
les
cs
mov
lds
les
pop
cmp
add
sahf
test
daa
mov
sub
or
mov
aas
and
and
aas
xor
push
xor
bound
mov
adc
push
and
cmp
add
inc
or
mov
mov
mov
sti
sti
add
add
adc
fbstp
daa
mov
sub
sbb
rcr
outs
stos
imul
push
inc
or
pop
pop
and
jae
inc
sub
dec
packsswb
sub
sahf
jb
das
scas
stos
add
or
push
pop
call
push
xor
imul
or
fisub
or
mov
jno
pop
ds
xor
ds
lahf
sbb
stos
cmp
pop
xor
jnp
xor
nop
cmp
dec
pushf
xor
inc
pop
mov
mov
dec
bt
(bad)
ja
popa
daa
out
aaa
inc
mov
mov
inc
add
jp
test
je
int3
or
xchg
arpl
mov
outs
mov
mov
imul
sub
daa
or
push
or
push
fild
sbb
or
fimul
dec
dec
xchg
xor
imul
dec
jmp
or
push
mov
test
jnp
aam
aam
pop
pop
inc
adc
mov
dec
adc
pop
add
xor
mov
mov
out
imul
push
pop
sub
lahf
fild
stos
adc
adc
adc
stos
add
inc
mov
add
mov
inc
lods
mov
mov
adc
pop
mov
add
mov
adc
sub
dec
pop
inc
or
bsr
jl
aam
pop
aad
in
pop
adc
xchg
stos
adc
sub
jmp
adc
add
cs
loopne
push
push
retf
mov
jg
cs
add
fadd
into
(bad)
(bad)
dec
sbb
ror
jmp
push
pop
sbb
mov
sbb
pop
dec
or
mov
xchg
adc
out
xlat
arpl
mov
and
es
dec
and
and
sub
jg
pop
pop
inc
sub
aam
mov
add
pop
push
sbb
mov
pop
sbb
sub
sbb
daa
out
sub
mov
mov
push
add
and
and
ror
add
push
stos
push
mov
push
lods
jno
xor
cmp
sub
pushf
aaa
xchg
sub
or
outs
aaa
lahf
into
mov
and
and
arpl
iret
pop
inc
adc
push
ss
pop
nop
mov
xlat
jmp
stos
push
ja
add
(bad)
xchg
adc
add
sub
fcmovnbe
rcl
fwait
sub
mov
sub
test
jnp
call
lahf
cs
in
(bad)
mov
sbb
sbb
fcom
mov
mov
stos
push
test
cmp
add
push
test
loope
jecxz
faddp
adc
mov
add
call
cmps
sbb
popa
xlat
or
cmp
pop
pop
and
xor
adc
or
and
mov
fwait
jne
mov
pop
jae
push
jno
imul
push
or
je
add
jmp
or
pop
sub
add
aaa
add
shl
pop
inc
leave
and
mov
and
arpl
test
sbb
es
sbb
add
ins
inc
gs
fwait
xor
sbb
jmp
adc
idiv
adc
and
sub
add
and
sbb
adc
push
adc
mov
xor
and
pusha
popf
mov
into
pop
arpl
jae
add
scas
cmp
adc
adc
nop
iret
nop
add
out
push
lock
xchg
js
xchg
arpl
outs
xor
or
pop
adc
pop
and
pop
or
jbe
mov
jg
xchg
inc
mov
mov
push
mov
adc
aaa
xor
movs
sub
jg
adc
lahf
clc
pop
cmp
pop
(bad)
loope
lock
or
pop
add
loope
jnp
popa
jno
adc
cmps
xchg
pop
adc
mov
in
adc
(bad)
push
loop
imul
in
or
(bad)
cmp
add
mov
cmp
ret
mov
fwait
adc
xchg
xchg
ja
or
sbb
push
inc
movs
or
adc
push
dec
adc
ds
loop
mov
mov
out
adc
les
pusha
es
sbb
xor
stos
dec
sub
push
push
or
dec
addr16
add
aaa
fwait
loop
xchg
sbb
lods
xor
stos
in
xchg
ins
and
scas
push
dec
sbb
pop
xor
xor
loopne
xor
inc
and
push
inc
out
jno
jo
(bad)
cmp
and
cmp
xlat
and
cwde
cmp
jo
ror
jmp
jecxz
sbb
add
mov
pop
fbld
push
jmp
jnp
sub
and
mov
(bad)
push
xchg
mov
xchg
out
and
lahf
xor
das
add
inc
sub
xor
call
add
adc
popa
adc
inc
out
imul
arpl
sbb
and
and
stos
out
mov
cmps
test
inc
pushf
add
sbb
stos
out
repz
cs
das
sbb
push
out
pop
sbb
or
dec
xchg
test
push
lahf
xor
mov
out
mov
pavgb
add
sub
add
imul
or
xchg
aaa
and
das
xlat
lods
imul
fsub
push
mov
test
retf
ja
daa
sub
xchg
test
arpl
inc
xor
dec
sub
sub
add
imul
stos
stos
or
mov
pushf
pop
jne
cmps
daa
mov
ret
or
sub
aaa
sbb
adc
xor
lsl
mov
sbb
adc
sub
cmp
xor
out
pop
or
push
jb
cmps
imul
movs
mov
sbb
sub
pop
sbb
push
rcl
pop
mov
dec
pop
mov
mov
inc
or
loop
pop
retf
enter
das
mov
push
pop
(bad)
dec
jecxz
inc
or
jg
ja
mov
jg
sub
jne
out
mov
add
dec
push
adc
test
inc
ret
push
add
push
adc
bound
lds
pop
sbb
xchg
mov
leave
outs
pop
lea
lea
scas
loopne
inc
and
mov
movs
xor
sbb
sub
sub
inc
sbb
rcl
xchg
or
push
out
dec
pop
mov
pop
xchg
sbb
add
and
push
xchg
sbb
dec
or
fbld
add
push
xorps
arpl
dec
xchg
pop
ins
lea
inc
mov
and
pop
jg
and
mov
mov
push
push
xchg
cmp
adc
adc
mov
pop
jne
fiadd
sub
jae
test
mov
adc
lahf
xchg
or
sub
push
xor
xor
inc
adc
cmps
ret
inc
mov
fwait
xchg
mov
adc
mov
xchg
pop
das
and
sub
clc
mov
leave
aaa
retf
scas
push
sub
(bad)
xor
xchg
iret
add
ja
and
(bad)
iret
les
fwait
stos
in
and
xor
shl
pop
das
ror
xchg
push
mov
add
arpl
add
cmps
mov
or
scas
jae
adc
(bad)
(bad)
and
(bad)
dec
fisttp
mov
arpl
mov
pusha
cwde
cs
push
pop
sbb
fwait
arpl
add
aas
xchg
mov
cmp
cmp
mov
sub
repz
data16
jmp
iret
dec
(bad)
fidiv
mov
sub
inc
mov
or
or
dec
and
xlat
imul
aad
les
push
jecxz
sbb
fisubr
inc
xchg
sbb
stos
repz
xchg
mov
mov
mov
ins
sbb
loop
daa
ja
dec
lods
add
dec
add
(bad)
xor
xor
sub
xor
inc
cmp
sub
pop
xchg
push
jmp
or
jmp
scas
and
dec
or
and
call
inc
inc
in
xchg
outs
xor
mov
in
mov
movs
adc
pusha
adc
push
xchg
mov
movs
cs
xchg
iret
dec
ret
(bad)
mov
adc
js
popa
push
mov
out
adc
push
pop
dec
cs
aam
es
and
into
sbb
or
xchg
data16
pusha
jns
sbb
ror
(bad)
aam
sbb
mov
adc
and
or
add
sub
mov
add
mov
shl
mov
daa
jno
sbb
ja
adc
push
mov
pop
sbb
sti
pop
adc
pop
les
add
xchg
inc
or
xor
xchg
xchg
xor
xor
xor
or
xor
xor
add
sbb
xor
xor
add
dec
add
add
xor
sub
call
fwait
add
adc
or
sbb
rcl
add
mov
mov
xor
xchg
xor
xor
jle
dec
cmps
mov
inc
adc
add
add
inc
xor
dec
inc
xchg
or
xor
enter
nop
inc
add
xor
xor
jns
xor
xor
sub
xor
xor
or
xor
xor
inc
xor
add
push
add
test
mov
jnp
adc
mov
pop
push
xor
jnp
mov
and
xchg
or
pop
push
and
push
adc
mov
sbb
add
mov
dec
mov
repz
xor
pop
mov
add
and
add
adc
push
mov
add
push
sub
es
nop
and
inc
xor
xor
inc
cs
sub
loopne
xor
xor
xor
xor
xor
jg
inc
xchg
inc
aaa
add
nop
push
inc
adc
mov
push
jno
cmp
ror
add
mov
push
test
loop
lods
popa
adc
jno
cdq
(bad)
jae
adc
pop
stos
inc
and
mov
dec
and
adc
dec
and
adc
sub
and
mov
pop
push
repz
sub
and
add
mov
pop
add
adc
mov
push
enter
mov
mov
inc
add
add
ins
fist
lahf
cmp
(bad)
and
push
mov
add
enter
inc
and
adc
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
pop
xchg
dec
and
pop
xchg
gs
push
adc
test
add
adc
(bad)
xchg
mov
add
adc
sub
sub
add
xchg
nop
inc
adc
add
dec
push
add
(bad)
(bad)
mov
scas
xor
xor
xor
xor
xor
jns
dec
push
ror
xadd
shl
or
daa
(bad)
push
adc
jmp
fbstp
retf
xor
xchg
pop
xor
xor
xor
cs
outs
ret
(bad)
std
jmp
and
popa
clc
inc
ss
std
mov
push
outs
inc
aas
enter
dec
push
(bad)
cmp
int3
xchg
xor
punpcklwd
cwde
xchg
xor
mov
stc
dec
xor
push
xor
dec
xor
add
test
mov
push
adc
lds
mov
push
xor
push
xchg
mov
push
(bad)
jmp
fild
dec
jg
(bad)
xor
push
pop
dec
xor
fwait
sub
(bad)
push
sub
mov
mov
dec
cmp
aas
js
push
push
pop
test
mov
pop
pop
jmp
pop
std
or
data16
pop
push
outs
mov
fild
jle
push
aad
test
sti
or
imul
cld
lock
sbb
dec
mov
jnp
dec
add
xor
frstor
pop
daa
pop
xor
popa
xor
mov
ds
shr
mov
xor
mov
add
dec
call
xchg
jp
sbb
jns
xor
das
aam
sbb
xor
jb
push
fwait
xchg
sbb
loope
mov
sub
pop
pop
xor
in
in
scas
(bad)
push
rcl
(bad)
(bad)
mov
repnz
retf
dec
ins
imul
push
sbb
dec
data16
push
mov
lock
mov
pop
xchg
popa
or
xor
div
and
sub
pop
out
push
out
(bad)
in
pop
push
mov
cwde
sub
pop
pop
push
and
or
rol
push
push
and
mov
ins
cmp
jecxz
sub
mov
idiv
cmc
jo
(bad)
pop
imul
(bad)
mov
sbb
jp
dec
push
jcxz
xchg
test
push
push
xor
or
push
arpl
dec
push
into
add
into
add
test
test
loope
outs
dec
dec
and
jg
ss
dec
xor
into
push
dec
scas
jecxz
sub
pop
add
nop
test
loop
mov
add
pop
sub
mov
(bad)
pop
jmp
arpl
pop
push
push
mov
xchg
outs
cmps
jb
ss
sbb
lahf
add
jno
arpl
(bad)
xlat
push
dec
pop
fsub
dec
dec
jnp
xor
ret
mov
pop
(bad)
jle
mov
(bad)
dec
mov
loopne
js
add
jnp
addr16
sbb
mov
mov
(bad)
data16
pop
jnp
lahf
dec
cmp
push
or
bound
adc
adc
ror
pop
adc
pop
nop
fisubr
nop
fild
pop
(bad)
dec
pop
mov
bound
fwait
push
xchg
arpl
pop
push
(bad)
mov
fstp
or
cmp
xor
xchg
ins
clc
jp
mov
push
pop
pop
adc
fnstsw
and
mov
push
dec
push
push
mul
lods
jmp
push
das
data16
aaa
push
or
scas
imul
sahf
push
fisttp
pop
test
out
and
ds
push
pop
jbe
loopne
push
jge
jle
fisttp
add
mov
xchg
or
(bad)
enter
sti
xchg
sar
or
dec
out
pusha
rol
mov
call
(bad)
sti
lahf
pop
mov
lahf
jecxz
nop
in
jg
fst
mov
sbb
push
push
call
dec
iret
outs
sbb
and
mov
add
add
mov
das
test
inc
ret
mov
or
mov
xchg
pusha
jo
xor
xor
cmp
pop
outs
cmp
mov
and
inc
ret
aas
mov
xor
(bad)
add
aaa
pop
dec
mov
cmp
xchg
les
push
(bad)
les
test
sbb
stos
iret
jnp
or
fiadd
cmp
push
and
pop
not
in
mov
shr
lahf
cmp
add
add
mov
ja
push
bound
enter
push
mov
xchg
mov
pop
imul
inc
adc
sbb
dec
inc
addr16
mov
pusha
xor
call
das
aaa
test
add
sbb
jbe
test
cmp
lahf
adc
or
cmp
inc
lahf
test
popa
cmp
(bad)
mov
or
cmp
pop
in
pop
rol
mov
fisubr
jp
shr
loop
outs
pop
add
cli
pop
dec
popf
adc
adc
loop
sbb
out
neg
add
jnp
mov
(bad)
push
fld
xchg
push
std
add
loop
lock
pusha
or
pop
xchg
push
mov
in
ja
dec
dec
jb
pop
mov
leave
and
cmc
ins
idiv
add
mov
fcom
cli
(bad)
mov
inc
jecxz
xchg
sbb
jge
mov
or
jg
sub
jnp
out
es
rol
cmp
push
push
push
adc
cwde
and
out
adc
ja
mov
sub
fsubp
stos
loopne
dec
dec
repz
loop
sub
mov
cmp
aad
arpl
xor
cmp
xor
jmp
call
nop
push
bound
dec
mov
push
fwait
addr16
push
lods
ja
sub
mov
jg
xor
push
add
jno
jbe
movs
ins
mov
mov
out
rcr
ud0
xchg
popa
pop
dec
adc
pusha
(bad)
retf
and
add
mov
xor
loope
jae
imul
sar
push
push
mov
scas
les
pop
jmp
adc
inc
xchg
jne
pusha
cmp
xlat
or
(bad)
ficomp
jnp
loopne
outs
outs
loop
jbe
push
jns
adc
xor
test
jmp
stos
sbb
or
shl
in
xchg
out
xor
jne
pop
and
add
pop
push
pop
lock
fsub
adc
jmp
repnz
bnd
mov
mov
or
outs
mov
stos
shl
inc
mov
sbb
cmp
xchg
jg
bound
lds
das
arpl
and
pop
adc
pushf
addr16
jne
imul
push
xor
(bad)
and
sti
add
pop
arpl
add
dec
outs
xor
mov
outs
add
or
mov
jge
xchg
xor
ja
and
or
jg
inc
pop
sbb
pusha
xor
ret
sub
pop
push
push
cmp
cmp
mov
(bad)
mov
dec
and
or
push
push
adc
add
pop
loopne
ror
outs
scas
scas
mov
int
push
(bad)
scas
or
push
pop
outs
enter
pusha
xor
adc
mov
pop
mov
push
jmp
cmp
mov
and
arpl
lahf
add
movs
xchg
ja
out
aas
jbe
xor
mov
add
lods
add
add
smsw
mov
mov
jo
push
add
inc
xchg
mov
and
daa
pop
call
inc
sbb
bound
push
fwait
xor
mov
dec
sbb
ds
push
xlat
retf
fmul
push
sbb
xor
and
mov
imul
cmp
cmp
mov
cmp
sbb
scas
pop
jnp
xchg
push
mov
pusha
out
imul
repz
mov
(bad)
lods
(bad)
scas
rcl
sbb
mov
shl
mov
(bad)
loope
enter
inc
and
pop
push
xchg
xor
inc
sub
(bad)
add
fwait
sub
ja
sub
push
imul
mov
outs
jmp
sahf
call
fadd
test
arpl
lock
aaa
or
sub
int3
out
leave
inc
out
push
test
push
stos
and
sub
or
jnp
xor
mov
add
push
out
mov
ret
jae
loop
imul
lds
arpl
shl
add
add
shl
add
push
mov
int
ret
cmps
pop
mov
add
push
pop
sbb
mov
cmp
(bad)
loopne
jne
pop
or
and
ret
add
test
mov
scas
inc
lock
aaa
mov
shr
sub
or
lods
inc
inc
lahf
and
sbb
(bad)
jp
rol
push
dec
push
ret
imul
adc
lods
arpl
inc
adc
ja
xor
adc
popa
stos
mov
push
push
sub
mov
mov
inc
sub
dec
fstp
pusha
mov
gs
push
mov
test
inc
mov
or
sub
in
pop
lods
test
add
shr
adc
dec
mov
inc
or
rol
add
pop
xchg
pop
dec
add
dec
outs
add
imul
dec
inc
pop
adc
popa
mov
pop
jbe
mov
addr16
add
stos
or
add
outs
das
aaa
mov
dec
pop
xor
stos
add
fild
and
mov
arpl
and
push
jge
pop
adc
sti
or
mov
das
cli
mov
add
adc
fmul
sbb
mov
mov
and
mov
fwait
pop
pop
mov
imul
lock
(bad)
fbstp
(bad)
pop
xlat
xchg
enter
sub
js
fld
shr
sub
sti
leave
dec
and
ds
push
mov
push
pop
retf
js
loop
cmp
gs
pop
aaa
(bad)
iret
xor
xor
push
adc
and
push
inc
dec
dec
inc
(bad)
out
add
fst
push
push
mov
repz
ja
loope
jmp
sti
dec
(bad)
or
maxps
dec
mov
mov
push
daa
push
mov
dec
ret
hlt
mov
jg
jecxz
push
dec
dec
jb
out
pop
push
add
imul
xor
jge
push
rol
mov
cmc
hlt
jbe
arpl
xchg
xchg
push
dec
push
mov
mov
inc
and
lahf
imul
ss
das
or
sbb
pop
sbb
sub
(bad)
jecxz
sahf
lods
dec
dec
push
and
xchg
jo
pop
loop
push
xlat
lahf
mov
jbe
sub
push
fcmove
outs
jmp
outs
outs
data16
loop
aam
pop
push
xchg
add
(bad)
and
add
dec
fwait
xor
jmp
and
fcmovnu
daa
xchg
sub
adc
jne
push
or
int
ja
call
imul
jp
cwde
push
lds
pop
pop
xchg
mov
js
(bad)
adc
pop
stos
imul
or
ja
or
adc
push
and
dec
sub
push
jae
pop
(bad)
pusha
(bad)
jns
xor
dec
hlt
aaa
add
or
push
sub
lods
or
out
and
dec
push
(bad)
arpl
pop
push
mov
fistp
add
jp
sbb
into
outs
iret
sbb
dec
push
jg
fdivr
pop
adc
ret
dec
rol
daa
iret
or
out
lods
nop
cmp
pop
pop
push
mov
ret
cmp
lea
dec
dec
adc
test
(bad)
mov
sti
outs
or
add
xchg
adc
imul
pop
jbe
or
pop
pop
mov
push
sbb
xchg
adc
sbb
imul
or
jae
inc
mov
push
iret
jne
jecxz
or
dec
stos
ror
jg
mov
xor
push
xor
test
shl
or
xor
js
cmp
scas
aaa
xlat
sti
and
ins
aad
outs
sbb
adc
dec
ja
call
stos
push
push
push
mov
cmps
xchg
mov
jns
(bad)
xor
mov
cdq
and
div
mov
imul
paddusb
dec
mov
cli
jns
loope
sub
jge
add
and
retf
test
ins
inc
test
je
dec
mov
inc
jnp
mov
(bad)
xchg
inc
xor
pop
xchg
xor
xor
dec
adc
add
pop
nop
pop
push
inc
ja
xor
add
add
add
outs
scas
xor
mul
and
ja
movs
push
lods
xlat
maskmovq
imul
inc
stos
mov
push
pop
mov
mov
loop
fs
dec
pop
popa
sub
jmp
loope
inc
sub
push
sti
es
xchg
cmp
fiadd
(bad)
pop
stos
cli
xlat
mov
mov
mov
mov
xlat
inc
rcl
jae
mov
sbb
cmp
xchg
mov
adc
push
dec
mov
adc
(bad)
mov
pop
scas
mov
sub
fiadd
out
arpl
add
push
(bad)
test
xchg
out
adc
js
push
mov
jae
dec
inc
nop
fbstp
scas
push
adc
or
pop
icebp
sub
daa
aas
pop
arpl
add
adc
mov
ins
dec
sahf
xchg
jbe
mov
mov
add
pop
mov
add
pop
push
test
bound
or
pop
add
fcomp
pop
mov
pop
mul
daa
mov
push
cmp
nop
imul
pop
jnp
push
jnp
sti
xor
xchg
and
js
leave
stos
sbb
call
pop
dec
mov
imul
pop
and
mov
xchg
jmp
mov
cmps
xor
pop
lahf
push
out
jae
call
fdiv
fwait
or
cs
push
fs
pop
jnp
sbb
pop
xchg
(bad)
icebp
ins
mov
xchg
and
pop
outs
mov
outs
pop
pop
(bad)
test
dec
(bad)
sti
pop
mov
jge
dec
add
add
test
pop
xchg
add
inc
mov
push
xor
xor
mov
cdq
dec
dec
and
add
sbb
push
push
inc
daa
(bad)
xchg
xor
fs
pop
sti
xchg
jno
loop
and
push
inc
stos
outs
sbb
imul
jo
add
and
sti
jnp
lock
add
test
in
jb
jp
hlt
mov
cmps
adc
push
pusha
push
sub
adc
cmc
cmps
loope
cmp
mov
outs
or
inc
loop
jp
(bad)
push
rcr
sahf
and
gs
xchg
aaa
imul
dec
push
dec
test
push
int3
dec
(bad)
cmc
and
arpl
lods
daa
pusha
dec
test
adc
xor
pop
dec
pop
retf
inc
icebp
dec
dec
mov
push
les
test
cdq
jge
xchg
xor
ffree
mov
repnz
cmp
push
stos
out
and
jl
cdq
iret
mov
inc
push
xchg
not
repnz
or
cmp
or
sti
outs
sti
mov
jno
fist
jge
fwait
outs
and
jbe
mov
push
bound
pop
inc
ins
adc
or
push
and
and
xlat
or
and
add
or
push
mov
xor
test
mov
add
xor
(bad)
pop
push
sbb
call
daa
pusha
test
js
xchg
stos
xor
cmp
adc
xchg
jecxz
add
xchg
push
mov
dec
or
inc
je
outs
mov
push
in
and
pop
mov
or
je
adc
xchg
push
repnz
je
rcr
int
or
repnz
dec
xchg
add
cmp
imul
js
outs
xor
in
xor
xor
pushf
mov
push
adc
inc
gs
push
pop
add
sbb
pop
mov
popf
(bad)
stos
mov
add
sti
jg
xor
inc
outs
inc
ds
pop
jne
mov
js
loopne
push
mov
jmp
cmp
addr16
inc
mov
fmul
mov
mov
xchg
mov
mov
xchg
fist
or
(bad)
pop
mov
jle
pop
mov
push
push
push
inc
shl
adc
jo
push
lods
fdiv
add
fisttp
jnp
cmp
push
xchg
jb
adc
sbb
and
jg
pop
mov
rol
loope
out
xchg
cmp
dec
inc
sub
jmp
ins
out
xchg
mov
mov
js
popa
inc
xor
call
dec
sti
xchg
xor
mov
mov
arpl
call
inc
leave
les
inc
inc
sbb
inc
or
aas
push
loopne
shr
xor
fstp
sbb
popf
icebp
pop
jmp
pop
and
imul
add
fimul
retf
jmp
ja
fstp
pusha
mov
push
or
repz
push
dec
movs
jecxz
adc
icebp
pop
inc
punpckhwd
arpl
mov
scas
imul
jecxz
lea
inc
out
jbe
jecxz
lds
push
xor
sub
popa
sub
aaa
shl
pop
(bad)
aas
loop
cs
jg
or
ins
pop
pop
ret
push
jge
arpl
push
sar
inc
das
xlat
push
sbb
sti
stos
inc
clc
xchg
add
jmp
(bad)
mov
pop
rol
xchg
push
gs
jmp
(bad)
repnz
xor
add
add
ins
repz
loop
pusha
xlat
rol
loopne
jne
(bad)
outs
outs
je
push
inc
retf
or
outs
fild
jae
outs
shr
push
jb
imul
imul
shl
or
(bad)
mov
xor
jae
mov
fmul
inc
fwait
outs
or
int3
jnp
out
enter
(bad)
xchg
dec
retf
xor
push
jp
jbe
mov
push
sub
xchg
pop
or
add
mov
inc
sbb
lsl
pop
mov
mov
aad
sti
loop
xchg
push
or
dec
push
mov
mov
cwde
push
out
jb
int
pop
dec
dec
or
sub
and
into
push
xor
test
dec
sub
sti
imul
outs
or
xchg
das
jnp
movs
jge
sbb
lods
jmp
iret
cwde
sbb
xor
cmp
pop
repz
jmp
mov
pop
sub
push
loop
mov
xchg
inc
and
adc
sbb
lods
mov
pop
mov
mov
mov
loop
pop
pop
dec
xchg
int
fcmovb
mov
mov
jmp
lds
bound
and
ja
popf
cmp
push
dec
pop
ret
mov
xchg
(bad)
data16
inc
sbb
sti
add
shr
jb
popa
xor
cmp
jp
inc
mov
jae
xchg
and
fcomp
aaa
aaa
movs
push
lods
sbb
or
xlat
test
pop
add
push
mov
push
mov
inc
mov
mov
jge
imul
mov
push
xor
add
add
inc
retf
dec
pop
lahf
loope
xor
pop
fwait
xchg
pop
outs
sub
or
cmp
sub
imul
xlat
mov
inc
sub
stos
or
clc
jbe
or
je
jnp
push
mov
pop
xor
adc
inc
jbe
popf
mov
ss
pusha
xchg
mov
loopne
sbb
sbb
xlat
inc
shr
xor
loope
mov
and
ss
push
je
add
(bad)
fbld
pop
mov
add
data16
push
adc
out
push
and
retf
fadd
mov
(bad)
in
sahf
lods
mov
cmovae
lea
mov
adc
test
test
outs
xchg
sub
stos
mov
add
sbb
lahf
mov
(bad)
aaa
(bad)
sbb
mov
cmp
imul
pusha
dec
mov
pop
and
sbb
rol
pop
pop
xor
jno
rol
jbe
stos
sub
sub
stos
dec
pop
inc
ret
data16
stos
mov
add
xor
inc
jle
xor
push
and
add
add
xchg
add
dec
outs
mov
retf
ror
dec
inc
push
sti
mov
ret
aad
sub
addr16
fsubr
outs
retf
pop
inc
mov
xor
dec
add
inc
str
adc
mov
cli
push
fisub
sub
jmp
xor
loope
pop
or
data16
stos
repz
xchg
mov
out
rol
shl
or
pop
jbe
jmp
add
xchg
loopne
test
sbb
imul
stos
xor
iret
ret
sbb
add
(bad)
sub
stos
(bad)
aas
dec
outs
fist
bound
jne
sub
mov
jbe
jge
(bad)
mov
and
adc
scas
loop
cmp
outs
xchg
push
shl
add
imul
fsubr
fwait
rcr
mov
sbb
mov
pop
xor
lods
and
inc
mov
mov
push
jo
or
mov
push
cwde
pop
jg
out
xchg
ret
add
mov
mov
aaa
les
rcl
das
add
jno
adc
imul
ficom
nop
xchg
(bad)
dec
inc
adc
xor
push
pop
mov
mov
adc
scas
push
jecxz
push
nop
sub
jecxz
add
xchg
jecxz
add
and
prefetchw
or
sbb
addr16
and
cmps
dec
aad
push
pop
imul
mov
mov
xor
pop
mov
arpl
sub
and
push
xchg
aaa
mov
mov
ins
les
xchg
cli
dec
add
jp
fisttp
addr16
add
mov
out
ins
(bad)
push
adc
outs
mov
xor
jno
inc
push
ja
cmp
stos
mov
push
jnp
sbb
adc
das
dec
jle
push
inc
mov
sbb
pusha
push
add
fwait
add
inc
mov
or
xor
rcl
xlat
jecxz
sub
push
cmps
cmps
add
push
push
idiv
xor
pop
mov
mov
in
jg
add
mov
pop
mov
push
cwde
sbb
je
aaa
test
stos
mov
push
fsubp
lock
mov
dec
or
mov
sbb
adc
jae
(bad)
xchg
inc
xor
loope
add
out
sbb
movs
sub
mov
cmp
aad
jae
stos
mov
sub
mov
test
add
imul
dec
jmp
adc
jb
mov
aaa
popf
sbb
repz
xor
dec
pop
inc
push
ror
and
mov
or
mov
jg
ins
and
inc
sub
pause
push
retf
(bad)
std
aam
arpl
inc
imul
not
shl
aas
xor
leave
pop
sti
mov
or
test
(bad)
mov
mov
mov
lods
xlat
retf
dec
xchg
cmp
jmp
and
aaa
jle
adc
cmps
jne
inc
adc
pop
outs
les
push
xor
(bad)
(bad)
aas
aas
fwait
inc
adc
aaa
jmp
cmp
jnp
pop
pop
mov
inc
inc
mov
mov
add
mov
cmp
imul
sub
inc
stos
pop
movs
aaa
xor
ficomp
dec
jmp
test
push
aaa
and
test
add
jbe
push
mul
add
xlat
pop
xchg
lods
lods
fwait
cmp
inc
rcl
and
and
inc
xor
test
mov
outs
xlat
jmp
dec
xchg
stos
iret
push
ins
xchg
mov
lea
push
jecxz
(bad)
repnz
out
mov
cmps
adc
dec
(bad)
jae
sbb
test
jle
arpl
jp
retf
cli
and
dec
sub
mov
ret
pop
(bad)
stos
or
(bad)
mov
dec
mov
pusha
sub
pushf
jo
inc
fistp
inc
jno
mov
dec
(bad)
pop
dec
or
and
popa
pushf
ror
loop
ret
pop
sahf
push
js
sub
sub
sbb
cmp
pop
pop
inc
stos
pop
sbb
push
cmp
in
jb
sub
repnz
jb
jb
pop
test
xchg
push
jl
int
out
retf
rol
or
dec
dec
xchg
rol
mov
pop
push
dec
jecxz
imul
adc
add
xor
cmc
les
pop
test
pop
adc
ret
or
mov
ss
repz
add
add
sub
imul
in
inc
jno
scas
imul
xlat
je
push
inc
xchg
test
mov
mov
bound
stos
ror
cmc
push
ins
or
sti
popa
add
xchg
iret
arpl
mov
outs
mov
sub
(bad)
push
push
aas
test
sub
dec
aaa
inc
jo
inc
mov
sti
push
mov
add
adc
imul
jmp
fwait
xchg
sar
cmp
shr
setbe
xor
lock
push
mov
or
jae
repnz
pop
outs
daa
cmp
push
add
repz
sub
push
das
push
(bad)
mov
movs
push
and
scas
jp
pop
ficomp
arpl
andnps
dec
sahf
add
add
arpl
fstp
pop
push
sti
retf
mov
retf
xor
mov
mov
push
stos
cmp
sbb
jp
add
add
aad
and
mov
lahf
cmps
sub
fld
mov
iret
pop
bound
mov
imul
pop
sahf
mov
shl
pushf
pop
mov
mov
jg
or
mov
jle
adc
ror
mov
movq
lods
pop
add
sub
ds
stos
xor
inc
jge
inc
sub
retf
test
push
maxps
les
ja
add
add
(bad)
or
rcr
mov
jl
xchg
sub
push
sub
push
push
stos
mov
js
jo
jnp
ror
ins
xlat
iret
imul
aam
pop
mov
push
int
or
jle
lods
aam
loop
xchg
mov
add
push
inc
xchg
lods
fst
cmps
ret
push
sti
je
inc
sub
psubq
push
pop
or
mov
ret
pop
stos
test
sub
mov
lea
and
sub
dec
sub
loop
ss
jmp
sbb
aas
retf
push
lea
retf
jmp
sub
xchg
dec
data16
fs
cmp
or
pop
jnp
call
fsub
mov
aaa
iret
sbb
dec
(bad)
mov
outs
lods
daa
inc
test
ret
daa
icebp
xor
adc
add
add
add
data16
sub
pop
scas
les
mov
pop
out
cmp
push
fimul
push
sti
scas
jmp
push
add
mov
mov
inc
and
in
xchg
movs
jno
outs
fbld
mov
test
jg
dec
push
test
aaa
xor
xor
inc
daa
inc
jno
ret
arpl
xchg
add
(bad)
push
xor
dec
dec
movs
jnp
xlat
outs
rol
or
add
and
je
pop
mov
jo
add
cmps
xchg
jne
sub
or
adc
mov
adc
imul
popa
ja
mov
dec
jb
add
out
out
mov
shr
ins
push
dec
sbb
iret
mov
iret
pop
cdq
rcl
mov
or
push
rol
mov
bound
lahf
xor
add
push
push
push
shr
imul
push
xchg
xor
movlps
jbe
lea
mov
loopne
push
mov
add
(bad)
or
(bad)
push
test
adc
inc
loop
(bad)
pop
pop
push
add
xor
test
and
(bad)
(bad)
mov
xor
sti
xor
push
dec
(bad)
sub
xchg
dec
mov
xchg
mov
inc
adc
in
pop
push
retf
cmp
pop
mov
push
dec
(bad)
in
idiv
dec
call
jnp
dec
ror
mov
xchg
clc
test
or
sahf
pop
fmul
push
inc
and
pop
loope
and
mov
add
fldenv
add
mov
or
xchg
xchg
pop
xchg
cmp
push
pop
jne
div
mov
or
call
movntps
add
dec
lds
or
mov
mov
mov
sti
(bad)
mov
out
push
lahf
aas
mov
xor
mov
mov
arpl
int3
mov
bound
add
add
add
bound
out
or
mov
xor
outs
jnp
enter
mov
imul
pop
fcom
add
xor
aaa
mov
aas
or
clc
add
ret
add
mov
jecxz
inc
mov
imul
xor
sub
out
xchg
xchg
and
mov
cmp
lahf
push
pusha
add
inc
imul
sahf
mov
sub
push
rcl
xchg
adc
or
aas
add
popa
mov
sub
and
ja
inc
pop
jno
out
or
out
xor
pop
sub
jge
add
jecxz
out
dec
in
(bad)
jle
lea
sub
fist
inc
pop
movs
cmps
inc
or
or
sub
fwait
call
add
add
adc
mov
addr16
shl
dec
sbb
mov
mov
sub
and
je
daa
ret
(bad)
xchg
movs
push
enter
(bad)
cmp
outs
push
stos
pusha
jno
call
push
pop
cs
push
or
das
iret
test
aad
mov
pop
inc
or
push
push
outs
mov
(bad)
cmp
dec
fnsave
push
loop
pop
jmp
sti
shl
add
sti
sti
push
popa
push
mov
xor
mov
stos
dec
jnp
dec
bnd
inc
mov
adc
pop
les
pop
xor
push
test
or
call
data16
add
out
into
push
lock
es
(bad)
cmps
and
xor
shr
dec
pop
xor
inc
push
jbe
add
rcl
daa
dec
adc
add
push
push
push
shl
xchg
xor
or
pop
mov
shl
dec
lock
inc
dec
jmp
mov
stos
cmp
sbb
inc
out
adc
ret
adc
sbb
into
stos
adc
mov
adc
add
add
bound
add
jmp
test
add
nop
inc
mov
pop
sbb
mov
cmp
or
push
jecxz
bound
(bad)
mov
pop
push
dec
daa
arpl
aas
fild
or
fild
add
add
sub
add
sub
and
and
push
sbb
stos
mov
mov
(bad)
fiadd
movs
outs
push
jb
mov
sti
jno
jge
sub
mov
xchg
xor
push
dec
mov
fcmovne
bound
(bad)
sbb
sub
fwait
add
ret
sbb
xchg
add
arpl
je
xchg
mov
xor
bound
xchg
pop
lods
adc
cmp
mov
out
or
and
div
cmp
mov
ret
dec
lea
arpl
mov
xchg
xor
xchg
and
outs
push
loop
out
xchg
test
shr
outs
movs
shl
inc
push
loope
or
shl
test
(bad)
fiadd
mov
mov
jbe
push
daa
inc
or
ror
and
ja
sbb
jae
add
shl
dec
mov
es
retf
push
rcr
stos
idiv
mov
and
rol
loopne
aaa
push
inc
(bad)
rcr
push
push
adc
adc
push
add
outs
jg
inc
add
jo
mov
pop
ror
ja
bound
pop
jecxz
ror
js
push
bound
jbe
mov
or
fstp
add
fs
ret
push
jmp
inc
cmp
test
add
push
je
push
lahf
push
add
mov
xor
arpl
xchg
jmp
pop
jb
jo
jmp
sar
sbb
aam
push
imul
out
shr
bound
shl
push
ret
sbb
mov
and
pusha
adc
rol
jecxz
dec
xchg
inc
lahf
ds
add
xchg
pop
fimul
and
jmp
add
add
retf
je
mov
sbb
and
test
sahf
mov
add
mov
mov
mul
dec
adc
xchg
dec
cli
push
jnp
push
or
jnp
mov
push
mov
repz
daa
div
xchg
test
sar
xor
jnp
js
and
fisub
push
sysret
stos
fdiv
movs
mov
ret
dec
mov
pop
xchg
test
xchg
outs
add
ror
xor
(bad)
rol
das
push
js
inc
adc
xchg
and
gs
push
jnp
pop
ret
xor
or
sub
sub
stos
push
mov
repnz
(bad)
xor
loop
pop
pop
mov
inc
sbb
out
xchg
push
pusha
lods
out
ret
xlat
sub
and
ret
sar
sub
test
mov
lahf
pop
icebp
test
sbb
xchg
jecxz
push
dec
cmp
(bad)
rcl
jecxz
dec
jae
sbb
jp
or
shl
pop
dec
mov
sub
inc
bound
or
adc
xor
push
movs
inc
movs
icebp
xor
les
push
sub
(bad)
das
dec
sub
cmps
push
adc
xlat
push
test
arpl
(bad)
stos
fsubr
dec
mov
lods
dec
aas
dec
xchg
mov
pop
add
ret
in
mov
adc
mov
jo
pop
xor
outs
loopne
daa
jno
adc
cmp
fsub
stos
adc
test
adc
push
xor
mov
inc
xchg
mov
ja
pop
inc
pop
xor
test
mov
dec
cmp
xor
inc
mov
jno
mov
test
or
sub
sbb
sub
or
and
stos
xchg
shr
sbb
ret
mov
and
nop
fsub
adc
dec
ins
or
mov
daa
pusha
std
sub
inc
lods
or
xchg
and
scas
add
js
add
jmp
shl
mov
add
xchg
or
ins
mov
mov
jecxz
mov
add
aas
mov
push
lea
add
scas
sbb
and
mov
xchg
xchg
pop
loop
shl
aad
pop
dec
dec
stos
or
dec
sbb
loopne
mov
test
add
cmp
fimul
xor
push
add
or
and
mov
pop
(bad)
adc
(bad)
and
ret
and
out
sub
test
test
sbb
jnp
and
sub
pusha
and
add
shl
bound
je
xchg
pop
sbb
inc
xor
add
mov
pusha
pusha
push
movs
pop
push
sub
or
add
and
dec
mov
psubq
inc
lahf
scas
fisub
ror
adc
fwait
inc
loop
out
jo
cdq
gs
gs
bound
sahf
cmc
outs
xor
and
stos
hlt
push
je
mov
arpl
adc
adc
aas
lahf
inc
adc
call
out
push
adc
or
lahf
arpl
aam
cmp
mov
dec
sbb
scas
mov
test
mov
sbb
adc
sbb
scas
iret
push
xor
shl
pop
dec
mov
fnstcw
ret
xor
iret
call
or
xor
mov
pop
mov
inc
xlat
or
lea
add
sti
sbb
not
mov
cli
mov
pop
outs
pop
inc
or
sbb
or
mov
xchg
add
jae
jmp
out
idiv
add
sti
aaa
out
cwde
mov
inc
jp
or
ret
gs
aaa
cmps
push
(bad)
push
adc
(bad)
aas
aad
mov
arpl
push
fist
add
mov
nop
mov
imul
aaa
xchg
cli
push
adc
add
test
fist
cs
fwait
or
bound
(bad)
imul
pusha
aam
mov
pop
add
dec
push
fsubr
add
jmp
mov
ret
inc
dec
jge
mov
arpl
and
jmp
mov
arpl
iret
jnp
or
jo
pop
jo
xchg
or
jg
xor
pop
loop
pop
sti
push
sub
mov
les
dec
cmp
sub
cmp
dec
pop
lock
nop
sub
daa
hlt
pop
out
add
retf
dec
push
fs
push
mov
sti
cmp
mov
sar
or
and
xor
and
retf
es
adc
mov
mov
data16
sub
lds
das
push
pop
add
push
inc
mov
xor
pusha
push
jnp
inc
loopne
and
pop
push
stos
cmp
ret
push
pusha
adc
add
mov
xchg
add
(bad)
cmp
mov
cmp
xor
sbb
xor
inc
pop
call
inc
add
inc
pop
lds
add
cmp
adc
daa
mov
dec
mov
jmp
ins
jecxz
repz
and
pop
addr16
add
arpl
or
cmp
pop
pop
and
fist
add
sub
lods
adc
pop
sbb
sub
xchg
add
psubusb
xchg
pop
cwde
add
popa
jo
jno
(bad)
cs
mov
and
xlat
inc
stos
data16
jmp
adc
out
inc
gs
cs
push
xchg
xchg
outs
addr16
or
loopne
mov
push
sti
inc
jo
jmp
sti
pop
retf
push
rcr
xor
cmp
pop
pop
add
mov
test
pusha
adc
ret
mov
push
fwait
into
add
push
adc
jbe
retf
neg
add
or
loopne
pop
mov
jo
or
sbb
ss
retf
rcl
bound
or
mov
aaa
mov
call
sbb
sbb
sbb
imul
jae
jnp
push
sbb
sub
mov
iret
bound
(bad)
test
dec
pop
pop
mov
inc
sbb
inc
and
cmp
rcl
pop
addr16
outs
addr16
push
movs
aaa
imul
mov
ss
ret
inc
dec
xchg
shr
mov
cmp
adc
mov
mov
push
mov
fisttp
or
sub
jg
clc
push
jecxz
psrad
dec
popa
dec
stos
outs
jl
ja
pop
fs
push
cmp
or
cmp
sub
outs
cmps
lock
bound
jb
push
mov
outs
add
xchg
xchg
sub
add
pop
outs
sbb
out
out
add
int
xor
mov
ds
loopne
sbb
fcomi
jmp
arpl
cs
ret
adc
das
sbb
push
stos
pop
mov
outs
jge
into
pop
cwde
lahf
xchg
outs
cdq
push
adc
push
dec
mov
mov
sub
aad
pop
push
sbb
pop
je
dec
cli
daa
(bad)
adc
lds
or
cmp
retf
xchg
(bad)
dec
add
jecxz
(bad)
or
mov
sub
sub
mov
push
cs
lods
mov
jno
xchg
push
imul
jb
aas
xor
cmp
cmp
and
dec
mov
inc
jbe
pusha
cmp
bound
aas
fdivr
sti
lahf
or
pusha
mov
jg
pop
xchg
cmp
mov
mul
xchg
fsub
pop
repz
aaa
loopne
jmp
repz
and
dec
addr16
dec
mov
daa
pusha
jmp
pop
and
cmp
mov
mov
lock
retf
and
sahf
aaa
int
sub
jnp
outs
div
or
(bad)
shufps
xchg
jg
xor
sbb
sbb
outs
bound
sbb
mov
inc
fucomi
mov
(bad)
sti
shr
popa
test
sub
xor
gs
scas
dec
pop
pop
(bad)
adc
mov
stos
push
sub
sub
xor
out
pop
or
sti
rcl
jl
and
inc
push
(bad)
adc
retf
sbb
inc
sbb
dec
and
(bad)
or
and
test
mov
and
ins
repz
xchg
enter
rcr
push
lahf
xor
stos
das
icebp
add
jb
push
outs
out
imul
mov
jmp
lods
jnp
pop
jae
push
push
pop
mov
jne
mov
clc
jbe
xor
addr16
jecxz
mov
inc
loopne
add
jp
push
loopne
jmp
pop
(bad)
pop
dec
mov
(bad)
sub
add
xor
sbb
jne
or
or
xor
rol
inc
das
xchg
push
inc
mov
or
cmp
stos
leave
lds
imul
or
add
push
inc
sbb
xchg
les
nop
rol
inc
sub
mov
push
inc
stos
inc
adc
test
add
movs
iret
mov
inc
test
cmps
pop
repz
(bad)
(bad)
push
fwait
jnp
add
push
add
mov
mov
adc
dec
and
sub
mov
add
sbb
or
stos
xor
and
or
xor
test
xchg
mov
add
cmp
xor
inc
mov
or
xor
xor
push
xor
add
leave
add
xor
push
xor
xor
inc
xor
inc
push
test
sbb
xor
les
dec
inc
xchg
mov
xchg
dec
and
adc
dec
and
adc
dec
sub
adc
lahf
loopne
xchg
and
adc
inc
push
inc
sub
aam
mov
mov
adc
inc
adc
cmp
call
int3
sbb
pop
in
fcmovnb
inc
shl
sar
pop
stc
xlat
les
cmp
shl
rol
iret
add
jg
push
adc
ins
lea
xlat
lds
xchg
in
(bad)
shl
les
sar
out
mov
enter
push
inc
jg
outs
fwait
sub
mov
xlat
(bad)
mov
inc
and
sar
ror
(bad)
cmp
xchg
repz
cmc
cmovg
das
(bad)
(bad)
(bad)
cld
clc
repz
sar
int
or
aad
add
xlat
scas
add
stos
mov
(bad)
inc
dec
fwait
or
rol
xor
adc
push
repnz
cmps
jb
mov
and
(bad)
cmp
stos
push
call
lahf
jbe
sub
mov
jno
rcr
(bad)
(bad)
fdivr
dec
(bad)
call
iret
jns
fnstsw
mov
call
mov
call
cmps
outs
sahf
ret
test
fnstsw
lods
(bad)
clc
lock
inc
ss
(bad)
(bad)
sti
cmc
out
repz
jmp
rol
ins
dec
shl
(bad)
fistp
xchg
push
xlat
xor
clc
fcomi
(bad)
loopne
dec
call
movs
sub
sbb
lahf
and
rol
mov
push
push
add
or
push
mov
or
(bad)
ffreep
pop
push
mov
(bad)
std
sti
push
mov
and
dec
dec
pushf
enter
nop
adc
call
aas
sub
hlt
or
xchg
push
mov
ss
scas
pop
(bad)
out
fidiv
enter
xchg
dec
leave
add
idiv
ins
xor
mov
add
mov
push
ret
pop
mov
into
call
(bad)
(bad)
inc
inc
(bad)
jg
mov
inc
(bad)
jmp
fstp
lahf
xchg
mov
push
in
lds
call
mov
out
das
push
data16
sti
test
(bad)
cld
jmp
mov
pop
int3
push
loope
call
mov
imul
aad
(bad)
xchg
fsub
fcmovu
mov
push
in
jb
jp
pop
jmp
mov
ud0
jmp
out
inc
jbe
(bad)
fidivr
sub
dec
nop
dec
sbb
aad
mov
mov
and
inc
pop
sub
mov
xor
(bad)
jg
fist
mov
int3
in
and
mov
and
jns
call
enter
jg
jmp
push
repz
pop
dec
inc
fcmovu
lock
jbe
add
aaa
addr16
jbe
(bad)
(bad)
neg
mov
stc
call
add
retf
inc
xchg
mov
or
leave
push
shl
test
push
jg
rol
jl
mov
sahf
fwait
and
sahf
fldcw
mov
call
arpl
loop
dec
sub
push
and
xor
cmp
into
xor
out
xlat
lods
pop
push
loopne
sahf
std
call
clc
dec
mov
jle
pusha
jae
retf
xchg
sub
(bad)
outs
ss
shl
cmp
outs
(bad)
ins
jp
outs
pushf
push
push
push
jle
movs
mov
sahf
cmp
fmul
sahf
cmp
fwait
cmps
sti
sub
inc
add
jmp
imul
cmp
mov
push
fidivr
jno
cmps
(bad)
push
inc
out
push
in
fnstenv
mov
adc
dec
pop
pop
jne
fiadd
inc
shl
jmp
mov
push
cld
fwait
mov
cmc
sti
test
cld
inc
jae
mov
dec
mov
push
inc
popf
fsubrp
in
cmc
adc
aas
hlt
hlt
stc
or
cmp
jmp
and
and
fucomi
loopne
iret
in
xor
mov
push
mov
pop
pop
mov
int
inc
(bad)
mov
inc
inc
mov
(bad)
xor
cmp
pop
addr16
xor
aaa
mov
aaa
shl
jle
jg
cli
fidivr
jmp
dec
ss
mov
and
shl
sbb
inc
jg
movs
or
(bad)
and
fnstenv
rol
faddp
mov
outs
test
xor
fistp
stc
aam
or
js
aad
dec
(bad)
lods
fcom
jns
ret
imul
clc
xchg
(bad)
fdivrp
pop
(bad)
int3
es
ficomp
fucom
rcl
push
mov
sub
test
xchg
ja
mul
lds
jns
dec
ss
in
push
inc
test
jle
int
ret
test
test
jmp
mov
mov
xchg
jg
mov
xchg
mul
pop
jle
add
cs
fistp
jmp
leave
jne
(bad)
loopne
or
jle
inc
jle
sbb
jge
pop
mov
call
mov
(bad)
mov
popf
push
stc
(bad)
retf
mov
jmp
(bad)
aas
cmps
pop
dec
(bad)
(bad)
(bad)
jg
mov
add
call
mov
or
mov
mov
mov
push
mov
xchg
repnz
sbb
fwait
add
xchg
lea
dec
out
xchg
dec
dec
out
or
push
jae
cwde
cld
pop
mov
out
(bad)
jg
mov
gs
adc
pop
pop
mov
jle
xor
je
int3
cwde
cs
push
cld
add
rol
scas
push
fcomp
inc
push
inc
ss
psubusb
cmp
push
sahf
inc
data16
jg
jge
and
push
hlt
dec
and
push
and
jle
ror
clc
mov
hlt
jmp
(bad)
ds
cdq
nop
lods
ss
lahf
popa
lods
jmp
rol
hlt
repz
ds
mov
mov
jae
int
adc
outs
ret
sub
inc
imul
jle
push
sub
loop
push
dec
inc
push
es
sub
(bad)
jle
outs
popf
cmps
push
out
mov
fidiv
mov
and
popf
fnstsw
stos
es
loope
scas
xchg
jle
(bad)
clc
sub
push
shl
in
test
and
sar
shr
fdivr
pusha
sub
mov
pop
mov
jmp
xchg
push
scas
sub
int3
js
repz
(bad)
jg
out
ficomp
call
mov
pop
stos
ret
xchg
jmp
sub
hlt
(bad)
inc
bnd
fcmove
inc
daa
xchg
sub
arpl
sub
(bad)
dec
outs
call
jbe
push
mov
out
jle
movs
dec
add
dec
dec
scas
out
cmp
test
call
jl
stos
pop
daa
aaa
pop
add
clc
(bad)
mov
fadd
or
lock
fsubr
sti
aas
enter
mov
fadd
mov
xlat
jg
cmp
xlat
scas
jle
xor
(bad)
pop
mov
fdivr
xlat
lods
jns
mov
(bad)
fnstenv
ror
mov
(bad)
mov
imul
imul
lock
ds
fadd
and
pop
sahf
and
rol
jge
iret
popf
cs
lds
inc
xlat
fwait
test
in
jae
out
shl
ins
jg
jle
out
mov
cmp
cmps
test
inc
outs
inc
cs
idiv
pop
mov
aas
jle
jg
bnd
scas
and
jg
xchg
inc
jmp
xchg
mov
cwde
push
lock
int
jne
test
not
jb
mov
pop
jmp
jl
cmps
jne
mov
(bad)
call
inc
jmp
cwde
cs
call
aas
rcr
(bad)
dec
and
pop
inc
imul
ja
push
push
mov
call
jmp
sub
cmps
call
sahf
xchg
push
pusha
cmps
aas
les
mov
ss
pop
mov
push
ret
test
in
(bad)
lods
mov
pop
fsub
add
push
pop
mov
scas
hlt
les
jle
popa
imul
sbb
daa
in
jg
movs
nop
cmp
adc
jle
nop
xor
bound
pop
bound
jmp
mov
sub
mov
(bad)
stc
repnz
inc
sar
sbb
(bad)
jmp
xchg
inc
push
jecxz
(bad)
fwait
sub
aam
push
in
inc
dec
and
mov
dec
sbb
add
out
gs
int
adc
ret
cdq
aas
jle
xchg
in
or
adc
push
cmp
clc
repnz
shl
jg
add
(bad)
in
fstp
int3
(bad)
call
cwde
cmp
jns
(bad)
xchg
imul
outs
jmp
push
dec
movs
imul
cdq
aas
adc
sbb
stos
aam
pusha
(bad)
cli
cli
std
push
pop
inc
out
(bad)
call
lds
xor
cmp
mov
fild
test
test
dec
out
xchg
push
dec
mov
inc
push
clc
rcr
scas
ins
pop
push
mov
xchg
inc
cli
mov
cmps
popf
fdivp
adc
cld
jg
in
and
inc
movs
out
es
lods
and
pushf
pop
daa
aaa
inc
inc
daa
push
lods
scas
push
jbe
sahf
and
rcl
dec
push
mov
jle
jbe
test
in
(bad)
cld
sub
jle
mov
mov
and
dec
push
mov
stos
aam
jg
mov
es
cmps
bound
cmp
lds
js
data16
call
lahf
in
dec
add
dec
dec
push
mov
(bad)
fidiv
push
xor
(bad)
in
imul
rcr
sbb
xchg
outs
sub
les
jg
repnz
push
adc
bound
jle
lods
inc
push
cmps
outs
rol
pop
stos
jbe
cs
push
icebp
out
jmp
pop
std
add
jmp
mov
ss
ds
aam
cmp
call
inc
call
dec
outs
out
test
lock
retf
cmps
mov
scas
jle
mov
rol
retf
mov
jbe
xchg
xchg
xchg
sti
call
cmp
iret
ja
push
lods
int3
sub
adc
mov
rcl
lea
xlat
lods
pop
out
(bad)
xor
movs
cmps
cmps
inc
mov
jle
sbb
pop
jle
jl
in
cmp
jle
aad
cmps
dec
cmp
fsubr
(bad)
repz
ds
push
jnp
fdiv
in
push
adc
ds
les
push
pop
fiadd
mov
cmps
retf
xchg
add
xlat
jg
jg
das
in
add
mov
mov
inc
xchg
push
cmps
and
scas
cmps
sar
fnstsw
stos
adc
(bad)
call
icebp
mov
adc
cs
loopne
lock
repnz
lods
cs
test
call
outs
mov
pop
(bad)
cdq
inc
inc
stos
call
call
mov
popa
or
cmp
not
aaa
(bad)
pop
or
dec
pushf
imul
xchg
push
inc
push
jge
fsubrp
cmc
out
iret
sub
iret
push
shl
pop
push
push
test
(bad)
jge
out
aam
mov
ja
lea
cs
daa
pop
push
daa
jbe
iret
sahf
and
mov
xchg
sub
out
aas
push
jmp
shl
mul
ror
je
loop
sub
pop
xlat
cmps
aad
js
int3
xchg
or
pop
jae
scas
xlat
scas
add
jle
scas
popf
sub
mov
fidiv
div
jecxz
aaa
fadd
and
mov
lods
push
jmp
fisub
in
jle
jle
mov
fwait
push
mov
fidivr
sub
lahf
cmp
push
rol
add
or
mov
sbb
mov
and
adc
jg
test
addr16
jmp
call
xor
fmul
add
jae
imul
iret
ss
and
test
inc
add
sub
je
push
arpl
xchg
enter
mov
call
jb
(bad)
jmp
jmp
mov
test
sub
jmp
push
loope
cmp
jp
mov
jmp
push
stc
jg
and
daa
cdq
cdq
retf
ja
mov
mov
shr
xor
(bad)
fld
and
(bad)
inc
addr16
inc
jp
or
cmps
cmps
shl
repnz
xor
jecxz
dec
mov
(bad)
js
xor
xchg
add
mov
cmps
pop
xchg
loopne
sub
imul
or
pop
push
cmp
sbb
add
enter
jge
std
jbe
push
shl
and
push
fdivr
cmp
jle
pop
out
stos
movs
push
scas
aaa
sti
lock
jmp
outs
jle
(bad)
jle
cld
test
add
add
dec
push
and
imul
mov
jb
pushf
push
pop
pop
jnp
call
jg
xchg
imul
(bad)
sti
(bad)
adc
mov
sbb
pop
add
mov
in
mov
jg
jge
(bad)
scas
add
fcomp
(bad)
mov
mov
mov
ins
pop
push
lods
fs
es
mov
aaa
push
rol
iret
fdiv
(bad)
enter
cmp
jmp
lahf
es
mov
jg
push
add
ror
push
lahf
and
push
mov
popf
push
push
cld
mov
int
pop
pop
sar
(bad)
(bad)
mov
call
bound
jno
cli
add
push
mov
pop
cmp
xor
scas
fs
nop
scas
cmps
sbb
mov
and
shr
push
pop
jo
cs
(bad)
icebp
loop
mov
xchg
inc
out
test
loope
mov
test
into
cs
ret
adc
fsub
(bad)
mov
scas
in
adc
mov
mov
test
push
into
fwait
inc
out
sbb
cmc
ss
repz
es
nop
adc
fwait
(bad)
jle
add
sub
mov
das
or
push
pop
(bad)
jmp
jo
inc
aad
xor
push
into
(bad)
jg
rol
cs
push
loope
mov
or
pusha
inc
push
(bad)
jg
lods
in
or
jmp
mov
jnp
test
xlat
xchg
ss
push
pop
inc
sahf
cmp
jg
ja
cli
jmp
mov
lds
mov
and
mov
ss
xchg
inc
jg
inc
cld
(bad)
jg
fmul
inc
xor
mov
out
fsubr
loop
idiv
xchg
pushf
bound
jmp
mov
out
clc
call
pop
push
push
mov
psrlw
cld
call
push
mov
push
(bad)
mov
test
mov
inc
ja
sti
clc
or
mov
jle
fcom
fld
in
(bad)
out
sar
inc
cmp
inc
les
dec
push
out
into
cmp
adc
push
es
fidivr
call
inc
xlat
call
stos
ins
jle
dec
test
into
(bad)
iret
pushf
pusha
mov
test
stos
pop
push
add
cs
mov
or
sahf
mov
inc
enter
fisttp
pop
inc
fist
push
jnp
(bad)
jg
dec
aam
push
(bad)
jg
jb
std
pop
mov
xchg
sub
ret
bswap
mov
add
push
jg
mov
dec
outs
sub
hlt
call
and
sub
iret
jmp
xchg
push
lods
data16
sysret
pop
icebp
jg
(bad)
loopne
cmp
mov
je
xor
aas
dec
(bad)
div
inc
xchg
xchg
aam
cmp
inc
loope
xor
mov
and
pop
in
mov
inc
inc
mov
inc
inc
mov
mov
jb
push
call
push
scas
aad
or
pop
push
clc
sbb
popa
xchg
ret
sti
fdiv
pop
(bad)
mov
in
shr
test
(bad)
imul
sub
aam
jb
pop
lock
pusha
sar
jg
sti
rcr
xchg
fiadd
(bad)
jge
sbb
jbe
xor
push
ret
outs
call
dec
jle
sti
mov
push
jle
cmps
pop
or
push
cmps
and
(bad)
pop
add
xchg
push
inc
adc
mov
adc
jg
sbb
pop
(bad)
jge
fisubr
pop
dec
pop
sti
xchg
pop
popw
inc
ret
daa
lods
js
push
sti
fnstenv
inc
inc
je
addr16
sub
dec
push
out
xor
sbb
jbe
inc
cmps
stc
cld
cli
push
xchg
ret
cmps
ins
xor
pushf
ins
mov
cli
pextrw
jg
xchg
(bad)
mov
rcl
cdq
push
repnz
out
adc
(bad)
xchg
loop
xor
je
enter
lds
jmp
ins
pop
icebp
(bad)
mov
jo
es
mov
xor
jns
rol
xchg
jmp
jle
test
call
jle
xchg
inc
rol
test
out
jmp
cmp
(bad)
test
xchg
mov
fistp
sub
(bad)
out
jns
sub
jle
jg
jne
push
cmps
and
pop
sar
dec
lods
xchg
and
fisub
out
mov
sahf
push
inc
sub
enter
ret
(bad)
pop
jg
(bad)
(bad)
(bad)
push
add
call
fsubrp
add
out
test
mov
idiv
(bad)
push
add
fsub
add
enter
ror
cmp
mov
mov
add
test
div
lods
add
cwde
movs
jle
fwait
add
mov
pop
ins
(bad)
(bad)
jge
add
ja
add
mov
mov
(bad)
push
mov
jbe
mov
scas
cmp
add
cmp
mov
es
clc
pop
add
xchg
arpl
data16
mov
add
jg
std
std
mov
add
scas
push
scas
push
mov
mov
add
lods
imul
shl
adc
mov
arpl
add
mov
cmp
nop
(bad)
rdmsr
push
cmp
jnp
psadbw
add
jbe
push
pusha
cmp
jns
add
lea
mov
inc
add
pop
lock
pop
add
stos
jbe
push
add
popa
push
add
and
(bad)
lods
jle
enter
retf
scas
xchg
scas
jp
into
lods
je
cmps
cmps
std
fist
push
leave
mov
add
xchg
dec
add
or
cmp
cmps
jg
add
mov
add
jge
add
add
lock
imul
pop
pop
retf
(bad)
out
push
loope
jg
scas
mov
add
repnz
hlt
(bad)
lods
lock
retf
fld
cmp
mov
push
scas
dec
outs
cmp
add
call
inc
xor
mov
cld
add
fcmovnu
mov
mov
retf
(bad)
scas
sahf
stos
mov
push
(bad)
push
pop
enter
loop
outs
add
mov
add
mov
push
fcom
add
mov
mov
push
mov
lahf
int
test
fisubr
xchg
adc
add
std
addr16
add
jns
push
test
add
rep
pop
xor
xchg
ja
push
loope
push
add
seta
pushf
sub
fdivr
ins
sbb
mov
push
mov
mov
mov
(bad)
fisttp
jae
add
mov
add
mov
(bad)
(bad)
mov
mov
fstp
into
fdivr
jnp
iret
lods
inc
(bad)
mov
inc
mov
nop
dec
add
xor
xchg
jo
mov
add
sti
jle
add
pop
sar
inc
adc
(bad)
jmp
pop
rol
dec
into
fld
mov
repz
icebp
test
push
pop
test
jmp
loopne
add
sahf
mov
add
sar
jg
scas
cmp
test
add
cdq
add
unpckhps
xor
jnp
add
out
das
jbe
add
sahf
inc
int
cmp
leave
test
adc
retf
push
enter
xor
sub
inc
lahf
cmps
jns
add
lahf
push
cmps
or
inc
fbstp
fimul
pop
add
(bad)
pop
pop
push
xchg
adc
ret
add
inc
sub
js
adc
test
jp
ret
pop
xchg
cs
push
fld
push
inc
adc
jp
add
lods
std
sub
pop
pop
loope
rol
pop
ds
or
popf
jne
add
movs
sahf
(bad)
mov
(bad)
fiadd
(bad)
popf
add
enter
xchg
jecxz
xchg
es
jle
mov
outs
(bad)
movs
push
add
jl
(bad)
test
inc
add
into
pop
push
add
add
pushf
jae
outs
(bad)
aas
push
add
idiv
add
xchg
add
(bad)
(bad)
(bad)
dec
rol
dec
int3
fiadd
mov
lock
add
jecxz
add
fdivrp
(bad)
call
fld
aas
mov
add
stos
mov
cmp
cmps
add
add
ret
xchg
ss
js
out
arpl
out
in
add
in
xor
or
push
rol
jle
add
cdq
add
adc
pop
add
xchg
inc
(bad)
push
clc
mov
popa
add
pop
or
jmp
cld
or
test
jp
inc
and
loop
ss
cmp
fwait
add
dec
dec
add
cld
jmp
add
push
add
jnp
add
test
add
scas
jbe
lods
lock
and
stos
cmp
pop
cld
pop
push
int3
stos
add
shl
out
lods
sbb
mov
pop
lods
add
rol
jmp
add
mov
mov
int3
lods
mov
mov
add
and
mov
test
test
xchg
add
inc
adc
out
(bad)
(bad)
(bad)
dec
int3
add
aam
xchg
fucom
add
out
repnz
loopne
add
ficomp
add
mov
xchg
pushf
xchg
jo
push
xchg
mov
add
inc
pop
lahf
gs
pop
lea
ja
(bad)
cmp
leave
add
js
ja
push
test
scas
lahf
mov
aaa
(bad)
test
cmps
pop
add
imul
in
adc
not
inc
addr16
pusha
sar
xchg
sahf
add
imul
cmp
add
inc
(bad)
sti
(bad)
fild
sldt
pop
or
sbb
lahf
pop
add
pop
jns
ret
lahf
les
cmps
mov
xor
xchg
push
add
aad
add
fnstcw
or
push
in
fdiv
out
cmps
add
(bad)
push
fsubr
nop
add
mov
sahf
lods
div
loopne
xchg
sub
test
sub
xchg
es
mov
pop
pop
xchg
sahf
mov
ror
mov
sub
fidiv
xchg
mov
(bad)
(bad)
mov
fucom
add
into
add
lods
aaa
xor
daa
pusha
adc
fsub
pop
mov
mov
fdivr
sti
add
cmps
mov
lods
mov
clc
(bad)
cmp
mov
test
xlat
add
fwait
add
inc
push
cli
push
cmps
pop
dec
push
push
ja
into
lods
lock
(bad)
rol
jg
adc
inc
imul
imul
mov
outs
scas
xchg
clc
stos
and
pop
add
popf
outs
sbb
out
loopne
sub
push
clc
cmc
jle
ins
and
fwait
outs
push
into
aaa
add
mov
in
jmp
shl
add
fmul
jmp
xchg
out
mov
in
mov
ret
sahf
xchg
add
movs
imul
sub
ins
mov
push
loope
add
add
sub
and
stc
stos
lahf
xor
cmp
mov
mov
(bad)
jg
push
inc
scas
mov
add
lds
add
add
mov
dec
push
adc
scas
mov
jo
mov
xchg
mov
lahf
xchg
lock
pushf
aam
add
into
fisubr
cmc
add
call
xchg
mov
ds
add
stos
fidivr
add
mov
aas
push
jne
add
mov
movs
pop
add
aas
ret
mov
adc
jle
push
imul
imul
idiv
inc
call
add
in
jecxz
in
cld
add
not
ror
out
jb
scas
mov
dec
lock
xchg
push
cmp
(bad)
sti
(bad)
mov
xchg
dec
add
cmps
outs
shr
push
push
add
lea
xchg
add
push
add
fisttp
lahf
call
mov
out
xchg
retf
fsubp
pop
mov
test
ficomp
clc
sub
add
cdq
movs
out
push
clc
mov
xchg
fbstp
or
add
fild
xchg
mov
in
add
jg
(bad)
fucomi
cli
data16
fiadd
sbb
add
in
mov
fcomp
mov
lods
mov
pusha
add
jbe
inc
es
repnz
test
lds
(bad)
fbld
adc
xchg
xchg
add
leave
stos
add
shr
or
(bad)
add
push
and
mov
jmp
jne
leave
fdivr
add
mov
add
stos
jo
cmps
mov
mov
sbb
stos
jle
add
add
push
mov
add
add
test
pop
push
mov
push
add
into
or
mov
lahf
jl
sub
fild
inc
shl
add
scas
mov
push
jp
sub
aaa
and
jns
js
nop
cmp
inc
ja
(bad)
push
xchg
pushf
mov
dec
in
out
cld
add
(bad)
(bad)
push
jmp
sbb
add
in
ds
inc
push
not
adc
movs
lods
add
scas
add
xchg
lahf
movs
mov
or
jns
add
std
outs
pop
(bad)
out
add
in
add
mov
cmp
out
outs
(bad)
sub
dec
mov
jg
xlat
ret
out
shl
mov
fs
call
ror
push
xchg
ins
and
cmp
inc
xchg
dec
or
repnz
adc
pushf
add
(bad)
out
xor
mov
in
hlt
add
cdq
mov
xor
loop
pop
out
xor
ss
call
adc
cmps
mov
enter
rcr
add
loop
cld
outs
inc
jl
call
push
jmp
add
(bad)
repnz
add
(bad)
mov
add
inc
push
jmp
add
in
cmp
loope
cs
inc
std
(bad)
jg
push
fild
test
cli
add
mov
jbe
mov
inc
jb
sub
pop
sub
mov
adc
push
add
test
mov
lock
idiv
mov
fsubr
ror
xchg
cmp
lock
push
dec
push
pop
loopne
stos
call
jl
es
test
xlat
mov
add
test
pusha
fistp
aaa
scas
inc
mov
sbb
(bad)
popa
or
pop
cmps
sar
inc
les
out
add
push
jp
dec
inc
adc
mov
shl
stos
fmul
pop
dec
push
xchg
arpl
lahf
lods
mov
inc
inc
nop
jl
popf
add
ins
por
jmp
js
fistp
loop
lahf
xor
xor
lahf
aaa
mov
aam
mov
out
jbe
scas
cmp
mov
(bad)
(bad)
jle
xor
enter
xor
enter
ret
ds
std
add
idiv
call
inc
jge
add
jae
add
imul
add
pop
ffreep
pop
jg
mov
push
icebp
hlt
inc
fwait
enter
mov
jle
mov
sub
pop
(bad)
jo
lahf
loop
shl
enter
scas
lods
mov
xchg
jle
add
movs
outs
aas
dec
xchg
ds
fisubr
pop
xchg
scas
jg
mov
push
push
(bad)
push
in
out
ret
test
inc
test
add
mov
push
sub
mov
add
(bad)
out
mov
push
mov
cmp
stos
xor
jg
enter
outs
call
(bad)
adc
ja
dec
popa
adc
pop
pop
add
jl
scas
jo
test
scas
add
add
xchg
dec
sahf
movs
and
or
out
fucomp
add
ds
aad
push
fmul
inc
pusha
fs
out
dec
imul
inc
cmp
fisttp
xchg
aaa
push
cmp
mov
add
pop
xchg
out
inc
std
sub
aas
int3
fsub
call
ss
scas
jne
add
jno
and
(bad)
fistp
data16
mov
out
add
xchg
jge
pop
sbb
(bad)
jbe
mov
outs
retf
dec
rcr
jl
in
push
add
xchg
push
jle
pop
add
or
(bad)
out
add
or
jbe
push
pop
xchg
jmp
hlt
mov
add
add
into
mov
mov
loope
push
xchg
ins
sbb
push
or
enter
sbb
movs
js
test
mov
jmp
add
cwde
outs
and
dec
pop
inc
push
test
push
add
dec
push
lods
xchg
add
scas
jg
push
clc
lods
cmps
mov
push
add
repnz
adc
xchg
sahf
add
in
adc
(bad)
add
lock
pop
fucomip
add
jmp
mov
div
cs
test
inc
aad
push
mov
inc
adc
cmp
add
cmps
push
xchg
push
mov
add
push
scas
dec
cmp
retf
jns
(bad)
jle
fisttp
ss
retf
pop
mov
add
outs
mov
jle
xchg
jne
push
ja
(bad)
dec
rcl
call
lock
xchg
mov
gs
cmps
into
push
inc
pop
test
(bad)
aas
xchg
outs
call
add
lahf
arpl
ret
add
mov
in
add
out
(bad)
xchg
mov
(bad)
jbe
hlt
or
add
pop
xchg
scas
test
out
movs
call
add
ins
sbb
push
jg
cdq
lea
pop
or
cmp
fnsave
xchg
nop
popa
or
ins
mov
and
mov
jle
jbe
xchg
push
lods
sbb
lahf
jb
mov
mov
fucomip
cwde
imul
test
xor
in
shl
push
add
mov
add
repz
add
inc
fucomi
push
(bad)
test
ret
inc
fsubr
add
out
pop
jmp
data16
add
or
cs
and
jo
cmp
inc
(bad)
cmp
mov
test
fidivr
mov
js
jge
adc
jg
in
mov
(bad)
in
cld
add
mov
add
mov
sbb
sahf
outs
call
movs
jb
bound
scas
ss
movs
ins
test
stos
jno
fdivr
cs
ins
sti
ja
push
inc
add
mov
jg
pop
rcl
(bad)
sar
add
pop
outs
xchg
push
sbb
sbb
(bad)
jp
pop
(bad)
call
pusha
cs
adc
add
test
xor
cmps
loopne
rcl
jle
push
fistp
(bad)
push
lahf
pop
loope
add
icebp
push
pop
loop
add
out
jo
scas
mov
in
scas
push
inc
fsubr
jg
xchg
lods
cmps
ficom
shl
add
ret
mov
shl
(bad)
pop
aaa
sahf
stos
sbb
js
pop
(bad)
jg
sub
into
push
sub
and
dec
sub
sub
pop
add
(bad)
(bad)
lods
enter
lock
add
out
xchg
push
xchg
mov
out
add
mov
mov
push
adc
push
inc
clc
sub
mov
retf
jg
jno
js
fild
jl
rcr
iret
mov
add
mov
add
mov
out
ffreep
add
(bad)
(bad)
ins
loop
stos
test
dec
pushw
add
lods
out
xchg
test
pusha
cs
pop
test
sahf
fs
or
mov
inc
push
push
or
mov
mov
add
aas
test
mov
test
fisubr
stos
sub
push
add
stos
adc
lods
jnp
sub
jo
xchg
push
sahf
pop
jg
xchg
sub
repnz
add
add
ret
fcomip
fucomp
cmps
(bad)
xlat
call
push
aad
shl
lahf
imul
or
dec
addr16
ss
movs
mov
cmp
add
mov
test
add
jmp
mov
fcomp
adc
mov
xchg
in
mov
jmp
jl
(bad)
leave
add
mov
ret
add
xchg
aaa
inc
jle
xchg
(bad)
jmp
lahf
xchg
imul
add
mov
add
mov
inc
or
xchg
jbe
pop
mov
sub
add
push
and
(bad)
repnz
fucomi
fcomp
bound
dec
pop
das
dec
dec
pop
and
and
or
cmp
rcl
inc
lock
mov
cmp
add
cmps
aaa
add
mov
adc
mov
pop
inc
inc
adc
mov
or
jmp
ins
push
loopne
cmps
fcomi
fwait
sub
aam
loop
je
call
mov
xor
movs
add
popf
test
pop
cmp
aas
sub
add
push
push
test
rcr
add
lahf
enter
mov
add
jecxz
jl
jo
add
xchg
sub
je
ins
pop
iret
inc
mov
adc
fadd
xchg
add
ret
jecxz
xchg
add
ffreep
fistp
push
in
push
cmc
std
add
frstor
mov
loope
pop
rcl
sub
pop
and
fisttp
xchg
push
add
out
outs
test
mov
aas
cmps
mov
push
xor
xchg
cmp
add
mov
sbb
ss
pusha
or
ret
jmp
and
dec
fsubp
(bad)
cmp
movhps
out
out
clc
add
in
push
movs
data16
stc
add
repz
loopne
fiadd
pusha
outs
adc
nop
in
pop
lea
xor
stos
rol
ss
aaa
xchg
xor
lods
mov
dec
aaa
cmp
es
scas
ins
test
(bad)
daa
das
dec
add
mov
xlat
jmp
daa
idiv
cmp
std
out
les
test
mov
push
inc
push
es
jns
mov
cmpxchg
pop
add
or
jp
jecxz
fwait
add
retf
jmp
jg
pop
out
sti
neg
jb
push
pop
jle
jg
(bad)
xor
aas
add
jle
add
push
xor
push
pusha
or
jg
push
cwde
jbe
nop
outs
daa
add
sbb
mov
adc
mov
out
mov
inc
sub
mov
push
adc
xchg
push
sahf
push
imul
and
pop
xchg
icebp
or
jg
mov
lods
sahf
pushf
icebp
cli
add
bnd
shl
out
jecxz
mov
in
lock
fwait
mul
mov
xor
fsub
daa
pop
cmp
popa
aaa
add
dec
aas
dec
mov
dec
das
cmp
push
fs
lock
xchg
add
add
xchg
mov
xor
push
stos
mov
pop
xlat
jecxz
xchg
mov
adc
lds
mov
xchg
out
movs
add
into
push
in
aam
sahf
sub
loope
add
cs
fs
daa
jbe
add
jnp
aaa
inc
xor
xchg
add
adc
inc
data16
mov
(bad)
daa
out
mov
inc
add
lock
js
sahf
bound
arpl
loopne
mov
xchg
sahf
es
repnz
mov
push
in
add
mov
aas
xchg
cmp
pop
dec
scas
dec
shl
xlat
aam
std
popa
xchg
xchg
push
test
or
mov
call
jp
add
mov
add
push
add
mov
es
mov
pushf
push
add
mov
lock
call
cmps
add
adc
xor
das
aas
or
pop
and
jge
mov
pop
push
add
test
mov
dec
daa
pusha
out
mov
(bad)
outs
aas
adc
(bad)
stos
jbe
xchg
push
add
adc
xchg
cmps
or
inc
push
mov
push
dec
ret
push
fwait
out
clc
add
jmp
mov
outs
fistp
jg
jmp
sub
cs
add
pop
dec
add
pop
xor
mov
pop
ret
fwait
into
dec
pop
xor
xor
inc
jle
xchg
jnp
stos
add
adc
pop
dec
push
loope
cmps
cwde
push
aad
jb
in
movs
add
outs
dec
xlat
daa
push
cs
daa
jg
das
mov
pop
xor
dec
sub
sub
mov
ja
fadd
ret
movs
gs
mov
xchg
mov
sbb
lahf
cmps
mov
cdq
or
mov
sub
cmps
lods
test
add
getsec
mov
popa
lahf
add
lock
fistp
mov
mov
xchg
iret
fild
cmps
call
add
jl
sub
add
pushf
lock
push
sub
(bad)
xlat
pop
cmp
pop
xor
imul
bound
push
test
popa
add
adc
add
lahf
pop
add
ficomp
add
dec
pop
inc
or
sbb
gs
adc
pop
cmp
clc
ss
fwait
add
fwait
push
lahf
dec
mov
mov
in
aas
in
mov
mov
jb
fwait
pop
add
or
add
adc
push
push
jo
test
lahf
into
dec
call
pushf
in
test
out
push
fs
dec
dec
inc
ja
add
ja
jmpw
fsub
loope
test
push
cs
arpl
fadd
push
add
ins
mov
xlat
pop
xchg
dec
clc
mov
in
cmps
xchg
mov
cmps
xchg
movs
jge
out
rol
xor
inc
mov
mov
dec
into
loope
jmp
dec
bound
dec
cmp
add
test
add
mov
add
dec
mov
ret
inc
cmps
xchg
or
nop
xchg
(bad)
test
or
lock
mov
push
sahf
add
jbe
adc
fucom
lock
aas
or
cmp
retf
add
lock
hlt
add
push
sbb
adc
loopne
inc
ficom
outs
mov
iret
fdiv
add
cmp
sbb
imul
dec
xchg
ja
outs
xor
xchg
push
xor
adc
mov
pop
popa
xchg
cwde
mul
inc
jnp
mov
push
scas
mov
jge
dec
jae
addr16
inc
push
mov
mov
mov
pusha
loope
mov
fwait
bound
push
and
arpl
ss
dec
pop
push
pop
inc
out
outs
(bad)
jne
push
mov
mov
(bad)
popf
add
pushf
push
jbe
mov
adc
inc
out
retf
int
ret
(bad)
cmps
outs
add
pop
loope
scas
mov
lahf
rol
mov
(bad)
arpl
adc
or
out
add
loop
xchg
jg
dec
jae
rcl
inc
int
pusha
loopne
sub
push
test
int3
fsin
outs
sub
xor
add
jge
mov
inc
test
dec
mov
push
clc
dec
xor
(bad)
sti
fild
outs
fwait
mov
retf
cmps
test
inc
pop
inc
imul
scas
jmp
cld
jge
pusha
pop
push
inc
sub
out
mov
fistp
push
inc
xchg
inc
push
lea
ret
clc
adc
ror
xchg
dec
dec
adc
cmps
jge
mov
push
xchg
outs
add
mov
sub
add
adc
push
outs
push
cmp
lock
inc
ss
test
inc
mov
xchg
call
push
pop
fstp
rcl
int3
fcom
aas
enter
aad
add
mov
(bad)
add
mov
mov
pop
cs
add
daa
in
movs
jmp
dec
mov
push
mov
sub
test
and
(bad)
(bad)
mov
mov
mov
pop
sub
addr16
(bad)
inc
push
add
push
add
push
add
pop
sahf
dec
xchg
inc
jns
inc
mov
ficomp
outs
inc
imul
pop
lock
sti
into
retf
mov
aaa
jbe
add
push
lea
das
pusha
push
lahf
inc
loope
mov
cmp
arpl
les
dec
xor
cmps
xchg
dec
out
dec
test
es
xchg
into
cmps
ins
sahf
ins
outs
test
ja
xchg
pop
push
adc
jmp
cmps
jo
mov
(bad)
enter
loope
cmp
push
fsub
add
mov
out
add
in
fadd
jns
fmulp
(bad)
ds
xlat
icebp
mov
or
jl
ds
fsubp
add
xlat
ror
ja
(bad)
xor
popf
cmps
sub
out
xor
inc
jge
jnp
or
xor
in
inc
sbb
(bad)
mov
mov
cmp
sub
jg
rcr
out
inc
test
inc
mov
mov
dec
xchg
pop
imul
call
jne
push
mov
imul
scas
into
pusha
cmps
je
jns
xchg
lods
or
pop
xchg
dec
sar
outs
aas
add
pop
xchg
arpl
jns
dec
out
sub
mov
xchg
lea
dec
add
outs
dec
xchg
movs
push
push
xchg
push
add
inc
shl
pop
add
mov
aam
mov
xchg
dec
mov
loope
add
loope
push
cmps
or
adc
fld
gs
sub
xchg
fninit
add
fiadd
inc
mov
retf
mov
mov
sub
add
pop
dec
cmp
sub
out
int3
mov
mov
push
xchg
out
pop
sub
add
je
(bad)
(bad)
jg
xchg
push
add
push
add
pop
add
bound
pop
popf
push
popa
movs
jb
push
jp
jno
add
mov
add
pop
fstp
xchg
add
mov
push
inc
cmps
jns
jle
div
adc
ins
inc
daa
das
cmp
inc
stos
rcr
inc
push
pop
xchg
imul
mov
movhps
jl
mov
add
inc
ret
pop
jmp
push
(bad)
mov
dec
inc
mov
test
lahf
jns
add
cmc
out
ret
sub
or
fistp
push
nop
cwde
sahf
jg
cdq
inc
pop
xchg
cmp
dec
shl
add
jecxz
add
xchg
add
xchg
lahf
fadd
ds
(bad)
aas
fild
sub
push
lds
jle
fstp
fadd
fs
dec
fmul
mov
cwde
jl
inc
test
lahf
sub
test
(bad)
and
inc
ss
ss
push
mov
cmp
or
push
add
push
add
add
call
arpl
pop
sahf
imul
movs
jae
imul
jo
lea
jp
mov
mov
(bad)
out
sbb
iret
stos
add
ret
(bad)
data16
dec
mov
mov
pop
sbb
sbb
add
daa
pop
pop
sbb
xor
push
fs
outs
add
pop
lahf
(bad)
test
mov
cmp
mov
std
push
pop
imul
push
xchg
outs
pop
imul
leave
movs
data16
jmp
cs
rcr
sub
mov
sub
sub
inc
inc
cmps
scas
pop
inc
and
jmp
loope
push
inc
pop
jb
in
sbb
pop
test
inc
leave
xchg
(bad)
rol
xor
jl
iret
dec
fisttp
mov
into
fadd
jb
push
mov
pop
rol
pop
xor
inc
or
add
jae
pop
sahf
out
mov
jg
sahf
jb
jne
add
mov
test
xchg
add
popf
add
retf
rcr
add
loop
popa
ins
(bad)
aad
push
shr
sub
pop
test
sub
pop
dec
cmp
or
fwait
jb
popa
(bad)
outs
movs
mov
inc
push
(bad)
lock
cdq
cmps
dec
push
popf
pop
add
cmps
addr16
push
and
bound
rcl
mov
add
and
outs
popa
out
xor
mov
rcr
add
test
(bad)
fsub
add
loope
dec
leave
xlat
xchg
mov
mov
jle
mov
ss
ror
push
rol
fs
adc
dec
mov
ss
cmp
push
adc
push
das
jp
test
inc
jle
mov
outs
mov
jp
idiv
jg
ins
ins
push
push
loopne
loope
pop
in
jmp
add
jae
add
xchg
dec
(bad)
dec
ss
sahf
pop
add
push
xor
cmp
adc
pop
lahf
jg
sti
adc
mov
stos
(bad)
dec
add
pushf
fcom
mov
pop
test
js
mov
cmps
sbb
pop
jo
cmps
sahf
push
jge
push
cli
sahf
(bad)
cmp
pop
iret
fild
jne
fild
gs
jle
dec
(bad)
retf
add
leave
nop
dec
pusha
loope
mov
dec
ret
std
mov
cmps
dec
mov
add
push
push
mov
add
dec
mov
cmps
mov
movs
mov
mov
xchg
add
test
leave
aad
fistp
es
fiadd
and
loope
jecxz
in
inc
pushf
popa
sahf
aaa
xchg
xchg
ret
cwde
retf
shl
push
add
mov
shl
inc
pop
fnsave
cld
ffreep
(bad)
pop
aaa
jne
add
je
retf
(bad)
bound
pop
xor
inc
mov
mov
pop
and
mov
test
pop
movs
fiadd
and
loopne
rcr
ret
cmp
inc
sub
xor
aaa
adc
(bad)
rol
pop
retf
imul
retf
inc
ror
jnp
test
mov
std
or
mov
addr16
inc
scas
mov
push
mov
dec
mov
inc
lods
mov
add
cmps
mov
cmp
test
xor
pusha
add
jns
arpl
add
xor
rol
xchg
mov
addr16
push
xor
jecxz
outs
cmps
outs
add
mov
cmp
pop
les
pop
sahf
data16
jo
outs
mov
ret
dec
pop
outs
push
addr16
retf
mov
push
mov
mov
je
xlat
lahf
mov
movs
jno
xor
das
pop
xchg
mov
iret
push
bound
imul
adc
into
and
mov
add
dec
adc
rcl
mov
xchg
ret
rol
xchg
out
cmp
push
push
cmps
mov
dec
fbld
cmp
cmp
mov
adc
dec
bound
scas
xor
sahf
xor
test
xor
add
loop
les
push
jae
jl
popa
dec
jg
sub
mov
sub
retf
xchg
xchg
push
arpl
fcomp
jo
inc
daa
movs
enter
inc
repnz
test
bound
jle
xchg
jno
pop
into
xor
arpl
dec
add
push
popa
or
jle
pop
mov
inc
pop
or
aas
retf
es
lea
sub
xor
lock
jo
lahf
lods
jg
mov
push
shl
push
mov
les
ds
stos
mov
cmp
or
mov
xor
xor
jbe
or
scas
sahf
xor
add
bound
imul
in
outs
dec
and
ja
add
and
fdiv
outs
jl
push
mov
fdivrp
add
lahf
rol
add
outs
out
push
scas
lock
push
pop
sahf
call
test
idiv
and
add
pop
inc
pop
mov
hlt
push
(bad)
call
add
pop
mov
xchg
pushf
add
clc
xchg
jp
add
mov
xor
mov
(bad)
inc
push
je
fimul
push
dec
mov
inc
mov
sub
mov
cmp
pushf
movs
outs
ss
mov
clc
retf
cmp
loope
mov
ins
xchg
jmp
es
push
test
scas
cmps
jbe
add
xlat
out
xchg
leave
jbe
jle
dec
outs
test
lahf
int
push
stos
mov
rol
sub
pop
push
xchg
push
pop
xchg
aas
inc
xchg
xor
std
test
pop
xchg
gs
pop
call
(bad)
xor
(bad)
jmp
add
jae
addr16
mov
test
xor
mov
xchg
push
ds
inc
stos
mov
ins
ret
mov
aas
cmps
mov
cmp
movs
scas
add
cmp
mov
dec
loop
pusha
cs
test
pop
mov
cmp
jmp
add
jnp
add
jne
add
jno
dec
ss
loope
jns
fiadd
pop
add
bound
push
adc
xchg
ja
push
adc
mov
add
push
int3
mov
or
aaa
or
inc
push
ins
cmps
jle
inc
dec
inc
push
xchg
jp
cmp
push
xor
js
jbe
or
dec
aas
add
mov
aam
cmp
out
mov
(bad)
(bad)
leave
aad
push
out
sahf
data16
neg
fldcw
mov
outs
pop
or
mov
add
xchg
std
sub
mov
pop
fsubr
mov
mov
ficom
or
xchg
xchg
mov
int
das
inc
imul
inc
adc
cmp
push
dec
jbe
lods
add
add
jno
push
fwait
data16
add
ins
pop
pop
in
inc
jge
add
jns
popw
das
push
call
(bad)
and
pop
dec
pop
push
add
push
mov
add
int3
jg
cld
(bad)
dec
fcmove
add
into
mov
lods
shl
add
mov
sbb
mov
fisubr
dec
pop
and
push
ficom
inc
and
(bad)
mov
sub
sub
ins
outs
(bad)
sub
repnz
(bad)
mov
xchg
bound
js
test
cmps
ja
push
sahf
push
imul
pop
mov
cmp
ins
mov
sub
data16
sub
sahf
xor
inc
(bad)
cmp
push
mov
mov
pop
fidivr
jmp
ss
add
(bad)
(bad)
fadd
cli
pop
mov
pop
inc
div
jl
mov
or
adc
pop
inc
(bad)
addr16
inc
sbb
adc
push
jnp
mov
jo
jg
loope
test
pop
mov
into
pop
fidiv
or
push
rcr
out
jl
ds
addr16
adc
adc
jg
sub
jp
pop
ss
aaa
cmp
inc
(bad)
mov
ds
add
popa
add
cld
stc
inc
je
add
ins
test
call
mov
xchg
mov
outs
xchg
pop
add
xchg
iretw
mov
je
push
inc
jg
out
sub
sbb
mov
lods
sub
cld
or
xchg
scas
call
ret
imul
ss
xchg
jle
mov
jae
cmp
pop
movs
pop
jo
pop
cmps
jno
(bad)
fwait
popa
(bad)
cdq
add
popf
push
xor
es
ss
fild
adc
dec
xchg
mov
repnz
mov
or
push
scas
push
pushf
inc
inc
xchg
mov
xor
idiv
(bad)
push
jnp
xchg
mov
ja
adc
fisubr
int
or
cmp
pop
push
sub
pop
cmps
jl
adc
xchg
push
test
add
test
mov
add
mov
inc
test
xor
fild
push
add
xchg
add
sti
clc
shr
call
or
lods
cmps
push
xchg
pusha
out
sub
(bad)
sti
mov
cdq
fs
pop
lahf
ins
add
ffree
ret
dec
mov
xor
push
mov
and
push
lea
inc
adc
xlat
int
clc
das
or
xchg
pop
add
(bad)
ret
retf
ss
(bad)
push
(bad)
fbstp
add
jbe
inc
adc
test
(bad)
loopne
add
jle
dec
lea
bound
cmp
add
cld
mov
les
loopne
adc
pop
call
dec
xchg
pop
and
xchg
pop
push
xchg
pop
jg
les
jbe
(bad)
mov
mov
inc
je
jle
sbb
inc
cmp
sldt
or
mov
int
sub
xchg
ja
xchg
stos
(bad)
push
(bad)
ss
push
lods
js
gs
jns
jle
pop
mov
adc
pop
dec
nop
pop
lahf
das
add
ins
mov
add
adc
add
sti
div
xchg
leave
mov
not
data16
push
add
push
scas
(bad)
pop
mov
ins
movs
rol
adc
test
scas
fisttp
in
xchg
jl
mov
jp
mov
les
push
aas
bound
push
mov
jno
add
enter
mov
add
cld
lods
jo
jle
jp
scas
mov
add
push
mov
sbb
test
sub
mov
push
xchg
popa
xchg
mov
mov
push
aam
(bad)
or
pop
jnp
out
push
push
cwde
add
add
push
inc
mov
jmp
xchg
lea
push
mov
mov
or
push
sub
cs
add
ja
mov
test
xchg
mov
inc
jbe
lods
jnp
sahf
retf
ds
test
jns
mov
jmp
cmp
imul
jb
test
mov
mov
add
dec
shr
pop
out
and
fsub
fiadd
fcom
in
fmul
cmps
ja
mov
pop
pusha
loope
xchg
test
inc
mov
dec
aad
jle
lea
shl
(bad)
inc
ins
pop
pop
xchg
add
add
bound
loope
mov
adc
rol
or
outs
ds
(bad)
mov
add
push
mov
mov
add
add
jg
out
outs
push
das
pop
lahf
mov
add
add
xor
lea
pop
pop
faddp
push
adc
ins
inc
xlat
pop
sti
fwait
ret
out
xchg
mov
mov
ret
fmulp
outs
push
cli
mov
lock
push
jbe
xchg
inc
test
aas
retf
sub
dec
mov
pop
xor
mov
fnstsw
inc
push
xchg
jl
mov
sbb
cmc
repz
pop
push
xchg
add
mov
mov
xchg
cwde
add
jg
add
in
push
ins
mov
add
out
mov
add
push
add
pop
mov
pop
je
out
popa
nop
imul
xor
xor
pop
test
cdq
gs
push
xchg
popa
test
xchg
dec
push
add
adc
xchg
push
and
add
out
mov
add
mov
xchg
or
xchg
ja
jo
adc
jl
push
adc
add
mov
in
mov
mov
ss
pop
mov
mov
inc
adc
push
or
scas
push
inc
scas
sahf
aaa
je
fld
mov
sti
scas
xor
dec
push
push
push
push
xchg
dec
nop
pop
jle
mov
inc
scas
ds
rol
(bad)
scas
lea
(bad)
mov
adc
push
scas
cmp
inc
xchg
push
or
sahf
mov
(bad)
dec
lds
xchg
leave
mov
add
sub
jo
xchg
jno
xchg
mov
das
pusha
pop
cmp
dec
mov
push
xchg
pusha
pop
dec
xchg
pop
push
sahf
push
cmp
sbb
cmps
in
test
and
xchg
dec
cmp
dec
test
push
dec
inc
test
adc
addr16
jno
xchg
mov
add
push
xchg
cmp
and
lahf
jge
test
jge
cmps
dec
jns
pop
call
jo
mov
mov
add
mov
outs
jb
es
mov
mov
je
xor
inc
jnp
jbe
push
loopne
jle
mov
xor
(bad)
popa
or
inc
mov
pop
inc
xchg
lahf
xor
test
cmp
pop
cld
fld
dec
out
xchg
pop
in
out
mov
mov
hlt
push
add
pop
inc
xchg
(bad)
fucomip
nop
es
rol
rol
retf
je
mov
jne
js
outs
call
push
das
jbe
cli
push
scas
lods
jns
ss
or
adc
xchg
cmp
aaa
push
adc
pop
(bad)
jg
lock
jns
pop
cmp
mov
mov
sbb
sub
mov
idiv
cdq
mov
mov
dec
sbb
pop
push
add
xchg
mov
out
ja
mov
mov
add
repz
ret
ret
pop
js
pop
push
xchg
add
popa
ins
arpl
dec
js
push
xchg
popa
cmp
imul
pop
sbb
or
jle
mov
mov
scas
pop
cmp
mov
inc
aaa
inc
daa
pop
sti
stos
jo
xchg
xchg
mov
movs
setne
out
inc
out
xor
inc
aaa
iret
or
pop
retf
(bad)
call
ret
out
dec
lea
ret
mov
ret
add
out
(bad)
(bad)
mov
loop
add
lds
vmwrite
ds
pop
mov
or
rcr
xchg
mov
fiadd
dec
lahf
mov
jp
pop
pop
mul
loopne
shl
inc
fdiv
outs
push
cmp
(bad)
daa
xchg
call
shl
xchg
mov
iret
pop
(bad)
mov
popf
add
imul
(bad)
(bad)
inc
add
add
in
add
in
add
retf
jnp
xchg
push
cmp
stos
scas
xchg
add
popa
xchg
inc
ret
jb
outs
push
aas
add
push
push
jle
mov
pop
nop
es
add
pop
fmul
xor
nop
or
sahf
dec
ins
or
push
mov
pop
cld
std
lods
dec
into
outs
xor
ja
(bad)
ins
pop
stos
mov
xchg
pop
(bad)
cmp
jns
pop
pop
mov
mov
add
out
add
out
in
add
das
add
xchg
add
cmp
ds
cmp
(bad)
pop
add
pop
push
xchg
test
mov
pop
add
popa
xchg
popa
cmovg
dec
xchg
pop
pminsw
mov
push
xor
xchg
call
jle
aaa
jbe
ds
lahf
pop
xchg
add
add
(bad)
lods
add
outs
xchg
push
test
outs
xchg
jl
repnz
lahf
hlt
adc
push
pop
xchg
(bad)
dec
jno
jg
xchg
add
rol
leave
jmp
rcr
loopne
jo
out
push
push
add
imul
or
pushf
imul
xchg
jno
jo
jle
mov
pushf
hlt
inc
mov
cmps
and
cmp
cmps
mov
mov
xchg
outs
xchg
mov
leave
mov
enter
popf
mov
xor
add
fsub
ficom
cmps
xchg
mov
idiv
nop
add
outs
inc
(bad)
call
aad
jmp
rol
xchg
sbb
inc
out
pop
add
arpl
ja
pop
movs
outs
pop
mov
pop
push
dec
sbb
push
jbe
rcl
cmps
inc
mov
jmp
lahf
scas
(bad)
cli
(bad)
mov
mov
add
int3
mov
test
inc
out
out
inc
or
dec
xchg
add
mov
sub
cmp
add
ficom
push
iret
lahf
add
cmps
retf
shl
lock
or
inc
inc
loopne
xor
scas
imul
popa
addr16
jl
sub
mov
in
loop
mov
(bad)
ret
test
inc
(bad)
inc
push
push
out
xchg
mov
mov
add
jl
push
les
inc
pop
mov
ret
xchg
out
fist
and
xlat
add
test
(bad)
dec
jecxz
xor
lea
std
cmp
not
(bad)
(bad)
inc
jg
bound
xchg
(bad)
(bad)
call
push
nop
shl
loope
arpl
icebp
jne
ror
sub
jg
idiv
adc
xchg
sbb
repnz
inc
mov
jmp
sahf
into
dec
pushf
frndint
jo
fist
jmp
mov
loope
ret
xchg
aam
pop
test
enter
into
call
xchg
shr
rcr
dec
jge
jg
(bad)
cmp
xlat
mul
lock
call
les
mov
push
stos
and
mov
jle
push
push
call
jg
sti
push
xor
sti
sbb
push
push
test
mov
call
xlat
call
cdq
int3
in
rol
adc
cli
cld
or
mov
(bad)
call
div
xchg
aam
xor
aad
jo
sar
adc
add
add
mov
loope
ins
xchg
add
int
sbb
call
es
adc
inc
iret
jmp
(bad)
pop
lock
(bad)
fucomip
cmp
xlat
lock
jmp
jmp
fdivr
ss
pop
lock
sbb
fimul
lock
adc
mov
(bad)
jno
pop
cmc
mov
pop
scas
(bad)
cmp
(bad)
(bad)
mov
in
inc
or
loope
ds
mov
scas
mov
pop
sub
loopne
jmp
jle
mov
cmp
mov
push
add
add
out
neg
outs
mov
out
dec
scas
sar
cmps
stos
jg
fbstp
mov
call
mov
inc
stos
aad
vmovdqu
or
push
stos
retf
scas
ret
leave
inc
movs
retf
jmp
push
inc
shr
and
adc
mov
shl
imul
clc
xchg
fild
ret
push
std
jg
inc
(bad)
(bad)
out
adc
mov
jmp
cmp
int
push
(bad)
(bad)
call
repz
sti
or
adc
sar
lea
fprem
push
(bad)
jg
mov
call
out
call
call
cld
std
push
stc
inc
add
aam
pop
sbb
mov
sbb
mov
addr16
xchg
scas
(bad)
pop
(bad)
and
dec
int3
jecxz
add
cmp
out
repz
(bad)
push
mov
in
and
jmp
repz
xlat
add
push
cmc
(bad)
jg
hlt
call
push
scas
hlt
mov
out
mov
loope
repnz
cli
or
add
call
jecxz
xchg
dec
jb
loopne
repz
je
jl
icebp
jmp
jmp
mov
push
js
push
test
ret
xlat
(bad)
enter
mov
xchg
in
hlt
clc
adc
mov
jo
(bad)
inc
test
and
std
jmp
icebp
call
mov
cld
xchg
or
out
daa
mov
call
cmps
mov
rcl
jmp
cmc
xchg
pop
stos
or
scas
aam
pop
leavew
out
shl
add
clc
push
outs
add
(bad)
jmp
les
shr
sub
(bad)
fstp
fidiv
ret
inc
mov
(bad)
jg
lods
idiv
sti
cld
or
idiv
adc
in
xor
out
inc
cmc
clc
pop
ja
hlt
clc
push
jge
fild
jle
in
cli
movs
outs
or
xchg
push
retf
mov
push
leave
xchg
push
push
pop
int
pusha
int3
repnz
(bad)
dec
rcl
in
call
cs
xlat
stos
in
or
shl
in
das
jge
iret
sub
sahf
cwde
rcl
cmp
aam
cmps
int3
(bad)
and
mov
out
out
idiv
adc
fucomip
inc
jnp
out
jecxz
mov
jl
pusha
(bad)
mov
pop
ins
jle
or
popa
int
imul
jo
adc
push
aam
jo
push
enter
xchg
hlt
adc
xchg
loopne
xchg
das
(bad)
ins
daa
call
cdq
jb
dec
mov
outs
xchg
jmp
mov
push
daa
movs
push
add
sar
dec
lods
sar
push
sbb
xchg
pop
ja
data16
dec
mov
and
data16
ror
push
jae
inc
jp
test
mov
sti
out
out
(bad)
loop
adc
push
jl
dec
mov
pop
pop
lods
(bad)
mov
out
xchg
fisttp
retf
pop
call
enter
jg
outs
mov
dec
aad
sub
dec
aad
adc
pop
jmp
push
mov
scas
mov
cmc
mov
cmp
retf
aad
jne
idiv
sbb
push
mov
cld
mov
cli
stos
inc
cld
mov
loop
stc
outs
int3
call
cld
scas
dec
mov
fbstp
mov
mov
loope
inc
mov
js
mov
outs
add
jbe
call
jg
adc
jp
int
mov
jmp
stos
fcos
stos
clc
mov
adc
shl
pop
jmp
aas
test
lahf
mov
test
xchg
pop
(bad)
jbe
push
jg
mov
loopne
xchg
stos
mov
or
(bad)
inc
call
repz
(bad)
not
ret
sar
add
fistp
inc
std
push
imul
call
cdq
retf
xor
(bad)
fisttp
call
test
test
cdq
(bad)
dec
into
mov
aad
scas
shl
pop
rcr
inc
mov
loope
call
pop
aad
out
sub
mov
std
jmp
mov
push
outs
push
xor
aam
loope
(bad)
mov
push
je
hlt
jns
jp
ins
jne
in
inc
gs
inc
ins
jl
(bad)
(bad)
(bad)
clc
push
jge
neg
popf
mul
movs
stc
ins
mov
mov
xchg
loopne
sub
sti
pop
and
jg
(bad)
jmp
(bad)
fimul
ss
dec
sar
add
push
movs
scas
sub
es
jle
mov
loop
call
sti
dec
cmps
shr
inc
cmps
iret
lock
rcr
ja
cmp
(bad)
mov
test
push
hlt
(bad)
xchg
shl
out
push
das
mov
(bad)
jnp
mov
loopne
sti
test
mov
cwde
xchg
sahf
xchg
mov
dec
mov
repnz
ret
icebp
inc
xchg
mov
push
xchg
mov
push
xchg
mov
je
dec
loope
jle
scas
(bad)
rcr
push
iret
sub
and
outs
mov
mov
xchg
(bad)
shr
jb
mov
setne
stos
push
adc
sub
or
sar
adc
fisub
in
shl
mov
call
loopne
mov
sti
push
mov
idiv
hlt
(bad)
(bad)
fdiv
call
sub
es
mov
add
scas
mov
je
in
cli
retw
mov
mov
in
into
fisub
fsub
aaa
je
mov
add
mov
push
pop
fsubr
icebp
and
xchg
aad
cmps
rol
cli
mov
xlat
call
loope
ficom
pop
movs
xchg
dec
dec
retf
inc
aas
mov
sbb
mov
push
pop
(bad)
out
pop
or
mov
jecxz
push
pop
lea
and
out
mov
inc
outs
sar
out
call
pop
cwde
push
ss
xchg
test
ficomp
cli
or
mov
js
mov
stos
int
and
push
cmps
push
jge
fcmovnb
push
push
mov
(bad)
or
les
(bad)
cli
mov
fmul
ret
xchg
mov
int3
mov
adc
xchg
inc
call
outs
das
pushf
ret
push
inc
and
mov
fisub
fdiv
pop
leave
ds
(bad)
fdiv
xchg
pop
sub
push
data16
push
pop
mov
cmp
dec
xor
icebp
jle
out
leave
lock
in
inc
push
mov
int3
hlt
push
call
mov
jmp
movs
outs
push
test
jl
aam
fldln2
mov
dec
shl
sub
leave
cmp
aaa
(bad)
xchg
mov
out
outs
fucomp
repnz
mov
fild
sbb
sub
(bad)
int
js
std
mov
out
inc
jo
mov
inc
mov
ror
int3
icebp
mov
push
sub
dec
jb
jnp
ins
lds
(bad)
outs
aad
jns
es
mov
loop
push
nop
stos
sahf
sbb
push
xchg
dec
(bad)
inc
repnz
fdivrp
pop
add
lods
fadd
pop
outs
add
scas
mov
xchg
jbe
xor
fdiv
mov
fst
xchg
mov
ss
(bad)
into
pop
retf
pop
lock
pop
test
data16
(bad)
scas
ss
loopne
inc
jmp
mov
(bad)
call
xchg
shr
dec
cmps
pop
dec
xchg
enter
lahf
enter
in
pop
pusha
mov
sub
add
lock
rcl
jecxz
sbb
shr
jg
lock
pop
jp
xlat
mov
cmps
outs
dec
mov
and
sahf
mov
pop
mov
rol
ds
jo
mov
push
test
push
adc
stos
jmp
mov
push
std
call
hlt
movs
enter
jmp
sub
idiv
adc
pop
test
call
mov
mov
in
lods
ret
rcr
(bad)
fsub
sbb
xchg
push
in
xor
mov
mov
pop
ds
adc
into
and
or
pop
cmps
mov
cwde
int
loop
sub
mov
cld
mov
pop
adc
(bad)
push
mov
mov
ins
xchg
(bad)
(bad)
xchg
mov
(bad)
xchg
les
mov
sub
mov
push
and
adc
rcl
push
ret
ja
(bad)
jg
(bad)
mov
xchg
movs
inc
dec
dec
out
outs
xchg
test
into
test
mov
adc
pop
scas
sar
stos
aad
push
(bad)
push
test
ja
retf
clc
xchg
scas
(bad)
mov
ret
cmp
fsubr
dec
mov
pop
mov
loope
inc
jbe
mov
jne
ins
data16
jmp
ror
mov
movs
or
jecxz
popf
mov
ret
rcr
std
out
cld
fadd
in
imul
idiv
dec
(bad)
aas
adc
(bad)
loope
jno
enter
(bad)
sbb
pop
fucomip
hlt
and
loope
rcl
aam
rcl
scas
in
mov
(bad)
call
idiv
enter
call
jmp
pop
push
jbe
mov
(bad)
push
cli
pop
pop
cmps
retf
mov
rcl
jmp
das
push
mov
clc
nop
jle
inc
ret
loope
adc
(bad)
fistp
jle
test
jle
xlat
clc
inc
loop
jmp
retf
push
data16
push
mov
int3
out
cli
stc
stos
adc
add
int3
es
fisttp
inc
aaa
inc
xchg
ins
mov
fsqrt
xchg
mov
xchg
or
pop
aam
into
out
outs
shl
stos
call
push
mov
out
cs
js
call
fcomp
out
test
mov
jecxz
arpl
repz
xchg
(bad)
js
aad
bound
aam
xor
jne
inc
push
xchg
mov
xchg
retf
test
shl
hlt
ja
pop
sti
mov
shl
bound
loope
call
push
out
push
lea
mov
jmp
call
pusha
mov
jle
lods
mov
div
xchg
in
(bad)
fsubrp
mov
out
ja
push
clc
(bad)
fsubp
sub
jg
retf
jmp
clc
adc
scas
(bad)
in
addr16
loopne
pop
mov
ss
xchg
cmps
mov
ins
mov
ins
mov
std
pusha
and
shl
lods
loopne
loopne
push
cli
jbe
clc
add
test
or
imul
jg
xchg
xchg
fiadd
(bad)
cmp
shl
ins
mov
jle
mov
jmp
(bad)
push
scas
retf
aam
mov
mov
cld
retf
cmps
sar
outs
(bad)
mov
icebp
jmp
(bad)
jnp
ret
fabs
inc
inc
cld
or
vpaddsb
mov
out
push
std
push
mov
in
int
aaa
in
cmc
clc
adc
mov
into
cmc
test
sar
push
ja
fsub
shl
iret
lock
ds
inc
push
add
or
or
dec
cld
(bad)
mov
rcr
mov
sar
push
xchg
mov
mov
(bad)
aas
nop
retf
xor
sahf
into
loope
xchg
mov
inc
push
or
sbb
rcr
inc
push
into
call
ret
xchg
mov
(bad)
(bad)
jmp
(bad)
(bad)
push
mov
enter
mov
jns
popf
mov
sub
icebp
mov
rcr
in
je
push
push
add
sahf
jmp
hlt
adc
fwait
mov
(bad)
jp
aam
cmp
clc
xchg
(bad)
fyl2xp1
popf
int3
fdivr
scas
ror
retf
rcl
cmc
xchg
ret
xchg
addr16
pop
dec
add
xor
ret
ds
mov
or
or
(bad)
mov
test
aam
cmp
popa
inc
push
add
(bad)
stos
outs
push
or
add
add
or
mov
sub
add
add
add
adc
enter
nop
inc
add
add
sub
pop
cmp
inc
jle
add
inc
or
add
jl
add
xor
add
xor
push
fist
jnp
push
xchg
add
ret
adc
lock
add
or
(bad)
and
or
adc
iret
iret
ins
(bad)
and
add
or
add
mov
add
or
add
add
jecxz
repz
(bad)
out
les
inc
or
outs
call
or
cwde
inc
adc
or
lds
inc
push
xor
or
add
ficomp
push
addr16
sub
mov
(bad)
jo
(bad)
adc
sbb
or
or
sbb
inc
add
bound
jno
movs
mov
lea
xor
aam
inc
leave
ss
fdiv
or
stos
mov
push
jo
mov
xor
and
pop
jmp
cwde
xor
mov
(bad)
cmp
inc
add
(bad)
jae
xor
or
pop
aad
fisubr
adc
dec
arpl
xchg
jbe
push
or
ins
xlat
aaa
mov
xor
inc
pop
push
pushf
pop
pop
pop
push
dec
sub
icebp
bound
daa
fs
mov
imul
repz
ror
mov
imul
(bad)
nop
or
xchg
js
or
mov
inc
mov
ret
sbb
sub
lods
fwait
call
add
cs
aad
jbe
push
scas
es
cmp
add
xchg
xchg
cmp
sub
aas
test
repnz
or
mov
sub
mov
add
mov
and
data16
jg
addr16
rcr
push
sbb
inc
push
push
je
sbb
ss
xor
pusha
push
rcr
cmps
inc
push
es
out
inc
push
pop
or
sbb
and
add
add
add
mov
mov
aaa
add
add
pop
xchg
cs
mov
add
lock
dec
ret
jb
dec
loop
sbb
and
stos
push
mov
adc
outs
adc
adc
in
imul
jbe
mov
inc
sbb
jae
mov
dec
cs
or
dec
and
xor
adc
push
iret
pop
outs
loope
or
adc
arpl
dec
pop
mov
ins
shr
inc
jns
mov
rol
or
call
push
push
sub
or
sbb
push
sbb
das
mov
sub
ss
add
mov
inc
lods
ja
mov
and
fcmovnu
add
dec
daa
jae
mov
xor
and
mov
jnp
mov
cmp
push
sbb
pop
sub
and
stos
xchg
daa
pop
enter
inc
sbb
ss
in
dec
ins
add
inc
lods
aam
cmp
cmp
or
pop
and
pop
push
ret
jno
scas
dec
jmp
xor
or
jne
scas
add
mov
push
cmp
push
pop
sub
xor
cmp
jmp
and
outs
popa
mov
fnsave
jmp
adc
dec
and
push
jg
mov
aam
punpckldq
imul
add
stos
cmp
bound
or
jmp
cmp
or
sub
pop
sub
pop
sbb
inc
pop
push
(bad)
xor
ret
sub
jno
cli
inc
push
add
outs
mov
loopne
pop
imul
cwde
arpl
iret
lods
retf
imul
das
xor
adc
loopne
mov
pop
mov
xor
add
push
(bad)
aad
out
add
lods
shl
call
adc
add
push
mov
pusha
pop
jnp
xor
nop
dec
pusha
scas
mov
pop
fbstp
and
fild
loopne
inc
mov
add
and
arpl
jl
adc
outs
mov
cmp
jo
out
push
push
and
pop
test
push
mov
jne
adc
pop
add
sti
dec
push
xor
xor
xor
aad
test
jmp
inc
mov
jg
bound
push
mov
ss
addr16
fdiv
inc
adc
add
and
(bad)
(bad)
or
(bad)
aad
sbb
jmp
cvtps2pi
cmp
rcl
push
jno
in
dec
aaa
push
stos
jle
arpl
sbb
jmp
and
sub
inc
and
push
xchg
sti
out
or
cmp
or
or
cmp
mov
jae
js
xor
pop
outs
ja
adc
jecxz
cs
cmp
and
imul
push
dec
adc
cvtps2pi
adc
pop
pop
orps
mov
rcpps
ret
xor
sub
(bad)
xor
mov
adc
rol
cmp
add
push
push
adc
cli
iret
pop
and
push
call
das
adc
sti
mov
sub
adc
dec
pop
cmp
push
fldcw
popf
dec
cmp
push
daa
push
scas
push
loope
inc
sub
sub
sub
jbe
fdivp
je
xor
adc
dec
(bad)
js
(bad)
xor
ret
outs
pop
mov
mov
cmp
mov
fidiv
xor
data16
fwait
push
add
daa
mov
das
outs
das
(bad)
and
push
dec
adc
xor
cmp
dec
inc
inc
pop
enter
adc
fstp
xor
sbb
jge
adc
sub
pop
adc
outs
stos
loopne
pop
push
push
sbb
lock
xor
dec
daa
mov
fcmovnbe
jo
xor
sub
test
xor
cmps
sub
mov
sbb
inc
jecxz
jecxz
pop
mov
mov
scas
and
bound
and
xchg
out
push
(bad)
sub
mov
inc
jno
xor
or
fwait
es
dec
push
and
xchg
push
cmp
inc
imul
push
int
and
and
or
xor
push
nop
and
mov
add
and
and
lea
lahf
aas
cmp
pop
aam
bound
dec
cmp
sub
mov
push
das
pop
pop
push
mov
ja
cwde
xor
xor
push
ins
inc
daa
arpl
xor
inc
(bad)
mov
xor
push
fild
add
push
inc
(bad)
cmp
xchg
outs
cli
add
push
pop
bound
inc
cmp
loop
mov
xchg
pop
sahf
pop
pusha
jne
adc
call
xchg
mov
sub
and
cmps
xor
mov
and
xor
and
sub
sub
jbe
sub
sub
adc
mov
js
push
aaa
xchg
fwait
inc
mov
(bad)
das
mov
inc
xchg
xchg
pop
enter
das
cmps
cli
idiv
mov
ds
push
clc
jp
mov
pop
inc
adc
pop
xor
cmp
(bad)
shl
push
aaa
dec
inc
cs
or
out
stos
cmp
xchg
xchg
sub
pop
cmp
push
or
mov
push
push
fimul
cs
cmp
mov
ja
and
adc
push
push
xor
add
iret
pop
adc
pop
fwait
cmp
mov
cmp
sub
jle
fcomp
arpl
cmp
add
dec
xchg
xor
sbb
inc
out
and
sub
sbb
cs
mov
and
or
pop
pop
(bad)
cmp
mov
push
cli
push
and
inc
cmp
and
add
xlat
sub
adc
retf
xlat
rol
mov
sbb
pop
pop
add
arpl
sbb
pop
fadd
jp
pusha
push
lods
or
mov
scas
cmps
xor
dec
xchg
cmp
dec
(bad)
popa
retf
pop
inc
jge
(bad)
inc
inc
and
ds
add
in
inc
cs
and
mov
xchg
xor
xchg
inc
push
das
add
loopne
inc
es
sub
and
sbb
popa
jnp
push
and
pop
pop
inc
(bad)
and
aas
push
jl
inc
or
inc
sub
ret
or
pop
and
test
dec
data16
mov
mov
jge
mov
add
mov
sub
test
xor
xchg
adc
inc
inc
pop
imul
loopne
or
ds
xor
pop
jbe
out
jb
loopne
mov
add
sub
shl
sti
push
packuswb
add
jo
scas
stos
and
bndldx
(bad)
or
push
scas
push
sbb
jmp
pop
arpl
js
jecxz
sub
aaa
xor
dec
(bad)
(bad)
mov
inc
ret
dec
xor
lahf
and
xchg
push
pop
ret
sbb
push
in
xchg
add
repz
pop
(bad)
jbe
push
cmp
ja
cmp
xor
xor
out
adc
mov
pop
inc
push
movzx
dec
and
xor
or
iret
addr16
cmp
dec
xor
sbb
fldenv
pop
and
add
push
inc
xchg
push
xor
pop
add
test
mov
es
test
push
add
or
ins
or
lea
pop
test
push
pop
dec
jp
aaa
in
jp
xchg
add
test
nop
jmp
fstp
xchg
jg
std
fwait
add
push
pop
pop
js
jge
daa
adc
jns
xchg
xchg
outs
pop
jmp
or
pop
les
call
lea
sbb
aaa
stos
pop
retf
sbb
pop
push
(bad)
(bad)
aas
xor
pusha
outs
js
pop
repz
or
fisttp
dec
pop
push
pop
xchg
sbb
push
idiv
mov
and
arpl
push
lahf
jo
clc
dec
push
loopne
dec
gs
in
sub
cmp
pop
pop
xchg
addr16
and
jbe
adc
xchg
fwait
sar
mov
xlat
rol
les
neg
fcmovu
cmp
pop
dec
cli
mov
mov
fild
adc
daa
(bad)
movs
dec
adc
aaa
jmp
ds
push
call
dec
sbb
or
dec
das
gs
imul
cwde
xor
jl
jmp
fiadd
cmps
jle
xor
popf
or
sub
add
cmp
ins
and
push
pop
add
add
and
sti
mov
inc
das
push
jecxz
repnz
(bad)
or
clc
aaa
mov
(bad)
in
dec
xchg
cmp
jg
xchg
dec
or
pusha
pushf
push
es
repnz
rcl
outs
sbb
push
sbb
gs
push
dec
pop
jg
stc
mov
dec
imul
jae
xchg
out
mov
jmp
dec
int
aad
outs
jg
mov
loop
push
add
or
xchg
dec
scas
jge
xchg
bound
pop
cmp
sub
sti
into
cmp
cs
sub
xchg
(bad)
out
fwait
and
sub
and
jnp
push
mov
or
pop
add
fsub
nop
sbb
pop
jae
rol
test
sbb
xor
push
and
out
jbe
push
das
xor
or
ja
or
dec
dec
and
scas
in
ins
enter
pop
(bad)
pop
and
cwde
mov
mov
out
(bad)
and
push
dec
rol
retf
pop
fadd
xlat
mov
jmp
ja
mov
mov
mov
idiv
stos
adc
adc
or
push
jg
jp
sbb
cmp
mov
pop
clc
pop
lods
inc
loop
mov
push
scas
mov
sbb
es
imul
inc
int3
ret
or
mov
xchg
or
retf
pop
scas
push
xchg
retf
jle
xchg
inc
std
nop
push
pop
into
dec
push
fidiv
or
loop
repnz
mov
pop
add
xor
aas
fiadd
cld
xchg
push
add
fs
jmp
push
or
aaa
bound
mov
jae
outs
arpl
into
sbb
cli
popa
into
in
(bad)
sub
loope
outs
pusha
or
ins
ret
jg
sub
mov
cmps
(bad)
push
(bad)
das
add
shl
add
in
push
dec
pop
enter
daa
iret
fidiv
fsubrp
arpl
or
ds
cmp
pop
les
dec
cwde
sub
and
push
pop
xor
or
(bad)
pop
push
and
mov
into
xor
jmp
dec
jb
cmps
push
pop
shl
mov
inc
dec
push
jb
inc
loop
fsub
sbb
mov
pusha
jmp
pop
mov
or
mov
pop
repz
shl
and
push
leave
xor
mov
xor
out
stos
cmp
data16
cmps
inc
mov
fwait
xchg
pusha
(bad)
mov
dec
mov
adc
sub
push
push
sbb
sub
pop
xor
cmp
inc
sub
fistp
xchg
imul
push
jmp
mov
jmp
nop
pop
push
pushf
(bad)
repz
ror
xlat
cdq
and
mov
jecxz
call
add
shr
stos
ret
scas
jle
mov
fisub
fistp
fmul
ins
push
jmp
xor
jecxz
add
xchg
xchg
sbb
inc
gs
pop
jmp
xchg
aaa
mov
pop
inc
dec
fbld
or
jecxz
mov
jmp
or
xor
cmp
push
pop
add
jp
outs
retf
and
mov
pop
addr16
cmp
push
addr16
cwde
cmp
xchg
jae
es
cmps
mov
loopne
aaa
sbb
mov
inc
mov
or
call
pusha
fidiv
mov
outs
jnp
iret
mov
aaa
jne
jo
inc
or
jmp
mov
jae
adc
cmp
ret
adc
jmp
cmp
dec
dec
loopne
aad
outs
shl
adc
call
mov
dec
and
cmps
inc
jg
mov
xor
jmp
sub
xchg
daa
cmp
xchg
push
xor
xchg
loope
js
xchg
loope
mov
xchg
mov
add
mov
add
xchg
loop
push
rcpps
xor
mov
bound
or
push
inc
mov
push
push
pop
movs
(bad)
jae
fwait
adc
mov
mov
aaa
ins
seta
push
das
dec
ins
inc
xchg
ret
add
sbb
pop
hlt
cs
and
mov
jae
pop
pop
(bad)
jo
pop
sbb
adc
ja
jmp
adc
or
pop
in
cmp
cs
das
jmp
imul
aaa
fwait
arpl
call
pop
pushf
and
cmps
jecxz
xchg
fs
and
fld
out
xchg
xor
mov
repz
jns
jne
pop
and
or
rcr
xor
repz
out
sbb
sub
push
ins
sub
stc
jmp
xor
retf
xchg
pop
push
push
aas
push
xchg
cmps
adc
sbb
xor
enter
jmp
ret
jmp
repnz
or
outs
jnp
add
push
lea
sbb
cmps
inc
xor
(bad)
pushf
dec
add
and
arpl
sub
cmp
push
and
(bad)
loope
jle
fadd
repnz
and
arpl
mov
repz
and
xor
jecxz
or
dec
add
call
ss
adc
xor
shr
inc
jp
and
outs
pop
push
push
and
(bad)
pop
pop
pop
retf
xor
call
fdiv
push
cmps
dec
jecxz
lea
mov
dec
xor
jne
and
pusha
ret
je
sbb
ins
ret
ror
jae
jb
retf
push
push
jmp
jbe
dec
and
arpl
in
dec
fild
jmp
xchg
add
inc
mov
adc
iret
mov
pop
shl
cmp
test
mov
jmp
dec
sbb
push
inc
daa
repnz
popa
cmp
jae
pop
fidiv
mov
jae
push
call
and
ins
test
jmp
or
push
push
dec
stos
dec
add
xchg
mov
inc
in
rol
out
mov
stc
mov
arpl
lock
(bad)
and
pop
add
mov
bound
mov
arpl
xor
xor
cld
packssdw
jge
test
push
mov
dec
test
jp
je
push
mov
cli
inc
mov
je
adc
aas
iret
scas
je
push
imul
movs
mov
(bad)
ins
push
jp
fist
xchg
gs
pinsrw
fwait
sbb
inc
je
gs
adc
lahf
push
mov
jecxz
jnp
add
mov
adc
add
adc
iret
add
outs
adc
data16
sbb
test
add
add
and
pop
fsub
sub
adc
sahf
push
das
retf
ins
inc
lds
fs
push
mov
ins
pop
push
push
cmp
rol
sub
(bad)
push
inc
add
ins
inc
icebp
sbb
pop
ins
leave
aaa
hlt
mov
mov
sub
jl
jmp
dec
pop
pop
inc
sub
sub
xchg
push
mov
mov
inc
addr16
out
mov
outs
fwait
shl
xlat
mov
mov
inc
xor
imul
inc
pusha
push
xor
push
xchg
stos
loopne
push
aaa
push
mov
add
out
xor
scas
das
sbb
add
adc
inc
pop
gs
xchg
push
mov
and
fs
imul
jmp
jae
cli
(bad)
jmp
shl
jmp
mov
loopne
cld
push
jp
xor
fwait
(bad)
ffreep
and
out
add
dec
cmp
sub
ins
mov
aas
pandn
jp
aad
jmp
in
mov
jb
and
outs
mov
sub
or
aaa
or
pop
xchg
pop
inc
dec
and
lea
add
inc
mov
pop
enter
jb
fbstp
icebp
mov
cmps
mov
cmp
jg
out
in
out
dec
pop
jp
push
call
retf
aaa
and
jb
mov
inc
jne
js
pop
sub
rcl
out
mov
out
ja
inc
(bad)
scas
mov
(bad)
jmp
jno
cmp
jne
in
add
add
jg
cs
loopne
je
jb
es
push
dec
push
sub
(bad)
add
mov
pop
jg
dec
add
lock
jg
push
mov
pop
or
push
or
mov
or
pusha
add
pop
fs
pop
ins
mov
sub
dec
ins
imul
xchg
imul
ja
cs
push
push
xchg
fwait
nop
xor
loope
(bad)
sub
xor
push
imul
push
jmp
cwde
ds
push
xchg
adc
mov
add
pop
or
pop
xor
cmps
scas
imul
imul
push
jb
xor
cmp
pop
pop
or
stos
ins
xchg
mov
push
test
pop
(bad)
lahf
xor
ss
sub
xchg
pop
jo
stos
xchg
bound
lods
adc
add
mov
rep
ins
mov
and
inc
ins
mov
push
scas
jo
or
push
push
push
sbb
daa
xchg
mov
call
fild
jae
adc
cmp
movntps
or
push
add
sbb
test
dec
ins
das
and
push
adc
cld
(bad)
out
cmp
in
daa
stos
dec
rcl
call
fild
push
clc
push
add
dec
sub
xchg
and
mov
mov
mov
jbe
mov
jecxz
stos
jno
mov
in
push
jo
cmps
addr16
in
add
jae
jae
or
pop
aas
mov
jae
daa
jae
ret
jp
loop
nop
lds
(bad)
pop
mov
sbb
rsm
popa
adc
stos
scas
inc
rcl
ffreep
xchg
jbe
pusha
(bad)
and
adc
call
in
mov
or
jne
xor
mov
adc
pop
add
pusha
test
call
or
lods
add
dec
(bad)
mov
pop
push
repz
ins
xor
jecxz
inc
jb
das
out
retf
pop
pop
daa
jp
dec
and
imul
mov
ins
mov
adc
gs
push
arpl
das
jp
data16
test
push
out
mov
outs
ret
adc
push
pop
dec
sti
outs
adc
mov
mov
daa
jbe
stos
pop
mov
xor
pop
push
mov
cs
pop
push
xchg
(bad)
and
fist
outs
rol
pop
sub
shl
test
cmp
repz
imul
jae
out
scas
retf
or
push
outs
xchg
gs
js
mov
shufps
les
add
jno
dec
call
sbb
stos
sbb
jge
mov
outs
imul
jo
pop
xor
pop
push
and
je
lods
mov
bound
or
mov
xchg
add
jecxz
xchg
fdiv
pop
mul
test
arpl
fbld
add
pop
mov
and
cmps
adc
adc
iret
out
inc
loopne
test
out
imul
les
xor
cmp
dec
aad
inc
inc
outs
mov
leave
sbb
aad
les
push
pop
imul
xchg
or
mov
je
adc
xchg
pusha
repnz
mov
retf
sub
jb
fist
adc
aas
fs
iret
adc
sub
test
adc
loopne
or
dec
fild
scas
push
add
stos
dec
mov
rcl
pop
jecxz
xlat
jmp
mov
xlat
(bad)
stos
dec
push
sti
not
push
arpl
pop
into
je
popa
add
cdq
or
cs
push
arpl
fmul
nop
xlat
or
scas
xchg
out
arpl
mov
outs
dec
into
add
iret
push
add
(bad)
(bad)
adc
into
pop
xor
sub
nop
add
cmp
in
cmp
cmp
ret
adc
mov
das
imul
outs
pop
test
iret
sti
gs
iret
jae
enter
jae
jo
adc
pop
sbb
or
(bad)
add
imul
arpl
adc
outs
add
(bad)
loopne
xchg
jbe
adc
stos
shr
or
bound
adc
mov
mov
pop
pop
(bad)
mov
push
call
ja
daa
jo
dec
clc
inc
gs
mov
call
fwait
sbb
daa
add
mov
add
sub
aam
repz
cmovno
test
push
mov
neg
pop
sub
mov
xchg
adc
hlt
fcom
mov
test
push
bound
sbb
inc
push
imul
outs
lea
sbb
popa
mov
pop
out
les
in
mov
sbb
shl
stos
nop
test
outs
sub
bnd
cmp
(bad)
jp
popa
push
test
adc
aas
xchg
sub
mov
mov
imul
dec
push
dec
cmps
mov
pop
jo
mov
push
imul
lea
inc
fwait
ror
push
stos
mov
nop
sub
outs
gs
aaa
ret
iret
mov
sub
xchg
mov
mov
ja
inc
imul
ja
and
outs
shr
mov
and
ins
push
aaa
add
pop
mov
sub
add
(bad)
and
pop
mov
sbb
pusha
pop
adc
jmp
pop
cmps
inc
addr16
push
adc
push
fld
and
push
pusha
ret
inc
jg
adc
movs
mov
nop
add
mov
push
cmps
add
iret
xchg
dec
xor
call
dec
inc
add
add
mov
dec
inc
fnstcw
adc
and
outs
imul
jae
or
xchg
xchg
add
mov
movs
add
sub
add
dec
jmp
ja
lea
add
cmp
jmp
xlat
inc
adc
inc
int3
repz
lss
pop
lods
nop
into
add
not
out
sbb
cld
enter
push
pop
imul
jecxz
mov
or
pop
ja
cld
push
sub
outs
xor
push
add
pop
push
inc
ret
out
inc
add
adc
and
adc
inc
mov
aam
loope
push
fist
push
xchg
dec
ror
fwait
push
mov
dec
and
and
lds
jnp
mov
stos
out
lahf
mov
or
lahf
pop
or
das
pop
or
ror
pop
adc
das
in
scas
jecxz
push
inc
test
mov
sub
push
push
ret
call
and
inc
loopne
stc
sub
out
inc
add
mov
jno
xor
push
mov
or
xchg
pop
cmps
push
jno
fsubrp
push
add
ficom
add
outs
(bad)
mov
and
cs
movs
fmul
cmp
jg
add
imul
test
arpl
inc
imul
push
mov
xchg
ror
(bad)
jmp
add
shr
add
sbb
mov
test
pop
pop
dec
adc
js
inc
ins
jo
adc
(bad)
cmp
clc
xor
jmp
pop
hlt
loopne
xchg
sub
fbstp
xchg
xor
xor
mov
jb
in
adc
mov
push
mov
mov
pop
or
pusha
jne
or
push
jb
sbb
inc
sti
push
and
push
sub
xlat
inc
or
jl
mov
xchg
sub
in
and
push
mov
jle
add
mov
sub
add
sub
daa
xchg
pop
stos
inc
xor
pop
inc
(bad)
es
bound
in
add
out
ret
jno
cs
adc
push
test
xchg
and
push
arpl
pop
jecxz
dec
xchg
loopne
pop
pop
stos
dec
xchg
sbb
jmp
movs
rol
and
pop
or
dec
pop
sbb
sub
cmp
push
sub
add
pop
inc
ins
cmp
dec
push
add
jae
mov
mov
adc
sbb
mov
cmp
adc
adc
scas
adc
cmps
cmps
jmp
loopne
ds
xchg
push
inc
xchg
sub
outs
push
ret
mov
out
mov
inc
sbb
mov
cmps
add
(bad)
mov
push
mov
and
pop
inc
or
xrelease
imul
add
test
sub
add
jo
or
pop
das
sbb
mov
shl
or
ins
ret
shl
mov
xchg
and
jb
jecxz
and
loope
(bad)
out
vunpckhps
inc
je
and
or
rol
jb
pop
sub
push
sub
xor
sbb
inc
dec
loope
(bad)
inc
cmps
push
dec
pop
pusha
adc
shr
or
xchg
push
adc
xor
mov
push
sbb
jb
adc
popa
loopne
sub
adc
outs
jg
jae
test
das
and
sub
retf
mov
out
jbe
iret
sub
cmp
mov
adc
pop
pop
xor
pop
in
rol
push
imul
test
movs
dec
jmp
adc
add
mov
push
inc
sbb
or
mov
push
mov
int3
pop
push
push
jcxz
dec
int
jecxz
leave
push
mov
imul
(bad)
jmp
dec
jb
ret
arpl
or
adc
sub
mov
das
sub
ret
jbe
push
cwde
jb
pop
dec
lods
ret
je
or
adc
mov
retf
das
pop
lods
nop
xchg
das
jnp
shl
adc
daa
ret
popa
fdivr
cs
adc
lods
push
fadd
arpl
inc
cmps
push
xor
inc
adc
call
outs
jecxz
test
push
loope
shl
popa
dec
add
sti
fisttp
test
jae
out
rcl
dec
shl
das
ffree
outs
add
daa
mov
outs
cmps
sti
jge
push
push
(bad)
fwait
xchg
add
inc
ss
loope
dec
mov
popf
test
call
jae
inc
jbe
and
sbb
adc
aad
push
jmp
xchg
test
fidiv
rol
and
sub
vpcompressb
shl
arpl
push
pop
sbb
stos
addr16
sub
jb
adc
mov
imul
gs
add
and
inc
das
sub
pop
dec
test
push
(bad)
xor
inc
test
sbb
repz
mov
ds
sbb
shl
or
jg
aad
push
sub
mov
stos
and
push
fnsave
rol
sbb
movs
iret
xchg
xor
scas
out
ret
jnp
xor
sbb
inc
mov
mov
(bad)
push
bound
test
ret
pop
push
pop
sub
push
dec
(bad)
or
and
inc
scas
jae
cmp
inc
ja
out
shl
or
test
pop
ret
outs
xor
mov
or
arpl
xchg
enter
add
push
mov
ja
arpl
pop
stos
dec
(bad)
aas
mov
inc
xchg
mov
ja
ret
sbb
inc
or
sbb
or
adc
aas
ja
or
mov
mov
adc
daa
scas
out
or
das
adc
out
outs
nop
pop
mov
dec
sbb
xchg
mov
test
or
pop
out
fidiv
sub
pop
outs
mov
addr16
jg
fild
mov
sti
gs
nop
das
mov
sub
jmp
aam
push
loopne
mov
test
mov
fwait
mov
sub
adc
inc
(bad)
xchg
adc
cmp
repz
adc
cmp
popa
jnp
pop
push
ret
adc
jo
outs
fwait
push
popa
xlat
mov
push
push
mov
div
sub
fist
or
mov
(bad)
push
cmps
lods
mov
js
fs
push
shr
(bad)
stos
and
outs
sub
push
and
add
and
pop
push
or
jmp
inc
adc
ja
and
and
sbb
or
ins
xchg
and
mov
arpl
mov
addr16
lods
cmp
dec
inc
ins
mov
push
arpl
cmp
lods
rol
xor
sbb
movs
out
jmp
dec
mov
inc
mov
jmp
imul
inc
dec
add
and
xor
dec
nop
cmps
dec
push
adc
mov
push
dec
cmovbe
ror
inc
add
sbb
add
mov
mov
ins
call
or
sub
(bad)
sbb
inc
inc
sub
mov
xchg
sub
js
pop
cmp
cmp
bound
cmp
fldcw
arpl
adc
sbb
jecxz
jecxz
jecxz
popa
fmul
mov
add
inc
sbb
and
mov
cs
dec
sahf
push
xor
mov
mov
and
ja
adc
push
push
cmp
stos
fsubp
and
mov
xchg
sub
sti
xor
push
mov
sub
sub
ins
adc
xor
cmp
xor
cmp
xor
and
or
bound
xchg
adc
and
or
xor
xlat
add
adc
push
jl
mov
xor
shr
xor
bound
ins
lahf
ds
pop
add
dec
mov
add
fld
inc
xor
fild
pop
lahf
fiadd
or
cwde
ror
mov
mov
jecxz
cmp
sbb
mov
addr16
pop
mov
fwait
rcl
pop
push
pop
xor
add
mov
(bad)
imul
(bad)
sub
andnps
adc
xor
nop
jmp
scas
imul
mov
pop
cmp
jo
cmp
mov
cmps
inc
add
paddusb
daa
dec
scas
dec
or
lock
fwait
arpl
pusha
rcl
xor
mov
ss
cmp
and
jecxz
push
pop
shr
cmps
xchg
dec
pop
xlat
and
sub
mov
push
repz
push
and
repz
mov
nop
mov
inc
push
adc
lea
bound
imul
adc
mov
mov
pop
(bad)
pop
xchg
sbb
and
test
mov
dec
sub
sar
rol
and
or
mov
dec
mov
inc
mov
adc
pop
out
mov
lds
daa
jbe
aaa
push
loop
jl
scas
mov
push
adc
add
add
pop
xchg
data16
or
sbb
and
inc
ret
daa
(bad)
adc
dec
ss
and
cmp
test
add
aaa
mov
sub
mov
inc
cmp
and
jo
out
call
adc
xor
push
dec
das
ss
cmps
mov
adc
sub
adc
push
push
inc
and
mov
jmp
sub
stos
adc
pop
jno
test
inc
dec
push
xchg
jg
and
inc
pop
pop
inc
inc
ret
inc
daa
call
or
cmp
adc
sbb
adc
adc
aaa
call
mov
add
rcl
arpl
push
movs
stos
push
daa
iret
or
sub
aad
inc
mov
and
inc
ja
int
mov
(bad)
pop
adc
retf
dec
repz
add
add
xor
mov
adc
xchg
adc
cdq
out
add
add
call
and
push
jns
ja
ss
pop
sub
or
inc
(bad)
fs
aas
push
jl
and
pop
jg
cmp
add
cmps
aas
sbb
or
and
push
adc
inc
and
sbb
sbb
in
add
adc
cwde
sub
cmp
inc
call
dec
xor
aas
xor
cs
push
pop
and
xchg
arpl
pop
and
outs
outs
je
xchg
xor
push
je
xor
arpl
add
call
add
xchg
sbb
call
stos
fstp
push
fild
enter
ss
dec
xchg
stos
outs
popa
fistp
scas
or
xor
and
stos
push
ins
loop
jae
push
push
dec
and
adc
lods
fild
adc
shl
popa
and
ins
dec
scas
adc
loope
daa
and
sbb
outs
adc
mov
mov
mov
xor
push
adc
ins
ret
imul
dec
xor
and
lahf
or
loope
xor
sub
mov
mov
cmp
mov
cmps
je
(bad)
test
scas
retf
inc
rol
xchg
jmp
jg
cwde
nop
data16
ja
or
inc
fmul
(bad)
out
xor
movs
aad
sbb
jmp
lods
xchg
outs
repz
sub
sbb
xor
ror
mov
inc
cmp
sub
cld
stos
loope
das
add
sub
cmp
ror
jo
bound
inc
movs
adc
push
sub
add
adc
out
or
and
sub
mov
xadd
mov
push
rol
cs
or
jecxz
adc
mov
cmp
lahf
je
pop
shl
adc
or
inc
mov
and
test
dec
or
mov
ins
ucomiss
or
maskmovq
mul
mov
pop
sbb
add
cld
pop
fwait
outs
in
push
jne
test
inc
pop
aad
xor
pop
das
les
test
sub
(bad)
stos
xchg
fmul
and
imul
inc
cwde
pop
xchg
pop
outs
leave
sub
sbb
shl
les
loope
aaa
das
xor
sub
mov
push
sbb
jns
inc
push
fadd
mov
or
xchg
out
mov
adc
inc
and
or
imul
bound
pusha
sbb
and
imul
xchg
scas
add
ins
sub
sub
mov
shl
cs
lea
jecxz
jne
mov
add
sbb
bound
pop
retf
repz
mov
xor
xor
cmp
add
inc
or
imul
jle
stos
push
addr16
add
add
add
daa
mov
mov
or
imul
jns
daa
mov
and
mov
inc
sbb
dec
lahf
mov
ret
mov
dec
mov
push
jmp
inc
pop
xor
or
mov
and
test
jmp
aaa
popa
imul
cs
lock
dec
pop
out
out
sbb
fwait
mov
fstp
mov
mov
mul
pop
cmp
fwait
jns
jb
inc
xchg
adc
xchg
and
push
outs
outs
adc
bswap
and
ins
mov
adc
add
and
push
adc
jns
mov
jns
dec
push
neg
ja
inc
ins
dec
ins
addr16
or
mov
xor
ins
cmp
pop
pop
ret
das
lahf
jns
push
ss
mov
sbb
inc
mov
icebp
daa
sbb
jns
js
cmp
pop
imul
sti
ret
push
imul
pop
sbb
mov
push
pop
mov
ficomp
cs
mov
imul
jp
inc
hlt
(bad)
adc
mov
xchg
dec
mov
dec
out
sub
imul
and
and
mov
or
xor
jg
push
xchg
bt
(bad)
cld
xchg
fmul
mul
and
shl
je
mov
imul
imul
lods
cmp
out
stos
arpl
mov
dec
out
dec
xlat
mov
cmp
jmp
outs
in
sbb
sti
sub
adc
pusha
dec
(bad)
fistp
sub
mov
dec
imul
imul
xchg
mov
jb
popa
aas
cld
ret
jmp
fimul
das
loopne
cmp
cmp
xlat
jo
sti
jge
outs
stos
cld
xor
cmp
jbe
jecxz
pusha
jg
lahf
fwait
or
mov
jecxz
push
xchg
out
imul
pop
gs
pusha
nop
xchg
cmp
xor
cmp
pop
fs
std
cwde
or
sbb
mov
ffreep
jb
pop
imul
punpckldq
or
fsubr
addr16
mov
push
sub
jae
daa
sbb
mov
cmp
push
aad
fst
push
xchg
xor
(bad)
xor
mov
or
pop
jb
push
ret
cld
mov
sets
sbb
imul
and
mov
xlat
xchg
jae
inc
add
je
inc
les
outs
repz
sub
or
dec
adc
add
fbstp
sub
test
out
pop
xor
adc
imul
add
cmp
jnp
fdiv
retf
xchg
inc
ja
fs
pop
mov
or
daa
mov
pop
sub
mov
loop
mov
sbb
pop
scas
adc
inc
into
jp
daa
push
out
push
add
pop
out
add
adc
imul
xchg
xor
daa
or
cwde
xor
and
retf
jae
in
xor
call
dec
pop
mov
jae
jo
dec
cld
pop
inc
mov
repnz
cmp
dec
jecxz
cmp
push
xlat
es
mov
mov
ret
cmps
jnp
push
xor
pop
imul
seta
jnp
fbld
pop
xchg
js
mov
je
mov
inc
lahf
imul
jae
sbb
and
test
retf
and
dec
sub
mov
pop
mov
push
jge
mov
outs
addr16
pop
or
into
outs
das
dec
sahf
mov
or
cmps
scas
neg
outs
div
push
push
sub
rep
sbb
aas
daa
mov
pop
(bad)
arpl
push
loopne
stos
loopne
dec
arpl
pop
push
jl
pop
imul
pop
stos
sbb
retf
push
adc
imul
mov
sub
xchg
jnp
add
je
sbb
and
outs
dec
dec
add
(bad)
jecxz
dec
sub
sbb
lods
add
mov
int3
sbb
jns
jb
jg
jo
push
add
add
pusha
and
or
pop
sub
push
js
aad
mov
xchg
inc
pop
and
adc
xchg
mov
xchg
xor
add
sbb
mov
popa
inc
pop
pop
repnz
sahf
mov
jo
mov
and
comiss
cmp
cmps
(bad)
out
adc
push
dec
out
or
daa
sbb
inc
ror
and
xor
aas
inc
test
push
mov
ja
dec
(bad)
mov
pop
jle
add
mov
jl
ret
push
lods
jmp
add
repz
jne
xchg
shrd
dec
push
addr16
loopne
jo
xchg
jnp
ss
sahf
dec
jne
pop
and
sub
imul
xor
jecxz
fcomp
fucomi
outs
xor
jo
in
mov
ins
inc
dec
shr
inc
outs
ror
xor
ja
test
dec
push
popf
pop
test
scas
pop
cmp
loope
ja
jecxz
jns
dec
jo
fwait
push
mov
sub
push
ins
add
cli
lock
popa
dec
popa
xchg
dec
cmp
push
jb
es
ins
arpl
(bad)
push
cmps
in
out
add
jns
sub
imul
in
mov
imul
push
sysret
popa
stos
or
push
mov
call
add
add
and
mov
xchg
and
mov
retf
stos
mov
add
push
mov
sub
dec
sbb
mov
dec
mov
outs
shl
jne
(bad)
and
cmp
inc
out
add
inc
stos
jnp
add
mov
fs
push
lods
and
push
cmp
push
outs
outs
and
push
pop
pop
scas
push
add
adc
adc
push
push
jb
push
iret
shl
das
adc
shr
nop
movs
jmp
sti
ror
mov
repnz
xchg
stos
xchg
shr
test
pop
add
mov
rcl
dec
and
iret
je
cli
cli
and
and
stos
and
outs
pop
jg
fdivr
jecxz
addr16
out
imul
mov
jae
aas
sbb
jp
xor
sar
or
bound
pop
fnstenv
and
add
inc
and
test
mov
mov
xchg
sbb
dec
ret
ja
call
sbb
pop
add
adc
jae
xchg
dec
dec
ret
ja
xor
lahf
push
jae
retf
test
cmovle
xchg
jae
lods
pop
sbb
scas
or
push
test
mov
lea
pop
xor
int3
aad
bound
add
aaa
imul
ret
xchg
imul
sub
stos
mov
scas
iret
push
adc
push
cmp
mov
repz
iret
or
je
inc
repz
adc
fdiv
xor
inc
bound
push
(bad)
sbb
jle
xchg
imul
sub
lods
in
or
repz
dec
scas
or
shr
jnp
cmp
xchg
pop
scas
push
test
mov
lds
mov
rol
mov
jl
add
ja
pop
sbb
aas
sub
add
or
rcr
rol
and
or
and
mov
mov
retf
mov
dec
mov
fst
push
lahf
xchg
imul
rol
adc
imul
bound
(bad)
jns
outs
inc
pop
call
ja
or
dec
xchg
cmova
outs
cmps
sbb
inc
aas
mov
and
test
push
push
ins
mov
jg
adc
mov
das
pop
scas
jo
mov
fs
pusha
and
es
out
push
mov
xor
popa
or
xchg
add
inc
lods
dec
push
movs
or
sub
iret
sahf
ins
rcr
xchg
(bad)
pop
dec
cmp
inc
and
adc
pop
push
adc
push
dec
lods
pop
add
and
aad
imul
jb
or
movs
nop
push
fild
add
les
xor
adc
mov
aam
pop
je
pop
ret
mov
fild
cmp
pop
sbb
dec
xor
and
iret
and
aam
cmps
mov
nop
fisttp
xchg
inc
jle
mov
xor
arpl
and
dec
retf
sar
xchg
dec
lea
and
push
test
shr
popf
ja
push
retf
shr
mov
inc
cmp
xchg
push
jmp
mov
cmp
ss
mov
enter
aaa
pop
mov
ss
xor
repz
pop
push
fsubr
push
push
ins
enter
jl
push
(bad)
sbb
dec
push
xchg
jg
sti
outs
and
out
cmp
sbb
add
inc
push
or
xor
adc
xor
sub
fisubr
fsubr
imul
mov
mov
mov
xchg
sbb
lods
push
ja
or
aaa
imul
sbb
stos
or
iret
jne
and
leave
pusha
mov
stos
outs
push
das
push
es
dec
scas
push
lahf
push
test
inc
dec
jo
ja
and
xchg
out
jle
mov
pop
dec
xchg
mov
xor
call
mov
push
aam
push
mov
mov
push
add
retf
(bad)
fsubr
xor
aad
js
mov
outs
push
jne
mov
aaa
movs
outs
jmp
test
and
sbb
jnp
jecxz
je
pop
ss
cs
pop
push
repz
mov
out
sub
dec
(bad)
or
and
inc
xlat
aaa
jne
lds
adc
push
jb
fndisi(8087
pop
jo
dec
push
out
xor
cmp
fdiv
retf
pop
mov
push
dec
sub
loopne
adc
add
arpl
shr
ds
int3
jp
or
mov
add
inc
pusha
sub
sub
and
sub
pusha
and
pop
test
inc
mov
adc
sub
sbb
pusha
inc
xor
in
movs
out
jnp
sub
or
fstp
or
inc
and
pop
out
mov
test
les
ror
xchg
adc
or
imul
test
mov
push
push
shl
xor
push
test
jae
fxch
addr16
fidiv
imul
not
push
sub
jg
dec
push
loop
cmc
mov
jae
xchg
pop
mov
aaa
aaa
aam
pushf
and
dec
jae
mov
xor
add
sbb
dec
bound
vandnps
pop
pop
adc
xchg
(bad)
lock
das
cmp
add
es
push
arpl
adc
imul
sub
push
mov
sbb
outs
jmp
and
mov
dec
repz
jmp
das
enter
mov
test
dec
xchg
imul
push
fsub
cmps
repz
or
popa
jmp
arpl
outs
xchg
out
dec
jle
pop
xor
aaa
xor
push
mov
pop
pop
adc
sbb
inc
jcxz
cmp
mov
pop
jg
or
cmps
push
loope
data16
mov
aaa
mov
push
das
jmp
mov
fst
lods
pop
(bad)
or
arpl
fsubr
inc
jbe
out
pavgw
add
mov
test
push
pop
scas
pop
add
addr16
add
xlat
repnz
push
ret
push
inc
rcr
int3
cmp
jp
pop
test
sysenter
sub
push
jg
out
adc
sub
das
inc
sub
inc
inc
lahf
inc
push
aaa
jp
cmp
(bad)
out
dec
addr16
cmps
xor
out
imul
scas
jbe
fwait
inc
scas
loopne
mov
inc
ss
push
adc
adc
mov
pop
pop
repz
stos
xor
xchg
xchg
dec
pop
sbb
aas
inc
pop
push
jmp
rcl
rcpps
dec
cmp
or
xchg
int3
mov
daa
inc
int3
push
aad
cs
adc
add
rcl
xor
scas
sub
pop
xchg
jbe
cs
ss
push
das
int3
daa
mov
cmp
pop
pop
dec
icebp
lock
or
jl
bound
xchg
push
inc
push
ja
out
outs
xchg
test
inc
icebp
jge
xchg
ss
xor
lds
in
add
test
xor
test
test
dec
jnp
sbb
and
and
push
inc
mov
inc
xor
and
jo
or
scas
dec
cmp
ficom
dec
cmp
mov
add
(bad)
cmps
pop
inc
pop
das
and
sub
and
outs
cmp
daa
popf
stos
cmp
inc
xchg
lods
push
ror
or
rcr
imul
xchg
push
mov
cmp
and
(bad)
pop
(bad)
cdq
mov
fistp
das
dec
call
(bad)
outs
add
ret
cmps
popf
xor
ins
pop
mov
bound
mov
mov
inc
and
jnp
imul
inc
xchg
ins
pop
add
inc
inc
ja
push
repz
dec
pop
test
ins
mov
xchg
daa
pop
pop
pusha
ins
(bad)
outs
mov
sar
pop
jae
push
xor
fist
xor
ret
test
add
mov
jb
outs
inc
out
and
pop
lods
or
jno
jecxz
xor
sub
sub
pop
(bad)
sti
sub
sbb
dec
pop
ds
dec
dec
into
loop
add
call
push
loop
and
inc
mov
sub
dec
and
(bad)
xor
xlat
out
les
sti
and
cmp
sub
xchg
cs
cmp
sub
sub
(bad)
mov
sbb
adc
arpl
mov
dec
jmp
cmp
cmp
pop
and
xchg
das
cmp
stos
mov
or
and
xchg
sbb
sbb
pop
je
jmp
xchg
scas
pop
mov
fwait
inc
inc
sub
adc
dec
das
mov
ins
ja
sbb
mov
cmps
das
mov
stos
loop
and
daa
pop
mov
cmp
mov
stos
iret
push
inc
or
retf
mov
inc
cmps
das
mov
call
sbb
cmps
add
mov
retf
add
imul
out
je
inc
dec
push
or
cmp
imul
rcl
or
arpl
or
mov
pop
(bad)
fwait
pop
pop
inc
xchg
dec
cdq
or
push
inc
fcomip
mov
pop
mov
ja
rol
(bad)
test
outs
es
arpl
(bad)
cmp
pop
inc
mov
call
aaa
lahf
stos
sub
jp
add
add
int3
addr16
les
rcr
xchg
dec
adc
pop
push
iret
and
pop
mov
or
mov
addr16
aaa
bound
call
dec
dec
rcr
pusha
aaa
imul
ins
clc
xor
xchg
inc
inc
add
adc
ret
ror
rcl
retf
xor
jae
popa
dec
aaa
inc
sub
rcr
(bad)
fcmovne
mov
out
aaa
mov
xchg
inc
jae
in
cmp
sub
push
and
mov
and
ret
xor
cmp
inc
(bad)
jnp
sub
cmps
cmps
add
sahf
jb
pop
fwait
aaa
pop
add
pop
ds
jmp
mov
sti
dec
aaa
(bad)
cmp
sub
jne
pop
lods
inc
jg
arpl
cmp
sub
mov
arpl
add
mov
pop
and
and
mov
and
inc
call
and
cdq
jp
xchg
retf
mov
and
out
xchg
js
(bad)
or
call
outs
cdq
push
js
or
pop
inc
jge
add
leave
xlat
dec
push
outs
scas
in
fisttp
into
push
or
sahf
retf
das
in
adc
gs
sub
popa
pop
repnz
dec
jmp
inc
fld
arpl
sbb
xchg
inc
call
mov
adc
mov
sti
enter
or
repnz
sub
cld
inc
push
cmp
ins
imul
and
inc
push
sbb
jb
adc
in
jb
adc
data16
inc
(bad)
jae
xchg
movs
mov
dec
mov
ficomp
repnz
(bad)
push
xchg
popa
cmp
dec
cs
mov
loop
sahf
in
retf
mov
das
iret
loope
aam
and
add
and
and
pusha
pop
mov
sbb
mov
fwait
nop
rcl
jmp
add
stc
pop
test
push
push
test
ins
mov
retf
sar
mov
jmp
or
in
mov
xlat
xchg
ret
call
mov
in
jne
jmp
in
cmp
push
jecxz
enter
jge
jp
dec
enter
mov
jmp
arpl
imul
or
sbb
popf
or
push
in
shl
popa
or
jns
ins
maxps
pop
sahf
pop
sbb
mov
mov
repnz
adc
sbb
or
pause
ret
push
test
push
fwait
jmp
es
hlt
cmps
or
sub
mov
sbb
or
or
jne
xchg
adc
enter
int3
sub
and
push
sbb
xor
dec
outs
pop
jg
inc
add
inc
adc
es
adc
ss
dec
or
xor
cmp
push
pop
inc
call
mul
dec
push
cwde
and
mov
es
jnp
mov
rcr
lahf
(bad)
cmp
xlat
adc
and
or
(bad)
push
lahf
and
sbb
and
jo
mov
jb
fld
xchg
jae
adc
mov
and
es
pop
push
loop
mov
cmp
jg
and
mov
push
jl
sbb
pop
lahf
rol
dec
xchg
icebp
jp
inc
cmp
pop
mov
pop
inc
xchg
retf
inc
mov
outs
xor
ja
inc
sbb
cmp
loop
dec
sbb
stos
mov
aaa
and
jae
cmp
and
push
ins
adc
xchg
sbb
dec
adc
fs
push
adc
sbb
add
fcmovnb
or
and
and
push
inc
push
sbb
and
out
pop
xchg
xor
or
and
and
push
(bad)
outs
leave
or
mov
and
adc
push
dec
adc
push
push
lahf
sbb
ret
sub
pop
xor
cmp
or
les
xor
and
push
push
cmp
mov
ret
push
xor
cmp
sbb
dec
(bad)
xor
data16
ret
pop
dec
pop
cmp
loopne
add
xchg
out
arpl
mov
lahf
in
pusha
sub
mov
mov
fild
arpl
pcmpgtd
bound
inc
dec
push
and
or
stc
cmps
dec
inc
inc
aaa
nop
nop
or
sbb
and
cmp
inc
xor
cmp
cwde
mov
sbb
inc
pop
push
push
dec
or
stos
adc
cmp
stos
and
pop
jbe
shr
nop
push
das
test
mov
mov
jecxz
inc
loop
sub
les
xchg
cmp
sbb
daa
cmps
mov
ja
scas
mov
mov
out
mov
loope
cmps
push
xchg
mov
adc
adc
or
sbb
rol
jmp
sbb
or
push
jmp
inc
sbb
cmp
test
stos
cmp
xor
or
xchg
inc
mov
or
jns
jp
icebp
shl
push
mov
fadd
or
popa
push
(bad)
cmp
xchg
in
or
cmp
pop
jno
pop
and
ud2
movnti
inc
fs
pop
ds
inc
inc
sub
xchg
pop
inc
dec
ret
iret
cmp
adc
jb
inc
jle
and
jg
dec
jecxz
xchg
lea
xchg
pushf
nop
ds
add
pop
inc
dec
adc
jg
mov
add
add
(bad)
and
mov
out
aaa
cmp
shl
mov
or
rcl
ret
mov
shl
inc
repz
dec
ins
ror
repz
arpl
or
cwde
sbb
inc
push
push
push
xor
mov
inc
dec
pop
mov
push
stos
jg
cwde
add
sub
inc
mov
(bad)
xor
push
pop
repz
out
idiv
lods
push
retf
outs
cmp
push
adc
jne
xchg
sar
repnz
fs
push
dec
mov
pop
sbb
jnp
popf
adc
push
ds
mov
loope
jne
imul
mov
and
retf
fnsave
ds
push
arpl
xchg
cmp
sub
lods
push
ins
mov
pop
dec
inc
dec
xor
mov
and
add
in
cmp
dec
inc
fstp
jo
aaa
add
stos
adc
shl
pop
push
cmp
sbb
push
inc
outs
inc
xchg
fidiv
mov
push
and
and
jp
add
sbb
or
outs
popa
inc
jb
movs
push
into
jmp
dec
das
dec
pop
and
cli
jecxz
imul
daa
or
div
push
ret
sti
(bad)
loope
jmp
jo
adc
adc
imul
cli
adc
outs
sbb
inc
pusha
jno
scas
aam
or
ret
rcl
push
ss
mov
fs
loopne
dec
into
je
mov
out
rol
(bad)
mov
adc
(bad)
ins
test
and
shl
jne
out
stc
addr16
leave
dec
lods
add
jae
ret
dec
add
mov
fist
stos
dec
and
(bad)
mov
fimul
sbb
sbb
push
outs
push
sbb
test
mov
pop
fmul
pusha
rol
add
or
dec
pop
sbb
dec
cmp
gs
loopne
inc
repz
dec
pop
xlat
xlat
js
in
push
outs
daa
arpl
ins
jg
(bad)
xor
fwait
or
arpl
fild
and
jmp
adc
addr16
cwde
ins
sbb
xchg
pop
mov
cmp
imul
inc
or
mov
sub
xchg
fist
bound
pusha
xor
xor
sbb
sub
ins
stos
out
xor
add
xchg
je
and
sbb
sub
or
add
xchg
cmps
dec
stos
adc
mov
shl
sbb
retf
and
int
nop
inc
sbb
cmp
push
push
add
cmp
and
xor
dec
push
je
test
push
movs
push
imul
dec
adc
sbb
test
push
pop
mov
(bad)
mov
dec
stos
adc
fistp
shl
mov
push
imul
pop
push
dec
retf
pop
ins
fadd
ins
jb
sti
jnp
rcl
inc
jnp
and
ret
mov
jae
jmp
mov
test
pop
addr16
inc
test
jae
xchg
test
jmp
xchg
or
movs
mov
rol
stos
xor
and
(bad)
dec
or
cmp
xor
sbb
add
fwait
popa
lods
or
repz
lahf
adc
push
mov
or
rol
pop
arpl
push
sbb
adc
mov
mov
and
and
lods
inc
xchg
jae
cmp
add
daa
retf
pop
adc
mov
and
daa
scas
jb
rol
jo
addr16
bound
(bad)
push
adc
lods
adc
cmps
sub
cwde
jg
jmp
ja
sbb
mov
aas
retf
jmp
popa
xor
pop
ins
mov
test
mov
popa
(bad)
mov
sub
and
or
push
pusha
retf
pop
retf
in
int
enter
push
shl
dec
arpl
push
dec
(bad)
xchg
pop
sub
loope
push
cwde
loop
push
dec
(bad)
dec
das
xlat
push
dec
inc
call
mov
cmp
fisttp
xor
arpl
push
cs
repz
fidiv
fisttp
push
xchg
outs
fchs
push
sub
movs
dec
pop
jb
push
outs
add
push
gs
cmps
and
je
imul
lahf
jmp
aaa
in
inc
sub
stos
and
add
jne
sbb
mov
pop
clc
(bad)
xchg
xchg
dec
fcmove
push
push
out
dec
push
into
std
or
pop
or
retf
xor
sub
inc
sbb
sbb
fist
fwait
and
sbb
out
cmp
pop
or
jns
adc
push
daa
adc
add
add
xchg
mov
stos
and
cmp
push
(bad)
sbb
sbb
cs
je
push
inc
mov
sahf
and
adc
mov
xor
ja
pop
ror
test
jo
mov
add
and
imul
gs
and
xor
sub
in
push
imul
scas
imul
cmps
and
mov
inc
call
lds
(bad)
inc
jae
xchg
and
das
sub
shr
fbstp
ss
inc
cmps
mov
pop
lahf
xchg
js
mov
or
mov
scas
pop
pop
push
repz
icebp
jnp
xchg
retf
push
jle
xor
es
mov
inc
xchg
pop
stos
pop
stos
inc
call
dec
arpl
shr
ins
sub
xchg
into
loope
jb
ins
sub
lods
bound
sub
inc
loopne
(bad)
push
out
add
jmp
imul
ja
push
nop
scas
dec
add
sub
xor
std
pop
add
mov
imul
pusha
cmp
push
call
rol
fwait
mov
icebp
mov
jp
ror
arpl
call
mul
outs
ss
and
jg
cmps
(bad)
sbb
jg
dec
inc
gs
shr
aas
loope
jo
(bad)
cmps
xor
je
imul
pop
imul
push
add
(bad)
cmps
adc
add
ins
scas
and
lods
loop
or
ins
adc
movs
push
pop
jg
sub
cs
cmp
pop
das
ror
rcpps
test
cmp
push
cmp
push
cmps
sbb
mov
add
push
dec
jbe
or
mov
sbb
mov
and
dec
push
retf
xor
add
or
xlat
inc
and
jecxz
rol
pop
jecxz
mov
enter
(bad)
ror
or
arpl
ins
xchg
daa
nop
xor
xchg
sahf
push
push
stos
add
xor
rcl
pop
jmp
sbb
dec
fwait
pop
pop
jecxz
pop
loope
imul
and
call
dec
lfs
jmp
mov
imul
imul
jbe
mov
jmp
xlat
jge
add
mov
mov
sbb
or
mov
arpl
add
popa
arpl
mov
sbb
jl
(bad)
imul
push
add
data16
mov
dec
cmps
sbb
(bad)
loop
inc
jecxz
je
jae
lahf
push
fdiv
cli
sahf
loopne
add
ins
repz
fnsave
xor
(bad)
mov
sbb
xor
sub
xchg
pusha
push
pop
aaa
jbe
lods
or
mov
fistp
xor
push
jb
cmp
adc
xchg
bound
in
fwait
mov
addr16
xchg
das
mov
ret
aad
outs
aaa
cmps
ds
jo
scas
(bad)
retf
aam
in
ficom
ja
add
adc
or
push
lock
mov
ret
ins
jnp
lods
add
and
pop
pop
mov
out
pop
inc
push
sub
xor
retf
fs
mov
fld
xchg
lahf
scas
loope
ins
and
mov
lods
aaa
jnp
js
add
cmp
cmps
pop
dec
jae
or
stc
(bad)
jg
pusha
push
xchg
add
add
add
add
(bad)
mov
mov
ret
pop
pop
jle
mov
rol
push
into
pop
imul
push
mov
scas
add
mov
(bad)
xchg
jg
outs
pop
fnsave
jmp
mov
lods
add
push
lods
sub
(bad)
mov
ja
mov
mov
je
mov
mov
mov
lods
sti
cmp
jbe
xchg
outs
mov
loopne
mov
scas
jae
mov
test
mov
push
cmp
imul
mov
push
and
sbb
cmp
int
mov
sub
fdivr
mov
push
mov
mov
and
js
out
cmp
ret
mov
call
cwde
sbb
sub
mov
or
ret
fistp
call
or
call
out
mov
retf
mov
or
loopne
mov
push
(bad)
scas
mov
icebp
pop
loop
(bad)
scas
ret
das
jbe
repz
lahf
mov
pop
out
cmp
lds
mov
pop
pop
dec
int
movs
dec
sahf
mov
mov
test
or
mov
shl
mov
fmulp
retf
inc
lods
pop
mov
jle
cmp
lahf
fcmovnb
cmps
movs
jp
xchg
int
fisttp
mov
(bad)
lahf
pop
add
neg
cld
mov
out
dec
int3
mov
sbb
ds
inc
pusha
inc
rcr
stos
lds
jmp
pop
scas
and
popa
addr16
scas
inc
pop
inc
lods
les
lds
jae
adc
fneni(8087
cmp
xchg
and
pop
les
jo
ret
xchg
int
push
jp
ror
lods
xchg
mov
mov
sbb
repz
sti
mov
xchg
shl
cmp
les
jmp
mov
jp
js
xor
or
xlat
mov
sbb
mov
call
(bad)
dec
(bad)
fidivr
rcr
pop
out
pop
pop
jne
scas
cmp
outs
mov
popf
push
push
push
xchg
mov
xor
jae
push
arpl
push
jae
call
clc
imul
xor
push
sub
daa
scas
or
int
mov
out
aad
jmp
sti
push
push
mov
dec
inc
fisubr
call
imul
mov
jb
mov
or
sub
jl
lods
fistp
adc
mov
adc
pop
ret
ret
inc
adc
ret
shl
sbb
sub
nop
add
cmp
in
cmp
cmp
pop
ss
hlt
lock
push
and
mov
mov
rol
mov
inc
popa
test
int
ror
ss
stos
adc
pop
ja
sub
int
lds
dec
adc
movs
push
enter
jg
xchg
in
sbb
and
lock
inc
leave
inc
das
add
xchg
sbb
adc
cmp
test
out
xchg
dec
int
jmp
pop
pop
loopne
stos
shr
dec
pop
cwde
out
pop
mov
lahf
jg
ins
aad
setae
ss
imul
ficom
rcr
push
pop
pop
mov
scas
adc
cmp
(bad)
mov
xor
ret
adc
ret
xchg
loop
xchg
or
xchg
dec
jnp
loopne
daa
pushf
or
mov
les
mov
(bad)
pop
mov
adc
jae
(bad)
repz
jecxz
fidivr
fwait
ss
inc
hlt
pop
jecxz
lahf
xchg
loop
dec
out
jmp
push
pop
scas
pop
daa
iret
es
cmps
inc
imul
div
sub
jae
cmps
addr16
mov
jmp
ret
sbb
mov
add
fistp
jae
push
cs
out
fild
fwait
not
pop
xor
sub
cmp
out
aaa
adc
add
bound
scas
fdiv
adc
int3
mov
push
mov
(bad)
sti
adc
stos
ss
adc
mov
(bad)
dec
lods
cmp
cmp
fwait
sbb
jnp
sub
or
push
and
shr
aaa
push
jnp
movs
scas
adc
mov
mov
mov
das
jns
movs
inc
xor
push
jno
das
xor
or
mov
adc
leave
or
fwait
push
(bad)
mov
clc
ret
jae
mov
mov
mov
mov
ror
mov
fbstp
ret
push
sub
xor
in
mov
mov
imul
aas
jb
fcmove
inc
mov
pop
(bad)
cmps
adc
lahf
add
les
call
cwde
cwde
shr
popa
and
test
pop
adc
outs
xchg
mov
push
outs
pop
or
mov
mov
sub
xor
imul
ja
sbb
push
push
jo
xor
aaa
jecxz
aam
or
mov
jne
jae
push
inc
(bad)
gs
scas
ret
ins
push
dec
mov
pop
ins
dec
adc
loopne
sbb
sbb
stos
sub
data16
dec
ret
out
outs
cmp
inc
stos
pop
pop
pop
sub
pusha
shl
bound
cmp
fwait
inc
push
pop
adc
push
imul
stos
ret
sbb
ret
xchg
jno
arpl
(bad)
(bad)
jo
mov
fisttp
adc
or
std
add
lds
jecxz
adc
js
das
sti
fisubr
(bad)
test
arpl
xchg
mov
xchg
test
lahf
addr16
jb
xchg
push
dec
fwait
push
out
xor
jg
mov
push
inc
mov
and
aad
xor
mov
(bad)
bound
adc
push
sub
aaa
sbb
imul
aaa
(bad)
daa
mov
cmp
mov
jmp
pop
fist
and
add
cmps
lods
ja
push
sbb
das
mov
xor
rcr
add
rcl
fist
mov
push
mov
ds
jns
aaa
and
pop
adc
addr16
jg
pop
push
cmp
movs
or
inc
jecxz
mov
imul
mov
push
repz
xor
loop
or
xchg
test
cmps
fbstp
pop
pop
sub
(bad)
dec
push
lods
sti
das
outs
ja
lods
jne
stos
jmp
jnp
dec
jne
add
aas
popa
sbb
push
sub
dec
dec
or
aaa
cdq
pusha
mov
xchg
pop
je
inc
lods
loopne
pop
fs
jp
fiadd
imul
aam
and
inc
imul
aas
outs
xor
push
sbb
add
mov
pop
cmp
cmps
fwait
retf
mov
arpl
mov
jbe
push
jae
xor
cmp
bound
aaa
push
inc
lods
and
mov
xchg
dec
leave
imul
leave
xchg
dec
imul
push
enter
xchg
push
jns
dec
outs
add
and
push
cmps
push
js
cmp
dec
jp
or
xchg
push
dec
xrelease
jg
repnz
cmps
adc
rol
pop
sub
(bad)
fild
jmp
mov
ins
pop
sbb
add
xchg
xchg
cmp
jb
shl
popa
pop
add
stos
push
iret
retf
mov
push
test
push
pop
outs
imul
and
or
push
mov
xor
push
dec
les
jecxz
nop
lods
lahf
sti
bound
sub
cmp
mov
push
out
mov
inc
mov
dec
aaa
rol
jmp
adc
mov
mov
jg
mov
pop
inc
pop
mov
mov
mov
loope
aaa
jne
jae
push
jmp
rcl
ins
int3
mov
aaa
imul
push
push
je
inc
sbb
ret
cmp
jns
iret
movs
and
les
fs
jne
jmp
das
sbb
or
ret
sbb
stos
sub
add
repnz
push
inc
mov
mov
mov
mov
ss
(bad)
mov
inc
jae
out
sbb
and
ins
xchg
mov
iret
pop
bound
(bad)
dec
loope
jnp
lahf
pop
cwde
cwde
push
dec
shr
pop
inc
pop
xchg
imul
pop
ja
jne
mov
and
push
jge
jnp
aas
(bad)
aas
adc
push
add
out
int
push
xchg
add
rol
and
fiadd
(bad)
(bad)
jns
jmp
es
loopne
aad
mov
add
retf
rol
sub
aam
dec
xchg
rcr
idiv
fadd
fld
dec
jmp
lahf
shl
cmp
sub
fistp
aaa
fdivr
jmp
call
xlat
pop
test
in
jg
cmps
out
fidivr
pop
cmp
ds
movs
push
push
mov
loop
xlat
dec
idiv
fiadd
adc
out
(bad)
xchg
call
sbb
or
mov
call
xchg
cmc
pop
jae
push
xor
aam
out
outs
or
daa
lahf
aam
dec
pushf
xlat
mov
jle
push
scas
or
sbb
mov
jne
push
adc
cs
fcomi
paddsw
sbb
jb
pop
adc
out
pop
jp
loopne
int
out
and
xchg
push
cmp
fdivr
rcr
fsub
sbb
rcr
arpl
sbb
aas
fwait
(bad)
(bad)
mov
das
fwait
jecxz
xchg
xchg
xchg
shr
(bad)
cmp
inc
xchg
pop
jnp
mov
or
lds
das
add
iret
xchg
cs
mov
push
mov
rcl
lock
push
xchg
fadd
aam
push
ja
push
fsub
pop
dec
add
mov
loop
inc
mov
fld
inc
fild
stos
arpl
inc
add
and
jmp
sbb
imul
push
or
iret
call
or
(bad)
aad
ffree
and
jae
pop
add
push
aaa
dec
aad
xchg
cmp
clc
aas
xlat
fwait
aad
out
loop
mov
fisttp
dec
shr
popa
xchg
sub
jae
rcr
retf
push
mov
(bad)
rcl
sbb
test
sbb
xchg
dec
push
xlat
xlat
ins
femms
xchg
xlat
sar
adc
pop
mov
sahf
addr16
es
scas
mov
dec
inc
lock
xchg
sub
ja
dec
or
pop
(bad)
sub
rol
shl
sar
(bad)
push
add
mov
pop
cs
das
cmp
or
cwde
jmp
sub
fcomp
cmp
arpl
fnstenv
push
pop
and
cmp
in
cmp
imul
inc
fwait
push
aaa
sub
or
loope
inc
out
cmp
jg
mov
adc
pop
xlat
bound
xchg
(bad)
shl
dec
nop
and
aam
das
add
cmc
scas
inc
mov
pop
sbb
xor
ficom
aad
cdq
mov
fcmovnbe
fwait
or
push
jecxz
push
ret
aam
loopne
cmp
shr
add
xchg
mov
test
mov
mov
jmp
rcl
jmp
lods
popa
xchg
jecxz
and
ret
or
pop
jno
fsub
xor
fiadd
or
pop
outs
ret
mov
fisttp
js
movs
jae
bnd
mov
iret
imul
aaa
ret
or
fldcw
aam
and
and
in
cmc
mov
loope
out
cmp
ja
sub
mov
(bad)
or
xor
test
fldenv
add
add
dec
(bad)
pop
jo
xlat
call
pusha
add
loopne
outs
xchg
iret
mov
cmp
push
repnz
shl
dec
fstp
fldenv
les
icebp
aas
iret
xchg
push
add
xchg
sti
test
and
daa
push
daa
pop
xchg
sar
mov
jg
dec
xchg
pop
push
std
or
pop
fwait
loop
(bad)
and
fldcw
loop
mov
sbb
imul
and
ret
popa
push
add
sti
mov
in
aad
repz
or
dec
test
add
sti
repz
push
and
xor
push
dec
push
sbb
pop
dec
push
inc
push
es
mov
push
sbb
pop
mov
and
cmp
adc
xor
inc
push
adc
dec
popa
mov
ds
push
cmp
jnp
push
sub
sub
(bad)
jo
out
sub
jnp
ins
(bad)
pop
xor
push
jb
pop
push
imul
xor
adc
xor
fcmovu
cmp
sbb
sbb
adc
sub
dec
mov
iret
push
sbb
and
test
add
das
mov
sub
aam
rol
cmp
push
or
ret
dec
iret
add
adc
xlat
loope
and
xchg
jp
arpl
stos
xor
xor
fimul
aas
inc
push
or
and
in
push
push
cmp
dec
jecxz
in
fimul
or
inc
xor
mov
loop
and
mov
(bad)
push
sub
add
faddp
mov
push
into
add
pop
cmp
retf
pop
jnp
in
sbb
outs
and
push
(bad)
cwde
popa
pop
adc
inc
lods
js
adc
mov
jbe
(bad)
rol
dec
and
cmp
mov
push
dec
inc
jg
dec
sub
push
fistp
inc
sub
dec
movs
imul
mov
add
sbb
and
sbb
mov
and
cmp
xor
loopne
jno
xor
adc
loop
lods
jg
xchg
arpl
cmp
scas
xlat
fiadd
call
xchg
or
inc
cmps
bound
outs
sub
inc
sbb
add
inc
and
cmps
adc
pop
mov
inc
add
push
sub
mov
fnsave
push
add
fwait
and
or
jae
sbb
jb
and
push
pop
test
addr16
iret
jnp
add
xor
pop
shl
xor
or
push
pop
mov
and
push
cmp
cmp
aaa
(bad)
fbstp
fwait
imul
mov
xor
loop
fisttp
dec
and
xchg
and
dec
lahf
jnp
loopne
pop
and
mov
push
add
and
pop
ss
inc
cmp
jae
pop
imul
ja
push
aas
sbb
arpl
add
pop
push
mov
and
fcomi
xchg
sub
imul
out
fisttp
aaa
fisub
rol
cs
jae
retf
es
das
cmp
xor
pop
bound
rcr
and
xor
pop
popa
and
ror
inc
das
or
daa
or
sbb
adc
pop
or
cmp
fnclex
push
jl
sbb
adc
out
neg
xchg
pop
(bad)
ficom
or
jnp
or
xchg
arpl
(bad)
sub
sub
ret
pop
imul
ret
pop
arpl
(bad)
xlat
sbb
pop
jle
mov
jnp
push
aas
out
es
btc
mov
scas
pop
pop
popa
rol
shl
pop
and
cmp
xor
push
icebp
add
dec
div
push
loop
add
xor
jae
arpl
and
and
add
add
and
mov
mov
adc
inc
inc
mov
and
push
adc
mov
push
mov
arpl
rol
pusha
adc
dec
sbb
rol
pop
cmps
sbb
stos
or
inc
test
mov
pop
mov
(bad)
pop
fimul
add
or
push
inc
xchg
stos
mov
repz
sub
sbb
jbe
pop
outs
xchg
mov
cs
sbb
dec
pop
fisubr
xchg
push
retf
adc
daa
pop
mov
loopne
aaa
and
sahf
loopne
push
stos
pop
adc
push
fiadd
out
test
js
cmps
mov
dec
out
into
sub
ds
xor
jnp
mov
and
adc
addr16
scas
mov
ret
inc
push
rol
movs
xchg
retf
push
jb
pop
dec
mov
ins
adc
(bad)
and
mov
push
pop
int
mov
stos
adc
(bad)
push
outs
(bad)
je
add
jo
jb
pop
or
pop
jmp
outs
and
stos
inc
jae
push
repnz
adc
inc
ins
lods
fcmove
fist
pop
push
out
movs
or
xchg
mov
adc
xor
mov
test
xor
xchg
push
retf
aad
bound
inc
jae
or
and
adc
lods
repnz
ins
jecxz
or
test
pop
aas
inc
ins
lods
mov
adc
inc
xor
pusha
and
arpl
mov
retf
add
inc
aam
retf
je
mov
push
adc
mov
shr
and
rol
xlat
loop
xor
leave
lds
scas
imul
loop
push
es
jg
arpl
ror
arpl
mov
fwait
imul
inc
or
outs
sbb
scas
retf
add
ja
jae
dec
push
dec
(bad)
jmp
imul
adc
mov
loopne
adc
fbld
jecxz
fidivr
jg
sbb
inc
inc
xor
dec
pop
sub
imul
mov
mov
inc
rcl
sub
push
jecxz
xor
dec
dec
aad
xor
ss
vcvttps2dq
push
ins
adc
adc
test
mov
cmps
fs
jae
fs
cmps
fs
jae
push
nop
sub
mov
call
or
fs
and
push
or
push
lea
xchg
dec
jbe
nop
pusha
xchg
rol
mov
cmp
sbb
cmp
and
fs
jo
and
sub
push
stos
sub
inc
sub
lods
push
push
(bad)
pop
mov
mov
cdq
sub
fcomp
(bad)
ret
add
imul
cmps
mov
sar
jo
xor
rcr
lea
xor
pcmpeqw
addr16
pop
outs
sub
mov
push
jb
xor
je
pop
xor
jne
xlat
outs
(bad)
mov
imul
out
push
sub
ficom
jo
sbb
(bad)
leave
push
and
(bad)
shr
jecxz
adc
xchg
imul
jno
mov
sub
sub
mov
nop
dec
ret
(bad)
mov
imul
push
jb
scas
push
xchg
push
ja
push
inc
or
sub
popf
inc
cmp
shr
pop
adc
imul
push
inc
inc
jecxz
add
cdq
inc
inc
mov
sbb
ret
fistp
dec
push
ss
or
cs
mov
xor
push
jmp
cdq
inc
pop
xor
cmp
lock
(bad)
cmp
je
cmp
ficomp
push
out
cmp
test
or
xchg
sub
ins
add
cmp
div
push
cmp
out
mov
fwait
sbb
arpl
test
ja
sbb
(bad)
cmp
jnp
pop
mov
push
out
cmps
sbb
mov
cmp
mov
scas
jmp
or
or
addr16
dec
and
fs
dec
scas
and
and
mov
neg
imul
cmp
pop
or
ins
jnp
jg
xor
sbb
cmp
fwait
push
xchg
test
jnp
stos
(bad)
pop
ret
scas
outs
fdiv
test
repz
mov
jle
cmps
cmp
cmp
xchg
jmp
fwait
inc
call
and
out
rol
push
cmp
pop
mov
xor
xchg
adc
push
push
and
pop
(bad)
sbb
mov
lahf
xlat
sbb
inc
stos
es
push
ret
ret
inc
fsub
popa
shr
imul
lds
mov
pop
xchg
nop
xchg
test
daa
test
dec
scas
xchg
and
sub
push
mov
scas
dec
das
rcl
add
or
mov
inc
or
scas
iret
and
call
or
mov
pop
inc
outs
pop
in
rcr
addr16
lods
(bad)
cmp
xchg
mov
repnz
xchg
sub
mov
inc
push
jl
jo
imul
fist
jg
ds
push
xlat
aaa
push
cmc
sbb
xchg
scas
xor
loopne
ds
cmp
inc
outs
xor
ja
inc
(bad)
jecxz
mov
xchg
arpl
cmp
fild
jg
xlat
push
push
jp
out
jecxz
and
xlat
cmps
movs
out
cmp
cmp
inc
ret
inc
cmp
inc
sahf
mov
movs
fcmovnb
and
cmp
push
nop
push
jecxz
and
xchg
ja
es
inc
sbb
add
fbstp
ja
cmp
call
aad
pop
xor
xchg
mov
rol
adc
sbb
in
jle
and
pop
jno
imul
test
bound
sub
mov
xchg
mov
idiv
rcl
inc
test
push
adc
fwait
push
push
lds
adc
cmp
mul
(bad)
xor
je
mov
pop
dec
mov
mov
pop
adc
daa
sbb
call
and
stos
inc
stos
rol
popa
shl
mov
aas
sub
add
lods
xchg
push
xlat
mov
inc
dec
jmp
loop
cmp
cmp
pop
mov
retf
push
xor
or
(bad)
fild
mov
mov
or
(bad)
cmp
adc
lds
mov
ja
sub
sub
jnp
pop
cmp
ss
mov
sti
loope
ja
out
cmp
das
xchg
sbb
(bad)
div
pop
sbb
mov
add
push
out
or
pushf
cmp
cmps
(bad)
jecxz
dec
test
js
dec
imul
or
sbb
pop
dec
add
xor
pandn
mov
mul
xchg
fs
iret
aaa
pop
adc
dec
(bad)
mov
and
dec
or
mov
pop
inc
sub
and
jnp
mov
dec
inc
fwait
cmp
jo
sub
push
mov
repz
outs
dec
mov
and
inc
out
push
dec
mov
in
pop
popa
inc
cmps
ret
inc
iret
cmp
(bad)
les
add
outs
dec
and
push
loop
cmp
cmp
(bad)
add
push
pop
fs
push
push
or
movs
enter
call
mov
sub
addr16
push
add
adc
or
and
out
push
mov
jb
and
sti
jmp
push
mov
cmp
btr
imul
js
lods
(bad)
pop
add
fsubr
sbb
je
nop
lock
out
and
mov
mov
arpl
sbb
add
sub
jnp
jae
pop
jmp
add
jne
sbb
popa
push
push
pop
pop
rol
push
mov
xchg
rcl
sub
addr16
imul
cmp
call
push
sub
ficom
fwait
lahf
not
mov
jo
outs
push
lods
dec
popa
(bad)
dec
add
sbb
gs
inc
neg
das
push
imul
addr16
push
and
daa
sub
stos
out
xchg
mov
and
cmp
or
mov
mov
xchg
mov
inc
sbb
jecxz
iret
(bad)
stos
arpl
adc
add
add
div
bt
jb
jp
sbb
push
repz
ins
and
mov
add
push
in
lahf
and
push
(bad)
mov
pop
mov
imul
loopne
imul
pop
mul
sbb
jns
add
mov
leave
add
fild
out
scas
adc
sbb
sbb
jbe
push
lods
aaa
push
aaa
mov
hlt
and
cld
or
add
sbb
add
inc
mov
inc
sbb
and
aad
ror
cli
bound
das
mov
cmps
dec
push
out
rol
cmp
cld
imul
scas
xlat
sbb
in
repz
xchg
test
mov
xor
jmp
mov
aas
pop
bsr
int
ins
addr16
jp
jae
jp
cmp
imul
xchg
pop
fsubr
jbe
adc
stos
and
cli
imul
and
nop
and
dec
outs
xchg
jg
(bad)
adc
xor
push
pop
jbe
jb
pop
add
push
repz
gs
pop
out
push
ins
(bad)
mov
pop
daa
(bad)
call
jp
stos
inc
mov
test
rcl
or
pusha
jns
push
ins
jge
nop
mov
or
sub
cmp
mov
or
push
pop
adc
shl
test
add
fisubr
vaddss
jo
or
loopne
mov
pop
and
mov
mov
outs
pop
outs
pop
out
push
mov
dec
out
ret
push
and
xor
(bad)
dec
(bad)
or
pop
push
sbb
pop
mov
jb
jo
or
push
mov
xchg
push
out
add
inc
jno
scas
sti
imul
popa
mov
sub
(bad)
sbb
out
xlat
xlat
pop
adc
outs
call
popf
mov
xchg
and
or
ins
or
in
push
xor
push
repz
arpl
(bad)
popa
sbb
add
sub
bound
add
outs
into
jecxz
jno
jbe
fnsave
add
add
pop
loope
adc
or
push
add
and
ins
fbstp
pop
test
arpl
addr16
or
mov
mov
mov
vmread
je
dec
inc
push
cdq
lock
data16
call
push
dec
outs
sub
sub
call
aaa
data16
shl
jnp
mov
xchg
mov
(bad)
bound
ins
cmps
outs
mov
mov
imul
ins
mov
pop
mov
pusha
xchg
sub
jmp
fwait
cld
es
test
and
inc
test
or
add
sub
xchg
push
xchg
sub
pop
shr
push
add
adc
stos
bound
inc
and
mov
push
xlat
push
outs
push
add
pushf
clc
arpl
fcomi
aas
test
sbb
xchg
xor
sub
stos
or
call
das
mov
outs
mov
sbb
sar
(bad)
and
pop
sub
push
mov
jnp
push
adc
mov
add
enter
and
push
adc
dec
adc
movs
ret
pop
jg
pop
jnp
lds
in
push
(bad)
or
lods
add
je
cmp
(bad)
imul
and
pop
inc
inc
(bad)
jg
mov
cwde
mov
dec
js
and
call
and
fst
pop
aad
ret
and
fwait
je
aam
pop
sbb
bound
rol
(bad)
ja
or
jl
aaa
repz
push
add
pop
mov
or
mov
out
and
lods
ja
(bad)
cmp
or
ror
(bad)
xor
pop
into
(bad)
loopne
cmc
mov
pusha
aad
scas
xchg
(bad)
out
pop
cmp
aas
mov
(bad)
int3
mov
mov
mov
mov
enter
or
shr
xor
dec
test
push
jg
fadd
sbb
(bad)
mov
mov
jbe
iret
mov
fild
mul
xor
and
pop
ins
push
ins
xchg
lahf
pusha
mov
test
xchg
jae
(bad)
sar
and
add
shl
inc
ficom
cmp
hlt
rcl
mov
dec
inc
ja
pop
mov
adc
push
scas
adc
mov
mov
movs
mov
pop
test
loop
test
mov
leave
shr
cs
add
repnz
pop
sar
or
les
rcr
mov
mov
mov
lock
(bad)
pop
inc
(bad)
(bad)
mov
(bad)
jno
rcl
movs
into
stc
(bad)
xchg
mov
pop
int
mov
aad
ficomp
(bad)
mov
movs
mov
data16
lods
sub
(bad)
adc
repz
(bad)
pop
movs
push
or
outs
push
icebp
push
and
jae
mov
mov
lods
mov
mov
mov
es
adc
adc
and
scas
leave
aaa
push
call
je
cld
enter
jmp
leave
mov
pusha
mov
pop
dec
jb
cs
and
jno
dec
pop
sub
outs
mov
arpl
daa
dec
mov
(bad)
pop
rcr
pushf
jns
call
push
xor
cmps
js
and
outs
adc
push
lds
(bad)
and
in
push
(bad)
add
sti
xchg
mov
inc
das
mov
or
sub
sbb
(bad)
push
outs
aad
push
jle
and
(bad)
jno
fsub
div
ret
rcl
mov
jp
jae
popf
xchg
sbb
push
and
lahf
and
test
shr
pop
sbb
xchg
out
adc
movlps
ffree
xor
adc
jl
cwde
mov
mov
jo
(bad)
push
arpl
dec
pop
push
pusha
xor
ds
vsubpd
push
jnp
xor
pop
xchg
cmp
mov
mov
dec
xchg
out
jl
or
sub
cmps
dec
lods
jge
push
add
pusha
fnstenv
push
iret
sbb
sub
das
lods
ror
push
mov
fiadd
cmp
mov
mov
inc
ficom
inc
idiv
jmp
into
call
push
shr
imul
cmp
jp
outs
or
out
mov
push
sub
or
sbb
js
jo
int3
adc
sub
lds
inc
dec
retf
lock
loopne
push
addr16
adc
jnp
retf
mov
fisttp
loopne
aam
xor
push
push
add
and
push
xchg
pop
add
adc
or
pop
add
push
jnp
add
sbb
and
dec
lods
xchg
pop
repz
mov
aaa
jo
movs
pop
sti
adc
lods
pop
inc
sub
pop
add
dec
add
jnp
ffreep
movs
or
imul
je
add
sbb
sbb
xor
retf
sbb
sub
mov
push
push
sbb
and
or
or
adc
sub
xlat
add
test
sub
xchg
or
inc
add
sub
test
ret
ss
add
mov
sbb
mov
aam
lds
and
(bad)
sbb
mov
data16
lods
inc
and
scas
add
fdiv
mov
add
push
and
les
sbb
sbb
mov
jl
pop
push
and
pop
pushf
rcl
jne
sbb
ins
pcmpgtd
jo
mov
das
ins
mov
je
or
iret
dec
add
bound
cdq
or
stos
and
xor
push
add
(bad)
or
jne
movs
mov
or
imul
or
add
mov
and
cwde
cmp
addr16
pop
mov
fucomip
cmps
mov
call
and
mov
pop
mov
dec
jae
xor
adc
pop
repz
inc
mov
jecxz
dec
or
cmp
jmp
adc
jne
or
jmp
dec
clc
outs
sbb
(bad)
xchg
lock
arpl
fist
inc
stos
test
aas
imul
sub
and
inc
aaa
fbld
lods
or
or
jmp
leave
(bad)
punpckldq
xlat
aas
outs
xor
retf
loop
fwait
inc
iret
sub
fdiv
je
outs
popa
xor
add
iret
sbb
test
arpl
int3
fcom
test
sbb
lock
jae
dec
jne
mov
cmps
jbe
push
jne
xchg
xchg
mov
cmp
and
xor
loop
xchg
dec
sub
jne
ret
jnp
sub
xor
sub
(bad)
xlat
es
mov
xor
mov
scas
sub
test
inc
mov
sub
xor
or
imul
loope
call
rol
lods
mov
or
or
jmp
push
cmps
adc
jecxz
jne
dec
pop
frstor
sbb
sub
pop
sti
sbb
pop
dec
repz
addr16
sbb
cmps
or
in
xchg
xchg
mov
test
xor
mov
push
repz
mov
mov
ins
cs
cmc
fsub
loop
inc
inc
push
arpl
ret
sbb
pop
ja
push
sub
or
push
popa
iret
or
mov
imul
inc
rol
cmp
fwait
push
xchg
xchg
je
pop
fbstp
and
cmp
sub
in
mov
rol
cdq
mov
push
arpl
ins
sub
cmp
dec
(bad)
int
inc
outs
inc
mov
mov
inc
pop
ja
push
repz
xchg
sub
xchg
inc
das
xor
and
push
pusha
retf
xchg
and
fsubr
and
stos
mov
inc
pop
arpl
(bad)
mov
pop
jne
pop
mov
mov
dec
push
iret
stos
pop
xchg
mov
shr
and
adc
mov
or
sbb
xor
push
jmp
mov
inc
(bad)
cs
pcmpeqw
outs
inc
jo
cmp
inc
mov
sbb
pop
add
sub
test
jae
push
imul
mov
dec
or
adc
test
retf
gs
push
xor
rcr
mov
jle
sbb
cmps
cs
adc
rol
cmovbe
int3
push
mov
(bad)
and
inc
xor
aad
sbb
outs
pop
xor
mov
imul
dec
push
ret
out
ins
push
inc
inc
sub
sub
mov
jnp
adc
xor
test
pop
shl
ret
jnp
inc
mov
add
ss
inc
xchg
jns
dec
mov
push
add
xchg
dec
test
adc
inc
push
stos
add
cmp
rcl
xor
inc
sub
es
mov
inc
sar
xor
test
and
cmp
pusha
or
iret
xor
shl
mov
arpl
(bad)
cmps
sbb
cs
mov
pop
icebp
loop
cvtpi2ps
int3
pop
neg
fidiv
ds
pop
mov
adc
sub
jae
js
inc
ss
inc
ja
sar
movs
mov
xchg
xchg
test
jmp
cmp
aaa
sbb
jp
adc
or
inc
add
into
xor
adc
or
pop
xor
loopne
inc
rol
das
dec
dec
stos
add
das
xchg
push
popa
scas
xchg
sbb
push
or
sbb
mov
je
sub
iret
lahf
inc
add
jo
and
or
call
xor
ror
ss
pmovmskb
push
push
mov
xchg
mov
mul
add
mov
pop
arpl
pop
inc
sub
xor
jmp
mov
mov
xor
xor
push
mov
cli
mov
(bad)
xor
jle
(bad)
xlat
movs
rcl
aam
or
adc
cmp
sbb
dec
pop
sbb
fwait
jg
or
jnp
jnp
pop
xor
jp
pop
add
jns
adc
scas
fucomip
dec
lahf
push
dec
ss
sahf
int3
out
or
pop
ret
aas
add
mov
loopne
xor
xor
scas
sbb
pop
jnp
and
ja
or
es
das
jb
and
adc
xor
aad
cmp
dec
sub
sub
aas
mov
xor
lods
pop
imul
(bad)
push
jecxz
xor
or
xchg
pop
mov
jb
inc
inc
div
rcl
push
dec
cmp
mov
mov
add
jecxz
and
xchg
sub
mov
adc
nop
mov
cmp
mov
out
inc
dec
sub
jae
pop
nop
bound
int3
lods
loope
dec
ret
cmp
dec
sub
mov
or
inc
das
cmps
scas
retf
inc
ja
inc
(bad)
out
xchg
imul
mov
out
cs
or
sub
adc
pop
movs
sbb
pop
loop
(bad)
xor
add
ror
sbb
pop
mov
jbe
mov
lock
inc
scas
pop
sub
xor
arpl
adc
xor
or
iret
or
push
mov
jnp
mov
jg
pop
pop
pop
(bad)
jnp
add
popf
mov
mov
fcomi
(bad)
pop
imul
push
lods
jmp
pop
mov
or
iret
push
or
out
cmp
sub
inc
mov
mov
ret
push
dec
movhps
mov
push
mov
jo
sub
or
aaa
inc
(bad)
cmps
or
daa
jnp
mov
xor
adc
es
and
ins
imul
sub
pop
cmp
push
inc
mov
ins
mov
push
xchg
mov
imul
and
sub
dec
jmp
jns
dec
mov
mov
rcr
jb
or
jno
jl
jae
sbb
push
pmaxub
xor
test
repnz
push
push
scas
or
or
mov
xor
fst
jo
mov
mov
sbb
lahf
lods
sub
inc
icebp
sbb
dec
inc
paddusw
or
movs
inc
jmp
sub
pop
neg
or
add
repnz
add
movs
or
movs
in
jne
xor
xlat
jle
cmp
add
dec
rcr
mov
or
int3
push
inc
stos
inc
fistp
dec
jmp
add
inc
add
pop
pop
imul
lods
jecxz
jns
inc
retf
bsr
outs
mov
sti
sysenter
repz
adc
xor
inc
movups
out
xchg
xchg
dec
data16
jnp
mov
inc
retf
and
cmp
gs
jae
fnstcw
sbb
mov
aaa
dec
sbb
mov
bound
inc
ds
sbb
mov
lods
js
pop
div
pop
ja
mov
call
pop
or
cmp
out
jl
imul
or
sbb
xchg
bound
sub
movs
fnstcw
out
push
mov
out
mov
ss
cmp
adc
out
cs
push
int
out
add
add
cmp
push
ja
(bad)
lahf
dec
mov
idiv
cmp
je
(bad)
out
add
sub
in
ss
movzx
dec
sub
mov
or
fwait
inc
dec
sub
pop
push
xor
xchg
ss
scas
mov
xchg
inc
jnp
add
push
retf
or
aas
mov
mov
seta
cmp
cmp
rcr
loop
adc
(bad)
jmp
or
or
cmp
pop
jnp
ret
mov
sbb
addr16
xchg
push
imul
inc
mov
daa
imul
or
mov
imul
inc
inc
outs
mov
idiv
push
ss
dec
ret
inc
jp
adc
stos
xor
inc
mov
inc
and
pop
pop
sub
mov
aad
or
add
movsx
sar
sbb
dec
jmp
aaa
adc
dec
cmp
sub
adc
jo
jbe
cmps
jmp
adc
lock
xor
inc
das
cmp
pop
imul
imul
out
jnp
mov
and
push
shl
mov
xor
dec
xchg
out
cmps
or
ja
das
and
daa
cmps
push
sub
data16
xchg
xchg
popa
or
fisubr
or
cmp
pusha
nop
mov
(bad)
jle
or
stos
xor
add
push
sub
inc
inc
iret
pop
rcl
xchg
pop
in
jae
cmp
xchg
pop
das
cmp
inc
mov
rcr
jno
inc
cmp
add
arpl
iret
(bad)
pusha
lods
fidivr
ja
inc
push
add
ret
(bad)
out
dec
es
mov
mov
repz
and
jg
mov
push
mov
daa
es
mov
aam
outs
fild
test
(bad)
arpl
add
cmp
call
xor
scas
and
jg
xor
or
push
outs
inc
adc
jmp
dec
xchg
add
icebp
and
mov
jp
push
adc
dec
push
xchg
dec
fsub
into
xor
adc
ret
push
sub
add
add
ret
aad
inc
rcr
mov
(bad)
iret
and
jne
ficomp
shl
push
jnp
pop
add
rol
cmp
into
push
mov
jg
push
jecxz
pop
xor
cmp
daa
(bad)
xor
jge
aaa
cmp
dec
add
js
mov
aaa
(bad)
pushf
inc
jno
xchg
inc
call
inc
pop
sub
dec
cmp
sbb
cmp
sbb
lods
pop
aas
xor
jo
fwait
outs
xor
arpl
stos
adc
mov
ror
mov
xor
push
div
cmp
idiv
sbb
ficom
aas
fisubr
cmp
or
or
sbb
mov
xchg
jecxz
jo
sbb
jg
mov
imul
inc
mov
add
xchg
jno
mov
xor
(bad)
test
xor
outs
call
mov
add
pop
push
adc
add
mov
xor
or
or
(bad)
aas
or
or
adc
or
das
push
sub
fsubrp
out
push
and
aas
and
push
xor
inc
(bad)
ror
out
adc
call
sub
in
xor
wbinvd
cs
jnp
or
sub
and
mov
mov
pop
sub
inc
(bad)
outs
add
add
adc
outs
jo
dec
xlat
jae
xor
mov
or
(bad)
inc
lods
cmp
sub
push
mov
pop
cmp
sbb
pop
lods
fwait
and
and
iret
adc
or
(bad)
pop
push
fiadd
xchg
sbb
jmp
xor
retf
push
adc
loope
ds
call
or
mov
and
repz
mov
cmp
call
pushf
jbe
dec
sbb
sbb
fiadd
mov
das
mov
lock
fild
addr16
and
adc
or
push
imul
xchg
sbb
shr
push
and
scas
pop
hlt
loopne
mov
xchg
pop
(bad)
jp
dec
mov
ds
jge
adc
sub
xor
mov
not
or
es
and
cs
and
shl
not
or
icebp
faddp
call
rcl
pusha
mov
pop
es
adc
sub
or
jnp
dec
aad
out
not
jbe
bound
add
scas
pop
sub
sub
or
xor
and
sbb
and
xor
sub
pop
je
push
cmp
sub
cmps
push
and
daa
mov
fwait
aas
(bad)
pop
lahf
sub
and
pop
rol
ret
lock
call
push
cmp
cmp
sub
stos
push
jo
outs
pop
xor
adc
xlat
jbe
or
mov
mov
fisub
inc
fisub
das
inc
out
add
test
or
arpl
nop
cmps
mov
push
xor
adc
push
fs
dec
ss
jecxz
xchg
pop
ret
inc
push
jo
nop
stos
cmp
fiadd
ror
fcmovbe
daa
inc
sbb
(bad)
xor
push
cmp
addr16
push
adc
loop
pop
xor
aaa
inc
push
and
jbe
loop
jmp
or
mov
jo
jbe
call
adc
pop
jmp
push
adc
mov
idiv
or
push
fadd
(bad)
aas
and
fstp
mov
cmc
cmp
dec
mov
mov
or
lds
push
ja
les
lods
jmp
mov
jg
ret
pop
or
adc
pop
sub
mov
pop
popa
fcomip
cmp
cs
mov
dec
cmp
stos
dec
mov
cmp
sbb
push
mov
and
test
je
loop
pop
jmp
loope
adc
push
inc
dec
ret
shl
jae
sbb
add
dec
push
jg
mov
jo
das
push
ret
mov
fdiv
ds
jnp
pop
sbb
or
or
lods
inc
mov
iret
aas
out
push
xor
loop
sahf
inc
aaa
out
lods
lock
sub
mov
sub
sbb
movs
push
fdiv
cmp
inc
test
femms
or
or
mov
ficomp
or
mov
xlat
xlat
cwde
shl
sub
add
push
in
cmp
test
loopne
sbb
pop
out
inc
stos
add
xor
xor
repz
cmp
out
ins
shl
inc
adc
in
add
inc
repz
inc
cmp
sbb
lock
push
dec
fwait
adc
test
jae
xchg
mov
cmp
xchg
popf
fadd
data16
sbb
dec
je
add
mov
cs
out
jp
add
jecxz
ins
les
xor
out
jno
and
add
cmp
adc
sub
daa
xchg
repnz
dec
push
or
cmp
pop
cmps
add
pop
xchg
sti
arpl
pop
aam
(bad)
mov
xchg
add
and
jecxz
pop
or
aaa
push
in
mov
adc
pusha
jmp
sub
push
pop
jnp
sub
cs
imul
out
scas
pop
pop
das
(bad)
fimul
sub
mov
cmp
mov
jnp
fst
bound
adc
wbinvd
pop
fs
xchg
es
aas
add
addr16
inc
sub
or
aas
scas
sti
or
pop
outs
push
dec
jno
add
dec
repz
cmp
call
xor
inc
ja
(bad)
mov
sbb
jnp
scas
pop
ds
pop
xor
repz
jo
sbb
pop
inc
sbb
adc
cmc
lahf
jg
adc
dec
outs
mov
sub
push
scas
add
sub
ret
or
sub
pop
xor
push
add
ds
ss
pop
mov
push
dec
test
pop
ins
fdivr
jbe
push
mov
ins
(bad)
retf
and
push
test
outs
lahf
inc
fidivr
stos
bound
pop
shl
(bad)
fucomp
scas
data16
mov
and
mov
inc
mov
xchg
mov
or
es
mov
pop
ret
mov
sub
add
push
test
ja
pop
out
fwait
xchg
stos
pop
sbb
outs
jle
push
push
sbb
pop
adc
mov
lods
sub
sub
dec
adc
or
iret
sar
mov
push
mov
sbb
popa
das
mov
dec
sbb
and
inc
dec
push
pop
pop
fmul
je
mov
mov
push
outs
or
daa
daa
add
adc
pop
(bad)
shl
jae
push
jns
jge
xchg
inc
push
cmp
outs
or
add
cmp
outs
push
xchg
fwait
push
movs
mov
add
call
pusha
sti
gs
push
push
adc
mov
mov
rcr
mov
mov
mov
call
push
fldenv
dec
scas
pop
inc
imul
popa
inc
cmp
adc
pop
sub
add
(bad)
pop
adc
jb
and
test
push
mov
mov
imul
inc
xor
or
retf
nop
dec
enter
dec
xchg
lods
fisttp
push
enter
mov
mov
push
gs
mov
add
lock
inc
sbb
gs
je
dec
sbb
mov
add
sbb
add
or
pop
gs
lock
mov
push
stos
mov
push
dec
push
push
inc
stos
scas
dec
sub
inc
cmp
jne
nop
mov
cmp
pop
jo
add
jl
push
stos
push
cmp
fistp
ret
imul
out
mov
sbb
jne
pusha
adc
xchg
mov
fcmove
add
mov
mov
fbstp
das
or
add
cs
das
cmp
xor
mov
mov
nop
sub
retf
lods
jo
scas
or
mov
xlat
push
or
push
and
or
bound
xlat
stos
test
nop
scas
or
mov
shl
sbb
sub
cmp
lahf
xchg
sub
inc
xchg
jmp
rol
stos
cmp
mov
ret
inc
aas
(bad)
clc
sbb
inc
add
mov
arpl
(bad)
lods
rol
sti
out
adc
or
cmp
mov
push
inc
sub
lahf
sbb
pop
pop
sets
sub
call
dec
dec
inc
jns
cmps
popa
test
(bad)
sti
adc
mov
jmp
xchg
mov
das
adc
fdiv
(bad)
scas
fbstp
cs
sub
sub
inc
and
pop
js
jae
imul
mov
jb
add
jno
xor
test
sub
scas
(bad)
ins
dec
iret
cmps
or
sub
dec
inc
mov
(bad)
sub
shr
and
outs
jne
nop
out
sub
fbld
(bad)
outs
jae
xor
aas
imul
jmp
and
bound
bnd
xor
daa
lods
das
rol
(bad)
pop
imul
push
hlt
lods
add
out
sub
and
xor
jb
fsubr
pusha
inc
jo
mov
mov
inc
add
inc
add
mul
jno
mov
movs
mov
call
add
jmp
imul
or
add
dec
adc
or
adc
push
dec
sub
or
or
xchg
add
add
mov
jg
rcr
add
je
outs
push
gs
inc
push
push
cmovbe
je
jb
out
std
outs
cmp
outs
fs
outs
imul
je
jb
outs
or
inc
ins
outs
bound
sbb
jbe
pop
inc
ins
xor
dec
jne
inc
imul
adc
repz
push
pop
or
ret
add
push
mov
ins
ds
mov
mov
sbb
push
xor
fsubr
imul
cmp
in
outs
jne
sbb
ins
adc
jge
lods
or
push
in
push
dec
xchg
fidiv
dec
lods
mov
fs
jb
in
gs
dec
outs
jbe
outs
jnp
loopne
sbb
cmp
js
sbb
inc
xor
les
inc
jo
cmc
adc
lock
adc
cmp
push
jbe
mov
pop
pusha
fneni(8087
inc
cmp
jo
mov
xor
arpl
and
(bad)
sub
push
call
dec
sub
xor
js
push
xchg
pop
ins
pop
pop
mov
fs
shr
pop
ror
inc
push
mov
mov
push
jne
jns
push
mov
scas
cdq
fs
dec
jne
dec
inc
je
bound
cmp
test
inc
jbe
ror
dec
pusha
outs
adc
in
and
inc
fs
shl
mul
or
push
xor
sti
push
and
out
jecxz
dec
xor
ins
sbb
or
cmp
leave
adc
pop
push
lea
or
ds
dec
imul
jo
(bad)
jns
xor
push
xor
push
icebp
xchg
push
retf
sub
push
sti
fbld
call
stc
dec
fmul
int3
sbb
popa
jb
into
or
shl
popa
cs
fs
dec
push
inc
inc
adc
sbb
stc
gs
inc
push
int
shl
push
imul
mov
stos
push
je
ja
sbb
cmp
xchg
xor
sbb
je
add
aas
outs
test
int3
pusha
loope
pop
pop
repz
in
or
sbb
or
rol
popf
call
inc
dec
xor
mov
add
arpl
jo
or
lds
dec
cmp
xchg
jmp
or
jb
outs
retf
mov
and
jns
outs
sbb
fs
pop
push
out
js
inc
push
ins
pop
and
adc
or
adc
push
adc
daa
ss
xchg
sbb
inc
and
je
in
cmp
loopne
dec
pop
scas
pop
mov
add
je
jo
scas
loop
add
addr16
or
jno
push
outs
dec
mov
xor
cmp
inc
push
shl
pop
push
int
jns
sbb
sub
dec
adc
leave
mov
sbb
sub
cmp
cmc
dec
push
mov
mov
sbb
add
test
(bad)
ret
sub
lods
(bad)
sub
mov
jne
es
cdq
push
repnz
stc
imul
jae
jb
mov
stos
sahf
rcl
mov
jae
repz
push
and
push
or
xor
add
imul
mov
fld
adc
lea
xchg
sub
sbb
pusha
push
jo
out
jge
cmp
jo
addr16
popa
das
fs
push
sub
fld
or
xchg
adc
mov
lods
popa
gs
arpl
push
mov
shl
in
jecxz
sbb
stos
jns
outs
jb
(bad)
mov
pushf
jo
push
outs
in
push
stos
das
ins
xchg
lods
mov
mov
popf
ins
add
fdiv
shl
retf
rol
mov
das
pop
push
mov
xor
mov
jo
neg
cdq
hlt
sub
cli
retf
in
mov
push
mov
dec
inc
xor
stos
loopne
add
push
or
jmp
sbb
arpl
or
cs
xor
js
or
(bad)
pop
daa
inc
jne
data16
pop
lock
push
push
scas
xor
push
nop
add
pop
popa
add
cmp
cmps
push
and
pop
int
push
xor
and
mov
jne
jns
ret
sbb
movs
pop
xchg
pop
sbb
xor
or
popa
inc
lods
arpl
imul
dec
sbb
mov
mov
adc
fs
(bad)
ins
adc
cmp
inc
dec
int
jo
ins
cmp
sbb
int
sub
push
fistp
shl
(bad)
jae
sub
test
sub
pxor
and
add
and
jo
popa
inc
call
xor
bound
push
idiv
inc
cs
and
test
sbb
movs
mov
mov
sub
ins
mov
cmps
sbb
ins
push
sub
js
inc
ss
jno
cmps
jecxz
shr
and
or
fdiv
or
push
mov
mov
mov
pop
add
ja
sub
pusha
push
aaa
das
xchg
push
add
or
inc
imul
jb
test
pop
mov
jae
sub
jb
ja
arpl
or
push
xor
jmp
cmp
mov
xor
cmps
loope
or
les
dec
push
inc
retf
inc
fisttp
cmp
jo
jo
pop
adc
dec
pop
int
pop
lds
imul
call
out
jp
xor
jne
or
pop
loopne
push
mov
dec
mov
test
bound
sbb
inc
hlt
pop
lock
push
sub
inc
bound
imul
mov
add
sti
add
fsub
dec
inc
call
test
outs
inc
mov
inc
inc
repz
adc
or
mov
jbe
test
in
sub
push
pop
fdiv
xor
jbe
pop
push
mov
or
push
fs
add
jge
inc
xchg
inc
jb
cmp
int3
mov
xor
loopne
inc
daa
mov
fild
sub
or
ins
pop
je
shl
das
pop
adc
jle
inc
call
jno
inc
xchg
inc
or
jo
sbb
mov
adc
inc
(bad)
inc
mov
inc
pusha
pop
js
xor
or
push
dec
inc
push
xchg
int3
and
loopne
ins
jmp
dec
mov
pusha
mov
dec
mov
inc
push
sub
push
jae
repnz
stos
js
mov
rcl
add
jl
add
push
xchg
xchg
outs
push
dec
ficomp
sbb
ret
inc
pop
cmp
test
mov
dec
adc
and
pop
dec
inc
xor
jle
mov
jmp
dec
ficom
sbb
clc
jae
cmp
jno
dec
push
adc
mov
(bad)
sar
mov
xlat
push
dec
or
mov
fwait
pop
movs
add
push
and
dec
in
sub
adc
jne
add
add
xchg
or
ret
and
add
pusha
outs
pop
jmp
js
push
pop
push
jo
sbb
adc
mov
xor
inc
cmp
das
push
mov
mov
outs
and
out
push
fstp
and
int
mov
add
test
jl
mov
mov
xchg
(bad)
xchg
adc
imul
ret
inc
loop
and
push
sahf
test
icebp
ret
inc
jb
mov
cmp
sahf
push
das
adc
add
pop
add
jae
pop
or
std
push
ss
outs
nop
dec
pop
mov
push
cmps
cmp
dec
sbb
push
or
push
and
ror
mov
and
cli
sahf
mov
fs
jnp
std
xor
loop
test
div
push
das
daa
inc
ins
test
ss
lods
inc
ins
addr16
cmp
dec
stos
into
mov
lods
mov
hlt
scas
and
jl
xchg
xor
dec
push
sub
rcr
pop
(bad)
movs
mov
popa
push
pusha
jne
lds
dec
outs
sbb
pop
imul
lea
pop
pop
sub
sahf
inc
outs
js
sub
clc
push
cmp
in
xchg
inc
mov
int3
dec
fwait
xchg
sbb
push
mov
(bad)
lock
adc
stc
fwait
push
mov
loopne
stc
clc
xchg
add
push
jne
aas
inc
outs
and
stos
mov
pop
jl
dec
pop
cdq
jne
loopne
adc
ror
adc
or
xlat
or
shl
mov
push
push
mov
xor
dec
stos
loop
and
sbb
pop
popa
fist
inc
xchg
aas
dec
test
test
sub
sbb
dec
out
adc
inc
xchg
icebp
add
xor
mov
(bad)
mov
movs
fwait
das
inc
or
pop
adc
ds
addr16
dec
xor
arpl
pop
push
aas
rol
push
mov
mov
or
jne
mov
lods
loope
or
push
int
imul
cmp
jle
jb
dec
and
mov
retf
fidivr
mov
mov
pop
sub
cmp
push
fwait
xchg
push
xor
fs
add
jbe
dec
movs
or
dec
cdq
fst
ins
sub
imul
push
aas
ret
je
dec
inc
lea
adc
arpl
mov
imul
jne
daa
jbe
pusha
xor
and
lods
mov
add
inc
push
cmps
inc
dec
lods
sub
outs
retf
pop
fild
push
outs
aad
jge
loope
push
fild
in
repz
dec
in
loop
dec
add
(bad)
int3
xor
xchg
add
or
adc
aas
idiv
or
sysret
push
or
adc
or
xor
inc
or
add
(bad)
(bad)
jmp
adc
and
jbe
lock
push
and
jae
sub
sub
or
push
mov
adc
or
(bad)
(bad)
fisttp
pop
pop
or
or
and
and
sub
dec
xor
pop
inc
adc
cdq
ja
sbb
and
sbb
adc
mov
or
or
pop
in
inc
or
lock
imul
inc
push
xor
jmp
rcl
or
dec
inc
xchg
(bad)
adc
ds
es
xor
(bad)
inc
add
push
or
push
adc
or
adc
and
sbb
cmp
or
pusha
push
xor
mov
cmp
adc
xor
xchg
or
(bad)
mov
popa
sub
push
push
adc
or
xor
or
outs
idiv
push
push
clc
or
push
cmps
or
or
cmp
add
xor
or
call
addr16
xor
and
sbb
sbb
bound
outs
clc
add
sub
adc
inc
push
sbb
adc
lock
add
(bad)
dec
jae
add
and
lock
add
pusha
retf
adc
clc
add
adc
push
daa
mov
and
add
push
adc
aaa
fcomp
cs
or
push
fiadd
push
and
aaa
cld
and
dec
xor
and
in
lock
pop
movups
push
push
adc
lock
add
cld
mov
adc
or
add
lock
ftst
(bad)
fistp
sub
rcl
inc
sbb
mov
lock
xor
sbb
add
adc
sbb
jnp
sbb
push
adc
adc
cwde
adc
adc
or
inc
add
push
cmp
pop
sub
adc
dec
add
or
adc
and
dec
sub
add
and
sbb
adc
sbb
movs
pusha
pop
inc
popf
pop
daa
xchg
mov
dec
or
sbb
or
push
mov
lock
inc
sub
push
push
sub
adc
sbb
(bad)
push
mov
inc
add
or
sub
lock
sbb
es
or
es
pop
push
and
pop
lods
mov
mov
sub
and
cs
loope
inc
imul
dec
sub
mov
or
add
adc
mov
imul
sbb
pop
fimul
or
cmp
push
sub
push
xor
adc
sbb
sbb
pop
nop
add
(bad)
inc
mov
mov
cmp
and
add
ds
add
(bad)
adc
xor
sbb
and
mov
or
xor
xor
wrmsr
(bad)
gs
pop
hlt
xor
mov
sub
sbb
daa
les
test
adc
lock
push
ficom
pop
push
es
sbb
inc
pop
adc
sbb
shr
sub
jle
fisub
mov
add
adc
mov
cwde
movs
sbb
mov
or
jb
out
or
adc
pop
push
xchg
or
sub
push
add
push
add
or
or
or
pop
shl
push
ins
aas
jo
adc
(bad)
jg
push
sub
jmp
(bad)
and
lock
sbb
mov
cmp
mov
in
add
pop
add
add
jmp
ins
mov
mov
and
add
cmp
and
mov
push
adc
push
sub
and
outs
clc
mov
push
ins
jb
std
add
xor
scas
xor
xor
adc
add
jb
pop
or
ss
shl
jp
or
fs
inc
rol
data16
and
add
dec
fbstp
inc
jb
call
repnz
push
add
dec
inc
sbb
xchg
lahf
or
and
ja
loope
cmp
pop
adc
lock
xchg
sub
jno
(bad)
sub
xor
push
xchg
sub
adc
sbb
scas
mov
jno
movs
add
push
mov
sbb
adc
gs
aad
(bad)
sbb
xor
daa
jb
or
dec
or
dec
jbe
pusha
jg
xor
add
cs
xor
inc
and
adc
jne
mov
push
or
or
add
adc
xor
push
sub
or
and
mov
pop
das
push
idiv
jecxz
or
mov
and
cmp
and
(bad)
push
std
or
or
or
push
and
or
push
mov
clc
sub
adc
and
sub
adc
pop
out
jb
jp
adc
sub
xor
outs
clc
push
pop
adc
sbb
add
or
lock
add
pop
pop
xor
data16
lock
add
sub
ret
jg
mov
sbb
lock
add
outs
xor
lock
pop
sbb
add
jbe
and
jo
inc
ss
push
xor
or
jecxz
or
and
pop
add
xor
pop
adc
add
sbb
xor
and
push
jl
cmp
jbe
daa
rcl
mov
test
push
cmp
or
push
mov
push
loopne
or
adc
xor
lock
lock
cmp
or
retf
cs
or
and
sysret
jb
lock
xor
and
(bad)
dec
lahf
xlat
and
lock
add
inc
sub
push
xor
mov
and
shr
into
fld
dec
es
loop
push
das
or
mov
xor
clc
cmp
xlat
jno
ins
pmovmskb
cmps
outs
loop
adc
lock
and
sbb
aam
stos
ss
push
dec
pop
sbb
xor
pop
adc
push
or
rol
lock
adc
shl
jb
cmp
or
sbb
push
(bad)
dec
adc
shl
adc
bound
inc
ja
ror
xchg
adc
push
cmp
adc
or
or
sbb
or
cmp
lds
syscall
xchg
les
or
or
into
(bad)
or
or
retf
and
cmps
outs
(bad)
dec
sub
inc
add
push
sbb
cmps
pop
(bad)
or
mov
loope
or
dec
or
add
es
xor
pop
sbb
mov
inc
addr16
jno
or
es
or
nop
add
or
ret
or
jnp
or
(bad)
js
adc
fs
add
lock
xchg
ss
jmp
aas
out
push
inc
add
lock
add
js
and
add
mov
add
push
or
push
es
cmp
adc
gs
enter
push
and
daa
xor
jo
mov
fwait
push
ins
cmps
sbb
sub
add
pop
mov
push
cmp
clc
xchg
adc
daa
lock
js
lods
cmp
mov
(bad)
dec
fcomip
push
add
idiv
add
or
lock
add
jl
ss
or
xor
adc
clc
and
lock
add
js
mov
(bad)
and
mov
xchg
push
arpl
aas
push
sbb
or
(bad)
push
(bad)
jmp
nop
inc
or
pop
lock
mov
ss
sbb
stc
and
pusha
ret
int
test
add
pop
xor
cmp
dec
mov
xchg
adc
add
es
xchg
pop
push
inc
jns
or
lock
add
mov
sub
sahf
xor
dec
add
adc
push
adc
out
outs
xor
xor
push
retf
adc
loopne
lock
adc
test
push
fcom
push
bound
out
cli
sub
adc
lock
add
xor
mov
sub
cmp
adc
mov
out
clc
movaps
adc
dec
adc
in
pop
mov
loopne
or
add
in
jg
(bad)
jge
adc
sbb
lock
or
or
push
lock
sbb
cmp
rol
sbb
(bad)
mov
or
call
or
add
pop
xor
cs
sub
pop
sub
sub
or
cmps
mov
pop
or
dec
xchg
pop
jle
adc
push
cmp
xor
(bad)
and
inc
and
mov
sbb
sub
mov
bound
sbb
sub
sbb
scas
mov
dec
mov
sbb
push
xor
dec
lock
add
mov
clc
adc
mov
sbb
or
sbb
aaa
cld
adc
repz
add
(bad)
sub
pop
inc
add
sbb
adc
push
push
js
aaa
ror
push
lods
push
cmp
sbb
aaa
sbb
pop
adc
hlt
jmp
test
or
or
cdq
inc
pop
xor
and
pop
mov
pop
and
das
xor
pop
scas
mov
sbb
lock
push
pusha
fcom
and
clc
mov
mov
dec
daa
sub
jge
or
sbb
test
out
scas
sub
push
dec
inc
add
or
jle
inc
sub
dec
imul
and
jp
sub
int3
stos
sbb
lds
xor
fcomip
cmps
cli
sbb
adc
sub
xor
adc
dec
mov
outs
add
daa
ja
out
pusha
aad
test
sub
and
inc
dec
sbb
stos
adc
push
sub
and
inc
xor
sub
pop
loopne
mov
mov
mov
ins
sbb
or
lock
popa
sub
add
add
inc
add
and
mov
loop
add
mov
lock
inc
fadd
lock
push
adc
ja
fdivr
pop
mov
add
sbb
dec
test
cmp
dec
xor
aaa
pop
push
push
push
outs
(bad)
(bad)
push
sub
push
jle
sbb
xor
sbb
outs
or
or
mov
xchg
mov
add
mov
or
lock
je
push
and
and
pushf
lock
xor
sbb
test
mov
and
add
adc
or
fdivp
out
mov
push
inc
sub
sbb
push
and
imul
test
mov
loop
push
pop
cmp
pop
outs
pop
xor
js
pop
loop
mov
lock
add
mov
out
add
pop
lods
push
adc
mov
adc
sbb
jmp
call
add
jns
cs
push
add
aam
sbb
sbb
jmp
mov
or
xor
and
sub
dec
mov
in
jg
adc
pop
inc
inc
adc
sbb
rcl
bound
movs
or
push
call
add
or
push
pop
ds
inc
addr16
add
jle
pop
lock
add
inc
add
cmp
sub
adc
cmps
pop
das
out
xchg
mov
cmps
loop
(bad)
out
jp
or
or
push
and
dec
adc
sahf
sbb
push
or
sub
mov
push
add
inc
xor
ss
add
and
xchg
inc
call
or
es
inc
sbb
stos
les
and
ror
sub
loopne
pop
daa
or
test
push
and
and
inc
rcl
inc
dec
adc
sbb
and
mov
pop
inc
xor
adc
cmp
es
mov
or
daa
cmovae
pop
sbb
adc
sbb
daa
and
adc
jp
clc
(bad)
xchg
add
mov
das
bound
push
or
std
stos
(bad)
fdivr
fmul
adc
adc
inc
ret
and
and
adc
mov
and
mov
sub
adc
jbe
sub
dec
sbb
xchg
lods
add
jmp
adc
push
aam
lock
jg
lock
adc
or
into
or
inc
push
xchg
or
adc
pop
cmp
cdq
ficomp
ss
adc
adc
(bad)
cmp
adc
sbb
loope
or
(bad)
dec
sub
pushw
or
adc
lods
pop
inc
jnp
clc
push
mov
or
adc
loopne
push
sbb
push
push
(bad)
inc
enter
fmul
inc
adc
adc
lock
sub
jl
add
out
sbb
cmp
sub
clc
and
sbb
mov
test
sbb
and
adc
in
sub
sub
adc
adc
push
push
push
hlt
sub
or
or
retf
pop
(bad)
jmp
push
pushf
jae
xor
mov
or
jp
shl
dec
cmps
lock
mov
cli
dec
or
dec
add
or
and
icebp
or
lock
push
sbb
pop
adc
sub
bound
adc
(bad)
inc
cmp
adc
sbb
push
jl
push
or
add
cmps
scas
cli
add
push
sbb
aaa
mov
add
fwait
cmp
pop
adc
or
das
mov
sub
cmp
cli
addr16
fmul
jns
adc
inc
outs
add
ins
mov
pop
hlt
jmp
and
adc
outs
outs
cmp
push
pop
and
dec
mov
or
sbb
adc
jae
cmp
dec
or
adc
xchg
jbe
add
mov
mov
adc
sbb
sbb
sbb
cmp
es
pop
or
cmp
mov
push
dec
jp
cs
add
dec
xor
push
fistp
pop
inc
inc
jl
or
mov
mov
jg
and
and
es
sbb
pop
or
(bad)
call
ss
fs
sbb
nop
daa
and
xchg
and
pusha
jl
pop
adc
push
adc
or
inc
adc
inc
push
outs
push
cld
in
pop
or
or
sub
inc
cmp
pop
inc
pop
pusha
es
adc
or
jmp
mov
das
enter
sub
jae
or
or
mov
add
sbb
cli
mov
push
sub
adc
test
push
cmp
dec
es
xor
sub
cmp
aaa
je
push
push
push
push
push
div
or
sbb
cmc
call
ror
xor
sbb
dec
pop
pop
and
adc
sub
dec
xor
cs
adc
ja
(bad)
and
and
adc
and
daa
xor
sbb
adc
inc
lock
add
dec
lock
push
adc
fcmovnbe
jo
or
add
xor
mov
sub
adc
push
adc
scas
mov
xchg
dec
hlt
xor
mov
jl
jb
push
data16
pop
inc
retf
mov
ror
int3
and
push
sbb
sub
pop
jae
sbb
sub
fisttp
push
loopne
stc
add
mov
cmp
cs
sbb
clc
add
or
and
sbb
cwde
jmp
sub
adc
adc
cmp
sar
push
sti
sbb
sbb
sub
adc
and
cmp
lock
add
or
sbb
push
shr
adc
sbb
push
out
adc
or
push
xchg
out
sbb
jmp
pop
pop
arpl
push
adc
js
(bad)
scas
mov
cmps
adc
daa
adc
jle
je
es
pop
xchg
dec
or
data16
push
out
push
or
mov
inc
(bad)
push
pop
adc
or
inc
dec
sbb
dec
xor
and
lods
adc
add
je
or
aam
and
cmp
pop
or
adc
and
bound
sbb
pop
ds
jmp
mov
xor
or
gs
sbb
(bad)
(bad)
xor
mov
(bad)
mov
mov
bndstx
push
pop
sbb
xor
es
outs
fist
sbb
loop
pop
add
or
and
inc
cmp
(bad)
out
cli
mov
xor
or
or
sahf
pop
stos
rcl
loop
or
inc
push
and
imul
adc
and
shl
pusha
outs
mov
push
push
bts
nop
enter
add
inc
mov
cmp
and
outs
push
adc
cmp
sub
cmp
sbb
and
mov
jbe
sub
movs
adc
push
pop
or
push
mov
mov
hlt
dec
xchg
mov
mov
(bad)
(bad)
add
repnz
retf
adc
or
sub
sub
adc
push
mov
aaa
add
dec
xor
or
sbb
adc
mov
mov
and
daa
cmp
sbb
fwait
add
adc
cwde
scas
xchg
mov
pop
pushf
adc
mov
add
or
pop
add
sbb
push
dec
sbb
loopne
mov
push
lock
loopne
dec
jae
cmp
sbb
xchg
in
sbb
pop
pusha
clc
push
lock
lock
jp
or
push
lock
add
xor
fs
sub
fiadd
inc
sub
or
icebp
push
xchg
pushf
add
lock
sti
mov
dec
inc
and
sub
and
and
or
adc
iret
int
in
or
add
push
or
sbb
or
push
adc
fadd
jnp
nop
scas
xchg
fsubr
push
or
outs
add
add
add
(bad)
dec
enter
lock
or
mov
gs
test
cmp
js
add
lods
and
jns
loope
add
pop
add
bound
adc
mov
mov
clc
pop
lock
cmp
mov
cwde
pop
and
pop
mov
repz
cwde
je
stos
sbb
mov
ja
sbb
or
add
adc
or
mov
fld
push
adc
and
out
sub
mov
ins
cmp
and
push
and
popa
mov
movs
sbb
sub
adc
sbb
sbb
icebp
mov
ins
jmp
adc
nop
mov
inc
and
lods
adc
sbb
clc
div
or
pop
sbb
cwde
imul
jle
and
sub
daa
push
bound
and
fbld
add
and
sub
shl
outs
jae
fwait
cmp
adc
xor
xchg
add
or
sbb
in
sbb
sahf
inc
dec
mov
sbb
adc
xchg
sar
inc
sbb
and
add
add
mov
xlat
ror
add
pop
and
ret
cwde
and
neg
cmp
dec
sbb
inc
add
ins
dec
cs
dec
xor
shl
rcr
xlat
out
loop
dec
pushf
ficomp
outs
ss
movs
push
inc
inc
push
jl
dec
inc
mov
and
inc
(bad)
aad
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
jl
add
inc
add
add
sbb
add
or
add
or
or
add
dec
cmps
inc
add
add
