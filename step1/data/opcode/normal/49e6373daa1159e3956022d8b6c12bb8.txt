(bad)
out
int
push
push
mov
and
mov
push
push
(bad)
(bad)
in
dec
mov
call
pop
rcl
add
fisttp
and
in
fidiv
sbb
or
ins
outs
inc
sahf
cmp
mov
pop
push
add
ja
mov
adc
push
mov
add
jle
sti
jl
sahf
adc
test
xchg
sti
mov
mov
mov
mov
pop
pop
pop
xchg
or
add
ret
mov
xor
mov
add
or
pop
jnp
popf
or
mov
mov
jle
or
mov
add
or
lods
cmp
pop
leave
cs
pop
and
jb
sub
ja
push
push
mov
push
push
lea
inc
sbb
outs
sti
fcomi
sub
adc
pop
pop
xor
push
mov
(bad)
add
pop
mov
and
push
jg
fwait
outs
add
pop
sbb
and
sub
inc
xor
mov
jnp
(bad)
jle
and
push
pushf
and
jmp
push
ins
mov
sahf
jl
je
mov
leave
mov
fistp
sbb
cmp
mov
push
mov
push
jnp
rcr
dec
pop
pop
xlat
(bad)
imul
inc
mov
dec
add
ficom
ror
pusha
mov
pushf
add
aas
div
xor
pop
jns
push
pop
pop
push
call
add
dec
mov
or
sbb
call
push
jle
fild
inc
rol
push
lea
push
fidivr
in
dec
rcl
xor
imul
add
das
add
je
clc
mov
push
or
in
popf
imul
lds
into
outs
(bad)
fst
imul
jl
test
cmps
arpl
xlat
lea
mov
cmp
cwde
test
pop
sbb
lock
xchg
fstp
push
mul
adc
push
add
lods
cmp
dec
int
push
(bad)
jmp
mov
call
add
sub
fstp
push
adc
mov
push
movs
mov
mov
es
sar
push
cmp
inc
fcom
adc
xchg
cmp
lock
lock
or
or
je
ins
add
addr16
cld
inc
mov
xchg
test
cmp
es
cmps
and
xlat
add
and
lea
and
dec
add
dec
cmp
scas
popa
cli
add
test
and
push
lock
test
stos
cmps
push
dec
mov
push
mov
mov
xlat
cmp
push
into
xor
pop
jb
leave
mov
je
mov
xor
mov
or
dec
jl
or
adc
push
fisttp
cmp
or
mov
mov
jae
cmp
mov
or
je
push
dec
mov
adc
clc
stos
icebp
and
je
mov
mov
or
leave
push
rol
ret
pop
push
arpl
adc
movs
or
cmp
push
adc
adc
mov
(bad)
dec
adc
add
jae
xchg
push
movs
add
test
xchg
pusha
not
(bad)
sahf
or
cmp
push
cs
call
push
push
mov
cmps
add
sub
mov
call
imul
xor
push
adc
push
mov
nop
xchg
jne
mov
aaa
jmp
adc
jge
mov
leave
fmul
sbb
fdiv
or
mov
pop
arpl
xchg
add
dec
add
add
in
xchg
pop
lock
shl
inc
sbb
sub
adc
dec
adc
xor
lea
sbb
adc
in
add
cmp
add
mov
sbb
xchg
mov
adc
or
pop
jae
push
jmp
mov
mov
cmp
cmp
dec
fmul
(bad)
scas
jb
cld
ror
add
mov
fsubr
(bad)
push
or
fimul
(bad)
jb
or
and
imul
adc
add
pop
in
sbb
out
je
cmps
push
adc
xchg
xor
mov
cmp
add
mov
dec
mov
adc
sbb
lock
call
pop
adc
arpl
outs
mov
ja
sbb
aad
fcom
cli
pusha
clc
in
jae
ret
sbb
sahf
sub
jecxz
mov
enter
ret
mov
ss
inc
mov
sub
fadd
fcmovnb
(bad)
cmp
je
and
cmp
push
lods
push
pop
push
ins
jo
or
test
sar
adc
ret
xlat
jl
out
paddusw
jl
inc
inc
dec
mov
add
ret
jne
test
pop
jbe
ins
xchg
sar
loopne
pop
clc
adc
into
cmp
xor
or
cmp
or
pop
sbb
jbe
xchg
lds
mov
setle
adc
push
jns
ret
add
add
ins
out
push
(bad)
pop
mov
or
cs
push
sub
lahf
jl
fiadd
pop
in
dec
lea
cs
(bad)
mov
dec
mov
jmp
dec
xor
mov
sub
adc
inc
xor
cmp
loop
pop
sbb
cmp
jge
xor
or
aaa
ret
ins
mov
and
icebp
jp
adc
call
inc
in
pop
adc
inc
cmp
or
xor
test
cld
push
fwait
dec
jo
fsub
mov
scas
leave
and
das
fadd
and
and
push
cmp
cmp
(bad)
xchg
(bad)
xchg
fsub
adc
sbb
push
scas
and
cld
cwde
sbb
or
inc
pop
mov
xor
enter
rcr
mov
ret
cmps
mov
test
pop
xchg
and
test
mov
pop
push
outs
xchg
and
push
add
and
add
and
add
push
add
adc
dec
lea
mov
shl
lock
jb
and
add
mov
add
dec
ins
mov
adc
pop
ret
jge
xor
push
leave
es
ja
jge
nop
sub
and
or
shl
add
xor
push
push
and
bound
or
mov
rcr
(bad)
and
push
xchg
or
mov
adc
mov
rcl
movs
iret
jl
pop
sub
sub
xchg
mov
in
je
add
push
sub
pushf
cmp
ss
jno
ins
lock
adc
and
enter
sub
inc
stc
or
pop
dec
push
xor
and
cdq
(bad)
nop
add
push
mov
dec
mov
jne
push
cmp
test
pop
jo
xchg
outs
adc
and
(bad)
add
push
mov
stos
subps
add
inc
adc
bnd
js
enter
mov
inc
mov
or
pop
mov
aas
or
sbb
(bad)
adc
pop
mov
push
mov
xor
repz
jne
pop
push
jle
mov
(bad)
or
cmp
jne
pop
popf
or
das
inc
xor
xchg
xchg
inc
push
or
xor
mov
inc
clc
or
inc
aaa
daa
sbb
or
jne
ret
jb
sbb
add
push
push
enter
adc
sub
mov
stos
or
xchg
cmp
xor
fstp
(bad)
push
sub
pop
mov
mov
push
or
add
mov
inc
adc
into
inc
add
retf
adc
xchg
dec
call
pop
xchg
mov
in
scas
or
lods
push
and
(bad)
fist
mov
ins
jmp
sbb
aas
xor
js
push
cmp
in
(bad)
mov
sbb
je
push
adc
sub
call
inc
mov
test
sbb
loope
into
mov
loope
add
les
dec
xchg
push
enter
dec
gs
cs
add
lods
in
call
movs
jecxz
pop
or
cmp
mov
mov
push
movs
push
movs
and
pop
add
test
imul
inc
or
sbb
lock
cli
daa
call
pop
lea
fidivr
sub
fcmovnb
sbb
jle
lea
push
dec
pop
push
pop
or
mov
addr16
and
lds
inc
jae
sbb
rcl
fisttp
sbb
(bad)
push
or
mov
or
cs
fdivr
or
enter
test
xchg
sub
lock
inc
mov
mov
mov
push
out
and
dec
adc
mov
jae
fimul
in
outs
mov
sbb
xchg
pop
adc
sbb
sbb
push
mov
inc
xchg
dec
push
xlat
cmp
retf
shl
add
dec
ficom
es
scas
or
test
cmps
cs
test
dec
mov
leave
jle
jmp
je
xchg
movs
fimul
inc
or
jge
xchg
sbb
push
pop
iret
add
jle
xor
adc
mov
xlat
in
add
hlt
mov
push
mov
pop
xor
sub
sbb
cdq
dec
push
call
xor
or
or
xor
pop
sub
mov
push
mov
sub
loopne
dec
or
fcmovnu
adc
xor
pop
push
xor
mov
mov
leave
(bad)
std
push
enter
mov
rcl
out
ins
aad
scas
ins
fistp
clc
jl
pop
sbb
sbb
mov
and
mov
mov
add
aad
stc
fsub
xchg
ss
in
cs
lds
add
add
in
xor
pushf
xor
push
and
inc
(bad)
inc
add
cmp
ins
push
xor
add
ins
rcr
or
adc
adc
fs
push
xor
(bad)
pop
jne
mov
push
cmp
dec
ret
jne
mov
imul
iret
cmps
loope
push
shl
(bad)
(bad)
add
or
mov
adc
pop
retf
loop
rcl
push
div
sbb
jp
je
push
inc
sub
loopne
or
and
shr
sbb
jnp
sbb
inc
adc
cvttps2pi
retf
(bad)
mov
daa
sub
inc
inc
es
sub
dec
cmp
(bad)
inc
xor
dec
iret
add
outs
adc
add
push
push
lods
lea
mov
mov
mov
mov
adc
ret
sahf
jg
icebp
aad
and
lods
sbb
into
out
sbb
xchg
pop
js
adc
sbb
adc
mov
dec
test
retf
shl
std
inc
jl
imul
mov
adc
pop
(bad)
push
or
(bad)
icebp
cmp
add
push
adc
leave
mov
and
jmp
retf
dec
push
dec
cmp
mov
mov
sub
xor
enter
addr16
gs
mov
jmp
pop
adc
sbb
cmp
xor
dec
push
add
sbb
(bad)
in
cmp
pop
stos
adc
enter
dec
inc
mov
outs
call
dec
shl
pop
outs
mov
mov
pop
je
stc
bound
dec
adc
and
popa
nop
jmp
xchg
sub
repnz
or
out
mov
mov
hlt
adc
mov
or
adc
pop
loop
cli
mov
lds
retf
(bad)
mov
push
loopne
or
adc
jg
or
cs
pop
push
mov
push
fsub
movs
inc
push
or
and
push
mov
sbb
lods
push
fcom
ins
mov
jge
fidivr
inc
dec
ss
jmp
stos
pop
cmc
pop
pop
sub
or
mov
cwde
add
mov
sub
mov
ins
add
bsf
add
mov
dec
pop
or
add
xchg
and
or
and
in
xor
adc
cmp
sti
mov
setne
mov
push
sbb
(bad)
mov
mov
mov
ins
jae
inc
fisubr
rcr
loopne
jne
jge
(bad)
inc
inc
cld
add
mov
fisttp
jl
adc
and
and
in
add
rcl
hlt
int3
pop
mov
pop
ret
xchg
push
repz
sbb
out
ins
sti
pop
fidiv
add
jae
mov
fsubr
push
dec
sbb
mov
add
add
fld
jle
dec
xchg
adc
mov
mov
lods
add
pop
push
ret
and
or
mov
and
mov
dec
call
je
lea
ja
aad
push
push
sub
pop
jl
pushf
cwde
mov
std
mov
inc
scas
jmp
or
rcl
pop
adc
cld
cmp
dec
mov
lahf
lea
mov
push
test
mov
pop
retf
or
aaa
push
xchg
pop
pop
test
gs
inc
pop
and
sti
adc
push
sub
shr
and
or
dec
push
push
retf
and
sub
outs
in
outs
(bad)
add
fdiv
ret
or
mov
adc
cld
push
arpl
jae
lahf
int
rcr
mov
mov
cmps
mov
mov
ja
lea
inc
ja
inc
repnz
cmp
call
cmp
retf
dec
cs
(bad)
imul
jle
push
push
out
ss
mov
push
ins
or
(bad)
fcomp
shl
retf
mov
rol
or
add
in
adc
jge
ficomp
mov
inc
lods
push
and
mov
mov
mov
inc
adc
loop
mov
mov
dec
or
dec
cs
dec
fdivr
push
pushf
(bad)
data16
or
or
cmp
and
popa
fimul
sbb
js
(bad)
fsubr
ror
leave
or
aam
pop
xchg
rcr
loopne
sbb
adc
bound
sub
mov
jne
dec
add
jne
test
cmp
int3
push
mov
adc
ss
sub
dec
dec
hlt
ficomp
ins
and
dec
cdq
in
es
jbe
adc
nop
add
or
cmp
sbb
jmp
mov
pusha
call
inc
cwde
adc
xor
or
fcmovnbe
xor
adc
adc
sub
pop
jg
pusha
outs
mov
dec
sub
and
inc
call
adc
xor
jne
aas
or
push
inc
adc
fild
aaa
xchg
les
stos
rcr
adc
imul
push
sbb
lods
add
mov
imul
push
add
pop
adc
call
(bad)
jbe
aad
xor
jp
js
mov
add
ins
gs
push
xor
and
inc
xchg
mov
test
adc
xchg
or
fcmovnbe
movhps
add
(bad)
mov
out
fadd
dec
push
add
sahf
sbb
ins
fld
dec
pop
ins
xchg
sbb
add
sbb
aam
and
add
cmps
mov
sbb
cdq
loope
loope
sbb
imul
xchg
add
stos
mov
imul
(bad)
sub
retf
pop
lods
xchg
daa
mov
fist
pop
(bad)
and
dec
and
or
or
gs
ds
(bad)
fwait
cmp
and
test
addr16
dec
add
enter
stos
test
mov
dec
mov
(bad)
in
xchg
in
jne
dec
loopne
inc
add
mov
adc
push
pusha
pop
stos
mov
or
stc
lods
test
mov
ss
mov
pushf
sbb
mov
pop
sbb
aas
push
xor
dec
jge
je
mov
fild
push
aas
add
xor
or
iret
enter
das
mov
and
push
repnz
adc
jecxz
aam
cmp
ffree
pop
loope
pop
mov
in
add
sbb
add
cmp
inc
mov
or
add
push
in
daa
and
sbb
and
sbb
lahf
and
das
add
mov
adc
std
jmp
loop
loope
adc
adc
inc
jle
xchg
into
fistp
mov
outs
pop
sub
movs
inc
jbe
sub
les
ins
cmc
sar
sub
jbe
dec
sbb
lea
sbb
and
rcr
add
icebp
pop
pop
sbb
adc
push
sub
ins
pop
nop
or
push
or
test
daa
mov
(bad)
push
shl
jno
ror
add
push
pusha
mov
inc
xchg
gs
mov
jle
inc
or
mov
and
push
(bad)
push
pop
into
jl
stc
inc
mov
mov
mov
mov
mov
sub
sti
(bad)
cmp
add
mov
call
int3
cld
or
push
mov
out
jg
std
sub
ror
arpl
scas
loopne
or
push
and
sub
add
test
ret
je
mov
inc
or
pop
or
and
push
(bad)
xlat
xchg
out
lods
sub
mov
call
sub
sub
adc
aas
mov
xor
sti
pop
int3
adc
mov
add
js
lods
or
and
movs
(bad)
(bad)
dec
sbb
adc
adc
push
push
sbb
add
mov
arpl
inc
xor
inc
sub
lock
inc
sub
mov
lds
in
(bad)
mov
sub
jmp
cmp
je
mov
or
pop
jmp
jp
mov
sbb
and
aaa
xchg
jecxz
xchg
sbb
iret
je
adc
sar
pusha
clc
and
mov
(bad)
je
push
ds
mov
mov
nop
shl
mov
lds
adc
icebp
dec
pop
pop
xor
jne
xor
sbb
cmp
mov
push
cmp
mov
test
or
cmp
or
(bad)
fisttp
add
mov
lock
nop
sbb
movs
mov
mov
or
adc
or
cmc
pop
push
jne
dec
add
dec
ins
jne
aas
push
cmp
cmp
jg
sbb
rcr
shl
dec
sub
sbb
push
pushf
sbb
sub
imul
or
or
outs
ret
neg
pop
jl
and
call
(bad)
jge
lds
or
and
xor
xchg
pop
out
inc
or
lea
mov
mov
in
lock
sub
shl
mov
mov
inc
sbb
retf
cli
aas
lock
push
xor
sbb
cmp
ja
jb
shl
pop
dec
or
or
inc
sbb
dec
add
push
mov
xchg
cmps
loop
mov
xor
add
xor
shr
adc
bound
ror
jne
inc
xor
outs
jne
mov
sub
push
inc
sub
in
push
add
not
in
cli
mov
adc
or
adc
shl
and
push
sbb
movs
sbb
push
getsec
jmp
loope
pop
sub
jmp
arpl
scas
jne
shl
outs
xor
add
mov
cmp
retf
inc
adc
and
ja
je
lods
or
cmps
sbb
mov
ret
dec
jbe
inc
sbb
xlat
ds
mov
enter
xor
push
rcl
mov
imul
jecxz
jmp
adc
stos
test
push
les
lods
xchg
push
push
adc
add
sbb
popa
icebp
dec
ja
outs
push
mov
add
pop
jg
mov
sub
loopne
and
push
cmp
dec
aam
lods
lahf
adc
fld
and
jns
dec
sbb
cmp
cmp
push
iret
and
push
add
add
dec
cmp
jp
into
fldenv
pop
add
das
jl
les
adc
(bad)
enter
mov
das
pop
rcl
add
jge
fcom
xchg
in
call
in
lock
scas
loopne
sbb
add
fdiv
ficomp
and
adc
pop
jno
out
and
sbb
jg
sub
int3
jb
ss
outs
fs
sti
lea
or
add
sbb
mov
add
fs
adc
or
jb
fmul
mov
xor
adc
dec
or
xor
pop
and
or
pop
dec
add
or
in
je
mov
push
xchg
sbb
sbb
enter
or
add
sbb
add
mov
jb
or
add
fild
or
dec
jl
icebp
gs
push
mov
push
mov
and
out
and
pop
(bad)
sbb
xor
push
pusha
bound
pop
jb
inc
cld
add
jne
or
mov
pop
js
inc
mov
sbb
mov
neg
jg
(bad)
mov
and
or
pop
lock
shl
sbb
xor
ret
mov
xchg
aam
jo
cmp
pop
adc
or
mov
or
inc
jno
sbb
in
cld
sbb
or
and
pop
ret
push
pop
lahf
ret
pop
pusha
test
loopne
and
cmp
dec
ficom
cmp
push
rcl
and
ror
fwait
push
inc
mov
sbb
fs
jne
js
rcl
push
adc
add
mov
mov
fld
xchg
in
adc
inc
mov
mov
(bad)
fst
push
jg
mov
mov
push
out
inc
push
repnz
add
adc
and
or
push
inc
ins
or
inc
icebp
das
stc
sub
int3
jmp
adc
sbb
sub
aam
retf
pop
push
adc
ds
pushf
rcr
mov
cmp
mov
mov
mov
sbb
add
call
mov
call
add
or
add
add
push
pop
or
mov
or
or
nop
jmp
or
(bad)
push
jge
stos
push
mov
sbb
mov
mov
xor
push
adc
fcomp
movs
inc
(bad)
stos
mov
sbb
jecxz
sub
cmps
add
ror
retf
test
push
push
mov
scas
xor
sbb
push
xadd
add
test
adc
sbb
ror
pop
jl
and
fadd
pop
imul
sub
ins
in
xor
push
jp
push
jnp
push
(bad)
movs
das
jmp
or
enter
scas
pusha
leave
xor
push
inc
sbb
mov
arpl
(bad)
xchg
add
leave
add
xchg
pushf
adc
or
sahf
shl
sbb
loopne
lods
push
int3
into
xchg
or
aas
(bad)
or
xlat
retf
and
mov
add
call
push
sub
xchg
push
fld
pop
push
mov
pusha
xchg
sub
mov
pop
loopne
adc
add
fisttp
adc
inc
mov
out
and
add
sub
add
outs
inc
repnz
mov
mov
and
outs
push
mov
aas
es
push
lea
fstp
jnp
xchg
les
and
pop
or
dec
repz
pop
iret
pop
pop
pushf
dec
pop
inc
dec
cmp
or
movs
and
nop
les
test
add
push
jb
sbb
out
pop
sub
jnp
and
enter
cmp
adc
dec
scas
call
data16
ss
add
ins
out
ds
nop
inc
das
iret
or
mov
sub
fadd
sbb
ss
push
ret
mov
dec
pop
and
add
sbb
or
test
pusha
fld
int3
fmul
jnp
cmp
mov
bsr
inc
xchg
sub
cmp
push
lock
push
sbb
lods
cmp
sub
jle
retf
xor
adc
or
ds
loop
cld
and
mov
stc
pop
add
test
sub
ret
test
xchg
js
fld
mov
in
mov
or
(bad)
and
shl
inc
into
sub
add
xor
(bad)
jns
add
dec
sbb
push
dec
lock
push
inc
mov
aas
cmp
push
je
retf
stos
(bad)
inc
dec
ja
mov
cs
jae
adc
push
or
sub
mov
dec
pop
aad
in
int3
sbb
jns
icebp
cmp
ss
sub
fisubr
jmp
adc
or
cmp
test
js
aam
inc
push
inc
push
test
fidiv
jg
test
je
mov
retf
pop
aam
lods
icebp
sub
shl
add
sub
adc
add
inc
pop
out
aam
fs
pusha
je
pop
pop
in
jbe
push
out
inc
pushf
mov
cmp
je
test
adc
or
dec
and
push
push
sbb
add
out
jge
test
lahf
push
fimul
shl
mov
fldcw
inc
xchg
jb
leave
retf
and
inc
fadd
jne
fild
and
jle
shl
xor
ret
and
mov
js
pop
jno
js
add
inc
push
mov
add
mov
and
pop
imul
mov
jmp
add
leave
popa
and
sbb
bound
mov
add
aam
push
mov
jae
ja
pop
push
inc
mov
mov
mov
or
mov
fs
aaa
push
test
je
inc
pop
jg
mov
iret
sahf
(bad)
xor
jmp
call
pop
mov
lods
jecxz
iret
add
cmp
ror
jnp
fnsave
fcomp
fcmovu
shl
cmp
pusha
adc
lods
imul
or
lahf
js
sbb
dec
add
out
rol
ja
adc
jg
or
adc
dec
or
push
mov
pop
xchg
inc
push
or
jae
inc
push
jl
ins
addr16
aaa
aad
shl
add
retf
div
cmp
jae
jmp
fs
leave
or
call
mov
mov
test
jb
adc
adc
adc
ss
xor
add
mov
(bad)
cmp
or
bound
dec
and
dec
push
dec
adc
fstp
push
push
ficom
cmp
jne
dec
fisttp
push
cs
jle
or
sbb
or
(bad)
xor
jge
add
mov
outs
cmp
jne
inc
cmp
jl
adc
(bad)
les
add
sub
inc
mov
cmp
inc
sub
add
mov
enter
and
rcl
dec
sub
jo
aad
or
cmps
add
(bad)
inc
fild
dec
test
pop
sub
sbb
inc
add
xchg
or
rol
inc
dec
sub
inc
mov
aaa
jno
lea
dec
push
int3
sbb
daa
js
add
push
push
mov
jb
lea
std
xor
pop
mov
js
mov
cmp
lods
clc
xlat
jge
jmp
cmp
in
or
scas
inc
mov
add
adc
outs
out
push
pop
sub
add
ret
xchg
or
inc
mov
fst
ss
psllw
sbb
jmp
or
in
xchg
jmp
call
xchg
push
sub
imul
push
jp
or
and
lock
cmp
fcom
retf
push
stos
inc
cmp
jle
xchg
add
lods
push
fisttp
lock
loopne
mov
ror
fucomp
pop
or
das
inc
fcomp
sbb
push
icebp
pop
push
cmp
mov
jmp
jbe
scas
push
push
mov
and
push
pop
ret
iret
fisttp
hlt
xor
push
jb
jmp
nop
in
jbe
fs
mov
(bad)
pop
movs
jae
inc
xlat
cmp
std
fisttp
shl
jb
cmp
jae
jmp
cmc
pusha
mov
or
jbe
loope
and
adc
pop
dec
(bad)
rcl
inc
pop
pop
into
ret
shrd
and
xor
mov
clc
lods
push
xor
leave
or
xchg
(bad)
push
mov
ins
(bad)
pop
hlt
stos
cmp
dec
sbb
jno
iret
push
or
and
sub
aam
or
adc
out
inc
sub
pop
push
and
je
cmp
test
js
sbb
push
cmp
adc
push
xchg
sub
pop
mov
mov
cmp
sbb
test
sbb
adc
inc
repz
cmps
pop
ja
add
xchg
mov
xchg
jl
lock
xchg
cwde
add
sub
pop
nop
jae
or
or
or
push
push
push
shl
fldenv
test
push
jmp
dec
lods
into
lods
sub
push
(bad)
jno
and
aaa
or
mov
pushf
cmp
pop
add
inc
push
sub
js
sbb
mov
and
ds
sub
cmp
sub
sub
add
sub
int
call
sbb
adc
xadd
mov
into
inc
(bad)
and
test
and
xor
sar
mov
or
pop
jmp
cmp
jbe
push
std
(bad)
enter
sbb
cmp
jb
mov
imul
sbb
aad
and
sbb
adc
jbe
push
pop
xchg
imul
pop
lods
cmp
js
cli
jae
popf
pop
fcomp
loop
adc
test
push
jb
mov
mov
dec
add
jmp
inc
mov
sub
in
cmps
add
inc
popf
ror
push
jae
fnstenv
jmp
mov
mov
inc
arpl
xchg
arpl
xor
fcmovnb
cmp
inc
cmc
add
xor
push
adc
clc
es
ins
adc
push
shl
and
xchg
or
mov
jb
mov
jnp
mov
jg
jne
cmp
push
mov
and
sub
and
lods
mov
push
cmps
or
or
mov
cmp
jae
jmp
ds
inc
xor
fcomp
add
inc
xchg
lds
push
div
jmp
mov
mov
fsubr
and
sub
imul
(bad)
jl
jo
and
fadd
jo
inc
xchg
add
add
jne
mov
jnp
fst
sub
add
jle
enter
mov
push
jb
pop
mov
or
enter
cs
pop
push
pop
retf
je
or
je
(bad)
pusha
add
cs
por
dec
gs
or
cdq
loop
push
cmp
int3
mov
fldenv
or
inc
pop
push
adc
adc
add
inc
inc
pop
jnp
sahf
xchg
mov
cld
cmp
je
icebp
sbb
mov
mov
and
test
pop
push
pop
mov
ss
in
outs
adc
fldl2t
mov
xor
mov
or
dec
inc
mov
mov
nop
sub
cmps
test
sub
arpl
cmp
fs
or
test
rcl
ins
jae
retf
cmp
dec
or
jb
push
ins
cmp
sub
adc
ror
shl
cmp
sbb
leave
jne
mov
lock
cld
nop
mov
mov
push
jb
sbb
adc
shl
ror
into
fnstsw
pop
push
xor
adc
add
outs
or
ret
add
mov
push
loope
mov
sahf
and
inc
fdiv
cwde
in
je
jle
fsubr
out
sbb
movs
mov
push
xor
test
pop
add
stos
add
int
adc
in
or
icebp
mov
je
sub
aas
cmp
repnz
jb
add
sbb
push
jl
push
fimul
xchg
dec
ret
in
or
cmp
xchg
push
popf
and
mov
mov
adc
(bad)
sbb
and
adc
daa
sub
lods
outs
pop
add
ret
mov
mov
outs
sub
cld
jae
popa
jmp
pusha
sub
adc
out
jmp
(bad)
fs
pop
mov
pop
aam
lds
adc
mov
sbb
call
sti
jmp
aas
sbb
jb
add
or
outs
lahf
sub
sub
stc
sbb
mov
sbb
push
push
or
dec
shl
add
inc
xchg
repz
enter
push
mov
and
mov
xor
sub
iret
mov
scas
mov
fmul
pop
rol
fnsave
into
addr16
scas
ins
fs
retw
adc
repnz
mov
pushf
sbb
or
aad
sar
loope
scas
ins
arpl
pop
xor
and
xor
aaa
and
push
push
add
xchg
cmp
lea
cmps
mov
(bad)
int
les
inc
movs
or
xchg
jo
xor
jbe
mov
mov
inc
mov
xor
in
pop
push
mov
push
push
and
in
inc
dec
sbb
jmp
retf
mov
lods
jne
cmp
jbe
and
mov
cmps
test
and
mov
sbb
jmp
xchg
mov
ins
cmp
mov
push
jo
push
add
and
mov
cli
or
aam
cmp
adc
cmp
jle
shl
daa
xchg
jp
xor
cmp
adc
dec
push
or
push
aam
sbb
add
(bad)
idiv
js
stc
jl
jmp
push
or
call
ret
into
inc
jne
dec
test
(bad)
push
xchg
cmp
jne
dec
jp
cmp
pusha
in
aas
pop
dec
pop
mov
jge
inc
inc
mov
stos
push
or
mov
mov
es
add
cdq
jge
mov
add
add
add
js
inc
out
sti
push
jbe
popf
addr16
xchg
jle
xchg
fist
add
push
cmps
sbb
ror
dec
xor
sahf
push
inc
sub
ret
jl
loope
or
out
sbb
inc
or
jb
(bad)
mov
fcomp
or
inc
inc
repnz
and
lea
test
jl
rcl
push
add
fisttp
jmp
call
cli
fs
call
(bad)
jae
call
mov
and
out
lods
pusha
xor
jge
mov
pop
dec
sar
sbb
fwait
add
inc
xor
xchg
shl
scas
outs
pusha
call
xor
mov
push
movs
lds
rol
les
xor
mov
inc
mov
mov
mov
mov
xchg
fdivr
push
and
cmps
stc
cmp
and
pop
pop
rcl
popf
inc
dec
adc
cmp
xor
mov
dec
xor
mov
sbb
call
ins
inc
shl
mov
mov
push
sbb
mov
mov
sbb
inc
ins
xchg
push
inc
add
sub
push
sub
and
or
adc
sub
jmp
mov
pop
or
push
popa
pop
add
aaa
pop
xor
outs
mov
xor
jmp
inc
dec
add
and
sbb
adc
retf
inc
mov
or
(bad)
xor
hlt
inc
loopne
xor
pusha
pop
nop
push
(bad)
fisttp
(bad)
xchg
cmp
push
lea
pushf
es
or
inc
cmp
je
cld
cmps
mov
popf
or
mov
xchg
mov
xor
outs
mov
dec
cmp
and
sbb
jmp
xor
xchg
pop
adc
add
push
ja
inc
push
repnz
dec
mov
lods
outs
add
into
cmp
ret
mov
push
xor
cmps
movs
out
outs
pop
clc
adc
jb
jmp
dec
loop
add
jmp
push
cmp
popa
mov
mov
mov
sbb
dec
dec
sub
jne
in
popf
sub
sub
push
inc
aas
jne
add
cmp
fstp
bound
sub
inc
pop
lds
shr
hlt
adc
add
dec
stc
out
test
and
(bad)
int
or
popa
mov
xor
(bad)
out
push
int3
and
mov
or
outs
xchg
sub
sbb
movzx
rol
mov
push
jecxz
mov
add
data16
cmps
pop
stos
sub
dec
lock
sub
inc
sub
cdq
aaa
pop
pop
call
rdpmc
divps
lock
and
imul
pop
pop
clc
inc
sub
ror
je
mov
cli
loop
jle
mov
mov
sbb
inc
lods
adc
in
inc
data16
(bad)
enterw
add
and
push
cs
push
jmp
ins
in
(bad)
es
add
pop
xchg
jg
addr16
xor
mov
add
or
or
icebp
sbb
ret
ret
loope
mov
in
cs
fst
sahf
xor
cmp
dec
iret
in
mov
adc
outs
or
mov
push
lock
(bad)
cs
inc
pop
ds
scas
cmp
mov
in
xchg
add
retf
mov
or
inc
nop
bound
jge
jmp
lahf
pop
fist
es
fcmovbe
outs
std
popa
mov
push
sub
inc
jl
mov
jne
or
pop
cld
ins
xor
push
outs
js
shl
push
xchg
imul
sbb
out
push
mov
dec
loopne
in
jns
sbb
and
xor
pop
jmp
hlt
loopne
jmp
adc
and
dec
(bad)
cmp
(bad)
cmp
add
int
imul
je
sub
sub
pop
cmps
push
cmp
(bad)
add
fist
aaa
stos
scas
cli
inc
out
es
mov
in
and
xchg
inc
cmp
ins
cld
cmc
mov
sti
sar
nop
inc
xor
pop
push
add
sub
sub
retf
adc
mov
and
jne
mov
sub
dec
dec
adc
adc
je
das
and
xor
adc
adc
cs
or
fstp
pop
inc
adc
(bad)
jns
dec
inc
je
adc
or
je
mov
rol
retf
(bad)
or
push
pop
enter
in
xor
test
dec
xor
mov
jmp
out
lahf
sub
push
ror
add
ror
inc
push
call
sbb
or
mov
lods
mov
sbb
sbb
mov
and
movs
sbb
xor
jo
jno
push
sub
sub
add
add
jo
push
mov
sbb
add
xor
movs
stc
aaa
add
add
mov
pop
mov
pop
test
pop
cld
pop
push
lea
cmp
js
adc
sub
stc
xchg
cmp
cwde
cwde
add
int
pop
push
lods
inc
mov
fnstsw
fldenv
adc
and
add
fs
jo
add
pop
inc
inc
sbb
xchg
mov
add
leave
popa
(bad)
rol
loope
ins
inc
clc
jo
push
aam
mov
adc
mov
in
add
pop
add
jb
pop
(bad)
jl
ret
and
adc
out
aad
jmp
pop
adc
sub
push
loope
inc
inc
cmp
or
or
or
es
inc
mov
push
ja
xchg
adc
inc
into
test
out
pusha
dec
adc
xor
push
pop
inc
in
pop
les
cmp
inc
inc
jns
inc
popa
(bad)
jne
movs
fsubr
dec
lea
scas
push
cdq
movs
pop
push
push
punpckhbw
ja
cmps
push
repnz
repnz
xchg
int3
repz
in
loope
or
and
sbb
in
or
push
cmp
stc
sbb
ret
hlt
jbe
push
leave
lock
aam
pop
push
mov
push
cs
or
push
imul
dec
adc
mov
je
mov
cmp
push
dec
add
ss
push
addr16
sbb
adc
add
push
push
mov
push
lea
add
xor
rcl
pusha
(bad)
clc
or
inc
(bad)
test
mov
shl
pop
jae
push
loope
or
out
and
add
xor
xor
shl
add
jle
ror
mov
xor
push
outs
mov
add
out
adc
inc
pop
mov
cli
push
pop
dec
and
call
(bad)
popa
and
loop
std
pushf
fmul
nop
dec
aad
test
adc
dec
sub
test
gs
push
add
pop
ror
pop
test
out
loopne
pushf
in
stos
shr
push
jmp
arpl
adc
jp
pop
inc
adc
ret
xchg
bound
jle
or
pop
inc
or
push
add
xchg
iret
adc
xabort
add
pop
mov
retf
mov
arpl
cmp
mov
fbstp
add
sbb
not
test
scas
in
dec
leave
jmp
dec
push
cmp
call
push
push
inc
fiadd
add
sub
cmp
xor
or
adc
sub
nop
ud2
xlat
fwait
(bad)
adc
adc
ss
lds
dec
xchg
and
(bad)
mov
push
imul
pop
add
lea
mov
add
pop
in
inc
sub
cmp
popa
dec
jne
or
cmp
jne
clc
(bad)
or
test
pop
imul
push
jo
push
adc
dec
push
xor
mov
rol
or
inc
jne
out
fsub
adc
mov
nop
pop
pop
pop
cld
xchg
xor
mov
pop
std
add
add
icebp
pop
pop
push
mov
mov
sub
cmp
push
sub
adc
inc
loope
mov
nop
push
not
(bad)
push
cmp
imul
nop
rcr
adc
cmp
scas
test
xchg
pushf
in
inc
push
xchg
inc
cs
xchg
jnp
fcmovne
mov
dec
add
dec
out
sub
inc
jo
or
mov
aad
ja
loope
and
jle
push
ins
iret
(bad)
fs
push
inc
cmp
dec
cli
mov
mov
mov
and
sub
mov
jl
test
mov
aaa
dec
cmp
sub
and
enter
xlat
mov
pop
jmp
mov
or
mov
jne
ret
xchg
scas
cmp
and
stos
pop
push
mov
jp
out
pop
ja
cmps
cmp
inc
cmp
push
repz
xor
adc
jo
jbe
inc
sub
fmul
pusha
dec
fs
add
je
dec
xchg
mov
stc
mov
sbb
jo
call
mov
add
jg
jmp
push
or
nop
sub
ins
and
xor
add
or
add
popa
aam
inc
xor
fisttp
rol
dec
sbb
dec
cmc
sub
(bad)
ins
push
cmp
dec
sbb
repnz
into
je
out
or
push
dec
push
xchg
xchg
xchg
xchg
dec
dec
dec
dec
push
fwait
xchg
xchg
dec
dec
push
push
es
dec
dec
pusha
sbb
xchg
xor
and
ins
or
ret
cmp
xchg
or
popa
mov
sbb
mov
or
mov
fsubr
faddp
xchg
jge
shl
aaa
(bad)
xor
mov
ins
and
and
mov
adc
add
retf
sub
retf
adc
popf
fidivr
sbb
stc
cmp
jo
add
ror
add
in
jbe
push
pusha
das
jae
add
mov
or
mov
inc
(bad)
or
jb
jno
ror
adc
sbb
nop
mov
xor
pop
loope
push
cmp
xor
cmp
test
sbb
cmp
mov
retf
add
js
and
shr
add
or
dec
pusha
popa
and
in
push
sbb
imul
adc
inc
(bad)
pop
sub
mov
hlt
sub
sbb
sub
push
pushf
sbb
sub
jl
adc
popf
ins
ja
mov
xor
ss
mov
ins
adc
mov
popf
mov
movs
xchg
jge
popa
adc
sub
enter
push
int3
push
cwde
ins
sbb
push
mov
pushf
and
and
idiv
add
jmp
or
mov
cmp
mov
je
aaa
imul
in
or
ds
jb
addr16
sub
or
cs
sbb
retf
call
inc
lock
pmulhuw
push
sbb
and
nop
sub
sub
cdq
inc
and
sbb
leave
test
sbb
es
test
je
pop
loope
cs
(bad)
rcl
retf
add
mov
cmp
je
inc
mov
xchg
cmp
jb
iret
push
aas
mov
mov
xchg
xchg
movs
leave
cdq
lds
loop
iret
movs
test
jp
xor
mov
xchg
dec
(bad)
mov
cmp
jne
into
arpl
imul
cwde
cdq
cmp
pop
rol
nop
or
push
and
shl
sbb
pop
or
inc
fs
add
ret
cmp
mov
push
test
inc
pop
pop
cs
mov
xchg
inc
cs
add
lods
prefetcht1
aam
gs
retf
stos
push
cdq
mov
mov
sub
dec
and
cdq
push
add
adc
mov
pop
jne
or
pop
lock
inc
push
nop
cdq
sbb
lods
add
push
sbb
ret
test
int3
add
add
ins
push
test
add
and
imul
lea
(bad)
loopne
loop
xor
and
mov
push
mov
mov
sahf
inc
jo
cmp
push
(bad)
das
movs
sete
cmp
mov
je
mov
add
adc
lea
inc
sbb
sub
ins
aad
mov
shl
mov
or
dec
xor
xor
jmp
push
popf
sub
test
cmp
mov
(bad)
inc
push
sub
lock
push
aas
(bad)
xchg
mov
and
push
push
gs
movs
xlat
jle
add
jl
jb
leave
cmc
jg
jge
sub
arpl
and
lea
js
lds
int3
jp
fisubr
xor
sub
inc
and
push
sar
mov
test
push
xor
fiadd
add
inc
jle
lahf
ret
scas
in
test
fnstenv
(bad)
xchg
cmp
or
pusha
push
inc
ret
lds
jle
les
call
pop
cmps
mov
jmp
add
rol
xor
(bad)
jne
add
push
push
outs
loop
cmp
in
lea
ins
push
or
jle
arpl
mov
add
jecxz
sbb
test
cmp
leave
bound
outs
adc
and
test
or
ja
sub
jmp
and
pop
inc
jge
lea
cmp
nop
mov
icebp
xchg
push
pop
cmp
add
aam
inc
inc
push
nop
icebp
dec
pop
inc
xchg
mov
ror
inc
pop
add
mov
xchg
inc
popf
retf
shl
fstp
ret
je
and
and
sbb
dec
mov
dec
ficomp
jmp
add
cmpxchg
icebp
ret
add
(bad)
push
inc
cs
shr
dec
lea
mov
cmp
mov
mov
imul
push
cdq
das
enter
cdq
sub
pop
push
out
and
dec
mov
sbb
je
in
imul
xchg
popf
sbb
mov
and
push
push
xor
mov
sub
dec
dec
jae
test
adc
cmp
sbb
adc
or
pop
jl
pop
nop
xchg
mov
dec
mov
popa
inc
in
mov
xchg
rol
aam
jmp
call
inc
std
fild
cmp
jb
jmp
ror
add
test
inc
push
push
stos
(bad)
aam
add
sahf
in
pop
ins
dec
in
loop
cmp
or
push
cmp
jbe
pushf
call
add
and
aam
push
push
mov
lds
call
jl
pop
popa
push
into
dec
data16
into
xchg
lds
in
mov
push
push
push
sbb
and
xchg
not
in
enter
mov
sbb
inc
sub
stc
mov
les
pop
adc
jg
cli
sbb
arpl
add
shr
xchg
test
jns
inc
add
sti
or
outs
inc
jg
test
pop
jne
mov
(bad)
test
pop
push
lea
sbb
dec
and
call
push
mov
jg
fist
sti
cmp
push
sahf
add
ds
add
sub
or
in
mov
push
aaa
stos
(bad)
pop
in
into
ds
push
sub
in
test
add
ret
outs
cdq
in
adc
dec
adc
gs
lock
push
jb
lds
fs
sub
dec
push
and
pop
adc
shr
add
rcl
inc
dec
popa
pop
adc
push
rol
fiadd
xor
out
push
cmp
adc
sub
ret
and
and
cmp
stos
sbb
daa
dec
push
push
jb
sbb
xchg
sub
inc
scas
ret
push
xchg
addr16
test
jle
push
xchg
jmp
inc
retf
sbb
or
pop
fisub
mov
jne
int3
push
push
jmp
pop
scas
mov
pusha
push
sub
stc
retf
ret
pop
and
mov
mov
add
push
inc
jae
scas
xor
int3
loop
ret
add
push
fild
or
add
adc
mov
sbb
(bad)
xchg
add
pop
inc
fst
push
mov
or
(bad)
sbb
or
sbb
xor
fidivr
or
retf
push
dec
jge
pop
sub
xor
and
or
xor
inc
neg
ret
mov
rcl
xor
xchg
jle
xor
lock
out
mov
pop
jmp
fistp
dec
xor
pop
dec
mov
push
stos
xor
call
push
out
mov
dec
push
mov
dec
dec
ja
jns
push
push
xchg
sbb
inc
sbb
push
jl
and
adc
aad
add
sub
add
mov
add
sub
sbb
and
add
outs
inc
and
and
outs
add
or
mov
sbb
or
push
or
xchg
jle
lods
mov
adc
pop
cmp
test
daa
and
cs
mov
test
add
or
dec
dec
pop
xor
ret
in
pusha
adc
jg
push
xchg
add
push
xchg
shr
sub
pop
and
and
int
or
dec
and
xlat
out
jp
mov
das
cs
dec
xchg
push
sbb
pop
add
imul
imul
xchg
int
cmp
adc
adc
pop
xchg
gs
sbb
xchg
gs
xchg
and
and
sub
push
xchg
pop
pop
sub
pop
xor
and
xor
je
ret
adc
xor
sahf
data16
xchg
retf
fisubr
xor
mov
add
cmp
shl
adc
cmp
push
jg
outs
out
adc
adc
xchg
xor
mov
mov
jmp
inc
cmp
dec
adc
pop
xchg
gs
aas
inc
inc
inc
inc
gs
xchg
gs
inc
inc
inc
inc
mov
mov
or
cmps
add
or
xor
or
in
push
push
jb
adc
and
jecxz
add
js
mov
push
push
push
sbb
and
mov
cmp
inc
or
dec
xor
or
add
adc
cld
pop
rcr
cdq
pop
outs
or
mov
pavgw
and
adc
dec
xchg
add
in
or
mov
jne
add
ins
mov
jp
pop
cmc
rcl
es
jle
aad
jbe
mov
cmps
jno
push
pop
add
ss
dec
adc
mov
fs
inc
inc
xor
add
das
mov
mov
scas
mov
fcom
xor
mov
clc
push
or
imul
add
mov
jb
pop
loope
sub
or
add
and
bound
loopne
xor
(bad)
push
cmp
add
aam
js
jbe
ret
add
xor
das
add
and
ret
rcr
stos
or
jmp
ror
push
(bad)
je
and
test
and
push
adc
lock
mov
cmp
loope
inc
cmp
jb
out
dec
fsub
add
dec
add
pop
(bad)
sti
icebp
lea
cmp
pop
or
push
push
cmp
int
inc
xor
ror
push
inc
xchg
ins
mov
inc
cmp
push
push
mov
push
loopne
and
or
outs
jg
add
nop
in
rol
or
das
sub
inc
aad
push
sbb
xor
adc
push
adc
push
dec
pop
int
shr
scas
add
cmc
mov
sbb
push
lea
sub
pop
xchg
in
inc
inc
push
add
adc
xchg
fld
inc
inc
push
sbb
fcomp
out
pusha
add
cmp
and
mov
rol
or
and
ret
mov
xchg
cmp
push
push
scas
pop
test
cld
(bad)
daa
xchg
in
(bad)
lods
inc
pusha
add
js
pusha
popa
out
mov
and
xchg
jmp
test
inc
inc
inc
in
pop
xchg
inc
push
inc
add
xor
sti
xor
fimul
repz
iret
int
or
add
cmc
xor
in
dec
sub
dec
add
adc
sub
xchg
add
and
cld
xor
add
or
movs
or
adc
jle
int3
push
cmp
dec
out
add
imul
add
add
dec
fs
adc
call
fsub
add
add
pop
mov
dec
cdq
add
gs
loopne
push
mov
mov
sub
sub
sub
jle
mov
jns
dec
jne
add
daa
mov
call
shl
sub
movs
mov
ins
jle
and
mov
dec
push
fldenv
sete
mov
xchg
push
jbe
repnz
scas
rcr
add
and
and
add
test
sbb
sbb
add
and
sbb
sbb
loopne
push
rcr
inc
ss
inc
les
push
jg
or
or
and
sbb
or
xchg
add
add
shl
sbb
push
xchg
rcl
push
sbb
call
push
cmc
adc
lock
mov
push
fistp
cwde
mov
sbb
push
push
js
adc
add
js
cmc
cmp
mov
adc
cmp
cmp
xchg
in
dec
aas
mov
mov
mov
stc
xchg
and
fst
mov
inc
movs
data16
add
mov
call
sbb
es
jne
inc
add
mov
xor
sub
in
xchg
scas
xor
inc
sub
sub
sbb
je
movs
dec
and
cmp
pop
xor
inc
loopne
mov
or
cmp
cs
xor
push
jae
push
mov
or
pop
movs
xchg
inc
add
jmp
dec
rol
pusha
sub
je
lea
push
fdiv
inc
cmp
(bad)
fcmovnu
fdivr
sub
xor
mov
inc
xchg
sub
leave
or
sub
inc
dec
adc
mov
call
jmp
or
jo
pop
rcl
push
add
(bad)
xchg
adc
pop
adc
push
push
xchg
fstp
xchg
jo
jl
xchg
mov
je
sti
jo
jmp
mov
add
ja
sbb
mov
iret
lea
add
aaa
xchg
sub
rol
mov
fs
mov
loopne
mov
popa
sbb
mov
or
mov
loopne
adc
and
pop
pop
loop
inc
push
inc
or
cmps
sbb
sbb
pusha
leave
push
add
sbb
ins
and
and
push
sar
jle
dec
add
and
cmp
sti
aas
dec
push
sbb
add
mov
dec
or
pop
scas
mov
xor
adc
sbb
mov
adc
add
or
pop
inc
inc
mov
inc
aas
movs
test
push
cdq
dec
inc
mov
inc
push
sbb
cmp
adc
mov
or
imul
push
es
sbb
or
nop
jne
inc
xchg
mov
sbb
shl
sub
pop
inc
or
pop
or
xchg
lea
push
and
xchg
bound
push
mov
cdq
repz
std
xor
xchg
cld
aam
inc
popf
in
mov
cmp
sbb
out
clc
out
mov
and
add
pusha
xor
aam
or
xor
pop
adc
cmp
test
lea
(bad)
cmc
jnp
mov
adc
daa
rcl
retf
movs
mov
mov
mov
inc
idiv
xlat
sub
mov
xchg
mov
ins
and
or
add
adc
fnstcw
adc
cmp
test
mov
enter
inc
push
pop
xchg
les
and
pop
les
or
adc
enter
adc
and
cmps
inc
jbe
sub
call
xor
dec
je
lea
pop
inc
lock
cmp
inc
or
xchg
sub
and
test
outs
inc
xor
or
jmp
and
scas
push
inc
inc
mov
jo
cmp
jl
push
add
sti
pop
pop
(bad)
out
scas
inc
outs
inc
imul
je
jae
in
mov
gs
sbb
adc
or
and
pop
inc
ins
dec
inc
inc
stos
cs
or
aam
stos
xor
mov
mov
dec
in
sub
cmp
stos
mov
sbb
stos
leave
cmps
call
out
cli
inc
push
dec
int3
add
mov
adc
dec
fsubr
dec
std
adc
mov
push
mov
cmp
(bad)
in
mov
sbb
adc
sbb
fsub
mov
pop
(bad)
push
mov
neg
pop
test
pop
mov
hlt
sub
pop
push
dec
sbb
int
loopne
jl
cmp
or
jno
in
adc
jae
jns
dec
adc
sub
mov
fild
inc
mov
add
mov
push
adc
push
push
dec
pop
xor
adc
and
push
or
xor
xor
pop
sbb
repnz
adc
iret
(bad)
jl
loope
add
js
mov
sar
dec
mov
adc
inc
push
dec
push
scas
sbb
ds
lods
inc
test
push
and
add
aaa
pusha
shr
mov
jle
push
fs
div
adc
jl
cld
enter
fbld
bound
or
sub
test
and
inc
nop
out
add
test
jle
jb
adc
sub
lea
sbb
jge
(bad)
push
or
pop
cmp
jbe
addr16
or
pushf
call
xchg
add
and
pop
aad
xchg
xchg
add
xchg
push
cmps
loop
jb
push
add
ja
in
jl
mov
xor
js
sbb
add
mov
sub
adc
pusha
into
jb
push
dec
js
add
int3
push
test
push
adc
jo
xchg
test
fcomp
cmp
jae
sti
xor
cmp
sub
inc
ins
dec
add
aaa
push
sbb
or
out
sbb
sbb
inc
jmp
pop
icebp
pusha
mov
sbb
js
push
sbb
call
into
div
mov
inc
mov
shl
sahf
inc
js
fstp
pop
xor
jecxz
push
xor
add
pop
je
mov
cmp
sbb
xchg
push
movs
ror
jge
inc
sahf
or
call
gs
rcl
push
xchg
cdq
jae
jmp
in
ja
sub
es
jp
push
or
add
cmp
into
lds
push
movs
xor
inc
nop
cmp
sub
push
adc
mov
mov
div
sub
aad
mov
sbb
retf
pop
mov
lds
cmp
jge
dec
push
adc
jge
push
pusha
in
rcr
sub
outs
jmp
jmp
fwait
inc
imul
inc
inc
and
lds
pop
pop
hlt
dec
scas
sbb
cmp
je
jmp
jmp
cmp
lock
add
mov
lea
cmp
stos
mov
push
bound
push
sub
test
cmps
call
sbb
mov
adc
jbe
pop
in
mov
imul
and
add
add
inc
out
jmp
push
outs
push
jmp
add
pop
add
add
ins
sub
pushf
test
sbb
jp
inc
scas
std
pop
sti
ins
and
movs
and
and
das
inc
retf
je
cmp
je
xchg
pusha
or
sar
fist
adc
push
jae
cmp
mov
stos
clc
rcl
push
and
sahf
dec
sbb
aad
adc
inc
retf
das
pushf
mov
adc
or
push
loop
cmp
push
icebp
adc
jmp
push
test
push
(bad)
icebp
lds
ret
sbb
(bad)
test
pop
mov
pop
fnstenv
(bad)
in
dec
pop
es
or
dec
push
push
add
cli
add
inc
mov
add
add
mov
ror
mov
sbb
or
mov
push
clc
ror
pop
(bad)
or
push
shl
cmp
in
out
adc
les
inc
adc
mov
adc
and
dec
adc
dec
in
xor
inc
adc
dec
inc
jl
and
jg
pop
inc
xor
cmp
or
add
jns
iret
xchg
lock
and
pop
push
push
inc
pop
or
out
sbb
inc
xchg
push
movs
fiadd
add
or
sbb
mov
xchg
outs
cmp
jge
dec
dec
add
and
lea
dec
dec
push
add
dec
pusha
lea
sub
mov
fcmove
int
add
or
inc
sub
cmp
out
fs
mov
cmps
pushf
lea
or
xor
adc
ret
sub
test
xor
and
pop
add
or
ja
out
and
xchg
sub
or
mov
addr16
and
cmp
test
sti
sbb
and
pop
je
out
adc
test
lods
xchg
inc
call
adc
or
es
inc
jo
fstp
mov
cdq
inc
jmp
mov
clc
movs
push
stos
sbb
shl
add
retf
rcl
mov
xor
aas
test
push
cmps
push
pop
call
add
or
ror
gs
fld
es
int3
pop
test
pop
dec
cmps
sub
inc
sub
dec
sbb
mov
xchg
or
inc
sbb
enter
mov
add
fcom
sub
and
adc
mov
sub
lods
fidivr
addr16
test
lods
adc
push
cmp
push
mov
xor
push
jbe
rcr
mov
adc
stos
adc
in
sub
lock
xchg
add
clc
jl
adc
icebp
inc
or
jg
pop
je
in
push
adc
or
inc
or
adc
or
push
leave
or
(bad)
popa
add
adc
pop
xor
rcr
in
dec
pop
lds
add
mov
cmps
push
push
push
dec
movs
jo
and
sbb
lock
out
scas
push
cmp
in
or
or
adc
hlt
adc
xor
sbb
js
(bad)
repz
mov
outs
scas
jl
mov
push
inc
rcl
adc
enter
adc
adc
adc
(bad)
jl
fisttp
pusha
fs
jg
shr
pusha
pop
push
stos
jo
add
js
int3
and
xor
nop
push
inc
jmp
leave
add
shl
or
add
das
or
pop
enter
adc
sbb
sub
xchg
sub
inc
xchg
push
sbb
pop
pop
ret
neg
push
adc
shl
xchg
push
pop
push
inc
enter
or
adc
inc
jl
xor
sbb
sbb
in
xor
sbb
sub
sub
dec
icebp
push
inc
xchg
mov
scas
pusha
pusha
adc
add
nop
in
add
xchg
mov
jns
sub
jbe
add
push
(bad)
test
mov
test
push
fiadd
ins
inc
dec
dec
sbb
sub
jmp
adc
push
ja
adc
inc
stc
dec
adc
adc
pop
or
xor
or
dec
dec
loop
hlt
sub
push
and
clc
js
push
addr16
dec
dec
int
dec
es
xor
fist
retf
and
jecxz
lea
mov
pop
lds
pop
xor
lahf
lds
cld
or
into
push
je
dec
dec
test
and
(bad)
mul
loop
inc
mov
mov
pop
cmp
pop
stos
retf
or
cmp
and
adc
(bad)
xchg
cwde
outs
pop
call
sub
test
push
jnp
loopne
pop
retf
cmc
jbe
aas
mov
pop
mov
sub
pop
repz
push
push
icebp
xor
inc
push
push
daa
sbb
sbb
cld
add
in
jmp
push
xchg
push
push
es
aaa
add
pop
and
push
inc
and
adc
inc
mov
inc
test
jb
sub
and
inc
push
test
loope
push
sbb
sub
add
add
xor
xchg
fs
pop
fcomp
sbb
clc
mov
mov
inc
mov
adc
pusha
add
adc
add
(bad)
ds
inc
shl
push
shl
fmul
sahf
push
in
jbe
lahf
push
and
mov
sub
std
cmp
jbe
mov
add
push
add
push
jmp
mov
add
pop
mov
sti
inc
inc
sbb
jbe
jp
out
push
retf
stos
push
shl
pop
push
mov
dec
lock
aas
lahf
test
sbb
inc
add
cmp
or
div
mov
repz
imul
add
mov
jmp
mov
ret
pop
adc
call
dec
in
xor
and
jbe
and
stc
test
mov
lock
inc
sbb
in
bound
sub
nop
xchg
data16
xor
(bad)
je
push
mov
clc
cmp
push
mov
lock
push
xchg
pusha
test
adc
sahf
rcr
jbe
sbb
jecxz
mov
and
adc
mov
xlat
xor
cmp
scas
arpl
push
add
jns
push
enter
lahf
mov
pop
xor
xchg
add
inc
dec
xor
xchg
mov
push
lahf
and
push
ins
and
outs
sbb
add
mov
sub
cmp
cmp
sbb
or
inc
add
inc
mov
mov
(bad)
lea
lea
aad
daa
jo
add
lods
mov
and
sbb
push
and
sub
stos
or
out
adc
and
shr
adc
leave
jne
push
sub
out
jno
in
ret
cs
fldcw
mov
out
data16
sbb
inc
mov
mov
jne
ret
inc
mov
sbb
(bad)
sub
test
sbb
or
popa
arpl
pop
call
call
mov
jl
add
cmp
adc
arpl
test
mov
xchg
stos
in
paddb
das
sbb
or
sbb
and
xchg
adc
adc
xchg
and
adc
adc
sbb
push
adc
mov
pop
add
sub
push
dec
test
or
sbb
add
push
mov
add
push
les
push
add
(bad)
or
or
cs
sbb
scas
mov
fisttp
jle
inc
scas
les
stc
das
push
(bad)
mov
(bad)
sar
js
data16
sbb
add
rol
lods
jb
push
fmul
jb
sbb
sub
fiadd
enter
jmp
add
repz
pop
or
mov
shr
rcl
adc
bound
(bad)
cmp
rcr
or
inc
push
dec
add
and
aas
jecxz
ficom
xor
mov
sbb
push
mov
push
lea
and
dec
mov
sub
pop
loop
add
mov
nop
add
pop
call
sub
test
cld
jno
adc
out
inc
icebp
xchg
dec
sbb
mov
mov
add
add
add
aaa
inc
add
dec
jne
lea
loop
das
jmp
lds
in
mov
in
push
or
loopne
push
jg
call
xchg
sub
ins
mov
std
inc
push
sub
es
xor
dec
fsubr
sbb
enter
mov
adc
and
xor
dec
xchg
xchg
lds
dec
xor
add
cmp
mov
sbb
xchg
or
retf
mov
aaa
cmp
iret
mov
and
loopne
jbe
pop
leave
pusha
in
xchg
sbb
add
mov
(bad)
in
mov
sbb
sbb
push
dec
aaa
mov
xor
mov
inc
or
inc
aam
inc
push
(bad)
adc
ins
or
pushf
retf
fnsave
jmp
sbb
add
pop
pusha
mov
pop
jle
or
(bad)
jne
lea
sub
push
add
push
pushw
clc
ds
mov
dec
or
and
jns
mov
sbb
movs
push
jl
aas
inc
fst
shl
and
ror
jp
inc
push
in
(bad)
ins
add
pop
pop
add
or
sti
cld
fisttp
inc
fwait
mov
mov
add
adc
popf
fldcw
xor
sub
add
add
sub
imul
add
jno
(bad)
mov
mov
mov
mov
mov
std
mov
jnp
dec
dec
sbb
sti
adc
out
into
jo
cmp
pop
adc
cwde
mov
adc
ror
retf
push
pushf
sbb
xchg
movs
das
push
test
or
(bad)
cmps
mov
mov
js
in
int
ret
jmp
add
sar
or
scas
inc
lahf
pusha
push
retf
ret
cdq
push
push
pusha
push
sub
shr
add
or
bts
add
fsubr
loopne
xchg
inc
mov
jb
inc
das
stos
arpl
je
gs
mov
push
popa
in
ficom
sub
push
cmp
jmp
inc
pop
and
shr
mov
shl
add
lea
in
push
xchg
fmul
cmp
or
popf
ret
jle
mov
jns
mov
lahf
ror
ins
std
retf
xor
test
shr
lods
popa
jo
jae
mov
ds
sahf
adc
scas
pusha
sub
inc
add
and
mov
mov
mov
popa
sub
test
rcl
in
dec
mov
xor
sti
clc
pop
mov
jecxz
lea
ret
jge
fld1
int3
ja
dec
sbb
and
mov
cmp
mov
in
mov
icebp
leave
popf
jmp
loopne
mov
mov
(bad)
shl
jns
js
adc
push
and
add
dec
push
fimul
sar
dec
or
adc
mov
and
ror
jmp
push
nop
fmul
xchg
loopne
add
or
cld
sahf
mov
adc
ins
sub
pop
push
mov
rol
add
xchg
adc
cmp
nop
mov
xor
pop
mov
lahf
and
sbb
adc
and
pop
pop
adc
rol
lds
stos
jecxz
test
loop
retf
or
adc
mov
in
dec
shl
popa
and
mov
in
push
mov
ins
or
jl
out
addr16
jle
push
clc
sub
jnp
push
test
test
push
and
lock
add
lock
or
push
mov
sub
popa
dec
dec
or
into
sbb
sub
nop
rol
mov
adc
jmp
pop
add
sbb
mul
sub
jmp
lea
mov
retf
mov
add
adc
dec
inc
pop
retw
rcr
lea
fdiv
mov
(bad)
loopne
cmp
and
retf
pushf
sbb
out
add
jmp
or
shl
adc
jae
inc
mov
mov
pop
lods
mov
cmp
call
push
ds
(bad)
mov
in
adc
pop
push
cmp
mov
icebp
ss
or
test
push
push
lea
cmp
cld
and
add
outs
cmp
rol
out
mov
test
pop
add
in
mov
rcl
mov
mov
jne
icebp
push
xchg
loopne
fiadd
sbb
inc
das
data16
scas
mov
xor
inc
out
dec
mov
sbb
sbb
adc
pop
xor
push
test
mov
mov
mov
pusha
pop
(bad)
in
xchg
pop
je
push
xor
stc
dec
cmp
jb
les
inc
ins
or
enter
jle
jne
mov
cs
add
cmp
jbe
xchg
xchg
add
pop
dec
inc
mov
aad
pop
mov
adc
pushf
jo
cmc
pop
fcom
inc
add
add
inc
mov
ret
mov
nop
inc
pop
or
push
sbb
adc
loop
jnp
addr16
rcl
mov
out
sahf
mov
inc
shr
sub
lea
and
addr16
movs
dec
jmp
nop
adc
or
shl
loop
jnp
jp
shl
dec
pusha
jne
mov
and
enter
pop
cmp
(bad)
push
es
jp
gs
in
jne
xchg
into
or
cmp
jae
inc
icebp
dec
in
push
mov
sbb
icebp
xchg
mov
xor
jae
mov
dec
movs
adc
mov
cmp
test
cmps
gs
push
fwait
clc
cmp
jp
jb
adc
in
mov
pop
dec
ins
sti
lods
adc
push
mov
(bad)
dec
lahf
mov
pop
sub
jle
pop
shl
sbb
inc
add
(bad)
stc
outs
aaa
mov
pop
or
call
mov
shl
dec
fst
jecxz
add
and
sub
sub
faddp
fidiv
in
and
or
add
cwde
stos
adc
and
and
adc
shl
aad
or
cmp
mov
std
out
mov
ret
andnps
adc
rol
mov
jo
sahf
jmp
lea
inc
or
jmp
stc
push
push
das
cwde
sub
xchg
and
sysret
aad
sub
sbb
jne
mov
adc
loopne
jns
mov
stos
inc
or
and
mov
mov
sub
mov
push
dec
add
stc
mov
daa
sbb
cmp
add
and
pop
and
dec
das
cdq
sahf
iret
push
push
push
les
aad
or
sbb
sbb
adc
shrd
xchg
clc
or
ja
jb
cmp
ret
jae
mov
mov
xchg
mov
shr
or
fwait
xchg
vmaxsd
push
push
into
inc
mov
sub
mov
cmp
(bad)
aas
sub
sbb
ins
and
ret
dec
rcl
test
push
xor
xadd
push
add
add
push
sbb
fist
inc
rsqrtps
inc
or
mov
mov
cld
and
shr
or
pop
inc
mov
mov
iret
or
xchg
(bad)
inc
add
ret
cmp
pop
push
push
ins
es
ror
cli
mov
xor
stos
pusha
sbb
add
or
jo
inc
cwde
jmp
sub
repz
mov
iret
cdq
idiv
mov
mov
or
imul
sar
mov
js
aam
fwait
xchg
and
lock
mov
push
mov
shr
push
sub
sti
cmp
jle
popa
outs
das
lds
rcl
and
dec
outs
mov
ret
inc
adc
jmp
jle
inc
xor
lea
add
arpl
push
sbb
pushf
loopne
xor
in
mov
jp
add
xchg
jmp
jl
outs
mov
xor
cmc
or
rol
cmp
lea
call
adc
push
cdq
ss
push
fimul
mov
int
push
pop
cwde
fldenv
mov
xor
cmp
or
inc
pop
and
and
dec
jae
xor
cmps
cmp
add
adc
push
sub
xor
lock
xor
adc
mov
cmp
or
inc
mov
inc
inc
xchg
jmp
sub
inc
(bad)
cmps
add
ins
pop
lahf
mov
jo
ret
mov
add
or
mov
jl
and
lock
clc
jae
pop
add
adc
and
or
jnp
dec
pop
enter
mov
or
add
adc
psubd
es
pop
and
retf
rcl
adc
jmp
call
xchg
fwait
out
sub
mov
push
dec
and
lahf
cs
or
repz
adc
jne
mov
mov
clc
mov
push
shr
add
sub
pop
pop
scas
inc
dec
pusha
and
int3
mov
imul
inc
xchg
loop
or
sbb
enter
push
fs
inc
inc
rcl
jns
mov
out
icebp
pop
and
test
lds
out
xlat
shr
cmp
cli
push
arpl
pop
lds
mov
ja
stos
sub
sub
or
mov
es
mov
pusha
jb
and
adc
fcmove
pushf
jmp
sbb
pop
push
add
pop
sbb
fimul
xchg
mov
neg
add
jge
push
fild
fnstsw
fmulp
push
cmp
je
pop
gs
and
add
cmp
out
cmp
adc
je
pop
bound
sbb
rcr
add
mov
pop
cmp
xchg
aas
aaa
push
push
cmp
call
add
dec
or
push
cmp
or
jae
pop
jecxz
(bad)
mov
repnz
push
sub
cmp
jbe
lea
add
mov
icebp
jecxz
call
inc
sbb
call
je
shl
popf
cli
aad
inc
imul
shr
inc
mov
sub
sbb
jbe
or
mov
ja
(bad)
mov
loop
shl
dec
mov
jne
mov
sbb
adc
inc
cmc
lock
call
iret
jmp
pop
cmp
lds
loop
cmp
mov
and
mov
xor
aas
xchg
int
inc
add
scas
add
test
adc
fst
xor
fld
mov
cmp
inc
inc
xchg
pushf
pop
lock
sbb
jp
mov
and
mov
add
sbb
add
mov
shl
cmps
inc
shr
fwait
inc
add
retf
sub
sbb
add
dec
not
mov
adc
and
dec
std
test
loope
pusha
lods
dec
add
(bad)
pop
lock
int
pusha
pop
pop
mov
mov
jge
add
cmp
xchg
mov
and
add
test
sub
lea
add
test
(bad)
into
jl
(bad)
icebp
cwde
xchg
aad
jle
pusha
rol
or
sti
push
dec
dec
add
or
sub
push
xchg
xchg
sbb
call
adc
cmps
shr
push
jae
sub
daa
pop
sub
cwde
add
xchg
dec
enter
das
(bad)
(bad)
cmp
mov
push
loope
int3
ins
adc
push
lds
push
or
push
or
or
cmp
dec
pop
mov
sub
xor
dec
add
mov
inc
adc
mov
jne
outs
in
lea
push
mov
test
or
mov
cli
inc
cdq
xchg
clc
xor
jne
or
cmp
xor
push
sbb
mov
sub
sub
add
cmp
inc
and
push
fld
jnp
jl
test
or
nop
ror
fdivr
loope
dec
inc
add
add
mov
sub
shr
xor
mov
or
call
call
ins
fist
sbb
jmp
loope
rol
lock
add
or
in
inc
inc
rcl
mov
add
jb
sti
sbb
mov
add
mov
cld
push
or
call
dec
push
xchg
rcl
bound
icebp
fcom
jp
dec
in
cmp
push
pop
mov
mov
les
jmp
ins
or
mov
adc
inc
adc
enter
inc
dec
test
pushw
sbb
imul
sub
dec
jae
call
loop
or
fisubr
add
xchg
mov
shl
enter
push
xchg
xchg
dec
dec
mov
push
add
je
addr16
rol
cdq
add
inc
fmul
idiv
mov
sub
adc
mov
mov
dec
es
xor
popa
xchg
mov
xor
xchg
adc
cli
test
mov
jne
xor
out
mov
retf
mov
sbb
dec
dec
in
cmp
fld
dec
inc
mov
jns
dec
inc
dec
dec
xor
mov
fs
mov
cs
xor
xchg
cmp
sub
int
pop
mov
ins
pop
dec
xchg
dec
in
sub
(bad)
push
jge
inc
sub
inc
loopne
mov
and
push
fcom
imul
es
es
add
jl
cli
xor
push
iret
jp
retf
xchg
in
mov
pop
test
(bad)
mov
mov
ds
mov
push
bound
adc
add
fidiv
js
enter
je
lods
fadd
cmp
loopne
mov
push
js
ss
xchg
sub
je
dec
pop
test
adc
push
rol
inc
adc
pop
add
inc
xor
jle
inc
xchg
add
pop
push
push
je
and
sti
je
xchg
push
enter
pop
xor
lock
add
pop
adc
ins
nop
push
push
prefetcht1
adc
inc
cwde
into
push
or
dec
mov
pop
push
ins
outs
mov
in
jmp
push
imul
and
push
and
sbb
push
mov
sub
dec
inc
and
jne
lock
inc
call
push
pop
adc
movaps
sbb
rol
gs
inc
shl
je
push
push
sbb
add
push
add
jne
cmps
push
mov
push
adc
jmp
push
adc
mov
sbb
adc
rcl
push
add
xor
ror
mov
push
je
movs
push
push
push
mov
aad
aas
push
jnp
cmps
inc
les
pop
repnz
cmp
pop
aaa
and
pop
add
cmp
add
mov
adc
mov
push
sub
adc
bound
adc
push
fstp
sbb
(bad)
sbb
pushf
or
push
sub
sub
pop
cmp
mov
push
mov
xor
mov
mov
inc
or
xlat
in
and
xor
loope
add
or
mov
cmp
fwait
shr
push
rcl
xor
add
js
inc
enter
fdivr
cmp
cmp
rol
mov
inc
add
inc
push
inc
imul
add
inc
mov
mov
jl
inc
mov
or
loopne
fsub
repz
xchg
pop
(bad)
inc
arpl
jo
xor
pop
je
pop
push
mov
jl
push
mov
inc
fimul
icebp
hlt
cld
xor
mov
mov
or
stos
jb
lds
sbb
js
add
popf
cmps
or
test
sbb
mov
out
ficomp
sub
xor
and
sbb
inc
push
sbb
enter
pop
sub
les
dec
repnz
inc
dec
push
arpl
add
inc
xor
not
test
frstor
push
mov
or
or
cwde
add
pusha
add
sub
push
inc
pop
popa
adc
call
xor
mov
fild
mov
add
pop
dec
and
add
dec
push
in
push
xor
or
xor
xlat
add
sbb
xchg
mov
inc
dec
adc
lds
dec
movs
jno
push
push
push
mov
stos
xchg
sbb
pop
cwde
dec
cmp
aam
push
jle
pop
inc
push
push
and
push
repnz
call
and
lock
ror
adc
scas
dec
adc
cmp
jecxz
aad
popa
mov
pop
xchg
retf
mov
pop
sbb
adc
push
and
sbb
xchg
push
ret
adc
jp
push
xchg
xor
and
pushf
push
add
stos
add
pusha
add
lds
xchg
test
test
in
jmp
and
sbb
xchg
bound
out
retf
scas
jl
add
push
mov
mov
div
jle
sub
inc
xor
cmp
test
(bad)
dec
sub
xlat
adc
fild
rcl
je
cmp
test
adc
cs
retf
or
xchg
inc
mov
xlat
js
gs
xlat
cli
or
sbb
sbb
add
repz
push
jl
or
xor
jnp
cmp
dec
fstp
test
dec
jo
fs
ja
call
pop
xchg
xor
fsub
(bad)
mov
xor
imul
cmp
sbb
sub
mov
sub
jne
add
xlat
jl
in
push
push
add
cmp
(bad)
dec
push
mov
jb
mov
mov
(bad)
inc
das
loopne
retf
ror
ret
sar
rol
sub
sub
inc
cwde
js
or
scas
pop
arpl
aad
sub
rcl
lock
inc
hlt
neg
shl
sub
add
test
enter
or
cwde
push
xchg
xchg
daa
inc
pop
inc
add
enter
mov
xchg
imul
mov
fiadd
scas
int3
and
jmp
adc
pop
adc
setns
xchg
xor
adc
xor
in
or
mov
add
push
push
push
ret
add
adc
dec
push
test
sub
and
in
cmp
mov
cmp
cmp
(bad)
lock
push
mov
dec
scas
dec
push
jle
mov
jmp
int
jmp
mov
and
xchg
mov
or
inc
sub
inc
pop
enter
add
mov
jo
pop
and
sbb
pmullw
aad
sub
push
add
pop
inc
mov
push
sbb
sbb
sar
mov
inc
test
shr
xor
rol
out
or
fstp
jnp
and
fstp
ins
xlat
dec
(bad)
fsub
sbb
in
sbb
add
xor
shr
cmp
(bad)
pop
jae
pop
jmp
les
inc
lds
mov
sub
or
ror
ds
and
pop
das
jne
mov
xor
xor
add
inc
shl
xlat
shr
movs
(bad)
xchg
cmp
in
mov
push
jb
pop
jbe
push
push
sti
movs
and
fmul
retf
shr
pop
mov
scas
or
rol
mov
pop
or
jmp
push
sbb
pop
test
out
push
or
retf
jl
outs
sub
or
add
cs
cli
add
(bad)
jmp
sbb
adc
push
mov
dec
clc
inc
adc
out
and
and
mov
mov
sbb
mov
adc
xchg
aad
iret
std
mov
inc
dec
inc
jmp
pop
xlat
mov
(bad)
jmp
das
and
pusha
cmp
clc
js
push
add
dec
inc
push
dec
outs
ins
mov
sub
je
in
pop
pop
inc
daa
jge
inc
xor
sbb
js
xchg
arpl
xor
jnp
pop
sbb
(bad)
xor
jb
push
push
push
dec
std
test
push
inc
(bad)
and
push
dec
inc
pop
movs
adc
data16
ja
rol
push
mov
adc
out
jns
and
or
mov
std
mov
jno
ror
push
cmp
div
fild
mov
fsub
int3
sbb
retf
pop
mov
xchg
hlt
add
sahf
xor
popa
inc
xchg
dec
mov
adc
add
call
dec
dec
sbb
(bad)
sbb
inc
add
or
mov
pop
push
pusha
and
ret
call
jle
jbe
pop
cdq
je
and
fsubr
xor
push
and
inc
jo
sbb
push
test
rcr
dec
add
or
adc
cmp
or
das
mov
pop
add
cmp
add
nop
nop
sub
leave
loop
sbb
sub
inc
and
pop
enter
int
fld
sbb
pop
jmp
and
and
test
cmp
fs
cmp
inc
push
push
xor
xor
sbb
pop
repnz
lea
cmp
cmps
je
push
sub
ret
jle
std
adc
jmp
mov
lods
pop
inc
pop
mov
inc
mov
cmp
pop
or
neg
add
push
pop
xor
xchg
ins
dec
or
cmp
push
or
add
cmps
scas
push
dec
push
mov
je
scas
jnp
mov
cmp
dec
or
fisttp
push
add
inc
cmps
jnp
mov
add
lock
shr
push
add
retf
idiv
jbe
or
add
xor
lock
jp
sbb
mov
mov
or
lea
fs
mov
add
in
repnz
cmp
dec
retf
add
das
or
(bad)
mov
jae
sub
mov
inc
sti
inc
sub
xor
pop
dec
call
mov
inc
rcr
fdivp
inc
adc
xchg
add
push
mov
fsubr
push
shl
pushf
mov
shl
test
scas
fs
cld
adc
jmp
mov
inc
enter
inc
sub
add
pop
daa
inc
rol
or
adc
popf
repz
icebp
fld
mov
dec
sbb
xchg
mov
xor
adc
pop
push
xchg
add
aaa
loop
add
xchg
and
pop
sub
pusha
mul
pushf
jns
pop
pop
fs
outs
inc
mov
cmp
nop
xchg
or
or
ror
fs
jmp
dec
aaa
cdq
inc
sbb
add
movs
push
inc
mov
push
daa
in
inc
aam
pop
adc
movs
inc
xor
add
scas
dec
sldt
add
nop
jl
sub
or
jo
dec
push
inc
and
xor
xor
push
jmp
lods
pop
retf
aas
sbb
adc
je
add
push
sub
cmp
inc
ss
movs
add
mov
inc
push
cmp
das
sub
je
pop
jp
jns
push
push
jmp
ins
retf
add
scas
push
lock
push
jo
pop
mov
xchg
cmp
jo
cmps
test
test
mov
and
or
test
cmp
push
icebp
and
inc
cmp
je
jmp
or
je
cmps
mov
les
push
imul
jge
xor
xor
adc
pop
adc
jne
loop
pop
jmp
mov
and
push
nop
mov
or
adc
(bad)
sar
sbb
jne
(bad)
jge
or
addr16
lahf
ret
adc
into
mov
mov
movs
adc
push
and
and
mov
sbb
sub
and
fisttp
push
div
add
mov
pop
or
mov
test
jecxz
adc
outs
push
popf
sbb
adc
push
push
xchg
lock
jge
adc
mov
rcl
and
or
mov
fild
or
push
mov
je
(bad)
(bad)
or
ja
push
mov
call
add
les
xchg
or
or
xor
mov
adc
pusha
push
xchg
pop
dec
dec
repz
cmc
push
or
ror
xor
push
inc
outs
test
jg
inc
or
loopne
dec
adc
inc
in
sub
push
xlat
adc
xor
push
mov
xchg
pusha
imul
jmp
jge
or
push
add
pop
dec
or
push
mov
cwde
adc
adc
push
dec
inc
mov
(bad)
aam
or
fnstcw
pusha
cmp
jge
ret
add
ret
lea
fbstp
mov
popa
(bad)
stos
ret
adc
push
jmp
mov
jle
adc
inc
mov
adc
inc
push
adc
jae
xor
add
and
ret
jno
shl
jo
dec
popa
clc
shl
and
inc
cmp
jne
cmp
ret
and
repnz
fwait
mov
add
out
mov
add
push
stc
popf
jo
inc
jecxz
pop
ja
mov
dec
sbb
mov
enter
mov
jecxz
or
mov
jg
cmp
mov
push
std
fisub
mov
push
and
add
call
jne
jno
sbb
mov
rol
mov
lea
sub
test
mov
add
xchg
fdivr
jmp
outs
std
loopne
pop
pop
lds
or
or
or
add
adc
add
push
dec
add
movs
stos
dec
leave
fistp
add
jno
sub
dec
push
push
mov
das
lds
dec
or
or
jne
sub
sub
lods
xlat
retf
int3
add
sbb
adc
wbinvd
lods
das
inc
push
ret
push
imul
dec
mov
nop
setl
rol
pop
lea
popf
mov
inc
(bad)
cs
or
mov
lods
jge
sub
aas
jo
add
lahf
scas
icebp
add
add
push
mov
xor
add
xchg
mov
xchg
add
ins
stc
cld
dec
sti
test
jl
push
mov
clc
(bad)
push
add
bound
test
pop
jo
mov
mov
pushf
maskmovq
data16
cmps
mov
shl
js
comiss
or
inc
cmp
dec
push
lea
test
mov
gs
aas
aam
xor
addr16
mov
jp
cs
(bad)
sbb
xchg
(bad)
lock
js
push
xor
pop
pop
and
or
xchg
fucomi
add
rcr
sbb
inc
mov
xor
fwait
mov
sbb
or
jl
sti
int3
cld
lods
shl
in
fs
nop
push
cmp
inc
inc
sbb
push
rol
cmp
pusha
cld
fsub
sti
adc
cld
das
das
push
jbe
jbe
add
adc
push
iret
jle
aam
or
xchg
xor
les
bound
in
mov
inc
push
jo
and
adc
mov
dec
adc
leave
sub
xchg
call
add
mov
mov
cmp
mov
pop
sbb
add
add
add
test
je
mov
int3
je
and
mov
pop
rcl
rol
stos
test
rol
dec
inc
int
sub
mov
or
test
in
sbb
addr16
cmp
cwde
fimul
es
sbb
push
or
push
push
push
rol
push
enter
pop
ror
loope
add
xor
add
sbb
add
push
pop
inc
push
mov
sbb
add
push
int
es
fbld
add
js
mov
stos
pop
mov
cli
inc
(bad)
add
out
call
jge
sub
or
shr
add
das
test
mov
xor
xor
jp
sbb
push
push
mov
pop
popa
dec
dec
ror
jo
aas
je
mov
push
inc
cmp
lods
xchg
or
mov
jmp
pop
fldcw
or
or
daa
mov
adc
inc
inc
imul
iret
jnp
jae
adc
cmps
add
cmp
mov
mov
push
imul
nop
or
aam
pushf
pop
mov
outs
and
call
pop
add
mov
nop
mov
push
xor
xchg
cmovo
pop
adc
adc
push
clc
icebp
jle
mov
push
push
dec
cmps
int3
add
adc
and
jle
int3
sub
js
adc
add
mov
cli
add
add
mov
clc
and
out
push
scas
sbb
or
outs
adc
add
addr16
ficomp
pop
pop
dec
je
add
call
xchg
inc
aaa
fcmovnu
pop
inc
and
adc
les
pusha
and
dec
push
adc
sbb
jne
push
push
push
push
rcl
pop
or
into
test
scas
and
push
xor
sbb
aam
jne
or
cmp
dec
xor
outs
scas
imul
cmp
inc
punpckhdq
push
sbb
jmp
enter
in
add
adc
enter
mov
je
shr
sub
adc
retf
adc
push
test
and
and
push
pusha
push
inc
ds
adc
dec
aam
inc
cmp
(bad)
sub
cdq
shr
mov
push
cmp
mov
lea
(bad)
xor
not
das
add
or
lea
mov
and
mov
inc
mov
aaa
push
push
xlat
inc
pop
mov
lock
(bad)
add
xchg
sbb
jg
into
test
push
mov
mov
inc
mov
xor
jne
mov
adc
inc
push
mov
rcl
sbb
je
add
push
push
rcr
mov
push
les
push
std
or
or
mov
sub
inc
inc
mov
icebp
push
rol
fstp
aaa
xlat
push
mov
popa
dec
adc
mov
push
fwait
and
push
cmp
pop
sbb
mov
fimul
push
jb
stos
fild
cmp
je
push
pop
test
fisttp
jno
add
in
sub
lods
or
pop
mov
or
test
cmp
or
inc
or
mov
push
add
xor
and
not
xchg
sar
add
push
stc
inc
or
adc
and
inc
add
push
adc
into
neg
sub
int
inc
arpl
sub
test
sbb
push
retf
(bad)
arpl
data16
jo
shl
inc
int
add
test
pop
not
fcomp
mov
call
push
ret
mov
add
inc
push
mov
loope
loope
jp
das
inc
les
mov
or
(bad)
ins
push
cmp
into
mov
push
mov
mov
shl
push
sub
xor
push
or
xchg
pop
lahf
sbb
or
mov
push
jle
mov
xchg
or
test
xor
cmp
xlat
sbb
or
adc
push
mov
push
adc
adc
in
lds
pop
(bad)
fcomp
call
mov
add
mov
add
add
in
in
arpl
sbb
mov
lea
mov
int3
mov
push
add
int
shl
lods
outs
lock
leave
add
hlt
sbb
js
sub
jo
aam
outs
push
sbb
push
lock
push
pop
sub
jbe
es
(bad)
xchg
je
mov
test
pop
mov
sbb
and
add
(bad)
ss
pop
cmp
aaa
(bad)
pop
or
ror
xor
test
mov
and
push
into
cmp
mov
jo
or
mov
push
dec
add
dec
scas
pop
lods
mov
or
xchg
ret
cmp
pop
and
aam
lods
mov
cwde
popa
inc
xor
pusha
mov
sbb
or
and
push
mov
adc
or
sub
outs
mov
in
jmp
mov
mov
push
std
in
stos
xor
lahf
adc
add
outs
loopne
ror
pusha
cmp
leave
cmp
sti
pop
or
inc
mov
out
retf
test
mov
idiv
gs
adc
or
ret
pop
lods
aaa
lods
nop
mov
mov
fist
rcr
xchg
sub
int3
ins
add
add
test
adc
pop
mov
and
or
ret
ficomp
setne
loope
ret
pop
cmp
enter
sub
xor
sub
xor
add
sbb
fsub
add
lea
je
mov
or
test
or
in
inc
mov
lods
mov
ss
into
ins
mov
cmp
jbe
je
push
push
inc
lds
stos
test
mov
enter
push
push
retf
dec
inc
nop
push
test
push
popa
inc
je
add
ins
pop
mov
xor
push
jg
ss
sbb
jl
lods
mov
mov
fadd
and
push
and
or
cld
lds
or
and
pushf
cwde
int
sub
je
xor
ficomp
jno
cmp
push
push
cld
pop
sub
jmp
sub
sar
dec
mov
push
inc
jne
stos
call
add
jne
loopne
stos
test
add
push
jb
mov
jle
adc
inc
sbb
mov
jmp
sbb
push
or
sub
out
and
loopne
fimul
add
int
xchg
adc
xchg
sbb
clc
pop
add
fidiv
(bad)
arpl
pop
stc
mov
(bad)
jp
push
dec
(bad)
int3
push
add
inc
or
int3
inc
lock
pop
mov
mov
dec
(bad)
sbb
sub
jl
inc
xchg
sbb
xchg
mov
push
jbe
push
lods
loope
clc
jnp
jg
cmp
xchg
sbb
mov
adc
fsubr
fimul
sbb
or
fst
dec
push
inc
inc
mov
sbb
adc
push
fs
adc
xor
test
test
cld
and
leave
fs
sbb
or
clc
aas
adc
test
jne
or
push
cmp
sbb
in
jge
push
daa
xchg
push
leave
sub
or
icebp
or
inc
pop
fdiv
cmp
xlat
call
test
mov
push
add
movs
sbb
jb
and
or
push
adc
push
mov
push
es
mov
sete
add
mov
lock
aam
mov
push
(bad)
test
dec
adc
inc
je
mul
popa
adc
or
sub
jne
cwde
adc
or
jb
push
je
loop
mov
sub
or
test
inc
jmp
adc
jmp
adc
push
and
push
in
add
mov
ins
out
add
xor
(bad)
pop
fidiv
push
sub
loope
cwde
mov
and
sti
sbb
adc
sbb
pop
add
fs
shl
sub
add
xchg
add
dec
push
test
ret
push
xor
and
das
je
out
adc
push
mov
mov
in
call
addr16
jne
stos
sub
mov
daa
pop
dec
cmp
dec
or
xor
adc
retf
pop
push
or
fs
inc
leave
and
ss
pop
jo
or
cs
push
xor
nop
jmp
sbb
shl
setp
dec
xchg
fiadd
push
cmp
je
aas
jl
adc
dec
loopne
xchg
pop
push
xchg
cmps
sbb
fdivr
and
jmp
xor
xor
and
xor
add
sbb
das
push
mov
call
retf
cwde
sar
adc
adc
retf
pusha
mov
xor
(bad)
fs
cmp
icebp
sbb
inc
arpl
ds
call
push
ins
push
aaa
cli
pop
pop
mov
or
cmp
stc
mov
push
imul
ret
dec
adc
pop
pop
jg
pop
mov
xchg
adc
jge
sub
adc
xchg
push
shl
pop
scas
lea
or
cmc
cmp
pop
js
sub
pop
sbb
push
cmovne
adc
(bad)
sahf
pusha
cmp
xlat
xor
pusha
push
push
push
sub
sub
nop
sbb
js
mov
mov
ins
scas
xchg
or
rcr
cs
inc
int3
push
repnz
add
jecxz
aaa
pop
cmp
jo
mov
(bad)
push
(bad)
fbld
sar
push
daa
loopne
add
sub
lods
adc
fs
ret
in
push
and
xchg
leave
ins
cwde
push
lods
out
sub
adc
xchg
adc
and
call
xchg
scas
lea
xchg
outs
xor
mov
fcomp
add
ret
jo
por
daa
or
mov
and
fbstp
add
movs
gs
fucomip
sub
mov
cmp
jge
sub
mov
test
push
add
or
sbb
pusha
mov
cmps
pop
sub
test
inc
push
adc
mov
mov
pusha
and
lahf
add
push
fs
pushf
xchg
or
adc
pop
push
sbb
push
push
pop
mov
push
or
fidiv
sub
sbb
sbb
lds
sbb
adc
std
xchg
mov
out
lea
add
scas
push
adc
sub
nop
lds
mov
test
jecxz
jne
pop
test
pop
jae
push
and
sbb
add
pop
pop
rcr
nop
cmc
scas
pop
jp
(bad)
mov
mov
inc
push
mov
xor
pushf
ds
sub
or
push
into
pusha
push
or
and
jnp
pop
imul
or
push
push
inc
(bad)
jl
push
push
imul
andps
lahf
cwde
mov
ds
les
icebp
outs
cmp
loopne
hlt
sbb
dec
ror
and
and
sub
or
jbe
ret
hlt
sbb
adc
xor
int3
ret
ret
call
pop
push
and
cmp
add
jmp
sub
sub
mov
movs
push
div
cmp
mov
push
cmp
push
jmp
punpcklwd
test
sbb
adc
popa
push
sub
mov
icebp
xor
mov
call
inc
jb
push
push
cmp
push
lea
push
or
in
cmp
aas
adc
push
xor
and
cmp
add
(bad)
xor
and
pusha
inc
or
repz
add
or
xchg
jl
and
and
or
cmp
cmc
adc
pop
call
cmp
or
repz
jne
push
add
inc
int3
jb
cwde
xor
push
ret
dec
(bad)
stos
xor
xor
mov
sbb
xchg
add
add
movs
test
add
xor
pop
push
xchg
enter
jl
das
pushf
cmp
add
pop
add
add
xchg
dec
add
mov
push
dec
mov
in
pusha
add
add
add
add
sub
inc
ss
push
test
or
add
add
imul
mov
faddp
out
push
or
fisubr
aad
repnz
add
fs
inc
lea
pop
and
dec
push
adc
inc
rol
cwde
push
pop
punpcklbw
mov
idiv
sub
js
dec
cmp
dec
je
nop
pop
dec
push
push
ret
(bad)
or
mov
(bad)
sbb
in
leave
or
add
inc
retf
pop
sahf
ins
pop
jne
or
ret
jbe
jb
add
imul
dec
push
or
pusha
sub
or
cmp
jmp
lods
dec
mov
dec
aam
inc
sbb
ret
leave
dec
retf
jo
daa
jl
shl
mov
push
mov
dec
adc
inc
pop
inc
cmp
call
push
push
fdiv
dec
xor
cmp
ret
jge
cmp
add
ret
sub
ret
xor
inc
push
mov
rcr
pop
movs
sahf
or
loop
das
inc
lea
scas
xor
mov
test
or
(bad)
push
cmp
add
xchg
ja
mov
fsubr
add
inc
mov
movs
adc
mov
push
in
inc
inc
and
mov
fist
cdq
out
aad
rcl
inc
xchg
push
xor
sbb
push
jg
sub
cmp
aad
in
cmp
push
push
sbb
add
and
inc
xchg
and
in
push
dec
jle
lock
(bad)
cmp
push
sub
xchg
and
adc
in
pop
fcomi
test
mov
push
xor
ret
push
ds
jo
add
in
inc
cli
jae
cmp
inc
or
xor
icebp
jnp
push
test
dec
jmp
lahf
sbb
sbb
pop
add
out
ins
dec
adc
adc
dec
dec
push
mov
xchg
adc
dec
pushf
mov
das
sub
test
and
hlt
push
stc
push
ja
mov
and
add
push
outs
out
jmp
pop
loope
sbb
sbb
fidiv
dec
addr16
sub
pop
inc
dec
dec
adc
mov
outs
add
adc
cmp
dec
(bad)
sub
sbb
push
push
adc
xchg
pop
add
mov
jae
lea
xchg
test
cmp
movs
call
mov
push
repnz
(bad)
not
dec
push
inc
sar
aaa
fs
inc
add
dec
push
inc
xchg
dec
push
inc
test
adc
(bad)
sbb
and
call
sub
add
jl
mov
jg
test
pop
pop
inc
sbb
je
xor
outs
or
lea
dec
rcl
and
ficomp
lahf
mov
cmp
or
sub
loop
add
dec
push
fadd
pop
adc
adc
adc
pushf
jle
mov
push
lods
sbb
push
or
pusha
ins
sub
sub
push
stos
push
inc
adc
test
dec
or
arpl
xor
or
xor
and
dec
mov
cmp
shr
arpl
adc
push
add
push
mov
push
sub
rcr
or
mov
mov
out
sbb
pop
inc
es
push
sub
pop
adc
adc
inc
jl
adc
adc
pop
repz
cs
cmp
nop
inc
cmp
xor
sbb
dec
mov
or
pushf
mov
sub
mov
ss
sahf
xor
mov
inc
add
cmp
pavgb
adc
in
mov
add
in
mov
out
lds
push
pop
iret
push
cmp
aad
pop
les
or
out
iret
push
cmp
lods
mov
pop
and
dec
pop
and
and
sub
push
rcl
cmc
arpl
or
sub
mov
inc
mov
cmp
in
dec
jae
sub
mov
pop
sub
mov
inc
fs
cmp
and
in
cmp
mov
sub
sbb
add
jl
es
or
inc
mov
mov
fs
mov
adc
xor
add
pop
les
addr16
cdq
mov
loop
lds
inc
push
or
mov
sbb
sub
outs
imul
pop
sub
jmp
dec
cmp
or
or
xchg
retf
enter
adc
pop
mov
mov
adc
jo
sub
push
add
pop
aad
push
cmp
dec
and
fsub
sbb
adc
int
mov
xor
xchg
js
add
or
jb
mov
push
out
mov
push
sbb
sub
fwait
push
xor
pop
(bad)
sub
push
xor
cmp
loope
add
ins
lods
in
dec
pushf
aam
push
mov
push
mov
fld
ret
jns
push
pop
inc
xor
cmp
adc
adc
adc
sub
aas
or
or
sbb
call
aas
push
jl
mov
in
mov
arpl
je
js
add
sub
je
xchg
sub
cmps
lods
retf
sub
mov
or
ret
dec
inc
shl
xchg
shr
mov
add
sti
test
and
adc
in
scas
loop
add
aaa
mov
ja
adc
adc
xor
mov
dec
(bad)
int3
or
inc
enter
jl
xchg
xor
rcl
test
lahf
call
push
out
out
jl
cld
adc
jge
iret
jne
push
adc
cmps
adc
ror
push
add
inc
xor
push
rcl
js
enter
pop
push
movs
or
fimul
js
add
lea
jo
xchg
int
mov
or
pop
add
retf
cwde
add
and
pushf
lock
dec
pop
pop
pop
mov
cmp
add
mov
outs
sub
jne
add
add
jmp
xchg
xchg
and
cli
outs
outs
test
lods
sub
je
dec
jne
loope
jnp
inc
and
cmp
adc
mov
mov
sub
xchg
ret
in
lock
pop
ins
sub
aam
adc
inc
mov
cmp
mov
add
lods
pusha
int
lock
adc
xor
inc
mov
xchg
add
push
icebp
mov
push
cmp
bound
sbb
add
test
imul
loopne
ret
imul
push
ins
std
sbb
inc
inc
ret
bound
loop
fcomip
xchg
lea
push
pushf
cmp
and
and
gs
dec
imul
push
inc
rcl
fwait
or
sbb
dec
dec
sub
(bad)
out
and
sbb
cmp
je
mov
jb
mov
fsubr
inc
clc
adc
adc
sbb
test
in
out
add
(bad)
dec
push
adc
add
mov
retf
mov
scas
mov
pop
mov
nop
sub
dec
jnp
ret
popa
mov
dec
xor
ins
mov
popa
sar
lea
outs
mov
out
xchg
adc
or
adc
sub
inc
sub
cmps
push
cmp
retf
das
adc
mov
fwait
je
xor
add
stos
mov
inc
loope
pop
pop
inc
shl
adc
pop
add
in
xchg
sbb
mov
xor
test
outs
push
adc
jnp
push
das
into
ds
loop
dec
movs
push
push
(bad)
cmp
pushf
jnp
mov
add
add
add
mov
fiadd
bound
stos
add
and
xor
ror
les
or
leave
sbb
(bad)
cmp
inc
out
mov
fsub
fidiv
adc
shl
mov
inc
rcr
movs
dec
(bad)
pop
jg
push
sub
mov
lea
ins
rcl
add
inc
inc
inc
xchg
and
mov
jnp
and
inc
xchg
movs
or
sub
xchg
push
mov
inc
dec
push
(bad)
dec
fist
push
add
fstp
xor
jne
ss
std
stos
pop
fcom
sub
jle
sub
in
push
xor
add
inc
add
add
sbb
rcl
sahf
rcl
mov
je
lods
xchg
add
or
push
push
adc
pop
sub
pop
cmp
pop
jge
nop
retf
iret
add
pop
inc
fdiv
pop
stc
mov
push
mov
push
fsubr
push
sub
mov
(bad)
mov
loop
or
push
and
adc
push
mov
ins
loopne
(bad)
sub
jnp
retf
sbb
pop
and
sbb
retf
or
cmp
mov
(bad)
xlat
push
fisttp
mov
push
rcr
dec
and
fidiv
loop
fst
out
cmp
loop
push
stc
add
add
jb
xchg
add
sub
sub
test
push
ror
pop
arpl
ror
push
das
adc
neg
adc
cmpps
inc
mov
aam
push
cmps
pop
in
or
jo
fwait
xor
pop
adc
inc
dec
push
loop
adc
mov
or
xchg
inc
mov
adc
and
repnz
xor
hlt
push
dec
inc
movs
push
stos
mov
mov
(bad)
or
push
cmp
scas
jp
inc
stos
mov
scas
js
xchg
dec
push
sub
shr
or
xchg
inc
sbb
aam
and
add
sbb
je
call
lock
mov
cmp
adc
add
imul
mov
sub
dec
lds
pop
fbld
loopne
dec
or
xor
push
cmp
daa
push
adc
adc
stos
call
add
ds
xor
and
dec
repz
sbb
or
jo
or
leave
and
pop
cmps
test
or
mov
(bad)
and
rcr
xor
out
adc
pop
add
jl
mov
or
fist
jo
push
in
lock
jge
mov
sbb
mov
push
int3
and
out
jne
sub
ins
inc
sub
pop
cmp
xor
sti
mov
dec
pop
and
add
mov
add
sbb
repz
hlt
inc
or
jae
loope
or
cmp
add
in
inc
mov
cmp
clc
push
and
push
adc
sti
pop
mov
pop
inc
and
adc
outs
scas
mov
push
rol
or
push
sub
mov
push
inc
or
add
inc
add
push
sbb
loope
or
fbstp
sbb
js
sub
fld
inc
and
cdq
int
fistp
aad
adc
adc
lea
pusha
or
mov
push
loop
xor
mov
je
mov
popf
or
js
cmp
mov
add
add
cmp
data16
fst
das
mov
cld
icebp
or
adc
dec
jl
mov
inc
gs
mov
fwait
adc
and
fstp
std
inc
or
or
push
repz
or
xchg
sbb
(bad)
mov
sar
and
push
sub
mov
fild
pop
test
adc
out
jo
dec
cs
pop
(bad)
stos
push
add
xlat
xor
arpl
fdivr
call
add
cwde
and
add
mov
and
add
mov
outs
add
dec
push
xor
add
mov
xor
inc
xor
retf
pusha
rol
mov
inc
sbb
les
ficomp
dec
scas
add
adc
shl
xor
rcl
adc
or
inc
sahf
xchg
pop
sub
je
repz
pushf
adc
or
dec
ret
pusha
mov
and
push
or
adc
fild
mov
or
movs
(bad)
xchg
(bad)
sbb
inc
and
das
pop
and
push
mov
inc
sbb
add
adc
cmp
pop
jbe
adc
push
xor
or
push
push
mov
mov
mov
xor
retf
or
and
pop
stos
fmul
retf
push
popf
mov
and
test
and
les
sub
out
cmp
pop
enter
or
hlt
in
add
inc
and
and
xchg
sbb
loop
retf
or
pusha
jnp
out
pop
add
pop
mov
sub
sbb
adc
sub
pop
ret
dec
or
mov
scas
cmp
inc
push
pop
jmp
xchg
sbb
nop
pop
xchg
fwait
add
push
inc
inc
push
or
jae
or
or
aam
mov
std
sbb
cmp
das
aam
or
mov
sbb
je
mov
dec
pop
inc
and
adc
mov
loop
test
dec
add
shl
cmp
xor
fist
push
mov
mov
loop
cs
or
adc
pop
pop
push
mov
sbb
scas
cmp
xor
outs
fmulp
xchg
das
out
adc
xchg
xor
push
mov
pushf
sbb
repnz
ins
push
xor
in
out
xor
(bad)
mov
pop
scas
sub
adc
add
xchg
test
push
lds
test
sbb
add
and
xor
add
sub
inc
or
sbb
scas
sbb
mov
sub
push
pop
cmp
loop
add
aas
repnz
js
mov
fs
fsub
pop
pop
dec
lods
push
or
test
jmp
or
or
adc
in
sub
loop
scas
mul
pop
ins
arpl
mov
cmp
das
pop
mov
enter
jmp
jmp
mov
push
cmp
cmp
xor
or
mov
inc
push
add
push
sbb
add
icebp
xchg
out
xchg
and
mov
ins
add
adc
ss
les
shl
add
je
shl
mov
or
jo
test
push
pop
pop
push
iret
sub
push
mov
repz
ficom
push
in
loopne
push
cmp
mov
pop
sbb
das
xchg
sub
stos
inc
xor
add
sbb
push
or
in
fst
push
push
or
rcl
rcl
mov
jp
fldz
mov
aam
push
push
out
dec
jp
cmp
ins
out
sahf
pop
lea
pop
je
inc
movups
adc
repz
inc
or
sbb
or
(bad)
shl
lock
add
clc
mov
push
push
mov
pop
xor
inc
push
or
sub
pop
test
dec
repnz
scas
inc
add
push
sub
add
pop
call
add
or
pop
popf
add
jne
mov
(bad)
jbe
push
adc
push
push
fimul
pop
test
add
push
jmp
add
add
jmp
adc
cmp
add
jg
mul
pop
rcl
aaa
sbb
sbb
xchg
push
gs
or
mov
inc
sub
dec
sbb
sbb
pop
mov
lods
adc
sub
or
mov
test
push
xor
sbb
inc
hlt
popf
retf
sub
icebp
mov
pop
cmp
ins
adc
fcomp
mov
cmp
mov
or
jmp
sar
or
call
mov
and
popa
push
and
mov
sbb
shr
and
cmp
cmp
inc
pop
cmp
or
es
or
int3
jmp
adc
jmp
and
mov
inc
shr
out
mov
in
xor
and
aas
lea
jp
xchg
xlat
add
cmps
sbb
jmp
ins
js
push
adc
mov
xchg
inc
les
bt
inc
or
inc
adc
add
push
add
mov
pushf
add
mov
lahf
test
or
repnz
inc
ins
adc
push
mov
aas
xlat
push
cld
and
add
push
or
push
xor
push
add
retf
add
ins
test
loop
loop
cmp
mov
inc
cmp
jecxz
or
pusha
div
push
or
sbb
adc
sub
loop
push
and
fcom
sub
cmp
aam
sub
add
jge
push
or
dec
ins
(bad)
shr
dec
ins
or
mov
mov
sbb
out
inc
mov
sub
cmp
and
mov
or
cwde
adc
mov
and
add
lea
imul
push
jno
and
inc
sub
lds
pop
outs
movd
shl
sub
in
sub
loopne
shl
ins
add
sub
mov
add
mov
ins
add
gs
jge
sbb
xor
adc
das
rol
mov
jg
jp
inc
push
inc
ret
rol
cli
shl
add
fild
test
mov
stos
aam
adc
and
fcomp
push
mov
sbb
and
add
inc
mov
sbb
jmp
xor
mov
mov
adc
or
retf
pop
add
or
add
xor
push
cmp
and
adc
pop
dec
ss
movs
popa
add
jo
mov
into
push
mov
push
les
pop
mov
jo
inc
adc
inc
ins
mov
pop
ret
push
enter
jne
test
lods
and
pop
cwde
and
inc
fs
push
adc
xchg
push
enter
mov
sbb
pop
xchg
cmps
or
retf
imul
retf
ret
add
es
xchg
out
movs
fld
push
pop
xchg
jp
mov
fimul
ja
not
das
add
mov
test
xchg
cmp
das
fiadd
pop
sub
pop
and
push
into
es
out
add
push
int3
and
aas
fiadd
and
or
add
call
pop
adc
sub
repnz
cmp
add
popa
pop
dec
push
add
mov
sbb
test
ret
jge
jae
push
mov
cmp
xor
sbb
sub
or
sub
jnp
pop
mov
xor
adc
mov
(bad)
mul
shl
sbb
sub
dec
xchg
or
sbb
je
adc
sbb
and
add
jge
out
sbb
sub
loopne
fs
push
sub
xchg
push
mov
lea
jl
add
aad
dec
outs
out
sub
je
pop
inc
push
mov
dec
push
or
repnz
add
ins
adc
sahf
xor
push
je
xor
mov
add
adc
addr16
add
fcmovbe
sar
lods
sahf
(bad)
nop
stos
sbb
adc
or
lea
mov
pop
mov
sbb
push
and
mov
and
cmp
repnz
sub
dec
add
outs
(bad)
pop
in
sbb
test
cmp
adc
stc
jmp
adc
add
inc
jecxz
pop
in
inc
ins
sbb
imul
mov
shl
xor
inc
dec
adc
pop
xor
push
add
cmp
inc
enter
sub
pop
arpl
dec
cmps
sub
dec
add
adc
sub
scas
xor
and
iret
pop
imul
inc
or
push
pop
clc
xor
adc
jmp
add
ins
ret
into
dec
add
lock
inc
lea
pop
dec
dec
adc
mov
push
add
or
test
popa
or
sbb
xor
push
(bad)
jb
pop
mov
mov
push
sub
(bad)
pop
and
and
inc
and
(bad)
jg
aas
push
repnz
stc
sbb
push
push
mov
xchg
jmp
sub
mov
jg
push
ins
jo
jne
lea
rcr
push
out
fadd
cmp
mov
push
pop
add
sbb
loop
inc
ror
int3
inc
mov
push
or
add
leave
adc
loop
mov
mov
sub
repz
inc
aaa
mov
adc
adc
cmp
inc
daa
call
adc
lods
add
add
mov
adc
es
or
and
jo
addr16
popfw
cmc
sub
addr16
rcl
pop
les
je
xchg
es
mov
or
(bad)
rcl
pop
dec
adc
data16
and
cmps
or
or
adc
repnz
jno
fistp
dec
add
test
stos
cmp
pop
jmp
pop
(bad)
pusha
mov
sbb
xchg
cmps
int3
add
clc
pop
xor
add
push
mov
sub
or
rcl
sub
cli
test
push
add
xor
std
scas
push
mov
mov
pop
inc
mov
xchg
push
pop
ror
aam
test
mov
add
ss
xchg
xchg
je
in
aad
and
ja
arpl
adc
lock
iret
inc
pop
jl
aaa
mov
pop
jmp
fisttp
and
jmp
sub
pop
stc
stos
push
cmp
push
rcr
popa
sub
jle
and
stos
cmp
cmp
sbb
jns
xchg
and
icebp
loop
dec
cdq
dec
shr
in
retf
inc
xchg
and
bound
retf
test
push
icebp
into
popf
ds
rcl
movs
jo
add
mov
inc
adc
or
xchg
mov
call
mov
xor
sub
daa
or
inc
mov
sub
or
push
pop
aad
icebp
or
sub
out
mov
add
ret
adc
lock
cmp
dec
ins
xor
sbb
mov
sbb
retf
add
pop
mov
push
and
or
cmp
sbb
out
adc
bound
and
pushf
inc
mov
mov
adc
dec
call
adc
jmp
add
jmp
adc
mov
mov
repnz
and
outs
push
sub
(bad)
push
outs
sti
mov
es
xchg
arpl
sbb
or
add
nop
jge
lods
sub
xor
ins
or
cmp
test
add
dec
out
push
test
outs
push
fcmovnbe
pop
stos
or
jp
push
shr
push
adc
mov
and
and
(bad)
jbe
lea
pop
or
outs
and
mov
push
and
mov
lea
and
or
loope
jae
xor
je
jl
inc
push
sub
pop
inc
cld
int
add
or
(bad)
xor
cmp
outs
sub
inc
xchg
dec
mov
sub
inc
lea
push
enter
pop
xchg
or
push
mov
sub
or
or
xor
push
sub
and
and
sub
sub
xor
sbb
xor
add
inc
mov
adc
xchg
clc
mov
jns
and
sub
call
sub
les
dec
push
or
sbb
bound
add
push
or
retf
adc
mov
push
adc
add
in
sub
cmp
pop
das
dec
mov
dec
sub
cmp
cdq
jmp
xchg
das
add
push
push
push
mov
push
push
and
sub
cli
add
add
or
push
push
test
sub
or
mov
add
popf
out
cmp
inc
ds
xlat
jge
xchg
outs
cmp
xor
dec
mov
push
add
sbb
mul
cdq
sub
arpl
xor
popa
enter
sub
cmp
pusha
sub
xchg
int3
mov
ret
inc
inc
cmp
in
(bad)
push
cmp
mov
add
mov
aas
push
in
mov
inc
popa
or
lds
adc
ror
jl
lea
(bad)
cmp
mov
aas
outs
pop
add
xor
add
mov
mov
adc
das
mov
dec
mov
xor
and
push
xor
sub
xor
pop
sar
dec
jne
in
loop
or
sbb
fdiv
outs
mov
add
sbb
dec
add
loop
js
mov
dec
push
mov
test
add
mov
lahf
in
or
add
sbb
int3
popf
mov
push
mov
mov
mov
or
or
sub
jne
add
push
shl
enter
inc
pop
repnz
and
sbb
icebp
inc
jo
xchg
push
clc
xor
lahf
lods
and
push
jne
clc
jecxz
aad
call
adc
loop
xchg
adc
push
xlat
aas
pop
adc
add
cwde
dec
mov
ss
inc
pop
and
push
mov
daa
xchg
sbb
dec
mov
jmp
sbb
aam
popa
adc
inc
cmp
adc
push
enter
mov
add
sbb
pop
push
in
mov
inc
cmps
pop
jb
add
or
das
adc
into
and
pusha
test
add
and
stos
retf
fsubr
jb
out
or
xchg
call
or
add
xor
push
inc
shl
sbb
and
xchg
add
jmp
push
adc
add
pop
jmp
add
and
inc
push
adc
pop
into
add
and
pop
or
jno
mov
mov
popf
into
ret
mov
pop
cmps
pusha
out
inc
and
sub
mov
inc
sbb
fs
inc
push
fs
push
pop
mov
pusha
pop
loopne
in
pusha
pop
pop
jmp
add
or
xchg
xor
adc
add
pusha
(bad)
iret
jmp
and
xchg
inc
mov
shl
sbb
sbb
call
ror
inc
xor
mov
daa
adc
inc
inc
test
cmp
inc
dec
push
sub
nop
push
repnz
push
mov
or
inc
inc
inc
pop
sbb
repz
je
mov
jle
lds
mov
push
cwde
push
mov
mov
xchg
xor
pcmpgtb
enter
pop
jo
loopne
leave
idiv
lods
dec
test
push
pop
test
sub
repz
xor
adc
scas
cs
jnp
mov
sub
mov
pop
aaa
lods
sub
mov
dec
and
dec
shr
push
mov
nop
cmps
js
mov
jmp
jo
imul
arpl
or
mov
jne
xchg
retf
lea
pop
lods
rol
and
or
add
jge
pop
sub
pop
sbb
pop
dec
adc
xor
popa
gs
push
xor
clc
je
pop
pusha
dec
fwait
or
fbld
xor
xchg
sbb
mov
xor
pop
or
or
or
data16
ins
mov
cli
pop
push
or
mov
jl
mov
push
inc
ror
int3
ja
add
jge
or
dec
push
push
shr
ins
in
shl
add
or
dec
stos
cld
outs
adc
sub
pop
pop
jbe
mov
ja
scas
cdq
mov
mov
scas
push
push
cmps
psubb
inc
push
ret
test
je
push
jge
xor
jmp
ins
mov
cmc
int
xchg
loopne
fisttp
cmp
daa
jne
mov
leave
jle
mov
or
inc
sub
mov
inc
retf
and
enter
fucomp
inc
push
push
mov
test
je
sbb
push
adc
scas
nop
addr16
sbb
mov
xchg
mov
cwde
add
lahf
xchg
pop
rol
adc
jp
or
mov
xor
js
mov
xor
adc
push
cmp
dec
adc
jno
adc
or
clc
pop
(bad)
fidiv
(bad)
cmp
push
push
xchg
and
sahf
aam
push
and
ret
add
(bad)
dec
and
xor
mov
ret
scas
ja
cmp
or
nop
cmp
sub
adc
lahf
(bad)
leave
adc
and
jne
mov
lods
retf
dec
xchg
add
cmp
loopne
outs
in
cmp
jbe
idiv
pop
mov
add
pushf
aad
dec
mov
cmp
add
pop
inc
cmp
dec
and
shl
adc
pop
add
and
invd
pop
and
adc
or
and
push
inc
loope
pop
xor
or
fisttp
fiadd
push
fnstenv
adc
test
push
or
inc
and
outs
aas
cld
fnsave
dec
inc
push
jp
ret
push
and
pop
push
mov
add
mov
cs
pop
shl
dec
mov
push
mov
int
out
scas
sub
(bad)
and
jge
push
push
or
add
dec
jl
or
popa
cmp
daa
popf
outs
imul
sub
jmp
cmc
pop
xchg
clc
jae
fistp
mov
cmp
jb
ja
(bad)
jbe
sub
and
sbb
imul
adc
jb
xor
dec
sbb
mov
add
inc
xor
jae
jnp
mov
outs
imul
ss
push
cld
pushf
mov
cmp
adc
push
mov
adc
fmul
enter
and
jge
push
and
inc
ins
sub
loope
pusha
outs
and
mov
sub
add
xchg
or
mov
addr16
sub
aam
addr16
or
dec
pminsw
jne
and
fucomip
push
jo
retf
fs
push
sahf
xor
in
pop
call
test
mov
lds
mov
xchg
mov
lods
fidiv
inc
inc
inc
inc
data16
xor
cs
loope
add
pop
pop
xor
push
lock
aaa
imul
xchg
pop
dec
(bad)
or
sub
dec
pop
inc
fdiv
sbb
iret
test
dec
popf
jns
push
sbb
add
mov
mov
or
xor
ins
pop
outs
dec
inc
call
test
stc
std
rcr
inc
or
xor
test
add
rol
adc
push
or
arpl
out
imul
es
ror
dec
push
xor
bound
sti
add
je
cmp
test
test
sub
push
add
mov
ficom
sbb
in
or
push
or
push
cmc
mov
outs
lea
icebp
adc
add
pop
test
jne
push
gs
inc
pop
xchg
scas
sbb
jp
pusha
pop
cmps
add
addr16
sub
test
fadd
in
add
cmp
sti
pop
pop
es
dec
cs
jg
movs
arpl
inc
loop
rol
push
sbb
mov
xchg
add
inc
pushf
or
repnz
sub
aad
or
jns
add
and
mov
sbb
adc
and
in
push
jb
loop
sbb
fcom
cs
out
push
sbb
sub
push
mov
mov
mov
push
je
test
pop
into
sbb
retf
dec
add
add
xor
inc
imul
sbb
jae
jg
lods
shr
adc
sbb
lea
fbstp
jge
test
jnp
jne
inc
repz
clc
fiadd
mov
add
loop
mov
and
jmp
xchg
add
adc
mov
pop
sbb
shr
hlt
push
aad
jmp
xchg
pusha
sbb
sbb
pusha
add
and
jbe
sub
inc
add
ret
cmc
and
or
adc
(bad)
mov
dec
mul
jns
ins
push
and
dec
or
and
push
lahf
jb
retf
gs
sub
push
xor
test
inc
push
sbb
pop
popa
std
int
push
jl
pop
stc
jle
cmp
lds
xlat
(bad)
call
xchg
push
or
retf
lea
add
imul
mov
not
sub
mov
mov
and
push
lea
cmovae
xor
call
jl
xchg
pop
data16
xchg
adc
fcomp
mov
xor
push
cmp
pop
mul
jp
sub
push
ss
(bad)
xchg
(bad)
mov
call
neg
shl
sub
cli
add
or
sub
sub
cdq
add
(bad)
pop
pop
xor
mov
adc
loopne
inc
add
aam
push
out
mov
add
aad
mov
adc
inc
pop
add
xchg
dec
test
lock
je
mov
mov
lods
push
ds
pop
xor
push
jne
inc
xor
popa
sub
and
push
push
cld
xchg
stos
retf
inc
sub
adc
inc
enter
inc
mov
dec
jp
movs
mul
imul
sbb
mov
pop
in
add
aad
and
cmp
mov
sbb
(bad)
cwde
test
adc
cmp
hlt
in
mov
jo
mov
stc
mov
enter
xchg
push
sbb
sub
push
mov
nop
or
and
mov
xchg
jecxz
(bad)
or
sti
int
dec
sar
or
lock
daa
mov
cmp
mov
jo
rol
ins
add
mov
iret
xchg
sbb
nop
inc
cmp
retf
in
adc
push
jp
xchg
xor
xor
lock
je
inc
inc
push
(bad)
int3
or
pop
sub
jo
jmp
push
inc
movs
mov
dec
rol
adc
stos
pop
xor
adc
ror
and
dec
call
xchg
inc
in
mov
fwait
jp
add
inc
or
add
sbb
aam
test
xor
push
std
mov
xchg
test
mov
call
test
xchg
push
pop
dec
int3
push
cmp
adc
sub
je
fnstcw
paddw
and
or
xchg
mov
pop
fsubr
sbb
push
bswap
add
add
stc
push
push
add
jo
inc
scas
jbe
push
cmps
mov
jno
lea
int3
pop
jne
pop
dec
mov
cmp
mov
inc
aad
xchg
mov
xchg
adc
inc
mov
jmp
clc
rol
mov
mov
ror
sbb
test
mov
adc
call
fwait
jo
push
cmps
pop
mov
sbb
je
pop
mov
add
sbb
adc
dec
add
push
retf
push
push
out
xchg
adc
mov
sub
mov
push
test
xchg
ins
stos
ret
sbb
or
mov
stos
pusha
xor
jmp
cli
adc
mul
xchg
nop
ins
add
ret
inc
bound
xchg
xchg
int
ds
inc
mov
mov
mov
cmp
push
jo
adc
jg
add
je
sbb
xchg
shr
jmp
jge
sub
mov
or
arpl
dec
pop
pop
adc
cdq
or
push
jbe
je
push
mov
adc
mov
sbb
stc
(bad)
into
and
xor
or
daa
loope
push
jl
push
and
jmp
pop
test
adc
pop
or
test
add
adc
cmp
mov
cmp
dec
aam
jnp
mov
jne
and
fidiv
imul
adc
sbb
out
and
push
fs
xlat
push
ins
jo
fs
div
add
jnp
cmp
or
stc
cmp
je
add
imul
push
retf
pushf
lea
loopne
dec
adc
inc
pop
out
cmps
cs
mov
add
and
(bad)
add
xor
dec
sbb
push
pop
and
mov
mov
ror
int3
xor
and
or
cmp
icebp
inc
xor
adc
mov
or
loop
mov
adc
ret
xor
push
test
xchg
(bad)
fcomp
cwde
adc
adc
dec
pop
bound
xchg
or
and
add
loope
xor
nop
or
and
(bad)
or
imul
or
lock
faddp
ins
or
aam
jae
xor
sub
jmp
loopne
stos
push
or
push
or
inc
and
jns
fdivr
mov
sub
xchg
sbb
les
gs
add
mov
and
pop
and
dec
sub
(bad)
retf
sbb
data16
add
dec
push
cmp
shl
and
test
jl
out
dec
xchg
add
ins
pop
or
adc
sbb
jmp
cwde
mov
and
xchg
(bad)
rcr
pop
aad
xor
or
lods
sub
add
and
cld
pop
push
mov
pop
(bad)
sbb
and
test
cli
xchg
add
rol
add
and
jno
pop
jg
mov
nop
pop
daa
mov
add
sahf
sub
test
dec
pop
test
int
inc
dec
jge
je
add
std
gs
fiadd
rcl
movs
and
sub
xor
and
dec
or
mov
push
outs
add
imul
sub
cli
popf
btc
cmp
adc
xor
mov
mov
xor
adc
adc
mov
(bad)
jl
and
inc
mov
aaa
mov
mov
sub
jne
push
outs
adc
jnp
jne
add
data16
adc
push
shl
popa
add
leave
xor
cmps
test
mov
xchg
js
lods
cwde
push
and
sahf
pop
or
mov
fnstenv
jbe
xchg
mov
pushf
adc
and
and
sbb
add
xchg
cmps
mov
add
sbb
jae
aaa
adc
lahf
in
xchg
ret
add
jb
xchg
adc
or
imul
inc
sbb
adc
jb
inc
cmp
dec
adc
cmp
mov
push
lds
or
lods
fdivr
lea
mov
sbb
lock
cmp
cwde
aad
(bad)
ror
rol
adc
inc
cwde
xchg
or
das
add
lock
enter
jp
lods
xor
leave
lahf
pop
mov
sbb
pop
pop
stos
prefetcht0
enter
or
and
and
and
cwde
in
lea
and
rcr
or
and
inc
daa
mov
push
mov
test
in
dec
rol
scas
cmp
jae
addr16
push
adc
push
sbb
or
jecxz
push
lock
retf
ins
jno
or
mov
inc
sbb
and
adc
push
loopne
xor
push
adc
mov
inc
jp
adc
dec
push
mov
fcom
shr
stos
xor
push
cmp
push
pushf
rol
xor
loopne
call
jbe
adc
dec
inc
rep
adc
mov
pusha
(bad)
adc
xchg
mov
mov
daa
call
mov
rcl
arpl
mov
lock
mov
add
xlat
push
jno
sbb
mov
mov
push
mov
mov
push
and
xor
push
sbb
lahf
adc
mov
ret
sub
inc
mov
add
adc
inc
xchg
das
mov
mov
push
outs
xchg
jl
mov
(bad)
call
mov
push
stos
push
and
adc
pop
adc
add
and
push
adc
or
sbb
or
and
mov
mov
int
sub
pop
xor
push
daa
pop
into
push
and
stos
pop
pop
lods
inc
retf
mov
jo
lahf
sub
mov
sub
mov
mov
xor
add
loop
stos
pop
push
cs
repnz
xor
sub
nop
adc
mov
mov
imul
pop
sbb
xchg
xchg
cmp
adc
rcl
push
cmp
xchg
ror
ror
or
pop
or
es
and
and
das
cmp
shl
add
jne
sub
push
rol
inc
cmp
sub
xor
cmc
inc
ror
push
push
mov
hlt
ins
int
in
sbb
out
mov
ins
mov
sahf
or
adc
adc
add
ret
mov
ret
add
in
dec
nop
push
enter
fdivr
test
movs
les
ins
adc
and
loopne
nop
pop
xchg
ins
add
adc
aam
xchg
add
ins
mov
xor
push
pop
sbb
dec
or
and
or
sbb
sub
or
popa
push
adc
adc
pop
xor
add
push
mov
pop
test
mov
push
dec
cmovbe
out
test
adc
dec
inc
lea
addr16
adc
cmp
mov
push
push
popa
push
mov
sub
out
(bad)
(bad)
nop
mov
mov
mov
push
inc
mov
push
scas
ds
push
outs
inc
pop
inc
jno
jg
jge
push
and
in
push
or
mov
enter
aaa
adc
or
nop
adc
js
in
rol
pusha
jmp
in
sbb
test
pop
add
and
(bad)
or
pop
in
xor
mov
dec
add
jae
adc
dec
enter
or
or
sti
mov
pop
add
sbb
fs
dec
sbb
adc
fs
or
adc
js
add
(bad)
sbb
and
push
dec
inc
inc
dec
and
pop
pop
push
mov
inc
xor
adc
push
mov
add
and
and
and
xchg
add
sub
adc
and
push
jno
xlat
jmp
pop
xor
xchg
add
sbb
xor
xor
pop
or
inc
and
or
dec
push
movs
or
lds
jg
es
mov
adc
mov
out
and
sub
inc
jnp
push
or
push
sub
mov
push
xchg
sub
add
sub
in
shr
ret
inc
mov
mov
data16
sub
ja
push
pop
mov
cmp
mov
data16
and
or
into
adc
mov
add
out
mov
outs
sub
arpl
push
push
or
mov
sbb
adc
or
sbb
pop
imul
add
cmp
icebp
add
dec
jl
dec
add
fld
ret
out
jne
or
rcr
call
sub
loop
inc
sar
or
mov
out
rcr
mov
lahf
xchg
mov
cmp
call
shl
stos
pop
imul
out
mov
and
out
ja
jns
push
push
push
call
mov
fnsave
push
xchg
and
sub
scas
loopne
add
out
cli
int
popf
ret
in
or
or
push
mov
aas
pop
mov
add
mov
lock
fcom
fs
fadd
test
adc
adc
(bad)
or
push
fmul
mov
inc
std
or
sbb
jo
xchg
cmps
imul
imul
and
je
(bad)
and
scas
push
dec
push
stos
jecxz
add
xchg
rol
cmc
xchg
mov
inc
fcmovne
xor
fsubr
into
push
mov
inc
mov
sahf
call
and
or
jecxz
push
or
iret
pop
jo
loopne
mov
xchg
jb
push
mov
in
clc
ret
dec
cmp
xor
push
xor
pop
pusha
nop
sub
ret
int3
ins
cmp
sub
repz
mov
add
push
in
push
adc
or
inc
mov
loopne
test
sbb
loopne
inc
push
push
add
mov
inc
inc
push
repnz
or
das
test
test
xchg
sbb
adc
in
test
test
sbb
pcmpgtb
push
cmp
and
mov
add
jno
fcomp
inc
pop
pushf
dec
jb
pop
push
xor
push
and
xor
enter
pop
cwde
push
cmp
loope
or
and
mov
cwde
adc
mov
iret
loope
sub
xor
daa
iret
inc
and
push
adc
inc
pop
and
mov
popa
test
(bad)
out
in
push
jne
les
add
xor
ins
xor
loopne
push
ror
xchg
fldcw
icebp
shr
fistp
push
adc
adc
or
xor
and
pusha
shr
jmp
push
test
aaa
in
pop
js
push
adc
ficom
sbb
es
enter
pop
cmp
loope
push
add
xor
and
add
cmp
sub
and
mov
inc
gs
test
es
sub
mov
daa
rol
ror
sub
xchg
dec
ret
xor
jl
sbb
test
jmp
mov
jns
pushf
in
add
bnd
jno
push
mov
push
mov
pop
gs
xchg
dec
inc
or
push
fxch
inc
mov
test
mov
pushf
pop
jnp
add
jae
sahf
push
js
mov
xor
mov
adc
add
pop
adc
sbb
call
jmp
adc
and
adc
cmp
mov
jge
test
lea
xchg
xor
les
inc
enter
cmp
(bad)
ins
jbe
dec
loop
inc
xchg
imul
bound
pop
mov
aad
xchg
rol
or
lods
dec
mov
inc
xor
sub
pop
pop
rol
or
sbb
sub
movs
push
add
inc
sub
nop
sub
push
push
jo
and
mov
cmp
shr
into
mov
or
mov
xor
inc
enter
ds
and
in
data16
jo
ins
sbb
sbb
jo
sub
push
into
out
inc
inc
frndint
xchg
fisttp
sub
xchg
inc
jl
xchg
imul
neg
pop
or
mov
and
inc
add
and
or
pop
xor
xchg
push
xor
or
or
or
jne
(bad)
scas
mov
xor
adc
or
mov
sbb
mov
xchg
or
push
xchg
xchg
or
sub
xor
movs
dec
push
dec
(bad)
sub
add
and
mov
into
gs
mov
xor
cmp
cmp
dec
mov
xor
cmc
test
je
pop
nop
mov
les
mov
sub
mov
jne
retf
add
add
cli
repz
rcr
mov
push
adc
inc
loope
mov
or
stos
push
scas
jmp
jo
rcl
outs
aad
sub
clc
mov
push
dec
pop
and
push
adc
push
sub
inc
test
or
sbb
or
ret
xchg
sub
lea
sbb
iret
jle
je
cmp
das
lds
sub
or
sbb
ret
or
fs
dec
inc
pop
mov
shl
sbb
es
repnz
jo
push
jp
and
mov
dec
rol
aad
add
les
mov
adc
push
fistp
jp
xchg
sbb
cmp
loop
inc
inc
movs
clc
inc
(bad)
retf
sbb
inc
mov
retf
fsubr
push
sub
mov
mov
or
push
out
mov
cmp
dec
add
push
xchg
or
xor
or
(bad)
fcom
pop
adc
push
icebp
add
pushf
mov
ret
xor
sbb
add
jb
shr
pop
int3
jne
inc
xchg
jo
paddusw
add
dec
ss
sub
add
jb
mov
jmp
xor
ss
or
sbb
stc
mov
mov
sub
jmp
cmp
or
and
push
mov
mov
pop
pop
setnp
aaa
les
mov
or
pop
pop
mov
daa
sbb
nop
mov
sbb
rcl
xor
add
es
inc
scas
pusha
adc
mov
aaa
add
loop
sbb
adc
push
xchg
sub
adc
inc
ror
fwait
neg
sbb
sbb
sub
xchg
popa
mov
and
sbb
jg
loopne
push
shl
enter
add
mov
mov
out
and
mov
sub
(bad)
adc
adc
jb
sbb
jp
mov
shl
test
add
sbb
(bad)
dec
inc
push
mov
daa
lea
dec
cmp
and
movs
xchg
inc
push
pop
pushf
pusha
pop
sbb
sub
and
mov
jo
inc
pop
ror
jns
inc
push
movs
and
js
not
or
and
xchg
loop
push
mov
inc
and
jbe
sbb
das
xchg
push
add
cmp
ds
les
bnd
mov
xor
lds
cld
loop
test
ins
retf
lods
jle
add
xchg
jo
aad
and
adc
inc
or
pop
add
pop
rcr
cmp
jl
call
retf
cdq
xchg
add
mov
or
sub
and
into
dec
lods
push
add
inc
(bad)
sar
and
dec
aam
or
jbe
sub
ror
or
pop
fcmovne
and
jl
inc
(bad)
mov
jbe
fistp
inc
push
sub
pushf
jne
jo
xchg
push
sti
mov
imul
addr16
push
movs
imul
mov
add
adc
push
mov
adc
pushw
and
gs
cmp
sbb
aam
shl
cs
cmp
call
add
add
or
and
sbb
push
push
fimul
jp
fldcw
ja
dec
xchg
dec
in
movs
bnd
nop
push
xchg
leave
mov
xor
and
mov
add
pop
movs
push
repnz
or
ss
sbb
sbb
jp
shl
jle
xor
rol
pop
bnd
mov
popa
push
pop
inc
mov
lea
sub
dec
sub
mov
sbb
sbb
cmp
xor
jbe
icebp
stos
fdiv
add
adc
clc
cmp
cmp
jne
push
mov
pusha
ja
das
and
hlt
stc
add
cmp
cs
rcl
or
pop
fxch
mov
adc
mov
and
mov
ret
sbb
inc
jp
jnp
ret
cmp
imul
in
outs
add
sbb
rcl
stos
imul
sbb
stc
or
jne
mov
sub
push
add
mov
mov
enter
das
stos
mov
xor
imul
fld
bound
sbb
add
add
adc
jmp
or
sbb
ja
push
and
fmul
and
adc
bound
es
or
xchg
xor
int
jg
das
push
add
sub
in
or
int3
ret
and
xor
out
ffreep
gs
dec
stos
or
mov
mov
das
rcr
in
lds
dec
je
sub
mov
aam
test
test
arpl
inc
(bad)
ror
dec
shr
add
mov
lods
and
or
cs
and
push
clc
adc
and
pop
add
or
push
add
mov
sbb
add
addr16
sahf
jbe
xor
je
or
dec
and
or
mov
jae
inc
push
add
xchg
call
cmp
push
add
ds
jg
mov
int3
jl
shl
scas
push
adc
inc
add
jnp
jae
sub
xor
add
loopne
inc
dec
adc
mov
retf
sub
cmp
pop
adc
xchg
inc
mov
jb
test
push
adc
cmp
adc
pusha
mov
add
sbb
ja
mov
outs
xchg
std
xor
sub
shl
xor
ins
xor
cmp
je
mov
xor
and
cmp
test
jmp
(bad)
sbb
shl
cmp
ins
pop
sbb
mov
adc
add
and
jb
push
fs
add
enter
xchg
nop
inc
cmp
cmp
push
inc
xchg
add
sub
xchg
adc
gs
inc
and
in
push
jmp
jmp
pushf
scas
cdq
mov
mov
unpckhps
inc
add
cmps
into
out
inc
inc
std
inc
inc
nop
daa
jmp
hlt
xor
lock
jne
fld
mov
fadd
ror
(bad)
imul
sar
jle
adc
push
and
or
lock
xor
sub
mov
fld
stos
add
sbb
inc
ds
mov
pop
mov
jmp
enter
push
enter
sbb
ins
add
add
pop
pop
add
or
and
fldcw
and
jmp
add
ror
mov
add
xor
push
mov
ret
push
sub
int
mov
inc
push
pop
adc
dec
pusha
ins
jae
cld
mov
mov
sub
add
inc
pop
dec
push
or
cli
neg
shl
sub
jbe
and
aas
add
sub
test
inc
mov
push
push
jg
hlt
enter
jmp
jmp
mov
inc
cmp
cs
xchg
xor
sub
xchg
dec
dec
xor
in
push
dec
sbb
in
push
mov
mov
mov
mov
pop
les
enter
in
int3
rcl
aam
dec
dec
cs
fdivr
fsub
loopne
dec
cs
in
sbb
leave
xchg
call
lock
dec
dec
cs
hlt
mov
clc
cld
cld
retf
dec
cmp
add
in
xchg
xchg
add
or
cmp
in
xchg
dec
adc
sbb
cmp
and
and
mov
in
in
lods
xlat
enter
jns
out
sub
push
or
mov
ins
adc
or
inc
fild
jge
call
adc
xlat
fsub
jne
mov
sahf
pop
mov
lds
clc
cld
mov
add
or
sub
sar
adc
cs
sub
dec
in
rol
and
ja
mov
inc
inc
push
mov
mov
push
dec
lock
or
fsub
movs
test
push
daa
loop
sbb
in
(bad)
adc
clc
sbb
add
jge
mov
inc
pusha
pop
cmp
mov
ins
mov
push
inc
add
neg
add
ds
inc
data16
mov
and
sub
shr
pop
add
cmp
daa
push
fcom
mov
inc
out
adc
clc
mov
pushf
pop
mov
mov
scas
mov
mov
sti
hlt
jne
call
mov
sbb
sub
add
cmp
push
cmp
sub
sbb
js
jne
push
jge
ins
xor
jmp
and
loope
jmp
mov
loop
add
sbb
fst
sbb
or
push
popa
cdq
pop
sbb
aaa
test
add
add
or
leave
and
cs
cmp
or
adc
xchg
rep
and
mov
add
push
gs
or
pop
arpl
pop
xchg
ins
sub
inc
jae
mov
icebp
jmp
jae
shld
shl
ret
mov
dec
and
shl
ret
pop
xor
cmp
aas
mov
pop
lods
rcl
jmp
cmp
in
shl
xor
(bad)
fst
div
cs
shr
inc
jbe
push
shl
adc
jmp
std
fcmovnbe
jmp
repz
mul
hlt
mov
mul
add
inc
cmp
frstor
shl
pop
cmp
jbe
dec
xor
add
mov
out
push
sub
outs
out
lods
loopne
add
nop
mov
enter
sar
push
or
pop
jl
push
sbb
out
adc
fiadd
jl
loop
loop
cmp
inc
xor
mov
sbb
into
push
add
and
icebp
or
pop
add
and
adc
out
xchg
mov
(bad)
sar
arpl
xor
mul
sub
push
cmp
ja
adc
fmul
pop
jae
sub
mov
mov
inc
add
ret
inc
push
jo
cmp
dec
fimul
dec
pop
(bad)
push
mov
fld
and
pop
cdq
in
ins
iret
or
fs
mov
push
mov
pop
div
push
or
mov
cmp
shr
dec
sbb
pop
mov
sub
push
and
and
lods
aas
inc
xchg
lea
push
xor
cs
sbb
or
add
(bad)
lods
out
mov
mov
inc
or
sti
mov
add
mov
and
jbe
aam
dec
movs
or
ror
adc
mov
aam
push
sub
jbe
mov
(bad)
jmp
push
pop
sbb
add
in
inc
or
(bad)
sbb
test
or
lea
cmp
push
gs
stc
cmp
mov
or
pusha
pop
in
mov
pop
add
or
(bad)
shl
mov
(bad)
leave
mov
inc
inc
sbb
in
or
retf
and
pop
or
js
add
test
jnp
jnp
ins
pop
nop
sub
pushf
sbb
add
call
adc
or
enter
fild
cdq
mov
sbb
pop
inc
nop
ret
and
(bad)
or
cdq
dec
push
cmp
push
shl
push
or
movlps
movs
or
jl
sbb
mov
shld
xor
mov
nop
icebp
fmul
mov
sbb
test
mov
pusha
or
mov
call
add
adc
leave
pop
test
dec
pop
stos
imul
ja
inc
fcom
test
aaa
mov
ins
daa
loopne
das
push
ins
gs
mov
inc
and
mov
shl
retf
enterw
mov
sbb
ins
fwait
sbb
fdivr
adc
scas
fmul
mov
dec
fs
shl
dec
adc
xor
es
pop
pop
sub
add
fs
fst
mov
fisttp
test
push
push
scas
push
mov
(bad)
push
leave
test
mov
arpl
js
xchg
add
pop
sub
dec
mov
add
enter
sbb
adc
xchg
je
in
mov
call
bound
jb
or
jl
rol
mov
dec
or
fs
pushf
or
in
xchg
xchg
test
arpl
push
push
xchg
dec
add
outs
aam
in
out
jae
pop
lea
call
in
dec
mov
pop
mov
(bad)
mov
ss
or
mov
test
iret
int3
or
(bad)
and
bswap
pop
enter
outs
setb
cmp
inc
into
push
sbb
gs
leave
outs
test
pop
fistp
clc
lea
sub
jbe
and
mov
sub
fcom
sbb
ins
xor
cmp
mov
cli
pop
mov
mov
add
cmp
(bad)
ins
daa
push
pop
inc
sub
xchg
je
jecxz
ret
inc
sahf
or
sbb
and
dec
and
pop
fsub
pop
sub
cmp
and
sub
cs
adc
adc
adc
sub
cmp
cdq
in
(bad)
ins
push
and
adc
sub
dec
sbb
aas
test
push
or
retf
xchg
ficom
gs
clc
sub
dec
lods
mov
mov
int3
(bad)
sub
cs
je
jge
in
push
mov
jp
fdiv
xchg
or
sbb
mov
pop
cs
add
(bad)
iret
adc
fmul
daa
adc
pop
jl
and
pop
(bad)
call
scas
bswap
adc
dec
dec
(bad)
xlat
add
cmp
fstp
push
in
sub
xchg
ins
dec
lock
das
and
ficom
repnz
mov
or
addr16
pop
cmp
xor
ins
loopne
or
or
sub
enter
test
pop
xchg
or
xchg
test
xchg
dec
pop
adc
aaa
popa
fsub
and
mov
jb
in
in
sbb
pop
in
lods
in
in
dec
cs
in
in
xor
enter
outs
mov
xchg
jl
sub
outs
inc
fisttp
push
or
or
or
int3
int
xor
fadd
pushf
adc
popa
adc
xchg
movs
and
sub
pop
inc
jno
jmp
add
nop
inc
cs
inc
ss
or
sub
fist
js
pop
jmp
inc
or
inc
sub
lea
sub
out
xchg
movs
iret
add
(bad)
push
xor
mov
nop
sub
pop
sbb
sbb
mov
repz
cmp
(bad)
lods
xchg
xor
rol
test
movs
and
nop
sub
add
rcr
push
test
dec
dec
adc
fsub
leave
and
sub
call
fnstcw
test
mov
jae
(bad)
enter
lods
xchg
dec
fstp
outs
and
nop
das
jg
loope
xabort
aas
xor
pusha
xchg
lods
ins
test
pop
sar
cmp
xor
fdiv
repnz
(bad)
les
push
and
ins
mov
and
add
xor
add
xchg
xor
sbb
xor
fdivr
test
sar
and
fsub
fadd
xor
cmp
(bad)
nop
sbb
pushf
pop
test
or
xor
or
aaa
xchg
pop
mov
sub
mov
add
clc
mov
das
pop
les
and
sub
mov
in
pop
cmp
sbb
xchg
xor
xor
test
jbe
dec
cld
pop
and
xchg
ret
and
ja
lea
fcom
push
mov
sub
sub
inc
sbb
xchg
pop
pop
pop
inc
pusha
pop
leave
mov
mov
fdivr
inc
retf
fucomip
or
aas
lea
xor
loopne
aas
inc
nop
aaa
das
mov
lock
dec
ss
aas
(bad)
cmp
ins
xor
cmp
or
(bad)
sub
hlt
push
cmp
repnz
xchg
mov
adc
daa
int3
push
repnz
fild
cmp
je
pop
add
lods
mov
add
sub
cmp
stc
push
or
and
mov
pop
call
test
sub
ins
and
push
jbe
(bad)
js
mov
test
loopne
ja
ja
shl
rol
xor
fs
shl
repnz
ret
adc
lahf
in
lahf
push
add
leave
inc
cmp
out
cmps
sbb
enter
add
jo
scas
daa
bound
cld
and
xchg
adc
or
cmp
push
add
je
sub
mov
or
adc
or
or
and
js
mov
and
int
pop
ret
lods
(bad)
aaa
popf
mov
pop
adc
test
outs
jg
mov
jns
cmp
fbld
pop
enter
mov
lds
ret
pop
sbb
out
pop
mov
inc
pop
adc
mov
gs
fist
(bad)
push
sbb
mov
mov
dec
mov
sub
xchg
scas
mov
popf
in
sbb
lahf
in
leave
xchg
pop
mov
adc
and
xor
sbb
sbb
push
mov
or
inc
and
aaa
test
ins
dec
sbb
ins
test
rol
add
and
and
add
sbb
jo
mov
sbb
jo
pop
(bad)
mov
inc
sbb
out
ror
pop
sbb
sbb
pop
repnz
inc
pusha
add
or
sbb
dec
out
add
test
and
out
ret
cmp
in
dec
sti
sub
retf
jg
xchg
add
ja
xor
inc
mov
push
inc
out
xor
pop
adc
lods
dec
and
add
retf
add
mov
sub
pop
add
aas
daa
iret
leave
or
or
shr
cmp
fucomi
add
pop
jo
inc
rcl
fistp
and
xor
xor
dec
fsubr
add
sub
add
inc
movups
xor
add
pop
jae
and
inc
loopne
lsl
shl
fsub
pop
and
xor
(bad)
pop
dec
mov
int
pop
and
xor
daa
aam
fsub
fdivr
add
pop
loopne
cmovb
retf
out
lock
nop
divps
fwait
rol
jg
pusha
ss
or
pop
pop
pshufw
adc
xchg
in
push
cdq
das
and
xlat
lds
je
sub
adc
dec
xlat
ins
cmp
inc
cmps
add
pop
mov
add
mov
pop
loopne
rcr
xlat
xor
ret
dec
dec
pop
(bad)
in
cmp
add
pusha
dec
sysret
adc
dec
pop
ret
adc
or
sub
loopne
xchg
aaa
dec
mov
jmp
daa
and
cmp
xor
scas
or
das
rol
add
fsubr
imul
add
pop
jmp
and
ret
sub
lock
cmp
mov
shl
dec
je
jmp
pop
add
pop
mov
jae
xlat
push
daa
pusha
shl
add
je
scas
jnp
push
add
push
mov
fwait
je
mov
cmp
add
add
jns
inc
add
sbb
xlat
out
retf
aas
inc
inc
inc
or
addr16
pop
jmp
movups
and
push
fwait
mov
inc
mov
add
int3
ss
pusha
daa
add
gs
cmp
gs
xor
add
outs
out
jecxz
dec
mov
add
inc
mov
adc
rol
cmp
pop
pusha
daa
jo
pop
aaa
nop
scas
dec
js
pop
xor
add
fsubr
loopne
xor
push
jae
adc
nop
mov
or
les
add
outs
(bad)
jmp
xor
ja
jne
push
mov
cmp
jbe
push
mov
add
adc
loopne
mov
mov
pop
mov
pop
lock
test
jae
das
nop
adc
test
jl
adc
test
jnp
or
das
add
pop
and
mov
or
inc
cmovo
add
xor
xchg
and
xor
dec
sahf
nop
and
dec
xchg
add
dec
xchg
inc
or
cmp
add
lahf
add
push
clc
inc
dec
inc
push
dec
xor
cs
ins
sub
push
push
inc
push
or
pop
pop
push
dec
inc
dec
push
das
dec
dec
mov
pop
repnz
inc
push
push
js
cmps
test
xlat
(bad)
add
fstp
fidiv
inc
arpl
fmul
or
sar
inc
shl
adc
xchg
out
pop
and
mov
xor
pusha
pop
push
jae
pop
add
dec
fadd
add
mov
call
sbb
mov
nop
cmps
imul
add
pop
ret
cmps
imul
fld
or
or
pop
sbb
aas
je
jge
retf
rcl
es
adc
xor
shl
push
aas
adc
shl
adc
shl
sbb
xor
fwait
test
daa
lock
lsl
shl
or
daa
mov
and
push
loopne
loopne
or
inc
pop
dec
and
xor
push
das
sub
ins
push
int3
xchg
test
and
mov
or
adc
daa
xor
or
nop
lock
cmp
inc
adc
aaa
sbb
es
pusha
daa
dec
xor
cmp
inc
pop
leave
iret
or
push
das
pop
addr16
int
rol
pusha
inc
nop
push
fwait
loope
fsub
enter
ja
aas
inc
ror
ret
aaa
add
cmp
pusha
add
retf
jle
cmp
mov
iret
push
pop
xor
loop
sub
xor
cmp
add
dec
xor
popa
ins
push
cmp
pusha
pop
ja
or
sbb
daa
test
sbb
addr16
loop
loop
das
(bad)
push
sbb
hlt
cmp
fsubr
retf
pop
or
adc
mov
fs
sbb
cmp
sbb
stos
push
mov
nop
xor
aaa
nop
shl
push
adc
add
out
dec
pop
and
jecxz
push
neg
pop
pop
data16
ins
mov
add
mov
in
pop
nop
daa
jo
sbb
add
shl
add
dec
lock
lock
int
pop
adc
mov
xchg
daa
scas
xor
cmp
inc
in
popf
lock
in
in
fs
outs
xor
or
or
scas
je
or
mov
jns
aas
shl
mov
in
mul
gs
sahf
cmp
in
in
adc
fist
in
in
push
sbb
in
das
jmp
pop
ins
in
push
and
scas
nop
inc
out
mov
pop
aas
xchg
cld
adc
inc
mov
and
and
fild
or
xor
in
mov
imul
movs
imul
loopne
sbb
or
jb
or
or
enter
and
inc
push
or
mul
pop
xor
pop
das
mov
idiv
pop
int
pusha
fild
loopne
aad
xchg
push
enter
and
jg
sbb
pusha
movs
xchg
jno
jo
aaa
mov
pop
cs
cwde
out
add
cmp
ror
xor
lock
push
adc
sbb
out
sbb
inc
inc
paddsb
cwde
pop
js
out
inc
push
xchg
out
mov
mov
pop
pop
out
push
xchg
data16
inc
or
add
inc
mov
daa
xchg
out
xor
pusha
pop
mov
and
je
push
rol
and
fcom
jg
or
and
leave
(bad)
fild
call
call
ror
sub
enter
in
inc
call
call
mov
daa
ins
call
sbb
cwde
pop
pop
mov
or
imul
imul
jbe
pusha
pop
push
movlps
sbb
and
cs
jge
iret
and
es
daa
repnz
push
add
jmp
jmp
push
sbb
mov
in
in
mov
les
or
pop
imul
jmp
push
out
das
cmp
xchg
inc
lock
jmp
ins
nop
inc
push
push
pop
push
(bad)
nop
cmps
sbb
push
jno
nop
inc
push
sbb
inc
push
sbb
mov
movs
xchg
sar
in
je
jo
out
add
and
pop
sbb
add
or
pop
xor
sub
fsub
or
jmp
pop
pusha
pop
loope
dec
xor
jae
jmp
and
cmp
sub
dec
mov
dec
ins
nop
sub
addr16
push
sbb
lock
xor
xor
add
mov
xchg
cmp
in
dec
push
inc
in
dec
in
push
or
popa
outs
jge
or
nop
xor
mov
xor
fmul
add
inc
loopne
and
fld
in
ja
in
adc
xlat
pop
sbb
daa
inc
in
push
shl
dec
sysret
push
or
xor
imul
jbe
jg
fld
in
cmps
fsubr
xchg
xchg
sub
in
in
daa
dec
loopne
xchg
in
psubusw
in
fmul
xchg
in
out
in
std
cmps
or
or
cmp
out
daa
out
xor
nop
int
pop
sub
pop
repnz
leave
xchg
out
data16
jno
jg
out
sbb
xor
xchg
out
cmps
lds
cmp
and
shr
loopne
in
fs
clc
sub
out
or
(bad)
retf
sahf
sbb
out
aas
cmp
or
nop
xchg
out
out
xchg
xchg
sar
add
nop
inc
push
jo
xchg
rol
cmp
mov
fs
add
loopne
sub
add
dec
sahf
cmp
lock
lock
(bad)
xor
sbb
mov
dec
cmp
inc
pop
inc
call
gs
imul
add
mov
push
enter
cs
xchg
add
loope
jbe
pop
pop
daa
and
das
gs
sahf
cmp
icebp
ss
inc
icebp
xor
leave
cwde
pusha
daa
rcl
jns
mov
mov
and
cmp
add
comiss
push
cmp
sub
ja
pusha
cmps
imul
ja
setg
enter
enter
add
add
or
fucomip
pop
jmp
xor
mov
sbb
cs
push
add
add
wrmsr
addr16
pop
pushw
xchg
rol
nop
sbb
inc
lock
lods
push
and
repnz
inc
sahf
mov
push
fs
mov
add
xor
ss
add
cmp
add
and
pop
call
in
lock
repnz
outs
adc
leave
add
int
add
pusha
ins
mov
or
add
jae
add
dec
push
cwde
nop
or
nop
(bad)
shl
repz
lds
aaa
add
jmp
inc
hlt
mov
jns
mov
and
enter
push
rol
sub
push
pusha
inc
push
sbb
push
enter
imul
nop
ror
sbb
fsub
push
ror
or
das
loopne
pop
jmp
cmp
pop
sbb
xchg
cmp
pop
or
add
mov
cmc
mov
sbb
sub
fcom
push
enter
jo
enter
nop
push
and
xor
or
xor
and
cmps
rcl
idiv
sub
and
repnz
push
test
test
jbe
das
js
and
nop
iret
xchg
ins
mov
rcl
jg
push
xchg
add
lock
ret
push
sub
mul
inc
sbb
cs
xor
mov
sbb
aaa
pop
inc
or
xchg
push
nop
or
add
sub
fadd
adc
or
xchg
xor
(bad)
mov
enter
nop
aam
cmp
div
sar
rol
cdq
cmps
imul
add
(bad)
cmp
jb
clc
(bad)
cmp
js
pop
jo
or
neg
pop
mov
cmp
dec
dec
clc
scas
mov
cmc
add
dec
clc
clc
daa
(bad)
clc
inc
push
xchg
xchg
aaa
fdivr
clc
scas
nop
add
stc
in
xor
cmp
stc
mov
cmps
stc
in
ins
xor
stc
(bad)
stc
fild
cdq
and
mov
mov
or
ror
or
pop
fadd
ss
shl
add
lock
(bad)
cli
jns
cmc
mov
(bad)
pusha
cmp
and
nop
xor
add
ror
add
add
pop
imul
or
js
or
ss
xchg
clc
addr16
dec
cmp
xchg
ror
loope
and
aas
adc
sahf
cmp
push
sti
sbb
sub
pop
shl
pop
add
xor
push
pop
pop
data16
jbe
xor
aaa
fadd
xchg
clts
movs
push
rcr
repnz
enter
inc
cmp
sti
das
jo
sahf
sbb
add
or
fld
xchg
mov
or
inc
jb
inc
daa
clc
test
nop
pusha
cld
aaa
setae
push
enter
mov
sbb
cld
sahf
pop
cmps
mov
push
imul
movs
jmp
pop
or
lds
clc
pop
js
xchg
int
ret
pop
std
adc
push
std
std
lahf
xor
pusha
xor
cmovge
in
pop
std
xchg
ins
std
(bad)
jnp
or
or
and
mov
ror
jl
dec
xor
pmulhw
pop
std
or
nop
daa
(bad)
sti
std
aas
mov
adc
adc
sbb
outs
mov
inc
dec
aas
outs
xchg
xchg
xchg
sub
(bad)
inc
mov
inc
xchg
push
sbb
(bad)
aas
mov
jmp
rol
push
xlat
fbld
or
jg
mul
pop
sbb
sahf
cmp
(bad)
jg
jmp
(bad)
cmp
imul
nop
xor
pop
or
jo
and
push
fsub
dec
xor
jecxz
dec
aaa
mov
pop
mov
xchg
add
(bad)
inc
and
mov
daa
mov
dec
es
add
xor
xchg
add
push
mov
sbb
pop
add
add
xor
pop
nop
dec
call
mov
call
and
pushf
mov
pop
cmps
mov
adc
mov
push
jbe
(bad)
call
mov
mov
clc
add
adc
sub
je
sar
push
push
dec
shl
in
cli
xor
xlat
xor
and
xor
cdq
dec
ror
dec
inc
add
sti
push
rol
popa
jb
jb
jbe
js
or
push
jo
gs
add
xchg
mov
ja
or
ins
repnz
dec
gs
dec
popa
je
inc
imul
popa
mov
pop
inc
gs
imul
neg
(bad)
mov
outs
js
popa
add
dec
push
daa
or
pcmpeqd
dec
gs
inc
ror
pop
fdiv
fistp
fs
je
addr16
(bad)
(bad)
push
imul
jae
push
adc
jg
and
push
(bad)
push
sub
iret
nop
adc
and
pop
imul
dec
gs
je
pop
sub
sti
or
push
dec
movs
popa
addr16
push
pushw
test
mov
fdivr
inc
ins
addr16
cmps
ins
sub
mov
pop
aaa
mov
ins
ss
push
iret
push
sub
adc
pop
mov
inc
ins
sub
cmp
arpl
sbb
sub
xor
inc
adc
inc
add
div
or
ror
or
mov
push
ins
xor
outs
push
add
lods
add
movs
add
xor
add
in
inc
inc
fldenv
or
dec
xor
cmps
cmp
dec
pop
add
sti
add
add
add
scas
daa
sbb
call
adc
inc
push
inc
dec
outs
inc
jb
(bad)
(bad)
outs
jmp
jo
imul
add
inc
inc
xor
push
inc
dec
jne
inc
jne
and
data16
pop
sbb
ret
inc
push
pop
push
enter
sub
pop
(bad)
mov
ins
inc
push
dec
gs
mov
add
loopne
clc
cld
add
add
loop
cmp
push
bound
push
mov
jge
jno
stc
movs
push
lldt
add
xchg
test
bound
popf
adc
pop
mov
xchg
mov
pop
clc
movs
add
das
add
dec
add
fcomp
pusha
dec
pop
add
loope
adc
inc
dec
outs
je
add
add
aaa
neg
imul
dec
ins
push
pop
cmp
fsubr
outs
add
add
lods
adc
xor
or
popa
scas
jmp
jne
jae
adc
popa
aaa
mov
out
inc
adc
arpl
(bad)
jmp
shl
push
jg
push
add
clc
dec
mov
xlat
or
push
cmps
jo
jb
outs
jae
fs
dec
pop
or
fs
pop
and
outs
outs
add
idiv
pop
repz
fwait
jnp
xor
outs
mov
in
gs
inc
or
pop
scas
sbb
mov
aas
arpl
dec
xlat
jne
jb
push
sub
pop
push
or
jmp
and
je
pop
mov
push
inc
and
jae
popa
adc
jmp
and
inc
sub
or
loopne
mov
out
push
cmp
call
ins
out
arpl
jns
adc
sub
add
dec
sbb
mov
arpl
jns
xor
dec
jae
pop
ja
shl
test
add
push
cmp
inc
lea
mov
popaw
jne
push
ret
shl
cmp
gs
imul
(bad)
xor
xor
aaa
xor
sub
inc
and
add
mov
imul
mov
jmp
imul
sub
mov
jae
adc
clc
pop
sbb
leave
popa
add
cmp
inc
mov
imul
add
fs
push
fcomp
arpl
xor
popa
cmp
outs
mov
inc
mov
jb
inc
add
arpl
stos
and
outs
fild
cmps
sbb
jmp
add
inc
adc
das
fldcw
mov
arpl
mov
imul
aad
test
fwait
daa
mov
mov
popa
xchg
arpl
lea
fcom
xchg
je
ins
in
mov
sbb
das
xor
pop
cdq
(bad)
mov
shl
dec
dec
pop
inc
push
push
push
dec
dec
dec
pusha
sbb
hlt
out
adc
loopne
je
jo
pop
imul
inc
daa
dec
aad
fadd
xor
mov
in
ins
data16
adc
clc
pop
or
add
xor
sbb
inc
push
fs
dec
shl
call
shl
out
push
xlat
sbb
shl
jb
dec
shl
fdivp
xor
xlat
xor
aam
mov
add
mov
hlt
(bad)
ret
push
adc
movs
mov
push
add
nop
pop
push
inc
and
or
adc
or
and
xor
movs
add
pop
rcl
add
ins
or
dec
add
add
add
add
(bad)
call
ss
add
add
pop
add
and
fstp
jne
les
and
sub
pop
mov
inc
ja
xor
inc
sbb
adc
ins
jns
or
jne
jo
mov
gs
loope
loopne
sub
daa
mov
lods
int
pop
add
(bad)
push
and
or
and
jnp
sub
mov
jne
outs
outs
xchg
outs
imul
sbb
(bad)
mov
aaa
add
outs
inc
out
fs
ja
leave
test
pusha
(bad)
adc
jg
add
dec
add
xor
adc
movs
add
(bad)
inc
inc
gs
gs
inc
jb
je
arpl
push
gs
outs
out
out
push
dec
outs
adc
imul
inc
ins
outs
jae
dec
popa
outs
cmp
add
or
daa
inc
outs
jb
jne
and
es
dec
bound
jae
les
xor
and
push
pop
and
gs
leave
mov
dec
push
imul
arpl
inc
cmp
inc
push
jb
inc
fs
ins
mov
fdiv
cmovge
outs
mov
sub
mov
outs
outs
push
imul
jb
adc
mov
arpl
dec
popa
jae
(bad)
mov
mov
bound
jns
ja
cmp
inc
imul
jae
dec
push
dec
push
push
cmp
(bad)
and
popa
ins
test
push
xor
xchg
(bad)
ins
popa
and
push
or
jae
or
jns
gs
adc
jge
mov
mov
je
jb
jne
mov
add
ins
outs
pop
dec
mov
dec
fst
push
cmps
and
push
sub
(bad)
ins
call
jle
inc
sti
ins
push
popa
je
adc
inc
jne
lock
cmp
adc
push
adc
jo
ret
xor
sub
inc
sub
or
jb
add
sbb
dec
xchg
sub
push
fisttp
mov
loopne
or
push
push
outs
cmp
and
enter
push
pop
adc
data16
cwde
frstor
lds
adc
dec
or
adc
jbe
mov
and
push
ds
test
jmp
and
xor
ins
push
dec
movs
cmps
fnsave
pop
rcl
inc
inc
js
out
sub
dec
gs
or
and
adc
movs
aaa
xchg
dec
sub
arpl
mov
lds
aas
xchg
jo
outs
inc
mov
ss
push
ins
adc
xchg
imul
arpl
arpl
or
cmp
inc
aas
aas
xor
outs
call
or
inc
inc
pop
pop
adc
push
jmp
xor
pop
fs
(bad)
js
fisub
pop
or
push
pop
pop
in
shl
test
xor
cmp
addr16
scas
imul
push
jae
mov
not
add
add
adc
imul
arpl
mov
or
xor
pop
mov
test
jo
inc
js
out
inc
sahf
shl
cmp
mov
(bad)
jne
inc
movs
imul
jbe
inc
jg
mov
add
pop
pop
std
loopne
sidtd
lods
mov
fcom
mov
or
ins
mov
or
add
in
mov
push
add
xor
in
gs
fld
push
add
and
cmp
pusha
pop
mov
mov
loopne
pop
mov
cmp
je
xlat
(bad)
lock
fcomp
add
and
popa
and
aaa
mov
daa
test
mov
adc
es
les
repz
ror
ss
cs
jb
xchg
popf
int
jmp
sbb
mov
loopne
inc
pop
xchg
in
or
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
pop
add
add
add
add
sbb
add
pop
add
or
add
enter
adc
add
or
add
dec
add
sub
add
add
add
or
add
js
add
mov
add
add
add
or
add
add
add
or
add
adc
add
inc
add
or
add
push
add
test
add
or
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
test
add
mov
add
add
add
add
add
mov
add
add
add
add
loopne
add
add
or
add
loopne
add
add
lahf
add
add
add
add
add
or
add
add
add
add
add
add
and
add
add
add
or
add
add
add
nop
add
je
add
add
add
pusha
add
add
add
or
add
add
js
add
push
add
add
add
add
mov
add
add
add
add
jmp
add
enter
sub
add
inc
add
add
add
add
add
add
inc
add
or
add
sbb
adc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
jo
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jne
(bad)
cmp
jne
(bad)
cmp
js
(bad)
ds
inc
dec
or
dec
fwait
or
dec
pushf
or
dec
pushf
or
dec
pushf
or
dec
pushf
or
dec
pushf
or
dec
pushf
or
dec
pushf
or
dec
or
dec
lahf
or
inc
mov
(bad)
ds
(bad)
cmp
jbe
(bad)
cmp
add
cmp
jae
(bad)
cmp
je
(bad)
cmp
add
cmp
add
cmp
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
aas
jns
jmp
cmp
add
aaa
push
add
aaa
push
add
aaa
imul
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
inc
or
inc
lahf
adc
inc
popf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
sahf
adc
inc
mov
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
push
imul
push
push
add
cmp
jmp
add
add
push
add
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
add
cmp
(bad)
cmp
cmp
(bad)
cmp
inc
xchg
or
inc
mov
adc
inc
lahf
adc
inc
push
inc
push
inc
push
inc
push
inc
push
inc
adc
inc
adc
(bad)
cmp
(bad)
cmp
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
push
push
add
aaa
addr16
cmp
(bad)
cmp
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
(bad)
cmp
(bad)
cmp
jns
(bad)
cmp
js
(bad)
cmp
add
cmp
xchg
or
inc
pop
inc
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
adc
cmp
ja
(bad)
cmp
add
cmp
jp
(bad)
cmp
jbe
(bad)
cmp
add
cmp
add
cmp
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
push
push
repnz
add
aaa
push
clc
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
cmp
add
cmp
(bad)
cmp
add
cmp
add
cmp
jns
(bad)
ds
(bad)
ds
(bad)
ds
(bad)
cmp
add
cmp
xchg
adc
inc
mov
sbb
inc
mov
sbb
inc
mov
sbb
dec
sbb
inc
sbb
inc
mov
sbb
inc
cwde
adc
(bad)
aas
add
ds
(bad)
ds
(bad)
ds
(bad)
ds
(bad)
cmp
jnp
(bad)
cmp
js
(bad)
cmp
(bad)
cmp
add
cmp
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
push
imul
cmp
std
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
add
cmp
add
cmp
jnp
(bad)
cmp
jge
(bad)
ds
(bad)
ds
(bad)
aas
add
aas
add
(bad)
aas
jg
inc
add
aas
jg
inc
dec
push
dec
push
dec
pop
dec
pop
dec
and
dec
cmps
and
dec
cmps
and
dec
cmps
and
dec
cmps
and
dec
movs
pop
dec
pop
dec
pop
inc
adc
inc
add
aas
jle
inc
add
aas
add
(bad)
ds
(bad)
aas
jg
(bad)
ds
(bad)
ds
(bad)
ds
(bad)
cmp
js
(bad)
cmp
js
(bad)
cmp
add
cmp
cmp
(bad)
cmp
(bad)
cmp
inc
add
add
jno
(bad)
cmp
(bad)
cmp
add
cmp
add
cmp
jp
(bad)
cmp
jp
(bad)
ds
(bad)
aas
jg
(bad)
aas
add
inc
add
aas
add
inc
add
inc
test
inc
add
inc
add
inc
xchg
inc
add
inc
sahf
pop
dec
and
dec
cmps
and
dec
cmps
and
dec
cmps
and
dec
test
dec
and
dec
test
dec
and
dec
test
dec
and
dec
cmps
and
dec
cmps
and
inc
fwait
pop
(bad)
aas
add
inc
mov
(bad)
aas
add
inc
add
inc
test
(bad)
aas
jle
inc
add
aas
add
(bad)
aas
jg
(bad)
ds
(bad)
cmp
jnp
(bad)
cmp
jp
(bad)
cmp
add
cmp
add
cmp
add
cmp
inc
jg
add
add
add
jg
or
jno
(bad)
cmp
(bad)
cmp
add
cmp
jl
(bad)
ds
(bad)
aas
add
cmp
jle
(bad)
ds
(bad)
aas
jle
(bad)
add
aas
jg
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
test
(bad)
aas
add
dec
and
dec
dec
dec
daa
dec
daa
dec
daa
dec
daa
dec
daa
dec
dec
dec
inc
sbb
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
add
inc
add
(bad)
aas
add
aas
jg
(bad)
cmp
add
aas
jle
(bad)
ds
(bad)
ds
(bad)
ds
(bad)
cmp
add
cmp
add
cmp
xor
or
add
add
add
cmp
cmp
jl
(bad)
ds
(bad)
aas
jg
(bad)
aas
add
inc
add
inc
test
(bad)
aas
add
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
pop
inc
add
inc
mov
sub
dec
stos
sub
dec
stos
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
stos
sub
dec
lods
sub
inc
movs
and
inc
test
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
test
inc
add
aas
add
inc
test
inc
add
inc
add
inc
add
aas
add
aas
jg
(bad)
ds
(bad)
ds
(bad)
cmp
push
add
add
jae
push
cmp
jnp
(bad)
aas
add
inc
add
inc
test
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
xchg
inc
add
inc
lea
inc
inc
inc
inc
add
inc
lea
inc
add
dec
cmps
and
dec
sub
dec
lods
sub
dec
scas
sub
dec
dec
dec
dec
sub
dec
sub
dec
scas
sub
inc
movs
and
inc
mov
inc
inc
add
inc
nop
add
inc
nop
add
inc
pop
inc
inc
add
inc
xchg
inc
inc
add
inc
add
inc
mov
inc
add
inc
test
inc
add
inc
add
aas
add
ds
(bad)
cmp
je
sbb
add
add
jl
sub
jge
(bad)
aas
add
inc
test
inc
add
inc
xchg
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
add
dec
lods
sub
dec
scas
sub
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
inc
inc
add
inc
mov
inc
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
add
inc
mov
inc
add
inc
test
inc
add
inc
mov
inc
add
inc
xchg
inc
add
aas
add
ds
(bad)
cmp
jl
sub
add
add
add
inc
add
inc
test
inc
add
inc
mov
inc
add
inc
xchg
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
pop
inc
add
inc
xchg
add
inc
xchg
add
inc
push
inc
inc
dec
sub
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
xor
dec
xor
dec
mov
dec
xor
inc
stos
sub
inc
nop
add
inc
inc
push
inc
add
inc
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
nop
add
inc
xchg
inc
add
inc
mov
inc
add
inc
xchg
(bad)
ds
inc
add
aas
add
aaa
cmp
test
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
inc
inc
add
inc
xchg
add
inc
xchg
add
inc
nop
add
inc
pop
inc
or
inc
nop
or
inc
fwait
or
inc
xchg
or
inc
xchg
push
dec
xor
dec
mov
dec
xor
dec
aaa
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
dec
dec
sub
inc
inc
or
inc
nop
or
inc
cdq
or
inc
xchg
pop
inc
pop
inc
push
inc
inc
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
add
inc
mov
inc
add
inc
test
inc
add
inc
test
inc
add
aas
jg
inc
aas
add
inc
add
inc
mov
inc
inc
add
inc
pop
inc
add
inc
nop
add
inc
xchg
add
inc
xchg
add
inc
or
inc
xchg
or
inc
cwde
or
inc
cwde
or
inc
cwde
or
inc
ud0
inc
or
dec
mov
dec
aaa
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
cmp
dec
cmp
dec
cmp
dec
mov
dec
cmp
dec
mov
inc
inc
inc
ud0
push
inc
or
inc
xchg
or
inc
call
inc
xchg
or
inc
xchg
or
inc
xchg
push
inc
add
inc
add
inc
pop
inc
add
inc
nop
add
inc
lea
inc
add
inc
xchg
(bad)
aas
add
add
add
inc
mov
inc
add
inc
pop
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
xchg
push
inc
pop
inc
or
inc
cwde
or
inc
cdq
or
inc
xchg
or
inc
fwait
push
inc
adc
inc
pushf
adc
inc
popf
adc
inc
lahf
adc
inc
xchg
adc
inc
xchg
push
dec
cmp
dec
mov
dec
cmp
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
aas
dec
cmp
inc
adc
inc
xchg
adc
inc
lahf
adc
inc
popf
adc
inc
sahf
adc
inc
pushf
adc
inc
fwait
ud0
or
inc
or
inc
cwde
or
inc
xchg
or
inc
nop
push
inc
add
inc
add
inc
xchg
add
inc
nop
add
inc
mov
inc
add
aas
add
inc
test
push
lea
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
xchg
push
inc
pop
inc
inc
or
inc
call
inc
popf
adc
inc
cwde
adc
dec
sahf
adc
inc
lahf
adc
inc
push
inc
sbb
inc
cwde
adc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
cmp
inc
adc
inc
pop
inc
pop
inc
adc
inc
lahf
adc
inc
call
inc
fwait
ud0
push
inc
or
inc
xchg
or
inc
cwde
or
inc
xchg
pop
inc
add
inc
add
inc
mov
inc
add
inc
test
push
add
add
add
inc
nop
add
inc
mov
inc
add
inc
mov
inc
pop
inc
or
inc
(bad)
or
inc
pushf
push
inc
adc
inc
popf
adc
inc
lahf
adc
inc
xchg
adc
inc
xchg
adc
inc
xchg
adc
inc
xchg
adc
inc
xchg
push
inc
adc
inc
adc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
push
inc
sbb
inc
call
inc
xchg
adc
inc
xchg
adc
inc
xchg
adc
inc
xchg
adc
inc
fwait
adc
inc
sahf
adc
inc
popf
adc
inc
popf
adc
inc
xchg
or
inc
xchg
or
inc
mov
inc
push
inc
add
inc
add
inc
xchg
add
inc
xchg
jl
add
add
add
inc
xchg
add
inc
cwde
push
inc
inc
or
inc
xchg
or
inc
call
inc
popf
adc
inc
sahf
adc
inc
lahf
adc
inc
sbb
inc
mov
sbb
dec
movs
sbb
dec
and
dec
test
inc
sbb
dec
mov
dec
dec
dec
inc
dec
inc
dec
inc
push
inc
push
inc
push
inc
push
inc
push
inc
dec
inc
dec
dec
dec
dec
inc
inc
sbb
dec
cmps
and
dec
cmps
and
inc
mov
sbb
inc
lahf
sbb
inc
sahf
sbb
inc
movs
sbb
inc
mov
pop
inc
adc
inc
adc
inc
sahf
adc
inc
xchg
or
inc
call
inc
cdq
or
inc
xchg
push
inc
add
inc
mov
test
add
add
add
inc
xchg
pop
inc
inc
or
inc
cdq
push
inc
adc
inc
xchg
push
inc
adc
inc
pop
inc
sbb
inc
mov
sbb
inc
cwde
sbb
dec
cmps
push
dec
and
inc
mov
and
dec
stos
and
dec
dec
inc
dec
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
dec
inc
sbb
inc
and
inc
lahf
pop
dec
and
dec
cmps
and
inc
sahf
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
adc
inc
adc
inc
pushf
ud0
or
inc
or
inc
xchg
pop
inc
add
inc
mov
inc
cdq
or
inc
xchg
or
inc
xchg
or
inc
xchg
push
inc
adc
inc
call
inc
xchg
adc
inc
mov
sbb
dec
movs
sbb
inc
sbb
inc
movs
pop
inc
and
inc
movs
and
inc
cmps
and
dec
daa
inc
and
inc
mov
push
inc
push
inc
push
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
push
inc
push
inc
push
inc
and
dec
lods
sub
inc
xchg
sbb
dec
stos
sub
dec
test
and
inc
mov
sbb
inc
movs
push
dec
push
inc
sbb
inc
mov
push
inc
inc
adc
inc
cdq
adc
inc
cwde
ud0
or
inc
xchg
or
inc
call
inc
lea
inc
xchg
or
inc
xchg
or
inc
cwde
push
inc
adc
inc
sahf
adc
inc
mov
push
inc
sbb
inc
pushf
sbb
dec
cmps
push
dec
and
inc
pushf
sbb
inc
and
dec
stos
sub
dec
stos
sub
dec
lods
sub
inc
movs
inc
inc
and
inc
mov
push
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
and
inc
mov
dec
sub
dec
stos
sub
dec
stos
sub
dec
test
inc
and
inc
pushf
push
dec
and
dec
cmps
pop
inc
sbb
inc
popf
sbb
inc
call
inc
lahf
adc
inc
adc
inc
xchg
push
inc
or
inc
mov
cmps
inc
mov
mov
xchg
or
inc
adc
inc
mov
pop
inc
sbb
inc
popf
sbb
dec
movs
sbb
inc
and
inc
mov
inc
and
dec
sub
dec
lods
sub
dec
scas
sub
dec
xor
inc
lahf
and
inc
pop
inc
pop
inc
pop
inc
popa
inc
(bad)
inc
inc
inc
inc
(bad)
inc
popa
inc
pop
inc
pop
inc
pop
inc
dec
xor
inc
movs
sub
dec
scas
dec
sub
dec
sub
dec
movs
and
dec
lods
sub
inc
mov
and
inc
mov
and
inc
call
inc
mov
push
inc
adc
inc
lahf
adc
inc
xchg
push
inc
or
inc
xchg
or
inc
popf
adc
inc
popf
adc
inc
cdq
adc
inc
mov
sbb
inc
mov
sbb
dec
cmps
and
dec
cmps
and
dec
test
daa
dec
sub
dec
cmps
sub
dec
lods
sub
dec
scas
dec
xor
dec
mov
inc
sub
inc
sub
inc
mov
pop
inc
pusha
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pusha
inc
pusha
dec
sub
dec
mov
dec
sub
dec
xor
dec
scas
das
dec
das
dec
sub
dec
lods
sub
dec
lods
sub
dec
test
dec
and
dec
test
inc
dec
push
inc
sbb
inc
mov
adc
inc
adc
inc
xchg
or
add
leave
dec
mov
adc
inc
sbb
dec
movs
sbb
inc
sbb
dec
daa
dec
sub
dec
lods
sub
dec
scas
sub
dec
xor
dec
mov
dec
xor
dec
mov
dec
das
dec
cmp
inc
test
inc
popa
inc
popa
inc
inc
inc
inc
imul
shr
ins
inc
ins
inc
imul
mov
inc
inc
dec
dec
cmp
inc
test
dec
aaa
dec
xor
dec
mov
dec
xor
inc
test
dec
sub
dec
lods
sub
dec
stos
sub
dec
stos
inc
sbb
dec
push
inc
sbb
inc
pushf
pop
inc
sbb
inc
mov
push
ret
inc
xchg
psubusb
adc
inc
call
dec
movs
sbb
dec
and
inc
mov
and
inc
mov
and
inc
mov
sub
inc
mov
xor
dec
mov
dec
aaa
dec
cmp
inc
movs
das
inc
xor
inc
movs
xor
inc
mov
inc
inc
push
inc
shr
shr
shl
shl
shl
shr
shr
mov
inc
push
inc
xor
dec
cmp
dec
mov
dec
dec
inc
sub
inc
movs
sub
inc
mov
and
inc
and
inc
pushf
pop
dec
and
dec
cmps
and
dec
cmps
push
inc
sbb
inc
xchg
adc
inc
xchg
adc
inc
xchg
adc
inc
xchg
(bad)
inc
sahf
push
inc
sbb
dec
movs
sbb
dec
and
dec
test
dec
sub
dec
lods
sub
inc
cmps
sub
dec
lods
sub
dec
xor
dec
mov
dec
aaa
dec
cmp
dec
mov
dec
dec
inc
dec
inc
inc
xor
inc
shl
mov
imul
shr
shl
shl
ret
inc
ret
inc
ret
inc
shl
shl
shr
shr
shr
mov
inc
dec
inc
dec
inc
dec
cmp
dec
cmp
dec
mov
dec
inc
sub
dec
lods
das
dec
sub
dec
scas
sub
dec
lods
sub
dec
test
and
dec
cmps
and
dec
cmps
push
inc
sbb
inc
adc
inc
cdq
adc
inc
call
dec
movs
pop
dec
and
dec
test
dec
daa
dec
sub
dec
test
dec
sub
dec
mov
dec
xor
dec
cmp
dec
mov
dec
cmp
dec
inc
dec
dec
inc
inc
cmp
inc
shr
mov
outs
inc
jno
inc
ret
inc
ret
inc
ret
jns
inc
ret
jns
inc
ret
jns
inc
ret
inc
ret
inc
shl
shr
shr
lods
cmp
inc
lods
dec
dec
dec
inc
dec
inc
dec
aas
dec
cmp
dec
mov
inc
das
dec
xor
dec
sub
dec
sub
dec
stos
sub
dec
test
and
dec
cmps
and
dec
movs
sbb
inc
push
out
add
add
out
inc
pushf
sbb
inc
xchg
pop
dec
and
dec
test
dec
daa
dec
sub
dec
stos
sub
inc
sahf
and
dec
scas
das
dec
xor
dec
xor
dec
lods
xor
dec
mov
dec
inc
dec
inc
dec
dec
inc
inc
inc
dec
inc
inc
inc
ins
inc
jno
inc
ret
inc
ret
inc
ret
jnp
inc
ret
jge
inc
ret
jge
inc
ret
jge
inc
ret
jnp
inc
ret
inc
ret
inc
shl
ret
inc
test
inc
inc
inc
inc
dec
dec
dec
inc
dec
inc
dec
inc
inc
aaa
dec
aaa
dec
cmp
dec
mov
dec
xor
inc
mov
sub
dec
sub
dec
test
and
inc
cdq
sbb
inc
mov
push
out
inc
pushf
push
cmc
inc
mov
push
inc
sbb
dec
stos
daa
dec
sub
dec
stos
sub
inc
movs
sub
dec
scas
xor
dec
mov
dec
dec
cmp
dec
scas
xor
dec
cmp
dec
dec
inc
inc
inc
inc
dec
push
inc
inc
inc
ins
inc
outs
inc
jae
inc
ret
inc
ret
jnp
inc
les
inc
les
inc
cmp
les
inc
ret
jnp
inc
ret
inc
shl
ret
inc
scas
inc
inc
push
inc
dec
inc
dec
dec
dec
dec
dec
inc
inc
dec
cmp
dec
cmp
dec
mov
dec
xor
inc
sub
dec
lods
sub
dec
lods
sub
dec
stos
sub
inc
mov
and
dec
cmps
and
inc
pushf
sbb
inc
fwait
pop
stc
inc
mov
and
inc
test
inc
and
dec
sub
dec
mov
inc
sub
dec
cmp
dec
mov
cmp
dec
mov
inc
dec
dec
inc
dec
dec
push
inc
dec
inc
pop
inc
inc
inc
outs
inc
jb
inc
les
inc
lds
les
inc
test
inc
mov
inc
cmp
lds
les
inc
les
inc
mov
inc
push
inc
push
inc
push
inc
dec
inc
dec
inc
inc
dec
dec
inc
cmp
dec
cmp
dec
mov
dec
xor
dec
mov
inc
sub
dec
lods
dec
sub
dec
stos
daa
inc
and
dec
test
inc
sbb
inc
xchg
adc
inc
cwde
adc
inc
fwait
adc
dec
sbb
inc
mov
push
inc
and
inc
mov
and
inc
sub
inc
movs
sub
inc
lods
xor
inc
lods
cmp
inc
lods
cmp
inc
lods
cmp
inc
inc
dec
inc
inc
inc
pop
(bad)
aas
mov
(bad)
aas
mov
(bad)
ds
(bad)
ds
(bad)
cmp
mov
(bad)
cmp
mov
(bad)
cmp
mov
(bad)
ds
(bad)
aas
mov
(bad)
aas
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
inc
cmps
xor
inc
test
sub
dec
test
and
dec
cmps
and
dec
cmps
and
inc
lahf
sbb
inc
mov
sbb
inc
call
inc
xchg
adc
inc
ret
xor
scas
jo
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aaa
mov
inc
jne
inc
mov
inc
js
inc
mov
inc
jns
inc
mov
inc
jns
inc
mov
inc
ja
inc
mov
inc
ja
inc
mov
inc
jbe
inc
scas
ja
inc
scas
ja
aas
lods
js
inc
lods
js
inc
stos
js
inc
stos
ja
inc
stos
ja
aas
stos
ja
inc
stos
ja
aas
test
ja
daa
rcl
cmp
xchg
inc
xchg
(bad)
cmp
rcl
movs
jb
ss
ss
idiv
lods
outs
lock
ret
aas
scas
dec
adc
push
icebp
jmp
pop
in
jmp
push
jmp
jmp
push
jmp
and
jmp
jmp
jmp
out
and
out
and
dec
aam
daa
adc
jmp
push
mov
push
dec
mov
call
inc
add
cdq
dec
add
call
call
dec
add
sahf
dec
add
sahf
dec
add
sahf
dec
add
sahf
dec
add
xchg
inc
add
mov
call
cmp
test
add
(bad)
jge
add
push
pop
push
pop
jmp
or
imul
(bad)
inc
(bad)
dec
loop
jmp
cmc
(bad)
call
inc
ja
and
and
push
cli
cmp
add
ds
push
cmp
and
jmp
pusha
jecxz
and
pusha
out
and
(bad)
loope
es
es
loop
daa
jne
jmp
push
sar
sub
lods
jmp
adc
jmp
ss
or
lea
inc
pop
add
fwait
pop
or
pushf
pop
or
popf
pop
or
sahf
pop
or
sahf
pop
or
lahf
pop
or
sahf
pop
or
lahf
pop
or
mov
dec
dec
or
mov
xchg
inc
inc
or
jge
or
jp
or
jbe
or
jb
or
data16
inc
cli
(bad)
push
repnz
jmp
(bad)
dec
jecxz
dec
stc
(bad)
jmp
in
(bad)
jmp
js
push
mov
dec
pop
xor
cmps
sub
and
call
jmp
arpl
jmp
fs
es
es
daa
push
jmp
ins
loop
daa
jno
jmp
js
jmp
jle
jmp
jns
jmp
jns
push
jns
inc
movs
call
mov
push
jmp
popa
ud0
adc
movs
fs
movs
fs
movs
fs
movs
arpl
call
push
or
xchg
push
or
(bad)
push
or
lea
dec
dec
or
test
inc
inc
or
jle
add
push
(bad)
(bad)
push
(bad)
(bad)
call
idiv
(bad)
cmp
lock
call
sti
(bad)
(bad)
jl
(bad)
call
enter
pop
mov
sbb
(bad)
cs
es
(bad)
and
jmp
jmp
out
and
gs
es
es
loop
daa
outs
loop
daa
jb
jmp
jbe
jmp
jns
jmp
jle
jmp
xchg
in
call
cdq
icebp
call
cmps
repz
gs
test
imul
jmp
pop
jmp
adc
call
push
or
test
adc
xchg
push
or
xchg
push
or
mov
dec
dec
or
add
mov
inc
(bad)
(bad)
call
loop
dec
cmc
(bad)
inc
jmp
std
(bad)
jmp
(bad)
dec
fxtract
push
sub
lahf
and
fiadd
and
jmp
jmp
and
fs
and
gs
and
push
loop
daa
ins
loop
daa
jo
jmp
je
jmp
ja
jmp
jnp
jmp
and
and
out
and
call
repnz
outs
pop
push
outs
sbb
mov
sbb
push
jno
push
outs
sbb
lods
push
jmp
sbb
popf
pop
ud0
push
or
xchg
push
or
lea
inc
dec
add
cdq
mov
cld
(bad)
(bad)
(bad)
jns
sub
imul
inc
loopne
jmp
std
(bad)
dec
std
dec
jecxz
jmp
cmp
call
and
in
and
jmp
callw
out
and
addr16
es
jecxz
daa
outs
jecxz
daa
jb
jmp
jne
jmp
jns
jmp
jl
jmp
(bad)
cwde
jmp
dec
xlat
jmp
gs
mov
ja
(bad)
mov
ja
(bad)
mov
ja
(bad)
mov
ja
(bad)
mov
je
jmp
popa
push
call
pop
push
call
push
or
xchg
push
or
cwde
push
push
push
scas
xchg
push
sbb
jae
(bad)
jmp
(bad)
call
(bad)
call
(bad)
(bad)
call
std
inc
(bad)
jmp
inc
fmul
daa
jno
jecxz
jl
jmp
jmp
and
addr16
jmp
push
jmp
imul
daa
outs
jecxz
daa
jae
jmp
ja
jmp
jp
jmp
and
jmp
xchg
jmp
jmp
sbb
sub
dec
jmp
icebp
push
mov
mov
jl
(bad)
mov
jle
(bad)
mov
jp
push
push
jmp
adc
jmp
popa
push
call
push
adc
mov
pop
or
jle
add
dec
jmp
xchg
out
(bad)
jmp
sti
(bad)
inc
loopne
inc
jmp
jmp
add
inc
sub
sub
jmp
imul
jmp
push
jmp
ins
in
daa
jo
jmp
jae
jmp
js
jmp
jp
jmp
test
jmp
jmp
jmp
inc
(bad)
call
in
xchg
mov
idiv
retf
dec
mov
mov
ret
inc
sbb
mov
jne
push
outs
push
jmp
push
jmp
jno
push
push
jmp
arpl
call
cwde
cmp
xchg
out
(bad)
(bad)
jge
(bad)
jmp
lock
inc
jecxz
inc
loopne
inc
add
add
loopne
and
jmp
in
jmp
push
jmp
imul
es
in
es
jmp
je
jmp
jns
jmp
jl
jmp
nop
call
call
scas
lock
and
jmp
push
sar
xor
pop
push
fdivr
push
call
inc
adc
mov
inc
mov
inc
xchg
inc
test
(bad)
mov
je
push
jo
(bad)
mov
js
push
outs
sbb
lods
imul
test
adc
movs
pop
or
(bad)
mov
icebp
(bad)
push
(bad)
(bad)
mov
in
inc
in
dec
shl
test
add
add
loopne
and
in
jmp
ins
jmp
ins
call
jmp
jo
jmp
je
jmp
jns
jmp
and
and
xchg
jmp
call
mov
jmp
sub
jmp
(bad)
(bad)
es
sub
jmp
jno
(bad)
cmp
push
or
retf
xchg
adc
retf
dec
(bad)
adc
leave
mov
inc
xchg
inc
adc
mov
sbb
mov
je
push
imul
loope
cld
dec
idiv
inc
idiv
call
(bad)
push
call
(bad)
call
(bad)
out
out
add
add
(bad)
jle
jmp
in
jmp
ins
jmp
outs
out
es
jmp
je
jmp
js
jmp
and
jmp
xchg
jmp
call
mov
jmp
xor
jmp
push
(bad)
sbb
call
test
jmp
cmps
repnz
cmp
in
push
arpl
call
cdq
pop
dec
xchg
or
iret
xchg
or
dec
xchg
ud0
xchg
adc
retf
inc
mov
(bad)
mov
inc
test
inc
sbb
(bad)
mov
jae
push
stos
xchg
idiv
(bad)
jmp
cld
(bad)
call
out
jmp
jmp
sbb
out
and
fnstenv
and
repz
ins
jmp
and
outs
call
jmp
jae
jmp
ja
jmp
and
and
call
jmp
mov
icebp
jmp
das
(bad)
push
jl
dec
call
loopne
pop
jmp
cdq
add
(bad)
fistp
or
aam
or
rcr
call
cdq
or
iret
xchg
or
int
push
dec
xchg
adc
enter
(bad)
mov
inc
sbb
mov
jle
jmp
cmc
icebp
(bad)
(bad)
(bad)
(bad)
jmp
sti
(bad)
push
(bad)
push
hlt
(bad)
(bad)
jnp
(bad)
inc
jecxz
inc
aam
push
and
(bad)
sub
mov
jmp
lock
outs
jmp
and
jo
jmp
jae
jmp
jne
jmp
mov
jmp
cwde
jmp
mov
push
jno
jmp
pushf
or
rcr
or
aad
pop
call
mov
add
fsub
(bad)
fsub
call
mov
pop
call
pushf
or
rcr
or
dec
mov
inc
mov
(bad)
mov
js
call
mov
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
jmp
call
cli
(bad)
(bad)
mov
iret
out
jmp
into
imul
daa
ins
loopne
es
into
jmp
inc
(bad)
dec
into
jmp
jae
jmp
outs
jmp
es
jmp
jae
jmp
jne
jmp
test
jmp
xchg
jmp
scas
hlt
dec
jmp
xchg
pop
call
lahf
pop
call
mov
add
(bad)
add
(bad)
add
fsubr
add
(bad)
add
xlat
mov
pop
call
pushf
or
int3
xchg
ud0
(bad)
adc
ret
xchg
(bad)
mov
jnp
(bad)
mov
std
cld
(bad)
std
sti
stc
dec
loop
(bad)
(bad)
(bad)
call
stc
sti
jmp
in
cld
(bad)
xor
repnz
add
add
jbe
sub
pop
xlat
jmp
dec
into
jmp
inc
enter
(bad)
push
jae
call
bnd
je
jmp
jl
call
xchg
bnd
lods
hlt
call
mov
jmp
fwait
jmp
push
cmps
in
call
mov
pop
(bad)
frstor
add
(bad)
or
fild
adc
loopne
adc
loopne
adc
fild
or
(bad)
add
aam
pop
dec
(bad)
adc
(bad)
mov
inc
xchg
inc
xchg
inc
xchg
(bad)
mov
imul
push
icebp
out
mov
out
(bad)
push
std
(bad)
(bad)
fnstcw
jmp
cmp
out
icebp
inc
lea
and
outs
out
jmp
fs
and
aad
and
call
xchg
sub
jge
jbe
pop
mov
jmp
cmp
test
call
xchg
icebp
call
scas
cmc
(bad)
cmp
or
loopne
push
jmp
lods
adc
loop
sbb
jecxz
push
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
sbb
loopne
adc
fisubr
add
into
xchg
or
int
adc
dec
xchg
sub
rcr
iret
(bad)
fidivr
call
lock
(bad)
std
(bad)
(bad)
(bad)
jmp
nop
push
pop
stos
inc
in
inc
pop
inc
add
add
add
add
sub
jmp
jnp
jmp
ins
jmp
out
rcr
fld
xor
int
and
retf
xchg
dec
mov
fistp
dec
jmp
loop
adc
idiv
bound
push
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
call
mov
jmp
mov
jmp
mov
jmp
mov
jmp
scas
adc
loopne
or
fsub
sbb
fsubr
sub
dec
xchg
and
mov
adc
mov
(bad)
pushf
hlt
(bad)
(bad)
stc
(bad)
(bad)
push
ficom
push
mov
sbb
cmp
add
inc
xchg
or
inc
xchg
or
add
add
inc
xchg
pminsw
add
cmp
mov
jmp
xchg
jmp
xchg
cmp
hlt
sar
fbstp
inc
dec
xchg
xor
leave
(bad)
lea
dec
xchg
sbb
(bad)
cwde
or
out
pop
call
lods
(bad)
jmp
mov
pop
(bad)
call
mov
inc
(bad)
jmp
inc
(bad)
jmp
inc
(bad)
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
(bad)
(bad)
fisubr
sub
mov
sar
(bad)
clc
cld
cli
push
sar
imul
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
inc
add
inc
fwait
push
cmc
dec
xchg
add
inc
cdq
adc
inc
mov
(bad)
cmp
ins
add
cs
jmp
add
and
add
mov
xchg
call
stos
dec
call
mov
xor
iret
cwde
sub
iret
cwde
sub
aam
sbb
fisub
or
in
scas
adc
in
mov
jmp
mov
(bad)
jmp
mov
inc
(bad)
jmp
inc
(bad)
jmp
inc
(bad)
jmp
dec
(bad)
jmp
mov
xor
in
das
jmp
mov
jmp
mov
(bad)
fldcw
and
shl
aam
enter
(bad)
(bad)
stc
hlt
in
lock
popa
call
into
call
mov
cmp
push
pop
add
cmp
(bad)
cmp
(bad)
cmp
add
inc
mov
inc
adc
inc
cwde
adc
xchg
adc
cmp
add
cmp
(bad)
cmp
cmp
push
jl
push
pop
add
aaa
pop
add
sub
pop
ins
adc
lock
cmc
iret
jb
out
pop
(bad)
(bad)
(bad)
fild
jmp
scas
and
jmp
mov
jmp
mov
jmp
mov
inc
(bad)
jmp
inc
(bad)
jmp
dec
(bad)
in
mov
dec
(bad)
jmp
(bad)
jmp
mov
cmp
jecxz
xor
(bad)
sbb
rcr
jecxz
cmc
div
push
aad
(bad)
call
pop
or
sub
push
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
cmp
cmp
(bad)
cmp
cwde
adc
inc
fwait
adc
dec
sahf
push
sub
cmp
je
(bad)
cmp
push
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
xor
jmp
mov
cmp
call
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
call
mov
dec
(bad)
jmp
push
(bad)
in
mov
push
(bad)
jmp
push
(bad)
jmp
dec
(bad)
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
lods
xor
fld
test
(bad)
fdivr
call
int3
push
jmp
dec
add
xor
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
cmp
(bad)
cmp
cmp
mov
adc
add
add
adc
ds
(bad)
cmp
add
cmp
push
pop
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
xor
dec
add
pop
push
(bad)
jmp
push
into
jne
out
ret
fs
in
mov
dec
(bad)
jmp
mov
dec
(bad)
jmp
dec
(bad)
jmp
push
(bad)
in
mov
push
(bad)
in
mov
push
(bad)
jmp
push
(bad)
jmp
jmp
mov
(bad)
jmp
mov
ins
push
iret
jno
loop
dec
inc
or
es
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
pop
add
cmp
(bad)
cmp
add
ds
dec
sub
inc
fwait
push
pop
dec
stos
sub
inc
cmps
and
in
cdq
and
inc
fwait
and
inc
xchg
and
inc
xchg
and
inc
xchg
push
jmp
xchg
sbb
in
inc
xchg
push
in
inc
xchg
pop
jmp
xchg
sbb
jmp
xchg
push
in
cmp
pop
jmp
test
jmp
cwde
daa
hlt
in
pop
(bad)
test
push
into
ja
test
push
enter
les
ret
popa
(bad)
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
out
ret
arpl
lock
push
push
into
jns
hlt
retf
loope
push
(bad)
pop
cwde
and
out
inc
xchg
pop
jmp
xchg
pop
jmp
xchg
pop
jmp
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
mov
and
inc
popf
and
out
movs
sub
dec
cmps
daa
call
inc
test
add
inc
mov
push
inc
pusha
inc
(bad)
inc
arpl
inc
shl
ret
inc
ret
inc
ret
jno
dec
mov
je
inc
shl
ret
outs
inc
jl
inc
(bad)
jns
inc
(bad)
jl
inc
(bad)
jg
cmp
mov
cmp
mov
dec
jmp
ret
pop
push
retf
ins
(bad)
clc
iret
jge
clc
into
js
test
jne
test
jne
test
je
test
jns
repnz
addr16
faddp
push
jmp
mov
(bad)
cmp
pusha
inc
js
inc
lds
inc
les
inc
lds
inc
shl
mov
jb
dec
mov
ins
inc
inc
inc
popa
inc
pop
inc
pop
inc
pop
dec
dec
dec
aas
icebp
dec
mov
cs
mov
dec
inc
pusha
inc
inc
inc
inc
outs
dec
dec
inc
inc
jb
inc
ret
inc
mov
pop
inc
jge
inc
ret
inc
ret
jl
inc
ret
jg
inc
les
inc
mov
jmp
mov
xor
ins
mov
dec
dec
mov
dec
dec
mov
cmp
ds
push
mov
imul
xor
mov
cmp
ret
inc
ret
inc
ret
inc
mov
push
inc
shl
shr
mov
push
inc
inc
inc
popa
inc
popa
inc
push
dec
inc
dec
inc
inc
pop
inc
mov
inc
inc
inc
push
inc
shr
mov
popa
inc
pop
inc
js
inc
ret
inc
ret
jle
inc
mov
(bad)
inc
jnp
inc
les
inc
pop
inc
cmp
ss
push
shl
jmp
mov
jmp
into
sahf
jmp
retf
xchg
jmp
int3
sahf
jmp
shr
jmp
aam
jmp
shl
push
shl
inc
popa
inc
cmp
inc
shl
mov
jb
inc
ret
inc
shl
jb
inc
shl
mov
push
inc
inc
pop
inc
push
inc
dec
inc
repnz
add
inc
mov
pop
inc
pop
inc
outs
inc
jno
inc
ret
inc
mov
jle
inc
mov
cmp
inc
les
(bad)
aas
(bad)
mov
inc
ret
jg
inc
(bad)
(bad)
inc
cmp
enter
shl
xchg
inc
ins
push
aam
push
aam
jmp
aam
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aam
jmp
aam
jmp
aam
push
shl
inc
mov
mov
inc
(bad)
mov
inc
ret
inc
ret
inc
lds
inc
les
inc
jnp
inc
mov
js
inc
mov
outs
inc
ins
inc
inc
inc
pop
inc
dec
jb
add
add
dec
jmp
dec
mov
popa
inc
(bad)
inc
pop
inc
inc
pop
inc
pop
inc
inc
inc
inc
push
inc
ins
inc
imul
shr
shr
push
inc
outs
dec
dec
(bad)
ds
ds
jae
ds
aas
les
cmp
les
ds
jbe
cmp
jg
cmp
jg
cmp
mov
cmp
xchg
cmp
xchg
cmp
mov
ds
jne
inc
mov
jb
inc
shl
ret
inc
shl
mov
imul
mov
inc
pop
inc
inc
(bad)
inc
inc
arpl
inc
mov
dec
inc
push
inc
dec
out
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
(bad)
add
add
add
psubb
add
add
add
clc
add
add
add
pop
clc
add
add
add
pop
clc
add
add
add
pop
clc
add
add
add
pop
lock
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
psubb
add
add
add
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
add
add
add
jg
add
add
add
aas
clc
add
add
add
pop
lock
add
add
(bad)
add
add
add
(bad)
add
add
add
(bad)
add
add
add
psubb
add
add
add
clc
add
add
add
pop
cld
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
movs
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
add
aaa
push
add
aaa
push
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
inc
push
inc
ud0
adc
inc
pushf
adc
inc
popf
adc
inc
popf
adc
inc
popf
adc
inc
pushf
adc
inc
pushf
adc
inc
call
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
push
push
add
aaa
push
add
aaa
push
add
aaa
push
add
aaa
imul
(bad)
cmp
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
add
cmp
(bad)
cmp
(bad)
cmp
inc
adc
inc
sahf
adc
inc
lahf
adc
inc
push
inc
push
inc
push
inc
push
inc
adc
(bad)
cmp
add
cmp
(bad)
cmp
cmp
add
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
(bad)
cmp
push
push
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
(bad)
cmp
add
cmp
jnp
(bad)
ds
(bad)
cmp
jp
inc
pop
inc
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
sbb
cmp
add
cmp
jp
(bad)
ds
(bad)
cmp
js
(bad)
cmp
add
cmp
add
cmp
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
cmp
inc
add
add
outs
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
add
cmp
jns
(bad)
ds
(bad)
cmp
jg
(bad)
aas
add
add
aas
add
aas
add
inc
mov
sbb
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
push
dec
sbb
inc
add
ds
(bad)
aas
add
aas
add
ds
(bad)
ds
(bad)
cmp
jp
(bad)
cmp
add
cmp
add
cmp
add
cmp
cmp
(bad)
cmp
(bad)
cmp
inc
add
add
jae
(bad)
cmp
(bad)
cmp
add
cmp
add
cmp
jnp
(bad)
cmp
jle
(bad)
aas
add
aas
add
inc
add
inc
test
inc
add
inc
test
inc
add
dec
cmps
and
dec
cmps
and
dec
cmps
and
dec
test
dec
and
dec
test
dec
and
dec
test
dec
and
dec
cmps
and
inc
xchg
inc
add
inc
add
inc
test
inc
add
aas
add
(bad)
aas
add
(bad)
cmp
jl
(bad)
cmp
jns
(bad)
cmp
add
cmp
add
cmp
inc
add
add
jne
(bad)
cmp
(bad)
cmp
add
ds
(bad)
ds
(bad)
aas
add
aas
jle
(bad)
aas
jg
(bad)
aas
add
inc
add
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
xchg
dec
and
dec
daa
dec
sub
dec
stos
sub
dec
stos
sub
dec
stos
sub
dec
stos
sub
dec
stos
daa
dec
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
add
inc
add
aas
add
(bad)
ds
(bad)
aas
add
aas
jg
(bad)
ds
(bad)
cmp
ja
(bad)
cmp
inc
add
add
jp
(bad)
aas
jg
(bad)
aas
add
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
inc
add
inc
mov
dec
sub
dec
lods
sub
dec
lods
sub
dec
lods
sub
dec
sub
dec
sub
dec
sub
inc
mov
inc
add
inc
nop
add
inc
pop
inc
inc
add
inc
mov
inc
add
inc
test
inc
add
inc
xchg
inc
add
inc
add
aas
add
cmp
jp
inc
add
add
jg
(bad)
ds
(bad)
ds
inc
add
inc
xchg
inc
add
inc
test
inc
add
inc
mov
inc
add
inc
lea
inc
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
or
dec
scas
sub
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
dec
scas
das
inc
push
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
nop
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
xchg
(bad)
aas
add
aas
jg
(bad)
ds
inc
add
add
add
inc
test
inc
add
inc
test
inc
add
inc
mov
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
nop
add
inc
xchg
push
inc
pop
inc
inc
inc
dec
xor
dec
mov
dec
xor
dec
dec
aaa
dec
dec
dec
xor
inc
inc
inc
inc
or
inc
xchg
pop
inc
inc
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
add
inc
lea
inc
add
inc
add
inc
xchg
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
pop
inc
add
inc
xchg
push
inc
or
inc
xchg
or
inc
xchg
or
inc
cwde
or
inc
call
inc
cwde
adc
dec
mov
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
cmp
dec
mov
dec
cmp
inc
xchg
adc
inc
xchg
push
inc
ud0
inc
or
inc
cwde
or
inc
xchg
or
inc
xchg
pop
inc
add
inc
add
inc
lea
inc
add
inc
mov
inc
add
inc
mov
inc
add
add
add
inc
lea
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
add
inc
xchg
push
inc
or
inc
cdq
or
inc
xchg
or
inc
fwait
ud0
adc
inc
popf
adc
inc
sahf
adc
inc
call
dec
mov
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
push
inc
adc
inc
sahf
adc
inc
sahf
adc
inc
popf
adc
inc
pushf
adc
inc
xchg
or
inc
or
inc
xchg
pop
inc
push
inc
add
inc
xchg
add
inc
mov
inc
inc
add
inc
nop
add
inc
nop
add
inc
lea
inc
add
inc
nop
push
inc
inc
inc
push
inc
adc
inc
cdq
adc
inc
xchg
adc
inc
cwde
adc
inc
cdq
adc
inc
call
inc
lahf
sbb
dec
mov
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
inc
inc
sbb
inc
pushf
sbb
inc
popf
sbb
inc
pushf
push
inc
adc
inc
adc
inc
popf
adc
inc
fwait
ud0
inc
inc
inc
inc
add
inc
nop
add
inc
nop
add
inc
xchg
add
inc
xchg
add
inc
xchg
push
inc
inc
or
inc
xchg
or
inc
adc
inc
lahf
adc
inc
sbb
inc
fwait
sbb
inc
sahf
sbb
inc
mov
and
inc
mov
inc
dec
dec
inc
dec
inc
push
inc
push
inc
push
inc
push
inc
push
inc
dec
dec
dec
inc
and
dec
cmps
and
dec
movs
pop
inc
sbb
inc
popf
sbb
inc
mov
sbb
inc
mov
adc
inc
popf
adc
inc
call
inc
xchg
or
inc
xchg
or
inc
xchg
add
inc
add
add
pop
inc
pop
inc
inc
inc
push
inc
inc
adc
inc
mov
sbb
inc
mov
sbb
inc
mov
and
inc
popf
push
dec
and
inc
dec
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
and
inc
and
dec
test
dec
and
inc
fwait
sbb
dec
movs
push
inc
sbb
inc
mov
pop
inc
inc
adc
inc
xchg
push
inc
inc
or
inc
xchg
pop
inc
add
add
or
inc
xchg
or
inc
xchg
or
inc
adc
inc
popf
push
inc
push
inc
sbb
dec
movs
push
inc
push
inc
and
dec
test
daa
dec
inc
and
inc
push
inc
push
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
pop
inc
push
inc
sub
inc
movs
inc
and
dec
daa
inc
and
inc
lahf
push
dec
and
dec
movs
push
inc
sbb
inc
call
inc
sahf
adc
inc
xchg
push
inc
or
inc
xchg
or
inc
cdq
push
inc
push
inc
adc
inc
lahf
adc
inc
sbb
dec
movs
push
inc
push
inc
and
dec
test
inc
dec
sub
dec
lods
sub
inc
test
dec
das
inc
das
inc
pop
inc
pop
inc
pop
inc
popa
inc
inc
inc
inc
popa
inc
pop
inc
pop
inc
sub
dec
scas
xor
inc
test
dec
sub
dec
cmps
daa
dec
daa
inc
and
inc
mov
pop
inc
sbb
inc
mov
pop
inc
adc
inc
call
inc
popf
adc
inc
popf
adc
inc
pushf
adc
inc
mov
sbb
inc
mov
and
dec
test
daa
dec
sub
dec
test
das
dec
xor
inc
stos
das
dec
xor
inc
pop
inc
popa
inc
inc
inc
inc
inc
inc
inc
inc
popa
dec
dec
dec
xor
dec
mov
dec
xor
dec
stos
sub
dec
lods
sub
dec
stos
sub
dec
test
and
inc
lahf
push
dec
push
inc
sbb
inc
popf
push
inc
adc
inc
add
add
adc
inc
pushf
adc
inc
pushf
pop
inc
sbb
dec
movs
pop
inc
and
inc
movs
and
dec
cmps
dec
sub
dec
stos
sub
inc
stos
sub
dec
dec
xor
dec
mov
inc
cmp
inc
mov
inc
push
inc
shr
shr
shr
shr
shr
mov
inc
cmp
dec
mov
dec
xor
dec
mov
dec
inc
das
dec
dec
sub
dec
test
dec
inc
and
dec
cmps
and
dec
movs
pop
inc
sbb
inc
popf
push
inc
adc
inc
sahf
sbb
inc
sahf
sbb
inc
mov
and
dec
cmps
and
dec
test
sub
inc
movs
sub
inc
cmps
sub
dec
scas
xor
dec
mov
dec
cmp
dec
mov
dec
dec
aas
inc
inc
inc
push
inc
shr
shl
ret
inc
ret
inc
ret
inc
shl
shr
mov
cmp
dec
inc
dec
dec
cmp
dec
mov
dec
xor
inc
cmps
sub
inc
cmps
sub
dec
test
sub
dec
test
and
dec
movs
push
inc
sbb
inc
sahf
sbb
inc
cdq
pop
inc
dec
pop
dec
and
dec
test
sub
inc
movs
dec
das
dec
xor
inc
test
cmp
dec
mov
dec
inc
dec
inc
inc
inc
inc
inc
inc
outs
inc
jae
inc
ret
inc
ret
jp
inc
ret
jnp
inc
ret
jp
inc
ret
inc
shl
shr
scas
inc
inc
inc
dec
dec
dec
inc
dec
inc
dec
cmp
dec
dec
xor
inc
cmps
sub
dec
lods
sub
dec
stos
sub
dec
test
and
inc
pushf
sbb
inc
cdq
pop
inc
add
add
sbb
inc
mov
push
dec
dec
sub
inc
cmps
sub
dec
lods
dec
xor
dec
mov
dec
aaa
inc
cmp
dec
mov
dec
dec
inc
inc
inc
dec
inc
inc
imul
shl
ret
inc
ret
jl
inc
les
inc
les
inc
jl
inc
ret
inc
shl
mov
inc
dec
inc
dec
dec
dec
dec
dec
inc
dec
cmp
dec
mov
dec
dec
xor
inc
test
dec
sub
dec
stos
sub
inc
mov
and
inc
mov
add
inc
mov
push
inc
and
dec
cmps
dec
sub
dec
lods
das
dec
das
dec
aaa
dec
cmp
dec
mov
dec
inc
inc
inc
inc
dec
inc
push
inc
push
inc
dec
inc
ins
inc
je
inc
ret
jp
inc
les
inc
les
inc
cmp
les
inc
ret
jp
inc
shl
push
inc
push
inc
push
inc
dec
inc
dec
dec
inc
dec
aas
dec
aas
dec
cmp
dec
lods
xor
dec
scas
xor
dec
lods
sub
dec
inc
and
inc
mov
add
inc
lods
inc
cli
inc
lods
dec
inc
dec
inc
dec
inc
dec
inc
push
inc
push
inc
inc
pop
inc
pop
inc
pop
inc
(bad)
inc
inc
inc
push
inc
jno
inc
mov
js
ds
jl
ds
jl
ds
ja
aas
mov
ins
inc
imul
inc
mov
popa
inc
pop
inc
arpl
inc
mov
pop
inc
pop
inc
pop
inc
pop
inc
push
inc
push
inc
dec
test
add
pop
lahf
cmp
das
jmp
jbe
jmp
outs
aad
sub
jmp
imul
jmp
ins
aam
sub
jmp
jno
jmp
ins
int
sub
stos
jmp
aas
mov
sub
(bad)
jge
sbb
inc
adc
dec
arpl
dec
arpl
(bad)
jge
pop
(bad)
jnp
pop
push
sbb
jae
sbb
outs
dec
sbb
ins
dec
sbb
push
inc
push
call
in
push
loope
jmp
fsubrp
inc
call
scas
jmp
dec
(bad)
lods
pop
mov
add
add
lahf
dec
mov
ins
(bad)
and
pusha
in
and
popa
jecxz
es
es
es
jmp
pop
aam
sub
jmp
and
inc
pop
sub
pushf
pop
or
sahf
pop
or
lahf
pop
or
mov
pop
or
call
dec
or
lea
dec
dec
or
add
(bad)
js
or
jb
or
stos
jmp
(bad)
call
(bad)
(bad)
mov
cmc
(bad)
jmp
fdivr
imul
aas
(bad)
mov
(bad)
and
call
jmp
(bad)
in
es
es
daa
imul
daa
jo
jmp
je
jmp
jns
jmp
jle
jmp
mov
jmp
xchg
loopne
push
or
jmp
addr16
jmp
pop
or
call
push
or
mov
dec
dec
or
add
(bad)
fcomip
clc
dec
repnz
inc
idiv
jmp
std
(bad)
mov
clc
(bad)
call
retf
icebp
jmp
mov
pop
mov
add
es
std
and
jmp
gs
and
addr16
es
loop
daa
jb
jmp
jbe
jmp
jnp
jmp
nop
call
call
jmp
outs
sbb
mov
sbb
mov
sbb
push
imul
test
imul
call
push
or
mov
dec
push
add
out
cli
sti
dec
icebp
(bad)
call
(bad)
(bad)
mov
cmc
(bad)
dec
xlat
cli
jmp
mov
add
daa
jbe
jmp
and
callw
out
and
push
jmp
outs
jecxz
daa
jae
jmp
js
jmp
jle
jmp
out
and
in
sub
jmp
popf
push
js
(bad)
mov
jns
(bad)
mov
ja
push
ins
sbb
movs
arpl
jmp
pop
push
call
pop
or
jmp
sub
jmp
(bad)
jmp
lock
inc
(bad)
jmp
add
add
jb
and
outs
jmp
and
imul
jmp
push
jmp
outs
in
daa
jne
jmp
jp
jmp
and
and
jmp
and
xchg
(bad)
mov
sbb
rol
(bad)
mov
jb
push
ins
push
jmp
gs
lods
ins
sbb
stos
imul
call
movs
xchg
call
jmp
cmp
(bad)
inc
loope
push
int3
dec
sub
(bad)
and
out
jmp
push
jmp
ins
out
es
jmp
jne
jmp
jnp
jmp
xchg
jmp
jmp
xor
call
jecxz
pop
mov
dec
mov
mov
(bad)
mov
(bad)
mov
js
push
pop
push
je
push
push
jmp
aam
push
in
(bad)
jmp
(bad)
dec
add
add
jge
jmp
in
jmp
ins
jmp
jmp
jo
jmp
jbe
jmp
jl
jmp
out
and
in
jmp
cmp
jmp
jo
jmp
mov
push
imul
dec
xchg
adc
retf
inc
xchg
inc
sbb
mov
jnp
(bad)
mov
jo
push
cli
std
dec
idiv
push
(bad)
call
in
call
iret
cmc
jmp
add
add
ins
xlat
(bad)
and
jmp
ins
jmp
jo
jmp
je
jmp
jl
jmp
call
call
cmps
in
jmp
aas
(bad)
(bad)
cmp
jmp
xchg
(bad)
jl
xchg
adc
call
pushf
or
rcr
or
rcl
push
dec
nop
adc
(bad)
mov
les
sbb
mov
jnp
(bad)
fnstcw
(bad)
jmp
jmp
xor
(bad)
call
add
add
push
sar
and
jb
jmp
outs
jmp
je
jmp
jl
jmp
jmp
call
test
dec
mov
call
pushf
or
aad
push
call
mov
add
fldenv
call
mov
push
call
pushf
or
rcl
ud0
lea
inc
adc
mov
mov
cld
sti
clc
jmp
cli
(bad)
jmp
(bad)
inc
cmc
(bad)
jmp
(bad)
dec
mov
adc
add
add
data16
es
sar
es
sar
and
outs
jmp
and
jae
jmp
mov
jmp
xchg
jmp
mov
or
fsub
add
(bad)
or
fisubr
(bad)
(bad)
add
xlat
mov
or
retf
inc
mov
rol
out
loope
push
in
jecxz
xchg
std
push
in
jmp
int
int3
sub
and
pop
fcos
es
sar
inc
add
cmp
push
mov
cmps
jmp
lahf
in
call
mov
jmp
test
push
jmp
scas
sbb
jecxz
push
jmp
mov
jmp
mov
jmp
scas
pop
(bad)
fild
call
xchg
or
retf
nop
adc
retf
xchg
and
retf
xchg
xor
jmp
jmp
lock
push
clc
hlt
jmp
mov
or
add
push
cmp
jmp
mov
call
fwait
inc
inc
mov
inc
mov
dec
(bad)
sbb
mov
xor
dec
cdq
mov
(bad)
cmp
sub
jecxz
and
out
sub
call
mov
(bad)
call
mov
jmp
mov
jmp
lods
adc
fldenv
sbb
fldenv
cmp
retf
(bad)
mov
repz
(bad)
out
div
dec
mov
push
nop
popf
inc
cmp
inc
xchg
inc
xchg
push
jns
add
add
or
inc
xchg
or
cmp
and
daa
test
inc
push
(bad)
fnstenv
fs
fisubr
aaa
dec
xchg
sub
iret
xchg
and
rcr
aas
push
mov
xchg
mov
jmp
mov
(bad)
jmp
(bad)
in
mov
inc
(bad)
jmp
jmp
mov
jmp
mov
(bad)
fild
xor
iret
xchg
sub
(bad)
cmps
gs
cmc
stc
(bad)
out
in
fcos
int3
mov
jmp
mov
cmp
(bad)
cmp
add
inc
nop
or
inc
xchg
or
aas
xchg
adc
jecxz
jl
(bad)
cmp
push
jo
push
jp
push
pop
add
cmp
(bad)
test
jae
out
pop
(bad)
(bad)
aaa
(bad)
fsubr
and
jmp
mov
jmp
mov
inc
(bad)
jmp
dec
(bad)
in
mov
dec
(bad)
jmp
mov
cmp
(bad)
fisubr
(bad)
faddp
cmp
cmc
out
(bad)
out
xlat
movs
push
jb
push
pop
add
aaa
pop
add
aaa
bound
(bad)
cmp
(bad)
cmp
xchg
adc
push
inc
lahf
sbb
inc
add
jae
(bad)
cmp
push
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
(bad)
jmp
retf
jmp
mov
cmp
in
cmp
(bad)
jmp
mov
push
(bad)
in
mov
push
(bad)
jmp
jmp
mov
jmp
mov
jmp
mov
(bad)
fmul
cdq
(bad)
(bad)
cmps
jmp
mov
and
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
cmp
(bad)
cmp
(bad)
aas
add
jg
add
dec
movs
and
aas
or
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
outs
or
mov
dec
(bad)
jmp
push
repnz
jb
lock
ret
pop
(bad)
in
rcr
mov
pop
(bad)
in
mov
pop
(bad)
in
mov
pop
(bad)
in
rcr
rcr
ret
(bad)
push
retf
jb
out
arpl
stos
mov
ud0
push
(bad)
cmp
push
(bad)
cmp
push
(bad)
cmp
push
(bad)
cmp
push
(bad)
cmp
push
(bad)
cmp
push
(bad)
cmp
mov
inc
pop
inc
and
inc
mov
rol
dec
rol
dec
iret
inc
mov
iret
inc
mov
iret
inc
mov
iret
inc
mov
aad
mov
fiadd
dec
fadd
pop
rol
pop
rol
pop
rol
popa
rol
push
loop
mov
pop
(bad)
in
enter
int3
je
repnz
repnz
repnz
repnz
repnz
repnz
repz
je
jmp
call
rcl
mov
inc
inc
lock
mov
fld
rol
popa
iret
inc
mov
aam
mov
fadd
loop
mov
aam
mov
rol
push
rol
dec
iret
inc
mov
rol
inc
(bad)
cmp
dec
mov
push
inc
pop
inc
inc
inc
imul
mov
jno
inc
shl
pop
inc
inc
jnp
inc
ret
jge
inc
ret
inc
mov
push
(bad)
ds
jne
push
mov
popa
(bad)
jg
push
inc
mov
push
push
pop
dec
pop
(bad)
aas
ret
jo
cmp
mov
inc
shr
ret
jnp
inc
ret
jnp
inc
ret
inc
mov
imul
shl
mov
push
inc
inc
inc
popa
inc
push
dec
dec
inc
inc
mov
aas
mov
push
out
mov
push
inc
shr
mov
imul
mov
jnp
inc
ret
jle
inc
shr
jne
inc
lds
inc
jnp
inc
shl
shl
push
shl
push
shl
push
shl
push
shl
push
shr
inc
jns
inc
ret
jge
inc
shr
shr
ret
inc
ret
inc
shr
shr
mov
push
inc
mov
popa
inc
dec
lock
mov
or
add
add
push
mov
pop
inc
pop
inc
inc
inc
push
inc
mov
outs
inc
ins
inc
(bad)
inc
jne
inc
ret
inc
ret
inc
mov
ins
inc
push
cmp
xchg
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
(bad)
(bad)
cmp
mov
cmp
mov
cmp
mov
cmp
cmp
inc
ret
inc
ret
inc
shl
mov
je
inc
shl
mov
imul
mov
inc
push
inc
pop
inc
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
adc
add
imul
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
jae
(bad)
ds
(bad)
cmp
add
aas
jg
dec
push
dec
pop
dec
sbb
dec
movs
pop
dec
sbb
dec
test
add
cmp
(bad)
ds
(bad)
cmp
add
cmp
add
cmp
add
cmp
(bad)
cmp
(bad)
cmp
cmp
cmp
inc
add
add
imul
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
jae
(bad)
ds
(bad)
cmp
add
aas
jg
dec
push
dec
pop
dec
sbb
dec
movs
pop
dec
sbb
dec
test
add
cmp
(bad)
ds
(bad)
cmp
add
cmp
add
cmp
add
cmp
(bad)
cmp
(bad)
cmp
cmp
cmp
inc
add
add
outs
add
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
add
cmp
(bad)
cmp
jle
(bad)
ds
(bad)
aas
add
dec
cmps
sbb
dec
sbb
dec
sbb
(bad)
aas
jg
(bad)
ds
(bad)
ds
(bad)
cmp
jl
(bad)
ds
(bad)
cmp
(bad)
cmp
jae
(bad)
cmp
(bad)
cmp
inc
add
add
jbe
(bad)
cmp
(bad)
cmp
add
cmp
jge
inc
add
aas
add
add
inc
xchg
(bad)
aas
add
inc
mov
dec
stos
and
dec
and
dec
test
dec
and
dec
stos
daa
inc
add
aas
test
inc
add
add
(bad)
aas
add
ds
(bad)
ds
(bad)
cmp
jbe
(bad)
cmp
inc
add
add
jnp
(bad)
ds
(bad)
aas
add
aas
add
inc
add
inc
mov
inc
add
inc
mov
inc
pop
dec
sub
dec
sub
dec
lods
sub
dec
lods
sub
dec
scas
inc
add
inc
mov
inc
add
inc
mov
inc
add
aas
add
inc
add
aas
add
cmp
jnp
inc
add
add
jle
(bad)
aas
jle
inc
add
inc
mov
inc
add
inc
mov
inc
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
or
dec
mov
dec
xor
dec
mov
dec
xor
dec
mov
dec
xor
inc
add
inc
xchg
add
inc
xchg
add
inc
mov
inc
inc
add
inc
mov
inc
add
aas
add
aas
jle
inc
add
add
add
inc
xchg
inc
add
inc
mov
inc
add
inc
xchg
add
inc
xchg
add
inc
or
inc
xchg
or
inc
call
dec
mov
dec
aaa
dec
cmp
dec
mov
dec
cmp
inc
pushf
adc
inc
xchg
or
inc
xchg
or
inc
xchg
or
inc
xchg
add
inc
inc
inc
add
inc
xchg
inc
add
inc
lea
inc
add
inc
xchg
add
inc
xchg
add
inc
xchg
or
inc
cdq
or
inc
cwde
or
inc
sahf
adc
dec
lahf
adc
inc
cdq
adc
inc
lahf
sbb
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
sbb
inc
pushf
adc
inc
popf
adc
dec
sahf
adc
inc
xchg
push
inc
or
inc
xchg
pop
inc
push
inc
add
inc
pop
inc
add
inc
xchg
add
inc
xchg
add
inc
nop
add
inc
xchg
or
inc
xchg
or
inc
adc
inc
xchg
adc
inc
call
inc
movs
and
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
inc
and
dec
lahf
sbb
inc
pushf
sbb
inc
fwait
pop
inc
adc
dec
lahf
adc
inc
or
inc
xchg
or
inc
pop
inc
inc
add
add
push
inc
push
inc
or
dec
push
inc
sbb
dec
movs
sbb
inc
pushf
sbb
inc
mov
and
inc
cmps
sub
inc
mov
push
inc
push
inc
pop
inc
push
dec
pop
inc
sub
dec
test
and
inc
mov
pop
inc
sbb
dec
movs
sbb
inc
xchg
adc
inc
cwde
ud0
or
inc
xchg
push
inc
add
add
or
dec
adc
inc
sahf
push
inc
dec
pop
inc
pop
dec
daa
dec
sub
inc
mov
xor
inc
pop
inc
pusha
inc
popa
inc
pusha
inc
popa
inc
xor
inc
mov
dec
sub
inc
lahf
and
dec
test
inc
sbb
inc
pushf
sbb
dec
mov
ud0
or
add
adc
inc
popf
adc
inc
mov
sbb
dec
test
dec
sub
dec
lods
sub
dec
xor
dec
mov
inc
arpl
inc
mov
imul
inc
mov
imul
dec
scas
xor
dec
mov
dec
xor
dec
lods
sub
dec
stos
sub
dec
stos
daa
inc
sbb
inc
sbb
inc
popf
adc
inc
pushf
pop
inc
pop
dec
pop
inc
and
inc
movs
inc
inc
sub
dec
mov
dec
cmp
inc
stos
xor
inc
mov
inc
inc
ins
inc
jb
inc
shl
shl
ret
inc
scas
inc
inc
aaa
dec
cmp
dec
sub
inc
movs
sub
inc
movs
sub
inc
movs
and
dec
test
sbb
inc
pushf
pop
inc
add
add
sbb
dec
and
dec
scas
sub
inc
movs
dec
xor
dec
lods
xor
dec
mov
inc
dec
inc
inc
dec
inc
outs
inc
je
inc
les
inc
ret
jl
inc
les
inc
ret
js
inc
scas
dec
dec
inc
dec
dec
dec
inc
dec
cmp
dec
mov
inc
sub
dec
mov
dec
daa
dec
and
dec
movs
sbb
add
sbb
inc
fwait
sbb
dec
stos
and
dec
dec
inc
xor
dec
dec
inc
dec
inc
push
inc
inc
jnp
inc
lds
inc
cmp
les
inc
mov
inc
dec
inc
dec
dec
inc
inc
cmp
dec
mov
xor
dec
test
sub
inc
mov
sbb
inc
mov
inc
dec
sub
dec
mov
dec
dec
inc
inc
dec
inc
push
inc
pop
push
enter
retf
cmp
xor
(bad)
push
into
(bad)
push
int
push
retf
cmp
inc
leave
pop
inc
push
inc
dec
dec
inc
dec
dec
dec
xor
dec
mov
inc
inc
add
add
repnz
pop
bnd
pop
out
jmp
pop
bnd
in
jmp
icebp
jmp
adc
jmp
dec
add
call
push
pop
call
push
dec
cmp
(bad)
jnp
pop
push
jmp
jmp
push
out
cld
dec
cli
cld
(bad)
cmp
repz
popf
aam
aas
movs
inc
cli
cs
jmp
push
out
and
out
es
daa
push
jmp
jns
jmp
jae
jmp
(bad)
fdivr
mov
or
test
adc
stos
imul
call
dec
pop
dec
xor
inc
out
push
cld
(bad)
call
cld
(bad)
dec
cld
jmp
pusha
mov
add
add
add
add
jb
jmp
gs
es
daa
outs
loope
daa
jne
jmp
jnp
jmp
xchg
in
dec
push
or
mov
and
mov
jae
push
imul
xchg
push
or
mov
add
fsubr
jmp
jg
call
cld
(bad)
call
in
(bad)
jmp
push
add
sub
pop
xor
es
jmp
imul
jmp
jbe
jmp
and
and
sar
fs
cmc
(bad)
jp
aam
aad
or
ret
(bad)
mov
jb
jmp
pushw
jmp
ins
push
call
mov
(bad)
(bad)
fprem
(bad)
inc
out
jmp
repz
es
jmp
outs
out
jmp
imul
outs
out
sub
jmp
mov
call
lods
icebp
jmp
and
call
call
into
(bad)
fmul
adc
ret
test
(bad)
mov
js
(bad)
mov
je
jmp
div
call
icebp
(bad)
inc
add
add
mov
sbb
in
jmp
outs
out
es
jmp
call
call
and
jmp
jle
inc
leave
jmp
mov
loopne
add
rcr
dec
xchg
push
dec
mov
ret
test
(bad)
mov
xchg
pop
(bad)
std
(bad)
(bad)
jmp
(bad)
jmp
int
inc
add
add
ins
in
mov
dec
retf
jmp
je
jmp
out
jmp
outs
jmp
call
test
dec
mov
add
call
stos
add
fsubr
add
(bad)
lahf
pop
dec
cwde
or
rol
cli
div
dec
sti
(bad)
dec
mov
add
ss
and
outs
out
and
aam
pop
arpl
call
test
call
stos
repz
test
dec
stos
ret
mov
or
jecxz
sbb
jecxz
and
jecxz
sbb
loopne
or
aam
add
(bad)
mov
inc
mov
dec
ret
mov
(bad)
out
rcr
dec
add
dec
call
(bad)
idiv
repnz
push
mov
(bad)
fadd
or
jle
jno
adc
out
call
scas
push
mov
(bad)
jmp
(bad)
jmp
jmp
scas
sbb
fld
aaa
(bad)
mov
clc
stc
push
jmp
cmp
inc
(bad)
jg
add
dec
pushf
adc
aas
jle
(bad)
cmp
jmp
jle
dec
or
hlt
xlat
test
clc
shl
fsubr
and
repnz
push
jmp
mov
(bad)
jmp
mov
dec
(bad)
jmp
(bad)
call
cmps
sbb
aam
inc
push
imul
push
fist
xor
push
jne
inc
adc
add
pop
movs
inc
xchg
cmp
xor
dec
add
cs
add
sbb
(bad)
fsubr
cmp
iret
jp
in
mov
inc
(bad)
jmp
mov
push
(bad)
jmp
(bad)
jmp
ret
jbe
icebp
loopne
call
pushf
das
call
cmp
push
dec
add
xor
push
add
xor
add
dec
stos
cs
inc
movs
lds
cs
sub
fild
sub
fsubr
mov
aad
call
test
(bad)
cli
sar
cli
int
(bad)
cli
int
(bad)
cli
int
(bad)
cli
int3
je
cli
sar
cmc
les
fidiv
xor
mov
rol
xor
inc
pushf
xor
inc
mov
cs
mov
xor
inc
scas
xor
dec
mov
inc
inc
jne
dec
rcr
leave
mov
inc
shl
enter
shl
scas
push
call
call
call
call
call
call
call
call
jmp
push
inc
arpl
inc
(bad)
jge
inc
les
inc
enter
rcr
(bad)
jbe
inc
ret
inc
mov
inc
cld
aas
mov
dec
inc
arpl
inc
mov
arpl
inc
ret
inc
shl
mov
jnp
inc
shl
mov
call
int3
pushf
jmp
int3
call
shl
inc
popa
inc
jp
inc
mov
jo
inc
shr
mov
push
inc
pop
inc
dec
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
pop
loopne
add
rol
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
gs
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
inc
or
inc
lahf
adc
inc
or
cmp
(bad)
cmp
cmp
(bad)
cmp
(bad)
cmp
inc
add
add
add
add
jne
(bad)
aas
add
inc
add
inc
xchg
inc
adc
dec
mov
dec
das
inc
pop
inc
inc
add
inc
add
inc
test
(bad)
cmp
add
ds
inc
add
inc
pop
inc
add
inc
nop
add
inc
test
dec
dec
inc
inc
pop
inc
inc
add
inc
xchg
add
inc
test
inc
add
add
add
add
add
inc
xchg
add
inc
adc
dec
aaa
inc
push
inc
pop
inc
cmp
inc
popf
sbb
inc
pushf
sbb
inc
mov
push
inc
add
inc
xchg
or
inc
pushf
adc
dec
movs
and
inc
movs
and
inc
cmps
and
inc
mov
inc
inc
outs
inc
dec
inc
sub
dec
stos
sub
inc
test
sbb
inc
xchg
adc
inc
cwde
adc
dec
stos
and
inc
movs
daa
dec
xor
dec
mov
inc
push
inc
jnp
inc
enter
mov
inc
dec
aas
dec
das
dec
sub
inc
add
add
add
add
les
(bad)
les
(bad)
les
(bad)
les
(bad)
les
(bad)
les
(bad)
les
inc
add
add
add
add
sar
daa
pop
loopne
es
jmp
cmp
jp
pop
jmp
push
add
inc
sbb
std
inc
xchg
add
add
add
gs
daa
pop
loope
es
loope
daa
jns
call
mov
test
mov
je
jmp
push
or
mov
call
idiv
call
lods
into
inc
add
add
add
add
ret
addr16
es
loope
daa
and
sbb
ins
jmp
push
xor
(bad)
mov
pop
or
mov
xchg
call
int3
in
sub
ja
push
fcos
sbb
xor
adc
sbb
mov
push
call
mov
push
dec
mov
call
idiv
call
leave
jmp
add
add
js
adc
(bad)
out
cmp
jne
push
(bad)
cmp
ret
jmp
push
jmp
stos
adc
in
and
fisubr
inc
mov
out
push
mov
add
mov
fwait
jecxz
mov
dec
xchg
inc
movs
das
(bad)
jmp
inc
(bad)
in
mov
xor
jmp
fdivr
xlat
add
inc
in
(bad)
jno
in
enter
ret
gs
out
les
lock
push
std
in
leave
jno
fbstp
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
(bad)
inc
add
add
add
inc
inc
add
add
and
sub
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
loope
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
xor
mov
add
add
add
add
add
sub
add
add
add
aas
add
add
add
add
add
add
add
aam
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
dec
add
jp
imul
popa
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jb
add
outs
add
add
sub
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
xor
add
add
xor
adc
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
add
push
add
add
data16
add
xor
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
dec
add
jp
imul
popa
add
add
sbb
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
aaa
add
push
add
add
data16
add
js
add
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
inc
add
jb
add
outs
add
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
xor
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
in
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
jae
ins
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
outs
popa
ins
gs
cs
js
gs
and
je
jo
cmp
xor
and
ds
jae
jb
jo
imul
imul
sub
popa
arpl
and
arpl
jbe
and
cs
cmp
fs
jb
jo
imul
fs
outs
fs
arpl
or
jo
outs
fs
je
jae
gs
bound
or
jae
ins
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
gs
outs
fs
je
jae
gs
bound
or
gs
outs
fs
arpl
or
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
arpl
imul
gs
gs
gs
jb
jbe
ins
gs
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
gs
gs
gs
jb
jbe
ins
gs
or
arpl
imul
je
jne
je
outs
outs
ds
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
jo
imul
ds
jo
outs
jb
gs
push
and
cmp
xor
popa
xor
sub
sub
sub
sub
xor
popa
cmp
and
ds
jo
outs
jb
gs
push
and
cmp
ss
arpl
ss
sub
sub
sub
data16
cmp
das
ds
jo
outs
jb
gs
push
and
cmp
xor
cmp
sub
sub
sub
sub
xor
xor
ss
jge
das
ds
jo
outs
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
jo
outs
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
jo
ins
imul
ds
outs
ins
jo
je
bound
imul
jo
ins
imul
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
cmp
imul
gs
imul
cmp
jo
inc
ja
jb
and
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outs
ja
push
gs
imul
jb
gs
fs
inc
ja
jb
ds
imul
gs
imul
cmp
popa
jo
ins
imul
ds
jae
gs
bound
or
add
add
or
add
cmp
add
inc
cwde
add
push
cwde
add
bound
add
sbb
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
data16
add
cmp
inc
dec
outs
jae
popa
ins
ins
inc
and
inc
sub
imul
jp
ins
ins
popa
and
jb
outs
js
or
outs
push
jb
addr16
ins
cmp
jne
sub
cs
and
cmp
inc
dec
outs
jae
popa
ins
ins
inc
outs
fs
and
jp
scas
daa
sbb
add
pushf
loopne
dec
sub
add
add
add
add
add
push
pop
add
xchg
mov
pop
imul
add
xchg
add
inc
out
jl
cmc
mov
js
retf
shr
jnp
fstp
push
jecxz
push
xchg
dec
scas
std
and
cmp
call
jmp
push
call
xor
add
add
repz
pop
ret
cmps
sbb
xchg
loop
fs
adc
out
push
sbb
sub
cmp
outs
jge
mov
imul
push
mov
lods
ror
sub
mov
cmps
out
sbb
add
jns
and
mov
and
pop
daa
adc
cmps
dec
pop
add
imul
std
xor
int3
mov
vmulss
(bad)
leavew
and
lahf
mov
mov
ss
sbb
jne
add
sbb
cmps
jnp
pop
out
mov
fs
dec
ins
daa
sub
cmps
push
retf
inc
shl
xchg
cmp
mov
inc
mov
dec
js
and
inc
jecxz
xor
cmps
mov
xchg
inc
and
loope
pop
adc
cli
aad
fdiv
sahf
jb
mov
or
sbb
das
imul
rcl
les
scas
inc
je
arpl
adc
push
dec
adc
push
push
adc
and
jne
loopne
pop
mov
ins
clc
sbb
mov
pop
rcr
das
adc
(bad)
xchg
inc
(bad)
cmp
scas
jl
dec
adc
popa
test
arpl
mov
mov
mov
inc
mul
inc
pop
les
ds
add
pop
ja
lahf
sub
push
ja
mov
out
mov
out
call
mov
dec
or
lods
lds
pushf
mov
pop
mov
mov
pop
std
adc
push
fs
add
repz
fcmovb
ficomp
sbb
jmp
mov
adc
sub
movs
pop
jmp
or
and
lds
cdq
xor
jns
neg
jl
jno
paddsw
setno
sbb
push
jp
and
retf
in
js
cmp
jne
lods
jp
repz
push
movs
fidiv
scas
lods
test
jmp
imul
scas
xchg
leave
mov
fild
icebp
sbb
and
pushf
jae
adc
xor
add
in
ror
jmp
xchg
push
shr
sbb
pop
scas
mov
mov
aad
pop
add
add
sub
nop
xor
cmps
mov
or
loope
loope
and
cdq
aaa
ja
out
jo
arpl
sub
std
loop
div
sub
les
shl
inc
aas
ja
push
stos
inc
pop
idiv
sahf
jbe
xchg
add
add
fwait
push
cmc
stos
cli
dec
(bad)
inc
mov
mov
mov
ret
add
aas
mov
sar
scas
scas
jge
and
cmp
xor
(bad)
mov
bound
sub
and
mov
cdq
xor
inc
lahf
aam
pushf
xor
fs
dec
enter
mov
shl
or
adc
adc
in
dec
or
xor
sbb
repz
lods
cmp
ss
fbstp
jns
mov
mov
jmp
inc
mov
pop
jl
mov
gs
lods
pop
cdq
cmp
dec
or
(bad)
retf
in
jl
push
mov
out
jo
fild
loope
sub
and
jo
jmp
imul
repz
fwait
and
xor
loop
xchg
repnz
(bad)
and
xor
scas
dec
(bad)
ret
or
ds
jns
inc
pop
xchg
(bad)
sti
aaa
dec
popa
push
aaa
lsl
stc
fmul
inc
mov
jge
push
and
and
loope
hlt
mov
dec
fld
inc
jge
out
push
movs
repnz
mov
shl
int
cli
mov
push
cmc
imul
and
cwde
xchg
cmp
mov
and
and
push
stc
cdq
es
mov
cmc
pop
enter
(bad)
(bad)
mov
mov
mov
fs
inc
shl
dec
fist
mov
fiadd
sub
in
sti
mov
icebp
repz
in
movs
cs
lds
call
xchg
les
inc
pop
xchg
push
addr16
leave
add
or
pop
mov
push
xchg
ret
sti
inc
scas
stc
retf
dec
(bad)
fisubr
mov
nop
cmp
adc
push
inc
fdiv
jae
mov
movs
push
rcr
add
les
dec
dec
outs
stos
leave
rcr
cli
sub
xchg
pop
outs
test
call
pop
adc
add
aaa
dec
jecxz
retf
jo
in
xchg
dec
adc
repnz
xor
loope
fwait
jo
out
xchg
test
and
popf
xor
cmp
adc
inc
enter
(bad)
or
outs
push
rcr
inc
or
add
aad
jno
xor
and
rcl
xchg
xchg
scas
jp
lds
enter
scas
sti
sub
int3
cwde
icebp
loope
pop
or
sub
jnp
add
cmp
aas
aam
retf
icebp
in
retf
outs
cmc
xor
out
sbb
cmp
fwait
push
pop
cmp
pusha
popf
xchg
je
dec
add
adc
or
or
out
mov
jb
bound
pop
(bad)
aaa
xchg
scas
into
push
inc
sbb
aas
add
aas
xor
xchg
int3
mov
and
(bad)
shl
adc
mov
or
xchg
jg
sub
jo
cmc
lods
push
pusha
add
in
out
pop
sub
out
loope
cmp
mov
push
ret
add
mov
or
inc
sbb
rol
push
fsub
mov
sbb
jl
and
ret
dec
inc
inc
mov
out
ror
or
cmp
push
xor
(bad)
aad
inc
rcl
out
addr16
test
cmps
sub
mov
add
mov
xor
xor
outs
out
xor
(bad)
icebp
lahf
jo
popa
jmp
jle
sbb
jb
jo
mov
jb
ret
jae
add
fst
pop
mov
cmp
cli
jl
jle
mov
out
fwait
pop
pop
mov
mov
out
jae
cdq
mov
(bad)
cwde
fidiv
pop
lea
or
jb
jecxz
dec
addr16
inc
pop
cli
push
pop
xchg
icebp
sub
add
jge
mov
cld
xchg
mov
lds
addr16
xchg
xchg
hlt
lods
mov
sbb
sbb
and
jne
mov
or
cmp
sbb
or
pop
pop
mov
fistp
mov
xchg
(bad)
mov
retf
lock
cmp
adc
mov
push
xchg
fadd
(bad)
mov
dec
xor
imul
repz
jmp
in
lea
call
sti
ins
ficomp
cmp
sub
test
icebp
hlt
arpl
adc
dec
clc
dec
dec
add
fstp
aas
inc
and
aaa
jo
adc
in
gs
out
sub
movs
(bad)
sub
faddp
dec
out
cmp
addr16
pop
push
out
jecxz
xchg
(bad)
retf
cmps
adc
sub
and
sahf
repz
jg
scas
int3
xor
inc
lock
aas
pusha
mov
cmc
aaa
jecxz
xlat
jmp
iret
mov
pop
inc
ret
or
mov
cmc
ret
xchg
es
fisub
inc
and
sti
sahf
les
cmp
pop
jns
and
retf
in
fnsave
cmp
or
mov
mov
or
fneni(8087
jae
push
inc
mov
push
(bad)
pop
and
aas
adc
push
dec
movs
sbb
sub
push
aad
and
int3
mov
out
pop
jle
enter
loop
sbb
imul
jl
stos
sbb
popf
ja
xchg
test
and
sbb
xor
ss
dec
dec
into
loop
ins
inc
mov
pop
retf
and
mov
jmp
mov
inc
scas
imul
or
mov
push
aam
cld
imul
(bad)
add
cs
pushf
or
out
stos
jmp
inc
in
pushf
inc
cmc
or
nop
xchg
jbe
mov
and
mov
lods
sahf
jo
jns
fbstp
ret
retf
or
pop
(bad)
sti
pop
jmp
int
call
or
mov
cmp
fmul
ja
mov
rol
call
adc
lods
clc
xlat
ret
jle
adc
mov
pop
scas
inc
mov
and
xchg
jbe
and
push
inc
xor
pop
or
and
jge
jge
hlt
mov
shl
adc
hlt
jle
mov
out
je
or
outs
paddb
mov
xchg
push
mov
stos
aaa
xor
rcr
mov
mov
cmc
call
dec
fst
pushf
xor
push
(bad)
aaa
mov
in
jle
stos
cwde
loope
ret
xor
fnstenv
inc
dec
popf
test
lods
sti
ds
adc
aad
inc
in
add
nop
out
sti
adc
cmc
pop
cmp
and
imul
repnz
mov
sub
xchg
adc
test
in
ret
xchg
test
js
xchg
lahf
mov
xor
ins
or
mov
mov
gs
clc
pop
stc
and
loopne
sbb
and
cmp
push
cmp
dec
movs
imul
push
aad
in
mov
lods
test
mov
pusha
cwde
es
iret
mov
jb
adc
dec
xor
mov
(bad)
cmp
mov
adc
inc
mov
dec
dec
in
stos
or
jg
lahf
mov
stos
xor
fwait
arpl
fwait
adc
mov
cld
sub
stos
test
daa
ja
push
or
push
xor
fld
jb
and
cmp
xchg
push
lods
pop
jb
push
lods
int3
lods
and
in
mov
test
jmp
and
cmps
shr
(bad)
and
arpl
push
dec
add
mov
add
mov
loopne
cmp
xor
and
out
add
pop
popa
push
out
xor
js
sub
fwait
and
mov
push
push
add
addr16
xor
push
scas
push
sbb
xor
nop
mov
cmp
hlt
popa
test
(bad)
mov
loopne
mov
mov
pop
xor
int
cmps
fnsave
mov
adc
and
cdq
push
fisub
sub
push
xlat
ds
and
push
in
pushf
sub
add
push
jmp
arpl
loopne
sub
out
(bad)
fcom
mov
and
or
adc
popf
rcr
xor
(bad)
cwde
imul
cli
xchg
push
and
jns
in
in
ins
push
cmps
shl
aad
test
test
in
jl
stc
lahf
cmp
pop
(bad)
fmul
ins
sbb
out
pop
jecxz
jnp
stos
jnp
cmc
dec
adc
or
jp
sbb
fcomp
cmp
adc
call
xchg
in
xor
out
and
add
jne
mov
mov
retf
push
mov
mov
frstor
sub
movs
call
div
jne
mov
jae
sar
dec
iret
rcl
imul
xor
pop
push
test
in
ins
xor
cdq
push
dec
cmp
enter
aad
and
ins
cmp
int
jnp
fisub
outs
pop
and
adc
stos
addr16
jge
outs
pop
ds
lods
jmp
push
add
jl
jge
pop
jle
mov
mov
int
(bad)
fdivrp
xchg
stos
xchg
ins
adc
xchg
mov
js
jmp
adc
jno
inc
lods
sbb
scas
inc
(bad)
hlt
cmp
clc
into
cmc
jnp
pushf
(bad)
aaa
dec
dec
xchg
cmp
jae
inc
mov
ins
mov
mov
(bad)
or
inc
dec
mov
(bad)
mul
fdivr
movs
mov
or
out
stos
das
xchg
pop
sbb
dec
jbe
mov
loope
test
push
scas
neg
(bad)
cmc
mov
repz
sbb
dec
mov
call
lar
xchg
pop
mov
sahf
nop
jae
mov
outs
je
jbe
jne
data16
sub
adc
sti
ins
pop
add
test
fsubrp
(bad)
adc
sub
mov
pop
data16
xchg
dec
sub
dec
loop
(bad)
(bad)
cmps
pushf
fadd
mov
mul
popa
mov
(bad)
pop
jl
aam
xor
popf
sub
add
ins
iret
sar
shl
add
push
ss
movs
cli
add
cmps
ss
repnz
sbb
test
into
mov
cdq
je
xchg
push
and
jp
enter
mov
pop
mov
mov
fsub
cmp
xchg
mov
xchg
sbb
aaa
xchg
push
xor
fmul
int3
inc
aaa
test
lea
add
ins
call
out
enter
clc
jmp
out
push
in
in
je
mov
fdiv
mov
mov
test
pop
inc
and
mov
mov
test
adc
add
cmp
inc
dec
stos
jne
ins
sbb
aaa
mov
and
test
das
imul
mov
pop
sub
jno
sbb
loop
xchg
xor
dec
shl
mov
retf
push
cmp
(bad)
or
fcmove
push
or
xchg
in
aam
cmp
popa
movs
mov
sbb
fimul
cmps
xor
jle
sbb
ret
mov
clc
push
xchg
fstp
push
iret
dec
xor
and
cmp
ret
out
xor
pop
cmp
lock
popf
push
out
fldcw
ror
into
mov
stos
imul
jb
out
movs
(bad)
addr16
pop
out
sbb
das
or
das
mov
inc
std
push
adc
push
and
add
push
test
test
cmc
push
mov
icebp
push
xchg
mov
sti
sti
arpl
lods
test
outs
mov
mov
cmc
fwait
test
mov
xor
mov
ja
jmp
xor
push
mov
push
mov
add
sbb
aas
(bad)
xor
inc
in
push
adc
(bad)
sar
(bad)
push
ins
push
in
xchg
jmp
cld
int3
jle
mov
fsub
leave
and
pop
lock
push
aaa
sar
push
xchg
daa
hlt
outs
cmp
push
mov
add
xchg
cmp
cmp
cmp
jmp
(bad)
addr16
or
adc
and
pop
cmp
enter
jecxz
bound
js
mov
test
add
pop
and
fyl2xp1
int
frstor
mov
bound
cmp
cmps
outs
adc
jnp
inc
push
mov
rcr
adc
mov
mov
ror
enter
inc
fild
push
cmp
aad
jle
push
clc
pop
stc
lea
mov
mov
mov
jne
or
pop
jge
retf
sub
mov
or
(bad)
and
int3
sub
add
cmp
sbb
pushf
lods
cmp
imul
test
cmp
clc
or
mov
ds
sar
pushf
je
pop
mov
mov
mov
inc
pop
sti
sahf
add
sub
jg
xchg
frstor
mov
or
dec
mov
cmp
push
(bad)
sbb
sub
jmp
bound
(bad)
cld
inc
dec
or
(bad)
call
mov
and
or
mov
ret
hlt
cmp
jne
and
add
cmp
xor
inc
scas
fisub
mov
adc
cs
xor
js
or
fidiv
std
in
rep
mov
sub
push
adc
cdq
add
mov
aam
jns
jae
inc
and
pushf
das
in
in
xor
push
mov
shr
lods
into
xlat
cmc
pop
xor
sub
stos
adc
add
sbb
lea
inc
xor
fild
cmp
hlt
popf
sbb
jl
scas
sub
fstp
xor
adc
xadd
and
mov
jmp
call
sar
sbb
jmp
outs
pop
mov
retf
mov
inc
gs
xor
call
test
mov
out
dec
shl
and
mov
add
mov
cli
mov
sub
adc
les
jg
pop
push
div
jo
or
mov
jge
and
push
sub
enter
inc
faddp
cdq
pop
fbld
pop
ss
retf
pop
enter
and
fild
dec
push
mov
(bad)
loope
inc
cmp
ins
sar
add
xchg
loopne
je
scas
lock
push
cmp
mul
dec
push
push
cld
in
jl
je
js
jmp
test
imul
mov
out
pop
jne
adc
push
sbb
push
fs
xchg
adc
lea
mov
mov
jnp
sbb
cwde
xchg
scas
pop
mov
push
ret
fdiv
pop
sub
mov
or
cmp
add
mov
aam
cdq
or
test
out
outs
popf
and
add
pop
sub
aad
lahf
dec
add
mov
lods
aad
mov
call
xchg
fstp
and
iret
addr16
jmp
cmp
jl
call
mov
ret
into
(bad)
and
fisubr
xchg
outs
aam
inc
call
jg
and
and
das
sub
cmp
arpl
iret
in
inc
in
jp
pop
add
lds
or
movs
sub
cwde
out
push
ret
mov
(bad)
xor
push
xchg
movs
ror
dec
fcomip
int
outs
call
adc
or
(bad)
ins
inc
inc
out
or
push
ret
iret
(bad)
ffree
adc
mov
jbe
loopne
sbb
in
fwait
push
retf
cmp
or
lds
jbe
popf
lahf
loopne
xchg
dec
fsub
mov
xchg
sub
int3
mov
mov
mov
out
and
cwde
push
pusha
int3
cwde
outs
jge
clc
sub
fnstsw
jns
mov
loopne
inc
jecxz
jle
jecxz
xor
mov
sub
push
js
aaa
inc
in
adc
jmp
mov
adc
xor
dec
adc
aaa
lods
jecxz
test
jno
pop
cld
dec
js
sub
xchg
lods
mov
cmp
xchg
cmp
out
dec
xchg
add
push
in
(bad)
jo
mov
mov
sahf
sub
ins
xor
jmp
mov
jb
lahf
mov
xchg
lods
aad
cmp
sbb
icebp
pop
(bad)
jmp
ret
jae
shl
jno
int3
fwait
pop
fild
push
movs
mov
je
movs
sub
jecxz
je
xor
outs
call
xchg
add
push
test
inc
xchg
clc
into
adc
mov
out
arpl
jae
cmc
add
sbb
and
in
sub
push
nop
shl
dec
into
mov
ja
add
or
add
jle
(bad)
push
inc
data16
fadd
and
mov
dec
data16
cwde
arpl
imul
mov
xchg
xor
mov
test
ss
iret
rcpps
and
or
add
xchg
jo
mov
mov
inc
adc
jl
arpl
int
iret
int
mov
daa
jecxz
mov
mov
lods
or
and
clc
ins
repnz
aad
inc
out
jo
(bad)
push
sub
sub
sub
not
dec
ins
fisubr
sti
cmp
(bad)
imul
add
scas
sar
sub
test
cli
xor
das
xor
stc
(bad)
dec
mov
iret
xchg
ja
mov
push
jl
pop
fcmovnb
(bad)
div
and
ins
jmp
mov
add
loope
outs
imul
in
lock
mov
mov
cli
push
in
test
or
and
mov
mov
push
and
aad
push
jg
dec
jo
retf
loop
loope
call
shr
(bad)
(bad)
mov
jo
icebp
cmps
ss
(bad)
ins
jne
sbb
lahf
inc
push
and
scas
sub
push
cs
js
test
out
add
push
or
not
test
arpl
mov
and
fdivr
or
jg
bound
outs
mov
mov
inc
pop
dec
call
mov
icebp
pushw
ins
mov
jne
inc
mov
(bad)
dec
inc
push
mov
jle
dec
adc
(bad)
in
xchg
aam
leave
inc
or
dec
xchg
xchg
mov
test
mov
sbb
pop
(bad)
pushf
loopne
xchg
hlt
sar
pop
sahf
pop
xor
dec
ret
ins
mov
movs
cmp
or
popa
gs
mov
js
dec
aad
hlt
jl
xchg
dec
movs
inc
push
jnp
push
mov
xchg
mov
loope
test
nop
loop
inc
pop
es
stos
dec
sahf
ss
mov
test
cmp
cmp
scas
add
fucomp
cmp
add
ret
and
(bad)
cmp
jmp
int3
cmp
jl
sbb
xor
fimul
je
ret
icebp
cli
les
push
cmp
push
jns
xchg
lods
cmp
(bad)
xchg
lahf
call
cs
dec
push
leave
sbb
jg
std
lahf
push
push
sub
mov
pop
in
sub
mov
cmp
cdq
rcr
popf
and
and
sbb
in
ror
pop
inc
(bad)
and
jae
clc
pusha
imul
mov
cld
inc
aad
pop
cmp
lahf
mov
xchg
push
push
sub
mov
inc
popf
sbb
aas
inc
jnp
jle
add
stos
mov
mov
out
loop
sbb
cmp
leave
mov
in
cwde
data16
cmp
jle
mov
shl
mov
inc
push
repnz
dec
aad
ficomp
jae
fidivr
cmp
(bad)
cmovb
movs
mov
sbb
les
mov
sub
aaa
into
add
pop
leave
gs
iret
popa
or
sbb
icebp
aad
jno
je
jae
cwde
ja
cmp
jmp
and
mov
je
jg
mov
xchg
rol
out
dec
nop
inc
out
or
xchg
jne
and
fdivrp
mov
and
je
mov
xor
jbe
inc
inc
js
icebp
repz
cmps
scas
adc
mov
pop
cdq
out
(bad)
ror
sub
xor
out
mov
and
out
out
out
les
mov
pop
aaa
mov
dec
mov
cmp
leave
aaa
fmul
es
dec
add
add
shr
daa
lahf
inc
pop
jae
and
jne
dec
sub
outs
std
mov
sub
ror
sbb
loop
mov
xor
adc
lds
jg
sbb
in
sub
jge
mov
mov
adc
jns
mov
xchg
push
lods
sbb
pop
push
jbe
add
stos
cs
push
cld
jge
push
jns
adc
xchg
test
push
push
scas
aam
lods
retf
call
push
mov
lds
and
lahf
aad
sub
fsub
mov
inc
push
xor
cmp
dec
cmps
repz
or
xor
loop
and
ss
movs
xor
add
xor
jmp
and
add
sbb
ret
mov
inc
div
repz
mov
sub
aas
add
dec
cmp
add
mov
push
movs
jne
jae
xor
inc
inc
aaa
fimul
mov
mov
dec
cmp
jp
clc
lods
xor
jmp
sub
pushf
sti
or
mov
add
ss
sub
pop
stos
jae
sub
mov
pop
pop
inc
jmp
inc
cmp
lock
sbb
mov
jmp
xchg
cmp
scas
daa
push
int
mov
jne
xchg
pop
or
scas
push
loopne
test
ds
out
adc
fst
push
scas
ds
xor
inc
adc
dec
jne
fsub
cs
nop
cmp
mov
loope
sbb
fdiv
dec
xchg
daa
cs
mov
jge
ins
dec
push
movs
inc
lods
adc
test
jb
lds
retf
fwait
je
movs
add
(bad)
std
jo
jnp
loop
aad
mov
or
pop
lods
fsub
cmp
(bad)
inc
cmp
inc
mov
pop
jl
mov
mov
cs
jle
dec
or
xchg
inc
inc
out
add
jmp
enter
daa
cs
lock
mov
dec
jbe
pop
xor
or
js
or
xor
mov
sar
ret
sar
ins
xchg
add
mov
jle
cmc
pop
dec
dec
sbb
in
push
cli
inc
nop
pop
sbb
pop
and
je
mov
cld
adc
mov
jmp
xchg
or
adc
inc
or
loopne
xchg
popf
jne
push
jmp
test
push
in
push
mov
add
inc
enter
das
inc
adc
xchg
mov
mov
imul
lea
add
cwde
loopne
add
arpl
push
jbe
mov
dec
add
sti
xor
call
add
and
aad
movs
inc
std
dec
inc
add
sub
push
int
pushf
in
loopne
movs
dec
std
mov
repnz
adc
and
mov
xchg
daa
(bad)
mov
les
cmps
fld
sysret
or
outs
dec
fsubr
repz
and
dec
int3
jno
test
sub
shl
jl
mov
push
push
xchg
(bad)
sbb
jmp
nop
or
or
xor
in
dec
jle
test
cmp
mov
jge
add
inc
xchg
ret
aaa
out
mov
stos
pop
(bad)
dec
aam
cs
ins
adc
ss
(bad)
in
mov
dec
not
xchg
adc
or
shl
rol
adc
loope
push
adc
in
call
(bad)
rcl
pop
rcr
jbe
daa
add
jl
pop
add
inc
fmul
jmp
daa
or
mov
dec
arpl
ja
mov
cwde
leave
mov
add
test
or
shr
mov
mov
xchg
or
(bad)
fsub
cmp
bound
or
push
xor
lods
and
test
ret
rol
daa
dec
int3
cwde
out
dec
jl
out
aad
mov
(bad)
sbb
sahf
dec
xchg
ret
(bad)
retf
add
mov
hlt
fnstcw
dec
and
add
test
loope
push
inc
inc
mov
jnp
add
movs
inc
dec
cmp
mov
daa
push
aaa
jae
into
jnp
retf
loopne
rcl
pop
sub
xor
aad
test
out
mov
dec
push
lds
mov
xor
js
inc
ja
mov
retf
mov
test
cwde
and
pop
int3
popf
push
inc
jb
mov
clc
ja
inc
ficom
mov
inc
push
xchg
jae
cmp
js
and
xor
stos
or
idiv
imul
daa
jg
inc
fsubr
add
jg
ret
popa
jmp
push
popa
inc
adc
push
test
das
shl
in
(bad)
mov
jnp
push
mov
xchg
in
(bad)
dec
mov
inc
mov
cmp
lea
into
mov
lds
les
lods
sub
and
xor
and
cmp
call
push
mov
add
in
pusha
jb
mov
enter
jg
adc
inc
les
stos
out
push
push
adc
int3
xchg
cmp
jne
jno
and
dec
icebp
push
(bad)
sub
lahf
mov
test
push
adc
mov
and
jns
ret
jp
test
and
cmp
ret
dec
mov
or
xor
(bad)
aas
adc
inc
mov
sbb
mov
shl
test
clc
jl
ins
mov
pop
adc
jne
lods
daa
bound
je
out
cld
popa
push
xor
jmp
test
pop
sahf
call
out
dec
int
pop
or
loope
adc
mov
dec
add
lods
das
hlt
xchg
ja
ror
test
psubb
cmp
cmp
push
dec
inc
push
mov
(bad)
cmps
inc
scas
shl
retf
imul
loopne
bound
adc
mov
and
cli
inc
xchg
(bad)
jae
into
mov
cmp
sti
sti
mov
xchg
cmp
in
enter
ffreep
xchg
and
cmp
push
add
(bad)
jl
xchg
add
popa
dec
and
das
cmps
xor
adc
dec
aas
adc
push
mov
pop
mov
inc
push
sub
retf
mov
(bad)
out
sbb
mov
pop
fild
jno
sbb
push
sbb
cmps
mov
in
jl
push
outs
adc
inc
and
int3
and
jp
gs
jmp
movs
out
push
in
cmp
and
pop
or
mov
(bad)
nop
add
pop
loope
add
push
xor
outs
xchg
leave
imul
call
sar
and
mov
adc
in
in
sub
jo
xor
lar
ja
xchg
ja
gs
movd
sbb
les
out
push
data16
jmp
pop
clc
mov
dec
cmp
jmp
adc
hlt
adc
mov
push
enter
or
stos
jo
mov
cmp
test
iret
les
cmp
and
or
mov
mov
sbb
xor
ins
mov
inc
pop
lods
inc
inc
cmp
imul
mov
out
std
mov
lds
jecxz
out
pop
push
cmp
fcmovb
stos
dec
xor
ret
pop
bound
cdq
enter
dec
ror
ret
xor
(bad)
lods
repz
xor
mov
jb
test
rol
adc
push
ins
inc
popa
jo
jmp
fwait
call
imul
sbb
pusha
mov
jge
push
mov
scas
cdq
jae
(bad)
outs
das
mov
scas
sbb
sub
mov
fnsave
out
and
mov
sbb
add
jmp
pop
pop
mov
xchg
and
popf
cmp
and
call
shl
push
lods
push
mov
pop
rcl
mov
adc
icebp
cdq
ins
or
inc
xor
out
test
ds
sub
dec
mov
dec
jne
lods
pop
fucompp
lahf
mov
dec
mov
mov
add
out
arpl
push
(bad)
in
(bad)
shr
adc
jne
pop
cmp
pop
sahf
cmp
sub
mov
push
xor
in
icebp
jmp
inc
sub
scas
jne
inc
add
cmp
fldenv
mov
(bad)
add
push
fsub
shl
fidiv
sbb
dec
xor
cmp
pop
addr16
aas
xchg
mov
pop
pusha
retf
pop
mov
retf
push
fwait
rol
into
and
fwait
cmp
sub
pop
inc
pop
pop
nop
ret
sub
(bad)
pop
ja
add
mov
(bad)
cmps
or
test
in
adc
mov
shl
inc
mov
mov
mov
loopne
xchg
push
movs
outs
inc
loope
loope
movs
repnz
sub
ffree
sbb
push
push
mov
xor
or
adc
int3
neg
gs
dec
gs
sub
cmp
mov
push
call
fdivr
mov
fiadd
xor
cmps
mov
gs
fcmove
ret
test
bound
nop
inc
push
and
cmc
push
xor
sbb
dec
and
aad
dec
mov
mov
(bad)
ds
mov
(bad)
pusha
cld
ja
das
mov
jge
xor
jl
add
sub
aam
xor
fldenv
sbb
fisub
dec
fbstp
int3
popa
addr16
loope
xor
int
sbb
jo
data16
std
mov
enter
into
push
inc
sahf
ins
or
fldcw
mov
mov
std
xor
cmp
pop
xchg
push
in
mov
sub
movs
(bad)
and
jmp
inc
cmps
sbb
ds
adc
scas
jecxz
xor
in
adc
xchg
mov
in
mov
cmc
sbb
push
mov
push
push
or
es
mov
or
add
push
cmps
fcomp
call
int
mov
adc
inc
mov
adc
sar
mov
sbb
das
scas
and
mov
cmps
int
cmovno
sub
sub
adc
xchg
out
adc
ins
mov
in
enter
dec
push
inc
test
inc
sahf
adc
push
out
pop
push
dec
lahf
push
inc
dec
xor
cmc
dec
loope
inc
sahf
sub
(bad)
out
inc
pop
sbb
xor
inc
mov
int
sbb
mul
ins
cdq
sub
hlt
addr16
add
or
mov
into
stos
aam
aaa
ins
inc
(bad)
mov
push
mov
(bad)
dec
jns
cmc
sbb
fild
sbb
shl
cmp
sub
loope
cmps
imul
dec
push
jns
or
mov
sahf
aam
shl
outs
push
pop
xor
stos
lods
mov
movs
dec
fnstsw
pop
pop
fs
and
aaa
data16
adc
pushf
push
call
popf
xchg
inc
and
sahf
fstp
lods
nop
in
cld
mov
inc
mov
leave
inc
aas
fs
rcr
aad
(bad)
push
mov
xchg
add
lds
push
js
push
xchg
mov
xor
call
scas
adc
xor
cs
push
loopne
dec
inc
sahf
mov
scas
dec
or
add
aam
mov
ja
xor
and
jl
rep
pop
and
lods
cld
retf
xchg
lea
cmp
pop
mov
mov
push
repz
push
int
scas
sub
adc
mov
imul
sbb
lds
test
test
push
repnz
inc
dec
or
out
mov
mov
inc
frstor
or
jp
mov
pop
dec
push
xor
push
(bad)
and
push
mov
stos
push
xor
push
and
in
mov
jmp
mov
shr
xor
jno
xor
(bad)
mov
das
out
xor
mov
cs
inc
xchg
mov
scas
test
and
les
test
add
iret
mov
cmp
dec
cmc
push
push
sti
repz
movs
cli
out
test
cmps
jbe
(bad)
jl
pop
out
movs
(bad)
hlt
dec
adc
ins
fisubr
lea
cmps
lods
rcl
add
hlt
fwait
out
sbb
adc
adc
pusha
dec
dec
push
mul
xor
sbb
scas
inc
paddq
adc
cwde
add
pop
dec
pop
adc
fldcw
push
push
aas
icebp
lahf
call
mov
mov
loope
into
push
push
pushf
je
aam
mov
mov
push
push
aas
lds
adc
shl
pop
cwde
push
mov
enter
mov
jmp
ret
aam
idiv
xchg
out
jle
std
xchg
xor
adc
aaa
adc
call
jecxz
add
push
enter
(bad)
adc
inc
jecxz
scas
je
in
and
je
mov
xor
xor
and
xor
add
(bad)
es
adc
inc
xchg
inc
mov
sbb
sub
or
fwait
retf
inc
jge
push
loope
cmc
imul
add
repz
pop
cmp
sub
loope
mov
jnp
pop
js
dec
mov
xor
push
leave
enter
mov
leave
enter
test
xchg
dec
push
arpl
push
es
repz
cli
cmp
ins
ror
dec
rcl
inc
adc
jg
jnp
inc
xchg
and
ins
xor
sbb
inc
repz
cdq
ds
or
mov
hlt
push
push
xor
add
xchg
mov
dec
fdiv
sbb
mov
sbb
push
mov
test
mov
pop
mov
push
divps
and
xchg
jae
xor
adc
enter
fmul
inc
sub
stos
call
enter
retf
pop
nop
xor
xchg
ret
adc
mov
or
mov
or
adc
sub
loopne
not
mov
nop
pop
push
mov
loop
sub
stc
or
xor
rol
add
popf
pop
outs
pop
xchg
stc
test
adc
nop
cmp
inc
sub
xor
scas
xchg
inc
adc
outs
add
repnz
jb
add
je
inc
adc
repnz
ret
xor
jo
or
rol
jle
dec
es
sbb
jp
jmp
cmp
pop
sub
jp
mov
out
ret
pop
imul
mov
out
mov
das
ins
push
xchg
loope
adc
mov
xor
inc
dec
lods
scas
push
jbe
and
mov
lock
push
push
xchg
inc
push
fucom
jle
in
adc
cwde
sub
pop
movs
enter
push
fcomp
repz
mov
xor
or
sub
mov
adc
jbe
or
xchg
or
in
sbb
add
push
and
pop
out
xor
dec
scas
or
fisttp
and
mov
pop
ret
jl
ja
or
ds
out
lods
mov
add
fsubr
test
data16
ins
int3
and
retf
xchg
xor
ins
or
retf
cmp
and
sub
mov
xchg
out
sub
or
xlat
fmul
xor
add
imul
mov
xor
pop
mov
jns
sbb
and
out
imul
test
adc
and
enter
pop
add
bsf
ins
inc
dec
stos
lds
inc
inc
xor
push
out
add
loopne
loope
xchg
and
dec
jo
mov
mov
mov
sahf
sbb
inc
scas
xlat
ret
lods
es
out
loop
mov
loopne
xchg
fcomip
mov
retf
or
push
jbe
add
aad
add
jmp
mov
mov
movs
iret
mov
aaa
inc
xlat
xor
add
xchg
sub
loop
mov
mov
or
jmp
scas
cmc
aas
int3
adc
sub
(bad)
add
mov
jecxz
sbb
push
cmp
ret
dec
retf
in
es
push
ret
mul
data16
not
and
(bad)
dec
loop
sahf
inc
aam
xor
xchg
jl
pop
jmp
aad
lds
sub
dec
scas
arpl
ds
xchg
ret
(bad)
out
jbe
retf
add
bound
push
call
push
sub
(bad)
and
inc
mov
das
sub
inc
dec
(bad)
xlat
call
stos
cmps
mov
dec
out
in
iret
push
cmp
outs
jg
push
neg
loopne
mov
neg
lock
in
not
fcomp
dec
mov
add
mov
xor
mov
dec
popa
xor
(bad)
and
push
push
popa
imul
push
and
int
lods
jb
(bad)
in
fnstcw
(bad)
xchg
cmp
jmp
cld
in
sub
and
jl
into
xor
jnp
addr16
and
mov
pop
(bad)
pop
cmp
ret
stos
add
jmp
inc
mov
das
mov
mov
nop
pop
or
dec
push
xor
pop
mov
addr16
test
cld
out
hlt
pop
mov
add
popf
pusha
in
mov
lock
aam
pushf
xchg
leave
fcomp
stc
adc
sbb
xchg
pop
(bad)
sbb
cli
mov
daa
pop
shr
xor
sub
jg
fnstsw
push
out
mov
je
pop
mov
mov
xchg
pop
dec
js
aaa
out
mov
jo
jmp
stos
xchg
mov
cmp
dec
mov
xor
repz
cmc
pop
xchg
xor
ds
lea
scas
xor
int
(bad)
cmp
xchg
inc
out
test
jg
xor
popa
lds
pushf
aad
test
push
mov
sysret
loop
std
pop
push
mov
or
or
add
jae
jbe
(bad)
inc
jmp
push
retf
retf
mov
adc
or
xor
inc
arpl
adc
xor
sub
ins
leave
and
out
xor
jp
sar
scas
adc
outs
in
inc
sbb
out
cmp
cmp
and
call
mov
(bad)
fbld
adc
inc
pop
cmp
add
sar
clc
and
into
jmp
cmp
push
gs
sbb
fmul
push
xchg
lds
in
in
sub
(bad)
mov
(bad)
repnz
test
or
and
inc
ins
mov
push
mov
adc
shr
(bad)
mov
inc
xor
push
jmp
and
pusha
into
outs
movs
cwde
mov
cmps
repz
fsub
xchg
mov
and
jns
mov
ror
sbb
xlat
call
int3
fnstenv
repz
pop
out
das
or
test
mov
(bad)
out
sti
div
adc
or
loope
mov
nop
dec
lea
jbe
fistp
jle
(bad)
pop
ret
jae
retf
dec
jecxz
mov
cld
dec
les
movs
mov
mov
cmp
mov
out
inc
and
ret
and
mov
xchg
inc
sar
adc
and
add
pop
repz
jp
sbb
(bad)
push
daa
test
cmp
out
int
out
cwde
pop
add
push
cld
sbb
push
adc
mov
sahf
out
popf
ror
retf
push
stc
adc
movs
adc
mov
xor
cdq
jecxz
jp
dec
mov
sbb
jl
inc
stos
mov
xor
xor
out
stc
inc
inc
inc
popf
push
xlat
pop
mov
rol
jns
pushf
cmp
int3
xor
push
mov
inc
lods
loop
cmc
and
xor
retf
inc
mov
out
fidiv
add
movs
fs
or
clc
out
pop
cmp
lds
call
test
jmp
outs
inc
jmp
popf
ja
ret
dec
mov
mov
cmp
imul
dec
out
pop
jp
(bad)
and
mov
(bad)
(bad)
xchg
xor
in
mov
sbb
inc
mov
inc
mov
imul
das
xor
jne
sub
xchg
jnp
cdq
jge
(bad)
mov
and
sahf
out
mov
imul
add
xor
push
test
xchg
jmp
sub
icebp
add
fwait
arpl
add
adc
adc
xchg
dec
stc
lahf
bound
cs
jnp
pop
adc
mov
lahf
xor
jns
mov
push
bound
fstp
add
add
(bad)
sub
mov
sub
sub
fsubrp
clc
add
enter
ds
in
cmps
push
mov
inc
mov
mov
into
aam
int3
inc
mov
xchg
lods
arpl
aas
mov
mov
add
jb
fstp
lea
adc
mov
pop
sub
sub
mov
dec
pop
sub
fcmovnbe
pop
data16
stc
jp
mov
out
vpxor
or
in
dec
or
(bad)
js
mov
mov
(bad)
in
mov
lds
loope
loope
aas
adc
shl
in
lds
adc
leave
push
mov
push
cmc
cmp
loopne
test
cmps
(bad)
cmp
pop
mov
daa
jne
push
jp
ror
ja
jl
push
push
or
dec
add
fadd
movs
lds
inc
(bad)
gs
xchg
push
clc
rol
dec
imul
leave
mov
jne
sub
xor
repz
(bad)
aam
push
mov
(bad)
fldenv
cdq
sbb
out
lods
dec
rcl
test
pop
jg
mov
cmp
mov
inc
sbb
sub
std
add
out
dec
mov
xor
jbe
scas
pop
dec
adc
call
push
jae
outs
ret
push
push
fimul
stc
mov
cmp
pop
sub
inc
mov
out
mov
test
cdq
cmps
mov
and
fs
jmp
inc
dec
mov
es
cmp
push
aas
jmp
pop
inc
add
add
mov
cmp
dec
aas
mov
movntq
or
fcmovnu
jb
inc
lea
sbb
loop
jecxz
fstp
into
out
cdq
hlt
popa
call
loop
gs
rol
scas
cdq
mov
iret
into
sub
dec
pop
in
or
mov
retf
cld
fnstsw
inc
add
outs
sub
mov
int3
dec
rol
(bad)
fsubr
mov
cmp
sbb
icebp
or
or
cwde
or
adc
aam
xchg
iret
sar
(bad)
repnz
mov
(bad)
cmp
cli
ficomp
and
iret
movs
ror
pop
or
cmp
or
inc
pop
sbb
cmps
mov
test
or
mov
push
daa
push
in
xor
test
or
and
arpl
push
xchg
push
cs
push
jne
or
cdq
xor
or
(bad)
movs
push
push
loop
push
loop
push
loopne
cld
out
sub
pushf
inc
pop
mov
ja
mov
(bad)
js
cdq
inc
jb
xchg
dec
lods
out
dec
rcl
sahf
cld
and
int
js
sub
data16
push
sar
xor
lahf
push
mov
adc
dec
fucompp
jnp
outs
push
pop
xchg
cdq
push
clc
cs
lea
jmp
push
mov
mov
loopne
jmp
std
sub
mov
mov
and
mov
push
mov
mov
mov
nop
ins
sbb
pop
pop
adc
lahf
mov
pop
push
adc
jmp
idiv
cs
sbb
mov
push
inc
push
in
push
fimul
(bad)
enter
fchs
cmp
nop
shl
jae
pop
shl
jb
shr
or
pop
out
out
int3
xchg
call
xchg
cmp
inc
pushf
jmp
inc
mov
test
out
int
pop
xchg
mov
adc
inc
repz
in
mov
dec
test
fcomp
(bad)
mov
and
ds
dec
mov
jl
push
jge
add
outs
push
inc
into
fstp
mov
or
lock
movntq
push
(bad)
enter
dec
sub
mov
cmp
cwde
mov
in
dec
pop
push
mov
das
inc
(bad)
sbb
and
jge
jne
mov
cmp
xor
fwait
ret
and
mov
call
pop
sbb
xchg
cmps
cmps
push
cmp
lds
fisubr
mov
xor
and
aam
sbb
das
push
inc
aad
adc
outs
fucomp
push
fdivr
ret
pop
fwait
sar
sbb
bound
and
sbb
ret
add
ja
jge
mov
and
cmp
or
mov
mov
cwde
fbld
cmp
xor
test
jo
(bad)
aad
cmp
adc
call
and
lahf
aam
or
ret
outs
jb
add
into
pop
in
pusha
jmp
or
fnstenv
daa
sbb
fwait
aas
mov
add
mov
push
inc
inc
mov
outs
dec
pop
xchg
lods
push
push
int3
xor
(bad)
xchg
cmp
cmp
in
ins
arpl
jns
loopne
mov
push
mov
test
push
fimul
in
lds
scas
popa
mov
imul
add
ret
daa
leave
pop
mov
test
pop
mov
popa
dec
imul
fstp
push
push
xor
aad
out
jle
inc
xchg
gs
retf
cmp
push
cmps
scas
inc
out
aad
cmc
cmp
pop
dec
imul
cld
dec
jns
jg
jne
xor
and
sub
push
test
push
xor
out
ins
rep
jp
sub
sbb
sar
add
sbb
clc
xchg
sbb
test
xor
gs
(bad)
sub
pop
push
dec
jo
lea
push
cmc
sub
int
or
inc
inc
mov
jmp
dec
or
and
push
rcr
mov
imul
in
pop
out
popf
or
cmps
shl
xchg
std
push
retf
jg
mov
sbb
retf
aad
test
fld
pop
cmp
push
fcom
mov
sbb
repz
pop
rcr
imul
pop
inc
jo
mov
mov
les
pop
jns
jo
mov
lea
dec
or
sahf
jno
(bad)
cmp
enter
xor
cmp
cmp
icebp
push
aas
xor
pop
ins
fbstp
push
clc
gs
cwde
mov
fwait
iret
ror
jns
fldenv
loopne
sub
mov
loope
push
imul
mov
inc
aaa
fmul
kortestw
(bad)
out
(bad)
xlat
shl
mov
imul
adc
cmp
data16
and
add
cmp
sbb
lahf
cwde
add
xchg
dec
jae
out
jae
mov
mov
sub
and
mov
popa
sbb
push
jb
adc
hlt
pop
pop
add
loopne
xor
add
jp
outs
fstp
rcr
pop
jp
mov
push
or
jmp
jne
xor
pop
jge
add
sbb
jae
call
xchg
inc
cld
mov
add
pusha
mov
loop
ins
retf
adc
shl
daa
cmp
daa
push
das
aaa
jg
dec
pop
test
push
dec
and
shl
push
mov
mov
pop
jo
jne
in
mov
loope
pop
mov
inc
add
ins
ret
addr16
popf
inc
jo
mov
xlat
pop
mov
push
aaa
push
jp
and
cld
xchg
(bad)
sub
jp
mov
push
inc
jae
push
hlt
xor
push
jmp
mov
data16
loopne
adc
cli
stos
pop
sub
adc
ins
adc
fst
mov
sbb
loope
(bad)
jle
fisubr
and
das
aam
icebp
and
push
mov
popa
loopne
(bad)
cmp
and
neg
xchg
std
loop
lds
xchg
in
mov
pushf
xchg
cmc
bound
in
mov
nop
les
adc
mov
xchg
or
cmp
mov
inc
fidiv
pop
or
data16
fldcw
push
imul
lea
je
test
stos
dec
and
xor
scas
(bad)
das
adc
pop
xchg
or
jle
ret
xchg
mov
inc
push
retf
fsubr
jmp
ret
dec
adc
jns
nop
pop
fs
sbb
pop
xchg
xchg
push
add
pop
retf
mov
shl
mov
fstp
push
push
mov
in
inc
add
std
push
mov
add
fs
imul
repz
cmp
mov
retf
rcr
fild
cmps
push
push
scas
das
push
jmp
jle
jp
push
adc
mov
fs
retf
push
mov
mov
repz
fs
aam
sub
icebp
pop
push
ror
iret
(bad)
push
ficom
xchg
inc
add
inc
and
inc
pop
jmp
xchg
mov
push
loope
cdq
xor
data16
mov
add
jo
mov
popa
loopne
(bad)
imul
jle
inc
xchg
jb
retf
mov
mov
mov
ja
add
inc
pushf
ins
push
outs
ja
cmp
retf
inc
jb
push
arpl
ss
shl
js
pop
aad
fldln2
iret
stos
mov
cmp
aam
nop
in
out
dec
sub
and
int3
cmp
xchg
mov
add
adc
push
mov
xor
(bad)
xchg
xor
pop
jb
add
inc
(bad)
enter
push
into
xchg
in
fistp
sub
fbstp
adc
into
cmp
out
and
pusha
rol
out
shr
sbb
frstor
push
dec
ret
lods
outs
stc
lods
jne
ret
cs
sub
cdq
jns
fsqrt
fs
mov
dec
push
mov
call
push
daa
repz
mov
dec
inc
cmps
dec
das
scas
or
cmps
ds
mov
add
xor
xor
mov
retf
xchg
outs
outs
inc
adc
in
js
fadd
and
sub
loope
jnp
fdiv
popa
sub
leave
leave
inc
xchg
int
adc
add
add
enter
sub
push
jle
pop
xor
sahf
repz
push
inc
lds
sbb
sbb
stc
mov
pop
iret
or
mov
repz
sbb
add
int
jmp
dec
cmp
mov
mov
mov
dec
shl
push
(bad)
out
sub
xchg
leave
sar
xor
bound
sub
xor
mov
push
das
imul
cmp
jg
fs
cmp
lods
cmp
into
mov
ja
lods
add
test
fmul
repnz
push
push
fcomp
pop
ins
stos
test
and
jmp
rol
inc
int
inc
push
sbb
fnstcw
jns
gs
pop
and
sti
sub
and
mov
jmp
push
or
or
je
dec
cmc
gs
dec
xchg
cli
add
call
push
push
mov
rcl
inc
push
sub
fcmovne
jg
int
clc
leave
ins
pop
mov
xchg
and
movs
xchg
or
mov
pop
and
imul
pop
fsubr
cmps
mov
rol
pop
ins
or
xchg
add
repz
mov
push
adc
or
push
jg
ins
inc
mov
mov
nop
xchg
mov
mov
je
and
mov
lea
gs
push
daa
adc
mov
dec
cdq
jne
or
cwde
pop
cli
push
sub
cmp
enter
xor
xchg
(bad)
repz
mov
xor
iret
mov
xchg
mov
or
jmp
nop
mov
add
sub
sbb
sbb
ss
inc
mov
inc
adc
ja
imul
call
leave
adc
mov
mov
in
stos
repnz
mov
jb
test
mov
stc
(bad)
imul
icebp
jmp
mov
dec
sub
xlat
popa
push
push
pop
lock
out
ret
mov
inc
ja
(bad)
add
call
fsubr
imul
and
clc
dec
loope
dec
aas
mov
jp
in
imul
loope
call
adc
(bad)
test
cmps
je
sub
mov
sbb
out
test
out
gs
stos
sub
adc
sub
jle
jae
dec
leave
jecxz
jp
and
enter
jp
fwait
or
pop
cmp
inc
pop
or
movs
dec
ds
aam
jmp
aam
cmp
and
retf
jge
jl
cmp
movs
push
mov
test
repz
xchg
lock
out
shl
push
aam
mov
mov
js
sub
stos
cmc
mov
pop
pop
cmp
mov
pop
push
cli
(bad)
dec
dec
add
push
test
lea
pop
(bad)
shl
push
pop
test
scas
int
inc
jmpw
stos
adc
mov
sbb
(bad)
test
dec
push
xlat
imul
mov
lds
je
push
pop
add
js
cmp
out
imul
loopne
lahf
cld
and
jg
(bad)
xchg
mov
mov
fwait
mov
dec
jg
movs
aas
sbb
inc
sub
or
sti
jno
pop
ja
neg
test
cld
clc
data16
ins
pop
in
push
dec
(bad)
xchg
fisttp
mov
(bad)
sti
mov
sbb
jnp
(bad)
sub
mov
push
out
xchg
add
cmc
lods
pop
pop
retf
cmp
adc
jl
inc
and
add
and
fcmovnu
(bad)
int
or
push
std
fistp
mov
jl
push
and
int3
cmps
cli
iret
gs
push
imul
xchg
movs
fidivr
shr
out
iret
popa
shl
mov
pop
push
pop
aad
mov
lods
push
into
(bad)
pop
pushf
xor
jmp
sub
add
in
popa
ss
mov
sub
xor
push
xchg
jmp
popf
sub
pop
dec
push
and
xor
push
in
xchg
(bad)
jmp
jbe
jle
and
fimul
int3
push
hlt
xor
pop
ins
ins
scas
adc
or
sub
bound
or
outs
cmp
adc
out
adc
sbb
dec
imul
ins
in
mov
das
push
pop
jle
js
ds
jg
neg
xchg
inc
imul
out
pop
pop
in
adc
jmp
dec
add
cmp
sbb
ins
mov
mov
add
(bad)
aas
mov
enter
xor
lods
jbe
xchg
jnp
dec
aad
push
scas
into
mov
es
je
mov
pop
inc
std
rcr
jge
daa
aam
enter
jnp
fcmovu
and
xor
inc
mov
test
jmp
sub
call
mov
(bad)
test
add
push
push
fdivr
loope
(bad)
lahf
and
fs
outs
lods
into
xor
mov
xchg
outs
adc
jle
jecxz
xchg
mov
hlt
pusha
addr16
inc
ja
xor
rcr
pop
cld
iret
cmp
cld
jno
jo
in
addr16
or
xchg
jl
retf
pop
ret
div
dec
pop
int
adc
fsubr
retf
pusha
jmp
shl
inc
aad
sahf
push
ret
(bad)
mov
repnz
mov
jmp
mov
ret
idiv
(bad)
xlat
(bad)
stos
dec
and
cdq
jl
jmp
push
add
sbb
pushf
mov
outs
xchg
mov
(bad)
mov
or
inc
mov
dec
mov
cmp
cmp
cmp
add
sar
pushf
sbb
retf
lock
into
imul
jnp
pushf
in
aad
pop
xor
or
daa
mov
mov
mov
jnp
in
cld
xor
push
fisttp
xor
dec
leave
or
add
push
mov
je
pop
pop
sbb
or
xchg
movs
pop
jo
(bad)
push
xchg
into
cmc
sub
out
xchg
xor
cmp
fstp
ja
and
push
(bad)
mov
stos
dec
ins
imul
or
movs
mov
in
inc
mov
jle
adc
or
data16
and
push
push
inc
xchg
test
mov
fucomip
fisub
sbb
mov
pop
iret
cmp
into
stc
inc
xchg
sbb
add
pop
or
jle
jmp
gs
cmc
and
int
dec
test
mov
(bad)
push
retf
ror
push
cmp
lahf
cmp
inc
push
jg
jp
xor
sbb
mov
pop
mov
pop
popa
stos
mov
call
or
lds
add
in
in
xchg
mov
push
push
mov
mov
fnstcw
push
mov
dec
call
push
add
aaa
stos
xlat
js
or
and
shr
ins
cdq
iret
dec
xchg
or
sbb
(bad)
ss
in
clc
xor
pushf
mov
cs
in
loop
into
loope
jne
ret
mov
and
pop
ror
stos
(bad)
(bad)
fcmovbe
(bad)
call
repnz
aam
rol
sub
xchg
ja
test
call
and
jno
sub
and
push
pushf
or
push
out
fnsave
and
je
je
push
adc
inc
shl
inc
loope
mov
xor
movs
mov
scas
xchg
sbb
jge
mov
inc
out
jb
jbe
ins
pop
lods
mov
mov
dec
xor
aam
push
out
imul
(bad)
sar
imul
push
call
inc
dec
shl
imul
mov
push
test
push
mov
and
jbe
mov
rcl
out
shl
test
nop
dec
xor
cld
inc
mov
jns
push
xor
call
addr16
xchg
push
test
outs
xor
or
imul
pop
shl
popf
sub
leave
sub
ret
and
mov
mov
mov
hlt
jl
shr
dec
inc
push
scas
adc
cld
cmps
data16
cmp
outs
(bad)
aam
pop
push
and
adc
imul
push
test
stos
and
inc
sub
sub
dec
mov
or
jmp
retf
mov
inc
push
push
(bad)
mov
lods
test
stc
ins
xor
daa
shl
gs
aas
test
dec
call
ins
imul
inc
fwait
das
and
fidiv
out
imul
xor
mov
push
sub
sbb
or
test
xlat
pop
out
loopne
xchg
sub
cmp
loope
push
jg
pop
cdq
pusha
aaa
leave
cmp
fadd
dec
in
(bad)
repz
lods
iret
jbe
(bad)
fsub
push
sub
bound
inc
ins
mov
bound
inc
js
hlt
std
out
in
int
xchg
push
sub
xchg
call
sti
je
into
mov
cmp
loopne
es
test
and
adc
retf
aad
sahf
mov
jae
pop
jmp
hlt
shr
mov
clc
xor
add
sbb
mov
jp
jbe
inc
inc
jge
gs
leave
jecxz
pop
push
aad
mov
das
(bad)
dec
xchg
test
add
jle
lods
inc
xor
cmp
mov
push
stos
push
lahf
movs
je
xchg
dec
push
or
aam
dec
mov
pop
pop
pop
sbb
fcom
or
and
mov
call
or
leave
mov
lea
mov
rcl
mov
or
sub
sahf
pusha
add
add
dec
aas
adc
mov
data16
lods
mov
jbe
inc
shl
lods
cmp
iret
imul
(bad)
inc
adc
scas
ffree
cs
fnstcw
sub
retf
jle
jns
add
mov
mov
shl
mov
xchg
shl
add
and
cmp
and
arpl
(bad)
mov
imul
in
pop
mov
mov
or
add
jmp
nop
cmp
cld
adc
sbb
ins
xchg
imul
jbe
fldenv
pop
pop
(bad)
fild
adc
js
push
pop
mov
int3
inc
aaa
and
mov
push
gs
jg
call
dec
jnp
out
in
dec
add
shl
or
outs
sub
enter
fstp
or
sbb
(bad)
sub
shl
fild
lahf
cmc
cmc
arpl
push
lea
xchg
je
push
push
aam
mov
shl
adc
sbb
out
bnd
adc
and
xor
sbb
sar
cs
adc
cmps
fidivr
jo
popf
fnstcw
pop
sub
test
jge
shl
adc
je
outs
xor
(bad)
data16
mov
and
(bad)
loop
jbe
or
or
rcr
movs
and
pop
movs
add
das
sahf
mov
mov
(bad)
(bad)
ins
popa
shl
and
mov
xchg
dec
dec
xor
jne
xor
cmp
jg
or
or
rcr
aad
arpl
lods
ds
cmp
jg
sbb
cld
fcom
sbb
movs
(bad)
scas
cs
ins
mov
lea
aas
xor
jbe
add
dec
or
loope
or
cmps
out
mov
sub
xor
pop
js
add
int3
xor
pop
jg
inc
inc
sub
jb
sub
jns
pusha
mov
mov
sub
mov
scas
and
push
test
(bad)
in
mov
cmp
xchg
shl
push
mov
jp
xchg
cmps
(bad)
shl
cmc
icebp
enter
pop
xor
int
out
inc
cdq
sub
pop
mov
clc
stos
xor
int
dec
stc
test
push
repz
setp
mov
in
and
mov
sbb
xor
bound
sbb
cmps
jno
loop
sbb
mov
add
stos
ds
nop
push
jo
fsubr
ins
aad
dec
test
jg
pop
stos
push
ret
gs
movs
cs
aam
mov
lods
sbb
pop
daa
pusha
mov
push
lock
push
pop
shl
inc
pop
stos
rcl
loope
or
dec
das
pop
rcl
mov
bound
mov
jnp
mov
dec
xchg
jns
xchg
dec
out
mov
stos
das
out
push
cmp
pop
in
rol
outs
pop
inc
xor
sbb
cmps
loop
xor
push
movs
xor
jb
mov
xor
mov
sbb
leave
push
mov
aas
cmp
dec
sub
and
out
aaa
fiadd
(bad)
repnz
std
jb
xchg
repnz
(bad)
mov
retf
adc
mul
dec
adc
xor
ffreep
test
scas
clc
popa
cwde
lahf
xor
xor
loopne
inc
pop
cmps
aam
fld
and
movs
shl
mov
rcl
push
cmp
mov
outs
js
push
and
les
hlt
mov
addr16
xchg
sbb
movs
sbb
int
push
push
aam
cmp
cmp
ret
bound
(bad)
fistp
mov
cmps
rcl
aam
sub
ds
adc
sbb
sbb
push
xor
aad
dec
adc
mov
sbb
std
push
sti
dec
jbe
fld1
in
mov
dec
jge
xchg
les
jl
fiadd
push
js
movd
cmp
mov
inc
les
loopne
mov
scas
call
and
enter
add
ret
xchg
push
mov
test
hlt
pusha
jno
add
ins
mov
imul
mov
fcomp
aad
ss
sbb
les
popa
dec
(bad)
cmc
sbb
and
(bad)
mov
jp
sub
pop
popf
(bad)
call
mov
test
daa
xchg
or
movs
cwde
jno
popa
adc
popa
movs
repz
cmp
mov
test
jl
dec
or
jo
mov
ds
push
ds
and
loopne
aaa
cwde
ror
jecxz
mov
call
pop
cmp
adc
xor
popf
test
adc
inc
or
xchg
cmp
adc
adc
jl
dec
dec
fsubr
and
adc
mov
add
sub
sbb
mov
retf
lock
movs
cmc
retf
int3
adc
xchg
push
mov
ret
arpl
mov
mov
stos
iret
xchg
fwait
outs
jbe
gs
mov
push
popa
dec
lods
fld
cmp
inc
inc
xor
mov
(bad)
jmp
mov
leave
sbb
int
rol
lahf
sbb
adc
jae
jo
shl
mov
xchg
sub
jae
xor
cmp
cmp
sub
(bad)
pop
cs
jmp
test
addr16
ss
mov
xchg
and
adc
jo
sti
jno
mov
xchg
adc
push
mov
and
pop
iret
mov
xchg
aad
cwde
(bad)
in
or
push
movs
mov
test
test
mov
ss
push
xlat
jno
inc
jne
adc
cmp
cld
mov
test
inc
pop
xor
or
fmul
data16
sbb
sar
or
rcr
mov
fld
sti
out
call
into
loope
push
mov
jle
stos
lods
jnp
clc
iret
push
in
fidiv
xchg
push
lahf
cmc
adc
ds
push
scas
dec
fnstcw
in
aas
add
pop
ret
xlat
push
xor
ficom
xor
pop
jae
mov
pop
hlt
mov
mul
push
inc
xor
or
push
inc
adc
pushf
mov
jae
pop
jp
fidiv
push
imul
out
pop
movs
lds
into
(bad)
push
fs
add
lods
mov
loope
xchg
lock
sbb
xchg
cli
pop
sub
or
inc
or
pop
inc
or
aas
rcl
mov
daa
in
adc
stos
mov
rcr
icebp
fmul
dec
outs
loope
pop
pop
js
mov
icebp
(bad)
mov
push
retf
imul
add
sub
lods
imul
lahf
popf
out
leave
nop
in
or
mov
mov
movs
div
int3
shl
mov
daa
and
adc
mov
shr
mov
cmp
pop
lahf
std
in
xchg
push
cmps
mov
pop
mov
fisub
xor
dec
stc
ret
mov
jno
cmps
and
int
pop
int3
xchg
and
sub
test
enter
jmp
dec
adc
inc
mov
jge
push
xchg
pop
cs
add
shl
sbb
add
dec
mov
das
dec
mov
or
add
sub
push
and
movs
mov
movs
adc
aas
daa
into
mov
mov
js
push
fbstp
dec
xchg
mov
lods
sbb
call
mov
adc
and
or
sti
(bad)
retf
xchg
popf
mov
mov
je
adc
dec
dec
cmps
je
lock
push
(bad)
jo
in
jno
rcr
out
in
or
scas
xor
jo
push
jecxz
fstp
lea
push
xchg
add
adc
push
ins
(bad)
lods
adc
push
fisttp
clc
sbb
call
and
push
scas
fsub
pop
fisub
cmps
ins
jg
adc
push
mov
aas
daa
mov
repz
arpl
fisttp
mov
push
in
lock
enter
sbb
inc
mov
mov
push
lds
popf
fsubr
or
pop
leave
push
mov
pushaw
and
xchg
or
fs
ins
mov
mov
push
cmp
fdivr
jnp
mov
dec
aad
enter
cwde
pop
xchg
les
int3
xchg
pop
inc
adc
mov
stc
cmps
cmc
shl
add
inc
out
pop
ret
xor
(bad)
or
sub
icebp
and
lea
xchg
add
nop
mov
pop
mov
dec
sbb
pop
imul
int3
sub
push
mov
pop
into
xchg
add
push
setnp
(bad)
scas
fwait
mov
std
pop
and
mov
out
inc
loopne
imul
mov
clc
and
inc
sbb
call
push
mov
pop
add
dec
fdivr
mov
inc
or
jne
jae
sub
jbe
pop
sbb
in
xor
xchg
pop
mov
inc
sti
rcl
push
add
pop
mov
in
(bad)
sahf
mov
mov
lock
mov
pop
lahf
lea
jle
ret
lds
xor
and
and
mov
sbb
movs
sbb
shr
pop
inc
out
jno
sub
movs
inc
bound
push
lods
f2xm1
pop
cmp
sbb
fld
push
aas
inc
xor
out
mov
pop
jge
(bad)
fsubr
gs
xchg
cdq
jb
lods
xchg
sub
push
adc
test
cli
mov
and
push
add
xchg
aam
pop
and
xchg
daa
xor
addr16
test
lock
inc
pop
and
jbe
xchg
stos
ret
pop
mov
fistp
les
push
mov
iret
sub
fdivp
cdq
sub
inc
sub
retf
ss
or
mov
pop
xor
and
in
lock
inc
adc
dec
or
loope
dec
iret
jo
dec
arpl
dec
jbe
inc
clc
call
out
xchg
ja
test
cmc
cmp
cmp
cmp
cmp
cmp
push
jae
xor
icebp
jae
jnp
std
add
sti
or
adc
cwde
xchg
dec
xchg
dec
test
popa
in
div
cmp
fidiv
daa
mov
jbe
nop
cmp
sbb
pop
push
test
inc
add
cmps
inc
sub
scas
pop
add
cmp
xchg
pop
push
add
outs
adc
mov
sahf
in
(bad)
jg
adc
push
sub
lea
int3
ja
fst
adc
jmp
lahf
enter
je
mov
sub
sbb
inc
xor
push
cwde
ds
sbb
pop
xor
ss
add
mov
in
mov
pop
xor
fmulp
ret
pushf
push
test
jae
outs
push
mov
pop
jecxz
add
movs
or
repz
dec
movs
jae
mov
mov
in
xor
xchg
rcl
adc
add
mov
dec
push
mov
fcmovbe
mov
and
mov
bound
mov
pop
xchg
imul
sbb
inc
cmp
jmp
bound
dec
(bad)
lods
in
daa
movs
mov
in
clc
rcl
push
jmp
push
loope
lods
ficom
rcl
dec
sub
cli
pop
aas
gs
push
fwait
es
sub
in
jnp
push
rcl
loopne
imul
inc
mov
adc
inc
cmps
jge
or
and
sub
push
jno
lea
sub
out
mov
movs
ret
pusha
imul
lds
xor
ret
dec
push
rcr
jp
jge
nop
sub
push
div
fisttp
adc
iret
lods
je
repnz
mov
je
lock
sub
stc
out
xchg
sbb
(bad)
sbb
mov
aaa
xor
out
aaa
leave
xchg
mov
repnz
imul
call
(bad)
(bad)
xchg
jnp
and
and
fcmovne
sar
add
inc
jp
bound
pop
cdq
nop
loope
(bad)
push
jmp
push
mov
and
ins
add
sub
jp
and
sub
ss
sbb
leave
dec
jns
jns
nop
or
lahf
jl
mov
push
add
daa
mov
and
pop
call
xor
dec
mov
mov
adc
mov
ret
icebp
outs
mov
sar
inc
jb
mov
jp
scas
push
xor
aas
fimul
in
outs
shl
in
comiss
fwait
pop
psrad
jnp
pushf
sub
mov
fsubr
xor
mov
(bad)
daa
out
xlat
xchg
std
mov
sub
jg
xchg
ret
pop
test
mov
mov
lahf
(bad)
jg
mov
push
pusha
pop
xchg
rcl
jb
enter
lahf
sahf
je
jno
mov
push
shr
push
dec
(bad)
jle
inc
jmp
fbld
jecxz
sbb
(bad)
dec
jns
arpl
arpl
int
dec
ja
pop
pop
pusha
add
enter
pusha
jp
cwde
sbb
(bad)
in
rol
stos
adc
inc
mov
mov
mov
xchg
mov
ret
jmp
daa
push
mov
cmp
xchg
loop
push
push
pop
repnz
mov
inc
mov
add
mov
sbb
jno
out
mov
push
out
inc
sbb
sub
cmps
add
repnz
(bad)
or
fsub
lds
sti
mov
add
out
xor
sti
movs
inc
dec
and
dec
aad
loopne
inc
test
xor
push
scas
lock
xor
pop
push
retf
loope
data16
pusha
and
add
mov
pop
mov
sbb
cmp
mov
xchg
(bad)
sub
jo
cmp
daa
or
out
dec
ror
and
fstp
loop
(bad)
mov
sub
inc
in
or
add
fistp
rcl
adc
cmp
std
jp
hlt
fdivr
mov
es
in
in
push
cs
mov
rcr
add
mov
pop
or
dec
mov
cmp
jg
mov
mov
fldcw
mov
stc
or
xchg
mov
sub
fs
dec
pop
mov
sti
or
ins
leave
adc
mov
pop
fidiv
pusha
pop
int
jbe
jno
sti
rcl
jge
ret
cmp
fcomp
ss
xor
add
inc
sbb
and
sbb
xor
jns
test
jge
sbb
mov
mov
inc
int
sahf
mov
push
aaa
dec
cmp
fnstenv
into
dec
push
jl
ret
test
mov
and
cmp
popf
test
inc
jbe
push
je
xchg
mov
je
ret
fadd
push
jns
pusha
add
cmp
jnp
inc
bound
dec
(bad)
pushf
cmps
in
ins
add
jnp
and
arpl
pop
mov
dec
xchg
or
xchg
in
ins
imul
mov
pop
shl
adc
je
sbb
and
test
sbb
fdiv
loopne
push
jge
sbb
movs
add
xchg
dec
es
out
imul
je
sbb
mov
jecxz
or
(bad)
fisub
repz
mov
push
push
cmps
or
xchg
ret
rol
outs
loope
(bad)
xchg
in
xchg
call
aas
push
mov
jnp
xor
pop
arpl
dec
adc
add
mov
xor
xor
in
jbe
inc
xlat
jmp
fimul
add
pop
arpl
rol
mov
pusha
jne
mov
out
sub
sub
cmp
mov
jle
mov
push
dec
mov
inc
shr
ds
sbb
mov
loope
jb
std
xor
jecxz
add
bound
ins
inc
jle
gs
mov
mov
pop
in
cwde
sahf
jp
ss
imul
sbb
or
vmwrite
add
mov
adc
ror
out
jmp
aad
ss
mov
sbb
adc
outs
cmp
test
sub
int
arpl
repz
inc
int
inc
stos
mov
push
dec
xor
jmp
mov
outs
mov
test
popa
mov
or
cmp
out
ins
dec
int
adc
adc
lea
pop
dec
inc
or
popf
stc
dec
push
mov
js
lods
jne
and
cmc
stos
jb
cmp
and
xchg
das
add
pop
outs
mov
pop
and
jb
jmp
adc
ret
dec
xchg
gs
add
sar
ja
dec
je
push
fld
or
mov
mov
mov
lea
mov
sub
nop
idiv
lea
ins
push
pop
lds
adc
pop
adc
cs
push
mov
je
inc
push
mov
aas
cld
add
in
into
retf
sbb
pop
push
adc
cmp
idiv
pop
icebp
stos
xor
(bad)
int
cmp
mov
gs
xor
lds
lock
mov
jmp
bound
lahf
clc
ret
dec
sub
test
mov
sub
sub
js
mov
push
ins
dec
shr
fsub
and
cmps
mov
loop
fisub
test
sbb
das
ja
arpl
mov
dec
push
dec
enter
stos
sub
test
icebp
jmp
sbb
div
jmp
(bad)
cmps
int
cmp
push
cmps
cmp
pop
cdq
pop
aaa
cmp
jmp
jnp
hlt
mov
cmp
dec
into
cmp
mov
retf
cli
int
push
int
cmp
repnz
cmc
loope
int3
xchg
pusha
outs
mov
jmp
jle
fsub
inc
push
jnp
and
mov
or
aam
inc
call
sbb
cli
add
fsub
pop
add
rcl
aaa
mov
bts
mov
mov
(bad)
sbb
or
and
retf
and
addr16
cmp
xor
dec
dec
sbb
test
inc
or
jae
mov
sub
stc
mov
add
mov
sbb
dec
cmp
or
pop
xlat
and
je
icebp
and
push
int
push
mov
xchg
jmp
pop
mov
push
or
jecxz
push
adc
xor
in
out
pcmpeqw
xor
cmp
jmp
pop
pop
fwait
jo
imul
loopne
pop
mov
push
mov
adc
(bad)
loope
ret
movs
fs
cmp
jne
jo
loopne
dec
adc
iret
pop
and
mov
retf
int3
int
lahf
aad
test
test
and
call
mov
lock
pop
dec
xor
or
sahf
jecxz
xadd
stc
outs
mov
adc
sub
std
xchg
jbe
dec
add
ret
xchg
jge
sbb
adc
jmp
out
aam
mov
add
cmps
fnsave
fs
cmc
out
mov
push
test
ret
mov
loope
out
(bad)
push
lods
dec
fucomip
pop
test
fisttp
call
test
sub
pop
cmp
or
jns
sbb
sbb
push
sub
loope
pop
test
mov
mov
mov
in
mov
add
cmps
and
push
(bad)
(bad)
in
mov
imul
cmp
sbb
pop
fiadd
push
push
into
push
sti
dec
cdq
gs
inc
mov
lock
cli
outs
jl
mov
adc
loope
xor
imul
add
repz
inc
hlt
push
mov
adc
xlat
loope
sbb
mov
ret
lds
push
fadd
pushf
movs
mov
rol
in
sbb
test
inc
ss
pop
dec
sbb
gs
or
mov
push
mov
push
cmp
aaa
or
jnp
in
call
rcr
xchg
mov
jne
pop
jbe
mov
push
inc
or
jmp
aam
sbb
cmp
enter
and
xchg
push
mov
fsub
cmp
add
xor
lods
(bad)
outs
sbb
xchg
in
rcl
into
sub
xchg
inc
sbb
pop
es
and
out
dec
test
inc
or
call
test
ror
xchg
and
mov
or
jns
nop
push
mov
sbb
add
fstp
adc
jge
add
(bad)
popf
adc
adc
push
and
mov
push
imul
add
adc
dec
scas
adc
fimul
test
jmp
sbb
ret
sti
imul
jge
jle
repnz
push
cli
xchg
test
fld
fdiv
enter
adc
ror
sti
je
call
cmps
add
js
mov
xchg
scas
retf
add
adc
test
add
xchg
sub
xchg
xor
retf
outs
mov
mov
mov
cmp
jmp
or
sbb
dec
test
rcl
xchg
dec
sub
cli
call
and
cs
cmp
jge
loope
popa
push
mov
stos
retf
adc
jno
mov
(bad)
ja
adc
ins
movs
dec
mov
and
push
out
and
sbb
push
xlat
add
xchg
test
push
xor
movs
pop
pop
push
and
dec
pop
cmps
mov
cli
push
sub
add
pop
mov
mov
jmp
jge
je
ss
push
adc
mov
imul
mov
es
or
dec
or
mov
xchg
sbb
add
sahf
mov
pushf
mov
xchg
(bad)
out
loop
xchg
imul
jmp
aaa
and
imul
jmp
sub
jmp
in
or
retf
add
jmp
rcl
nop
aas
jne
popf
xchg
mov
mov
mov
into
jmp
int3
push
pop
imul
scas
fnstcw
hlt
cmp
daa
(bad)
mov
xor
mov
fdiv
jmp
lock
inc
xchg
bound
(bad)
mov
fadd
mov
mov
in
mov
cmp
jmp
mov
outs
cmp
ins
xchg
repnz
add
sub
add
outs
retf
fisttp
fidiv
jb
into
ret
das
aas
pop
add
pop
mov
sub
jns
sub
fdiv
iret
adc
push
hlt
retf
adc
mov
jge
test
(bad)
add
aas
lock
sar
mov
mov
jge
call
mov
scas
xor
mov
inc
xchg
mov
or
sahf
js
push
loopne
lods
arpl
and
pop
mov
sahf
mov
mov
push
adc
pop
cmc
imul
lock
add
int
inc
push
mov
shr
cmps
pop
ret
lahf
shl
je
call
icebp
mov
mov
loop
in
jp
ss
sbb
and
push
mov
mov
lods
jae
dec
sbb
pop
mov
fisubr
pushf
ins
fldcw
cmp
imul
push
or
shr
jne
jmp
lock
cmp
push
sbb
ret
pop
xchg
push
call
sub
or
mov
adc
xchg
push
call
add
xor
call
dec
xchg
lods
inc
jo
jne
push
add
pop
pop
(bad)
mov
fwait
ror
outs
and
jbe
jg
xor
cmp
rol
jmp
push
push
and
inc
mov
push
inc
aam
movs
cmp
and
test
inc
mov
push
add
sub
jmp
pop
mov
cdq
mov
test
cmp
imul
adc
arpl
mov
(bad)
mov
inc
(bad)
pop
dec
in
jl
out
sub
cmps
inc
popa
sbb
cmp
inc
sbb
ret
xchg
cmp
mov
jmp
jmp
sub
push
add
xor
xlat
dec
jns
push
add
xchg
popf
jl
test
jns
mov
jle
ins
jge
sub
ds
mov
xor
fnstsw
repnz
jno
scas
mov
xchg
mov
add
lea
sub
icebp
ja
push
and
adc
add
fwait
cmp
adc
push
add
mov
mov
cmp
call
push
mov
call
mov
fild
push
aaa
mov
arpl
pop
retf
xlat
lahf
popa
sahf
retf
mov
mov
ret
test
sbb
add
mov
mov
or
pop
xlat
cli
inc
or
jno
fmul
and
xlat
call
jnp
and
mov
nop
inc
js
ins
dec
pop
rol
ins
lods
ficomp
idiv
sub
mov
push
fnsave
addr16
call
dec
push
enter
mov
fdiv
xchg
inc
or
sahf
xlat
sbb
xchg
or
imul
call
ret
and
jp
pushf
aam
cwde
add
popa
int
sbb
pop
xlat
repz
push
test
jnp
fild
push
pop
les
or
jne
push
shl
sbb
aam
push
sbb
sub
jb
pop
sub
and
sub
cmps
leave
or
sbb
add
pop
sbb
xchg
mov
sub
das
push
and
test
cs
fstp
mov
inc
jmp
cmp
arpl
mov
test
xor
inc
popf
pop
xor
xor
stc
xlat
add
push
repz
imul
sbb
inc
rcr
fsub
mov
add
loop
sbb
es
test
push
inc
fiadd
loop
mov
jmp
adc
mov
inc
loope
fadd
test
shl
sbb
pusha
pop
sub
cmp
out
addr16
mov
icebp
or
stc
mul
jle
test
add
ins
(bad)
xor
xrstors
daa
dec
stos
xchg
idiv
rol
dec
out
mov
scas
mov
in
push
rcr
mov
mov
mov
int
sar
and
jle
retf
std
mov
dec
fsub
dec
fadd
sub
pcmpgtd
mov
je
xchg
loope
les
jge
aas
out
daa
mov
inc
mov
dec
jg
push
pop
xchg
fiadd
jbe
jecxz
mov
dec
sub
push
xor
in
cmps
fcom
or
add
hlt
mov
or
jg
or
dec
mov
shl
nop
inc
cs
test
test
xor
neg
mov
mov
jle
sbb
fs
ret
cmp
ror
popf
icebp
pop
mov
inc
shl
pop
mov
jmp
lods
xchg
pop
mov
jae
rol
mov
push
cmp
sub
sub
imul
lahf
shl
xchg
data16
or
push
test
out
movs
xor
cdq
jae
in
push
es
int3
mov
push
cmp
gs
fisubr
push
sahf
or
xchg
mov
fdiv
and
idiv
mov
dec
add
xor
js
test
inc
imul
push
in
xchg
into
mov
outs
shl
xor
adc
mov
rcr
mov
(bad)
lds
push
fiadd
jecxz
mov
add
shr
test
repnz
and
sbb
and
mov
cli
push
fadd
adc
frstor
xor
out
push
cmps
mov
jo
inc
ret
clc
and
adc
dec
add
popf
jae
cmp
add
sbb
into
in
cwde
jbe
cmp
xchg
lahf
add
popa
shr
push
jle
mov
mov
pushf
and
cmps
shr
inc
fsub
or
int3
dec
movs
cmp
xchg
pushf
int
xor
push
jmp
sbb
or
push
adc
and
imul
out
dec
mov
cli
stc
jo
outs
sar
jbe
or
cmps
xchg
gs
cmp
fwait
popa
add
ror
xchg
mov
daa
shl
into
fisubr
movs
and
jecxz
jge
inc
scas
add
outs
or
sub
push
jnp
pop
(bad)
mov
push
fiadd
mov
int3
sbb
outs
in
and
jae
and
sub
xchg
jmp
add
cmp
stos
pop
ror
aam
xor
pop
mov
movs
and
sub
call
xchg
outs
cli
sub
jp
xor
or
cmps
fcom
stos
fnsave
int3
xor
sbb
mov
mov
xchg
(bad)
mov
mov
xlat
mov
push
lock
out
out
outs
shr
and
stos
les
mov
xor
jmp
jle
js
jnp
rcl
call
xchg
cmp
sbb
inc
out
mov
sub
aad
pop
mov
xlat
mov
cmc
rcl
inc
cs
xor
push
clc
sti
mov
jbe
pop
inc
push
dec
jae
arpl
adc
adc
(bad)
fcomp
mov
aad
jecxz
xor
jns
dec
pop
es
add
inc
pop
call
ds
addr16
and
sbb
mov
sub
call
retf
push
aaa
inc
xchg
mov
mov
je
push
shl
jne
sbb
or
test
(bad)
int3
mov
(bad)
std
or
out
mov
push
(bad)
lock
clc
sbb
sti
popf
jne
ficomp
xor
or
adc
mov
leave
scas
jge
data16
mov
inc
scas
neg
dec
addr16
xor
inc
push
(bad)
push
pop
not
daa
in
mov
pop
mov
push
cdq
mov
scas
jae
dec
mov
iret
xchg
lods
mov
addr16
push
mov
jae
ds
es
ror
pop
dec
cmp
cmp
sahf
cmp
das
xor
aam
mov
cwde
mov
data16
loop
cmps
xor
cs
dec
sahf
adc
les
fbld
das
scas
shl
movs
rol
mov
mov
shl
adc
in
inc
add
scas
repnz
sub
dec
pop
add
sbb
sub
sti
add
fs
and
xor
scas
fstp
xchg
mov
dec
dec
push
xchg
ds
adc
inc
jno
ret
retf
ins
std
dec
ret
call
push
popf
icebp
ret
or
dec
inc
adc
sbb
shrd
xor
push
add
sub
xor
loope
nop
mov
sbb
gs
push
fld
ins
adc
adc
mov
aaa
pop
dec
add
imul
sbb
getsec
fs
ds
loop
add
sbb
fistp
cmc
inc
jle
ins
jae
dec
cmc
mov
adc
jecxz
or
jbe
adc
xor
out
sbb
enter
sbb
push
inc
ja
push
fwait
pop
xchg
and
das
sbb
mov
fsubrp
mov
repnz
jge
adc
loop
aam
test
rol
pop
add
jae
add
daa
rcl
dec
jmp
nop
inc
xchg
and
inc
dec
dec
add
sti
fs
call
jmp
pusha
adc
sub
pop
add
jmp
mov
mov
daa
cmp
lea
mov
mov
pop
bound
imul
mov
add
push
std
enter
(bad)
jbe
call
fld
lods
add
test
stos
jae
push
mov
jne
int3
cmc
lods
(bad)
xchg
or
cdq
rcl
cdq
test
out
jmp
cwde
je
ins
lods
adc
fwait
or
pop
out
sbb
sbb
xlat
add
push
or
cmc
(bad)
mov
jbe
pop
pushf
or
pop
xor
sbb
imul
cwde
outs
xchg
pop
adc
out
pop
in
ins
mul
adc
ins
rcr
inc
stos
sub
sub
inc
and
mov
jbe
mov
call
lock
(bad)
iret
lds
jge
and
out
mov
inc
imul
add
scas
ins
leave
and
dec
jl
sahf
shl
xlat
mov
cmc
mov
jns
mul
mov
inc
cmc
arpl
aas
fist
loopne
dec
mov
test
xor
retf
xor
or
sub
(bad)
and
loope
aaa
out
fucomip
out
cmp
push
retf
retf
ror
ss
test
stos
jecxz
pop
pop
mov
gs
js
mov
xchg
xor
mov
jbe
pop
fcom
jae
mov
mov
lods
mov
stc
cmc
dec
(bad)
sahf
icebp
(bad)
out
neg
push
pop
sub
fcomp
add
(bad)
pop
inc
loope
inc
adc
enter
fs
mov
int
or
mov
mov
mov
mov
mov
xchg
js
test
les
ins
into
cli
ja
cmp
add
cmps
mov
xlat
adc
mov
in
push
out
pop
inc
test
jne
add
je
fstp
dec
fistp
ret
fmul
xor
adc
js
nop
pushf
fild
rol
fldlg2
and
mov
mov
(bad)
xlat
fstp
inc
add
inc
cmp
neg
and
add
push
mov
dec
push
fwait
xchg
rcl
mov
mov
ficom
lods
pop
jmp
mov
lock
or
cmc
inc
cwde
and
or
outs
imul
inc
call
inc
jl
icebp
jns
aad
lahf
lods
dec
test
sbb
daa
fmul
daa
add
xchg
xchg
aam
pop
lea
jl
push
push
cld
adc
(bad)
mov
add
mov
cld
adc
pop
xchg
mov
out
add
sbb
dec
sub
sbb
inc
ret
push
mov
ja
js
loopne
inc
pusha
outs
dec
push
sub
mov
push
and
sub
fcmovb
xor
inc
icebp
push
dec
repnz
loop
mov
js
addr16
jl
inc
bound
dec
leave
dec
pushf
sub
jnp
cli
test
dec
sbb
jb
add
push
shr
jmp
xchg
sti
movs
jge
addr16
adc
add
repnz
(bad)
stos
scas
int
dec
push
popa
retf
iret
je
and
imul
dec
js
ja
sbb
ret
or
aad
xlat
repnz
daa
sub
scas
mov
xor
or
int3
cdq
shr
xchg
lods
movs
test
jle
std
aam
sbb
inc
dec
pop
lahf
test
cmps
(bad)
call
jb
lods
jbe
sub
icebp
sbb
jae
sub
push
ret
mov
int
inc
ja
adc
mul
fldenv
je
add
mov
pusha
sub
or
je
or
es
dec
mov
lods
adc
(bad)
fistp
push
lock
pushf
inc
push
sbb
adc
adc
sub
out
push
push
sbb
inc
mov
pop
imul
adc
dec
jmp
or
les
out
(bad)
cmp
clc
push
out
clc
adc
xlat
les
add
fadd
ins
push
push
xor
dec
sub
mov
out
xlat
inc
mov
sub
jmp
mov
out
lea
jl
and
mov
mov
inc
(bad)
dec
je
cmp
shl
adc
mov
repnz
mov
gs
mov
add
(bad)
fmul
pop
xchg
pop
les
mov
pushf
mov
jecxz
mov
scas
jns
in
mov
adc
icebp
dec
mov
xchg
jle
push
xor
inc
jmp
hlt
add
dec
ss
push
pop
in
xlat
cwde
scas
lds
and
out
push
fild
mov
push
enter
sub
mov
aam
dec
add
scas
ja
leave
pop
outs
adc
add
sbb
clc
xchg
data16
out
pusha
gs
push
lods
sub
das
cmp
in
aaa
fs
js
lods
inc
movs
add
in
sbb
(bad)
scas
pop
fstp
jns
lea
sbb
inc
sub
out
loop
(bad)
hlt
pop
gs
(bad)
stc
jne
out
sbb
dec
int
scas
in
pop
xor
(bad)
fsubr
shr
fdivrp
clc
rol
inc
mov
push
jns
enter
nop
cmps
push
push
aas
in
mov
daa
and
imul
dec
adc
arpl
mov
and
mov
add
or
call
repz
cmps
icebp
or
jb
sbb
xor
xchg
cmp
jae
icebp
push
jmp
fs
es
inc
push
adc
outs
mov
mov
lock
sub
jp
push
shl
rcr
test
arpl
ss
mov
xor
in
out
stos
fimul
pusha
cmove
xor
adc
push
mov
rol
pop
cmc
aas
nop
mov
mov
dec
mov
and
add
call
fidiv
pop
push
ds
xchg
bswap
sub
sbb
shl
jbe
or
fstp
push
cmp
retf
push
jecxz
mov
mov
mov
imul
movs
call
add
in
add
rol
(bad)
(bad)
pop
div
rcr
jecxz
std
add
jl
adc
jmp
stos
fbld
push
sub
push
add
jle
or
pop
or
adc
jmp
xchg
daa
imul
pop
pop
and
mov
sti
loope
cwde
das
retf
mov
and
hlt
inc
mov
jle
iret
adc
ds
es
xor
or
loop
mov
mov
dec
and
mov
scas
sbb
dec
jnp
lea
call
ret
dec
stos
or
sub
repz
or
jne
in
lods
mov
call
pushf
ret
and
shr
pop
pop
sahf
jle
out
cmp
xor
scas
xor
cli
xchg
mov
js
dec
inc
jge
mov
mov
or
jl
push
arpl
mov
dec
aas
stos
rol
fisubr
xchg
mov
jmp
push
add
cmp
sbb
sahf
iret
in
mov
inc
sbb
mov
imul
mov
mov
push
sbb
lods
pop
mov
mov
inc
sti
aam
movs
fild
(bad)
imul
push
pop
jnp
inc
xchg
shl
xchg
mov
push
rcl
cmp
mov
repz
(bad)
cmp
imul
pop
mov
sub
dec
rol
ins
retf
add
add
ins
mov
push
or
xchg
xlat
push
or
loope
dec
ja
xchg
fs
test
lods
repnz
sbb
pop
fs
fcomp
mov
push
ror
jg
pop
stos
inc
(bad)
popa
dec
xchg
jl
fadd
mov
frstpm(287
dec
jg
out
pop
out
aad
inc
mov
fnsave
inc
adc
add
push
cli
sub
cwde
adc
push
or
mov
sub
adc
aas
arpl
mov
mov
add
retf
pop
imul
xor
aas
cs
shr
xchg
push
cs
cs
into
icebp
pop
fisubr
mov
lods
push
mov
sub
jne
fbld
pop
push
or
mov
dec
fsub
mov
push
mov
cmp
fwait
xchg
fld
rol
cmc
dec
push
lods
cmp
jae
pop
adc
ret
pop
fcomi
ficom
add
(bad)
sbb
add
pop
xchg
sub
ja
fcomp
sub
xor
inc
out
ret
bound
sub
push
aam
retf
cmp
dec
mov
cli
xor
adc
sbb
adc
push
test
or
push
push
xchg
add
sbb
fcom
adc
outs
inc
push
adc
mov
mov
inc
in
cmp
cmps
clc
or
loope
pusha
push
int
xor
popa
sub
das
cwde
shl
mov
mov
cmp
stos
loopne
leave
dec
(bad)
xor
test
cmc
xchg
std
sbb
mov
push
adc
jmp
push
fldl2e
je
repnz
cmps
mov
add
push
adc
lahf
ins
mov
scas
pushf
pop
mov
fsub
or
retf
or
fisttp
imul
jns
cld
loopne
mov
xor
sub
cmps
mov
shl
retf
ins
leave
cmc
mov
sub
iret
mov
and
dec
push
and
stos
setb
jne
pop
pop
sbb
lds
int3
or
pop
jmp
sbb
dec
mov
popa
shl
or
or
jg
mul
aam
stos
adc
loop
rcr
out
int
and
hlt
xor
mov
fscale
arpl
and
sbb
lock
fst
pop
add
nop
sub
cbw
ret
pushf
ins
sub
sbb
into
cmps
int3
movs
dec
jp
leave
popf
jl
pop
sub
lds
cmp
xchg
xor
in
das
adc
dec
pop
mov
lods
nop
cmps
std
fld
xlat
inc
ret
cdq
fcomp
lods
mov
mov
ja
call
fwait
cmp
in
cwde
adc
mov
push
push
mov
xor
add
test
xor
in
push
add
jg
cmp
lock
movs
ins
dec
enter
test
push
jbe
out
(bad)
mov
int
imul
arpl
mov
aad
lea
lods
es
push
std
and
dec
test
mov
out
xchg
mov
or
dec
inc
xor
jne
xchg
movs
test
out
jae
(bad)
fmul
jmp
xlat
shl
inc
aad
mov
mov
imul
test
pop
out
push
pop
stc
test
shl
jg
int
inc
popa
and
retf
outs
leave
pusha
aad
and
sub
repz
sub
call
cs
scas
pop
mov
cwde
out
(bad)
wbinvd
or
ins
xchg
dec
popa
ret
adc
jle
jne
fidivr
dec
inc
repz
cdq
pop
js
ins
neg
nop
in
jecxz
push
fild
and
jp
lock
sub
dec
xor
mov
inc
jb
pop
std
jae
mov
xcrypt-cfb
cmps
mov
sub
call
addr16
jno
jb
mov
cmp
enter
xor
xor
cmp
xchg
sbb
inc
aam
stos
gs
(bad)
add
popa
test
ja
jp
cld
pop
push
loop
xchg
mov
inc
push
xchg
pop
test
dec
xchg
push
arpl
(bad)
adc
xor
mov
mov
cs
push
mov
imul
in
adc
aad
mov
xchg
mov
popf
cdq
mov
pop
cmp
mov
stos
clc
cmp
xchg
int
inc
add
rol
xchg
sbb
jnp
sub
jne
cmp
cwde
xchg
mov
aaa
sub
add
fsub
lea
mov
ret
sbb
aaa
int
and
cmc
push
mov
sbb
xchg
mov
xchg
test
shr
or
mov
pop
sbb
adc
mov
pop
adc
xlat
imul
cli
mov
jg
mov
daa
data16
mul
xchg
lds
mov
das
add
adc
popa
gs
leave
cmp
pop
sbb
or
jno
mov
es
adc
or
imul
inc
arpl
pushf
adc
jg
inc
mov
xchg
clc
pop
xor
aaa
mov
enter
and
pop
arpl
clc
sub
pusha
and
test
icebp
rcl
sbb
sbb
ret
(bad)
xchg
mov
pop
outs
sbb
ror
cs
or
les
dec
out
dec
mov
dec
into
adc
fs
rol
outs
imul
xlat
sub
push
not
add
push
mov
and
sub
sbb
js
xchg
dec
adc
mov
jne
retf
aas
jnp
arpl
test
fsubr
mov
mov
(bad)
cmps
jbe
jae
mov
outs
fsubr
inc
adc
mov
and
push
popa
das
(bad)
pop
daa
jne
mov
adc
cmps
mov
lods
sub
adc
mov
dec
xchg
cmps
adc
imul
cwde
jp
mov
or
cmp
stos
dec
je
loop
mov
sbb
cld
shl
or
enter
sbb
sbb
xchg
gs
and
sub
mov
out
out
nop
shl
sbb
mov
imul
sub
xchg
fcmovb
fist
mov
mov
or
stc
in
or
and
repz
cmp
mov
call
lahf
pop
mov
ins
push
aam
or
pushf
cmps
mov
ss
xchg
fwait
ja
mov
pop
out
nop
je
rol
add
icebp
push
cmps
shl
jge
(bad)
jle
xlat
psllq
pop
xchg
dec
test
aam
retf
iret
mov
pop
pop
pop
aad
ja
out
adc
push
jns
js
data16
fidivr
out
out
mov
push
hlt
add
addr16
jle
cmps
ins
push
mov
movs
push
jns
mov
dec
cmp
xchg
push
ja
mov
movs
sahf
pop
inc
jns
arpl
cmp
inc
push
cmp
(bad)
xor
sbb
stos
xchg
add
adc
lods
push
inc
jmp
inc
outs
mov
jno
and
jmp
inc
dec
mov
jne
popa
fist
pop
sti
dec
push
adc
adc
mov
sub
mov
sub
xor
push
jbe
not
js
pop
xchg
push
fwait
hlt
(bad)
fmul
inc
xchg
neg
lahf
(bad)
arpl
fild
mov
cmp
(bad)
jmp
leave
scas
rol
dec
retf
mov
idiv
push
inc
test
or
mov
add
mov
dec
int3
and
cs
ret
mul
daa
jbe
inc
cld
inc
shr
jnp
clc
mov
xor
mov
jne
mov
jae
fisttp
fucomi
(bad)
mov
mul
pop
pop
lea
mov
cmps
fidiv
add
mov
retf
ja
fiadd
jo
nop
sbb
cmp
mov
and
adc
and
inc
push
jp
push
pop
xchg
cmps
adc
cmp
mov
push
cmp
cdq
push
pop
shl
push
or
adc
adc
dec
test
cmp
jmp
mov
or
pop
into
pusha
push
add
jmp
fidivr
movs
xor
fist
adc
mov
lea
sub
dec
lods
popa
(bad)
pop
mov
dec
test
push
call
pop
test
jg
mov
mov
aam
in
(bad)
lock
neg
mov
mov
and
movs
sbb
cmp
cmps
cmps
int3
pop
bnd
popf
ret
loopne
xchg
mov
cmp
inc
mov
es
(bad)
mov
rcl
test
inc
rcl
sub
adc
jb
push
inc
adc
cdq
cmp
div
add
shl
out
data16
add
and
jne
pop
lods
jne
repnz
in
dec
sbb
mov
mov
aaa
in
mov
or
sahf
cwde
pop
imul
inc
mov
xchg
push
and
unpckhps
jge
(bad)
cmc
push
enter
dec
(bad)
sbb
jns
dec
loop
fs
ja
xor
dec
leave
and
dec
sbb
aaa
pop
(bad)
div
pop
fsubr
sahf
inc
push
jno
neg
mov
aaa
mov
sub
jo
and
jmp
and
jne
pop
dec
pop
movs
mov
cdq
dec
and
out
neg
out
push
hlt
stos
dec
jp
jae
jl
out
inc
sub
jl
xchg
and
sub
mov
sub
mov
add
mov
adc
in
sahf
pop
(bad)
mov
xchg
xlat
inc
fcmovnbe
cmp
add
out
add
fs
stc
fsub
push
(bad)
push
mov
push
dec
fild
xor
mov
xchg
fs
sar
fiadd
and
inc
dec
push
xor
aaa
sbb
mov
nop
in
cmp
aam
xchg
es
and
in
test
jecxz
mov
mov
mov
jns
mov
out
call
jg
sbb
push
ds
iret
das
or
iret
or
push
and
das
pop
nop
repz
pushf
ds
mov
mov
and
outs
mov
mov
gs
xor
lods
xchg
inc
and
div
push
or
sbb
scas
cmp
bound
cmps
test
pop
fnop
cs
pop
push
or
fldcw
popa
sbb
push
lea
call
cmp
clc
sbb
mov
xchg
out
outs
mov
push
pop
mov
xor
aaa
mov
lods
lock
out
jnp
ror
sbb
mov
prefetch
(bad)
mov
call
mov
sub
dec
jmp
or
push
outs
rcl
dec
(bad)
fild
sti
fild
add
pop
pop
out
test
push
cmp
ret
shr
xchg
data16
xor
or
cmp
xchg
push
jns
inc
mov
add
in
cli
inc
xlat
mov
sub
cmp
xor
sub
dec
in
pop
or
aam
sbb
mov
and
aas
lods
xchg
pop
push
les
rcl
scas
mov
stos
mov
test
cwde
sbb
arpl
int
cmp
mov
dec
rol
sbb
cld
frstor
repz
jns
rol
div
cmp
sahf
cmp
add
ret
mov
mov
xchg
(bad)
(bad)
sbb
mov
lock
xlat
scas
xchg
lods
and
mov
inc
cwde
repnz
xchg
push
sbb
cmp
adc
adc
or
adc
ins
mov
pop
fwait
or
ins
vmwrite
xchg
rcl
adc
(bad)
jp
xchg
jle
loop
pop
xor
scas
movs
fisub
scas
push
pop
xlat
aaa
jnp
fdiv
pop
mov
and
outs
mov
aad
xor
xchg
sub
out
dec
sti
add
jg
fs
int3
pop
je
ins
(bad)
popf
cwde
stos
lock
daa
movs
lea
mov
imul
push
push
mov
lods
fbstp
adc
mov
out
sub
lea
xchg
cmp
cmps
add
jmp
leave
addr16
in
cmp
push
cmp
sub
push
arpl
(bad)
cmps
fmul
xor
inc
pop
mov
fxch
shl
sub
sub
or
mov
fcmovb
dec
dec
dec
sbb
icebp
out
lea
push
mov
mov
xchg
mov
retf
loope
xor
push
jmp
sub
jecxz
call
ss
daa
loope
fcmovnbe
pop
pop
xor
ror
jecxz
sub
or
jg
movs
scas
mov
jl
add
inc
or
(bad)
xchg
jne
add
push
adc
gs
jg
sub
(bad)
in
mov
cs
test
inc
iret
push
iret
add
sar
out
or
int
ins
xchg
ds
fnstsw
leave
iret
cmp
jmp
call
push
pop
test
aas
test
popf
adc
(bad)
sbb
ret
and
int
mov
mov
add
mov
mov
jp
iret
push
pop
bound
and
xchg
addr16
dec
mov
xor
and
push
xchg
mov
xchg
popa
je
or
fs
mov
inc
popf
loope
inc
pop
repz
dec
dec
clc
and
pop
lahf
scas
xor
into
in
push
fsub
pop
aas
xchg
lods
dec
add
or
cmps
jge
mov
cld
jb
call
jp
inc
out
in
int3
and
push
adc
push
pop
inc
aad
sub
adc
ret
dec
pmullw
cmp
mov
mov
xor
cmp
stos
sar
cmps
loope
lahf
and
inc
sbb
inc
mov
jnp
imul
mov
sbb
mov
adc
inc
das
repnz
popf
and
jmp
mov
jle
data16
fdiv
mov
test
or
bound
mov
xchg
jbe
pop
gs
ficom
sbb
pushf
popf
sub
dec
sub
xor
mov
mov
out
popa
adc
cmps
dec
out
imul
ins
ins
ins
std
loope
lds
stos
aam
ja
(bad)
sub
out
mov
add
cmps
daa
aam
xchg
inc
mov
or
aaa
std
sbb
or
test
test
ret
jmp
in
mov
mov
cmp
push
sbb
mov
dec
fst
push
pop
sti
add
and
push
imul
arpl
or
fldcw
or
dec
push
out
add
pop
jns
scas
push
xchg
jecxz
add
jmp
xacquire
dec
adc
into
in
adc
adc
or
out
or
jle
sub
adc
cmp
push
les
xchg
lock
pop
or
inc
out
ds
in
xchg
sbb
push
bnd
add
retf
add
enter
or
fcmovnu
xor
(bad)
or
in
or
out
dec
rcr
dec
xadd
pop
mov
inc
aad
and
cs
aam
mov
add
pop
pop
adc
jge
(bad)
jo
mov
test
ins
cmps
popa
push
xor
arpl
addr16
pusha
imul
mov
leave
lock
test
mov
cmp
push
jne
(bad)
pop
loopne
xor
and
pop
arpl
stc
ins
ja
(bad)
or
sbb
mov
add
or
xchg
sbb
sar
push
(bad)
jl
fstp
mov
xchg
xchg
fisubr
out
jo
sbb
bound
cmp
fldenv
pop
sbb
jbe
adc
out
mov
ret
loop
mov
daa
(bad)
pusha
nop
fwait
or
es
imul
lahf
imul
pop
fs
dec
dec
(bad)
aad
cwde
ins
in
icebp
mov
mov
ins
std
pop
test
dec
enter
(bad)
jno
dec
or
fstp
sbb
cmp
jle
out
stos
mov
push
test
dec
inc
push
es
adc
xor
pop
and
mov
mov
xchg
pop
mov
dec
int3
loopne
pop
jg
ds
cld
adc
xchg
out
shl
add
sbb
sti
nop
xor
cmp
arpl
mov
add
ds
cmp
sbb
in
retf
retf
and
les
movs
pushf
cmc
ins
scas
jecxz
out
inc
and
pop
sti
stos
je
rep
call
shl
jle
mov
ss
sahf
jp
imul
ds
jp
dec
shl
loope
sahf
aad
in
dec
mov
push
xlat
ins
cmc
mov
les
xor
(bad)
repz
aaa
into
dec
dec
add
push
pusha
es
shr
add
mov
repz
add
std
mov
ins
test
pop
adc
lahf
std
jns
add
jmp
out
mov
mov
mov
ins
push
inc
push
xchg
fs
xor
(bad)
minps
adc
xor
dec
pop
xchg
adc
mov
and
div
imul
js
xchg
add
fstp
retf
mov
sub
les
fild
push
jno
xor
add
or
push
jl
jbe
outs
jo
(bad)
mov
lahf
mov
pop
gs
sub
stc
sbb
cld
outs
mov
xor
mov
pusha
mov
mov
rcl
sahf
inc
inc
stc
push
daa
in
enter
sbb
add
adc
sub
(bad)
adc
ret
xor
or
pop
sbb
push
pop
inc
inc
arpl
mov
mov
inc
jmp
dec
xor
cmp
fisttp
or
movs
sub
das
xchg
int
mov
sub
push
int
sub
sub
adc
xor
mov
pusha
call
test
data16
sar
bound
repz
mov
out
mov
test
adc
(bad)
and
and
xchg
iret
mov
or
fdivr
add
dec
inc
call
test
gs
xchg
fs
mov
rol
sbb
pop
sbb
add
xor
add
fstp
mov
rcl
lahf
nop
out
push
mov
mov
adc
arpl
and
out
xchg
mov
push
dec
rcr
add
rcr
mov
pop
ret
(bad)
in
push
adc
test
repnz
(bad)
in
addr16
inc
xor
cmps
mov
adc
xlat
int3
inc
sbb
mov
call
das
sbb
add
not
dec
(bad)
and
ds
iret
hlt
scas
xor
mov
leave
lock
jge
pop
test
jno
neg
xchg
push
ins
jl
and
dec
mul
xor
(bad)
rep
rcl
xlat
cmp
pop
movs
dec
xchg
shl
out
pop
inc
test
mov
ret
xchg
push
lds
xor
ret
fdiv
push
mov
xor
jnp
in
or
les
out
fstp
sbb
cmc
mov
sbb
xor
xchg
mov
hlt
repz
add
cmps
mov
cmc
sub
mov
repnz
hlt
lods
stos
mov
mov
add
sahf
sti
pop
vmulps
mul
push
sub
mov
ins
jmp
xchg
aaa
out
ja
enter
(bad)
mov
cmp
jmp
(bad)
adc
(bad)
(bad)
xchg
jp
cmc
or
pop
xchg
(bad)
stc
mov
ins
mov
add
aad
sub
push
inc
jno
jae
and
push
out
adc
add
out
pop
jl
or
pop
(bad)
adc
xchg
cmp
xchg
imul
jecxz
icebp
pop
(bad)
into
movs
jecxz
jge
pop
jle
xchg
sbb
fsub
adc
jns
aam
add
cs
dec
lods
push
sbb
mov
rcl
ss
inc
adc
cmp
and
sub
pop
(bad)
xchg
jb
sbb
(bad)
rol
jl
ss
data16
dec
sbb
pusha
inc
mov
jg
int3
rol
inc
pop
fild
lock
add
push
mov
jbe
dec
stos
imul
js
push
push
scas
adc
sbb
jmp
jns
lea
jmp
cmps
and
push
sbb
cmp
icebp
sahf
and
xchg
sbb
push
jmp
sbb
xor
jbe
mov
and
popa
mov
cli
popf
adc
mov
mov
cmp
pop
dec
and
cmp
xor
ds
sub
stc
arpl
ins
(bad)
sbb
fs
(bad)
cmp
test
inc
push
push
repnz
out
int3
shr
sbb
popf
cmp
sahf
inc
stos
xlat
adc
cs
sbb
imul
cmp
pushf
shl
fcomp
(bad)
pusha
jmp
jmp
inc
imul
test
or
or
scas
inc
sbb
sbb
mov
rol
pop
aad
mov
ficomp
sbb
lahf
(bad)
rol
jb
stos
leave
pop
push
xchg
ret
std
cmp
addr16
mov
adc
cmps
cmp
inc
sub
add
fidiv
fs
cmp
cdq
dec
jmp
and
int3
in
loopne
(bad)
mov
out
ja
xchg
mov
mov
adc
mov
shr
movs
pop
push
ja
jge
mov
sbb
xchg
jns
aaa
sbb
jno
sbb
pop
xlat
cld
sbb
xor
jle
sub
and
mov
cmp
(bad)
sbb
xchg
xor
ficom
sbb
or
es
dec
(bad)
ja
mov
jo
in
cmp
rol
je
adc
sahf
das
sti
mov
dec
sar
or
and
repnz
in
xchg
adc
push
test
retf
push
(bad)
hlt
iret
xchg
pop
call
xchg
cwde
cmps
fistp
rcl
arpl
sub
mov
pop
arpl
jb
push
aaa
mov
pop
cmp
mov
div
adc
clc
popa
mov
sub
lds
mov
jnp
icebp
xchg
inc
mov
test
lods
jbe
repnz
ficomp
mov
movs
imul
packssdw
sahf
lods
jno
cmp
les
int3
xor
movs
fstp
aad
(bad)
cmc
pop
stos
inc
jmp
imul
es
jb
sbb
mov
and
push
sub
and
push
in
dec
cli
shl
add
mov
(bad)
or
ret
sub
mov
dec
scas
dec
(bad)
outs
sub
pop
xor
iret
mov
ret
jbe
test
sbb
sbb
in
xchg
sub
fnstsw
push
setnp
cmp
inc
sahf
retf
sbb
mov
push
fild
dec
jb
sub
adc
cmp
inc
lods
dec
xchg
scas
lods
mov
mov
hlt
ror
icebp
push
dec
leave
push
cmp
push
push
lods
int
sub
std
mov
xlat
mov
xor
jg
retf
sbb
mov
rcr
xor
mov
cmp
jnp
movs
jp
adc
fcom
div
ds
mov
sub
jmp
bound
mov
mov
sub
ins
hlt
fstp
xchg
lahf
or
popa
test
outs
mov
pop
es
mov
int3
(bad)
pop
test
mov
jno
and
scas
push
stc
mov
pop
daa
ror
sbb
ss
push
(bad)
fld
xchg
jne
mov
pop
and
inc
(bad)
stc
push
stos
lea
scas
bound
dec
mov
jecxz
inc
or
cli
es
mov
or
lea
sbb
and
pop
cwde
das
adc
cli
dec
add
fistp
ds
je
cdq
sbb
mov
sbb
xor
imul
sub
call
fs
push
xchg
addr16
and
shl
in
sub
cmc
sti
movs
inc
pop
fs
inc
dec
popa
adc
or
inc
jmp
push
cmp
ja
push
lods
rol
call
sahf
scas
dec
jo
(bad)
cmp
ror
jbe
sbb
in
jl
fisubr
mov
pop
nop
and
leave
out
jno
mov
call
xchg
aas
not
repz
fcom
retf
jle
jnp
neg
sbb
or
pusha
pop
daa
es
or
clc
jle
sti
jecxz
adc
jo
sti
das
jp
enter
enter
out
inc
cmp
xchg
sahf
adc
dec
loope
inc
enter
data16
lds
ret
lods
mov
xchg
and
ja
inc
and
sbb
or
pop
jp
xchg
retf
(bad)
gs
aas
and
pop
jo
enter
xchg
add
jno
or
out
pop
loope
xlat
loopne
xor
cwde
mov
dec
xor
repz
ja
imul
mov
inc
jl
int
pop
adc
sar
mov
bound
test
test
mov
and
adc
mov
daa
(bad)
movs
mov
push
out
ins
sbb
and
dec
popa
jmp
sub
mov
cmp
add
sub
rol
popf
retf
out
xchg
int3
cmps
pop
or
xor
lock
mov
cld
nop
mov
lea
lods
in
mov
mov
or
mov
adc
imul
imul
pop
add
mov
dec
jmp
and
je
mov
mov
dec
cmp
jecxz
adc
pop
push
push
mov
loop
ins
inc
loope
test
xor
inc
rcr
rcr
pusha
add
je
out
sbb
lods
test
pop
out
pop
bound
mov
fimul
xchg
bt
ficomp
push
sbb
popf
gs
inc
jae
jg
xchg
jo
xchg
ins
pop
repnz
in
rcr
aad
push
scas
mul
xor
pop
push
out
mov
sub
push
test
mov
xor
dec
jp
inc
rcl
jo
into
push
in
cpuid
(bad)
stc
(bad)
pop
ins
adc
in
or
jg
mov
sub
pop
arpl
in
loopne
arpl
scas
pop
mov
push
pop
sub
or
xor
bound
pop
adc
or
sub
cmps
sub
push
arpl
fistp
sub
jg
cmps
mov
shr
sub
scas
cmps
lds
jl
test
nop
inc
xchg
in
and
xor
mov
in
and
popa
add
push
or
add
push
xchg
sti
or
(bad)
and
call
push
mov
mov
jle
push
cmc
(bad)
sti
pop
mov
add
mov
fistp
loop
add
les
mov
add
sub
adc
(bad)
add
adc
xor
mov
loopne
sahf
imul
cmps
int
pop
sbb
pop
mov
mov
std
repnz
pop
outs
pop
push
pushf
and
sbb
cmps
adc
dec
xchg
push
mov
add
(bad)
leave
jle
das
out
fcom
(bad)
mov
out
(bad)
mov
mov
(bad)
ds
bound
dec
loopne
into
mov
shl
sbb
cmp
std
aas
cs
repz
loope
mov
loopne
retf
add
sub
pop
je
clc
(bad)
jae
movs
ffree
sub
jp
cli
add
call
dec
lods
fwait
cld
jb
test
xor
xchg
mov
cmp
jns
sub
push
mov
outs
sbb
and
es
or
mov
enter
jno
ins
mov
adc
arpl
out
pop
and
fistp
cmp
stos
sti
out
cld
scas
in
loopne
fld
sub
jp
lahf
imul
cmp
(bad)
(bad)
fstp
cmc
push
fs
add
xlat
dec
call
mov
das
and
ins
dec
jmp
(bad)
sar
pop
jecxz
idiv
test
int3
cmp
jp
adc
mov
mov
jne
ja
xchg
fist
push
das
loop
(bad)
popf
push
add
mov
fstp
mov
mov
inc
xor
inc
xchg
mov
in
lock
rcl
jle
and
and
scas
lock
mov
sbb
jae
fidivr
adc
jmp
repz
mov
xchg
movs
stc
aam
mov
call
jge
ds
leave
ret
jb
(bad)
sbb
stos
add
sub
outs
cmp
cmc
mov
ret
jecxz
addr16
mov
arpl
call
addr16
xchg
out
pop
fs
call
lods
stos
retf
jb
pop
jp
jo
cmp
pop
retf
mov
jl
jnp
dec
(bad)
jne
inc
xor
mov
popf
lds
xchg
inc
sar
or
cld
mov
cmp
inc
pop
std
cmp
outs
imul
dec
into
jo
in
(bad)
icebp
mov
jmp
into
mov
pushf
mov
jge
inc
neg
pop
add
std
jmp
std
or
lods
mov
adc
(bad)
scas
fstp
push
jno
sbb
div
in
xor
jmp
dec
data16
cli
lea
xchg
sbb
cli
xchg
movs
es
add
push
mov
stos
dec
adc
xor
mov
dec
pop
pop
pushf
cmps
add
mov
mov
dec
div
enter
xchg
fistp
push
iret
inc
cmp
mov
jecxz
pop
out
sbb
test
test
sub
sub
pop
xchg
sub
or
or
std
mov
cmp
push
dec
mov
push
lods
pop
outs
mov
sbb
aam
mov
out
repz
cmp
(bad)
daa
jnp
inc
mov
mov
or
popf
(bad)
shl
inc
mov
mov
adc
mul
add
arpl
movs
adc
sbb
sar
mov
jg
mov
call
cmp
fwait
sbb
adc
stos
xlat
push
imul
or
int3
pop
repnz
jmp
sahf
aaa
push
jle
pop
mov
je
push
dec
out
mov
or
dec
push
and
pop
rol
inc
stos
outs
jmp
xor
dec
sub
sbb
ret
cli
lea
iret
mov
jne
gs
(bad)
mov
add
push
mov
or
(bad)
cmp
ins
jmp
sbb
fsub
pop
scas
invd
stos
leave
mul
xchg
jg
dec
xor
adc
imul
aad
retf
xor
arpl
mov
gs
repz
fwait
aam
add
and
jmp
fidivr
sbb
mov
add
ret
xor
retf
movs
pop
push
cmc
push
(bad)
adc
retf
in
mov
add
pusha
push
sub
aad
pop
clc
xchg
add
xor
pop
rep
pop
bound
lahf
xlat
test
retf
xor
rcr
or
jg
in
in
or
int
xor
push
out
gs
mov
test
dec
fmul
imul
fnsave
gs
aaa
sub
shl
in
(bad)
mov
mov
mov
sub
mov
jg
test
or
int3
jmp
dec
push
cli
and
mov
jbe
js
not
rcl
push
outs
lahf
aad
repz
fsub
and
ret
pushf
mov
dec
xchg
dec
push
push
and
sub
push
retf
cmp
jmp
call
dec
sub
push
mov
sub
push
xchg
shl
out
adc
pop
and
mov
fs
mov
mov
pop
mov
sbb
adc
cs
jle
cmp
inc
pop
scas
ds
dec
sahf
dec
dec
retf
jmp
icebp
fwait
mov
mov
mov
ret
addr16
outs
loop
outs
mov
mov
test
divps
push
daa
rcr
sar
jae
and
ins
xor
lods
ins
xor
push
xchg
mov
xor
imul
pop
jecxz
inc
push
mov
mov
sub
ins
jle
inc
sbb
or
pop
xchg
call
test
mov
push
shr
pop
jl
cdq
pop
pop
adc
jns
xor
inc
mov
xor
ror
mov
ret
xchg
cs
lods
(bad)
and
pop
aad
outs
lods
push
xchg
xor
ret
push
stos
repnz
ret
jae
pop
mov
stos
clc
in
daa
aas
mov
fild
mov
push
mov
sbb
je
(bad)
mov
sar
xlat
xor
push
and
sub
test
sbb
fstp
pop
cmps
fwait
gs
sahf
xor
lods
sbb
inc
mov
sub
mov
ins
repz
jecxz
jl
popf
data16
out
call
and
pop
inc
dec
imul
lahf
jns
das
add
popa
cwde
jbe
lods
loop
sar
cdq
jne
xor
push
hlt
sbb
movs
cmp
ja
sbb
(bad)
jmp
xchg
das
out
ret
addr16
test
aas
jmp
xor
test
sub
push
fisubr
dec
cld
lahf
cmp
nop
call
retf
ret
jp
loop
inc
sub
inc
rcl
out
xchg
or
movs
or
fwait
jecxz
scas
fild
dec
jl
sbb
pop
xchg
sbb
movs
int3
je
outs
mov
lahf
repnz
or
mov
sbb
sbb
and
mov
cmp
aad
push
mov
popa
(bad)
sbb
pop
push
mov
sbb
fistp
enter
fiadd
pushf
rcr
imul
sbb
ds
arpl
loopne
in
push
fs
repz
cld
xchg
fistp
jno
fild
js
push
(bad)
inc
out
mov
fmul
xchg
mov
xchg
repnz
sahf
jle
jns
mov
sub
sub
xor
mov
stc
outs
pop
xor
int
sbb
mov
cs
push
push
test
or
dec
cld
pop
repnz
inc
dec
xchg
call
sub
sbb
sbb
jo
call
outs
jg
pop
aad
jo
test
xchg
leave
push
imul
es
dec
dec
push
mov
sub
adc
xlat
fst
cmp
sub
sub
popf
popf
sbb
jne
jbe
jecxz
(bad)
xor
sub
popa
shl
jb
sbb
xchg
push
pop
sbb
push
clc
and
push
das
test
xchg
jp
mov
jmp
adc
ss
ins
mov
cs
adc
adc
mov
adc
xor
or
sbb
and
pop
jle
sahf
das
out
add
cmp
push
mov
jle
mov
sub
test
xchg
mov
mov
loope
loope
or
or
pop
test
pop
call
inc
dec
shr
es
xchg
scas
inc
inc
inc
adc
adc
xor
stc
test
xor
mov
mov
aam
jne
sub
enter
push
cs
enter
jmp
out
mov
mov
test
cmp
mov
dec
cmp
xchg
jns
jae
sub
push
fadd
sub
jne
push
inc
adc
fwait
xchg
sub
leave
jp
icebp
outs
shl
mov
mov
movs
cmc
aad
or
pop
and
fisubr
push
xchg
sub
aad
sub
ffreep
inc
or
sbb
(bad)
xor
popf
icebp
mov
and
add
jnp
push
cs
cmc
push
(bad)
mov
(bad)
cld
(bad)
iret
lahf
stos
fadd
retf
jbe
sub
sbb
push
add
pushf
fimul
sub
scas
imul
inc
and
test
sti
push
stc
clc
sub
push
in
rcl
or
jg
cmp
push
movs
fist
mov
mov
popa
sbb
je
xchg
pop
xchg
jle
shl
mov
arpl
or
or
sub
inc
push
adc
iret
mov
mov
fdivr
jp
adc
mov
dec
fsubr
or
mov
cmp
bound
repz
push
mov
add
lock
leave
ja
scas
ds
out
jno
xchg
ja
jge
xor
movs
stos
xor
cmp
or
(bad)
cmp
push
dec
out
idiv
or
rol
in
jp
dec
mov
adc
and
scas
sub
stc
lds
mov
jmp
jnp
(bad)
idiv
cmp
xor
out
and
cwde
scas
push
outs
mov
sti
add
stc
mov
pop
in
pop
mov
les
adc
cmp
adc
and
jb
adc
and
arpl
stos
shl
lock
enter
xchg
in
mov
cmp
call
push
mov
imul
push
jo
or
push
retf
xor
das
push
imul
sti
push
push
jp
or
push
push
pop
sbb
out
out
inc
jmp
mov
call
sbb
test
mov
pop
sbb
pusha
nop
mov
xor
sar
dec
in
xchg
lea
xchg
and
and
movs
mov
add
ds
fucomp
xchg
push
je
sub
int3
mov
pop
(bad)
outs
ins
inc
cli
imul
cdq
dec
push
jae
dec
dec
cmp
out
hlt
xchg
stos
pop
fnstsw
scas
pusha
or
inc
ins
test
pop
add
ss
cmps
inc
dec
mov
inc
inc
fcom
and
cmc
dec
psrlq
mov
mov
inc
popf
adc
ja
lea
xchg
cmp
jnp
cmc
fs
or
mov
mov
ficomp
mov
popa
jo
xchg
call
push
push
out
push
add
pop
jns
pop
sahf
mov
ins
sti
dec
jo
les
mov
xchg
sub
push
not
pminub
imul
pop
pop
jge
push
movs
inc
fimul
cmp
leave
test
xor
jle
dec
or
jmp
fbstp
cmps
adc
mov
dec
adc
inc
cmps
(bad)
jmp
adc
fistp
push
xor
dec
int
fadd
add
fidivr
jnp
adc
fsubr
movs
mov
jge
pop
xor
inc
(bad)
in
jb
jno
xchg
lock
fadd
pop
jg
outs
(bad)
loopne
fldcw
sbb
gs
ja
shl
popf
shl
retf
xchg
data16
sub
jae
lods
pop
dec
and
mov
rcl
push
scas
or
sub
icebp
mov
pop
xchg
sub
adc
(bad)
rcr
cli
jnp
push
xor
jne
sub
cmps
adc
mul
out
inc
(bad)
aas
adc
sub
or
jge
enter
add
fnsavew
in
xchg
sub
aaa
bound
aad
(bad)
call
mov
dec
(bad)
lock
jne
fcom
adc
pop
dec
ins
(bad)
jo
inc
push
cwde
sbb
inc
pop
push
aaa
out
pop
icebp
push
and
aas
sbb
push
mov
(bad)
out
scas
je
or
jnp
pop
or
jns
jg
mov
mov
mov
jmp
loope
test
js
sbb
cmp
sbb
sub
int
fisub
stos
sbb
out
lea
outs
cmc
movs
or
scas
lock
hlt
jne
cmps
pop
mov
cli
arpl
adc
push
ss
test
loop
fcom
jae
fst
ins
je
mov
sahf
not
mov
or
mov
mov
push
int
pop
in
repnz
mov
sub
add
xchg
sahf
mov
and
mov
lods
retf
ins
popa
fisub
sbb
inc
push
retf
jp
cdq
movs
jnp
cmp
movs
dec
pushw
stc
jne
mov
or
dec
sbb
cmp
fild
or
add
les
jne
and
xchg
lds
pop
repz
aad
daa
adc
dec
test
mov
mov
add
xchg
adc
jmp
cmps
sti
aad
mov
add
sub
jns
aam
idiv
push
data16
loop
cmp
cmp
aaa
mov
rcl
ja
std
xor
pusha
adc
ins
pop
cmp
and
(bad)
stc
jmp
dec
sbb
sub
aaa
xchg
mov
push
inc
lock
xchg
out
mov
push
pop
daa
leave
call
repnz
push
or
lea
pop
(bad)
mov
rcl
in
pop
(bad)
pop
inc
iret
mov
jp
cmp
sbb
push
addr16
loopne
sub
(bad)
in
mov
pop
rcr
stos
sar
sub
xor
in
push
imul
cwde
int
cwde
fnsave
push
imul
add
sub
push
dec
(bad)
ret
pop
push
mov
xchg
stc
adc
loopne
call
or
mov
cmps
pop
daa
dec
and
cdq
hlt
ror
push
jecxz
mov
adc
frstor
sub
add
xlat
bound
test
aad
mov
push
movs
sbb
and
xchg
xor
push
mov
or
setbe
and
scas
add
push
jle
jb
xchg
mov
xor
cmp
pop
fild
hlt
lods
and
retf
inc
or
mov
clc
pop
mov
dec
mov
inc
mov
imul
mov
mov
pop
add
dec
addr16
mov
jmp
pop
push
call
mov
cmps
pop
icebp
inc
jbe
cmp
xchg
or
pop
xchg
xor
pusha
das
xor
scas
ja
xor
mov
and
xchg
jnp
adc
icebp
mov
pop
mov
pop
sbb
jo
stos
int3
jle
in
das
shl
sub
jae
scas
(bad)
mov
cdq
jb
fnstsw
nop
mov
cmp
sub
(bad)
out
push
test
pop
sti
add
pop
or
xchg
fmul
xor
lods
sar
inc
retf
movs
fsub
mov
inc
les
xor
xchg
adc
inc
xchg
lea
or
push
inc
add
shr
in
dec
pop
jl
dec
sub
pop
es
cmp
or
rol
xchg
sub
lods
dec
fbld
aas
mov
cmps
movs
test
jae
es
add
or
adc
dec
push
jnp
sahf
ror
inc
jo
or
mov
in
ret
mov
add
pusha
mov
mov
push
and
mov
popa
or
repnz
xor
xchg
dec
jle
push
jns
in
mov
inc
sbb
push
arpl
int
adc
inc
call
push
shl
std
mov
call
mov
(bad)
cmp
js
add
scas
ret
add
xor
jnp
pop
dec
mul
sti
sbb
std
sub
stos
pop
xchg
push
ret
add
sub
aam
out
into
(bad)
cmp
xchg
inc
(bad)
je
fdiv
out
mov
adc
jmp
out
dec
movs
jg
movs
out
inc
retf
lock
(bad)
nop
xor
(bad)
sub
leave
shl
int
mov
adc
mov
xlat
pop
mov
or
and
push
dec
repz
mov
outs
or
shl
push
mov
or
xchg
dec
adc
jbe
iret
bound
mov
xchg
pop
and
sub
mov
lods
cmps
enter
pop
mov
add
div
xchg
repz
std
stos
fcmove
inc
aam
xor
stc
push
xor
xor
addr16
and
inc
mov
(bad)
sbb
fisubr
xchg
and
xchg
add
int3
mov
fstp
push
in
push
leave
pop
je
(bad)
clc
mov
push
aam
and
adc
pop
movs
jmp
jns
xchg
or
(bad)
outs
dec
dec
dec
inc
rcr
add
cmp
movq
cmps
jns
jb
clc
push
je
mov
repz
(bad)
out
jne
sbb
push
jne
mov
movs
sbb
dec
mov
ficomp
out
stos
dec
mov
cmc
xchg
sbb
or
inc
push
dec
sbb
popf
movs
(bad)
mov
pop
cmps
mov
sbb
cdq
push
cdq
mov
cli
hlt
jb
pushf
mov
jmp
ins
(bad)
je
cmps
inc
(bad)
in
lds
pop
retf
xchg
test
jge
test
in
xchg
xor
and
shl
fsubr
repz
movs
xlat
cmp
adc
mov
out
in
mov
int3
ret
mov
or
mov
bound
addr16
or
stos
cmp
pop
xchg
sub
dec
leave
jge
dec
test
mov
mov
outs
xlat
inc
add
fiadd
pop
sub
cwde
and
sub
in
test
sbb
push
punpckhbw
dec
dec
xchg
popf
(bad)
bound
stos
scas
push
push
xchg
popf
mov
test
lea
add
sbb
and
add
js
shr
and
xor
inc
mov
aaa
imul
push
inc
dec
cwde
adc
cwde
push
fisttp
jle
sub
in
push
jmp
loope
pop
sahf
mov
hlt
cmp
add
aad
xchg
stc
ja
jb
out
ins
sbb
pusha
sub
add
add
imul
cmc
push
imul
add
jb
add
(bad)
adc
mov
jmp
mov
dec
mov
mov
nop
ds
sbb
and
shl
adc
aas
and
add
loop
mov
sub
ret
xchg
sub
sub
mov
nop
xchg
adc
pop
cs
push
cli
xchg
mov
(bad)
fst
pop
cmps
je
jne
mov
out
(bad)
(bad)
inc
and
dec
inc
les
(bad)
in
lods
xor
scas
and
mov
sti
dec
sbb
mov
mov
jne
and
outs
movs
sub
in
or
lods
and
sub
cmp
test
jns
push
arpl
stos
ins
mov
push
retf
sub
cmp
pop
pop
in
add
adc
mov
sub
das
adc
cmp
mov
(bad)
stc
je
es
loop
cmps
mov
stc
pop
push
cmp
vmovd
bound
push
jno
or
imul
in
jmp
(bad)
ja
jno
push
aaa
xchg
sahf
cli
out
mov
xor
xchg
add
das
dec
aaa
add
mov
xlat
call
ds
xchg
sbb
jmp
scas
clc
jmp
add
(bad)
sbb
adc
retf
mov
sub
inc
cs
mov
scas
xchg
xor
pop
int
test
ds
int3
lahf
pop
add
ret
(bad)
pop
xchg
sbb
adc
cmp
daa
hlt
inc
stos
leave
pop
xor
out
push
test
std
sbb
jae
mov
pop
je
(bad)
int
les
outs
add
stc
fsub
sub
adc
xchg
or
pop
out
outs
imul
inc
imul
sub
fs
dec
push
jl
sub
cli
dec
push
mov
pop
stos
lds
std
adc
jne
(bad)
cmp
jl
movs
mov
adc
jmp
mov
outs
cmc
cmp
fwait
sbb
sub
mov
xor
jb
pop
pop
push
je
int
sub
ret
or
pop
pop
push
cld
push
sbb
pop
inc
nop
jmp
or
test
mov
ins
hlt
or
dec
cmp
ss
scas
push
xchg
mov
cmc
retf
hlt
xchg
out
loopne
ja
jno
adc
mov
push
std
xchg
aas
ss
fstp
outs
sti
ret
sbb
inc
adc
jo
mov
out
loopne
xor
jo
mov
movs
jecxz
inc
sar
cli
jg
cmp
cmp
sub
(bad)
(bad)
retf
cwde
fisubr
arpl
add
sahf
rcl
ins
sub
out
xchg
pop
inc
imul
mov
out
out
xor
aaa
and
(bad)
push
ret
jp
sbb
(bad)
fbld
(bad)
movs
ins
leave
and
and
sbb
sbb
pop
and
test
jp
add
push
call
mov
mov
lods
icebp
mov
mov
xchg
dec
mov
daa
sbb
mov
cs
(bad)
(bad)
sbb
jo
ss
pop
pop
fwait
sub
pop
les
mov
div
imul
fist
xor
outs
push
pop
or
adc
outs
shl
(bad)
jmp
mov
bound
sub
sti
mov
jmp
ins
cmp
sub
movs
out
retf
sbb
push
push
add
dec
leave
sub
mov
ret
jb
mov
mov
cwde
sbb
add
pop
mov
mov
pop
pop
sub
mov
mov
rcl
sbb
shl
sub
or
jl
shl
in
mov
les
iret
les
jae
lods
pop
or
xchg
dec
adc
int3
call
lods
inc
sbb
addr16
test
sbb
sbb
sub
push
(bad)
jecxz
add
cmc
xchg
xchg
and
xor
repnz
push
mov
leave
mov
jne
add
adc
inc
mov
sub
jmp
fs
add
and
loope
mov
cmps
adc
stos
cld
std
iret
aam
mov
addr16
out
inc
ret
imul
mov
or
(bad)
scas
xchg
mov
out
call
aaa
lahf
imul
rcr
(bad)
dec
pop
mov
scas
add
xor
push
and
jne
or
cmps
call
xchg
outs
ins
add
pop
push
hlt
jg
xor
or
into
pop
out
push
gs
loopne
(bad)
pop
(bad)
int3
imul
gs
mov
and
and
pusha
jbe
lahf
mov
call
sti
xchg
call
push
adc
lea
in
pop
sbb
cwde
push
pop
jmp
xlat
out
xor
ret
iret
jo
push
das
(bad)
cli
pop
pop
mov
dec
xor
cmp
lahf
adc
mov
push
in
test
or
fbstp
sahf
or
dec
sbb
push
xor
jnp
mov
sti
sti
push
inc
out
cmp
pop
jle
aaa
loopne
and
jp
scas
in
push
and
dec
movs
loope
inc
pop
pop
mov
test
jb
jnp
rcl
pop
and
add
ret
sbb
outs
vmptrld
jg
(bad)
scas
cmps
mov
clc
sub
mov
cmps
je
cmps
in
add
js
or
pop
pop
in
dec
mov
hlt
mov
dec
and
adc
aam
inc
faddp
jnp
dec
idiv
iret
fnstsw
stc
sti
or
bound
in
or
or
lds
fisubr
dec
sbb
jmp
leave
xor
popf
push
outs
jl
in
or
and
popa
pop
js
data16
mov
movs
test
in
inc
and
(bad)
scas
bound
push
xchg
xor
ins
fisttp
xchg
fs
fucom
inc
or
aaa
push
fimul
mul
test
mov
gs
fisubr
dec
push
pusha
or
sahf
into
(bad)
fsubr
cmp
(bad)
and
cdq
and
xchg
xor
sbb
mov
or
xchg
xchg
mov
ds
and
and
inc
fdivr
pusha
sub
in
sahf
in
jmp
jnp
jmp
movs
gs
call
in
dec
jb
mov
dec
std
leave
jmp
sbb
pop
push
mov
sbb
cmp
pcmpeqd
inc
pop
inc
test
xor
loop
lahf
add
sbb
pusha
xor
dec
mov
call
pop
(bad)
xchg
(bad)
dec
mov
add
lea
sub
cld
ds
daa
and
sbb
popf
fimul
jbe
xor
mov
jg
sti
lods
xlat
cmp
mov
xlat
jns
dec
ins
fidivr
mov
fadd
hlt
sti
bound
test
push
stos
cwde
jge
sub
push
cmp
movs
inc
dec
dec
mov
xchg
in
out
call
imul
sbb
ss
imul
sbb
add
stc
fnstcw
not
call
fsub
imul
shl
dec
call
sbb
ficom
xchg
dec
test
scas
lds
or
cs
shl
adc
mov
ins
jmp
fsub
das
ficomp
fimul
add
cmps
push
pop
xchg
inc
jno
mov
sbb
stos
inc
cmc
ja
scas
push
pop
loope
aas
out
inc
rol
pop
push
sti
jge
sub
aas
test
fdiv
mov
xor
popa
mov
xchg
mov
jno
sbb
push
mov
jge
mov
sub
jne
cmp
cmp
sbb
and
pop
(bad)
(bad)
fild
cdq
jmp
call
cmps
sub
or
or
jp
jle
sbb
adc
mov
sbb
pop
aam
jno
fadd
mov
shl
pop
xchg
out
shr
lock
inc
hlt
hlt
repnz
lea
retf
cmp
aad
mov
adc
data16
add
ins
jecxz
mov
enter
mov
cmp
aas
mov
into
cmp
xor
cmp
pop
lahf
jecxz
jg
cmc
enter
test
cmp
mov
test
not
push
loope
or
std
ja
test
xchg
stos
cwde
jp
fnsave
cwde
pop
mov
lods
in
xchg
inc
daa
shl
sub
out
sbb
adc
imul
rcr
mov
dec
gs
adc
mov
pop
and
mov
ins
dec
push
ja
(bad)
inc
rol
(bad)
imul
gs
jle
xlat
jne
lea
std
sub
push
jmp
push
add
test
and
es
aad
pop
and
addr16
push
repnz
add
mov
push
pop
pop
pop
pop
sub
addr16
push
cwde
aad
pop
imul
jb
clc
xchg
jl
jb
icebp
push
push
lahf
xchg
or
xchg
or
fld
dec
js
pop
mov
xchg
pop
es
sbb
test
dec
fs
mov
push
dec
lock
sbb
dec
addr16
stc
frstor
into
mov
sbb
or
mov
repz
nop
mov
pop
fdiv
xor
sbb
jns
outs
sbb
mov
xchg
push
jmp
adc
sub
xor
es
push
xor
loopne
cdq
push
jmp
aas
pop
cmp
test
cmp
aam
add
arpl
das
imul
(bad)
cmps
std
retf
loope
in
test
xor
mov
pushf
sub
mov
fsubr
cmps
push
dec
repnz
pop
sub
fisubr
scas
les
pop
shl
jno
xchg
sbb
sbb
mov
xchg
xor
sub
mov
mov
shl
or
and
sbb
std
inc
sbb
cmp
jmp
outs
arpl
lahf
xchg
call
sbb
mov
push
fild
jno
pusha
push
pop
mov
lea
(bad)
ins
jp
sub
cmps
outs
mov
ss
out
mov
mov
dec
xchg
in
mov
retf
shl
xor
cmp
xchg
addr16
adc
sub
cmps
cmp
nop
jp
inc
mov
cdq
out
out
or
mov
scas
jb
xchg
push
sbb
pop
mov
imul
jmp
hlt
movs
sbb
jge
cmp
(bad)
fdiv
mov
xchg
jp
adc
in
mov
aad
repnz
out
aad
pop
and
mov
cmp
nop
dec
xchg
xchg
and
push
enter
in
(bad)
mul
or
sar
lods
mov
rcl
movs
cmp
in
or
dec
daa
add
lds
mov
(bad)
cmc
mov
add
mov
dec
jne
sub
in
call
pop
cmp
jmp
and
loop
(bad)
ins
sbb
(bad)
jne
sub
ret
les
jge
out
sbb
sbb
mov
mov
inc
nop
outs
xchg
call
in
inc
xchg
mov
dec
push
jmp
ss
mov
lods
add
scas
jp
jmp
(bad)
scas
je
rcl
out
xor
xchg
ficomp
cmps
adc
retf
repz
xchg
sbb
lods
mov
mov
sbb
or
cld
cwde
dec
(bad)
add
dec
inc
into
inc
stos
(bad)
shl
ins
push
jno
push
push
and
(bad)
pop
.byte
