sbb
add
mov
and
xor
je
push
fdiv
fcomp
cmp
mov
mov
lds
mov
test
clc
div
sub
aad
dec
mov
sar
sbb
test
or
mov
mov
cwde
jne
push
cli
push
in
scas
adc
xor
inc
fcomp
pop
cmp
sahf
adc
xchg
test
cmp
call
cmps
push
out
aas
adc
pop
add
push
adc
xor
cmp
test
arpl
jae
scas
ins
sub
jbe
lods
cmp
ds
xor
scas
add
mov
addr16
xchg
jl
loope
out
in
cmp
and
cdq
aas
push
pusha
comiss
retf
test
mov
enter
mov
push
mov
sub
dec
popa
mov
dec
mov
out
or
popa
inc
inc
and
xchg
mov
sti
xchg
mov
xchg
push
xor
shl
test
in
ret
inc
mov
mov
inc
pop
push
mov
mov
in
lahf
sbb
gs
cli
lea
mov
inc
je
aas
dec
push
cmp
clc
mov
dec
pop
sub
or
enter
push
adc
shr
inc
jmp
sub
sub
sub
mov
mov
pushf
in
adc
dec
repnz
cmp
(bad)
xor
pop
xor
inc
dec
test
ja
sbb
mov
mov
shl
gs
mov
cmp
div
jb
mov
cmp
test
arpl
fst
int3
xor
shr
retf
dec
add
bswap
(bad)
jb
leave
inc
in
ret
dec
(bad)
fsub
sub
fsub
pop
push
jg
mov
mov
out
pop
lock
mov
adc
out
in
push
mov
jno
(bad)
cwde
mov
lods
sar
cli
lock
icebp
icebp
lock
mov
and
loop
lods
mov
mov
lahf
test
sbb
test
jmp
cmp
stos
aad
sub
pop
mov
jmp
mov
push
jmp
loope
push
mov
not
jl
fist
stos
dec
push
or
out
aam
add
in
add
iret
pop
sbb
jle
add
sub
pop
xchg
es
mov
xchg
push
ror
pop
mov
mov
test
repz
mov
imul
(bad)
cld
inc
mov
dec
cwde
sub
mov
cld
mov
in
xor
fwait
push
inc
dec
scas
push
add
into
popf
fs
ret
or
mov
push
(bad)
outs
iret
jle
inc
arpl
add
movs
adc
lea
cmps
inc
xlat
xchg
ror
inc
mov
outs
stc
and
mov
mov
or
mov
loopne
adc
jb
stos
dec
lock
mov
cmps
dec
in
out
adc
inc
(bad)
cmp
sti
mov
fisttp
cdq
out
cwde
jae
inc
cmp
(bad)
ret
inc
xor
cwde
pop
icebp
jnp
popf
mov
xor
jmp
js
cs
jge
aam
rcr
xchg
dec
gs
fist
push
shl
js
mov
fcomp
fisubr
push
fist
xor
cmp
mov
lahf
rol
push
or
mov
pop
dec
scas
push
test
xor
fnsave
loopne
mov
stos
into
fadd
es
retf
into
dec
cs
gs
icebp
pop
mov
cwde
sub
test
in
cmp
mov
mov
std
sbb
das
icebp
outs
cmp
mov
cwde
not
je
or
imul
mov
cmp
add
sbb
test
dec
ja
cmp
sbb
sbb
into
ja
inc
leave
lds
jp
xor
jecxz
jnp
arpl
push
jl
or
setae
rol
jmp
pop
in
xchg
out
stos
adc
fucomp
pop
jnp
push
(bad)
pop
sub
(bad)
adc
inc
ins
cmp
dec
and
jmp
(bad)
fnstenv
ret
retf
sub
(bad)
cld
in
iret
(bad)
xlat
rcr
xchg
adc
sub
mov
rcr
pop
in
xor
stc
adc
jnp
popa
ja
pop
xor
sub
push
dec
jl
pop
cdq
inc
fadd
shr
aaa
add
xchg
mov
xchg
cmp
mov
xchg
data16
loopne
int
pop
mov
nop
loope
and
fmul
out
cli
or
xor
rcr
mov
jno
xchg
test
jbe
sbb
js
test
ds
mov
imul
bswap
int3
out
neg
push
or
stc
xor
and
pop
lea
mov
(bad)
movs
xor
push
ins
inc
fs
cmp
jae
mov
nop
or
jne
dec
arpl
sbb
xor
in
or
cs
scas
mov
pop
out
mov
cmps
cli
fwait
mov
scas
adc
mov
pop
and
inc
xchg
dec
arpl
xchg
jmp
mov
push
xor
adc
add
test
dec
mov
rcr
mov
loopne
mov
int3
and
sbb
mov
sbb
lahf
adc
mov
mov
push
mov
jne
repz
sub
jecxz
fwait
mov
mov
data16
add
outs
test
xchg
push
cmp
pusha
aas
mov
pop
mov
(bad)
cmp
jbe
stc
and
and
xchg
add
es
scas
jl
js
fmulp
jae
jecxz
scas
dec
retf
ins
mov
in
ins
mov
fdiv
xchg
sbb
ss
sbb
add
cli
frstor
jge
popf
jg
jmp
int3
pop
push
jmp
mov
stc
and
sahf
sbb
inc
mov
test
adc
inc
xchg
ja
loopne
push
vpcomq
cmp
jge
mov
test
mov
fsub
add
and
std
in
xchg
mov
bound
in
lods
and
fst
adc
idiv
sbb
lea
fstp
stos
fwait
mov
jge
push
add
dec
sub
sbb
add
sub
dec
xchg
js
sar
jb
icebp
cmc
push
(bad)
(bad)
aas
pop
icebp
je
mov
(bad)
jge
into
add
fimul
fs
inc
enter
leave
dec
inc
pop
add
fimul
fimul
xor
dec
shr
adc
test
ret
cmp
pusha
addr16
jg
xor
mov
repnz
jg
fs
test
mov
jecxz
xlat
cmp
lds
loopne
cmp
ja
sub
jle
jl
jne
pop
aaa
out
int
mov
push
cmp
pop
push
sbb
inc
jb
or
mov
fisubr
adc
cdq
sub
leave
dec
mov
sbb
push
(bad)
mov
movs
cmps
and
inc
mov
(bad)
out
sub
xchg
push
xor
inc
jle
push
cld
and
pop
jo
outs
imul
hlt
inc
(bad)
pop
sti
push
aaa
aaa
and
scas
rcr
push
cmp
inc
les
jp
sub
lods
movs
lds
or
add
xchg
jge
stos
lahf
lods
clc
xchg
out
xor
fist
out
xchg
pushaw
push
hlt
in
outs
mov
cs
sbb
pop
dec
aas
xchg
imul
dec
out
pop
mov
call
sub
(bad)
loopne
das
cdq
cs
imul
leave
inc
add
jo
aam
inc
xor
adc
xchg
push
mov
mov
jl
xor
mov
add
mov
ret
push
fdivr
(bad)
jb
mov
repnz
sbb
out
jbe
xchg
xchg
or
cmp
pop
jno
ror
lods
sahf
push
enter
enter
mov
inc
unpcklps
cmps
jb
mov
bound
xchg
push
repnz
inc
and
clc
jle
out
sbb
nop
pop
pusha
mov
call
fsub
bound
ror
pop
xor
jae
js
imul
outs
and
fdiv
inc
adc
or
inc
loope
jne
mov
jbe
ss
mov
xlat
xor
xlat
cli
sbb
cmp
xor
xchg
shl
not
sub
adc
cmc
or
mov
out
test
push
(bad)
neg
sub
daa
sbb
loope
test
or
push
add
sbb
mov
adc
(bad)
cmp
pop
push
or
cmp
inc
cld
dec
ja
repnz
or
mov
lahf
and
jp
cmp
loope
imul
dec
daa
ja
jle
sbb
cmps
xchg
inc
or
dec
cmp
mov
lahf
retf
sub
outs
inc
push
mov
iret
mov
retf
ins
push
mov
fcomp
mov
aad
inc
adc
fisttp
cld
stos
adc
cmp
jmp
push
ffree
push
xchg
jecxz
ja
mul
or
stos
(bad)
jb
push
psrlw
mov
stc
scas
mov
stos
xchg
or
push
adc
push
cmp
and
jl
push
cwde
int3
xchg
rol
(bad)
dec
or
mov
imul
push
and
out
xor
out
pop
dec
mov
fistp
dec
popa
dec
and
xor
arpl
stc
aad
or
pop
outs
popa
iret
dec
xchg
sub
pop
push
mov
loope
scas
inc
pop
sub
mov
sbb
and
mov
push
icebp
sbb
xchg
test
hlt
push
pop
test
int3
and
jg
jmp
xchg
out
test
or
xchg
xor
xchg
xlat
ret
inc
mov
sub
in
sub
in
inc
mov
nop
test
mov
inc
ins
mov
imul
push
stos
sbb
stos
mov
jae
inc
xchg
std
repnz
sbb
popa
int
add
stos
xor
push
jb
and
shl
retf
ds
adc
sbb
add
sbb
scas
pop
je
leave
addr16
aam
mov
clc
cmp
cmp
pop
dec
enter
xchg
imul
push
aaa
std
fsub
mov
push
push
push
add
push
mov
cmps
dec
stos
dec
enter
inc
push
enter
out
dec
pop
mov
add
push
ins
push
mov
pop
shl
outs
xchg
addr16
cmps
ss
push
rol
(bad)
shl
mov
xor
mul
in
cdq
push
push
ins
xchg
xchg
ror
adc
and
and
mov
jmp
shl
dec
pop
and
fst
mov
cmp
xchg
cmp
push
add
cmp
pop
rcl
adc
loop
mov
pusha
dec
cmps
rcl
(bad)
les
add
sub
push
in
adc
sub
add
retf
stos
imul
repnz
pusha
data16
(bad)
rcr
sbb
test
pop
gs
in
and
shr
enter
jb
dec
mov
jns
lock
jge
and
pop
jb
(bad)
cmp
mov
adc
mov
gs
jmp
xchg
sub
test
mov
mov
fwait
or
dec
jo
jge
jbe
dec
add
mov
mov
nop
ds
mov
(bad)
scas
jmp
jecxz
(bad)
cmp
or
mov
aas
out
fs
sahf
add
or
leave
(bad)
stos
test
in
sub
mov
sbb
xor
sbb
dec
imul
lods
test
das
fild
cld
rcr
dec
sar
xcrypt-ctr
cmps
call
int
cmp
push
not
inc
dec
mov
cs
loopne
hlt
and
lahf
enter
fs
sti
pop
pop
xor
lods
ja
aad
fisttp
sub
sti
cwde
sbb
daa
push
inc
test
ret
jle
lds
jecxz
pop
jmp
sbb
arpl
int
lahf
(bad)
xchg
and
sbb
pop
arpl
push
rcr
stos
sbb
fwait
push
sti
jnp
ret
mov
jns
ins
mov
mov
push
aaa
loope
pop
lahf
or
push
mov
jp
or
outs
xchg
ja
or
loop
ror
ficom
mov
icebp
enter
cmp
ja
int3
fs
xchg
jnp
or
mov
rol
sub
imul
iret
std
das
loope
jl
sbb
retf
mov
inc
mov
add
(bad)
nop
push
xlat
pop
dec
inc
sbb
jmp
shr
mov
mov
push
xchg
scas
lock
dec
int
cld
std
aam
or
add
push
mov
push
pop
enter
mov
mov
(bad)
jecxz
add
add
and
(bad)
mov
inc
and
mov
shl
out
xor
ror
cmc
movs
hlt
out
cmp
mul
xchg
xchg
cmp
loopne
pop
pusha
push
out
repnz
(bad)
out
test
lock
clc
jne
loopne
fldcw
stc
rcr
xor
dec
xor
fwait
popf
sub
ja
(bad)
sub
sbb
clc
repnz
(bad)
jae
fisubr
fidivr
push
cmp
test
div
ja
outs
add
jmp
fsub
hlt
jno
cmc
mov
xor
sub
pop
dec
dec
hlt
push
push
sbb
imul
aas
in
push
or
or
xchg
jns
aad
cmc
repnz
lods
sbb
jo
inc
mov
xchg
mov
sti
adc
fsubr
loope
js
loopne
mov
pushf
dec
aad
repnz
std
push
jmp
add
push
xchg
dec
lods
sbb
sahf
add
hlt
outs
cmps
jp
sar
std
mov
out
jmp
mov
jmp
lock
fidiv
bound
lahf
cwde
out
cld
jne
(bad)
mov
cmp
call
es
cmp
xor
cmp
push
shl
jmp
test
xchg
pop
push
sbb
xor
mov
xor
jmp
outs
out
pusha
leave
cmp
fs
call
ins
xor
mov
adc
add
xor
ds
jno
cmp
sbb
pusha
xor
pop
stos
mov
int3
sbb
and
cdq
sbb
ds
outs
fnsave
cmps
call
sar
es
call
mov
jecxz
mov
mov
or
repz
dec
mov
cld
fmul
(bad)
cs
adc
push
retf
mov
inc
cli
ret
add
mov
mov
mov
xor
lds
cwde
sbb
jno
fsub
loop
imul
or
dec
sbb
outs
out
push
movs
rcr
inc
inc
iret
jmp
out
mov
xchg
gs
dec
or
shr
fcomp
and
or
inc
aad
repnz
outs
pop
ja
or
inc
les
sbb
jae
(bad)
jmp
cmp
popa
ja
sbb
data16
das
pop
cmp
add
push
jo
mov
scas
aas
add
cmp
shr
and
jle
xor
cmp
shl
dec
mov
sbb
lods
xchg
mov
ret
ror
pusha
cli
mov
jl
sub
cmp
sub
nop
or
inc
dec
xor
push
cmc
or
sbb
pop
arpl
fwait
out
and
sub
addr16
(bad)
mov
push
inc
and
test
adc
push
xor
popa
ficomp
cmp
jae
pop
ja
mov
shl
jno
pandn
ja
or
movs
mov
mov
xchg
add
pop
pop
or
jl
loope
cmp
add
iret
push
push
ins
cmp
cmp
xor
addr16
(bad)
leave
in
mov
adc
sub
pop
mov
test
xor
aas
loope
cli
mov
mov
ja
inc
mov
jnp
inc
mov
into
or
stc
pop
jmp
jne
hlt
mov
push
loop
inc
and
cs
ds
sub
xor
addr16
jl
cld
lods
pop
xor
inc
les
pop
inc
scas
(bad)
sub
xchg
scas
lock
shl
adc
pop
mov
adc
jmp
dec
add
shr
push
(bad)
aas
sub
and
pop
xor
in
mov
xchg
retf
sbb
sahf
rcr
xlat
inc
cs
fmul
push
ret
mov
inc
cmc
push
xchg
aaa
icebp
mov
xchg
inc
jmp
icebp
mov
jnp
(bad)
loopne
dec
fdiv
mov
push
inc
or
or
jo
inc
ins
out
push
mov
cld
xchg
ins
rep
jo
xor
test
pop
mov
js
or
or
xor
mov
ror
dec
cmp
das
xor
cdq
xchg
sbb
loopne
int
cmp
and
mov
jge
push
lods
test
popa
sub
pop
mov
sub
retf
imul
adc
imul
loope
loope
mov
sub
xor
inc
fistp
setge
out
test
dec
pop
push
scas
dec
cmc
popf
fnstsw
mov
pop
cs
sbb
add
xchg
movs
jmp
test
lds
lahf
pop
cmp
(bad)
pop
int3
rcr
cli
ja
cmp
aad
push
adc
or
sbb
xchg
mov
xchg
cmp
push
sub
mov
fwait
mul
fwait
xlat
sbb
dec
scas
xchg
fld
pusha
xchg
mov
mov
repnz
jle
xchg
cld
cwde
retf
pop
cmc
jmp
and
jg
cmps
and
in
adc
loope
cmc
aaa
loope
ds
xor
lahf
jnp
retf
retf
or
jae
stos
js
sbb
shr
call
xor
adc
inc
daa
inc
cmp
mov
les
aam
dec
push
rol
sub
sub
sar
addr16
dec
and
sub
mov
or
mov
or
sbb
sbb
int
inc
xor
movs
lods
sahf
scas
mov
or
int
pushf
int3
add
pop
push
ds
pop
dec
clc
push
sub
cmc
inc
mov
scas
jg
sub
push
rcl
rol
xchg
bnd
scas
mov
int
inc
in
jmp
out
sbb
iret
sar
ds
xchg
jnp
test
push
pop
lea
stos
in
imul
adc
iret
lock
data16
in
inc
bound
ins
icebp
adc
and
pop
sub
mov
mov
xor
sub
test
and
xor
mov
mov
out
test
movs
xchg
xor
sbb
xlat
popa
int
loopne
jne
ror
xor
jg
jmp
xor
and
cmps
(bad)
adc
adc
pop
cmp
push
gs
or
and
inc
std
clc
sbb
jb
and
sbb
xchg
or
cmp
push
inc
hlt
push
mov
push
xchg
iret
cld
push
or
hlt
inc
mov
ins
pusha
popf
fs
ja
das
jo
(bad)
test
mov
outs
(bad)
lds
fmul
loopne
cmp
mov
mov
inc
fld
or
mov
cli
lods
mov
enter
dec
inc
icebp
adc
icebp
cdq
mov
pop
out
jno
fs
scas
test
pusha
sbb
pushf
sbb
in
cmc
call
(bad)
jb
shl
neg
test
cmc
in
std
push
mov
(bad)
(bad)
rol
lahf
cs
push
inc
or
cmps
mov
shr
sbb
sbb
inc
out
arpl
js
jle
sub
xor
lds
fdiv
mov
sbb
ret
(bad)
mov
xlat
adc
pop
mov
cmp
inc
inc
int3
or
lock
dec
dec
lahf
sbb
jp
mov
sbb
xor
xchg
fiadd
iret
mov
or
in
mul
push
lahf
or
pop
scas
jle
(bad)
mov
test
and
push
fdiv
mov
popf
mov
mov
push
fwait
mov
inc
push
xor
or
fwait
sbb
xchg
mov
xchg
jl
dec
pop
mov
dec
clc
sbb
fmul
lods
xor
stc
sub
or
lock
mov
mov
loope
movs
push
xchg
mov
pop
inc
test
std
ds
inc
lahf
call
sbb
rcl
ss
inc
(bad)
jp
adc
inc
jnp
jmp
mov
sbb
xchg
enter
push
xchg
add
cld
mov
jae
jae
out
sbb
mov
mov
jnp
out
lock
xchg
loope
ret
xchg
fsub
clc
pusha
mov
mov
mov
cmp
adc
pushf
ror
ins
out
xor
into
mov
lahf
rcl
dec
sub
mov
xor
xchg
jmp
add
loope
neg
sahf
jbe
rcr
imul
sub
add
ja
push
jmp
pusha
and
add
retf
sbb
jge
jnp
xor
or
or
ds
loope
push
movs
push
mov
add
xlat
in
bound
cld
popf
in
popf
mov
xor
das
jo
enter
sbb
repz
cmp
xchg
dec
lods
adc
into
push
fdiv
lods
mov
test
sub
sti
clc
iret
daa
sub
loopne
out
mov
mov
scas
loop
movs
mov
adc
mov
push
pop
mov
ja
mov
mov
out
mov
inc
adc
jg
aad
ret
int3
sbb
daa
aam
mov
jno
cmp
div
add
sbb
mov
mov
sbb
popa
aas
test
fidivr
ror
jnp
nop
gs
shr
stos
cmp
shl
out
mov
out
sbb
jo
jge
lods
hlt
adc
inc
adc
cmps
test
add
ret
jbe
xor
cli
pop
test
sbb
and
cdq
mov
cmp
ret
and
ja
xchg
aaa
ins
nop
jo
out
(bad)
dec
loop
js
inc
add
xchg
bound
dec
pop
movs
jnp
repz
mov
fadd
sub
sbb
jns
sti
je
push
xor
aas
pop
test
push
push
mov
xor
xor
out
pop
cmp
or
frstor
cmp
je
cld
clc
mov
cmps
cmp
xchg
push
sar
xchg
add
or
cdq
hlt
out
cld
(bad)
aaa
stc
sar
sar
or
pushf
pop
jbe
or
and
out
sub
jb
mov
(bad)
xor
pusha
ficom
arpl
ret
or
fist
adc
or
cwde
gs
add
or
add
stos
int3
sub
das
sub
or
cdq
sub
scas
outs
xchg
push
inc
ins
xlat
jne
pop
aam
arpl
push
push
(bad)
jl
jmp
and
jo
test
out
adc
and
jl
icebp
lods
dec
loopne
xor
and
and
lods
mov
dec
pop
push
mov
inc
bound
xchg
js
mov
push
cmps
mov
imul
mov
ret
jecxz
jmp
out
xchg
shl
call
jo
daa
fist
xor
rol
lods
loope
lock
dec
leave
xchg
adc
fnstsw
mov
ds
clc
jnp
jae
xor
inc
div
or
ret
xor
pushf
mov
(bad)
cmc
test
push
test
hlt
add
sub
jnp
cmp
mov
push
fisttp
mov
dec
aam
ins
sti
fild
mov
repnz
mov
xor
adc
xor
mov
cmc
int3
push
cmp
call
push
js
hlt
sub
hlt
dec
cmp
xor
mov
in
pop
xchg
ss
mov
test
ret
test
aam
mov
dec
mov
shl
mov
add
repz
(bad)
rcl
xor
mov
mov
call
(bad)
fwait
add
pop
add
test
mov
enter
inc
dec
pop
sbb
sbb
or
fst
shl
xor
(bad)
call
cmp
pop
add
rcl
jnp
(bad)
ins
lahf
retf
enter
js
adc
or
in
adc
sub
fsubr
sbb
push
xor
fincstp
dec
jnp
(bad)
mov
add
ss
jle
jl
push
sbb
add
(bad)
mov
(bad)
leave
sub
outs
into
lahf
xchg
jne
dec
xchg
pop
jae
jl
and
es
adc
and
in
ja
jg
(bad)
mov
jbe
fs
hlt
fwait
sbb
push
int3
jbe
loopne
cwde
mov
call
jno
in
sbb
jge
jg
xchg
sbb
dec
pop
mov
sahf
std
rol
in
pop
mov
pop
leave
jns
pusha
mov
imul
sub
mov
inc
pop
lock
fucomi
je
std
cmp
add
dec
into
js
cmp
dec
xchg
push
into
daa
fcmovnbe
push
fnsave
xor
mov
xchg
shl
jl
push
js
xchg
lahf
int
stos
loope
in
aad
and
aaa
pop
test
push
sub
cld
cmp
sbb
cmp
mov
push
and
iret
jg
inc
out
cli
sahf
pop
dec
imul
es
popa
and
cmp
pop
jb
mov
shl
mov
jmp
jmp
inc
mov
mov
cmp
inc
jmp
and
add
add
sub
cmp
mov
or
sub
sbb
ret
call
inc
aam
hlt
mov
sub
mov
dec
jp
jmp
jle
sbb
aam
test
push
dec
inc
(bad)
pop
push
cdq
ss
dec
in
push
movs
inc
pop
dec
cmps
mov
jnp
pop
retf
shl
or
sbb
jae
retf
xor
mov
pop
sub
push
dec
jno
xchg
bound
pop
out
rol
rol
popa
cmp
scas
xor
inc
(bad)
pusha
xchg
mov
cmp
cmp
adc
jle
xlat
dec
arpl
ins
(bad)
ins
cmps
xor
xor
psubusw
sub
pop
std
(bad)
or
out
mov
ds
out
mov
mov
dec
fnstsw
icebp
xor
cmp
xchg
cmps
inc
or
fcmovne
xchg
jmp
test
(bad)
test
cmp
mov
and
mov
or
dec
cmps
leave
loopne
mov
and
cmp
pop
cmp
fimul
pop
adc
sub
pop
xchg
adc
sbb
arpl
fdivp
mov
pop
call
imul
mov
jmp
int3
mov
fild
(bad)
sbb
in
mov
(bad)
sub
es
cmp
mov
cmp
cmps
push
lock
data16
xchg
sub
dec
test
fnstsw
(bad)
out
retf
cmc
sbb
sbb
inc
pop
jmp
outs
xor
imul
loop
pop
stos
pop
dec
cmp
cmps
mov
cmps
push
pusha
int3
and
test
inc
pop
loopne
inc
mov
ins
loop
mov
fs
mov
cmp
scas
dec
xor
cmp
fdiv
add
mov
inc
mov
cmp
lea
pop
adc
lods
in
retf
(bad)
cmp
test
dec
mov
mov
jl
test
or
(bad)
imul
xchg
sahf
retf
add
pop
out
push
es
les
xchg
mov
mov
lahf
or
sbb
pop
clc
enter
retf
hlt
fcomp
call
cli
push
nop
fucomip
xchg
inc
pusha
sti
loop
out
imul
outs
cld
je
pop
xor
iret
mov
mov
cmp
pop
dec
sub
xor
inc
jle
or
ds
lock
sub
outs
xchg
icebp
push
sbb
add
sub
adc
retf
jmp
mov
das
nop
mov
addr16
mov
jmp
or
in
jge
mov
add
xchg
adc
or
or
mov
sbb
sub
js
int3
lods
pop
sbb
fbld
aaa
retf
add
loop
cmp
xchg
adc
mov
jmp
cld
fidivr
pop
aas
es
hlt
sti
xor
add
(bad)
test
dec
jae
std
xor
mov
loope
add
dec
add
sub
sbb
test
cmp
cmc
rcl
cli
stos
test
sti
pop
js
jbe
mov
out
pushf
test
sti
into
mov
in
es
pusha
stos
xchg
call
mov
in
cmp
jcxz
mov
ja
aaa
(bad)
push
fucomip
jl
mov
in
add
push
shl
loope
outs
pop
(bad)
pop
jne
in
mov
cmps
and
sahf
and
stos
push
fisttp
mov
cs
ins
pop
mov
mov
pop
js
(bad)
repnz
in
lods
pop
out
or
ss
mov
pushf
sub
add
fmul
inc
movs
xchg
or
add
pop
sahf
fs
adc
xor
xor
ror
repz
push
fisubr
clc
cs
int3
hlt
jns
mov
aam
jmp
cmp
in
mov
scas
push
sbb
(bad)
fidivr
cmp
ret
xor
pop
dec
sbb
shr
outs
pushf
mov
mov
and
mul
cmp
jg
js
add
mov
addr16
rcl
cmp
aam
sti
mov
xchg
push
imul
mov
sahf
loopne
call
lock
jnp
mov
scas
fild
jnp
add
sub
xchg
and
xchg
add
icebp
mov
cmp
sbb
sbb
xchg
jb
and
dec
adc
sbb
push
jne
scas
adc
shl
or
test
jge
imul
jb
cmps
jl
xor
lds
and
data16
mov
out
jae
and
xor
mov
dec
sub
pushf
xchg
inc
pusha
(bad)
sar
mov
or
dec
or
jo
stos
pop
fs
das
push
add
int3
loope
ret
fisubr
dec
and
push
jno
mov
icebp
xchg
pop
pop
xor
xchg
inc
mov
mov
std
mov
inc
mov
scas
iret
sub
fucomp
loop
sbb
lds
gs
xchg
push
int
lds
ss
dec
dec
pushf
in
dec
cmps
stos
push
scas
xor
cmp
inc
sub
xchg
aas
inc
push
retfw
fsubr
mov
sub
mov
sbb
mov
loop
out
jle
jmp
pusha
dec
fmul
test
add
cmc
xor
scas
push
aad
jo
xchg
or
pop
or
sub
(bad)
dec
xor
add
retf
cmps
sbb
push
and
popf
xchg
dec
jns
jge
cdq
fdiv
add
xchg
jae
mov
aad
xchg
(bad)
sub
retf
hlt
sub
int3
mov
cwde
call
cmc
into
mov
add
mov
aad
or
jno
les
adc
pushw
adc
mov
(bad)
fisttp
repz
xor
imul
xchg
add
addr16
popa
push
imul
or
pop
or
pop
stos
mov
jl
dec
dec
clc
push
xor
lahf
push
cmp
stc
in
ret
pshufw
sub
mov
dec
adc
mov
jmp
es
and
mov
cs
imul
sahf
mov
mov
jle
dec
stos
jecxz
mov
push
pushf
imul
int3
stc
sahf
or
jg
imul
adc
cmp
ins
dec
adc
sahf
jg
js
neg
inc
repnz
fwait
rdmsr
sbb
cmc
ror
sbb
int
fdivr
out
adc
mov
push
pop
xchg
clc
test
pop
test
dec
mov
mov
inc
scas
cmc
fiadd
shl
xchg
loopne
cmp
dec
sar
and
rol
inc
and
add
fdivr
add
adc
loopne
mov
and
mov
mov
and
stc
sub
shl
leave
(bad)
ins
(bad)
jno
or
jmp
call
es
mov
mov
(bad)
pop
cmps
stos
sbb
stos
das
mov
jns
xchg
mov
sbb
(bad)
mov
cmps
jmp
push
add
cmc
cli
pop
call
or
sbb
mov
out
fs
into
sbb
aas
in
sti
mov
adc
test
push
xor
mov
lahf
add
xor
add
fwait
iret
add
sub
in
paddusb
jmp
(bad)
mov
push
fwait
test
fdiv
loopne
sbb
dec
xchg
inc
cli
dec
xchg
xchg
mov
movs
and
mov
test
jmp
movs
test
cdq
cmp
ins
jo
(bad)
jae
test
stos
lahf
mov
test
pop
test
aad
cmp
loope
pop
das
and
stos
or
retf
jo
mov
sub
inc
movs
push
hlt
push
dec
jmp
xlat
pushf
gs
call
fistp
addr16
cmp
cmps
and
xchg
and
and
or
pop
inc
sub
ror
sub
or
mov
xlat
cld
and
jnp
sbb
jmp
ins
mov
ret
repz
ror
xchg
sub
mov
adc
push
aas
sbb
mov
ret
inc
mov
or
dec
jle
cli
shr
pop
jno
cwde
or
ds
test
mov
fldenv
xchg
xchg
cdq
pushf
daa
mov
fistp
fdiv
(bad)
and
outs
sbb
or
xchg
scas
ror
add
adc
fcom
cmp
cmp
pop
pop
test
xchg
and
and
lods
in
xor
add
mov
mov
cdq
shr
scas
and
adc
sbb
clc
cmp
imul
mov
mov
mov
sahf
push
ret
sbb
xor
stos
gs
cld
or
or
pop
push
xchg
push
push
imul
xchg
dec
(bad)
mov
mov
push
(bad)
shl
cmc
pop
shr
call
dec
dec
mov
(bad)
ret
xchg
jecxz
ret
add
in
(bad)
hlt
int3
mov
sbb
xchg
push
das
outs
dec
movs
cli
hlt
xchg
inc
xchg
jmp
es
push
adc
jg
mov
dec
pop
cwde
in
dec
push
mov
jne
ins
push
mov
xchg
ins
sub
or
jp
(bad)
xor
(bad)
scas
xchg
mov
jl
adc
or
and
fs
and
mov
in
adc
sub
push
sub
arpl
jnp
test
push
mov
loop
popf
dec
imul
arpl
je
push
fcmovnb
pop
mul
push
cmp
retf
inc
repz
cmp
fisttp
jbe
repnz
jb
adc
inc
leave
pop
xor
push
sub
je
sbb
jae
int
ret
out
gs
fidivr
and
call
push
mov
xor
inc
cmps
jns
out
fsubr
jno
iret
pop
shl
sub
xor
or
nop
inc
ins
mov
push
inc
shl
dec
add
cmp
je
cmp
mov
adc
jo
xor
jmp
out
into
stos
add
mov
fmul
sub
xor
jo
fsubr
dec
sbb
cwde
sub
cdq
sbb
add
ja
push
fst
mov
jecxz
pop
cli
popf
push
jbe
cmp
cmp
(bad)
fsubr
push
cmp
outs
dec
dec
je
fcom
cli
mov
popa
jge
lods
cli
xchg
ja
xchg
int
(bad)
test
mov
shl
out
pop
out
mov
imul
mov
rcr
cli
sbb
clc
pop
jmp
popf
jne
jbe
mov
and
fs
fadd
cmp
and
icebp
dec
push
push
rcl
adc
mov
popa
pop
add
loop
jo
dec
(bad)
hlt
jne
sub
cld
and
pop
in
push
dec
sub
repnz
push
inc
jae
mov
repnz
iret
sbb
ret
jle
push
ins
mov
imul
jmp
(bad)
sub
jle
mov
mov
ficomp
pusha
test
cdq
pop
sbb
adc
sub
mov
fisubr
int3
cli
daa
rol
adc
or
fild
stc
in
les
addr16
and
mov
mov
mov
cmp
pop
mov
or
sbb
sbb
adc
aaa
cmp
nop
retf
in
inc
xlat
xchg
cmc
cmc
ret
inc
pop
mov
mov
sbb
jno
mov
cmp
sbb
and
std
mov
mov
add
das
retf
fwait
pushf
nop
mov
push
jae
mov
add
adc
xlat
call
int3
lds
pop
aaa
fcomp
mov
leave
dec
(bad)
jo
int3
inc
xchg
cld
(bad)
push
mov
mov
sub
and
pop
popf
dec
dec
gs
(bad)
lds
mov
pop
pop
lods
dec
or
pop
or
out
fnstenv
arpl
jmp
idiv
pop
into
stos
xchg
iret
das
cmp
pop
sbb
fiadd
adc
cdq
sti
(bad)
iret
sbb
leave
jmp
inc
jb
out
add
div
xchg
in
jg
push
and
bound
retf
ins
aas
imul
sbb
and
cwde
ds
das
test
sbb
mov
(bad)
jle
cmp
push
pop
xchg
shl
jns
mov
cmps
or
pop
mov
xor
(bad)
leave
loop
adc
bound
(bad)
xchg
or
lahf
pop
and
ror
fst
cmp
shl
pop
sub
cmp
imul
pusha
mov
cmps
(bad)
jbe
into
mov
or
jl
aam
fbstp
cld
push
fdiv
hlt
enter
in
push
rol
add
ja
cmc
mov
push
(bad)
xchg
sahf
shr
ja
loop
test
mov
cmc
iret
pop
ja
std
pop
(bad)
mov
or
jns
sub
or
test
ins
lods
stos
in
js
mov
loope
loop
mov
mov
sbb
xchg
std
sbb
fldenv
sub
cmp
xchg
inc
fiadd
sbb
jmp
lods
mov
mov
aad
je
jg
cmps
ja
dec
ficomp
addr16
mov
add
addr16
lahf
mov
rol
inc
inc
jns
dec
loop
jl
and
mov
mul
fsub
inc
arpl
cmps
mov
mov
push
pop
pop
test
sub
jne
inc
aas
lea
dec
aaa
mov
inc
fbstp
repz
push
je
xchg
dec
push
mov
test
mov
add
lock
adc
ins
fistp
push
aas
dec
xchg
pusha
lock
je
shrd
test
aad
and
jo
and
inc
ins
call
xor
data16
std
lds
jbe
dec
adc
enter
inc
cdq
pop
lds
adc
into
cmp
xor
arpl
jmp
(bad)
cli
neg
iret
lock
(bad)
sbb
cmp
pop
es
scas
movs
sbb
sbb
fstp
ror
outs
mov
cdq
push
jnp
hlt
add
jp
jbe
sbb
aaa
push
mov
es
lds
inc
lea
enter
fild
dec
rcl
cmp
jl
mov
add
test
and
rol
in
rcl
lock
outs
test
xlat
xchg
xchg
mov
les
jbe
(bad)
adc
daa
aad
cmp
repnz
mov
ins
cs
call
sub
mov
pushf
das
push
jnp
cmp
mov
adc
sub
push
pop
jp
aam
dec
fadd
xchg
pushf
fadd
out
or
pusha
jp
mov
ins
inc
(bad)
cmp
xchg
sbb
adc
out
push
(bad)
movs
in
sar
or
gs
out
ss
test
sbb
not
mov
imul
fisttp
(bad)
cdq
jl
fisubr
es
or
pop
popa
xor
pushf
test
aaa
lds
or
shr
or
inc
cdq
adc
dec
cmps
fcmovnb
fdivr
mov
jmp
adc
movs
inc
or
fwait
mov
mov
leave
push
mov
pop
mov
mov
push
mov
arpl
cdq
daa
fwait
je
sbb
sub
jae
or
and
pushf
push
inc
out
fisub
paddd
es
lds
jecxz
aaa
mov
xchg
sub
aaa
in
xor
dec
mov
lock
jnp
push
adc
std
fidiv
sbb
sub
(bad)
jle
in
(bad)
das
cld
and
hlt
mov
adc
(bad)
cld
push
in
ficomp
aam
cmc
inc
dec
gs
jge
cmc
and
sub
aas
je
movs
add
pushf
nop
jo
inc
mov
hlt
out
ret
popa
std
leave
xchg
(bad)
xor
mov
push
xor
pushf
mov
cdq
mov
cmps
dec
sbb
lock
jmp
into
addr16
out
adc
cmps
cmp
xor
xlat
cmp
ret
mov
repz
or
cdq
lods
retf
in
lahf
push
sahf
dec
jge
inc
(bad)
push
jbe
daa
lods
in
mov
mov
repz
idiv
lock
jns
inc
(bad)
push
sbb
and
push
and
inc
imul
imul
ins
add
cmps
repnz
loope
jno
or
pushf
arpl
cmp
xlat
mov
push
mov
dec
pop
popf
dec
pusha
test
mov
adc
ror
jmp
xchg
cmp
popf
or
ror
push
imul
xlat
cli
jnp
es
movs
inc
xor
aaa
mov
frstor
add
jae
xchg
xchg
sub
gs
xchg
and
push
loopne
sub
or
imul
jmp
push
in
mov
or
stos
push
xchg
jne
ret
mov
push
push
cmp
aad
or
dec
or
mov
jle
repz
jecxz
popa
ss
push
dec
jns
inc
push
cdq
xlat
(bad)
jns
xor
retf
jp
jns
and
js
fwait
jmp
(bad)
sub
mov
hlt
aas
mov
test
lock
xlat
or
mov
sti
test
pop
pop
in
or
in
sti
in
push
dec
mov
adc
nop
mov
cmp
mov
pop
fbld
cwde
iret
outs
or
jmp
shr
rcl
loop
in
inc
jp
in
or
ins
in
jmp
cs
dec
inc
dec
test
stos
push
xchg
scas
mov
and
inc
jecxz
jg
dec
or
retf
not
push
push
lahf
ret
cld
sbb
dec
push
shl
mov
adc
popf
push
push
call
xor
sbb
jecxz
xor
and
cwd
push
xor
dec
test
mov
mov
fs
pusha
stc
daa
mov
mov
mov
or
imul
daa
jmp
int3
xor
int3
mov
in
pop
sbb
xchg
and
push
hlt
(bad)
imul
daa
push
lods
sub
(bad)
sti
hlt
pop
out
aad
xchg
fdiv
loop
ja
sub
and
and
retf
(bad)
(bad)
call
(bad)
das
jmp
iret
or
xchg
cmps
mov
js
cmp
pop
mov
jnp
and
mov
inc
jno
js
sahf
(bad)
aad
push
push
jg
cmp
ret
push
or
sbb
jecxz
mov
dec
jno
sbb
and
xchg
cli
addr16
test
mov
lods
cwde
mov
aam
push
adc
aas
iret
dec
leave
loopne
sub
sub
fwait
jmp
shl
add
aad
sbb
fistp
pusha
loope
nop
pushw
inc
fs
ja
xchg
aas
mov
ins
sub
sub
stos
loopne
std
inc
jne
sbb
mov
mov
adc
jle
aam
xchg
pushf
into
push
xchg
cmp
mov
ret
mov
lods
rol
jae
xchg
mov
add
add
popa
push
mov
push
(bad)
outs
push
popf
dec
pop
pop
outs
test
(bad)
push
adc
jmp
in
ds
add
cmp
and
pop
xor
inc
fs
in
aas
int
std
shr
adc
mov
cdq
push
pop
ret
adc
lds
sbb
sbb
(bad)
std
mul
jno
pop
les
cmc
mov
jb
xchg
inc
mov
imul
pop
sbb
pop
aam
add
daa
(bad)
loop
and
mov
or
dec
(bad)
int3
out
dec
dec
aaa
and
sbb
cmps
fadd
loope
and
and
nop
mov
xchg
dec
cmp
idiv
jae
adc
(bad)
cmp
shl
cmps
push
xchg
in
leave
xor
rcl
inc
pop
test
push
push
xor
cdq
in
rol
jns
test
das
cmps
xchg
and
mov
loop
mov
push
fsubr
hlt
sbb
mov
(bad)
test
jl
stc
sub
test
pop
imul
call
push
jne
lods
lahf
(bad)
mov
hlt
mov
xchg
adc
(bad)
mov
je
pop
mov
push
leave
iret
mov
cmp
imul
or
mov
mov
fisubr
das
aad
lea
mov
ins
fild
xchg
cmp
sub
movs
jno
stc
mov
adc
ret
dec
movs
inc
xor
into
xchg
pop
jmp
dec
out
scas
data16
or
mov
aad
sahf
xor
mov
test
or
mov
and
je
in
mov
push
shl
fstp
jbe
aas
xor
push
clc
xor
idiv
dec
mov
mov
cli
mov
(bad)
inc
inc
inc
hlt
pop
push
int
add
in
inc
sub
jl
push
pop
sbb
dec
sbb
add
call
xor
out
push
popf
stc
push
mov
stos
stos
xor
push
adc
mov
retf
adc
int3
cmp
dec
test
sbb
sub
ret
aad
sbb
ret
inc
bt
mov
push
pop
ds
jmp
pop
sbb
xchg
dec
mov
jle
sbb
pop
hlt
into
pop
push
rcr
pusha
imul
stos
cmp
jg
or
outs
push
sub
pusha
or
or
mov
xchg
mov
pop
loope
jge
inc
mov
adc
loopne
ds
retf
adc
xlat
cmc
push
mov
leave
in
xor
adc
dec
dec
mov
jnp
jmp
retf
or
sbb
push
cwde
xor
ins
mov
jmp
jp
push
mov
(bad)
into
xchg
lahf
enter
rcl
xor
mov
push
adc
sbb
repnz
aad
(bad)
scas
inc
in
push
xlat
ja
arpl
out
sub
mov
xor
jge
rol
or
int3
push
jmp
mov
repz
retf
xor
adc
call
lods
xor
fimul
pop
jbe
xchg
sahf
mov
stos
nop
rol
push
in
sub
or
push
mov
xchg
call
inc
and
jnp
cmp
int
loopne
push
(bad)
in
sbb
sub
jmp
imul
pop
dec
xchg
add
and
and
in
shl
inc
out
inc
sahf
mov
pusha
jl
pop
dec
cdq
cdq
aam
push
inc
popa
mov
sbb
pusha
les
mov
outs
(bad)
div
adc
sub
gs
inc
in
sar
(bad)
jns
xor
out
stos
inc
es
mov
pop
mov
mov
mov
ins
stos
sub
mov
or
mov
rcr
test
xor
call
cwde
xchg
xchg
loope
leave
push
cli
in
xchg
movs
dec
fdivr
test
pusha
and
neg
or
clc
push
dec
cdq
mov
mov
(bad)
xchg
mov
js
je
xchg
xchg
pop
push
sti
xor
xchg
inc
pop
shr
push
pop
imul
fidiv
and
mov
loopne
fiadd
inc
sbb
(bad)
cmp
pop
test
sbb
add
mov
shl
inc
jmp
push
(bad)
rcl
or
idiv
std
in
inc
and
xchg
fs
add
ja
sub
retf
xchg
push
test
dec
mov
ins
stc
and
cli
mov
mov
loope
leave
mov
pusha
sbb
pop
fadd
push
popf
jnp
int
jno
ss
add
xchg
daa
adc
adc
loopne
xor
mov
sub
mov
mov
sti
adc
outs
clc
cli
cwde
pop
jno
jp
int
mov
std
and
(bad)
test
ja
push
jecxz
stos
add
fwait
arpl
cmps
movs
pop
lods
sbb
mov
ins
adc
das
leave
aas
les
test
retf
stos
jmp
jno
je
jmp
xchg
mov
test
inc
cs
idiv
test
mov
ret
dec
sbb
sub
ja
jae
push
jle
rcl
dec
daa
mov
les
hlt
pop
mov
enter
sti
jo
pop
fnstsw
inc
call
or
jo
aam
stos
add
add
cmp
ret
imul
pop
dec
jnp
xor
dec
or
out
or
inc
xchg
xchg
pop
cmp
mov
push
scas
dec
pusha
pop
in
jb
shr
(bad)
(bad)
outs
cmp
(bad)
fidiv
mov
arpl
push
fimul
loop
xchg
(bad)
mov
pop
dec
mov
push
inc
jns
xchg
shr
jmp
into
int3
(bad)
xchg
jb
out
or
xchg
xchg
xchg
cmps
and
or
lods
das
mov
ret
pop
outs
popf
stc
cmc
outs
(bad)
xor
leave
xchg
mov
(bad)
sub
leave
push
sbb
inc
mov
cmp
pop
stos
and
jns
ss
mov
sahf
stos
in
and
fimul
jmp
lods
clc
hlt
dec
movs
sbb
scas
imul
scas
cmp
xchg
or
lds
sbb
add
xor
lods
push
pop
adc
push
xchg
repz
or
xchg
jno
jle
imul
div
cmps
mov
mov
inc
iret
jb
rol
ficom
call
add
adc
push
scas
repz
pushf
inc
shl
aas
mov
dec
mov
sbb
rcl
pop
je
fild
inc
ins
inc
enter
leave
retf
cmps
dec
cmp
int
cmps
push
cdq
test
add
inc
das
sub
jmp
outs
mov
pop
add
out
push
ret
loop
out
(bad)
loop
fild
adc
fwait
adc
xchg
cld
fcmove
sbb
mov
jp
jnp
mov
lods
mov
push
or
clc
inc
push
lahf
ja
sbb
aad
sub
add
icebp
jbe
inc
mov
jg
ds
sub
ins
add
retf
inc
and
and
xor
pop
and
inc
hlt
aaa
xchg
add
xchg
inc
mov
pop
stos
in
adc
(bad)
stos
cmp
push
lahf
loopne
scas
and
mov
mov
pop
fs
lds
(bad)
ja
push
out
push
push
mov
aad
cdq
mov
xchg
arpl
cmc
dec
and
aam
xchg
xor
jns
and
or
(bad)
mov
pop
test
hlt
bound
inc
jl
jle
ins
sub
fnstsw
inc
shl
jmp
dec
inc
pop
stc
fisub
mov
jnp
sub
sub
xor
arpl
ret
pop
loope
lods
ins
sub
jecxz
add
popf
call
pop
lahf
mov
push
jb
test
push
ja
idiv
imul
dec
mov
dec
adc
pop
call
inc
xchg
or
outs
jp
jne
neg
stc
add
inc
int
mov
adc
pusha
or
or
scas
jb
popf
(bad)
pop
sbb
(bad)
cmp
add
jmp
out
fisub
fwait
outs
jae
jne
rcl
das
or
mov
pop
fucomi
add
adc
and
xor
scas
cmp
pusha
push
adc
das
or
mov
and
adc
xor
sub
add
pmovmskb
add
or
jo
ret
push
enter
xlat
adc
cmp
push
inc
inc
aad
aad
ret
inc
cmp
clc
pusha
jmp
movs
adc
push
sbb
pop
mov
je
xor
std
imul
fnstcw
test
mov
inc
adc
stos
mov
(bad)
daa
and
lods
fsubr
push
push
jecxz
lds
inc
sbb
in
mov
loop
pop
das
and
inc
and
push
add
(bad)
mov
cli
cmps
dec
fcom
jmp
add
mov
push
(bad)
std
add
dec
stc
std
pushf
mov
mov
and
or
or
cmp
enter
cs
pop
xor
stos
pop
xor
jne
mov
fisub
outs
daa
mov
arpl
jmp
jne
xchg
out
test
pusha
mov
cmp
mov
pop
aad
fdiv
frstor
das
addr16
bound
out
jmp
test
nop
jo
imul
(bad)
xor
mov
mov
out
inc
stc
mov
jmp
outs
pop
sbb
inc
xor
mov
xor
cdq
sbb
cmp
sub
fistp
dec
ret
pusha
mov
sbb
icebp
mov
push
(bad)
sub
lock
xor
cld
adc
sahf
nop
and
imul
jns
inc
sti
repz
test
and
ja
cmp
cli
push
cmp
fisttp
das
pusha
pop
cld
das
dec
mov
mov
jp
stos
test
addr16
xor
imul
push
xor
push
mov
mov
es
sti
xchg
ins
mov
icebp
xchg
xchg
scas
xor
cmp
aad
dec
movs
add
jo
imul
dec
ror
mov
dec
lea
dec
mov
cmps
adc
outs
jb
in
mov
loopne
(bad)
push
xor
aas
shr
cmps
aad
addr16
loope
dec
jae
add
clc
and
xlat
seto
add
int
pop
xor
xor
(bad)
hlt
jp
cmp
cmp
imul
mov
sub
mov
and
push
fisubr
xor
fadd
cmp
std
sbb
or
sub
pushf
pop
sub
mov
retf
mov
jmp
push
in
ss
adc
ss
(bad)
enter
sbb
mov
pop
std
mov
(bad)
ffreep
pop
shr
dec
jns
ror
fbld
icebp
or
cmp
mov
or
mov
test
in
not
dec
into
mov
stos
icebp
pusha
sbb
shl
stc
cmp
xor
pop
mov
or
mov
xor
aad
lahf
nop
cmp
jno
jmp
jle
push
test
push
sahf
add
jno
clc
das
pop
aad
je
jno
cmp
ret
stos
push
test
test
inc
jae
into
mov
and
pop
jae
add
xor
js
lahf
sbb
adc
sti
cmp
call
jo
movs
in
gs
pop
std
add
push
xchg
fidiv
jecxz
repz
push
mov
pusha
vmwrite
inc
sti
mov
inc
pop
(bad)
push
push
out
repz
adc
cld
xchg
push
push
adc
bound
jle
imul
sbb
dec
add
dec
lods
xor
hlt
arpl
lahf
mov
dec
retf
jbe
fdiv
(bad)
test
retf
and
dec
xchg
xchg
mov
movs
(bad)
int3
call
out
mov
jnp
(bad)
jae
out
sbb
movs
mov
(bad)
retf
je
pop
cmp
hlt
or
aas
adc
dec
mov
xchg
or
mov
cmps
movsx
inc
loopne
aad
imul
(bad)
jle
or
dec
mov
mov
mov
mov
test
sub
jecxz
(bad)
les
idiv
inc
adc
sub
xor
jmp
push
mov
mov
out
(bad)
mov
mov
cs
jo
shl
stc
xchg
(bad)
adc
mov
jb
ret
into
push
(bad)
xor
jae
aad
push
jb
movntq
dec
ins
cmp
mov
push
and
adc
scas
adc
rcr
sar
or
sbb
xchg
mov
and
dec
je
addr16
add
adc
pop
mov
call
and
dec
add
mov
(bad)
pop
mov
adc
jmp
lahf
xor
jns
xor
or
and
push
jo
inc
sahf
loopne
pop
add
mov
add
sbb
call
pop
add
jo
cwde
imul
push
add
(bad)
movs
int3
dec
aas
out
push
imul
sub
pushf
jo
sub
mov
js
imul
pop
pop
push
jle
ss
push
inc
mov
sub
sub
inc
(bad)
sbb
in
retf
jecxz
fild
enter
xchg
loope
mov
mov
es
inc
retf
int
add
dec
xchg
div
int3
hlt
or
xor
adc
imul
or
int3
in
jns
rcr
mov
push
xchg
cmps
mov
in
outs
inc
movs
shl
sub
jp
dec
cmp
inc
shl
xor
and
clc
out
in
xchg
dec
inc
add
imul
in
ficom
aam
adc
lods
sub
sbb
mov
out
mov
fnsetpm(287
fcmovnb
and
das
fisttp
push
push
cmp
in
inc
iret
das
sahf
adc
sar
fadd
sub
add
stc
or
lods
cmp
fisubr
xchg
push
adc
add
or
fidiv
xor
or
sub
jp
sahf
cmp
dec
sbb
stos
sub
mov
xchg
mov
loopne
sbb
push
or
mov
cmc
mov
cmp
outs
repz
ins
pushf
xor
fidiv
push
mov
cmp
xchg
jns
gs
fwait
lea
ret
cmp
adc
repz
jmp
cmp
popf
push
int
and
jecxz
lahf
cdq
mov
fld
scas
outs
inc
pusha
lods
dec
add
cwde
into
clc
fnsave
leave
in
ficom
call
ja
cs
lock
nop
in
push
and
rcr
outs
arpl
inc
sbb
jbe
movs
mov
jle
adc
pop
sbb
out
mov
(bad)
xor
xchg
mov
dec
(bad)
jge
sahf
and
aaa
pop
sbb
es
inc
dec
push
dec
fsubr
call
push
bound
and
ja
mov
sub
cmps
ret
push
fisttp
fst
fs
test
jecxz
lds
xor
xor
jno
in
jecxz
inc
mov
cdq
cld
(bad)
fmul
sbb
sbb
dec
xchg
aad
int3
dec
adc
cdq
inc
mov
jne
pop
pusha
ins
js
cmp
xchg
ins
in
and
sar
sub
addr16
add
xor
clc
imul
sbb
sbb
cld
sbb
call
pop
int3
retf
or
scas
cwde
out
sbb
aad
xor
push
fnstsw
sahf
adc
pop
daa
aam
mov
adc
ja
jnp
shl
cli
test
hlt
cmps
sbb
clc
sbb
dec
lahf
clc
adc
aas
out
xor
cmp
mov
int
inc
mov
fs
sub
cs
add
cmc
fild
into
daa
lock
jbe
add
ja
dec
paddusb
mov
push
mov
inc
add
arpl
cmp
jl
lods
(bad)
inc
popa
pop
or
xchg
xor
inc
pop
ret
cmc
mov
cld
mov
ss
adc
xor
mov
and
jp
pop
cmp
jg
ficomp
adc
test
push
test
adc
xchg
jne
stos
bound
ss
and
std
test
jp
mov
mov
retf
sub
stos
aaa
mov
mov
les
mov
mov
in
pop
int
dec
adc
out
data16
pop
jmp
call
sub
dec
xor
(bad)
fcmovb
mov
xor
sahf
dec
add
shl
xor
scas
xchg
sub
das
xor
mov
cdq
(bad)
jg
repnz
jmp
xor
inc
(bad)
sub
cmc
retf
loop
sub
mov
xchg
or
pop
jle
add
mov
sti
mov
sbb
add
mov
inc
adc
and
cmp
xchg
divps
imul
lahf
ret
shl
xor
dec
stos
movs
out
repz
imul
pop
data16
xor
mov
mov
mov
rol
in
repnz
and
in
add
xor
xor
js
mov
mov
scas
cmp
mov
hlt
int
mov
cmp
mov
mov
(bad)
fldcw
addr16
or
movs
ficomp
cmc
mov
stc
mov
popf
push
repnz
daa
pop
jmp
lock
xchg
pop
pusha
push
mov
outs
scas
xchg
pop
xchg
or
jo
popa
ja
inc
aam
xchg
popa
adc
dec
iret
or
or
or
or
sti
imul
sbb
xchg
out
dec
mov
cmp
jmp
dec
repz
sub
lock
rcl
push
fstp
push
or
mov
mov
xor
pop
cdq
mul
stc
outs
les
imul
cmp
sbb
cmps
xchg
pop
retf
shr
and
push
mov
les
fisubr
dec
cmp
leave
inc
sub
dec
outs
add
inc
inc
test
adc
fisubr
js
popa
add
cmps
icebp
jne
adc
rcr
sub
mov
pop
inc
and
jns
xchg
sahf
xchg
into
popa
push
loope
xchg
fiadd
jo
xor
mov
int3
jne
(bad)
push
pushf
data16
xor
add
pop
ins
xor
pop
mov
push
sub
ucomiss
jo
retf
gs
(bad)
retf
mov
arpl
xor
push
(bad)
jmp
jmp
test
push
pop
call
das
idiv
movs
xor
in
jecxz
repz
in
fwait
sub
cmp
inc
mov
popa
pop
mov
(bad)
pusha
sahf
into
jl
jb
test
sbb
rol
or
jp
xchg
and
repz
jne
xchg
outs
sbb
movs
or
cmp
and
popf
jnp
sbb
jbe
mov
sbb
jp
mov
lods
mov
mov
lds
xlat
dec
mov
out
mov
hlt
mov
push
stos
pop
push
and
test
inc
into
daa
or
out
in
adc
adc
rol
stos
or
cmp
jecxz
test
and
mov
xchg
jo
jmp
dec
mov
frstor
mov
mov
and
or
test
inc
dec
cmp
mov
push
mov
(bad)
and
jnp
push
fisubr
pop
outs
push
addr16
arpl
jge
and
add
dec
aam
dec
jne
lahf
icebp
ret
pop
bound
push
xor
dec
loopne
ins
add
xor
loopne
outs
ja
jmp
lea
push
sub
mov
cmp
or
xor
jecxz
cld
ins
xlat
mov
xor
push
out
out
sub
jp
lds
xchg
push
sahf
ror
push
pop
retf
pop
into
push
std
outs
hlt
sbb
into
mov
movs
pusha
pop
out
xor
popa
push
inc
dec
jb
adc
mov
sbb
sti
adc
inc
sti
and
adc
(bad)
push
xor
das
or
out
adc
mov
aaa
xchg
push
dec
push
clc
icebp
mov
xor
inc
std
inc
pop
sbb
push
(bad)
adc
add
sbb
leave
je
mov
cmps
push
sbb
test
mov
popf
fstp
sub
daa
in
and
inc
nop
mov
pop
inc
mov
in
imul
das
push
inc
shr
cs
ss
call
pop
pop
and
movs
fnstenv
neg
push
addr16
mov
push
jns
xchg
mov
and
js
fcomp
out
sub
cvtps2pi
mov
js
stos
pop
jae
fldenv
mov
xor
mov
ficom
cmps
jno
dec
and
pop
dec
inc
jp
sbb
bound
jb
sar
mov
inc
jbe
sti
adc
or
lods
or
cmp
lea
push
and
cmp
sbb
dec
arpl
pop
sbb
cmp
and
adc
repnz
int3
in
xchg
sbb
sti
sbb
stos
cmp
mov
aam
push
or
(bad)
xor
out
mov
xor
ins
jecxz
ins
dec
das
push
jge
hlt
fcom
pop
push
out
xor
cmp
jo
in
nop
or
aaa
imul
or
stos
ret
mov
inc
test
int
sar
cld
into
mov
dec
xchg
adc
mov
imul
and
inc
arpl
inc
sub
test
mov
loope
jb
bnd
test
sub
xchg
and
push
adc
jge
jmp
adc
imul
cmp
sbb
xor
sub
inc
mov
xchg
adc
push
mov
push
and
imul
gs
in
mov
rcr
out
nop
sub
or
jge
iret
dec
dec
enter
inc
xor
dec
add
outs
or
aas
lea
jg
pop
jmp
mov
in
push
loop
mov
pause
out
and
jb
xchg
cmp
je
enter
ja
std
jmp
call
dec
imul
mov
pop
sbb
out
lods
retf
clc
push
sbb
lahf
adc
add
jge
xor
sub
lea
rcl
xor
push
jnp
lods
movs
frstpm(287
fisttp
xor
xchg
dec
and
or
push
stc
nop
sahf
xchg
jecxz
fdivr
adc
adc
(bad)
std
shl
stos
cmc
jne
jbe
gs
jbe
push
loopne
pop
jle
jno
mov
add
lods
das
pop
sbb
add
and
sub
fbstp
pop
push
cli
fs
(bad)
mov
sbb
repz
ficomp
fcmovne
ja
shl
xor
inc
movs
fistp
push
das
or
mov
adc
inc
jno
add
pop
cmps
cmc
pop
pop
jnp
sar
stc
cs
dec
into
dec
mov
repnz
aad
je
cmp
and
jp
int
aaa
aad
jnp
call
pop
dec
xchg
sar
loop
(bad)
icebp
fwait
movs
sub
jle
out
push
xchg
iret
movs
add
stc
leave
cmc
xchg
mov
jno
iret
jne
jns
push
mov
int3
iret
mov
cld
(bad)
push
xchg
push
leave
add
enter
jmp
adc
add
cmp
movs
xor
or
(bad)
lods
jg
mov
jl
ds
pop
adc
shr
repz
mov
mov
fs
cmp
in
pop
and
data16
inc
ins
loop
test
fmul
xor
scas
or
shl
pop
or
repnz
lods
sub
jns
addr16
clc
adc
dec
mov
inc
dec
pop
cld
xchg
inc
sbb
or
je
dec
out
xlat
inc
pop
or
push
cdq
adc
jecxz
jge
push
inc
ds
(bad)
inc
jl
ins
mov
jl
ins
loopne
xor
aas
jmp
sbb
nop
ins
(bad)
fisttp
call
fcom
xlat
push
pop
out
addr16
jp
stc
call
cld
mov
pushf
das
out
das
iret
mov
sub
push
and
sbb
pop
sub
in
repnz
pop
call
xchg
push
gs
iret
pusha
in
shr
jmp
adc
push
sub
jbe
xor
mov
fild
movs
arpl
jge
call
ds
(bad)
mov
fidivr
cmp
and
lock
mov
vpcmpgtw
test
add
pop
mov
mov
xchg
int
not
cmp
adc
fdivr
lahf
jp
loopne
jg
mov
test
rcl
pop
adc
enter
mov
adc
and
stc
cmps
push
sbb
lods
xor
mov
jae
inc
inc
imul
fwait
jne
out
jne
call
sbb
mov
repnz
pop
push
pop
push
xchg
shl
xor
mov
sub
add
xchg
inc
idiv
ja
ror
cmp
inc
adc
ror
neg
and
pop
xor
fisttp
fwait
ss
loopne
aam
xor
jg
adc
stc
pop
test
into
lahf
cdq
xchg
push
jle
jmp
loop
sub
out
pushf
add
mov
in
cmp
mov
(bad)
push
cmp
enter
sub
push
jnp
sbb
cwde
fistp
pop
or
sub
xchg
inc
cli
leave
neg
and
dec
or
out
cmp
fistp
cdq
mov
fisttp
add
push
jns
lea
xor
movs
dec
lds
sub
aad
pushf
adc
push
lea
clc
test
or
stos
pop
int
or
test
sub
and
int
mov
addr16
rcr
push
cmp
fstp
xchg
and
sbb
sub
push
jns
add
scas
add
and
dec
mov
or
ins
retf
jmp
scas
out
cld
or
cmc
loope
xchg
mov
out
push
dec
leave
sti
test
dec
push
jg
jo
lods
mov
in
cmp
pop
adc
inc
in
jns
mov
adc
mov
pop
(bad)
(bad)
jmp
jmp
lock
mov
mov
xchg
jbe
int3
and
mov
fst
fmul
xchg
cdq
xchg
sub
push
adc
push
imul
(bad)
add
dec
icebp
adc
sub
(bad)
imul
out
data16
pop
shl
cli
xchg
push
jl
cwde
cmc
pop
mov
repnz
movs
mov
jle
inc
gs
sbb
or
dec
jg
stos
je
or
outs
jns
sub
lods
sbb
loope
std
arpl
inc
aaa
ins
ret
mov
jge
movs
mov
xchg
jae
inc
retf
mov
adc
xchg
push
mov
cmps
cmp
int3
bound
pop
dec
mov
out
dec
repz
dec
mov
add
fld
push
scas
cmp
push
into
or
(bad)
stos
outs
ret
daa
arpl
std
sbb
push
jecxz
int3
pop
dec
mov
sub
sub
xor
sub
push
xor
adc
inc
dec
mov
leave
jmp
mul
jb
shl
fwait
and
sbb
dec
cwde
stos
mov
ss
mov
in
loopne
pop
aam
mov
jmp
cmps
pop
fimul
sub
mov
stc
stc
jmp
mov
xchg
sub
dec
and
fninit
adc
sub
arpl
mov
xor
pop
fimul
movs
lds
xchg
or
push
je
pop
fist
mov
rcl
lds
pop
cmp
loope
add
les
sbb
inc
pop
aas
pinsrw
lea
pop
xchg
mov
das
les
sbb
jmp
cmp
xor
or
test
jmp
popa
mov
push
mul
jbe
mov
sub
cmp
lods
cmps
aas
dec
jo
scas
loope
mov
xor
xor
adc
mov
and
sub
xlat
fs
loope
dec
sbb
sbb
xchg
xlat
pop
sti
test
into
or
mov
dec
push
push
(bad)
aas
ins
push
aad
mov
xlat
cmps
ins
addr16
(bad)
mov
adc
add
aaa
repnz
and
test
ds
jmp
push
int3
aad
outs
in
in
ror
sub
adc
cmc
icebp
sti
or
cdq
pop
fimul
xchg
not
ret
mov
xor
jg
dec
sahf
xchg
pushf
in
std
ds
xchg
dec
das
ret
sti
gs
dec
xor
cdq
test
lahf
cwde
and
fdivr
inc
and
data16
pop
and
cmp
push
mov
stos
pop
icebp
cmps
cmp
pusha
sub
lea
mov
loop
dec
das
mov
mov
retf
(bad)
in
stos
cli
into
dec
mov
je
sbb
aam
ja
jge
in
idiv
fidiv
sti
push
in
les
pusha
imul
add
add
js
imul
ins
pop
cmp
or
or
jge
inc
cmps
lahf
and
xlat
sti
xchg
sub
fisub
and
arpl
movs
inc
cmp
mov
pop
pop
sbb
sbb
sub
(bad)
ror
rdtsc
and
mov
inc
dec
xor
jg
sbb
in
sub
push
add
xchg
push
aas
cmp
jle
sbb
ss
mov
sub
sub
es
jb
lea
outs
cmp
mov
dec
sub
sbb
cmp
adc
inc
imul
mov
jo
or
(bad)
aaa
push
out
push
mul
mov
jnp
popf
retf
dec
pop
sbb
ins
inc
add
mov
rcl
rol
inc
cwde
cmp
add
inc
adc
pop
or
cmps
and
xor
mov
ins
cmp
sub
ins
pop
sahf
or
test
loope
inc
mov
xchg
mov
jmp
enter
mov
jne
mov
fstp
add
(bad)
sub
(bad)
call
sar
or
and
adc
pop
stos
or
out
je
loop
push
addr16
adc
scas
push
pop
shl
push
clc
or
inc
add
or
mov
jmp
mov
loope
scas
fisubr
pop
xlat
mov
mov
push
repnz
push
fld
popa
sub
sti
dec
xchg
adc
jge
in
mov
scas
sbb
sti
sub
jp
push
jb
mov
xor
imul
push
loope
or
or
cli
mov
out
cmc
or
pop
pop
cmc
das
hlt
push
or
ret
mov
cmps
or
ja
push
out
mov
xchg
pop
rcl
scas
test
test
sbb
xor
push
test
jg
sbb
call
pop
aad
fdiv
fldcw
shl
xchg
outs
adc
int
loopne
jnp
sbb
stc
test
stos
sti
lods
imul
mov
iret
ja
inc
iret
fs
loopne
hlt
sbb
dec
and
std
ss
les
fs
xchg
mov
sub
repz
(bad)
imul
lahf
fidiv
mov
push
or
cmp
data16
push
jg
mov
outs
fwait
dec
hlt
jae
test
push
dec
lods
mov
sar
sbb
sub
adc
sahf
mov
movs
fimul
mov
adc
mov
add
mov
mov
hlt
call
jecxz
add
xchg
adc
repz
(bad)
gs
in
mov
ror
sub
daa
js
shl
jle
jg
pop
push
in
cmp
or
cdq
add
adc
push
mov
mov
and
retf
icebp
pop
sbb
push
dec
data16
int
push
fdiv
or
rol
mov
xor
fst
pop
(bad)
mov
loope
in
cld
xchg
dec
in
dec
aaa
adc
leave
jo
mov
call
out
xor
inc
mov
adc
add
movs
dec
int3
cmps
mov
xchg
or
test
pop
mov
cmc
dec
movs
mov
into
lods
ja
push
repnz
xchg
in
push
(bad)
jb
xor
repz
addr16
and
scas
ret
cmp
aam
inc
mov
mov
or
(bad)
sub
jmp
fchs
mov
loop
push
jno
data16
push
mov
dec
inc
sbb
imul
push
cmp
repz
cmp
mov
push
push
fisubr
stos
fcomp
mov
xchg
in
xor
xchg
fist
hlt
scas
ins
call
data16
inc
in
mov
movs
shl
or
jae
mov
and
cmp
push
cdq
pop
(bad)
loop
sar
loop
in
inc
adc
outs
lods
int3
outs
pop
dec
sbb
enter
jne
lahf
xchg
shl
and
sahf
neg
or
xor
call
mov
lods
jmp
jmp
into
push
out
inc
push
icebp
nop
(bad)
cld
cmp
add
test
out
and
dec
pusha
aam
jle
add
mov
lock
lods
adc
xchg
loopne
pop
outs
and
leave
dec
mov
push
mov
(bad)
dec
lods
retf
in
dec
adc
(bad)
mov
retf
lods
mov
fcmovnb
mov
cdq
call
je
test
add
inc
pushf
in
jmp
jnp
cdq
fsubr
cmp
scas
add
arpl
mov
push
lock
mov
stos
enter
lods
sar
out
xlat
pop
adc
(bad)
jmp
adc
mov
fwait
(bad)
stos
fnstcw
and
sbb
mov
retf
push
and
mov
sub
(bad)
hlt
cmp
bound
cmp
in
push
lahf
pop
aas
in
xor
outs
wbinvd
xchg
lock
inc
leave
leave
cmp
(bad)
pushf
xchg
jmp
add
xlat
sub
sahf
inc
(bad)
push
and
std
pop
fmul
imul
stc
out
mov
imul
or
scas
jns
and
sbb
rcl
xor
shl
mov
in
and
inc
(bad)
add
ds
jae
les
fstp
cmp
inc
or
jge
push
shl
test
(bad)
add
pop
dec
(bad)
mov
mov
fdiv
xor
inc
mov
xchg
push
out
test
xchg
aas
inc
mov
and
mov
xor
ret
popf
or
dec
sub
les
dec
xchg
rcl
ja
and
jmp
cld
mov
test
and
ins
push
in
pop
enter
mov
mov
cli
jno
pop
xor
pop
cmc
xchg
xchg
pop
xchg
fdivr
nop
mov
or
cmp
test
jae
fimul
js
outs
(bad)
in
scas
pop
lods
inc
es
ja
popf
out
pusha
hlt
mov
jl
shr
pop
shr
jp
in
call
push
les
les
jg
test
scas
sbb
mul
xchg
aaa
imul
pushf
fucom
push
aad
int
ja
xor
(bad)
call
nop
xor
clc
inc
retf
add
pop
(bad)
jns
push
dec
cmp
repz
inc
dec
cmp
or
in
jle
popw
jmp
into
popf
mov
mov
mov
fistp
adc
ds
or
enter
and
les
pop
daa
push
shl
das
or
sub
out
sbb
ss
and
fistp
aas
in
add
inc
(bad)
das
sub
mov
cmc
fstp
jae
pop
inc
mov
(bad)
cmp
and
xor
inc
cdq
ror
inc
push
xor
imul
push
jp
fld
cwde
cmps
test
repz
sub
cdq
cs
jmp
popf
pop
cmc
xchg
iret
mov
cmp
ins
jg
bound
dec
push
and
xchg
mov
arpl
lahf
cs
and
sub
and
repnz
(bad)
std
iret
dec
in
sub
push
test
ins
mov
jmp
shl
sbb
xor
mov
loop
xchg
or
pop
retf
jg
inc
(bad)
mov
pop
jns
mov
push
lea
inc
xchg
dec
mov
xchg
repnz
in
sbb
into
or
fmulp
dec
xor
cdq
idiv
cli
pusha
mov
ror
dec
mov
inc
test
add
sbb
std
sti
sub
xor
test
neg
addr16
sbb
add
stos
(bad)
or
add
sbb
cmp
out
lea
pop
sbb
ret
shl
shl
add
xchg
fist
mov
jge
adc
outs
enter
dec
mov
jmp
out
mov
enter
fsub
jg
mov
retw
nop
div
sahf
sbb
loopne
jp
aas
cmp
cld
aas
jle
sub
push
sub
ds
sahf
sbb
shl
jmp
push
sbb
inc
scas
adc
jbe
and
loop
sbb
mov
mov
xchg
adc
pop
sbb
stos
inc
pop
mov
nop
push
and
fidivr
sub
pop
or
or
or
mov
mov
out
and
(bad)
repz
add
ror
and
aad
jecxz
dec
cmp
pop
rol
int3
add
adc
cmps
lahf
sub
clc
retf
inc
jns
mov
push
aaa
fidivr
push
or
dec
jg
int3
addr16
fcom
nop
sbb
dec
clc
mov
jns
fistp
rcr
push
xchg
out
stc
pop
sub
mov
dec
sub
stos
fs
lock
dec
push
cmps
mov
jmp
push
scas
mov
leave
mov
mov
push
sahf
out
xchg
cmps
(bad)
and
fcom
xchg
(bad)
sub
mov
mov
push
in
push
scas
bound
inc
push
cmova
cmp
loopne
retf
inc
xor
int3
retf
mov
adc
add
inc
jecxz
pop
imul
push
outs
or
dec
outs
dec
mov
daa
fabs
or
ucomiss
icebp
push
cmp
fdivp
and
orps
xchg
retf
ins
out
sub
dec
inc
popa
cli
xchg
and
sub
cld
imul
push
jg
sahf
loopne
and
mov
add
jmp
xchg
cld
test
ss
pop
scas
mov
mov
mov
cld
push
rcl
ins
or
mov
mov
sahf
and
(bad)
dec
cmc
cdq
pop
retf
std
xchg
in
dec
cmp
adc
adc
cld
jge
inc
jo
sub
das
sahf
pop
cli
out
in
cmp
xlat
repnz
adc
scas
dec
iret
popa
popf
inc
lods
cmps
into
test
mov
lock
mov
mov
jb
xor
adc
stos
jnp
sbb
sub
jg
mov
adc
push
and
loope
cli
stc
imul
(bad)
unpckhps
cdq
in
sbb
fwait
into
fistp
jl
popa
icebp
inc
in
int3
fisubr
xchg
mov
das
dec
push
jno
test
jl
daa
aad
pop
retf
jnp
or
out
lock
and
cmp
sub
lock
jns
xlat
add
cmp
icebp
mov
mov
jbe
mov
push
or
mov
cs
jge
mov
loopne
iret
cmp
in
lds
push
stc
cmps
add
int3
mov
and
retf
mov
cmp
or
iret
stos
mov
(bad)
repnz
inc
pop
retf
xor
nop
aad
xchg
test
mov
xchg
push
xchg
jp
jns
aad
xchg
movs
dec
dec
cdq
sub
aad
xchg
rcl
aad
push
sbb
inc
frstor
inc
mov
inc
pop
sahf
push
adc
inc
loopne
loopne
jp
sbb
int
push
sbb
or
dec
stos
xor
shr
mov
mov
push
jb
mov
pop
repz
in
pusha
cwde
sbb
daa
out
and
pop
add
test
jno
mov
xchg
(bad)
mov
xchg
pushf
dec
int3
adc
bound
cmp
lahf
mov
fldcw
mov
or
jmp
mov
pop
xlat
fwait
imul
popf
out
fwait
lock
push
shl
jmp
leave
cmc
mov
jne
into
jg
fimul
add
dec
mov
lock
push
loop
nop
test
add
inc
and
sbb
jle
(bad)
(bad)
rcl
imul
push
lahf
nop
ins
add
test
nop
in
xchg
jmp
iret
cmps
ret
cld
inc
(bad)
das
mov
cmps
std
jo
xchg
xor
stc
dec
jp
adc
idiv
div
ja
je
push
cmp
jecxz
cli
xchg
cmp
add
or
xor
mov
cld
stos
jno
adc
aas
xor
xchg
out
jae
scas
enter
or
dec
adc
adc
mov
mov
and
stos
(bad)
std
ret
xor
jne
push
xlat
or
pusha
xchg
sub
mov
es
adc
push
dec
add
fdivrp
sar
rcr
cmps
cli
sub
push
dec
rol
mov
sub
mov
dec
push
mov
adc
mov
add
dec
aam
inc
push
lods
icebp
add
repz
fisttp
(bad)
jmp
mov
scas
push
(bad)
cmc
mov
xor
dec
lods
pop
aam
push
movs
ret
xchg
popa
mov
into
mov
scas
pop
xchg
jo
mov
or
mov
cmps
scas
cmp
enter
mov
xor
mov
in
out
inc
nop
dec
in
push
lahf
sub
cmp
mov
gs
rcl
pusha
das
add
cmps
xlat
sub
xchg
jmp
cmp
pop
dec
dec
xchg
frstor
xchg
retf
sbb
jmp
iret
je
jecxz
jns
jmp
inc
nop
pop
aam
int
mov
lock
jecxz
mov
cmp
and
bound
(bad)
cli
scas
sub
inc
inc
ins
inc
or
push
cld
sbb
or
inc
push
fldenv
mov
icebp
mov
fisubr
xor
daa
bound
or
or
pushf
push
mov
jp
xor
xchg
mov
or
xor
xor
mov
(bad)
sbb
mov
loop
jg
cmc
mov
std
inc
mov
cwde
and
inc
cli
xchg
imul
retf
in
sbb
mov
inc
lahf
jg
fdiv
jp
mov
cmp
mov
and
cmc
mov
sub
(bad)
je
xor
pop
aas
mov
dec
push
mov
in
sahf
loope
add
mov
mov
test
push
imul
push
and
movs
jl
shl
mov
pop
movs
lahf
xor
pusha
loopne
mov
adc
sub
sahf
add
ja
jo
mov
add
mov
adc
pushf
cdq
sti
or
sbb
xchg
sub
mov
mov
es
pop
je
fisub
adc
or
jne
ret
enter
lods
or
xchg
idiv
outs
push
ror
pcmpgtw
dec
jg
pop
xchg
daa
push
cmc
push
and
mov
pop
mov
fucomip
iret
sti
je
icebp
adc
jno
sti
sub
pop
popa
imul
rcr
fsub
mul
les
adc
inc
rcr
mov
pop
or
or
(bad)
ret
mov
push
call
sbb
push
cli
imul
pop
aad
sti
push
sub
add
jne
movs
jp
sbb
cmp
(bad)
push
mov
iret
jmp
cs
shl
push
ror
movs
push
fs
adc
cmps
cs
adc
pushf
dec
jno
adc
dec
mov
pop
(bad)
mov
dec
sbb
xchg
aam
fbld
xchg
add
loop
in
jp
or
sub
call
loope
loope
and
stc
mov
lock
or
jbe
add
xchg
or
out
outs
(bad)
jns
mov
mov
sbb
daa
sub
pop
jl
sub
mov
dec
shl
cmp
xor
(bad)
mov
jg
and
into
cli
ins
mov
push
or
jb
and
mov
sbb
ja
lock
lods
or
cdq
iret
inc
std
lds
and
ret
pop
jmp
div
xchg
call
pusha
outs
mov
pop
pop
out
push
outs
pop
and
sbb
xor
stos
mov
mov
and
test
cmp
aas
(bad)
dec
cmp
mov
out
sbb
test
test
ret
inc
adc
fnsavew
inc
pusha
jg
ret
mov
mov
sbb
cld
neg
pop
cmp
retf
add
cmp
stos
add
cdq
ins
test
gs
ret
dec
sbb
leave
loopne
xor
cdq
mov
adc
pop
popw
pop
pop
lahf
sbb
mov
cli
cmc
xchg
xlat
loop
inc
test
or
pop
mov
sbb
cmps
add
push
cmp
jno
mov
sbb
add
into
push
xchg
cmps
dec
pop
mov
jno
or
pop
adc
fdivr
out
xchg
aas
and
pop
add
and
jb
push
fimul
adc
icebp
xchg
lds
lock
sbb
in
mov
out
cmps
xor
xor
ins
aas
test
imul
ret
movs
mov
dec
cmp
dec
rol
cld
popf
cli
pop
add
sbb
sub
in
dec
pop
cld
stos
push
movs
mov
cmp
push
(bad)
fmul
movs
mov
adc
jno
sar
rcr
push
push
or
loopne
ss
int
sbb
fldenv
pop
dec
popa
cli
stos
in
js
push
push
pop
jl
pusha
std
lock
inc
lahf
(bad)
call
pushf
cs
push
add
rcr
mov
repnz
cmc
icebp
dec
ja
and
cmps
pop
cld
pusha
push
sub
adc
iret
push
mov
sti
aaa
out
sub
pushf
inc
je
and
mov
aad
int
mov
das
cmp
rcl
iret
sub
fcom
sub
leave
fsubr
or
or
and
xor
pop
or
or
and
and
cmp
sar
xchg
shl
add
int3
std
dec
cmps
jp
int
repz
es
xchg
sbb
enter
sti
hlt
push
mov
inc
mov
inc
add
fld
mov
shr
adc
inc
das
pop
pop
cmp
imul
shr
add
xchg
mov
pop
push
loopne
jmp
sub
pop
jecxz
leave
jge
sar
or
lea
mov
inc
add
icebp
pop
fstp
popf
shl
inc
loope
jp
mov
push
test
sbb
xor
add
into
xchg
add
pop
aam
inc
sti
push
dec
add
xchg
stos
(bad)
repz
jmp
inc
loopne
inc
pop
push
shl
cmp
adc
jp
or
or
jl
sub
xchg
fild
retf
add
(bad)
sbb
inc
popf
or
mov
xchg
stos
push
jecxz
and
push
lods
inc
js
rol
pop
ja
jns
shr
std
lahf
pop
call
out
and
sub
cmp
push
loopne
es
jno
mov
pop
cmps
ins
or
gs
cmp
dec
push
cld
xchg
stos
pop
fld
sti
outs
xchg
data16
mov
jmp
fcmovnb
dec
cwde
adc
add
sbb
and
daa
mov
int3
test
bound
ret
rol
lock
mov
cmc
ficomp
mov
popf
mov
xchg
cmp
outs
movs
or
push
retf
mov
and
jns
stc
push
mov
cmps
dec
jae
aas
aaa
imul
and
add
mov
in
fwait
cmp
test
add
jo
push
(bad)
stos
scas
xor
stos
cmps
mov
push
adc
pop
jnp
pop
bound
pop
pop
jl
aam
and
push
rcl
jne
imul
mov
in
pop
lods
int
cmp
repnz
push
push
push
fdiv
fisttp
shr
sub
pop
sub
sub
dec
mov
mov
push
rcl
iret
imul
test
sub
mov
arpl
add
das
sti
jb
add
xor
adc
cmp
(bad)
sbb
jo
add
dec
xchg
xor
xchg
cli
out
lea
push
cmps
lods
cdq
in
stos
push
fisubr
pusha
push
js
mov
and
pop
es
lods
jmp
push
ja
push
mov
jnp
adc
ficom
mov
pop
pop
dec
fisub
enter
push
jge
lds
cmp
addr16
pop
hlt
pop
xor
neg
fmul
cwde
push
shl
add
aaa
outs
mov
mov
mov
ret
mov
test
mov
xlat
jae
fbstp
cmovg
cmp
and
mov
loop
aad
xchg
xchg
out
pop
and
xor
lods
mov
xor
int3
rol
add
push
mov
test
aaa
aas
jp
adc
cmps
loopne
add
sub
add
xchg
cmps
dec
mov
sahf
xor
pushf
out
adc
xor
pop
dec
add
das
sti
xor
aaa
fcomp
daa
lds
fild
mov
pop
popa
movs
gs
loop
push
arpl
pop
sbb
inc
cmp
pop
pop
and
jecxz
jge
fadd
pop
test
ret
lahf
xchg
sahf
loopne
cmc
push
jnp
das
aad
or
xlat
sahf
mov
push
sbb
mov
aas
and
xchg
push
jb
push
jno
xor
xor
push
mov
mov
scas
dec
inc
jb
sar
aam
push
mov
mov
add
dec
aam
in
lods
movs
add
call
add
cmc
pop
adc
or
ret
mov
add
mov
int
cwde
xchg
call
fcmovnu
sbb
cmps
and
inc
and
retf
mov
sub
fwait
into
repz
fld
push
cwde
cmp
pop
adc
rcl
popf
shl
or
sbb
inc
or
test
outs
mov
mov
shl
in
lahf
in
inc
out
xchg
jmp
dec
cld
icebp
test
fst
(bad)
call
(bad)
cmp
stc
cmp
cdq
adc
inc
jg
stos
or
jmp
mov
cmp
xlat
cmp
es
inc
arpl
adc
sbb
push
in
ret
pop
(bad)
out
and
call
ja
mov
push
mov
or
aaa
sti
mov
mov
xchg
mov
cmp
sar
div
mov
inc
xor
cmp
repz
pusha
xlat
iret
or
clc
int3
in
fwait
rcl
icebp
xchg
xor
icebp
in
scas
sbb
scas
mov
in
adc
ret
and
adc
stos
add
xor
cmp
(bad)
jmp
dec
sar
cdq
ss
mov
loope
in
mov
movs
sar
inc
add
jl
loopne
dec
mov
cmp
xacquire
addr16
stos
mov
data16
outs
or
and
jle
(bad)
cmp
push
xchg
outs
cmps
sahf
push
div
les
into
dec
adc
cld
add
jb
mov
ret
push
iret
sti
mov
cmp
retf
sbb
and
cmp
sbb
sbb
je
adc
fisttp
imul
xchg
es
(bad)
push
dec
push
xchg
daa
mov
mov
adc
retf
(bad)
shl
jecxz
mov
bound
push
pop
fs
push
adc
xchg
sub
loop
stc
adc
mov
outs
cmps
cmp
mov
ja
pusha
mov
adc
cmp
xchg
fnstenv
es
push
jge
mov
pop
push
aaa
clc
push
fwait
or
data16
sub
ins
neg
pushf
inc
scas
hlt
adc
add
ret
sub
and
int
dec
dec
ja
stos
pop
fdivr
xor
lods
lods
rcr
mov
and
pop
cmp
xchg
inc
jns
pusha
cmp
cs
test
inc
add
test
test
test
and
leave
test
add
inc
mov
pop
mov
dec
sub
sbb
dec
push
dec
outs
add
fstp
sbb
(bad)
inc
(bad)
mov
in
xlat
dec
int
repz
add
ret
sbb
pop
jecxz
ret
xchg
xchg
inc
outs
into
xchg
cmp
xchg
push
cmp
inc
loope
mov
outs
xor
and
enter
outs
out
shl
cmp
xchg
sub
lods
aaa
shr
mov
fiadd
clc
test
jp
jae
and
arpl
fs
(bad)
pop
arpl
loopne
and
je
sub
xchg
addr16
pop
inc
add
js
sub
cli
push
push
into
(bad)
xor
dec
mov
dec
sub
cmp
push
mov
stos
pusha
mov
jp
addr16
ror
add
nop
mov
mov
dec
cmp
arpl
arpl
pop
sbb
jne
jmp
mov
rcr
xchg
xchg
mov
mov
or
inc
cmps
clc
mov
mov
mov
ror
mov
repnz
pop
and
cmp
inc
push
in
or
or
xor
jle
stc
cmp
mov
mov
outs
xchg
dec
int
sub
xor
repz
dec
iret
out
jp
cmp
xchg
out
pop
stos
jp
fimul
push
xor
mov
jo
scas
or
push
sub
xor
pop
xor
cwde
pop
sbb
std
sbb
xchg
mov
in
gs
stos
mov
or
mov
adc
mov
pop
mov
pop
and
enter
or
lds
stc
loop
and
fmulp
out
push
add
dec
sbb
jno
scas
mov
jnp
ret
mov
addr16
stc
add
fistp
popa
into
sar
jbe
aam
mov
add
rcr
jbe
je
mov
in
and
pop
sub
pop
cmps
jb
xor
jno
and
jb
ret
mov
das
leave
sbb
sbb
mov
int3
iret
cli
gs
and
inc
cwde
xor
and
sub
pop
mov
fs
and
and
xor
setae
dec
test
or
push
movs
sub
cmp
sbb
pop
retf
cmps
sbb
movs
xchg
test
fwait
push
aaa
cli
cmp
or
repnz
jp
jecxz
adc
call
inc
jmp
mov
inc
leave
jno
cdq
inc
and
retf
js
mov
adc
sub
cmp
pop
stc
mov
xchg
xchg
inc
push
test
mov
mov
mov
jmp
pop
aas
sub
pop
mov
jl
iret
pop
cmp
mov
cmp
aam
cs
jmp
jmp
sti
sub
rcl
nop
mov
adc
jns
outs
xchg
(bad)
lods
mov
scas
fcmovbe
repz
lahf
ins
(bad)
or
aam
and
loop
adc
fs
jmp
repz
mov
lss
test
aaa
pop
or
mov
cli
test
mov
jmp
sbb
(bad)
retf
pop
cli
xchg
in
outs
imul
xor
adc
(bad)
das
sub
pop
popa
mov
jge
xchg
mov
and
xor
inc
cli
cmp
xor
or
cmp
es
mov
cmp
dec
(bad)
mov
sub
(bad)
mov
adc
shl
icebp
mov
in
(bad)
jp
push
ror
ficomp
add
dec
or
mov
fdiv
xchg
ins
shl
mov
popf
push
dec
(bad)
mov
dec
and
dec
add
sbb
popf
outs
xchg
pop
rcr
sub
mov
sub
cmps
enter
retf
cmp
fisttp
ret
inc
mov
fcom
test
out
mov
sub
retf
sub
push
and
xchg
test
inc
add
imul
cmps
push
mov
pop
cwde
scas
adc
stc
mov
xchg
mov
xlat
inc
adc
sbb
pop
mov
dec
cs
pop
aad
xor
push
cld
leave
out
push
mov
and
adc
xchg
imul
movs
jge
or
mov
push
ret
jp
imul
call
ficomp
and
imul
push
jbe
daa
inc
cmp
(bad)
cmc
into
xor
imul
lock
xchg
int
pop
mov
jecxz
out
mov
jno
loope
in
inc
dec
mov
and
xlat
mov
and
ftst
sbb
std
(bad)
jbe
push
dec
sub
fstp
mov
test
xchg
push
xchg
xor
jmp
dec
ins
iret
scas
lods
xchg
sbb
mov
xchg
xchg
mov
pop
fisttp
jmp
sbb
fdiv
fnstenv
cmps
push
or
jbe
cs
(bad)
mov
add
mov
cmps
ss
in
shr
mov
shl
(bad)
fdiv
movs
mov
fwait
arpl
xchg
adc
stos
cmps
cli
pop
add
les
fcmovnu
aad
cmp
stos
(bad)
jg
add
cmps
ss
int
add
mov
xlat
clc
sbb
push
aam
daa
add
sahf
xor
retf
outs
and
pop
lods
mov
jle
push
mov
clc
inc
pop
fmul
add
sub
repnz
inc
push
and
and
mov
aaa
movs
mov
addr16
in
cmps
xor
adc
dec
pop
std
outs
sbb
sub
mov
cmps
std
cmps
mov
test
push
hlt
cld
mov
jle
and
sub
mov
(bad)
mov
fs
push
or
mov
add
movs
cmp
dec
mov
pop
fiadd
repz
sub
lahf
jle
xor
dec
mov
int
jb
mov
stos
fidiv
outs
and
pop
adc
fwait
call
sbb
lds
je
cdq
xchg
(bad)
or
pop
cmp
mov
push
mov
push
inc
imul
cmp
xor
jmp
jnp
cmps
sbb
jo
(bad)
push
mov
mov
call
push
jmp
(bad)
imul
xor
pop
mov
mov
ins
xor
gs
and
push
mov
jbe
(bad)
jle
mov
mov
jb
jle
jbe
aad
mov
fldcw
and
xchg
xor
jb
xor
push
or
inc
or
or
(bad)
call
sub
and
stc
and
out
in
add
mov
xchg
bound
(bad)
in
cmp
xchg
hlt
cmp
imul
mov
popa
shl
pop
in
fidivr
sub
loop
mov
sub
lahf
mov
daa
or
pushf
pop
xor
mov
dec
retf
sahf
xor
cmps
sti
test
push
dec
pop
jae
pop
pushf
push
add
and
jle
cmps
sbb
cli
mov
xor
clc
mov
lahf
call
pop
mov
fcomp
pop
mov
jnp
ror
cmp
dec
inc
cmp
xchg
xor
add
out
mov
popf
out
xchg
lods
xor
rcl
movs
ret
dec
add
mov
shr
add
shl
mov
imul
jmp
test
mov
and
mov
and
idiv
fwait
push
cmp
fld
cli
aaa
pop
cmps
xchg
je
xor
stos
icebp
mov
xor
sti
pushf
into
jbe
mov
data16
scas
into
mov
mov
sub
cmps
jecxz
xchg
imul
mov
cdq
mov
ret
ja
cdq
xchg
inc
enter
lahf
jle
inc
adc
pop
mov
cdq
xor
sub
jno
loop
dec
jb
xor
jle
xchg
aad
pop
les
stos
dec
in
jmp
cmp
pop
xchg
(bad)
cmc
outs
sub
mov
mov
inc
xchg
jns
add
sar
pushf
mov
mov
test
push
jb
mov
xchg
pop
pop
xchg
cmp
mov
ja
dec
call
call
cld
gs
sub
xor
sar
inc
xchg
sub
ror
out
xchg
retf
lahf
pop
pop
cmps
loope
imul
repz
and
pop
aas
in
gs
push
int3
aaa
cwde
jg
ds
mov
mov
pop
sbb
mov
stc
jnp
mov
sti
add
icebp
adc
in
lock
ds
pop
or
jmp
inc
call
aam
sahf
and
mov
leave
call
addr16
xor
push
mul
adc
in
lahf
jbe
or
xor
retf
cmps
mov
pop
mov
ss
mov
push
dec
inc
pusha
adc
sahf
out
gs
sti
call
push
sbb
aaa
sti
xchg
pop
loope
pusha
ret
mov
adc
ret
rol
mov
xor
xlat
pop
fldcw
jmp
mov
pop
loope
popa
push
sub
jmp
outs
fcomi
aas
jl
mov
xor
adc
scas
js
and
cwde
xchg
push
movs
stos
gs
pop
fcom
and
mov
xor
stos
inc
adc
js
pop
or
and
repnz
mov
jnp
ret
addr16
es
mov
dec
push
adc
pop
enter
mov
cld
xor
dec
movs
jns
dec
bound
mov
jecxz
cdq
inc
out
hlt
pop
dec
xor
xchg
shr
inc
out
mov
xchg
test
add
inc
cmp
mov
imul
mov
dec
xor
test
test
and
stc
xor
xlat
xor
jno
das
dec
pop
sahf
mov
xchg
popf
loopne
adc
push
jg
ins
pop
in
inc
sub
aad
dec
jb
pop
add
loopne
push
mov
xor
(bad)
in
sar
(bad)
out
pop
pop
aad
test
fsub
stc
adc
test
out
mov
add
jnp
sbb
aaa
loopne
sar
xchg
inc
dec
push
imul
xor
cmp
jg
mov
push
pop
mov
hlt
and
ja
pop
cmps
push
jnp
rol
xor
jmp
ins
sub
add
sub
push
inc
cli
xor
and
stc
aaa
test
stos
mov
mov
les
jmp
push
push
test
xchg
daa
cmp
and
jmp
pushf
or
mov
inc
dec
ins
jecxz
movs
iret
int3
mov
sub
lods
movs
mov
or
call
test
mov
std
test
ret
xlat
or
mov
cmp
fistp
movs
add
loope
inc
cmp
fwait
lods
repz
fsubr
out
mov
out
jle
mov
cmp
stc
cli
xchg
push
ret
lds
add
int3
push
xor
mov
test
pushf
mov
cmp
dec
sbb
loope
xor
cmps
xchg
call
xchg
mov
push
in
push
adc
call
inc
mov
mov
scas
xchg
sub
repnz
es
cmp
ins
mov
(bad)
add
loop
push
fmul
fld
mov
xchg
ror
or
out
ss
clc
je
dec
fadd
cmp
repnz
jl
arpl
in
enter
retf
xchg
fnstenv
pop
adc
ror
mov
enter
enter
mov
test
test
xor
pop
loop
sub
cwde
aam
cli
sbb
jnp
xchg
xchg
gs
call
outs
push
js
outs
int3
cmp
(bad)
stos
lds
mov
push
mov
(bad)
pop
mov
mov
lea
adc
in
xor
pop
test
fld
imul
rcr
push
sbb
outs
pop
add
adc
xor
and
cmp
inc
mov
popf
pop
dec
je
or
jmp
xor
sub
cmp
sbb
mov
push
fimul
or
or
sar
ss
(bad)
fild
inc
aas
(bad)
fcomp
dec
data16
in
xor
cs
pop
dec
imul
fcom
test
mov
neg
out
cs
cmps
pop
push
lods
add
scas
adc
dec
test
cmovbe
mov
ret
mov
add
lods
das
sti
cmp
loope
test
out
syscall
or
imul
xchg
mov
xchg
dec
icebp
xchg
xchg
cwde
mov
shl
(bad)
out
imul
jo
inc
repnz
cmp
add
jle
dec
add
sub
loope
or
inc
(bad)
mov
pop
mov
das
mov
fsub
xlat
ja
imul
outs
dec
sub
rol
mov
xchg
cld
cmp
push
sahf
inc
inc
jbe
aas
add
retf
les
icebp
sub
bnd
lahf
inc
lods
aad
js
mov
cs
(bad)
push
cmc
aad
mov
bound
cmp
loopne
mov
mov
jl
lea
test
mov
pop
inc
push
and
add
daa
cmp
shl
dec
inc
dec
xor
xor
or
xchg
inc
cwde
rcr
mov
fst
sub
shld
or
rol
jmp
mov
or
and
lods
inc
(bad)
(bad)
imul
mov
test
mov
pushf
fcomp
inc
std
ja
cmps
popf
mov
cli
pop
mov
addr16
xor
or
mov
inc
sbb
mov
clc
jle
adc
(bad)
aaa
pop
dec
mov
push
cmp
inc
sub
ret
in
sub
sbb
in
sti
rol
stos
movs
push
out
xchg
inc
mov
iret
sbb
mov
pop
rcl
add
jmp
int
in
mov
pop
pop
and
cld
fidiv
xchg
push
dec
xchg
dec
mov
pushf
gs
loop
aad
cmc
in
push
pop
mov
xchg
sbb
sbb
or
call
cmp
enter
push
cmp
mov
xchg
inc
repz
or
(bad)
mov
jecxz
shl
addr16
jmp
test
add
pop
push
les
div
test
fmul
push
(bad)
dec
loopne
jae
shl
cmp
inc
cmp
push
pop
nop
dec
pop
popf
xor
bound
inc
adc
push
push
pop
or
push
ja
xchg
(bad)
sbb
in
in
jecxz
lock
cld
mov
fcom
imul
fisttp
aas
push
sti
sbb
xchg
jge
lds
js
add
mov
add
loop
out
sbb
ror
nop
mov
mov
push
movs
inc
jne
sbb
fnsave
sub
(bad)
je
xor
jo
out
or
inc
into
jmp
push
jg
ins
ret
mov
mov
mov
xor
(bad)
cmc
xchg
or
js
push
repz
idiv
xchg
test
add
sbb
sar
test
dec
loop
push
movs
ins
fcomp
scas
lock
(bad)
out
ffreep
pop
dec
add
pop
leave
es
stc
fcom
push
not
sbb
cmp
mov
jmp
icebp
outs
lock
ss
loopne
mov
popa
test
sti
mov
push
dec
ficom
mov
xor
mov
and
(bad)
pop
xor
dec
cmp
lahf
and
(bad)
in
ret
fidiv
mov
(bad)
xlat
jg
stos
frstor
push
jae
fadd
push
mov
mov
mov
dec
add
xchg
ins
xor
sti
pop
inc
rcr
mov
repnz
mov
pop
mov
sbb
loop
dec
and
stos
pushf
jmp
pop
cmp
sbb
ins
mov
loopne
sbb
mov
inc
xor
adc
mov
push
adc
push
jl
mov
idiv
js
les
jmp
or
leave
add
out
xor
dec
xchg
sar
shl
cmp
push
cmp
inc
mov
add
sbb
jp
in
outs
mov
in
ret
inc
sub
or
xchg
fnstsw
adc
lods
mov
movs
or
je
repz
pop
inc
dec
and
pop
mov
push
daa
add
out
cld
jb
sbb
inc
sbb
add
pop
xchg
add
fldcw
mov
dec
arpl
xor
retf
and
add
dec
out
in
cmp
arpl
or
cdq
cld
mov
sbb
lods
push
pop
out
ss
adc
pop
daa
jge
cmp
sub
jle
mov
(bad)
cmc
test
lea
push
inc
mov
inc
sbb
ja
sbb
and
in
sub
mov
jae
sub
push
lods
pop
cld
pop
jmp
cs
fild
and
adc
xchg
jge
ret
pusha
out
mov
xor
mov
in
dec
mov
jo
add
idiv
test
mov
mov
(bad)
and
(bad)
pushf
xor
ja
sbb
pop
add
xlat
das
cwde
ss
mov
push
push
ss
xor
ficomp
mov
xor
jmp
rol
les
cmp
add
push
dec
aam
mov
and
pop
test
addr16
dec
jne
daa
es
fs
adc
rcl
xchg
xchg
and
push
mov
mov
mov
shl
std
sbb
in
and
sub
sub
leave
or
or
gs
adc
cmc
loopne
std
jmp
mov
loopne
inc
and
xor
cmc
test
sbb
loope
(bad)
call
mov
pop
mov
or
lea
sub
popf
arpl
and
mov
xor
in
int
xchg
call
stos
or
pop
out
aam
rcl
push
sub
pop
and
and
jo
sar
dec
dec
adc
mov
lods
out
add
adc
not
sbb
les
pop
ss
jp
loop
shl
repnz
push
dec
prefetch
int3
cli
sub
fdiv
push
jg
inc
inc
fdiv
es
mov
clc
mov
and
cmp
jp
jp
xchg
aam
rcl
les
jl
pop
lock
sub
jge
icebp
or
cwde
pop
shl
pop
sbb
mov
inc
aad
sub
int
push
inc
std
retf
js
inc
out
in
sar
(bad)
iret
jle
test
xor
call
retf
stc
bnd
inc
lods
shl
add
push
mov
imul
(bad)
adc
pop
inc
inc
and
pop
in
ins
iret
fnstenv
xor
les
out
xchg
mov
mov
cmps
cmp
in
xor
ja
mov
adc
popf
dec
int3
test
or
xchg
lar
sbb
push
fwait
(bad)
pop
add
or
movs
push
ins
xchg
aas
add
mov
aaa
and
sub
xor
mov
ja
cmp
adc
rol
sub
adc
xchg
fadd
mov
sub
pop
lods
jecxz
ret
sub
int3
xor
stc
es
cli
iret
imul
mov
inc
xchg
call
xchg
add
into
xlat
mov
and
je
dec
mov
and
jmp
in
jmp
add
mov
in
jb
aas
or
xchg
sar
cmp
test
and
cdq
or
dec
(bad)
outs
rcr
sar
movs
mov
ret
push
xchg
clc
inc
push
imul
and
cmp
or
pop
gs
movs
inc
imul
xchg
addr16
and
(bad)
fisttp
cmp
jp
call
stos
cmp
loopne
das
xor
and
pop
push
inc
int3
inc
cmp
test
imul
cmp
les
leave
sti
into
sbb
xchg
mov
adc
sub
loopne
push
popf
cwde
test
inc
cmps
xchg
mov
lock
fwait
adc
movs
int
cld
pop
mov
aas
div
or
out
cmc
lock
pop
fs
jmp
jle
ins
mov
pop
jp
fs
jns
mov
or
mov
outs
icebp
adc
sub
ret
loopne
mov
(bad)
mov
adc
(bad)
cdq
xor
xor
cld
or
dec
jmp
repz
push
div
fcmovb
jp
loope
sub
jno
xchg
rol
sub
jb
xor
dec
in
or
adc
mov
xchg
stos
fimul
dec
outs
push
std
std
cli
jge
in
and
push
sbb
fiadd
mov
cdq
stos
cmp
in
aam
jns
cmps
loop
jl
push
or
ja
inc
rcr
ror
sbb
(bad)
mov
mov
xor
jmp
push
mov
mov
int3
stos
xchg
mov
fcomp
add
add
mov
add
cmp
pusha
iret
jnp
cmps
repz
mov
cmp
cmp
pop
cmp
add
cmp
(bad)
fbstp
mov
inc
xor
pop
js
xchg
mov
inc
xchg
ja
jecxz
push
push
imul
dec
int3
xor
pusha
out
retf
push
jge
call
cmp
sti
fcmovnb
push
daa
daa
cmp
mov
add
clc
js
pusha
pop
or
inc
mov
lock
adc
loope
dec
fwait
mov
dec
push
shl
into
mov
popf
adc
xchg
jl
pop
jno
fmul
stos
jmp
fcomp
test
(bad)
xchg
push
pop
dec
cmp
mov
gs
stos
(bad)
or
not
imul
das
aas
push
cwde
xchg
pushf
bnd
loope
jp
loop
fisub
and
mov
les
push
fs
and
inc
es
or
xchg
fidiv
stc
xchg
shl
mov
fcomp
shl
push
das
sbb
cmp
popa
push
push
into
xchg
adc
shl
pop
xchg
add
push
pop
bnd
fst
pop
(bad)
jmp
cmp
push
in
mov
inc
scas
mov
fimul
lahf
inc
mov
fidiv
push
loopne
mov
push
xchg
add
shl
sbb
stc
shufps
movs
in
sub
xor
cmp
cmps
test
or
and
adc
fstp
cmp
mov
movs
xor
cmp
pop
out
and
stos
cmp
test
and
xor
pop
jns
outs
dec
jnp
das
movs
inc
xchg
xor
cmp
mov
pop
fimul
cmp
test
push
fdiv
outs
mov
xor
outs
adc
mov
sbb
push
test
mov
imul
cmp
add
add
mov
vmwrite
movs
leave
mov
xor
sbb
iret
psubq
adc
pop
cmp
mov
out
or
test
xlat
test
dec
(bad)
xchg
cs
dec
retf
call
mov
outs
test
fsubrp
jbe
addr16
jne
jbe
gs
push
add
mov
push
add
jno
cmps
mov
jno
jl
mov
cmps
add
scas
and
cmps
sub
pop
mov
xor
xor
push
adc
sub
pop
sbb
les
jmp
fldenv
or
dec
pop
or
push
xchg
(bad)
push
adc
jnp
mov
mov
pop
and
xchg
es
cdq
and
and
pop
sahf
ins
fmulp
xor
shr
retf
(bad)
out
sub
pop
loope
cmp
data16
push
cmp
cmps
je
mov
or
adc
jns
loopne
pusha
mov
test
sbb
inc
sub
mov
mov
fwait
out
push
cld
aaa
ror
sbb
cld
bound
repz
jo
aaa
cdq
lahf
cmp
cmp
pusha
mov
test
sbb
out
mov
mov
xchg
push
jno
mov
push
adc
add
outs
shr
cdq
test
dec
pop
or
cmp
xchg
xor
aaa
and
inc
push
sub
push
xchg
push
add
cld
nop
mov
jb
dec
mov
sti
pop
and
dec
mov
inc
xor
call
xlat
idiv
sar
mul
ret
pop
push
sbb
and
pop
int3
je
sub
cmp
movs
jge
int3
add
lods
popa
imul
fst
hlt
xchg
test
add
pop
call
add
addr16
add
pop
ret
xor
or
test
(bad)
shl
xor
test
jae
sbb
(bad)
outs
in
test
aam
scas
cmps
or
adc
repz
mov
bound
adc
mov
inc
jmp
mov
lea
call
gs
fmul
xor
dec
ds
sub
iret
aaa
daa
cmps
mov
jl
retf
fs
jmp
sbb
adc
dec
sbb
cmp
mov
ret
pop
jp
push
out
stos
inc
jne
add
(bad)
sbb
pop
fild
inc
adc
dec
fs
movs
ds
ja
stos
jae
call
cli
and
and
xor
and
stos
push
add
cmp
int3
add
pop
movs
sbb
xor
sahf
and
xchg
sbb
xlat
aam
xchg
mov
mov
sbb
sub
mov
sar
rcr
cmps
ins
inc
cmps
mov
cmp
outs
mov
and
cdq
cmp
aam
push
pushf
scas
imul
pusha
les
or
mov
dec
dec
hlt
retf
add
mov
add
fld
inc
and
push
inc
rcr
not
pop
sub
sub
lds
push
cmp
outs
outs
ins
imul
cs
aaa
jp
xor
push
rcl
(bad)
jp
pop
or
jnp
mov
inc
and
xchg
push
inc
sub
ror
addr16
cmp
das
mov
jp
test
dec
mov
add
and
cmps
or
add
mov
enter
mov
test
inc
cs
or
mov
imul
xchg
enter
mov
sub
or
movs
jnp
sub
push
mov
dec
bound
mov
cld
in
nop
mov
lock
mov
leave
stos
jl
int
adc
mov
retf
and
sbb
push
or
xor
jb
xchg
push
mov
int3
or
sbb
ficomp
xlat
stc
push
fsub
add
add
(bad)
pop
fucomi
mov
xchg
jnp
xor
xchg
push
shl
lods
imul
cli
push
xchg
or
and
out
repz
aad
dec
cdq
xchg
mov
lea
cmp
sbb
xchg
adc
adc
fadd
pop
ror
cmp
in
adc
jmp
test
iret
fmul
xchg
jns
mov
scas
outs
daa
enter
lods
ficomp
in
cwde
imul
mov
dec
jmp
dec
aas
sahf
fsub
push
xor
jge
dec
sub
shr
push
jne
call
adc
lock
cli
in
mov
fist
inc
mov
test
loope
and
xchg
mov
jecxz
rcr
cs
pop
push
jns
xor
cmp
jle
add
cmc
in
mov
mov
pop
leave
sbb
neg
or
push
jg
test
pusha
sbb
out
shl
cmp
sbb
adc
xchg
ja
xchg
inc
lods
xor
jbe
dec
xchg
clc
ja
xor
mov
repz
cmp
popf
repnz
or
and
add
mov
lds
call
les
and
add
xor
outs
pop
cmp
sbb
call
dec
pushf
inc
test
gs
inc
pop
push
addr16
es
pop
mov
arpl
mov
loope
iret
js
test
daa
add
mov
mov
(bad)
in
out
leave
push
loop
xchg
cmp
add
and
mov
rcl
not
int
int
dec
scas
movs
mov
scas
ja
mov
or
or
shl
(bad)
xchg
repnz
xor
or
fldcw
jl
icebp
inc
cld
mov
jmp
cmps
ds
or
outs
pusha
pop
jmp
push
ret
adc
jg
test
pop
mov
test
gs
movs
mov
jae
in
jnp
xchg
into
movs
dec
fistp
mov
jns
nop
popa
lods
into
and
rol
sbb
mov
mov
mov
pop
lods
push
dec
push
aas
lea
jecxz
fstp
out
jb
jmp
nop
xor
fwait
xor
sar
outs
pop
pop
(bad)
jp
and
pop
adc
dec
dec
retf
xchg
xchg
mov
mov
inc
das
add
sub
cld
mov
adc
sbb
fucomi
sahf
and
pushf
mov
inc
(bad)
mov
rcl
inc
jmp
jmp
mov
pop
rol
add
cdq
(bad)
xabort
mov
mov
push
xchg
push
sar
icebp
arpl
cmp
rol
inc
push
(bad)
mov
out
das
or
repnz
in
int
add
test
or
mov
inc
xchg
les
pop
jg
imul
fnstcw
mov
mov
jae
add
push
repz
jo
movs
rol
cmps
or
jb
mov
scas
mov
mov
inc
xor
add
mov
inc
xor
test
mov
out
xchg
xor
jle
xchg
pop
pop
movs
popf
xchg
addr16
sub
popf
mov
mov
dec
repnz
push
jb
mov
loope
pop
int
fidivr
xlat
sbb
iret
adc
xor
or
push
cwde
hlt
jle
sbb
adc
jmp
fcomp
fs
int
pop
and
gs
add
xchg
cmp
imul
push
mov
loopne
xor
test
cdq
movs
dec
xchg
lock
popa
jmp
add
lock
pop
out
add
or
push
add
xchg
test
mov
sbb
push
repz
test
jae
mov
loopne
leave
(bad)
repz
mov
or
retf
sti
adc
mov
cmp
mov
jge
jmp
jmp
popf
mov
(bad)
jge
xchg
sbb
and
test
in
lock
shr
inc
cs
rcl
lods
xchg
cdq
data16
out
pushf
inc
cmps
(bad)
pusha
cmp
and
lahf
jp
jmp
div
loop
fcomi
in
sti
shl
push
out
mov
sub
sbb
xor
push
loope
adc
push
cmp
mov
mul
mov
mov
ror
or
jp
mov
repnz
je
xchg
shr
shl
pop
outs
iret
scas
sub
dec
or
test
add
jb
adc
mov
inc
pop
and
loope
cmp
adc
int
inc
pop
adc
cli
inc
sub
popf
push
and
mov
outs
shl
fcomp
outs
xor
retf
stos
jae
mov
jb
pushf
pop
xor
dec
(bad)
mov
jmp
sbb
in
mov
mov
dec
sbb
jo
bound
in
xchg
dec
ret
data16
cmps
lahf
cmp
xor
jns
pop
and
or
daa
icebp
sub
xor
jge
outs
inc
dec
xlat
push
clc
bound
cmp
inc
push
ds
loope
jbe
loop
xchg
aam
cmp
mov
test
pshufw
adc
and
pop
cli
(bad)
cld
and
xchg
in
xchg
aad
in
leave
addr16
dec
dec
div
dec
push
xor
and
mov
adc
xor
mov
ret
ja
in
dec
mul
int
jmp
ror
inc
hlt
(bad)
push
mov
inc
jl
add
mov
pop
dec
adc
dec
(bad)
mov
out
hlt
bound
(bad)
(bad)
jg
xchg
cld
in
loop
ja
add
cmc
retf
popa
xchg
popa
inc
pusha
retf
cli
stos
sub
xor
inc
enter
ss
and
ja
jmp
movs
(bad)
xor
outs
jae
xchg
sahf
sub
xor
loopne
xor
xchg
push
nop
jo
inc
aad
in
or
push
adc
mov
sar
mov
jno
ror
mov
adc
push
push
sub
mov
inc
call
add
gs
pop
scas
(bad)
jno
not
cmc
adc
in
movs
sahf
iret
fsubr
and
add
stc
pop
jge
mov
pop
data16
mov
jg
repz
ret
stc
fwait
ds
or
add
mov
cvtdq2ps
movs
and
mov
push
xchg
pop
in
outs
xchg
fistp
jmp
jge
(bad)
clc
dec
push
sbb
repnz
mov
call
cmc
outs
cmp
dec
adc
jns
and
loope
pop
xor
inc
movs
sbb
sub
and
fsubr
sbb
out
add
and
jnp
sub
(bad)
test
aad
mov
mov
ss
stc
movs
jo
in
sbb
xchg
ffreep
xchg
shl
cmc
ret
(bad)
dec
and
loop
pusha
sbb
mov
jae
and
push
shl
or
cmps
daa
pusha
das
stos
xor
xchg
cwde
sub
iret
sbb
cs
add
les
retf
pop
aad
mov
lds
imul
pop
dec
sbb
xchg
jo
cs
jo
push
shr
push
sbb
push
cmc
sbb
arpl
lea
lods
scas
xchg
add
push
sbb
mov
enter
cmp
int3
(bad)
movs
xor
loop
push
popa
popf
icebp
push
iret
sub
pop
retf
in
mov
and
jge
loope
and
sbb
mov
popf
push
aad
inc
adc
je
daa
lahf
in
mov
and
out
dec
cmp
pusha
cli
jns
je
lods
out
retf
mov
jle
mov
data16
jne
inc
sbb
popa
cmc
sahf
dec
jge
xor
mov
xchg
movs
pop
xor
sbb
ret
cmp
lahf
mov
adc
fstp
jg
ins
test
out
retf
cmp
jne
(bad)
(bad)
fucom
sahf
call
ja
mov
push
jo
add
xchg
out
cmc
cmp
gs
or
push
in
mov
add
in
or
and
pusha
xor
ds
mov
add
and
inc
movs
mov
and
in
lods
ret
loopne
movs
sbb
out
fcmovnbe
sub
xchg
add
pop
out
jp
dec
test
or
mov
jns
dec
add
pop
in
push
dec
xchg
adc
mov
lock
es
jp
sub
(bad)
sbb
repnz
xchg
push
aas
movs
fdivrp
sar
test
dec
aad
and
push
addr16
and
in
fisttp
pop
adc
jp
leave
sbb
jle
mov
nop
lds
inc
mov
jmp
jg
call
pusha
and
icebp
push
lods
and
mov
hlt
cwde
sbb
test
add
fild
ror
mov
jo
test
mov
shr
cdq
pop
mov
call
fwait
sub
xchg
retf
mov
aaa
test
push
je
leave
popa
out
repz
enter
push
pop
and
pop
mov
iret
das
sbb
call
jle
jp
hlt
inc
add
adc
jo
add
pop
pop
lahf
stc
sti
mov
cs
rcr
xor
add
pop
mov
and
ret
xchg
sub
add
ins
and
xchg
sbb
aam
push
pop
dec
popf
jp
ror
repz
ins
jno
(bad)
mov
call
shl
pop
sbb
sahf
in
ss
pop
lea
sub
mov
out
shl
add
call
push
fldcw
pop
dec
(bad)
xor
outs
sbb
sub
dec
fild
xor
cmp
xchg
rcr
lock
lds
(bad)
ficomp
lods
jo
sub
cmc
xor
mov
mov
fsub
inc
retf
bound
sbb
dec
fidiv
pop
adc
imul
aaa
ins
xchg
push
aad
test
fmulp
jbe
ins
rcl
dec
pushf
ror
aam
adc
or
inc
sub
loope
addr16
xchg
push
push
xor
add
sub
dec
xor
sbb
dec
sub
popa
aad
int3
mov
sbb
jle
and
pop
test
popf
push
adc
xor
mov
out
repnz
cmp
adc
rcr
test
scas
cmp
lahf
xor
mov
mov
sub
push
adc
pop
test
inc
fsubr
rol
or
in
and
jb
mov
ins
mov
xor
dec
rol
jo
rcr
cwde
jnp
or
cmps
xor
xor
rcr
cdq
jecxz
mov
mov
stos
pop
pop
cmp
pop
loopne
loopne
punpcklbw
sti
retf
(bad)
jl
imul
int3
jmp
mov
pop
or
sub
or
mov
dec
push
pushf
and
or
popf
shl
xchg
xor
leave
arpl
sub
repz
int3
dec
push
push
sbb
cwde
mov
mov
out
xor
imul
sahf
cmp
popa
fistp
pusha
loop
pop
and
push
mov
rol
(bad)
sar
test
or
dec
fistp
fs
xor
daa
iret
js
jg
dec
jb
aaa
fisub
mov
xor
mov
add
pop
out
jmp
jmp
das
movs
sbb
xchg
or
aad
xchg
adc
loope
push
fist
jo
pop
push
add
fdiv
iret
in
and
and
(bad)
mov
int3
cld
dec
arpl
push
cdq
aad
imul
cvtpi2ps
inc
and
inc
xor
cli
pop
dec
cmp
into
push
int3
int
push
inc
jg
ins
js
test
push
and
fmul
add
inc
lea
adc
sar
pop
inc
std
retf
ds
push
pop
mov
jns
loop
call
mov
sub
push
aam
inc
cmps
pop
add
scas
sub
dec
cmps
pop
or
sahf
dec
in
inc
xchg
mov
pop
out
ret
lock
jbe
mov
(bad)
xor
push
out
sbb
ins
cmps
repz
or
rcl
push
popf
dec
call
xchg
lahf
cmp
mov
cmps
adc
and
xor
ret
add
imul
cmp
jne
in
jo
imul
jmp
rcr
xchg
in
cmp
adc
leave
outs
clc
daa
jge
fs
sub
repz
or
jle
sub
push
mov
push
mov
ins
push
mov
adc
mov
call
dec
stos
dec
js
aam
mov
movs
cmp
add
lods
sti
dec
push
scas
movs
xlat
mov
gs
loope
xchg
sbb
leave
dec
and
in
das
sub
int
jae
mov
lea
push
sbb
inc
sbb
cmp
cmps
imul
or
jbe
mov
mov
and
inc
jo
xchg
out
sti
hlt
push
out
es
mov
mov
scas
out
enter
xchg
inc
push
lods
pop
push
xlat
into
aas
mov
dec
pop
xchg
push
inc
mov
fdivr
xor
and
or
jge
lds
rcr
add
das
jno
sub
call
sub
aas
mov
not
sahf
inc
cmp
xor
fnstsw
cmps
les
dec
jl
out
shr
cdq
mov
sbb
addr16
mov
push
repnz
push
or
jge
jmp
pushf
push
jl
push
inc
ret
jo
mov
inc
cld
fiadd
ror
retf
ret
loopne
pop
iret
pushf
add
sbb
out
dec
ror
fdivr
mov
rcr
cdq
push
dec
mov
cld
ins
retf
mov
cdq
sti
sbb
add
sti
(bad)
cmc
push
mov
dec
jae
push
icebp
iret
mov
xor
pop
daa
and
lahf
xchg
jp
ss
(bad)
clc
(bad)
add
pop
fsubr
aaa
mov
outs
jg
fild
loop
popf
xchg
adc
pop
daa
or
scas
mov
mov
jno
adc
mov
xor
xor
jno
add
(bad)
jne
jae
jecxz
push
mov
stos
rcl
xchg
add
adc
(bad)
inc
inc
push
sub
cmp
pop
out
adc
push
lods
pop
mov
ds
and
mov
lock
push
std
pop
inc
fild
jmp
adc
addr16
push
cwde
movs
shl
ret
pop
lods
xor
jmp
xor
test
sub
scas
cmp
out
jbe
xor
and
imul
jne
mov
xor
imul
pop
push
mov
dec
shr
mov
add
mov
repz
stos
sub
push
inc
push
mov
dec
pop
jbe
bnd
push
fs
cmp
shr
jecxz
bound
cmp
mov
and
shl
sub
fwait
(bad)
daa
sbb
aaa
lea
leave
or
mov
rol
movs
mov
repz
xor
mov
push
lods
mov
out
pop
cmp
cmp
ret
and
push
call
inc
inc
push
adc
cli
dec
cld
add
mov
pop
and
sbb
aaa
jle
ja
aam
or
sbb
sub
lea
test
or
xor
adc
add
inc
xchg
stos
ins
scas
or
mov
dec
xchg
es
inc
sar
cmps
mov
popf
mov
inc
mov
ds
mov
pop
sub
imul
dec
mov
in
shl
xor
push
jno
sahf
cmp
and
jle
mov
mov
test
fwait
or
fcomp
mov
repnz
or
mov
push
mov
mov
pop
pop
jge
jmp
inc
imul
int3
aad
ret
scas
mov
cmp
jno
pop
and
lods
sbb
mov
out
mov
dec
lock
or
pop
xor
push
sbb
sub
(bad)
jle
push
fdiv
test
or
fsub
lds
adc
mov
es
scas
ins
stos
outs
dec
sub
xor
ins
fwait
xchg
cmp
out
mov
sbb
xchg
ins
pushf
(bad)
inc
into
adc
icebp
int
ja
push
popa
test
and
or
ret
aam
and
mov
imul
xor
push
pop
movsx
icebp
dec
scas
repnz
nop
dec
dec
arpl
fs
sbb
aam
bound
and
call
ret
inc
jnp
cmp
fmul
fst
ret
xchg
inc
add
gs
cwde
cwde
xchg
mov
outs
aam
mov
mov
(bad)
rcr
jl
adc
in
idiv
add
mov
mov
pop
in
rcr
pop
mov
cli
(bad)
psubsb
or
cmps
popf
loopne
sbb
pusha
lds
imul
push
cmp
pop
sbb
rcl
in
xchg
sub
pusha
dec
mov
arpl
push
mov
cmc
or
es
jo
mov
or
xchg
inc
nop
stos
dec
stc
sti
dec
hlt
sub
mov
into
nop
in
mov
repnz
(bad)
jb
dec
inc
cmp
(bad)
daa
adc
lahf
std
(bad)
mul
jno
(bad)
sbb
and
test
dec
pop
xchg
inc
out
fldenv
sub
(bad)
cmp
or
or
ret
xor
and
push
int3
stos
pushf
aad
imul
fisttp
dec
addr16
out
mov
sub
add
in
mov
xchg
popa
loope
adc
das
mov
(bad)
mov
and
sbb
sbb
dec
out
fnstcw
mov
js
nop
push
jmp
pop
ror
pop
repz
push
push
and
xlat
push
mov
jp
jl
in
jp
lea
cmp
cmp
or
test
pop
lock
js
mov
sub
into
fisubr
es
cmp
cmp
sub
mov
add
ss
loop
fmul
mov
xor
cmps
dec
dec
mov
clc
fcom
stc
arpl
test
add
mov
cmp
pop
or
and
out
(bad)
aad
pop
jno
xor
sub
scas
and
lods
pop
and
scas
aam
cmps
jo
jp
(bad)
mulps
add
and
pop
mov
mov
xchg
cmps
sub
nop
jns
xchg
call
dec
push
mov
inc
jne
sub
gs
xor
enter
mov
add
dec
cld
sub
push
ins
aam
(bad)
fsub
xor
fcmovb
test
inc
sbb
sar
call
fidivr
sbb
mov
out
aas
out
sbb
dec
imul
lock
lahf
ss
or
out
xchg
xchg
ret
xchg
cmp
test
js
adc
or
cdq
adc
loopne
int
enter
fwait
jbe
loopne
dec
adc
fwait
mov
clc
or
loop
and
sar
popf
mov
inc
and
adc
rcr
out
in
pop
push
in
cwde
(bad)
dec
or
mov
xchg
shr
dec
push
xchg
mov
enter
mov
iret
xchg
xchg
cmps
test
data16
mov
sub
mov
fld
out
xchg
mov
jmp
sar
ss
movs
das
xlat
push
inc
imul
(bad)
stc
pop
scas
iret
dec
cld
sti
fucomp
mov
adc
popf
mov
cmp
mov
sar
rcr
mov
sbb
pop
repz
add
les
(bad)
js
cmp
inc
jg
cmps
or
pop
and
inc
mov
xor
sub
call
cwde
stc
retf
ret
loopne
sub
pop
int
mov
ja
jne
mov
dec
inc
xchg
retf
xlat
xchg
cmps
push
es
add
cli
in
adc
inc
ret
sub
cmp
xchg
mov
iret
cmps
adc
add
sub
ds
fcmove
inc
add
pop
pop
or
sub
out
sbb
sbb
mov
pop
movs
seta
lds
pop
jmp
in
mov
cmp
rcr
push
sub
or
aaa
out
mov
rcr
repz
xor
out
adc
jnp
sub
scas
das
imul
add
hlt
fucompp
cs
(bad)
cwde
push
test
jb
jb
(bad)
ja
mov
(bad)
retf
mov
je
adc
dec
add
scas
dec
or
xchg
fwait
jg
jge
mov
jb
mov
add
int3
inc
lods
(bad)
jne
jne
rcr
sbb
add
mov
cmp
cmp
neg
dec
push
call
xlat
repz
pop
add
add
jge
mov
mov
int3
movs
loop
pop
add
dec
xchg
sub
hlt
sub
cwde
push
lahf
xlat
scas
adc
dec
mov
cmc
jp
fwait
aaa
xor
fwait
imul
mov
add
gs
inc
xchg
sbb
and
cmp
ss
mov
fst
outs
cs
shl
call
ret
scas
adc
in
cs
adc
push
xchg
clc
(bad)
cli
enter
lods
mov
(bad)
sbb
imul
inc
je
mov
or
jmp
popf
lods
movs
dec
xchg
jnp
movs
sbb
ret
int3
ficomp
inc
outs
mov
clc
dec
xor
inc
push
adc
add
xchg
push
test
aam
addr16
pop
repnz
jo
clc
or
pop
mov
les
sbb
daa
cmc
sbb
mov
(bad)
int
xchg
adc
adc
or
cmp
daa
js
cmp
inc
sbb
aam
rcr
jl
ss
call
(bad)
lahf
push
mov
leave
fidiv
(bad)
int
aaa
push
adc
sub
nop
mov
loope
jg
nop
mov
ins
loope
sub
test
push
lock
or
or
aaa
sub
fld
dec
or
sbb
clc
jl
stc
cli
mov
std
and
or
adc
add
mov
mov
push
jo
in
xor
mov
data16
in
daa
test
test
jb
out
mov
gs
pop
xchg
pop
test
jecxz
and
sub
lds
or
jo
imul
jae
add
mov
ins
mov
fs
mov
in
or
cmp
push
shl
xor
stos
enter
ss
mov
fimul
push
xchg
movs
inc
imul
icebp
jle
loope
imul
jg
xchg
pop
call
push
shl
add
xlat
fcomp
sub
cmp
dec
retf
or
je
sbb
mov
xor
arpl
data16
xchg
mov
sbb
enter
dec
bound
repz
jmp
stos
jecxz
or
sub
mov
cmp
jmp
in
jmp
push
loopne
cmp
inc
lds
cmp
(bad)
in
mov
add
xor
ja
(bad)
mov
xor
sub
test
xchg
push
(bad)
aam
leave
aaa
jb
and
repz
pop
xlat
iret
mov
jp
iret
pop
sub
fld
cli
inc
cmp
fist
ret
rol
cwde
lock
push
adc
stos
rcr
shl
iret
aas
mov
pop
push
xchg
adc
popa
mov
mov
mov
movs
aaa
les
iret
popa
mov
loope
pop
adc
fnstenv
jns
sbb
pop
mov
xlat
cmp
inc
mov
out
adc
adc
cmc
int3
int3
add
pusha
jns
sbb
cmps
sub
fmul
cmp
dec
mov
adc
mov
repz
ficom
cmp
fcom
mov
test
mov
xor
das
mov
adc
ins
mov
jae
xchg
es
mov
repz
add
pushf
and
pop
pop
dec
jb
pop
sbb
dec
test
sbb
sub
cmp
(bad)
adc
fimul
adc
in
pop
mov
cmps
adc
mov
aaa
movhps
ja
(bad)
jmp
imul
jp
sbb
dec
and
jp
mov
hlt
push
pop
jle
and
cmp
pop
inc
es
push
mov
fdiv
mov
add
adc
mov
cmp
aaa
pop
jae
add
xchg
sti
scas
rcl
add
ja
outs
dec
mov
jb
int3
pop
mov
ds
icebp
sbb
ja
sbb
cmp
jg
sahf
push
xchg
jg
mov
lds
pop
pop
adc
push
inc
ins
sbb
ret
les
mov
popf
sbb
in
test
and
push
and
pop
and
leave
sub
das
push
cmp
repz
jns
or
adc
or
inc
cdq
jne
mov
fisub
sbb
and
cmp
fsqrt
mov
mov
call
ja
enter
jmp
gs
dec
std
sbb
add
pop
js
dec
xchg
pop
mov
jbe
nop
pushf
(bad)
or
xor
pop
mov
scas
bound
js
gs
aam
repnz
jecxz
arpl
jae
(bad)
sbb
dec
test
push
int
lea
inc
mov
arpl
xchg
inc
jo
jg
imul
aad
push
mov
adc
daa
dec
cmp
xor
(bad)
sub
add
mov
sti
ror
loop
jae
shl
jne
popf
adc
lods
dec
ins
xor
out
jp
add
stc
mov
stc
ja
cmp
cmc
sti
movs
mov
shr
bound
fs
jl
das
xchg
popa
xchg
pop
jge
test
test
inc
test
cdq
cmps
jp
pop
cld
dec
fldenv
imul
loop
aad
jns
leave
xor
fs
ror
rol
jae
mov
inc
pushf
cmps
ret
fld
add
shl
retf
or
(bad)
cmp
mov
pinsrw
dec
daa
jnp
pop
inc
leave
add
test
add
and
dec
ret
and
shr
adc
adc
std
or
ss
jl
test
and
popf
pop
jae
pop
and
sti
pushf
inc
fdivrp
cmp
mov
inc
fst
sub
rol
pop
jp
cld
mov
mov
dec
not
sahf
and
es
jae
push
stos
nop
cld
xor
enter
iret
sbb
je
jb
test
into
xor
call
lods
mov
lods
dec
jle
test
mov
loop
jle
jecxz
jg
mov
out
sbb
out
int3
nop
push
shl
lds
and
cld
adc
adc
dec
push
iret
push
retf
sbb
mov
add
jle
xor
inc
lea
call
push
mov
mov
rol
xor
mov
aad
sub
jns
ret
cmps
imul
and
dec
sahf
pop
call
lds
add
js
push
push
mov
and
xchg
aam
loope
shl
jnp
imul
daa
mov
aaa
xor
and
push
ret
jb
mov
mov
mov
dec
pop
cmp
std
dec
mov
sbb
pop
fiadd
out
lahf
mov
in
dec
pop
in
out
int
(bad)
in
retf
mov
in
xor
jns
xchg
push
std
test
or
jp
pop
mov
mov
ins
lds
out
cmp
(bad)
xchg
and
test
aad
repz
add
jns
sub
fwait
(bad)
add
pushf
sti
pop
or
push
jne
(bad)
pop
jae
sub
pushf
sar
hlt
jecxz
mov
repz
fsubr
sub
push
pop
mov
fwait
movs
cmp
push
and
sub
dec
mov
aas
pop
push
nop
dec
and
arpl
in
pop
(bad)
scas
or
pop
aam
pop
(bad)
retf
mov
cs
jo
lods
or
xchg
daa
in
sub
inc
neg
cmps
cmp
or
hlt
sub
imul
cmc
shr
rdpmc
push
push
sub
pop
xor
out
ds
lods
sbb
sbb
or
mov
jae
and
push
and
popf
mov
ror
lods
out
jmp
mov
adc
cli
xlat
int3
jmp
or
lea
stos
fld
rol
push
inc
add
jb
jge
std
idiv
mov
sub
stos
jge
pop
addr16
(bad)
arpl
sti
and
je
and
jmpw
pop
leave
stos
bound
lods
inc
imul
sub
cmp
and
and
loopne
mov
push
stos
push
out
push
stc
and
lock
push
(bad)
cli
pop
xor
popf
inc
jnp
test
add
cmp
and
jnp
out
mov
jmp
sbb
dec
sbb
aaa
jae
addr16
sti
sbb
dec
inc
cmp
cwde
jmp
aaa
js
daa
xchg
xchg
jmp
into
hlt
push
jecxz
or
lea
hlt
mov
push
mov
mov
jmp
sub
fist
sub
ror
shl
test
or
aam
dec
cmc
in
movs
xlat
sbb
dec
lods
ror
pop
fs
xlat
xchg
in
je
mov
push
adc
call
mov
iret
cmp
js
in
push
push
call
dec
aam
repnz
in
test
call
mov
ret
mov
xlat
dec
jge
or
add
pop
xor
sahf
cli
push
inc
js
push
mov
leave
mov
xor
and
and
repz
cs
jbe
icebp
sbb
pop
cmp
and
in
and
fldcw
int
mov
mov
stos
adc
popa
adc
cwde
das
les
xchg
jnp
aam
test
test
call
(bad)
daa
sbb
mov
inc
fld
inc
dec
jecxz
test
in
in
dec
mov
push
mov
mov
add
inc
pop
test
mov
loopne
mov
repz
imul
pop
jmp
movs
push
aam
sbb
ret
xchg
sbb
mov
je
xchg
scas
and
sub
out
pop
pop
mov
push
jb
jae
cdq
popf
retf
xchg
mov
mov
mov
sub
stos
xchg
push
cwde
test
inc
inc
pushf
aas
das
jb
mov
cli
jbe
mov
(bad)
inc
push
loope
test
jns
mov
dec
iret
jb
cmps
sbb
(bad)
sub
mov
jl
jl
pop
push
sub
cmp
scas
lea
in
adc
sbb
lock
jmp
(bad)
(bad)
mov
(bad)
or
push
std
inc
or
test
fs
mov
adc
mov
in
and
(bad)
xlat
mov
inc
push
cmp
cmp
jne
rcr
add
in
nop
nop
mov
mov
inc
loope
xor
pop
std
arpl
mov
scas
xchg
push
or
shl
sub
jmp
mov
ret
movs
das
scas
scas
shl
retf
(bad)
push
xor
push
add
ror
rcl
cmps
test
inc
adc
sub
push
pop
enter
outs
popf
sbb
gs
cmps
cwde
xor
fidivr
lds
pop
adc
jmp
xor
xchg
jmp
and
in
inc
cmps
rcr
adc
(bad)
dec
aas
mov
jb
std
pop
mov
js
sbb
and
or
stos
mov
scas
sub
or
sbb
jo
push
repz
xor
out
imul
fidiv
into
adc
push
(bad)
pop
or
inc
jbe
int3
pushf
cmc
retf
xchg
jl
mov
outs
adc
push
dec
pop
or
push
sbb
test
mov
fs
movs
mov
xor
test
sbb
pop
adc
jg
es
dec
and
ja
add
dec
xor
jae
aaa
adc
das
sub
push
mov
lahf
and
mov
fbld
and
retf
mov
mul
mov
mov
das
call
stc
test
jns
js
test
sub
dec
loopne
dec
push
aad
nop
aaa
push
add
adc
pop
fwait
sbb
xor
pop
ins
inc
xchg
sar
test
(bad)
test
(bad)
xor
add
das
data16
mov
jle
dec
sbb
shl
(bad)
fwait
dec
add
in
xor
push
xchg
push
sbb
aas
sbb
mov
xor
add
jg
fdiv
mov
and
jmp
ins
rep
or
sub
jno
ds
inc
stos
ss
jmp
inc
sahf
call
mov
dec
mov
sub
stc
ror
jp
mov
mov
mov
pushf
mov
xor
fild
cdq
shr
ret
shl
shl
push
sahf
cdq
inc
retf
stc
lods
loope
aas
mov
gs
gs
or
xchg
jg
ins
xor
sbb
int
ss
xchg
imul
fstp
hlt
dec
pop
dec
out
cmp
mov
jp
outs
mov
mov
or
cld
test
or
cmp
pop
push
daa
mov
cmp
cmps
xchg
dec
fbld
xor
mov
mov
pop
retf
cmps
not
adc
(bad)
hlt
sbb
lods
pop
jbe
fcomp
mov
cmp
mov
lahf
paddb
add
repz
out
mov
xchg
sti
sahf
(bad)
sbb
xchg
sub
in
push
mov
pop
push
cmps
push
into
mov
aaa
dec
ins
shl
dec
fild
enter
mov
(bad)
popa
mov
test
push
sti
and
xchg
fdiv
mov
mov
jg
inc
dec
call
mov
es
aad
sbb
cmp
das
in
add
iret
mov
mov
out
(bad)
pop
aad
pop
imul
push
push
aad
mov
mov
int3
sub
call
mov
dec
ret
pop
movs
mov
push
call
or
pushf
in
(bad)
jns
and
ja
mov
test
ds
cmps
mov
lahf
in
adc
pop
daa
and
imul
sbb
push
arpl
retf
fimul
xchg
jo
push
push
imul
into
sub
pusha
fimul
lods
in
push
mov
aam
scas
iret
mov
test
rol
xchg
movs
cmp
cdq
in
fsub
jns
mov
jnp
sahf
xlat
rcr
mov
xor
push
adc
pop
xchg
repnz
sub
call
gs
fld
xor
cmp
and
les
add
cli
sahf
adc
mov
aaa
mov
jle
es
fiadd
scas
cmc
daa
push
mov
xor
retf
aam
jno
int3
daa
mov
xchg
rcl
loope
push
cs
jp
and
adc
fdivp
push
cwde
mov
jl
jae
mov
sbb
outs
push
jmp
call
out
mov
leave
cmps
sub
mov
and
test
dec
fmul
int
or
gs
pop
scas
sub
fnstsw
mov
xor
xchg
test
xor
aaa
mov
test
pop
fs
push
ss
or
cli
dec
adc
inc
dec
mov
add
xor
jae
xchg
test
fwait
(bad)
leave
dec
into
pop
into
out
inc
scas
shr
inc
rol
repnz
add
sti
mov
in
sub
push
or
int3
or
jae
xchg
pop
popf
mov
sbb
inc
xor
neg
neg
nop
add
shl
(bad)
(bad)
inc
inc
scas
or
mov
dec
stos
inc
xor
xchg
test
cli
inc
pop
scas
mov
sar
cmp
xchg
or
je
mov
je
cdq
cdq
cmp
dec
ins
lock
fst
cmps
push
sbb
mov
sub
jecxz
cld
aad
(bad)
push
xchg
sbb
mov
mov
fucomp
(bad)
pop
(bad)
push
clc
(bad)
aad
inc
inc
std
pop
pop
in
scas
(bad)
icebp
pop
adc
pop
pop
pop
ins
push
mov
int
cmp
cmp
add
xchg
inc
repnz
jg
fimul
jbe
adc
sahf
push
sub
mov
loopne
sub
xor
dec
xor
test
std
or
stc
xor
pop
enter
inc
pop
xchg
dec
push
jne
ins
mov
test
neg
stos
xchg
pop
call
rol
xor
je
add
fcmovnbe
stos
loop
pop
loop
cmp
push
daa
xchg
cmp
mov
les
js
dec
push
jmp
dec
pop
push
inc
cwde
test
rcl
xor
icebp
add
dec
clc
jnp
sub
xchg
sbb
mov
aad
xor
and
mov
dec
sahf
aas
xchg
pop
xchg
test
dec
movs
dec
out
mov
xchg
movs
int3
adc
pop
xlat
not
add
into
mov
push
sub
adc
or
ss
mov
gs
loop
ret
mov
inc
pop
repnz
aad
pop
mov
fst
add
jae
pusha
je
test
xchg
and
test
push
cmp
add
jle
and
gs
push
cld
sar
push
dec
movs
push
daa
in
xor
ss
jo
loopne
mov
and
adc
shl
mov
pop
loop
mov
or
fwait
or
nop
push
mov
xchg
ins
dec
fild
xchg
xor
mov
(bad)
lahf
adc
mov
lds
scas
test
ja
mov
ss
and
xchg
fisttp
sbb
ds
mov
inc
xlat
inc
loop
ins
aas
in
in
rcl
loopne
imul
jmp
ins
adc
or
test
pusha
mov
xchg
scas
stos
xchg
icebp
pop
and
jle
pop
stc
pop
push
mov
shr
sbb
jecxz
pop
xor
jle
call
sbb
xchg
aaa
and
pop
mov
test
or
aam
add
lea
js
cs
pushf
jl
and
ins
sub
es
push
data16
jmp
push
mov
jne
sub
ss
aad
stc
adc
in
lahf
xchg
xor
imul
movs
shl
mov
lea
or
fadd
or
fmul
dec
push
mov
jno
scas
cmp
(bad)
hlt
pop
mov
xor
inc
in
outs
jnp
inc
aaa
or
inc
jno
inc
fst
sub
ret
add
outs
adc
fdiv
les
mov
push
push
and
stos
cmc
or
leave
in
imul
and
add
dec
arpl
and
jns
add
mov
or
jno
jge
jnp
aam
jmp
fadd
xchg
cli
rcr
cs
es
nop
xor
push
scas
cwde
loopne
add
and
ror
xchg
outs
clc
mov
adc
sub
sbb
mov
ds
xor
jmp
cmps
lds
xchg
inc
mov
xor
or
data16
idiv
inc
mov
call
fs
inc
shr
cmp
dec
inc
adc
aam
dec
fistp
bound
out
mov
and
call
sub
daa
icebp
xor
icebp
xchg
cdq
sub
jns
dec
cmp
pop
out
jl
shl
push
xchg
call
add
push
dec
fmul
iret
or
mov
mov
(bad)
jl
cmp
jp
sbb
int3
cli
push
scas
and
imul
mov
xchg
pop
test
sahf
cmp
push
cdq
inc
stos
jbe
push
(bad)
hlt
cld
mov
xchg
push
xor
in
xchg
dec
stos
mov
dec
dec
push
dec
mov
es
or
ficom
(bad)
gs
or
repz
mov
rcr
jecxz
rol
imul
add
mov
mov
imul
test
add
sub
inc
add
mov
jp
xor
jl
mov
sub
push
or
movs
sbb
into
icebp
stos
sahf
popa
jbe
mov
mov
inc
rcr
xchg
ins
imul
aam
or
aam
call
in
xchg
inc
test
out
scas
push
or
into
push
mov
ds
sbb
cmp
inc
repz
div
xchg
pop
inc
sub
push
out
pop
jo
push
fcmovnbe
cdq
or
jne
and
lds
cli
and
xchg
mov
int3
xchg
sti
mov
jp
shr
mov
call
out
push
movs
dec
xchg
jb
adc
pop
mov
adc
stc
icebp
cmps
xor
pop
adc
cmp
pop
inc
scas
push
out
pop
adc
clc
sub
sub
hlt
scas
or
sub
shr
test
cmp
mov
ret
xlat
fxch
(bad)
adc
push
loope
ror
je
dec
cmps
sahf
fimul
mov
push
mov
inc
nop
xlat
outs
fdiv
xchg
enter
gs
gs
hlt
cmp
and
pusha
add
push
ds
retf
push
jno
cld
xlat
outs
(bad)
repnz
sub
jle
xchg
lock
inc
cli
xchg
add
mov
jecxz
lahf
mov
inc
and
cmps
mov
mov
into
(bad)
pop
ret
jmp
pusha
jnp
cmp
mov
pop
inc
pop
pushf
sub
or
xor
pop
inc
mov
pop
or
(bad)
call
das
outs
lods
push
inc
fadd
dec
retf
inc
call
mov
and
adc
jo
mov
adc
adc
add
cmp
fld
movs
(bad)
ficom
imul
fisubr
xchg
sahf
cmp
dec
jecxz
cmps
adc
mov
cmp
call
ss
inc
daa
pop
into
inc
xor
inc
or
sub
fsubr
lahf
jae
mov
push
(bad)
hlt
stos
dec
push
cmps
(bad)
fld
movs
out
and
mov
sub
pop
push
mov
(bad)
fnstsw
lahf
sub
mov
fisubr
xchg
rcr
sub
cmp
imul
or
dec
mov
fisttp
adc
test
repnz
aad
repnz
push
fwait
jmp
je
mov
sbb
dec
xchg
mov
into
fstp
add
scas
mov
repz
xchg
cmp
loopne
adc
sbb
test
imul
fild
mov
mov
enter
inc
jb
xchg
jle
fbld
jecxz
movs
sub
mov
(bad)
cwde
push
sub
jo
sbb
push
stc
pusha
or
mov
test
push
push
fst
int
aam
sahf
jno
cmp
pop
scas
pop
pop
sti
int3
xor
inc
adc
jae
xchg
xlat
xor
push
(bad)
(bad)
loopne
bound
pop
xor
fsubrp
push
and
pop
inc
sbb
pop
repnz
jp
dec
jle
retf
cdq
pusha
jmp
sahf
cmp
pop
and
test
(bad)
loope
xor
(bad)
int
sbb
jo
add
inc
test
push
(bad)
popa
xor
inc
out
(bad)
push
mov
jne
adc
aad
rcl
lods
jecxz
push
jmp
dec
in
push
inc
lgs
fs
pop
xor
lea
dec
movs
(bad)
fs
push
dec
gs
xchg
mov
mov
jb
in
dec
cmp
dec
dec
retf
cmp
jmp
jb
mov
loope
ss
push
es
lock
push
lods
jp
(bad)
add
cmps
not
fs
push
push
div
and
in
sub
jle
xor
aas
push
mov
mov
sbb
inc
xor
loope
push
push
cmps
and
loop
movs
std
neg
cs
out
int3
push
xor
sub
shr
and
sbb
dec
sbb
and
repnz
adc
xchg
(bad)
in
out
sbb
fwait
and
aad
xor
jmp
cmp
xlat
call
add
shr
aas
push
bnd
das
inc
jecxz
je
jecxz
fiadd
mov
loop
push
jl
cmp
jmp
xor
outs
addr16
jnp
nop
sti
mov
sub
pop
xchg
mov
cmp
xchg
pushf
in
adc
or
cmp
push
cmp
dec
leave
sbb
fbld
mov
or
xchg
in
je
pop
movs
ss
sub
aaa
shl
les
rcl
repnz
or
and
and
inc
int
mov
dec
push
mov
jl
or
xor
movs
repz
push
sbb
jle
idiv
in
mov
test
push
nop
loope
aad
leave
adc
(bad)
push
int3
and
sbb
outs
fcomp
jbe
inc
jecxz
lea
jbe
mov
sub
mov
daa
sbb
dec
gs
pop
and
dec
mov
jns
out
(bad)
mov
adc
cmp
adc
inc
scas
jl
mov
push
ret
cmp
cmp
outs
inc
retf
retf
mov
jo
arpl
in
mov
dec
aam
out
sbb
mov
cmp
cmp
sar
jb
sbb
and
and
popf
inc
mov
sbb
ds
popa
arpl
pop
dec
stos
push
pushf
mov
jo
sbb
ret
loope
ret
cmps
xchg
push
mov
cmp
mov
jno
cld
mov
fimul
dec
sub
add
aaa
or
das
in
dec
xor
(bad)
bnd
cli
(bad)
jl
dec
pop
mov
pop
int3
pop
call
dec
aas
or
xor
push
jmp
xchg
ret
and
or
inc
xchg
iret
inc
xchg
mov
and
push
stos
xor
test
fcom
scas
mov
xchg
call
retf
push
sbb
cmp
dec
jae
push
add
xchg
jne
lods
inc
mov
xor
hlt
(bad)
mov
popf
repz
dec
scas
into
dec
test
or
add
sub
sub
add
mov
xchg
fsubr
imul
icebp
into
fldz
fldl2e
mov
ret
pop
xor
and
(bad)
cdq
aaa
lods
xchg
nop
dec
sti
cmp
in
lods
mov
in
loopne
cmp
and
sbb
jo
pop
mov
push
push
js
das
mov
dec
das
add
mov
pop
mov
jmp
mov
xchg
sub
(bad)
jnp
push
cmps
xlat
std
mov
fstp
mov
rcl
ret
mov
bound
push
jp
xor
adc
push
or
into
imul
pop
mov
rol
test
and
shr
pop
inc
cwde
ins
out
push
(bad)
idiv
adc
jp
jp
mov
call
or
test
sar
call
sub
mov
mov
sbb
pop
ficom
jno
add
inc
sub
(bad)
cmp
pop
sub
cdq
sbb
mov
fisttp
lods
(bad)
outs
cmps
ror
add
addr16
int3
mov
mov
xchg
push
popf
jmp
jmp
invlpg
dec
inc
or
aam
cwde
(bad)
jg
(bad)
sti
loop
cmp
cmps
add
push
adc
xchg
sbb
sahf
test
xchg
sub
sbb
out
xchg
loope
jno
lods
xor
pop
jp
ds
jg
arpl
xlat
(bad)
std
mov
sbb
ror
or
mov
popa
xchg
mov
daa
es
hlt
xor
xchg
xchg
data16
jl
pop
jle
shr
fistp
loopne
jmp
dec
push
das
loop
in
jno
adc
push
loop
and
xchg
cmp
sbb
xchg
mov
xor
rol
sub
movs
int3
or
cmp
or
dec
jae
push
repz
lea
push
aad
cmps
cmp
push
aaa
rcl
bound
mov
outs
sub
outs
fsub
fdivr
mov
mov
cmp
lods
add
push
xchg
sbb
cmps
sub
clc
call
pop
sbb
xor
imul
lea
pop
adc
jo
jge
pusha
xor
or
sbb
and
cmp
adc
pop
pop
mov
adc
adc
stc
and
mov
mov
or
mov
leave
loop
and
out
pop
(bad)
stc
cli
jb
imul
leave
aas
add
push
jecxz
inc
mov
push
sbb
jecxz
call
fadd
xor
mov
xlat
outs
dec
dec
scas
stos
shl
loop
jg
enter
(bad)
adc
rcr
shr
(bad)
rcl
out
pop
jbe
mov
ds
xchg
aad
ret
cdq
(bad)
mov
or
cdq
lea
xor
mov
sbb
and
cs
mov
ins
add
shl
popa
sbb
mov
aas
add
arpl
fimul
cmps
scas
jbe
jae
inc
fsubr
dec
push
aam
push
lods
outs
jp
icebp
mov
aas
jne
cmp
call
jl
xchg
pop
pop
int
mov
xchg
jle
dec
jl
sar
push
mov
and
mov
inc
pop
popa
retf
xchg
and
mov
ja
push
cld
lahf
(bad)
mov
sub
mov
fwait
sub
pop
jmp
cwde
cmps
mov
dec
iret
xchg
adc
and
jnp
cwde
not
loopne
loop
adc
adc
iret
push
aaa
aam
rcl
add
mov
movs
pop
or
xchg
jae
hlt
jmp
(bad)
(bad)
out
cmovg
mov
call
enter
push
xchg
lds
stos
inc
sbb
int
pop
mov
hlt
rcl
push
out
add
mov
pushf
push
loopne
xchg
lahf
fcmovne
adc
call
cwde
or
not
inc
dec
sub
test
adc
fdivp
pop
fs
fdivr
int3
enter
sar
jg
inc
mov
jl
xor
dec
in
movs
lea
cs
(bad)
loopne
sbb
and
les
out
add
inc
cs
neg
je
pushf
fcmove
out
hlt
jb
fnstcw
sbb
or
or
jo
(bad)
(bad)
cld
cmp
mov
sbb
jmp
jno
imul
xchg
and
fs
gs
bound
pusha
xor
pand
inc
cmp
int3
xor
or
nop
mov
test
cs
or
je
push
mov
push
cld
pop
ja
add
add
bound
mov
add
leave
cmps
jge
sbb
call
int3
scas
add
inc
aas
pop
movs
xchg
mov
or
dec
cmp
inc
push
lock
pop
and
add
test
inc
fcmovne
mov
cmc
cmp
xor
(bad)
nop
add
dec
int
in
icebp
or
inc
out
inc
jb
mov
pop
push
adc
leave
push
out
sub
scas
push
pop
ins
fisub
fisub
lahf
lods
jle
les
outs
inc
mov
mov
std
xlat
adc
inc
leave
out
scas
out
dec
cmp
stos
mov
adc
and
add
sub
aaa
sbb
push
sbb
jle
jbe
xchg
and
scas
jecxz
push
xchg
sub
jecxz
test
fistp
cmp
push
dec
jb
nop
inc
inc
in
mov
and
jns
(bad)
call
movs
rol
fnstcw
shr
jl
hlt
scas
movs
sub
and
xchg
dec
mov
stc
xchg
ds
(bad)
(bad)
jno
int
sub
or
xchg
add
sbb
(bad)
rcr
cmp
add
sub
mov
push
xor
push
aad
fistp
inc
je
call
adc
ret
xor
call
mov
or
mov
mov
mov
xor
and
dec
dec
xor
cmp
xlat
(bad)
sub
cmp
fild
int
mov
xchg
mov
or
stc
dec
mov
pop
jnp
push
icebp
leave
mov
lahf
inc
loopne
mov
push
out
std
sbb
addr16
mov
(bad)
jle
fcom
jl
repnz
sub
frstor
or
popf
mov
cmp
jbe
imul
adc
xlat
or
call
add
xchg
inc
jne
or
fcomip
movs
int
iret
(bad)
cmp
sar
mul
je
mov
movs
lock
xchg
das
movs
mov
xchg
aad
or
xor
inc
xor
shr
mov
jmp
push
adc
cmps
push
jg
jne
fist
frstor
movs
mov
jbe
push
add
lea
adc
fistp
ret
call
pop
dec
je
lods
cmps
sbb
(bad)
mov
xchg
push
fisub
inc
mov
cmp
in
(bad)
jmp
in
cmp
jmp
push
jo
popa
gs
xchg
loope
pop
sub
mov
call
dec
mov
test
inc
push
call
test
out
jb
sub
push
and
out
mov
ror
push
adc
(bad)
fstp
retf
arpl
frndint
jmp
push
pop
sbb
retf
fsub
test
jmp
push
icebp
call
ret
std
cmp
scas
stc
sahf
jge
out
std
sbb
dec
daa
dec
into
jge
aam
iret
or
add
or
fdivr
(bad)
and
out
inc
mov
inc
nop
add
cdq
ds
jl
mov
imul
ja
sbb
push
hlt
inc
sti
push
outs
dec
pop
dec
xchg
xchg
dec
dec
jl
imul
lods
cld
xor
cmp
jl
fwait
jno
fild
push
xchg
scas
add
mov
lds
(bad)
cwde
fstp
xchg
(bad)
push
ss
sbb
cmp
das
adc
or
dec
cli
fs
fnstcw
pop
rol
jmp
stc
inc
imul
aaa
jmp
xor
sub
sbb
cwde
jns
lods
push
cli
jno
fld
or
retf
sub
aas
test
enter
add
ret
pusha
lods
adc
popa
and
adc
jno
icebp
adc
jp
pop
sti
cwde
cdq
mov
dec
mov
cmp
mov
and
scas
fs
fwait
mov
repz
(bad)
ret
shl
and
sbb
mul
cmps
ins
retf
xlat
mov
ja
(bad)
xchg
gs
jbe
mov
cmp
movs
popf
xchg
pop
xchg
arpl
and
adc
setno
stos
fisubr
inc
adc
scas
sbb
and
loop
xchg
jo
mov
jmp
dec
or
jae
dec
push
std
lock
imul
sub
loopne
out
loope
test
rol
idiv
adc
sbb
cmp
inc
mov
(bad)
mov
(bad)
mov
dec
loop
and
outs
fld
cwde
ins
shl
retf
push
pusha
push
shl
aad
in
cdq
rol
mov
jb
cs
fbstp
call
cmp
ss
les
icebp
arpl
sbb
dec
retf
push
into
fbld
sbb
pop
mov
sub
push
add
sub
vpaddusw
hlt
enter
cmp
jbe
iret
mov
inc
ins
retf
int3
cmp
mov
std
add
repz
mov
ffree
and
outs
bound
je
call
ret
repz
outs
or
out
scas
sbb
mov
icebp
sbb
mov
enter
jnp
cmp
in
in
mov
mov
test
lea
cmps
data16
mov
or
pop
cpuid
mov
or
fdivr
jle
bound
popf
daa
mov
stc
sbb
stos
mov
mov
lods
jg
std
(bad)
nop
xchg
xor
add
or
div
bt
call
inc
jo
ds
mov
(bad)
push
and
imul
sbb
loope
in
outs
stos
sub
cmp
test
add
movs
xor
pop
in
inc
sub
sahf
lsl
(bad)
cmp
adc
pop
(bad)
jle
sbb
xchg
and
retf
mov
dec
repz
ins
and
sub
push
js
rcr
jne
jmp
daa
stc
aam
sub
mov
mov
jp
es
xor
cmp
and
inc
pop
shl
imul
inc
pusha
movsx
and
mov
test
jne
(bad)
into
xor
mov
ss
xchg
int3
stc
test
(bad)
mov
dec
shr
inc
mov
retf
jmp
data16
mov
dec
push
and
fcom
fs
sti
pop
neg
xor
dec
lahf
mov
sub
inc
aad
dec
mov
sbb
out
arpl
lods
ins
pop
int
sub
mov
pop
cmc
inc
lahf
sub
jmp
stos
aad
pop
cmps
rol
aaa
fild
clc
cmp
sub
pop
mov
iret
lods
repnz
int
sub
lods
(bad)
jns
js
push
pop
jns
sahf
(bad)
mov
ret
pop
test
pusha
ins
push
loop
repnz
or
and
push
sub
xchg
mov
xor
mov
add
in
adc
fidivr
mov
xchg
add
(bad)
mov
sbb
push
inc
test
push
fisttp
mov
pop
icebp
retf
mov
test
inc
cmps
jg
loop
jae
in
or
adc
adc
xor
adc
(bad)
test
in
fcom
out
xor
shl
ins
jmp
sahf
mov
lods
dec
nop
sub
push
jecxz
and
loopne
aas
jno
pop
xlat
movs
shl
test
jp
push
in
sbb
retf
add
mov
movs
(bad)
sbb
pop
or
cmps
jecxz
dec
dec
fcom
dec
enter
aad
jmp
call
sahf
jbe
cmc
pop
mov
mov
ja
ret
retf
add
in
int3
pop
pop
push
push
fwait
in
(bad)
jp
in
or
cmp
sub
dec
or
mov
hlt
push
mov
pop
popa
leave
xchg
ja
cmp
mov
jmp
(bad)
(bad)
cmps
dec
imul
nop
pusha
test
repz
inc
sar
stc
cli
jmp
sbb
inc
popa
das
out
dec
fwait
cli
dec
fisub
dec
call
xchg
lea
push
cs
sub
push
or
mov
mov
xor
ins
(bad)
(bad)
pop
daa
daa
inc
xchg
xchg
push
enter
push
cli
leave
mov
jecxz
movs
scas
imul
scas
mov
inc
stc
ror
(bad)
loopne
mov
mov
ja
call
fmul
in
clc
jl
loop
movs
push
or
aaa
add
lods
aam
int
movs
je
stos
or
mov
cdq
aam
mov
push
jb
mov
div
jnp
jmp
jbe
out
pop
loope
aad
mov
aad
push
pop
xor
push
add
out
sbb
or
mov
mov
addr16
sub
jnp
bound
gs
fisttp
inc
movs
xchg
or
icebp
(bad)
mov
cli
xchg
mov
shl
fwait
scas
fidivr
push
mov
add
rcr
mov
pop
mov
idiv
inc
dec
mov
add
adc
jbe
hlt
aad
inc
sub
sti
gs
lods
into
ins
or
xor
stos
xchg
ins
out
jnp
dec
and
cwde
pop
pop
cli
sub
mov
les
mov
leave
push
shl
pop
pusha
je
out
cs
aaa
fisubr
cld
cmovge
or
and
dec
or
mov
xchg
loopne
push
cmps
push
div
dec
jo
push
cmp
sbb
outs
aam
pop
fdiv
cmp
aaa
cld
popa
push
ror
xor
dec
scas
fist
jno
jnp
mov
and
shl
sar
add
fisubr
push
add
mov
outs
sbb
je
rcr
cmp
push
adc
sbb
or
or
das
sub
jmp
or
fstp
or
push
ss
mov
jl
push
leave
test
cli
test
mov
and
ds
adc
cmp
sbb
mov
mov
cs
call
daa
pop
es
(bad)
fisttp
xor
push
mov
lea
call
cli
xchg
pop
addr16
out
fldcw
jmp
and
adc
xlat
into
popf
(bad)
pop
mov
cmp
inc
ins
aaa
push
fiadd
test
rcr
mov
in
std
cli
sub
push
rol
(bad)
and
rol
sub
outs
sub
js
push
inc
add
mov
add
or
xchg
call
in
jns
out
int3
push
and
mov
sbb
repnz
and
pop
imul
lea
jmp
scas
pop
sub
jl
mov
(bad)
(bad)
or
pop
pop
cmp
and
mov
pushf
or
test
mov
das
adc
retf
in
cmp
mov
les
mov
mov
sub
adc
cmp
mov
pop
add
ret
aas
clc
and
xchg
push
push
inc
cwde
and
or
sub
jmp
fidiv
daa
mov
push
leave
pop
stc
movs
fldenv
or
add
pop
push
rep
sub
lods
(bad)
jo
ins
sub
call
(bad)
pop
fidivr
inc
in
ins
mov
xchg
fwait
lods
fs
iret
out
push
ret
test
mov
into
mov
imul
mov
jge
pop
jle
rol
push
push
jae
xchg
xor
jmp
call
jle
dec
inc
cld
mov
push
mov
cmps
pop
jne
ds
push
(bad)
ins
test
sub
repz
lods
daa
pop
or
test
fadd
mov
xchg
mov
push
pop
and
add
jnp
push
push
retf
ret
mov
aam
std
dec
(bad)
jo
sub
popa
jle
clc
scas
mov
jmp
jb
add
mov
(bad)
cmps
mov
pop
jge
or
push
push
shr
ja
nop
repz
pop
icebp
cmp
add
add
or
push
push
movs
mov
push
imul
fwait
sar
cmp
sbb
mov
minps
ins
sub
cld
cwde
int3
push
add
mov
push
mov
div
dec
outs
mov
push
pushf
sub
mov
xchg
mov
and
jb
es
jb
and
inc
xchg
cmp
xchg
stos
xor
stc
fs
adc
inc
and
sub
stc
add
push
dec
call
ret
push
push
mov
jbe
addr16
out
dec
ror
movs
clc
les
xchg
in
cmp
loope
aas
sbb
and
mov
push
cmps
jnp
daa
pop
xor
adc
xchg
test
mov
retf
(bad)
sbb
pop
fdivrp
frstor
bound
in
adc
jmp
scas
mov
dec
and
cs
adc
(bad)
cmc
mov
iret
in
bswap
sbb
arpl
lds
outs
es
ins
test
pop
fdivr
mov
push
sbb
jmp
cmp
mov
xchg
in
jp
dec
mov
add
mov
add
adc
xor
out
popf
pop
dec
jns
sar
call
sub
imul
imul
mov
push
ret
mov
pop
and
ins
adc
and
call
aad
arpl
dec
pop
fwait
pop
push
call
stos
jg
popf
xchg
idiv
adc
add
sub
pop
add
loopne
pop
addr16
fld
jo
inc
fwait
nop
xor
push
aaa
add
(bad)
dec
stos
es
in
pop
mov
in
lahf
add
hlt
outs
mov
stos
add
test
aaa
or
mov
cmp
cmps
lods
add
sar
jae
jmp
push
pop
sub
xor
and
xor
loope
je
jnp
call
icebp
pop
test
push
clc
xchg
mul
inc
adc
ins
nop
mov
adc
leave
mov
gs
dec
ins
xor
shr
or
sub
push
mov
(bad)
in
das
sbb
sub
test
iret
sahf
dec
cli
fiadd
cmc
fidivr
test
stc
xchg
mov
into
sub
(bad)
jmp
push
xor
and
push
xor
in
ss
jne
mov
cmp
arpl
jg
jmp
call
jecxz
sub
sub
mov
fiadd
retf
mov
enter
enter
mov
movs
xchg
mov
in
ins
aaa
leave
stos
movs
loop
mov
ja
pop
pop
mov
mov
sub
lods
retf
and
sbb
xlat
outs
in
xchg
jno
cdq
lds
and
sbb
int
mov
cmp
xor
scas
cs
xchg
or
mov
call
push
xlat
leave
fild
out
mov
sub
call
cmp
iretw
hlt
xor
push
dec
rcl
push
jle
jb
inc
ja
xor
out
xchg
repz
add
pop
push
loope
push
dec
(bad)
dec
adc
push
cs
cmp
xchg
pop
dec
sahf
mov
aam
cdq
hlt
leave
xor
add
scas
adc
lahf
fdivr
out
fldenv
imul
les
ss
mov
fs
push
add
mov
dec
out
push
in
arpl
mov
stos
add
enter
mov
fwait
mov
arpl
and
fstp
js
dec
int
push
(bad)
movs
inc
mov
neg
inc
(bad)
int
popa
jne
js
add
xchg
add
jmp
ins
push
sub
xlat
mov
sub
call
inc
outs
cmps
dec
pop
jnp
call
mov
inc
mov
in
outs
test
and
adc
or
ss
mov
mov
sti
mov
int
push
test
pop
setge
sub
cwde
cmp
pop
sbb
ret
xchg
xlat
push
ret
rol
push
enter
jp
lods
sub
lods
rcl
outs
xchg
mov
(bad)
je
cmp
adc
xor
popa
inc
add
dec
xchg
out
icebp
cmc
in
jle
sub
mov
int3
and
mov
stos
ret
pop
clc
test
icebp
xchg
mov
mov
repz
push
repz
mov
mov
outs
mov
les
ins
popa
mov
sbb
dec
pop
scas
ror
and
idiv
mov
mov
mov
push
loop
or
xchg
and
xchg
adc
jnp
mov
xchg
adc
clc
sbb
adc
ret
push
push
add
rcl
add
pusha
in
pop
sub
jmp
pop
sbb
dec
call
mov
and
imul
scas
dec
push
call
dec
push
mov
cmp
mov
push
nop
jp
das
push
fisttp
or
cmp
aas
out
rcr
push
push
aam
fmul
mov
aam
pop
mov
cmp
fisub
jmp
push
stos
mov
push
lea
sbb
(bad)
xchg
adc
adc
jl
add
retf
adc
sub
int
in
ror
call
xor
xchg
push
dec
div
or
sub
sub
adc
in
pop
sub
fist
pop
lds
ins
cmp
sar
sbb
ret
push
mov
aam
mov
clc
cdq
add
xor
push
stc
daa
mov
std
jle
cmp
push
mov
sub
enter
into
es
sbb
dec
rcl
ret
dec
sar
pop
out
out
test
push
adc
rcr
(bad)
jmp
pop
inc
push
mov
adc
push
push
xchg
les
test
js
cmps
sub
gs
sbb
mov
mov
push
hlt
adc
xchg
mov
dec
rcl
jl
sahf
rol
push
jp
pop
sub
movs
xchg
xchg
push
push
cli
lods
pop
and
in
(bad)
clc
mov
fs
xor
jecxz
mov
inc
imul
inc
jge
test
(bad)
imul
adc
inc
sbb
dec
and
pushf
repz
outs
icebp
aam
cli
sub
test
test
and
lods
ins
cld
fadd
jl
outs
mul
sub
mov
xchg
retf
jne
sbb
out
xor
popf
xor
rcr
jle
push
xchg
inc
push
es
xor
mov
enter
dec
xchg
jle
dec
imul
movs
fwait
pop
nop
gs
adc
mov
jl
loopne
outs
jns
adc
movs
xor
mov
cmp
sbb
xchg
cmps
popf
cmc
repz
mov
mov
shl
(bad)
cmp
and
cmp
popa
mov
outs
pop
loop
movs
call
sub
fisttp
test
cmp
cmp
js
push
cmove
add
mov
xlat
outs
sub
arpl
movs
pop
inc
or
and
mov
lock
cwde
xlat
xchg
into
push
sti
push
inc
pop
shl
dec
shl
pop
ret
mov
pop
mov
mov
pop
xor
xlat
nop
xchg
mov
clc
jns
(bad)
pop
adc
push
dec
fadd
fnsave
ja
sbb
out
pop
jg
sub
lahf
mov
and
int
les
cs
xchg
xchg
fcom
pop
cmp
sahf
iret
adc
mov
fsubr
mov
jmp
stos
daa
push
ss
sar
cmps
push
adc
xchg
scas
jns
xor
(bad)
pop
xor
aad
clc
mov
sub
sbb
jge
mov
std
ret
jae
inc
mov
or
jl
les
sub
sbb
sub
pop
mov
ror
arpl
cmp
push
sbb
or
dec
sahf
inc
mov
and
sbb
int3
mov
push
xchg
push
lea
sbb
mov
out
push
mov
rol
or
cmp
pop
pop
test
outs
mov
and
sub
fidivr
js
jmp
fnsave
outs
int3
mov
movs
mov
ret
mov
jge
das
jnp
(bad)
clc
pusha
sub
jae
or
test
in
sbb
call
cmp
and
movs
pop
xor
sbb
loope
pop
dec
mov
ss
sar
xor
pop
jno
dec
cdq
xchg
mov
pop
jo
cs
xchg
je
test
xor
mov
call
leave
sysenter
lea
push
mov
adc
dec
inc
pop
dec
popf
outs
rcl
icebp
dec
ret
cmc
movs
(bad)
xor
inc
xor
adc
or
pop
lods
push
pop
sbb
jo
fs
aaa
jmp
xchg
outs
loope
(bad)
pop
pop
pop
push
cmovbe
sub
jne
cdq
push
pop
lea
mov
mov
sbb
jmp
enter
out
mov
cvttps2pi
mov
dec
in
xchg
adc
punpckhbw
pop
mov
push
cwde
jp
retf
loop
outs
pusha
test
icebp
inc
test
ins
in
sbb
dec
or
mov
adc
popf
jae
popa
push
das
sbb
or
cmps
mov
inc
pop
cld
and
gs
mov
mov
and
es
xor
ss
pop
mov
movs
or
or
lea
jbe
js
imul
sbb
sub
push
les
sub
push
or
sub
lock
sti
in
jnp
stc
cmp
sbb
mov
mov
je
dec
push
xor
repz
pop
pop
retf
push
repnz
jge
mov
icebp
ins
fistp
mov
jo
pop
pop
jmp
shr
or
push
shl
dec
repnz
js
enter
int
xor
shr
and
sbb
cs
xor
pop
xchg
pop
out
popa
jecxz
inc
sub
ss
xor
int
imul
jl
(bad)
addr16
or
sar
mov
mov
das
fdiv
jo
jg
data16
and
xchg
cdq
dec
(bad)
xchg
mov
add
lahf
jb
or
inc
aaa
cld
(bad)
aas
jmp
and
cmp
aam
jb
int
mov
sbb
or
fwait
add
dec
inc
jle
sub
mov
jnp
ror
iret
adc
call
cwde
call
cdq
sbb
or
fs
dec
fs
cmps
(bad)
in
push
sbb
adc
add
jnp
xchg
cli
jp
repnz
dec
mov
dec
icebp
push
imul
sub
sti
xor
push
push
pop
xchg
mov
test
xor
mov
(bad)
push
jle
fsub
popa
dec
push
add
mov
mov
xor
popf
xchg
not
push
imul
push
sbb
sbb
mov
xchg
mov
adc
arpl
setle
aaa
mov
xor
mov
fs
cmp
lods
loopne
pop
in
bound
xor
mov
lods
fdivr
scas
enter
imul
in
loop
xchg
movs
and
xlat
je
bound
mul
xchg
iret
das
int
xchg
in
and
mov
ror
pop
xchg
stos
sbb
shl
or
pusha
jge
mov
and
cmp
je
dec
test
and
enter
xor
cmp
call
imul
cmp
and
dec
test
(bad)
mov
jno
jl
push
cdq
sbb
retf
xor
ss
xlat
rcr
ffree
mov
popa
push
push
adc
or
data16
jmp
cmp
mov
std
popf
cmp
pop
adc
cmps
mov
pop
adc
mov
cmc
jmp
cmps
cmp
xor
push
jl
xor
jmp
jg
cmp
fistp
icebp
add
aad
es
push
and
xor
popf
addr16
out
pop
pusha
and
(bad)
pop
mov
jl
fsub
pop
lahf
xchg
addr16
adc
dec
adc
pusha
mov
mov
sbb
repz
movs
mov
rcl
mov
outs
jae
clc
xchg
jge
outs
push
enter
test
and
add
mov
lahf
inc
mov
jecxz
outs
popf
inc
and
mov
sbb
sbb
mov
add
jo
mov
loope
sbb
mov
outs
lds
adc
cmp
ins
lods
and
sub
cmps
xchg
outs
xchg
and
sub
das
xor
pop
mov
inc
jne
in
sub
inc
stos
mul
push
xchg
outs
or
lds
cdq
sahf
pop
push
mov
push
mov
inc
pop
add
sbb
call
or
inc
dec
mov
sbb
inc
mov
mov
call
mov
add
adc
outs
or
fs
mov
cli
call
scas
and
jecxz
sbb
push
fsub
sbb
jg
mov
cmp
cwde
int
jecxz
xor
int
lods
inc
cs
fst
push
fisttp
add
add
mov
pop
xchg
js
test
imul
xor
jae
mov
repz
push
dec
sbb
outs
adc
repnz
sub
add
mov
add
sbb
fcmovbe
jne
mov
adc
les
fsub
jnp
push
ds
cmp
lahf
xchg
lods
mov
push
sub
(bad)
mov
push
sub
push
(bad)
dec
rcl
pop
mov
dec
xor
(bad)
fld
add
adc
sub
inc
mov
push
jae
xor
sub
les
mov
mov
hlt
inc
or
aam
shl
(bad)
iret
call
in
daa
icebp
add
test
std
cmp
xor
(bad)
fnstenv
stos
sub
(bad)
stos
mov
shl
cmp
sub
imul
js
dec
es
adc
pop
push
sbb
sub
std
jae
jo
add
pushf
mov
and
xor
adc
inc
mov
(bad)
(bad)
dec
jmp
leave
test
push
pop
add
imul
clc
pop
icebp
stc
and
cmps
mov
mov
xchg
je
mov
xor
popf
push
cmps
out
scas
inc
xchg
fild
xchg
ret
or
pusha
sbb
pop
mov
jne
fild
imul
repnz
sub
sbb
jns
and
daa
jb
jecxz
dec
ret
in
mov
sbb
pop
adc
push
out
jl
sbb
aam
add
xchg
ffree
enter
xor
retf
and
int
clc
aad
pop
int3
das
sbb
(bad)
mov
mov
inc
mov
cwde
and
jo
and
sbb
es
retf
xlat
dec
inc
push
adc
push
aad
and
shr
fadd
dec
sub
adc
push
xor
lods
je
dec
(bad)
mov
push
sbb
popa
(bad)
ss
repz
inc
cmp
aam
mov
call
ror
je
xchg
push
inc
mov
xor
inc
stc
ret
scas
int
jae
shl
pop
ja
sub
les
xchg
and
pop
iret
xlat
stos
pop
call
ret
inc
(bad)
mov
sbb
gs
sar
dec
jl
add
mov
imul
mov
add
dec
adc
mov
cli
xor
cmc
add
outs
mov
jl
aad
push
or
jl
je
push
dec
xlat
(bad)
push
jmp
clc
sub
pop
or
js
ss
aaa
stc
sub
imul
xor
shl
sub
push
cld
addr16
xchg
cmps
cmp
dec
or
aad
pusha
ffreep
hlt
cli
mov
(bad)
aas
test
adc
push
arpl
xchg
in
jmp
push
(bad)
clc
push
mov
dec
fist
and
in
dec
cld
stos
div
sbb
sub
pusha
add
xchg
clc
jns
push
xor
in
push
repz
pop
mov
and
inc
loope
xchg
sbb
and
(bad)
loope
test
mov
ret
(bad)
jmp
cwde
retf
xlat
not
mov
das
dec
xor
sbb
shr
ja
xchg
scas
or
mov
ret
arpl
icebp
mov
loope
cmp
adc
sbb
or
mov
mov
call
sub
ret
clc
imul
cld
adc
bound
clc
lock
dec
push
dec
and
mov
dec
lods
cmp
nop
xchg
and
out
ins
sub
jno
xlat
cmc
out
fadd
ficomp
jl
ja
jle
and
push
dec
sbb
xor
jecxz
arpl
stos
mov
cmp
(bad)
lahf
ret
imul
fwait
mov
out
lods
out
push
adc
push
cmc
sbb
wbinvd
jp
leave
xor
outs
xchg
icebp
sbb
pop
mov
sbb
adc
inc
test
push
mov
jp
aam
fs
xchg
cmp
cdq
xchg
mov
out
xor
xchg
jmp
push
ins
xor
or
jg
cmp
das
or
inc
popf
fiadd
xor
xchg
and
xor
hlt
in
and
push
nop
add
aaa
repnz
stos
and
mov
inc
scas
sub
lods
fmul
in
sub
push
mov
outs
push
in
fld
jge
sub
test
mov
xchg
add
test
rcr
sti
test
gs
or
lods
popa
add
pop
test
cwde
std
fwait
test
ror
out
or
fbstp
leave
inc
mov
in
fcmovnb
jbe
or
retf
in
or
sbb
adc
xor
lea
mov
jp
and
lock
jge
xor
pop
(bad)
cmp
(bad)
fimul
into
sub
ret
(bad)
sub
leave
pop
movs
xchg
and
and
jp
mov
mov
adc
add
add
sbb
jbe
cdq
stos
xor
mov
aas
(bad)
fbstp
mov
jns
sti
jmp
adc
clc
mov
push
lods
mov
pop
rol
jbe
stos
imul
outs
loop
retf
cmp
daa
ja
sub
clc
(bad)
xor
loopne
sahf
sub
sub
push
cmps
cmc
hlt
mov
cld
add
fild
or
or
inc
dec
imul
aaa
sbb
enter
sbb
pop
sbb
stos
sbb
jns
out
jo
adc
sbb
sbb
in
push
jbe
je
pop
jmp
rcr
xchg
xchg
popa
xor
push
gs
rcl
cli
inc
fsubr
push
(bad)
pop
mov
cmp
sbb
jg
fs
mov
sbb
scas
in
sbb
(bad)
cmps
and
pushf
mov
bound
sub
cmps
out
fcom
lods
inc
sub
mov
lods
xor
or
pop
mov
lds
pop
xchg
push
dec
rcl
es
out
std
movs
inc
in
mov
test
sbb
jns
addr16
popa
sbb
push
out
test
mov
inc
vandnps
dec
fistp
hlt
inc
xchg
and
ins
cmps
rcl
call
out
ds
or
sbb
(bad)
push
sub
xor
aad
in
or
jle
adc
aaa
inc
cli
pop
idiv
mov
jns
and
push
scas
inc
and
dec
adc
inc
sub
mov
shl
mov
fist
pop
int
xchg
jl
sub
cmp
das
jle
xlat
dec
push
and
scas
cmp
jg
sbb
mov
mov
shr
popa
mov
(bad)
pop
loope
fst
mov
scas
scas
pop
jecxz
adc
mov
cmp
dec
in
nop
mov
mov
das
sbb
xor
in
cmps
ss
push
adc
inc
mov
out
in
call
sub
dec
pop
cmc
fldenv
xchg
repnz
and
sbb
scas
sub
das
jmp
sbb
jb
pop
inc
adc
shl
sub
ds
dec
shl
inc
xor
jae
mov
fnstcw
mov
pop
sub
cdq
cmp
cmp
cmp
xchg
ins
or
push
xchg
sub
test
push
xchg
lea
jae
xor
jnp
loope
(bad)
(bad)
repnz
mov
or
imul
xchg
mov
call
mov
fwait
dec
pushf
sbb
pushf
loopne
test
pop
jg
fcomp
push
cmc
test
les
sbb
dec
jmp
jg
push
pop
pop
cmp
pop
rol
mov
dec
loop
sbb
pop
leave
add
sbb
imul
add
arpl
fsub
xor
ss
lods
mov
fs
sbb
movs
add
ins
cdq
xlat
out
ins
sub
inc
adc
fldcw
neg
pop
add
(bad)
mov
repnz
scas
bound
xchg
loop
lahf
hlt
adc
aas
pop
xchg
cmp
push
xor
mov
popf
dec
clc
xchg
pop
cmp
stc
push
in
add
jb
mov
fcomp
jge
retf
mov
rcl
shl
jb
xlat
dec
adc
cmp
and
loope
push
dec
dec
imul
in
inc
(bad)
in
and
cmps
daa
call
stos
(bad)
jge
sub
into
imul
fcomp
fcmovnbe
fisub
adc
in
hlt
mov
xchg
test
imul
jmp
retf
pop
push
jmp
sahf
scas
push
xchg
inc
sub
push
bound
imul
adc
pop
pop
or
(bad)
ss
(bad)
movs
push
ret
and
repz
mov
push
sub
std
stc
test
xchg
lods
adc
mov
test
mov
jo
cwde
sti
push
imul
lods
mov
pop
movs
mov
dec
icebp
hlt
fsubr
or
push
popf
mov
test
pop
jne
pop
lods
das
mov
out
xchg
stc
mov
(bad)
int3
in
dec
cmc
push
add
pop
xchg
xchg
sub
mov
push
mov
add
or
push
test
lahf
push
mov
inc
imul
or
sub
ror
add
rol
addr16
inc
or
cmp
mov
movs
push
inc
clc
fmul
add
(bad)
cmc
jnp
push
xchg
xchg
ins
retf
fcom
mov
aam
inc
and
sbb
or
dec
(bad)
aad
dec
je
pop
and
aam
dec
push
jns
pop
das
jle
mov
jle
dec
cmp
ds
fisubr
sbb
sbb
dec
push
out
inc
mov
cmp
jns
xchg
(bad)
sti
test
dec
jbe
loop
shl
aad
jnp
icebp
mov
test
xor
in
out
(bad)
fmul
stos
sub
push
jnp
xor
xchg
jbe
adc
sbb
pop
sbb
jb
xor
ficomp
cld
sbb
xchg
sbb
inc
cmp
xchg
movs
dec
scas
ins
sub
mov
mov
int3
(bad)
lahf
call
shl
dec
in
add
adc
xor
sub
cdq
mov
stos
dec
add
and
sub
(bad)
movs
jbe
into
enter
fwait
imul
fmul
mov
cmp
mov
fcomp
pop
xchg
xor
inc
or
sub
sub
repz
jmp
mov
inc
dec
and
adc
sbb
fisttp
cmp
lods
pop
data16
push
lods
lock
inc
mov
xchg
mov
and
ss
dec
add
push
sahf
shl
jecxz
push
lods
mov
adc
sahf
jae
scas
icebp
xchg
frstor
xor
inc
xor
mov
jo
ficomp
xor
ficom
and
pop
adc
vmptrst
sahf
or
scas
cld
ins
or
push
movs
in
xchg
push
mov
pop
iret
sbb
call
and
jbe
fsub
out
inc
arpl
ror
test
in
cmc
ss
mov
adc
jg
and
cmp
movs
fdiv
lea
retf
lahf
fst
adc
pop
sub
cwde
xlat
cmc
mov
xchg
call
fld
ja
inc
test
sbb
fadd
xchg
inc
xchg
jo
push
icebp
call
lds
mov
call
bound
fdivr
and
call
xor
xchg
fcom
enter
push
mov
inc
addr16
sahf
mov
outs
pop
add
mov
ret
int
out
out
push
cmp
push
inc
lds
pmulhw
jmp
dec
cmps
mov
dec
mov
dec
shl
fsubrp
iret
cs
mov
sub
(bad)
adc
xchg
cmps
push
jle
mov
xor
adc
pop
pop
arpl
jmp
stc
mov
add
aad
inc
mov
adc
xchg
fs
cmp
scas
gs
movs
xchg
aad
cmps
popa
fsub
mov
cli
es
xor
mov
push
mov
mov
push
xchg
(bad)
aaa
lahf
div
test
mov
imul
inc
lea
mov
enter
xchg
sub
cmps
mov
std
dec
arpl
mov
lods
jbe
and
int3
jae
mov
and
jne
popa
fdivr
xchg
cmp
sahf
xor
imul
xchg
pop
out
rol
dec
sbb
push
add
repz
dec
retf
pop
sub
dec
adc
les
loopne
(bad)
aaa
mov
arpl
jmp
call
and
push
jp
add
mov
push
(bad)
jae
mov
jl
inc
hlt
sub
and
fldenv
cld
dec
push
adc
mulps
mov
or
cmp
adc
enter
mov
push
add
mov
int3
sbb
addr16
inc
fiadd
mov
es
mov
xor
jmp
mov
fidiv
and
retf
enter
mov
inc
retf
jbe
add
pop
and
pop
das
cmp
jmp
inc
sbb
popa
add
push
sbb
call
add
iret
dec
test
js
push
retf
xchg
adc
out
jns
clc
pusha
adc
lahf
pop
xchg
loopne
out
imul
inc
push
push
rol
pusha
inc
popa
das
inc
test
mov
stos
cvtdq2ps
out
rcr
(bad)
popa
mov
out
and
xchg
loop
idiv
pop
push
lock
xchg
js
and
aas
loopne
jnp
xchg
aam
loop
push
aas
call
push
push
stos
pop
adc
pop
jnp
sbb
cmp
arpl
daa
mov
out
bound
pop
adc
sbb
retf
outs
jno
int
and
push
xlat
dec
xchg
into
cmp
push
mov
xchg
mov
dec
pop
enter
clc
dec
xchg
outs
sub
sbb
inc
retf
cli
test
sar
add
cmp
jl
call
sub
(bad)
lds
xchg
adc
dec
fisubr
int3
jg
loopne
enter
mov
cwde
sub
push
mov
into
iret
int
pop
jp
add
leave
icebp
and
inc
pop
and
retf
dec
dec
xor
lods
(bad)
cmp
repz
push
inc
jecxz
in
adc
mov
or
add
dec
jl
in
pop
pop
pop
inc
mov
call
add
les
lahf
dec
xchg
mov
pop
lods
mov
scas
dec
inc
jge
jae
jge
jb
adc
add
jg
mov
mov
shl
add
popa
aam
and
outs
das
mov
mov
inc
sbb
adc
dec
sbb
xlat
dec
enter
pop
xchg
fldenv
rcl
loop
rol
xor
test
push
in
ja
div
jne
fcomp
or
dec
test
xor
stos
xor
mov
add
popf
sti
sbb
fcomi
(bad)
idiv
push
stos
aam
mov
mov
add
cwde
adc
cmc
mov
add
das
pop
mov
mov
out
gs
js
cmc
jle
jmp
stos
add
fcom
or
icebp
scas
dec
hlt
mov
jecxz
xchg
shr
stos
enter
sub
add
bound
clc
sub
cli
xchg
lahf
mov
jb
lds
adc
jnp
push
data16
push
pop
mov
jg
scas
arpl
xrelease
mov
sbb
cmp
int3
aad
push
lock
(bad)
(bad)
and
pop
jmp
mov
ja
imul
inc
stc
push
jo
das
in
jne
pop
cld
(bad)
out
add
adc
lock
or
pop
sub
mov
dec
stos
retf
xchg
sub
adc
iret
or
movs
adc
push
and
pushf
mov
push
jns
sbb
mov
imul
adc
or
cmc
je
sbb
sbb
jl
mov
sbb
test
jae
int
leave
dec
dec
mov
pop
loopne
pop
and
add
jp
fisttp
xchg
into
add
add
mov
lods
push
adc
(bad)
(bad)
stos
iret
nop
mov
add
movs
jp
inc
push
call
loopne
dec
xchg
imul
xchg
or
mov
mov
cwde
enter
out
int3
jecxz
in
sub
out
mov
adc
cmp
(bad)
ficom
cmp
js
mov
inc
fcmove
push
pop
push
pop
ror
and
js
cli
movs
sbb
xchg
cmc
scas
stc
jp
lea
cli
push
cli
adc
jnp
call
sub
mov
pop
lods
fs
scas
jb
and
mov
(bad)
cmp
mov
jge
std
xchg
xor
mov
std
pop
xor
call
stc
fsub
jl
scas
xor
jmp
int3
sar
mov
cmp
retf
push
shr
out
repz
dec
cmps
and
cmp
cmp
out
mov
push
sbb
sti
jae
add
dec
xchg
movs
daa
cld
ror
repnz
pop
jno
push
adc
jno
scas
jmp
push
or
int3
or
(bad)
adc
loop
cld
test
inc
daa
push
sbb
arpl
pop
ret
ins
imul
pop
add
sbb
cmp
outs
pop
adc
cld
js
dec
inc
arpl
call
xchg
std
inc
out
jno
daa
cwde
or
es
jo
fs
clc
push
push
jge
fs
or
and
cmp
mov
xchg
mov
enter
pop
lods
cwde
push
call
xor
or
test
mov
jle
inc
mov
mov
mov
dec
mov
jno
mov
cmp
out
loop
iret
lds
jmp
or
out
cmp
(bad)
js
dec
dec
(bad)
and
pop
popa
repnz
xchg
inc
int3
cmc
mov
xchg
daa
popa
rol
inc
sbb
in
mov
or
jp
adc
pusha
fs
inc
cmps
add
popa
or
jmp
sar
dec
scas
pop
pop
ins
mov
popa
call
fst
push
mov
sbb
sbb
cmps
push
into
adc
dec
(bad)
xchg
out
ja
cs
in
out
data16
pop
rol
cwde
pop
sub
mov
ror
stos
jecxz
lds
imul
xor
xchg
jnp
xor
sub
add
push
popa
jno
push
adc
mov
inc
and
jle
stc
xchg
sub
pop
fs
ins
cld
mov
nop
iret
(bad)
inc
and
ret
mov
jg
ror
sti
dec
aad
jno
pop
in
in
test
xchg
pop
dec
outs
jbe
add
xlat
data16
shr
inc
lahf
pop
aaa
outs
lea
jl
(bad)
hlt
jg
ins
mov
(bad)
in
leave
(bad)
sub
nop
(bad)
arpl
sbb
dec
call
adc
dec
inc
and
jb
jl
mov
int3
sar
sbb
mov
and
jl
outs
cwde
add
lea
inc
mov
cwde
ficomp
mov
and
das
aad
fwait
shr
push
cmp
and
sub
mov
es
add
aam
je
(bad)
loope
xchg
icebp
sub
dec
dec
in
mov
sbb
jmp
or
jae
rcl
loopne
or
jb
dec
(bad)
adc
adc
xchg
scas
rep
pop
jmp
aas
les
stc
cmp
ret
dec
add
enter
out
mov
outs
xchg
mov
push
mov
adc
das
dec
outs
fstp
shl
mov
dec
jmp
xor
xchg
aaa
int3
test
les
mov
popf
cmp
fs
inc
(bad)
sbb
pop
cmp
mov
stc
mov
clc
iret
loope
inc
dec
stos
mov
cwde
pop
psubw
call
mov
pop
sub
inc
dec
idiv
mov
adc
mov
outs
call
retf
pop
xchg
stos
push
sub
jmp
xchg
push
loope
add
mov
hlt
dec
xchg
aam
jnp
ficom
dec
(bad)
fmul
retf
dec
and
out
adc
add
int
jmp
sub
lahf
sub
out
cmp
xor
mov
or
xchg
xchg
cdq
fadd
mov
cmc
inc
dec
sub
in
js
test
dec
push
mov
fsubr
dec
mov
pop
mov
movs
cmps
cmps
mov
and
xchg
test
and
cmp
xchg
xchg
arpl
dec
dec
jns
lods
rcl
mov
cmp
push
jnp
fs
push
push
mov
mov
imul
or
dec
xchg
fmul
adc
sub
mov
add
mov
jne
bound
cmp
cmp
imul
xor
add
pop
jl
gs
adc
scas
cmp
fstp
sahf
sbb
dec
ja
push
mov
int
and
dec
lea
test
mov
cld
jns
mov
fcom
xchg
les
jmp
pop
xchg
dec
test
sub
fldenv
rcl
dec
or
mov
jl
adc
test
repnz
inc
into
inc
inc
stc
fadd
adc
mov
shl
jmp
fisubr
add
push
pop
pop
hlt
pop
call
cmps
xor
jns
push
mov
jecxz
jl
jbe
jo
movs
or
cs
out
adc
iret
sub
sub
aad
pop
and
and
jno
jb
add
inc
lea
or
pop
push
lock
fstp
push
into
(bad)
jle
pop
pop
je
call
ins
mov
inc
and
cwde
sub
retf
ret
les
sub
adc
cs
retf
es
or
cld
in
jne
fnsave
inc
sub
inc
dec
cmps
inc
std
dec
jecxz
sti
(bad)
int3
jns
sub
ins
cmc
scas
inc
sbb
xchg
and
mov
jae
outs
mov
and
and
pop
cdq
pop
jmp
adc
mov
add
inc
std
pop
pop
imul
xchg
aas
call
mov
jne
cmp
sub
in
jmp
lods
jg
jns
jge
adc
aam
sahf
jmp
mov
and
sbb
add
ja
loopne
dec
les
mov
and
imul
icebp
mul
or
dec
push
dec
xchg
adc
fisubr
xor
sub
push
mov
pop
xchg
mov
daa
aam
out
not
cmp
sub
mov
mov
int3
shl
test
inc
jecxz
xor
jle
mov
sub
sbb
(bad)
and
xchg
cmp
jne
mov
loope
(bad)
repz
cmps
sar
add
xchg
ss
sbb
mov
dec
mov
pop
scas
div
jb
mov
and
imul
ja
pop
jl
xor
int3
or
add
sbb
xchg
sbb
lahf
jae
sub
or
and
stos
inc
xchg
add
sub
fsub
stos
ins
fadd
fcomp
adc
jne
push
jp
cmp
jno
jge
mov
mov
out
and
jle
(bad)
pop
push
dec
xchg
cdq
add
mov
nop
xchg
mov
pop
enter
test
sbb
ffree
inc
adc
aaa
push
popa
push
sub
rcl
data16
mov
sub
or
jae
lahf
sub
std
or
inc
jmp
push
pop
adc
fwait
(bad)
mov
xchg
(bad)
stos
dec
push
cmp
(bad)
pop
cmps
xchg
xchg
cdq
xchg
jmp
dec
sbb
jns
ret
in
rcr
adc
ins
mov
xor
sbb
mov
jbe
cmp
das
popa
xchg
pop
fsubr
lock
cmp
cld
test
and
xor
push
sti
ficom
dec
js
inc
repz
adc
cmp
add
dec
and
pop
push
aaa
loopne
dec
push
cmp
mov
retf
stos
add
mov
pop
(bad)
scas
sub
icebp
push
ins
loope
mov
jb
xchg
sub
mov
add
or
pop
mov
loop
lods
mov
ret
inc
pusha
out
dec
js
adc
movs
fcmovbe
pop
add
mov
jno
cmps
sar
and
fnstsw
cmp
hlt
je
aas
cmp
add
enter
cli
sub
pop
xor
mov
ds
mov
fwait
out
bound
add
cmp
or
jb
jecxz
mov
xchg
push
add
rcr
dec
call
stc
and
sbb
popf
adc
mov
(bad)
xchg
mov
pop
sub
loope
inc
jp
out
push
ins
jmp
sbb
mov
fmulp
xchg
repz
pop
adc
cdq
movs
adc
sbb
or
bound
push
sbb
mov
pop
loope
adc
pop
sub
iret
ins
mov
fisttp
jb
aas
jns
pusha
pop
jmp
mov
iret
cmp
pop
add
pop
dec
(bad)
or
(bad)
jp
retf
mov
scas
and
xchg
cdq
sar
xor
mov
sbb
imul
cmp
push
mov
fld
ss
data16
jns
add
sbb
call
cmp
popa
mov
in
push
jp
jge
and
xchg
xor
mov
xchg
mov
sub
sahf
jo
gs
dec
out
push
mov
sub
xor
sbb
aaa
test
nop
jno
cld
add
inc
(bad)
pop
mov
imul
lea
dec
mov
pop
outs
pushf
stc
pop
retf
cdq
mov
test
ins
sub
cmc
xchg
mov
sub
jl
push
dec
dec
jle
nop
pusha
adc
jns
or
ror
pop
mov
mov
lock
and
dec
mov
jno
movs
out
cmps
stos
inc
cmps
inc
stc
fnstenv
fs
cmp
fisttp
loope
push
ins
adc
push
(bad)
daa
mov
push
and
mov
ss
scas
pop
mov
cmp
add
lods
sub
outs
pop
mov
sbb
outs
fdivrp
dec
xor
data16
popa
out
push
inc
and
fisttp
in
jns
inc
inc
ret
enter
push
out
cmp
add
mov
adc
lahf
cmp
mov
push
test
mov
iret
xchg
mov
xchg
inc
imul
dec
aaa
mov
div
cmp
xor
or
pop
push
loop
lods
xchg
push
pop
out
cld
loop
add
and
xchg
out
jecxz
dec
in
cmp
mov
cdq
ss
movs
xchg
add
mov
dec
(bad)
loopne
push
std
xor
mov
or
shl
in
mov
or
in
movs
mov
pop
das
inc
mov
cmp
cmp
xchg
pop
(bad)
cdq
scas
fwait
daa
push
ja
sbb
mov
push
sub
sub
loop
push
pop
push
and
fiadd
cmp
ror
push
or
imul
jle
xor
dec
sub
xor
fs
jno
call
sbb
sub
xor
test
into
(bad)
in
fwait
adc
push
cwde
loopne
pop
ss
mov
jae
mov
dec
imul
cli
mov
mov
rol
dec
and
pop
in
mov
xor
jno
cli
ret
jmp
call
or
movs
call
cmp
mov
aaa
retf
add
xor
fyl2x
add
xchg
adc
jmp
cmp
mov
bound
cwde
fld
outs
add
inc
rcl
sar
sbb
cmp
cmp
cld
mov
xchg
fcom
pop
push
movs
(bad)
ror
xchg
scas
push
lds
xor
clc
dec
neg
lods
lods
mov
jno
or
push
ret
aad
push
mov
sub
dec
(bad)
iret
lea
cmc
popa
add
in
stos
sub
xor
leave
fild
mov
sub
pop
cli
pop
adc
scas
or
fiadd
mov
sbb
outs
jmp
dec
xchg
add
(bad)
pop
mov
mov
adc
hlt
pop
push
push
das
cmc
icebp
or
fadd
mov
clc
push
jb
mov
and
inc
iret
ins
enter
popa
pop
adc
xor
popf
push
adc
jmp
(bad)
jle
addr16
jecxz
or
jmp
dec
daa
mov
jns
jl
sbb
mov
xor
mov
aas
mov
retf
sub
or
and
sbb
or
pop
mov
sbb
mov
scas
pop
neg
or
dec
cmp
mov
mov
jbe
push
xchg
cld
and
dec
fcomp
cmp
mov
mov
ja
dec
jmp
sub
jmp
push
test
sbb
push
fisub
scas
lea
call
add
inc
jg
fst
in
mov
call
jmp
sbb
sbb
retf
loop
mov
jo
xchg
sbb
jmp
push
pushf
push
sub
in
icebp
sti
data16
js
mov
repz
jle
(bad)
cmp
cli
push
sub
shl
sbb
push
cmp
in
adc
jmp
shr
movs
and
cmp
in
rcl
jge
push
ins
outs
vpsadbw
in
sub
or
out
cmp
sub
sbb
xchg
daa
sbb
(bad)
mov
div
retf
js
sub
sbb
mov
mov
inc
ror
jnp
ss
stc
pop
pop
ror
sahf
inc
loopne
push
sbb
sbb
mov
cmps
add
outs
je
ret
rcl
cmp
adc
(bad)
and
std
push
dec
cmp
add
(bad)
xchg
scas
cmp
test
rol
js
xor
sbb
fdivr
cmps
jecxz
ss
movs
ficom
jmp
popf
and
or
adc
mov
clc
ins
jne
mov
cdq
cmc
pop
push
pop
sub
mov
jne
das
popa
lea
jo
xchg
pusha
fdivr
or
push
mov
fnstenv
sub
sbb
neg
pop
je
inc
and
add
test
mov
and
sbb
pause
and
mov
and
jne
ror
dec
jno
sub
mov
ds
and
or
loope
loop
mov
add
sbb
xor
jno
or
les
inc
loopne
js
xor
ins
cmps
lea
adc
pop
xor
jno
push
mov
jmp
cli
jb
pop
dec
pop
pushf
mov
xor
pop
cs
call
jo
loopne
inc
in
std
jmp
popa
sub
dec
or
xchg
pushf
xlat
scas
jmp
into
out
out
jle
(bad)
fistp
sbb
mov
jg
xor
jns
sbb
push
dec
xchg
(bad)
into
(bad)
or
push
mul
xlat
sar
or
leave
retf
sar
outs
dec
retf
inc
push
push
cwde
nop
xchg
jae
sar
mov
add
mov
std
test
mov
push
daa
lock
mov
fild
into
mov
test
les
inc
movs
cmp
jne
mov
imul
inc
cmpps
add
iret
push
push
bound
movs
jge
inc
dec
mov
push
icebp
rcr
adc
(bad)
rcr
jb
push
and
or
push
mov
or
mov
xchg
retf
push
aas
ins
jnp
push
add
and
loopne
jb
add
ins
push
dec
pop
nop
sbb
jb
adc
push
iret
ins
inc
adc
outs
mov
mov
jns
fidiv
test
mov
(bad)
call
cmp
test
(bad)
aad
sbb
les
loop
push
addr16
cwde
into
inc
push
mov
mov
push
jecxz
hlt
int
iret
imul
and
or
fadd
lods
daa
jmp
inc
aaa
popf
pusha
mov
mov
sub
pop
fld
in
scas
jecxz
inc
push
add
sub
loopne
cwde
inc
xchg
jmp
jnp
mul
loope
std
adc
and
dec
add
pop
dec
ret
fistp
aad
cmp
dec
popa
dec
jae
xor
add
test
dec
into
jmp
jle
stos
enter
pop
mov
push
sbb
mov
sbb
stos
mov
pop
pop
push
sub
enter
mov
cmp
push
sbb
pop
inc
cmps
shl
xor
jg
ffreep
adc
sub
scas
(bad)
fld
xchg
pop
add
ficomp
xchg
out
hlt
pop
or
arpl
cld
adc
dec
sbb
add
push
sub
or
sbb
cmp
cdq
cmps
cmp
xor
push
lods
sub
jmp
mov
cmp
retf
push
test
and
jo
cdq
clc
mov
stc
mov
loop
stos
push
dec
dec
cmp
add
cmp
sbb
js
mov
jno
xchg
pop
fadd
xor
not
xchg
jo
(bad)
sub
stos
mov
call
sbb
pop
dec
pop
es
push
inc
xor
push
mov
shr
movs
shrd
push
pop
fsub
(bad)
lds
cld
or
inc
dec
sub
pop
movs
sbb
and
sub
test
inc
fmul
movs
sbb
dec
xlat
sbb
sbb
push
sti
sbb
pop
rcl
pop
mov
cmc
arpl
js
in
push
sti
push
pop
sbb
rol
pop
or
mov
pop
inc
sbb
(bad)
shl
cmc
jge
cmps
out
cmps
mov
dec
mov
ins
in
int3
ins
dec
movups
jb
adc
push
mov
(bad)
test
mov
sbb
or
mov
dec
lods
xacquire
int3
and
jp
mov
ror
repnz
ret
dec
pop
inc
fcmovbe
mov
in
jp
xchg
sti
pop
loopne
jmp
jl
jo
sbb
mov
jae
iret
test
cmp
loope
push
sahf
adc
pusha
in
sub
daa
sub
into
std
pushf
daa
or
out
out
jae
pop
add
out
(bad)
bound
popf
nop
pushf
jo
mov
pusha
lahf
xchg
jno
inc
iret
aaa
int3
sti
loopne
add
sbb
cli
inc
test
jae
in
pop
pop
pop
or
push
ja
pop
les
mul
push
push
setp
cmp
nop
pop
sub
adc
scas
outs
pop
(bad)
stos
mov
fsubr
loopne
cdq
mul
adc
sahf
data16
in
out
pushf
test
loopne
sbb
and
pop
rcl
das
rcr
adc
cmps
ret
pop
inc
pusha
sar
mov
imul
(bad)
and
pop
xor
in
mov
mov
outs
aam
ja
das
dec
mov
popf
in
inc
inc
ret
xchg
inc
jge
in
mov
ficomp
and
retf
aam
sub
das
dec
out
cmps
xlat
ficomp
out
leave
lock
sub
shl
mov
sub
test
shl
mov
inc
jb
dec
(bad)
out
push
int
sbb
cmp
fistp
js
movs
dec
xor
fdiv
out
add
sahf
adc
push
mov
je
mov
das
(bad)
pop
mov
les
loop
jb
inc
ja
mov
inc
fwait
cmp
add
add
and
pop
sbb
mov
mov
leave
aad
mov
mov
dec
lods
add
(bad)
push
jg
das
gs
fldenv
jae
mov
aam
rol
(bad)
mov
pop
xor
aam
pop
and
scas
fwait
pop
nop
stc
fcomp
sar
dec
mov
mov
mov
sbb
test
dec
int3
xchg
cmps
mov
mov
cld
jmp
push
daa
mov
or
mov
xor
dec
cmp
push
or
mov
and
test
fcomi
add
sbb
pusha
and
sub
jo
pop
aam
popf
inc
push
jbe
inc
sbb
sub
or
inc
int
cmp
sub
std
mov
jmp
lods
and
(bad)
pop
jge
jns
leave
pop
jb
div
cli
sbb
(bad)
sub
(bad)
mov
ret
fistp
jle
inc
(bad)
popa
mov
push
push
sub
and
push
(bad)
in
(bad)
gs
jbe
jmp
lds
cli
mov
stos
jo
pusha
shr
xchg
push
push
pop
iret
loope
sub
sbb
and
shl
push
imul
(bad)
xor
pop
std
repnz
jns
mov
add
das
int
add
cmps
addr16
fmul
mov
and
sar
or
imul
fcmove
mov
sti
pusha
pushf
dec
(bad)
push
mov
mov
cs
or
jo
icebp
xor
movs
adc
mov
nop
cmp
movs
fidivr
dec
sub
sub
mov
fs
fsub
cmp
push
in
sahf
stos
js
jecxz
or
test
pop
dec
ret
sbb
xor
and
mov
add
or
cmp
and
les
push
adc
jnp
ret
arpl
push
cmp
jecxz
shr
shr
xchg
jle
mov
movs
(bad)
xchg
daa
mov
mov
(bad)
mov
mov
test
fisub
jmp
(bad)
je
in
(bad)
sub
jbe
cli
cwd
daa
and
outs
lea
sub
outs
lea
mov
cld
hlt
shl
rcr
leave
ror
mov
mov
dec
fdiv
jl
sbb
add
xchg
mov
pop
cmps
mov
add
fbstp
jecxz
push
in
pop
int3
xchg
cmp
jmp
stos
and
movs
add
push
jl
cmp
(bad)
or
outs
push
test
in
or
jbe
xchg
cli
outs
lods
or
movs
arpl
hlt
pop
fwait
loopne
or
xchg
js
mov
outs
add
stos
mov
imul
into
xor
je
fwait
jmp
mov
lahf
dec
std
inc
test
in
mov
retf
leave
ret
iret
fsub
dec
(bad)
or
sub
or
in
retf
jmp
mov
xor
cmp
mov
or
xchg
jnp
test
stos
movs
int
or
clc
or
aad
stos
test
and
jbe
cmps
sbb
push
mov
out
out
clc
push
jg
out
push
cmc
or
addr16
popa
push
cmp
push
mov
inc
cmp
bound
out
or
retf
add
dec
cmp
push
in
sti
pmuludq
cli
or
pop
or
loop
push
or
ret
xchg
cmp
cli
mov
sbb
js
arpl
lds
push
mov
dec
cmc
sbb
outs
xor
fldcw
dec
add
dec
es
into
jmp
fidiv
(bad)
rcr
ficom
daa
jg
sbb
bound
fcom
ficom
sub
mov
jb
mov
vpcmpgtw
scas
fiadd
pushf
std
cli
aaa
mov
xor
inc
jbe
shr
jmp
imul
mov
xlat
push
sti
xchg
cmp
push
dec
pop
retf
cmp
push
jl
add
rcr
pushf
lahf
test
xchg
push
out
or
or
stos
inc
jne
addr16
cli
cmp
and
push
push
aam
ins
add
loopne
dec
outs
int
mov
pop
sti
cmc
or
movs
or
enter
cmp
outs
xchg
push
les
xlat
jno
retf
clc
ins
mov
mov
loop
leave
jno
rcl
mov
or
push
xor
clc
hlt
sbb
daa
mov
cmp
mov
test
push
popf
in
add
pusha
adc
xor
lds
lods
outs
sbb
inc
cmp
div
mov
aad
shl
loopne
sub
pusha
pop
out
dec
leave
xchg
movs
pop
dec
scas
movs
lahf
add
pop
and
mov
dec
aad
push
sub
ins
or
or
ja
pop
inc
xchg
repnz
or
jle
jo
or
dec
aaa
ss
push
add
jmp
inc
mov
adc
add
xor
xor
push
adc
cmp
sbb
(bad)
sub
cs
stos
(bad)
icebp
push
inc
sar
mov
aam
repnz
lahf
aas
push
xor
adc
dec
and
loop
ja
mov
fnstcw
rcl
mov
test
iret
mov
sbb
es
and
jnp
jge
add
cmp
mov
push
and
and
jle
dec
addps
addr16
out
imul
(bad)
pop
mov
fild
sub
popf
enter
xor
and
mov
repnz
shl
(bad)
hlt
mov
push
mov
sbb
ror
popf
in
jnp
pop
add
jge
movs
out
inc
add
shl
popa
sbb
jnp
call
in
push
pushf
ja
retf
lea
mov
cmp
jle
ins
ins
sahf
adc
ja
ja
ficom
jmp
and
clc
popf
out
retf
add
arpl
jge
pushf
or
repnz
int
inc
mov
mov
inc
(bad)
out
aas
jae
imul
sbb
mov
inc
mov
xchg
mov
xlat
aaa
xor
cmp
mov
or
lods
jmp
inc
or
fild
mov
mov
adc
inc
int3
or
mov
lahf
loope
loopne
jne
int3
jne
pop
mov
test
adc
aam
adc
bound
repz
mov
scas
dec
fidiv
es
(bad)
sbb
mov
jo
jmp
and
call
loope
out
xchg
js
add
or
js
pop
xchg
repz
sbb
push
jecxz
push
or
jae
or
ins
jo
xlat
jns
sbb
dec
sbb
or
sub
and
adc
and
mov
test
movs
sbb
sub
mov
push
lds
mov
shr
(bad)
sub
call
inc
cld
leave
cld
xchg
jmp
or
add
push
push
imul
mov
jbe
pop
add
loop
pop
ret
ja
xor
rcr
outs
in
mov
sub
add
(bad)
mov
fnstsw
jbe
call
popf
loop
xchg
leave
int
mov
sub
das
cmp
out
icebp
pop
cmp
dec
push
jb
dec
pop
or
xchg
repnz
cmp
add
jmp
out
ds
lock
ds
xchg
fisttp
call
add
cdq
mov
(bad)
hlt
(bad)
sub
jp
out
rol
push
adc
mov
push
jbe
test
push
test
xchg
push
add
in
popa
(bad)
sub
cmps
jmp
inc
scas
or
sub
std
mov
retf
add
mov
fs
mov
adc
je
neg
and
or
fild
adc
pop
out
pushf
sahf
sub
dec
inc
enter
jne
mov
jp
mov
xchg
repnz
push
ins
fsubr
sub
jmp
mov
nop
call
aam
jmp
inc
js
add
mov
jge
or
sub
jmp
pop
xor
push
mov
int3
add
adc
out
sub
ds
test
(bad)
sar
add
xchg
xchg
jg
fdiv
jb
push
push
js
lea
cmps
pop
xor
loopne
sahf
push
or
fbld
call
fcom
pop
(bad)
fdivr
sbb
add
movs
dec
sbb
adc
retf
imul
mov
fbstp
bound
dec
sbb
xchg
scas
inc
lock
(bad)
push
adc
cmp
aad
or
arpl
pop
inc
aam
sbb
fld
push
pop
(bad)
pop
and
ret
(bad)
iret
xchg
imul
jl
xlat
(bad)
xchg
inc
cmp
fwait
(bad)
jecxz
mov
push
mov
dec
xchg
popa
ss
cmp
mov
xor
(bad)
adc
mov
in
test
sbb
cmc
xchg
rcr
int3
inc
loopne
loop
(bad)
jg
add
xchg
test
sbb
xor
pop
shl
and
dec
mov
inc
sub
rcl
ret
or
mov
arpl
ror
jo
bound
xchg
or
cmp
adc
jmp
mov
or
cli
xchg
push
sbb
mov
ror
pop
push
inc
stos
jge
out
out
outs
xor
repz
dec
mov
mov
pop
call
imul
in
aam
mov
aas
mov
(bad)
sbb
ja
fs
or
ret
rcl
or
int3
les
enter
in
ficom
xchg
int
in
cmp
iret
test
int
mov
inc
daa
and
daa
int
or
inc
jl
jb
cmp
(bad)
imul
movs
or
ja
pop
sar
jmp
test
mov
dec
add
jge
sahf
adc
pop
jns
push
call
scas
sub
outs
jecxz
mov
loopne
or
xchg
cld
pop
xchg
lock
adc
loopne
lahf
fwait
xor
inc
pop
addr16
xlat
out
pop
and
mov
fcomp
cld
mov
in
scas
icebp
pop
ret
xchg
adc
mov
sar
into
jp
cmp
jp
and
jnp
test
push
jle
jns
mov
dec
pop
and
adc
retf
add
fidiv
addr16
sbb
(bad)
mul
cmc
cdq
add
mov
cmc
retf
mov
mov
mov
sub
xlat
xchg
in
mov
test
lods
or
sti
aam
int3
pop
fwait
jns
cs
cmps
lods
adc
sbb
cmp
js
mov
xchg
into
rcr
pop
sahf
sar
jp
and
xchg
xchg
push
inc
and
and
fstp
scas
inc
push
sbb
pop
jecxz
inc
fsub
sub
lods
or
and
(bad)
lea
call
push
sub
aad
jno
dec
pop
jmp
out
rol
sub
pop
dec
inc
mov
lods
xor
mov
cmp
or
dec
into
fstp
(bad)
imul
mov
and
scas
bound
in
mov
adc
and
imul
mov
cld
inc
push
in
mov
dec
out
push
neg
xor
fild
cmps
test
and
dec
test
je
hlt
retf
lock
or
sbb
or
sub
pop
push
aaa
repnz
push
dec
mov
cdq
fidiv
and
out
sbb
out
loopne
es
mov
push
(bad)
(bad)
outs
pusha
push
jmp
das
mov
(bad)
dec
pop
adc
mov
dec
ss
dec
fisttp
scas
addr16
dec
outs
movs
xchg
lods
shl
rcr
cmp
cmps
cmps
inc
sub
outs
stc
arpl
imul
adc
cmp
mov
fcomi
jnp
jne
fdivr
das
leave
inc
jo
test
int3
push
dec
(bad)
xchg
jno
ins
adc
(bad)
adc
jns
xor
pop
dec
(bad)
neg
(bad)
xor
fadd
lahf
ds
push
fcomp
daa
loope
fst
dec
mov
inc
push
es
test
sbb
icebp
data16
out
xchg
inc
icebp
retf
push
jge
add
sbb
mov
sub
jle
mov
xor
(bad)
cmp
jl
ret
xchg
inc
mov
pop
sbb
pop
fwait
cmps
nop
mov
mov
fsub
pop
jl
add
adc
pop
push
out
mov
mov
fisttp
movs
jl
jno
inc
mov
xchg
mov
cld
push
lods
xor
dec
sbb
bound
aas
inc
fld
mov
jge
ja
scas
pop
(bad)
js
daa
xchg
test
mov
pop
or
(bad)
jge
jno
sbb
adc
out
or
mov
shl
ret
lea
mov
(bad)
fild
push
mov
std
loope
(bad)
push
xlat
ret
fwait
push
jg
dec
and
or
xor
lods
ss
test
mov
jbe
retf
fcmovnb
jne
jne
sahf
push
and
xor
xchg
or
dec
cmp
or
test
sahf
sti
fild
hlt
retf
xor
jo
pop
xor
repz
pop
out
sbb
in
adc
cmp
neg
push
loope
cld
jecxz
inc
popf
mov
or
stos
call
sub
cmps
sbb
test
jo
xor
pop
add
bound
aam
js
arpl
mov
sub
std
iretw
push
scas
mov
push
add
mov
dec
rcr
in
xlat
sub
pop
(bad)
popa
pop
outs
out
hlt
mov
aad
or
mov
push
push
push
shl
pop
xchg
push
mov
cwde
push
std
xchg
adc
stos
mov
sub
dec
push
dec
and
pop
shr
nop
jmp
(bad)
dec
pop
sbb
mov
fistp
push
scas
pop
(bad)
(bad)
push
dec
cdq
adc
push
push
mov
mov
add
pop
mov
in
pop
or
shl
data16
imul
mov
push
enter
and
shl
fidiv
sbb
lahf
inc
cwde
retf
lea
ficom
xor
call
add
ss
pushf
loope
push
xor
xor
push
dec
adc
mov
movntq
dec
xchg
mov
rcl
add
push
jnp
mov
and
adc
push
pop
xchg
sub
push
arpl
pop
test
bound
cld
cmp
in
dec
retf
inc
sbb
cmps
scas
mov
sbb
shr
dec
sub
lods
mov
outs
add
push
cmp
pop
inc
jg
not
aaa
sbb
push
fistp
cmp
jns
or
out
out
rol
jecxz
pop
fwait
add
cwde
xor
push
fisub
loope
retf
gs
mov
loope
xchg
mov
shr
fwait
mov
ss
or
add
outs
test
repnz
call
mov
mov
or
js
cmp
or
sbb
leave
dec
iret
xor
(bad)
in
push
pop
shl
in
imul
ins
dec
cmp
sbb
mov
test
icebp
rcl
enter
add
jmp
mov
push
data16
test
rol
js
push
jmp
jmp
aad
(bad)
leave
adc
popa
push
pop
cmp
and
ss
fsub
outs
pop
fldenv
adc
dec
or
sub
popf
jae
enter
jge
out
jmp
and
inc
cmp
iret
fwait
push
sbb
pop
mov
mov
jne
repnz
cld
push
rcr
pop
test
pop
jecxz
retf
add
cmp
mov
aad
arpl
daa
mov
sahf
mov
(bad)
out
jmp
pusha
pop
fcomp
push
inc
fwait
jl
xchg
add
in
test
inc
rcl
and
xor
fsubr
pop
sahf
mov
popf
sbb
mov
adc
enter
mov
pcmpeqw
cmp
adc
ficom
(bad)
inc
adc
loope
xchg
fcom
mov
jbe
pushf
or
inc
dec
xchg
cld
mov
call
(bad)
xchg
dec
push
fist
into
call
dec
int3
sub
dec
mov
adc
icebp
bound
add
movs
out
inc
out
(bad)
adc
test
cdq
jmp
nop
jnp
fucomp
fst
jge
mov
lods
inc
inc
dec
cmc
push
jmp
dec
cmc
push
sub
outs
(bad)
jmp
or
repnz
sbb
lds
or
in
xchg
lods
dec
test
adc
nop
or
dec
clc
(bad)
fnstsw
pop
popf
jnp
popf
jl
xchg
(bad)
mov
cld
inc
xchg
in
sbb
gs
test
xor
test
inc
rcl
imul
and
mov
push
sbb
sbb
push
dec
push
stos
lahf
pop
xchg
sbb
in
add
out
xchg
mov
sub
jno
pop
mov
mov
popa
sub
sbb
push
ja
shr
arpl
xlat
cdq
lahf
xor
imul
add
ja
aas
adc
fisubr
lock
xor
adc
jne
ficomp
ins
in
loopne
cmp
mov
call
sbb
movs
dec
mov
and
mov
push
push
dec
jmp
scas
das
(bad)
bound
push
sbb
xor
shr
add
push
int3
and
sub
cmp
inc
and
cmp
mov
sbb
cli
in
xchg
jb
scas
call
outs
movs
repz
push
push
sub
popf
fwait
pop
mov
mov
pop
xchg
adc
lods
cs
loop
xchg
in
out
sahf
mov
adc
push
jl
cmc
xchg
cs
cmp
mov
xchg
jae
loop
dec
mov
cmp
xchg
mov
inc
pop
rcr
in
jmp
(bad)
xchg
fs
xchg
mov
adc
out
xchg
sbb
fst
mov
xor
jecxz
invd
idiv
loope
inc
and
dec
mov
xchg
idiv
lock
ins
cmp
push
sub
jno
dec
mov
and
mov
out
movs
pop
xor
test
jle
xor
sub
mov
int3
fcomp
cmp
neg
push
je
and
sbb
in
mov
jmp
dec
mov
mov
in
shl
sub
xchg
stos
ds
pop
icebp
sub
mov
jmp
popa
lahf
add
call
out
xchg
sbb
movs
arpl
jne
jmp
lods
push
inc
cmp
or
sub
jno
shl
mov
sar
repz
xchg
inc
push
inc
(bad)
xchg
lock
sbb
xchg
jae
push
inc
fcomp
jmp
jb
nop
leave
(bad)
or
jnp
push
dec
pop
cli
ficom
cmps
push
in
inc
pop
scas
sahf
cwde
jg
pop
lods
int3
sub
xor
shr
fst
mov
cmp
mov
mov
retf
icebp
add
add
int
push
xor
je
inc
movs
ss
loope
xchg
mov
mov
jp
in
retf
and
in
push
or
outs
xchg
pusha
imul
cdq
nop
sub
push
or
jb
mov
iret
add
mov
js
and
or
cmp
popa
xor
xchg
sar
imul
adc
ret
call
fdivp
imul
sbb
sbb
imul
shl
(bad)
stos
mov
push
stos
mov
sub
mov
push
das
les
add
ret
cmps
xchg
das
inc
mov
call
add
pop
cmp
enter
in
adc
xlat
bound
loope
gs
or
and
ret
dec
dec
cmp
jnp
out
dec
adc
sbb
add
(bad)
or
out
mov
dec
in
sbb
lds
in
pusha
adc
icebp
in
dec
fisttp
(bad)
rcr
ret
pop
dec
mov
inc
dec
test
(bad)
int
adc
xchg
lock
nop
push
fild
or
pop
xchg
test
lahf
fdivr
test
ins
add
(bad)
clc
add
inc
dec
cld
push
shl
movs
neg
out
mov
in
push
bound
nop
and
test
jge
fstp
arpl
loope
lea
mov
into
jb
fisttp
adc
sar
test
call
div
dec
aas
ret
mov
js
fisubr
pop
mov
sub
mov
add
jmp
dec
lock
ins
inc
imul
jge
xchg
scas
mov
sub
fdivr
sub
push
xor
rcl
add
mov
add
jp
jl
and
retf
and
xchg
jecxz
aaa
imul
hlt
inc
xchg
adc
aaa
push
repz
out
test
jecxz
inc
hlt
ins
cmp
mov
ret
jo
cmp
jle
lea
jle
mov
out
mov
mov
add
inc
adc
jle
push
dec
cmp
(bad)
cmps
dec
jno
xchg
sbb
push
mov
push
mov
add
retf
dec
mov
sbb
and
sbb
dec
inc
aam
jle
mov
cmp
and
inc
cld
cmp
sahf
int3
cmc
aam
repz
movs
je
sbb
add
push
push
mov
arpl
adc
dec
sbb
inc
or
nop
push
jae
dec
inc
mov
idiv
pop
scas
mov
mov
imul
xor
mov
sar
mov
ret
cli
cmp
or
(bad)
arpl
loope
jns
retf
sbb
dec
push
mov
dec
push
div
in
or
and
movs
mov
ja
jbe
or
fs
pop
sahf
adc
xchg
out
movs
fisub
xchg
mov
clc
sbb
imul
mov
mov
movs
sti
pushf
pop
clc
jmp
pop
ins
cmp
mov
lods
jae
jmp
out
sbb
out
retf
and
cmp
loope
push
xor
sub
je
cmps
adc
ds
and
mov
loop
(bad)
add
std
dec
inc
lea
sti
push
test
pop
mov
mov
mov
adc
add
aam
dec
push
daa
cmps
push
or
pop
jmp
ret
mov
ficomp
ja
mov
popa
div
dec
imul
call
je
loop
xchg
shl
inc
xchg
jmp
mov
les
ret
aam
jae
imul
xchg
movs
pop
ja
js
mov
xchg
mov
mov
int
out
xchg
sbb
outs
dec
push
fild
xchg
jl
outs
jmp
xchg
pop
push
scas
inc
imul
xchg
stos
stos
pop
ja
and
dec
add
sbb
pop
push
call
out
repnz
dec
pushf
(bad)
cmp
stos
(bad)
xor
mov
mov
and
int3
clc
je
retf
add
inc
sub
sbb
shr
sub
aam
sahf
sar
bswap
shl
fld
lea
int3
pop
daa
movs
cmp
rol
mov
mov
inc
and
fdivr
push
jmp
mov
or
mov
bound
sub
push
dec
adc
(bad)
out
dec
jge
in
mov
cmps
ficom
mov
pop
push
in
add
mov
xchg
inc
mov
test
mov
and
xchg
sbb
mov
mov
pop
add
xchg
mov
mov
cld
jo
and
add
push
push
stc
mov
adc
or
mov
or
pop
addr16
dec
cmc
xchg
imul
arpl
test
or
push
mov
xchg
push
(bad)
jmp
or
cmp
ins
lahf
push
into
sub
scas
fdiv
(bad)
push
pop
imul
jo
fs
inc
shl
xor
and
movs
jl
or
pushf
iret
mov
cmp
adc
sub
cmp
xor
cmp
outs
int
and
inc
je
repz
mov
push
jp
pop
push
imul
xor
dec
sbb
(bad)
ins
in
inc
aaa
leave
jo
(bad)
iret
cmps
cmp
xchg
icebp
push
loopne
loope
(bad)
sub
xchg
sub
jne
jmp
adc
loopne
and
or
cmp
inc
dec
xchg
movs
aam
lea
jno
(bad)
jecxz
mov
hlt
fxam
adc
ret
call
adc
out
cs
(bad)
jg
movaps
dec
(bad)
retf
cli
lea
out
push
(bad)
sbb
mov
ins
xor
jg
dec
mov
sti
inc
in
aam
hlt
pop
xor
push
and
test
ja
mov
sub
fst
sahf
repnz
(bad)
mov
test
xchg
sar
jns
push
cmps
fyl2x
jne
and
sub
pop
call
test
mov
lock
push
jne
dec
pop
push
daa
fbstp
in
dec
jg
into
adc
adc
xchg
xchg
fcom
inc
clc
pop
subps
aaa
into
cmps
push
enter
out
scas
mov
(bad)
outs
sbb
ja
stc
and
or
dec
inc
imul
cmp
dec
in
push
into
ss
retf
mov
xstore-rng
cmps
pop
sbb
push
add
aas
or
retf
inc
jg
mov
and
or
mov
jns
fisub
(bad)
push
lock
add
jmp
push
rcl
mov
movs
(bad)
mov
fiadd
sahf
jge
int
add
cwde
inc
dec
(bad)
cmps
dec
icebp
(bad)
push
xchg
nop
cdq
mov
add
xor
push
mov
mov
fxtract
or
jg
or
imul
(bad)
fld
push
aam
ficomp
and
mov
mov
mov
into
xor
xchg
sbb
lock
mov
fistp
dec
(bad)
xor
les
(bad)
inc
lahf
movs
daa
iret
jb
mov
jg
add
rcl
leave
xchg
mov
add
lock
xchg
pusha
in
xchg
es
inc
das
gs
jne
cmp
popa
dec
sub
retf
hlt
daa
out
sti
inc
dec
call
inc
pushf
in
add
daa
lock
mov
scas
mov
cld
xchg
pop
mov
push
inc
aam
movs
mov
mov
mov
nop
add
jp
pop
outs
sub
mov
stos
leave
mov
adc
mov
xchg
arpl
adc
ret
push
and
push
jb
lods
or
jg
mov
inc
lods
outs
xlat
div
aad
inc
clc
xchg
mov
xor
push
mov
rcr
loopne
outs
jns
cmp
dec
pusha
dec
pop
icebp
sbb
inc
add
idiv
or
mov
cmp
jp
dec
rol
jnp
in
shr
repnz
test
and
sbb
and
inc
ins
ins
fcomi
push
nop
and
mov
push
aas
pop
adc
cmps
sbb
cmps
xchg
adc
mov
push
aas
pop
imul
push
sbb
dec
adc
adc
ror
retw
repz
and
into
inc
xchg
test
test
inc
xor
mov
mov
loop
xchg
mov
push
pop
test
and
cmp
mov
push
sbb
hlt
xchg
call
out
sti
adc
xor
adc
adc
es
xchg
xchg
push
adc
mov
nop
mov
je
sbb
js
xchg
and
mov
sti
push
adc
out
sahf
mov
dec
rcr
dec
xchg
xchg
ror
adc
sahf
shl
jb
pop
cwd
(bad)
pushf
nop
pop
cmp
iret
into
lods
fadd
fsubr
jg
stos
jnp
jp
inc
dec
jecxz
or
and
sbb
xlat
inc
adc
and
das
xchg
imul
int3
imul
test
outs
mov
stos
ret
fisubr
into
retw
outs
adc
shr
(bad)
(bad)
loop
xchg
aam
fnstcw
and
ins
jae
fidivr
fidiv
scas
cdq
cmp
xchg
and
lahf
jbe
mov
xor
stos
mov
fsub
mov
sti
add
push
mov
xor
mov
adc
dec
jno
xchg
rol
jb
ja
in
mov
or
jp
cs
movs
(bad)
call
test
shl
imul
lock
jmp
stos
mov
ds
xor
daa
int3
and
cwde
movs
and
push
data16
jnp
cdq
push
fmul
cdq
fisubr
jle
pop
mov
test
je
pop
jb
dec
or
pusha
sub
loopne
sbb
aaa
mov
inc
cmp
push
mov
adc
les
es
ins
xor
mov
cwde
out
data16
push
imul
jg
jne
dec
push
dec
sub
aam
out
jne
outs
and
jnp
sbb
rcr
jle
idiv
scas
retf
shl
shr
nop
outs
repnz
sbb
jg
xor
(bad)
ret
out
xchg
retf
aam
in
enter
push
mov
dec
xor
or
rcl
and
mov
dec
pop
sub
xchg
xor
pop
inc
hlt
in
jle
mov
ins
je
cmps
pause
or
out
sbb
sbb
inc
(bad)
gs
dec
mov
or
xchg
adc
mov
(bad)
out
dec
push
dec
xchg
imul
jmp
mov
jo
dec
call
jno
push
popa
out
fwait
xor
imul
nop
mov
push
scas
out
imul
arpl
push
cmp
push
xchg
int
xchg
dec
sysexit
jle
add
ret
outs
pop
jbe
repz
xchg
int
adc
(bad)
in
xor
cmp
sub
cmc
jae
fadd
lds
rol
inc
loopne
(bad)
ds
ins
and
push
mov
icebp
xchg
sbb
mov
aam
stc
mov
xchg
push
mov
adc
loop
loopne
loope
imul
call
jg
icebp
cmps
mov
lods
pop
pop
jp
mov
mov
pop
ss
mov
mov
movs
(bad)
cmp
xor
sub
sub
inc
push
shl
mov
ret
mov
(bad)
pop
(bad)
stc
pushf
rcl
inc
test
repnz
es
mov
(bad)
retf
int3
adc
mov
sub
jbe
xchg
mov
inc
xchg
inc
xchg
sub
jo
pop
loope
out
jne
(bad)
jbe
pop
mov
loopne
xchg
dec
je
je
ds
es
xchg
xchg
or
dec
or
nop
dec
call
xor
cld
and
movs
(bad)
call
data16
xor
jp
or
mov
xchg
ins
retf
(bad)
call
test
sub
or
jmp
add
leave
pop
dec
jb
xchg
mov
loope
xchg
stos
push
cmps
xlat
mov
out
and
mov
hlt
movs
inc
aam
mov
jbe
stos
cmp
and
(bad)
or
test
jle
es
dec
jmp
out
stos
fimul
adc
sbb
icebp
in
cmp
cmc
mov
mov
movs
or
imul
mov
ss
push
popf
adc
push
aam
aaa
inc
imul
add
lods
cmps
(bad)
lods
ds
dec
scas
xchg
dec
pop
add
xchg
xor
cwde
jno
inc
leave
clc
retf
sbb
mov
leave
push
jmp
cmps
mov
in
and
out
pop
sbb
pop
pop
push
pop
jne
rcl
jge
sahf
clc
and
(bad)
xor
imul
icebp
dec
pop
call
or
out
or
add
(bad)
inc
inc
mov
xchg
sbb
cli
pop
stos
sbb
and
xor
jg
repnz
(bad)
es
(bad)
ret
pop
lods
cmps
xor
aas
mov
cs
mov
dec
add
repnz
inc
(bad)
ss
sahf
or
je
fldenv
pop
pop
mov
or
xor
and
mov
das
nop
add
js
add
mov
test
jp
mov
push
cli
pop
mov
xor
jae
jmp
ds
push
std
or
jno
cdq
pushf
mov
and
test
pop
cmp
arpl
lods
lds
pop
mov
rol
xor
or
mov
mov
mul
xchg
sbb
lock
je
xchg
jecxz
mov
call
push
jns
cmp
movs
call
in
hlt
add
push
(bad)
fisttp
ins
adc
loopne
or
xor
dec
iret
ret
jmp
dec
adc
inc
fwait
mov
aam
dec
xchg
mov
(bad)
sbb
inc
les
fld
imul
stos
jb
adc
cwde
stc
gs
mov
mov
pop
fsub
rcr
repnz
jb
sub
adc
mov
cmp
xor
mov
retf
xchg
cmp
adc
or
pop
adc
cmp
ficomp
into
mov
or
push
pop
js
dec
ins
or
jp
push
icebp
mov
test
add
les
jmp
mov
fst
loopne
(bad)
sti
mov
push
add
jns
dec
scas
pop
and
and
cld
add
xchg
cmc
adc
jae
mov
(bad)
xor
cmp
sbb
jg
outs
xor
adc
(bad)
xchg
or
xor
lea
xor
mov
stc
jmp
repz
sbb
xchg
out
(bad)
ror
xchg
adc
xchg
not
test
pusha
add
mov
fisub
(bad)
add
cmp
fbld
add
dec
sub
sub
xchg
add
adc
ret
xchg
mov
shrd
cld
dec
xor
fsub
sbb
sbb
cmps
xor
daa
jne
out
rol
fwait
ins
mov
dec
call
and
xchg
imul
aam
fdivr
or
push
xchg
lods
lods
mov
les
adc
into
sub
jle
mov
dec
call
sub
scas
aaa
test
cmp
jo
add
jmp
mov
adc
out
xlat
outs
push
sbb
mov
test
jge
jae
xor
lock
nop
int3
cmps
dec
pop
psubq
loopne
inc
std
adc
(bad)
xor
sbb
hlt
dec
dec
loope
or
lds
addr16
jb
jmp
inc
sub
jne
cmp
push
(bad)
ffree
fild
in
mov
imul
add
fdiv
(bad)
fwait
push
cmc
test
push
test
jmp
ds
mov
pop
cwde
(bad)
xchg
(bad)
xchg
fwait
into
into
dec
test
or
das
ret
dec
mov
xchg
lods
sub
xor
sub
dec
aad
push
das
push
scas
mov
mov
stc
ja
push
outs
add
das
jg
ror
loope
(bad)
aaa
xchg
jno
into
stos
jl
(bad)
mov
out
ror
mov
(bad)
fbld
sub
out
mov
adc
call
in
cmp
and
cmp
jg
test
in
adc
scas
fidiv
add
in
adc
mov
mul
out
inc
cmc
(bad)
out
mov
xchg
cmp
in
mov
mov
push
icebp
inc
adc
sti
int3
sub
push
add
push
scas
pop
cld
enter
push
inc
retf
icebp
dec
dec
cmp
xlat
rol
imul
int
(bad)
aaa
cmp
cmp
xchg
int3
pminub
add
pop
mov
and
cmp
mov
dec
dec
out
js
loop
pop
mov
jle
test
mov
cmps
pop
dec
xor
xor
enter
pop
push
and
sbb
cmp
mov
icebp
loop
pop
push
cmc
sar
gs
jg
enter
call
(bad)
in
jl
add
push
enter
int3
mov
jno
fwait
push
mov
test
sbb
push
addr16
(bad)
xchg
mov
and
fist
mov
sub
push
and
fistp
fidiv
add
or
ret
dec
imul
ficomp
into
or
aad
ja
int
mov
cli
leave
dec
sub
pop
xor
dec
movs
inc
pop
jbe
cmp
push
sub
out
xor
(bad)
mov
adc
in
repz
pop
ins
gs
or
fnstenv
test
dec
mov
jns
imul
pop
retf
in
ds
ds
stos
test
fiadd
jns
xlat
hlt
jmp
movs
adc
scas
cmp
jmp
jp
mov
in
loope
sub
mov
mov
cmps
mov
int3
sbb
pushf
push
aaa
loope
jns
das
lock
gs
addr16
cmp
loop
adc
retf
sub
inc
cmp
(bad)
fisttp
ja
xchg
adc
ins
or
enter
fisub
shl
push
mov
xor
stos
test
out
std
xchg
outs
loop
push
int
(bad)
or
push
(bad)
popf
les
mov
sbb
popf
dec
mov
out
dec
mov
popf
xor
sti
mov
movs
sbb
add
and
sub
jbe
adc
aad
inc
sub
sti
or
nop
xor
and
jge
push
jmp
sub
push
xor
cmc
lods
fisubr
pop
lds
inc
push
xchg
mov
mov
jmp
mov
fmulp
xor
pushf
int
mov
inc
ror
imul
pop
dec
(bad)
sbb
cmp
fs
shl
mov
outs
push
adc
lods
stos
out
cli
inc
sahf
ja
retf
sbb
rcr
xlat
mov
test
les
mov
jne
test
loope
add
and
dec
test
dec
cli
leave
je
es
sub
inc
or
jbe
pop
imul
jge
pop
pop
aas
jns
xchg
fcomi
mov
or
or
test
jns
add
push
je
jmp
nop
mov
or
xchg
cwde
test
cli
or
inc
test
lock
jae
cmc
aas
dec
call
push
push
ja
mov
pop
fnsavew
push
not
xchg
stos
sbb
mov
std
not
fnstsw
xchg
ss
jle
sbb
jbe
aaa
(bad)
outs
mov
xor
dec
test
(bad)
jecxz
lds
mov
or
mov
dec
cmp
dec
pop
push
sub
icebp
sbb
jmp
inc
call
mov
lods
cmp
mov
ja
or
out
bound
cld
sub
nop
adc
cld
push
jl
mov
shl
stos
or
and
nop
stc
mov
sti
xor
es
dec
(bad)
mov
pop
pop
js
jae
add
jb
cmp
out
les
push
aas
push
sti
cmps
fisubr
jg
pusha
push
int
lock
add
adc
push
add
lds
es
mov
pop
aaa
pop
push
cmp
push
jno
add
arpl
aas
out
push
mov
cld
dec
in
ins
adc
scas
fild
cmc
xchg
jns
call
scas
xchg
daa
call
fs
(bad)
sub
adc
cmp
xchg
cli
cs
leave
sub
cmp
repnz
call
jl
ss
push
sbb
add
pop
cmp
std
lahf
sub
mov
mov
push
test
das
xor
bound
dec
sub
cli
mov
pop
in
lods
inc
cmp
xor
into
jb
ss
add
call
add
or
sbb
mov
adc
and
cld
sti
in
mov
fwait
sbb
test
ss
mov
sub
pusha
outs
mov
sbb
cmps
ja
xor
out
jecxz
jmp
or
xor
(bad)
push
mov
(bad)
fistp
test
push
(bad)
outs
cmp
sbb
shl
test
pop
in
adc
popf
cmp
cmc
jns
fld
mov
shl
inc
(bad)
retf
gs
outs
jne
cmp
mul
loop
pop
pop
inc
mov
sbb
sahf
push
fisttp
adc
or
fist
add
or
loope
push
imul
xor
dec
(bad)
movs
mul
and
fimul
sahf
ss
xor
push
lock
lds
xor
cs
mov
jp
mov
dec
and
call
add
jae
mov
sbb
ret
scas
mov
fwait
int
adc
and
sbb
outs
mov
lahf
ins
fimul
pop
dec
sbb
xchg
hlt
xchg
outs
fstp
leave
jecxz
push
hlt
sar
retf
mov
sar
pushf
int
out
jp
jecxz
adc
mov
rol
dec
xchg
dec
cli
fild
dec
enter
icebp
mov
ds
(bad)
push
mov
sbb
adc
cld
int3
push
mov
iret
mov
std
dec
out
xchg
add
fstp
rcl
into
sbb
repz
or
(bad)
adc
pop
jmp
cmps
in
dec
ja
inc
ficom
push
ret
inc
(bad)
mov
sub
dec
imul
mov
cmp
lahf
push
and
dec
xlat
or
retf
ds
xor
adc
inc
add
stos
stos
fidivr
ja
outs
push
outs
pop
clc
int3
adc
call
and
mov
mov
sbb
sub
je
aas
(bad)
xor
dec
mov
xlat
add
fisttp
pop
sahf
inc
dec
stos
add
rcl
out
popf
inc
xor
scas
jmp
xchg
jnp
cld
or
clc
sbb
push
adc
not
cmp
xchg
mov
lock
adc
(bad)
cwde
sbb
and
sub
pop
ins
pop
das
inc
or
push
and
bound
adc
sub
outs
jp
mov
or
cli
test
push
cdq
dec
pusha
inc
push
xor
push
cmp
pop
mov
inc
and
in
inc
inc
cs
push
xor
inc
or
ret
dec
loope
mov
iret
fist
or
jo
push
mov
or
or
outs
mov
jl
xchg
push
mov
push
push
xor
ds
xor
mov
fisub
jae
aaa
adc
push
loop
mov
pop
aam
xor
mov
out
adc
add
add
retf
xchg
(bad)
icebp
in
shl
inc
ja
cmc
adc
push
mov
add
cli
loop
pop
sub
mov
jge
mov
mov
out
dec
and
loope
and
(bad)
fidiv
je
cwde
inc
push
mov
ss
outs
push
xor
in
mov
or
repnz
in
out
mov
jge
xchg
adc
inc
xchg
shl
xchg
push
xchg
out
hlt
popa
or
cwde
add
(bad)
aad
xor
jl
sub
adc
cwde
push
sbb
cmp
xchg
adc
ror
imul
mov
sbb
xchg
xor
mov
mov
lds
add
scas
ds
gs
dec
mov
lea
cmps
dec
movs
jo
cmp
jg
sti
inc
mov
cmc
or
test
mov
rcl
adc
lock
dec
addr16
out
aam
cli
mov
(bad)
adc
jecxz
jmp
sbb
loopne
sti
jne
(bad)
sbb
out
fld
cmp
arpl
dec
pop
mov
fucomp
and
outs
gs
inc
xchg
adc
in
fwait
inc
repz
pop
mov
or
stos
imul
mov
or
mov
adc
push
add
fistp
xor
es
fld
jne
in
aaa
pop
or
mov
adc
jge
dec
in
mov
push
out
pop
push
xor
aam
push
fild
inc
dec
mov
add
push
pop
push
aad
xor
or
iret
xchg
imul
std
sub
or
loope
lock
adc
jle
std
adc
mov
shr
cs
call
stc
loopne
sub
lods
mov
add
mov
jp
cmps
nop
rol
mov
xor
les
test
lock
nop
cmp
or
out
(bad)
and
stc
outs
push
adc
and
pop
retf
enter
inc
or
arpl
mov
dec
xor
ror
xchg
pusha
pop
idiv
shl
mov
add
movaps
mov
test
stos
imul
inc
cmp
push
loope
mov
dec
icebp
(bad)
hlt
mov
ja
inc
pop
loope
xchg
inc
mov
fst
xchg
xchg
ins
push
fs
add
imul
sti
shl
int3
dec
aad
stos
shr
lahf
dec
xchg
add
movs
mov
jae
clc
fimul
(bad)
clc
std
scas
mov
cmp
outs
aaa
dec
ret
push
and
loope
(bad)
fwait
pop
jae
retf
cmp
push
popf
and
push
jecxz
jmp
lds
jnp
popa
and
je
(bad)
call
pop
mov
adc
push
dec
cdq
ret
xor
dec
ja
dec
loopne
or
lds
push
es
xor
or
cmp
fild
pop
xor
mov
hlt
movs
xchg
ins
cmps
xlat
outs
in
push
inc
jmp
mov
mov
ins
lock
(bad)
adc
dec
fnsave
jno
push
fadd
xchg
or
lahf
call
imul
scas
ficom
mov
xor
hlt
or
or
mov
das
lods
add
aam
adc
pop
and
shr
push
(bad)
dec
push
mov
xor
fidiv
mov
pop
mov
stos
ret
aam
test
jae
and
sar
test
sub
xor
shl
push
outs
push
dec
and
jmp
enter
mov
push
jno
push
ror
push
enter
pop
inc
daa
ins
retf
enter
sub
cli
mov
popa
les
mov
stc
dec
lds
mov
jmp
adc
(bad)
sti
ror
out
movs
fstp
xor
lods
js
jle
sbb
or
test
xor
mov
ja
mov
mov
cs
sar
mov
mov
jge
jo
dec
daa
add
or
sbb
popa
pop
addr16
mov
lea
das
xor
add
mov
jge
jmp
iret
mov
bound
xchg
dec
mov
push
push
outs
sbb
or
push
in
mov
int3
sar
test
mov
xchg
call
add
ins
leave
(bad)
jne
and
test
xor
pop
jb
or
sbb
std
mov
loopne
into
sbb
sub
cmp
popa
(bad)
mov
pop
idiv
mov
in
pop
inc
jmp
cdq
cwde
ret
jp
popa
in
mov
add
test
lock
push
aas
pushw
xor
mov
inc
dec
cdq
sti
cmp
lock
addr16
mov
in
pop
and
xor
outs
jg
push
xor
jo
mov
adc
(bad)
jecxz
int3
aas
ds
(bad)
nop
scas
or
dec
call
in
sbb
mov
add
cld
mov
test
mov
mov
push
out
jmp
pop
cmp
xor
pop
inc
cmps
mov
in
jmp
sbb
or
mov
cmp
inc
push
mov
sbb
dec
sub
xchg
stos
jmp
xor
das
dec
cwde
rcl
mov
and
adc
call
jecxz
mov
mov
jp
mov
fwait
push
mov
pop
and
adc
cdq
aaa
sub
sbb
push
xchg
pop
cli
adc
cmc
mov
icebp
inc
out
push
js
jp
sbb
in
scas
pop
mov
out
pusha
cmp
cwde
or
mov
mov
jl
or
(bad)
pop
pop
sub
lds
je
xor
aaa
dec
ins
sub
cmp
inc
lods
add
cmp
ins
fcmove
int
ja
push
out
mov
or
cmp
mov
addps
cmc
out
mov
js
ins
ins
sub
xchg
sbb
cmp
(bad)
cld
dec
test
jg
cmp
mov
dec
leave
xlat
mov
je
test
sti
(bad)
fadd
aam
lods
in
add
cmp
sub
stc
dec
xchg
fs
loop
fldcw
push
xchg
jae
inc
hlt
lds
std
imul
out
in
(bad)
fdivr
sub
dec
mov
inc
mov
jmp
adc
push
or
aad
jle
pusha
mov
xor
xchg
mov
push
mov
xchg
cmp
push
rcl
xor
pop
mov
cld
inc
jp
sub
aad
aas
fwait
imul
jecxz
imul
mov
jle
mov
stos
das
pop
and
jno
test
push
add
stos
push
out
pop
lock
mov
xchg
aaa
arpl
daa
out
test
imul
inc
xchg
jge
dec
rcl
(bad)
arpl
xchg
cmp
movs
lea
jle
shl
sub
sub
ficom
mov
inc
or
xchg
fldcw
xor
ss
mov
xor
pop
mov
out
in
xchg
mov
jne
mov
test
call
or
sub
shl
and
repz
mov
imul
ret
jle
(bad)
xor
pop
mov
out
repz
xor
mov
mov
fs
outs
pop
sub
and
or
and
mov
push
cmp
stos
popf
pusha
mov
add
jge
test
sbb
push
adc
faddp
and
jmp
jmp
sbb
stos
icebp
loopne
xor
shl
or
adc
inc
push
nop
or
call
paddq
mov
ins
leave
push
out
shl
mov
mov
mov
push
dec
repnz
test
mov
sub
sub
test
inc
mov
icebp
mov
popf
fimul
mov
push
adc
sub
adc
push
int3
pop
daa
out
fld
ror
dec
mov
add
cwde
das
jl
hlt
mov
mov
jne
jne
push
call
out
leave
jg
imul
shl
std
jg
push
or
ins
sub
adc
and
fwait
push
jle
call
or
push
mov
lods
jge
les
stos
imul
sub
fsubr
dec
sub
cwde
sub
test
enter
ins
fdivr
mov
and
(bad)
popa
push
cmp
mov
dec
sub
push
sbb
push
out
mov
and
(bad)
mov
shl
sbb
(bad)
lahf
out
mov
xor
dec
xlat
lock
cmp
push
sub
xor
jecxz
mov
inc
test
mov
jns
lods
jno
cmc
mov
es
sbb
sahf
push
sub
fprem1
or
cwde
and
ds
inc
in
(bad)
loopne
inc
call
push
and
add
adc
mov
test
jge
loopne
pop
js
in
adc
xor
pop
or
repnz
dec
mov
or
mov
ror
call
in
mov
xor
lgs
imul
pop
lock
adc
es
xchg
adc
int
and
ds
(bad)
(bad)
iret
into
iret
loop
rol
pusha
xchg
lods
dec
push
or
call
push
mov
pop
out
lods
dec
or
fcomp
fdiv
jnp
dec
sbb
pusha
push
dec
mov
jp
bound
push
fcom
sbb
sub
ja
jae
std
jne
dec
sub
jl
inc
push
add
in
enter
mov
cmp
mov
shl
jno
sbb
shr
call
iret
and
fs
clc
(bad)
lods
fwait
jno
jno
ins
mov
jle
int3
cmps
pop
mov
jmp
xor
xchg
push
add
push
sub
sti
xor
lea
sahf
push
cmc
mov
pushf
ror
sbb
add
push
jge
pop
xor
inc
fwait
pop
mov
and
mov
scas
fist
sub
jg
sub
jne
sub
mov
cmp
int3
pop
xchg
mov
xchg
xor
push
(bad)
rol
(bad)
push
dec
movs
jns
punpckhbw
(bad)
das
inc
cmp
dec
dec
hlt
ins
bound
addr16
hlt
test
inc
jnp
fcmove
inc
adc
sahf
add
cdq
shl
push
adc
mov
dec
sbb
inc
out
inc
movs
(bad)
into
pop
pop
enter
mov
cdq
mov
(bad)
ins
bound
mov
or
xchg
xor
(bad)
mov
(bad)
mov
adc
leave
imul
sbb
mov
add
stos
rcr
stos
jne
sub
adc
(bad)
push
call
(bad)
push
sbb
cmp
or
fcmovnb
xchg
adc
test
jb
or
pushaw
cmp
add
sub
shr
pop
test
pop
outs
test
and
inc
stc
jnp
xor
add
mov
sub
test
pop
jno
sbb
xor
sbb
ror
retf
mov
push
ror
xchg
inc
stc
pop
mov
adc
ffree
dec
sub
hlt
hlt
jp
enter
stos
js
inc
scas
aaa
jne
es
icebp
dec
fld
(bad)
(bad)
pop
call
fnstsw
(bad)
outs
adc
mov
adc
cdq
std
jo
cwde
scas
pop
ins
fidivr
mov
bnd
je
xor
dec
int3
rol
sbb
xor
mov
push
cmc
les
xor
mov
push
mov
add
sbb
dec
push
mov
adc
sub
adc
xchg
retf
rcl
jb
call
aaa
nop
jmp
shr
mov
sub
or
cli
mov
out
xchg
inc
or
sti
fnstsw
outs
and
aam
or
enter
int
cmp
cmp
js
pop
scas
rcr
push
jne
aam
add
jnp
into
and
into
lock
mov
dec
js
cdq
inc
aas
xchg
es
fsubr
cmp
cld
lods
xor
shl
mov
pop
and
or
in
outs
pushf
bswap
cmp
test
jp
sub
sar
and
cmp
dec
or
nop
add
dec
mov
pmulhuw
(bad)
test
cmps
inc
hlt
xor
in
or
(bad)
mov
fdiv
dec
or
fnstenv
ds
cdq
mov
pop
in
or
repnz
add
adc
and
lods
dec
or
test
cmp
add
mov
cdq
cs
shr
sar
jmp
push
aam
ja
in
fwait
cmps
popa
lods
mov
adc
mov
clc
lods
in
repz
out
pushf
or
and
jle
mov
dec
inc
(bad)
shr
adc
popf
cwde
adc
mov
ins
movs
imul
dec
inc
jnp
mov
imul
fwait
jno
add
out
lds
test
je
mov
repnz
inc
adc
and
xlat
pop
test
xchg
xchg
or
ror
in
add
mov
cdq
in
push
jne
adc
loope
push
(bad)
and
jl
sar
push
shr
enter
je
pop
or
xchg
jae
ds
xchg
push
mov
sub
imul
sub
xor
push
mov
arpl
retf
test
sub
dec
mov
xor
and
leave
call
sahf
xor
imul
and
ret
inc
sbb
sub
shl
adc
popa
xchg
sub
pop
adc
adc
arpl
or
fidiv
xor
mov
sbb
fistp
bound
jno
inc
shl
inc
lahf
mov
dec
mov
push
(bad)
lods
dec
jno
aam
dec
stc
punpcklwd
add
sbb
les
add
push
mov
cli
stos
fldenv
loopne
pop
and
or
dec
popf
aaa
pop
sub
loop
(bad)
push
push
test
pop
inc
je
je
(bad)
inc
pusha
adc
pop
push
lahf
or
inc
lock
aaa
or
or
adc
pop
repnz
dec
xchg
mov
xor
jg
ins
cdq
pop
popa
mov
and
xchg
retf
cmc
cdq
xor
jle
aad
call
adc
push
or
sbb
push
fld
retf
jp
jp
cs
mov
sbb
dec
or
adc
sbb
jo
stc
call
fxam
or
stos
push
lods
mov
dec
or
popa
ins
stos
sahf
add
lock
mov
lds
adc
stos
push
movs
mov
xor
xor
stos
out
iret
cmp
sbb
dec
xor
jg
push
fidivr
movs
push
adc
cmp
inc
test
push
jl
push
xchg
mov
dec
iret
mov
dec
pop
sub
mov
adc
fwait
sbb
sub
or
push
or
lods
sbb
mov
mov
enter
inc
jae
fiadd
mov
fidiv
sbb
sbb
mov
mov
mov
lds
jp
adc
adc
inc
ret
pop
int3
and
xor
lock
ret
in
mov
ins
mov
cmpxchg
push
cmc
add
call
nop
aas
cli
mov
inc
dec
sub
lahf
jns
popa
pop
sub
mov
cmp
and
aad
inc
mov
dec
dec
pop
pop
mov
cmp
je
loop
jo
jne
cmp
aaa
inc
lods
xor
outs
inc
rcr
pushf
call
aaa
mov
std
fcom
imul
pop
cmp
mov
mov
iret
inc
nop
fucomip
dec
test
adc
dec
xor
jno
jle
imul
repnz
pop
xchg
lea
inc
or
mov
push
or
loopne
aam
mov
xor
cmps
ds
stc
mov
pop
outs
sbb
ja
loope
fwait
xor
adc
mov
int
aaa
push
inc
cld
in
ror
out
dec
rol
popa
mov
ret
outs
push
inc
add
inc
pop
(bad)
sub
addr16
xchg
cmp
mov
pop
push
push
fnstenv
jne
dec
mov
enter
fild
call
and
into
lock
dec
push
call
dec
dec
retf
jns
cdq
pop
dec
loopne
mov
xchg
add
out
push
push
(bad)
inc
test
pushf
mov
rcr
push
inc
jns
xchg
lahf
dec
mov
in
mov
and
or
ret
xor
xchg
sar
or
jp
pop
hlt
sahf
ja
cld
mov
jp
lahf
cmp
mov
inc
and
fsubrp
sub
sbb
mov
out
push
gs
cwde
push
out
add
inc
adc
mov
sti
or
int
shl
inc
addr16
repnz
fs
and
loope
mov
fxam
xor
imul
jns
(bad)
xchg
fs
xor
cmp
sub
fiadd
out
cmps
or
mov
mov
pushf
sbb
mov
cmps
jbe
or
in
outs
rol
jg
js
mul
out
xchg
add
mov
nop
pop
rcr
inc
dec
pop
mov
push
mov
xor
push
mov
xor
mov
cmp
mov
jb
into
mov
ja
or
mov
retf
rcl
ret
pop
dec
inc
jae
into
in
cmp
cli
push
cdq
xor
(bad)
xlat
bound
aaa
out
fstp
push
clc
push
(bad)
jae
ss
scas
jbe
ret
in
pop
xchg
push
xchg
repnz
adc
and
mov
and
jl
pop
inc
fnstenv
neg
add
push
pop
dec
push
imul
jmp
xor
add
xchg
(bad)
sti
jle
jae
sub
je
fs
dec
popf
fld
mov
fcmovnu
fisub
bound
xor
push
arpl
dec
mov
nop
and
inc
or
or
(bad)
daa
sub
fst
lods
and
int3
gs
xchg
sbb
int
sub
sub
shr
sbb
fidiv
stos
pop
xor
push
push
arpl
mov
mov
into
stos
adc
sahf
sub
wbinvd
mov
out
cli
jecxz
mov
aam
stos
sub
arpl
fsubrp
and
push
repz
pop
out
xor
outs
add
sti
int
movs
mov
xchg
mov
cdq
enter
(bad)
lods
(bad)
sub
cmp
and
repz
in
add
(bad)
movs
enter
mov
or
scas
shr
fisubr
cmp
jno
aaa
repnz
fld
sbb
daa
sub
pop
xchg
in
add
push
std
stc
cs
cli
in
rcl
jb
push
cli
xchg
add
sbb
das
mov
fs
jne
ins
mov
or
into
(bad)
daa
xor
hlt
fld
sar
or
push
dec
sbb
add
in
dec
sub
xor
sbb
mov
retf
outs
jne
dec
mov
and
je
sbb
jmp
cs
xor
cmp
hlt
jo
mov
sub
sub
sbb
mov
sti
sub
not
cmc
pop
mov
ss
dec
bound
adc
aad
idiv
jne
dec
pop
pusha
movs
add
jg
sub
adc
sbb
movs
test
(bad)
push
add
test
cwde
adc
int
sbb
push
out
adc
imul
leave
call
push
sti
dec
dec
es
in
mov
movs
mov
retf
mov
and
mov
push
xchg
add
movs
pusha
xor
or
or
outs
mov
and
xor
xlat
and
adc
in
(bad)
or
xor
xlat
loope
fstp
xchg
cmp
sbb
push
dec
sbb
sti
outs
fadd
and
jnp
xchg
cmp
stos
out
mov
ret
mov
fidiv
loop
add
loop
cs
mov
rcl
imul
adc
daa
ret
rcl
pop
in
push
inc
ret
jne
(bad)
cmc
in
mov
or
stos
stc
mov
push
pop
iret
imul
addr16
mov
adc
mov
and
pop
aas
mov
int
js
arpl
and
jg
fimul
daa
xchg
das
pop
ds
pop
out
mov
mov
pop
pop
call
icebp
fld
aas
pusha
and
pop
add
dec
jae
inc
lds
and
pop
jne
inc
push
mov
(bad)
jnp
fadd
pop
jge
call
mov
aad
inc
jne
cmp
mov
rcl
and
cmp
xor
mov
std
outs
cdq
push
clc
je
sub
inc
pop
and
iret
xchg
push
jb
adc
cwde
mov
in
or
or
jne
rcr
cmp
loope
mov
sbb
jnp
mov
xor
loope
mov
shl
dec
shl
aaa
pop
sub
fs
jns
inc
cmp
push
cmp
je
sub
je
dec
xchg
jmp
and
mov
mov
inc
xchg
cwde
js
mov
jl
(bad)
loope
adc
mov
mov
sub
jmp
pop
adc
inc
ja
retf
repz
adc
jg
sub
push
sbb
jbe
pop
ret
xchg
cmps
mov
rcr
jl
ficom
xchg
cld
cmp
xor
pusha
in
pop
xlat
xlat
fidivr
pop
aas
xchg
inc
and
adc
pop
test
sahf
sti
and
imul
sbb
in
jne
loope
inc
and
mov
adc
cmp
inc
push
push
aam
push
nop
add
sub
imul
maskmovq
sub
cs
dec
pop
out
mov
dec
sbb
mov
imul
mov
mov
test
adc
add
pop
adc
(bad)
dec
adc
out
rol
arpl
out
inc
jecxz
push
hlt
push
add
adc
dec
retf
jmp
dec
cmps
ficomp
mov
push
shr
dec
outs
sbb
lods
jo
mov
push
pop
mov
test
jno
pushf
mov
or
inc
les
mov
fmul
(bad)
inc
imul
cmp
inc
push
aaa
jle
jmp
push
dec
and
into
pop
sti
mov
add
and
outs
jae
inc
adc
out
hlt
js
js
pop
dec
cmp
add
je
and
xchg
(bad)
cld
mov
pushf
cmp
pop
mov
(bad)
movs
and
addr16
push
shl
inc
in
dec
mov
mov
push
fs
fist
xchg
nop
movs
sti
out
xor
repz
xchg
je
inc
or
cli
fldenv
dec
(bad)
fld
push
or
repnz
repnz
in
cld
lods
arpl
in
sub
popa
aaa
push
stos
jnp
dec
xchg
je
jmp
add
dec
(bad)
sub
pusha
pop
jecxz
data16
pop
dec
(bad)
int
adc
jecxz
test
leave
adc
sub
test
jae
sahf
sbb
add
sbb
adc
mov
xor
push
into
test
add
pop
xchg
add
ret
mov
out
stos
cmps
pop
or
ss
xor
int3
jg
push
cmp
(bad)
test
mov
call
xor
fisub
int3
(bad)
push
js
jmp
xchg
jp
jge
mov
pop
in
inc
(bad)
int3
stos
outs
aam
aam
mov
adc
jmp
mov
and
xchg
jecxz
or
aam
inc
loope
call
mov
(bad)
fsubr
dec
add
in
adc
sbb
ds
lods
adc
xchg
dec
es
jae
dec
sbb
push
adc
push
push
add
(bad)
lock
jbe
xchg
xor
inc
in
push
mov
mov
mov
push
sbb
ins
inc
jns
mov
and
loop
pop
bound
leave
jle
inc
pop
jo
shl
stos
push
sub
jg
in
or
add
mov
xchg
jl
addr16
popf
pop
adc
mov
mov
fidiv
mov
inc
cmp
mov
add
xchg
fst
xor
xchg
hlt
push
sbb
mov
inc
jg
test
js
sbb
mov
hlt
aam
mov
jmp
adc
pop
je
push
cmc
fidiv
outs
inc
xchg
add
mov
outs
and
jb
sub
repz
fwait
cmp
ins
into
sbb
in
push
pop
imul
sbb
or
mov
inc
push
mov
rcr
push
out
xor
rcl
cmps
scas
je
or
adc
mov
cwde
loope
mov
xor
and
xor
push
mov
cmp
call
rcl
adc
pop
or
stc
cmp
jl
shl
jb
gs
adc
fld
mov
mov
jno
cmp
lock
aas
test
fst
cwde
loope
in
sahf
xchg
gs
xchg
cld
inc
fistp
dec
inc
dec
xchg
jp
pop
push
int
adc
test
jge
imul
xor
in
push
shl
mov
push
btc
test
cmp
in
sbb
and
mov
xchg
ffree
sar
nop
test
sahf
xchg
into
xor
sub
dec
cmp
bound
mov
jg
cmp
add
jl
sbb
ins
jmp
mov
out
pop
jecxz
inc
fsub
dec
sbb
aam
jae
pop
ins
cwde
pop
push
hlt
push
int
pop
bnd
inc
(bad)
fimul
out
sub
aam
jge
mov
and
jb
iret
(bad)
(bad)
xor
adc
das
jbe
std
sbb
les
iret
sub
and
test
int
pop
and
mov
pusha
add
fdivr
or
pop
push
pop
out
adc
mov
jb
fst
and
repnz
into
lods
push
pop
mov
test
cli
dec
pop
xor
pop
xchg
repnz
jb
mov
mov
pop
sub
xor
sub
xor
stos
jbe
nop
call
pop
mov
cmp
imul
fadd
out
xor
fdiv
xchg
cmp
fnstcw
ja
and
sbb
movs
int
out
stc
mov
sub
dec
add
test
push
mov
inc
pop
adc
add
ss
sub
and
(bad)
jecxz
dec
sbb
imul
lahf
jo
inc
push
aam
sbb
xchg
out
(bad)
out
imul
std
add
in
dec
aad
pop
sub
clc
push
add
(bad)
jmp
cdq
std
jne
cmps
fnstcw
add
in
or
xor
cmp
fwait
stos
cmp
leave
dec
into
inc
ret
retf
repnz
aad
add
inc
cmc
out
sub
in
aaa
cmp
ss
movs
or
rcl
add
mov
push
test
or
mov
shr
stos
push
test
xchg
addr16
fwait
xor
jns
mov
cmc
sbb
push
or
and
jmp
inc
fld
ins
pushf
sub
dec
mov
ss
(bad)
mov
jl
mov
aam
dec
out
gs
es
push
dec
call
mov
cmps
out
push
rcl
xchg
popa
aas
ins
xor
push
fcom
aad
jp
shr
add
lods
inc
ss
int
jbe
int
xchg
iret
hlt
jb
test
movs
push
dec
fisttp
bound
xor
mov
jge
adc
fimul
xor
or
inc
add
sbb
jae
repz
xor
mov
iret
adc
or
in
mov
pop
push
outs
arpl
hlt
int3
cmp
mov
mov
and
loope
fcom
fmul
popa
enter
inc
dec
lods
es
inc
pop
mov
dec
mov
sub
fdivr
xor
repnz
mov
pop
add
test
popa
lods
(bad)
lods
aad
pop
popf
jl
js
loop
push
cmp
or
cmp
jbe
jne
(bad)
pushf
movs
adc
pop
fld
in
mov
inc
inc
xchg
ja
test
cdq
test
jge
loop
nop
jno
rcl
mov
addr16
cmps
push
lahf
hlt
call
xor
cmp
repz
xchg
push
sti
cmp
hlt
add
sbb
fiadd
jecxz
xor
ins
add
dec
out
sti
xor
stos
out
lds
mov
arpl
neg
(bad)
retf
imul
outs
(bad)
pusha
push
xlat
(bad)
shl
push
hlt
movs
call
mov
mov
loope
cmp
dec
stos
sahf
inc
adc
ds
cmps
cmp
sbb
pop
retf
sub
rol
adc
das
jae
jb
movs
cmc
ja
cld
mov
out
push
or
lds
mov
inc
jmp
add
aam
and
pushf
mov
jmp
sar
mov
push
pusha
dec
(bad)
xchg
shl
retf
xchg
cwde
mov
div
pop
jo
adc
loop
scas
add
push
mul
(bad)
daa
(bad)
repz
add
not
mov
push
fistp
test
sub
data16
fisub
scas
inc
or
mov
mov
frstor
mov
je
add
movs
movs
das
inc
mov
(bad)
sub
fadd
xchg
and
pop
nop
push
adc
adc
fild
or
sbb
mov
aas
mov
and
ins
pusha
jno
sub
(bad)
pushf
sub
int
je
mov
nop
pop
repnz
sub
loop
xchg
cli
add
dec
cld
mov
shl
popa
xchg
and
out
popf
js
sbb
lods
ins
arpl
mov
sbb
adc
ja
mov
jo
ins
fidivr
ja
jg
cmp
mov
sti
push
cmp
jmp
ret
xor
push
cmp
add
sahf
icebp
push
ficom
push
shl
sar
sbb
sub
mov
xor
mov
cmps
sub
pop
push
(bad)
cmp
out
dec
iret
push
push
aad
stos
cli
mov
pop
pusha
ret
inc
mov
mov
mov
adc
xchg
add
dec
(bad)
mov
fwait
cmps
lods
paddb
dec
mov
xor
push
nop
fimul
test
wbinvd
ret
(bad)
fdiv
xor
(bad)
popf
inc
sbb
mov
fcomp
dec
inc
iret
fldcw
cmp
push
add
jmp
and
push
fs
ja
fdivp
test
adc
out
mov
aam
enter
sbb
daa
push
ins
shr
xchg
(bad)
add
jae
mov
mov
or
sbb
icebp
inc
lods
call
mov
pop
data16
clc
pushf
sti
out
sar
mov
in
inc
lds
or
adc
into
jae
daa
cmp
mov
div
or
mov
pop
and
popf
les
jbe
adc
into
out
adc
imul
fist
or
movs
fcmovbe
in
mov
rcl
ret
push
mov
pop
mov
mov
cmp
inc
(bad)
in
adc
outs
hlt
dec
jbe
xor
inc
enter
and
push
mov
and
in
mov
jae
out
cmc
fstp
mov
jb
jnp
rcl
sti
enter
mov
fninit
out
rcr
les
fist
mov
sub
out
ins
adc
(bad)
xchg
cli
jb
fs
pop
mov
or
push
int
inc
sar
(bad)
pusha
push
data16
xchg
gs
(bad)
aas
mul
ss
les
ds
mov
cdq
aad
xor
cmp
fcomp
cmp
arpl
pop
ret
in
(bad)
xor
pop
mov
add
add
push
cli
ins
jb
fisub
addr16
sub
adc
ds
or
fisub
rol
ja
add
out
inc
mov
ins
cmps
lea
xchg
push
fcmovnbe
add
xchg
retf
xor
shr
xlat
call
(bad)
cmp
sbb
or
mov
xchg
std
cmp
(bad)
arpl
cdq
(bad)
add
push
cmps
dec
mov
xor
mov
mov
push
push
lods
repnz
aam
mov
fwait
add
sub
pusha
fstp
jp
cmp
and
push
ds
pop
xor
fst
fwait
inc
mov
xchg
and
push
cmp
cmp
mov
xor
mov
xor
shl
add
xor
or
jnp
cmp
pop
inc
bts
xchg
dec
rcl
sub
adc
mov
gs
pop
daa
pop
dec
xor
or
cli
cmp
ror
push
out
bound
xor
outs
mov
call
sti
jg
into
xor
mov
sbb
inc
xlat
pop
fdivp
xchg
add
jae
push
in
movs
mov
retf
cli
in
jmp
push
mov
adc
xchg
ret
retf
xchg
loopne
out
xor
stos
push
jae
outs
call
ds
push
pop
add
test
and
sar
or
ja
js
rcr
add
movs
in
ret
cmp
retf
cmps
mov
popa
loopne
repnz
aaa
jae
rcr
sahf
xor
mov
es
ja
push
aad
fwait
adc
adc
cmps
push
rol
add
xchg
stos
fist
mov
ds
enter
mov
ror
sub
sahf
rcr
adc
es
repz
cmc
imul
out
mov
pop
mov
pop
aaa
jae
or
imul
push
jmp
and
jg
cmp
xor
bound
pop
js
fidiv
xlat
add
push
retf
mov
add
mov
sbb
ins
sub
cmps
stos
mov
cmp
data16
adc
ja
retf
sbb
mov
push
jmp
shl
jb
lahf
jmp
lods
test
clc
shr
ficom
cmp
ja
cmp
sar
jecxz
daa
xor
jbe
add
ficomp
mov
and
test
(bad)
cdq
jle
xchg
dec
adc
push
push
rcr
mov
ja
aam
cdq
pop
sub
jnp
test
cmp
(bad)
(bad)
(bad)
fidivr
sar
retf
push
fistp
clc
cmp
test
xor
int3
add
jmp
mov
inc
fldenv
sahf
call
rol
(bad)
fstp
outs
adc
and
push
imul
(bad)
pushf
mov
dec
jecxz
sub
fistp
rcr
data16
adc
mov
sub
aad
add
je
or
sub
(bad)
fdivr
pop
mov
rol
(bad)
bound
sbb
mov
push
adc
inc
push
lock
mov
xor
jge
iret
test
sub
aas
jmp
add
mov
dec
pushf
ja
cmp
ins
out
push
out
aas
push
scas
repz
jno
and
clc
rcr
call
loopne
inc
xchg
fidiv
mov
mov
mov
and
fst
clc
pop
push
jp
xlat
mov
retf
jb
dec
sbb
cmps
pop
in
mov
xor
sub
sbb
cld
inc
hlt
pop
inc
push
or
add
fcmove
cmp
cli
out
into
xchg
mov
loop
inc
repz
push
push
lds
push
xchg
mov
mov
jge
push
pop
out
jl
cmp
jecxz
out
in
xchg
mov
mov
loope
mov
push
sub
rcr
(bad)
push
call
and
aas
mov
mov
cs
data16
push
(bad)
les
cmps
mov
stos
sub
cmp
push
popf
pushf
and
hlt
sbb
(bad)
mov
or
fisttp
lahf
aad
daa
cmp
mov
shl
sbb
jnp
mov
push
dec
adc
push
mov
mov
lods
jae
push
adc
fwait
xor
inc
cmp
stc
and
and
pop
push
es
std
or
(bad)
xor
aam
rcl
and
(bad)
ret
jge
call
ret
mov
adc
mov
xchg
std
out
cdq
cmp
ja
inc
xchg
adc
aaa
cmp
add
sub
jp
dec
mov
retf
int
in
scas
fsubr
push
mov
cmc
add
rol
out
xor
(bad)
fbstp
cmps
mov
ds
add
pop
cmc
daa
add
xchg
and
push
push
imul
dec
xor
push
ins
or
fbld
xor
test
call
es
ficom
mov
push
mov
xchg
inc
xchg
fs
cmp
div
or
sbb
mov
test
fisttp
sbb
xor
je
mov
arpl
sub
sbb
ror
mov
cmc
pop
cs
or
cmps
cmp
cvttps2pi
enter
rcr
dec
ret
movs
jae
test
in
dec
mov
push
aad
in
loop
jae
cmp
jo
fistp
out
dec
jno
add
or
adc
add
mov
aad
dec
xchg
push
cmps
loopne
popf
icebp
sbb
call
inc
fadd
cwde
dec
pop
je
test
inc
movntps
stos
push
push
and
mov
mov
call
clc
lock
adc
sahf
sahf
pop
stc
xor
mov
test
fcom
pop
jns
ins
lea
nop
xor
cmps
outs
repz
out
adc
sbb
dec
stc
imul
mov
push
(bad)
in
ret
adc
mov
pop
mov
and
cmp
wrmsr
hlt
outs
sub
push
mov
test
cdq
pop
dec
fnstsw
pop
fldz
and
scas
mov
or
push
push
inc
add
push
ins
stos
sbb
cmps
jnp
(bad)
mov
loopne
adc
sub
popa
xchg
fcmovnbe
pop
mov
xchg
loopne
push
add
das
pop
int3
cld
jg
sbb
outs
pop
lods
cs
jmp
jbe
xchg
add
inc
cli
aam
add
or
xlat
fnstenv
neg
sbb
fstp
adc
or
popf
mov
sbb
in
pop
jns
mov
push
gs
test
push
adc
jne
or
adc
dec
cs
push
adc
jmp
dec
jno
(bad)
ss
cmps
xor
mov
pop
dec
xchg
test
das
pop
jmp
jo
test
aad
pop
pop
sub
push
scas
adc
xchg
jecxz
mov
test
jns
fdiv
xor
mov
pop
dec
aaa
and
dec
repz
add
adc
(bad)
sub
ins
dec
icebp
cmp
sbb
fstp
inc
add
jns
test
xlat
lea
lods
and
jb
pop
(bad)
lock
add
and
or
cmp
js
test
fnstcw
lds
dec
cmp
mov
ss
fdiv
pop
xchg
jmp
ds
ror
xor
mov
push
ror
xchg
fild
int
ins
test
aas
sbb
outs
stos
or
fmul
cdq
dec
push
push
xor
push
test
cmp
jmp
stos
push
jmp
push
imul
add
iret
repnz
add
cmp
jno
or
push
jne
stos
rcl
(bad)
pop
push
data16
dec
out
repnz
adc
sar
test
iret
rcr
arpl
sub
push
aaa
loope
jle
jge
push
sahf
dec
sbb
aad
(bad)
js
cmc
inc
maskmovq
idiv
icebp
and
lods
cmc
push
mov
dec
dec
retf
sbb
push
or
ret
test
ins
das
jmp
mov
ret
inc
popa
inc
dec
xchg
enter
dec
sbb
adc
fnstsw
test
dec
pop
sbb
pop
mov
(bad)
aad
or
jp
ret
jmp
xchg
cmp
xchg
jb
js
mov
xor
mov
out
add
stc
lahf
(bad)
push
mov
jge
int
jno
mov
outs
popf
sub
leave
xor
inc
movs
mov
sub
push
and
and
pop
or
add
jno
rcl
push
sub
movs
add
stos
stc
cmp
icebp
jae
mov
jecxz
push
and
or
jge
sub
or
cmp
call
idiv
push
jmp
cmp
sub
xchg
push
cmp
iret
or
mov
dec
in
aam
or
adc
pop
pop
cmp
int
(bad)
popa
fdivr
sbb
mov
adc
fbstp
jecxz
popw
dec
jmp
xchg
outs
mov
aam
mov
xor
sbb
in
int3
mov
aas
rcr
and
and
lods
inc
dec
pop
(bad)
daa
cmp
jle
push
test
cmp
fdiv
outs
movs
shl
(bad)
fsubr
sar
(bad)
movs
test
pop
xchg
or
popa
cmp
nop
push
fnstsw
fwait
(bad)
jne
(bad)
mov
pushf
xchg
daa
jmp
cmp
outs
pop
imul
and
xchg
xchg
movs
pusha
daa
inc
iret
lods
sub
das
icebp
movs
out
mov
cmps
sub
and
mov
jne
jmp
stc
mov
test
mov
hlt
jecxz
mov
rcr
imul
test
sbb
mov
jno
add
repnz
cdq
fiadd
(bad)
pop
sbb
leave
pop
das
test
cmp
adc
js
aaa
pop
pushf
in
sbb
inc
jmp
add
(bad)
mov
add
clc
test
push
mov
rcr
dec
dec
xchg
dec
inc
xor
ret
adc
aaa
nop
and
test
add
in
mov
stos
push
inc
jle
std
push
pop
lods
mov
out
cwde
arpl
call
xor
adc
inc
jp
mov
jae
mov
retf
ret
fcom
xlat
es
out
and
mov
cmps
retf
or
inc
sub
(bad)
mov
shr
pop
loop
nop
aaa
ret
push
rcl
retf
rcl
das
into
mov
call
outs
repz
inc
xchg
or
sub
pop
sub
sub
pop
dec
adc
or
sub
fnstenv
mov
xlat
adc
or
pop
push
clc
pop
and
cli
cmps
or
ins
aaa
sbb
mov
sbb
lock
inc
or
iret
fld
jno
adc
adc
push
mov
or
ins
mov
shl
xchg
push
sbb
sub
js
mov
rol
call
loop
lods
sub
aad
scas
or
cmc
ja
in
mov
mov
mov
call
add
leave
or
adc
sub
fst
jecxz
push
int3
add
mov
mov
imul
stc
scas
fnstenv
cwde
jae
jo
push
push
icebp
icebp
ds
sti
mov
push
stos
jno
dec
bound
mov
sub
mov
adc
sbb
iret
sbb
imul
jne
cmp
ss
or
mov
scas
jbe
dec
cmp
inc
sub
stos
ins
jae
icebp
in
mov
sbb
inc
push
sub
scas
out
adc
dec
pop
sahf
fadd
movs
nop
loop
retf
div
push
dec
sub
fild
jno
push
cmps
pop
rol
out
fimul
mov
(bad)
pop
xchg
leave
sti
xchg
pop
rcr
inc
scas
jp
jg
xor
retf
pop
jmp
dec
and
fcomi
ret
popf
retf
sub
mov
cmp
push
out
mov
lds
adc
je
fwait
mov
lds
add
test
stos
leave
lahf
jne
call
fbld
push
cmps
jmp
jg
mov
pop
daa
sbb
enter
shr
push
sub
ret
std
cmp
lock
(bad)
in
popf
xchg
jbe
int
dec
(bad)
xor
mov
repnz
pop
or
movs
mov
leave
push
pop
push
es
pop
fwait
xchg
or
call
pop
repz
mov
push
dec
pop
test
idiv
cmp
add
mov
shl
rol
adc
jne
mov
and
mov
push
push
add
shl
sbb
add
je
jle
xchg
and
adc
jp
xchg
xchg
inc
div
jge
aas
aam
xor
fs
ds
mov
fsubr
sub
xlat
jl
popf
xchg
mov
(bad)
and
(bad)
std
cmp
sub
and
(bad)
push
stc
cmp
mov
in
mov
jnp
mov
enter
add
fcomi
test
dec
adc
jl
movs
xor
jbe
xchg
scas
inc
in
fimul
std
xchg
lahf
jo
popf
lock
push
call
mov
push
out
(bad)
ins
mov
sub
cmp
mov
push
jl
aad
xor
cmp
jp
ss
inc
inc
lods
sub
mov
dec
lea
xchg
push
mov
and
jl
mov
add
pop
outs
les
fld
push
jmp
xchg
test
or
mov
push
sub
lods
adc
lahf
aas
sbb
ret
jno
retf
jmp
adc
cli
movs
mov
test
xchg
mov
mov
jb
xor
or
retf
push
dec
add
inc
sub
fs
mov
xor
inc
xor
dec
mov
mov
cmp
mov
stc
ss
cmp
gs
ins
shl
test
int
cmp
xchg
add
fs
sub
mov
movs
adc
(bad)
je
mov
xchg
jb
int3
push
or
inc
jbe
mov
mov
sub
mov
sar
std
lea
cmp
out
sar
in
xor
aas
out
ins
aad
mov
out
in
jnp
jae
push
mov
pop
and
cmp
scas
and
neg
movs
cmp
and
ja
xchg
mov
and
ds
inc
mov
scas
inc
stos
ror
pop
repz
inc
lea
sub
mov
dec
cli
iret
popf
sub
fcom
adc
inc
test
(bad)
lock
jle
pop
sbb
out
in
xchg
lods
inc
sub
mov
lea
and
stos
test
ror
or
xor
jns
cs
out
aad
cmp
or
and
retf
std
add
pop
xchg
(bad)
pop
jne
inc
into
cdq
stos
xor
pop
test
bound
lock
jae
pop
ret
cld
cmc
mov
imul
push
stc
pop
push
push
xor
pop
push
inc
xor
mov
inc
push
sub
and
sbb
jl
pushf
scas
dec
sub
lea
push
int
cs
push
push
xchg
popf
jo
inc
push
xchg
data16
pop
jp
dec
(bad)
scas
add
mov
call
add
loop
(bad)
sbb
repnz
xor
inc
mov
xchg
inc
jae
outs
icebp
int3
fnstsw
inc
pop
xor
movs
adc
xchg
and
mov
mov
and
pop
adc
pop
inc
int3
pushf
hlt
ret
xchg
loope
push
bound
dec
and
sub
ret
es
fisub
push
sub
jge
je
sbb
loop
jo
jae
or
jmp
mov
std
loope
sbb
data16
xchg
add
push
ja
cmc
pop
nop
in
es
sbb
into
mov
es
push
cmp
pop
adc
nop
fdiv
xor
cmp
into
push
je
pop
dec
scas
add
pop
mov
arpl
aad
ins
push
mov
adc
pusha
ins
shr
fimul
or
fwait
add
ins
cmps
enter
cli
outs
inc
xor
popf
fucomi
sbb
loop
inc
addr16
and
std
popf
loop
nop
arpl
xchg
std
ficom
mov
rcl
mov
out
ja
cmp
jecxz
push
stos
or
mov
shl
dec
xor
push
addr16
sti
jne
mov
pop
xchg
mov
pop
hlt
leave
cmps
push
and
mov
stos
adc
leave
in
adc
int3
push
sar
push
shr
mov
frstor
into
cwde
pop
ret
push
test
in
push
jmp
cmps
sbb
loopne
mov
mov
jl
clc
cmp
mov
sar
out
stc
xchg
je
leave
stos
fdivrp
movs
test
xchg
mov
int3
and
push
sbb
retf
cmps
push
and
push
sbb
ss
mov
pop
inc
shl
mov
inc
stos
cmp
xor
scas
cld
test
fs
shl
nop
scas
or
xchg
fbstp
cmp
jge
sbb
pop
scas
mov
sbb
jl
xchg
vmovaps
adc
jl
push
out
xor
add
aad
stos
loopne
mov
movs
(bad)
shr
ror
ret
retf
jo
mov
ins
cmp
inc
out
adc
inc
loope
jmp
aas
cmp
cmp
test
pop
repz
js
xor
mov
push
rcl
int
jb
(bad)
push
iret
sub
(bad)
fimul
movs
mov
aam
push
xchg
pop
sahf
out
or
mov
add
push
inc
or
stos
rcr
out
cmp
aaa
dec
push
xor
ins
nop
rcr
enter
cmp
ret
sub
mov
xchg
mov
(bad)
sar
jecxz
mov
ds
in
xchg
dec
ss
lock
cs
into
mov
xor
jecxz
ficom
repnz
mov
test
lds
test
pop
pop
leave
xor
adc
movs
and
ret
jnp
sar
push
fwait
sbb
loopne
dec
stos
add
jl
ins
sbb
or
push
ret
xchg
cmp
adc
cmp
bsf
push
(bad)
not
(bad)
sbb
test
inc
fdiv
sbb
test
call
call
add
cmps
call
adc
ins
cli
xchg
sbb
dec
xchg
dec
xor
pop
test
jge
ds
jnp
adc
loope
push
hlt
call
add
add
fild
stos
jl
lock
xor
mov
dec
add
stos
pop
xchg
jg
sbb
int3
jle
mov
push
pop
outs
dec
ins
sbb
add
pop
mov
mov
les
sub
sbb
add
push
aam
ror
arpl
sbb
in
cmc
(bad)
or
test
ss
sub
xor
sub
sub
jbe
and
call
les
mov
dec
das
dec
clc
cmp
das
mov
xchg
test
inc
fmul
arpl
std
pop
sub
inc
add
jnp
or
out
add
out
xor
div
not
stos
and
test
dec
xor
fistp
into
ret
mov
xchg
rol
xchg
inc
adc
in
add
bound
dec
les
add
aam
jo
push
push
jg
pop
hlt
pop
(bad)
dec
jmp
mov
sub
shl
or
sbb
adc
pop
jg
add
aas
(bad)
pop
popa
xor
cmp
or
xor
or
pop
cmp
adc
mov
pop
mov
test
pop
pop
push
rcl
movs
das
mov
xchg
add
enter
movs
shl
fnstsw
rcr
sub
inc
cld
sahf
push
pcmpeqw
sub
fisttp
mov
js
rcl
and
aad
sub
fild
mov
jno
push
mov
aas
(bad)
repz
sbb
cli
lahf
(bad)
scas
ret
(bad)
into
adc
cmp
je
or
pushf
aam
fsub
repz
mov
dec
pop
(bad)
pop
inc
daa
jnp
(bad)
xchg
mov
imul
xor
outs
xor
xchg
aam
int3
push
push
mov
setnp
sub
cmc
scas
add
xchg
sbb
sub
sub
in
das
mov
mov
jle
adc
jmp
fisttp
retf
add
sub
gs
adc
shl
mov
adc
in
pushf
pop
(bad)
pop
push
xor
cwde
adc
stc
jl
psllq
js
test
mov
gs
push
clc
into
sub
pop
mov
out
sbb
stos
jns
icebp
or
push
push
nop
call
nop
es
popf
daa
stos
dec
and
call
ret
xchg
(bad)
dec
outs
and
mov
bound
pusha
outs
or
stc
mov
push
xlat
jmp
xchg
out
jmp
dec
dec
and
xchg
(bad)
jmp
and
int3
xchg
imul
gs
jmp
loop
aad
imul
retf
(bad)
stc
sbb
rol
cmp
mov
out
stos
sbb
sub
clc
out
mov
dec
adc
std
push
jne
test
inc
cmps
xor
sub
cdq
fisttp
inc
mov
aam
add
div
imul
lods
cmps
fnstcw
int3
jae
mov
and
mov
push
inc
add
in
pop
sub
fsubr
test
stos
cwde
mov
or
addr16
(bad)
retf
cs
mov
gs
imul
out
pop
mov
bound
dec
das
outs
loope
clc
retf
mov
clc
cmc
mov
pop
mov
mov
cmp
repz
push
or
ja
mov
pop
bound
icebp
jb
cli
xchg
loopne
sbb
push
daa
(bad)
mov
sub
and
sub
clc
xor
mov
lods
mov
jp
or
fsubr
xchg
sub
mov
pusha
push
pop
mov
fdiv
imul
push
bound
call
mov
in
cmp
aad
jbe
and
mov
ja
aad
mov
dec
add
adc
loope
enter
dec
loope
ficom
xchg
es
pop
dec
or
nop
inc
sub
(bad)
cli
sub
rcl
mov
lods
mov
jne
fnsave
cld
iret
mov
mov
les
nop
(bad)
dec
shl
sahf
(bad)
sub
es
(bad)
mov
xchg
js
xchg
gs
clc
adc
aad
(bad)
pop
pop
or
mov
ja
lods
adc
fcmovb
sub
aaa
mov
xchg
push
mov
icebp
rcr
jp
and
repnz
in
out
(bad)
call
mov
sbb
xor
xchg
or
xor
fcmovu
into
loope
retf
int3
dec
push
dec
out
psrlw
push
mov
pop
mov
fst
and
hlt
pop
stos
ret
cmp
jb
mov
cmc
fldcw
icebp
xor
sub
push
or
xchg
fimul
outs
lods
jp
sbb
out
into
div
mov
push
jne
ja
js
es
inc
ret
and
inc
dec
bound
push
cmp
dec
or
push
repnz
stos
lds
jb
dec
or
add
sbb
sub
daa
sub
mov
clc
imul
int
dec
lea
(bad)
dec
add
push
adc
loope
scas
rcl
mov
(bad)
loopne
and
add
sar
stos
scas
mov
lahf
push
mov
mov
ins
sub
ins
data16
mov
adc
dec
mov
mov
inc
mov
mov
push
xchg
popf
hlt
lods
sub
(bad)
aad
outs
ret
sbb
sub
add
les
xor
mov
mov
inc
iret
js
(bad)
xor
xchg
and
cmp
lock
lea
xchg
fidivr
xchg
pop
sub
add
sbb
call
adc
add
xchg
inc
jle
mov
jge
call
mov
ja
cmp
outs
call
lds
int3
mov
jl
ja
push
ror
cmp
xchg
mov
ret
shl
jmp
comiss
sbb
pop
ss
sbb
adc
shl
xlat
sbb
je
mov
and
cwde
aaa
dec
iret
out
iret
iret
or
mov
(bad)
push
adc
and
leave
add
dec
dec
or
int3
in
popf
fs
mov
add
xor
bound
sbb
test
fldcw
(bad)
(bad)
xchg
add
inc
or
aam
xor
in
jno
imul
mov
stc
test
add
xor
mov
loop
lahf
les
push
mov
jns
not
sub
xchg
clc
ret
ret
mov
mov
cmc
and
mov
(bad)
dec
inc
outs
fist
jecxz
mov
and
pop
pop
add
data16
out
and
push
std
mov
pop
loopne
xor
jle
sbb
test
retf
push
rcl
adc
cli
dec
fsub
pop
adc
or
sub
push
pop
das
or
push
push
pushf
out
sbb
dec
mov
jmp
adc
mov
icebp
cmc
xlat
cdq
addr16
adc
mov
fisub
add
cmp
jle
out
nop
ins
dec
sti
add
push
push
rdtsc
pop
jb
icebp
repz
push
cs
ds
dec
test
das
cmp
div
or
push
push
ds
sbb
and
stos
fimul
inc
loopne
ds
aad
dec
arpl
mov
ins
adc
pusha
div
mov
leave
cli
sar
xor
in
movs
and
add
cmp
adc
fisubr
jno
xchg
pop
int3
xchg
pop
sub
jecxz
push
add
mov
xchg
in
ret
adc
mov
push
ret
lods
dec
ret
pusha
mov
call
sbb
add
pushf
int
iret
gs
cmp
and
std
adc
mov
popa
inc
rcr
sbb
cmp
out
scas
lock
je
push
nop
cmp
inc
in
pushf
adc
fstp
out
push
jne
xor
and
push
jge
cmp
cli
adc
ins
std
add
push
out
test
mov
jmp
or
jecxz
ret
mov
jmp
push
dec
idiv
sbb
out
push
dec
fwait
neg
mov
lea
arpl
sahf
fs
add
pop
mov
sbb
aaa
add
into
add
aas
pop
inc
inc
jp
or
jp
inc
jno
jno
adc
shr
mov
xchg
xchg
mov
jge
adc
adc
pop
bound
movs
pop
push
aas
add
mov
aas
sahf
aad
jge
pop
mov
call
mov
push
aas
adc
xchg
out
inc
dec
push
pop
xchg
(bad)
adc
ss
push
pop
cmp
inc
mov
loop
daa
mov
in
jecxz
add
sahf
inc
shl
sbb
cs
push
mov
lods
dec
xchg
mov
mov
mov
jns
out
or
jmp
adc
shl
hlt
cmp
jmp
dec
jp
int
int
dec
pop
cmp
dec
ror
or
rol
cmps
push
loope
jo
out
pop
in
test
scas
out
mov
push
mov
bound
cdq
push
popa
aaa
mov
cli
les
adc
call
add
out
call
sti
in
(bad)
pop
cdq
out
jnp
lea
clc
lds
(bad)
mov
sahf
pop
inc
push
fcom
add
jns
and
push
fisttp
mov
je
stos
cmc
gs
mov
frstor
mov
rcr
jl
call
jbe
sbb
cmp
cmc
hlt
cld
jmp
out
mov
jl
mov
xchg
dec
mov
add
xchg
mov
pop
ret
push
call
mov
cmps
mov
sar
ret
call
or
ins
loop
cmps
xchg
stos
jns
push
cwde
jae
add
push
xchg
imul
xchg
push
adc
nop
xor
xor
jp
lods
xor
xchg
push
je
ds
pushf
pop
das
cmc
pushf
es
outs
mov
(bad)
sub
repz
mov
lahf
cmp
cmp
mov
sub
cmp
inc
jle
ins
es
int3
add
outs
jb
xor
leave
mov
jge
movs
frndint
fs
sbb
xor
mov
adc
ret
pop
movs
push
ja
push
fsubr
mul
push
ss
mov
and
inc
cwde
inc
pop
aad
stc
stc
jp
mov
cdq
push
js
fld
dec
or
or
jge
xchg
fs
push
fwait
test
mov
ret
and
int
(bad)
shl
xchg
test
sahf
pusha
push
stos
stos
pusha
push
add
shl
pusha
mov
cdq
movs
scas
mov
int
pusha
inc
mov
(bad)
lock
push
int3
inc
mov
fcomp
sub
int3
call
or
jecxz
stos
lahf
mov
inc
lock
fiadd
stos
leave
stos
sub
xchg
int3
dec
sub
inc
and
sub
inc
mov
dec
call
scas
movs
mov
jb
loopne
push
mov
sbb
mov
sbb
mov
cmp
test
push
inc
test
stos
jno
xor
call
jg
ret
jns
add
xchg
pop
daa
retf
cs
pop
data16
aaa
mov
je
cmc
mov
stos
add
scas
cmp
mov
push
mov
mov
xchg
out
pushf
push
mov
mov
dec
jmp
xor
into
imul
inc
or
clc
mov
mov
add
cmp
jno
jne
int3
push
scas
outs
sub
add
int3
xlat
mov
xor
mov
popa
push
imul
std
rol
lock
jno
sti
iret
sub
lods
push
push
gs
sahf
adc
mov
mov
nop
pop
test
add
(bad)
pop
mov
cmp
sbb
cmps
xchg
mov
pop
xchg
jno
sub
or
and
lahf
rcr
outs
ds
dec
call
arpl
inc
std
lea
aam
mov
lahf
fwait
adc
mov
sub
imul
div
aam
jno
push
xor
add
ret
pop
out
xchg
or
adc
or
push
(bad)
fidiv
retf
outs
cs
add
pop
outs
outs
pop
loopne
inc
add
mov
je
xchg
ror
ins
mov
xchg
and
scas
in
push
xchg
mov
mov
sub
ds
pop
(bad)
mov
clc
ds
xlat
add
and
mov
dec
and
ret
dec
jbe
add
xlat
bound
add
(bad)
xchg
sbb
pushf
cmp
adc
push
sub
mov
aad
fcom
lahf
push
sub
je
in
xor
dec
nop
push
jns
cmp
fwait
daa
xor
xor
push
mov
mov
retf
or
mov
sahf
xchg
mov
mov
and
mov
fmul
loopne
scas
out
and
xor
dec
mov
mov
popf
aaa
movs
aas
pop
xchg
pop
xchg
inc
push
pop
sti
sbb
retf
ins
outs
popa
pop
movs
mov
mov
test
cmp
sub
lahf
test
inc
pop
sbb
pusha
pop
inc
pusha
sbb
mov
xchg
sbb
(bad)
rol
pop
loopne
mov
push
shl
fwait
cmp
cmp
call
pop
add
and
and
and
push
retf
fdiv
jne
push
sbb
jnp
and
in
or
mov
mov
add
stos
mov
pop
xlat
jo
mov
cwde
(bad)
(bad)
mov
and
(bad)
lds
test
loope
cli
cdq
xor
(bad)
fst
mov
sub
aas
aas
push
ror
cwde
cmp
push
fild
hlt
les
pop
mov
daa
js
pop
inc
xchg
movs
movs
in
mov
jb
mov
xchg
(bad)
int3
and
loopne
jmp
cmp
into
adc
pop
sub
jg
push
xchg
inc
push
retf
(bad)
retf
sub
sub
jnp
mov
cmps
stos
arpl
dec
aas
fild
xchg
xor
mov
mov
ins
adc
pop
movs
dec
loop
test
out
jp
cmps
retf
dec
xor
xor
pop
pop
or
push
add
fist
pushf
lahf
mov
inc
stos
mov
lahf
cmp
popf
sahf
movs
jmp
pop
leave
ins
repz
ins
inc
mov
mov
shl
xor
jne
xchg
call
inc
inc
test
cmp
xchg
xor
arpl
cli
loop
call
iret
pop
data16
push
arpl
cmp
dec
xor
mov
mov
push
or
adc
sbb
in
adc
in
add
retf
sub
adc
sbb
push
(bad)
fcom
and
sar
js
popa
jg
sbb
hlt
xchg
loopne
mov
in
fisub
xor
push
les
shl
inc
mov
jae
gs
sbb
pop
mov
xor
pop
inc
leave
dec
push
and
push
(bad)
in
iret
cmp
clc
stos
sub
cld
es
cmp
rcl
jecxz
cmc
jmp
jmp
pop
cmp
inc
sbb
add
jge
mov
out
adc
pushf
jns
(bad)
lds
xchg
mov
call
jmp
inc
out
sub
and
sub
and
(bad)
ins
shl
fmul
dec
cli
jecxz
fcomp
mov
push
in
adc
xor
dec
or
mov
out
shl
xchg
ret
xchg
ret
stc
xchg
inc
adc
(bad)
enter
(bad)
jmp
movs
bound
ja
or
mov
fild
lds
test
mov
adc
pusha
xchg
push
mov
jecxz
mov
dec
stos
push
adc
std
dec
scas
not
pop
scas
jae
xlat
outs
sbb
xlat
xor
rol
dec
sbb
ror
movs
jecxz
or
jp
cwde
out
xchg
fisub
and
xor
dec
sub
enter
pop
pop
jae
xchg
call
(bad)
adc
mov
sub
pop
cmp
in
arpl
aaa
mov
mov
in
push
mov
dec
inc
sti
sbb
mov
inc
sub
aaa
sbb
sti
movs
xchg
in
mov
xchg
mov
imul
inc
mov
xor
call
(bad)
push
pushf
les
sti
inc
inc
sub
push
repnz
mov
mov
xchg
into
and
lock
mov
jp
adc
in
jmp
out
cmps
aam
cli
icebp
push
movs
out
dec
adc
icebp
mov
add
daa
ds
das
sahf
in
mov
inc
mov
cmp
mov
pop
(bad)
rcl
sub
xchg
or
xchg
jg
cmp
gs
ret
add
jp
retf
addr16
shl
push
cmp
test
outs
sti
mov
add
call
push
adc
add
repz
ins
pop
test
fs
in
lds
loope
adc
add
cmp
jns
xor
xlat
inc
mov
jb
mov
and
sahf
adc
ror
mov
movs
popf
lods
dec
fist
in
dec
ins
test
mov
jnp
sbb
bound
loop
lods
sbb
adc
addr16
pop
jmp
sbb
out
pop
jl
jmp
inc
ret
in
fmul
retf
icebp
fwait
or
pop
fnstsw
ins
dec
mov
aaa
ficomp
in
xchg
inc
mov
cmpeqps
adc
ins
push
xor
fs
or
fidiv
add
iret
fmul
fisub
into
xor
in
add
movs
adc
push
fnstenv
jmp
and
gs
mov
xchg
dec
xchg
push
inc
les
mov
movs
ficomp
add
js
inc
cmp
into
or
in
cmp
and
sbb
or
pusha
jp
jns
pop
push
push
jmp
je
test
mov
pusha
inc
aaa
jmp
cmp
(bad)
mov
mov
jl
pop
lds
inc
mov
mov
fnstenv
arpl
push
push
add
jl
push
dec
pop
xlat
mov
mov
push
jae
repnz
or
cmp
push
test
and
retf
adc
imul
dec
sub
out
push
inc
dec
inc
add
mov
(bad)
std
dec
fiadd
repz
mov
comiss
(bad)
pop
cmc
sbb
das
xor
adc
test
mov
retf
fmul
sbb
xor
dec
cmp
test
adc
inc
or
inc
sbb
and
addr16
outs
stos
or
or
push
cmp
mov
xchg
dec
xchg
mov
mov
adc
inc
test
inc
mov
sub
mov
mov
cdq
es
push
jl
jno
ficom
fwait
xor
xchg
or
inc
shl
inc
sti
aam
push
mov
movs
pushf
adc
rcr
pop
je
mov
hlt
repnz
icebp
(bad)
push
mov
sbb
pop
test
push
add
add
nop
xchg
in
adc
loope
rol
popf
sar
dec
rcr
jl
retf
and
sub
call
in
jnp
dec
xchg
mov
mov
in
sar
sub
xor
xor
dec
adc
adc
lods
pushf
mov
dec
add
add
jae
retf
stos
xchg
mov
inc
cmp
fstp
outs
mov
pop
inc
outs
fld
jle
cwde
inc
gs
mov
jne
jecxz
jg
mov
cs
cmp
jp
xor
add
push
pop
ss
sti
fild
jecxz
jge
or
fs
pop
in
pop
out
and
nop
xor
pusha
mov
scas
stos
or
push
icebp
loopne
mov
dec
or
xchg
pop
pop
lock
and
sahf
imul
jns
xchg
dec
sbb
cld
out
daa
and
imul
outs
fild
ins
daa
and
fcom
mov
xchg
push
push
and
test
in
inc
mov
xor
and
jg
xor
into
add
bound
mov
jecxz
cwde
jmp
or
mov
xchg
sub
out
jno
mov
jmp
xor
and
fsub
nop
jle
sbb
push
mov
xor
push
emms
mov
leave
(bad)
jmp
cmps
mov
and
jge
mov
(bad)
outs
xchg
sub
(bad)
xchg
inc
inc
aas
push
lahf
and
add
lock
neg
jo
xchg
mov
cmps
iret
jg
adc
dec
jmp
and
adc
push
enter
hlt
je
mov
adc
sbb
inc
add
xchg
xchg
ins
pop
aaa
retf
adc
jge
stc
int3
jo
test
into
fnstenv
add
stos
hlt
or
mov
sub
pop
xor
scas
push
loop
sub
jecxz
ror
rol
in
out
jp
jmp
jnp
imul
ret
mov
pop
or
sub
pop
or
and
das
pop
mov
jmp
into
sbb
and
sbb
pop
mov
bswap
mov
jae
movs
lods
dec
or
mov
mov
mov
(bad)
iret
test
popa
sub
jns
ins
push
int3
je
cmps
push
in
xchg
mov
inc
in
std
sahf
xchg
or
mov
push
pop
stc
int3
mov
loopne
movs
cdq
jmp
adc
inc
lahf
sbb
sbb
xor
aam
out
inc
jb
sti
mov
repnz
in
sbb
nop
call
cmps
(bad)
add
push
add
mov
in
pop
not
push
and
fwait
jnp
sbb
push
ds
addr16
cmp
jp
sub
aaa
mov
lods
pop
push
jp
pop
and
pop
cdq
mov
fs
shl
push
int
scas
or
mov
add
nop
out
pop
ja
push
inc
mov
daa
or
or
inc
cdq
pop
sbb
sbb
test
inc
scas
lea
or
loope
sti
inc
push
scas
xor
outs
cmp
test
mov
jmp
enter
aam
mov
js
sbb
pop
jle
mov
(bad)
xchg
repz
mov
pop
clc
cmp
out
cmp
sbb
rcr
test
push
mov
jns
in
outs
push
ret
stos
cld
ror
fcmovnu
clc
fimul
loopne
sahf
rcr
or
xchg
add
adc
or
sbb
and
sbb
inc
cmp
lds
sahf
retf
imul
or
jb
xor
add
xchg
xor
mov
dec
pop
aam
(bad)
cmps
adc
pop
test
push
daa
xor
xchg
je
mov
sbb
or
cmc
sbb
and
pop
push
jmp
sub
cmp
inc
cwde
xlat
rol
(bad)
jp
or
inc
js
lds
dec
mov
adc
jns
xor
ja
es
sbb
addr16
jne
sbb
lds
sub
inc
pop
jno
jne
lahf
sub
ret
test
(bad)
ins
stos
mov
pop
jl
addr16
fdivp
xchg
iret
sbb
adc
mov
leave
adc
ins
add
jno
mov
push
add
aam
jg
(bad)
out
or
rol
(bad)
push
aaa
mov
mov
iret
inc
test
xor
pop
push
jb
jb
push
inc
les
push
int3
cmps
and
gs
jge
jo
mov
push
imul
popf
sub
aam
mov
lods
sub
add
or
mov
aaa
mov
pop
sub
arpl
pop
in
sub
cmps
mov
cwde
pop
cmp
and
test
popf
add
lea
mov
xlat
cmps
jmp
and
jp
and
xchg
jmp
dec
pop
xchg
mov
dec
jmp
fcmovu
add
adc
aaa
mov
inc
aam
adc
(bad)
mov
out
pop
sti
movs
retf
jbe
xlat
pop
ret
or
inc
aas
call
jl
pop
and
mov
xchg
es
sahf
sbb
and
pop
iret
jl
mov
adc
jmp
fidiv
xlat
lds
or
mov
jae
cmps
lods
pop
lods
mov
sub
pop
sub
pushf
cmc
push
xlat
xchg
inc
invlpg
xchg
jno
cmp
retf
dec
pop
stos
out
add
pop
test
mov
punpcklbw
loope
mov
jne
(bad)
push
pop
shl
push
dec
jae
int3
outs
mov
test
lods
jnp
jg
sbb
push
mov
std
xor
aam
sub
xchg
sub
(bad)
fst
mov
xor
xor
mov
fs
and
cmp
xlat
repz
xchg
ins
push
sub
push
xchg
or
scas
push
retf
cmp
les
sar
or
lods
push
out
int
cld
in
out
loopne
sbb
inc
fbld
add
adc
mov
cmp
bound
or
push
icebp
xor
xor
test
cmp
es
test
lods
shr
cmp
cmps
fucomip
xchg
int
jle
push
mov
cmps
sub
in
in
mov
fs
imul
jne
push
pop
xchg
daa
cwde
dec
cmp
ins
jbe
fcmovnu
daa
int3
inc
jno
popa
es
(bad)
mov
push
adc
sbb
cmp
add
cmp
cmps
inc
loopne
xchg
cmc
stos
adc
mov
add
jge
fucomp
cmp
scas
int
jbe
xchg
int
or
jle
iret
scas
jp
popf
sub
mov
mov
adc
inc
ss
or
(bad)
push
enter
and
(bad)
cmps
lods
mov
ret
retf
sti
retf
inc
cmps
rcr
push
mov
adc
lds
xor
gs
out
inc
sbb
mov
cmps
push
or
pop
jnp
fsubp
jecxz
loop
mov
mov
mov
lfs
(bad)
popa
stos
sbb
sbb
(bad)
cmp
inc
or
pop
pop
jecxz
adc
arpl
inc
nop
push
and
fist
or
and
pushf
push
jge
not
lods
mov
pop
dec
fldcw
int
jb
adc
jmp
mov
or
push
test
dec
add
ins
cmp
sub
(bad)
jge
add
sti
cmp
in
adc
sbb
adc
xor
lea
test
jo
hlt
push
cmp
xchg
sbb
clc
sbb
jno
jns
sbb
mov
aaa
push
inc
into
cmc
lahf
mov
jo
and
movs
ins
cmovae
mov
sub
add
adc
jae
dec
cmp
lds
js
mov
ja
xchg
dec
enter
call
pop
mov
out
lea
div
add
dec
adc
pop
inc
ret
hlt
aaa
dec
call
mov
mov
inc
int3
xor
cdq
cs
fisub
xor
jecxz
xchg
lock
cmp
fcmovnbe
dec
fs
sub
ror
arpl
and
dec
mov
icebp
sub
and
push
push
stos
cdq
mov
hlt
js
pushf
cld
out
push
fmul
stc
mov
call
adc
pop
xchg
fadd
mov
sbb
in
mov
loopne
dec
jne
push
inc
inc
ins
jne
loope
fist
adc
ret
loopne
das
faddp
les
adc
adc
mov
mov
cmp
push
sbb
sbb
cs
xor
sub
lahf
cld
aad
pop
scas
jle
fs
js
mov
and
rol
inc
xor
(bad)
gs
les
and
int3
ficomp
push
sub
xchg
jae
pop
in
mov
mov
mov
pop
arpl
pop
iret
test
mov
jnp
mov
hlt
or
je
cmp
mov
loopne
sbb
mov
mov
pop
add
mov
sub
rcl
pop
dec
inc
aas
int3
test
mov
mov
jo
loope
cli
mov
inc
es
retf
aam
(bad)
pop
lahf
ret
mov
cmp
enter
ficom
mov
xor
imul
add
cmp
xchg
inc
mov
ja
js
adc
pop
ins
lea
jl
ins
sti
stos
and
(bad)
adc
xor
cmc
stos
stc
mov
sbb
ds
loop
sbb
or
xor
sbb
(bad)
jnp
cmp
sbb
sbb
mov
cmp
and
pushf
mov
fsubr
(bad)
ja
sar
fwait
call
inc
inc
jb
daa
pop
imul
retf
sub
ud0
mov
add
repnz
cdq
call
sub
mov
xchg
lods
mov
inc
fld
sub
pop
pop
lods
dec
sub
add
lds
dec
sti
xchg
jae
or
jb
or
nop
in
(bad)
ror
loopne
stc
sbb
clc
adc
jmp
in
jb
mov
test
inc
sbb
xchg
(bad)
sti
pop
std
ss
push
(bad)
pop
pop
and
mov
jmp
jecxz
or
inc
js
aam
jb
test
inc
sbb
or
and
icebp
sbb
pop
arpl
loopne
mov
xchg
in
test
mov
stc
dec
mov
jmp
mov
test
cmp
pop
sbb
jne
out
sahf
cli
adc
mov
nop
aaa
adc
int3
mov
cmp
adc
arpl
jle
xchg
sbb
je
aam
ins
sbb
cmps
aas
nop
inc
retf
xchg
sub
(bad)
pop
idiv
hlt
dec
pop
(bad)
dec
leave
pop
inc
mov
int
into
mov
in
aam
mov
pop
dec
shl
xchg
in
add
and
mov
cmp
mov
std
jecxz
push
callw
mov
je
nop
aas
mov
jg
inc
jne
fstp
aas
loopne
(bad)
mov
ret
mov
pop
stos
sub
sahf
mov
ret
xchg
ret
pop
test
jg
mov
cmps
jne
repz
mov
add
mov
pop
out
popf
fstp
and
push
cwde
bound
sbb
xchg
or
pop
inc
or
push
mov
dec
mov
cmp
xor
imul
(bad)
sub
add
inc
mov
push
xchg
xchg
adc
mov
pop
jno
adc
call
mov
mov
scas
mov
aam
test
jl
popf
fisttp
adc
jno
mov
push
aas
push
push
fwait
mov
or
mov
mov
hlt
into
xchg
mov
sub
js
push
pop
pushf
cmp
repz
fsubr
mov
adc
dec
sub
xchg
push
aaa
xchg
ret
sti
iret
cmc
xchg
cmps
sub
cli
and
(bad)
xlat
shl
jbe
repz
xchg
adc
inc
mov
push
push
ror
fld
test
sti
cmp
pop
fs
(bad)
mov
shr
or
xor
sbb
fldenv
and
cmp
sbb
mov
cmps
pop
lds
out
push
rcl
push
icebp
mov
ins
pop
jmp
inc
ret
dec
or
inc
iret
sbb
sub
clc
in
add
xor
mov
ins
jae
pop
cdq
mov
fdivr
or
repz
repnz
in
and
js
or
add
sub
dec
jl
xchg
sub
dec
xor
lahf
shr
push
pop
sub
sahf
(bad)
dec
pop
aam
inc
xchg
mov
add
test
lods
inc
push
sbb
push
adc
add
xor
retf
sbb
pop
shl
iret
imul
xor
and
xor
mov
or
cmp
adc
ds
dec
inc
jne
jecxz
aaa
jl
sub
imul
push
xchg
push
ja
dec
push
test
js
mul
dec
idiv
lods
std
imul
and
sbb
rol
into
repnz
pop
rol
or
dec
cmp
movs
(bad)
mov
push
push
je
ins
movs
repz
sbb
out
xchg
in
in
xchg
and
rcl
pop
js
pop
cmp
bound
xor
push
out
inc
dec
mov
fdiv
test
inc
clc
pop
repnz
jl
retf
pop
mov
mov
mov
add
pushf
cwde
call
and
loopne
cdq
hlt
jp
dec
ficom
dec
push
jnp
enter
jmp
push
cmp
sub
(bad)
stos
and
mov
dec
mov
std
out
cmp
inc
inc
nop
fisub
inc
xor
bound
ins
dec
jl
test
pop
(bad)
bound
ds
add
jae
sbb
mov
sbb
fisubr
pop
loopne
jmp
lods
aaa
pop
sub
out
push
xor
mov
jo
and
das
ficom
sub
loop
pusha
xor
cdq
stos
bound
adc
out
out
or
push
xchg
or
and
call
push
cmp
sbb
mov
push
cmp
xor
add
int3
imul
pop
outs
mov
xchg
mov
mov
inc
dec
mov
dec
sahf
in
arpl
mov
push
scas
out
call
inc
jge
cwde
stos
fwait
dec
xor
sbb
cdq
(bad)
push
jmp
dec
sub
das
mov
enter
mov
sub
jl
cdq
pushf
div
dec
pop
cmps
es
sbb
sub
mov
mov
and
cmp
jg
retf
pop
out
fst
sub
loopne
cmp
push
add
setns
xchg
cmp
push
in
mov
inc
push
sar
push
mov
sbb
loopne
inc
or
sub
cli
(bad)
adc
repnz
(bad)
cmp
inc
mov
mov
retf
int3
sbb
bound
mov
dec
jmp
xchg
ins
out
add
or
sti
mov
inc
loopne
lahf
mov
gs
in
imul
sbb
ficom
imul
xlat
push
cli
cs
push
cs
bound
cmp
jbe
loopne
push
nop
mov
test
adc
inc
jmp
jge
xchg
or
daa
in
stos
push
add
or
mov
cwde
pop
xchg
outs
imul
cli
shl
test
aam
jb
cdq
dec
xor
lds
call
push
sub
pushf
(bad)
aam
push
dec
lods
pop
sub
call
xchg
(bad)
in
pop
mov
pop
push
pop
add
dec
adc
mov
mov
fild
xchg
mov
and
pop
dec
aam
mov
push
cmp
or
mov
jb
gs
jno
test
les
sti
div
push
push
push
ja
jb
in
xchg
sbb
mov
jmp
pop
je
int
jb
adc
pushf
and
popf
and
sub
js
push
das
add
nop
test
jbe
pop
mov
add
sub
stc
mov
sub
aam
and
sub
pop
retf
push
or
dec
jno
psubsb
xchg
or
popf
out
ret
pop
push
pop
arpl
jmp
mov
jae
push
dec
call
fstp
repnz
dec
test
icebp
add
cli
iret
ss
inc
lods
ins
rcl
imul
out
mov
and
fisttp
fidivr
or
les
or
inc
iret
mov
and
fcomi
mov
mov
add
rcl
cld
scas
in
pushf
mov
adc
sub
sbb
sub
dec
xchg
repz
mov
xchg
sub
std
aad
sub
xor
fidivr
popf
mul
sub
push
test
enter
mov
rcl
test
xchg
lea
sbb
out
mov
scas
cmps
sub
nop
push
mov
pop
mul
add
in
(bad)
je
jae
mov
adc
pusha
js
mov
arpl
mov
mov
not
xor
pop
fstp
mov
and
mov
fnop
add
xchg
fs
jbe
sub
jo
mov
push
lock
inc
add
xchg
retf
inc
sub
xchg
stc
mov
fwait
cmp
mov
out
push
test
adc
xchg
mov
leave
mov
in
xlat
sub
into
xor
pop
sbb
pop
popa
jb
loop
sub
loopne
mov
gs
or
sbb
gs
mov
cmp
sahf
ins
jg
cmp
mov
cmc
(bad)
push
xor
jae
int3
mov
mov
ins
cwde
xor
mov
add
xchg
push
xlat
ds
cmps
dec
out
ins
inc
inc
inc
and
push
inc
sbb
xor
xchg
repz
inc
lahf
loop
dec
imul
sub
les
dec
xor
(bad)
mov
mov
test
jnp
loopne
sbb
adc
bound
movs
add
or
fadd
div
repz
pop
and
xchg
aam
or
xor
fimul
test
shl
mov
xchg
mov
mov
hlt
adc
popf
imul
(bad)
jg
add
addr16
retf
pop
call
jmp
mov
sbb
retf
stc
jl
cmp
cmp
adc
jb
arpl
cdq
lods
je
retf
xchg
xchg
jnp
fs
test
imul
mov
sub
xchg
mov
iret
mov
mov
mov
(bad)
fldenv
pop
movs
xor
adc
cs
fwait
pop
inc
push
push
daa
mov
push
in
push
push
pop
icebp
and
int
pop
cmp
int
adc
xchg
inc
call
into
sar
sbb
cld
cdq
fist
std
jmp
setg
into
xor
mov
inc
or
call
or
rol
ficom
mov
dec
jne
cmps
mov
(bad)
sar
jle
sbb
jo
or
add
inc
pop
aaa
icebp
hlt
mov
into
aaa
adc
mov
ins
das
outs
out
xchg
stos
xchg
xchg
es
sahf
sub
call
xchg
jecxz
add
out
not
repz
cmps
cmps
mov
pop
shl
and
scas
stc
adc
xchg
mov
shl
push
inc
push
cmp
lds
fisttp
push
(bad)
adc
imul
ins
js
mov
dec
jge
cmp
ficomp
int
outs
mov
cmps
lea
addr16
imul
fnsetpm(287
test
sti
dec
in
loop
xor
sub
repnz
jge
cld
jg
(bad)
jo
bound
push
in
pop
push
push
lods
jo
jne
jbe
fadd
xchg
mul
xchg
sbb
retf
push
and
pop
test
aam
rcr
jb
into
nop
dec
outs
dec
mov
retf
jb
(bad)
pop
outs
(bad)
jno
inc
add
fld
xor
pop
or
fsub
imul
push
shl
and
mov
(bad)
pop
pushf
or
jl
gs
cli
sbb
pop
shr
scas
pushf
test
sub
(bad)
or
dec
aaa
icebp
push
xchg
sub
pop
je
mov
push
jecxz
ret
add
xor
test
sar
cmp
retf
test
jns
or
or
cs
push
ror
out
jmp
jecxz
mov
js
xchg
fwait
mov
(bad)
xchg
mov
inc
cmp
mov
push
arpl
mov
pop
mov
rol
rcr
xchg
sbb
repz
aas
push
mov
cmps
mov
das
jmp
loop
xor
mov
xor
cmp
mov
enter
inc
(bad)
lea
(bad)
lahf
rol
sbb
ret
pushf
sbb
sub
sbb
pop
mov
aam
ins
jle
pop
add
jns
into
shl
cmc
fwait
jp
ja
jnp
sub
loop
clc
pushf
enter
mov
push
loopne
ret
ins
push
fiadd
dec
cmp
mov
mov
repz
adc
movs
test
pop
or
enter
stos
js
shr
cmc
pop
call
mov
and
loopne
push
out
icebp
dec
pop
pop
out
jb
data16
inc
mov
push
push
jl
cmc
or
push
mov
mov
jo
mov
fst
mov
or
lds
out
push
outs
mov
repz
mov
add
out
and
jp
movs
jp
lods
retf
scas
test
fild
jecxz
push
xchg
inc
mov
cmp
pop
lea
mov
mov
inc
add
or
aam
pop
(bad)
loop
imul
jle
sbb
fiadd
cmp
daa
aam
in
test
pop
push
pop
movs
iret
jno
das
push
gs
mov
and
pop
pop
lahf
push
fs
stc
arpl
scas
sub
mov
mov
mov
dec
mov
adc
cld
test
and
fisttp
cwde
pop
shl
jmp
sbb
mov
sub
jecxz
pop
arpl
adc
sub
test
shl
test
cmp
mov
xchg
adc
or
rcr
dec
clc
cld
scas
jl
fs
imul
sbb
jge
cmp
enter
js
sbb
pop
test
sbb
mov
out
test
xor
adc
(bad)
mov
mov
or
or
ins
cli
mov
xchg
sub
xor
inc
data16
jbe
mov
loop
out
xchg
add
jb
ror
xor
pop
push
push
mov
mov
xor
aad
repnz
retf
adc
or
shl
xor
dec
in
ret
stos
cmp
mov
or
call
jmp
clc
leave
test
in
into
lods
or
dec
outs
and
icebp
es
cdq
ret
mov
in
mov
add
mov
loope
(bad)
mov
cmp
jmp
test
data16
dec
sub
pop
fstp
enter
fisubr
dec
adc
mov
inc
repnz
fmul
and
xor
pop
test
ret
sbb
mov
gs
bound
(bad)
cmc
in
std
sar
push
test
mov
and
mov
and
popf
repz
and
or
sar
(bad)
jp
imul
jp
dec
loopne
cmp
int
mov
fwait
cdq
cmps
dec
nop
mov
clc
mov
loop
xor
cli
out
out
xchg
ja
mov
aas
xor
push
aas
xchg
xor
xor
repz
xchg
pop
fdivr
daa
and
out
(bad)
xchg
(bad)
mov
fsubr
fisttp
sbb
mov
test
cli
aad
push
sbb
pop
xchg
jns
or
pop
adc
call
sbb
xchg
repnz
xchg
or
and
push
out
push
sub
jg
or
xlat
adc
xor
ins
push
lock
in
jns
cmp
mov
mov
mov
jmp
mov
sahf
clc
adc
scas
ins
iret
xchg
cmc
cmp
ins
ret
xor
rcr
rcl
inc
ins
lods
bound
xlat
adc
mov
sbb
gs
cmps
mov
adc
clc
or
icebp
out
sub
cmp
push
stos
or
and
test
and
shl
sbb
in
call
repz
inc
loope
inc
xlat
or
mov
call
dec
inc
fcomp
or
push
das
mov
add
add
dec
aad
mov
sahf
mov
es
mov
popa
inc
ins
xchg
mov
sbb
int3
movs
call
mov
sub
std
(bad)
clc
push
and
sti
mov
jo
mov
pop
hlt
aam
sbb
pop
xor
les
inc
dec
test
adc
test
cwde
jle
retf
pop
scas
and
or
pop
pop
dec
loope
mov
pop
push
add
mov
daa
je
out
hlt
dec
pushf
outs
dec
xchg
pushw
inc
ss
add
mov
(bad)
jl
or
cli
sbb
push
sub
fstp
(bad)
outs
jecxz
popf
add
ja
in
add
sbb
xor
mov
jnp
les
xor
xchg
jle
xor
pop
aaa
(bad)
in
xor
jnp
cmp
lods
fcomi
sbb
sbb
pop
and
dec
push
ret
cmp
in
mov
stos
sahf
and
cdq
mov
movs
xlat
dec
ror
add
shr
inc
dec
fsub
pop
cwde
add
call
lds
jecxz
pop
add
mov
lds
xor
xchg
jae
jge
les
call
jmp
mov
je
call
dec
or
xor
sub
push
cmp
aam
fld
aas
or
push
or
add
retf
push
add
add
push
nop
sbb
push
fiadd
mov
cmp
mov
dec
adc
cmp
(bad)
or
mov
and
sub
mov
out
mov
outs
arpl
dec
add
sbb
sub
iret
jns
push
xchg
jecxz
pop
xor
aaa
cmp
sub
out
pushf
sbb
dec
cmp
lock
xor
lock
jmp
adc
pop
lods
mov
loop
lods
addr16
enter
sub
hlt
add
add
mov
call
sub
movs
addr16
int
pop
inc
les
cli
cmp
dec
dec
fist
gs
push
push
ins
mov
cmp
sbb
into
std
fsubp
inc
xchg
sbb
sub
(bad)
int3
nop
(bad)
(bad)
repz
mov
mov
loope
jo
in
adc
scas
jo
inc
adc
xchg
nop
cmc
push
push
(bad)
cmps
mov
mov
sahf
jns
dec
icebp
fwait
std
mov
jle
clc
push
ins
fs
ficomp
fist
jbe
outs
(bad)
push
ins
fmul
push
(bad)
and
aam
mov
xor
outs
scas
push
add
(bad)
(bad)
in
jbe
fstp
stc
gs
dec
and
xchg
add
fwait
dec
xchg
lods
xor
jp
fld
jl
std
ins
add
test
or
mov
inc
xor
stos
jmp
inc
adc
push
cmp
adc
cdq
(bad)
je
fild
jb
popf
add
test
jmp
addr16
mov
xor
jnp
mov
add
popa
and
les
icebp
(bad)
add
int3
push
or
mov
ret
(bad)
loop
(bad)
mov
or
fs
hlt
push
add
repz
shr
mov
cli
inc
dec
xor
add
fcom
inc
mov
dec
inc
xor
stos
and
dec
xchg
or
lds
sub
jmp
xchg
fcmovnu
jo
sbb
leave
addr16
xchg
pop
hlt
shr
rcl
cmp
outs
push
call
mov
cmc
sbb
push
stc
clc
bound
jbe
pushf
cmps
sahf
gs
pop
xchg
fidivr
mov
push
or
jns
cwde
rcr
iret
cmps
je
aam
bound
stos
in
push
mov
mov
pop
mov
cli
div
mov
mov
mov
inc
mov
fsub
xchg
mov
repnz
dec
cmc
mov
jl
outs
sahf
push
pop
dec
inc
and
fwait
std
cmp
jo
stos
mov
gs
ins
mov
inc
js
push
pushf
push
add
sbb
sti
xor
int3
hlt
fcmovbe
push
adc
xor
sub
gs
out
jg
mov
and
cld
push
xor
aam
push
mov
ins
cmp
pop
test
call
imul
stos
loop
jne
sbb
xchg
adc
in
or
mov
or
xchg
mov
ficom
js
into
int3
mov
mov
hlt
test
mov
cmp
sbb
shl
ja
out
icebp
loope
cmc
sahf
sub
pop
bound
das
pop
cli
mov
or
das
cwde
(bad)
and
(bad)
js
and
inc
aam
retf
shl
dec
mov
pop
or
pop
and
inc
in
pop
aam
sbb
ja
sub
int
arpl
add
adc
pop
je
mov
mov
jg
xor
add
(bad)
jmp
ss
push
ret
(bad)
xchg
pop
mov
inc
stos
pop
cld
movs
and
and
js
mov
inc
pushf
(bad)
in
cmp
jmp
xchg
fcomp
add
data16
and
add
mov
mov
fisub
or
aam
mov
daa
jae
jg
neg
stos
jbe
pop
xor
inc
pop
ja
les
js
push
call
cmp
ins
pusha
push
imul
xchg
ds
test
and
sub
pop
fmul
and
ret
in
sbb
test
mov
test
adc
daa
enter
jb
test
add
cmc
cs
iret
out
and
add
adc
(bad)
dec
xchg
jmp
movs
adc
pop
cmc
aam
retf
mov
mov
fdiv
cmp
sub
pop
outs
(bad)
test
dec
sbb
sub
inc
aaa
es
xor
popf
daa
xor
shl
xlat
pop
sti
and
(bad)
(bad)
jb
pusha
lods
fs
fst
lea
das
aad
in
lds
mov
test
sub
call
cli
pop
inc
jns
loope
pusha
sbb
mov
mov
arpl
cmp
idiv
push
jne
push
xor
jp
repnz
pusha
dec
mov
scas
pushf
dec
xchg
xchg
outs
sbb
xor
mov
nop
pop
sbb
mov
dec
test
xchg
pop
fadd
dec
fsub
mov
stos
cs
pusha
pop
sbb
jecxz
push
int
xchg
enter
add
fdivr
and
loopne
jg
fcom
inc
hlt
sub
imul
iret
mov
in
mov
ss
repnz
jbe
add
inc
test
dec
(bad)
xchg
push
adc
repz
in
shr
scas
or
cmp
add
fmul
sub
jecxz
popf
and
sub
out
mov
cmp
xor
push
rcr
push
or
sahf
nop
mov
jno
int
xor
add
mov
sbb
cdq
cmp
lea
outs
out
pusha
jmp
xor
out
std
and
mov
jns
fistp
push
inc
(bad)
out
jg
push
sti
mov
or
add
cmp
xchg
inc
lods
jb
jae
mov
adc
jo
mov
das
scas
mov
cmps
(bad)
cld
mov
jo
or
push
ins
movs
xor
lds
rol
and
and
mov
add
lahf
mov
dec
loop
ret
in
aas
rol
movs
jo
mov
test
ror
fidivr
push
cmp
and
fs
or
jp
and
nop
aaa
scas
adc
mov
scas
push
ret
pop
sub
cwde
push
test
or
xchg
test
sar
(bad)
add
neg
test
inc
pop
push
jnp
stos
aam
sbb
sub
add
xchg
push
lods
and
scas
xor
jmp
jbe
inc
pushf
and
push
test
push
xor
pusha
addr16
out
das
test
loop
retf
sub
pushf
adc
sbb
icebp
shr
add
dec
xor
fwait
mov
scas
imul
sub
jecxz
inc
movs
(bad)
mov
push
mov
sbb
fs
ins
sar
int3
dec
and
pop
jl
lods
or
mov
mov
pop
jp
aad
xchg
cdq
add
scas
ins
in
jns
lods
ret
loope
das
adc
mov
push
scas
push
(bad)
ds
lea
xchg
xchg
inc
shl
ss
add
data16
adc
retw
push
or
push
retf
shl
and
pop
sub
cmps
or
sub
out
xchg
mov
sub
test
into
and
sub
psubsb
push
mov
cli
ror
ret
inc
not
inc
inc
shl
push
dec
pop
jmp
ins
mov
or
jg
dec
mov
stos
ss
fstp
fst
pop
(bad)
or
xor
popa
sub
out
ja
mov
push
sub
ins
imul
mov
pop
xlat
imul
jo
ss
sahf
push
cdq
inc
xchg
xchg
adc
xchg
pop
or
aam
pop
cmc
xlat
inc
add
mov
xchg
adc
or
jecxz
in
call
sbb
mov
mov
inc
fld
jno
mov
jmp
fdiv
int3
ds
and
adc
push
(bad)
nop
retf
mov
ret
adc
and
ins
jnp
adc
cmp
mov
xchg
stc
adc
imul
mov
lahf
push
push
xchg
sbb
xor
loope
and
daa
jb
pop
jecxz
das
aaa
popf
shr
cmp
cwde
add
out
push
jp
leave
inc
adc
pop
sbb
xor
and
sub
mov
push
je
push
stos
dec
jbe
pop
popf
lods
and
mov
push
jo
adc
pop
mov
inc
mov
mov
inc
inc
pop
inc
dec
fisttp
push
ret
cmps
dec
xchg
xor
xor
pop
jo
mov
movs
fs
div
cmp
cdq
int
imul
push
lods
inc
mov
mov
mov
dec
or
cmp
fsubr
push
sub
sbb
adc
js
jmp
nop
in
sar
jge
mov
loope
fstp
inc
fdivr
(bad)
xchg
fld
sbb
mov
out
xchg
xor
adc
in
inc
push
pushf
ja
cmp
retf
movs
ins
push
add
push
mov
ret
jo
fiadd
cmp
aam
ret
jecxz
jle
fptan
jmp
push
push
test
js
aad
add
jo
xchg
xor
sub
into
mov
add
add
adc
mov
std
lds
xchg
and
clc
push
fs
jge
inc
ror
fcmove
push
(bad)
or
gs
adc
stc
mov
popa
fild
pop
loop
mov
sbb
fild
pop
movs
or
loopne
je
adc
enter
mov
test
push
cmc
cmp
retf
add
(bad)
pop
cmp
jae
mov
cs
in
sbb
jae
mov
sahf
aas
stos
lea
nop
jno
mov
cmp
out
mov
push
fdiv
pop
sti
icebp
popa
mov
lds
adc
ss
ja
popa
clc
test
(bad)
mov
(bad)
fdivp
xor
jecxz
add
fdivr
push
push
outs
enter
retf
scas
and
sbb
sbb
mov
jmp
pushf
jmp
ins
(bad)
call
daa
jne
add
xchg
dec
mov
shl
lock
mov
lock
inc
test
jae
xchg
sub
ja
test
hlt
jmp
int
movs
daa
out
dec
pop
out
pop
loop
lds
aad
jno
inc
in
stc
scas
xchg
ret
inc
lea
dec
in
dec
out
add
push
es
mov
xor
adc
ins
in
push
push
mov
adc
mov
pop
int3
mov
inc
dec
add
iret
retf
pop
xchg
and
sub
ins
lea
jno
lods
scas
mov
jns
mov
je
jno
cmps
in
test
push
push
dec
xor
add
ins
dec
mov
jmp
dec
js
xchg
pop
xor
mov
xor
movs
pushf
mov
lods
adc
dec
add
jg
sub
(bad)
popf
icebp
aam
retf
pop
xor
sbb
inc
inc
fidiv
ret
mov
jmp
or
jecxz
sbb
mov
es
sub
mov
test
fidivr
pop
pop
sbb
call
push
cmp
je
jecxz
das
lock
nop
pop
outs
xor
sahf
xchg
inc
test
xchg
lea
out
mov
lea
sahf
ss
jmp
in
(bad)
lock
js
test
jl
ins
cmps
cld
mov
add
push
pop
jp
rol
sbb
mov
(bad)
inc
pop
mov
add
dec
and
clc
pop
pushf
call
rcl
fmul
lock
fs
or
cmp
dec
lods
mov
add
push
rol
test
in
jge
outs
dec
(bad)
aad
std
loop
movs
push
mov
dec
jno
dec
and
popf
mov
xor
sub
rcl
retf
fs
(bad)
cld
call
xchg
retf
and
xor
push
inc
stos
xchg
pop
sub
mov
popa
ja
xlat
outs
cmps
mov
daa
cs
add
jecxz
data16
cmp
mov
xchg
jmp
xor
mov
and
mov
adc
movs
hlt
nop
ja
test
pushf
lock
jns
dec
sub
out
cld
and
inc
jle
xchg
push
add
cmp
sbb
in
rol
adc
les
dec
mov
loopne
cmp
jmp
xor
mov
mov
sbb
ss
call
mov
mov
in
adc
repz
sbb
mov
or
jo
mov
mov
ret
jne
jno
neg
jle
dec
test
jne
jmp
push
dec
mov
ss
push
sti
push
mov
mov
and
aad
cmps
inc
pushf
sub
call
xor
(bad)
fld
add
xor
repnz
or
cli
push
jecxz
fdivr
xchg
(bad)
pop
out
mov
sbb
daa
pop
jns
sbb
movs
addr16
and
mov
xor
cmps
and
xor
inc
enter
push
and
or
cwde
aad
mov
outs
test
jmp
(bad)
jbe
sub
push
or
push
scas
jns
or
inc
or
pop
pop
cmps
jl
arpl
aam
gs
inc
add
cmps
inc
xchg
pop
fld
ja
xchg
outs
sbb
hlt
test
dec
cmps
add
stos
cmps
js
push
pop
mov
movs
ret
stc
loop
inc
(bad)
sub
add
adc
retf
nop
shl
out
and
or
push
lock
sbb
outs
push
push
mov
cmps
lea
call
mov
mov
imul
mov
je
fisttp
inc
sbb
jmp
and
add
iret
cmp
pop
sub
pop
imul
mov
stos
inc
fdiv
push
dec
inc
shl
retf
mov
cmp
pop
jnp
pop
aas
daa
sub
mov
pop
cmp
fdiv
out
lahf
call
daa
lods
cmp
inc
push
rcl
cwde
cmp
adc
sub
call
cld
inc
pusha
jmp
addr16
icebp
adc
icebp
aam
mov
xor
dec
mov
test
in
adc
pop
add
pop
hlt
pushf
lods
add
ficom
xor
adc
mov
xchg
mov
push
xlat
adc
js
mov
add
mov
rol
xor
(bad)
out
mov
imul
dec
cld
jnp
ret
mov
(bad)
hlt
aas
stc
pop
xlat
and
pushf
retf
mov
pop
test
jg
or
mov
test
push
fcom
push
sbb
xor
aaa
sub
outs
adc
cwde
test
mov
pop
push
lahf
ud1
cdq
or
clc
push
fimul
push
data16
add
aas
cli
inc
or
call
into
lds
mov
pop
sahf
jbe
pop
ins
iret
jp
in
adc
imul
repnz
ja
sub
into
jnp
push
clc
mov
push
xchg
push
jns
mov
push
inc
jo
fcmovu
in
in
push
lahf
mov
xchg
jl
jge
adc
pusha
movs
xor
imul
call
loope
and
jns
cmp
sbb
mov
test
cwde
or
js
sub
mov
mov
clc
xor
mov
imul
push
and
dec
or
(bad)
lods
addr16
push
loope
cwde
test
imul
scas
mov
mov
or
dec
add
(bad)
cmp
movs
mov
push
push
(bad)
call
mov
push
ss
loopne
cmp
and
pushf
sub
out
adc
inc
pop
jae
add
push
stc
out
push
add
mov
inc
or
lods
idiv
cmp
or
into
cdq
popa
(bad)
sub
dec
and
or
cmp
aas
shl
or
repnz
lahf
ficomp
and
rcl
mov
adc
sub
call
adc
jns
xchg
inc
jo
sub
jb
cmp
(bad)
jmp
mov
mov
or
aaa
(bad)
aam
mov
in
mov
cld
mov
fwait
sub
lods
mov
jne
aam
mov
jns
arpl
sbb
add
mov
repz
iret
mov
mov
inc
into
gs
push
cmc
lahf
(bad)
and
dec
mov
ja
lahf
mul
adc
inc
adc
and
mov
mov
push
mov
pushf
cli
inc
enter
jo
jbe
xchg
ds
ins
(bad)
in
jp
jmp
rol
imul
xor
in
mov
xchg
gs
pop
and
xchg
cmp
add
cmp
mov
stos
pop
sbb
test
jmp
push
xchg
addr16
ja
push
dec
inc
and
xchg
fstp
or
xor
or
pop
add
cs
add
mov
and
xor
lahf
dec
out
(bad)
sbb
mov
into
stc
cdq
dec
leave
jmp
push
and
jb
push
inc
add
cmps
stos
je
fmul
aad
jo
ror
push
and
inc
popf
xlat
mov
or
mov
pop
fidiv
retf
shl
xchg
lock
push
(bad)
mov
and
fsub
adc
adc
sbb
lea
jge
fdivr
or
inc
imul
fimul
jl
mov
inc
mov
ret
(bad)
adc
je
jo
jle
js
fistp
in
das
dec
ja
leave
mov
test
push
or
data16
jg
adc
stos
jne
aas
retf
dec
xchg
scas
sbb
push
and
lahf
lahf
sbb
test
ret
add
int
ja
hlt
das
idiv
mov
push
aas
int
push
ins
pushf
sbb
scas
push
lock
xor
jmp
pop
ja
fbstp
aaa
sub
xor
mov
out
es
int3
xchg
cld
mov
mov
ins
aam
jge
sbb
mov
xor
adc
xor
jnp
movs
inc
pop
or
imul
xchg
scas
inc
jmp
push
pop
pusha
xchg
daa
mov
shl
loopne
mov
rcl
repz
enter
fwait
add
aad
add
lock
sahf
shl
sbb
mov
into
in
mov
jge
add
and
adc
fmul
adc
xor
stc
xsha1
cmps
int3
lahf
hlt
aam
cmp
mov
in
ror
aad
mov
in
dec
hlt
add
mov
fsubr
mov
pop
add
dec
sub
movs
mov
in
sbb
pop
(bad)
pop
and
call
fcomp
xchg
jns
jl
loope
inc
xor
rcl
ds
sub
sbb
or
stos
out
(bad)
lods
push
pop
aam
in
mov
add
inc
retf
cli
mov
(bad)
jnp
jo
sub
jae
in
sti
add
pop
cmp
icebp
inc
ret
leave
cs
jge
movs
das
mov
aad
cmp
call
retf
adc
enter
adc
icebp
lea
push
pusha
or
test
into
sbb
push
xchg
jl
jge
(bad)
nop
mov
cs
(bad)
aad
call
call
je
rcr
pop
add
pushf
cmp
jo
stos
pop
sti
pushf
add
out
add
or
add
(bad)
mov
mov
es
mov
ins
cdq
mov
mov
rcl
je
cmp
aaa
(bad)
aad
clc
pop
stos
add
sbb
mov
dec
retf
out
dec
xor
sub
addr16
ds
xlat
rcr
add
imul
frstor
add
pop
rol
xor
bound
loope
bound
bound
js
cmps
shr
mov
add
jecxz
std
pop
inc
pop
and
jmp
pop
pop
adc
mov
imul
fwait
xor
test
jb
out
std
and
push
sub
scas
dec
scas
mov
jb
lods
mov
das
fsub
mov
lock
sub
jmp
imul
jnp
pop
sub
jbe
scas
inc
mov
(bad)
ins
xchg
ss
push
fcomp
mov
add
enter
inc
sbb
mov
mov
std
fst
addr16
jb
in
mov
dec
sub
jno
sbb
jb
ret
and
and
add
movs
pop
push
mov
scas
pop
rdmsr
jns
jecxz
inc
movs
mov
mov
ds
xchg
add
inc
pop
sub
fcmovne
mov
dec
hlt
lods
inc
jl
movs
mov
dec
addr16
enter
inc
mov
ins
pop
shr
sbb
(bad)
fs
mov
cmp
sbb
cli
cmps
sub
jnp
pop
dec
std
icebp
push
jl
(bad)
mov
mov
push
add
push
mov
mov
(bad)
test
and
je
mov
rol
mov
mov
or
les
test
test
out
les
add
das
jmp
out
push
mov
sub
or
mov
cmp
gs
mov
push
jo
mov
jmp
fidivr
stos
outs
test
int
and
sbb
xchg
mov
adc
inc
mov
or
aas
fld
or
in
fcom
pop
push
fldln2
xor
sub
lea
mov
mov
mov
ret
xchg
pop
push
stos
daa
sub
dec
iret
ror
push
repnz
aam
push
jge
xchg
fmul
fdivr
mov
add
dec
(bad)
jo
jae
stos
mov
(bad)
jecxz
jle
pop
sub
ss
fwait
(bad)
out
shr
or
cld
sbb
xchg
cmp
inc
cmp
xor
and
or
sar
and
pop
adc
pop
add
sbb
iret
pop
xchg
test
cld
movs
push
cld
hlt
iret
sbb
in
pop
fs
inc
jle
sub
test
int3
cld
in
mov
repz
or
or
call
jne
(bad)
and
mul
mov
div
xor
or
std
daa
jb
int3
lds
arpl
xor
mov
add
leave
jnp
xor
cmp
fwait
sbb
pop
and
mov
pop
lds
xchg
push
hlt
outs
jl
(bad)
mov
js
aam
pusha
or
mov
imul
cmp
mov
pop
bound
push
(bad)
(bad)
xor
lock
pop
int
jmp
sbb
pop
and
scas
adc
call
movs
gs
jb
pop
pop
addr16
mov
xchg
(bad)
jmp
or
add
mov
adc
test
shl
fs
lods
xlat
test
jge
add
mov
push
pop
and
shr
mov
fwait
sbb
movs
(bad)
xor
sub
ins
xlat
into
and
adc
and
push
adc
(bad)
dec
neg
dec
cmp
lahf
cmp
pop
popf
loope
cmc
dec
cwde
sbb
mov
mov
push
sbb
xchg
js
sbb
jg
clc
jge
inc
dec
or
outs
dec
mov
(bad)
cmp
add
mov
cmp
cmp
pushf
inc
add
sti
stc
sbb
into
cli
repnz
clc
xor
push
cs
fadd
repz
cmp
shl
xor
(bad)
xchg
lods
mov
jne
test
or
xor
mov
adc
inc
in
push
stos
cld
sbb
and
mov
cdq
mov
xchg
mov
cli
mov
ins
dec
fs
(bad)
mov
cmps
stc
cmps
lea
ret
into
xor
and
jae
cld
jmp
call
(bad)
in
fild
or
mov
test
clc
mov
sub
pop
sbb
pop
inc
nop
fild
adc
push
jmp
cwde
dec
cmp
(bad)
fsub
repz
fld
and
sub
push
mov
adc
or
xor
mov
retf
dec
std
lods
(bad)
cmp
repz
sbb
cdq
stc
out
call
inc
cmc
push
sub
cli
inc
ins
int
pop
push
sub
aad
sub
inc
xchg
arpl
cmps
and
inc
stos
add
ss
push
repnz
ret
pop
pusha
jl
mov
call
test
jmp
pop
loope
mov
out
jg
cvtps2pd
push
in
push
push
xchg
sub
xchg
ret
xchg
out
nop
pop
xor
add
jb
popf
mov
xchg
jb
jne
ss
sahf
in
push
xor
imul
pop
cli
outs
jns
sub
sbb
jecxz
inc
call
jns
mov
sbb
pushw
xchg
outs
dec
sti
(bad)
shl
cmc
shl
rol
lahf
pop
fucom
popf
lea
lds
mov
imul
loope
xor
sub
sbb
loope
imul
and
into
dec
or
movs
pop
cmp
jb
outs
xor
and
outs
in
stos
and
xor
jae
cmp
test
popf
ja
ret
(bad)
test
add
inc
jmp
dec
pushf
(bad)
std
fimul
push
mov
jae
pushf
stos
lock
ds
retf
ds
test
push
nop
pop
xor
sub
cmps
xor
aad
es
xchg
aad
dec
test
mov
in
out
pop
xor
lds
and
sbb
mov
jg
add
(bad)
jmp
cmps
pop
and
mov
or
retf
sti
stc
add
mov
fwait
loope
cmp
in
jl
inc
add
jecxz
mov
fild
mov
imul
iret
jae
out
sbb
and
in
sbb
or
push
aad
sbb
ins
jae
bnd
push
adc
movs
test
(bad)
arpl
mov
sub
sbb
jno
int3
inc
loop
neg
push
cmp
lock
mov
xchg
inc
sub
hlt
jb
add
mov
add
or
inc
mov
imul
push
or
mov
inc
std
ret
mov
mov
pop
data16
dec
out
lds
sbb
jb
pop
mov
mov
dec
mov
ucomiss
adc
loopne
aaa
xchg
add
xor
push
inc
sub
movs
xor
and
and
dec
push
push
jecxz
inc
and
xchg
dec
dec
cmp
pop
lds
sbb
mov
sahf
sbb
pop
dec
(bad)
cmp
adc
add
les
inc
lds
(bad)
out
bound
stos
pop
xchg
and
jecxz
mov
cmp
xchg
je
pop
xor
dec
ds
fiadd
fsubr
dec
ror
arpl
in
fwait
rol
cmc
icebp
and
mov
sub
in
pop
test
cmp
pop
adc
push
(bad)
out
push
pop
sub
jl
adc
jl
in
pop
inc
in
jb
mov
outs
pop
jle
clc
mov
aad
xchg
outs
adc
addr16
sti
push
and
in
mov
or
jne
sti
aad
mov
sbb
xor
or
aas
out
jae
arpl
push
adc
leave
cmp
xor
inc
inc
or
jge
std
and
lds
sub
fs
call
out
xchg
or
jbe
xor
sub
or
(bad)
and
(bad)
sbb
pop
xlat
mov
mov
xchg
xor
push
out
dec
push
mov
in
dec
loopne
cwde
xchg
adc
pop
in
and
jmp
mov
or
and
pop
nop
lahf
mov
mov
adc
mov
mov
test
out
stos
(bad)
lock
fcom
imul
std
pop
pop
sub
inc
cld
adc
sbb
popa
mov
inc
ret
data16
ret
movsx
call
dec
fs
sbb
mov
sbb
mov
retf
test
imul
cs
sahf
lods
inc
xlat
fyl2x
xor
adc
pop
cmp
loop
mov
lds
mov
jo
mov
in
mov
sub
adc
cmc
push
dec
inc
pop
lahf
(bad)
(bad)
jl
mov
pop
mov
test
push
mov
ret
(bad)
mov
xchg
arpl
cld
xchg
rol
mov
adc
dec
call
repnz
adc
dec
test
dec
and
lds
push
jge
pop
fnstenv
jmp
les
jg
xor
ret
add
gs
mov
leave
pusha
out
add
clc
jg
repz
jbe
adc
pop
inc
xor
rcr
add
mov
mov
dec
xchg
out
sub
adc
jmp
addr16
fs
jo
nop
les
jecxz
rsqrtps
cmps
mov
mov
pop
push
int
inc
xchg
rcr
pop
push
sti
cmp
add
out
push
xchg
dec
div
push
mov
pop
xor
mov
dec
fadd
popf
lods
js
push
addr16
mov
mov
bound
xchg
(bad)
scas
jo
mov
dec
sub
cs
adc
pop
pusha
push
dec
add
popa
aas
adc
pop
cmp
ins
pop
xlat
call
mov
js
push
popa
dec
int3
retf
sbb
cmp
test
mov
add
xor
mov
push
xchg
cmps
push
lea
jp
call
in
enter
sti
mov
stos
stc
fnstenv
mov
mov
movs
ss
sub
fwait
lea
and
jns
mov
xor
pop
dec
ror
mov
ja
int
sbb
shl
push
fist
adc
dec
cmp
push
sub
fsubp
fst
and
add
aas
mov
scas
mov
loope
int
imul
mov
loope
aas
ja
loopne
clc
(bad)
fdivr
jp
or
push
push
xchg
(bad)
adc
xor
and
cmp
or
or
mov
mov
inc
into
fwait
test
(bad)
push
stos
push
xchg
xor
sbb
and
ror
pop
lahf
dec
or
inc
fwait
ds
ret
stos
repnz
std
leave
sub
add
mov
fbstp
jmp
into
dec
cmp
xor
xchg
cmps
push
in
stos
adc
(bad)
inc
mov
in
xchg
push
add
jno
out
jmp
ss
push
sti
xchg
adc
mov
lods
mov
sub
ds
jno
test
push
enter
shl
dec
jg
jo
xor
sub
inc
adc
rcl
xor
sbb
pop
or
jnp
pop
cmp
mov
jns
xchg
or
jmp
xchg
cwde
xchg
push
push
popf
push
lods
pusha
sysenter
adc
cdq
in
dec
(bad)
repz
xchg
fcomp
nop
jmp
(bad)
aad
jl
bnd
push
inc
loopne
inc
shl
hlt
xchg
mov
mov
add
dec
in
mov
arpl
sub
loope
enter
stos
hlt
ret
mov
push
mov
sbb
call
loope
mov
xchg
push
scas
stos
fwait
cmp
daa
lea
xor
cs
adc
aam
int
je
gs
mov
es
clc
xor
cwde
lock
mov
xor
(bad)
jmp
sub
int
test
sti
dec
xchg
sub
jmp
out
mov
cmp
adc
push
xchg
ror
push
bound
or
pushf
sahf
popa
int
ror
xor
xchg
push
push
loop
push
inc
dec
rcr
fcmovbe
int
ss
or
dec
(bad)
loope
sahf
inc
es
dec
in
sub
sbb
inc
adc
mov
jnp
adc
into
arpl
adc
(bad)
mov
xor
sub
jecxz
dec
int
push
mov
imul
std
ss
in
gs
jns
gs
rcr
popf
sub
int
jno
xlat
push
xor
gs
xchg
add
shl
and
outs
xchg
stos
mov
add
cmp
mov
add
push
mov
jge
adc
pop
mov
mov
pop
loopne
ss
arpl
and
movs
cmp
push
std
popa
call
xor
adc
sbb
mov
loopne
push
aaa
je
dec
test
ins
scas
out
cmp
or
push
jbe
stc
add
jne
lock
pop
pop
mov
sub
fsubr
sahf
cdq
out
call
iret
push
jne
hlt
adc
xbegin
push
pop
or
xchg
xchg
xor
pop
bound
mov
loop
gs
rcr
xchg
mov
gs
sub
lods
mov
and
inc
pop
push
dec
inc
and
mov
aaa
out
mov
inc
sbb
mov
cmp
mov
adc
jge
inc
aas
aad
mov
rol
and
imul
xlat
sub
aas
(bad)
ins
dec
add
frstor
mov
sub
inc
sub
sbb
scas
shl
das
rcl
ins
mov
mov
sbb
push
sahf
div
mov
sub
mov
mov
test
adc
sar
jbe
and
fsubr
pop
ja
lds
repz
call
sub
sub
push
push
push
rcr
ror
nop
jb
outs
test
sub
stos
push
dec
cmps
xor
int
icebp
xchg
xchg
xchg
fld
cld
jl
or
ds
pop
into
mov
mov
mov
mov
adc
push
shl
test
es
jbe
loope
sub
out
pop
js
pop
pop
push
ret
lea
popa
mov
push
(bad)
lock
cmps
sbb
xchg
xor
and
pop
xlat
imul
ins
sar
mov
push
sahf
push
sbb
and
cmp
lods
pop
nop
cld
scas
jmp
sbb
call
pop
xchg
mov
mov
inc
sub
cld
repz
pop
jns
sar
cs
lahf
mov
ret
xor
fcomp
cmp
mov
dec
cmp
jo
movs
and
call
push
inc
mov
(bad)
pop
push
mov
xor
arpl
inc
or
fstp
xor
fst
mov
mov
sysenter
je
xchg
fisttp
add
adc
fs
jmp
mov
fwait
cld
push
in
mov
jle
push
cdq
add
cmc
fcmove
int
sub
mov
das
jb
stos
push
jle
cmp
push
outs
loop
sar
adc
pop
jle
loopne
mov
mov
gs
or
mov
cmp
pop
outs
sub
push
mov
mov
jne
(bad)
xchg
push
mov
jae
lods
das
pop
mov
out
add
or
arpl
out
push
es
adc
push
stos
ins
loope
jp
pop
outs
test
mov
jp
popa
cld
cmps
test
mov
jb
lock
repnz
loope
arpl
and
jb
jmp
pop
retf
jmp
les
and
mov
and
mov
dec
fiadd
push
fdiv
or
aaa
popa
sub
test
fwait
add
push
pop
sbb
pop
out
push
mov
jno
ret
loopne
repnz
jb
mov
mov
push
sbb
imul
pop
mov
pop
push
popa
fnsave
int3
cmp
fwait
arpl
popf
inc
dec
outs
add
jnp
movs
jmp
(bad)
fnstcw
xchg
test
xor
fld
pop
jmp
pushf
scas
shr
fstp
sub
and
xor
test
call
sbb
jns
leave
das
fild
and
jmp
xchg
mov
xchg
mov
aad
hlt
push
lods
add
fsub
xlat
ret
pop
adc
in
mov
out
mov
sahf
cs
dec
popf
dec
popa
cmp
scas
ror
call
fadd
out
fcmovne
(bad)
dec
imul
xlat
mov
inc
sub
sub
std
jbe
icebp
cmps
cdq
push
outs
out
bound
int3
das
or
or
sub
shr
mov
fdiv
das
repz
mov
adc
and
jnp
out
jns
fcom
push
mov
es
daa
sub
repnz
pop
and
arpl
iret
mov
jne
das
mov
cmp
or
xchg
in
rcl
jmp
mov
or
outs
xchg
scas
push
stc
sahf
and
sbb
pop
pop
shl
pop
out
fs
sbb
aas
test
adc
retf
movd
call
out
xor
cdq
std
loop
pop
push
xor
sbb
xchg
enter
repnz
pop
or
clc
inc
out
jle
jns
(bad)
mov
test
fcomp
test
adc
push
ds
adc
add
mov
cmps
xchg
push
jg
xchg
ficom
inc
sbb
dec
sbb
xor
xchg
sti
in
push
add
pop
and
and
call
fisub
test
fidiv
je
adc
push
fbstp
stos
dec
movs
stc
and
or
aaa
adc
fidivr
jle
rcr
xor
aas
out
push
and
mov
popa
add
cmp
pop
xchg
jle
mov
and
and
imul
push
pop
rol
ret
lds
popa
int
add
(bad)
in
(bad)
test
loopne
pop
inc
(bad)
lods
jo
call
scas
pop
xchg
outs
mov
dec
add
movs
repnz
mov
cmc
jno
js
xor
mov
xor
xor
cli
loopne
leave
inc
es
aam
xor
push
into
call
xchg
out
fcom
fcomp
mov
inc
out
xchg
call
cmp
dec
std
out
icebp
sbb
jns
int
iret
cdq
push
push
adc
add
sbb
lods
out
jne
pop
ret
xchg
in
inc
cmps
or
fbstp
cld
xchg
push
dec
xor
add
add
push
fs
or
xchg
popf
mov
cmp
jns
xchg
not
pushf
push
in
pop
push
hlt
jl
add
adc
and
xchg
inc
out
les
cmp
fist
mov
or
loop
jg
jb
inc
jbe
xor
mov
xor
mov
jl
inc
cmp
fistp
sub
and
dec
add
jns
xchg
xor
nop
cmp
aam
mov
cs
mov
inc
xor
push
je
xor
stos
xor
clc
leave
jo
pop
push
cmps
pop
or
add
in
push
jno
xor
jmp
out
iret
out
and
loop
outs
ret
sbb
pop
jo
outs
pushf
adc
cmp
adc
mov
pop
mov
push
js
xchg
sub
and
retf
std
add
sub
push
arpl
sub
movs
sbb
sub
mov
dec
cmpxchg
test
cmc
jbe
inc
movs
pusha
dec
sub
xlat
push
jecxz
movs
mov
dec
adc
sub
fld
dec
dec
dec
mov
mov
test
out
push
mov
movs
stos
repz
cwde
sbb
ss
sub
loope
movs
shr
sub
cmp
pop
adc
fcom
add
pop
xor
mov
jl
or
je
loop
xor
addr16
jge
add
dec
cli
ins
lods
dec
mov
xchg
fld
jae
add
or
mov
cs
push
inc
and
pop
call
xor
repnz
outs
int3
enter
sub
out
add
je
xchg
sub
push
div
icebp
call
data16
cmp
inc
jnp
sbb
jmp
fistp
out
mov
add
push
sti
sub
mov
mov
outs
fsub
dec
xor
jno
aad
enter
mov
aas
sub
lea
jp
sub
xchg
dec
push
pusha
aaa
es
sub
shr
out
hlt
xchg
imul
repnz
outs
mov
lods
es
fimul
add
fistp
fadd
aad
push
and
leave
ret
ret
je
adc
cmp
adc
push
and
xchg
pop
cld
iret
pop
(bad)
(bad)
cmps
push
mov
lar
loopne
sub
adc
jnp
push
mov
or
or
dec
sub
aad
fbld
sub
add
sub
cmp
mov
push
mov
aaa
xchg
or
repz
jne
add
xor
xchg
jmp
popf
int3
(bad)
mov
in
push
scas
neg
jns
loope
fwait
jge
push
aas
xor
cmp
test
stos
es
jl
add
popf
cmps
push
aaa
(bad)
(bad)
into
test
ds
jg
rcl
leave
mov
popa
and
dec
dec
push
add
mov
pop
nop
adc
xlat
dec
ins
nop
and
cmp
adc
jmp
fisubr
ds
and
xlat
ds
mov
add
ror
cli
popa
pushf
cli
sub
out
cdq
arpl
mov
xor
cld
jmp
cmp
add
xchg
(bad)
mov
clc
mov
mov
inc
dec
clc
out
sbb
es
or
jge
stos
adc
sub
sub
int
push
loope
sbb
into
jnp
or
add
xor
push
mov
mov
shl
mov
push
lds
cs
mov
int
adc
dec
stc
mov
movs
lahf
jl
and
nop
adc
pushf
fld
fiadd
jle
in
mov
lahf
and
(bad)
adc
push
cmp
es
retf
sbb
or
jb
rol
sub
aaa
or
and
cmc
jne
inc
shr
jns
shr
push
mov
mov
xlat
out
mov
push
add
test
shr
cmp
mov
(bad)
or
inc
add
test
xchg
call
xor
cmc
jg
xor
movs
sbb
push
mov
jmp
mov
add
das
sub
cs
and
mov
xchg
mov
cmp
lock
cld
adc
push
ficomp
stc
mov
inc
fild
adc
mov
retf
add
xchg
aaa
sar
jns
cmp
(bad)
cmps
nop
lea
sub
sbb
mov
xor
pop
mov
scas
inc
mov
shl
in
jns
call
jle
aad
test
aaa
in
fistp
stos
arpl
retf
jecxz
stos
add
(bad)
cmp
jns
xor
aad
div
hlt
jecxz
in
xor
push
add
xchg
mov
jge
xchg
in
push
fist
lock
imul
pop
jnp
sahf
cmc
fstp
ja
sub
inc
sar
xchg
mov
pusha
loopne
mov
retf
daa
ins
cmps
or
mov
call
je
arpl
push
pop
push
xor
mov
inc
loope
and
inc
mov
or
xor
mov
outs
push
adc
add
sub
(bad)
cmp
push
cwde
push
imul
popf
jecxz
lods
mov
cmp
mov
or
neg
jno
cmp
or
jne
aas
or
(bad)
(bad)
sahf
or
fwait
(bad)
mov
sub
jg
pop
ins
push
xchg
fild
pextrw
dec
stos
jb
retf
(bad)
out
push
retf
mov
jg
ja
fbld
es
sbb
mov
scas
pop
popa
ins
ret
(bad)
mov
xchg
add
(bad)
mov
cwde
and
xor
mov
stos
mov
mov
jae
add
fiadd
sub
scas
popa
xchg
fild
mov
add
cmp
sub
aam
lods
inc
add
sub
push
les
imul
add
pop
movs
and
xchg
push
mov
xor
inc
cmps
pop
scas
inc
(bad)
shl
xor
mov
popa
cli
adc
sbb
enter
and
mov
mov
retf
push
and
imul
push
leave
in
or
pop
add
imul
(bad)
outs
rcr
scas
nop
add
and
adc
mov
fld
mov
lds
sbb
mov
sti
out
stc
je
mov
aas
call
fdivrp
fnstcw
mov
(bad)
mov
paddsw
and
pop
mov
xchg
mov
pop
pop
dec
pop
jbe
jne
popa
inc
jmp
mov
lock
mov
jne
inc
jl
jecxz
add
out
push
mov
ja
fld
or
push
xchg
mov
std
xor
pop
jne
ret
cmp
pop
push
xor
jmp
xor
js
lds
enter
add
push
out
fdiv
leave
jp
sbb
stc
sbb
xchg
jnp
jnp
mov
mov
out
test
not
cmp
add
jns
ins
jmp
retf
xchg
shr
push
or
cmps
cmp
stos
mov
xchg
pop
in
sbb
mov
jae
mov
rcl
mov
iret
and
xchg
aad
add
repz
leave
stos
push
int
shr
ss
fnsave
inc
mov
gs
jmp
ret
popf
repnz
pusha
xlat
lods
cld
fwait
mov
aas
ret
lods
gs
ds
pusha
xor
mov
mov
inc
shl
lock
cmp
mov
mov
adc
daa
outs
xchg
sbb
fild
sbb
push
aad
popa
sahf
loopne
xchg
dec
jbe
lods
cs
scas
hlt
stos
xchg
inc
rcl
jo
call
je
out
sbb
je
push
cli
out
icebp
push
daa
fnstenv
rol
pop
jmp
push
stos
fdivr
mov
fs
cmp
js
(bad)
cmps
lods
cmc
mov
sub
sbb
retf
arpl
push
add
cmp
mov
dec
and
push
pop
(bad)
test
test
ret
mov
repz
jns
mov
(bad)
cmp
jl
jmp
lods
inc
jbe
stos
mov
mov
mov
or
pop
popa
cmp
jl
xchg
xchg
push
ja
in
or
cmc
sub
leave
cld
cdq
sbb
ds
inc
sbb
jne
lock
adc
xchg
mov
fcom
outs
pop
dec
add
adc
or
ins
mov
popf
out
sar
test
lahf
cld
cmp
add
aad
inc
icebp
mov
ins
mov
call
sub
push
mov
lods
je
dec
sar
adc
inc
fdiv
sbb
push
mov
mov
cmp
loopne
aam
and
bound
jp
pushf
jg
mov
aaa
lods
aad
aad
ins
movs
ds
loop
xor
jge
int3
mov
sbb
(bad)
jns
ds
cdq
cmp
(bad)
mov
mov
ret
ins
mov
ds
repz
sbb
test
cdq
mov
scas
out
aad
push
(bad)
mov
dec
std
jb
mov
dec
adc
cmovbe
cmp
sbb
pop
mov
hlt
xchg
sbb
fcomp
pop
sahf
and
lahf
mov
push
cmps
and
xchg
push
cmp
fldpi
stos
shr
(bad)
mov
into
ja
sbb
xor
cmps
mov
ret
ret
or
dec
jge
out
aam
sbb
or
fsubr
jp
push
popa
dec
jns
call
xor
repnz
icebp
mov
mov
ins
sub
es
imul
pop
arpl
or
mov
push
lock
ins
push
and
pop
repz
and
int3
xchg
jae
ficomp
repnz
pop
fnstcw
ins
lock
cmp
sbb
pop
jmp
stos
mov
sub
adc
cwde
lods
jb
outs
add
cmp
xchg
jno
push
aam
test
push
mov
mov
popa
das
push
fmul
test
retf
imul
scas
vpshaw
mov
rcl
jmp
repz
int3
gs
xchg
ror
jb
mov
stos
jmp
mov
hlt
outs
push
cmp
mov
adc
bound
outs
imul
cmc
std
mov
aaa
push
mov
pop
retf
scas
lock
imul
inc
push
jb
jmp
std
lds
or
sub
popf
sub
repz
(bad)
les
inc
stos
xor
sub
test
dec
xchg
cmp
aad
inc
fwait
push
rcr
in
(bad)
cmp
(bad)
bound
stos
(bad)
jg
mov
(bad)
push
popf
test
cs
aam
repnz
or
push
jl
xor
into
push
xchg
popf
mov
(bad)
xchg
inc
xor
out
retf
(bad)
and
shr
cmp
or
inc
sbb
fstp
xor
inc
xor
enter
(bad)
mov
jnp
push
cmp
inc
mov
ins
cmps
inc
sub
inc
arpl
dec
enter
inc
mov
out
ret
ret
fcomp
xchg
imul
hlt
push
xchg
adc
test
retf
mov
(bad)
mov
jmp
xor
out
dec
popf
xor
(bad)
pop
push
cmc
push
mov
sub
test
xlat
call
jmp
push
adc
or
aad
pushf
cmp
inc
enter
stos
(bad)
(bad)
mov
jne
(bad)
(bad)
out
jp
ins
pop
xchg
jmp
jmp
gs
lds
iret
call
mov
pop
or
mov
sub
aaa
push
push
idiv
sbb
in
sub
mov
xor
loop
mov
push
or
gs
dec
mov
in
iret
in
mov
addr16
outs
out
jmp
pushf
mov
rcr
ficomp
addr16
adc
leave
inc
iret
loopne
adc
test
std
aaa
xchg
or
stos
test
mov
push
outs
adc
pop
pop
jnp
out
inc
push
js
add
ret
mov
aas
stos
fcomp
dec
(bad)
std
repz
shl
xchg
imul
out
std
adc
jl
test
fnstcw
adc
stc
xchg
or
frstor
inc
repz
(bad)
loop
push
inc
pop
jl
arpl
pop
cs
push
ins
dec
loop
rcr
add
xchg
ja
das
retf
enter
dec
inc
and
imul
sub
pop
jg
ret
add
aas
cld
mov
adc
in
loopne
out
shr
out
bound
jecxz
bound
push
dec
das
mov
js
or
inc
shl
div
int3
and
xchg
sbb
xor
ins
fst
data16
addr16
mov
xchg
lahf
mov
or
dec
in
cmps
mov
jmp
xor
lds
imul
mov
jb
stos
sbb
jp
sbb
in
or
vpsrlq
mul
jo
sub
retf
popf
popa
sub
test
mov
fiadd
lock
scas
cli
int3
lea
in
cs
movhps
mov
gs
retf
popf
dec
mov
push
jmp
xor
xor
sbb
push
jmp
imul
cli
and
xchg
out
ja
mov
bound
lods
scas
dec
push
sar
pusha
lods
push
add
or
inc
xchg
or
in
mov
fsubr
xchg
cs
std
js
out
leave
xchg
xchg
ds
pop
mov
popf
jmp
stos
dec
sub
daa
cmp
mov
mov
adc
mov
ret
movs
and
rcl
ss
mov
std
xchg
ret
repz
cmc
dec
jns
pushf
fnstcw
lods
inc
es
movs
idiv
sti
rol
lods
cdq
loopne
push
dec
sar
jbe
sbb
cmp
aas
mov
(bad)
jge
aaa
fs
sti
sbb
inc
sub
add
lock
sub
ds
mov
fild
or
sub
sti
sub
mov
push
cdq
xor
(bad)
pop
dec
cmp
mov
imul
(bad)
stos
div
iret
imul
xchg
leave
cmps
lahf
and
mov
sub
rol
ins
push
mov
stc
fld
inc
pop
fisub
jmp
lahf
mov
std
enter
dec
daa
inc
push
jns
fs
jmp
pop
adc
dec
in
mov
popf
mov
lods
mov
mul
out
pop
les
push
add
(bad)
scas
mov
mov
js
ret
sbb
lea
push
sbb
std
repz
xchg
push
les
push
mov
lods
push
jns
sub
stos
js
mov
or
jecxz
xchg
cmps
ret
not
push
sub
cmps
call
ins
push
jb
add
xchg
push
jno
jmp
enter
mov
rcl
xchg
stc
arpl
mov
cmp
cmp
xchg
xchg
mov
mov
xor
jo
pusha
and
test
fwait
cmp
dec
or
sub
jns
loopne
cmps
(bad)
call
sbb
outs
stc
adc
and
ret
push
popa
add
add
pusha
xlat
fisubr
scas
pushf
adc
fdiv
sar
inc
jp
das
push
ret
mov
out
dec
or
cmp
mov
pop
xchg
(bad)
add
xchg
popf
adc
inc
repnz
enter
cli
(bad)
jnp
mov
stos
hlt
je
sbb
loope
(bad)
test
shl
les
and
shl
stos
out
ret
pop
and
adc
pop
sbb
sti
cmp
jecxz
mov
fnsave
stos
hlt
out
mov
(bad)
ja
outs
sub
imul
xor
jge
mov
call
and
or
movs
bound
popf
loope
stc
pop
loop
icebp
xlat
outs
aas
(bad)
ret
mov
xor
inc
test
xchg
mov
add
pushf
mov
ja
and
cmp
mov
outs
ja
mov
retf
xchg
mov
push
jns
sbb
sbb
add
lahf
mov
sub
ret
scas
inc
pop
imul
mov
push
sub
jge
ret
shr
mov
and
adc
cli
push
ja
jno
inc
ss
sti
sbb
sub
ins
(bad)
stc
mov
mov
push
aas
sub
pusha
mov
vunpcklpd
cmc
sar
(bad)
xchg
ss
mov
ja
movs
dec
pop
(bad)
jp
out
scas
hlt
repz
sbb
push
call
adc
mov
jecxz
into
lahf
add
adc
aas
xor
into
test
jmp
jg
popf
ja
add
pop
cmp
cmp
popa
adc
mov
ds
mov
test
and
mov
loopne
xlat
cmp
push
xchg
mov
or
dec
call
test
icebp
inc
pop
mov
pop
cmp
sbb
dec
push
in
cmps
call
icebp
or
sar
cld
inc
js
xor
jae
mov
lock
jnp
out
pop
in
jbe
push
cmp
loope
ins
xor
(bad)
mov
mov
pushf
retf
or
sub
xchg
sahf
or
dec
in
push
jnp
and
dec
sbb
pop
sub
push
jne
push
jae
cli
mov
cmp
loope
mov
loop
cmp
icebp
mov
ficomp
shl
ins
loopne
pop
mov
inc
test
dec
jl
pop
fmul
jae
adc
jmp
popf
inc
in
xor
scas
push
add
push
imul
(bad)
sbb
scas
outs
jmp
dec
fs
in
dec
push
xchg
push
xchg
lods
and
clc
adc
aam
sar
push
sub
cmp
mov
faddp
xchg
ds
int
xchg
test
outs
adc
popf
push
mov
push
int
inc
jmp
inc
jmp
(bad)
sbb
mov
mov
add
dec
ins
or
js
or
xor
mov
aas
cmps
pop
dec
movs
sbb
leave
ret
mov
lods
add
into
rdtsc
aam
inc
jmp
xchg
xchg
test
cdq
and
mov
add
mov
adc
jne
jne
iret
mov
pop
add
ror
mov
and
jle
in
mov
xchg
daa
fistp
add
inc
push
sub
cmp
pusha
jne
cdq
add
jecxz
add
push
xchg
(bad)
mov
cmp
retf
cmp
jl
scas
jp
xchg
push
ja
or
jmp
push
or
dec
and
jo
repnz
jo
out
aad
xchg
cdq
fnsave
push
inc
repz
test
pop
aam
popw
xchg
rcr
xchg
mov
rcl
add
xlat
out
jecxz
enter
lea
popf
mov
mov
stos
mov
or
add
and
jo
xchg
jb
out
outs
shr
mov
cmp
sti
xor
je
push
hlt
hlt
adc
mov
push
ror
icebp
jno
js
test
lock
(bad)
(bad)
ja
mov
inc
dec
mov
stc
cld
retf
mov
dec
cmps
bound
jo
retf
imul
in
adc
xchg
leave
loop
imul
sub
mov
add
dec
push
mov
popa
push
or
jl
jbe
jnp
ja
xchg
mov
cld
and
jb
add
shl
pop
sub
jg
fld
xchg
shl
add
or
mov
jb
jecxz
sub
xchg
je
dec
hlt
sbb
ja
mov
mov
jne
push
mov
jns
sbb
xchg
rcl
dec
and
mov
es
mov
fwait
mov
mov
cmps
mov
jbe
rol
jmp
(bad)
adc
sub
fnsave
sahf
iret
xchg
xor
xlat
push
mov
mov
(bad)
repz
or
arpl
(bad)
in
fnsave
fcom
sbb
push
dec
push
pop
int
icebp
xchg
mov
or
stc
mov
or
jbe
mov
in
je
out
call
shl
out
or
mov
ret
pop
jo
jnp
sbb
fmul
or
adc
inc
jns
push
std
retf
stc
and
fsub
add
push
arpl
aad
mov
mov
out
xchg
repnz
push
sbb
and
icebp
rol
std
jns
pop
enter
mov
dec
ja
dec
adc
mov
xor
sahf
mov
dec
and
test
imul
inc
and
adc
push
dec
sahf
pop
add
jl
add
imul
out
aam
mov
xor
xor
adc
ret
lea
pop
rcr
dec
out
fstp
adc
and
je
add
dec
enter
or
push
xlat
jle
bound
adc
mov
push
fs
mov
loope
cdq
loop
cs
fwait
iret
stos
sbb
mov
cwde
xchg
and
cmp
fcmovu
xor
pop
(bad)
repnz
push
sbb
mov
das
pop
mov
xchg
xchg
mov
xor
fcomp
inc
mov
sub
jg
jle
cmp
pop
fcmovb
cmp
xor
loope
scas
push
inc
ror
mov
leave
sbb
jp
dec
div
stc
xor
sti
popf
imul
inc
fidivr
xor
xchg
daa
mov
inc
call
stos
push
push
push
clc
aad
fs
push
stos
add
test
bound
and
sbb
ror
rcl
(bad)
fs
jge
mov
repnz
jmp
(bad)
mov
mov
out
xor
jb
sub
(bad)
or
pop
inc
xchg
loop
in
mov
and
jmp
xor
test
jb
xor
ds
je
pop
ds
repz
in
clc
(bad)
mov
mov
cmp
outs
out
inc
add
xor
xchg
inc
(bad)
mov
mov
or
sar
repnz
jecxz
cmp
cmc
xor
push
imul
shl
out
lds
ror
or
xchg
mov
enter
dec
not
mov
xchg
movs
xchg
xlat
rcr
ja
xchg
cmp
xchg
mov
xlat
sbb
xor
sub
sbb
pop
adc
les
sub
in
jnp
jge
xor
ror
sar
stos
es
repz
push
xchg
jl
popa
inc
xchg
mov
xor
adc
jge
test
shl
sbb
jecxz
mov
(bad)
das
push
sub
repz
cld
jl
dec
das
inc
xchg
cmp
and
lods
in
push
dec
xchg
into
ins
jo
lea
aaa
jno
fs
movs
mov
and
test
aad
stc
pop
cli
cmp
fcom
inc
jg
or
pop
popa
jbe
cmp
mov
scas
adc
cwde
sbb
retf
pop
xchg
dec
mov
stos
shl
pop
or
enter
xchg
xor
xor
fist
jecxz
neg
ss
cmps
test
leave
loop
(bad)
mov
ins
test
movhlps
daa
mov
push
test
mov
aam
in
cs
mov
cs
std
pop
popf
mov
lock
pop
jg
xchg
dec
jmp
sbb
(bad)
rcl
and
mov
call
hlt
push
(bad)
aas
(bad)
or
sti
sub
mov
daa
cmp
stc
xchg
std
jmp
jae
jmp
or
lds
sbb
lock
js
dec
(bad)
lea
or
mov
int3
mov
call
(bad)
and
xchg
lock
pop
jbe
push
jns
std
shl
and
and
movs
(bad)
cmps
pop
inc
aas
pop
and
push
dec
cdq
imul
jne
mov
repnz
mov
xchg
sbb
iret
adc
mov
push
xlat
fsubp
(bad)
lods
adc
jno
nop
add
sbb
stos
fldlg2
push
mov
stos
ficomp
gs
xor
xor
dec
outs
out
test
push
mov
test
push
adc
jg
(bad)
std
stos
pusha
mov
push
adc
mov
sbb
cmp
outs
push
cmp
add
mov
fcom
dec
jne
outs
add
jge
fnstcw
lods
dec
fs
fcomp
push
jo
ret
push
pavgb
mov
add
enter
jbe
and
ds
pop
jp
mov
cmp
lock
xchg
ficomp
jns
jb
imul
sar
pop
add
mov
inc
popf
lods
shl
popa
arpl
cmp
sti
les
inc
pop
dec
dec
inc
xchg
clc
in
clc
sub
pop
pop
in
div
scas
in
push
and
retf
sub
push
cmp
xchg
fs
outs
sbb
ins
call
xor
mov
retf
iret
ja
xor
jnp
ror
inc
add
mov
and
loope
and
aas
jg
fist
and
dec
cmp
mov
sub
in
(bad)
test
daa
mov
mov
iret
xor
sbb
movs
stos
mov
mov
clc
cmp
lahf
mov
out
lock
sub
shl
shr
jg
(bad)
sub
loope
push
in
push
lock
push
xchg
and
call
mov
xor
xchg
out
das
into
mov
(bad)
mov
xchg
sti
fmul
aad
inc
mov
ins
pop
fnstsw
xchg
xor
stos
or
daa
ins
jp
pop
popf
push
js
dec
inc
dec
gs
test
inc
movs
out
pop
or
stos
and
dec
ins
ds
(bad)
int
or
(bad)
xchg
mov
fstp
mov
test
ins
xor
mov
xor
and
or
iret
bound
push
std
sahf
pop
loope
fld
mov
je
aam
arpl
dec
dec
shl
or
pop
cmp
or
pop
inc
in
and
data16
fiadd
xchg
push
pop
and
int3
test
cmp
push
inc
dec
popa
xor
jg
jl
addr16
rcl
outs
fmul
mov
movs
iret
dec
inc
popf
inc
push
stc
xor
pop
(bad)
sbb
dec
mov
sub
sub
jecxz
mov
mov
movs
jnp
xchg
jecxz
mov
gs
add
ja
enter
scas
aam
mov
sbb
movs
iret
adc
mov
add
pop
cmp
sub
mov
mov
ins
icebp
or
and
ficomp
mov
loop
push
mov
repz
push
loopne
mov
sbb
add
cwde
outs
retf
ins
dec
push
test
mov
imul
cmps
fstp
sub
out
mov
push
lahf
repz
mov
mov
hlt
cmp
scas
push
fisttp
(bad)
adc
adc
lods
out
shl
mov
shl
xor
sahf
mov
lods
sbb
inc
cmp
(bad)
jmp
adc
es
pop
test
popf
inc
dec
ins
vunpcklps
ror
rol
repnz
stos
call
and
push
cmp
push
add
and
out
in
add
rcr
push
sbb
mov
addr16
test
jns
imul
cld
jb
rcr
mov
fstp
xor
mov
push
inc
cwde
pop
add
sub
fisub
xor
call
lods
pop
data16
inc
cli
xor
fist
add
test
push
mov
lods
add
and
ss
std
push
sub
cmc
es
pop
sbb
lock
inc
aad
ins
add
cs
add
inc
mov
xor
lea
outs
arpl
in
mov
pop
push
enter
cmp
push
js
mov
cmp
leave
dec
xacquire
popf
jge
and
(bad)
mov
mov
sbb
adc
les
retf
add
xor
sub
dec
cmc
repz
stc
test
lahf
mov
adc
ds
inc
or
or
push
loope
sbb
in
fwait
mov
or
enter
mov
and
cld
xor
js
cmc
jb
arpl
jbe
xlat
pop
loope
dec
and
mov
pop
mov
push
loopne
xor
cmp
sti
sub
out
dec
push
cmps
dec
imul
add
sub
push
jmp
enter
xor
sbb
(bad)
aas
sbb
retf
mov
in
lock
mov
repnz
stc
adc
daa
lods
(bad)
dec
ror
ja
stos
movs
sub
daa
push
adc
jge
div
sub
inc
pop
dec
pop
xchg
jbe
pop
sub
xor
repnz
inc
jnp
idiv
loop
push
push
mov
(bad)
xchg
add
fnsave
ret
(bad)
pushf
(bad)
push
(bad)
xor
outs
push
imul
jp
mov
ds
xchg
jp
inc
mov
call
stos
leave
xor
lods
adc
stos
pushf
outs
retf
retf
push
or
leave
mov
jp
mov
in
pop
mov
and
int3
imul
or
and
les
dec
cmc
push
pop
xor
jmp
hlt
mov
jge
mov
inc
cmp
mov
cdq
mov
adc
push
dec
mov
mov
hlt
les
add
arpl
jae
jmp
cmps
leave
jns
jecxz
dec
dec
je
into
pusha
test
and
fstp
std
in
setp
fabs
test
hlt
sub
aad
jge
push
rol
and
(bad)
push
adc
sub
sbb
jb
enter
jle
arpl
dec
ficom
scas
int
ins
call
mov
sar
sar
fist
push
jne
test
push
inc
in
hlt
les
add
xor
in
fstp
stc
loopne
jne
inc
or
dec
xor
jnp
sar
mov
cdq
jmp
inc
mov
cwde
push
out
xchg
das
pop
int
cs
push
jg
cmp
stos
xlat
aas
cdq
gs
sbb
jle
mov
pop
dec
sub
inc
pop
iret
mov
loop
push
adc
jmp
rcl
and
xchg
lods
dec
ja
mov
jmp
loop
out
push
fidiv
sub
jmp
clc
lds
out
mov
mov
movs
cmp
pop
leave
mov
dec
adc
pop
jecxz
push
dec
add
in
jbe
cs
test
push
adc
mov
pushf
pushf
jle
enter
jbe
fwait
dec
out
iret
xor
leave
jge
jge
mov
and
outs
popf
xchg
adc
test
adc
inc
dec
cmp
and
adc
push
cld
mov
push
lods
xchg
cmp
pop
scas
xchg
retf
mov
jno
(bad)
lock
xor
movs
shl
test
push
out
aas
sbb
leave
test
or
sbb
mov
push
pushf
push
sbb
scas
jb
inc
mov
scas
loope
ins
mov
sub
out
xor
sub
lds
jmp
mov
and
test
xor
add
mov
pop
mov
or
out
xor
cmp
jb
out
sti
or
xchg
inc
and
sbb
cli
sbb
stos
gs
xor
pop
daa
ffreep
push
(bad)
and
jb
outs
mul
jno
push
popf
mov
xor
sbb
push
push
inc
ins
in
icebp
sub
fcmove
imul
add
xchg
(bad)
push
mov
sub
aaa
mov
cmp
dec
ins
inc
hlt
cmp
mov
lods
test
ins
push
dec
aam
stc
sub
mov
xor
add
jge
ins
loope
sbb
(bad)
jo
push
fwait
mov
xor
jge
test
mov
ror
in
cwde
ds
cmc
sub
loope
in
enter
jmp
call
sub
push
mov
pop
nop
(bad)
imul
clc
jns
movs
sti
test
stos
xor
mov
out
cmps
inc
(bad)
jo
retf
dec
test
popa
and
inc
mov
cmps
adc
test
cmp
sar
fisub
gs
mov
(bad)
nop
mov
xchg
pop
add
xchg
data16
scas
dec
outs
mov
sti
mov
fist
push
test
cmp
mov
xchg
jmp
jp
add
xchg
scas
add
add
adc
jns
inc
es
retf
rcr
(bad)
adc
dec
rcr
sbb
cld
sar
mov
xor
cli
(bad)
stc
aas
into
add
popf
(bad)
xlat
rcr
fist
in
jecxz
shl
(bad)
push
or
cld
mov
sti
jp
(bad)
and
sbb
daa
test
test
add
sub
xchg
loope
xchg
lds
fadd
(bad)
(bad)
dec
(bad)
popf
add
or
sbb
add
dec
jp
movs
push
cdq
cdq
cmp
push
dec
fs
add
and
xchg
ins
xor
xor
out
stc
repnz
lock
fsubr
nop
pop
mov
mov
int3
in
dec
xchg
fisttp
sahf
pop
iret
or
in
sbb
cmp
jecxz
inc
in
push
or
hlt
fs
push
shr
imul
push
repz
aam
xchg
test
sahf
mov
lock
ds
xchg
arpl
das
div
xlat
in
xchg
push
mov
ins
shl
jae
push
popf
cmp
in
pop
enter
(bad)
dec
xchg
and
or
jne
sbb
or
and
repz
mov
data16
push
mov
jmp
rol
repz
sti
dec
mov
sahf
xchg
push
sub
cmp
cs
(bad)
fidivr
mov
lahf
push
call
sub
push
adc
mov
jg
inc
and
jae
outs
adc
cmp
data16
push
inc
cmp
inc
rcl
and
and
icebp
mov
fimul
pop
lods
push
inc
xor
pop
sbb
add
and
fist
sbb
lds
in
sbb
sub
xor
daa
mov
dec
push
and
push
or
nop
sbb
adc
mov
xrstor
and
inc
cmp
mov
inc
dec
icebp
dec
push
out
jbe
or
jbe
sbb
xchg
jno
test
cdq
xor
repz
jge
mov
mov
ins
dec
jo
mov
mov
mov
fild
dec
sbb
inc
or
shl
test
inc
xchg
jmp
(bad)
sahf
fdivp
leavew
ret
(bad)
loopne
add
mov
dec
jmp
sub
xchg
sub
cli
inc
cmps
das
jns
dec
daa
stos
mov
shl
stos
cmp
jp
push
sub
mov
pop
dec
adc
rcr
xor
lods
inc
or
add
cmp
cmp
enter
push
push
pop
mov
push
stc
call
ss
out
mov
call
adc
ss
out
jle
cld
or
jle
pop
pop
jg
iret
xacquire
jb
sbb
jmp
cmp
ret
xchg
pop
mov
inc
inc
adc
mov
jbe
cli
jbe
xor
jae
adc
dec
cmps
fld
jnp
out
xlat
test
fbld
sbb
and
or
mov
lahf
inc
inc
xor
push
div
cmps
lahf
(bad)
or
fadd
adc
lods
cwde
inc
lock
jno
ds
xchg
dec
cmc
mov
push
imul
lds
popa
pushf
(bad)
jno
test
mov
and
fbstp
inc
fld
sbb
adc
adc
sub
pop
ja
mov
popf
xor
loop
lea
inc
ss
mov
fdiv
rol
enter
imul
dec
xchg
push
mov
jb
pop
daa
sub
mov
aad
ds
mov
mov
out
in
pop
dec
bound
gs
out
aad
std
sti
adc
xlat
jne
aaa
lahf
cmps
and
mov
cwde
dec
jne
clc
std
or
cmp
aad
das
adc
jo
dec
sub
mov
pop
test
jb
sub
mov
mov
mov
imul
cs
retf
cmps
test
xchg
push
ficom
retf
movs
mov
ss
mov
scas
push
(bad)
and
xchg
enter
xchg
jb
cmps
dec
int3
and
xchg
scas
mov
push
xor
pusha
shl
pop
out
adc
adc
ins
xchg
fxch
cmp
add
fmul
dec
test
shr
and
lea
mov
sbb
adc
xchg
cdq
out
fld
add
das
mov
stc
fwait
ins
call
xor
xor
mov
cmp
fucomp
pop
dec
push
dec
xchg
xor
pop
jmp
test
aad
sbb
cwde
fsubr
mov
jl
mov
sar
xchg
pop
mov
pop
push
sub
pop
xor
sti
jge
sar
out
(bad)
mov
push
cmp
pop
sub
jne
lods
or
sbb
dec
arpl
jo
inc
mov
movs
cmc
mov
imul
add
add
jo
jge
loopne
sub
(bad)
push
inc
retf
ds
mov
xor
test
popf
cdq
or
loopne
outs
mov
push
stc
sti
add
dec
push
sbb
push
repz
test
pop
mov
push
(bad)
(bad)
add
frstor
jb
inc
cmp
mov
adc
out
test
movs
pop
jle
fstp
dec
pop
mov
in
sub
jl
mov
ret
add
or
push
mov
sub
test
or
daa
and
popa
push
clc
pushf
sbb
mov
mov
mov
in
jno
mov
sar
scas
jmp
or
test
cmp
pop
(bad)
(bad)
adc
dec
pop
mov
jmp
and
add
arpl
sub
cmp
or
loop
sbb
shl
cli
sbb
popa
scas
dec
or
mov
push
out
mov
push
or
call
adc
ss
and
cmp
dec
out
inc
out
xor
sbb
cmp
and
retf
cwde
lahf
add
or
pop
inc
cdq
ror
je
and
xchg
xchg
ja
cmps
call
jecxz
test
mov
mov
sbb
xchg
lods
and
in
in
pop
sub
fldenv
adc
popf
cmp
mov
cmp
or
aad
popa
test
mov
pop
aam
sbb
ss
(bad)
cmps
cmp
shr
push
shr
dec
sub
push
leave
jb
fmul
(bad)
aad
xor
inc
pop
shl
jae
xchg
mov
sbb
push
mov
jle
je
dec
jmp
sbb
sub
stc
in
popa
dec
or
lds
js
test
into
add
mov
jbe
les
jbe
inc
cmp
test
jecxz
adc
(bad)
iret
cwde
dec
clc
mov
stos
ret
ins
fiadd
lahf
pop
xchg
retf
pushf
jmp
pop
gs
outs
and
jne
dec
leave
call
mov
mov
fimul
mov
cld
dec
loop
sbb
cmp
mov
push
shl
das
add
std
loop
dec
daa
mov
add
cmp
ret
daa
shl
pop
push
push
retf
jno
test
cli
lods
imul
push
test
mov
ret
lahf
rcl
(bad)
mov
sti
outs
push
dec
cld
(bad)
not
xor
sub
addr16
sub
mov
and
out
xchg
pop
jne
fst
int3
ins
and
mov
pop
sbb
bnd
arpl
pop
pop
jg
xchg
push
repz
xchg
cwd
movs
and
(bad)
leave
aas
pop
cmp
cwde
sub
dec
shr
xchg
push
cs
daa
enter
add
and
cmp
push
push
sbb
pop
and
push
push
xor
arpl
gs
ret
ss
push
inc
outs
call
loop
adc
ins
inc
sar
cmc
xchg
mov
xchg
into
ins
jl
fidivr
xor
adc
das
push
sbb
pop
cmp
fucomp
mov
jge
in
sub
push
rcl
xor
imul
fcmovnu
jo
aaa
inc
and
cmps
inc
dec
pushf
sbb
cmp
cld
ins
out
mov
and
fwait
pusha
pop
(bad)
popa
dec
cmc
mov
jge
test
out
xor
fwait
jno
xchg
arpl
dec
shl
(bad)
je
add
xor
aaa
call
sub
add
or
lahf
mov
sbb
jl
sbb
inc
xchg
xor
cmps
clc
in
cmps
icebp
mov
lods
push
mov
ret
repnz
add
out
pop
push
mov
add
sbb
sub
xor
pop
or
mov
lods
lods
push
sti
jecxz
add
inc
retf
push
lahf
xchg
aaa
imul
loopne
cmps
in
add
stos
mov
movs
xchg
pop
xchg
cmc
lahf
push
add
dec
mov
sub
seto
pop
cmc
dec
lahf
sbb
fbstp
cmp
movs
(bad)
push
adc
push
push
push
retf
sti
out
sar
loopne
push
icebp
jle
xchg
movs
sub
cs
leave
lods
cmp
pop
rcl
sbb
test
ins
(bad)
mov
arpl
jle
mov
xor
sub
fwait
push
jnp
push
mov
push
pop
cmp
mov
sub
jno
xchg
add
add
movs
icebp
pop
push
mov
push
jl
sub
or
mov
sub
xchg
xlat
adc
jo
pop
mov
neg
adc
std
mov
pop
addr16
sbb
das
leave
xchg
lahf
pop
push
inc
lods
fsubrp
jmp
dec
mov
sub
fistp
sub
ss
rol
sbb
or
out
xor
and
outs
or
jl
mov
pop
cmc
in
cld
and
add
dec
mov
(bad)
mov
mov
dec
bound
lea
sub
pop
push
loop
and
or
ins
jae
addr16
mov
push
int3
xchg
imul
xchg
idiv
push
jp
inc
pop
sub
xchg
mov
xor
sbb
adc
adc
sbb
pop
cmp
sbb
xor
mov
arpl
xchg
enter
pop
je
call
ret
int3
loopne
xchg
out
mov
int3
xor
jnp
adc
hlt
cmp
mov
ret
cmp
jle
cmp
mov
in
in
cmc
ret
add
or
push
or
outs
push
sbb
gs
cmc
ret
enter
sub
xor
xor
xchg
hlt
(bad)
adc
pop
pop
ror
jmp
std
mov
cmp
pop
push
imul
imul
or
rcr
cmc
(bad)
bound
pop
xchg
jle
stc
(bad)
int3
or
push
repz
js
nop
dec
retf
fcom
out
std
mov
imul
adc
sbb
push
outs
cmp
mov
xchg
jnp
sub
hlt
inc
pop
xchg
cdq
pop
jne
in
les
mov
pushf
popa
daa
push
dec
jns
inc
bound
aad
xchg
fdiv
fimul
inc
mov
xlat
(bad)
adc
out
push
fisub
dec
fsubr
aaa
add
mov
sub
and
inc
add
fld
jno
out
ds
sbb
mov
(bad)
ret
xchg
sbb
in
jns
outs
inc
scas
or
push
xchg
shr
loop
jns
idiv
bound
jo
mov
sub
movnti
mov
push
push
movs
aam
inc
mov
out
(bad)
bts
or
push
jl
pop
jo
cmp
icebp
mov
xor
mov
pop
mov
(bad)
in
ins
(bad)
push
lods
or
hlt
div
in
inc
sub
adc
loopne
pusha
sbb
dec
clc
dec
dec
and
xchg
dec
adc
out
pop
push
ss
add
mov
inc
mov
test
enter
pop
std
mov
leave
pop
jmp
div
imul
xor
sub
pop
inc
push
popf
mov
fidiv
ins
outs
(bad)
int
fcmovne
mov
enter
daa
scas
pop
lods
mov
rcr
inc
xor
shl
mov
jle
pop
(bad)
aaa
dec
fbld
push
or
mov
in
push
sbb
in
inc
sbb
ror
push
std
rcr
xchg
das
call
lods
fcmovnb
xchg
push
and
aas
xor
sbb
movs
pusha
call
fcom
ins
mov
lahf
retf
fdiv
std
push
inc
jmp
leave
popa
xor
xor
jl
or
ss
xlat
shr
jae
cmp
cmc
(bad)
xchg
sub
not
inc
shl
aas
rcr
outs
les
iret
jbe
andps
and
and
jge
mov
sbb
ficomp
inc
fbstp
lods
ret
adc
xchg
ror
lock
es
adc
inc
push
and
stos
or
mov
sbb
sar
pusha
sbb
pop
ds
sub
adc
sahf
gs
and
push
std
jmp
out
repz
bound
dec
sti
jg
nop
arpl
xor
popf
fst
lahf
jne
test
push
mov
ins
sub
fld
pop
pop
mov
add
out
inc
retf
xor
push
icebp
ret
sar
sahf
test
popa
sar
xchg
rcl
sub
lods
adc
add
xchg
or
xor
xor
lock
pop
inc
xchg
outs
mov
jl
ror
jp
nop
push
clc
(bad)
push
adc
cs
xor
cmps
(bad)
pop
xor
jnp
sbb
fs
call
retf
into
mov
adc
outs
mov
mov
loope
lahf
jmp
mov
lahf
rcr
(bad)
or
mov
mov
and
add
adc
adc
or
inc
mov
stc
adc
mov
ret
sti
lods
cli
retf
rol
or
jl
popf
jp
xchg
add
rcr
pop
sbb
push
repnz
xchg
push
aam
jnp
sbb
mov
test
cmp
push
out
stos
stos
mov
sbb
outs
xor
scas
rcr
out
outs
xor
(bad)
in
xor
hlt
mov
jmp
test
in
cli
cmp
sbb
ficomp
scas
mov
(bad)
outs
aam
test
jmp
dec
mov
xor
(bad)
repnz
fdivr
jns
dec
mov
push
and
add
aad
in
xor
push
packssdw
cmp
xlat
mov
mov
and
xlat
out
stos
popf
sub
or
icebp
outs
cmps
adc
stc
mov
fld
xchg
pop
and
rcr
fiadd
clc
jbe
es
push
mov
cld
inc
mov
and
xchg
ja
push
jg
enter
cmp
inc
xchg
out
mov
int3
mov
nop
xchg
add
stos
adc
dec
push
add
cld
mov
jno
into
push
ss
cli
mov
pop
and
jp
sub
sbb
add
shr
sbb
fucom
fwait
jp
mov
in
xor
retf
xchg
rol
fs
call
adc
xor
mov
loop
mov
pusha
mov
call
dec
out
xchg
loope
test
into
dec
xchg
les
fmul
cmp
ret
xchg
enter
mov
mov
jl
jno
ins
inc
cmps
xchg
in
sbb
xor
cmp
mov
mov
or
mov
int3
imul
xor
sub
mov
add
cli
enter
sbb
add
nop
mov
inc
sbb
arpl
xor
in
or
add
inc
ret
ins
pop
aaa
and
aad
arpl
push
pop
mov
xlat
mov
mov
into
push
inc
call
dec
or
push
arpl
push
ror
mov
mov
out
xchg
fsub
and
cmp
xchg
push
and
dec
and
cmp
out
int
not
push
xchg
sbb
call
out
fwait
sti
inc
mov
dec
sbb
retf
pop
jns
or
sub
fwait
stos
or
jmp
sub
sbb
cmp
push
lahf
adc
inc
imul
(bad)
mov
sub
pop
(bad)
cli
mov
cmp
add
dec
pop
xor
and
add
test
adc
jnp
jne
fsubrp
push
inc
pop
xchg
cmp
sbb
sub
add
sbb
pop
and
aad
fisub
add
dec
cs
in
add
out
push
arpl
mov
sbb
mov
dec
call
stos
push
add
sbb
cs
or
cmp
or
adc
cmp
jp
xor
cmp
mov
in
icebp
mov
stos
cmp
retf
repz
xor
sub
add
pop
xchg
inc
out
cmp
mov
or
and
sbb
cmps
pop
xor
adc
call
rcl
int
clc
add
sub
jne
adc
ficomp
inc
mov
jg
fs
imul
jge
out
mov
sub
(bad)
call
mov
aas
cmp
sub
aas
lods
push
loop
jecxz
imul
cmc
arpl
add
dec
adc
mov
xchg
and
mov
xlat
ins
sub
inc
sub
push
push
dec
int3
inc
(bad)
in
seto
in
jno
adc
or
mov
adc
xchg
(bad)
lock
dec
inc
xchg
fbstp
sub
inc
mov
outs
stos
das
inc
jbe
mov
dec
push
xlat
dec
js
sub
cmp
pop
(bad)
mov
jne
imul
cli
ss
xor
ins
mov
sub
ds
pop
scas
ror
push
(bad)
dec
cli
xlat
(bad)
jecxz
pop
push
in
jns
mov
dec
cmp
xor
test
sbb
ins
pop
cmp
leave
add
fwait
aad
jo
inc
cmps
aad
shr
(bad)
push
mov
cmp
or
sub
jp
pop
push
cmp
adc
out
addr16
mov
std
shl
div
js
retf
out
nop
mov
inc
iret
jmp
cld
rcr
cmp
mov
(bad)
xor
test
repnz
mov
and
sbb
outs
outs
rol
imul
dec
dec
sub
pop
(bad)
es
inc
loope
ret
push
jecxz
sbb
gs
iret
gs
mov
shr
jo
mov
pop
and
xchg
div
retf
xchg
in
cmc
and
ror
pop
add
add
xchg
dec
or
pop
inc
loope
out
daa
bnd
retf
pavgb
rol
fcomp
mov
add
pop
add
test
popa
inc
loope
lock
fidivr
fucom
daa
test
dec
ret
or
dec
push
inc
pop
mov
cmp
js
push
jae
or
pop
dec
rol
mov
(bad)
jnp
ins
push
adc
neg
es
fs
and
call
lahf
adc
pop
add
cmp
es
outs
jg
add
add
fmul
aam
sbb
mov
sub
dec
cwde
out
push
lods
xchg
(bad)
jae
mov
sub
sbb
test
out
dec
jno
xor
add
lahf
inc
aad
xchg
mov
mov
mov
push
sub
xchg
mov
inc
pop
push
jbe
(bad)
xchg
popa
cli
mov
mov
imul
sbb
and
sub
movs
in
fidiv
mov
or
gs
jno
sub
icebp
or
(bad)
fs
xchg
loope
aaa
and
shl
(bad)
mov
pop
xchg
adc
dec
ja
or
inc
jg
add
movs
mov
or
test
ret
jmp
leave
stc
es
push
shr
inc
pop
dec
rol
mov
pushf
jmp
loop
mov
mov
loop
jmp
js
out
rcl
ss
scas
jo
adc
jp
stos
xor
mov
cli
sbb
mov
(bad)
bound
pop
nop
loope
cmp
sub
and
sahf
cmps
retf
xchg
cmp
inc
dec
or
ins
and
xor
fbld
arpl
jb
jo
je
push
adc
add
xor
ret
jno
xchg
mov
sahf
jg
mov
in
cmp
sbb
cmp
lea
mov
and
sub
jmp
pushf
in
adc
pop
mov
jnp
(bad)
xchg
jle
mov
sar
cbw
pop
add
cmp
into
dec
inc
test
mov
sub
ins
cmp
xor
mov
jno
and
sub
mov
test
daa
shl
xchg
mov
int
xchg
mov
dec
cwde
mov
in
xor
movs
fnstsw
sub
xchg
add
out
hlt
push
(bad)
and
inc
xlat
dec
pop
fwait
leave
std
xchg
sub
push
mov
enter
cmp
sub
mov
fidivr
xor
scas
(bad)
aas
inc
hlt
sbb
cmp
jle
retf
rol
clc
out
and
push
ret
xor
and
and
adc
pop
loope
lahf
sahf
mov
repz
sbb
xchg
ss
mov
add
loop
mov
push
retf
je
fbstp
cmp
mov
mov
imul
out
(bad)
fdiv
jl
in
inc
pop
es
(bad)
pushf
mov
xlat
lea
outs
dec
fidivr
inc
or
es
mov
mov
pop
movs
dec
mov
dec
adc
fadd
std
(bad)
push
sub
adc
xor
ror
mov
ror
fcmovne
mov
jle
rcr
mov
aas
imul
fisttp
nop
xchg
clc
xchg
test
jmp
dec
mov
out
mov
push
mov
das
lds
push
pop
sbb
sbb
nop
jp
fisubr
sbb
lods
mov
xchg
mov
inc
test
jns
arpl
and
mov
sbb
mov
sub
jge
test
xlat
mov
fistp
dec
daa
xchg
ror
sbb
add
ins
mov
jg
sub
xchg
retf
xor
mov
pop
fwait
stos
test
(bad)
or
adc
jo
mov
mov
cmp
adc
xchg
shl
xor
fs
fwait
cwde
pop
jg
and
arpl
jnp
nop
movs
dec
stos
xchg
push
pop
fst
xor
dec
jg
cmp
push
pusha
pop
cmps
sbb
dec
xchg
pop
dec
xchg
loope
mov
cmp
fdivr
ficomp
sub
lods
adc
cmp
(bad)
mov
cs
push
arpl
fst
dec
adc
xchg
lahf
ficomp
cdq
stos
inc
fwait
pop
dec
aaa
mov
cmps
and
out
inc
mov
sbb
(bad)
(bad)
out
add
cmp
ja
or
hlt
movs
pop
xor
test
mov
push
rol
out
push
sbb
xchg
pop
push
test
and
aad
push
cmp
int3
stos
(bad)
std
jae
mov
repnz
movs
inc
outs
mov
cmp
adc
loopne
xchg
fcom
adc
sahf
sbb
push
dec
into
jbe
cmps
push
cmp
cli
repz
int3
pop
jo
cwde
push
push
cmp
xor
inc
inc
jne
sub
add
das
es
pushf
jp
inc
call
into
jmp
mov
xlat
idiv
jae
xor
dec
xchg
out
aad
shl
sbb
sahf
pop
fnstcw
pop
test
mov
xor
mov
cmp
sub
lahf
jbe
out
clc
les
add
xchg
addr16
cld
int
pushf
mov
les
loopne
scas
aaa
adc
popf
nop
gs
stos
pop
cmc
adc
mov
or
xchg
mov
adc
test
dec
enter
mov
jo
xchg
and
(bad)
pop
xlat
retf
cmp
mov
and
inc
jo
add
call
pop
or
stos
mov
out
push
sbb
jge
and
sbb
jg
pop
add
cli
repnz
fst
xchg
jmp
rcr
mov
xchg
clc
test
xchg
retf
rcr
cdq
mov
pop
push
adc
iret
jl
xchg
add
(bad)
mov
popf
mov
sbb
and
jnp
pop
outs
adc
lahf
stos
ds
and
lea
adc
aaa
les
pop
mov
test
pushf
clc
push
xlat
ins
arpl
push
dec
mov
arpl
xchg
inc
xor
bound
dec
mov
and
int3
in
ret
xor
xor
xchg
add
mov
inc
inc
mov
sbb
and
loop
push
mov
xchg
fisubr
xor
sbb
inc
mov
cmp
sbb
adc
stos
dec
mov
data16
dec
out
adc
pop
call
ret
mov
sbb
and
mov
push
out
or
ins
clc
xchg
jmp
lods
test
xchg
fdivr
icebp
jns
in
or
retf
lea
adc
pop
iret
call
mov
add
jb
mov
out
idiv
pop
cs
loop
push
enter
into
mov
xchg
cmp
jo
jo
push
cmps
xchg
mov
bndldx
or
(bad)
ficomp
lock
ficom
mov
sbb
das
outs
(bad)
scas
mov
jp
shl
into
and
(bad)
mov
push
and
(bad)
push
pop
es
mov
sbb
xchg
loope
sti
push
cli
xchg
pop
bound
loopne
xchg
sbb
sbb
inc
add
mov
xlat
call
inc
leave
cld
call
pop
adc
adc
pop
xor
mov
jae
pop
or
push
pop
mov
jmp
and
sbb
add
jo
jne
mov
test
inc
inc
nop
arpl
push
(bad)
call
cmp
out
es
xchg
push
jmp
fisttp
cli
rol
pop
(bad)
pushf
and
popf
cmc
sbb
jmp
setno
lahf
mov
pop
mov
lahf
push
aam
retf
repnz
hlt
mov
xchg
mov
mov
outs
mov
and
ret
sub
ds
sbb
ds
dec
fwait
pushf
sub
test
lock
lods
(bad)
test
mov
sti
jmp
aas
daa
stos
mov
bound
ds
inc
fnstenv
pop
mov
adc
inc
aaa
pusha
push
xor
(bad)
dec
cmp
in
jge
cmc
mov
leave
xchg
outs
ret
mov
dec
mov
cwde
or
les
pop
xlat
movs
jns
dec
sub
jl
mov
pop
adc
mov
jecxz
jmp
int3
in
or
hlt
out
nop
(bad)
leave
mov
stos
adc
aas
mov
adc
jb
mov
push
cli
int
mov
or
push
test
shl
cmp
loopne
xchg
out
mov
scas
ret
jno
push
aas
rcl
mov
push
sub
enter
xchg
mov
inc
mov
pushf
test
sub
mov
push
cmps
out
jle
push
or
mov
xchg
jle
add
inc
movs
cli
pcmpeqw
mov
push
cmp
mov
es
stos
ret
xor
pop
xlat
jmp
ss
and
adc
mov
jno
and
fld
adc
shl
(bad)
pop
push
ins
xchg
ss
addr16
sub
mov
pop
sbb
lock
xchg
leave
sbb
dec
mov
cmps
mov
pop
dec
jne
movs
je
(bad)
(bad)
aas
cdq
loop
cmps
mov
push
jmp
mov
jmp
xchg
mov
and
stos
(bad)
in
fwait
ins
adc
mov
ins
pop
jg
dec
sub
ss
cdq
pop
bound
and
jae
les
popa
shr
or
(bad)
and
mov
out
scas
in
(bad)
jmp
imul
nop
push
adc
iret
xlat
call
mov
std
(bad)
sbb
push
mov
je
and
mov
jne
movs
jmp
fisub
adc
nop
dec
icebp
mov
sahf
fst
aaa
add
loopne
cs
in
mov
jp
ins
add
test
xlat
mov
or
sub
push
push
cmps
loope
lds
cmp
lahf
(bad)
cli
enter
jmp
movs
jbe
scas
fsub
pop
aam
jge
push
xchg
cli
inc
sub
sub
(bad)
dec
sti
dec
cdq
cmps
cld
fcom
adc
add
sub
xchg
jle
sbb
xchg
xlat
pop
daa
mul
jmp
mov
dec
mov
mov
cmp
fisttp
and
jle
enter
out
scas
(bad)
xor
sbb
js
jnp
cmps
cmc
pop
(bad)
fadd
fld
mov
in
pop
inc
dec
mov
icebp
or
push
not
xor
and
bound
inc
xor
sub
dec
jmp
sbb
sbb
mov
cmp
into
inc
sbb
xor
mov
xor
fmul
lods
popa
in
jbe
dec
and
icebp
outs
jb
mov
push
xor
out
or
sub
jno
add
test
aas
pop
bound
shl
in
out
daa
push
test
aad
push
imul
sub
mov
vpcmpeqw
pop
mov
jp
sub
(bad)
loope
inc
aas
mov
in
push
xor
repnz
xchg
retf
cmc
mov
dec
inc
aas
cmp
cmc
push
xlat
int3
mov
sbb
sbb
in
xor
pop
cs
and
jle
jmp
iret
fisub
cmps
addr16
push
jnp
addr16
mov
repnz
xchg
popa
adc
and
ret
mov
dec
(bad)
jge
das
inc
inc
dec
pop
aad
or
mov
cld
dec
adc
in
jo
or
cmp
int
sub
add
xchg
sti
adc
pop
mov
xchg
push
test
mov
cmp
or
into
leave
xor
aad
inc
adc
push
nop
ins
sub
imul
fmul
inc
fisub
cmps
(bad)
in
add
xchg
mov
jmp
cmp
push
mov
into
test
jle
sbb
in
das
std
ins
in
mov
jp
retf
iret
clc
movs
push
sti
and
jmp
mov
(bad)
ds
retf
imul
push
hlt
xchg
shl
push
loopne
les
push
fcmovne
jmp
xor
aas
aaa
jb
dec
or
lods
inc
cmc
retf
mov
pop
cmps
inc
out
mov
ins
popa
adc
jb
xor
mov
mov
mov
mov
xchg
outs
inc
jmp
mov
xchg
nop
push
pop
push
xlat
fisubr
repz
fstp
sbb
icebp
aad
or
mov
inc
mov
fistp
mov
retf
cli
clc
(bad)
cld
sbb
jnp
pop
pushf
std
add
sbb
xor
jnp
stos
xor
push
test
sahf
dec
outs
cmp
repnz
add
mov
or
fcomp
rol
outs
test
pop
mov
jo
popf
sbb
pop
leave
ss
int3
dec
sbb
sti
movs
clc
cli
mov
jp
icebp
xor
xchg
mov
mov
nop
or
sub
dec
fwait
test
adc
push
addr16
cmp
in
xor
icebp
xchg
je
cwde
cmps
sbb
and
jg
stos
lods
and
repz
sbb
cmc
fisttp
iret
pop
push
mov
enter
aaa
push
sbb
daa
add
leave
and
loopne
mov
sbb
push
jl
push
mov
fisub
jbe
sub
pop
pop
mov
sub
dec
sub
mov
retf
jle
mov
and
aad
in
and
fsubr
and
cmps
fistp
sbb
xchg
jae
out
jl
add
sahf
pop
test
push
mov
cld
dec
imul
pop
or
push
dec
fild
shl
lods
xor
jle
or
xchg
fsubp
(bad)
dec
sbb
add
imul
jo
push
(bad)
fisubr
lods
xor
icebp
jp
fiadd
adc
push
rcl
pop
out
movs
xor
push
xchg
mov
push
jnp
ss
jns
mov
sub
sub
mov
fdivp
push
or
mov
jmp
mov
add
jmp
jo
add
sahf
dec
icebp
xor
xlat
lds
mov
scas
ins
xor
push
sbb
inc
popf
sub
or
ror
fcomip
out
adc
inc
or
call
sub
inc
push
mov
push
icebp
cmp
cmp
jl
outs
dec
daa
imul
pop
pop
out
xor
and
loope
out
stc
ds
adc
jne
or
dec
call
inc
in
fs
out
xchg
jmp
xchg
stos
mov
scas
cs
inc
cs
push
mov
adc
jne
lods
xchg
pop
stos
retf
iret
push
adc
(bad)
stc
mov
xor
loopne
push
mov
ret
and
(bad)
adc
jecxz
addr16
push
mov
mov
mov
jge
imul
jecxz
or
test
stos
nop
and
jge
jnp
jecxz
int
cmp
jb
xor
xor
aas
fdivr
jecxz
jle
inc
daa
cs
push
xchg
mov
pop
cwde
jmp
fist
iret
scas
out
adc
ret
out
cmp
or
(bad)
mov
pop
lods
mov
add
test
ins
pop
inc
jno
push
add
ss
mov
out
das
or
or
leave
(bad)
adc
out
xor
test
fwait
pop
xchg
add
inc
lock
xchg
pusha
pop
sbb
fstp
xchg
mov
xchg
and
mov
mov
les
mov
sub
cld
out
add
lahf
inc
dec
popf
or
pop
fadd
lock
xor
adc
arpl
adc
adc
lods
lds
idiv
xchg
(bad)
adc
push
fidivr
push
dec
mov
out
(bad)
leave
out
jp
icebp
les
fwait
mov
inc
mov
gs
call
ret
ret
cwde
pop
adc
add
int3
adc
shl
(bad)
in
cmp
(bad)
(bad)
out
dec
push
and
into
adc
call
fucomi
cmp
in
push
mov
sbb
in
add
(bad)
adc
xchg
lock
loop
out
rcr
lods
jbe
lods
add
mov
dec
xchg
mov
push
stc
or
sahf
cmp
push
neg
mov
je
lea
scas
bnd
xchg
loop
xchg
shl
clc
sti
pop
ret
sub
or
dec
ins
cmp
sbb
and
or
imul
xor
enter
or
cmp
or
mov
fdivr
fcomp
cmp
daa
fsubr
xor
dec
dec
jne
dec
add
cs
sbb
xor
cld
dec
and
fidivr
pop
and
mov
cmps
inc
stos
xchg
into
aam
jb
bound
or
mov
lds
adc
or
inc
mov
sbb
scas
stos
cmp
shr
shl
mov
nop
adc
jb
xor
xchg
fwait
jmp
fstp
xchg
mov
jl
adc
fisub
jo
pop
(bad)
enter
scas
(bad)
jbe
pushf
or
ja
pop
xor
arpl
out
cmps
lea
mov
add
inc
mov
fnstsw
and
adc
cwde
pop
sar
icebp
and
mov
aad
jl
add
push
aam
fist
inc
je
jge
ins
lods
repnz
js
adc
jns
aam
inc
mov
jmp
movs
adc
adc
cmp
cmps
jnp
mov
popa
(bad)
pop
lds
mov
idiv
test
sti
inc
or
mov
add
sub
retf
js
fadd
ret
out
push
pop
nop
mov
pop
gs
mov
add
sub
inc
dec
jp
pusha
cli
jg
(bad)
inc
add
sbb
daa
sub
sahf
add
cmp
or
rcr
push
inc
cs
inc
sub
dec
jl
sbb
or
dec
adc
gs
repnz
add
xor
add
js
add
push
call
movs
and
push
jns
sbb
sub
fcomip
das
mov
hlt
ret
jno
test
data16
adc
lods
shl
add
mov
sbb
adc
cmp
repnz
adc
jge
les
movs
xor
or
ret
and
xor
adc
push
pop
cmp
push
shr
jnp
shl
xor
out
retf
(bad)
fsubp
cld
mov
sti
pop
inc
adc
xchg
xor
fbstp
test
(bad)
div
pop
xor
aad
popf
das
popa
add
cli
push
cmp
jae
mov
xchg
mov
add
ret
jge
add
and
cwde
xor
dec
aad
fbld
retf
sub
mov
cdq
xor
out
pop
inc
gs
sub
or
scas
mov
fimul
pop
push
push
or
lds
shl
aad
jnp
push
sbb
jmp
push
pop
fsubr
nop
jae
nop
daa
dec
aas
ins
cdq
cpuid
pop
pop
and
scas
mov
mov
(bad)
mov
adc
pop
popf
or
xor
pop
mov
shr
cmps
ret
inc
sbb
popa
aas
push
gs
test
fistp
test
xor
test
and
jnp
popa
mov
aad
xlat
jb
imul
cmps
out
imul
jmp
loopne
and
mov
or
in
movs
add
xor
cmc
mov
xchg
lahf
loop
sar
rol
dec
push
mov
xchg
(bad)
retf
push
xchg
pushf
xchg
sbb
sub
nop
mov
jae
in
jb
test
out
pop
xor
lods
dec
jbe
inc
outs
inc
clc
ret
mov
jmp
jno
mov
retf
mul
add
std
out
push
fisub
loop
fs
cmova
push
call
and
jmp
pop
fisubr
cli
repz
jmp
jmp
scas
call
mov
and
sbb
sub
xchg
sbb
push
fnstenv
pushf
adc
fcmovu
(bad)
mov
into
xchg
lods
adc
dec
fs
pslld
sub
xchg
or
cmp
sbb
into
inc
fst
pop
dec
pop
idiv
out
jmp
ret
add
aas
es
xor
(bad)
test
call
sbb
xchg
jl
adc
jmp
je
pop
ja
in
and
cli
fmul
cwde
sub
cwde
cld
inc
jae
stos
leave
mov
rcr
out
jp
cmp
push
scas
test
sbb
leave
jp
sar
sahf
or
xchg
or
xlat
xor
mov
cmp
mov
out
mov
mov
pop
test
clc
stc
mov
es
jecxz
pop
cli
or
xor
xchg
fsubr
cmp
cmp
mov
imul
dec
adc
jmp
ss
aas
sbb
hlt
popa
mov
and
sub
and
fwait
inc
and
sub
pop
sbb
rcl
movs
movs
(bad)
fcomp
mov
stc
(bad)
bswap
ds
sbb
dec
inc
or
jae
rcr
ins
dec
repnz
sbb
adc
mov
add
mov
js
xchg
lods
outs
call
and
mov
leave
sbb
inc
pop
sub
lock
inc
add
xchg
ret
sti
std
lds
push
loope
inc
pop
ins
lods
xchg
inc
call
mov
scas
data16
or
mov
mov
movs
xchg
or
cmps
push
pusha
inc
cs
jecxz
addr16
sbb
mov
sub
sbb
mov
add
clc
push
mov
pushf
jg
retf
pop
pushf
mov
jo
cmp
out
retw
pop
or
cmp
das
je
fst
xor
pop
push
enter
cli
into
test
pop
or
cld
dec
fcom
push
into
or
(bad)
enter
scas
jp
cmps
pop
cmp
mov
xchg
lods
imul
loope
lahf
dec
add
jns
nop
inc
mov
movq
fld
cmp
adc
imul
xor
dec
fdivr
and
cmp
push
pop
add
inc
pusha
ds
sbb
cmp
fcomp
imul
fwait
push
mov
rcl
test
pop
push
imul
add
push
sbb
jbe
sub
fwait
in
rol
mov
scas
fs
add
pushf
arpl
xchg
fist
lods
jge
cmp
bound
cld
les
(bad)
(bad)
ret
pop
call
dec
push
nop
adc
sbb
cli
popf
jne
pop
in
jl
sub
(bad)
jne
sbb
popa
sar
int3
mov
movs
mov
dec
lods
mov
xor
inc
mov
test
out
sbb
mov
inc
pop
imul
xchg
mov
(bad)
imul
aad
pop
mov
adc
mov
mov
inc
fild
fisubr
pop
inc
push
je
cmpxchg
movs
mov
fbld
sar
movs
inc
sub
sub
push
mov
xor
gs
mov
inc
aam
aaa
dec
gs
jmp
or
pop
push
pop
retf
xchg
push
(bad)
sub
sbb
inc
cmp
mov
pop
inc
mov
rcl
pusha
(bad)
or
jbe
addr16
stos
loopne
push
pop
push
(bad)
fldcw
test
inc
in
mov
adc
imul
fidiv
je
sbb
lods
sbb
xchg
xchg
(bad)
mov
into
push
pop
mov
lock
jo
shl
or
leave
adc
cmps
fdivr
nop
ss
imul
movsx
rep
fcmovbe
popa
lds
or
in
into
ror
push
push
aas
nop
or
mov
popa
shl
inc
sbb
jo
xor
lods
std
mov
and
(bad)
data16
icebp
adc
test
fstp
popa
lea
popf
js
sbb
enter
xchg
sahf
adc
sbb
mov
hlt
fwait
lods
rcl
retf
add
push
push
aaa
rol
scas
mov
out
dec
mov
add
add
pop
arpl
mov
mov
xor
icebp
sahf
or
or
dec
shr
fsubr
fsubr
sbb
dec
jecxz
repnz
xor
inc
dec
xchg
cs
adc
nop
add
xchg
adc
cmp
leave
test
dec
cmp
pop
lock
or
lods
push
add
adc
and
and
pop
inc
and
pop
ret
fwait
std
lock
stos
repnz
sub
inc
scas
mov
sti
lods
mov
and
or
cmp
fs
pop
xchg
adc
nop
scas
push
dec
je
pop
psrlq
(bad)
jns
stc
repnz
mov
sbb
xlat
and
out
pop
(bad)
jecxz
jo
iret
and
stos
sub
xor
div
jg
add
or
loope
sub
pop
add
cli
add
push
cmps
call
xor
jg
int
inc
not
mov
jmp
or
loope
xor
sti
xor
jnp
adc
(bad)
stc
sub
aas
and
push
in
in
mov
mov
out
sub
pop
fist
fild
daa
adc
verr
mov
ins
repz
jne
push
sbb
xchg
and
cmp
xchg
push
adc
jmp
pop
cmp
lock
dec
mov
int
and
das
xchg
mov
outs
dec
outs
idiv
lds
and
push
cmc
mov
sub
sti
mov
sbb
ret
fsub
fdivr
mov
push
ins
cld
dec
sbb
jl
adc
inc
and
inc
cmp
lahf
pop
cmp
pop
and
or
mov
aad
cld
pop
inc
clc
sub
sbb
xchg
dec
out
fild
mov
in
mov
pusha
or
dec
push
and
xor
fst
popf
popa
(bad)
pop
retf
push
out
enter
ins
sub
(bad)
mov
mov
cmps
jbe
push
shl
out
aaa
mov
adc
mov
dec
cli
test
not
pop
shl
jmp
or
mov
xor
pop
mov
fimul
push
push
cmp
or
xchg
mul
outs
icebp
or
jle
mov
mov
stos
ficomp
inc
js
call
cmps
fwait
or
inc
lock
inc
sub
lods
add
nop
dec
jmp
pop
or
loope
stos
out
mov
mov
jnp
hlt
dec
sub
cli
out
mov
dec
dec
cmp
repz
mov
lods
lds
call
xchg
jle
fdivr
sub
mov
je
stos
add
js
inc
push
xor
mov
and
arpl
movs
push
push
fsub
xchg
out
xor
sbb
call
test
xor
fwait
xor
cdq
lods
fsub
ds
leave
mov
inc
jge
leave
push
cmc
xchg
sbb
cmc
rcl
mov
outs
xor
stos
daa
mov
cmp
stos
cli
xchg
mov
ffree
(bad)
push
enter
cmp
and
mov
and
inc
mov
in
lea
jge
fcomp
fnsave
sub
pushf
outs
icebp
add
nop
fcmovbe
fisttp
sub
xchg
imul
(bad)
mov
xchg
retf
retf
or
mov
mov
pusha
fwait
or
xor
mov
ins
es
gs
xor
pop
and
les
inc
sub
aad
loop
push
std
cli
scas
shl
jg
out
mov
das
mov
jl
lahf
sbb
sub
pop
pop
lahf
adc
push
jae
hlt
sub
cwde
stos
or
and
(bad)
jb
mov
pushf
nop
mov
push
test
xchg
cs
outs
sbb
jp
repnz
mov
mov
mov
mov
test
imul
gs
test
mov
adc
xlat
push
lahf
jl
xchg
hlt
push
jbe
fmul
jo
ins
cdq
jmp
hlt
and
jl
loop
mov
adc
in
clc
pushf
dec
popf
jmp
je
jo
xor
icebp
inc
xchg
sbb
cmp
es
mov
push
mov
pop
pop
push
loope
mov
test
xor
in
cdq
xchg
or
fwait
sub
adc
or
jbe
push
push
cmps
test
xchg
enter
std
cli
xor
into
sub
in
and
mov
mov
jno
push
popf
out
lock
out
into
sub
mov
adc
or
dec
and
test
sub
xlat
cmp
iret
imul
mov
icebp
add
fmul
popf
ror
cld
gs
mov
jo
add
push
mov
sub
mov
xor
adc
mul
mov
pop
sub
es
inc
dec
dec
stos
jmp
pop
push
xor
or
cmp
arpl
pop
into
int3
ret
xor
popf
jmp
sbb
xor
test
imul
into
sub
test
rcl
cmp
outs
das
leave
cmp
cmp
xchg
mov
fiadd
popf
pop
sbb
sti
and
adc
daa
sub
dec
imul
pop
in
sbb
ds
movs
sar
sub
test
vpsrlw
sub
sbb
in
mov
stos
jo
push
pusha
jmp
push
sbb
and
stos
mov
mov
(bad)
dec
add
out
jb
imul
adc
adc
movs
fdivr
or
sub
cmp
xor
aad
fs
jnp
and
ret
cmp
or
add
jmp
pusha
add
fcomp
fmulp
pop
std
sbb
inc
loope
or
mov
aad
cmp
xor
lds
inc
inc
xor
push
ret
push
movs
inc
pusha
hlt
cmps
(bad)
add
in
rcr
data16
jmp
repz
iret
imul
fild
outs
pop
shl
in
das
retf
pop
xor
sub
inc
add
and
jns
mov
push
inc
retf
mov
jne
dec
adc
pop
xchg
sbb
in
int3
and
int3
ja
mov
sbb
jo
and
js
imul
hlt
into
pop
sbb
repnz
ins
mov
repnz
ret
enter
sub
mov
push
add
push
adc
lds
and
enter
adc
cmp
(bad)
int
mov
ss
btr
mov
loop
sbb
(bad)
jbe
sahf
push
cs
ret
push
dec
jno
(bad)
fisub
(bad)
xchg
dec
dec
addr16
imul
pop
imul
nop
jne
and
push
fs
cs
in
(bad)
push
bound
pop
les
mov
sub
push
scas
pop
jmp
repnz
xchg
fbld
stos
push
sub
sub
test
dec
add
mul
xor
xchg
push
push
in
sub
inc
mov
push
mov
jno
repz
adc
push
cli
cdq
mov
mov
dec
add
mov
not
jnp
or
fiadd
and
fs
(bad)
jne
pop
pop
inc
xchg
fcmovnb
sbb
bound
sbb
add
add
inc
inc
xchg
das
rcl
cmp
inc
lds
ins
jmp
xchg
test
ret
bound
lods
sbb
cdq
xchg
(bad)
ret
sbb
daa
popa
lods
mov
and
cmp
iret
inc
cmps
inc
iret
(bad)
jnp
rcr
sahf
test
ins
imul
adc
jge
in
fidiv
jne
int3
fcmovu
js
or
pop
sahf
mov
and
call
(bad)
out
ffreep
lds
jmp
(bad)
jl
and
call
inc
das
jbe
sub
pop
(bad)
mov
movs
pop
or
cmp
cmp
sub
push
sub
fnstenv
imul
xlat
aam
dec
dec
cmp
xor
push
pop
aad
dec
leave
out
imul
add
test
ret
cmovp
fst
pop
adc
(bad)
leave
xchg
jg
das
fisttp
imul
sbb
test
sub
loopne
pop
inc
test
stos
aas
dec
add
mov
ror
mov
lock
add
xchg
dec
sub
cmp
int
aad
fisttp
int3
and
and
adc
xor
into
adc
jno
repz
add
cld
repz
pop
scas
in
test
mov
mov
xchg
xchg
shr
and
inc
push
and
pop
sub
test
or
inc
and
cdq
inc
pusha
mov
test
cdq
repnz
iret
sbb
rcl
push
inc
(bad)
and
dec
(bad)
dec
int
mov
push
mov
xor
stos
adc
jg
inc
cmc
mov
retf
(bad)
ja
sub
mov
cmc
push
mov
loopne
jo
mov
push
adc
test
jmp
xchg
scas
xchg
shl
enter
mov
shl
mov
add
xchg
mov
mov
dec
jmp
sar
push
inc
imul
stos
pop
in
in
es
nop
mov
pop
mov
icebp
xor
aaa
hlt
mov
xchg
rcr
retf
and
mov
xor
jge
sar
(bad)
leave
(bad)
retf
jle
sub
sub
int3
sti
rcl
in
jg
and
adc
fs
test
sub
inc
cld
mov
cli
mov
rsqrtps
pop
loop
push
cli
sub
mov
cli
arpl
jne
jecxz
adc
lock
lea
xlat
cld
pop
pop
inc
or
lahf
mov
adc
jne
xchg
std
pushf
(bad)
cmp
leave
div
adc
sbb
hlt
adc
inc
pop
aad
mov
jbe
jmp
jo
sub
cli
call
sahf
adc
sbb
mov
aad
adc
jge
pop
xor
cdq
ror
inc
pop
or
sub
mov
or
xchg
pop
aaa
sti
jl
aas
cmp
sar
push
jns
mov
popa
pop
cmp
push
mov
xlat
loope
adc
rol
fnsave
fxam
and
sub
xchg
das
fstp
fisubr
das
jle
sub
leave
push
jnp
xchg
ficomp
jne
(bad)
aam
pop
mov
psllw
cld
cmps
pop
xchg
test
clc
test
call
loop
and
jmp
mov
cmps
mov
retf
mov
add
pop
mov
and
cmp
inc
ss
fmulp
sbb
aaa
stos
not
popf
loopne
hlt
pop
out
push
push
stc
mov
shr
mov
jnp
lods
pop
inc
xor
or
inc
xor
jl
jne
dec
mov
je
in
jmp
add
mov
mov
dec
sbb
mov
int3
std
cmp
data16
hlt
add
push
mov
inc
push
neg
(bad)
mov
push
adc
pop
cs
loop
ja
adc
mov
test
mov
into
or
xchg
mov
mov
shl
jo
xor
mov
mov
sbb
and
cmovle
inc
ja
js
add
movs
and
cld
les
sub
pop
loopne
aas
out
lods
es
or
movs
push
loop
mov
mov
cmp
pusha
push
sub
mov
sbb
adc
mov
imul
repz
and
outs
pusha
not
jb
outs
sbb
imul
dec
add
jne
push
pushf
fistp
test
mov
cmps
into
dec
(bad)
lea
push
mov
pop
out
int
and
cmps
jae
and
lods
ja
push
jbe
jbe
das
xor
and
std
jns
movs
test
(bad)
aas
arpl
movs
daa
(bad)
(bad)
push
jne
pop
(bad)
retf
inc
outs
sub
xchg
ins
inc
out
ror
icebp
es
stos
lea
dec
hlt
outs
jmp
mov
mov
mov
jl
aam
fld
out
lds
test
sti
sbb
(bad)
add
sub
and
push
es
stos
adc
stos
adc
stc
das
xchg
outs
sub
mov
mov
ins
fild
jecxz
pop
(bad)
mov
daa
and
mov
movs
pop
adc
fucomip
mov
and
push
pop
sbb
pop
or
sar
ret
ftst
int
inc
jecxz
push
test
lds
pop
pushf
xchg
test
add
inc
jmp
and
push
xchg
loope
and
xchg
jmp
dec
xchg
jnp
adc
jmp
repz
xor
inc
or
push
repz
mov
mov
gs
push
ret
dec
fdiv
jp
adc
shl
sbb
idiv
dec
test
jb
mov
xchg
retf
mov
mov
pop
mov
inc
pusha
xchg
jmp
cli
shl
js
xor
not
fnstcw
and
aas
fisttp
adc
mov
es
lods
push
jp
xor
mov
lock
push
ins
and
mov
push
ds
pop
mov
outs
popf
push
movs
xchg
dec
pop
mov
ins
scas
xor
out
adc
or
bswap
stos
cwde
fdivr
(bad)
cmp
and
mov
loopne
je
mov
rol
cwde
lahf
push
xor
je
push
add
js
mov
scas
sar
xor
push
movs
and
cli
call
jmp
fidiv
loope
pop
pop
movs
test
cmp
push
fadd
dec
popa
fisub
cdq
jo
adc
sub
loop
mov
daa
adc
sbb
arpl
cmp
and
xchg
fs
loope
xor
push
gs
cmps
cmc
lock
dec
adc
xchg
bound
mov
movs
add
loop
ret
inc
push
jb
fmul
add
dec
cmp
and
cmp
mov
sub
jg
loopne
stc
dec
xorps
popf
xor
pushf
mov
enter
mov
jns
stos
and
push
pop
pop
or
xor
xchg
loopne
dec
mov
cld
pop
dec
sbb
jae
lods
jle
push
jne
(bad)
daa
retf
fld
fistp
and
cdq
sbb
aad
sahf
div
hlt
and
mov
int
int
(bad)
aam
retf
(bad)
cld
add
mov
push
push
xchg
add
jmp
(bad)
ja
out
enter
mov
push
scas
and
es
sub
inc
pop
(bad)
or
xchg
ret
jo
push
adc
aam
adc
dec
cmps
pop
out
retf
xlat
lods
call
fcom
cs
(bad)
mov
in
cmps
into
(bad)
mov
packuswb
cmc
es
fcmovbe
aam
jl
add
in
retf
loopne
popf
cmp
or
cwde
in
mov
mov
sbb
jae
mov
pop
mov
pusha
sub
mov
mov
mov
cs
push
mov
add
jae
xchg
mov
jb
fs
xchg
xchg
sub
cmp
pusha
rcl
shl
and
push
dec
push
ror
inc
icebp
mov
inc
mov
aaa
mov
jns
popa
out
jo
add
adc
sbb
jno
inc
cmp
xchg
mov
popf
adc
sub
retf
lock
idiv
dec
movs
stc
repz
pop
xchg
test
push
inc
ins
xchg
sub
or
movs
or
mov
add
leave
fwait
rcr
sbb
daa
xchg
movs
out
lock
aad
cmp
daa
out
jo
sub
and
adc
inc
out
out
retf
mov
lds
xor
aas
ins
ds
loope
imul
shl
rol
push
sbb
push
retf
je
scas
push
xchg
out
les
sbb
das
cdq
mov
cmp
adc
loopne
ror
push
inc
xlat
jae
xlat
mov
outs
pop
ret
push
sub
adc
(bad)
pop
nop
repnz
sbb
fcomp
lea
aam
fidivr
hlt
jns
jle
jl
ins
es
push
mov
xchg
ds
push
push
mov
jle
inc
shl
fcomp
aad
jns
dec
out
dec
cmps
repz
das
aad
pop
sbb
int3
and
fisub
or
push
mov
xchg
icebp
or
add
ret
scas
pop
ret
cmp
lock
int3
fist
fdiv
mov
les
gs
mov
repz
aam
(bad)
call
loopne
aas
clc
sub
inc
int3
xchg
mov
lock
pusha
or
arpl
jmp
xchg
lahf
mov
xchg
repz
out
in
jnp
sub
and
cs
call
(bad)
add
xor
xlat
adc
cli
mov
mov
inc
jne
add
and
mul
jae
out
std
iret
sbb
adc
pop
clc
jae
ins
pushf
cld
pop
repz
jl
cwde
push
sub
xchg
xchg
mov
je
push
adc
dec
lea
enter
inc
push
fsub
scas
pop
dec
popa
sbb
add
(bad)
jecxz
call
xchg
cmp
in
sahf
out
fstp
outs
sub
jnp
pusha
(bad)
fild
push
add
and
retf
jnp
es
out
push
or
frstor
and
ds
mul
pop
ret
xor
pop
div
ret
rol
in
mov
xchg
lods
into
adc
xor
in
xlat
xor
mov
pop
push
adc
and
add
mov
test
int3
xchg
jle
add
xor
dec
sbb
mov
mov
cmp
jb
mov
mov
mov
mov
xor
cmp
cld
cmc
adc
sbb
jo
(bad)
or
aas
pushf
dec
mov
pusha
xchg
ja
and
jns
enter
mov
call
aad
mov
adc
fwait
test
data16
call
xchg
daa
sti
or
jmp
shl
inc
clc
fcomp
xor
(bad)
dec
push
lods
cmps
cmc
cmps
sbb
test
retf
pop
inc
retf
test
sub
cwde
arpl
retf
inc
xor
push
repz
dec
or
popf
loope
pushf
xlat
movs
(bad)
adc
cmps
push
in
in
jmp
(bad)
mov
adc
xchg
sub
dec
bound
ja
push
lds
fistp
dec
and
fisttp
inc
pop
mov
or
repnz
push
inc
rcl
jno
dec
adc
(bad)
call
mov
mov
and
mov
xlat
ret
pop
cmp
cs
stos
cdq
lods
mov
cmc
xor
mov
push
or
sub
fwait
ins
mov
fwait
xor
pushf
pop
outs
push
xor
mov
push
int3
hlt
stc
and
mov
out
fld
jmp
es
shr
pop
mov
stos
popf
and
repnz
es
add
mov
das
test
xchg
int
outs
call
rcl
aaa
mov
dec
push
nop
cmp
pop
pushf
data16
cmp
imul
inc
jmp
push
pusha
xchg
pusha
mov
sub
lahf
in
adc
inc
jns
pop
test
or
inc
outs
stc
rcl
inc
jp
fbstp
(bad)
mov
xor
mov
adc
mov
repz
jecxz
pop
inc
jl
movs
lea
addr16
mov
ret
and
xor
xor
push
repz
movs
or
xchg
ret
mov
jns
xlat
js
pmulhw
add
fistp
cmp
aad
and
or
mov
sbb
scas
jmp
and
adc
sbb
imul
cmp
int3
stc
not
fisub
push
and
mov
xor
stc
jo
inc
jmp
inc
out
test
out
fsub
jae
push
and
rol
test
cdq
pop
mov
push
xchg
ret
mov
int3
les
pop
inc
jg
add
sbb
inc
xchg
fistp
sbb
shl
lahf
or
icebp
add
jne
fcom
(bad)
fst
inc
jns
jns
xor
jmp
mov
mov
data16
jno
jae
jbe
scas
inc
dec
cmps
and
shr
adc
mov
push
mov
pop
inc
cmp
fwait
shr
jne
int3
lds
push
cmc
cmp
or
sub
clc
rcr
xor
mov
dec
out
mov
(bad)
cmp
sub
sub
xchg
xor
adc
lods
add
jnp
fisub
jecxz
adc
mov
pminub
enter
cli
mov
mov
and
mov
(bad)
and
inc
jmp
jecxz
mov
fistp
or
hlt
sub
in
push
fcmovu
sub
mov
pop
jb
shr
in
and
inc
fwait
sahf
retf
lds
lods
sahf
rcr
test
leave
sbb
das
dec
inc
pop
mov
mov
or
test
clc
jle
sbb
mov
jge
push
rcr
add
retf
repnz
cmp
inc
adc
das
push
mov
call
and
call
push
es
push
retf
xor
add
aam
pop
pop
shl
or
fcmovnu
push
jno
xor
sti
jae
imul
popa
cmps
jmp
or
sbb
jb
adc
jno
retf
sub
xor
pop
pop
dec
bound
arpl
fist
outs
icebp
sbb
inc
les
xor
cmp
es
in
adc
pushf
jns
push
jg
xchg
rol
jmp
jae
mov
xor
fld
push
call
loope
es
lahf
cmp
(bad)
ins
nop
jmp
in
and
jo
retf
retf
xor
mov
jmp
push
aad
inc
inc
ret
and
jne
xor
iret
ins
or
pop
mov
ja
mov
xchg
aad
mov
cmp
mov
test
jo
mov
jle
mov
or
push
js
and
add
mov
mov
mov
push
sub
fisubr
mov
sbb
cmp
sub
test
mov
adc
adc
clc
cmp
cdq
mov
cmp
jbe
ret
mov
aas
test
ret
push
retf
je
xchg
pop
inc
pushf
mov
jne
cmp
sub
out
shl
ss
mov
(bad)
(bad)
jno
add
and
out
shl
mov
mov
xchg
jns
test
loop
pushf
hlt
mov
(bad)
push
leave
or
dec
xchg
mov
addr16
xchg
test
inc
mov
push
popf
adc
ror
not
xchg
xor
aaa
sub
mov
cld
push
xor
jns
sub
xchg
mov
mov
cli
xchg
cmp
or
mov
(bad)
fiadd
sub
or
fistp
or
dec
scas
retf
inc
sti
sbb
psllw
out
repz
and
mov
inc
in
dec
mov
and
popf
push
sub
cmp
fdiv
sub
xor
outs
ficomp
sbb
cld
iret
stc
and
retf
add
(bad)
cmp
xor
ret
push
jae
js
ret
retf
dec
rcl
repz
aas
mul
add
inc
rol
adc
lods
xchg
pop
mov
pop
sbb
mov
cmp
mov
add
aad
pop
stc
out
repz
cmp
dec
inc
call
push
inc
cmp
or
jge
test
div
iret
mov
lahf
push
fisttp
icebp
loope
jg
push
pop
(bad)
lods
stc
mov
pop
loopne
jl
or
mov
(bad)
into
jnp
xor
dec
jno
sbb
pop
fs
pop
mov
movs
mov
and
xchg
test
sbb
dec
jbe
adc
xchg
jne
jle
in
xchg
cld
js
aam
movs
cmc
ja
jbe
and
push
inc
scas
push
inc
dec
sbb
add
pop
js
sbb
pushf
xchg
xor
pop
enter
fcmovnbe
les
loop
sar
repnz
cdq
ins
and
push
pop
cmp
xlat
sbb
dec
cmps
cmp
pop
pop
es
das
in
in
es
add
xor
dec
jae
fsub
sbb
mov
les
ret
and
fnstsw
xchg
les
bound
nop
mov
mov
(bad)
mov
clc
int3
loopne
imul
mov
arpl
test
movs
mov
push
push
arpl
retf
cmps
les
sar
jnp
jecxz
loop
int3
and
stos
je
cmp
stos
mov
mov
aas
imul
adc
popa
inc
sub
mov
shr
les
xor
pop
fisub
movs
pop
xlat
ja
fimul
out
cmp
dec
add
add
inc
or
add
mov
xchg
sar
xchg
ds
pop
xlat
sub
sti
adc
mov
mov
add
(bad)
lock
sub
fsubr
mov
pop
cmp
mov
dec
mov
add
xchg
mov
cli
hlt
inc
inc
popa
mov
or
sub
jmp
push
mov
sahf
mov
jg
daa
test
push
fist
dec
sbb
mov
call
push
push
push
sar
repz
or
mov
movs
jb
test
aas
sub
mov
jns
mov
cmps
pop
xor
(bad)
in
js
repz
mov
push
movnti
inc
push
and
retf
test
adc
test
scas
cmp
aad
inc
aad
mov
mov
out
retf
cmc
mov
out
loopne
or
ss
and
cmps
jmp
inc
lds
ins
enter
movs
inc
cmp
popf
and
inc
jmp
mov
sbb
pop
add
aaa
mov
cmps
fnstcw
aam
jae
popw
push
jge
ficomp
cmp
xchg
dec
cmps
or
in
movs
aas
fmul
jae
push
sub
mul
int
mov
(bad)
(bad)
sbb
jp
(bad)
push
cmp
fs
xchg
call
push
push
lock
imul
xchg
inc
in
and
test
xchg
mov
out
fisub
dec
inc
inc
int3
sbb
aaa
pushf
push
xchg
or
pop
sbb
bound
adc
vmptrst
pop
sub
iret
out
and
sbb
mov
dec
adc
adc
sbb
ins
mov
(bad)
out
ret
fwait
mov
jl
je
sti
aam
fidiv
mov
jo
xchg
xor
cwde
mov
adc
mov
inc
jb
dec
adc
dec
daa
lds
pop
jmp
push
test
pop
(bad)
ja
xor
jl
adc
pop
push
mov
pop
mov
lock
mov
pushf
icebp
xor
aad
daa
loope
lods
dec
dec
and
ja
outs
leave
gs
xor
sti
inc
dec
sbb
jle
mov
pop
mov
out
add
push
mov
out
inc
adc
xchg
call
test
ret
std
adc
push
mov
inc
or
jns
push
fdiv
pop
sbb
stos
inc
repz
mov
pop
imul
jns
and
xchg
ss
adc
rol
into
mov
xchg
pop
add
cmps
dec
int
sub
inc
(bad)
js
xchg
jge
sub
ds
(bad)
fcom
ret
shr
retf
ret
jg
mov
pop
push
sub
mov
(bad)
fisttp
jo
sahf
add
mov
aas
cmp
ret
in
sub
aam
mov
repnz
pop
add
rcl
jg
mov
ds
xchg
out
or
pop
lock
retf
sub
adc
mov
mov
aas
xchg
dec
clc
mov
clc
fidivr
cmp
jb
xor
out
sar
(bad)
xchg
xor
test
inc
icebp
jmp
scas
or
daa
push
jg
mov
fdivr
and
xor
jae
lds
jge
xor
xchg
popf
xor
jbe
shr
pop
mov
cmp
out
xchg
cmp
es
in
lds
lods
sbb
push
pop
cmp
and
cli
mov
jne
fimul
cwde
data16
fs
sub
mov
ror
test
jb
jnp
(bad)
adc
into
mov
mov
pop
addr16
fild
pop
push
std
push
in
dec
mov
cmp
shl
push
test
inc
jo
pop
data16
data16
(bad)
bound
jecxz
pop
jmp
dec
cdq
mov
mov
pop
mov
sti
sbb
mov
movs
xchg
stos
imul
lds
mov
adc
fist
gs
push
jae
daa
out
mov
cmp
sar
push
ret
mul
(bad)
js
pop
jo
bound
imul
pop
cmp
push
out
xchg
cld
fdivr
and
push
clc
cmp
outs
stos
(bad)
jmp
jae
fisttp
fbstp
mov
arpl
add
leave
aad
in
jmp
adc
movs
sub
inc
xlat
cmp
nop
pop
jmp
jno
xlat
cmp
push
and
mov
mov
rcr
push
sar
mov
mov
inc
js
adc
jne
cmp
mov
popa
les
xor
cdq
jo
xchg
pop
out
mov
adc
shl
in
sbb
and
add
adc
xor
imul
ins
sub
popa
mov
(bad)
and
ja
es
mov
call
fistp
inc
sbb
xchg
jb
pop
inc
push
popa
psrlq
call
popa
icebp
inc
xchg
fild
inc
call
inc
mov
dec
test
pop
lahf
adc
aam
mov
mov
fnstcw
jne
mov
sub
jge
(bad)
cmp
lds
sub
mov
mov
fs
mov
rcl
jae
xchg
pop
repnz
in
and
cmp
pop
sahf
mov
movs
movs
ror
xor
arpl
sbb
mov
jl
adc
xor
sbb
or
loopne
and
out
mov
pop
mov
addr16
dec
mov
repnz
sub
je
int3
sbb
in
add
mov
or
(bad)
rcr
mov
mov
add
mov
ds
test
xor
jmp
fs
(bad)
xchg
mov
cmp
dec
cld
xchg
addr16
jo
repz
movs
test
out
mov
cwde
xchg
outs
inc
and
push
repz
sbb
cmp
xchg
jno
inc
inc
jmp
aas
mov
push
dec
lock
scas
loopne
mov
das
std
mov
(bad)
fstp
cld
cmc
jo
sahf
mov
in
mov
ret
add
pusha
ja
jne
int3
stos
or
push
pop
repnz
jb
xchg
sub
ret
sub
inc
les
mov
jnp
mov
mov
popa
push
rep
daa
and
arpl
push
icebp
adc
(bad)
mov
cdq
xchg
das
movs
mov
out
ja
mov
push
dec
jae
inc
and
out
cmp
pop
dec
cmp
int3
xchg
icebp
mov
test
pop
fisttp
cmp
and
sar
mov
dec
imul
push
in
adc
div
hlt
cdq
mov
icebp
mov
push
lods
add
lods
or
fcomi
jp
and
fnstenv
xchg
arpl
sub
and
mov
(bad)
cdq
cvttps2pi
fstp
movs
pop
mov
sbb
push
addr16
lahf
stos
and
pop
bound
loopne
sbb
sub
mov
fild
out
dec
scas
adc
and
cmp
aad
std
ret
(bad)
dec
mov
xchg
jnp
dec
test
in
shr
push
mov
ss
mov
nop
lds
(bad)
stos
out
sbb
jo
subps
(bad)
loope
stos
sbb
cwde
sbb
or
dec
sbb
jmp
add
xchg
xchg
pop
adc
cmp
cmc
imul
arpl
loope
clc
cdq
gs
jmp
add
sub
jbe
and
dec
add
addr16
add
fmul
mov
sub
loopne
sub
mov
(bad)
lds
fwait
mov
xchg
test
and
sbb
movs
ret
push
sub
ds
scas
xchg
daa
adc
pop
dec
mov
mov
push
dec
js
mov
jno
sub
or
ins
add
arpl
xchg
mov
aam
out
pop
scas
sub
cmc
ret
ret
mov
leave
jnp
xor
sub
xor
arpl
xchg
outs
mov
rcr
popa
imul
cmc
mov
leave
cld
or
cs
mov
mov
pop
into
or
mov
jmp
xchg
bound
je
mov
cmp
repnz
ret
popa
jmp
fsub
stos
out
inc
jbe
xchg
sub
add
jbe
gs
hlt
mov
adc
enter
xor
jmp
push
and
mov
mov
xor
pop
mov
gs
int3
pop
sbb
mov
aas
shl
adc
dec
inc
xlat
out
lods
add
xor
mul
jae
adc
out
mov
cdq
mov
(bad)
icebp
sti
xor
xlat
in
mov
fdivr
jle
loope
xchg
jl
add
dec
xor
arpl
das
sbb
test
hlt
mov
pop
(bad)
fld
cmp
pop
call
sub
mov
xor
sub
adc
lds
fs
imul
inc
das
adc
mov
inc
int
repnz
push
mov
cmp
fcomip
je
lods
cmp
and
repz
or
gs
daa
loopne
stos
test
and
dec
fdivr
fmulp
mov
in
sbb
mov
jp
mov
xchg
xor
inc
mov
mov
mov
jae
daa
xor
cmp
enter
sbb
push
sbb
or
cmps
mov
sbb
sub
sbb
out
sar
cmp
sbb
add
sub
mov
aaa
inc
cli
jb
push
inc
dec
sbb
push
in
ins
ret
sbb
mov
or
lahf
cmps
push
dec
je
cmp
loope
dec
add
sub
das
scas
imul
or
(bad)
sar
inc
ss
mov
sti
hlt
cdq
jmp
adc
mov
test
cwde
push
and
cmp
mov
aam
adc
pop
mov
iret
gs
pop
inc
shl
pop
test
into
and
jecxz
pop
in
movs
push
pop
dec
sub
pop
pop
movs
push
stos
xchg
jl
sbb
mov
add
jns
mov
dec
out
jmp
fs
cmp
xchg
shl
sti
dec
dec
xchg
pop
pop
and
pushf
or
or
sbb
xor
sbb
es
xor
pop
dec
mov
inc
ins
push
pop
mov
xor
aad
mov
lods
mov
or
repz
pop
sar
fwait
(bad)
cmp
mov
sbb
xor
xchg
fisub
fld
fnstsw
lahf
stos
fcmovnbe
adc
fcomi
outs
ins
lea
frstpm(287
test
mov
mov
xor
stc
fadd
(bad)
out
and
and
sbb
repnz
push
cmp
sub
jnp
ins
cmps
cmp
test
push
out
lds
lods
cmp
loope
push
jecxz
cmps
cmp
loope
je
out
pop
rcr
test
popf
dec
adc
sbb
cmp
jl
ds
clc
sub
enter
in
mov
mov
in
imul
push
out
rol
mov
sbb
adc
out
cmp
push
mov
lods
mov
add
js
out
pop
ins
xchg
test
add
push
cld
adc
dec
or
pop
inc
pop
popf
mov
ins
fld
repz
mov
pop
jne
sbb
movs
gs
jecxz
cmp
jge
cmc
inc
dec
sub
in
movs
inc
movs
pop
lods
shr
int3
jno
inc
pop
js
adc
xor
das
xor
adc
popf
iret
mov
jb
or
mov
mov
cmp
and
adc
imul
int
cmp
lea
popf
cmps
or
sub
mov
aad
mov
jo
mov
in
fs
push
add
out
add
pop
mov
dec
lea
rcr
das
mov
cmps
sub
scas
int3
or
jae
sbb
pusha
inc
(bad)
jmp
push
(bad)
dec
dec
fwait
xchg
mov
cmc
add
mov
lds
cs
int3
mov
ror
cmp
(bad)
bound
sahf
(bad)
aas
mov
shl
push
pop
or
scas
sbb
ds
ds
push
outs
dec
aas
pop
stc
jbe
push
(bad)
ins
pop
jmp
push
popf
cmp
in
icebp
mov
lahf
mov
add
and
pop
mov
mov
adc
stos
inc
xor
xchg
and
js
cdq
lahf
test
jmp
movs
push
shl
add
ret
cs
and
mov
sbb
mov
mov
inc
or
in
mov
aaa
mov
das
lahf
mov
dec
repnz
fcomp
xor
and
data16
and
mov
xor
xor
mov
mov
sahf
mov
je
and
cmp
cmp
mov
out
loope
xchg
inc
popa
dec
xchg
stos
into
cmp
dec
push
cmp
push
push
movs
xlat
scas
popf
cmp
push
pop
scas
cmp
mov
leave
repz
pop
xor
lds
or
cmps
adc
push
add
mov
sub
inc
push
fs
jno
daa
lahf
add
popf
jbe
adc
xor
push
sub
xor
adc
xchg
ins
stos
jns
adc
in
sbb
stc
xor
in
dec
xor
inc
repnz
(bad)
mov
mov
nop
popf
sub
mov
in
or
mov
pop
ja
(bad)
cmp
nop
mov
inc
cwde
push
(bad)
pop
repz
(bad)
inc
sbb
data16
lods
dec
sbb
data16
sub
xchg
loopne
add
outs
pop
iret
dec
fbld
dec
jno
cmc
pop
mov
test
mov
call
xchg
pop
push
sti
push
mov
ja
pop
inc
or
xchg
cdq
aam
cmps
push
iret
or
xchg
adc
sbb
mov
outs
sbb
retf
mov
sbb
cmp
jmp
cdq
dec
or
pop
jp
sub
inc
mov
mov
dec
mov
adc
jae
lods
add
out
lahf
dec
icebp
dec
xchg
and
rcl
lock
cmps
jp
adc
shl
xor
mov
mov
adc
or
sti
push
aas
jbe
sub
sbb
icebp
fwait
pushf
cld
push
gs
sbb
cmc
jle
xor
adc
pop
enter
push
jl
push
call
sbb
test
cmc
inc
test
inc
push
push
es
rcr
sbb
es
sbb
or
and
jmp
movs
add
(bad)
ds
jmp
dec
pusha
push
and
scas
or
imul
fadd
and
hlt
psubsw
daa
cmps
jmp
dec
add
cdq
jle
push
fcom
sbb
pop
sub
test
pop
out
scas
fcom
mov
addr16
pop
mov
xor
inc
test
cmp
adc
pop
rcr
pop
xor
jnp
pop
mov
out
pop
mov
out
retf
sbb
test
xchg
jle
bound
test
js
xor
addr16
push
inc
fs
pop
dec
jnp
ror
js
js
test
xor
jnp
dec
xor
xchg
fbld
aam
rol
into
lds
sub
dec
sahf
or
test
xor
pushf
push
pusha
mov
stos
int
push
ja
(bad)
hlt
or
mov
into
or
xchg
nop
xor
dec
mov
stos
ja
stos
fistp
jmp
out
aad
cli
inc
dec
or
push
fwait
cs
push
push
inc
cmp
jle
push
arpl
rol
repz
stos
jle
pop
mov
ins
mov
jbe
hlt
cli
jbe
adc
cmp
dec
cwde
jno
loop
outs
mov
fadd
aam
pop
sahf
add
sahf
jmp
pop
and
jecxz
test
call
mov
cmp
imul
and
test
fcmovnu
mov
clc
or
sar
rol
retf
sbb
test
call
sub
jl
pop
push
push
jle
and
(bad)
sbb
add
adc
into
fistp
or
arpl
pop
in
cmp
popw
xor
jns
inc
stos
ret
mov
xchg
inc
mov
(bad)
jmp
sbb
adc
jmp
test
call
into
loopne
adc
mov
or
popf
mov
xchg
mov
in
or
mov
leave
popf
xor
ret
test
mov
sub
push
iret
mov
adc
fucomi
push
retf
lods
ins
scas
adc
mov
and
(bad)
adc
dec
sbb
mov
js
jno
ja
fs
imul
(bad)
retf
jg
outs
inc
inc
retf
shl
loop
mov
cmp
jle
inc
(bad)
icebp
sub
xchg
push
stc
sbb
popf
or
aad
movs
jl
fs
push
repz
loopne
sti
dec
cmps
mov
movs
xor
or
mov
scas
cdq
jne
and
xchg
and
jge
xchg
mov
retf
push
dec
gs
fadd
and
or
xchg
jo
sti
inc
push
adc
repnz
data16
test
dec
ja
dec
xor
push
in
shr
jmp
cmp
mov
inc
scas
icebp
xchg
pop
adc
inc
jecxz
jb
sbb
test
pushf
push
repz
data16
pusha
xchg
dec
sahf
dec
mov
dec
hlt
scas
aas
jmp
das
cs
or
adc
fistp
sbb
inc
mov
adc
mov
xor
add
test
adc
mov
test
push
jbe
in
sub
pop
popf
call
xor
xor
shl
jmp
fsubr
adc
aad
pushf
outs
hlt
ss
pop
add
sbb
ror
mov
in
arpl
cs
jecxz
push
int3
sub
aaa
imul
and
push
mov
les
clc
popf
sahf
pop
mov
aas
ins
fnstenv
push
es
stos
mov
loopne
mov
jmp
out
xchg
fistp
fcomp
add
jae
fldcw
test
add
add
push
daa
sub
retf
xchg
sub
cwde
jle
and
cmp
out
and
prefetchwt1
or
scas
bound
cmp
cmp
sub
push
and
inc
fsubr
jl
and
lods
mov
cwde
xor
jmp
push
pop
cmp
jmp
jecxz
and
dec
or
cmc
ss
and
dec
cmp
fs
push
sbb
or
iret
cmp
dec
sbb
push
push
jmp
sbb
fs
retfw
int3
push
in
jo
jns
dec
mov
add
retf
mov
lods
int3
(bad)
mov
jp
das
fdivrp
(bad)
int
iret
add
jl
and
pop
jb
mov
jge
push
(bad)
int
mov
lds
int
xlat
ja
mov
pusha
imul
jo
cmp
rol
scas
js
je
adc
xchg
test
retf
xchg
dec
or
ret
fwait
aam
inc
hlt
xchg
dec
cmp
in
cwde
loop
inc
push
dec
sub
add
lock
(bad)
sbb
push
ret
pop
ret
ins
lahf
cwde
jo
out
loope
pop
in
sbb
dec
sub
jmp
add
mov
and
mov
mov
ror
pushf
shl
test
mov
adc
cli
movs
(bad)
std
rol
xor
mov
mov
std
scas
pop
jo
sub
rcr
js
fldenv
std
montmul
cmps
inc
cmc
or
cwde
mov
xor
adc
sbb
cmc
add
mov
mov
xchg
inc
adc
sbb
dec
movs
in
(bad)
jp
aas
sar
mov
and
scas
inc
jmp
clc
adc
sub
push
push
jmp
or
cmps
fsubr
and
push
adc
iret
arpl
sub
mov
cmps
mov
test
sti
in
adc
and
pop
xor
mov
xchg
(bad)
into
mov
leave
in
adc
jns
enter
fcmovb
xchg
xchg
jne
inc
cmp
fstp
cmps
push
dec
loopne
int
jp
(bad)
mov
xchg
dec
or
sub
hlt
jge
sub
leave
inc
rcl
fwait
popa
scas
out
mov
stos
inc
cs
and
pop
mov
add
adc
xlat
dec
push
fiadd
mov
push
xchg
scas
jne
xor
jb
(bad)
push
out
xchg
into
das
mov
add
aaa
pop
mov
dec
adc
push
loopne
(bad)
fistp
mov
movs
mov
fwait
stc
outs
lea
test
scas
(bad)
mov
dec
or
dec
push
fs
mov
fcomp
rcr
stos
loope
retf
outs
cmp
add
jl
xchg
dec
scas
dec
clc
push
push
and
adc
jno
pop
fistp
add
fwait
sub
fistp
ja
outs
(bad)
call
movs
mov
push
test
sahf
dec
data16
in
sbb
int
adc
cwde
es
repnz
cmp
inc
stos
mov
shr
or
jl
les
(bad)
mov
ret
fisttp
test
mov
test
mov
mov
nop
jbe
xor
mov
inc
inc
and
call
add
adc
xchg
xor
xor
dec
les
dec
sbb
shl
dec
mov
push
mov
xchg
clc
or
outs
mov
es
push
and
sahf
call
repz
adc
aam
cdq
fnsave
xchg
(bad)
sbb
xlat
push
test
jecxz
sbb
cmp
inc
fs
add
dec
inc
mov
test
loop
jl
adc
mov
xchg
scas
pusha
icebp
shr
inc
xchg
out
ret
inc
pop
lea
push
sahf
push
mov
out
(bad)
jl
repz
jmp
(bad)
jb
and
les
scas
inc
call
and
mov
inc
cmp
mov
leave
dec
je
jae
pop
out
je
pop
jge
scas
jecxz
leave
js
mov
movs
pushw
(bad)
loope
and
xchg
sbb
out
and
pusha
mov
cs
and
int3
jae
xchg
xchg
add
ret
mov
movs
inc
addr16
inc
adc
sub
fidivr
lea
push
stos
jecxz
daa
dec
ins
std
test
stc
push
cmp
add
mov
cmp
out
pop
outs
sbb
push
movs
(bad)
mov
aad
lds
clc
sub
cwde
imul
inc
inc
cmp
daa
jl
cs
bound
sti
sar
iret
out
ret
call
mov
test
enter
push
sbb
push
push
sahf
retf
retf
les
loopne
imul
neg
fcmovnu
sbb
les
mov
loopne
sbb
imul
and
cmp
imul
inc
loop
sahf
add
cmp
fdivr
mov
test
xchg
scas
fimul
(bad)
fcom
pop
stos
adc
repz
pop
add
push
dec
in
add
lahf
cmp
pop
bound
adc
clc
inc
jno
push
xor
loop
js
test
pop
(bad)
fwait
add
lock
cmps
pusha
mov
das
sbb
sbb
or
inc
mov
sub
adc
dec
int
mov
cmp
and
out
push
cmp
cmp
out
scas
pop
rol
and
outs
lock
popf
sar
iret
popf
ins
jb
dec
mov
sub
xlat
lds
leave
dec
push
or
rol
sbb
cmps
xor
nop
or
xor
clc
scas
jmp
addr16
xchg
push
jg
test
adc
lods
pop
aaa
xor
movs
dec
pusha
xchg
add
cs
cmps
sti
ins
stos
xor
push
sbb
adc
aam
lods
daa
in
sub
js
cwde
cwde
mov
clc
in
sub
mov
or
sub
xchg
outs
jg
shl
(bad)
mov
sti
test
push
je
jbe
add
test
sbb
rol
sub
mov
inc
les
jge
je
les
xor
pop
inc
or
stc
or
inc
ficom
mov
fwait
add
mov
enter
retf
push
add
pusha
inc
sub
or
or
inc
hlt
add
adc
(bad)
fidivr
push
repnz
pop
in
cmp
jmp
in
inc
lock
add
rep
xchg
add
hlt
pop
pusha
mov
dec
cmp
and
pop
cdq
ins
cmp
pop
lahf
sub
jle
push
in
mov
sbb
push
fwait
pop
adc
jmp
xor
pop
sti
mov
sbb
lahf
sub
adc
inc
fdiv
jns
mov
pop
fnstenv
dec
ins
push
add
sub
shl
jne
jp
push
xchg
cmp
adc
pop
aaa
in
push
pop
jae
rcl
mov
cmc
xor
cwde
aas
aad
icebp
leave
sbb
jne
mov
add
(bad)
in
lock
add
(bad)
mov
xchg
mov
mov
dec
pop
push
adc
dec
mov
ror
cmp
xor
int3
mov
push
clc
or
pop
adc
xchg
push
mov
push
ret
jp
faddp
rcr
mov
sub
or
call
or
inc
or
mov
pop
ins
std
(bad)
xor
leave
dec
fcomp
sahf
and
xlat
cmp
hlt
xchg
shr
xchg
or
mov
cmp
mov
and
push
das
repz
popw
aad
lahf
fcom
sub
aaa
and
add
mov
pusha
mov
aam
xor
xor
dec
scas
aam
sahf
inc
mov
imul
sbb
addr16
test
ss
xor
stos
es
sahf
pop
dec
out
shl
mov
mov
leave
or
or
ja
js
inc
repnz
dec
(bad)
enter
mov
(bad)
in
xor
retf
popf
dec
fcomp
in
pop
fld
mov
cmp
into
push
sub
lock
loopne
std
in
xor
sar
out
xchg
xchg
xor
mov
and
add
cmps
outs
mov
push
push
mov
dec
adc
cmc
mov
jp
std
lahf
leave
ret
es
call
daa
outs
xor
retf
jmp
pop
mov
sub
jb
adc
mov
mov
cld
cli
int3
in
xchg
adc
jp
xor
mov
pop
cli
lock
sub
scas
sbb
add
arpl
sbb
inc
xor
ror
fild
and
ror
scas
(bad)
js
aad
sub
ret
inc
aas
jns
int
shr
ss
test
fisttp
call
mov
mov
cmp
inc
jns
nop
div
or
inc
xchg
and
ret
adc
and
fs
scas
adc
jb
xchg
pop
cmp
cmp
lods
mov
xor
scas
shr
or
mov
in
jge
jl
pop
in
xlat
shr
mov
pop
hlt
mov
mov
bts
xor
sub
mov
cmp
push
daa
lea
(bad)
cmp
xor
xlat
jo
stos
loopne
sbb
mov
std
jmp
loopne
cs
mov
and
mov
mov
cmp
test
pop
scas
pushf
ins
pop
scas
mov
scas
mov
nop
test
jns
cmp
(bad)
sar
push
mov
xchg
ficom
adc
mov
aaa
je
xchg
xchg
mov
xor
jecxz
sbb
jp
dec
jle
dec
pop
add
daa
mov
not
sbb
sub
mov
adc
movs
mov
xchg
mov
dec
cmp
cld
arpl
dec
push
in
dec
repnz
dec
add
nop
loopne
mov
loopne
ds
nop
push
adc
mov
sub
fldcw
dec
movs
pop
inc
fld
jl
std
or
idiv
je
test
push
adc
jae
sahf
out
stos
dec
mov
jmp
add
mov
or
iret
ins
inc
sub
sub
(bad)
xor
ds
(bad)
loopne
aaa
add
scas
or
cli
ret
pop
pop
lods
call
data16
pop
jge
or
or
fild
mov
stos
dec
fistp
imul
inc
(bad)
xlat
popa
sbb
sbb
dec
push
into
sub
mov
cmp
xlat
mov
loopne
popf
clc
outs
pop
aam
dec
jp
and
push
mov
fcomp
sub
(bad)
pop
fdiv
xchg
jnp
xor
lahf
cmps
shl
fnstsw
xchg
push
or
dec
jno
pop
mov
(bad)
sub
sbb
and
jp
push
sahf
(bad)
movs
sub
test
cmp
not
int
mov
push
dec
xchg
repnz
scas
xlat
pusha
jmp
pop
dec
mov
jecxz
dec
mov
pop
jmp
out
je
es
sbb
jno
neg
call
(bad)
sub
cmp
or
jl
lock
adc
mov
push
test
les
in
into
in
sub
xchg
out
les
pop
lods
int
std
lahf
or
daa
mov
nop
(bad)
sbb
pusha
mov
push
leave
pop
icebp
sub
mov
adc
sbb
xchg
inc
mov
pop
(bad)
rcr
cmp
pusha
cmp
push
add
mov
inc
popf
test
jp
jnp
xor
cs
push
xor
(bad)
vpsubq
test
lahf
dec
ret
ds
xchg
add
inc
hlt
ret
shr
cdq
outs
dec
or
and
mov
pop
push
(bad)
xchg
icebp
mov
mov
and
pop
shr
xor
cmp
pop
fstp
fidiv
pop
into
push
fst
mov
mov
loopne
sti
(bad)
cdq
dec
xchg
into
mov
sub
jns
xchg
scas
into
push
pushf
pusha
mov
xchg
iret
in
leave
dec
or
(bad)
mov
push
push
loop
in
mov
jp
sbb
in
mov
push
jmp
mul
pop
ret
test
ret
cmp
pop
movs
call
cmps
out
push
jl
push
mov
mov
sub
inc
retf
loopne
push
ret
sbb
(bad)
sub
cli
xchg
add
xor
lods
push
lods
punpckhbw
and
in
iret
mov
push
xchg
inc
cs
xor
sub
dec
(bad)
fisubr
and
ss
cmp
nop
aas
jmp
je
push
sub
push
mov
data16
in
repnz
xor
xchg
loopne
enter
out
xor
sti
cmps
scas
jbe
xchg
outs
mov
cmp
jle
sub
out
clc
inc
inc
std
push
popf
or
movs
bswap
shr
fs
scas
test
lods
ins
add
cli
jg
fsub
clc
push
sbb
imul
arpl
icebp
cmps
jns
adc
jb
es
call
aam
outs
mov
dec
jecxz
(bad)
jmp
test
sub
jl
(bad)
sahf
scas
pusha
dec
and
leave
fisub
cmc
call
xchg
shl
xchg
sub
cmps
fs
mov
mov
mov
add
mov
pop
and
jns
aad
pop
sahf
in
xchg
popa
pop
xor
jmp
xor
ds
repnz
outs
daa
bound
cmc
mov
movs
pop
mov
or
adc
pusha
mov
fwait
mov
jns
out
stos
cmp
sub
pop
clc
(bad)
lahf
adc
pop
sub
test
retf
mov
cmp
rcr
out
movs
(bad)
lods
and
sti
ins
add
pop
push
clc
mov
leave
adc
pop
add
or
in
fadd
shl
pop
sub
div
jmp
pop
add
jno
sub
mov
mov
(bad)
fisubr
(bad)
lock
inc
pusha
jns
lock
xchg
(bad)
sbb
sub
push
into
call
in
pop
adc
ror
fist
xchg
jmp
sub
fidivr
xor
push
mov
and
jns
mov
jbe
enter
mov
inc
cmps
or
js
xor
xlat
movs
sub
(bad)
mov
gs
mov
loopne
mov
repz
cmp
std
push
sbb
leave
jae
push
lahf
mov
mov
test
xchg
ret
xor
ret
aam
sbb
icebp
or
add
push
and
sbb
test
cmc
inc
mov
add
xor
repnz
mov
lock
not
(bad)
jg
stos
pop
in
cmp
add
sbb
cwde
xchg
xchg
add
sbb
mov
mov
test
cmp
sbb
mov
inc
cdq
loope
adc
out
pushf
sbb
or
or
lods
test
(bad)
ins
es
jmp
js
cld
mov
mov
test
shr
iret
imul
jns
mov
cmp
dec
pop
outs
dec
into
inc
sbb
repz
jns
fnstenv
ror
push
(bad)
xor
xchg
cmps
imul
inc
in
and
push
daa
pop
ja
xchg
push
ret
sbb
fldenv
pop
int
div
retf
int3
xor
hlt
xchg
sbb
test
lods
cli
add
pop
sbb
mov
push
mov
bound
in
(bad)
sti
ins
and
stos
xor
adc
imul
push
jl
in
call
stos
sti
test
inc
mov
or
cmps
fwait
lods
mov
fwait
xchg
std
push
pop
cmps
push
fstp
mov
jbe
pop
xchg
push
jp
lods
jns
jb
push
out
sar
lahf
loopne
dec
pop
cmps
pop
pop
xor
add
add
imul
xchg
cli
sub
mov
jne
or
(bad)
pop
jae
adc
or
fild
cmps
inc
ja
or
mov
xor
add
icebp
adc
test
mov
ror
push
and
jl
adc
adc
push
leave
and
xor
jge
lahf
adc
mov
cmp
frstor
sahf
and
enter
push
xchg
jmp
and
int
(bad)
dec
fcmovnu
inc
in
cmc
test
loop
jno
push
ret
outs
push
call
pop
adc
dec
call
in
loopne
ja
ds
cmp
xchg
cmp
sub
test
call
push
adc
clc
cwde
test
test
xchg
sbb
out
pop
pop
das
mov
dec
sub
test
xor
cs
imul
iret
xor
jmp
inc
push
sub
dec
aaa
les
sbb
and
rol
fist
aas
jg
mov
push
xchg
xchg
cmp
or
push
xchg
pop
xchg
jo
lods
stc
xchg
push
mov
sti
dec
mov
sub
push
ins
sub
cmp
nop
push
in
adc
cdq
xchg
inc
or
xlat
imul
idiv
jo
mov
push
ret
cs
sub
pop
add
inc
sahf
xor
inc
adc
fpatan
mov
imul
leave
iret
dec
retf
add
popa
xchg
cs
inc
in
push
dec
loopne
jb
or
movs
pop
inc
mov
cdq
dec
mov
cmp
rcr
jl
jae
or
retf
in
imul
pop
sbb
fmul
fwait
sbb
add
jp
push
out
jmp
es
inc
mov
aam
dec
jp
fcom
pop
rcl
hlt
clc
cmp
add
add
sub
lods
loopne
scas
nop
sbb
push
mov
fisttp
loopne
cld
xchg
or
jg
xchg
mov
sub
pop
nop
mov
mov
test
les
(bad)
iret
fnstenv
pop
(bad)
jl
xor
(bad)
add
sub
mov
pop
div
cmps
ret
lods
(bad)
cmp
out
enter
dec
pop
and
int
adc
push
xchg
fisubr
int3
adc
mov
cmp
lahf
repnz
aam
sbb
lods
loope
pop
cdq
mov
and
fiadd
(bad)
ins
(bad)
scas
jne
sub
add
dec
imul
sbb
in
add
mov
mov
sbb
push
jno
adc
inc
add
cmp
mov
inc
inc
es
cld
adc
out
sub
inc
mov
stos
call
lds
mov
mov
inc
jp
loope
inc
popa
repz
cmp
repz
in
mov
(bad)
scas
push
sbb
mov
pop
push
sbb
test
pop
int3
sti
cli
cld
inc
inc
xor
jbe
les
imul
jns
sub
addr16
push
imul
mov
xor
sub
test
push
sbb
xor
and
jl
loop
add
aad
fsincos
jge
jle
and
lea
add
push
(bad)
out
inc
call
dec
pusha
(bad)
jnp
lds
mov
mov
mov
mov
add
in
rcl
rcl
mov
inc
pop
jbe
ret
fdiv
adc
sub
push
sub
jmp
sub
cmps
pop
pusha
lds
dec
mov
data16
call
in
mov
mov
fdivr
jmp
lds
js
repnz
adc
inc
loope
mov
icebp
or
fld
pop
mul
sub
test
cmovns
dec
shr
(bad)
adc
jg
out
je
pop
cmps
arpl
ds
ror
cmp
mov
push
jp
sahf
lahf
jbe
xchg
add
and
dec
cmp
bnd
sub
adc
in
in
mov
fs
iret
cmps
test
clc
sub
xor
sbb
shl
mov
jp
fs
out
ins
fisub
dec
ins
xchg
stos
data16
frstor
cmp
cmp
loope
fucomip
(bad)
leave
fild
dec
lock
inc
mov
jge
mov
int3
xchg
(bad)
dec
fstp
aaa
loop
xchg
inc
sbb
aaa
and
ret
mov
das
mov
mov
fs
(bad)
outs
xor
and
imul
scas
mov
mov
cmp
or
mov
xchg
sub
jl
push
aam
fcmovnbe
cwde
cmps
push
dec
lock
daa
mov
aaa
xchg
jb
fdivr
leave
mov
test
mov
fisubr
jmp
call
loope
lds
lods
enter
inc
adc
pop
imul
in
out
mov
test
mov
and
mov
popa
cwde
jb
sbb
mul
stos
adc
std
pop
cmp
push
sbb
rcl
dec
mov
cli
test
repz
into
mov
push
inc
and
(bad)
adc
mov
scas
dec
adc
mov
add
adc
(bad)
jmp
xchg
pop
shl
inc
push
mov
dec
arpl
test
hlt
iret
add
div
xor
mov
jae
xchg
jecxz
test
or
dec
jge
sub
ja
out
int3
pop
mov
call
cmp
pusha
in
in
cmp
mov
jecxz
push
cmp
outs
add
push
(bad)
push
sub
mov
cmp
dec
jmp
mov
sub
cmp
push
aaa
ret
cmc
dec
mov
xchg
pusha
sbb
(bad)
xchg
or
mov
outs
shl
xchg
sbb
popf
push
or
int3
inc
imul
fisub
and
(bad)
xlat
push
cmps
pop
xchg
fs
push
mov
lock
ins
pushf
and
fcom
leave
pop
cdq
sub
pop
cdq
push
or
mov
test
mov
xor
or
inc
(bad)
pop
je
ret
mov
out
mov
mov
mov
inc
dec
pop
cs
aas
mov
mov
lea
retf
in
imul
and
sub
lea
js
mov
mov
mov
ret
clc
ret
fimul
int3
popa
test
mov
cs
adc
ds
xchg
(bad)
lock
add
in
and
fcomp
sti
inc
mov
lods
mov
xchg
(bad)
lahf
dec
xchg
or
fwait
xchg
and
shr
push
push
fisttp
ret
aas
mov
xor
jg
test
mov
repnz
ss
aas
ret
pushf
ja
mov
sub
sub
call
bound
push
loope
push
test
shr
das
test
dec
fidiv
mov
mov
dec
(bad)
inc
pop
jnp
or
es
push
and
jnp
jo
mov
jae
pop
lds
mov
lds
sbb
(bad)
cli
clc
cwde
stc
cmp
xor
(bad)
arpl
aaa
in
push
repz
jle
arpl
push
neg
jmp
jg
adc
in
push
repnz
das
call
xor
lea
div
mov
inc
nop
push
add
jmp
clc
int
push
push
xbegin
or
xchg
fstp
sbb
xchg
imul
rol
pop
add
push
or
dec
stos
mov
add
lods
or
dec
stos
mov
dec
cmps
rcl
std
mov
das
cmp
xchg
pop
mov
add
cmp
xor
stos
cmp
or
fwait
test
add
scas
call
push
call
sbb
xor
mov
cmps
repz
fwait
adc
bound
lock
inc
in
sub
out
data16
push
jge
sti
cli
enter
cmps
push
sub
mov
enter
out
(bad)
aad
neg
push
ret
cmp
and
pop
cmc
jnp
xor
xchg
xchg
add
in
add
(bad)
pushf
mov
push
dec
stc
repz
sub
pop
adc
lahf
sub
sbb
mov
loop
inc
jae
rcl
test
xor
(bad)
xor
pop
fwait
bound
jb
mov
fwait
adc
ds
dec
cmp
mov
int3
mov
repz
int
dec
stos
ja
clc
push
fst
sbb
mov
jbe
push
shl
push
adc
mov
repz
js
mov
pushf
call
lea
out
jle
xor
out
ins
push
jns
fisub
mov
jae
int
jbe
cmp
mov
mov
push
dec
aaa
(bad)
or
test
in
cmp
dec
out
iret
stc
mov
xlat
push
and
mov
add
mov
xchg
retf
xchg
cld
or
out
in
or
ds
ficomp
cmps
scas
mov
into
xlat
dec
test
fidivr
fisttp
adc
cmp
mov
cli
cmp
jnp
daa
inc
ins
mov
or
adc
inc
aaa
jnp
xchg
mov
(bad)
(bad)
pop
shr
(bad)
dec
dec
jmp
(bad)
stc
push
add
sti
add
mov
dec
xor
fsubr
xchg
cmc
cmps
add
and
xchg
addr16
ins
sub
stos
xor
xor
mov
aad
ins
jg
mov
jb
clc
and
pop
lods
hlt
inc
cmps
in
outs
xchg
fimul
and
push
jnp
fsubr
inc
out
jb
mov
push
in
jecxz
sub
pop
pop
scas
and
sbb
in
test
inc
(bad)
cmp
adc
inc
clc
ret
inc
ja
lea
stos
sub
lea
xchg
pop
push
mov
cmp
jno
test
and
in
jns
leave
outs
cmp
stos
cmps
mov
jne
push
adc
mov
mov
sub
or
imul
add
jo
(bad)
repz
mov
scas
test
shr
sbb
js
jmp
mov
ja
push
jmp
pmulhuw
cmp
test
aad
inc
test
out
stos
xchg
inc
add
popf
les
das
in
shr
lock
sbb
sub
int
jnp
sbb
dec
icebp
repz
ror
mov
xlat
xchg
jns
sub
jge
shr
fldpi
je
retf
out
jo
(bad)
adc
rcl
test
jecxz
scas
jmp
mov
xchg
xchg
sub
cmc
cdq
cmps
cmp
enter
cmps
cmp
rcl
and
inc
ins
xor
push
xor
sub
dec
push
push
fbstp
jne
add
cmc
in
jmp
lock
sti
xchg
mov
(bad)
enter
xchg
push
imul
cmps
aad
mov
mov
cld
inc
fidivr
int3
call
jg
daa
dec
stos
mov
out
or
pop
jmp
push
push
pushf
jmp
mov
rcpps
push
test
push
and
mov
push
xor
es
repz
and
fsubrp
leave
dec
xchg
pop
retf
jno
(bad)
out
pop
sbb
ficomp
jae
movs
mov
and
retf
mov
sar
pushf
mov
bound
pop
inc
push
adc
les
test
inc
notrack
jo
inc
fstp
in
(bad)
retf
and
call
dec
inc
cmp
pop
pop
cmp
out
jecxz
shr
imul
ret
fwait
or
rdtsc
stc
and
jg
and
push
inc
and
push
rcl
xor
xor
leave
jecxz
pop
mov
rol
stc
xor
mov
pushf
cmp
arpl
scas
(bad)
fistp
mov
cdq
pop
dec
mov
dec
outs
jae
dec
or
mov
daa
add
imul
xchg
push
ins
push
pop
imul
int3
imul
jl
in
cmp
loopne
push
les
mov
jne
outs
in
test
rcr
pushf
sub
sub
dec
mov
mov
pop
fcom
les
loope
adc
pop
push
jl
jmp
into
add
push
add
jae
ficom
sbb
(bad)
xor
hlt
std
cwde
dec
enter
fnsave
pop
in
(bad)
pop
(bad)
jp
sahf
xor
jge
cmp
addr16
push
loop
jl
test
pop
test
outs
mov
lea
jo
(bad)
and
mov
xor
(bad)
dec
push
or
sahf
outs
or
test
sbb
dec
ins
mov
call
or
xor
adc
repz
addr16
popa
xchg
lods
ficomp
hlt
mov
ror
xor
das
mov
cli
shr
inc
ret
push
loop
cs
sbb
gs
inc
ins
add
pop
xor
pop
or
and
cld
dec
sub
adc
sub
dec
sub
movs
jl
scas
pop
jecxz
pop
dec
dec
dec
mov
push
ja
loope
shr
mov
mov
inc
xchg
and
retf
mov
shr
push
jno
adc
stos
jecxz
adc
cmp
cs
jmp
aaa
pop
adc
cmp
lods
or
shr
sbb
or
jg
ja
adc
cmp
xlat
mov
in
rcl
sbb
adc
popa
xor
xchg
sub
mov
sti
add
xor
imul
adc
add
or
xor
sar
stos
sub
fnsave
sub
cwde
int
dec
jmp
cwde
jp
or
retf
sbb
xor
ins
outs
adc
call
push
imul
xor
xor
mov
and
mov
adc
pop
and
add
shl
imul
sti
push
pop
xlat
loope
and
add
mov
and
jbe
add
add
mov
push
jno
mov
je
nop
and
dec
ins
lds
mov
ror
mov
lock
fdivr
or
inc
pand
pop
test
icebp
or
cmpps
fdiv
push
movs
sbb
inc
sub
inc
xor
adc
scas
dec
inc
and
movs
mov
add
(bad)
outs
adc
popa
add
ins
sbb
in
jae
dec
int3
cmp
shl
push
xor
inc
jnp
hlt
gs
pop
aam
push
xchg
movs
jo
cmp
loopne
cmc
(bad)
cmp
mov
mov
sti
push
xchg
pushf
repnz
or
test
xor
inc
ret
mov
or
xor
fwait
leave
hlt
(bad)
das
xor
mov
test
lock
ja
sbb
sbb
call
scas
cdq
add
inc
nop
xchg
or
xchg
pop
imul
xchg
aaa
enter
push
pop
xchg
push
dec
mov
in
sbb
or
stos
mov
cld
mov
fisub
aad
in
in
push
(bad)
adc
or
pop
pop
cmp
xchg
mov
push
or
and
or
aad
out
push
inc
and
cdq
or
sub
push
or
repnz
ret
cmp
call
jo
push
js
sub
test
les
sbb
xor
fnstenv
push
adc
repz
pop
cdq
in
bound
aad
xor
call
in
add
sbb
test
js
dec
test
cmps
fbld
dec
xor
bound
jge
mov
pop
or
jb
test
push
call
adc
mov
ins
dec
movups
mov
push
ja
push
ret
das
pop
movs
push
or
pop
movs
sbb
and
adc
lock
sbb
sub
or
sub
and
sub
xor
xchg
jecxz
out
imul
dec
mov
inc
movq
mov
pop
loope
dec
push
xchg
out
mov
pop
inc
loopne
xor
(bad)
push
arpl
xchg
sub
(bad)
loope
cmp
add
adc
pusha
sub
outs
inc
imul
cmp
sahf
jno
mov
push
pushf
mov
mov
pop
loopne
popf
in
pusha
scas
pop
aaa
fsubr
or
cmp
ins
cmc
stos
mov
jmp
xchg
push
and
dec
(bad)
loope
push
push
mov
mov
dec
gs
mov
inc
cmp
xchg
mov
push
lock
loope
stos
cmp
and
bound
mov
jne
jns
ss
dec
dec
sar
mov
dec
mov
mov
inc
clc
sub
je
dec
ret
mov
jle
(bad)
nop
js
clc
mov
nop
enter
cmps
(bad)
jp
cs
test
in
push
ins
dec
sub
push
sub
push
and
leave
and
test
cmp
fidiv
xchg
fwait
shl
sahf
pushf
push
imul
hlt
call
pop
test
jnp
cwde
or
and
in
xchg
lods
fist
lods
push
cmp
pop
data16
dec
ret
(bad)
aam
sbb
cmp
rol
(bad)
out
push
leave
test
xchg
scas
clc
or
or
cmps
dec
cmp
add
pop
add
adc
mov
aam
out
dec
sbb
dec
pop
inc
ins
scas
and
sbb
or
add
nop
popf
sbb
cld
mov
(bad)
jmp
cwde
mov
dec
(bad)
test
lock
pop
inc
mov
out
ss
add
dec
or
imul
xor
(bad)
fcomip
sti
lds
ficom
popa
outs
xchg
sub
and
push
cmp
mov
mov
gs
fisubr
lods
push
cs
xchg
cmp
mov
popf
cmps
mov
in
adc
loope
push
loop
and
add
adc
pop
jl
push
and
out
mov
pop
ret
mov
outs
sub
xchg
push
retf
stos
dec
jmp
inc
push
bound
mov
ficomp
pop
out
xchg
or
repnz
xchg
adc
mov
pop
repz
stc
fmul
and
iret
cmp
jg
div
mov
mov
icebp
jnp
sub
and
or
and
pop
or
sub
call
xchg
fcom
xchg
addr16
inc
movs
iret
ret
out
lea
add
arpl
mov
mov
mov
pusha
sub
pop
add
pop
ds
push
lea
(bad)
in
adc
(bad)
mov
xchg
shl
adc
mov
pop
mov
mov
xlat
mov
ins
mov
(bad)
ficom
pusha
jg
xchg
xor
and
and
mov
push
sti
add
cmp
cmp
xor
sahf
ss
loop
xlat
es
pop
push
gs
outs
cmp
xor
mov
and
jnp
jbe
leave
(bad)
fidivr
retf
sahf
pop
and
adc
int
jns
cmp
xor
push
jnp
mov
iret
push
scas
pop
(bad)
mov
fldcw
dec
mov
scas
out
idiv
rcl
cmp
iret
cmp
sub
aaa
mov
mov
aaa
stos
mov
daa
popf
(bad)
cmp
inc
inc
pop
in
jae
(bad)
adc
pop
xchg
xor
jmp
jno
std
inc
mov
fmul
mov
mov
ja
xchg
cmp
cmps
daa
sbb
loope
hlt
jge
push
cs
mov
add
sti
in
stos
fistp
aaa
movs
call
aad
fdiv
pop
xchg
retf
call
pop
loopne
xor
jo
push
mov
jp
mov
cmp
in
pop
dec
mov
mov
mov
dec
ds
or
int
adc
mov
scas
ds
cdq
or
push
lods
pop
mov
jb
mov
inc
cld
dec
xor
cmp
pusha
repz
outs
pushf
cmp
mov
dec
mov
inc
cmp
inc
sub
and
sub
pop
jge
sbb
retf
dec
or
adc
jmp
(bad)
xchg
(bad)
sbb
pop
int
and
add
or
shl
stc
sar
pop
adc
mov
mov
cmp
sub
adc
imul
movs
sub
movs
fisttp
lods
jne
dec
repz
or
(bad)
adc
test
mov
xchg
sar
(bad)
cld
movs
(bad)
xor
dec
neg
lea
fst
or
aad
jle
je
cld
mov
dec
jbe
mov
jge
(bad)
icebp
lock
dec
lea
mov
fstp
mov
sahf
inc
ss
dec
imul
repnz
aaa
ja
out
pop
mov
or
xor
and
sbb
adc
cmc
in
mov
lea
ror
xor
iret
test
test
jle
cld
inc
(bad)
fadd
stc
inc
jl
pop
pop
(bad)
cmp
cmp
mov
jno
movs
jno
jg
cmc
inc
icebp
jl
(bad)
mov
dec
pop
cmc
fimul
nop
les
cmps
push
push
mov
sub
cmp
sbb
fwait
jmp
push
or
xlat
push
xor
enter
stos
aaa
cmp
dec
cmp
out
inc
or
cmp
adc
fbstp
mov
movs
jb
fmulp
and
ror
lea
test
arpl
imul
pop
jge
mov
movs
jo
mov
sub
cwde
dec
sar
call
xchg
inc
shl
arpl
cmc
dec
or
sbb
mov
loopne
rol
dec
outs
fsub
scas
and
iret
sti
cmp
and
dec
push
adc
jecxz
mov
mov
aad
in
mov
xchg
pop
mov
scas
shr
push
sbb
dec
and
ffree
mov
rcr
xchg
mul
xchg
mov
rcr
bound
mov
or
xor
cwde
test
(bad)
lahf
div
ins
out
jb
or
leave
inc
(bad)
mov
loope
pusha
pcmpeqd
pop
or
aam
int
inc
je
test
clc
aam
lahf
jmp
aad
jb
mov
pop
cmc
ret
vpslld
fild
and
adc
mov
mov
in
xchg
mov
pop
(bad)
(bad)
adc
es
push
jge
pop
jp
aaa
sbb
jmp
and
repnz
pushf
imul
dec
cli
or
xor
into
cmp
mov
jbe
xchg
cmp
xor
add
sbb
imul
das
jne
mov
jmp
mov
and
jne
ret
fst
or
data16
leave
sub
jo
mov
mov
jecxz
fisttp
ja
dec
ret
xor
mov
xchg
xlat
scas
int
mov
outs
scas
jns
xor
idiv
mov
jb
push
in
(bad)
pop
or
std
stos
xor
(bad)
in
xchg
fisub
fnstsw
sub
push
lahf
and
fs
sub
ret
aaa
fmul
pop
mov
inc
add
push
pop
sbb
sbb
inc
scas
sbb
xchg
inc
cli
pop
cwde
sub
cwde
push
cmps
test
mov
add
int3
leave
add
push
dec
sub
mov
fsub
lods
sbb
pop
test
sbb
sbb
mov
stos
shl
rol
sub
shr
mov
add
ins
mov
shr
sbb
mov
mov
lods
test
and
cmp
popf
mov
push
ja
icebp
inc
add
ins
cmp
sub
inc
and
or
int3
stc
xor
sbb
push
loopne
push
xor
and
jle
inc
xor
pop
fadd
jae
jbe
xor
or
(bad)
outs
mov
out
xor
push
jmp
jg
pop
fcom
xchg
pop
(bad)
sbb
xchg
les
lahf
rcr
push
jmp
dec
mov
loope
adc
mov
in
cmp
add
in
mov
int3
jo
push
cwde
int3
fild
and
les
outs
mov
loop
data16
lahf
inc
or
(bad)
cmp
loopne
les
popf
mov
ja
int3
inc
cmps
adc
ror
push
push
dec
add
jae
pop
push
das
inc
in
loop
adc
sub
add
cs
pop
xchg
test
inc
pop
mov
jne
rcl
push
xor
jecxz
jge
jbe
sbb
cli
add
daa
(bad)
mov
std
cmps
mov
in
in
mov
jb
(bad)
test
test
or
fsub
pop
pop
sub
xor
lods
mov
push
jbe
mov
rcl
jle
and
jecxz
fs
sbb
and
hlt
mov
inc
arpl
mov
repnz
in
aad
inc
pop
mov
mov
xchg
shl
loopne
xor
je
xchg
and
popf
daa
cmp
loopne
cmp
mov
ror
js
mov
lahf
out
cmp
pop
push
inc
sub
enter
inc
cmp
or
xchg
fdivr
pop
enter
loope
bound
xchg
daa
sub
out
adc
or
(bad)
jp
mov
or
cmp
icebp
enter
mov
sbb
pushf
out
push
add
sahf
or
movs
adc
stc
push
out
loope
or
mov
aas
in
mov
mov
not
retf
in
mov
mov
mov
clc
and
arpl
ss
ss
(bad)
push
jne
xor
das
xchg
cmc
add
cld
jmp
loopne
inc
mov
add
jno
pushf
mov
cmc
sbb
ds
lods
jbe
cmp
(bad)
add
lock
add
test
mov
aad
jns
dec
sbb
shr
mov
inc
popf
fnsave
lea
inc
mov
sar
push
not
icebp
pop
loop
lods
rcr
fild
push
xchg
cmp
sub
xor
js
dec
mov
or
out
mov
xor
jbe
shl
inc
jecxz
test
mov
dec
inc
int3
add
pop
std
and
push
or
xor
movntq
mov
imul
imul
cmp
sbb
call
and
add
mov
xor
mov
mov
pop
sbb
ret
mov
jnp
out
xchg
jmp
cs
fstp
cmc
std
ja
cmp
loope
std
ins
adc
aas
cmps
xchg
lods
cmp
pop
(bad)
mov
pop
or
inc
in
das
pop
aaa
aam
and
add
push
scas
jne
mov
dec
mov
xchg
inc
jo
ins
xor
adc
scas
fbld
(bad)
(bad)
(bad)
loope
xchg
ja
fstp
sbb
adc
outs
inc
fbstp
xor
push
rol
shl
add
es
stos
aas
clc
aaa
shr
ins
dec
mov
imul
xchg
outs
fiadd
push
sub
out
sub
mov
mov
rcr
ror
lahf
adc
cmc
(bad)
cmc
pop
mov
jmp
inc
jne
sbb
movd
fs
bound
mov
push
pop
xchg
pop
scas
xlat
xor
inc
cvtdq2ps
and
in
or
mov
cmps
pop
and
sbb
test
stc
adc
dec
dec
pop
inc
shr
int
inc
movs
inc
int
inc
sar
cwde
sub
jl
adc
sahf
mov
pop
clc
sub
pop
hlt
or
fnsave
(bad)
fist
cmp
adc
mov
fistp
mov
stos
cwde
(bad)
or
xlat
sti
xchg
inc
retf
xchg
ja
pushf
outs
mov
or
aad
popf
movs
fisubr
out
cli
std
mov
sahf
clc
xor
push
cdq
inc
xchg
sub
push
pop
jg
jp
cmp
xor
push
lds
fisubr
cmps
(bad)
and
iret
ja
mov
test
out
iret
sbb
shr
dec
inc
cdq
push
dec
pop
and
sub
fnstsw
shl
inc
movs
shl
fcmovnbe
mov
pop
xchg
mov
push
jmp
(bad)
fdivr
fbld
sbb
cmp
or
mov
sub
lahf
push
xchg
cmp
in
arpl
push
add
and
mov
mov
movs
dec
push
dec
add
(bad)
pop
scas
jne
loop
jno
pop
fdivr
push
inc
mov
(bad)
imul
daa
adc
rcr
cmps
mov
out
frstor
mov
pushf
aam
outs
repnz
inc
sbb
jecxz
repz
out
adc
(bad)
mov
sbb
inc
leave
ret
xor
dec
fldcw
sbb
out
jno
test
pop
mov
es
mov
ins
add
(bad)
(bad)
mov
sub
data16
es
call
push
cld
dec
sar
stos
call
sbb
push
ss
stos
mov
sub
mov
out
(bad)
out
addr16
sti
into
or
adc
dec
inc
jl
inc
or
push
cwde
mov
xor
cwde
call
hlt
cld
jp
out
add
pop
hlt
ret
lods
pop
jbe
aam
jle
cs
pop
imul
lock
jg
fisttp
add
(bad)
push
mov
sti
cmp
dec
stc
mov
iret
nop
jg
xchg
sub
or
arpl
movs
call
sub
mov
adc
pusha
and
pop
sahf
movs
pop
pop
inc
ror
dec
add
lods
fistp
xor
push
adc
push
mov
adc
call
icebp
xchg
jg
jecxz
(bad)
into
sbb
pop
jmp
movsx
mov
jp
push
ror
sahf
xor
xor
pop
in
inc
js
fimul
dec
jno
mov
call
sahf
push
mov
inc
cmc
jecxz
adc
retf
outs
dec
add
lahf
mov
inc
fsubr
push
shl
fs
lods
call
outs
repnz
dec
cdq
fimul
add
pop
adc
or
pop
fisubr
push
jp
js
jns
aad
sbb
mov
mov
stc
(bad)
das
jbe
lock
push
fdiv
dec
push
push
(bad)
fmul
out
fnstsw
loope
imul
cmp
stc
mov
push
pop
sahf
and
out
push
stos
movs
or
movs
add
jnp
ud0
cs
cmp
push
stos
xchg
nop
aas
fcom
pop
push
mov
push
movs
xchg
xchg
ret
inc
jmp
xchg
mov
or
push
sbb
jo
mov
sub
pop
mov
ins
mov
dec
xor
lea
addr16
aad
test
and
test
int3
int
sub
pop
out
mov
aad
pop
mul
scas
push
cmp
push
loope
stc
inc
xchg
jge
movs
sbb
loop
push
out
xor
add
sti
(bad)
xchg
int3
fsubr
inc
push
sahf
jle
and
les
int3
pushf
lea
sbb
pop
mov
sbb
cmp
xor
sti
mov
dec
bnd
mov
das
sub
push
test
(bad)
scas
cs
sub
in
jo
xor
pop
fdivr
mov
pop
iret
pop
enter
xchg
sbb
and
push
add
ja
in
pop
js
sub
int3
jecxz
cmp
mov
pop
mov
sbb
inc
add
adc
pop
add
push
mov
test
repz
pop
mov
sub
sub
jg
add
pusha
pop
daa
and
pop
sub
rcr
cmps
pop
mov
xchg
loopne
mov
mov
(bad)
xchg
jmp
push
ret
ficom
dec
call
cld
xor
jmp
dec
jb
outs
out
fiadd
jmp
stos
mov
call
pop
arpl
push
mov
pop
inc
push
data16
lock
push
inc
add
vpmulhw
fst
sbb
into
dec
sbb
and
in
cld
cli
lock
push
das
mov
push
test
adc
push
mov
xor
xchg
mov
retf
sub
jns
jb
jb
je
in
jo
mov
inc
out
jl
jnp
jae
push
inc
ins
dec
ret
mov
bound
sbb
push
lds
jo
ret
pop
jb
cmp
inc
or
loop
jecxz
push
lea
cmp
cld
jns
fwait
pop
call
loopne
xor
movs
inc
std
inc
pushf
rcr
sbb
retf
in
lock
mov
fstp
pop
or
stos
push
and
(bad)
push
lahf
clc
mov
call
xor
lods
and
std
add
sbb
popa
mov
ss
outs
aaa
add
xchg
std
int
cmp
std
(bad)
jmp
or
das
push
retf
popf
dec
sbb
lods
sub
repnz
int
jle
jg
iret
mov
cs
imul
and
sub
pop
xor
sub
mov
movs
ds
mov
pop
push
je
push
xor
cli
sbb
push
out
add
and
dec
xor
jp
mov
adc
dec
loope
sbb
dec
pop
or
or
js
pushf
lods
push
lahf
imul
dec
stos
cmp
jbe
push
xor
cmps
mov
loop
and
or
adc
adc
add
icebp
clc
jns
push
mov
inc
(bad)
add
retf
mov
xchg
push
push
inc
aas
popf
mov
sbb
fldenv
xor
out
addr16
je
inc
jns
mov
adc
icebp
sub
cmp
sub
mov
ret
xchg
xchg
lock
dec
push
outs
imul
and
xor
xor
xchg
imul
jae
ret
in
jno
lods
loopne
mov
push
dec
imul
out
inc
in
and
imul
repnz
test
fnstsw
pop
add
dec
repnz
push
rcr
xlat
movs
and
and
add
cmp
push
add
or
and
jmp
adc
pop
outs
lahf
lock
cmp
jae
push
gs
js
call
imul
inc
vcvtps2pd
mov
add
pop
adc
or
sbb
sbb
sub
fimul
pop
dec
xchg
shr
icebp
mov
out
jmp
fmulp
mov
in
pop
sbb
in
sbb
pop
pushf
jae
jmp
int
jae
push
les
mov
and
push
call
mov
mov
xchg
and
xor
cmp
fist
dec
jp
pop
xchg
jp
cli
dec
jl
in
fwait
arpl
div
sub
xchg
adc
sub
sbb
(bad)
shr
sar
imul
stos
push
iret
mov
fidiv
popf
jno
out
inc
ret
mov
sub
jo
out
inc
das
mov
sub
mov
aaa
push
jnp
pop
ret
or
js
mov
mov
add
into
movs
xor
into
icebp
mov
(bad)
cmp
add
push
mov
xchg
imul
jno
xlat
mov
(bad)
mov
mov
sub
sti
sub
cmps
pop
or
jmp
adc
cld
push
mov
cmp
jo
dec
repz
cmp
xchg
add
jmp
or
or
xchg
(bad)
jmp
movs
int3
pop
mov
es
popf
call
dec
xchg
fwait
add
call
jno
cmp
add
cwde
cwde
sub
sbb
test
sbb
cmp
xchg
js
dec
add
ret
fcomp
sbb
adc
or
shr
sub
cmp
lock
add
lock
dec
ror
hlt
push
add
xchg
fisttp
mov
mov
mov
and
ret
(bad)
push
fmul
pop
ss
xchg
xchg
sbb
pop
shl
retf
clc
cwde
push
psubw
lods
sbb
bound
(bad)
sahf
jg
push
cli
push
sbb
xchg
fistp
hlt
pop
mov
sbb
sub
xchg
mov
(bad)
mov
jb
pop
adc
out
and
push
inc
popa
mov
xchg
and
test
ret
out
lock
adc
adc
mov
fidivr
xlat
aad
mov
inc
inc
repnz
push
inc
or
imul
loopne
push
inc
sahf
scas
cmp
loop
xor
popf
adc
mov
test
xchg
adc
pop
xchg
add
xchg
std
mov
int
jb
jmp
mov
js
das
and
aaa
in
jg
xchg
repz
cmp
cmp
inc
or
mov
mov
mul
js
lods
jg
aam
dec
jle
pushf
add
push
cwde
ja
jbe
hlt
lods
mov
sub
stos
out
ds
mov
xchg
push
cmp
push
jle
push
xor
(bad)
out
in
cmp
mov
in
xchg
ss
sbb
mov
pop
ss
and
fistp
cmps
push
jnp
pop
mov
jmp
add
aad
lahf
mov
js
dec
mov
ss
aad
rol
xor
outs
arpl
jg
xchg
xchg
mov
add
dec
xchg
pop
test
xor
mov
test
jb
outs
daa
movs
dec
lea
popa
enter
das
push
sub
dec
push
and
add
nop
sub
inc
sbb
mov
jge
rcl
rcr
(bad)
jnp
ja
stos
push
aaa
inc
xor
pop
ins
sub
int3
push
arpl
mov
dec
push
gs
int3
clc
mov
fnsetpm(287
mov
repz
push
rcr
(bad)
pop
xchg
out
xlat
adc
xchg
repnz
(bad)
cmp
outs
test
and
loope
cmp
cld
and
inc
in
shl
mov
push
jge
and
mov
pop
clc
ret
lock
mov
cmp
sahf
js
jle
clc
loop
fst
add
mov
mov
fild
sti
or
xchg
aam
inc
in
add
mov
push
mov
mov
aas
iret
xchg
(bad)
aad
xor
retf
mov
xor
jo
xor
rcr
jno
popa
cmp
jns
xchg
rol
inc
pop
push
movs
inc
lock
loope
arpl
in
cld
sbb
add
mov
pop
neg
cmp
shr
sub
mov
dec
imul
lods
xor
or
inc
cmc
or
push
mov
dec
out
mov
loope
and
test
mov
mov
mov
add
jg
imul
xor
sub
mov
xchg
cli
int3
and
xlat
ds
pop
dec
mov
xor
fcmovnbe
mov
not
pop
pop
push
jecxz
pop
mov
out
ins
mul
xchg
test
adc
and
fwait
add
jmp
(bad)
fwait
cwde
adc
mov
push
or
loop
call
xchg
and
mov
rol
or
push
cli
fidiv
js
cmps
adc
fcom
mov
lock
popf
inc
jns
push
mov
mov
pop
(bad)
pop
outs
repnz
cmps
into
pop
pusha
mov
pushf
lahf
xchg
pop
cmp
sbb
cmp
inc
xchg
push
push
movs
xchg
lock
xchg
adc
mov
push
mul
xchg
sub
push
mov
out
jnp
aam
pop
jo
mov
push
mov
stos
cmp
xchg
inc
and
cmp
mov
es
ds
mov
int
lods
mov
lock
loopne
mov
clc
and
xor
mov
or
mov
cwde
inc
push
fild
fwait
test
out
pop
mov
jmp
out
stc
pop
fcomp
dec
lahf
fmul
daa
or
je
lods
mov
iret
or
lods
fist
xor
lds
scas
mov
iret
jmp
fs
in
mov
push
mov
jne
jmp
div
push
or
jecxz
pop
imul
mov
ss
jg
rcr
test
int3
pop
jp
or
clc
mov
pop
clc
sub
arpl
aas
mov
test
sar
sti
inc
shl
xchg
inc
and
icebp
aad
pop
scas
in
js
lock
add
xchg
sti
or
clc
or
fldcw
scas
pop
sbb
pop
retf
and
fcom
xchg
ret
jle
stos
cmp
(bad)
sub
test
dec
test
fist
inc
mov
test
nop
nop
fisub
sahf
jmp
pop
js
fcom
inc
mov
push
push
jbe
rcl
add
pop
jle
inc
ins
push
cmp
lahf
dec
jecxz
sub
mov
in
jmp
pop
mov
in
inc
and
ins
repz
rol
jmp
loop
sar
push
xchg
outs
inc
mov
es
scas
shl
jge
test
xor
jbe
adc
mov
dec
ja
mov
cmp
aaa
pop
call
sbb
rol
pop
add
inc
pop
lock
pop
xor
jno
cmc
xor
add
sub
cld
sbb
mov
push
or
inc
add
cmp
data16
cs
sbb
inc
cdq
adc
repz
sub
xchg
xor
and
xchg
mov
ja
cdq
pop
mov
cmc
mov
out
loopne
out
jl
arpl
shl
test
frstor
mov
movs
xor
cmps
cmps
mov
mov
sub
pop
nop
iret
fisttp
sub
js
mov
mov
pop
ja
xchg
lea
into
push
pop
shl
push
jge
jbe
(bad)
lea
or
xchg
jecxz
in
xor
gs
xor
dec
jno
xor
out
jl
xchg
pop
sbb
or
sbb
push
xchg
cmp
aaa
push
stos
inc
aas
pusha
popf
cmp
push
push
xchg
jnp
cmp
push
fistp
bound
sar
mov
xor
xchg
xlat
and
jle
inc
loope
jge
mov
fcomi
and
sub
mov
rol
pop
mov
(bad)
gs
mov
add
bound
mov
pop
es
sub
sub
movs
mov
mov
adc
adc
pop
sar
jo
enter
jo
pop
mov
and
push
shl
dec
dec
ficom
xchg
loopne
fnstcw
pop
daa
pop
mov
fcmovnbe
rcr
mov
or
pop
and
retf
or
inc
sar
cmp
pusha
sti
pop
xor
imul
loop
add
or
mov
data16
mov
dec
fdivr
(bad)
imul
arpl
adc
sub
jbe
(bad)
jmp
dec
mov
jae
mov
shl
xchg
mov
cmp
adc
jmp
inc
pop
div
pop
mov
mov
inc
inc
cmp
xor
les
add
jge
pop
outs
shl
mov
cmps
jae
(bad)
lock
or
xor
sub
lods
cmc
jns
call
xchg
in
mov
add
ret
ds
test
popf
imul
pop
scas
xchg
adc
xor
sbb
pop
dec
call
imul
cmps
idiv
test
(bad)
stc
lock
dec
mov
jecxz
sub
cmc
adc
or
rol
adc
mov
adc
(bad)
lea
xlat
outs
das
scas
scas
out
mov
enter
fst
sub
push
aam
xlat
(bad)
sbb
adc
inc
xor
xchg
retf
fs
xor
je
xchg
pop
bound
xor
sbb
lods
jno
shr
sub
imul
adc
call
lock
cmps
movs
sub
sub
inc
xor
dec
pop
es
in
call
repnz
or
shl
pop
or
cs
pop
std
mov
mov
out
(bad)
inc
and
cmc
icebp
in
clc
adc
mov
mov
push
dec
outs
scas
aas
not
imul
xchg
rcr
imul
xor
or
movs
jbe
scas
pushf
mov
popf
adc
cmc
int
push
push
popf
iret
stos
mov
add
mov
int
mov
jmp
mov
sar
xor
push
aas
stc
lds
adc
add
dec
aas
dec
cmp
test
inc
ret
inc
xor
sbb
push
push
dec
jl
int
inc
hlt
jg
pop
add
in
xor
push
jbe
loopne
out
mov
cmp
fisttp
adc
dec
jns
ret
inc
pop
std
(bad)
shl
mov
or
add
jne
data16
mov
imul
out
loope
dec
test
ss
pop
fwait
pop
movs
rcr
fnstcw
jno
sbb
xor
mov
ss
sbb
push
lea
add
push
add
jecxz
mul
popf
push
push
pop
push
cmp
pop
pop
fisub
dec
add
loopne
pop
daa
mov
test
inc
xor
(bad)
and
gs
in
repz
imul
scas
mov
in
cwde
jo
adc
dec
mov
add
sbb
jns
and
mov
pop
mov
cmc
bound
inc
xchg
jbe
stc
outs
cmps
xchg
scas
div
push
mov
and
mov
and
jge
les
sbb
xor
sub
and
cmps
cmp
dec
(bad)
sbb
jecxz
cld
dec
out
cli
push
jl
mov
cmp
jge
fwait
xchg
dec
lock
pop
int3
lock
mov
mov
ret
dec
mov
loope
mov
or
mov
adc
add
and
push
pop
call
test
cmp
enter
scas
pusha
repz
setns
xor
cld
ins
adc
inc
aad
mov
iret
adc
loop
imul
data16
sub
jge
retf
lds
xchg
inc
jge
mov
xchg
and
(bad)
in
sar
add
pop
mov
clc
and
inc
pop
je
sar
stos
fsub
dec
dec
and
lea
popa
test
in
mov
shl
jnp
ds
jge
imul
test
sahf
repz
fdivr
dec
xor
fs
test
inc
push
(bad)
in
push
aaa
test
loop
outs
ret
es
add
mov
mov
scas
adc
push
jge
cli
pop
dec
test
mov
mov
mov
cmp
push
and
sahf
arpl
add
ja
add
mov
jno
fcom
cmps
mov
dec
rcr
lods
push
adc
nop
xchg
movs
sub
mov
jbe
pop
cmp
outs
xchg
in
inc
and
dec
fidivr
pop
sbb
popf
xchg
and
movs
push
int3
inc
jecxz
inc
push
inc
xchg
sbb
and
pushf
loop
and
stc
cmp
das
iret
xor
dec
in
mov
jge
lods
dec
mov
sub
mov
jbe
nop
mov
push
jns
cmp
xor
adc
(bad)
or
cdq
shl
repz
mov
mov
ins
mov
data16
mov
inc
push
mov
and
call
fiadd
(bad)
fcomp
and
div
adc
mov
cli
pop
jne
fistp
sti
sbb
pop
retf
mov
test
out
popa
jne
xor
jmp
fs
aas
pop
xchg
adc
dec
adc
stos
ret
adc
pop
movs
xchg
cs
sahf
mov
add
retf
arpl
inc
pop
(bad)
push
sar
out
dec
faddp
xor
in
adc
mov
cmp
xor
leave
adc
xchg
cmps
mov
imul
scas
jl
(bad)
fs
rcl
aaa
sbb
dec
dec
lods
sub
pop
scas
mov
int3
push
cmps
cdq
stc
call
pushf
pop
sub
lahf
out
pop
inc
push
ret
push
movs
jns
fwait
mov
adc
inc
mov
xchg
callw
bound
inc
mov
imul
xor
pop
and
adc
mov
loopne
add
hlt
in
pop
icebp
adc
inc
xor
into
out
fnsave
pop
cli
mov
push
addr16
xchg
ror
or
call
imul
dec
and
popa
lods
bound
xchg
cmc
xor
ja
xor
xor
sbb
retf
add
fnstsw
stos
(bad)
loop
add
jno
fdivr
inc
mov
call
daa
pop
neg
jle
mov
gs
in
push
cmc
idiv
and
cmps
add
fs
cs
push
dec
and
sahf
push
xchg
adc
aaa
fimul
cmp
inc
mov
scas
mov
fadd
repnz
push
pop
jnp
add
mov
inc
xchg
idiv
es
mov
add
clc
dec
add
not
pop
jmp
ss
pop
iret
out
mov
cmps
scas
xor
cs
xor
cdq
xlat
xor
xor
add
add
dec
mov
add
clc
stc
retf
das
pusha
lock
xor
ficom
pop
sti
jbe
push
xor
inc
jmp
or
cmc
jl
push
or
mov
in
(bad)
fwait
test
xor
pop
jmp
jle
dec
cmps
inc
dec
(bad)
jg
int
lds
ret
call
push
push
scas
cld
outs
cwde
adc
jl
lods
test
mov
in
cmp
lods
fs
outs
mov
cmp
inc
dec
mov
mov
lahf
fcmovbe
xchg
aam
pop
mov
lods
or
mov
dec
adc
push
mov
int
repz
pop
add
mov
(bad)
or
mov
or
xchg
fimul
bound
mov
nop
push
xchg
sub
sub
dec
(bad)
movs
pop
push
xor
sbb
fcom
xchg
cmp
cdq
mov
inc
and
cs
xor
fild
xchg
movs
stos
cmps
retf
mov
or
sti
push
stc
adc
sub
popf
mov
mov
idiv
adc
jmp
sub
(bad)
xchg
les
adc
xlat
dec
stos
popa
mov
mov
test
add
dec
or
mov
cmp
add
cs
sub
xor
inc
adc
ret
mov
sbb
inc
push
xchg
sub
out
or
cmp
add
add
test
jo
sbb
fdivr
pop
cmp
fidivr
cmp
nop
or
push
test
loope
mov
and
jp
lods
jp
(bad)
cs
jo
movs
aas
clc
ret
adc
or
adc
inc
stc
stc
inc
mov
add
enter
xor
xlat
xchg
retf
or
and
push
and
inc
mov
cs
jmp
xor
inc
loope
cs
stos
lds
repz
inc
pop
iret
ret
sub
pop
sub
aaa
sti
stc
repz
(bad)
xor
cs
push
xchg
(bad)
jecxz
call
mov
add
xor
sub
cmc
and
cwde
cli
icebp
repz
pop
iret
(bad)
out
and
cmps
hlt
mov
loop
pop
sbb
jmp
dec
sti
jmp
sbb
jecxz
or
mov
retf
inc
aaa
jae
mov
out
push
push
daa
loope
mov
cli
mov
rol
sub
mov
sub
das
retf
fld
das
sti
xchg
addr16
std
fist
add
test
jne
stc
push
ss
mov
ret
cmp
xor
xchg
lock
sbb
sub
fnstenv
add
pop
(bad)
stos
icebp
xchg
sti
sub
lods
shl
dec
pop
call
xchg
cli
mov
adc
outs
inc
xchg
shr
pop
out
pop
xchg
nop
mov
lds
lods
xchg
call
sbb
jg
push
mov
ins
int3
iret
sbb
pop
daa
aam
out
xchg
imul
mul
lahf
sbb
sbb
dec
loope
(bad)
retf
mov
mov
jmp
jle
inc
test
in
jg
lea
enter
jns
xchg
(bad)
cld
aaa
ja
pop
push
nop
mov
and
mov
pop
sbb
push
movs
aaa
ds
mov
das
mov
push
jbe
(bad)
mov
ins
imul
sbb
push
(bad)
je
aam
bnd
out
or
xchg
imul
or
xchg
movs
sub
pushf
dec
movs
test
mov
sub
fstp
xchg
mov
lock
adc
(bad)
jb
test
adc
leave
inc
jne
sub
shr
sahf
repz
push
jne
clc
shl
sbb
jle
addr16
sub
pop
(bad)
lahf
cmps
cmp
imul
mov
leave
in
pop
(bad)
adc
psubusb
mov
mov
add
mov
cmp
test
push
fsubr
or
xchg
mov
sbb
inc
and
mov
and
sbb
mov
sbb
sub
and
mov
jmp
inc
xchg
stos
cmp
pop
icebp
dec
clc
sbb
jnp
stos
inc
xor
fwait
nop
rcl
and
jle
mov
mov
mov
fmul
aaa
jge
loope
and
mov
add
imul
gs
cmp
lea
les
or
nop
jns
(bad)
push
es
pop
aas
int
fnsave
xor
fcmovnu
test
and
test
cmc
loop
sub
fld
jecxz
and
jbe
inc
mov
ret
lods
mov
cli
or
dec
into
shl
xchg
adc
out
dec
jo
loope
fdivr
(bad)
lock
(bad)
jp
dec
dec
push
or
pushf
mov
mov
sub
xchg
add
call
add
scas
add
inc
icebp
push
xor
sbb
add
sete
sahf
or
mov
lds
mov
pop
push
fwait
push
push
ror
push
adc
add
ja
rol
xor
sbb
ins
cmp
push
(bad)
sar
xchg
and
lahf
or
repnz
imul
ror
out
cmp
retf
(bad)
into
bnd
xchg
pop
add
mov
dec
jns
mov
repnz
pop
xchg
dec
loop
and
in
ror
sbb
ins
ds
push
cmp
stos
mov
dec
mov
add
aaa
xchg
sbb
push
push
outs
inc
sti
sub
jge
rol
jmp
lds
stos
xchg
dec
ss
js
sub
sub
xchg
jge
test
loope
inc
out
mov
inc
les
mov
push
push
mov
mov
jae
lods
fs
pop
sub
inc
aad
dec
jp
shr
xlat
test
lahf
je
repz
scas
or
stos
scas
jge
sub
loope
nop
mov
aam
adc
(bad)
(bad)
or
shl
or
jecxz
out
in
jmp
inc
in
mov
loope
out
inc
xchg
lahf
or
mov
dec
lods
lock
js
hlt
(bad)
sbb
mov
sbb
adc
and
sub
lods
(bad)
outs
stos
jl
add
lea
jnp
or
pop
jg
or
push
test
dec
push
xchg
jle
aam
jo
adc
mov
bound
sahf
add
inc
repnz
sub
sbb
mov
stos
neg
pop
add
cmp
pop
scas
jb
mov
ret
xchg
imul
cli
icebp
mov
setg
xchg
gs
mov
cmp
addr16
sbb
ffree
jb
jnp
icebp
xor
dec
rcl
or
int
push
add
movs
push
das
rcr
loope
movs
or
cmp
and
rcr
adc
add
jle
fwait
sub
inc
xor
in
repnz
loop
adc
and
loop
sub
xchg
in
shr
mov
lods
push
jmp
repnz
adc
adc
xlat
retf
aaa
repz
push
jecxz
sbb
popf
rcr
icebp
add
sub
or
push
jecxz
call
jp
xlat
neg
jg
scas
push
add
ss
sub
jns
int3
adc
add
into
xor
jns
(bad)
dec
ret
lahf
daa
sbb
shr
sar
cli
fdiv
stc
pop
sub
movs
push
sti
adc
mov
xor
shr
sub
clc
popa
rol
pop
jmp
lds
shl
mov
mov
in
sbb
cmps
add
mov
cld
or
shl
jns
and
xor
mov
stos
inc
(bad)
sbb
push
and
mov
test
lds
add
call
dec
sbb
pop
lods
retf
out
jae
loope
sahf
xor
sbb
cmps
adc
adc
push
mov
imul
jbe
xor
mov
aas
js
dec
imul
push
cdq
leave
repz
mov
push
loop
xchg
sub
mov
mov
aam
sbb
and
out
nop
scas
repnz
sub
or
hlt
and
hlt
stos
aaa
or
and
push
and
repz
out
data16
pop
test
or
pop
gs
ja
retf
out
or
int3
(bad)
(bad)
mov
stos
push
jle
loop
xor
cmp
sub
test
lahf
pushf
sbb
ins
arpl
dec
popf
pop
scas
jle
dec
frstpm(287
xchg
loopne
xchg
jl
sub
ror
or
mov
add
dec
rcr
cmp
out
inc
(bad)
jg
pop
es
outs
jmp
jbe
jmp
mov
leave
mov
imul
and
loop
cmp
cmp
movs
adc
mov
jno
sub
pop
loopne
sub
xor
sbb
mov
or
jae
jnp
push
push
adc
stc
retf
jle
iret
rcl
inc
fwait
les
xor
cld
pop
jno
push
leave
mov
xchg
or
mov
out
stc
jp
fs
cli
loop
push
xor
jmp
push
and
fiadd
cmps
sbb
push
or
jbe
ret
push
or
shr
cmp
mov
inc
loope
mov
ds
dec
bound
xchg
fadd
or
aad
sbb
pop
fwait
add
das
push
jbe
cmc
push
icebp
xchg
dec
cmp
aad
in
out
mul
mov
int
mov
mov
cli
das
xchg
es
retf
sbb
jle
fwait
pop
pop
clc
or
repz
xchg
push
call
pusha
jg
xchg
enter
push
lods
outs
mov
mov
sbb
add
inc
push
or
cmps
or
xor
rol
mov
adc
mov
in
pop
dec
mov
movs
aam
dec
pop
fcmovu
je
outs
js
push
mul
daa
lods
scas
pop
sti
stos
neg
pop
jno
sub
lock
mov
out
into
push
or
loope
movs
inc
xchg
mov
mov
inc
popa
or
mov
push
sbb
mov
cs
xchg
(bad)
lods
mov
lods
push
repz
dec
and
int3
push
(bad)
popa
mov
(bad)
(bad)
mov
(bad)
or
or
mov
sbb
or
clc
pop
jbe
icebp
aam
sub
push
rol
or
dec
mov
(bad)
sub
mov
mov
inc
cmc
cmp
pushf
repz
imul
lea
mov
popf
icebp
out
cdq
fsubr
xor
sub
scas
mov
mov
outs
clc
clc
xchg
test
inc
in
pop
cs
gs
stos
popa
jae
adc
imul
cmc
push
add
loope
mov
cmp
mov
stos
fbstp
imul
inc
push
mov
inc
pop
inc
es
sbb
dec
adc
mov
lea
out
sbb
jmp
dec
fs
cmp
mov
pop
int3
mov
shl
fnstsw
mov
inc
cmp
inc
mov
pop
stc
mov
es
push
dec
lds
mov
sub
add
cmp
stos
ins
sbb
or
int
clc
stos
bound
call
cld
jl
loopne
rol
mov
jmp
sub
mov
inc
push
pop
js
jle
stos
(bad)
std
movs
test
pop
test
rcr
sub
icebp
ret
add
stc
call
add
sub
mov
mov
dec
inc
mov
imul
cmps
std
mov
ja
xchg
jbe
jns
add
aam
pop
pop
adc
pop
mov
enter
or
lods
test
test
push
fisttp
repnz
xlat
adc
jbe
in
mov
cld
int
dec
and
mov
xor
daa
mov
pop
xor
xchg
mov
movs
data16
shl
xor
out
enter
movs
pop
dec
iret
inc
jnp
inc
xor
push
push
cmp
or
call
inc
cmp
mov
inc
sti
sbb
movs
lahf
mov
cmc
fcmove
xchg
push
shl
push
mov
pop
push
push
fidivr
jae
retf
js
repnz
push
jbe
xor
enter
or
cmc
cmc
fild
ret
sar
movs
mov
add
lahf
xlat
mov
jmp
ds
pop
inc
loopne
dec
call
mov
inc
fmul
pop
mov
add
(bad)
lods
and
push
xor
das
dec
and
pop
cmp
push
in
cmp
inc
mov
sub
jae
cmp
xchg
push
cmc
lods
data16
sahf
icebp
(bad)
mov
mov
in
adc
lahf
dec
aad
(bad)
pop
jo
push
mov
ror
fs
lock
fs
ins
mov
jnp
pushf
fst
cld
int3
or
lock
sahf
xchg
push
aaa
jmp
or
out
jbe
aas
outs
inc
loopne
test
fwait
inc
mov
xchg
fs
and
ss
dec
cli
inc
daa
jno
out
in
test
lods
push
sub
daa
pop
mov
ja
sbb
mov
fisttp
(bad)
mov
pop
sti
adc
sar
movs
xor
fstp
dec
les
pop
mov
xchg
mov
and
add
sti
sub
sbb
mul
fwait
ja
sbb
daa
and
or
dec
pop
ss
movs
stos
jmp
icebp
adc
mov
movs
sub
jp
mov
fiadd
ror
add
inc
and
pop
(bad)
hlt
inc
mov
sbb
ins
sbb
lods
into
pop
xchg
cmp
xchg
dec
or
sub
inc
retf
dec
and
int3
jecxz
out
jecxz
mov
shl
sub
rcr
cdq
inc
or
sub
pop
test
cdq
xor
das
mov
push
sbb
mov
adc
jg
call
inc
je
jnp
dec
(bad)
hlt
lahf
jo
adc
add
sbb
imul
cmps
jp
cmp
inc
jnp
div
xchg
cld
mov
mov
retf
xchg
pop
jmp
test
jne
loop
xor
sbb
scas
aad
aas
lea
pushf
mov
fucomip
sbb
ins
inc
jecxz
mov
cmps
stos
jg
jl
mov
jnp
jmp
jo
sbb
sub
dec
push
enter
ds
stos
cld
repz
lods
xchg
xlat
mov
pop
sbb
sub
mov
(bad)
cld
and
cld
cmp
lea
js
or
mov
setns
popa
ins
dec
mul
push
mov
es
fs
add
rcl
mov
mov
shl
add
jmp
stos
mov
nop
cmp
xchg
dec
push
retf
out
inc
and
arpl
popf
sub
jp
in
xchg
xchg
cdq
xor
fcomi
dec
add
xchg
cmp
repz
inc
push
shl
mov
jecxz
data16
inc
lahf
jg
xchg
pushf
push
cmp
loop
ret
daa
mov
mov
(bad)
cld
and
bound
jg
xlat
adc
inc
lea
stos
dec
sar
into
jnp
ret
add
sub
int
daa
inc
cmp
dec
fisubr
ret
sar
jns
add
(bad)
push
cmps
xlat
inc
aas
and
iret
cdq
pop
rol
pop
lods
sbb
mov
out
jge
outs
sub
sub
popf
add
mov
shld
aas
or
xor
xchg
icebp
pushf
movs
or
jg
xchg
cmp
push
cmp
test
imul
jno
mov
hlt
jmp
js
fstp
and
das
or
mov
imul
int3
pinsrw
test
and
icebp
ret
xor
adc
jae
ss
(bad)
sbb
mov
add
and
or
popa
imul
std
cwde
imul
adc
dec
mov
cmp
inc
jl
inc
dec
sahf
hlt
scas
repnz
inc
sahf
call
mov
mov
stos
daa
(bad)
sbb
xchg
test
pop
sub
out
push
push
enter
hlt
jne
lds
pop
push
mov
lahf
enter
jo
cld
cld
inc
xchg
xchg
and
jg
out
daa
lods
and
sbb
stc
popf
xor
jg
and
push
cmp
hlt
test
jle
pop
sub
mov
mov
int
push
das
mov
bound
push
sbb
xchg
popf
cmp
sti
pop
not
aam
jne
xchg
cli
out
stos
fwait
pushf
jae
scas
sub
mov
fdecstp
in
movs
add
cmp
es
mov
mov
aam
data16
outs
pop
pop
adc
mov
shr
mov
sbb
xchg
mov
jbe
ds
sar
mov
jbe
dec
call
and
icebp
addr16
mov
push
aaa
add
mov
daa
push
jl
in
sub
cmps
gs
or
pushf
(bad)
int3
push
fdivr
push
out
pop
mov
jl
push
fld
xchg
outs
adc
push
(bad)
cmp
adc
xor
mov
xor
mov
shl
fstp
bound
cmps
pushf
out
rcl
push
sbb
pop
ja
cmp
into
push
inc
dec
in
inc
icebp
ret
js
rol
and
jae
xchg
xor
mov
leave
mov
retf
push
xchg
jle
jne
sbb
push
iret
xchg
xchg
xchg
sbb
repz
repnz
pop
lods
push
and
mov
ins
sbb
nop
pop
clc
jle
lea
mov
sar
rcr
push
lock
test
rcr
adc
dec
add
clc
not
fucomip
sbb
addr16
or
or
and
jbe
or
adc
inc
inc
ins
(bad)
ror
jne
fs
jbe
push
sub
int3
out
cli
adc
jge
jl
rcr
inc
(bad)
pop
mov
shl
cmc
stc
call
pop
lea
fld
mov
inc
pop
movs
jo
push
mov
sets
cmp
rol
mov
sbb
outs
jl
or
cmp
mov
rol
inc
int3
ret
shr
xchg
mov
mov
test
pop
mov
mov
and
data16
cmp
adc
in
retf
pop
jge
jne
jmp
push
lods
sbb
frstor
ficom
in
xchg
popf
sahf
mov
cmp
mov
sub
out
aaa
sti
enter
test
xor
jnp
neg
inc
or
cmp
movs
mov
loopne
div
inc
or
adc
sbb
push
imul
call
xchg
and
ins
jmp
cmp
add
out
test
retf
stos
(bad)
stos
mov
cmp
pop
add
jb
cmp
out
cmp
xchg
xor
mov
rcr
outs
push
sbb
cwde
push
inc
mov
and
retf
lock
inc
outs
push
lods
dec
retf
mov
mov
mov
(bad)
cmp
cld
cmp
cmp
ins
jl
repnz
mov
mov
or
sbb
push
movs
xchg
cmp
scas
add
stos
push
fstp
xlat
ins
fs
aad
and
push
into
add
jg
scas
dec
mov
bound
jmp
inc
fsubp
sub
gs
add
and
mov
sbb
xchg
push
in
call
xor
sub
jge
xchg
push
jle
cmc
cmps
mov
neg
cmp
movs
aam
repz
jmp
imul
xor
fld
push
ins
cdq
push
sti
sub
dec
xchg
in
arpl
(bad)
mov
dec
int
in
pop
push
arpl
ret
push
add
data16
stc
add
mov
sub
test
aas
dec
sub
movs
push
pop
movs
mov
lods
cli
cmp
cmp
mov
inc
popf
mov
push
xchg
leave
imul
pop
jg
stc
mov
xchg
xor
fld
js
or
sub
sub
push
scas
popa
loope
scas
retf
xchg
cmc
shl
or
jl
loope
xchg
xlat
xor
jp
fwait
dec
pusha
pusha
repz
pop
gs
xchg
xor
imul
mov
dec
ss
push
pop
leave
dec
dec
adc
es
out
push
mov
or
cmp
fdivr
jge
fmul
or
xchg
push
imul
sbb
or
out
scas
lods
mov
xchg
mov
mov
dec
mul
mov
add
and
xor
sub
mov
daa
pop
neg
pop
cmp
jo
loop
aaa
sub
stos
loopne
and
imul
out
movs
daa
xor
mov
sub
loopne
mov
pop
js
jne
or
add
enter
cmc
add
cmp
push
(bad)
fnstcw
imul
les
aam
test
call
or
sub
lds
adc
out
cmps
fwait
push
add
jae
(bad)
xor
add
fild
(bad)
(bad)
cmp
sahf
imul
push
xor
and
push
jnp
xor
mov
xchg
das
mov
xchg
xchg
xor
aam
arpl
std
(bad)
clc
ja
add
loope
ror
ins
leave
push
inc
ret
cli
test
stos
pop
sbb
and
sahf
lods
enter
das
sbb
clc
sub
xor
shl
hlt
mov
jg
adc
aam
mov
hlt
xor
stos
xchg
push
add
outs
mov
xchg
ins
jmp
jno
and
and
ficomp
jp
and
ud2
sti
mov
sbb
out
test
sbb
scas
ds
ror
push
sbb
in
and
das
mov
inc
(bad)
cld
nop
cli
js
mov
sbb
cmp
mov
jns
stc
pusha
ret
sbb
aam
test
cld
fcomi
enter
cdq
stc
push
cdq
mov
mov
sahf
icebp
repnz
xchg
mov
mov
inc
gs
xchg
sbb
and
or
aaa
or
mov
xor
out
jg
dec
(bad)
jae
dec
jno
sbb
xor
call
(bad)
es
inc
in
test
inc
sbb
ror
in
mov
mov
call
ret
cmp
ud0
mov
jae
and
cmp
inc
lods
into
jecxz
dec
outs
pop
dec
jmp
push
and
push
sbb
les
push
imul
mov
es
sbb
mov
cdq
cmps
push
test
mov
das
hlt
jmp
push
cld
cli
sbb
lock
idiv
xchg
push
mov
pop
pop
ins
cdq
sti
dec
fisub
mov
push
cmp
pop
xor
pop
add
test
add
add
ins
jb
xor
mov
push
cmps
pusha
arpl
retf
sbb
aad
sar
xor
xlat
add
mov
cmp
push
mov
adc
cli
pop
icebp
and
adc
push
fnsave
push
ins
popa
fwait
xchg
cli
inc
and
(bad)
jge
fst
mov
sub
pop
sbb
jecxz
sbb
aas
data16
lods
stc
loopne
sub
int3
inc
add
test
out
fsub
xor
inc
mov
dec
xor
or
sbb
mov
sbb
pop
into
fmulp
and
inc
xor
add
mov
out
ja
dec
or
sbb
jno
sub
jg
add
mov
sub
sbb
(bad)
xchg
jnp
cmp
sub
ja
sbb
mov
sbb
mov
das
in
xchg
stc
lods
int
iret
jge
lock
call
and
or
addr16
bound
mov
enter
mov
adc
ret
or
addr16
mov
and
sbb
xor
int3
(bad)
mov
ins
cmp
or
push
dec
jno
test
cmp
mov
xor
pop
add
bound
pop
test
scas
and
jns
nop
loop
xor
and
das
push
loopne
push
stos
aad
and
sub
call
add
stc
pop
dec
or
cld
mov
test
addr16
movs
sbb
mov
inc
(bad)
cwde
dec
fst
in
mov
icebp
push
mov
mov
xlat
mov
mov
adc
adc
jbe
shl
jne
adc
xor
cmp
inc
and
xor
(bad)
mov
movs
ss
inc
pop
cmp
rcr
add
popfw
xchg
movs
xor
cmp
jno
int
dec
sar
push
jnp
jae
and
fiadd
push
lds
xor
mov
arpl
push
xor
imul
mov
xchg
shl
sub
xchg
xchg
in
arpl
xchg
sahf
xor
mov
call
push
pop
cs
xor
mov
ins
jmp
jmp
jno
shl
loopne
retf
inc
cs
inc
xchg
in
lahf
shl
push
popa
xor
out
or
int3
mov
add
imul
xchg
call
fxam
outs
lahf
dec
mov
jmp
fistp
iret
mov
pop
imul
scas
adc
leave
sub
int3
aas
repnz
scas
sub
lds
adc
loopne
jns
ss
ja
mov
daa
mov
pushf
push
mov
pop
add
mov
mov
or
xchg
pop
add
cwde
dec
cdq
daa
mov
sbb
add
fcomp
into
test
or
lds
push
or
sbb
add
test
(bad)
outs
fyl2xp1
in
scas
and
repnz
mov
pop
test
loop
(bad)
jmp
fadd
popa
(bad)
cmp
nop
inc
xor
clc
mov
jge
xchg
add
sub
cwde
add
or
les
(bad)
mov
fist
jno
push
ss
mov
jns
xchg
(bad)
pop
jns
rol
xchg
fs
dec
fidiv
mov
add
push
leave
cmp
ret
lock
(bad)
std
dec
xor
sbb
inc
hlt
retf
fwait
pop
inc
pop
test
imul
and
js
cmp
daa
es
jno
pop
or
or
xchg
cmp
cmps
mov
lods
sbb
cmp
data16
jo
not
or
fnstenv
add
icebp
fisttp
loopne
push
sbb
dec
loop
mov
stos
sub
mov
jge
xchg
xor
mov
add
test
cmp
and
call
add
pushf
pusha
mov
fidiv
popf
(bad)
mov
bound
add
fcomp
call
lds
aas
jbe
outs
rcl
push
aas
inc
dec
test
(bad)
stc
jp
sbb
imul
adc
not
sub
cmp
jmp
int3
stos
adc
sahf
xchg
pop
stc
nop
cdq
pop
pusha
(bad)
ins
mov
add
mov
sahf
inc
and
jno
inc
sbb
jb
aam
es
sbb
dec
mov
jp
(bad)
jae
and
xor
shr
dec
xor
call
je
mov
ret
(bad)
mov
fwait
loop
popf
sub
into
idiv
jae
add
add
push
addr16
adc
xchg
mov
pop
mov
add
and
mov
sub
add
sub
imul
in
shl
movs
mov
ins
mov
in
sar
sahf
mov
mov
pop
sbb
cdq
mov
aaa
xchg
fs
loope
stos
mov
xor
push
(bad)
js
sbb
out
mov
inc
leave
or
daa
sahf
push
rcl
pop
dec
mov
sub
fcomp
mov
push
inc
leave
cmp
and
popf
inc
repz
push
js
inc
cdq
and
mov
jns
aam
push
and
pop
mov
lea
iret
outs
jmp
sbb
in
loop
adc
arpl
mov
push
hlt
sub
in
sbb
scas
jmp
call
sti
xchg
test
leave
push
cmp
push
sbb
or
std
lahf
int3
lahf
jl
mov
into
pop
sahf
fsqrt
cmps
dec
mov
popf
and
(bad)
in
cmps
pop
sbb
fs
xor
jo
fimul
scas
push
jbe
movs
(bad)
mov
fld
data16
push
cmp
mov
std
popa
or
inc
retf
mov
loope
lahf
push
loopne
adc
push
jg
test
lahf
mov
imul
push
and
popa
cmp
add
sbb
mov
push
push
jp
rcl
push
jno
mov
xchg
sub
fadd
push
sub
sti
sar
dec
fwait
push
or
idiv
inc
pop
mov
(bad)
adc
push
xchg
imul
stc
jnp
les
repz
(bad)
loopne
mov
lea
mov
fs
das
and
push
in
xor
ja
stc
outs
lock
loopne
mov
into
push
mov
loope
rcl
rcr
xchg
imul
cld
repnz
jp
xlat
and
inc
cmp
mov
add
ins
mov
cmp
bndldx
xlat
(bad)
pop
add
push
sub
cmc
xor
jge
push
lock
dec
cld
cmp
xor
movs
xchg
push
or
mov
pop
lock
cmps
adc
sub
jne
mov
push
xchg
xchg
bound
mov
fistp
or
push
shl
push
adc
mov
and
mov
xchg
fs
inc
jno
inc
mov
hlt
add
push
cmp
dec
dec
fld
pop
xor
movs
shr
mov
psrld
inc
rol
shr
inc
mov
mov
mov
retf
mov
push
inc
std
jge
outs
out
and
cld
daa
imul
jb
sub
stos
aad
imul
add
jo
mov
ror
jecxz
jp
push
ja
outs
ret
movs
or
int3
pop
xchg
add
or
cmp
or
xlat
add
ins
rol
in
dec
jae
daa
xor
push
daa
(bad)
fld
jecxz
out
ja
and
and
jmp
xchg
sub
shl
addr16
mov
sbb
shr
jae
test
cmp
adc
adc
adc
jg
sub
dec
xor
add
mov
sub
push
dec
jnp
add
fisttp
cmp
out
ror
fwait
xchg
cs
pop
std
loop
ins
cld
int
test
sub
lods
fst
in
leave
pop
xor
(bad)
adc
jne
fimul
jb
xor
dec
cli
retf
push
pop
repz
ds
jb
adc
rcl
sub
mov
cwde
mov
xchg
lock
test
push
test
jge
add
aad
je
cdq
pop
push
jbe
movs
sub
pop
cmps
xor
sti
popa
inc
cdq
pop
inc
outs
fstp
mov
cdq
or
pop
fld
and
(bad)
cmc
adc
dec
push
fbld
nop
retf
or
inc
push
push
scas
aam
or
cmp
xchg
mov
loop
pop
push
sbb
(bad)
sbb
add
mov
cmps
ins
test
mov
adc
mov
stos
xchg
dec
cmp
movs
mov
hlt
or
pop
dec
and
add
sub
call
and
cmp
aam
sub
pop
aam
or
mov
xchg
int3
push
push
(bad)
adc
fwait
enter
test
test
xchg
arpl
mov
cmp
cmp
cmp
repz
into
int3
(bad)
dec
loop
arpl
es
ins
(bad)
dec
cmp
push
xor
pop
push
out
mov
push
push
jno
int
and
in
jns
mov
ret
dec
push
sub
inc
aam
(bad)
jmp
mov
mov
fcomp
movs
(bad)
sub
add
pop
leave
xchg
jb
ja
cmp
inc
jae
jl
sbb
arpl
jl
jge
mov
jne
adc
xchg
pop
stc
sub
mov
xlat
xlat
inc
xchg
(bad)
in
xchg
les
mov
hlt
add
mov
test
add
std
sub
mov
jmp
stc
idiv
out
sub
sub
add
or
mov
mov
push
dec
xchg
push
adc
pop
cmp
xchg
adc
xor
push
jnp
cmp
imul
xchg
sbb
or
test
aas
jge
jge
dec
shl
inc
ficom
in
test
jg
out
(bad)
fxch
and
and
push
(bad)
pop
repz
cs
shr
inc
and
inc
dec
daa
cdq
nop
test
retf
mov
dec
nop
inc
and
fist
inc
mov
add
jmp
fsub
add
loope
dec
push
mov
cwde
js
outs
repz
mov
mov
jbe
pop
movs
xor
jnp
fsubr
and
add
repz
and
mov
retf
cli
push
ffreep
xor
ret
(bad)
test
sbb
lahf
mov
sub
mov
push
loopne
fidivr
and
ffreep
jns
pop
jnp
cmp
ins
sub
daa
xlat
(bad)
ss
fwait
loop
pop
cs
ins
mov
cmc
sbb
mov
mov
inc
sub
sub
mov
in
std
mov
in
mov
test
push
sti
mov
mov
or
cmp
jbe
iret
scas
jp
ins
cs
push
mov
jmp
jno
jbe
mov
hlt
cmp
adc
mov
jle
and
dec
jno
outs
and
test
inc
popf
cld
(bad)
loop
stos
mov
leave
pop
mul
dec
add
test
push
dec
je
push
ss
fs
xchg
rcr
push
lahf
in
scas
rcl
mov
and
dec
aas
push
idiv
ins
fs
fisubr
enter
fstp
jnp
hlt
xor
dec
pop
mov
inc
(bad)
into
or
ja
ss
mov
sub
mov
clc
push
mov
mov
adc
jae
repz
jae
aas
cmp
test
push
retf
xchg
out
fadd
push
and
pop
xor
pop
cmp
loop
out
mov
xor
aad
popf
jmp
shl
stc
inc
xor
add
dec
(bad)
retf
mov
add
std
inc
inc
mov
push
iret
fild
js
push
pop
inc
mov
stos
xor
dec
rcr
ins
fst
mov
icebp
and
pop
imul
stos
xor
xor
js
mov
sub
ret
sbb
mov
xchg
stc
in
retf
fwait
sbb
mov
cld
xchg
out
mov
lods
popf
ins
cli
stc
rcr
push
or
sbb
sti
test
push
in
sbb
jle
test
and
push
jp
bound
xchg
daa
xchg
(bad)
mov
pop
test
dec
add
cs
or
fidiv
jecxz
bound
xchg
ja
mov
pusha
adc
popa
mov
xor
ins
or
fnsave
mov
dec
lea
lods
push
stc
popf
pop
jl
mov
inc
fcomip
dec
or
jno
sti
ret
leave
dec
push
jle
es
scas
add
mov
fdivp
add
sub
test
pusha
sub
or
add
mov
jmp
scas
xchg
addr16
and
push
int3
(bad)
lea
ja
xchg
jl
mov
ficomp
jno
shr
pop
xor
sbb
fwait
outs
cwde
xchg
pushf
mov
or
(bad)
sub
dec
push
jo
and
(bad)
push
xchg
cmp
sbb
lods
adc
fdiv
icebp
mov
(bad)
aad
retf
jne
cmps
out
mov
dec
mov
mov
mov
inc
imul
sub
mov
mov
cmc
or
shl
or
adc
dec
xchg
test
call
fst
adc
aas
(bad)
or
sub
push
imul
out
popa
pop
push
adc
mov
aaa
xchg
pop
pop
xor
out
mov
sbb
mov
pop
xor
leave
or
mov
xor
fwait
(bad)
cmp
mov
xor
xchg
imul
gs
retf
sub
sahf
sub
cmp
push
aaa
xchg
shr
and
movs
cli
xchg
jp
mov
cdq
mov
jo
xchg
adc
jno
xor
pop
and
fcomp
dec
mov
ja
pop
sub
repnz
pop
xchg
int3
push
inc
sbb
dec
mov
xor
iret
leave
dec
je
sbb
stos
(bad)
sahf
cwde
jns
enter
cld
(bad)
aad
mov
repnz
aad
dec
inc
mov
adc
push
pop
mov
stc
test
add
imul
repz
test
dec
lds
neg
or
sub
mul
icebp
inc
mov
sbb
mov
repnz
pop
push
iret
jbe
rol
mov
mov
inc
and
adc
fdiv
shr
cmp
loop
jmp
add
mov
push
jb
(bad)
pop
dec
add
dec
sub
daa
test
jge
pop
cs
mov
dec
push
push
aaa
mov
sti
mov
rcl
data16
xchg
or
xchg
(bad)
(bad)
jb
xor
mov
or
push
imul
add
aam
push
jle
adc
sti
or
cmps
stos
xchg
dec
(bad)
xchg
sti
es
imul
aas
xchg
pop
aam
mov
cmp
jo
dec
(bad)
in
jne
iret
mov
xor
lods
xor
mov
mov
jae
mov
stos
(bad)
mov
je
int3
sbb
scas
lea
jge
outs
or
mov
dec
xor
inc
pop
mov
in
scas
xor
sbb
hlt
imul
popf
cwde
adc
xchg
push
dec
das
xor
cmps
mov
out
outs
movs
jp
stos
(bad)
push
fisttp
pop
rcl
add
mov
xor
leave
cmp
push
test
inc
ret
addr16
push
xor
jb
(bad)
test
push
mov
cmps
aaa
xchg
sbb
jne
nop
mov
pop
punpckhwd
add
aad
ret
xor
sbb
ret
sahf
fsub
(bad)
stos
sete
sub
sbb
or
les
arpl
xchg
sbb
(bad)
fnstenv
and
sbb
xor
mov
mov
push
shr
push
push
adc
lock
add
mov
nop
pop
jne
push
repz
inc
loopne
daa
jmp
xchg
cmp
repnz
repnz
pop
imul
clc
push
push
mov
cwde
xor
call
jmp
stos
jp
dec
outs
lods
in
sub
dec
mov
cli
push
sti
aam
fisubr
mov
iret
cmc
xchg
sbb
pop
pop
ss
inc
jmp
icebp
cli
sub
dec
imul
jne
hlt
lea
and
ret
call
cmp
xlat
sub
adc
cmp
xchg
and
or
ins
lahf
mov
cs
imul
cld
clc
inc
jmp
or
(bad)
mov
lss
movs
sbb
lahf
adc
push
aas
(bad)
xor
ret
push
push
pop
aaa
push
mov
mov
sbb
pop
adc
imul
pusha
dec
imul
loopne
push
shl
clc
js
movs
or
adc
stos
adc
inc
adc
add
inc
xchg
mov
in
push
push
pop
and
shl
test
add
push
in
sub
je
repnz
and
add
ja
(bad)
sbb
test
xchg
push
xor
imul
inc
div
imul
or
xlat
xchg
scas
pop
movs
sub
mov
mov
inc
inc
pushf
or
js
push
dec
rcr
jo
(bad)
cmp
fild
hlt
cdq
scas
repnz
mov
xchg
sar
mov
add
mov
jne
repz
enter
push
into
out
inc
bound
stos
mul
push
cli
ins
rcl
out
out
imul
bound
mov
lahf
cmps
bound
pop
mov
sub
xchg
push
icebp
movs
mov
pusha
or
xchg
add
sar
mov
fcmovnbe
jle
(bad)
les
mov
inc
jns
(bad)
pusha
sub
pusha
xchg
iret
dec
loop
add
cdq
mov
jo
or
pop
inc
mov
fnstenv
and
xchg
adc
pop
xchg
test
push
mov
out
or
sub
or
jp
sub
push
xor
arpl
pop
lea
pop
data16
cwde
sbb
ds
pushf
nop
push
mov
imul
jne
sar
sub
push
not
loopne
aas
movs
cmps
jle
popa
sar
adc
pop
mov
sbb
dec
xchg
mov
movs
and
adc
add
clc
arpl
cmp
lea
dec
sub
push
scas
inc
mov
sbb
add
inc
pop
jl
iret
and
xor
es
popa
das
push
mov
repz
js
sbb
xchg
sub
or
adc
clc
enter
sbb
mov
hlt
xchg
cmp
out
add
mov
mov
pop
sbb
arpl
cmp
add
stc
or
clc
dec
sbb
pop
enter
pop
inc
scas
lahf
retf
inc
inc
clc
or
dec
mov
fimul
bound
and
and
pop
fld
inc
fimul
jns
mov
push
adc
mov
jp
xchg
(bad)
and
test
dec
retf
push
lods
stc
movs
jno
mov
jnp
ins
sahf
cmp
inc
push
sub
inc
lea
mov
inc
jmp
leave
sub
fiadd
in
std
jnp
movs
leave
mov
push
push
clc
out
add
out
push
out
push
out
sahf
pop
jge
mov
cdq
outs
jnp
lods
nop
and
pop
jns
into
pop
repnz
cmp
dec
ret
dec
pusha
pop
dec
inc
mov
imul
into
mov
fsubr
jle
push
jbe
in
cld
adc
into
inc
jns
fstp
jmp
(bad)
in
clc
std
push
push
push
jns
inc
in
adc
or
push
outs
or
and
inc
and
dec
sar
scas
or
pop
jno
mov
and
mov
dec
(bad)
test
cwde
and
je
push
dec
sub
jl
sub
mov
stc
xchg
cmp
fidiv
(bad)
icebp
ins
loope
xchg
adc
and
xor
into
push
loopne
int
loopne
mov
jle
mov
shl
jmp
xor
jmp
imul
into
inc
loope
mov
sub
pop
clc
cmps
jl
ret
sub
inc
xor
adc
dec
jmp
rcr
dec
add
mov
int3
dec
cli
xor
xor
sub
adc
lock
out
sahf
mov
aaa
sbb
retf
cmp
aad
sbb
fcom
(bad)
in
and
pop
adc
push
outs
pop
js
cmc
call
mov
adc
cmp
je
jns
sub
inc
add
inc
cmp
mov
and
movs
push
pop
mov
adc
daa
in
(bad)
mov
mov
pop
call
pop
mov
jb
mov
push
enter
(bad)
jecxz
mov
scas
int
cdq
loop
sub
(bad)
cdq
push
cmp
in
fimul
aas
not
test
cmp
pusha
cmp
test
cld
in
in
xor
jp
pop
mov
or
sti
jl
adc
std
jle
les
in
int3
xchg
imul
mov
mov
sub
aam
test
push
ret
int3
std
cwde
dec
sub
dec
cmp
jle
sub
nop
fst
ret
pusha
movs
sahf
scas
and
imul
mov
push
xor
push
push
cmp
(bad)
sbb
adc
pop
mov
xlat
pop
inc
lds
add
xchg
lods
dec
dec
inc
leave
in
add
repnz
mov
cld
fsub
shl
(bad)
adc
xchg
mov
cdq
sub
xor
push
adc
shl
xlat
mov
sar
jae
test
call
inc
mov
retf
pop
cs
sbb
sbb
mov
pop
mov
cmps
pusha
scas
jl
sub
fbld
add
add
xchg
sbb
loope
xchg
leave
retf
cmps
sbb
les
aas
loope
push
ins
adc
lods
sub
iret
jbe
lea
rcr
leave
or
arpl
inc
and
jae
repz
fsub
sub
scas
movs
xlat
retf
jmp
aas
add
mov
cmp
and
pop
dec
icebp
add
cs
sub
lods
(bad)
sbb
xchg
xchg
mov
bound
inc
or
and
dec
sbb
inc
gs
mov
jno
add
ficomp
dec
daa
pop
(bad)
test
xor
pop
les
mov
sbb
ret
arpl
cwde
ja
fldenv
jp
shr
sub
rcl
cli
int3
ja
sbb
dec
stc
dec
sbb
pop
ret
jnp
lahf
call
adc
loopne
jge
sahf
mov
mov
jns
pop
daa
jno
pop
xor
fucomp
mov
int
add
iret
mov
cld
push
jmp
pop
popa
xor
xlat
or
jns
shr
dec
int
scas
out
dec
dec
js
inc
jne
ins
(bad)
cld
mov
jno
cmc
mov
idiv
jae
aaa
jbe
mov
lock
jge
std
neg
adc
xchg
mov
ret
mov
sbb
dec
mov
scas
and
sub
jns
fimul
jmp
jne
xor
mov
cmp
inc
jb
mov
(bad)
fucom
mov
push
in
ror
outs
movs
out
or
pop
sbb
mov
sbb
jae
add
mov
retf
ret
in
dec
add
stos
outs
push
movs
inc
push
xchg
xchg
push
(bad)
or
fsub
cld
inc
loope
daa
xchg
pop
xchg
inc
adc
out
inc
jmp
test
lea
in
or
stos
call
pop
das
ins
arpl
cmp
std
inc
cld
or
cmp
mov
and
and
cmp
stc
retf
inc
in
fmul
xchg
xor
dec
cmc
int
test
into
imul
xor
inc
dec
sti
movs
xor
neg
sbb
inc
jmp
xlat
and
mov
test
fadd
sub
add
jl
adc
xor
inc
push
(bad)
sbb
enter
xor
jmp
push
and
mov
mov
xchg
call
mov
dec
ins
xor
and
and
push
sub
sub
fimul
pop
lea
imul
xchg
sar
sti
cvtpd2dq
call
jae
inc
mov
leave
mov
dec
add
fnstenv
jo
mov
sub
mov
shl
inc
ficomp
arpl
lods
es
test
dec
dec
out
cmps
jecxz
sbb
push
fcmovb
movs
sub
cs
mov
aas
mov
cs
aam
(bad)
aad
cmc
icebp
pop
test
fucom
cmp
movs
and
xchg
lods
lock
adc
cmp
je
xlat
mov
xor
jp
bound
xor
jge
pop
bndstx
cmp
and
pop
add
mov
mov
into
mov
lods
mov
sub
scas
mov
sub
in
and
icebp
push
loop
push
mov
and
or
cmc
pop
ins
in
cmp
mov
gs
mov
cmps
ror
loopne
in
outs
push
aad
aad
adc
daa
(bad)
(bad)
xlat
retf
and
push
xchg
inc
xchg
sbb
scas
xor
popf
mov
pop
loope
cdq
jns
aaa
test
sbb
jbe
mov
test
sti
stos
cli
add
retf
movs
cdq
aam
fmul
cmp
cmp
pop
push
scas
sub
add
sahf
jmp
xor
inc
and
inc
repnz
add
mov
sbb
in
xchg
sbb
adc
scas
cmp
je
xor
(bad)
cmp
add
sbb
sbb
inc
cwde
clc
sbb
mov
fisttp
sub
push
in
xor
inc
xchg
mov
call
add
adc
outs
pushf
push
iret
mov
cli
hlt
inc
(bad)
daa
(bad)
not
xchg
jmp
mov
sbb
fcomp
cmp
int3
cmovg
ds
addr16
adc
sbb
xor
pop
lock
fld
inc
sub
icebp
cmp
jecxz
push
mov
sub
dec
or
adc
add
test
cmp
jg
inc
sbb
neg
mov
movups
aaa
push
movs
mov
xlat
mov
pop
jmp
or
dec
xchg
adc
ja
inc
xlat
xor
jb
jp
pop
jecxz
jecxz
push
js
dec
and
xor
scas
ret
shr
and
sub
xchg
pop
ds
lock
call
jp
add
ja
(bad)
jmp
dec
dec
xor
outs
sbb
mov
pop
mov
push
or
dec
loope
and
and
retf
jb
or
push
xchg
in
inc
mov
sub
sbb
mov
pop
leave
shl
mov
jae
xor
jo
xor
stos
mov
retf
stos
xchg
rol
push
pop
or
imul
push
jb
lods
mov
sahf
fsin
sub
mov
mov
pop
push
sbb
adc
lods
sbb
daa
push
inc
dec
lea
iret
fdivr
xlat
faddp
or
(bad)
cmps
add
cmp
inc
pop
adc
call
push
out
fstp
pusha
enter
out
xor
mov
std
xor
dec
pushf
scas
mov
add
sub
mov
stc
into
pop
pushf
push
ficomp
nop
push
jo
mov
fcom
pop
test
push
ins
neg
and
ds
xor
add
sub
enter
jge
xor
scas
add
in
mov
dec
sbb
mov
dec
(bad)
cmp
pop
adc
out
outs
add
add
test
mov
dec
xchg
cwde
xchg
movs
ss
jo
jp
adc
addr16
std
jle
test
ins
je
cmp
mov
nop
enter
xor
lea
xor
into
and
outs
aaa
sbb
sub
test
movs
test
jecxz
cmc
(bad)
and
push
mov
mov
repz
sub
and
push
ja
xchg
sbb
or
mov
mov
sub
dec
xor
adc
sahf
test
mov
retf
test
int3
scas
std
dec
div
not
pusha
stos
sbb
push
and
lods
cmp
in
cmp
mov
push
mov
ret
fs
pop
retf
mov
ins
push
cli
dec
xor
mov
pop
ds
push
jg
cmp
dec
arpl
retf
into
jp
dec
in
jl
inc
clc
mov
cs
add
jnp
test
xlat
cs
retf
pop
inc
mov
inc
jnp
adc
inc
mov
les
xchg
xchg
in
in
(bad)
fist
ss
into
dec
pop
retf
and
out
loop
loopne
mov
push
xor
or
push
cwde
enter
jmp
lahf
sub
mov
dec
jl
(bad)
cmp
inc
sti
push
hlt
smsw
dec
(bad)
cwde
pop
xchg
mov
sahf
mov
mov
add
mov
add
xchg
ja
jns
movs
in
outs
jmp
xchg
lds
test
imul
out
jg
(bad)
jmp
or
ja
les
push
icebp
loopne
inc
into
xchg
js
add
lods
cmc
xor
push
ds
sbb
fisttp
dec
and
icebp
mov
ror
add
and
mov
shl
mov
ds
adc
dec
push
repnz
popa
xor
pop
dec
clc
(bad)
mov
xchg
inc
fdiv
push
hlt
inc
mov
sbb
inc
push
sbb
rol
mov
mov
lods
dec
xor
inc
push
jb
dec
push
jbe
push
fbstp
call
cwde
adc
mov
push
sbb
out
fistp
adc
mov
xchg
test
es
fptan
jmp
popa
pop
sbb
imul
ret
les
inc
fneni(8087
jge
cli
enter
cmps
push
out
in
mov
pop
pushf
inc
jne
push
dec
dec
push
sub
xchg
scas
cmp
inc
mov
sbb
mov
scas
les
lock
aad
jbe
sbb
stos
push
jno
add
(bad)
mov
mov
out
fldenv
imul
aaa
stos
sbb
rcr
push
icebp
jmp
and
mov
mov
(bad)
leave
fs
xchg
cmps
gs
pop
xchg
js
sub
retf
pop
cmp
es
cmps
push
sbb
jb
cdq
pushf
in
mov
ins
out
in
and
mov
loopne
into
inc
xor
js
ret
push
cmp
pop
cmp
mov
mov
repz
xchg
imul
or
aas
and
or
or
call
stos
stos
inc
cmps
pop
and
test
rcl
jmp
retf
dec
lds
jmp
fmul
jle
mov
mov
pop
mov
pop
mov
push
mov
hlt
xor
mov
es
cmps
jnp
inc
jp
movs
aaa
(bad)
(bad)
scas
cmp
mov
jp
xchg
push
xchg
pop
rcr
lods
add
mov
push
not
cld
enter
sbb
add
mov
push
ins
stc
nop
clc
adc
movs
ret
add
cmp
icebp
arpl
(bad)
int
pop
pop
jge
imul
push
xchg
jl
mov
popa
inc
daa
popa
sbb
popf
push
mov
push
test
dec
xor
add
push
xor
jb
sub
das
ret
adc
inc
in
test
and
enter
fistp
mov
test
jl
ins
adc
outs
repnz
fwait
cmc
xor
cs
adc
sub
cmp
pop
leave
repnz
jbe
sbb
retf
adc
shr
imul
push
ja
push
and
mov
imul
mov
mov
ret
add
mov
add
out
ret
add
mov
(bad)
lods
dec
ss
inc
ret
mov
sahf
cmc
and
inc
and
je
sub
test
ffree
pop
add
and
pusha
je
repnz
pop
fnstenv
mov
adc
std
das
mov
data16
or
or
fst
xlat
and
jmp
les
fldlg2
add
jmp
inc
xchg
xor
inc
pop
push
add
repz
(bad)
je
loop
push
es
add
scas
mov
cwde
inc
retf
inc
enter
(bad)
cs
xor
mov
into
mov
out
or
xchg
aad
fdivr
adc
jnp
cmp
mov
outs
mov
jg
jge
inc
and
push
icebp
gs
test
jne
(bad)
mov
ficom
sbb
sbb
cld
jo
push
pop
xchg
mov
in
stos
cdq
push
push
push
push
(bad)
cmp
jae
xchg
arpl
pop
movs
push
lock
pushf
xor
cmp
loope
jmp
adc
scas
fisttp
fcmovnu
ds
sub
xchg
fwait
mov
cs
cmp
mov
sbb
lods
push
add
int3
inc
sbb
push
lea
stos
push
test
xchg
push
lahf
pop
xor
push
mov
bound
cmp
push
push
push
arpl
call
mov
jecxz
xor
lods
(bad)
fbld
fdivr
enter
sbb
add
rcr
icebp
dec
ins
xchg
and
retf
xchg
pusha
mov
mov
mov
icebp
pop
fldcw
scas
sbb
and
jg
jo
clc
out
mov
and
cdq
push
bnd
mov
std
retf
(bad)
lahf
xchg
enter
cmc
adc
sbb
mov
sub
jae
push
sub
dec
scas
or
mov
lods
sbb
mov
fstp
cmps
add
in
or
jb
xor
xor
pop
sub
add
mov
and
and
push
out
out
push
jp
adc
mov
(bad)
shl
gs
mov
dec
fucomi
or
ret
enter
xor
fstp
inc
pop
push
push
add
fisttp
ja
shr
into
push
dec
mov
sahf
loop
cwde
cs
je
loop
or
rol
outs
xchg
test
sub
ins
or
push
in
cmc
dec
retf
fisttp
xor
mov
mov
pop
test
lahf
adc
das
loop
xchg
or
inc
inc
push
rcr
push
jge
pop
lea
mov
int3
mov
loop
pushf
xchg
xor
jle
call
push
cmp
outs
push
mov
jae
(bad)
mov
mov
sbb
mov
mov
test
not
and
sub
xchg
test
cmp
sbb
fisub
add
sub
stc
sub
out
inc
dec
xchg
sar
xor
test
dec
mov
push
sbb
jl
dec
fucomp
jl
popf
and
push
dec
leave
cmp
xchg
stos
loope
out
and
inc
and
or
inc
mov
arpl
sub
aam
sbb
js
and
mov
into
add
test
dec
sahf
cmp
mov
arpl
push
add
int
add
dec
mov
xchg
pop
cmp
fdivp
sub
adc
popa
sahf
push
mov
aas
and
outs
into
sub
idiv
imul
scas
or
inc
adc
mov
sub
int
dec
jmp
mov
dec
js
jnp
jne
sub
or
pop
hlt
(bad)
(bad)
xor
(bad)
shl
ins
rol
sti
sub
loopne
adc
dec
xchg
xchg
fldenv
push
adc
lock
popa
mov
add
mov
cmp
(bad)
xor
hlt
pop
push
mov
loop
inc
sub
lods
enter
adc
out
(bad)
sahf
int
stc
movd
mov
test
mov
inc
push
jle
in
jae
cmp
or
mov
adc
push
xchg
or
cmp
sub
sub
sub
mov
and
mov
ficom
mov
sbb
dec
sti
sbb
xor
ins
add
pop
sub
ins
jb
mov
jle
stc
mov
pop
sbb
sub
mov
cmp
add
(bad)
push
sub
sbb
imul
sti
pop
fimul
loope
mov
jae
xchg
mov
jge
jbe
xchg
das
arpl
mov
xor
fisttp
pop
out
add
jbe
addr16
scas
shr
outs
add
sbb
ins
popa
rcl
in
out
inc
retf
xor
ins
mov
adc
push
and
lahf
pop
repnz
lahf
mov
sub
outs
dec
inc
inc
mov
out
xchg
pop
mov
sub
adc
iret
int3
mov
cmc
or
stos
dec
(bad)
sub
xchg
mov
jl
mov
add
mov
test
test
loopne
repz
sahf
sub
rcr
push
xchg
and
dec
mov
mov
mov
jmp
dec
xor
lock
mov
jne
adc
mov
and
jl
jne
icebp
(bad)
xor
jl
int
iret
adc
and
aad
lods
or
fstp
(bad)
cmp
jno
xchg
pusha
ror
or
jbe
jecxz
mov
int
test
ror
mov
xor
pop
fwait
daa
shr
lods
cmps
in
add
inc
xchg
repz
loope
pop
data16
cmps
mov
sbb
push
imul
inc
sub
xor
adc
dec
(bad)
int
cmp
(bad)
fwait
stc
xchg
sahf
mov
xlat
ja
push
loop
lock
inc
sub
xchg
sbb
push
out
test
(bad)
pop
jbe
inc
dec
pushf
aas
shl
adc
adc
and
sahf
sbb
push
shl
mov
sbb
gs
retf
xchg
lds
adc
enter
(bad)
icebp
xor
scas
mov
inc
test
xchg
imul
xchg
jge
neg
pop
push
jne
or
mov
adc
xchg
or
xor
popf
sub
outs
or
and
mov
out
daa
jnp
mov
xor
sub
pushf
rol
and
pop
clc
ret
gs
cld
xchg
outs
inc
retf
je
pop
jns
pushf
add
cmp
jp
xchg
jl
leave
call
sbb
call
sub
xchg
inc
pop
out
jbe
call
fisubr
loopne
xchg
pop
fadd
sar
dec
arpl
(bad)
sub
popf
or
rcr
popf
cmps
sbb
mov
lahf
sbb
sbb
sbb
xor
call
movs
fld
lds
(bad)
bound
in
xchg
test
scas
inc
mov
test
pusha
(bad)
xchg
jns
and
movs
sub
mov
sbb
dec
rcr
clc
mov
div
pushf
cmp
add
inc
mov
imul
mov
jno
adc
out
mov
adc
les
mov
push
and
mov
jle
jae
cmp
ds
jl
mov
dec
popf
pop
cmp
and
test
xor
xor
rcr
lods
movs
cmp
sbb
test
scas
adc
and
dec
jge
(bad)
movs
sbb
add
or
pop
out
sbb
dec
sub
push
mov
xor
mov
(bad)
jmp
mov
pusha
out
arpl
icebp
ins
lock
mov
push
inc
add
in
jmp
ficom
imul
add
jp
out
sti
jle
adc
(bad)
dec
lock
push
sti
ins
sub
add
jae
dec
(bad)
mov
inc
sbb
rcl
push
sub
int
xchg
add
dec
(bad)
neg
mov
cmp
cmc
mov
jo
xchg
add
jne
daa
out
inc
jl
add
xor
out
sbb
or
call
push
mov
sbb
jo
pop
pop
xchg
push
sub
pop
pusha
test
ficom
repz
loop
cmp
adc
push
mov
test
push
inc
jne
(bad)
icebp
add
mov
out
stos
popf
or
or
mov
rol
xchg
cmp
xchg
stc
test
and
or
nop
sub
aaa
dec
pop
xchg
mov
mov
in
cmps
xor
sahf
or
cmc
hlt
shr
fwait
dec
bound
dec
sbb
jnp
call
aam
pop
inc
cdq
aam
adc
repnz
add
das
call
lahf
ins
retf
sub
jmp
cmp
push
mov
adc
mov
aam
dec
xchg
pop
sub
arpl
popaw
mov
and
in
in
or
stc
pushf
outs
sbb
sub
je
mov
outs
xor
setge
es
dec
sbb
test
xchg
das
xor
cmps
cmovb
mov
mov
dec
or
and
add
inc
jl
nop
movs
cmp
add
xchg
js
jno
inc
pop
dec
dec
cmp
push
aaa
aam
cmp
out
int3
es
sub
pop
lds
cmp
fild
fisttp
aaa
scas
push
jbe
adc
imul
inc
popa
call
(bad)
cmp
mov
mov
retf
scas
mov
push
xchg
mov
mov
cmp
dec
in
or
aad
and
fxch
mov
lods
(bad)
ror
sub
dec
dec
mov
mov
jmp
mov
dec
jl
in
pushf
stos
cld
add
movs
xor
jle
sbb
mov
loopne
cld
cmps
mov
sub
sbb
dec
fidivr
adc
repz
add
cmp
and
xor
or
fmul
sar
in
call
icebp
adc
test
into
fimul
mov
sbb
sub
mov
stos
or
xlat
pop
cs
pop
mov
loop
push
pop
push
shl
pop
test
jge
mov
lods
stc
icebp
aas
push
mov
mov
sub
xchg
int3
cmp
jbe
jle
jmp
mov
ins
call
fst
outs
or
xor
ds
xchg
icebp
push
jmp
mov
and
stos
(bad)
or
push
cmc
mov
outs
adc
stos
sbb
sbb
cmps
pop
mov
aas
mov
jg
in
jl
sub
jmp
test
dec
fidiv
pop
das
mov
int
sbb
mov
add
lock
sbb
jge
ror
inc
sub
cmp
push
repz
inc
add
jmp
or
frstor
(bad)
fsubr
sub
add
ss
gs
out
sbb
lock
mov
add
clc
fsub
shl
or
mov
mov
push
(bad)
xor
pop
xor
iret
sub
cmc
in
cmp
pop
test
cli
movs
pop
enter
push
sub
je
or
hlt
fbld
sub
mov
jle
xchg
div
retf
sub
push
pop
xchg
mov
movs
mov
rcl
lods
arpl
mov
test
mov
mov
mov
xor
add
test
retf
mov
jmp
pop
call
daa
hlt
cmps
sub
ja
jne
jno
cs
shl
or
imul
xchg
mov
mov
cmps
pop
fdiv
mov
add
xchg
mov
je
test
cli
jg
mov
ins
aaa
popa
inc
cwde
add
stos
adc
lods
call
push
mov
aad
mov
and
ficomp
jo
sub
outs
mov
dec
lds
test
aam
ret
cmp
vpaddsw
loopne
adc
movs
dec
pop
cs
data16
scas
add
cmps
les
cdq
push
int
dec
pop
jge
xor
adc
lea
push
xor
leave
rcl
js
xchg
xchg
jb
rep
cmp
mov
cmc
and
jecxz
(bad)
xchg
(bad)
ja
addr16
cmps
cli
retf
call
or
xchg
inc
adc
pop
repnz
xchg
xchg
xchg
icebp
fwait
pop
or
jbe
sysret
pop
aas
xor
mov
mov
push
pop
dec
mov
pop
rol
repnz
mov
xor
sar
jnp
div
cmp
call
push
(bad)
cmps
or
add
push
sahf
nop
and
ret
shl
xchg
lock
loope
pop
ins
inc
repnz
push
xor
xchg
pop
adc
imul
out
div
rol
sub
scas
iret
push
cmp
xchg
test
sbb
mov
call
aad
mov
fld
push
int
sub
into
adc
scas
cmp
aam
sub
cmp
jbe
fsubr
and
adc
(bad)
fsub
mov
icebp
pop
sub
lods
inc
sub
mov
mov
call
shl
shr
add
stos
dec
mov
(bad)
push
jns
add
pop
loop
lods
data16
ror
mov
dec
ror
mov
dec
aam
mov
mov
mov
pop
xor
cmp
inc
lea
mov
xor
aaa
push
jnp
mov
(bad)
sar
jecxz
jl
aas
jge
xchg
and
cs
and
pop
ss
or
pop
out
dec
mov
mov
aaa
lods
stos
pop
add
call
call
sahf
add
pop
and
jnp
jg
imul
(bad)
xor
fs
xor
arpl
and
pusha
adc
mov
xlat
and
test
sbb
mov
in
jnp
inc
cwde
sbb
out
test
adc
mov
mov
movs
test
inc
rep
enter
jmp
mov
std
xchg
pop
mov
cmp
push
imul
in
(bad)
jnp
je
jle
xchg
jecxz
cmc
retf
dec
mov
sub
dec
pop
add
xor
adc
xchg
mov
cdq
sar
movs
pop
lods
jecxz
push
cwde
mov
call
fistp
rol
cmp
mov
ret
jge
pop
dec
rcl
inc
jae
push
jnp
inc
(bad)
add
or
pop
aaa
movs
in
inc
xchg
idiv
loopne
inc
add
aad
aam
mov
leave
out
out
add
mov
xor
xlat
ror
jle
bound
fdivr
dec
ss
lahf
mov
shl
loope
inc
in
push
xor
sbb
in
lahf
leave
sub
cmp
and
jne
imul
ja
int3
das
into
xchg
into
push
test
leave
and
or
fmul
xchg
lods
ud0
pushf
mov
fstp
test
call
in
or
fcmovne
loopne
or
adc
add
cld
xchg
retf
sbb
repnz
mov
shr
sbb
loope
or
mov
mov
fidivr
jne
xor
pop
mov
cmps
mov
dec
dec
pop
mov
jne
push
or
mov
push
pop
pop
jae
sti
fdivp
iret
jae
xchg
mov
in
or
sub
jl
xor
daa
and
clc
mov
or
add
adc
fstp
int3
jge
pop
stc
cmp
bsr
sbb
or
dec
mov
lds
xor
dec
xchg
ins
mov
lds
(bad)
out
movs
pusha
js
xchg
je
jp
sbb
icebp
test
sub
shl
mov
es
inc
add
stos
mov
mov
xchg
or
int
shr
pop
push
jno
inc
(bad)
mov
push
mov
nop
retf
nop
popf
sub
aad
iret
out
xor
adc
test
mov
xor
loop
sub
push
sbb
sahf
imul
popf
xor
fdivr
dec
test
aaa
mov
inc
bound
push
mov
aad
jo
push
inc
fidivr
(bad)
popf
sub
cdq
outs
sub
ret
in
mov
xor
mov
dec
fwait
leave
ret
cmp
stos
inc
xchg
popf
(bad)
jae
or
jmp
mov
lea
adc
dec
dec
sbb
or
out
jecxz
mov
es
in
xor
cmp
idiv
sub
(bad)
fmul
in
(bad)
pop
sub
inc
mul
fisub
fisttp
imul
or
out
aaa
and
sub
jo
(bad)
jns
das
sub
retf
mov
inc
adc
mov
mov
dec
xchg
pop
sbb
(bad)
clc
or
retf
mov
and
and
fs
adc
jecxz
hlt
and
sbb
into
mov
loop
pop
or
xchg
or
cli
pop
and
das
iret
hlt
push
(bad)
fcmovnu
cmps
push
out
cmp
nop
mov
push
push
xor
retf
std
push
les
not
retf
cs
sub
fnstsw
jno
not
pushf
aas
lea
iret
sub
jecxz
xchg
mov
clc
data16
(bad)
pop
cld
leave
adc
adc
test
push
and
xor
jnp
gs
into
(bad)
movs
push
mov
mov
inc
fisttp
popf
mov
ins
mov
xor
jne
outs
sub
cmp
stos
int
xchg
inc
jl
jg
aad
in
cmp
jmp
stc
outs
push
inc
cdq
jecxz
add
rcl
imul
aad
cmps
outs
mov
fadd
sbb
maskmovq
ret
fistp
scas
and
cli
jb
fild
mov
cmp
scas
sub
jp
dec
ds
push
arpl
scas
loopne
mov
call
adc
fcomp
xchg
jnp
aad
sbb
fld
ror
and
movs
cmc
mov
inc
ret
sub
sub
sbb
adc
xchg
sub
jns
aas
(bad)
in
adc
dec
mov
fdiv
xchg
mov
imul
mov
xchg
jnp
outs
jo
inc
inc
test
and
fsubr
push
(bad)
lea
jmp
sar
sub
addr16
ins
pusha
xchg
loop
mov
montmul
cmps
or
shl
mov
es
into
jns
mov
mov
inc
nop
std
out
add
mov
ret
in
jo
and
jb
pop
push
jl
push
mov
pop
xchg
out
xchg
(bad)
push
or
cmc
aam
nop
out
ret
mov
(bad)
es
into
push
jp
fwait
mov
aaa
adc
out
adc
ss
and
xchg
push
scas
clc
jecxz
rcl
pop
dec
mov
adc
or
inc
cmp
xlat
mov
mov
mov
xchg
outs
and
mov
test
std
mov
mov
mov
int
scas
data16
lods
movs
test
cs
jmp
addr16
jecxz
cdq
dec
pop
inc
stc
pop
fstp
jg
mov
inc
and
ins
test
cmps
inc
xor
call
cmp
mov
sti
std
or
scas
dec
or
sbb
fdivr
inc
and
pop
in
(bad)
neg
push
sti
pop
add
(bad)
mov
ret
iret
dec
pushf
push
sub
pop
repz
mov
clc
test
cli
mov
jns
push
xor
pop
xor
or
pop
scas
ret
xor
add
es
clc
mov
mov
out
xchg
and
push
cld
dec
adc
or
out
fwait
xlat
dec
jecxz
and
jbe
sbb
push
sbb
xor
jl
adc
jmp
ficom
xchg
arpl
in
jmp
stc
(bad)
mov
or
cmp
fcmovnbe
and
(bad)
inc
(bad)
cmps
or
rcr
mov
xor
inc
pop
je
pop
inc
sub
mov
std
xchg
or
stc
popf
shr
pusha
daa
sub
inc
adc
jp
sbb
push
fld
dec
addr16
xor
sbb
call
mov
retf
xchg
nop
push
arpl
jp
mov
jg
inc
test
(bad)
mov
xor
cmp
mov
lods
data16
mov
lods
jbe
jp
sub
into
xor
fist
lods
jo
es
ins
test
popa
pop
cld
pop
inc
xchg
and
sbb
stc
lahf
ins
hlt
icebp
or
inc
adc
not
lock
out
mov
lock
xlat
adc
jmp
call
add
in
cli
ret
push
sti
ret
or
call
cmp
dec
add
ja
std
data16
mov
iret
cdq
sub
cmps
mov
je
xchg
ins
ret
hlt
inc
and
test
sbb
fiadd
inc
not
nop
push
pop
mov
pop
popa
xchg
jo
aas
ja
inc
xlat
aaa
test
push
rcl
sub
int3
(bad)
fst
mov
adc
(bad)
dec
xchg
jae
jo
inc
nop
cmp
shl
xor
cmp
mov
shl
xor
inc
repz
mov
mov
mov
inc
ja
aad
jae
ins
ror
cmc
mov
lods
or
pop
test
adc
popa
push
hlt
nop
mov
push
(bad)
mov
and
cmp
adc
imul
cmp
fldcw
sub
mov
or
xchg
in
jmp
inc
stos
push
stos
cld
and
fimul
xchg
clc
into
add
mov
xchg
xchg
xor
jo
push
jnp
mov
lea
jg
test
or
mov
sahf
call
jmp
leave
sbb
fbstp
and
and
adc
test
add
ins
in
cmc
and
in
inc
(bad)
jbe
pop
pop
cmpps
addr16
jb
cmp
jb
clc
fdivr
loop
cdq
mov
fnstsw
add
les
fiadd
sbb
(bad)
cdq
ja
(bad)
adc
(bad)
repz
shl
push
movs
fldcw
bound
ror
test
add
and
dec
outs
xor
sbb
inc
dec
out
xchg
test
shl
or
sbb
aaa
pusha
add
les
push
dec
shl
xor
fwait
sbb
or
js
mov
cmp
adc
inc
cmp
add
sahf
shl
enter
loopne
repnz
fwait
sub
jns
add
sti
xor
fld
mov
xchg
mov
iret
dec
out
sub
in
inc
or
sbb
hlt
xor
out
fwait
test
(bad)
mov
push
push
(bad)
enter
movs
and
stos
sbb
inc
or
out
out
xchg
sbb
not
hlt
mov
scas
push
xchg
in
rcr
and
xchg
xchg
leave
mov
or
xor
inc
movs
dec
test
or
mov
cli
dec
jl
adc
das
mov
adc
in
iret
jecxz
jl
out
inc
call
dec
xchg
sub
mov
cmp
nop
jnp
and
test
mov
(bad)
out
jmp
pop
push
adc
xchg
call
inc
test
mov
sub
sbb
hlt
sti
adc
cmp
mov
cmc
push
pop
pop
sub
push
cld
sbb
pop
rcl
lods
pusha
jne
test
push
jno
daa
stc
ins
pop
xchg
pop
loop
jmp
imul
repz
push
jb
and
sbb
dec
push
mov
std
pop
jne
rcr
inc
test
jp
push
fcomp
mov
add
dec
dec
adc
js
(bad)
fnstenv
cmp
loop
shl
and
ins
out
repz
cmps
inc
xchg
outs
out
sbb
lds
ja
vandnps
(bad)
out
pop
jle
ror
dec
pop
test
jl
fbld
sti
lahf
mov
inc
gs
sbb
outs
in
push
pop
imul
outs
and
pop
out
mov
fs
cld
outs
cmp
lods
test
mov
imul
mov
jmp
sbb
lock
ins
jmp
jno
test
fldcw
inc
pop
retf
outs
jg
rcr
dec
popf
mov
loopne
mov
(bad)
repnz
jl
fmul
add
add
add
stos
pop
sahf
mov
(bad)
(bad)
enter
cmps
test
sar
jno
sar
shl
pop
loop
add
movs
push
lds
xchg
jl
mov
cmp
jl
aad
dec
scas
lock
adc
imul
gs
in
cmp
nop
mov
jns
test
xor
cmps
xchg
jnp
ins
pop
cli
xlat
jmp
push
add
sub
outs
jmp
inc
popa
inc
pushf
mov
int
push
add
imul
dec
rol
out
fild
pushf
cmp
sub
sub
repz
(bad)
xchg
mov
mov
push
pop
call
fwait
stos
inc
xchg
push
push
push
mov
push
hlt
lods
shr
sbb
and
xchg
mov
cmps
movs
aas
adc
idiv
jecxz
and
call
leave
add
adc
clc
pop
inc
hlt
mov
dec
dec
add
iret
lea
call
xchg
ret
sub
push
repnz
or
mov
push
scas
cmp
test
push
test
stos
cdq
sti
jle
arpl
(bad)
les
xor
les
test
leave
sti
xchg
shr
add
cld
mov
dec
add
pusha
xor
jmp
and
in
cmp
lock
push
mov
retf
adc
inc
out
pop
mov
js
pop
sbb
out
add
repz
dec
xchg
or
gs
fnstsw
add
pop
inc
scas
iret
mov
dec
or
pop
mov
sub
sub
dec
xor
test
div
mov
xor
call
jl
sbb
ins
test
mov
ins
push
push
mov
sti
mov
fwait
xchg
cmp
shl
or
not
add
mov
call
add
pop
or
fisub
sub
adc
jnp
popf
push
or
mov
mov
call
cdq
inc
xor
push
and
push
adc
fmul
leave
(bad)
xchg
call
dec
jle
adc
bound
add
adc
and
mov
sub
mov
test
scas
aam
scas
mov
xor
cs
int3
xor
dec
mov
mov
outs
in
pop
retf
mov
mov
ss
jg
add
(bad)
inc
mov
dec
add
lock
cmps
icebp
push
mov
xor
sub
dec
jge
dec
lock
push
in
xlat
xchg
mov
jmp
mov
dec
aam
(bad)
out
ins
and
sub
xchg
push
and
dec
shl
das
outs
xchg
and
fadd
mov
(bad)
rcr
adc
mov
fwait
xchg
es
std
xchg
push
sub
out
mov
sub
add
push
les
xchg
pop
sbb
cli
rcl
hlt
hlt
fdiv
sub
sub
pop
or
jmp
push
shr
lods
mov
mov
lahf
shl
jmp
push
int3
pop
bound
dec
sub
into
or
cmp
loope
ins
cdq
sbb
stos
shr
cmc
adc
push
pop
sub
mov
sub
int
in
ret
push
mov
sbb
pop
cmp
ret
mov
and
xor
mov
fstp
aam
xchg
mov
lea
add
bound
jp
aas
int3
sbb
out
out
test
(bad)
outs
xor
mov
mov
mov
adc
test
out
test
add
mov
or
stos
fcomp
mov
dec
cmps
push
dec
(bad)
repnz
out
leave
add
in
jno
jl
js
mov
jae
imul
std
pop
test
mov
mov
jno
jge
sbb
stc
out
dec
jg
jp
(bad)
cmp
xchg
mov
mov
bound
fstp
bound
sti
inc
and
inc
sahf
adc
mov
(bad)
cmc
pusha
cmp
not
aam
inc
jns
dec
ror
test
ror
xchg
jne
pop
inc
loop
and
mov
scas
pop
fist
xor
add
or
jmp
int3
jp
xor
rcl
xor
mov
jmp
pop
arpl
dec
and
push
sbb
jge
add
xor
mov
jmp
(bad)
dec
and
lds
addr16
into
stc
out
adc
or
retf
inc
outs
mov
xor
add
push
xchg
mov
cmps
xor
imul
leave
(bad)
pop
sbb
jmp
add
push
nop
cmp
add
mov
or
mov
lods
popa
xor
mov
and
sbb
pop
mov
adc
(bad)
cmp
pop
iret
xchg
shl
xchg
xchg
cmc
aaa
mov
xor
dec
stos
adc
xchg
movs
xchg
into
push
ds
(bad)
(bad)
pushf
pop
mov
xor
or
mov
mov
mov
fistp
lods
sahf
mov
addr16
pop
cs
clc
xor
mov
sub
mov
mov
jae
je
movs
lods
sub
xchg
pushf
aaa
cmp
adc
shl
cmp
push
adc
ja
(bad)
js
sbb
sar
add
sub
jno
int
jne
sti
dec
je
repz
xor
aas
sub
jge
lods
pop
push
xor
and
fist
sbb
aaa
or
add
sar
inc
iret
inc
mov
adc
popf
shr
dec
leave
cmps
add
xchg
mov
mov
inc
xor
das
mov
lds
push
jmp
mov
xchg
push
(bad)
cdq
dec
fisub
hlt
arpl
das
stos
dec
repnz
mov
sbb
loope
in
mov
add
cmp
sub
cmp
jge
or
mov
in
sar
call
jp
add
mov
test
add
mov
dec
push
dec
pop
jne
ret
mov
cdq
cmp
sub
lea
outs
and
out
push
in
push
push
daa
xchg
movs
pop
enter
pop
sub
xor
retf
enter
test
imul
jo
xchg
cli
xlat
and
inc
jno
fucomp
push
push
cmc
inc
ror
pop
loope
mov
mov
ds
xchg
mov
movs
pop
arpl
sbb
mov
fisub
call
nop
push
inc
in
add
adc
mov
rcl
xchg
std
mov
push
sbb
push
retf
ret
mov
pop
shr
add
cmp
add
call
mov
out
push
mov
push
push
cmp
xor
mov
(bad)
jecxz
retf
push
ss
jmp
cs
xor
sbb
in
pop
and
in
xor
sbb
jg
retf
push
mov
adc
mov
je
je
adc
or
jp
test
pop
leave
xor
pop
ins
jae
mov
lods
jnp
inc
bound
jmp
cmp
popa
sbb
mov
add
mov
jle
add
mov
call
cmp
clc
sbb
outs
mov
mov
xchg
pop
fld
pop
xchg
test
sub
and
adc
pop
pushf
das
mov
iret
aam
sub
pop
jnp
in
jmp
xchg
(bad)
push
xlat
push
int3
(bad)
jl
callw
inc
es
jns
add
inc
test
outs
cld
addr16
add
or
ja
outs
stos
pop
add
and
pop
lods
push
(bad)
into
pop
xchg
in
mov
pop
jns
mov
push
repz
pop
les
(bad)
int3
hlt
mov
add
fmul
jmp
or
sbb
sbb
lds
(bad)
xor
cli
and
push
cmc
xor
jmp
(bad)
xchg
stc
cmps
jno
adc
shl
jae
rcr
sub
jmp
lods
mov
cmps
fidiv
pushf
or
sub
sub
mov
leave
sar
push
pusha
lds
test
imul
add
das
sub
sti
ja
mov
stc
inc
lea
pop
or
or
daa
mov
inc
test
jbe
xor
lock
test
mov
mov
jle
cdq
gs
xor
lea
stos
in
pusha
clc
dec
iret
xchg
pop
push
bound
pop
fist
jnp
fistp
jo
sub
or
into
shl
es
push
pop
gs
out
test
ja
xor
out
add
fimul
xchg
fwait
pusha
mov
push
push
or
repz
mov
cmc
test
or
movs
jge
fldenv
imul
mov
or
and
push
and
xchg
sahf
or
jmp
adc
stos
scas
sbb
loopne
adc
scas
xchg
(bad)
push
xchg
push
inc
xor
push
inc
sbb
add
push
add
ror
daa
jns
pusha
icebp
(bad)
fisttp
cmps
xchg
jne
daa
int
repz
adc
js
mov
sti
mov
xchg
add
mov
into
cmp
sbb
adc
out
mov
cli
xor
sbb
add
repnz
sbb
inc
lods
pmullw
mov
xchg
xchg
cwde
cmp
jl
push
in
mov
and
dec
test
xchg
mov
test
outs
xchg
mov
ret
or
arpl
jbe
push
lods
ja
mov
sub
jp
jl
add
xchg
jns
call
mov
xor
mov
sub
popa
dec
es
add
and
sbb
jmp
mov
push
(bad)
jmp
mov
inc
pop
les
lock
inc
call
mov
and
or
adc
and
jns
(bad)
sbb
mov
mov
inc
shl
int3
mov
cmp
inc
jg
repz
clc
dec
xlat
hlt
inc
cmp
jle
ret
in
xchg
and
adc
mov
test
icebp
repnz
movs
les
or
push
dec
in
test
ret
xor
push
jecxz
shl
push
inc
xchg
push
int
call
fwait
xchg
cmp
or
fistp
ja
(bad)
out
call
enter
je
stc
in
inc
add
push
dec
ja
dec
das
xchg
stos
and
sub
push
imul
retf
pop
repnz
retf
movs
pop
inc
inc
fwait
mov
or
call
shl
jnp
stos
xchg
adc
ret
stos
call
scas
cmp
pop
add
fs
jno
fcom
loop
stos
dec
add
mov
jg
mov
adc
pop
jp
sub
adc
push
pop
daa
inc
dec
cmp
sub
xchg
pop
cmps
pusha
mov
addr16
push
outs
data16
fist
mov
jge
sub
pop
xchg
dec
mov
sbb
xchg
pusha
outs
push
dec
fbld
mov
push
jnp
sti
mov
aad
push
imul
test
retf
mov
fstp
pushf
adc
ret
loope
add
pop
or
das
les
jbe
lods
and
(bad)
cmp
call
cld
push
jl
xlat
mov
pop
aaa
loop
daa
cmp
jno
inc
mov
aaa
sub
push
xor
test
jecxz
mov
xchg
ins
ss
dec
pop
dec
adc
lock
movs
mov
ins
mov
pop
xor
mov
and
dec
add
ret
movs
xchg
retf
lods
cmps
pop
fs
call
sub
shr
inc
or
sub
adc
xchg
push
call
scas
adc
les
das
popa
lds
retf
mov
cmp
in
div
add
jb
jg
pop
popf
fidivr
push
push
and
clc
call
inc
mov
repz
into
xchg
dec
(bad)
leave
(bad)
shl
jg
cs
xor
into
fistp
fld
test
and
in
cmp
out
push
hlt
pop
inc
jnp
pushf
in
adc
dec
fs
mov
imul
pop
js
stos
xchg
fwait
sub
shl
cmp
jge
push
not
add
aaa
add
pop
jle
ss
cmp
mov
adc
jnp
aaa
pop
cmp
fiadd
xchg
or
xlat
pusha
gs
lahf
hlt
adc
or
and
call
add
retf
lahf
push
pusha
xor
jb
lea
push
out
movs
xor
jmp
jo
repz
sahf
xor
cmp
xchg
std
inc
cmps
scas
jge
sub
movs
sbb
rcr
ret
daa
int
ret
std
jne
lods
mov
xor
aaa
(bad)
mov
push
aam
mov
ret
or
mov
push
push
pmullw
repnz
mov
xlat
xchg
mov
xchg
sahf
mul
mov
cdq
les
mov
and
push
push
jecxz
add
repnz
push
sti
(bad)
pop
popa
jge
inc
gs
xlat
stos
fdivr
icebp
jo
ss
xchg
push
ret
nop
shr
cmps
cmp
fbld
and
dec
lahf
fidivr
or
mov
int3
fist
pop
mov
(bad)
repz
jg
xchg
push
dec
mov
sub
ret
ja
xor
mov
jl
mov
adc
iret
adc
adc
sahf
loop
mov
jns
cmps
xchg
movs
loop
aaa
add
pop
mov
add
sbb
cmp
xchg
jle
inc
jo
sbb
and
(bad)
jp
push
push
bound
xchg
fs
and
and
stos
pushf
adc
(bad)
pop
xor
in
gs
mov
pmaxsw
add
and
sbb
fdiv
fdivr
les
add
add
push
es
or
jae
inc
xor
sti
test
nop
dec
jno
call
in
jl
and
inc
cmp
fnsave
cmp
mov
lea
mov
pop
sbb
dec
sub
xor
inc
cmc
xchg
jmp
test
xor
std
ins
test
shl
dec
iret
inc
xchg
xor
mov
pop
lea
adc
jbe
jbe
pop
mov
inc
ret
sub
mov
mov
mov
pop
ss
stc
cs
out
dec
and
xchg
stos
cdq
sub
inc
dec
scas
sub
adc
dec
add
sbb
retf
fisub
stc
xchg
pop
jmp
fild
in
aam
and
jno
push
mov
mov
in
adc
call
arpl
inc
ss
add
lods
cli
xor
aas
(bad)
push
ror
sub
shl
jmp
in
rcr
xchg
cmp
mov
inc
sbb
sahf
dec
or
iretw
push
push
loopne
repz
adc
std
xchg
rcl
repnz
sub
dec
repnz
fdivr
mov
inc
popf
or
adc
mov
fmul
mov
bound
stos
or
adc
sub
data16
jno
mov
jo
sub
bswap
sub
add
mov
(bad)
gs
add
(bad)
in
jnp
into
test
dec
sbb
jl
rcr
sub
inc
loop
sbb
dec
sbb
jmp
ins
fadd
loop
outs
xor
push
jmp
int
sub
push
mov
dec
das
lock
lea
pop
push
arpl
sub
sub
bnd
imul
ror
push
(bad)
lods
add
sti
shr
or
adc
std
lahf
add
data16
movups
mov
add
call
push
xor
adc
jbe
mov
test
les
inc
mov
cdq
out
repnz
jno
movs
lds
xchg
imul
xchg
dec
mov
ins
cmp
(bad)
sbb
mov
adc
inc
iret
cdq
ins
push
out
rcr
mov
pop
leave
xchg
enter
imul
mov
idiv
in
and
movs
fild
scas
push
jg
bound
aam
(bad)
in
sub
aas
cmp
or
frstor
aaa
outs
jp
push
jnp
mov
add
jbe
xor
out
enter
xchg
jbe
jne
stc
and
call
shl
sub
xor
xchg
scas
imul
and
pop
mov
aam
xor
imul
push
jae
push
xor
mov
mov
ins
pop
pushf
inc
cmp
push
out
cmp
out
xchg
nop
int
das
test
cmp
les
adc
mov
in
pop
shl
ss
dec
pop
dec
gs
sar
push
scas
or
jnp
mov
ret
imul
jl
or
nop
sbb
add
jl
ds
fsubp
mov
jmp
(bad)
inc
popf
dec
and
ficomp
sahf
jmp
mov
jo
jp
into
cmp
pop
hlt
sbb
mov
iret
add
push
rcl
cmp
outs
xchg
push
and
inc
mov
stos
leave
aad
retf
mov
pop
inc
lea
cli
pop
push
jne
test
cmp
daa
in
dec
imul
inc
sbb
aad
sub
or
xchg
scas
push
js
stos
aas
es
mov
icebp
out
pusha
cld
out
mov
add
out
test
xchg
mov
(bad)
sbb
les
jnp
sub
dec
repz
aad
jne
ins
cmc
cmp
inc
xchg
aad
inc
std
push
sahf
or
push
frstor
mov
(bad)
push
dec
jae
rcr
jb
test
outs
mov
add
fnsave
jae
xor
aam
mov
add
adc
fadd
jecxz
aad
add
lds
movs
push
xor
xchg
scas
jo
or
pop
push
xchg
rcl
adc
stc
xchg
push
mov
adc
aam
fucomi
fsub
pop
jb
fcom
ins
or
or
push
or
ss
(bad)
dec
mov
iret
out
call
pop
jnp
(bad)
fimul
repz
pop
rcl
(bad)
dec
daa
test
sub
xor
pop
scas
enter
push
popf
imul
aas
inc
popf
jo
rcl
sbb
push
ret
pop
inc
pop
cmp
adc
mov
xchg
or
push
clc
and
add
sub
jge
shr
adc
ret
pop
jp
mov
push
inc
mov
mov
push
jb
mov
stos
aas
in
xor
xor
mov
mov
cld
dec
and
je
inc
inc
cmp
out
neg
clc
stos
les
mov
sbb
into
rcr
lahf
mov
add
popa
pop
fs
inc
xor
lods
push
xor
loop
(bad)
dec
adc
xor
add
icebp
and
cmps
mov
popf
scas
(bad)
mov
sub
mov
mov
adc
xor
cmps
cli
shl
neg
outs
int
cld
nop
mov
popf
lock
scas
scas
cmps
inc
dec
(bad)
in
or
addr16
mov
sub
out
push
jno
xor
ror
push
inc
and
jnp
loope
mov
sub
add
cdq
daa
add
jmp
xchg
or
loope
in
pop
ds
add
mov
or
in
das
push
fnstsw
pop
sub
xchg
adc
retf
loopne
cmp
xlat
fistp
mov
or
addr16
xchg
mul
in
fstp
rol
scas
jmp
push
adc
push
into
(bad)
(bad)
jmp
mov
or
mov
mov
sub
jmp
or
and
cmp
xchg
and
enter
dec
mov
sub
pop
aad
call
inc
mov
test
adc
cmps
xchg
and
fdivr
inc
dec
mov
fadd
fsubr
das
lock
scas
fist
jg
into
or
fnsave
pop
mov
xor
pop
iret
adc
lock
ror
stos
or
and
xchg
pop
retf
in
pop
push
(bad)
xchg
sbb
inc
jne
neg
lods
adc
ds
enter
mov
cld
mov
adc
fdivr
icebp
jb
xor
lods
cmp
adc
iret
int
sti
adc
dec
push
cmp
add
test
pop
or
test
rcl
fild
jno
cmp
fnstenv
movs
cmps
call
test
adc
(bad)
les
aas
xor
cmp
(bad)
xor
lods
int3
mov
mov
mov
inc
ds
push
dec
(bad)
mov
rcr
mov
jb
and
push
jl
in
ret
jmp
(bad)
in
out
out
hlt
mov
or
dec
push
pop
enter
dec
cmp
in
in
ja
fs
jmp
cmp
sub
xchg
mov
pop
lahf
sub
mov
scas
xor
out
ret
push
sbb
lea
mov
jecxz
push
(bad)
iret
sub
xor
pop
jo
inc
mov
or
jbe
xchg
shr
lahf
stos
sbb
add
dec
aad
mov
cmps
and
pop
fcom
cli
or
adc
adc
mov
add
jnp
xlat
movs
push
mov
cmp
cli
pop
mov
xlat
test
xchg
cli
loope
adc
imul
add
out
sub
add
ins
shr
js
dec
shl
adc
mov
push
and
loopne
sbb
scas
jl
pop
mov
dec
fnstenv
and
cmp
stc
jecxz
dec
or
push
(bad)
out
call
dec
retf
cmps
ret
mov
xchg
sub
movs
les
sub
push
xchg
or
mov
cdq
in
nop
loope
cld
cmp
adc
out
mov
jbe
popa
daa
repz
int3
sub
(bad)
adc
in
mov
mov
xor
mov
outs
mov
and
stos
cmc
les
test
xlat
pop
sbb
outs
shl
sbb
outs
cmp
loope
int
in
idiv
nop
xchg
sub
or
xchg
mov
inc
fdivr
mov
cmp
push
or
int
scas
les
rol
sub
fsub
or
shr
mov
or
inc
repz
pop
cmp
add
jge
call
outs
xchg
xchg
pop
sub
mov
ficomp
sub
clc
sbb
add
test
push
xor
clc
gs
push
outs
add
lock
sub
stos
icebp
or
cmp
xchg
xor
fiadd
push
icebp
in
mov
test
cmps
leave
pop
mov
mov
data16
push
ins
jae
fcomp
leave
mov
mov
imul
mov
or
xchg
add
sbb
pop
pop
out
adc
cmc
sub
pop
inc
pop
shl
loope
or
xor
jae
call
or
mov
push
pop
addr16
lock
fsub
mov
add
mov
fnsave
xor
sub
rcl
xchg
cs
cmp
sbb
cmps
push
pop
inc
in
jne
or
mov
clc
popa
jo
cld
(bad)
xor
cmp
mov
and
adc
mov
xchg
je
or
sbb
inc
dec
in
sbb
loopne
enter
and
xchg
jns
sahf
sub
call
push
shl
call
lods
or
and
std
sbb
sub
pop
inc
dec
xor
es
ins
xor
enter
pop
pop
push
mov
scas
sub
div
push
push
iret
xchg
ja
xor
mov
(bad)
xchg
dec
dec
sar
fs
cli
stos
cmp
test
daa
inc
(bad)
cmps
fistp
xchg
jl
and
in
out
sub
cmps
xchg
aad
xlat
pop
stos
mov
dec
lea
(bad)
js
mov
mov
cwde
call
shr
in
pop
inc
mov
sub
pop
es
(bad)
xchg
scas
sbb
and
sbb
fiadd
icebp
mov
cmps
add
movs
ss
mov
test
lds
inc
popa
and
xor
lods
or
cmps
dec
jmp
(bad)
addr16
call
into
jne
fst
outs
mov
movs
jns
(bad)
sbb
sbb
cmps
and
aad
or
xchg
and
adc
call
popa
adc
add
movs
xchg
and
addr16
jnp
xchg
rcr
ret
adc
or
dec
xor
imul
outs
push
dec
sbb
mov
cld
icebp
daa
jb
jl
(bad)
mov
scas
mov
loope
sub
movs
sbb
call
pop
push
xchg
dec
and
lahf
cs
xchg
push
ja
adc
aam
aam
mov
inc
inc
push
mov
cmp
scas
fs
idiv
lock
sahf
cs
dec
nop
faddp
leave
jmp
gs
mov
pusha
mov
sub
or
(bad)
daa
push
out
movs
stc
xor
pop
sbb
mov
iret
sahf
and
xor
mov
ror
test
inc
ror
add
xchg
cdq
scas
jae
scas
jg
movs
fisttp
test
pop
das
push
stos
sbb
xor
in
jmp
fs
stc
mov
and
stc
nop
and
mov
imul
sub
bound
shl
sbb
sbb
mov
test
sahf
rcr
into
daa
jl
out
dec
cdq
jge
lds
test
push
mov
ins
scas
pusha
sbb
es
jb
and
xlat
mov
rcr
mov
jno
int
xor
mov
js
mov
neg
mov
mov
inc
ja
fmul
pop
imul
cmp
cld
stos
xor
sbb
xchg
sbb
push
pusha
mov
jmp
lods
clc
add
scas
out
jle
test
mov
jbe
repz
ror
fiadd
cmps
adc
rcl
pop
mov
push
dec
or
mov
xchg
inc
ja
sub
pop
jg
cmp
(bad)
hlt
(bad)
cmp
inc
pushf
test
imul
ficomp
inc
or
xchg
popf
xchg
pusha
imul
mov
test
push
gs
sub
fcomp
mov
cdq
cdq
into
aaa
push
pop
fild
sbb
lods
das
fimul
call
adc
int
sbb
test
lods
(bad)
sbb
xor
vunpcklps
ret
and
inc
dec
pop
mov
mov
lock
sahf
sti
ja
ins
clc
sub
lods
xchg
imul
and
cs
sbb
inc
push
adc
test
rol
repz
jbe
push
mov
or
and
or
dec
sti
popa
movs
inc
fisttp
or
sbb
mov
sub
aaa
pop
sbb
jmp
mov
pop
fnstcw
movs
ret
dec
jg
and
hlt
xchg
nop
repz
nop
nop
test
imul
popf
lahf
cmp
adc
ja
(bad)
mov
inc
pop
lahf
popa
pop
sbb
mov
mov
fadd
(bad)
inc
sti
int
sub
call
sub
mov
iret
mov
out
jecxz
pushf
adc
sub
fst
push
push
(bad)
push
add
mov
dec
add
imul
adc
adc
dec
pushf
(bad)
cwde
stos
call
xchg
push
and
cdq
pop
jnp
xor
out
cmps
xor
cmc
and
aas
cli
sbb
mov
leave
addr16
shr
xchg
sbb
push
sub
(bad)
lock
imul
push
and
and
cmp
or
in
pop
dec
cmp
test
out
test
jecxz
lods
mov
pop
mov
js
arpl
or
(bad)
arpl
sbb
mov
mov
ds
push
movs
mov
push
rol
(bad)
(bad)
adc
aam
sub
mov
adc
in
ja
xchg
or
into
popa
frstor
fistp
sub
xor
push
push
stos
cli
pusha
push
mov
pop
xchg
dec
adc
pop
fs
loope
lahf
pop
pop
push
mul
and
call
mov
inc
cmps
fsubr
mov
out
xchg
mov
mov
mov
ficomp
xor
lahf
aad
test
outs
adc
or
or
stos
xor
xor
xchg
sbb
fadd
inc
cmp
mov
int
mov
mov
rcr
and
sbb
xchg
cs
lds
xchg
nop
ja
sbb
fldenv
xor
rcl
mov
cmps
test
mov
stos
shr
mov
pop
mov
mov
sub
cli
sub
jo
into
mov
lods
pop
test
xor
mov
aad
frstor
xchg
cwde
mov
sbb
bound
out
or
gs
or
out
xchg
inc
push
cmps
les
(bad)
and
xchg
push
mov
fdiv
mov
cmps
mov
es
adc
dec
in
push
cld
lods
ss
adc
mov
dec
out
inc
loopne
ins
mov
xor
cmp
lods
mov
sbb
mov
xchg
xor
scas
and
xor
cmc
fisubr
imul
(bad)
loope
lock
pusha
or
not
mov
inc
fsub
dec
jbe
test
lock
in
mov
and
push
call
mov
and
nop
pop
das
sub
and
js
out
or
shl
or
push
outs
push
sahf
inc
adc
xchg
(bad)
push
mov
retf
lods
lahf
mov
movs
les
ffreep
and
sub
mov
mov
fist
mov
lods
xchg
jle
sub
mov
xchg
iret
mov
dec
and
repnz
ins
stos
mov
and
iret
and
xchg
jmp
pop
mov
lds
push
and
pop
jo
mov
mov
fmul
push
arpl
js
leave
ds
pop
aad
hlt
pmaxub
and
pusha
dec
jmp
mov
cmp
xor
loopne
dec
cwde
xchg
cmp
imul
shr
ins
cmp
jp
mov
mov
inc
cmp
jl
jge
fcmovb
test
jne
ja
push
push
out
test
inc
mov
arpl
or
popa
jl
popa
adc
bound
dec
rol
aaa
daa
xor
aaa
mov
or
retf
xchg
jo
mov
push
ret
xchg
jo
push
sub
icebp
cmp
int
push
loopne
iret
cmp
add
je
xlat
das
and
(bad)
shr
fldenv
adc
stos
stos
cs
cmp
fiadd
push
mov
xor
fiadd
and
add
xchg
sti
mov
repnz
mov
movs
push
je
retf
cmc
adc
pop
xor
mov
jno
dec
mov
enter
or
dec
pusha
and
f2xm1
xor
pop
mov
dec
xor
test
inc
jg
jg
mov
movs
mov
inc
add
add
in
sti
pop
cmps
xchg
cwd
jge
xchg
scas
sub
iret
test
cmp
stos
sbb
(bad)
loop
pop
cmp
fnstcw
mov
jmp
sahf
push
ins
repnz
jae
xor
xlat
jae
sbb
cwde
neg
repnz
jnp
cmp
or
rol
fisub
mov
stc
loop
inc
(bad)
jp
(bad)
adc
mov
jecxz
and
sbb
mov
inc
clc
out
push
jns
sub
jecxz
fistp
jns
arpl
sti
stc
data16
pop
loope
inc
(bad)
arpl
call
jmp
lea
mov
or
mov
cdq
push
int
test
inc
lock
xlat
dec
sbb
inc
dec
arpl
loope
out
out
int3
dec
pop
cmp
or
jle
gs
lods
mov
mov
dec
mov
pushf
xchg
or
seta
rcr
fldenv
aaa
(bad)
jo
mov
imul
add
mov
dec
sub
xchg
(bad)
stc
inc
add
xchg
leave
mov
inc
xchg
jp
sbb
cmp
cmp
out
add
and
xor
ret
pop
or
jecxz
and
je
adc
dec
in
adc
cmp
jbe
xor
ret
inc
dec
adc
ins
xor
sbb
lahf
push
xchg
push
cs
sbb
xchg
lahf
mov
aad
xor
pop
ins
pop
fnstcw
dec
cmps
fbstp
jne
or
loope
ja
ins
mov
or
cmc
(bad)
ret
je
add
arpl
mov
push
pop
sub
push
xor
dec
cmp
or
cli
idiv
pop
out
mov
inc
mov
ins
das
jmp
std
mov
xchg
outs
out
int3
mov
shl
hlt
inc
cmp
push
inc
inc
xchg
push
test
fsub
mov
dec
jl
adc
mov
xchg
mov
jb
ror
sahf
mov
xchg
cs
or
out
adc
push
ins
mov
dec
pop
fild
aaa
jl
xchg
mov
cld
inc
in
arpl
pop
jecxz
jecxz
ins
adc
mov
(bad)
pop
jg
int3
sbb
xchg
ret
lods
retf
test
mov
push
imul
sbb
ja
adc
adc
scas
repz
sbb
gs
pop
push
cmc
out
jo
xchg
sub
push
dec
push
xchg
mov
xchg
cmp
pop
cmp
mov
dec
push
jp
ror
or
xchg
scas
les
hlt
xchg
loope
sbb
(bad)
jne
sbb
push
sbb
push
push
imul
xor
adc
mov
push
loop
outs
ds
and
repz
mov
mov
jecxz
mov
int3
mov
inc
push
lds
jecxz
vorps
ror
push
test
repz
(bad)
leave
(bad)
cmp
fnstcw
adc
inc
xor
pop
and
jne
cmp
je
lds
movs
lahf
xchg
clc
(bad)
mov
movs
xlat
xchg
pop
std
cwde
ror
xchg
idiv
mov
or
xor
xchg
or
ftst
jo
(bad)
adc
out
(bad)
jmp
inc
mov
or
outs
xor
mov
aam
mov
mov
add
lahf
dec
mov
mov
dec
jl
test
jb
and
loop
mov
pop
movs
iret
jb
aaa
cmp
dec
xlat
dec
das
imul
sahf
movs
daa
mov
scas
loopne
out
arpl
sbb
cld
pusha
lock
fisubr
xchg
aas
pop
xor
daa
out
fiadd
sbb
xor
inc
xor
movs
jle
mov
mov
adc
mov
push
cmp
int3
jl
add
jg
mov
sbb
retf
xchg
neg
jp
push
ret
(bad)
outs
jmp
and
or
aad
ret
fcomp
and
jnp
shr
es
in
(bad)
iret
dec
mov
pop
leave
retf
fisubr
pop
pop
ss
sbb
outs
mov
sub
adc
mov
sbb
stc
jmp
jecxz
hlt
popf
sbb
(bad)
sar
out
mov
jge
inc
and
pop
jb
add
fdivr
sahf
push
imul
cmp
cs
in
pop
lds
mov
push
imul
sub
scas
retf
inc
lods
sub
jmp
jns
das
inc
idiv
dec
mov
cmp
mov
ja
sti
push
dec
mov
ds
cmp
shr
sbb
pusha
xor
aaa
retf
jns
in
(bad)
mul
gs
add
mov
(bad)
pop
lea
pushf
aad
xchg
jns
lock
aaa
fldlg2
(bad)
aad
sysexit
add
add
mov
pop
jnp
adc
pop
push
push
dec
xchg
pop
in
setnp
xor
or
adc
sbb
inc
and
loop
scas
push
mov
aas
sub
scas
cld
loop
sbb
sbb
sub
adc
pop
xor
mov
sbb
sub
mov
push
in
ficomp
dec
push
mov
add
cli
or
repnz
pushf
xchg
mov
mov
(bad)
adc
lock
mov
stos
aam
pextrw
inc
mov
cmp
std
cmp
arpl
or
jle
sub
sub
lods
fwait
bound
shr
mov
retf
mov
push
and
lods
mul
jecxz
jge
movs
pop
outs
and
rcr
cmovns
mov
cmp
call
cld
mov
loopne
xchg
(bad)
mov
sub
enter
cmp
sub
(bad)
and
sbb
stc
push
imul
xchg
xor
arpl
test
jp
xor
imul
jmp
pusha
cdq
enter
and
mov
sub
push
inc
test
mov
cs
mov
add
or
movs
ror
jp
xor
ret
adc
inc
jne
mov
xchg
nop
sti
sahf
retf
dec
jmp
jle
pop
lock
ins
jmp
in
movs
shr
pusha
dec
jnp
add
(bad)
xchg
cmp
test
mov
test
rcl
rcl
mov
mov
das
not
push
loopne
dec
cmp
repnz
add
sbb
ror
in
mov
jl
je
adc
cmp
movs
lea
clc
in
fs
aaa
and
or
in
rol
mov
cmp
inc
cmp
xchg
and
cmps
sub
(bad)
pop
mov
js
jno
push
ficomp
xor
test
push
icebp
sub
(bad)
jnp
iret
pop
cmp
add
stc
test
div
mov
ficomp
mov
ds
adc
pop
(bad)
sub
or
das
popf
inc
sbb
int3
xchg
(bad)
ficomp
push
push
ds
cmp
push
std
stc
mov
jnp
pop
adc
rol
pop
jecxz
push
shr
add
stos
jae
push
push
data16
jmp
int
mov
fstp
dec
leave
sub
sahf
mov
(bad)
mov
sar
xchg
div
sub
retf
jecxz
jo
out
inc
mov
(bad)
fist
xchg
cmp
test
adc
add
adc
int
jmp
jg
ins
cli
inc
cmp
fbstp
out
das
cmc
mov
ins
sbb
jmp
pop
adc
stos
add
int
inc
cs
dec
sub
out
shr
pop
shr
rcr
ins
rcr
mov
xchg
mov
lahf
cmps
adc
pop
fwait
push
sbb
jecxz
ja
add
aaa
inc
push
repnz
lea
lock
movs
xor
outs
movs
sub
inc
cmps
(bad)
jnp
pop
push
lahf
pop
stos
jp
or
(bad)
stos
pushf
and
fsubr
in
jb
or
push
jbe
test
inc
dec
in
adc
pop
inc
mov
imul
addr16
(bad)
std
bound
dec
mov
aaa
das
pushf
ins
mov
rcr
rol
repnz
mov
dec
(bad)
jmp
enter
or
add
mov
in
aad
into
and
scas
jl
je
adc
mov
aam
loop
add
ret
xor
push
(bad)
pop
jae
and
push
sbb
sbb
nop
lods
and
or
dec
adc
fimul
(bad)
fidivr
fistp
bound
jae
sti
mov
mov
aam
(bad)
fs
add
sbb
in
shl
cmp
dec
push
div
fs
and
mov
in
mov
scas
popf
inc
add
inc
les
mov
inc
push
xor
pop
mov
icebp
push
addr16
sub
(bad)
adc
repz
xor
xlat
inc
in
cli
jbe
int3
fwait
jne
push
in
pop
aas
cdq
loopne
cmp
stc
les
cdq
cwde
das
jns
std
adc
cli
sbb
jecxz
adc
adc
mov
fs
ror
mov
sub
pop
test
out
add
push
int
dec
xchg
scas
sbb
pop
enter
inc
je
loop
mov
mov
cmp
aam
out
bound
ficomp
and
in
add
bound
sbb
pusha
sbb
repz
test
pop
mov
arpl
jmp
xchg
cs
xor
(bad)
or
pop
lock
dec
mov
stos
sub
js
shr
cmp
jne
jnp
jg
popa
int
(bad)
(bad)
push
cmp
mov
dec
ret
retf
repnz
cdq
and
mov
add
dec
mov
ret
sbb
push
in
mov
in
aaa
add
mov
imul
dec
popf
mov
jns
xor
pop
aam
xchg
aam
retf
hlt
mov
int3
int
sub
das
add
pop
mov
imul
inc
push
mov
pop
inc
and
mov
jnp
sbb
sub
je
test
ret
fldenv
test
fs
jmp
sub
aaa
and
test
in
pop
mov
fmul
out
or
cli
jmp
imul
dec
pusha
mov
mov
mov
jo
dec
cmp
sub
mov
fsubp
shl
mov
push
mov
stos
dec
add
jmp
xchg
push
push
sub
or
pop
pop
dec
aad
xor
cmps
loop
mov
mov
jo
add
ss
fs
div
mov
ins
mov
mov
in
imul
call
int
xchg
retf
ss
inc
pop
cmp
cmp
dec
cld
push
cwde
cmps
inc
jg
jmp
or
mov
push
aad
js
mov
pushf
ins
into
leave
cmp
in
cmps
jmp
movs
pop
or
dec
and
adc
add
jle
scas
xlat
xor
loopne
cmps
push
mov
enter
cwde
lock
bound
imul
addr16
nop
mov
stos
shl
xor
inc
cs
add
aam
sub
clc
push
mov
hlt
test
rcr
aad
jge
fisubr
sbb
and
mov
adc
in
or
sub
ret
jnp
or
fst
or
mov
sbb
xlat
cld
sti
mov
add
dec
push
add
push
dec
clc
sub
or
dec
dec
daa
or
sub
mov
stc
or
lods
dec
cmp
push
xor
pop
cmc
out
addr16
or
mov
call
lahf
jae
imul
and
gs
sbb
in
dec
or
(bad)
mov
cmp
shl
pop
mov
cli
xor
pop
adc
inc
adc
dec
je
pop
imul
add
bound
fstp
mov
test
xchg
ss
lds
lea
dec
adc
pop
dec
push
sbb
test
xchg
out
in
outs
ret
into
(bad)
cld
jecxz
mul
push
scas
call
fisttp
rcr
sub
mov
jmp
add
dec
sbb
(bad)
sti
adc
mov
mov
cmp
push
mov
jno
(bad)
mov
inc
test
jnp
mov
aas
(bad)
dec
enter
in
ins
xchg
push
mov
mov
cmps
cmp
and
fwait
pop
mov
enter
(bad)
and
(bad)
mov
mov
push
lock
mov
jg
jno
add
fstp
(bad)
xchg
inc
jnp
jecxz
sub
cld
pop
in
push
sub
arpl
sub
and
inc
inc
and
test
fsubp
jg
and
mov
pop
aaa
in
lock
xchg
int3
popf
adc
sub
out
jns
pop
push
sub
jle
pop
dec
pop
jnp
daa
inc
cwde
std
fidivr
fmul
sahf
sub
inc
push
xchg
test
mov
ja
enter
int3
pop
test
pop
pop
xor
cwde
inc
push
stc
fimul
lods
xchg
or
cli
jbe
sti
dec
jbe
leave
dec
jbe
cmps
pop
imul
sbb
sbb
cmp
xlat
sahf
lahf
in
or
aas
out
imul
popa
jnp
jge
pop
aad
outs
push
aaa
sbb
pop
lods
fwait
inc
adc
test
xchg
cmp
push
adc
leave
xor
adc
outs
hlt
dec
addr16
mov
jo
sbb
xor
imul
xor
mov
xor
pop
push
jmp
push
jge
stos
cmp
mov
sbb
scas
jns
push
push
add
pop
lahf
fstp
in
adc
fidivr
hlt
jb
retf
out
jp
shl
jb
dec
mov
pop
nop
sub
add
icebp
in
clc
xor
push
outs
sub
xor
mov
lods
mov
cmc
xchg
add
fbld
adc
daa
sti
mov
test
fsubr
mov
push
(bad)
mov
sbb
lds
xchg
cmp
or
ror
sahf
adc
adc
xor
cdq
call
push
and
xor
or
jg
cli
rcl
sub
fist
jbe
jns
adc
push
mov
int
pushf
popa
(bad)
ja
stos
jno
jae
dec
xchg
xchg
or
fsubr
or
mov
and
cmp
sar
into
sub
fwait
sub
mov
mov
add
dec
or
(bad)
stc
dec
push
out
push
dec
add
lock
mov
dec
and
call
xchg
or
push
push
push
shrd
mov
pop
nop
imul
jmp
and
add
and
sub
sahf
and
retf
sub
cmps
mov
loope
repnz
mov
sbb
rol
mov
imul
ins
pusha
(bad)
jl
in
push
add
cld
pushf
shl
mov
jns
ds
xor
test
cwde
ror
popa
pop
adc
iret
xchg
mov
or
add
cs
fistp
ret
mov
imul
add
mov
and
push
xchg
xchg
mov
add
nop
call
jle
cmc
daa
sub
xchg
xchg
outs
data16
and
push
and
ds
cmps
arpl
mov
nop
int3
mov
sar
jg
add
adc
daa
cmp
adc
or
jle
cld
fcmovb
mov
sar
mov
ret
ins
(bad)
dec
hlt
(bad)
cli
jb
fld
inc
rcl
add
lods
push
in
xchg
sbb
out
dec
loopne
fsubr
xor
mov
xor
or
cmc
push
push
jp
(bad)
loopne
test
adc
adc
or
ss
push
mov
js
jecxz
push
shl
cli
pop
xor
sub
jg
push
adc
xor
dec
sbb
iret
jno
push
je
mov
sub
xchg
fnsave
sbb
cmc
sub
xchg
lods
shl
rol
into
std
cmps
mov
jbe
pop
jl
cwde
mov
xchg
sub
dec
push
mov
push
jns
push
mov
xchg
scas
adc
cmc
mov
(bad)
hlt
fisub
mov
mov
fcom
lock
adc
mov
mov
aam
clc
xchg
mov
cmps
mov
cwde
(bad)
or
call
jp
pop
sbb
or
std
adc
cmp
dec
arpl
scas
jmp
mov
cmp
mov
jge
cli
shr
mov
and
jmp
pop
repnz
or
mov
inc
jp
sub
jp
fld
jae
push
or
fcomp
push
jmp
jp
frstor
pop
mov
or
push
imul
leave
jno
jb
int
or
mov
popf
or
inc
xchg
inc
dec
jb
clc
push
mov
es
adc
pop
scas
sar
cmp
stos
push
call
std
xor
add
mov
jmp
inc
jle
rdtsc
ret
fs
lods
mov
adc
dec
mov
push
sbb
and
cdq
test
or
test
cs
cmc
ds
push
out
js
jmp
push
std
or
jns
fdivr
xor
mov
pop
mov
es
test
dec
jbe
push
dec
cmp
add
add
jae
leave
cdq
mov
or
mov
or
jmp
or
mov
jmp
rcr
sbb
push
dec
push
mov
in
je
icebp
sub
inc
repnz
mov
jae
add
iret
xor
push
enter
aaa
push
push
jne
xor
mov
add
sub
dec
jnp
dec
mov
xor
jb
enter
push
mov
dec
aas
pop
inc
xchg
outs
mov
push
ss
sub
sub
add
xor
dec
shr
push
(bad)
sbb
or
inc
push
mov
and
adc
push
add
aas
mov
and
repz
sbb
cwde
fnstcw
pop
fst
mov
(bad)
xor
or
jno
and
ds
sub
js
call
cmp
jnp
xchg
sub
movs
adc
add
hlt
pop
std
fmul
inc
xor
fist
pop
movs
sub
and
vaesenc
xchg
(bad)
dec
repz
cmp
rep
cld
jmp
push
ds
inc
add
sar
aaa
ds
shl
or
jb
sbb
sti
push
mov
pop
mov
call
and
or
lock
repz
jg
jne
out
fidivr
mov
lods
icebp
xchg
pop
and
push
sbb
and
xchg
fwait
jbe
sub
sub
fsubr
jecxz
out
sub
imul
mov
mov
mov
jb
pop
xchg
imul
cs
es
(bad)
mov
and
adc
cmps
in
repz
fbld
xlat
sub
push
sub
sar
add
add
add
sar
sbb
shl
stos
aad
add
lock
push
cli
cwde
fnsave
into
sbb
jmp
sbb
leave
mov
js
xor
xor
into
cmp
aaa
mov
pop
xor
icebp
pusha
mov
fcom
inc
fisttp
cli
das
not
fsub
repnz
test
jl
inc
mov
cmp
mov
(bad)
cli
or
lea
mov
leave
mov
push
fs
inc
inc
adc
jmp
test
test
movs
je
in
cmp
mov
int3
mov
fmul
mov
mov
inc
add
arpl
fsub
pushf
sub
int
bound
cmp
rcl
pop
mov
sbb
dec
push
xchg
outs
jmp
and
xchg
dec
cmp
jmp
js
adc
aad
mov
cmc
sbb
out
ds
cmp
fs
aas
inc
push
cmp
pop
cmp
mov
stos
push
sbb
shl
mov
mov
(bad)
(bad)
adc
rcr
and
and
loope
cmp
sbb
adc
imul
adc
or
mov
in
mov
fild
lds
and
test
dec
dec
out
jp
cmp
inc
cdq
add
retf
fdivr
mov
leave
and
lds
inc
pop
xchg
sub
ins
inc
jns
ss
addr16
fdivr
mov
and
arpl
mov
xchg
pop
repz
add
shl
mov
dec
jmp
adc
add
iret
mov
mov
xchg
push
ins
dec
stos
cmp
outs
pop
pop
push
and
mov
dec
cmp
in
(bad)
jmp
lods
jge
mov
std
pop
outs
loop
push
call
(bad)
jmp
ja
jb
jle
test
cmps
xor
pop
jbe
cld
adc
sbb
push
sbb
inc
dec
and
in
rcl
fwait
stc
mov
mov
mov
stos
adc
mov
fsub
adc
ins
lods
jge
repz
pop
jmp
mov
outs
cmp
sub
and
sub
add
mov
dec
push
pshufw
bound
hlt
xor
push
loopne
xchg
sub
and
mov
into
adc
push
ins
adc
out
add
loopne
out
mov
fadd
shr
out
std
test
(bad)
push
ss
adc
pop
shl
lock
xchg
jmp
in
leave
xchg
sbb
retf
push
mul
xor
js
pushf
mov
in
mov
add
inc
mov
shr
mov
dec
(bad)
xchg
mov
add
out
add
mov
scas
inc
(bad)
fstp
test
dec
loop
push
xor
out
push
rcr
adc
ja
adc
xchg
fscale
inc
sub
out
arpl
xchg
jle
sbb
mov
in
(bad)
xor
cmps
test
mov
mov
mov
push
std
dec
repnz
pop
xor
pop
outs
jb
push
cdq
push
sbb
jmp
and
adc
adc
(bad)
and
mov
push
loopne
aam
xchg
scas
add
arpl
sar
sub
push
push
sbb
imul
std
mov
pop
add
inc
cmps
push
std
xchg
mov
inc
lods
add
sahf
and
add
clc
lods
popf
or
or
ins
sub
push
or
pop
lods
call
pushf
sub
mov
cmp
js
and
sar
adc
jae
cwde
mov
xchg
pop
mov
mov
test
sbb
imul
(bad)
loop
retf
mov
pop
adc
fadd
add
mov
sahf
jmp
xchg
push
sbb
add
jbe
push
arpl
loopne
repz
dec
fnstenv
out
inc
jbe
lods
js
(bad)
rep
add
mov
inc
std
xor
pop
xor
loop
mov
int3
cmp
je
sub
sbb
loop
stos
stc
push
mov
xchg
sbb
jg
push
hlt
push
jae
loope
dec
inc
int
jmp
pop
mov
cld
cmc
std
sbb
inc
dec
mul
cdq
jns
(bad)
mul
xor
not
and
loope
xchg
pushf
outs
mov
sub
push
or
cli
adc
out
pusha
add
xchg
jge
ins
jl
cmp
mov
or
test
std
es
mov
(bad)
fadd
push
add
ds
add
inc
jno
sbb
std
push
fs
xor
(bad)
(bad)
cmp
jp
pop
data16
sbb
sahf
push
lods
adc
pop
or
mov
xor
hlt
mov
and
neg
out
xchg
push
mov
and
xchg
repz
mov
clc
(bad)
popa
call
das
add
pop
push
xchg
inc
or
popa
adc
sti
xor
mov
pop
mov
ffree
push
push
pop
jp
cmp
jl
fstp
(bad)
das
xor
inc
cmc
add
adc
(bad)
add
xlat
pop
rcl
mov
das
fisubr
cmp
icebp
jl
mov
or
shl
fcmovne
popf
cmp
out
mov
out
pop
xchg
test
in
aaa
sbb
in
adc
sbb
mov
or
pop
mov
aas
cmp
call
loope
push
neg
xor
xor
dec
mov
rcl
shl
imul
(bad)
cs
cmps
movs
sbb
xchg
xor
add
rol
mov
push
add
dec
pop
repnz
call
mov
xchg
daa
mov
mov
or
and
rol
ds
cmp
mov
jnp
pop
jne
fld
inc
movs
in
arpl
fdivr
cmp
repnz
scas
pusha
cld
ins
in
or
or
cmp
cdq
mov
xor
fist
pop
shl
pop
mov
lea
jmp
xchg
mov
jmp
jecxz
sbb
add
les
jle
pop
fs
rcl
popa
aam
push
xor
test
pop
mov
push
std
fnstcw
movs
loopne
xor
ds
rcl
(bad)
lock
inc
or
outs
adc
imul
enter
mov
movs
fisttp
cmp
sbb
push
push
dec
push
cmp
mov
dec
add
je
les
mov
sbb
movs
jne
jmp
dec
dec
out
inc
cmp
inc
xor
(bad)
loopne
retf
shl
(bad)
mov
jmp
ja
stos
aas
sbb
add
gs
loop
adc
nop
xchg
je
daa
cmp
mov
ins
in
mov
xchg
adc
cmps
(bad)
fdivr
push
fwait
push
aas
sub
mov
and
out
xchg
push
adc
or
inc
or
push
shl
push
xlat
out
mov
scas
retf
cmc
xchg
sub
stos
dec
pusha
xchg
sub
cmp
inc
sub
mov
test
or
mov
jnp
push
das
push
hlt
sahf
cmp
push
cdq
pop
out
add
(bad)
loope
arpl
sub
lock
test
pop
pop
pop
adc
xor
sbb
adc
(bad)
cmp
sbb
push
cli
adc
sbb
into
mov
sub
(bad)
mov
pop
lock
sbb
cmp
jb
call
xchg
movs
pop
arpl
push
adc
pop
inc
xlat
(bad)
(bad)
sub
jmp
pop
test
dec
out
push
aas
mov
shl
ret
xor
retf
mov
shl
xchg
mov
mov
jae
push
inc
dec
cld
adc
outs
loopne
add
ss
in
fcomp
mov
dec
out
cmc
cmp
cmps
in
cdq
jb
sub
sub
jl
cmps
fsubr
fild
mov
xor
add
jmp
cmovns
sbb
xchg
sbb
(bad)
gs
adc
inc
outs
pop
(bad)
mov
lock
out
call
jno
ret
push
mov
pop
dec
and
adc
or
sub
(bad)
fsub
fcmove
icebp
xor
dec
inc
cld
js
jnp
sahf
inc
cmps
test
and
mov
push
mov
or
sbb
jne
mov
aas
mov
xchg
sti
iret
inc
mov
lea
mov
sbb
sbb
or
mov
ja
cmp
imul
arpl
inc
jae
mov
adc
xchg
pop
imul
adc
les
cdq
add
push
loop
or
scas
push
lods
pop
fst
fisub
stos
sbb
jbe
mov
and
sub
pop
sbb
adc
iret
jg
test
ins
and
into
stos
dec
jmp
fwait
cs
in
add
cmp
dec
jbe
push
and
dec
mov
hlt
and
push
stc
nop
fdivp
pop
(bad)
fcom
mov
adc
inc
dec
xor
xor
adc
mov
ret
stos
inc
mov
sahf
add
push
lods
dec
cli
jnp
cwde
or
fistp
jmp
scas
push
xor
adc
mov
mov
inc
ror
mov
and
popa
add
mov
jae
clc
mov
leave
mov
dec
jnp
js
xor
jmp
stos
pop
adc
sub
outs
pop
or
and
aam
cmp
cmp
push
cmc
jl
push
imul
shr
mov
adc
mov
dec
add
jmp
xor
mov
frstor
icebp
test
pop
addr16
fcomp
scas
adc
or
pop
ror
jmp
adc
inc
loope
lods
in
(bad)
mov
dec
fdiv
loopne
push
ins
inc
mov
out
dec
out
mov
bound
aad
mov
mov
test
sbb
xlat
pushf
stos
shl
xor
(bad)
ror
mov
inc
hlt
mov
mov
sbb
jne
imul
add
xor
sbb
shl
ja
cmps
adc
pop
call
test
xchg
mov
add
push
adc
bnd
xchg
xor
ins
or
mov
ja
push
cmp
test
popf
stos
jmp
rcr
test
imul
aas
jno
inc
outs
adc
mov
ja
shl
jecxz
retf
ror
xchg
xor
dec
jmp
(bad)
rol
and
jge
dec
ret
popa
adc
jo
mov
mov
pop
xor
xchg
or
into
into
lea
fwait
scas
mov
add
mov
cmp
(bad)
pop
add
push
inc
jno
or
stc
jecxz
aas
cmps
pop
xchg
cmp
ret
cwde
adc
dec
stos
cwde
sub
stos
mov
loop
or
cmp
jl
(bad)
mov
xchg
inc
jae
shl
lahf
xchg
jno
xor
addr16
xchg
mov
pop
push
clc
cdq
punpckhbw
sbb
sti
push
cmps
mov
xor
dec
push
jbe
fwait
movhps
cwde
push
shl
dec
outs
(bad)
outs
mov
xor
mov
and
popa
sbb
shl
mov
and
push
inc
pop
test
sub
cwde
movlps
xchg
outs
mov
(bad)
je
jno
(bad)
mov
daa
mov
xchg
loope
mov
pop
mov
cmp
push
mov
mov
aad
std
dec
mov
mov
shl
lock
mov
icebp
sar
push
repnz
pushf
aaa
jmp
mov
mov
lock
push
sbb
stos
pop
movs
or
loope
cmc
jne
pop
inc
push
mov
xchg
add
pop
push
fadd
jne
cwde
aam
loop
xor
in
jae
dec
mov
clc
sbb
pop
pop
adc
frstor
mov
pop
mov
fwait
mov
fld
(bad)
jb
pusha
cmps
jge
mov
mov
pushf
add
(bad)
outs
loop
add
inc
ror
fdiv
cmp
jo
clc
mov
jl
adc
mov
xchg
add
nop
mov
rcr
ins
rol
sbb
jle
or
dec
aam
cli
out
mov
test
cmp
adc
in
jo
xor
adc
or
in
mov
leave
retf
dec
pop
aam
push
arpl
jecxz
in
jmp
cmp
leave
retf
enter
bound
jmp
cmp
(bad)
in
jle
das
and
xlat
mov
sar
sar
fimul
dec
and
mov
cdq
ror
sub
(bad)
ror
pop
mov
cmc
ficomp
xor
and
adc
fs
pop
push
cwde
inc
dec
sub
push
pushf
or
scas
and
mov
stos
lods
xor
popf
repz
pop
and
(bad)
pop
mov
call
push
push
in
into
cmc
test
xchg
mov
xor
in
cmp
xor
jp
or
out
mov
xor
outs
popa
mov
into
push
push
and
clc
sbb
les
add
push
or
xchg
je
mov
aas
lahf
call
xchg
mov
push
mov
xchg
pop
arpl
dec
adc
out
out
imul
push
xor
nop
sub
jbe
out
sbb
dec
adc
cmp
and
ins
lds
lock
mov
lahf
mov
jge
(bad)
or
mov
(bad)
sti
xlat
and
sbb
imul
cdq
mov
out
adc
xlat
inc
push
jb
in
xchg
and
pop
aas
fidiv
shl
cmp
lock
fucomi
fs
inc
add
stos
cmp
ins
push
cmp
repnz
lahf
pop
inc
sub
es
dec
jmp
cmp
add
clc
fbld
and
in
cld
mov
ret
dec
int3
mov
jl
mov
inc
(bad)
xor
dec
out
sbb
cs
(bad)
mov
or
adc
nop
addr16
adc
ins
js
mov
js
mov
mov
pop
pop
dec
div
out
stos
inc
mov
xchg
jp
adc
add
repnz
mov
push
mov
mov
xlat
cmp
add
(bad)
cmp
sbb
mov
mov
mov
sbb
loopne
xchg
les
cvtps2pi
loopne
adc
push
pop
adc
sub
je
arpl
push
mov
xchg
xchg
dec
scas
push
ss
cs
sub
push
int
push
xlat
mov
xor
sub
jbe
test
xchg
push
(bad)
icebp
cmps
xor
arpl
push
push
or
cmps
pusha
add
out
xor
adc
cmp
dec
pop
push
sar
sub
sub
fbld
loope
call
mov
push
shl
fucomi
adc
sbb
dec
in
imul
jle
add
pop
sbb
in
mov
sbb
sbb
ficomp
test
dec
lahf
repz
pop
and
pop
dec
cwde
xchg
movs
add
dec
movs
sbb
stos
movs
jno
push
int3
mov
sar
jnp
out
cmp
(bad)
dec
enter
sbb
adc
retf
sbb
bound
inc
shr
adc
ins
and
xchg
je
xchg
push
cwde
lock
neg
scas
mov
jg
add
test
loop
stos
push
js
sub
mov
not
test
cmp
pushf
xchg
mov
test
jmp
cmps
mov
shl
or
iret
mov
sub
dec
cmp
xlat
outs
fabs
xor
rol
cmp
int
xchg
add
mov
push
xchg
fisttp
sbb
in
add
daa
js
test
jp
dec
or
jno
jmp
add
test
outs
scas
fidiv
mov
inc
jbe
xor
dec
cmp
ins
inc
fild
jbe
mov
cmps
inc
stos
xchg
xchg
call
inc
pop
test
stc
sbb
(bad)
adc
jge
jno
scas
hlt
scas
imul
cdq
lods
cdq
stos
es
pop
push
mov
mov
in
sub
pushf
sahf
dec
cmp
fwait
mov
mov
mov
fidivr
xchg
hlt
(bad)
jb
or
mov
out
enter
stc
xchg
gs
mov
das
int
xchg
inc
xchg
sub
xlat
(bad)
ja
mov
outs
jle
and
sub
jmp
in
dec
xchg
pusha
jmp
imul
inc
adc
rol
clc
(bad)
sub
dec
jle
or
or
sub
xor
dec
aad
cdq
jb
lods
popa
jl
retf
sub
fwait
movs
push
pop
jmp
das
aad
fcmovnb
mov
push
adc
aas
cmp
pop
popf
xor
(bad)
pop
xchg
cli
sbb
mov
mov
inc
dec
mov
mov
lahf
popf
mov
lock
fsubr
pop
pop
mov
in
(bad)
loop
test
dec
neg
mov
scas
xchg
jo
push
push
ret
dec
iret
je
inc
in
das
xchg
fisttp
mov
mov
jmp
mov
sub
mov
mov
push
dec
xchg
jecxz
jle
push
lahf
outs
mov
push
sbb
retf
mov
mov
scas
xor
ss
(bad)
add
xor
icebp
imul
or
pushf
jg
loop
out
push
movaps
mov
pop
pop
mov
pop
loopne
lods
fistp
lahf
fcom
ss
(bad)
enter
push
in
cli
push
inc
cmc
jae
mov
xor
cli
push
cmps
add
loope
(bad)
pop
stos
mov
dec
mov
push
jecxz
cmps
loop
cmps
fiadd
add
mov
les
arpl
addr16
imul
sbb
shl
repz
cmp
jmp
daa
loopne
xchg
rcr
mov
push
sar
dec
shl
lock
out
mov
fidiv
sti
sbb
cmc
cmc
pop
sbb
pop
dec
mov
lock
out
scas
xchg
sub
sub
aad
sbb
push
mov
sub
out
daa
sahf
(bad)
cmc
or
subps
mov
popf
dec
retf
mov
(bad)
sub
inc
clc
jecxz
xchg
jmp
sub
aad
cmp
in
test
mov
jnp
dec
jo
mov
retf
bnd
or
mov
loopne
out
cmp
lods
cmp
dec
add
je
js
fnstcw
push
sbb
int
sbb
push
iret
out
adc
aaa
test
das
mov
push
rol
ret
cmp
cs
test
sbb
jne
inc
sbb
sbb
out
js
int
sbb
aaa
ins
imul
jb
sub
imul
in
test
in
inc
mov
add
popf
adc
stos
jno
lds
sub
mov
xor
leave
cmp
pop
in
iret
dec
pushf
pop
inc
pop
test
and
std
dec
sbb
sub
jecxz
icebp
idiv
adc
push
fld
leave
(bad)
in
cmps
push
xchg
into
rol
add
adc
arpl
sbb
imul
lods
jmp
inc
movs
mov
sub
retf
pop
xchg
cmps
or
push
dec
push
out
ds
mov
cmps
adc
ror
ret
mov
test
aam
imul
pop
or
mul
(bad)
inc
dec
xor
daa
loopne
cmps
inc
pop
mov
add
pop
mov
xchg
ins
inc
sbb
push
sbb
leave
mov
ds
push
stc
jmp
inc
xlat
and
adc
out
mov
mov
xor
shl
in
enter
xchg
jae
fs
lea
daa
fsubr
aam
pop
jg
xchg
pop
cmc
mov
xchg
jg
lea
xor
ret
inc
in
add
pop
rcl
dec
xor
sbb
call
arpl
jmp
push
pusha
push
push
call
push
dec
out
out
test
cs
or
add
sahf
jno
push
jbe
pop
jae
aas
fs
jne
inc
ret
ret
ror
lahf
mov
mov
sbb
std
mov
iret
aaa
adc
cs
inc
xchg
aam
mov
mov
sub
sub
in
dec
test
retf
and
add
out
fidiv
xor
xchg
mov
loop
mov
in
jl
mov
fdivr
mov
jns
not
rol
xchg
push
stos
pusha
mov
mov
aam
jb
into
das
aam
push
adc
and
inc
sar
div
enter
mov
push
push
push
data16
pop
test
xor
cmps
cwde
pop
sbb
and
js
jnp
cs
outs
dec
test
daa
push
push
in
cmp
in
jbe
enter
mov
pop
mov
cli
ins
xchg
sub
mov
fwait
mov
xchg
dec
cmp
jne
inc
in
sub
sahf
neg
mov
ret
pop
mov
out
mov
mov
scas
jbe
jl
loopne
xlat
sub
inc
sbb
push
ret
xchg
and
cmp
loopne
cmp
sbb
shr
dec
xchg
push
ja
ins
sbb
cmps
mov
gs
mov
fadd
mov
add
popf
test
mov
mov
ins
push
mov
mov
fdiv
enter
shr
hlt
add
or
or
cmp
jmp
cmp
popf
int
xchg
mov
push
push
push
sbb
test
add
in
setnp
cli
dec
and
outs
xchg
fnstenv
jp
or
jmp
pop
pop
jno
jmp
nop
jno
sahf
mov
push
je
push
jmp
jecxz
or
xchg
add
cmp
lods
ja
in
push
les
xor
and
jmp
popa
popa
adc
fadd
jbe
xchg
ret
ret
fisttp
ss
jle
int
fcompp
outs
sbb
or
inc
xchg
cmp
pop
fwait
sti
push
ror
lds
inc
int3
add
imul
movs
pop
jbe
xchg
push
sub
sahf
(bad)
std
add
push
pop
and
push
shl
or
sub
and
inc
jns
jnp
and
rcl
imul
inc
push
push
dec
scas
jnp
mov
jmp
jnp
js
or
add
call
pushf
mov
lods
call
scas
arpl
jecxz
lds
mov
push
cmp
fdivr
add
leave
pop
cli
ret
pop
jge
and
or
sbb
(bad)
fadd
mov
push
fsubr
mov
repnz
jge
icebp
jmp
sti
push
jg
adc
mov
adc
push
jb
xchg
adc
xchg
stos
std
dec
inc
jnp
in
enter
in
add
sub
push
add
aad
xchg
cmp
clc
mov
fidiv
sub
sub
(bad)
mov
out
retf
stos
aam
xchg
cmp
mov
cmp
dec
fidiv
pop
mov
ret
xor
mov
pop
dec
ror
cmp
jo
clc
jmp
ss
ret
cmps
mov
scas
or
mov
inc
cld
icebp
rcl
sub
loop
test
jbe
(bad)
paddq
mov
dec
adc
push
stos
sbb
jae
cmp
sbb
adc
test
hlt
sahf
movs
not
add
int
pop
cmp
ret
fisubr
dec
add
sub
xor
popf
fisttp
or
ret
mov
fwait
test
mov
int3
xchg
jle
popa
jae
push
sub
mov
jmp
movs
pusha
lock
and
mov
les
xchg
pop
cli
test
push
sbb
mov
mov
in
add
and
push
or
retf
push
push
aam
shl
not
pop
mov
jmp
aaa
mov
lods
clc
sahf
je
mov
and
popa
cmc
mov
or
aad
push
mov
jmp
maskmovq
idiv
xor
sub
cdq
mov
push
pop
sbb
sub
add
adc
rol
mov
in
retf
adc
dec
jmp
cmp
jge
sub
jns
sahf
(bad)
(bad)
sbb
imul
nop
xchg
scas
dec
stc
dec
stc
xlat
sti
push
cmp
xchg
loopne
push
dec
mov
das
shl
in
in
mov
(bad)
fst
xchg
xchg
lock
in
or
(bad)
nop
les
jno
pop
out
clc
add
leave
call
jmp
loope
dec
pushf
push
out
inc
push
jnp
and
(bad)
pop
xor
out
mov
popa
xchg
call
xchg
jae
rol
or
or
add
pop
mov
movs
int3
movs
pop
add
pop
xor
pop
mov
push
add
fdiv
mov
push
retf
mov
icebp
retf
mov
ins
(bad)
xor
sbb
ss
pop
jbe
mov
hlt
jle
inc
xchg
icebp
ret
push
jne
inc
mov
aad
mov
pop
shr
sbb
loopne
push
adc
pusha
mov
frstor
push
jne
jnp
mov
addr16
dec
movs
(bad)
out
adc
mov
and
popf
sbb
pop
fnsave
stos
les
jmp
neg
push
std
inc
add
push
mov
or
pop
out
inc
ins
daa
push
mov
sub
je
ret
ja
dec
push
fstp
iret
xlat
std
dec
mov
fwait
add
aas
shl
nop
xchg
mov
into
jno
mov
push
dec
add
movs
jmp
inc
push
dec
jnp
ins
addr16
jo
hlt
fcmovne
push
loopne
and
mov
cmp
mov
retf
icebp
push
jbe
scas
(bad)
mov
imul
repnz
jle
lea
jo
out
dec
push
lea
fs
ds
lds
cmp
repz
(bad)
out
(bad)
arpl
pop
xor
mov
and
and
jae
lock
jle
push
jmp
sbb
push
aam
hlt
leave
and
fcmovnbe
jnp
mov
lock
out
dec
aas
pop
out
push
jge
push
das
pop
push
call
psubusb
rol
cdq
sbb
xchg
cdq
jmp
inc
xor
cmps
iret
push
mov
jae
pushf
adc
dec
jl
xchg
rcl
std
mov
inc
mov
pop
mov
pop
jbe
rcl
cmp
mov
jmp
iret
mov
jmp
push
inc
imul
cwde
ret
shr
push
and
popa
fdivr
les
xchg
jmp
call
mov
(bad)
retf
icebp
sbb
ins
test
sbb
(bad)
sub
(bad)
mov
cwde
or
pop
dec
mov
out
mov
ja
je
rcr
dec
mov
push
mov
jno
sub
repnz
or
mov
cmp
jg
cli
add
(bad)
call
mov
je
popf
arpl
gs
jmp
and
loopne
bound
data16
(bad)
dec
mov
adc
dec
fdivrp
daa
es
jg
hlt
std
push
mov
hlt
ins
push
pop
sub
test
sub
inc
aam
inc
pop
mov
pop
jecxz
xchg
push
inc
mov
movs
xchg
push
push
jo
test
icebp
pop
jmp
repnz
sbb
sahf
movs
mov
(bad)
and
push
push
cs
in
in
or
mov
push
jne
mov
das
inc
nop
lock
fwait
dec
loope
icebp
adc
fs
out
mov
daa
xor
(bad)
cmc
add
nop
dec
bound
dec
sbb
sbb
mov
mov
cmp
cmc
push
sbb
pop
test
fs
mov
sub
data16
jns
adc
cld
dec
push
jl
pop
test
aad
and
mov
out
pop
jbe
in
adc
and
push
jmp
pop
xor
dec
rol
aam
xchg
pop
scas
(bad)
jecxz
rcr
sub
inc
repnz
or
push
div
ins
jp
cmp
ss
ror
pop
cld
out
pop
mov
mov
jge
fild
cli
std
sub
adc
(bad)
mov
leave
sub
ja
leave
sub
fwait
lds
xchg
mov
repz
lahf
and
mov
adc
retf
jle
xchg
popa
pop
cmp
jmp
not
jle
push
xchg
shl
aad
sub
jno
push
xor
xchg
test
icebp
movs
or
cmps
std
or
fbld
lea
(bad)
inc
call
scas
scas
mov
(bad)
mov
mov
stos
xchg
adc
scas
xchg
cmp
pop
mov
inc
xchg
in
xchg
cdq
addr16
adc
jae
push
pop
fistp
mov
hlt
in
lds
xchg
dec
ds
aas
sbb
jg
enter
sub
jp
repz
out
mov
andnps
in
(bad)
mov
lods
in
imul
out
sahf
data16
dec
enter
arpl
retf
test
xchg
test
imul
and
mov
scas
add
fldcw
jge
inc
rcr
ss
test
nop
(bad)
pop
test
mov
mov
addr16
hlt
fwait
adc
and
dec
sti
dec
outs
sub
jae
or
sti
jnp
mov
pop
xchg
stc
sbb
data16
not
in
pop
xor
xchg
sbb
dec
addr16
pusha
or
outs
sub
imul
jl
dec
mov
mov
jb
enter
repz
iret
mov
dec
jno
cmc
ror
es
out
cmp
xchg
mov
mov
dec
mov
mov
gs
xchg
js
shl
xchg
jge
js
fimul
popf
pushf
mov
stos
pusha
xchg
cmp
pop
retf
and
(bad)
fadd
ficomp
sub
and
push
inc
mov
mov
inc
and
jl
iret
loop
and
sbb
push
(bad)
xchg
les
shr
std
xchg
sar
lock
not
mov
movs
sbb
lods
sub
mov
adc
rol
pop
popf
jl
dec
mov
scas
enter
jo
shr
ds
loopne
movs
jle
addr16
shl
cwde
and
call
xor
fild
ss
rcr
push
hlt
sub
xor
cmp
and
sar
push
pop
cs
sbb
fwait
cli
push
ds
in
mov
out
popa
dec
adc
xchg
cmps
out
adc
push
cwde
(bad)
pcmpeqb
test
pop
xchg
sbb
call
pop
cmp
js
xchg
jmp
push
mov
or
mov
xor
fcomp
inc
mov
add
cmps
es
xor
dec
inc
enter
loopne
jno
or
dec
in
into
and
in
push
dec
inc
cld
call
xchg
outs
movs
push
scas
adc
jns
call
les
and
or
cld
pushf
sahf
pop
icebp
jge
cmps
mov
xor
fstp
mov
add
imul
gs
clc
pop
mov
in
enter
xchg
(bad)
out
xor
fisubr
inc
addr16
or
push
fld
shl
push
mov
rol
fsubr
mov
xor
outs
jne
and
movs
out
aas
es
mov
adc
inc
inc
sub
sub
xchg
push
out
or
cmps
aaa
sbb
call
sub
and
int
mov
mov
add
gs
mov
cmps
int3
xchg
out
fmulp
add
jecxz
lahf
stos
hlt
sub
std
inc
hlt
sbb
stos
fisub
add
sar
push
cmp
in
ficomp
out
test
(bad)
ffreep
cmp
push
outs
xor
dec
push
jb
push
and
sbb
rcl
popf
adc
lock
sbb
mov
mov
stos
jb
and
aad
(bad)
pop
cmp
xor
xor
cmp
mov
mov
fsubr
cmp
pop
xor
pop
push
sti
je
xchg
xchg
(bad)
je
(bad)
and
out
inc
xor
sub
imul
adc
ss
xchg
loopne
dec
sbb
ret
mov
lods
adc
test
loop
repnz
ret
out
add
jno
sub
daa
dec
xlat
cmp
int
cld
ror
arpl
retf
or
xor
int
fisub
push
mov
pop
call
adc
mov
dec
xchg
dec
or
and
in
mov
loopne
out
sbb
mov
cmp
sub
jmp
pusha
cmp
dec
ja
into
movs
mov
mov
test
repz
int
xchg
dec
xor
repz
inc
sbb
mov
movs
dec
scas
mov
adc
jmp
pop
mov
push
jecxz
jecxz
loopne
lock
call
call
jmp
popa
and
daa
das
xchg
mov
shl
pop
imul
xor
dec
pushf
(bad)
test
mov
pop
iret
cld
pop
add
sbb
adc
dec
xlat
lods
aas
pop
das
imul
xchg
mov
dec
or
mov
hlt
iret
xor
jns
ret
xchg
int3
add
and
aas
push
sbb
call
adc
test
nop
adc
add
cmc
xchg
ds
clc
or
arpl
(bad)
push
loopne
mov
and
xchg
fucomi
xchg
pop
xor
sbb
ins
addr16
stc
cli
cld
xor
rol
in
and
loopne
std
call
call
add
ffree
or
fadd
cmp
fdiv
mov
iret
aam
inc
std
push
push
bound
rcl
dec
into
dec
(bad)
ficom
das
jne
aad
sbb
mov
mov
fnstenv
sbb
pop
loope
in
mul
loop
in
add
and
lahf
or
cmps
push
pop
int
jns
iret
call
mov
ret
mov
dec
(bad)
into
cmp
pop
jecxz
mov
in
and
popf
cld
arpl
mov
add
inc
pusha
jbe
mov
mov
jbe
mov
cmp
pop
add
jge
adc
shl
pop
push
stos
rol
nop
fsub
ds
xor
lahf
jl
dec
sbb
dec
(bad)
push
(bad)
gs
or
sub
pop
jb
mov
aad
xchg
(bad)
loope
dec
sbb
sbb
repz
or
retf
adc
jmp
xchg
retf
adc
and
mov
xor
add
push
in
sub
loope
xor
cmovg
aas
ins
imul
jmp
xor
push
add
sbb
sahf
or
adc
jle
pop
popf
push
inc
pop
ins
xor
outs
pop
ficom
je
lock
jecxz
sub
pop
bound
pop
inc
shr
out
movs
add
fwait
mov
or
pop
add
adc
add
adc
inc
xor
and
aas
sub
adc
sub
xchg
sahf
push
mov
cmp
add
sbb
xlat
test
pushf
imul
cmp
mov
aad
xchg
cmc
out
inc
int3
jb
cdq
out
mov
add
mov
cli
lods
shl
rol
jne
ins
repnz
pop
jp
cld
push
fistp
xchg
dec
addr16
ret
adc
inc
jecxz
dec
cmovne
cmp
(bad)
cmp
add
xlat
sbb
fisttp
das
pop
push
jo
fs
jb
mov
call
imul
dec
mov
pop
adc
ja
cwde
add
es
jnp
shl
push
imul
popa
jl
fisubr
push
ins
mov
xchg
mov
les
xchg
add
inc
or
and
je
sqrtps
dec
cmp
dec
arpl
lahf
jo
je
inc
ror
dec
add
mov
xchg
fist
aam
pop
cmp
mov
ja
shl
(bad)
int
pop
aam
mov
stos
enter
xor
xor
xchg
out
(bad)
pop
and
les
repnz
or
jnp
jnp
adc
scas
shl
xor
aam
inc
test
cwde
jo
dec
imul
pop
pop
and
mov
clc
mov
add
repz
lds
fst
call
mov
js
jnp
cmp
ins
xchg
je
lds
inc
and
dec
mov
sbb
cmp
inc
pop
push
adc
jle
scas
push
cmps
sub
cmp
or
add
popa
into
xor
adc
(bad)
push
dec
jl
mov
ja
(bad)
cld
and
pop
sbb
lods
push
inc
pushw
push
mov
dec
daa
rcl
jmp
inc
cdq
stc
test
adc
ds
and
mul
mov
dec
fcomip
add
inc
lds
mov
dec
movs
lods
fld
in
repz
stos
in
sbb
out
(bad)
sbb
mov
in
xchg
inc
in
push
aas
or
ja
sbb
sbb
mov
sti
movs
xchg
test
push
paddusb
mov
shr
stos
pop
xchg
xchg
sbb
js
push
es
rcl
je
or
out
jne
cld
pop
xor
xor
iret
movs
imul
scas
(bad)
mov
js
enter
test
shl
cmp
pop
in
sbb
adc
(bad)
or
dec
xchg
pop
fwait
mov
mov
pusha
inc
fist
stos
je
adc
(bad)
cdq
rol
rcr
dec
stos
sub
icebp
cmps
repnz
adc
call
push
or
mov
inc
inc
lahf
inc
cmc
push
jl
mov
das
inc
cmp
lock
xchg
js
xchg
movs
ds
sbb
sub
jmp
jl
sahf
add
pop
add
loope
popf
call
into
push
add
(bad)
mov
adc
pop
shl
cmp
cmp
xor
or
shl
adc
ja
mov
sbb
fnstsw
jns
pop
stos
ins
sar
movs
pushf
daa
ins
xchg
fistp
dec
test
push
cmp
add
movs
call
and
dec
and
and
imul
xchg
adc
mov
cmc
and
mov
push
jno
jg
dec
jmp
cmc
mov
pop
cdq
xlat
add
cld
(bad)
sahf
icebp
jecxz
mov
jp
leave
ds
call
in
mov
mov
fwait
push
call
aaa
into
or
dec
dec
ret
ds
mov
out
mov
cmp
loope
jo
out
mov
movs
outs
scas
pop
sbb
iret
nop
setnp
pop
dec
mov
loope
call
test
mov
gs
icebp
in
xchg
sbb
imul
(bad)
lock
in
(bad)
pcmpgtd
add
daa
inc
cmp
or
mov
rol
call
movs
outs
adc
adc
fwait
call
xlat
stos
daa
pop
out
pop
or
dec
fs
movs
or
jne
cmc
lods
hlt
hlt
dec
fisttp
inc
outs
ds
pop
pop
push
push
dec
xchg
std
int3
mov
retf
mov
pusha
stos
mov
sar
mov
jbe
setp
xchg
or
cmps
neg
add
add
fs
aas
sub
clc
ins
add
ss
mov
in
cli
in
or
sub
movs
(bad)
sar
daa
mov
mov
popa
aam
mov
push
mov
add
jle
outs
pop
test
push
(bad)
movs
sub
mov
cmp
(bad)
xor
xor
adc
lahf
neg
mov
add
push
pop
dec
push
cmp
pop
dec
test
sbb
sub
or
test
xor
mov
bound
jne
xchg
push
adc
pusha
dec
push
nop
cmp
test
dec
push
xor
inc
fdivp
(bad)
test
jbe
xchg
fcom
(bad)
gs
lds
sub
sbb
ret
mov
xchg
mov
movs
clc
xchg
pop
mov
mov
out
in
inc
jecxz
pop
push
mov
punpcklbw
push
cs
jmp
sub
or
push
mov
in
fs
sub
lods
inc
cli
(bad)
lea
aam
stos
lahf
mov
pusha
leave
adc
aaa
bound
mov
or
dec
jge
fsub
mov
mov
push
jge
nop
outs
out
mov
mov
sbb
inc
cmp
pop
sbb
fwait
adc
adc
dec
mov
fcom
push
xchg
mov
je
je
(bad)
pop
jge
scas
das
jbe
pop
cmp
xchg
pop
es
sahf
add
test
vpaddb
add
jp
mov
addr16
outs
dec
fs
dec
dec
ret
xlat
out
stc
jecxz
xchg
cmp
arpl
in
ins
retf
ja
xor
push
cmp
in
dec
adc
ret
outs
cdq
fmul
dec
cmp
fs
push
dec
or
mov
aaa
dec
dec
outs
ds
inc
ret
imul
xchg
mov
(bad)
enter
push
rol
mov
cmp
jo
sahf
lock
sub
ja
retf
jg
aad
in
lds
inc
js
cmps
mov
int3
in
jae
inc
out
adc
mov
retf
xor
jo
scas
cmps
scas
mov
(bad)
jp
and
adc
cmc
pop
repz
push
xor
push
test
add
call
xchg
cmp
(bad)
ja
inc
jp
popf
loop
cwde
dec
rol
add
jo
sbb
inc
stc
fistp
xchg
rcl
shl
sbb
cmp
fnstcw
imul
fidiv
xor
retf
fs
ins
sbb
mov
pop
mov
fwait
jecxz
aad
int
rcl
jecxz
adc
or
movs
(bad)
push
pop
mov
pop
sahf
add
fstp
popf
pop
ds
inc
jp
repnz
add
xor
mov
or
or
push
shr
mov
dec
push
mov
rcr
cmp
leave
push
fwait
adc
xor
daa
sub
out
wbinvd
cmp
cdq
arpl
out
mov
mov
add
ins
scas
test
es
(bad)
enter
xor
rcr
xchg
xchg
push
cmp
mov
ja
jnp
cmp
mov
sub
loope
leave
jae
leave
cmp
aam
nop
sbb
out
retf
sar
jmp
or
into
xchg
das
ret
repnz
xor
xor
mov
pop
mov
and
pop
pop
call
jns
xlat
sahf
pop
inc
jp
xor
xor
shl
movs
pop
cmc
(bad)
dec
ds
es
int3
outs
(bad)
rcr
lahf
pop
dec
aas
jae
pushf
fs
sub
push
jmp
call
xor
movs
loopne
sub
cmc
icebp
and
stc
out
out
adc
mov
adc
cmp
lods
mov
imul
(bad)
loope
arpl
sbb
pop
scas
int
push
repnz
mov
push
xor
sti
push
inc
lahf
or
xchg
aad
mov
jmp
int
inc
jb
and
bound
sub
jmp
adc
inc
idiv
mov
shl
jnp
add
fist
dec
outs
fild
sub
in
pop
mov
xchg
cmps
dec
ror
sbb
push
sub
nop
push
jl
test
sahf
push
inc
mov
lahf
adc
imul
es
mov
mov
pop
and
push
push
hlt
jae
mov
xchg
loope
lods
mov
jb
and
sbb
loope
ss
loope
pop
adc
lock
retf
add
push
out
popf
out
iret
lea
or
mov
jnp
pop
jb
mov
adc
lock
or
(bad)
pop
xor
jle
push
sub
daa
js
dec
mov
add
jmp
push
mov
fisttp
ds
cmp
or
fwait
(bad)
sti
mov
or
mov
cld
shl
pop
out
aaa
sbb
lods
rcl
inc
cs
int3
sahf
fst
retf
xchg
inc
push
stos
jne
mov
hlt
arpl
aaa
rol
xchg
xchg
mov
mov
fistp
push
lock
scas
adc
call
pop
sub
pop
jno
push
inc
(bad)
sub
jmp
mov
and
mov
jge
xlat
sbb
push
loope
pushf
int
out
cmp
push
rcr
fs
and
sbb
stc
aam
jnp
jge
inc
sti
mov
mov
pop
mov
cs
loopne
cwde
ror
int
rcr
mov
xor
add
cld
push
in
inc
xor
push
inc
ret
in
icebp
sbb
jle
jmp
ret
enter
pop
stos
dec
mov
sub
rcl
pop
sub
cli
out
push
mov
retf
dec
retf
sub
jg
xchg
sar
cmp
xchg
outs
cmc
hlt
xor
call
out
sub
mov
(bad)
outs
leave
movs
aaa
or
stc
test
pop
mov
push
daa
(bad)
xlat
inc
out
pop
xchg
push
lea
inc
fs
mov
pop
mov
mov
adc
in
cmp
cmp
or
cdq
lea
xor
add
jae
scas
add
cmp
inc
das
test
(bad)
push
mov
adc
mov
test
in
mov
out
and
repnz
jl
bound
adc
pop
pop
mov
sub
sub
inc
fiadd
push
sub
and
cmp
movs
call
dec
imul
fist
push
mov
out
xchg
cmp
dec
pop
mov
pop
cmp
add
fld
imul
sar
inc
jmp
pop
dec
imul
hlt
jle
iret
jmp
sbb
test
or
fstp
int
cmp
ret
xor
ret
arpl
lea
das
xchg
js
adc
inc
fs
lock
retf
loope
jmp
or
jle
retf
mov
aaa
dec
call
sbb
and
dec
fcomp
sar
mov
je
add
mov
sbb
dec
popa
xor
out
aam
and
and
or
and
cmps
inc
movs
lds
retf
push
sub
inc
mov
iret
sub
fmul
(bad)
mov
shr
ret
neg
and
add
dec
xchg
lea
cdq
shr
pop
ret
pop
dec
mov
mov
ss
mov
call
cmp
aaa
(bad)
aas
nop
stos
repz
in
frstor
icebp
pop
fnsave
add
pusha
lods
push
mov
(bad)
stc
das
mov
arpl
mov
inc
aam
cmp
rcr
repnz
fcomp
mov
jmp
das
push
into
jge
fld
xchg
cdq
fmul
dec
repz
jo
sub
nop
jmp
into
and
xor
jbe
mov
(bad)
addr16
ja
mov
outs
or
loopne
ds
(bad)
sbb
loope
test
mov
jmp
xor
pusha
leave
push
lds
adc
inc
mov
mov
in
adc
js
jp
fiadd
adc
xor
jb
xor
lods
pop
call
lods
jne
mov
dec
iret
jns
sub
sub
fs
dec
mov
mov
pop
fdivr
dec
out
jae
(bad)
fcomp
cmc
push
repz
lods
xchg
pusha
push
call
mov
or
pop
dec
enter
fiadd
shl
lods
pop
sbb
xor
push
add
imul
loop
mov
call
cmc
popf
dec
inc
adc
call
sub
add
xor
je
inc
dec
push
js
call
hlt
push
and
sbb
and
fdiv
sbb
sub
sub
mov
jp
xchg
fild
imul
pop
push
or
inc
clc
not
scas
cmp
mov
mov
pop
(bad)
push
movs
cmps
setg
add
sbb
(bad)
rcl
not
pushf
outs
mov
(bad)
(bad)
arpl
or
fisttp
leave
movs
add
ret
jl
mov
and
mov
test
jmp
rcr
call
ins
adc
push
fistp
in
addr16
ss
(bad)
mov
mov
dec
mov
std
pop
push
les
mov
icebp
(bad)
jge
or
aam
mov
or
ss
push
jecxz
mov
sti
cmp
(bad)
sti
cmc
jmp
icebp
loope
mov
adc
sub
sub
pusha
ret
adc
and
jmp
add
daa
enter
retf
lea
adc
dec
jl
adc
push
mov
in
add
stos
dec
mov
jle
out
ret
pop
stc
scas
inc
test
jb
into
xor
mov
scas
sbb
xchg
or
es
xchg
xchg
and
pop
test
cdq
push
stc
call
adc
(bad)
inc
mov
cmc
sub
ret
iret
call
jmp
dec
xchg
ds
dec
pop
popf
lods
mov
(bad)
neg
aam
push
adc
add
test
push
xchg
loopne
sub
pushf
cmp
mov
push
xchg
sbb
mov
adc
lods
sbb
fstp
rol
leave
dec
cmps
test
je
cmc
cmps
push
dec
(bad)
imul
or
call
xchg
fndisi(8087
(bad)
punpcklwd
lods
inc
xchg
ds
jno
jge
(bad)
jp
icebp
dec
jmp
mov
adc
sub
and
stc
div
loopne
cmp
adc
fadd
mov
stos
jnp
or
das
repnz
mov
sbb
xor
(bad)
mov
stc
fs
pop
cmp
les
(bad)
pop
dec
add
pop
xor
pop
cmp
dec
out
xchg
push
gs
test
pop
cdq
lea
btr
imul
pop
mov
pop
xor
test
in
hlt
and
(bad)
push
aaa
out
jge
scas
dec
sub
xchg
push
scas
inc
mov
push
mov
aam
add
xor
shr
mov
rol
add
pop
dec
repnz
inc
xor
scas
rol
pusha
data16
paddsw
cmps
cmp
daa
and
outs
cmps
lock
adc
js
in
sub
lods
int
fwait
dec
out
loopne
dec
and
ds
adc
xor
dec
movs
hlt
and
xor
or
push
inc
dec
sbb
aad
cmp
jmp
mov
ds
push
aaa
pop
mov
xchg
cmp
xchg
icebp
adc
or
imul
and
(bad)
mov
mov
fadd
les
mov
cmp
push
adc
loope
jmp
ret
inc
cmp
inc
adc
ror
pop
jae
mov
(bad)
pop
scas
movs
xor
int3
push
movs
lock
jp
fcmovne
(bad)
fs
xchg
in
arpl
out
cmp
jae
cwde
iret
adc
sbb
cmp
out
and
cdq
fidiv
cmp
inc
cmp
mov
out
mov
pusha
sbb
or
dec
out
popf
(bad)
sub
rcl
movs
lods
inc
imul
in
lea
fisubr
ss
add
ss
mov
out
fimul
in
sub
xlat
fdivr
addr16
sti
nop
xchg
adc
pusha
lock
outs
jo
fld
and
push
leave
inc
int3
retf
adc
dec
or
jle
mov
les
out
dec
add
dec
movs
adc
sub
addr16
mov
lock
ds
ins
and
mov
rol
jge
xor
jo
fldcw
mov
stos
sbb
and
outs
aas
imul
ret
jbe
inc
adc
or
aad
in
gs
or
ret
daa
out
cmps
mov
loop
jge
push
std
push
mov
pop
adc
mov
(bad)
(bad)
xchg
sub
in
shl
fs
xor
aas
stos
xor
arpl
sahf
std
xchg
cmps
arpl
es
jne
sub
cs
push
push
scas
sub
xor
sahf
cmps
jl
(bad)
call
or
mov
cmovge
add
movs
ja
cmp
pop
out
cmp
sbb
sbb
inc
inc
cmp
(bad)
fidivr
call
sbb
cmp
adc
in
xchg
loopne
sahf
popf
jno
(bad)
cmps
outs
test
lds
xchg
ret
popf
jb
leave
pop
(bad)
fcom
ja
ins
inc
inc
push
pop
mov
jne
out
mov
vpmacsdqh
pop
xor
es
nop
push
(bad)
mov
push
pop
mov
repnz
mov
adc
lock
or
repz
jb
imul
test
movs
test
dec
nop
daa
lock
outs
push
xchg
jae
cwde
mov
pop
push
stos
mov
sub
or
xchg
jle
ret
stos
pushf
mov
pushf
sub
int3
lds
imul
(bad)
rcl
pop
add
mov
iret
cdq
test
adc
scas
mov
adc
push
inc
and
or
pop
mov
out
push
ret
mov
dec
fwait
out
adc
and
(bad)
stos
mov
rol
test
lods
mov
les
cmp
cmps
int3
mov
mov
cmp
adc
and
dec
sbb
lock
std
mov
fidiv
test
and
inc
adc
loopne
sbb
mov
in
push
and
jle
add
inc
add
dec
inc
mov
xchg
scas
or
test
in
leave
cld
stos
ret
mov
test
mov
(bad)
cld
shr
xchg
xchg
xor
mov
ds
lods
iret
sub
sub
std
mov
push
hlt
int
dec
ror
(bad)
jns
fwait
je
push
std
jne
(bad)
mov
cmc
sub
arpl
mov
xor
or
mov
imul
stos
stos
ud0
ficomp
repnz
dec
call
jae
test
mov
xchg
or
lds
pop
cli
sar
sub
sub
into
stc
add
xor
xchg
imul
mov
std
leave
cmp
rol
fwait
in
sub
mov
add
mov
xchg
fisubr
cmp
sbb
inc
inc
pop
or
jae
dec
xchg
imul
and
ins
or
dec
inc
and
shl
je
shr
sub
push
add
add
pop
or
loop
loope
dec
adc
jbe
mov
sbb
mov
or
or
pop
gs
clc
push
inc
inc
int3
int3
xor
ins
stc
out
pop
shr
dec
cmp
xchg
cld
lea
rol
icebp
fs
dec
jecxz
and
push
jmp
xlat
jno
xchg
pop
repz
aaa
into
mov
retf
scas
std
jl
add
dec
adc
enter
loop
mov
xor
stos
push
inc
clc
mov
pusha
jmp
adc
push
sbb
push
idiv
shl
and
aas
popf
inc
adc
mov
test
jnp
xchg
push
(bad)
fs
jge
ja
arpl
add
cmc
adc
stos
(bad)
loop
mov
sub
dec
push
in
push
cli
sahf
mov
jp
xchg
loope
mov
cld
repnz
cmc
gs
cmps
retf
call
pusha
scas
dec
mov
cmp
cmp
sbb
pop
ficom
inc
mov
adc
inc
jl
adc
lahf
out
cmp
(bad)
icebp
adc
mov
mov
scas
cdq
and
(bad)
xlat
ins
and
out
pop
std
rol
jmp
jbe
repz
jo
push
mov
xlat
adc
shl
(bad)
fiadd
lock
jnp
hlt
add
add
test
inc
mov
inc
das
xchg
stos
jp
das
stos
fstp
push
int
(bad)
lock
jl
movs
add
add
cmp
fisttp
repnz
shl
sub
pop
out
iret
jae
pop
push
fnstcw
sbb
test
pop
xchg
fist
inc
pop
sbb
sub
sub
ret
sbb
repz
jecxz
mov
cmp
dec
imul
stos
out
lds
ss
cld
and
fldcw
movs
add
inc
ret
push
popa
pop
outs
push
iret
call
and
or
or
sub
outs
xchg
jbe
ret
dec
jae
xor
pop
jmp
shl
loop
ins
outs
mov
inc
and
inc
inc
lgs
jae
(bad)
fistp
sbb
popf
mov
xchg
jmp
add
pop
add
pop
xor
mov
ja
mov
xor
test
ds
sti
mov
pop
ds
dec
ss
xor
test
jo
stos
adc
(bad)
repnz
lds
inc
or
je
sbb
data16
int
and
cdq
inc
cmovle
dec
mov
sahf
(bad)
and
mov
xchg
mov
stos
xchg
or
pop
xor
cld
push
or
mov
in
scas
jmp
sbb
cmp
jmp
int
inc
inc
push
bound
mov
mov
sar
int
sub
stc
jmp
push
mov
inc
loopne
pop
jg
pushf
or
mov
retf
and
dec
add
jle
push
xchg
xor
cmp
call
aad
add
call
sbb
mov
sub
outs
cwde
pusha
cwde
jo
popf
xlat
add
ficomp
(bad)
iret
inc
jbe
(bad)
adc
dec
and
movs
pop
aad
(bad)
mov
sbb
pop
jno
xor
bound
mov
push
sub
in
xchg
cmp
je
mov
pop
aaa
sub
add
cld
sahf
and
mov
mov
adc
adc
mov
in
jge
push
sub
mov
and
test
push
push
dec
xor
jnp
cli
psrld
fbld
arpl
jl
pop
sbb
mov
add
or
push
xchg
gs
dec
cmc
popa
sbb
shr
pop
push
and
ficomp
aaa
pop
mov
enter
in
int
lods
mov
loope
sbb
cmovo
mov
sub
sbb
into
xchg
add
pop
shufps
dec
add
popf
xchg
jmp
loop
cwde
iret
retf
in
and
jae
dec
ret
ja
imul
pop
sub
stc
inc
jbe
aam
sub
or
sbb
call
sub
add
mov
fwait
or
adc
sub
stos
aaa
mov
and
jae
je
test
sar
(bad)
push
fs
(bad)
ins
push
mul
dec
xchg
add
push
std
das
adc
shl
(bad)
shl
cmc
mov
sub
test
hlt
loope
pop
adc
dec
inc
movs
and
cmps
in
jmp
mov
pop
mov
imul
call
sbb
in
cs
sub
sbb
cmp
lock
jb
in
push
mov
cmp
dec
xchg
fist
and
out
rcl
push
cld
xor
sub
inc
pop
xor
sub
jge
shl
popa
and
aad
aam
push
fild
sbb
into
pushf
xor
adc
repnz
cdq
xchg
or
fwait
cmp
mov
inc
fwait
jle
sti
fdivr
arpl
xlat
arpl
les
cli
es
add
sub
div
fcomp
xor
push
test
mov
dec
mov
mov
fld1
fild
test
add
add
cmc
das
or
fst
je
xor
stos
sub
add
xchg
scas
xchg
fmulp
sbb
cmps
jnp
pop
sbb
sub
out
int3
ret
push
pushf
cmp
loope
retf
mov
fldenv
loop
push
add
scas
push
mov
xchg
into
add
(bad)
jg
mov
adc
bound
xchg
lods
inc
jnp
iret
pop
cmp
cmp
ror
sub
sub
adc
add
add
outs
int3
pusha
call
in
cs
lds
inc
call
lock
or
aaa
sub
(bad)
pop
aad
icebp
dec
cmps
cmp
retf
in
loope
rep
cmp
fisubr
push
enter
adc
adc
push
popa
xor
cmp
fidiv
gs
xchg
fdivr
rcl
mov
lock
inc
add
pop
mov
fwait
adc
arpl
(bad)
scas
mov
(bad)
je
lods
sbb
cmps
xchg
(bad)
mov
cdq
fptan
sahf
out
adc
cwde
shl
fld
fidivr
mov
mov
mov
mov
fisub
pusha
inc
pop
mov
xor
lods
aas
scas
push
jnp
and
xor
xor
mov
sahf
and
in
push
xor
out
add
mov
icebp
lahf
sti
push
xor
aad
sahf
bound
jnp
pop
scas
outs
(bad)
and
pop
pop
mov
push
or
clc
retf
stos
push
(bad)
loopne
outs
sub
hlt
mov
jecxz
out
mov
call
push
or
mov
(bad)
fmulp
movs
(bad)
cld
or
mov
xchg
pop
mov
gs
jle
aas
popa
mov
stos
das
loope
or
in
push
mov
dec
dec
enter
scas
inc
push
adc
mov
mov
jge
mov
fisub
cmp
xchg
in
cmps
pop
pop
(bad)
lea
pushf
inc
add
mov
mov
lods
jmp
cmps
adc
add
pop
sub
jae
jae
into
or
sub
into
mov
inc
sub
mov
pop
stc
out
dec
sub
mov
fs
lahf
jo
dec
(bad)
pop
test
dec
xor
ficomp
retf
aam
mov
dec
fcomp
jecxz
or
cmp
pushf
fidiv
lahf
(bad)
xchg
fcom
ins
out
imul
test
xchg
div
mov
adc
fwait
dec
aaa
outs
mov
xor
enter
mov
inc
rdpmc
inc
add
hlt
xchg
cmp
pop
ins
mov
mov
cs
retf
fiadd
aaa
xchg
cwde
sub
cmp
cmp
inc
push
push
clc
popf
sbb
add
and
xor
cmp
out
test
mov
repz
jmp
jle
add
xor
data16
push
repz
push
xchg
cmp
jne
std
stos
addr16
call
add
retf
mov
mov
(bad)
fsub
cmps
jmp
test
jns
scas
ret
xchg
or
add
pop
sbb
scas
cmc
mov
jb
out
mov
fwait
mov
adc
add
push
test
aad
lods
dec
loop
inc
or
hlt
lahf
pop
cmp
sbb
test
mov
mov
je
jle
mov
adc
daa
fcmovnbe
ss
add
mov
call
xor
into
mov
or
mov
popf
(bad)
fidiv
pop
loope
div
mov
mov
fs
or
cwde
push
dec
mov
test
rep
pop
fist
sti
xchg
popfw
nop
jae
or
fcom
gs
add
mov
push
in
std
push
push
lods
popf
push
xor
sbb
pop
(bad)
fwait
outs
or
inc
test
loopne
inc
mov
add
(bad)
pop
dec
cmp
add
add
(bad)
dec
xchg
iret
fistp
mov
mov
add
ins
aad
and
cmc
or
seta
pop
retf
push
dec
push
inc
hlt
xor
sar
imul
jl
pop
pushf
fsub
adc
cdq
push
jae
fdiv
mov
jl
jb
or
arpl
jle
jl
mov
dec
pop
jp
or
jmp
cmp
aad
mov
mov
push
dec
repz
mov
mov
inc
pop
pop
jl
std
sar
adc
mov
push
inc
imul
data16
jno
push
cmc
in
popa
dec
cmp
pop
sbb
pop
dec
push
jbe
test
in
add
or
cmp
push
mov
push
repz
out
mov
push
aam
imul
js
lock
out
faddp
and
jle
xor
cmp
xchg
push
fs
rcl
aaa
js
jl
inc
test
push
push
loop
inc
jo
xchg
add
jg
sbb
cli
iret
jl
mov
in
shl
and
push
mov
sar
add
inc
xor
mov
cli
js
sti
aaa
dec
hlt
pop
fldcw
es
push
xor
xor
lea
repnz
mov
(bad)
mov
lods
mov
mov
sbb
adc
mov
jnp
(bad)
cwde
dec
aaa
into
in
ja
or
pop
inc
repz
test
mov
clc
mov
mov
mov
pop
ror
fld
and
mov
dec
xchg
fstp
pop
rcl
outs
scas
out
ins
push
adc
jns
jecxz
lds
mov
sub
and
adc
and
ins
hlt
sar
xchg
cmps
rep
mov
call
cld
div
and
sbb
or
vcomiss
and
mov
cli
fmul
aas
data16
mov
arpl
repz
adc
jle
movs
iret
loop
sub
std
int3
xor
jns
cmps
aad
xchg
outs
test
int
pop
movs
enter
cmc
dec
int3
dec
data16
aad
push
push
push
mov
jg
adc
in
popa
aaa
push
mov
mov
inc
iret
es
inc
bound
adc
fcom
push
dec
jge
inc
(bad)
(bad)
(bad)
arpl
and
loop
and
call
dec
sbb
xlat
sahf
xchg
adc
add
movsx
inc
in
call
fldcw
repz
rcl
mov
xlat
add
out
push
push
daa
daa
pop
or
xor
ja
popf
ja
pop
xchg
jae
jo
jmp
xchg
and
adc
daa
jl
push
sub
call
es
and
sub
sbb
ret
cmp
or
cmc
mov
(bad)
es
(bad)
jmp
sahf
jp
mov
xchg
mov
fsub
jo
jge
mov
pop
(bad)
(bad)
(bad)
es
mov
jnp
sbb
lahf
and
rcr
and
js
dec
fwait
jle
aaa
lock
jp
das
xchg
or
lea
mov
aam
or
pop
sar
iret
fdivr
fs
iret
cmp
pop
push
sahf
xchg
push
(bad)
fidivr
pop
lods
cwde
nop
sub
jb
ret
cmps
shl
(bad)
sbb
fmul
in
cld
sub
cli
shr
jp
mov
pop
stc
(bad)
adc
push
cmp
aam
ds
pop
and
add
add
scas
int
jno
aas
mov
leave
std
pop
in
int
retf
mov
retf
cmp
loopne
jmp
(bad)
jecxz
cmp
aas
aad
cmps
pushf
adc
addr16
(bad)
and
push
pop
ret
(bad)
dec
(bad)
mov
jg
fcmovnbe
popa
test
pusha
bound
mov
push
push
bound
xor
enter
shr
arpl
mov
or
mov
outs
arpl
loop
jne
mov
shl
mov
mov
(bad)
icebp
cli
(bad)
mov
fld
and
sbb
mov
ins
stos
add
outs
neg
or
or
xor
add
sub
mov
push
adc
fdiv
mov
xchg
sub
mov
inc
mov
outs
shl
and
xor
lahf
adc
mov
jns
dec
pop
pop
jnp
jb
movs
sti
mov
in
test
mov
lods
(bad)
out
sub
ja
cmc
jle
and
data16
mov
push
fidiv
mov
mov
and
adc
aas
(bad)
mov
jbe
xchg
xor
lea
mov
xlat
mov
push
imul
(bad)
xchg
movs
add
neg
xor
enter
popf
or
push
sahf
xchg
inc
(bad)
outs
int3
xor
stos
cli
jl
or
or
add
call
inc
inc
pusha
mov
ret
pop
pop
xchg
sbb
aas
ss
(bad)
adc
int3
cs
cli
bound
pusha
mov
in
pop
stc
fwait
retf
fnstenv
out
pop
mov
iret
sbb
pop
xchg
stos
mov
pop
shl
(bad)
and
repnz
xchg
xchg
enter
mov
mov
leave
adc
mov
imul
mov
mov
ret
adc
cwde
fdivr
inc
out
push
fnsave
stc
sbb
push
loop
pushf
xor
cmp
adc
xchg
mov
dec
mov
sbb
xchg
js
cmps
shl
aaa
add
mov
stos
ins
into
(bad)
sbb
stc
inc
cmp
pop
pop
or
and
mov
or
nop
out
fwait
xchg
jp
ins
fnstenv
sar
inc
sbb
imul
and
sbb
mov
dec
xchg
push
lock
or
cmp
add
jg
mov
or
sar
fnstcw
daa
pop
or
inc
jle
mov
xor
cs
das
jbe
inc
das
loope
lods
imul
or
pop
mov
fistp
sub
jmp
jg
inc
sbb
jl
jo
or
out
mov
push
outs
mov
(bad)
gs
shl
loope
cmp
dec
shl
into
xchg
fldenv
fisttp
fwait
imul
adc
xor
ret
fisttp
jbe
arpl
or
hlt
cmp
(bad)
sub
xchg
inc
mov
jnp
outs
jecxz
mov
jae
sar
call
pop
add
pop
lea
enter
das
mov
push
ror
(bad)
das
cmp
adc
aaa
rol
push
call
mov
cmc
lods
cmp
mov
jnp
jecxz
es
mov
dec
cmp
adc
jmp
and
cwde
adc
cld
mov
into
fwait
imul
sub
push
shl
adc
pop
mov
and
sub
push
xor
push
nop
ror
rcr
xchg
mov
mov
ret
bound
push
adc
popf
movs
mov
outs
in
scas
cmp
sbb
cmp
out
jmp
jmp
and
outs
rcl
and
jmp
mov
cmp
(bad)
cmp
jp
call
loope
fsubr
and
sbb
(bad)
test
xor
xchg
loope
jb
or
pushf
cld
cmp
xor
and
mov
(bad)
cld
sti
das
lock
dec
or
xchg
jns
push
lock
in
push
or
movs
mov
ins
or
leave
scas
cwde
cmp
es
ss
out
scas
jae
out
cdq
mov
jle
or
je
jae
retf
add
add
sbb
mov
scas
pop
daa
leave
mov
(bad)
mov
ss
sbb
sbb
xchg
or
cmp
or
pop
in
ds
mov
sbb
mov
push
out
lods
jmp
pop
repnz
hlt
shl
mov
dec
or
pop
in
and
add
in
ja
mov
sbb
call
test
ins
lods
sub
jo
dec
push
mov
lds
push
sbb
mov
pop
mov
int
push
call
jecxz
inc
xchg
sti
pop
xchg
cwde
call
mov
pop
cmp
jp
nop
mov
cmp
push
xor
fld
ret
pop
je
fdiv
mov
sub
int
movs
mov
fisttp
icebp
pop
inc
ficomp
xor
scas
pushf
lods
stc
lahf
xor
ret
out
add
push
shl
push
retf
jge
out
aad
sub
add
sbb
retf
les
enter
inc
jb
mov
xor
mov
sbb
jp
ret
in
and
arpl
sub
(bad)
std
mov
rol
int3
pop
stos
fnstenv
cmps
loope
dec
dec
stos
popf
dec
xor
shl
push
cmp
jne
loop
repnz
or
jno
xor
inc
inc
push
pop
scas
call
add
pushf
frstor
inc
xor
mov
cdq
std
mov
mov
mov
add
mov
fldcw
iret
dec
shl
lds
mov
jnp
mov
shl
lods
push
xchg
or
scas
ss
sbb
outs
jge
jmp
or
add
dec
addr16
ins
adc
ds
sbb
(bad)
dec
jnp
jb
idiv
jecxz
jb
adc
sbb
xchg
repz
pop
xchg
and
mov
pop
arpl
add
mov
sub
dec
jl
inc
rcr
out
(bad)
loope
and
cmp
pop
aad
jle
cmps
fdivp
outs
sbb
cdq
fistp
inc
test
rcr
inc
sub
test
xlat
stc
or
adc
ror
(bad)
(bad)
or
jb
loope
call
pop
aas
es
fbld
imul
mov
retf
cmc
fild
xor
xor
mov
or
xor
mov
or
fldenv
push
sub
lds
mov
xor
fiadd
call
jecxz
pusha
in
popf
call
push
xor
jb
push
cmps
mov
xchg
add
pop
rol
push
out
add
into
(bad)
xchg
sub
and
or
push
enter
dec
repz
rcr
sbb
xlat
jbe
jge
call
imul
imul
pop
lea
mov
mov
jmp
fdecstp
retfw
test
shl
into
movs
xchg
jmp
shr
mov
scas
imul
or
jge
inc
add
mov
jp
inc
xlat
xor
js
push
iret
xchg
inc
adc
in
outs
mov
int
inc
cld
sbb
jo
movs
daa
das
cmps
or
inc
adc
mov
mov
(bad)
(bad)
(bad)
in
div
sub
mov
ins
xchg
xor
dec
mov
repz
das
movs
pop
cmps
enter
getsec
(bad)
jl
js
scas
sbb
mov
push
mov
int3
aam
ret
mov
fistp
shl
imul
cli
adc
test
lods
pop
inc
nop
inc
(bad)
fld
fild
sbb
outs
dec
popa
mov
and
mov
pop
stos
sub
jns
inc
push
jmp
stos
stos
and
cmc
cmp
add
adc
and
pushf
sbb
and
jg
xchg
mov
call
and
and
repnz
(bad)
pop
dec
(bad)
push
push
lods
cmp
push
mov
xlat
inc
dec
xchg
jno
add
out
jbe
(bad)
imul
xchg
lahf
mov
sub
push
dec
(bad)
mov
leave
mov
sahf
or
in
aas
mov
inc
pop
movs
dec
add
js
jecxz
and
push
lock
loopne
push
mov
jns
inc
test
inc
and
repz
enter
mov
push
loopne
leave
stos
dec
xchg
sbb
in
out
jp
lahf
stc
pop
out
sub
xchg
and
sub
out
add
fbstp
or
aas
popf
mov
scas
jbe
cmovns
push
push
push
pushw
out
sbb
sub
xchg
out
add
pand
popf
(bad)
sbb
mov
xor
jmp
sbb
sbb
(bad)
mov
mov
mov
pusha
add
adc
xor
jae
jae
or
cmc
into
les
mov
jle
sub
leave
es
das
jo
pop
outs
jmp
hlt
iret
adc
es
adc
mov
jmp
xchg
sbb
mov
mov
jnp
or
fadd
push
push
mov
adc
xchg
sbb
cmc
cmps
ret
mul
into
mov
in
xchg
cli
sub
jne
retf
iret
adc
dec
sub
pushf
outs
add
test
out
jmp
cmp
stos
or
stc
sub
popf
inc
sub
or
dec
push
fwait
push
(bad)
lahf
aas
cdq
and
and
sub
xor
jp
push
cmp
mov
pop
mov
call
xor
(bad)
mov
dec
test
(bad)
arpl
clc
dec
(bad)
fst
dec
repnz
jo
lea
out
push
sbb
stc
mov
les
cdq
pop
xor
mov
inc
js
sbb
cdq
dec
(bad)
hlt
fidiv
int
mov
dec
mov
(bad)
retf
xchg
xchg
popa
jnp
loopne
sub
add
jno
push
mov
push
retf
test
push
cmp
mov
sbb
jnp
mov
rcr
dec
rcr
(bad)
mov
push
mov
addr16
aas
cmp
jle
ret
dec
jl
test
jne
xchg
inc
repnz
mov
sti
jb
lods
mul
inc
sbb
mov
sbb
out
test
jge
sub
pop
add
shl
add
lea
mov
aad
sub
shr
mov
mov
sbb
data16
mov
movs
das
sbb
call
lock
pop
int3
fimul
ss
sub
les
repz
jae
xor
xchg
xchg
cs
xchg
popa
mov
ja
sub
test
nop
xchg
ins
mov
add
add
enter
ins
cdq
mov
adc
mul
push
iret
outs
int
out
cmps
xor
jnp
lea
mov
adc
(bad)
aam
ret
jns
arpl
out
test
jo
mov
and
pop
fidivr
and
push
int3
adc
mov
mov
sar
mov
scas
bound
call
sar
gs
arpl
fmul
in
jmp
xor
dec
cdq
into
sbb
inc
aad
mov
dec
add
or
push
dec
mov
cmp
mov
out
inc
ficom
out
push
xor
ret
test
and
fist
pop
pop
mov
(bad)
test
dec
add
fld
cmp
and
es
ret
jp
jg
jg
test
add
shl
or
fwait
int3
jb
push
call
gs
mov
push
inc
or
loop
(bad)
cmp
xchg
jecxz
out
push
dec
mov
fcom
add
imul
loope
inc
push
lods
sti
fwait
movs
in
xor
ins
sub
(bad)
std
aad
(bad)
frstor
xchg
sti
dec
pop
or
ror
cmp
ss
retf
lds
adc
jg
pop
icebp
jnp
pusha
lea
popf
daa
popf
adc
fnstcw
cdq
fcmove
push
cmp
mov
push
bound
mov
js
or
sub
rcl
mov
pop
mov
mov
mov
inc
mov
scas
dec
pop
es
rep
arpl
stos
and
jnp
dec
pop
mov
inc
iret
ror
sub
movs
cmp
sub
sar
jnp
or
fst
rcr
mov
js
iret
xor
cs
stc
cs
dec
imul
adc
les
and
imul
retf
mov
pop
fiadd
xchg
mov
pop
dec
fdivp
hlt
or
cdq
loope
fisub
fldpi
mov
pop
xchg
adc
stc
xchg
rol
mov
add
dec
outs
imul
push
daa
cli
icebp
scas
aad
xor
pop
xchg
jnp
std
stc
imul
cmp
add
sbb
xchg
(bad)
pop
dec
cmps
sbb
cdq
cli
lods
shr
les
mov
ret
sbb
lock
fistp
xchg
push
xchg
cmps
sbb
cmp
dec
or
es
in
jne
mov
repz
mov
popf
out
sbb
pop
out
pop
lock
lods
mov
outs
clc
dec
inc
ja
mov
jno
(bad)
push
xor
imul
inc
enter
es
int
bound
or
loopne
mov
add
shl
std
loop
outs
shl
xlat
ins
cmp
cmp
sub
adc
ins
dec
and
mov
nop
popa
xlat
and
rol
adc
iret
xor
mov
addr16
mov
into
ret
jae
ds
pop
call
ins
inc
push
sbb
and
stos
iret
sub
sbb
(bad)
jmp
pop
mov
or
inc
cld
rcr
push
int3
dec
(bad)
std
int3
adc
mov
out
cmp
fsubr
jmp
adc
cmp
mov
dec
lahf
mov
outs
xchg
pop
into
repz
outs
dec
cmp
int3
fcomp
ins
je
ss
adc
adc
sub
dec
fistp
xor
sub
and
pop
sbb
adc
adc
outs
push
scas
jno
jg
test
push
fnstsw
sub
sub
mov
jge
dec
cmc
inc
inc
daa
inc
aaa
ja
or
sbb
pop
sub
pop
sti
adc
lock
aad
in
pop
mov
stos
ror
jle
xor
arpl
aad
xlat
cmp
adc
dec
or
jp
mov
cmp
cmp
push
xor
aas
xor
mov
call
and
sahf
call
push
lds
(bad)
adc
jl
imul
add
xlat
mov
push
jnp
in
(bad)
movs
push
xor
or
iret
mov
les
in
or
mov
rcr
icebp
jno
mov
test
mov
pushf
(bad)
bound
jbe
mov
jmp
pop
arpl
es
inc
pop
int3
sbb
cmp
mov
(bad)
int3
and
push
imul
enter
dec
mov
push
mov
stc
xor
cmp
push
and
push
xchg
loope
dec
call
enter
jg
imul
repnz
stos
stos
xor
and
adc
add
loope
mov
or
adc
fisubr
movs
xor
sbb
pushw
fstp
ss
pop
out
pop
mov
mov
movs
add
and
rcr
icebp
leave
xor
jmp
push
mov
add
sbb
test
pop
jnp
fsubr
bound
int3
scas
movs
pop
movs
iret
fwait
cwde
mov
or
mov
jmp
and
pop
pop
fwait
fwait
and
loope
scas
loop
sahf
sbb
lea
pop
add
test
pop
and
test
xor
or
cmps
jg
rol
mov
push
add
test
mov
mov
loopne
cmp
call
mov
cli
icebp
imul
xor
mov
mov
and
aam
bound
test
push
xchg
or
and
cmp
xchg
dec
mov
mov
mov
in
mov
adc
pop
loopne
inc
stos
(bad)
mov
fstp
and
and
pop
adc
in
sub
pusha
dec
xor
jno
push
jo
sub
jo
xchg
add
je
cmp
test
es
push
out
data16
adc
fwait
cmps
stos
cmp
mov
out
add
dec
(bad)
out
rol
ja
mov
mov
(bad)
jp
push
cli
mov
add
mov
xor
mov
nop
push
xor
sbb
sub
ficomp
(bad)
loope
xchg
cmp
jns
paddusw
push
sbb
(bad)
aas
cs
xchg
data16
push
je
mov
call
sub
fsubr
cmp
inc
push
sub
push
ror
dec
mov
mov
repnz
nop
pusha
(bad)
adc
sbb
adc
or
pop
es
inc
xor
inc
cdq
(bad)
out
xor
adc
ret
repz
adc
out
addr16
scas
stos
adc
inc
xchg
push
cmp
inc
retf
inc
(bad)
mov
movs
push
ror
imul
ins
inc
mov
fst
xchg
rcl
or
cmp
mov
icebp
fwait
push
pop
xor
lods
adc
mov
ficomp
cwde
jle
jmp
inc
leave
inc
xchg
retf
pusha
popa
sbb
mov
ins
sahf
cmp
jl
push
dec
jl
push
shl
and
or
mov
jp
push
mov
fsub
inc
mov
in
cmp
pushf
js
test
or
adc
hlt
das
jg
mov
shl
call
cmps
add
retf
(bad)
loopne
or
outs
add
test
push
inc
scas
push
jecxz
sbb
inc
and
and
cmp
cmp
int
hlt
fisubr
jp
fcomp
pop
iret
mov
sbb
jmp
das
popa
jbe
cmp
bound
mov
das
jecxz
dec
sub
aam
and
jae
ror
mov
add
or
jmp
and
mov
add
movs
xchg
jmp
ds
int3
arpl
movs
jp
xor
hlt
in
pushf
mov
mov
and
fidiv
mov
bound
push
sub
cmps
call
popa
xchg
sahf
test
jg
ss
jbe
(bad)
pop
and
push
stos
aas
sar
sbb
sub
mov
iret
ins
mov
cmp
pusha
shl
cmp
scas
sub
xchg
(bad)
jns
xor
dec
dec
push
mov
xor
das
jbe
es
retf
xor
lds
add
cmp
hlt
jmp
pop
and
popa
cli
sahf
addr16
lods
cmc
push
sub
add
mov
mov
nop
cmp
movs
int
adc
jl
push
ret
(bad)
dec
clc
sahf
adc
in
sti
(bad)
jl
repz
popf
sbb
push
aaa
push
dec
push
mov
push
or
movs
xor
outs
and
sbb
test
pop
cmp
stos
jns
daa
mov
div
xchg
mov
imul
pop
mov
retf
mov
ret
adc
add
add
es
mov
mov
pop
xchg
stc
scas
mov
xor
into
shr
mov
cmp
pop
out
add
jge
(bad)
mov
jo
(bad)
jae
lock
repz
jmp
mov
in
fimul
lahf
jmp
jg
rcl
mov
outs
xchg
adc
jecxz
push
sahf
leave
push
xor
outs
mov
pop
je
pushf
mov
(bad)
cmps
and
cmp
add
pop
cmp
in
iret
scas
add
cdq
mov
dec
sbb
jnp
dec
mov
and
mov
push
xor
scas
xchg
xor
test
add
mov
sub
jne
mov
(bad)
gs
pop
and
mov
mov
inc
sub
or
xchg
scas
shl
int3
mov
push
sahf
mov
xchg
sbb
ins
and
and
(bad)
mov
rcr
aad
fs
pop
in
imul
mov
and
call
sbb
pop
push
inc
sbb
cdq
(bad)
mov
fistp
fwait
popf
and
mov
lock
cdq
or
movs
or
pop
(bad)
xchg
cmp
mov
lods
inc
lock
add
push
shl
out
movs
pop
jp
das
es
ins
ss
pop
idiv
sub
xchg
xchg
inc
mov
adc
pop
mov
and
push
aad
dec
cmp
xor
iret
or
xchg
dec
imul
sbb
sbb
mov
cmc
xchg
mov
push
or
push
inc
pop
sub
and
adc
call
push
jnp
das
add
into
mov
xchg
sbb
xor
push
cmp
dec
xor
test
pop
into
mov
mov
xchg
aaa
add
aad
dec
(bad)
clc
les
dec
jno
fst
sbb
adc
mov
out
push
aaa
lock
push
push
add
jbe
rcl
and
xor
retf
imul
cmps
cld
outs
xchg
pop
adc
pop
jp
(bad)
dec
xor
xor
xor
sbb
cmp
adc
xor
(bad)
outs
aas
sahf
mov
fiadd
imul
sbb
jecxz
xor
add
mov
mov
mov
inc
dec
mov
es
or
sub
pusha
pop
xchg
jno
and
sbb
cld
sub
pop
out
dec
stc
dec
sbb
adc
in
popa
jae
add
pushf
xchg
add
mov
mov
add
nop
jns
inc
addr16
clc
ja
pop
pop
(bad)
loopne
adc
add
(bad)
push
pop
xchg
movs
sub
pop
into
xor
mov
aaa
imul
dec
push
fisub
mov
and
pop
pop
cdq
ds
jno
iret
sahf
fcomp
fadd
ror
popa
sbb
inc
aas
xor
mov
sub
stos
sub
dec
outs
stc
test
hlt
adc
sub
adc
push
xchg
shr
xchg
rcr
stos
xor
or
neg
popf
inc
ja
daa
mov
pop
push
and
cmp
das
js
les
jmp
sti
(bad)
or
aas
arpl
sbb
lahf
repz
stc
adc
ret
mov
mov
sub
push
jl
mov
bound
adc
fcmovnu
icebp
pop
data16
cmp
out
(bad)
ss
mov
aad
enter
add
stos
sahf
test
popa
pop
and
call
add
xchg
mov
rcr
or
and
jnp
adc
pop
mov
out
push
(bad)
jnp
push
shl
in
das
sub
mov
inc
cdq
pop
ds
stos
or
add
fild
repz
push
mov
ins
dec
ins
sbb
iret
mov
out
lods
add
dec
pop
xor
push
jmp
loopne
call
or
hlt
lock
int3
xchg
xor
pop
in
out
ret
xchg
stos
push
test
sbb
push
inc
or
mov
popa
fbld
cld
sub
(bad)
in
outs
inc
mov
not
lods
(bad)
mov
pop
inc
lahf
stos
cmp
lods
movs
add
jae
hlt
call
dec
adc
sub
push
pop
jbe
and
mov
add
sahf
out
pop
xchg
dec
pop
int3
das
arpl
mov
gs
mov
cmp
pop
movs
out
push
js
mov
add
sub
inc
cld
outs
std
adc
(bad)
ja
push
mov
test
aam
push
pop
repnz
xchg
mov
push
mov
xchg
push
jg
pop
call
xor
mov
shl
inc
dec
jg
rcl
jnp
icebp
cs
jo
out
or
sbb
inc
cmp
sar
rcr
jne
xchg
ins
mov
push
fstp
push
iret
imul
cld
not
mov
cdq
adc
inc
and
cmc
push
sub
imul
repz
add
cdq
xor
mov
mov
sbb
ret
movs
dec
inc
nop
aas
dec
and
mov
call
sbb
mov
stos
or
fcmovbe
inc
push
stos
jnp
lea
popf
mov
adc
popf
sub
inc
mov
inc
or
sub
sar
sti
and
aaa
sbb
sbb
loop
fwait
inc
ret
test
movs
and
inc
iret
test
jmp
sub
retf
xchg
cmp
dec
add
out
xchg
jg
imul
jnp
xchg
mov
or
cli
mov
pushf
push
add
mov
mov
test
jae
sub
mov
mov
in
jmp
xor
cmps
or
cmp
scas
cmps
mov
outs
cmp
mov
inc
cld
push
inc
mov
or
xchg
fcomi
push
push
and
mov
sbb
sub
jmp
xchg
outs
dec
mov
push
jmp
xor
adc
dec
mov
lea
sbb
mov
and
mov
iret
jg
xchg
call
add
jl
leave
call
mov
adc
inc
mov
jbe
inc
pop
sbb
dec
ins
sbb
ins
js
inc
enter
sub
pop
xlat
popf
mov
add
imul
rcr
test
jns
push
pushf
ins
jo
and
sub
stos
mov
lahf
test
in
jle
mov
ds
aad
mov
adc
mov
mov
mov
push
mov
sub
mov
jle
adc
fiadd
push
stc
fcomp
pop
mov
out
jp
mov
push
and
jle
and
popa
mov
xlat
repz
mov
imul
adc
popf
lods
sbb
sbb
dec
fiadd
retf
leavew
retf
mov
fistp
out
cmc
sbb
lock
std
jp
in
(bad)
rcr
(bad)
sub
add
lock
jmp
fsubr
adc
out
ret
dec
lea
in
into
adc
mov
push
or
call
jp
jmp
dec
mov
jne
jecxz
pop
mov
cmps
pop
xchg
scas
lahf
movs
push
mov
and
sub
loop
mov
stos
xchg
pop
push
push
mov
scas
inc
cli
cmp
in
stc
jbe
imul
clc
xor
xor
test
pop
add
jae
pop
and
mov
jb
or
std
popa
repz
and
or
inc
int
sbb
dec
dec
lods
adc
jo
and
xor
adc
lods
add
push
cmps
fld
push
dec
pushf
xchg
or
dec
fisttp
mov
movs
sub
jge
mov
dec
mov
lods
and
push
ror
ret
adc
repnz
daa
push
mov
fldcw
jns
rcr
sub
dec
push
out
adc
(bad)
repnz
jg
mov
mov
jecxz
adc
push
mov
jns
fwait
addr16
add
adc
jle
cmp
mov
mov
push
pop
jge
icebp
or
jb
pop
mov
das
pop
xchg
jmp
sbb
push
sub
add
or
fsub
or
cmps
(bad)
neg
xchg
inc
cmp
repz
mov
bnd
mov
cmp
sbb
fld
and
jne
jae
ja
test
popa
adc
mov
ins
mov
mov
pop
daa
jo
aas
mov
stos
mov
lea
in
je
sbb
push
and
ror
mov
xchg
pop
outs
adc
jmp
ror
xor
mov
and
into
hlt
not
jb
hlt
scas
lods
out
jnp
jle
push
sbb
es
dec
test
enter
sub
or
push
fidiv
retf
push
or
outs
mov
push
push
and
es
imul
in
jne
ret
fisubr
or
int
or
test
adc
inc
mov
cmc
jmp
mov
and
or
lahf
pop
mov
pop
jg
adc
xchg
mov
xchg
ret
jns
inc
je
shl
sub
cs
cdq
add
push
cmp
ins
ja
sar
leave
dec
add
push
out
dec
mov
sar
cwde
dec
mov
add
adc
clc
cs
add
xor
xor
or
mov
aaa
adc
popa
js
mov
(bad)
aad
test
outs
dec
fidiv
(bad)
fs
or
xchg
fcom
ret
ror
fst
push
pop
push
mov
xchg
vpmaxuw
call
jno
lahf
xchg
push
movs
arpl
fs
imul
cmp
pop
add
cmc
cs
fistp
jge
cmc
js
stos
cwde
pop
pusha
scas
push
rol
xchg
sub
dec
mov
mov
ds
sbb
cmp
scas
xor
sub
test
repz
jmp
sbb
cmp
imul
movlhps
mov
shl
aaa
sbb
xor
nop
lods
lahf
out
mov
leave
or
adc
arpl
dec
pop
sbb
call
mov
cli
or
add
mov
rcl
jns
stc
inc
into
dec
jle
pop
inc
mov
cli
(bad)
dec
das
jp
loope
xor
mov
add
fnstsw
pushf
sub
jecxz
jg
test
or
jbe
xchg
sbb
les
lahf
cmc
stc
cs
dec
in
sub
adc
or
sbb
fwait
mov
sbb
xor
pop
inc
es
rcr
fild
imul
inc
scas
mov
push
sbb
jo
mov
enter
retf
rcl
imul
xor
fist
ret
xor
pop
out
pop
mov
jb
cld
xchg
test
jo
push
lds
dec
pusha
rol
xor
inc
dec
add
cmp
(bad)
loopne
ins
xchg
movs
pop
sub
or
mov
rcl
(bad)
jae
enter
das
xchg
loopne
xor
pop
aaa
cmp
jecxz
ins
fisub
jae
pushf
pop
out
inc
cdq
mov
dec
aad
xor
sub
push
test
or
inc
(bad)
jge
loope
xor
jne
cwde
imul
hlt
scas
stos
aas
pop
fisubr
and
and
cli
pop
mov
call
adc
push
jo
mov
xor
test
inc
loopne
outs
cdq
(bad)
int3
mov
outs
and
loop
jp
mov
xchg
xor
iret
aam
arpl
cdq
dec
scas
in
push
(bad)
dec
xor
cmp
movs
mov
push
sar
jbe
dec
dec
les
sbb
jp
dec
cmp
push
jo
movs
xor
mov
mov
xchg
repz
ss
(bad)
call
addr16
jbe
dec
mov
cmc
ds
sub
bound
mov
(bad)
je
cmps
jp
mov
push
mov
xor
sub
xchg
or
mov
inc
daa
inc
push
sbb
loopne
jmp
lea
add
aaa
jb
inc
dec
push
xor
inc
(bad)
fisubr
xchg
mov
cmp
sbb
lahf
xchg
popa
jmp
fst
mov
pop
inc
adc
pushf
cmp
int
mov
les
call
pop
inc
mov
sbb
jle
jmp
mov
js
mov
fldcw
sbb
arpl
test
sbb
mov
mov
(bad)
pop
or
ss
xor
mov
and
jmp
add
push
sbb
add
sar
lock
or
sar
pop
push
movs
ins
push
push
shr
stos
adc
jle
shl
fstp
adc
cmp
mov
or
lods
fbstp
and
retf
imul
push
int3
mov
or
jl
js
sbb
add
push
or
mov
mov
stos
or
push
test
adc
hlt
mov
fmul
dec
loopne
ret
push
adc
xor
lahf
ret
add
sub
mov
aam
les
adc
mov
add
or
dec
adc
or
test
sbb
push
xchg
dec
jae
call
gs
pop
repnz
xor
add
lahf
mov
and
test
imul
pop
xor
fcmovne
jbe
enter
test
inc
cli
es
aaa
sbb
(bad)
adc
cmp
out
mov
jle
call
pop
sbb
mov
add
test
(bad)
mov
fst
bound
sub
std
and
mov
idiv
mov
loope
aam
sbb
lds
add
fild
fdivr
imul
cmp
xor
inc
pop
push
mov
jae
or
or
add
(bad)
mov
int
outs
sub
xchg
jne
ins
scas
cmp
call
push
add
lods
ret
pop
xchg
repz
add
fiadd
push
pop
xchg
lds
xchg
repz
dec
jmp
lods
inc
ss
push
cmp
mov
sbb
and
pop
inc
xchg
dec
arpl
sub
push
jb
xor
div
and
cmp
sbb
and
mov
cmps
add
pop
in
push
(bad)
into
mov
cmps
mov
lock
(bad)
xchg
shr
xchg
or
into
jge
or
cmp
lea
loope
add
sbb
push
mov
push
inc
add
into
sahf
(bad)
dec
mov
enter
arpl
xor
daa
jge
jl
push
push
pop
data16
pop
jns
mov
xor
and
scas
int3
ror
jmp
sub
xchg
daa
mov
pop
sub
cwde
shl
cld
dec
call
lods
jmp
sub
cli
inc
dec
sub
sub
ins
xor
imul
int3
lea
movs
push
mov
loopne
xchg
test
int3
xchg
xchg
xchg
pushf
pushf
scas
push
pop
push
mov
mov
mov
cmp
out
pop
jb
mov
mov
pop
dec
mov
hlt
cmp
pop
mov
sub
outs
mov
mov
lods
add
xor
or
sar
imul
add
into
pop
mov
pop
cs
adc
dec
int
neg
call
adc
sbb
ror
clc
jmp
fwait
and
cmp
retf
mov
test
nop
inc
and
ins
ret
add
out
push
cmp
add
and
pushf
or
xor
ror
fs
clc
daa
xchg
jg
stos
daa
ficom
lds
jle
push
jns
push
xchg
mov
call
adc
pop
sbb
push
test
push
mov
mov
test
outs
or
int
and
fwait
fs
adc
jne
or
jp
(bad)
mov
fstp
cmp
iret
xchg
aad
and
loop
jp
scas
shl
xor
sub
cmc
inc
pop
test
(bad)
and
and
stos
jne
sub
jmp
ret
dec
xchg
dec
loopne
jne
mov
dec
into
push
retf
bound
popf
outs
ins
movs
in
xlat
stos
into
retf
xchg
loopne
icebp
addr16
mov
scas
test
in
mov
(bad)
push
lahf
in
add
into
jmp
lods
in
jbe
adc
sbb
pop
or
dec
outs
pop
das
call
pop
cmp
repnz
icebp
jo
lods
cmp
cld
test
push
pop
mov
jge
sub
mov
sar
outs
into
gs
mov
xlat
and
mov
movs
bound
mov
push
enter
pop
dec
outs
mov
push
mov
cmp
retf
pop
mov
call
(bad)
xchg
stos
retf
int
jl
inc
cmc
jns
cmps
test
sbb
add
bound
out
jp
arpl
mov
(bad)
dec
fmulp
clc
mov
mov
xlat
xor
add
cmc
ret
test
dec
pop
retf
cmp
fcom
mov
fst
ret
add
(bad)
gs
sar
and
xchg
ret
fwait
nop
jmp
mov
mov
push
rcl
sub
cmps
push
nop
and
clc
xor
xor
stos
popa
sahf
mov
inc
mov
cmps
fidivr
or
and
mov
lock
out
jnp
fild
add
jns
add
inc
adc
outs
mov
adc
fnstsw
sbb
bound
jl
inc
pop
scas
dec
pop
jg
mov
les
sahf
sbb
xchg
aad
mov
loop
aaa
jmp
sbb
adc
push
cwde
data16
and
aad
xlat
repnz
mov
leave
inc
push
outs
and
or
jnp
lock
add
(bad)
push
repz
pop
idiv
into
and
xor
repz
sbb
fdivr
xchg
retf
aam
sbb
stos
pop
(bad)
idiv
sub
cs
neg
xchg
or
mov
test
xor
lds
push
inc
adc
stos
xchg
or
fiadd
push
out
shl
mov
js
jae
sbb
push
inc
stos
lahf
push
imul
int
(bad)
jl
cmp
jg
inc
xchg
(bad)
into
mov
push
out
clc
out
out
shr
dec
cmp
aas
mov
ds
pop
(bad)
lea
enter
xor
imul
into
xor
inc
out
out
jo
sbb
sub
add
mov
xchg
ja
dec
stos
movs
add
mov
out
xor
int
dec
ror
sub
jl
cs
and
movs
sub
mov
or
xchg
sbb
mov
fadd
mov
mov
inc
pusha
cmps
xor
xchg
mov
dec
xor
sbb
and
mov
push
out
retf
gs
(bad)
xor
add
je
in
cmp
cmp
shl
int3
lods
jg
inc
fs
or
repz
adc
pop
into
push
repz
ror
hlt
daa
cs
fld
pop
mov
pop
pop
(bad)
mov
mov
xchg
or
jg
aaa
cmp
test
push
xlat
push
jnp
xor
sub
mov
arpl
in
xchg
jmp
fcmovb
or
adc
cli
cld
retf
and
sub
jb
pop
enter
mov
xchg
ins
cli
sub
add
or
in
sub
add
inc
fs
jmp
add
div
hlt
jle
jmp
loopne
test
or
je
scas
bnd
ret
dec
int
mov
int3
(bad)
mov
cli
cmp
mov
or
mov
fwait
imul
push
fnstenv
dec
pusha
and
mov
push
int3
jb
je
std
add
and
jp
imul
arpl
cmps
or
jp
mov
aas
pop
pushf
or
push
clc
int3
jb
push
movs
sub
je
popf
mov
xor
cmp
mov
pop
jp
fsub
cdq
inc
loopne
and
lea
test
mov
xchg
nop
cmp
mov
pop
je
dec
sbb
mov
call
sti
retf
(bad)
pop
imul
sahf
sbb
adc
mov
cmp
push
fimul
loopne
jg
mov
out
mov
ins
cmps
cdq
popa
stos
mov
mov
xchg
nop
imul
mov
xchg
xchg
sahf
out
xchg
add
and
mov
int3
add
cmp
repz
std
xor
xchg
lds
mov
mov
add
das
gs
xchg
es
cmp
sahf
pop
mov
xchg
test
bnd
pop
aaa
push
push
xlat
dec
retf
in
js
xchg
mov
mov
sbb
pop
imul
mov
imul
add
sbb
ret
pop
jae
stos
adc
xor
sub
jge
sub
and
mov
retf
retf
xor
push
mov
daa
mov
push
or
cmc
mov
addr16
int
push
xor
fsub
rcl
ss
and
stos
retf
cli
xor
std
stc
lahf
popa
clc
scas
xchg
imul
mov
xor
fisttp
call
jns
jno
lock
in
inc
mov
dec
sub
mov
jns
adc
ror
pop
xchg
fistp
fist
xchg
add
popf
outs
icebp
add
push
mov
mov
or
std
inc
inc
adc
in
call
pop
test
push
out
(bad)
sbb
jp
fisttp
fsubr
add
fnstsw
cdq
pop
jmp
hlt
cwde
mov
fistp
mov
outs
in
jp
mov
pusha
inc
xchg
(bad)
loope
aaa
popf
pop
into
out
cli
jbe
jle
in
into
sbb
in
mov
pop
mov
xlat
hlt
icebp
cwde
dec
inc
stc
inc
sti
movs
jp
adc
fwait
xlat
sub
div
xchg
sahf
std
or
leave
pushf
jle
les
cmp
xor
xor
fnstsw
ins
mov
add
push
movs
loope
retf
in
(bad)
in
arpl
shl
jle
push
push
aam
inc
fidiv
mov
stos
div
jecxz
imul
in
cmp
xchg
xlat
add
push
and
les
xor
jmp
orps
mov
inc
xor
ja
cmc
repz
and
sub
pushf
xor
inc
stos
or
add
test
xchg
jg
scas
pop
push
mov
scas
test
stc
(bad)
test
sub
mov
into
adc
xor
shrd
sbb
sub
rol
pusha
mov
mov
int
fmul
or
mov
dec
mov
mov
dec
fsub
rcr
outs
in
jae
xor
inc
js
xor
cmp
(bad)
cli
or
add
sub
test
jp
mov
retf
js
and
jmp
sub
and
pop
mov
xchg
call
std
into
jmp
fnstsw
arpl
iret
leave
xchg
pop
pop
(bad)
ja
aas
imul
xor
and
sub
outs
cmps
cdq
and
sub
lods
mov
pop
lock
push
inc
jp
fcmovbe
mov
dec
xor
cli
int
mov
mov
mov
mov
xchg
or
jmp
add
push
outs
push
mov
in
mov
stc
xchg
ins
sub
test
adc
mov
or
mov
mov
pop
dec
aaa
(bad)
lods
mov
xchg
inc
push
js
dec
jne
rcl
xchg
mov
pop
std
int3
popa
psrlw
rol
add
scas
push
sbb
in
or
int
aam
fcom
inc
popf
loopne
push
sub
nop
(bad)
pop
xor
or
loop
add
(bad)
dec
mov
add
xchg
sub
retf
cmp
sti
xlat
push
pop
mov
jo
add
in
inc
outs
cmp
retf
xchg
outs
(bad)
in
lods
aad
push
in
lock
push
xor
int
cwde
adc
stc
mov
mov
cld
je
mov
mov
call
(bad)
shl
inc
stos
jecxz
xor
cmp
jb
and
repnz
not
inc
das
dec
inc
jl
pop
imul
in
mov
adc
aad
dec
add
push
adc
test
ret
fsubr
push
and
add
xchg
pop
add
xor
sbb
aam
in
xchg
push
push
add
jnp
xchg
add
adc
int3
ret
dec
mov
sub
cmps
pop
inc
ret
repz
out
shl
retf
xor
es
and
add
ds
(bad)
mov
add
mov
xchg
sti
mov
and
sbb
mov
fistp
cmp
fdiv
stos
sbb
int
addr16
aad
mov
push
or
mov
xor
add
cmps
out
(bad)
loope
int3
ret
int3
push
imul
imul
push
push
jb
call
and
sub
vpsadbw
retf
inc
loope
int3
adc
movs
cmps
cwde
cmp
gs
xor
mov
daa
cwde
sbb
cwde
and
jmp
scas
(bad)
jl
repnz
mov
or
mov
pop
xchg
xchg
mov
les
int
or
sbb
gs
mov
xchg
rcl
mov
or
push
retf
(bad)
dec
and
sbb
sub
leave
(bad)
call
in
in
mov
cwde
test
clc
xchg
mov
rcr
pop
cmp
xor
dec
jecxz
cmp
lahf
push
cmp
and
mov
pop
js
xchg
push
jecxz
call
xor
loopne
or
fdiv
mov
lahf
mov
outs
jns
test
jno
mov
pusha
push
adc
test
xor
xor
sbb
or
js
sar
sahf
popf
dec
dec
jae
xchg
shl
icebp
push
cwde
out
leave
call
mov
imul
(bad)
int
arpl
xchg
add
pop
iret
jecxz
xlat
xchg
xor
fidiv
(bad)
cmc
xor
add
aad
in
call
mov
pop
mov
inc
sub
jne
push
or
shr
sub
sub
cmp
shr
mov
das
xchg
or
(bad)
cmp
mov
cmp
stos
ja
fdivp
dec
xor
sti
not
out
pop
jmp
mov
inc
repnz
mov
jmp
xchg
push
dec
std
dec
scas
das
rcr
xor
nop
push
adc
imul
or
xlat
jae
pop
retf
cdq
outs
retf
sub
pop
push
test
dec
jle
sub
test
xor
xchg
retf
dec
mul
push
out
push
add
xchg
sar
pop
test
xchg
iret
adc
jnp
das
sub
hlt
push
imul
cwde
mov
fcmovu
cmp
mov
ret
cmps
dec
add
jbe
jno
xchg
xchg
mov
and
xlat
pop
xchg
lock
xchg
add
cmp
mov
dec
pop
ret
or
mov
sahf
or
mov
xchg
mul
pop
cld
into
ja
add
cdq
pop
ins
inc
mov
shl
dec
push
cmp
sub
mov
in
mov
xor
xchg
call
hlt
das
add
inc
pop
sub
and
cmp
inc
stc
ror
mov
jmp
fcomi
jae
sub
leave
add
call
mov
jb
arpl
or
dec
jbe
in
sub
pushf
retf
or
mov
repnz
xabort
sahf
sub
mov
rol
ins
cld
cmp
(bad)
adc
cmps
fdivp
jg
add
ins
add
cmp
sahf
jecxz
fxtract
lods
pop
sbb
or
fisttp
add
or
pushf
(bad)
or
jmp
cmps
sub
dec
mov
lods
cmp
fcmovb
dec
loop
add
or
les
mov
inc
imul
outs
sbb
ss
popf
pusha
add
cmp
aas
test
pop
shl
and
jge
in
push
mov
mov
ja
pop
jg
add
mul
add
add
push
call
loopne
inc
adc
dec
mov
fst
mov
int3
mov
into
xor
rol
hlt
and
(bad)
push
cdq
rcr
dec
adc
in
or
in
iret
fisttp
inc
scas
pop
xor
dec
ja
(bad)
dec
xlat
mov
push
inc
lahf
test
lods
or
push
cdq
jmp
adc
dec
adc
jg
(bad)
cmp
sti
lods
mov
or
dec
add
cmp
adc
(bad)
xchg
push
fstp
enter
or
mov
fsub
lahf
loop
adc
sub
test
int
das
in
mov
cmp
imul
dec
or
lock
popa
adc
in
out
mov
dec
inc
add
cmps
imul
rcl
jp
jl
mov
out
jle
pop
inc
add
sub
push
add
imul
test
js
loope
mov
add
mov
shr
loop
cmp
sbb
jns
mov
push
mov
jle
xor
ficom
inc
stos
loop
push
xlat
sub
test
mov
mov
push
mov
test
sar
clc
pusha
mov
in
mov
jne
aas
imul
xor
ror
fiadd
pushf
in
fwait
or
sar
mov
lods
cmp
mov
pop
into
push
cmp
cmp
loop
xor
int
pop
icebp
mov
mov
fdivrp
test
xchg
stc
dec
vaddss
retf
ja
cmc
and
or
cdq
mov
push
sahf
mov
cmp
mov
or
add
ret
jno
addr16
cli
mul
pop
add
mov
in
xchg
sub
push
sbb
cwde
clc
fidiv
icebp
repz
sub
aaa
jo
jp
mov
cdq
cli
cmp
sbb
sahf
mov
push
pop
sub
xchg
mov
pop
pop
or
in
xor
(bad)
leave
in
and
push
push
dec
mov
ins
sbb
int3
jbe
adc
adc
and
inc
addr16
aad
stos
pop
mov
mov
pop
out
call
mov
pop
stc
and
rcl
cmps
retf
xchg
cmps
mov
cmp
pop
jg
stc
dec
push
sar
add
jp
cmp
daa
call
arpl
nop
mov
pop
jb
pop
adc
push
cdq
mov
popa
ret
xchg
lea
add
jne
aas
add
or
into
fnstcw
add
bound
sub
push
sub
mov
push
or
lock
sti
inc
cli
pop
popa
cdq
xchg
or
sub
mov
clc
and
or
jl
cs
lds
ror
push
in
xchg
and
cmp
rcl
pop
and
dec
xor
daa
jmp
(bad)
popf
jge
sub
test
xchg
pop
adc
pop
cmp
js
mov
cmps
popf
fild
mov
out
xor
pop
ret
cmc
ja
movs
inc
je
jp
push
push
repz
es
jnp
data16
and
and
or
add
push
adc
adc
dec
cli
pushf
pop
push
jl
cmps
inc
fist
mov
xor
xchg
xor
add
dec
inc
(bad)
xchg
ins
cmps
cmp
pop
fild
mov
xchg
mov
in
sbb
inc
jb
jae
hlt
icebp
into
cmps
mov
xlat
xor
jae
in
out
sub
leave
push
dec
push
inc
mov
mov
sub
dec
sub
or
add
ret
out
pop
stc
mov
in
lods
and
mov
cmp
aas
jmp
mov
out
sbb
mov
adc
lock
icebp
int
jecxz
jp
outs
add
ins
dec
fstp
push
ins
dec
mov
pop
jecxz
sbb
xor
ss
sbb
out
aad
in
sbb
dec
repz
loopne
dec
push
rcr
enter
fdiv
jno
add
aas
or
out
mov
xchg
or
(bad)
sbb
ss
mov
rcl
ds
inc
pop
adc
mov
shl
mov
jp
bound
cmp
add
in
push
xchg
xor
pop
mov
pushf
rdtsc
pop
pop
ret
(bad)
sub
aaa
gs
mov
pop
test
sub
mov
les
idiv
mov
sbb
fimul
and
imul
lahf
mov
inc
add
loop
das
sub
push
mov
inc
adc
sub
jne
inc
mov
(bad)
sbb
fwait
sbb
leave
or
xchg
push
mov
mov
mov
loop
jg
addr16
jbe
dec
(bad)
push
out
mov
sti
inc
or
test
int3
inc
jmp
cmps
pushf
call
ss
(bad)
in
cmp
mov
(bad)
hlt
jg
sar
(bad)
or
test
cmp
nop
xor
pop
(bad)
leave
ins
push
cmp
shr
add
pop
fcomp
dec
lods
xchg
sahf
retf
ret
pop
out
jl
out
iret
addr16
fist
adc
adc
ss
mov
sub
cmp
and
mov
jb
out
jbe
clc
rcl
xor
sbb
pop
add
inc
jge
adc
xlat
sub
cmc
or
ins
inc
icebp
xchg
js
jecxz
int
push
sbb
xchg
dec
arpl
aas
mov
mov
lods
and
mov
cmp
cmp
xor
push
push
dec
xor
mov
and
pop
fcomip
adc
lock
pop
imul
mov
jae
scas
xor
jbe
rol
mov
add
add
adc
jl
test
jne
dec
sub
int
add
aas
aas
add
enter
cmp
cmp
out
and
je
pop
ret
xchg
call
mov
ins
pop
fisttp
fninit
push
xor
out
inc
and
dec
mov
cmps
aad
push
mov
sub
push
push
int3
ds
dec
xchg
frstpm(287
das
add
sub
and
adc
shl
lods
test
(bad)
and
(bad)
in
xor
test
sbb
sahf
mov
hlt
jo
call
lea
jnp
add
or
inc
addr16
jbe
mov
mov
xor
in
fdivr
cli
jle
mul
jge
pushf
lock
mov
mov
cmp
push
push
cmp
or
dec
test
mov
fs
ror
(bad)
call
sbb
cmp
(bad)
(bad)
stc
stos
inc
add
ins
sub
push
fisubr
ins
xor
add
cmps
dec
inc
mov
push
mov
test
iret
adc
cmps
rep
in
xor
popf
int3
pop
test
mov
gs
mov
arpl
not
retf
add
sar
dec
ret
sbb
mov
pop
pop
xor
bound
pusha
xlat
lahf
mov
call
std
sub
enter
jne
push
(bad)
repnz
sub
dec
fwait
in
push
lea
loope
sbb
fdivr
fidivr
push
mov
hlt
pop
rdtsc
dec
lods
inc
adc
pop
mov
enter
cdq
push
add
dec
ss
aaa
fs
aaa
dec
mov
mov
sbb
jns
inc
xor
aas
hlt
fimul
sub
(bad)
shl
pop
sbb
icebp
test
sar
mov
jmp
mov
mov
sahf
xor
test
jecxz
pop
repz
lds
movs
setb
dec
mov
or
mov
in
neg
or
fisub
push
or
iret
xchg
ss
push
ja
push
jb
ins
(bad)
fmul
pop
mov
pop
jno
adc
pop
push
retf
lock
(bad)
jo
enter
daa
add
mov
mov
push
int
sub
in
mul
hlt
fild
add
jecxz
add
push
or
inc
pop
mov
cmp
jbe
ret
out
inc
or
mov
adc
xchg
rcr
inc
out
dec
scas
out
and
xlat
clc
push
popa
jmp
fcom
dec
test
lea
into
push
sub
aam
lock
jns
pop
outs
xchg
fsubr
inc
repz
aas
dec
inc
test
jp
sub
sub
dec
mov
jbe
or
dec
or
sub
aam
aaa
sbb
push
sub
sub
sub
in
mov
mov
add
sub
and
gs
dec
fwait
addr16
fs
loop
jp
arpl
scas
add
aad
jp
add
and
jmp
or
imul
jnp
fld
mov
lock
loopne
cld
jo
sub
bound
movs
ins
int
loope
imul
xchg
fisubr
lock
sbb
call
out
add
xor
outs
jmp
xor
mov
lods
sbb
test
repnz
and
inc
and
hlt
rol
loope
pop
inc
mov
dec
adc
jo
loopne
pop
sub
jle
movs
lahf
ret
dec
hlt
shl
(bad)
jmp
ins
daa
call
jmp
pop
mov
das
arpl
imul
loop
inc
inc
ret
mul
xor
imul
mov
mov
sub
loop
pop
hlt
sub
scas
xchg
(bad)
out
mov
or
movs
daa
sub
adc
cmps
idiv
push
pop
add
mov
je
in
jmp
mov
xor
add
dec
mov
adc
xchg
xlat
mov
ret
cld
cmp
jnp
test
repnz
jecxz
push
jmp
jmp
(bad)
xchg
test
adc
test
push
mov
sub
xor
cli
cwde
cmp
hlt
scas
mov
push
fstp
shl
movs
neg
inc
out
jle
repz
and
push
mov
inc
pop
jns
sub
arpl
dec
ds
(bad)
in
add
xor
fwait
ins
cmp
adc
sbb
mov
imul
out
sub
pop
jno
retf
and
inc
sbb
xlat
cmp
ins
int3
std
and
loopne
xor
test
push
cdq
out
stos
dec
dec
jns
inc
clc
sbb
mov
sub
(bad)
push
ret
dec
sar
jl
iret
xchg
sti
clc
adc
add
cmp
cmp
jae
aaa
jns
jecxz
call
cmps
mov
mov
call
adc
pushf
sar
lods
push
cmp
das
movs
cmp
call
lock
clc
pop
cli
repnz
lods
in
hlt
cli
mov
enter
and
pop
es
in
ret
dec
dec
dec
test
cmp
fcomp
les
jle
stos
push
pop
fbld
inc
or
jnp
pusha
xchg
jno
cs
xchg
push
pop
mov
shl
mov
aaa
jne
mov
das
jecxz
xor
cmp
mov
xor
mov
scas
push
gs
inc
jnp
add
es
mov
ins
adc
xchg
mov
cmc
ds
xchg
mov
or
adc
jp
xor
repz
(bad)
pop
inc
int3
cli
dec
mov
ins
or
xchg
cli
fimul
push
outs
jmp
and
jmp
loop
scas
mov
ficomp
jno
and
mov
std
pop
mov
push
or
pop
aad
push
outs
adc
sar
ja
cld
stos
adc
inc
xor
or
retf
lahf
js
hlt
mov
xlat
cmp
inc
lea
sbb
stc
push
mov
cld
dec
clc
dec
(bad)
test
cmp
sub
add
inc
xor
imul
ror
sbb
pushf
or
cmp
cmc
mov
(bad)
cmps
fsubr
jg
cmp
loopne
fist
out
jp
(bad)
shl
xchg
ds
jecxz
xchg
jo
(bad)
test
pop
pop
or
pop
lahf
mov
pop
je
int3
pop
je
out
call
fistp
xchg
mov
push
jp
cmps
ins
or
into
and
and
xor
jle
popa
xchg
scas
jns
mov
mov
mov
pusha
test
pusha
jp
or
in
lods
mov
add
cmp
imul
sti
inc
loop
cmps
adc
retf
sahf
iret
js
pop
adc
shl
in
lds
pusha
(bad)
and
pushf
pop
fidivr
int3
dec
loop
pop
hlt
or
imul
pop
xor
jl
adc
pusha
sbb
shrd
push
loope
jmp
hlt
pop
add
xchg
cmp
pusha
or
mov
ins
gs
and
sbb
cmp
inc
daa
popa
test
add
mov
pop
pop
test
and
xor
xor
lea
push
jno
loope
push
jno
pop
je
cmc
mov
(bad)
std
nop
xchg
jae
add
in
jbe
arpl
adc
adc
ja
or
jnp
mov
and
cmp
push
mov
cmp
inc
sub
call
mov
out
enter
bound
jg
sub
not
shl
mov
push
sub
mov
cdq
add
pop
adc
iret
dec
inc
retf
or
xor
and
mov
add
outs
sub
aam
jb
mov
jp
sbb
or
xor
add
cmps
fdivr
sbb
lahf
sar
dec
xchg
inc
gs
test
pop
cwde
outs
je
mov
pshufw
addr16
inc
xor
pop
lods
leave
adc
ins
shl
mov
jl
mov
pop
and
ror
jns
popf
pusha
jnp
mov
jb
jnp
xchg
xchg
sar
or
mov
adc
pop
les
movs
mov
pop
mov
sbb
nop
add
xchg
arpl
ins
cmp
nop
push
mov
push
xchg
pop
or
pop
stc
fisubr
add
pop
mov
push
and
jmp
jnp
bound
sbb
aaa
jb
dec
test
push
nop
pop
or
das
ins
jne
ins
mov
int
out
std
shl
aam
enterw
enter
sbb
in
mov
cmps
aad
push
movs
lods
jae
sbb
cdq
ja
or
jne
cmp
pop
rcr
cmp
add
ins
xor
mov
scas
lahf
adc
add
push
add
mov
add
push
data16
mov
mov
out
call
and
cli
push
push
or
mov
daa
xchg
stc
push
test
clc
pop
das
add
fwait
clc
mov
cmc
pop
mov
clc
sub
xchg
push
lea
sub
ss
gs
jo
fistp
in
(bad)
mov
js
test
xor
outs
mov
out
and
jp
mov
mov
inc
jmp
pop
les
mov
or
jge
mov
pop
js
(bad)
jg
cld
or
(bad)
popa
ins
(bad)
cmps
ja
(bad)
mov
or
in
mov
add
mov
repz
jae
xor
jbe
pop
stos
dec
push
iret
in
imul
ins
jmp
dec
jmp
pusha
loop
jno
cmp
call
inc
adc
sbb
inc
xchg
cwde
or
outs
ss
int
fld
push
jecxz
cmp
int
cmp
fcom
add
stos
xchg
mov
jge
or
imul
outs
or
sub
fisttp
(bad)
and
inc
jg
popa
mov
mov
dec
mov
jg
jle
push
mov
mov
ins
push
ret
push
stos
cmp
xchg
fs
jecxz
sbb
mov
das
dec
xchg
mov
repnz
dec
aam
int3
pop
push
and
movs
inc
ret
push
clc
mov
loopne
and
pop
xor
add
and
or
push
push
lahf
jae
xor
xchg
arpl
into
js
ins
out
sub
rcl
or
ror
xlat
xchg
ret
test
das
pop
xor
cmp
je
push
cs
imul
fidivr
mov
cmp
std
xor
jmp
add
lea
outs
mov
push
mov
sub
push
shr
outs
cdq
add
xor
sub
mov
icebp
mov
push
call
popa
lock
shl
push
push
pop
sub
test
sbb
xchg
lds
pushf
or
add
add
dec
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
