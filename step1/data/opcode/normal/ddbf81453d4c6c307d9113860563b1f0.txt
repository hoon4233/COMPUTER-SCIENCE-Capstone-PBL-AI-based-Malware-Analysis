imul
in
mov
push
push
mov
test
jne
lea
mov
mov
or
(bad)
(bad)
mov
push
push
push
push
call
mov
add
test
je
jle
movzx
or
jmp
mov
sbb
push
push
push
push
dec
and
pop
imul
pop
pop
ret
mov
or
adc
(bad)
fstp
sbb
sar
ror
push
push
mov
jbe
jbe
cmp
outs
pop
imul
pushf
pop
xchg
mov
rcl
push
xor
je
jmp
js
adc
add
jne
sub
mov
rcr
std
lea
and
popa
or
mov
mov
outs
mov
xor
mov
xlat
je
add
add
mov
cmc
jl
cli
add
add
or
xchg
jo
push
mov
fstp
adc
pop
sbb
and
or
jne
test
je
movzx
repz
std
inc
jmp
mov
push
jp
or
push
(bad)
jo
mov
js
jmp
and
and
jo
xchg
cmp
adc
and
push
push
inc
inc
cmp
jp
mov
(bad)
pop
pop
pop
int
dec
lock
ret
ja
sbb
sub
pusha
xor
inc
or
dec
and
enter
and
mov
out
and
cmp
jne
cmp
je
xor
pop
adc
inc
mov
addr16
mov
push
push
cmp
or
inc
add
test
clc
or
dec
add
sbb
cld
mov
push
mov
xor
ds
clc
loope
push
lods
adc
and
inc
or
push
push
pushf
int
add
lock
sbb
jns
das
js
jae
sbb
mov
push
int3
push
lea
mov
jmp
xor
mov
fistp
add
dec
dec
aad
(bad)
fnstsw
mov
sbb
pop
ret
push
xlat
pop
add
or
enter
sub
add
fistp
jl
mov
mov
adc
mov
mov
lea
stos
std
data16
inc
jnp
jl
sub
aas
add
add
div
inc
push
push
call
push
pop
or
shl
ror
js
jmp
mov
xor
lock
int3
add
adc
icebp
xchg
(bad)
(bad)
mov
nop
in
mov
push
mov
cmp
jbe
xor
xchg
mov
and
neg
push
push
fnclex
mul
loopne
ins
push
push
push
es
jmp
cmp
xchg
pop
mov
jbe
adc
mov
test
add
mov
push
inc
push
xor
push
adc
and
pop
mov
pop
ja
add
xor
and
adc
pop
cmp
pop
je
pop
push
dec
(bad)
add
sahf
sbb
in
push
push
and
add
push
adc
sar
inc
add
cld
or
shl
aad
push
setne
xchg
mov
aas
adc
sahf
adc
xor
pop
xchg
repz
pop
and
push
sar
push
cmp
inc
sbb
adc
push
inc
jmp
xor
sub
adc
retf
push
sub
pop
sub
cmps
push
mov
push
push
mov
or
lock
aaa
sub
hlt
mov
stos
jg
lea
inc
push
push
push
in
std
xlat
jecxz
xor
aaa
fs
(bad)
idiv
xchg
dec
retf
je
add
rol
pop
add
add
push
push
cwde
call
popf
test
inc
jo
test
loopne
sub
and
loopne
push
sub
pop
pop
sbb
xor
pop
xadd
out
loope
mov
scas
rol
mov
adc
inc
fsub
popa
pop
cmp
push
gs
push
data16
pop
call
test
inc
add
gs
xchg
sub
mov
mov
arpl
cwde
fidiv
sbb
ror
add
aaa
pushf
push
xor
ret
outs
ret
jbe
fistp
and
pop
cs
mov
mov
scas
cmp
xor
cmp
add
and
push
and
xlat
cmp
xor
cmp
sbb
out
ds
sub
push
imul
clc
das
add
add
sbb
mov
shl
pop
lods
jo
xor
rol
sub
stc
inc
(bad)
ficomp
jl
daa
jb
call
popf
pushw
mov
mov
stos
mov
call
sbb
cli
xchg
add
fimul
cmp
push
sub
sub
or
stc
pop
jbe
or
ror
and
mov
mov
sar
adc
pop
mov
aas
adc
cli
xor
add
inc
adc
push
in
or
push
jns
jne
pop
mov
sub
sahf
scas
popf
add
add
or
push
mov
mov
aas
clc
mov
call
adc
iret
adc
jb
xor
add
in
mov
mov
inc
mov
cmp
mov
jo
inc
mov
or
fsub
push
ret
pop
dec
sub
shr
cld
adc
mov
icebp
and
jmp
sub
push
loop
dec
icebp
cmp
adc
dec
cmp
pop
push
mov
sub
xor
ret
push
push
sub
popf
pop
mov
pushf
mov
inc
dec
pop
push
lea
nop
push
cmp
mov
scas
js
popa
inc
shl
test
cmp
dec
adc
or
cmp
xchg
add
mov
sbb
test
cmp
bsf
fst
jl
sti
loopne
add
mov
sbb
add
leave
cmp
sbb
or
in
leave
and
adc
mov
mov
int
aaa
sar
add
out
outs
mov
sbb
and
mov
aam
cmp
mov
inc
inc
inc
and
mov
mov
or
fadd
sbb
dec
adc
inc
add
mov
mov
push
sub
sub
cli
dec
movzx
add
jo
adc
lds
sbb
xlat
dec
mov
cs
xor
inc
call
mov
adc
xchg
retf
cmp
call
clc
cs
ja
and
sub
xor
mov
dec
shl
mov
jmp
sahf
aam
cmp
cmp
add
repz
lods
ds
sub
add
push
cmp
ds
and
fadd
imul
cmp
jb
mov
stc
mov
sub
and
cld
ja
push
push
fs
out
push
clc
inc
jne
add
mov
add
mov
or
sahf
in
test
or
rcl
call
int3
and
es
movs
imul
aas
xchg
jecxz
fdivp
jmp
mov
mov
enter
sbb
scas
je
aam
pop
arpl
or
mov
push
or
or
jne
pop
mov
xchg
mov
pusha
xor
jmp
call
ds
inc
push
inc
jne
cmp
jne
dec
xor
add
add
dec
inc
cmps
fild
ins
dec
and
inc
sub
bound
(bad)
ds
push
jnp
or
not
mov
add
or
rol
inc
or
(bad)
std
ss
pop
or
mov
jmp
xor
adc
mov
sub
iret
nop
imul
adc
adc
sub
clc
sbb
dec
dec
cmp
jne
sbb
into
(bad)
cmp
and
sbb
sbb
adc
js
and
int3
inc
add
xor
adc
fstp
mov
xchg
cmp
mov
mov
test
cmp
loop
pop
dec
aas
jne
loopne
or
cmp
xlat
cmp
ja
pop
outs
mov
jae
push
mov
es
cmovb
rcr
add
mov
jne
stos
push
mov
(bad)
push
xchg
cmp
pop
setne
in
sbb
jbe
push
push
call
add
ins
in
pop
mov
bound
jle
les
fisttp
or
sbb
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
sbb
sbb
dec
dec
push
push
sbb
sbb
pop
pop
pusha
sbb
sbb
push
or
sub
cmp
push
inc
sbb
jae
outs
and
dec
popa
mov
jmp
and
adc
bound
das
pop
xor
loope
push
mov
sbb
mov
add
test
mov
add
cli
scas
es
add
ret
adc
(bad)
cmp
mov
adc
mov
inc
add
jo
mov
and
sbb
xor
ins
adc
sbb
and
cmp
adc
jo
lea
add
xor
push
mov
push
jbe
bound
or
adc
test
add
std
or
pop
aas
lahf
js
or
rcl
push
mov
adc
sub
push
and
push
mov
je
mov
ds
push
cmp
jb
add
sbb
sub
cmp
or
mov
pusha
ret
pop
sbb
sub
mov
cmp
lea
jmp
pushf
and
add
and
inc
add
add
mov
into
or
mov
mov
push
jb
es
es
pop
lahf
(bad)
jle
push
test
pop
ret
movzx
inc
call
and
cmp
mov
fwait
lods
jbe
pop
cmp
jne
fiadd
xchg
ja
loopne
or
dec
jb
xor
aaa
mov
adc
inc
inc
data16
std
xchg
adc
loope
or
pop
mov
jmp
xor
jo
mov
not
xlat
scas
xchg
call
mov
mov
das
fnstsw
or
cmp
jb
sub
aad
pop
sbb
sbb
mov
fisttp
jns
jg
add
mov
add
xor
loope
or
fucomip
lds
je
in
add
call
rol
or
mov
call
mov
pop
dec
addr16
popa
add
add
je
shl
ss
ucomiss
or
rcl
es
cmp
nop
mov
shr
or
mov
jae
cli
adc
out
mov
adc
sub
inc
push
inc
pushf
nop
ss
or
inc
repnz
push
or
pop
add
enter
mov
enter
cmp
scas
sbb
push
(bad)
jae
test
inc
cmovne
or
ins
(bad)
jge
cmp
jae
push
pop
enter
jmp
adc
shr
leave
jmp
jb
push
add
or
mov
ret
push
adc
scas
cmp
add
pop
inc
aas
adc
sbb
push
mov
or
xor
clc
adc
pusha
jg
mov
(bad)
in
add
inc
adc
push
jbe
test
add
loopne
jne
pop
jg
and
nop
lea
add
xor
jne
jl
ret
cmp
jae
push
or
and
addr16
fidiv
jg
dec
add
push
push
ret
sub
mov
jmp
xor
and
adc
sbb
rol
popf
ret
jg
add
or
cs
sbb
sub
loope
sar
mov
cwde
data16
push
xor
sbb
cmp
je
mov
sbb
sbb
pop
jbe
je
(bad)
mov
or
xor
mov
into
push
lods
lahf
ror
and
add
cli
mov
outs
push
std
movs
pusha
imul
cmp
rcr
jmp
push
push
push
push
imul
cs
aad
mov
jmp
aaa
jo
not
push
cmp
out
ror
push
pop
idiv
jl
add
xchg
push
push
add
inc
ins
sar
les
push
push
mov
sbb
xchg
sbb
adc
pop
mov
add
add
xor
in
dec
cmp
retf
loopne
cld
jo
ss
mov
sub
and
add
clc
xor
jns
fdivr
xor
lds
test
pop
push
xor
xor
push
imul
aas
mov
ins
aas
cwde
fs
push
in
sub
stos
loopne
int3
pop
add
ds
(bad)
or
sbb
pop
or
mov
mov
call
stos
pop
push
or
add
icebp
aaa
add
jno
push
stos
pop
jo
xor
ret
aaa
movs
xchg
sbb
push
ins
or
jae
neg
lahf
add
add
cld
ror
push
sub
sbb
push
push
in
or
or
push
icebp
push
mov
(bad)
outs
in
ror
push
lea
mov
inc
mov
push
sub
jne
in
(bad)
hlt
mov
ret
ret
lock
(bad)
call
sbb
jg
mov
sbb
push
add
push
add
inc
adc
out
sub
aad
add
js
mov
call
xchg
mov
xor
push
pop
mov
push
pop
dec
inc
neg
sbb
push
add
or
push
dec
pop
lods
and
and
xor
out
leave
and
inc
adc
push
mov
add
lea
jo
sub
ror
imul
push
or
add
dec
ss
loopne
adc
sbb
ins
idiv
inc
(bad)
dec
xchg
mov
push
inc
(bad)
xor
push
fmul
jmp
adc
mov
or
lea
fwait
sti
(bad)
mov
mov
mov
adc
pusha
mov
test
add
jmp
jne
jge
sbb
lock
cmp
pop
fld
mov
mov
adc
(bad)
cmp
es
mov
lea
jge
xchg
leave
xor
mov
mov
fmul
mov
jg
dec
out
cmp
sbb
mov
scas
js
xchg
arpl
call
mov
add
mov
mov
cmp
je
pop
jne
(bad)
(bad)
mov
retf
movzx
and
add
or
push
pop
movs
cmp
retf
je
mov
jmp
cli
in
je
int
push
mov
jno
sti
jg
mov
add
pop
pop
push
sub
sub
pop
mov
push
jns
push
test
(bad)
(bad)
push
and
dec
inc
or
xlat
mov
dec
sub
aad
xor
mov
scas
pop
data16
cmp
jecxz
cmps
(bad)
pusha
adc
fild
rcl
jmp
xchg
sbb
clc
sub
jne
jg
mov
lea
fimul
lods
cmp
push
shl
xor
jg
add
cmp
aam
(bad)
mov
repz
xor
add
xor
loope
out
mov
mov
add
outs
fcom
mov
cmp
call
sub
rol
(bad)
iret
sbb
and
call
jbe
int3
sbb
push
rcr
add
add
jle
and
or
xchg
mov
inc
xor
cs
add
dec
inc
int3
adc
sar
ja
mov
cmps
imul
jg
sti
pop
add
fs
cs
adc
add
fs
nop
sar
pusha
add
adc
fist
xor
xor
mov
push
sbb
cld
and
shl
push
test
jb
fs
jmp
scas
push
jns
adc
dec
leave
or
rcr
push
cmp
pushaw
xor
mov
fcmovb
data16
clc
and
ss
push
push
sub
(bad)
shl
xor
shl
call
jns
loop
test
adc
push
je
je
dec
cmc
pop
jl
or
xor
add
sbb
sbb
shl
push
pop
clc
and
ret
mov
push
dec
jecxz
int3
shr
lahf
mov
xchg
add
cwde
cmp
mov
outs
mov
pushf
es
bound
push
pop
pop
sbb
imul
sbb
sub
push
add
stc
mov
cmp
neg
cmp
movs
and
xor
push
es
ret
xor
dec
sbb
mov
je
adc
or
jbe
and
pusha
or
mov
sahf
xor
adc
push
xchg
jns
adc
add
adc
and
mov
dec
mov
daa
push
dec
out
pop
push
ror
sar
xchg
push
and
mov
xchg
lea
mov
inc
inc
rol
jns
mov
stos
and
jo
add
lods
sub
push
or
test
jo
shl
aad
xchg
jecxz
sbb
test
add
enter
and
cdq
popa
inc
push
add
loopne
test
aam
arpl
mov
pop
add
bound
call
push
and
aaa
movs
rol
in
lods
sbb
cmovne
icebp
cmps
add
lock
xor
xchg
ret
call
add
(bad)
mov
shr
inc
jbe
shr
enter
push
loopne
std
mov
mov
add
daa
stos
sub
mov
mov
dec
xor
sbb
sbb
scas
xlat
mov
outs
pop
mov
stos
adc
pusha
div
ins
sub
aas
add
leave
dec
dec
or
test
mov
push
(bad)
add
or
or
or
push
rcr
sub
adc
dec
stc
in
popf
xlat
bound
sbb
and
nop
addr16
push
clc
mov
push
(bad)
(bad)
cmps
cmp
in
hlt
(bad)
hlt
das
imul
(bad)
push
das
pop
sbb
inc
pushf
popf
(bad)
xchg
cmp
ins
jmp
icebp
mov
or
add
add
adc
push
test
(bad)
xchg
inc
push
push
loopne
push
fld
push
sub
adc
or
mov
adc
sub
sub
sahf
add
xor
dec
mov
inc
cs
pop
add
js
and
mov
inc
(bad)
icebp
lahf
enter
sub
adc
fdiv
or
test
aas
rcr
call
mov
push
jne
mov
mov
rol
loopne
test
or
fnstsw
mov
push
push
movs
pop
lock
cmp
(bad)
fiadd
test
dec
cwde
or
mov
pop
mov
rol
lods
lods
jmp
(bad)
inc
ret
or
pop
mov
pop
sbb
or
or
pushf
lods
cmps
push
cmp
dec
push
mov
mov
mov
mov
push
popa
movs
pop
nop
xchg
dec
xchg
sub
mov
sub
dec
movs
adc
sbb
sbb
pushf
lea
arpl
adc
pop
mov
ins
mov
aas
mov
dec
add
push
lods
jle
pop
dec
add
mov
xchg
js
pop
and
xor
mov
jne
jnp
mov
xchg
test
inc
mov
push
jmp
jmp
inc
imul
test
data16
mov
jge
(bad)
jmp
jo
leave
push
outs
push
retf
sub
mov
movs
mov
pushf
mov
xor
pop
movs
and
xor
pop
test
or
push
loope
pop
out
push
mov
inc
mov
inc
and
add
cdq
add
add
cmp
sub
fmul
dec
or
enter
jns
bound
add
cmp
je
nop
mov
or
fsub
(bad)
fsubr
das
sahf
mov
or
daa
es
jl
in
xchg
nop
call
jp
mov
mov
daa
int3
or
loopne
xlat
inc
sbb
outs
pop
ins
push
or
gs
pop
les
hlt
cld
mov
add
or
popf
adc
xor
test
or
pop
hlt
push
je
and
push
or
cmp
mov
cdq
inc
mov
xchg
push
adc
cmp
sahf
cs
sub
(bad)
jmp
fsub
mov
add
sbb
mov
ins
dec
ret
and
mov
sbb
cmp
add
iret
xchg
retf
adc
loop
lahf
dec
mov
arpl
or
ret
clc
jnp
pop
and
sub
push
aaa
sbb
pop
push
outs
push
push
call
jge
xchg
adc
cmp
cwde
call
or
inc
inc
push
add
pavgb
in
jmp
fcom
jno
data16
cld
xchg
sub
dec
push
or
lahf
pop
lods
aaa
sbb
push
mov
imul
push
add
pop
push
dec
cld
aam
sbb
push
ja
jmp
sbb
pop
(bad)
jge
add
popf
xchg
or
pop
cmp
mov
sbb
adc
and
mov
dec
cmp
pop
cmp
je
xor
and
or
jne
or
add
mov
inc
pop
stc
jne
and
cmps
pop
in
adc
dec
add
mov
or
shr
inc
add
out
jne
dec
lea
add
pop
icebp
dec
add
rcl
push
lea
mov
mov
stos
icebp
out
mov
sub
add
ret
jne
out
ss
xchg
jmp
xor
pop
iret
dec
or
test
in
dec
lds
and
test
hlt
pop
imul
stos
bound
or
push
xor
push
scas
enter
sbb
mov
mov
push
mov
ss
out
ss
jmp
sbb
add
movzx
cmp
ja
push
lods
sbb
sti
dec
lock
cmova
cmp
push
add
adc
cmp
or
push
cli
aam
pusha
mov
(bad)
(bad)
in
sbb
mov
push
retf
lea
sub
sub
cs
dec
loopne
imul
sar
dec
jne
mov
adc
call
cmps
adc
adc
mov
cmp
jbe
inc
dec
dec
cmp
pop
adc
dec
(bad)
jp
loopne
inc
and
sbb
(bad)
mov
sahf
in
pop
sbb
fiadd
(bad)
pop
push
add
lea
mov
dec
and
sbb
pop
out
add
sub
test
push
jns
add
retf
or
adc
pop
in
jb
and
push
pop
lods
or
jmp
xchg
mov
cli
push
sbb
sbb
or
out
sub
lock
es
mov
pop
dec
daa
xor
rcr
push
cmp
js
arpl
scas
ret
ins
add
add
arpl
xor
mov
mov
add
and
scas
add
sub
cmps
xor
jne
imul
xor
dec
pusha
mov
into
add
ins
imul
cmp
add
ror
jmp
hlt
adc
repz
add
jne
push
and
add
add
add
or
jnp
mov
movs
add
lock
outs
adc
push
out
mov
and
pushf
add
cmp
pop
out
aad
adc
mov
pushf
add
mov
add
or
or
cwde
mov
loopne
inc
outs
add
add
jl
adc
xor
fdivr
and
aad
bound
pushf
jbe
sbb
push
pop
jns
xor
mov
ins
add
dec
dec
jb
cmp
sbb
call
sbb
jbe
ror
in
dec
(bad)
mov
push
push
sbb
push
loope
cmp
and
sub
rol
rol
add
mov
lahf
ret
pop
mov
push
lea
cld
(bad)
loopne
jg
(bad)
pop
je
fidivr
adc
dec
cmp
je
or
ds
and
ret
xor
inc
mov
cmp
add
push
or
(bad)
push
mov
and
jne
dec
xchg
adc
xchg
shr
mov
xchg
ds
je
xchg
mov
into
dec
lds
ja
push
mov
shl
xor
popf
xor
(bad)
and
arpl
and
xchg
fwait
dec
push
xchg
xor
add
ret
mov
ss
mov
sub
mov
sub
mov
jbe
mov
retf
mov
lea
ror
jne
icebp
rol
cs
mov
mov
sub
fcomp
clc
sub
push
inc
push
mov
js
pop
test
cmp
ins
call
(bad)
mov
mov
call
add
or
shr
sbb
jge
into
(bad)
mov
adc
push
ds
inc
int
call
and
rcr
sub
sbb
int
xor
cmp
xor
ins
sub
arpl
ret
pop
pop
imul
sahf
ror
sbb
dec
dec
cmps
fs
cmps
dec
dec
dec
inc
cmps
fs
dec
dec
leave
leave
xor
jnp
adc
sub
stos
mov
pop
ins
pusha
fs
dec
cmp
xor
sbb
or
neg
and
fisub
sbb
xor
popf
das
mov
ja
sbb
push
xor
inc
pop
into
xchg
vmovsd
shr
jo
pushf
imul
icebp
jle
xchg
jmp
aas
xor
mov
sub
xchg
dec
fsub
inc
mov
inc
inc
(bad)
ret
jl
aam
out
push
sahf
push
jmp
fisub
jmp
push
mov
test
mov
cmp
retf
and
hlt
pop
push
mov
shl
xor
pop
push
sbb
sbb
mov
dec
or
jg
mov
cmps
mov
lahf
adc
adc
mov
adc
mov
dec
fadd
in
add
in
add
sti
ficomp
bound
shl
cmc
sbb
mov
or
mov
movs
mov
mov
(bad)
sbb
push
adc
mov
pop
fadd
ins
or
mov
ret
mov
cmp
and
xchg
mov
inc
mov
cmp
jb
jmp
mov
pop
outs
loope
push
or
outs
into
scas
push
test
mov
jge
pusha
push
adc
add
(bad)
into
jne
ins
adc
push
pop
call
test
and
push
jnp
jl
adc
icebp
cmp
mov
inc
repnz
mov
(bad)
inc
xor
jne
add
pop
rol
add
dec
loopne
sar
inc
lods
es
or
or
lock
sbb
lahf
pushf
pop
arpl
cmp
rol
ss
push
push
jp
or
inc
ins
push
pop
sbb
mov
ror
fisttp
and
pusha
push
in
lea
or
retf
enter
je
or
mov
je
mov
mov
ins
mov
inc
adc
ds
enter
bound
call
mov
mov
mov
cmp
icebp
cmp
jne
les
inc
xchg
mov
sahf
jne
dec
dec
adc
fidiv
je
ror
in
sbb
or
pop
fcom
lock
inc
mov
and
add
inc
es
dec
pop
js
sbb
dec
mov
mov
cmp
sbb
into
lock
in
push
and
push
inc
in
cmp
mov
mov
mov
dec
cli
ins
cld
mov
cmp
jae
mov
dec
test
ja
test
ds
cmp
or
jp
sub
mov
dec
or
and
push
mov
cs
xchg
push
and
inc
pop
xor
loopne
fldenv
into
mov
pop
jle
xor
push
add
fsubp
jmp
xor
mov
xor
pop
outs
mov
repnz
xor
push
or
jle
push
cdq
mov
dec
or
jp
nop
mov
cmp
leave
cmp
mov
and
pop
hlt
add
(bad)
enter
adc
adc
int
aas
pusha
xor
inc
sbb
or
and
js
in
mov
or
cmps
out
xor
aas
mov
loope
js
call
ds
add
xchg
or
dec
lock
data16
pop
enter
push
(bad)
in
fisttp
test
inc
loopne
cwde
push
lods
and
pushf
sahf
loope
add
and
add
(bad)
leave
push
xchg
cli
jge
mov
out
arpl
push
bound
jb
rcl
fs
adc
les
xchg
out
(bad)
sbb
pop
imul
and
jno
push
imul
nop
lods
sbb
not
jb
inc
mov
fwait
cld
cdq
repz
sbb
(bad)
mov
jb
into
les
pop
rcl
int3
pop
out
sbb
dec
jl
pop
adc
sahf
mov
daa
pop
add
rcr
imul
mov
lds
and
ret
test
mov
adc
or
test
repz
jmp
jp
lea
add
leave
dec
sbb
add
rcr
and
and
add
loope
inc
inc
adc
movs
inc
(bad)
adc
dec
and
jmp
loopne
shl
jmp
jns
pop
mov
fidiv
adc
and
test
outs
rol
call
sub
add
repnz
mov
inc
add
fs
aas
push
mov
adc
shr
ret
adc
fbld
mov
gs
or
sbb
xchg
push
push
add
lods
(bad)
push
add
test
sbb
in
and
(bad)
dec
or
add
pop
cmp
je
xor
inc
(bad)
jg
daa
cmp
mov
test
add
or
jle
sbb
mov
sbb
rcl
adc
jno
push
add
and
push
int3
or
jmp
mov
mov
inc
bound
call
add
loopne
sbb
adc
test
sbb
add
sub
(bad)
rol
lock
lock
iret
ss
(bad)
pusha
fstp
das
push
push
lods
fstp
push
push
adc
sub
ss
or
sti
jg
sbb
popa
adc
scas
ss
sti
and
pop
rol
(bad)
mov
test
js
mov
je
or
in
in
sbb
in
cwde
lods
mov
enter
cmp
xchg
add
fs
add
test
js
bound
inc
pop
or
mov
repnz
hlt
test
add
sub
fcom
call
inc
ins
pop
call
(bad)
push
les
sub
call
jns
popf
inc
pop
or
add
out
push
fdiv
sbb
aas
daa
loope
test
fucomi
or
cwde
out
push
push
mov
inc
cmps
hlt
aas
push
ret
add
mov
pop
jmp
adc
push
add
push
sar
add
das
loop
(bad)
jg
push
push
jecxz
mov
mov
outs
mov
mov
sub
sbb
sub
jb
nop
push
mov
adc
cld
je
mov
cmp
push
adc
je
mov
inc
inc
sbb
xor
aaa
int
adc
push
adc
cli
fild
jne
inc
lea
add
push
pop
mov
clc
sahf
leave
mov
jecxz
outs
imul
es
and
and
and
mov
add
ja
mov
scas
hlt
jb
cs
lar
pop
push
lahf
add
daa
or
leave
add
imul
mov
jmp
xchg
xchg
gs
mov
cmp
cwde
aam
mov
fild
push
adc
loop
jl
or
ins
addr16
fmul
ret
or
push
pop
gs
pop
xor
aas
mov
push
inc
stos
jmp
adc
aad
push
dec
sbb
pop
mov
jne
jmp
in
mov
mov
into
jae
add
add
fld
repz
mov
push
mov
mov
xor
sbb
and
mov
and
push
or
sub
in
push
add
xor
popa
sbb
lock
(bad)
js
push
xor
fisub
add
fild
daa
ss
adc
inc
loopne
sbb
lock
inc
movs
stc
sbb
(bad)
xor
pop
pop
inc
loopne
mov
ret
ja
mov
or
enter
loop
into
pop
mov
mov
adc
sar
inc
mov
lea
stos
xor
movs
pop
inc
pusha
out
retf
jge
(bad)
jns
adc
push
cdq
mov
(bad)
into
fisttp
sbb
mov
push
mov
mov
test
dec
xchg
and
test
in
nop
pop
(bad)
pusha
jno
sub
xor
xor
ret
loop
pop
mov
cmp
xchg
inc
push
mov
add
or
shr
out
icebp
sbb
push
push
jbe
fwait
jne
pop
out
mov
sbb
sub
inc
rcr
or
push
push
push
aam
sbb
ficom
data16
fistp
push
and
push
fs
push
sbb
ins
xor
mov
or
jne
dec
xor
ret
out
xchg
or
xor
mov
aas
repnz
pop
aad
sub
and
jno
xchg
dec
inc
stc
push
push
stos
cmp
cmp
popf
sbb
push
or
pop
dec
mov
push
loope
dec
add
push
sub
adc
ss
cmp
rcl
je
je
jne
inc
loopne
jae
push
mov
(bad)
jmp
push
sbb
fs
pop
lahf
cdq
fs
lock
adc
mov
and
or
sbb
or
addr16
sub
adc
call
loope
(bad)
js
test
xor
push
adc
pop
pop
or
mov
in
push
sub
push
clc
imul
lea
neg
mov
push
inc
int
push
push
shr
push
dec
or
mov
inc
sub
push
jbe
jo
inc
cld
mov
leave
js
lock
ja
pop
dec
add
stos
and
mov
jb
xchg
push
jb
jne
add
iret
sbb
pop
shl
mov
ret
repnz
ror
(bad)
push
xchg
inc
mov
sti
cmp
and
adc
sub
fnstsw
mov
sbb
inc
inc
(bad)
out
push
sub
push
popa
clc
jo
push
clc
jge
mov
add
pop
das
add
(bad)
test
adc
and
ds
xor
jmp
fidivr
cmp
mov
inc
(bad)
ffree
inc
dec
xchg
dec
lea
rcl
hlt
xchg
call
mov
jp
hlt
je
inc
or
pop
adc
jmp
push
iret
jo
movs
out
xor
rcl
or
mov
push
call
mov
loopne
dec
add
mov
mov
pop
sbb
xchg
in
sub
popa
add
pop
mov
pushf
push
and
push
push
adc
add
push
pop
es
or
adc
add
adc
sub
cmp
loop
mov
or
in
mov
mov
sbb
lock
nop
sub
pop
mov
jle
mov
add
cwde
fsub
add
sbb
aad
xor
inc
(bad)
push
or
shr
inc
or
shr
fild
icebp
push
ja
int
test
es
(bad)
loopne
sbb
dec
push
out
test
ja
clc
daa
and
push
push
cmp
xlat
mov
jne
jmp
sub
out
push
mov
cmp
rcr
punpckhbw
outs
aaa
push
test
push
hlt
daa
pop
retf
xchg
and
or
pop
or
or
sbb
and
inc
adc
clc
and
in
cdq
and
and
adc
lods
test
jmp
or
outs
adc
test
scas
and
or
dec
sub
and
xlat
or
jne
cmp
adc
or
mov
cmovl
dec
int
fst
jmp
xor
dec
jno
(bad)
sbb
mov
cmp
js
inc
repnz
push
hlt
or
in
cmp
mov
push
jo
sbb
push
nop
mov
mov
add
pop
add
js
cmp
jne
inc
cmp
jl
lock
fld
hlt
cmp
mov
push
enter
add
sub
inc
lea
pushf
rol
lahf
adc
add
mov
sub
test
mov
ret
into
stos
int
or
push
mov
jle
leave
out
pop
in
sbb
and
add
and
in
and
push
je
dec
data16
mov
ja
pusha
imul
loope
mov
cli
xchg
retf
or
jle
pop
lea
mov
mov
fucomp
repz
jle
push
mov
cmps
fmul
mov
in
xchg
loopne
in
loopne
mov
xchg
pop
mov
call
pop
or
mov
add
test
cmp
mov
sete
sub
mov
mov
xor
or
push
adc
fist
adc
cmps
add
mov
dec
lahf
inc
pusha
jg
pop
mul
pop
xor
pop
jnp
or
lahf
push
ins
sub
dec
pop
popf
std
pop
mov
jmp
(bad)
push
push
leave
inc
and
rep
ins
pop
pop
lock
dec
(bad)
jmp
sub
dec
jbe
data16
mov
jmp
xor
clc
(bad)
xchg
sti
add
inc
clc
(bad)
adc
iret
xor
xor
es
in
rol
fisubr
xor
push
inc
fs
cmp
aaa
int3
add
sar
rol
rol
js
ret
es
push
mov
sbb
xor
pushf
in
test
sbb
adc
ja
out
xchg
inc
aad
push
pop
jl
out
push
jle
(bad)
in
addr16
iret
shl
inc
fwait
add
or
int3
dec
and
add
add
add
push
sub
ror
pop
js
mov
enter
and
pop
nop
and
push
jl
call
mov
popf
dec
ror
and
test
push
adc
popa
lods
sub
ror
mov
call
mov
lea
push
pop
push
cmp
outs
rcl
(bad)
push
cmp
add
adc
movzx
push
cmps
sbb
div
ja
adc
adc
xchg
in
xor
pusha
cld
push
or
mov
add
and
adc
movs
push
in
dec
leave
dec
dec
dec
repnz
test
mov
or
adc
push
pop
pop
mov
rcl
and
mov
hlt
js
add
cmp
fmul
or
repz
lock
fst
pop
mov
js
mov
or
inc
out
mov
add
aaa
push
and
neg
adc
pop
dec
push
xor
clc
cmps
and
push
and
mov
pop
jmp
dec
push
and
push
xor
push
or
pop
loop
xor
add
out
adc
cmp
xchg
loope
adc
js
push
rcl
mov
movs
adc
cmp
xchg
and
call
js
call
sub
pop
inc
and
or
rcl
and
pop
add
int
or
add
xor
iret
sti
xchg
xor
or
push
or
adc
das
ins
mov
icebp
pop
xlat
(bad)
nop
dec
mov
mov
or
test
sbb
add
lea
cmp
sbb
ins
xor
sahf
mov
pop
and
sbb
or
mov
and
adc
pushw
sub
sbb
or
cmp
nop
cmps
mov
movs
jae
push
xor
loopne
xor
fcom
sbb
xor
(bad)
add
fstp
ret
popf
pop
jne
inc
and
pop
push
push
push
add
push
(bad)
fiadd
pop
mov
mov
cmp
shl
cmp
je
add
sub
out
sbb
mov
mov
and
cmp
push
jnp
add
adc
repnz
mov
les
inc
mov
dec
adc
pop
add
out
inc
mov
jl
push
push
add
cmp
sbb
test
imul
sar
movups
inc
hlt
shr
fcom
sar
inc
repz
sub
pop
loope
(bad)
jg
inc
sub
add
ret
or
fcmovb
add
dec
cmp
fdiv
in
ret
jmp
lock
stc
(bad)
ror
jo
jl
and
push
sub
sub
ret
sti
and
push
in
mov
int3
cmp
ret
mov
into
and
bound
inc
aaa
call
sti
hlt
jg
aam
add
add
add
push
sbb
in
dec
inc
jne
jb
push
fwait
out
jmp
fdivr
ror
push
js
push
imul
inc
inc
mov
lea
add
mov
xor
data16
push
push
stc
sbb
mov
lea
lds
push
sub
daa
cmps
xchg
pop
sbb
aaa
jge
add
and
and
and
dec
add
adc
xchg
loopne
jnp
and
push
(bad)
lods
retf
xor
sbb
sbb
rcl
imul
mov
inc
pop
retf
adc
adc
lock
and
add
cdq
lea
push
inc
sbb
mov
je
mov
cmp
jne
inc
or
xchg
jo
and
add
cwde
jns
sub
dec
xchg
out
add
cmp
and
inc
jo
sub
cmp
data16
ja
push
call
or
mov
jl
ret
call
add
shl
add
mov
cmp
inc
aam
xchg
mov
sub
mov
pop
push
sbb
and
shl
in
or
inc
mov
inc
xor
daa
aas
clc
mov
cmp
cwde
pop
or
pop
cmp
add
inc
sbb
lods
inc
call
sbb
pop
ror
inc
iret
dec
cmp
aam
rol
or
retf
sub
and
cmp
mov
mov
xor
imul
sub
adc
shr
clc
rcl
push
add
ins
ss
dec
mov
mov
pop
adc
or
pop
mov
jmp
ficomp
push
inc
push
nop
and
div
add
dec
xor
cmp
dec
and
xchg
adc
push
or
mov
push
inc
and
test
inc
sbb
sub
xor
push
xchg
mov
enter
or
shl
mov
lea
cmp
inc
push
mov
adc
hlt
test
lock
add
mov
sub
push
cmp
arpl
dec
repz
pop
mov
xor
and
push
rcl
inc
xor
mov
adc
pop
test
pop
ret
add
fld
ficom
xchg
inc
cmp
add
int3
push
inc
add
mov
push
pop
add
ds
xor
scas
lds
sub
xor
loopne
aam
cmp
mov
push
fnstenv
dec
dec
clc
mov
mov
loop
mov
sbb
xor
das
cmp
mov
push
pop
jmp
cmp
aad
aas
or
xchg
movs
mov
cmp
adc
push
mov
xor
push
or
daa
jmp
ret
pop
jmp
push
mov
cmps
xor
fs
pop
add
xor
enter
sar
mov
rcr
loopne
jmp
add
test
add
or
push
jb
add
and
and
cmp
and
fiadd
ret
or
xchg
mov
xor
or
xchg
mov
repz
or
cmp
adc
mov
add
fadd
scas
jbe
inc
xchg
sbb
sub
xor
mov
leave
imul
push
push
mov
push
movs
jns
adc
enter
daa
fistp
and
icebp
test
push
xor
xor
add
div
cmp
jle
dec
in
cmp
std
add
add
sar
sbb
scas
cmc
jae
in
std
mov
xchg
pop
jne
jmp
cmp
mov
mov
add
mov
add
mov
jg
cwde
dec
add
pcmpeqb
call
inc
add
not
sbb
mov
bound
sbb
popa
gs
imul
inc
loope
loopne
out
xor
out
lods
loope
sahf
mov
push
push
inc
mov
sub
pop
out
movs
pop
into
push
inc
loop
(bad)
sbb
(bad)
mov
push
push
enter
popf
inc
jge
mov
or
jle
jno
adc
xor
inc
test
pop
xchg
inc
sahf
enter
mov
xor
push
inc
repnz
or
call
popf
pop
mov
movs
push
jecxz
mov
jge
js
rol
or
aaa
aaa
jne
or
das
hlt
arpl
cld
or
enter
add
ds
ins
adc
sbb
pop
nop
test
xchg
push
aaa
sbb
jne
jo
pop
or
adc
and
and
gs
data16
cmp
mov
xchg
sub
shr
nop
dec
adc
jle
outs
jns
popf
xor
mov
xchg
ret
xchg
dec
dec
or
ror
inc
in
sbb
rol
xor
push
cmp
in
mov
dec
aaa
repnz
sbb
and
or
into
dec
pusha
addr16
sub
int3
sbb
push
icebp
dec
ret
dec
fucomp
push
push
or
sbb
push
dec
sbb
jmp
mov
sub
in
sbb
je
int
xchg
in
rcl
fisub
jne
push
aam
icebp
adc
ins
mov
dec
mov
leave
test
sub
sbb
(bad)
cli
sbb
rcr
ds
dec
adc
pop
dec
mov
and
xor
ins
or
dec
lods
ror
jo
iret
cmp
fmulp
fadd
aam
das
add
jecxz
push
mov
into
cmps
adc
mov
push
pmulhw
repnz
xor
xor
pop
add
or
xchg
sahf
outs
icebp
xchg
ret
or
or
js
add
fsub
sti
and
inc
nop
sub
in
daa
rol
xor
div
push
test
pop
movs
add
push
or
xor
(bad)
or
dec
add
cli
sahf
idiv
pop
mov
mov
xor
mov
push
or
push
or
popf
mov
aad
pop
(bad)
ret
std
cmp
jle
int3
mov
test
fdivr
ja
data16
fisttp
mov
push
(bad)
mov
sbb
dec
push
test
jne
dec
jle
cmp
mov
je
xchg
sbb
nop
out
addr16
cld
adc
pop
dec
add
and
pop
push
outs
aas
xor
mov
xor
rol
ss
mov
and
int3
pop
rol
scas
mov
repnz
sbb
jae
test
cld
sbb
mov
imul
(bad)
aaa
je
xor
in
cdq
mov
pop
jae
cmp
add
sbb
out
pushf
das
xor
jl
xor
cmp
pop
ss
adc
adc
sbb
xlat
popf
and
cmp
dec
cld
addr16
or
clc
inc
and
call
add
rcl
jmp
inc
jmp
mov
add
(bad)
aam
test
jnp
inc
and
daa
xor
jg
daa
mov
push
push
inc
inc
daa
lock
and
dec
and
jne
dec
or
nop
cs
ret
enter
jmp
out
push
xchg
jo
inc
xchg
sub
sub
or
pop
add
xor
neg
xchg
mov
mov
aam
adc
push
(bad)
jg
add
sub
jl
je
je
add
push
cmp
sub
sub
adc
or
and
cmps
add
cmp
sbb
sbb
test
jo
mov
jbe
cmps
out
jo
ins
es
add
mov
or
adc
repz
push
sbb
push
adc
call
push
add
ds
push
imul
test
add
or
jl
pop
js
inc
push
loop
push
das
pusha
inc
xor
add
sub
add
add
ret
or
adc
jg
cmc
mov
jne
inc
jmp
sbb
xchg
rol
and
jo
xchg
inc
cmp
and
add
repz
xor
jns
repz
sub
and
adc
dec
add
cmp
jne
pop
je
push
cmps
lock
jl
cmp
xlat
cli
and
xor
sbb
pop
mov
movs
and
stos
inc
xor
int
push
jo
mov
xchg
mov
xlat
or
jg
adc
add
pop
pop
jecxz
sub
mov
mov
enter
test
sti
push
fstp
stc
sbb
mov
add
stos
sub
pop
xor
daa
nop
push
adc
jne
xor
aad
rcr
push
jne
pop
imul
(bad)
add
mov
jle
inc
mov
push
push
push
inc
mov
imul
cmp
pop
aam
pop
add
adc
scas
cmp
mov
ret
jne
ins
ins
adc
cmp
adc
in
test
add
aas
jle
dec
mov
sub
sub
out
dec
and
push
cmps
cdq
rcl
jl
movzx
(bad)
adc
les
call
inc
sbb
ror
test
cmp
and
(bad)
or
aas
fcmovnbe
mov
pushf
xor
add
inc
sub
mov
push
push
push
lea
pop
pusha
sub
fdivr
and
repnz
pop
xlat
add
fldenv
adc
pop
fcomp
out
call
imul
mov
inc
add
push
mov
mov
and
mov
ss
xchg
(bad)
cmp
inc
shl
jo
dec
cmp
ss
(bad)
mov
je
adc
in
push
stc
mov
push
push
and
xchg
mov
sbb
pop
mov
fwait
(bad)
mov
das
adc
push
push
jmp
mov
loope
jmp
cld
and
popa
popf
push
sahf
mov
push
push
dec
cmp
push
sbb
mov
mov
lods
push
or
and
mov
fwait
out
bnd
sub
xchg
aam
mov
push
cmc
pop
fcomp
mov
jp
test
je
and
jns
push
dec
jbe
fchs
dec
push
jnp
push
(bad)
sbb
test
or
ror
xor
les
popa
shl
test
gs
rcpps
jnp
retf
sbb
stos
sar
jo
movs
pop
loope
ds
mov
push
adc
adc
lods
mov
sbb
pop
call
mov
pop
mov
jne
loop
jnp
sti
ins
or
mov
js
and
dec
xchg
sbb
xchg
neg
jae
push
add
fnstcw
jmp
out
int3
cmp
xlat
add
push
(bad)
mov
sub
cli
mov
jne
sub
scas
sahf
cmp
adc
inc
icebp
adc
mov
sub
add
push
stc
pop
hlt
or
and
or
mov
xor
adc
xor
push
fdiv
inc
mov
push
push
test
adc
xchg
mov
push
sar
sbb
mov
jge
test
sar
push
add
jmp
ret
xchg
inc
fiadd
jmp
repz
add
push
or
mov
or
or
xor
out
sub
push
inc
js
mov
(bad)
int3
dec
cmp
fist
and
fdivr
pop
or
outs
scas
cmp
dec
pusha
enter
push
imul
pop
stc
xor
pop
daa
mov
push
xor
push
setp
leave
mov
xor
push
arpl
inc
push
movs
pusha
inc
sbb
push
and
mov
out
dec
xchg
out
add
jnp
add
adc
jp
dec
xchg
jge
mov
or
and
xchg
add
inc
push
mov
loop
cmc
(bad)
in
pop
pop
je
push
push
neg
cmp
repnz
add
push
aas
retf
(bad)
js
push
dec
cmp
enter
jmp
push
pop
push
into
mov
push
pop
and
sbb
leave
inc
mov
or
dec
sub
fist
pusha
ffree
mov
nop
imul
daa
inc
pushf
push
or
adc
jno
adc
dec
and
sbb
pop
xor
aam
loopne
cmp
retf
xor
inc
add
lock
push
shl
aas
mov
jo
xor
sub
pop
sbb
ds
fdivr
mov
jo
(bad)
push
adc
lea
(bad)
or
adc
dec
sbb
inc
push
mov
mov
repnz
mov
or
cmp
inc
(bad)
cmp
je
shl
(bad)
fdiv
movs
jnp
pop
xor
add
sti
gs
sti
pop
imul
mov
inc
clc
jmp
mov
popa
out
shl
mov
jmp
bound
call
push
int3
(bad)
push
shl
add
mov
lods
mov
dec
cld
mov
mov
pop
je
sub
pusha
leave
and
jns
ret
int3
rcl
scas
(bad)
or
mov
stos
jge
push
push
pop
ja
add
lea
mov
xor
xor
pushf
cmp
push
data16
mov
inc
adc
ror
push
and
dec
les
enter
repz
cmp
cmp
mov
ins
adc
and
xchg
push
ret
pop
push
cmp
(bad)
(bad)
test
xor
ja
jno
and
out
mov
inc
and
sbb
les
xor
xchg
(bad)
mov
pushf
add
adc
pop
sbb
in
jo
add
pop
add
push
dec
cmps
xchg
and
in
stos
push
pop
rcr
push
xor
sahf
fild
push
and
(bad)
adc
or
xor
out
pusha
stos
lods
jnp
sti
je
pop
sbb
or
push
add
pop
cdq
pop
push
(bad)
lock
sub
inc
xor
enter
xor
sub
sub
pop
cmp
pop
nop
mov
retf
push
lea
xchg
clc
pop
mov
dec
cmp
out
sub
cmp
mov
jb
mov
inc
adc
dec
ins
inc
push
cmp
pop
in
add
push
add
dec
cld
sub
cmp
jbe
imul
and
shl
sbb
push
cmp
loopne
loopne
cmp
mov
jecxz
inc
jecxz
fisttp
dec
mov
adc
cmp
cmovb
mul
rol
in
push
sub
adc
dec
pop
cmp
jae
or
pop
jbe
lock
fsubr
or
enter
dec
xor
into
(bad)
loopne
mov
push
push
xchg
mov
pop
rol
(bad)
cmp
retf
push
cs
pop
dec
int
adc
dec
push
or
add
push
sub
scas
pop
push
add
stc
fnstenv
add
fadd
and
fcom
add
xchg
pop
pop
dec
add
and
inc
pop
imul
xchg
fcom
xchg
mov
and
fild
mov
sbb
gs
pop
mov
mov
jae
jnp
shl
mov
sub
sbb
retf
jne
push
inc
push
mov
enter
ins
lea
jns
ins
sbb
mov
bound
and
addr16
mov
jnp
cmps
ffree
adc
mov
mov
jge
mov
mov
add
dec
inc
push
add
lahf
js
mov
mul
test
pop
xor
xchg
enter
mov
push
sbb
sub
add
xor
add
inc
cwde
mov
pop
sub
fsub
pop
ret
inc
cmp
test
mov
out
movs
add
dec
add
push
out
sbb
sbb
sbb
push
mov
xchg
(bad)
imul
out
xor
push
push
cmp
and
adc
out
dec
sub
pop
and
add
mov
sbb
pshufw
test
cmps
or
pop
js
mov
add
je
adc
movs
jmp
xor
xor
scas
loopne
cmp
push
mov
sbb
mov
or
loopne
lea
mov
fidivr
or
jmp
mov
jge
pusha
jl
data16
mov
pop
inc
ret
lock
mov
pop
nop
stos
clc
add
cdq
idiv
push
jns
mov
cmp
cmovg
xchg
push
push
out
int3
push
or
popa
mov
pop
cmps
aaa
push
je
cli
push
mov
mov
or
fidivr
push
xor
xchg
push
ror
mov
test
xchg
mov
jge
mov
inc
test
cmp
cs
lea
jne
inc
mov
rol
(bad)
shr
push
mov
inc
(bad)
fistp
mov
dec
push
mul
lea
test
add
and
adc
nop
mov
add
shl
pop
jmp
cdq
and
and
cmc
adc
push
inc
xor
sbb
imul
push
and
in
fnstenv
sbb
sti
jmp
movs
aam
jg
pop
bound
stc
lahf
jbe
pop
adc
(bad)
sub
cmp
shl
shl
inc
div
mov
and
and
mov
sbb
int3
sbb
jae
adc
push
stc
add
xor
data16
or
add
add
sbb
adc
js
xor
adc
ret
inc
mov
lea
dec
add
imul
sub
loop
repnz
cmp
out
enter
shl
mov
imul
add
or
push
sbb
and
add
add
or
push
jb
(bad)
push
sar
pop
lods
jge
cmp
in
sar
daa
lock
scas
pop
cmp
and
add
lahf
dec
scas
xor
ds
jae
add
es
clc
mov
inc
push
cwde
fdiv
pop
jmp
and
or
cmps
add
(bad)
cmp
add
pop
in
or
or
int3
push
or
sbb
mov
pop
jbe
ror
xchg
push
scas
jl
mov
pop
lods
adc
fadd
jp
adc
pop
arpl
dec
and
inc
loopne
push
loopne
mov
movzx
ret
adc
ret
rep
adc
ror
aad
pop
xchg
add
scas
fbld
inc
or
or
jmp
push
lea
iret
(bad)
jbe
daa
fistp
cmp
adc
stos
stos
add
out
into
shr
cmp
jbe
sub
adc
sub
mov
add
test
(bad)
and
enter
ds
hlt
or
push
jge
icebp
sub
xor
mov
loopne
je
push
inc
call
sbb
pop
mov
push
or
dec
leave
lea
lods
movs
adc
cwde
or
mov
(bad)
cli
call
not
pop
adc
sub
push
add
sub
mov
xchg
dec
je
fsub
imul
pop
cmp
in
jb
jg
or
shl
leave
retf
or
mov
in
push
daa
push
add
into
push
push
sbb
push
fst
ret
retf
xchg
les
or
sbb
retf
add
ror
adc
mov
shl
xadd
push
rcr
mov
adc
scas
pop
dec
push
push
shl
es
scas
add
jb
sbb
adc
cmp
cld
inc
dec
or
or
and
xor
jp
sbb
push
movs
pop
mov
inc
sbb
lods
in
daa
xor
movs
movs
adc
jnp
xchg
xlat
xor
xchg
movaps
adc
or
inc
jmp
outs
inc
ins
adc
test
add
xor
loop
(bad)
push
cmp
jae
push
lock
test
arpl
xchg
bnd
cmp
ins
pop
push
push
inc
inc
(bad)
cmp
mov
inc
xchg
dec
dec
push
sub
dec
jns
add
dec
lock
hlt
loopne
mov
sbb
mov
(bad)
cld
lds
test
sub
push
mov
mov
aas
push
push
push
mov
inc
push
push
pop
rcr
and
mov
pop
jle
nop
add
push
leave
ret
inc
(bad)
sub
and
jbe
push
dec
pop
rol
or
and
mov
(bad)
lock
pop
push
xor
xchg
dec
lea
jg
and
cmp
add
mov
or
adc
ret
shr
sahf
add
ret
sbb
mul
popa
inc
fmul
xchg
or
cld
sbb
adc
add
jae
loopne
not
push
push
icebp
(bad)
cld
stos
sbb
jno
jge
call
aaa
sub
sbb
fmul
or
and
dec
shl
push
or
jns
adc
or
inc
ins
ja
fnstenv
cmp
adc
jmp
xchg
push
(bad)
sbb
jmp
push
pop
jo
neg
js
adc
addr16
mov
sbb
adc
ret
xor
push
pop
lahf
add
fisubr
fsub
xchg
jl
cmp
(bad)
nop
xchg
(bad)
mov
sub
ret
nop
xchg
mov
and
xor
pop
repnz
rol
pop
pop
or
je
pop
mov
push
imul
imul
imul
inc
jle
adc
imul
xchg
xor
xchg
lock
es
and
aam
jbe
mov
pop
pop
sub
rcl
cmp
sub
mov
aaa
test
mov
add
inc
les
or
test
retf
call
mov
retf
push
or
loope
mov
leave
sub
fld
movups
fsubr
cmps
sbb
adc
inc
fidiv
adc
or
icebp
sar
xor
or
cmc
loop
and
add
mov
dec
or
into
mov
or
dec
enter
dec
jmp
into
out
loop
div
or
push
ins
adc
rcl
mov
dec
add
mov
mov
mov
adc
push
mov
rol
sbb
pop
xchg
add
pop
arpl
loopne
mov
loopne
ss
xchg
push
push
movs
fxch
jmp
rcl
movhps
add
xchg
sbb
jbe
jmp
sar
xor
push
ret
jg
test
mov
adc
inc
cmp
jb
xchg
sub
cmp
mov
cmp
jne
push
das
cmp
dec
sbb
inc
aas
push
push
leave
repnz
add
adc
cmp
adc
push
push
scas
out
loope
imul
fs
push
inc
xchg
(bad)
mov
add
adc
xchg
test
xor
push
or
and
popf
push
pop
sbb
inc
ja
cmp
lock
sbb
inc
aas
pop
lahf
sub
daa
jb
loope
ret
or
fidivr
or
rol
mov
adc
xor
nop
jecxz
add
adc
rcl
cmp
inc
imul
push
jne
aaa
in
stc
jg
mov
cmp
jne
sbb
add
jne
jmp
prefetchnta
add
or
jnp
pop
ret
je
lods
nop
aaa
(bad)
es
push
inc
cmp
dec
add
or
xor
cmp
test
and
and
inc
mov
and
mov
dec
rol
test
jne
in
add
add
jae
arpl
mov
ja
push
pop
and
or
mov
add
jmp
sbb
rol
rol
in
cmp
enter
xchg
sbb
cmps
sub
out
jecxz
jl
adc
cpuid
lea
push
movzx
sbb
or
mov
add
fisubr
lahf
outs
inc
cmp
fidivr
sbb
imul
push
jne
push
inc
jp
cmp
jne
pop
xchg
pushf
fdiv
int3
mov
inc
push
loope
fild
or
or
add
jg
add
pop
call
(bad)
ins
ret
mov
rcr
xor
xlat
sbb
cli
or
shl
sub
push
lea
jge
push
adc
pop
jne
in
pop
xchg
or
mov
aad
adc
dec
jmp
or
dec
adc
rcr
dec
loop
es
cmp
jae
sub
cmp
ja
and
ret
test
add
lds
adc
pop
or
and
mov
(bad)
aas
dec
loopne
push
daa
je
sub
dec
add
lea
jmp
sub
mov
aas
cli
loope
cmp
out
or
adc
dec
add
aas
movs
sbb
mov
fs
and
fs
xor
fs
inc
dec
scas
jge
fs
push
mov
xchg
xchg
xchg
xchg
pop
pop
pusha
fs
xchg
xchg
xchg
push
shl
js
jl
mov
nop
mov
dec
fsubr
rol
sub
outs
rcr
xor
pop
xchg
xor
js
cmp
idiv
aad
icebp
pop
loope
xlat
xor
mov
and
shr
pop
pusha
and
dec
je
add
mov
pusha
dec
inc
cmp
jb
(bad)
and
pop
ret
imul
pop
mov
ret
aas
push
sbb
aas
ds
inc
aad
setp
and
add
mov
cmp
jo
nop
cmp
ja
ja
outs
and
lea
inc
lea
or
xor
mov
dec
or
jle
sbb
inc
lea
fwait
out
ss
xor
retf
sub
pop
or
pop
daa
add
fcomp
mov
push
add
xchg
imul
lea
cmp
jb
push
mov
add
or
scas
das
cmp
je
cmp
je
or
pop
aam
enter
and
add
add
or
add
add
adc
shl
daa
mov
mov
leave
dec
call
dec
xor
icebp
fild
push
movs
and
sbb
inc
fsubr
mov
inc
int
xchg
into
sar
imul
sub
push
mov
adc
rol
mov
aas
ror
mov
and
daa
loop
call
or
and
xchg
test
push
movs
cld
add
jo
xchg
pusha
das
mov
cmp
jae
hlt
and
cmp
je
inc
ror
sbb
sub
xor
sbb
enter
cmp
xor
mov
inc
push
push
fild
xchg
add
push
jo
add
add
in
or
add
bound
sbb
scas
push
les
add
jmp
dec
shl
(bad)
mov
cmp
xchg
retf
cmp
adc
mov
or
and
or
add
test
mov
mov
pop
sub
les
js
mov
push
les
pop
sub
shr
jno
push
sbb
in
inc
push
scas
add
shl
dec
xor
jmp
leave
ret
xchg
stc
mov
adc
mov
dec
not
mov
add
push
add
push
or
cwde
cmp
sub
pop
pop
lea
call
cmp
cmova
push
ret
aam
pop
les
xor
test
inc
jle
fs
xchg
jbe
jle
or
outs
and
(bad)
push
jmp
sub
jo
mov
movs
clc
cmp
add
sar
inc
sub
mov
xlat
das
mov
cmp
and
push
cmp
jae
cmp
or
mov
sahf
sub
js
lds
dec
inc
pop
lods
test
les
imul
push
xor
and
sub
outs
sahf
out
inc
cmp
shl
inc
(bad)
fld
jle
jp
adc
or
inc
mov
in
push
adc
sub
and
adc
pusha
mov
and
mov
sub
jb
dec
dec
mov
mov
push
pop
mov
loop
add
cmp
mov
fistp
jmp
ret
add
out
sbb
mov
arpl
or
setno
scas
rol
retf
sbb
clc
mov
cld
sar
jo
push
mov
lea
dec
jbe
push
jp
stc
clc
shl
pushf
and
fiadd
pusha
lock
push
cmp
inc
(bad)
ja
rcr
mov
sbb
push
pusha
shr
sub
dec
add
imul
loop
addr16
es
stc
pop
jae
into
push
lock
adc
sub
sbb
leave
inc
add
add
adc
or
int
jae
dec
ret
jbe
jg
sbb
adc
clc
sub
and
rol
inc
jp
lods
iret
pushf
and
push
and
push
sub
jecxz
jecxz
sbb
cmp
mov
inc
(bad)
jbe
push
retf
push
sbb
sub
adc
mov
paddsw
lea
add
dec
push
adc
dec
in
sub
pop
push
not
and
add
pop
into
adc
push
jmp
ins
lea
cmp
push
out
fisub
shl
popf
jb
dec
jb
and
mov
and
or
mov
or
mov
mov
or
sbb
mov
ja
push
cmp
or
out
pop
and
mov
push
xor
test
mov
shl
inc
and
jmp
pushf
or
cli
xchg
push
cwde
jne
inc
pop
iret
shr
retf
int
sbb
mov
addr16
cmp
cmp
push
lea
jae
jo
mov
ret
loopne
pop
imul
pop
mov
sub
pop
xchg
jo
jg
mov
lds
sub
js
sbb
int
rol
xor
out
add
jl
aas
test
sub
sahf
jmp
icebp
cmc
inc
xchg
xchg
inc
mov
nop
or
and
and
dec
inc
stc
pushf
bound
int3
push
enter
mov
and
fucomp
fst
inc
pop
cmp
xor
and
cmp
sbb
lods
cmp
lea
cmp
mov
cmp
mov
or
das
ret
sbb
inc
ja
push
(bad)
jbe
pop
jmp
fld
pop
jmp
add
cmps
add
xchg
shr
outs
jbe
movs
mov
add
pop
jmp
mov
dec
ficom
mov
xchg
mov
jmp
pop
xor
js
rol
js
loopne
xchg
out
inc
lds
sub
adc
push
jge
adc
sub
push
sbb
fisubr
clc
imul
retf
pop
or
xor
clc
and
ss
test
mov
push
pusha
add
enter
scas
adc
mov
pop
sbb
mov
and
jmp
sub
add
mov
(bad)
inc
imul
mov
mov
inc
lods
sbb
fnstcw
lea
scas
sbb
ret
pushf
cmp
add
ret
or
ss
sbb
inc
sub
inc
adc
mov
pop
cmc
mov
shr
adc
dec
or
cmp
jae
icebp
call
ret
aam
paddq
cmp
push
pop
push
lea
mov
add
xor
movs
shr
sbb
sub
pop
inc
and
fadd
xor
mov
or
add
inc
sub
sub
mov
mov
cmp
loope
out
pop
push
xchg
fdiv
jmp
fadd
shl
(bad)
xor
into
call
sbb
js
inc
scas
push
or
sbb
and
dec
cmp
not
xchg
btc
add
rol
xchg
mov
(bad)
cmp
jo
push
repz
mov
out
shr
pop
loope
pop
inc
pop
jl
inc
sbb
add
ficomp
add
jmp
xlat
les
and
cli
add
xchg
mov
pop
call
mov
mov
push
and
jmp
cmp
mov
daa
push
pop
out
and
stos
jmp
mov
addr16
inc
ret
add
test
(bad)
lds
fld
inc
sar
int3
leave
add
jne
sub
sub
retf
push
add
mov
mov
pop
add
sub
inc
and
cmp
mov
mov
inc
cmp
jne
stos
sub
mov
test
inc
inc
push
aam
xchg
cmove
es
pop
js
mov
jmp
push
mov
ins
sbb
enter
jno
es
add
jbe
push
add
cmps
or
std
sbb
jecxz
dec
mov
sub
sahf
out
inc
inc
add
xor
stos
jnp
int3
push
mov
jbe
mov
or
xchg
sub
shl
push
jns
ret
mov
outs
data16
pop
mov
mov
pop
inc
(bad)
push
mov
neg
fwait
or
jp
adc
dec
sar
add
inc
or
ffreep
cli
sub
cmp
adc
sub
dec
inc
pop
sbb
cmp
ret
add
mov
(bad)
push
sbb
out
push
jmp
adc
outs
loop
test
push
outs
loopne
(bad)
retf
mov
jge
in
ins
or
mov
or
jne
movs
jp
add
pop
or
mov
mov
mov
shl
add
jo
pop
xchg
es
sbb
mov
stos
or
push
push
xor
cmp
adc
mov
pop
ret
push
inc
pop
pop
inc
shr
outs
das
lods
add
iret
inc
imul
xor
cmp
fild
pop
mov
dec
dec
je
loope
adc
mov
mov
or
mov
and
pop
inc
inc
inc
sub
pop
inc
lds
xchg
cmp
fsubr
mov
out
call
dec
pop
push
inc
pop
shl
pslld
aam
adc
or
sbb
dec
and
retf
and
loopne
mov
cmp
jb
and
add
cwde
repz
outs
(bad)
pop
cli
lahf
mov
pop
dec
push
je
push
out
and
mov
dec
push
shl
add
adc
shr
sub
mov
dec
jmp
int3
mov
dec
inc
cmp
and
push
nop
cli
jle
mov
pusha
pop
jno
std
adc
lfs
add
sbb
das
sbb
fld
push
je
pop
mov
mov
sub
or
fdiv
popa
loopne
and
pop
mov
aam
pop
cmp
test
jmp
adc
out
jmp
dec
xchg
aas
je
stc
adc
mov
mov
test
ret
inc
inc
sub
ffree
loopne
imul
lock
push
lea
push
xor
add
outs
or
add
jne
sbb
sbb
adc
sub
ins
movs
add
sub
sbb
add
test
shl
mov
add
jge
cmp
mov
cmc
call
inc
dec
scas
sbb
sbb
lock
add
sbb
aam
adc
lock
mov
jmp
add
loope
or
or
mov
inc
or
fucomip
push
cmp
mov
push
and
jbe
fldcw
outs
push
inc
or
mov
jb
dec
add
cmp
fmulp
fisttp
test
mov
or
add
ret
(bad)
add
lods
adc
test
adc
xor
sbb
jne
in
jno
aaa
(bad)
outs
sub
dec
and
adc
int
fwait
cli
loopne
add
push
inc
sbb
pop
clc
dec
in
and
pop
add
sti
dec
popf
jmp
sahf
mov
jne
push
jo
(bad)
and
das
mov
inc
adc
or
clc
pop
sub
xor
movs
add
dec
add
add
mov
mov
rcr
jmp
or
jb
lea
fadd
cs
cmp
push
pop
ins
sar
es
retf
shr
out
lea
inc
pushf
add
mov
mov
and
sbb
push
int
mov
aas
pusha
and
bound
(bad)
sar
mov
lock
fmul
push
sbb
add
not
jmp
jle
movs
or
push
and
cmp
cmps
ret
daa
pop
jmp
and
mov
add
je
sub
adc
fucom
cdq
add
mov
sub
or
movs
push
and
in
sti
(bad)
sar
mov
dec
xor
into
pop
rol
leave
sbb
je
pop
and
dec
cmp
jae
lea
mov
inc
gs
loopne
adc
into
dec
hlt
add
push
mov
dec
cmp
mov
and
pop
out
mov
add
data16
pop
and
bound
inc
int3
mov
mov
or
dec
and
pusha
les
lahf
and
clc
int3
add
dec
out
ss
mov
jmp
push
and
loope
and
js
sbb
and
sbb
pop
arpl
dec
test
xchg
sbb
add
jecxz
push
sub
aas
jb
push
mov
sub
dec
aas
and
pusha
sbb
fbstp
add
add
inc
and
test
add
adc
push
leave
sti
add
iret
or
inc
in
mov
sbb
push
jae
mov
add
loope
and
in
mov
jmp
mov
mov
aam
or
out
mov
pop
dec
mov
aaa
test
rol
inc
cmps
arpl
pop
retf
sbb
ror
dec
cdq
adc
shl
aam
ja
pop
or
sub
sbb
in
sbb
adc
sub
adc
add
add
data16
bt
pop
out
aad
jmp
sbb
add
ror
mov
xor
push
xor
mov
fstp
mov
adc
lock
sbb
add
pop
inc
(bad)
xor
vmread
js
test
mov
xor
adc
xchg
mov
or
daa
cmp
cmove
leave
pop
xchg
add
jg
stos
pop
pop
lock
nop
(bad)
out
nop
nop
add
ret
push
push
pop
cmp
adc
in
xchg
adc
cmp
or
dec
add
jo
in
sub
add
mov
out
inc
add
loope
jg
sbb
daa
loopne
jb
push
pop
idiv
test
cdq
idiv
dec
mov
xchg
pop
xor
push
add
mov
push
add
stc
mov
sti
adc
aaa
mov
movs
repnz
add
push
xchg
loop
and
pop
shl
(bad)
xor
into
inc
push
and
or
mov
shl
mov
jb
loope
or
sbb
(bad)
xchg
push
dec
mov
ja
out
and
mov
rol
call
loope
ror
imul
data16
push
adc
push
mov
push
or
out
fisttp
push
push
mov
(bad)
fidivr
pop
adc
and
stos
mov
dec
call
or
or
push
mov
mov
inc
inc
out
push
adc
fistp
les
xor
inc
aad
std
sbb
mov
pop
iret
mov
dec
in
push
or
out
mov
adc
fld1
lahf
jg
adc
inc
sbb
jp
mov
jo
ficomp
push
push
adc
fs
inc
clc
mov
dec
mov
loope
pop
enter
mov
jp
xor
ret
xchg
movs
or
xor
mov
jb
rcr
lahf
add
cmp
lea
retf
(bad)
sub
ficomp
dec
add
cmp
jb
out
shr
mov
out
aaa
jbe
cmp
outs
in
pop
into
adc
mov
xlat
cdq
(bad)
les
aad
push
add
or
lds
or
shl
rol
and
jbe
retf
sbb
inc
sbb
adc
inc
adc
lds
mov
push
or
cmps
mov
xor
add
les
pop
add
inc
mov
mov
xor
out
and
hlt
into
or
xor
(bad)
mov
and
mov
xor
lea
mov
add
or
mov
mov
push
shr
add
ror
sbb
xchg
fmul
push
xor
add
pushf
rcl
retf
(bad)
mov
ret
sub
loop
test
add
daa
xchg
rcr
pop
leave
loope
addr16
das
fld
jle
push
retf
adc
sbb
add
ror
adc
jnp
inc
and
mov
xor
pop
inc
call
fs
fisttp
cmp
ret
and
mov
xor
nop
ror
adc
ja
jnp
ret
and
push
rol
fisub
(bad)
jnp
or
retf
cmp
dec
data16
cmp
inc
ret
iretw
rcl
xchg
int
fsub
cmp
sbb
movs
xor
ins
and
fcom
pop
pop
jnp
retf
dec
or
addr16
or
je
fcmovb
loope
jno
imul
push
xchg
fwait
sbb
jnp
push
or
out
vcmpsd
pop
mov
xchg
xor
retf
jno
fnsave
out
xchg
and
push
sub
lods
cmp
adc
push
(bad)
jge
add
inc
xchg
push
add
cld
sbb
sahf
xor
ret
pusha
ror
mov
repnz
rcl
(bad)
mov
cmp
lock
aas
pushf
leave
xor
in
push
xor
dec
or
push
xchg
imul
push
lock
xor
pop
jle
and
or
push
sub
rcr
loope
ret
mov
iret
sbb
jns
loope
shr
dec
mov
je
xchg
out
sub
xor
addr16
pop
stc
mov
mov
push
dec
loop
xlat
mov
inc
(bad)
addr16
mov
and
repz
or
into
push
cmp
int
addr16
adc
iret
sub
inc
shr
cmp
jns
add
into
pop
cmp
mov
sti
mov
sbb
data16
sbb
pop
repnz
retf
jae
and
(bad)
sbb
call
mov
push
xor
(bad)
arpl
imul
sti
dec
pop
retf
call
iret
cmp
imul
div
cmp
test
or
repnz
push
outs
xchg
cmp
(bad)
repz
dec
cmps
in
inc
pop
dec
xor
inc
cmp
repnz
sbb
xchg
out
add
pop
inc
push
pop
enter
lahf
cmp
in
jmp
xlat
xchg
sbb
inc
and
dec
repz
sbb
dec
xor
fs
and
fs
and
jbe
(bad)
sbb
sbb
mov
inc
sub
and
adc
dec
push
and
data16
and
dec
jae
jp
in
xor
cmp
cmp
out
and
dec
xor
retf
test
sub
xor
cmps
xor
repz
pusha
mov
repz
retf
and
aas
adc
push
mov
cmp
sahf
xor
data16
adc
add
or
lods
and
out
or
xor
loopne
addr16
(bad)
popa
jno
(bad)
fld
xchg
not
shr
xor
je
or
cmp
imul
push
push
pop
xor
in
dec
loop
xchg
inc
(bad)
rcr
repnz
jmp
push
movs
out
ret
jle
and
add
pop
iret
inc
cs
xlat
xlat
retf
outs
dec
xchg
pop
pop
addr16
jmp
add
addr16
(bad)
repnz
cdq
int
scas
scas
xchg
ss
jo
add
mov
iret
ret
mov
loopne
es
sahf
stos
retf
add
and
jecxz
push
xchg
or
dec
cmp
sbb
or
xchg
pop
pop
das
imul
(bad)
sti
mov
adc
test
mov
outs
retf
imul
loope
arpl
and
pop
enter
sbb
nop
retf
repz
sbb
and
in
mov
leave
sub
jne
icebp
inc
and
outs
aas
adc
(bad)
cmp
cmps
js
xor
dec
iret
jmp
in
fidivr
sub
js
lea
or
test
ret
sahf
ror
jmp
dec
add
mov
jmp
int
sbb
inc
xchg
xchg
xchg
sub
ins
(bad)
out
popf
adc
jnp
push
into
jae
stc
lock
dec
pushf
ds
iret
retf
(bad)
rcr
call
jae
push
mov
mov
cmp
jl
push
push
xchg
xor
seta
cmove
cmc
adc
dec
cmp
mov
call
js
mov
add
jmp
inc
sub
mov
mov
adc
sub
and
mov
dec
stos
inc
movs
test
retf
sar
mov
cmp
cmp
shl
ins
xor
dec
fisttp
add
not
mov
sbb
and
shr
pop
xor
mov
add
test
sbb
test
or
lea
test
pusha
inc
push
mov
adc
outs
pushf
rol
lea
cwde
shr
iret
jno
inc
mov
pop
bound
add
lea
test
bound
das
mov
fs
lea
dec
or
mov
xchg
and
popa
cli
jno
repz
and
and
and
rol
retf
jae
xor
push
sub
popa
leave
test
jno
xchg
mov
and
sub
aaa
xchg
cmp
test
and
clc
xor
add
shl
xchg
xor
or
and
loopne
out
lods
je
enter
sub
jnp
in
pop
shl
sbb
add
cmp
or
mov
push
enter
js
push
dec
imul
fadd
ror
scas
push
stos
or
pop
xor
rcr
(bad)
or
gs
std
mov
stos
shl
jno
fs
pop
xchg
dec
pop
push
inc
jecxz
and
inc
lds
jmp
cmp
fcmovnbe
rol
dec
inc
mov
in
push
jbe
jno
xchg
je
(bad)
sub
into
or
ja
ret
aam
clc
mov
in
int
sub
mov
dec
sti
in
sbb
neg
xor
add
adc
push
lds
mov
(bad)
push
(bad)
sbb
cmps
or
and
dec
pop
rol
ins
rol
int
mov
jne
pusha
jb
mov
pop
pop
mov
std
pop
mov
pop
js
mov
pop
add
bound
xor
in
sub
ss
ins
addr16
jle
call
inc
or
push
or
pop
lock
ja
add
sbb
push
sbb
daa
push
add
enter
in
cld
shl
out
and
xchg
mov
bnd
mov
pop
xchg
stos
add
bnd
sub
out
add
out
jmp
jb
or
add
cli
cmp
rcr
cmps
or
inc
cmp
ret
add
push
jmp
scas
add
pop
aas
std
pop
repnz
cmps
cmp
fcomp
jae
test
xor
mov
push
sbb
mov
pushf
pushf
add
ds
adc
sub
mov
add
xchg
neg
sub
jbe
dec
or
sbb
lods
xor
mov
mov
sbb
or
mov
(bad)
pushf
pop
lgs
cmp
lea
mov
in
sahf
cwde
jp
add
mov
data16
sbb
xor
xor
add
int
adc
imul
jo
mov
add
rcl
push
shl
push
pop
xchg
rol
cmp
aaa
in
pop
shl
sbb
dec
or
cmp
in
or
and
mov
cwde
call
sub
push
pop
js
scas
stos
into
shl
add
hlt
xchg
lea
test
dec
pusha
adc
imul
add
cmp
je
mov
cmp
cwde
fcomp
inc
adc
jb
pop
mov
xor
xor
outs
jle
mov
(bad)
mov
pop
cs
xchg
xchg
pop
fprem
nop
push
add
test
push
clc
rcl
push
inc
lock
leave
sbb
xchg
mov
xchg
add
xchg
scas
out
push
loop
call
mov
xor
pop
sbb
pop
add
aam
jmp
pop
inc
cmp
in
sub
inc
mov
jnp
loop
add
push
retf
dec
jle
jmp
push
sar
neg
pop
sbb
inc
jne
push
sub
arpl
shl
or
clc
cld
cmps
dec
jo
pop
mov
push
sub
pop
push
mov
scas
out
mov
xchg
addr16
and
mov
push
gs
cmp
inc
enter
ja
mov
sbb
loop
inc
idiv
sbb
mov
xor
sub
test
pop
xor
adc
mov
push
in
sbb
mov
cmp
push
rcr
gs
xchg
lea
inc
daa
jo
retf
pusha
mov
push
add
or
sbb
mov
test
psrld
ror
cmovnp
jo
loope
adc
fadd
loopne
sbb
fwait
dec
jmp
fnstcw
adc
sbb
push
in
cmp
dec
sub
cmp
mov
(bad)
mov
test
pop
push
push
cmp
out
sti
jle
adc
sub
dec
push
adc
mov
bound
pop
mov
fistp
(bad)
arpl
loop
ret
in
inc
sbb
mov
dec
ret
inc
xlat
sbb
push
pop
int3
xchg
(bad)
mov
mov
ja
js
fnstsw
frstor
jno
push
xor
inc
repz
mov
test
repnz
fcom
ins
pop
ret
mov
mov
jae
fcomp
pusha
jnp
stos
jae
jle
icebp
shl
and
cmps
mov
mov
inc
and
cmps
fcomp
lods
and
xor
shr
adc
add
lods
mov
and
fcom
push
mul
pop
adc
add
or
cmp
fnsave
jb
cmp
add
lods
push
or
jno
mov
add
cmp
dec
mov
cmc
push
mov
inc
jnp
jbe
xor
fcmovnu
es
cmp
enter
jb
inc
inc
mul
into
fcom
in
push
push
jae
loopne
in
sub
push
adc
mov
jmp
mov
mov
(bad)
addr16
mov
cmp
xchg
loopne
gs
add
inc
jnp
lds
shl
inc
stos
es
cmps
scas
cmp
mov
cld
sub
or
pushf
push
sub
jbe
pop
popa
xor
add
or
mov
sub
aas
ret
jno
jb
or
sar
cmp
lea
xchg
mov
mov
test
push
jmp
mov
inc
lea
xchg
loopne
jmp
or
nop
neg
fdivr
rol
lock
gs
repnz
lock
cmc
sti
mov
push
repnz
and
add
repnz
or
loop
inc
sbb
mov
sbb
add
fsubr
mov
mov
cpuid
mov
pop
mov
mov
idiv
pop
push
cli
aam
loopne
xor
out
mov
je
ins
or
adc
xor
fiadd
mov
leave
push
rol
xor
inc
test
cmp
and
call
adc
sub
add
push
cmc
cli
jbe
jne
mov
adc
push
and
pop
cwde
sbb
or
xor
add
call
sub
dec
sar
pop
aam
add
fsubr
sti
in
je
pushf
sbb
dec
add
cli
je
mov
add
jo
add
je
pop
adc
sbb
add
jp
mov
movs
adc
and
mov
xor
and
sub
jo
dec
fld
add
shl
mov
and
mov
mov
sbb
mov
in
test
xor
(bad)
jecxz
add
mov
xchg
mov
icebp
cmp
mov
mov
xchg
test
mov
mov
xor
xchg
movs
or
lea
movs
ins
out
stc
rep
push
aam
loop
test
mov
fstp
ficom
and
and
rcr
sub
or
dec
sub
rcl
mov
xor
xor
neg
pop
addr16
sbb
mov
lahf
cmp
push
jecxz
push
arpl
enter
and
rcr
push
mov
ja
ins
lods
retf
push
inc
push
ss
in
xchg
add
or
sti
enter
pop
cmp
int
test
movs
fiadd
cmp
mov
fild
cmp
push
and
in
inc
daa
std
es
inc
std
adc
jae
loopne
and
pop
adc
jne
jl
and
cmp
stos
xor
and
das
lds
mov
push
jmp
adc
adc
hlt
mov
clc
push
loop
dec
out
mov
popa
cmp
(bad)
jp
(bad)
ds
mov
or
pop
dec
mov
mov
mov
sbb
xor
xlat
jns
mov
xor
mov
(bad)
in
xlat
lea
add
enter
pop
mov
cmp
ror
mov
and
imul
jbe
or
adc
adc
mov
lds
push
adc
xchg
add
mov
in
pop
jbe
or
cs
cmp
or
or
xchg
je
jl
jecxz
adc
call
mov
mov
push
mov
xchg
or
cli
sti
xlat
js
jb
xchg
dec
sub
mov
cld
cld
pop
popf
ret
in
inc
iret
inc
sti
cmps
add
jl
dec
push
out
xchg
mov
cmp
inc
inc
or
inc
int
popa
fst
add
arpl
jmp
push
mov
imul
add
add
out
adc
nop
aas
ret
mov
fcom
loopne
fadd
xchg
jb
ret
leave
rcl
ss
xor
or
hlt
lds
inc
push
adc
cmp
cmc
inc
push
mov
fdivr
fsubp
push
dec
jle
inc
push
je
xor
mov
scas
add
fs
les
push
test
mov
mov
(bad)
lock
(bad)
sti
out
jmp
aaa
and
pop
xchg
fstp
adc
lds
sbb
fcom
sbb
cmp
(bad)
data16
push
sti
xor
std
jmp
mov
push
dec
shl
xchg
stc
sbb
xchg
add
scas
and
push
inc
cmp
inc
cld
mov
jno
out
jmp
inc
mov
add
push
jbe
push
xchg
arpl
pop
sbb
les
jnp
adc
dec
and
push
adc
std
mov
sar
sub
sbb
mov
mov
xor
add
or
push
cld
std
aaa
cmp
push
mov
mov
push
aad
ret
xlat
push
push
sub
push
jecxz
push
dec
pop
dec
jle
xchg
jmp
fisttp
iret
push
loop
and
dec
stc
or
pop
sbb
fs
mov
nop
sbb
add
adc
inc
add
cmps
dec
mov
push
lea
sbb
and
mov
add
adc
ss
mov
shl
jae
and
xchg
xchg
jmp
pusha
pop
mov
lds
call
jno
mov
inc
adc
sub
pop
sbb
js
ins
dec
jp
(bad)
hlt
loop
push
push
and
jmp
jl
stos
cmp
and
sub
enter
push
test
adc
mov
add
mov
cmp
je
cmp
push
xor
and
sub
(bad)
(bad)
cmp
cmp
jne
sub
inc
bound
aad
mov
jmp
pop
pop
rol
xchg
das
scas
push
xchg
sbb
xchg
call
into
adc
loope
cmp
or
or
fcmovnu
loopne
inc
mov
mov
les
movs
mov
cmp
adc
cmp
out
mov
lea
fsubr
pop
out
mov
dec
in
adc
mov
and
fs
bound
sub
mov
jle
aas
sbb
fsubrp
mov
or
test
in
push
repnz
fiadd
pop
or
cmp
dec
mov
sbb
sbb
inc
xchg
lock
icebp
int3
mov
inc
xor
(bad)
in
mov
rcl
js
pcmpeqw
sbb
ins
xor
mov
dec
and
add
sahf
push
bound
dec
std
inc
sub
sti
dec
pop
pop
jae
fsubr
imul
push
imul
and
sub
jge
enter
jge
movs
ret
xchg
mov
push
push
in
add
add
adc
mov
(bad)
cmp
xor
push
pop
pop
push
push
cmp
mov
ffree
fwait
mov
and
or
sar
adc
sti
fwait
pushf
xor
sbb
xor
in
pop
mov
ss
adc
adc
mov
imul
add
jns
jne
inc
and
push
cmp
lds
add
jmp
test
loop
add
or
js
(bad)
cmp
sbb
test
je
adc
sbb
inc
idiv
ja
pop
int3
add
pop
and
ror
jo
mov
push
pop
add
fnstsw
pop
inc
cmp
fucom
mov
or
sahf
fisttp
shl
daa
sbb
xor
and
push
les
loopne
pop
in
cwde
or
ret
fsub
mov
inc
or
je
push
xor
retf
ror
bound
push
call
xor
dec
sbb
or
jb
sbb
mov
pop
or
mov
movs
mov
mov
push
mov
jge
jne
adc
ror
push
call
pop
gs
sbb
jmp
mov
and
cmps
xchg
adc
stos
mov
addr16
cmps
pop
sbb
or
inc
mov
add
or
sar
lea
loopne
xor
xor
and
ins
adc
cmp
cli
imul
xchg
les
mov
(bad)
enter
inc
xor
xor
push
fstp
pop
std
ret
push
pop
xchg
jb
sub
retf
nop
pop
clc
pop
cld
xchg
or
js
xchg
mov
in
and
or
or
adc
xchg
retf
nop
fcom
and
inc
jb
adc
sbb
xchg
xor
and
cmp
sub
leave
aaa
and
push
xchg
and
cmp
cmp
xchg
retf
nop
pop
inc
clc
inc
xchg
and
xor
xchg
xor
push
jo
retf
nop
pop
push
mov
inc
jb
movs
pop
shl
gs
aam
in
xchg
retf
push
inc
jb
and
je
leave
gs
push
js
and
and
xchg
xor
popf
mov
loop
inc
xor
xlat
cwde
push
je
and
jmp
sbb
test
movs
imul
mov
add
out
sub
sar
push
push
jmp
sub
add
add
or
shl
popa
pop
mov
or
push
loope
dec
loopne
and
and
test
(bad)
js
cmp
lds
mov
pop
pop
mov
rol
ins
adc
test
xor
xor
in
outs
pop
pusha
cmp
pop
dec
mov
xchg
inc
daa
rol
push
pusha
in
push
(bad)
or
aas
or
inc
pop
push
pop
sub
mov
je
dec
mov
cmp
jb
or
ja
sbb
shl
add
add
fiadd
ja
das
rol
fisub
add
sbb
pop
jbe
ret
rol
in
enter
adc
lock
jge
sbb
and
and
lods
adc
in
mov
cs
mov
test
push
outs
lock
or
cli
or
test
sbb
cmp
pop
dec
lahf
jp
sbb
xor
and
and
je
inc
in
std
add
out
cdq
out
add
xor
add
imul
or
fmul
sbb
inc
popa
mov
imul
shl
out
nop
lea
pusha
das
fadd
clc
lock
xchg
adc
xchg
mov
dec
sub
test
cmp
rol
or
(bad)
je
mov
xor
pop
enter
mov
jmp
(bad)
aad
ret
mov
fdiv
mov
pop
inc
xor
adc
mov
ret
fimul
adc
sbb
jge
js
push
jge
sbb
cmp
jle
cmp
imul
cli
dec
imul
fild
inc
loop
inc
push
or
or
ja
sahf
cmc
dec
je
cmp
in
lock
xor
cmp
pop
mov
adc
ins
cs
and
mov
push
xor
nop
cmp
test
jbe
fnstsw
lods
shl
inc
add
cmp
adc
mov
push
test
push
retf
or
into
dec
data16
or
adc
aam
iret
rol
adc
dec
and
mov
rcr
int
pop
into
mov
adc
mov
and
es
pop
test
cmp
sbb
adc
dec
sbb
push
fidivr
mov
jmp
pop
xor
inc
in
pop
sbb
cmp
je
stos
push
arpl
sahf
test
xchg
lea
xor
jmp
pop
add
ins
inc
inc
cmps
(bad)
jmp
push
and
ror
or
adc
add
xchg
jne
es
lock
fucomp
jae
shl
cs
shl
adc
arpl
imul
push
ret
shr
gs
into
sub
add
(bad)
sub
cmp
push
stos
adc
sbb
xor
cmp
jbe
clc
jb
cdq
in
stc
and
rol
adc
mov
mov
hlt
arpl
xchg
cld
rep
add
and
dec
mov
punpcklbw
loopne
dec
mov
test
mov
popf
(bad)
lods
add
or
fmul
add
jae
stos
pop
repnz
pop
les
mov
adc
movd
sub
or
mov
mov
pop
je
cmp
shr
adc
stc
mov
adc
pop
xor
inc
and
xor
popf
mov
push
cmp
(bad)
jg
push
fimul
sbb
ret
sbb
in
scas
inc
mov
xor
ins
or
sbb
clc
add
add
cmp
or
jmp
jbe
xor
addr16
cld
add
push
fs
push
add
add
repz
ins
adc
outs
adc
xor
jmp
mov
lea
adc
ret
je
dec
pop
dec
(bad)
jo
std
add
add
and
scas
add
test
add
and
ins
jns
imul
mov
or
ja
inc
nop
cdq
pop
in
mov
dec
mov
inc
add
(bad)
daa
test
xor
cmp
xchg
add
cmp
adc
retf
dec
add
cmp
data16
sub
std
fidivr
sub
push
xchg
push
add
js
inc
fdivr
out
add
sub
mov
dec
shl
xchg
lsl
ror
push
cmps
sbb
inc
ret
push
out
cs
out
pop
push
push
dec
adc
push
and
iret
pop
xor
outs
push
jbe
jle
jl
(bad)
jg
push
dec
dec
jg
jg
jg
aas
cli
repz
jg
jg
jg
jo
ins
mul
add
jb
sub
and
xchg
out
and
loopne
push
cld
je
xor
ret
xchg
sbb
sub
lods
pop
shl
wrmsr
add
xchg
es
retf
xchg
jle
loopne
add
sbb
xchg
jecxz
loope
shr
je
mov
inc
xlat
es
mov
test
xchg
dec
or
data16
sub
mov
ja
lods
push
lea
dec
jne
pop
mov
pop
ss
mov
add
sahf
inc
test
inc
and
in
je
xor
push
mov
imul
inc
cmps
dec
mov
aas
push
add
inc
inc
dec
jne
jge
or
mov
lock
sar
imul
push
mov
movs
mov
pop
shr
or
call
pop
cdq
push
or
push
fs
push
jnp
add
cmp
cmps
repnz
or
jne
mov
movs
addr16
push
add
daa
push
cdq
add
adc
mov
(bad)
jmp
mov
or
call
into
test
je
cdq
imul
pop
push
seta
les
out
and
ret
pop
inc
fsubr
inc
ds
push
mov
sbb
sub
add
bound
xor
pop
popa
pop
movs
ja
mov
pop
inc
adc
in
pop
inc
mov
ret
adc
cmp
adc
sbb
jbe
cmp
mov
or
int
push
out
popa
and
stos
fmul
stc
xchg
jle
test
ja
out
inc
mov
push
cmp
and
inc
or
sti
call
dec
fdivr
dec
or
cmp
cwde
loop
std
jle
fdivr
inc
cmp
jle
mov
or
or
in
cmp
gs
shl
or
loop
or
mov
add
mov
out
stc
add
or
push
(bad)
mov
adc
lods
sbb
fsub
mov
xor
aas
ds
pusha
pop
enter
push
or
enter
dec
cmp
lea
cmps
bnd
sub
lods
out
push
call
cmp
sbb
and
mov
bound
div
cmps
add
sbb
popa
shl
sbb
push
pusha
gs
call
pusha
popa
test
sti
jno
cmps
adc
mov
push
pop
jmp
or
adc
jle
jne
push
ror
sub
(bad)
mov
push
pop
and
adc
sub
test
mov
inc
adc
push
cdq
add
jge
in
push
pop
inc
ret
push
pop
pop
pop
ss
inc
ds
sub
and
test
scas
addr16
dec
loopne
dec
jg
fst
sbb
add
aam
xchg
jg
clc
das
ins
mov
loop
in
add
je
and
add
shl
fcom
into
sub
or
and
and
add
aaa
cmp
adc
adc
add
movs
push
dec
xor
sbb
popf
fnsave
imul
sub
or
jne
leave
adc
jne
mov
mov
cmps
je
mov
sbb
adc
xchg
mov
xlat
ret
push
jg
sbb
push
fsubr
stos
(bad)
push
adc
cmp
cwde
in
or
cmps
add
sbb
jge
jg
add
xchg
xor
or
cli
sub
aam
cmp
cld
in
inc
test
loopne
jns
mov
sub
inc
test
add
adc
icebp
sub
icebp
inc
adc
push
in
jle
clc
jns
call
in
push
int3
sub
cmp
push
fadd
js
dec
jp
xor
push
aam
nop
add
inc
fadd
outs
jae
add
add
and
and
mov
cdq
jl
mov
pusha
dec
mov
fmul
and
imul
sub
xchg
loop
or
es
cmp
ins
aad
cmps
add
push
cmp
out
pop
(bad)
jnp
pop
and
ins
mov
(bad)
or
fs
test
je
or
mov
test
push
dec
xchg
arpl
out
and
loopne
clc
scas
push
outs
jne
push
jmp
js
sbb
add
loopne
into
jb
push
lea
(bad)
xchg
rol
pop
imul
clc
add
clc
gs
cwde
or
fadd
pop
call
xor
cmp
push
sbb
adc
and
movs
fld
mov
sbb
fist
push
lock
cmp
mov
div
je
pop
dec
dec
inc
loopne
sub
push
inc
and
push
push
sbb
int3
movs
add
mov
shl
fs
je
mov
jmp
pop
inc
call
cmp
jl
inc
in
push
outs
or
jg
mov
mov
and
jl
xchg
je
mov
dec
jecxz
int3
add
pop
sbb
clc
test
add
xchg
test
mov
inc
hlt
rol
lods
loopne
das
sti
je
fmul
call
cli
adc
jb
push
xor
cs
sahf
sub
pop
jo
xor
add
mov
xchg
inc
sub
dec
inc
cmp
test
xchg
push
dec
lahf
test
mov
adc
mov
sub
add
ret
push
jg
fisubr
add
adc
test
mov
push
add
xor
idiv
aaa
jle
mov
and
addr16
or
pop
mov
retf
cmovbe
(bad)
adc
aaa
jl
xor
xor
test
xchg
loopne
ss
inc
adc
loop
push
jno
mov
push
mov
add
mov
ret
push
pop
push
adc
aad
loopne
repnz
loope
mov
add
jbe
sbb
dec
push
mov
add
and
jne
sbb
adc
and
mov
sub
jbe
push
movs
inc
mov
sbb
xor
test
adc
adc
int3
push
push
ret
cmp
lods
clc
sbb
add
xor
lods
repnz
sub
sbb
mov
jnp
adc
leave
jns
test
je
mov
mov
movs
xchg
mov
mov
push
in
jmp
jmp
pop
xchg
clc
push
pushf
sbb
in
sbb
lea
push
jmp
jle
push
push
sbb
shl
xchg
fcom
mov
mov
pop
cmp
pop
pop
push
rcl
xchg
test
dec
cmp
movs
or
cmp
je
cmps
sbb
jmp
cmp
mov
adc
imul
push
push
sub
inc
xchg
loopne
test
push
ret
jmp
push
test
jns
or
sub
and
sub
fmul
or
sbb
or
mov
in
or
adc
dec
mov
push
jo
dec
gs
shl
inc
sbb
cmp
push
mov
mov
jle
(bad)
cmp
jge
or
inc
(bad)
sbb
cmp
sub
daa
mov
push
ins
add
or
or
pop
add
jl
loopne
cmp
movs
sub
adc
neg
jne
xchg
or
dec
xchg
add
xchg
rcr
pop
jecxz
popa
mov
(bad)
not
mov
jbe
add
and
cmp
es
push
jecxz
dec
and
jb
test
ret
mov
adc
inc
add
je
cmp
add
fiadd
jmp
dec
or
sbb
fnstsw
cmp
sbb
or
in
add
pop
xlat
jne
cmp
jb
cmp
jbe
mov
cmps
and
and
and
adc
pop
rcl
nop
sbb
ds
push
neg
mov
sti
cmp
sub
sbb
retf
xor
and
shl
dec
or
je
sahf
ds
outs
test
dec
add
add
push
and
cmp
mov
cmp
inc
fidiv
fistp
cmp
and
(bad)
mov
mov
out
(bad)
cmps
xlat
jp
test
dec
sbb
test
sbb
cmp
sub
push
and
(bad)
leave
mov
fsubr
test
iret
cmp
das
mov
add
jno
lods
es
inc
add
adc
push
push
pop
outs
pop
and
adc
ret
mov
or
xor
je
and
jb
xor
dec
sbb
aaa
or
sti
shl
add
or
adc
sbb
je
arpl
jg
add
pop
ret
push
in
or
retf
mov
add
xor
mov
call
jg
pop
into
xor
je
shr
adc
ss
lahf
or
jmp
pop
lea
jp
(bad)
pop
or
pop
push
lods
jae
lahf
add
xor
call
je
je
jmp
cmp
push
cwde
lods
sbb
and
xor
cmp
dec
pop
sbb
add
jo
add
cmp
clc
je
pop
mov
js
mov
(bad)
pshufw
push
fild
mov
dec
jmp
retf
pushf
or
shr
aas
in
fld
je
retf
push
jmp
retf
jne
dec
cdq
add
xor
mov
rcl
xor
cmp
jb
ror
fadd
xor
icebp
retf
adc
adc
inc
sub
daa
jmp
fcom
ret
adc
add
xlat
pop
test
xor
xor
add
out
lock
div
xor
icebp
jne
and
pop
push
push
jp
push
cmp
icebp
mov
idiv
outs
cmp
inc
cld
cmp
je
push
jmp
je
out
sahf
leave
bound
mov
iret
jmp
pop
push
js
std
cld
(bad)
or
(bad)
into
cmp
loop
dec
dec
mov
fadd
xchg
(bad)
xlat
jnp
push
push
rcl
rcr
aaa
les
cmps
adc
jbe
(bad)
int
out
mov
push
test
pop
pop
rcl
pop
push
jmp
pop
sub
enter
jle
inc
ss
pop
add
jecxz
mov
pop
mov
scas
imul
jl
rcl
xlat
call
mov
pop
push
pop
pop
and
js
push
fidivr
cld
dec
or
je
rcr
adc
push
(bad)
es
dec
jecxz
xchg
add
or
popa
mov
push
mov
add
cmp
imul
mov
sbb
pop
cli
ret
inc
jmp
shl
add
movups
popf
mov
out
sub
test
mov
pop
push
fisttp
and
push
test
shl
fisttp
fist
xor
mov
jmp
jae
out
mov
or
clc
and
push
aam
es
push
lea
stos
mov
arpl
jg
add
xchg
jbe
stos
sbb
sbb
sub
push
jb
clc
sub
add
and
cmp
fadd
inc
cmps
dec
test
jmp
daa
dec
add
push
test
dec
add
or
xchg
mov
das
ins
inc
or
or
hlt
(bad)
pusha
pop
jmp
sbb
push
mov
cli
lea
mov
push
jg
push
push
retf
jl
movs
ret
setno
(bad)
pop
mov
push
fstp
inc
inc
push
loope
inc
test
jbe
loopne
jp
call
add
mov
pop
lea
mov
dec
movs
cmps
popa
or
or
icebp
mul
imul
dec
push
fstp
push
push
movs
lea
mov
fsub
add
pusha
push
pop
add
(bad)
pusha
mov
mov
xor
jmp
test
jg
cmp
je
jmp
mov
cmp
test
dec
das
jmp
push
mov
sbb
rcr
xlat
mov
mov
mov
stos
pop
mov
dec
mov
dec
(bad)
dec
push
addr16
mov
xchg
pop
(bad)
inc
pop
ins
mov
jmp
in
pop
sub
inc
out
sub
aaa
adc
mov
cmp
sub
xlat
ja
inc
shl
adc
sub
fwait
repz
adc
mov
cmps
mov
stc
(bad)
adc
les
add
cmp
jne
pop
and
inc
and
(bad)
pop
icebp
rcr
xor
cmove
repnz
push
adc
mov
enter
nop
xor
jno
pop
push
fsin
mov
push
adc
xchg
aas
lea
sbb
cmps
mov
push
fidiv
push
or
and
jb
push
add
test
sub
aaa
enter
xor
fdiv
adc
push
das
pop
add
call
dec
fisub
push
clc
in
add
pop
add
add
nop
test
in
or
fadd
jmp
jmp
sub
push
in
adc
inc
call
outs
inc
out
pop
lods
adc
fsub
add
dec
jle
jnp
clc
add
shl
je
rcl
shr
add
outs
in
fwait
or
jle
in
nop
add
add
add
sub
je
mov
mov
add
jmp
bound
xor
add
jg
and
mov
pushf
adc
or
add
xchg
adc
push
mov
pop
dec
push
cmp
iret
in
xor
jns
or
repnz
or
and
enter
or
movs
mov
or
cs
or
inc
push
and
or
daa
movs
push
(bad)
(bad)
ficom
xchg
or
mov
adc
cmp
push
xchg
adc
jae
adc
push
adc
test
call
xor
adc
rol
adc
cmp
pop
imul
sbb
sbb
inc
push
sbb
sbb
push
sbb
in
pushf
inc
in
add
sbb
retf
add
sbb
push
mov
sbb
add
cmp
push
and
nop
add
pop
push
fld
icebp
add
cmp
iret
or
test
pop
sti
cmp
repz
pop
pop
ja
cmp
and
leave
cmp
in
ins
xor
jecxz
mov
in
in
out
cmp
add
push
jo
enter
sub
xor
dec
and
enter
sub
xor
cmp
push
enter
in
in
cs
fadd
in
ror
repnz
in
xchg
out
sub
xchg
adc
out
jno
out
out
nop
out
test
lock
sbb
jmp
add
xchg
icebp
cld
add
jns
daa
nop
repnz
repz
hlt
or
jnp
hlt
hlt
jmp
sbb
inc
fs
jb
jns
test
imul
add
clc
pop
dec
mov
clc
jmp
xchg
or
inc
stc
int
sub
cs
nop
cli
stos
add
sti
loopne
jb
test
cld
cld
je
test
pushf
adc
fdivr
cmp
jns
nop
std
inc
(bad)
inc
add
or
inc
or
mov
xor
fst
jne
and
in
in
pop
enter
cmp
icebp
add
cs
out
or
scas
fwait
loop
loopne
push
and
push
iret
rol
sub
jmp
jmp
mov
jmp
scas
fwait
loop
mov
cmps
or
push
sub
pop
out
out
out
jmp
push
lock
cmc
dec
je
push
push
rol
push
cmp
push
sub
or
jmp
and
inc
hlt
pop
in
pusha
mov
mul
cmp
xchg
adc
cmp
imul
out
mov
lds
sub
dec
push
pop
ins
inc
call
jmp
push
cld
inc
cld
stos
pusha
pop
arpl
cwde
inc
sahf
xchg
or
(bad)
out
pop
out
pop
jp
push
jp
(bad)
adc
dec
in
push
push
push
adc
shl
loop
xchg
add
sti
jecxz
jecxz
mov
inc
push
dec
rcr
sub
and
out
jmp
(bad)
cli
out
(bad)
adc
mov
add
push
dec
xchg
cli
jmp
jmp
xor
in
dec
in
repnz
(bad)
stc
out
out
retf
or
and
jmp
sub
lea
jge
dec
int
rol
repnz
cmp
int
stc
in
jne
idiv
mov
cmc
inc
call
cmp
ins
mov
inc
cmps
mov
int
inc
clc
clc
nop
or
pop
dec
stc
add
cmps
cmp
cli
cli
jno
dec
mov
movs
or
int
sbb
dec
jmp
add
mov
ret
pop
fwait
and
xchg
imul
mov
loope
loope
adc
and
pusha
loop
ds
sub
dec
movs
test
mul
in
or
push
adc
cmps
imul
loop
call
rcr
jmp
cdq
xor
scas
adc
repnz
xchg
out
cmc
sub
in
enter
add
fwait
out
rcl
jns
scas
push
sub
lock
ins
mov
mov
push
pop
and
add
mov
clc
cli
xchg
mov
test
hlt
cmc
cmc
mov
movs
ins
repnz
jo
out
dec
sub
enter
clc
mov
mov
pop
leave
das
or
aad
(bad)
push
repz
xchg
inc
dec
scas
mov
imul
sub
out
dec
inc
inc
lock
adc
(bad)
les
pop
jecxz
add
cwde
sub
sub
xchg
dec
mov
add
jb
cld
enter
jno
add
push
iret
add
enter
lods
dec
das
push
sub
sbb
shl
pusha
inc
jp
in
lea
push
dec
inc
add
sbb
lahf
out
add
jmp
xchg
and
add
xor
add
popa
out
imul
xlat
ins
mov
mov
shr
inc
add
das
push
xor
push
push
push
fldcw
pop
popf
xor
aaa
mov
jns
cmps
add
xor
int
movs
mov
xchg
sub
dec
mov
repz
sub
jbe
pop
xor
idiv
test
daa
fld
popf
not
push
inc
ins
push
push
dec
or
je
cmp
sub
aam
test
mov
cmp
sahf
inc
cmp
cmp
adc
dec
daa
mov
pop
xor
fcom
int3
loope
inc
push
arpl
dec
push
xor
cmp
mov
push
popa
pop
push
(bad)
pop
push
jno
xor
inc
and
not
js
push
gs
arpl
mov
xor
pop
push
xchg
pop
pop
daa
mov
pop
jmp
mov
loope
fidiv
or
pop
xor
add
push
adc
xor
push
push
ds
push
dec
add
cld
pusha
pop
(bad)
rcl
(bad)
mov
pop
jmp
dec
aam
mov
add
jo
clc
pop
pop
pop
leave
fimul
jo
mov
mov
inc
fild
jo
mov
or
add
cld
ins
sbb
push
or
fsqrt
push
push
push
fnstcw
mov
out
add
or
xor
clc
mov
(bad)
je
xchg
ffreep
adc
add
bnd
lea
lea
int
mov
cmp
int3
sbb
inc
push
mov
popa
mov
push
sbb
add
retf
inc
xchg
and
dec
jl
inc
rcl
adc
sub
sbb
push
jo
icebp
int3
add
out
inc
pop
inc
xchg
add
jecxz
rcl
jmp
aad
lea
sub
jno
add
sub
mov
push
mov
nop
push
add
not
ins
or
pop
and
add
dec
or
test
xor
(bad)
js
loope
add
adc
nop
mov
ins
enter
in
adc
mov
lds
jg
cmc
imul
ss
ins
xchg
jo
mov
je
sbb
sub
cmp
fcomip
call
mov
xor
aaa
test
inc
jmp
inc
nop
leave
aad
push
lea
dec
ud2
mov
popa
pop
adc
ror
ret
xor
imul
mov
bound
ficomp
xor
(bad)
mov
mov
loopne
in
aas
inc
sbb
inc
pop
xchg
jmp
dec
pop
jnp
addr16
cmp
iret
xor
xchg
jl
fsubrp
loopne
pop
inc
push
xor
lea
and
je
or
and
jmp
sbb
inc
add
and
js
imul
mov
or
xchg
pop
sub
cmp
jbe
pop
imul
push
xchg
xchg
lea
inc
add
out
xchg
add
or
mov
fst
sub
ja
jmp
or
scas
or
push
call
adc
dec
in
test
and
or
and
outs
test
push
sub
push
sub
int
and
jae
xor
inc
sbb
sbb
cdq
bound
or
pop
sub
add
mov
push
jae
push
mov
adc
push
jb
push
sub
push
test
fs
xor
push
movs
pop
or
ins
movs
shl
or
push
sub
test
outs
mov
push
movs
mov
stos
popf
add
push
popa
inc
dec
ror
sar
scas
inc
adc
rcr
or
add
jo
dec
outs
add
cmp
mov
mov
std
pop
inc
cmps
hlt
stos
pop
and
ins
push
dec
cld
pop
test
push
test
sbb
xor
or
ffreep
and
push
push
push
push
sub
sub
stos
jl
push
pusha
jae
ss
cmp
stos
mov
lock
or
jl
fild
inc
mov
adc
mov
inc
cld
ins
pop
xor
pop
cmp
aam
or
push
or
cmc
pop
add
mov
adc
aas
lods
out
mov
dec
enter
push
push
push
pop
pop
sub
rol
jmp
ror
pop
repnz
mov
add
cmps
jo
sub
mov
or
hlt
fs
mov
shl
cmps
mov
inc
fs
push
fdivr
or
push
sub
aam
retf
in
test
pushf
pop
cs
(bad)
sar
hlt
xor
and
dec
jnp
pop
xchg
push
adc
test
push
mov
ins
mov
enter
or
lds
fisttp
mov
or
add
shl
jp
mov
pop
(bad)
jbe
iret
cdq
or
ror
or
mov
xor
xchg
daa
adc
xor
xchg
ret
jle
(bad)
xor
int3
in
cmp
loop
adc
sub
fcom
out
and
jae
sub
mov
sub
popa
xor
rcl
pop
sahf
jno
cld
adc
add
add
test
push
movs
and
mov
sahf
mov
or
ja
ins
sbb
ss
add
pop
sub
sbb
adc
(bad)
dec
arpl
jmp
sub
sub
ds
or
sbb
out
imul
add
and
xor
mov
jmp
fistp
sbb
js
adc
push
mov
fdivr
xchg
add
cmp
sbb
and
mov
nop
fldcw
nop
push
test
adc
xchg
xor
cmp
loop
pop
adc
cmp
mov
adc
add
jecxz
jne
pop
mov
inc
pop
call
add
ret
sub
cmp
ja
movsx
add
jmp
iret
daa
mov
sbb
sbb
shl
in
add
push
lods
inc
lock
xchg
add
pop
xor
ss
mov
or
shr
fsubr
adc
shl
inc
cli
xchg
div
dec
or
inc
xor
jp
dec
push
or
xchg
pop
bswap
add
sqrtps
and
dec
sbb
xor
xor
loopne
push
add
pop
sub
and
pop
scas
(bad)
pop
popf
sub
cmp
cwde
cs
fwait
push
xor
or
pop
adc
dec
test
outs
fsubr
inc
mov
aas
mov
call
push
add
mov
sbb
push
pop
mov
sub
and
fiadd
lods
faddp
je
and
cmp
ds
pop
cmps
pop
dec
push
add
cmp
push
clc
in
cld
movs
sbb
hlt
movzx
add
xchg
add
inc
jne
out
gs
mov
pop
inc
ret
lods
cld
jp
ja
add
fucomip
push
adc
jge
aaa
add
and
jae
adc
add
xor
jne
std
push
pop
ror
cmp
jne
outs
xchg
mov
cmp
jae
je
sub
lahf
xor
pop
ret
mov
mov
mov
pop
es
or
mov
popa
lock
add
dec
enter
or
add
pop
enter
out
xor
xchg
xchg
fwait
mov
call
ja
mov
cmp
or
xchg
leave
or
or
cmp
and
push
or
or
jmp
or
in
push
jb
xor
in
pop
xor
dec
cdq
in
or
jmp
mov
aas
pop
div
aaa
inc
adc
loopne
inc
(bad)
sbb
dec
loopne
xor
mov
jmp
mov
in
pop
lods
mov
push
(bad)
stos
pop
(bad)
int3
push
mov
lahf
mov
cmc
cmps
imul
ja
call
add
or
popa
add
nop
cmp
pop
adc
or
into
sub
sbb
pop
mov
push
mov
jge
leave
les
sahf
inc
xor
xchg
xchg
mov
cmp
jns
cmp
in
cmp
(bad)
xchg
cmp
xchg
cmp
cmp
push
repnz
dec
test
sahf
xor
adc
call
retf
or
or
inc
shr
ret
ror
add
or
scas
push
rcl
stos
or
xchg
mov
enter
hlt
clc
nop
out
push
lock
in
push
xor
outs
add
mov
sbb
int3
jb
add
sbb
jmp
mov
dec
jmp
adc
test
mov
inc
jmp
push
xchg
push
lea
popa
fst
dec
mov
dec
push
pop
jbe
push
jmp
mov
pop
mov
call
ficom
loop
push
pop
arpl
mov
mov
mul
adc
mov
aad
mov
movs
dec
add
mov
dec
mov
cmp
das
dec
mov
xlat
push
add
mov
adc
push
sub
and
les
jmp
sub
test
add
push
loopne
cmp
aas
or
mov
jge
add
push
dec
ficom
div
cmp
xor
xchg
push
in
shl
push
xor
xchg
outs
ret
xor
xor
pop
test
test
jp
sbb
xor
ror
outs
fcom
or
push
aas
dec
pop
push
push
jmp
arpl
mov
push
push
xor
push
leave
and
inc
mov
dec
sub
pop
mov
pop
add
cld
fwait
test
xchg
or
push
mov
or
mov
fist
inc
shl
push
adc
sahf
push
lea
sub
push
cmp
or
lock
mov
adc
sub
stos
pop
push
rol
jbe
mov
add
sbb
or
jp
pop
dec
lea
pop
movs
adc
xor
sub
or
fist
lea
jmp
mov
test
jne
jge
push
jnp
or
ja
je
cmp
imul
and
mov
jne
in
add
jns
xchg
push
and
repnz
dec
test
xchg
xchg
jns
xchg
daa
mov
mov
and
test
adc
push
jmp
jae
ins
sub
scas
xlat
pop
mov
push
push
fcom
sub
sbb
push
enter
add
sti
cmp
js
sbb
xchg
push
ror
pop
adc
mov
inc
into
pop
lods
cmps
mov
jmp
shr
sbb
add
push
push
sub
jne
mov
(bad)
and
retf
or
call
fstp
cld
ror
enter
add
dec
or
add
push
call
xchg
popa
cmps
adc
xor
clc
pusha
enter
adc
or
and
in
xchg
adc
mov
sub
xchg
(bad)
cmc
pop
mov
sub
push
daa
in
add
loope
sub
hlt
leave
out
or
rcl
push
and
mov
mov
ss
add
aaa
xchg
call
mov
mov
sar
sbb
push
add
test
add
test
test
aad
prefetch
or
xchg
cwde
jbe
clc
out
outs
shl
pop
xor
sbb
movs
add
je
add
je
add
or
shr
pop
fsubr
scas
loopne
mov
dec
sub
xlat
fwait
sbb
cmp
xor
ds
xchg
or
pop
mov
sbb
pusha
not
push
mov
xor
lahf
sub
stos
inc
rol
jg
pop
shl
repz
pop
data16
push
add
pop
leave
fimul
dec
jne
das
xor
rcl
jge
add
pop
push
push
jne
add
rcl
or
jecxz
xor
je
je
or
shl
(bad)
dec
sbb
sbb
pop
add
cmp
je
add
xor
push
ins
inc
adc
mov
inc
mov
adc
test
lea
jle
jne
loopne
sub
xor
(bad)
push
retf
ror
pop
rol
and
out
(bad)
jmp
jne
or
test
lock
test
xchg
sbb
lea
jmp
ins
push
mov
push
or
div
xchg
pop
outs
imul
cmp
mov
cmp
mov
clc
push
ja
mov
sub
inc
push
fadd
(bad)
adc
and
leave
mov
mov
ins
mov
or
and
loope
or
adc
cmp
out
xor
or
mov
inc
jmp
lea
in
cmp
test
push
sub
or
mov
not
dec
jp
inc
clc
push
cmp
call
mov
pop
add
sti
repz
sbb
ja
cmp
and
xor
cmp
xor
ror
ror
push
or
mov
hlt
add
in
sar
cmp
cmc
pop
and
jb
cmp
je
mov
add
ror
retf
sub
fidivr
add
add
add
int3
call
ror
outs
mov
dec
hlt
jne
mov
lock
and
stc
loop
popa
arpl
fsubr
mov
cmp
out
aad
xchg
into
add
jbe
xchg
ror
pop
call
mov
push
add
or
mov
pop
(bad)
(bad)
xor
loopne
inc
dec
int3
and
adc
adc
push
fmul
mov
retf
cmp
jne
xchg
clc
inc
jmp
inc
cmp
ja
fistp
outs
lea
and
jb
push
mov
pop
xchg
sbb
cmp
add
jbe
aas
adc
mov
call
mov
js
or
add
aaa
cmp
in
sbb
not
and
jo
mov
xor
adc
inc
mov
push
or
inc
inc
push
mov
add
fwait
in
movs
mov
mov
mov
lea
fsub
jle
or
inc
add
sub
sbb
pop
stc
sbb
popa
or
lock
test
xor
sbb
cmc
gs
dec
jo
push
push
sub
inc
or
sub
mov
or
jmp
mov
ror
adc
sbb
js
mov
mov
int3
cmp
or
push
or
stos
pop
neg
jne
mov
clc
call
mov
push
push
jbe
outs
into
or
jmp
sub
xor
jp
ins
fwait
and
leave
call
add
sbb
sub
cmp
xor
and
cwde
pop
cmps
adc
or
fisub
mov
and
push
fisttp
cwde
adc
mov
adc
push
sar
mov
test
mov
inc
dec
loop
sub
sub
add
shr
shl
adc
sbb
push
or
lock
jne
and
ja
cwde
jno
sub
xor
lea
repnz
sbb
cmp
(bad)
adc
jecxz
jmp
test
je
or
je
leave
inc
fild
push
pop
mov
iret
fistp
cli
xchg
sbb
dec
loop
push
adc
fs
xor
sti
mov
ds
pushf
cmps
mov
jge
cmp
jne
fiadd
adc
push
push
adc
dec
out
mov
cmp
or
dec
ins
and
fld
fmul
js
jmp
hlt
jbe
or
xor
push
push
outs
fsubr
inc
inc
xor
sub
mov
cmp
adc
jmp
retf
or
(bad)
clc
pop
es
mov
push
adc
jmp
mov
mov
adc
imul
push
inc
cmp
jne
(bad)
mov
sti
fisttp
aaa
arpl
stos
jp
ret
aaa
test
jmp
mov
scas
adc
push
mov
add
sub
xchg
push
sub
xchg
add
adc
and
rcl
fist
das
test
jmp
inc
mov
hlt
rcl
data16
cmps
xor
call
cmp
hlt
jb
les
push
jl
inc
inc
jmp
imul
jp
mov
push
shl
and
cmp
push
mov
pop
jae
(bad)
jne
add
inc
push
xor
pop
push
cmp
or
mov
pop
and
pop
mov
daa
jno
sub
clc
add
mov
lock
jmp
dec
cmp
pusha
lock
xor
jns
mul
push
fsubr
pop
je
cmp
or
add
sahf
dec
mov
movs
xor
pop
fsubr
adc
(bad)
adc
pushw
call
cld
aas
jb
cmp
push
sahf
dec
nop
mov
or
loop
dec
adc
out
sub
adc
ja
sbb
test
in
(bad)
mov
jae
enter
mov
add
sub
jg
xchg
bound
rcr
or
ja
cwde
mov
mov
cmp
inc
adc
ret
loopne
or
or
cmp
dec
retf
mov
scas
inc
test
bound
add
not
and
mov
push
add
cs
(bad)
sar
pop
inc
xor
adc
js
rcr
pusha
inc
imul
femms
fisttp
sbb
bound
or
outs
lods
adc
jle
jo
push
add
jle
add
mov
cld
pop
bound
and
adc
xor
xchg
daa
push
sbb
mov
das
stos
adc
out
jne
mov
mov
arpl
xchg
pushf
sub
outs
mov
push
stc
add
in
add
xor
imul
retf
and
mov
or
mov
in
sub
ficomp
sub
add
sti
inc
mov
jo
jp
push
mov
dec
add
and
adc
dec
add
xor
fcom
dec
add
cmp
sbb
adc
add
jg
jge
add
add
ror
out
mov
add
pop
mov
div
dec
in
fsub
cmps
loopne
mov
in
adc
push
es
inc
push
push
(bad)
pop
mov
mov
test
add
push
hlt
and
push
ret
test
adc
cld
cmp
xchg
ins
cmps
mov
cmp
jb
push
pop
xor
sub
stos
fild
lea
inc
cld
les
repnz
cwde
mov
or
jecxz
sbb
inc
out
adc
jnp
lock
sbb
xor
jnp
sub
add
pop
xchg
mov
jnp
push
stos
inc
pop
mov
iret
jmp
xor
jb
xchg
out
xor
push
(bad)
or
mov
(bad)
inc
aaa
push
push
push
xor
test
cmp
retf
push
mov
fs
or
pop
fisubr
movs
aas
push
inc
push
pop
data16
sbb
lea
push
push
sbb
and
push
inc
xchg
xchg
jmp
sub
mov
push
fisub
xor
popf
call
das
aaa
or
test
dec
xor
clc
inc
les
fild
je
push
aam
mov
scas
clc
sahf
push
push
(bad)
into
loopne
pop
jmp
xor
jne
adc
data16
adc
adc
push
add
or
jne
enter
cmps
frstor
adc
js
xor
dec
rcl
pop
scas
aad
nop
leave
add
push
inc
mov
pop
mov
outs
repnz
jmp
or
adc
adc
or
imul
and
add
scas
pop
or
les
push
dec
je
cmps
adc
and
stos
hlt
shl
movs
xchg
cmp
loopne
jle
hlt
add
dec
or
add
aad
sahf
test
add
(bad)
and
and
mov
add
(bad)
lea
mov
and
fucompp
add
pop
jae
xor
lods
and
(bad)
lea
jo
sbb
outs
adc
mov
and
cld
mov
or
push
test
push
sub
pop
mov
xchg
push
and
ror
mov
stc
sar
cmp
test
add
adc
push
dec
jecxz
repnz
rol
fimul
aas
(bad)
sbb
ret
add
mov
add
mov
xchg
xchg
xchg
inc
inc
data16
push
and
mov
pop
lock
push
push
push
je
mov
test
dec
sbb
sub
jno
and
push
mov
and
ss
lea
cwde
dec
cdq
inc
mov
mov
(bad)
ror
xchg
pop
push
shl
add
leave
jl
cmp
shl
sbb
or
jnp
mov
mov
adc
(bad)
dec
add
pop
push
mov
mov
xchg
adc
xlat
lahf
xchg
xor
sub
icebp
dec
jae
loopne
es
xor
jnp
loope
pop
jle
push
je
mov
mov
mov
fcom
and
pop
and
in
xchg
arpl
mov
sub
xchg
loop
es
mov
mov
jmp
btc
mul
cdq
fucom
stos
mov
cld
xchg
jmp
pusha
pop
retf
(bad)
fsubr
pop
adc
push
lea
jp
aaa
loopne
cmp
mov
or
or
jecxz
xchg
pop
test
add
jbe
jmp
sub
jecxz
lods
cmps
popa
pusha
mov
imul
(bad)
in
or
popf
aam
scas
fcom
fmul
hlt
loopne
in
mov
sub
inc
push
fdivr
retf
xchg
and
ret
shl
push
add
pop
jmp
scas
jnp
stos
cdq
xor
xor
adc
sbb
push
adc
sar
push
mov
and
xor
adc
cs
cwde
add
or
pop
add
ins
and
cld
and
xchg
inc
xor
xor
jl
inc
mov
and
mov
icebp
or
loopne
dec
dec
popf
inc
jge
iret
dec
mov
add
sub
not
sub
dec
sub
pop
add
mov
pusha
mov
and
add
ins
imul
xor
fwait
dec
inc
jmp
push
adc
and
inc
movs
mov
cmp
movs
mov
dec
push
icebp
xchg
ss
pop
call
test
push
add
sbb
sbb
xchg
mov
cmp
fmul
dec
add
mov
cmp
jle
inc
ret
rcl
add
dec
push
cmps
ins
mov
cmp
mov
mov
sub
inc
rcr
add
cmp
push
or
mov
das
mov
stc
push
add
mov
scas
and
add
xor
shr
or
sti
mov
(bad)
test
add
hlt
xchg
mov
jae
xor
mov
jl
jg
push
push
loop
add
inc
mov
jne
dec
fsub
cmp
cmp
int3
in
ret
mov
mov
jmp
call
mov
cld
cmp
and
push
je
xchg
dec
mov
inc
or
mov
das
sbb
test
sub
scas
pop
ret
push
(bad)
push
in
ret
mov
mov
xchg
dec
sub
sub
loop
or
xor
rol
fs
leave
mov
sbb
xchg
into
push
sub
lds
add
mov
adc
adc
movs
jo
inc
cmp
popa
mov
ins
inc
mov
inc
cmp
add
add
inc
aam
cmp
add
xchg
pop
sbb
lods
add
xchg
test
or
in
mov
pop
popf
sbb
cmc
add
mov
jnp
std
sub
xchg
std
aas
inc
mov
lea
shl
xlat
les
cmp
mov
mov
xor
xor
jns
xor
push
cmps
loope
cmp
mov
mov
add
push
adc
jmp
scas
or
or
stos
sbb
jecxz
add
fucomp
xor
xor
ror
push
bound
sbb
or
jnp
cmp
sahf
lds
jp
out
aad
shl
push
mov
out
push
jl
mov
jne
and
movsx
inc
sub
push
icebp
pop
cmp
test
rol
or
inc
dec
leave
and
inc
pop
and
call
js
call
cmp
popf
dec
xor
add
popf
inc
mov
das
mov
xchg
ds
lock
in
mov
and
mov
push
add
cmp
inc
mov
sub
jne
movs
jae
or
jmp
dec
jg
fdiv
mov
lock
jp
std
cmp
daa
and
sbb
jg
in
push
loope
mov
mov
jbe
push
outs
call
add
repnz
inc
cmp
sti
outs
outs
or
adc
adc
push
add
rol
test
add
adc
mov
dec
sbb
cmp
cmp
push
dec
cmp
xor
dec
ret
pop
icebp
push
or
repnz
movs
jnp
pop
test
je
mov
add
sub
push
add
cmp
sub
cmp
mov
sub
fstp
jmp
ret
popa
cli
or
rcr
pop
jmp
mov
fild
jecxz
push
loopne
retf
mov
test
dec
test
push
pusha
fiadd
or
pop
jp
push
idiv
and
test
and
loopne
lock
je
push
add
adc
push
sbb
daa
stos
inc
inc
or
pop
fiadd
add
cmp
inc
add
dec
std
jo
in
cmp
pop
inc
call
inc
fwait
push
cmp
pushf
pop
or
int
psubsb
sbb
mov
sub
pop
mov
xchg
js
sub
js
(bad)
movs
ret
cs
cmps
lock
pop
loope
push
xor
pop
div
cmp
jb
imul
into
sub
jne
inc
jmp
test
daa
rcl
sbb
popf
ret
xor
xor
or
push
sub
add
cld
lea
push
push
or
dec
daa
sub
(bad)
jb
fiadd
ds
es
fs
adc
cmp
sbb
fwait
sbb
add
add
cs
xchg
je
popf
mov
cmc
inc
push
pop
push
cmp
arpl
mov
mov
add
push
(bad)
push
add
add
mov
adc
xchg
pop
ins
inc
mov
inc
or
dec
add
popf
test
pop
test
mov
imul
push
mov
(bad)
sub
add
mov
dec
into
push
sbb
cmp
jne
sbb
mov
mov
rcl
adc
push
ror
adc
shl
xchg
popa
sub
add
loopne
add
add
xchg
sub
rcr
cmp
mov
aam
pop
outs
dec
fcom
in
movs
sbb
sbb
adc
adc
fsubr
in
mov
inc
(bad)
jl
jp
add
cmp
je
cmp
cmp
mov
add
jmp
add
or
div
pop
ret
jne
imul
mov
ins
movs
mov
push
call
(bad)
je
add
cmp
je
pop
or
mov
movzx
push
aaa
add
shl
mov
cmp
jle
call
fnstsw
pusha
dec
inc
ror
dec
xchg
push
mov
pusha
enter
push
daa
(bad)
ror
push
mov
or
sub
pop
ror
cli
mov
ror
int3
ror
pusha
jle
adc
das
jno
dec
es
lea
dec
shr
inc
data16
or
lock
retf
mov
mov
mov
xor
push
pop
movs
and
jecxz
not
sbb
clc
sbb
inc
stos
mov
das
dec
mov
inc
mov
push
xchg
xchg
or
fild
(bad)
and
(bad)
sbb
mov
fadd
jle
scas
xchg
or
sub
dec
rcr
xchg
int3
cwde
and
sub
jmp
mov
dec
dec
pop
push
in
fadd
es
dec
mov
sbb
pop
imul
sub
push
add
(bad)
cmp
nop
test
iret
mov
repz
adc
rcl
imul
es
inc
xchg
adc
jp
mov
repnz
xchg
cmp
in
(bad)
sbb
jp
je
mov
and
xor
mov
sub
or
rol
clc
and
push
sub
push
push
jnp
movs
push
imul
fadd
dec
jnp
aam
dec
fmul
dec
or
ficom
jns
pop
das
es
mov
stos
push
add
arpl
push
mov
call
mov
repz
mov
or
and
outs
rsqrtps
loopne
mov
cmp
push
mov
mov
cld
inc
fadd
mul
test
je
mov
add
dec
mov
inc
inc
inc
adc
mov
daa
inc
pop
leave
mov
mov
shl
mov
add
test
adc
sub
xchg
mov
loopne
jl
inc
and
pop
inc
xor
cmp
and
sub
test
or
add
pop
rcl
pop
inc
jo
test
jge
loopne
xor
dec
push
stos
mov
adc
mov
xor
fimul
ins
push
cld
add
mov
pop
jo
pop
add
lahf
adc
pop
or
mov
or
push
mov
retf
and
pusha
jbe
add
adc
inc
cmps
inc
xor
scas
ja
fsubr
or
adc
push
or
xchg
lods
add
fist
ret
stos
add
jmp
pop
lea
dec
shr
bound
call
jae
xor
push
jl
out
inc
loopne
ds
pop
adc
and
push
bound
sbb
adc
add
dec
test
repnz
ds
adc
loopne
jns
fsubr
pop
add
xor
and
mov
retf
ins
inc
js
sahf
cmp
push
mov
dec
arpl
and
mov
lea
cmp
loopne
inc
mov
xchg
xor
mov
add
sbb
cwde
push
add
int
mov
pop
sub
neg
adc
ins
shr
cmp
jae
push
jae
jbe
adc
push
or
outs
je
jl
jne
jne
fst
xor
cmp
jne
cmp
hlt
loopne
vxorps
or
dec
lea
jmp
vpcmpeqw
vpmovmskb
push
ins
xor
jne
xchg
in
out
fstp
dec
jmp
fwait
sub
hlt
sub
cwde
lds
ja
push
mov
mov
in
pop
mov
push
ror
adc
add
inc
mov
leave
mov
sbb
fcmovnu
adc
jne
push
xchg
dec
shl
jmp
or
rcl
stos
adc
jge
push
test
or
mov
or
xchg
movs
dec
fild
push
adc
or
dec
div
cwde
ins
ins
not
test
add
mov
nop
jmp
or
fidivr
cmps
add
jne
mov
shld
pop
adc
adc
loopne
fst
or
jne
and
imul
sahf
les
adc
and
push
test
jg
fsqrt
data16
std
test
or
mov
stos
or
aas
scas
and
dec
out
jg
sub
int3
fst
or
and
int3
fistp
jmp
sub
je
fstp
fnsetpm(287
fcom
inc
adc
cli
and
(bad)
adc
pop
mov
ret
mov
jne
xor
dec
test
sub
mov
mov
shr
sub
inc
fidiv
das
jp
pop
lods
in
or
jno
je
or
sahf
mov
or
test
loope
test
jo
mov
leave
shl
push
push
lock
pop
and
dec
lock
and
or
xor
jno
push
dec
add
xor
jg
movs
inc
push
adc
mov
cmp
(bad)
adc
add
adc
or
cmps
adc
push
or
dec
je
pop
stc
add
ins
(bad)
adc
push
test
inc
(bad)
cmp
in
jle
cmp
iret
or
adc
mov
sbb
jo
pop
adc
xor
and
xor
sub
and
dec
sub
inc
xor
jno
sbb
inc
and
js
and
les
jle
add
das
dec
sub
jbe
pop
dec
aas
imul
cmp
inc
loope
ret
ficom
sbb
adc
pop
xchg
icebp
ds
pop
pusha
mov
push
mov
push
xchg
jb
sub
or
out
pop
add
pop
fisubr
dec
in
push
mov
ins
sbb
xor
movs
fisubr
lea
pop
dec
push
or
fisttp
xor
push
or
jmp
mov
fisttp
pop
ret
push
fsub
push
and
inc
repz
jmp
inc
push
pop
mul
xor
mov
clc
mov
push
ficom
sbb
std
push
push
push
and
and
mov
ret
ins
jge
xchg
mov
fild
xchg
je
(bad)
shl
std
test
pop
rcr
loopne
inc
add
push
arpl
mov
xor
add
adc
xor
push
push
out
xlat
mov
inc
xchg
call
sar
adc
mov
data16
leave
sbb
inc
cmp
aad
rcl
hlt
inc
in
add
jne
cmp
pop
or
loop
jb
and
push
sbb
test
mov
jne
push
jle
add
sbb
ret
push
les
pushf
pop
pop
mov
ret
pop
pushf
and
dec
daa
imul
ret
fldenv
inc
pop
nop
lock
(bad)
or
stc
scas
lods
push
xchg
cmps
sbb
pop
enter
push
idiv
(bad)
and
xor
or
push
mov
or
push
push
pop
js
cli
cmp
inc
add
test
pop
and
jge
hlt
adc
cwde
stos
pop
xor
sub
mov
mov
mov
cmp
aas
push
push
dec
ret
adc
push
into
sbb
jno
adc
retf
es
add
dec
lods
sar
jmp
mov
stos
add
push
sub
nop
mov
sbb
sub
add
je
sbb
push
or
xchg
dec
leave
add
sahf
xchg
retf
nop
in
call
push
pushf
not
shl
test
popa
movs
lods
adc
test
ins
jne
pushf
adc
and
jns
int
cmp
rcl
pop
xor
pop
stos
adc
adc
mov
ffree
not
adc
and
sbb
loop
push
and
cld
add
je
hlt
cld
pop
xor
mov
test
leave
in
jmp
push
shl
sub
test
aaa
xor
and
ds
push
sbb
adc
sbb
sbb
int3
shl
loope
cs
movs
xor
shl
nop
xlat
pusha
jae
fwait
and
jae
and
dec
or
popa
and
push
and
dec
movs
push
pushf
xchg
aam
or
push
bound
mov
cmp
sub
mov
mov
(bad)
push
mov
mov
add
aaa
and
fwait
(bad)
xchg
push
pop
fcomp
pop
mov
sbb
dec
push
jg
jg
sbb
ret
push
ret
ds
pusha
fs
sbb
mov
dec
sbb
sub
outs
iret
aaa
add
xchg
cmp
push
jnp
mov
push
nop
xchg
add
dec
mov
les
cli
jp
(bad)
les
adc
cmp
pop
push
jmp
int
inc
and
sub
mov
test
add
xchg
test
mov
in
mov
xor
mov
sub
test
adc
pusha
ror
retf
clc
(bad)
jne
mov
xchg
fadd
add
nop
test
sub
xor
leave
inc
push
adc
inc
aam
and
push
pop
jg
sub
add
add
ins
mov
lea
pop
xchg
mov
add
sar
sti
mov
mov
inc
mov
lea
xchg
cmc
sub
mov
inc
sub
or
pop
adc
push
inc
jo
sbb
clc
dec
int3
add
or
xor
and
mov
add
fistp
clc
hlt
mov
or
test
xchg
add
or
inc
jae
(bad)
pop
and
out
cmps
fst
fst
sar
or
jo
push
push
push
(bad)
adc
fsub
out
xor
push
fild
inc
sub
fdiv
nop
out
inc
push
dec
cmps
and
imul
int
push
or
mov
mov
adc
sbb
cmp
mov
loopne
jmp
push
lea
aaa
xchg
pop
sub
and
ins
loope
xchg
into
adc
pop
lock
ja
mov
inc
not
cmp
and
fimul
lock
mov
jmp
mov
mov
mov
add
push
and
daa
xor
xor
push
out
xchg
cmc
mov
add
inc
lods
mov
cld
mov
inc
jbe
mov
lock
(bad)
cwde
xor
movs
inc
daa
mov
pop
add
push
add
lods
jle
cmps
xchg
fldenv
clc
push
push
mov
xchg
hlt
shl
sbb
adc
fdivr
dec
or
xchg
iret
cmp
mov
cmps
dec
dec
push
xlat
cmps
jmp
jle
hlt
pop
sub
dec
lds
je
lea
es
cmp
cwde
jp
std
push
and
mov
add
loopne
sub
pop
aas
pop
push
loopne
jbe
(bad)
je
cmp
xor
(bad)
push
xchg
ds
cld
sub
xchg
or
cmp
push
mov
pop
test
push
push
pop
test
adc
popf
cmp
imul
add
pop
test
push
lds
dec
loopne
jmp
adc
inc
dec
in
cwde
inc
adc
aad
enter
xor
(bad)
jb
cmp
enter
adc
ficomp
fwait
adc
out
stos
(bad)
push
and
mov
xchg
lea
vandps
pop
call
jb
je
add
movs
and
pop
mov
rol
jmp
stos
push
dec
cmp
je
jbe
add
(bad)
sbb
stos
or
push
test
popf
cmp
xchg
sub
mov
lea
mov
jnp
cmp
shl
xor
xchg
sbb
imul
ins
inc
cmp
dec
mov
or
test
lock
je
mov
sub
adc
sbb
mov
cld
dec
or
(bad)
inc
fsub
in
into
loopne
adc
inc
dec
test
push
and
fst
hlt
xchg
add
loopne
outs
mov
dec
or
push
lea
xor
sbb
lea
sub
add
popa
adc
jae
push
adc
ins
inc
mov
xchg
sub
mov
sbb
cmp
imul
xor
jbe
add
adc
or
jae
and
add
pop
arpl
push
mov
push
retf
stos
mov
adc
pop
call
out
jne
pop
lea
pop
cmps
movs
sbb
js
icebp
daa
test
xchg
push
jmp
cmp
lea
popf
sub
rcr
(bad)
rol
std
jle
pop
data16
push
push
adc
or
add
bndstx
rcl
adc
arpl
adc
ins
test
adc
not
pop
inc
xor
mov
or
sti
rol
and
loope
push
(bad)
loopne
jae
test
jge
jo
cmp
mov
dec
inc
out
stos
mov
mov
lock
sbb
ja
mov
cmps
and
cmps
push
es
outs
lahf
(bad)
or
or
je
mov
test
je
or
aad
or
push
rol
and
cmp
stos
out
stc
push
imul
not
sbb
mov
mov
mov
or
inc
jmp
ret
jnp
add
add
dec
out
or
xor
sub
dec
mov
sti
and
nop
call
hlt
or
cmp
xchg
push
pop
lock
sbb
and
cmp
pop
mov
pop
sbb
fsubr
push
mov
inc
jmp
adc
jne
fadd
dec
scas
test
and
jecxz
les
mov
mov
lods
and
cmp
shl
jo
push
push
rcr
les
fnsave
aam
aam
ror
in
add
add
cmps
xor
mov
loopne
(bad)
test
not
out
leave
push
xchg
inc
and
xor
loopne
frstor
mov
mov
hlt
pop
mov
inc
sub
js
jge
mov
mov
adc
nop
jmp
sbb
mov
xchg
mov
sub
clc
pop
adc
adc
test
push
add
aam
add
je
pop
jno
scas
leave
pop
xchg
ja
loop
lods
or
mov
inc
sub
dec
iret
xlat
adc
aad
loop
dec
nop
ins
jmp
xchg
lods
sahf
push
vmovaps
push
out
pushf
adc
or
fsub
cmps
push
mov
les
xor
push
ror
add
dec
in
add
cli
js
es
cmp
jmp
popa
pop
jns
movs
pop
data16
sahf
sbb
or
lods
mov
inc
push
sub
and
movs
movs
fimul
jecxz
ret
and
sub
scas
jo
xor
cwde
fidivr
je
sub
push
adc
dec
or
jne
out
push
adc
or
pcmpeqb
fadd
out
jle
push
jg
jmp
cmc
inc
(bad)
fsub
mov
stos
sub
loop
stos
jmp
xor
leave
ret
xor
repnz
push
or
mov
iret
push
sub
int3
lods
addr16
cmp
add
mov
xchg
or
sahf
(bad)
clc
add
fwait
dec
nop
adc
enter
test
push
retf
sbb
mov
sbb
mov
aam
or
jne
mov
and
pusha
cmp
dec
or
pop
inc
mov
int3
adc
xor
imul
test
add
les
lds
and
mov
lds
ds
std
cmps
or
add
cmps
ss
pop
and
fmul
ret
lds
mov
xor
stos
mov
or
add
add
ret
push
pop
cdq
dec
or
cwde
mov
and
push
mov
xchg
pop
cld
popa
adc
push
sub
test
jne
xchg
xor
repnz
dec
push
mov
cs
cmp
outs
outs
adc
(bad)
push
rep
shr
ficom
mov
jge
and
lea
retf
jmp
or
and
scas
dec
popa
sti
ins
jge
jne
or
neg
jmp
push
sub
ss
jne
xchg
add
mov
sbb
je
lea
xchg
fcom
inc
jecxz
cli
pusha
cmp
fstp
jmp
and
lods
cmp
out
sbb
dec
jnp
add
mov
sub
bt
xor
or
xchg
add
mov
adc
sub
je
add
inc
and
adc
sub
push
adc
push
je
cmp
xchg
ins
stos
push
inc
pop
push
inc
repnz
test
ficom
adc
stos
xchg
add
sub
push
pop
or
pop
inc
dec
mov
xor
test
aam
adc
add
sub
movs
into
mov
push
and
inc
dec
add
fdiv
aam
ret
shr
sub
jmp
cmp
sar
push
mov
fbld
sbb
not
and
je
push
(bad)
xlat
cmps
inc
shl
inc
add
xchg
cdq
popa
test
inc
shl
mov
stc
add
inc
fcmovb
scas
lods
sub
mov
bound
(bad)
in
push
and
ja
sbb
jmp
pop
sub
(bad)
sbb
repnz
lock
inc
pop
inc
push
hlt
adc
cmps
aaa
cmp
adc
xchg
push
or
xchg
cmps
test
cmp
dec
fsubr
loopne
icebp
inc
cld
mov
stos
data16
jge
xchg
and
add
sbb
xor
and
ror
ret
jne
ret
mov
pop
repnz
outs
xchg
add
inc
adc
mov
adc
push
hlt
nop
call
and
int3
sub
add
inc
xor
not
movs
ficom
sbb
adc
add
sub
cmp
lea
pop
pusha
push
cmc
push
sub
push
mov
mov
sbb
inc
aas
imul
sub
loope
jp
jmp
out
jne
cmp
sbb
jne
lea
dec
rol
add
xor
mov
es
xchg
and
pop
mov
adc
(bad)
repnz
or
cmp
inc
mov
retf
outs
dec
pusha
mov
cmp
push
push
adc
and
pop
push
mov
loopne
add
jo
jmp
mov
ins
push
idiv
push
inc
(bad)
movs
out
adc
inc
lea
cs
sar
rcl
test
push
sahf
adc
fidiv
fcomp
sbb
pop
mov
xchg
mov
inc
push
in
push
into
mov
mov
sbb
or
ret
cmp
fs
cmps
lahf
inc
test
ret
out
xchg
xchg
popf
loopne
jnp
push
push
pop
or
or
mov
call
(bad)
pop
(bad)
dec
icebp
adc
and
mov
ja
aas
inc
rol
push
push
dec
test
lods
inc
sbb
add
cdq
xor
lods
icebp
add
or
jle
leave
jb
xchg
or
les
or
dec
inc
(bad)
das
loope
push
fld
test
lods
inc
popa
dec
add
int3
adc
push
jle
int3
sub
sar
or
loopne
jmp
dec
xchg
push
pop
jmp
lea
mov
cmp
cmps
ins
call
aas
(bad)
mov
inc
adc
push
leave
mov
dec
aam
adc
add
(bad)
or
fcom
or
inc
xchg
xchg
xchg
inc
loopne
push
dec
clc
dec
push
mov
inc
fmul
and
mov
adc
int
push
adc
scas
ror
push
jae
push
lea
mov
cmp
je
das
lods
mov
xor
daa
enter
ret
ins
add
cdq
lods
xor
mov
jne
imul
push
pop
mov
test
mov
clc
jl
cmp
enter
pop
bound
push
sbb
fsubrp
lods
jae
inc
mov
cmp
mov
pop
fcmovne
fcom
or
add
xchg
mov
mul
or
cmp
shl
fwait
dec
mov
fdiv
mov
dec
dec
jg
inc
add
add
cmp
push
or
xor
test
or
lock
(bad)
mov
adc
hlt
jmp
cmc
fstp
imul
lock
sub
ret
inc
pop
dec
xchg
xchg
mov
adc
cmp
add
cmp
mov
xor
dec
clc
leave
jbe
addr16
or
pop
int
jg
xchg
lock
imul
test
movs
sbb
nop
inc
call
movs
cdq
and
and
inc
call
cdq
nop
inc
inc
dec
inc
inc
call
sbb
mov
cmp
in
call
dec
je
cli
mov
sbb
jl
xor
stos
jp
mov
inc
mov
mov
sbb
push
shr
clc
push
lds
rol
ins
popf
mov
xor
adc
(bad)
inc
inc
mov
mov
sbb
mov
mov
push
rcl
push
ins
push
sub
or
cld
(bad)
pop
push
xor
sub
mov
sbb
data16
push
and
push
dec
cs
sub
add
sub
sbb
jae
sub
xchg
mov
movs
mov
xchg
out
fisubr
sub
das
push
or
leave
push
xor
movs
pusha
adc
inc
sub
xchg
imul
add
retf
adc
(bad)
mov
mov
push
das
adc
lahf
nop
outs
jmp
mov
jmp
jb
add
jg
sub
jbe
outs
cli
dec
push
in
jmp
mov
hlt
mov
xor
or
sbb
fwait
and
jmp
cmp
inc
fiadd
or
cwde
inc
xor
inc
test
dec
and
or
or
or
xor
ror
xor
(bad)
imul
fsub
popf
les
scas
push
adc
and
ss
jae
jmp
jns
jl
mov
sub
inc
(bad)
call
add
cdq
nop
inc
or
xor
imul
inc
ss
rol
mov
lods
pop
jp
and
mov
(bad)
xchg
mov
add
loopne
cli
pop
push
in
loopne
test
fs
pushf
clc
add
mov
xchg
retf
pusha
dec
stc
adc
cli
scas
pop
fidiv
cmp
(bad)
pop
push
add
lock
jbe
add
mov
push
push
cmp
call
dec
and
xor
icebp
add
ror
and
stc
sub
push
dec
clc
push
push
aam
add
jne
hlt
or
fidivr
jnp
push
test
push
dec
repz
mov
or
test
mov
mov
mov
movlhps
repnz
mov
xor
popf
lock
mov
dec
jns
sbb
push
xchg
mov
bts
out
je
lahf
lods
inc
and
mov
add
inc
fstp
addr16
test
mov
or
cld
sub
dec
imul
and
pop
push
pop
xchg
xor
(bad)
(bad)
jmp
sub
push
push
mov
fcom
test
adc
jnp
ins
sbb
fadd
stc
cmp
xchg
and
inc
cmp
out
xor
icebp
jnp
xchg
inc
(bad)
dec
lods
cmp
cmp
out
mov
cmp
add
ins
or
and
test
bound
pop
(bad)
push
push
cmps
and
pop
sub
fdivr
jmp
push
mov
add
xor
sahf
xor
and
inc
adc
jne
lods
enter
push
cmp
in
xchg
shr
sub
sub
jb
imul
jns
sti
mov
nop
jl
and
rcr
inc
push
ins
add
push
add
ss
pop
and
jecxz
lods
leave
pop
cmp
loop
ret
repnz
adc
push
cmp
(bad)
lea
adc
cmp
push
test
xor
xchg
add
test
xor
or
sbb
mov
or
mov
in
(bad)
in
sbb
sbb
rcl
and
push
pop
adc
add
adc
adc
dec
and
jo
fmul
fs
ds
cdq
lods
inc
jae
sbb
retf
icebp
and
add
in
mov
sub
and
lea
mov
(bad)
push
fdivr
mov
adc
stos
push
adc
adc
movs
push
out
jb
ss
adc
shl
or
test
add
push
inc
out
xor
shl
adc
xlat
mov
add
xlat
les
imul
push
in
adc
mov
test
mov
or
pop
mov
inc
or
je
mov
div
ror
jl
mov
jbe
push
call
lock
sbb
pop
push
jne
or
push
add
cwde
lea
dec
sbb
add
dec
cld
call
sti
inc
dec
adc
adc
inc
pop
enter
push
sti
clc
mov
sbb
dec
or
fldcw
das
aaa
das
adc
nop
dec
fxtract
test
je
mov
fst
jp
das
(bad)
mul
xor
mov
jmp
sbb
in
inc
adc
sub
ret
js
or
test
clc
xor
hlt
add
xor
jo
mov
lea
adc
lock
inc
sbb
add
xor
sbb
xor
dec
pusha
cmp
icebp
or
inc
push
mov
pop
stos
sbb
loope
mov
pop
pop
ror
add
push
inc
xor
pop
mov
rcr
imul
sbb
adc
arpl
pop
inc
sbb
es
mov
mov
push
and
or
push
lea
mov
dec
stos
mov
adc
test
pop
pop
jo
sbb
jg
push
icebp
inc
sub
mov
inc
or
aaa
ret
mov
inc
mov
adc
cli
jl
or
sar
cmps
mov
cmp
push
jbe
stc
push
sbb
push
sbb
mov
pop
add
ins
push
inc
mov
in
les
dec
es
cwde
dec
or
fs
or
mov
or
repnz
shl
stos
pop
pop
mov
lods
sub
jmp
add
inc
ret
ror
(bad)
repnz
aad
adc
loope
and
dec
je
xchg
popa
adc
es
fidivr
sub
popa
ins
cmp
out
push
xchg
lea
jne
cmp
pop
mov
xchg
add
xchg
sbb
push
push
or
push
pop
fwait
mov
inc
sub
and
or
add
pop
mov
dec
dec
push
stos
dec
clc
mov
pop
mov
or
pop
sbb
retf
xor
pusha
imul
iret
xor
and
inc
add
pop
hlt
cmp
repnz
adc
cmp
test
fisubr
push
push
push
fidivr
cmp
aaa
mov
setne
xor
setb
and
adc
adc
jne
xor
or
jmp
pop
xor
jmp
enter
lock
out
inc
call
repz
jecxz
inc
jb
or
mov
ret
sbb
inc
jmp
sbb
inc
test
mov
add
sti
das
pop
inc
push
mov
leave
and
stos
aas
movs
jne
xchg
jne
and
or
sti
inc
pop
lods
cmps
push
popa
push
bound
ds
out
push
popf
js
scas
xor
int3
loopne
inc
mov
std
nop
div
add
pop
pop
push
imul
pop
add
iret
movs
arpl
(bad)
add
inc
cmp
pop
cmp
je
rol
out
movs
mov
rcr
push
cmp
push
mov
scas
ins
inc
sbb
cld
inc
repnz
add
stos
cmps
mov
inc
and
cmp
inc
pusha
enter
pusha
aad
clc
pop
rcl
rol
sub
pop
adc
cmps
in
shl
or
aaa
hlt
imul
pusha
je
or
aaa
sbb
sbb
sbb
arpl
xchg
xor
mov
mov
mov
mov
jl
push
cmp
xchg
(bad)
lock
pop
jne
or
add
add
nop
call
sar
imul
imul
adc
dec
inc
test
lds
sbb
mov
jne
pop
(bad)
add
shl
xchg
popf
dec
sub
rcl
hlt
or
pop
jb
jns
add
push
rcl
jmp
pop
das
ss
inc
adc
adc
sbb
mov
mov
add
jo
cmp
(bad)
stos
test
mov
hlt
cmp
ror
cmp
jp
push
retf
push
stc
ret
(bad)
fimul
shl
and
ror
and
or
sub
and
fild
or
and
xor
sub
in
call
jmp
fdivr
addr16
jmp
push
add
xchg
sub
or
cs
push
sbb
ror
loop
rcl
es
push
or
add
push
mov
inc
push
inc
cmp
in
dec
pop
retf
lea
inc
ror
retf
or
push
pop
sbb
dec
pushf
inc
mov
and
mov
add
cmp
(bad)
jmp
je
jnp
cmp
jle
push
mov
pop
push
sbb
add
add
mov
outs
call
push
xchg
jle
cmp
mov
cmps
mov
mov
(bad)
scas
cli
xor
es
push
scas
mov
mov
push
xor
inc
inc
sub
repz
test
mov
mul
shr
jb
mov
mov
xor
mov
es
xor
or
pop
cmps
push
sbb
mov
imul
cwde
js
(bad)
pop
(bad)
retf
mov
int
dec
inc
pop
mov
pop
push
sub
lea
lods
jmp
nop
cmps
mov
push
je
jmp
push
fst
push
push
fimul
push
push
add
fwait
mul
sbb
push
push
add
popa
sbb
xchg
or
in
pop
pop
and
mov
or
mov
inc
fisub
mov
pop
mov
xchg
mov
xchg
(bad)
add
add
dec
xlat
sbb
and
mov
jae
(bad)
in
and
fnstenv
sbb
ja
add
or
xor
inc
add
mov
or
lock
pop
test
ror
add
mov
dec
mov
cmp
mov
sub
inc
adc
mov
push
dec
pusha
cmp
test
mov
test
add
mov
xchg
pushf
cmp
mov
pop
movhps
pop
cmp
das
call
(bad)
adc
adc
mov
loop
cld
aaa
or
adc
xor
and
sahf
sub
inc
in
push
pop
mov
les
js
xchg
mov
cmp
call
pop
pop
sub
cmps
push
add
cmp
cdq
sbb
push
jne
lea
fdiv
adc
mov
jns
xor
add
sub
ror
and
and
lock
mov
sbb
sbb
and
cmp
je
shr
add
aas
sub
push
jo
test
sbb
jnp
push
add
add
imul
jmp
push
movs
ret
mov
ret
and
jg
lods
jno
push
cmp
test
loop
xlat
pusha
or
bound
pop
or
out
jmp
cli
mov
sti
icebp
pusha
add
pop
sub
mov
push
add
hlt
inc
mov
or
xchg
lea
cmp
pop
fst
test
scas
and
pop
push
stc
pop
leave
ins
adc
xchg
xor
add
outs
and
pusha
loopne
int3
popa
or
xchg
sbb
push
enter
sbb
xchg
data16
add
ficom
adc
add
mov
pop
call
jb
popa
sbb
(bad)
in
ss
iret
adc
push
shl
cld
add
sub
ss
loope
cmp
je
pop
dec
shr
mov
add
fwait
sahf
push
add
sub
sar
sub
iret
fisub
push
mov
cld
jns
retf
clc
jmp
or
sub
jge
push
xor
rcl
add
fidivr
add
loopne
scas
imul
adc
ror
jmp
call
in
adc
jb
in
call
jae
jge
mov
push
add
and
add
add
aam
mov
dec
adc
push
pop
(bad)
clc
loope
hlt
sbb
push
mov
mov
dec
mov
add
imul
push
mov
jmp
xchg
mov
hlt
add
std
leave
out
scas
lods
xchg
mov
pushf
scas
bound
test
mov
nop
or
sub
(bad)
push
xor
ret
js
std
add
jmp
adc
cmp
lods
shl
retf
push
jo
mov
xchg
test
das
mov
jmp
hlt
sbb
int3
(bad)
pop
ret
mov
xor
pop
bound
mov
xchg
sub
push
(bad)
mov
cmp
adc
and
cmp
xor
add
push
push
mov
adc
test
add
sub
fidivr
xchg
data16
(bad)
xor
test
mov
mov
test
pop
(bad)
mov
mov
push
cmp
and
shl
int3
cmp
stos
push
pusha
fimul
inc
jo
xchg
and
xchg
add
pop
and
inc
cwde
idiv
jle
je
lar
jne
inc
xor
popf
and
cmovno
xor
outs
or
or
test
in
mov
or
leave
or
add
test
in
and
push
adc
or
mov
pop
inc
dec
es
loopne
sahf
or
adc
mov
or
jmp
add
and
cmp
and
mov
push
mov
retf
xchg
mov
movs
outs
es
ds
and
or
dec
add
xchg
test
aas
pop
pop
push
mov
ins
cld
test
cld
xor
inc
inc
and
into
into
cwde
push
inc
inc
into
into
jb
ret
jg
retf
je
push
imul
mov
jne
or
pop
aaa
mov
mov
jb
daa
into
into
clc
out
sahf
ror
jl
add
add
scas
pop
lock
push
mov
sar
fbstp
ror
add
test
stc
shl
jmp
add
leave
leave
jae
leave
leave
leave
fscale
lahf
inc
movs
and
je
sub
ret
loopne
fisub
pop
jp
mov
nop
jge
shl
shl
mov
mov
lea
ror
nop
out
clc
mov
hlt
cs
shr
xchg
mov
dec
xlat
xchg
mov
into
int3
jnp
adc
and
ins
(bad)
push
pop
add
pop
enter
dec
push
imul
sub
stos
and
mov
repz
popf
jmp
or
jl
xchg
ffreep
add
out
adc
mov
sbb
mov
xor
dec
push
add
aam
outs
retf
inc
inc
dec
add
imul
sbb
pop
sub
nop
or
sar
cs
out
out
sub
movs
fidiv
mov
test
shr
clc
sbb
loopne
add
or
dec
and
push
gs
je
lea
dec
mov
cmp
xchg
inc
cmp
ret
jnp
das
or
sub
push
dec
stos
mov
je
xor
es
inc
mov
fwait
mov
dec
cmp
data16
fistp
nop
dec
dec
lea
test
dec
jnp
xor
mov
test
mov
cmp
mov
fwait
xor
adc
shl
in
inc
fdiv
shr
mov
sbb
cmp
mov
pop
xor
rcr
dec
cmp
ja
cmp
inc
lock
(bad)
mov
push
ret
mov
pop
jmp
sti
xor
shr
jae
or
pop
test
scas
adc
and
cld
push
mov
or
fadd
inc
adc
bound
and
mov
inc
dec
push
sbb
jge
sbb
add
iret
push
enter
mov
inc
sub
and
movs
pop
pop
aad
mov
dec
push
sar
cmp
pop
enter
shr
cmp
cdq
adc
(bad)
les
push
adc
xor
outs
or
fsub
mov
repnz
ficom
cmp
fadd
add
test
movs
fadd
inc
inc
and
iret
imul
mov
jecxz
push
cwde
dec
mov
push
jo
push
adc
mov
add
and
mov
jge
jne
push
xor
push
stos
jge
test
in
jmp
add
pop
jmp
arpl
gs
inc
(bad)
pop
aam
pop
inc
push
xchg
shl
sbb
pop
xchg
test
sub
add
fcomi
fcomp
mov
xor
ins
scas
xchg
push
sbb
stos
sti
sub
jne
mov
stc
es
inc
call
cmp
jge
dec
mov
and
or
loope
cmp
cmp
jne
jne
addr16
xor
inc
adc
ss
dec
add
xchg
xor
xchg
mov
jle
pop
xor
test
or
jo
test
iret
jl
add
mov
sub
dec
mov
xchg
jmp
ins
add
jmp
sub
mov
mov
cld
sub
jmp
push
push
pop
mov
sar
hlt
cmp
adc
adc
pop
jmp
or
imul
loop
stos
adc
enter
pop
movs
cld
sbb
ret
cmp
ja
bound
xchg
cmp
add
mov
inc
hlt
cmp
call
mov
aam
and
cmp
sub
movs
mov
jge
cmp
adc
mov
jmp
push
rcr
cmp
pop
or
or
ret
je
arpl
and
mov
sbb
fstp
ror
push
mov
add
popa
retf
das
(bad)
sbb
loope
and
enter
inc
je
sbb
lock
ret
call
inc
aaa
ins
fdivr
mov
xor
or
idiv
cld
out
cmp
ja
xor
pop
mov
or
ja
es
cmp
test
add
xor
iret
push
jbe
and
xor
out
cmps
test
in
sub
cmp
je
and
shr
and
fsubr
(bad)
sti
inc
(bad)
push
push
push
mov
imul
outs
stos
not
push
repz
cmp
fadd
shl
push
popf
(bad)
push
ror
lock
mov
jnp
and
inc
cmps
sar
ins
loope
sbb
jle
js
rcr
and
add
imul
mov
nop
ret
sub
fs
mov
mov
cmps
inc
lea
cmp
bndldx
xor
loope
jle
ror
jmp
xor
cmp
ret
inc
jg
cmp
sti
jb
fwait
dec
retf
jmp
outs
aas
push
pop
mov
and
xchg
loop
clc
push
sub
test
ret
sub
jl
inc
xchg
psadbw
push
push
add
jo
add
cmp
movs
push
iret
sub
mov
mov
and
daa
or
or
call
pop
push
add
rcr
enter
cmp
dec
pop
or
and
rcl
imul
push
dec
pop
fucom
(bad)
cmp
add
call
xor
jmp
sbb
ins
cmp
popf
scas
sbb
(bad)
loopne
push
pushf
jo
mov
ins
and
pop
push
and
jmp
aaa
test
and
jmp
add
int3
int
add
pop
push
das
lock
add
add
fcom
add
test
jle
adc
jae
lea
add
or
in
mov
and
push
xor
adc
or
and
fiadd
into
int3
(bad)
outs
fsubr
mov
rol
mov
and
fnstsw
or
fldz
or
and
fstp
mov
fld
push
fs
scas
jmp
adc
and
jmp
loopne
lds
mov
imul
pop
movs
test
add
inc
adc
mov
ins
addr16
sub
jle
dec
or
jbe
cs
add
xor
call
pushw
inc
mov
test
push
shl
aaa
adc
sbb
(bad)
(bad)
push
sbb
add
add
add
in
dec
jmp
sub
sub
jmp
sub
push
push
or
psubusw
inc
call
pop
or
inc
xchg
add
jbe
inc
jnp
into
inc
movs
pop
pop
mov
jge
and
add
lock
push
mov
sbb
fmulp
inc
cmps
fcompp
adc
in
fnsave
sar
jne
inc
pop
idiv
hlt
adc
punpckhdq
fidivr
push
lock
adc
lods
and
shr
sbb
je
or
hlt
inc
add
fcomp
fst
add
add
sbb
inc
fs
push
ret
shl
push
adc
std
jnp
adc
sahf
jp
and
pop
xchg
mov
sub
dec
cmp
inc
xlat
rcl
daa
test
mov
dec
in
mov
pop
hlt
push
mov
or
adc
push
mov
jle
or
and
pop
xchg
xor
lods
push
add
xor
mov
loopne
and
scas
mov
iret
mov
or
xor
fst
xor
sub
aam
or
dec
push
shr
add
push
outs
inc
mov
add
and
and
not
je
pop
adc
adc
add
imul
or
add
inc
jo
push
add
je
retf
or
xor
xor
js
sub
add
and
add
(bad)
mov
mov
ret
jmp
mov
and
mov
and
movs
fcmovnu
and
jecxz
sbb
fsubrp
or
jmp
popa
xchg
add
xor
fsub
call
scas
ins
cmp
and
and
out
addr16
fsqrt
fstp
cmp
(bad)
ins
mov
xor
loope
add
push
jmp
scas
xchg
addr16
rol
jecxz
data16
add
inc
pusha
pusha
xchg
mov
add
push
mov
icebp
imul
sub
jnp
pop
idiv
push
sahf
retf
add
add
add
fbld
movs
or
xchg
pop
jmp
inc
pusha
test
add
mov
data16
test
adc
pop
sbb
outs
lods
sar
sbb
jmp
push
and
dec
add
cmp
test
lods
fld
add
jmp
fisttp
add
adc
push
ja
and
adc
sbb
jmp
(bad)
rol
adc
nop
xor
mov
sbb
ja
fmul
adc
or
or
xchg
mov
inc
xchg
adc
inc
out
and
loopne
xchg
add
inc
mov
dec
dec
push
push
pop
fsubr
xchg
dec
pop
jmp
imul
in
scas
jns
xor
push
leave
inc
add
rcr
and
add
jle
add
xchg
fstp
rcr
adc
clc
push
bound
pop
add
out
sar
push
mov
push
ja
push
out
(bad)
stos
push
adc
loopne
addr16
pop
inc
jns
pop
adc
ror
pop
ins
fnsave
mov
icebp
pusha
dec
cwde
add
sbb
or
ins
dec
and
or
sbb
jecxz
jo
jge
and
jb
and
fsub
out
sub
and
push
add
mov
jg
imul
imul
inc
fwait
pop
mov
cmp
mov
add
enter
inc
add
adc
add
push
mov
sbb
sub
retf
and
and
push
mov
or
push
push
call
mov
stos
ins
jo
xor
mov
in
adc
ret
jl
outs
inc
je
push
pusha
mov
dec
cmp
or
ldmxcsr
jmp
sti
dec
push
fiadd
xchg
je
push
sbb
outs
ja
and
popf
adc
loope
mov
shr
outs
pop
jge
fnclex
movsx
mov
xchg
inc
sar
push
mov
dec
cld
add
clc
fldcw
aam
mov
push
push
adc
dec
clc
add
mov
fwait
mul
sub
adc
fwait
sbb
adc
and
ss
out
mov
data16
jmp
push
push
loopne
or
sbb
xchg
adc
or
pop
pop
ins
sbb
push
or
push
fnop
add
xor
or
(bad)
into
loop
ret
and
xchg
push
call
psraw
inc
lea
imul
push
jno
or
loopne
inc
stos
add
jmp
cmp
cmps
(bad)
push
aam
cmp
adc
sub
inc
inc
or
sbb
pop
push
hlt
cmp
test
mov
sub
(bad)
shl
into
aam
ins
and
shl
out
inc
fiadd
and
cmp
jl
mov
push
stos
xchg
xchg
es
ja
mov
dec
jb
ins
aad
retf
cld
mov
outs
jmp
movs
setl
inc
push
push
test
(bad)
shl
adc
inc
pop
(bad)
xor
mov
or
sar
les
xchg
cmp
xor
aas
inc
shl
ror
pop
cmp
xor
mov
mov
sub
mov
add
or
xor
inc
sub
pushf
sbb
jge
rol
pop
ret
jb
xchg
mov
push
and
mov
jno
xlat
sar
mov
lods
popf
push
imul
and
shl
clc
mov
cli
ja
outs
movs
add
inc
cmp
dec
mov
push
cli
std
jge
ficomp
imul
(bad)
ins
call
push
sub
cwde
(bad)
xchg
mov
or
fdivr
xor
popa
and
mov
daa
sub
dec
movs
jnp
sbb
aam
jne
sub
adc
mov
inc
inc
pop
push
sub
pop
data16
pop
or
mov
popf
lock
sub
add
enter
sub
call
daa
mov
add
in
ror
cmp
push
lock
add
inc
mov
call
sub
repz
ficomp
rol
scas
jns
clc
clc
push
sub
iret
and
push
jmp
ja
sbb
and
loope
lds
jo
aaa
fidivr
lea
and
gs
imul
sub
pop
loope
add
sti
int
mov
jo
mov
mov
add
nop
mov
aam
lds
sbb
nop
inc
inc
lods
xor
stos
cmp
jmp
pop
add
and
(bad)
popf
mov
out
mov
jmp
jbe
inc
jmp
sub
lods
or
cmp
sbb
(bad)
std
mov
mov
push
shl
sar
rol
mov
and
pop
add
xchg
add
fiadd
fsubr
jmp
int
fisub
fxch
iret
cmp
and
rcr
pop
shl
mov
mov
or
in
or
in
mov
pop
pop
mov
cdq
(bad)
ret
adc
test
out
ret
or
iret
push
xchg
call
ret
or
test
fild
and
paddusb
in
push
jmp
adc
fadd
jnp
shr
pushf
add
inc
mov
leave
in
xor
and
mov
sbb
adc
mul
(bad)
ds
scas
or
or
xchg
jne
cmp
lea
fcom
jmp
adc
xchg
ins
fwait
loopne
fmul
leave
mov
cld
fsub
mov
mov
or
rcr
fstp
xchg
outs
mov
pop
or
(bad)
sbb
fldcw
sbb
push
ret
test
ss
ret
stos
adc
pop
int
mov
cmp
or
or
les
inc
je
mov
shld
shl
push
add
sub
sub
or
mov
aaa
mov
and
pop
rol
lock
cmp
loopne
je
(bad)
adc
retf
outs
cmp
add
(bad)
cmps
jbe
adc
je
xlat
pop
mov
mov
and
jne
sbb
frstor
rcr
cmp
push
add
imul
fcomp
pop
sar
fmul
push
xor
push
call
xchg
popa
xchg
mov
ins
dec
ins
das
clc
rol
ret
push
push
test
sar
loopne
and
ds
loopne
cdq
mov
xor
inc
or
push
push
add
push
mov
outs
cld
cmps
popf
lods
ret
sahf
fmul
cmp
shr
and
dec
xchg
shl
sbb
push
leave
nop
fldcw
sbb
popf
daa
int
cld
jecxz
pop
cmp
xor
adc
xor
adc
test
push
xchg
dec
bound
rcl
clc
xchg
and
lock
hlt
or
js
mov
sti
xor
cmp
push
add
jle
imul
add
gs
dec
enter
fcmovne
pop
aaa
inc
mov
dec
clc
cmp
(bad)
in
xor
xor
xchg
or
pop
cmp
and
movzx
test
pop
or
loope
push
adc
xchg
jp
push
fimul
add
(bad)
(bad)
(bad)
or
rol
pusha
and
dec
adc
je
(bad)
mov
jle
push
ret
(bad)
icebp
aam
pop
push
inc
icebp
pop
push
push
sbb
jmp
jbe
jo
adc
add
push
push
es
ret
and
outs
mov
retf
push
push
fst
xchg
dec
mov
or
push
(bad)
lods
jne
jns
jmp
fisttp
call
push
lods
movs
push
cmp
aaa
and
and
je
ds
pop
aaa
mov
adc
pop
adc
xor
adc
call
ja
ficomp
jbe
inc
jmp
cmps
mov
shr
inc
(bad)
jne
inc
popa
jge
or
jecxz
fisttp
pop
add
push
xor
xchg
fimul
lock
pop
pop
mov
scas
adc
fadd
or
pop
add
(bad)
lahf
mov
mov
dec
inc
jg
xchg
dec
adc
repnz
cmp
ja
mov
push
jp
push
mov
add
stos
mov
push
add
dec
jbe
mov
xor
mov
mov
add
inc
out
mov
dec
push
sub
jno
fdivr
das
push
pop
cmp
icebp
popa
sbb
es
or
ins
mov
fldcw
pop
dec
pop
push
mov
fcomp
inc
jg
mov
mov
lahf
ret
lea
adc
mov
add
mov
jmp
dec
jle
xor
fadd
test
aaa
loopne
lock
add
add
adc
dec
imul
adc
std
xlat
push
add
mov
enter
div
inc
ret
ja
xchg
adc
das
push
int3
fisttp
into
shr
data16
fst
popf
lock
adc
adc
leave
mov
and
sub
ror
mov
pop
sub
ret
int
fwait
pusha
arpl
xor
jle
xchg
test
mov
xchg
daa
es
pop
push
nop
(bad)
inc
(bad)
enter
hlt
sbb
fsubr
lea
jae
(bad)
fld
sbb
shl
cmp
mov
pop
pusha
sub
push
and
pop
push
loopne
out
jle
push
fxch
mov
in
cmp
sub
shl
or
jg
inc
adc
fwait
cmp
add
push
mov
pop
in
mov
mov
and
fdiv
dec
repnz
aas
adc
repz
sub
movs
xor
fisttp
test
daa
fisubr
mov
mov
xor
or
test
pop
sub
je
bound
mov
mov
retf
popf
pop
fisttp
sbb
sbb
in
xchg
cmc
retf
sub
clc
data16
jecxz
add
test
cli
and
dec
mov
enter
jmp
jno
dec
fs
leave
push
dec
gs
sbb
xchg
jno
and
test
idiv
mov
add
popf
ret
jne
pop
call
sbb
add
adc
jmp
rol
ins
loopne
add
add
sub
push
and
jb
push
in
add
push
jne
jae
jmp
mov
jmp
fldenv
jmp
mov
in
lahf
ror
sub
inc
imul
xchg
stos
nop
fistp
adc
push
into
mov
sub
adc
mov
dec
mov
inc
push
inc
or
push
xor
xchg
ret
cmp
inc
dec
add
fsubr
push
xlat
or
nop
sbb
out
arpl
adc
ds
movzx
pop
mov
pop
cmps
aam
sahf
inc
jmp
lods
repz
adc
xchg
out
push
jmp
add
ja
inc
aam
mov
cmp
ret
inc
sbb
or
mov
pop
test
adc
dec
or
ret
mov
xor
ins
add
call
push
jle
push
ret
inc
xchg
and
jbe
mov
sub
mov
sub
das
scas
ret
(bad)
xchg
into
aam
fucomip
mov
mov
xor
test
out
sbb
sub
inc
mov
loop
mov
mov
xchg
xor
pop
repz
lock
add
xor
bound
add
cmp
xor
rcr
xchg
(bad)
jmp
inc
inc
jmp
jl
sti
xchg
push
add
jbe
pop
and
scas
dec
cmc
sub
sbb
xlat
loopne
(bad)
pop
(bad)
and
sub
cmp
in
sbb
inc
push
pop
imul
xchg
jl
popf
jne
sub
add
xor
inc
push
xchg
lea
neg
add
or
push
dec
dec
dec
jge
bound
sbb
mov
call
ret
or
pop
ins
loopne
pushw
jmp
adc
sbb
fcomip
sub
mov
and
mov
adc
dec
mov
mov
ins
cmp
dec
sub
dec
test
test
cmp
inc
bound
lea
or
mov
enter
mov
pop
fs
sahf
jae
xchg
push
add
test
xor
jmp
cmp
sub
jns
int
(bad)
jbe
or
(bad)
clc
ret
scas
sbb
inc
add
or
ret
in
xchg
or
int3
push
xor
mov
mov
movs
push
jmp
adc
add
loop
adc
adc
shl
mov
push
icebp
je
xlat
scas
push
sbb
dec
or
mov
rcl
je
or
je
sbb
sbb
xchg
fld
dec
enter
add
pop
mov
shl
xchg
clc
inc
push
push
daa
popa
daa
jo
jo
(bad)
mov
dec
and
mov
or
mov
jne
push
jle
in
mov
lods
iret
or
or
sub
ins
and
or
inc
sub
or
cmp
add
pop
and
out
jcxz
clc
test
and
in
and
js
and
sar
cmps
in
jb
lahf
jmp
xchg
xor
arpl
stos
jmp
retf
jge
cwde
data16
add
aaa
das
(bad)
add
adc
sbb
add
mov
ret
aaa
jno
mov
cmp
inc
push
popa
sub
mov
mov
ror
inc
sbb
cmc
adc
jo
fiadd
(bad)
push
fmul
inc
dec
fcom
adc
lods
test
loop
fnstcw
stc
jae
std
outs
pusha
outs
sahf
aam
ins
in
adc
loopne
adc
dec
sbb
sbb
and
mov
mov
dec
and
inc
cmc
mov
cmp
bt
jle
mov
scas
(bad)
push
xor
dec
add
loop
xchg
pop
scas
icebp
inc
jmp
push
es
(bad)
ss
inc
div
inc
push
sub
inc
inc
push
scas
enter
loop
es
xchg
daa
add
ret
add
cmp
pop
push
js
pop
data16
pop
push
loopne
pushw
in
jne
fld
dec
adc
idiv
fcom
and
cmp
cmp
jl
cmp
push
out
push
inc
and
add
mov
imul
sti
sub
add
jmp
fst
icebp
gs
(bad)
jnp
inc
cld
xchg
popa
rcl
test
cld
cmp
jae
ds
jnp
mov
or
and
pop
adc
pop
das
adc
cmp
and
cld
jb
in
xchg
and
pop
pushf
jo
adc
push
es
cmp
div
sub
dec
mov
outs
add
shl
sbb
sub
sbb
mov
jmp
adc
jmp
mov
je
push
das
inc
outs
data16
xor
and
dec
or
sub
sub
add
popa
test
lock
leave
rcr
clc
or
lea
jae
loopne
xor
les
pop
cli
mov
inc
mov
pop
stc
xlat
mov
sti
inc
jo
dec
jb
lea
adc
dec
hlt
pop
and
ja
push
push
pop
mov
add
pop
shl
jno
fnstcw
push
cmp
cmps
pop
jmp
jbe
add
jmp
call
sub
mul
ret
add
pop
inc
add
pusha
mov
int3
or
cli
adc
sbb
jb
and
daa
push
fist
sbb
xlat
sbb
or
cmps
inc
jl
xor
pop
dec
push
pop
call
mov
fsub
stc
mov
(bad)
jae
jae
xor
icebp
out
adc
or
dec
inc
fs
push
push
push
or
dec
ins
pop
hlt
sub
sar
and
push
push
xlat
jmp
mov
or
call
cmc
shl
sub
cmp
add
dec
jmp
jne
daa
add
retf
ucomiss
out
adc
mov
inc
jae
mov
xor
pop
rol
inc
fs
pop
sbb
dec
popf
jno
repnz
ds
ds
add
push
faddp
sti
scas
(bad)
mov
pop
or
mov
ret
xor
adc
and
int
pop
push
jge
pop
sbb
jmp
jns
inc
cmp
pushf
movs
push
jp
repnz
sub
sub
mov
sbb
fst
or
inc
pop
nop
out
clc
xchg
dec
or
rcr
outs
loop
jl
hlt
aas
pop
movs
and
pop
loopne
leave
lods
inc
pop
(bad)
std
mov
rcr
stos
pop
shr
retf
adc
cmp
ficom
aam
shr
mov
dec
cmps
mov
and
adc
and
xor
test
in
call
jle
cwde
and
retf
cmps
ja
cmp
in
jnp
lock
repz
sub
mov
out
fcmovbe
sub
add
pop
sbb
outs
loope
xor
cmp
call
rcr
sub
mov
mov
jmp
mov
push
add
add
hlt
sub
add
gs
xchg
xor
push
jne
jge
movs
add
loop
retf
xor
and
shr
push
pop
dec
adc
inc
nop
mov
cmp
outs
mov
add
bound
adc
aaa
je
nop
cmp
int3
and
je
jmp
xchg
sub
cmp
arpl
mov
pop
call
sub
sbb
sbb
jmp
jg
jg
fs
jne
(bad)
retf
in
stc
je
jg
xor
xchg
pop
add
jae
iret
xor
push
sub
sub
pop
and
add
in
fldlg2
out
add
lods
in
popf
push
cmp
sbb
out
pop
jmp
cs
pop
adc
sbb
jo
jmp
sbb
ds
sbb
or
les
imul
or
sbb
xor
ja
mov
jle
movapd
push
clc
out
mov
jae
xor
jle
xor
cli
shl
jmp
push
dec
cmp
in
fstp
repz
or
jg
(bad)
dec
mov
xchg
mov
adc
(bad)
jnp
mov
mov
mov
add
adc
push
add
pop
ja
fsubrp
std
jecxz
pop
add
fadd
rol
add
mov
or
pop
enter
lock
xchg
idiv
ret
adc
dec
sbb
add
jmp
jne
xor
inc
adc
(bad)
xlat
jmp
lahf
cs
push
mov
push
adc
rol
inc
das
sar
mov
sub
cld
and
xchg
into
dec
stc
or
popf
push
or
and
shl
bound
leave
in
sub
inc
adc
and
push
push
or
jmp
dec
mov
and
or
add
jns
lods
and
and
stos
push
jbe
push
dec
mov
add
dec
pop
pop
loope
inc
sub
mov
adc
push
cs
push
adc
jmp
bound
(bad)
mov
psubb
inc
shl
pop
pop
movs
test
ins
cmps
cdq
lods
rol
jp
inc
sub
xchg
into
or
je
(bad)
imul
sub
inc
mov
mov
scas
es
mov
je
call
push
mov
and
cmp
jb
cmp
lahf
ja
jecxz
jb
cmp
adc
(bad)
cmp
jne
sub
leave
adc
mov
or
mov
pop
leave
popf
mov
add
or
mov
in
xchg
test
push
jp
pusha
xchg
movs
pop
lds
movs
xchg
mov
sahf
cmc
mov
dec
xchg
daa
mov
movs
ins
pop
or
in
add
rcl
popf
pop
stc
jp
mov
bound
or
adc
aad
int
and
inc
inc
unpckhps
sbb
enter
xor
push
cwde
pop
loopne
(bad)
(bad)
(bad)
jo
add
or
jo
lock
(bad)
push
pop
hlt
repnz
(bad)
push
(bad)
out
pop
repz
push
mov
stc
std
jl
ins
lahf
call
add
pop
sub
xchg
shl
add
mov
or
inc
ror
fcom
cmp
enter
retf
repnz
pop
and
push
ds
push
inc
call
cld
outs
repnz
fld
push
rol
sub
adc
sbb
rol
shl
(bad)
or
inc
inc
clc
pop
mov
add
xchg
(bad)
lahf
push
ss
ja
rcr
xchg
ds
push
loope
mov
xchg
retf
jb
ret
fld
inc
mov
or
pop
dec
pop
rcl
or
sub
or
sar
loope
jg
(bad)
in
pop
cli
mov
clc
or
dec
push
leave
jp
mov
shr
ficom
add
rcr
aaa
add
xor
sub
(bad)
xor
jno
jae
and
rol
call
add
push
cmps
adc
pop
xchg
dec
in
jne
test
fistp
mov
or
jmp
or
mov
test
test
xchg
jo
fdivp
ret
add
std
mov
(bad)
loope
fcom
dec
jge
outs
xor
dec
ins
out
sub
aad
loope
sub
fucomp
scas
cmp
or
(bad)
dec
add
outs
push
idiv
shl
inc
in
and
fwait
rol
push
ret
inc
(bad)
adc
in
jmp
imul
mov
inc
mov
mov
jl
clc
sub
fldz
dec
push
sub
in
in
jmp
pop
addr16
ja
or
faddp
inc
rcl
push
xchg
add
xchg
cmp
mov
sbb
push
fcompp
mov
in
sub
xchg
xor
mov
sahf
fsub
daa
jbe
lock
ja
xchg
ret
call
cwde
daa
icebp
cdq
(bad)
dec
fidiv
mov
cmp
je
xchg
mov
or
imul
frstor
push
push
enter
or
jmp
mov
imul
dec
add
xor
fiadd
dec
loopne
outs
pop
xor
add
clc
sbb
(bad)
and
push
shr
cmps
add
outs
pop
adc
lea
mov
push
(bad)
fwait
add
inc
xor
fld
ss
dec
sbb
xchg
or
pop
in
lea
in
jbe
push
inc
push
jl
inc
(bad)
xor
aad
xor
je
out
cmp
sbb
mov
das
or
and
cs
pop
add
pcmpeqb
je
add
add
ficomp
jl
jmp
xor
fstp
cmp
rcr
pop
adc
add
adc
je
sub
xchg
sub
add
retf
dec
hlt
xor
push
nop
xchg
mov
xor
shl
bnd
cld
je
(bad)
jne
mov
inc
hlt
fstp
adc
add
xor
or
pop
aas
(bad)
loopne
pop
mov
push
mov
dec
xor
imul
test
retf
dec
cmp
ja
push
push
pop
gs
or
add
shl
and
sti
adc
push
push
jmp
inc
jg
push
clc
inc
cmp
push
push
fstp
push
mov
mov
push
test
jne
sbb
test
mov
add
pop
mov
add
(bad)
ins
les
jmp
sbb
add
inc
sub
add
and
add
mov
pop
xor
repz
sbb
sbb
sub
and
dec
sbb
dec
mov
xor
jnp
mov
or
add
test
js
and
daa
xchg
jne
lock
fs
dec
mov
loope
xor
sahf
iret
and
xor
icebp
xchg
xlat
mov
and
addr16
lods
add
ror
ja
add
pop
or
(bad)
in
sbb
sbb
or
or
jae
loope
xchg
inc
cmp
popa
sub
je
sub
push
pop
pop
fisttp
push
shl
ror
cmp
imul
dec
inc
cmp
and
dec
pushf
ds
push
ds
clc
fucompp
inc
shl
push
add
xchg
mov
icebp
fabs
mov
jne
cmp
fisub
shr
pop
test
cmp
jbe
dec
mov
pusha
data16
fstp
cmp
stos
fstp
ja
pusha
rcl
pushf
(bad)
rcl
ret
cmp
mov
cdq
clc
sahf
lods
mov
(bad)
xlat
mov
inc
jmp
call
pop
sar
inc
add
ja
jp
enter
ss
adc
or
neg
enter
mov
mov
sub
in
fst
adc
mov
es
add
sub
xchg
dec
add
jecxz
es
push
fsub
or
add
fs
and
fiadd
mov
mov
ror
or
sbb
mov
outs
push
aas
sbb
add
ins
inc
push
pop
rcr
or
jmp
lsl
sbb
or
cmp
or
and
sub
fcom
or
or
or
push
or
adc
adc
add
inc
fst
pop
xor
xor
sbb
inc
jle
cmp
jae
push
out
pop
(bad)
rol
mov
xor
or
ds
jmp
repz
jmp
inc
inc
mul
add
jb
cmp
pusha
mov
jb
cmp
add
cmp
stos
mov
and
ins
retf
push
pop
add
cld
movs
into
mov
add
push
test
cwde
stc
jb
inc
cmp
cmp
jb
imul
(bad)
push
push
push
push
inc
sub
push
xor
sub
inc
sbb
sub
pop
sbb
sar
sbb
daa
push
xor
or
cmp
fdiv
cmp
cmps
push
rcl
jne
jge
adc
add
push
xchg
sbb
pop
mov
xlat
adc
xor
cmp
or
push
sbb
fmul
add
sub
pushf
inc
sahf
adc
loope
or
sbb
adc
psraw
inc
jmp
popf
push
push
inc
out
retf
push
popf
adc
or
fstp
fisttp
cmp
or
xor
and
xor
adc
mov
neg
sbb
rcr
fxch
pop
shl
xor
or
push
test
xor
repnz
bnd
mov
in
or
inc
inc
push
dec
pop
or
sub
fcomp
fidiv
push
mov
cmp
sbb
mov
jne
xor
sbb
fcom
cvtdq2ps
fnstenv
icebp
dec
push
mov
adc
popa
jns
sbb
dec
jns
push
(bad)
xor
dec
jne
pop
pop
pop
xchg
pop
les
cmp
jae
or
jae
shrd
shr
ret
mov
dec
test
sbb
fdivr
movs
ret
shl
shl
rcl
jg
xchg
push
clc
cvttsd2si
leave
ret
aaa
pop
lods
push
sbb
add
pop
lahf
je
jp
sbb
(bad)
mov
popa
pop
fistp
icebp
xchg
bnd
sbb
cmp
jmp
sbb
fldcw
sub
add
add
inc
sbb
shl
ins
das
fcomp
lods
add
fidivr
ret
mov
xor
je
pop
inc
adc
mov
jl
mov
shl
mov
jo
shl
cmp
les
add
push
jne
push
inc
ror
jmp
cli
shl
mov
nop
jmp
les
dec
popf
cmp
jge
sub
push
pop
out
dec
dec
jmp
sub
sbb
push
cmp
jmp
bsf
xor
xlat
add
and
mov
mov
add
popa
stc
cmp
outs
inc
clc
shl
push
or
xchg
je
push
xlat
xor
dec
push
iret
and
or
stc
xchg
xor
push
pop
ror
outs
fimul
sbb
leave
bsr
add
shl
push
sbb
rcl
fldenv
fcom
loope
shr
dec
and
cmp
retf
pop
dec
inc
ret
jae
mov
jle
cmp
adc
and
retf
je
inc
sub
sbb
in
push
and
sahf
or
arpl
inc
lea
inc
rcr
cmp
rol
arpl
clc
clc
and
int3
shr
jne
cmp
xchg
sbb
adc
push
xlat
add
jmp
clc
not
push
add
neg
sbb
and
sbb
add
pop
or
fs
in
sar
sub
rol
ins
push
outs
mov
mov
jge
pop
clc
out
adc
icebp
push
xchg
outs
jg
sub
sbb
dec
mov
or
ins
mov
out
xchg
and
add
xchg
nop
popa
(bad)
ins
hlt
int
add
adc
sbb
es
pop
loopne
mov
ror
inc
push
stc
adc
fcmovbe
push
cmp
lea
push
in
dec
in
inc
loopne
fsub
inc
jb
add
pop
in
outs
and
push
mov
pop
movs
mov
or
xor
jno
adc
and
pop
push
pop
scas
fisub
lock
add
and
leave
sbb
cmp
enter
and
cld
int
cmps
jecxz
add
call
inc
jno
call
popf
and
pop
inc
bound
mov
dec
pop
popw
xlat
push
repnz
adc
or
call
ror
(bad)
mov
dec
add
adc
mov
es
and
jb
cdq
sub
loopne
inc
cmps
xchg
jg
in
adc
je
push
mov
dec
ret
mov
dec
call
daa
in
(bad)
fdivp
jb
xchg
add
arpl
sbb
gs
(bad)
test
or
dec
mov
sets
rol
clc
mov
gs
add
jns
and
ja
xchg
call
add
test
add
(bad)
(bad)
pop
loopne
add
fmul
aam
ror
int3
int
add
or
and
mov
mov
mov
inc
inc
xchg
push
enter
inc
es
fbld
cmp
arpl
fdivr
nop
add
xchg
add
mov
fsubr
pop
repnz
mov
add
stos
add
sub
bound
dec
and
lahf
in
cmp
adc
test
mov
pop
pusha
in
cmp
add
jbe
push
push
pop
iret
add
call
cs
rcl
inc
dec
jle
pop
xchg
push
ret
mov
mov
test
lock
mov
(bad)
pop
dec
lahf
adc
ins
repnz
or
pop
shr
outs
dec
int3
dec
sahf
add
call
ins
clc
arpl
or
sub
int3
sbb
xor
sbb
mul
sbb
dec
imul
sar
add
stos
sub
pop
aas
add
push
inc
inc
cs
nop
add
stc
push
lock
xchg
mov
xchg
arpl
cmp
lea
inc
scas
and
enter
xchg
and
jb
call
mov
movs
push
mov
inc
add
pop
pop
inc
add
sub
test
xchg
int3
jle
call
loop
mov
adc
add
jbe
fcom
mov
inc
out
(bad)
cwde
out
adc
aam
mov
cmp
sahf
mov
nop
dec
fwait
ins
mov
mov
stc
push
pop
in
mov
push
addr16
or
dec
data16
xlat
adc
inc
out
mov
call
jae
jo
outs
add
add
add
mov
dec
ins
pop
add
dec
push
pop
and
sub
ja
fisubr
sub
pcmpgtb
popa
aas
imul
jb
out
fucomi
frstor
pop
push
bound
popa
ins
ins
es
gs
ins
sub
jmp
outs
push
inc
jne
jne
and
outs
outs
and
ret
test
fwait
(bad)
mov
and
outs
je
data16
outs
daa
popa
and
test
in
div
jb
jne
push
gs
imul
es
(bad)
mov
and
popa
jae
stos
dec
sbb
outs
xlat
mov
popa
jb
arpl
dec
dec
and
ins
cmp
mov
cdq
imul
mov
mul
popa
xor
cmp
ins
in
add
leave
jle
sbb
repnz
jae
ins
jbe
cmp
jne
outs
adc
fstp
outs
jb
call
adc
bound
add
jbe
out
pop
cmp
ins
xlat
sti
fidivr
mov
ins
and
mov
jo
js
sub
imul
sbb
imul
ds
cmp
or
gs
imul
jo
xor
and
jae
jp
outs
fcomp
mov
mov
or
pushf
mov
jo
xor
mov
xchg
aad
or
pop
and
sub
jbe
popa
jns
pop
ret
add
dec
daa
retf
sub
lods
xchg
ins
push
ins
outs
imul
inc
jae
outs
imul
or
mov
add
mov
mov
popf
fwait
xchg
in
test
dec
sbb
sahf
jb
jmp
mov
and
adc
(bad)
fs
mov
jb
mov
popa
ret
es
mul
gs
dec
pop
(bad)
xor
mov
test
fsubr
fistp
adc
call
aas
mov
pop
ins
je
ins
sbb
ficom
ins
and
outs
outs
(bad)
outs
je
cdq
das
outs
mov
ss
pop
fcomp
push
bound
or
sbb
into
pop
movs
push
mov
fwait
push
mov
jbe
inc
loope
pop
mov
sub
popa
jne
ficom
outs
pop
inc
bound
sbb
or
cmp
pusha
fisttp
loop
imul
inc
pop
leave
jne
cmps
or
jecxz
cmps
frstor
call
sub
mov
(bad)
xor
loopne
imul
pop
push
out
dec
xchg
mov
leave
lahf
lock
dec
call
or
(bad)
jo
dec
repz
push
inc
pusha
lock
ins
adc
inc
shl
jl
mov
and
inc
push
inc
in
out
imul
dec
inc
jns
jns
mov
test
pop
inc
ds
mov
out
out
adc
push
js
push
dec
repz
or
stc
cmp
cmp
sbb
xor
mul
dec
nop
dec
iret
loopne
lock
cmp
repz
dec
push
push
xor
repz
dec
sbb
out
call
mov
ror
pusha
jo
ror
repz
push
pusha
nop
out
sahf
sbb
jo
ds
lahf
loopne
push
mov
and
test
out
fcompp
outs
inc
pop
push
pushf
(bad)
lock
out
ins
pop
mov
pop
iret
pusha
sahf
ja
test
pop
(bad)
push
int3
lock
repnz
pop
mov
js
clc
pop
(bad)
out
addr16
push
lock
xchg
fcomp
outs
push
adc
repz
dec
js
or
cmp
popf
idiv
mov
push
jo
repz
mov
mov
add
push
lock
pop
addr16
ds
sar
push
imul
mov
xor
fwait
iret
test
mov
mov
ficomp
into
lock
ds
enter
dec
outs
outs
push
jns
jns
mov
ds
lods
aaa
jnp
out
lock
jno
xchg
push
repz
loopne
jb
push
pushf
mov
shl
jae
jo
jae
je
xor
div
test
jbe
mov
fcom
cs
push
je
lahf
aaa
cmp
push
loopne
iret
sub
mov
shr
repz
ja
push
xor
and
cmps
mov
cs
enter
jg
sahf
out
push
hlt
sub
ds
pause
or
mov
sbb
mov
sub
push
jl
aam
dec
test
out
shr
mov
lahf
out
push
jl
mov
cmp
jge
pusha
mov
mov
xor
jl
mov
or
push
ins
lahf
out
push
hlt
sub
push
fldenv
xchg
xchg
into
xchg
push
call
push
xchg
scas
push
pusha
xchg
xchg
mov
ds
cwde
iret
sbb
fidivr
test
xor
fnsave
out
loopne
fwait
xchg
push
inc
pushf
xchg
cmp
repz
sbb
idiv
cmps
mov
int
jns
push
loopne
mov
cmp
mov
out
imul
clc
iret
repz
adc
in
xchg
in
cli
cmp
sbb
repz
jnp
fadd
sbb
loopne
out
ds
and
sbb
mov
test
cmp
add
push
pop
jge
stos
scas
mov
push
adc
push
mov
push
dec
repz
lock
pop
mov
nop
sar
mov
mov
push
loopne
mov
fdivrp
cmp
dec
(bad)
in
mov
mov
shl
iret
cs
iret
sar
mov
inc
int3
lock
fnstcw
enter
mov
sar
xor
ret
jbe
idiv
out
les
nop
(bad)
iret
mov
(bad)
jle
cwde
lock
out
repz
outs
push
pusha
mov
repz
leave
ss
adc
cmps
cli
cmp
inc
je
adc
dec
push
in
in
repz
js
int3
iret
sbb
out
dec
jb
loopne
cmp
es
test
xor
fs
out
iret
jnp
push
fdiv
rol
call
nop
shl
inc
rol
in
sbb
push
push
out
call
pusha
cmps
sbb
pushf
test
aad
ds
inc
call
xlat
cmp
adc
push
ret
iret
call
call
ins
pusha
ins
fadd
sbb
dec
or
adc
sbb
jecxz
mov
ins
popa
ins
adc
fidiv
aas
lahf
mov
mov
dec
clc
dec
push
mov
rcl
ret
push
ins
mov
jnp
push
jb
outs
ja
ret
sbb
mov
fdiv
inc
adc
(bad)
ds
retf
xor
mov
dec
push
mov
xor
hlt
push
cmp
repz
inc
(bad)
mov
into
push
inc
jmp
cmp
pop
push
popf
cmp
pop
push
jne
mov
imul
popa
jne
outs
fdiv
jmp
mov
cwde
into
or
adc
(bad)
sub
sub
data16
jns
inc
inc
dec
mov
add
xchg
push
cmp
add
pop
adc
push
or
and
sbb
(bad)
mov
add
int
fstp
adc
jg
add
jae
popa
imul
es
ins
xchg
mov
call
(bad)
sub
ins
jb
mov
or
gs
fbstp
xor
sub
arpl
mov
pop
daa
shr
dec
jnp
sbb
(bad)
mov
add
gs
pop
or
je
nop
out
mov
lods
sub
nop
pop
cmp
mov
popa
push
mov
mov
test
mov
ret
mov
cmp
jge
pusha
pusha
div
outs
ins
jns
push
fadd
scas
xchg
bound
outs
jae
adc
xor
je
inc
aaa
cwde
cmp
xor
xor
outs
add
data16
js
sub
ins
adc
dec
xchg
loope
imul
out
lock
popa
jp
int
pop
lods
call
jae
adc
je
jl
jl
dec
and
mov
ja
jno
xor
int3
shl
pop
pop
ss
ja
cwde
jbe
aam
and
push
(bad)
les
pop
test
adc
ret
lock
aam
je
fs
sub
mov
mov
xchg
jb
outs
jp
sbb
dec
inc
mov
push
sbb
push
dec
mov
add
sub
iret
cli
lods
dec
ret
repz
bound
imul
mov
bound
je
jb
jae
mov
inc
fmul
scas
fdiv
adc
lods
mov
mov
mov
jns
push
or
adc
push
in
ror
dec
xchg
mul
xchg
arpl
ins
push
outs
stos
pop
jle
ds
adc
mov
popaw
leave
mov
(bad)
sti
jbe
bound
adc
outs
lods
popa
push
dec
popf
adc
inc
pop
push
(bad)
imul
fsubr
add
outs
enter
mov
inc
imul
je
imul
lods
dec
mov
sbb
stc
fidiv
icebp
test
ss
pcmpeqw
xor
mov
mov
retf
adc
cdq
push
jnp
mov
push
sub
jp
sbb
ins
cmp
push
pop
popf
mov
push
push
outs
jns
sahf
scas
sahf
pusha
sub
dec
jb
push
or
clc
mov
icebp
hlt
mov
mov
adc
rol
jb
(bad)
cmp
and
push
mov
add
mov
pop
jnp
js
sub
icebp
cmp
jb
sar
in
test
(bad)
popa
dec
or
cmp
leave
jo
jp
daa
outs
inc
imul
dec
fadd
je
or
jae
(bad)
xor
dec
jb
or
call
push
fisub
ret
sub
sub
test
push
das
push
jb
ins
clc
fsubr
retf
mov
fs
xchg
sub
xor
xchg
mov
sub
ins
jle
pop
ja
pop
add
push
imul
call
jo
push
gs
inc
mov
add
jae
inc
push
sbb
fidivr
xlat
mov
xor
addr16
int3
iret
add
outs
addr16
add
add
cmp
sbb
rol
movs
add
push
jno
and
mov
jne
xor
push
mov
xor
int3
mov
lds
imul
xor
jo
fs
and
pop
and
mov
cmovg
mov
shl
daa
imul
mov
les
xor
ss
mov
sti
pusha
addr16
cmps
inc
ja
mov
mov
adc
jmp
jne
into
mov
jmp
xchg
push
sub
je
ja
push
(bad)
out
jl
outs
fsubr
mov
es
push
daa
jmp
aad
jne
dec
dec
fidiv
xor
add
call
nop
popf
pusha
imul
loop
enter
les
mov
test
xor
movs
inc
cli
add
and
inc
xor
jno
lds
mov
jg
cmp
push
enter
mov
mov
jl
jg
bound
jae
inc
sahf
lahf
mov
adc
dec
push
into
repnz
push
fld
fs
(bad)
sbb
inc
adc
clc
add
adc
leave
(bad)
ja
ror
fimul
xchg
es
push
shl
cwde
xchg
cwde
mov
(bad)
popa
cmp
mov
xchg
inc
and
jo
cmp
jmp
xor
fisub
movs
cmps
xchg
push
ins
rol
outs
xor
dec
loope
out
pushf
imul
loopne
cmp
push
movs
cwde
loopne
(bad)
imul
cmp
ret
xor
pop
test
push
fdiv
and
fstp
cmps
or
or
aam
sub
dec
jne
imul
sub
cmps
adc
scas
outs
icebp
push
lea
ins
push
jae
dec
dec
xor
add
pop
add
pusha
pop
mov
push
les
fs
(bad)
rcl
or
xchg
jae
push
jae
(bad)
lock
adc
pop
inc
or
mov
jno
push
sbb
mov
test
(bad)
int3
ret
outs
ja
adc
lds
and
inc
daa
scas
inc
mov
and
xor
sub
mov
cmp
or
(bad)
mov
jne
jle
push
xor
sahf
mov
je
retf
xor
imul
cmp
loopne
movs
mov
ins
xchg
aas
mov
and
outs
or
mov
arpl
mov
in
or
imul
xchg
lods
loopne
jmp
jne
or
cdq
push
imul
daa
lahf
mov
ins
or
mov
mov
sub
outs
int3
cs
dec
outs
jmp
jge
pop
push
fsubr
mov
shl
imul
xchg
je
ins
nop
das
paddusb
mov
sub
push
fldcw
out
lods
cmps
ins
arpl
push
ins
jmp
sub
outs
cs
lock
ds
imul
aad
jno
test
sbb
ds
and
repz
cpuid
outs
mov
outs
dec
adc
mov
pop
lds
jns
or
test
pop
jnp
es
loope
popa
or
cmp
loope
outs
imul
and
lds
(bad)
xor
out
push
push
or
lods
cmp
push
ins
cmp
pusha
mov
inc
xor
iret
sub
imul
jge
(bad)
sub
and
mov
xor
jp
mov
mov
mov
mov
xor
popf
test
stos
jecxz
fimul
xchg
clc
pushw
xchg
(bad)
push
bound
aas
inc
popa
sub
add
jp
pop
popa
pop
push
pop
ja
gs
mov
adc
xchg
xor
imul
cmp
jnp
test
inc
or
popa
jbe
ret
aad
xor
push
jbe
xchg
cli
dec
jb
jl
push
adc
adc
mov
mov
push
xlat
mov
adc
sahf
mov
aas
es
mov
or
adc
mov
mov
bound
cmp
ins
mov
rol
sbb
sub
jg
mov
rol
mov
cmp
mov
js
xor
adc
movs
mov
jae
or
cmp
jo
xchg
jae
in
lods
out
lods
jecxz
xchg
push
xor
rol
test
sti
mov
jecxz
xchg
out
mov
jecxz
mov
mov
mov
stos
ja
add
call
fwait
mov
or
scas
mov
mov
xchg
cmps
sbb
scas
xor
ins
mov
clc
(bad)
mov
mov
pop
out
mov
call
or
call
call
mov
pop
jmp
fwait
lods
movs
nop
cmps
cmp
sbb
nop
sub
scas
shr
or
imul
(bad)
mov
scas
mov
add
jg
in
nop
cwde
in
xchg
in
xchg
mov
or
addr16
mov
out
mov
mov
mov
mov
lds
push
dec
and
pop
and
fisttp
(bad)
in
cmps
lea
imul
inc
mov
cmps
or
stos
scas
xchg
and
cmp
mov
xchg
fsubr
dec
mov
lahf
sbb
cmp
xor
stos
jmp
mov
in
lea
xlat
pop
sbb
mov
hlt
loopne
ss
movs
iret
mov
cli
movs
and
xchg
mov
and
jmp
xchg
test
(bad)
loopne
dec
sub
mov
(bad)
mov
pusha
xchg
push
xchg
xchg
data16
popf
adc
lods
mov
test
pushf
xchg
and
inc
(bad)
xchg
lods
lods
ins
push
inc
aas
stos
or
stos
lea
xor
inc
test
mov
call
in
movs
sbb
cmps
sub
push
xor
je
cmps
mov
add
mov
xchg
adc
push
pusha
cmp
out
popa
repnz
xlat
sar
and
inc
stos
in
jb
cdq
imul
xchg
mov
inc
push
fcom
scas
out
mov
fdivrp
jmp
rol
ret
inc
mov
dec
inc
xlat
scas
rol
mov
dec
bound
daa
leave
inc
mov
cli
mov
cmps
mov
iret
add
bound
mov
sbb
mov
cdq
mov
pop
mov
jg
add
push
aas
dec
jmp
add
adc
scas
pop
sub
inc
in
xchg
out
mov
mov
push
sbb
mov
out
mov
mov
clc
movs
cmp
push
out
xchg
push
or
add
stos
ret
jge
mov
fsubr
xchg
push
leave
adc
std
call
push
aaa
jnp
mov
inc
jno
and
dec
lods
in
or
jmp
icebp
cs
outs
xor
dec
mov
jo
xor
push
ins
aas
adc
fs
gs
rcr
sub
push
and
or
retf
jp
jbe
xor
jg
push
mov
pop
mov
xchg
adc
xor
dec
data16
mov
sbb
shl
or
jno
mov
int3
out
jmp
cmp
sbb
push
mov
popa
push
adc
jae
sub
ins
inc
rol
mov
js
nop
jge
pusha
sar
outs
cmp
arpl
cli
dec
jmp
jns
adc
jb
adc
add
pop
mov
rol
mov
push
movs
push
cmp
arpl
pop
ds
lds
or
inc
add
lds
mov
jne
jae
rcl
sub
inc
push
pop
repz
sub
in
(bad)
or
inc
scas
push
es
in
adc
mov
mov
pop
ja
add
popa
add
popa
cwde
or
int3
push
and
xor
js
pop
dec
ja
cmp
pop
cmp
and
fcomi
nop
popa
(bad)
mov
jo
outs
mov
rol
and
pop
bound
dec
and
dec
(bad)
mov
jbe
and
movs
add
por
lahf
(bad)
outs
sbb
ja
out
fisub
or
fnstcw
imul
fadd
pop
pop
pop
inc
bound
mov
cs
cmp
ret
dec
ret
pusha
stos
rol
sbb
push
aam
dec
popf
cmp
loopne
mov
repz
xor
rcl
add
test
cmp
ins
mov
aam
es
imul
push
jne
addr16
lods
sub
gs
push
cmp
iret
ja
sub
in
dec
gs
shl
and
sub
shl
inc
lods
test
pop
int
shr
dec
mov
sub
sub
(bad)
arpl
addr16
xlat
sub
loope
sbb
ret
mov
aas
pop
push
cwde
mov
daa
mov
sub
pop
lds
add
cmps
imul
cdq
nop
imul
ds
mov
addr16
xchg
pop
ss
sub
mov
(bad)
and
stos
mov
push
fisub
sbb
cmp
jo
jae
iret
and
dec
sub
sbb
push
sbb
adc
mov
cli
js
or
jmp
push
inc
mov
or
push
pop
aam
jno
jns
inc
dec
push
jns
ins
les
push
mov
call
mov
daa
add
shr
dec
fcom
cs
pushw
cdq
sbb
in
je
rcl
test
or
jmp
les
jmp
inc
mov
sub
test
in
test
lea
out
int3
jne
cmp
jbe
loopne
jns
addr16
jns
pop
shr
bound
scas
push
jae
push
add
cmp
jmp
lods
call
mov
fsub
je
imul
mov
push
or
test
data16
dec
cmp
outs
loop
and
scas
add
lods
mov
jo
mov
jne
jae
stos
jne
fs
cdq
popa
xor
adc
sub
ret
adc
pop
loop
jne
push
pop
rcr
adc
pop
cmp
add
and
pop
sub
imul
push
repnz
jle
in
(bad)
adc
pop
or
outs
sub
inc
and
push
pushf
pusha
add
mov
or
push
repnz
outs
fcmovbe
test
daa
outs
inc
mov
push
test
fs
cs
dec
rcl
dec
push
test
ins
mov
jne
add
mov
iret
sbb
jg
add
cmp
mov
jl
mov
call
sar
push
add
ret
leave
jl
jg
mov
push
push
xchg
in
or
inc
jo
out
jne
xor
(bad)
xor
cmp
cmp
mov
(bad)
mov
adc
dec
loopne
stos
aad
les
mov
gs
or
les
push
shl
arpl
sub
xor
jb
mov
mov
mov
jne
sbb
mov
cdq
into
mov
outs
push
ins
clc
dec
mov
enter
adc
jae
(bad)
push
ret
push
sbb
adc
pop
adc
pushf
mov
push
imul
pusha
in
je
jne
cmp
jp
or
mov
lock
test
es
cdq
cdq
js
ret
xor
cs
popa
sub
push
and
sbb
push
push
dec
lahf
dec
js
add
inc
(bad)
arpl
mov
pop
cli
xchg
(bad)
and
push
imul
cdq
push
adc
in
popf
adc
add
cmp
clc
mov
sub
pop
push
adc
(bad)
fild
aam
pop
sub
aas
or
adc
cmp
test
rol
mov
in
mov
pop
push
(bad)
das
stc
sub
pusha
jno
test
mov
push
in
sbb
xor
sbb
(bad)
mov
stos
imul
mov
cdq
dec
inc
jbe
add
cwde
outs
out
push
popa
loop
lea
stos
jmp
ret
mov
cmp
jne
jne
sti
ret
cmp
ret
std
xchg
add
shl
cmps
ret
mov
daa
mov
mov
jnp
lods
ftst
je
dec
mov
pusha
loopne
outs
lds
test
je
(bad)
cmp
lock
sub
mov
imul
shl
iret
emms
push
cmp
ins
cmp
xor
movs
cmp
cdq
frstor
ret
les
sub
dec
je
xor
mov
aas
bound
and
mov
mov
scas
jo
dec
push
push
and
lea
sbb
jbe
pusha
and
shl
rol
adc
out
mov
clc
dec
jno
scas
sbb
imul
xchg
and
push
pop
ret
mov
mov
cs
es
ret
sbb
jg
and
mov
imul
imul
sub
push
mov
inc
fld
arpl
mov
test
xchg
or
mov
cmp
sub
sbb
shl
and
leave
mov
and
mov
or
push
add
lds
(bad)
jecxz
sub
js
add
sub
mov
xor
or
in
inc
cmp
cs
call
mov
ret
jae
xor
add
loope
cmp
push
xor
push
mov
aas
jne
pushf
movs
mov
clc
jmp
cmp
push
pop
test
(bad)
push
push
imul
mov
mov
xor
retf
cmp
sbb
add
div
xchg
push
cmp
push
in
adc
dec
ret
arpl
and
dec
cmps
or
sub
xchg
mov
adc
out
shl
fadd
push
ror
push
lods
push
push
or
ins
pop
sub
sbb
loope
pop
xor
adc
outs
fs
pop
inc
pusha
les
lock
ins
test
movs
pop
sbb
sub
xchg
add
bound
arpl
loopne
jge
dec
rcr
sbb
mov
ret
call
(bad)
rcr
shl
iret
rcr
push
shl
adc
rol
neg
popf
mov
adc
or
outs
mov
mov
mov
xchg
xor
in
xchg
into
mov
call
iret
shl
jbe
adc
cli
shl
mov
mov
movs
push
data16
mov
adc
mov
in
xlat
rcl
mov
std
push
(bad)
mov
push
mov
test
mov
mov
push
lock
mov
ins
jb
mov
jg
mov
sbb
mov
add
js
sub
mov
and
push
and
add
push
outs
pop
sbb
mov
inc
jg
xchg
adc
xor
push
cmp
and
sub
mov
add
sbb
and
loopne
iret
fstp
sub
pop
scas
xchg
or
out
mov
xchg
xor
and
inc
mov
jnp
loope
mov
mov
dec
add
(bad)
ret
pop
pop
(bad)
mov
cs
mov
pop
mov
imul
or
sub
mul
retf
xlat
mov
mov
mov
xchg
mov
mov
mov
xchg
push
inc
aaa
push
test
pushf
mov
fdiv
or
out
push
jmp
fadd
out
imul
dec
xchg
out
mov
ja
fiadd
adc
data16
mov
push
and
mov
push
sbb
mov
mov
mov
data16
push
pop
ja
clc
leave
mov
lods
mov
xchg
mov
push
cwde
div
push
psrad
rol
movs
sbb
je
xchg
mov
or
mov
pop
or
push
ja
loope
pop
lea
jbe
inc
dec
mov
sbb
in
jb
mov
mov
add
aaa
jp
push
push
mov
cmp
stos
dec
daa
mov
pop
shr
out
mov
jo
shl
xchg
int
mov
xchg
sti
pop
out
sbb
jmp
fmul
mov
cmc
icebp
xchg
cmp
push
cmp
and
rcl
out
mov
jmp
mov
mov
mov
sti
stos
cmps
stos
test
mov
imul
imul
mov
or
xlat
sub
ret
icebp
adc
sub
fdivr
lods
push
lods
fisub
(bad)
aas
in
or
push
aad
mov
mov
bound
sbb
lock
inc
loopne
addr16
adc
xor
add
in
jmp
les
push
and
cmp
dec
stos
test
xchg
pop
je
mov
fld
arpl
dec
clc
js
ins
xor
(bad)
add
leave
cld
and
jbe
ja
adc
lea
mov
(bad)
xchg
leave
test
stos
jnp
push
mov
shl
push
loop
xchg
xlat
pop
imul
test
add
inc
xchg
push
xchg
shr
sbb
add
ret
imul
jbe
jb
data16
cmps
jmp
(bad)
xchg
imul
sub
ret
movs
rcl
rcl
jl
and
lea
and
jne
and
gs
iret
push
arpl
sar
shl
ins
movs
data16
ins
adc
popa
inc
popa
repnz
sbb
jo
sbb
jb
dec
jmp
sub
and
inc
and
call
rcl
(bad)
mov
xchg
loope
aam
adc
outs
arpl
and
shr
pop
inc
gs
cli
in
inc
jb
pop
movs
xchg
dec
es
or
dec
inc
xchg
int
and
cmp
loopne
jae
or
mov
inc
xchg
outs
mov
mov
pusha
pop
or
xchg
xor
xor
lods
cmp
cmps
add
sbb
aad
imul
(bad)
pop
(bad)
addr16
jp
add
push
je
sbb
out
popf
(bad)
call
mov
push
fs
sbb
popfw
lock
out
inc
push
xor
mov
cwde
cmp
imul
mov
arpl
nop
imul
stos
jb
cmp
xor
pop
movs
addr16
outs
adc
push
and
sar
mov
mov
jmp
(bad)
gs
or
add
mov
jae
test
movs
bound
sub
call
add
ss
test
fcomp
ds
retf
jo
popa
or
in
jae
push
ror
or
out
daa
push
and
sub
jnp
ret
jg
pushf
jne
jnp
or
inc
je
test
mov
inc
mov
xchg
xchg
jns
rcr
jl
test
movs
pop
mov
arpl
pop
xchg
popa
pop
adc
or
(bad)
jb
cmp
sbb
cmp
call
rol
cmp
test
jg
add
inc
lahf
push
mov
pop
push
dec
dec
adc
or
jl
popa
nop
sub
and
and
dec
or
push
test
sub
xor
(bad)
sub
bound
popa
sub
sub
das
iret
(bad)
cmp
mov
pop
rol
add
aam
mov
add
rcl
mov
mov
daa
pop
cs
and
add
cdq
test
inc
sub
je
push
mov
addr16
ins
stos
xor
sar
mov
mov
dec
fsub
mov
push
add
xor
cmps
xor
cdq
cmps
mov
rcr
xchg
adc
dec
xchg
xchg
adc
dec
sbb
sub
jge
fcom
xchg
scas
mov
in
mov
mov
div
imul
imul
mov
dec
ins
sub
xor
loope
push
test
push
mov
sti
jle
(bad)
and
fwait
and
test
sahf
jns
rol
pop
scas
mov
gs
fist
jno
push
push
ret
push
mov
test
neg
push
jno
or
pusha
add
and
mov
xchg
sti
lock
inc
mov
xchg
cmps
ret
mov
je
pop
sbb
sbb
sub
mov
out
shl
cwde
adc
or
test
js
imul
fdivp
pusha
xchg
popf
or
dec
push
inc
pushf
test
sub
mov
pop
fbld
stos
mov
dec
pop
xor
js
dec
ins
data16
pop
pop
scas
mov
xor
jge
imul
push
cmp
shr
xchg
mov
mov
mov
mov
fwait
arpl
rcr
mov
ins
call
jmp
pop
pop
fistp
adc
test
or
sbb
loopne
scas
imul
int
adc
ficom
aas
mov
scas
fldcw
shl
or
adc
in
or
xchg
pop
adc
pusha
adc
sub
test
jo
xchg
movs
inc
fwait
pop
or
jmp
add
pop
xlat
call
shl
sbb
idiv
mov
lods
inc
mov
test
mov
push
jo
lock
pop
cdq
imul
pop
outs
and
inc
call
mov
inc
aas
rol
arpl
das
cmp
loope
or
add
sbb
mov
clc
push
mov
pop
lods
mov
shl
outs
call
in
mov
dec
adc
jno
cdq
inc
xchg
(bad)
adc
inc
sub
push
loop
cmovns
pop
jne
addr16
or
or
add
ret
mov
add
jecxz
cmp
lea
push
lea
inc
or
(bad)
(bad)
int
mov
test
aad
int
or
add
or
and
inc
ins
rol
sub
cmovs
push
fsub
xchg
xor
cs
movs
mov
fst
out
(bad)
addr16
addr16
mov
popa
cmps
mov
adc
mov
das
mov
jb
push
and
sar
loopne
mov
or
shl
or
out
or
dec
push
shl
mov
push
mov
mov
call
jb
leave
daa
les
bound
push
cs
les
adc
xor
ins
gs
push
ins
dec
jmp
cmps
sar
imul
jne
add
int3
call
fbstp
xchg
pusha
jge
imul
add
pop
cmp
movs
popa
push
test
test
and
jns
mov
mov
int3
jbe
mov
xchg
sar
je
jo
sub
clc
jns
arpl
fsubr
loop
inc
add
fs
push
add
sar
add
aam
sub
les
out
adc
jb
arpl
or
popa
adc
pop
push
sub
or
popa
mov
pop
cmps
push
imul
jg
jp
add
outs
in
jae
sub
mov
mov
nop
and
ins
dec
fcom
mov
aaa
icebp
loope
dec
ins
call
mov
mov
nop
loope
pop
pop
mov
mov
xlat
push
jns
mov
dec
scas
arpl
cs
pop
dec
mov
outs
popf
dec
out
jns
push
sub
cmp
jne
sub
rcl
add
adc
daa
movs
adc
call
loop
jnp
xor
rcl
jle
cmp
mov
jo
xchg
je
loopne
ins
mov
xchg
retf
adc
fldcw
cmp
(bad)
pop
rcr
adc
(bad)
out
inc
ret
(bad)
mov
sbb
pusha
push
sub
mov
js
sub
scas
pop
push
adc
sbb
jp
stos
mov
push
dec
adc
in
sbb
xchg
sti
imul
inc
add
repz
enter
pusha
sbb
ins
test
test
xor
movs
sbb
hlt
imul
add
gs
adc
ds
pcmpgtb
popa
fld
push
sub
ja
push
gs
pop
popa
lahf
push
xchg
mov
(bad)
ins
and
mov
pop
push
movq
or
push
pop
inc
gs
pusha
mov
pop
add
add
or
iret
or
push
movs
pop
bound
pop
xchg
xchg
pop
push
or
sub
add
add
inc
(bad)
nop
sub
popa
pop
sub
push
das
dec
inc
mov
push
inc
shr
aaa
inc
and
inc
(bad)
mov
cs
pop
adc
push
pusha
add
(bad)
das
sbb
cmp
out
and
mov
fs
in
mov
mov
mov
mov
or
xchg
call
mov
sbb
and
cs
mov
adc
jmp
imul
ja
mov
jno
lock
outs
jmp
push
dec
jno
call
mov
cdq
inc
test
out
mov
mov
out
xchg
out
mov
cli
mov
pop
ret
mov
jmp
ins
jnp
inc
xchg
add
sub
add
test
adc
xchg
shl
ins
scas
push
out
mov
iret
xchg
loopne
in
or
or
mov
cmp
jg
sbb
mov
nop
(bad)
in
sahf
fwait
stos
and
mov
div
pop
test
imul
loope
or
in
mov
sbb
out
mov
in
mov
add
(bad)
jbe
les
in
mov
mov
ins
sub
mov
cdq
xchg
mov
inc
pop
xchg
fucomp
push
test
nop
xchg
call
fchs
call
test
loope
call
nop
lock
repnz
mov
mov
popa
mov
adc
shr
cs
cs
jbe
add
fmul
in
sbb
movs
daa
add
out
ror
push
xor
outs
jg
and
xchg
mov
mov
push
lahf
xor
xchg
mov
call
jmp
sub
pop
aas
xchg
mov
ret
ret
xchg
cld
add
lahf
in
xchg
shr
sbb
cdq
mov
clc
pop
out
movs
out
cmps
sub
sub
sbb
iret
push
push
mov
out
mov
and
and
jmp
cwde
shr
cwde
movs
aam
push
jle
daa
es
push
or
ror
out
mov
out
cdq
out
xchg
xchg
in
mov
mov
scas
push
ins
push
cmp
out
stos
mov
jno
hlt
jp
in
sub
hlt
movs
sbb
out
dec
outs
add
imul
sub
dec
add
sub
add
cdq
dec
push
add
add
add
out
jne
inc
pop
push
pop
xor
mov
adc
pop
imul
push
add
outs
xchg
jae
lods
sub
imul
movs
push
je
pop
stos
add
aaa
push
arpl
mov
push
jne
mov
or
movs
outs
mov
add
add
mov
rcl
gs
rcl
cmp
jecxz
xchg
jg
ret
mov
and
adc
push
imul
aad
test
gs
dec
xor
imul
aas
gs
(bad)
jb
popa
imul
loopne
outs
dec
sub
xor
adc
add
mov
push
dec
clc
or
les
inc
cmp
and
add
pop
mov
add
inc
cmp
xor
jo
add
sub
(bad)
int3
hlt
rol
iret
mov
cmps
les
ja
fst
or
mov
pop
inc
or
inc
mov
push
push
add
loopne
(bad)
shr
add
popa
inc
mov
je
neg
pop
add
dec
imul
add
cmps
ins
xor
mov
adc
push
dec
xchg
xchg
inc
add
push
and
and
push
add
push
fwait
test
std
(bad)
rcr
pop
ins
hlt
sbb
ins
fimul
jo
ja
xor
mov
fadd
faddp
or
pusha
mov
and
pop
add
je
push
cdq
xor
add
nop
test
dec
ja
push
add
stos
or
add
cmp
cmp
pop
push
jb
fwait
loop
sub
push
imul
pop
outs
jo
je
inc
push
ds
ins
lahf
jb
jbe
je
outs
jp
sub
jae
push
jae
jle
inc
mov
sbb
jg
hlt
cmp
movs
cmp
push
push
add
sub
jbe
ret
sub
jns
sbb
or
outs
dec
inc
pusha
test
pop
aam
arpl
aas
pop
outs
outs
and
inc
or
sbb
xchg
xchg
pop
or
div
lods
pop
jle
sub
fcmovnu
lds
mov
jp
adc
movs
inc
call
test
jae
movs
rol
mov
into
pop
add
test
dec
add
imul
xor
xor
addr16
mov
(bad)
aad
sub
and
test
cdq
push
and
ret
pop
ss
cmps
fisub
xor
popa
iret
xchg
call
add
in
and
jne
mov
add
xchg
in
lods
(bad)
pop
dec
jbe
fdivr
mov
int3
gs
sbb
pop
lods
pop
adc
lea
and
adc
stos
nop
sub
jp
bound
mov
test
mov
fwait
xchg
add
inc
push
sub
xor
inc
fsub
jmp
mov
loope
add
(bad)
mov
dec
ja
jge
icebp
cmp
mov
mov
sub
mov
pop
xor
mov
mov
jl
ret
and
pop
(bad)
rcr
mov
xchg
cmp
js
cmp
xor
or
add
mov
lds
inc
cmp
cmp
push
rol
mov
add
xor
lods
add
sub
sbb
inc
jne
nop
ror
or
mov
call
inc
xor
jmp
rol
xchg
mov
mov
push
pop
cwde
xlat
dec
aas
mov
jmp
shr
dec
xor
inc
es
popa
daa
and
(bad)
xor
pop
outs
inc
addr16
pusha
into
in
pop
mov
bound
add
aam
push
dec
cdq
test
repz
add
fist
jae
retfw
push
mov
mov
jp
mov
mov
xchg
out
enter
or
mov
jp
data16
popa
push
xchg
mov
sbb
dec
push
lods
call
popa
popa
mov
xor
xchg
push
cmp
jne
daa
xchg
outs
frstor
add
or
and
inc
and
dec
stos
mov
xchg
outs
stc
outs
ror
sub
push
jp
gs
or
add
cmp
ds
ds
lahf
fild
es
cmp
mov
xor
push
dec
and
popa
int
cmp
jbe
test
jp
fs
inc
pop
xor
movs
lods
adc
pop
out
popa
xor
ja
add
add
push
xor
dec
sbb
and
or
sbb
xor
sbb
sahf
hlt
and
loopne
cmp
or
rol
add
cmp
jl
cli
pop
or
mov
sbb
(bad)
mov
jge
or
lods
fs
leave
add
cwde
and
and
int3
in
mov
into
xchg
sbb
popa
(bad)
ret
sub
imul
jo
ins
ret
inc
cmp
push
mov
sub
xor
lds
sbb
jne
pcmpgtw
adc
ins
fdivr
and
add
jge
cmps
cmp
outs
pop
jae
or
dec
stos
xchg
bts
frstor
sbb
imul
pusha
jle
xlat
jne
call
sub
mov
(bad)
cmp
xchg
xchg
stos
mov
xchg
ret
add
pop
lods
pop
adc
ficom
add
arpl
popa
pop
xor
pop
inc
sbb
or
jp
cmc
push
jp
jb
push
cmp
retw
mov
aaa
push
or
jmp
sahf
inc
cmp
inc
or
(bad)
fcomp
cmp
pop
adc
aas
inc
xchg
mov
xchg
push
dec
addr16
add
mov
imul
and
inc
push
in
xor
add
cmp
and
ficomp
shl
or
xchg
fmul
add
or
or
mov
call
imul
ret
cmp
mov
lock
lock
pop
pop
loop
xor
adc
adc
fsub
xor
mov
je
adc
das
adc
std
cmps
into
pushf
into
mov
test
out
pop
mov
mov
or
outs
cmps
pop
into
mov
outs
idiv
or
lods
iret
xchg
adc
and
mov
mov
jne
or
into
mov
pop
mov
and
into
mov
scas
mov
mov
mov
xor
push
xchg
iret
lods
mov
mov
dec
scas
pop
sbb
aas
adc
mov
add
ror
mov
mov
and
cdq
jne
mov
sahf
push
mov
out
movs
loopne
movs
mov
sbb
shr
mov
outs
rcr
dec
or
js
sahf
mov
js
mov
mov
xlat
out
or
fistp
add
mov
and
rcr
fwait
or
cmp
movs
xor
fbstp
dec
cmp
mov
out
loopne
sub
push
jo
mov
pop
scas
inc
mov
mov
adc
xor
cmp
xor
push
mov
int
mov
add
ins
sbb
scas
shl
xchg
fidivr
fadd
cmp
sub
pop
mov
mov
aas
mov
lods
cmp
cmp
xchg
mov
int3
and
mov
mov
sub
arpl
push
not
mov
lock
scas
mov
inc
and
mov
sub
push
out
out
dec
jo
mov
sbb
pop
mov
cmp
mov
jle
push
xor
pusha
in
stos
push
sbb
fld
or
mov
xlat
stos
fdivr
neg
mov
lods
pushf
mov
ds
div
loopne
mov
sbb
popf
dec
jae
out
je
mov
xchg
pop
daa
mov
pop
fsub
cmc
cwde
dec
(bad)
outs
scas
call
inc
mov
or
xor
push
outs
pusha
mov
xchg
mov
popa
mov
pop
ror
in
or
inc
rol
fdiv
scas
loopne
popf
jmp
mov
shl
mov
mov
lea
adc
inc
or
xor
add
jb
sti
jnp
fs
jb
stos
push
test
fnsave
inc
mov
popa
pop
pop
mov
adc
add
pop
xlat
fnstsw
pop
push
pop
mov
lahf
mov
ret
popf
int3
cmp
popa
adc
outs
int
cmps
scas
or
adc
arpl
mov
pop
ins
mov
scas
lds
sub
lods
rol
imul
jmp
into
dec
push
xchg
jmp
in
adc
mov
mov
jge
adc
pop
cmp
scas
test
pusha
rol
inc
mov
(bad)
test
add
aas
data16
mov
dec
fstp
lock
mov
(bad)
xchg
xor
aad
imul
mov
jno
mov
or
mov
mov
xchg
dec
or
jg
nop
pop
call
cmp
test
data16
das
test
ret
and
lock
stc
out
jmp
dec
mov
jmp
frstor
pop
mov
add
(bad)
lds
js
add
xchg
loopne
pop
add
shl
das
mov
sub
scas
aad
mov
pop
mov
cmp
push
xchg
cmps
adc
mov
and
inc
adc
mov
and
mov
dec
adc
je
jmp
lods
push
pop
xchg
inc
outs
icebp
fs
imul
out
popa
fdivr
sbb
push
aas
ret
(bad)
adc
aam
ss
or
(bad)
lea
add
ss
mov
cmp
out
add
sbb
int
mov
pop
repz
out
mov
add
loop
lahf
in
mov
leave
or
ret
cld
fcom
aas
pop
ret
mov
pop
mov
cmc
pusha
inc
lods
push
cmp
rsm
xchg
push
fild
dec
cmp
jne
daa
outs
bound
xor
pop
xchg
add
aaa
and
add
add
or
gs
lds
and
jp
mov
push
out
call
sub
or
shl
xor
cmp
fsubr
mov
add
leave
sbb
test
bound
mov
mov
and
xchg
mov
add
aaa
aas
ins
das
arpl
jns
ss
jbe
push
outs
(bad)
shl
push
repz
add
add
sbb
push
add
lds
inc
outs
aad
xor
sbb
pop
inc
outs
outs
add
add
das
sub
(bad)
push
push
xchg
fstp
adc
mov
jmp
xchg
inc
jo
xchg
sub
cs
xor
add
test
dec
xchg
loopne
xor
xchg
sub
xchg
adc
xchg
(bad)
dec
sbb
(bad)
sub
arpl
add
adc
push
jae
cmp
push
inc
mov
add
mov
enter
ds
jg
or
xor
addr16
or
mov
dec
inc
xchg
pusha
mov
jns
(bad)
(bad)
add
fs
(bad)
leave
adc
jmp
inc
cmp
xchg
and
loopne
dec
dec
in
pop
adc
mov
fs
out
jno
pop
ror
add
add
call
sub
add
fsub
imul
add
fstp
add
lods
outs
or
loope
cmp
iret
add
lds
push
loope
ds
fimul
jecxz
ins
call
or
mov
mov
addr16
das
mov
sub
rol
vphaddudq
or
xor
ret
mov
pusha
imul
iret
cmp
cmps
sbb
dec
gs
inc
call
dec
push
lock
outs
lea
pusha
sub
ret
(bad)
lods
jo
loopne
inc
test
mov
in
test
fs
fiadd
ret
cmp
jae
pop
and
outs
pop
jne
jo
aas
addr16
add
inc
stos
imul
sub
mov
dec
xchg
xor
fdivr
mov
inc
add
repz
and
inc
bound
add
add
outs
push
add
xor
push
fcmove
pop
add
popa
add
mov
outs
inc
dec
xchg
out
ret
mov
or
fisub
pop
pop
or
cmp
in
popa
mov
adc
xor
jp
cmp
push
push
sub
ror
(bad)
and
cmp
mov
lahf
imul
or
ja
jle
mov
mov
inc
inc
stos
sbb
popa
fwait
jns
popa
inc
jo
pusha
dec
je
adc
nop
(bad)
fist
add
movs
cmp
ins
jo
mov
jbe
jo
rol
outs
loopne
gs
in
in
add
addr16
fs
dec
add
scas
inc
imul
sub
add
outs
cmp
adc
(bad)
jns
jns
add
stos
movs
(bad)
jbe
add
loopne
xchg
and
lods
arpl
ret
ret
mov
int
inc
or
pop
jo
ins
mov
adc
aad
and
add
ret
pop
scas
sbb
mov
mov
cmps
push
lds
add
inc
jae
or
push
adc
outs
rcl
and
sbb
push
push
sub
mov
ins
mov
sub
xor
cmp
inc
sti
js
outs
(bad)
aam
ds
dec
bound
jns
xchg
loopne
add
lods
jle
pop
xlat
(bad)
(bad)
dec
pop
ins
jmp
pop
inc
or
jno
mov
pop
push
adc
popa
ss
fiadd
cmp
push
outs
sub
lods
cmps
xchg
adc
rcl
jne
int3
int3
cmc
cmp
repnz
cmps
gs
inc
test
(bad)
xchg
xchg
fwait
jb
data16
mov
shr
jo
xor
in
int3
add
inc
adc
sbb
out
fldl2e
push
(bad)
jg
ins
loop
cmps
ret
jne
fild
les
xor
inc
call
push
lea
jno
movs
nop
adc
js
mov
sub
sahf
loopne
dec
push
mov
and
and
sub
or
ins
add
xor
popa
mov
adc
push
mov
and
add
aas
and
or
test
pop
dec
sbb
jbe
mov
test
inc
or
bound
popa
xchg
daa
cmps
cmp
add
test
mov
iret
push
pop
fs
mov
inc
mov
inc
xor
hlt
adc
cwde
dec
inc
and
and
sub
or
sub
sub
push
push
das
das
ret
mov
add
jae
push
inc
stos
je
add
add
add
xchg
add
jns
arpl
ins
ds
ja
outs
add
add
inc
sbb
dec
mov
push
das
inc
add
ins
sub
jne
and
jnp
adc
push
push
jne
sub
push
push
es
loope
mov
adc
fisub
call
enter
inc
pop
sub
test
push
add
mov
and
dec
sar
inc
fnstenv
push
push
add
push
shl
jns
mov
lods
jo
push
shl
cmp
add
add
mov
push
dec
rol
(bad)
(bad)
(bad)
(bad)
jmp
fadd
cmp
aam
mov
inc
mov
adc
repnz
(bad)
(bad)
inc
in
bound
imul
push
pusha
xor
sar
dec
out
(bad)
inc
mov
add
sbb
aaa
jnp
mov
xor
pop
div
xor
out
push
loopne
push
add
loopne
lahf
loopne
cmps
push
and
outs
out
fwait
mov
dec
ss
pop
(bad)
xor
xor
xor
ss
cmp
popa
bound
push
data16
addr16
pop
cld
and
bnd
mov
adc
dec
sbb
pop
push
aaa
sub
mov
jg
add
push
push
dec
push
inc
pop
add
push
cwde
push
mov
cs
cwde
inc
es
(bad)
pop
shl
push
jb
jne
push
add
addr16
push
je
cmp
out
xor
pop
pop
pop
fs
je
add
push
shl
hlt
gs
dec
nop
dec
sbb
pop
xlat
pop
inc
jbe
push
pop
jmp
or
xor
imul
(bad)
inc
add
clc
imul
das
daa
data16
xor
pop
mov
pop
adc
pop
and
shr
lods
dec
outs
dec
jbe
dec
hlt
sahf
cdq
push
push
(bad)
fadd
inc
div
cs
rol
push
jne
dec
stc
or
mov
add
dec
(bad)
mov
push
inc
test
dec
jo
and
mov
inc
inc
ins
stos
xor
les
je
adc
inc
outs
(bad)
push
pop
inc
fadd
setnp
cmps
ins
je
pop
sub
push
or
movs
jle
outs
push
push
cmp
xchg
and
xor
into
imul
je
aas
sub
stos
sub
and
mov
or
cs
sbb
xchg
push
push
inc
inc
dec
lods
and
mov
mov
or
in
ins
jmp
inc
and
loope
jno
lods
ret
cmp
and
stos
das
jge
in
or
sub
loopne
push
or
and
jne
out
xor
aam
pop
lea
pop
pop
inc
push
push
and
sub
das
ds
lods
inc
cwde
mov
fmulp
shl
inc
pop
pop
dec
pop
outs
aaa
pop
ret
add
xor
add
je
xlat
push
int
push
cmp
sbb
pop
les
jb
add
aas
add
inc
dec
dec
push
dec
inc
push
loop
push
ffreep
ja
inc
gs
inc
je
bound
gs
das
jl
nop
jbe
fisttp
jae
ins
sub
js
retf
gs
push
(bad)
neg
sti
fiadd
inc
inc
pop
ins
dec
arpl
push
pop
xchg
fidivr
data16
xor
xor
aas
add
ret
pop
xor
cs
dec
dec
dec
inc
enter
jbe
add
jmp
xor
or
mov
daa
cmp
mov
inc
enter
cmp
aaa
inc
retf
je
xor
jne
or
ins
jne
or
es
xchg
fsub
maxps
push
test
jae
call
push
pop
inc
adc
inc
cmpxchg
push
hlt
mov
sub
jbe
cmp
daa
jae
and
pop
hlt
outs
into
in
add
aam
add
push
popa
lahf
cmps
or
add
fist
and
rol
cmps
mov
aas
repz
sti
nop
test
in
add
add
aas
mov
add
push
aaa
nop
or
imul
in
adc
xor
xor
test
repz
jp
sahf
xlat
sub
imul
cmp
cs
push
ins
jae
cmps
push
outs
push
adc
xchg
iret
lods
sub
push
sub
push
add
mov
adc
sti
jmp
js
dec
and
rol
xor
inc
pop
fnstenv
add
call
ror
push
and
dec
push
push
cmps
enter
imul
adc
push
enter
cmp
dec
jae
push
xchg
(bad)
bound
fisttp
sub
rcl
lock
jne
data16
and
in
and
cmp
ret
pop
push
push
gs
outs
inc
mov
sub
ins
dec
int
ss
ret
cmp
pop
mov
gs
fs
xchg
les
xor
inc
cmp
xor
xor
pop
outs
pop
jb
scas
inc
jns
mov
cmp
push
xchg
lahf
cmp
popf
mov
jae
and
out
test
or
jns
imul
cmp
sbb
add
lods
idiv
mov
push
imul
push
mov
xor
lea
loop
push
push
cmp
inc
arpl
and
sbb
mov
ins
sbb
adc
neg
loopne
add
daa
outs
jb
movs
data16
bound
js
cs
sub
test
add
mov
mov
push
dec
inc
dec
sar
iret
cmps
(bad)
cmp
repz
add
push
cmp
add
clc
pop
hlt
push
add
repz
repz
iret
repz
sub
xor
cmp
cmp
repz
or
push
repz
repz
iret
repz
push
adc
repz
adc
iret
repz
iret
repz
test
mov
mov
cmp
sbb
sbb
repz
fcomp
loopne
iret
repz
call
and
cmc
and
and
jns
sbb
and
out
sahf
out
sub
sub
sahf
out
sahf
sub
sub
sahf
out
ss
aaa
pusha
cmp
jns
out
cmp
js
out
sahf
aas
add
nop
jns
out
inc
cwde
inc
mov
out
inc
mov
mov
dec
ror
sar
out
dec
fcom
push
out
sahf
out
push
lock
clc
mov
mov
xor
push
jg
fild
add
out
dec
or
push
adc
and
sahf
out
sub
cmp
inc
out
sahf
out
push
or
out
sahf
push
or
mov
cwde
shld
sahf
out
mov
mov
sahf
enter
loopne
jl
out
in
push
clc
sbb
repz
rcr
adc
sbb
iret
repz
sub
sbb
repz
pop
pop
and
iret
repz
jl
iret
repz
mov
and
repz
daa
mov
iret
repz
sub
sub
imul
clc
das
or
out
sahf
xor
xor
xor
jns
cmp
dec
cmp
jns
out
cmp
ins
sahf
out
sahf
cmp
test
nop
jns
out
inc
pushf
inc
test
out
sahf
out
inc
int3
inc
fcomp
in
lock
cld
cmp
repz
or
dec
adc
repz
repz
dec
cmp
repz
push
inc
push
push
push
pop
cmp
repz
push
cmp
xrelease
ins
test
imul
or
add
out
sahf
int3
pop
fmul
in
jl
out
lock
adc
cli
repz
rcl
adc
and
iret
repz
sub
cmp
repz
cmp
stc
cmp
repz
mov
add
jns
cmps
mov
rol
sahf
out
sahf
or
or
or
jns
mov
scas
push
adc
mov
and
cmp
repz
xor
pop
iret
repz
dec
or
or
iret
repz
sbb
test
sar
xchg
adc
adc
xchg
cmps
shr
dec
movs
test
adc
into
push
imul
push
adc
repz
or
sub
xor
int
cmp
dec
cld
pop
sbb
sbb
je
imul
test
cwde
and
movs
mov
sar
int3
cmps
rcl
fsub
and
jnp
xchg
hlt
and
std
sub
adc
xor
repz
or
das
sub
sub
test
xor
xor
xchg
cmps
rcl
xor
xor
dec
stos
xor
cmp
mov
rcl
cmp
inc
xor
cmps
xor
push
fadd
dec
movs
test
(bad)
push
cmp
repz
xchg
or
push
inc
(bad)
pop
jnp
es
add
fmul
iret
repz
dec
ficom
mov
ins
(bad)
js
test
cmp
repz
rcr
test
mov
rcr
iret
repz
inc
fmul
(bad)
in
and
inc
test
ins
mov
(bad)
fwait
add
dec
test
dec
xchg
and
sub
mov
iret
repz
push
inc
jge
mov
iret
fwait
or
add
push
iret
repz
inc
push
add
add
push
and
jns
mov
and
push
mov
stos
int
out
mov
out
sahf
out
in
cmp
lock
push
cld
int
or
adc
and
mov
inc
mov
out
sahf
out
pop
shr
adc
jns
je
adc
or
cmp
jns
mov
push
cwde
frstor
mov
mov
repz
aam
loopne
stc
cmp
repz
lods
clc
fild
out
sahf
cmps
xchg
adc
sbb
jns
jns
sub
xor
dec
(bad)
jns
out
ficomp
fs
dec
mov
pop
and
jo
repz
out
mov
sahf
jl
ds
dec
sub
mov
xchg
push
dec
adc
fwait
or
cs
mov
fwait
daa
or
lods
xchg
push
mov
sahf
les
dec
or
jns
mov
je
push
mov
aaa
add
icebp
cmps
inc
pop
out
push
dec
mov
or
mov
iret
ja
outs
dec
cmp
push
scas
push
xor
or
inc
cmp
xchg
sub
dec
push
cmp
dec
inc
pop
push
push
popa
xchg
cmp
jns
push
ins
pushf
push
sahf
not
mov
push
push
pop
aaa
nop
push
jb
cmp
inc
xlat
xor
pushf
js
mov
xor
outs
inc
mov
aas
push
ror
xor
jns
iret
repz
and
call
outs
add
xchg
sub
ins
push
or
iret
jae
dec
aaa
cmp
push
cmp
js
xor
push
cmp
dec
jne
mov
ja
push
pusha
xchg
jle
aaa
xor
cmps
adc
cmp
daa
sahf
test
jle
cmp
data16
adc
pushf
push
out
iret
jnp
adc
cwde
shl
iret
repz
lahf
loopne
dec
sahf
out
or
mov
push
adc
jns
pop
pop
cmp
cmp
repz
jbe
xor
mov
out
lea
and
inc
fs
push
repz
repz
iret
repz
cmp
iret
fwait
sbb
sbb
mov
sub
repz
ret
mov
in
cmps
jg
cdq
xchg
push
sbb
outs
push
pop
jns
out
aaa
xor
xor
clc
inc
out
sahf
out
mov
jns
add
pop
xor
sbb
push
iret
repz
sbb
es
repnz
jl
cwde
icebp
cmp
repz
(bad)
call
idiv
sahf
push
enter
aaa
adc
in
sahf
out
xchg
outs
push
add
push
loop
out
out
nop
and
outs
push
mov
out
sahf
cmp
dec
inc
push
jo
rcr
packsswb
into
dec
push
dec
fidivr
push
pop
idiv
jae
fs
gs
not
movd
jnp
repnz
call
mov
imul
add
jb
mov
jo
(bad)
mov
in
jb
jb
push
jb
in
jno
je
push
in
(bad)
fs
outs
bound
gs
xor
ins
mov
data16
mov
fnstsw
lahf
jp
jne
ins
data16
jg
outs
imul
sub
in
repnz
jne
push
iret
jbe
sbb
jg
scas
jo
or
outs
outs
ins
add
jge
fild
jns
fs
jecxz
mov
sub
jecxz
jecxz
(bad)
ds
inc
xor
mov
ds
pop
mov
push
inc
add
inc
dec
fcomi
out
push
sub
push
outs
mov
inc
add
inc
jecxz
scas
mov
pop
jne
(bad)
in
mov
pop
je
out
push
fiadd
aad
scas
mov
rcl
push
bound
jo
lock
cs
scas
(bad)
push
fbld
jb
push
push
aaa
dec
into
aas
dec
pop
fcmovbe
jbe
mov
jbe
jecxz
popf
cmp
je
pop
jb
shl
inc
mov
out
dec
jg
inc
pop
(bad)
movs
popa
out
gs
cmps
ins
ja
mov
dec
pop
mov
call
pop
je
aaa
cmps
shl
inc
dec
inc
dec
add
test
dec
pop
pop
imul
jne
ja
loopne
or
ss
mov
pop
mov
(bad)
pop
mov
xlat
inc
cmps
outs
jl
push
pop
dec
fbstp
dec
mov
mov
das
jae
ja
jno
(bad)
imul
jns
frstor
jne
push
out
sub
push
ja
es
imul
das
cmps
dec
pop
xor
xchg
mov
and
jb
jae
pop
mov
arpl
fwait
ss
xchg
out
out
xchg
or
(bad)
jmp
mov
jno
cmp
jae
ins
add
jge
dec
sbb
push
jmp
dec
setg
mov
daa
xlat
pop
div
xor
jg
pop
(bad)
leave
rcr
jg
jle
mov
push
jnp
pop
pop
(bad)
sub
pop
mov
inc
bound
fild
fisubr
mov
add
dec
ret
pop
inc
mov
pusha
pop
xchg
inc
dec
neg
out
add
jo
lods
movntq
xchg
xchg
push
add
ds
dec
add
add
mov
mov
fild
test
xlat
dec
mov
(bad)
push
in
sbb
mov
sbb
(bad)
in
cmps
fnstenv
outs
(bad)
dec
pop
jae
and
push
cmps
mov
loopne
pop
test
sti
das
inc
inc
outs
scas
ret
jo
shl
push
daa
pop
push
lods
frstor
inc
or
inc
dec
add
fucomp
mov
pop
xchg
push
dec
addr16
xchg
cdq
fidiv
lea
(bad)
and
inc
or
xor
inc
dec
jg
push
out
mov
dec
inc
not
(bad)
dec
das
outs
mov
or
dec
inc
inc
pop
push
imul
pop
aaa
das
inc
pop
push
das
stc
div
pop
push
add
ficom
adc
push
pop
sbb
adc
mov
jnp
cmp
push
xlat
or
mov
and
bound
push
and
repnz
pop
imul
enter
imul
ins
add
mov
mov
ins
out
cmp
movs
or
pop
ja
daa
pop
sbb
addr16
or
rcl
arpl
das
ins
mov
inc
or
imul
imul
jbe
ja
ret
out
rcr
ja
mov
aaa
loop
(bad)
add
ins
outs
in
ins
pop
push
push
cmp
retf
jne
ins
or
mov
addr16
jb
popa
dec
ins
xor
fst
bound
jp
pop
jnp
sbb
bound
test
jo
push
adc
add
mov
dec
(bad)
fisub
pop
jmp
jb
ins
das
pop
or
in
arpl
jae
add
ds
add
add
add
cmps
mov
push
xor
xchg
jb
add
outs
xchg
int3
das
jne
ja
aaa
gs
dec
dec
cs
imul
mov
add
or
pop
fsubr
mov
push
mov
dec
das
out
addr16
les
ja
fisttp
test
outs
das
push
jecxz
outs
out
popa
pop
or
mov
popa
ret
mov
or
stos
jno
ror
(bad)
js
jo
sub
(bad)
pop
push
jp
(bad)
das
outs
jl
lea
jns
mov
or
push
pop
not
sbb
cs
dec
cs
outs
outs
jb
mov
inc
jns
or
xchg
xchg
and
pop
or
shl
sbb
jae
fcmovbe
in
ins
les
jb
(bad)
pop
cmp
pop
sti
pop
jae
add
or
push
mov
out
jae
(bad)
stc
outs
cmp
pop
dec
pop
or
imul
imul
pop
imul
mov
or
jae
sti
jno
jno
ins
pop
das
add
cs
outs
and
add
adc
jbe
pop
test
imul
movs
sub
gs
or
call
inc
test
mov
jne
and
pop
or
adc
das
sar
jbe
mov
out
mov
mov
pop
je
pop
ins
enter
call
ins
add
fisttp
jbe
inc
iret
adc
adc
addr16
dec
jmp
cmp
ins
outs
outs
jo
xor
js
push
and
adc
or
or
or
pop
inc
and
sbb
push
inc
sahf
cmps
std
adc
adc
adc
push
or
lahf
inc
inc
inc
inc
inc
inc
out
gs
fist
add
or
or
push
ud2
mov
lock
(bad)
aas
add
sbb
xor
ss
cdq
mov
ds
xor
or
call
test
mov
movs
pusha
(bad)
aas
mov
inc
inc
dec
call
(bad)
aas
jmp
idiv
rol
dec
mov
inc
add
push
pop
rol
mov
dec
js
pop
and
popa
imul
push
sbb
arpl
xor
mov
cmp
shl
push
inc
stc
retf
movs
loopne
jbe
popa
aad
inc
mov
sub
je
sub
cmp
sbb
xor
mov
ja
outs
ja
cmp
mov
xor
jp
popa
mov
mov
fs
lock
adc
add
lock
das
push
outs
jb
daa
call
fldenv
add
lar
or
sahf
out
or
sub
jns
out
dec
pop
push
(bad)
out
nop
or
pushf
out
sahf
test
mov
pushf
out
sahf
mov
push
fidiv
(bad)
iret
repz
push
call
out
cmp
cld
add
or
out
or
adc
sbb
jns
out
and
sub
sahf
out
sahf
xor
cmp
inc
dec
jns
out
push
pusha
push
mov
int3
in
or
repz
dec
jo
mov
cmp
mov
fiadd
sub
inc
repz
rep
js
movs
out
ds
(bad)
in
adc
cmp
fsubp
jns
test
jle
sahf
out
sbb
adc
pop
mov
xchg
push
adc
es
scas
and
popa
ins
hlt
fs
ins
je
repnz
popaw
jae
jbe
fcmovne
xchg
ins
or
ins
jb
je
jmp
shr
je
ss
mov
pop
daa
cmp
les
test
adc
dec
fistp
scas
scas
ds
push
cmp
and
push
pop
shr
xor
test
pop
add
cmp
es
sub
repnz
cmp
ds
push
sub
sub
mov
addr16
jl
sub
sub
sub
iretw
outs
push
push
pop
xchg
outs
outs
loop
jbe
addr16
add
(bad)
fld
pusha
je
inc
outs
data16
adc
(bad)
shr
aad
lahf
xor
mov
pop
adc
pop
jbe
xor
aaa
bnd
sub
jecxz
jbe
sbb
add
int3
das
scas
and
xor
pop
jae
mov
fsub
mov
fs
inc
(bad)
cmp
aas
jne
sub
test
inc
imul
inc
outs
or
inc
dec
call
add
loopne
aas
or
mov
jo
push
pusha
jne
test
cwde
push
mov
push
fsubr
push
icebp
push
push
push
dec
ja
pop
enter
mov
inc
sti
outs
adc
outs
ins
mov
loopne
mov
outs
int
dec
aaa
cmp
inc
xor
xor
retf
ret
and
mov
push
dec
lahf
adc
pop
push
pop
ss
loop
fs
popa
(bad)
out
sahf
(bad)
sub
nop
aaa
mov
jmp
call
rol
and
push
scas
mov
xor
cmp
push
ins
out
and
inc
jmp
and
push
outs
or
sbb
and
push
lods
pop
sbb
in
inc
mov
inc
mov
jnp
test
dec
xchg
mov
mov
jmp
cmp
xchg
or
bound
cmp
or
or
sbb
add
lea
and
(bad)
nop
xchg
pop
jb
xchg
xchg
xchg
mov
mov
or
jecxz
in
or
gs
nop
es
pushf
jb
out
in
sub
mov
bndldx
repnz
mov
jae
mov
cmps
mov
cwde
sub
test
ds
push
stos
mov
pop
call
test
push
cmc
pop
push
js
into
pop
pop
adc
dec
cs
cmp
out
repz
add
adc
rcl
lock
ja
cmovl
add
das
sahf
(bad)
mov
dec
dec
outs
mov
push
cmp
es
ins
stos
lea
cs
push
das
test
jbe
jbe
cmp
(bad)
jg
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
aaa
(bad)
jecxz
cs
or
ds
inc
psubusb
inc
dec
dec
dec
dec
dec
dec
dec
sbb
push
inc
cli
push
inc
mov
pop
clc
and
hlt
pusha
sti
jnp
jge
jg
pop
add
or
scas
pop
out
cmova
push
sub
push
leave
and
dec
add
pop
jb
pop
test
and
jg
add
add
bound
shr
add
ja
mov
xor
adc
les
adc
add
add
inc
sbb
out
and
add
lods
stos
imul
add
adc
add
xchg
add
inc
dec
add
test
(bad)
dec
mov
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
jmp
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
dec
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
jmp
jno
push
and
inc
sbb
push
popa
aas
push
push
add
jae
(bad)
sbb
repz
or
or
mov
jbe
or
aaa
or
or
daa
adc
adc
mov
outs
das
and
(bad)
push
addr16
das
push
xorps
pop
imul
push
and
jbe
cmp
jb
pop
and
jbe
or
xchg
xchg
out
pop
xchg
sub
mov
fbld
adc
repnz
pop
sbb
jae
or
jmp
xchg
jne
add
push
sub
out
push
push
iret
mov
aaa
fs
jns
aas
cmovbe
(bad)
int
dec
outs
adc
pop
jb
outs
loopne
not
jbe
daa
dec
popa
mov
gs
out
mov
push
push
loop
jo
dec
sub
out
inc
xchg
aam
ins
xchg
sbb
ds
dec
outs
jbe
sbb
pop
mov
rol
js
into
cli
push
sbb
jae
jle
lahf
jle
fild
mov
xchg
je
cmp
jb
pop
cmps
outs
adc
or
push
dec
dec
jae
out
sti
das
fs
jns
add
dec
and
sub
dec
dec
cmp
cmp
push
mov
rcl
or
adc
pop
test
sbb
inc
mov
enter
stos
int
in
mov
jg
(bad)
jae
lahf
fcmovnu
ins
in
inc
daa
mov
and
out
imul
dec
daa
dec
jle
scas
mov
imul
adc
push
dec
mov
cli
(bad)
(bad)
aas
push
cmps
gs
xchg
loopne
mov
neg
sahf
add
iret
add
cmp
out
ret
jnp
mov
mov
and
ins
fucomi
pop
test
pop
mov
mov
or
pop
outs
pop
mov
sub
mov
bound
push
push
dec
mov
or
add
xchg
je
xchg
add
and
iret
out
jbe
push
dec
add
add
push
jae
jae
das
clc
sbb
push
add
add
or
adc
jns
out
and
cmp
repz
pop
pop
pop
pusha
fs
cmp
je
jl
repnz
repz
jns
ja
push
mov
(bad)
rcr
in
hlt
clc
add
or
jecxz
sbb
push
push
out
sahf
ja
xor
inc
dec
sahf
out
sahf
push
pop
ins
jl
mov
mov
fsub
call
lock
add
or
iret
repz
sbb
sub
cmp
aaa
sti
cmp
push
or
rcl
shr
in
push
or
xor
sar
add
xchg
and
add
repz
or
push
mov
jnp
idiv
and
ins
test
push
dec
loopne
out
and
pop
adc
inc
es
mov
jo
adc
add
fs
mov
ins
xchg
shl
xchg
inc
xchg
sub
inc
aas
ins
outs
xor
dec
lods
inc
mov
and
popf
ror
(bad)
xor
js
push
outs
cmp
lods
sbb
pop
aas
or
sar
ret
loopne
js
outs
popa
pop
pop
xchg
dec
push
xor
sub
xor
add
aaa
jae
out
mov
push
sub
push
ins
mov
ja
jae
xchg
pop
pop
dec
outs
xor
adc
into
jg
jp
aaa
mov
out
iret
pop
ja
outs
add
arpl
xor
pop
xchg
push
cmp
and
inc
sti
div
lea
(bad)
sbb
jmp
scas
je
adc
fs
inc
jmp
cmp
addr16
js
mov
popa
jae
fisttp
imul
xchg
add
inc
outs
jne
sub
jae
test
push
mov
aaa
sidtd
xchg
test
jnp
aam
repnz
adc
rcl
push
test
cmovl
mov
test
outs
inc
inc
sub
(bad)
and
dec
aaa
into
int3
stc
inc
push
pop
js
cmps
popa
xchg
push
inc
jnp
pop
xor
daa
and
outs
push
push
sbb
jne
(bad)
jle
sti
out
bound
xchg
test
jb
scas
gs
fnstsw
jmp
add
push
outs
jo
or
dec
xchg
stos
xchg
mov
(bad)
mov
sub
mov
aad
xor
popa
mov
xchg
mov
sbb
outs
mov
das
jecxz
add
in
pusha
imul
inc
inc
push
pop
aas
sbb
lock
push
mov
push
and
push
cmp
mul
push
loop
push
pusha
jmp
fs
xlat
daa
pop
and
outs
cmps
mov
pop
comiss
pop
xor
ss
mov
dec
cmp
dec
aas
inc
js
jnp
les
ss
jae
ja
add
fbld
fimul
cmps
ins
jg
mov
xor
sahf
and
push
gs
cvttps2pi
fiadd
fbld
stos
push
aaa
mov
jnp
outs
cmp
gs
mov
(bad)
imul
imul
jp
inc
inc
push
jns
arpl
je
retf
xor
jmp
jp
mov
mov
or
inc
popa
cmp
es
pop
mov
mov
fild
out
loope
ja
ret
jnp
ins
inc
aas
mov
and
dec
sbb
jecxz
mov
neg
bound
mov
pop
popa
(bad)
sbb
bound
fiadd
ins
xchg
jae
jbe
push
sbb
mov
pop
aas
repz
mov
pop
mov
jne
mov
into
popa
pop
xchg
js
arpl
js
push
adc
inc
or
push
cmp
inc
sbb
or
add
jg
inc
js
lods
rol
aaa
jne
(bad)
push
test
jne
adc
not
lahf
cmps
fbld
emms
jno
out
mov
scas
sub
add
dec
test
add
das
add
jo
aaa
popa
pop
(bad)
mov
fsub
and
(bad)
bound
xchg
push
lahf
sub
mov
mov
out
(bad)
and
xchg
fldenv
sbb
sub
iret
sub
rcr
ror
(bad)
aaa
inc
mov
pusha
and
sub
je
es
aad
loope
ja
imul
aas
pop
jae
ja
inc
out
daa
inc
add
push
out
mov
mov
mov
lea
shr
push
aam
leave
sbb
pop
jb
fmul
pop
mov
inc
sbb
mov
inc
sub
das
push
(bad)
mov
dec
dec
ror
pop
int3
sub
pop
mov
pop
dec
push
add
sbb
jae
fdivr
pop
dec
cmp
iret
leave
js
nop
push
mov
push
lock
push
or
sbb
xlat
and
cmp
outs
push
aam
das
pop
inc
mov
out
pushf
push
mov
add
ror
jmp
sub
dec
and
jg
repnz
movs
sub
add
in
inc
push
push
push
mov
dec
pop
aam
mov
sub
push
ja
pop
inc
inc
pushf
cmp
iret
dec
pusha
dec
test
leave
jae
lods
inc
in
add
mov
mov
sahf
xchg
out
je
xchg
dec
out
cmp
dec
fadd
and
cs
cmp
jae
pushf
push
pusha
pop
xor
cmp
push
movs
adc
les
cmp
das
imul
imul
push
push
cmp
xchg
das
pminsw
es
dec
push
or
das
es
fisubr
inc
sub
inc
das
ja
(bad)
shl
push
push
dec
iret
push
mov
xlat
adc
mov
mov
mov
das
push
sar
dec
push
fcomp
inc
cmps
mov
dec
test
or
inc
mov
in
ins
pop
xor
pop
ret
adc
ror
pop
aaa
std
dec
sbb
push
dec
or
sbb
adc
add
or
add
or
adc
sbb
scas
pop
nop
cmp
arpl
rol
xor
mov
out
inc
cmp
data16
push
push
cli
mov
bound
fimul
ins
outs
shr
js
add
xor
jns
iret
jnp
out
dec
inc
outs
jb
jns
push
xor
mov
xor
ss
data16
cmps
fidiv
push
jl
jns
out
sbb
pop
int
jns
mov
xchg
and
xor
ds
repz
or
jns
out
adc
sahf
out
adc
and
out
sahf
or
or
adc
jns
inc
sbb
out
sahf
out
sbb
pusha
sahf
out
sahf
pop
push
jns
out
and
and
push
out
sbb
add
pop
sbb
xor
fistp
out
pop
sahf
test
lock
out
jg
mov
add
fdivr
ss
rcl
push
leave
(bad)
aas
adc
std
(bad)
aas
fwait
invd
inc
or
or
add
ret
push
xchg
mov
jg
imul
fbld
mov
mul
xor
sti
dec
mov
sbb
push
pop
and
add
lods
dec
outs
dec
mov
popa
and
aaa
push
xchg
xor
pop
add
add
pop
aas
add
sbb
jnp
aas
movups
(bad)
sahf
or
das
pop
ja
jg
js
mov
call
aas
pop
mov
pop
xor
pop
cmp
inc
add
imul
dec
ror
lock
jg
fwait
pusha
loope
stc
into
xchg
inc
xor
(bad)
cmp
xchg
or
push
test
rcl
xchg
fs
aas
neg
(bad)
jle
stos
push
inc
xor
jp
mov
ins
jp
out
cmp
js
jae
fsub
jno
or
add
adc
ss
or
sbb
xchg
std
jae
aas
inc
jae
test
adc
cmp
cmp
call
or
jl
(bad)
dec
jle
add
cli
ja
in
push
jl
sbb
push
sub
(bad)
call
fidiv
add
imul
adc
sbb
cld
adc
(bad)
mov
ficomp
sahf
rcr
xor
sub
lods
mov
sub
ds
imul
iret
(bad)
cli
mov
icebp
bound
or
pop
push
pop
cmps
aas
fist
mov
(bad)
jle
add
rcl
enter
inc
ret
sub
pop
inc
fprem
(bad)
out
call
adc
mov
jbe
scas
sub
in
pop
pushf
mov
aam
(bad)
(bad)
(bad)
stc
push
push
aas
loopne
gs
sbb
mov
loop
lds
jmp
aas
rep
(bad)
int
les
sahf
sub
jae
mov
lahf
jge
and
ret
pop
dec
jmp
mov
jp
mov
jle
dec
or
mov
int3
in
out
call
mov
mov
xor
icebp
ss
push
mov
mov
outs
(bad)
push
and
push
sub
jmp
sub
jmp
ins
shl
aas
jmp
in
(bad)
push
add
ja
mov
push
(bad)
cmp
fwait
ins
sar
cli
loope
lea
or
or
mov
cld
int
push
push
shl
mov
sbb
add
(bad)
push
ret
scas
(bad)
aas
shl
or
neg
inc
arpl
or
fisubr
ds
jns
cld
ret
aas
fs
jns
pop
push
mov
call
sub
aas
xor
mov
cli
and
push
push
push
cs
iret
jmp
xor
adc
lds
sub
fbstp
neg
sbb
push
adc
(bad)
cld
popa
ds
push
mov
cdq
xchg
cld
sub
in
fiadd
sub
dec
jmp
(bad)
aas
int
inc
bound
xchg
mov
aas
lds
xchg
push
in
aaa
cld
into
data16
xchg
lock
or
int3
out
aaa
jg
mov
ss
out
fistp
aas
in
(bad)
jp
and
in
fwait
stc
rcl
pop
jmp
xor
movs
outs
retf
pop
(bad)
std
(bad)
stc
sub
lds
stos
fs
imul
out
(bad)
(bad)
push
jb
js
and
xor
mov
jl
push
int
retf
push
add
(bad)
out
popf
xchg
jb
out
inc
mov
nop
adc
adc
aas
or
jg
int
sbb
std
stos
pop
lahf
jae
xlat
mov
pusha
cld
(bad)
stc
(bad)
jle
cmp
xchg
repnz
icebp
adc
jbe
pop
push
push
pop
jmp
sbb
push
jae
pop
ror
inc
pop
or
and
repz
pop
imul
call
(bad)
adc
ds
push
xor
stc
fwait
xchg
popa
xor
xor
xor
dec
jmp
inc
xor
mov
inc
sar
mov
(bad)
imul
pop
sub
and
and
xor
jle
jmp
iret
cmp
jmp
(bad)
fcomi
sar
fisttp
or
cs
daa
dec
inc
dec
push
sar
stc
pop
movs
sub
jle
repz
(bad)
adc
sbb
sbb
jno
mov
aaa
sahf
lods
imul
rcl
movsx
aaa
mov
xor
fdiv
rol
pmulhuw
stc
sqrtps
call
or
and
pop
mov
and
sbb
cmp
pmulhuw
test
call
and
in
pusha
scas
cwde
pop
pmulhuw
cmp
jo
in
cmp
shl
jo
aad
cmp
movups
dec
enter
in
pusha
cmps
inc
dec
enter
clc
sub
enter
cmc
rol
adc
clc
dec
js
adc
inc
sahf
jo
shl
mov
in
pushf
nop
jle
dec
mov
daa
mov
cmp
daa
in
xchg
pop
imul
jmp
jns
ret
adc
adc
jo
shl
repnz
xor
pushf
nop
outs
and
shl
test
pop
cmp
daa
in
sbb
(bad)
int
xchg
and
in
push
pop
loopne
daa
in
cmp
jecxz
lock
jo
in
cmp
add
xor
dec
jns
sldt
add
add
mov
pop
ja
into
clc
or
xor
out
(bad)
shl
(bad)
add
ror
fsubr
js
and
aaa
iret
mov
out
dec
inc
addr16
mov
scas
cmp
pop
push
int3
xchg
mov
nop
sub
mov
dec
ss
in
or
sbb
inc
cs
in
cld
or
dec
push
pop
push
pusha
daa
aas
xchg
imul
ss
cs
cwde
ja
test
jl
pushf
fsubr
mov
jns
rcl
in
in
repz
add
xor
out
add
neg
mov
jae
sahf
fwait
add
mov
test
pop
test
pushf
xor
imul
les
test
inc
pop
adc
pop
in
add
fdiv
addr16
push
dec
push
xchg
outs
ins
and
xchg
loopne
and
or
test
xchg
inc
xchg
jl
mov
fmul
inc
scas
in
and
enter
out
adc
push
sub
imul
and
lea
xor
jl
pop
pop
daa
xchg
jns
jbe
pop
add
cmp
lods
cs
dec
sahf
mov
nop
out
mov
or
aaa
es
mov
lahf
ror
sub
ror
loopne
push
pop
sbb
jns
das
jg
add
in
push
in
fwait
adc
push
or
mov
ja
or
xchg
mov
push
pop
cmp
ins
ss
cmp
inc
cmp
add
jns
out
(bad)
adc
cmp
repz
cmp
out
call
jmp
inc
jp
out
dec
repz
and
and
push
cmp
push
and
js
ds
repz
sub
test
and
push
js
sub
pusha
out
ds
repz
inc
shld
cmp
adc
out
xor
xchg
add
sub
fs
push
es
adc
popa
inc
push
push
add
dec
and
retf
fdiv
ja
or
pop
icebp
fdiv
push
add
add
adc
cs
fst
fadd
imul
(bad)
call
jae
dec
iret
mov
call
add
inc
push
and
jg
xchg
clc
mov
repz
cmps
pop
cmp
dec
idiv
imul
xor
xor
xor
xor
bound
mov
pop
fsubr
cmp
mov
pop
ja
pop
fsub
and
imul
cdq
cmp
cs
bound
sbb
test
fstp
adc
lods
je
fnstcw
adc
addr16
xchg
lahf
es
or
ins
outs
das
pop
test
std
xchg
js
das
fucom
push
(bad)
outs
jns
xor
lods
outs
or
xchg
dec
sti
dec
adc
dec
add
xor
addr16
lods
bound
xchg
pop
inc
inc
inc
daa
inc
dec
sahf
out
mov
loope
sub
dec
enter
outs
push
daa
int3
pop
cmps
mov
dec
aam
inc
xchg
xlat
sub
jbe
in
dec
gs
hlt
xbegin
push
cld
addr16
pop
dec
and
pop
mov
xor
inc
or
mov
lahf
or
push
inc
adc
sub
pop
and
sbb
fisub
ss
push
es
dec
call
sbb
test
cs
inc
sahf
retf
sub
cmps
xor
dec
retf
add
int3
stc
mov
and
add
pop
lock
nop
div
movs
add
arpl
cmp
dec
push
fwait
or
cld
daa
dec
inc
into
hlt
adc
in
mov
ins
dec
enter
pop
stc
daa
xor
mov
daa
js
imul
mov
sbb
mov
je
xchg
xor
sub
pop
imul
jae
push
adc
cmps
les
and
jmp
(bad)
fidivr
mov
push
out
pop
in
push
mov
sub
pop
add
jbe
sti
in
pusha
push
inc
punpckhbw
push
fild
int3
iret
add
dec
sahf
add
xor
pop
fsub
mulps
push
add
sbb
sahf
add
rcl
and
mov
in
inc
(bad)
loopne
xor
pop
addr16
xchg
and
lock
jbe
mov
push
pop
repnz
inc
pop
jle
inc
daa
mov
sub
cmps
addr16
iret
cmp
add
inc
sbb
cmp
inc
pop
push
jne
jl
pop
pop
jns
out
pop
push
add
sahf
out
leave
add
add
fild
inc
add
imul
push
and
in
lahf
xchg
mov
xchg
pusha
inc
pusha
lock
pushf
fs
fwait
loopne
iret
adc
ins
pusha
and
cmp
es
jb
loope
pusha
das
push
and
xchg
dec
repnz
in
and
js
and
popa
mov
lock
push
shl
pop
leave
and
push
dec
dec
or
and
pusha
and
mov
mov
pusha
push
add
out
daa
jo
add
pop
nop
and
inc
fwait
and
cmps
cmpxchg
pop
ret
inc
jmp
inc
out
push
test
dec
cmps
or
enter
clc
and
and
and
nop/reserved
mul
push
loopne
adc
add
nop
xor
mov
and
pop
and
mov
nop
leave
and
pop
inc
and
fs
pop
jo
lock
and
push
pop
or
loopne
add
pushf
call
jns
das
dec
add
es
cmp
and
xchg
xchg
pop
es
and
jns
ret
and
bound
push
pop
je
pop
les
dec
or
pop
fdiv
loopne
mov
cs
clc
repz
imul
push
push
or
adc
aas
(bad)
outs
je
inc
pop
dec
adc
jns
retf
enter
movzx
add
les
(bad)
and
repnz
dec
or
(bad)
inc
push
pop
sub
scas
add
jmp
dec
xchg
add
dec
lahf
dec
pop
xchg
daa
and
jmp
int3
dec
xlat
fdiv
data16
and
pop
pop
inc
or
mov
push
push
pop
shl
adc
and
addr16
outs
mov
outs
int
push
(bad)
pop
fmul
pop
sbb
cs
(bad)
fisubr
in
aas
int3
fucom
cmp
cdq
fdiv
out
xchg
mov
iret
out
out
call
into
jnp
push
fdiv
pop
mov
sub
test
xor
clc
xor
scas
jbe
ja
out
pusha
out
pop
jb
shr
rol
das
inc
shr
cmp
addr16
pop
adc
in
cmp
aas
ja
pop
xor
inc
jbe
inc
cmp
in
or
inc
push
dec
test
or
shl
push
adc
xchg
dec
aas
adc
sbb
cwde
xlat
pop
or
imul
imul
iret
ins
adc
push
adc
sbb
sub
adc
sub
add
dec
or
or
mov
in
ins
rcr
ss
aas
jg
push
jo
fstp
addr16
ja
iret
ds
inc
cs
jg
inc
repnz
arpl
popa
xchg
pop
mov
xchg
jnp
pushf
push
dec
sbb
fimul
xchg
xchg
mov
inc
(bad)
daa
xchg
pop
fwait
mov
add
ins
bound
int3
jg
cmps
in
push
pushf
enter
loope
add
loop
mov
pop
dec
pushf
sub
les
clc
(bad)
es
sbb
xchg
sbb
inc
dec
and
and
iret
dec
or
adc
pop
(bad)
push
jmp
mov
pop
jmp
das
add
and
stos
lods
mov
mov
adc
pop
inc
out
mov
push
les
clc
enter
repz
int3
enter
fcomp
fsub
cmp
dec
cmp
sahf
out
cmp
in
sbb
lock
jns
call
cmp
out
mov
or
or
adc
adc
ja
out
sbb
ds
push
xor
or
out
repz
push
jo
(bad)
sti
mov
sub
push
int
jns
scas
push
lods
int3
clc
sub
dec
call
add
jo
fnstcw
scas
dec
push
sbb
add
cmpxchg
fistp
add
inc
in
aam
inc
aad
xchg
add
repnz
or
jo
movs
mov
ins
out
sub
push
cs
test
aam
cmp
test
jbe
inc
inc
push
pusha
in
xor
and
cs
je
dec
inc
xor
mov
dec
dec
and
inc
dec
push
push
or
push
inc
push
push
inc
inc
or
sub
das
cmp
cwde
test
lds
movs
jle
cmp
inc
iret
mov
dec
and
enter
add
or
inc
xor
iret
enter
push
push
inc
mov
inc
nop
in
pop
and
mov
movs
(bad)
jno
and
adc
aas
inc
cwde
(bad)
adc
daa
and
pop
xchg
cs
xor
frstor
sbb
or
or
or
add
iret
scas
pop
mov
sub
or
mov
sbb
jge
js
cmp
add
movs
add
cmp
cmps
fisttp
mov
repnz
mov
fmul
in
add
mov
(bad)
mov
mov
sbb
in
call
dec
and
adc
push
ficomp
mov
pop
fisubr
xor
fcomp
loopne
jb
jle
nop
stos
fiadd
adc
les
arpl
add
adc
jge
inc
add
pop
jae
cmp
inc
aas
add
xor
stos
sub
cmps
add
cs
fiadd
outs
add
mov
push
push
push
mov
sub
push
inc
push
mov
push
daa
(bad)
lahf
(bad)
arpl
inc
push
gs
cmp
pop
fadd
or
inc
aas
push
xchg
xor
aaa
ins
cmps
fadd
out
xor
aaa
pop
inc
popa
jo
and
ffree
ss
adc
addr16
jg
pop
inc
jb
fadd
pop
xchg
or
push
arpl
lds
clc
cmp
inc
inc
inc
ja
les
dec
push
je
jo
push
dec
pop
sub
add
addr16
(bad)
mov
mov
rol
mov
fild
imul
outs
lahf
xor
pop
inc
xlat
imul
and
jp
mov
test
fwait
div
mov
mov
jg
sbb
jnp
outs
pop
ror
mov
pop
jo
pop
sbb
loopne
push
outs
and
dec
add
adc
test
dec
add
mov
add
and
add
nop
inc
add
add
adc
adc
add
fnsave
jo
mov
or
cdq
mov
outs
pop
repnz
sbb
shl
out
push
push
fistp
push
inc
outs
fs
data16
xor
mov
push
push
add
call
movs
ja
sbb
xchg
adc
lea
adc
les
addr16
imul
jns
fisubr
retf
pushf
jae
push
jb
jmp
mov
es
lock
adc
pusha
pop
pop
sbb
jbe
push
cmp
popa
out
sbb
dec
popa
call
aad
adc
lds
fisttp
sub
(bad)
inc
fidiv
jo
xor
xchg
mov
inc
js
movs
mov
sub
js
out
sub
dec
je
inc
jns
mov
cdq
inc
push
push
inc
bound
or
imul
punpckhbw
mov
pushf
inc
dec
xor
scas
ins
sbb
int
dec
fs
xor
pusha
adc
bound
cdq
out
add
js
or
(bad)
xchg
js
jo
pop
xor
pusha
xor
or
sbb
or
jo
arpl
fs
imul
xchg
mov
push
jg
dec
es
cmps
cdq
push
inc
leave
les
push
idiv
in
jnp
sbb
fs
dec
fidiv
xchg
jge
jg
je
push
dec
loop
lods
xor
test
mov
and
inc
push
arpl
icebp
(bad)
fmul
jmp
jl
and
xchg
cmp
dec
inc
nop
inc
and
dec
inc
push
adc
xchg
popa
addr16
(bad)
and
das
pop
sub
fadd
push
jno
sub
cmps
add
adc
sbb
sub
sbb
mov
inc
popa
mov
cmps
sbb
xchg
pop
rcl
add
jae
mov
push
je
ret
xchg
rol
fwait
(bad)
dec
sbb
ins
sbb
xchg
push
xchg
mov
sbb
cdq
js
sbb
cmps
dec
pop
adc
aaa
jns
mov
sbb
inc
adc
sbb
iret
es
push
mov
pop
outs
jae
and
shl
sbb
or
cs
push
sti
inc
fwait
ret
xchg
dec
inc
sbb
test
xchg
cmp
dec
cdq
push
fisubr
inc
pop
(bad)
mov
mov
cmc
sbb
jnp
xor
bound
addr16
and
data16
enter
xor
push
leave
pop
aad
fsub
sub
pop
movs
jno
scas
push
es
imul
add
pop
dec
pop
pop
add
arpl
ins
cmp
dec
sbb
or
add
add
cwde
in
inc
mov
xor
xor
adc
int3
jle
and
push
xchg
xchg
sub
outs
imul
sub
inc
pusha
sub
xlat
icebp
cmp
mov
jne
dec
dec
gs
or
cmp
fcmovbe
inc
jns
(bad)
sub
or
cmp
push
mov
in
jmp
imul
push
je
push
js
xchg
pop
fyl2xp1
fiadd
cmc
xor
pushf
jno
cwde
and
iret
inc
jne
sbb
or
inc
and
or
jnp
and
push
add
data16
ds
dec
inc
push
daa
dec
mov
push
icebp
or
inc
push
and
xor
cmps
loope
xchg
or
push
cld
xchg
lahf
xchg
jno
hlt
and
adc
inc
hlt
jns
inc
(bad)
ins
dec
mov
imul
stos
xor
xchg
cmp
push
jbe
dec
js
pop
jo
push
pop
inc
inc
outs
js
cdq
outs
xor
aas
push
mov
inc
inc
jae
sar
popa
or
and
lds
(bad)
jecxz
lahf
inc
js
test
jno
xor
pop
pop
std
and
bound
adc
(bad)
jbe
pop
mov
adc
inc
xor
fwait
add
outs
and
jns
int
add
xchg
push
mov
sbb
add
xor
lods
mov
arpl
cmp
cs
gs
xchg
dec
ja
add
adc
lahf
pop
mov
sub
arpl
add
rcl
sbb
sti
inc
dec
inc
jns
adc
jae
or
cmc
push
les
xor
mov
inc
call
cmc
adc
pop
es
sub
xchg
mov
push
and
add
adc
mov
cld
push
retf
daa
and
sub
mov
xor
pop
add
lods
aas
pcmpeqd
jl
mov
add
sub
xchg
or
ins
out
fsubr
sub
out
inc
enter
dec
ds
add
clc
fcom
xchg
cmp
fst
push
in
jae
push
push
or
and
outs
movs
sub
pusha
add
sbb
sbb
test
mul
out
sbb
out
retf
stos
cmps
ins
add
cmp
push
xlat
mov
dec
test
add
mov
lock
js
das
call
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
push
inc
add
add
add
add
add
add
add
add
xor
add
pusha
add
adc
add
mov
add
add
add
add
push
add
add
add
add
cwde
add
add
add
rol
add
add
add
add
add
cmp
add
add
add
or
add
ret
push
add
add
add
add
mov
add
add
or
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
push
add
or
add
add
add
add
add
add
inc
inc
pop
add
add
add
add
add
add
js
add
add
add
or
add
stos
pop
add
add
add
add
mov
add
add
add
add
add
add
stos
pop
add
add
add
add
clc
add
add
add
or
add
add
add
add
add
add
add
add
and
add
adc
add
and
add
add
and
add
add
xor
add
ss
jmp
inc
inc
inc
add
add
es
pop
call
sbb
jmp
and
jmp
sub
(bad)
cmp
inc
dec
inc
add
add
and
call
sbb
call
pop
sbb
sbb
push
jmp
and
call
pop
and
and
and
and
xor
dec
inc
add
add
das
das
call
sbb
call
sbb
call
pop
sbb
sbb
push
jmp
and
jmp
and
call
push
and
pop
pop
and
and
and
and
and
dec
dec
dec
inc
add
add
ds
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
sbb
push
jmp
and
aas
aas
inc
push
aaa
cmp
and
call
pop
and
pop
pop
and
inc
inc
inc
inc
add
add
inc
call
sbb
jmp
and
call
pop
sbb
sbb
push
(bad)
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
(bad)
cmp
notrack
es
inc
inc
inc
inc
add
add
ss
jmp
cs
ss
ss
sub
sub
sub
(bad)
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
inc
add
add
ss
xor
ss
xor
das
push
jle
(bad)
cmp
adc
xor
dec
inc
inc
inc
inc
inc
inc
inc
inc
jmp
inc
push
aaa
push
aaa
cmp
xor
(bad)
cmp
push
arpl
(bad)
cmp
jmp
push
adc
inc
push
push
imul
xor
pop
pop
inc
add
add
jmp
(bad)
inc
inc
call
das
sbb
push
mov
sbb
inc
mov
(bad)
sbb
inc
xchg
inc
sbb
cmp
(bad)
sbb
jmp
dec
adc
aaa
aaa
cmp
dec
dec
dec
jmp
dec
pop
jmp
inc
sbb
es
sbb
sub
jmp
dec
sbb
sub
(bad)
cmp
call
jmp
push
(bad)
cmp
pop
pop
and
inc
inc
inc
inc
add
add
ins
jmp
daa
jmp
xor
jmp
and
inc
(bad)
sbb
inc
xchg
sbb
dec
mov
sbb
push
and
pop
jmp
sbb
and
and
das
das
xor
add
add
fs
push
(bad)
ds
call
sbb
jmp
inc
sbb
and
sbb
and
sbb
sub
cmp
sbb
pop
lds
jmp
cs
inc
add
add
clc
clc
inc
add
add
loop
jmp
jmp
push
jmp
jmp
jmp
jmp
push
call
xor
dec
dec
push
inc
add
add
add
add
(bad)
(bad)
inc
add
add
fsub
jmp
push
jmp
push
jmp
push
jmp
and
push
xchg
xor
push
push
push
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
loopne
(bad)
jl
inc
inc
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
jg
add
sldt
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
mov
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
inc
ret
add
add
add
add
add
add
add
add
add
and
and
and
call
sbb
jmp
xor
inc
call
add
add
add
add
add
add
add
sub
sub
pop
pop
sbb
sbb
push
jmp
and
jmp
and
jmp
and
sub
inc
inc
aam
add
and
add
push
add
add
add
add
add
add
add
push
push
push
pop
fstp
sbb
sbb
sbb
pop
pop
sbb
sbb
push
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
sub
(bad)
cmp
cmp
ss
add
add
add
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
sbb
push
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
push
xor
aas
aas
inc
cmps
add
add
add
add
add
add
add
add
add
add
or
or
sbb
call
sbb
call
sbb
call
sbb
call
pop
sbb
sbb
push
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
sub
fsubr
add
add
add
add
add
or
push
pop
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
sbb
pop
jmp
and
jmp
and
jmp
and
call
push
and
pop
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
xor
add
add
add
add
and
lahf
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
sbb
pop
jmp
and
jmp
and
call
pop
and
sub
das
jmp
and
call
push
and
pop
pop
and
and
and
and
and
and
and
and
and
and
and
cs
add
add
add
push
daa
daa
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
sbb
pop
jmp
and
call
push
and
sub
sub
inc
inc
inc
inc
inc
(bad)
cmp
cmp
and
daa
call
push
and
pop
pop
and
and
and
and
and
and
and
sub
inc
add
add
add
sub
sub
sbb
sbb
sbb
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
sbb
sbb
sbb
sbb
pop
pop
sbb
sbb
pop
call
pop
and
and
and
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
cmp
aas
jmp
es
push
push
and
push
push
and
pop
pop
and
sub
sub
inc
add
add
es
in
pop
sbb
sbb
sbb
and
and
call
sbb
call
pop
sbb
pop
pop
sbb
pop
pop
sbb
sbb
pop
call
pop
and
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
ds
jmp
sub
pop
pop
and
sub
sub
add
add
add
add
add
es
call
sub
xor
ss
ss
xor
xor
call
sbb
pop
pop
sbb
sbb
and
xor
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
aas
aas
inc
push
xor
fisttp
or
adc
add
pop
add
add
add
add
add
add
sub
sub
xor
xor
ss
xor
cmp
xor
cmp
xor
ss
xor
aaa
jmp
xor
jmp
push
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
rcr
sbb
or
add
add
add
adc
aaa
cmp
xor
aaa
push
xor
push
cmp
xor
cmp
xor
cmp
ss
xor
das
jmp
adc
sub
jmp
addr16
sub
inc
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
push
add
add
add
add
adc
pop
ss
xor
xor
cmp
xor
cmp
xor
cmp
xor
cmp
aaa
aaa
cmp
sub
outs
adc
ss
(bad)
cmp
adc
cmp
adc
xor
push
sbb
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
push
inc
daa
add
add
add
add
xor
ss
ss
xor
xor
push
cmp
xor
cmp
xor
aaa
cmp
cs
sbb
mov
inc
adc
inc
popf
push
inc
push
dec
pop
dec
push
dec
push
inc
adc
jmp
pusha
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
imul
add
push
add
add
aas
aas
inc
mov
ss
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
ss
xor
pop
inc
adc
push
jne
inc
sbb
inc
popf
sbb
dec
lahf
sbb
inc
xchg
sbb
cmp
daa
dec
push
call
push
adc
adc
adc
mov
(bad)
cmp
bound
push
inc
xor
inc
inc
inc
inc
inc
call
push
call
add
add
add
add
dec
xor
pop
lods
inc
inc
dec
(bad)
xor
cmp
xor
cmp
xor
cmp
ss
xor
(bad)
test
dec
pop
dec
sbb
and
push
call
push
push
call
adc
call
adc
call
adc
call
adc
call
push
jmp
cmp
(bad)
cmp
rcr
push
mov
sbb
dec
lods
sbb
dec
movs
pop
dec
pop
call
sbb
jmp
es
inc
inc
inc
jmp
add
add
add
and
adc
push
pop
jmp
cmp
jmp
and
dec
sbb
push
mov
call
call
sbb
pop
fcomp
pop
retf
push
mov
sbb
dec
lods
sbb
push
mov
call
sbb
pusha
ficomp
pop
int3
sbb
inc
mov
call
daa
sbb
cmp
pop
retf
push
mov
sbb
sbb
adc
sbb
and
cmp
cmp
add
add
add
add
add
add
add
add
push
push
pop
sub
sub
call
sbb
pop
(bad)
sbb
pop
rcr
dec
pushf
sbb
sub
xchg
dec
sbb
push
mov
call
sbb
dec
cmps
sbb
inc
mov
jmp
pop
sbb
sbb
sbb
or
sbb
sbb
sbb
dec
mov
sbb
jmp
push
jmp
push
sbb
and
and
and
and
inc
inc
inc
fild
add
push
add
add
pop
pop
pop
add
add
add
dec
pop
and
daa
call
sub
jmp
push
call
sbb
inc
call
adc
dec
add
dec
push
sbb
clts
sbb
or
add
call
sbb
inc
xchg
sbb
pusha
fstp
jmp
sbb
jmp
jmp
and
jmp
and
jmp
and
dec
dec
push
cwde
add
add
add
add
add
add
add
add
cmp
cmp
and
and
push
es
(bad)
fistp
jmp
push
jmp
push
jmp
push
jmp
push
call
dec
sbb
inc
mov
inc
mov
dec
cdq
sbb
push
mov
jmp
push
jmp
pop
jmp
push
call
sbb
push
pop
sbb
popa
fstp
jmp
and
sub
jmp
and
jmp
and
jmp
and
jmp
dec
push
mov
add
add
add
add
dec
dec
push
lahf
and
and
and
and
push
pop
and
push
mov
push
call
push
push
outs
sbb
ds
call
sbb
call
push
call
push
call
push
call
dec
sbb
cmp
jmp
xor
sbb
or
sbb
sub
jmp
push
jmp
and
and
sbb
and
and
and
and
and
and
xor
xor
mov
add
add
add
add
dec
dec
push
mov
xor
jmp
and
(bad)
cmp
jmp
and
push
mov
sbb
or
sbb
push
add
call
push
sbb
adc
adc
sbb
adc
sbb
or
add
call
nop
and
sbb
inc
xchg
sbb
pusha
fcomp
jmp
push
call
sbb
push
pop
and
and
and
cs
dec
dec
dec
lods
add
add
add
add
add
add
add
add
add
or
cmp
and
dec
sahf
cmp
ss
fstp
jmp
push
call
sbb
jmp
pop
sbb
daa
inc
sbb
and
sbb
and
sbb
and
dec
sbb
xor
xchg
sbb
push
mov
push
jmp
jmp
push
jmp
push
pop
sbb
sub
sub
leave
add
add
add
add
add
add
add
add
out
out
add
add
add
add
add
add
popa
ficomp
jmp
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
call
inc
inc
in
cmp
pop
add
add
add
add
(bad)
(bad)
inc
xchg
loopne
and
sub
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
js
push
mov
add
add
add
add
add
add
(bad)
inc
xchg
jecxz
xor
fisubr
in
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
mov
pop
add
add
(bad)
(bad)
dec
add
add
fiadd
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmp
nop
fisub
add
add
(bad)
(bad)
call
nop
jecxz
inc
sbb
mov
(bad)
jmp
popa
xlat
pop
jmp
and
imul
icebp
jnp
inc
retf
mov
pop
ins
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
jae
cmp
ins
fidiv
arpl
xchg
imul
stos
imul
lahf
ins
fidiv
jne
(bad)
xor
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
aas
(bad)
jmp
ud0
rol
inc
add
cld
add
psubb
add
clc
add
psubb
add
clc
add
psubb
add
clc
add
add
add
add
add
add
add
add
add
pop
add
pop
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
ud0
add
inc
add
jmp
add
(bad)
clc
ud0
(bad)
aas
push
mov
add
add
add
add
add
add
add
and
add
add
push
and
add
add
add
add
add
adc
jp
add
aaa
add
add
add
add
add
add
push
push
push
push
sbb
sbb
and
daa
call
push
and
adc
adc
add
add
add
add
add
add
or
or
sbb
call
sbb
call
push
and
and
and
in
push
push
pop
mov
or
add
add
add
add
add
add
or
sbb
cli
sbb
sbb
call
pop
call
sbb
and
and
and
and
and
enter
jg
add
cmp
add
adc
add
add
add
add
add
xor
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
loopne
adc
call
add
add
add
add
add
adc
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
push
push
pop
mov
or
bound
add
add
add
add
add
add
add
adc
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
and
and
sbb
sbb
jle
add
cmp
add
adc
add
add
add
and
pop
or
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
and
and
fist
adc
add
add
sbb
add
add
add
add
add
add
or
or
sbb
sbb
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
icebp
push
push
pop
mov
or
pop
add
add
add
add
add
add
movups
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
es
add
add
adc
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
jmp
daa
repz
(bad)
movaps
add
add
adc
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
and
and
and
sub
sub
and
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
and
daa
clc
(bad)
(bad)
rdmsr
add
add
adc
pop
rcr
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sub
cs
cs
sub
jmp
daa
call
push
and
sbb
pop
call
and
sbb
sbb
and
sbb
sbb
and
and
daa
dec
push
push
cmp
add
add
add
push
adc
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
and
cs
sub
sub
xor
cs
sub
jmp
push
and
sbb
and
sbb
and
sbb
sbb
and
sbb
and
and
dec
add
add
add
adc
adc
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
and
and
jmp
sub
xor
sub
sub
xor
cs
sub
das
jmp
es
and
and
sbb
and
sbb
and
sbb
sbb
dec
or
add
add
sbb
push
sbb
sbb
sbb
call
sbb
and
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
push
and
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
cs
sub
sub
jmp
and
sbb
and
sbb
and
and
and
or
or
add
add
add
sbb
sbb
sbb
sbb
sbb
jmp
sub
jmp
daa
sub
and
daa
call
push
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
and
and
and
and
or
or
push
add
add
push
push
sbb
sbb
push
jmp
sub
jmp
daa
sub
daa
daa
sub
sub
sub
daa
daa
sub
and
daa
call
push
and
sbb
sbb
call
sbb
jmp
daa
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
in
sbb
sbb
add
add
pop
pop
pop
dec
sbb
pop
stc
es
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
sub
and
sbb
sbb
and
and
sub
xor
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
cs
sub
sub
hlt
sbb
sbb
add
add
or
or
and
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
jmp
sub
jmp
push
push
jmp
inc
sbb
sub
jmp
das
jmp
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
and
add
add
or
pop
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
sub
and
sub
jmp
imul
push
ins
push
jmp
popa
adc
sub
xor
jmp
xor
sub
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
push
adc
add
add
adc
adc
and
clc
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
es
and
jmp
inc
push
push
jno
push
jnp
(bad)
cmp
(bad)
cmp
adc
cmp
adc
cmp
adc
xor
jmp
and
sub
xor
sub
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
xor
jmp
sub
or
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
jmp
daa
sub
cs
sbb
cmp
adc
aas
lea
inc
xchg
adc
inc
push
inc
inc
adc
inc
adc
aas
(bad)
adc
cmp
adc
cmp
push
pop
sbb
cs
sub
das
jmp
xor
sub
sub
xor
sub
sub
xor
sub
sub
das
push
ss
adc
adc
add
add
add
pop
pop
sbb
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
jmp
das
daa
push
xchg
adc
inc
pushf
adc
inc
push
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
push
inc
jmp
adc
adc
adc
sub
adc
cmp
push
push
and
sub
sub
sub
xor
sub
sub
jmp
sub
xor
sub
xor
jmp
add
add
push
and
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
es
and
cmp
adc
(bad)
cmp
cmp
inc
pop
dec
dec
sbb
push
mov
call
sbb
push
mov
dec
sbb
dec
movs
sbb
inc
mov
jmp
pop
push
call
and
or
adc
or
adc
xor
movs
adc
(bad)
cmp
addr16
cs
and
sub
jmp
xor
cs
sub
sub
(bad)
cmp
cmp
adc
adc
add
add
adc
adc
aas
inc
nop
sub
cs
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
sub
xor
inc
cdq
adc
inc
pop
call
push
adc
or
adc
adc
push
jmp
aaa
pop
jmp
pop
jmp
cmp
push
call
add
dec
add
jmp
dec
pop
inc
sbb
push
mov
dec
sbb
dec
test
dec
pop
dec
adc
(bad)
test
push
push
push
jmp
sub
push
xor
jno
add
add
and
retf
sub
sub
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
sub
cmp
dec
push
dec
sbb
dec
mov
call
sbb
cmp
sub
call
sbb
call
push
push
dec
or
dec
pop
push
dec
or
call
adc
call
and
sbb
cmp
dec
sbb
pop
(bad)
sbb
pop
retf
sbb
push
rcr
push
mov
sbb
push
mov
dec
sbb
dec
lods
sbb
dec
scas
pop
inc
adc
adc
sbb
sub
sub
push
and
and
sub
cs
sub
sub
daa
daa
sub
sub
sub
and
es
sbb
push
mov
call
sbb
push
mov
sbb
push
ret
pop
rcr
pop
iret
sbb
push
les
call
sbb
dec
lods
sbb
dec
mov
sbb
dec
cmps
sbb
push
mov
call
sbb
pop
into
sbb
pop
aam
call
sbb
pop
int
dec
sbb
daa
inc
sbb
sbb
sbb
dec
movs
sbb
pop
(bad)
sbb
push
mov
sbb
push
mov
sbb
push
das
pop
call
adc
call
pop
and
adc
add
add
sub
sub
sub
cs
sbb
xor
call
call
sbb
pop
les
pop
enter
leave
sbb
push
mov
call
sbb
pop
xlat
sbb
pusha
ficomp
pusha
ficomp
pusha
ficomp
pusha
fistp
pusha
fistp
pusha
ficomp
pop
fcomp
pop
int
call
sbb
inc
xchg
jmp
inc
sbb
adc
pop
dec
add
inc
call
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
retf
cs
sbb
call
and
and
daa
cld
adc
add
add
es
mov
adc
jmp
ds
call
sbb
pop
retf
pop
int
jmp
sbb
call
adc
call
xor
push
pop
sbb
cmp
sbb
inc
lea
inc
sbb
inc
xchg
sbb
inc
mov
(bad)
cmp
sbb
xor
jmp
cmp
call
sbb
dec
pop
sbb
or
sbb
push
push
sbb
sbb
mov
call
sbb
call
call
call
sbb
push
pop
push
call
adc
call
sbb
es
pop
pop
pop
add
add
add
or
and
and
sbb
push
call
sbb
pop
rcr
call
sbb
push
sbb
or
add
dec
push
sbb
adc
sbb
adc
sbb
clts
sbb
or
add
dec
push
sbb
push
sbb
jmp
inc
sbb
inc
mov
call
jmp
sbb
jmp
sbb
call
sbb
jmp
sbb
call
adc
call
sbb
and
and
and
or
push
push
pop
call
and
sub
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
dec
(bad)
cmp
sub
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
jmp
xor
jmp
dec
sbb
aaa
push
inc
sbb
push
rcr
gs
jmp
push
jmp
push
dec
sbb
jmp
push
jmp
push
jmp
push
jmp
push
push
pop
pop
call
adc
call
sbb
and
pop
pop
and
push
push
and
or
or
and
neg
and
sbb
and
and
pop
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
jmp
push
jmp
push
jmp
push
call
call
sbb
call
push
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
dec
jmp
sbb
adc
sbb
push
add
inc
sbb
jmp
push
jmp
push
jmp
inc
pop
call
push
and
sbb
sbb
and
sbb
and
and
and
push
add
add
push
test
sbb
sbb
call
mov
push
jmp
push
jmp
push
call
sbb
inc
call
sbb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
call
push
call
sbb
push
sbb
and
sbb
adc
sbb
adc
sbb
adc
sbb
inc
xchg
sbb
fs
jmp
push
call
push
jmp
sub
call
and
sbb
sbb
and
sbb
sub
fnstenv
ss
push
push
pop
xor
sbb
push
call
sbb
call
and
sbb
and
inc
mov
jmp
push
jmp
push
jmp
jmp
push
sbb
or
sbb
adc
sbb
push
pop
sbb
push
sub
jmp
sbb
sub
jmp
push
sbb
sub
dec
sbb
and
sbb
sbb
push
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
and
sbb
inc
xchg
sbb
popa
fistp
jmp
push
jmp
dec
call
push
and
sbb
sbb
call
and
and
es
sub
jbe
inc
inc
or
sbb
sbb
xor
xor
mov
and
repz
sbb
jmp
push
jmp
(bad)
cmp
clts
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
call
and
jmp
sbb
inc
xchg
sbb
pop
aam
jmp
push
jmp
push
jmp
push
jmp
push
gs
call
adc
call
and
and
daa
cmc
xor
xor
sbb
add
add
cmp
xor
xor
fwait
push
mov
sbb
jmp
push
dec
sbb
jmp
sbb
and
sbb
sbb
sbb
push
pop
sbb
pop
sbb
call
pop
sbb
sbb
cmp
jmp
je
dec
sbb
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
call
sbb
daa
cmps
xor
xor
add
add
(bad)
add
add
add
sub
fstp
jmp
push
jmp
push
jmp
jmp
push
jmp
jmp
push
call
call
sbb
call
sbb
call
sbb
jmp
push
jmp
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
sbb
cmp
pop
call
sbb
mov
and
repnz
add
add
dec
add
aaa
mov
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
sbb
pop
mov
ds
(bad)
(bad)
inc
sbb
daa
in
xlat
sbb
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
frstor
hlt
jne
dec
xor
(bad)
(bad)
inc
xlat
and
jmp
xlat
sbb
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
(bad)
fsub
mul
daa
dec
(bad)
(bad)
inc
imul
xor
fcomp
sbb
pusha
xlat
sbb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
imul
xor
add
add
(bad)
dec
add
add
(bad)
(bad)
inc
sbb
push
imul
pop
call
sbb
pop
xlat
sbb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
jmp
push
jmp
sub
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
push
fsub
stc
pop
xlat
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
sbb
jmp
ret
imul
push
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
cs
fldenv
scas
pop
(bad)
push
ficomp
adc
pop
aad
stc
pop
aad
repnz
aad
fisub
es
fldcw
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
std
add
add
add
call
jl
mov
in
sldt
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
inc
add
jmp
aas
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
add
(bad)
cld
add
pop
inc
add
lock
add
add
jmp
add
add
add
inc
add
add
add
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
pop
add
inc
add
add
add
inc
add
add
add
cld
add
add
pop
add
clc
add
add
pop
add
loopne
add
add
add
rol
add
sldt
add
add
pop
add
add
add
aas
add
loopne
add
add
add
clc
add
add
aas
add
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
add
add
pop
add
inc
add
add
add
lock
add
add
push
add
pop
inc
add
clc
add
ud0
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
add
(bad)
inc
add
inc
add
(bad)
clc
ud0
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
fadd
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xlat
pop
pop
and
sbb
sbb
scas
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
push
pop
jle
pop
sbb
sbb
sbb
call
push
and
pop
pop
and
sbb
adc
les
or
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sbb
sbb
call
and
sbb
sbb
and
pop
pop
and
pop
pop
and
sbb
sbb
or
or
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
btr
sbb
call
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
sbb
push
jmp
add
inc
add
add
add
add
add
add
add
add
adc
adc
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
pop
pop
and
sbb
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
pop
and
pop
pop
and
sbb
sbb
or
add
arpl
add
cmp
add
and
add
adc
add
add
add
add
add
adc
pop
pop
pop
xchg
pop
pop
sbb
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
push
and
pop
pop
and
sbb
pop
out
adc
adc
add
add
add
sub
add
push
add
add
add
add
add
add
or
or
sbb
sbb
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
push
push
and
push
push
sbb
or
or
add
add
add
add
add
or
add
add
add
or
add
and
(bad)
movups
sbb
push
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
sbb
sbb
push
push
bt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
pop
pop
and
sbb
and
adc
adc
pop
pop
pop
js
add
inc
add
add
add
add
add
add
add
add
push
push
pop
xchg
push
push
sbb
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
pop
and
push
push
and
push
push
sbb
or
or
add
pop
add
add
add
add
or
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
mov
add
add
add
add
add
add
movups
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
push
and
adc
add
push
add
add
adc
adc
sbb
push
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
push
and
daa
daa
sub
and
and
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
sbb
sbb
add
add
add
add
pop
pop
sbb
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
and
daa
daa
sub
das
das
xor
cs
sub
sub
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
add
add
add
add
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
and
jmp
cs
sub
sub
xor
cs
sub
jmp
daa
call
sbb
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
add
add
add
add
pop
pop
sbb
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
call
pop
and
sub
xor
sub
sub
xor
sub
sub
xor
cs
sub
das
jmp
es
pop
pop
and
sbb
pop
call
and
sbb
sbb
and
sbb
sbb
and
push
push
and
sbb
sbb
push
add
add
pop
pop
sbb
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
daa
sub
pop
pop
and
sbb
pop
call
and
sbb
sbb
and
sbb
push
and
sbb
push
xlat
add
add
add
add
add
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
and
and
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
es
pop
pop
and
sbb
pop
call
and
sbb
sbb
and
sbb
sbb
push
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jmp
daa
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
jmp
and
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
cs
sub
sub
jmp
and
call
and
sbb
and
push
push
and
sbb
sbb
sbb
add
add
add
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
jmp
sub
jmp
sub
jmp
sub
jmp
daa
call
push
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
cs
sub
sub
and
and
call
pop
jmp
add
add
add
add
add
add
add
add
call
sbb
call
es
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
sub
sub
sub
and
pop
and
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
call
and
daa
daa
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
cs
sub
sub
sti
adc
adc
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
sbb
sbb
pop
pop
and
daa
daa
sub
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
sub
es
and
and
sbb
push
call
sbb
call
sbb
jmp
and
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
cs
sub
and
pop
mov
pop
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
sub
daa
daa
sub
and
and
call
sub
jmp
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
cs
daa
daa
sub
sbb
sbb
or
or
add
or
add
add
add
or
add
and
and
sti
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
jmp
sub
jmp
push
or
es
adc
jmp
sub
jmp
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
cs
das
das
xor
es
add
add
add
add
add
add
add
sub
adc
cmps
es
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
daa
xor
jmp
pop
ud0
push
jmp
imul
jmp
dec
sbb
sub
daa
jmp
sub
jmp
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
xor
adc
add
add
add
or
add
xor
daa
sub
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
sub
sub
jmp
imul
xor
push
jae
push
js
push
jns
push
jnp
push
jge
push
ud0
bound
jmp
xor
jmp
xor
sub
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
das
das
xor
sub
sub
add
add
add
add
add
add
sbb
sbb
sub
sub
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
jmp
sub
jmp
push
sbb
xor
jl
(bad)
cmp
(bad)
cmp
(bad)
cmp
mov
(bad)
cmp
xchg
(bad)
cmp
adc
cmp
adc
cmp
push
pop
sbb
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
adc
adc
add
push
add
add
push
push
push
push
sbb
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
sub
and
(bad)
cmp
(bad)
mov
inc
mov
inc
xchg
adc
inc
adc
inc
push
inc
adc
inc
adc
(bad)
aas
lea
lea
(bad)
cmp
adc
xor
sbb
jmp
sub
jmp
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
xor
es
add
add
add
add
add
add
or
or
and
icebp
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
es
and
jmp
and
cmp
(bad)
mov
inc
adc
inc
xchg
adc
inc
push
inc
push
inc
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
inc
push
inc
push
inc
push
inc
adc
(bad)
cmp
adc
sub
push
jno
push
dec
and
sub
sub
sub
xor
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
xor
cld
push
push
(bad)
add
add
add
or
and
cld
sub
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
jmp
and
push
pop
sbb
inc
dec
push
dec
push
dec
pop
dec
pop
dec
pop
dec
pop
dec
dec
dec
dec
dec
dec
sbb
dec
scas
sbb
dec
mov
dec
inc
push
jmp
push
adc
dec
add
dec
push
adc
mov
inc
cwde
adc
cmp
adc
xor
inc
and
jmp
xor
sub
sub
xor
sub
sub
xor
sub
das
xor
and
es
add
add
adc
adc
jmp
sub
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
jmp
sub
sbb
inc
pushf
adc
inc
mov
push
jmp
push
adc
(bad)
aas
mov
dec
sbb
dec
lods
sbb
push
mov
call
sbb
push
mov
call
sbb
push
mov
dec
sbb
dec
movs
sbb
inc
mov
push
pop
jmp
cmp
call
adc
dec
add
adc
sub
dec
pop
inc
push
inc
adc
inc
adc
cmp
push
push
push
jmp
cmp
jmp
sub
jmp
xor
cs
sub
sub
xor
das
das
xor
or
or
add
add
(bad)
movups
es
sub
sub
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
es
and
cmp
sbb
dec
movs
adc
dec
sbb
pop
ss
dec
adc
call
sub
jmp
ss
jmp
pop
jmp
inc
pop
jmp
cmp
call
push
push
call
unpckhps
push
pop
adc
dec
adc
inc
sbb
push
mov
dec
sbb
dec
stos
sbb
dec
test
dec
pop
dec
pop
inc
push
inc
adc
inc
xchg
adc
cmp
sbb
das
dec
and
sub
sub
das
cs
das
das
xor
xor
xor
and
and
add
add
sbb
sbb
sub
sub
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
and
sub
xor
inc
sahf
push
dec
pop
dec
dec
sbb
push
mov
(bad)
cmp
call
and
call
adc
dec
or
dec
add
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
or
call
adc
pop
push
fs
dec
sahf
sbb
push
rcr
push
rcr
push
mov
sbb
push
mov
sbb
dec
mov
dec
sbb
dec
stos
sbb
dec
cmps
sbb
dec
movs
pop
dec
push
(bad)
aas
mov
call
push
adc
sbb
sbb
and
daa
jmp
sub
jmp
or
and
or
or
mov
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
es
daa
sub
(bad)
cmp
dec
dec
sbb
dec
mov
call
sbb
push
mov
call
sbb
push
ret
sbb
push
mov
sbb
inc
mov
(bad)
cmp
push
pop
sbb
sub
jmp
inc
pop
jmp
inc
pop
jmp
dec
pop
jmp
ins
sbb
inc
mov
dec
sbb
push
ret
pop
retf
sbb
pop
(bad)
sbb
push
ret
pop
leave
sbb
push
ret
sbb
inc
mov
inc
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
dec
scas
sbb
dec
lods
sbb
sbb
adc
push
or
pop
pop
sbb
sbb
add
add
add
add
pop
pop
sbb
sub
sub
sub
daa
daa
sub
daa
daa
sub
sub
sub
and
sub
cmp
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
ret
sbb
pop
(bad)
sbb
pop
enter
retf
sbb
pop
into
sbb
pop
rcr
pop
rcr
pop
iret
sbb
pop
int3
sbb
pop
retf
pop
retf
sbb
pop
int
call
call
call
call
sbb
pop
enter
retf
sbb
pop
rcr
pop
leave
sbb
inc
xchg
sbb
and
sbb
adc
pop
dec
push
pop
(bad)
sbb
call
sbb
push
rcr
push
mov
sbb
push
mov
sbb
sub
adc
call
push
and
push
push
and
sbb
sbb
add
add
or
or
and
and
sub
jmp
push
and
push
sbb
dec
pop
call
call
call
sbb
push
ret
pop
lds
pop
(bad)
sbb
pop
into
sbb
pop
retf
pop
retf
pop
aad
call
sbb
pop
rcr
pop
into
sbb
pop
int
call
sbb
pop
int3
sbb
pop
int
call
sbb
pop
into
sbb
pop
rcr
pop
aam
call
sbb
pop
into
sbb
push
mov
(bad)
cmp
cmp
call
push
pop
call
or
call
adc
dec
pop
push
jo
call
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
lds
pop
int
(bad)
cmp
call
adc
call
sbb
and
adc
push
cdq
add
add
add
add
adc
adc
and
and
adc
push
call
and
call
sbb
push
ret
sbb
pop
les
call
sbb
pop
retf
pop
int3
sbb
dec
sbb
and
sbb
xor
inc
lea
dec
sbb
push
mov
sbb
pop
retf
pop
retf
sbb
call
sbb
push
mov
sbb
inc
mov
push
sbb
and
sbb
push
sbb
call
or
call
or
sbb
adc
sbb
adc
sbb
xor
call
sbb
pop
iret
sbb
call
sbb
call
sbb
call
sbb
call
adc
call
sbb
and
pop
pop
and
push
push
(bad)
add
add
add
add
dec
dec
push
add
add
add
or
inc
push
push
and
sbb
and
and
sbb
pop
int3
sbb
pop
int3
sbb
call
sbb
jmp
sbb
dec
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
sbb
sbb
sbb
sbb
push
cs
pop
xor
call
sub
sbb
pop
sbb
call
adc
call
or
call
or
call
or
sbb
adc
sbb
invd
sbb
adc
sbb
sub
sbb
dec
stos
sbb
popa
fistp
call
sbb
call
sbb
call
sbb
jmp
sbb
call
adc
call
sbb
and
sbb
pop
and
or
or
add
add
add
add
pop
pop
pop
add
add
add
add
or
sbb
mov
sbb
and
and
and
pop
lds
call
sbb
call
sbb
jmp
sbb
call
or
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
sbb
sbb
xor
dec
sbb
(bad)
fstp
call
sbb
jmp
sbb
call
sbb
call
sbb
jmp
sbb
call
adc
call
sbb
and
sbb
push
and
sbb
push
int3
add
add
add
add
outs
outs
jb
or
or
pop
and
sbb
sbb
jmp
sub
call
sbb
jmp
push
call
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
jmp
sbb
pop
das
sbb
sbb
sbb
adc
sbb
adc
call
or
call
or
sbb
adc
sbb
sbb
sbb
sub
cmp
dec
call
jmp
jmp
push
jmp
push
jmp
push
jmp
call
push
call
sbb
jmp
push
call
push
jmp
push
jmp
push
jmp
inc
pop
call
adc
call
sbb
and
sbb
sbb
and
adc
add
pop
add
add
add
add
add
add
sbb
sbb
push
push
and
sbb
sbb
call
and
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
call
push
call
sbb
dec
sbb
dec
cwde
sbb
dec
fwait
sbb
dec
movs
sbb
call
push
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
inc
jmp
xor
call
or
jmp
aas
sbb
pop
int3
push
jmp
push
jmp
push
jmp
push
jmp
(bad)
cmp
pop
call
adc
call
sbb
and
sbb
sbb
and
pop
pop
and
(bad)
movups
add
add
or
call
sbb
and
sbb
and
dec
mov
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
call
sbb
call
das
sbb
adc
sbb
adc
sbb
adc
add
dec
sbb
fs
jmp
push
jmp
push
jmp
push
push
push
and
sbb
call
sbb
and
sbb
sbb
and
push
push
and
and
and
sub
add
add
add
adc
sbb
aam
push
and
sbb
sbb
and
sbb
and
aas
jl
jmp
jmp
push
jmp
push
jmp
push
jmp
push
call
jmp
push
sbb
xor
inc
call
sbb
jmp
push
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
push
call
push
call
sbb
push
cmp
call
or
call
nop
adc
adc
call
or
call
sbb
call
sbb
jmp
push
jmp
push
call
push
jmp
sbb
call
sbb
and
sbb
sbb
and
sbb
adc
pop
add
add
add
add
adc
jae
and
call
sbb
and
sbb
and
(bad)
fstp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
sbb
push
add
call
or
call
or
call
daa
sbb
and
sbb
sub
push
pop
sbb
xor
sbb
xor
push
sbb
das
pop
sbb
sub
jmp
cmp
call
es
adc
or
call
or
call
push
sbb
adc
sbb
adc
adc
call
or
call
nop
sub
call
sbb
jmp
push
jmp
push
jmp
push
call
pop
call
and
sbb
sbb
and
sbb
pop
and
push
push
and
adc
adc
add
add
push
push
cmovnp
pop
sbb
pop
and
pop
pop
and
push
push
and
sbb
and
call
push
jmp
push
jmp
push
jmp
push
call
push
call
cs
adc
sbb
adc
adc
sbb
adc
sbb
adc
sbb
adc
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
push
sbb
adc
sbb
adc
sbb
adc
adc
call
adc
call
or
call
or
call
sbb
sbb
dec
cmps
sbb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
(bad)
cmp
adc
call
sbb
and
pop
pop
and
push
push
pop
add
add
add
add
add
or
sub
adc
arpl
pop
sbb
sbb
inc
and
fs
jmp
push
jmp
push
jmp
push
dec
sbb
call
sbb
adc
sbb
adc
sbb
adc
call
nop
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
call
or
call
or
call
adc
call
sbb
sub
sbb
inc
mov
pop
ret
fs
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
jmp
xor
call
sbb
call
push
and
pop
pop
and
pop
pop
sbb
add
add
or
or
sbb
adc
iret
push
cmc
(bad)
ficomp
jmp
push
jmp
push
jmp
push
call
push
call
sbb
push
arpl
jmp
inc
sbb
and
sbb
sbb
sbb
sbb
sbb
pop
sbb
call
sbb
call
sbb
call
sbb
call
pop
sbb
sbb
xor
sbb
xor
sbb
inc
xchg
dec
lods
sbb
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
inc
pop
call
adc
jmp
and
sbb
sbb
xlat
xlat
fadd
dec
fwait
sbb
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
push
call
push
call
push
call
push
call
sbb
call
sbb
call
push
call
jmp
push
jmp
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
pop
jmp
cmp
call
adc
or
add
jmp
add
inc
call
popa
fstp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
(bad)
cmp
push
adc
add
add
cli
cli
add
add
add
and
xlat
pop
cld
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
call
sbb
push
or
or
add
add
(bad)
inc
popa
(bad)
and
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
cmp
add
add
(bad)
inc
add
add
xchg
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
jmp
(bad)
(bad)
inc
fsub
jg
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
popa
xlat
pop
xor
add
add
(bad)
dec
(bad)
fsub
pop
popa
xlat
pop
in
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
arpl
and
popa
xlat
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
in
arpl
and
fsub
add
add
add
(bad)
dec
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pusha
xlat
push
dec
popa
xlat
pop
mov
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
jmp
fsub
(bad)
pusha
xlat
sbb
add
(bad)
call
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
adc
pop
(bad)
push
lea
rcr
sbb
pop
xlat
sbb
pop
xlat
sbb
jmp
sbb
jmp
push
call
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
pop
mov
(bad)
adc
sbb
add
add
(bad)
call
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jl
inc
add
xor
fldenv
jno
(bad)
push
mov
push
cwde
pop
aad
xchg
pop
(bad)
pop
and
popa
imul
cmp
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
cld
add
jg
(bad)
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
add
add
add
(bad)
clc
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
cld
add
add
add
pop
clc
add
add
add
pop
lock
add
add
aas
loopne
add
add
add
add
add
add
jg
add
add
add
jg
add
add
add
(bad)
clc
add
add
add
(bad)
inc
add
add
add
add
add
add
aas
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
cld
add
pop
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
add
sub
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
and
ss
in
xor
add
jae
add
add
add
add
aas
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
es
sbb
push
jmp
push
ss
imul
sub
mov
add
ja
add
imul
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sahf
and
and
sbb
sbb
sbb
sbb
call
pop
and
das
das
xor
xor
xor
jle
add
jo
add
pusha
add
add
add
cmp
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
es
leave
sbb
pop
call
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sub
(bad)
cmp
cmp
pop
pop
pop
movs
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sub
jmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sbb
and
and
and
xor
xor
cs
mov
add
add
ins
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jb
daa
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
sub
cmp
cmp
(bad)
(bad)
jl
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
push
push
push
xchg
and
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
daa
push
and
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
pop
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
jmp
das
xor
xor
xor
add
add
add
ins
add
add
add
add
cmp
add
sub
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
or
add
sbb
add
xor
add
dec
add
add
and
fstp
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sub
(bad)
cmp
cmp
pop
pop
pop
xchg
add
add
add
bound
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
jno
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
clc
sub
sub
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
xchg
and
std
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
sub
sub
rol
add
jns
add
ins
add
add
add
add
cmp
add
sub
add
sbb
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
xor
xchg
add
add
add
bound
add
push
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
sbb
fstp
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
das
das
xor
sub
sub
add
add
add
push
add
add
add
das
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
sbb
add
xor
add
add
sbb
repz
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
sub
sub
xor
xor
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
sbb
cli
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sub
push
aaa
cmp
adc
adc
add
add
add
dec
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
daa
push
xor
scas
add
add
add
add
add
add
add
xor
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cs
xor
xor
jns
add
imul
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
outs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
sub
xor
xor
cwde
add
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
das
das
xor
das
das
xor
add
add
add
add
add
add
add
xor
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
push
pop
lods
sbb
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
push
and
sub
sub
xor
xor
pop
pop
pop
jp
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
pand
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
repz
sbb
add
add
add
pop
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
outs
adc
adc
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
sub
sub
sub
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
daa
jmp
cs
fmul
or
xor
add
sldt
add
add
add
add
add
add
add
add
sub
add
inc
add
add
push
pop
mov
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
push
and
sub
add
adc
add
add
add
add
add
or
add
pop
add
add
add
add
add
data16
or
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
pop
and
xor
xor
add
adc
add
add
add
add
add
add
add
dec
add
add
adc
repz
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
push
and
xor
add
adc
add
add
add
or
add
push
add
add
add
jle
adc
std
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
pop
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
cmp
cmp
add
add
add
add
add
add
add
es
pop
pop
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
call
sbb
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cmp
cmp
add
add
add
add
add
add
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
sub
sub
sub
call
sbb
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
cmp
pushf
add
add
add
add
add
add
add
add
add
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
jmp
daa
sub
sub
sub
das
jmp
sub
call
push
and
sbb
push
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
cmp
add
add
add
add
add
push
push
push
push
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
pop
jmp
and
jmp
das
jmp
sub
xor
sub
sub
jmp
sub
jmp
es
pop
pop
and
sbb
push
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cmp
cmp
add
add
add
add
add
push
pop
pop
or
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
sub
das
jmp
sub
xor
sub
sub
xor
sub
sub
jmp
daa
sub
and
and
sbb
pop
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
aaa
cmp
add
add
add
add
add
add
add
invd
or
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
sub
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
das
jmp
sub
jmp
and
sbb
pop
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
aaa
int3
add
add
add
add
add
add
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
jmp
es
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
das
jmp
sub
jmp
and
call
sbb
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
aaa
aam
add
adc
add
add
add
add
or
or
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
pop
jmp
and
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
and
call
sbb
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
xor
xor
push
add
add
add
add
add
add
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
push
push
and
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
call
push
and
sbb
push
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
xor
in
add
push
add
add
add
add
add
add
or
or
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
sub
sub
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
jmp
es
pop
pop
and
sbb
push
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
xor
add
add
add
add
add
add
add
add
push
push
jno
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
pop
jmp
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
jmp
and
sbb
pop
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cs
add
add
add
add
add
add
add
add
(bad)
movups
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
jmp
and
jmp
das
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
and
and
call
sbb
call
pop
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
add
pop
add
add
add
add
add
add
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
jmp
and
jmp
and
sbb
pop
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
push
and
sub
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
jmp
sub
and
call
sbb
call
pop
call
sbb
and
sbb
sbb
and
sbb
sub
pop
add
add
add
add
add
add
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
jmp
es
es
and
daa
jmp
and
sbb
pop
call
sbb
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
and
sbb
pop
jmp
daa
sub
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
call
sbb
call
pop
call
sbb
and
sbb
sbb
sub
add
add
add
or
add
add
add
add
add
add
add
adc
adc
cmps
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
and
and
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
and
and
sbb
pop
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
pop
jmp
and
jmp
das
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
jmp
sub
call
push
and
sbb
push
call
pop
call
sbb
and
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
and
and
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
and
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
jmp
and
jmp
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
xor
sub
jmp
es
pop
pop
and
sbb
pop
call
sbb
call
daa
sub
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
adc
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
and
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
es
and
and
call
sbb
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
and
sbb
sub
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
sub
jmp
and
sbb
pop
jmp
and
and
and
add
inc
add
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
es
and
call
push
and
sbb
sbb
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
pop
jmp
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
jmp
sub
jmp
and
and
and
sub
cs
sub
sub
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
call
sbb
sbb
sbb
sbb
push
jmp
and
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
and
daa
call
pop
and
sbb
push
call
sbb
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
sbb
jmp
and
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
jmp
sub
and
call
pop
and
sub
sub
cs
movs
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
pop
jmp
daa
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
es
and
daa
jmp
and
call
sbb
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
and
push
push
and
sub
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
das
jmp
sub
call
pop
and
daa
daa
sub
xor
xor
add
aaa
add
add
add
and
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sbb
sbb
push
push
and
and
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
and
and
sbb
pop
call
sbb
sbb
sbb
sbb
sbb
call
sub
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
das
jmp
sub
jmp
es
pop
pop
and
and
xor
iret
or
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
push
push
push
pop
pop
and
and
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
and
sbb
cmp
jmp
dec
adc
jmp
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
jmp
daa
sub
and
and
and
and
aad
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
and
and
and
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
push
jmp
dec
or
and
and
jmp
sub
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
das
jmp
daa
sub
and
and
sub
sub
pop
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
sub
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
push
or
and
push
or
and
push
or
sub
jmp
push
adc
and
sbb
sub
sub
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
xor
sub
call
push
cmps
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
sub
retf
sbb
and
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
es
adc
and
pop
or
jmp
pop
push
jmp
pusha
push
jmp
popa
push
jmp
pop
or
jmp
pop
or
jmp
dec
adc
and
pop
jmp
sub
jmp
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
inc
inc
clc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sub
jecxz
sbb
jmp
daa
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
and
sub
jmp
pop
or
jmp
ud0
push
ud0
imul
push
push
jmp
push
push
jmp
ud0
pusha
adc
daa
dec
pop
jmp
sub
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
pop
test
add
add
add
add
add
add
add
add
add
add
add
cmp
and
and
and
daa
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
jmp
popa
push
jmp
push
ud0
imul
xor
push
outs
adc
xor
push
jno
push
jb
push
adc
xor
adc
xor
adc
xor
adc
xor
push
outs
adc
xor
xor
jmp
ds
sub
sub
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
inc
dec
cmc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
daa
sub
push
push
and
and
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
jmp
ud0
imul
push
jno
push
adc
xor
adc
xor
adc
xor
jns
push
jns
push
jp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jp
push
jp
push
jb
push
jae
push
ins
adc
sub
sub
and
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
sub
imul
push
adc
ss
push
jnp
(bad)
cmp
(bad)
cmp
(bad)
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
(bad)
cmp
push
jp
push
adc
xor
jmp
inc
sbb
es
sub
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
inc
dec
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
es
test
and
std
and
and
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
pop
adc
xor
push
adc
ss
push
jl
(bad)
cmp
(bad)
cmp
adc
cmp
adc
cmp
mov
(bad)
mov
(bad)
cmp
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
cmp
mov
(bad)
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
push
jnp
push
js
push
outs
adc
sub
and
sbb
jmp
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
das
das
xor
push
push
push
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
das
das
xor
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
push
imul
xor
adc
aaa
jl
(bad)
cmp
(bad)
cmp
adc
cmp
adc
mov
aas
lea
aas
lea
inc
mov
inc
nop
adc
inc
xchg
adc
inc
adc
inc
adc
inc
adc
inc
adc
aas
lea
aas
mov
mov
mov
cmp
xchg
(bad)
cmp
adc
cmp
push
jl
push
jns
push
imul
jmp
das
and
sub
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
dec
dec
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
sbb
and
jmp
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
xor
adc
aaa
jl
(bad)
cmp
adc
cmp
adc
cmp
mov
aas
lea
inc
(bad)
adc
inc
xchg
adc
inc
adc
inc
adc
inc
adc
inc
inc
inc
push
inc
adc
inc
adc
inc
adc
inc
adc
(bad)
aas
mov
aas
lea
mov
cmp
mov
(bad)
cmp
adc
cmp
adc
cmp
xor
jmp
inc
sbb
sub
jmp
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
xor
xor
dec
add
add
add
add
add
add
add
or
add
adc
add
and
add
sub
sub
sbb
and
and
daa
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
sub
push
gs
aaa
jp
(bad)
cmp
adc
cmp
mov
aas
lea
inc
xchg
adc
inc
adc
inc
inc
inc
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
inc
inc
adc
inc
adc
inc
adc
inc
adc
lea
inc
xchg
adc
cmp
ja
(bad)
cmp
(bad)
cmp
sub
adc
jmp
xor
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
dec
dec
dec
jecxz
add
add
add
add
add
add
add
add
add
or
add
adc
or
or
daa
sub
sbb
and
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
sub
daa
aaa
and
xor
jg
(bad)
cmp
adc
cmp
lea
inc
nop
adc
inc
adc
inc
inc
inc
push
inc
push
inc
push
inc
push
inc
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
push
inc
adc
inc
adc
inc
adc
push
adc
sbb
adc
push
adc
call
jo
(bad)
cmp
adc
ss
jmp
xor
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
xor
push
push
cmp
add
add
add
add
add
add
add
or
add
adc
add
and
pop
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
(bad)
cmp
(bad)
cmp
adc
inc
(bad)
adc
inc
xchg
adc
inc
inc
inc
push
inc
push
inc
push
inc
push
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
push
dec
push
inc
push
dec
push
dec
push
(bad)
cmp
call
ss
push
or
dec
or
adc
pop
and
adc
inc
(bad)
adc
mov
cmp
adc
cmp
adc
sub
jmp
sub
xor
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
push
push
push
aad
add
add
add
add
add
add
add
add
add
add
sub
sub
and
and
and
and
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
xchg
(bad)
mov
inc
xchg
adc
inc
xchg
adc
inc
adc
inc
push
inc
push
dec
push
dec
push
dec
pop
dec
pop
dec
pop
dec
pop
dec
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
dec
test
sbb
dec
test
sbb
dec
mov
dec
(bad)
test
jmp
cmp
push
or
dec
adc
adc
adc
adc
adc
(bad)
movhlps
push
or
adc
aas
mov
inc
adc
inc
adc
cmp
xchg
(bad)
cmp
jmp
pop
adc
jmp
das
jmp
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
cmp
dec
dec
dec
and
add
add
add
add
add
or
push
push
and
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
push
imul
mov
inc
xchg
adc
inc
xchg
adc
inc
push
dec
push
inc
push
dec
push
dec
dec
dec
pop
dec
dec
dec
sbb
dec
stos
sbb
dec
lods
sbb
dec
lods
sbb
dec
lods
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
scas
sbb
dec
mov
call
sbb
push
mov
dec
sbb
inc
call
pop
xor
call
push
adc
or
adc
call
adc
call
adc
call
adc
call
adc
dec
add
call
lahf
push
inc
push
inc
inc
adc
inc
adc
inc
adc
mov
cmp
outs
adc
daa
inc
sbb
and
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
xor
push
push
push
ret
add
add
add
add
add
add
das
das
xor
and
and
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
cmp
(bad)
cmp
inc
(bad)
adc
inc
xchg
adc
inc
push
inc
push
dec
pop
jmp
popa
push
call
daa
adc
sbb
jmp
dec
adc
inc
pop
dec
sbb
dec
lods
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
dec
mov
dec
sbb
test
jmp
pop
push
call
xor
dec
or
push
or
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
adc
or
ss
inc
xchg
pop
dec
pop
dec
push
dec
push
inc
push
inc
push
inc
adc
inc
adc
inc
adc
(bad)
aas
mov
cmp
adc
cmp
sub
sub
jmp
cs
sub
sub
xor
sub
sub
xor
sub
sub
xor
sub
sub
cmp
pop
add
add
add
add
cmp
cmp
sti
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
(bad)
mov
inc
xchg
adc
inc
push
inc
pop
dec
pop
dec
pop
push
je
dec
adc
push
or
(bad)
adc
push
or
push
or
femms
adc
adc
adc
jmp
ds
jmp
push
push
push
arpl
push
je
(bad)
cmp
mov
inc
sbb
inc
xchg
sbb
inc
xchg
sbb
inc
xchg
sbb
inc
mov
(bad)
aas
xchg
(bad)
cmp
push
pop
push
jmp
sub
call
adc
dec
or
call
adc
call
adc
call
adc
dec
or
dec
pop
adc
(bad)
cmp
dec
sbb
dec
mov
dec
dec
sbb
dec
cmps
pop
dec
pop
dec
pop
dec
pop
dec
pop
inc
push
inc
push
inc
push
inc
inc
inc
adc
inc
adc
cmp
jmp
pop
push
jmp
ss
sub
cs
cs
sub
sub
xor
sub
sub
xor
sub
sub
push
mov
add
add
add
add
popa
add
sub
das
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
es
xor
inc
adc
inc
push
dec
push
dec
pop
dec
pop
dec
pop
dec
sbb
sub
dec
adc
adc
adc
call
adc
call
unpckhps
adc
push
dec
or
dec
or
dec
or
dec
or
call
or
push
call
movlhps
adc
push
call
movlhps
adc
push
dec
or
dec
or
dec
or
dec
or
dec
or
call
or
push
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
unpckhps
invd
adc
call
xor
(bad)
cmp
call
sbb
push
mov
sbb
dec
mov
dec
sbb
dec
scas
sbb
dec
lods
sbb
dec
lods
sbb
dec
stos
sbb
dec
test
dec
sbb
dec
movs
pop
dec
pop
dec
pop
inc
pop
inc
push
inc
push
inc
push
inc
inc
adc
inc
adc
call
and
jmp
sub
jmp
cs
sub
sub
xor
sub
sub
inc
sti
sub
sub
add
add
add
add
gs
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
ja
inc
inc
push
dec
pop
dec
pop
dec
pop
dec
pop
dec
dec
sbb
push
mov
(bad)
cmp
dec
push
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
dec
or
dec
or
call
sbb
jmp
dec
sbb
inc
(bad)
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
call
sbb
push
mov
dec
sbb
dec
mov
dec
sbb
dec
lods
sbb
dec
stos
sbb
dec
stos
sbb
dec
test
pop
dec
pop
dec
pop
dec
pop
inc
push
inc
push
inc
push
inc
push
inc
pop
jmp
inc
ud0
adc
adc
pop
and
sub
jmp
cs
cs
sub
sub
call
push
test
add
add
add
add
ds
push
dec
dec
dec
aad
sub
jmp
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sub
nop
adc
dec
pop
dec
pop
dec
pop
dec
dec
sbb
dec
scas
sbb
dec
scas
sbb
dec
mov
call
sbb
push
mov
push
arpl
call
and
dec
or
dec
or
call
or
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
or
dec
or
call
or
push
jmp
inc
sbb
cmp
sbb
dec
scas
sbb
push
lds
call
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
dec
sbb
dec
mov
dec
sbb
dec
lods
sbb
dec
stos
sbb
dec
test
pop
dec
pop
dec
pop
dec
push
dec
push
dec
pop
push
ja
dec
adc
call
adc
adc
adc
adc
adc
jmp
and
jmp
aas
inc
cli
push
push
push
push
add
add
add
add
add
add
push
push
push
data16
mul
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
xor
inc
pop
dec
pop
dec
pop
dec
sbb
dec
stos
sbb
dec
lods
sbb
dec
scas
sbb
dec
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
ret
sbb
push
mov
dec
sbb
aas
test
push
popa
sbb
and
call
push
push
call
adc
call
or
dec
or
dec
or
dec
or
dec
or
call
or
call
or
call
or
call
or
call
or
call
or
dec
or
dec
or
dec
or
dec
or
dec
or
call
adc
call
sbb
pop
push
ins
sbb
inc
xchg
sbb
push
mov
call
sbb
pop
leave
sbb
push
ret
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
ret
sbb
pop
(bad)
sbb
pop
(bad)
sbb
push
rcr
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
dec
sbb
dec
mov
dec
sbb
dec
lods
sbb
dec
lods
sbb
dec
stos
sbb
dec
test
dec
pop
dec
pop
dec
adc
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
rol
add
add
adc
add
push
add
add
add
add
dec
dec
dec
mov
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
popw
dec
push
dec
pop
dec
dec
dec
sbb
dec
mov
dec
sbb
push
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
ret
pop
(bad)
sbb
pop
retf
pop
int3
sbb
pop
ret
sbb
push
mov
dec
sbb
inc
(bad)
sbb
cmp
sbb
xor
pop
sbb
sub
jmp
inc
pop
jmp
cmp
pop
jmp
cmp
jmp
cmp
jmp
pop
jmp
inc
sbb
sub
sbb
xor
(bad)
cmp
inc
sbb
dec
lahf
sbb
push
mov
call
sbb
pop
int3
sbb
pop
retf
pop
lds
call
sbb
push
rcr
push
rcr
push
rcr
push
rcr
push
rcr
push
rcr
push
rcr
push
rcr
push
les
call
sbb
dec
lahf
sbb
xor
jb
dec
sbb
push
lds
call
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
call
sbb
dec
mov
dec
sbb
dec
lods
sbb
push
mov
call
push
call
adc
adc
adc
adc
adc
call
sbb
sub
es
add
add
add
add
add
add
add
add
push
push
push
cmp
inc
in
es
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
and
aas
xchg
dec
pop
dec
dec
sbb
dec
scas
sbb
dec
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
ret
push
ret
sbb
push
ret
sbb
pop
ret
sbb
pop
ret
sbb
pop
les
call
sbb
pop
enter
retf
pop
int3
sbb
pop
into
sbb
pop
iret
sbb
pop
into
sbb
pop
int
call
sbb
pop
leave
sbb
pop
leave
sbb
pop
leave
sbb
pop
leave
sbb
pop
retf
pop
int3
sbb
pop
int
call
call
sbb
pop
int
call
sbb
pop
enter
lds
call
sbb
pop
les
call
sbb
pop
les
call
sbb
pop
les
call
sbb
pop
les
call
sbb
pop
ret
sbb
pop
enter
iret
sbb
push
mov
jmp
pop
sbb
adc
pop
dec
push
pop
dec
push
pop
call
sbb
inc
sbb
pop
enter
rcr
push
rcr
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
sbb
push
mov
call
sbb
push
mov
call
sbb
push
cmp
call
adc
call
push
and
sbb
sbb
and
sub
add
and
add
push
add
add
add
add
add
add
add
add
popf
xor
ss
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
push
push
and
sub
dec
mov
dec
sbb
dec
scas
sbb
dec
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
rcr
push
rcr
push
ret
push
les
pop
lds
pop
lds
pop
lds
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
enter
into
sbb
pop
rcr
push
mov
push
sbb
pop
sbb
pop
call
adc
call
adc
call
adc
call
or
jmp
ss
pop
(bad)
sbb
push
les
call
sbb
push
ret
push
ret
push
ret
push
rcr
push
rcr
push
rcr
push
mov
sbb
push
mov
sbb
push
mov
sbb
cs
adc
sbb
push
and
sbb
sbb
and
sbb
sbb
and
aaa
aaa
cmp
add
add
add
add
add
add
add
add
add
add
add
add
push
push
pop
es
inc
dec
out
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
sbb
sbb
(bad)
cmp
call
sbb
dec
mov
call
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
rcr
push
ret
sbb
pop
les
pop
lds
pop
(bad)
sbb
pop
(bad)
sbb
pop
enter
enter
(bad)
sbb
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
sbb
pop
int
call
sbb
pop
retf
dec
sahf
sbb
xor
pop
sbb
dec
or
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
pop
pop
call
call
sbb
pop
(bad)
sbb
pop
lds
call
sbb
pop
les
call
sbb
pop
les
call
sbb
push
ret
sbb
push
ret
push
ret
push
rcr
push
rcr
push
les
(bad)
cmp
sbb
call
sbb
and
sbb
sbb
and
sbb
push
and
aas
aas
inc
mov
add
sbb
add
adc
add
pop
add
add
add
add
push
push
push
mov
cmp
sti
daa
daa
sub
daa
daa
sub
daa
daa
sub
daa
daa
sub
and
push
sbb
adc
adc
adc
adc
inc
xchg
push
call
sbb
push
mov
call
sbb
push
mov
sbb
push
mov
sbb
push
ret
push
les
call
sbb
pop
(bad)
sbb
pop
enter
leave
sbb
pop
leave
sbb
pop
retf
pop
rcr
pop
aam
call
sbb
pop
rcr
pop
iret
sbb
pop
retf
sbb
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
pop
retf
sbb
pop
into
sbb
pop
rcr
pop
(bad)
sbb
pop
into
sbb
push
scas
sbb
cmp
jmp
aaa
sbb
adc
pop
call
or
call
adc
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
or
jmp
xor
call
sbb
pop
leave
sbb
pop
enter
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
(bad)
sbb
pop
lds
pop
lds
pop
lds
pop
lds
pop
enter
sahf
sbb
sbb
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
je
add
sbb
add
or
add
add
add
add
inc
inc
inc
or
dec
(bad)
sub
das
jmp
daa
sub
and
and
adc
push
call
adc
adc
adc
adc
adc
dec
cmps
sbb
push
mov
sbb
push
mov
sbb
push
rcr
push
ret
sbb
pop
les
call
sbb
pop
enter
enter
retf
pop
retf
sbb
pop
retf
sbb
pop
int
call
sbb
inc
xchg
sbb
cs
sbb
xor
inc
sbb
push
mov
sbb
pusha
xlat
sbb
pop
(bad)
sbb
pop
rcr
pop
iret
sbb
pop
int
call
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int3
sbb
pop
int
call
call
call
sbb
pop
(bad)
sbb
pusha
fcomp
pop
iret
sbb
push
mov
sbb
imul
and
sbb
adc
or
call
or
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
dec
cdq
sbb
pop
rcr
pop
retf
sbb
pop
retf
pop
retf
pop
retf
pop
retf
pop
leave
sbb
pop
leave
sbb
pop
leave
sbb
pop
leave
sbb
pop
leave
sbb
pop
enter
enter
enter
retf
push
mov
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
sub
es
add
push
add
add
add
add
add
add
add
add
add
add
add
push
inc
inc
dec
jno
sub
cld
pop
pop
sbb
adc
adc
call
adc
adc
adc
push
mov
call
sbb
push
rcr
push
ret
pop
les
call
sbb
pop
(bad)
sbb
pop
enter
retf
pop
retf
sbb
pop
int3
sbb
call
call
sbb
(bad)
cmp
dec
push
sbb
adc
sbb
adc
sbb
adc
sbb
sbb
sbb
xor
pushf
sbb
push
mov
call
sbb
call
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
call
sbb
inc
sbb
xor
jmp
cmp
call
sbb
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
and
sbb
push
lods
sbb
pusha
xlat
sbb
call
call
call
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
call
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
push
push
and
sbb
sbb
call
adc
call
sbb
pop
les
call
sbb
pop
(bad)
sbb
pop
enter
leave
sbb
pop
retf
sbb
pop
int3
sbb
call
call
call
call
sbb
call
sbb
call
(bad)
call
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
sbb
sbb
and
sbb
sub
push
pop
sbb
xor
sbb
cmp
(bad)
cmp
(bad)
cmp
sbb
cmp
(bad)
cmp
push
ins
sbb
xor
jmp
inc
sbb
and
sbb
sbb
call
or
call
or
call
or
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
and
sbb
inc
mov
call
sbb
call
sbb
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
cmp
add
add
add
adc
add
pop
add
add
dec
dec
push
add
push
add
add
add
add
add
add
push
add
add
sbb
sbb
and
push
push
and
push
push
and
sbb
sbb
pop
leave
sbb
pop
leave
sbb
pop
retf
pop
int3
sbb
call
call
sbb
call
sbb
call
sbb
jmp
sbb
call
push
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
call
push
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
and
sbb
inc
mov
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
call
call
call
sbb
call
push
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cmp
cmp
add
add
add
add
push
push
pop
add
pop
add
add
add
add
or
add
push
sub
sub
and
sbb
sbb
and
sbb
sbb
sbb
pop
enter
int
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
(bad)
call
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
push
sbb
jmp
sbb
dec
popf
sbb
pop
aad
jmp
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
push
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
daa
(bad)
xor
xor
add
push
add
add
add
add
add
add
add
add
bound
bound
add
add
add
add
add
add
add
sbb
sbb
and
sbb
sbb
and
sbb
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
(bad)
aas
sbb
adc
call
or
call
(bad)
call
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
sbb
adc
sbb
adc
sbb
pop
sbb
jmp
dec
sbb
inc
mov
call
sbb
jmp
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
jmp
sbb
call
push
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sub
or
add
add
add
add
add
add
add
add
imul
add
add
add
add
or
add
push
aaa
aaa
aaa
and
and
sbb
sbb
and
sbb
sbb
and
sbb
call
sbb
pop
aam
call
sbb
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
jmp
push
dec
sbb
jmp
xor
call
sbb
call
or
call
or
call
or
call
adc
call
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
call
nop
adc
call
or
call
or
call
push
sbb
and
sbb
xor
inc
xchg
sbb
jmp
push
jmp
jmp
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
jmp
push
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
cmp
add
add
add
adc
add
pop
add
add
add
add
jae
jne
add
add
add
add
add
add
xor
ss
sbb
sbb
and
sbb
sbb
and
sbb
sbb
call
sbb
popa
fstp
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
dec
sbb
jmp
dec
sbb
and
sbb
sbb
sbb
adc
call
or
call
or
call
or
call
or
call
or
call
or
sbb
adc
call
or
call
or
call
or
call
or
call
or
sbb
sbb
sbb
and
sbb
sub
(bad)
cmp
dec
sbb
push
mov
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
call
inc
dec
sbb
pop
retf
arpl
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
call
sbb
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
inc
inc
inc
lods
add
add
add
add
add
add
add
add
jl
jle
add
add
add
add
add
add
cmp
cmp
pop
pop
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
sbb
arpl
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
call
push
call
push
call
sbb
(bad)
cmp
sbb
xor
jmp
push
sbb
sub
jmp
dec
sbb
sub
jmp
inc
sbb
sub
jmp
sbb
das
pop
sbb
xor
sbb
mov
sbb
jmp
push
jmp
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
(bad)
cmp
call
or
call
or
call
and
dec
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
dec
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
(bad)
aas
aas
inc
push
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cmp
sbb
fs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
inc
sbb
push
sub
call
or
call
sbb
adc
adc
sbb
sbb
sbb
pop
ret
(bad)
fcomp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
(bad)
cmp
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
sub
and
add
or
add
add
add
add
add
add
add
add
add
or
add
sbb
cmp
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sub
jecxz
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
sbb
call
and
call
or
call
adc
call
adc
sbb
adc
adc
sbb
cmp
sbb
fs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
sub
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
xor
call
add
add
add
add
add
add
lea
add
add
add
add
add
add
add
sub
cs
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
xor
jmp
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
call
sbb
jmp
inc
sbb
adc
or
call
sbb
adc
adc
sbb
adc
adc
sbb
adc
or
push
sbb
gs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
and
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
aas
inc
mov
add
add
add
add
add
add
add
add
add
or
add
sbb
cmp
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
and
(bad)
fcomp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
call
sbb
inc
sbb
pop
rcr
(bad)
fcomp
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
call
push
dec
sbb
jmp
inc
sbb
pop
sbb
call
or
call
or
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
sbb
inc
mov
fs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
call
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
sub
inc
inc
inc
mov
inc
inc
and
add
add
add
add
add
add
add
or
sub
sub
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
push
scas
sbb
(bad)
fistp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
cmp
call
sbb
adc
sbb
adc
sbb
sbb
jmp
push
sbb
push
mov
call
jmp
push
jmp
jmp
push
jmp
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
jmp
push
jmp
jmp
push
jmp
push
call
push
call
sbb
push
ins
sbb
daa
inc
sbb
sbb
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
dec
add
sbb
pop
rcr
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
dec
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
cmp
dec
sldt
add
pushf
pushf
sahf
add
add
add
add
add
add
or
cmp
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
imul
gs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
inc
sbb
adc
sbb
adc
sbb
adc
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
and
sbb
cs
sbb
ss
(bad)
ds
inc
sbb
dec
sahf
sbb
call
sbb
call
sbb
call
sbb
call
sbb
dec
dec
sbb
(bad)
cmp
push
bound
jmp
dec
sbb
and
call
and
call
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
or
sbb
xor
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
xor
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
(bad)
dec
sub
add
add
add
add
inc
xor
and
(bad)
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
xor
jmp
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
xor
call
push
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
call
sbb
adc
sbb
adc
call
or
call
or
call
or
call
or
call
adc
call
sbb
adc
pop
sbb
push
pop
sbb
push
pop
sbb
push
push
sbb
adc
adc
call
push
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
or
sbb
and
mov
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
and
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
xor
inc
inc
add
add
add
add
dec
dec
dec
mov
daa
sub
pop
pop
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
call
and
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
call
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
call
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
sbb
adc
sbb
adc
sbb
es
sbb
dec
xchg
sbb
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
call
push
push
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
push
and
xor
xor
inc
inc
inc
pop
add
add
scas
scas
mov
add
add
inc
inc
dec
push
aas
aas
inc
mov
xor
sub
pop
pop
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
cmp
sbb
fs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
dec
sbb
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
sbb
adc
call
or
call
and
push
pop
sbb
dec
test
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
(bad)
cmp
call
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
cs
dec
dec
dec
mov
add
add
add
add
add
add
push
dec
dec
dec
addr16
inc
inc
ret
xor
es
sbb
sbb
and
sbb
sbb
and
and
sbb
data16
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
call
sbb
call
or
call
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
call
or
call
or
call
pop
sbb
sub
sbb
inc
xchg
sbb
pop
retf
push
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
and
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
sub
inc
inc
inc
movs
cmp
cmp
mov
add
add
dec
adc
aas
inc
lea
sub
and
and
sbb
sbb
and
dec
stos
sbb
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
call
sbb
call
sbb
call
or
call
or
call
push
sbb
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
sbb
adc
adc
call
or
sbb
adc
sbb
push
pop
sbb
and
sbb
xor
inc
sbb
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
dec
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
and
and
ror
push
adc
add
add
ret
inc
inc
inc
cmp
inc
mov
sub
sub
sub
jmp
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
dec
sbb
jmp
and
call
or
call
or
call
or
call
or
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
call
adc
sbb
adc
adc
sbb
adc
adc
call
sbb
adc
sbb
adc
sbb
adc
sbb
adc
call
or
call
or
call
or
call
and
sbb
xor
sbb
inc
xchg
sbb
jmp
push
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
es
sbb
sbb
sbb
and
sbb
sbb
and
xor
inc
inc
cmp
add
add
add
add
retf
retf
add
add
add
dec
cmp
retf
and
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
call
push
call
sbb
(bad)
cmp
xor
jmp
inc
sbb
and
sbb
sbb
sbb
sbb
call
pop
sbb
adc
sbb
adc
sbb
adc
sbb
adc
call
or
call
or
call
or
sbb
adc
sbb
adc
sbb
call
and
call
sub
jmp
sbb
sub
push
sbb
dec
call
pop
int3
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
push
call
and
call
sbb
and
push
push
and
xor
xor
aas
aas
inc
push
add
add
rcl
rol
cmps
inc
xchg
fs
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
jmp
push
call
push
call
call
push
call
call
sbb
dec
dec
sbb
dec
sbb
dec
sbb
call
sbb
call
push
call
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
push
sbb
sbb
sbb
and
sub
aas
inc
je
add
add
add
add
(bad)
add
add
add
pop
and
in
(bad)
fistp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
jmp
jmp
jmp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
pop
call
push
call
sbb
sub
ds
xchg
add
add
loop
loop
gs
dec
pop
popa
fcomp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
xor
jmp
es
cmp
cmp
add
add
jmp
add
add
add
dec
mov
fstp
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
inc
(bad)
cmp
cmp
pop
repnz
cmc
cmc
add
add
add
fidiv
jmp
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
call
cld
push
outs
dec
inc
cld
cld
cld
add
std
std
add
add
add
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
mov
pop
dec
(bad)
(bad)
inc
(bad)
inc
sbb
xchg
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
inc
add
(bad)
(bad)
inc
jp
inc
mov
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
jge
inc
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
push
pop
jb
cmp
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmp
pusha
(bad)
push
pop
(bad)
(bad)
dec
(bad)
(bad)
inc
pop
aad
push
jo
xor
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmp
pop
aad
push
(bad)
(bad)
dec
(bad)
(bad)
inc
pusha
(bad)
push
pcmpeqw
cmp
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmp
pusha
(bad)
push
sldt
add
(bad)
(bad)
dec
(bad)
inc
pusha
(bad)
push
add
mov
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
(bad)
jg
dec
mov
(bad)
push
add
add
add
(bad)
dec
(bad)
(bad)
inc
and
mov
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
test
push
lea
add
add
(bad)
call
(bad)
(bad)
inc
xchg
push
push
push
sub
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
cs
mov
pop
push
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jnp
inc
sbb
ss
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmp
sbb
sbb
add
add
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pusha
xlat
push
add
inc
jns
fldcw
lock
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
sub
jnp
inc
jp
xlat
push
add
add
add
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pusha
xlat
push
push
jnp
inc
fsub
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
es
jg
dec
popf
pusha
xlat
push
push
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jno
ss
fiadd
fldenv
hlt
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
sub
jge
inc
mov
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pusha
xlat
push
adc
inc
jle
(bad)
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
jo
xor
and
adc
add
add
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
das
sbb
nop
jae
cmp
fsub
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
fld
fisttp
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
je
cmp
sbb
pop
jle
dec
call
xor
imul
and
pusha
xlat
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
and
imul
xor
leave
jg
dec
fwait
test
push
pop
jae
cmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pusha
xlat
push
add
pusha
xlat
push
xor
ins
fidiv
jae
fisubr
xchg
imul
mov
imul
mov
outs
fidiv
je
fisubr
push
pusha
xlat
push
xor
pusha
xlat
push
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
dec
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
jg
jmp
aas
(bad)
inc
aas
(bad)
inc
jg
inc
jg
inc
(bad)
(bad)
cld
add
(bad)
clc
add
jmp
add
inc
add
inc
pop
(bad)
inc
pop
(bad)
inc
ud0
add
(bad)
clc
add
jmp
add
inc
add
inc
add
push
add
cld
add
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
push
jg
(bad)
clc
aas
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
inc
aas
(bad)
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
add
(bad)
cld
add
(bad)
cld
add
(bad)
clc
add
(bad)
clc
add
push
ud0
inc
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
add
inc
or
add
or
add
add
add
add
or
add
add
data16
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
arpl
dec
inc
inc
push
js
in
jge
cwde
and
jns
jne
int3
out
in
int3
ins
mov
dec
cmps
sbb
into
loope
add
and
mov
dec
push
arpl
pusha
xor
mul
jecxz
xor
and
push
add
jmp
pushf
data16
(bad)
fistp
pop
outs
ins
out
ins
sahf
cdq
popf
fldl2t
ja
fwait
or
stos
jmp
gs
out
and
and
dec
xor
dec
mov
jne
aas
(bad)
adc
stos
(bad)
pop
inc
retf
adc
or
pop
jb
add
xor
sub
js
push
adc
dec
mov
adc
xchg
inc
inc
add
pop
je
pop
nop
push
add
dec
popa
mov
sub
adc
add
mov
sub
cwde
std
add
nop
xor
iret
and
arpl
sti
mov
push
stc
addr16
dec
ja
pop
retf
pusha
clc
out
cli
and
add
or
stos
fnstenv
and
xlat
nop
sbb
push
xchg
mov
xchg
in
cdq
xchg
xor
xchg
idiv
dec
imul
sub
mov
jge
xchg
das
or
pop
inc
test
pop
dec
inc
mov
sahf
mov
out
lods
aam
mov
es
inc
pop
out
jmp
sbb
inc
mov
not
xchg
das
ja
sti
ss
arpl
inc
add
and
mov
icebp
inc
test
call
(bad)
push
data16
and
inc
dec
sub
(bad)
sbb
cdq
ror
jecxz
jb
js
mov
cmp
pop
add
and
aaa
mov
jmp
and
jle
inc
es
inc
sub
inc
ret
shl
data16
pusha
fsubr
cmp
test
push
dec
add
cmps
xchg
or
add
inc
cli
pop
or
js
xchg
pop
xchg
ds
outs
js
iret
xor
mov
xchg
dec
aam
dec
mov
pop
test
adc
xchg
shr
shl
dec
sbb
xchg
sbb
push
add
push
add
jg
(bad)
and
(bad)
(bad)
int3
loopne
enter
shl
lea
jae
jnp
idiv
mov
mov
push
fs
add
je
add
sbb
ret
jnp
(bad)
jge
cdq
xor
push
jg
or
sub
(bad)
daa
sar
push
mov
retf
enter
popf
lods
add
jmp
int3
inc
les
adc
inc
dec
lock
outs
push
rcl
scas
sbb
popf
aas
es
nop
push
rcr
or
xor
mov
push
add
dec
jle
adc
cld
out
and
test
div
fiadd
cmp
pop
aas
lock
popa
add
adc
push
add
cmps
push
or
adc
aas
inc
les
and
cmp
jl
jo
jecxz
dec
adc
lods
add
mov
adc
mov
mov
cmp
jecxz
jmp
add
sub
jl
ret
jmp
icebp
nop
das
adc
enter
pop
add
outs
and
cmp
(bad)
cs
dec
(bad)
jns
retf
popa
push
push
and
push
out
enter
mov
add
sbb
mov
(bad)
hlt
mov
dec
cmc
mov
int
aam
push
sub
fidivr
jg
inc
jns
add
clc
fnstsw
loope
fstp
jg
xchg
mov
push
push
push
repnz
jg
cli
push
lahf
stc
popf
cmp
add
mov
push
aas
dec
lods
(bad)
mov
movs
mov
cld
fld
adc
pop
adc
fsubr
dec
std
mov
dec
adc
int
cmp
sahf
add
shl
jl
js
cmp
mov
aad
mov
movs
mov
pop
cmc
test
setae
adc
xor
mov
jmp
repnz
pop
inc
(bad)
aad
mov
inc
adc
add
mov
std
sahf
add
out
daa
xchg
(bad)
aas
(bad)
cmps
mov
cwde
and
jno
stc
rcr
pusha
repnz
daa
pop
push
shl
jg
stos
mov
out
fwait
push
xchg
xchg
shl
(bad)
fcomp
xor
mov
xor
jmp
pop
pop
inc
into
call
mov
cld
sbb
or
jnp
fnstcw
rcr
inc
cli
sub
mov
lahf
mov
hlt
enter
repnz
inc
(bad)
fnstcw
shl
add
enter
(bad)
adc
mov
dec
sub
mov
jl
mov
in
sub
rcl
xlat
or
pop
mov
shr
cmp
jg
mov
xor
xchg
iret
fcomip
xor
jge
in
pop
(bad)
aad
ds
xchg
push
out
cmps
lods
mov
jns
adc
mov
ret
out
cmp
jns
loopne
add
add
pop
xlat
out
cli
hlt
pop
sbb
ja
fistp
pop
mov
push
and
int3
stc
cmp
mov
inc
jns
js
pusha
add
push
ja
int
push
retf
out
xchg
mov
mov
call
pop
xchg
and
mov
aad
out
jnp
movs
add
retf
mov
jmp
jns
jmp
das
pop
popf
sub
pusha
or
mov
pop
inc
mov
adc
xchg
cli
mov
repz
pop
repnz
push
mov
jae
icebp
cli
not
push
stc
stos
(bad)
or
xchg
xchg
or
sub
sahf
add
ins
mov
stos
sbb
sub
movs
dec
fdivr
jmp
cmc
gs
lock
jl
test
mov
add
shl
in
std
in
(bad)
cmps
loop
movs
shr
add
cld
ret
fwait
sub
mov
jae
aam
arpl
jmp
sbb
xchg
std
(bad)
adc
outs
mov
pop
ror
push
sub
adc
(bad)
mov
outs
jnp
scas
cmp
movs
arpl
stc
or
jne
aaa
aad
cmps
push
sub
mov
inc
clc
cmps
push
adc
mov
inc
lods
out
jae
jp
xchg
fbld
das
pop
jecxz
xor
movs
dec
xchg
push
xor
cmc
fnstcw
xchg
jmp
push
xor
in
inc
xlat
jl
popf
imul
call
ja
scas
jns
xchg
xchg
pop
mov
ds
sbb
sbb
sbb
aam
test
mov
nop
pop
adc
mov
and
aas
dec
sbb
xchg
add
jo
mov
jle
out
fstp
mov
mov
in
lea
adc
push
pop
js
in
jnp
jle
xchg
enter
pop
sbb
and
jnp
mov
cmp
pop
mov
iret
sahf
xor
ss
add
stos
and
dec
or
cs
and
xchg
aaa
lahf
jp
jl
jno
pop
icebp
mov
push
je
sub
nop
int
push
(bad)
jecxz
(bad)
scas
cmp
scas
mov
mov
(bad)
sbb
jmp
sbb
icebp
loopne
pop
sbb
aam
mov
fwait
xchg
push
mov
or
push
or
dec
sub
sbb
mov
in
fcomp
(bad)
(bad)
rcr
jl
or
inc
ss
push
out
iret
sbb
xor
aas
mov
fistp
mov
xchg
adc
ins
mov
(bad)
add
ins
(bad)
mov
int
and
cli
icebp
xchg
add
and
test
inc
test
add
inc
pop
pop
test
xor
repz
sub
in
cmp
js
jl
and
mov
addr16
pop
inc
and
jecxz
jp
mov
adc
jge
aad
imul
stc
hlt
inc
pop
pop
sar
lods
mov
pop
mov
sbb
cld
repz
fdivr
pop
push
cdq
out
pop
mov
sti
adc
push
call
inc
pop
add
cli
xchg
ret
pop
test
jp
xchg
les
pop
xor
(bad)
test
sbb
les
pop
ror
inc
xchg
mov
xchg
sbb
and
mov
gs
lods
adc
dec
popf
xchg
jbe
nop
addr16
add
pop
or
adc
pop
pop
dec
xor
xor
dec
cmp
mov
jecxz
push
pop
xor
movs
add
mov
mov
mov
cmp
push
jle
(bad)
cmp
xchg
sub
xchg
pop
cmp
adc
xchg
jecxz
inc
sbb
or
pop
dec
pop
daa
leave
fist
popf
or
push
je
adc
mov
lods
mov
sub
enter
push
cmp
clc
(bad)
jecxz
cmp
mov
movs
adc
test
sbb
inc
sub
adc
lahf
fs
push
mov
push
jb
in
cmps
jmp
inc
in
mov
xchg
std
out
sbb
jg
inc
adc
adc
(bad)
inc
ins
pop
fstp
or
xor
js
fnstsw
imul
in
pop
and
or
fnstsw
movs
pop
retf
lods
jg
(bad)
(bad)
sub
xor
mov
dec
mov
add
mov
add
cmp
lods
into
mov
pop
push
fimul
xchg
mov
add
add
or
pop
ins
les
fist
push
inc
adc
add
test
popa
lods
test
(bad)
jb
lds
sub
and
sub
sbb
fs
adc
popf
mov
cs
fcmovu
(bad)
add
aam
dec
push
or
std
out
ja
add
push
in
xor
mov
je
cmc
daa
shr
mov
rol
inc
mov
cmc
shl
adc
fidivr
shl
inc
je
jnp
mov
xchg
xor
fldenv
jmp
mov
das
adc
xchg
or
push
pop
or
test
enter
test
xor
or
ret
outs
and
leave
mov
jmp
pushf
and
mov
ds
in
mov
push
ja
cmp
hlt
rcl
pop
jae
jne
push
adc
loopne
out
aaa
mov
(bad)
xchg
mov
push
push
dec
lea
loope
leave
movs
mov
ftst
adc
pusha
push
lahf
jnp
mov
pusha
xchg
jle
lahf
mov
je
in
xchg
mov
mov
push
xor
mov
jg
add
add
pop
or
pop
xor
test
mov
(bad)
sbb
inc
mov
fmul
mov
adc
sub
retf
nop
mov
mov
pop
sti
hlt
rcr
fsubr
add
xor
inc
ror
mov
jbe
cld
je
std
(bad)
aam
mov
sub
lods
dec
imul
or
sahf
cmps
test
sbb
cdq
pop
test
cmp
push
ds
clc
dec
sbb
sub
mul
lds
test
test
popf
xor
sahf
daa
int3
dec
out
mov
push
shr
cwde
mov
and
addr16
mov
int
sub
mov
jecxz
mov
loop
daa
mov
mov
jle
cwde
movs
add
in
ror
jno
push
test
in
cmp
push
pop
push
into
mov
push
inc
xchg
mov
movs
sub
clc
sub
mov
in
pop
(bad)
or
inc
out
fwait
test
mov
adc
aas
jns
mov
aaa
add
add
mov
mov
repz
pop
leave
cmp
bound
sub
sub
mov
call
cwde
xor
aaa
out
and
xchg
data16
push
xor
sub
imul
add
inc
add
jle
cmp
inc
cld
inc
aam
scas
daa
mov
(bad)
jmp
push
jge
cdq
mov
inc
movs
jmp
stos
xchg
pop
add
xor
mov
cmp
push
(bad)
or
fiadd
cmps
inc
sar
dec
std
ficomp
aad
repz
repz
inc
dec
pop
fucomi
cli
cli
cli
mov
rol
outs
push
adc
mov
std
retf
in
mov
inc
into
mov
cmp
cmc
outs
cmps
ds
sti
test
fild
int
or
in
jg
sub
int3
mov
sbb
mov
out
push
fld
shr
cmp
xchg
das
xchg
push
sbb
mov
mov
call
mov
xor
jne
aad
jg
retf
aad
aad
scas
jge
test
cs
add
repnz
lea
fdivrp
mul
aam
clc
sbb
mov
pop
push
pop
pop
scas
mov
or
adc
std
(bad)
jge
nop
pop
push
adc
sti
outs
enter
cdq
(bad)
fld
test
add
dec
popa
pushf
pop
dec
mov
xor
cmps
aam
xor
cwde
dec
mov
inc
mov
mov
lods
lock
inc
push
in
mov
and
cdq
addr16
mov
add
mov
ja
jns
and
es
inc
test
lock
es
cmp
mov
repnz
test
scas
adc
sub
fmul
cld
stc
dec
and
aam
jnp
rol
shr
cdq
das
int3
mov
adc
aam
mov
enter
mov
jae
jo
inc
jmp
pop
sti
hlt
shl
push
mov
mov
mov
mov
mov
scas
pop
dec
mov
push
js
push
outs
sub
repz
test
arpl
pop
mov
push
pop
cmp
int3
push
rcl
mov
call
mov
cmps
or
ret
clc
cld
push
adc
ss
mov
mov
in
adc
stc
das
sub
enter
(bad)
sti
aas
jmp
jo
std
stc
es
ret
movs
(bad)
jle
push
sahf
sub
stc
or
jnp
mov
push
mov
fiadd
or
pop
pop
jl
in
inc
out
scas
mov
sti
sahf
adc
retf
pop
retf
xchg
or
scas
pop
and
sub
mov
fnstenv
clc
loop
pop
push
scas
jle
mov
dec
in
(bad)
in
cmp
ja
enter
xlat
mov
jmp
xor
push
ins
sbb
fs
std
in
push
dec
or
push
and
and
mov
cli
ja
pop
sbb
mov
movs
test
das
mov
call
into
sub
or
outs
iret
out
fisttp
pop
jno
gs
or
ficom
push
rol
sub
add
imul
out
mov
mov
mov
fwait
push
fimul
in
and
daa
push
mov
push
cmps
push
sar
or
mov
lock
push
or
lahf
add
xchg
sbb
icebp
dec
inc
mov
add
sub
rol
mov
xchg
out
sbb
fisub
arpl
scas
adc
and
mov
fs
jp
dec
mov
jns
mov
repz
sub
mov
mov
add
mov
fbstp
fidiv
inc
pusha
cld
out
jle
xlat
add
les
mov
aad
pop
jne
ffree
arpl
jp
pusha
bound
test
(bad)
movs
mov
fst
adc
data16
mov
inc
xor
rcr
enter
and
fwait
jo
push
push
add
mov
rcpps
(bad)
sub
std
rcl
mov
sbb
lea
push
cmp
jmp
dec
jmp
imul
jge
ss
add
dec
repnz
sahf
sbb
das
adc
aaa
out
xor
mov
mov
leave
jmp
push
adc
gs
out
jg
cdq
addr16
mov
sbb
sar
ja
imul
jg
lods
add
aad
add
xchg
sbb
ds
adc
aam
ret
loop
sbb
jle
enter
jnp
jmp
push
xchg
cmp
xchg
sub
in
xchg
mov
dec
and
xor
inc
fs
fadd
mov
xchg
inc
adc
or
cmp
sub
ret
hlt
adc
call
jp
imul
adc
dec
enter
enter
adc
dec
jle
mov
pop
in
(bad)
les
cmp
ss
add
clc
ds
xor
pop
popa
pop
imul
push
stc
and
jp
add
sar
iret
adc
mov
sub
aas
jp
jmp
push
xor
jecxz
fist
hlt
mov
push
cli
test
and
sti
in
xor
clc
xor
lods
fxch
pop
test
adc
iret
outs
adc
sub
or
cmp
xchg
repz
push
mov
mov
push
fadd
leave
icebp
fmul
push
jmp
mov
enter
push
sbb
pop
xchg
movs
push
inc
cmp
xor
pop
inc
hlt
sbb
jno
setb
cmp
mov
lock
repz
jnp
inc
jbe
mov
add
xchg
jns
ficomp
push
mov
popf
clc
mov
inc
sub
push
(bad)
es
pop
cmp
bound
cmc
lea
mov
dec
push
imul
clc
lock
ds
iret
push
mov
add
adc
in
repnz
or
cmp
arpl
xor
xor
ret
pop
and
pop
and
mov
mov
xchg
xor
(bad)
ror
repz
popa
pop
cmp
(bad)
stos
pop
push
sub
je
xchg
push
in
mov
nop
out
popf
pop
pop
stc
call
(bad)
mov
sbb
movaps
jle
adc
push
dec
inc
popa
xchg
(bad)
icebp
cmc
ret
int3
jo
inc
sbb
imul
adc
pop
lock
jae
push
dec
dec
retf
mov
adc
in
(bad)
std
sbb
rcl
mov
and
mov
fstp
mov
and
push
(bad)
jg
(bad)
std
jg
push
loope
pop
mov
mov
xlat
out
sub
sub
lds
rcr
test
xor
cld
iret
addr16
and
inc
dec
ret
out
ret
cli
inc
jbe
mov
ss
(bad)
movs
shl
clc
cmp
dec
clc
out
pop
and
xor
push
pop
xor
ds
pop
mov
mov
sar
out
stc
int
xor
addr16
mov
rcr
idiv
stc
lahf
pop
inc
add
outs
xchg
xchg
inc
lock
xchg
jg
nop
mov
aad
stc
out
jmp
add
das
cli
jmp
add
daa
cld
inc
nop
mov
jle
je
or
lods
movs
or
mov
in
(bad)
fld
test
enter
(bad)
push
retf
sbb
inc
cmc
xchg
add
xor
inc
mov
ins
test
retf
mov
xchg
xor
mov
(bad)
les
pop
add
dec
add
and
xchg
push
ds
mov
sbb
add
addr16
addr16
dec
sbb
xsha256
shr
or
push
mov
add
add
xor
lods
or
mov
or
xor
sub
mov
cld
out
cmc
ret
push
or
frstor
jae
inc
in
xchg
outs
clc
or
(bad)
sub
(bad)
retf
mov
xchg
mov
sbb
icebp
cmp
outs
or
adc
pop
jl
and
cld
sbb
repz
mov
loopne
xchg
add
fsubr
mov
push
or
fistp
xchg
sub
lods
mov
scas
adc
cmps
sub
or
fs
(bad)
jmp
xchg
add
jo
aas
adc
cmp
jbe
dec
adc
add
inc
push
add
(bad)
cli
mov
cmps
pushf
pop
xchg
es
xchg
pop
enter
push
push
and
dec
and
dec
cmp
push
movs
retf
adc
push
outs
repnz
mov
mov
pop
mov
icebp
xchg
cmps
jg
fisttp
push
or
fsubr
add
fild
in
adc
ins
pop
fnsave
movs
repnz
shl
shr
mov
les
push
out
push
or
call
repnz
inc
jb
add
je
dec
enter
ins
mov
dec
out
and
adc
push
rol
xor
daa
icebp
sbb
xchg
mov
or
popa
fnstsw
repnz
sbb
inc
fnstcw
mov
sub
(bad)
inc
ret
stos
test
pop
push
or
ss
daa
popf
adc
clc
sbb
lods
push
pop
adc
jmp
rcr
stc
pop
add
dec
shl
adc
push
(bad)
sub
shl
arpl
xor
stos
test
xchg
xlat
mov
lods
mov
push
and
sbb
(bad)
adc
add
cld
or
cmp
pop
movs
xchg
dec
mov
ds
inc
out
or
jno
mul
xor
(bad)
jg
and
dec
mov
dec
or
test
xor
jl
repnz
lds
or
aam
aam
cld
cdq
xlat
mov
ret
or
fwait
iret
push
pop
mov
add
stos
xchg
push
lock
cs
jbe
cdq
cdq
add
test
mov
or
addr16
pushf
pop
aad
cld
es
mov
retf
jns
xchg
add
mov
push
and
je
push
push
lods
fcom
dec
jno
stc
or
clc
cld
pop
mov
xchg
pop
jbe
out
xor
xor
or
setae
pop
xor
cmp
pop
push
cdq
out
mov
add
mov
mov
out
pop
cs
mov
pop
add
xchg
imul
jmp
lock
pop
mov
jmp
ret
mov
adc
fdivr
repz
loope
or
stos
inc
dec
add
lods
add
mov
jnp
jg
rol
test
jecxz
popa
sahf
push
das
sub
hlt
ret
and
shr
jmp
and
fmul
retf
imul
lock
xor
call
jnp
xchg
rcl
std
or
std
repz
or
xchg
add
int
xchg
mov
repz
xor
mov
popa
and
or
je
pushf
pop
lods
outs
push
mov
mov
sbb
mov
shr
cmp
jmp
retf
out
js
sub
fstp
push
int3
in
mov
sub
xlat
pop
inc
pop
es
in
inc
xchg
xor
push
lahf
cld
movs
cld
rcl
int3
push
add
out
in
pop
cli
aam
jecxz
xchg
xchg
jg
dec
jecxz
push
mov
pusha
sbb
test
rcl
jne
pop
shl
adc
arpl
mov
(bad)
sahf
rol
jb
dec
aas
inc
sub
or
add
cmp
xchg
xchg
mov
inc
inc
xchg
lahf
inc
repnz
add
or
ret
jne
jmp
xlat
mov
cmc
movs
in
inc
mov
popf
daa
retf
(bad)
cmp
mov
jno
xor
cmp
or
mov
rcl
rcl
jge
jb
add
bound
jmp
dec
movs
sub
jo
sbb
or
cld
jmp
mov
into
sbb
or
jne
pop
cmps
xchg
leave
pop
jmp
xchg
add
push
mov
xchg
fs
inc
in
mov
dec
repnz
movs
(bad)
jl
jo
lahf
enter
jmp
lods
add
lock
adc
sub
es
add
xchg
dec
xchg
scas
cvtps2pi
sub
jl
lock
push
popa
scas
push
sub
add
mov
in
sti
sbb
loop
popa
shl
xor
into
aas
or
jb
lods
pop
ret
lea
mov
mov
xlat
mov
das
push
nop
dec
(bad)
adc
xor
jno
and
clc
fadd
sub
icebp
cmc
outs
jle
ror
add
inc
pusha
add
pop
jns
in
pop
aas
jp
ins
repnz
or
push
hlt
inc
add
sbb
sub
mov
dec
outs
inc
scas
enter
pop
pop
test
movaps
dec
jbe
pop
dec
pop
call
fld
fmul
push
ins
pop
inc
(bad)
sar
idiv
std
iret
stos
xchg
pop
call
pop
or
stos
ficomp
fnstsw
rol
mov
cli
ret
mov
mov
inc
jle
aas
es
xor
jg
mov
mov
aaa
ins
sub
call
sub
int3
dec
cmp
or
not
cld
ja
bound
pop
fcomp
xchg
pop
push
outs
(bad)
std
outs
push
push
pushf
xor
cmc
rcr
mov
jnp
cmc
bound
and
jg
pop
mov
sub
adc
pusha
(bad)
repz
push
mov
cmp
mov
jecxz
das
(bad)
and
test
sub
(bad)
xchg
(bad)
cli
ss
es
pushf
mov
add
sbb
mov
xchg
mov
sbb
dec
mov
nop
dec
pop
fidivr
loope
pop
pop
jl
mov
hlt
cmp
(bad)
and
loopne
(bad)
mov
fdiv
hlt
pop
sbb
push
mov
xchg
sub
xor
fistp
push
push
inc
clc
out
pop
mov
in
jb
test
cmp
fstp
mov
pop
xor
xor
out
jo
mov
jae
jl
mov
test
jmp
rcr
xchg
fstp
mov
cwde
jne
aad
pop
aad
call
test
ins
std
fs
lock
adc
(bad)
int
std
scas
lods
pop
jg
jns
js
cld
mov
jns
mov
add
xchg
add
mov
ja
shr
xchg
dec
and
jg
push
xlat
aaa
add
jo
retf
push
mov
inc
lods
(bad)
push
mov
push
jo
aaa
push
mov
xor
cmp
(bad)
jae
inc
xchg
xchg
add
add
sbb
jmp
cdq
ss
mov
lds
clc
nop
enter
dec
dec
outs
outs
das
add
dec
mov
sbb
out
jmp
mov
lds
mov
inc
enter
push
xchg
in
ret
repnz
mov
mov
lods
mov
mov
ret
ja
lock
pusha
int3
stos
dec
dec
popa
int3
es
outs
sub
pop
inc
push
add
jg
fnsave
jmp
adc
repz
xchg
aad
push
pop
scas
xchg
inc
shl
pop
shl
sub
jecxz
daa
and
cmp
arpl
jle
cmp
sub
pop
inc
ret
out
in
fisttp
es
popa
push
dec
sub
pop
ins
cmc
mov
(bad)
and
ret
lahf
ret
mov
stc
cmps
push
and
mov
(bad)
test
pushf
xor
out
and
mov
push
add
inc
dec
push
fs
dec
movs
aas
hlt
mov
xchg
std
fnstcw
sbb
adc
lea
pmaxsw
out
or
mov
dec
inc
dec
jno
in
jp
mov
mov
push
sub
in
movs
xchg
pop
jle
inc
cmp
sbb
sbb
data16
and
rcl
sbb
hlt
lahf
shr
mov
pushf
xchg
movs
cmps
xor
sahf
add
hlt
inc
in
cmp
push
jmp
fcomip
xchg
and
mov
aam
(bad)
push
in
ds
or
imul
leave
ret
sub
mov
mov
or
cmp
rcr
rol
add
pop
rol
dec
ror
lods
mov
icebp
add
enter
nop
adc
mov
and
ins
pushf
xchg
in
add
icebp
xchg
adc
ret
clc
pushf
mov
jae
fwait
and
sub
clc
sahf
jmp
sbb
bound
sub
lods
or
jecxz
test
dec
pop
mov
ror
xchg
(bad)
adc
sub
movs
mov
pop
lahf
fdiv
sbb
pop
add
xchg
dec
jmp
jbe
ficom
retf
iret
or
jle
out
in
pop
(bad)
call
ror
fst
and
out
adc
outs
pop
es
fsub
lods
std
dec
test
lahf
fmul
push
mov
call
adc
lods
lods
cmps
(bad)
fldenv
loopne
add
jns
mov
cdq
xchg
mov
ja
add
icebp
xchg
adc
fcmovu
wrmsr
lock
inc
add
and
cwde
fcomp
mov
inc
xor
add
push
sub
sub
jp
inc
fs
cmp
mov
push
or
sbb
mov
jb
dec
xor
outs
bound
ret
inc
inc
jl
cmp
pop
std
sti
inc
(bad)
sbb
pop
outs
std
push
push
mov
ins
adc
sbb
stos
jle
fld
xchg
pop
cmp
pushf
xchg
mov
jmp
inc
jle
dec
shl
movs
das
bound
loope
ret
push
dec
leave
leave
ins
retf
repnz
scas
and
dec
push
stos
aaa
sub
out
jg
int3
(bad)
test
leave
add
ud2
add
or
push
aaa
push
push
loopne
push
sub
jbe
pop
mov
std
inc
push
add
rol
cs
retf
lods
cwde
mov
dec
mov
repnz
adc
pusha
push
sar
push
push
sar
mov
adc
mov
mov
sbb
cld
sub
nop
aaa
js
enter
mov
jae
std
jno
mov
(bad)
or
xor
popa
cli
dec
xchg
mov
mov
rep
out
js
pop
or
popa
and
adc
sbb
repz
cdq
dec
movs
mov
jp
pop
cld
xor
inc
mov
ret
mov
xchg
outs
sbb
lahf
test
xchg
and
sar
stc
fcmovne
div
pop
outs
imul
push
inc
pushf
es
mov
inc
int3
cmps
jo
xchg
sbb
add
stc
cld
and
mov
icebp
adc
pop
pop
or
test
stc
es
adc
mov
pop
fimul
adc
xor
fcmovne
sbb
fwait
xchg
mov
mov
adc
enter
cld
scas
cmp
xor
popa
in
loope
mov
mov
and
sbb
inc
push
or
mov
fimul
adc
pop
stc
and
mov
fs
push
lea
jbe
mov
cmp
fs
mov
stc
mov
mov
lods
sub
cmp
mov
shl
add
inc
out
emms
fisttp
xor
mov
mov
sbb
(bad)
shl
sub
pop
add
sbb
mov
sub
scas
imul
popf
cmp
aas
push
test
add
out
jmp
or
mov
in
push
sbb
repz
and
add
test
hlt
mov
iret
push
ret
cmps
dec
clc
sub
or
inc
test
add
mov
pop
add
sbb
ja
loopne
repz
out
call
cmp
xor
(bad)
outs
mov
add
jns
loope
jmp
fdiv
jbe
ror
pop
add
pop
sbb
jp
inc
pop
aas
cmp
in
mov
ss
test
lock
into
xchg
adc
call
pop
add
sbb
cmps
out
add
add
js
or
xor
add
pop
jmp
repz
test
sub
xchg
xchg
leave
out
imul
retf
sbb
or
mov
pop
add
std
add
add
(bad)
and
cs
ja
or
or
aas
pop
repz
mov
arpl
mov
sub
rcl
dec
and
pop
dec
pop
or
add
xchg
hlt
inc
cmc
push
sahf
dec
stc
movs
retf
popa
js
push
inc
(bad)
dec
sbb
mov
jns
jo
push
out
and
inc
xor
or
add
mov
sahf
inc
in
inc
dec
adc
cmp
xchg
ss
fdivr
add
xor
adc
dec
push
movs
inc
fld
or
loopne
jbe
ss
jmp
sahf
and
sbb
sbb
loop
imul
bnd
sti
push
sbb
push
icebp
lea
call
ins
fisubr
jge
pop
out
adc
ficom
sub
imul
cld
retf
adc
mov
jo
jle
js
and
inc
mov
xor
mov
lahf
jbe
es
mov
adc
add
fdivp
push
dec
add
sub
and
fsubrp
add
loopne
in
mov
rol
jno
adc
movs
ret
push
pop
ja
nop
sti
imul
pop
adc
fadd
xor
mov
sbb
icebp
jbe
call
xchg
jl
repz
loope
adc
jnp
cmp
pop
into
cmp
push
pop
popf
retf
cmp
sbb
adc
ja
repnz
pop
(bad)
sub
loop
jecxz
inc
test
test
xchg
sbb
jl
icebp
pop
sbb
out
daa
mov
pop
clc
pop
out
xchg
cmp
xor
xor
sbb
(bad)
mov
dec
and
pop
daa
dec
xchg
adc
call
mov
or
dec
dec
dec
or
xor
xor
and
mov
mov
and
add
cmp
inc
inc
and
jmp
imul
or
das
dec
push
test
lods
xor
mov
jno
push
mov
mov
push
repnz
gs
xchg
mov
inc
fld
xchg
clc
test
enter
stc
adc
dec
(bad)
cmp
adc
sbb
out
and
inc
jle
add
or
fnsave
mov
aam
pop
inc
std
cli
sub
xchg
in
adc
add
and
inc
push
iret
outs
adc
pop
gs
std
push
mov
xor
bound
inc
jmp
out
add
(bad)
jb
and
adc
(bad)
mov
hlt
ins
jp
mov
mov
inc
stos
or
mov
sub
and
call
push
push
mov
inc
mov
call
jmp
(bad)
dec
mov
fldcw
(bad)
or
cld
in
add
jne
out
and
mov
cmps
sub
mov
les
popf
mov
out
out
mov
idiv
dec
addr16
inc
sbb
and
sub
jb
push
push
ds
and
retf
and
and
push
add
xlat
icebp
fld
adc
sub
ret
push
dec
neg
mov
sbb
out
stos
sub
add
mov
leave
mov
sub
(bad)
mov
and
pop
in
mov
push
mov
inc
imul
pop
xor
loopne
inc
(bad)
ja
(bad)
or
rol
sub
dec
push
jb
pop
inc
pop
cmp
ffree
aad
sub
jge
mov
push
nop
leave
iret
mov
aas
retf
mov
add
out
out
mov
xchg
std
sti
neg
add
push
dec
leave
add
add
mov
lods
mov
mov
cli
inc
inc
(bad)
mov
pop
fisttp
mov
pop
mov
iret
adc
into
xchg
or
and
dec
sbb
lea
ficom
mov
mov
arpl
add
xor
sbb
sub
fld
mov
sub
mov
xchg
or
cli
cmp
test
scas
mov
xor
jbe
mov
fstp
int3
enter
mov
mov
jge
(bad)
lea
mov
jo
(bad)
jns
and
jl
sbb
out
fimul
div
pusha
xchg
dec
fisub
cmps
or
sub
push
fild
and
retf
in
loop
mov
cli
ja
add
sub
add
push
add
lock
fldenv
(bad)
popa
jnp
dec
lock
jb
xor
cmp
push
mul
mov
inc
(bad)
retf
mov
inc
popa
adc
lods
add
inc
mov
fwait
aaa
das
adc
cdq
(bad)
ret
mov
enter
push
pop
fs
inc
inc
xor
xchg
mul
loopne
cdq
sub
scas
imul
inc
pop
add
inc
fdiv
ret
push
jmp
or
fnsave
xor
jmp
das
scas
jnp
(bad)
push
daa
aas
cld
adc
jl
mov
arpl
add
inc
stos
call
push
pop
cmp
dec
add
cmp
inc
jbe
push
or
push
inc
popfw
jae
jmp
jge
movs
add
retf
arpl
scas
add
adc
out
pop
mov
loopne
call
adc
push
dec
les
add
inc
jmp
out
loope
sti
jb
mov
pop
sbb
shl
jo
jb
retf
lods
(bad)
xor
in
and
jno
cld
push
cli
mov
and
and
rcl
call
aad
xchg
push
daa
call
aas
mov
popf
adc
js
pop
outs
mov
push
nop
gs
add
loopne
mov
fistp
pop
sbb
add
jno
jmp
cmp
sbb
dec
in
mov
sub
cmp
dec
xor
or
mov
int3
adc
jno
repnz
stos
or
shr
mov
add
in
cmp
jo
lahf
adc
mov
std
(bad)
xchg
enter
fs
inc
mov
fild
sub
xchg
fstp
or
inc
push
fyl2xp1
add
iret
jne
sbb
fistp
mov
retf
jle
scas
pushf
js
pop
rcl
jne
inc
neg
push
stc
dec
or
out
mov
hlt
cmc
pop
jne
fdiv
lahf
test
scas
and
push
cmp
arpl
(bad)
xor
mov
cmp
jp
mov
ja
or
push
pop
mov
pusha
or
jge
adc
daa
xchg
and
push
retf
pop
mov
mov
xchg
and
std
adc
push
scas
or
pop
or
inc
inc
mov
test
pop
pop
sub
repnz
daa
cmp
xchg
arpl
or
xor
add
(bad)
jnp
xor
jge
dec
jle
and
xor
mov
test
jecxz
aas
std
dec
mov
es
sbb
mov
ret
fcmovu
ins
dec
pop
loop
xchg
xlat
or
push
adc
out
das
xrelease
jno
sub
fbld
ds
or
popa
in
mov
cwde
xor
sbb
cmc
nop
(bad)
in
popa
clc
std
jle
dec
mov
add
sbb
inc
push
outs
mov
jge
cmp
and
(bad)
jg
add
adc
mov
repz
addr16
pop
pop
xlat
xchg
mov
lahf
dec
mov
mov
aad
jb
xchg
pop
dec
pop
pop
retf
push
push
mov
sbb
adc
mov
jno
adc
movs
jb
and
xchg
shl
sbb
in
add
pop
aas
pop
push
add
add
aaa
jb
ds
or
mov
pop
pop
mov
aam
(bad)
xlat
or
lds
and
popa
cmps
add
jg
dec
sbb
add
bnd
jae
mov
jmp
cmp
test
cdq
into
mov
retf
sub
dec
or
add
stos
ret
inc
inc
fwait
sub
in
loop
mov
adc
movs
pop
mov
leave
iret
sahf
jg
test
push
or
repnz
inc
jle
fcmovb
jno
mov
push
cmp
and
idiv
jo
sub
mov
ret
aad
xchg
mov
pop
sub
adc
scas
pop
adc
adc
jno
xor
aad
(bad)
lock
mov
test
stc
test
pop
stos
or
xor
jmp
pop
pop
in
iret
add
cmp
push
adc
xchg
xchg
(bad)
repz
pop
adc
add
(bad)
xchg
shl
add
push
cmp
jge
test
mov
mov
pusha
cli
add
inc
push
xchg
or
imul
adc
ds
sub
hlt
and
sbb
clc
shl
cmp
pop
cmc
sub
mov
xor
add
cmp
in
lahf
jge
mov
jmp
inc
(bad)
out
(bad)
scas
into
into
pop
(bad)
push
cmp
test
dec
adc
clc
mov
mov
out
cmp
cld
and
inc
jmp
(bad)
cmc
cmp
aas
or
push
std
or
not
ror
pushf
xchg
pop
clc
clc
movs
add
push
sub
or
and
jae
in
mov
lea
std
pop
inc
repnz
cmp
push
idiv
shl
inc
pop
test
ja
fwait
cld
xchg
jno
fcmovu
ss
out
pop
(bad)
sbb
cdq
ret
and
(bad)
fwait
test
sub
clc
inc
sbb
pop
jne
cdq
idiv
cli
jmp
pop
inc
shr
mov
movs
pusha
cwde
push
jecxz
jo
ja
jecxz
mov
dec
inc
inc
inc
push
cmp
cdq
and
mul
jp
into
mov
xor
push
mov
loop
(bad)
mov
add
pop
rcr
pop
cdq
pop
test
fwait
dec
ja
cmp
(bad)
xchg
dec
inc
push
cmps
inc
aad
jge
adc
sub
pop
sbb
xlat
add
das
add
inc
ret
rol
arpl
daa
pop
jns
jno
shl
inc
cmps
push
add
add
sti
xchg
sub
cmp
pop
fs
push
xchg
clc
cmc
inc
popa
cld
jmp
add
and
jmp
retf
push
lods
clc
out
pop
jns
fild
or
jg
hlt
xlat
into
push
pop
dec
movs
push
jb
mov
jg
repnz
cmc
retf
push
push
add
pop
xlat
mov
xor
dec
dec
sbb
mov
ins
mov
cmp
popa
loop
push
mov
or
in
dec
out
in
push
stos
mov
fcomp
inc
cmp
rol
mov
mov
sbb
pop
xor
mov
popf
into
fisub
nop
call
sub
icebp
ror
pop
inc
adc
jl
test
xchg
dec
fcomi
call
sti
leave
call
push
or
stc
adc
imul
mov
imul
mov
push
stos
push
lods
or
in
imul
fdivrp
loope
mov
adc
pop
mov
cmp
xor
test
fsub
mov
leave
sub
inc
or
xchg
xor
jle
cmps
mov
ja
adc
add
sbb
loop
rcl
aaa
out
jbe
jge
movs
adc
push
movs
xchg
xchg
arpl
js
sbb
xchg
mov
popf
in
inc
inc
cmp
jbe
and
jmp
fmulp
ins
hlt
ret
push
jb
sub
retf
pop
in
add
xor
mov
out
popf
int3
cld
repnz
lock
mov
push
jmp
imul
mov
adc
xor
call
(bad)
cli
scas
mov
scas
mov
retf
pmulhuw
sub
cwde
dec
add
(bad)
pop
addr16
test
pop
cmp
das
adc
aas
push
sub
mov
or
jle
mov
out
fcmovnu
test
loope
std
cmp
(bad)
(bad)
out
mov
mov
mov
out
add
and
dec
inc
mov
push
xchg
pop
dec
(bad)
pop
xchg
xor
in
out
jb
lock
add
sub
mov
popa
jne
or
sbb
pusha
push
sti
icebp
ss
jno
push
movs
in
cld
stos
cmp
sbb
cmp
inc
mov
aam
xlat
retf
xchg
jg
mov
add
push
cmp
xor
jb
mov
mov
pop
test
jg
inc
iret
jmp
mov
retf
stos
cwde
je
mov
or
retf
jb
sbb
xchg
stc
pop
aas
loopne
imul
add
out
xor
aam
dec
int3
clc
pusha
rol
or
cmp
adc
out
sub
cwde
or
enter
and
xchg
les
dec
and
je
jo
cmps
arpl
je
jbe
cmp
lods
ins
or
jmp
ins
push
adc
add
jmp
and
adc
(bad)
adc
movs
call
cmc
xlat
lahf
mov
push
adc
sub
aad
jae
loopne
aas
out
out
out
lahf
jae
iret
test
jae
and
cmp
push
pop
sbb
pop
push
fcomp
jle
push
xchg
mov
std
push
push
add
(bad)
mov
stos
xor
in
into
mov
ret
das
aaa
mov
pop
xchg
jle
aam
or
in
xchg
out
fs
or
jecxz
test
mov
xchg
movs
mov
mov
jle
stos
or
out
sbb
cs
test
push
(bad)
xchg
ret
(bad)
nop
xor
bound
mov
mov
jmp
shl
cmp
mov
shl
adc
or
fdivr
mov
pop
xchg
mov
pop
cmp
mov
ins
xchg
sbb
jnp
arpl
sar
or
adc
and
adc
sbb
cli
pcmpgtd
and
ja
call
add
mov
dec
mov
pop
scas
mov
mov
mov
or
push
cmp
stos
xchg
retf
ret
lock
and
imul
push
(bad)
pop
std
aam
jecxz
fidivr
xor
bound
inc
clc
add
push
test
sub
pop
push
and
ds
loopne
test
and
and
jo
add
scas
mov
jle
sub
in
fs
fwait
aam
sub
jle
mov
in
bnd
and
hlt
cmp
mov
push
in
mov
stos
lock
xchg
es
cmp
lods
mov
sti
xchg
pop
pop
mov
adc
mov
push
(bad)
mov
call
imul
loopne
jecxz
dec
hlt
fstp
add
mov
and
push
mov
adc
(bad)
in
mov
fisub
fimul
sar
and
xor
(bad)
push
and
inc
dec
nop
cli
leave
and
daa
mov
int3
les
add
xchg
mov
ja
loope
cmp
mov
xor
test
xchg
mov
and
test
xor
in
(bad)
jmp
add
xchg
pop
adc
dec
mov
or
mul
frstor
sbb
cmps
jo
mov
retf
retf
jo
sub
fisttp
sbb
pusha
sbb
rcl
arpl
mov
repz
jns
fisubr
dec
cdq
ja
push
lods
push
cmp
dec
mov
jle
add
push
test
popf
add
inc
pop
pop
clc
int
xchg
daa
aas
dec
aaa
imul
push
sub
pop
nop
movs
mov
sbb
pop
jmp
and
stos
add
jle
mul
inc
div
dec
adc
xchg
and
adc
push
cmc
inc
call
xor
inc
sub
or
xchg
and
inc
out
out
gs
sub
cwde
push
add
in
cmp
in
int
ins
shl
add
sahf
cmp
icebp
mov
xor
aam
pop
push
fidivr
cmp
mov
out
int3
cmp
jne
xor
fbld
add
cmps
out
sbb
gs
jle
cmp
fs
dec
ret
jns
jg
inc
mov
lods
ss
mov
dec
jl
jge
fild
mov
ss
hlt
mov
pop
xchg
mov
retf
ucomiss
ds
and
into
pop
cmps
shr
xchg
cs
cwde
sub
je
imul
mov
adc
cli
add
daa
add
pusha
cmp
call
mov
mov
and
push
add
mov
sub
inc
pop
aam
jno
repnz
add
es
jmp
inc
mov
or
xor
gs
nop
push
call
xlat
cmp
mov
pop
lods
add
adc
out
adc
ins
cdq
and
imul
cmp
push
iret
lods
mov
mov
inc
shl
jp
inc
inc
pusha
ja
aam
and
lods
mov
int
inc
sub
pop
out
mov
fld
test
sub
stos
push
scas
pop
jns
sub
or
bswap
adc
and
mov
xor
jo
xchg
inc
repnz
sub
cli
mov
lock
push
mov
retf
mov
retf
nop
sbb
mov
mov
mov
mov
jo
mov
push
maskmovq
test
fstp
mov
out
call
xchg
jge
ja
xor
mov
dec
leave
retf
gs
xchg
xchg
stc
mov
sub
inc
pusha
cmps
lahf
push
enter
jle
(bad)
nop
push
inc
jecxz
pop
ror
cmps
add
xchg
mov
pop
mov
sti
mov
jmp
mov
rol
sub
add
sbb
shld
mov
(bad)
pusha
and
mov
sub
adc
xchg
call
push
xor
stc
jae
sub
addr16
inc
scas
xchg
inc
jb
test
cmp
adc
mov
ins
jbe
js
sub
dec
mov
lea
push
inc
xor
adc
test
and
aad
cmp
ins
movs
xchg
fistp
mov
add
and
xor
aad
in
sub
fs
out
rcl
test
(bad)
mov
xor
sub
mov
pusha
icebp
shl
lahf
aas
dec
rol
pop
add
addr16
add
stos
xchg
sub
into
(bad)
xor
retf
and
fnstenv
sub
stos
nop
mov
mov
and
cdq
push
stc
push
mov
into
jo
je
jnp
(bad)
or
or
push
or
mov
xchg
add
mov
out
mov
inc
cmc
sub
lods
and
adc
popf
xor
test
push
out
or
and
movs
sub
xchg
push
aas
jo
jp
sar
push
pushf
adc
mov
loope
sbb
and
rol
call
lods
cmp
lock
jg
cmp
inc
adc
add
mov
gs
xchg
pop
adc
jg
dec
nop
retf
xchg
aaa
cs
jbe
es
xchg
or
rcl
push
test
in
sub
popa
mov
adc
mov
js
mov
jle
jb
jns
and
enter
popa
int3
pop
xor
pop
icebp
es
mov
push
jg
(bad)
xor
pusha
(bad)
fcom
xor
retf
pop
ins
lds
test
push
fnstenv
clc
ror
dec
push
fistp
iret
sbb
dec
scas
or
fwait
mov
add
mov
pop
mov
scas
push
adc
sub
pop
add
mov
std
in
sbb
cwde
pop
pop
sbb
cmp
mov
inc
dec
cdq
jb
dec
and
dec
popa
mov
movs
rol
cld
clc
xchg
scas
retf
(bad)
cld
mov
mov
pusha
mov
ins
xchg
scas
sahf
inc
ja
sub
inc
fild
bound
cmps
shl
cwde
fidivr
push
cwde
movs
or
pusha
xchg
pushf
inc
rcr
imul
jl
shl
dec
ret
test
cmp
push
and
and
mov
inc
jae
sub
jne
aad
xor
xor
fidivr
int3
sahf
jl
or
loopne
sub
adc
icebp
loop
jge
push
jmp
or
test
sub
bound
dec
xchg
pop
or
dec
push
push
jbe
(bad)
jns
fbld
mov
dec
mov
pushf
inc
lds
jmp
xor
push
jle
movs
mov
dec
call
dec
inc
cmp
dec
push
test
sahf
out
add
mov
test
icebp
push
xchg
dec
cmps
jno
or
fist
xchg
xchg
(bad)
repnz
(bad)
push
scas
inc
mov
(bad)
outs
push
imul
mov
push
mov
ins
mov
das
lahf
jmp
gs
loopne
lock
jmp
out
fnstenv
loop
and
sbb
push
ja
adc
js
inc
xchg
shr
push
pop
bound
fisttp
adc
jnp
sub
push
sbb
iret
test
sbb
mov
call
fadd
mov
add
mov
sub
and
inc
fcmovne
scas
dec
retf
jno
push
fld
dec
arpl
mov
ror
daa
in
cmp
inc
(bad)
mov
xor
cmp
mov
mov
add
cmps
ds
outs
loopne
bound
ds
push
xor
fisub
dec
ja
cwde
sti
mov
aam
xor
push
push
sub
sbb
int
lods
mov
inc
inc
push
add
jb
push
sbb
cmp
rcr
jnp
out
cmp
into
inc
cmp
test
add
int
sar
xchg
test
aad
jecxz
add
sub
scas
mov
scas
mov
or
outs
mov
mov
sbb
(bad)
fiadd
jle
jnp
ret
mov
cs
js
int3
jle
rol
jo
mov
(bad)
push
sbb
push
mov
cmp
cmp
and
or
and
add
(bad)
enter
jnp
cmc
fmul
loop
add
js
inc
xor
dec
mov
xor
jge
imul
sbb
mov
adc
sub
test
sbb
sub
xor
sbb
jecxz
pop
pmuludq
mov
data16
jno
add
mov
out
adc
and
movs
adc
add
(bad)
loope
add
cmp
fsub
addr16
push
cmps
mov
sbb
push
aaa
cld
cmp
out
pushf
in
add
jmp
pop
loopne
adc
and
jnp
push
mov
cs
add
adc
jnp
and
and
stos
dec
addr16
mov
dec
ds
ins
add
bound
test
cli
leave
xchg
into
call
jmp
bound
and
cmps
les
sub
sub
jg
test
inc
in
enter
xchg
add
or
ret
ds
ja
or
test
cmp
add
sbb
pop
pop
(bad)
push
jmp
jge
bound
fisubr
and
in
aam
add
adc
push
lock
repz
test
ja
mov
inc
push
xor
and
inc
fist
shl
aaa
fdiv
loop
(bad)
jae
and
add
dec
or
xor
sub
push
cmp
daa
jp
ficomp
sbb
jb
sub
cdq
xchg
dec
xlat
mov
test
push
aam
popa
adc
mov
nop
imul
ror
in
fimul
inc
aas
sub
pop
jo
mov
sub
and
push
pop
pop
sti
stos
hlt
idiv
mov
push
pop
and
stc
jno
out
shl
mov
add
popa
push
mov
push
jle
mov
sub
popa
cmp
pop
xchg
sub
push
add
std
add
xchg
jmp
pop
mov
test
leave
sbb
sub
jo
adc
jmp
pmulhuw
and
adc
call
cmp
push
sub
fist
or
xor
loopne
push
ret
jecxz
mov
add
outs
outs
jae
add
sbb
mov
push
repz
js
push
xchg
in
mov
mov
push
mov
aam
or
cmp
int
cs
push
push
push
enter
imul
retf
and
cmp
shl
js
pop
mov
pushf
jbe
imul
and
pusha
push
popa
in
add
xchg
sar
gs
push
xchg
jl
mov
push
mov
dec
call
xor
xchg
add
mov
jle
mov
outs
fwait
or
movs
push
or
xor
jns
sub
dec
mov
mov
cmp
jp
aam
pop
mov
dec
pop
popf
xlat
push
cmp
or
cmp
ins
sub
cmp
and
hlt
xchg
out
mov
sub
repz
dec
dec
int
mov
mov
mov
ss
clc
push
or
adc
stos
sub
inc
in
lods
cmp
lods
loop
sub
pop
jno
cmps
cld
sbb
mov
ds
cwde
inc
out
fstp
outs
mov
fsub
xchg
push
icebp
mov
dec
retf
xchg
nop
sbb
es
xchg
test
es
iret
fst
add
and
push
outs
jg
cmc
jmp
xor
adc
leave
adc
cdq
cmps
lahf
(bad)
fsub
rol
mov
dec
adc
dec
pushf
pop
arpl
or
inc
inc
enter
push
adc
and
pop
add
xor
cmp
sbb
test
rcl
adc
add
loope
sub
jg
test
sbb
mov
or
dec
mov
inc
and
jge
stos
(bad)
jg
fwait
jge
les
aad
loop
cmp
xchg
mov
add
rcr
mov
xlat
shl
or
inc
xchg
imul
mov
and
xchg
test
adc
mov
jno
enter
or
ins
paddb
ins
out
cmps
loop
push
stc
movs
jo
add
push
outs
and
mov
mov
push
jmp
jnp
cwde
and
std
hlt
sbb
icebp
inc
and
add
rcl
add
sub
sti
inc
nop
push
xor
sub
mov
fcomp
mov
mov
cmps
push
and
jmp
and
inc
cmp
pop
add
cli
push
inc
mov
call
xchg
or
jp
inc
mov
sbb
jb
cld
and
xchg
push
fcmovnbe
jno
mul
mov
clc
mov
mov
pop
and
sbb
(bad)
xchg
aam
int3
inc
cmp
ja
gs
lods
fnstenv
and
xchg
mov
push
add
hlt
or
arpl
shl
mov
movlps
movs
sub
pop
push
push
test
xor
fldcw
add
fbld
xchg
add
sahf
fs
fs
sbb
push
fsub
call
das
ret
lahf
xchg
push
stc
popa
fisub
push
inc
icebp
mov
or
sbb
ins
sbb
and
in
les
mov
push
add
movs
and
inc
cwde
scas
add
jb
pop
pop
(bad)
pop
add
fwait
lods
sub
dec
mov
mov
jns
push
xor
aad
cmp
jmp
and
rcr
icebp
dec
sbb
cmp
cmp
into
sub
std
dec
ror
mov
sti
adc
test
mov
fs
test
xor
jne
mov
outs
fistp
cmps
inc
movs
cdq
sub
and
dec
mov
inc
push
push
xlat
out
fidivr
push
mov
xor
and
inc
push
imul
inc
add
aas
or
mov
dec
jmp
or
ret
scas
ins
sbb
hlt
out
mov
push
cmps
pop
and
js
push
dec
ficomp
sub
inc
mov
mov
jo
cmps
aaa
jbe
cli
sbb
popa
cmps
or
pop
clc
xor
outs
jg
jg
sub
rcr
inc
and
sub
inc
and
enter
jmp
leave
cmp
mov
or
test
cmp
in
adc
pop
(bad)
adc
pop
jae
js
push
iret
in
daa
test
mov
xor
inc
into
sti
icebp
cmp
or
fnsave
mov
fistp
cmps
dec
mov
bound
test
or
and
into
cmp
int3
pop
cli
sti
cli
pop
sub
inc
and
jb
pop
sbb
cmp
add
xor
inc
cli
fst
push
stc
adc
sub
sbb
in
lds
push
repnz
adc
dec
(bad)
out
dec
mov
xor
loopne
pop
mov
ret
ret
lods
(bad)
loop
add
repnz
push
sub
or
into
scas
scas
pop
sub
mov
dec
inc
fiadd
jl
xchg
dec
mov
sub
jle
inc
daa
sbb
add
or
mov
pop
sbb
shl
psrld
pop
(bad)
cmp
dec
cld
sbb
gs
pusha
cmc
cmc
aaa
fcom
or
mov
shr
adc
add
add
jne
push
or
scas
pop
mov
cmp
dec
movs
mov
cdq
ret
adc
leave
hlt
(bad)
jnp
and
push
or
in
iret
or
mov
xchg
out
into
and
cli
xchg
ret
and
(bad)
mov
and
jnp
jp
push
aam
mov
das
fbstp
nop
imul
push
or
or
das
int3
jge
inc
inc
inc
(bad)
mov
pop
cs
xchg
add
stc
and
and
adc
sub
jbe
sbb
inc
into
sub
dec
ret
(bad)
fwait
adc
(bad)
jbe
lea
xchg
sub
in
pop
inc
cwde
sbb
dec
xor
mov
imul
and
movs
push
retf
push
aaa
xor
adc
pop
je
push
add
xor
pop
in
sbb
ja
inc
arpl
sbb
lahf
out
xchg
inc
mov
push
sub
ret
imul
inc
ins
repnz
push
add
cdq
clc
push
and
pop
jmp
std
sub
aas
adc
mov
and
sub
sbb
aad
pushf
jge
sub
dec
jns
les
lea
add
int
pop
and
cmp
outs
pop
fisttp
push
lahf
scas
lods
lods
jge
jne
test
stos
loopne
lea
or
in
jnp
and
(bad)
sbb
and
(bad)
(bad)
leave
xchg
bound
sbb
pop
lods
sbb
push
popa
iret
les
js
enter
outs
inc
lds
into
add
add
xchg
push
popw
clc
and
int3
or
push
sahf
jno
add
std
std
or
loop
pop
shl
xchg
lock
in
push
imul
jne
ds
sbb
psraw
sub
dec
cmps
mov
popf
cmp
sub
xor
sar
(bad)
div
push
dec
inc
leave
push
sbb
sub
call
stos
xchg
sub
mov
enter
leave
movlps
mov
ja
dec
inc
movs
sub
sbb
movntps
les
ret
adc
inc
fs
add
jmp
mov
pop
adc
pop
mov
mov
ins
shr
jmp
pop
inc
pop
xor
sub
pop
pusha
sub
pop
cmps
imul
stc
clc
shl
or
push
loope
add
in
hlt
sbb
jmp
std
jp
jnp
sub
xchg
cmps
inc
pop
ja
cwde
addr16
in
outs
cmp
push
out
je
(bad)
sub
les
sub
shl
les
sti
movs
mov
push
add
sub
call
xchg
and
shl
adc
shl
shl
sar
(bad)
out
xchg
sbb
repz
mov
mov
imul
pop
xchg
cmp
in
mov
jmp
add
fidivr
lods
scas
mov
aaa
(bad)
fstp
lahf
pop
cs
adc
enter
in
push
cmps
loop
dec
cmp
cwde
add
ds
pop
push
or
adc
call
aas
dec
jl
mov
sahf
add
lds
pop
sbb
cli
cli
sub
je
jnp
push
dec
sbb
sbb
mov
mov
jne
shl
add
jo
inc
loop
adc
add
xor
rol
lock
inc
or
adc
adc
mov
in
test
ret
jns
dec
nop
in
(bad)
mov
xor
push
mov
das
push
xor
cmp
xchg
lea
add
dec
add
or
mov
test
or
jae
push
arpl
cdq
clc
call
std
jb
(bad)
jmp
add
adc
cmc
or
add
xchg
pop
movs
xchg
xchg
(bad)
lods
fbld
add
xchg
icebp
fdiv
xlat
add
movs
add
(bad)
xor
in
sbb
pusha
or
pop
not
sub
push
out
jnp
ss
add
cmp
test
cmp
xchg
pop
pmulhw
xchg
cmp
mov
mov
retf
stos
cmp
xor
pop
add
push
and
cmp
add
add
popa
and
inc
or
inc
xlat
into
push
cmp
test
iret
inc
sbb
xor
adc
sub
repnz
mov
btr
outs
(bad)
daa
xchg
(bad)
mov
popa
shl
icebp
mov
ret
xchg
sbb
sub
mov
jp
fmul
pusha
add
mov
cdq
push
mov
pop
mov
les
gs
mov
mov
adc
dec
sbb
test
dec
mov
or
xchg
mov
xchg
in
cld
retf
xbegin
outs
es
or
in
imul
pop
adc
fimul
or
int
add
push
fnstcw
mov
sub
pop
mov
das
add
dec
inc
jp
arpl
add
pop
cmp
mov
es
push
push
rcr
xchg
mov
push
xchg
mov
(bad)
outs
fnsave
(bad)
hlt
push
push
nop
pop
daa
fcomp
jno
pop
outs
stc
retf
dec
add
mov
mov
scas
aad
adc
inc
retf
xor
sub
and
adc
fwait
cs
sbb
adc
sar
add
test
out
icebp
adc
jle
jns
xchg
jg
and
pop
daa
(bad)
pop
mov
stos
cdq
jb
jno
iret
sub
cmps
adc
adc
xchg
dec
add
adc
test
test
push
or
enter
icebp
sbb
sub
add
ret
clc
or
pop
push
stc
mov
mov
ret
xchg
dec
sub
push
cmc
mov
cld
add
je
shr
std
jp
ffree
lahf
push
mov
inc
mov
and
jo
loop
adc
and
addr16
mov
inc
adc
repz
jl
jns
push
jne
icebp
push
cli
nop
or
ja
repnz
cmp
dec
xor
or
(bad)
in
jle
(bad)
into
popf
mov
daa
mov
jmp
clc
mov
adc
inc
stos
mov
sub
or
ds
dec
mov
rcl
push
(bad)
xchg
pop
repnz
adc
adc
inc
inc
and
xor
stc
xor
push
jne
in
movs
push
dec
lods
stos
mov
push
dec
int
jbe
mov
adc
adc
add
fdiv
dec
sub
inc
adc
rol
cmps
fistp
fistp
test
ret
stos
add
std
add
ds
gs
inc
movs
nop
clc
call
jl
cdq
inc
pop
pop
lds
dec
pushf
jmp
pop
mov
sbb
mov
movs
data16
sub
jmp
clc
mov
add
inc
add
pusha
pop
and
ror
sub
add
xchg
push
into
add
sub
dec
bound
shl
mov
movs
dec
psrad
add
psrad
inc
(bad)
add
jb
jo
mov
mov
mov
mov
aam
das
adc
aas
pop
push
pusha
lea
mov
inc
mov
repz
pop
pop
cmp
mov
dec
movaps
mov
cmp
into
call
mov
xchg
push
inc
ret
sbb
ds
pop
stc
mov
cld
(bad)
inc
cwde
clc
push
jns
pushf
mov
sbb
out
pop
xchg
and
sub
or
test
mov
push
push
in
frstor
rcpps
xchg
cmp
jg
inc
sub
je
push
out
std
cwde
(bad)
xlat
inc
fstp
add
and
es
sbb
ss
or
cwde
mov
sahf
inc
or
je
adc
ret
push
mov
mov
cwde
scas
push
es
mov
inc
(bad)
out
xchg
in
fist
inc
mov
std
and
lahf
jmp
jmp
mov
sub
daa
and
pop
ret
stc
lock
sbb
inc
add
sbb
call
mov
xchg
sbb
jne
dec
push
push
jns
dec
adc
cld
xor
scas
ror
test
je
lods
repnz
and
cmp
int3
sub
adc
retf
push
inc
push
xchg
lds
les
mov
cmp
cli
movs
in
loope
out
pop
mov
(bad)
pop
or
ins
xchg
repnz
pusha
and
ror
inc
mov
pop
jle
fsubp
adc
icebp
test
add
or
cdq
hlt
mov
jl
mov
retf
add
push
enter
mov
push
sbb
das
es
add
sbb
(bad)
ds
arpl
aas
fs
rol
mov
stc
addr16
pop
retf
sub
pop
cwde
jbe
icebp
jns
(bad)
pop
and
jbe
in
mov
cmc
adc
add
ds
stc
cmp
cmp
cmp
addr16
hlt
cmp
add
cdq
inc
inc
es
dec
repnz
iret
les
hlt
out
icebp
jne
in
and
pop
jne
hlt
adc
add
sub
cmp
inc
and
add
mov
sub
or
shl
test
loopne
shl
jl
xor
icebp
cmc
adc
jle
clc
push
sbb
mov
scas
scas
add
pop
mov
les
(bad)
in
jo
inc
imul
rol
and
retf
pop
retf
test
jl
sub
imul
jne
pusha
mov
jbe
push
add
add
and
pop
add
outs
in
sahf
sbb
inc
jl
push
mul
adc
add
dec
retf
jbe
xor
(bad)
call
gs
fs
sub
cmp
mov
inc
dec
mov
lea
retf
push
push
daa
xor
inc
adc
jle
mov
and
or
push
xchg
retf
lds
loopne
mov
das
sbb
aam
xchg
mov
(bad)
retf
mov
xchg
pusha
dec
pop
rcl
sub
loope
sbb
mov
movs
repnz
inc
ror
xchg
sbb
mov
jge
xchg
outs
adc
inc
jg
and
mov
push
add
cmp
ror
add
or
mov
jne
pushf
cmp
lds
repnz
sub
(bad)
push
jp
xor
sub
mov
mov
and
push
in
or
add
sub
sub
add
cmps
ds
repz
inc
test
test
mov
sti
push
movs
scas
add
cmps
xchg
aaa
or
sub
unpcklps
into
sub
addr16
lahf
int3
jl
mov
add
push
xchg
in
stos
jb
add
and
adc
js
adc
or
enter
pop
(bad)
call
mov
jl
leave
mov
mov
call
es
fisub
add
add
ja
in
cmp
cmps
fmul
nop
pop
pop
push
mov
mov
xchg
outs
adc
jecxz
add
xchg
xchg
jmp
js
inc
sub
sub
push
adc
iret
add
push
and
mov
sbb
sub
xchg
clc
fs
dec
mov
ja
xchg
xor
pop
pop
ret
mov
xor
je
push
sbb
scas
add
mov
popf
test
inc
cld
cmp
mov
(bad)
scas
dec
pop
add
or
int3
es
jno
add
js
cdq
out
adc
adc
jmp
retf
je
jg
mov
lods
mov
or
add
xor
ret
adc
xchg
outs
xchg
and
mov
aam
sbb
mov
dec
adc
test
xor
pusha
sub
mov
xor
mov
push
jns
shl
jns
outs
mov
or
(bad)
push
jmp
push
mov
and
mov
ds
or
addr16
cdq
repz
icebp
jns
dec
(bad)
call
stos
push
loop
mov
test
adc
mov
mov
mov
and
xor
mov
lods
adc
mov
cwde
push
inc
nop
lahf
add
iret
cdq
push
add
in
mov
and
rcr
xchg
add
aas
daa
test
xchg
fmul
inc
xor
cmp
pusha
inc
inc
jb
push
call
xor
pop
push
stc
lods
dec
lea
inc
dec
sti
addr16
lods
and
pop
call
loop
add
push
jl
mov
jnp
out
cmp
add
cld
cwde
dec
xchg
inc
out
mov
jecxz
stos
clc
(bad)
lahf
xchg
add
dec
push
push
mov
rcr
xor
test
xchg
jmp
frstor
pop
in
ins
stc
inc
sub
jnp
or
cmps
fcom
jmp
sub
fxtract
stc
push
popa
add
sar
push
push
outs
aas
dec
inc
mov
mov
retf
mov
leave
in
dec
movs
push
popf
inc
mov
enter
cmc
pop
in
stc
add
push
add
retf
cli
fild
test
xor
push
add
push
fld
or
adc
pop
dec
sbb
pop
inc
out
cmp
push
cli
rol
mov
std
std
popf
adc
jmp
sub
dec
je
aas
sub
push
add
mov
lods
gs
loopne
stc
ret
jae
sahf
add
jge
add
rcr
fyl2xp1
frstor
add
xor
stc
fisttp
and
sbb
sub
stos
inc
icebp
adc
jmp
dec
pushf
clc
ss
mov
arpl
push
add
ins
sbb
in
add
sub
push
in
fs
mov
add
popa
push
mov
mov
(bad)
sbb
add
add
push
add
into
cmp
cmp
ss
popa
stos
xor
(bad)
mov
mov
adc
cli
cld
mov
mov
in
fdivrp
inc
and
pop
mov
push
pusha
dec
popa
jnp
cmp
cmp
pop
add
out
xchg
jge
sahf
dec
cmp
sub
jl
leave
ret
or
mov
or
inc
movs
mov
mov
pop
push
push
mov
sub
clc
sub
add
xchg
jbe
in
ss
cwde
or
clc
pushf
mov
out
shr
std
mov
mov
sbb
cmps
call
mov
cmp
jmp
xchg
daa
lahf
mov
bound
in
mov
lods
and
int
lds
cmp
ins
push
add
push
add
push
xchg
cmp
mov
dec
add
sub
loope
outs
mov
dec
outs
mov
clc
and
push
and
int3
xchg
call
and
dec
and
sub
push
mov
mov
jmp
jns
mov
push
(bad)
out
fnsave
cmc
jne
sub
je
sbb
inc
dec
scas
pop
add
test
inc
pop
pusha
cs
popa
fld
or
nop
call
mov
xchg
push
test
sub
loopne
jnp
call
or
loopne
sub
push
and
fld
cs
leave
out
sub
add
pop
or
or
pop
add
ins
test
mov
lock
in
xchg
pop
aam
aad
div
idiv
dec
sub
movs
out
pop
daa
cmp
mov
in
jmp
stc
cmp
xchg
sbb
mov
idiv
iret
imul
mov
pop
lock
add
push
or
mov
arpl
int
adc
lock
icebp
xchg
arpl
dec
jle
scas
sub
sub
in
and
pop
shr
lahf
xlat
fdivr
mov
mov
mov
xlat
xchg
cdq
mov
mov
or
sahf
mov
xchg
adc
cmp
mov
lods
add
mov
add
mov
movs
xchg
add
add
dec
cmp
pop
and
jnp
ret
pop
nop
inc
push
and
loop
movs
xlat
mov
test
out
add
and
js
add
lods
add
xor
jmp
das
sub
loopne
sub
int3
cld
dec
ins
sub
pop
jnp
(bad)
js
mov
pop
lods
cmp
mov
cmp
inc
not
adc
loopne
add
pop
adc
xor
sub
mov
jae
pop
popa
push
add
sub
pop
or
xor
pop
jnp
mov
pop
jnp
cmps
sbb
pop
rol
addr16
xchg
add
clc
jle
sbb
jg
sbb
pop
aas
dec
inc
stos
sub
pop
mov
xor
mov
pusha
sub
sbb
mov
mov
sub
xor
lahf
dec
out
es
call
shl
ja
jno
fst
or
add
dec
dec
pop
orps
xchg
mov
lock
cwde
inc
mov
stos
stos
stos
ja
fidivr
in
adc
(bad)
sahf
mov
data16
js
inc
add
mov
sbb
fcmovu
dec
dec
and
cmp
xor
js
inc
jge
arpl
dec
cmp
ins
(bad)
retf
movs
addr16
dec
iret
jle
mov
xor
js
fs
scas
cmc
add
fucomip
aas
stos
lods
movs
in
fidiv
repz
push
add
push
popa
hlt
out
fcomi
sbb
xchg
daa
rcpps
out
mov
pop
popf
clc
and
mov
push
jmp
cwde
jmp
pop
and
push
lods
dec
push
loope
add
dec
jge
or
cli
scas
scas
fbstp
jno
in
es
aas
sbb
lahf
pop
cld
cmp
pop
dec
add
loopne
or
inc
fsub
add
ds
pop
or
mov
rcl
pop
pop
adc
pop
inc
push
push
ins
pusha
jo
jmp
inc
push
dec
jp
ds
pushf
dec
scas
xchg
lahf
dec
iret
les
jmp
int3
lahf
xchg
movs
xlat
loope
adc
cs
fdivr
into
jo
int
mov
scas
test
and
and
pop
fisttp
lods
stos
stos
jmp
inc
xor
jnp
cmc
(bad)
push
push
push
data16
js
adc
push
mov
mov
mov
das
dec
mov
xchg
dec
into
push
pusha
popf
add
fstp
mov
repnz
jl
mov
pop
xor
js
and
cmp
cmp
adc
je
out
leave
mov
mov
rcl
adc
leave
pop
mov
(bad)
xlat
dec
into
movs
xlat
leave
scas
mov
mov
push
jno
xlat
loope
xor
add
es
and
stos
cdq
cld
add
add
pop
and
push
(bad)
mov
mov
outs
jo
push
popa
mov
test
cmp
adc
les
inc
cmp
add
shl
pop
fs
jae
rcr
repz
fidivr
or
aad
scas
adc
and
icebp
jns
iret
int3
lahf
and
add
add
and
jns
int
inc
ret
adc
shl
in
add
inc
inc
jg
addr16
cmc
ret
mov
mov
adc
xor
lock
in
jns
sar
cmc
iret
jmp
dec
lock
xchg
outs
ins
pop
popf
adc
mov
fild
loope
adc
mov
cmp
jg
lock
aam
stc
add
es
sub
stc
sbb
sbb
push
pushf
adc
pop
mov
dec
mov
jl
xchg
ss
out
pop
test
push
lahf
dec
out
cdq
stc
jns
cmps
add
mov
inc
cmp
cmps
fist
pop
into
enter
cmp
sbb
cmp
jmp
pop
fnstenv
lahf
dec
iret
retf
repz
add
and
add
outs
or
inc
xchg
sub
jb
iret
xor
call
pop
pushf
push
push
pop
lahf
lods
push
push
(bad)
fnstcw
mov
bound
xchg
(bad)
cmp
fidivr
jle
loope
sbb
add
pop
sbb
pop
imul
inc
mov
neg
loopne
mov
and
xlat
sahf
mov
loop
jmp
in
fsub
(bad)
xlat
fidivr
iret
and
ret
ror
sub
cld
jmp
mov
dec
pop
movs
mov
test
scas
out
ds
lock
dec
push
dec
jl
fisttp
div
stc
cdq
clc
jp
out
cdq
stc
inc
and
and
mov
mov
push
hlt
imul
add
enter
pop
ins
enter
int3
not
in
fnsave
xor
cwde
or
add
(bad)
clc
(bad)
xor
fxch
neg
and
push
add
test
lock
icebp
inc
je
into
cmp
hlt
cmp
icebp
clc
xchg
cdq
xor
xor
add
ins
mov
xchg
ins
fistp
jns
les
xor
jne
ret
iret
imul
and
loopne
cmp
repz
mov
jno
stc
repz
adc
and
xchg
das
xchg
and
adc
cmp
or
jmp
ja
pop
ret
gs
adc
xor
or
or
pop
loope
and
hlt
mov
mov
in
rol
adc
fcom
and
clc
cld
(bad)
pop
jmp
ins
clc
sbb
cwde
sar
jne
out
shl
outs
icebp
cmp
sub
and
add
and
push
jg
fcmovnbe
ror
icebp
push
and
jmp
cmp
pop
outs
jo
out
es
jmp
loop
and
add
add
stos
femms
out
add
mov
lods
cli
ret
cmp
or
(bad)
pop
mov
mov
jnp
in
sti
inc
inc
inc
xchg
ret
jge
loop
mov
add
adc
pushf
iret
mov
jb
or
and
cmps
jb
(bad)
add
mov
imul
inc
sub
cmp
jae
lahf
shl
jmp
loopne
and
repz
add
inc
and
jne
pop
xor
outs
sub
test
sbb
pusha
adc
lds
jnp
jb
jo
pop
repnz
cld
xor
in
sub
mov
lods
or
xchg
shl
jp
data16
add
and
jl
sbb
mov
bound
mov
retf
scas
mov
mov
xor
pusha
jbe
dec
cmp
or
neg
cmp
or
dec
loop
int3
daa
jbe
fnstsw
lds
jmp
cmps
out
pop
out
(bad)
xor
xchg
and
sbb
ror
sub
mov
push
cmps
mov
push
pop
xlat
aaa
xor
jbe
ja
fnstsw
(bad)
xor
push
mov
mov
cmps
add
pushf
call
adc
pop
rol
pop
and
dec
xchg
pusha
rol
test
(bad)
push
push
mov
mov
fs
xchg
cdq
pop
mov
fstp
rcr
icebp
inc
push
jbe
loop
cmp
ret
ds
int3
lahf
ret
lock
in
or
cs
add
shr
inc
sub
fisubr
cmps
jl
push
(bad)
cli
dec
and
(bad)
mov
sub
call
sahf
mov
sub
push
js
mov
rcl
imul
sub
fstp
js
mov
test
xchg
mov
sbb
loop
jmp
push
ret
jmp
pop
add
adc
imul
add
add
ror
inc
pop
adc
(bad)
out
push
test
ds
xor
sub
add
cmp
and
mov
jno
add
mov
xchg
add
out
cdq
stc
push
cmp
push
mov
sub
out
adc
les
or
push
add
inc
fsub
fwait
clc
add
and
push
add
push
add
mov
mov
sub
out
enter
xchg
ds
or
cld
(bad)
ss
data16
scas
mov
inc
ret
in
pop
or
jp
add
aas
xchg
and
int
sbb
int3
div
es
push
ds
rcl
out
mov
push
es
hlt
repnz
cmp
jne
jnp
div
es
push
mov
ret
loopne
add
push
cmp
lock
add
push
cmp
lock
add
push
cmp
cmp
js
sti
inc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
add
mov
add
add
adc
add
add
add
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
inc
inc
add
add
and
sub
add
add
add
or
add
add
add
add
add
push
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
loop
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
mov
add
add
add
add
add
add
bound
xor
add
cmp
or
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
push
add
outs
add
add
jns
and
dec
add
add
add
adc
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
add
jns
dec
add
jae
je
popa
add
add
jb
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
sub
xor
sub
xor
sub
xor
add
inc
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
jo
outs
add
add
jns
dec
add
jae
je
popa
add
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
xor
xor
xor
add
and
push
add
outs
add
add
jns
and
dec
add
add
add
adc
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
outs
add
add
jns
dec
add
jae
je
popa
add
add
jb
add
js
add
add
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
push
add
outs
add
add
jns
add
mov
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
aaa
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
mov
aas
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
and
jb
imul
xor
xor
xor
or
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
ins
gs
je
data16
outs
jae
popa
ins
ins
gs
or
and
gs
xor
and
ds
fs
jb
jo
imul
je
data16
dec
outs
jae
popa
ins
ins
gs
das
fs
jb
jo
imul
or
and
outs
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
sub
outs
outs
ja
and
xor
sub
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
popa
xor
sub
sub
sub
sub
xor
popa
cmp
and
ds
and
and
sub
outs
outs
ja
and
xor
sub
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
ss
arpl
ss
sub
sub
sub
data16
cmp
das
ds
and
and
sub
outs
outs
ja
and
jae
popa
and
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
das
ds
and
and
sub
outs
outs
ja
and
and
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
cmp
sub
sub
sub
sub
xor
xor
ss
jge
das
ds
and
and
sub
outs
outs
ja
and
and
and
and
and
cmp
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
and
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
and
cmp
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
and
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
or
add
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
add
pop
add
mov
add
pop
add
mov
add
pop
add
mov
add
pop
add
pop
add
pop
add
mov
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
dec
inc
push
dec
xor
cs
ins
add
dec
xor
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
push
push
dec
dec
dec
cs
ins
add
dec
dec
dec
inc
push
cs
ins
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
push
gs
jo
outs
dec
gs
js
add
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
je
je
arpl
bound
arpl
inc
outs
inc
jb
popa
je
inc
jne
add
push
push
js
arpl
gs
add
add
je
inc
add
add
jb
jne
jb
push
popa
ins
jne
inc
add
dec
outs
je
jb
gs
jo
outs
inc
add
add
add
cmp
sub
pop
mov
cli
stos
xchg
adc
sub
lods
xor
pop
add
add
add
sbb
jne
rol
mov
shr
aad
push
jecxz
dec
dec
aad
(bad)
arpl
mov
in
call
add
add
push
in
fcomip
push
sub
push
fiadd
xchg
mov
retf
sub
cwde
leave
lahf
jns
push
jnp
test
jle
xchg
add
out
fwait
xchg
and
pop
dec
add
(bad)
cmp
mov
mov
pop
pop
dec
leave
out
adc
lahf
fmul
clc
pop
jno
adc
fbld
sub
pop
sbb
mul
(bad)
mov
adc
(bad)
imul
adc
aas
mov
cs
cmp
pop
sbb
xchg
lods
push
leave
and
mov
(bad)
(bad)
ret
sbb
lock
jg
aaa
(bad)
pop
ffree
jno
mov
lock
push
retf
fs
shr
retf
and
call
retf
sbb
jb
int
mov
and
mov
cmp
push
dec
adc
and
add
int3
arpl
and
sub
lods
pusha
aam
mov
loopne
clc
int
adc
mov
cmp
rol
in
call
leave
shl
fild
and
leave
mov
dec
nop
cli
cmps
inc
adc
cli
in
shr
in
(bad)
cmp
repnz
push
jg
hlt
test
popa
(bad)
outs
pop
pop
mov
and
loope
repnz
pop
fldz
ror
ss
sub
push
je
or
popf
out
push
xchg
mov
sub
popf
mov
sti
cmps
jne
push
and
push
jge
lds
imul
imul
inc
xchg
jmp
pop
icebp
cmp
mov
xchg
mov
scas
sub
mov
mov
dec
or
mov
popf
adc
cmps
clc
jmp
mov
push
push
mov
and
loopne
sbb
stos
adc
rcl
into
push
jp
jno
push
jg
in
or
cmp
add
push
sti
clc
sub
lods
fist
cmp
mov
pusha
popa
sbb
cdq
xchg
fadd
movs
and
gs
gs
jae
cmp
inc
adc
sub
and
in
iret
inc
pop
dec
fucomi
test
sub
shl
dec
(bad)
jmp
cmp
push
dec
shl
outs
add
push
out
retf
or
or
hlt
or
ss
add
jge
pop
jg
outs
in
data16
aad
cld
retf
xor
jo
pminsw
cmp
sub
das
nop
adc
xchg
gs
test
jp
lea
imul
and
push
outs
into
sbb
xchg
dec
sbb
or
and
xor
mov
mov
mov
xchg
movs
sti
mov
loopne
sahf
out
cmp
sbb
imul
xor
pop
xor
pop
ret
imul
call
mov
clc
imul
mov
mov
gs
add
pop
fsub
fwait
ja
imul
jg
fcmovnu
pop
fdivr
cmc
push
xor
mov
mov
sar
mov
and
fwait
cmps
sbb
aas
dec
fnsave
nop
add
mov
jp
inc
fcomp
fbstp
mov
and
or
gs
sub
add
(bad)
retf
daa
jecxz
sbb
sub
rcr
adc
dec
scas
mov
pop
icebp
in
mov
sti
dec
mov
call
cmp
scas
push
fdiv
mov
je
pop
add
or
pop
xchg
sbb
sub
shl
call
jg
cmp
inc
cwde
aas
inc
xchg
movs
xor
aas
jmp
pop
enter
inc
xor
fwait
jg
(bad)
push
mov
(bad)
cmp
stos
dec
or
and
dec
jmp
psrlw
mov
fwait
jg
pop
cmp
dec
dec
fisttp
(bad)
sbb
into
or
adc
call
push
fwait
test
sub
or
repnz
add
in
sub
scas
xchg
pop
out
lahf
inc
cwde
push
xchg
xor
outs
sub
add
(bad)
cmp
mov
pop
nop
and
mov
sbb
pop
test
jge
es
push
in
lea
inc
shl
cmp
std
mov
jmp
mov
xor
sub
xchg
sub
retf
nop
div
out
or
mov
add
jne
(bad)
scas
pop
mov
cdq
in
dec
retf
dec
xor
jno
pop
sbb
cmp
sti
xor
pushf
sub
sahf
dec
das
int3
or
dec
and
pop
js
fidiv
xor
xchg
add
mov
add
je
mov
pop
add
call
cmp
lahf
dec
pop
(bad)
aas
push
mov
jno
mov
mov
xor
test
push
dec
cmp
leave
or
pop
ins
repz
jmp
add
pop
movs
push
sub
adc
jmp
push
adc
mov
sub
int3
popf
js
pop
cmp
mov
mov
push
mov
or
inc
jmp
fxch
jno
mov
ds
shl
push
push
adc
je
ret
pop
xchg
inc
inc
cmp
rcr
mov
je
cmps
inc
add
jo
pop
out
mov
push
ret
(bad)
mov
adc
pop
xchg
cmp
push
add
loope
in
std
js
repz
gs
inc
sub
push
lahf
xchg
mov
jns
cmp
mov
shl
sbb
movs
scas
out
scas
mov
jnp
aas
mov
and
inc
inc
enter
fstp
dec
xchg
xlat
mov
mov
pop
hlt
es
ss
jmp
ins
rcr
int
xor
add
xchg
jmp
mov
stos
push
mov
inc
jmp
out
push
adc
movs
mov
loopne
xchg
fidiv
inc
ds
scas
lea
mov
jecxz
call
xor
imul
xchg
js
iret
and
mov
data16
sti
jb
hlt
lahf
std
pop
mov
adc
movs
sbb
sbb
cs
in
push
pop
mov
lods
ret
sub
mov
ret
shl
lods
fsubr
pop
iret
fild
stos
movs
test
lea
sbb
dec
retf
cmp
sub
pop
jne
aaa
ret
rcl
out
xor
daa
sub
daa
mov
cdq
sub
addr16
cli
jbe
mov
ror
repnz
loopne
test
push
scas
stos
in
jnp
pusha
or
lods
stos
ss
(bad)
in
(bad)
pushf
or
mov
sub
retf
fcmovu
mov
dec
and
loop
cmp
ret
xor
adc
sbb
jge
mov
(bad)
(bad)
pop
and
out
and
icebp
cmp
repz
ja
out
mov
sbb
cmp
jg
sub
std
inc
rcl
hlt
xchg
mov
nop
dec
add
ins
dec
xor
aaa
jmp
fnstcw
pop
adc
test
cmps
sub
loope
and
call
push
pop
mov
movs
push
inc
lds
mov
mov
or
mov
add
popa
std
je
push
stos
pop
dec
push
jmp
out
fiadd
cli
scas
fistp
xchg
fmul
cmp
ror
xor
scas
inc
dec
arpl
and
push
je
dec
out
and
pop
sbb
xchg
in
inc
rcr
adc
push
fbstp
and
add
std
mov
in
pop
push
clc
jo
aas
pop
add
or
inc
mul
pushf
bound
push
or
scas
in
mov
rcl
pop
jo
fistp
test
lods
jmp
ret
xchg
mov
sub
mov
mov
push
sbb
adc
in
push
and
retf
retf
mov
loopne
mov
fs
mov
pop
pushf
jmp
fwait
inc
xor
daa
rcl
xchg
pusha
iret
call
or
rcr
icebp
psubb
call
and
xlat
xor
pop
mov
add
or
jmp
test
push
das
push
ret
cwde
cs
call
dec
nop
aas
push
cdq
arpl
je
sbb
xchg
in
addr16
mov
pop
nop
fwait
jmp
imul
test
shl
inc
cmp
pop
or
add
repnz
jne
ss
adc
or
or
xor
sub
(bad)
cld
mov
cmc
add
nop
inc
dec
or
jecxz
add
je
stc
xor
lahf
inc
arpl
jge
repz
cmps
adc
sub
sti
stos
mov
xor
jns
test
jp
jl
cmps
cmp
fld
fdiv
dec
imul
inc
push
xor
pusha
daa
stc
push
pop
dec
lods
test
mov
(bad)
pop
add
outs
mov
and
lods
inc
fistp
xor
fidivr
lahf
pusha
push
and
mov
adc
jb
adc
mov
push
int
mov
or
mov
ins
mov
ins
outs
xchg
cmps
dec
cmp
(bad)
dec
sbb
aas
(bad)
cdq
adc
pop
jecxz
cmps
mov
mov
mul
je
in
lahf
push
shr
mov
movs
lods
or
adc
je
pop
push
and
call
(bad)
jg
aad
repnz
jb
or
sbb
call
adc
mov
sub
ficom
lods
mov
gs
fistp
lods
inc
gs
dec
add
pushf
jns
aad
out
push
loopne
sahf
nop
test
mov
ss
shl
dec
sub
bound
cmps
mov
in
sar
iret
(bad)
shl
mov
loopne
ds
xor
test
dec
outs
das
jno
aas
icebp
leave
shl
daa
adc
jno
and
mov
pushf
lahf
fwait
xchg
push
ins
stos
sub
cmp
xchg
cmp
pop
arpl
mov
fs
jle
dec
sbb
outs
and
nop
ja
sub
fwait
in
das
pusha
not
mov
js
out
int3
or
sbb
push
adc
div
(bad)
int
cmc
pop
or
outs
pop
sub
fidiv
cmp
mov
test
ss
sbb
lods
cmp
or
jmp
ins
loop
out
lods
(bad)
(bad)
stc
sbb
dec
and
test
fstp
cmc
mov
jl
xor
cdq
ins
cli
pop
push
inc
lahf
arpl
(bad)
retf
fs
push
push
sbb
xchg
xor
adc
repz
xchg
fwait
repz
aad
mov
in
ret
push
pop
daa
scas
adc
outs
mov
push
nop
fs
nop
out
out
bound
imul
loope
outs
cmp
mov
lea
adc
out
scas
jle
mov
jle
(bad)
into
(bad)
dec
out
daa
inc
pop
fucomip
xor
shl
lods
loope
cli
int
sub
sub
sahf
mov
and
sbb
mov
fld
adc
xor
sub
ret
sbb
sub
dec
push
leave
xor
or
loope
in
pop
adc
icebp
dec
(bad)
adc
jge
pop
loopne
add
pushf
mov
std
cdq
es
call
iret
sub
jmp
sar
(bad)
call
push
fwait
push
out
test
cmps
and
test
mov
clc
adc
bound
jbe
sahf
lds
fwait
mov
scas
lea
sbb
mov
iret
test
ror
inc
fstp
mov
rol
jp
pop
fwait
dec
xchg
push
(bad)
jl
test
in
jmp
push
pop
inc
xor
and
into
jne
pop
jle
pop
and
nop
in
es
aaa
popa
cwde
cmps
xchg
sbb
mov
xor
jle
shl
mov
ret
adc
mov
int3
mov
cs
(bad)
lods
call
shl
dec
or
ror
mov
inc
pop
out
ss
movs
in
aam
or
inc
jle
test
out
test
mov
enter
imul
idiv
call
push
daa
xchg
mov
retf
cmp
or
xchg
shr
leave
movs
xchg
or
lds
movs
rcr
or
xor
inc
fcomp
mov
pop
loopne
pop
cwde
scas
cmp
and
mov
pop
loop
lea
xchg
fsubr
push
push
mov
jge
mov
das
and
mov
dec
or
push
dec
test
mov
les
dec
into
adc
out
jne
inc
not
xchg
cs
std
inc
shl
sbb
out
dec
loope
clc
lods
jmp
imul
popa
movs
out
sub
push
call
ins
mov
mov
int
jae
xchg
out
fcmovnu
jb
icebp
mov
addr16
or
dec
xchg
js
jb
in
adc
xchg
in
sub
retf
cmps
loop
sub
dec
add
xchg
loopne
test
mov
movs
sbb
jmp
ret
shl
retf
push
imul
inc
or
inc
jns
fist
mov
pop
es
adc
and
jge
mov
sub
(bad)
cmc
add
mov
mov
add
inc
push
test
add
mov
xor
cmp
ret
imul
and
inc
inc
pop
les
xchg
ss
pop
add
mov
or
push
lods
pushf
or
mov
es
push
(bad)
push
scas
repz
fdiv
cmp
adc
sar
pop
sub
retf
stos
ret
rcr
dec
sub
add
call
push
push
mov
mov
dec
outs
xchg
int
jb
call
stos
fcom
pop
cdq
fadd
jle
inc
adc
jnp
add
out
adc
shl
pop
mov
sti
in
fst
push
sbb
cli
dec
cld
int3
inc
and
pop
cmp
rol
or
out
repnz
mov
nop
test
push
int3
cwde
arpl
retf
stc
idiv
out
idiv
push
add
mov
repnz
push
xor
sub
xchg
leave
stc
cs
pushf
mov
inc
jno
jne
gs
push
mov
stc
(bad)
mov
or
xor
idiv
in
jge
xlat
out
dec
sar
jle
cwde
fstp
push
lahf
int
dec
lods
push
add
retf
repz
push
retf
and
push
ss
fnstcw
lods
push
(bad)
lahf
mov
xchg
adc
rol
cdq
and
mov
mov
scas
xor
inc
test
push
fcom
push
inc
shl
fidiv
lock
fnstsw
mov
push
je
push
sti
jo
mov
xor
adc
xor
xor
jecxz
movs
pusha
xchg
lods
lods
int3
pop
push
pop
pop
pusha
das
iret
rcr
imul
or
inc
and
fdivr
inc
sub
retf
mov
and
call
xchg
leave
add
mov
imul
fwait
jle
jge
fs
out
inc
push
dec
pusha
pop
and
jmp
pop
(bad)
dec
push
in
fbstp
enter
pop
jb
inc
std
daa
pop
dec
xchg
rol
dec
popa
in
add
ins
div
adc
movs
adc
ins
jo
add
cdq
scas
cmp
(bad)
push
jp
(bad)
jbe
xchg
ins
aas
sbb
fdiv
mov
or
xor
push
jae
and
fwait
lock
lock
and
icebp
jle
out
out
xor
cmps
cmovg
push
stos
lock
push
imul
rol
mov
ret
jno
mov
add
mov
mov
ja
add
pop
inc
jmp
push
inc
mov
xor
std
xchg
retf
neg
xchg
sub
push
out
aad
in
and
int
sbb
cld
sbb
jne
idiv
dec
int3
push
test
cs
cmps
sub
jg
clc
push
sub
dec
sub
mov
inc
mov
clc
mov
jae
xchg
shl
mov
loopne
lock
jmp
dec
test
cmc
test
push
pop
call
pop
stc
inc
jg
cmp
push
jg
add
cdq
cmp
jmp
div
dec
out
fcomp
sub
mov
call
pop
movs
cwde
inc
dec
xor
movs
push
test
jecxz
dec
fist
into
cmp
jb
sub
xchg
adc
pop
xchg
xchg
lock
leave
and
xor
add
xor
rol
out
or
and
sbb
mov
bound
push
add
dec
aas
mov
leave
sets
movs
or
mov
push
pusha
add
scas
iret
push
rcl
stos
movs
sbb
inc
sbb
inc
repz
xchg
repz
jbe
jmp
sub
cmp
(bad)
data16
hlt
xchg
call
daa
cmp
push
(bad)
push
shr
or
(bad)
xchg
shr
add
sbb
scas
lock
pop
and
dec
mov
cdq
test
ror
cmc
push
cmps
mov
push
adc
cs
data16
out
jge
dec
push
jmp
jo
xchg
int
fwait
push
fld
jge
rol
adc
inc
mov
int3
xchg
fdivp
pop
inc
xor
ficom
pop
outs
repz
clc
rcr
neg
sbb
add
sbb
mov
jnp
mov
jge
in
push
cld
dec
scas
std
sub
cmp
push
add
lds
stos
leave
mov
dec
adc
pop
shr
inc
inc
mov
popf
call
lock
push
arpl
ror
adc
and
jb
inc
test
fidivr
js
std
adc
jno
cmp
sub
nop
shl
outs
popa
add
outs
pop
mov
mov
jmp
sbb
adc
lods
xchg
dec
push
jb
mov
call
add
adc
mov
pop
push
stos
es
push
fisub
out
ret
mov
test
mov
xchg
repz
psadbw
lock
in
xchg
jne
xchg
cmp
aaa
pusha
jnp
sub
in
mov
jbe
popf
cmp
int3
xchg
(bad)
adc
jne
inc
pop
push
adc
mov
int
add
xchg
pop
test
mov
mov
int3
test
rcl
je
add
aaa
mov
mov
jg
push
lds
push
cmp
xor
ins
gs
jne
mov
push
int
mov
inc
out
cmps
retf
and
mov
lds
push
lds
push
ss
out
xchg
mov
jo
in
jae
pop
jns
jmp
out
mov
cmp
cmc
retf
push
movs
bound
push
xlat
inc
add
lock
push
jle
stos
fcmovnu
pop
sbb
xchg
(bad)
mov
outs
ins
mov
jmp
rcr
cs
sbb
xor
call
xlat
enter
retf
push
leave
rol
or
rol
sub
xor
scas
rcl
jmp
or
ins
pushf
scas
push
fsubr
call
push
movs
sahf
stos
mov
pop
les
data16
ins
repnz
mov
jg
push
shl
out
retf
mov
mov
jns
scas
lods
push
add
push
mov
(bad)
icebp
mov
xchg
jb
pop
(bad)
pop
and
inc
xchg
xor
mov
sahf
loope
mov
sub
mov
ret
in
jns
test
cld
shr
sbb
push
mov
int3
pop
repnz
mov
arpl
cli
jp
sub
pop
lea
stc
jg
(bad)
fdivp
jne
pop
adc
arpl
jns
add
pop
js
pop
or
and
popa
dec
cmp
xchg
out
mov
cli
push
daa
outs
jno
inc
add
adc
xlat
out
mov
fdiv
(bad)
cmp
scas
div
cmp
sub
and
mov
jne
dec
daa
jb
pop
or
lahf
sbb
adc
pop
dec
clc
call
mov
repz
call
pop
mov
mov
jl
jno
mov
aaa
fld
push
in
pop
cmp
push
inc
mov
lahf
movs
push
pop
cmp
mov
pop
pusha
cdq
js
dec
jno
nop
mov
sub
les
cld
iret
and
loope
fisub
fs
add
or
aad
jecxz
int3
bound
cvttps2pi
(bad)
pop
add
call
int
das
and
and
lods
mov
lds
mov
dec
inc
jge
in
in
push
ret
adc
mov
aam
sbb
pop
dec
dec
jo
ins
vmwrite
sbb
jg
mov
adc
sbb
aad
push
mov
dec
fs
retf
xlat
pop
push
cmp
stos
sub
mov
(bad)
je
xor
mov
shr
cli
int
xor
jl
stos
fwait
dec
mov
ins
popf
adc
and
dec
retf
push
hlt
popa
jno
xchg
dec
fild
daa
fcomip
pushf
lds
mov
mov
mov
mov
jmp
loop
or
push
push
in
ss
retf
fiadd
sbb
pop
addr16
or
loopne
addr16
pop
rol
sbb
inc
in
adc
cld
pop
dec
sub
imul
push
icebp
fcomp
dec
push
or
mov
sub
imul
jns
cmps
xchg
retf
sub
enter
or
dec
inc
pop
xor
cld
cwde
jp
xchg
(bad)
cmc
int3
psubusb
bound
scas
cvtdq2ps
xlat
pusha
loope
fdivr
pop
cmp
aam
dec
test
popa
pop
mov
sub
jno
outs
test
dec
stc
(bad)
mov
cmp
lds
mov
and
adc
sub
pop
enter
mov
cmc
icebp
sub
and
jl
jl
stos
pop
or
out
pop
shl
psllq
dec
sub
fs
ret
sbb
or
pusha
mov
push
(bad)
enter
mov
not
pop
into
hlt
add
fcom
cmp
jnp
cld
int3
xor
sahf
ins
ror
mov
mov
bound
shl
sbb
push
xchg
mov
inc
inc
fwait
aam
push
xor
iret
ins
clc
das
mov
adc
sbb
and
jmp
sbb
push
sub
cld
addr16
ins
jbe
inc
pop
pop
pop
mov
shr
iret
fistp
add
inc
outs
push
leave
pushf
cmp
and
movs
jl
pop
jle
inc
jg
mov
in
xchg
sar
inc
shl
mov
xchg
sub
ror
enter
cld
mov
pushf
cmps
or
mov
xor
test
vsqrtss
xor
imul
sub
cld
adc
mov
sbb
and
or
jle
rcl
shr
xchg
add
inc
mov
jns
call
jmp
rcl
jb
in
push
mov
or
hlt
cmps
call
ret
mov
and
xor
ds
or
jg
int3
leave
arpl
adc
gs
inc
popa
sub
pop
sub
stc
and
leave
jnp
cmp
in
pop
push
out
lea
neg
sti
mov
and
xor
lds
push
into
loope
mov
lea
(bad)
xchg
and
out
fstp
retf
mov
hlt
sbb
jecxz
sahf
je
outs
shl
and
add
retf
out
mov
iret
add
jns
fmul
in
cmp
sahf
(bad)
sbb
xor
adc
int
out
es
sbb
and
ja
pop
inc
pop
mov
in
lea
test
retf
cdq
jmp
stos
cmp
adc
call
cli
add
pop
(bad)
xchg
in
ror
ror
add
pop
popa
adc
sahf
or
sbb
dec
div
push
imul
(bad)
mov
fnstenv
adc
loopne
pushf
adc
bound
dec
add
sbb
popf
xchg
nop
fadd
pop
pop
sahf
(bad)
sub
out
es
inc
pop
and
pop
push
sahf
mov
int
xor
mov
xchg
repz
add
mov
(bad)
push
fwait
mov
int3
in
add
push
xchg
mov
sub
outs
inc
jge
mov
cmp
cmps
(bad)
jp
cmp
jbe
fldcw
cmc
sub
dec
xor
and
shl
push
inc
fstp
test
ins
mov
jp
fidiv
pop
adc
imul
movs
pop
sub
outs
retf
xchg
movs
(bad)
stos
rcl
adc
mov
sbb
ret
push
dec
or
leave
sub
adc
xchg
dec
adc
mov
je
adc
push
iret
lds
fisub
aam
dec
cmp
mov
xor
pop
add
jns
into
mov
pop
jge
push
ror
std
or
fst
inc
jmp
mov
sub
mov
test
sub
sub
cmp
jle
shr
mov
int3
push
push
push
gs
inc
and
rcl
pop
inc
push
test
outs
mov
cld
cmp
mov
pop
(bad)
(bad)
ret
jecxz
jnp
fild
leave
mov
xchg
adc
sbb
xlat
int
push
or
(bad)
call
cs
ror
aas
sub
add
jle
jb
inc
sbb
and
xor
push
jbe
mov
dec
adc
test
cld
call
xlat
rcl
dec
inc
adc
adc
pop
sbb
out
adc
sub
dec
call
sub
neg
push
aaa
pop
pop
sub
repnz
loope
inc
out
fisub
rcl
push
or
cmp
idiv
test
mov
pop
std
mov
adc
lods
jecxz
cmp
mov
ret
nop
add
les
push
jae
repz
jg
adc
jmp
cmps
pop
sti
dec
cmps
and
and
loope
push
or
ja
jno
xchg
pop
xchg
sbb
out
jle
push
adc
call
stos
icebp
and
fld
retf
sub
xor
or
retf
cmps
xchg
arpl
pop
xlat
mov
jle
add
outs
sub
ds
add
cmps
rcl
(bad)
shr
sub
fsub
imul
xor
aad
arpl
xor
jo
int
pop
dec
loope
imul
xor
xchg
xchg
or
mov
mov
jl
xchg
mov
sar
retf
test
inc
xor
jbe
mov
jno
inc
das
and
xor
aaa
cli
jp
sub
popw
cmp
data16
fstp
cwde
ret
ss
dec
imul
jl
test
mov
in
std
mov
ret
xchg
add
push
outs
fs
lods
jge
sbb
jae
pop
push
stc
mov
sbb
add
iret
aad
add
test
(bad)
cmp
ds
jbe
mov
retf
xchg
or
cmp
lods
sbb
pop
xchg
dec
popa
aam
push
push
(bad)
aas
fild
jbe
loopne
mov
fmul
xor
div
(bad)
jmp
inc
push
pushf
scas
cmps
and
dec
(bad)
loop
cli
xlat
scas
mov
adc
jle
sar
xchg
jno
or
mov
jmp
cld
inc
out
sub
fadd
test
pop
pop
repnz
out
xchg
daa
fwait
cmps
xor
outs
mov
jp
jp
xor
ins
sbb
lods
mov
scas
cmps
je
out
jp
sub
das
sbb
jo
xlat
rcl
mov
hlt
xchg
xor
sub
mov
mov
test
cdq
ja
push
dec
and
out
retf
jbe
repnz
pop
(bad)
movs
fstp
sar
sbb
loop
jbe
ffree
shl
fcomi
(bad)
out
and
retf
sub
or
add
scas
inc
cli
mov
test
(bad)
cmp
loopne
out
lds
cmovge
inc
pop
enter
mov
or
aad
out
sbb
pop
hlt
or
out
ins
push
sbb
jl
lahf
and
out
ret
jno
imul
fldcw
fstp
ins
movs
sar
shl
jmp
cmps
sbb
pop
jle
arpl
lahf
jne
sub
cld
loope
mov
pop
rcr
aas
pop
jl
push
sub
mov
js
shl
nop
hlt
inc
pop
fist
cmp
cmp
call
pop
push
(bad)
adc
mov
movs
test
mov
fnstenv
xchg
jbe
pop
dec
out
lock
cld
movs
js
test
or
call
cmc
mov
leave
xchg
cmp
jno
sbb
xchg
pop
xor
jmp
jge
fsubp
dec
jmp
stos
xor
ror
push
stos
pop
or
cmps
mov
xor
push
mov
and
leave
popf
out
pop
aaa
aad
xchg
clc
add
inc
in
dec
jno
sbb
(bad)
push
mov
xor
jne
stos
inc
inc
inc
out
int
cs
iret
outs
lea
inc
dec
call
sar
sbb
adc
inc
aas
ret
rcl
repz
mov
jg
(bad)
cmp
lds
jmp
lock
mov
push
bound
pop
hlt
xor
jmp
in
sub
sbb
pop
movs
je
mov
jl
or
retf
and
bound
dec
sbb
into
jl
and
jb
jmp
inc
xchg
cdq
mov
xor
ficomp
inc
mov
dec
push
xlat
cmps
dec
mov
nop
xor
sti
cmp
and
iret
repnz
sbb
jnp
and
lahf
cmp
ss
cmp
shl
xor
jmp
sub
or
fld
sahf
loop
xchg
push
ret
add
and
or
pusha
add
test
(bad)
cmp
mov
fucomi
bound
frstor
ins
adc
sub
mov
mov
test
sahf
ror
jns
(bad)
add
loopne
(bad)
in
ret
mov
repz
fmul
sbb
sbb
aas
call
shl
out
xor
dec
fldcw
mov
push
mov
mov
ret
mov
xlat
mov
inc
popf
hlt
pushf
sbb
jl
mov
mov
dec
pop
lods
or
mov
mov
and
mov
lods
mov
dec
hlt
(bad)
jmp
pop
sbb
push
xlat
push
xor
adc
push
add
daa
call
imul
aas
fidiv
imul
das
sti
add
bound
and
sub
adc
inc
mov
jne
mov
imul
mov
mov
je
xchg
cs
fnstenv
into
lods
push
movs
add
out
add
aam
add
add
jg
idiv
call
popa
cmp
mov
lock
xchg
xchg
adc
pop
ins
cmps
cwde
or
pop
in
push
push
(bad)
jbe
dec
pop
cs
cmp
mov
pop
aas
retf
pusha
stos
in
push
loopne
icebp
das
jmp
mov
pop
arpl
xlat
xchg
and
add
adc
shl
jne
sub
popa
repz
mul
mov
mov
mov
or
mov
mov
jbe
ds
ss
iret
js
add
and
shl
mov
jl
and
xchg
add
jle
fs
cmp
inc
mov
push
xchg
test
mov
cmp
imul
ret
rcl
in
adc
jmp
je
mov
out
loope
push
inc
ret
dec
shl
or
call
cmp
push
cwde
adc
mov
loop
cmp
imul
test
xchg
jp
loopne
loopne
int
pop
jmp
xor
mov
add
pop
xor
shl
mov
cmc
fstp
add
pop
mov
mov
add
push
lds
push
addr16
cdq
jno
xor
pop
stc
mov
shr
mov
retf
lods
inc
xchg
clc
mov
imul
out
loope
retf
sbb
dec
fst
lods
arpl
pusha
jmp
pop
lahf
push
inc
cmp
xor
fstp
dec
push
or
fs
or
xchg
push
or
sbb
clc
mov
loope
dec
push
push
imul
xor
inc
mov
stc
adc
mov
inc
test
js
das
jbe
and
lahf
sub
aaa
sbb
xchg
push
cld
out
push
arpl
in
fld
push
xor
retf
cmps
pop
fld
mov
sub
cmc
adc
push
ins
add
iret
xchg
loop
add
jl
pop
popa
fmul
popa
inc
pop
pop
jp
int
lds
jno
rcr
cmp
fldenv
fnstcw
dec
jmp
pop
mov
cs
jmp
sbb
repnz
inc
mov
adc
movs
and
jae
es
inc
jge
xchg
push
cmps
jno
pop
mov
pop
push
mov
aas
adc
jb
fisub
lods
jmp
mov
pushf
mov
sbb
cmp
add
xchg
fsubr
into
pushf
aam
pop
rol
add
inc
cmps
jns
or
pop
cmp
sar
lahf
jb
fnstcw
inc
popa
jmp
pop
pop
cmc
and
cld
pop
scas
fisttp
adc
and
cmp
repz
ins
jo
aas
xor
stos
ds
push
outs
loopne
inc
dec
gs
pop
push
je
cli
xchg
lahf
xchg
xor
into
and
loope
mov
nop
call
lds
popf
inc
aam
adc
nop
pusha
pop
sbb
inc
outs
dec
jle
cmps
push
mov
or
pop
in
dec
jge
add
scas
mov
std
push
mov
dec
fsubr
xor
ins
push
out
pop
leave
xchg
mov
sub
ss
out
int3
add
scas
ror
das
stc
mov
rol
push
les
xor
xchg
jnp
jb
daa
out
fidiv
jae
sar
fsubr
jmp
jl
popa
test
cmp
mov
pop
mov
loopne
aad
pushf
mov
push
and
aad
loop
inc
cdq
adc
test
push
sar
(bad)
push
imul
in
aad
outs
adc
cmp
xlat
je
pop
retf
enter
mov
ins
pop
dec
in
jmp
cmp
dec
adc
sbb
popf
clc
cmp
and
fdiv
adc
ds
in
mov
mov
jae
adc
push
test
add
out
sti
clc
jae
add
test
je
(bad)
jl
push
repnz
in
rcr
mov
pop
push
jmp
xchg
arpl
push
sub
rol
in
mov
retf
es
retf
jp
mov
jle
or
pop
fs
int3
jno
retf
jp
pop
cmp
aam
aam
movlps
push
push
mov
and
add
xor
fstp
xchg
mov
fidiv
cli
sbb
cmp
or
jnp
mov
das
push
jnp
ror
in
inc
cmps
or
and
xchg
test
out
loopne
leave
mov
push
(bad)
int3
xchg
data16
retf
inc
mov
cmp
test
jge
cwde
and
shr
cs
adc
mov
mov
mov
lahf
movs
les
sub
cli
jns
mov
into
jne
adc
add
lods
(bad)
fnsave
scas
stos
retf
push
out
mov
or
jecxz
pop
mov
and
dec
lahf
sbb
cmps
int
xor
ror
repnz
(bad)
shr
fidivr
sub
dec
mov
ja
(bad)
fdiv
jmp
pop
ins
call
int
mov
outs
fisubr
in
xor
cdq
fisttp
mov
pop
cmp
pop
lock
(bad)
push
push
xor
in
fwait
push
sbb
mov
sub
stc
push
dec
mov
mov
xor
fs
or
or
adc
cdq
and
sub
push
mov
cwde
shl
loop
ins
inc
les
mov
push
addr16
dec
out
aad
fcomp
jnp
imul
inc
sub
aas
and
push
mov
mov
mov
push
mov
cmp
xor
mov
stos
fisubr
cmc
sub
inc
sub
dec
ret
ins
mov
inc
in
add
dec
in
fimul
ins
enter
fwait
xor
data16
out
inc
pusha
mov
loope
cmp
jb
jmp
pop
mov
push
stos
mov
push
fwait
retf
xchg
adc
lods
xor
test
mov
dec
xchg
xor
mov
(bad)
pop
movs
jae
outs
(bad)
movs
sub
push
sub
jmp
adc
inc
push
push
mov
retf
pop
cdq
or
jg
pop
dec
popa
dec
push
mov
sub
sbb
mov
xor
sbb
cwde
or
loop
fstenv
mov
mov
xchg
(bad)
out
lahf
mov
xchg
or
xchg
data16
push
scas
inc
mov
mov
push
xor
retf
xor
cmp
jbe
mov
and
test
jne
in
aam
idiv
cdq
pushf
mov
mov
in
addr16
enter
push
and
dec
loopne
ja
push
mov
jg
xchg
ins
sub
xor
bound
sub
cmp
dec
sub
push
adc
xchg
pop
cwde
xchg
xchg
or
mov
dec
shl
mov
lea
rcr
dec
std
sar
aaa
inc
dec
das
lds
mov
sar
out
fisttp
scas
mov
jl
xchg
xchg
jmp
aas
mov
sahf
stos
xchg
and
inc
cdq
sub
cmp
dec
and
dec
jns
cwde
pop
push
dec
fcomp
cld
xor
push
pop
or
jge
mov
jp
mul
or
iret
and
aam
pop
jno
xor
cs
sbb
cs
in
ror
mov
mov
add
pusha
scas
mov
xor
add
call
mov
sub
clc
fldcw
push
sbb
sub
sub
(bad)
ret
and
ins
push
icebp
stc
sub
sbb
std
and
cmp
push
jae
mov
push
mov
pop
mov
mov
cmp
cmc
repnz
or
jbe
pushf
xchg
sub
xchg
pop
stc
mov
data16
dec
pop
and
pop
lds
bound
xor
aad
mov
inc
cwde
fst
xchg
jbe
sar
or
rcr
pop
adc
imul
arpl
jno
call
pop
inc
in
mov
xchg
imul
pushf
daa
sub
clc
addr16
inc
dec
push
ret
loope
inc
push
jns
sub
dec
cmc
daa
fucomip
shl
mov
xchg
repz
cwde
jb
push
ds
ja
fisubr
push
adc
xchg
pop
and
sub
and
dec
cli
dec
xor
inc
xlat
or
xor
sub
pop
push
mov
mov
adc
(bad)
pop
cs
loopne
test
icebp
mov
mov
push
lea
popa
fcomp
jle
(bad)
adc
lahf
push
jb
push
je
scas
dec
test
pop
mov
cmp
outs
mov
cdq
inc
loope
test
pop
pop
mov
fistp
pusha
inc
jl
ins
add
ficomp
dec
(bad)
int3
out
or
dec
inc
in
imul
rcl
push
sbb
dec
push
call
lock
mov
pop
pop
pop
les
dec
ret
mov
mov
mov
mov
pop
rcl
or
xchg
cld
cmp
popa
cmp
add
inc
mov
adc
jbe
das
cmps
xchg
xor
fld
mov
cmp
stc
lahf
pop
gs
ins
pop
lods
mov
inc
pop
ret
scas
adc
imul
sbb
cli
lods
mov
stc
or
jbe
iret
sbb
jne
mov
daa
es
in
push
xor
inc
xchg
adc
and
inc
xlat
or
mov
sub
mov
test
pop
mov
pushf
add
js
mov
jmp
test
retf
add
fwait
(bad)
retf
inc
sbb
lock
cli
fs
pop
into
cld
retf
test
jnp
or
test
jne
jb
ret
sbb
sub
scas
pop
push
(bad)
(bad)
pop
inc
addr16
scas
fiadd
enter
push
xchg
sbb
cmp
jno
int
addr16
push
cmps
int
mov
mov
mov
push
test
inc
inc
psubusw
scas
dec
mov
dec
xchg
das
jle
mov
pop
retf
cmc
std
mov
adc
mov
pop
dec
and
jge
test
add
les
rcl
sahf
arpl
repnz
ja
xor
cmps
fs
pushf
push
adc
(bad)
inc
cmp
dec
adc
bound
shl
ds
pop
pop
(bad)
int3
fld
xchg
and
mov
sar
icebp
ficom
cmps
(bad)
cmp
test
add
pusha
add
sbb
pop
mov
inc
sub
dec
add
aad
repnz
xchg
sub
or
imul
mov
fdiv
loope
rcr
fdivr
and
xchg
mov
cli
in
or
aam
(bad)
mov
aam
call
xor
pop
inc
mov
or
adc
or
ficomp
(bad)
imul
pop
icebp
jecxz
pop
or
arpl
or
mov
sub
pushf
(bad)
aad
stos
dec
int
mov
dec
sbb
pop
movs
arpl
inc
cli
ss
sbb
pop
or
test
fmul
push
in
ret
mov
dec
ret
ss
bswap
jmp
add
sub
popf
in
sbb
mov
fs
popf
pop
inc
xor
jns
arpl
stc
lahf
enter
scas
retf
jp
scas
pop
sub
push
int
dec
add
pop
pop
std
cmp
es
jge
mov
xchg
cmps
mov
cmp
push
popa
push
xor
pop
cmc
js
xor
jmp
rcl
dec
mov
inc
call
cmp
pusha
xchg
stos
push
cdq
sub
ss
ficom
cmp
ins
adc
aas
mov
scas
fwait
fs
les
push
mov
sub
loopne
out
arpl
cmp
or
add
les
sbb
mov
mov
daa
push
inc
cmp
int3
fwait
and
dec
pop
outs
cmps
push
mov
mov
mov
mov
and
dec
pop
fwait
bound
pop
xchg
arpl
clc
add
dec
sub
jg
test
push
out
loop
and
mov
jmp
gs
imul
inc
ins
scas
mov
fwait
jge
dec
pop
adc
hlt
jle
xchg
push
ins
movs
call
xlat
ds
sub
shl
mov
shl
shl
xchg
pop
cmp
and
jne
pusha
frstor
jl
add
xchg
jne
add
xor
ror
jl
pop
ret
xchg
jae
outs
ret
mov
sub
retf
retf
out
xor
stc
ins
jns
lods
xchg
pop
mov
xor
sbb
mov
fcom
lods
xor
add
sbb
stos
mov
adc
(bad)
fiadd
jl
(bad)
rcr
jne
inc
push
out
pusha
cmp
mov
push
xor
sub
mov
add
arpl
cmps
ret
jno
dec
mov
pop
iret
std
fisubr
push
daa
xlat
and
jo
lahf
xor
sub
sbb
clc
xchg
ins
repnz
mov
adc
jbe
lock
lock
push
imul
leave
int3
mov
daa
int3
cwde
imul
ss
jnp
ret
(bad)
in
adc
das
es
in
into
in
pop
cmp
cmc
jmp
stos
out
ss
sahf
pop
inc
mov
xor
inc
adc
popa
idiv
repnz
das
pop
fsubr
stc
xor
sar
sub
sbb
rcl
or
jb
jns
jne
sbb
jecxz
cmp
pop
mov
iret
(bad)
lock
mov
inc
shr
mov
cld
cmps
jae
lahf
jmp
mov
dec
xor
adc
push
hlt
adc
lods
cmp
mov
mov
cli
test
leave
add
in
and
(bad)
adc
fs
lock
pushf
cmp
test
repz
(bad)
enter
arpl
jno
loope
add
(bad)
int
(bad)
mov
mov
lahf
in
mov
ss
loope
push
loop
jge
inc
mov
fwait
jp
lock
mov
mov
jmp
cmps
scas
push
fsubp
mov
add
stos
add
sbb
icebp
sbb
and
push
stos
or
dec
xchg
lods
bound
xor
and
popf
push
mov
(bad)
cmp
jecxz
fxch
cli
out
dec
push
adc
popa
adc
cmp
push
test
cli
mov
retf
cmc
loopne
cmps
pop
lods
out
cmp
js
xor
adc
mov
push
jno
mov
jecxz
movs
popf
mov
push
sbb
fs
int
dec
pop
cmp
add
sub
pop
cs
inc
retf
or
je
mov
inc
push
dec
cmc
pop
inc
push
test
jg
xor
out
and
sub
jmp
fdivr
mov
clc
fnstenv
mov
nop
xor
fwait
adc
pop
imul
xchg
inc
add
adc
jg
fst
push
xchg
popa
repnz
or
xor
scas
je
cdq
cmp
push
(bad)
mov
test
stc
add
cmp
retf
xchg
jle
sbb
and
fdiv
lock
mov
fistp
jne
div
push
les
je
in
jbe
xchg
xchg
and
lea
dec
cwde
and
cmps
adc
fisub
xor
daa
inc
repnz
addr16
mov
push
in
shr
inc
push
mov
les
int
ss
das
data16
push
rol
cmps
imul
add
jnp
sub
cmp
lods
xchg
ror
xchg
jno
in
cld
or
idiv
sbb
(bad)
push
cmc
inc
fsubr
test
or
(bad)
cli
shr
mov
sub
in
inc
adc
cmp
cli
gs
aaa
mov
mov
mov
pop
sbb
mov
inc
xlat
mov
cmp
mov
mov
xchg
xlat
push
mov
test
and
test
xlat
scas
movs
loopne
and
xchg
xchg
add
pusha
jo
rcl
mov
sub
mov
lea
jle
stos
sbb
adc
xchg
es
mov
in
jg
xor
inc
stos
aad
or
mov
pushf
(bad)
(bad)
jae
push
inc
aad
mov
pop
jnp
cli
sbb
bswap
adc
pop
stos
clc
test
dec
mov
repz
outs
mov
or
push
add
mov
lods
or
xchg
dec
cmp
mov
iret
adc
scas
mov
cdq
sti
ds
dec
and
(bad)
stos
retf
xchg
pop
inc
sub
imul
cli
sbb
data16
pop
adc
adc
lds
lods
aad
xor
out
lahf
pop
call
dec
iret
shr
pop
add
aas
cdq
das
clc
in
imul
nop
retf
pop
push
cmp
mov
inc
push
lahf
push
fcmovu
mov
shl
aad
loop
mov
and
or
cli
sahf
mov
jae
popa
lods
jmp
jmp
and
outs
in
push
sar
es
in
xchg
aas
sbb
sbb
xchg
sbb
lods
adc
add
movs
popa
sub
push
xor
int3
mov
int3
inc
add
repnz
jle
in
or
dec
ret
scas
jg
(bad)
cli
mov
ret
dec
inc
cmp
jmp
xchg
fs
adc
adc
rcl
icebp
jecxz
cmp
std
push
adc
and
mov
mov
push
stc
test
cdq
inc
in
addr16
and
sbb
adc
add
int
ins
popa
mov
jbe
pop
or
fld
hlt
adc
inc
adc
mov
inc
sbb
inc
mov
xor
mov
(bad)
nop
jno
adc
pop
dec
pop
inc
adc
in
cli
dec
cli
adc
mov
cli
pop
inc
idiv
imul
stos
jmp
cs
jmp
jnp
das
cmp
stos
addr16
mov
add
pop
add
lock
cmp
cmps
xor
test
lahf
je
in
fdiv
cmp
je
outs
push
fwait
xchg
repz
lea
cmp
add
sbb
or
and
lods
loope
xlat
lds
fiadd
jo
rcr
(bad)
out
out
stos
jo
test
cmp
inc
add
movs
sahf
mov
lods
push
dec
pop
retf
mov
adc
pop
sub
adc
out
es
les
mov
mov
fidiv
inc
lods
xchg
pop
pop
lea
test
pushf
jns
mov
pop
push
repnz
xor
ss
pusha
out
in
repnz
ins
imul
jae
mov
repz
sbb
jns
push
in
xor
jmp
out
std
mov
and
cmp
(bad)
repz
test
or
sahf
pmulhuw
add
popa
inc
xchg
push
and
idiv
repz
or
add
out
dec
fcomi
nop
xchg
cmp
jl
sub
lea
les
leave
inc
pop
fbstp
add
fstp
mov
xchg
fwait
jge
mov
ss
cmp
jmp
mov
mov
aad
or
out
out
repnz
iret
cmps
cmp
cmp
cmp
cmp
or
fsubr
nop
enter
pop
(bad)
cdq
cmps
test
pop
jmp
pop
ja
pushf
(bad)
pop
aad
hlt
mov
push
sti
sbb
dec
add
pop
sahf
out
mov
dec
enter
repz
rcl
jae
lock
push
push
xor
dec
adc
push
ins
push
add
out
popa
sahf
add
push
lahf
shr
dec
cli
xor
mov
lock
movs
jo
mov
test
jmp
lea
pop
lea
inc
icebp
dec
sub
or
sbb
mov
test
dec
push
es
arpl
ret
and
push
mov
outs
adc
dec
mov
cmp
inc
(bad)
sbb
ja
retf
aam
(bad)
rcl
hlt
iret
call
add
cmp
jnp
xor
dec
and
jo
cmps
push
mov
xor
inc
mov
fnstcw
jmp
movq
inc
jle
adc
xor
stc
popf
out
not
mov
sub
cmp
out
out
test
push
xchg
inc
inc
shl
sbb
fs
stc
pop
jo
(bad)
js
or
cmps
fld
xchg
mov
popa
push
or
mov
rol
ror
stc
cdq
mov
(bad)
int
jecxz
sub
mov
cli
or
push
jns
es
fsubrp
jmp
rcl
sahf
and
out
push
inc
adc
mov
js
jle
mov
sbb
xchg
dec
sub
mov
pop
fdiv
lods
test
add
cmp
mov
(bad)
cmp
jecxz
das
cmp
dec
jae
sbb
cmps
test
add
ret
into
clc
cmps
test
xchg
ins
sub
sbb
ss
or
sbb
mov
fisub
jbe
cmp
mov
mov
mov
inc
jmp
adc
ins
jg
test
jne
out
mov
in
push
call
xchg
shl
inc
dec
push
cmps
shl
and
cmps
iret
popf
adc
movs
cmp
lock
or
fs
mov
fnstsw
or
test
dec
lods
lock
cmps
and
and
xor
cmp
pop
shl
cmp
in
(bad)
repz
sub
ins
inc
cwde
fadd
movs
mov
shl
cld
movs
inc
pop
adc
adc
outs
jmp
adc
mov
push
mov
nop
inc
shl
(bad)
xchg
nop
shl
or
ficom
mov
cli
mov
adc
cld
inc
xchg
lods
test
xchg
adc
jmp
push
push
into
sti
jbe
mov
repz
dec
jle
(bad)
sti
pusha
iret
leave
push
and
out
xchg
fidivr
or
push
ja
stos
out
popa
ret
cmp
and
dec
push
test
lds
add
icebp
cmp
xor
xlat
daa
jge
mov
fild
loop
jmp
xchg
fild
inc
out
or
inc
loop
cmp
push
repnz
or
fistp
cmp
frstor
push
pusha
jb
mov
add
(bad)
xchg
call
ret
scas
fucomi
lods
clc
in
loope
sub
pop
push
dec
pop
adc
icebp
jge
adc
in
stc
mov
dec
out
pop
(bad)
sub
push
and
inc
jbe
jmp
inc
jge
push
sub
cmps
fst
mov
aas
add
or
cmp
jle
jo
xchg
stos
adc
push
fwait
adc
push
xor
jae
loopne
lds
xor
int
mov
jmp
in
pop
neg
push
push
sub
ror
ror
mov
ins
or
xchg
sub
mov
out
loopne
(bad)
aaa
clc
fild
jns
adc
hlt
dec
or
or
aaa
loopne
out
mov
and
push
sbb
les
or
mov
aas
cdq
mov
scas
lods
xor
int
and
scas
bound
mov
mov
jmp
lds
jne
fstp
in
and
pusha
dec
iret
scas
sahf
adc
inc
mov
adc
pop
cmps
(bad)
aam
retf
jne
mov
inc
les
(bad)
daa
add
nop
int3
aaa
in
repz
xchg
inc
add
jecxz
push
push
pop
sbb
pop
ror
loop
xor
sahf
stos
pusha
fild
fcmovu
(bad)
jg
ss
daa
pop
inc
dec
add
fild
mov
xchg
test
aam
xor
bnd
lods
stos
xor
inc
int
xchg
nop
dec
adc
mov
adc
cmp
mov
sahf
jns
bound
xor
shl
aad
and
mov
aas
add
jo
pop
daa
pop
pop
mov
fmul
pop
push
retf
mov
fisttp
mov
fwait
dec
adc
clc
sti
cwde
sbb
repz
ror
xor
fnstcw
push
pop
xor
mov
pop
dec
push
int3
jnp
dec
outs
or
fild
xchg
mov
ja
call
(bad)
out
in
xchg
aam
adc
into
cmp
fcmovnb
movs
adc
add
movs
jge
mov
movs
xchg
push
clc
xlat
enter
add
sbb
je
fwait
inc
lods
xchg
and
(bad)
push
ja
ror
repz
sbb
cmc
fdivr
xor
push
cmp
cmps
cwde
data16
cmp
imul
xchg
scas
cmp
ins
je
daa
mov
and
fmul
fdivp
sub
test
imul
mov
ins
sub
jp
push
cmp
repz
iret
mov
in
outs
jnp
rcl
out
inc
fisttp
mov
add
scas
mov
pop
lock
retf
mov
push
ret
add
popa
mov
cs
icebp
adc
push
xchg
les
sbb
mov
out
cs
sbb
cmps
pusha
add
and
imul
(bad)
adc
int3
pushf
or
inc
je
xchg
das
or
xchg
cmp
(bad)
cmp
inc
xor
jns
loope
adc
(bad)
(bad)
or
pop
ds
test
call
push
adc
call
cmp
inc
mov
mov
jp
nop
or
movs
adc
pushf
pop
cdq
(bad)
out
lock
lods
cmc
pop
jle
cmp
imul
jnp
mov
inc
inc
push
cmp
pushf
sti
cdq
cmp
jbe
adc
gs
rol
and
pop
xchg
mov
xor
sbb
mov
(bad)
mov
xchg
daa
arpl
movs
add
or
sub
xchg
hlt
stos
jg
xor
jmp
lods
idiv
mov
sbb
cmp
fldenv
ficom
mov
mov
xchg
retf
je
mov
stos
test
xor
into
push
xor
xor
jg
sub
retf
inc
or
imul
test
rep
push
cmp
(bad)
les
adc
mov
test
jmp
dec
call
outs
cmp
mov
mov
stos
pop
mov
sub
pop
ds
add
add
pop
shl
mov
cwde
pop
mov
jmp
in
dec
fs
or
or
cmp
call
std
xor
jae
sbb
adc
push
push
cdq
or
jae
mov
ins
xchg
out
fnstcw
lahf
sbb
mov
pop
test
pushf
js
in
push
jecxz
push
pop
sub
and
mov
aas
pop
mov
sbb
int3
sbb
add
mov
push
scas
cld
push
add
(bad)
lods
or
(bad)
cmc
push
leave
call
(bad)
fild
lahf
pop
xchg
mov
test
mov
nop
sub
retf
xor
mov
shl
mov
or
loope
(bad)
movs
addr16
mov
pusha
shl
aam
dec
inc
mov
cmp
leave
cmps
xchg
fst
jecxz
clc
aas
push
mov
sub
adc
(bad)
in
add
sub
or
repz
add
mov
(bad)
jnp
jle
push
dec
arpl
test
xlat
ss
or
call
das
cli
pusha
shl
std
mov
stc
xor
ja
cmps
scas
inc
push
dec
adc
and
sahf
fst
fwait
push
jg
repnz
ror
stc
movs
outs
jge
add
add
sub
imul
int
xlat
ss
(bad)
add
rcr
popf
pop
rcr
jg
cmp
lods
je
dec
cmp
sub
fidivr
sub
out
imul
pop
xchg
mov
aas
mov
adc
jl
ins
mov
mov
sbb
test
scas
mov
in
xchg
test
movs
mov
mov
(bad)
sbb
(bad)
cmp
ficom
sbb
pushf
or
sbb
mov
in
xchg
push
and
pop
xchg
fdivr
and
push
or
outs
dec
push
aam
fsub
inc
ja
iret
sar
xchg
push
mov
cwde
movs
es
mov
jno
lods
int
or
sub
dec
push
jmp
mov
mov
pusha
push
xor
mov
mov
into
in
inc
out
stos
mov
add
je
jmp
hlt
xlat
call
lahf
pop
adc
js
mov
jecxz
lahf
mov
xchg
mov
sub
gs
pop
and
bound
sahf
xchg
pop
(bad)
fucomip
test
jecxz
cld
mov
mov
rcr
xchg
cmp
jle
push
shl
pop
es
hlt
xor
xor
or
in
jge
push
mov
(bad)
shr
push
xor
aad
jp
fisubr
je
repnz
sbb
sbb
inc
push
push
sub
je
jp
fldenv
int
data16
adc
fadd
add
or
xchg
mov
cdq
div
stos
adc
in
inc
lods
popa
xchg
mov
mov
mov
dec
not
mov
in
mov
and
pushf
dec
xchg
iret
mov
xor
pop
pop
xor
xchg
dec
and
mov
mov
xchg
mov
pop
mov
adc
pop
mov
mov
mov
loopne
pusha
pop
in
cmp
movs
mov
scas
push
nop
push
and
imul
scas
popf
rcr
mov
mov
xchg
cmps
jae
cmp
cli
inc
call
imul
clc
cmps
jns
mov
cmp
mov
mov
retf
mov
jmp
sar
div
or
push
pop
pop
add
xor
arpl
fisttp
xchg
fcmovne
mov
jae
and
cs
cmp
lock
or
adc
mov
cwde
inc
inc
push
cmps
(bad)
(bad)
jecxz
leave
scas
xchg
inc
mov
jo
xchg
dec
mov
jecxz
loope
pop
sbb
xlat
mov
leave
dec
jecxz
mov
dec
or
in
sub
out
or
jne
out
jg
lock
dec
mov
pop
add
mov
dec
pop
or
jecxz
jg
mov
leave
xchg
pop
or
cmp
dec
pop
in
jne
call
adc
ss
sbb
(bad)
mov
iret
call
cwde
and
repz
aam
mov
out
mov
enter
int3
inc
adc
jno
or
aam
pop
les
mov
out
mov
test
(bad)
out
dec
jno
xchg
repz
repnz
aaa
fsub
popa
or
add
push
pop
ins
daa
arpl
push
cdq
adc
stos
nop
push
repz
(bad)
aaa
cmp
inc
jl
xchg
cmp
dec
call
outs
ds
cmps
fst
adc
hlt
je
adc
xchg
ds
mov
retf
jmp
jp
pop
in
mov
fstp
mov
mov
jne
sub
in
in
fdivr
adc
pop
dec
jg
mov
sar
shr
stos
or
pop
mov
aad
xchg
or
cld
in
das
fs
jp
cmc
dec
popa
mov
inc
arpl
iret
cli
or
sub
popf
cmp
int3
and
adc
je
fisttp
push
mov
inc
and
mov
fwait
add
bswap
dec
test
ds
ret
add
xor
popa
scas
sub
loop
mov
jge
int
jg
add
cwde
dec
cmp
ss
add
fwait
aad
xlat
mov
call
and
cmp
lods
gs
xor
mov
mov
dec
pop
imul
cmps
mov
and
leave
ins
outs
jl
push
dec
jg
sub
pop
mov
and
hlt
add
in
or
lock
sbb
adc
ret
rcl
jl
pop
mov
sti
ror
xlat
test
push
jle
repnz
(bad)
cli
stos
dec
sbb
ret
imul
lods
loop
adc
xor
in
mov
cmp
hlt
and
cmc
mov
cmp
or
shl
loop
sbb
and
fdiv
xor
add
pusha
mov
and
ss
xchg
inc
mov
mov
mov
pop
xchg
xor
add
dec
push
cmp
ror
das
push
push
adc
add
lods
call
xor
cmp
mov
cmovp
push
inc
add
das
imul
out
mov
push
sti
test
aam
imul
rcr
sub
sub
and
inc
adc
add
test
ret
adc
pop
fnstcw
adc
cwde
jmp
(bad)
adc
ja
popa
(bad)
imul
mov
jne
sbb
fwait
outs
jp
mov
pop
outs
test
or
push
aas
sti
les
aaa
cli
push
clc
cmps
or
xchg
mov
push
ja
push
add
xor
stos
in
imul
jbe
sub
and
cs
mov
rol
sub
ret
push
mov
lock
mov
add
call
int3
scas
cmps
loopne
inc
xlat
int3
iret
arpl
cdq
ror
mov
jne
arpl
in
div
mov
(bad)
sti
mov
mov
or
ffreep
cmp
cmps
xor
dec
xchg
mov
push
mov
ins
adc
stos
pop
scas
ror
sbb
mov
ffree
sbb
pop
lds
fs
arpl
mov
mov
adc
mov
dec
xor
xchg
push
popf
ror
cmp
les
add
cmp
pop
pop
lods
(bad)
jmp
stc
jmp
in
xchg
retf
cmovb
cmp
mov
inc
loop
pushf
mov
leave
in
ins
or
sahf
sub
mov
push
adc
inc
jecxz
cmp
pop
mov
jb
push
rol
cmp
sbb
cmp
sbb
mov
test
ds
leave
add
sub
xlat
jnp
cdq
pop
mov
nop
sub
out
test
sub
fst
xor
pop
cmp
mov
lods
fldenv
fwait
jo
push
cwde
cmc
out
xor
mov
loopne
pop
and
popf
jmp
pop
dec
xchg
imul
test
sub
add
scas
jns
mov
dec
cmps
rcl
imul
mov
rcr
cmc
push
scas
lahf
push
lea
fild
sbb
jmp
mov
fcom
jo
xor
push
pushf
aas
sub
test
add
aam
js
sbb
mov
out
cwde
mov
jne
cmps
enter
test
in
fcom
(bad)
out
xor
inc
jmp
(bad)
repnz
sti
arpl
or
mov
sub
icebp
push
push
or
rol
test
pop
ins
cmp
into
in
inc
or
jae
push
lods
xchg
push
mov
dec
push
jo
or
jmp
jo
mov
xchg
adc
int
dec
sar
imul
xchg
ins
cld
sub
dec
stos
out
ss
mov
pextrw
int3
push
cmp
mov
(bad)
adc
or
imul
popa
mov
sbb
jmp
xchg
sar
es
pop
cmps
or
jae
fdiv
test
in
jp
ins
imul
idiv
mov
shl
shl
stc
cmps
dec
vpmadcswd
js
mov
(bad)
and
icebp
cmp
daa
dec
jae
mov
int
cmps
add
loopne
adc
cs
xor
mov
cmp
jg
jl
aad
aas
sbb
mov
xor
push
lahf
mov
in
dec
jmp
(bad)
push
add
mov
in
push
push
inc
jecxz
(bad)
cwde
jbe
(bad)
jl
imul
clts
lock
add
mov
scas
and
cli
les
sub
xor
jecxz
sahf
scas
and
xor
arpl
std
sbb
pushf
into
test
mov
arpl
dec
ret
lahf
clc
lods
shl
jecxz
fidiv
jnp
xor
test
jo
mov
sbb
inc
mov
or
sbb
in
mov
jb
aam
push
mov
xchg
mov
mov
sar
xor
stc
in
mov
adc
mov
js
sub
mov
lods
fimul
jge
mov
inc
add
dec
ret
sub
xor
pop
fsubp
outs
in
jl
mov
or
sub
jmp
rcr
je
nop
adc
jge
and
imul
imul
call
push
fistp
add
dec
or
shr
xchg
shl
sub
mov
stos
into
sub
jns
les
pop
jecxz
into
movs
es
retf
jb
icebp
in
outs
out
dec
inc
sub
pop
mov
ds
popa
call
mov
xor
jg
cwde
dec
ror
dec
xchg
mov
cmp
es
pop
outs
popa
addr16
push
and
cmp
addr16
mov
sti
addr16
sub
popa
or
outs
(bad)
mov
es
and
popf
sub
std
push
pop
retf
inc
jl
repnz
push
loop
pop
jp
xor
dec
dec
lds
xor
cwde
(bad)
out
and
mov
shr
ins
mov
mov
(bad)
xchg
cmp
iret
add
cmp
dec
push
std
or
ficomp
aas
retf
mov
mov
xchg
fwait
rol
test
pop
ins
retf
mov
inc
cmp
retf
outs
xor
jnp
and
xor
jns
jmp
jecxz
push
lods
aas
pop
sub
lds
inc
shr
ret
loopne
shld
call
add
cmp
inc
ins
out
pop
inc
iret
mov
inc
test
test
out
pop
inc
mov
xlat
inc
cmp
jne
pop
cmp
addr16
das
scas
addr16
bound
adc
sahf
jb
mov
test
scas
cs
and
aad
inc
dec
(bad)
add
mov
inc
lds
sbb
lock
scas
jo
int
pop
mov
fsub
push
pop
ja
ret
call
push
and
xor
jmp
mov
pop
jmp
mov
push
mov
les
icebp
and
mov
cmc
pop
mov
fdiv
inc
mov
shl
shr
sbb
jae
xchg
fadd
ins
or
sbb
inc
mov
rcr
(bad)
cli
aad
ret
lods
imul
aad
cmps
test
ror
jmp
dec
das
repz
outs
jb
std
jns
out
adc
ins
loope
fidivr
xchg
pushf
cmp
dec
sbb
push
cmp
fwait
lods
loope
push
inc
mov
inc
or
push
pop
push
fcom
push
aam
add
adc
lods
ss
xchg
jbe
mov
and
mov
xchg
mov
mov
mov
aam
outs
mov
cmp
and
jecxz
bound
icebp
ss
sahf
cmp
sub
mov
sbb
sbb
mov
cwde
or
pop
xor
repnz
popa
popf
xchg
loop
jmp
dec
dec
cmc
push
inc
addr16
int3
retf
mov
(bad)
int
mov
push
(bad)
loopne
pop
sbb
xor
sub
inc
pop
icebp
lock
out
xchg
add
cmp
div
(bad)
clc
pop
add
pop
jl
jmp
mov
(bad)
jecxz
enter
movs
(bad)
rol
imul
mov
xor
mov
push
mov
es
outs
sahf
jmp
sbb
cmp
cmp
push
sti
packuswb
hlt
int
or
and
lods
(bad)
jg
enter
hlt
sub
shl
ins
(bad)
dec
outs
lock
gs
shr
out
mov
into
mov
pop
and
hlt
adc
shl
call
cmps
jno
push
hlt
adc
push
cmps
xor
lds
leave
add
call
pop
into
sbb
lods
and
sti
retf
fs
or
addr16
test
(bad)
clc
repz
gs
movs
mov
mov
mov
sti
mov
iret
cmp
mov
dec
adc
ds
repnz
mov
je
and
add
and
daa
inc
iret
mov
pop
fisttp
and
adc
lds
iret
xchg
lods
in
cdq
push
inc
(bad)
push
cmp
retf
sub
push
repz
mov
movs
out
pop
cmp
jns
dec
ins
add
jge
and
mov
test
repz
std
add
jge
jne
pop
mov
push
ins
dec
loope
daa
(bad)
push
add
sub
es
mov
popa
retf
pop
or
push
push
add
(bad)
mov
je
pop
cwde
ror
xchg
aas
and
icebp
add
add
and
mov
out
mov
es
stos
stc
mov
mov
dec
push
out
(bad)
je
xor
mov
cmp
loopne
push
fs
out
(bad)
cmp
cmps
jg
push
xor
repnz
nop
jae
repz
pushf
jns
dec
lea
mul
sbb
cmp
add
lahf
xor
and
dec
jmp
sbb
enter
sub
es
push
rol
pop
repz
inc
cmp
outs
or
jl
inc
lods
in
mov
aaa
hlt
mov
mov
mov
out
xchg
cli
jae
dec
mov
cli
and
shr
int3
cmp
pop
xor
sbb
pop
jmp
lock
mov
push
inc
ins
les
icebp
push
ret
fist
dec
dec
ror
mov
xchg
pop
stos
mov
mov
test
lock
ret
xchg
jp
aaa
in
popf
int
push
lods
and
aas
add
add
cmp
icebp
loope
shl
pop
inc
movs
dec
push
jl
or
push
add
push
dec
mov
cmp
add
test
sbb
fcmove
scas
cmp
lea
push
xchg
out
and
mov
and
inc
lock
gs
jmp
hlt
lahf
adc
shl
sbb
ror
xchg
(bad)
push
movs
sub
ins
xor
xor
rcr
xchg
xor
jge
aaa
in
sbb
test
mov
or
inc
xlat
and
xor
addr16
adc
in
xchg
mov
sub
cmp
and
mov
and
out
adc
jp
xchg
outs
les
sti
jne
mov
hlt
dec
adc
mov
cdq
ss
addr16
leave
adc
hlt
(bad)
loope
dec
(bad)
jae
stos
jb
pop
imul
out
outs
nop
(bad)
sbb
sbb
shl
jnp
data16
les
or
bound
add
movs
add
mov
les
cmp
hlt
imul
ficom
xlat
cmp
imul
ret
push
push
aam
push
stos
add
jne
add
fucomi
mov
pop
add
pusha
ret
pop
mov
aam
cmc
jl
mov
popf
sub
bound
pusha
push
std
mov
jae
shr
lds
sub
jo
fidiv
or
jmp
aaa
pop
dec
inc
jmp
adc
mov
mov
sbb
inc
jno
test
xor
push
xor
fisub
mov
arpl
(bad)
mov
jae
cmp
outs
xchg
inc
outs
sbb
sti
(bad)
out
mov
xor
and
inc
neg
outs
out
pop
shr
out
jns
pop
cmp
stos
jne
ret
gs
call
inc
pop
js
sub
cli
jle
or
pop
pushw
inc
push
call
cld
aam
out
xchg
cwde
pop
mov
jecxz
(bad)
mov
mov
les
pusha
pop
cmp
add
pop
shl
stos
mov
xchg
push
aaa
leave
enter
add
in
js
jne
retf
xlat
into
fisubr
pop
or
sub
jge
cmp
scas
cmp
test
adc
xchg
cmp
scas
stos
jl
and
xchg
pop
mov
adc
sbb
pop
xchg
add
iretw
or
shl
pop
mov
(bad)
std
sbb
imul
jae
lahf
push
jae
retf
(bad)
mov
fnstcw
xchg
rol
(bad)
adc
pop
test
ud2
bound
(bad)
jle
js
xor
imul
mov
add
mov
out
outs
js
popa
in
add
dec
sbb
pop
push
and
or
(bad)
cld
pop
out
push
sbb
sbb
aam
mov
stc
cmps
xor
inc
in
popa
add
pop
ret
adc
add
test
jnp
es
xor
div
lahf
stos
pusha
adc
sub
(bad)
adc
ret
push
mov
ret
jmp
jge
xor
pop
pusha
out
fs
loope
xchg
adc
cli
(bad)
aaa
ficom
jp
popa
enter
pop
mov
and
sahf
in
pushf
inc
retf
clc
fld
daa
xor
repz
call
push
scas
dec
imul
add
mov
mov
fidiv
inc
mov
dec
sub
cmp
sbb
fwait
(bad)
cmp
stc
mov
xchg
popa
sbb
pop
(bad)
dec
loopne
inc
stc
jg
test
mov
loop
retfw
jle
retf
xchg
cwde
call
jge
lods
loope
lds
push
test
cld
mov
sbb
pop
dec
jecxz
add
mov
sub
xchg
call
nop
push
out
push
stos
and
ins
icebp
movs
pop
mov
aaa
jae
out
lods
cld
xchg
xchg
js
dec
jb
fstp
add
(bad)
sbb
or
enter
xor
in
sbb
imul
iret
jne
in
or
xchg
cli
jmp
jmp
mov
call
dec
out
jb
dec
mov
pop
stos
fmul
retf
mov
mov
in
(bad)
sub
lock
mov
shl
add
and
mov
aam
xor
mov
pop
add
xor
div
imul
inc
pop
sbb
ret
cwde
retf
sbb
xor
rol
push
cli
jge
or
sbb
lea
scas
iret
repz
or
add
pusha
in
mov
aad
jge
pop
(bad)
outs
fisub
pop
mov
in
add
cwde
jno
daa
xor
jb
pop
xchg
and
int3
sub
inc
or
lea
push
rcl
fmul
jns
lods
aad
pop
dec
test
mov
cmc
ds
(bad)
jno
xchg
not
ds
mov
ret
or
fmul
(bad)
push
outs
and
add
scas
imul
pop
ret
mov
out
mov
push
xchg
cmp
dec
stos
push
(bad)
and
or
mov
fnsave
data16
dec
icebp
mov
sahf
inc
push
loope
sti
ret
stos
imul
xchg
xor
test
stos
clc
shl
push
mov
pop
dec
(bad)
(bad)
and
fwait
movs
movs
sub
mov
sbb
loop
or
stc
stos
ret
movs
mov
push
(bad)
daa
push
aad
inc
dec
mov
lods
push
enter
inc
sub
xor
mov
add
jno
mov
movs
(bad)
nop
rcl
jbe
push
cmp
or
fdivr
push
pop
xor
pop
out
dec
scas
sti
inc
or
mov
inc
jle
push
std
push
adc
idiv
xchg
fisubr
push
lock
and
or
fwait
sub
adc
jl
mov
xchg
adc
arpl
push
mov
mov
(bad)
lahf
sbb
sub
pusha
lods
clc
mov
add
and
int
int
test
div
iret
into
mov
mov
mov
xor
test
push
dec
push
push
dec
jno
repz
in
mov
pop
iret
sti
push
inc
movs
mov
adc
imul
idiv
sahf
in
pop
cwde
loope
cmp
push
and
adc
mov
pop
sub
xor
mov
pop
imul
(bad)
push
ja
fisttp
bound
fld
outs
ret
xchg
push
adc
adc
mov
fcomi
dec
push
jle
inc
mov
pop
and
iret
push
in
jmp
out
cmp
xchg
sub
mov
or
mov
(bad)
retf
xchg
xor
push
jmp
sbb
push
xchg
js
das
mov
ins
idiv
mov
ret
dec
sub
pop
jp
outs
adc
mov
sti
stos
out
xor
arpl
imul
es
dec
fsubr
mov
adc
add
add
jns
jnp
test
arpl
sbb
xor
push
(bad)
cdq
nop
inc
mov
lock
std
(bad)
push
imul
sbb
push
or
mov
inc
icebp
inc
popa
shl
ja
das
push
ret
aas
call
dec
mov
xor
in
inc
sbb
cmps
ins
inc
cmp
int
pushf
fs
sar
jmp
cmp
js
mov
mov
je
xchg
mov
mov
xchg
test
ss
fisubr
mov
mov
call
int
or
and
add
sti
clc
lahf
mov
xchg
jnp
fsub
scas
in
xchg
pop
rcl
or
hlt
xchg
out
loope
lods
into
test
jge
mov
jns
sub
xchg
cmps
cmp
pushf
mov
push
ret
cdq
pop
aam
add
pop
mov
and
ror
and
jns
adc
aad
inc
loop
aas
pop
test
lods
ins
test
sbb
or
mov
xchg
sub
(bad)
in
mov
inc
jl
xor
cmp
(bad)
fnstenv
bound
jno
std
sbb
fwait
sub
push
hlt
mov
adc
lods
addr16
gs
push
mul
ds
arpl
es
test
cmps
sub
sub
add
js
push
ss
mov
pop
pop
push
mov
cs
and
or
dec
fbstp
test
inc
xor
fidivr
push
push
mov
jno
imul
xor
(bad)
xsha1
cmps
lea
cmps
jno
leave
loope
add
in
pusha
pop
movzx
sub
adc
cli
addr16
pop
jne
xor
push
aas
and
stos
mov
inc
enter
outs
add
repnz
jae
mov
movs
add
jmp
jmp
push
ins
dec
(bad)
mov
sbb
jge
add
xor
stc
inc
cmps
dec
pop
and
test
mov
nop
dec
xchg
mov
stos
cdq
add
sub
pop
repnz
mov
mov
and
dec
adc
xlat
fcomp
enter
scas
push
jae
gs
xchg
cmp
cmc
(bad)
stos
add
cmp
outs
call
xchg
xchg
dec
in
movs
push
in
(bad)
ds
or
dec
movs
out
jns
sub
mov
sub
sub
aam
add
test
jmp
movs
jge
movs
int
jl
iret
cmp
pop
les
lods
adc
call
fild
les
(bad)
jmp
pop
test
outs
addr16
daa
lahf
(bad)
pop
mov
mov
shr
cmps
cmps
iret
inc
add
xchg
mov
movs
test
add
ins
add
mov
into
aam
nop
fstp
ret
xchg
aaa
cmp
popf
mov
(bad)
cmp
mov
pop
scas
jae
cmp
or
clc
mov
out
aaa
dec
push
jo
mov
fdiv
pop
js
sbb
jmp
sti
ins
pop
sbb
jp
sbb
dec
xor
pop
(bad)
retf
sbb
xchg
lahf
ins
(bad)
adc
cmp
(bad)
mov
pop
loopne
xor
mov
or
movs
inc
mov
cmp
test
push
addr16
and
shl
cmc
hlt
cs
je
(bad)
clc
dec
sub
mov
or
lods
cs
ret
mov
les
in
ins
ins
xchg
sbb
out
and
gs
sbb
xchg
mov
(bad)
xor
mov
pop
xchg
dec
inc
xchg
dec
pop
xchg
div
mov
pop
test
fimul
jno
mov
mov
call
mov
mov
mov
jp
outs
jo
pop
sbb
mov
sbb
push
pop
fwait
dec
xchg
xchg
jp
xlat
sub
adc
adc
mov
ror
into
adc
ffreep
(bad)
mov
(bad)
sbb
mov
cmp
(bad)
ret
sub
mov
sahf
sub
xchg
out
popf
scas
cmps
mov
and
retf
push
xor
xor
add
or
outs
(bad)
xchg
fidivr
cwde
fwait
sbb
add
sbb
jmp
dec
add
retf
stos
jo
ds
fidiv
push
(bad)
shl
push
jp
test
mov
push
sbb
and
ins
push
popf
mov
xchg
push
push
data16
and
jmp
fdiv
sbb
cmp
and
shl
cmp
pop
jp
je
sbb
push
push
or
ror
cmps
arpl
arpl
pop
inc
pop
cwde
pop
shr
mov
pop
jmp
data16
loop
jae
cli
(bad)
mov
sti
pusha
mov
and
loop
inc
dec
add
loope
cmp
(bad)
mov
test
or
mov
sbb
loop
nop
popf
xlat
repz
push
mov
mov
xchg
mov
jle
jg
pop
sub
jle
cmp
add
and
adc
mov
loop
jp
push
fst
sbb
(bad)
clc
jp
and
inc
loop
test
test
fadd
int
outs
push
fcom
mov
jg
aaa
mov
test
aas
popa
(bad)
lods
sbb
mov
sub
mov
add
mov
xor
xor
mov
adc
pop
cmp
sbb
mov
mov
xor
call
sbb
cs
mov
or
fisttp
cld
mov
out
cmp
add
mov
mov
aam
push
cwde
loopne
mov
shr
out
dec
ret
inc
or
sub
or
inc
repz
dec
sub
mov
xchg
ins
popa
lods
xor
jmp
pop
out
pop
in
sahf
inc
fs
mov
mov
xchg
jmp
mov
sbb
jo
sahf
data16
pop
repz
scas
mov
mov
jle
cmp
mov
icebp
sub
mov
loop
dec
jmp
stc
push
(bad)
sub
loope
mov
out
fs
scas
cmp
outs
not
mov
cmps
popf
test
xchg
es
aad
test
dec
bound
mov
mov
iret
cs
cmp
and
test
xchg
jmp
mov
pop
or
cli
retfw
sub
dec
push
js
sub
pusha
adc
dec
pop
test
mov
lock
sbb
fndisi(8087
movs
shl
sub
(bad)
test
adc
inc
sub
leave
xchg
cmps
sub
(bad)
pop
adc
hlt
outs
mov
cmp
xor
mov
jbe
pop
imul
xchg
nop
jle
fdivr
sub
mov
std
xchg
jmp
sbb
aad
imul
popa
mov
and
xchg
stos
and
sub
cmp
cmps
jbe
jge
leave
cmps
jl
pop
leave
pop
adc
or
pop
adc
loope
push
mov
xchg
push
outs
ja
mov
sub
ror
sbb
outs
push
call
or
mov
add
test
add
test
fs
push
loop
inc
dec
jecxz
ficomp
retf
mov
cmp
jg
xchg
pushf
inc
inc
push
jge
gs
das
dec
out
lods
mov
xchg
sbb
test
dec
mov
mov
sub
sahf
jb
and
sbb
shl
gs
ja
shl
rcl
push
out
and
mov
inc
dec
fnsetpm(287
mov
mov
mov
mov
mov
je
shr
lahf
sbb
ret
push
sbb
dec
jno
sbb
dec
adc
jp
dec
das
test
jnp
nop
stc
xchg
in
push
ja
jae
mov
inc
xor
movs
pop
loope
repnz
stos
int
arpl
xchg
push
out
aam
sti
mov
or
and
mov
es
daa
fsub
push
cmp
enter
mov
mov
adc
mov
fisttp
clc
push
notrack
adc
ds
mov
es
mov
aam
xchg
idiv
cmp
std
in
(bad)
mov
std
fisttp
rcr
and
push
adc
shl
xchg
in
lahf
ficomp
xchg
pop
xor
inc
pop
inc
in
js
test
push
dec
aaa
push
test
mov
pop
mov
(bad)
jmp
mov
(bad)
fld
push
mov
cmp
sub
(bad)
pop
seto
sbb
(bad)
arpl
clc
ins
push
imul
or
dec
mov
push
bound
aad
cmp
push
sub
pop
aam
cld
lock
push
sub
mov
jmp
and
mov
pop
mov
shl
fstp
ja
into
lds
xchg
push
and
ror
xchg
and
idiv
out
sub
movs
fst
shl
dec
or
sbb
rol
jo
inc
rcr
sbb
(bad)
(bad)
js
xor
pop
out
div
fs
and
inc
or
mov
or
sbb
xor
and
or
jne
out
(bad)
retf
call
mov
in
retf
adc
push
cmp
sub
mov
adc
pop
retf
sub
clc
sti
dec
xchg
sub
xchg
add
mov
enter
bound
cs
add
rol
popa
cmp
sbb
hlt
js
xor
es
sub
ds
into
push
mov
push
stc
and
das
cdq
iret
mov
or
aad
and
in
mov
into
in
in
or
sub
repnz
pop
in
jo
xchg
and
out
test
push
and
pop
aad
sub
arpl
sbb
cmp
loop
daa
ror
xor
fistp
pusha
mov
pop
mov
repnz
inc
out
jp
xchg
jbe
push
daa
int
or
mov
pop
lods
mov
mov
adc
outs
mov
mov
inc
gs
jg
ficom
inc
pushf
xchg
popa
jne
add
fs
sub
dec
test
stos
inc
cmps
push
mov
or
mov
ret
test
ins
sar
ret
dec
int3
cmp
lock
inc
pop
or
mov
sar
(bad)
mov
jo
cmps
lahf
icebp
jo
ja
shl
pop
out
jns
js
mov
pop
push
add
out
cmp
mov
jmp
inc
(bad)
lock
dec
and
sub
push
mov
fist
into
call
out
push
inc
xor
shl
int3
sbb
retf
in
and
jg
pop
and
cli
out
add
mov
sub
loopne
outs
inc
mov
xlat
sar
fcom
shl
test
out
add
call
jno
popf
(bad)
movs
sbb
sbb
or
inc
push
inc
mov
or
xchg
shr
ret
pop
jg
movs
fdivr
push
mov
xchg
push
or
cmp
ins
js
sbb
xchg
std
xor
dec
mov
sub
inc
adc
icebp
push
cli
or
inc
jnp
or
call
sar
imul
xchg
shl
mov
leave
mov
rol
ror
add
int
push
arpl
(bad)
cmp
fistp
fadd
cmp
cmp
push
inc
push
in
dec
call
inc
movs
xchg
cld
mov
jmp
(bad)
cmc
pop
pop
sub
mov
inc
pop
cmp
xor
outs
jle
jmp
retf
mov
(bad)
xchg
bswap
inc
scas
add
and
in
mov
or
scas
inc
sbb
test
sbb
inc
inc
cmc
stos
or
hlt
inc
lods
mov
dec
sub
mov
inc
mov
aaa
shl
fcmovbe
add
inc
or
push
jne
mov
(bad)
sbb
push
stos
add
pop
push
mov
in
cmps
dec
mov
xor
lds
rol
idiv
push
jle
popa
cmc
shl
out
xchg
fisttp
inc
adc
mov
aam
ins
loope
adc
cmps
sub
push
jnp
mov
inc
out
aad
xlat
fs
xchg
add
stos
xor
fwait
inc
xor
adc
pop
outs
addr16
pusha
scas
mov
xor
push
retf
(bad)
mov
test
je
push
inc
jp
fcom
in
xlat
retf
imul
fscale
shl
sar
fbld
gs
test
pop
fucomp
sub
call
pop
je
pusha
jecxz
push
add
(bad)
mov
out
jl
pop
or
pop
inc
pop
aam
xor
and
cmp
xor
mov
loopne
iret
xor
dec
jb
pop
sub
outs
aas
dec
jo
sbb
mov
push
inc
or
xchg
je
xlat
cli
mov
fs
add
adc
out
sbb
sub
mov
mov
sub
movs
or
or
lods
adc
xor
xchg
dec
imul
imul
xchg
push
stc
es
std
shl
push
outs
loope
push
dec
into
hlt
test
leave
push
repz
(bad)
and
mov
and
fwait
mov
mov
sbb
push
mov
(bad)
(bad)
mov
adc
cs
dec
outs
jne
movs
mov
push
int
bndldx
inc
stc
push
fst
add
(bad)
push
ss
add
call
xor
add
jb
mov
jb
int
sahf
inc
fucomp
xchg
xchg
adc
scas
imul
sahf
cdq
sbb
(bad)
dec
nop
iret
iret
xlat
popa
or
repz
jecxz
cli
xchg
lods
adc
shl
add
pop
(bad)
jge
movs
or
or
xor
mov
push
and
js
mov
and
outs
into
and
push
repnz
pop
call
ret
out
dec
xchg
hlt
adc
ret
sti
repz
fsubr
repz
fild
mov
(bad)
mov
in
xor
gs
jnp
cs
outs
push
int3
pop
xor
pusha
js
daa
(bad)
in
mov
arpl
movs
pop
adc
pop
cli
cmps
inc
sub
ret
mov
sub
jns
stos
out
adc
lahf
jecxz
data16
xlat
dec
hlt
push
adc
scas
and
(bad)
std
xchg
sub
not
lods
mov
inc
(bad)
sbb
mov
mov
fisubr
inc
and
and
fnstsw
add
add
push
adc
add
stos
mov
add
and
jno
shl
mov
(bad)
mov
lds
and
mov
jmp
add
xor
inc
add
(bad)
lahf
push
xchg
or
arpl
push
icebp
movs
test
and
fucom
sub
and
test
mov
outs
xchg
gs
lods
frstor
add
enter
sub
std
inc
add
and
push
sti
test
lahf
mov
(bad)
cmp
retf
mov
in
out
cmps
pop
call
or
out
or
jge
mov
mov
ret
(bad)
call
push
or
or
mov
lods
mov
push
xlat
jmp
call
xchg
sub
shl
es
adc
xor
test
and
ins
imul
loop
cmps
retf
movs
retf
jmp
cmp
rol
jo
adc
inc
fstp
sbb
mov
sub
in
and
inc
in
or
cmp
jbe
inc
int3
aaa
or
lds
ss
jns
sub
add
nop
and
out
aad
js
add
scas
inc
cli
mov
sub
or
movs
push
sub
dec
dec
push
jnp
push
aaa
fsub
aad
adc
pop
pop
fidivr
inc
(bad)
sbb
ficom
mov
add
arpl
popf
pop
xor
shl
or
push
pop
lods
shr
dec
les
sub
xchg
(bad)
into
inc
jle
ror
inc
(bad)
ror
pushf
jo
mov
bound
mov
fs
aaa
loopne
das
addr16
ficomp
jl
and
add
aaa
pop
push
push
ss
test
xchg
mov
neg
jae
jl
cmp
xchg
cmp
pop
push
mov
or
pop
scas
cmp
clc
jns
loopne
and
push
(bad)
xor
leave
mov
push
into
inc
dec
dec
test
pop
movs
ins
repnz
pop
mov
and
cmps
into
dec
pop
test
mov
enter
inc
jge
adc
repnz
rcl
jp
add
mov
mov
cmps
jno
sub
push
popa
sub
add
stc
fwait
mov
aas
sub
xchg
stos
jnp
xchg
pop
xchg
or
ffree
cs
stos
retf
ins
push
jmp
xchg
jno
test
or
int
inc
push
mov
test
pushf
sti
shl
sub
mov
sub
mov
jge
test
std
(bad)
not
jo
push
les
xlat
into
or
mov
xor
outs
cmp
fistp
cmps
fsub
test
xor
mov
add
adc
(bad)
jmp
sub
push
sbb
popa
out
dec
call
pop
push
dec
or
push
jb
push
mov
out
pop
pop
pusha
repz
adc
jno
push
mov
jl
sti
leave
imul
dec
lds
icebp
and
lahf
jnp
dec
sti
int3
mov
push
inc
pop
into
xchg
sub
sub
cmp
mov
dec
ds
repz
sub
mov
xchg
adc
outs
jno
fs
lock
pop
lahf
mov
mov
dec
out
push
xor
cmc
iret
data16
mov
mov
push
pushf
push
fidiv
movs
push
aad
adc
push
clc
mov
push
pop
or
dec
rcl
push
sbb
or
in
loop
pop
(bad)
xchg
add
lahf
es
mov
stc
(bad)
sbb
std
inc
sub
pop
cld
imul
stos
sbb
mov
push
mov
ss
loopne
fisttp
sbb
js
retf
out
push
sbb
outs
dec
ret
push
push
test
movaps
inc
mov
cli
in
xlat
dec
push
xchg
push
data16
ins
shr
mov
jne
add
sbb
or
cmp
in
(bad)
movs
popf
fldcw
sub
and
ss
jp
push
das
and
adc
jmp
sbb
loopne
jecxz
jg
adc
push
xor
jmp
popf
push
cli
dec
and
retf
psrlw
shl
ret
cmp
cdq
cmps
cmp
imul
add
test
sahf
add
pop
inc
xchg
jg
clc
jmp
icebp
daa
jmp
frstor
pop
mov
fist
cwde
dec
and
push
push
into
or
mov
push
add
dec
fisub
pop
xor
add
mov
mov
ds
mov
add
dec
mov
ins
and
pushf
pop
mov
test
ret
dec
rcl
mov
and
and
xlat
pop
sub
loop
ds
sub
sbb
nop
jecxz
mov
or
sbb
fwait
adc
sahf
xchg
xchg
sbb
sbb
jge
mov
repnz
xor
imul
xor
test
jmp
mov
inc
mov
xchg
jmp
jmp
sar
adc
cmp
cmps
cmp
sub
sahf
xor
or
jns
inc
or
inc
imul
and
movs
pop
std
les
xchg
(bad)
mov
(bad)
inc
dec
fsub
and
imul
mov
mov
(bad)
bound
int
add
ret
sbb
xor
jne
push
sub
retf
jl
out
shl
xor
shl
mov
push
sahf
mov
outs
add
pusha
jg
rcl
mov
ds
dec
aas
cmps
sbb
mov
imul
fsubp
ja
or
pop
cmps
arpl
cs
sti
add
stc
jp
lods
mov
push
pop
dec
mov
es
or
mov
fsubr
cmps
and
int3
enter
pop
dec
adc
inc
rcr
(bad)
mov
sub
les
retf
dec
mov
or
loop
leave
jle
fcom
cmp
add
jno
(bad)
mov
pop
les
lods
adc
mov
push
jae
nop
scas
xchg
xor
loop
xchg
inc
xor
xchg
(bad)
ins
outs
mov
mov
mov
xchg
sub
sub
xor
inc
jno
fiadd
mov
pop
and
test
xchg
cmp
cmp
shl
in
push
dec
int3
inc
add
jl
sub
mul
stc
and
shl
shl
nop
test
and
movs
jae
sbb
aad
sbb
test
movs
inc
push
sub
popf
or
pop
add
add
mov
leave
cld
fisubr
jb
push
add
dec
xor
js
andps
repz
in
js
les
in
fcmovnbe
jge
repnz
call
loope
pop
pop
jmp
mov
fwait
push
sbb
imul
jb
scas
jg
dec
ja
jl
sub
sbb
mov
aam
imul
inc
jno
ins
jo
cmp
scas
xchg
jmp
push
lods
pop
call
pop
rol
fdivp
int3
cmc
les
test
out
jno
(bad)
stc
dec
aad
sbb
das
cmps
fimul
call
xchg
adc
push
int
mov
push
out
inc
mov
stos
aas
jns
scas
ret
xlat
movlps
sti
cmp
pop
mov
(bad)
outs
je
xor
outs
fcom
fisubr
sub
mov
or
or
stos
data16
sub
dec
hlt
mov
dec
idiv
shl
cmp
js
adc
add
fmul
sub
mov
xchg
jp
mov
dec
imul
pop
push
ja
push
jb
jbe
ja
inc
cmc
add
xchg
pop
int
mov
xor
sbb
aad
fxch
imul
scas
pop
into
fidiv
ins
fcomp
xor
enter
and
mov
fstp
sub
pop
jnp
idiv
adc
xor
mov
je
cmp
pop
xchg
repnz
fidiv
adc
mov
pop
add
test
sahf
dec
dec
ins
imul
inc
dec
(bad)
cmp
aam
jo
pop
inc
into
adc
mov
mov
xor
push
mov
push
fisttp
fisub
int3
sahf
pop
or
cs
cmp
mov
out
push
mov
xor
inc
test
cmp
mov
icebp
(bad)
stc
gs
out
pop
cmp
jae
pop
sub
pop
js
out
out
xor
and
push
in
or
dec
lods
and
test
mov
popf
adc
mov
pushf
xor
(bad)
cwde
dec
mov
imul
mov
inc
mov
or
jno
rol
es
push
inc
lds
inc
cld
pop
imul
cmp
mov
inc
imul
cmp
adc
mov
and
sti
stos
outs
adc
pushf
jmp
lahf
int3
and
jle
aas
retf
ret
sar
addr16
mov
cld
lods
call
sahf
pushf
scas
popf
in
sbb
push
addr16
mov
add
pusha
shl
movs
jo
ds
sar
scas
shl
loope
adc
fs
xchg
mov
mov
daa
mov
add
pushf
hlt
call
dec
cmp
test
sahf
imul
dec
sbb
sub
pop
fs
cmc
push
xor
cmp
mov
mov
xchg
push
movs
ins
mov
pop
dec
bt
stc
mov
jp
add
aad
(bad)
lods
gs
add
ins
(bad)
adc
adc
scas
ins
into
pusha
dec
int3
mov
pop
ss
adc
es
cmp
aas
adc
movs
aaa
mov
in
iret
pop
dec
sub
jg
inc
push
mov
sbb
or
inc
add
adc
and
repnz
fcmovnu
pop
push
loope
mov
js
xchg
xchg
mov
or
sbb
mov
pop
inc
out
fld
gs
mov
push
add
sti
sub
xor
cmp
inc
push
add
dec
out
and
lock
mov
xchg
fadd
inc
pop
sbb
mov
sbb
test
jg
mov
or
jno
fisttp
xor
adc
push
add
arpl
mov
and
ins
iret
jo
scas
cs
fistp
shr
std
shl
dec
or
xchg
mov
xor
call
mov
jp
pop
fldenv
(bad)
mov
aam
pop
xor
jno
mov
lahf
std
cmp
popa
push
retf
ret
xchg
cmp
call
cmp
retf
mov
fisttp
in
mov
leave
and
mov
push
sbb
and
sub
jno
mov
mov
jp
std
clc
inc
hlt
lods
fldenv
rcl
sub
jno
sbb
call
push
imul
mov
call
shl
mov
add
adc
cmp
fnstenv
addr16
std
pushf
adc
xchg
inc
popa
mov
aas
push
lds
push
pop
leave
sahf
sti
enter
(bad)
inc
mov
hlt
dec
and
in
cmp
adc
mov
popf
iret
jmp
sbb
cld
inc
scas
cmc
push
cmp
adc
aam
xor
aaa
add
push
push
sub
cmc
mov
mov
dec
sar
push
pop
xchg
or
or
sub
add
pop
loope
jecxz
sar
ds
add
in
lods
and
dec
inc
sub
push
fisttp
lahf
push
sbb
jge
hlt
shr
gs
add
out
inc
cmps
aad
mov
rcr
and
test
pop
and
sar
pushf
in
push
(bad)
mov
cs
push
iret
movzx
test
je
and
fwait
or
mov
ret
pusha
shl
push
aaa
ficomp
jl
lods
inc
sub
or
hlt
addr16
ja
push
and
ficom
inc
mov
stos
sub
idiv
repz
aas
cmp
sub
and
ret
clc
dec
xor
sahf
xchg
ss
inc
call
imul
test
adc
mov
aad
dec
scas
xor
loope
jge
xor
mov
fdivr
mov
or
stos
cmp
data16
or
lock
mov
push
sbb
out
sbb
lods
jge
(bad)
mov
xchg
cmps
mov
xor
lea
call
fimul
loope
mov
hlt
cmp
jno
mov
mov
stos
mov
rcl
push
daa
mov
and
sbb
data16
imul
and
xor
in
dec
popf
jmp
scas
push
(bad)
hlt
cli
xchg
pop
pop
jg
push
fcomp
ret
add
cld
ficomp
addr16
lock
ret
pop
test
cmp
enter
mov
clc
add
imul
std
xor
sti
into
es
dec
pop
jbe
into
jnp
sbb
pop
pop
les
loop
mov
lahf
xor
jmp
add
rol
xchg
les
dec
mov
push
scas
and
jno
fsubr
data16
loopne
jb
jecxz
das
push
mov
sub
hlt
pop
xchg
or
xchg
jge
xchg
ret
out
ins
mov
adc
pop
xor
mov
adc
je
mov
mov
add
dec
jno
movs
(bad)
xor
add
retf
loop
jmp
stc
xchg
sbb
lods
std
mov
ret
ror
push
sub
mov
inc
push
lahf
out
inc
lods
or
pop
mov
xchg
mov
aam
push
dec
mov
fcom
push
xor
mov
adc
xchg
dec
xor
cmps
(bad)
in
sub
sub
or
call
mov
les
fsub
sub
xlat
xchg
test
add
js
int3
hlt
(bad)
out
fdivr
mov
jae
sub
sub
sbb
fldcw
push
dec
in
dec
mov
jmp
movs
push
test
push
mov
inc
std
adc
cmp
mov
popa
clc
call
shl
fistp
cmp
int3
dec
popa
das
and
(bad)
cmp
imul
dec
dec
jle
fxch
ja
mov
jg
mov
lahf
xchg
dec
mov
pop
loop
nop
repz
mov
leave
sbb
sub
in
fs
push
out
or
pop
adc
jne
mov
cs
and
fs
pop
and
and
or
(bad)
or
jmp
in
cmp
not
adc
jecxz
mov
cmp
in
dec
cmps
adc
stos
dec
mov
(bad)
fldcw
mov
sbb
lock
out
fcomp
adc
mov
aad
int3
fstp
repnz
mov
loopne
data16
cmps
inc
fistp
imul
retf
enter
stos
inc
fnstsw
inc
js
jo
fnstenv
mov
and
adc
imul
ret
sbb
adc
and
in
es
dec
jb
loope
div
jge
cmp
mov
mov
scas
pop
out
movs
cmp
retf
sub
sub
adc
pop
mov
push
pop
or
mov
ja
sti
loope
pshufw
mov
jmp
and
fisub
adc
cmp
std
mov
test
sbb
mov
lock
inc
inc
jecxz
addr16
xor
std
and
or
call
ror
cli
shl
mov
imul
inc
xchg
jmp
lods
sbb
adc
in
push
leave
cmp
adc
fs
popf
sub
dec
xor
xor
shl
pop
scas
aaa
mov
jmp
xchg
fldcw
pop
sbb
xchg
sahf
shl
mov
ffreep
inc
imul
lods
push
int3
inc
adc
ror
pushf
mov
lods
rol
mov
js
and
jmp
dec
ret
xchg
imul
push
inc
pusha
dec
test
pop
mov
fstp
cmp
push
cmps
into
sar
push
sub
jb
push
(bad)
inc
mov
xchg
push
and
sub
frstor
xchg
jne
push
jae
mov
scas
es
dec
pop
pop
addr16
cmp
loop
or
sub
add
lods
dec
jnp
int3
stos
or
in
pop
or
cmp
or
sub
sub
add
lock
cmp
stos
and
sub
test
and
inc
add
sti
jnp
add
sti
and
dec
sub
inc
inc
xor
or
and
mov
mov
ss
mov
(bad)
jge
add
dec
mov
mov
ins
inc
mov
(bad)
adc
mov
mov
mov
mov
pop
sar
xchg
fist
aad
out
jmp
and
sub
push
repz
push
add
jb
mov
push
je
stos
mov
xchg
shl
int3
or
sbb
jne
jg
push
ret
adc
ds
pop
fs
sbb
xchg
jne
imul
scas
(bad)
mov
or
cmp
or
mov
sbb
push
les
loopne
sbb
jecxz
jg
fmul
mov
out
push
xchg
cmp
mov
xor
inc
dec
dec
pop
dec
inc
rol
push
fs
mov
les
and
jg
mov
xchg
push
sbb
mov
pop
aas
cmp
mov
mov
scas
dec
xchg
sub
sti
jae
inc
loope
dec
test
mov
inc
sahf
imul
daa
dec
pop
mov
(bad)
sbb
and
ins
pop
inc
je
ja
dec
test
sar
inc
push
leave
mov
sbb
js
jmp
sub
mov
loop
popa
test
fisttp
retf
ds
nop
push
cmp
add
dec
or
(bad)
imul
and
movs
pop
int3
xor
enter
aad
fadd
pop
(bad)
call
pop
jb
add
ja
sub
and
cwde
fwait
push
ret
xchg
fild
out
vpshufd
das
mov
shl
retf
clc
mov
lods
sub
and
adc
data16
stos
sbb
ret
jne
scas
sub
int3
fsubrp
bound
inc
imul
or
lahf
fsub
popf
aas
out
fwait
loopne
xor
and
adc
xor
adc
in
push
sub
push
(bad)
lods
pop
repnz
and
aas
aas
add
(bad)
enter
dec
movs
(bad)
pop
jmp
sub
mov
les
out
mov
mov
jns
aas
gs
sbb
lds
mov
(bad)
cld
out
fld
(bad)
cdq
aas
mov
aaa
xor
pusha
adc
imul
std
pop
iret
call
adc
je
mov
push
(bad)
in
(bad)
push
addr16
mov
jb
jnp
pcmpeqd
(bad)
adc
int
test
shr
scas
push
mov
adc
jmp
(bad)
xor
imul
aaa
ret
mov
(bad)
mov
xchg
out
inc
aas
or
test
je
in
(bad)
pop
pop
popf
mov
sbb
lods
mov
sub
stos
inc
mov
mov
cwde
mov
pushf
mov
ins
sub
sbb
or
pop
inc
inc
dec
xor
fprem1
push
or
aad
jne
out
jno
int3
xchg
adc
pop
and
cmp
cmc
push
xchg
imul
mov
cli
lea
clc
ret
movs
mov
mov
in
daa
popf
or
lea
adc
leave
das
add
adc
xor
or
popa
in
sbb
xchg
adc
out
(bad)
mov
daa
inc
mov
out
jl
out
adc
push
in
add
adc
push
inc
mov
xchg
jp
not
aaa
xchg
ror
mov
movs
inc
loopne
push
je
loop
mov
sub
pushf
aaa
push
or
sbb
imul
jnp
(bad)
cmp
rep
mov
gs
bnd
push
mov
pop
pop
push
in
xor
mov
(bad)
scas
push
jg
scas
xchg
dec
or
retf
cmp
fcom
xor
iret
mov
and
push
mov
int
sbb
add
adc
xor
jae
sbb
clc
pusha
neg
ins
fs
fst
xchg
repnz
inc
test
sbb
xor
add
mov
push
sub
ret
inc
xchg
dec
jns
cmp
cmp
popa
cli
daa
mov
inc
xchg
pusha
scas
int
aam
adc
jle
push
mov
mov
cs
into
or
and
jns
push
icebp
add
push
and
add
push
imul
dec
test
and
lds
(bad)
push
(bad)
neg
sbb
push
jge
mov
hlt
pop
jae
mov
xchg
or
cmp
not
dec
lods
enter
aaa
jg
icebp
pop
std
dec
jno
mov
push
dec
into
xchg
lods
cdq
mov
pop
iret
fiadd
mov
add
or
aad
or
jmp
outs
add
fucom
iret
rol
mov
inc
xor
push
inc
clc
movs
in
and
or
cmp
je
repz
ds
rcl
retf
or
fwait
std
lahf
imul
test
idiv
popa
lea
xor
repz
xchg
je
inc
pusha
ror
aam
ret
jmp
rcl
stos
lea
das
sbb
adc
es
jae
adc
sbb
imul
daa
sbb
loop
pusha
mov
push
sbb
adc
mov
test
adc
inc
pushf
daa
sbb
aaa
cmc
sub
lock
cmp
push
cmp
cmps
xlat
or
aas
rcr
or
jl
mov
loop
dec
nop
pcmpeqd
and
(bad)
xor
mov
loopne
jmp
jne
pusha
jmp
clc
dec
xchg
ja
sbb
sbb
shl
pop
ins
or
fdivr
cmp
xchg
inc
lahf
int3
pop
imul
pop
inc
mov
mov
and
mov
enter
jge
loope
cmp
sub
not
aas
call
imul
std
xchg
push
sub
inc
maskmovq
div
mov
and
in
mov
es
out
and
push
das
popa
test
call
mov
mov
and
fnstenv
adc
pop
cwde
shrd
lods
call
(bad)
fistp
mov
pushf
je
rcr
outs
lods
fs
popf
xchg
cmp
and
aaa
cdq
je
or
pusha
rcr
add
xor
push
xor
inc
adc
stos
aas
inc
and
xlat
fwait
js
cmp
mov
pushf
mov
mov
inc
lds
stc
push
inc
cmp
xor
(bad)
test
cmp
or
jnp
and
pop
daa
pop
jbe
push
add
pop
add
push
jl
repz
dec
adc
repz
mov
or
sbb
outs
xchg
pop
mov
lds
xlat
jnp
jg
sub
movs
cmps
int3
and
bound
jle
aaa
addr16
mov
mov
adc
pushf
imul
clc
(bad)
popa
cmp
ds
adc
popf
(bad)
pop
neg
clc
aaa
xor
add
int3
retf
in
inc
loopne
js
(bad)
mov
jo
push
pop
sub
dec
or
jmp
pop
out
cmp
into
rcr
fdivr
mov
mov
in
lock
sahf
mov
or
aad
lods
dec
mov
ja
xchg
dec
inc
dec
adc
leave
sub
ret
arpl
adc
int3
xchg
push
mov
fst
loope
xor
xchg
mov
xchg
xchg
ins
jno
nop
enter
or
dec
popf
add
into
call
jp
stos
mov
cmps
jg
cmp
sbb
aam
cwde
jp
mov
ss
pusha
js
(bad)
std
mov
lods
ins
in
xor
dec
repz
mov
and
mov
sub
or
push
movs
inc
cmps
sar
or
in
ficom
mov
or
frstor
add
sbb
or
xor
sub
out
pop
stc
push
jo
aam
sub
push
mov
rcr
or
test
call
cdq
lock
fst
imul
lahf
gs
push
and
xor
and
xor
pop
inc
jo
mov
mov
jle
and
mov
mov
rcr
enter
ret
addr16
in
data16
cmp
inc
jno
add
jp
lock
mov
mov
in
push
daa
or
test
or
add
xchg
das
(bad)
xchg
and
out
dec
loop
mov
es
push
nop
xor
(bad)
sbb
imul
fcmovne
and
fist
adc
(bad)
rcl
mov
retf
cmp
icebp
push
mov
inc
aam
cmp
in
lea
bound
mov
pop
daa
aad
aad
ds
mov
sub
(bad)
mov
fld
jns
xchg
mov
xor
add
cmc
inc
aam
(bad)
scas
push
mov
aam
lods
sbb
and
and
cdq
icebp
add
in
out
dec
outs
and
mov
push
int
pop
std
mov
and
mov
push
neg
adc
jb
push
loopne
nop
retf
imul
add
out
jg
je
movs
pushf
std
lds
pushf
addr16
add
inc
pop
push
jecxz
jb
imul
repnz
push
call
test
mov
pop
les
pusha
sar
in
pop
xchg
mov
or
aad
jne
inc
cmps
push
call
(bad)
push
inc
push
add
xor
jns
and
loope
dec
cmp
dec
je
inc
lock
mov
xchg
push
int3
sahf
mov
inc
outs
cmp
retf
shl
shl
pop
pop
mov
push
pop
retf
adc
test
ret
cmc
add
cmp
outs
test
xor
cmp
or
push
clc
das
dec
jo
pop
pushf
inc
retf
es
fiadd
add
and
mov
ret
cwde
xor
xchg
retf
and
int
xlat
pop
idiv
sbb
xor
call
clc
sbb
add
sbb
and
leave
cmp
pop
div
test
cmp
(bad)
adc
or
dec
in
repnz
mov
popf
push
inc
fdivp
lods
xor
test
test
fisttp
std
sbb
push
jbe
stos
retf
xor
cld
mov
imul
add
xchg
mov
int
mov
inc
pop
or
jae
cdq
in
retf
jae
mov
inc
adc
fisubr
jecxz
scas
(bad)
pusha
imul
fld
fbld
or
adc
inc
int
or
inc
sub
mov
dec
mov
cs
pop
popf
dec
push
nop
push
pusha
loope
ss
pop
jmp
std
xor
data16
pop
in
cwde
scas
adc
adc
add
stos
movs
(bad)
fcos
es
mov
test
mov
xchg
sbb
fld
fwait
or
dec
rcl
sbb
jp
push
ins
lods
cmp
enter
into
fnstenv
sub
sahf
sbb
push
xor
mov
sub
mov
jnp
push
mov
shl
pusha
fbld
xor
jl
sbb
aaa
adc
push
cli
fbld
jbe
cmp
push
cmp
cmc
xor
ins
fs
push
jmp
fist
xor
arpl
lock
xchg
bound
or
shl
jbe
arpl
div
jl
es
dec
daa
test
or
and
fst
addr16
pop
push
add
mov
scas
mov
imul
and
ins
ds
aas
aas
jb
fadd
nop
(bad)
nop
sti
cmps
hlt
loop
mov
div
add
inc
cmc
jmp
fild
mov
addr16
fidiv
fistp
mov
(bad)
push
popf
sbb
std
mov
stos
pop
pop
cdq
push
push
or
repnz
ins
ret
adc
and
push
sar
cmps
push
out
push
test
jnp
nop
daa
fxch
out
mov
mov
add
out
movs
cmp
jmp
cmp
sbb
jmp
repz
mov
stos
imul
sub
mov
mov
in
movs
aad
(bad)
lods
repz
ret
xchg
int
ins
nop
sbb
daa
(bad)
sahf
push
inc
in
out
rcl
scas
into
aam
adc
inc
inc
jl
dec
ins
pop
out
outs
imul
add
dec
pop
lds
push
test
shl
je
cmps
dec
dec
jb
shr
add
dec
pop
xchg
popa
jecxz
loop
rcr
sub
out
mov
pop
push
pop
cmps
enter
push
hlt
fist
dec
mov
loope
xor
int
pop
movs
popa
push
xor
(bad)
and
or
push
pop
aaa
stos
pop
sti
mov
cmp
add
sbb
jle
sub
sub
ins
push
cmps
mov
mov
fsubr
or
in
pusha
(bad)
xchg
into
mov
jno
mov
addr16
jg
test
aas
mov
cld
inc
enter
loope
in
cmp
push
sbb
cmp
push
sub
mul
jno
dec
or
push
(bad)
push
xchg
in
icebp
push
push
inc
jnp
lahf
data16
int
mov
and
push
loope
sbb
es
out
rcr
mov
mov
aad
jae
or
mov
(bad)
mov
push
jg
(bad)
sub
and
add
mov
and
inc
out
(bad)
in
sbb
aaa
mov
pop
sbb
call
(bad)
xchg
dec
repnz
sub
fcmovb
inc
mov
push
sub
jmp
int3
push
mov
nop
int
or
mov
xchg
mov
inc
fchs
fwait
push
jmp
sub
adc
mov
mov
fwait
fs
fisttp
or
mov
jp
pop
cdq
shr
movs
test
xor
push
cld
bound
add
call
out
push
or
push
mov
dec
jne
jp
mov
ret
stos
pop
mov
dec
xchg
dec
iret
pop
pop
iret
fwait
int3
sub
ss
cli
cmp
cld
cmp
jne
mov
or
out
mov
ss
mov
push
cmp
jg
int
sub
rcl
fcmove
xchg
and
jo
out
jns
cmp
repz
mov
adc
mov
ret
les
sbb
clc
and
fstp
cmp
cmp
dec
nop
and
push
fiadd
sub
push
retf
sbb
jne
push
and
xor
dec
push
fimul
fcom
jp
lods
int3
cmps
xchg
daa
div
imul
sub
adc
fimul
cmp
lock
stos
fisttp
dec
shl
jne
mov
mov
push
imul
gs
int
mov
lea
pop
jae
shl
jmp
dec
add
in
iret
loope
inc
(bad)
mov
ficomp
inc
inc
rep
std
push
aad
in
and
push
stos
sbb
int3
sti
imul
loope
popf
(bad)
xor
mov
call
mov
ds
in
bound
js
sbb
cmps
sahf
mov
idiv
shl
cmc
fild
xor
dec
leave
bound
or
clc
jbe
push
inc
aad
jp
sbb
or
add
sub
je
pop
cmc
shl
pop
push
fadd
and
inc
adc
retfw
pop
jb
push
mov
(bad)
jns
stos
sub
xchg
dec
cmp
cmp
ret
cmps
fsubr
stos
lahf
or
scas
or
mov
jp
and
xchg
mov
and
jl
stos
dec
repnz
test
repz
(bad)
out
test
arpl
or
cmp
mov
sahf
rcr
int
inc
inc
mov
imul
movs
mov
push
into
jae
mov
test
jecxz
adc
or
adc
in
cmps
xor
and
int
dec
test
in
sub
std
(bad)
sbb
cmp
mov
callw
sbb
adc
pop
jp
bound
stc
js
mov
add
rcr
sbb
mov
into
push
pusha
push
pop
hlt
mov
xchg
adc
cmp
jbe
fst
das
mov
pop
pop
imul
ss
je
cmp
and
and
adc
popa
dec
inc
push
ret
jbe
mov
rcl
cmp
and
stc
push
test
xor
(bad)
retf
mov
repz
(bad)
push
sub
dec
repz
pop
fucom
pop
adc
sahf
mov
data16
aas
test
lods
fisttp
mov
jle
pusha
(bad)
aam
mov
stos
xor
(bad)
fld
push
int
movs
push
sbb
loope
dec
mov
shl
fninit
dec
cmps
xor
(bad)
cmps
ss
sbb
test
add
fsubr
dec
add
ss
sbb
or
push
jecxz
cmp
jae
xchg
xchg
pop
adc
sub
inc
mov
inc
pop
jb
cmp
movs
je
mov
and
push
jp
cmps
push
int
cli
xchg
enter
sub
xchg
xor
inc
outs
jge
dec
inc
mov
mov
rcr
pop
push
mov
inc
(bad)
call
aaa
outs
lea
test
ret
popa
inc
retf
loope
cmp
sub
or
test
rcl
xor
jecxz
call
rcr
ss
daa
cmps
mov
and
and
out
add
push
jno
hlt
and
aas
xor
stos
mov
fwait
lea
aaa
outs
mov
sbb
push
mov
test
cmp
adc
cdq
mov
mov
enter
cmp
mov
jecxz
dec
in
or
jle
sbb
jg
jno
xchg
adc
outs
enter
sbb
jl
stos
sbb
dec
and
or
cli
push
xchg
outs
sub
ins
out
(bad)
xchg
loop
jmp
xor
stos
and
stc
enter
cmp
fnstsw
mov
xchg
shr
and
scas
mov
inc
sub
and
xor
ret
pop
mov
add
xlat
xchg
imul
shr
test
xor
inc
cld
dec
add
adc
iret
fild
dec
int
add
aam
cmc
jae
push
shr
adc
pop
(bad)
adc
or
out
push
or
fcom
xor
and
mov
push
js
in
mov
jb
aam
fisttp
jno
sub
mov
aas
mov
mov
mov
aam
rcr
dec
xchg
mov
fbld
sbb
pop
cli
jecxz
aas
xor
scas
inc
add
xor
movs
bound
fcomi
or
rcl
ret
cmps
std
cdq
xor
inc
sti
leave
fisubr
pop
cmp
push
inc
imul
call
mov
sub
inc
fwait
repz
arpl
(bad)
xchg
adc
pop
leave
jmp
test
cmc
clc
hlt
fs
in
pop
add
pop
inc
outs
push
push
(bad)
nop
xchg
and
cwde
pop
jns
into
ins
mov
jp
imul
aas
sub
xor
and
shl
lods
enter
push
push
inc
sbb
xor
loop
add
dec
cmp
sar
enter
idiv
push
sub
rcl
adc
add
mov
les
test
mov
push
jmp
add
adc
sub
out
scas
jnp
aaa
pop
ja
in
jp
pushf
nop
(bad)
es
gs
lahf
dec
(bad)
xchg
mov
sub
jle
movs
cli
popa
out
push
dec
mov
mov
jno
dec
push
pusha
lods
int
retf
call
pop
in
dec
mov
repnz
mov
add
mov
ins
xlat
and
jp
sahf
jmp
pushf
gs
ss
clc
movs
mov
retf
sti
jo
pop
cmc
lahf
mov
mov
push
sub
scas
cmp
jecxz
jg
lahf
outs
cmc
xchg
retf
aas
and
cmc
aas
and
mov
xchg
mov
pop
mov
clc
retf
add
hlt
xchg
mov
clc
xor
scas
xor
adc
mov
mov
fimul
or
neg
mov
out
pop
push
mov
test
xchg
mov
pop
(bad)
pop
sub
dec
add
dec
mov
push
inc
add
(bad)
imul
rol
call
inc
bound
adc
sub
mov
dec
xchg
js
adc
jle
call
iret
push
xchg
jo
mov
(bad)
lock
loopne
mov
cmc
das
mov
fnstcw
stc
shr
add
xor
jmp
retf
xor
out
not
movs
test
inc
je
mov
pop
mov
adc
out
inc
dec
inc
and
je
out
push
jg
arpl
cmp
mov
stc
call
jnp
loop
mov
mov
lahf
sbb
sahf
leave
enter
dec
in
data16
outs
xchg
cmc
jl
cmp
inc
mov
pop
sbb
(bad)
pusha
sbb
mov
mov
repnz
test
add
iret
pop
shl
mov
sbb
jo
rcl
xchg
xchg
mov
or
xor
lods
lods
jbe
es
jecxz
sub
in
loop
inc
(bad)
pop
(bad)
mov
not
int3
fs
cmp
daa
movs
mov
jb
pop
scas
jg
cmp
cmp
addr16
fldcw
(bad)
(bad)
sub
xor
iret
jns
(bad)
adc
dec
mov
lahf
arpl
jle
pusha
adc
mov
sbb
sahf
shr
outs
js
js
ss
fidiv
xchg
cdq
inc
in
retf
fadd
push
sub
dec
movs
ins
addr16
out
jbe
retf
sbb
xchg
inc
fsubr
adc
sbb
test
adc
push
push
dec
test
jo
fwait
add
mov
mov
adc
cli
mov
ss
ret
xor
cmp
sbb
sar
pop
pop
sahf
rcr
nop
push
daa
xchg
ret
mov
ja
mov
xchg
bound
mov
sbb
adc
push
inc
loopne
retf
mov
push
xlat
and
dec
mov
in
adc
adc
push
call
ss
inc
xchg
mov
sbb
inc
pop
test
xchg
pop
rcl
rol
movs
sub
pop
leave
ret
test
mov
call
outs
cmp
imul
mov
or
std
stc
pop
and
cmps
push
fstp
mov
scas
inc
xor
mov
hlt
popf
xchg
std
fidivr
call
xchg
mov
xor
inc
fcom
aas
(bad)
mov
cmp
rol
movaps
cdq
stos
enter
loope
out
sub
or
cmp
push
xor
sar
xor
mov
adc
adc
imul
shr
into
jbe
mul
mov
or
xor
pop
sbb
pop
shl
mov
sbb
cmp
inc
shr
push
push
(bad)
jmp
dec
dec
xlat
mov
ret
mov
shl
add
sbb
push
neg
inc
mov
jg
or
scas
(bad)
xor
pop
fsub
push
(bad)
ficom
test
rol
add
inc
dec
mov
scas
push
sbb
(bad)
cmp
daa
mov
xor
rcl
sbb
jae
mov
sar
loop
inc
xor
mov
inc
cmp
fdivr
stc
clc
cmp
stos
sub
scas
adc
jne
mov
arpl
hlt
sti
stc
cmp
dec
mov
outs
es
inc
xchg
pop
jae
jbe
push
push
mov
test
(bad)
push
push
stos
push
retf
and
cmc
dec
adc
adc
pop
mov
xchg
shr
mov
mov
pop
test
popf
jl
call
fscale
mov
shl
jb
outs
adc
sti
sub
(bad)
(bad)
in
mov
scas
mov
push
outs
jge
cmp
js
outs
xor
int
inc
add
or
adc
mov
mov
adc
jb
in
cs
int3
or
addr16
jmp
int
aad
mov
push
lods
pop
mul
clc
in
icebp
ins
mov
sbb
inc
push
sar
aaa
(bad)
repnz
pop
out
cmc
inc
push
bound
jl
xor
mov
inc
lea
iret
(bad)
icebp
mov
int
test
aad
data16
xchg
dec
pushf
mov
dec
shr
(bad)
mov
sub
js
push
bound
leave
(bad)
(bad)
mov
lock
mov
mov
inc
not
(bad)
jb
sbb
cmp
arpl
sub
jecxz
and
repz
cmp
xlat
loopne
bound
push
iret
cmps
or
ins
inc
xchg
(bad)
xchg
test
xchg
fcomp
push
data16
jmp
cmp
fwait
mov
sar
dec
inc
sub
scas
(bad)
pop
pop
loopne
mov
jnp
out
jnp
lds
mov
ja
pop
out
mov
sub
cmp
gs
mov
scas
dec
mov
ffree
fisub
dec
dec
aam
(bad)
sbb
cmps
das
mov
mov
inc
daa
pushf
pop
jmp
cmc
cmp
mov
xchg
xchg
cmp
xor
dec
jg
push
out
lods
xchg
push
mov
movs
adc
add
mov
dec
adc
pusha
xchg
mov
mov
jl
jg
add
js
(bad)
cmc
xchg
lea
inc
jns
pusha
push
xchg
cmp
leave
dec
loopne
pop
xchg
xchg
movs
and
lfs
lods
push
and
leave
jg
dec
outs
in
mov
xchg
aas
mov
int3
xchg
and
add
sub
xchg
or
jmp
(bad)
and
sbb
in
test
lahf
mov
sahf
es
cmp
adc
mov
and
dec
repnz
pop
or
das
jb
sahf
fisubr
mov
lods
dec
hlt
scas
mov
inc
adc
xchg
fcom
mov
mov
inc
and
sub
ja
or
repz
add
gs
loope
mov
je
or
aad
pop
jle
cmp
push
jl
sbb
aas
daa
sbb
lea
xchg
in
or
add
sti
xlat
xchg
pop
mov
inc
fucomip
sub
push
movs
fwait
lahf
leave
(bad)
cmp
lods
popf
xchg
and
fcom
(bad)
mov
sbb
out
es
mov
pop
add
push
ja
xchg
jle
iret
pop
inc
stos
jmp
aas
add
push
popf
shl
stos
sub
je
cli
outs
ds
jg
clc
cmp
mov
shl
out
push
(bad)
jl
sbb
leave
ds
push
test
ret
mov
xchg
or
mov
pop
pextrw
pop
add
popa
neg
in
cmp
mov
xchg
ret
sub
das
mov
shr
es
outs
push
inc
inc
adc
jmp
sar
scas
jg
(bad)
mov
hlt
ins
pop
add
sahf
and
mov
jns
sti
cld
loope
mov
es
mov
inc
dec
push
lods
jp
test
cld
js
lods
xchg
fldln2
xor
rcr
inc
retf
mov
mov
not
add
xchg
or
out
loope
std
inc
sub
mov
adc
or
pop
(bad)
and
push
inc
loop
xchg
pushf
inc
or
sbb
dec
cwd
in
popf
adc
sub
xchg
push
sbb
cmp
push
pop
mov
int3
repnz
ins
sub
outs
retf
dec
and
mov
cmp
and
ds
out
arpl
jg
stc
xor
lock
and
mov
cmp
retf
ins
mov
push
test
inc
leave
(bad)
and
xchg
aam
xchg
outs
out
mov
fcmovne
push
cwde
xchg
movs
sahf
push
xchg
inc
scas
xchg
cmps
and
pusha
ror
sub
cmp
dec
cwde
popa
mov
pop
popf
movs
(bad)
jl
shl
repnz
push
cmp
aas
mov
mov
mov
mov
iret
icebp
adc
dec
ret
jo
retf
int3
sub
movs
lock
xchg
es
xor
mov
pop
aaa
add
daa
scas
(bad)
xchg
push
jae
iret
dec
sar
out
jge
lods
xor
imul
gs
loop
(bad)
repnz
sti
icebp
adc
ins
mov
mov
xchg
outs
push
jae
ins
arpl
lds
stos
lods
mov
js
fwait
jno
loop
sahf
and
pop
jl
jecxz
lock
sbb
inc
gs
and
iret
push
inc
dec
cs
retf
pushf
inc
add
cmp
cmc
cmp
movs
data16
int3
neg
push
test
popa
dec
imul
jmp
jno
rep
cmc
sahf
sti
cmp
psubusw
movs
mov
(bad)
jnp
data16
paddd
mov
aad
dec
lahf
xchg
cmps
or
mov
cli
fadd
or
push
cwde
inc
leave
or
push
fisub
clc
push
dec
js
mov
mov
scas
hlt
call
int3
outs
ins
ret
sbb
xor
cdq
dec
das
xlat
pop
test
mul
mov
mov
fsub
sbb
dec
int3
hlt
sbb
fild
cdq
mov
cmp
iret
leave
cdq
test
adc
loop
mov
lea
enter
shl
and
pop
push
dec
sbb
loope
retf
aas
ds
das
mov
mov
xor
sar
inc
and
xchg
xor
push
jns
mov
fcmovnb
ss
mov
fcom
xor
or
mov
cli
adc
stos
lahf
push
sub
das
cld
cmc
mov
jl
mov
xchg
push
mov
mov
nop
mov
hlt
das
dec
add
adc
or
pop
test
mov
jbe
and
stos
in
loopne
aaa
mov
test
out
or
adc
shl
jg
dec
in
dec
je
mov
or
and
stos
jbe
cdq
jo
add
inc
xchg
fistp
mov
into
sti
out
mov
loop
in
xchg
ret
mul
dec
xchg
push
shr
adc
adc
push
gs
push
push
aaa
gs
inc
sbb
sbb
sub
push
cmp
shr
add
pushf
push
dec
les
pop
stos
mov
mov
push
push
rol
das
rol
add
sbb
dec
clc
sub
call
mov
stos
dec
ror
jbe
(bad)
mov
xchg
call
cmps
ss
jns
sti
cld
jecxz
or
ja
mov
lea
inc
xchg
out
ror
into
push
lock
scas
cdq
xor
mov
push
cmp
ins
dec
inc
mov
shr
fstp
inc
mov
leave
mov
jmp
cmp
test
push
ret
les
dec
jne
ret
mov
pop
stos
sub
(bad)
sub
or
and
out
and
clc
dec
das
pop
lods
popa
ja
xlat
lea
sub
xchg
pop
fwait
push
hlt
dec
mov
mov
gs
mov
rcr
imul
add
push
je
pop
call
fisubr
inc
fisubr
test
out
fs
dec
xor
push
and
xchg
lock
pop
fild
mov
inc
popa
xchg
push
movs
jns
jle
pop
rcl
push
and
lods
add
mov
xchg
adc
cmps
pop
adc
and
sub
push
dec
mov
pusha
mov
shl
out
int3
pop
or
and
ror
test
push
lea
iret
cmp
add
clc
popa
xchg
test
sub
cmc
arpl
inc
loope
jmp
loope
jno
cwde
mov
dec
inc
mov
clc
es
test
ss
xchg
inc
les
enter
or
xchg
mov
push
popa
call
xor
jl
inc
mov
xor
cmp
inc
push
pop
movs
or
jbe
pop
int3
adc
dec
aad
and
cs
inc
ds
unpckhps
pusha
fidivr
pop
mov
mov
sbb
repz
dec
test
sub
mov
ins
fld
xor
or
sub
sub
xchg
inc
jmp
call
dec
mov
cmp
aam
cmp
xor
mov
nop
div
add
jecxz
shl
and
inc
cdq
adc
and
aam
fidivr
rol
inc
(bad)
inc
xor
cmps
jnp
inc
div
cmp
mov
and
aam
and
xchg
or
in
mov
xor
rcr
push
pushfw
cli
pop
cmp
xchg
cmp
add
xor
add
mov
lods
lock
sahf
sbb
stc
out
xor
and
stc
xor
xchg
adc
xor
ja
ds
(bad)
jl
fadd
mov
sub
nop
dec
sbb
pop
pusha
inc
stos
xor
jne
sti
stos
adc
mov
xor
ficomp
xchg
push
fs
sbb
jno
jae
push
pusha
adc
add
sbb
imul
ret
mov
repz
jmp
pop
imul
xchg
add
fistp
imul
or
sti
ret
pop
jecxz
retf
leave
repnz
in
sub
arpl
scas
mov
sub
mov
aad
xor
lods
and
jne
loop
retf
cld
jo
test
retf
jbe
sti
dec
xor
xchg
in
or
repnz
xor
cwde
jp
(bad)
ins
nop
sub
pop
mov
cwde
mov
lock
xlat
scas
jno
adc
cmp
popf
xchg
mov
(bad)
dec
cmp
sub
test
and
lds
mov
cmps
add
fstp
test
jnp
arpl
jns
sub
jg
and
sar
loope
inc
fld
xchg
out
jbe
jg
aaa
stos
(bad)
je
(bad)
scas
jns
outs
xor
xor
mov
jp
jl
xchg
push
in
fdivr
xlat
movs
pop
inc
mov
in
iret
jmp
sbb
jbe
add
in
sti
frstpm(287
sub
ds
int
adc
out
jns
mov
inc
mov
push
pop
rcl
fs
add
pop
les
scas
push
cwde
out
inc
xor
sub
cmc
in
inc
mov
inc
icebp
pop
popf
mov
sub
xor
ss
into
push
jo
mov
std
xchg
shl
push
inc
inc
stos
stos
mov
adc
out
rcr
or
add
scas
push
nop
jbe
pusha
or
and
int3
repz
imul
into
outs
mov
imul
sub
adc
fistp
push
sub
dec
inc
ins
jnp
fs
push
jns
xchg
xchg
cdq
xchg
cmp
aad
aaa
retf
sbb
xchg
mov
rcr
mov
mov
pusha
mov
mov
mov
out
pop
push
cmp
or
adc
int3
das
jmp
sbb
sub
mov
test
sub
xchg
les
dec
enter
push
xchg
dec
outs
aas
xor
dec
mov
mov
icebp
xchg
xchg
inc
mov
add
push
cld
(bad)
cmp
aas
hlt
sti
out
or
push
mov
(bad)
(bad)
aad
pop
mov
les
xchg
dec
xchg
call
out
nop
out
lea
ins
lock
dec
rcr
icebp
fld
in
mov
mov
sub
movs
addr16
inc
dec
pop
sbb
(bad)
(bad)
mov
pop
scas
test
dec
jne
jecxz
retf
dec
push
inc
neg
xor
or
je
mov
lea
rcl
pop
bts
test
mov
out
sar
nop
scas
xchg
ds
es
or
int3
xchg
retf
push
mov
aaa
int3
loop
adc
sbb
add
ret
mov
sub
mov
xor
fistp
adc
xchg
out
jle
adc
repz
jge
imul
icebp
pop
aad
xor
pop
pop
popf
aaa
mov
push
fdiv
call
div
sahf
pop
cs
das
xchg
xchg
leave
cmp
cdq
sbb
xchg
jb
push
mov
pop
mov
xchg
xchg
es
add
cld
xor
cmp
jae
jge
xor
cmps
fiadd
or
loope
push
retf
sub
pop
aad
pop
pop
lods
adc
aam
out
dec
mov
scas
out
add
les
and
retf
pop
mov
cmp
pop
je
imul
push
add
push
(bad)
xor
jmp
imul
xchg
xor
popa
stos
cmps
es
mov
pop
std
xor
outs
inc
adc
cmp
loopne
xchg
sar
cmp
jne
je
lods
sub
lods
fcomp
xchg
retf
(bad)
push
mov
push
mov
test
ss
mov
hlt
mov
fcom
xor
mov
stos
dec
sbb
mov
pop
xor
stos
pop
lds
es
and
xor
cmp
dec
xlat
adc
and
cmp
ret
sbb
add
popf
retf
mov
cmps
jmp
and
adc
mov
inc
xor
mov
fdivr
xchg
mov
mov
(bad)
jg
cli
sub
sbb
punpckhwd
or
mov
and
xor
jl
sub
dec
pop
mov
xor
xchg
inc
xor
mov
sar
btr
rcl
rcr
bound
imul
fwait
mov
cmp
mov
or
jmp
imul
out
imul
stos
push
and
sbb
ds
faddp
cdq
xchg
cmc
std
jl
cmp
test
push
mov
jbe
call
and
push
dec
jg
movs
ret
cdq
aaa
xor
and
outs
push
out
mov
mov
mov
in
in
pop
xor
rol
jg
dec
pop
and
and
ja
stos
sbb
xchg
mov
(bad)
dec
push
in
dec
sbb
ins
cmc
xor
enter
jmp
or
ja
stc
outs
test
fidiv
(bad)
js
sub
inc
(bad)
pop
jmp
aam
mov
scas
jb
xor
in
xor
sbb
inc
pop
test
int3
les
hlt
les
dec
rcr
out
mov
add
mov
adc
stos
pop
repz
cwde
jbe
pop
jns
lock
pushf
jae
push
xor
xchg
ss
sub
adc
sbb
loopne
lds
fidiv
xchg
xor
in
les
call
es
call
sbb
xadd
rcl
stos
pop
and
cmp
popf
and
(bad)
jmp
mov
xor
pop
movs
or
dec
push
pop
mov
cmc
pushf
cmc
add
push
xor
lods
in
and
mov
add
rcl
into
fild
movs
mov
add
inc
hlt
inc
(bad)
cmp
(bad)
mov
cs
hlt
clc
repz
icebp
mov
fidivr
fild
dec
xor
lock
es
leave
adc
pop
adc
push
pop
orps
xchg
inc
sbb
sub
aam
dec
(bad)
enter
nop
gs
pop
push
cmp
sbb
dec
sbb
sub
ret
push
cmps
sub
stos
popf
jb
loop
add
ja
mov
mov
gs
push
inc
fsub
dec
adc
mov
cmp
nop
push
cwde
adc
mul
or
jo
hlt
inc
pop
jecxz
inc
repnz
pop
es
xor
lods
pop
mov
movs
sbb
inc
call
sbb
mov
dec
adc
and
dec
adc
push
or
push
ret
dec
jecxz
std
ss
adc
stos
dec
push
jns
push
jns
ret
scas
loope
mov
movs
sbb
rol
adc
sbb
pop
scas
dec
call
je
jmp
add
call
out
mov
gs
stos
push
fcmovbe
pusha
scas
test
push
retf
mov
icebp
and
and
xchg
pop
dec
mov
call
movs
ins
in
fistp
push
rcl
leave
adc
pop
cmp
push
inc
jg
inc
xor
retf
cmp
adc
and
pop
scas
pop
or
cs
mov
add
fsubr
or
or
movs
xlat
push
jo
push
jno
xchg
and
sar
outs
(bad)
push
stos
pushf
xor
das
leave
pop
xor
cmp
add
scas
scas
stc
sahf
inc
icebp
rep
ret
add
and
out
cmps
test
dec
sub
xor
retf
mov
mov
ins
push
ret
pushf
push
sar
pushf
and
(bad)
jo
pop
inc
xchg
adc
ss
mov
sti
add
push
mov
and
scas
fld
out
mov
aam
mov
xchg
ins
enter
mov
fbld
rol
das
int
repz
add
dec
sub
pop
dec
jo
pop
sbb
jmp
mov
dec
sbb
leave
inc
popf
xchg
sub
call
enter
push
pop
xchg
cdq
test
idiv
or
ret
shl
xor
cmp
jno
adc
xor
mov
fwait
sub
fnsave
or
pusha
pop
das
jle
loop
xor
hlt
shl
cmp
daa
push
ret
or
jle
cmps
aaa
and
aam
loope
cld
mov
stos
mov
xor
and
pop
pop
sbb
pop
dec
dec
shl
iret
push
fcomp
stc
pusha
or
retf
push
(bad)
xchg
jne
stos
dec
dec
lock
sahf
push
inc
push
mov
adc
mov
out
mov
pop
pop
cmp
(bad)
ins
jecxz
int
mov
and
out
std
shl
sub
aam
popf
cmp
sbb
add
mov
add
pop
aad
pop
mov
jecxz
inc
mov
scas
leave
enter
int3
popf
mov
ror
ins
jne
jno
mov
xor
rol
push
repz
push
or
dec
dec
mov
pop
cld
clc
pop
mov
sub
mov
test
push
push
int
jmp
fnstenv
pusha
scas
or
add
jmp
scas
jg
push
cmp
imul
fwait
inc
dec
mov
psrlq
adc
inc
je
jle
and
movs
pop
(bad)
shl
xchg
arpl
and
into
adc
cli
xchg
(bad)
stos
sub
in
jmp
cwde
jbe
inc
ret
leave
int3
adc
lea
mov
inc
sahf
call
lods
push
mov
gs
jg
cmp
mov
std
push
scas
cmp
rcl
xor
jne
sub
and
ret
add
push
xchg
retf
xchg
adc
dec
xchg
cmp
inc
out
mov
xor
xchg
cmps
bound
pop
push
aas
mov
mov
rcl
aam
cmp
xchg
pop
mov
pop
mov
push
jmp
in
cld
mov
(bad)
(bad)
fld
retf
in
xor
pop
mov
inc
inc
stos
pop
into
ror
iret
int3
mov
std
mov
mov
ds
or
out
mov
jne
dec
mov
lahf
mov
repnz
push
mov
mov
stos
fisttp
rcl
pop
mov
test
lahf
jecxz
ins
fs
mov
xchg
loopne
jecxz
inc
push
mov
add
dec
jmp
jno
aad
fdivr
mov
cdq
pop
stos
sbb
(bad)
cmp
inc
mov
stc
push
stos
mov
push
bnd
push
jae
sbb
inc
xchg
fdiv
mov
data16
push
dec
cmp
outs
pop
mov
mov
mov
cmp
push
adc
repz
sub
mov
jns
and
aaa
aas
push
aaa
(bad)
adc
mov
test
pusha
mov
cmc
jp
sub
cmp
jo
mov
cmps
mov
pop
cmp
cmps
stc
enter
jmp
pop
neg
in
mov
pop
xchg
pop
or
loop
adc
mov
out
sub
cmp
aas
xchg
xchg
in
scas
add
int3
int
jle
stos
arpl
mov
jbe
repz
stos
movs
lds
loope
dec
push
stos
mov
aam
pop
add
or
iret
loopne
je
sub
mov
imul
push
inc
loopne
mov
jne
out
xchg
xchg
dec
shr
sbb
jnp
push
(bad)
and
mov
daa
dec
sub
test
cmp
push
sbb
push
or
data16
jmp
xor
fiadd
fstp
or
jne
pop
(bad)
call
mov
in
nop
mov
pop
loopne
call
fisttp
jno
mov
xchg
js
rcl
mov
daa
add
call
popf
cmp
in
daa
fimul
aad
add
ffree
pushf
mov
adc
sbb
mov
push
sbb
pop
sahf
xchg
push
scas
xchg
pop
push
fistp
cmp
call
jmp
sub
mov
imul
mov
clc
add
repnz
aas
stc
ret
sub
add
mov
xchg
int
or
shl
enter
or
sbb
pushf
(bad)
pusha
xor
add
imul
jp
test
mov
add
jae
xchg
lock
outs
xor
cli
idiv
adc
jno
loopne
adc
movs
ffree
mov
and
fsubr
mov
aad
les
enter
mov
push
fstp
hlt
test
movs
lods
cmps
in
retf
mov
pusha
adc
xlat
(bad)
dec
repz
(bad)
lods
mov
stc
mov
rcl
adc
cmp
sti
jge
xchg
mov
add
inc
xchg
add
jge
scas
sub
enter
mov
ret
mov
(bad)
fimul
fdivr
mov
push
outs
(bad)
push
(bad)
repz
adc
adc
adc
arpl
mov
outs
out
mov
loope
shl
adc
shr
push
int
rcr
push
or
mov
in
jmp
push
cmp
pop
out
adc
popf
popf
dec
jne
out
mov
sbb
mov
sahf
adc
mov
imul
mov
lea
pop
leave
ja
dec
xor
cmp
inc
add
dec
xchg
leave
jno
popa
sbb
ss
push
lds
out
cmp
xor
mov
cwde
xlat
in
nop
sub
add
sti
mov
mov
xchg
addr16
fisubr
ffree
enter
jbe
adc
pop
jo
pushf
icebp
push
rol
inc
mov
add
xchg
idiv
movs
in
mov
cwde
or
ja
pop
fmul
adc
jne
sbb
and
or
and
bound
adc
add
into
add
add
stos
pop
pop
std
mov
push
nop
xchg
xor
or
push
es
in
pop
xor
inc
pushf
mov
mov
scas
cwde
aaa
and
xchg
adc
int
xlat
rol
push
jno
(bad)
psubd
push
mov
lods
sbb
push
lods
jmp
pop
pop
xchg
push
xchg
and
or
push
mov
xchg
dec
ins
adc
enter
pushf
fs
addr16
cmp
sti
jo
das
sbb
sahf
and
lods
pop
jmp
arpl
mov
jne
cmp
cs
inc
jns
push
or
outs
mov
out
jae
inc
cld
pop
sbb
push
and
and
pop
fisub
jmp
ror
pop
jne
stos
(bad)
xor
and
leave
stos
mov
mov
push
xor
pop
in
dec
retf
daa
xor
call
cdq
sub
ins
and
cmp
(bad)
out
jae
or
and
mov
clc
add
(bad)
adc
add
loop
jb
xor
mov
lods
push
iret
gs
jb
adc
cmp
cmp
adc
rcl
scas
xor
mov
mov
pushf
movs
jg
mov
pushf
sbb
push
xchg
mov
loope
mov
mov
jge
outs
sub
test
cs
hlt
mov
push
jle
pop
dec
loope
sti
sub
ror
test
cli
or
ficomp
push
repz
sbb
xor
out
adc
jmp
aam
jle
pushf
pop
mov
mov
jo
call
jns
div
jns
xor
rol
push
add
rol
scas
xchg
pop
add
inc
dec
or
and
ret
mov
mov
lods
cmp
mov
jmp
dec
adc
retf
sbb
jo
dec
mov
xchg
imul
imul
inc
sub
dec
dec
dec
mov
das
xor
fld
aas
dec
or
push
or
out
pop
xchg
push
add
mov
int
mov
gs
dec
mov
nop
test
(bad)
mov
sahf
bound
stc
push
add
rcr
push
pushf
cmc
jne
out
jnp
inc
mov
test
imul
mov
shl
mov
out
cmps
cmp
sbb
mov
into
dec
cmp
bound
and
cmp
fistp
out
test
arpl
test
xchg
jae
stos
xchg
test
adc
adc
pop
push
pop
sub
inc
mov
mov
xor
cli
jo
lahf
dec
mov
push
push
dec
cmps
(bad)
lea
fidivr
fisttp
stos
rcl
test
cmp
pop
cld
sub
imul
push
jg
out
dec
xchg
cmc
int
adc
pop
out
cmp
stos
pop
adc
or
jl
xor
test
pop
push
dec
sub
inc
hlt
pop
popf
daa
(bad)
mov
rcr
mov
fwait
cdq
arpl
adc
sbb
adc
je
jae
push
inc
xor
es
cmp
mov
dec
icebp
adc
icebp
fucomi
or
and
dec
mov
or
mov
push
(bad)
aaa
mov
jg
mov
jne
adc
addr16
popf
fwait
jbe
nop
(bad)
xchg
mov
adc
pop
cdq
bound
scas
ja
sahf
mov
cmp
pop
std
mov
dec
fcomp
test
cdq
sbb
sub
call
cmc
adc
cld
mov
mov
enter
js
add
cmps
rcl
add
dec
out
sub
inc
in
and
push
xchg
push
cwde
(bad)
jne
jne
pusha
(bad)
adc
or
mov
inc
or
mov
cmc
mov
or
es
xor
mov
outs
and
inc
push
dec
cmp
pushf
sub
retf
mov
jb
cdq
jne
sti
shr
mov
leave
retf
dec
sbb
mov
jno
test
or
shl
or
xor
lds
inc
mov
cmp
add
xchg
in
fidiv
ja
pop
ja
shr
arpl
mov
xchg
jo
mov
jmp
or
xor
rol
call
mov
movs
outs
mov
int
int
cdq
cmps
dec
sub
xchg
jge
jb
lahf
xlat
idiv
mov
cmp
xchg
popf
shr
pop
push
jbe
jno
pop
test
pop
pop
xchg
movs
or
cmp
outs
jnp
cmp
adc
cmc
mov
cmp
out
and
pusha
imul
test
xchg
jae
imul
xor
xor
add
cmp
hlt
xor
dec
.byte
pop
