imul
sub
call
ret
push
das
jg
mov
mov
and
int3
add
in
mov
(bad)
inc
ud0
push
push
call
add
mov
mov
pop
ret
aaa
idiv
add
in
push
push
and
push
mov
mov
cmp
jge
inc
add
mov
xor
add
push
add
dec
cmp
(bad)
in
in
rcl
mov
inc
adc
pop
push
sahf
loop
out
std
ficomp
ss
pop
add
jp
ret
call
mov
je
cmp
jb
push
mov
test
je
sub
(bad)
mov
pop
mov
adc
sbb
ret
pop
jne
mov
cmp
jae
mov
(bad)
sub
cmp
jb
or
ja
mov
push
les
lahf
fnstsw
cwde
add
add
into
inc
in
std
xlat
je
or
or
add
test
je
push
(bad)
(bad)
icebp
add
push
jmp
mov
sub
push
push
push
leave
repz
sbb
push
push
push
add
sub
into
xor
inc
daa
pop
mov
fisub
sbb
sbb
or
fiadd
xor
dec
or
inc
adc
shl
adc
sar
cmova
cmp
jbe
push
jne
lea
cmp
imul
(bad)
push
mov
xchg
add
stc
pop
jmp
push
inc
cmp
enter
cmp
pop
jb
mov
mov
lea
daa
jle
add
jmp
es
push
scas
inc
jbe
popf
add
dec
adc
mov
loopne
and
ror
dec
jbe
ss
je
push
push
aaa
xor
ins
sub
arpl
push
add
xchg
push
push
xor
sbb
xor
mov
jb
inc
or
js
pop
cmps
cmp
(bad)
adc
sbb
add
adc
push
pop
pop
ds
cwde
jg
aas
sbb
pop
mov
jmp
jl
dec
add
or
or
pop
pop
das
adc
pop
or
push
pusha
inc
jecxz
inc
stc
jne
getsec
jp
or
pop
pop
jmp
xchg
pop
and
xor
jp
mov
dec
inc
pop
mov
mov
cmp
test
je
jns
out
mov
xchg
push
shl
pop
push
and
jge
mov
xor
ret
mov
mov
shl
(bad)
(bad)
ja
cmp
jae
push
fnstcw
jmp
test
jne
and
ret
lods
in
loop
mov
test
setne
cli
call
push
mov
cli
jb
ror
ret
rcr
ret
mov
cmp
mov
ss
lea
xchg
push
cmp
arpl
bswap
adc
pop
jle
sbb
pop
mov
call
cmp
jbe
adc
sub
jl
cld
xor
mov
pop
adc
jne
retf
shr
dec
icebp
lahf
(bad)
cmp
jbe
push
pop
xchg
fdiv
lea
mov
mov
lea
inc
sti
mov
mov
push
mov
sub
in
mov
push
adc
rol
sub
adc
loopne
add
mov
jle
loop
je
add
retf
pop
cmp
cmovle
jnp
scas
pushf
call
das
adc
ror
int3
dec
cmp
add
leave
jmp
mov
mov
and
and
mov
loopne
inc
cld
jmp
mov
and
mov
sbb
mov
lds
std
mov
fadd
push
lea
or
pop
jecxz
aaa
mov
fcomp
div
add
mov
fdivp
dec
shl
jmp
daa
and
inc
stc
mov
mov
cmp
je
fisubr
into
push
dec
sbb
(bad)
pop
xor
pop
adc
fmul
xor
sbb
aas
add
push
retf
retf
pop
dec
lds
scas
rol
push
mov
sti
add
cli
xchg
xchg
xchg
inc
mov
pop
adc
ror
xor
push
xchg
int
js
pop
or
outs
xchg
adc
mov
xor
dec
adc
jbe
into
sbb
sbb
add
or
adc
or
dec
add
ret
outs
push
fadd
jbe
je
loopne
pop
and
push
pop
cmp
dec
ds
clc
test
push
enter
add
adc
xor
loopne
and
enter
xor
push
aam
inc
pop
rol
clc
imul
or
jmp
push
mov
mov
mov
test
mov
out
mov
out
js
xor
aam
cmps
std
pop
rcl
ss
or
mov
mov
pop
ja
adc
rcl
test
push
cmp
mov
sbb
mov
mov
inc
push
push
xor
lock
loop
push
test
mov
mov
or
rol
sub
in
push
xor
push
and
jl
ror
clc
mov
ret
mov
push
mov
ret
mul
das
mov
or
lahf
div
sub
or
xor
add
es
inc
jo
mov
add
in
or
iret
in
std
or
stos
inc
adc
ins
mov
mov
fdiv
jns
neg
add
mov
add
mov
sbb
setl
mov
xor
push
and
inc
shl
pop
ret
jle
add
jb
or
ret
fistp
push
mov
jle
push
mov
sbb
fs
pop
std
and
add
ret
sub
je
push
out
pop
push
cmps
out
lods
mov
or
mov
inc
test
sbb
dec
adc
cmp
push
lea
pop
mov
mov
add
repz
fisubr
push
mov
adc
mov
mov
push
sbb
add
sti
add
sbb
cmove
pop
jl
jl
adc
cld
cli
mov
mov
ret
cmp
ja
in
call
lahf
sub
push
push
push
xor
pop
push
nop
in
nop
fcom
std
outs
push
mov
fcom
call
retf
cmp
sbb
mov
pop
xchg
xchg
inc
popa
push
push
push
jnp
cld
mov
clc
or
inc
je
jle
or
jge
lea
ja
outs
(bad)
mov
in
mov
shl
jo
sbb
inc
in
ins
sub
rcl
fmul
jne
retf
pop
add
enter
cmp
aaa
xor
add
sub
or
pop
mov
movhps
push
cmp
test
test
in
xchg
add
les
gs
(bad)
jge
add
adc
sub
jbe
mov
add
shr
or
popf
pushf
mov
xor
xlat
add
cmp
ins
xor
js
aad
inc
cli
pushf
sub
jne
ret
cmp
(bad)
clc
loop
mov
inc
outs
rol
dec
movs
test
pushf
dec
ret
or
out
(bad)
rol
dec
pop
leave
jne
mov
dec
xor
sub
cmp
lock
fsubr
sbb
dec
or
pop
(bad)
in
jg
sub
addr16
add
dec
add
push
(bad)
icebp
ds
ins
pop
test
pop
jo
mov
mov
or
loope
jg
jp
mov
test
and
ss
pop
sub
sbb
push
lock
nop
or
jno
push
or
popf
mov
mul
int3
fcom
repz
fsubrp
sub
adc
mov
mov
pop
sbb
hlt
loope
mov
adc
jb
stos
or
std
xor
push
mov
inc
push
lea
xor
cld
in
test
fadd
xchg
push
mov
and
mov
jbe
in
sti
retf
mov
jbe
push
pop
sub
lods
cld
ja
pop
mov
(bad)
push
jo
dec
mov
mov
neg
cli
pop
fsubr
fist
retf
pop
add
imul
and
fisttp
sub
and
mov
adc
inc
verr
pushf
pop
cmp
adc
cmps
sub
xchg
je
push
aaa
push
push
mov
jl
adc
sbb
jl
rcr
sub
pop
adc
daa
js
and
add
out
popw
fs
mov
push
mov
ret
fstp
mov
fs
std
jno
inc
fsubr
inc
rol
add
sbb
je
ror
in
add
mov
(bad)
or
clc
cmp
out
sub
cdq
in
adc
cmps
pusha
addr16
or
push
push
stc
jg
mov
push
mov
xor
sub
or
cdq
jns
sbb
mov
pop
lock
lods
add
inc
push
push
hlt
xchg
pop
jmp
dec
push
inc
xor
leave
ss
adc
jo
ja
inc
xchg
xor
rcr
jp
pop
das
ins
inc
push
or
aaa
ret
pop
movs
daa
push
cmp
retf
add
and
lea
add
stos
or
pushf
fwait
call
xchg
pop
push
sub
lock
cmp
dec
push
mov
out
retf
xor
jle
push
jns
test
jno
std
es
push
sub
inc
(bad)
cmp
daa
sbb
fmul
cmp
xchg
rcr
mov
sbb
add
test
mov
push
jmp
add
fcom
lds
or
ja
test
ja
cmps
pop
jp
adc
fwait
add
jo
js
pop
daa
sbb
inc
and
mov
mov
pop
ret
or
pop
cwde
and
dec
ins
aas
pushf
ss
xchg
pop
lods
push
xchg
inc
sbb
adc
xchg
jmp
das
mov
bound
stc
outs
adc
jne
(bad)
out
test
push
adc
mov
test
jne
pop
pop
or
pop
pop
fisttp
jmp
pusha
out
dec
sbb
rcr
stos
add
pop
and
add
pusha
mov
dec
xor
loop
push
or
or
cmp
cmp
or
gs
sbb
adc
adc
xchg
xchg
(bad)
aaa
mov
cmps
push
fs
or
and
mov
xor
jnp
stos
scas
psubsb
pop
jbe
mov
pop
(bad)
pop
retf
sbb
inc
xchg
cmp
xor
lahf
push
rep
push
fcmovnbe
js
imul
mov
push
(bad)
shl
mov
retf
inc
leave
cmp
add
mov
test
dec
cmp
jl
out
int
xor
and
shr
mov
fcmovnu
and
out
shl
mov
mov
mov
jl
loope
adc
js
out
cmp
cmp
je
sub
sbb
out
cmp
cmp
cs
cmp
push
or
mov
inc
sub
pop
idiv
ror
rcr
push
scas
icebp
pop
push
or
aam
push
mov
push
js
cwde
and
or
inc
sub
imul
ror
shr
loopne
xchg
add
cwde
inc
push
add
xchg
imul
push
or
(bad)
mov
test
cmp
scas
cmp
cmp
pop
ins
push
outs
inc
dec
push
push
inc
inc
or
sbb
stos
adc
ja
jbe
jbe
ror
add
cmp
movs
loopne
mov
cmp
div
inc
bnd
or
aad
retf
push
stos
xchg
xor
mov
or
icebp
or
sbb
or
pop
loope
fucom
or
or
add
pop
pushf
or
pop
sbb
sub
sbb
push
push
mov
test
add
aad
mov
mov
jp
jno
lods
ds
retf
push
xchg
repz
sub
sbb
or
loop
jmp
xor
cli
fnstsw
imul
je
push
push
sar
and
mov
ret
and
sbb
sub
pop
or
dec
lock
pushf
bound
dec
adc
int
mov
and
jl
mov
sbb
jp
sbb
pop
push
adc
ret
dec
out
in
lahf
lods
jmp
pop
fist
test
pop
mov
imul
loopne
mov
pop
or
pushf
ror
sub
cmp
jne
frstor
jecxz
mov
or
dec
adc
adc
push
sbb
stc
or
or
jge
mov
jp
xor
pop
jmp
push
xor
xchg
and
add
xor
fs
inc
pop
mov
sbb
adc
xchg
lea
jg
test
test
or
cmp
xor
add
push
adc
mov
jl
add
ss
jo
in
or
bnd
les
push
popf
and
add
push
mov
inc
sub
sbb
add
dec
(bad)
fcom
imul
pop
sub
cmp
or
test
pop
cmp
sbb
ret
outs
aad
fadd
xbegin
aaa
sub
je
out
xchg
lods
jmp
out
or
sbb
xchg
inc
pusha
sub
push
jb
je
sub
mov
mov
fistp
ret
xchg
call
mov
ret
cmp
je
sub
fwait
jge
cmp
sub
xchg
sbb
sub
mov
shl
movs
je
sub
je
mov
or
test
movs
imul
rcl
fst
pop
cmp
mov
adc
cmp
and
jmp
xlat
test
mov
test
add
pop
push
in
lds
out
mov
and
imul
dec
cwde
dec
adc
or
dec
pop
push
mov
pop
mov
push
js
pop
add
jl
out
add
into
stos
cli
ja
inc
sub
enter
retf
sbb
pop
arpl
inc
rol
cmp
jb
out
xchg
xabort
mov
cmp
ror
jg
sbb
std
jne
lea
xor
and
pop
adc
loopne
nop
lea
pop
pop
sub
cmp
xor
mov
outs
bound
adc
jle
adc
addr16
pop
inc
pop
mov
mov
or
add
imul
aas
adc
adc
shl
xchg
add
push
mov
jmp
add
or
add
cmc
int3
mov
call
js
pop
(bad)
int
test
test
add
sbb
jmp
repz
nop
add
or
add
outs
add
mov
imul
add
stos
lock
fisub
mov
pop
mov
je
pop
and
loop
and
int
js
lea
mov
int3
mov
inc
(bad)
test
enter
dec
stc
cs
add
in
sahf
loopne
popa
add
sub
add
rcr
mov
pop
pop
sub
or
push
mov
mov
loope
(bad)
stc
or
xor
mov
mov
xor
mov
adc
(bad)
sete
mov
neg
add
xchg
out
cmp
fisttp
sti
push
or
sbb
jne
inc
inc
dec
data16
add
xchg
mov
add
call
lods
or
adc
push
push
and
clc
aam
sbb
cmp
mov
add
aas
into
inc
add
sub
mov
sahf
inc
mov
(bad)
mov
stos
and
pop
std
or
fistp
pop
test
stc
fsubr
cld
mov
ret
int
push
test
mov
push
dec
cmp
mov
jnp
sbb
xor
pop
mov
adc
jne
cmp
inc
add
js
jl
inc
and
daa
xchg
bound
div
jge
or
sbb
mov
inc
mov
sbb
lahf
lods
loopne
loopne
xchg
adc
push
sahf
xor
popa
cmp
xor
dec
cs
mov
sub
fs
push
ss
add
lahf
cld
jnp
push
mov
jo
mov
xchg
out
pop
ret
jo
adc
sar
add
sar
add
xchg
add
sub
sub
clc
loopne
int
pop
je
or
je
sub
(bad)
pop
add
jp
xchg
or
and
jl
jmp
pop
inc
add
jnp
popa
scas
ins
add
or
jg
fst
xor
cli
sbb
sub
add
adc
inc
ficomp
pop
fisub
js
fistp
jno
mov
dec
pop
mov
adc
(bad)
std
mov
dec
jns
mov
cmp
sbb
mov
adc
(bad)
jne
pop
or
test
xlat
cmp
xor
push
xor
push
push
or
mov
fiadd
mov
dec
fld
mov
jmp
out
sbb
xchg
daa
push
fidivr
icebp
mov
or
inc
aas
pop
add
lods
jp
or
inc
pop
pop
pop
cmp
push
neg
or
dec
int
pop
fucomp
sbb
jge
or
sbb
fwait
xor
std
cmp
ja
ins
xor
test
inc
jno
repnz
daa
add
push
jp
cmp
or
imul
pop
sbb
add
cmp
mov
jnp
jl
sbb
sbb
das
sub
cmp
xchg
or
loopne
add
add
xor
std
cmp
pop
imul
retf
add
pop
das
lock
push
jl
push
popa
mov
and
xchg
js
dec
cmp
mov
jno
sub
adc
push
loopne
cmp
sti
ds
push
add
adc
(bad)
pop
in
jne
mov
sbb
out
add
push
lods
xchg
push
fild
xor
loop
pop
add
mov
add
ret
jns
or
fistp
push
mov
push
push
(bad)
xor
pop
xor
pop
pop
mov
push
nop
mov
or
loopne
je
push
dec
cs
xchg
or
(bad)
call
int
inc
(bad)
test
cmp
lea
jne
xchg
or
adc
lea
in
mov
cmp
add
or
mov
bswap
stc
pop
pushw
pop
xor
das
mov
add
in
push
adc
jge
lods
mov
push
(bad)
(bad)
mov
xchg
pusha
mov
cdq
add
fisubr
pop
cmps
or
push
cmp
fstp
sbb
lock
push
and
jns
fsub
jne
or
jmp
aad
cs
mov
mov
push
dec
xor
fadd
pop
je
jo
dec
pop
mov
xchg
xor
dec
cmps
mov
adc
mov
fmul
ja
or
ds
add
mov
call
or
lock
dec
ss
popa
mov
sub
cmp
(bad)
in
mov
and
scas
push
and
lock
lods
fild
jne
jle
test
pop
jg
dec
inc
sbb
outs
fwait
rcl
push
popf
push
neg
sbb
and
add
mov
fsub
test
aaa
mov
int
adc
or
inc
jmp
inc
or
mov
xor
shl
stos
outs
lock
adc
pop
adc
add
sub
aas
fs
sbb
jl
rcr
lds
mov
imul
push
jb
push
add
pushf
nop
xchg
xchg
rol
pop
pusha
sub
dec
(bad)
sbb
or
cs
pop
and
jl
sub
jle
push
push
inc
pop
sbb
jno
pop
bound
mov
or
xlat
mov
test
or
(bad)
xor
in
outs
sbb
or
es
pushf
iret
mov
pop
or
xor
ins
dec
je
adc
ins
js
mov
out
das
push
test
cmc
xchg
das
pop
lock
(bad)
(bad)
(bad)
inc
xor
pop
or
cmp
cmps
into
ins
push
sub
jno
inc
shl
popa
mov
icebp
or
sbb
fld
and
xor
ins
push
loopne
ror
push
push
pop
add
or
pop
jae
icebp
and
cli
fsub
adc
xor
pop
xor
stos
cmp
mov
adc
xchg
mov
add
repnz
int3
movs
push
lock
aas
pop
or
int3
es
fs
daa
hlt
cmps
adc
daa
pop
imul
push
gs
pop
adc
dec
add
out
jne
cmp
loopne
bnd
popf
out
xor
jl
xor
push
mov
push
jmp
ret
adc
lahf
das
mov
adc
adc
mov
lds
xor
mov
push
cmp
jne
cmp
mov
push
jle
add
jne
push
int
icebp
mov
data16
mov
xor
sub
popf
jns
not
test
enter
or
push
loopne
xor
aaa
push
retf
mov
cwde
push
cld
inc
sbb
movs
pop
pop
(bad)
push
push
ss
test
and
jmp
xchg
sub
mov
inc
jp
ss
sbb
daa
in
and
add
inc
leave
out
dec
adc
add
or
add
sbb
rcl
or
mov
bound
dec
add
pop
push
xchg
or
jb
inc
xchg
add
pop
dec
and
scas
arpl
imul
pusha
mov
cdq
push
mov
pushf
xchg
or
mov
dec
imul
jne
adc
xchg
enter
pushf
std
mov
cmp
in
jmp
cld
or
xchg
xchg
dec
mov
push
mov
into
push
bound
mov
cmp
xchg
mov
sti
pop
(bad)
mov
xchg
lock
mov
je
cmp
lods
add
push
or
xchg
nop
sbb
mov
clc
cld
mov
add
cmp
shl
jg
loopne
xor
push
cmps
ins
icebp
cwde
or
cmp
aam
jl
jg
gs
jl
jg
cmp
in
jle
add
mov
mov
push
push
push
hlt
sbb
sbb
in
mov
retf
mov
clc
loopne
pop
iret
dec
pop
sbb
mul
add
push
into
and
loope
xor
jne
arpl
cmc
test
jne
xchg
ror
pop
iret
adc
dec
int
lea
fcomi
inc
inc
movs
pusha
sti
push
les
sbb
icebp
adc
lds
pop
mov
pop
call
in
mov
or
adc
add
xor
or
sub
scas
jl
mov
push
pop
cmp
sbb
ds
icebp
mov
xor
push
nop
sub
jecxz
adc
push
ins
jmp
popa
sbb
pxor
or
dec
mov
mov
add
cmp
pop
popf
jns
sbb
(bad)
js
xor
pushf
scas
or
add
sbb
or
jne
or
jl
push
sbb
sub
mov
and
cmps
sub
lds
fwait
pop
inc
mov
pop
sbb
inc
loop
jp
xlat
rol
fadd
mov
pop
push
je
mov
add
mov
in
inc
movnti
push
push
hlt
addr16
xor
jmp
mov
push
ficomp
mov
xchg
ret
push
mov
pop
xchg
push
or
rcl
adc
outs
sbb
in
xor
and
or
or
jae
ins
mov
xor
sbb
pop
pushf
daa
mov
add
or
imul
jne
cli
lea
mov
and
mov
push
and
call
and
add
jl
clc
sbb
jae
adc
lods
rol
cmp
aaa
icebp
aam
outs
add
sub
mov
fbld
xchg
mov
ret
push
push
mov
or
mov
idiv
sbb
add
ds
arpl
test
fdiv
dec
cmp
cmps
fnstenv
pusha
xchg
jge
dec
repz
cmp
add
mov
jbe
push
outs
inc
pop
push
adc
js
pop
push
jmp
clc
xchg
xor
aaa
jmp
enter
int3
cmp
jl
ss
jg
mov
cmp
jl
pop
or
lahf
push
xor
outs
dec
jle
push
push
add
iret
ret
dec
hlt
pop
add
addr16
pushf
(bad)
pop
pop
mov
push
test
pop
mov
loope
add
or
arpl
cmp
pop
int3
jmp
pop
jg
add
or
xor
add
dec
cmp
push
pushf
jb
fcom
(bad)
cmps
push
inc
inc
push
xor
dec
mov
mov
adc
aam
cmp
lea
lahf
dec
dec
sub
stos
enter
test
mov
push
mov
es
and
sub
shl
push
shl
mov
push
sub
jne
les
add
test
lahf
aam
push
inc
retf
test
fld
xchg
sub
popf
xlat
cmc
jb
adc
sbb
and
pop
(bad)
div
push
test
lock
push
push
rcr
add
pop
setae
neg
jl
and
mov
sub
popa
scas
rcr
dec
inc
mov
push
inc
push
xchg
xchg
les
or
cmp
jl
pusha
push
test
jmp
pop
fadd
mov
ret
mov
cld
(bad)
jle
nop
icebp
mov
dec
cmp
jl
jmp
in
add
sbb
pop
cmp
jb
daa
mov
mov
lea
push
sbb
ret
test
inc
pop
mov
mov
jle
loopne
add
push
jns
add
xor
mov
adc
out
cmps
cmp
nop
ins
mov
sbb
or
fcomp
xor
fisub
push
or
inc
xchg
sub
mov
out
sub
pushf
ins
inc
mov
paddsb
jne
cmp
mov
outs
jbe
out
mov
and
sub
or
mov
jmp
add
inc
and
xor
repnz
inc
jg
enter
mov
arpl
sbb
loop
inc
mov
xchg
jg
adc
mov
mov
cmp
inc
int3
enter
add
lods
retf
cld
cs
movs
pop
js
mov
dec
gs
in
cwde
shr
daa
cld
pop
mov
cld
mov
add
jbe
xchg
test
shr
pop
out
scas
cmp
mov
imul
jl
jg
mov
push
jl
test
jbe
pop
js
rol
mov
mov
adc
lods
mov
xchg
leave
cmp
loop
dec
push
aad
push
jo
cli
data16
xor
rol
daa
sub
push
cmc
lahf
or
adc
vcomiss
and
dec
cmps
(bad)
clc
or
push
or
pop
in
mov
jl
and
je
xlat
cmp
mov
das
and
loopne
aaa
mov
push
xor
dec
retf
or
jno
inc
es
ror
mov
sub
imul
mov
nop
push
pop
ror
outs
mov
test
push
daa
cld
sbb
repnz
inc
shl
mov
es
cmp
les
or
mov
inc
and
push
sub
mov
test
sar
jbe
sbb
call
dec
add
mov
inc
fdiv
sub
clc
xor
jns
sar
test
iret
add
cmp
sete
into
mov
dec
cmp
jmp
fcmovne
add
enter
pop
or
xchg
or
jmp
stc
add
or
or
enter
mov
ins
scas
inc
enter
or
pop
inc
jmp
xchg
adc
pop
add
inc
add
lods
jge
jne
test
dec
scas
mov
cli
add
jae
fs
inc
or
test
mov
mov
cmp
es
add
inc
addr16
cwde
push
xchg
fincstp
enter
inc
xor
cmp
cmp
jmp
cdq
dec
lods
cmp
pop
rcl
pusha
push
inc
xchg
mov
sbb
push
popa
ins
sub
mov
pusha
sbb
ins
rcl
hlt
add
cmp
mov
pop
cmp
ds
(bad)
xchg
dec
fsubr
push
mov
cdq
jle
pop
fstp
or
xchg
mov
sahf
jle
inc
pop
clc
cmp
adc
adc
xor
sub
popa
clc
mov
cmp
rol
add
shr
scas
add
or
adc
pop
push
mov
cld
test
sbb
and
stc
dec
pop
xor
inc
sub
rol
or
(bad)
(bad)
mov
jns
enter
lock
sbb
dec
sbb
cmp
in
imul
js
sbb
add
jmp
arpl
xchg
and
add
or
imul
lea
mov
stos
dec
ins
push
ds
add
jmp
dec
adc
test
push
mov
gs
xor
repz
inc
sub
push
and
or
add
jbe
inc
sbb
push
sbb
sub
mov
cmp
mov
ret
jl
cmp
jae
mov
adc
aaa
jmp
add
push
dec
ins
jmp
out
movs
pop
push
xchg
fsub
fcomp
mov
dec
test
mov
shl
fs
inc
adc
push
out
into
pop
mov
cmps
or
popf
movs
fs
sar
mov
push
mov
ret
or
ja
(bad)
sbb
pop
jle
push
jmp
or
std
in
sbb
sub
pop
add
xchg
mov
jns
add
sub
ficomp
loope
pop
mov
mov
push
xor
adc
or
adc
cmp
push
sbb
data16
sub
dec
fmul
mov
or
push
icebp
push
push
or
jmp
pop
pop
add
jge
and
pop
mov
sar
or
lods
je
(bad)
jbe
push
test
sbb
movs
mov
cli
addr16
ins
push
lods
xchg
add
push
ja
push
les
ds
push
sti
and
mov
push
mov
outs
dec
xchg
xor
push
mov
add
out
je
pusha
and
rol
dec
push
push
and
pop
adc
mov
mov
(bad)
jmp
sub
jp
cmove
dec
add
es
jmp
inc
push
iret
inc
lock
xor
popf
ffree
ss
sub
stc
retf
mov
call
call
cmp
popa
(bad)
sub
push
push
(bad)
mov
pop
xor
std
push
pop
xchg
call
dec
mov
dec
adc
xchg
(bad)
lock
bound
mov
inc
dec
dec
mov
xchg
xor
pushf
rcr
hlt
or
add
push
shr
mov
mov
pop
adc
aaa
arpl
adc
jne
mov
mov
ret
inc
push
rcr
xor
adc
shl
mov
icebp
mov
cmps
jge
sbb
mov
jle
fst
sahf
xchg
mov
and
or
adc
adc
or
adc
sub
mov
xchg
push
movups
push
adc
dec
sub
cmp
and
movq
and
pop
mov
jbe
adc
ds
jmp
dec
pop
mov
dec
pop
add
es
test
push
ficom
or
sbb
scas
and
jne
jae
xchg
mov
push
call
mov
adc
(bad)
or
shr
adc
addr16
sbb
pop
sti
mov
ins
or
sub
push
mov
push
pop
xlat
mov
popa
bound
int3
fisttp
sbb
daa
pop
rcr
sbb
adc
xor
scas
xchg
pop
daa
aam
in
lahf
inc
dec
test
adc
add
inc
fcmovb
mov
mov
fisub
adc
xchg
xchg
clc
jne
push
inc
mov
dec
jg
cmp
mov
pop
add
lds
pop
cmp
fwait
mov
cmp
mov
jl
retf
rcl
jne
xchg
and
call
shr
xchg
mov
pop
dec
xchg
cmp
pop
loope
lock
js
(bad)
mov
jae
lahf
dec
int
rcl
fisttp
xchg
cmp
inc
retf
push
mov
ja
push
imul
es
push
push
sbb
fmul
push
cmp
mov
or
call
aad
push
or
inc
jbe
xchg
add
xor
mov
scas
jbe
je
je
push
push
sbb
jae
ds
or
call
fmul
cld
js
mov
test
inc
je
push
jg
mov
jmp
add
push
scas
push
sahf
inc
inc
inc
inc
xor
add
lea
xor
push
push
dec
ret
popf
ror
cmps
aas
cmc
loop
mov
push
push
sub
ins
sub
mov
test
(bad)
fistp
mov
mov
inc
mov
cmp
jb
adc
cld
push
sbb
inc
icebp
and
pop
xchg
jle
outs
inc
jle
sbb
cmp
sbb
xchg
sar
(bad)
fcom
mov
and
call
dec
inc
sbb
mov
cmp
adc
adc
icebp
sub
jge
pop
aam
je
mov
sub
or
mov
imul
and
cmp
sahf
push
aas
mov
lods
push
or
add
push
jle
movs
sbb
retf
pop
out
dec
outs
adc
mov
cmp
jl
push
jp
loopne
(bad)
xchg
cld
adc
(bad)
jmp
adc
adc
inc
xlat
popf
addr16
add
js
out
in
sahf
hlt
dec
ja
and
pop
test
adc
sbb
neg
push
xor
pop
dec
cld
xchg
icebp
mov
fsubr
push
push
dec
push
daa
or
adc
(bad)
mov
adc
mov
add
in
sub
inc
inc
sub
aaa
int3
nop
xchg
mov
lock
add
pop
ret
loop
call
les
mov
hlt
test
cmp
inc
cli
jne
cs
push
push
sub
popf
call
mov
xor
or
push
xor
(bad)
gs
xchg
ret
and
ret
inc
fsubr
popa
sbb
cmp
(bad)
adc
mov
and
mov
push
test
add
sbb
mov
adc
retf
fwait
not
bound
add
je
popf
les
enter
and
push
lods
or
and
ss
add
(bad)
dec
jmp
adc
inc
dec
sahf
mov
out
mov
xchg
inc
cmps
sbb
adc
mov
jmp
jo
cmp
sub
mov
pop
or
or
test
or
cmp
or
cmp
or
out
push
fmul
rol
xchg
push
push
(bad)
or
int
mov
inc
das
mov
ins
mov
jmp
push
sbb
push
xchg
inc
push
add
int
stos
cmp
mov
pushf
sti
cmp
cmp
je
mov
sbb
stos
xchg
cmp
mov
mov
mov
inc
rol
adc
leave
neg
in
iret
int
jmp
retf
or
movups
jmp
push
cmp
cmc
jp
push
inc
lds
and
idiv
dec
ror
pop
iret
sub
enter
add
push
adc
push
or
into
sbb
dec
pop
aas
fadd
pop
(bad)
adc
mov
push
test
lea
jg
push
jg
jg
cmp
mov
add
lea
ror
dec
int
dec
cmp
ret
jge
sbb
and
pop
dec
in
mov
adc
nop
mov
jne
pop
mov
mov
mov
jmp
cmp
dec
dec
mov
push
add
jo
inc
push
inc
push
dec
movs
push
mov
sub
pop
loopne
push
pop
or
or
hlt
enter
pop
mov
pop
dec
inc
or
push
mov
retf
adc
cmps
add
adc
mov
jo
ret
and
mov
and
mov
cmp
mov
mov
add
xor
jb
sbb
sbb
ror
mov
inc
lds
inc
int
or
dec
dec
je
mov
push
push
inc
loopne
push
jae
mov
adc
and
sbb
call
lock
pop
adc
mov
add
sbb
xchg
adc
sahf
adc
jg
add
xchg
ret
loop
cmp
pop
pop
pop
push
jg
cdq
rdtsc
or
add
push
push
mov
mov
mov
inc
aas
xchg
xor
cmp
add
movs
pop
scas
xchg
pop
in
scas
(bad)
mov
pop
(bad)
in
aas
pop
inc
stc
cmp
jae
push
mov
or
movs
push
and
or
push
test
movs
add
das
sete
rcpps
mov
iret
cmp
pop
xor
push
sub
mov
je
xor
mov
jg
jl
jbe
bound
xor
mov
sub
adc
inc
out
popf
xchg
add
jne
or
xchg
or
lock
fnsave
pop
jl
test
inc
fild
push
xchg
cs
dec
push
ror
inc
pop
xor
push
push
mov
add
adc
rcr
push
sahf
repnz
mov
pop
or
jne
sub
and
pop
js
test
in
mov
pop
sahf
ficom
or
push
push
movs
lock
jge
ret
push
jne
sar
cmp
lods
test
cmp
adc
mov
pop
iret
jo
adc
mov
ss
sub
add
push
push
and
cmp
adc
jnp
xchg
aaa
or
pusha
and
or
mov
sbb
mov
pop
pop
sbb
or
add
inc
xchg
(bad)
mov
pop
pop
mov
pop
lock
lea
or
leave
ret
inc
arpl
inc
add
inc
stos
idiv
cmps
jno
xor
mov
push
mov
das
mov
or
sbb
movs
cmp
pop
retf
jle
sbb
adc
adc
out
inc
fistp
fisttp
pop
xor
pop
push
std
mov
mov
nop
ret
cmp
mov
adc
dec
pop
pop
push
jae
daa
cmp
mov
mov
pop
ret
add
ss
jnp
sete
mov
call
mov
or
je
dec
dec
popf
dec
iret
jecxz
sub
imul
sbb
dec
pop
mov
imul
add
add
outs
ret
retf
fsubr
ret
sub
enter
add
(bad)
leave
adc
divsd
repnz
sbb
enter
rol
cmp
sub
inc
add
jmp
fist
imul
(bad)
cld
mov
imul
ss
push
cmp
adc
ins
int3
fimul
sbb
mov
jae
pop
pop
adc
add
or
and
retf
jecxz
and
mov
dec
in
ret
ins
cmp
and
inc
pop
cmp
and
or
xor
mov
mov
mov
mov
mov
xor
push
and
or
out
push
push
cmp
sub
xor
jl
xchg
call
pop
shl
mov
pop
pop
push
push
sub
test
sub
mov
cmp
dec
shl
in
cmp
fwait
or
jecxz
pop
push
xchg
mov
mov
ins
pushf
adc
fisubr
add
adc
mov
jbe
push
adc
jg
inc
sub
aam
sbb
xlat
bound
arpl
cli
pop
lea
mov
fild
fcom
or
xor
mov
push
cmp
cmp
shl
mov
pop
jbe
push
ret
div
sub
mov
mov
cmp
test
lea
mov
jle
lea
ret
mov
or
ins
lock
ins
cmp
mov
add
xchg
retf
or
mov
ror
dec
rol
or
ror
or
push
or
sar
jg
cli
aaa
hlt
ja
and
pop
adc
add
sahf
and
xor
mov
push
push
mov
mov
or
je
pop
enter
mov
push
mov
xor
mov
loope
or
add
sahf
and
mov
add
add
loopne
popa
lds
and
mov
adc
sub
ret
pop
aam
jmp
adc
bound
lea
inc
mov
add
popf
jne
(bad)
cmp
push
inc
add
push
in
in
push
inc
or
sub
jo
mov
stos
rcr
push
pusha
adc
ret
jl
ss
imul
or
cmp
or
lods
ds
das
cmps
cmp
in
leave
ss
xor
ss
fist
inc
cmp
imul
mov
push
inc
ss
je
jmp
push
lea
push
stos
loopne
mov
and
mov
daa
cwde
sbb
add
pop
clc
call
pop
pop
or
je
test
add
cdq
jmp
lods
stos
aaa
xchg
push
std
push
test
or
loop
aas
push
call
cmp
push
sub
mov
sbb
inc
pop
jbe
inc
jecxz
cli
iret
sbb
push
xchg
movs
shl
(bad)
mov
retf
out
adc
sti
cmp
je
pop
pushf
gs
xchg
xchg
sbb
push
xlat
push
xor
push
test
pop
(bad)
and
inc
pop
mov
lea
adc
push
push
push
(bad)
xor
and
fisub
aaa
lea
push
cmp
lock
cmp
cmovbe
inc
or
adc
sub
fnstenv
int3
mov
cs
je
cmp
sbb
jge
mov
pop
pop
repz
xor
jne
pop
adc
ja
sbb
add
and
mov
xchg
mov
movs
jb
push
xor
adc
adc
in
nop
lods
pop
pusha
cwde
aas
push
or
sub
in
movs
adc
and
mov
push
inc
dec
and
sbb
imul
(bad)
scas
push
and
push
mov
sub
sbb
inc
add
or
lds
jmp
mov
mov
cmps
mov
pop
sbb
pop
inc
mov
push
sub
aas
sbb
ror
add
add
mov
mov
ds
add
arpl
and
cmp
push
fstp
or
push
push
shr
or
js
out
or
inc
enter
leave
mov
mov
adc
cmp
inc
adc
ficomp
mov
hlt
pop
fild
arpl
and
jecxz
pop
ret
xchg
nop
test
or
push
pusha
les
cmp
arpl
call
pop
js
fimul
or
fwait
js
sbb
mov
xor
mov
xlat
mul
(bad)
pop
daa
sbb
cmp
jne
sbb
xchg
push
lea
push
test
push
xchg
add
loopne
inc
sahf
xor
sub
hlt
inc
cmp
push
add
retf
dec
dec
pop
lods
rol
or
push
mov
(bad)
push
cmps
or
lea
dec
call
scas
and
jp
adc
jns
mov
xchg
jne
sub
scas
jo
cmp
add
jo
test
xor
mov
les
retf
xchg
(bad)
in
mov
inc
rcr
call
push
out
jo
pusha
cwde
or
or
in
lea
sbb
int
dec
mov
adc
pop
(bad)
enter
add
sbb
jmp
nop
add
ror
jmp
lahf
jmp
or
adc
mov
push
inc
std
mov
inc
mov
jnp
pop
mov
and
adc
fsubr
iret
sbb
add
imul
dec
add
test
add
cmp
lods
mov
retf
sub
sub
jne
pop
push
icebp
(bad)
jecxz
das
lods
adc
push
push
or
scas
pop
inc
adc
or
(bad)
clc
cmp
or
sbb
and
clc
mov
(bad)
sbb
shl
dec
(bad)
jge
adc
cmp
or
jnp
mov
or
out
pop
imul
mov
sahf
lea
mov
sub
push
mov
add
jne
lahf
add
mov
sbb
adc
adc
icebp
daa
jg
call
inc
push
aam
loop
push
js
ret
(bad)
xor
jl
pop
(bad)
pop
sub
cmp
or
inc
stos
adc
push
sbb
add
shl
sbb
mov
mov
(bad)
sbb
push
cmp
je
int3
cmps
inc
in
cmp
ror
jmp
aas
cmp
dec
das
pushf
jp
test
push
push
pop
mov
adc
jecxz
(bad)
or
ret
mov
daa
inc
stos
xor
push
sub
push
lea
push
xchg
inc
je
cmp
push
rcr
xchg
pusha
(bad)
das
or
je
push
js
push
cdq
and
bound
sub
and
mov
pop
xchg
inc
cmps
ss
sar
dec
lods
push
or
es
pop
in
fisub
or
icebp
outs
adc
retf
retf
adc
jl
jg
cmp
jb
or
test
adc
stc
mov
cs
clc
adc
mov
sub
add
ss
mov
out
adc
inc
pop
cmp
or
xchg
mov
clc
cmps
inc
mov
dec
sar
inc
cmp
or
push
xchg
mov
adc
je
out
push
sub
jne
pop
xor
or
pop
xor
or
xor
nop
sub
and
enter
and
cmp
xchg
or
and
xchg
popa
mov
(bad)
or
jmp
pop
es
sbb
pop
adc
and
cmp
cmp
and
pop
or
pop
sbb
ret
pop
add
jecxz
icebp
xor
gs
ja
or
mov
cmp
std
push
push
jns
push
enter
div
and
mov
shr
gs
mov
cmp
je
adc
jmp
outs
and
stos
call
movs
punpckldq
push
(bad)
mov
adc
stc
xchg
or
cmp
push
sbb
aas
sbb
outs
lods
retf
cmp
lods
ins
add
xchg
test
mov
inc
loop
outs
fimul
jecxz
ins
test
lock
push
lea
or
cdq
inc
pop
jl
sub
jbe
retf
or
fistp
clc
mov
jge
fimul
fcomi
inc
sub
int
out
jne
inc
add
std
lods
lea
add
push
test
add
add
adc
ja
mov
jmp
loope
icebp
pop
add
add
xor
lahf
scas
add
scas
outs
daa
mov
mov
mov
loopne
ins
test
push
lea
shl
ins
adc
loope
lock
xchg
movs
fwait
mov
test
adc
pushf
xchg
and
lods
or
and
and
jl
sbb
loope
loop
ds
aad
or
test
arpl
jbe
int3
mov
sub
mov
ds
adc
xchg
inc
add
mov
jp
(bad)
mov
test
jecxz
inc
pop
imul
cmp
rcl
mov
mov
pop
push
popf
jne
jne
xchg
rcl
outs
pop
and
adc
pop
shl
sbb
and
sub
scas
xchg
xor
pop
sub
add
lods
shl
pop
mov
jo
push
js
stc
pop
jge
rcr
movs
cmp
add
mov
in
add
push
mov
sub
or
add
jmp
push
and
mov
fstp
rol
in
hlt
jmp
int3
rol
cmp
je
pop
fbstp
in
aas
pop
ret
loop
mov
popa
mov
pop
mov
jno
push
or
shl
imul
aas
lods
sbb
arpl
jle
cld
mov
les
push
push
out
(bad)
out
call
mov
mov
out
inc
cmp
mov
cmc
dec
add
pushf
adc
mov
push
add
or
test
and
lock
add
out
mov
popf
pop
jbe
push
loop
sbb
pop
adc
lock
push
or
rcr
je
cmc
mov
mov
je
sar
or
add
push
pop
test
xchg
inc
mov
cld
sub
pop
xor
fisubr
cmp
sbb
inc
cmp
inc
cmp
adc
(bad)
sub
push
pop
inc
cmp
aas
or
add
push
scas
inc
jge
icebp
ret
mov
ficom
add
js
cmp
and
ins
out
mov
sbb
ins
pop
pop
cmp
inc
je
sbb
add
push
cmc
jmp
xchg
fadd
inc
lds
mov
jmp
cmps
inc
je
push
lea
arpl
and
test
add
int3
adc
inc
aas
or
cli
pop
push
push
jne
sub
popf
es
mov
(bad)
xor
push
test
adc
and
rol
xchg
aam
dec
add
rol
or
jle
and
xchg
lahf
jl
xor
test
add
dec
dec
push
push
cwde
push
pop
push
jo
adc
bnd
xor
jge
adc
and
and
aas
outs
sub
sbb
add
mov
add
mov
lahf
hlt
imul
adc
add
xor
push
ret
aas
adc
(bad)
lods
or
pop
adc
inc
ret
lahf
bound
retf
enter
push
push
out
add
pop
aas
fist
sbb
ret
jge
mov
inc
add
test
jo
pop
shr
sub
and
aam
push
(bad)
and
push
xor
fcomp
sbb
sub
leave
inc
xchg
inc
inc
retf
xor
push
xor
test
outs
jmp
dec
inc
sub
jp
adc
add
mov
add
in
adc
pop
dec
add
push
or
xchg
je
push
xor
cmp
sub
or
xchg
popa
shrd
hlt
jp
in
sahf
and
mov
mov
jbe
add
mov
int
xor
mov
mov
or
ret
or
movs
mov
(bad)
xchg
xchg
xor
jne
adc
mov
or
inc
sbb
(bad)
sbb
push
push
mov
mov
jg
jne
cmp
jmp
outs
lock
jb
push
(bad)
add
mov
inc
push
imul
xor
ror
in
fadd
mov
push
stos
push
mov
mov
fcom
mov
hlt
mov
push
or
push
push
clc
ret
adc
mov
add
jne
or
or
cmps
push
push
sub
push
in
clc
add
push
push
sbb
xchg
jmp
test
les
cmp
imul
pop
mov
ds
je
jbe
jmp
lods
shl
sti
push
pop
daa
xor
lahf
inc
inc
mov
inc
and
and
cmp
je
push
mov
icebp
cmp
stos
add
cmp
sub
pop
fisubr
jae
cmp
inc
jnp
pop
outs
pop
mov
lea
push
aam
repz
sub
mov
or
mov
das
and
mov
lods
fild
fistp
mov
out
add
push
stos
mov
(bad)
stc
cs
add
in
test
cmp
sbb
mov
and
cmp
data16
cmp
or
and
test
loopne
sahf
lods
push
outs
popw
cld
sub
inc
xor
test
fdiv
or
xchg
jbe
mov
pop
or
push
lea
xor
out
sub
push
mov
push
inc
push
push
mov
adc
sub
add
inc
add
enter
(bad)
test
adc
add
cmp
sub
cwde
pop
fidivr
(bad)
les
dec
sar
push
(bad)
jb
jmp
pushf
mov
in
sub
cmp
mov
int
mov
cmp
mov
pushf
pop
imul
jmp
mov
out
out
inc
jg
in
jbe
xchg
adc
dec
das
dec
xchg
mov
xor
pop
dec
pop
inc
leave
test
adc
dec
cli
add
push
xor
fs
fstp
prefetchw
and
out
lahf
pop
pop
aad
imul
jbe
or
iret
jg
jne
jmp
push
push
mov
push
shl
cmp
cmp
or
push
adc
or
mov
ret
je
or
push
movs
(bad)
mov
push
mov
push
fmul
xor
and
or
sub
fmul
js
pusha
or
push
and
jmp
add
mov
adc
dec
dec
cli
mov
test
xor
fistp
or
cmps
mov
ficomp
sbb
shr
stc
or
(bad)
and
test
mov
in
or
or
pop
wbinvd
sbb
lea
lods
je
inc
pop
xchg
outs
xchg
mov
cmp
scas
adc
xchg
adc
aas
add
sub
imul
add
sub
jl
arpl
test
and
or
and
jge
and
sub
repnz
mov
push
das
and
fdivr
xchg
fs
(bad)
(bad)
add
dec
sub
test
out
cld
sub
in
movs
ret
xor
xchg
outs
mov
jecxz
add
add
xchg
mov
dec
mov
adc
dec
add
bswap
add
std
sub
mov
pop
sbb
add
push
push
stos
add
pop
sub
inc
sub
pop
mov
mov
xor
and
xor
in
jg
ins
lea
pop
jne
xchg
mov
jmp
or
retf
(bad)
sbb
repnz
mov
je
les
adc
inc
aas
daa
int3
pop
or
jmp
das
xchg
mov
sar
or
aad
ja
inc
add
jmp
daa
int
mov
shr
cli
push
push
fcomp
mov
mov
xchg
xchg
or
in
add
jbe
scas
aaa
cmp
sbb
add
lods
push
popa
bswap
(bad)
jb
int3
mov
fldenv
fiadd
pop
lods
mov
adc
adc
inc
xor
or
ins
pop
lock
jmp
pop
movs
aad
retf
add
movs
movs
jmp
sbb
mov
add
ja
jnp
xor
xor
cmp
in
sbb
js
je
pop
pop
jns
adc
mov
adc
sbb
out
push
bound
scas
inc
xlat
add
pop
xchg
or
pop
mov
and
(bad)
std
lea
sub
jne
pmulhuw
les
push
jmp
mov
mov
or
add
lods
je
mov
into
mov
sbb
inc
dec
ror
cmp
pushf
xchg
loope
mov
mov
nop
push
fdiv
cmp
rcl
push
jmp
push
push
pop
stos
mov
popa
mov
push
mov
je
push
sub
mov
or
push
dec
mov
out
pop
pusha
xchg
add
iret
or
nop
loope
or
xchg
ins
cmps
inc
arpl
or
repz
mov
test
add
inc
lea
fisubr
in
ins
inc
xchg
mov
fild
xor
je
jne
(bad)
add
lock
sbb
clc
std
mov
xchg
adc
test
cmp
daa
push
movs
pop
fs
loopne
popa
imul
movs
mov
(bad)
pop
aad
inc
cmp
fs
pop
inc
pop
retf
ins
sub
or
inc
adc
cmp
arpl
int3
mov
fldcw
or
dec
sbb
add
lods
mov
enter
inc
sbb
out
js
cmp
add
cmp
div
and
inc
sub
pop
sahf
jb
xchg
cmps
out
out
xor
in
jmp
pop
fsubrp
adc
test
jge
adc
xchg
loopne
in
sti
push
pop
mov
les
ror
int3
xor
in
xchg
cmp
loopne
adc
stos
retf
or
add
xor
add
mov
add
cmp
push
ret
mov
pusha
and
push
rol
xor
push
test
adc
mov
jb
nop
mov
xor
nop
mov
cmp
push
dec
cmps
or
int
cmp
fistp
mov
or
mov
lods
or
stos
cmp
lds
cmp
mov
mov
add
or
sahf
jne
sar
nop
push
imul
xchg
lds
xchg
sar
cwde
fsubrp
push
sbb
ins
push
mov
gs
jp
jge
js
js
ja
adc
nop
adc
jo
daa
mov
je
repz
cmovno
(bad)
outs
daa
test
and
sub
xor
xchg
dec
dec
xor
and
arpl
jne
pop
mov
mov
cmp
xchg
bound
inc
pop
ret
dec
xchg
clc
jne
mov
jne
jne
push
xor
pop
movs
repz
mov
cld
dec
cmp
add
mov
jae
sbb
(bad)
cmps
xor
push
cmp
or
sahf
int
mov
pop
mov
sbb
mov
js
mov
out
and
mov
dec
add
sbb
dec
or
bound
sbb
daa
lods
fs
aas
mov
fdiv
and
add
jnp
cvtdq2ps
and
movs
add
or
stos
mov
pop
or
fist
adc
mov
jle
icebp
mov
call
pop
test
or
inc
adc
push
mov
in
and
cmp
setne
mov
in
ins
add
fisub
fstp
fdiv
inc
cmp
dec
neg
add
fnstsw
leave
and
sub
mov
mov
cmp
and
fdiv
daa
add
shl
adc
stos
xchg
out
shl
or
sbb
or
sbb
pop
inc
xor
add
das
add
cwde
mov
imul
pushf
cmc
aam
fadd
add
lds
and
sbb
add
cmp
sbb
push
and
inc
xor
xchg
inc
add
add
jecxz
into
pusha
and
push
and
retf
dec
add
mov
sbb
cmp
push
movs
dec
add
mov
aaa
mov
push
jo
dec
xor
leave
cwde
arpl
add
cdq
(bad)
pop
ds
sbb
mov
scas
cld
jg
jl
cmp
add
mov
pop
add
jne
dec
add
cmp
mov
bound
scas
mov
mov
jo
or
dec
aas
and
retf
pusha
inc
sub
mov
dec
jl
dec
jae
pop
or
or
dec
dec
repnz
jbe
jne
popa
cmp
or
dec
nop
ret
add
push
xchg
pop
sbb
and
or
dec
ins
fisttp
fbstp
leave
mov
adc
pop
jl
jbe
xchg
out
sti
mov
scas
mov
push
and
and
jnp
leave
add
add
inc
mov
and
pusha
push
pop
and
mov
add
sbb
sub
loope
fld
ret
inc
jb
(bad)
mov
call
xor
(bad)
loopne
mov
bound
sbb
xor
add
outs
adc
sbb
int3
add
rol
jge
lods
leave
leave
add
xor
and
ins
mov
push
push
add
add
push
(bad)
ins
mov
lock
inc
push
push
(bad)
clc
add
pushf
(bad)
int
pop
dec
inc
cmps
sub
xor
fistp
pop
stos
push
mov
data16
data16
inc
lods
xchg
add
pop
in
pop
xor
mov
imul
push
add
sub
aas
inc
or
clc
ficom
cdq
xchg
cdq
daa
inc
dec
sbb
sub
and
jne
mov
fmul
mov
mov
add
xchg
repz
test
in
mov
out
cmp
icebp
xor
add
leave
clc
stc
(bad)
cld
je
cmp
stc
in
dec
mov
shl
xor
rcr
ja
(bad)
dec
dec
mov
popf
jo
aam
add
inc
enter
push
pop
xor
inc
enter
inc
(bad)
fcomp
leave
sub
sub
mov
lsl
mov
xor
mov
or
or
inc
xor
or
stc
rol
dec
in
das
jae
pop
pop
out
lods
out
fdivr
push
sbb
(bad)
xchg
adc
inc
fcmovnbe
out
add
scas
mov
pop
pusha
fisubr
sub
dec
outs
inc
ins
push
inc
stc
or
test
sbb
mov
and
add
mov
adc
pusha
rcl
pusha
inc
daa
xor
push
test
jb
adc
jl
or
arpl
xchg
push
je
movs
xchg
aas
test
mov
ret
adc
or
xor
mov
mov
pop
movs
outs
or
je
mov
push
push
leave
inc
imul
mov
inc
push
cdq
xchg
(bad)
clc
pop
mov
pop
mov
xchg
leave
add
xlat
pop
inc
imul
in
and
inc
adc
data16
sahf
and
add
mov
cdq
lea
push
sti
xor
inc
nop
stos
loop
jp
shl
cdq
or
ins
or
pushf
mov
mov
sbb
es
push
xchg
popf
push
mov
psrlq
adc
and
fdiv
sbb
in
xor
imul
icebp
jmp
push
loope
add
inc
inc
or
ins
les
(bad)
scas
push
ret
fnstenv
aad
pop
jg
adc
jb
dec
and
int
into
dec
lods
test
popf
mov
xchg
sbb
push
cmp
sbb
push
xchg
sub
or
xlat
dec
imul
push
adc
lds
je
mov
sbb
or
mov
les
or
jmp
out
ja
mov
scas
mov
int3
inc
or
or
add
push
push
leave
push
xchg
sbb
sub
cmp
fdivr
xor
and
dec
mov
lods
push
mov
add
(bad)
xlat
xchg
or
ins
leave
sub
pop
es
and
and
or
xchg
lock
sbb
jl
jo
and
push
cmp
add
inc
leave
add
add
ja
nop
and
xor
lods
bound
pop
push
inc
ds
mov
rcl
or
sbb
inc
nop
dec
mov
jno
lods
lods
pop
test
mov
(bad)
sbb
in
xchg
or
cmp
xchg
xor
cmp
pushf
xchg
sbb
pusha
dec
xchg
sahf
xchg
push
dec
and
and
inc
stos
add
add
ins
cmp
xchg
pop
je
sbb
call
inc
int
pop
dec
je
ins
dec
shl
lods
loopne
inc
fist
pop
cmp
push
mov
cmp
repz
(bad)
xor
mov
fild
test
jle
xchg
xor
addr16
mov
inc
mov
push
clc
jg
test
je
add
fadd
inc
mov
jmp
sub
sbb
lods
in
outs
cmp
outs
add
mov
je
and
or
jl
aaa
mov
and
cwde
jno
push
ret
add
loope
rcl
rol
pushf
imul
adc
push
xor
push
int3
add
xchg
pop
and
cwde
pushf
xor
lods
inc
or
add
and
sub
push
shl
pop
ret
movsx
cmp
test
cmp
out
mov
rcr
sbb
lods
or
ss
iret
mov
add
mov
pop
push
pop
pop
fild
pop
mov
or
jne
lods
push
fsubr
mov
ror
(bad)
(bad)
test
imul
and
shl
cmps
lock
cdq
add
pushf
push
sub
mov
fs
mov
mov
mov
inc
cwde
mov
test
loopne
inc
xchg
loopne
cs
movs
add
js
xor
adc
or
push
or
clc
push
ins
test
inc
mov
sub
cmp
or
mov
cdq
lock
adc
enter
cld
enter
add
add
test
test
lods
mov
rol
push
call
out
xor
cld
mov
sahf
out
xor
jnp
xchg
xor
lahf
out
mov
xchg
cmp
repz
mov
fwait
dec
sti
cmp
ins
fwait
push
mov
dec
rcl
cmp
sar
mov
push
(bad)
(bad)
movs
xchg
xchg
jnp
sti
xor
inc
pushf
push
je
mov
fidiv
inc
xchg
cs
push
or
mov
push
sub
cmc
push
inc
movs
push
sahf
out
ficom
xchg
mov
popf
or
dec
xchg
popf
popf
mov
iret
icebp
inc
(bad)
fldcw
mov
mov
inc
push
ins
push
jle
lahf
mov
fcom
mov
push
adc
push
sub
jbe
dec
inc
push
arpl
add
jnp
cmps
add
and
mov
neg
push
add
sti
out
push
add
or
add
sbb
or
or
aaa
mov
(bad)
aas
or
or
push
movups
adc
adc
mov
pop
sbb
or
mov
sbb
sbb
and
and
and
mov
sub
sub
sub
or
xor
xor
cmp
xor
cmp
cmp
cmp
fs
ds
inc
inc
inc
inc
inc
inc
inc
or
aaa
dec
adc
out
dec
dec
dec
adc
or
push
sub
(bad)
fist
push
fs
push
push
push
push
fs
pop
pop
pop
fs
or
fmul
push
ror
pusha
fs
bound
nop
iret
repz
push
(bad)
loopne
adc
jnp
lahf
sub
jbe
mov
mov
pop
cmps
xor
sbb
imul
push
add
out
push
push
ret
push
jne
cs
repz
ds
adc
out
xchg
xchg
stos
mov
out
mov
push
cmp
icebp
cmp
imul
imul
mov
mov
imul
out
neg
xchg
push
rol
mov
mov
push
xchg
cmps
mov
test
ins
ds
fsincos
push
cmps
xor
iret
mov
out
mov
dec
hlt
sahf
inc
push
push
test
xchg
aad
(bad)
mov
cmp
push
lods
xlat
mov
iret
push
mov
mov
add
or
ficomp
push
adc
mov
adc
xchg
push
or
push
sbb
cmp
or
and
and
push
and
or
push
daa
sub
jns
sub
sub
sub
cs
das
aad
mov
mov
or
xor
sub
call
aas
inc
sbb
sub
inc
push
inc
inc
add
dec
sub
fst
es
icebp
cmp
dec
push
cs
push
(bad)
jbe
mov
xchg
cmp
push
pop
xor
dec
jg
div
cdq
std
scas
int
push
add
cmp
jg
add
sub
sbb
add
repnz
inc
or
push
or
adc
sub
daa
adc
mov
mov
jg
movs
mov
add
std
aam
rol
push
or
rcl
cs
add
cs
dec
jb
and
rcr
rol
or
mov
shl
bound
test
cmp
push
add
fidivr
add
loope
and
mov
sub
pop
push
jne
or
imul
test
jl
xor
add
int3
mov
imul
push
add
sbb
add
leave
push
inc
mov
sbb
pop
inc
out
or
cmp
cmc
nop
nop
pushf
iret
aad
test
push
jecxz
push
popf
bound
arpl
jmp
dec
fistp
push
add
(bad)
dec
outs
or
loopne
adc
jb
pop
or
lahf
add
push
jp
bound
add
jb
inc
mov
test
push
loopne
add
mov
ds
imul
adc
not
inc
inc
and
sub
xchg
cdq
adc
retf
sub
rol
mov
ficomp
or
mov
push
fild
bound
and
out
push
mov
add
dec
adc
mov
je
ds
nop
jns
ss
cs
inc
cs
fcomp
pop
fstp
pushf
dec
pop
test
rcl
xor
ja
and
sbb
xor
sbb
xor
sbb
lods
jg
xor
dec
mov
add
sub
cs
and
xchg
push
xchg
adc
cmp
pop
dec
test
das
mov
mov
sbb
mov
mov
ror
pop
sbb
push
adc
or
ret
mov
enter
jmp
adc
fld
xor
or
dec
bound
rcl
ret
aas
or
or
xchg
sbb
mov
fild
jle
sti
fisttp
lock
popf
inc
sbb
fldcw
lea
out
imul
shl
push
fild
jo
add
xchg
imul
sti
jg
jge
stos
push
repz
movsx
push
push
popf
fnsave
add
push
sbb
out
imul
loopne
xchg
pop
das
jne
inc
cmp
cmp
cli
fsubr
mov
stos
shr
ins
ret
into
sub
push
add
inc
shr
mov
push
les
lahf
out
fnstenv
test
sbb
js
adc
add
sbb
xlat
ins
lods
push
pop
aas
sahf
jno
cld
lods
add
mov
mov
add
mov
inc
sub
adc
sbb
retf
(bad)
inc
xor
imul
cs
sub
cmp
mov
cmp
and
add
adc
jb
int3
add
rcr
inc
aam
lock
lock
cs
loopne
in
mov
in
dec
and
mov
inc
dec
rol
push
in
js
gs
add
mov
push
jb
mov
xchg
nop
pop
and
xor
and
shl
pushf
adc
pop
push
mov
dec
add
(bad)
gs
fwait
sub
mov
mov
xor
mov
scas
nop
adc
jbe
pushf
cmp
fsub
mov
mov
add
aas
ficomp
add
data16
adc
pop
xor
(bad)
and
pop
adc
adc
cmp
pop
lods
adc
clc
push
repnz
std
cmp
push
inc
pop
add
mov
push
inc
dec
mov
in
stos
stos
xor
mov
dec
sahf
push
inc
or
or
mov
gs
lods
ret
add
scas
xor
jle
pusha
dec
jnp
sub
xor
xor
test
and
pop
dec
or
push
nop
aaa
adc
sbb
fsubr
xor
cwde
cmps
(bad)
into
rcr
pusha
and
imul
dec
sbb
add
cdq
arpl
test
mov
xchg
jp
repnz
xor
push
and
fist
dec
dec
and
je
leave
and
(bad)
sbb
push
jo
and
daa
movs
cmp
push
pop
pop
jmp
add
loopne
pop
add
xchg
hlt
or
push
xchg
aam
retf
sbb
jo
inc
jmp
aas
push
adc
ret
xchg
mov
add
xchg
cmp
cmp
adc
leave
movs
pop
mov
dec
daa
jmp
test
mov
xor
and
push
adc
xchg
push
xchg
mov
and
sbb
retf
cmp
jnp
mov
mov
movs
mov
scas
lock
retf
add
into
das
adc
push
sbb
in
push
mov
(bad)
adc
jno
mov
iret
and
mov
loopne
mov
sub
jmp
pop
inc
sub
retf
test
adc
jnp
out
rcr
sbb
(bad)
sbb
xor
jle
(bad)
pop
aaa
add
inc
(bad)
sub
scas
inc
mov
test
and
pop
test
adc
cld
mov
bnd
sbb
xor
lea
lahf
mov
and
fstp
sbb
inc
jge
ds
jno
xchg
out
je
sbb
push
in
in
adc
mov
jne
dec
inc
push
test
pushf
add
aam
push
xchg
aas
xchg
xchg
mov
inc
xchg
adc
data16
inc
ins
add
cmp
outs
add
nop
popa
imul
pop
dec
loope
mov
add
cmp
or
cmp
shr
lea
push
cmp
call
movs
xor
jl
jbe
fcomp
jl
mov
pusha
je
js
retf
in
push
jae
pop
cs
ins
inc
jmp
movs
add
repz
ins
sar
pop
jge
nop
inc
aad
mov
int3
das
stos
adc
nop
dec
push
jns
ror
sub
outs
push
push
(bad)
push
jae
iret
add
inc
xor
aam
push
stc
lea
mov
cmovne
push
sbb
movs
inc
call
cmp
jae
jbe
sbb
or
mul
push
jae
push
outs
dec
inc
icebp
xor
neg
push
cmp
mov
test
div
mov
adc
jno
mov
nop
xchg
push
cmp
dec
push
sbb
mov
mov
cmp
cmps
add
sub
push
out
xor
sbb
adc
mov
js
call
mov
je
or
pop
add
pop
push
popa
mov
cmp
in
ss
fisubr
xchg
xor
inc
mov
ins
sub
push
jb
ja
or
inc
push
imul
adc
sub
inc
xchg
(bad)
nop
idiv
lock
daa
inc
pusha
dec
inc
es
push
test
adc
mov
sbb
jno
adc
rol
rol
dec
add
test
aas
sub
add
or
ret
test
sbb
jle
inc
mov
pop
ins
push
or
enter
dec
not
dec
rcr
idiv
pop
aaa
shr
aad
jmp
and
adc
and
mov
mov
push
lea
or
mov
dec
jg
xchg
inc
retf
lea
xor
call
icebp
nop
mov
lea
mov
lods
or
push
std
scas
push
cdq
pop
and
push
xchg
mov
and
push
div
leave
sti
mov
pushf
jo
adc
push
xor
mov
in
and
adc
cmp
xor
cmp
xchg
jg
(bad)
jg
sti
jne
cmp
jne
sti
out
or
cmp
je
push
mov
adc
jmp
push
mov
mov
movs
jmp
in
neg
sbb
and
pop
add
pminsw
adc
call
push
pop
test
sbb
xchg
pop
add
mov
test
push
icebp
jmp
ja
jmp
and
sub
or
inc
jmp
dec
daa
or
lds
enter
cmp
imul
shr
xchg
fsubr
adc
or
fisttp
push
push
mov
(bad)
stc
out
and
adc
lock
cmp
add
mov
sbb
shl
les
cmp
test
pusha
and
mov
lahf
dec
ins
push
or
cmp
or
cs
mov
or
dec
dec
fimul
cmc
mov
sbb
ins
(bad)
ja
and
push
push
cmp
or
or
add
or
adc
jmp
xchg
mov
(bad)
sbb
xor
in
or
xor
mov
or
mov
dec
mov
or
es
(bad)
sbb
or
fwait
mov
push
and
adc
imul
dec
or
call
and
je
adc
je
xor
add
xchg
jne
mov
sbb
je
or
jmp
lock
cmp
xchg
sbb
mov
sub
adc
mov
add
or
push
xchg
jns
addr16
inc
ret
mov
call
add
push
add
mov
rcr
adc
loope
and
and
loopne
or
cwde
adc
pop
and
ss
rcr
jp
add
fcmove
shr
imul
enter
popa
cmps
adc
test
or
xchg
sbb
scas
xchg
xor
je
push
push
jge
aas
add
push
mov
in
mov
popf
and
xchg
loopne
jmp
mov
pop
pop
out
or
cmp
mov
pusha
and
mov
xlat
add
mov
stos
test
jp
sub
fistp
mov
pop
lea
cwde
cmp
fbstp
jb
pushf
out
mov
(bad)
rol
add
inc
pop
data16
add
xor
xlat
add
popf
add
cmp
jle
loopne
and
push
add
lods
pop
stc
hlt
rcl
adc
(bad)
mov
mov
rcl
pop
sbb
ret
adc
sub
push
pop
test
mov
xchg
cs
jmp
add
test
mov
dec
xor
in
push
mov
pop
dec
add
mov
cmp
pop
mov
lods
cmp
movs
xchg
mov
and
aam
mov
push
push
mov
push
loope
fdiv
push
movs
cmp
in
popa
repz
dec
xchg
lods
loop
imul
xor
icebp
shl
pop
xor
mov
mov
add
and
dec
jl
jp
mov
push
mov
(bad)
bound
mov
mov
ja
push
push
call
jne
lea
aam
or
push
sub
add
int3
mov
add
(bad)
xlat
jl
or
jmp
movs
xor
imul
sbb
mov
stos
cmps
mov
push
pop
jp
cmp
shl
adc
or
inc
shr
loope
(bad)
out
jmp
retf
lds
out
data16
popa
inc
cmp
mov
xor
test
or
sbb
xor
or
push
das
in
push
(bad)
jge
jne
jmp
fwait
push
jg
lock
add
sub
mov
xchg
sub
sbb
fisttp
pop
and
inc
adc
xchg
dec
out
or
test
and
add
add
xchg
pop
adc
sub
push
popa
push
out
xor
mov
mov
xor
sbb
push
push
sbb
in
cli
(bad)
test
enter
lods
add
dec
ins
es
lock
push
dec
cmp
icebp
inc
adc
mov
cmp
ja
fcmovb
pop
mov
fstp
(bad)
div
lods
loop
jle
(bad)
dec
rcr
jmp
lds
ret
dec
loope
popa
cs
sub
mov
retf
idiv
fsub
ins
inc
sub
dec
add
(bad)
adc
imul
jno
int
inc
mov
add
jae
sub
stos
add
test
out
adc
jbe
aas
sbb
add
not
lods
and
pop
mov
popf
lea
sbb
popf
jbe
rol
out
cmp
ja
add
mov
dec
pop
pop
ficom
push
push
push
push
in
inc
pop
jmp
cs
mov
push
pop
and
mov
sub
push
push
je
inc
pop
dec
add
pop
daa
xor
or
in
and
scas
mov
int
jl
xor
xchg
sub
loopne
je
mov
lea
icebp
test
pop
test
push
inc
jne
test
push
test
xchg
out
cmp
jg
jo
adc
jle
adc
add
adc
add
scas
push
cwde
inc
add
ret
in
pop
cld
js
sbb
sub
pop
inc
pop
jne
lock
fcomp
arpl
cs
in
inc
pop
inc
call
scas
adc
add
sub
dec
push
cld
fcom
call
push
mov
das
push
push
pop
(bad)
cmp
sbb
jle
dec
cmps
cmp
dec
shl
lea
retf
add
add
sahf
jecxz
dec
iret
jp
xchg
adc
adc
add
inc
pop
(bad)
or
ret
aas
xchg
out
or
cmp
mov
and
inc
adc
enter
push
pop
and
pop
subps
dec
aas
adc
push
xor
adc
xor
xchg
fisubr
and
cmp
adc
in
aaa
adc
add
mov
xchg
push
addr16
into
test
sbb
adc
push
xor
sub
push
lods
leave
mov
cmp
inc
ret
add
push
or
mov
jp
jmp
add
sbb
arpl
sub
out
sbb
daa
sub
pusha
add
aad
inc
push
int
test
sbb
jecxz
pop
dec
fisubr
jmp
mov
adc
pusha
cmps
adc
or
mov
adc
test
repnz
mov
and
cmps
push
cs
jne
leave
inc
test
adc
push
xor
and
jg
les
jecxz
mov
sub
and
(bad)
pop
or
or
ss
lods
and
outs
das
dec
push
inc
mov
xchg
test
pop
mov
inc
ret
xor
jmp
add
mov
fisubr
int3
push
sbb
cs
jl
ficomp
or
jne
adc
push
int
mov
add
adc
test
mov
aaa
mov
push
or
adc
ror
sbb
push
rol
ins
or
dec
loopne
sbb
and
and
inc
cdq
or
sahf
inc
mov
lds
sahf
stos
inc
jns
shr
mov
add
or
stos
ret
inc
cmp
xchg
mov
das
rcr
cwde
ds
dec
adc
dec
sub
push
shl
sbb
adc
in
lock
cmps
sbb
stos
and
sbb
mov
jnp
push
test
ret
sbb
loope
add
adc
jo
cmp
das
(bad)
mov
into
dec
call
popf
inc
leave
ja
enter
sahf
xchg
stos
push
lds
icebp
mov
jmp
push
xor
lods
pop
ror
pop
sar
mov
daa
cmp
xor
jl
push
and
xchg
sub
in
sbb
push
mov
pop
add
mov
shl
cld
adc
xchg
popa
mov
jl
pop
mov
jne
mov
inc
xchg
cmp
jg
es
cwde
or
inc
add
sub
ds
stc
inc
and
xor
or
mov
jo
(bad)
jns
dec
dec
aaa
and
les
(bad)
fnsave
imul
sbb
inc
in
stos
push
dec
(bad)
aad
int
push
cmp
pop
sahf
cmp
pop
jmp
nop
adc
lock
rcr
cmp
push
cmp
pop
cmp
add
inc
or
add
aas
les
bound
je
push
lds
push
push
stc
push
xor
sub
out
imul
outs
inc
cmp
and
mov
iret
in
xchg
push
loope
cld
push
jne
or
lock
je
fnstsw
cld
mov
lea
jle
push
rol
cmp
pop
xor
push
xadd
(bad)
cli
jle
addr16
call
push
ret
shl
jne
push
js
dec
add
lea
xor
shr
add
jcxz
dec
loopne
scas
in
xor
dec
inc
sbb
push
push
adc
sub
jno
jl
and
clc
push
pop
enter
push
pop
cld
add
cmp
sbb
add
or
xor
movs
jnp
cmp
inc
sbb
ret
loop
(bad)
jmp
fst
mov
or
loope
push
data16
ja
mov
push
jns
ret
push
loope
sbb
ds
and
es
(bad)
jb
push
or
shl
test
fimul
pop
push
imul
add
jmp
das
xor
xlat
je
add
mov
add
push
push
outs
push
aad
psubd
push
push
dec
add
sbb
pusha
push
clc
or
jmp
mov
mov
lahf
shr
shl
or
ja
adc
ds
jne
mov
mov
mov
mov
ficom
push
ret
push
or
or
rol
pop
and
add
fisttp
cwde
inc
test
adc
add
out
add
sbb
stc
mov
js
shl
mov
xor
add
mov
jmp
and
int
mov
into
xor
add
cmps
and
shl
cmp
xchg
loopne
rol
mov
jmp
push
push
xor
mov
sub
xchg
hlt
out
inc
add
mov
std
ja
and
add
cmp
pop
adc
ret
mov
sti
and
adc
push
xchg
mov
out
cmp
jne
imul
push
sub
inc
in
lea
cld
push
mov
mov
test
or
cmp
jnp
inc
push
and
(bad)
and
jno
sbb
imul
dec
loop
push
and
pushf
add
dec
adc
adc
call
and
jo
cmp
cld
jl
push
mov
loopne
push
fnstcw
pop
fstp
js
ret
ror
push
xor
push
push
data16
int3
add
xchg
test
mov
mov
loop
js
adc
jnp
push
sbb
inc
adc
or
pusha
mov
dec
sbb
fild
cmp
inc
dec
add
(bad)
jne
and
lea
fmul
add
cmp
pusha
sbb
mov
dec
imul
lea
nop
sub
mov
and
sbb
mov
adc
leave
jne
push
adc
sbb
push
adc
pop
pop
xor
push
xchg
sbb
xchg
xor
cmp
loop
sbb
mov
stc
in
imul
xchg
mov
leave
ins
mov
xchg
jo
push
imul
cmp
(bad)
dec
sub
sbb
imul
in
cs
dec
inc
dec
bound
dec
ror
inc
stc
loope
pop
jb
mov
mov
sub
nop
pop
mov
daa
fst
adc
xchg
fimul
inc
lock
iret
popf
cmp
mov
sub
jle
mov
add
or
xchg
push
or
xchg
adc
add
cwde
add
mov
jne
aad
ins
add
sub
add
or
and
es
hlt
imul
mov
and
cli
rol
outs
mov
xchg
lea
loop
rol
xchg
das
jo
sbb
mov
mov
pop
pop
adc
les
mov
je
ror
test
mov
pop
xchg
or
daa
in
movs
cmp
lea
lahf
jnp
inc
imul
(bad)
jecxz
rcr
imul
dec
lahf
sbb
jne
ret
sub
test
les
cmp
push
(bad)
adc
fld
test
shl
jns
and
push
push
test
fistp
pop
std
adc
sub
jne
sbb
and
icebp
sub
ret
jb
mov
hlt
xchg
adc
xor
sbb
es
lods
add
pop
inc
add
xchg
lahf
gs
mov
inc
push
adc
mov
aam
adc
shl
xlat
mov
mov
sbb
loopne
addr16
cmp
stos
idiv
mov
sbb
sub
add
mov
sbb
lods
inc
add
mov
adc
in
add
popf
push
mov
stos
add
jno
xchg
(bad)
sub
daa
cmps
mov
ja
ins
cld
adc
push
bound
iret
xchg
cmps
mov
fistp
mov
push
xchg
push
sub
mov
xchg
mov
imul
inc
gs
adc
les
and
mov
adc
fiadd
adc
ss
je
out
and
adc
jns
test
push
lahf
cmp
xchg
pushf
jno
loope
in
or
cmp
mov
fmulp
daa
and
xchg
push
fucomip
jne
es
sub
inc
je
out
lea
pop
sub
cli
in
xor
imul
pusha
inc
cmps
xchg
or
add
pop
out
icebp
sub
adc
loopne
pushf
mov
rcr
jno
jns
xchg
or
adc
ja
daa
imul
movs
sub
sbb
movs
sub
ss
xchg
pop
cmp
cwde
pop
aas
das
outs
nop
fiadd
ja
sub
pop
mov
adc
xor
jp
rcr
mov
das
sub
bound
cs
pop
int3
loopne
int3
add
shl
cmp
xchg
add
add
out
push
and
lahf
out
sahf
inc
pop
jg
xchg
add
mov
add
add
in
sub
pop
mov
aas
std
dec
push
xchg
add
icebp
rcr
pushf
icebp
retf
and
rol
nop
cwde
mov
add
mov
xchg
sub
iret
mov
pop
mov
xchg
std
jl
pop
nop
test
pop
leave
movs
push
dec
dec
adc
stc
push
je
push
and
adc
push
test
pop
adc
mov
repz
call
stc
sbb
push
adc
push
push
jg
xchg
push
pop
or
or
or
xchg
out
(bad)
(bad)
fild
sub
fwait
xchg
cdq
int3
fdiv
and
ss
sbb
inc
jb
push
add
mov
cmp
and
sub
inc
sub
inc
leave
or
shl
and
cs
ss
mov
and
mov
aaa
or
or
sbb
or
rol
bound
adc
xchg
add
das
sbb
add
cmc
cmp
nop
and
pop
push
ins
jg
cmp
repz
xchg
xor
iret
retf
fdivp
ss
sahf
out
sahf
popa
je
and
jge
adc
mov
add
xchg
mov
adc
adc
adc
mov
xchg
sub
jmp
cmc
pusha
inc
loopne
or
add
into
push
dec
mov
adc
scas
add
pushf
mov
mov
lea
es
lods
ins
xchg
xchg
imul
ret
push
js
lea
iret
test
add
into
jb
(bad)
or
test
add
mov
add
adc
scas
rcl
cmc
mov
add
pop
jb
dec
push
add
(bad)
fcom
lods
mov
lea
xchg
or
cmp
push
mov
fisub
xor
adc
pop
or
push
inc
cli
cmp
in
inc
sub
mov
adc
daa
xchg
lods
xchg
aad
iret
cmp
call
sub
das
mov
bound
cmps
or
mov
sbb
xor
paddw
pushf
and
sub
inc
arpl
mov
retf
dec
jmp
test
lods
and
xor
rol
cmp
cmova
sub
sub
lock
cmp
je
push
or
push
jle
push
mov
add
fimul
inc
sti
dec
pusha
(bad)
cmp
gs
ds
jne
sti
or
cwde
ins
fs
mov
mov
push
cmp
je
jle
add
(bad)
(bad)
sub
or
inc
rol
and
inc
cmp
dec
mov
or
cmp
mov
cmp
cmp
xor
shl
(bad)
fist
push
inc
inc
adc
scas
push
cmp
sub
cs
ret
daa
jge
(bad)
jmp
rcl
add
jge
daa
pop
mov
adc
sub
cmp
inc
dec
scas
scas
fwait
add
leave
adc
bound
dec
test
sbb
inc
adc
add
jae
test
popa
push
or
push
cld
mov
push
int3
cmp
xor
jmp
adc
add
mov
das
retf
pop
bound
stos
mov
out
jge
or
push
int
repz
cmp
mov
ins
loop
(bad)
(bad)
(bad)
jle
fcomip
arpl
hlt
js
mov
pop
mov
dec
mov
(bad)
add
aam
ret
jb
test
popf
adc
js
or
(bad)
xor
cli
ja
imul
dec
test
das
pop
push
xor
add
xor
add
mov
stos
mov
je
and
lods
adc
pop
jnp
sub
faddp
jae
push
movs
cmp
push
out
mov
movs
test
lahf
fmul
pusha
out
push
mov
mov
cmp
jne
or
icebp
xlat
xchg
or
pop
sub
or
pop
sub
xor
sbb
cmp
xchg
jle
jb
pop
adc
sub
repz
push
cmp
or
jo
pusha
test
push
cmps
pop
mov
or
into
daa
mov
shr
aas
cmp
mov
cmp
shr
shl
(bad)
(bad)
es
inc
jo
test
push
leave
dec
pop
adc
pushf
test
ins
cmps
cmp
rol
sub
mov
fcmovbe
(bad)
div
inc
add
ja
std
fsubr
mov
xor
ret
mov
inc
adc
mov
adc
jmp
jo
mov
loopne
sub
and
leave
mov
mov
in
mov
pop
sbb
jmp
sbb
dec
in
adc
cld
in
fnsave
and
or
in
xor
fsubr
ror
jle
pop
cld
or
jns
push
push
in
pop
jne
cmp
(bad)
xor
cmc
mov
imul
add
xor
xor
stos
inc
sub
popa
mov
into
add
daa
pop
push
sub
or
push
(bad)
(bad)
retf
mov
pop
add
inc
cmp
and
adc
rcl
sbb
rol
or
dec
sbb
xor
xchg
push
adc
pop
sahf
jno
xchg
add
into
adc
je
or
xchg
scas
into
cmp
ja
div
push
(bad)
or
mov
imul
pop
lea
lods
add
pop
push
xchg
out
mov
adc
ins
scas
imul
push
jne
or
add
dec
and
push
pop
push
aaa
xchg
push
daa
or
xchg
adc
rol
shl
cld
add
nop
mov
cmp
cmovbe
sbb
xor
sbb
xchg
mov
or
in
sbb
je
movs
int
call
inc
xor
pop
sbb
je
in
retf
out
sub
jg
xchg
sahf
push
push
push
or
adc
inc
add
push
or
or
(bad)
test
push
sbb
push
pop
jmp
and
dec
or
dec
inc
pop
adc
lods
add
add
cmp
add
add
mov
mov
push
sub
jae
adc
imul
sbb
pop
jmp
and
les
int3
pop
mov
icebp
pop
jo
mov
loope
lea
jno
test
sbb
aas
dec
shl
out
push
test
adc
sbb
push
sub
pop
inc
cmps
inc
in
out
jne
movs
call
or
xchg
and
repz
and
call
sub
lahf
repnz
mov
dec
in
popf
mov
pop
mov
cmp
popa
movs
push
sar
or
(bad)
loopne
push
retf
or
xchg
add
(bad)
pop
inc
ret
ins
dec
repz
sub
mov
dec
lds
inc
call
nop
hlt
adc
add
sub
and
or
repnz
push
xor
add
push
shl
push
sbb
nop
inc
jg
or
push
adc
lea
pop
add
cwde
fwait
call
adc
mov
outs
add
add
mov
add
imul
and
sub
push
push
ja
imul
popf
out
xchg
mul
and
xor
outs
ret
add
sub
jno
cld
jo
sub
mov
mov
aad
cli
psadbw
and
pusha
jle
xchg
jo
jo
ds
(bad)
sbb
cmp
(bad)
sub
mov
ret
cmovb
mov
fdiv
pop
dec
es
add
and
xchg
loopne
ja
mov
push
and
jg
mov
ret
mov
in
shl
jmp
inc
xchg
jg
inc
fnstenv
xchg
add
enter
cmc
sbb
mov
xor
dec
js
mov
xchg
arpl
ret
shl
add
jns
mov
inc
loopne
leave
je
push
ins
pop
or
and
sbb
sbb
arpl
adc
gs
rcl
sbb
add
in
mov
push
or
sub
hlt
sub
sbb
xchg
cmp
sub
push
test
or
xor
xor
mov
cli
fs
hlt
inc
mov
cmp
js
fadd
pop
test
out
sbb
adc
inc
clc
push
stos
push
mov
cwde
cmp
ud2
or
xchg
add
xchg
idiv
and
push
adc
ins
fcomp
pop
mov
adc
cmp
sahf
scas
cmp
adc
push
or
push
inc
sub
pop
mov
push
ins
sbb
aaa
xchg
lahf
xor
push
fs
xchg
shl
jge
push
cmc
int3
call
sub
lahf
fcom
sbb
add
aaa
(bad)
push
out
sbb
inc
sbb
push
sub
mov
repnz
leave
pop
test
pop
(bad)
clc
retf
fldenv
cmp
in
push
push
xchg
mov
arpl
add
pop
xor
sahf
aaa
sub
movs
in
cmc
dec
sar
jae
jp
shr
nop
push
push
mov
loope
inc
sub
push
add
cmp
or
xchg
or
and
push
sbb
push
push
sub
shl
iret
sbb
mov
movs
popf
mov
and
push
or
outs
fiadd
dec
pop
addr16
aam
shl
and
ret
xor
or
cmp
cmps
jo
fsubr
jns
dec
scas
cmp
es
call
pusha
xchg
cmps
xor
sbb
dec
ins
scas
ds
pop
fisubr
sbb
repz
sub
fmul
xchg
jle
jg
cmp
jg
loope
add
push
ins
js
js
ja
cdq
or
fmul
stc
jbe
sub
jne
test
fidiv
or
sbb
add
xchg
ja
jecxz
or
inc
or
(bad)
mov
or
loope
movs
add
or
sbb
adc
es
sysret
sub
shl
js
loop
xchg
mov
sub
adc
xchg
or
or
ret
loopne
lea
add
push
ins
add
mov
pop
dec
lock
retf
cmp
inc
scas
and
mov
push
lods
inc
push
test
je
inc
jne
push
jo
(bad)
or
mov
imul
jnp
cmp
mov
movups
bound
sahf
add
push
xor
pop
xor
push
pop
push
pop
fld
xor
inc
push
add
or
jmp
sahf
or
cdq
cmp
pop
(bad)
or
inc
sbb
mov
test
and
aas
dec
sbb
mov
dec
xchg
sub
retf
add
add
cmp
lods
pop
aaa
ja
xor
xchg
xor
cli
mov
xor
mov
es
not
inc
dec
or
cmps
imul
leave
add
sbb
and
sub
ins
mov
outs
cmovl
jecxz
loope
pop
pop
jp
xchg
outs
cmc
sub
pop
lods
aam
(bad)
mov
mov
shr
clc
pop
mov
imul
push
lea
push
ret
cmc
lea
add
or
sbb
inc
dec
xor
jg
lds
call
jg
adc
or
mov
mov
les
jle
push
sbb
sbb
ds
ja
je
inc
sbb
ds
push
sbb
fst
pop
sub
dec
pop
sub
fdivr
sbb
xor
dec
loop
gs
stos
dec
sbb
jno
hlt
or
pop
mov
test
fiadd
jnp
aam
inc
inc
je
or
and
sbb
add
aad
mov
adc
ja
mov
aaa
(bad)
xor
call
jns
lods
imul
xor
pushf
inc
add
adc
into
adc
mov
div
jmp
push
or
jmp
adc
call
lock
add
xchg
sbb
mov
adc
jns
jbe
pop
lods
gs
nop
nop
dec
push
(bad)
jnp
add
mov
mov
mov
dec
ret
ins
jle
enter
pop
add
mov
xchg
inc
(bad)
cmp
(bad)
rol
or
sahf
into
(bad)
pop
std
push
lods
pop
xor
fnstenv
push
repz
into
sub
leave
and
push
mov
icebp
add
sub
mov
stos
push
shr
or
sbb
or
dec
adc
repnz
add
push
(bad)
xchg
std
sub
ret
mov
out
sbb
scas
movs
popa
div
sar
in
xchg
out
cmps
fiadd
pusha
imul
test
mov
or
mov
jae
test
cld
push
lods
inc
cmp
fsubr
aaa
push
aaa
push
test
je
adc
xchg
and
sub
cvttps2pi
sub
ds
push
or
xchg
pop
inc
imul
jge
mov
push
mov
xor
cmp
push
pop
jecxz
add
adc
test
xor
push
lods
and
pushf
add
je
pop
jmp
mov
ror
jne
sub
mov
adc
iret
adc
and
adc
mov
jnp
pushf
cmps
xchg
mov
jne
test
stos
xchg
xor
pop
cli
mov
sbb
ret
retf
lock
outs
dec
mov
mov
inc
dec
(bad)
sub
xchg
scas
mov
ds
test
call
push
sub
les
mov
add
aas
or
push
sbb
mov
sbb
inc
push
or
xor
xchg
inc
add
js
lock
dec
or
in
scas
xor
cmp
mov
test
sub
adc
or
adc
cmp
sbb
fisttp
mov
in
sbb
add
jmp
sbb
pop
push
mov
clc
xor
xchg
fisttp
add
xchg
xchg
daa
and
mov
add
sub
xchg
(bad)
cld
xor
sbb
push
cwde
xchg
adc
or
pusha
aam
clc
jb
mov
or
push
loope
gs
push
ret
sar
addr16
and
sbb
ins
mov
ins
pushf
sub
fnop
dec
mov
jg
xchg
mov
ds
add
dec
loopne
push
sub
pop
xchg
nop
inc
xor
mov
sub
fcomip
mov
adc
cmovne
nop
mov
or
ret
jno
into
push
pop
lock
pop
push
and
or
mov
movs
icebp
mov
ret
or
fcmovb
dec
adc
jno
ffreep
retf
test
jns
outs
ins
rcl
push
mov
(bad)
and
push
push
inc
sub
shr
movups
mov
(bad)
sbb
adc
mov
cmp
jne
lods
sub
mov
pop
xchg
sahf
pop
inc
or
push
inc
xchg
aam
outs
clc
aaa
lock
add
and
enter
xchg
inc
sbb
pop
test
adc
pop
or
adc
loope
stos
sbb
test
into
aam
lock
xchg
push
sub
or
mov
mov
cmp
and
cmp
dec
icebp
xchg
xchg
call
adc
mov
test
mov
mov
cmp
(bad)
adc
sub
add
or
push
add
add
mov
pop
mov
mov
push
add
sbb
daa
sar
sbb
mov
cmp
xchg
lods
test
inc
in
shl
std
inc
hlt
dec
aaa
jnp
push
and
out
xchg
vrcpps
sbb
add
sbb
loop
ror
mov
xchg
xor
xchg
call
lea
or
sub
push
xchg
mov
and
test
xor
jp
fdivr
sub
sbb
inc
js
scas
ins
popf
add
ds
adc
icebp
dec
enter
push
or
add
mov
popf
not
mov
scas
ret
xchg
cwde
dec
inc
pop
pushf
add
cmp
pop
cwde
add
sub
ins
loope
lahf
and
ins
fs
out
imul
pop
data16
leave
sub
pushf
push
mov
pusha
cld
shr
mov
cmp
test
cmp
in
nop
or
lods
add
add
retf
imul
push
push
xchg
mov
add
xchg
lea
sbb
movs
sub
mov
and
xor
jecxz
mov
or
jmp
add
je
adc
stos
sbb
inc
adc
jb
cmps
loopne
cmp
push
mov
pop
dec
inc
and
xor
add
dec
(bad)
jmp
adc
adc
push
lea
cmp
test
push
xor
add
inc
dec
pop
jne
inc
pop
or
push
mov
test
out
rcl
inc
mov
test
xlat
(bad)
fisttp
lods
mov
outs
lahf
pop
bound
in
add
push
data16
mov
push
jo
xor
mov
ins
aaa
mov
jecxz
test
mov
add
inc
daa
je
dec
sbb
ds
adc
push
aaa
and
inc
pop
les
or
dec
or
push
scas
addr16
inc
sbb
(bad)
jmp
mov
and
test
xor
pop
sub
xchg
jb
test
dec
mov
loope
jg
dec
adc
mov
xchg
jnp
sbb
inc
or
pop
mov
cs
js
movs
add
scas
and
fisub
inc
sbb
pop
(bad)
js
and
pop
add
neg
jmp
dec
pop
mov
pop
cmp
stc
xchg
xchg
(bad)
mov
jae
test
(bad)
lods
int3
dec
pop
mov
call
inc
add
std
mov
pop
mov
push
push
or
fstp
inc
push
add
pusha
jle
inc
and
call
icebp
inc
and
mov
sub
jge
sbb
mov
fcom
mov
iret
and
or
and
loope
jns
call
push
sub
mov
inc
in
xlat
mov
mov
push
push
mov
test
mov
sub
pop
inc
lea
test
int
add
or
cmp
pop
push
inc
xchg
and
gs
movs
loop
pop
movs
xchg
pop
push
mov
push
ja
mov
or
fwait
push
sub
lahf
add
dec
mov
push
inc
cwde
push
sbb
out
out
add
add
mov
int3
retf
inc
hlt
add
mov
or
adc
cmc
mov
push
push
mov
adc
add
and
fdiv
dec
movs
mov
outs
push
jle
lahf
cwde
mov
pushf
mov
xor
dec
cmp
mov
mov
mov
sub
pop
loop
gs
add
cmp
test
mov
icebp
xchg
pop
add
cli
jle
push
mov
mov
rol
pop
loope
sbb
loop
rcr
push
lods
jo
retf
xchg
out
lahf
or
mov
sbb
mov
imul
or
stc
xor
or
xor
push
and
push
in
stos
add
lea
mov
popa
lods
ror
jmp
ret
popa
sbb
push
push
sbb
out
and
sbb
adc
cdq
shr
pop
pop
fcomp
jmp
clc
sub
cmp
rol
ret
push
lea
mov
xchg
pop
mov
test
imul
lea
lock
das
sbb
mov
sub
ret
aas
and
xor
sar
add
(bad)
movs
sbb
fs
push
or
jp
pop
lahf
jnp
in
or
xchg
lea
mov
movs
lea
inc
xchg
xchg
mov
sub
inc
jge
adc
adc
inc
(bad)
sti
sbb
pop
add
pop
mov
push
pop
enter
ja
cmp
inc
and
sbb
inc
lea
mov
jge
shl
ss
xor
push
jnp
or
std
pop
jne
imul
and
jmp
aam
pop
pop
in
pop
pop
xchg
push
inc
cmp
xchg
jg
push
in
xchg
xchg
cmp
cmp
test
push
or
xor
adc
push
push
jne
loopne
pushf
cmp
xchg
sbb
stc
sahf
jmp
or
dec
xchg
xchg
mov
add
sbb
pop
add
cmp
jmp
ud2
cmp
dec
hlt
add
leave
(bad)
mov
(bad)
xor
das
mov
add
not
jle
retf
cmp
hlt
pop
sub
mov
mov
add
outs
push
and
mov
loope
push
js
pop
mov
cwde
add
loope
inc
retf
pop
cmc
mov
lods
in
mov
xchg
jno
dec
push
sub
mov
mov
xor
pushf
jbe
xor
or
push
mov
sub
add
push
sbb
mov
or
sbb
pushf
clc
jnp
mov
xor
std
popa
add
add
ss
dec
or
ficomp
add
loopne
test
mov
hlt
cwde
sub
inc
push
sub
punpckhbw
imul
es
or
jbe
jp
add
lock
push
pop
dec
div
rcl
cmp
jbe
aam
push
inc
dec
mov
test
xor
retf
rcr
push
add
mov
(bad)
adc
mov
sub
je
xchg
sub
or
pop
loop
fcom
and
cmp
and
mov
push
ret
adc
outs
jmp
push
add
ret
mov
gs
inc
repnz
jne
adc
add
sbb
sub
cmps
scas
sbb
add
or
fisub
sbb
jb
fs
mov
inc
movs
mov
cmp
in
or
aaa
push
das
mov
or
into
popa
xor
les
inc
cs
mov
push
mov
imul
call
add
push
std
push
pop
cdq
movs
adc
xchg
daa
add
jmp
xor
fadd
dec
mov
bound
pop
pop
out
push
push
jmp
ins
mov
add
mov
xor
inc
dec
xor
push
push
pusha
or
and
pop
sahf
sub
adc
sub
out
sub
call
or
shl
xor
cmp
inc
cmps
add
movs
or
jge
add
cdq
jb
std
dec
sbb
add
pop
mov
xor
cld
sbb
jp
rol
xor
sbb
jnp
jl
mov
cmp
lahf
sub
scas
movs
jns
push
sub
inc
std
sub
jg
or
ret
test
mov
mov
push
or
je
inc
cmp
cli
lea
jg
(bad)
iret
ja
push
sub
xchg
add
repz
fs
dec
jl
jg
pop
push
jecxz
fldenv
add
das
xor
sub
sahf
xchg
fstp
pop
pop
xchg
jl
sub
movs
sbb
test
push
sbb
or
and
imul
pop
inc
dec
cs
adc
shr
mov
loopne
in
jae
sti
adc
pusha
fs
aam
daa
mov
push
xor
xor
adc
pop
test
push
and
pop
inc
cmp
sub
inc
push
gs
mov
shr
daa
(bad)
and
dec
mov
add
pusha
jecxz
sbb
rol
dec
jo
xchg
mov
add
inc
(bad)
shl
jae
mov
call
lock
mov
mov
add
pop
xor
mov
lahf
add
aad
mov
sub
movs
inc
ins
jb
push
sahf
mov
les
jmp
cwde
cdq
imul
mov
mov
gs
adc
mov
dec
add
push
and
push
xlat
jno
int
jo
ss
or
fnstsw
jno
cwde
mov
or
mov
and
xchg
ret
mov
xor
add
fistp
sbb
cmp
and
enter
test
dec
pop
leave
add
and
data16
push
push
push
push
daa
icebp
mov
add
sbb
popf
inc
and
daa
mov
sbb
retf
test
retf
bound
jp
lahf
sub
icebp
inc
lods
cmp
push
adc
dec
cmp
cmp
jg
and
or
sbb
daa
dec
inc
aas
xor
outs
inc
add
ror
ins
ins
fimul
xlat
push
fisubr
and
or
and
test
sub
inc
xor
loopne
sbb
adc
xor
(bad)
dec
inc
cmp
popf
add
aas
add
push
push
test
fnsave
inc
aas
add
push
movs
outs
and
imul
push
add
repnz
adc
push
and
cmp
add
fldcw
cmps
adc
push
inc
push
call
cdq
push
jae
adc
fs
mov
ds
and
mov
test
jmp
push
es
aad
enter
nop
shl
je
fwait
daa
cmp
imul
xor
popa
cmps
pop
ret
xchg
or
iret
adc
push
cmps
push
xchg
fisub
mov
inc
lods
sbb
sbb
dec
sbb
into
shl
push
add
adc
daa
loopne
or
mov
adc
jle
add
adc
ret
ss
ds
es
cmp
push
adc
je
push
or
push
push
call
rcr
pop
inc
out
xchg
rol
sub
(bad)
adc
inc
sub
mov
fmul
imul
mov
cs
or
inc
sub
mov
push
push
rcr
(bad)
(bad)
cmp
je
jmp
adc
mov
push
(bad)
push
sbb
cwde
jno
adc
push
fdiv
rcl
popa
mov
pop
and
mov
or
repnz
les
push
enter
adc
push
and
cmp
fldcw
shl
mov
mov
cmps
fs
push
or
xor
popa
out
fld
pop
inc
lods
add
sbb
or
inc
fcom
inc
push
jl
lock
sahf
adc
add
daa
inc
adc
or
adc
out
sbb
(bad)
or
push
cmp
cmp
dec
pop
add
lock
mov
dec
mov
dec
adc
stos
retf
push
rcl
icebp
lea
mov
xor
add
lods
(bad)
jno
mov
or
movlpd
xchg
mov
lods
retf
or
(bad)
jnp
sbb
sar
add
mov
adc
cmp
fucomp
ret
mov
jbe
inc
enter
fdivr
fild
sub
sbb
xor
jmp
mov
sub
sbb
push
jg
jl
std
add
add
adc
mov
adc
pop
clc
push
push
adc
mov
cmps
cmp
aad
or
add
cwde
push
inc
mov
pop
cmps
jl
jg
cmp
cmp
jbe
mov
push
adc
xor
lds
xor
xchg
push
xor
outs
int
jno
jle
(bad)
in
cmove
cmp
ret
dec
ins
mov
xor
cdq
imul
je
cmp
in
sub
cmp
xor
fld
aaa
pop
out
add
es
imul
imul
popa
mov
push
sar
jmp
pushf
jmp
mov
mov
xchg
jmp
jecxz
clc
ins
rcl
mov
(bad)
dec
push
inc
popa
adc
or
xlat
mov
or
mov
cmova
dec
je
jns
shl
rol
and
push
shr
mov
mov
cmp
call
sar
adc
sub
dec
dec
or
mov
fbld
pop
stos
add
fsubr
xor
xchg
mov
jne
retf
js
and
leave
sbb
inc
add
ret
inc
and
jle
push
and
jmp
jg
ins
shl
aad
cmp
pushf
mov
arpl
pop
adc
outs
ins
in
std
push
out
aam
retf
fmul
jbe
imul
add
dec
loope
ins
jne
push
sub
mov
repz
dec
inc
jl
add
jnp
or
mov
ins
or
ins
xor
or
dec
ss
and
add
and
mov
adc
pop
sbb
test
or
rol
test
xor
test
sbb
scas
mov
ins
gs
mov
cmp
lods
sbb
outs
adc
add
or
mov
add
and
fidivr
dec
mov
add
or
mov
xor
jl
adc
cwde
in
test
cdq
mov
rcr
and
pop
dec
push
lock
cmp
test
mov
(bad)
imul
dec
pushf
popa
jp
(bad)
mov
push
cmps
xchg
add
adc
fiadd
push
xchg
arpl
jmp
pop
xchg
or
sbb
mov
pop
push
les
push
cmp
push
lock
xor
call
pop
xor
jecxz
ss
js
aas
or
adc
(bad)
mov
cli
or
push
and
xchg
sub
pop
xor
les
xchg
xchg
jge
push
xchg
in
inc
inc
jecxz
(bad)
ins
or
xchg
xchg
add
jle
xchg
cmp
pop
adc
mov
jne
(bad)
or
cdq
add
adc
mov
dec
sub
sub
ds
movs
test
xor
inc
or
and
adc
and
push
mov
xchg
push
inc
sub
xchg
fiadd
jmp
ja
xor
push
jo
xor
adc
push
sbb
ja
int
mov
mov
adc
push
xor
xchg
inc
sub
or
ret
xor
xor
mov
mov
adc
cli
xor
jl
jg
push
pop
jbe
cmp
xor
out
mov
scas
fwait
add
and
pop
clc
popa
sbb
add
adc
or
test
push
adc
cmp
les
push
xchg
xor
lahf
xchg
fwait
mov
mov
pop
dec
fld
lahf
inc
pushf
xor
jne
mov
fs
push
or
(bad)
loop
push
outs
sub
mov
je
mov
cmps
sbb
push
les
scas
ins
scas
icebp
outs
in
aaa
xchg
push
or
cmp
jne
mov
adc
sub
or
inc
sub
sbb
push
xor
sti
pop
push
out
cs
pop
push
jb
pop
mov
lock
xor
inc
sub
cdq
cs
pop
sub
push
imul
lods
ja
jl
rol
in
mov
cwde
ficom
push
xchg
mov
fcom
cmp
xor
pusha
movs
add
test
inc
adc
sub
in
inc
or
mov
faddp
dec
stos
jnp
shl
jle
cmp
int
or
add
sub
xchg
xchg
mov
add
add
cmp
aaa
test
cmp
or
mov
cmp
add
inc
jne
cmp
or
ret
sbb
rcl
mov
adc
mov
jecxz
or
push
nop
and
out
xor
out
cdq
cmp
mov
cmp
shl
scas
jae
fsubr
pop
add
cmp
movs
mov
pop
jne
movs
cdq
pop
pop
mov
mov
push
sbb
xchg
or
push
jae
mov
mov
retf
push
popa
es
lahf
dec
cmp
inc
sbb
mov
sub
add
dec
loope
sahf
shl
scas
sbb
and
add
repz
add
or
adc
bound
fstp
sub
inc
cmp
jl
sbb
int
adc
or
rol
jmp
mov
adc
in
or
and
adc
xchg
or
aam
outs
sub
lods
and
and
sub
push
xchg
adc
xchg
(bad)
out
sub
cdq
add
mov
cmc
adc
cmp
(bad)
call
inc
push
add
inc
push
add
shl
cmp
rol
jne
jmp
not
ja
nop
mov
outs
pop
cmp
hlt
pop
push
xchg
fdivr
(bad)
jg
sub
fmul
or
sub
add
retf
enter
leave
es
ins
lods
mov
mov
xchg
mov
arpl
jl
mov
enter
xchg
(bad)
sub
jmp
cmove
cmp
jb
pushw
xchg
fdiv
aaa
dec
pop
jmp
mov
jmp
fsub
push
and
std
out
inc
add
sub
push
sub
mov
dec
xor
pop
lahf
adc
pusha
imul
mov
xor
push
int
mov
push
xor
fimul
fadd
or
jmp
lea
inc
mov
xor
xor
inc
xor
(bad)
rol
sahf
sub
add
sub
inc
sub
nop
lods
sbb
pop
lea
push
sahf
dec
or
(bad)
js
ss
ja
arpl
mov
aaa
ret
sahf
cmp
jne
addr16
fild
test
inc
jmp
and
inc
(bad)
xlat
mov
retf
dec
add
out
inc
add
inc
push
shl
stos
or
xor
sub
mov
mov
xchg
jp
mov
mov
xchg
mov
ins
cmp
sub
inc
dec
add
arpl
lock
inc
ret
mov
sub
xor
adc
push
or
imul
and
imul
jg
push
shl
(bad)
movs
cmps
or
sbb
sti
pop
inc
pop
push
push
jae
movs
jb
inc
dec
dec
sahf
mov
dec
inc
inc
adc
repnz
test
adc
inc
pushf
out
cmp
pop
mov
sbb
nop
inc
lods
mov
mov
sar
add
jl
pop
and
xchg
mov
out
cwde
jmp
push
ror
xlat
(bad)
outs
sbb
cmp
jno
mov
add
push
mov
pcmpeqw
pop
xor
gs
xor
push
ss
test
jmp
sub
jecxz
adc
das
mov
rcl
and
push
test
push
push
pop
scas
sar
xor
add
push
adc
cmp
div
loope
adc
ret
or
push
lods
cmp
loop
fstp
pop
aam
ss
in
stos
in
test
data16
mov
dec
adc
add
xor
inc
pusha
nop
inc
nop
adc
jge
loope
nop
aad
add
xchg
sbb
je
sar
scas
sbb
jl
mov
and
pop
xchg
and
or
adc
ret
das
add
pop
fistp
mov
and
(bad)
ror
push
xchg
inc
push
jl
sar
add
adc
jg
loopne
xor
aam
jecxz
in
push
(bad)
push
sub
xchg
test
xchg
mov
push
or
inc
aam
lock
rcr
aam
inc
jle
mov
cmc
adc
push
add
cmp
dec
add
jle
mov
outs
xchg
mov
pop
mov
xchg
dec
and
add
mov
sbb
retf
pop
mov
pop
sub
dec
rol
or
ja
ud0
add
pop
clc
aam
loope
pop
data16
das
pop
std
div
outs
(bad)
jp
cmp
jge
dec
inc
mov
xchg
dec
add
jl
daa
loope
mov
push
push
jle
lods
sub
imul
xchg
xor
inc
push
lods
je
std
and
or
shl
or
je
fistp
cmp
loope
add
add
movnti
xor
pop
mov
retf
adc
jg
mov
add
inc
xchg
jno
retf
stc
dec
sub
(bad)
call
nop
adc
add
loopne
inc
add
movsx
xor
xchg
popf
(bad)
cmp
jb
xor
idiv
xchg
ret
jno
mov
cmp
push
jl
retf
xor
add
(bad)
std
lock
pop
cmp
jne
dec
add
and
cmp
je
push
cmp
cs
je
mov
cmp
jne
sbb
je
cmps
mov
jne
push
add
cdq
add
in
mov
dec
call
inc
mov
push
dec
popa
bound
cmps
mov
adc
add
pop
lock
mov
mov
cmps
dec
ja
mov
or
push
push
and
xor
idiv
dec
ds
nop
pop
mov
js
in
adc
pop
das
sub
xchg
pop
inc
add
push
push
arpl
retf
pop
xchg
push
or
adc
test
adc
pop
out
push
sbb
call
or
add
(bad)
retf
repnz
and
push
movs
pop
adc
cmc
fist
js
scas
mov
je
pop
jg
mov
ds
mov
or
lahf
ret
dec
jle
sub
mov
cmp
scas
fisubr
adc
(bad)
sbb
pop
movs
call
mov
lea
xor
mov
dec
loop
js
ss
stos
pop
jmp
mov
cmps
stos
pop
jp
add
rcl
and
cmc
ret
ror
jp
jns
and
ja
push
pop
cmp
sub
out
jmp
dec
xor
nop
or
fcomp
mov
and
xlat
jmp
sub
das
lea
push
push
cmp
ins
sbb
sbb
mov
jl
xchg
in
sub
lods
xor
ror
add
arpl
cwde
sub
lea
add
popa
and
pop
or
pop
cmps
inc
cmp
pusha
pop
or
adc
mov
jae
mov
mov
cmp
loopne
(bad)
jne
sbb
push
jo
out
out
iret
pop
int3
pop
push
inc
adc
xchg
dec
stos
or
adc
adc
cmp
sahf
inc
xchg
mov
imul
push
cmps
test
ror
jl
adc
and
or
sub
or
and
loop
push
and
ins
or
into
add
or
add
sahf
add
repnz
xchg
sbb
stc
jl
stc
adc
push
jns
lock
jge
jbe
mov
mov
ret
xchg
sbb
xchg
xor
rcr
or
pop
push
outs
shl
pop
into
or
mov
jg
jl
clc
cmp
cmp
or
pushf
lea
movs
sar
jl
add
(bad)
loopne
test
xor
pushf
cmc
jecxz
stc
xchg
push
push
test
dec
sub
call
jge
jno
ds
add
cmp
xchg
xor
sub
mov
pushf
fdivr
ds
dec
pop
inc
bound
and
lods
dec
jae
pop
mov
dec
inc
rol
les
jmp
rol
fs
jo
jl
rol
jo
fs
mov
nop
adc
inc
mov
mov
inc
inc
push
adc
add
movs
dec
pusha
add
adc
add
shl
add
mov
js
mov
add
imul
or
jge
outs
mov
xchg
fiadd
mov
xor
inc
mov
xchg
icebp
addr16
jne
push
sti
and
(bad)
fdiv
xchg
cmp
and
and
lods
lods
sbb
cmp
sub
adc
push
pop
je
jo
out
cmps
loope
cmp
inc
call
pop
adc
add
pop
add
pusha
add
pop
mov
and
adc
cmps
pop
pop
inc
add
mov
test
push
ror
push
sbb
daa
sub
call
adc
xor
sbb
fidiv
fimul
push
push
int3
mov
or
ror
add
retf
test
loopne
lock
les
in
inc
push
inc
sbb
mov
aad
outs
pusha
sub
sbb
adc
sbb
pop
or
push
sbb
cmp
fld
(bad)
aam
dec
sahf
add
add
inc
call
jbe
stc
fwait
dec
pop
adc
inc
adc
pop
sbb
push
or
ja
sub
test
jp
add
push
cmp
xchg
cld
add
cmp
jnp
stos
jne
or
mov
xor
pop
push
mov
cmp
loopne
inc
mov
cmp
daa
bound
mov
push
add
cwde
in
push
push
sahf
in
dec
fwait
int3
mov
mov
add
adc
dec
jae
cmp
movs
rcl
dec
mov
test
jmp
cmp
or
cmp
jne
mov
pop
call
add
ins
dec
push
arpl
mov
dec
adc
inc
and
data16
nop
call
mov
xchg
pop
addr16
xor
push
add
and
fwait
jmp
mov
fild
mov
sbb
fild
jmp
xor
test
imul
jecxz
hlt
or
jmp
pop
dec
xor
add
and
mov
jnp
test
xchg
push
ds
xor
in
push
call
sbb
adc
lock
push
push
adc
push
push
ficomp
bound
in
fisttp
loopne
lea
ret
xor
hlt
scas
push
loop
and
sub
sub
inc
movs
aaa
cmp
mov
and
push
sub
cwde
sub
push
call
mov
sub
mov
(bad)
adc
adc
jnp
jmp
inc
push
push
fs
inc
inc
push
cmps
mov
mov
adc
sahf
sub
add
push
and
js
xchg
test
ficomp
mov
add
push
imul
test
push
imul
pop
inc
gs
fs
cmp
je
lea
cld
cmp
je
cmp
cwde
xchg
jp
ror
push
shl
ja
jl
jmp
cwde
inc
mov
inc
scas
cmp
inc
imul
mov
add
mov
push
push
shr
(bad)
push
sbb
xor
push
jns
sahf
mov
outs
pop
rcr
dec
paddw
jne
(bad)
push
jo
sub
mov
mov
push
pushf
add
mov
out
adc
mov
dec
sbb
ds
dec
add
dec
and
pop
ret
xor
sub
push
call
call
addr16
movs
pop
push
in
mov
movs
mov
push
cmp
inc
add
scas
adc
(bad)
adc
jo
enter
test
push
sbb
xchg
rcr
js
loop
ins
cmp
push
jmp
lea
lock
daa
and
push
ror
xor
pop
xor
or
enter
mov
cmp
ja
cmp
pop
stos
cwde
cmp
(bad)
movs
(bad)
jmp
out
shl
pop
sub
mov
sbb
mov
add
inc
jl
cmp
and
mov
mov
and
jp
test
scas
add
mov
ret
sub
fcom
mov
mov
xchg
cmps
adc
les
enter
jnp
adc
jl
adc
aam
pop
ret
jae
push
adc
mov
push
push
pop
mul
cmp
(bad)
je
popa
jns
pop
nop
test
adc
jne
cld
sbb
int3
fldpi
pop
sub
imul
test
ret
pusha
mov
mov
(bad)
ins
push
inc
movs
retf
push
push
aaa
in
(bad)
xor
dec
dec
push
or
mov
pop
jp
leave
cmp
push
pop
push
dec
mov
xchg
push
jp
add
adc
in
push
pop
push
mov
int3
repnz
pushf
xchg
cmp
fs
push
dec
inc
mov
stos
inc
cwde
push
add
(bad)
sar
mov
aam
(bad)
jo
xor
dec
lock
int
sub
sbb
(bad)
outs
jmp
mov
sbb
nop
loopne
mov
jo
jae
cdq
jae
sub
mov
dec
cmp
jmp
xor
xor
retf
pop
sub
cmps
xor
cs
or
inc
or
in
sub
adc
mov
cmp
push
push
add
add
dec
shr
jo
clc
jnp
adc
retf
or
call
ins
int3
push
pop
adc
(bad)
into
mov
mov
and
xchg
or
cmp
xor
push
cmp
or
cmp
push
and
retfw
add
scas
js
add
rol
shl
shr
and
mov
inc
mov
out
adc
jb
dec
lea
das
or
fsub
jge
nop
cmp
inc
adc
or
or
dec
xor
jae
adc
jae
mov
pop
inc
adc
outs
mov
xor
fmul
fdivr
cmps
push
mov
sub
dec
push
lea
in
xchg
cmp
inc
out
push
push
in
sti
pushf
out
popa
jne
adc
push
jae
or
jmp
popf
(bad)
std
dec
xor
add
push
or
push
push
xchg
sbb
or
je
add
pop
pop
pop
adc
sub
inc
or
jnp
push
pop
push
jbe
pop
add
mov
fcmovnb
rcl
lods
into
fiadd
mov
jmp
xor
enter
xchg
pop
adc
sbb
xor
add
stos
jge
jp
fst
leave
or
jae
push
scas
inc
mov
mov
int3
sbb
dec
mov
mov
pop
gs
push
js
sar
icebp
sbb
jl
jns
or
pop
fist
or
movs
xchg
dec
xlat
popf
jne
jmp
movs
xlat
adc
dec
(bad)
or
add
ins
xor
das
xchg
mov
and
pop
fwait
push
lods
xor
and
sbb
jl
push
xor
adc
vmovlhps
test
xchg
mov
sbb
push
push
or
sbb
or
ret
jp
pop
ja
jno
test
pop
add
(bad)
movs
loope
es
sbb
xchg
xchg
mov
cmp
adc
leave
xor
mov
xor
jmp
sbb
adc
imul
or
cmovle
cmp
lods
xchg
cmp
xchg
outs
and
stos
sar
test
or
in
fcomp
scas
add
sub
mov
push
or
or
xor
sbb
sbb
push
in
test
ror
push
push
jmp
(bad)
fs
mov
pop
and
(bad)
or
or
xor
adc
and
(bad)
push
xor
push
jb
add
mov
mov
data16
adc
push
push
cmc
bound
mov
rol
mov
add
cs
ja
jb
popf
dec
iret
rol
xor
lds
stos
sti
sti
add
or
mov
cmp
dec
push
inc
jae
cli
and
(bad)
movs
out
or
xor
jp
push
lods
mov
cmp
push
pop
push
push
ret
pop
das
out
sti
push
bound
push
outs
add
dec
xchg
std
inc
fwait
sub
sub
jecxz
push
arpl
xor
into
jmp
sub
push
repnz
ja
fmul
daa
push
push
dec
or
je
push
mov
dec
mov
push
push
adc
push
imul
add
or
push
add
movs
jns
push
in
lock
push
shl
add
mov
nop
add
(bad)
stc
je
cmp
ror
je
lods
dec
je
sub
sbb
push
fwait
rol
test
sbb
jmp
or
pusha
and
test
adc
or
pop
mov
push
sar
add
inc
pusha
loopne
rsm
and
stos
or
dec
sbb
xlat
jno
adc
or
scas
ret
push
push
daa
dec
xor
(bad)
stc
call
mov
xor
fcmove
jl
wrmsr
dec
mov
push
push
push
mov
inc
(bad)
lock
or
mov
mov
aam
mov
mov
dec
cmp
xchg
push
dec
mov
pop
pop
inc
ss
clc
test
mov
xchg
lahf
adc
or
jne
pop
fdivr
pop
cmp
adc
push
xchg
cmp
inc
jbe
cdq
lea
pop
adc
jbe
push
mov
inc
aam
push
add
jp
and
push
mov
mov
pop
loopne
call
mov
cmp
dec
jo
inc
je
and
ins
mov
pop
aas
sub
jp
ror
scas
add
push
adc
icebp
sbb
les
jne
rcl
(bad)
dec
cmp
(bad)
test
sahf
popa
call
ss
lahf
fild
add
adc
movs
jg
push
add
xchg
mov
nop
push
push
in
push
push
mov
test
push
call
add
xchg
cwde
inc
nop
xor
add
push
add
movs
loope
inc
sub
cwde
jg
pusha
pop
fstp
mov
push
dec
sub
pop
out
mov
jl
ss
xchg
(bad)
pop
mov
mov
mov
je
dec
mov
push
mov
adc
sub
retf
ins
mov
mov
inc
add
pop
inc
(bad)
not
mov
dec
es
jae
push
jecxz
enter
pop
sub
mov
mov
dec
mov
add
dec
jp
sub
jg
sbb
aas
not
lea
ss
pop
or
pop
lea
add
stos
retf
call
or
sahf
jne
cmps
or
or
dec
in
push
lock
add
add
add
stos
addr16
sbb
sub
or
cs
xor
aaa
lock
movs
loope
ret
lahf
sbb
or
push
sub
adc
inc
hlt
jge
mov
xor
xchg
xchg
xchg
in
test
push
into
mov
inc
jle
push
add
ret
call
cs
or
lds
xor
jp
pop
adc
repz
pop
shr
add
cs
cmp
jo
sub
out
into
inc
jg
mov
mov
xor
push
dec
add
inc
and
rcr
cmp
mov
mov
cmp
mov
adc
push
dec
sbb
ret
je
mov
add
enter
test
xor
inc
adc
pushw
fimul
dec
or
(bad)
ins
fiadd
cmp
and
mov
outs
pop
cmp
outs
pop
mov
or
mov
sbb
jnp
retf
inc
sub
xlat
aaa
push
mov
or
or
pop
and
aam
mov
adc
sub
mov
push
inc
test
fisub
jo
push
mov
sbb
sbb
adc
jae
adc
in
pushf
or
ins
add
dec
je
sbb
dec
add
jbe
iret
xor
shl
jnp
dec
cmp
or
dec
rcr
add
inc
mov
push
cmp
bound
ins
and
inc
fucomi
or
pop
mov
mov
je
outs
pop
jl
adc
mov
xchg
ret
aaa
or
add
jmp
pop
inc
push
(bad)
in
add
addr16
mov
jb
in
dec
inc
iret
call
add
add
cdq
test
jns
xchg
jbe
mov
jo
pushfw
or
or
or
inc
bound
adc
add
jne
jmp
push
fwait
scas
add
je
pop
mov
pusha
fwait
or
add
adc
cmp
mov
into
mov
mov
ror
push
inc
daa
mov
lock
cmp
jl
jmp
sub
mov
cmp
mov
hlt
loope
lods
test
sub
pushf
jbe
inc
repnz
or
mov
sub
ror
mov
movs
push
gs
push
test
daa
adc
sti
inc
sbb
ins
pop
and
fild
xor
xor
cmp
fist
and
imul
popf
dec
sbb
test
push
or
xor
jmp
hlt
mov
cmp
adc
pop
stos
cmp
push
adc
xor
or
loopne
pop
ret
adc
stc
movs
mov
xor
mov
aam
mov
retf
cmp
ss
or
sub
push
mov
mov
stos
push
adc
mov
movs
std
jg
pop
pop
adc
repnz
enter
jge
inc
ins
mov
add
mov
jle
mov
push
nop
or
int3
je
xchg
sbb
xor
jne
dec
jl
add
dec
les
and
mov
dec
inc
sub
mov
xor
mov
popf
(bad)
pop
cmp
addr16
jmp
sub
rcl
pop
jle
rol
ret
jmp
adc
add
fs
sub
mov
sahf
pop
add
mov
add
and
sub
mov
add
mov
das
adc
adc
push
adc
inc
aaa
push
clc
and
push
cmp
stos
jg
mov
pop
push
adc
sar
sbb
popf
enter
pop
cmp
iret
xchg
div
cmp
mov
dec
into
outs
sub
mov
popf
icebp
neg
mov
retf
test
out
add
(bad)
enter
xor
and
enter
cmc
ins
sar
mov
xor
ins
inc
xchg
mov
les
sbb
add
mov
xor
inc
jmp
fstp
pop
mov
pop
mov
dec
xchg
or
or
cmp
sbb
pop
or
sbb
std
outs
in
popa
es
jno
mov
mov
add
mov
sbb
jg
ror
mov
dec
aas
je
lea
lock
jmp
xchg
xchg
mov
sbb
mov
pusha
push
clc
or
push
push
xor
jno
add
dec
or
sub
fdiv
mov
mov
and
je
push
jg
mov
popa
cmps
xchg
pusha
push
sbb
retf
les
or
ficom
push
lock
pop
add
cmp
xor
cmp
or
push
enter
or
cmps
add
repnz
cdq
mov
cmps
cdq
push
fs
dec
and
test
jne
pop
inc
clc
mov
add
fld
sub
inc
jmp
push
jns
or
xchg
sub
add
jne
(bad)
lods
cmps
shr
mov
or
pop
imul
push
loope
jne
xor
pop
adc
pop
test
cs
test
and
retf
xor
dec
cmps
arpl
lea
repz
add
push
(bad)
adc
(bad)
mov
pop
add
sub
sbb
ficom
add
sub
mov
or
and
xchg
popf
(bad)
push
push
fs
or
push
clc
lods
jmp
cmp
sti
cmp
ss
or
and
pop
test
or
inc
jbe
mov
or
push
retf
push
(bad)
rol
push
popf
pop
cs
mov
pop
xchg
cmps
xor
call
test
jnp
ss
mov
push
push
mov
and
jno
test
inc
sub
inc
xor
fs
mov
popf
outs
fiadd
add
push
fucomi
or
ds
inc
sub
jo
add
jbe
mov
sbb
bound
and
push
jmp
push
mov
or
jle
dec
push
test
or
push
sbb
mov
or
push
mov
and
or
jle
mov
mov
mov
pop
inc
js
mov
sti
cmps
movs
jbe
in
push
jno
rcr
sbb
fnsave
push
cmp
jmp
sbb
adc
xor
add
xor
mov
add
dec
and
push
rcl
bnd
pusha
imul
std
adc
jo
fldl2e
loope
jns
or
js
dec
jmp
test
push
sahf
ror
sbb
add
rcl
add
mov
test
or
popa
jnp
data16
scas
push
or
fdivr
leave
sbb
cmp
jle
sub
loopne
xchg
addr16
pop
(bad)
js
stc
nop
outs
jmp
push
xchg
stos
mov
(bad)
cmp
xchg
nop
sub
push
add
dec
sbb
out
movs
test
ins
or
mov
dec
sbb
(bad)
in
ret
xor
mov
je
ret
add
clc
enter
je
or
mov
into
sbb
jge
in
sbb
jo
outs
test
scas
jo
pop
gs
fs
movs
and
dec
pop
pop
lods
rcl
addr16
in
adc
add
add
cmp
out
in
unpckhps
or
lods
repz
sub
call
cmps
hlt
test
lods
inc
mov
into
pop
(bad)
test
(bad)
mov
xor
lahf
or
or
sar
sbb
xchg
(bad)
push
push
push
mov
mov
adc
adc
std
mov
mov
fst
push
push
shr
push
mov
mov
inc
es
(bad)
fisttp
cmc
mov
setge
mov
outs
jmp
pop
inc
jno
sub
adc
push
mov
repz
push
push
inc
xchg
inc
adc
adc
mov
push
pop
daa
cmp
push
je
mov
mov
or
inc
cmc
xor
call
lock
add
sbb
or
mov
test
mov
or
add
stos
mov
gs
xchg
sbb
mov
fsub
add
nop
sbb
inc
and
sbb
ret
aad
inc
pop
in
(bad)
mov
sar
and
dec
pusha
xchg
repz
or
jo
fisttp
data16
punpcklbw
pop
or
xchg
les
adc
pop
adc
sbb
xchg
add
and
add
int3
pushf
or
sub
lds
mov
adc
xor
pusha
mov
mov
and
cmp
adc
add
(bad)
std
(bad)
adc
inc
rcl
popf
mov
xor
sbb
jne
xchg
les
inc
jge
mov
xchg
or
sub
je
scas
imul
jo
daa
in
add
sbb
mov
push
sub
xchg
std
test
fcomp
ins
int
inc
add
xchg
push
mov
cld
mov
cmp
or
movs
jo
dec
dec
xor
cmps
test
int3
test
inc
sbb
retf
inc
rol
xchg
sbb
mul
dec
ins
xor
pop
ret
not
jl
sub
nop
rol
adc
sbb
pop
pusha
fdiv
mov
mov
mov
test
outs
test
fld
add
cmp
and
dec
dec
test
aas
push
mov
inc
pop
add
or
pop
pop
lods
adc
pop
or
js
ret
mov
daa
sub
cmp
or
jl
jg
or
jne
retf
mov
rcr
or
push
jecxz
mov
loopne
imul
ins
adc
adc
sub
adc
cmp
xlat
dec
(bad)
mov
movs
sub
xchg
dec
jmp
sub
lds
mov
pop
and
inc
lea
and
jae
adc
or
add
push
cwde
mov
out
jne
inc
pop
js
outs
addr16
mov
mov
cmp
out
or
(bad)
or
xchg
cmp
dec
repnz
mov
inc
out
adc
xchg
cmc
imul
jmp
mov
and
(bad)
pop
dec
cmp
mov
xor
imul
add
xor
adc
push
shl
ins
xchg
or
adc
mov
cmps
push
push
test
clc
sub
std
push
mov
mov
push
lahf
jno
scas
add
enter
mov
push
push
dec
sub
out
rol
or
in
or
pop
cmp
mov
dec
hlt
jae
ficomp
jp
jg
popa
adc
das
or
jne
push
mov
push
mov
call
inc
jmp
or
lea
push
cmps
clc
popa
enter
imul
xor
ins
call
cmps
ins
cmp
mov
adc
push
dec
push
call
cs
pop
add
in
pop
mov
push
sbb
inc
ja
jb
sub
xlat
pop
rol
fild
and
jecxz
pop
mov
test
(bad)
in
or
aas
xor
aas
sahf
add
inc
loop
add
dec
jmp
je
aam
adc
(bad)
(bad)
jg
out
push
xor
mov
and
inc
mov
cmp
or
int3
and
sub
pop
mov
ficom
add
sbb
inc
adc
dec
mov
or
bound
sub
add
inc
inc
and
movs
mov
js
push
push
mov
xor
jne
pop
push
jne
cmps
inc
pop
lods
adc
sbb
stos
inc
jmp
mul
cdq
cmp
scas
and
sub
loope
lock
dec
add
(bad)
push
push
push
(bad)
push
rol
or
sbb
mov
shl
retf
push
mov
ror
inc
or
or
xchg
aas
cmp
mov
test
push
jle
cmp
mov
push
sbb
jge
jl
or
pop
and
ret
adc
xchg
into
ret
sbb
scas
enter
and
cwde
test
into
stos
fimul
retf
imul
xchg
out
aad
push
and
jp
add
jbe
push
jmp
ret
xlat
test
inc
sub
shr
test
lds
inc
push
test
scas
xchg
enter
scas
cmp
push
add
dec
mov
xchg
scas
cmc
std
and
push
add
mov
add
sub
pop
sub
mov
(bad)
or
add
or
adc
fst
pop
sub
push
mov
push
rcl
clc
add
sbb
dec
push
push
in
dec
es
cmp
lock
outs
sub
or
mov
or
add
iret
mov
mov
mov
movs
daa
adc
pop
mov
mov
aam
or
or
dec
lods
dec
jg
xor
pop
sub
lahf
js
inc
gs
mov
push
jbe
shl
call
push
mov
and
aad
mov
add
mov
xchg
or
push
push
not
add
add
jle
shl
sub
mov
dec
rcl
pop
mov
xor
je
jns
mov
cmps
cld
jo
fcom
xor
add
ds
xor
pop
and
inc
adc
lds
int
mov
add
xor
aam
test
dec
or
mov
jle
add
mov
lock
mov
jge
cmp
jl
js
fdiv
test
or
and
sahf
cmp
sti
fisub
je
cld
popf
popa
xlat
adc
xchg
sbb
sub
sbb
js
jg
xchg
or
(bad)
sar
push
cmp
dec
adc
test
cwde
dec
mov
loope
inc
inc
lods
xor
jecxz
push
or
or
inc
or
rol
jmp
rcl
jge
inc
loop
xor
ins
retf
jl
cmp
adc
cmc
push
or
sahf
add
in
push
mov
test
sub
(bad)
shl
cmp
sbb
sbb
push
imul
push
adc
mov
loope
add
cmp
outs
test
mov
out
sub
sub
sbb
mov
sbb
mov
mov
jne
pop
mov
push
or
inc
xchg
xchg
add
sub
mov
pop
call
jle
lahf
ins
dec
add
sbb
jge
bound
adc
or
ficom
cmp
or
inc
(bad)
pusha
xor
pop
xlat
outs
cld
sub
jno
xchg
pusha
jae
push
dec
je
inc
fs
dec
xor
out
jns
popa
sub
movs
jbe
push
and
mov
arpl
pusha
pusha
sub
adc
mov
fidiv
xor
jo
and
test
adc
mov
repnz
add
cdq
pop
enter
ret
add
or
xchg
or
pmulhuw
add
shl
jmp
xchg
movs
inc
mov
add
push
jecxz
iret
pop
push
cwde
iret
rol
loop
dec
pusha
push
push
dec
ror
jnp
push
sub
je
add
sbb
cmp
hlt
sub
jo
push
mov
xor
rcl
or
scas
dec
pop
pop
add
mov
aam
fst
or
jne
push
cmp
sti
sbb
jg
xchg
mov
push
sub
ja
inc
lahf
jnp
xor
push
push
test
or
(bad)
je
mov
push
push
test
sub
or
aad
adc
mov
mov
repz
sub
pop
paddsb
jle
add
mov
cmp
pop
cmp
inc
xor
movs
xchg
retf
clc
and
dec
jge
jmp
(bad)
dec
(bad)
cmp
add
adc
shl
xchg
pusha
pop
xor
push
dec
stos
add
pop
inc
bound
or
xchg
pop
push
mov
rcl
xor
adc
arpl
adc
mov
push
enter
test
call
jns
push
xor
mov
push
jp
retf
daa
xor
or
loopne
shl
outs
inc
jge
je
retf
lahf
xlat
sub
push
push
push
fnstenv
adc
aad
and
imul
xor
mov
pop
rcl
ror
or
sbb
mov
in
add
ss
add
add
icebp
add
int3
or
ins
and
jnp
and
xlat
jp
sti
popa
add
pop
and
add
fdiv
or
cmp
mov
cmc
mov
cli
stc
push
and
js
push
and
jnp
xor
popf
pop
fisub
movs
mov
pop
pop
jb
sbb
out
add
push
add
adc
jle
mov
fbld
(bad)
enter
push
push
lods
or
inc
cmp
lock
pop
pop
add
jne
inc
fisttp
dec
mov
mov
xlat
ret
lea
int3
test
dec
jne
pop
lahf
xor
xor
ror
add
mov
mov
push
gs
push
out
test
jo
cld
jne
ret
icebp
imul
xor
lock
xor
pop
adc
test
fdiv
and
inc
jmp
inc
sub
push
cmp
push
lea
fidiv
jnp
dec
bound
test
retf
fs
or
push
dec
dec
jecxz
pusha
js
rol
in
aas
pop
sub
in
mov
gs
call
pop
mov
aas
in
xor
sbb
lods
jecxz
mov
jmp
inc
jge
xchg
pop
or
sub
pop
and
or
arpl
lds
or
inc
inc
and
lahf
pusha
xor
xchg
and
not
mov
jne
cmp
iret
or
ins
mov
jb
int
push
xchg
add
mov
jno
movups
in
mov
call
inc
ficom
push
push
lods
inc
sub
cmp
lds
pop
ret
xchg
sub
and
hlt
dec
rcr
jb
mov
mov
inc
mov
xor
mov
cs
push
sbb
and
jb
push
push
(bad)
add
cs
inc
repz
mov
add
mov
lods
ja
inc
xor
fnstenv
add
mov
xchg
rcl
jge
loopne
dec
xor
fidivr
sahf
cwde
test
test
leave
in
mov
mov
sub
xchg
or
mov
push
jo
repz
or
rol
(bad)
sbb
in
or
stc
jo
lds
into
pop
cmc
xchg
pop
in
cdq
idiv
and
push
push
mov
movs
push
jg
xchg
cmp
push
push
sub
push
in
mov
push
enter
aam
movaps
sti
inc
(bad)
xlat
fs
or
and
xor
push
leave
das
inc
mov
in
push
inc
stos
cmp
dec
into
mov
sbb
lds
cmp
xchg
outs
sti
ss
cdq
jge
xchg
(bad)
dec
and
mov
out
sub
shl
pop
add
cmp
sbb
pop
add
mov
push
jg
movs
cdq
cmp
jbe
lock
cwde
pop
pop
leave
repnz
fucomip
jne
jmp
sbb
mov
call
and
cmp
add
add
push
mov
sar
(bad)
jl
shl
xchg
mov
or
clc
pop
gs
or
push
push
mov
gs
jle
in
fstp
test
xlat
sub
in
sbb
js
jb
mov
mov
loop
mov
mov
lock
dec
popa
pop
shr
ins
push
enter
push
rsm
add
sahf
push
mov
imul
sub
xchg
or
mov
(bad)
sub
jl
jg
ja
into
mov
pop
loop
test
cmc
jl
js
bound
jo
dec
xchg
mov
or
xchg
retf
in
push
pop
pop
dec
dec
pop
dec
cmp
rol
rol
outs
in
push
push
cmp
inc
add
mov
cmp
ins
jno
and
in
mov
add
xor
or
pop
dec
dec
mov
fimul
sbb
add
and
inc
ret
and
fdiv
sub
inc
mov
xchg
and
sbb
or
and
test
mov
mov
mov
lahf
cmp
mov
xchg
mov
inc
loopne
or
call
(bad)
adc
cs
mov
inc
fisubr
mov
outs
rcr
adc
jb
push
loopne
mov
aaa
dec
inc
(bad)
jge
sub
(bad)
or
mov
sbb
sub
and
xchg
and
xchg
dec
aam
mov
add
dec
into
or
ror
or
js
push
adc
sub
or
sbb
push
fisttp
push
punpckhbw
pop
push
addr16
sbb
mov
aas
dec
push
xchg
call
ret
mov
inc
cmps
xor
cmp
js
cmp
popf
leave
xor
shl
fsubr
ror
retf
retf
push
push
leave
sar
sbb
stos
out
shr
aad
jge
js
iret
inc
je
dec
movs
xchg
mov
ins
sub
mov
ins
mov
push
shl
xchg
cmp
mov
ret
xchg
cmp
or
pusha
fs
xchg
xchg
dec
inc
mov
lahf
dec
mov
push
pop
add
sbb
fld
imul
jne
fs
stc
test
loopne
lock
je
sbb
pop
and
jle
imul
sbb
jo
xlat
xchg
int3
repnz
sub
push
ins
push
mov
jl
cmp
cmp
sar
xchg
nop
cs
sub
loop
mov
je
cmp
icebp
inc
loopne
js
loopne
pushf
imul
jmp
ss
stos
inc
adc
add
out
pop
dec
push
cld
pop
dec
add
pop
adc
ds
dec
(bad)
mov
jl
mov
push
ja
sbb
pop
test
push
push
adc
pop
jb
stc
movs
mov
inc
pushf
sub
xchg
loop
ins
push
ins
mov
inc
shl
push
ins
add
cmp
inc
add
cmps
sub
cdq
cdq
hlt
push
iret
ins
sub
sbb
into
(bad)
jb
sbb
inc
jg
stos
add
pop
enter
adc
js
and
or
and
adc
inc
data16
clc
xchg
dec
enter
cmp
jge
adc
test
add
add
dec
sub
mov
ins
or
add
adc
push
mov
sbb
adc
add
jg
pop
mov
clc
mov
jl
loope
mov
cmp
adc
rol
rep
int3
push
adc
pusha
stos
push
ror
cli
fdiv
mov
fmul
(bad)
scas
or
jmp
in
mov
js
sub
sbb
clc
shld
shl
sub
sbb
sbb
add
push
adc
shl
ror
(bad)
sbb
lock
adc
cdq
rcl
push
pop
push
jmp
or
aad
and
pop
sub
pop
adc
sub
out
ja
aas
ret
test
inc
mov
mov
daa
ret
ss
lods
mov
cmp
push
or
pop
fadd
adc
add
les
and
jmp
mov
ret
lahf
stos
sbb
or
add
das
in
or
sbb
add
xchg
add
or
in
(bad)
xchg
mov
xchg
mov
xor
xchg
in
mov
(bad)
dec
les
fst
int3
dec
dec
jmp
cwde
lods
xor
push
stos
cmp
js
push
in
dec
pop
arpl
mov
test
mov
adc
xchg
lods
push
imul
ret
(bad)
sub
sbb
sub
cmps
mov
mov
mov
add
fistp
inc
sbb
icebp
jne
cmp
je
mov
cmp
or
rol
aad
pop
in
mov
jg
(bad)
movs
and
stos
pop
mov
jno
push
ins
sub
xchg
adc
xchg
xor
in
xor
mov
pushf
xchg
add
fiadd
dec
pop
cmp
or
mov
pop
jnp
pusha
jg
mov
sub
mov
mov
mov
cmp
lods
inc
lahf
xlat
xchg
xor
xchg
out
and
cmp
sub
cmp
aam
call
shr
cmc
and
je
and
mov
(bad)
bound
sbb
or
jl
jg
and
jbe
jo
jl
aaa
shl
sar
sub
and
jbe
clc
inc
sub
mov
jnp
sbb
inc
mov
inc
outs
push
push
inc
push
and
sub
hlt
push
pop
xchg
test
sbb
sar
and
mov
shr
and
repz
inc
nop
pop
xchg
dec
or
fidiv
outs
test
push
inc
sbb
add
rcr
add
cli
inc
mov
cmp
dec
and
cmc
xor
xor
pop
mov
push
xor
inc
aaa
out
mov
ins
sub
and
push
in
retf
cmp
or
and
es
cwde
mov
bound
xor
adc
push
push
sbb
push
cmp
pushf
test
mov
and
lahf
jg
(bad)
and
jg
mov
mov
jge
push
mov
inc
adc
gs
lds
ds
push
xor
ret
xchg
sub
adc
add
push
mov
cs
add
imul
ss
adc
push
push
cmp
push
fs
jno
mov
outs
stos
movs
je
mov
or
mov
movzx
cmp
xchg
mov
mov
call
nop
dec
adc
imul
adc
sbb
pop
sub
pop
retf
add
xchg
inc
(bad)
jg
(bad)
sub
add
pushf
pop
aam
dec
imul
mov
adc
inc
scas
xor
push
pop
add
pop
iret
mov
movups
das
pop
inc
inc
push
dec
bound
test
push
dec
call
inc
lea
out
cmp
(bad)
aaa
push
out
inc
jb
dec
lea
movs
call
ret
mov
mov
dec
add
aam
test
add
or
adc
les
inc
test
push
add
jle
test
push
mov
adc
sar
jge
xor
mov
jo
add
mov
sbb
sar
add
call
cmp
and
imul
rol
xchg
cmp
sub
es
sub
lea
cmp
add
xchg
mov
lock
imul
or
(bad)
pop
arpl
pushf
sbb
ja
(bad)
cdq
add
mov
loop
push
rol
jl
imul
mov
cmp
scas
inc
and
pushf
or
fisttp
pop
adc
and
stos
clc
call
inc
lods
jmp
or
push
sbb
add
sbb
sub
xchg
jbe
add
fs
pusha
pop
ins
inc
iret
or
push
es
sbb
daa
inc
push
jmp
leave
(bad)
push
call
jo
adc
stos
adc
push
das
and
sbb
add
mov
add
push
js
mov
push
jge
or
mov
scas
xor
arpl
daa
inc
push
push
dec
push
test
sbb
cmp
pop
data16
cmp
and
push
jnp
test
xor
dec
mov
jb
clc
mov
pop
cmp
mov
mov
cmovbe
xor
mov
in
mov
in
mov
ret
add
pop
jl
mov
add
retf
mov
sbb
pop
psrld
sbb
jmp
ds
test
shl
or
ins
and
jge
ds
push
cld
and
cmp
jmp
push
leave
pop
or
jb
stc
nop
push
pusha
inc
into
pusha
les
pop
fs
dec
mov
clc
jns
dec
inc
sub
add
sub
(bad)
and
(bad)
pop
add
loopne
cmp
pop
in
jbe
in
or
ja
popa
dec
add
(bad)
jbe
in
cmp
cmp
(bad)
fadd
ret
pop
or
add
shl
movs
sub
clc
adc
or
pop
push
ss
cmp
add
mov
cmp
push
dec
aas
lods
inc
add
adc
arpl
mov
pop
jnp
mov
add
jae
aas
dec
stos
pop
cmp
push
cmp
mov
jae
push
dec
mov
sub
neg
movs
jmp
jl
loopne
cli
cmc
or
loop
shl
or
fcomp
sub
jne
neg
(bad)
lds
sub
dec
(bad)
clc
inc
jmp
outs
pop
fsub
aaa
mov
push
mov
cmps
scas
stos
or
fcmovb
jmp
sub
aam
ret
sar
fbstp
ins
jmp
sub
sub
jle
adc
fsub
jmp
test
jne
jle
or
fs
add
sbb
inc
out
inc
xor
push
out
adc
push
aas
int3
test
cli
add
std
(bad)
sbb
loopne
adc
cmp
xchg
cmps
inc
jg
es
mov
adc
pop
and
lds
xchg
adc
mov
scas
mov
dec
cmp
test
cmps
out
in
sub
push
sahf
mov
dec
outs
jl
cmp
and
push
add
and
mov
push
pop
and
adc
push
xor
or
sub
je
inc
and
imul
mov
pop
jg
mov
adc
clc
pop
add
lods
cdq
pop
sub
out
or
rol
xchg
or
xchg
clc
and
sbb
pop
or
adc
mov
mov
sbb
retf
push
lods
inc
pop
and
rcr
dec
rol
pop
fcom
call
pop
xor
push
mov
dec
or
cmps
inc
adc
imul
mov
adc
inc
aas
xor
iret
out
pop
push
push
jecxz
cmc
or
push
dec
push
data16
xor
inc
mov
or
fstp
jne
or
adc
retf
adc
rcr
inc
test
pop
inc
jmp
jb
mul
aad
les
adc
jg
or
test
or
pop
add
pop
aas
mov
js
mov
in
inc
add
lea
cmp
ja
sub
cmps
sub
or
jmp
or
inc
sahf
(bad)
rcr
push
popa
mov
xor
or
mov
dec
sbb
adc
je
lods
pop
mov
or
rcl
dec
rcl
movs
xchg
fmul
jmp
mov
mov
pop
push
or
xor
sub
xchg
aas
dec
lea
cmp
mov
outs
dec
mov
cli
mov
lea
cmp
add
mov
dec
add
out
mov
adc
(bad)
fadd
add
rcr
in
aas
test
pop
dec
sbb
jmp
cmp
punpckhbw
pop
xor
icebp
push
fwait
and
cmp
or
or
js
lea
daa
add
enter
dec
inc
push
push
ret
dec
xor
(bad)
icebp
lock
lock
sub
add
push
rol
mov
mov
inc
not
adc
jg
mov
xor
sub
(bad)
add
clc
mov
lock
or
mov
sbb
nop
xchg
sub
cmp
adc
xor
sbb
call
in
pusha
xchg
dec
push
mov
xlat
cmp
jne
push
add
adc
mov
sub
fadd
dec
push
cmps
imul
pusha
push
sbb
test
mov
dec
out
sbb
fadd
inc
inc
and
stc
adc
popf
jbe
xor
xor
push
inc
mov
push
repz
add
add
pop
jmp
mov
jmp
mov
jo
mov
iret
xchg
stc
sbb
mov
mov
dec
test
inc
sub
adc
mov
sbb
or
movs
add
(bad)
jecxz
pop
mov
jle
jne
adc
inc
(bad)
dec
scas
shl
test
pop
xchg
jg
dec
clc
cmp
or
jl
cmp
mov
iret
pop
lea
mov
push
pop
ror
dec
pop
inc
add
inc
in
and
js
nop
lock
stos
scas
mov
mov
cmps
mov
push
lea
cmp
ja
and
jmp
jnp
pop
idiv
mov
inc
lock
movs
inc
mov
sbb
adc
xchg
shl
fild
shl
fnstenv
adc
jae
or
add
and
movs
adc
cmp
aas
push
sbb
and
jmp
xchg
mov
aad
mov
repnz
mov
inc
ret
push
jmp
or
into
sar
(bad)
push
push
icebp
je
popf
sbb
cmp
jb
jbe
adc
inc
and
xor
inc
aam
mov
push
inc
scas
inc
sub
icebp
popa
daa
test
ss
or
or
sbb
jae
(bad)
gs
and
sub
mov
xor
imul
imul
xor
in
enter
stos
and
xor
xchg
(bad)
push
push
adc
add
retf
shr
call
enter
mov
mov
dec
sbb
outs
js
pop
pop
pop
add
test
sub
xor
sbb
mov
psraw
push
cmps
mov
(bad)
mov
mov
mov
xchg
lea
cmp
inc
lea
or
cmp
adc
jecxz
adc
ret
adc
mov
adc
aas
dec
gs
push
push
pop
enter
es
loopne
add
ja
retf
inc
jo
test
push
les
sbb
adc
mov
out
add
adc
add
pop
or
pop
lods
xchg
(bad)
fiadd
or
dec
sub
mov
add
outs
rcl
cmp
jle
push
adc
in
adc
cli
addr16
les
jbe
cmps
jne
inc
push
and
lods
movs
ss
mov
scas
lods
and
(bad)
scas
repnz
pop
mov
jecxz
cmp
cmovg
and
(bad)
push
push
and
adc
mov
mov
inc
call
cmp
add
mov
or
cmp
push
inc
(bad)
test
pop
rsqrtps
jae
inc
xchg
inc
repnz
jbe
xchg
pop
test
cld
mov
or
mov
push
push
add
js
movs
sub
retf
add
iret
cmp
jne
rol
inc
aad
xor
sbb
(bad)
out
mov
(bad)
ins
or
sub
dec
mov
inc
addr16
push
xchg
cmp
push
xchg
xor
pop
mov
adc
ret
loopne
cdq
add
call
clc
jmp
bound
imul
fdiv
mov
push
mov
add
iret
adc
ins
push
mov
mov
rol
push
add
add
pusha
test
mov
test
or
and
mov
mov
cwde
mov
rcr
cwde
pop
test
mov
cdq
inc
es
add
add
push
and
nop
or
or
js
in
add
sub
movs
jp
adc
sbb
sbb
daa
and
mov
adc
std
add
add
test
pop
add
jns
outs
mov
je
dec
cmp
jbe
mov
setge
shl
stos
jbe
or
es
jle
rol
cmp
lods
adc
lods
shr
test
and
or
cmp
jno
sub
inc
test
outs
xor
push
cmps
(bad)
adc
pop
clc
lea
cmp
js
test
mov
mov
rol
or
mov
mov
adc
mov
add
mov
loopne
mov
xor
cdq
pop
daa
int3
sti
sub
adc
sar
mov
and
neg
inc
je
jo
or
test
pop
push
out
jns
and
psrad
sbb
lods
or
inc
jmp
pop
xor
aas
sbb
and
stos
pusha
push
jmp
xor
lea
dec
add
mov
or
jnp
loopne
xchg
js
xchg
es
inc
push
add
div
dec
aad
iret
jnp
out
int
mov
(bad)
fistp
add
add
or
pop
pusha
dec
fwait
nop
or
out
mov
fwait
or
add
xchg
mov
mov
sahf
div
sub
dec
mov
out
pushw
scas
nop
repnz
cmps
jns
dec
repz
(bad)
loop
add
add
or
pop
fcomp
out
ds
or
or
or
or
ret
adc
pop
sbb
pushf
pop
test
xchg
xor
mov
js
(bad)
stc
cmp
push
mov
test
xor
mov
stos
inc
mov
mov
add
jp
leave
add
out
adc
mov
and
ss
jle
push
dec
mov
cmp
je
enter
add
or
jmp
out
or
mov
inc
nop
test
push
push
inc
arpl
add
mov
push
shl
push
int3
push
stos
and
or
pop
jmp
int
sub
inc
cmp
jl
cmps
adc
sbb
fild
pop
mov
add
mov
clc
dec
dec
mov
and
cmp
cmp
pusha
lea
inc
mov
jns
int3
mov
add
fst
xor
cmp
pop
js
sbb
mov
into
cmp
leave
dec
ins
xchg
out
(bad)
push
push
aad
add
xchg
mov
idiv
loop
sti
es
aam
dec
inc
inc
pop
xor
das
jb
dec
inc
mov
jmp
imul
sti
push
into
push
test
mov
aas
cdq
push
iret
jne
and
in
add
push
cmp
mov
cmp
fs
or
fs
cmp
sub
mov
rcl
pop
inc
rcr
dec
or
or
scas
sbb
adc
sub
and
jae
neg
push
add
ins
lea
data16
mov
or
pop
jecxz
or
or
pop
add
jmp
mov
sbb
mov
rol
push
mov
pop
bound
push
shl
adc
mov
fst
sub
fstp
and
lea
lock
fs
push
out
add
arpl
cmps
jne
mov
push
push
sar
popa
js
mov
loopne
sub
adc
add
mov
xor
lahf
adc
xchg
lods
shl
not
jl
rcr
int
add
push
adc
xor
dec
(bad)
rcr
cs
scas
fadd
mov
mov
mov
xor
sub
cmp
int
retf
lea
xor
add
jo
jno
sub
cmp
ret
pop
pop
lock
push
push
lds
pop
dec
sub
jmp
ja
jb
fsub
jle
test
or
outs
pushf
xlat
add
mov
add
add
test
adc
jg
loopne
or
adc
adc
sbb
dec
mul
push
or
sub
adc
rcr
add
test
inc
jne
loopne
in
add
jae
gs
je
dec
sub
movs
cmp
sbb
popa
pop
mov
test
jne
or
sti
aaa
dec
xor
pop
fdiv
mov
test
push
je
push
not
cdq
jbe
push
cmp
aaa
cmp
push
add
jne
test
mov
inc
xor
cmp
cmps
xchg
xchg
xor
shl
add
pusha
out
cmp
dec
jns
jbe
ret
rol
ret
mov
xor
xchg
adc
add
mov
add
pop
lods
aas
sar
mov
ret
mov
jnp
add
pushf
lea
adc
ret
cmp
sbb
sub
cmp
push
and
jo
retf
outs
push
mov
push
ror
push
cmp
call
adc
fs
jp
push
or
jo
iret
push
jmpw
loope
and
cwde
pop
dec
adc
sahf
sbb
adc
inc
data16
jns
xchg
stc
and
jne
adc
fnstcw
cld
pusha
jmp
lahf
pop
cld
pusha
mov
test
cmp
or
lock
pop
scas
sbb
fdivr
inc
mov
mov
test
or
or
cwde
ret
xchg
push
and
xchg
cmp
call
xor
sbb
push
sub
mov
fcom
cmp
outs
pusha
push
jo
pop
mov
(bad)
xor
sub
inc
out
mov
mov
call
or
mov
jmp
es
push
push
data16
retf
call
out
xlat
retf
inc
retf
push
sub
pop
call
je
or
xchg
push
jg
pop
dec
adc
loopne
ret
ins
out
add
(bad)
jmp
mov
iret
mov
lock
test
add
jmp
cmc
or
xor
or
adc
data16
lods
icebp
dec
mov
movs
adc
mov
je
push
xchg
nop
psrld
or
fwait
in
jg
loop
nop
sar
push
movs
mov
and
inc
pop
sub
add
jle
or
push
push
push
(bad)
(bad)
add
fild
test
js
xor
push
push
add
push
fcom
pop
cmps
inc
sub
cli
push
ins
mov
fisttp
cs
call
cwde
outs
inc
mov
push
and
aam
or
test
jno
bound
loope
dec
sti
inc
and
xchg
xor
xchg
jbe
pop
(bad)
imul
icebp
push
push
inc
xchg
into
into
lea
adc
lock
lea
pop
add
pop
add
inc
outs
jmp
lea
add
mov
xor
pop
fdivrp
add
sub
mov
lea
xor
push
push
push
mov
sti
(bad)
and
xor
arpl
pop
add
leave
mov
lods
add
or
mov
sub
lds
mov
xchg
out
inc
pusha
or
xor
jmp
sub
and
movs
rcr
pop
add
jmp
pop
add
sub
lds
add
mov
int3
sbb
dec
jecxz
(bad)
int3
jg
cmc
gs
enter
mov
ja
loopne
rcl
mov
ins
dec
sub
popa
add
das
sbb
cmp
daa
hlt
add
push
adc
push
sbb
or
sbb
inc
dec
test
pop
push
stos
test
aam
pop
jecxz
adc
pop
loopne
lods
mov
inc
mov
das
iret
repz
les
push
mov
cmp
cmp
sbb
mov
(bad)
sbb
push
pusha
xor
inc
(bad)
test
push
ret
push
mov
cmp
pop
adc
loopne
stos
pop
or
test
mov
dec
js
lea
outs
icebp
inc
jo
(bad)
test
jg
cwde
xchg
ret
dec
inc
inc
mov
dec
mov
bound
cmps
and
adc
mov
and
inc
or
or
cs
or
outs
adc
enter
sbb
jmp
ret
movs
hlt
or
push
cmp
inc
adc
fs
xchg
xor
add
fsubp
xchg
rol
jo
adc
sti
test
sbb
xor
js
lahf
push
iret
pop
aam
push
dec
push
fcmovnb
pop
add
sub
dec
lds
xchg
push
jmp
(bad)
push
das
sbb
mov
cmps
pop
jmp
popf
xor
or
push
inc
fs
sub
mov
adc
inc
add
ss
add
rcl
jl
mov
and
or
mov
cmp
ret
dec
xor
pop
mov
add
push
mov
popa
inc
push
inc
inc
xchg
mov
adc
dec
mov
repz
sbb
mov
inc
cmp
or
(bad)
jae
bound
dec
adc
xchg
jnp
inc
push
or
xchg
or
(bad)
enter
ret
or
mov
lock
movs
loopne
mov
push
lds
sub
or
inc
scas
(bad)
and
leave
or
push
in
or
mov
pop
or
add
rcl
xchg
fild
push
adc
add
add
out
fcomp
push
xchg
xor
fcom
gs
dec
adc
lock
icebp
dec
adc
adc
ret
daa
add
add
sbb
test
and
push
or
ja
mov
xor
inc
sbb
mov
popa
jp
lods
sbb
adc
(bad)
jle
add
push
adc
movs
cmc
jne
nop
out
sahf
or
or
and
rol
pop
pop
and
leave
dec
push
add
mov
loopne
mov
fadd
or
loope
je
cmp
add
idiv
pop
ja
pusha
mov
cmp
in
arpl
mov
ret
adc
nop
inc
push
cmp
xchg
inc
push
cmp
test
aam
inc
pop
nop
in
fcmovb
adc
cmp
nop
inc
pop
js
cmp
nop
inc
lods
(bad)
in
enter
les
enter
dec
fs
xchg
xchg
mov
(bad)
(bad)
sbb
jb
(bad)
lds
xor
enter
push
sbb
lods
mov
loopne
adc
inc
push
cmp
push
push
cmp
nop
ins
sbb
shr
add
jb
and
and
nop
xchg
int3
in
adc
inc
push
cmp
push
push
cmp
nop
js
mov
ret
icebp
nop
inc
in
leave
scas
add
rol
push
(bad)
retf
mov
jne
fnsave
pop
ret
(bad)
push
jo
pop
loope
pop
rol
rcl
repnz
call
push
inc
adc
or
and
push
fdivr
or
ret
pop
mov
sbb
add
sub
sbb
addr16
je
imul
add
jb
gs
mov
in
leave
mov
push
dec
in
cld
idiv
dec
ja
movs
xchg
fldl2e
rol
mov
sbb
jmp
mov
xchg
sub
das
mov
and
in
mov
or
loopne
mov
sahf
xchg
jge
es
pop
add
ins
push
push
push
pusha
add
push
clc
pop
or
fld
movs
inc
push
add
xchg
test
mov
add
push
imul
push
push
retf
sahf
out
xor
adc
int3
outs
push
repz
int
xor
stos
pop
imul
in
into
repnz
pushf
retf
aaa
ds
movs
push
xchg
retf
cld
nop
int
call
push
mov
and
xchg
jns
enter
fdivrp
int3
outs
neg
push
js
xchg
push
lahf
out
sahf
inc
sub
push
mov
mov
stc
xor
add
or
int
out
cmps
push
cmp
push
cs
mov
sbb
push
fcom
repz
jnp
push
push
xchg
push
inc
retf
out
cmp
push
test
nop
sahf
out
out
push
mov
movs
xchg
(bad)
sahf
mov
ins
adc
mov
fwait
sbb
add
popa
and
pop
int3
ss
xchg
shl
sbb
add
and
push
jge
stc
sbb
loope
push
adc
jecxz
inc
xor
in
add
lds
push
xchg
daa
cs
mov
jne
push
mov
fdiv
push
push
adc
cmp
xchg
dec
lods
or
mov
pop
cdq
(bad)
or
rcr
inc
jecxz
mov
clc
pop
psubd
jl
xor
mov
pop
mov
push
jns
call
sub
xchg
retf
rcr
sbb
pop
je
rcr
xchg
retf
xor
mov
mov
cs
retf
in
pushf
lods
rcr
test
mov
fs
retf
in
mov
mov
pop
sub
in
and
retf
in
cwde
shl
mov
xor
pushf
ror
mov
test
sbb
or
jb
mov
adc
cs
retf
in
fs
mov
xor
mov
pop
cs
test
in
hlt
and
pop
test
(bad)
sub
and
push
sub
xor
iret
repz
cmp
inc
dec
dec
push
pop
cmp
repz
jb
js
repz
repz
jns
out
aam
test
mov
popf
cmp
mov
push
ror
repz
in
lock
cmps
cmp
rol
or
rcr
jae
jl
adc
sbb
and
es
iret
jnp
xor
cmp
ss
push
push
jns
out
pop
push
bound
jp
jns
out
cwde
inc
sahf
movs
sahf
out
sahf
stos
mov
mov
out
into
aam
(bad)
out
sahf
out
out
xchg
(bad)
ins
rcr
repnz
inc
sbb
push
pop
cmp
outs
sahf
rol
les
pushf
cmps
retf
dec
popa
into
test
retf
test
enter
xchg
in
aad
mov
sbb
enter
cld
cmp
adc
inc
push
fs
nop
inc
push
cmp
cmp
lock
enter
test
enter
int3
jns
and
in
inc
push
sub
dec
lahf
inc
push
cmp
js
jnp
mov
je
cwde
ins
mov
xchg
sub
pop
mov
push
mov
repz
inc
mov
sub
mov
pop
cs
mov
push
xor
rcr
adc
cwde
sar
cmp
push
xchg
jne
mov
cmp
jns
rcl
fild
in
stc
out
sahf
out
(bad)
or
out
sahf
xor
addr16
out
jnp
test
out
lods
mov
retf
lahf
out
sahf
aad
jmp
cmp
repz
sbb
iret
repz
dec
push
iret
repz
fs
pop
xchg
add
inc
outs
mov
add
cs
add
popa
sub
or
xor
jmp
sbb
push
cwde
and
dec
pop
inc
outs
sub
pop
adc
sub
dec
adc
sub
pop
out
pop
xchg
jo
sbb
fmul
dec
mov
push
and
sub
das
jb
cwde
lods
or
inc
inc
rcl
loope
mov
mov
in
into
mov
dec
and
loop
add
leave
lods
lahf
mov
add
inc
add
fld
add
push
mov
add
outs
or
xchg
jg
jp
inc
cmp
inc
or
adc
lock
adc
mov
shl
inc
dec
add
inc
dec
aaa
xchg
loopne
sbb
mov
(bad)
xor
pop
icebp
mov
jae
les
add
xchg
cmps
pop
lods
adc
sbb
adc
cli
inc
(bad)
mov
or
sbb
mov
cld
sbb
xor
or
movs
mov
sbb
into
add
cmp
inc
add
aaa
addr16
imul
into
add
lahf
les
test
outs
clc
sbb
in
or
add
loopne
mov
inc
or
inc
jmp
cli
xchg
mov
add
int
std
add
mov
fiadd
cli
or
not
shl
fisttp
imul
jmp
adc
cmp
jl
pusha
cmp
jge
adc
inc
mov
inc
jmp
sar
push
cmps
mov
loop
sub
dec
or
or
retf
sub
imul
mov
imul
(bad)
cmps
mov
xchg
xchg
push
adc
mov
cmp
cmp
ja
call
cmps
sub
mov
lea
mov
lock
sbb
pop
data16
adc
add
add
xchg
push
fidiv
ss
inc
jmp
jno
mov
or
retf
(bad)
add
test
repnz
imul
ret
popf
daa
add
sub
pop
add
shl
jo
call
enter
push
push
ror
into
adc
and
cmp
dec
shl
enter
add
jns
ja
loopne
and
dec
add
jmp
push
push
push
jne
mov
push
inc
and
or
adc
cmp
int
sub
popf
pop
sbb
jge
ret
pop
mov
sbb
call
xor
rol
or
es
or
add
jno
int3
arpl
mov
pop
add
mov
jo
mov
lea
mov
fnstenv
fstp
test
mov
adc
push
mov
xor
stc
cmp
cmp
add
add
dec
add
mov
mov
cmp
call
sbb
dec
mov
hlt
jp
push
cmp
ret
dec
jmp
or
lea
inc
push
cmp
in
push
jb
xor
cli
sbb
jl
push
or
pop
cmp
mov
xor
and
mov
and
push
cmp
call
dec
inc
mov
movs
sbb
sub
(bad)
lock
lahf
loop
or
push
cmps
mov
daa
mov
and
push
pushf
add
test
fdivr
aaa
cmc
ins
jl
pop
test
xchg
mov
pushf
xor
and
jns
inc
cmp
push
test
xor
xor
cmp
or
xor
xor
push
add
in
mov
push
lea
arpl
jmp
lea
sbb
xor
add
dec
les
popf
cwde
and
sub
mov
jns
movs
sar
pop
or
leave
sbb
push
stos
sar
add
sbb
push
inc
add
adc
or
or
movs
pop
mov
xor
pop
push
cli
enter
inc
xor
sbb
sbb
sub
cmp
inc
das
xor
cmovne
push
mov
mov
xor
mov
add
cmp
ins
retf
pushf
dec
movs
or
push
jmp
lods
dec
mov
loope
scas
rcr
in
jl
adc
add
lock
fs
jl
sar
inc
sub
adc
adc
add
iret
das
and
and
push
mov
lea
and
pop
sub
push
jp
in
pop
or
bound
in
clc
jp
push
mov
push
add
push
sub
adc
pop
sbb
mov
lea
mov
push
fmul
add
test
push
sub
shl
dec
mov
adc
jp
lods
xor
push
call
jo
inc
out
mov
imul
cmp
pop
adc
movs
ror
jno
cmc
mov
and
adc
repz
and
jmp
mov
mov
and
xlat
mov
or
jl
or
adc
or
aaa
jge
add
cmp
sbb
inc
jne
mov
xor
inc
jmp
adc
push
imul
adc
sbb
movs
sbb
add
ret
or
aas
push
cld
(bad)
cli
in
sar
add
cmp
or
push
outs
fsubr
jmp
add
sbb
push
sbb
push
add
(bad)
out
push
fisub
pop
mov
adc
jmp
or
jmp
push
add
xor
inc
sbb
sub
in
cmp
stos
inc
int
mov
ret
mov
fnstenv
jl
push
or
mov
(bad)
sahf
(bad)
sbb
adc
or
dec
mov
push
jno
mov
mov
xchg
push
sbb
cli
cmp
jmp
dec
inc
push
sbb
ret
lea
imul
(bad)
inc
mov
pop
les
bound
dec
dec
fisub
pop
dec
inc
inc
sbb
lds
add
inc
adc
mov
imul
pop
mov
loop
dec
adc
lds
xlat
test
inc
push
push
adc
cmp
nop
mov
popa
pop
inc
xchg
jo
sahf
aaa
dec
adc
and
xor
mov
push
scas
movs
jns
and
pop
rol
sub
enter
test
into
fwait
into
dec
test
jl
fld
sti
add
dec
jmp
push
dec
and
adc
add
adc
pop
pop
ret
nop
shl
push
push
test
inc
push
call
js
popf
lods
push
and
add
dec
mov
mov
lea
push
pop
add
or
push
xor
out
jmp
mov
inc
adc
push
popf
arpl
mov
inc
xor
mov
mov
cmp
push
xor
daa
dec
cmp
push
and
jle
and
sub
push
fild
dec
xor
shl
lea
stos
or
je
mov
fmul
jmp
icebp
xor
inc
lods
shr
inc
inc
xchg
dec
lock
shr
adc
cmp
cmp
mov
sbb
pushf
rol
jbe
cmps
push
std
dec
lea
add
data16
pop
mov
cli
ja
push
mov
jl
sub
push
push
sub
or
mov
cmp
dec
cmp
fst
(bad)
dec
dec
add
pop
pop
pusha
daa
push
lea
ins
jo
sub
daa
je
mov
inc
cmps
aaa
cmp
mov
test
and
inc
add
xor
push
stos
jle
les
sub
or
jp
or
add
add
fs
add
dec
(bad)
add
dec
adc
jmp
sub
push
popa
(bad)
cmps
ficom
inc
cmps
sub
pop
add
push
jge
test
xchg
mov
push
imul
add
push
xchg
or
mov
rol
(bad)
mov
jl
pop
push
pop
cmp
add
mov
out
ss
sbb
push
cmp
retf
iret
dec
or
(bad)
jle
retf
shl
or
sbb
add
mov
xor
sbb
jl
inc
iret
gs
mov
and
pop
dec
or
sbb
loope
add
mov
xor
and
test
cvtdq2ps
pop
adc
sub
adc
test
shr
pop
cmc
retf
fisttp
and
sbb
fldenv
out
ss
or
mov
lds
pop
or
push
xchg
jns
sub
jmp
aaa
sub
hlt
mov
add
iret
sti
add
mov
lods
mov
add
add
popa
adc
inc
lods
push
scas
push
cmp
mov
lea
pushf
xor
push
add
xchg
and
cmp
test
adc
aas
test
jne
push
cmp
iret
test
in
or
test
xchg
pop
cmp
mov
iret
adc
mov
das
sub
xchg
mov
and
fdivr
sub
inc
xchg
sbb
xor
add
sbb
fbstp
dec
jo
pop
and
das
xor
xor
inc
and
mov
lods
outs
daa
stos
push
jo
jle
push
and
push
out
sbb
push
xchg
inc
fbld
jnp
in
mov
inc
or
pop
push
adc
mov
ins
inc
inc
sbb
lods
and
movs
loopne
aaa
push
and
mov
fistp
push
ret
das
lods
xor
sub
mov
test
dec
dec
push
jne
cmp
je
inc
mov
fcom
sbb
test
je
add
dec
add
push
xchg
dec
(bad)
mov
lock
call
sbb
dec
xchg
jo
and
inc
jp
cmp
and
push
out
pop
push
(bad)
sub
add
or
xchg
fild
xchg
sbb
add
mov
push
inc
add
mov
xor
sub
push
dec
xor
lock
sub
inc
nop
cli
mov
mov
cmp
fidiv
push
aam
xchg
add
icebp
hlt
xor
and
jecxz
push
cmp
or
repnz
xor
imul
jne
lock
stc
imul
repnz
jmp
pop
(bad)
xchg
bnd
test
cwde
ret
jb
cmp
jae
sbb
sbb
scas
inc
jnp
out
pop
rol
mov
in
icebp
xor
test
sbb
sbb
rcl
pop
mov
in
sub
movzx
loopne
popf
pop
(bad)
adc
or
ret
cmp
lods
jne
pop
pop
inc
push
iret
test
sbb
adc
aad
fdivr
nop
cmps
sub
js
enter
adc
jmp
xlat
(bad)
loope
xor
inc
loopne
test
lea
push
fnstcw
bound
(bad)
xchg
and
cdq
push
repnz
and
mov
loopne
call
pop
cmp
or
adc
retf
inc
push
movs
dec
lds
icebp
test
mov
ins
ret
pop
adc
mov
push
mov
stc
xor
dec
dec
lea
push
inc
cmp
add
sbb
mov
jb
js
jl
rol
push
xchg
or
pop
aam
stos
adc
ret
aas
sbb
or
aad
push
pop
fistp
add
cmp
pop
cmp
shl
add
push
lock
into
popa
add
pop
xor
fbld
add
shl
adc
stos
sbb
push
cmp
jbe
inc
inc
mov
push
push
test
scas
dec
mov
lods
icebp
mov
sbb
dec
xor
mov
call
mov
mul
add
add
and
jnp
fsub
jl
loopne
sar
push
not
add
add
push
rcr
jno
imul
stos
fs
(bad)
cmp
jbe
jmp
dec
imul
or
or
mov
mov
xlat
jmp
inc
sub
jmp
test
jns
push
pop
in
adc
xchg
xor
jo
fnstcw
movs
mov
and
adc
ja
rol
push
push
mov
jae
out
adc
push
imul
cmp
pop
out
icebp
inc
call
icebp
icebp
pop
dec
inc
dec
jmp
stos
cmps
and
sbb
inc
or
sub
shl
stc
rcr
aaa
sbb
add
imul
push
stos
dec
arpl
(bad)
shl
mov
test
jge
push
add
fcom
into
xor
leave
cmp
das
dec
push
adc
test
out
stos
adc
mov
loopne
lods
lea
push
push
test
adc
lock
lock
adc
movs
retf
xchg
jnp
or
rcr
cmp
lock
add
jo
xchg
push
je
mov
test
pushf
dec
mov
push
push
pushaw
test
repnz
mov
push
int3
loopne
or
push
ret
sbb
mov
sub
cld
imul
pushf
cmp
nop
xor
lds
popa
push
lods
push
and
pusha
and
neg
sbb
inc
mov
push
adc
mov
dec
mov
jmp
ins
sbb
push
push
sub
xchg
sbb
ds
and
stc
inc
test
sbb
cmp
adc
add
jno
or
test
imul
jp
dec
push
ret
and
fidiv
mov
add
dec
pcmpeqw
test
xchg
xchg
shr
cmp
pop
pop
jp
sub
aas
adc
sub
mov
rcl
push
push
cmp
mov
pop
lds
push
add
xchg
mov
retf
add
jle
adc
fs
clc
nop
pusha
ds
pop
xchg
ret
bound
test
cmp
inc
movs
push
fadd
aad
iret
aaa
dec
pop
pop
sbb
clc
js
push
pop
mov
cmc
js
je
sti
stos
inc
sbb
or
and
fnsave
and
mov
adc
fidiv
jmp
mov
push
gs
push
js
aam
or
(bad)
fild
push
out
retf
sub
push
scas
and
push
pop
adc
sub
movs
xchg
fstp
adc
pop
ret
and
out
xor
add
adc
push
lock
xor
push
or
adc
and
(bad)
dec
push
mov
mov
nop
mov
cmp
push
fwait
retf
xchg
adc
cmp
test
dec
jge
out
lods
xchg
mov
rol
mov
into
xor
idiv
push
cmp
and
enter
popa
test
retf
xchg
push
in
mov
mov
push
aas
popf
pop
add
stos
out
cmp
(bad)
fstp
or
push
mov
dec
std
adc
jg
sub
je
adc
test
jp
imul
sete
inc
sbb
cmp
pop
sbb
adc
mov
mov
mov
cmp
xchg
push
mov
cmp
in
push
sbb
inc
inc
jp
clc
mov
cwde
xchg
out
push
xor
int
fsubr
inc
add
cmp
jb
inc
fisub
add
sahf
pop
or
pop
call
pop
mov
mov
push
and
lds
push
int3
or
mov
xchg
aam
jmp
inc
sub
mov
sub
sbb
(bad)
loop
aas
sub
lea
push
push
stos
mul
shr
adc
movs
dec
inc
push
xchg
movs
pop
or
cmp
mov
std
cmp
or
mov
inc
inc
outs
loopne
push
data16
jmp
mul
jmp
test
out
mov
xor
inc
sbb
fisttp
mov
mov
or
loope
shr
mov
adc
adc
shl
enter
mov
and
and
or
fidivr
or
mov
mov
mov
push
(bad)
or
adc
adc
ficomp
addr16
push
sub
inc
push
test
mov
daa
lds
add
test
mov
push
jle
inc
mov
pop
(bad)
sub
pop
add
sub
cmp
rol
iret
(bad)
or
lods
and
inc
xchg
cmp
push
shl
inc
jmp
mov
cld
call
dec
add
cmp
sub
cmp
fiadd
loop
int
xor
or
punpckhbw
daa
rcr
push
mov
mov
and
cwde
or
add
push
stos
and
mov
adc
sbb
or
adc
sbb
cmp
inc
ret
add
or
adc
add
clc
cmp
pop
inc
cld
cmp
mov
jmp
cmp
inc
pop
cmp
jne
or
lods
lods
mov
dec
montmul
cmps
xchg
jmp
sub
shr
and
dec
es
xchg
or
xchg
jp
jbe
outs
adc
mov
sar
(bad)
adc
mov
in
or
adc
mov
fwait
adc
xor
int
sbb
ins
push
add
push
push
shl
shl
xor
mov
inc
lea
inc
pop
or
in
push
push
aaa
aas
jg
xor
add
jle
push
adc
(bad)
mov
daa
mov
dec
mov
inc
pop
cli
mov
jmp
gs
sbb
mov
movs
or
sbb
pop
sbb
or
jle
inc
pop
cmp
add
(bad)
imul
push
adc
mov
in
pop
clc
sahf
or
mov
cmp
add
aas
in
inc
jmp
gs
int3
xor
xchg
sbb
lea
cmps
jo
xor
scas
and
pop
int3
test
mov
push
adc
push
fadd
mov
jmp
cmp
push
inc
push
adc
ins
(bad)
push
cmp
adc
in
jmp
xchg
sahf
mov
dec
(bad)
ror
pop
iret
jae
jnp
mov
arpl
pop
je
out
jnp
cmp
daa
cmp
add
dec
and
inc
and
push
push
pop
add
inc
ja
xor
push
and
add
jno
xchg
(bad)
pop
mov
xor
adc
cmp
mov
or
daa
sbb
or
fcmovb
call
add
mov
mov
push
fs
call
jb
pop
adc
mov
pop
add
and
adc
mov
fcomi
addr16
sub
or
mov
int3
push
popf
add
fsubr
shl
test
stos
mov
shr
jne
jmp
push
and
sti
fsub
test
mov
ins
xchg
mov
adc
push
cmp
mov
ret
dec
(bad)
arpl
inc
or
dec
inc
lods
lock
and
xor
sub
std
xor
clc
add
add
add
xor
imul
add
test
pop
add
xchg
test
mov
outs
sbb
or
ficomp
lahf
xor
inc
call
push
jmp
mov
xor
sub
fdivr
pop
fcomp
inc
clc
or
cwde
cmp
dec
sub
push
jno
cmps
mov
data16
inc
and
jb
jne
sar
add
mov
add
pop
rol
aas
gs
mov
scas
cli
cld
mov
or
je
mov
cmp
(bad)
ror
cli
and
std
xor
inc
add
push
and
pop
call
add
shl
add
cmp
adc
aaa
enter
movs
add
inc
jb
mov
aam
lock
sub
dec
inc
sub
mov
test
in
pop
fdivr
jb
cmp
cmp
dec
test
push
cmp
and
dec
adc
push
pop
ins
dec
pushf
and
add
std
inc
push
mov
inc
cld
loope
rcl
gs
mov
dec
lds
ja
(bad)
or
pop
clc
mov
rcl
stc
pushf
pop
mov
push
ins
and
cmp
xor
mov
sub
cmp
sbb
xor
inc
cmp
push
lock
cwde
(bad)
or
dec
and
sbb
jns
cmp
call
repz
leave
leave
or
in
idiv
sub
dec
pop
cmc
add
mov
sub
mov
test
je
mov
jno
je
jmp
test
movs
adc
movs
das
rcl
and
push
dec
xor
push
jge
fs
mov
sub
je
jmp
inc
mov
sub
inc
ret
les
sub
mov
push
sub
sub
sub
and
nop
adc
stos
xor
dec
or
xor
push
add
adc
add
add
mov
lahf
fistp
adc
xor
imul
jo
popa
inc
sub
cs
xchg
pusha
sub
add
rcr
aaa
aas
inc
aas
pop
push
outs
arpl
mov
xor
lea
bound
add
lods
or
(bad)
xor
and
inc
fstp
inc
sub
jne
es
jmp
and
inc
rcl
sub
cmp
ja
push
push
pop
mov
ret
sub
and
ss
cli
je
lea
test
inc
inc
pop
or
jg
mov
cmc
adc
push
rol
cwde
adc
bound
hlt
push
ret
sbb
lock
cs
dec
jb
push
push
lods
add
icebp
adc
mov
aas
cmp
push
fild
ds
lods
cmc
dec
and
push
cmp
push
cmp
or
sub
es
repnz
es
clc
mov
ficomp
inc
into
push
or
jg
dec
push
sbb
or
cmp
sbb
rcr
push
and
xchg
sbb
cmp
push
lea
aaa
call
mov
cmp
into
xchg
mov
push
or
cmp
mov
hlt
pop
fist
add
jle
(bad)
pop
add
cmp
adc
outs
adc
xchg
or
dec
stc
push
sub
push
dec
loop
sub
(bad)
into
jbe
aam
cmp
das
inc
push
(bad)
pop
sbb
cmc
pop
add
retf
push
push
idiv
or
inc
dec
or
dec
stos
mov
ret
mov
rcl
test
or
pusha
adc
jae
xor
or
dec
test
xor
sahf
aam
dec
and
mov
push
repnz
lods
cwde
xchg
sahf
and
xor
or
jmp
fild
outs
jmp
jne
mov
and
or
pusha
pop
or
inc
jbe
mov
std
call
jns
inc
jne
jnp
(bad)
cmp
adc
or
jle
(bad)
(bad)
sub
pusha
ja
adc
inc
push
dec
daa
mul
push
rcl
fidivr
stos
dec
test
mov
add
dec
sub
jne
add
cdq
inc
pop
mov
xchg
jne
fnstsw
push
xor
xchg
ret
pusha
pop
(bad)
sub
mov
cdq
sub
xor
dec
mov
jo
ins
clc
adc
jp
sbb
(bad)
cs
or
push
cdq
movs
mov
sbb
sar
xor
push
add
mov
cmp
fcom
fsubr
adc
lds
ss
in
jmp
scas
or
dec
sahf
dec
jae
add
daa
push
in
cdq
loope
inc
add
cmp
adc
das
mov
and
sbb
xor
jl
cmps
sar
sbb
push
jne
inc
int
mov
jge
jns
xor
rcl
jne
sbb
push
mov
add
cmp
lea
push
lods
xchg
mov
inc
call
push
cmp
scas
sub
or
(bad)
imul
xchg
stos
cmp
idiv
jl
adc
jae
mov
sbb
lahf
repz
xchg
mov
cmp
xor
or
push
mov
in
push
cmp
xchg
adc
pop
push
lea
adc
nop
xchg
ins
jno
xchg
jbe
lods
int3
dec
add
mov
add
ret
out
dec
or
ror
sbb
pop
clc
test
sub
std
inc
jns
loopne
pop
shl
inc
rol
jg
xchg
xchg
push
push
jle
jle
sub
sub
rol
add
cmps
mov
arpl
lock
jge
push
adc
xor
adc
sub
popf
dec
pushf
jp
lahf
call
sbb
(bad)
and
rcr
xlat
cdq
pushf
movs
push
ror
xchg
call
sub
dec
push
daa
lods
inc
inc
adc
pop
adc
pop
pop
in
icebp
dec
sbb
adc
push
inc
mov
pop
mov
daa
pop
retf
ret
dec
xor
mov
test
and
or
icebp
sbb
shl
push
inc
push
or
je
fadd
je
push
call
or
adc
xchg
mov
mov
imul
xor
or
push
push
in
inc
bound
pushf
push
add
sub
add
ss
sbb
pop
out
and
xchg
xor
paddd
ret
push
inc
ja
shl
aad
sub
sahf
pusha
pop
push
lahf
pusha
cmp
or
cmp
push
(bad)
int
sar
in
xor
cmp
xchg
or
retf
add
aas
jle
rcl
aaa
add
push
dec
dec
adc
sub
das
jl
adc
je
cmp
nop
push
sahf
idiv
ins
les
jne
mov
push
sub
fist
mov
lahf
inc
inc
ud2
add
cdq
mov
clc
dec
xchg
idiv
push
mov
lea
mov
mov
push
push
inc
push
push
lea
loop
mov
fisub
mov
mov
sbb
test
fbld
(bad)
jb
and
lgs
mov
sbb
or
xchg
push
shl
xlat
sub
jnp
daa
push
adc
push
sub
pusha
inc
mov
mov
sbb
jb
repnz
dec
jl
or
xor
cmp
sub
frstor
cmp
mov
pushf
movs
fisubr
jecxz
sub
or
xor
inc
(bad)
or
imul
aas
sbb
jp
or
or
sub
call
dec
repz
jbe
arpl
cmp
adc
rol
jne
pop
nop
(bad)
and
push
mov
jle
push
push
dec
push
jne
outs
fucomip
je
test
add
imul
xchg
dec
or
loopne
js
cld
mov
add
(bad)
push
test
je
add
mov
cmp
inc
dec
jmp
aas
mov
mov
jne
inc
push
dec
jne
fcmove
mov
sub
ss
jne
pop
dec
jo
stc
inc
add
push
dec
jne
inc
or
pop
push
mov
inc
imul
dec
mov
icebp
push
or
jne
retf
or
adc
adc
jp
fcom
js
and
fs
aaa
pusha
push
enter
sub
and
and
ja
xor
shl
mov
pop
out
mov
sbb
dec
jb
cli
push
cmps
mov
cwde
je
retf
jle
pop
and
jns
mov
and
pop
xor
pop
sbb
or
and
jnp
add
add
and
test
inc
adc
push
sub
inc
jle
push
stos
jge
aaa
adc
or
add
add
push
push
test
cmc
sbb
jno
popf
mov
inc
in
mov
adc
cmc
pushf
jmp
mov
sbb
aas
xor
mov
adc
sub
int3
fcmovu
das
shld
in
push
or
pop
sbb
(bad)
jbe
mov
ins
and
xor
inc
mov
jae
(bad)
ja
loope
xchg
fidivr
imul
cmp
jne
js
add
or
and
pop
lods
push
fadd
push
mov
mov
push
or
push
mov
jecxz
xor
inc
mov
fdivr
add
js
inc
add
sub
and
or
popa
and
nop
push
add
push
and
imul
call
mov
loopne
sbb
push
sub
pop
jne
adc
inc
mov
sub
and
lahf
inc
pop
push
add
mov
out
add
add
cmp
xchg
push
mov
xchg
shl
dec
pop
fnstsw
shl
dec
push
adc
add
push
repz
or
xlat
mov
pop
ret
mov
sbb
rcl
add
or
cld
push
dec
aas
add
jae
or
sub
sbb
and
sub
dec
pop
dec
inc
mov
sbb
push
arpl
mov
or
stos
fistp
ret
ret
rol
pop
rol
or
nop
push
stc
mov
leave
push
inc
push
or
add
inc
enter
lea
xor
(bad)
popa
pop
out
or
mov
inc
lods
daa
push
aas
mov
dec
imul
mov
gs
pop
jmp
sbb
fwait
dec
cmp
mov
or
daa
(bad)
jnp
sbb
push
enter
or
jmp
adc
sbb
push
enter
add
or
dec
dec
jmp
sbb
inc
mov
cdq
pop
jg
sub
mov
pop
jmp
aas
out
sbb
sar
or
adc
cmp
or
mov
pusha
clc
cmp
inc
mov
inc
sub
jmp
push
cmp
pop
fmul
iret
adc
nop
sbb
iret
sub
cs
dec
sahf
out
push
pop
jne
test
cdq
shl
xchg
imul
add
inc
xchg
ficom
sbb
jb
or
dec
sbb
xor
lahf
or
add
not
adc
mov
pop
ret
(bad)
mov
xchg
pop
jo
mov
and
mov
fs
sbb
in
adc
push
mov
xor
push
xchg
jg
or
push
mov
ret
dec
inc
push
cs
xchg
push
fld
xor
inc
cmp
and
fmul
jne
push
add
mov
push
gs
and
mov
leave
sbb
push
(bad)
jmp
jbe
sbb
jne
cmp
jg
ret
mov
mov
cmps
popa
xor
mov
test
(bad)
cmps
jae
lods
jae
xor
lea
inc
cdq
cmp
out
sub
loopne
cwde
jp
and
dec
push
inc
cmp
mov
adc
xchg
nop
icebp
(bad)
jmp
cmps
mov
pop
mov
dec
loope
xor
stc
or
je
add
or
cmp
fimul
add
mov
dec
sbb
leave
adc
fmul
(bad)
ds
mov
or
cmp
retf
les
add
mov
jno
loop
pop
cmp
in
test
js
(bad)
add
adc
jnp
ins
xor
jne
daa
ins
jmp
aas
mov
add
je
jmp
adc
xor
sub
dec
out
ret
enter
or
jle
or
enter
jmp
jge
ins
loopne
addr16
jmp
es
dec
test
loop
je
loope
push
inc
jl
push
outs
mov
les
outs
jb
scas
dec
cwde
sub
out
pop
and
sbb
call
mov
jle
dec
push
push
in
mov
push
adc
fisttp
xor
ret
cmp
add
sub
imul
jno
(bad)
add
mov
sti
cli
call
push
sub
je
push
add
sub
jb
pop
test
xor
sub
xchg
cmp
loope
(bad)
push
mov
mov
adc
test
clc
daa
mov
sub
stc
add
mov
inc
clc
cmp
jne
mov
and
sub
shr
or
call
inc
push
call
lods
std
mov
sub
fist
loopne
imul
push
fimul
xchg
sub
push
icebp
fidiv
push
push
xor
inc
cld
sbb
inc
push
cmp
dec
loopne
xor
out
or
mov
scas
dec
push
lea
mov
mov
cdq
(bad)
sub
ret
mov
pop
add
andnps
inc
iret
or
(bad)
js
ins
jmp
mov
add
add
or
mov
sbb
pop
rol
pop
pop
xor
sbb
sub
mov
and
stos
pop
stos
(bad)
push
jg
pop
sub
ror
jmp
mov
adc
dec
push
jmp
mov
push
mov
fist
push
out
in
out
push
cmps
adc
mov
lea
hlt
sbb
out
mov
add
xor
sbb
add
std
popf
pop
ja
retf
mov
loope
push
jo
ins
inc
inc
loope
sar
or
fisub
(bad)
push
pop
push
cmp
push
lods
xor
dec
push
sbb
leave
mov
push
in
push
xor
lock
imul
sub
add
or
add
jg
add
pop
push
sahf
adc
test
add
inc
add
mov
pop
adc
in
cs
sub
and
push
fcomp
test
and
ret
mov
inc
or
mov
lock
loop
lds
mov
mov
cmp
adc
jmp
and
sub
outs
dec
mov
jbe
cmp
sub
adc
mov
inc
sub
pop
or
pop
and
push
pop
and
push
dec
cmps
icebp
and
fsub
push
push
add
popf
fistp
into
push
movs
movs
fidivr
sbb
ret
sbb
jns
sub
stos
fbstp
push
in
adc
dec
jmp
or
in
xchg
mov
(bad)
sti
(bad)
and
inc
pop
add
movs
daa
push
out
fisttp
inc
pop
iret
sbb
fisub
les
(bad)
aas
push
jle
mov
nop
fwait
mov
(bad)
push
push
inc
push
or
imul
ss
loope
(bad)
std
inc
add
and
ds
add
mov
pop
ret
mov
mov
push
adc
sahf
pop
jl
fiadd
pop
pop
add
pop
adc
add
iret
or
or
call
icebp
mov
add
inc
push
add
sub
jmp
dec
jne
xchg
jecxz
fs
cmp
xchg
dec
mov
jp
sub
stos
push
sub
mov
mov
inc
lods
mov
mov
pop
push
ja
xchg
fcomi
out
push
in
push
lea
mov
test
push
sbb
ss
adc
ror
arpl
mov
hlt
loop
ficom
inc
push
inc
sub
inc
xor
mov
mov
fwait
and
sbb
int
push
or
and
sub
pop
test
mov
mov
int3
sbb
mov
sbb
sbb
jmp
data16
mov
ds
mov
inc
out
mov
je
add
jb
jmp
and
loop
sub
push
je
ficomp
inc
and
xlat
mov
cli
push
lea
push
mov
imul
cmp
pusha
add
sbb
xor
or
mov
ds
mov
pop
and
push
inc
or
sbb
and
aaa
cmp
xor
and
stos
loopne
adc
pop
sbb
sub
stos
rol
sub
enter
je
sub
cmp
mov
xor
push
cmp
rol
mov
mov
imul
sbb
loopne
mov
and
xchg
dec
ss
sub
pop
push
(bad)
pop
scas
and
cwde
dec
dec
std
fs
out
mov
push
or
add
or
add
das
inc
mov
jl
mov
add
adc
sbb
cmp
imul
es
in
jmp
push
sbb
ja
jmp
sbb
sub
popf
jle
push
aam
pusha
cs
addr16
cmp
push
xor
loopne
iret
repz
dec
pop
bound
or
pop
xchg
fisubr
sysexit
add
test
sub
outs
lods
cmp
add
mov
inc
bound
mov
pushw
and
or
fcom
cmp
hlt
mov
mov
data16
bnd
int3
add
xor
and
xlat
adc
(bad)
mov
mov
adc
and
aam
wbinvd
movs
push
mov
xlat
rcr
pop
xchg
lea
stos
into
add
adc
push
jge
out
arpl
mov
sbb
clc
mov
jp
js
jmp
in
push
sbb
daa
dec
jl
xchg
or
das
xor
push
inc
pop
or
mov
jge
mov
movs
adc
test
imul
adc
cmovnp
mov
ret
inc
inc
ret
inc
loop
std
arpl
inc
jae
xor
inc
inc
imul
sbb
lods
pop
and
mov
clc
or
sbb
je
push
push
fmul
out
sbb
in
mov
ds
inc
push
push
adc
mov
add
xor
or
mov
push
sub
mov
inc
dec
cs
cmp
sub
out
or
in
bound
inc
inc
sbb
or
dec
mov
mov
sti
loopne
daa
cmp
push
xor
inc
adc
add
push
adc
dec
test
test
xchg
xchg
add
add
rcl
ins
(bad)
out
push
mov
loope
cmps
sbb
add
pop
inc
mov
add
dec
stos
push
sub
sbb
jo
test
mov
sub
fs
pop
inc
cli
imul
arpl
aaa
xor
push
push
rol
push
out
loopne
test
xor
pop
inc
dec
stos
add
sbb
push
push
lea
sub
add
jne
inc
mov
pop
(bad)
outs
xlat
and
add
adc
icebp
and
adc
ret
push
add
fadd
mov
add
clc
xor
(bad)
jmp
xchg
add
mov
fnstsw
adc
lea
arpl
pop
jae
and
push
repnz
cmp
xor
adc
and
popf
movs
in
add
or
sbb
cmp
push
fmul
mov
mov
push
shl
lea
iret
pop
arpl
faddp
shl
retf
bound
mov
fwait
or
dec
sbb
cmp
pop
cmps
dec
shl
jno
inc
cmp
loopne
or
out
sub
pop
jne
xor
outs
jp
jo
xor
fcom
adc
mov
jg
and
and
mov
sub
xchg
test
dec
sub
or
cli
mov
xchg
loope
cs
add
popf
and
inc
adc
je
add
or
push
fs
or
es
mov
push
pop
push
cmp
movs
dec
add
xchg
mov
sbb
add
nop
mov
add
sub
adc
or
loope
ret
mov
mov
add
sbb
aaa
les
push
imul
inc
cmp
icebp
outs
inc
in
imul
xor
cmps
xor
dec
addr16
jp
xor
mov
and
dec
mov
pop
mov
sub
ror
push
pop
push
adc
fisubr
das
cmp
jecxz
jmp
jl
push
jne
rcl
pop
fisubr
jecxz
and
pop
shr
or
lods
je
cmp
adc
je
xchg
pop
jmp
mov
lea
and
adc
add
mov
jecxz
cmp
sti
jl
jg
adc
jbe
push
dec
mov
push
and
je
sbb
je
xor
and
daa
dec
adc
jecxz
jmp
push
and
fild
push
pop
repnz
adc
(bad)
out
pop
jno
or
xchg
cmp
xchg
or
inc
movs
cmp
mov
pop
(bad)
inc
les
loop
daa
cmp
enter
aas
sub
es
pop
sub
push
xchg
lods
adc
add
stos
and
(bad)
mov
add
or
jb
push
clc
dec
xchg
enter
jp
inc
cld
or
test
je
ret
sub
sub
dec
rol
add
push
and
and
mov
in
adc
mov
xor
rcl
cmp
dec
push
push
mov
sub
cmp
xor
jp
loope
pop
sbb
mov
and
sbb
adc
mov
aad
xchg
cmp
repnz
xchg
push
in
push
je
push
(bad)
fidivr
lods
jnp
ret
mov
in
cmp
arpl
imul
imul
and
retf
cmps
cmp
and
push
or
pusha
adc
push
lods
jecxz
popa
adc
dec
inc
mov
call
inc
jb
mov
jbe
movups
outs
push
(bad)
je
(bad)
inc
pop
add
pop
adc
cmp
inc
daa
pop
daa
loop
aad
out
es
retf
mov
or
inc
pop
add
stos
mov
lahf
mul
loopne
bound
movs
lds
jnp
out
push
pop
cli
jle
jge
sbb
push
stos
(bad)
jmp
cmp
sbb
loop
lds
and
cs
mov
(bad)
mov
ret
scas
xor
in
rcl
adc
jecxz
leave
sbb
xchg
fisub
cdq
data16
lahf
xor
sub
aaa
fwait
sub
imul
dec
inc
pop
add
add
pop
and
test
adc
adc
jns
outs
in
loopne
sub
dec
pop
sub
inc
pop
add
ret
dec
enter
aam
jo
add
inc
dec
mov
add
inc
loop
cld
pop
pop
sub
or
sbb
pop
inc
pop
mov
push
daa
xchg
test
add
bound
add
popf
xchg
adc
clc
adc
push
imul
sub
mov
mov
mov
jo
inc
xchg
call
adc
fadd
in
aad
and
and
xchg
sub
je
xor
and
sub
sub
inc
ja
cmp
ins
mov
frstor
sub
sub
sbb
fld
or
sbb
cli
enter
cmc
and
data16
mov
xchg
fs
mov
cmp
fistp
push
inc
push
and
test
iret
dec
pop
imul
out
mov
idiv
xlat
jae
inc
ins
add
mov
cmps
add
cld
pop
xchg
fbld
xor
push
push
push
dec
push
push
cmp
xor
out
pop
dec
push
inc
push
push
std
pop
cwde
pop
sub
inc
cmp
add
rol
rol
cmp
inc
je
daa
xor
repz
xchg
mov
push
jo
dec
cld
hlt
or
fs
(bad)
ss
cmp
push
sub
sbb
adc
inc
or
mov
inc
mov
dec
mov
jmp
shl
dec
call
mov
sub
lock
retf
jmp
add
push
and
daa
sbb
stos
or
test
sub
xor
add
push
push
or
rcl
enter
mov
or
cmps
jne
sbb
rcl
hlt
in
and
cmp
cmp
sbb
push
rol
loopne
cwde
inc
lea
push
xchg
ins
push
mov
sbb
cli
rcr
and
pop
(bad)
mov
jne
push
ret
imul
enter
dec
push
aas
cmp
or
int
fild
sahf
mov
and
aaa
pop
inc
inc
mov
lock
inc
mov
xlat
push
mov
add
rol
(bad)
mov
mov
cmp
push
mov
stc
add
sbb
ss
push
in
push
fisttp
in
mov
jl
dec
bound
inc
jge
ds
sub
movs
xchg
lock
pop
mov
lea
mov
adc
or
outs
inc
add
inc
dec
inc
jmp
ror
push
test
cmp
adc
sub
mov
sub
add
das
rol
jb
sar
adc
adc
push
inc
mov
in
mov
cli
mov
dec
dec
fisttp
inc
call
cmp
mov
jne
add
sbb
add
cmp
sbb
cmp
loopne
pop
sub
push
lods
add
sbb
test
add
ds
inc
push
call
or
sbb
sub
in
push
xor
xor
push
inc
icebp
(bad)
jmp
mov
(bad)
rol
sbb
xchg
lock
dec
jg
test
inc
xchg
cmp
cmp
cmp
cmp
pop
adc
cmp
icebp
loope
lds
xchg
push
mov
mov
in
xchg
dec
loopne
clc
mov
dec
daa
cmp
jo
and
ins
adc
(bad)
leave
add
inc
movs
test
cwde
sub
add
es
adc
stc
or
(bad)
adc
inc
push
ret
loope
rcl
mov
pusha
jmp
fcmovnb
test
dec
leave
and
pop
out
loopne
inc
mov
(bad)
sar
jne
xchg
jno
clc
sbb
daa
push
sub
and
dec
fsub
das
xchg
pop
add
inc
dec
mov
pop
ins
mov
push
mov
ja
jnp
xor
loopne
fsub
loop
sub
popf
fcom
cmp
lods
jecxz
sub
stc
sub
popa
mov
xchg
mov
mov
jbe
mov
push
js
mov
(bad)
and
xchg
add
arpl
push
jbe
xchg
mov
xor
push
jmp
dec
push
mov
jae
in
push
cmp
xchg
mov
or
sbb
movs
cmp
in
loope
push
sub
or
inc
push
inc
add
hlt
xor
pusha
je
retf
sub
test
(bad)
dec
ret
mov
je
adc
sub
lods
lahf
inc
or
mov
cs
push
jo
sbb
add
mov
sbb
push
sbb
arpl
jmp
das
clc
inc
xor
cmps
mov
push
or
cdq
sbb
sbb
add
adc
pop
xor
test
and
xchg
gs
pusha
in
mov
sub
retf
retf
jne
repz
or
in
add
add
mov
push
inc
mov
dec
adc
cmp
push
inc
dec
mov
push
sub
cmp
adc
lds
adc
fcom
push
std
xor
js
movs
pop
xchg
xor
sbb
xchg
jp
jp
pop
ins
mov
adc
push
ins
call
mov
adc
test
adc
sahf
cmps
mov
xchg
bound
cmp
add
mov
out
sub
out
in
outs
adc
push
sbb
sub
adc
test
scas
and
ins
jg
int
pavgb
fcom
or
rcr
shl
lods
xor
or
addr16
mov
push
cli
test
addr16
xchg
adc
jmp
inc
lods
popa
cs
inc
cmp
cmp
cmp
int
mov
inc
push
jecxz
sbb
xor
and
movnti
movs
(bad)
pop
add
sbb
sub
xor
or
sbb
or
rol
xor
ds
inc
push
xor
xor
add
inc
pop
aas
cld
imul
add
inc
add
adc
push
stos
push
sbb
lds
dec
test
sahf
xlat
adc
ret
sbb
push
sub
pushf
add
adc
mov
jne
mov
cmp
inc
test
sbb
jo
mov
daa
ss
test
jg
cli
add
pop
lods
test
adc
push
pop
sub
ret
sbb
shl
icebp
stc
add
add
hlt
rep
jo
loope
push
fwait
cmp
scas
lods
add
clc
mov
push
sub
pop
or
inc
add
add
add
dec
sbb
in
sub
pop
cs
ins
jb
pop
and
into
and
sbb
xchg
mov
cs
aas
push
add
pop
inc
je
mov
adc
add
mov
xchg
and
xchg
sub
xchg
icebp
inc
fcomp
ds
inc
ss
inc
shl
out
out
add
inc
cmp
lea
pop
or
je
jg
sub
push
ficom
inc
mov
cmp
iret
(bad)
shr
inc
push
push
xchg
push
mov
mov
mov
inc
adc
mov
xor
sahf
adc
adc
jp
pop
and
adc
mov
add
sub
mov
aas
daa
test
add
or
inc
sub
and
push
sbb
pop
jmp
push
add
es
aam
sbb
pop
pop
push
daa
cmps
sbb
in
jmp
ret
cmp
das
iret
dec
push
push
cmc
inc
mov
jmp
mov
push
jge
pop
shr
push
cmp
out
shl
stos
iret
push
cmp
xchg
mov
and
jp
retf
jge
add
pop
mov
bound
jmp
(bad)
push
fadd
mov
sub
retf
mov
push
sbb
loope
outs
stc
je
inc
cmps
mov
jge
push
adc
inc
pusha
sar
out
or
xor
push
push
aad
xlat
ins
dec
sbb
inc
jo
out
and
push
test
mov
ror
xor
or
mov
sub
pusha
sub
shr
ret
sub
popa
sbb
push
lea
mov
lea
mov
cmp
push
cmp
int
es
jmp
and
test
or
in
clc
add
fs
imul
cmps
rcr
cdq
cwde
std
ins
mov
jecxz
clc
and
jp
mov
adc
jge
shl
inc
sub
es
mov
add
je
arpl
sub
push
mov
inc
jo
pop
es
test
sbb
push
(bad)
pushf
adc
and
adc
mov
cwde
push
jne
dec
mov
mov
lock
xchg
push
sbb
js
scas
aad
jl
dec
adc
call
cmp
lds
call
push
add
xor
xchg
mov
adc
add
adc
stos
and
loopne
and
sub
ret
push
or
add
sbb
pop
mov
ss
dec
movs
int
add
pop
add
sbb
rcr
sbb
inc
push
jmp
idiv
pop
mov
dec
popa
push
xchg
(bad)
je
xchg
dec
or
cmp
jle
push
pop
or
sub
push
sbb
or
inc
xor
push
test
push
sbb
mov
and
inc
inc
mov
call
add
not
pop
sbb
mov
adc
mov
add
or
push
or
cmp
cdq
jge
sbb
cmp
cwde
cwde
call
add
push
xchg
or
cwde
or
pop
ret
test
push
add
cmp
and
and
adc
and
ins
sbb
cmp
and
add
inc
inc
sub
pushf
rcl
es
push
jo
xchg
lds
movs
xor
and
pop
dec
ret
sub
cmp
aaa
mov
mov
cmp
or
mov
test
xor
mov
mov
clc
mov
add
pop
inc
movs
pop
es
mov
in
in
add
xor
into
ret
retf
mov
sbb
xchg
ret
xchg
ds
mov
(bad)
inc
jmp
and
xchg
outs
fwait
test
push
adc
xor
call
les
add
push
lahf
nop
jo
ror
dec
or
pop
pop
js
mov
test
inc
cli
adc
dec
push
stos
movsx
push
aaa
(bad)
shr
repnz
gs
sbb
xor
xchg
and
jns
sbb
sub
adc
loope
pop
mov
push
inc
push
dec
lea
movs
cmp
mov
add
adc
test
and
jbe
test
imul
push
sub
sbb
inc
(bad)
or
pop
sub
fimul
sub
inc
sbb
jl
sub
sub
or
push
push
mov
dec
mov
inc
mov
test
mov
xchg
sub
std
push
push
dec
adc
push
inc
mov
sub
ret
mov
or
push
and
sbb
jb
cmp
jl
mov
dec
loopne
es
xor
push
xor
setle
mov
(bad)
outs
jle
sub
pushf
pop
sbb
stc
push
inc
ss
mov
sub
adc
hlt
ret
les
inc
dec
mov
push
push
mov
cdq
je
sbb
mov
shl
adc
jne
add
cmp
cmp
popa
es
lock
inc
pop
and
daa
or
push
in
pop
retf
in
mov
cmp
add
lds
and
popa
cmp
push
or
mov
cmp
push
jnp
or
hlt
and
mov
(bad)
adc
inc
(bad)
lahf
cdq
and
mov
jae
push
sub
(bad)
mov
and
ds
jmp
out
pcmpgtb
or
cmp
das
cmc
push
loop
xor
(bad)
sbb
jmp
loope
jge
xor
pop
mov
sbb
aad
ret
push
adc
dec
cmp
rcl
stc
xchg
pop
jecxz
xchg
mov
mov
(bad)
ror
loope
pop
fst
xor
push
inc
(bad)
fcmovu
mov
mov
push
and
mov
je
adc
and
sbb
lods
push
pop
(bad)
jmp
sbb
sub
out
jbe
sbb
iret
xchg
movs
mov
xlat
jnp
mov
jbe
jne
inc
and
loope
push
pusha
pop
adc
cdq
cmp
lea
or
dec
fmul
dec
dec
add
aaa
push
pop
inc
sbb
fnstcw
lock
addr16
dec
inc
mov
mov
outs
imul
repz
push
or
ret
dec
mov
add
pusha
cmp
xor
xor
mov
outs
ins
adc
push
mov
mov
(bad)
jns
add
push
mov
fcom
push
sti
fiadd
leave
shl
cmp
into
or
cmc
test
inc
jmp
popa
xor
sbb
push
xor
or
retf
inc
cmp
mov
or
inc
jne
icebp
or
cmp
je
retf
push
sbb
lods
cli
push
(bad)
and
jb
aad
inc
mov
mov
sbb
popa
jle
push
jg
sub
mov
idiv
or
in
(bad)
neg
inc
fs
mov
xor
adc
xor
pop
pusha
icebp
movs
inc
cmc
mov
pop
pop
fldenv
jb
je
loop
cmp
loop
mov
push
push
push
mul
dec
test
lods
and
jne
add
daa
in
(bad)
mov
xor
pop
inc
enter
pop
mov
adc
xor
cmp
push
push
xor
cmp
loopne
ror
stos
push
ja
addr16
cs
sbb
dec
dec
sub
mov
pop
sbb
jne
push
or
push
(bad)
inc
jl
push
pop
add
add
sub
sar
adc
mov
or
std
pop
enter
pop
bound
cs
enter
cmc
inc
push
pusha
xor
cmp
je
inc
(bad)
push
test
push
xor
mov
push
push
retf
adc
sbb
loopne
fstp
(bad)
and
in
movs
and
mov
adc
imul
imul
retf
fsubp
mov
sbb
mov
das
adc
inc
sub
inc
dec
imul
mov
sbb
cmp
cmp
out
icebp
or
push
sbb
pop
push
popa
add
jg
dec
outs
arpl
inc
in
leave
sbb
shr
mov
ds
add
fsubr
sub
dec
ins
call
inc
sub
cmp
hlt
shl
push
add
jmp
hlt
pop
adc
popa
push
inc
pop
jl
adc
test
sbb
pusha
cmp
(bad)
xchg
sti
clc
(bad)
jge
push
pop
fs
sub
call
and
ret
lock
ret
lods
test
pop
jl
std
xchg
cs
xlat
data16
lea
or
pop
or
adc
inc
cld
stc
imul
pop
jmp
cmp
lods
neg
push
adc
jae
push
adc
mov
mov
dec
cli
push
fiadd
and
xchg
xchg
sub
xor
in
cmp
sbb
pop
sbb
pop
js
lods
jecxz
cli
or
add
test
jb
pop
mov
xor
push
fisttp
inc
jmp
push
enter
iret
push
les
bound
push
(bad)
sbb
mov
dec
test
rcr
adc
xchg
inc
sub
jle
dec
sbb
sbb
cmp
into
js
jmp
and
aam
out
and
dec
pop
add
das
sbb
test
mov
ror
mov
pop
test
(bad)
in
add
xor
adc
xor
cmp
je
(bad)
jno
pop
shr
jmp
adc
xchg
pop
mov
dec
adc
xchg
mov
and
push
push
push
imul
and
cmp
mov
dec
daa
sub
jle
(bad)
loopne
adc
(bad)
sub
push
loopne
sub
test
fs
add
dec
enter
pop
pop
std
not
and
test
or
call
outs
mov
sub
cwde
or
xchg
clc
inc
push
and
sbb
pop
sub
ds
jg
push
call
fdiv
xchg
nop
out
sti
sub
mov
adc
pop
push
ror
icebp
mov
rol
jmp
pop
sub
push
inc
popf
inc
mov
pop
add
stos
pop
or
adc
or
addr16
mov
adc
add
xchg
or
iret
cmp
inc
je
in
retf
add
ror
pop
pop
les
mov
adc
or
xchg
lock
cmp
or
cmp
in
pop
call
dec
retf
push
dec
inc
mov
lods
cmps
into
lds
(bad)
cmp
pushf
out
inc
push
xor
rcl
jge
lahf
xchg
xchg
in
push
sti
cmp
xor
sbb
imul
iret
mov
xchg
inc
ret
push
mov
sub
xchg
fadd
fnsave
fdivr
xchg
inc
push
push
cmp
gs
xchg
in
push
push
sbb
gs
cmp
mov
mov
add
cmp
xchg
mov
jbe
xor
cmp
sub
or
mov
adc
mov
(bad)
cdq
pop
outs
mov
lds
mov
lods
mov
or
test
add
ret
mov
or
and
je
fiadd
dec
jo
mov
movs
mov
or
fidiv
mov
push
xchg
add
adc
stc
in
push
mov
mov
sub
pop
or
daa
aam
cmps
in
and
pop
lea
pop
sbb
mov
inc
stos
cmc
(bad)
cmp
jne
inc
inc
jl
pop
rcl
lods
clc
cmp
pop
repz
je
lods
gs
and
add
inc
push
sub
adc
repnz
sbb
add
xchg
adc
sbb
push
ja
mov
add
test
dec
inc
aas
fisttp
sub
sub
jo
dec
pop
or
leave
push
inc
pop
push
fst
adc
dec
test
mov
mov
pop
cmp
xor
sbb
lods
pop
daa
pusha
cmp
int
outs
test
popa
fs
or
int
mov
push
je
ret
dec
or
aam
push
dec
push
add
jmp
sbb
loope
retf
xor
pop
mov
xor
in
pop
psubd
xor
movs
fsubr
mov
arpl
xchg
jmp
push
add
adc
dec
jle
mov
and
cmp
adc
call
cmp
mov
jne
pop
cld
mov
js
or
leave
scas
and
mov
stos
xor
push
lds
mov
fdiv
pop
pop
inc
xor
and
sub
aam
pop
and
fwait
ret
and
xor
(bad)
cmc
cmp
popf
adc
or
or
rol
push
mov
dec
mov
sbb
inc
pop
pop
add
inc
and
in
dec
mov
repz
repnz
cmp
adc
mov
imul
sub
add
cmp
pop
dec
mov
aam
loopne
fbld
pop
fsubp
pop
nop
and
popa
out
mov
xor
mov
add
pop
mov
cmps
and
cmp
cmp
mov
sub
sbb
leave
xchg
ror
xchg
and
fisub
inc
aaa
fisubr
or
pop
sbb
imul
or
or
add
sar
add
outs
mov
mov
or
jle
mov
push
push
imul
and
add
imul
mov
sbb
pop
and
adc
cmps
jle
mov
dec
add
cmp
jl
cmp
jb
inc
inc
int
sub
rcr
and
sub
aam
add
xchg
out
in
mov
push
push
ror
rol
mov
sub
mov
cmp
mov
and
add
mov
out
out
or
cld
sbb
mov
push
adc
adc
jle
inc
or
push
sub
sub
daa
mov
mov
push
mov
and
cmp
fwait
or
pop
sbb
fisub
xchg
mov
dec
clc
sar
and
out
sbb
add
out
std
mov
ins
mov
mov
and
add
outs
sub
adc
mov
idiv
int
push
adc
stos
call
test
adc
or
dec
or
nop
movs
cmp
or
add
ss
lods
or
sub
daa
cmp
xchg
mov
clc
mov
jbe
fsubr
int
mov
pop
ficom
test
ror
sub
and
ror
push
int3
clc
adc
out
fldenv
pop
and
push
xor
mov
in
dec
xor
sbb
cmp
call
and
sbb
inc
or
sub
sbb
outs
(bad)
adc
sbb
sbb
ror
mov
sub
mov
movs
fcomp
pusha
or
cmp
pusha
push
and
push
add
stc
mov
sub
jae
or
inc
gs
pop
retf
cmp
push
ja
jns
add
cmp
xchg
mov
test
and
test
mov
mov
aad
inc
enter
call
sub
sbb
push
fcmovbe
cli
sub
push
or
add
cmp
cmc
mov
sbb
inc
add
ins
and
add
aam
mov
adc
add
dec
jae
je
call
sub
sub
leave
mul
xchg
and
push
add
add
jmp
dec
mov
fistp
push
and
cmp
sub
push
mov
adc
and
test
aas
dec
xchg
dec
inc
clc
lods
nop
outs
(bad)
clc
out
std
rcl
fcmovnu
add
sbb
stc
pop
jnp
ret
add
push
fmul
push
push
stos
sub
test
sti
xchg
(bad)
test
es
rol
push
xor
je
ss
dec
cmp
fnsave
ret
lea
jbe
and
jle
and
push
imul
push
push
or
mov
neg
and
adc
adc
pop
aad
in
cmp
inc
adc
or
cmp
dec
in
sbb
xlat
fisub
int
adc
pop
es
clc
sub
cld
adc
int
pop
test
das
mov
mov
adc
push
ret
cwde
add
add
pop
push
test
jg
or
mov
xchg
mov
adc
cmp
pushf
mov
mov
mov
sbb
mov
sbb
les
add
push
inc
dec
iret
lods
icebp
stos
xchg
xchg
mov
cmp
dec
jg
iret
or
repz
lds
retf
cmp
ror
mov
retf
mov
adc
(bad)
dec
pop
dec
les
xchg
aam
cmp
sbb
mov
push
sbb
sub
inc
jbe
sub
cmp
and
sub
popa
shl
daa
push
cmps
adc
add
test
push
xor
mov
adc
mov
add
ins
mov
leave
push
cwde
adc
push
mov
fstp
sahf
xor
loopne
test
push
or
xor
xchg
inc
sub
inc
push
mov
stc
push
fs
push
lods
or
or
add
xchg
sub
or
mov
cmp
and
adc
push
pop
clc
adc
ror
lea
movs
sub
sbb
add
mov
pop
mov
add
pop
cmp
pop
mov
repz
xchg
push
push
dec
dec
enter
fistp
jb
jne
xchg
adc
xchg
cwde
cli
mov
pop
ss
jmp
clc
clc
out
jmp
les
arpl
dec
retf
mov
xor
es
or
mov
rcl
popa
or
ins
cdq
lods
or
mov
mov
rep
mov
push
fwait
jns
dec
inc
add
dec
xchg
idiv
or
push
push
mov
push
sub
cmp
stc
and
xchg
lods
data16
sub
jmp
push
and
ror
adc
push
mov
and
push
dec
cld
mov
jno
dec
push
ins
push
cld
unpckhps
xor
push
sbb
std
jnp
push
dec
je
pop
sub
adc
cmp
and
push
pusha
mov
mov
cmp
xor
rcl
pop
or
fistp
or
sbb
dec
add
imul
scas
data16
adc
jle
adc
and
xor
inc
mov
add
je
ja
inc
mov
xor
dec
cmc
scas
mov
sub
dec
xchg
dec
push
test
mov
sbb
push
jb
jno
sub
mov
sbb
and
dec
dec
mov
jb
jge
push
add
jb
into
add
adc
add
mov
jmp
xor
sub
mov
adc
sahf
adc
ret
sbb
or
inc
adc
fcom
pusha
lea
data16
movs
outs
fs
lock
call
jecxz
add
inc
cmp
lock
out
test
xchg
pop
cmp
sbb
je
inc
daa
ds
mov
dec
and
adc
outs
jnp
movs
out
pop
cmp
jne
inc
aaa
sub
stc
push
std
jo
mov
mov
sbb
inc
les
sub
js
and
rcl
add
leave
sbb
mov
movs
and
dec
repz
sbb
and
or
sahf
or
or
add
inc
mov
repnz
mov
mov
lahf
pop
mov
xor
adc
ret
sbb
pop
mov
in
call
es
pminsw
arpl
jmp
popa
or
(bad)
mov
inc
inc
dec
push
sti
push
dec
dec
xchg
popa
add
inc
sub
mov
and
push
mov
mov
mov
mov
adc
(bad)
mov
inc
add
jg
add
and
jmp
jo
sbb
push
push
adc
iret
js
mov
dec
int3
lods
push
jmp
sbb
mov
ds
pop
mov
loope
or
imul
mov
push
dec
retf
sbb
xor
mov
push
imul
fs
xchg
sbb
(bad)
adc
bound
ret
and
jmp
push
push
stc
pop
sbb
jmp
pop
push
int3
cmp
lods
adc
mov
mov
dec
mov
add
or
and
mov
push
mov
xchg
(bad)
jg
pop
mov
mov
or
dec
int3
cmp
lods
enter
movs
or
or
jge
rol
test
stc
add
dec
inc
push
call
mov
outs
pop
and
stos
add
mov
push
addr16
loopne
and
xor
sub
inc
sbb
xor
xor
inc
stos
add
sbb
mov
pushf
or
mov
sbb
adc
je
sbb
fdivr
test
inc
sub
push
xor
mov
movs
add
inc
jl
sub
mov
mov
dec
xchg
lods
sub
sbb
mov
(bad)
jl
enter
mov
sbb
arpl
sbb
cmps
dec
fsubr
or
jp
test
out
ret
add
mov
imul
fisttp
popf
add
mov
xor
or
js
add
adc
inc
das
cld
mov
xchg
lock
fs
mov
mov
push
pop
mov
jle
pop
push
xor
popf
int3
pop
dec
cli
adc
add
or
test
add
lods
pop
push
pop
loope
push
mov
pop
mov
add
fwait
add
into
lock
lahf
out
pusha
leave
xor
add
and
jmp
loopne
sti
push
inc
sub
dec
adc
adc
movs
xchg
jae
(bad)
mov
loop
mov
(bad)
xlat
or
add
sub
adc
xchg
add
cli
rcl
sub
push
adc
call
fcomp
mov
lock
cs
sub
pop
jnp
jb
and
xchg
sub
test
adc
mov
jmp
mov
rol
or
push
js
idiv
xor
sbb
cmp
or
add
pop
jecxz
fucomip
sub
int3
loope
in
and
ins
lock
int
cdq
or
lods
popa
test
call
lds
mov
cmp
inc
stos
sub
ins
dec
mov
sub
push
jmp
cmp
gs
mov
dec
fadd
jb
aaa
and
sub
and
out
mov
cmp
inc
jne
inc
mov
sbb
adc
add
aas
cmp
clc
xchg
out
add
lods
adc
xor
cmp
je
xchg
adc
sbb
sbb
and
inc
jecxz
and
enter
mov
mov
lock
push
aas
mov
ficomp
jg
(bad)
jne
lea
loopne
or
or
mov
mov
mov
sbb
xchg
test
je
mov
mov
sub
les
pop
aas
pop
inc
jo
add
xchg
repnz
sub
push
pushf
jae
push
mov
mov
ins
or
cmp
int
in
in
add
and
(bad)
call
and
pusha
bound
adc
push
push
push
es
cwde
pushf
dec
popf
test
cmp
inc
jle
pop
in
je
xchg
mov
(bad)
jle
retf
iret
cmp
js
cmp
data16
pop
icebp
nop
stos
ficom
push
imul
push
inc
dec
add
ret
or
xor
mov
push
iret
mov
dec
inc
jle
pop
jl
or
sar
sub
fs
mov
popa
(bad)
rcl
pop
sub
sub
fnstsw
adc
popf
sub
jmp
pop
int3
sbb
movs
icebp
movs
inc
sub
gs
xchg
arpl
pusha
dec
push
mov
add
mov
pop
sub
pop
ins
enter
push
in
pop
addr16
daa
in
pop
imul
daa
fwait
int
jns
cld
inc
mov
out
test
adc
xchg
dec
movs
push
data16
in
sahf
ficom
mov
mov
push
jbe
xchg
add
popf
fs
loope
call
rol
rol
push
or
adc
rol
jne
jne
movs
je
sbb
(bad)
adc
mov
repnz
push
je
inc
mov
dec
mov
sub
sahf
add
and
dec
xchg
jmp
pop
add
inc
pusha
xchg
mov
dec
jae
cs
pop
add
ror
dec
dec
das
mov
add
or
in
jno
dec
and
xacquire
ret
test
and
inc
cld
fcom
(bad)
jmp
push
into
add
test
inc
mov
push
jg
rcl
enter
mov
add
clc
dec
add
das
push
jo
repz
jne
mov
movs
mov
xchg
movs
jo
pop
jbe
cmp
ret
or
arpl
mov
inc
cmps
push
test
add
hlt
xchg
inc
dec
dec
push
fwait
sub
cmp
or
push
rcl
mov
dec
xor
fbld
test
je
sbb
and
je
je
jmp
push
mov
xchg
dec
xchg
je
cli
pop
ja
adc
mov
cs
sub
adc
mov
bound
pop
ror
jmp
push
daa
outs
imul
or
xor
loope
jo
les
sub
push
das
in
fdiv
je
adc
loope
mov
xchg
push
sub
xchg
jb
cmps
dec
sbb
adc
rcl
movs
mov
(bad)
ret
cmp
sub
push
ds
mov
rol
jg
pusha
ret
and
nop
jmp
dec
cmp
(bad)
mov
xchg
ror
or
cld
and
jno
nop
enter
les
jecxz
and
xchg
scas
xchg
push
push
xor
or
adc
pop
cmps
stc
adc
test
cmp
sbb
(bad)
add
ins
xor
or
ret
loop
gs
test
mov
cdq
or
mov
cmp
xchg
in
cwde
ins
pusha
sub
fist
xor
push
sub
jnp
mov
arpl
push
or
mov
call
cwde
mov
xor
sbb
xlat
mov
add
movs
mov
ins
jmp
popa
xchg
jmp
imul
(bad)
xchg
pop
mov
adc
mov
movs
fucom
dec
jmp
les
out
cmp
rcr
xchg
push
nop
push
lock
sbb
jl
add
inc
inc
enter
imul
push
out
xor
pop
mov
push
in
test
mov
cmp
jne
(bad)
cmp
clc
arpl
aaa
jle
add
sub
or
or
xlat
add
mov
sub
cmp
ins
add
mov
shr
xchg
add
push
push
xchg
sbb
aas
jecxz
inc
ins
icebp
push
push
(bad)
mov
int
test
imul
sbb
shl
pop
stos
xor
jl
inc
ja
jae
push
pop
cmp
test
adc
or
mov
mov
ins
push
push
add
(bad)
es
push
adc
das
mov
lea
push
call
clc
addr16
push
jge
jmp
push
xchg
cmp
inc
or
xor
pop
push
in
ins
cmp
cmp
xor
adc
popa
aaa
jnp
cli
ja
cmps
lods
mov
and
loop
loopne
ins
xchg
push
push
add
bound
push
adc
ins
xor
addr16
adc
or
fsin
dec
and
pushf
test
and
test
xchg
je
or
or
loop
push
leave
mov
inc
loop
sub
dec
push
push
jl
mov
loopne
xchg
dec
cmp
sbb
(bad)
cmp
jp
inc
jne
or
rcr
movs
dec
stos
adc
add
call
sar
jmp
push
sbb
cs
xor
lods
lea
jo
ins
inc
ss
rcl
call
xchg
pop
fst
jmp
xchg
lahf
test
fdiv
xor
push
jns
test
jno
jge
test
lahf
je
xor
jmp
inc
adc
mov
dec
jo
fisubr
loop
xor
mov
cmps
enter
jle
dec
ret
pop
inc
pop
enter
add
pusha
jo
push
add
inc
jge
mov
scas
sbb
dec
push
clc
or
inc
test
or
sbb
pop
out
inc
add
sar
je
jae
lock
push
je
out
add
add
inc
cs
push
aad
addr16
jns
mov
ins
xor
jb
jbe
mov
dec
lea
and
inc
add
sub
sbb
test
into
and
push
xor
sti
sub
sbb
cmps
xor
xor
or
cmps
mov
out
dec
inc
rcl
mov
push
scas
movs
or
push
popa
test
imul
lods
sbb
retf
outs
sbb
sbb
call
push
add
shl
test
pop
add
lahf
test
ret
cwde
cmp
cmc
out
call
xor
jbe
ror
push
iret
arpl
add
ds
push
xchg
and
add
mov
imul
(bad)
mov
cld
mov
mov
add
jmp
es
out
xor
rol
push
mov
mov
test
dec
pop
in
ficomp
add
dec
jp
add
or
and
push
pop
adc
push
adc
xor
pusha
repnz
push
nop
dec
xchg
enter
nop
inc
jb
cmps
xchg
or
jo
jns
xor
nop
xor
cmp
or
adc
stos
or
sub
adc
sahf
mov
or
add
nop
(bad)
push
mov
das
xchg
jns
icebp
(bad)
or
or
arpl
add
jle
inc
mov
sub
sahf
out
sbb
mov
lds
mov
sbb
(bad)
adc
adc
mov
xor
movs
add
nop
test
mov
pop
pushf
add
retf
push
cwde
push
neg
jmp
popf
dec
cmp
xor
push
pop
(bad)
cld
dec
and
jbe
imul
jns
sub
pop
push
xchg
rol
mov
mov
xor
fcomp
mov
add
xchg
adc
adc
retf
inc
push
mov
sbb
pop
add
(bad)
mov
and
cs
mov
mov
push
push
nop
(bad)
pusha
add
add
and
pop
nop
xor
xor
or
mov
push
es
jmp
push
push
cmp
lock
add
jbe
pop
test
inc
cmp
or
mov
adc
das
mov
mov
and
pop
cli
sbb
add
cmp
mov
and
lahf
pop
ror
aas
cmp
dec
(bad)
lds
and
loope
adc
inc
cs
in
add
mov
jmp
test
push
and
or
mov
mov
inc
mov
and
and
or
mov
jbe
sub
lods
add
jmp
daa
movs
adc
in
xchg
cld
mov
push
or
popa
loop
int3
add
inc
aam
push
xor
inc
add
adc
pop
inc
sub
cmp
or
or
popa
sub
mov
adc
mov
push
mov
and
adc
dec
mov
pusha
cmp
mov
jp
aas
js
cmp
mov
aaa
mov
ja
daa
ja
aam
js
pop
push
jecxz
jmp
lea
pop
xor
push
fiadd
xlat
mov
in
jmp
jb
jns
lea
xchg
or
adc
sti
inc
cmove
js
add
and
adc
aaa
mov
mov
cmp
xor
call
mov
cmp
inc
lds
jae
inc
pop
sbb
push
sbb
es
jl
shl
inc
mov
add
pop
add
mov
test
push
scas
inc
add
add
sbb
push
hlt
dec
sti
cmp
push
cwde
daa
je
mov
jne
jbe
and
retf
inc
adc
jmp
test
mov
test
inc
fs
daa
lea
clc
and
adc
add
(bad)
fild
(bad)
lods
xor
hlt
cmps
pusha
pop
addr16
mov
das
or
sub
mov
loope
or
adc
push
and
sbb
mov
ret
sbb
test
mov
cdq
sub
jle
inc
inc
jns
add
adc
jns
pop
jg
cs
adc
inc
mov
sub
xor
repz
sub
and
(bad)
push
ret
dec
push
xor
pop
jae
and
push
pop
jp
shl
xor
push
xor
cmp
jmp
cmp
xor
pop
inc
sbb
sbb
xchg
or
pop
xor
loope
add
inc
call
mov
arpl
ss
call
mov
push
add
dec
xchg
or
mov
cmps
pushf
ins
dec
cmp
mov
and
pop
aaa
dec
test
scas
inc
mov
jge
jo
pop
mov
or
sub
sbb
mov
dec
inc
aaa
fsub
xchg
retf
mul
and
inc
push
xchg
add
sub
sbb
sbb
and
imul
push
test
sbb
inc
jl
enter
adc
push
cmps
pop
cdq
ss
popa
retf
adc
xchg
pop
fistp
mov
fisttp
mov
push
add
cld
sbb
pop
mov
push
dec
loop
dec
in
(bad)
mov
movs
or
mov
sub
not
sbb
lock
dec
push
out
mov
rcl
jnp
dec
je
lea
mov
inc
out
and
dec
call
cmc
jecxz
test
mov
push
cmp
add
(bad)
push
adc
push
add
jmp
mov
jo
scas
inc
xor
ret
jbe
or
sub
push
add
jecxz
xor
rol
ficom
adc
lea
mov
jmp
sub
adc
mov
sub
lahf
xchg
clc
outs
xchg
lea
das
dec
out
jp
cmp
jae
(bad)
sbb
rol
cmp
jae
int
or
mov
xor
adc
xor
iret
loopne
shr
adc
jnp
shl
pop
adc
adc
mov
inc
push
scas
jecxz
rol
push
push
retf
jbe
push
mov
ret
push
arpl
ins
outs
mov
js
add
xlat
mov
sub
adc
aad
push
push
jbe
inc
imul
mov
add
outs
loop
test
sbb
sbb
add
por
aas
hlt
es
sub
jecxz
rol
pop
pop
in
sbb
push
icebp
les
movzx
movs
jmp
adc
pop
cmps
xchg
and
les
dec
xchg
cli
inc
mov
sub
or
or
cli
movs
sbb
add
or
fwait
sub
add
call
bound
cs
imul
(bad)
jae
popa
scas
pushf
or
je
push
dec
adc
dec
mov
push
(bad)
push
push
add
repz
es
movs
jmp
push
pop
inc
mov
dec
pop
or
push
sub
adc
bound
mov
pop
dec
push
ins
push
in
or
pop
stos
xchg
push
add
mov
cld
xchg
push
fild
cdq
gs
push
daa
jge
xchg
or
pusha
push
sbb
cmp
push
and
and
pop
push
jno
inc
sbb
fs
sub
ficom
ins
push
stos
add
movs
push
xor
enter
pushf
ret
fs
repz
jg
inc
test
adc
inc
ror
fld
push
or
jbe
inc
iret
gs
fstp
sbb
and
jb
mov
js
rcl
test
sar
dec
test
js
mov
movs
rol
pop
cmp
sbb
scas
adc
jnp
(bad)
in
ins
les
or
mov
mov
cmc
mov
test
inc
push
push
dec
push
push
test
mov
inc
mov
xchg
add
mov
addr16
jmp
in
in
enter
mov
push
pop
and
add
and
pusha
xchg
mov
nop
dec
pusha
sbb
or
xor
daa
and
mov
cmps
xor
mov
es
jg
mov
ds
inc
pop
mov
push
jo
jg
add
sbb
mov
out
mov
xlat
js
adc
retf
je
sbb
cwde
stc
pusha
rcr
cmp
or
xchg
add
inc
rcl
in
movs
mov
mov
rol
mov
inc
add
jmp
jns
and
adc
or
cwde
imul
add
gs
cdq
lds
jo
add
xchg
retf
add
add
daa
repz
jmp
push
xor
sub
and
fisttp
cmp
xchg
adc
jge
fsub
stos
sub
das
shr
dec
push
js
xor
mov
call
push
je
jmp
lods
fxch
cmps
fnstcw
push
lods
sbb
repz
ror
push
cmp
add
pop
(bad)
jl
mov
xchg
sbb
pop
ja
fdiv
mov
or
fcomp
jmp
movs
mov
jge
inc
cmp
push
inc
add
cmp
adc
pusha
movs
mov
cs
(bad)
test
lock
adc
xor
sbb
ja
jmp
fsub
mov
mov
int3
sbb
mov
sbb
push
imul
sub
push
add
out
ins
cmp
push
push
daa
pop
enter
adc
ds
mov
je
push
xchg
jmp
mov
pusha
and
xchg
shr
mov
mov
push
call
push
ror
jmp
sahf
fbld
aam
pop
add
(bad)
cmp
je
push
sub
pop
(bad)
iret
cdq
lahf
popa
mov
pop
cmp
and
pop
push
mov
and
xor
jmp
pop
in
sub
jbe
ins
xchg
comiss
xchg
mov
pop
add
fsubr
inc
call
add
adc
mov
xor
adc
pop
mov
lods
jb
xor
dec
(bad)
jo
lods
(bad)
inc
push
sbb
fsubp
jg
push
sbb
(bad)
pop
add
pop
and
ja
xor
jne
dec
push
jl
mov
and
ret
xchg
add
mov
cmp
sub
lock
jno
sbb
cmp
fistp
ret
push
sub
sub
sub
cmp
sub
and
dec
mov
sbb
std
aam
add
mov
sahf
inc
lods
imul
shr
push
xchg
push
addr16
test
leave
jg
enter
add
cmp
retf
ss
xchg
push
lods
sub
inc
popf
lds
scas
or
mov
jbe
(bad)
fmul
fwait
cmc
pop
sub
aas
imul
pop
mov
xor
aas
add
fiadd
fisubr
sbb
mov
jae
into
add
repz
sub
pushf
ficomp
lea
leave
sub
mov
push
stc
inc
cmp
dec
test
int3
add
nop
adc
(bad)
mov
mov
retf
mov
clc
sti
pop
or
sub
mov
(bad)
mov
add
inc
xchg
inc
retf
(bad)
jnp
stc
add
aaa
mov
cmp
mov
sbb
les
cmp
sbb
push
stos
sub
add
mov
pop
push
jo
jecxz
in
dec
mov
adc
pop
je
mov
cmp
xor
call
add
or
enter
test
into
sti
std
aas
movs
adc
cmp
inc
inc
add
test
push
test
jbe
jg
mov
leave
inc
clc
popf
(bad)
xchg
cmps
dec
and
fmul
xor
nop
jmp
(bad)
or
mov
mov
adc
scas
push
xchg
cmp
or
mov
mov
sbb
pusha
std
ins
and
test
sti
(bad)
sub
fisttp
ror
xor
jmp
push
aam
pop
pop
cmp
inc
shr
or
jmp
and
inc
das
out
jecxz
mov
inc
jmp
test
push
mov
xchg
and
inc
add
mov
inc
adc
jae
add
hlt
es
test
hlt
or
add
adc
mov
mov
mov
add
mov
inc
sbb
ret
dec
inc
lea
push
pop
mov
sub
dec
pshufw
pop
push
ret
and
ja
fild
xchg
add
push
je
ja
jo
xor
add
push
in
dec
pop
rcl
inc
enter
shl
mov
retf
scas
clc
pushf
dec
or
mov
sub
inc
adc
sbb
and
cmp
ret
add
push
sub
(bad)
cmp
leave
jno
nop
in
mov
mov
push
dec
out
push
pusha
xchg
scas
cmp
std
cmp
push
in
mov
cmp
movs
aaa
or
inc
or
test
ret
jne
and
retf
mov
push
inc
(bad)
cmps
ret
jl
mov
sub
bound
inc
add
mov
sub
test
mov
sbb
ret
jg
add
shl
sbb
cmp
pop
add
inc
movs
hlt
aas
cmc
lea
push
setl
jmp
retf
in
xchg
and
push
xor
sub
xchg
and
cmp
inc
js
sbb
dec
add
adc
add
jbe
xchg
sub
pop
inc
and
cli
or
add
xchg
add
fcomi
out
push
stc
shl
xchg
rol
push
push
aaa
pusha
inc
xor
xchg
dec
mov
nop
adc
mov
mov
mov
ins
loopne
arpl
inc
je
mov
mov
mov
or
add
imul
push
sbb
push
pop
jae
mov
or
dec
sub
enter
out
loope
cmp
pop
je
sbb
xlat
sub
or
xor
xchg
aam
mov
rol
push
fld
and
jns
add
inc
(bad)
daa
cs
adc
add
inc
rol
sbb
pushf
shl
sar
int3
rcl
mov
pop
js
inc
pop
lea
jp
push
mov
cmp
inc
lock
adc
mov
xor
scas
jmp
inc
and
adc
mov
adc
sbb
or
xor
fidiv
fisub
sub
clc
fnsave
sub
je
cmp
ret
mov
repz
jl
loop
(bad)
adc
sbb
cdq
or
nop
sub
adc
js
mov
inc
scas
lds
push
int3
jno
in
stc
cmp
je
push
aam
mov
cdq
add
imul
ds
xchg
fs
xor
lods
es
mov
(bad)
retf
into
dec
mov
mov
inc
cmp
dec
pop
xchg
lds
push
adc
into
rep
aas
aaa
hlt
dec
add
sub
mov
out
bound
out
les
dec
sub
sbb
lea
inc
xor
jbe
dec
(bad)
ret
pop
inc
cmps
sahf
mov
inc
jecxz
push
imul
or
mov
loop
mov
mov
xrelease
adc
mov
jmp
dec
xor
mov
cli
adc
ror
cmps
jb
jg
adc
sar
sbb
aas
pusha
fucomi
dec
(bad)
jle
mov
imul
or
in
ret
cli
and
retf
xchg
adc
dec
mov
mov
xor
rol
mov
mov
jge
push
in
mov
adc
sbb
jle
ss
cmp
js
mov
inc
push
hlt
fdiv
cmp
sbb
xor
pop
aaa
test
xor
adc
pop
add
pusha
popa
xor
mov
sub
sar
or
ins
sub
mov
ins
jmp
push
(bad)
(bad)
fst
xor
sbb
sub
push
scas
mov
mov
jns
pop
bound
and
cmp
xchg
jb
rcl
aaa
(bad)
xchg
xchg
cmp
jl
jg
cmp
jbe
ds
or
add
pop
cmp
and
sbb
pop
scas
xchg
mov
push
(bad)
push
cmps
dec
inc
xor
(bad)
daa
inc
outs
sub
jne
pushf
inc
loope
enter
push
push
inc
dec
mov
shl
inc
or
jb
pop
inc
dec
dec
dec
test
xchg
retf
sbb
mov
jns
dec
inc
out
mov
out
sahf
imul
xchg
push
inc
lds
add
add
dec
jmp
xor
aam
lahf
xor
mov
lea
stos
xchg
lea
inc
sbb
xchg
adc
(bad)
mov
fldenv
push
add
hlt
out
or
pop
rcr
push
xchg
fstp
jae
pop
pop
add
cmp
mov
mov
clc
ret
test
inc
jb
test
in
mov
call
adc
cld
jmp
xor
cmp
xor
mul
jle
jbe
xor
scas
pavgb
fld
push
adc
push
push
shl
and
push
xor
mov
test
pop
and
jl
inc
push
add
push
push
xchg
pop
and
mov
adc
add
mov
inc
jecxz
jl
xchg
in
mov
nop
gs
mov
loopne
push
lldt
cmp
add
sub
jle
bound
push
inc
push
rol
ror
cmp
inc
xor
mov
push
push
inc
sub
jne
xor
fprem
push
dec
jmp
adc
int
add
xchg
sar
nop
js
sub
and
push
xchg
clc
lock
arpl
outs
adc
mov
cld
mov
xor
mov
mov
das
mov
loopne
and
inc
sub
push
jmp
push
int3
push
pop
mov
adc
je
push
add
jle
mov
cmp
mov
cmp
test
icebp
inc
jl
add
cwde
scas
jl
jmp
fldcw
mov
sub
xor
retf
lea
mov
(bad)
pop
cmp
adc
mov
cmp
jnp
icebp
lock
xor
or
loope
xor
test
inc
sub
fcom
jl
and
ins
inc
jno
ror
inc
inc
(bad)
cmp
int3
push
retf
mov
mov
movs
jns
sub
test
jb
or
sub
xchg
scas
outs
push
imul
cmp
add
inc
daa
and
xor
in
adc
or
xchg
dec
push
shr
jnp
sub
mov
sub
movs
pusha
shl
add
(bad)
cwde
jo
cmp
and
mov
dec
xchg
sbb
cmp
fwait
mov
push
lahf
jo
mov
mov
sti
jne
(bad)
and
adc
adc
pop
sub
or
mov
xchg
jbe
push
push
aaa
xor
cs
or
pop
mov
cmp
xor
sbb
and
adc
rol
adc
cmp
dec
das
and
xlat
or
push
sbb
sub
nop
pushw
ficom
inc
mov
sub
jge
xchg
mov
rcl
sub
js
mov
jne
jnp
loopne
in
cmp
div
and
cmp
movs
std
pop
clc
add
jbe
inc
retf
cmp
pusha
add
add
pop
inc
push
inc
adc
pusha
outs
sub
or
test
aaa
push
shl
push
jmp
outs
cmp
lods
mov
cmp
jns
mov
dec
pop
adc
jl
adc
mov
out
pop
inc
add
adc
fdivr
jno
push
shl
add
call
pop
add
cmp
cs
pusha
test
xor
in
fcom
jnp
je
push
movs
push
lahf
or
adc
aam
pop
fstp
cmps
push
push
std
xchg
mov
jns
mov
push
jne
cmp
jo
push
jnp
mov
jmp
enter
sbb
lods
jmp
loopne
mov
jmp
test
add
rcl
mov
(bad)
jmp
or
(bad)
push
ins
movs
and
xchg
push
sub
iret
ror
push
pusha
je
outs
push
adc
xor
jmp
and
add
imul
push
bound
pusha
pusha
lock
mov
cmp
or
scas
xchg
fiadd
inc
(bad)
and
daa
fst
sbb
sbb
add
inc
stos
cmp
jb
mov
pop
pop
xor
mov
jle
mov
mov
mov
loopne
(bad)
retf
add
std
sbb
test
ds
adc
dec
or
jno
or
test
add
cwde
push
scas
es
test
daa
jne
pop
xchg
pop
pop
add
sar
aas
std
mov
adc
sub
mov
sub
pushf
cmp
les
imul
inc
mov
push
push
stos
scas
imul
mov
mov
jmp
mov
mov
repz
mov
test
pop
jno
outs
and
add
cmp
pop
xchg
or
in
sub
jge
xor
je
cmp
or
or
cmp
je
dec
aam
test
leave
fist
xchg
and
test
mov
std
inc
xchg
stos
pusha
sqrtps
push
aas
sbb
bound
dec
cmp
or
sub
push
push
mov
ror
jecxz
xor
xchg
add
scas
mov
jp
pop
aas
rol
mov
sbb
cmp
or
inc
movhps
inc
cmp
in
adc
sbb
clc
add
pop
xchg
mov
push
and
pop
ret
push
ss
cmp
push
push
sub
cwde
pushf
and
mov
adc
mov
inc
test
mov
add
popf
aam
xor
push
sub
or
cwde
add
xor
push
into
ror
add
and
add
int
dec
pop
dec
pop
add
xchg
sbb
sbb
call
movs
mov
inc
sub
scas
pop
adc
push
(bad)
cli
sbb
or
mov
xlat
js
(bad)
int3
mov
stos
adc
pusha
push
adc
push
mov
add
int3
retf
push
add
and
js
add
and
call
jne
sub
inc
add
fimul
or
sbb
xchg
pop
scas
icebp
mov
inc
gs
test
add
inc
ficomp
int3
pushf
add
mov
push
push
mov
in
stos
call
iret
mov
add
push
outs
into
es
imul
add
or
lds
or
dec
gs
push
jns
pop
push
push
sahf
mov
cmp
mov
pop
int3
aaa
push
push
and
(bad)
xor
loop
int3
mov
repnz
sbb
ret
leave
jg
xor
pcmpgtw
add
mov
or
jl
mov
js
pop
mov
xchg
gs
xchg
cmp
jg
fwait
out
or
xchg
ret
adc
pusha
sbb
jnp
fimul
shl
jl
pop
or
int3
mov
lds
or
sub
daa
push
lea
sub
jno
push
test
jb
sbb
sbb
jne
sbb
or
fnsave
neg
cmps
or
movs
xor
nop
call
dec
pop
pop
test
and
mov
jae
push
sub
in
push
addr16
aad
xor
inc
cdq
jle
and
out
mov
mov
int
call
loope
test
sbb
push
mov
test
push
ins
mov
js
mov
shr
add
jae
jecxz
pop
push
inc
outs
or
dec
or
mov
pop
or
inc
sub
xor
movs
loop
sbb
dec
mov
sbb
arpl
pusha
xchg
movs
mov
adc
retf
mov
movlps
or
das
lods
inc
jle
je
mov
cmp
xchg
and
sub
adc
in
add
dec
adc
jbe
cmp
and
ret
sar
cmp
cmp
add
adc
inc
lods
add
loopne
loope
cmp
mov
xchg
jge
cmp
adc
jne
jbe
inc
push
movs
adc
xor
or
std
rcr
popa
jbe
ret
or
pop
cmp
mov
cmp
cmp
xor
sbb
xor
jecxz
rol
imul
sbb
push
sbb
aas
icebp
rol
add
lods
sub
or
aas
dec
adc
sbb
mov
add
xor
or
sbb
xor
jb
and
and
je
pop
dec
movs
cmp
xor
inc
adc
pop
xor
ret
xor
sbb
out
loop
and
neg
cmp
sbb
pop
adc
(bad)
sbb
pushf
ins
pop
movs
and
and
add
test
push
cwde
xchg
ror
pop
es
xor
and
icebp
adc
fist
into
sbb
and
fmul
dec
xor
cs
mov
imul
mov
or
mov
add
cld
bound
xchg
mov
daa
or
or
sub
push
mov
imul
nop
(bad)
les
push
add
xor
xor
add
adc
pop
scas
adc
sbb
adc
jae
jge
xor
mov
and
bnd
data16
adc
adc
mov
adc
and
cs
and
dec
jb
jno
inc
ret
xchg
dec
jge
cmp
loop
test
test
(bad)
shr
inc
jno
ror
mov
outs
mov
outs
sub
mov
sbb
aas
add
imul
pop
adc
xor
inc
sbb
ins
push
mov
cmp
bound
pop
xor
aaa
pusha
xor
fistp
cmp
lea
in
push
push
xor
ffree
mov
mov
mov
push
lods
add
sub
jmp
outs
pavgb
sbb
mov
sbb
rcl
or
stos
ss
aas
cmp
and
or
dec
mov
add
push
repz
jo
retf
mov
movs
adc
pop
cmc
sbb
ret
or
push
sub
mov
stos
or
cdq
sub
pusha
dec
mov
adc
cmp
ret
add
or
dec
test
mov
jo
pop
mov
xor
fidivr
(bad)
inc
adc
mov
mov
sbb
sbb
dec
shl
mov
outs
sub
jmp
montmul
cmps
inc
dec
rol
das
movs
and
mov
mov
mov
push
add
xchg
cmp
xor
dec
mov
push
jecxz
(bad)
fimul
cdq
je
(bad)
movs
mov
add
cmp
inc
movs
(bad)
adc
fdivr
lods
or
xor
mov
push
repz
sub
pop
(bad)
pop
xchg
and
retf
imul
retf
fdiv
jg
mov
mov
push
es
xchg
mov
mov
stc
fwait
pop
xchg
mov
mov
pop
mov
adc
adc
lods
ror
jle
inc
int3
and
mov
xor
test
add
cdq
jno
push
movs
mov
adc
mov
cdq
js
sub
xchg
sub
imul
fld
fistp
shl
or
dec
cmp
jl
adc
push
dec
test
jp
movs
mov
in
ret
add
xor
mov
cmp
and
shr
jg
jmp
mov
push
inc
mov
cwde
xchg
mov
daa
jb
pop
xor
jb
adc
sbb
retf
rol
jne
push
(bad)
add
outs
movs
jmp
push
or
cmps
ret
xchg
or
push
cmp
ret
outs
inc
test
pop
add
mov
pop
ins
mov
scas
inc
pop
sub
rol
push
xchg
and
pop
(bad)
or
(bad)
fld
dec
add
mov
and
mov
mov
cmp
pop
rol
mov
mov
cmps
cmc
pop
and
mov
push
popa
push
ja
inc
fs
xor
add
daa
or
xchg
gs
dec
adc
xor
mov
in
add
dec
mov
rcl
sbb
ss
sub
sub
mov
add
ret
test
ret
test
and
inc
sub
in
cmp
rcl
cmp
mov
pop
sub
test
xor
pusha
mov
xor
jp
cmp
push
fs
xor
xor
push
lea
pop
mov
dec
push
mov
jno
clc
test
pushf
jb
inc
push
or
xchg
dec
pusha
(bad)
xchg
retf
pushf
or
sbb
dec
out
xchg
sub
ds
sbb
mov
fcomp
pusha
mov
int
and
inc
cmp
cmp
pop
inc
sbb
push
sub
outs
fwait
cmp
cmp
arpl
imul
jae
inc
and
cld
adc
lock
lods
sbb
shr
loopne
cmp
push
adc
cmp
mov
sub
sahf
xchg
jbe
or
out
add
je
test
je
bnd
shr
xor
mov
movs
loop
pop
fdivr
sar
clc
aaa
pop
adc
mov
add
inc
adc
push
or
or
(bad)
js
xchg
or
push
(bad)
pop
loop
dec
push
mov
lods
push
test
(bad)
push
inc
push
jo
mov
and
(bad)
shrd
cmp
and
pop
dec
pop
pop
add
in
jae
push
xor
pop
adc
jb
and
and
xchg
xchg
mov
ins
pushf
icebp
pop
sub
test
in
sub
inc
aam
or
xor
inc
push
in
std
adc
push
mov
or
inc
add
dec
sub
je
or
je
or
imul
test
aam
adc
lea
leave
push
push
sar
xchg
popa
inc
mov
xchg
sub
xchg
mov
xchg
jp
mov
in
les
scas
lds
sub
push
pop
adc
and
in
xchg
test
aad
mov
xor
add
shr
call
push
xor
mov
cmc
pop
dec
add
popa
sub
pop
in
jo
mov
fld
add
or
dec
fsubp
mov
sahf
jo
or
fiadd
daa
addr16
lock
jne
mov
out
mov
add
dec
push
sub
sbb
xor
cs
sahf
sub
(bad)
xchg
loope
dec
adc
push
xor
add
xlat
or
sub
dec
mov
push
pusha
mov
push
or
push
dec
sub
leave
fwait
sub
movlps
jmp
ret
inc
rol
mov
les
nop
add
inc
fiadd
cmp
repz
dec
push
pop
arpl
repz
jno
jg
push
in
add
push
daa
sbb
outs
retf
sbb
add
cmps
cmps
(bad)
push
loope
pop
ret
les
dec
add
(bad)
pop
dec
mov
dec
mov
(bad)
das
pop
or
shl
aad
cvtps2pi
push
pop
dec
sub
nop
adc
inc
int3
outs
dec
mov
arpl
sbb
(bad)
xchg
cdq
test
test
call
mov
movs
ficom
pop
aaa
add
aaa
mov
pusha
push
les
jecxz
dec
push
shr
and
(bad)
add
jns
adc
jmp
lods
push
les
sar
in
bound
les
push
sub
push
mov
ins
out
mov
ins
cmp
inc
add
cmp
push
sbb
push
mov
cmps
jne
fs
cmp
inc
movs
mov
mov
daa
push
fidiv
mov
or
xor
xor
fucomp
and
dec
inc
cmps
or
out
xchg
push
lods
cmp
ds
sbb
push
sar
mov
or
(bad)
repnz
or
push
retf
xchg
xor
sbb
push
cmp
mov
pop
jne
or
fs
leave
out
icebp
popf
and
sub
sbb
adc
jp
add
imul
mov
pop
outs
cmp
push
out
aaa
or
fdiv
lds
push
xor
xor
cmps
jb
or
mov
adc
sub
dec
xchg
mov
add
add
mov
push
jns
xor
ret
xor
mov
sub
(bad)
mov
adc
int
jno
add
sub
movs
add
push
enter
int
pop
adc
or
mov
inc
sbb
or
mov
mov
pop
xor
ds
cmp
adc
xchg
push
and
fisub
mov
mov
bswap
iret
push
fld
xchg
pop
adc
xchg
inc
pop
add
mov
pop
adc
rcl
retf
scas
xor
adc
adc
(bad)
pop
push
push
push
push
xor
ins
or
jmp
mov
xchg
xchg
sahf
jne
cmp
adc
test
imul
mov
xlat
push
or
add
mov
inc
push
cmp
add
cdq
aas
push
mov
cmp
pop
imul
jp
pusha
loopne
xchg
cmps
adc
xor
adc
sub
add
in
loop
jbe
mov
movs
inc
inc
mov
pusha
mov
and
push
push
fdiv
cli
or
adc
and
inc
lods
mov
adc
cmp
loopne
add
lea
(bad)
mov
pop
js
pop
rol
or
xchg
add
mov
idiv
mov
jge
sbb
inc
adc
sbb
mov
cmp
aam
mov
rcl
sbb
adc
xchg
mov
(bad)
mov
add
jo
or
cwde
mov
rol
les
mov
addr16
rcr
push
push
adc
push
mov
fcomp
push
aaa
mov
mov
push
inc
pusha
xor
lock
cld
jnp
sahf
pop
daa
push
xlat
fdiv
adc
or
test
sub
movups
and
xor
shl
push
lock
pushf
shl
pop
aaa
add
cmp
mov
pop
jb
jp
lahf
push
jns
lea
cmps
(bad)
dec
mov
ror
cmp
sub
jno
push
loop
xchg
push
out
jl
inc
jo
push
or
sub
xchg
loopne
shl
je
fdivr
ins
cmp
ficomp
add
or
scas
xchg
(bad)
lock
pushf
inc
je
dec
pop
sub
call
scas
mov
out
or
sbb
jmp
sbb
cld
inc
sbb
inc
push
jmp
sub
retf
movs
sbb
jno
sbb
xor
les
pmuludq
shl
and
fbld
xor
data16
out
loop
xor
in
jmp
in
sahf
cmps
stc
xor
pusha
out
ins
jp
adc
jns
mov
xchg
shr
cdq
mov
mov
add
sub
pop
adc
jp
adc
push
mov
push
push
bound
add
lock
cli
push
sbb
or
cdq
inc
sub
lahf
dec
cmps
jmp
cmp
add
mov
popf
sbb
aas
xchg
mov
mov
sub
into
cmp
jo
sbb
add
push
xchg
add
xchg
or
xchg
and
or
or
shl
ds
mov
scas
ror
add
or
xchg
cmp
or
imul
mov
cmp
push
dec
inc
mov
xor
repz
xchg
and
push
sti
dec
jne
mov
adc
pop
shr
pop
adc
push
bound
fisttp
inc
cld
in
cmp
mov
push
mov
inc
mov
test
mov
add
pop
mov
and
fst
es
mov
jne
ss
ins
int
and
add
icebp
mov
inc
rol
or
push
imul
pop
fptan
pop
or
adc
push
popa
gs
xchg
nop
dec
push
mov
xor
imul
push
icebp
pop
js
xchg
adc
mov
bound
xchg
mov
pushf
popf
rol
scas
push
cmp
fiadd
cmp
(bad)
and
jecxz
xchg
and
cmp
and
xor
pop
dec
shr
popa
stos
cs
xchg
or
sbb
das
pop
cwde
push
push
and
adc
xchg
ror
add
fdivr
or
dec
xlat
rcl
push
popa
xchg
icebp
or
das
in
adc
sub
sbb
mov
lock
and
jle
adc
sbb
or
and
psllq
int3
mov
cs
shr
jp
sbb
add
xchg
jb
arpl
les
push
pusha
mov
add
sbb
pop
adc
jp
add
pop
jg
mov
jl
sub
add
fisubr
test
and
xor
push
xchg
sbb
xor
call
push
mov
sbb
mov
inc
int3
(bad)
cmp
xor
xor
push
(bad)
mov
mov
add
or
cwde
aas
cdq
and
and
xor
hlt
cmps
fidiv
push
adc
xchg
push
aas
and
dec
jl
sbb
pushf
add
jmp
shl
icebp
push
xor
and
add
aas
addr16
adc
test
aas
mov
and
dec
push
push
and
daa
xor
and
ret
sbb
jnp
mov
jmp
add
adc
mov
mov
ret
dec
jb
sbb
inc
shl
xor
xor
pop
add
test
sbb
lds
pop
push
or
(bad)
in
imul
mov
inc
repnz
xor
xor
lods
shr
add
add
push
cmp
scas
rcr
xchg
xor
mov
lods
cld
push
test
fs
sub
push
cwde
push
xchg
xor
dec
adc
cmp
rcl
dec
inc
call
mul
mov
imul
adc
dec
test
or
sbb
cmp
addr16
mov
sbb
add
add
inc
pushf
leave
jle
(bad)
sbb
add
mov
ret
cmp
inc
repnz
cmp
pop
lea
mov
sub
push
loop
cmp
mov
ret
test
ror
pop
add
mov
jnp
and
sub
add
mov
and
adc
xchg
jae
xor
loopne
aas
adc
push
xor
pop
or
sbb
pusha
mov
mov
inc
imul
push
push
add
lea
jns
rcr
or
pop
pop
enter
or
or
pop
xor
add
cmp
xor
xor
sbb
xor
aas
fisttp
stos
ss
push
sbb
mov
mov
bound
mov
sbb
cmp
fild
es
inc
xchg
mov
fild
xor
adc
fwait
push
call
jne
sub
ret
sbb
mov
clc
push
rdpmc
lea
adc
jo
test
inc
sbb
xor
sbb
js
dec
xchg
jle
sahf
(bad)
jg
mov
or
pop
xor
add
adc
jb
dec
and
ins
inc
sub
sub
lahf
imul
and
or
daa
(bad)
pop
dec
das
push
push
push
jae
popa
out
pop
int3
add
movs
cmp
movs
mov
sbb
dec
cmp
test
loopne
inc
mov
mov
add
in
add
or
push
nop
dec
xor
xchg
gs
and
push
in
loop
sub
xor
cmp
aaa
push
js
sbb
ud0
add
mov
dec
pop
add
mov
sbb
pop
mov
or
xor
inc
jg
or
loope
mov
jg
mov
cmp
lahf
push
loopne
imul
cmp
je
lea
sub
inc
or
stos
add
test
es
lds
leave
add
push
push
add
push
imul
or
sbb
xor
sbb
cmp
jne
xchg
and
in
jbe
loope
add
in
movs
dec
and
add
cmp
clc
dec
test
push
cs
pop
js
dec
sbb
and
inc
mov
mov
fcomp
call
sbb
and
mov
inc
inc
mov
mov
(bad)
sub
sbb
rcr
cmp
push
ins
xor
add
adc
aam
push
and
sbb
dec
rol
xor
arpl
(bad)
or
adc
pop
pop
cmp
push
mov
dec
xor
test
lahf
and
inc
add
daa
or
dec
retf
mov
pop
sub
sub
adc
xor
xor
ret
jle
xor
mov
test
int
dec
push
push
and
cli
inc
inc
xor
sti
out
jecxz
fdiv
mov
add
push
adc
or
mov
dec
cmp
push
cmp
push
test
outs
or
mov
mov
xlat
inc
call
pop
mov
in
mov
mov
xchg
test
(bad)
jp
cmc
adc
cmp
add
pop
add
jbe
mov
adc
xor
je
cmp
jo
inc
loop
push
std
mov
mov
int
inc
cmp
rcl
xor
jp
cmp
mov
in
fld
cmp
mov
jae
nop
mov
inc
les
lock
mov
or
clc
mov
push
call
add
and
jns
pop
ds
xor
fbstp
dec
call
sbb
or
or
sub
adc
imul
or
add
and
cmp
mov
ins
dec
pusha
sbb
cmps
jnp
icebp
pop
iret
and
or
add
or
mov
mov
jg
sub
test
pusha
cmp
sub
adc
add
add
movs
and
nop
test
movs
movs
add
ds
cwde
add
push
adc
(bad)
cs
push
imul
mov
inc
bound
and
cmp
in
imul
xor
rcr
aas
xor
adc
mov
push
jp
repnz
loopne
adc
jle
out
fsubr
je
fstp
stos
test
or
inc
popa
or
jecxz
test
mov
inc
dec
and
cwde
test
add
push
xchg
and
dec
pop
dec
inc
add
inc
fdiv
or
push
adc
rol
jnp
ins
adc
add
mov
push
dec
add
test
sub
daa
jno
cmp
loope
test
lahf
jge
sbb
pop
or
jno
icebp
xor
sbb
adc
inc
mov
add
adc
adc
pop
ja
shl
cmc
jno
mov
push
ss
xor
in
and
cmp
and
inc
lods
sbb
into
data16
repnz
pop
push
sbb
push
mov
cmp
aaa
dec
cmp
mov
pop
xchg
mov
sub
xor
cmp
add
sbb
mov
and
hlt
and
mov
mov
xchg
cmp
push
adc
and
or
cmp
jmp
jge
adc
jecxz
push
or
and
int3
sub
shr
xchg
loopne
(bad)
loopne
mov
addr16
xor
ret
mov
(bad)
cmp
pop
push
add
int
add
test
add
les
cmp
or
or
adc
das
mov
push
data16
push
add
cld
inc
inc
xchg
jl
push
adc
js
xchg
dec
mov
sub
test
xchg
push
mov
add
mov
cmps
adc
dec
xchg
adc
xlat
mov
xchg
stc
popa
sub
cmp
add
push
lock
xor
outs
add
sar
or
aad
arpl
xor
and
pop
cwde
and
jns
or
shl
es
dec
xchg
adc
add
clc
dec
loope
adc
inc
imul
push
and
push
and
cmp
and
xlat
mov
push
sub
jne
in
push
cmp
adc
xor
xor
mov
sub
lods
mov
or
xor
int
inc
add
adc
inc
push
push
or
pusha
sub
xor
xor
mov
aas
jne
push
add
jb
push
jb
pop
bound
and
sahf
sub
jnp
shr
mov
imul
lahf
lea
cmp
inc
stos
gs
sub
add
or
aam
mov
(bad)
dec
daa
test
scas
ror
stos
(bad)
fiadd
in
adc
mov
fidivr
cmp
popw
in
mov
mov
push
mov
mov
jno
in
jmp
or
push
pop
add
sbb
mov
jo
push
mov
or
ds
mov
mov
inc
dec
cmps
jnp
add
mov
jecxz
or
dec
lods
mov
rol
xchg
or
hlt
xchg
cmp
dec
xchg
out
sti
adc
push
and
or
push
ret
or
mov
jge
dec
bound
test
jnp
or
push
rcr
push
pop
imul
ret
adc
add
mov
or
push
push
xchg
rol
mov
mov
pop
xchg
jl
sub
xchg
test
and
movs
pop
fwait
ret
push
cmp
cmp
sub
imul
xchg
les
adc
(bad)
cmp
inc
adc
call
(bad)
xor
sbb
jbe
push
push
or
xchg
mov
inc
add
cmp
jbe
ret
out
shr
mov
fiadd
inc
or
adc
nop
xor
fsubr
add
xor
mov
push
dec
in
rcr
or
push
mov
xor
push
dec
add
mov
(bad)
dec
fistp
dec
dec
inc
js
sahf
loop
dec
cmp
push
test
sbb
xor
mov
repz
adc
adc
dec
jae
and
imul
imul
inc
mov
cmp
in
add
add
sbb
ss
xor
jge
fisub
or
sbb
test
xor
dec
sub
and
mov
dec
test
outs
imul
sbb
or
mov
push
add
fisttp
(bad)
xor
xchg
sti
push
adc
leave
das
cmp
loopne
jb
jmp
pop
dec
mov
inc
push
inc
or
icebp
movs
sahf
and
xor
xor
inc
mov
fs
sbb
push
mov
aad
lds
aas
cdq
ret
sbb
test
je
jne
addr16
xor
jo
int
das
gs
cmp
jmp
fsub
popa
xchg
ja
inc
pop
and
push
xor
cmps
dec
popf
jnp
xor
call
mov
dec
adc
call
pop
jmp
push
loope
sub
sbb
jg
addr16
push
sbb
dec
add
or
sub
add
push
adc
push
mov
sub
mov
sbb
(bad)
je
xchg
and
paddq
lock
fiadd
jmp
scas
dec
jge
adc
inc
add
lock
inc
out
fld
fidiv
lea
jo
inc
stos
cmp
pop
push
cld
clc
seta
dec
jl
ror
mov
pop
pop
sub
add
lods
nop
fimul
or
add
fistp
inc
inc
xor
jl
pop
jmp
mov
push
add
retf
(bad)
jo
je
xchg
lods
or
adc
jmp
xor
mov
xor
outs
pop
adc
(bad)
or
sbb
sbb
mov
jecxz
adc
xchg
adc
scas
dec
in
stos
mov
lds
ret
or
retf
test
or
fmul
push
xchg
pcmpgtb
inc
test
adc
mov
and
or
xchg
xchg
out
xor
dec
push
or
nop
add
mov
sub
call
(bad)
push
mov
imul
pop
adc
popa
or
out
mov
push
js
jb
mov
ror
xchg
retf
in
addr16
jo
js
pop
jae
ja
jae
and
enter
adc
adc
xchg
fsub
test
mov
jne
dec
jle
inc
push
mov
push
cwde
or
or
pop
add
out
jmp
push
call
mov
pop
and
or
sbb
inc
jp
push
sysret
add
xchg
into
test
lahf
xchg
xchg
enter
adc
ror
jecxz
cmp
hlt
sbb
xchg
arpl
and
push
push
pop
cmp
ror
push
sub
xchg
xor
add
sub
or
pop
movs
mov
mov
mov
sub
dec
xchg
call
movs
dec
mov
cmp
xor
inc
sub
add
sbb
add
dec
and
inc
mov
push
test
int
pushf
jmp
cmp
inc
cwde
adc
sbb
stos
mov
sbb
jmp
dec
cmp
add
mov
retf
push
loop
push
push
push
jmp
repz
jne
mov
scas
loope
mov
sub
ja
and
inc
xor
les
xor
inc
cdq
push
loopne
es
movs
adc
mov
adc
adc
dec
push
mov
push
add
pushf
or
push
mov
stos
xchg
adc
mov
leave
aam
pop
or
sbb
and
add
xchg
pushf
mov
in
cmp
scas
xor
mov
mov
push
cmp
or
cld
mov
enter
sub
cmps
jge
rol
sbb
ror
cdq
mov
jno
pop
push
add
jno
cmc
sar
call
push
sub
push
push
inc
test
and
pop
sbb
stos
popf
xchg
and
sub
cmps
pop
(bad)
lock
loopne
inc
outs
shl
cmp
sub
push
pop
cwde
cmp
inc
cmp
call
loopne
adc
lods
pop
popf
pop
xor
rcl
rcl
pop
adc
inc
lods
xchg
and
and
sub
sbb
ret
or
jmp
add
iret
shl
or
push
add
xor
and
fs
jge
pop
jmp
sbb
shr
push
dec
sbb
test
adc
mov
outs
out
rol
pop
aas
push
xor
aam
imul
jg
and
mov
push
xchg
cmc
aam
push
arpl
xchg
cmps
mov
je
or
lds
xor
mov
shl
add
jne
or
xor
xor
or
sub
cdq
sub
sbb
jne
rcr
js
dec
pop
rcl
and
push
push
mov
sub
push
iret
ja
push
cmp
add
jp
ret
dec
or
add
js
dec
cmp
scas
xor
inc
pushf
xchg
add
ja
sub
icebp
adc
push
loope
adc
scas
pushf
test
adc
push
fldenv
jo
add
push
and
cmps
inc
jne
push
xchg
(bad)
mov
dec
dec
nop
outs
imul
xor
pop
mov
adc
pusha
pop
or
push
mov
mov
(bad)
push
push
mov
push
inc
xchg
jne
or
add
inc
pushf
add
fwait
repnz
test
pop
mov
jno
les
in
aaa
mov
ret
push
shl
movs
inc
leave
mov
dec
add
mov
push
test
cdq
push
ror
xchg
or
adc
ins
cmp
push
add
das
pop
push
and
inc
or
inc
movs
jo
lea
mov
inc
or
pop
mov
or
push
popf
test
xchg
or
push
or
inc
in
cmp
push
or
inc
dec
sbb
jmp
das
dec
fist
jno
dec
inc
mov
lods
sar
iret
jb
aam
(bad)
cmp
mov
ret
or
jbe
pop
pushf
jle
adc
inc
cmp
mov
jl
or
addr16
scas
jne
push
jge
hlt
outs
add
dec
ret
push
addr16
or
repz
inc
bound
sbb
inc
push
jnp
push
or
lds
ror
loope
loope
pop
adc
loope
leave
movs
cmps
outs
mov
xchg
mov
cmp
push
rcr
add
push
loopne
scas
jmp
and
jecxz
sub
sbb
inc
add
push
xlat
popa
es
rcl
mov
adc
jmp
lods
adc
addr16
bound
xor
xor
sbb
popa
sub
and
pop
loop
repnz
adc
aas
ffree
or
pop
pop
or
cmp
dec
jmp
cmc
jmp
inc
sbb
aas
enter
cmp
sbb
and
test
adc
push
pop
or
ret
pop
out
jmp
inc
(bad)
mov
sub
loopne
loopne
push
cmp
jmp
sub
daa
dec
mov
mov
addr16
xor
mov
or
inc
mov
mov
mov
sar
test
add
or
xchg
jl
out
inc
test
xor
call
pusha
push
push
jecxz
push
inc
xor
jmp
mov
xor
and
sbb
inc
mov
mov
xor
mov
or
lock
pop
cdq
add
inc
cmove
xchg
pop
pop
popa
mov
ret
mov
dec
rol
sub
int
and
inc
jg
rcl
and
int
lods
mov
adc
sbb
call
rep
adc
(bad)
int3
in
shl
aas
push
mov
pusha
popa
fcmove
adc
sbb
or
jb
in
inc
hlt
(bad)
push
ss
add
sbb
push
in
mov
cdq
std
or
pop
das
loope
mov
jg
repz
dec
popa
push
inc
(bad)
ja
(bad)
mov
add
jnp
add
stos
or
and
adc
rcl
add
add
cmp
out
mov
pop
add
test
sub
or
test
push
and
or
xchg
mov
or
fcom
sbb
dec
clc
push
dec
fist
cmp
inc
or
loop
mov
rol
jmp
jmp
inc
adc
sbb
mov
dec
sar
mov
or
add
adc
adc
xor
rcl
femms
or
dec
or
or
cmp
fadd
inc
in
sbb
ficom
or
add
stos
xchg
or
jg
loopne
sahf
ja
jbe
inc
add
push
dec
mov
adc
ret
test
outs
idiv
pop
xchg
lea
cdq
lahf
mov
movs
pop
outs
or
and
sub
push
lahf
sub
mov
lock
ins
mov
xchg
sahf
lea
fmul
(bad)
mov
jnp
adc
je
xor
dec
stc
adc
mov
sub
cmp
or
or
adc
mov
in
mov
loope
jnp
and
or
mov
mov
aam
jl
cmp
adc
inc
rcl
lock
dec
push
pop
adc
(bad)
std
adc
mov
xor
sub
adc
cmp
dec
das
fcom
dec
leave
push
jo
jecxz
loop
push
xchg
inc
and
push
or
push
and
and
xchg
inc
pop
hlt
dec
add
jle
mov
and
and
inc
cmp
add
in
add
adc
fidiv
add
and
fsub
loopne
or
ins
mov
int
inc
add
xchg
cs
and
dec
retf
adc
pop
inc
push
(bad)
sahf
imul
push
pop
test
iret
sub
add
(bad)
sbb
clc
ror
pop
je
add
ret
mov
lea
loopne
adc
mov
jns
mov
mov
sbb
lea
mov
dec
pusha
add
sbb
sub
nop
loopne
xor
les
shr
ins
ret
sbb
sar
jnp
les
test
inc
(bad)
imul
in
jmp
rol
mov
add
adc
sbb
pop
imul
xor
inc
pop
mov
mov
push
sar
sbb
sti
xchg
mov
push
mov
scas
jnp
leave
(bad)
popf
jg
push
out
or
imul
jnp
sub
cmps
pop
inc
sbb
mov
sahf
add
dec
out
mov
jae
lods
jae
pusha
sub
shr
sbb
sbb
movs
add
push
xchg
pop
xor
mov
lods
sub
stos
bound
sbb
out
ficom
and
push
out
push
frstor
and
sar
ret
push
ds
pusha
sbb
jp
sahf
or
dec
mov
and
adc
cmps
hlt
fbld
test
test
out
std
adc
dec
add
ja
(bad)
imul
adc
sbb
ins
push
sbb
popa
add
or
jne
dec
mov
cld
adc
mov
and
adc
int3
adc
ins
ins
inc
inc
or
sbb
les
movs
add
lods
or
shl
je
test
sbb
xchg
jmp
add
push
push
push
add
adc
sar
add
adc
popa
adc
das
imul
(bad)
xlat
leave
xor
xlat
daa
xor
and
ins
adc
xor
add
inc
fdiv
cmp
inc
movs
sbb
test
stos
mov
and
jbe
pop
push
(bad)
aad
and
lods
sub
test
inc
cmps
ret
adc
nop
ret
sbb
(bad)
into
add
test
inc
pop
lahf
daa
add
xor
sub
adc
loope
xor
add
adc
and
cwde
mov
xchg
sahf
add
cwde
xor
xchg
test
cmp
jne
jg
dec
adc
cmp
add
(bad)
mov
mov
int
enter
add
push
imul
mov
sbb
icebp
inc
inc
sub
hlt
mov
pop
(bad)
xor
je
les
retf
and
mov
hlt
mov
jno
inc
pop
push
jle
add
jmp
xor
dec
add
xor
cs
idiv
fs
sub
call
ds
adc
fcom
adc
mov
xchg
test
dec
inc
and
or
adc
push
nop
imul
cwde
add
sub
or
shl
inc
cmp
ins
or
or
push
les
ror
push
daa
inc
adc
sub
ins
jmp
repz
aam
cs
push
adc
push
push
ds
inc
sbb
push
imul
or
push
(bad)
push
sub
xchg
pop
sbb
add
iret
inc
add
jmp
sub
push
sub
jecxz
sub
and
ins
(bad)
in
fdivr
xchg
aas
push
mov
push
add
add
out
or
sub
lahf
movs
jae
adc
(bad)
mov
out
jl
jle
xchg
jne
cmp
or
(bad)
jo
inc
outs
or
cmp
jae
dec
dec
and
sbb
cmp
sub
pop
fcmovne
xor
ins
ret
imul
jo
jmp
ret
cmps
jmp
jnp
inc
dec
jmp
sub
mov
pop
aaa
cmps
push
jmp
adc
test
and
jnp
dec
nop
psrlq
jp
cmp
gs
jmp
lea
aas
add
xor
push
enter
fmul
push
jg
lods
out
(bad)
(bad)
jmp
and
mov
fcom
inc
add
inc
push
pop
test
je
movs
mov
xchg
xchg
sbb
fdiv
ins
jns
mov
jmp
mov
sub
sbb
inc
je
add
ss
jbe
sub
(bad)
nop
cmp
push
jmp
sbb
daa
push
cdq
mov
mov
test
shl
sbb
xor
movs
and
es
int3
mov
dec
imul
dec
push
cmp
je
fild
ret
aaa
arpl
add
lods
mov
inc
inc
test
mov
enter
call
xor
mov
in
or
xchg
not
jne
mov
push
mov
adc
mov
sub
in
and
mov
pop
push
push
and
or
out
sti
test
cld
pop
fnsave
pop
pop
inc
adc
sar
lock
adc
mov
add
xchg
leave
adc
nop
or
jo
movs
mov
out
ins
mov
leave
add
arpl
aam
jle
jne
push
popa
adc
dec
mov
ss
repnz
mov
pop
add
inc
add
push
fstp
jmp
retf
mov
dec
add
push
test
add
shl
je
sbb
clc
dec
jo
imul
inc
scas
sti
test
lods
out
shr
xor
xor
or
dec
ficom
push
sahf
data16
cs
pop
daa
imul
icebp
or
mov
call
and
push
pusha
add
pop
xor
push
adc
sub
dec
fadd
sar
fsubr
inc
repz
jmp
add
sti
adc
lea
outs
sbb
add
mov
xor
and
pop
sub
add
lods
dec
pusha
cmp
adc
jo
add
add
outs
mov
aad
mov
test
daa
push
movs
add
xchg
retf
mov
call
popa
enter
add
push
inc
cmp
xor
(bad)
or
scas
arpl
gs
mov
mov
jne
cmp
popa
add
and
pushf
loopne
ds
adc
ret
cmp
dec
imul
add
pop
lea
xchg
je
push
sbb
pushf
xor
xor
imul
and
mov
xchg
sar
outs
(bad)
xchg
mov
jnp
adc
fcom
xchg
outs
mov
les
inc
dec
test
push
dec
pop
and
mov
pop
or
mov
leave
inc
mov
push
xchg
lods
adc
or
add
rcl
add
xchg
pusha
xor
adc
or
and
arpl
dec
cdq
icebp
fs
mov
fwait
(bad)
(bad)
daa
mov
outs
and
imul
sahf
ret
jo
sub
mov
test
and
xchg
lock
pusha
xor
sbb
imul
and
mov
mov
std
adc
pop
and
in
ffree
sub
ins
test
es
cmc
or
addr16
rcl
call
dec
test
cmp
call
or
shl
inc
or
cmp
jb
mov
sbb
movs
fisttp
sub
je
mov
adc
push
xor
hlt
test
xor
neg
fidivr
inc
add
lods
adc
jle
and
push
sbb
out
rcr
xor
and
ins
sbb
lds
push
fcom
xor
dec
ds
ret
out
mov
xor
xchg
jmp
pop
aam
sub
mov
fisttp
dec
xor
std
ins
push
jmp
out
xor
inc
sbb
xor
xor
in
js
leave
inc
mov
or
dec
stc
(bad)
bound
test
aas
sti
gs
aaa
adc
jle
rcr
and
inc
jno
pop
jb
add
jns
mov
lds
sbb
inc
jno
push
xchg
add
sbb
lods
ins
and
dec
jae
mov
mov
xchg
lods
cmp
test
out
or
ja
adc
or
ficom
mov
and
adc
aad
add
fdivr
jb
pop
call
cs
sbb
repnz
inc
inc
xchg
nop
sub
sub
repnz
mov
xchg
sub
(bad)
cmp
cwde
cwde
imul
and
or
sub
push
add
cld
stos
dec
pop
leave
or
lods
enter
push
ins
sbb
jnp
cdq
xchg
pop
xor
int3
mov
sub
xchg
pop
add
int3
ins
sbb
dec
mov
xchg
retf
loope
imul
inc
inc
jb
out
stc
sub
cmc
call
pop
aaa
add
(bad)
sub
sub
rcr
dec
sub
bound
pop
popf
pop
pop
add
popf
daa
push
pushf
jb
popf
fs
fwait
push
repnz
push
test
push
pop
pusha
dec
add
ficom
ss
sub
or
test
lahf
xor
fdivr
shr
loop
inc
shl
ror
cmp
sbb
and
push
ja
inc
push
cmp
inc
add
and
and
das
inc
lahf
les
xor
inc
jl
iret
dec
add
dec
add
cmp
add
lods
or
push
adc
icebp
mov
dec
add
mov
mov
sub
jmp
(bad)
xor
pop
(bad)
bound
jb
mov
iret
repz
scas
ret
xor
out
inc
push
push
inc
or
add
push
or
push
pop
jns
idiv
nop
neg
ss
dec
js
jns
out
cmps
test
pop
jae
mov
mov
push
cmp
cmp
shr
cmp
(bad)
cmp
cmp
(bad)
cmp
push
fdivr
jge
cmps
stc
adc
and
dec
cmp
adc
(bad)
lahf
push
adc
add
cmp
subps
adc
add
or
inc
mov
shr
cwde
ja
dec
push
dec
push
adc
xchg
pop
mov
jo
or
xchg
mov
mov
mov
pop
shr
mov
jmp
mov
mov
cmp
mov
nop
icebp
sub
fsubr
mov
repnz
cmp
pop
xchg
ss
pop
push
repz
mov
sbb
dec
add
cmp
ja
xor
nop
les
pop
adc
div
add
jmp
mov
outs
lds
retf
ins
cdq
fild
sbb
and
dec
dec
dec
push
cmp
pop
bound
xchg
xor
push
adc
lea
lock
xchg
into
adc
test
or
fld
pusha
jo
xchg
nop
js
push
sbb
popa
rol
les
cld
cli
sbb
repz
push
xor
fisubr
movups
pop
sbb
xor
out
dec
jo
ins
pop
out
push
adc
pop
push
cmp
pusha
dec
mov
cmps
cmp
push
retf
popa
mov
and
add
lea
jns
push
xor
int
pop
mov
dec
pusha
aaa
jnp
(bad)
jp
or
mov
loopne
cmp
out
sbb
rcl
jbe
cmp
ror
adc
cmp
nop
(bad)
fcom
push
ret
dec
mov
pop
call
jae
inc
aad
and
js
mov
dec
stc
sbb
jge
addr16
fstp
lds
aaa
sbb
fs
add
sub
xchg
add
xor
sbb
test
cmp
call
and
popf
lods
xchg
jo
sbb
inc
or
or
out
les
push
sbb
xor
iret
sub
or
sbb
sbb
pop
push
push
and
mov
mov
add
mov
mov
inc
in
push
jp
sti
cs
loopne
xor
inc
out
jae
mov
rcl
cli
cmp
rol
jmp
mov
pusha
jne
and
push
pop
cmp
icebp
(bad)
loopne
cmp
jmp
mov
mov
push
aam
outs
test
rcl
push
sub
test
inc
or
or
sub
cmp
push
cmp
mov
ret
cmp
cmp
jae
push
push
mov
ret
add
lods
js
mul
or
loopne
jmp
inc
push
mov
lahf
add
daa
daa
aas
jl
inc
sub
jo
sar
or
mov
jmp
pop
outs
and
push
(bad)
push
push
loope
nop
adc
or
xchg
add
pusha
sbb
mov
repnz
stc
jl
push
pop
mov
lock
leave
cmp
neg
sbb
not
or
setge
or
push
ds
push
sub
sbb
jo
sub
inc
jno
pop
or
loopne
dec
mov
or
pop
or
inc
xor
setle
sahf
out
dec
add
nop
add
(bad)
and
mov
xlat
movs
mov
inc
jb
push
out
and
and
pop
add
arpl
arpl
nop
pop
int
sub
inc
jno
ret
cld
dec
push
xor
and
pusha
adc
fdiv
arpl
test
jne
out
inc
push
mov
out
(bad)
mov
push
es
xor
aas
or
ret
add
jmp
pusha
jo
inc
push
pop
loope
mov
pop
loope
mov
aad
ret
les
fist
es
push
loopne
and
mov
or
mov
ds
add
sub
add
fsub
jb
mov
push
adc
cmps
jge
rol
sbb
call
push
push
dec
je
xchg
and
dec
inc
cmp
dec
jae
and
jg
cmp
and
bound
aas
jbe
sub
xchg
jbe
inc
ja
ja
push
ficom
push
dec
mov
cmp
inc
and
xchg
aam
fwait
test
adc
push
or
xor
inc
ds
sub
imul
push
add
ret
ss
dec
or
mov
or
loope
mov
add
dec
fist
sub
fild
popa
(bad)
push
pop
lock
imul
sbb
es
mov
and
xor
jnp
mov
cs
mov
aas
icebp
sbb
(bad)
repnz
adc
rcr
movs
xchg
cmp
dec
push
hlt
sbb
xor
(bad)
adc
(bad)
mov
add
cmp
jns
xchg
cmps
mov
lea
icebp
cmp
(bad)
movs
cmps
shr
pop
ret
es
push
jnp
dec
pop
mov
mov
das
jno
or
jno
or
mov
adc
or
test
sub
jbe
loopne
fnstsw
lea
push
mov
dec
js
cli
pop
mov
push
mov
dec
xor
adc
add
push
cwde
cmp
fwait
stos
adc
adc
dec
ret
and
loope
out
not
push
add
scas
pop
adc
ins
xor
push
mov
int
fwait
push
mov
pop
xor
add
(bad)
in
jo
pop
push
push
repnz
ret
outs
sub
sub
mov
and
repnz
add
sub
cmp
adc
cmp
rol
jo
add
push
sub
sub
cmp
sbb
outs
mov
dec
push
movs
outs
sub
pop
xchg
and
ja
mov
rcr
sbb
mov
out
xchg
xchg
mov
xor
xor
sahf
xchg
and
loope
sbb
clc
pop
add
add
shr
ja
and
inc
jne
or
sahf
xchg
or
clc
cli
mov
or
add
jne
xchg
pop
push
mov
mov
sub
out
mov
cmps
stos
jne
retf
mov
mov
jb
cmp
addr16
nop
xor
add
adc
sahf
sub
mov
mov
clc
or
add
lahf
(bad)
loop
fdiv
push
push
adc
add
sbb
lock
rcl
cmp
jb
adc
and
sub
test
test
fwait
push
inc
ins
(bad)
lods
or
je
sub
sub
inc
cmp
xor
adc
leave
pop
fisub
add
scas
xchg
dec
mov
mov
pop
jecxz
sbb
dec
mov
imul
cmps
and
xchg
cmp
jmp
push
xor
jo
imul
test
mov
scas
push
imul
sub
das
cmp
punpcklwd
je
cld
ror
or
mov
test
add
pusha
sub
inc
cmp
or
cs
cmp
cmc
jp
jo
mov
mov
adc
cmps
xor
inc
xchg
push
mov
mov
hlt
jns
iret
xlat
adc
dec
dec
sti
mov
dec
push
xchg
mov
iret
in
dec
push
dec
cwde
and
pusha
(bad)
jg
cmp
xchg
js
adc
push
inc
mul
or
std
movzx
enter
or
xchg
dec
fsubr
gs
cmp
cmp
inc
dec
test
call
add
sub
das
ins
cmp
jge
add
mov
call
adc
pop
cs
mov
add
xlat
sub
mov
js
mov
loopne
sbb
sub
mov
in
mov
adc
cmp
mov
adc
cld
mov
add
sti
cmp
cmp
cdq
pop
mov
ret
add
inc
or
rcr
call
and
or
test
js
lea
int
iret
enter
sub
dec
jecxz
in
cmp
or
pop
mov
es
call
rcr
xchg
jmp
sub
xchg
jp
and
or
inc
es
cmp
daa
pop
xchg
ja
test
jne
das
mov
cli
xor
shr
ins
adc
lea
cli
out
leave
outs
add
clc
adc
cmc
push
inc
adc
push
add
popf
sbb
jmp
push
jl
push
add
mov
push
and
nop
mov
xor
(bad)
jb
xchg
push
sbb
mov
sbb
(bad)
jno
cmp
cmp
mov
sub
aas
test
push
sbb
or
addr16
xchg
lea
jb
out
aam
xchg
mov
add
pop
in
pcmpeqb
mov
(bad)
iret
ret
ins
sub
cmp
movs
xchg
adc
cmps
ret
rol
or
push
jne
jmp
in
movs
dec
(bad)
sbb
lahf
sti
sub
lea
mov
jo
ja
cmp
or
inc
jns
or
add
pop
and
test
sar
adc
fdivr
add
ror
dec
fbld
sub
daa
mov
dec
jp
jae
mov
lock
sbb
in
or
or
inc
adc
cmp
xchg
mov
jb
cmp
ror
add
mov
jg
loope
or
ja
fnstcw
and
dec
pop
add
and
xor
sub
test
add
xor
int
pop
cli
sbb
pop
inc
cmp
and
je
xor
sub
jecxz
inc
xchg
add
adc
add
add
mov
or
cdq
mov
lea
lock
pop
fnsave
inc
push
rol
cwde
push
xor
pop
sub
sbb
push
inc
ror
dec
mov
or
sar
mov
aas
push
inc
mov
xchg
mov
xchg
adc
mul
call
inc
sub
add
and
les
shr
ret
and
lea
jp
add
mov
inc
adc
mov
outs
mov
jb
sbb
adc
and
dec
and
xor
pop
cmp
clc
sub
pop
cs
sub
sub
inc
xchg
adc
cli
or
mov
iret
leave
dec
hlt
push
daa
sahf
outs
ret
push
movs
cmp
push
nop
and
and
and
sub
jo
cdq
fsub
push
mov
pusha
les
pop
mov
out
out
mov
dec
sbb
add
outs
loope
pop
jle
nop
inc
cmp
jne
scas
pop
out
add
adc
add
dec
mov
push
sbb
loopne
xchg
xor
xor
out
xchg
inc
sbb
fisttp
sub
fild
cmp
jl
jnp
inc
movs
into
arpl
jle
push
test
std
sar
ja
sub
push
xchg
or
clc
push
push
test
add
fbld
les
xor
inc
mov
lock
mov
loope
cli
sub
adc
or
mov
push
inc
(bad)
shr
std
gs
push
jno
loope
pop
sbb
mov
loop
in
mov
lock
inc
add
push
pop
inc
test
mov
xchg
inc
inc
clc
leave
mov
and
mov
sbb
inc
aaa
adc
stc
add
pop
pop
dec
sbb
cmp
adc
mov
push
stc
mov
lahf
push
jbe
or
push
jg
sub
icebp
pop
cmovl
ret
and
mov
aas
loop
in
ins
call
mov
or
loop
ds
adc
jg
ficom
cmps
sub
sbb
(bad)
push
je
mov
and
in
dec
sbb
sub
aaa
dec
aad
push
pushf
add
add
sub
sub
sub
mov
sub
fcom
inc
lock
ret
xor
inc
aad
adc
add
push
jo
sahf
data16
or
mov
inc
adc
(bad)
mov
outs
es
xor
push
push
and
xor
(bad)
sub
jnp
xor
push
in
jnp
pop
movs
ds
push
and
nop
xor
cmp
jns
ins
sub
or
sti
movs
es
and
ins
nop
push
sbb
mov
leave
fist
and
mov
inc
inc
inc
and
icebp
cmovns
push
mov
dec
adc
and
adc
mov
mov
adc
jo
ja
push
adc
pop
adc
xchg
mov
outs
push
lds
pusha
add
pop
sub
add
arpl
dec
mov
int
inc
or
in
mov
shr
es
and
pop
pop
mov
and
jne
icebp
add
ficom
mov
ret
cs
jne
cmp
mov
movs
dec
inc
pop
adc
aaa
(bad)
xlat
stos
mov
xchg
push
cs
dec
test
mov
adc
fdivr
push
or
inc
mov
cwde
call
(bad)
and
mov
mov
dec
adc
cmps
retf
stos
add
xor
lahf
cwde
into
mov
je
or
je
scas
cmp
je
pop
mov
(bad)
arpl
ja
cmp
lea
push
test
rol
push
push
inc
xlat
inc
or
cmps
dec
sbb
mov
inc
dec
cli
inc
add
push
dec
cmp
popf
cmp
xor
cld
mov
push
cmp
rcr
mov
test
ja
xchg
stos
test
ror
mov
xor
lds
cmp
adc
sbb
xchg
test
add
sbb
(bad)
push
call
jno
inc
lea
mov
ja
or
test
inc
jns
popa
mov
and
adc
push
add
mov
push
and
fadd
retf
shl
cld
dec
sub
mov
dec
adc
add
ret
ins
inc
and
mov
xor
movs
or
pop
test
mov
or
xchg
mov
jle
(bad)
xor
rol
(bad)
mov
movs
sar
adc
loopne
addr16
cmp
cwde
(bad)
je
jne
ja
sub
cs
add
and
dec
adc
inc
or
push
push
push
xchg
ret
idiv
dec
push
jb
pop
and
dec
jb
mov
push
pop
adc
mov
and
inc
pusha
mov
arpl
mov
cmp
loop
add
adc
jnp
cdq
ret
push
mov
pop
je
xchg
scas
push
rcl
add
cmp
jmp
ds
and
je
mov
sahf
out
sar
pop
and
cmp
in
pop
jae
and
out
jg
in
push
push
cmp
mov
(bad)
das
mov
pop
lahf
inc
xor
pop
adc
je
pop
push
int3
test
sub
pop
jle
nop
or
or
add
lods
jge
inc
nop
dec
cmp
imul
add
dec
pop
cmps
mov
je
add
sbb
adc
push
rcl
aaa
add
mov
scas
fild
loopne
test
or
push
lods
jl
ins
popf
pop
push
ret
or
jg
xchg
pop
jne
inc
lea
shl
or
jle
cmp
aas
pop
add
jp
inc
push
sar
pop
add
(bad)
shl
or
pushw
push
push
adc
inc
push
push
push
and
fcomp
jecxz
shl
js
popf
jg
pop
adc
push
mov
mov
push
dec
sahf
push
or
dec
mov
inc
mov
add
dec
pop
jecxz
mov
mov
cmp
pop
dec
add
xor
test
and
adc
js
mov
or
jns
mov
and
mov
mov
fimul
adc
lods
int3
inc
mov
cld
mov
inc
imul
adc
cmp
jbe
xchg
shr
push
cmp
inc
push
ret
dec
pop
mov
xchg
fdivr
int3
mov
push
adc
xchg
data16
ror
add
mov
je
xchg
xor
add
mov
mov
mov
or
aam
mov
(bad)
adc
test
je
add
cmc
or
jns
inc
or
les
mov
or
cmp
test
cmps
mov
push
pop
mov
mov
or
fs
and
add
mov
fstp
leave
dec
scas
add
push
push
jb
mov
xchg
test
add
movs
pop
movs
mov
add
sbb
sbb
xor
nop
add
sub
ins
fild
xor
mov
mov
je
xor
out
js
je
sbb
sbb
rol
(bad)
adc
and
dec
add
mov
add
inc
jbe
mov
push
fcomp
addr16
xchg
adc
inc
push
pop
xchg
add
mov
add
xchg
push
push
sbb
pushaw
test
lea
add
pop
jmp
aaa
call
add
mov
es
sub
xor
fmul
mov
mul
xchg
mov
xor
inc
inc
loopne
cmps
mov
jne
and
pushf
adc
cmp
inc
js
into
cmp
mov
test
es
push
out
rol
mov
cs
mov
pop
push
or
mul
mov
ds
inc
push
cmp
or
enter
dec
mov
clc
xchg
dec
dec
mov
loop
jne
outs
adc
inc
dec
pop
cmp
jb
lea
and
cmps
and
add
sbb
call
lahf
cmp
dec
outs
(bad)
fadd
jae
inc
pop
pop
pushf
push
enter
push
shl
xor
pop
sub
dec
jne
ud1
and
ss
push
shl
fwait
push
jne
inc
aas
scas
add
orps
mov
add
cmc
fsub
popa
pusha
or
dec
stos
ss
xchg
push
pushf
daa
fs
push
gs
jo
lock
enter
cmp
mov
jmp
dec
neg
mov
and
mov
in
or
inc
and
out
loopne
ja
inc
inc
xchg
add
and
sbb
cmps
dec
cmc
adc
mov
dec
(bad)
ret
push
push
sbb
add
or
rcl
mov
cmp
in
ror
pop
push
pushf
mov
xchg
mov
fcomp
js
popa
and
pusha
inc
shl
mov
(bad)
xchg
ficomp
adc
aas
or
idiv
(bad)
popf
bound
cmp
inc
jno
into
(bad)
cmp
sbb
mov
fucom
daa
aaa
sub
push
js
xor
ins
mov
mov
mov
js
stos
pushf
push
je
push
jle
jge
add
or
test
adc
pop
outs
dec
dec
mov
sub
adc
test
adc
mov
push
jo
mov
push
jns
dec
or
mov
inc
jmp
stos
daa
dec
xor
fnstenv
pop
ror
xlat
cld
movzx
loope
inc
lods
test
cmp
sub
dec
in
and
sbb
sahf
retf
add
pop
mov
sbb
ins
movlhps
shl
inc
dec
and
lods
push
cmps
lea
push
hlt
adc
imul
jmp
xchg
movs
lea
sbb
es
inc
jbe
inc
adc
jo
fldcw
test
dec
data16
mov
dec
add
add
jge
sar
mov
je
test
fcmove
push
out
je
mov
add
add
add
cwde
pop
test
sti
inc
sbb
mov
pop
repnz
sbb
ss
add
movs
sti
ror
or
cwde
pop
push
js
out
aad
sbb
and
mov
cs
add
push
dec
dec
push
stc
loope
jae
sti
imul
in
jbe
fcomp
mov
or
xchg
xchg
xor
loopne
jg
and
and
and
fwait
cmps
stos
ins
jl
add
mov
jo
je
pop
xor
mov
inc
(bad)
stc
mov
cs
pop
pop
lock
call
push
mov
ja
in
mov
mov
add
fyl2xp1
pop
enter
add
cmp
jge
sbb
rcl
fs
ficom
or
pusha
stc
test
cmp
add
push
loop
aaa
mov
stc
ror
xlat
adc
loopne
and
sbb
test
push
pusha
aas
test
pusha
push
push
cmp
sbb
xlat
push
(bad)
pop
mov
ret
les
ss
pushf
cmps
pop
mov
les
jo
mov
or
cwde
adc
outs
push
test
nop
outs
mov
sub
pushf
cmp
not
mov
or
lahf
jne
ins
jnp
ins
clc
xor
iret
jno
xchg
push
pop
and
add
xlat
test
stc
loop
test
aas
daa
popf
repnz
push
lds
jmp
push
dec
cmp
or
outs
jbe
cmp
mov
dec
and
clc
outs
pop
or
sub
adc
sbb
adc
in
cmp
dec
xchg
push
fs
push
pop
gs
data16
repz
imul
xchg
imul
jns
div
jmp
loop
mov
jnp
out
(bad)
shl
add
add
add
pop
add
daa
xchg
mov
and
pop
nop
jl
out
pop
out
jg
mov
cmc
and
sahf
cmps
fnstenv
ins
push
jg
lds
int
sti
daa
ins
jp
xchg
xor
xor
or
push
popa
fist
add
add
mov
or
mov
fstp
push
mov
mov
mov
aaa
shl
pcmpgtb
mov
mov
sub
shl
ja
sub
sub
das
xor
js
enter
jl
repz
add
es
nop
add
pop
and
out
sub
mov
dec
push
or
push
nop
xchg
or
add
add
or
adc
xchg
out
test
or
ret
imul
repz
hlt
or
mov
add
xchg
popf
lea
adc
pop
ret
rcl
cli
cmp
sub
sbb
sub
and
dec
shr
sub
mov
xor
mov
mov
ret
dec
aas
or
call
add
inc
std
xchg
inc
retf
das
movs
dec
jmp
fs
cmps
xchg
cmp
push
pushf
ss
sub
ins
sbb
adc
or
loopne
add
inc
mov
push
add
add
rcl
xor
sbb
arpl
adc
es
push
adc
mov
cdq
or
call
movs
lahf
or
cmps
fimul
jae
repnz
adc
dec
dec
xchg
cmp
cmps
loope
xchg
jns
pushf
mov
mov
jg
std
push
xchg
jbe
push
xor
mov
dec
mov
add
retf
inc
es
pop
aaa
repz
jg
jbe
xchg
shl
push
or
inc
les
mov
daa
xor
cld
mov
sbb
dec
add
clc
imul
xchg
sbb
inc
xchg
xor
push
aaa
push
in
popa
adc
xor
xor
adc
ret
dec
adc
push
imul
dec
jecxz
es
xlat
gs
sbb
jno
and
mov
adc
and
mov
push
xlat
test
and
bound
mov
ja
or
or
adc
sbb
aas
push
out
mov
pop
popf
sbb
and
bswap
cdq
fisttp
add
inc
ins
int3
fs
sub
sub
dec
loopne
pushf
cdq
stc
push
push
sbb
das
in
sbb
add
jmp
xchg
pop
xor
mov
xor
shl
fs
and
mov
and
adc
mov
mov
mov
pop
fst
push
pusha
dec
add
shr
shl
or
mov
add
test
shr
and
add
iret
push
imul
shl
add
add
push
sub
and
push
add
aam
dec
push
push
push
sbb
ins
pop
jbe
dec
scas
lods
or
mov
outs
add
xchg
rcl
dec
push
push
adc
jmp
outs
jecxz
pop
jle
lea
mov
xchg
jl
add
sbb
sub
and
push
jecxz
loope
bound
push
xor
adc
jno
nop
cwde
xchg
lods
adc
sub
inc
cmps
icebp
sbb
lods
rdtsc
pop
(bad)
fsubp
rol
and
or
mov
push
mov
or
add
push
cmp
jl
mov
jo
mov
inc
out
popa
jcxz
push
xor
pop
and
sub
add
ins
outs
lea
pusha
sub
test
sbb
mov
sbb
sub
test
dec
mov
and
adc
imul
jne
sub
pop
mov
push
inc
mov
cmp
cmp
mov
scas
movs
(bad)
push
in
(bad)
iret
js
sbb
push
push
mov
pop
push
pop
cmps
sub
dec
sahf
ret
mov
jmp
or
mov
pop
es
add
and
imul
cmps
test
xor
ret
ss
pop
pop
push
or
mov
pusha
in
mov
call
or
sbb
lock
inc
loope
pop
add
shl
and
mov
adc
xor
and
cmps
mov
sar
push
dec
push
or
sbb
(bad)
es
xor
scas
pop
mov
aad
add
sbb
(bad)
jae
pop
js
xchg
mov
dec
inc
test
pop
popf
in
mov
es
push
cmp
adc
jmp
pushf
mov
jp
xlat
add
lea
pop
xchg
leave
xchg
cmps
arpl
mov
ret
mov
retf
or
or
push
aas
daa
fmul
xor
(bad)
fsub
jne
lods
pop
cmp
push
popf
test
add
mov
(bad)
push
iret
ds
loope
mov
lods
ins
neg
or
pop
pop
push
in
inc
cwde
pop
ins
mov
dec
push
jns
in
sub
push
jb
in
cs
mov
or
jb
add
and
movs
push
xchg
adc
popf
pop
cmp
fmulp
leave
inc
dec
dec
pop
push
jl
test
or
ja
inc
fs
leave
daa
or
je
xchg
jecxz
aaa
repnz
dec
pop
push
lea
push
nop
mov
push
mov
push
jl
mov
push
push
gs
adc
lock
xor
xor
dec
not
xchg
add
enter
or
aam
push
mov
and
cmp
mov
rol
cmp
xor
push
aam
xchg
mov
and
ja
mov
popf
inc
pusha
mov
loope
and
jo
add
sub
cmp
adc
xchg
adc
xchg
cmps
test
pop
mov
and
popa
inc
jne
and
push
push
jecxz
mov
mov
in
or
pop
cmps
mov
ds
movs
or
data16
or
push
xor
push
add
pusha
sbb
std
inc
sahf
add
lea
or
cmp
loope
ret
daa
mov
mov
rol
pusha
xor
push
pop
sub
cmp
into
pop
and
push
mov
inc
add
adc
or
sub
inc
jbe
(bad)
push
jge
push
arpl
stos
add
push
in
push
loope
jp
xor
push
loopne
les
xor
jle
jmp
adc
into
or
test
(bad)
push
gs
cwde
clc
xor
(bad)
push
sbb
sub
popa
in
jge
mov
xchg
or
xchg
dec
cmp
lods
rol
and
or
jl
mov
xor
sbb
in
fmul
and
sub
xor
dec
ds
sbb
xchg
and
and
add
pushf
std
or
jbe
xchg
pop
icebp
inc
sub
popa
pop
add
sbb
cmp
mov
sub
or
add
sub
lahf
and
pop
and
scas
ja
cmp
cmp
inc
sub
sbb
xor
mov
dec
add
sub
sbb
out
inc
std
mov
shl
cmp
es
leave
mov
push
pop
ret
and
cmp
cmps
and
lods
add
pop
ja
push
in
sbb
sbb
dec
sbb
sub
test
test
add
pop
stos
pusha
mov
xor
xchg
cmps
or
jl
lahf
add
xor
loope
sub
sbb
push
push
sub
xor
js
outs
fisub
lods
sbb
pop
push
mov
mov
push
xor
inc
fwait
cmp
xor
xor
xchg
and
int
or
nop
mov
cli
(bad)
pop
sub
(bad)
mov
sbb
mov
mov
or
mov
cdq
add
ss
ja
push
add
mov
das
in
pusha
aad
add
add
cmp
mov
cdq
test
xchg
(bad)
mov
lds
pop
lods
or
pop
or
pop
xchg
sub
jo
push
mov
and
outs
fdivr
mov
jo
adc
pop
nop
inc
outs
dec
mov
inc
scas
push
popf
add
aas
push
data16
add
push
jnp
cmps
xor
mov
dec
push
mov
add
xlat
je
rol
xor
jae
xor
inc
mov
push
and
push
(bad)
cmp
pop
and
leave
mov
push
data16
mov
add
mov
stos
shl
and
xor
push
pushw
out
push
loop
and
fisub
sbb
sub
or
adc
jp
dec
push
inc
xchg
sbb
inc
ror
adc
(bad)
cmp
push
cmps
adc
xor
les
add
adc
add
dec
mov
sub
test
push
dec
fistp
aam
mov
fidiv
lds
and
jbe
sbb
and
add
or
pop
dec
mov
loop
inc
cld
inc
push
inc
bound
lea
jmp
sub
add
lock
cmp
mov
push
cmp
aaa
inc
mov
pop
adc
imul
pusha
pop
or
push
add
inc
shl
dec
inc
test
sub
cmp
dec
movs
inc
xchg
enter
or
mov
jno
inc
dec
fwait
push
jecxz
push
popf
shr
and
xor
aad
dec
jnp
cmp
shr
jmp
push
mov
mov
and
sub
cli
mov
pop
mov
adc
movd
add
push
push
inc
ja
cmp
sub
or
fldcw
add
and
xchg
sbb
mov
fidiv
aaa
and
cmp
dec
sub
dec
or
mov
or
(bad)
loopne
add
mov
dec
mov
test
loope
out
fistp
mov
or
mov
cmps
xor
clc
xchg
lahf
gs
test
enter
or
jnp
or
sub
xchg
stos
adc
or
or
rcr
mov
inc
mul
iret
shl
sbb
sub
lods
fmulp
test
mov
adc
test
sub
jp
rcl
aam
or
mov
xlat
stos
mov
pusha
stos
rcl
xor
cmps
scas
aam
enter
adc
rcr
xchg
inc
inc
ret
xchg
xchg
jbe
cmps
add
push
fcmovnb
xor
(bad)
jne
xchg
and
(bad)
mov
xchg
sub
out
fld
cmc
xor
(bad)
push
pushf
cmp
xchg
xchg
fnstcw
aad
adc
and
addr16
in
or
lods
dec
ficomp
add
rcr
xchg
mov
pop
je
fst
pop
jns
jb
pusha
add
mov
fadd
adc
mov
and
mov
push
jbe
push
add
mov
add
pop
push
cld
xor
adc
je
pop
mov
mov
adc
xchg
and
or
inc
daa
out
shl
jb
dec
cmp
xchg
mov
mov
cmp
nop
and
les
adc
jns
push
sbb
mov
sar
jo
popf
not
jp
sub
add
pop
ins
inc
pop
xchg
mov
pop
test
(bad)
ror
and
out
jmp
(bad)
pushf
sbb
jne
mov
(bad)
std
or
mov
push
(bad)
add
test
mov
ds
push
fmul
sub
add
xchg
xor
and
sbb
mov
cmp
add
je
cs
cmp
mov
mov
das
mov
xor
or
fsub
ret
lahf
pop
cmp
add
ja
or
jmp
push
js
cmp
je
ja
inc
outs
movs
fild
imul
push
stos
or
or
jle
je
adc
sub
(bad)
add
ret
sub
jne
add
add
call
(bad)
dec
push
cmp
ss
push
cmp
in
aas
inc
push
test
mov
mov
test
cmp
and
inc
cmp
loope
or
jmp
ret
cmp
xor
sbb
sub
add
or
push
and
fs
test
xor
cmp
mov
push
push
xchg
pop
xchg
dec
aam
sbb
sbb
and
(bad)
xchg
mov
(bad)
test
xor
cmp
inc
inc
cmp
iret
xor
test
sbb
leave
leave
sub
inc
xchg
xor
mov
sub
add
sub
cwde
xchg
jo
mov
cmc
sub
test
scas
or
sub
mov
daa
sbb
fs
add
add
add
(bad)
pavgw
nop
dec
sbb
xchg
jns
pop
hlt
xor
or
and
stos
and
(bad)
xor
cmp
inc
cmp
imul
mov
or
or
cs
fs
or
sub
dec
pop
pop
sahf
sub
cmp
mov
sbb
cli
pop
pop
cmp
push
jmp
adc
mov
ret
fcom
mov
jns
inc
loop
inc
adc
sti
or
and
repnz
push
add
aas
cmc
push
loope
add
ret
or
and
adc
sub
xor
icebp
sub
mov
push
rcl
push
or
test
test
sub
jae
cwde
inc
sub
out
and
dec
push
ret
adc
xchg
ds
ret
aas
and
mov
cmp
jno
mov
xchg
popa
inc
pop
xchg
and
nop
pop
dec
shr
sahf
ror
mov
jg
retf
fs
lea
sahf
pop
add
ret
push
or
fs
aam
push
xor
enter
jl
fisub
adc
sub
push
or
cmp
retf
in
mov
mov
push
push
push
pop
fsubr
mov
test
push
mov
push
push
jb
loopne
mov
adc
fwait
push
stos
inc
push
dec
sbb
sbb
add
sub
adc
push
add
push
cs
mov
sbb
(bad)
je
es
or
rcl
cmc
jmp
sbb
mov
push
loope
adc
les
jne
xor
push
cmps
add
ds
je
jnp
mov
fs
adc
push
and
das
adc
inc
adc
jne
aam
or
add
ret
xchg
mov
lock
or
adc
dec
sbb
and
(bad)
nop
mov
nop
mov
cwde
jnp
lods
je
fwait
mov
or
mov
sub
mov
cmp
daa
shr
fadd
sbb
and
into
sub
add
mov
outs
adc
mov
shl
pop
jmp
xor
add
or
popa
and
retf
cmp
add
inc
xchg
retf
cmp
inc
in
and
dec
retf
add
push
xor
icebp
xor
mov
xor
cs
or
add
clc
daa
inc
sub
aad
(bad)
mov
adc
push
mov
ficom
dec
scas
inc
test
pop
jne
sub
out
push
sbb
cld
sbb
and
push
je
call
add
adc
les
sahf
add
pop
add
jnp
add
mov
xchg
push
or
adc
nop
stos
cmp
cmp
mov
cwde
add
push
or
loopne
xchg
jo
adc
ins
por
leave
repz
push
push
shl
jb
cs
cmp
nop
loopne
popa
mov
sub
movs
mov
xchg
and
mov
xchg
inc
push
cmp
retf
sub
enter
shl
inc
and
push
sbb
pop
or
arpl
sub
mov
mov
or
ja
xchg
adc
sub
mov
mov
xor
daa
lock
pop
xchg
dec
push
xchg
movs
adc
push
adc
cmp
dec
jo
sbb
adc
stc
ins
movs
or
cmp
test
sbb
and
call
je
movs
push
cmp
dec
repnz
pushf
popf
pusha
or
sahf
adc
push
add
push
cs
aad
loopne
pop
cmps
shl
inc
add
cwde
mov
sbb
cmp
in
in
fwait
je
and
pushf
nop
daa
pusha
dec
in
or
adc
add
adc
lods
xchg
dec
pop
sbb
es
xor
jmp
and
into
clc
adc
pusha
test
add
mov
addr16
and
push
mov
movs
sbb
jmp
(bad)
stc
call
pop
aad
jo
loop
lea
fmulp
adc
inc
add
sbb
aas
ds
pop
cmp
cmp
sub
or
loope
ins
pop
adc
jo
and
imul
ss
inc
frstor
and
mov
leave
inc
aad
test
stos
icebp
xor
pop
sbb
mov
in
aas
adc
dec
add
or
or
cmp
mov
lahf
add
pop
push
cdq
aas
sbb
fnsave
adc
sbb
test
inc
adc
add
rcl
dec
(bad)
sub
(bad)
call
js
imul
pop
lea
cmp
stos
mov
mov
sub
cmp
mov
mov
or
adc
cmc
imul
add
es
jnp
cwde
(bad)
cmps
popf
inc
adc
jmp
mov
jne
call
inc
lea
inc
bound
data16
stc
pop
into
sub
int3
aas
das
push
pop
push
popa
dec
xchg
nop
ret
stos
or
xchg
xchg
add
xchg
outs
mov
dec
call
mov
cmp
je
sbb
nop
lds
adc
jns
add
mov
fs
inc
arpl
xchg
and
adc
add
jb
cmp
repnz
dec
enter
jmp
sbb
aas
pop
cs
jns
push
out
jmp
push
cld
push
je
ficom
adc
push
or
adc
dec
dec
jb
sbb
mov
mov
rol
and
sbb
inc
inc
pop
mov
jbe
jns
add
das
pop
pop
xchg
push
nop
pop
imul
add
xor
pop
pop
aam
xor
lods
add
in
xor
xchg
push
mov
and
push
cmp
inc
clc
push
pop
push
inc
shl
imul
pop
inc
sbb
pop
pushf
jge
add
xchg
jmp
scas
test
fwait
xor
jbe
mov
jo
pop
xor
dec
sti
jo
mov
inc
inc
ror
cmps
sub
xor
pusha
xor
cs
and
adc
add
jge
push
sub
enter
jle
add
inc
and
js
test
cmp
dec
cmps
nop
test
inc
mov
nop
mov
or
push
mov
or
dec
inc
add
pop
add
test
or
les
sbb
fbstp
in
xor
xchg
and
add
aad
mov
cmp
ja
sub
lods
cld
test
mov
xchg
pop
or
add
adc
dec
das
xchg
add
push
xchg
call
sbb
sti
ret
iret
push
mov
mov
fnstenv
pop
jne
(bad)
clc
cmp
push
add
loop
sahf
add
jbe
add
xchg
fdivr
scas
pop
jp
cmp
cmp
pusha
aaa
mov
pop
je
or
je
pop
jne
pop
imul
jo
sbb
pop
sub
mov
scas
test
mov
std
add
popf
dec
mov
cmp
cmp
ins
arpl
sub
xchg
pop
call
mov
pop
lods
pushf
add
jg
and
stos
add
out
lahf
ficomp
jne
inc
mov
jno
sbb
sub
cmp
mov
out
push
repz
push
cli
es
ds
jb
fwait
cld
inc
not
lds
xchg
or
dec
jne
cmp
mov
inc
daa
add
retf
and
loope
inc
cmp
ja
jg
dec
mov
jo
int3
cmp
add
repnz
call
int3
pop
add
dec
jl
sub
dec
and
fwait
sbb
inc
jne
push
cmp
cmp
jno
sub
mov
or
sbb
sbb
push
lock
push
and
imul
xor
inc
dec
inc
push
mov
enter
shl
or
test
or
and
popf
add
dec
mov
mov
into
sar
push
test
push
popf
push
mov
sub
cmp
std
cwde
fmul
inc
mov
inc
ror
mov
cmp
sbb
add
mov
ror
inc
and
pop
nop
clc
mov
mov
movs
mov
mov
mov
mov
ja
cmps
sbb
inc
or
jne
mov
test
pop
jmp
aas
adc
pop
xor
cmp
sbb
xor
loop
jne
xchg
adc
jns
sahf
out
out
adc
add
add
add
xor
jb
add
lahf
inc
pusha
call
jae
ror
sti
dec
dec
es
sbb
mul
or
sbb
add
sub
addr16
dec
or
lea
add
not
pushf
and
or
aaa
mov
call
rcl
or
pop
adc
enter
sub
lock
push
dec
and
sbb
add
adc
fldenv
xor
sub
xchg
shl
mov
cs
aad
fisttp
daa
movs
xlat
ja
fiadd
xor
mov
ja
fs
mov
mov
out
or
ins
pop
ss
shr
sbb
xor
jae
mov
dec
push
stc
adc
push
mov
fstp
pop
adc
xor
xchg
cli
gs
ds
int3
push
je
inc
and
fbld
or
ds
jae
gs
lea
inc
enter
pusha
add
pusha
mov
out
sbb
ror
inc
enter
xor
inc
clc
lea
add
push
out
js
imul
mov
fwait
mov
repnz
lods
or
or
call
lods
sub
push
push
in
add
enter
outs
pop
(bad)
dec
hlt
mov
(bad)
push
inc
hlt
ins
sbb
int3
aas
popf
adc
nop
mov
xchg
fistp
or
ds
bnd
repnz
jae
push
(bad)
std
add
test
loop
xor
jbe
pop
js
cli
xor
popf
mov
out
cmp
aam
ret
outs
call
add
jno
sti
(bad)
shr
pop
add
sbb
lock
lock
jno
push
adc
mov
loop
scas
je
mov
movs
jmp
pop
jmp
pop
xor
lea
mov
mov
pop
jnp
mov
loope
cmp
jno
jge
mov
mov
cdq
(bad)
mov
xor
in
scas
popa
nop
pop
adc
int3
pop
pushf
push
mov
mov
pop
inc
adc
pop
mov
in
and
xor
push
sbb
mov
jae
pop
out
fild
mov
mov
pop
retf
pusha
inc
scas
(bad)
mov
or
inc
or
jns
mov
enter
mov
push
or
push
movs
out
daa
add
add
rol
sbb
and
and
lds
mov
call
mov
mov
xchg
addr16
(bad)
dec
retf
dec
adc
mov
push
mov
(bad)
fstp
xchg
sub
stos
ss
(bad)
pop
mov
push
push
push
fld
ror
add
stos
inc
cmp
mov
mov
mov
dec
sub
or
push
xchg
sbb
mov
gs
lea
jge
add
scas
and
test
mov
(bad)
cmps
cmp
shr
pop
dec
jnp
rcl
or
pop
cmps
sub
add
xor
pop
int
mov
mov
adc
std
pop
pop
xor
mov
jns
jns
sbb
push
call
cwde
xchg
fcomp
jmp
or
fstp
fdivr
mov
loopne
mov
mov
adc
rcr
pushf
add
sti
stos
inc
mov
push
shl
inc
push
xchg
pop
cwde
sub
mov
sub
adc
adc
mov
inc
and
or
push
aas
jle
or
add
and
icebp
push
or
or
jecxz
jmp
js
(bad)
out
push
or
shr
rcr
shr
rcr
or
jne
div
jbe
jg
ins
mul
inc
mul
add
jb
cmp
or
jmp
push
jbe
dec
cwde
fadd
adc
mov
jno
shr
sub
scas
je
cmp
cmp
or
loope
jle
xchg
cld
push
clc
pop
in
jae
sar
dec
xor
dec
adc
or
adc
mov
lds
jp
cmp
push
(bad)
jb
fist
outs
enter
add
rol
mov
je
jo
jo
and
ja
or
adc
fstcw
dec
test
jne
pop
sub
mov
lock
add
ret
mul
cmps
addr16
mov
sahf
and
movq
jmp
pop
mov
ret
rol
fcmovnbe
jmp
std
xor
iret
fstp
(bad)
fcomp
in
sahf
ins
mov
cli
push
sar
data16
(bad)
leave
fpatan
sahf
in
fnstenv
iret
retf
inc
out
in
jmp
push
iret
cmc
icebp
dec
fdivp
mov
and
rol
fiadd
rcr
sbb
add
lock
pop
jns
bnd
mov
add
pop
pop
rol
test
(bad)
sub
and
mov
cmp
sbb
pop
fstp
shl
sahf
inc
cs
pop
fld
enter
cmp
adc
sub
popa
push
sub
push
mov
dec
inc
shr
adc
aas
rol
daa
int3
xor
push
mov
out
(bad)
fmul
push
jnp
fidiv
mov
rcr
fidiv
sub
and
aam
adc
mov
xchg
mov
inc
sbb
and
mov
pop
fnop
ss
test
mov
add
and
pop
dec
pop
stc
imul
aad
pop
push
je
fimul
lea
call
dec
popf
bound
push
pop
pop
test
jge
inc
and
fdiv
fcmovbe
ret
cmps
mov
test
sbb
sbb
into
and
dec
ja
pop
(bad)
jns
adc
xor
xlat
push
mov
jmp
(bad)
icebp
mov
mov
adc
jne
fsub
hlt
in
movs
dec
retf
cmp
add
or
mov
add
mov
loope
push
or
pop
xlat
mov
or
rcl
add
jb
mov
daa
dec
xor
sbb
sbb
iret
and
adc
sbb
sbb
ret
jns
add
rol
push
loope
loope
add
enter
popf
or
or
call
push
or
call
test
loope
(bad)
out
or
out
jns
adc
(bad)
jmp
pop
cmps
or
mov
pop
adc
iret
and
movups
cmp
or
add
pop
and
push
adc
test
xchg
ror
fxch
pop
inc
xor
sub
and
les
mov
cmp
in
enter
mov
xchg
dec
xchg
shr
loopne
cli
out
mov
repnz
pop
ja
into
add
test
mov
cmp
and
sub
push
outs
cmp
pop
dec
lock
dec
and
push
pop
pusha
test
enter
sbb
leave
dec
cmp
enter
add
data16
sar
imul
add
daa
dec
or
cmp
or
or
inc
adc
jb
pusha
stos
xchg
pop
sub
jne
or
cmp
mov
lods
add
mov
mov
test
fdiv
mov
mov
mov
inc
lock
jecxz
(bad)
(bad)
fisttp
add
aaa
or
loop
jmp
add
(bad)
or
ror
mov
jo
add
mov
inc
cmp
ret
inc
jl
shl
lods
pushf
mov
(bad)
xor
jmp
pop
es
and
sar
mov
lea
push
sub
aas
xor
jle
clc
mov
movs
add
cld
and
daa
push
sub
add
mov
mov
add
pop
arpl
dec
pop
jbe
(bad)
icebp
test
cmp
cmp
mov
sbb
or
mov
es
pop
jecxz
les
daa
cmp
and
out
pop
outs
xor
cmp
pop
dec
push
add
rol
inc
adc
or
jo
mov
jnp
cmp
add
cmp
mov
call
clc
mov
inc
mov
or
outs
cmp
xor
rcl
aas
jmp
shr
shr
stos
imul
xor
add
not
mov
push
mov
outs
add
mov
hlt
sbb
(bad)
je
test
mov
inc
push
add
in
call
jnp
sbb
xor
test
in
aaa
jnp
jns
dec
lock
xor
add
enter
(bad)
push
sbb
into
jne
ror
inc
repnz
mov
not
push
iret
test
inc
sbb
or
pop
cmps
ret
mov
arpl
popa
movs
outs
push
pusha
jmp
or
test
push
fs
fdivr
inc
add
sbb
(bad)
popf
add
adc
loop
mov
into
adc
cld
int
xor
push
mov
test
push
xor
cld
inc
add
retf
lea
xor
mov
movs
or
out
retf
retf
test
ins
lods
push
cmps
repnz
mov
mov
push
cmp
test
adc
push
adc
jg
jle
mov
cwde
push
lea
neg
pop
pop
mov
sbb
mov
ret
jmp
push
aam
movs
push
in
xor
adc
or
cld
and
ret
or
push
push
mov
cmc
sbb
inc
and
push
or
and
or
push
add
pop
arpl
ins
ins
cli
jae
loopne
and
inc
adc
movs
mov
xchg
sbb
and
sub
dec
push
and
mov
and
add
mov
or
xor
push
ficomp
mov
jb
pop
push
(bad)
push
sub
add
pop
dec
inc
inc
(bad)
push
call
loopne
arpl
icebp
in
lds
loop
clc
mov
arpl
pop
stos
out
cmp
xchg
rcl
adc
pop
pop
pop
xchg
and
repnz
call
push
inc
or
in
xor
fldz
dec
push
stos
xor
sbb
or
call
jge
push
cpuid
mov
xchg
adc
pop
sub
fcom
in
or
imul
je
ins
push
inc
lods
mov
inc
outs
jne
pop
ins
pop
jae
icebp
call
jne
jbe
lock
dec
cmp
xchg
fist
and
add
cmp
push
add
add
add
or
sbb
outs
cmp
mov
jmp
(bad)
cmp
pop
cwde
or
(bad)
mov
or
xor
pop
je
lea
mov
cmps
loopne
mov
dec
push
fsubr
or
jbe
pushf
add
ins
adc
test
aam
repz
add
inc
xlat
rol
lock
xgetbv
or
cld
hlt
js
add
and
es
xor
sub
mov
in
cdq
jge
not
and
and
daa
ror
adc
xor
clc
int
icebp
add
pop
jle
pop
sbb
rol
mov
add
fs
push
add
xchg
shl
test
fbstp
add
xor
daa
sbb
mov
mov
mov
lds
jae
rep
test
cld
adc
rol
xor
test
out
popa
dec
push
gs
test
push
test
(bad)
mov
or
mov
sar
scas
mov
jg
and
jae
push
(bad)
stos
test
cvttps2pi
push
ins
jae
pop
sub
add
sub
hlt
inc
jbe
pop
adc
sar
inc
and
xor
pop
dec
cmp
(bad)
jg
sbb
sub
sbb
in
mov
and
xor
ins
sahf
mov
jb
shl
mov
add
and
or
or
push
addr16
cld
add
dec
enter
add
loope
sub
imul
jg
adc
call
nop
sub
mov
adc
test
ret
fsub
push
je
xor
fiadd
dec
and
adc
and
test
clc
inc
scas
pop
shr
rep
ss
and
or
lea
scas
jnp
or
mov
nop
cdq
pop
xchg
jbe
cs
and
daa
or
sti
ret
call
lea
jmp
add
rcl
inc
rcr
(bad)
dec
jo
or
gs
cmp
fadd
push
and
rol
les
or
or
into
repz
sub
add
pop
das
or
inc
pusha
daa
xchg
es
cmp
je
dec
push
cmps
sbb
sti
dec
movs
jb
sub
out
cs
push
push
dec
adc
push
and
data16
inc
outs
push
jbe
jle
jg
push
stc
jl
fisttp
jg
jg
jg
jg
cmp
jg
jo
ins
mov
test
pop
xor
jb
in
and
push
pop
lds
loopne
xchg
mov
xor
into
sbb
es
push
xor
add
sbb
xor
push
or
mov
xchg
inc
daa
add
xor
jg
jmp
dec
lahf
mov
movs
jb
test
xchg
dec
or
in
data16
sub
data16
fld
or
mov
ss
mov
add
jle
fwait
jecxz
mov
inc
and
fiadd
test
adc
push
mov
cmps
adc
dec
aam
mov
inc
inc
dec
jne
jge
pusha
shl
lahf
(bad)
inc
sbb
rcr
ret
dec
jnp
or
call
sub
add
dec
add
xchg
leave
stos
sub
mov
in
aam
in
or
mov
out
clc
or
jmp
repz
jae
leave
nop
or
and
xor
mov
and
mov
or
jp
pop
call
ins
cmp
cmps
repnz
or
jl
push
aaa
clc
dec
adc
push
mov
int3
(bad)
daa
cmp
jne
push
jmp
rcl
mov
cmp
cs
inc
ins
retf
popa
ret
imul
mov
push
mov
lods
scas
sahf
pop
not
rcr
ror
pusha
adc
add
clc
nop
scas
pop
or
test
in
les
rcr
sub
inc
ins
aam
or
lea
mov
ja
xlat
inc
pop
pop
rcr
sahf
xchg
out
mov
int3
adc
mov
fmul
or
cmp
adc
imul
ror
add
call
pop
aam
jl
sbb
shr
cmp
add
and
push
adc
cmp
adc
inc
(bad)
or
and
xor
(bad)
cmp
dec
fdivr
dec
or
cmp
cwde
pop
fdivr
inc
cmp
cld
stc
jle
jle
mov
or
imul
mov
fstp
inc
gs
cmp
adc
or
mov
(bad)
jb
push
imul
pop
xor
clc
les
add
out
xor
and
mov
ret
loopne
mov
mov
and
pusha
cs
int3
pop
enter
cmp
dec
cmp
jg
cmps
repnz
jne
fsub
aad
mov
sbb
or
push
or
scas
mov
jbe
mov
mov
popa
js
ds
pusha
inc
addr16
or
push
loopne
adc
jmp
add
dec
and
rol
xor
fsub
addr16
sub
clc
xor
div
push
shr
(bad)
mov
scas
cwde
jg
mov
sub
pop
push
inc
inc
(bad)
push
sub
in
pop
xchg
inc
adc
retf
and
lea
nop
dec
pop
mov
or
xsha256
cmps
adc
and
scas
mov
loopne
dec
lea
or
push
sbb
nop
int3
fadd
push
push
jg
clc
cmp
add
add
(bad)
in
xor
dec
cmp
jo
data16
test
cmp
fmul
out
nop
in
sbb
test
test
cmps
std
jmp
test
cmp
fnstenv
leave
and
jbe
jne
leave
adc
cli
(bad)
shl
loope
outs
rcr
adc
cmps
push
cmp
inc
ret
neg
push
jmp
sbb
or
mov
ret
hlt
xor
push
jb
add
jecxz
add
dec
xchg
xchg
jbe
inc
iret
dec
aam
push
call
push
push
and
adc
(bad)
sub
push
aam
cmp
retf
ret
loopne
jns
mov
sub
inc
lock
pop
and
leave
sbb
add
cld
into
push
in
cwde
cmp
jle
inc
jmp
retf
(bad)
ds
int3
adc
lock
fdiv
sub
lock
lods
scas
push
sbb
ret
jbe
mov
cs
xor
jbe
jmp
xacquire
mov
and
mov
enter
mov
enter
mov
pop
in
adc
hlt
push
push
fs
sbb
inc
xchg
sbb
cwde
mov
and
mov
or
adc
ins
lods
pop
shl
jge
jae
mov
test
cmps
es
lds
dec
ja
push
imul
arpl
or
fs
cld
xlat
push
xor
jmp
mov
hlt
std
loop
jle
adc
pop
or
fcmovne
scas
imul
xchg
inc
inc
or
mov
retf
repz
mov
push
xor
lahf
adc
push
les
ret
pop
es
int3
in
and
pop
sbb
mov
je
mov
das
cmp
je
pop
dec
dec
inc
loopne
sub
push
inc
rcr
js
imul
sbb
mov
cmp
jnp
mov
push
push
fs
and
xchg
mov
adc
jg
jle
cmp
jae
(bad)
aam
cmp
jl
or
jg
inc
mov
in
xchg
pop
hlt
xor
push
adc
jg
add
add
pop
cmp
jne
inc
add
add
nop
loope
(bad)
xchg
test
mov
inc
and
lea
shl
mov
je
call
rcl
lea
mov
adc
mov
sub
rcl
adc
jle
retf
rol
cld
outs
lods
xor
push
or
mov
or
sub
out
ret
mov
sbb
call
xor
push
adc
add
push
pop
sbb
(bad)
add
ret
sub
out
ret
jmp
jmp
gs
xor
cmp
jle
fisub
inc
loop
sar
add
shr
es
fist
lahf
cmovbe
jl
jl
pusha
dec
xchg
and
or
rcl
mov
lock
loop
push
int3
js
mov
xor
pop
mov
push
mov
add
add
(bad)
sub
push
sar
and
pusha
ja
sub
out
adc
jp
shl
or
test
adc
ret
lds
jne
je
dec
or
push
fcomp
and
push
inc
jmp
push
or
inc
mov
adc
mov
inc
push
dec
and
loop
ret
xchg
cmp
dec
add
ins
cmp
rcl
mov
jae
hlt
(bad)
repnz
xchg
add
shl
ins
jge
test
jns
test
je
inc
addr16
mov
in
dec
cmp
pop
push
in
jmp
loope
dec
pop
pop
rcl
adc
test
in
cli
mov
add
push
jmp
jle
add
sub
xor
movups
push
dec
add
adc
pop
jg
out
ficomp
pop
pop
push
retf
mov
jmp
cmp
jns
mov
cdq
je
cmps
dec
std
pop
sbb
mov
push
cmp
sbb
pop
imul
xchg
sbb
pop
push
rcr
inc
xchg
loopne
ret
jmp
ret
ss
jo
call
test
imul
push
bound
inc
and
int3
or
sbb
or
mov
in
test
cmp
jae
jo
mov
gs
sbb
rol
cmp
jle
hlt
push
mov
mov
ja
pusha
shl
push
arpl
jl
add
lds
or
jne
fcom
mov
aas
icebp
mov
or
ja
cs
sub
pop
dec
or
jne
xchg
or
dec
icebp
retf
xchg
ret
imul
int3
or
mov
sbb
jl
jne
cmp
mov
and
jb
(bad)
xlat
add
test
imul
add
je
cmp
(bad)
pusha
or
test
adc
or
jmp
add
sbb
sbb
jnp
push
sbb
or
xlat
jne
and
(bad)
cmp
xor
jp
jbe
push
mov
and
and
and
es
mov
xor
aaa
push
xor
pop
sti
cmp
repz
mov
mov
pop
jmp
push
mov
mov
ds
dec
or
test
add
adc
pop
or
cmp
inc
inc
or
jb
mov
adc
mov
(bad)
mov
pushf
sub
test
dec
sbb
pop
jae
test
sbb
or
clc
or
imul
xor
sbb
mov
xlat
loopne
cmp
stc
pop
imul
add
fmul
mov
mov
(bad)
cli
ret
pop
xor
mov
jo
add
iret
movups
add
pop
addr16
push
out
sub
test
jne
push
mov
inc
adc
and
push
movs
push
test
mov
jl
(bad)
cmp
inc
repnz
cmc
add
sbb
add
mov
mov
(bad)
icebp
push
in
jae
push
bound
push
loopne
cmc
dec
pop
xor
add
mov
inc
and
jne
sub
ror
and
xchg
add
sbb
adc
cmp
or
push
movs
or
test
jg
pop
jb
leave
out
add
(bad)
pop
sbb
xchg
xchg
push
(bad)
cmp
adc
retf
sub
sub
sbb
mov
push
je
push
cmp
retf
push
jmp
retf
sub
mov
bsf
add
pop
add
xor
cmp
nop
cmp
dec
shl
movs
adc
retf
shl
shl
push
sub
or
push
or
jecxz
push
adc
(bad)
jle
div
mov
sar
retf
add
add
xor
lock
(bad)
jo
and
js
dec
and
gs
add
pop
add
mov
jmp
inc
cld
cmp
ss
cmp
lods
test
std
cmp
sti
je
shr
and
xlat
push
iret
jmp
sbb
sahf
fs
or
js
std
cld
xchg
dec
inc
pop
push
addr16
adc
(bad)
call
push
or
js
push
loop
jle
cld
mov
and
sub
xor
out
inc
inc
push
jb
imul
leave
push
(bad)
sbb
bsr
rol
mov
rcl
fldenv
fcom
loope
shr
dec
and
pop
lods
dec
out
xchg
ret
ret
in
lods
cmp
fucom
add
and
cmp
cmp
shl
push
inc
sub
jg
or
inc
lock
lea
cmovb
push
cmp
and
(bad)
rol
int
sub
clc
clc
and
cmp
stos
mov
daa
(bad)
in
add
xlat
jmp
clc
test
push
in
add
scas
cli
fst
pusha
loop
out
inc
or
sbb
add
pop
test
cld
rcr
mov
xor
(bad)
xchg
je
rcl
adc
ret
mov
cmps
or
inc
dec
sbb
ds
add
outs
adc
xlat
ficomp
out
fwait
test
sub
mov
pop
mov
cs
ja
jb
retf
mov
or
fild
mov
lods
sbb
sub
shl
es
xchg
test
jne
and
cdq
das
xchg
cmps
mul
icebp
retf
enter
push
or
push
or
lds
add
add
test
in
loop
rcl
cmps
dec
cld
add
cmps
cmp
loopne
mov
loope
outs
adc
int
dec
and
idiv
xor
and
mov
add
or
shl
or
jmp
push
fadd
dec
or
jbe
(bad)
mov
fwait
mov
loope
pop
inc
lock
aad
mov
shr
push
mov
sbb
push
mov
xchg
jns
inc
push
fiadd
into
into
inc
mov
xchg
add
cmp
stos
js
ret
stos
fsubr
outs
mov
test
idiv
pop
test
dec
jg
cmp
je
in
mov
sbb
jg
sbb
cli
push
and
jle
jle
out
jmp
add
les
mov
push
mov
cld
lock
(bad)
fucomip
stos
imul
lock
(bad)
xchg
or
pop
das
dec
mov
jmp
xor
cli
cmc
push
fnsave
out
jb
xor
jmp
jb
cld
sti
or
fisttp
jecxz
sbb
je
arpl
add
push
in
rol
and
inc
aaa
jne
or
xor
dec
xchg
pop
and
jmp
sbb
or
mov
enter
cld
pusha
jmp
jmp
movs
adc
pop
std
scas
dec
mov
mov
ss
pusha
cdq
fs
test
pop
repnz
aaa
push
pop
xchg
scas
into
pop
pop
lods
jg
test
jmp
pop
sbb
or
test
call
push
or
mov
and
and
fwait
or
cmp
jno
ret
loopne
movs
or
sbb
rol
or
push
es
push
mov
fld
mov
cld
dec
or
je
bound
pop
hlt
jl
xor
dec
jl
xchg
mov
sbb
(bad)
xor
call
xor
pop
jne
scas
cmp
inc
add
mov
not
add
imul
pop
add
adc
sbb
shl
cmp
adc
ror
mov
or
bound
push
xor
call
sub
push
cld
and
outs
add
pusha
pop
jle
add
or
add
push
push
fnstcw
xor
pop
push
push
mov
mov
cmps
jo
sbb
inc
pop
fs
mov
push
push
sbb
dec
outs
je
into
stos
jno
push
shl
stos
jmp
jmp
mov
jo
cmp
sub
call
inc
and
push
(bad)
cmp
mov
adc
in
shl
push
sub
dec
jnp
dec
dec
lods
in
jne
dec
lock
movs
fist
rcl
inc
fnstcw
mov
(bad)
pop
sbb
adc
and
push
jmp
mov
jmp
adc
jg
adc
jno
push
les
and
rcl
cmp
mov
inc
inc
call
dec
test
jmp
or
sbb
sub
xchg
fbstp
push
cmp
cmp
pop
pushf
add
lods
int
mov
cmp
mov
add
popa
and
(bad)
or
dec
pop
inc
fcomp
push
xchg
std
inc
bound
push
imul
or
jle
mov
(bad)
or
adc
adc
dec
push
push
or
push
sub
out
xor
push
mov
mov
mov
push
aam
jmp
js
cmp
mov
fneni(8087
or
les
lock
xchg
cs
mov
fild
call
(bad)
fstp
movs
imul
pop
cs
mov
mov
pop
pop
leave
out
ret
fisub
(bad)
call
add
ss
mov
adc
rcl
inc
out
cmp
cmc
mov
fs
call
sar
cmp
push
cli
push
aaa
xchg
test
sub
rcr
push
add
mov
mov
cmp
jo
push
rcl
enter
fld
enter
or
fmul
sbb
and
jnp
sbb
test
push
in
or
ss
ss
mov
ja
and
xchg
scas
and
inc
clc
inc
xchg
in
gs
adc
and
cld
mov
mov
imul
jp
dec
push
cld
ja
cmps
sbb
test
jge
mov
shl
enter
mov
inc
cbw
call
and
ret
sub
pop
jl
mov
add
sub
pusha
add
or
ret
xor
cmp
sti
mov
cmp
push
jge
sbb
cmp
jle
xchg
mov
dec
imul
fadd
or
inc
push
or
or
ja
xchg
xchg
add
adc
loop
sti
pop
cmp
adc
arpl
or
leave
jne
adc
push
xor
sbb
jp
out
fld
fs
imul
std
dec
inc
add
cmp
sub
cmp
ret
test
ret
dec
or
into
xchg
mov
push
pop
or
inc
mov
or
pop
mov
stos
push
mov
dec
and
mov
and
mov
out
imul
mov
mov
mov
jno
mov
ss
fcomp
popaw
jns
je
or
jmp
cwde
xlat
adc
imul
xor
es
dec
inc
retf
or
xchg
mov
cmp
mov
or
adc
(bad)
jle
pop
jg
cdq
(bad)
jmp
jmp
sub
and
(bad)
or
adc
loope
mov
mov
shl
enter
add
jne
add
xor
fmul
cld
arpl
imul
mov
push
mov
sub
pop
(bad)
int3
ret
fstp
or
push
inc
and
(bad)
not
fnstenv
ss
arpl
push
adc
mov
les
rcr
sbb
adc
cmp
imul
bnd
lea
lea
or
sar
jnp
int3
push
aaa
add
and
fs
sbb
nop
sub
mov
cmps
xor
sub
ret
enter
add
repz
jo
jo
fmul
pop
inc
dec
add
fild
cmp
call
sbb
jno
add
sub
sbb
shl
inc
jbe
xor
popa
xchg
mov
rcl
and
adc
adc
pop
dec
lahf
jp
cmp
xor
out
inc
inc
jecxz
fsubr
jmp
push
jg
enter
xor
mov
or
xchg
jle
fs
fcom
icebp
add
fcom
mov
loopne
push
hlt
xchg
adc
mov
aas
loopne
fild
lea
jnp
bound
jne
sbb
adc
jmp
fisttp
push
sbb
sub
xor
xor
sar
or
popa
adc
das
test
lock
cmp
je
scas
daa
scas
aad
adc
adc
sbb
cmc
es
and
pop
neg
pop
sub
or
scas
cmps
test
jmp
dec
inc
push
jnp
in
xchg
std
inc
jo
iret
xor
xchg
jl
loopne
add
xor
lea
jmp
jbe
jmp
sbb
or
fwait
mov
push
and
jo
aam
jne
pop
cmp
and
push
adc
push
xor
jo
lea
xor
pop
in
(bad)
push
add
cli
lock
outs
fst
adc
add
or
retf
push
(bad)
fiadd
pushf
fs
add
dec
movs
repnz
int3
aam
out
in
xchg
add
or
stc
out
(bad)
push
out
fsubr
in
and
push
loopne
sub
pop
out
add
fmul
xor
or
aam
retf
xchg
inc
jb
jg
sbb
dec
call
push
cmp
(bad)
rcr
adc
cmp
cmp
jno
mov
or
ret
lea
(bad)
fisubr
neg
daa
push
mov
add
adc
jmp
mov
loopne
cmp
movs
fstp
pop
xchg
cmp
mul
xor
add
mov
subps
pop
rep
jns
scas
jg
adc
stc
mov
nop
lock
sub
and
jl
rcl
pop
mov
inc
sbb
mov
add
or
sub
or
or
cli
or
sub
sub
or
vmread
jl
push
pop
inc
mov
or
push
ins
adc
mov
mov
add
mov
sar
lock
pop
adc
push
dec
cmp
xchg
add
mov
mov
xlat
dec
mov
mov
push
push
push
pop
pop
nop
xchg
inc
or
sub
ror
aaa
movs
lock
adc
stos
movs
dec
pop
(bad)
in
jo
push
xor
sub
mov
cmp
out
imul
push
mov
mov
in
add
loope
adc
lahf
ins
mov
mov
add
sbb
adc
mov
je
add
int
or
mov
push
add
xchg
jmp
cld
push
shr
jmp
mov
lock
leave
shr
inc
cmc
fisttp
ins
test
or
xor
lahf
xchg
mov
mov
cdq
fiadd
inc
movzx
inc
jecxz
rcl
movs
pop
cmp
into
jns
jo
mov
or
cmp
mov
sar
sbb
cld
push
add
loopne
push
jo
or
jnp
ret
mov
(bad)
je
cwde
js
leave
cmp
xor
sbb
adc
ret
mov
jno
jo
mov
cmp
add
lea
or
(bad)
popa
add
ficom
inc
xchg
push
fisub
push
sub
and
in
mov
js
or
(bad)
mov
push
cmps
mov
add
pop
cmp
dec
sub
imul
mov
into
or
jno
adc
and
push
and
(bad)
bound
xchg
sbb
loopne
enter
mov
fucom
jb
pop
push
ret
ret
addr16
stos
sbb
rcl
imul
add
loope
imul
adc
inc
movs
jmp
jnp
in
mov
push
pop
shl
xor
add
dec
and
loop
push
mov
add
inc
adc
movhps
inc
adc
lock
inc
adc
adc
cmps
or
add
pop
and
in
jb
ret
adc
sbb
xchg
sbb
js
scas
cld
xchg
add
add
bound
mov
loopne
test
adc
aam
and
mov
mov
jo
call
mov
call
xor
and
cmp
push
jbe
sar
ret
adc
std
cld
jmp
ss
ja
mov
jae
cwde
sub
je
add
retf
push
or
pop
mov
mov
mov
cmp
retf
stos
mov
loopne
lods
into
scas
jnp
adc
test
pop
mov
and
popa
loopne
pushf
stos
xchg
jmp
and
sbb
add
and
lock
adc
push
pop
mov
xchg
jmp
fdiv
lods
imul
call
out
cmp
mov
and
dec
adc
adc
push
je
imul
mov
sub
rcl
sub
push
push
pop
inc
add
push
ror
sub
aam
int3
in
mov
les
daa
xchg
retf
sar
sub
std
and
dec
out
rol
adc
lock
in
dec
sbb
and
add
adc
cmp
or
clc
inc
add
jno
mov
push
jl
inc
and
xchg
icebp
retf
push
aas
mov
mov
add
xchg
and
dec
dec
sar
outs
push
mov
mov
xor
mov
mov
sub
xor
sbb
ins
popa
dec
adc
and
mov
sub
cwde
xchg
add
inc
pusha
sbb
cwde
push
push
mov
mov
test
mov
loop
or
pop
(bad)
neg
sbb
and
loopne
pop
shr
lea
mov
adc
add
add
imul
push
retf
mov
add
mov
(bad)
adc
clc
vxorps
xlat
aad
inc
stc
jmp
vpcmpeqb
(bad)
xor
add
bound
call
vzeroupper
nop
dec
cs
out
add
jl
punpckhdq
xor
fldenv
jne
stc
ds
cs
sbb
psubb
movaps
je
push
call
jmp
add
ret
xor
push
jecxz
nop
clc
add
mov
sahf
or
inc
daa
adc
add
sub
mov
fwait
xor
add
mov
add
scas
(bad)
neg
jle
mov
push
mov
fmul
mov
lea
push
pop
mov
jl
or
jne
sub
sar
movs
ror
bound
test
dec
push
push
cmp
push
mov
or
dec
jae
push
int
add
sar
sbb
push
cmp
or
cmp
sub
cwde
fucomp
(bad)
mov
jns
add
or
push
sub
mov
or
mov
cwde
xor
push
adc
xchg
jmp
pop
and
cmp
push
popf
imul
mov
loopne
jmp
(bad)
movs
xchg
(bad)
std
dec
test
xchg
push
add
add
or
dec
inc
shr
fmul
jbe
div
add
add
sub
mov
std
call
sar
add
adc
mov
xchg
adc
(bad)
stos
xchg
(bad)
fistp
fild
test
sbb
popa
lock
pop
cmc
cmp
mov
mov
xor
jb
cmp
sbb
mov
sbb
jae
sar
push
mov
adc
push
sub
mov
movs
mov
out
and
mov
popf
outs
xchg
inc
mov
cmp
enter
cmp
loopne
xor
add
mov
(bad)
popa
cmp
pop
mov
scas
outs
lds
push
xchg
imul
mov
push
push
push
or
pop
sti
lods
icebp
daa
push
push
sub
add
cld
add
xor
dec
int
in
shl
xor
pop
in
dec
xchg
daa
cmp
int3
sub
inc
pop
mov
adc
jns
jbe
fild
je
adc
pop
adc
aam
ficomp
or
xor
es
test
cld
jmp
push
das
cmp
inc
mov
cmp
push
xchg
call
aam
rcr
xchg
push
pop
inc
aas
cmp
mov
outs
ret
cmp
out
mov
aam
test
aam
or
inc
push
xlat
dec
mov
test
jne
push
adc
fist
scas
mov
mov
sbb
or
sbb
push
pop
fadd
add
add
pop
cmp
movs
jae
test
lods
mov
repnz
clc
xor
sub
sub
sub
add
jno
in
push
mov
fwait
xchg
push
and
in
addr16
and
dec
adc
adc
add
or
rcr
push
cmp
repnz
mov
add
(bad)
push
movs
or
jle
or
mov
jmp
add
sbb
imul
xor
xor
addr16
test
add
xor
sub
dec
test
jae
pop
retf
mov
or
jno
add
add
add
lock
add
mov
sbb
and
(bad)
rcr
sbb
pop
outs
mov
xchg
out
rol
aam
jbe
push
and
int
xor
or
mov
test
(bad)
jnp
jae
push
xor
jge
enter
and
cmp
push
pop
loope
mov
or
jg
loope
js
push
adc
ja
mov
cdq
out
fsub
add
xor
cmp
int3
xor
xor
ss
inc
retf
sbb
dec
sbb
dec
mov
or
aad
add
stos
mov
pop
cwde
add
xor
jle
sbb
cwde
or
fmul
inc
loop
inc
xchg
and
lea
je
pushf
lea
or
adc
fs
out
sbb
into
ds
jge
cwde
sbb
aaa
add
pop
imul
push
addr16
inc
push
daa
adc
call
scas
mov
and
cmc
mov
or
mov
or
inc
inc
in
push
leave
adc
cmc
sbb
scas
adc
cld
add
pop
sub
cmp
out
add
call
jo
mov
sub
sub
test
iret
sar
ja
xor
scas
inc
test
sahf
lahf
sub
lods
lds
mov
stos
push
and
sub
cmp
cmp
shl
lock
fstp
mov
and
mov
sbb
inc
loopne
and
mov
or
sbb
dec
and
mov
ror
inc
and
dec
loope
push
cmp
push
push
cmp
lods
push
ds
push
scas
fs
xor
xchg
into
outs
sub
xor
adc
ds
cmp
loop
movs
dec
call
fidiv
adc
loopne
push
jecxz
outs
jecxz
inc
stc
sub
cmp
mov
jecxz
pop
push
mov
or
and
aam
int
fsubr
jmp
dec
and
mov
inc
and
ins
cmp
mov
xchg
ret
mov
inc
and
jle
fist
hlt
hlt
cmp
je
cmp
or
hlt
scas
ss
hlt
jmp
push
mov
mov
mov
jnp
mov
dec
adc
(bad)
inc
and
je
pop
dec
mov
clc
dec
and
les
ret
push
xor
ja
iret
daa
mov
and
popa
cmp
push
jmp
inc
or
cmc
and
jmp
mov
cmp
cmp
je
mov
jmp
int3
out
movs
add
push
hlt
push
xchg
pop
sar
sbb
sbb
push
jmp
mov
inc
and
sub
lds
xchg
pop
cmps
mov
inc
outs
dec
fdivr
add
add
lahf
cmp
data16
add
popf
test
cmp
adc
outs
push
dec
jbe
retf
cmp
(bad)
or
mov
jo
mov
jo
fisub
mov
loope
mov
test
or
mov
xor
mov
lds
mov
adc
and
adc
jge
and
fisttp
lahf
add
mov
stos
push
mov
test
pop
xor
std
add
in
xor
(bad)
mov
es
shl
pusha
or
icebp
cmp
je
cmp
dec
xlat
jbe
fist
and
pop
pop
lds
sub
cmp
imul
fwait
jle
or
cli
jmp
pop
jge
xchg
jmp
jno
adc
sub
mov
bound
adc
sub
pop
jmp
in
or
std
call
adc
add
push
loopne
lods
adc
mov
rcl
inc
push
test
mov
adc
or
or
imul
out
adc
push
add
sbb
inc
mov
outs
mov
mov
int3
xlat
push
das
pop
int
pop
test
or
adc
fstp
add
xchg
mov
xchg
sub
add
push
pop
sbb
scas
lock
xor
mov
mov
retf
aad
pusha
mov
jmp
neg
mov
cmp
movs
jb
and
inc
mov
add
sub
sub
jbe
sub
hlt
or
data16
clc
pop
xor
add
neg
outs
mov
push
or
dec
add
pop
hlt
lahf
ins
in
adc
xchg
push
push
pop
push
in
ret
jmp
cmp
je
add
add
mov
cli
shl
sbb
lahf
mov
adc
into
pop
fsubr
fld
test
jbe
pop
lods
sbb
add
cmp
xchg
repz
retf
mov
out
cmp
ss
pop
add
fidiv
repz
mov
add
ins
leave
mov
add
jno
inc
cli
dec
sbb
add
cs
lods
cmp
sbb
les
xor
std
into
jmp
xor
rcl
lods
cmps
add
rcl
adc
int
sbb
pop
aad
aad
xor
out
out
mov
push
or
and
sahf
push
jo
xchg
pop
xchg
ret
or
outs
cdq
nop
gs
push
(bad)
jmp
pop
repz
inc
out
inc
sbb
xor
repz
sub
xor
shl
fstp
push
jno
mov
mov
push
mov
pop
ins
ret
pmulhw
add
add
in
(bad)
mov
out
push
sbb
pop
jae
jne
out
mov
mov
push
jg
pop
es
out
sub
add
and
dec
(bad)
sar
mov
push
jge
jp
sbb
int3
sbb
add
sub
or
cmp
fdivr
movs
or
loopne
mov
cld
in
fnstsw
inc
xor
adc
pop
ret
in
sub
add
add
jnp
mov
in
pop
inc
aaa
pop
pop
add
ja
pop
sub
shr
and
cmp
stc
in
push
test
or
adc
or
cmp
sbb
shr
sbb
add
in
scas
cmps
xor
push
mov
adc
jmp
cdq
rcr
sbb
into
mov
pop
dec
loopne
dec
cld
sub
(bad)
pop
push
call
shl
push
test
leave
dec
push
or
ins
pop
pop
lock
cmp
jae
fs
or
adc
and
outs
ja
dec
sbb
or
and
cmp
jb
ja
cmp
sub
in
loopne
add
push
push
fsub
mov
sub
and
add
rol
push
cld
mov
inc
mov
es
mov
aam
jbe
jmp
mov
adc
inc
xor
mov
lock
aaa
xor
jbe
add
clc
push
es
ret
add
mov
or
push
xor
(bad)
out
cmp
neg
cmp
pop
inc
dec
mov
inc
shr
ror
mov
pop
scas
(bad)
movs
pop
cmp
fild
inc
mov
or
sbb
int3
fstp
xchg
lea
mov
jbe
sar
fs
adc
inc
sub
je
mov
ds
jmp
xchg
mov
out
push
mov
movs
gs
iret
adc
fstp
and
push
enter
loope
sub
sbb
cmps
cmp
imul
ins
sub
adc
ins
cmps
adc
pusha
inc
mov
pushf
add
sar
mov
or
pop
iret
call
loop
cmp
aaa
add
(bad)
xor
or
je
or
sub
sbb
sbb
inc
xor
popa
je
xchg
call
rcr
dec
inc
jecxz
not
mov
enter
push
or
test
jne
dec
in
je
lods
pop
fnsave
push
ror
in
test
cmp
pop
add
fldenv
mov
fsubp
mov
inc
dec
test
mov
call
sub
dec
rol
mov
inc
data16
dec
fdivr
aaa
pop
dec
push
jbe
sbb
xor
cmp
or
aaa
sbb
cmova
ins
dec
sbb
inc
jo
daa
push
add
nop
inc
scas
nop
sub
push
push
ds
push
movs
cdq
xchg
mov
xchg
inc
cld
clc
imul
inc
xchg
inc
loope
hlt
enter
stos
sub
push
cmp
push
xor
xchg
jb
xor
daa
aam
cld
pushf
cmp
in
add
xor
ror
inc
xor
rol
call
adc
shr
push
movs
add
xchg
push
sub
or
fmul
stc
inc
push
add
cmps
jne
aas
add
jo
push
add
push
xor
adc
pop
fld
add
in
icebp
adc
lea
xor
mov
std
test
rep
pop
or
xor
adc
dec
repz
pop
push
sbb
sub
test
in
or
test
ds
add
xor
or
sbb
dec
pop
jnp
xor
pusha
adc
adc
scas
movs
popf
adc
lea
mov
dec
sbb
aas
fldcw
es
arpl
call
(bad)
ret
pop
lock
and
jo
mov
push
into
or
inc
sbb
jnp
adc
jmp
mov
mov
add
sub
inc
jmp
push
pop
fcom
ja
dec
mov
dec
push
cmp
div
or
xor
push
pop
test
fimul
es
fcomp
call
cmps
popf
mov
or
sub
mov
xor
fisttp
movs
pop
mov
dec
imul
pop
push
or
add
mov
pop
sbb
and
cmp
xor
sahf
addr16
mov
sbb
add
push
int3
dec
cli
enter
in
mov
mov
enter
and
inc
add
call
jae
rcl
mov
inc
push
add
icebp
xor
loop
sbb
aas
xchg
fbstp
cmp
cmp
dec
sub
and
pushf
sbb
xor
add
(bad)
push
mov
push
add
inc
sbb
or
push
test
gs
sub
xchg
inc
jle
mov
or
cmp
inc
ret
mov
pushf
je
jne
sbb
and
mov
jle
add
das
fidiv
sbb
je
mov
push
or
mov
sbb
aam
mov
adc
fidivr
adc
popf
jbe
or
(bad)
sbb
add
push
mov
add
mov
das
cmp
ror
loop
hlt
push
push
cld
shr
adc
retf
lahf
in
xchg
mov
cmp
jg
cmp
jle
sbb
xor
pushf
add
mov
pop
ins
inc
loope
jmp
test
ret
repnz
and
(bad)
dec
lock
push
(bad)
xor
adc
fbstp
mov
push
je
ins
dec
ss
add
js
pop
push
jp
loopne
gs
or
shl
int
inc
and
mov
and
or
les
xor
sub
into
or
mov
mov
outs
adc
sbb
pop
sbb
je
fistp
push
fdiv
push
mov
je
mov
leave
jne
xor
push
out
fcomp
cmp
mov
mov
jmp
jp
sub
cld
jmp
or
or
mov
(bad)
jne
std
jle
add
mov
(bad)
or
dec
fdiv
push
cdq
add
(bad)
adc
fs
(bad)
stos
sub
sbb
xchg
movs
sti
and
mov
ds
in
add
dec
bound
hlt
lea
xor
add
addr16
in
rol
fisubr
inc
jb
cmp
xor
movs
pop
dec
inc
dec
rcr
loopne
xor
and
(bad)
(bad)
fsub
and
in
leave
enter
push
or
pop
dec
inc
cs
mov
sbb
jbe
and
icebp
(bad)
jl
dec
lods
test
inc
add
sar
sbb
imul
popa
mov
push
repnz
popa
stos
jle
xchg
adc
adc
in
in
out
in
jno
daa
inc
and
cmps
ror
pop
add
pusha
xchg
push
or
add
test
cmp
inc
inc
jb
jbe
out
push
test
ss
add
movs
mov
es
or
sub
cmp
call
mov
push
push
outs
or
shr
add
ja
movs
jo
jmp
push
cwde
xchg
add
cmp
jmp
add
xor
out
mov
jmp
movs
aas
cmp
rol
fsub
and
int3
dec
in
cmp
fnstsw
pop
hlt
jmp
dec
shl
enter
dec
xchg
in
div
mov
clc
(bad)
fisubr
stos
in
aaa
test
push
mov
mov
(bad)
in
int3
push
bound
or
fnstenv
pop
mov
imul
not
adc
mov
out
fwait
or
pop
popa
pop
addr16
ret
in
test
jo
dec
rcl
pop
fsub
jb
dec
fsubr
hlt
push
out
sbb
js
sar
sub
test
push
xor
sbb
leave
and
dec
daa
out
inc
xchg
inc
or
sub
xchg
xchg
enter
mov
dec
(bad)
adc
and
pushf
push
push
sbb
sbb
xor
cmp
add
xor
rol
sub
je
outs
and
int3
jno
or
xchg
ja
nop
inc
aam
test
and
sub
ins
in
fcomp
sti
jecxz
loopne
or
or
(bad)
jbe
stos
inc
loop
jmp
popf
ja
dec
pop
outs
mov
mov
xchg
out
fs
adc
retf
sbb
cmp
repnz
mov
imul
cmp
and
dec
dec
cli
or
inc
add
xor
xor
sbb
or
out
sbb
push
push
and
(bad)
ins
js
mov
(bad)
out
ja
mov
xchg
ins
adc
inc
mov
popa
dec
inc
loop
mov
loopne
pop
nop
or
sbb
popf
jge
mov
mov
mov
dec
and
ret
fisttp
add
inc
inc
fld
xor
or
xchg
retf
out
sub
inc
dec
out
div
pop
enter
cmps
mov
jg
outs
mov
add
pop
cwde
or
jbe
push
push
xor
ja
stc
pop
shr
xor
cs
or
ja
mov
jo
dec
call
test
test
or
gs
push
pop
bound
jnp
rol
mov
loop
pop
push
test
xchg
ins
je
sbb
push
aaa
ja
int3
pop
mov
adc
ds
cmp
movs
mov
ret
cmp
inc
sti
sbb
adc
sub
or
xor
aaa
push
daa
push
out
push
fs
cmp
mov
in
pusha
and
loopne
movs
je
out
mov
sub
push
mov
and
out
xchg
gs
push
push
shl
inc
mov
dec
test
sub
ror
shl
loopne
dec
outs
xor
or
push
pusha
(bad)
lea
push
rcl
xchg
(bad)
xchg
pop
mov
ins
rcl
lods
pop
into
jle
adc
aas
(bad)
shl
in
jo
mov
xor
adc
cmovp
sub
mov
mov
mov
movs
(bad)
cmp
cmp
inc
les
loop
push
xor
and
js
xor
push
jmp
or
paddw
mov
sub
add
inc
jno
pop
sbb
add
mul
out
out
ins
out
add
leave
inc
ins
je
retf
mov
push
(bad)
fsubr
into
adc
jge
jl
fistp
jmp
addr16
ds
mov
inc
popf
(bad)
cli
pop
pop
sub
push
pop
sub
adc
fisttp
hlt
add
jmp
jp
add
mov
or
lea
sbb
orps
sub
lss
mul
enter
fmul
rol
xchg
loop
push
data16
pop
or
jecxz
xor
call
push
xor
lea
ror
xchg
and
inc
fimul
dec
sbb
xchg
shl
int3
iret
adc
push
or
add
sti
sbb
cmp
les
shr
pop
xchg
(bad)
or
and
aad
fcom
push
jne
mov
jmp
push
xor
push
push
clc
jae
rol
dec
add
retf
xlat
aaa
xlat
and
rol
and
add
pop
loopne
pop
loope
add
cwde
mov
xchg
or
addr16
adc
mov
call
into
pop
fst
sub
sbb
mov
mov
lods
je
mov
ins
retf
pop
cwde
imul
rol
loopne
dec
xchg
lea
nop
pop
pushf
xchg
sbb
int3
push
cmp
jns
push
add
xchg
js
push
iret
add
mov
fs
jae
push
cmp
(bad)
(bad)
push
cmp
pop
or
ins
xor
(bad)
jmp
inc
pop
inc
call
fstp
(bad)
stc
daa
xchg
out
cld
retf
(bad)
fld
ret
add
xchg
xchg
pop
inc
xchg
cmp
push
xchg
xchg
sbb
pushf
pop
outs
sbb
pop
jns
dec
imul
fcomp
inc
pop
jmp
cmc
jns
or
stos
sysret
xor
popa
call
aam
lods
mov
adc
loopne
pusha
add
xor
add
cmp
lods
movs
jno
in
es
sbb
xor
adc
cmp
pusha
or
test
sbb
pusha
mov
cmp
lods
push
pop
inc
shr
inc
inc
dec
dec
cmp
in
cmps
loope
enter
lea
lea
sub
push
and
(bad)
xchg
aad
or
fcomp
bound
sub
sbb
or
mov
clc
scas
les
fs
test
xor
cli
mov
scas
test
inc
das
jns
addr16
xor
mov
nop
cli
lea
and
inc
push
push
outs
adc
mov
lods
in
jle
mov
adc
inc
cmp
jne
inc
dec
cmp
mov
in
lea
sub
out
ins
cli
imul
ret
rol
cli
mov
mov
add
mov
dec
repnz
cmps
and
sub
cmc
nop
cli
and
cli
(bad)
dec
test
cli
jecxz
push
inc
imul
and
sbb
jo
dec
and
in
cli
nop
cli
xlat
pop
mov
punpckhbw
sub
and
mov
loope
xor
mov
sbb
add
inc
jmp
inc
test
fst
or
adc
xor
adc
dec
dec
unpcklps
mov
repnz
and
in
push
in
icebp
jmp
jecxz
jb
repnz
pop
jp
mov
pop
pushf
stos
mov
fbld
cmp
mov
es
fcomp
mov
pop
popa
add
jmp
xchg
dec
mov
mov
pusha
mov
pop
mov
push
adc
movs
mov
nop
cli
xchg
sbb
and
jnp
sbb
xor
mov
je
xlat
or
fild
add
aad
push
xchg
push
dec
inc
push
add
xchg
mov
(bad)
imul
jge
sub
cmp
inc
pop
div
shl
das
mov
or
mov
ja
pushf
mov
mov
rol
aam
in
shl
(bad)
push
pop
cld
inc
or
cmp
jg
fwait
mov
clc
cli
loop
mov
mov
(bad)
adc
jmp
sub
pushf
push
into
repnz
xchg
xor
xchg
repnz
mov
jge
push
int
retf
inc
push
inc
fstp
dec
jmp
xchg
into
xchg
stc
add
xor
dec
push
das
mov
jb
imul
data16
cmps
fnstsw
inc
mov
lea
push
adc
add
add
cmp
mov
in
in
loope
push
jnp
jecxz
repz
not
or
dec
sbb
ret
rol
pop
pusha
out
mov
fwait
out
ror
test
rcr
test
fadd
cmp
mov
and
push
jae
jb
xor
loopne
lds
push
ss
fcomp
inc
jne
test
test
sub
inc
aam
dec
mov
add
stc
inc
aaa
mov
retf
jmp
icebp
je
outs
or
in
fcom
out
cmc
fisub
lods
ja
ficom
popf
lock
cld
mov
inc
cmp
loop
mov
add
jmp
gs
rcl
and
in
jl
aam
sub
hlt
jmp
pop
mov
das
mov
je
add
jbe
in
cld
jae
popa
mov
lahf
lds
div
jl
xor
jns
daa
cli
xchg
js
pop
xor
cwde
inc
cmc
push
iret
in
in
and
mov
jno
inc
jo
dec
adc
iret
push
sbb
(bad)
and
mov
gs
jno
jae
out
add
dec
rcl
call
cwde
push
icebp
push
clc
test
xchg
push
cdq
push
shr
sbb
jbe
add
cmc
and
adc
(bad)
push
sbb
leave
dec
mov
ror
addr16
(bad)
out
cmp
push
cwde
adc
cmp
jge
xchg
sbb
jae
test
pop
ror
data16
test
jmp
jb
or
pop
ja
loope
dec
or
cmp
aaa
push
push
aas
aam
js
test
bound
add
push
mov
and
push
inc
cld
daa
and
jmp
cld
in
fiadd
jge
call
mov
or
mov
ret
lods
dec
dec
icebp
iret
xchg
push
out
jmp
mov
xor
sbb
inc
push
push
or
cmp
stos
xchg
cmp
cmps
pop
jl
xlat
scas
push
(bad)
cmp
mov
ins
rol
or
repnz
sbb
sbb
ret
outs
mov
stos
leave
and
cmp
mov
add
enter
sub
loop
jb
bound
xor
movs
pop
movs
jne
dec
outs
jmp
pop
add
adc
ret
das
xor
push
retf
add
push
pop
dec
test
fsubr
or
hlt
push
(bad)
in
cmp
movnti
add
dec
movs
mov
out
fisubr
mov
retf
test
adc
data16
dec
imul
jae
adc
pop
and
(bad)
cmc
and
sbb
add
movq
movs
div
xor
faddp
inc
xchg
push
mov
mov
pusha
shl
adc
and
and
dec
push
enter
and
push
adc
add
into
ins
movs
scas
aaa
inc
cmp
and
sbb
push
push
xchg
xor
(bad)
adc
enter
mov
dec
clc
pop
xchg
in
js
jmp
sub
add
jmp
fsubr
push
or
sub
gs
pop
push
push
lea
xchg
cmp
mov
int
test
or
cmc
inc
sbb
cmp
nop
(bad)
inc
dec
dec
and
add
add
sub
(bad)
cmp
jbe
or
int
or
ja
out
push
add
mov
les
movs
sti
add
shl
clc
adc
sub
sbb
jmp
xor
out
pop
rcl
or
icebp
cld
and
mov
stc
xor
sub
imul
popa
xchg
push
push
push
inc
shl
popa
and
ins
mov
jle
mov
lods
cdq
inc
and
sar
dec
add
add
inc
jnp
outs
and
cmovo
cmp
dec
jne
add
scas
dec
sub
popa
mov
mov
jle
cmp
add
mov
push
call
push
mov
xchg
pop
pop
xchg
inc
dec
mov
jecxz
out
jnp
(bad)
jne
addr16
fist
mov
fdiv
sar
pop
neg
sub
or
inc
inc
clc
or
jp
xor
mov
inc
inc
movs
xor
lea
xor
or
xchg
or
push
fs
mov
sub
ins
mov
xor
inc
mov
ins
in
add
pop
jo
scas
jne
sub
add
aaa
pusha
pop
pop
and
inc
sub
cs
or
xchg
jo
dec
xchg
xor
lods
add
shl
loopne
sub
bnd
mov
inc
sub
cmp
arpl
and
jge
pop
dec
adc
cli
inc
add
add
and
push
inc
sub
enter
into
xchg
mov
loop
push
fs
jne
lock
inc
sub
or
fsubr
les
jg
mov
lock
shl
or
mov
lock
call
cmp
dec
push
test
mov
inc
outs
xlat
ret
mov
mov
xor
frstor
add
push
push
push
mov
rcr
mov
loopne
add
div
push
cmps
test
pusha
cmp
mov
inc
mov
(bad)
xor
shr
add
push
inc
xchg
mov
or
or
call
cmp
arpl
jb
enter
unpcklps
xor
(bad)
pusha
int3
push
push
lahf
pop
push
int3
fidiv
jbe
sub
mov
pop
xor
int3
push
mov
fimul
jbe
pop
jo
cmp
ja
adc
mov
hlt
shr
mov
div
jb
cmp
dec
push
(bad)
test
xchg
shr
jno
sub
test
je
clc
and
add
sub
mov
cli
dec
jbe
jbe
xchg
cmps
mov
nop
sbb
dec
cmp
add
adc
add
push
jnp
cdq
es
jb
js
loop
(bad)
gs
push
mov
lods
sub
xor
data16
rol
push
div
add
ins
js
and
mov
cwde
sub
mov
icebp
fidivr
jge
jae
retf
fsubp
dec
stos
xor
pop
or
ret
jo
hlt
dec
cld
adc
lods
push
add
dec
cld
xchg
loopne
sub
xchg
fsubr
push
add
pop
inc
aaa
aad
sahf
add
je
xor
jecxz
lock
(bad)
dec
or
jge
inc
cli
inc
cmp
or
cmp
std
test
inc
fwait
push
hlt
inc
xor
adc
sbb
push
mov
sub
mov
jo
cmc
(bad)
cli
inc
ss
mov
(bad)
cli
mov
add
inc
fdiv
js
or
xchg
adc
dec
mov
add
mov
push
mov
mov
push
jb
push
(bad)
pop
and
push
adc
mov
pop
les
dec
and
sub
or
add
fimul
add
and
push
xor
in
je
data16
hlt
not
inc
inc
(bad)
clc
nop
cmps
loop
sbb
mov
xor
or
imul
push
lock
adc
pop
jne
push
inc
inc
push
adc
test
neg
in
leave
ss
and
sahf
xchg
rcr
sbb
add
sbb
jle
or
jle
adc
je
or
ja
push
pushf
ret
mov
or
jle
add
add
in
inc
and
cwde
cmp
shr
stc
lea
hlt
fidiv
ret
dec
out
add
sbb
adc
mul
push
in
jnp
jnp
lahf
pop
or
jle
cmp
jo
push
test
and
xchg
xor
push
mov
jbe
icebp
pusha
adc
or
ss
xchg
xor
inc
out
jns
outs
xor
loop
push
sub
sbb
hlt
and
inc
dec
pusha
cmp
add
cmp
jo
push
and
mov
pop
mov
hlt
jb
out
or
adc
jmp
clc
pop
add
das
pop
or
retf
repz
add
or
adc
into
repz
push
and
add
sbb
lea
mov
sbb
add
adc
into
pop
xchg
or
and
paddw
mov
sbb
push
pop
dec
push
adc
imul
sub
inc
imul
sbb
ins
or
mov
xchg
push
jno
out
mov
popf
sbb
sbb
sub
mul
jecxz
cmps
jle
and
pop
xchg
ret
in
mov
mov
test
jne
jo
shufps
push
sub
adc
cmc
xchg
rcr
mov
pusha
mov
dec
test
or
jg
cmp
cmp
in
inc
mov
mov
sbb
out
or
push
arpl
mov
and
or
test
jbe
dec
jmp
sbb
shl
(bad)
push
and
xor
add
pop
pop
pop
ret
sar
test
xchg
arpl
push
adc
add
hlt
pusha
or
mov
or
dec
xchg
cmp
fs
ins
mov
push
jg
adc
add
retf
mul
in
inc
je
or
mov
mov
cmp
mov
and
and
scas
push
cmps
imul
dec
mov
sub
nop
out
mov
jne
sbb
sub
icebp
mov
sahf
sbb
or
or
test
xor
sbb
ss
cmp
add
jg
sti
push
fiadd
or
adc
aas
or
outs
jne
xor
scas
repnz
adc
les
pop
mov
and
push
stos
inc
jae
ret
mov
sub
xor
xchg
loopne
inc
adc
jmp
jl
outs
xor
pop
or
fwait
and
jl
pop
or
inc
(bad)
iret
fist
mov
and
and
cmc
ror
adc
sbb
mov
xor
jbe
push
stos
lea
push
xchg
into
inc
into
dec
cwde
loope
mov
retf
and
push
xchg
inc
sbb
or
lods
push
cmp
jmp
imul
mov
call
push
or
cmp
les
adc
sahf
fs
push
add
cs
inc
and
out
add
inc
pusha
inc
xor
pop
fimul
rcr
or
ja
adc
xor
js
xor
add
inc
or
ss
(bad)
sub
je
or
adc
aaa
aaa
aaa
outs
je
jne
or
add
fld
dec
inc
jmp
rol
pop
ins
je
or
jp
or
and
and
add
pop
push
ins
clc
mov
push
adc
cmp
jae
sar
xor
mov
sub
loopne
inc
xor
xor
inc
inc
inc
stos
(bad)
jg
sbb
or
dec
adc
inc
dec
xor
scas
les
les
cmp
adc
sbb
add
lock
lock
inc
sti
cs
sbb
ror
mov
leave
fcomp
out
sbb
out
cld
arpl
or
call
mov
(bad)
(bad)
add
daa
pop
repnz
jmp
dec
aaa
and
je
push
lahf
je
js
test
enter
mov
or
xchg
add
jg
mov
mov
mov
inc
mov
sbb
test
push
out
(bad)
ret
push
xchg
(bad)
sub
lock
push
mov
jo
jmp
dec
(bad)
jecxz
sub
pop
out
clc
lock
sbb
imul
jmp
sub
lahf
lods
push
cmps
shr
cli
inc
push
jb
add
pusha
ja
aam
lock
cmp
sub
jge
mov
pop
add
mov
retf
and
mov
mov
leave
rcl
inc
nop
call
and
pushf
pop
add
push
mov
sbb
sbb
sbb
and
loope
nop
push
or
cmp
xor
test
ss
leave
repz
movs
xchg
dec
and
scas
inc
(bad)
fmul
int
dec
sbb
lock
adc
adc
movs
adc
inc
ja
inc
pop
add
add
cs
adc
and
test
fidivr
sbb
pop
adc
ret
cwde
cmp
mov
out
push
in
pusha
cmp
call
test
fsubr
xor
clc
jo
jg
test
jge
mov
aas
pop
mov
cmp
adc
or
inc
xor
data16
retf
xor
clc
push
pop
pop
dec
push
adc
add
dec
loopne
mov
jo
adc
sbb
sbb
movs
in
popa
or
adc
mov
inc
inc
or
sbb
push
data16
data16
lods
sbb
mov
xor
out
cmp
xor
jo
dec
call
inc
jmp
pop
mov
dec
and
sub
adc
push
mov
jle
push
popf
add
jno
add
int
sbb
mov
xor
ins
mov
aaa
repz
and
and
test
xchg
jne
orps
jmp
lea
or
in
jae
and
ss
adc
adc
outs
int
xor
xchg
cmp
jbe
add
lea
adc
sub
ds
call
int
adc
mov
push
lock
jbe
xchg
cli
push
jecxz
not
cmp
je
loop
pop
pop
inc
sub
mov
lock
dec
loopne
mov
pop
push
sub
mov
sbb
pop
add
scas
outs
sahf
jns
mov
mov
fcmovnu
(bad)
cmp
push
pop
jmp
pop
pop
test
in
mov
lea
fisub
pusha
mov
add
adc
test
daa
and
and
dec
dec
fadd
fmul
sbb
mov
adc
dec
imul
push
mov
xchg
test
hlt
test
or
cmp
cmp
data16
fst
xchg
in
mov
add
pop
jo
arpl
mov
xchg
pop
test
shl
cmps
pop
push
fwait
xor
mov
shl
xchg
daa
ficom
nop
cmp
jbe
outs
add
hlt
sbb
and
and
outs
fld
pusha
ja
lahf
mov
mov
cmp
ja
mov
xlat
pop
pop
int3
pushf
popf
push
jle
push
fxch
mov
bound
fldenv
pop
pop
pushf
fld
sbb
into
xchg
jg
cmp
mov
mov
(bad)
jb
scas
pop
xchg
pop
inc
in
test
daa
sub
aas
adc
repz
xor
fist
inc
fiadd
cmp
xor
mov
pop
sub
je
bound
mov
mov
retf
popf
pop
fnstsw
rcr
xchg
(bad)
sub
add
pop
cld
rcl
cmp
sbb
or
jl
xor
inc
mov
mov
pop
dec
mov
jmp
fs
mov
dec
call
cmp
jae
pop
xchg
jno
sub
test
jl
add
mov
jmp
je
push
imul
sbb
cmp
or
sbb
frstor
mov
call
mov
inc
sbb
sbb
cmp
xor
or
movs
mov
add
mov
cwde
mul
outs
push
or
inc
sbb
adc
fdiv
dec
int3
xchg
or
fidivr
inc
test
clc
clc
push
xchg
in
fcmovu
(bad)
mov
inc
pop
call
outs
jnp
and
mov
inc
inc
mov
into
div
cmp
inc
lock
movs
imul
fcomp
inc
jmpw
jg
in
pop
out
xchg
not
mov
rol
sub
pop
sysret
add
loopne
bswap
push
mov
or
hlt
or
and
or
push
mov
and
pop
scas
(bad)
mov
add
cwde
jmp
or
cwde
xor
pop
(bad)
test
sbb
mov
inc
push
push
jecxz
push
test
das
sub
push
mov
popf
mov
leave
adc
add
add
jb
push
pop
(bad)
cmc
es
pop
add
shr
jb
cmp
add
dec
inc
repz
mov
clc
or
push
movs
ret
mov
int
cs
adc
arpl
shl
and
hlt
inc
adc
into
fs
pop
push
push
push
test
jbe
or
xchg
add
adc
xchg
xor
pushf
dec
scas
mov
jmp
and
jge
fist
push
cmp
(bad)
xor
cmp
xchg
cld
pop
mov
popa
jl
imul
out
retf
dec
adc
lock
test
lock
dec
adc
or
call
add
in
pop
rcl
cmp
jae
clc
call
xchg
xor
and
into
call
and
sar
jb
push
fdiv
dec
add
cmp
fdivr
xor
lock
mov
or
adc
dec
jge
inc
jecxz
hlt
icebp
test
inc
push
test
fcom
push
icebp
call
sub
rol
fsubr
sbb
pop
jp
(bad)
cmp
adc
sub
mov
dec
xor
not
hlt
dec
add
cmps
std
rol
push
cmp
pop
and
push
and
aam
imul
and
adc
push
mov
push
sbb
xchg
push
iret
mov
and
stos
push
inc
popa
add
add
and
pop
push
pop
sub
test
inc
bound
(bad)
in
std
and
sub
mov
dec
pushf
inc
popa
dec
das
ss
rcl
test
jo
mov
dec
push
mov
xchg
ja
imul
xchg
push
not
ret
cld
mov
bound
sbb
sub
into
stos
add
lods
push
stos
add
inc
cli
pop
dec
jbe
mov
bound
dec
xor
les
xor
xor
shl
sub
mov
xchg
test
jne
(bad)
xor
daa
jbe
push
adc
mov
sub
jne
outs
dec
jne
jecxz
mov
inc
aaa
or
and
in
pop
fadd
add
mov
mov
inc
push
cmp
mov
cmp
mul
ins
addr16
leave
xlat
out
sbb
into
sub
mov
sbb
and
sub
fmul
(bad)
push
test
test
icebp
les
sbb
lea
jb
addr16
je
pop
mov
jmp
imul
daa
pop
fisubr
loop
lds
call
shr
in
push
adc
or
fmul
pop
cmp
mov
mov
lds
ss
nop
push
mov
inc
loopne
sub
push
add
retf
fs
nop
inc
scas
sbb
adc
mov
in
inc
or
lock
push
dec
lock
movs
push
xchg
inc
or
and
lock
add
cmovs
popa
in
js
mov
push
mov
inc
call
test
inc
sbb
call
jmp
cs
jae
lock
dec
fmul
xor
sub
(bad)
mov
push
cmp
xor
xchg
dec
push
inc
mov
push
clc
lods
pop
dec
pop
popf
cli
js
cmp
push
scas
cld
scas
mov
push
xchg
push
adc
js
push
aaa
sbb
dec
push
fldenv
in
iret
or
push
js
retf
xchg
cmps
sbb
jmp
or
sub
and
rcl
ret
je
adc
adc
sub
xchg
inc
(bad)
fadd
sbb
mov
sub
mov
mov
rol
push
inc
adc
rcl
ret
aam
or
sub
xchg
inc
movs
sbb
or
ds
aas
cmp
jbe
dec
rcpps
inc
add
push
inc
inc
jo
lods
add
lock
pusha
fcomp
adc
push
loope
adc
add
jge
imul
out
dec
call
adc
js
cwde
in
int3
sar
push
push
cmp
dec
leave
stc
sub
clc
adc
or
add
cmps
inc
jmp
jge
jb
mov
xchg
mov
adc
cld
hlt
jae
mov
sub
mov
inc
sar
or
js
dec
sub
mov
jmp
push
fnstsw
loope
jno
mov
rcl
hlt
mov
push
or
dec
push
test
mov
popa
data16
cs
dec
jg
push
call
pop
add
xor
pop
adc
out
ror
mov
aas
or
ss
fdiv
es
xor
sub
loopne
xchg
in
stos
sub
mov
ins
push
idiv
pop
add
sub
xor
push
sbb
adc
pop
or
shr
fmul
ins
lods
dec
xchg
sub
or
inc
aad
mov
data16
jl
or
mov
xchg
mov
and
rol
mov
(bad)
sar
fidiv
sub
pusha
sub
ret
lock
jmp
clc
or
or
cs
add
mov
add
xor
ins
mov
jo
lds
inc
jo
or
and
dec
loope
gs
fisub
jecxz
lods
wbinvd
dec
jp
mov
sbb
mov
bound
jne
pop
sbb
lods
dec
inc
(bad)
out
in
shl
sbb
loop
jl
dec
pop
dec
cmp
and
inc
ds
and
and
inc
mov
cld
fisttp
test
jne
cmp
push
rcr
cmp
push
push
push
push
push
push
jg
stc
mov
es
dec
daa
add
lea
push
pusha
or
fsubr
dec
and
loopne
and
or
push
mov
and
dec
sub
jg
pop
jnp
aad
test
ja
jne
and
sbb
retf
or
clc
ja
add
mov
sub
nop
pusha
sub
(bad)
jnp
mov
mov
mov
jae
cmp
jle
inc
sub
or
and
ss
sbb
ins
add
dec
nop
jno
mov
ret
rcr
das
push
and
fcomp
pop
and
cdq
hlt
sbb
je
jo
out
or
nop
out
adc
outs
int
sar
shr
fbstp
add
inc
cmp
jne
xor
or
mov
sub
jecxz
addr16
mov
add
call
sbb
sbb
adc
cmp
sbb
add
add
push
(bad)
cli
movs
xchg
ds
xchg
inc
jge
push
dec
mov
push
stc
fimul
jg
sbb
push
jl
xor
fsub
push
adc
fwait
test
sbb
fimul
mov
jo
xor
into
xor
das
(bad)
jmp
push
jp
ds
dec
shr
sub
dec
cmp
(bad)
rol
jl
cmp
cmps
ja
sbb
pop
cdq
pop
sub
ins
clc
je
sub
(bad)
push
push
fild
in
pop
inc
cmc
push
cwde
sbb
jmp
xor
cmp
sbb
not
and
push
sbb
mov
cmp
mov
cmp
jne
mov
inc
inc
or
cmp
and
(bad)
lock
adc
jmp
mov
iret
or
je
dec
outs
adc
shl
inc
pop
dec
add
ja
jb
xchg
or
call
adc
test
inc
xchg
(bad)
xor
push
jmp
or
and
rcr
imul
xor
cli
or
jp
xor
xor
shr
xchg
push
in
pop
js
sub
xchg
push
add
dec
jmp
cdq
push
popa
mov
sub
cdq
add
test
fcmove
and
sti
add
or
shl
dec
fstp
xor
jne
scas
push
cmps
pusha
iret
pop
lods
add
(bad)
xchg
cmp
inc
jmp
push
jbe
add
adc
inc
push
loop
mov
arpl
sbb
je
lods
les
ret
outs
or
jg
mov
ret
lock
ja
fld
xchg
adc
clc
pop
or
jmp
scas
xor
sub
add
or
sub
xor
rcr
shl
mov
mov
and
sbb
xor
or
adc
lock
inc
scas
mov
adc
push
lods
xchg
mov
out
(bad)
fcom
or
fcom
mov
imul
add
in
sar
dec
pop
mov
push
mov
and
sub
outs
hlt
jb
pop
sub
cmps
sbb
cmp
mov
idiv
inc
push
scas
sub
scas
push
lock
cld
mov
mov
mov
stos
ror
add
jmp
jg
outs
jnp
ja
jae
mov
mov
(bad)
lea
idiv
xchg
xor
aad
adc
cmp
cmp
jne
ret
fiadd
sbb
push
adc
or
nop
adc
mov
enter
ja
dec
and
jne
pop
rol
lods
ins
push
add
add
add
fwait
push
dec
outs
push
cmps
add
addr16
movs
sbb
call
mov
cld
imul
leave
adc
push
in
adc
add
leave
add
inc
jb
add
add
aam
sub
mov
inc
int3
jecxz
sub
inc
jb
add
bound
dec
pop
push
push
sbb
mov
pop
dec
mov
add
xor
xor
mov
leave
stc
ja
sbb
movs
popa
ins
bound
dec
adc
retf
aas
inc
rol
in
add
stos
add
jmp
cmp
xchg
je
mov
es
(bad)
(bad)
cmps
mov
jo
inc
lods
leave
sub
jp
sbb
mov
push
add
push
lds
cmp
and
sub
ins
or
stos
test
fisubr
and
test
sbb
dec
or
out
and
xor
aam
cmp
push
aam
jo
and
push
and
call
outs
or
sub
js
pop
jmp
adc
mov
inc
push
or
xchg
lock
ret
xor
mov
or
sbb
adc
xor
mov
sbb
es
push
ret
jno
add
and
pop
push
(bad)
mov
mov
mov
loop
inc
test
mov
or
jns
or
mov
(bad)
jecxz
inc
jmp
jge
xchg
add
inc
shr
inc
(bad)
loopne
dec
and
xchg
ins
xor
fimul
ror
mov
mov
data16
popf
pop
jne
movs
pop
test
stos
lock
add
inc
pop
sub
ins
sti
inc
mov
(bad)
lods
jl
adc
nop
jecxz
pop
daa
push
xor
mov
pop
rcr
add
imul
sub
repnz
add
cmp
rcr
lea
(bad)
sti
add
mov
stc
neg
sbb
arpl
mov
push
ret
push
jns
or
or
gs
pop
rep
add
or
mov
xor
pop
push
dec
add
bnd
jg
jl
sbb
pop
cmp
adc
pop
test
sbb
iret
es
xchg
jbe
and
push
push
push
sbb
nop
dec
je
mov
bound
xor
push
or
fcom
mov
push
inc
fsubr
ret
add
je
mov
cmp
jge
or
jl
and
sub
rcl
and
outs
mov
sbb
inc
mov
je
test
mov
addr16
fdivr
xchg
std
jge
push
cli
xor
imul
sub
push
or
sbb
push
movs
inc
fmul
add
aad
cmp
ins
mov
inc
mov
scas
out
hlt
imul
push
jbe
sbb
mov
dec
mov
mov
pop
sub
add
push
outs
dec
add
push
mov
cld
push
push
ret
pop
mov
push
mov
sbb
add
xchg
add
push
scas
fcom
adc
push
aaa
sub
and
and
add
cdq
and
lock
es
jmp
cmp
scas
cs
and
bound
jl
pop
jbe
pop
mov
jbe
ret
arpl
cdq
dec
out
and
loope
add
push
out
xor
xchg
je
dec
or
adc
pop
jmp
jle
cmps
adc
add
xor
mov
or
push
repz
pusha
(bad)
fcmovnbe
xchg
dec
sub
mov
nop
sar
push
jmp
or
shl
mov
out
or
sub
cmp
ins
xchg
inc
aad
pop
sbb
pop
ds
fiadd
sbb
pusha
inc
es
cmp
and
inc
push
sbb
add
enter
push
jnp
sti
into
call
sbb
xor
cmps
mov
fsubrp
(bad)
sbb
inc
mov
iret
or
shr
push
enter
loopne
push
push
test
push
sbb
sbb
sti
push
fs
cdq
or
out
movs
pusha
push
dec
push
inc
scas
dec
add
or
movs
sti
fcmovnbe
push
xchg
outs
mov
mov
sbb
loopne
int
xor
mov
dec
dec
je
push
neg
por
pop
int3
in
or
daa
lahf
cmp
mov
vmovshdup
sub
inc
push
lds
pop
add
fwait
xor
cmp
ror
or
call
jl
xor
div
dec
stc
in
(bad)
jnp
or
push
inc
add
cmp
mov
mov
ja
xor
dec
pop
cmp
cmps
xchg
sbb
out
jp
(bad)
pop
sub
mov
pop
icebp
jne
or
ret
fwait
jmp
dec
pop
or
jmp
and
or
add
cmp
arpl
pavgw
or
fmulp
xchg
or
inc
(bad)
neg
add
push
add
xor
loope
and
movs
(bad)
stos
cmp
push
mov
clc
inc
add
and
dec
sub
shl
loope
xor
xor
sub
clc
into
adc
and
add
sub
add
neg
fmul
jmp
adc
test
inc
pop
mov
adc
cmp
mov
dec
hlt
repz
inc
jbe
out
cmp
jo
mov
pusha
push
push
clc
repnz
inc
push
add
pop
cld
stc
test
enter
xchg
push
or
fnclex
test
sbb
jp
push
mov
ins
sbb
add
and
xor
jmp
sbb
pop
add
call
adc
fwait
outs
call
mov
cmp
inc
cmp
mov
or
mov
fstp
out
cmp
shl
xor
ror
sbb
adc
sbb
sub
cdq
add
ins
mov
xchg
ror
xor
push
lea
push
inc
fidiv
or
mov
adc
sub
xor
lds
xchg
sbb
mov
add
dec
cmp
add
xchg
xor
pop
inc
js
mov
sub
jmp
jecxz
ja
cwde
or
call
adc
sbb
dec
mov
inc
inc
mov
push
sub
adc
pop
ja
ror
mov
mov
mov
dec
xlat
mov
fsub
and
jo
adc
mov
clc
push
cmp
aad
movs
or
jmp
inc
arpl
adc
stos
lods
pop
loop
mov
adc
js
lods
sub
adc
push
jae
das
or
mov
mov
(bad)
or
adc
(bad)
mov
push
and
jo
push
add
(bad)
xchg
ds
add
adc
test
fwait
cs
pop
add
ins
jmp
or
inc
sbb
xchg
add
lods
mov
jne
sub
test
adc
add
test
imul
sbb
(bad)
jmp
enter
mov
popf
(bad)
push
dec
jbe
fdiv
fild
push
cs
adc
add
jae
imul
push
jne
ja
inc
cmp
call
lock
jmp
mov
cmp
daa
adc
jmp
mov
sbb
and
adc
dec
jmp
gs
add
jmp
push
xor
test
push
outs
pop
push
dec
add
sbb
push
cdq
jb
mov
push
mov
leave
into
xlat
xchg
mov
xor
(bad)
xor
jb
add
add
xchg
leave
or
enter
and
and
jmp
or
add
or
jno
and
add
ret
call
xchg
js
add
icebp
dec
rol
loope
xor
sub
ins
sbb
pusha
ins
pop
(bad)
push
aas
mov
es
dec
xor
loop
int3
mov
mov
inc
cmp
shl
ror
imul
loope
clc
test
jne
and
add
xchg
(bad)
cmp
sub
pop
rcl
in
adc
push
or
and
aaa
mov
sbb
push
add
jno
scas
gs
cmp
jp
movs
ja
pop
pop
and
aas
imul
push
cmp
and
or
lock
dec
or
adc
out
clc
push
mov
sub
mov
jecxz
sbb
jb
xchg
mov
sbb
ror
add
cmp
jl
sbb
cmp
jp
sar
aaa
or
jne
fs
cmp
adc
retf
add
mov
aaa
dec
jne
pop
jne
inc
dec
and
sub
push
ins
lea
call
ja
stos
mov
aaa
cmp
adc
pop
push
sahf
and
jne
inc
fiadd
push
add
fisttp
retf
add
in
push
sbb
mov
inc
xchg
xchg
faddp
pop
pop
jg
je
jmp
cmp
ds
jecxz
cmp
and
cmp
je
loopne
clc
mov
fist
jae
adc
push
sahf
pop
je
pop
je
inc
loope
mov
push
jmp
adc
ss
fmul
bound
aas
clc
addr16
sub
mov
jae
push
adc
mov
dec
and
cmp
mov
and
int
jae
shl
mov
xlat
sbb
push
cmp
add
cmp
pop
mov
dec
mov
js
sub
ror
les
adc
div
xor
sub
or
mov
jmp
and
rol
addr16
ret
push
popa
je
or
call
ror
mov
cld
xor
ror
mov
ds
or
sub
sub
test
jne
cmp
fsub
push
lea
mov
ds
mov
jle
push
jne
lea
and
dec
mov
std
test
adc
out
adc
add
xor
ins
pop
jnp
stos
or
nop
inc
and
push
jp
push
xlat
jp
loopne
xchg
mov
cmps
shl
and
sbb
fidivr
inc
push
cmp
and
sub
cs
in
jns
xor
pop
jne
inc
outs
das
pop
mov
icebp
adc
(bad)
mov
aam
cs
xchg
xor
mov
enter
test
adc
js
lods
adc
and
cmps
add
call
ret
add
and
push
lds
cmp
or
push
fiadd
sbb
cmp
addr16
jne
out
jnp
les
bswap
add
inc
sbb
and
sub
mov
xchg
clc
cld
xchg
ss
push
loop
add
shl
add
dec
mov
movs
sbb
fs
sub
mov
mov
xchg
sbb
fild
jecxz
mov
fisttp
sub
mov
mov
aaa
mov
(bad)
out
int3
fsub
enter
pop
aad
jle
pushf
ror
jle
shr
pop
and
inc
pusha
fnstsw
and
mov
dec
push
jo
cmps
xor
outs
dec
push
dec
enter
ret
or
movs
aas
jp
xlat
or
mov
and
loop
push
scas
push
retf
sub
push
ins
mov
fmul
inc
cmp
js
mov
rcr
xor
(bad)
(bad)
in
test
mov
add
cmp
addr16
sbb
je
scas
inc
test
daa
in
and
fld
jno
or
fmul
push
adc
nop
mov
je
sbb
adc
imul
push
pop
ror
xor
add
dec
pop
push
cld
jmp
push
mov
dec
dec
and
or
cmp
cmp
push
movsx
and
jmp
mov
test
sbb
sub
add
jmp
(bad)
cmp
adc
leave
jae
neg
and
pop
jge
sub
adc
movs
cmp
jnp
and
in
or
mov
ins
jl
or
jno
pop
cmp
jmp
adc
or
shr
jp
ret
or
xor
pop
aaa
adc
xchg
mov
add
push
stos
xor
mov
loopne
sub
xor
fstp
iret
mov
sub
sbb
adc
adc
out
data16
add
pop
fucomip
xor
dec
and
retf
and
lea
xor
adc
arpl
das
sbb
jmp
inc
mov
pop
aas
cmp
xlat
sar
cmp
push
xchg
fwait
jmp
add
retf
inc
jl
out
test
sub
in
pop
or
mov
xor
dec
cmp
adc
fidiv
ret
pop
or
or
xor
enter
out
add
or
or
retf
sub
add
pusha
mov
ss
(bad)
pop
jae
push
scas
and
sbb
add
or
dec
inc
xchg
das
sahf
xor
pop
sub
inc
push
ins
push
je
mov
inc
cs
mov
inc
cmp
jne
jmp
sbb
sbb
jmp
dec
jbe
inc
xchg
test
mov
or
mov
jp
shl
add
add
mov
js
adc
jo
fiadd
jmp
sub
sub
or
repz
push
pop
aas
jb
xor
dec
push
mov
mov
push
xor
or
xchg
sbb
or
add
test
dec
jno
aaa
popa
fcomp
repnz
inc
pop
cmp
and
inc
mov
sub
int3
xor
in
inc
pop
cmp
(bad)
test
xchg
add
cmp
imul
icebp
ins
adc
adc
jbe
(bad)
push
add
fst
fdivp
outs
outs
mov
movs
pop
ret
or
mov
mov
aaa
in
mov
sub
out
lods
add
js
arpl
jl
xchg
or
sub
loopne
jge
bound
outs
rcr
cmp
js
xor
cdq
neg
fcmovbe
pop
sub
jno
(bad)
mov
xchg
mov
cmps
imul
sbb
xchg
push
adc
or
adc
push
test
arpl
xchg
or
shl
aad
shl
adc
push
mov
dec
xchg
in
cmps
adc
movs
jmp
stos
imul
and
call
aad
rcr
xchg
lock
sub
jmp
movs
sbb
dec
mul
pop
dec
in
add
push
jo
cmc
dec
inc
pushf
aad
icebp
pop
fwait
add
and
cmp
test
sub
adc
rcr
pop
xchg
pop
dec
push
or
sbb
sub
test
and
call
push
mov
iret
sbb
adc
pop
es
push
fild
mov
int3
and
js
movs
mov
jbe
inc
loop
frstor
or
adc
push
lods
(bad)
cmp
rol
in
adc
pop
mov
lock
push
scas
add
adc
rcl
sbb
mov
push
inc
xor
mov
adc
xor
inc
dec
and
inc
dec
mov
mov
or
lods
out
adc
nop
fiadd
push
add
jb
lods
sub
sub
clc
out
stos
xchg
fisttp
(bad)
xchg
fmul
inc
cmp
pop
in
sar
sbb
or
xor
ins
mov
jmp
sbb
inc
xor
clc
retf
js
push
push
enterw
jmp
cmp
fimul
xchg
pop
into
and
test
or
pushf
pusha
das
push
sub
jb
xchg
sub
mov
cwde
xchg
jl
test
mov
repnz
mov
jecxz
adc
or
sub
inc
push
inc
pop
mov
mov
ror
xor
push
icebp
sub
add
cdq
jne
scas
or
test
scas
loope
adc
sbb
jmp
test
push
pop
pop
cmp
xor
and
mov
mov
rol
mov
pop
jnp
add
in
test
sbb
and
je
aam
dec
ror
(bad)
pop
mov
call
jmp
(bad)
jmp
mov
xor
lock
mov
addr16
ins
push
push
fs
push
popa
mov
(bad)
sbb
xor
cld
ds
imul
call
dec
adc
push
stos
inc
inc
cmp
ins
fnstcw
push
ret
cmp
mov
jl
(bad)
and
rcr
pushf
imul
cmps
and
dec
mov
les
jbe
jmp
or
shl
aad
sub
add
pushf
aaa
sub
push
mov
hlt
fisttp
es
and
loope
xor
or
sub
push
jnp
aam
push
mov
push
push
dec
add
ins
pop
shr
ins
jg
add
and
(bad)
mov
xchg
mov
jg
sbb
pusha
and
je
mov
pop
clc
dec
dec
and
mov
push
repz
mov
mov
ins
call
pop
xor
out
push
cmp
jecxz
stos
pop
aas
inc
ja
lea
mov
pop
pusha
mov
add
and
dec
mov
push
and
jo
inc
push
dec
dec
call
push
fcmovnb
add
mov
sub
sar
sub
pusha
and
xchg
adc
sahf
cmps
fs
retf
push
dec
stos
daa
or
cmp
or
ret
sub
mov
and
repnz
cmps
into
mov
mov
mov
(bad)
sar
pop
push
mov
test
lds
out
test
mov
cmp
jbe
push
stos
mov
adc
push
xchg
or
fdivr
push
div
repnz
push
pop
mov
fld
js
sbb
retf
ja
mov
jne
or
xor
cmps
add
and
push
hlt
movzx
sbb
sbb
or
adc
rcr
cmp
pop
rcl
or
lock
cmp
xor
stos
mov
pop
ror
push
lods
jb
stos
sub
and
sbb
stos
jno
add
sub
pop
cmp
outs
jmp
fimul
rol
lock
mov
das
neg
dec
xor
push
xor
ror
push
mov
call
fwait
or
or
or
pushf
movs
adc
xor
enter
jle
test
xor
cdq
add
mov
scas
adc
movzx
sub
lods
out
jne
(bad)
add
mov
and
add
sub
out
not
and
stos
iret
or
div
jns
cs
push
ss
(bad)
or
or
adc
movs
push
pusha
or
sub
push
add
push
inc
add
pop
data16
neg
and
(bad)
jbe
push
pop
push
shl
mov
cld
(bad)
push
cmp
jne
pop
and
(bad)
jb
ja
xor
out
push
jecxz
xor
mov
push
sbb
pop
mov
mov
and
retf
push
dec
dec
lods
test
or
sub
shl
jbe
movs
packssdw
adc
add
cmps
xor
mov
dec
jl
cdq
and
inc
mov
fild
or
pop
adc
mov
jno
data16
or
cmc
sub
sar
test
neg
cmc
add
dec
mov
sub
xchg
add
pop
lea
or
mov
les
call
neg
and
add
mov
or
test
loop
mov
or
retf
movs
jmp
leave
add
loop
xor
push
lea
je
cmp
push
xchg
xor
mov
int
or
hlt
retf
jns
ret
iret
pop
push
jns
add
or
jnp
adc
les
inc
ja
or
xlat
and
push
cwde
jo
push
pop
jae
jmp
(bad)
sub
mov
sub
lock
mov
in
rol
inc
fbstp
(bad)
sbb
mov
push
sub
fidivr
aaa
(bad)
and
or
xchg
inc
mov
(bad)
xor
add
enter
(bad)
xchg
aas
shr
cmps
xchg
adc
cmp
dec
mov
pop
pop
call
mov
mov
adc
jbe
inc
rdmsr
mov
leave
mov
and
into
mov
dec
push
cmp
jne
ins
jmp
dec
add
jo
lock
aas
pop
inc
out
xor
repz
outs
(bad)
jle
ret
es
add
jle
mov
sbb
fiadd
and
pop
ret
inc
push
push
pop
out
jl
pop
pop
mov
loopne
inc
mov
pop
xor
and
(bad)
not
daa
and
mov
aam
mov
fidiv
mov
xchg
(bad)
adc
inc
adc
sub
sbb
pop
mov
icebp
jmp
or
pushf
(bad)
mov
movs
lahf
and
test
sbb
setb
nop
or
retf
(bad)
stc
and
jb
ss
add
daa
mov
enter
test
adc
add
add
xchg
imul
cmp
nop
jmp
cmps
xor
or
push
and
sbb
loop
cmp
sbb
or
add
sbb
xchg
xor
movs
inc
adc
out
or
aas
adc
lea
lea
rcl
cmp
jg
fs
mov
add
je
xor
dec
mov
ds
movs
test
jne
cmp
xchg
sub
push
sbb
cwde
xchg
xchg
in
inc
sahf
mov
mov
and
cmps
repnz
pop
sbb
mov
test
sub
mov
push
push
fadd
pop
jl
call
test
pop
sti
(bad)
ins
or
sbb
jo
pop
and
adc
mov
loop
loope
fs
mov
xor
cmp
sbb
or
xor
loop
xchg
pop
push
repz
aad
xlat
aad
mov
pop
sbb
je
pop
sub
and
test
push
inc
mov
mov
add
pusha
leave
aam
aaa
sub
cmp
push
inc
imul
or
ins
sbb
cld
or
mov
sub
test
int3
xchg
adc
loope
frstor
xor
or
mov
jmp
mov
ins
xor
mov
xor
sub
mov
mov
dec
mov
clc
(bad)
das
js
xor
pop
adc
arpl
jg
mov
mov
lods
and
inc
outs
add
mov
and
fisttp
jno
inc
gs
retf
sbb
test
adc
mov
jp
scas
mov
xor
fld
or
ret
add
or
mov
test
js
adc
sub
jmp
sub
or
adc
out
imul
shl
jl
or
jb
les
mov
out
push
inc
(bad)
jb
add
add
shl
jp
push
mov
shr
cmp
push
fld
pop
lock
daa
cmps
outs
out
jmp
pop
inc
push
xor
push
add
idiv
add
lods
or
inc
add
enter
shr
jmp
dec
imul
xor
shr
(bad)
sub
pop
je
cmp
or
add
sahf
test
nop
movs
xor
aaa
in
jne
adc
push
cmp
and
xlat
cmp
ror
(bad)
mov
and
scas
dec
adc
(bad)
cmp
ja
cwde
and
add
sub
rol
les
and
pop
pop
shr
out
test
ds
add
je
fild
dec
add
adc
mov
div
les
push
mov
xchg
inc
pusha
pop
lods
jle
aad
fiadd
fsub
ds
or
nop
je
cwde
dec
inc
inc
and
sbb
mov
or
add
icebp
inc
ins
mov
add
inc
sub
les
jge
ins
loopne
jo
test
lea
pop
lods
jb
aaa
lds
dec
inc
int
xor
call
xor
loopne
(bad)
aas
popa
sahf
add
mov
dec
nop
loopne
jmp
lds
inc
ja
push
adc
pop
xlat
test
mov
retf
pop
bound
push
pop
ss
pop
dec
mov
lea
push
mov
xlat
mov
fprem
xor
cmp
dec
jp
jns
jmp
fimul
(bad)
retf
out
aad
aam
out
or
and
add
xor
out
add
es
test
push
icebp
push
sub
lea
jle
jne
adc
and
es
pusha
dec
pop
adc
sahf
nop
jne
setae
jg
xor
or
mov
fidiv
dec
xor
jmp
add
mov
sub
or
mov
nop
push
xor
int3
dec
push
and
popf
or
inc
or
push
cdq
out
cmp
not
(bad)
pop
jne
ret
sti
xchg
sbb
mov
inc
mov
jle
ficom
add
jmp
and
push
mov
sbb
cmp
xor
pop
call
sahf
test
jmp
inc
add
fadd
pop
jns
push
push
mul
jge
pop
fisub
pushf
jge
xor
es
add
xor
pop
pusha
sub
ja
mov
repnz
sub
inc
adc
push
add
test
loopne
or
dec
inc
or
test
jne
xor
dec
pop
dec
shl
clc
ja
sbb
not
and
je
cwde
test
popa
push
clc
xor
test
mov
sub
mov
jmp
push
call
nop
int3
loope
es
push
mov
shl
push
mov
fcomp
sbb
dec
call
lods
and
cmp
call
inc
cmp
xor
mov
clc
sbb
add
pusha
loop
mov
rol
jmp
fcom
hlt
inc
ja
adc
retf
in
es
ja
push
out
adc
or
push
jmp
or
je
fild
out
push
(bad)
fisub
add
sub
adc
mov
mov
xor
push
mov
push
inc
xchg
movs
push
lods
xchg
sub
and
dec
add
outs
or
xor
call
pusha
fdiv
je
sub
repz
cmp
and
xchg
(bad)
fild
xchg
mov
daa
or
outs
pop
inc
and
and
and
dec
mov
or
xor
mov
test
and
xor
inc
stos
adc
rol
pop
sbb
jecxz
test
sub
mov
cmp
cld
push
repnz
dec
mov
mov
(bad)
adc
sahf
push
inc
or
and
repnz
jns
xchg
push
es
aas
add
push
imul
mov
mov
mov
jmp
adc
add
xlat
popf
out
add
lar
sti
fimul
cmove
or
bound
add
cs
inc
and
xor
in
daa
jmp
aaa
or
sub
mov
int
push
dec
loope
dec
pop
adc
adc
call
add
jae
add
adc
inc
mov
inc
xor
in
jb
xchg
jb
dec
aaa
push
aas
mov
imul
xlat
adc
fnstenv
sar
pop
mov
add
mov
ins
fcom
adc
jle
sub
cli
add
mov
add
lock
jle
mov
les
pop
fs
pop
mov
les
in
test
lods
je
adc
xor
inc
retf
cmp
xor
(bad)
hlt
pop
or
and
fsubr
out
imul
push
or
add
mov
jae
xor
nop
push
pop
nop
out
outs
js
daa
fbld
add
push
xor
adc
or
inc
pushf
sbb
outs
push
repz
ins
push
cmps
add
rcr
jo
in
lods
and
jl
out
or
and
out
cmps
push
out
fstp
mov
xchg
and
sbb
sbb
inc
add
fucomp
add
mov
mov
pop
xor
sbb
xchg
test
aaa
add
and
in
imul
xor
cmp
or
outs
or
cmp
and
inc
jmp
pop
mov
push
loopne
pop
xchg
shl
loopne
push
fcomp
fnstsw
fld
js
or
add
sub
jns
lods
lods
sub
aam
jp
push
call
call
inc
inc
retf
retf
test
inc
adc
rol
in
sti
sub
inc
xchg
add
into
push
shr
mov
ror
dec
sub
jbe
adc
push
lock
cmp
popf
mov
outs
mov
leave
inc
jmp
fimul
inc
sbb
fisttp
mov
cmp
or
out
sbb
js
sub
lock
add
inc
inc
repnz
sbb
lock
jo
adc
ins
hlt
inc
lock
loop
fst
add
sub
sbb
int3
inc
fs
je
push
aaa
mov
adc
and
add
imul
mov
mov
add
mov
(bad)
in
sub
mov
push
push
mov
sbb
push
or
push
adc
add
dec
push
mov
or
push
add
ins
dec
cwde
test
mov
and
int
xchg
add
mov
dec
mov
stos
mov
in
ins
ret
lea
adc
or
daa
pop
mov
shr
add
or
xchg
push
push
sub
adc
dec
adc
imul
dec
dec
or
push
add
nop
out
inc
dec
or
or
out
nop
adc
and
enter
xor
xor
iret
or
pop
cwde
dec
jmp
mov
loopne
mov
in
add
adc
inc
and
mov
popf
mov
add
jl
and
jecxz
sbb
out
or
cmps
or
ins
xor
adc
loope
pop
xor
and
enter
push
add
adc
mov
fstp
cmp
pop
sbb
pusha
loope
add
(bad)
push
jmp
scas
inc
and
adc
movs
repnz
dec
inc
pusha
hlt
push
add
push
scas
gs
loope
(bad)
cmps
push
and
lock
pop
pop
idiv
es
adc
sti
add
repnz
sahf
test
call
sbb
and
and
or
sub
pop
sub
and
jmp
pop
test
out
and
mov
xchg
sbb
fstp
or
xor
xor
and
dec
add
jo
or
lods
fld
jmp
jno
fstp
jmp
fisttp
mov
add
ja
pop
call
sbb
popf
shl
and
cmp
push
out
(bad)
sbb
and
mov
jno
scas
inc
and
js
xchg
clc
clc
mov
jge
test
and
pop
ss
loopne
dec
outs
pop
loopne
sub
fisttp
jmp
lods
ja
ret
jns
frstor
xchg
jns
scas
pusha
xchg
daa
in
cmps
fisttp
in
push
imul
fiadd
push
xchg
cmp
dec
xchg
in
sbb
pop
je
shr
sbb
mov
out
popf
dec
loopne
sti
pop
repnz
inc
or
mov
aam
pushf
sub
ror
sar
xor
adc
or
inc
popa
mov
ficom
fisttp
mov
add
xor
or
sub
ror
jp
add
xor
mov
xchg
xor
fadd
pop
ror
push
out
loopne
int3
or
daa
cmp
jmp
mov
loopne
push
push
stc
popf
pop
enter
pushf
sub
xor
add
out
mov
or
or
push
inc
jle
cmp
sub
push
xor
rcr
mov
xor
push
push
xchg
xor
sub
pop
pop
retf
cmp
jecxz
repz
outs
pusha
dec
sar
pushf
add
fisub
imul
inc
jb
push
mov
scas
pop
ret
jno
pop
sub
jecxz
cmp
inc
mov
lea
mov
adc
cmp
xor
sub
sbb
sbb
add
cdq
mov
sub
test
and
adc
mov
mov
or
fidivr
bound
inc
xchg
and
fsubr
loopne
adc
add
and
push
push
inc
add
popf
xchg
push
outs
sub
shr
mov
movs
push
or
push
(bad)
icebp
or
nop
and
mov
pop
lds
or
lds
and
int
jno
xchg
fld
mov
and
not
adc
jb
cld
pop
pop
aam
and
xor
and
std
cs
stc
and
mul
sbb
iret
js
sub
and
cld
push
add
or
(bad)
mov
lock
jg
mov
jb
rcr
dec
xor
or
and
in
mov
or
mov
pop
or
and
leave
add
jnp
inc
daa
push
inc
inc
call
bound
sub
add
jno
cmp
loopne
lock
and
mov
add
cmp
push
lock
dec
or
pop
xor
aam
xor
je
(bad)
jo
push
adc
inc
(bad)
pop
jmp
xchg
xchg
inc
loope
pop
mov
cwde
imul
push
sbb
test
and
ds
cmp
push
arpl
xchg
jl
(bad)
jmp
cli
push
test
aas
cli
aas
cmp
pop
add
push
into
imul
add
test
xchg
jmp
fstp
mov
or
cmp
jne
and
mov
data16
or
mov
push
pop
repnz
xchg
or
dec
adc
sbb
xor
mov
inc
inc
mov
test
pop
sbb
add
push
or
pop
mov
inc
xor
dec
ret
fisub
pop
or
sub
in
lea
xor
sar
aad
dec
mov
push
adc
(bad)
in
mov
jmp
xchg
cmp
cs
rcr
mov
push
test
mov
inc
je
or
es
jecxz
(bad)
dec
push
fiadd
or
lea
sub
mov
je
(bad)
jp
mov
add
lods
cmp
mov
cwde
push
xor
sbb
pop
push
mov
gs
outs
js
mov
cmp
jb
sub
add
or
sbb
loop
mov
jo
jecxz
je
cmps
jno
jl
cwde
xor
jne
or
ins
pop
ds
xchg
sahf
mov
outs
movs
stc
test
or
rol
shr
inc
xchg
push
and
dec
xor
mov
adc
pop
mov
and
sbb
adc
fiadd
addr16
mov
in
push
inc
push
xor
sbb
je
sub
cmp
sbb
push
and
jb
leave
mov
imul
pop
push
push
in
mov
jmp
into
(bad)
xor
xor
push
js
sub
out
add
popa
cmp
into
xchg
mov
popa
pop
or
inc
sub
add
cmc
cmp
add
ret
out
pop
adc
out
cwde
rcl
(bad)
fild
repnz
add
adc
push
dec
inc
pop
sub
mov
push
xchg
ret
outs
inc
jbe
and
xchg
sub
mov
sub
cmp
aam
xor
call
jb
xor
loope
popa
mov
mov
sub
jne
mov
cmp
sub
jl
neg
pop
ins
adc
lods
ror
gs
mov
push
adc
mov
add
mov
test
mov
mov
shl
sub
js
pop
inc
and
das
nop
repz
jae
lea
push
call
aaa
or
fdiv
inc
dec
pop
cmp
sar
push
add
or
rol
mov
xor
or
or
sbb
dec
adc
add
test
pop
(bad)
rcl
fld
movs
leave
pop
outs
shl
pop
rol
sti
push
xor
lods
or
or
js
movs
out
push
adc
sub
sar
pushf
test
jmp
push
dec
iret
mov
cmp
inc
xchg
add
test
fst
sbb
scas
sbb
test
sahf
movs
dec
xor
push
movs
pop
sub
and
add
jl
rcl
aaa
add
adc
sub
outs
pushf
mov
sub
sub
dec
sub
and
or
cmp
cmps
xchg
mov
test
mov
cmp
mov
push
daa
int
add
in
xchg
jb
sub
dec
xor
cmc
push
push
or
(bad)
and
sbb
sti
adc
lahf
mov
test
inc
xor
movs
sahf
jbe
jmp
mov
enter
jp
call
add
lock
sbb
out
mov
push
cmp
or
mov
(bad)
sbb
es
xchg
inc
mov
push
stos
xchg
push
pop
pop
fcom
mov
add
sbb
fcmovnb
ret
mov
mov
call
data16
adc
mov
sub
adc
test
inc
xor
xchg
lea
mov
mov
sub
sub
sub
cld
pop
push
call
outs
mov
pop
inc
ret
push
fwait
xchg
or
lods
or
mov
jecxz
jb
and
add
jb
sub
cmp
add
cmp
pop
ds
rcr
pushf
or
cld
add
dec
mov
mov
call
xor
fistp
jmp
add
xchg
mov
test
test
add
int
pop
dec
cmp
ja
add
xor
push
iret
and
test
or
or
xor
repz
shr
cmp
sub
and
sti
fcom
or
mov
push
adc
popf
xor
hlt
inc
push
pop
enter
cmp
cmp
clc
ins
sar
dec
bound
push
pop
mov
inc
imul
cmp
inc
es
adc
push
imul
push
test
sub
dec
aam
inc
sbb
and
shl
adc
fmul
sbb
jns
sub
test
cmp
cmp
aam
ins
in
adc
jno
cmps
icebp
dec
sbb
cs
mov
and
jle
cmc
mov
test
call
je
cmp
movs
cmp
mov
dec
add
cmp
imul
lds
xor
(bad)
cmc
sub
test
loope
xchg
stc
call
sub
enter
push
(bad)
loopne
cmp
cmps
ret
sub
mov
pop
pushf
sub
(bad)
int3
cmp
ret
(bad)
jb
pop
in
jne
inc
popw
sti
push
pop
mov
jno
ss
add
(bad)
jl
add
sub
push
pop
jp
ss
cmp
mov
inc
push
add
jmp
loope
je
push
push
sar
and
hlt
add
(bad)
loope
inc
movs
and
adc
(bad)
or
movzx
dec
sbb
pop
shr
sbb
outs
inc
add
das
adc
ss
cld
jb
in
bound
or
push
in
adc
pop
js
dec
sar
dec
mov
inc
inc
dec
cmp
loopne
cmp
or
fwait
sub
push
fcomp
inc
repnz
xor
add
gs
(bad)
cld
or
cmps
lds
dec
or
and
jne
(bad)
es
aaa
add
(bad)
lock
pusha
pop
push
add
out
gs
daa
add
push
cmp
jae
inc
jmp
pop
xchg
jg
or
inc
jo
dec
jb
lea
mov
push
hlt
fdivr
xchg
and
pop
mov
add
mul
scas
(bad)
jb
jno
fnstcw
adc
dec
jo
cmps
xor
stos
mov
ret
add
add
jmp
mov
pushf
sahf
lock
ds
mov
pop
hlt
or
adc
jb
ja
cli
adc
rol
out
daa
push
fild
sbb
or
xor
fld
pop
scas
rcl
xlat
out
ror
rcl
adc
enter
inc
xor
sub
push
stc
idiv
jae
cs
test
dec
stc
or
adc
or
cmp
jb
push
test
jne
test
jno
rcl
rcl
add
mov
cmc
shr
mov
(bad)
ret
ror
cmp
dec
push
or
inc
mov
dec
sbb
cs
fs
push
sbb
mov
cmp
dec
pop
scas
loopne
cmp
inc
stos
(bad)
xchg
mov
and
leave
and
lods
pop
stos
ficom
and
xchg
push
mov
mov
aas
adc
and
inc
pop
(bad)
std
stc
lahf
push
in
aam
pop
add
hlt
adc
cmp
or
push
mov
jne
push
inc
inc
clc
push
mov
jp
sbb
jmp
sbb
lods
pop
cmp
and
retf
jle
out
or
test
js
js
into
fcmovu
xor
(bad)
sub
and
add
sbb
push
aam
rol
js
xor
sub
sbb
sar
inc
addr16
add
rcr
test
out
jmp
test
jmp
mov
loopne
mov
jne
loop
sub
push
cdq
inc
push
xor
push
jne
jnp
add
fsub
or
clc
xchg
inc
fcomp
add
mov
jmp
sbb
fiadd
(bad)
jl
(bad)
in
(bad)
les
sbb
call
inc
sub
pop
sbb
je
js
out
loopne
xchg
mov
pop
inc
lea
and
push
fimul
scas
adc
sub
sbb
(bad)
lods
popa
push
(bad)
push
stc
jecxz
push
out
push
imul
xchg
call
pop
rcl
pop
inc
lods
sbb
pop
sbb
pop
cdq
mov
xchg
(bad)
popf
jne
ds
loope
sub
mov
inc
jae
rcl
sub
add
push
inc
dec
repnz
loopne
sub
in
nop
or
pop
ret
push
les
push
and
mov
daa
or
pop
add
imul
pop
or
jl
sbb
mov
mov
xor
dec
dec
sub
xchg
jmp
push
sub
cmp
shr
in
inc
jbe
jge
xchg
mov
jp
mov
aaa
hlt
add
repz
mov
imul
and
fbstp
xchg
mov
mov
mov
pop
mov
jae
adc
mov
mov
sub
mov
daa
or
gs
jb
mov
test
add
mov
lock
pop
pop
adc
pop
mov
aam
xchg
and
pop
popa
rcl
shl
xlat
cmc
adc
outs
adc
icebp
push
xor
mov
adc
sti
xor
and
jge
jl
add
(bad)
out
(bad)
and
dec
sahf
mov
test
mov
push
mov
xor
mov
or
add
cld
cmp
mov
je
sub
mov
(bad)
(bad)
inc
and
fmul
(bad)
leave
and
adc
xchg
sbb
rcr
fisubr
cmps
je
in
xchg
jg
repz
movs
pop
(bad)
int3
mov
mov
loopne
(bad)
and
mov
sbb
sbb
ret
(bad)
clc
xor
xor
mov
shl
call
test
add
add
hlt
sub
fucomi
mov
out
cmp
je
and
inc
mov
push
ins
sub
or
mov
or
icebp
mov
mov
movs
dec
repz
sub
add
dec
repz
add
jmp
jmp
or
mov
rol
sbb
test
int3
xor
add
push
fnsave
les
ss
sbb
repz
loopne
xor
ret
adc
scas
popa
loop
push
push
loopne
pusha
push
outs
or
pop
imul
sub
test
jmp
mov
jp
mov
jmp
cvtdq2ps
gs
lea
fstp
leave
and
clc
and
pop
cmps
xor
call
push
cmp
add
jge
cwde
cmp
push
fist
add
xchg
cmp
or
mov
add
daa
xlat
add
pop
mov
jle
pop
movsx
cs
frstor
mov
adc
xor
adc
pop
pop
mov
mov
ret
sahf
jbe
js
fsubr
xor
jg
xor
dec
mov
test
test
ret
rcr
jno
aad
jl
push
or
pushf
ins
pop
scas
jg
in
xchg
mov
test
or
adc
ret
lock
in
inc
test
les
in
cmps
js
sbb
or
mov
adc
jbe
add
add
out
std
loopne
push
mov
inc
push
les
(bad)
js
pop
sub
ret
fiadd
pop
jge
xor
ret
xchg
and
push
pop
add
mov
mov
add
pop
sub
mov
and
push
xor
cmp
dec
ret
fiadd
ins
add
sahf
pop
stc
and
and
or
rol
icebp
jns
or
or
test
jne
push
sub
adc
repz
icebp
jne
cmp
dec
cmp
fcmovnu
out
mov
rol
pop
not
add
sbb
adc
xor
in
add
or
sahf
mul
or
adc
pop
adc
and
mov
les
sub
imul
cmp
popf
ror
dec
mov
mov
mov
add
ffree
push
ss
fidiv
and
jo
js
push
ret
cmp
mov
mov
rol
cli
enter
and
outs
mov
cmps
jle
in
adc
dec
jns
cmp
xor
nop
ret
mov
popf
inc
mov
or
push
push
xchg
adc
call
cld
push
add
arpl
adc
sub
clc
adc
popa
movs
stc
xor
dec
test
sub
loope
sub
or
pusha
mov
mov
mov
ins
dec
sub
(bad)
in
push
fadd
cmp
jne
add
jmp
jp
jno
dec
push
in
sbb
cli
mov
mov
dec
mov
jp
jmp
fcmovne
jp
aam
add
xchg
inc
and
or
in
jnp
jge
sub
jo
fidivr
xchg
cld
inc
adc
xor
popa
inc
push
xchg
add
ds
add
xor
idiv
das
mov
in
in
sbb
xchg
mov
jg
sub
pusha
add
ins
addr16
shr
mov
push
mov
inc
mov
mov
fs
or
xlat
or
mov
aam
repnz
add
jne
or
into
xor
push
loope
bound
pop
mov
mov
imul
push
(bad)
push
aam
mov
sbb
std
or
and
dec
xchg
ret
xchg
popa
mov
cmp
mov
cmp
or
inc
cmp
lods
mov
dec
xor
(bad)
mov
pop
mov
dec
adc
cld
(bad)
pop
in
shl
fst
sbb
xor
ss
jne
ss
or
js
lds
jne
mov
sbb
mov
jb
push
xchg
mov
jae
or
mov
xor
loopne
daa
cmps
xor
sbb
rcr
inc
imul
ret
test
push
aam
arpl
pop
loope
test
jbe
fimul
cli
sub
fsubr
lea
pop
add
or
mov
ror
loope
sbb
jecxz
ret
xor
sbb
sub
shl
inc
loopne
arpl
loopne
mov
adc
jmp
test
stos
mov
fldpi
test
or
xor
push
adc
lock
test
and
add
sub
(bad)
xchg
push
push
pop
mov
add
cmovnp
call
rcr
sub
xor
aas
lods
inc
sub
or
arpl
cmp
cwde
icebp
iret
pusha
addr16
adc
or
push
xor
adc
mov
js
js
mov
or
dec
adc
pusha
enter
mov
inc
xlat
popa
pushf
jnp
mov
jge
retf
sbb
sbb
or
or
add
mov
ins
add
cmp
jp
mov
add
xor
inc
jns
jne
addr16
mov
cmp
push
je
push
enter
or
inc
fs
dec
test
jb
mov
scas
add
jecxz
ins
sbb
pop
mov
pop
mov
dec
(bad)
pop
sub
(bad)
pop
jns
rcl
scas
and
mov
xor
or
push
mov
test
sbb
pop
dec
mov
mov
mov
and
inc
inc
dec
lahf
loope
rcl
and
push
sbb
mov
ds
lahf
jne
and
icebp
pop
sbb
int3
or
pop
jmp
xor
adc
popf
or
sar
add
cmps
(bad)
mov
pop
mov
rcr
test
adc
push
(bad)
jne
inc
or
call
sbb
xchg
test
push
or
neg
jle
pop
adc
rol
test
mov
cmps
fs
popa
cdq
sbb
and
imul
xor
adc
sub
inc
es
call
jle
sbb
mov
cwde
sbb
pop
push
or
dec
sbb
xor
push
jns
add
ins
mov
xchg
push
or
push
and
in
(bad)
fisubr
push
mov
cmp
out
xor
jecxz
jo
mov
ret
bound
dec
dec
push
mov
add
ret
xor
popa
adc
nop
pop
mov
daa
loop
mov
mov
or
in
or
xor
mov
inc
xor
sub
xchg
pusha
push
jmp
in
adc
test
adc
jo
xor
test
into
push
push
dec
pop
push
nop
mov
sub
or
add
popa
or
jo
enter
std
sbb
icebp
out
pop
dec
lock
icebp
lea
stos
mov
(bad)
sub
jmp
fs
jmp
loopne
mov
jo
cli
mov
or
pop
cmp
into
ja
call
add
jmp
mov
cmps
fimul
(bad)
push
add
mov
loope
add
ins
mov
or
inc
mov
mov
mov
in
and
cmp
loope
push
jg
inc
and
cmc
out
fmul
xor
sbb
and
or
add
fidivr
in
or
jmp
or
sbb
lds
je
add
xor
adc
sub
clc
pop
ins
call
and
jmp
movs
push
in
sbb
je
lods
jmp
xor
jno
jmp
mov
mov
jmp
pop
jle
lods
divps
push
aas
mov
pop
mov
(bad)
mov
cmps
aaa
add
add
or
pop
push
in
je
adc
sbb
inc
or
les
les
xor
(bad)
sub
ret
add
sbb
imul
ja
jne
adc
xchg
mov
xor
push
add
std
es
or
cmp
push
add
push
push
or
pop
out
fwait
mov
ret
adc
and
adc
lock
data16
push
or
jl
inc
rcl
inc
push
cs
pop
lock
jg
(bad)
movs
adc
cdq
inc
inc
dec
rcr
inc
and
(bad)
sbb
sbb
mov
inc
adc
or
cwde
adc
adc
pop
xor
and
sti
ds
or
data16
bound
or
dec
aas
outs
cmp
ret
jge
mov
adc
rcr
push
push
fsubr
inc
push
mov
inc
add
fidivr
and
xor
mov
adc
pop
arpl
cs
lahf
enter
pop
mov
shl
movs
ds
mov
leave
jb
add
pop
sub
repnz
gs
sahf
shl
cmp
sub
arpl
fwait
pop
or
mov
dec
clc
xor
rol
mov
lds
enter
adc
inc
dec
aam
(bad)
pop
leave
test
jb
add
push
dec
and
movs
xchg
cmp
(bad)
push
and
pop
inc
push
and
jo
push
mov
pop
or
enter
adc
adc
inc
ins
or
jecxz
dec
and
call
push
add
mov
icebp
mov
ins
enter
cmp
rol
pop
or
inc
or
rcl
xor
cdq
fs
xor
sub
fs
dec
inc
inc
inc
shl
test
call
sbb
stos
inc
xchg
popa
add
xchg
push
test
cmp
adc
xor
adc
aam
jnp
fist
(bad)
and
movs
add
cmp
into
ja
je
dec
pop
sbb
fdivr
int
xor
or
sbb
pop
dec
and
cmp
jmp
jbe
imul
inc
scas
sbb
adc
enter
fisub
test
pop
dec
mov
push
jo
or
fisttp
push
push
sub
addr16
inc
loope
jmp
mov
(bad)
movs
in
out
sbb
or
out
lds
or
retf
adc
add
mov
and
xor
lea
repnz
inc
inc
inc
call
push
adc
and
or
or
cmp
sbb
(bad)
mov
mov
shr
dec
in
or
ret
rdtsc
retf
data16
shl
nop
scas
and
add
add
or
aaa
xor
push
bts
pop
loopne
retf
inc
imul
stc
push
push
sbb
add
or
int3
xor
lea
pop
or
sub
iret
add
daa
sub
and
mov
xchg
sub
cmp
or
add
push
dec
shr
movs
sbb
push
stos
in
in
cmps
add
push
sub
cmovl
fsub
push
test
xchg
or
push
fadd
fdivr
nop
cmp
nop
or
clc
test
stos
cmps
or
sub
adc
sub
and
sbb
cmp
or
adc
or
mov
sbb
mov
out
popf
in
adc
push
or
and
hlt
cld
sbb
push
popa
les
scas
sub
adc
adc
nop
cmp
cmp
sbb
adc
sub
push
test
sbb
imul
xchg
pop
add
add
sub
popf
stos
sub
(bad)
imul
pop
sbb
xchg
mov
imul
push
jb
ins
je
test
push
or
add
push
add
stos
je
outs
jle
xor
mov
xor
mov
push
xor
sbb
add
sub
add
dec
retf
push
nop
mov
pop
repnz
xchg
or
lea
aam
je
icebp
pop
mov
call
xchg
je
mov
dec
inc
xlat
mov
xor
sbb
sbb
add
push
add
sub
loope
jecxz
jmp
movs
shr
cmp
mov
sub
add
mov
imul
jnp
xor
sub
xor
mov
loope
sar
stos
mov
mov
and
je
loope
pop
dec
or
inc
pop
rcr
fdivr
mov
sub
push
push
ss
xor
dec
push
or
sub
sti
sbb
push
inc
sbb
es
pop
jg
lds
lods
std
call
lock
xor
mov
or
call
push
or
jmp
dec
mov
sbb
ins
sbb
out
neg
imul
or
mov
loope
xchg
jmp
adc
inc
sub
xor
adc
jmp
and
ret
jmp
jo
add
and
xor
cld
push
jo
cmp
dec
and
push
push
add
add
mov
rcpps
stc
adc
mov
aam
mov
add
inc
lahf
jne
jecxz
jbe
cmps
add
sbb
fdiv
sbb
xchg
fist
inc
sbb
push
mov
inc
push
ss
icebp
pusha
movs
cmp
movs
and
es
cmp
fcom
mov
pop
pusha
mov
add
fucomip
inc
sbb
mov
outs
sbb
or
enter
jmp
or
xchg
sbb
or
add
inc
outs
dec
sub
dec
or
rcl
adc
dec
or
add
popa
daa
loope
or
(bad)
pop
jmp
and
and
jl
fsubr
pop
jle
mov
icebp
adc
lods
lea
push
bound
leave
sbb
push
into
inc
mov
inc
loopne
inc
popa
jmp
lea
xchg
hlt
sub
cmp
push
push
jb
loopne
pop
jb
add
sbb
or
mov
jo
fwait
adc
ins
call
mov
adc
add
mov
mov
adc
int
push
pop
add
push
jecxz
inc
push
add
data16
push
or
add
and
xor
push
pop
ja
sbb
gs
or
and
jb
inc
xor
add
jno
out
inc
push
imul
les
adc
pop
inc
fstp
sub
push
(bad)
ja
push
dec
loope
inc
rcl
pop
pusha
adc
sbb
push
imul
adc
out
sub
xor
push
push
sbb
mov
mov
test
cmp
jne
ds
js
imul
mov
ret
aas
xchg
sbb
jl
in
(bad)
lock
lds
pop
mov
xor
add
adc
jnp
or
sub
xor
aam
jnp
mov
pushf
dec
adc
cmp
jmp
cmp
ret
int3
addr16
sahf
or
xor
cmp
mov
loope
mov
je
in
mov
xlat
push
adc
ret
in
pop
or
aam
xchg
test
js
dec
jl
enter
lods
mov
nop
mov
ret
and
or
pop
or
inc
mov
xor
pop
push
mov
push
fidivr
cs
ret
adc
and
push
hlt
adc
rcr
data16
mov
sbb
out
mov
xor
pop
in
cmps
dec
call
push
sar
lea
cmp
div
rcr
rol
adc
movs
in
jmp
out
mov
test
jne
dec
fcmove
int3
cmp
jmp
cli
cmp
leave
les
ret
popf
sbb
fimul
add
pushf
ret
sbb
fcmovu
mov
fdivp
inc
adc
sub
enter
fwait
jo
enter
test
add
ja
(bad)
push
jno
(bad)
enter
dec
ss
sbb
cld
imul
rcr
cwde
test
(bad)
rol
loope
jmp
cmp
rol
bound
sbb
and
or
dec
jle
je
and
lock
fistp
call
inc
mov
jo
cmps
jecxz
addr16
pop
jmp
stos
or
sbb
cli
mov
adc
cwde
std
push
call
iret
xor
push
mov
or
push
push
iret
aas
push
movs
les
xlat
fnstsw
and
pop
or
ret
mov
bound
and
inc
inc
adc
inc
or
inc
xchg
shl
sbb
jecxz
outs
mov
mov
or
sbb
mov
or
push
fisub
lods
into
cmp
imul
pop
xchg
gs
clc
fisub
inc
xor
adc
fnstenv
push
mov
add
push
ret
pop
add
lahf
sbb
pop
sub
cmp
jne
mov
inc
or
mov
hlt
fidivr
or
cmp
sub
mov
ins
mov
mov
inc
les
rcl
or
dec
mov
ss
mov
adc
lock
fwait
and
sbb
xor
lock
sub
cmp
xchg
pop
or
lahf
cwde
or
ja
mov
neg
add
ss
xchg
sub
fadd
in
or
sub
(bad)
cmp
push
mov
icebp
mov
cmp
xor
cmp
fadd
and
xchg
pop
push
jg
enter
fidiv
add
add
push
fucom
in
mov
or
jae
fidivr
xor
daa
add
pop
xchg
push
add
add
sub
cmp
push
and
shl
adc
out
mov
(bad)
jne
loopne
xor
inc
xchg
(bad)
loope
or
mov
mov
fisub
cli
dec
ins
inc
lock
bound
shl
sahf
out
inc
dec
xor
cwde
jg
or
jbe
mov
xchg
xor
inc
add
add
cmp
mov
push
pop
add
dec
addr16
or
ja
sar
dec
rcr
cmp
mov
fs
add
rol
cmp
(bad)
les
ror
push
push
jbe
sahf
adc
fcmovb
loop
and
push
xchg
jg
mov
cmp
and
leave
and
add
rcl
jo
or
jge
fwait
movs
sub
lock
mov
push
stos
hlt
ja
hlt
push
loopne
lock
xchg
fisubr
ret
daa
push
cmp
jne
mov
sub
and
cmp
and
mov
or
fiadd
call
test
add
dec
sbb
or
ss
out
cmps
xor
ja
mov
aad
xchg
jbe
push
es
sub
pop
shl
pop
inc
mov
and
add
jno
pop
ficomp
and
lods
and
dec
js
test
dec
pop
add
clc
ss
and
mov
jo
cmp
sbb
shr
dec
dec
pushf
test
fisttp
add
or
scas
data16
data16
or
mov
sbb
sbb
inc
xchg
mov
dec
loopne
dec
and
sahf
dec
loope
mov
xor
dec
ret
cmp
or
ror
and
xchg
xor
and
idiv
or
push
mov
sbb
add
sub
sub
adc
push
fcmovnu
loope
dec
outs
mov
leave
jb
mov
repz
movs
sub
push
adc
sbb
add
fld
sub
dec
xor
push
pop
jp
loop
mov
mov
or
inc
imul
mov
inc
or
rol
jecxz
rol
out
mov
enter
push
pusha
mov
inc
popa
rcr
xor
push
add
lea
sbb
mov
add
loopne
mov
cmp
lahf
in
add
jmp
movs
test
xor
cmp
and
fcmovnb
xor
and
xchg
and
push
push
mov
ja
ror
or
sub
pop
push
mov
adc
in
add
fwait
cmp
or
ja
push
push
sub
imul
mov
push
and
or
mov
pop
sbb
cmp
adc
fcmovnbe
or
push
out
mov
cmp
dec
sub
loope
mov
hlt
add
int3
(bad)
dec
test
test
jbe
sbb
ret
sub
push
sbb
xor
inc
jbe
dec
add
inc
adc
int
and
(bad)
pop
pusha
das
adc
neg
inc
mov
inc
and
cdq
idiv
add
fsubr
add
sbb
sbb
sbb
dec
push
cs
mov
jle
xchg
xor
mov
enter
outs
pop
call
mov
out
enter
call
push
pop
jge
inc
mov
call
das
push
or
mov
pop
fcomp
fmul
mov
rol
call
add
test
jle
test
in
cmp
jbe
jno
in
cmp
mov
sbb
or
jg
adc
push
xchg
or
xor
adc
xor
mov
(bad)
mov
adc
jns
jecxz
mov
cmp
dec
neg
scas
push
fcmovu
push
jae
xor
jb
jbe
imul
es
dec
push
lock
cmps
or
pop
lock
cmp
mov
sbb
mov
mov
mov
add
dec
cmp
sbb
ja
fdivr
jl
fs
add
daa
mov
cmp
lock
call
(bad)
cs
mov
and
adc
push
xor
mov
or
pop
cld
and
mov
dec
pop
pop
mov
sub
inc
dec
ss
inc
add
fsubr
or
mov
dec
cwde
sar
dec
sub
dec
mov
test
in
aam
mov
sub
cmp
fs
cmp
(bad)
xchg
into
test
call
ror
loopne
cmp
adc
dec
loopne
pop
inc
mov
test
jnp
repnz
inc
dec
ret
(bad)
cmp
sub
je
adc
xchg
inc
xchg
inc
jmp
or
push
add
adc
cmps
(bad)
add
push
push
push
out
mov
jno
fs
cmp
push
and
fsub
in
fdiv
push
and
mov
inc
adc
inc
je
inc
jae
cmp
(bad)
fcom
inc
jne
fist
call
mov
fist
push
push
and
cld
into
sub
push
out
clc
call
popa
(bad)
stc
jns
dec
loope
cs
out
loop
or
(bad)
xchg
test
and
cld
call
in
or
push
adc
shl
das
sub
mov
sbb
and
xor
or
sbb
cmp
xor
ss
dec
mov
or
and
pop
enter
sbb
ss
pusha
cld
add
adc
jmp
cli
adc
xor
push
and
ins
push
push
jecxz
adc
push
mov
jo
and
and
sub
mov
inc
xor
add
test
xchg
sbb
arpl
mov
pop
jmp
fldenv
jmp
xlat
jmp
adc
push
sub
push
mov
pop
push
ret
ret
dec
lea
adc
ds
lods
adc
and
outs
adc
loopne
dec
clc
fcomp
(bad)
mov
pop
aam
mov
inc
fmul
and
mov
test
mov
push
or
push
sub
inc
or
sahf
leave
push
xchg
push
in
jb
mov
bound
aad
xor
add
inc
call
add
or
or
or
add
add
iret
lods
add
popa
enter
jo
or
cmp
mov
cld
mov
adc
jge
in
jp
jmp
jmp
jae
inc
mov
mov
scas
rcr
iret
mov
movs
push
push
sub
dec
pop
imul
sti
inc
mov
jl
push
inc
(bad)
or
or
and
fdiv
outs
cmp
jmp
or
jmp
test
sub
or
jmp
jge
push
or
imul
js
push
js
pop
dec
cmp
cmp
es
div
sbb
mov
je
add
push
stos
inc
mov
arpl
call
cdq
in
mov
lea
mov
fadd
push
rol
mov
sbb
es
icebp
out
sub
aad
dec
(bad)
push
inc
cdq
cmps
idiv
xor
inc
ja
lea
icebp
into
push
fwait
mov
pop
jns
mov
in
xchg
inc
or
bound
in
xlat
(bad)
push
sub
jae
nop
addr16
add
mov
add
inc
cwde
sub
mov
xchg
xchg
and
mov
push
lock
push
dec
and
adc
mov
mov
inc
sub
sub
sbb
test
js
cmp
push
mov
push
mov
sbb
ins
stos
pusha
cmp
mov
jb
clc
jp
pusha
stos
or
sbb
jno
push
or
push
les
fidivr
or
cwde
push
xor
sub
in
xor
cmp
mov
mov
sub
jmp
or
add
pop
enter
or
push
gs
and
test
inc
and
dec
mov
push
pop
xchg
cmp
call
add
push
imul
aas
mov
jmp
push
fucomp
aam
xchg
dec
xlat
loopne
and
dec
nop
stc
mov
bound
ret
(bad)
adc
adc
sub
dec
or
inc
add
jecxz
push
stos
or
das
fadd
sub
adc
ret
inc
mov
jg
push
adc
mov
adc
sub
pop
mov
iret
mov
and
add
fdiv
pop
test
cmp
mov
shr
rcl
loopne
cmp
je
push
inc
fcomp
in
adc
lock
mov
jne
out
sbb
jle
or
and
fisubr
pop
push
sub
pop
cmp
(bad)
(bad)
jb
sub
ja
iret
enter
ror
sub
sbb
shl
xchg
lea
and
enter
aad
pop
push
(bad)
jl
jmp
icebp
or
sub
inc
sbb
push
sbb
xor
mov
push
sahf
dec
rol
inc
push
pop
ficomp
int
push
imul
jle
cmp
push
ret
je
and
jmp
in
ja
sub
add
lea
and
shr
jbe
int
pop
jecxz
push
xlat
and
rcr
enter
pop
fwait
ret
test
inc
in
sbb
and
scas
cmp
lahf
int3
jge
fcomi
sbb
inc
mov
push
push
add
and
sbb
mov
inc
add
inc
mov
mov
jae
or
cmps
mov
sahf
sub
inc
lea
dec
bound
stc
jno
loopne
sub
add
push
sub
or
mov
adc
lods
xchg
sbb
inc
imul
push
push
fdiv
cmps
mov
outs
bound
dec
inc
mov
sbb
cmp
mov
pop
lea
add
push
cs
adc
add
inc
dec
sti
mov
enter
and
sbb
xor
push
in
mov
(bad)
jle
out
add
pop
rol
push
retf
and
add
or
pushf
sbb
dec
aam
xor
jbe
and
adc
sbb
sbb
pop
push
add
repnz
cdq
adc
adc
xor
ins
rol
adc
adc
enter
or
je
dec
add
push
mov
daa
push
add
mov
and
lahf
out
(bad)
test
sub
push
or
push
(bad)
rep
ins
add
clc
ror
mov
enter
outs
dec
or
add
fs
mov
jg
es
sub
call
je
jle
sahf
movs
sbb
or
mov
mov
repnz
adc
add
pop
test
and
cmp
call
shl
cmp
mov
in
push
ins
aaa
(bad)
mov
or
retf
cmps
push
out
scas
xor
popf
pop
xchg
cmc
jae
es
xchg
jbe
fcom
div
and
xchg
xchg
jmp
in
inc
mov
push
and
fisttp
mov
ret
jmp
mov
sub
test
add
add
push
jb
inc
xor
push
and
(bad)
and
aad
je
sbb
rcl
stc
es
out
pop
push
sbb
pop
ss
arpl
out
sbb
add
adc
push
push
add
jmp
retf
xor
mov
sub
out
cmps
cmp
jb
xor
sbb
adc
sub
inc
cmp
add
push
inc
xchg
in
pop
idiv
jg
inc
or
stc
rcl
xchg
inc
xor
dec
push
scas
shl
ficom
dec
stc
stos
mov
ja
(bad)
jmp
popa
push
xchg
mov
sbb
ja
push
dec
loope
xchg
cmps
arpl
adc
pop
(bad)
out
and
into
sbb
cdq
push
push
and
cwde
adc
xor
(bad)
enter
mov
popf
xchg
retf
mov
mov
div
sub
dec
dec
test
sar
or
test
xor
sub
not
and
outs
int
mov
xlat
test
mov
in
call
inc
test
add
stc
add
inc
cmps
xchg
jno
xchg
(bad)
mov
mov
in
push
ja
sbb
sti
or
ja
mov
add
sub
add
cld
pop
repnz
bswap
lock
gs
mov
sub
shl
popf
ret
jb
test
div
adc
mov
lea
cs
lea
mov
stos
mov
movs
add
enter
sti
dec
dec
push
les
jno
inc
test
pop
add
inc
repnz
in
fdiv
enter
push
xchg
inc
xchg
repz
add
xchg
sbb
loope
pop
xor
jle
dec
cmp
cmp
inc
add
sti
jae
pop
xor
movs
sbb
sbb
dec
dec
ret
pop
pop
push
mov
pop
adc
xor
out
sbb
and
or
and
loop
nop
mov
inc
or
push
jecxz
xor
or
sbb
jne
lea
je
push
mov
add
test
test
retf
lahf
sub
adc
(bad)
push
cmc
rcr
mov
ss
and
cmp
sbb
add
loopne
lods
cmp
push
xor
pop
push
push
pusha
xor
mov
inc
mov
dec
lea
ss
push
fisubr
add
push
ins
cmp
shl
fnsave
test
push
sahf
adc
sub
fcomp
push
push
cmp
clc
cli
mov
jns
inc
push
in
push
(bad)
cs
dec
sti
pop
jne
mov
in
mov
mov
mov
popf
sub
sbb
push
or
push
fmul
mov
shl
jmp
ins
ins
and
sub
inc
push
add
aaa
pop
aad
lods
jp
dec
icebp
adc
dec
mov
stos
adc
add
clc
add
dec
aam
xchg
push
adc
mov
add
cmp
ds
add
loope
adc
popa
dec
jg
cmc
or
shr
jmp
sub
sar
daa
mov
ins
lea
push
(bad)
into
add
dec
repnz
mov
push
lea
mov
sbb
mov
ins
pushf
dec
ins
push
pop
fs
imul
das
test
cld
movs
sub
cld
jno
cmp
cmp
push
mov
fstp
cmp
ret
shl
lods
mov
cmp
stc
push
mov
loop
cmp
or
mov
in
xchg
sbb
jo
or
pop
sar
cmp
adc
cmp
jmp
pop
mov
inc
movs
lea
mov
ss
sbb
or
mov
xor
sbb
or
sub
push
jmp
and
and
sar
mov
jmp
sub
mov
adc
xchg
inc
in
xlat
cmc
dec
mov
adc
leave
mov
or
loopne
sbb
jnp
retf
jo
add
add
(bad)
add
jp
cmc
lea
xchg
mov
rcl
adc
push
mov
seto
js
clc
addr16
mov
mov
ret
xchg
ret
mov
mov
out
or
sti
pop
lea
and
popa
call
or
shl
int3
pop
and
out
in
mov
mov
mov
inc
inc
pop
push
(bad)
ins
inc
bound
sub
test
xor
and
cmp
pushf
jns
lds
cld
push
inc
dec
int3
push
adc
(bad)
sbb
movzx
dec
push
sbb
mov
mov
adc
adc
push
pop
jmp
mov
retf
jmp
push
lea
retf
repz
into
xchg
xchg
push
adc
mov
and
mov
inc
dec
aad
add
das
and
xchg
fimul
xlat
aam
mov
sbb
out
xchg
mov
frstor
push
into
les
sbb
fmul
jo
push
add
cmps
add
dec
sub
bound
mov
push
inc
je
cdq
inc
or
jp
cs
mov
jnp
dec
rep
sub
mov
cdq
aam
shr
inc
add
sbb
ret
or
add
mov
hlt
sti
ror
sbb
add
dec
imul
cmp
dec
dec
push
icebp
and
add
test
loop
and
xchg
cld
jge
adc
pop
out
lea
cwde
pushf
cs
cmp
jne
push
std
call
es
out
xchg
mov
dec
mov
das
in
je
cmp
les
and
xor
mov
mov
sub
cmp
mov
and
push
(bad)
cdq
push
xor
push
push
popa
add
inc
add
in
add
add
and
and
test
sbb
pop
bound
adc
das
les
in
cwde
js
cmp
shl
cmp
xchg
xor
sti
call
push
jnp
mov
inc
pop
(bad)
or
cmp
daa
int
xchg
and
test
mov
adc
js
ja
add
call
loopne
sbb
jb
je
mov
outs
lds
rol
jmp
stos
loopne
xchg
mov
nop
aas
test
mov
mov
(bad)
iret
push
scas
inc
(bad)
std
imul
sbb
mov
out
jle
add
shr
stos
cmp
mov
mov
lfs
imul
lea
pop
pop
mov
mov
cmc
and
sub
mov
cmp
push
mov
push
sbb
inc
cmp
shr
jbe
enter
cs
pusha
not
or
mov
and
test
mov
les
repnz
jl
pop
mov
add
dec
add
out
popa
jg
push
lock
mov
ins
mov
clc
addr16
pop
out
push
inc
and
retf
adc
inc
lea
adc
clc
cdq
pop
ds
pop
add
or
sub
inc
jecxz
enter
push
dec
mov
ds
sar
inc
inc
push
adc
xor
cdq
call
test
fimul
dec
adc
cwde
jno
stos
sahf
lock
mov
xchg
fs
sti
loopne
dec
dec
and
push
fnsave
lahf
add
(bad)
sar
lea
xlat
(bad)
mov
xor
adc
or
pusha
pop
arpl
cwde
daa
jns
(bad)
mov
mov
mov
sti
imul
dec
test
push
mov
cld
mov
inc
lods
cld
cmp
cmp
loopne
xchg
ss
pop
and
js
sub
mov
aas
cmps
test
cmp
mov
je
cmp
push
lods
cmp
jp
mov
ret
test
inc
dec
pop
inc
call
pop
adc
jae
dec
jmp
les
inc
js
retf
outs
in
popf
addr16
xchg
jb
add
mov
clc
js
cmp
sahf
xor
push
and
clc
(bad)
adc
jle
enter
mov
jg
sti
scas
fcom
adc
sbb
jne
(bad)
push
push
pop
and
fs
jle
(bad)
sti
mov
xchg
neg
sar
dec
dec
sbb
jbe
sub
(bad)
xor
xchg
mul
cmp
ja
fimul
cmp
or
add
in
into
adc
mov
adc
pop
dec
ss
fcmovnb
adc
jle
mov
sub
xor
or
sbb
mov
mov
inc
lods
jns
nop
jmp
mov
movs
(bad)
cmp
je
adc
test
and
cmps
inc
cld
add
push
push
out
mov
repnz
cld
xor
xor
inc
ret
cmp
lods
push
sbb
dec
mov
ss
jne
jo
adc
and
cmp
ja
not
or
add
adc
mov
pop
ret
sar
add
(bad)
mov
add
adc
jmp
lea
or
mov
jge
pushf
add
pop
call
inc
call
movs
cdq
sbb
and
inc
call
cdq
nop
fdivr
inc
inc
call
cdq
nop
dec
call
adc
pop
ret
movs
cdq
nop
out
shl
imul
add
inc
xor
xchg
add
push
mov
repnz
add
sar
sub
je
push
or
ret
cmp
scas
scas
gs
rol
xchg
push
ds
rcl
dec
or
mov
scas
add
test
mov
mov
mov
jns
sbb
and
in
gs
mov
shl
add
dec
add
adc
pop
pusha
aad
loopne
loop
es
sbb
sbb
sbb
sbb
in
xor
inc
imul
sbb
pusha
imul
inc
inc
push
test
xchg
cdq
rcr
dec
jb
push
lea
dec
clc
jecxz
inc
fxtract
push
pusha
mov
ja
xor
ss
inc
xor
(bad)
or
inc
cmp
div
sbb
xor
sub
add
push
sbb
mov
add
js
fmul
pop
dec
adc
pop
pop
call
(bad)
lea
jge
jmp
inc
sbb
loop
and
bound
cmp
pusha
sbb
xor
dec
les
popa
mov
adc
jns
push
cld
pop
std
jecxz
ret
rcl
push
lds
rcl
jae
outs
mov
(bad)
ins
cmp
sbb
dec
jnp
pop
mov
cmp
in
mov
mov
sub
scas
or
movs
jnp
sub
data16
sub
mov
and
xchg
and
add
mov
jg
dec
aaa
ss
lea
xor
dec
fsub
add
retf
test
sbb
jg
push
mov
inc
or
xchg
and
mov
mov
(bad)
pop
mov
pop
gs
jmp
mov
adc
imul
jecxz
movs
adc
inc
xchg
sub
or
mov
or
dec
sbb
std
mov
push
push
cmp
adc
mov
push
jae
and
or
xor
add
or
xchg
pop
enter
push
mov
jmp
mov
pop
mov
xchg
inc
ret
sub
xor
sub
cmp
jne
bound
(bad)
aam
xor
dec
push
sbb
xor
dec
xchg
pop
xchg
punpckhdq
cs
inc
std
sub
jmp
inc
in
sbb
push
or
ins
or
inc
fbld
loope
loopne
int3
jp
fstp
xor
popf
nop
std
inc
adc
data16
(bad)
test
imul
cmp
fcompp
mov
pushf
mov
dec
test
jne
mov
outs
not
adc
add
dec
das
je
movs
popa
aas
xchg
shl
icebp
mov
lahf
cmps
loopne
mov
lock
lock
nop
ret
adc
in
jnp
adc
and
fsub
es
sub
out
add
out
out
cmp
les
or
and
fwait
ror
std
fist
(bad)
fstp
lea
and
or
into
dec
(bad)
clc
add
ss
cdq
out
int3
rcr
xor
add
push
loopne
add
clc
jg
jo
fidiv
data16
out
push
adc
inc
or
pop
addr16
dec
hlt
add
int
gs
push
add
xchg
push
dec
(bad)
mov
push
push
inc
pop
(bad)
hlt
pop
push
pusha
inc
popa
ret
xrstor
jmp
scas
push
ficomp
add
je
push
sbb
push
outs
and
pop
or
and
mov
neg
pop
jge
fnclex
movsx
push
xor
in
fldcw
xchg
inc
ror
xchg
sbb
ins
clc
push
inc
dec
mov
out
(bad)
mov
sub
pop
cld
fwait
ds
daa
push
adc
fwait
adc
sub
sbb
xchg
and
ja
mov
mov
data16
fldpi
xor
or
sbb
inc
or
adc
xor
adc
pop
mov
mov
imul
dec
test
adc
jl
test
leave
aas
mov
adc
lods
dec
mov
adc
inc
add
pop
inc
and
push
mov
mov
loope
mov
xor
sub
es
cmp
scas
add
adc
inc
pop
pop
imul
enter
mov
and
or
clc
and
jo
sub
pushf
xlat
jle
pop
cmp
mov
push
inc
xchg
pop
dec
xor
mov
or
adc
push
adc
pop
adc
dec
or
test
or
fwait
in
push
mov
std
add
js
or
je
sbb
mov
js
push
cmp
popa
dec
adc
push
shl
aam
push
les
std
iret
pop
pop
mov
js
sbb
fs
add
mov
lock
and
jle
aam
pop
int3
test
fnstcw
and
pop
fidivr
je
push
mov
dec
or
jne
jmp
in
push
push
outs
or
pcmpeqb
adc
shl
int
cmp
jg
push
cmp
pop
mov
shr
inc
dec
add
inc
adc
cmp
mov
loopne
shl
shl
leave
mov
xchg
aam
adc
popa
das
push
lahf
ds
mov
call
add
inc
cmp
sub
adc
retf
xchg
xchg
add
jnp
xchg
adc
mov
clc
push
enter
movs
test
bound
or
push
dec
arpl
mov
inc
push
aad
nop
cmp
fiadd
mov
mov
icebp
ja
and
add
add
xchg
or
pop
xor
adc
xchg
and
mov
adc
cmp
in
add
adc
inc
jmp
ss
cmp
pop
push
lock
ins
es
shr
jecxz
and
in
adc
ret
push
pop
cdq
sahf
loopne
jecxz
sub
mov
sub
into
ror
movs
and
add
mov
repz
add
pusha
fimul
(bad)
xor
adc
xchg
dec
add
add
mov
xchg
sub
add
loope
sar
mov
push
cmp
cmp
inc
imul
pusha
xchg
and
dec
inc
jo
cmps
adc
pop
and
pop
cmp
or
pop
or
imul
add
adc
pop
in
data16
hlt
nop
or
shr
je
push
scas
jl
or
test
or
retf
or
adc
sub
add
pop
xlat
stmxcsr
inc
xor
xchg
retf
mov
sbb
sbb
leave
leave
leave
iret
or
jmp
data16
mov
jge
je
or
push
jns
or
or
dec
movs
test
add
xor
sbb
mov
clc
add
push
or
pop
test
mov
add
lock
icebp
es
mov
pop
out
test
xor
je
ja
and
jle
div
and
mov
loope
lods
xor
xchg
add
lahf
pusha
dec
(bad)
and
and
or
cmp
in
push
dec
pop
pop
sub
fldcw
cs
test
enter
into
or
retf
je
push
imul
cld
leave
cmp
into
push
push
add
loopne
loopne
jae
adc
sbb
into
into
into
pop
jl
sbb
mov
pop
add
add
lock
sar
fistp
imul
add
test
in
loopne
shr
pusha
fld
and
inc
dec
dec
sahf
pop
outs
ror
leave
leave
jbe
inc
push
push
and
je
sub
ret
js
aaa
pop
jle
ss
stos
mov
(bad)
and
bound
iret
adc
push
imul
ins
add
sbb
hlt
hlt
adc
leave
in
cmp
test
add
nop
or
xchg
(bad)
jecxz
add
pop
cwde
out
adc
ror
(bad)
ficom
mov
and
push
sbb
push
idiv
add
add
fwait
ja
jnp
data16
pop
pop
fcomp
rcr
inc
sbb
mov
dec
or
aas
cmp
and
mov
cmp
sub
mov
or
adc
xchg
dec
add
pop
add
inc
je
mov
adc
xor
jne
loop
push
adc
inc
pop
push
push
bsf
push
mov
mov
mov
inc
sti
pop
shr
or
mov
je
or
fdivrp
jg
daa
cmp
jb
cmp
ja
add
cmp
adc
cmp
cmp
push
ror
adc
fidiv
and
inc
mov
or
pop
mov
ficomp
mov
push
add
push
mov
lock
clc
mov
add
dec
ds
icebp
and
sub
fsubrp
mov
adc
ret
mov
fwait
and
add
cmp
adc
popa
loop
out
add
mov
adc
add
lea
outs
sti
and
fwait
mov
sti
ja
hlt
jo
jb
or
(bad)
movs
fistp
mov
pop
push
dec
cdq
icebp
cld
bound
adc
dec
les
ins
pop
sub
adc
push
push
(bad)
leave
sar
test
inc
ror
sbb
and
pop
pusha
aas
push
cmp
jg
enter
cs
je
cmp
enter
or
lods
jmp
add
fld
btc
push
and
add
xchg
add
jle
add
loope
xchg
sbb
or
sbb
adc
sbb
sub
add
push
adc
cmps
out
jecxz
loope
loope
clc
cld
ins
push
push
add
mov
mov
mov
sar
or
int
imul
into
xor
xchg
cmps
push
popa
jbe
mov
sub
fdiv
in
in
test
shl
fmul
mov
shr
and
clc
pop
pop
inc
daa
add
mov
dec
cli
cmp
jle
jmp
(bad)
cld
(bad)
cwde
pop
cli
add
sbb
icebp
adc
cmp
cmp
add
mov
xchg
sbb
out
ret
pusha
addr16
push
cmp
xlat
xchg
sbb
mov
add
jo
push
mov
xchg
xchg
(bad)
ficomp
sahf
out
mov
inc
pop
add
xor
ret
push
cmp
cmp
pusha
out
pusha
sti
push
jmp
pop
jmp
in
push
and
cs
fs
or
xchg
or
arpl
pop
add
mov
inc
shl
add
dec
shl
adc
and
in
in
or
add
dec
cwde
or
or
out
loopne
pushf
mov
repz
mov
(bad)
stc
test
adc
add
push
push
sar
and
pop
inc
je
mov
fisubr
mov
std
mov
adc
or
mov
hlt
add
ror
rcl
nop
adc
or
add
cmps
in
pushf
add
add
push
test
popf
xor
and
jecxz
sbb
mov
rcr
inc
push
and
pop
dec
inc
or
out
mov
loope
es
pop
or
pop
and
inc
cmp
dec
add
inc
mov
jnp
cld
fadd
fdivr
in
mov
ror
repz
ja
or
mov
push
xchg
dec
mov
ss
cmp
ja
jo
loope
cmps
jns
fwait
or
mov
add
pop
pop
and
imul
sbb
lock
jge
fnstenv
mov
bound
sub
call
gs
enter
daa
fs
mov
xchg
loopne
ja
sbb
(bad)
mov
test
sbb
cdq
nop
movs
movs
mov
cmp
out
inc
sbb
cmp
hlt
xor
ror
add
cmp
mov
imul
pushf
or
int3
cmp
pushf
ret
inc
jl
xchg
sub
push
mov
jno
xor
outs
sub
inc
(bad)
push
out
fs
jl
jmp
sbb
dec
cmp
je
(bad)
and
and
repnz
imul
retf
popf
popa
nop
pop
or
push
push
mov
and
call
inc
inc
dec
aaa
push
pop
pop
int
push
sar
mov
jne
or
popf
pop
sbb
cmps
fs
or
jne
sbb
hlt
leave
mov
add
dec
or
jge
sub
jne
add
movsx
pop
(bad)
ss
inc
push
or
ins
or
jb
and
mov
je
push
pop
dec
rol
cdq
push
jbe
or
jo
mov
stos
hlt
shl
inc
sti
ins
xor
inc
movs
add
xchg
sub
stos
adc
call
lods
mov
and
dec
ins
in
repnz
fucomp
or
xchg
cwde
and
cmp
shr
jecxz
in
scas
lock
mov
add
add
or
rcr
add
adc
push
stos
popf
arpl
sbb
push
(bad)
xor
inc
les
mov
int3
sti
xchg
rcr
mov
imul
pop
pop
ret
xchg
push
push
fcmovb
retf
pop
sbb
mov
lods
and
not
mov
xor
cmp
enter
into
(bad)
imul
and
bound
sub
mov
pop
test
inc
xchg
pop
or
xchg
mov
fwait
sub
aam
lock
sbb
or
mov
mov
(bad)
jne
loop
shl
xchg
ins
rcr
sbb
pushf
int3
inc
test
daa
in
dec
pop
mov
push
add
dec
mov
clc
adc
pop
enter
out
adc
(bad)
mov
jb
jmp
retf
mov
movs
repnz
xchg
xor
sbb
mov
adc
cmp
ret
mov
out
pop
pop
das
push
and
(bad)
push
fcmovbe
call
retf
or
mov
dec
jno
jle
mov
cmp
sysret
sbb
pop
inc
inc
jmp
inc
add
rep
cmp
add
ds
xchg
push
fild
and
sub
add
dec
aaa
cmp
sbb
movs
std
jo
dec
out
mov
dec
pop
movs
pop
nop
lea
adc
pop
ins
pusha
cld
pop
sub
push
ret
mov
mov
push
lods
js
mov
enter
adc
mov
dec
enter
in
or
and
xchg
ror
or
push
movs
push
call
cmp
mov
movs
inc
mov
mov
shr
pop
xor
movs
mov
fisttp
(bad)
clc
rcl
inc
(bad)
xchg
ret
stos
cs
dec
adc
in
inc
adc
in
xchg
sub
cmp
loope
cmp
add
pop
sar
retf
(bad)
fincstp
add
adc
adc
mov
rcl
(bad)
mov
add
lea
shl
cmp
xor
inc
and
xchg
mov
loop
mov
mov
jmp
jl
ds
or
stc
push
ficom
lds
xchg
popa
enter
xor
shl
mov
add
mov
dec
jmp
dec
and
and
movs
loope
and
pop
scas
mov
scas
jmp
xor
or
xor
stos
mov
adc
and
dec
sti
sti
mov
xchg
xchg
fwait
xchg
fnstenv
and
aad
repnz
outs
cmp
jb
sub
and
mov
in
xchg
in
adc
inc
and
add
lods
test
inc
xor
push
ffreep
fdiv
xchg
inc
xlat
push
fsubp
pop
xor
mov
dec
fisttp
fdivr
jo
rcr
rol
xchg
cmp
jo
push
leave
bound
nop
clc
seto
inc
jb
jno
clc
inc
mov
shld
cli
or
fisubr
add
add
add
shl
cs
test
fs
dec
scas
mov
push
daa
fsubr
mov
std
and
ins
lahf
pusha
cld
pusha
cld
repnz
xchg
fdiv
pop
mov
mov
mov
pop
cmp
sub
je
lods
pop
pop
popa
into
sub
and
add
inc
call
cmp
js
cmp
push
div
sub
cmp
rcl
pop
test
stc
sbb
mov
jge
pop
adc
mov
jne
clc
jl
scas
add
(bad)
add
cmp
sar
mov
add
ret
push
cmp
mov
xchg
jge
sar
enter
cmp
cmp
rol
or
push
cli
mov
cmp
adc
jle
jne
test
sar
clc
fwait
push
scas
add
je
cmp
shl
push
mov
std
gs
or
inc
mov
fisub
sub
push
and
xchg
pushf
clc
adc
pop
mov
and
mov
mov
shr
repnz
push
xor
adc
mov
(bad)
mov
sub
sub
ror
cmp
(bad)
hlt
je
icebp
dec
mov
pushf
pushf
hlt
cli
ss
neg
leave
lods
test
xor
jb
mov
scas
movs
push
ret
mov
lods
sub
fbstp
or
(bad)
ins
sbb
into
stos
jge
addr16
stos
inc
jl
xor
sbb
sbb
(bad)
fprem1
lods
jnp
fstp
retf
add
cli
xor
xor
jno
xor
jl
cmc
push
es
test
or
xchg
mov
shl
(bad)
nop
jns
in
sub
mov
(bad)
jne
sbb
pushf
xor
nop
jmp
movs
leave
and
push
and
sbb
movs
or
xchg
dec
cmps
inc
(bad)
mov
sub
adc
loope
add
xchg
retf
in
mov
mov
iret
rol
add
cwde
jno
cmp
test
dec
pop
fsub
and
mov
dec
aam
fnstenv
dec
ret
xor
push
add
xchg
loop
and
(bad)
adc
sub
inc
mov
sbb
mov
test
pop
test
jbe
jmp
popf
ins
add
loop
xor
lahf
imul
je
push
das
mov
test
jae
neg
add
adc
rcl
pop
pop
add
xchg
mov
ret
add
mov
gs
mov
dec
mov
add
cli
jp
and
into
jo
clc
pop
add
xor
mov
pusha
pusha
inc
and
sbb
rcr
clc
lahf
add
adc
xor
xchg
retf
mov
js
lea
adc
add
add
test
mov
rol
mov
mov
mov
lods
mov
add
dec
mov
add
inc
jge
sbb
mov
or
mov
sbb
(bad)
fcmove
test
or
enter
aaa
dec
xchg
call
int3
lock
icebp
(bad)
xchg
stc
jmp
sub
inc
xor
jnp
or
push
jb
push
in
push
nop
(bad)
xor
and
test
je
or
pop
dec
adc
mov
cmc
add
loopne
jnp
xor
add
in
add
dec
scas
xor
sub
or
cmp
pcmpgtw
adc
push
xchg
push
rol
nop
push
retf
mov
(bad)
imul
clc
dec
sbb
in
cli
jmp
sbb
neg
sub
push
sbb
cmp
and
sbb
je
daa
and
mov
cmc
call
adc
adc
sbb
movs
or
ror
mov
push
rcl
lods
add
bound
mov
fnstenv
(bad)
nop
inc
lds
fdiv
ja
sbb
xor
into
les
xchg
sbb
outs
jl
pop
cli
nop
jno
dec
in
pushf
les
mov
mov
push
ins
scas
push
sub
popa
add
cmp
retf
xor
(bad)
dec
icebp
and
cs
call
adc
mov
call
gs
and
jp
or
jge
ret
adc
mov
outs
out
popf
adc
pop
ins
into
xchg
push
or
xlat
bound
xchg
adc
mov
sbb
cdq
fnstcw
sbb
sar
out
push
dec
and
sbb
pop
mov
outs
inc
add
jp
or
pop
(bad)
call
mov
mov
popa
pop
push
xchg
sbb
inc
adc
mov
and
dec
or
mov
pop
mov
push
xchg
dec
jmp
push
sub
mov
lea
and
adc
lea
or
popa
lods
pusha
push
xchg
dec
xor
cmp
leave
leave
adc
add
dec
dec
cmp
cmp
inc
push
mov
inc
push
push
jmp
daa
out
and
mov
dec
dec
fdivr
aam
cli
cmps
mov
fdivr
sbb
jb
leave
hlt
leave
in
leave
pop
add
in
in
leave
repnz
out
frstor
inc
je
push
sub
push
adc
imul
push
push
int
jmp
xchg
mov
stos
cli
pop
bound
inc
add
jo
adc
or
mov
je
pop
loope
cmp
or
test
jae
sub
aas
cld
test
pushf
sub
mov
mov
ja
dec
sbb
xlat
jge
mov
cmp
jg
daa
mov
ins
push
jle
jge
adc
enter
sub
out
push
jle
adc
or
inc
or
fadd
sbb
push
imul
movs
dec
dec
jo
popf
add
ret
pushf
mov
sub
sbb
cmp
test
movs
push
aam
test
movs
daa
movs
nop
outs
push
lahf
data16
int3
movs
pop
inc
push
jo
inc
and
mov
out
iret
ins
into
dec
jmp
pop
cmps
pop
add
jl
imul
cmp
pop
sub
push
sbb
xor
stc
add
add
inc
gs
mov
je
std
outs
add
es
jmp
lea
xchg
out
ficom
or
adc
jne
imul
inc
sub
mov
adc
push
mov
mov
lods
or
mov
ja
cmps
ds
xchg
jne
imul
jg
or
push
jb
out
pop
mov
pop
es
mov
pop
mov
add
inc
test
add
jbe
push
(bad)
cmp
daa
xchg
cwde
xor
fs
loopne
sub
clc
rcr
mov
adc
test
mov
mov
cmp
xor
pop
add
pop
fild
mov
aaa
cmps
mov
jg
mov
cmp
es
add
inc
push
inc
sbb
push
mov
call
push
pop
add
xor
xchg
fist
xor
cmps
pop
dec
and
or
and
leavew
dec
dec
push
aaa
enter
mov
and
inc
inc
xor
xor
cmp
xchg
inc
fnsave
inc
jmp
mov
and
jmp
std
xor
sbb
inc
fadd
cvtps2pd
mov
mov
add
add
push
popa
sub
or
sti
add
leave
xor
pop
mov
adc
sub
inc
cwde
push
sub
adc
pop
pop
enter
cs
push
test
and
mov
mov
int
inc
xor
or
and
mov
push
mov
or
add
sar
loopne
int3
xchg
out
xchg
fmul
div
ret
and
push
mov
imul
pusha
cmp
adc
push
or
add
xor
pop
push
push
push
push
jecxz
mov
mov
mov
jmp
or
push
jbe
xchg
jae
jl
add
pop
(bad)
pop
xor
mov
movs
add
mov
jno
into
or
aam
add
dec
push
ficomp
mov
xor
push
dec
mov
loope
add
inc
retf
jg
or
scas
sbb
inc
mov
inc
test
jae
scas
cmp
es
xor
je
gs
cmp
in
or
sub
pop
push
pop
add
iret
pusha
pop
mov
in
sub
inc
stc
dec
call
push
shr
push
cli
or
or
inc
push
lock
or
out
push
stc
add
and
(bad)
pusha
xchg
std
mov
xchg
xchg
int
in
inc
jecxz
add
inc
(bad)
pop
(bad)
push
addr16
int
call
xchg
mov
aam
jge
repz
xchg
jle
or
and
xor
sbb
scas
jle
cmps
add
into
(bad)
push
fcom
lea
test
out
inc
arpl
jl
fs
mov
jl
sbb
pop
dec
jge
push
popf
push
mov
inc
pop
add
inc
sbb
movs
add
cmp
sbb
je
or
pusha
cmp
cmp
stos
loope
dec
out
je
ja
jo
jl
ror
(bad)
cmp
jb
cmp
jbe
sbb
jbe
in
mov
cwde
and
cmp
int3
fsubr
mov
jle
icebp
mov
loopne
jmp
or
fadd
outs
add
data16
xchg
sbb
add
and
sahf
add
imul
imul
push
cmp
rcr
push
jbe
out
add
or
pusha
mov
xor
add
cdq
cmps
rcr
push
fdiv
mov
sub
jmp
inc
xor
shl
int
cmp
repz
push
test
fild
push
int3
rcl
stc
repnz
mov
sbb
add
dec
and
ror
inc
stos
xchg
xor
xor
iret
dec
mov
or
mov
ins
cwde
sub
dec
imul
jnp
rol
push
push
call
mov
add
outs
push
adc
add
mov
shr
dec
rol
add
inc
push
je
rcr
adc
or
add
xor
adc
add
mov
(bad)
cdq
jb
inc
mov
dec
test
push
mov
adc
adc
data16
mov
push
pushf
and
into
inc
xchg
pop
in
clc
inc
or
or
inc
ins
and
cmp
rcl
pop
cmp
(bad)
dec
push
mov
jne
jb
xchg
sbb
je
ja
lods
js
pop
sbb
adc
push
les
test
mov
ja
jp
adc
or
adc
inc
jb
sub
out
cmp
jecxz
fldlg2
fxch
fyl2x
or
retf
or
or
jno
int3
push
out
jp
lahf
push
pop
jmp
test
sti
sbb
push
and
fcomp
sub
and
and
push
cmp
xchg
lds
xlat
sbb
jns
or
jecxz
lahf
js
adc
or
jg
add
mov
fmulp
push
clc
jae
xor
fwait
xchg
fistp
push
add
retf
mov
(bad)
js
jge
repz
or
jg
jg
nop
aad
retf
cs
jnp
mov
in
add
sub
and
adc
mov
dec
clc
pop
push
pop
es
add
fadd
rol
add
imul
ja
jnp
int
add
sbb
es
jns
sbb
and
or
and
mov
sbb
adc
sbb
test
popa
outs
xchg
mov
xor
or
or
test
mov
leave
or
loop
iret
cmps
ret
push
mov
adc
aad
int
xor
in
and
sbb
inc
jle
and
push
rol
cwde
in
out
fistp
jo
add
mov
dec
mov
mov
lock
(bad)
push
pop
hlt
repnz
push
sub
push
(bad)
test
adc
ret
repnz
mov
mov
push
inc
ror
pop
sub
cmp
shl
add
add
fbld
in
mov
jo
fcom
adc
das
pop
enter
retf
repnz
ds
stos
add
shl
inc
cld
outs
repnz
xchg
rcl
mul
adc
ror
xor
nop
rol
jecxz
leave
xchg
out
mov
mov
enter
or
test
pop
(bad)
(bad)
sbb
mov
ja
push
loope
pop
test
jb
ret
out
sar
test
mov
lods
ds
pop
dec
pop
rcl
or
xor
ret
sbb
int3
inc
adc
call
mov
cmp
cmp
jp
mov
add
xor
rol
jns
xor
xchg
loope
and
dec
adc
ret
pop
mov
inc
inc
mov
mov
dec
in
jne
xor
hlt
std
fucomi
or
jmp
and
mov
popa
sub
into
jne
fscale
in
push
or
fs
push
xor
int
and
int3
sub
ins
rcr
call
cwde
loope
scas
cmp
fbld
add
mov
add
fldln2
inc
in
mov
addr16
fnstsw
inc
jne
push
ret
inc
mov
ret
or
jne
pop
in
jmp
gs
mov
inc
mov
mov
push
fldz
mov
add
into
push
sub
jmp
in
ja
or
icebp
pop
add
xor
add
lea
add
popa
or
shr
mov
fcompp
mov
cmp
(bad)
push
sub
fsub
daa
ja
mov
jbe
lock
fdivr
loopne
jne
push
fmul
mov
or
and
gs
ja
dec
je
hlt
or
stos
or
popw
mov
jbe
test
pop
frstor
adc
in
inc
add
mov
jp
add
jg
mov
add
mov
push
popf
pop
sub
fxam
mov
jo
pop
add
adc
push
shl
sar
rol
mov
and
xlat
out
ja
in
push
fiadd
fsub
pop
dec
mov
fisub
push
iret
cmp
and
rcr
pop
shl
mov
mov
or
in
or
sub
popa
sub
call
cwde
jne
cld
adc
imul
ret
movs
jmp
mov
or
loopne
nop
imul
fadd
pusha
sub
jmp
pusha
pop
int3
mov
xchg
test
je
add
or
mov
and
push
add
dec
ss
(bad)
push
mov
mov
add
stos
cmp
loopne
shl
mov
push
lods
fstp
xor
movs
or
data16
fldcw
lock
or
push
mov
jmp
and
cmp
and
pop
shr
push
or
push
loopne
push
daa
shld
loope
mov
inc
push
ror
sub
les
inc
movs
je
movs
xor
cmp
mov
ret
xchg
add
pop
or
sbb
ret
add
js
sub
pop
ror
push
sub
mov
add
mov
fsubr
aam
stos
jmp
daa
je
xlat
pop
mov
sbb
jne
sbb
test
shr
leave
int3
stos
jl
outs
in
push
leave
arpl
fcomp
push
(bad)
jbe
pop
sar
push
je
cs
call
aas
cmp
(bad)
loopne
mov
dec
or
in
fist
jns
lea
fadd
loopne
sub
inc
sub
jge
sub
leave
pop
aam
or
call
pop
hlt
xor
jno
ins
cmp
repz
inc
jne
xor
push
jg
call
cmps
add
and
mov
js
sbb
push
adc
xchg
and
adc
int3
dec
sbb
frstor
add
add
lea
in
sbb
sub
push
leave
mov
pop
data16
xor
idiv
sbb
in
push
enter
enter
cwde
fcom
push
mov
sbb
add
adc
les
jp
cmp
jmp
push
lods
ret
lods
jnp
fstp
cmp
rcr
pop
adc
adc
je
cmc
pop
sub
aad
add
jns
and
dec
cmp
push
xchg
push
inc
pop
jb
inc
pop
les
pusha
inc
adc
loope
inc
or
push
and
xchg
push
inc
das
sbb
(bad)
xor
sub
mov
pop
add
mov
mov
cmp
mov
pushw
aaa
jg
nop
mov
jmp
popa
pop
and
arpl
ins
push
cs
ret
shl
mov
mov
aas
dec
pop
nop
fst
inc
cld
mov
sub
push
and
les
pop
mov
push
adc
jmp
add
into
lods
cmp
mov
jbe
xor
in
nop
jne
and
enter
mov
sub
rol
push
ds
fucompp
inc
add
cmp
add
fst
dec
mov
mov
lock
inc
(bad)
xor
rcr
jnp
adc
mov
fcomp
das
in
inc
mov
fidiv
in
out
xor
out
dec
or
sahf
pop
or
cmp
test
dec
das
inc
imul
mov
stos
jle
bound
pop
call
pop
push
mov
ja
jp
enter
das
jecxz
xchg
or
bound
xlat
and
cmp
and
imul
aam
inc
pushf
inc
and
cmp
leave
movs
jp
sub
and
and
adc
jb
push
push
cmp
adc
pop
push
lea
or
and
adc
or
je
sbb
push
xor
ins
adc
fld
iret
ss
mov
add
inc
jne
and
lea
add
xchg
stc
test
mov
push
mov
ds
movs
icebp
je
sub
imul
cmp
inc
sbb
aas
pop
and
daa
xor
nop
(bad)
adc
and
xor
xor
fdivr
push
pop
or
inc
retf
mov
add
or
leave
and
adc
add
push
pop
(bad)
(bad)
add
and
lea
xchg
or
loopne
inc
stos
push
add
mov
push
add
je
mov
dec
shr
adc
xor
repnz
add
mov
push
mov
xor
aaa
xor
fs
push
add
loope
ficom
push
and
and
sar
mov
cmp
dec
ret
ins
ds
retf
clc
sub
or
or
mov
mov
cmp
jb
inc
cmp
or
mov
add
dec
jg
fwait
add
inc
mov
not
mov
add
mov
loope
mov
adc
loopne
push
arpl
cld
push
xor
sbb
daa
push
xor
dec
test
pusha
cmp
or
not
adc
add
xor
mov
mov
test
out
mov
jge
xchg
(bad)
in
and
adc
div
stos
sar
imul
or
and
shld
shl
jbe
jo
dec
mov
test
int
lods
mov
lods
rcl
jmp
xchg
call
es
in
adc
inc
test
adc
ror
push
sbb
and
movs
sbb
inc
adc
sbb
fcmovnb
rcl
test
pusha
and
jmp
pop
dec
and
rcr
pop
push
test
pop
or
push
and
movs
enter
or
nop
arpl
rcr
mov
pop
pusha
arpl
push
pop
div
ja
mov
clc
cvttsd2si
leave
ret
aaa
aad
push
sbb
xor
pop
pop
sar
pop
and
adc
add
cld
ffreep
fist
inc
sbb
sbb
int3
push
fldcw
xor
daa
nop
jmp
fwait
push
xor
das
fcomp
cmp
imul
ret
mov
adc
adc
(bad)
cmp
sar
rol
fisub
aaa
mov
pop
lock
lds
call
pop
mov
ds
add
add
mov
push
add
adc
push
cmps
test
push
xor
ror
dec
movups
aaa
inc
jg
pop
enter
dec
jmp
std
fst
adc
shl
inc
jae
lea
lock
sti
pop
mov
and
enter
and
ficomp
or
mov
sub
add
xchg
sbb
sub
(bad)
pop
xchg
mov
adc
jbe
jnp
or
in
push
sub
cmps
sub
adc
lahf
jae
fadd
sub
aam
dec
mov
and
sub
adc
push
and
sbb
aam
loope
pop
add
fadd
arpl
test
ja
retf
out
cld
das
cmp
and
rcl
loopne
xchg
or
mov
(bad)
xchg
enter
jmp
add
cmp
xor
sub
pop
add
jnp
mov
adc
dec
mov
jl
sbb
and
cmps
lock
add
mov
cmp
add
ds
outs
xor
rol
xor
(bad)
int3
push
mov
mov
or
add
dec
mov
mov
inc
aam
mov
jno
ret
push
jmp
fisub
call
sbb
fist
rcr
ret
scas
hlt
add
(bad)
int3
or
cdq
xor
mov
pushf
jl
sti
push
jl
int
ror
lahf
lods
xor
fadd
and
pop
(bad)
cmp
dec
nop
or
dec
push
into
loop
add
cmp
inc
pushf
push
es
mov
mov
cmp
lock
sbb
pusha
or
dec
push
push
or
sbb
pop
mov
mov
push
cld
sub
push
sahf
popf
out
sbb
pop
mov
inc
movs
xor
fs
sub
jmp
and
fistp
and
daa
and
pop
fcomip
call
push
dec
rcr
sbb
mov
add
mov
popa
xlat
xor
imul
cmp
icebp
lock
add
jle
fs
pop
xor
sahf
call
addr16
nop
scas
add
iret
push
loop
in
std
in
arpl
mov
pop
clc
and
inc
or
ret
fwait
push
push
int
jne
inc
mov
or
add
sub
mov
jmp
jo
jb
or
add
add
adc
cmp
rcl
sbb
lea
jno
fwait
and
icebp
adc
push
mov
cmp
and
mov
push
push
fidiv
iret
and
and
inc
mov
dec
xor
sub
lahf
jp
enter
or
shl
cld
scas
or
ja
mov
and
pusha
sub
enter
sbb
retf
pop
adc
dec
movs
leave
lods
stos
out
ds
or
cmp
add
pop
pop
jmp
and
mov
push
xlat
mov
(bad)
shr
in
jg
mov
sar
in
mov
xor
push
jo
inc
cmp
popf
or
adc
and
mov
jecxz
xor
out
jp
mov
imul
int3
cmp
mov
dec
adc
into
push
dec
push
nop
inc
nop
add
jle
cli
pop
pop
push
push
call
retf
jae
add
or
adc
data16
push
inc
sbb
rol
xchg
enter
push
mov
fsubr
push
cmp
and
ins
xchg
pushf
xchg
add
fs
out
push
iret
xor
das
int
sub
lock
out
sub
sub
add
cmp
jl
cmp
and
stc
idiv
cmp
push
pop
jle
cmp
cmp
movs
mov
icebp
sub
mov
sbb
sbb
pusha
and
sbb
jbe
mov
xchg
sbb
mov
ins
adc
xchg
add
cmp
mov
out
jne
neg
shl
aam
mov
retf
scas
mov
and
push
add
movs
jmp
je
or
jp
ins
pusha
inc
push
and
nop
adc
mov
test
push
mov
fist
pop
test
nop
adc
adc
inc
mov
sti
mov
into
add
jbe
retf
or
fist
inc
push
int3
ret
mov
sbb
jbe
push
popf
xor
gs
pop
sub
imul
mov
shl
jl
bound
add
pop
rcl
aam
push
jo
pushf
xchg
lods
mov
repz
pusha
pop
push
sti
push
cld
je
inc
push
push
pop
sbb
fs
repnz
fs
neg
push
inc
inc
xor
loopne
mov
or
test
ins
scas
repnz
popf
sbb
and
or
push
dec
mov
sbb
je
sti
mov
je
pop
ret
jmp
push
stos
sti
sub
js
add
mov
adc
enter
lods
mov
adc
add
sub
sahf
loopne
jl
daa
add
lahf
mov
mov
cwde
add
sub
and
inc
inc
adc
fist
sahf
add
shr
mov
cmp
mov
mov
cwde
xlat
pop
adc
push
mov
inc
call
adc
adc
fsubr
shl
mov
jle
jmp
mov
or
or
loope
lods
(bad)
sbb
ja
jge
ins
int
ret
sar
sub
idiv
inc
mov
rol
mov
cmp
fsubr
pop
mov
pop
xor
push
push
mov
inc
add
loopne
mov
(bad)
outs
(bad)
push
mov
jl
add
clc
fadd
adc
sbb
sbb
pop
sub
clc
shl
sub
jb
mov
loopne
pusha
push
push
push
push
push
push
dec
sub
out
std
or
scas
push
sbb
pop
xchg
repz
xor
add
mov
xor
aam
and
jge
push
push
sub
in
mov
or
je
fiadd
lods
fnstenv
inc
cmp
xchg
scas
push
inc
cmp
pop
cmp
mov
int
ins
ss
out
in
adc
xor
test
and
ds
cmp
mov
scas
jo
dec
add
clc
adc
mov
adc
or
js
adc
dec
xor
ins
je
addr16
sbb
mov
push
mov
jecxz
inc
out
pop
or
arpl
(bad)
mov
push
cmp
loopne
int3
add
or
sub
mov
data16
sub
or
je
arpl
rcl
and
mov
sahf
or
mov
adc
mov
popa
mov
pop
arpl
rep
mov
scas
lods
sbb
sub
pop
xor
cmp
dec
retf
mov
push
xor
not
sahf
sbb
or
push
jl
nop
pop
mov
jmp
retf
xchg
cmp
jb
mov
adc
push
addr16
test
pop
out
xor
xchg
sbb
inc
(bad)
jne
or
shr
push
mov
nop
dec
nop
push
(bad)
or
mov
mov
sub
in
nop
xchg
cmp
mov
push
xchg
dec
fwait
dec
cwde
fs
rcl
imul
pop
mov
xchg
retf
or
adc
jb
dec
cmp
sbb
xor
in
cwde
rcr
ud1
test
nop
add
les
adc
ins
add
imul
mov
inc
adc
outs
fdivr
or
sbb
add
ss
fistp
stc
ret
push
inc
add
dec
fwait
pop
inc
aas
fst
dec
jmp
push
pusha
cli
xchg
jmp
jns
push
and
jb
fs
aad
push
and
and
ins
je
cmp
adc
inc
inc
outs
outs
outs
gs
or
fcmovnu
jle
arpl
push
data16
sub
ins
outs
jae
call
and
outs
ins
fs
or
or
or
inc
outs
push
outs
cmp
je
mov
add
je
je
push
gs
popf
arpl
gs
dec
fs
mov
gs
popa
and
ja
xor
mov
jg
jo
bound
imul
in
jbe
in
and
ins
and
xchg
jbe
scas
ja
ss
(bad)
out
mov
push
bound
pop
outs
jne
and
jae
rol
jo
xchg
push
cs
mov
pop
data16
and
push
ins
fsub
mov
lock
fs
pop
dec
jo
rol
sub
inc
and
int
into
dec
outs
sbb
pop
cmp
imul
pop
scas
xchg
(bad)
mov
cwde
dec
sbb
and
push
push
outs
lods
inc
dec
push
iret
xor
mov
pusha
or
shl
nop
jb
jae
ins
popa
cmp
dec
out
fs
jbe
fld
ins
outs
jbe
imul
xchg
data16
movs
imul
and
jb
and
pop
loopne
mov
or
cmp
sbb
or
(bad)
jmp
ins
jns
jo
push
popf
fisubr
test
cmps
dec
stos
jo
mov
daa
add
in
dec
je
fdiv
mov
sbb
jns
jb
fucom
mov
js
popa
cli
(bad)
js
imul
sahf
and
dec
pop
or
push
ds
inc
inc
inc
dec
push
inc
(bad)
out
sbb
mov
mov
cmp
and
mov
sbb
retf
pop
cmp
sti
mov
sub
gs
inc
add
inc
imul
cs
jnp
add
add
dec
mov
outs
add
and
jae
push
push
div
push
push
push
and
ss
outs
cli
lock
das
das
xchg
ins
cs
js
cs
das
fs
mov
das
sub
ins
ins
pop
xor
push
outs
ja
cmp
adc
bound
jo
mov
and
aam
mov
imul
and
fcomp
test
mov
(bad)
aaa
sti
push
inc
push
dec
dec
dec
inc
cmp
addr16
out
addr16
jbe
or
mov
test
ja
(bad)
mov
out
xor
sbb
pop
data16
add
sub
cld
xor
js
and
jne
lods
push
inc
push
push
pop
sbb
dec
pop
inc
jno
sahf
pop
sub
sub
xlat
inc
or
cmp
shr
pop
cmp
inc
mov
xchg
fnstcw
out
dec
adc
shl
je
mov
inc
cmp
popa
outs
scas
push
js
jmp
xor
mov
lahf
outs
daa
je
cwde
push
push
pop
movs
cli
call
dec
push
push
pop
push
inc
push
dec
dec
push
inc
das
dec
out
pusha
scas
ss
jns
and
pop
sbb
push
clc
(bad)
jg
out
loop
out
inc
and
fs
and
aam
sbb
and
ds
mov
mov
shl
jmp
andnps
outs
jo
jp
add
sbb
es
xchg
adc
jne
push
cli
sub
popa
push
into
or
loopne
push
dec
push
push
dec
dec
sbb
jmp
push
fwait
xchg
bound
dec
pop
push
ins
ss
shl
out
xor
js
loopne
das
or
fcom
jnp
mov
outs
cmp
push
fnstsw
add
dec
push
movs
lea
add
jbe
scas
cmp
jo
xlat
mov
add
adc
mov
call
ins
ds
mov
mov
dec
dec
(bad)
loopne
add
sub
xlat
dec
push
push
dec
inc
mov
mov
dec
inc
pop
dec
dec
push
push
mov
jne
xchg
push
push
cld
cld
and
and
mov
imul
imul
les
lods
lock
sbb
xor
adc
cmp
and
add
push
sets
stos
loop
sar
dec
leave
out
(bad)
or
inc
pop
bound
xlat
sahf
leave
jmp
and
pop
mov
push
pop
mov
js
nop
sub
xor
xor
jmp
test
lahf
dec
aad
jne
sub
je
push
imul
inc
jae
stos
mov
add
stos
and
jbe
sbb
outs
int
shr
add
mov
bound
adc
sbb
xchg
and
sbb
int3
fbld
loope
adc
clc
cmovge
js
push
dec
in
out
fsub
jno
retf
mov
mov
in
and
push
dec
push
inc
dec
sbb
ss
dec
push
mov
cmc
xor
shl
inc
pushf
aad
sub
aaa
inc
dec
or
inc
pop
push
pop
inc
inc
inc
cmp
pop
icebp
xor
and
mov
in
test
loopne
bound
cmp
or
imul
(bad)
push
jb
fadd
mov
or
outs
add
pop
and
das
or
fucomp
fidiv
xor
pop
cmp
aas
pop
dec
inc
jle
sbb
imul
rcr
sahf
cmps
push
push
out
fstp
dec
mov
je
add
push
sbb
daa
cs
out
dec
inc
inc
cmp
pop
dec
dec
push
shl
std
pop
push
dec
jns
ins
inc
xor
in
xor
cmp
shl
jo
ja
sbb
popa
pop
ds
sbb
gs
cmps
xchg
push
pop
push
enter
hlt
sbb
add
in
js
in
pusha
pop
je
enter
push
jnp
out
jge
(bad)
sub
in
and
stc
and
push
inc
inc
and
cmp
xor
jbe
push
dec
addr16
retf
cmp
ror
pusha
inc
jl
aas
cmps
jne
jbe
jg
test
sub
mov
push
dec
dec
pop
push
popa
pop
fwait
repnz
dec
pop
pop
sub
pop
arpl
fcomp
adc
sbb
mov
imul
sldt
ins
xchg
and
pop
(bad)
mov
inc
jmp
ins
bound
call
scas
sbb
xchg
arpl
loopne
pop
movs
sub
and
xor
add
xchg
mov
cmp
out
sahf
iret
mov
jbe
dec
arpl
(bad)
sub
jecxz
(bad)
clc
imul
cmps
dec
push
jns
cmp
pop
mov
sbb
pop
movs
push
or
dec
fwait
(bad)
add
inc
mov
mov
sbb
(bad)
pop
in
arpl
cmp
js
aam
ins
xchg
jns
xchg
jns
xor
dec
add
inc
clc
push
add
push
ins
inc
aaa
cmp
jg
js
push
fbstp
push
(bad)
push
cmps
aas
or
cmp
and
mov
scas
lock
cld
add
popa
test
add
ins
xchg
mov
add
push
ja
adc
sub
mov
add
or
ret
dec
push
gs
mov
cdq
test
ja
ja
inc
xlat
fcmovu
mov
es
ret
ret
out
leave
nop
imul
or
mov
push
mov
jbe
xor
outs
fidivr
xor
jbe
cmp
test
fld
jmp
mov
aaa
push
dec
dec
retf
nop
shr
dec
inc
cmp
call
aas
sub
ret
in
xor
(bad)
imul
sub
imul
repnz
sub
or
cmp
dec
jnp
push
xor
lds
lods
repnz
xchg
aas
mov
daa
push
cmp
xor
add
or
or
mov
push
aaa
sbb
and
jge
and
mov
or
push
int3
lods
inc
mov
lea
mov
mov
jb
add
in
push
mov
jae
jo
data16
lods
or
and
sub
add
dec
dec
scas
dec
in
loop
xchg
fs
dec
dec
lds
push
neg
mov
bound
pop
daa
pop
or
dec
outs
in
inc
out
jge
xor
add
adc
inc
push
lea
or
hlt
jns
dec
pop
movs
dec
imul
mov
xor
ror
inc
mov
sbb
adc
sub
sub
lods
call
mov
xchg
ins
aaa
xor
xchg
sbb
(bad)
mov
movups
mov
hlt
jo
mov
or
lea
add
outs
xchg
sbb
xor
sub
or
and
enter
mov
adc
xor
pop
pop
dec
pop
mov
jnp
fist
pop
dec
dec
inc
inc
dec
inc
pop
(bad)
icebp
and
popa
pop
pop
pop
inc
loopne
repz
scas
test
in
pop
push
sbb
add
outs
rcl
aaa
jnp
inc
bound
movs
mov
pusha
cwde
push
iret
repz
mov
idiv
cmp
lods
mov
xor
int3
popf
mov
push
push
add
push
ret
imul
fcom
xchg
fs
pop
stos
xchg
jne
cmp
(bad)
bound
jae
ja
mov
adc
mov
lahf
call
xor
cmp
sub
outs
xor
(bad)
loope
jmp
xor
aam
xor
dec
add
popa
bound
sub
ret
popf
into
push
pushf
xchg
mov
mov
mov
outs
jne
je
push
jbe
lahf
inc
and
xor
movs
push
and
and
mov
mov
xor
ins
dec
push
pop
push
add
xlat
or
add
popa
inc
mov
dec
wrmsr
fs
test
or
xor
mov
(bad)
xor
test
jl
sbb
loopne
outs
int
add
push
jp
pop
jae
push
push
loope
je
ds
ds
int
jp
mov
sub
push
cmp
jp
add
pushf
pushf
pop
xchg
add
into
inc
loopne
mov
and
out
gs
cmp
xorps
pop
das
and
mov
adc
cmp
mov
scas
add
sub
add
sub
test
sbb
mov
mov
fldcw
inc
push
add
rcr
add
ss
sbb
fbld
sbb
adc
sbb
mov
adc
xchg
loopne
add
inc
outs
mov
loop
sbb
jne
sub
add
inc
call
add
jb
nop
pop
pop
pop
sbb
sub
fs
mov
inc
or
fst
jne
icebp
jbe
push
cmps
mov
or
scas
or
mov
xchg
push
fisubr
jno
or
xor
retf
outs
pop
in
adc
arpl
bound
ror
data16
add
mov
pop
test
dec
lds
inc
add
add
and
mov
clc
scas
movs
bound
shl
xor
xor
push
push
jne
je
jae
pusha
push
add
inc
fs
in
loopne
pmulhuw
addr16
push
or
sbb
out
int
lods
jnp
cmp
scas
inc
and
and
je
xor
aas
es
repnz
or
in
into
call
nop
test
push
mov
test
div
in
cmp
imul
or
sbb
int3
cmp
push
inc
outs
lods
xchg
cmp
inc
in
lods
xadd
aas
inc
sbb
loopne
xchg
loope
push
test
dec
dec
jle
lea
adc
jbe
ret
popa
mov
fcomp
pop
pop
inc
jg
or
pusha
mov
inc
push
jo
inc
xlat
rcr
dec
ds
push
ss
fld
push
xchg
adc
ror
cmp
ja
(bad)
adc
push
daa
(bad)
out
sbb
or
pop
inc
push
and
(bad)
pushf
jp
call
inc
arpl
lahf
lea
push
cdq
das
test
neg
shl
hlt
mov
sbb
sub
inc
sbb
pop
inc
mov
cmp
or
je
iret
xor
jno
data16
outs
popa
lds
inc
addr16
and
sbb
xchg
in
sbb
mov
icebp
sbb
(bad)
xchg
(bad)
dec
out
add
sbb
and
imul
loopne
push
ror
fs
pop
ds
test
adc
dec
jns
out
lock
jle
mov
jb
adc
rol
aam
xor
in
dec
push
mov
mov
dec
dec
inc
es
cmp
cmp
or
stc
push
pop
cmp
cmps
push
cld
ss
push
outs
sub
pushw
std
jb
shr
cs
outs
ins
arpl
xor
dec
je
inc
pop
cmp
aad
push
push
pop
idiv
cmps
mov
xchg
mov
(bad)
lahf
inc
not
popa
arpl
sub
ins
add
pop
xor
lods
les
ins
mov
daa
sbb
xor
xor
imul
pop
sti
and
fldenv
cmp
aaa
out
mov
add
lahf
pop
sub
sub
pop
xor
sbb
arpl
jb
sub
pop
outs
lods
adc
retf
ret
rcl
mov
setno
rol
fidivr
sbb
das
or
cmp
add
and
mov
mov
scas
in
add
add
xor
in
and
add
push
out
mov
or
cmp
sbb
dec
xor
aaa
gs
outs
inc
inc
or
sti
xchg
fiadd
fs
ret
mov
xchg
and
mov
push
or
(bad)
jo
pop
add
push
mov
add
add
cdq
jmp
adc
out
iret
xchg
pusha
arpl
mov
jmp
adc
mov
and
add
das
cld
repnz
push
push
push
inc
jbe
imul
addr16
loopne
sbb
push
ss
and
jmp
jmp
sbb
mov
mov
xor
xor
mov
and
jae
sub
pop
nop
dec
sub
mov
pop
cmp
outs
or
outs
sbb
sbb
xchg
(bad)
fbld
jl
dec
fsub
(bad)
pop
sub
fld
push
cmp
lahf
popa
in
dec
imul
fimul
cs
or
or
dec
jg
scas
rol
ret
je
es
cs
(bad)
adc
popa
xchg
sbb
and
inc
mov
mov
add
into
mul
cmps
nop
fwait
push
ret
push
ins
and
mov
dec
mov
repz
mov
cmp
sub
adc
ds
inc
push
xchg
ret
xor
imul
imul
retf
jle
adc
addr16
push
cmp
adc
mov
icebp
dec
test
mov
imul
add
ret
pusha
pop
pop
sub
push
cmp
fild
xor
outs
xchg
pop
jnp
push
xor
cs
addr16
add
mov
inc
andps
add
push
mov
or
jb
ja
mov
in
lea
retf
cdq
shl
sbb
or
xor
ds
fs
in
fisubr
push
pop
adc
or
push
dec
and
(bad)
fidivr
inc
push
jge
mov
js
and
sub
sbb
fisttp
push
jo
fimul
outs
mov
and
cld
adc
or
sub
add
imul
or
sbb
outs
call
or
in
sbb
inc
pop
mov
mov
ins
mov
leave
ja
add
cld
inc
das
and
test
data16
ja
addr16
daa
loopne
mov
add
push
xchg
and
push
sbb
add
ins
mov
jbe
test
loopne
push
xor
sub
in
stc
cmp
repz
lock
clc
cld
add
dec
dec
push
push
pop
sahf
out
sahf
pop
pusha
fs
out
je
or
and
inc
popa
cmp
arpl
add
inc
pop
push
inc
push
inc
push
fldenv
inc
das
xor
dec
sahf
cmp
lock
inc
das
mov
mov
lock
jae
inc
push
das
cmp
out
movs
pop
das
push
dec
sahf
fwait
das
movs
pop
sbb
push
das
imul
or
das
inc
dec
pop
dec
lds
sub
inc
dec
push
rol
xchg
dec
push
ins
dec
pop
push
push
push
mov
repnz
cmp
cs
inc
push
leave
movs
(bad)
push
mov
jae
fidiv
push
mov
inc
and
pop
dec
ja
std
jnp
fucomip
pop
test
inc
ins
inc
inc
not
pop
pop
xor
pop
ret
fstp
cld
fiadd
out
bound
js
dec
sahf
xchg
inc
mov
lock
iret
in
mov
pop
push
pushf
cmp
loopne
sahf
xchg
out
pop
dec
pop
pop
dec
xchg
dec
jmp
jns
ror
dec
pop
daa
iret
leave
jae
push
dec
push
adc
sbb
pop
pushf
cmp
iret
cwde
push
pop
push
and
(bad)
popa
repnz
lahf
push
pop
test
dec
sahf
xchg
pop
ins
pop
xor
jns
jbe
add
dec
cmp
out
sub
xchg
(bad)
mov
rep
adc
and
call
push
inc
mov
adc
pop
jb
shr
inc
out
push
push
jne
aaa
fs
fucomp
mov
adc
adc
push
jb
jbe
ins
adc
daa
or
dec
xchg
ds
jb
jo
dec
sub
push
ins
popf
cli
scas
sub
addr16
jo
dec
arpl
pop
add
adc
mov
jmp
jae
dec
or
dec
dec
add
mov
pop
pop
mov
imul
adc
outs
outs
jo
push
in
ja
jns
sbb
xlat
pop
fdivr
push
ss
and
push
xchg
pop
daa
out
ja
mov
sub
ins
sub
push
add
jo
sbb
xchg
ja
mov
or
pop
add
sub
dec
imul
jns
js
pop
das
cdq
loope
test
stos
push
es
arpl
xor
cmp
mov
lods
loopne
dec
inc
dec
cmps
pop
test
cmps
in
das
sub
adc
ins
imul
xor
sub
data16
rol
cmp
sbb
xchg
les
mov
leave
aas
outs
fcomp
inc
fs
jmp
cmp
test
jle
call
jo
movs
push
inc
(bad)
cmp
adc
enter
xchg
dec
loopne
sbb
(bad)
sar
pop
arpl
pop
aad
mov
das
ins
push
or
xor
mov
les
lahf
mov
test
adc
and
pusha
cmp
fwait
sbb
adc
mov
push
push
xchg
das
push
adc
xor
mov
mov
push
imul
cmp
cmp
rcr
jnp
inc
add
out
add
mov
scas
cmc
lea
push
xor
sbb
cmp
dec
aas
outs
imul
jmp
loop
add
out
jae
or
jno
jne
pop
mov
dec
data16
or
into
sbb
out
push
adc
mov
pop
nop
imul
test
jne
mov
sub
das
movs
dec
pop
push
sub
call
mov
mov
adc
pop
sub
or
ret
inc
out
enter
or
push
and
jle
stos
aaa
sbb
mov
jmp
xchg
add
aam
movs
je
lahf
push
sub
add
cmp
aad
mov
push
jmp
mov
add
sub
push
(bad)
popa
das
shl
cmp
daa
pop
pusha
xor
or
add
pop
xchg
dec
ins
mov
sbb
xchg
mov
or
ficom
mov
popa
xor
mov
int
addr16
xchg
cmc
(bad)
addr16
cmp
lods
out
imul
cmp
push
out
gs
cmps
adc
jp
mov
dec
add
out
outs
fwait
repz
loopne
sub
outs
(bad)
and
dec
sbb
(bad)
cmp
vrcpss
in
aad
lock
in
data16
shl
push
mov
dec
add
dec
push
cwde
or
gs
les
cwde
leave
adc
push
and
sub
sbb
(bad)
fsub
push
dec
inc
dec
ret
sbb
in
sub
dec
jmp
dec
int
popa
xchg
push
pop
lods
or
out
gs
xchg
pop
jmp
rcr
cmps
ins
dec
icebp
push
fimul
cmp
mov
lock
arpl
(bad)
lock
pop
dec
imul
xchg
test
mov
pop
or
jge
or
test
jae
ret
imul
ss
add
hlt
or
sub
push
and
test
xor
adc
(bad)
mov
jmp
or
icebp
ins
add
scas
or
ins
sub
adc
movs
inc
push
or
and
jge
js
add
sbb
cmp
inc
or
inc
jns
xchg
mov
sbb
cmps
mov
or
mov
rol
and
xor
mov
inc
das
jae
ret
sub
inc
ss
mov
xor
ss
jnp
ffree
sub
sti
das
push
push
push
mov
inc
test
popa
or
shl
pop
cmp
dec
push
or
mov
xchg
ins
inc
mov
or
ja
inc
dec
dec
push
pop
mov
mov
or
jae
pop
cmps
ret
out
popa
fist
and
cmp
xchg
pavgb
aad
sbb
push
jbe
sbb
ret
(bad)
mov
inc
xor
rol
imul
mov
xor
adc
sub
loopne
lods
jbe
arpl
call
jne
xchg
push
push
xchg
ret
cmp
inc
jb
inc
pop
xchg
cmp
stc
push
jne
(bad)
jnp
jb
and
inc
inc
dec
dec
inc
jg
loop
les
gs
das
inc
mov
xor
sahf
cmc
das
bound
shl
xor
fiadd
in
test
jae
jge
add
sub
or
cdq
test
ja
(bad)
cmp
fcomp
mov
cmp
adc
aad
ja
shr
add
mov
add
mov
adc
pop
sti
add
push
mov
or
inc
mov
jne
fimul
call
inc
stos
adc
or
bound
cmovno
daa
inc
add
xor
shl
fisttp
je
jbe
inc
add
cmp
lods
pop
pop
sbb
mov
rcr
ds
les
inc
fld
inc
das
pop
inc
test
aas
sub
dec
div
pop
mov
(bad)
fsubr
outs
bound
pop
or
add
int3
push
outs
xchg
mov
enter
stos
cmp
aaa
or
inc
in
adc
push
mov
or
add
jne
add
fdiv
adc
ror
sub
es
lods
pop
add
cmp
popa
jmp
push
imul
cmps
int
or
sbb
mov
inc
not
pop
popf
popa
jb
stos
movs
add
jbe
cmp
sbb
test
pop
rol
or
aad
xchg
and
xchg
lea
mov
popa
xchg
mov
int
dec
arpl
sbb
pop
pop
movs
ja
mov
sub
push
pop
pop
loopne
test
inc
call
push
inc
inc
into
cli
(bad)
jg
inc
dec
inc
dec
push
dec
push
dec
dec
pop
dec
dec
push
dec
inc
push
inc
mov
inc
inc
inc
push
dec
dec
inc
call
push
dec
inc
jb
push
inc
inc
inc
push
pop
int
fdiv
push
dec
dec
pop
jl
dec
dec
inc
inc
dec
dec
dec
fdiv
test
inc
inc
dec
daa
cmp
rol
pop
push
dec
xor
daa
push
dec
dec
dec
outs
or
dec
push
dec
push
push
dec
sbb
push
inc
inc
inc
mov
imul
push
jl
das
dec
or
mov
push
push
and
mov
int3
inc
inc
mov
ss
sub
xor
ret
pop
jmp
cmp
push
fistp
cdq
push
dec
pop
inc
pop
das
lock
fcomp
push
pop
inc
mov
in
ins
into
js
rol
xor
ror
dec
dec
dec
pop
ret
lods
or
dec
push
ss
jl
or
mov
inc
aas
shl
fidiv
push
bound
imul
dec
push
dec
dec
repnz
bound
jecxz
int
loopne
push
sub
push
xor
das
cwde
pop
pop
cmp
mov
jbe
push
into
dec
mov
cwde
popa
out
push
mov
mov
push
imul
pop
dec
inc
inc
aas
adc
mov
movs
das
mov
jo
pop
adc
mov
inc
inc
mov
js
fcmovb
bound
in
push
and
popa
icebp
jo
dec
dec
inc
movs
into
dec
mov
xor
lods
ret
cmps
icebp
(bad)
sbb
das
push
and
and
arpl
ror
push
ins
int3
push
dec
push
push
jle
push
loopne
sub
push
ffreep
mov
jge
addr16
xor
js
cs
xchg
inc
add
inc
imul
rol
pop
dec
pop
inc
or
aam
jle
inc
psubsb
and
mov
push
jp
push
cs
push
inc
iret
and
mov
ficomp
dec
push
inc
dec
shr
push
sub
cmps
mov
dec
push
dec
xor
jecxz
test
aaa
dec
enter
sub
add
stos
mov
add
jp
iret
push
dec
inc
adc
mov
(bad)
push
inc
add
jbe
pop
mov
xchg
aaa
sbb
jo
hlt
lods
inc
jbe
das
adc
call
in
das
addr16
loopne
pusha
int3
mov
int
mov
adc
inc
or
aas
pop
(bad)
mov
jmp
lds
sub
adc
push
jl
shr
sub
pop
sub
dec
pop
mov
mov
rol
adc
and
sar
aam
and
das
jl
inc
enter
aas
aaa
push
adc
into
sar
nop
es
pop
dec
add
xchg
rol
imul
adc
inc
dec
aaa
dec
shl
test
pop
ja
imul
ret
inc
inc
aad
jle
pop
jge
into
dec
sub
dec
inc
rcr
xchg
and
xor
clc
xchg
(bad)
and
and
or
jne
jne
and
mov
inc
xchg
jp
int3
or
mov
das
push
dec
adc
std
or
sub
cs
push
imul
or
sub
rol
and
movs
push
inc
int
push
and
daa
mov
mov
and
ss
dec
xor
je
mov
rcl
sbb
pusha
sbb
fiadd
mov
repnz
inc
and
lods
sub
sub
jo
xor
xor
ja
and
and
and
jnp
cmp
jns
inc
ds
dec
push
ss
(bad)
sbb
aaa
outs
sbb
int
in
push
pop
push
test
or
sub
ja
outs
shl
dec
outs
jns
ret
add
and
in
pop
les
popa
mov
mov
inc
jno
jo
mov
fild
retf
loopne
inc
push
sub
xor
inc
ins
jae
jmp
sub
out
jne
shr
movs
or
jp
push
fwait
and
data16
in
mov
and
jbe
shr
retf
cmp
and
ins
jns
cmp
dec
pop
xchg
pop
cmp
je
mov
jecxz
dec
push
add
add
push
and
dec
jbe
inc
jno
sub
int
stos
add
(bad)
jecxz
lds
add
js
inc
fild
movs
or
outs
lods
push
js
pop
mov
or
jbe
sub
rcl
lea
fiadd
pcmpeqb
test
dec
or
jno
mov
inc
(bad)
lea
mov
add
les
sub
mov
inc
jns
xchg
and
cli
mov
neg
imul
fwait
sub
inc
jno
aaa
jecxz
rol
retf
jecxz
popa
aad
push
outs
les
push
sub
mov
pop
mov
ret
jns
outs
pop
lea
xchg
sbb
les
aad
xchg
iret
daa
cmp
pop
xor
xor
add
sub
ins
jae
xor
mov
ds
mov
mov
add
or
push
xchg
pop
or
addr16
add
mov
adc
outs
mov
push
pop
jne
out
add
ret
sub
dec
add
and
cmp
lahf
xlat
out
aam
sbb
sub
add
mov
xlat
mov
call
pop
add
mov
outs
test
and
and
sbb
xchg
test
adc
scas
cs
shl
xor
sub
popa
sub
imul
pop
dec
call
dec
imul
inc
mov
cmp
dec
add
test
popa
push
dec
sub
xor
xor
sbb
pushf
jne
sbb
sbb
jl
add
shl
push
add
les
mov
adc
gs
and
pop
lea
mov
loopne
mov
inc
push
or
jnp
inc
imul
ret
dec
push
cmc
sub
dec
or
inc
inc
push
cmc
push
imul
pop
outs
lds
loopne
out
pop
sbb
dec
push
lahf
or
shl
fs
or
pop
ror
cmps
inc
jnp
dec
pop
add
sub
push
outs
dec
lahf
ret
cld
jns
retf
not
stc
fidiv
dec
outs
les
jnp
ins
and
mov
loope
ror
push
sub
add
dec
or
sub
popa
inc
gs
add
adc
sub
dec
in
sub
lds
iret
or
adc
adc
jmp
popa
push
je
jne
mov
into
jbe
sub
xor
jmp
xchg
mov
pop
push
sub
pop
add
inc
add
or
je
inc
ins
push
les
test
(bad)
outs
mov
movs
xor
pop
ins
jae
lods
adc
dec
in
add
popa
pop
mov
sbb
shl
rcl
xchg
jl
cli
dec
cmp
or
push
mov
jbe
add
inc
das
add
mov
outs
xchg
push
add
sub
add
in
mov
arpl
cmp
or
jbe
es
pusha
xchg
data16
mov
add
and
loopne
rol
pop
pop
(bad)
dec
addr16
sub
mov
shl
dec
sahf
pusha
and
or
mov
out
cs
enter
(bad)
fiadd
ins
and
(bad)
push
add
rol
dec
push
(bad)
loope
and
dec
into
push
les
add
push
out
inc
xor
dec
dec
jo
ret
or
push
dec
jmp
mov
das
inc
inc
inc
push
add
ret
push
mov
dec
xchg
stc
mov
push
xor
push
push
dec
inc
push
adc
loopne
push
or
in
push
jecxz
out
xchg
jo
and
je
pop
xchg
dec
add
movs
icebp
iret
mov
in
push
mov
mov
mov
push
add
ss
popa
loopne
loopne
xor
pop
xor
push
mov
push
cli
enter
sub
xchg
ins
popa
ins
(bad)
cli
retf
bound
pop
cmp
and
cmc
pop
sbb
(bad)
push
sub
and
inc
pop
(bad)
div
adc
xchg
inc
out
push
aas
shr
dec
stos
xchg
test
mov
pop
push
mov
and
dec
jmp
arpl
push
sbb
inc
loopne
jae
inc
iret
push
test
mov
jo
jg
lds
jge
adc
mov
jmp
cmps
cmp
das
and
test
push
adc
push
ins
ja
add
dec
and
push
imul
aad
sub
cmp
ror
call
mov
dec
icebp
sub
lods
xchg
xor
out
dec
les
push
inc
bound
add
sub
test
xchg
push
dec
xchg
data16
add
fadd
pop
sub
aas
iret
pop
or
arpl
cmps
xor
jmp
sub
ss
add
add
outs
pop
shl
add
and
push
push
or
cmp
push
jo
xor
sub
pop
mov
sbb
jge
sbb
sub
sub
jp
fwait
in
xor
jecxz
pusha
shr
dec
outs
dec
pusha
and
adc
outs
dec
push
sub
push
jmp
dec
or
push
mov
out
iret
dec
bound
jle
sub
inc
div
jecxz
pop
add
lea
cmps
mov
push
das
xchg
push
loopne
sbb
stc
sbb
and
sbb
loope
vpavgw
push
das
xor
cmp
push
dec
xor
sbb
dec
mov
jecxz
sysenter
(bad)
dec
add
clc
das
push
push
sbb
rol
inc
repnz
add
adc
das
push
(bad)
rol
xchg
push
jecxz
retf
inc
dec
dec
dec
dec
inc
orps
push
loopne
imul
jb
adc
add
sbb
cwde
push
dec
dec
lds
mov
and
das
ror
xor
push
aas
movs
fnstsw
das
push
inc
push
push
and
pop
sub
pop
(bad)
ins
pop
clc
or
or
lahf
inc
xor
ins
rcl
adc
(bad)
and
pop
cdq
or
in
pop
comiss
inc
das
ror
push
cmp
add
adc
test
push
daa
das
int3
xor
inc
int3
or
and
cli
(bad)
outs
imul
test
push
mov
fwait
or
test
rcl
gs
jmp
add
imul
mov
test
mov
inc
dec
dec
push
push
push
iret
sub
mov
pop
and
sub
stos
push
loope
daa
stos
dec
imul
push
mov
dec
ss
int
dec
inc
push
rcl
xchg
lds
inc
aaa
(bad)
adc
dec
outs
(bad)
hlt
fidivr
push
lock
pusha
mov
add
push
lahf
ficom
ins
data16
ja
push
add
mov
xor
cmps
fisttp
aad
sub
ins
xchg
push
add
loopne
pop
xchg
add
test
mov
dec
pop
push
pop
shl
icebp
add
adc
lods
xchg
cmp
add
ins
jecxz
retf
xchg
sub
and
inc
push
iret
jns
and
loope
jo
mov
push
mov
lods
neg
mov
lea
pusha
aaa
cmps
or
mov
cwde
into
or
xchg
sub
add
sbb
fs
sbb
xchg
xchg
and
xor
sub
mov
fcmovnbe
pop
xor
add
lods
in
rcl
xlat
test
add
mov
aas
sbb
(bad)
fiadd
sbb
add
imul
mov
cmp
xchg
outs
sub
xor
push
mov
xchg
daa
and
and
daa
jbe
fbld
and
lock
jl
jl
sbb
jle
cmps
jbe
add
sub
add
push
dec
inc
mov
and
mov
mov
dec
lahf
jmp
fs
jg
push
loope
mov
or
movs
cmp
pushf
pop
mov
pop
inc
and
push
inc
xchg
add
pop
fsubr
fstp
mov
ret
(bad)
stos
mov
aas
and
mov
das
dec
sbb
adc
mov
cmp
xor
push
sahf
add
xor
dec
in
rcl
push
mov
jno
bound
cwde
cmp
pop
add
(bad)
call
add
(bad)
ret
test
mov
sub
jno
cmc
xchg
mov
pusha
test
je
pop
in
out
adc
jne
mov
push
dec
mov
push
xor
mov
jne
pop
add
adc
pop
lea
popa
push
cmc
mov
push
push
mov
test
xor
push
dec
and
enter
push
in
adc
and
sub
scas
jns
and
daa
jo
dec
loope
popa
sub
sub
rol
push
or
adc
or
or
add
std
cmp
xor
pop
lds
add
mov
inc
dec
jne
xor
jb
cmp
ror
inc
cvtps2pd
adc
jb
shl
cmp
repz
das
pop
fiadd
sbb
push
mov
pop
sbb
jecxz
mov
pop
popa
xchg
jmp
je
sbb
adc
addr16
add
gs
(bad)
jne
ret
imul
mov
pop
mov
lods
adc
arpl
cmp
dec
ins
sbb
inc
stos
(bad)
add
popf
mov
or
pop
popa
sub
push
sbb
xchg
popf
cmp
inc
mov
cmp
shl
and
or
ins
jg
xchg
(bad)
bound
mov
ficom
and
sub
in
add
aas
aas
out
outs
popa
xor
pop
repnz
adc
pop
sub
retf
int
hlt
pop
xchg
add
cmps
dec
push
das
xor
test
jl
dec
(bad)
ss
lock
daa
mov
(bad)
xor
push
fnstcw
and
outs
pop
dec
dec
ss
push
mov
xchg
int
jp
in
sub
dec
xor
imul
lods
dec
test
inc
inc
jo
xor
(bad)
int
add
es
imul
mov
(bad)
arpl
dec
jl
jge
push
jmp
rcl
sbb
push
inc
cmp
sub
retf
cli
in
dec
dec
sub
push
jmp
push
fld
jne
jne
addr16
cmps
cmps
outs
sub
lods
(bad)
cmp
pop
cmp
sub
sbb
shl
pop
xchg
xor
xchg
dec
out
adc
mov
inc
xor
adc
xor
ss
jecxz
pusha
hlt
fimul
inc
inc
push
pop
mov
sub
jae
rol
aaa
ret
pop
mov
rol
in
mov
pop
pusha
xchg
bound
mov
sbb
and
inc
mov
popa
fild
xor
scas
xor
jae
xchg
jno
lds
push
and
add
inc
xchg
dec
dec
hlt
xchg
pop
inc
or
xchg
jo
xchg
cmp
cdq
ja
add
xor
pop
iret
repz
les
js
nop
cwde
repz
repz
iret
repz
int3
aam
in
hlt
dec
mov
cmp
xor
or
sbb
iret
repz
cmp
pop
push
je
mov
iret
test
mov
out
cmp
clc
add
or
jns
out
sbb
and
out
sahf
out
xor
cmp
sahf
out
sahf
inc
dec
dec
push
pop
pusha
cmp
(bad)
jns
bound
jmp
add
repnz
cmps
sub
gs
and
icebp
fistp
out
sbb
loop
mov
mov
call
dec
movmskps
in
daa
inc
push
inc
dec
push
push
pop
xchg
xchg
xchg
fld
das
push
push
dec
cld
pop
loopne
ins
cs
push
inc
dec
dec
sbb
pop
push
rcl
test
dec
dec
inc
mov
shr
retf
fs
adc
jnp
cmp
pusha
out
pushf
mov
xor
cdq
ficomp
lods
add
(bad)
and
push
xor
aaa
xor
add
cs
jbe
test
pusha
mov
push
jb
push
mov
mov
cmp
pop
rol
daa
pop
(bad)
push
adc
idiv
mov
push
dec
mov
pop
dec
adc
xor
inc
push
dec
sbb
ss
das
outs
cmp
shl
inc
xor
cmp
or
jl
aam
push
xchg
dec
adc
sbb
inc
push
adc
pushf
fwait
ret
daa
sti
pop
cmps
pop
inc
(bad)
pop
in
push
push
aam
jmp
outs
sub
xchg
mov
arpl
mov
add
push
lahf
out
fiadd
rcl
mov
sahf
pop
add
cdq
jbe
test
pop
fs
push
dec
push
out
sbb
adc
push
fiadd
(bad)
shr
add
fdivr
mov
jne
daa
inc
inc
and
sahf
add
jo
in
mov
stos
cli
lea
or
pusha
push
pop
sub
icebp
mov
and
xor
mov
repz
dec
inc
dec
das
and
popa
or
(bad)
adc
push
js
in
ins
(bad)
xor
mov
and
xchg
(bad)
add
iret
(bad)
push
pop
add
in
mov
pop
pop
not
sar
push
stos
xchg
stos
push
jnp
push
or
hlt
xor
jae
mov
sub
sub
inc
xor
inc
xor
pop
sahf
imul
sub
mov
dec
xor
inc
mov
and
jecxz
(bad)
xor
mov
popa
pop
fs
mov
dec
push
cmp
scas
jns
cmp
outs
mov
mov
cmp
sbb
xchg
ja
nop
dec
push
pop
out
inc
in
inc
mov
xchg
fimul
call
mov
rol
push
adc
cmp
ja
xor
lods
movs
rol
cmp
cmp
ins
sti
(bad)
mov
push
mov
or
scas
out
push
inc
mov
cmp
add
mov
sub
or
ret
pushf
rcr
sub
in
ins
xchg
je
add
sub
inc
push
ror
clc
loop
jge
movs
popa
and
mov
mov
adc
stos
and
lea
js
dec
inc
dec
stos
retf
mov
sub
jmp
jb
push
imul
xor
mov
xchg
jae
xchg
outs
shl
scas
xor
(bad)
(bad)
push
fdivr
ins
jo
pop
or
mov
and
int3
iret
je
packssdw
sbb
fcmovne
pop
inc
push
sub
test
and
inc
xor
xor
loopne
adc
outs
outs
loopne
jae
imul
fwait
pop
push
xor
mov
xor
xor
or
ins
or
lds
pop
sbb
movs
leave
arpl
lahf
daa
or
rol
lods
(bad)
ins
aas
popf
or
ds
jae
xor
or
mov
xchg
stc
xchg
inc
out
xchg
adc
jne
mov
lea
cmp
add
ficomp
xchg
dec
pop
inc
xchg
test
inc
cmp
pop
cmp
(bad)
sbb
cmp
add
lahf
int
mov
jo
inc
push
rol
mov
cmp
rcl
lds
mov
xchg
pop
out
dec
push
xor
jb
scas
cs
mov
rcr
ss
push
mov
sti
stc
cmp
mov
das
pop
sbb
inc
push
dec
add
ficomp
ror
sub
sbb
jge
dec
add
inc
(bad)
xor
push
scas
pop
cmp
test
cs
push
and
mov
push
push
inc
xlat
sbb
dec
push
or
push
dec
xchg
add
push
push
pop
pop
test
xchg
sub
into
inc
ins
add
pop
add
bound
iret
sbb
inc
pop
daa
sub
and
cmp
mov
int
iret
push
push
ja
fist
aam
pop
add
dec
push
dec
xor
sub
cmc
add
adc
aaa
addr16
sub
xchg
lock
aaa
dec
adc
das
inc
test
ds
mov
xchg
inc
pop
sbb
ins
and
and
dec
push
dec
inc
push
das
dec
mov
rol
jl
adc
outs
jg
out
nop
fst
lock
cmp
out
or
push
push
mov
sbb
test
bound
(bad)
enter
into
push
mov
jne
mov
stos
xchg
push
pop
in
inc
sbb
fwait
popa
mov
loopne
addr16
jle
adc
call
inc
push
dec
inc
(bad)
jo
xor
cmp
push
cmp
add
dec
jbe
pop
test
jbe
or
ficom
stos
movs
xor
outs
mov
inc
popa
(bad)
mov
pop
enter
jo
pop
rcr
imul
popa
adc
sub
and
sub
or
fcmovb
mov
xor
rcr
jae
or
sub
mov
sar
jo
(bad)
iret
push
popf
inc
add
cmovg
inc
sbb
mov
mov
fcmovb
jbe
test
jae
ror
pop
mov
loop
inc
or
div
adc
int
(bad)
scas
pop
xchg
add
push
lahf
push
add
pop
cmp
or
push
push
inc
push
mov
inc
mov
and
imul
loopne
jbe
or
mov
inc
and
xor
mov
call
idiv
daa
xchg
sub
aad
and
ret
jne
xor
inc
dec
cmp
shl
add
test
jbe
pop
outs
imul
or
add
(bad)
cmp
out
pshufw
jmp
outs
jmp
add
fs
(bad)
nop
or
mov
shl
add
or
lods
push
push
adc
xor
add
add
loop
dec
and
cmp
or
ds
or
or
mov
sbb
ins
fidiv
sbb
cmp
dec
dec
mov
add
or
add
sub
inc
outs
mov
fadd
shr
mov
movs
mov
aaa
or
pushf
dec
iret
and
lods
iret
fisubr
push
(bad)
jns
push
dec
inc
mov
add
dec
push
xor
jne
movs
(bad)
scas
je
xchg
shl
pop
add
out
pop
cwde
or
mov
xchg
adc
push
bound
inc
add
or
or
push
(bad)
sub
(bad)
xor
cs
scas
mov
sub
or
jbe
push
cmps
mov
dec
cmp
mov
fsubr
push
cmps
push
pop
jecxz
addr16
cmps
mov
or
sub
call
sbb
(bad)
cmp
sub
in
adc
mov
add
pop
jbe
or
xchg
test
cdq
mov
mov
push
movs
add
mov
dec
mov
inc
enter
arpl
pop
into
xchg
cmp
jb
cmp
push
xor
vunpckhps
lea
xchg
test
stos
and
movs
xor
sbb
pop
and
lds
xchg
dec
fsubr
mov
call
ficomp
cmps
(bad)
or
int3
and
fld
test
aaa
pop
aaa
add
inc
sbb
sub
mov
sbb
test
jb
mov
and
aas
(bad)
inc
loopne
das
sbb
daa
ss
iret
inc
sbb
inc
mov
add
lds
(bad)
xchg
push
sub
fsubr
mov
sbb
invd
inc
sub
jg
and
rcr
jmp
packssdw
or
lods
bound
(bad)
pusha
xchg
push
addr16
and
fs
shr
dec
fstp
or
dec
imul
ror
fs
add
or
aaa
adc
movs
ret
fidiv
or
mov
mov
sub
add
push
aaa
movs
or
(bad)
loope
fild
cmc
push
imul
outs
dec
pop
ja
push
and
call
jne
imul
jne
in
in
sbb
push
xor
xor
js
cs
xor
ja
gs
jmp
mov
pop
cmp
xchg
scas
and
jae
add
je
or
adc
inc
adc
jmp
sbb
dec
ins
xor
aas
dec
mov
jbe
popa
mov
arpl
aaa
sub
sub
dec
jns
not
pop
inc
cmps
inc
or
add
sub
gs
inc
push
add
or
add
cmp
scas
ror
adc
dec
rol
cmp
and
ins
and
mov
xchg
in
xor
ficom
sar
cs
ret
dec
lock
xor
out
sub
fwait
sbb
inc
dec
add
adc
int3
aam
jae
push
push
push
dec
pop
sbb
or
cmp
jmp
scas
cmp
xchg
sbb
xor
jo
loope
mov
dec
pusha
mov
pop
lock
sbb
outs
add
dec
dec
int3
cmp
scas
cs
push
or
pop
add
sbb
call
mov
push
movs
aas
pop
js
ret
popa
add
cs
fld
push
dec
mov
(bad)
cs
aaa
(bad)
arpl
aaa
adc
push
mov
push
pushf
repz
mov
push
ror
(bad)
cmp
aam
call
and
neg
pop
addr16
sbb
push
sar
sbb
or
je
cmc
dec
(bad)
aaa
add
int3
rol
movs
out
cs
add
and
mov
and
leave
jae
xor
pusha
ss
mov
or
mul
sub
cwde
ins
es
mov
lea
ror
mov
or
pushf
jae
or
xchg
push
arpl
mov
xchg
test
(bad)
ins
pop
arpl
xor
(bad)
ja
test
ins
add
cs
and
mov
rdmsr
cmp
xor
dec
pop
sahf
out
sbb
sbb
inc
jns
out
dec
pusha
ins
adc
mov
fdiv
iret
repz
or
and
push
ins
test
repz
test
fdiv
jns
cmps
stc
or
and
push
lods
repnz
push
push
push
cwde
jns
out
pushf
push
movs
test
shl
sahf
out
int3
aam
loopne
repz
in
cld
or
or
cmp
repz
sub
cmp
repz
repz
pusha
ins
je
iret
repz
mov
mov
hlt
nop
cmps
push
sbb
ds
repz
ins
push
sahf
push
fs
out
push
jo
mov
out
fsub
clc
xchg
sbb
push
add
or
xor
outs
xchg
cmps
xor
or
cs
shl
(bad)
sub
jbe
ja
ja
out
or
jbe
push
dec
gs
sar
cmp
xor
adc
xor
bound
xor
jg
sti
mov
xor
push
dec
inc
xor
ss
retf
daa
fs
loopne
lahf
xor
xor
(bad)
add
idiv
push
xor
xor
push
push
inc
pop
nop
xchg
or
sbb
and
add
xor
dec
cld
sub
in
fnstenv
xor
xor
pop
ins
add
leave
xor
in
add
xor
xor
xor
test
xor
das
mov
xor
ss
adc
outs
jae
cmp
push
pop
xor
mov
adc
jb
pop
or
mov
dec
pop
cmp
cmp
je
dec
sti
bound
add
sub
or
push
add
pop
ins
gs
xor
or
mov
inc
out
inc
add
xor
mov
dec
xor
mov
jae
out
fcmovb
jb
sub
push
popa
pop
xchg
bnd
cwde
sub
pop
neg
jo
imul
xchg
dec
push
inc
xchg
jb
xor
ja
jo
cmp
or
(bad)
or
or
xchg
aaa
inc
jae
pop
mov
mov
push
push
and
cmp
scas
xor
adc
ds
mov
sahf
je
js
push
mov
push
pop
fsub
inc
pop
sub
pop
aas
xor
mov
pop
sub
xor
jg
jecxz
or
mov
js
ins
fstp
push
pop
jae
ret
imul
cmp
xlat
fldcw
cdq
xor
jne
imul
(bad)
and
add
loopne
pop
enter
rcr
dec
and
xlat
adc
sbb
inc
iret
xor
sub
gs
popa
daa
daa
jno
das
outs
pop
imul
dec
packuswb
xchg
loop
cmp
mov
adc
and
push
adc
dec
jmp
adc
ins
sbb
pop
cmps
and
sbb
leave
push
mov
test
adc
in
pop
push
imul
sub
cmp
sub
sbb
mov
imul
loope
or
les
xchg
lods
dec
push
sbb
jle
inc
inc
nop
mov
sub
test
pop
sub
push
mov
js
es
mov
dec
jmp
push
pop
mov
pop
jp
nop
mov
adc
rcr
jmp
jmp
mov
jo
mov
xchg
or
test
add
ja
pop
add
or
repz
or
loopne
daa
popa
repnz
call
adc
push
inc
cs
or
test
add
mov
jo
lock
sub
(bad)
jg
sbb
push
xlat
mov
inc
dec
inc
clc
push
dec
sub
add
push
cmp
lds
mov
outs
sub
and
(bad)
ja
sub
rcl
add
dec
sbb
jo
xor
and
add
jae
scas
inc
push
gs
jmp
scas
push
push
aas
(bad)
ss
inc
pop
mov
xlat
sub
jle
sub
test
loop
xor
loop
add
push
test
cmps
push
call
mov
or
jb
ins
(bad)
das
pop
dec
dec
push
add
mov
and
adc
pop
or
sub
adc
(bad)
mov
rcl
push
lods
pop
push
js
daa
mov
or
add
daa
jne
add
cs
or
push
stos
mov
push
adc
add
xor
adc
mov
ins
cmp
mov
mov
inc
jb
jp
dec
js
lds
push
and
push
dec
sbb
push
(bad)
mov
pop
(bad)
(bad)
mov
mov
or
mov
cmps
scas
cmps
or
jecxz
sub
inc
aam
daa
mov
xor
popa
pop
pop
xchg
mov
mov
movs
cmp
inc
addr16
push
mov
(bad)
(bad)
push
test
or
sub
ret
ret
(bad)
bound
sbb
mov
cmps
xor
aaa
test
mov
pop
push
push
mov
aaa
cdq
add
pop
add
cmp
mov
push
mov
stos
add
aaa
adc
popf
add
test
fs
pop
inc
sub
lods
pop
fimul
sbb
jmp
add
mov
mov
xor
imul
pshufw
(bad)
fisub
add
xor
jae
sahf
pop
popf
movs
ret
push
clc
daa
xchg
jp
add
push
ss
test
add
inc
add
dec
adc
or
enter
scas
dec
mov
sbb
mov
int
mov
push
mov
adc
inc
dec
pop
adc
mov
or
xor
fnsave
outs
(bad)
(bad)
(bad)
out
inc
(bad)
sbb
sbb
or
dec
and
mov
mov
aas
add
call
or
adc
jns
lods
cmp
xor
retf
ss
pop
pushf
dec
das
cmp
mov
sub
pop
add
popa
inc
xor
sub
sahf
cmps
push
push
push
jbe
jnp
std
or
imul
add
(bad)
push
mov
push
add
jns
xor
bound
jb
ins
add
pop
pop
mov
or
ja
jns
jge
jae
push
push
imul
or
xchg
jae
ins
gs
lds
adc
pop
mov
call
daa
push
add
mov
jne
inc
mov
mov
inc
push
mov
sahf
inc
push
int3
fsub
lock
cmp
sar
sbb
sub
mov
repz
clc
dec
cs
iret
push
fsub
pop
pusha
lock
out
jns
fs
jl
nop
out
retf
push
test
mov
imul
mov
push
mov
test
push
mov
out
sahf
mov
mov
sahf
out
int3
rcl
fcomp
repz
out
in
hlt
add
iret
repz
or
cmp
fdivp
cmp
lods
int3
inc
in
adc
iret
repz
push
push
jo
mov
call
add
or
sahf
out
sbb
inc
fs
xor
out
fmul
xor
data16
cmp
ins
cwde
(bad)
loopne
xchg
cli
cmp
sti
push
add
push
and
pop
pop
jmp
xor
ret
push
ins
popa
fimul
arpl
push
not
xchg
div
fs
ins
js
xor
add
push
push
jbe
xor
jb
gs
(bad)
stc
out
popa
bound
jo
jb
xor
and
daa
loope
sub
and
inc
push
cwde
add
test
push
cmp
add
mov
neg
sub
(bad)
inc
push
(bad)
es
sub
test
xchg
ds
mov
sub
push
jle
push
jl
pop
iret
jnp
pop
jl
sub
sub
sub
cmp
addr16
out
cmp
dec
ret
pusha
jbe
sbb
add
bound
xor
and
mov
es
mov
xor
das
loopne
jnp
out
jbe
js
sub
pop
mov
adc
push
cmp
fmul
sub
mov
inc
sti
pop
jae
fist
popa
jg
jge
in
xor
cmp
aas
jne
mov
push
mov
imul
mov
loopne
inc
retf
or
add
inc
or
aas
or
inc
add
push
pusha
jne
je
xor
test
push
and
fistp
sbb
pop
pop
adc
or
mov
or
jo
sbb
xchg
pop
pop
jge
cmp
add
in
fs
sub
inc
in
and
(bad)
dec
lahf
inc
and
jns
test
in
sub
or
mov
mov
cwde
sub
fadd
and
xor
scas
and
test
pop
cmc
jno
cmp
and
add
or
loopne
mov
fldenv
inc
pop
inc
xchg
les
bnd
jbe
sbb
retf
inc
out
pusha
sbb
dec
jle
scas
adc
mov
popf
ds
dec
inc
or
add
shl
aas
loop
cmp
or
arpl
dec
add
inc
jmp
lahf
or
(bad)
(bad)
sti
mov
movs
pop
ret
icebp
sub
cmp
add
xchg
stc
adc
iret
mov
nop
gs
sub
(bad)
xlat
add
call
fwait
add
xchg
add
cmps
cli
lds
fbstp
fsubr
jmp
icebp
ror
mov
(bad)
(bad)
(bad)
(bad)
out
and
out
fild
ds
inc
int
or
data16
cmp
(bad)
(bad)
jmp
add
inc
pop
and
dec
ret
pop
ror
mov
jl
and
(bad)
dec
test
or
jl
xchg
and
sbb
ficom
mov
(bad)
sti
(bad)
jmp
add
rcl
mov
sub
(bad)
and
mov
(bad)
dec
inc
push
ss
pop
loopne
fadd
inc
(bad)
imul
(bad)
(bad)
(bad)
aas
sar
dec
xor
inc
dec
in
and
mov
je
pop
ror
sbb
adc
out
test
pop
popa
dec
pop
sub
sbb
loop
add
xor
das
out
daa
push
arpl
jmp
or
pop
dec
(bad)
(bad)
(bad)
sbb
fild
es
lods
add
jb
stc
aad
xchg
sub
cs
(bad)
(bad)
jmp
lods
push
fidiv
mov
mov
dec
dec
jecxz
add
shl
call
fwait
rcl
retf
adc
adc
fdivr
cmp
(bad)
(bad)
call
cdq
sbb
sbb
xchg
add
adc
xchg
(bad)
mov
push
or
push
call
and
xchg
cmp
adc
mov
les
fwait
popf
call
addr16
sub
xor
push
dec
mov
push
jg
cmp
cmp
(bad)
fld
(bad)
(bad)
(bad)
fbstp
gs
dec
sub
loopne
ins
ret
push
iret
leave
xchg
daa
push
stos
loop
daa
out
pushf
cmps
mov
(bad)
dec
in
hlt
lock
jg
ins
or
add
inc
ret
pop
sub
(bad)
(bad)
(bad)
(bad)
out
sbb
mov
int
movs
sbb
inc
imul
push
sbb
movs
(bad)
(bad)
(bad)
jmp
loope
mov
xchg
push
aas
int
cmp
inc
inc
dec
push
xchg
cli
(bad)
(bad)
call
push
cdq
out
inc
xor
mov
jno
(bad)
(bad)
fdivr
fs
out
pop
repnz
adc
inc
xchg
and
rol
xlat
jge
ficomp
popf
fidivr
call
mov
retf
cwde
adc
xlat
nop
cmp
loop
stos
stc
outs
ja
es
or
(bad)
jg
pusha
adc
nop
or
pop
fcmove
es
push
xchg
xchg
call
jmp
inc
mov
leave
ds
mov
out
sar
inc
add
mov
(bad)
(bad)
(bad)
jmp
and
and
mov
pop
inc
bound
jp
pop
movs
into
xor
dec
ins
ins
mov
xor
(bad)
(bad)
call
push
adc
and
test
xchg
shl
dec
push
scas
sub
lods
xchg
ror
cli
mov
pop
clc
dec
sub
shr
pop
imul
inc
add
daa
dec
pop
outs
push
scas
(bad)
in
stos
mov
out
(bad)
mov
pop
repnz
xor
sub
mov
or
dec
push
xor
cs
(bad)
jg
inc
retf
js
fwait
xor
lds
es
pop
cmp
(bad)
(bad)
(bad)
call
push
in
test
dec
fwait
clc
push
xchg
stos
or
scas
add
sub
imul
aad
jbe
(bad)
(bad)
inc
ror
(bad)
call
lock
je
pop
cmp
adc
lods
(bad)
(bad)
(bad)
dec
retf
xchg
call
jb
mov
stos
nop
pop
and
xor
jmp
(bad)
(bad)
(bad)
stc
outs
call
xchg
or
lock
repnz
inc
mov
leave
popf
xchg
or
jl
add
jmp
sub
adc
pop
sar
jp
in
mov
adc
(bad)
jmp
cwde
int
lds
adc
pop
rcl
mov
mov
jmp
cmp
leave
dec
sbb
dec
jns
or
shr
ins
pop
sbb
(bad)
call
sbb
jb
(bad)
js
mov
xchg
in
sub
(bad)
jmp
outs
jge
fwait
out
cmp
mov
xor
(bad)
(bad)
fcomip
pop
sub
pop
fidivr
pop
inc
adc
jne
es
addr16
arpl
std
(bad)
(bad)
(bad)
std
jecxz
cmp
xor
mov
pop
and
inc
pop
fcom
sbb
push
les
mov
mov
cmc
loope
dec
mov
in
out
dec
addr16
(bad)
(bad)
dec
mov
test
cmp
ret
int3
xchg
sub
aas
cmp
div
js
clc
(bad)
(bad)
(bad)
fild
rcr
ds
pop
in
ja
retf
pop
push
das
add
dec
(bad)
dec
xor
hlt
push
or
loope
mov
cs
mov
(bad)
(bad)
(bad)
(bad)
jp
mov
ja
dec
ror
shl
clc
test
addr16
lods
mov
enter
popf
xchg
add
dec
pop
cmp
mov
push
dec
call
sbb
or
stos
xlat
jl
loope
pushf
movs
fwait
jne
(bad)
jmp
lock
pop
push
xchg
aam
icebp
add
jb
sbb
ss
stos
js
(bad)
(bad)
(bad)
jmp
scas
push
cld
cmp
sub
add
mov
inc
sahf
mov
(bad)
inc
ret
jl
bound
sbb
scas
mov
cs
push
stos
lea
xchg
dec
cld
call
(bad)
shl
rol
rol
fwait
pushf
push
icebp
lods
fadd
(bad)
(bad)
(bad)
jmp
(bad)
jae
ins
jmp
add
mov
and
xlat
test
(bad)
(bad)
(bad)
mov
sbb
push
call
sti
pop
pop
das
cmps
dec
mov
dec
in
bound
in
mov
aam
adc
repnz
test
jmp
cmp
adc
dec
hlt
xor
icebp
mov
adc
dec
jae
psraw
(bad)
jmp
pusha
inc
adc
cmp
mov
and
fimul
inc
dec
stc
(bad)
ins
(bad)
(bad)
mov
add
push
les
bound
jmp
popa
push
int3
adc
ror
ss
sahf
sub
(bad)
(bad)
(bad)
push
or
dec
repz
cmps
movs
ja
and
int3
das
jb
xor
mov
xor
call
mov
and
int
ds
(bad)
jo
(bad)
(bad)
(bad)
jg
mov
std
sbb
inc
clc
fnstsw
out
xchg
imul
icebp
mov
scas
stos
mov
cmps
clc
out
or
add
stos
ret
fnstenv
sub
xlat
loope
(bad)
(bad)
(bad)
jmp
out
or
jb
sbb
(bad)
into
fadd
sub
fld
lea
daa
lods
shl
mov
jg
(bad)
(bad)
mov
push
mov
jmp
inc
fmul
popf
(bad)
fadd
mov
xor
push
ret
mov
push
add
adc
mov
vmwrite
std
ss
(bad)
jmp
cld
jbe
loope
bound
es
sbb
add
shl
sar
jae
fstp
cs
(bad)
(bad)
call
popa
loop
arpl
mov
aad
popa
xchg
and
or
sub
pop
pusha
push
(bad)
(bad)
call
mov
jae
icebp
pusha
(bad)
retf
fild
aaa
xchg
data16
dec
sbb
or
(bad)
dec
pop
ss
lds
enter
and
push
(bad)
(bad)
(bad)
(bad)
inc
rcr
fstp
out
mov
cmp
test
std
and
ret
aam
call
add
(bad)
(bad)
(bad)
jg
mov
dec
movs
outs
or
je
push
mov
push
(bad)
je
aam
mov
push
int3
pop
(bad)
(bad)
mov
mov
sbb
mov
icebp
mov
jno
arpl
sub
call
lahf
das
ficomp
pop
cmp
aaa
ja
cmp
mov
sub
mul
out
push
in
lods
pushf
mov
pop
cli
in
(bad)
(bad)
(bad)
mov
ds
int3
scas
test
pop
popf
shr
call
outs
xchg
imul
cmp
(bad)
(bad)
jmp
xor
cmp
mov
test
push
es
fimul
cmp
mov
sub
test
iret
ins
jle
in
cdq
sub
add
add
add
add
add
add
add
push
pop
int
ins
mov
cmp
sub
ds
or
fwait
int
mov
push
or
imul
or
stc
int
aaa
setg
push
ldmxcsr
mov
adc
fild
adc
adc
adc
or
int
aaa
fwait
pop
pop
jo
mov
or
mov
call
or
or
or
loope
ss
pusha
add
and
hlt
sub
jl
add
cmc
add
lods
daa
sub
mov
xor
test
or
jne
pop
dec
jl
xchg
push
pop
shr
pop
jnp
mov
pop
outs
je
dec
js
sbb
cli
test
pop
jnp
inc
cmp
data16
outs
jp
jge
(bad)
fwait
addr16
jo
mov
jbe
jne
cmp
ffree
push
push
jae
and
gs
push
sti
mov
sub
scas
cwde
daa
shl
repz
rcl
adc
fild
sub
sub
xchg
shl
movs
es
test
jge
outs
or
push
adc
mov
mov
push
jae
push
mov
inc
sub
push
push
add
(bad)
sbb
jns
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
ret
mov
mov
push
jo
jb
pop
in
mov
jb
mov
sub
mov
aas
aaa
repnz
into
aas
xlat
pop
sbb
push
add
add
add
push
add
add
add
xor
add
and
push
pop
pop
je
xor
loope
add
push
or
pusha
sahf
frstor
loopne
loopne
js
sub
inc
jae
data16
add
scas
cmp
or
sti
push
pop
repnz
jae
inc
sub
push
xchg
test
add
outs
jmp
pushf
lods
aas
fist
inc
pop
and
dec
pop
push
movs
repnz
mov
cmp
lods
inc
test
push
jo
repz
test
cmp
ds
push
push
cmp
out
outs
cld
dec
push
pop
es
jns
repz
xchg
movs
mov
out
cmc
adc
push
cmp
mov
out
jo
mov
mov
out
rol
in
out
inc
das
jmp
sbb
sbb
and
imul
aaa
inc
sub
jne
pop
and
data16
push
das
or
ficom
clc
cwde
and
inc
jb
sbb
mov
test
arpl
push
ror
xchg
mov
adc
pop
add
mov
jp
push
pop
cmps
cmc
add
outs
popf
add
adc
xchg
mov
fiadd
scas
mov
test
xlat
popa
shl
dec
shl
nop
popa
mov
xchg
cmps
(bad)
popa
add
scas
mov
movs
test
xor
mov
popa
cmc
push
inc
xor
cmp
lods
mov
mov
cmp
aaa
pop
add
inc
imul
cmp
aaa
sub
lods
or
dec
mov
mov
popa
cmp
add
sub
pop
stos
pop
pop
mov
popa
or
xor
or
pop
dec
fcmovnb
shl
push
addr16
cmc
push
int
mov
xchg
popa
sub
call
js
add
adc
arpl
pop
cmp
pop
test
das
outs
add
lock
sbb
aas
add
add
scas
rcl
add
and
or
(bad)
nop
xchg
xchg
es
and
and
dec
or
add
mov
gs
mov
sbb
pop
mov
inc
out
or
retf
pop
and
pop
outs
jl
test
out
movs
and
inc
cmp
adc
(bad)
cmps
js
inc
ja
or
push
cmc
in
or
arpl
pop
push
ja
jbe
outs
jb
jns
push
xor
xchg
jns
test
daa
(bad)
cmp
mov
adc
mul
push
les
jns
out
enter
aam
jl
out
fsub
xor
push
iret
repz
cmp
inc
cmovl
cmp
repz
add
cmp
repz
ins
or
repz
jo
js
sbb
repz
sbb
iret
repz
repz
mov
mov
iret
repz
and
test
ja
push
pop
sbb
xor
fistp
out
in
test
femms
stos
cmp
jg
and
push
add
and
jl
xlat
popf
lahf
add
mov
in
out
not
jge
adc
sbb
inc
cmps
add
in
mov
push
jmp
jae
addr16
sahf
inc
sub
fnstenv
mov
inc
ins
push
rol
fiadd
loope
neg
nop
push
fdivr
adc
cmp
dec
pop
ror
idiv
js
push
and
adc
repz
rcr
adc
mov
jo
outs
xor
gs
and
adc
push
pop
(bad)
fsubr
outs
xor
pop
or
pop
outs
inc
lock
test
imul
and
cmp
pop
js
pop
xor
arpl
into
xchg
jg
outs
popa
sbb
xlat
and
jecxz
xlat
scas
xor
jge
and
es
inc
das
aad
jg
sub
js
inc
leave
or
push
jne
inc
rol
dec
inc
arpl
loope
scas
sbb
xchg
jns
rcr
mov
and
pop
arpl
aad
div
fidiv
inc
sub
pop
popa
xchg
imul
ja
mov
sbb
bsr
fs
outs
cmps
(bad)
cli
mov
and
pop
ins
rcr
lahf
imul
pop
rcr
aam
jo
jae
dec
push
dec
dec
das
inc
sub
xchg
int3
jbe
les
add
nop
and
das
add
xchg
and
sub
retf
add
pop
mov
xlat
dec
outs
mov
repnz
xchg
push
rol
cmp
das
push
mov
(bad)
push
jo
jae
and
rcr
xchg
add
dec
inc
dec
popa
jo
das
inc
jecxz
pop
ins
adc
inc
fst
mov
jno
adc
push
push
cmp
shr
add
and
dec
mov
test
add
add
add
or
out
push
jo
mov
outs
mov
xor
adc
sub
fisub
imul
add
add
and
shr
stos
mov
mov
xchg
pop
push
shr
fs
add
sub
add
add
(bad)
inc
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
mov
xlat
lea
and
movs
jno
inc
sbb
cs
adc
add
cmp
mov
jp
pop
xchg
inc
test
jle
jl
jle
(bad)
call
bound
inc
(bad)
aas
add
pop
and
add
loop
ret
add
push
pop
pop
leave
inc
push
(bad)
push
adc
xor
(bad)
aas
push
jb
ret
jae
inc
loop
call
and
inc
ds
arpl
inc
dec
push
push
dec
dec
das
fs
jns
dec
cmp
and
adc
sub
dec
cmp
pushf
xor
cmp
mov
dec
(bad)
push
push
gs
or
icebp
cld
pop
push
pop
out
sub
ret
outs
fld
pop
(bad)
jae
lahf
inc
mov
fst
daa
mov
and
pop
jnp
pop
mov
dec
daa
dec
outs
push
inc
cmp
call
pop
mov
dec
jne
ins
aas
imul
push
cmps
gs
sahf
scas
outs
cmp
jbe
jbe
adc
mov
jns
jb
shl
ins
out
out
mov
popa
xor
sub
mov
popf
icebp
div
pop
and
mov
pusha
or
inc
daa
pop
pop
ins
daa
mov
(bad)
dec
outs
mov
jle
das
add
jmp
mov
dec
add
and
xchg
and
dec
add
add
push
jae
loop
rcr
or
add
dec
out
loop
xchg
mov
add
inc
push
inc
push
push
pop
out
scas
cmp
push
ins
push
je
sahf
out
sahf
mov
mov
rol
fcom
int
jns
in
in
hlt
cld
add
or
iret
repz
and
inc
pop
repz
rep
jl
cwde
mov
test
mov
iret
repz
loopne
lock
add
jnp
out
push
and
sub
cmp
inc
push
jns
repz
js
dec
mov
dec
push
(bad)
in
add
out
pop
sbb
push
pop
ja
xor
out
mov
repnz
das
xchg
fmul
repz
ins
addr16
ins
push
cmps
push
fisubr
xchg
sub
push
lods
(bad)
push
sub
push
sahf
add
scas
xchg
icebp
fstp
aaa
sub
add
xor
sahf
rcl
repz
dec
pop
push
sub
sub
adc
pop
addr16
dec
das
push
mov
shr
jg
jg
ins
pop
jae
or
inc
add
xor
jns
daa
hlt
shl
push
add
out
jns
out
fadd
add
jns
pop
clc
mov
ror
or
or
adc
sahf
out
sahf
sbb
or
out
xor
cmp
inc
out
sahf
out
dec
adc
sahf
out
sahf
pop
adc
adc
out
jo
js
and
sahf
out
mov
nop
sbb
out
sahf
cwde
sbb
jns
out
mov
mov
int
and
enter
out
sahf
shl
jns
out
call
repz
out
add
or
adc
sbb
and
cmp
repz
cmp
cmp
repz
repz
aas
dec
inc
iret
repz
push
inc
pop
inc
pusha
inc
cmp
repz
inc
jo
js
cmp
repz
or
iret
repz
nop
dec
cwde
dec
mov
cmp
push
mov
mov
pop
shl
out
call
loopne
sar
add
add
add
repz
pop
adc
jns
into
repz
pop
or
sub
repz
or
xor
inc
push
dec
in
iret
cmp
dec
fs
jns
cmp
adc
jo
push
jl
iret
repz
mov
xchg
sbb
cmp
repz
iret
repz
sbb
sbb
sbb
cmp
call
sahf
cmps
stc
add
or
sbb
jns
out
and
xor
cmp
dec
daa
push
sub
out
pusha
sub
out
sahf
out
test
jns
test
mov
shl
fdiv
in
jns
out
lock
cmp
repz
or
adc
and
cmp
repz
inc
cmp
repz
repz
push
inc
push
iret
je
add
cmp
repz
dec
movs
dec
mov
cmp
repz
mov
repz
aam
loopne
in
push
sahf
out
cmp
push
add
pop
adc
sahf
out
gs
xor
sar
inc
adc
add
add
pop
push
push
out
je
or
out
sahf
adc
jns
out
push
mov
jns
out
sub
cmp
iret
repz
adc
imul
imul
push
pop
jns
out
pop
or
je
jns
out
sbb
cmp
imul
push
call
test
lock
out
into
inc
adc
adc
out
sahf
and
xor
cmp
jns
out
dec
or
push
imul
movs
test
mov
sub
mov
push
call
jns
ja
push
add
dec
push
adc
sub
cmp
repz
cmp
inc
or
aas
and
push
imul
test
push
call
dec
movs
jmp
sub
sub
dec
push
imul
jnp
push
call
push
(bad)
cmp
or
sbb
and
cmp
xor
cmp
dec
xchg
cmps
rcl
inc
pusha
xor
cmps
repnz
ins
inc
js
test
dec
movs
test
add
daa
sahf
out
test
mov
mov
cmps
add
ja
test
jae
fisttp
or
or
dec
ds
fsubr
push
dec
mov
push
popf
je
push
scas
outs
outs
pop
jo
(bad)
jbe
jo
jb
repnz
in
neg
stos
imul
jbe
cdq
sbb
jne
es
sahf
jmp
iret
mov
ins
jg
dec
lods
sub
out
jns
jp
or
in
jne
ins
cs
mov
jg
outs
imul
in
outs
lahf
sub
jne
(bad)
mov
pop
das
pop
popa
fsubr
pop
jg
scas
pop
out
sbb
popa
pop
outs
outs
ins
iret
imul
loopne
mov
add
jbe
cld
daa
sub
inc
ds
cmp
inc
xor
or
jnp
aas
pop
ja
push
jecxz
jno
pop
gs
aaa
sub
or
jb
ja
xlat
das
push
sub
mov
pop
je
ja
dec
fld
pop
dec
push
bound
cmp
sub
jo
inc
addr16
pop
fcmovbe
jbe
inc
push
push
jne
push
jb
fisttp
mov
in
outs
mov
jbe
mov
je
pop
jb
jno
shr
(bad)
out
dec
dec
fs
pop
dec
push
mov
push
gs
xchg
mov
repnz
ins
dec
(bad)
mov
pop
jnp
jmp
ins
stc
jo
xchg
dec
out
mov
dec
not
pop
imul
daa
es
jne
push
outs
cmp
pop
dec
dec
ds
push
xchg
pop
mov
lds
ja
inc
ja
pusha
shl
outs
dec
xchg
dec
mov
je
(bad)
gs
das
scas
rcr
xchg
jae
mov
mov
xlat
push
mov
repnz
push
(bad)
ja
div
pop
daa
xchg
mov
fsubr
je
gs
ins
pop
jb
mov
ins
pop
dec
arpl
pop
cmp
inc
xchg
(bad)
mov
fwait
(bad)
ss
arpl
ss
jno
pop
xor
xlat
jp
out
ret
ins
cmps
dec
sbb
stos
push
fsub
frstor
mov
jp
mov
addr16
addr16
dec
pop
sub
data16
addr16
gs
or
arpl
pop
jmp
loop
outs
iret
inc
(bad)
outs
(bad)
xchg
dec
gs
dec
sub
pop
push
lods
jmp
inc
fistp
inc
out
outs
inc
pop
xlat
dec
xchg
ficom
mov
out
out
xor
aas
xchg
inc
inc
test
jg
test
xlat
fiadd
test
pop
(bad)
push
mov
dec
add
inc
push
fcom
mov
shr
jae
inc
pop
jo
int3
fist
dec
pop
mov
inc
scas
push
das
inc
inc
mov
scas
popa
(bad)
out
xchg
popa
mov
inc
dec
add
pop
xchg
inc
mov
dec
xchg
dec
pop
xchg
push
aaa
ins
inc
test
outs
xlat
xor
outs
jb
aad
adc
inc
mov
sti
pop
or
jg
push
mov
jae
dec
inc
sbb
push
pop
inc
inc
dec
(bad)
scas
loopne
das
outs
mov
inc
ins
jbe
adc
inc
pop
pop
imul
imul
nop
outs
pop
push
add
dec
pop
pusha
xchg
mov
push
lahf
fimul
mov
add
inc
push
and
repz
loopne
jno
aas
int
jns
in
push
fmul
clc
fiadd
mov
iret
repz
mov
cmp
repz
xor
inc
ror
repz
dec
test
cmp
repz
fdivr
hlt
cmp
repz
xchg
mov
mov
lods
fwait
push
les
sahf
aaa
mov
arpl
add
call
repz
push
repz
mov
add
sbb
repz
push
add
inc
push
xor
jns
jmp
cmp
jns
clc
push
dec
mov
cmp
repz
dec
ins
mov
aam
out
stos
mov
repz
pop
push
xchg
dec
or
out
fdivp
mov
mov
lods
(bad)
leave
rcl
jns
call
out
sahf
xor
(bad)
or
sbb
out
dec
and
xor
iret
jnp
les
push
cmp
push
dec
fnstsw
repz
xlat
pusha
retf
cmp
repz
rol
movs
pushf
lods
test
cmp
repz
xchg
shl
repz
repz
out
cmp
lock
fimul
jbe
les
fst
pop
and
and
pushf
jp
mov
push
sub
jg
repz
inc
cmp
push
cmc
cmp
dec
xlat
cs
push
out
dec
sub
pop
push
xchg
push
push
movs
je
or
iret
repz
dec
cmp
mov
aaa
das
jp
aam
push
jg
or
mov
les
inc
pop
iret
jnp
sbb
aam
push
loopne
fwait
pop
iret
fwait
daa
or
sub
jbe
pop
iret
clc
push
rol
cmp
repz
popa
push
push
adc
jmp
iret
repz
jmp
jae
adc
xor
imul
pop
ds
xor
jns
js
cmp
iret
repz
mov
push
jmp
push
je
inc
xor
and
jae
jns
and
out
jns
loopne
cwde
pushw
movs
mov
cmp
push
mov
push
mov
xor
push
enter
mov
out
cmp
test
scas
js
out
push
popf
push
in
ja
jne
add
je
js
ja
push
cmp
repz
adc
xchg
lods
out
add
xor
iret
int
ss
outs
push
loopne
push
dec
push
out
scas
out
iret
jnp
push
cs
push
mov
loopne
sahf
sbb
cmp
push
mov
iret
fwait
add
pop
cmp
mov
cmp
cmps
shl
ficom
repnz
(bad)
call
iret
push
push
and
and
repz
push
mov
repz
repz
ficomp
(bad)
daa
sbb
pusha
pop
call
push
jecxz
ret
mov
pushf
cmps
mov
jns
call
fdivr
or
pop
aaa
xor
in
add
repz
iret
shr
(bad)
cmp
or
or
daa
sbb
inc
shl
sbb
and
inc
fwait
add
sbb
xor
iret
cmp
push
and
dec
cmp
and
bound
dec
ror
add
(bad)
sahf
js
dec
add
jnp
daa
push
nop
push
sahf
idiv
test
push
(bad)
repz
loop
nop
aam
fild
mov
stos
jp
xchg
inc
movs
inc
jnp
movzx
dec
(bad)
mov
mov
pop
inc
push
xor
sbb
repnz
repnz
outs
imul
ins
add
imul
cs
cmp
pop
dec
jo
mov
mov
lods
(bad)
in
pushf
jp
arpl
xchg
push
mov
sub
out
bound
jl
bound
das
jae
ja
aam
push
push
sbb
or
xor
cs
pop
retf
and
pop
jg
ficomp
loop
(bad)
fnsave
jne
ins
or
test
pop
sbb
pop
(bad)
iret
fisub
(bad)
xchg
outs
jo
push
push
pop
cmps
xlat
push
mov
ja
int
fsubr
inc
pop
dec
pop
mov
mov
push
ins
pop
das
pop
imul
pop
in
push
stc
nop
jae
add
pop
lea
pop
sub
in
imul
mov
or
jne
sbb
jbe
je
gs
push
xchg
jne
imul
in
bound
sub
pop
cmp
pop
daa
hlt
push
jmp
push
out
loope
mov
jbe
sub
xchg
das
out
mov
pop
or
or
out
inc
jmp
out
or
or
jno
fdiv
pop
or
lods
mov
out
hlt
fiadd
push
jp
(bad)
idiv
pop
dec
jb
aam
test
or
or
cmps
ud2
jmp
outs
outs
jb
test
inc
jns
or
(bad)
rcpps
addr16
or
out
cmps
dec
jae
fcmovnbe
sub
mov
sub
or
push
sti
pop
cmc
push
jmp
jae
or
xchg
ja
dec
out
jae
mov
fld
mov
cs
out
or
imul
mov
arpl
imul
push
sti
pop
pop
xor
pop
jae
iret
pop
add
das
jg
jnp
push
pusha
pop
das
or
fisttp
jbe
pop
loopne
pop
shl
push
imul
xchg
je
gs
popf
dec
push
out
add
or
pop
pop
jne
jb
ja
jne
and
data16
or
inc
das
xchg
add
or
out
mov
cmp
call
xor
ja
inc
push
je
pop
push
mov
repnz
jle
mov
push
iret
adc
mov
sqrtps
push
push
cs
fdiv
(bad)
fcomp
mul
shl
pop
aas
xchg
or
push
xor
psubusb
jnp
add
pop
sub
pushf
(bad)
dec
popa
mov
aas
movups
das
pop
(bad)
(bad)
fdiv
adc
js
push
adc
pop
mov
pop
xor
pop
mov
sub
jg
in
add
imul
(bad)
dec
and
add
into
xchg
(bad)
(bad)
jg
sbb
inc
cmp
xchg
or
push
test
rcl
xchg
fadd
(bad)
(bad)
jmp
aas
neg
push
inc
xor
jp
mov
ins
jp
out
cld
aas
cmp
and
mov
or
adc
mov
not
add
dec
sti
pop
ret
pop
inc
add
push
pop
sub
inc
mov
push
leave
(bad)
aas
adc
or
inc
or
mov
inc
inc
push
add
pop
jg
(bad)
mov
imul
xlat
mov
fisubr
cwde
ror
addr16
lods
dec
add
or
not
cmp
xor
mov
push
mov
add
imul
adc
sbb
sti
xchg
or
cld
cmp
mov
ficomp
sahf
rcr
xor
xor
push
sub
(bad)
lahf
(bad)
jg
arpl
idiv
mov
icebp
bound
or
pop
push
pop
cmps
aas
fist
cld
(bad)
(bad)
push
jle
add
rcl
enter
inc
ret
sub
aas
jmp
clc
fstp
(bad)
jo
sub
sub
std
push
(bad)
in
pop
pushf
mov
aam
push
push
aas
loopne
gs
sbb
mov
loop
(bad)
(bad)
(bad)
lds
rep
(bad)
int
les
sahf
sub
jae
mov
lahf
jge
and
ret
(bad)
out
call
imul
call
dec
or
mov
fild
add
(bad)
and
mov
mov
jo
ss
push
cld
(bad)
in
push
dec
jbe
pop
push
sub
jmp
sub
jmp
(bad)
jg
fild
inc
mov
repz
and
lea
mov
call
fwait
ins
sar
cli
loope
lea
or
(bad)
aas
scas
lock
mov
push
shl
mov
sbb
add
(bad)
dec
(bad)
push
ret
ja
inc
or
xor
push
inc
arpl
or
(bad)
cmc
xor
aas
fs
jns
pop
stc
inc
push
je
les
xor
mov
cli
and
repz
fcmovnu
push
push
push
cs
xor
adc
lds
sub
fbstp
(bad)
aas
jg
neg
sbb
push
adc
sub
push
mov
cdq
xchg
cld
sub
repz
fist
pop
and
aas
int
inc
bound
xchg
mov
aas
(bad)
(bad)
cld
xor
into
data16
xchg
dec
fistp
or
int3
fbld
ss
out
fistp
aas
in
icebp
mov
jp
and
rol
jmp
xor
std
mov
mov
mov
push
lds
scas
enter
inc
hlt
fidiv
jl
mov
(bad)
(bad)
(bad)
(bad)
jb
js
and
xor
mov
jl
push
int
retf
push
add
xchg
(bad)
jg
aaa
jb
out
inc
mov
nop
adc
adc
aas
or
sbb
clc
fwait
outs
adc
stos
pop
lahf
jae
xlat
mov
pusha
jle
cmp
push
into
aas
in
repnz
icebp
adc
jbe
pop
push
push
pop
jmp
sbb
push
jae
pop
ror
inc
pop
or
and
pop
jl
fwait
outs
push
call
(bad)
adc
ds
push
xor
scas
repz
mov
xor
xor
hlt
fwait
aas
ror
fcos
sbb
js
mov
jne
sar
mov
(bad)
imul
pop
sub
(bad)
out
and
xor
jle
jmp
iret
cmp
lock
fcmovnu
push
fisttp
or
cs
daa
sahf
dec
inc
dec
push
sar
stc
pop
movs
sub
jle
int
jg
adc
sbb
sbb
jno
jns
xor
cld
aaa
sahf
lods
imul
rcl
pminsw
jmp
or
fdiv
shr
repnz
lock
pushf
nop
add
mov
nop
pop
sbb
sahf
nop
pop
repnz
call
nop
adc
inc
pusha
scas
cwde
pop
pop
repnz
test
test
in
aad
pushf
nop
pop
adc
daa
in
and
in
pusha
cmps
and
in
push
in
cmp
cmc
rol
or
and
dec
js
or
dec
jo
shl
mov
inc
dec
enter
dec
mov
adc
pushf
nop
adc
xchg
pop
imul
jmp
cmp
ret
adc
or
and
shl
jns
dec
cwde
add
mov
jns
dec
enter
sub
in
inc
dec
enter
add
enter
sbb
(bad)
int
xchg
nop
adc
push
pop
loopne
adc
inc
sahf
pusha
jecxz
lock
jo
test
test
add
mov
pusha
gs
ins
cmp
jbe
jecxz
jge
sub
mov
ret
or
mov
inc
inc
imul
pop
jns
push
jo
push
shr
jnp
lahf
test
inc
and
jne
mov
inc
and
cmp
cmp
sub
jae
mov
pusha
(bad)
and
aaa
inc
jge
mov
add
jnp
mov
je
lahf
and
jae
cs
ins
popa
jp
popa
ja
pop
inc
jge
cs
ja
fs
fistp
jo
or
mov
add
push
mov
in
mov
daa
and
inc
adc
(bad)
lock
or
and
push
(bad)
ss
les
popa
arpl
shl
int
sbb
add
inc
mov
add
inc
adc
(bad)
ret
xlat
nop
xchg
sub
jne
les
int3
add
loop
test
xchg
cmp
adc
add
and
stos
jmp
xor
xor
icebp
adc
ja
sub
mov
sti
push
enter
aam
push
movs
dec
xchg
int
fadd
push
stos
jle
mov
(bad)
pop
mov
popa
pop
add
push
dec
adc
mov
ins
adc
mov
xchg
ss
sbb
mov
or
addr16
push
xlat
(bad)
sar
lods
pop
jnp
cld
xchg
inc
add
test
sub
cmp
and
mov
loopne
rep
outs
dec
cmp
daa
add
jae
repz
mov
test
enter
jae
call
jb
jl
sbb
sub
xor
jl
and
xchg
pusha
mov
lds
jo
or
(bad)
push
ja
mov
jae
ror
fld
outs
fsubr
add
or
(bad)
out
(bad)
ins
push
add
mov
pusha
mov
and
dec
sub
xlat
ja
es
scas
and
push
jmp
fwait
in
pop
jle
add
int3
xor
push
cli
rcl
pushf
xlat
cs
adc
sbb
fnsave
xchg
dec
js
test
xor
data16
add
xor
arpl
push
sub
sub
xor
jmp
sub
dec
adc
and
inc
pop
mov
pop
dec
dec
daa
inc
dec
ficom
push
jbe
inc
mov
fs
push
jo
bnd
daa
inc
je
xchg
add
lahf
js
jl
add
dec
gs
add
daa
and
jb
ss
pop
push
es
ins
fcmovbe
fidiv
push
cs
fs
mov
pop
ror
xor
es
neg
dec
iret
ins
mov
push
fsub
dec
loopne
dec
mov
mov
dec
lock
fsub
imul
cdq
adc
data16
div
pop
xor
add
fiadd
je
or
ss
in
jae
push
and
test
mov
mov
cmp
(bad)
xchg
data16
es
daa
xchg
es
jns
mov
xor
jb
xor
daa
xor
aam
inc
mov
jbe
cld
cmp
add
aad
ror
(bad)
mov
(bad)
jbe
daa
dec
xchg
pop
out
pop
repnz
inc
test
inc
pop
xor
inc
stos
int3
jl
mov
push
adc
out
neg
or
shrd
mov
dec
dec
sbb
fistp
add
cld
shl
cmp
das
in
movs
sub
nop
nop
pop
cld
ins
fld
(bad)
daa
int3
nop
mov
adc
pushf
dec
test
xchg
retf
mov
mov
push
mov
fdivr
jns
add
test
jge
das
icebp
int
push
push
int
mov
aad
aad
inc
int3
dec
mov
inc
iret
cwde
into
inc
push
std
mov
add
test
repz
ins
daa
jl
and
push
adc
stos
(bad)
mov
adc
in
not
js
js
jg
out
mov
aam
out
jg
inc
es
repz
adc
inc
push
inc
and
xchg
pop
cwde
pop
ds
(bad)
out
pop
mov
(bad)
cmp
in
mov
jg
jg
adc
push
jo
or
jg
jbe
jns
mov
jp
aas
pop
enter
nop
in
push
sar
pop
push
jmp
xchg
(bad)
jae
popf
inc
dec
and
jg
test
lods
mov
pushf
push
dec
sar
popf
dec
dec
push
pcmpgtd
push
into
xchg
mov
pop
xlat
mov
push
retf
mov
inc
rcl
jg
loop
inc
daa
fidiv
aas
je
iret
daa
daa
fimul
sti
mov
add
jg
cdq
ins
cmps
nop
pop
and
ss
and
cmp
dec
mov
aas
(bad)
push
jg
sub
fsubr
and
ficomp
xchg
xchg
mov
mov
xchg
push
add
cwde
leave
jae
dec
rcl
imul
cld
sysret
jg
js
xchg
out
add
pop
cmps
jg
or
pop
xchg
outs
mov
shr
iret
add
sub
jb
add
pop
inc
xor
add
dec
in
push
std
inc
jp
mov
int3
fisttp
push
rcl
xor
add
xchg
or
inc
mov
add
mov
cwde
das
mov
push
xchg
nop
mov
inc
adc
add
push
push
outs
add
adc
add
dec
add
or
add
mov
pop
leave
push
mov
sbb
jle
cmp
push
aaa
add
add
fcomp
xchg
pop
das
xor
rcl
push
adc
adc
add
jo
push
mul
fistp
dec
add
movs
add
pusha
cmp
cmps
fisttp
cs
ds
movs
sbb
mov
pop
shl
cmovo
pop
inc
mov
or
(bad)
mov
sbb
in
call
adc
add
mov
xor
fcomp
in
fsubp
stc
jb
jle
adc
mov
test
or
add
and
jne
mov
add
mov
xor
inc
cs
cs
ins
leave
pop
lds
cwde
pop
jo
pop
cmps
xchg
mov
fimul
inc
and
push
out
dec
dec
push
mov
(bad)
dec
call
mov
inc
or
dec
dec
inc
push
aas
loope
gs
or
fwait
int3
pop
das
inc
pop
pop
(bad)
outs
push
dec
pop
mov
add
(bad)
lock
aam
pusha
mov
push
push
xchg
sub
(bad)
(bad)
mov
jns
or
push
(bad)
je
or
jmp
sbb
add
jmp
mov
push
dec
xor
dec
xchg
dec
std
pop
xor
popf
aad
outs
add
loope
(bad)
(bad)
(bad)
jg
mov
add
std
pop
arpl
cmps
jmp
sub
mov
shl
(bad)
ds
mov
loope
mov
(bad)
dec
jmp
inc
push
adc
cs
nop
nop
xchg
and
or
(bad)
(bad)
jg
adc
inc
sahf
imul
cmps
sar
dec
jmp
(bad)
xor
mov
mov
std
outs
dec
test
inc
inc
xchg
push
(bad)
in
push
nop
popa
add
pop
sbb
push
xchg
lock
(bad)
in
retf
jbe
es
pusha
or
adc
faddp
adc
shl
fwait
bound
pop
jmp
cwde
popf
pushf
aas
fwait
retf
scas
fs
idiv
mov
bound
(bad)
push
dec
add
iret
mov
sbb
fldpi
and
add
mov
retf
or
arpl
in
cmp
xor
pop
mov
mov
rol
xor
jge
or
mov
sbb
cmp
adc
and
inc
in
pop
mov
jns
jmp
jl
arpl
(bad)
movs
cmc
and
aad
push
inc
push
dec
xchg
inc
scas
inc
pusha
adc
adc
sub
push
(bad)
das
cs
inc
push
es
inc
popa
mov
push
ds
inc
aaa
mov
ret
aaa
data16
mov
arpl
cmp
pop
dec
in
add
adc
inc
pusha
mov
shr
loop
outs
pop
aaa
aas
ss
popa
and
pop
mov
ficomp
fcmovbe
push
pop
pop
jg
leave
aam
cmp
pusha
cmp
call
xchg
cmp
ins
add
data16
pop
js
add
push
cdq
jmp
add
jmp
push
prefetcht1
add
xlat
ins
jge
daa
push
int
mov
repz
and
in
addr16
in
iret
jnp
loope
push
scas
xlat
sbb
mov
add
pusha
cli
sbb
pop
cmp
(bad)
and
repz
push
fwait
pop
in
je
pop
(bad)
out
in
clc
out
jns
sahf
add
or
jmp
mul
add
push
pop
or
iret
repz
adc
or
imul
lods
xor
pop
add
push
push
inc
adc
lods
pop
out
sub
out
stos
or
push
add
add
add
mov
adc
push
scas
or
fidiv
dec
gs
sbb
jae
invd
sub
popa
ficom
mov
inc
dec
inc
push
adc
jp
in
adc
adc
mov
xchg
outs
ins
bound
and
xor
push
jo
je
dec
ins
cmp
cmp
inc
jge
xlat
es
jae
mov
mov
xor
pop
dec
gs
jge
fidivr
push
imul
je
add
push
sbb
cmps
movs
or
movs
rol
or
rol
or
outs
fwait
sbb
mov
in
cmp
popa
icebp
mov
popa
pop
dec
xchg
in
xchg
and
push
xchg
pop
add
push
clc
repnz
outs
fld
xor
lods
pop
das
xor
sar
arpl
inc
mov
and
xchg
push
outs
and
in
loopne
(bad)
inc
mov
es
and
add
inc
add
push
int
mov
push
push
imul
ret
rol
in
pop
mov
jecxz
je
cmp
sub
inc
pop
push
inc
sbb
popa
inc
inc
push
mul
push
movs
push
fstp
xchg
push
nop
stos
inc
pop
movs
jo
cmps
jne
js
jno
cdq
inc
mov
aam
jb
jmp
xchg
div
hlt
jp
ss
xor
dec
jnp
sbb
pushf
jbe
mov
sub
int
shl
xchg
ins
add
ss
jmp
jbe
cdq
pop
sbb
xor
lds
adc
jbe
mov
xlat
inc
mov
ins
ins
pop
addr16
sub
or
dec
push
ficom
imul
jae
jmp
push
outs
sbb
inc
inc
aas
adc
push
out
adc
adc
add
stos
mov
pop
mov
or
push
int
outs
mov
fisubr
xor
and
mov
adc
adc
inc
sbb
lds
dec
outs
hlt
or
ret
popa
sub
es
dec
je
mov
dec
leave
mov
rol
call
dec
cmp
fisttp
jo
jnp
bound
xor
sbb
pop
ret
push
push
movs
dec
imul
fdivr
rol
daa
push
nop
pop
adc
sub
mov
sub
ss
js
mov
add
aad
inc
mov
adc
ret
outs
push
xchg
fwait
fs
dec
mov
sbb
xor
mov
pop
jns
add
sbb
mov
push
or
sub
sub
push
jo
mov
test
inc
clc
imul
add
dec
in
dec
call
pop
sub
dec
nop
sub
push
scas
cmps
sbb
sbb
push
dec
push
inc
push
mov
inc
outs
adc
mov
sub
jns
add
add
fsubr
imul
xchg
cmps
outs
jbe
into
sub
push
inc
sub
pusha
jns
dec
xor
outs
cmc
rol
inc
add
(bad)
jl
pop
push
pop
sbb
jo
mov
xchg
ins
sbb
repz
pop
xchg
cwde
cmp
push
pop
xor
sub
fild
inc
xor
ss
jge
push
mov
daa
inc
fiadd
xor
popa
repz
pop
hlt
dec
push
dec
inc
daa
inc
cmp
jb
xor
sar
adc
cwde
loopne
sub
neg
sub
push
adc
add
inc
cs
dec
mov
clc
sahf
ins
sub
mov
out
mov
ja
add
push
ins
jns
inc
outs
js
inc
pop
scas
inc
xor
test
add
and
pop
xchg
out
lea
sub
mov
shl
and
pop
sar
inc
sub
jno
imul
in
je
fadd
cmp
adc
retf
jbe
inc
or
repz
fild
and
ds
inc
jb
add
sub
sbb
and
xor
rcl
and
enter
dec
(bad)
cs
or
xor
rol
or
je
dec
shl
adc
xor
shl
add
adc
ror
push
add
sbb
pop
movs
pop
lock
inc
dec
call
add
or
push
(bad)
jl
fidiv
push
inc
add
test
ins
pop
in
das
lods
scas
outs
or
push
fwait
add
inc
or
shl
xor
jns
pop
add
or
and
adc
inc
ret
lock
mov
cmps
add
xchg
cmp
or
push
sub
daa
rcr
pusha
nop
loopne
xchg
mov
inc
inc
jae
outs
add
or
imul
push
je
outs
nop
jo
add
inc
sti
cmp
sbb
shr
pop
or
iret
repz
lods
push
lahf
jns
out
and
adc
movs
in
xor
add
das
and
xchg
lock
push
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
inc
add
add
