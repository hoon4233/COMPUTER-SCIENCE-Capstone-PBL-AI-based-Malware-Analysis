sbb
add
add
mov
js
pop
out
idiv
xchg
out
jnp
imul
adc
fnstsw
mov
sub
fs
inc
jne
outs
xor
cmp
test
pop
nop
jl
in
inc
shl
push
das
inc
mov
cmp
and
movs
dec
adc
xor
test
outs
movs
sub
mov
xchg
ret
mov
sub
mov
movs
jle
mov
dec
aam
pusha
mov
inc
std
popf
notrack
test
rol
rol
leave
dec
out
pop
sub
xchg
push
and
jo
rol
ret
xchg
fimul
xor
add
nop
add
sub
mov
mov
scas
(bad)
in
mov
cdq
push
pop
inc
enter
or
aam
int
dec
(bad)
clc
push
add
cld
pushf
dec
mov
fist
xchg
jae
into
call
push
cmp
push
or
loop
popf
inc
test
test
xchg
and
(bad)
pop
fisubr
pop
fild
sbb
das
pop
inc
mov
int3
in
push
mov
loopne
mov
scas
in
sub
rol
outs
sub
test
and
mov
push
rcr
cld
retf
dec
ret
cmp
and
jno
lods
repz
test
jecxz
dec
idiv
popf
and
repnz
pop
fidivr
fdivrp
scas
mov
mov
(bad)
or
xchg
mov
xor
cmp
cmp
lock
aaa
repz
mov
mov
les
lea
xchg
ins
not
jge
movs
and
xlat
daa
inc
retf
dec
push
push
pop
iret
push
sbb
shl
shl
pop
pop
outs
nop
lods
jmp
adc
fisttp
shr
push
rol
ret
cmp
mov
sti
cmp
sub
jge
cmp
pop
aad
inc
mov
scas
je
dec
xor
push
mov
push
ret
les
xlat
ja
popf
(bad)
dec
(bad)
movs
mov
fist
pop
js
aad
add
xchg
sub
in
mov
ficomp
repz
xchg
jno
cli
nop
rol
shr
adc
stos
cli
leave
push
jl
repz
jle
sub
dec
(bad)
cwde
lods
sahf
sub
add
mov
inc
iret
js
cmp
dec
mov
adc
fisubr
xor
lds
out
add
push
add
mov
in
push
cmc
dec
xchg
mov
call
or
inc
sbb
inc
sub
cmps
dec
aaa
jns
xor
sbb
loope
inc
xchg
dec
adc
test
mov
popa
and
mov
add
add
or
iret
pop
call
add
stos
push
cmp
and
xor
retf
dec
jl
sti
fnsave
xor
xchg
mov
dec
cld
(bad)
mov
into
ds
sbb
ja
xor
int3
xor
xchg
add
sub
in
icebp
movs
adc
out
retf
mov
popa
ins
push
imul
fmulp
loope
jne
sub
pop
xchg
and
xchg
pusha
fst
aam
or
ins
lock
pusha
jle
cmp
shr
cmp
call
jae
aam
loopne
repnz
ss
fbld
dec
jmp
jecxz
cmp
scas
push
pop
leave
loope
mov
pop
fild
push
pop
stos
inc
dec
ds
in
ret
push
mov
stc
stc
popa
mov
cmp
retf
and
xor
sub
inc
or
cld
mov
xchg
int
jp
inc
js
sbb
aas
push
sub
neg
pushf
mov
(bad)
mov
fs
push
xchg
jle
sub
arpl
dec
sar
(bad)
mov
movs
ja
or
movs
iret
cdq
jo
int
mov
inc
dec
inc
xchg
jl
adc
fwait
xor
jmp
imul
mov
xor
jge
into
sbb
sub
pusha
push
mov
sub
inc
xor
mov
pop
mov
or
movs
lods
jae
xchg
xchg
and
push
mov
fwait
sbb
mov
cs
shl
out
sti
pop
fst
push
mov
(bad)
out
cmp
pop
mov
xchg
fwait
int3
cdq
aaa
das
cli
sbb
fisttp
ins
shl
cmp
sbb
cmp
jge
xchg
fadd
push
mov
fcomp
shr
fisub
xor
popf
cdq
cmp
mov
rol
iret
pop
inc
xchg
ret
stos
(bad)
xor
imul
(bad)
leave
push
inc
mov
adc
or
hlt
xchg
shr
sub
ins
sahf
cwde
jg
aam
xor
mov
and
shl
adc
dec
or
adc
(bad)
adc
xor
hlt
push
cld
cwde
push
test
or
addr16
push
jns
stos
sahf
inc
xchg
nop
cmp
xchg
mov
jae
(bad)
cmc
outs
das
fdiv
jb
inc
xor
adc
les
cmp
es
jb
inc
gs
sbb
jb
int3
xchg
jno
loope
popf
ret
ins
or
mov
mov
aad
cmp
mov
cs
arpl
lock
jns
push
movs
jbe
sub
(bad)
xor
std
jp
mov
retf
retf
pop
jns
push
jg
push
sub
call
cmp
xor
adc
pop
mul
fistp
push
push
jne
sti
xchg
and
cmp
mov
xor
sar
jmp
stos
cmps
js
dec
and
retf
inc
push
mov
add
(bad)
xchg
jno
imul
fisubr
or
sbb
in
dec
mov
movs
inc
(bad)
iret
push
cmp
retf
ficom
fldenv
mov
jns
xchg
mov
cwde
retf
xchg
nop
cmc
(bad)
loopne
and
imul
dec
cs
jp
adc
clc
sub
in
dec
sahf
mov
xchg
pop
dec
out
ficomp
adc
pop
clc
int3
add
test
mov
inc
add
mov
scas
ret
pop
clc
das
lea
ins
jg
and
xor
gs
pop
movs
adc
sub
stos
fist
jns
sub
test
stos
cmc
es
ss
xlat
frstor
fadd
cmp
fcomp
mov
mov
enter
in
sub
sub
push
add
pusha
fdivr
imul
sbb
add
pop
inc
scas
aaa
lea
jo
cmp
sti
and
push
lahf
test
test
mov
mov
stos
mov
and
xchg
push
xchg
cmc
je
adc
and
adc
push
or
out
mov
sub
sub
mov
sub
add
lahf
xlat
push
sub
adc
mov
xor
ror
lds
shr
ins
sub
push
fcomp
cwde
fnsave
imul
adc
sbb
mov
sahf
(bad)
daa
scas
std
repnz
aam
push
std
or
in
in
repnz
or
dec
shl
das
popf
stos
add
jno
dec
clc
mov
pop
lods
in
adc
mov
scas
jmp
pop
lea
inc
mov
das
into
cwde
ins
jg
shl
cdq
rcl
pop
jbe
fsubrp
sbb
push
data16
add
add
inc
and
push
mov
adc
clc
mov
jecxz
popf
cli
es
cwde
xchg
push
xchg
(bad)
pusha
pop
sub
fdiv
fistp
mov
xlat
push
cmc
ret
and
popf
add
xor
sbb
push
dec
jmp
or
movs
je
in
loopne
mov
pushf
or
add
test
cmp
pushf
mov
fstp
xchg
dec
popf
ins
xor
mov
pop
mov
mov
movs
or
cld
xchg
hlt
mov
rcr
xchg
hlt
adc
jae
add
add
mov
mov
cmps
fs
mov
mov
sub
out
sbb
adc
jmp
or
clc
xor
pop
cld
mov
(bad)
mov
xor
(bad)
fsub
(bad)
and
and
clc
push
pushf
iret
ins
ret
and
push
xor
shr
adc
and
idiv
cli
mov
add
and
mov
lock
rcr
test
mov
sbb
dec
xchg
xchg
iret
popf
xchg
lock
repz
push
div
in
cli
fist
push
sub
mov
popa
into
cmp
jne
jg
pusha
popa
adc
pusha
mov
ja
iret
fist
fdivr
mov
jnp
movs
fst
inc
and
inc
jl
outs
mov
dec
scas
out
mov
bound
mov
jb
cmp
mov
sub
push
arpl
and
test
xor
pop
rcl
stc
int3
mov
fmulp
mov
jp
mov
xchg
cmp
xchg
xchg
popa
adc
and
mov
pop
cmps
dec
nop
(bad)
pop
sti
pop
out
inc
mov
mov
sbb
push
jge
scas
(bad)
and
xchg
inc
bound
pop
lahf
popa
imul
push
pop
hlt
cmp
sub
(bad)
ins
int
mov
dec
fyl2xp1
mov
(bad)
scas
pop
faddp
das
mov
dec
mov
popa
dec
mov
retf
in
ret
sub
sub
fs
std
sbb
mov
adc
push
xchg
fidiv
dec
cmp
and
inc
mov
popf
nop
push
pop
mov
loopne
dec
test
ror
mov
xlat
mov
jmp
jne
adc
push
movs
add
xor
frstor
fs
pop
loopne
dec
pop
sub
ficom
loope
jecxz
pop
lods
cs
mov
sub
cli
int
and
pop
cld
adc
sbb
jge
fld
ficom
sbb
je
cdq
sub
stc
test
stc
dec
and
in
rcl
enter
les
sbb
jbe
adc
and
add
ja
sub
lods
pop
add
push
aam
fbld
add
js
or
xchg
sbb
repz
dec
pop
dec
(bad)
jo
jmp
jne
data16
dec
mov
(bad)
es
icebp
or
loopne
jl
cmc
stos
inc
out
call
or
cwde
inc
cmps
fbstp
mov
daa
sti
dec
sbb
fstp
lods
and
push
test
dec
stos
jns
(bad)
cmovp
xchg
xor
cmp
jle
scas
push
out
out
or
addr16
scas
pop
repnz
mov
mov
pop
xor
jno
pushf
jne
mov
and
jns
push
inc
jnp
cdq
jno
popf
femms
shl
jnp
test
push
push
add
out
and
mov
xchg
xlat
js
repz
jmp
jns
test
jge
push
sub
dec
or
shl
out
nop
fnstcw
push
mov
lock
std
sti
or
push
gs
push
cmp
out
ja
xor
outs
jl
(bad)
in
jns
push
fimul
pushf
in
pop
adc
xor
(bad)
push
xor
popa
gs
mov
imul
pop
lods
push
mov
add
repz
sti
push
adc
jg
leave
ficom
mov
jns
sbb
xchg
movs
pop
mov
push
test
mov
sub
fild
inc
xchg
fist
fwait
bnd
scas
bound
sub
lock
push
fild
and
or
outs
xor
pop
dec
ss
(bad)
sbb
ror
mov
mov
data16
or
jmp
cmp
jge
push
retf
xchg
cmp
push
xchg
or
cdq
int3
in
stc
fisttp
push
and
sbb
jmp
xchg
sbb
sub
outs
lock
mov
inc
sbb
push
ficomp
sub
aas
lods
popa
sub
mov
sbb
jb
sar
push
xor
jmp
or
out
lods
pop
push
je
and
xchg
in
rcr
jecxz
jge
lea
push
std
sub
das
leave
jo
pusha
stc
out
leave
call
pusha
enter
cmp
lods
push
popf
ss
adc
push
out
mov
call
adc
jne
xor
adc
inc
jecxz
mov
pusha
ins
jnp
out
mov
jns
lods
pop
ins
pop
mov
pop
(bad)
cmps
jecxz
in
fmul
frstor
imul
mov
cmps
jg
push
retf
push
fadd
fld
mov
inc
pop
xchg
mov
sub
paddusb
mov
divps
sbb
stc
mov
push
sbb
lea
test
mov
jnp
mov
out
jne
and
jle
ja
sub
add
hlt
xor
ja
mov
jbe
cmps
ins
add
sbb
scas
pop
and
sub
sbb
and
inc
dec
and
mul
adc
xchg
pop
ins
(bad)
inc
jno
imul
dec
inc
mov
call
push
sbb
pop
movs
xor
or
pop
dec
push
vmovups
rol
cdq
loop
pop
mov
test
and
xchg
and
stos
mov
pop
addr16
dec
fmul
(bad)
sar
in
or
fnstcw
pop
push
sub
sar
dec
add
in
mov
ins
repnz
out
pop
test
add
sub
retf
pushf
dec
mov
push
test
(bad)
sbb
pop
xor
into
sub
sar
gs
daa
push
les
clc
or
mov
scas
xchg
inc
imul
push
outs
push
push
sbb
aas
ja
sub
sub
push
jnp
xchg
pop
lahf
mov
repz
jne
xor
lods
pop
in
xchg
push
xchg
dec
fimul
fimul
inc
or
pop
and
in
add
ret
in
stos
adc
pop
mov
(bad)
(bad)
jp
inc
sub
or
push
mov
data16
rcl
jecxz
pop
jb
je
outs
xlat
in
mov
jns
test
dec
and
adc
jge
add
mov
sub
sub
xchg
lahf
mov
ja
add
stos
xchg
stos
je
fcmovnu
outs
ret
(bad)
outs
pop
push
mov
imul
mov
push
sar
and
push
fadd
rcl
shr
mov
movs
ja
psrlw
mov
pop
and
add
and
in
mov
(bad)
mov
jmp
inc
or
(bad)
int
into
mov
inc
cmp
cmp
lods
add
les
mov
sbb
or
test
enter
test
pop
int
pushf
mov
cli
push
push
cmp
scas
jge
scas
pop
mov
mov
lahf
cmp
stos
or
inc
in
in
xor
and
mov
into
add
imul
and
cwde
xor
dec
mov
cs
pop
(bad)
mov
inc
pop
and
addr16
mov
xlat
dec
fcomp
ficom
inc
inc
sub
mov
jb
jp
rcr
jle
mov
cld
push
xor
sub
pop
sub
jecxz
out
in
dec
mov
movhps
inc
cmp
ja
pop
inc
fmul
mov
pop
push
jns
mov
inc
cli
sbb
push
sub
enter
xchg
aam
sub
daa
xchg
js
test
and
loope
jo
mov
(bad)
out
call
(bad)
sbb
xchg
retf
cmp
movs
mov
mov
add
rcr
push
sti
cmp
cld
sbb
push
dec
pop
test
out
repnz
fiadd
sub
pop
into
into
xor
inc
loop
or
and
sub
sahf
jl
lahf
dec
xchg
inc
les
dec
lds
cmp
sbb
and
mov
sbb
adc
sbb
mov
xchg
pop
and
inc
adc
ja
adc
cs
xchg
mov
and
jno
push
retf
xor
jecxz
cmp
and
jae
xchg
icebp
aam
or
outs
rcr
dec
les
sub
push
xor
es
add
and
mov
cmp
sub
sub
or
mov
push
mov
jb
das
xor
dec
and
add
push
pop
clc
xchg
xchg
sbb
jmp
xor
jmp
xchg
mov
mov
mov
shrd
jmp
xor
pushf
(bad)
mov
stc
pop
out
sbb
es
cmp
movs
std
mov
add
mov
add
xchg
in
sbb
or
mul
mov
bswap
xchg
ss
push
dec
or
in
mov
jmp
push
dec
jno
rol
add
cmp
xchg
add
mov
adc
inc
inc
sub
pop
dec
sub
mov
dec
pop
fild
shl
dec
and
inc
js
pop
aad
or
or
jg
pusha
and
dec
retf
es
ss
pop
cdq
and
mov
fadd
daa
inc
cmc
repz
xor
jno
dec
mov
outs
jp
add
cmp
fdivr
cmp
shl
inc
push
stc
inc
cli
xchg
retf
mov
ja
sbb
sti
mov
gs
and
imul
icebp
jno
inc
call
xor
xor
retf
repz
nop
es
jb
push
addr16
dec
dec
push
das
js
fcmovu
xchg
std
daa
into
addr16
cmp
out
mov
push
pop
loope
adc
push
pop
add
xchg
cmps
icebp
fcom
ins
or
xchg
mov
rol
xchg
aaa
or
adc
in
pop
test
fabs
mov
int3
(bad)
ins
mov
scas
out
mul
aas
sub
and
into
mov
int3
stos
mov
ret
fsub
push
(bad)
fist
fbld
push
ret
dec
imul
and
or
es
inc
mov
fbld
xor
mov
fwait
pop
dec
sbb
movntq
lock
push
or
jg
fdiv
rcl
push
in
jmp
jbe
rcr
dec
sbb
loop
cmps
push
aam
dec
mov
int3
ja
cmp
mov
add
mov
dec
dec
(bad)
pop
aam
dec
ins
icebp
xchg
or
jne
push
daa
js
xchg
dec
ins
ja
jl
(bad)
adc
cmp
rol
or
fadd
or
mov
mov
mov
mov
adc
pop
addr16
inc
repz
popf
jg
xor
add
movs
mov
fwait
mov
ret
pop
sub
loopne
push
(bad)
adc
clc
push
sub
das
movs
add
test
call
movs
std
xor
cs
fwait
add
sbb
repnz
sbb
xchg
out
jmp
repz
aam
pop
js
cmc
outs
cld
test
sbb
pop
fs
push
loopne
dec
bound
add
out
in
or
lds
xor
add
jge
retf
js
jbe
imul
pop
outs
stc
cdq
cs
adc
test
or
mov
xchg
repz
sub
aaa
jbe
or
outs
mov
xchg
dec
sub
cwde
jns
pop
add
pop
mov
push
cli
mov
outs
js
mov
and
xor
xor
(bad)
inc
pop
jbe
scas
add
js
xchg
sbb
stc
aaa
rol
fist
xchg
mov
add
sub
jmp
js
loope
lds
call
scas
xchg
adc
int
int
push
jl
sahf
jo
test
xchg
xchg
mov
adc
pop
test
mov
loop
ins
mov
bswap
(bad)
retf
inc
enter
lods
mov
cld
int3
movs
adc
bound
fwait
jno
pop
ins
sbb
cwde
movs
popf
outs
sub
xchg
push
cmp
loop
or
sbb
xchg
jne
cmp
movs
add
fwait
push
(bad)
es
push
mov
sti
repz
ds
pop
xchg
push
push
cmp
(bad)
cld
loop
cmp
repz
sbb
mov
pop
xor
jno
not
jecxz
test
das
xor
push
fcom
sbb
cld
(bad)
aas
jmp
aam
cmp
dec
sbb
jb
mov
lahf
jb
data16
xor
jmp
aas
sub
out
add
or
add
xchg
pop
adc
push
fstp
in
cmp
jnp
mov
aas
stos
popa
adc
push
and
cli
mov
mov
push
pusha
sbb
sub
xlat
inc
sub
test
pop
jl
mov
cmps
cmps
fidivr
out
data16
xor
loopne
movs
out
xchg
jmp
xchg
and
rol
loopne
sub
mov
jmp
sub
aam
pop
dec
jmp
inc
jae
dec
adc
jb
push
pushf
and
jecxz
mov
mov
mov
mov
pop
jae
dec
push
jg
mov
sub
pop
and
push
or
or
inc
or
pop
cmp
enter
les
jbe
inc
push
repz
addr16
in
(bad)
jmp
pop
and
pop
sbb
retf
adc
jnp
stos
hlt
adc
dec
popa
(bad)
push
fist
and
cwde
sbb
mov
dec
jg
test
xlat
mov
arpl
out
mov
push
aam
mov
sti
outs
fcom
sbb
sub
pop
imul
adc
mov
mov
xor
in
bound
and
jno
in
stos
xchg
xchg
cmp
push
ins
pop
pop
ja
xor
and
cwde
sahf
(bad)
jg
fld
out
popf
ds
call
dec
ss
into
aad
push
sub
movs
inc
(bad)
sbb
dec
(bad)
pop
mov
arpl
add
mov
(bad)
inc
jo
stos
pop
xor
sbb
movs
jmp
aam
in
lock
mov
pop
mov
adc
jge
btc
pop
repz
js
add
or
xor
and
rcr
jae
xchg
mov
cdq
mov
inc
pop
fs
shl
bound
jg
out
int
jge
cmp
addr16
mov
addr16
dec
jge
inc
loopne
mov
cmp
mov
mov
rol
fwait
inc
ret
mov
cmp
push
mov
xor
push
add
push
sub
or
aaa
addr16
or
inc
or
into
outs
jbe
mov
ror
add
xor
test
jecxz
jmp
pop
rol
scas
into
xchg
jmp
mov
lea
bound
push
ja
jp
mov
sub
and
xor
daa
in
or
stos
sbb
push
push
in
mov
jmp
js
pushf
adc
cmp
sbb
cli
fidivr
mov
(bad)
push
mov
mov
out
cmp
xor
jmp
and
xchg
neg
jns
fiadd
rol
mov
push
ret
cmp
xor
ret
push
sbb
adc
and
jo
push
cli
cwde
xor
cld
std
mov
cs
lods
retf
push
retf
sbb
pop
xor
das
cmps
icebp
xchg
inc
add
lods
xor
sub
mov
aad
inc
mov
ror
retf
test
and
jp
adc
push
jmp
lods
sub
test
sub
push
test
mov
mov
sar
mov
cmp
xor
je
mov
mov
(bad)
cwde
out
pop
lea
stc
into
jbe
add
iret
test
pop
pop
ret
test
pop
aas
push
bnd
loope
das
push
adc
jb
dec
cdq
mov
in
pop
jmp
mov
test
clc
(bad)
mul
out
push
lahf
test
mov
pop
std
xchg
addr16
(bad)
std
dec
push
mov
inc
pop
fnstsw
sbb
add
cmps
pop
(bad)
jmp
aam
js
std
pop
lods
inc
sti
dec
sbb
jp
call
mov
int
jl
pop
and
in
(bad)
inc
call
in
iret
xor
iret
lods
mov
and
ss
cli
imul
jnp
mov
push
and
cmps
push
in
in
das
shr
cmp
clc
cmps
into
ins
push
fld
fnsave
aas
add
sub
lods
add
ss
mov
mov
outs
(bad)
rcl
jmp
fild
push
pusha
mov
fisubr
add
dec
mov
popf
xlat
sub
mov
and
jg
jp
sub
xchg
cld
inc
cmp
push
call
or
enter
dec
mov
mov
push
(bad)
outs
stos
mov
sub
sub
cmp
cdq
stc
js
mov
jo
jle
into
test
mov
mov
push
clc
div
shl
adc
xlat
sub
out
xor
js
lods
and
adc
mov
fdiv
aaa
xchg
push
push
ins
and
mov
test
xchg
inc
mov
adc
in
sub
add
icebp
dec
imul
adc
xchg
rcl
ret
call
dec
push
adc
sbb
test
inc
or
jmp
movs
pop
sub
sub
stos
mov
sub
cwde
push
mov
or
test
sbb
mov
cmp
and
cmc
inc
(bad)
jp
jg
xor
frstor
mov
pop
test
adc
nop
jmp
or
push
add
inc
lds
icebp
repnz
scas
sbb
test
into
into
das
rol
lock
fucomi
sbb
vpshuflw
in
arpl
add
loopne
call
add
(bad)
pop
sbb
inc
inc
pop
or
repz
rcr
push
cmp
leave
jp
jl
in
add
shr
pop
or
out
jmp
retf
dec
outs
iret
xor
std
loope
sbb
out
(bad)
jp
inc
sahf
popa
inc
out
jmp
aaa
mov
(bad)
jmp
test
repz
mov
xchg
mov
jge
mov
inc
mov
jp
mov
mov
lock
or
cmp
cmc
sub
xchg
or
cmps
jl
pop
sub
mov
shr
cmps
(bad)
clc
and
or
shl
dec
pop
int3
cli
pmovmskb
lods
xchg
int
mov
jbe
fnstenv
into
push
je
je
in
or
xchg
xor
movs
ror
jp
dec
les
sub
enter
es
mov
mov
aas
jg
bound
das
xchg
jg
adc
pop
popf
xor
sub
call
sar
cmps
and
inc
outs
lahf
mov
push
test
inc
cs
xchg
cld
jbe
test
sbb
xchg
movs
mov
and
pop
imul
and
pop
std
ins
sbb
xlat
scas
rcl
sbb
(bad)
push
pop
mov
dec
sti
pop
rcr
lock
or
mov
mov
fisubr
xchg
fmul
sub
stos
mov
mov
enter
fadd
and
dec
push
mov
sub
sbb
mov
movs
and
sbb
std
popf
jge
cmps
xchg
pop
clc
dec
iret
add
add
mov
sbb
xchg
dec
popf
xchg
ficomp
test
lds
fld
cmp
or
push
push
add
not
sbb
cmp
aas
xchg
cwde
mov
int
fstp
dec
fwait
idiv
xchg
sbb
dec
xchg
or
lahf
lods
xchg
add
mov
and
dec
xor
push
jmp
or
ins
ffree
mov
dec
movs
push
jbe
sub
xchg
jbe
cmps
adc
imul
push
cmp
add
pop
shr
test
dec
js
dec
stc
shl
icebp
movs
loopne
in
pop
bound
adc
movs
cld
or
lods
pop
sbb
jecxz
push
inc
cwde
xor
jl
mov
push
mov
cmc
cmp
add
clc
cmc
scas
mov
hlt
cmps
sub
sub
test
retf
sub
repz
hlt
icebp
mov
(bad)
mov
dec
loopne
out
and
jp
xor
push
movs
lahf
cmp
test
je
sbb
adc
or
cmp
(bad)
mov
pusha
or
ja
mov
and
clc
ss
aam
test
lods
mov
popa
or
or
jle
(bad)
and
mov
push
adc
xor
add
jno
or
repnz
(bad)
dec
xor
jge
jle
jo
neg
sbb
aam
rcl
neg
push
jmp
repnz
adc
je
in
mov
stos
ret
xor
or
mov
push
iret
or
loopne
ins
xor
loop
lock
(bad)
fwait
clc
and
dec
ret
retf
and
dec
scas
push
dec
retf
xor
and
jge
xchg
popf
pop
add
sbb
mov
add
daa
push
xchg
xor
dec
pushf
pop
or
push
pop
ds
rcl
mov
pop
icebp
inc
test
jecxz
and
xchg
test
jg
sbb
push
push
call
push
adc
jle
or
mov
xchg
cdq
pop
cmp
sar
repz
cdq
push
in
push
adc
icebp
dec
jno
aas
sbb
xor
push
inc
test
leave
xchg
cdq
pop
rcr
jbe
dec
pop
pop
outs
push
ins
pop
jns
fstp
fwait
es
jl
repnz
aaa
test
xchg
adc
les
loope
adc
stos
sub
cmp
int
std
dec
xchg
int3
jae
and
push
push
inc
sbb
call
pushf
push
cdq
(bad)
fiadd
cmc
add
pushf
add
xchg
and
sbb
cmp
vmovshdup
mov
mov
nop
and
and
add
repz
sub
aaa
inc
xlat
outs
cdq
(bad)
pop
jecxz
cwde
hlt
aas
push
sub
test
retf
and
adc
adc
bound
(bad)
push
cwde
mov
shl
push
bound
jge
in
sub
cs
xchg
mov
data16
(bad)
neg
xor
div
cwde
ins
mov
dec
outs
sub
ss
push
pop
pushf
add
jge
sti
add
cmp
cmp
(bad)
hlt
mov
mov
es
addr16
fimul
jle
imul
in
jmp
lods
(bad)
retf
js
cwde
adc
mov
xlat
sbb
push
or
and
test
into
push
pop
hlt
push
inc
or
xor
add
xor
or
dec
inc
mov
cmp
lods
push
sbb
add
pop
add
ret
sub
adc
pop
sbb
jle
retf
adc
adc
xchg
in
mov
jno
mov
cmp
xchg
lock
push
sub
sahf
cmp
clc
sar
into
cs
cdq
sbb
xor
sahf
movs
pop
xor
xchg
jle
scas
and
mov
xchg
and
icebp
(bad)
ficomp
pushf
fisttp
xchg
jp
sbb
pop
sbb
jle
cmp
enter
lods
push
jo
cdq
sub
lods
sbb
rol
int3
retf
mov
sub
mov
fwait
sub
das
jp
fistp
and
lahf
adc
pop
push
retf
lds
cmc
push
popf
inc
or
jo
xchg
jmp
mov
mov
xchg
mov
xor
test
pop
ss
cmp
fnsave
sbb
mov
cmp
jge
push
ds
(bad)
push
aas
mov
stos
ret
pop
xchg
xchg
jmp
in
cs
pop
movs
add
movs
or
and
dec
or
mov
pop
and
stos
dec
pop
push
loopne
jl
loopne
mov
mov
mov
mov
retf
mov
or
loop
dec
into
mov
je
mov
xchg
rcl
fwait
adc
ficomp
push
mov
add
sub
dec
lds
push
cmp
inc
icebp
call
push
pushf
jmp
jp
mov
and
jp
cld
cmp
jg
icebp
mov
cmp
popf
or
mov
adc
cmp
xchg
mov
popa
push
pop
iret
adc
jge
shl
pop
cmp
outs
cmp
cld
push
inc
test
push
mov
or
les
pop
scas
cmp
inc
push
and
add
cmc
xchg
inc
loopne
mov
inc
adc
(bad)
push
sbb
fidivr
out
push
inc
or
out
jl
test
sub
sub
mov
jns
into
xor
test
add
scas
es
fucomi
xlat
cmps
fld
js
cmc
inc
mov
sub
sub
out
(bad)
pop
aas
sbb
in
call
mov
or
outs
cmps
adc
inc
mov
fwait
adc
rcl
shr
pop
aaa
call
jecxz
adc
addr16
aam
xchg
add
adc
mov
xor
neg
into
inc
add
jns
retf
icebp
and
adc
mov
ins
pop
add
pusha
call
in
ja
mov
mov
sbb
mov
and
repz
xchg
push
loope
push
xor
and
cdq
xlat
mov
pop
sub
scas
aas
mov
addr16
and
aaa
(bad)
ins
jmp
ror
addr16
xor
arpl
mul
js
(bad)
mov
mov
rol
into
les
or
mov
test
jge
ficomp
mov
push
jle
mov
fs
test
push
bound
jno
jge
mov
push
scas
xor
xor
pop
adc
jmp
mov
imul
push
stos
jbe
adc
sbb
inc
xchg
fisubr
jno
adc
sbb
cmp
mov
sbb
dec
ror
jae
cmps
mov
int3
jp
jae
lods
cmp
xchg
jmp
(bad)
xor
pop
xchg
mov
popf
xchg
jbe
xor
inc
pop
aaa
cwde
nop
add
mov
aad
pop
jo
mov
mov
pusha
mov
je
inc
cs
mov
in
and
outs
std
cs
sar
jne
mov
push
push
sar
ret
lahf
fdivr
sbb
out
jbe
mov
xor
jae
and
add
rcr
mov
in
(bad)
das
adc
out
icebp
inc
xor
mov
jne
cmp
mov
push
push
cmps
jp
sub
cmp
inc
fdivr
fnstenv
data16
pop
lods
mov
nop
fistp
jmp
inc
in
cmps
pop
push
xor
fs
hlt
and
push
mov
xor
cmp
jmp
sbb
xchg
mov
mov
popf
out
retf
cmp
pop
xchg
mov
mov
dec
dec
ss
inc
ins
call
stos
fucompp
jecxz
sar
gs
mov
push
jp
lahf
cmp
add
pop
mov
pop
mov
pop
inc
mov
mov
pop
sbb
(bad)
inc
not
sbb
icebp
cwde
adc
inc
xor
mov
pushw
movs
xor
ins
sub
jmp
xor
inc
call
in
inc
mov
jmp
mov
xchg
ss
dec
xchg
inc
std
sar
(bad)
xchg
pop
(bad)
mov
xor
jnp
jge
and
call
shl
dec
nop
inc
jbe
sbb
or
stos
sbb
cmp
(bad)
loope
xchg
and
mov
sub
dec
adc
sub
push
ds
or
and
data16
jmp
inc
add
xor
inc
pop
std
push
mov
lods
mov
pop
mov
lods
add
data16
jbe
push
(bad)
jl
pop
xchg
loope
inc
mov
stos
adc
dec
mov
and
lahf
push
pop
loope
lods
jle
mov
or
inc
and
mov
sub
std
xor
scas
jb
mov
pop
enter
dec
cli
pusha
popf
imul
pop
aad
mov
pop
push
mov
mov
dec
jecxz
mov
gs
xor
sub
out
or
cld
fs
test
outs
pop
push
adc
adc
dec
scas
pop
loop
mov
jmp
outs
fucomip
mov
sbb
clc
mov
mov
inc
inc
mov
xlat
or
ficomp
dec
xor
clc
mov
push
into
fdiv
push
and
popf
and
fnsave
imul
push
jl
mov
test
push
add
hlt
dec
cmp
enter
jo
leave
stos
test
xlat
lea
fld
or
cmp
sub
in
arpl
loopne
das
or
or
dec
push
mov
stc
xor
jb
out
int
sahf
aaa
mov
fbld
movs
jbe
popa
sub
xchg
jae
or
rol
adc
repz
sahf
test
mov
sub
aad
cmp
daa
fimul
xlat
ins
iret
les
add
mov
or
mov
sqrtps
ret
stos
and
test
cmp
enter
out
or
xlat
clc
dec
xchg
fisttp
dec
loop
loop
xchg
inc
add
div
jp
out
mov
rol
imul
push
pop
sub
dec
jl
jne
jae
add
movs
popf
bound
fisttp
call
xchg
dec
psllw
jecxz
pop
cmp
scas
outs
adc
(bad)
mov
mov
and
cmc
push
mov
and
hlt
mov
push
dec
fcom
das
outs
(bad)
cdq
sub
inc
adc
cmp
sbb
test
jnp
mov
mov
mov
mov
leave
adc
mov
mov
imul
pop
sub
mov
sahf
addr16
ror
sbb
push
xchg
dec
cmp
sub
dec
or
cmp
xchg
cmps
mov
jmp
pop
jno
gs
jnp
and
push
repnz
jne
test
add
aad
ror
xchg
jae
jecxz
adc
dec
pop
jnp
xor
sbb
sbb
shr
gs
jb
and
push
jae
stc
sbb
pop
mov
dec
shl
in
push
add
loope
sbb
loop
test
xor
rol
test
cld
aam
inc
addr16
jno
or
xor
aas
std
push
xchg
xchg
xchg
into
add
sahf
adc
cli
addr16
in
gs
fst
sub
push
ret
popf
sbb
add
push
dec
lods
ss
mov
cmp
mov
mov
cmps
xor
add
push
xchg
cmp
add
or
frstor
jno
push
lods
mov
mov
sub
sbb
sbb
es
xchg
jmp
push
xchg
cli
push
mov
stc
out
adc
into
shr
mov
(bad)
add
fucompp
push
and
cmps
jmp
shl
jb
rcl
or
rep
std
in
retf
mov
xchg
(bad)
and
xchg
call
fcmovbe
imul
inc
clc
rcr
add
cli
aam
ins
fcom
jo
(bad)
sbb
adc
(bad)
push
retf
(bad)
fstp
test
xor
and
push
and
jmp
push
push
jmp
jmp
scas
jae
ffree
cmc
or
xchg
push
in
btr
ins
xor
imul
sbb
fs
push
and
sar
ds
in
sbb
mov
test
cdq
loop
rcl
dec
inc
cmp
cmp
sbb
test
mov
xor
push
or
mov
push
fsubr
fiadd
sbb
and
lods
xor
jnp
push
jge
retf
inc
das
xchg
lahf
dec
pop
(bad)
hlt
call
inc
adc
inc
les
inc
mov
jnp
xchg
shl
into
stos
mov
sbb
inc
lahf
call
icebp
jb
jb
scas
pop
mov
stc
pop
retf
iret
repz
call
xchg
jne
retf
lods
and
cmps
mov
dec
mov
jns
aad
push
jns
push
jge
int3
add
enter
into
mov
inc
in
in
or
push
test
mov
arpl
cld
daa
ror
mov
neg
cmp
mov
ret
add
and
jl
inc
or
mov
idiv
push
adc
add
push
sar
repz
(bad)
jecxz
icebp
jnp
nop
xor
push
stos
(bad)
in
mov
cli
dec
xor
loope
inc
pop
shl
xchg
int3
add
jecxz
repz
call
lds
jbe
leave
sahf
mov
cmp
push
pop
imul
xchg
lock
ja
stc
dec
sbb
adc
push
fist
jmp
push
ds
push
test
dec
test
test
mov
jnp
or
pop
movs
cmp
push
dec
lock
xor
mov
lahf
les
cmp
xchg
jl
adc
mov
xor
or
leave
xor
inc
cmp
adc
mov
out
inc
sub
add
leave
sbb
push
xchg
add
adc
neg
jbe
out
push
fldenv
idiv
ins
xchg
sub
inc
sub
mov
jle
dec
pusha
mov
mov
mov
push
bound
and
xor
hlt
hlt
xchg
popa
cmp
fwait
cdq
sbb
pop
shl
cmp
outs
adc
add
adc
mov
sub
fbstp
enter
xchg
das
inc
mov
push
stos
rcr
mov
iret
and
add
shl
pop
scas
imul
stos
xor
rcl
sbb
jp
dec
jl
adc
add
cmps
sub
pop
mov
out
pop
jnp
jae
pop
dec
in
fcom
xchg
gs
jg
movs
sbb
ss
test
lock
cmc
gs
es
and
pop
sar
fistp
mov
or
mov
test
pushf
push
bound
and
xor
push
xchg
scas
cmp
inc
fsubr
pop
jmp
jmp
cmp
ins
jb
daa
out
arpl
mov
mov
aaa
dec
inc
dec
test
dec
cmp
sub
ret
popf
jnp
cmp
lahf
fmul
mov
popf
push
inc
cmp
rcr
or
mov
jno
rol
jmp
cmps
or
mul
mov
xchg
ins
jl
inc
pop
pusha
and
mov
sbb
loopne
pop
add
ret
sti
cld
movaps
sub
sub
push
mov
test
out
xchg
(bad)
jp
mov
outs
xor
arpl
mov
repz
or
popa
mov
sbb
out
pop
xor
pop
(bad)
adc
pushf
jae
arpl
add
cmps
xchg
mov
jb
lock
xchg
clc
ret
das
out
bound
out
(bad)
jp
dec
in
icebp
and
imul
js
xchg
mov
mov
mov
stos
setae
xor
sti
push
adc
or
xor
adc
outs
xor
xchg
cmp
rcr
push
jge
add
push
mov
repz
and
stc
cmp
cmp
test
aad
loope
inc
imul
sbb
(bad)
(bad)
aas
(bad)
dec
(bad)
sbb
mov
in
mov
enter
out
addr16
div
add
mov
sub
inc
cmp
and
test
mov
ret
mov
xchg
pop
sbb
mov
sbb
ret
sti
and
jb
xchg
ins
sub
stos
les
mov
sub
cmps
adc
daa
neg
xor
enter
adc
enter
scas
cdq
mov
cmp
mov
adc
cmp
repz
push
mov
out
call
push
(bad)
retf
dec
ret
cli
push
adc
loopne
push
jecxz
call
and
(bad)
xchg
xlat
dec
and
jmp
mov
pop
popf
pop
xchg
test
cmp
arpl
nop
cmps
jecxz
loope
mov
cmp
shl
push
xchg
lea
cs
scas
outs
mov
inc
punpckhbw
loopne
rcl
xor
jecxz
sahf
imul
push
js
add
xchg
inc
cmp
cmp
mov
lods
dec
loopne
rcl
add
jmp
or
xor
xor
in
mov
scas
push
icebp
lods
inc
jge
call
or
xchg
mul
xchg
pavgw
push
mov
pop
test
adc
jmp
int
scas
mov
in
aad
les
or
bswap
push
jno
rcl
dec
jns
ja
and
xor
aad
and
mov
push
dec
in
sbb
xchg
jae
repz
aaa
cmp
aam
mov
mov
cmp
mov
scas
cmc
lods
lahf
add
or
jle
push
es
xchg
push
repnz
jp
xor
inc
mov
and
xchg
cmc
imul
mov
and
icebp
ds
je
repz
fxch
aaa
xor
or
movs
jmp
jae
push
test
movs
pusha
inc
sub
scas
mov
cmp
fdivr
jne
arpl
adc
int
cmps
mov
test
mov
jl
into
pop
mov
cld
pop
and
(bad)
push
sti
or
popa
sub
stos
daa
outs
inc
sbb
or
cmp
push
push
(bad)
fcom
ret
mov
jbe
retf
rcl
test
imul
(bad)
les
inc
jmp
cwde
std
sbb
pop
xchg
(bad)
jnp
inc
mov
fcom
mov
inc
out
(bad)
xor
ss
call
fwait
in
inc
add
mov
sbb
scas
mov
xor
aaa
in
sahf
and
mov
out
mov
pushf
call
(bad)
and
jg
mov
mov
inc
push
add
pop
xor
(bad)
mov
cmp
movs
or
mov
fild
mov
push
cmp
in
adc
daa
lock
xchg
sbb
leave
push
pop
or
mov
pop
js
sub
xor
inc
mov
into
loopne
inc
add
ss
or
mov
movs
mov
mov
(bad)
lahf
cmps
cmp
(bad)
cmp
xor
xor
mov
inc
sbb
fistp
xchg
xor
jns
pop
fiadd
xchg
xchg
test
stc
movs
mov
gs
imul
jmp
dec
(bad)
sub
imul
jge
push
out
xchg
ins
enter
icebp
retf
imul
pop
into
mov
movs
imul
cs
xchg
xchg
jmp
shr
out
jb
cmpxchg
bound
inc
into
dec
stos
mov
ss
stos
and
clc
scas
mov
push
out
sbb
mov
inc
out
ror
cld
xchg
gs
in
xor
mov
inc
adc
mov
sub
dec
retf
icebp
and
pop
mov
sub
xchg
mov
jbe
jge
inc
jb
or
push
imul
data16
mov
fidivr
cli
sub
test
test
aam
fidiv
mov
dec
jae
pop
mov
xchg
lahf
mov
test
dec
xchg
setp
dec
(bad)
and
(bad)
mov
mov
jmp
cmp
dec
scas
xchg
push
mov
sub
cwde
out
jl
pop
mov
popa
pop
add
push
jae
jb
cmp
xchg
out
sbb
pop
call
ficom
inc
xchg
dec
scas
jno
(bad)
js
and
fwait
ret
and
sub
pop
mov
imul
push
mov
lods
ins
test
arpl
mov
jb
cmp
mov
fcomp
cmp
les
fsqrt
cli
mov
cwde
call
rcl
add
and
shl
je
dec
sub
and
(bad)
sbb
pushf
stos
or
mov
shl
adc
popa
jae
mov
hlt
sub
pop
and
sbb
push
pusha
in
in
cmovb
clc
leave
fidivr
sub
xchg
ins
inc
fincstp
into
pop
lahf
in
or
in
cmps
and
mov
and
neg
call
adc
cmp
jmp
add
add
loopne
imul
sbb
jno
ins
scas
mov
push
cmp
rcr
xlat
test
pop
pop
inc
loope
xor
jle
xchg
xlat
dec
(bad)
cmp
jmp
jecxz
dec
inc
fstp
sub
loope
jno
dec
add
mov
sub
int3
xchg
sbb
pushf
ja
mov
cmp
scas
xchg
stos
fsub
and
add
cmp
mov
les
retf
add
adc
add
(bad)
out
cmp
scas
inc
ds
inc
rcl
cdq
loopne
pushf
sub
cmp
mov
xor
xchg
jae
or
ficomp
sub
xor
dec
dec
loopne
xor
ins
(bad)
daa
pop
hlt
(bad)
addr16
es
cmps
xor
pop
es
pushf
lods
and
dec
(bad)
jmp
rcl
jb
jb
and
das
push
int3
or
adc
jp
or
lods
dec
enter
fnstsw
es
ins
pop
mov
xchg
adc
jmp
jo
jle
push
shl
sbb
dec
jle
jmp
mov
and
dec
bound
mov
shl
sti
cmp
arpl
pop
fs
inc
xlat
xchg
cmp
test
cmp
pop
icebp
(bad)
lock
(bad)
or
jnp
xchg
jmp
icebp
outs
idiv
movs
push
(bad)
out
sub
adc
jae
mov
xchg
(bad)
xor
(bad)
fsub
das
in
xchg
xor
or
stc
lds
ret
inc
mov
mov
icebp
mov
jo
add
fsub
mov
(bad)
out
mov
sub
clc
loop
xor
out
das
outs
pop
sbb
sbb
cmc
add
inc
xchg
push
das
pop
cwde
loop
ret
mov
pop
lea
cld
xchg
mov
push
icebp
cli
push
test
mov
push
out
and
xchg
inc
bound
paddsw
add
lock
jno
xchg
pop
mov
ficomp
xlat
pop
xor
daa
xchg
outs
pop
movs
mov
mov
ret
pushf
mov
lds
ss
adc
cmp
push
push
aad
xlat
stc
dec
xchg
cld
xor
pop
in
fcomi
iret
mov
pop
imul
popf
pop
out
call
scas
add
cld
popf
(bad)
pop
cmp
inc
daa
aam
arpl
mov
popf
inc
xor
jle
jmp
loope
test
aad
inc
jbe
and
mov
xchg
push
es
aad
out
loope
lock
sub
imul
pop
mov
rdpmc
jns
adc
adc
jge
jmp
jo
push
mov
jb
out
ret
ins
lods
xchg
daa
out
and
pop
ds
mov
add
dec
adc
add
gs
popa
jae
or
aad
cmc
jl
cmp
pop
in
cmp
loop
cmp
fucomp
sbb
scas
xor
jne
mov
jmp
sbb
xchg
lahf
(bad)
cmp
and
icebp
jns
add
cli
mov
fcomp
fcomp
and
xchg
shl
shl
cmc
pop
push
jmp
movs
sub
test
add
inc
and
test
sbb
in
push
fiadd
or
enter
dec
ins
out
test
movs
aas
sbb
inc
push
push
cmp
adc
idiv
xchg
out
sbb
cwde
and
inc
xlat
nop
xor
cwde
jne
ret
xchg
shr
sti
pop
cmps
cdq
xchg
or
aaa
mov
daa
jmp
inc
shr
pushf
int3
das
(bad)
aas
jns
iret
sbb
(bad)
test
cld
imul
out
shr
mov
in
sahf
mov
push
cwde
sar
jecxz
sub
cmps
or
inc
adc
push
mov
out
sbb
cmp
cmp
mov
push
pushf
dec
icebp
stc
enter
nop
or
aas
movs
(bad)
jne
lods
repz
iret
in
jne
shl
cmp
inc
inc
ja
pop
jmp
cdq
out
mov
inc
adc
pushf
cmp
dec
push
out
xlat
add
and
dec
movs
(bad)
dec
add
push
dec
pusha
cwde
fucomi
ins
(bad)
push
std
ss
push
pop
mov
int
sub
sar
mov
js
stos
inc
xchg
and
int
mov
pop
jp
mov
stos
stc
imul
lods
mov
pop
push
movs
lea
imul
fwait
sbb
es
jae
xor
mov
popf
mov
push
pop
mov
fcmovbe
outs
(bad)
mov
sbb
add
sar
hlt
lea
retf
iret
out
lahf
mov
retf
mov
test
xor
inc
in
mov
xchg
adc
sbb
out
add
push
pushf
scas
xor
sar
jnp
dec
sub
movs
shl
xchg
jb
into
inc
pushf
popa
add
xor
push
jecxz
sbb
gs
pop
or
mov
adc
aas
mov
cmps
pop
lods
ret
mov
loop
imul
cmp
mov
imul
pop
or
push
pop
fs
jl
sbb
outs
stos
xor
xor
sub
or
mov
int
xor
ror
(bad)
mov
imul
pop
mov
mov
jno
(bad)
out
idiv
test
push
psubw
cld
out
scas
xchg
xchg
in
pushf
test
cmp
or
mov
loopne
popa
sbb
pop
cmps
pushf
adc
fst
mov
xchg
outs
rcl
mov
test
mov
and
or
arpl
sahf
inc
mov
dec
push
ror
cmp
jnp
inc
dec
test
test
rol
aad
cmp
add
adc
shl
ins
inc
push
pop
dec
in
pushf
pusha
mov
jge
or
cmc
jp
push
push
std
add
jmp
retf
xchg
sti
xchg
popa
cmps
call
push
push
mov
pop
stos
cld
cs
nop
jnp
ds
or
scas
mov
cmp
jg
in
jnp
mov
test
push
jmp
mov
loop
loop
xchg
shr
cmc
push
fcom
sbb
nop
(bad)
lods
daa
adc
gs
bound
lock
mov
ret
loop
push
jecxz
jns
movs
repnz
xor
pusha
xchg
adc
cmp
js
js
jae
or
mov
loope
xchg
adc
fimul
inc
sub
adc
mov
inc
shr
imul
popf
sbb
mov
jmp
bound
fst
clc
sub
ds
test
outs
clc
jo
cmp
pusha
dec
ins
je
add
sbb
js
xchg
jle
arpl
loope
cdq
pop
in
and
arpl
xor
push
mov
sahf
inc
adc
(bad)
(bad)
xchg
inc
xchg
mov
je
jae
in
lea
fsubr
inc
in
push
adc
xor
lds
movs
sub
enter
pop
jae
sub
pop
lds
(bad)
out
stc
add
clc
popf
cwde
ror
and
adc
stc
dec
inc
test
shr
cmp
inc
adc
xchg
dec
sbb
scas
jno
adc
xor
shl
inc
out
aam
repz
pop
dec
call
arpl
mov
sub
leave
xor
or
xchg
in
clc
fidiv
adc
call
fld
push
pop
aam
movs
pop
or
inc
mov
push
sub
jae
stc
sbb
mov
mov
mov
fld
and
das
xor
adc
pop
jae
sar
in
pop
and
dec
or
and
pop
add
(bad)
aas
popa
pop
std
jmp
add
in
int3
(bad)
xor
(bad)
jo
jnp
mov
test
cwde
nop
(bad)
add
add
push
(bad)
cmps
xlat
lea
ds
pop
cli
loopne
xchg
jne
mov
movs
adc
push
les
(bad)
or
fdivp
inc
adc
js
xchg
sbb
jbe
clc
imul
push
sar
outs
mov
push
ret
(bad)
imul
outs
loop
daa
popf
xchg
inc
aaa
push
stos
sub
call
imul
popa
mov
mov
fdivr
icebp
imul
push
clc
(bad)
and
inc
rcr
mov
sar
mul
cdq
cmp
push
or
push
jecxz
fistp
ror
clc
jae
cli
and
fisub
inc
mov
dec
imul
push
mov
jno
scas
push
js
fcomi
dec
inc
sub
pushf
mov
sub
xlat
cmp
std
rcr
das
aam
nop
shl
xor
cmps
sahf
out
rol
std
(bad)
shl
mov
xor
adc
add
mov
add
movs
out
js
cmp
movs
ins
sbb
bound
push
sub
mov
xchg
pop
adc
lds
sub
js
xor
push
dec
adc
fisttp
je
mov
iret
jmp
sub
jmp
fdivr
xchg
pop
outs
movs
push
in
xchg
(bad)
in
cs
(bad)
adc
sbb
inc
out
repz
ja
rcl
or
xchg
cmp
adc
ins
xchg
jmp
je
mov
sahf
cmc
add
mov
add
mov
lahf
xchg
mov
jmp
xor
repnz
int3
and
xchg
jl
cdq
cmp
adc
mov
div
xlat
mov
enter
ins
daa
in
cwde
and
ret
popf
mov
and
pop
mov
(bad)
cmps
je
cld
imul
sbb
sub
and
ins
sub
xchg
adc
inc
popa
mov
call
scas
inc
xchg
nop
pop
fs
lock
xchg
popa
push
pop
movs
add
pop
sets
inc
and
shr
mov
dec
adc
mov
push
lds
cmps
nop
mov
mov
(bad)
(bad)
jmp
ss
cmps
dec
pop
mov
or
sub
movs
(bad)
loope
or
lahf
ins
cwde
out
cmp
mov
(bad)
repz
(bad)
scas
inc
jge
pop
inc
mov
cmp
add
push
repnz
aad
iret
aam
dec
imul
jb
outs
sub
aaa
and
in
xor
repz
sbb
ja
fnsetpm(287
out
jmp
clc
ret
(bad)
(bad)
xchg
in
fcom
movs
cmp
push
push
mov
lea
sub
xchg
jno
gs
xor
dec
call
mov
jg
xchg
sub
out
out
add
cs
jg
je
div
mov
mov
out
nop
mov
mov
push
popa
test
enter
and
ja
xor
(bad)
ffreep
jle
push
fwait
hlt
cmp
pop
adc
rcr
std
(bad)
(bad)
cmp
sbb
jns
retf
imul
sub
dec
add
(bad)
jmp
mov
mov
and
mov
(bad)
jmp
pop
int3
cmc
movs
shl
lods
pop
dec
into
sub
out
dec
inc
push
(bad)
enter
je
xchg
sub
sub
dec
sub
(bad)
mov
and
and
and
sub
call
or
jg
shl
cwde
sbb
cwde
das
cdq
jo
stc
mov
cmp
pop
mov
add
stos
fidiv
test
jb
fidiv
push
pop
lods
gs
ret
jmp
and
into
mov
mov
mov
call
gs
fidivr
xchg
xor
sbb
inc
sar
int
and
or
jno
push
mov
out
in
jb
push
rcl
pop
sub
rol
sub
xor
sti
jne
sbb
lds
dec
je
push
into
loope
stc
dec
dec
sbb
daa
cmc
test
push
jmp
not
fadd
push
pop
gs
(bad)
fs
and
dec
adc
xor
(bad)
ins
test
lds
xlat
test
pop
dec
ins
or
pop
mov
sub
cwde
mov
loopne
out
jb
outs
mov
adc
hlt
cmp
jge
mov
mov
addr16
(bad)
fisubr
adc
push
mov
add
fistp
push
xchg
inc
rcl
repnz
jl
je
stos
mov
cmps
adc
sti
jge
ins
loope
shl
cmps
repnz
inc
int
mov
mov
ins
repz
push
aaa
ja
imul
inc
scas
loop
mov
and
and
rcr
in
xlat
retf
sbb
bound
cmp
jo
xchg
mov
lods
cs
xor
sbb
cmp
or
inc
int3
cld
pop
pop
push
in
ret
cmp
scas
ror
scas
imul
ins
js
xchg
enter
loop
adc
sti
fldcw
sbb
jns
test
mov
xchg
xor
bound
mov
mov
shr
or
data16
ds
jge
mov
cs
cmps
pusha
jle
inc
jbe
push
sub
ror
leave
sahf
in
sbb
sbb
sub
xchg
inc
pop
inc
(bad)
jno
or
push
ror
gs
stos
push
sub
or
shl
pop
jmp
mov
add
les
repnz
test
cmp
pop
loope
dec
lea
movs
sbb
dec
and
out
push
cmp
xor
repnz
gs
in
test
ret
ds
call
ins
mov
mov
ret
inc
(bad)
mov
lds
retf
nop
mov
les
neg
jge
pop
popa
or
push
mov
test
dec
push
imul
bound
push
hlt
sti
jno
inc
cmps
out
mov
fwait
hlt
(bad)
je
or
lock
mov
jecxz
mov
add
mov
out
cmp
xchg
xlat
das
fdivp
push
cmp
mov
dec
jnp
push
outs
scas
jno
test
in
sub
mov
aam
lods
cmc
ins
leave
pop
xchg
xor
retf
dec
sti
addr16
(bad)
cmp
popf
cmp
add
mov
mov
or
(bad)
ret
test
adc
ret
movs
pop
jl
stos
jg
outs
lock
dec
test
pop
fwait
loopne
add
les
and
repz
cwde
in
xor
add
stos
pusha
gs
mov
clc
pop
ins
push
or
xchg
add
pop
xor
lods
push
add
and
(bad)
sbb
pusha
sbb
jb
aam
and
(bad)
cli
(bad)
bound
comiss
ror
cmp
cld
clc
push
fnsave
mov
leave
movs
xlat
pop
movs
stc
sahf
shr
and
lods
jne
loopne
and
mov
jmp
jae
pushf
enter
mov
mov
dec
jb
mov
add
sbb
fucomi
cmc
ins
lea
sub
mov
sti
inc
cmp
aad
(bad)
iret
aam
and
test
popf
push
lods
test
shr
push
mov
xchg
dec
add
sbb
retf
repnz
out
shl
and
cmp
sbb
lods
das
es
mov
mov
cmp
pushf
addr16
stos
cmp
dec
inc
push
mov
cmp
gs
cdq
jecxz
sbb
sbb
or
push
push
mov
and
mov
(bad)
xor
inc
jae
dec
mov
outs
mov
scas
pop
xor
aaa
xchg
ror
fsub
ins
jmp
pop
icebp
bswap
lock
cmp
push
jp
ja
stos
dec
cmps
pop
movs
xor
addr16
sbb
enter
cmp
test
sbb
sbb
mov
(bad)
mov
and
fist
add
dec
sbb
push
pop
lahf
(bad)
imul
int
mov
mov
lahf
lock
outs
sbb
int3
cmp
dec
mov
xchg
sub
jae
in
int
mov
push
mov
xor
test
xor
inc
fld
in
dec
push
sahf
dec
inc
cmc
femms
mov
ins
jge
dec
inc
add
pop
les
mov
retf
push
clc
mov
mov
and
test
repz
out
outs
inc
jno
inc
repz
out
pop
inc
adc
push
outs
punpckhdq
push
ja
push
inc
mov
test
(bad)
shl
jmp
(bad)
fs
adc
mov
std
in
test
xchg
sahf
(bad)
retf
cmps
and
xchg
repnz
cmp
pop
sbb
cmp
inc
out
cmps
les
mov
cmps
mov
lea
push
les
loopne
xor
xor
mov
mov
sbb
imul
jb
adc
out
(bad)
sub
(bad)
push
in
setb
dec
push
mov
add
loopne
dec
add
popf
(bad)
or
enter
in
fild
push
pop
pop
int3
(bad)
popf
bound
popf
mov
stos
jno
ins
push
fsubr
cmps
xor
pop
pusha
cmp
lahf
xchg
or
or
sbb
push
or
mov
lahf
into
mov
pop
call
(bad)
stc
pushf
dec
jle
mov
push
shl
fsub
int
push
dec
stc
push
cld
mov
inc
inc
xchg
mov
jp
inc
scas
(bad)
pop
stc
mov
stos
jns
aaa
lea
call
push
adc
gs
fstp
fdiv
loopne
or
inc
pop
(bad)
clc
jb
bound
ror
push
aad
or
(bad)
push
dec
arpl
cld
cdq
lds
call
sbb
mov
lods
leave
adc
pop
xchg
jmp
leave
push
push
mov
xor
xor
cmp
jns
xchg
sbb
push
adc
jb
imul
adc
shl
jnp
cmp
pushf
aas
jae
data16
push
xor
jo
mov
xor
aaa
inc
jmp
cmps
outs
test
or
aam
jae
ficomp
in
dec
rcl
and
movs
xchg
and
dec
and
(bad)
xchg
out
push
dec
mov
xor
dec
out
test
mov
sub
ja
mov
add
cmp
sbb
movs
mov
lods
arpl
nop
test
pop
lahf
pop
loopne
xor
(bad)
cmps
xor
gs
rcr
push
push
ss
pop
daa
jmp
int
mov
push
mov
push
stc
jp
inc
pusha
mov
sub
push
pusha
aad
sahf
jo
xor
sub
sbb
xchg
mov
lahf
mov
push
div
aam
sub
pop
out
ja
push
adc
repnz
pop
xchg
std
das
jmp
popa
daa
(bad)
push
xchg
adc
enter
mov
pop
fs
cs
xor
dec
jl
mov
imul
lock
sti
sbb
and
(bad)
adc
ret
out
pop
hlt
mov
sar
imul
leave
xchg
stos
and
pop
push
aad
aad
push
ret
pop
dec
mov
scas
lock
frstor
xchg
mov
or
mov
jl
xchg
aas
sub
or
outs
ja
jbe
push
and
shr
sub
dec
or
and
stos
pop
adc
hlt
inc
pop
and
rcr
cmps
xchg
shl
loope
add
cmp
adc
pushf
mov
test
push
pop
in
int
or
clc
mov
mov
xchg
push
addr16
xor
aam
sub
jo
cmp
mov
in
ficomp
xchg
cmp
and
mov
loope
push
cmp
bound
push
dec
jecxz
loop
mov
std
(bad)
cs
test
call
mov
fstp
out
popa
lea
add
cmps
jb
js
jmp
out
test
pop
(bad)
jnp
inc
mov
or
xchg
fild
inc
fcmovbe
xchg
pop
adc
(bad)
imul
or
ret
mov
inc
or
or
sbb
jmp
cmp
sbb
rcr
adc
sbb
mul
in
and
(bad)
mov
call
aad
adc
int3
push
mov
lahf
mov
dec
xchg
fdiv
out
dec
ds
xchg
daa
pop
enter
push
jno
mov
jne
and
(bad)
dec
sbb
(bad)
and
aad
or
push
jne
iret
repnz
cmp
sub
push
retf
mov
mul
(bad)
dec
sbb
pop
cmps
jne
sti
sub
or
dec
lds
lahf
push
int
jno
jmp
ds
push
ds
scas
fs
mov
add
ret
sbb
or
xchg
fisubr
or
repz
cmp
jmp
iret
fcomp
push
mov
adc
(bad)
lahf
xlat
jb
push
sub
int3
scas
fstp
inc
lds
cwde
cmp
cdq
pop
(bad)
int
or
sbb
std
in
adc
mov
jne
sub
push
mov
inc
push
add
sbb
iret
sti
into
mov
pop
inc
out
sub
mov
into
xchg
inc
xor
mov
inc
pop
sub
mov
xor
maxps
xor
ud2
push
repnz
aas
push
mov
pop
cmp
loope
cmp
(bad)
cmp
xchg
lods
dec
mov
xchg
inc
pop
adc
jecxz
jae
(bad)
(bad)
adc
mov
fidiv
movq
test
push
xor
cmp
sub
fucomp
mov
adc
iret
cmp
push
jae
sub
and
fidiv
fcomi
pop
pusha
push
pop
jle
xor
ja
push
jecxz
push
xchg
into
clc
fcomp
add
pop
cmp
out
scas
ja
in
sti
sub
sbb
(bad)
jmp
push
inc
ret
dec
cwde
or
test
mov
jge
cld
jns
lods
test
cmovb
inc
xchg
arpl
push
(bad)
shl
sbb
dec
mov
shl
test
test
aad
jb
or
push
sub
cmps
lods
mov
in
aaa
test
cmp
retf
wrmsr
pop
cmp
mov
cmp
mov
and
cmp
mov
sub
xchg
stos
loope
shl
pushf
retf
jns
enter
add
out
pop
aam
push
pop
(bad)
xlat
addr16
jmp
push
pop
(bad)
xchg
loope
add
adc
ja
les
cdq
push
in
cmps
xor
imul
lea
push
pop
cmps
push
bound
ins
pusha
add
jnp
xchg
cmp
(bad)
(bad)
scas
loop
mov
data16
lock
scas
in
rcl
dec
adc
ret
add
push
push
cmp
mov
push
jl
mov
or
cmp
std
jmp
push
std
std
loop
ret
pusha
pop
sbb
xchg
iret
pop
add
xchg
xchg
mov
lods
aam
jmp
movs
leave
fld
xchg
jge
jae
fwait
icebp
xchg
fcomi
into
dec
lea
and
and
adc
inc
dec
lods
mul
xchg
neg
clc
jp
mov
mov
hlt
jnp
jbe
imul
push
mov
push
rcr
xchg
lods
js
gs
mov
ds
add
adc
outs
add
lahf
leave
stos
ss
sbb
cmp
test
mov
or
stos
cmp
pop
loopne
test
sub
sti
out
daa
inc
into
push
hlt
(bad)
sub
add
fbstp
mov
es
pop
jmp
shr
add
cmp
jne
jmp
hlt
out
scas
in
mov
pushf
mov
inc
aam
sbb
dec
dec
stos
add
xor
inc
sbb
fadd
and
jmp
mov
test
jle
aam
mov
sub
popa
arpl
test
fisttp
sub
mul
aad
loope
call
or
daa
push
dec
lods
loope
cmc
fst
cwde
mov
push
and
js
fiadd
out
out
inc
(bad)
call
ja
sbb
push
mov
mov
div
imul
dec
xor
push
dec
lea
rcl
push
cmp
and
call
pop
je
inc
xor
popa
cs
mov
mov
enter
stc
pop
add
jmp
add
movs
push
or
jge
mov
push
add
inc
jb
mov
ret
mov
xchg
dec
fadd
ins
fsubr
shr
sbb
fs
inc
jbe
fsub
adc
cmp
lea
outs
jge
inc
jnp
aad
repz
out
jo
dec
dec
ja
fild
aas
add
int
jge
mov
stos
ss
jne
dec
js
adc
scas
sbb
fcom
or
hlt
aam
adc
jg
clc
jno
or
inc
clc
dec
push
and
pop
test
sar
shr
(bad)
lods
push
leave
sar
fs
div
stos
adc
or
neg
pop
pop
pop
sub
adc
or
scas
push
cmp
jbe
adc
outs
wrmsr
arpl
ret
jle
sub
sub
int3
xchg
ret
fs
push
adc
xor
aaa
pop
lods
cmp
xchg
sub
sub
add
icebp
mov
xor
xchg
jg
retf
mov
xchg
cli
and
js
push
and
cld
ret
cwde
adc
cmp
mov
rol
aas
mov
dec
ror
mov
inc
fild
les
loopne
jbe
sbb
inc
std
inc
dec
lds
hlt
mov
dec
cmps
push
sbb
scas
push
mov
jnp
ror
dec
mov
mov
ins
xor
icebp
aad
mov
mov
push
inc
rcr
aas
movs
sbb
shr
(bad)
xchg
inc
(bad)
jnp
ret
sub
adc
sbb
mov
mov
xchg
jge
aaa
jno
cs
retf
and
sar
das
lods
das
dec
fwait
call
in
lods
fwait
pop
fcomp
jg
pop
data16
or
cli
mov
cwde
jp
jo
mov
mov
ret
adc
xor
js
test
and
push
sbb
push
std
js
ins
outs
(bad)
or
jle
mov
push
adc
push
rcl
inc
mov
mul
mov
loopne
stos
jae
out
icebp
nop
push
fs
or
(bad)
pop
push
pop
dec
pmaxub
jg
inc
icebp
in
inc
in
xor
xchg
xchg
sub
daa
mov
inc
and
aas
aad
jp
out
and
aam
mov
movs
mov
scas
inc
or
add
push
or
adc
mov
stc
inc
inc
bound
int3
popa
lea
inc
(bad)
push
inc
and
pop
and
enter
jle
stc
pusha
xchg
lods
stc
(bad)
sub
add
mov
pop
adc
adc
add
sbb
cmp
push
outs
mov
ss
(bad)
cmp
mov
les
fmul
fisttp
jl
sbb
cmps
cmps
outs
cs
add
dec
sahf
inc
fild
sub
xchg
pop
jmp
bts
xchg
inc
mov
dec
inc
mov
mov
push
call
mov
jno
dec
(bad)
xor
stos
adc
cld
jbe
and
out
ins
push
mov
retf
xlat
enter
dec
outs
sub
icebp
mov
test
dec
mov
test
pop
sub
lods
sbb
mov
(bad)
or
fincstp
push
jmp
jmp
fs
movs
inc
jecxz
nop
push
movs
mov
les
pop
in
sub
retf
jg
cmp
inc
adc
inc
ficomp
xlat
xor
je
mov
sbb
mov
into
add
ss
dec
movs
xchg
out
push
stos
cmp
dec
lods
jbe
and
and
in
sahf
jg
aaa
inc
retf
fs
mov
adc
lahf
out
mov
cmp
xor
sub
mov
sub
sub
adc
lods
(bad)
and
pop
addr16
repnz
test
pop
or
mov
xchg
hlt
es
cmp
mov
mov
out
xchg
cli
pop
mov
mov
inc
gs
ret
xchg
push
outs
in
pop
(bad)
sti
mov
dec
aad
xor
lea
popf
push
push
add
cmps
adc
mov
inc
adc
bound
adc
inc
scas
mov
and
stc
(bad)
fisubr
pop
rol
and
inc
xchg
loope
dec
jg
ret
mov
sbb
leave
or
idiv
mov
clc
retf
xor
jmp
xor
ins
adc
or
xchg
(bad)
call
jne
inc
mov
cmp
cmps
icebp
mov
adc
sahf
sub
stos
leave
sub
std
cs
push
cld
cmp
cmps
sti
sahf
fs
cmp
shr
mov
test
outs
xchg
cdq
cmps
mov
call
pop
or
sbb
push
jg
mov
adc
xchg
cmp
and
inc
outs
xchg
push
jle
cwde
and
ins
xchg
dec
bound
in
clc
inc
sbb
ficomp
test
mov
shl
sub
aad
cdq
(bad)
mov
inc
inc
movs
and
dec
test
add
into
in
mov
cwde
sti
mov
leave
test
es
xchg
adc
pop
jmp
test
aaa
adc
addr16
pop
add
ins
scas
sub
sbb
xor
movs
add
cdq
nop
test
fwait
add
dec
ret
inc
(bad)
ret
call
inc
jecxz
sbb
mov
inc
lods
popa
or
fst
(bad)
jmp
xor
std
jo
cld
xchg
push
adc
je
sbb
out
mov
fbld
sub
stc
or
push
cwde
sub
popa
mov
mov
inc
xrelease
dec
xchg
aaa
and
xor
jns
jmp
ins
jmp
dec
neg
and
xchg
or
cdq
aad
stos
retf
or
ja
and
push
arpl
push
aas
sahf
and
or
jo
idiv
cdq
popf
ins
fldenv
or
sbb
or
push
sahf
sbb
scas
mov
sahf
mov
test
cdq
xor
popf
and
call
dec
dec
xor
pop
outs
inc
sub
or
sahf
fild
jecxz
int3
lods
mov
and
frstor
fwait
mov
sub
je
mov
mov
xor
movs
inc
push
or
scas
je
mov
xchg
jecxz
adc
dec
mov
xchg
or
jo
push
fiadd
and
cld
jecxz
add
mov
lea
pusha
jo
das
fsub
push
xor
inc
rcl
jecxz
and
int3
fstp
add
push
cmp
cmp
mov
scas
sar
mov
mov
sahf
cmp
test
mov
mov
mov
hlt
mov
cmps
mov
test
clc
add
and
cmp
add
mov
mov
mov
retf
mov
xor
sbb
in
inc
mov
loop
jnp
popa
rol
je
sub
push
sti
dec
ja
mov
ins
dec
sahf
ror
ret
jno
hlt
lea
enter
dec
pop
pop
mov
mov
sbb
punpcklbw
cmps
push
add
cmp
pop
xchg
pop
xor
or
mov
xor
sub
adc
cs
movs
icebp
rcr
lods
mov
sbb
or
pusha
or
sbb
in
fist
fistp
inc
and
jmp
or
(bad)
adc
inc
dec
mov
and
iret
pop
(bad)
dec
add
xor
xchg
cmp
sbb
into
cmps
into
aad
ss
loope
cmps
or
jle
xchg
mov
jl
push
loope
or
xchg
jo
push
ins
and
pop
inc
(bad)
pop
push
jb
out
(bad)
jnp
test
scas
jl
adc
test
xor
cmc
inc
sbb
xchg
test
nop
dec
cli
ror
and
test
add
es
jle
xchg
fbstp
ret
sub
xchg
inc
rcr
in
sar
stos
stc
mov
inc
out
jb
lock
in
stos
dec
and
xchg
stc
mov
mov
mov
out
test
nop
stos
stos
jg
xchg
out
fwait
sub
test
cdq
das
xchg
push
xchg
(bad)
push
adc
test
ror
cmp
gs
xor
add
in
adc
mov
imul
scas
push
xchg
jmp
lahf
aas
(bad)
rol
xor
int3
push
in
cmp
dec
mov
sbb
sub
add
test
mov
call
aaa
cmps
xchg
dec
fwait
cmc
and
xchg
add
f2xm1
retf
or
clc
cmp
(bad)
test
pop
mov
add
inc
inc
dec
scas
inc
dec
gs
and
sbb
inc
push
add
cdq
mov
popf
(bad)
clc
mov
fistp
jp
jg
and
pushf
sbb
popf
mov
pop
sub
xlat
sbb
sbb
test
ja
das
xchg
jnp
call
pop
lds
aaa
mov
push
xor
leave
xchg
int3
and
sub
(bad)
rol
dec
jb
pop
out
cld
js
push
xchg
rcr
es
jl
stos
inc
cs
aad
outs
inc
mov
in
repnz
les
mov
pop
and
adc
pop
sub
jmp
push
push
icebp
lods
adc
jmp
jnp
fldln2
loopne
xor
add
jnp
lock
lds
mov
xor
cmp
xor
stc
fild
aaa
sahf
retf
mov
adc
data16
retf
mov
sbb
pop
or
xchg
inc
pop
pop
add
inc
jnp
jns
mov
aas
and
std
fadd
daa
sbb
adc
es
in
popf
add
adc
lods
mov
cmp
pusha
dec
sub
pop
ret
ins
popa
dec
outs
cli
test
popf
cmps
or
loop
ss
in
popf
pop
push
aam
jb
inc
mov
lea
xchg
cmp
adc
adc
cmp
cmp
push
std
mov
adc
add
xor
mov
mov
or
out
sub
fisub
loop
mov
test
(bad)
ficom
int3
mul
mov
jp
lds
mov
adc
push
xchg
and
xchg
mov
(bad)
push
xchg
sbb
(bad)
mov
inc
in
sub
pop
shl
fstp
sbb
fwait
and
(bad)
retf
pop
xchg
xchg
push
dec
jmp
xchg
jno
jge
xchg
fild
stos
jno
jne
cld
daa
push
or
xor
pop
sub
sub
jb
mov
scas
xor
jno
mov
(bad)
call
sub
scas
dec
call
mov
mov
lods
add
push
add
mov
repnz
cmc
inc
inc
mov
jle
ret
xor
cld
adc
pop
jne
mov
inc
and
stc
mov
fistp
out
sbb
adc
dec
std
sbb
xor
mov
adc
pop
pop
aad
sbb
mov
lods
adc
push
pop
imul
sar
xor
jecxz
neg
daa
sub
xor
sbb
stos
imul
dec
dec
push
test
movs
int
mov
sar
cmps
adc
fnstenvw
je
(bad)
jmp
scas
cld
pop
sub
call
(bad)
aas
jbe
(bad)
in
xchg
ds
cmp
xchg
cwde
add
sub
(bad)
jmp
sbb
rcr
dec
inc
aam
fwait
add
lea
call
jmp
aad
mov
sub
and
fld
push
fidiv
rcl
and
xchg
loope
push
push
rcl
fwait
cwde
push
idiv
adc
nop
cmps
icebp
mov
(bad)
popf
jl
pop
inc
in
clc
cmp
inc
xchg
js
mov
nop
dec
fisub
leave
push
ret
mov
dec
(bad)
in
adc
fnstsw
mov
mov
cmp
xchg
sub
retf
mov
mov
sar
ins
sbb
fs
int3
call
mov
cmp
adc
or
jmp
or
enter
inc
cmp
xor
xor
push
stos
lahf
movs
lahf
test
jl
out
adc
loopne
ret
loop
stos
lods
pop
gs
clc
out
shl
xchg
dec
movs
loopne
ins
out
nop
inc
mov
out
cwde
icebp
repnz
sub
frstor
aaa
cs
test
jne
sti
js
outs
cwde
ret
loopne
dec
pushf
enter
in
cmc
nop
popf
jl
lahf
mov
pop
loop
mov
(bad)
out
pop
push
sbb
jae
xchg
push
rcl
lahf
(bad)
test
xlat
dec
pop
sti
add
(bad)
xor
repnz
lahf
rcl
jb
cmp
sub
loop
ja
scas
inc
lods
push
or
or
dec
jp
hlt
shl
adc
retf
adc
nop
and
jo
and
inc
jge
cmps
loope
fiadd
test
push
int3
xchg
scas
aam
loopne
jp
ins
sahf
xor
inc
mov
in
xor
jae
std
popa
sar
(bad)
push
nop
jl
rcr
inc
fidivr
xor
mov
ins
fwait
mov
pop
loopne
mov
push
push
xchg
int3
ja
jecxz
mov
jbe
xor
pop
sbb
push
pop
xchg
mov
adc
scas
enter
js
inc
pop
pop
fdivr
xor
xchg
fs
test
pushf
and
addr16
add
clc
popa
sahf
sbb
cdq
je
and
mov
das
xor
rcl
xchg
cs
js
pop
jmp
xor
cmp
and
inc
shr
mov
mov
dec
ss
popa
xchg
cmp
push
push
aad
stos
cmc
push
push
push
xchg
inc
js
push
push
popf
push
je
pop
lea
sbb
ror
aaa
icebp
sub
jne
jmp
jle
push
clc
mov
add
callw
pop
ror
call
retf
jmp
pop
mov
movs
push
test
adc
pushf
dec
mov
repnz
sahf
clc
es
imul
(bad)
sub
lods
ins
sub
cmps
sub
pop
push
add
movmskps
add
mov
icebp
stos
inc
push
sub
and
pop
into
and
inc
(bad)
cmc
into
setae
inc
mov
add
jmp
test
sub
push
fild
or
sti
dec
mov
mov
inc
or
fldenv
stos
test
cld
pop
sub
call
inc
out
pop
ins
icebp
call
mov
add
scas
cli
in
in
lods
or
pushf
(bad)
jne
fisubr
int
cdq
fiadd
fld
es
jns
cmp
or
out
add
cmc
jecxz
and
add
out
adc
cmps
sbb
xor
in
lds
push
push
jmp
add
mov
das
(bad)
addr16
or
cmp
mov
hlt
imul
cmp
xchg
lods
or
xor
cmp
dec
xor
pop
dec
sub
(bad)
push
out
shr
sub
sub
add
jne
data16
jne
repz
std
push
sbb
cmp
sub
xor
cs
aaa
sti
adc
push
jno
mov
add
adc
push
test
aad
mov
dec
aas
adc
es
cmp
xor
pop
xchg
push
adc
inc
scas
mov
adc
popf
or
(bad)
mov
out
mov
cmp
jl
(bad)
fnsave
shl
sub
das
stos
inc
scas
mov
rol
xor
xchg
mov
dec
enter
push
cmp
nop
jbe
pop
pop
cmp
addr16
cdq
pop
(bad)
retf
inc
shr
cld
test
xor
inc
out
retf
int3
cmps
in
pop
dec
daa
lods
dec
and
inc
(bad)
cli
lea
jae
aaa
cmp
mov
xor
out
call
retf
fsubr
aam
icebp
(bad)
mov
adc
xchg
in
mov
inc
push
inc
pop
cmp
jmp
cmp
mov
rcr
loop
cmp
retf
inc
push
sar
or
inc
add
test
add
add
(bad)
shrd
clc
fiadd
inc
hlt
into
scas
mov
(bad)
jb
out
xor
mov
std
leave
pop
xchg
cmps
dec
add
bound
mov
jo
dec
xchg
std
loope
(bad)
je
mov
and
cmc
fiadd
mov
jno
dec
loopne
jge
scas
les
leave
and
lods
sbb
and
sub
sti
int
jp
cmp
push
test
mov
xchg
outs
cmps
mov
fadd
lds
xor
adc
pop
(bad)
rol
dec
leave
push
dec
test
(bad)
xor
sahf
movs
jp
xchg
mov
dec
(bad)
xor
mov
xchg
in
test
lock
push
mov
lods
cmps
inc
ret
repnz
cld
push
sub
mov
push
jo
cmps
add
pop
and
pop
inc
inc
inc
int
mov
jbe
sub
lahf
cs
outs
lahf
test
lahf
daa
pop
inc
cmp
add
mov
(bad)
lahf
clc
call
push
jo
fidivr
adc
xor
ins
idiv
jle
ret
mov
mov
jle
add
sub
int
inc
dec
mov
jmp
lods
sbb
pusha
ins
mov
sub
jae
cmp
jae
in
rol
inc
int
das
fwait
xlat
fdivr
add
sbb
sbb
or
xor
(bad)
mov
xchg
enter
aad
inc
or
or
clc
mov
pop
enter
std
sbb
mov
lea
mov
jmp
ret
daa
(bad)
call
sbb
jl
icebp
jne
xlat
das
mov
inc
ss
cld
mov
test
xchg
mov
aaa
pop
movs
push
mov
xchg
and
sbb
inc
mov
mov
loope
mov
jo
in
mul
sti
jle
inc
sbb
jmp
bound
stc
mov
cs
pop
and
das
enter
adc
xor
pop
mov
cvtps2pi
lods
je
cwde
into
and
ss
sub
mov
mov
cmp
gs
daa
call
cmp
adc
or
(bad)
es
cmps
(bad)
(bad)
les
or
add
je
lods
aaa
icebp
xchg
pop
pop
or
cmps
xor
stos
repz
pop
sub
into
hlt
mov
push
xchg
outs
(bad)
cmps
sub
cmp
sbb
cmp
xchg
mov
jl
loope
ror
enter
call
xchg
inc
int
mov
stos
cmp
sub
pop
ficom
mov
xor
in
in
adc
lds
fnstsw
sub
and
inc
pop
jns
lahf
ffree
and
scas
loop
enter
adc
xlat
mov
ds
(bad)
(bad)
out
pop
xchg
(bad)
(bad)
ss
ds
push
nop
push
jp
test
mov
sbb
clc
dec
sub
icebp
mov
or
mov
cmp
and
jecxz
fistp
sub
adc
aam
xchg
loop
cwde
xlat
ds
fisub
mov
mov
in
adc
or
(bad)
mov
cwde
cwde
pop
pusha
add
in
lods
loop
pop
xchg
lods
xchg
cmp
push
mov
adc
add
pop
cmp
sub
cmps
sub
movs
jbe
scas
popa
dec
push
enter
mov
sti
pop
repz
cs
adc
and
push
inc
cmp
push
ficom
push
sbb
push
and
or
fmul
push
and
xchg
push
mov
push
shl
pop
test
xchg
add
add
push
xor
fiadd
mov
dec
jmp
pop
jnp
out
(bad)
sub
sti
sub
nop
dec
es
ins
dec
pop
sar
repz
rol
mov
xor
dec
or
jmp
jmp
rol
add
jmp
sub
inc
(bad)
outs
(bad)
jecxz
pop
jp
inc
shr
adc
fistp
inc
std
fdiv
mov
cmp
icebp
retf
push
in
fst
mov
pop
(bad)
sti
cs
jle
fcom
imul
fdivr
mov
and
fisub
hlt
pusha
mov
jno
(bad)
xchg
adc
push
and
push
push
sub
and
add
test
div
sti
test
outs
xchg
inc
push
call
push
jae
std
rol
pop
loope
xor
mov
pop
mov
xor
mov
xor
or
push
dec
mov
retf
xor
push
jg
sub
push
xor
inc
and
adc
sbb
in
mov
(bad)
(bad)
and
lds
fadd
out
es
je
stos
mov
sbb
xchg
adc
imul
test
aas
iret
jne
xlat
xor
add
loopne
jne
or
in
adc
push
cmc
jecxz
pop
jge
and
sbb
jp
push
push
sub
xchg
jne
addr16
test
js
lods
jbe
cmp
stc
adc
scas
mov
push
(bad)
adc
and
ss
fld
bound
leave
push
jecxz
adc
add
sub
mov
dec
clc
lahf
inc
mov
call
(bad)
jl
push
push
cs
add
sub
dec
movs
(bad)
push
cmp
cmc
cs
lods
lea
popf
lods
mov
std
cmp
inc
outs
inc
pop
pop
stos
clc
mov
in
ror
lods
in
push
xchg
mov
sar
push
leave
inc
mov
jb
adc
push
inc
jle
loopne
mov
fld
scas
sbb
sub
pop
and
or
pop
icebp
and
jb
inc
or
lea
arpl
dec
mov
shl
adc
mov
test
pushf
in
repz
ss
pop
jbe
fdiv
cdq
ja
shl
ins
jl
fs
ret
mov
popa
pop
push
fild
add
sub
inc
in
lea
ret
in
call
fs
je
mov
cdq
out
mov
xchg
sti
fisttp
in
inc
ins
mov
xchg
daa
test
fs
jp
popf
pop
sub
(bad)
mov
leave
pop
fdiv
add
fwait
dec
pop
jo
aas
mov
cli
jp
out
xchg
lds
pop
imul
jl
icebp
into
cs
xchg
sbb
test
add
and
int
in
test
data16
xlat
push
addr16
pusha
xchg
add
fadd
mov
push
push
call
test
lods
pop
int3
idiv
cmp
test
hlt
sub
add
daa
out
retf
dec
repnz
adc
aas
jb
mov
cli
dec
neg
iret
push
imul
bound
aaa
or
jle
push
cmp
test
sub
out
lahf
pop
adc
lds
cli
add
(bad)
mov
daa
out
adc
and
(bad)
pusha
ins
ror
hlt
ret
mov
dec
dec
jge
add
xor
ins
jge
add
test
enter
test
push
in
out
cs
mov
jo
dec
mov
push
(bad)
mov
xchg
push
daa
lods
mov
jmp
xchg
retf
xchg
inc
xor
xchg
push
push
xchg
sub
int
sub
or
adc
mov
out
shl
push
cmp
lahf
xor
add
aam
dec
inc
fstp
cdq
mov
pop
call
xchg
arpl
outs
add
lock
and
ja
mov
adc
inc
cdq
push
ins
jl
mov
add
jle
aam
shl
cmps
sub
push
movs
loopne
cmp
dec
shl
sbb
je
mov
sbb
jp
fisttp
rcl
imul
lods
sub
repnz
pop
xor
pop
shl
jecxz
rol
repnz
sub
sub
ins
and
in
adc
mov
imul
out
sbb
sub
jno
aad
popa
sub
popf
mov
add
mov
push
ins
pop
mov
mov
mov
ins
fisttp
sbb
cwde
dec
sub
daa
repnz
fild
scas
aaa
mov
imul
pop
push
dec
jg
pop
sub
mov
jge
(bad)
repz
mov
sahf
(bad)
outs
lods
in
scas
cmp
lea
lods
les
out
jmp
push
inc
call
push
sub
movs
data16
shl
popf
xor
cld
pop
fild
icebp
sub
repnz
add
mov
(bad)
adc
out
jb
stc
pop
mov
adc
sub
inc
icebp
dec
inc
ja
mov
and
jge
js
mov
jb
scas
xchg
cmps
in
mov
and
add
push
popf
xor
das
push
push
mov
adc
pop
imul
jmp
mov
jge
in
lock
test
sbb
popa
cdq
cdq
mov
mov
iret
retf
sbb
movs
sbb
sub
push
xchg
cmp
jae
push
repnz
js
jmp
sub
or
imul
rcl
and
add
mov
cmp
shl
jae
enter
es
sbb
and
adc
scas
std
sbb
xchg
out
ss
in
repz
cmp
stc
jnp
inc
sbb
lods
pop
inc
dec
shr
or
jg
mov
adc
xchg
(bad)
xchg
xchg
or
fcom
popa
test
int3
adc
loopne
call
sbb
lods
pop
push
mov
mov
cmp
das
ins
jmp
xchg
jb
stc
lahf
xchg
gs
xchg
pop
mov
or
data16
pop
push
mov
shl
imul
rol
imul
lahf
xor
sub
test
cmp
pop
int3
fucomp
dec
pop
xchg
jecxz
fisub
lahf
js
add
push
sti
outs
sub
mov
ins
inc
xchg
repz
cmps
mov
rcl
daa
adc
push
(bad)
dec
jmp
sahf
das
(bad)
std
dec
retf
(bad)
or
imul
cmpxchg
sbb
xor
adc
pop
es
outs
mov
push
or
bound
adc
repnz
(bad)
aas
fxch
jge
sbb
cmc
mov
lock
or
pop
repnz
xchg
enter
mov
scas
test
cli
int
stc
daa
fstp
int
movs
out
add
xchg
push
(bad)
sbb
pushf
outs
hlt
sub
mov
adc
xchg
mov
jg
nop
add
fadd
scas
cld
pop
nop
sbb
ja
les
loopne
clc
test
ins
jbe
lea
stos
fild
push
das
sbb
sbb
xchg
fs
or
in
daa
push
scas
inc
jmp
inc
adc
(bad)
aas
es
add
sub
int3
and
pop
inc
dec
into
inc
into
sub
pop
jb
nop
nop
xor
cmp
sahf
sbb
bound
xchg
push
sub
fcmovnu
mov
and
lahf
xchg
add
inc
push
fwait
mov
dec
sub
mov
pop
bound
inc
pusha
push
sti
push
sub
jne
test
sar
xchg
stos
lods
ror
xchg
mov
movs
cwde
fisttp
aam
sti
inc
mov
jo
adc
or
xor
and
cmc
pop
into
ja
jmp
add
mov
pop
sar
jb
jmp
xchg
xchg
aas
add
adc
fiadd
aas
and
mov
xchg
sub
cmp
ss
mov
imul
mov
adc
int3
loope
push
add
fs
mov
xor
mov
sbb
mov
sbb
pushf
lock
and
maxps
in
mov
pop
mov
movs
dec
dec
fcmovbe
dec
inc
in
je
adc
scas
clc
xor
lds
lea
adc
out
(bad)
mov
loopne
pop
(bad)
aad
mov
int3
pop
push
icebp
not
mul
mov
fcomp
add
add
ds
and
push
xor
mov
add
xchg
sar
imul
push
enter
aam
mov
enter
cmps
arpl
xlat
dec
mov
xchg
stos
movs
jg
ins
pcmpgtw
xchg
shl
jae
xlat
mov
xchg
mov
in
adc
mov
mov
js
jge
jle
jne
es
pop
cmp
dec
(bad)
in
call
pop
mov
sub
cmc
xor
jns
ror
dec
fmul
ret
rol
clc
test
sbb
cmc
or
and
lock
ret
je
js
stc
mov
je
test
or
jmp
xlat
jmp
push
cmp
ret
jg
adc
mov
test
aam
sahf
hlt
mov
mov
add
or
loop
inc
mov
jbe
push
lock
sbb
push
xor
repz
pop
jns
icebp
mov
jl
push
dec
jne
icebp
mov
gs
adc
xchg
daa
ja
adc
or
hlt
aam
clc
es
mov
rcl
add
mov
or
add
ins
std
inc
lods
inc
jbe
add
or
xchg
add
pop
sub
rol
cmps
int
mov
push
mov
and
jecxz
test
out
sbb
inc
ds
mov
sbb
sub
jmp
sbb
adc
scas
loope
cmp
mov
xchg
dec
mov
xor
jg
mov
inc
loope
cmc
jg
repz
ja
nop
fwait
and
cmps
mov
jmp
push
pop
add
mov
in
repz
or
push
mov
adc
or
mov
sub
ss
bound
into
jl
adc
mov
mov
lahf
sbb
out
in
pop
mov
inc
pop
mov
and
cmp
cli
dec
jmp
cmp
or
adc
sub
add
mov
adc
sub
push
lea
adc
mov
mov
mov
jno
movs
(bad)
cmp
shl
cmp
popf
scas
mov
cmp
jmp
and
in
adc
aad
adc
ds
jae
jge
jg
ins
inc
(bad)
aad
mov
test
jae
sub
pusha
xor
clc
and
mov
mov
xor
lods
push
or
movs
dec
pop
xor
adc
jo
cmp
int
jmp
cmp
fdivr
pop
nop
popa
outs
imul
ss
sbb
fistp
fst
sbb
mov
and
test
cmps
int3
stos
icebp
sar
jne
jo
jmp
test
cs
sti
mov
mov
add
pop
cmp
mov
(bad)
test
out
ficom
adc
add
adc
loop
jns
rcr
scas
dec
cli
xchg
dec
pop
inc
out
dec
or
(bad)
pop
adc
jp
daa
popa
pop
xchg
mov
push
jmp
cmp
add
mov
mul
adc
lock
jb
pop
call
hlt
ret
js
sub
arpl
add
cmp
ffree
push
jecxz
mov
ror
dec
cmc
pusha
fisttp
js
ret
add
mov
jle
jo
mov
cli
dec
arpl
and
xor
stc
dec
jmp
test
mov
xchg
cli
adc
jmp
cmp
xor
add
mov
stc
sbb
pop
fcomi
stos
stc
sbb
push
in
pop
scas
push
push
das
sbb
dec
xchg
adc
(bad)
fcmovbe
jge
fucomi
movs
clc
add
pop
out
fiadd
mov
xchg
cmp
mov
not
int3
(bad)
cli
cmp
mov
cmps
out
and
or
dec
sbb
xchg
xchg
cmp
adc
or
sti
(bad)
(bad)
xor
aam
sub
push
call
imul
xor
out
pushf
pop
or
sahf
or
cmp
jns
in
mov
push
cmp
push
cld
dec
xor
mov
js
mov
push
cdq
outs
and
mov
pop
push
and
pushf
lock
fstp
or
push
pop
dec
push
cmp
sbb
dec
ror
jg
cmp
ss
cli
aaa
outs
in
push
and
jmp
sbb
sub
and
cwde
pop
dec
fdivrp
test
stc
lahf
push
sub
or
and
ins
and
lock
pop
fisub
les
stc
cli
cwde
sahf
dec
ret
call
out
outs
shl
and
in
scas
sbb
mov
mov
(bad)
jmp
imul
sar
cmp
jmp
push
inc
enter
ret
call
mov
jge
fbstp
loopne
loop
xor
paddsb
cs
mov
not
jnp
push
test
fist
fld
outs
sub
in
rcr
xor
(bad)
jecxz
jno
(bad)
dec
xchg
test
ror
shl
(bad)
mov
leave
xchg
retf
dec
mov
imul
aam
push
pop
icebp
into
stos
mov
test
mov
into
cmps
fist
inc
jbe
cmps
sub
and
lahf
mov
js
add
fisttp
inc
cs
arpl
xor
popa
pop
xchg
inc
pop
add
in
push
ins
(bad)
pop
loopne
adc
(bad)
mov
es
in
xlat
mov
push
aad
loopne
mov
mov
movs
mov
inc
fdiv
je
movs
adc
mov
dec
cld
into
cmc
out
jo
fcmovnu
push
idiv
(bad)
clc
sub
mov
mov
mov
ret
and
dec
(bad)
jmp
ficom
daa
icebp
push
xchg
(bad)
retf
add
lods
imul
pop
pop
adc
aam
ss
sub
mov
je
fwait
std
pop
pushf
sbb
(bad)
loope
sub
push
or
mov
sub
pop
mov
nop
iret
addr16
aad
inc
jnp
and
ja
push
jmp
adc
cld
and
fwait
cmp
lods
bound
push
pusha
pushf
jmp
int3
mov
fisttp
lahf
addr16
ret
outs
(bad)
lods
xchg
push
jp
mov
and
stos
cld
xchg
mov
adc
in
sub
ss
jmp
mov
inc
pop
fwait
aas
mov
cmps
jp
jbe
adc
ret
sub
outs
push
cmp
xchg
mov
loope
xor
jmp
xor
mov
sub
mov
inc
dec
jbe
push
add
xor
retf
repnz
iret
mov
ret
lahf
enter
(bad)
cmp
xchg
rcl
pop
imul
in
jae
push
ret
adc
clc
inc
lock
addr16
aaa
pop
mov
popa
icebp
jp
call
fdivr
cdq
retf
(bad)
adc
and
adc
cs
retf
(bad)
gs
pop
mov
sar
shr
pop
mov
mov
xor
pushf
dec
iret
mov
jecxz
imul
js
sub
jbe
fisttp
pop
fs
inc
mov
in
in
daa
(bad)
sbb
enter
retf
cdq
push
imul
fsubr
push
sub
test
xor
push
arpl
not
sub
jmp
jnp
mov
mov
retf
nop
xchg
push
sbb
jo
cmp
hlt
jecxz
cmc
dec
scas
xchg
sbb
cmp
sub
sbb
or
idiv
push
xchg
loope
xor
cmc
clc
test
(bad)
int
jo
in
js
push
xor
adc
sbb
or
fdivrp
in
inc
das
(bad)
mov
stos
add
add
push
mov
pop
pop
mov
repz
call
push
out
repz
inc
cmova
push
push
and
ror
inc
daa
mov
out
or
pop
mov
(bad)
adc
mov
push
lea
push
outs
ins
lahf
ins
js
push
cmps
shr
out
loope
jb
sbb
or
mov
mov
push
and
push
fucom
pusha
dec
add
push
pop
xchg
gs
lea
mov
sti
mul
add
test
cwde
out
add
cwde
int3
test
cs
xchg
xchg
in
test
pop
dec
jb
lea
push
ja
xor
pop
jmp
jg
stos
pop
inc
push
imul
int3
dec
pop
dec
or
adc
jp
ficom
xor
xor
retf
mov
mov
xor
test
sub
mov
pop
test
shl
or
inc
sbb
jne
mov
inc
xchg
aam
add
fcomp
in
sti
adc
dec
sub
popa
test
mov
jo
and
xchg
retf
sub
fidiv
jl
push
enter
cmps
cmps
push
std
lds
pushf
add
cmp
cwde
lea
push
or
or
sub
scas
xor
xor
jb
out
shl
dec
pop
push
inc
ja
push
sub
xchg
and
push
fs
jnp
into
mov
nop
in
mov
cmp
ss
(bad)
lock
pop
not
xchg
jmp
pop
cmp
mov
pop
xchg
inc
jecxz
daa
popa
mov
pop
add
out
ret
push
loope
pop
int3
call
add
in
cmp
jbe
out
xchg
and
cwde
mov
sahf
mov
pushf
and
inc
out
mov
test
(bad)
jl
cmc
ins
ins
xor
inc
adc
pop
pushf
loop
std
xor
inc
sbb
cmp
inc
pop
data16
scas
int3
scas
jge
ror
pop
leave
loop
push
sbb
call
jnp
xchg
cli
xchg
mov
stos
jmp
cmps
int
cmp
jbe
repnz
mov
cmc
push
into
sub
je
shl
hlt
sbb
dec
push
jmp
add
movs
pushf
jae
cdq
adc
adc
outs
add
popf
sahf
and
adc
sbb
cmp
push
test
(bad)
ror
pop
nop
mov
adc
lea
clc
pop
add
mov
pop
dec
ins
mov
(bad)
dec
adc
xchg
cwde
scas
or
je
cmp
mov
sub
fnstenv
pop
xor
js
out
xchg
cs
(bad)
push
adc
fs
xor
pop
(bad)
inc
div
sahf
push
lods
jns
push
(bad)
jnp
or
imul
jmp
jno
jp
push
out
mov
xlat
add
mov
in
mov
pop
cmp
cmp
int3
add
sti
(bad)
or
bound
das
call
inc
pop
xchg
int
leave
aad
stos
ins
xlat
or
shl
jg
inc
xor
xchg
rcr
xchg
jge
jae
(bad)
push
jmp
mov
lods
ret
leave
mov
test
in
cs
test
mov
xlat
jbe
in
fwait
int3
cwde
push
in
test
push
sub
fimul
add
mov
inc
mov
pop
dec
inc
aad
mov
das
push
mov
addr16
std
sub
push
dec
popa
test
lea
sub
pop
xchg
jne
xchg
mov
(bad)
(bad)
cmps
sbb
mov
dec
(bad)
sbb
cmc
mov
push
sbb
das
xchg
jb
cmc
mov
mov
dec
adc
inc
xchg
sbb
push
enter
in
or
pop
cdq
xchg
xchg
dec
jl
jo
out
pop
bound
push
adc
cmc
inc
sbb
clc
lea
aaa
cmp
add
jg
jge
stos
lea
sub
fnsave
leave
dec
aas
xor
dec
cmp
jmp
sub
cmps
fldz
lds
sbb
ds
ret
mov
cwde
push
in
adc
daa
fadd
sub
mov
sti
jp
outs
lods
leave
inc
xchg
fistp
gs
loopne
out
repnz
imul
rol
das
mov
cmc
sbb
aam
mov
inc
inc
pop
shl
int
repz
adc
lods
stos
push
xchg
outs
jno
(bad)
fldcw
pop
outs
jl
js
clc
jne
push
push
test
cmc
pop
xor
lea
dec
lock
mov
cwde
pop
iret
dec
push
lods
sbb
movs
enter
mov
push
mov
and
sub
rcr
pop
push
outs
popa
nop
outs
dec
cmp
xchg
jl
hlt
add
idiv
adc
jp
ins
push
int3
(bad)
jns
cld
(bad)
retf
and
mov
or
jge
popf
mov
push
cld
sub
and
fild
ins
or
jns
(bad)
retf
call
and
mov
dec
pop
dec
add
push
lea
test
push
dec
dec
(bad)
push
xor
inc
sub
ret
mov
or
ja
jl
loopne
mov
push
leave
push
mov
daa
ret
mov
daa
popa
and
add
fs
mov
cs
out
loop
sbb
push
and
leave
pop
test
outs
mov
adc
nop
inc
pop
or
cmps
or
sahf
ss
pop
push
shl
sbb
in
es
sub
imul
xor
rol
in
arpl
push
cmp
jl
mov
je
(bad)
aaa
in
call
clc
push
aad
hlt
adc
shl
arpl
push
mov
jmp
sub
mov
faddp
push
out
push
add
in
daa
adc
sbb
(bad)
out
je
add
push
or
sbb
dec
loope
mov
xchg
jecxz
mov
cs
add
fild
xor
cmp
jp
xchg
add
test
add
call
push
mov
repnz
mov
jp
ret
(bad)
jbe
add
or
jne
es
fisub
jns
bound
js
(bad)
push
fdivr
and
jnp
sti
jecxz
xlat
ds
lods
inc
sub
out
pop
add
data16
jno
or
leave
shl
scas
not
dec
call
test
lods
fild
pop
dec
lods
sub
pop
mov
mov
popa
mov
int3
jo
daa
test
mov
inc
push
retf
adc
pop
or
push
sub
dec
pusha
fst
popa
dec
loope
out
pop
loope
pop
jnp
test
jns
popa
nop
fbld
mov
push
and
pop
js
jbe
adc
shl
dec
cmps
dec
neg
imul
jae
adc
xchg
vpmacssdd
aam
test
mov
xor
je
jnp
adc
stos
cmp
shr
ins
adc
cmp
lds
and
(bad)
xchg
cld
nop
mov
sub
icebp
push
and
jecxz
loope
push
cwde
ja
scas
dec
jmp
push
clc
test
out
pop
jo
dec
test
shr
loope
std
pop
mov
fdivrp
push
pop
les
iret
add
sbb
out
and
(bad)
jo
sbb
cmp
les
ds
xchg
out
lock
out
adc
or
mov
push
inc
int3
push
or
or
or
dec
bound
test
mov
add
mov
std
mov
and
sbb
fcmove
out
outs
mov
ds
int3
add
mov
sbb
cmp
data16
xchg
pop
popa
sbb
xchg
aas
int3
push
mov
cmp
jmp
out
xor
xchg
test
mov
xor
push
mov
and
enter
cmp
sbb
mov
mov
popf
mov
adc
(bad)
stos
addr16
xchg
retf
frstor
sbb
cmp
and
cmp
imul
mov
outs
jle
inc
and
adc
xchg
imul
aas
out
cmp
sub
xchg
adc
cwde
stc
jo
int3
repnz
inc
pop
pushf
js
lods
(bad)
inc
cdq
leave
xchg
pop
or
inc
dec
push
aas
inc
and
mov
xor
call
or
sub
mov
int
(bad)
cs
mov
xchg
push
add
xor
pop
xchg
mov
or
mov
jp
test
fwait
outs
dec
ins
or
test
jno
mov
inc
cld
repz
jae
cmps
dec
xor
int
push
(bad)
mov
sbb
jmp
xor
gs
cmps
mov
or
es
adc
ins
add
(bad)
cld
add
add
inc
jb
js
fiadd
and
test
ror
xchg
test
aad
add
lahf
dec
int3
in
ins
icebp
inc
push
in
lds
mov
scas
and
xlat
push
out
sub
mov
mov
popf
dec
cmp
sbb
stos
xor
push
sub
imul
pop
fist
loope
lock
ss
and
mov
lahf
push
arpl
addr16
sub
test
jp
or
pushf
cli
(bad)
sti
pop
into
dec
aas
cli
loope
fs
mov
fcom
mov
mov
add
xchg
shr
jno
jae
pop
push
dec
cmp
cmps
fwait
xor
push
aas
pop
or
jle
ficom
push
lahf
mov
enter
xchg
push
outs
movs
jmp
xchg
add
call
rcr
jns
sub
mul
movs
pop
ret
cdq
(bad)
je
xor
(bad)
mov
test
sahf
cmps
cmps
out
fist
adc
loop
dec
clc
(bad)
jbe
dec
jl
cmc
movs
in
fs
and
or
pop
inc
shr
sub
mov
aad
xchg
out
aad
loopne
mov
(bad)
mov
(bad)
and
test
push
fcmove
pushf
pop
int
mov
push
enter
aam
inc
add
test
mov
lods
inc
or
inc
in
test
jp
push
xchg
cmp
test
sbb
mov
mov
pop
mov
xor
test
jle
push
cmp
jne
or
aad
loop
into
ds
adc
out
adc
jp
pop
add
push
pop
(bad)
jle
and
push
inc
(bad)
mov
xor
fistp
js
imul
adc
popa
mov
addr16
ror
dec
cmp
jmp
outs
test
jge
shl
inc
pop
xor
jbe
push
(bad)
test
mov
(bad)
xchg
xor
in
pop
cmp
aad
inc
stc
jmp
sbb
scas
jg
pop
int
pushf
adc
mov
scas
mov
mov
cmps
repz
cs
or
jns
sbb
inc
out
inc
fimul
jl
in
fdiv
cdq
xor
cmp
cs
xchg
mov
mov
cli
int3
xor
pop
inc
mov
test
adc
mov
jecxz
mov
ds
leave
push
cmp
pop
add
mov
cmc
into
aad
add
ret
push
loop
jg
mov
lahf
repz
imul
and
xor
mov
(bad)
adc
mov
add
mov
push
push
xchg
mov
mov
cmps
fld
mov
sub
pop
dec
adc
retf
lds
xor
dec
xor
mov
or
imul
pop
mov
xchg
push
jg
push
inc
jmp
and
sub
in
cmp
adc
lods
mov
fsub
cmps
out
enter
inc
jmp
jae
ret
sub
repz
xor
xchg
aas
clc
arpl
(bad)
xor
xchg
sub
fadd
jnp
mov
xchg
jl
in
imul
std
ja
enter
mov
add
sbb
and
(bad)
add
mov
ret
push
test
jl
mov
adc
cwde
fld
repz
scas
popa
aam
cmp
test
mov
xor
ss
fimul
mov
js
fild
and
(bad)
mov
std
mov
adc
addr16
or
sbb
or
inc
jb
or
push
mov
in
push
cld
arpl
mov
imul
ss
cdq
fs
or
sub
(bad)
dec
or
ficomp
jg
je
push
mov
ret
test
cmp
add
sbb
shl
add
stc
inc
js
and
cdq
or
daa
pop
ret
cmp
loope
xlat
mov
push
or
and
into
(bad)
neg
iret
xor
mov
jne
push
iret
data16
xlat
(bad)
mov
adc
mov
and
out
push
stos
xchg
pop
push
add
xor
ret
adc
add
add
std
fsub
xor
daa
push
sbb
ss
push
ss
test
fidiv
outs
or
xor
idiv
pop
push
and
in
sbb
fiadd
inc
mov
mov
or
push
xchg
aad
retf
pusha
push
fisub
and
lock
stc
dec
jecxz
pop
push
pop
retf
sub
mov
cdq
fs
lahf
jle
aas
cmp
add
mov
xchg
fisubr
fcomp
mov
repz
out
mov
sub
push
xor
arpl
mov
push
retf
and
imul
adc
add
fdiv
push
jl
sub
cmp
dec
jge
iret
cwde
xchg
push
cmps
cld
or
cmp
inc
mov
adc
pop
mov
ror
in
dec
gs
push
mov
cmp
ja
sbb
dec
mov
dec
pop
outs
cli
ret
or
adc
sub
push
repnz
lds
jecxz
test
adc
adc
or
mov
scas
jle
aad
xor
xchg
jno
cmp
push
les
mov
in
loope
sub
inc
out
push
sbb
stc
call
pop
call
inc
test
movs
sar
jbe
imul
cmp
test
or
mul
mov
sub
in
mov
xchg
or
aam
pop
outs
inc
lods
js
mov
cmp
stc
dec
icebp
jne
loope
pop
daa
jmp
dec
pop
or
loope
scas
push
dec
jmp
int
mov
and
xor
xchg
mov
stos
xor
sbb
cmc
icebp
arpl
mov
xor
push
aaa
push
cwde
push
and
int
pusha
xchg
in
shl
adc
jbe
jb
xor
jmp
fsub
in
adc
ss
xlat
xlat
imul
repnz
xchg
fdiv
cmp
in
dec
(bad)
imul
scas
pop
xchg
loop
ins
xor
inc
(bad)
mov
or
add
cmp
mov
fisttp
stos
sar
arpl
std
mov
sbb
push
mov
xchg
sbb
inc
enter
add
jp
std
xchg
gs
push
xor
mov
movs
mov
mov
push
pusha
mov
mov
cmp
daa
jbe
sub
mov
xor
aas
ror
retf
pushf
ja
mov
mov
cli
inc
cmp
ret
sti
xor
(bad)
out
mov
aas
pop
imul
jae
push
jo
sbb
stc
sbb
mov
sub
pop
mov
aas
mov
in
fcmovu
cmp
vmovntps
addr16
add
ss
or
sub
mov
add
out
inc
dec
mov
outs
out
push
xor
(bad)
ja
xor
pop
dec
retf
or
jo
int3
iret
lahf
mov
imul
idiv
push
das
scas
pop
jecxz
outs
or
mov
xchg
jp
cmp
pop
pop
iret
data16
imul
inc
add
scas
je
mov
mov
add
cmps
movs
pop
mov
stc
and
(bad)
cmc
mov
in
fcom
mov
inc
mov
jnp
xchg
mov
js
add
xchg
dec
jbe
in
xchg
lods
scas
or
into
xlat
mov
fsubr
sub
sbb
pop
push
add
push
scas
push
mov
movs
jno
pop
mov
sbb
daa
sub
or
sbb
mov
and
pop
mov
loope
scas
in
sbb
adc
sbb
mov
pop
fcomi
(bad)
rcl
xor
int
add
adc
and
push
daa
je
fbstp
outs
fimul
or
cmp
nop
cld
mov
gs
lahf
inc
mov
pop
jns
and
stc
aam
add
aad
sub
jecxz
adc
sub
sbb
xor
mov
adc
push
sub
push
icebp
sub
hlt
add
cmp
clc
cmps
xor
test
mov
and
cmc
add
cmps
loop
and
inc
movs
adc
adc
and
mov
sar
push
and
cwde
mov
xchg
rol
inc
(bad)
xlat
dec
cld
adc
push
je
icebp
mov
mov
push
retf
mov
fcomp
bound
push
and
inc
xchg
push
cmp
movs
retf
scas
push
mov
adc
aam
push
out
gs
add
xor
(bad)
push
jmp
push
and
cwde
adc
hlt
xchg
(bad)
lahf
jns
outs
mov
sbb
xor
fisub
push
lods
test
add
inc
xor
sar
out
jle
or
loope
movs
push
call
push
into
scas
arpl
out
int
stos
push
sub
mov
jae
in
(bad)
scas
dec
daa
fsubr
lea
jge
test
mov
xchg
adc
or
inc
cs
or
jnp
xor
retf
mov
or
or
mov
(bad)
and
cmp
jnp
iret
fnstenv
push
enter
arpl
add
or
mov
xchg
movs
xchg
aaa
xchg
daa
dec
inc
push
push
dec
mov
iret
scas
xchg
mov
xchg
and
mov
push
push
jg
mov
data16
or
or
aam
enter
xor
popf
jle
fldcw
cmp
pop
cmp
mov
scas
gs
sub
test
aam
fimul
push
in
xchg
or
cli
ss
mov
jl
lds
xor
movs
jo
test
stos
mov
pusha
cmc
fucomp
call
fdivr
retf
enter
test
nop
(bad)
adc
les
hlt
cmp
scas
gs
call
xchg
dec
add
clc
rcr
fldcw
popf
mov
jne
fadd
retf
pop
mov
cmp
or
jns
out
fisubr
add
inc
xchg
in
pusha
sbb
popf
push
cmp
or
or
and
ja
jno
lds
das
aam
adc
xor
call
arpl
and
mov
ficomp
inc
test
in
sti
daa
add
add
mov
pop
scas
test
js
add
enter
icebp
jge
mov
and
sbb
mov
(bad)
mov
pop
ror
shr
sar
js
vfmsub132sd
ret
pop
push
icebp
je
test
inc
xor
mov
retf
fild
pop
mov
outs
pop
push
lea
int
mov
imul
call
jae
aad
shl
adc
jge
cmp
jmp
or
sub
shr
inc
adc
and
jge
lods
cs
cs
mov
mov
lods
mov
pusha
mov
in
lds
pop
cmps
jne
in
jl
(bad)
mov
out
inc
into
push
mov
pushf
lea
mov
push
mov
movs
cmps
push
paddq
push
(bad)
jmp
xor
nop
xchg
xchg
das
lock
fdiv
ret
clc
jns
ins
(bad)
stos
addr16
dec
push
mov
fild
adc
adc
sbb
fisubr
fistp
dec
sbb
fs
mov
xor
imul
xchg
sub
aaa
jb
(bad)
pusha
fstp
clc
neg
nop
jle
cmp
dec
sar
add
dec
shr
sub
nop
add
mov
push
mov
sar
mov
shl
pop
mov
push
jo
loope
xchg
ins
push
mov
fstp
aas
jecxz
scas
aaa
shl
icebp
push
add
fcomp
aas
jbe
add
(bad)
call
aam
jmp
fst
inc
cmp
pop
mov
sbb
popa
adc
gs
mov
add
and
fdivr
call
push
sbb
inc
sub
push
sub
push
sub
dec
fs
test
(bad)
push
aaa
mov
inc
aad
dec
ret
lahf
xchg
ins
nop
popa
xchg
or
mov
or
pusha
lods
adc
sub
hlt
jno
pop
int
jae
inc
push
repz
bswap
xor
aas
mov
fdiv
stos
push
cmc
jmp
pop
gs
out
jnp
in
andps
mov
dec
xchg
iret
jo
test
dec
mov
fnsave
mov
(bad)
pmulhuw
mov
pusha
mov
call
adc
pop
add
add
lods
xchg
sbb
inc
sub
sbb
fist
xchg
int3
add
out
ss
mov
ds
cmps
add
retf
sbb
inc
cdq
mov
movs
frstor
jns
xchg
jmp
icebp
jae
icebp
sbb
int
dec
movs
push
mov
call
imul
icebp
inc
mov
mov
dec
imul
jne
fld
cwde
dec
iret
or
fcomi
pop
dec
adc
stos
ja
mov
cmp
jae
pushf
adc
pop
mov
push
sbb
push
cld
cmp
stc
mov
fnsave
test
stos
retf
sbb
mov
xor
xor
sub
adc
cmc
push
sbb
dec
jbe
ficomp
std
dec
pop
mov
push
sahf
lods
ins
push
int
ds
sub
mov
xor
mov
jg
sub
js
cmp
pop
xor
test
xchg
jb
cdq
lods
jmp
jmp
out
mov
cli
cmp
cdq
cmp
lock
idiv
rcr
int3
(bad)
or
sbb
sub
cmp
daa
cwde
lea
bound
cmps
mov
dec
cmp
inc
inc
jl
mov
in
xor
pop
js
mov
xchg
jbe
pusha
std
mov
cmp
fmul
add
adc
xor
out
arpl
stos
xchg
f2xm1
inc
add
and
std
jge
push
mov
jb
and
sub
sar
shl
mov
add
push
mov
cmp
inc
arpl
push
jge
xchg
xlat
xchg
std
mov
dec
inc
xchg
adc
push
sub
push
pop
inc
mov
sbb
loopne
(bad)
in
xchg
xchg
jae
or
shr
repnz
add
cmp
and
(bad)
imul
fwait
pop
mov
pop
shl
outs
scas
or
mov
sub
shl
jmp
pop
xchg
mov
cmps
es
pop
fldcw
xor
mov
inc
pushf
femms
loopne
and
or
mov
(bad)
dec
add
(bad)
cli
aam
xchg
pushf
push
sar
mov
popf
into
pop
jmp
dec
jp
and
fwait
xchg
mov
jo
int
cld
push
jmp
inc
scas
js
pop
movs
mov
or
xor
mov
xor
add
push
stos
shl
or
std
jns
data16
xchg
fbld
adc
sub
mov
jno
shl
int3
sub
mov
in
xchg
sub
pop
fsub
jg
pop
mov
aas
push
(bad)
nop
cmps
and
cmps
in
jp
and
xchg
and
rcr
mov
mov
adc
or
dec
pop
and
add
sub
xchg
mov
xor
jbe
pop
sar
mov
inc
jmp
jno
jmp
mov
pop
shl
enter
rcl
into
sub
jmp
(bad)
and
rcr
aad
xchg
pop
shr
mov
retf
pop
scas
loop
ror
lock
xor
bound
add
rol
pop
sub
js
sbb
leave
adc
mov
fld
add
pusha
mov
gs
repnz
shl
push
lahf
inc
fcomp
sbb
xor
loope
int3
leave
xor
jge
adc
cmps
mov
or
fisttp
int
xchg
jl
mov
sbb
or
popa
jnp
mov
and
adc
jmp
aas
pop
es
mov
std
push
mov
push
(bad)
jp
fwait
icebp
sub
xchg
lahf
test
pusha
xchg
enter
cdq
in
and
sbb
sbb
test
pop
lds
retf
dec
mov
or
dec
jae
call
js
leave
scas
mov
fcmovnbe
jmp
gs
pop
std
retf
aas
mov
add
arpl
outs
aas
xchg
aam
jle
sahf
fmul
xor
mov
mov
inc
push
and
out
mov
push
js
ins
ret
cmp
arpl
icebp
lds
jge
repz
and
sahf
push
mov
and
xor
xor
je
sbb
adc
cmp
sub
jmp
js
shl
icebp
jp
retf
add
sub
test
shr
out
xchg
inc
fcomp
into
add
adc
cmp
call
jb
push
xor
jge
int
sbb
and
xor
mov
pop
jae
imul
scas
loope
pop
and
imul
add
jne
xchg
imul
lds
xchg
mov
xor
test
cli
add
shl
ret
sahf
push
leave
pop
iret
dec
push
fdiv
mov
leave
in
lods
jl
bound
popa
retf
sub
(bad)
jmp
adc
push
lds
mov
jecxz
movs
call
mov
push
cmp
rcr
bound
ins
in
dec
pop
xchg
jl
out
inc
(bad)
cmc
mov
mov
stos
adc
out
outs
xchg
mov
jmp
les
retf
fwait
jno
xchg
ds
xor
push
push
lods
mov
fst
popf
dec
push
(bad)
cmp
jo
retf
mov
xchg
jl
pop
je
mov
inc
mov
arpl
call
retf
nop
(bad)
(bad)
inc
sub
push
retf
stos
mov
mov
test
or
scas
xchg
dec
leave
jp
out
pop
push
les
xchg
jg
xchg
into
xor
out
test
adc
mov
mov
cmp
sbb
fisttp
repnz
stos
sbb
ja
call
sub
mov
mov
adc
daa
sbb
pop
inc
rcl
pop
jae
cmp
mov
dec
cmc
pop
jne
xchg
sbb
ja
sub
retf
sbb
sub
sub
call
test
adc
leave
dec
mov
fcom
aaa
fdivr
repz
mov
jl
call
sub
xor
xchg
and
inc
mov
shr
inc
add
mov
inc
xchg
jecxz
or
mov
xor
dec
and
jge
mov
sub
test
inc
loopne
xlat
jbe
call
jb
cmp
(bad)
test
test
lea
and
icebp
inc
add
dec
in
gs
xchg
out
mov
xchg
and
and
(bad)
xchg
arpl
push
adc
adc
loop
enter
mov
fcomi
test
mov
cdq
or
cmps
mov
pop
xor
fstp
cwde
int3
xor
(bad)
pop
mov
and
push
aas
sub
inc
pop
sbb
inc
cmps
and
das
xor
xor
add
mov
rcl
pushf
cmp
dec
call
mov
outs
inc
sub
add
dec
pop
and
pop
jp
or
scas
adc
mov
jae
outs
aaa
xlat
adc
repnz
repz
and
push
gs
rcr
ja
aas
scas
push
mov
adc
iret
cmp
out
cdq
lds
xchg
(bad)
out
pop
and
(bad)
loopne
in
xor
fnstsw
test
or
jns
call
pop
jl
(bad)
jbe
lea
xchg
(bad)
stos
sbb
aas
cwde
and
adc
push
inc
mov
out
lds
mov
aad
add
pop
push
inc
or
dec
pop
repz
adc
pop
fild
in
aad
pushf
or
scas
inc
mov
adc
mov
arpl
iret
xor
int3
sub
stos
sahf
dec
jmp
leave
xchg
xor
test
dec
inc
les
mov
cmp
push
and
into
jae
sbb
mov
or
inc
dec
loopne
xor
loopne
push
mov
mov
mov
in
or
sub
mov
ror
pop
adc
pop
xchg
xchg
in
leave
faddp
adc
scas
popf
jmp
jecxz
(bad)
(bad)
das
xchg
adc
dec
outs
mov
adc
xor
scas
dec
leave
cmp
std
mov
sbb
and
sbb
mov
push
dec
mov
xchg
ror
dec
inc
or
movs
mov
and
xchg
or
retf
out
push
rcr
jae
adc
adc
cmps
adc
mov
ret
adc
or
xchg
into
lock
popa
push
call
push
loop
mov
movs
cmps
mov
adc
xchg
add
mov
push
aas
dec
mov
or
mov
leave
mov
adc
cmp
inc
fldpi
clc
(bad)
mov
enter
aad
mov
or
jmp
les
cmp
xor
je
jbe
into
test
pop
cmps
dec
sub
dec
test
es
cwde
inc
push
rcr
dec
push
sub
push
(bad)
icebp
jmp
fsubr
in
dec
xchg
pop
addr16
ss
sbb
push
out
hlt
mov
push
mov
sub
mov
mov
gs
dec
shl
adc
shl
cmps
enter
loop
mov
shl
cmp
call
ret
or
mov
mov
dec
bound
outs
pop
imul
cdq
popa
out
test
bound
xor
scas
pushf
dec
mov
adc
xchg
xlat
retf
add
(bad)
aas
lods
jbe
sub
jne
loop
ret
test
xchg
add
inc
arpl
sbb
(bad)
fild
pusha
xchg
mov
or
clc
test
cmp
js
push
test
push
push
add
xchg
xchg
adc
pop
push
cli
jl
in
jno
sub
popf
pop
jle
in
pop
pusha
adc
call
add
outs
movs
ins
or
xor
inc
stc
add
fdivr
por
jno
(bad)
repz
pop
in
adc
cmp
or
adc
clc
(bad)
cmps
hlt
inc
mov
xor
dec
mov
and
jnp
push
out
out
pop
clc
adc
call
cs
shl
rol
das
addr16
and
and
aad
pusha
clc
shr
fwait
jmp
addr16
inc
jle
out
inc
stc
rcr
cmps
mov
push
pop
gs
mov
or
pop
push
rcr
push
data16
stos
pop
ror
je
sahf
or
cmp
into
mov
adc
fxch
imul
stc
or
mov
and
sub
lock
shr
sbb
inc
test
call
push
and
mov
mov
xchg
dec
out
not
aad
push
jmp
js
cmp
dec
into
jl
push
push
fwait
add
fstp
pop
hlt
mov
dec
xchg
xchg
jmp
jb
jnp
test
in
test
mov
mov
fwait
in
and
or
call
idiv
or
push
and
clc
jo
xchg
mov
retf
xchg
mov
arpl
out
mov
clc
xor
int3
int3
stos
pop
cwde
shl
test
cmp
sub
aam
mov
mov
mov
xchg
add
fisub
jmp
or
fnsave
dec
xchg
mov
sbb
mov
fist
dec
jg
xchg
pop
in
daa
repz
ins
outs
sub
pop
fbstp
xlat
jo
mov
push
int
push
data16
push
mov
aaa
shr
mov
imul
(bad)
clc
mov
pusha
push
in
(bad)
mov
mov
pop
dec
pop
xchg
cdq
and
jmp
mov
inc
dec
fstp
sar
and
in
in
sbb
repz
cmp
(bad)
pop
hlt
fst
sbb
add
ret
popa
sub
mov
into
daa
std
sbb
fidivr
rol
movs
jle
mov
lds
xchg
fwait
pop
mov
mov
imul
lea
repnz
fcomp
dec
out
and
repnz
jno
in
inc
daa
cmps
jns
jo
lock
ds
mov
pop
(bad)
push
push
mov
pop
sbb
dec
push
xor
inc
sbb
loope
popa
mov
scas
cvtps2pi
icebp
fcomp
and
pop
cs
repnz
jmp
push
sbb
push
cmp
jae
pusha
fstp
in
sahf
in
daa
sub
xchg
push
push
scas
aas
cmp
enter
xchg
rcr
jecxz
cmp
ret
stos
jmp
xlat
arpl
dec
mov
lods
jp
ud0
jmp
arpl
hlt
rcr
loope
push
int
xor
lds
fcom
sub
push
mov
cmp
push
dec
pop
loope
pop
cli
jp
daa
xor
add
fdivr
push
xor
inc
and
pop
pop
ss
out
push
sub
jae
cmp
dec
push
mov
cmc
(bad)
cmp
mov
ins
out
and
sub
jecxz
repz
adc
sub
shl
outs
cdq
jbe
(bad)
jns
pop
rcr
dec
xchg
loope
shl
pop
add
add
outs
mov
stos
push
out
stos
sbb
pop
mov
jns
sub
movs
fsubrp
push
mov
cmp
mov
mov
stc
xchg
pop
loope
xchg
(bad)
movs
sbb
outs
int
aad
clc
adc
sub
xchg
xor
(bad)
(bad)
test
or
call
imul
mov
(bad)
pop
(bad)
jmp
retf
and
inc
neg
jg
stos
mov
jns
push
inc
sar
cmp
or
pop
push
mov
xchg
fbld
std
push
icebp
dec
movs
shr
ficomp
push
rcr
xchg
mov
fistp
jmp
mov
in
xchg
pop
mov
sub
jo
jb
stc
sbb
cmp
sub
shr
sbb
idiv
aad
popa
push
pusha
push
fldcw
jp
mov
sub
cs
loop
mov
out
xor
lods
enter
push
mov
xor
pusha
dec
popf
and
lods
jl
sub
out
dec
xor
dec
fdivr
pop
rcl
stos
and
icebp
(bad)
cdq
test
stos
rcr
imul
neg
mov
shr
pop
xor
push
adc
xor
ins
cld
xchg
sahf
fdiv
movs
jle
jmp
mov
aas
retf
cli
pop
mov
xchg
fild
push
call
ss
cmp
push
mov
les
mov
mov
mov
popa
movs
imul
pop
fmul
fisubr
icebp
repz
xchg
data16
aad
dec
shr
mov
aas
mov
mov
sub
retf
nop
inc
shl
pop
push
cwde
inc
jmp
dec
xchg
push
stc
(bad)
mov
mov
call
test
dec
and
neg
pop
js
outs
jl
dec
dec
xor
adc
inc
pop
mov
sbb
retf
mov
adc
push
retf
out
push
dec
adc
fistp
loope
mov
nop
or
sbb
stc
push
sar
inc
inc
(bad)
sti
add
jle
mov
repz
shl
xor
aas
add
mov
hlt
add
dec
bound
sbb
or
fs
shl
(bad)
je
out
in
pop
fwait
retf
jo
iret
aam
mov
idiv
mov
shl
cmp
and
sbb
hlt
imul
into
retf
imul
xor
shl
rol
in
fwait
ds
movs
jge
sbb
lds
or
js
jbe
test
in
push
std
clc
jge
mov
loopne
(bad)
fdiv
xchg
std
in
and
push
jb
adc
arpl
push
xchg
call
xchg
shr
pop
push
rcr
push
jae
push
dec
pop
addr16
ror
jmp
lds
jno
repz
bound
add
jmp
sub
fistp
popf
mov
fisubr
(bad)
mov
or
enter
jo
adc
fwait
mov
sbb
mov
(bad)
gs
call
xor
xchg
aas
retf
inc
imul
loop
(bad)
or
retf
mov
sub
clc
sbb
xor
aam
dec
fstp
xchg
rcr
inc
adc
(bad)
out
sub
dec
sar
ins
ins
jne
cmp
adc
jno
cmp
dec
cmp
adc
hlt
jg
mov
xchg
js
scas
xchg
or
xchg
mov
mov
pop
daa
xor
sbb
add
push
fwait
xchg
aad
pop
addr16
xor
pop
xor
aas
push
scas
mov
dec
fisubr
aad
inc
mov
inc
and
push
xor
push
dec
add
jmp
mov
mov
aam
mov
movs
ins
mov
mov
sub
dec
push
mov
pop
inc
cmp
in
cwde
mov
cmp
into
retf
xor
loopne
add
iret
ret
push
jl
mov
fistp
cmp
add
xchg
jnp
dec
retf
mov
fwait
adc
adc
ror
clc
mov
push
retf
ficom
push
mov
push
out
mov
push
push
pop
aaa
fnstcw
mov
xchg
mov
test
mov
lods
cmp
icebp
sbb
jmp
test
push
add
adc
add
pop
cmps
cmp
pop
xor
leave
inc
push
jns
jecxz
cmp
icebp
mov
retf
shl
ins
outs
inc
(bad)
or
sahf
jbe
mov
and
loop
inc
pushf
adc
into
repz
int
jno
or
cld
je
add
cmp
ret
movs
sub
nop
frstor
jg
pop
leave
stc
imul
dec
(bad)
sbb
mov
mov
ins
mov
jl
xor
mov
lahf
lea
xor
xchg
inc
inc
jg
mov
push
inc
pop
jns
mov
inc
or
fadd
mov
mov
push
stos
hlt
shl
test
push
mov
js
daa
push
gs
bswap
or
(bad)
cli
dec
jae
ret
daa
xor
out
sub
fst
cmp
fs
arpl
mov
push
adc
and
jp
iret
dec
jg
mov
addr16
sub
mov
mov
lds
pop
test
leave
int3
push
adc
or
int3
lds
xor
sbb
dec
mov
hlt
mov
or
imul
leave
mov
loop
pop
inc
jge
cwde
scas
xchg
push
mov
lods
pop
cdq
add
and
push
repnz
xchg
pop
xchg
add
out
jp
sbb
push
and
inc
pop
rcr
adc
or
aas
scas
inc
std
imul
push
jg
dec
(bad)
fbstp
mov
xchg
mov
pop
outs
jo
je
jo
sub
adc
lods
ja
and
jns
pop
cmp
adc
call
or
repz
(bad)
in
lock
and
fwait
lods
stos
dec
pop
xchg
mov
aad
fmul
in
data16
test
cmp
xchg
ins
sub
xor
cdq
arpl
sub
ret
loope
dec
cmp
in
jae
xor
(bad)
sti
icebp
add
neg
das
popf
push
push
movs
repnz
leave
pushf
sbb
fnstsw
inc
(bad)
loopne
pop
push
sbb
ds
test
out
cs
jns
or
mov
mov
jp
sub
movs
outs
adc
fs
stc
sub
repnz
inc
popf
push
sbb
cld
aam
stc
add
add
aam
clc
popa
ins
(bad)
sbb
pop
test
xchg
test
cmp
add
add
dec
cmc
test
mov
jbe
popf
icebp
xchg
dec
push
sbb
pop
out
js
sbb
out
pushf
call
push
adc
jns
mov
ins
lahf
mov
push
rol
jns
sub
inc
jmp
cmc
xchg
loop
cmc
mov
adc
mov
add
test
repz
add
rcr
inc
sbb
adc
outs
in
push
cwde
cmc
mov
push
adc
in
xchg
cmp
into
sti
int
fsubp
int3
jno
test
or
adc
mov
(bad)
push
mov
mov
(bad)
push
loope
retf
scas
fidivr
push
push
out
and
fs
jle
sbb
ins
imul
pop
lahf
dec
jb
inc
stc
cmp
lahf
pop
sub
fld
cwde
push
jle
(bad)
imul
jae
mov
push
jl
repnz
ret
mov
cmc
pop
push
push
inc
dec
or
inc
std
cwde
inc
mov
sub
sub
icebp
test
loope
(bad)
(bad)
cmp
in
inc
sbb
test
dec
or
add
mov
sub
mov
sub
push
movs
neg
adc
out
push
pop
push
xor
dec
adc
push
aaa
dec
repz
dec
pop
into
call
or
jo
xlat
jbe
jmp
jbe
push
sub
into
es
jle
xor
push
imul
fsub
aad
mov
sti
(bad)
fsub
sahf
jae
push
pop
lea
in
int3
jecxz
popf
fisttp
jge
test
popa
aas
jecxz
mov
jle
xchg
xchg
push
cli
int
mov
pop
or
lahf
cmp
mov
sbb
retf
mov
(bad)
or
inc
sub
mov
fwait
jbe
fsubr
jne
test
cli
mov
lock
or
imul
sub
pop
sbb
mov
imul
and
sti
scas
imul
stos
pop
add
push
inc
mov
cmp
pop
out
je
mov
sar
push
bound
daa
pop
daa
xchg
mov
retf
mov
sub
inc
jbe
aas
adc
jmp
xchg
mov
pop
es
xor
ret
rol
icebp
sbb
xlat
jmp
ss
scas
ss
loope
mov
dec
test
push
pmuludq
pop
and
aaa
out
cmp
loopne
jns
repz
lods
mov
mov
adc
fist
mov
add
or
nop
retf
idiv
retf
jne
and
push
mov
mov
and
inc
popa
and
sub
stc
jno
fwait
mov
sar
dec
aad
popf
(bad)
lods
or
imul
sbb
stc
inc
aad
scas
jbe
mov
lods
mov
loopne
xchg
mov
mov
cs
mov
lds
jmp
(bad)
dec
dec
fwait
mov
and
mov
(bad)
xlat
push
aam
adc
outs
hlt
cdq
sub
mov
std
sbb
sbb
loopne
xor
cmp
fs
ins
pop
pop
in
pop
add
cmc
sub
pop
jno
mov
dec
inc
add
push
xchg
xor
ins
pop
pop
(bad)
dec
inc
inc
push
jns
adc
and
mov
int
aaa
fstp
sbb
inc
inc
movs
ret
je
aam
fldenv
cmp
xchg
mov
ins
ret
dec
mov
pusha
sbb
call
or
pop
loopne
retf
or
mov
shr
mov
int3
int3
or
aaa
int
jae
imul
push
lods
ins
xor
into
cwde
fidivr
adc
das
push
sbb
push
in
push
stos
push
cmp
mov
pop
stos
and
fistp
out
stos
mov
mov
cmc
rcl
inc
push
pop
jae
sub
mov
mov
fstp
inc
jecxz
fild
out
dec
stos
dec
pusha
stos
mov
mov
or
outs
and
aaa
(bad)
test
ret
shl
pop
xchg
inc
(bad)
pop
mov
fwait
lock
inc
push
scas
adc
(bad)
mov
loopne
jns
scas
push
push
outs
mov
mov
pop
or
sbb
cld
pop
fidiv
into
dec
ds
sub
movs
je
xchg
jns
or
(bad)
fbstp
xchg
dec
ficomp
sub
inc
shl
sub
xchg
sub
dec
in
xchg
xchg
bound
xor
dec
imul
mov
loop
xchg
out
pop
or
sbb
in
cmp
sbb
ret
es
int
test
dec
cdq
mov
dec
mov
inc
int
addr16
dec
lods
clc
hlt
xchg
push
out
cmps
nop
mov
sahf
xchg
call
cwde
jno
int
inc
pop
jns
sbb
jg
cmps
xchg
das
sbb
popf
push
sahf
in
push
dec
fnstenv
mov
or
xor
dec
jbe
sbb
and
mov
push
outs
lock
or
push
(bad)
jmp
xchg
int3
int
sub
test
ja
in
es
sbb
in
je
aad
outs
stos
sbb
pop
sbb
into
mov
inc
mov
add
dec
pop
stos
mov
cdq
lods
cld
sahf
fdivr
test
popf
cdq
xchg
push
add
popa
sub
aaa
push
lods
xor
cmp
movs
add
mov
(bad)
hlt
fld
push
cmp
sub
mov
adc
cmp
scas
lock
cmp
lahf
hlt
and
sub
sbb
mov
sbb
fs
loope
std
push
inc
mov
inc
int3
jb
jg
fmul
mov
jbe
add
ins
(bad)
xchg
cmc
add
mov
xchg
in
loope
sub
push
aad
cmps
push
aad
adc
test
(bad)
out
xor
repnz
pop
sub
fwait
in
aad
lock
sub
gs
inc
inc
fsubrp
imul
cs
outs
xor
scas
pushf
mov
std
jg
mov
or
jb
mov
xor
imul
lea
jecxz
push
mov
push
push
add
xchg
in
cli
fwait
dec
xchg
ss
mov
lea
popf
mov
mov
not
cmp
fnstsw
lds
xchg
mov
jp
fwait
xchg
sub
sub
add
out
loopne
xchg
xor
stc
(bad)
icebp
fbld
sbb
shl
scas
adc
mov
xor
mov
cmp
ja
ret
das
imul
nop
sbb
movups
bound
mov
in
cmp
mov
push
pop
aam
rol
outs
xchg
mov
lods
ret
ror
mov
or
ja
test
xor
add
mov
add
add
ja
sub
je
xor
sub
xchg
and
cmp
lds
nop
push
sbb
dec
das
push
ss
push
mov
sbb
pop
test
inc
scas
cs
in
clc
fs
inc
rcr
hlt
outs
push
xchg
test
add
(bad)
sar
(bad)
aad
in
cmps
imul
mov
(bad)
push
outs
call
inc
fmul
cmp
inc
and
add
cmp
in
push
ins
jno
pop
cdq
neg
xchg
jae
mov
popf
int
xchg
inc
(bad)
shl
mov
xor
aam
lds
hlt
mov
fsub
and
loope
mov
pop
add
movs
dec
sub
dec
cmp
xor
inc
mov
jp
(bad)
fistp
das
inc
jge
mov
jp
sbb
bnd
cmp
call
or
sbb
aad
adc
dec
out
(bad)
jge
xchg
ret
rcr
xchg
inc
add
movs
mov
mov
cmp
inc
adc
and
and
xchg
out
ja
xchg
jmp
dec
sahf
jle
mov
test
inc
dec
retf
mov
cmp
pusha
pop
in
pop
inc
add
fs
rcr
pop
cmc
push
xor
pop
and
sbb
repz
add
aaa
jnp
stos
pop
mov
xchg
push
add
movs
icebp
push
inc
int
push
int
lahf
cmp
mov
loopne
mov
xor
pop
dec
xchg
cs
mov
mov
in
ret
(bad)
imul
dec
or
test
xchg
test
sub
ror
imul
mov
ror
test
jmp
pop
fst
aam
sub
cmps
fs
daa
daa
fs
idiv
mov
sbb
js
add
test
hlt
sub
dec
pop
push
mov
and
jmp
jns
jmp
inc
xor
sub
adc
lods
mov
fadd
jne
lods
cmp
jmp
jb
push
out
adc
push
(bad)
and
or
pop
pop
pushf
js
mov
fdivr
pop
mov
jne
movs
aad
xchg
and
sub
xchg
and
test
mov
(bad)
mov
fcom
mov
jo
into
adc
daa
mov
push
loope
and
fild
repnz
xchg
push
mov
scas
xor
mov
adc
adc
fnstcw
mov
sub
fwait
div
movs
sahf
pop
fs
mov
mov
fist
in
add
ins
sbb
enter
pop
ret
add
or
xchg
jp
mov
aam
mov
and
lahf
test
xchg
je
jbe
ss
mov
dec
sahf
pop
adc
sbb
sbb
sbb
pop
out
repz
xchg
xor
arpl
push
add
mov
ret
mov
call
pop
(bad)
aam
sar
js
fdiv
cmc
mov
aam
sub
ds
mov
stc
cmp
lods
hlt
mov
fistp
in
mov
xchg
fadd
scas
sub
inc
mov
loope
fst
mov
lea
mov
outs
xchg
cmp
shl
cmp
jbe
shl
jle
ret
imul
sub
int3
enter
fbld
stos
sub
fucomi
mov
inc
xchg
in
clc
sbb
je
inc
ficomp
in
aam
mov
icebp
call
test
push
imul
and
push
xor
rol
xor
dec
cmp
mov
popf
mov
ds
dec
push
jmp
loope
ret
(bad)
cmp
test
dec
add
push
push
sbb
mov
lods
lods
(bad)
jp
adc
push
mov
retf
out
xlat
ds
mov
jecxz
(bad)
(bad)
xor
imul
pop
and
pop
inc
mov
xchg
or
out
push
fmul
push
enter
fdiv
bound
out
mov
mov
push
call
jb
clc
xor
retf
or
or
or
mov
sub
sbb
(bad)
fs
neg
or
jmp
out
mov
cmp
jmp
push
mov
and
sbb
fwait
cmp
and
pop
call
jge
cs
or
sub
inc
jnp
rcl
(bad)
mov
dec
das
shl
and
mov
retf
mov
xor
mov
sub
jecxz
push
jno
fwait
jl
sbb
data16
xchg
stc
(bad)
jbe
cmc
mov
mov
dec
mov
jb
call
mov
stc
std
add
jge
sbb
pop
repnz
or
movs
mov
adc
pop
lods
ret
push
jecxz
popa
pop
or
pushf
daa
ins
out
or
fwait
loop
(bad)
xor
movaps
jbe
mov
add
pushf
cmp
aam
shl
icebp
js
pmulhw
inc
jnp
xor
call
or
dec
inc
bnd
fmul
jae
xchg
mov
shl
inc
jb
pop
stos
cdq
dec
mov
mov
push
dec
mov
push
xor
push
lods
and
xlat
mov
mov
retf
push
lea
sbb
pop
and
jmp
sar
jg
std
enter
jno
es
xchg
push
pop
rol
loope
jmp
mov
cwde
push
ffreep
repz
jne
mov
sbb
mov
rcr
adc
scas
push
sub
jl
xor
popa
push
out
push
and
out
xchg
add
pusha
jmp
mov
xchg
jb
in
or
aas
and
retf
repnz
add
fidivr
aam
stos
pop
(bad)
push
jle
or
inc
cwde
lock
add
xor
xchg
sub
test
fcomp
rol
mov
xchg
dec
inc
push
add
arpl
dec
sti
add
add
aam
adc
fild
mov
xchg
ins
add
inc
fcmovnu
dec
popf
push
inc
mov
jns
aas
aas
imul
std
in
mov
int3
sub
xor
mov
lods
xchg
rcr
nop
mov
push
mov
sbb
mov
push
(bad)
and
std
xchg
cmc
inc
test
jns
out
pop
adc
rcl
mov
neg
repnz
jp
mov
push
retf
cmp
add
mov
jmp
loope
fbstp
jae
mul
addr16
imul
jge
pop
dec
mov
aad
je
push
push
(bad)
in
jecxz
add
and
add
js
fsub
mov
fist
rcr
xor
adc
jge
enter
push
adc
xor
xchg
pop
push
fs
pop
pop
mov
arpl
mov
ins
mov
mov
nop
(bad)
fdiv
pop
shl
(bad)
jmp
xchg
movs
cmps
inc
out
call
xchg
cmp
inc
add
adc
stc
movd
imul
fstp
or
outs
(bad)
pop
aas
cmp
(bad)
clc
sbb
xor
std
sub
xchg
outs
mul
fimul
mov
cmp
rcl
inc
jl
jnp
dec
rcr
rcl
xchg
sub
es
jbe
mov
mov
bound
mov
pushf
sti
inc
mov
push
sbb
xor
(bad)
mov
shr
mov
sbb
lahf
adc
cmp
inc
sub
mov
xchg
fmul
fdivr
cdq
pop
(bad)
jnp
in
loop
idiv
pop
jnp
pop
fcmovne
sub
add
and
addr16
pop
adc
dec
test
fistp
pop
mov
pop
enter
jp
out
neg
mov
mov
mov
outs
fld
adc
cmp
test
mov
cmps
addr16
ds
push
mov
adc
inc
mov
dec
mov
and
or
or
imul
dec
imul
ins
arpl
pushf
sbb
add
call
sti
(bad)
nop
adc
jbe
mov
adc
scas
ins
xchg
push
dec
mov
frstor
dec
mov
inc
or
fbstp
popa
push
and
jmp
mov
and
mov
test
outs
outs
mov
icebp
cmps
repnz
cmp
ss
fcmovnu
mov
or
addr16
add
int3
pop
and
clc
mov
pop
js
arpl
aaa
jbe
jecxz
mov
dec
xor
test
(bad)
cmc
or
lods
xchg
push
add
xor
daa
jne
enter
pop
add
ss
or
adc
pusha
lods
or
jns
stos
sub
pop
cmp
push
pop
xor
rol
jae
inc
outs
lock
add
inc
mov
ja
data16
popf
sbb
cmp
outs
clc
ret
call
mov
xchg
retf
repnz
push
mov
sahf
call
mov
pop
aas
pop
popa
outs
xor
bound
and
xor
add
test
neg
int
sbb
aaa
(bad)
xchg
jmp
shl
sub
test
fbstp
mov
dec
fsub
or
xchg
inc
cli
cmp
(bad)
cmc
cmps
inc
mov
push
dec
mov
sbb
ret
out
and
sbb
jnp
in
shl
aam
adc
xor
mov
fldenv
cmp
scas
fs
pop
mov
pop
mov
mov
pop
mov
add
dec
fisttp
pop
loopne
cld
dec
cmp
popa
icebp
xchg
pop
fwait
mov
clc
jge
xor
shr
xchg
fstp
std
pushf
or
(bad)
ss
imul
mov
or
jbe
leave
fs
pop
cmp
mov
popf
test
pop
cmp
cmp
xchg
fidiv
sbb
imul
hlt
rcl
scas
call
push
aam
cdq
mov
push
mov
cmps
cmc
sbb
jl
sub
(bad)
call
nop
les
lock
cmps
mov
jmp
mov
fbstp
ja
(bad)
(bad)
jg
push
ja
fld
hlt
push
bound
and
arpl
cmp
ret
mov
xor
sbb
popa
and
es
add
push
pop
sub
cmps
leave
call
jnp
popa
cmp
inc
mov
adc
cmp
lods
in
int3
js
out
mov
push
cmc
xor
xor
out
mov
mov
inc
adc
or
aaa
aaa
inc
outs
out
test
dec
and
mov
lock
xchg
test
jno
sbb
and
(bad)
int
mov
jp
xlat
mov
pop
sti
into
scas
add
sbb
mov
sub
cmp
push
iret
(bad)
hlt
push
push
mov
sub
test
bound
pop
mov
xchg
fld
jo
add
test
sub
(bad)
and
cli
iret
(bad)
test
mov
jecxz
jg
or
pop
aad
jecxz
mov
hlt
adc
pop
mov
dec
or
inc
xor
movs
fidivr
test
shr
push
loope
inc
bound
adc
mov
pop
push
xor
pushf
xchg
ror
adc
inc
push
xor
movs
dec
adc
sahf
push
mov
mov
xchg
xor
cdq
jmp
es
ror
adc
cmp
mov
test
imul
sub
mov
ficomp
mov
cmps
loope
std
bound
test
mov
cld
mov
jbe
mov
mov
dec
jge
add
loope
and
pop
pop
xchg
inc
test
movs
ficom
lea
jns
mov
or
lods
call
mov
popf
cmp
or
dec
sub
cmps
ins
dec
mov
clc
test
ret
aaa
shl
mov
pushf
fimul
cmc
movs
inc
xchg
lods
sti
ret
ja
push
jecxz
(bad)
loope
and
rep
icebp
sbb
jge
fadd
jno
mov
or
inc
neg
ret
fwait
mov
div
jmp
add
sub
xor
xchg
cld
ret
ja
push
test
xor
cmp
retf
pop
sti
fsub
or
pop
lods
dec
add
fisub
push
lods
fstp
inc
loopne
shr
dec
aam
cmp
icebp
sbb
inc
mov
call
fild
mov
jmp
ins
(bad)
xchg
inc
mov
test
ret
daa
mov
sub
xchg
fild
ret
imul
push
cwde
data16
and
nop
dec
sub
cli
jle
and
enter
lods
xor
mov
and
ja
push
dec
jmp
das
xchg
jmp
pop
and
pop
call
dec
sbb
sub
adc
stos
ins
mov
ret
outs
out
jmp
(bad)
out
stos
dec
mov
std
jae
mov
or
movs
cmc
aad
cmp
mov
xor
mov
jne
jnp
mov
xor
gs
inc
jne
pop
xchg
jb
sar
jmp
rol
mov
xchg
sbb
push
cmp
enter
mov
loop
fs
push
push
push
or
pushf
inc
out
cmp
pop
stos
and
pop
push
arpl
and
lock
clc
inc
nop
push
int
stc
hlt
xor
push
movs
repnz
imul
or
es
test
es
xor
cdq
js
or
scas
adc
neg
add
icebp
push
push
scas
outs
mov
jmp
in
mov
fld
ss
add
ins
aam
mov
test
pop
jl
sbb
mov
bound
adc
xchg
inc
rol
inc
mov
lds
sti
movs
xchg
jp
lock
aam
sti
pop
mov
movs
adc
sub
cli
test
fcmovne
test
jp
lods
cli
sub
mov
cs
jne
and
(bad)
mul
and
add
xchg
fidivr
cmp
mov
pushaw
adc
mov
add
std
adc
adc
mov
xchg
push
adc
mov
and
pusha
inc
js
jle
xchg
mov
inc
movs
cli
test
test
dec
ja
sub
inc
push
mov
cld
mov
cmp
xchg
mov
bound
xlat
pushf
push
or
add
add
(bad)
aas
jl
xor
fcmovne
(bad)
xchg
sub
adc
movs
add
int
jge
mov
jnp
out
mov
ja
or
and
push
out
push
ins
dec
jl
test
dec
jns
iret
pop
shl
rol
mov
outs
xor
mov
scas
and
lds
push
(bad)
pop
mov
adc
push
jbe
jne
stos
mov
call
xor
inc
or
in
push
clc
push
xchg
mov
mov
pushf
xor
mov
mov
iret
movs
nop
ror
or
dec
push
stos
daa
test
(bad)
pop
mov
jns
es
mov
push
dec
mov
pop
lods
les
(bad)
retf
out
or
ins
jp
or
neg
sti
aad
fucomp
xchg
loopne
add
xchg
dec
inc
adc
or
mov
outs
rol
ret
inc
adc
mov
call
(bad)
ds
mov
call
cmp
(bad)
dec
cmps
scas
jmp
and
xchg
adc
sbb
jnp
outs
nop
call
adc
mov
cmp
xor
ret
adc
cdq
mul
mov
or
mov
loope
lahf
adc
xor
fmulp
push
shl
xchg
xor
jge
add
xchg
lods
sbb
mov
iret
adc
add
pop
int
cmp
sub
inc
adc
inc
not
stos
test
(bad)
neg
pop
mov
pop
pop
cmp
das
xchg
jnp
push
or
xlat
and
cs
push
je
mov
add
mov
cmp
mov
hlt
ja
js
js
lods
and
je
je
xchg
jbe
push
shl
rol
cmp
push
dec
mov
and
dec
xor
inc
sar
fist
call
out
bound
hlt
pop
pop
pop
cmp
or
pop
adc
mov
sar
jmp
xor
sbb
mov
outs
push
cmp
(bad)
cli
add
mov
mov
and
sbb
call
nop
add
cdq
les
pop
inc
inc
add
pop
les
mov
retf
fbld
cmps
jne
inc
shr
lds
or
mov
xchg
mov
in
jecxz
loop
push
mov
or
adc
push
push
mov
retf
xchg
pop
sahf
mov
push
add
xchg
out
add
arpl
sub
fs
xchg
jbe
mov
imul
loope
call
test
mov
xchg
call
out
outs
jne
jbe
mov
js
sti
inc
push
lock
and
mov
mov
sbb
mov
push
mov
(bad)
cmp
lods
sub
or
ret
cmp
mov
mov
sub
aam
and
outs
push
addr16
dec
push
(bad)
(bad)
xor
repnz
dec
inc
jo
xor
xor
sub
pop
mov
sbb
mov
popa
push
dec
mov
add
push
fadd
push
pop
leave
outs
or
jl
xor
inc
jp
add
inc
push
and
jge
stos
repnz
fldenv
stos
popa
(bad)
sti
(bad)
addr16
sub
or
sub
pop
rcr
test
gs
pop
and
retf
sub
clc
daa
mov
and
mov
les
(bad)
in
loop
pop
push
mov
sub
dec
cli
scas
xor
dec
jmp
sub
sbb
pop
inc
and
xchg
inc
shl
mov
lahf
push
sub
inc
mov
xor
sti
div
and
fisttp
daa
mov
sahf
sub
adc
lods
mov
dec
(bad)
jl
pop
mov
js
fisub
loopne
xchg
cmp
(bad)
inc
pop
xor
push
call
or
frstor
ja
push
in
adc
lods
in
in
rcl
(bad)
test
mov
adc
fwait
test
lock
or
into
inc
lock
std
dec
pop
adc
xor
cmp
or
adc
sar
ror
ret
popf
int3
mov
pop
xor
adc
sti
mov
out
outs
inc
mov
(bad)
fstp
ds
mov
mov
sbb
lods
arpl
jns
inc
not
adc
imul
cmp
jns
mov
sub
out
dec
xor
pop
mov
repnz
mov
cmp
call
stos
ins
(bad)
mov
push
add
mov
cmp
add
add
mov
arpl
mov
xlat
loop
sub
outs
ja
dec
ss
fucomip
cld
push
lahf
sbb
or
cs
rol
cmp
scas
ds
push
xor
inc
and
sub
fisttp
loop
pop
mov
lahf
pavgb
mov
inc
push
repz
bound
pop
in
push
rcr
lods
lods
push
clc
adc
in
inc
fwait
xchg
lock
mov
data16
and
or
add
jb
push
rcr
mov
inc
jae
jg
mov
in
push
and
xchg
shl
xor
or
push
lock
inc
hlt
js
pop
ins
push
bound
sbb
add
inc
lds
(bad)
mov
xchg
pop
mov
xor
out
jo
pop
enter
adc
or
jge
or
icebp
(bad)
and
jl
mov
addr16
cmps
inc
push
dec
add
push
pop
or
imul
xlat
mov
cmp
add
cmps
out
or
adc
push
pop
lea
cmp
lods
xchg
out
out
push
pop
ret
cli
out
push
sub
dec
imul
mov
inc
xchg
cli
xchg
ret
aaa
cmps
push
push
sub
ret
xchg
out
xor
dec
outs
or
pop
js
add
int3
xchg
int
std
shl
cmps
pusha
jo
cld
aad
cmp
inc
jbe
mov
fisttp
jl
jg
dec
mov
in
icebp
jge
ror
jp
jmp
sbb
gs
cmp
cmps
cmps
jle
or
test
ret
lods
(bad)
retf
cmp
mov
fs
adc
out
cmp
and
scas
push
sub
inc
maskmovq
neg
mov
shr
dec
jl
(bad)
sub
add
push
sub
scas
push
fidivr
fs
jle
mov
nop
aam
sub
retf
jnp
jo
mov
into
and
xor
cmp
push
shr
icebp
dec
push
sub
test
add
mov
jg
test
pop
repz
call
lods
push
add
js
test
repz
sub
cmp
out
push
sbb
int3
ja
push
mov
xlat
add
mov
sbb
xchg
push
jb
shl
clc
jmp
mov
mov
sbb
out
push
jecxz
mov
xor
dec
cmps
pminub
xchg
cmc
mov
js
or
(bad)
popf
or
xchg
ret
ficomp
push
popf
ror
loope
xor
push
mov
(bad)
gs
pusha
ins
in
pop
xlat
jae
js
data16
les
gs
jbe
or
aad
sahf
js
or
lods
in
scas
xor
jnp
adc
dec
enter
(bad)
mov
sbb
in
xor
pop
stc
dec
nop
loop
xlat
jp
xchg
(bad)
fidivr
ret
clc
sub
in
jmp
cs
xchg
jmp
outs
sbb
inc
sbb
retf
and
pop
(bad)
sub
inc
stos
fs
add
imul
iret
dec
enter
mov
and
test
sub
push
hlt
test
xchg
xchg
sub
mov
(bad)
out
add
sub
fild
jns
js
scas
and
sub
int
ror
ss
hlt
inc
or
xchg
stc
add
cdq
dec
rcl
shl
test
inc
mov
ja
push
lods
mov
pop
enter
jle
xor
mov
adc
mov
sbb
loop
lods
sti
jmp
cld
frstor
test
aas
cmp
in
xchg
add
mov
adc
rcr
nop
retf
call
xor
push
ret
imul
(bad)
push
cwde
add
xchg
mov
cld
rcl
pop
mov
sub
adc
lods
call
adc
inc
outs
xchg
imul
mov
push
dec
and
pushf
shl
popf
dec
adc
inc
push
fcomp
enter
daa
and
ja
mov
sbb
xor
add
pop
dec
dec
jmp
and
inc
jle
(bad)
and
xchg
call
lods
fcmovnbe
out
inc
dec
sub
mov
addr16
xor
out
das
test
cmc
lods
push
cmp
jmp
sub
jae
xor
jbe
out
adc
aaa
or
cmp
sub
and
mov
shl
cs
cmp
sbb
or
bound
mov
or
lea
out
inc
jno
mov
xchg
imul
push
mov
popf
je
das
sub
pusha
xchg
push
xchg
data16
push
push
xor
mov
out
xor
pusha
call
aas
in
outs
and
dec
mov
fs
ins
or
mov
cmc
push
sbb
mov
add
jle
mov
retf
mov
outs
mov
cmp
add
jbe
aaa
mov
jns
out
scas
jnp
std
and
cmp
loopne
dec
mov
stos
cmp
lods
clc
pop
push
leave
retf
test
out
retf
sub
mov
dec
xor
cdq
cmps
inc
xchg
mov
in
adc
sub
add
push
or
mov
into
inc
mov
mov
sti
lods
fwait
sbb
and
sbb
lods
(bad)
imul
loope
jae
xchg
cmp
and
push
sub
and
xacquire
and
sub
loope
fdivr
pop
mov
sbb
icebp
ds
jg
cmp
sub
jle
shl
jmp
push
das
adc
adc
lock
fist
xchg
(bad)
in
dec
inc
adc
xor
shl
mov
push
push
ins
out
push
push
or
adc
pop
call
dec
dec
and
xchg
adc
fiadd
shl
mov
push
pop
mov
xchg
xchg
outs
out
in
(bad)
fnstsw
popa
sub
test
stc
imul
pushf
dec
sbb
sub
push
loopne
jnp
scas
push
push
dec
or
shr
or
addr16
pop
jno
test
mov
(bad)
ror
jle
sbb
in
inc
push
lahf
rol
mov
and
xor
rcl
push
cmp
dec
add
mov
popf
jg
push
xlat
jecxz
pop
lods
ins
shr
cmp
or
inc
mov
mov
add
out
aas
ds
mov
cwde
add
ja
call
loop
aaa
scas
mov
mov
mov
ret
lods
and
imul
add
or
fistp
dec
cld
push
mov
pop
sub
cmp
fld
movs
fdivp
sti
out
lds
test
xor
sub
sbb
pop
push
sub
push
adc
ss
dec
ds
inc
icebp
sbb
mov
sar
xor
test
mov
fwait
sub
clc
pop
pop
sbb
pushf
push
mov
xor
int
imul
xchg
fcomp
cmp
neg
shr
cmc
fmulp
and
and
js
mul
push
sub
ret
or
mov
and
fmul
out
mov
sub
xchg
fsub
jge
or
aas
enter
test
jno
cli
aam
mov
xchg
xchg
ret
sbb
shl
xchg
or
scas
(bad)
fwait
lods
xchg
fwait
sub
lods
out
nop
adc
ret
stos
loope
loop
dec
sbb
in
rcr
fidiv
cld
jmp
and
or
adc
jle
mov
cmps
pop
repz
push
ret
neg
lahf
data16
loope
mov
sub
bound
in
inc
loop
jnp
sti
test
(bad)
xchg
jmp
mov
and
cmc
repz
ret
data16
movs
mov
sub
ficom
mov
mov
and
scas
or
not
pop
cmp
cmp
jl
iret
shl
mov
sahf
dec
jne
cdq
stc
sub
pop
scas
jno
test
mov
outs
pushf
out
add
test
xchg
or
add
xor
(bad)
jbe
mov
xchg
pop
and
iret
cmps
(bad)
bound
hlt
or
test
pop
icebp
push
(bad)
pop
data16
(bad)
fsubr
xchg
sub
dec
mov
pop
hlt
aaa
jecxz
rcl
dec
mov
in
movs
dec
cmp
inc
push
stos
dec
xlat
and
or
sub
popf
inc
in
lahf
dec
push
xchg
push
and
mov
xchg
iret
push
mov
outs
or
loopne
push
loop
push
mov
mov
dec
clc
outs
repz
das
cmp
mov
jmp
sbb
loope
fsubp
ret
loope
push
les
inc
mov
aaa
pop
xchg
ror
stc
jl
div
in
dec
mov
das
sbb
std
xor
or
imul
fdivr
and
nop
xor
cmc
sub
cmp
loopne
pop
xor
or
sar
jmp
pushf
shl
pop
xlat
jbe
and
sub
jns
mov
sbb
pop
bnd
or
shl
fwait
stc
xor
mov
xchg
xor
mov
(bad)
lods
sahf
or
jae
mov
push
mov
test
test
ja
mov
popf
mov
adc
cmp
cmps
sbb
aas
sub
into
ss
(bad)
mov
xchg
mov
jo
ret
sbb
fisttp
cmps
mov
aaa
scas
imul
mov
int
scas
xchg
jp
cdq
xchg
xor
fimul
inc
or
mov
sahf
push
inc
hlt
pop
lods
(bad)
sbb
mov
sbb
loope
das
ins
ror
(bad)
pop
or
or
imul
or
loopne
push
sub
pusha
xor
mov
or
retf
dec
jge
pop
add
xor
pushf
pop
test
push
mov
jo
aaa
rcr
gs
gs
pushf
xor
mov
xor
(bad)
fstp
mov
inc
pop
pop
icebp
cdq
addr16
mov
leave
aam
cmp
and
push
stos
in
mov
jns
xor
loopne
inc
test
fild
cmp
icebp
push
pop
add
shl
test
and
mov
nop
arpl
pop
inc
inc
scas
jmp
icebp
jecxz
push
test
mov
test
int3
sbb
shl
call
xlat
cmp
push
std
out
jecxz
xor
std
test
sar
out
out
cmp
jae
mov
jne
and
je
sbb
and
aaa
cdq
in
gs
(bad)
inc
cdq
mov
sbb
push
out
or
std
jecxz
pop
inc
adc
xor
scas
sbb
jge
inc
mov
loope
jmp
in
cmp
loop
push
inc
xor
xchg
or
pop
or
cwde
out
mov
mov
jbe
mov
or
dec
imul
or
ja
fwait
pusha
adc
jp
je
test
in
test
jne
pop
sbb
(bad)
mov
jp
mov
inc
test
fucomp
mov
test
test
fadd
pop
xor
cdq
cmps
es
lods
xchg
add
aaa
repnz
jp
sub
jp
fs
inc
dec
xor
repnz
cld
cmp
fcmovnbe
inc
and
cmpxchg
data16
cli
sub
icebp
jg
addr16
xchg
lea
or
xchg
call
or
(bad)
(bad)
(bad)
std
dec
int3
loopne
test
mov
sbb
ins
retf
stc
in
adc
jne
lods
jmp
xchg
mov
(bad)
fsub
shl
mov
cs
in
(bad)
movs
jbe
cmp
cli
lods
aas
(bad)
ins
mov
and
rcr
mov
xor
sub
dec
aam
test
mov
popa
test
and
mov
push
push
movs
add
xlat
mov
imul
(bad)
cmps
repnz
adc
popa
test
ds
clc
loopne
or
aad
ins
outs
pop
adc
jnp
retf
mov
ss
je
clc
mov
jl
sub
(bad)
mov
and
mov
bound
pop
test
adc
mov
push
xchg
mov
cmp
or
push
loope
cli
aad
mov
sahf
jb
dec
xor
(bad)
xchg
enter
scas
dec
mov
(bad)
mov
and
popf
xor
or
dec
out
cwde
mov
mov
dec
mov
les
dec
test
xchg
test
les
loope
lea
add
mov
cwde
mov
and
arpl
fmul
sbb
popa
sbb
cli
outs
cli
int
arpl
test
loop
(bad)
jo
sbb
stos
loopne
adc
jo
jl
idiv
pop
stos
push
lea
sahf
and
jns
outs
sbb
popa
or
test
mov
popa
into
mul
add
jl
into
jae
hlt
cs
stos
icebp
adc
popf
cdq
inc
aas
cmp
inc
cmc
lahf
push
xor
dec
nop
aaa
outs
sub
mov
mov
loope
test
jbe
idiv
mov
or
ss
push
and
in
sub
inc
mov
pop
movs
add
pusha
cmp
fidiv
cmp
mov
adc
dec
lods
pop
mov
dec
or
sub
ins
jp
movzx
adc
ficom
scas
outs
sbb
mov
(bad)
push
test
push
pop
popa
(bad)
cmp
test
xchg
inc
or
pop
sahf
push
xor
cld
xor
(bad)
movs
out
aam
add
rol
adc
loopne
dec
fidiv
pop
xchg
adc
in
sub
add
ins
and
jmp
mov
mov
mov
test
push
push
pushf
adc
ja
cmc
jmp
xchg
out
icebp
sahf
rsm
mov
mov
nop
or
push
fwait
dec
xchg
dec
add
ret
stos
repnz
xor
jo
mov
pop
xor
movs
push
int
pop
rcl
inc
jne
stos
fdiv
add
push
xor
mov
daa
loope
mov
popa
lds
fdiv
adc
gs
dec
je
or
dec
in
jmp
mov
dec
dec
cmps
jl
jp
and
(bad)
cmp
ja
call
jae
mov
rcl
push
lods
gs
cmp
or
int3
jns
push
mov
in
adc
into
cmp
rcr
test
mov
adc
jmp
jns
dec
mov
xor
add
push
aas
push
fs
add
jns
test
dec
push
push
pop
add
ins
pushf
or
push
int
retf
mov
daa
fidivr
xor
dec
and
fsub
mov
push
fild
(bad)
(bad)
mov
jle
or
addr16
mov
(bad)
push
cmc
aas
sbb
enter
stos
and
dec
popf
dec
leave
in
or
mov
jno
ss
or
jle
aaa
pop
(bad)
rcl
aaa
sbb
rcr
xor
adc
mov
shl
add
inc
(bad)
push
pop
sbb
(bad)
fwait
int
dec
lds
sub
cmp
jnp
outs
pextrw
aas
lods
mul
mov
mov
fstp
sbb
sbb
pop
(bad)
icebp
test
push
aad
sbb
sbb
outs
add
rcl
fmul
xchg
push
jae
dec
ins
popa
sti
stos
mov
stc
jl
xchg
sar
pop
xlat
or
jle
lds
pusha
xor
movs
jmp
shl
cdq
adc
stc
mov
mov
lds
add
dec
fild
retf
mov
aad
xchg
mov
test
inc
jmp
lahf
pop
inc
ret
and
mov
rol
or
call
into
jne
add
fwait
sub
scas
test
cmp
add
sbb
push
jno
and
jecxz
movs
inc
(bad)
jmp
pop
sbb
dec
inc
push
or
inc
ja
adc
call
add
mov
fwait
sbb
lahf
out
pop
int
mov
out
cmp
sub
sbb
or
sub
aaa
and
scas
bswap
inc
leave
mov
jle
(bad)
into
add
jo
xchg
xchg
repnz
push
neg
lods
mov
jno
(bad)
into
dec
jl
pop
cmp
fdivr
pop
out
lods
imul
lds
xlat
mov
sbb
mov
sbb
mov
sbb
adc
push
jle
pusha
inc
mov
neg
pop
pushf
sbb
jge
lahf
mov
xor
jo
cmp
aam
into
and
cmps
pop
shl
and
mov
cwde
push
leave
(bad)
sbb
or
pop
jmp
pop
dec
cwde
xor
loop
icebp
cmps
cwde
pop
cmps
mov
movs
fs
imul
xor
mov
mul
pop
cli
mov
or
inc
mov
xchg
dec
dec
imul
idiv
add
mov
loopne
mov
pusha
lods
mov
outs
shl
mov
rol
test
imul
retf
fwait
lods
fucomp
lods
cli
mov
and
dec
pop
fisubr
cdq
adc
inc
jae
test
cmps
cmp
ja
jp
aad
mov
adc
or
dec
inc
adc
je
push
call
int
lods
pop
icebp
mov
lds
or
sbb
mov
sahf
xchg
ss
lock
pop
xchg
mov
jecxz
ins
in
daa
loop
jmp
outs
and
jge
add
fs
inc
dec
jne
adc
movs
jmp
adc
retf
mov
xchg
inc
adc
icebp
inc
das
or
imul
stc
inc
ror
fstp
dec
imul
cld
cmps
rcl
push
adc
out
rol
push
(bad)
pop
sub
iret
in
adc
jle
mov
push
add
push
in
mov
mov
cmp
jmp
jg
pop
mov
xor
xchg
sub
into
mov
xchg
adc
jmp
mov
icebp
lea
scas
ret
push
shr
jo
loop
jb
test
stos
cwde
push
in
dec
or
xchg
mov
mov
div
sub
inc
fsub
imul
cs
and
enter
and
mov
ret
cmps
jge
in
daa
aam
retf
stc
gs
xor
fidiv
xchg
adc
mov
test
inc
mov
jecxz
mov
stos
dec
mov
aas
adc
loopne
mov
rol
xchg
cwde
add
in
inc
fistp
retf
loopne
sub
and
xchg
push
push
sbb
lods
aad
push
mov
fmul
movs
sub
adc
out
mov
mov
in
(bad)
cmps
shl
(bad)
mov
iret
and
(bad)
jl
cmps
imul
pop
outs
popa
mov
daa
sbb
leave
add
push
inc
aad
dec
jg
ins
iret
add
dec
shl
shl
sub
cs
fidivr
loopne
push
rol
jmp
sub
inc
imul
(bad)
mov
les
sub
add
jmp
mov
fwait
push
mov
daa
dec
out
xor
push
lods
ficomp
pop
mov
push
test
add
ret
lahf
push
rcr
sub
nop
shr
cld
and
outs
xchg
fild
imul
pop
std
mov
or
mov
xor
mov
cmp
pop
and
fsub
int3
enter
data16
dec
test
xchg
fadd
mov
jne
cmps
mov
or
cmp
mov
or
nop
cwde
and
movs
outs
cmp
mov
add
cdq
test
retf
popf
push
pop
pop
pop
stos
adc
add
jge
pop
(bad)
mov
inc
test
(bad)
aas
cld
pop
in
popf
add
loop
push
mov
pop
push
mov
dec
mov
movzx
and
scas
dec
sub
rcl
cdq
call
clc
cmp
pushf
cmp
call
cdq
out
jle
ss
jae
cmps
xor
xchg
xor
out
jo
cld
push
add
call
lock
gs
adc
movs
(bad)
mov
cdq
sbb
dec
cmps
repz
test
xchg
dec
inc
adc
(bad)
sbb
ins
fadd
dec
mov
int
cld
ss
dec
stc
movs
inc
movs
retf
addr16
sbb
sub
ja
pop
jb
sbb
out
mov
push
cs
rol
dec
loope
or
cmc
sub
and
leave
xchg
adc
leave
ret
sub
mov
push
jg
scas
xchg
loopne
xchg
xor
adc
inc
imul
sbb
mov
test
gs
lock
mov
xor
adc
xchg
sbb
xor
fs
std
cmp
icebp
xor
cmps
mov
adc
or
fimul
lds
push
xchg
dec
imul
aas
stos
dec
cmp
inc
inc
enter
retf
pop
popf
push
push
ret
mov
push
pop
or
pop
push
push
pop
push
xchg
movs
pop
(bad)
mov
cmp
or
loop
mov
pop
popa
pop
(bad)
fpatan
repz
inc
fstp
(bad)
mov
add
movs
sub
xchg
mov
pop
cmp
rol
jns
repz
loope
out
mov
pushw
loopne
push
pop
in
mov
mov
ret
cmp
ja
fnstenv
loope
adc
jnp
sbb
jmp
pop
add
daa
ret
xlat
gs
into
jge
dec
jmp
lods
inc
int
outs
shr
cmp
shl
dec
adc
nop
and
jbe
js
fdivr
pop
inc
or
cwde
fsubr
jl
jo
sub
push
out
out
jge
and
push
or
movs
mov
icebp
mov
sbb
sub
mov
adc
xchg
out
jge
inc
dec
jge
cmp
pusha
bound
jo
xchg
repnz
iret
(bad)
fs
mov
addr16
and
cmps
pop
gs
jbe
and
cmp
push
push
add
jbe
data16
sbb
dec
fimul
jmp
xlat
repz
cmps
sti
dec
cmp
inc
int
out
mov
iret
lds
cmp
repnz
lock
in
out
jmp
and
pop
mul
cmps
dec
shl
xor
mov
aam
outs
add
cdq
popf
out
test
in
adc
loope
std
adc
pushf
ja
or
pop
push
sbb
loopne
inc
and
sub
mov
hlt
and
test
outs
mov
dec
popa
enter
jns
xchg
lea
jecxz
sbb
(bad)
pop
push
and
mov
aaa
mov
sub
icebp
popa
or
popf
scas
fbld
xor
(bad)
(bad)
pop
pop
jmp
pop
jge
test
mov
addr16
js
popf
fwait
sahf
retf
jmp
imul
mov
mov
fidivr
pop
push
fistp
mov
inc
push
retf
mov
(bad)
xor
jmp
pushw
push
cmp
push
jl
cmps
pop
lods
in
pop
repnz
sbb
les
mov
retf
mov
movs
pop
and
in
add
outs
xlat
push
lods
sub
inc
mov
mov
aaa
adc
and
add
popf
inc
scas
fld
sbb
out
pop
(bad)
(bad)
mov
xor
xor
sub
push
mov
or
leave
retf
push
fsubr
dec
les
idiv
push
dec
lods
cmps
jecxz
pusha
push
jns
ret
add
leave
push
mov
sub
ja
call
and
popa
push
sar
pop
outs
imul
fcomp
inc
dec
in
cmp
ins
and
aam
leave
jmp
mov
out
xchg
sub
lods
adc
push
mov
leave
pushf
xor
data16
cwde
sbb
push
out
stos
xlat
out
jmp
sub
rol
and
out
loop
sbb
adc
xor
pop
call
(bad)
imul
xor
aaa
pop
jle
cmps
and
fmul
ror
sbb
imul
aam
imul
mov
cmp
data16
shl
popa
xchg
or
cmp
sub
jle
ud2
mov
ret
add
(bad)
xchg
lds
and
push
call
fcomp
hlt
inc
and
addr16
scas
in
jg
push
fnstcw
cmp
jb
lahf
add
mov
call
jge
pop
repnz
adc
cmp
sbb
retf
xlat
lock
gs
cmp
dec
(bad)
stc
aas
adc
ja
sar
lods
add
pop
pop
int3
out
inc
jo
mov
in
repz
jbe
push
sub
dec
jecxz
jne
push
or
scas
push
mov
sbb
mov
xorps
adc
(bad)
std
hlt
mov
jmp
out
add
adc
pop
sub
(bad)
ds
test
retf
out
retf
xchg
clc
out
gs
sub
mov
xor
(bad)
inc
enter
clc
cs
mov
cmp
pop
mov
push
cmp
loope
dec
lds
mov
add
and
jmp
fild
movs
push
ja
jns
rcr
inc
in
hlt
data16
hlt
adc
iret
mov
adc
ror
nop
mov
clc
mov
shl
cmp
adc
mov
(bad)
test
and
pop
pusha
lds
pop
pop
xor
sub
sbb
mov
sbb
xchg
lock
xor
rol
xor
(bad)
xor
inc
int3
ror
mov
pop
cmp
xor
std
les
enter
ja
jecxz
fs
mov
pusha
call
mov
rcl
pop
pop
pushf
sbb
(bad)
in
xchg
and
ret
jae
clc
fadd
xchg
and
inc
sbb
(bad)
push
rcl
cmp
in
lds
addr16
nop
dec
cmp
inc
lds
int3
sub
pop
xchg
fst
imul
push
jae
rcl
xor
and
add
ja
xor
sub
div
pop
sub
sti
inc
ins
ror
and
ret
mov
sub
jg
leave
lea
mov
add
add
mov
dec
xor
cmc
add
inc
inc
mov
test
dec
dec
mov
pop
mov
jae
ds
scas
out
xlat
mov
mov
(bad)
(bad)
repnz
pusha
aaa
out
push
outs
out
inc
mov
jnp
xor
pop
in
cwde
sbb
cmp
jg
or
and
sbb
and
dec
ins
aam
jmp
sub
xor
xchg
mov
inc
adc
scas
aaa
lods
push
cmp
cmps
gs
cmp
xchg
xchg
cmp
ds
mov
out
frstor
inc
leave
mov
inc
loopne
cmps
sahf
pop
jg
push
sti
lods
das
movs
add
dec
xor
pop
div
adc
imul
mov
add
movs
(bad)
retf
fdivr
pop
mov
mov
ror
enter
xlat
cmp
paddq
aas
xlat
xlat
xor
popa
add
or
mov
(bad)
in
mov
fld
aam
hlt
int
(bad)
call
xchg
rcl
arpl
dec
mov
xor
xor
aaa
add
add
(bad)
mov
lds
jmp
sar
lods
pop
jp
adc
aas
xchg
rcl
cmp
imul
pop
nop
adc
jmp
push
push
add
(bad)
sub
ins
stc
movs
jmp
xchg
scas
test
aam
mov
adc
test
pop
cli
int3
jb
in
iret
xchg
cmp
pop
dec
mov
icebp
jmp
fistp
xchg
cli
dec
and
xchg
sub
fnstenv
add
shl
test
movs
sub
punpckhwd
push
dec
push
push
cld
sbb
cld
sbb
jmp
inc
out
adc
jge
pop
mov
mul
(bad)
js
psadbw
cli
in
or
push
mov
mov
add
jl
sbb
in
rcr
fisubr
sti
lods
call
fsubrp
or
bound
test
push
mov
mov
or
mov
jno
rol
call
invd
iret
or
xchg
pop
jg
sti
dec
push
clc
cmc
inc
push
scas
test
retf
out
xchg
cmps
sti
pop
or
test
push
xchg
mov
pop
scas
ds
and
push
mov
pop
jl
sahf
and
or
leave
inc
mov
mov
and
in
mov
js
dec
clc
xchg
push
fs
inc
nop
mov
push
dec
ret
mov
or
cmc
adc
das
cli
jl
test
xor
enter
xlat
int
mov
gs
fdivr
js
ret
mov
leave
push
and
stc
scas
out
mov
(bad)
call
mov
sbb
and
jge
push
inc
sar
push
not
inc
pop
ret
inc
jnp
cdq
inc
and
test
adc
jmp
add
clc
out
mov
(bad)
adc
clc
jnp
lea
jo
cmp
push
ins
mov
cmp
mov
xor
lds
and
rol
neg
dec
jno
or
mov
sub
sub
adc
jecxz
in
mov
fisttp
cmp
das
hlt
push
jns
aad
dec
(bad)
mov
daa
jne
int
cmp
jge
pushf
aam
cmps
cmp
lods
dec
pextrw
es
push
in
xchg
mov
stc
adc
fsubr
mov
sbb
vmwrite
test
sbb
les
fucomp
dec
inc
out
(bad)
in
cs
xor
add
repnz
into
cld
repz
or
pop
jp
push
sbb
stos
mov
fadd
push
int3
add
ret
icebp
rcr
mov
xchg
pop
int3
scas
xor
adc
ins
(bad)
jg
lds
xor
fwait
xchg
sub
cmps
adc
fsubr
ror
mov
fldenv
and
out
jno
or
mov
cmp
icebp
retf
call
fldl2e
stos
in
sbb
mov
outs
loop
pop
ror
aad
inc
mov
xor
data16
jmp
ror
push
test
cdq
cmps
stc
sub
dec
mov
dec
jae
(bad)
cmp
loopne
ins
fdiv
cmp
sbb
outs
xor
ja
dec
cmp
call
js
fs
add
mov
out
dec
int3
or
jno
std
lock
jp
leave
sti
sub
int
leave
bound
(bad)
jb
inc
dec
push
fdivr
xchg
push
push
dec
sub
loopne
xchg
pop
into
xchg
push
and
icebp
adc
sti
dec
cli
movs
and
fistp
out
jb
lods
jmp
fidiv
lahf
pop
mov
ins
push
(bad)
sbb
mov
push
outs
leave
mov
out
cs
out
into
sar
xchg
pop
std
aas
sub
inc
xchg
sahf
cwde
les
stos
and
sbb
dec
or
mov
mov
(bad)
(bad)
adc
pop
mov
out
inc
repnz
push
jl
jecxz
jl
jecxz
mov
sbb
adc
lock
cs
push
ffree
(bad)
ficom
gs
mov
in
stc
fst
push
inc
pusha
addr16
bound
je
div
pop
inc
sar
lock
mov
out
sbb
scas
xchg
adc
jb
sbb
adc
movs
mov
cli
dec
xor
xchg
aas
lds
inc
sub
cdq
sbb
shl
(bad)
sub
fld
popf
loopne
rep
test
sbb
ret
mov
push
xor
pop
inc
pop
daa
push
lea
aaa
and
add
sub
mov
ret
xchg
jns
stc
xor
sbb
cmp
call
ds
popa
frstor
sub
pop
(bad)
or
fild
lds
imul
xchg
enter
(bad)
xor
shr
xor
and
aam
cs
outs
out
push
enter
and
cwde
stc
test
push
push
xor
inc
(bad)
lds
xchg
jle
or
xor
cwde
sahf
cmp
outs
test
stos
push
mov
outs
out
sub
and
add
push
xchg
imul
popa
mov
push
mov
and
mov
popa
xlat
dec
sahf
out
jmp
int3
daa
imul
loopne
addr16
jle
pop
adc
add
rcl
pop
jl
aam
ins
xchg
adc
push
into
sbb
mov
sbb
mov
or
push
in
iret
cmp
arpl
dec
xor
mov
imul
outs
sar
(bad)
or
sbb
pop
out
jecxz
push
xchg
inc
pop
dec
push
cmps
test
aam
out
jge
push
rcl
sub
mov
stc
mov
push
mov
fcomip
pop
dec
dec
scas
aaa
or
std
stos
push
inc
pop
and
jecxz
sbb
inc
xchg
test
sar
nop
in
jo
js
sbb
mov
pop
push
pop
pop
and
data16
hlt
aaa
lods
adc
push
adc
add
int3
or
inc
sbb
mov
jmp
xchg
push
mov
popa
aas
pop
inc
or
shl
or
sbb
repnz
int
dec
inc
popf
cmp
sub
fcom
sub
dec
jle
jl
cli
xchg
(bad)
mov
xchg
addr16
retf
cmp
mov
inc
je
inc
pop
repnz
ret
push
sti
adc
add
into
aas
add
push
fsubr
mov
rcl
and
cmp
rcr
into
sub
(bad)
cmp
imul
ss
gs
jp
pop
jmp
les
ret
lahf
mov
stc
xor
rcl
ud2
mov
(bad)
loopne
jle
push
inc
fmul
call
icebp
mov
inc
push
outs
pop
movs
and
and
aam
in
inc
and
xor
lods
or
sahf
and
fcomp
ret
inc
inc
or
retf
outs
call
cmp
add
inc
popf
outs
xlat
(bad)
adc
mov
int
out
stos
adc
pop
jne
sub
mov
daa
retf
fwait
dec
ret
mov
mov
sbb
stos
(bad)
jb
or
push
daa
gs
xor
push
dec
lahf
ret
stos
push
scas
cmps
xchg
(bad)
test
movs
cmps
sub
cmps
retf
mov
fist
loopne
pop
inc
push
sti
mov
mov
and
fld
jb
jle
outs
rol
jns
ds
mov
xchg
repz
outs
xor
lock
pusha
rol
hlt
aam
xchg
mov
mov
and
mov
xor
data16
mov
or
and
xor
cmp
push
out
daa
aaa
cmps
leave
jmp
mov
cmc
js
sub
and
add
retf
test
xor
stc
or
xchg
xchg
push
cmp
clc
cld
mov
cmp
push
sbb
pop
pop
cs
dec
jg
je
loope
cmps
jbe
rcl
bound
pop
int3
(bad)
jno
dec
addr16
jp
scas
in
and
add
jb
lds
mov
cmps
mov
(bad)
fstp
mov
lahf
xchg
dec
sbb
or
pop
fxch
stc
mov
mov
arpl
and
sbb
mov
inc
jmp
mov
out
jo
js
jo
aaa
int
or
int
jle
cmp
cmp
mov
call
cmp
adc
dec
push
inc
add
cmp
xor
jno
jmp
push
arpl
arpl
sbb
mov
clc
fdivp
mov
cmp
xor
outs
adc
popf
stc
clc
pop
xor
inc
shl
call
or
mov
test
pop
rcr
dec
(bad)
stc
out
pop
lods
jne
outs
adc
jp
gs
arpl
mov
retf
popf
dec
xchg
addr16
mov
jne
sub
cdq
cmp
mov
div
xchg
mov
lods
and
rcr
shl
mov
pop
std
jge
adc
fistp
pusha
inc
sbb
xchg
and
xchg
sbb
mov
jb
jae
pop
mov
(bad)
enter
xchg
pop
movs
add
push
cld
test
add
js
lods
push
dec
aam
arpl
ds
push
aad
ins
jecxz
repz
out
pop
je
cmps
(bad)
test
sbb
call
shr
cmp
pop
mov
mov
inc
mov
(bad)
out
xchg
iret
xchg
cmp
pop
mov
mov
sti
outs
xor
dec
(bad)
frstor
xchg
add
fcomi
dec
pop
stc
in
adc
cmps
inc
cmp
cmp
mov
add
sbb
push
fdiv
xor
retf
cmps
pop
inc
imul
popa
xchg
pop
int
or
adc
jmp
int3
call
jecxz
dec
cli
cmp
adc
repnz
xlat
inc
dec
pop
sahf
ret
sub
xchg
push
cli
je
popf
mov
mov
push
push
icebp
shl
mov
je
xchg
aas
mov
loopne
addr16
push
cmc
ds
mov
adc
xchg
push
ja
rcl
in
(bad)
fisttp
push
mov
jb
push
sub
aas
xchg
add
jo
call
outs
jg
add
and
out
sbb
and
push
test
cmps
jnp
xchg
lods
pop
bound
cmp
mov
stos
es
or
test
popf
ds
imul
push
dec
(bad)
xchg
pop
in
xchg
les
mov
and
mov
(bad)
sbb
and
popf
jmp
nop
xchg
inc
sub
dec
sbb
or
push
xchg
xlat
fs
cmp
jns
dec
mov
cmp
movs
mov
ja
mov
or
movs
mov
jle
pop
sbb
push
int
cdq
(bad)
aad
jno
jnp
mov
xchg
cwde
jmp
stos
scas
les
out
shr
jp
mov
arpl
fmul
loop
cmp
outs
mov
fwait
sbb
das
mov
test
and
or
or
daa
(bad)
pop
push
pop
inc
or
xor
pop
adc
movs
inc
push
xor
add
cmp
retf
xor
pushf
pop
rol
lods
cmps
push
xchg
int
rcr
sti
mov
clc
stc
outs
mov
xor
hlt
(bad)
test
push
pushf
int
inc
sub
inc
push
fwait
stos
sub
xchg
pop
xor
imul
and
sub
fcom
mov
fxch
(bad)
pop
jne
ret
in
xor
test
pop
mov
imul
in
pop
adc
rcl
(bad)
jl
adc
sub
and
in
mov
adc
or
ds
push
mov
fdiv
es
xor
rcr
sbb
cs
jecxz
inc
mov
(bad)
(bad)
(bad)
push
data16
push
ret
add
movs
or
jno
dec
xor
mov
jne
mov
dec
inc
das
iret
cmp
aaa
push
jl
xchg
mov
or
jnp
outs
jecxz
mov
aam
xchg
test
jecxz
call
and
inc
xor
clc
mov
pop
push
imul
test
jmp
push
mov
das
jg
xchg
mov
aaa
or
jnp
mov
xor
jo
xor
imul
push
jno
rol
stos
mov
(bad)
lods
mov
jbe
sbb
ror
jns
into
pop
rcr
sub
add
dec
inc
sub
push
inc
test
cmp
add
or
push
sub
xchg
push
mov
dec
lods
sbb
push
lds
pusha
inc
ja
or
jbe
dec
and
lods
inc
xchg
jecxz
imul
ret
add
fst
dec
(bad)
or
cmc
mov
or
mov
xchg
adc
into
adc
jb
xlat
shl
(bad)
push
in
repz
xchg
xor
pop
jp
pop
in
mov
mov
sub
sub
ror
push
mov
aam
mov
adc
sbb
and
nop
clc
and
ins
mov
sub
jl
fimul
jbe
stos
ret
test
scas
test
sub
inc
(bad)
cs
adc
fldz
aad
mov
js
outs
cmp
xchg
icebp
add
inc
pushf
mov
test
clc
and
mov
pop
mov
ds
movs
js
inc
and
sub
push
cli
push
adc
mov
out
add
or
and
cmp
repz
rcl
mov
in
cmc
inc
es
push
test
push
push
and
into
scas
inc
rcl
call
sub
inc
retf
aas
mov
push
jge
test
ins
dec
sbb
sbb
bound
or
push
movs
outs
push
imul
jae
jo
imul
mov
inc
mov
mov
inc
push
addr16
stos
rcl
inc
and
dec
cmp
(bad)
js
mov
pop
shl
rol
mov
scas
xchg
push
mov
loope
enter
ficomp
mov
sbb
sbb
mov
bound
addr16
mov
and
aaa
jnp
(bad)
je
pushf
retf
mov
pop
mov
inc
and
repnz
les
inc
cmp
(bad)
xor
arpl
in
pop
inc
jp
mov
cwd
daa
(bad)
pushf
jl
leave
or
or
sbb
cmc
ror
sbb
out
sbb
cmp
dec
pusha
push
jnp
add
popa
or
inc
jno
mov
cdq
cld
frstor
inc
and
cmps
outs
retf
aam
push
popa
sbb
pop
fidivr
xor
pop
pop
dec
mov
or
cld
or
jns
repz
or
repnz
cmp
add
shl
retf
sbb
push
sub
push
shl
or
clc
inc
adc
push
sbb
hlt
outs
je
inc
ret
scas
arpl
or
addr16
xchg
adc
xchg
ret
jmp
sbb
push
push
movs
repz
lahf
call
ror
ror
aad
gs
bound
loopne
sbb
ss
jns
xchg
sahf
mov
fistp
dec
lahf
rcr
test
fwait
xor
shl
xchg
cmc
out
mov
xchg
rcr
loopne
std
addr16
(bad)
call
pop
int3
arpl
movs
or
xchg
fwait
mov
out
cmp
or
push
cmp
gs
jl
mov
sub
addr16
mov
dec
xlat
pop
fnsave
xchg
sub
inc
ja
fwait
shr
and
cmp
cmp
or
sbb
push
sub
inc
prefetch
jecxz
fcom
sti
adc
shl
mov
in
xchg
mov
stos
push
cs
aam
push
shl
cmp
xchg
test
ffreep
retf
or
idiv
mov
js
test
fwait
shl
je
xor
mov
adc
mov
sbb
xchg
paddusw
add
pop
aaa
add
mov
mov
mov
dec
mov
ss
xor
retf
jo
call
mov
mov
jb
push
pop
add
mov
or
js
inc
jle
addr16
out
mov
jmp
and
add
push
repz
mov
(bad)
adc
(bad)
fldenv
and
mov
inc
xor
jbe
aaa
mov
fst
jb
ds
mov
aaa
fs
jbe
(bad)
mov
cli
mov
sub
add
gs
dec
(bad)
and
lods
cmp
test
or
dec
sti
mov
movs
jne
cmp
push
xchg
int3
cmps
adc
jnp
xchg
loope
sub
push
sub
adc
fbstp
or
dec
sar
adc
or
xchg
jecxz
in
or
adc
js
pusha
inc
loop
xchg
out
btc
mov
adc
out
mov
xor
dec
test
dec
jge
jbe
and
push
push
test
adc
(bad)
dec
js
daa
test
mov
(bad)
push
push
xchg
pop
or
push
push
push
arpl
xchg
stc
retf
(bad)
inc
push
loopne
dec
push
jb
mov
inc
je
in
pushf
mov
cwde
add
inc
mov
pop
jp
(bad)
push
into
jo
cmp
movs
pop
out
cmp
inc
cwde
imul
cmps
fstp
pushf
cmps
int3
push
in
rcr
not
dec
adc
pop
xchg
pusha
(bad)
sub
pusha
xchg
stos
outs
(bad)
cmp
adc
ret
push
push
sti
mov
(bad)
jle
cmp
push
imul
leave
lock
inc
mov
mov
xor
mov
mov
jb
pop
jo
sub
lock
push
pop
push
neg
xor
fdivrp
not
push
cmc
mov
iretw
dec
jno
fld
inc
out
cmp
out
icebp
and
adc
sahf
xor
push
shr
loope
mov
or
add
jp
movs
mov
je
cwde
xor
xchg
jnp
add
lock
stc
xor
daa
xchg
inc
or
outs
push
pop
cli
fnstsw
enter
push
push
add
int
call
xchg
outs
aam
nop
xor
xchg
std
and
mov
cmp
dec
fimul
pusha
dec
cmps
aam
push
push
or
dec
test
jmp
rcr
icebp
cld
aam
not
cmc
xor
mov
push
aaa
push
mov
push
(bad)
fcmovne
xlat
dec
in
fiadd
aaa
ins
addr16
jmp
lods
pop
push
sbb
mov
cmc
jmp
adc
in
sub
jnp
inc
cld
mov
fiadd
fsubr
ffreep
adc
pop
cmp
fdivr
repnz
(bad)
push
or
mov
or
push
jmp
mov
outs
jg
add
loopne
outs
mov
repnz
dec
mov
cmps
out
adc
add
idiv
call
lods
sti
and
jmp
or
cdq
test
mov
daa
mov
into
(bad)
mov
in
lds
xchg
add
(bad)
clc
js
add
int3
cmc
push
jnp
popa
jne
clc
in
and
ja
xlat
arpl
xchg
hlt
mov
cmps
cmps
and
rol
mov
icebp
mov
std
rcr
add
lods
mov
mov
fisub
gs
xor
push
mov
stc
sbb
ret
aam
mov
sub
fisub
jmp
add
mov
dec
retf
test
mov
lahf
xchg
stos
inc
add
xor
cmps
mov
loope
aad
xor
nop
adc
out
push
push
mov
inc
push
add
jmp
mov
lods
mov
aam
sbb
or
jle
xchg
loope
and
ficom
popf
inc
adc
mov
mov
sub
aaa
(bad)
frstor
dec
jge
iret
add
xor
jle
xlat
dec
cmp
mov
repz
in
sbb
push
call
xchg
mov
pop
push
cwde
div
cs
push
mov
cmp
adc
loopne
or
dec
into
movs
pop
test
push
mov
test
stc
mov
and
int3
xor
clc
hlt
jo
or
es
push
adc
aas
and
mov
sbb
(bad)
cli
aam
(bad)
data16
retf
lods
cdq
mov
das
add
outs
mov
xlat
int3
fsubr
cwde
cdq
leave
cmps
dec
mov
jb
pushf
mov
test
mov
xchg
clc
outs
aad
and
add
cmp
(bad)
fidiv
fdivr
sar
ja
or
les
or
in
in
mov
inc
inc
pushf
cmp
jae
mov
and
ficomp
push
mov
pop
xor
jg
neg
ja
(bad)
(bad)
xor
adc
in
and
outs
mov
xchg
adc
mov
sub
daa
inc
fisttp
out
cmp
fild
ja
dec
cdq
dec
lods
imul
daa
dec
das
sub
jmp
cdq
lock
repz
ja
mov
dec
inc
dec
xchg
xor
dec
xor
das
lods
sahf
inc
popa
mov
xchg
adc
sbb
lods
dec
and
mov
popa
mov
sub
stos
sar
psubsb
movs
sbb
mov
xor
aam
(bad)
ins
xor
daa
sbb
shl
fmul
cmp
bnd
imul
fwait
shl
test
xor
pop
rcr
fiadd
aam
data16
cmp
xchg
scas
lahf
mov
xor
jge
push
and
inc
inc
test
xor
sbb
adc
test
dec
mov
mov
sbb
jno
push
sub
or
cmc
dec
xor
jle
imul
cdq
shr
cdq
inc
fsubrp
push
cmps
dec
sbb
test
pop
cmp
add
sbb
dec
mov
jmp
push
adc
push
test
add
movs
fmulp
mov
add
add
push
out
xchg
in
mov
xlat
mov
je
jno
add
mul
cmps
dec
xor
mov
pop
pop
dec
mov
stos
(bad)
mov
jge
dec
inc
xor
mov
cmp
or
pop
push
and
rcr
pop
pop
mov
jge
mov
shr
jp
mov
dec
mov
xchg
fwait
(bad)
jmp
out
les
mov
or
icebp
cdq
inc
push
xor
mov
retfw
or
jp
ss
aas
arpl
mov
data16
jbe
or
lock
pop
inc
pop
xchg
mov
es
aaa
jae
cmps
icebp
(bad)
ficom
fs
jnp
dec
fldenv
and
mov
add
jae
pop
out
push
imul
loope
mov
dec
mov
aaa
inc
and
(bad)
cmc
loopne
push
sbb
push
xchg
out
xchg
sbb
push
mov
dec
fs
ret
(bad)
jecxz
(bad)
push
mov
pop
adc
cmp
xchg
loop
stos
shl
into
loope
sbb
pop
shr
pop
push
shr
test
pop
mov
cmp
inc
call
mov
(bad)
fstp
cmp
push
xchg
scas
cmp
pushf
xlat
cld
loope
or
xor
adc
sub
fldenv
(bad)
mov
in
sbb
pop
dec
out
cmp
mov
adc
lock
or
inc
push
shr
jmp
dec
cmp
cmp
addr16
fwait
inc
popa
dec
cmp
addr16
popa
dec
into
mov
cdq
adc
or
pop
adc
stos
imul
pop
(bad)
outs
sub
rol
cmp
fstp
sub
aas
or
enter
icebp
lods
leave
adc
je
imul
cmp
sub
push
into
add
imul
add
retf
(bad)
mov
retf
jno
ficom
adc
add
ror
xchg
outs
sti
and
ror
xor
jbe
mov
outs
jne
popf
je
jg
mov
rol
movs
imul
lods
cmc
mov
and
push
jns
out
sub
cdq
retf
imul
jb
jnp
jecxz
int
or
or
call
dec
(bad)
ret
cld
mov
retf
int3
xchg
sahf
in
pushf
jmp
adc
outs
pushf
xor
sar
pop
and
adc
add
and
stos
in
mov
sti
inc
jnp
imul
fisttp
push
cmp
cli
lods
cmp
push
sbb
jp
repz
out
in
neg
sbb
adc
push
mov
pushf
aam
add
int3
pushf
cs
dec
loope
clc
mov
jl
jne
scas
add
scas
xor
sti
sbb
add
in
pop
lea
push
inc
or
jns
popf
push
int3
shr
xor
mov
adc
dec
(bad)
(bad)
fwait
inc
sub
mov
sbb
or
cli
dec
jno
stc
adc
push
pop
jo
leave
(bad)
movs
fdivr
imul
jb
sbb
xor
test
jecxz
mov
sbb
mov
add
and
dec
mov
shr
xchg
xchg
cmps
ret
pop
and
and
jmp
repz
(bad)
sbb
pop
pop
jge
jle
addr16
das
retf
into
dec
out
push
mov
int
mov
addr16
arpl
mov
jge
or
sahf
pop
or
jecxz
dec
bound
cmp
xlat
pop
sub
call
in
loope
push
mov
mov
adc
adc
dec
xor
jb
aaa
ret
push
adc
cmp
arpl
dec
mov
or
mul
mov
and
bsf
pop
add
push
pop
or
cs
retf
xchg
fstp
cmp
pop
ficomp
adc
dec
pop
mov
loop
call
inc
jecxz
sub
ret
fsub
push
inc
je
dec
mov
and
movs
pop
cdq
mov
sub
(bad)
add
retf
jae
adc
fbstp
sub
mov
les
sub
cmp
push
mov
or
(bad)
addr16
and
dec
and
pop
adc
or
gs
sub
xchg
xor
push
mov
jo
push
cs
and
cmp
adc
or
call
pop
push
mov
lds
mov
cmp
retf
ins
seto
xchg
fs
fist
mov
call
ss
ss
push
sub
aam
out
jle
aaa
js
mov
xchg
adc
cli
addr16
pop
loop
inc
push
leave
xchg
shl
mov
pushf
imul
xchg
mov
fmul
ss
repz
cmp
inc
mov
adc
and
adc
ins
push
push
lds
jnp
fiadd
mov
lods
sbb
add
fcmovu
xchg
movs
rcl
cmps
leave
pop
jo
(bad)
loopne
jle
cmp
xchg
je
cwde
add
xor
ret
mov
cmp
arpl
nop
mov
inc
and
push
sti
fisub
(bad)
inc
push
and
enter
mov
pop
jmp
add
sub
into
and
mov
xchg
jge
shl
repz
jge
inc
and
and
leave
dec
push
jae
pop
adc
xchg
es
loop
push
das
add
mov
call
and
sub
test
xchg
xor
(bad)
fsubr
sub
retf
cwde
out
sub
xlat
arpl
stos
mov
dec
hlt
sahf
xor
es
(bad)
outs
jo
mov
cmps
lea
cmp
dec
jns
lds
test
xor
adc
fisub
add
and
aad
and
data16
and
ss
in
mov
jnp
pop
jl
fsub
lods
lods
das
in
push
inc
imul
mov
push
cmps
xchg
mov
jns
cmp
push
neg
mov
xchg
mov
arpl
movs
outs
cwde
(bad)
jns
xchg
adc
push
iret
rcr
fiadd
push
scas
jo
lea
xor
cwde
sbb
pop
or
lods
lods
js
leave
btr
scas
mov
push
push
sbb
fidiv
daa
cwde
mov
sbb
push
and
bound
fld
mov
sub
leave
lods
jmp
cmps
ret
gs
xor
nop
in
push
pop
or
sahf
in
xchg
xchg
xor
popa
cmp
mov
sbb
ds
mov
dec
add
je
inc
iret
or
or
enter
(bad)
and
aas
das
pop
popa
imul
mov
sbb
push
test
(bad)
aad
push
jbe
into
ret
mov
mov
clc
mov
mov
add
cmc
mov
jb
jp
outs
dec
into
mov
loop
(bad)
cmps
ror
sub
and
adc
jmp
dec
in
and
push
or
in
push
mov
inc
cmps
je
add
(bad)
std
in
dec
or
push
(bad)
lds
push
retf
adc
hlt
cwde
lea
inc
push
jle
leave
cs
ja
cmp
outs
fisubr
in
mul
fidivr
mov
mov
and
push
xchg
retf
mov
adc
push
(bad)
(bad)
push
ret
(bad)
aas
add
and
mov
and
ja
and
rol
sbb
or
and
add
call
ret
pop
cmp
mov
xor
call
rep
push
(bad)
outs
lea
(bad)
es
ds
sti
pop
add
push
mov
xchg
loopne
or
mov
pusha
rol
push
xchg
loop
mov
ds
fisttp
rcr
dec
(bad)
fistp
mov
adc
shl
inc
inc
xchg
fs
pop
and
and
je
cld
sbb
jno
push
jae
mov
pop
test
hlt
mov
sbb
imul
pop
or
stos
pop
sbb
xor
mov
sbb
in
call
mov
out
ja
aaa
sub
adc
mov
lods
push
movs
ret
(bad)
jecxz
movs
int3
sbb
cdq
or
mov
adc
mov
xor
pop
leave
popa
pop
cmp
cmp
mov
dec
jge
or
(bad)
aam
repz
xlat
jle
mov
hlt
mov
or
mov
(bad)
push
xchg
push
repz
je
inc
mov
out
mov
sbb
sbb
dec
or
pop
test
and
dec
xlat
call
ja
sbb
dec
adc
add
jecxz
enter
pusha
enter
mov
stos
(bad)
adc
repnz
sbb
jno
sub
and
push
push
cmps
es
aas
push
pop
mov
jmp
adc
sbb
stos
sub
xchg
push
dec
inc
dec
pop
adc
cmp
sbb
jecxz
pop
push
add
call
push
push
cmc
xchg
rol
cli
or
test
mov
mov
jns
sub
loop
xchg
dec
cmp
stos
or
fldenv
(bad)
jg
iret
push
ret
pop
pop
xor
daa
retf
loop
sub
ret
add
sti
cli
ss
ret
in
jmp
xor
in
pop
in
aaa
inc
sub
mov
fbld
and
int
rcl
jl
inc
sbb
loope
sahf
xor
add
fdivr
mov
gs
sbb
mov
scas
iret
fist
cmp
xchg
lea
enter
mov
loope
ins
fcomp
and
jnp
sub
fsubr
xchg
inc
cmp
sbb
mov
adc
jne
and
adc
outs
in
adc
mov
jg
imul
pop
mov
fistp
pop
xor
mov
out
push
mov
adc
cmps
outs
icebp
fiadd
call
dec
fdiv
dec
lds
outs
lods
mov
in
mov
jmp
test
xor
imul
mov
inc
sbb
xchg
xor
push
(bad)
div
(bad)
mov
daa
pop
cmps
(bad)
cdq
cli
mov
rcr
rcl
cmp
pop
and
aaa
or
movs
scas
pop
lds
push
aam
test
jge
mov
retf
and
push
xchg
xor
repz
icebp
inc
loopne
retf
fwait
(bad)
in
loope
lea
xor
pusha
push
push
out
stc
aad
adc
inc
mov
jnp
sbb
jb
pop
test
xor
in
gs
xor
or
or
je
loopne
mov
jbe
lds
sbb
fldcw
js
inc
jmp
jnp
icebp
rcl
sbb
arpl
push
mov
stos
stc
in
or
or
xor
xor
dec
rcl
addr16
xchg
mov
into
inc
xchg
cli
aad
push
aas
outs
outs
std
mov
push
ret
mov
and
cmovne
cmc
cmp
in
sub
das
ss
xor
sub
and
sbb
arpl
inc
out
lock
and
sti
dec
fs
in
mov
leave
retf
or
loop
xor
push
fcmovnb
or
pop
xchg
mov
jecxz
ds
push
push
pop
xlat
sub
sbb
push
jg
dec
test
test
mov
jnp
mov
(bad)
call
lea
int
xor
cmps
outs
aas
inc
fwait
sahf
out
mov
mov
mov
jno
mov
push
stos
ss
xor
dec
dec
data16
mov
nop
arpl
cmp
jnp
mov
mov
lock
stc
adc
jl
loope
jb
mov
ds
adc
fisttp
mov
ret
or
scas
or
icebp
test
loop
adc
lds
cld
sub
jg
mov
dec
mov
out
out
push
mov
out
scas
dec
pop
pop
adc
enter
aad
das
sbb
pop
jge
stos
lds
ins
ins
test
adc
adc
scas
jecxz
or
imul
pushf
inc
adc
inc
ins
add
push
js
jne
jecxz
pop
mov
add
push
data16
sub
sub
mov
dec
out
dec
aas
jo
xor
scas
mov
rcl
cmp
imul
in
cmp
jl
jmp
mov
dec
fist
mov
and
xchg
test
mov
or
push
inc
inc
icebp
stos
sbb
stos
out
(bad)
jno
dec
pop
xor
mov
adc
cmp
push
mov
inc
push
mov
dec
cmp
je
aad
lea
inc
in
and
sbb
mov
push
jg
xor
in
pop
sbb
cs
shl
fs
ja
xor
xor
test
jns
sub
(bad)
fisub
mov
pop
dec
add
add
cmp
pop
hlt
fmul
out
je
shl
test
sub
pusha
repnz
fs
dec
iret
pop
daa
test
adc
cwde
into
mov
push
lahf
retf
mov
jmp
add
add
dec
xor
stos
cld
add
xor
loopne
or
mov
mov
adc
(bad)
aas
or
repz
es
cmp
cmp
push
dec
int3
addr16
stc
les
push
and
clc
scas
adc
(bad)
adc
add
mov
stos
outs
enter
pop
pop
xor
dec
adc
sub
cmp
pop
jmp
adc
mov
mov
and
sub
push
jmp
or
popa
ret
add
movs
fcmovnb
and
stos
into
pusha
movs
jbe
dec
jo
jmp
nop
call
pop
xchg
pop
clc
test
inc
lods
jnp
mov
xor
push
xchg
mov
call
inc
or
(bad)
or
mov
jns
cmps
loop
mov
cld
pushf
popa
shl
movs
sub
pop
cmp
out
inc
stos
fild
pop
push
sbb
sub
jbe
mov
jno
repnz
push
retf
lock
pop
pushf
sar
mov
test
xchg
lea
dec
pop
btc
(bad)
out
je
mov
xchg
ficomp
or
(bad)
imul
mov
clc
ret
(bad)
fisttp
ins
hlt
xor
pop
std
sti
stc
loope
add
mov
xchg
sbb
jmp
jge
mov
pop
jb
imul
cmp
mov
jbe
sub
movs
lock
js
xchg
mov
xchg
mov
xlat
mov
xor
mov
sbb
xlat
mov
jbe
popa
fiadd
and
sub
in
jne
adc
fst
pop
inc
sbb
dec
adc
inc
xor
xchg
mov
jo
idiv
inc
stc
loope
add
dec
scas
stos
pop
cmp
mov
retf
leave
bound
push
aas
pop
jno
imul
out
lods
dec
mov
bound
fmulp
pusha
adc
ret
adc
mov
and
mov
test
out
or
(bad)
in
into
jnp
jl
int
jg
mov
jns
or
cwde
xchg
sub
enter
sub
fisub
std
jb
imul
pop
push
xchg
clc
add
sub
ja
push
xchg
mov
aam
ins
test
and
data16
and
out
and
movs
pop
xor
dec
jnp
cmp
scas
in
cmp
jg
pusha
cmp
jns
shl
pop
mov
jge
add
in
cmp
xor
stos
mov
pusha
mov
(bad)
sti
not
shl
xor
sbb
popa
push
dec
pusha
in
jle
inc
mov
addr16
pop
sbb
sbb
dec
xor
mov
sbb
sbb
mov
or
and
push
pop
and
les
stos
jns
and
mov
mov
pop
add
stos
out
mov
lahf
pop
mul
icebp
popa
mov
(bad)
and
movs
push
lahf
cs
mov
ja
and
repnz
test
in
aad
cmp
fwait
inc
and
jle
scas
mov
inc
and
test
dec
repz
aaa
and
xchg
inc
repz
neg
mov
and
lods
add
test
aaa
inc
xor
dec
clc
mov
fwait
jb
cmp
pop
xchg
mov
sub
pop
sbb
shl
jmp
stos
mov
xchg
jecxz
cdq
xor
xor
shl
or
pop
mov
dec
jb
ss
push
mov
jbe
leave
gs
adc
xchg
pop
mov
call
dec
adc
scas
test
and
cmp
push
dec
js
inc
(bad)
add
out
xchg
mov
add
std
sub
mov
dec
cmp
dec
fcomi
add
mov
pop
fwait
inc
inc
xchg
call
and
xlat
sahf
loopne
stos
les
sub
cmp
cmp
ret
sbb
sbb
and
jmp
cmp
ror
push
xchg
ins
out
stos
daa
out
addr16
xchg
dec
stos
test
loop
fidivr
test
xor
fistp
add
out
in
cmc
in
add
out
lods
or
xor
ffreep
in
xchg
ror
pop
lods
shr
arpl
mov
adc
cmp
or
inc
pop
jns
dec
movs
jmp
fs
(bad)
push
adc
pop
pop
xor
push
das
push
stc
add
jb
or
and
mov
ret
xchg
stc
push
or
aaa
mov
push
out
rcr
push
shl
lock
push
daa
or
push
xor
mov
adc
je
pop
and
sti
ds
mov
mov
scas
imul
jo
adc
cwde
jae
enter
stos
icebp
test
mov
imul
mov
ins
inc
aaa
stos
call
rcl
(bad)
in
cmps
inc
ret
pop
cmp
pop
aas
inc
mov
sti
xchg
bnd
mov
sbb
and
and
mov
lods
out
jnp
jp
jmp
dec
scas
mov
cmps
in
fcomp
call
dec
fild
into
mov
test
loop
pop
ret
xor
mov
fs
sub
in
sar
mov
mov
jae
jno
jmp
mov
lods
jb
mov
in
push
pop
dec
inc
(bad)
dec
outs
add
jae
enter
inc
inc
adc
aas
sub
xor
test
jp
inc
cmp
and
sbb
xchg
(bad)
xlat
out
repz
push
sub
mov
push
pop
ror
xchg
stos
in
jp
inc
sti
mov
mov
ret
aad
shl
dec
xor
in
push
aam
and
sub
(bad)
dec
std
cwde
push
sbb
dec
cmc
std
jmp
sbb
cs
pop
cmps
pop
frstor
mov
cmp
sbb
in
pcmpeqw
fcom
and
dec
scas
inc
push
pusha
push
mov
xor
test
mov
lods
lahf
into
scas
push
aas
rcl
fdiv
shl
mov
out
push
add
mov
add
ins
jecxz
add
call
add
dec
lods
pop
je
mov
icebp
fdiv
and
inc
sti
aam
cmps
(bad)
jno
je
gs
aad
loopne
lds
add
retf
addr16
xchg
push
icebp
xchg
sub
mov
xor
lahf
enter
xchg
cli
fcom
or
int
pusha
je
(bad)
ss
push
or
cmp
cmp
jno
lods
dec
dec
sub
jae
pop
mov
ins
jmp
pusha
adc
out
test
xchg
adc
movs
or
mov
mov
dec
inc
mov
out
out
xchg
add
and
neg
ret
fisttp
cmp
jmp
adc
loopne
mov
xchg
int3
sbb
xlat
and
lods
loopne
jno
and
sub
sbb
dec
cwde
rol
fwait
scas
jecxz
xor
xchg
out
loope
mov
add
sahf
outs
mov
jmp
mov
jmp
ficom
movs
ss
stos
push
jne
push
push
mov
gs
pop
sub
daa
xchg
lahf
dec
iret
sub
mov
pop
fsub
mov
sbb
into
jecxz
and
arpl
mov
dec
cwde
scas
fwait
fs
cmps
xchg
fst
sti
ret
leave
test
(bad)
or
cmp
sbb
adc
outs
es
add
cmps
add
outs
retf
ins
stos
retf
dec
pop
push
cmp
xor
or
stc
sti
(bad)
pop
push
mov
push
loop
movs
push
sbb
das
inc
xchg
adc
jae
(bad)
pushf
(bad)
adc
retf
leave
or
mov
rcl
jecxz
dec
imul
and
adc
pop
imul
pop
iret
movs
je
(bad)
sbb
(bad)
sub
inc
and
mov
mov
out
stos
cmp
inc
cmps
je
pop
jne
jg
mov
movs
repz
adc
in
das
lea
add
(bad)
fld
sbb
test
or
sbb
inc
sub
sub
mov
ret
jle
(bad)
pop
aaa
leave
int
mov
mov
mov
aam
sti
pop
push
int
lea
outs
mov
and
jno
add
pop
sbb
leave
jecxz
daa
das
add
(bad)
jmp
xor
jg
push
inc
or
mov
fmul
mov
mov
sub
lock
push
and
push
fisttp
push
dec
xchg
sub
sub
jne
retf
mov
call
sub
popa
and
or
mov
pop
repnz
jl
xor
or
jle
or
outs
lods
das
hlt
mov
outs
test
lock
jae
xor
xor
jecxz
sub
lds
pop
mov
jecxz
and
mov
mov
mov
mov
les
pop
mov
scas
mov
cld
dec
sub
jo
loopne
retf
cmp
bound
je
pop
mov
sahf
inc
mov
mov
mov
mov
xor
sbb
xchg
xlat
mov
fst
sbb
jbe
out
xchg
cmp
sbb
fidiv
cmp
pop
imul
xchg
fisttp
(bad)
adc
and
aaa
hlt
sbb
shl
gs
xchg
inc
or
jbe
icebp
cmp
jno
sbb
push
jb
adc
(bad)
(bad)
mov
shl
inc
shr
sahf
mov
loope
push
mov
pop
das
mov
pop
das
aad
jno
mov
ja
stos
inc
push
jno
ss
es
ret
aam
pop
xchg
xchg
out
pop
scas
cs
xor
mov
jnp
fmul
mov
and
repz
inc
push
dec
mov
clc
das
ret
nop
xchg
jl
mov
ret
cld
dec
lods
out
push
test
ja
mov
loopne
imul
mov
adc
imul
scas
test
sub
inc
repz
cmp
mov
mov
mov
bound
sar
(bad)
pop
sub
sbb
rcr
jo
cmp
pop
adc
stc
inc
inc
ins
or
fdiv
mov
inc
movs
cmc
(bad)
push
push
lahf
mov
cwde
js
iret
add
repz
xor
dec
test
movs
add
mov
xor
mov
jmp
fisub
mov
jmp
sahf
stc
push
cmp
xor
jnp
neg
ds
adc
ins
jge
div
mov
popa
mov
xchg
imul
mov
repz
jo
cli
pop
and
add
adc
pop
enter
ins
inc
call
out
ret
push
add
imul
mov
pand
cs
pop
out
sub
mov
inc
xchg
pop
adc
and
movs
pop
fdiv
shl
fidivr
fcmovnu
or
movs
gs
and
mov
aas
sahf
jg
mov
sub
ins
pop
cmps
loope
push
add
push
push
add
lds
mov
outs
dec
aas
into
icebp
js
dec
sub
inc
stc
lods
add
lock
inc
pop
mov
xchg
fcomp
int
in
std
fcomp
les
cdq
les
cdq
pop
aam
daa
ja
loop
fxch
ror
(bad)
(bad)
jb
aaa
and
(bad)
push
ss
scas
jne
add
aaa
cmp
popf
pop
icebp
sbb
jmp
or
add
pop
ja
div
dec
(bad)
add
add
add
jg
jl
xor
dec
movs
ins
scas
test
ins
lahf
add
hlt
jl
add
cvtpi2ps
pop
arpl
clc
xor
mov
jns
movs
ror
adc
inc
out
fwait
sub
jns
sahf
enter
add
or
retf
jge
mov
dec
dec
jno
ret
popa
cli
inc
sub
loopne
or
inc
jmp
ins
dec
push
and
dec
pushf
add
fadd
lods
push
test
jg
jle
xchg
xchg
mov
cmc
push
mov
add
xlat
das
push
xchg
pop
call
loopne
dec
mov
dec
mov
and
and
push
loope
and
push
ret
xchg
test
rol
sub
arpl
iret
pop
das
pop
sbb
mov
mov
(bad)
call
xchg
sbb
leave
aas
(bad)
fild
mov
xor
xor
push
std
dec
xchg
xchg
or
ret
pusha
loopne
pop
cmps
test
sbb
aas
mov
ror
out
cmp
cmp
stos
mov
pop
enter
ins
test
sbb
daa
sbb
adc
daa
jg
pop
add
mov
mov
cld
xor
pop
mov
sub
mov
xchg
(bad)
(bad)
unpckhps
(bad)
mov
ins
les
mov
shr
dec
mov
into
pop
dec
inc
pop
int3
(bad)
mov
imul
lods
call
cmps
arpl
shr
jno
fild
inc
(bad)
sub
pop
push
jmp
pop
clc
arpl
ins
repz
cmp
add
mov
out
sbb
dec
loope
push
jmp
inc
dec
jo
leave
mov
xchg
dec
cld
sub
and
(bad)
and
dec
pop
push
cli
xor
ret
outs
jns
adc
int
idiv
imul
imul
pop
cmp
pushf
ja
mov
xchg
inc
adc
mov
ss
ficomp
icebp
iret
movs
mov
ss
inc
and
shl
push
mov
jp
pop
repz
mov
ds
les
push
bound
mov
xchg
sbb
xor
ret
stos
sahf
je
out
jp
pop
out
(bad)
rcr
add
xor
jecxz
add
add
test
repz
jmp
sar
test
xchg
jae
clc
pop
scas
xchg
inc
lods
or
push
mov
popa
out
mov
sbb
loopne
int3
pop
in
mov
(bad)
pop
xlat
(bad)
int
js
arpl
outs
sbb
inc
imul
mov
mov
xchg
popf
sub
cld
int
lods
add
cli
movs
push
xchg
std
mov
dec
inc
hlt
mov
jmp
stc
sar
add
jo
jnp
pop
or
pop
call
mov
jmp
pusha
je
aad
inc
lea
movs
xor
arpl
pop
cmp
(bad)
inc
or
push
and
mov
jmp
call
adc
in
pop
fistp
mov
jae
mov
fdivr
lahf
rcl
add
nop
adc
sti
mov
xchg
mov
push
adc
fld
jb
jbe
xor
dec
js
aas
push
push
arpl
inc
jg
jo
retf
fiadd
cdq
mov
cmp
clc
mov
pop
sti
inc
out
and
sbb
pop
cmps
outs
popf
(bad)
aas
cld
es
fist
dec
mov
inc
repnz
leave
pop
jmp
adc
cmp
lds
neg
cmp
retf
sahf
shl
sahf
jl
outs
call
or
(bad)
dec
mov
add
(bad)
push
jmp
ret
cwde
xchg
(bad)
icebp
push
mov
inc
sub
dec
shl
retf
test
test
out
jno
xor
inc
inc
outs
pusha
hlt
inc
add
pop
scas
mov
add
or
popf
dec
in
sub
jl
adc
pop
sahf
loope
cmps
fcomp
(bad)
es
mov
cmp
in
xor
stos
or
sub
iret
push
shr
repz
dec
stos
cmp
jae
dec
cmp
mov
iret
lahf
pushf
stos
loop
adc
xor
jno
in
or
xchg
cmp
je
mov
mov
dec
jp
pop
(bad)
mov
lds
cmp
cmps
cmp
cmps
and
mov
aas
push
mov
fs
jg
mov
push
scas
sub
sbb
mov
fstp
fidiv
mov
fldenv
adc
dec
push
loopne
mov
into
xor
retf
push
fadd
sub
dec
and
adc
push
shr
pop
cmp
inc
push
data16
scas
jb
push
adc
jmp
clc
pop
mov
sbb
jnp
xor
push
mov
jle
adc
push
pop
mov
test
out
add
stos
jl
jmp
add
ds
pop
loopne
pop
icebp
or
mov
sub
xchg
or
mov
mov
pop
mov
push
jecxz
shr
jnp
mov
add
test
ja
or
repz
rcl
repz
movs
outs
jmp
je
icebp
aam
mov
adc
sub
mov
sar
adc
mov
inc
aam
mov
cli
mov
cmps
xor
call
sub
in
xchg
sub
mov
adc
lahf
adc
xchg
shl
push
rdtsc
pusha
jnp
rcr
sahf
je
imul
mov
push
out
sub
shl
add
add
pop
sub
fsub
xchg
cmp
cmp
sar
aaa
aad
cmp
jmp
mov
in
aam
pop
pop
jb
ror
daa
cwde
nop
adc
enter
aas
(bad)
xlat
imul
or
and
or
mov
aad
xchg
xchg
add
movs
add
adc
test
les
push
retf
adc
and
xchg
and
aaa
xchg
dec
push
ja
or
retf
jle
cli
cmp
dec
fwait
scas
mov
(bad)
push
push
sbb
nop
outs
ja
add
jmp
adc
test
sbb
dec
mov
jl
fidiv
rcl
jle
aas
push
iret
mov
cmp
pop
test
or
cmp
xchg
or
dec
and
fild
jne
xor
arpl
and
inc
sub
test
clc
sbb
scas
fadd
jno
cdq
inc
xor
stc
jg
lods
mov
xchg
pop
out
dec
inc
ja
lock
scas
jg
ficomp
push
icebp
fsub
mov
and
(bad)
stos
pop
xor
fmulp
mov
xlat
movs
sub
dec
xchg
add
out
pusha
adc
pop
fstp
popw
inc
mov
add
and
sub
dec
xor
mov
jp
les
jb
neg
lahf
xchg
pop
push
push
stos
sbb
push
jns
icebp
add
push
mov
dec
pop
scas
out
fdivr
outs
mov
push
(bad)
nop
lahf
imul
es
dec
dec
scas
or
lods
push
cmc
mov
pop
pop
jecxz
pop
(bad)
and
out
movs
mov
in
mov
cmp
xchg
gs
mov
sbb
fs
fs
inc
dec
sub
stos
dec
mov
imul
aad
shr
pop
loopne
in
in
jnp
pushf
jmp
ins
cs
sub
cmp
fsubr
cwde
push
adc
inc
push
xchg
dec
and
adc
add
lea
push
enter
mov
xor
xchg
data16
pop
push
jne
(bad)
lods
cmps
inc
movs
sbb
aas
mov
nop
popa
pop
cmp
jno
dec
sub
cmp
cmp
lock
adc
sbb
sub
jmp
fbld
pop
nop
xchg
xor
xchg
in
push
ins
inc
xchg
sbb
iret
add
jmp
inc
jecxz
in
(bad)
movs
(bad)
dec
add
pop
(bad)
mov
sub
movs
xor
mov
inc
add
call
sti
pop
fisttp
loop
push
cmp
jge
push
jg
and
lods
pop
(bad)
test
xchg
call
xchg
ret
in
inc
aam
inc
test
jge
pop
sub
inc
cmp
mov
xchg
xrelease
(bad)
out
inc
call
pop
cmps
xchg
sti
jo
jg
loop
shr
dec
or
retf
jmp
dec
gs
dec
enter
sbb
or
cmp
dec
cmp
dec
jnp
out
andps
mov
sbb
dec
fldpi
pushf
xor
mov
dec
cmp
adc
push
mov
aaa
clc
loopne
data16
test
rol
cli
out
imul
pop
shl
stos
mov
mov
ret
mov
cmps
pop
jl
imul
jnp
sar
fnstenv
or
bound
outs
aam
idiv
sub
mov
jne
jbe
leave
mov
les
sub
shr
(bad)
dec
push
aas
sub
pushf
cdq
or
iret
jnp
or
fisttp
sbb
or
das
test
sbb
pop
xor
mov
aam
in
mov
sub
loopne
(bad)
push
xchg
dec
adc
mov
and
add
dec
ret
inc
outs
jmp
ret
push
xchg
push
push
ficomp
mov
(bad)
pop
dec
jmp
js
cmp
xor
test
push
push
loope
sti
or
mov
out
popf
icebp
hlt
add
rcr
cmp
call
pushf
ds
les
outs
cmps
cmc
cmc
imul
in
repz
jo
out
jg
fxch
dec
dec
mov
inc
into
dec
out
dec
fstp
xor
scas
nop
jl
push
ret
inc
push
mov
push
sub
add
rol
int
adc
fnstenv
fsubrp
lea
sbb
jnp
not
popa
dec
adc
and
jp
xchg
rcr
(bad)
mov
and
mov
add
adc
je
es
shl
pop
scas
mov
fwait
dec
mov
clc
fstp
ins
sub
scas
mov
dec
mov
ds
push
xor
icebp
adc
iret
mov
aas
in
sti
mov
addr16
push
outs
lds
push
or
adc
push
je
push
sbb
cmp
adc
out
movs
push
dec
xchg
xchg
movs
hlt
inc
adc
mov
scas
in
in
fwait
mov
out
dec
gs
pop
jns
and
cmp
or
loopne
aad
pop
mov
dec
inc
mov
jno
sub
cmp
out
mov
das
bound
jmp
cmp
cmp
push
fdiv
sub
cmp
arpl
ret
add
jnp
stc
dec
popa
inc
dec
retf
xor
xchg
xor
scas
add
clc
and
in
sbb
mov
pop
scas
les
and
sub
inc
inc
(bad)
sbb
leave
out
int
fwait
jmp
xchg
xchg
pop
mov
ret
pop
mov
pusha
inc
inc
outs
repnz
jbe
jl
test
jno
mov
xchg
jmp
or
push
jnp
fisubr
sbb
xor
ja
retw
fwait
arpl
hlt
xchg
sbb
loope
xchg
sub
sbb
or
gs
push
pop
mov
scas
sbb
xor
jb
std
push
sbb
mov
ret
pop
sub
movs
lock
sbb
or
dec
ja
imul
xchg
mov
or
cmp
mov
into
xor
shl
sbb
rol
sbb
std
inc
push
sbb
pop
test
ja
lods
mov
in
cmps
xchg
imul
jnp
sbb
push
and
dec
dec
push
into
fist
adc
cld
pop
ror
add
push
and
dec
xor
std
cmps
cmps
les
cmp
jmp
(bad)
cmp
push
nop
lods
jmp
jmp
std
add
pop
add
add
sbb
aad
sbb
xchg
loop
mov
pop
sub
mov
or
pop
aaa
lock
bound
add
aas
pop
push
cs
lods
lahf
call
xchg
in
adc
cwde
imul
xchg
xchg
or
pop
not
push
test
xor
mov
adc
fsubr
mov
xor
dec
pop
sbb
dec
mov
ret
retf
mov
enter
cmp
fsubr
imul
fmul
push
push
add
ror
add
pop
push
lock
dec
test
dec
lea
push
add
push
cmp
test
out
or
adc
mov
add
loopne
sbb
jmp
jns
ja
cmp
sub
xchg
js
(bad)
dec
rol
ffree
mov
push
add
mov
push
call
pop
ror
ud2
aaa
in
push
xchg
mov
pop
and
les
out
or
aas
pushf
jle
mov
retf
xchg
fisub
sub
gs
push
inc
js
jge
leave
mov
cmp
jno
lds
(bad)
mov
xchg
sub
fcom
(bad)
shl
mov
fiadd
mov
pop
gs
mov
out
jle
pop
dec
mov
adc
ret
and
pop
pop
pop
fwait
pop
xlat
xor
jecxz
lahf
pop
or
int3
cdq
jp
jb
adc
popf
nop
mov
dec
cld
or
sub
and
fidiv
and
mov
retf
jp
sub
adc
add
or
ins
sar
pushf
cmp
jle
add
(bad)
jmp
push
test
mov
inc
adc
je
fnstenv
push
jmp
jmp
mov
cmp
sub
data16
add
dec
xor
xchg
pop
ins
sbb
jno
(bad)
or
fadd
pop
out
cmps
push
mov
test
xor
jae
inc
(bad)
fist
fbstp
cmp
and
mov
add
fcomp
adc
fisub
(bad)
out
aad
push
adc
pop
retf
pop
es
mov
inc
loope
dec
sbb
xchg
pop
loop
test
or
xchg
fimul
(bad)
idiv
sbb
je
leave
adc
xor
imul
ss
xor
mov
scas
cmp
xchg
retf
mov
fcmovnu
mov
sbb
pop
push
in
add
mov
dec
mov
or
and
push
mov
imul
int3
inc
cmp
inc
cmps
fist
cmc
push
inc
arpl
ins
not
(bad)
fcom
push
mov
pushf
ror
cmc
push
and
jmp
pop
mov
jecxz
jno
lods
sub
sbb
push
xor
dec
push
xor
dec
fdivr
sbb
repz
imul
arpl
(bad)
cs
add
sub
ins
jg
inc
sub
dec
jb
fcomp
out
and
test
xlat
js
lods
retf
mov
dec
dec
dec
add
jp
mov
nop
push
jb
retf
add
bound
or
or
clc
fldcw
jns
jnp
fucomp
add
or
lahf
mov
mov
cmps
dec
xchg
pop
xor
arpl
ret
adc
inc
add
jecxz
mov
inc
(bad)
dec
loope
jmp
mov
ds
pop
or
ss
iret
mov
fiadd
dec
pop
scas
mov
lods
mov
pop
ss
inc
mov
rep
mov
xor
scas
cmps
popf
fidivr
mov
aad
inc
in
sbb
hlt
xor
mov
xchg
sahf
sbb
in
loop
sub
xchg
dec
and
das
push
(bad)
fsubr
inc
adc
stc
sub
mov
dec
pop
mov
add
bound
lods
pushf
mov
or
mov
out
push
push
dec
dec
pop
js
sbb
add
(bad)
xchg
loopne
xor
add
outs
stos
test
jg
imul
das
test
sub
lds
stc
bound
dec
pop
and
out
lock
leave
xor
inc
movs
lock
and
in
pop
mov
and
imul
(bad)
mov
mov
jle
mov
data16
sub
aam
or
mov
push
jmp
push
ss
fsub
addr16
(bad)
mov
dec
out
sub
push
mov
dec
rol
xor
out
test
add
call
int3
xchg
mov
sbb
ret
dec
mov
sbb
mov
imul
test
ins
je
dec
jns
out
out
daa
int
cmps
or
adc
retf
cmps
jae
mov
or
inc
push
push
leave
push
(bad)
(bad)
arpl
pop
lds
and
emms
dec
int
arpl
jmp
scas
add
test
or
lahf
sub
mov
pop
pop
hlt
jmp
in
retf
hlt
and
xchg
daa
dec
ss
iret
push
in
ja
(bad)
mov
cli
mov
jp
and
push
sbb
fisubr
sub
mov
adc
gs
loop
cmps
and
jecxz
or
push
int3
and
loop
jne
lock
xlat
cld
std
sbb
xor
ror
rep
shl
neg
loope
xchg
leave
mov
pop
rcl
or
test
(bad)
fisttp
cmp
loopne
cwde
leave
jecxz
dec
xor
rol
or
sub
and
pop
add
lds
sub
dec
push
aam
fwait
je
mov
pop
add
mov
icebp
cdq
aaa
dec
mov
dec
sub
ds
sbb
inc
stos
retf
fist
clc
and
cmp
mov
pop
call
cmp
(bad)
push
rcl
in
or
or
xor
rcl
stos
in
out
pop
rcl
ret
and
push
iret
jns
pop
(bad)
mov
enter
mov
xchg
test
xchg
push
rcr
lods
mov
pop
sbb
sar
(bad)
les
stos
mov
inc
es
xlat
xor
std
push
push
mov
fidivr
test
sar
push
in
adc
xor
test
retf
loope
int
fdivr
loope
sub
pop
or
sub
loop
jb
(bad)
mov
retf
fwait
mov
aad
jbe
or
xchg
fwait
cmp
mov
clc
pop
mov
(bad)
sbb
outs
xchg
mov
addr16
sbb
add
jo
scas
cmps
mov
addr16
dec
daa
fstp
xchg
fucomip
and
push
ret
fwait
outs
pop
fucom
mov
sub
mov
(bad)
data16
arpl
cmp
sahf
popa
dec
cmp
push
xor
inc
dec
cmp
fwait
mov
mov
adc
shr
into
lods
xchg
bound
(bad)
xor
inc
sbb
mov
outs
sti
sub
out
call
mov
cmp
test
mov
mov
push
cmc
and
fs
cmc
imul
or
fcomp
ins
sub
dec
fcom
test
aas
push
xor
add
shr
call
pop
call
xchg
dec
enter
sbb
or
jno
inc
and
ins
lahf
mov
add
sar
out
xchg
outs
ret
retf
inc
or
fwait
popf
or
push
mov
mov
cmp
xor
jns
pop
sub
pop
and
push
aaa
outs
push
test
in
mov
sahf
inc
pop
jp
and
rcl
jno
cmps
mov
xchg
fisttp
jle
scas
jae
xchg
add
pop
xor
test
cmp
stc
push
cmc
(bad)
stos
das
pop
das
enter
sets
int
cmc
enter
sar
je
pop
xor
and
sub
ds
pop
lock
cmp
cdq
test
mov
in
cld
jmp
pop
movs
cmp
inc
js
fwait
mov
jnp
nop
loop
aaa
fimul
push
pop
gs
pushf
pop
outs
stc
in
(bad)
fucom
pop
outs
mov
(bad)
jmp
out
mov
aam
cli
int3
iret
lds
aam
mov
lock
jb
mov
sub
loope
jae
sbb
aam
jnp
(bad)
outs
adc
fs
fs
ins
inc
push
pop
mov
jp
adc
push
push
sbb
loopne
pop
outs
dec
inc
jmp
mov
jb
or
ss
lock
jl
dec
xchg
(bad)
jge
cmp
xchg
or
js
jp
push
add
idiv
push
push
xor
ds
push
push
mov
cwde
dec
push
jmp
inc
mov
test
mov
jl
imul
mov
mov
movs
iret
movs
stc
mov
xchg
mov
int
cmp
xlat
leave
das
stc
leave
jl
push
xchg
ds
jo
xchg
js
stc
add
out
outs
mov
mov
iret
jmp
scas
push
int
adc
push
dec
test
jae
or
out
add
jge
dec
popa
cmp
jne
popf
xchg
or
mov
dec
jge
pop
ss
scas
repnz
sti
jns
ja
push
push
jl
push
fadd
rcl
mov
loop
mov
repz
stos
or
clc
push
cmp
inc
dec
sub
sbb
lds
cmc
dec
les
mov
push
mov
aas
out
xlat
imul
cdq
or
retf
mov
push
sbb
int
mov
ins
and
xor
mov
jg
xor
push
xchg
xor
stos
cmp
bound
xor
mov
loope
int
aaa
sbb
add
sbb
call
mov
lock
outs
movs
int
retf
mov
scas
ds
xor
mov
inc
shl
mov
mov
xchg
xchg
sbb
inc
call
arpl
mov
cmp
ins
pop
sub
(bad)
sbb
inc
xchg
add
(bad)
mov
aas
inc
dec
inc
fisttp
mov
jge
fadd
or
retf
xchg
popf
add
push
mov
fstp
dec
xor
cmp
add
scas
lea
test
xchg
in
mov
addr16
rcl
mov
xor
cmps
jo
jae
push
aaa
pminub
call
sub
test
je
mov
inc
jecxz
dec
push
inc
sub
add
pop
and
lock
(bad)
sahf
xchg
jno
cmp
sub
xor
shufps
into
je
icebp
nop
test
push
out
sahf
jne
sbb
fist
sub
fnstcw
sbb
inc
ja
vhsubpd
cmp
mov
hlt
jge
mov
enter
call
imul
sbb
sbb
repz
and
sub
outs
(bad)
push
out
mov
xchg
clc
adc
leave
mov
leave
mov
test
in
shl
dec
mov
(bad)
cmc
cwde
test
jae
fadd
mov
mov
pop
(bad)
mov
jl
and
data16
jmp
sbb
(bad)
arpl
push
adc
xlat
jns
repnz
cmp
movs
enter
adc
add
(bad)
out
repz
add
mov
jp
push
or
pop
xchg
jbe
jb
clc
pop
adc
push
mov
sub
sub
adc
movs
jb
lods
lea
into
out
int
mov
xchg
(bad)
ror
nop
add
adc
or
std
xchg
mov
xor
in
jmp
jg
out
or
je
cmc
inc
dec
xlat
xor
retf
fwait
retf
test
sub
xlat
lahf
pusha
inc
xor
ins
daa
test
xchg
pusha
pop
adc
pop
in
retf
fidivr
shl
pop
(bad)
jo
in
jle
idiv
ror
aam
push
arpl
xor
mov
outs
xor
cmp
lods
aam
xlat
ret
ds
push
push
mov
ins
es
int3
mov
cwde
pop
cmp
repnz
fiadd
add
loope
mov
xchg
retf
sar
mov
mov
mov
fwait
xor
xor
push
push
call
xchg
adc
ins
cmp
nop
mov
jp
int
dec
in
dec
into
jl
or
dec
pop
in
imul
sub
pop
enter
mov
cmc
pop
fdivrp
inc
push
cmps
inc
mov
xchg
fcomi
push
cwde
mov
mov
test
dec
cmp
mov
adc
jge
call
dec
inc
bound
ins
xchg
or
in
or
mov
mov
jnp
xor
xchg
and
jno
cmc
ficomp
int3
jno
pusha
push
sub
push
xchg
popf
mov
ss
(bad)
out
leave
adc
arpl
xchg
cmc
mov
pop
pop
test
cmp
or
xchg
xchg
ja
imul
inc
jge
jg
push
sbb
movs
mov
pop
aas
pop
shr
and
outs
iret
mov
mov
fwait
in
(bad)
mov
cmp
add
ffree
out
ret
repnz
mov
fucom
imul
cmp
cs
ins
push
dec
lock
iret
or
cmp
mov
sbb
jle
lock
push
(bad)
adc
and
mov
mov
iret
data16
loope
inc
fsubr
call
jle
add
jmp
inc
int
shl
je
sub
inc
test
es
sbb
fsub
ret
xor
cmp
lock
les
test
loopne
jecxz
ds
dec
or
ins
jecxz
jo
fld
out
mov
(bad)
fwait
pop
xchg
mov
adc
sub
xchg
sbb
imul
lods
stos
lods
and
das
adc
dec
cmp
push
in
mov
icebp
push
aam
ins
pop
stos
inc
xchg
dec
call
inc
cdq
mov
push
inc
xor
add
or
(bad)
mov
ret
test
xchg
loope
mov
fimul
in
xchg
mov
mov
push
sti
or
rol
dec
jnp
hlt
mov
std
bound
add
out
cmp
push
mov
popf
pushf
cmp
jmp
or
cli
inc
push
mov
cmp
push
movs
sub
enter
dec
jo
scas
stos
das
(bad)
jns
ds
in
xchg
or
ins
mov
popa
xor
cmps
mov
fsub
call
inc
fs
dec
sub
aas
push
shr
sub
mov
cmp
pop
cmp
xchg
cwde
jl
adc
and
popa
jle
cmps
adc
sbb
ret
pop
loope
push
pop
mov
mov
pop
nop
les
sbb
dec
push
test
gs
xor
lea
std
xlat
data16
push
cvtpi2ps
cmps
(bad)
mov
sbb
js
movs
dec
or
(bad)
ret
popf
daa
stos
xchg
jns
sub
retf
xchg
shr
mov
test
pop
aam
(bad)
push
mov
mov
scas
push
sbb
addr16
pop
outs
dec
push
fs
xor
(bad)
jno
out
push
sbb
jg
(bad)
les
mov
adc
aad
push
repz
lods
dec
inc
imul
test
sub
ror
mov
fistp
scas
mov
push
cld
or
ins
cmp
mov
xor
pop
or
jmp
jge
push
rcr
mov
fsubrp
call
sbb
mov
mov
cmp
push
fiadd
(bad)
cmps
xchg
sbb
mov
xlat
or
sub
adc
xchg
out
dec
and
xchg
mov
or
jns
imul
in
cmc
push
nop
stos
pop
dec
fimul
add
fistp
jmp
and
js
dec
mov
fsubrp
aaa
jae
stos
stos
imul
into
movs
inc
scas
inc
cli
xor
sub
xor
in
popa
pop
cdq
cmp
test
mov
cmp
hlt
and
mov
lds
sub
pusha
iret
push
stos
jo
xor
mov
into
fcomip
pop
in
dec
xchg
ins
adc
mov
sar
in
adc
sub
movs
pop
int
ja
dec
jne
in
lock
call
mov
out
pop
or
dec
mov
inc
xor
pop
pop
bt
imul
retf
and
sbb
xlat
ret
sbb
pop
lods
rcr
loope
arpl
data16
add
shr
int3
retf
push
jne
dec
xor
std
sbb
popfw
dec
shl
cwd
pushf
int
fist
push
shr
scas
mov
xor
jp
inc
push
add
add
mov
outs
push
sti
fwait
aas
into
stos
frstor
dec
push
mov
dec
jge
jmp
in
enter
add
fdiv
adc
(bad)
in
cli
jecxz
cwde
inc
mov
fistp
lods
call
dec
adc
jecxz
xor
es
daa
jmp
call
pop
sub
ret
jns
xchg
cmc
hlt
mov
outs
call
ins
inc
loope
test
cmp
out
(bad)
in
xor
inc
test
loope
jno
jle
dec
or
aas
daa
punpckhwd
in
out
xchg
(bad)
int
inc
add
adc
sub
mov
dec
shr
adc
ret
das
add
dec
xchg
popa
pop
xchg
ret
jle
retf
jb
adc
clc
popf
xor
repz
movs
mov
dec
push
loopne
jle
lods
xchg
div
dec
inc
inc
fdiv
mov
inc
setae
imul
in
(bad)
mov
ds
mov
nop
inc
ret
pusha
push
lods
call
pop
test
scas
mov
(bad)
and
mov
mov
out
fwait
push
cmps
mov
inc
xchg
das
and
(bad)
cmp
jge
inc
jle
lods
lea
mov
mov
adc
ret
mov
or
jbe
inc
mov
sbb
mov
imul
and
ss
mov
mov
jb
fcmovbe
jns
or
jbe
push
stc
movs
mov
adc
cmp
lahf
xchg
sbb
mov
scas
enter
adc
aad
inc
je
icebp
dec
xor
int
out
pop
push
rcr
sub
call
mov
jg
xchg
hlt
inc
loope
inc
loop
loopne
das
mov
scas
sub
push
outs
cdq
add
arpl
add
xchg
das
inc
push
pop
or
jg
dec
add
cmp
push
and
or
movs
push
rcl
cmp
loope
jp
jmp
idiv
movs
pop
movs
xor
shl
fs
adc
jb
pop
dec
xor
mov
(bad)
fistp
ins
ret
dec
dec
cmp
mov
fidivr
in
jecxz
xlat
push
dec
jg
and
ret
add
sub
fstp
hlt
mov
ds
jae
sbb
inc
lds
(bad)
call
outs
rcr
mov
lock
xor
daa
loope
ret
cmp
and
cld
sbb
xchg
add
mov
push
dec
js
fadd
in
mov
push
test
ja
lds
jl
test
xchg
xchg
fbstp
icebp
sbb
js
sub
movs
div
jecxz
push
bound
push
pop
das
loop
jle
add
and
sbb
(bad)
jmp
int3
pop
dec
das
and
ficomp
sub
push
xchg
push
ror
imul
iret
int3
dec
retf
outs
cld
call
iret
ins
mov
call
fsubr
aas
ret
jae
(bad)
sbb
cmc
ret
jmp
inc
loope
jmp
loop
ret
call
imul
lahf
push
dec
mov
jge
jb
xor
or
hlt
shl
xchg
lahf
pop
mov
xchg
dec
mov
xor
sar
xor
push
enter
pop
push
arpl
ins
retf
je
sti
pop
pop
dec
clc
sub
or
aaa
push
push
int
and
pusha
jmp
push
adc
pusha
mov
xor
sbb
sahf
add
hlt
sub
or
dec
lea
jge
mov
and
fucomp
loope
jge
std
add
mov
arpl
xor
sub
dec
test
movs
in
mov
add
inc
inc
pop
or
(bad)
gs
fsub
inc
inc
(bad)
or
aas
pop
je
xchg
fiadd
and
pop
pushf
mov
cmp
jmp
inc
repnz
pop
in
xor
push
mov
push
dec
cmps
retf
iret
shr
jb
scas
adc
fwait
test
push
push
xchg
in
sbb
and
adc
jecxz
sahf
dec
add
inc
cmp
lds
inc
into
and
cmp
dec
mov
popf
sbb
out
(bad)
mov
pop
add
dec
mov
mov
cmp
hlt
cmp
cmps
es
out
retf
fxch
pop
jb
dec
adc
xchg
in
sbb
and
imul
push
pop
enter
shr
jbe
scas
ins
adc
add
rcl
pop
popa
sar
cmp
psubq
cs
repnz
dec
popf
(bad)
jns
xor
(bad)
adc
xchg
bound
aam
std
ret
stc
mov
dec
addr16
jb
pop
stos
fcomp
cwde
in
mov
mov
sub
rol
mov
mov
retf
mov
xor
dec
adc
mov
pop
cmps
lds
dec
xlat
ss
ror
retf
pop
mov
mov
inc
loopne
pop
jb
(bad)
sub
retf
hlt
loopne
mov
or
cmp
iret
repnz
sti
mov
outs
ja
xchg
cmp
adc
mov
out
sub
dec
cmps
mov
(bad)
fisttp
and
(bad)
jp
lods
je
out
adc
test
push
stos
sbb
adc
ficomp
cmp
stc
and
fmul
fadd
sbb
add
add
fld
xor
ror
sub
push
mov
in
sub
repz
paddsw
lea
inc
add
loop
and
push
inc
xchg
jmp
mov
dec
stos
push
sti
adc
pop
push
pop
push
ds
pop
push
inc
lock
sub
sub
into
fnsave
adc
mov
fisub
mov
cmps
dec
cmps
cld
rol
mov
and
arpl
pop
pop
(bad)
xor
shr
retf
lahf
int3
and
retf
aad
int
mov
ins
sbb
stos
gs
mov
lock
iret
inc
(bad)
adc
and
ret
mov
adc
(bad)
sbb
retf
(bad)
fnstcw
pusha
cmps
int
jbe
cmp
movs
cwde
outs
and
or
jg
pop
mov
or
out
jp
and
sub
xchg
test
les
and
jmp
jb
jne
push
test
leave
adc
pushf
es
and
xor
xchg
adc
cmp
sti
les
nop
jae
fsubr
xchg
ffreep
jb
stos
cmps
jnp
jbe
pop
out
out
pop
lea
js
in
mov
cmp
or
out
inc
stos
mov
cdq
push
lea
int3
sbb
adc
aam
adc
mov
jge
jl
fst
ret
pop
or
fld
cwde
lea
bound
sahf
movs
fcmovnbe
aam
add
sbb
lock
repnz
aad
or
and
sar
push
push
xor
ror
add
inc
stos
and
mov
mov
sbb
cmp
sbb
push
and
int3
or
rol
or
mov
pcmpgtb
xchg
popf
loope
lock
stos
frstor
dec
mov
aaa
outs
pop
jmp
movs
sbb
shl
xor
loop
cmc
mov
add
rcl
mov
aam
int3
js
add
outs
scas
mov
pop
xor
push
dec
lahf
xlat
add
fdiv
or
(bad)
(bad)
imul
cmps
pusha
and
inc
repnz
or
xchg
mov
xor
hlt
rep
pop
adc
ret
pusha
cmp
adc
xor
adc
fcomp
fdivr
aad
dec
pop
outs
jge
xor
pop
or
or
sub
addr16
aad
cmps
mov
mov
mov
shr
ficom
jns
xlat
rol
dec
aaa
sbb
xchg
shr
out
mov
inc
mov
int3
ja
add
je
sbb
in
jmp
(bad)
jno
xchg
adc
cmps
pop
fstp
push
ror
es
es
ins
repnz
push
stos
jae
mov
retf
fcmovnu
xchg
or
cmp
pop
mov
pop
jae
in
dec
imul
push
rcl
(bad)
mov
fiadd
ret
outs
outs
stos
imul
pop
mov
adc
xor
mov
cli
or
sbb
not
adc
push
leave
bnd
dec
mov
(bad)
js
cmc
test
adc
or
repnz
stos
push
scas
aas
sbb
loopne
sub
popa
push
outs
mov
lahf
add
pop
cmps
inc
icebp
int3
add
mov
imul
or
push
dec
jge
scas
mov
cmp
sub
pop
outs
xor
cmc
rol
stc
inc
imul
fwait
dec
xor
retf
jmp
sub
loope
inc
and
fist
mov
mov
aad
xchg
mov
jmp
sub
sub
sahf
lds
dec
cmp
out
scas
sub
or
mov
pop
scas
dec
sahf
and
popf
fnstsw
xchg
inc
jae
pop
enter
fiadd
mov
dec
mov
ins
cmp
mov
push
mov
daa
ins
xchg
mov
dec
call
inc
(bad)
sbb
out
rcl
jo
mov
xor
and
cmp
cmps
rcr
aas
fsubr
mov
inc
push
jno
ins
jl
push
ret
mov
aam
fnstsw
add
mov
sub
test
je
mov
fdivr
dec
jno
loop
(bad)
mov
xor
ret
and
push
cmps
outs
add
inc
mov
leave
repz
cwde
add
int3
dec
add
aaa
shr
sub
rol
mov
xchg
in
xchg
cmps
adc
(bad)
sub
adc
and
clc
push
adc
stos
aam
(bad)
(bad)
retf
push
mov
js
mov
mov
lock
adc
in
aam
repnz
or
in
dec
add
xchg
mov
fs
out
sub
inc
push
xor
mov
mov
mov
popf
ror
pop
sbb
or
loop
out
sbb
adc
or
inc
fstp
(bad)
sbb
shl
call
xchg
repnz
jb
push
dec
dec
loopne
out
jb
imul
mov
mov
(bad)
call
int
mov
out
jbe
mov
test
push
jmpw
inc
mov
xchg
sbb
jp
mov
or
jb
aad
stos
sub
xchg
shl
lods
jmp
popa
push
jmp
es
frndint
pusha
mov
call
pop
or
out
iret
sub
cmp
adc
add
xchg
xchg
xlat
aaa
shl
add
push
ret
cli
mov
push
dec
push
push
and
push
retf
xor
lods
xchg
cmp
fistp
sub
bswap
xor
sar
retf
pop
inc
ja
cmp
stos
les
and
stos
cdq
in
mov
leave
fistp
xchg
pop
jle
imul
jno
sti
mov
and
mov
mov
pop
pop
xor
cmp
lods
(bad)
sub
fsubr
sub
stos
mov
and
sub
xchg
sbb
mov
jle
dec
push
iret
jne
aas
xchg
fist
imul
mov
pop
jae
or
out
mov
and
dec
jmp
test
test
test
lods
xchg
mov
je
xchg
xor
push
mov
scas
push
pop
pop
ins
adc
cmp
out
ret
cmp
sti
add
inc
push
cmp
mov
out
mov
mov
push
test
mov
fldcw
fisubr
xor
rol
fiadd
das
popf
std
movs
rcl
inc
sbb
and
push
enter
in
std
adc
inc
aas
mov
xor
sbb
pop
aam
ja
inc
pop
stc
mov
mov
add
int
or
aam
fcomp
xchg
pop
lahf
sub
pop
pop
fidiv
in
or
dec
jo
popa
mov
mov
dec
dec
mov
and
push
dec
shr
jns
cmp
mov
cmp
int
push
and
xchg
cmp
pop
lahf
aam
push
xor
push
clc
mov
mov
shr
inc
inc
pushf
jne
lods
aad
into
(bad)
add
sbb
sub
fild
cmp
ss
dec
mov
mov
dec
test
jl
jp
pop
sbb
push
add
add
and
mov
fs
pop
pop
lds
dec
test
cwde
jne
sub
jp
cwde
dec
dec
push
or
inc
sub
push
or
and
fcmovb
out
jmp
and
in
sbb
mov
sbb
ins
xchg
push
retf
iret
jbe
in
jnp
shl
adc
inc
jmp
les
(bad)
sbb
mov
popf
data16
sub
jg
(bad)
(bad)
shl
jbe
sub
aaa
add
mov
int3
sbb
xor
sbb
and
mov
pop
mov
dec
js
push
daa
inc
cwde
cdq
lds
or
push
aad
ins
lods
aaa
fld
imul
cmp
in
push
jmp
aaa
sub
adc
lahf
test
mov
sti
pop
cld
loop
mov
shr
sbb
arpl
push
sbb
mov
xchg
xor
cld
in
sub
(bad)
outs
or
ror
loop
stc
sbb
jl
xchg
cmps
shl
lods
dec
pushf
jae
or
sub
repnz
retf
or
mov
and
out
les
call
sbb
shr
xor
(bad)
scas
mov
ins
mov
or
xor
mov
xor
lea
repz
inc
lods
mul
mov
and
pop
movs
shl
iret
fisub
loop
rcr
ja
jl
movs
mov
sti
mov
xor
sbb
jecxz
push
and
sub
addr16
dec
in
xor
add
adc
movs
sar
mov
enter
xchg
fdivp
mov
pop
adc
inc
or
ins
cs
(bad)
xlat
mov
dec
scas
ret
adc
jle
and
pop
and
mov
xor
lea
fmul
test
dec
and
mov
cs
mov
jmp
lds
popf
push
mov
rep
jl
mov
lds
xlat
mov
jno
mov
aam
inc
out
(bad)
xlat
push
dec
mov
bound
cmc
(bad)
dec
inc
out
mov
in
repnz
push
dec
pop
pop
test
pop
mov
jbe
mov
loopne
cmp
jecxz
sub
ins
or
mov
inc
lds
imul
sbb
cmp
movs
push
xor
cli
nop
adc
pusha
(bad)
fld
mov
mov
sahf
inc
loope
fbstp
sar
or
repnz
(bad)
(bad)
test
nop
js
std
imul
xchg
push
aam
jecxz
fcom
or
shr
add
jo
idiv
inc
and
push
rcl
call
mov
cmp
and
repz
ror
into
sub
sbb
cwde
xor
js
fnstsw
rcr
xor
data16
jne
jle
inc
jmp
repnz
fwait
mov
(bad)
mov
leave
push
mov
mov
sahf
fcmovbe
addr16
xor
dec
std
imul
and
jle
pop
fs
lock
movs
jb
sbb
pushf
pop
call
jge
pop
sub
aas
(bad)
jbe
repz
adc
and
inc
and
leave
xchg
sub
aad
lods
dec
jb
or
xchg
in
enter
dec
mov
inc
adc
mov
scas
inc
add
and
add
fstp
mov
cmps
and
loopne
aam
jns
sbb
aaa
cmps
pop
(bad)
fisttp
imul
aaa
xor
iret
xchg
push
loope
push
hlt
sbb
data16
and
sti
ficom
cld
mov
arpl
cmp
inc
jg
push
xchg
nop
push
mov
aam
and
pop
or
xchg
jb
outs
std
lock
addr16
call
jecxz
out
jmp
xor
aad
push
lock
div
push
add
mov
pusha
push
sbb
and
iret
ds
fld
sub
pop
sti
cwde
in
aad
jecxz
and
clc
sbb
pop
jg
jecxz
mov
jbe
popf
(bad)
loope
neg
out
mov
push
call
fist
push
popa
jne
mov
test
xchg
movs
in
xor
arpl
lahf
imul
in
(bad)
push
adc
loop
lock
push
sbb
cmc
js
xchg
jmp
shr
cs
mov
adc
mov
sbb
inc
mov
aas
adc
xchg
pop
loop
ss
inc
hlt
js
xor
inc
jne
jb
inc
into
pusha
cdq
mov
shr
in
xchg
adc
xchg
xchg
(bad)
push
adc
mov
(bad)
inc
and
jg
mov
fst
iret
das
inc
popf
dec
cmp
mov
mov
test
pusha
test
mov
lahf
mov
int
cwde
retf
adc
cmp
test
push
inc
xchg
lock
addr16
cmp
arpl
and
cmp
in
cdq
adc
adc
inc
sbb
ror
dec
imul
xchg
(bad)
imul
iret
and
outs
rcr
ja
test
dec
(bad)
sub
sar
int3
iret
fimul
in
cmp
sbb
cmps
push
pop
mov
js
je
mov
stos
ds
bound
cmp
cli
in
repnz
mov
cdq
icebp
or
pop
ret
fs
mov
inc
xchg
cld
test
xchg
cmp
lahf
mov
mov
adc
test
xor
aad
xchg
xor
cmp
or
sbb
call
fcomp
mov
mov
es
stc
pop
jbe
cmp
or
sbb
test
jno
sbb
jmp
jo
dec
in
into
add
in
scas
push
dec
pusha
mov
es
mov
stc
aas
movs
jg
dec
sbb
mov
xchg
int3
dec
test
or
sub
and
inc
and
sub
(bad)
or
jle
pusha
iret
in
cwde
stc
test
xchg
loope
out
pop
push
pop
jp
fs
fs
xchg
jnp
xchg
(bad)
retf
adc
arpl
push
sti
pop
clc
call
enter
add
repz
shl
test
mov
aam
movs
xor
jo
cs
pop
adc
cmp
cld
sbb
xor
lea
imul
xor
lea
arpl
jmp
imul
out
inc
frstor
cdq
dec
dec
xchg
daa
inc
or
pop
int3
popa
dec
retf
xor
gs
pusha
call
fsub
ret
push
fmul
jbe
jl
sub
stc
xor
push
out
xor
test
popa
mov
add
lds
jo
lods
sti
and
xor
mov
jne
mov
(bad)
xlat
xchg
(bad)
enter
fisubr
inc
mov
arpl
(bad)
stos
fwait
call
mov
ins
push
jb
mov
dec
or
rcr
inc
pop
push
clc
mov
repz
xor
shr
fs
popa
adc
add
out
mov
jmp
ins
push
cld
test
repnz
test
push
pop
(bad)
jecxz
dec
jns
dec
lds
mov
dec
sbb
sub
cld
aad
js
mov
push
(bad)
popf
test
fwait
js
sub
sub
test
popa
jo
pop
das
popf
gs
popa
sbb
mov
cmp
jecxz
add
xor
int
sbb
cmc
pop
push
jp
sbb
or
jnp
xor
pop
dec
add
push
jl
add
imul
shl
loope
or
xchg
in
push
fld
jo
cmps
jnp
aas
pop
push
or
repnz
mov
ss
cmp
es
mov
xor
rcr
ins
shl
mov
inc
jmp
push
scas
les
pop
ficomp
cmp
adc
jecxz
mov
std
push
sbb
jg
sti
repz
rcl
out
jae
jl
jo
imul
pop
outs
dec
popa
adc
imul
sub
repz
sub
(bad)
jbe
xchg
mov
mov
ss
aas
int
cmp
xor
lock
ret
sbb
in
xchg
cwde
push
dec
xchg
dec
fisttp
jge
xlat
adc
dec
adc
in
aas
dec
fdivr
add
mov
mov
aaa
retf
dec
mov
jmp
(bad)
mov
push
fiadd
js
pop
mov
dec
xor
mov
cmps
jnp
data16
add
test
jbe
lods
nop
xchg
imul
jl
es
xor
add
rol
sahf
sbb
mov
aam
xor
imul
loopne
test
fs
les
inc
fisttp
sub
pop
inc
outs
mov
sub
dec
scas
jnp
inc
pop
(bad)
outs
jnp
fisttp
pushf
jg
cmps
cmp
xor
adc
push
ret
adc
pop
push
and
mov
icebp
and
or
cli
ret
cmps
or
pop
xchg
js
jmp
fs
mov
test
and
ss
ins
out
xor
in
and
inc
sbb
sti
rcr
xor
sbb
fcmovbe
sub
fbstp
cmps
and
scas
leave
add
push
stc
sbb
dec
push
(bad)
dec
sbb
div
pushf
cmc
xor
xor
cmc
popf
imul
cmps
jmp
out
inc
arpl
and
adc
dec
mov
rcr
scas
jnp
movs
pop
xchg
jns
out
imul
xor
xchg
leave
test
jge
xor
push
outs
sub
dec
push
ins
rcr
test
jb
xchg
js
dec
aaa
dec
mov
repz
adc
push
ss
call
cmc
pop
or
mov
push
pop
sub
(bad)
jmp
scas
adc
or
jg
fwait
inc
dec
scas
adc
lods
pop
loop
fs
lea
adc
push
push
outs
pop
push
popa
and
into
mov
leave
jmp
jo
outs
std
cmp
cs
in
sbb
xchg
shl
xchg
ins
fs
inc
adc
mov
mov
or
das
lahf
pop
shr
jp
les
jb
ss
sar
dec
fsub
cmp
mov
int
daa
aam
mov
cmp
mov
pop
mov
sbb
call
dec
cld
push
push
sub
jg
sub
dec
rcr
pop
adc
imul
or
std
pop
call
pusha
mul
not
or
(bad)
push
stos
or
(bad)
cwde
jle
int
loop
xor
sbb
xchg
sub
mov
rol
stos
mov
pop
fsubr
dec
stc
jg
or
rcl
inc
pushf
cmp
sbb
pop
rcl
adc
in
add
repz
out
loope
shl
lahf
inc
neg
bnd
inc
lock
add
push
sub
idiv
ins
mov
ret
push
xchg
sub
push
mov
inc
mov
sub
call
push
and
and
outs
or
stos
xchg
std
call
xchg
cmp
mov
jns
imul
dec
or
mov
imul
sub
push
dec
cmps
jp
add
fs
and
jecxz
xchg
sub
popa
scas
dec
jl
in
in
xor
jmp
outs
ins
jae
into
ror
cmp
mov
ins
push
xchg
push
pop
pop
inc
jae
inc
pop
out
lods
or
enter
adc
push
dec
mov
xchg
adc
push
addr16
jle
imul
clc
(bad)
jl
test
mov
xchg
xchg
pushf
hlt
jg
fcmovnbe
pushf
or
call
fisttp
mov
sbb
clc
pop
dec
cmp
sub
cdq
jg
jp
cmps
test
test
mov
ror
ret
psrlw
inc
(bad)
das
sbb
or
out
loopne
call
jns
ror
leave
test
and
jg
int
ret
(bad)
scas
xchg
xchg
pop
mov
pop
mov
movs
sbb
mov
inc
das
xlat
pop
dec
(bad)
mov
loop
cmps
outs
stos
jns
inc
fisttp
mov
jmp
(bad)
mov
hlt
cmc
js
xor
jg
pop
xor
dec
rcr
xor
adc
add
call
push
retf
lock
popa
mov
xchg
adc
in
xchg
test
cmp
jne
shl
(bad)
pop
xchg
or
clc
xchg
cmp
add
mov
call
pop
jecxz
jl
push
or
and
xor
cmp
and
std
xchg
imul
(bad)
out
inc
scas
scas
test
out
leave
call
inc
mov
xchg
and
and
ror
jecxz
or
and
ret
cld
inc
dec
pop
xchg
push
cmps
rcl
cwde
or
mov
or
xchg
(bad)
dec
(bad)
mov
pop
sbb
sbb
cmp
mov
xchg
ror
cmp
and
and
mov
mov
mov
shl
and
repz
cmp
aad
jns
icebp
(bad)
test
mov
fstp
xchg
xor
mov
test
retf
dec
shl
jae
imul
pusha
mov
cmc
int3
xchg
xlat
jge
add
out
dec
jne
je
sub
hlt
stc
sub
pop
sub
mov
in
into
movs
fwait
mov
scas
popa
jb
mov
xor
rcl
loopne
push
jp
inc
jns
(bad)
enter
inc
out
push
jne
retf
push
bound
inc
stos
jns
cmc
push
lds
rcl
mov
aam
not
adc
dec
ja
or
test
sub
outs
out
or
sub
cdq
jnp
mov
bound
mov
outs
(bad)
xchg
sbb
and
jne
dec
repz
arpl
mov
ins
mov
jle
sbb
dec
lods
push
push
xchg
and
jmp
ins
(bad)
fsub
cmps
cmp
int
mov
and
sub
add
das
pop
ffreep
pop
fisub
or
jae
(bad)
cmp
and
mov
test
aas
xor
mov
xchg
pop
sti
or
mov
xlat
daa
pop
xchg
retf
popf
dec
lods
adc
stc
rol
mov
and
dec
int
mov
(bad)
mov
add
ret
stos
cmps
std
into
add
inc
cmp
repz
pop
inc
ja
jnp
lods
fmul
dec
call
aaa
pop
jg
xor
dec
cmc
push
je
add
data16
and
ror
pop
adc
aas
das
jb
nop
rol
mov
sbb
cmp
jne
and
pop
inc
out
int3
ret
iret
aas
shl
mov
push
cmp
xchg
int
test
mov
push
(bad)
fs
jno
pop
sub
test
iret
xchg
xchg
jle
mov
outs
dec
int
scas
mov
outs
xchg
mov
pop
aas
lods
icebp
cmc
pop
ins
adc
aad
sub
stos
push
cmp
lea
xchg
mov
xchg
pop
sbb
mov
(bad)
ffreep
les
call
add
xchg
dec
jge
cwde
inc
sar
fmul
mov
mov
pop
sub
mov
xchg
cmp
jp
pop
stc
xor
push
adc
jbe
inc
movs
ja
mov
ja
test
rol
push
jo
shl
js
dec
xor
neg
dec
xchg
inc
adc
(bad)
(bad)
pop
dec
xchg
mov
xchg
and
push
add
pop
sub
pusha
add
sub
pop
cmp
jmp
fnstenv
popf
sahf
pop
jno
or
inc
sub
inc
in
pop
mov
or
loope
add
xlat
jle
stc
push
fsub
jnp
xor
cmp
es
sbb
sbb
adc
jmp
(bad)
push
inc
push
cld
jo
aam
xchg
adc
add
mov
pushf
bnd
ret
retf
in
cdq
js
adc
int
aaa
test
movs
fsub
mov
jo
xlat
sar
or
out
or
int
pop
sar
in
inc
(bad)
in
pop
mov
pop
jne
xchg
push
adc
add
(bad)
cmp
push
mov
xchg
add
dec
cmps
and
mov
add
add
push
call
mov
add
xchg
jae
adc
sub
mov
push
repz
pop
jge
inc
fstp
lods
jae
add
gs
nop
or
xor
jnp
jnp
imul
neg
add
mov
aad
lds
jge
in
and
pop
dec
gs
aad
or
jl
and
push
and
enter
fst
jne
mov
and
imul
das
inc
lods
fst
fcom
test
retf
lods
push
psadbw
mov
mul
jns
push
and
jle
push
ja
dec
jne
or
pop
stc
sub
push
pop
or
xor
mov
lods
ret
dec
pop
xchg
iret
inc
setle
pop
ins
es
lods
sahf
push
cli
out
ret
add
ins
sub
jmp
pop
pop
jmp
xor
inc
mov
push
retf
call
mov
fsub
enter
dec
mov
outs
xchg
repnz
xor
push
xor
jl
and
shl
push
das
pop
jg
mov
dec
outs
mov
cwde
mov
mov
arpl
js
jl
pop
mov
push
fcom
xchg
std
fnstsw
or
dec
jg
psraw
ja
dec
dec
xlat
retf
ror
std
add
cwde
push
push
mov
add
push
or
jae
push
and
stc
sub
mov
scas
lods
pop
int
(bad)
das
sbb
xchg
lock
in
pop
inc
scas
mov
push
in
scas
ins
mov
jmp
lds
jnp
sub
mov
rol
mov
cld
and
adc
daa
xor
xchg
mov
in
cmps
int
sub
mov
(bad)
mov
cmp
out
mov
mov
cld
mov
pusha
or
js
stos
sub
add
add
stos
and
dec
pop
adc
inc
and
sti
in
sub
pop
add
cld
sar
push
push
and
mov
imul
add
xor
enter
stos
das
mov
call
shl
aaa
or
cmp
xor
ficomp
pop
cmp
mov
push
cmp
(bad)
repz
mov
outs
test
stos
sbb
mov
ins
adc
and
iret
mov
sub
inc
call
jge
idiv
push
test
sub
test
ret
pushf
sbb
stos
dec
leave
sti
push
adc
test
std
cmp
xor
push
aaa
inc
into
xor
push
shl
xor
cmp
mov
out
sar
jae
add
mov
fbstp
js
pop
jbe
jb
pushf
mov
pop
jne
cwde
xchg
int3
and
lock
cs
jbe
mov
std
push
xor
inc
pop
pushf
stos
ds
ret
sahf
pop
cmp
loopne
rcl
les
into
in
std
xchg
inc
int3
adc
inc
adc
push
pop
xlat
mov
xchg
call
test
in
or
and
xor
daa
pop
sub
mov
pop
mov
movs
in
xchg
xchg
xor
xor
pop
mov
pop
pop
adc
sbb
mov
lods
lock
add
icebp
cmp
(bad)
sbb
aam
shl
mov
(bad)
adc
xchg
mov
neg
pop
repnz
cli
jmp
cmps
les
pop
leave
test
cmp
(bad)
pusha
retf
push
mov
xchg
adc
arpl
ret
mov
in
es
push
retf
jecxz
(bad)
mov
inc
in
cmps
mov
(bad)
fsub
in
cmp
or
aam
(bad)
push
sub
jg
xor
popf
fisub
mov
pop
lds
or
bound
shl
dec
sub
jl
movs
mov
jne
add
in
jno
and
or
or
div
cmp
sbb
mov
add
push
jmp
jg
gs
ficom
test
xchg
jae
mov
(bad)
sbb
ins
mov
out
out
(bad)
sub
cwde
dec
mov
das
pop
xor
int
ret
mov
ins
push
xor
jg
and
lea
aaa
loop
add
in
test
mov
cmp
mov
jnp
loope
and
mov
scas
or
inc
mov
mov
cmc
mov
scas
cmp
mov
mov
xor
call
(bad)
or
in
scas
xor
lea
push
and
clc
adc
pop
repz
sub
test
addr16
mov
(bad)
(bad)
stos
out
mov
dec
pop
sahf
icebp
ds
iret
test
icebp
or
pop
pusha
pop
(bad)
jmp
add
inc
mov
test
push
lea
dec
or
jnp
retf
ficomp
outs
pop
repz
mov
push
dec
xchg
iret
iret
xor
dec
fidivr
pop
fsubrp
shl
popf
push
push
dec
jb
dec
retf
or
push
(bad)
mov
sbb
inc
mov
jl
sub
daa
icebp
mov
or
cdq
dec
jnp
mov
loope
jp
test
cmps
dec
ret
aas
stos
test
shl
imul
scas
xchg
xor
sti
add
stos
div
cmc
lds
test
lock
lahf
push
add
pop
shr
inc
nop
gs
cmc
mov
ss
lahf
dec
xchg
ret
mov
in
mov
cmp
cmovle
int3
cwde
stc
ror
xlat
xor
inc
fisub
mov
fisubr
mov
mov
fstp
in
cpuid
xchg
aas
or
scas
lods
inc
in
dec
jl
fcom
pop
mov
and
test
push
push
(bad)
shl
lock
xor
call
mov
test
(bad)
je
pop
xor
scas
and
cdq
xchg
jo
jae
or
mov
rol
push
cdq
jge
xchg
pop
push
ret
mov
ret
add
(bad)
jmp
fimul
cmc
sbb
mov
fs
imul
mov
inc
(bad)
xor
bound
in
not
push
cmp
jg
cmp
mov
les
enter
jmp
or
stos
dec
jmp
shl
call
or
cmp
outs
or
mov
sbb
sub
test
not
cmps
jmp
dec
mov
retf
daa
sub
push
jo
jmp
lea
inc
fsub
pop
jl
shr
and
adc
aaa
rcr
(bad)
jae
movs
mov
or
sub
lods
add
dec
push
das
mov
sub
and
fistp
mov
dec
push
mov
pop
xor
mov
xor
not
fdiv
test
xchg
push
ins
sub
lahf
xchg
cmps
dec
xchg
mov
pushf
cmp
das
call
call
repnz
scas
stos
enter
xor
or
scas
pop
ds
scas
xchg
fdivp
addr16
aam
sti
mov
loop
add
call
mov
dec
add
loopne
bound
mov
jg
pop
push
(bad)
test
inc
jge
or
imul
out
retf
aam
in
xchg
mov
lds
shl
fs
dec
cmp
adc
fstp
xchg
inc
inc
data16
data16
lahf
das
jmp
jb
push
dec
aaa
add
aad
dec
das
lds
ja
shr
sub
lods
jae
cld
mov
addr16
pop
in
test
and
(bad)
retf
retf
aad
dec
imul
div
jecxz
call
push
pop
mov
pusha
mov
(bad)
adc
sbb
jl
dec
shl
xchg
out
dec
sahf
cmc
in
lea
xchg
out
jo
mov
mov
push
int
sub
mov
jnp
sub
cmp
hlt
movs
push
in
std
xlat
retf
jmp
xor
jg
lock
xchg
int
enter
jecxz
aas
cmps
add
scas
ss
push
sub
loopne
xor
aas
xor
popf
daa
xor
sub
bound
xor
pop
pop
adc
fst
jl
dec
(bad)
or
pushf
in
push
imul
xchg
pop
xchg
push
jmp
rcl
rol
(bad)
std
outs
stos
addr16
fimul
add
push
push
lods
popf
pop
aad
sbb
sbb
and
fbld
popa
or
add
mov
push
rcl
fst
arpl
add
fadd
call
call
mov
stos
out
cmp
sti
int
addr16
xchg
fwait
cld
std
scas
loopne
jbe
mov
call
sub
or
out
jbe
loopne
fist
imul
add
pop
adc
aaa
sub
pop
xor
stos
scas
out
xchg
inc
dec
cmc
test
or
adc
xchg
shl
pushf
movs
jb
mov
mov
pop
mov
push
lds
add
cld
sub
addr16
cmp
jae
inc
sub
in
frstor
cmc
or
lock
dec
add
and
xor
popa
add
sbb
aas
fwait
adc
or
pop
in
xchg
pop
cmp
(bad)
cdq
mov
sbb
fiadd
fisubr
in
retfw
mov
test
inc
add
in
data16
or
and
xchg
das
cli
sub
mov
sbb
xor
adc
xor
pop
adc
jmp
into
pop
dec
cmc
xchg
xchg
mov
retf
adc
and
jmp
gs
retf
nop
aaa
pop
ins
hlt
xor
xchg
adc
ss
(bad)
int
jg
mov
aaa
push
leave
ja
int3
stos
out
or
call
adc
imul
mov
xor
jmp
hlt
or
sbb
call
rcl
cwde
and
adc
mov
mov
mov
hlt
jo
jb
xor
das
dec
push
sbb
cld
scas
and
dec
jecxz
and
and
mov
mov
pop
sub
adc
xchg
or
dec
inc
sahf
repz
push
push
(bad)
xor
mov
and
push
jmp
jno
popf
sbb
adc
mov
popf
or
cmp
dec
or
lea
mov
add
mov
jno
add
shl
xchg
jle
lods
mov
test
mov
inc
cmps
pop
fistp
inc
dec
mov
int3
pop
or
sub
push
add
xchg
xor
mov
mov
dec
jnp
mov
cwde
call
add
jp
inc
jae
pusha
mov
aas
mov
mov
(bad)
cmc
inc
xor
fcomp
ss
jo
add
stos
push
imul
xor
mov
inc
fst
mov
mov
in
mov
mov
mov
dec
push
push
dec
lahf
dec
repnz
mov
and
jecxz
nop
cmp
fldenv
lea
xor
jne
cmp
jecxz
push
test
dec
mov
and
jne
imul
ss
gs
jecxz
mov
adc
dec
jbe
add
jmp
mov
xchg
pop
and
das
add
in
dec
push
jno
jns
fsub
loope
das
xchg
mov
mov
cmp
stos
push
push
mov
hlt
sbb
xor
cmp
retf
imul
and
lds
jg
jl
sahf
mov
mov
in
xchg
dec
mov
xchg
cs
pop
xor
pop
jg
cmps
loop
mov
fsubr
cmp
ror
movs
add
scas
mov
mov
out
pop
pop
(bad)
mov
push
cdq
sub
ins
int3
adc
(bad)
aad
jg
xchg
jno
jns
je
lods
fs
mov
addr16
lahf
xor
cmp
(bad)
sub
cmp
push
shl
call
(bad)
cli
push
jno
sbb
adc
pop
fcom
stos
int
daa
push
cmp
add
out
cld
and
outs
in
sbb
pop
pop
push
loope
call
jmp
icebp
jle
xchg
cmp
aaa
sbb
pop
icebp
int3
mov
retf
into
pusha
rcl
scas
cmp
xor
sahf
xchg
cwde
mov
scas
idiv
and
inc
sbb
shl
push
sub
jmp
dec
add
jae
or
mov
sbb
mov
sub
hlt
mov
dec
mov
(bad)
in
lods
dec
mov
cmp
ret
mov
mov
cmp
inc
adc
mov
sbb
push
push
mov
jmp
ror
jp
aam
ret
adc
hlt
and
ins
pusha
jp
mov
(bad)
pop
push
shr
mov
pushf
push
mov
aad
stos
or
xchg
idiv
mov
imul
and
in
mov
fdivr
idiv
loop
pop
push
add
pusha
push
fimul
sbb
stos
xor
fld
sbb
cld
mov
mov
cmp
dec
bnd
cs
xor
out
mov
or
xchg
aam
adc
adc
or
inc
daa
(bad)
xchg
lods
pop
dec
sbb
nop
push
pop
repz
stos
dec
cmps
sbb
xor
dec
std
in
cmp
fmulp
daa
sar
or
cmp
mov
xor
xchg
test
sub
add
xchg
test
pop
in
sbb
rol
sbb
(bad)
in
sbb
xor
das
cwde
mov
jmp
fistp
in
push
lods
dec
int
xor
cli
(bad)
iret
add
sti
jae
fnsave
cmp
shl
outs
pop
std
pop
std
mov
ror
or
mov
dec
xchg
pop
mov
into
scas
loopne
les
ins
mov
sbb
fs
and
data16
out
(bad)
mov
or
mov
loopne
mov
retf
push
push
and
imul
test
ds
fimul
stos
jo
repnz
(bad)
adc
xchg
mov
sbb
cld
fild
pop
in
or
into
rol
mov
lock
cli
mov
mov
mov
inc
or
call
movs
sub
jge
dec
push
into
int3
inc
in
fisttp
in
fisttp
ret
sbb
ret
inc
int
inc
fimul
sub
mov
cmps
or
jae
and
mov
sub
retf
mov
cmp
aas
adc
in
std
or
xchg
add
pop
iret
mov
mov
lods
jge
pop
sub
inc
lock
or
iret
fist
mov
into
sbb
leave
jae
and
ficomp
aas
sahf
mov
(bad)
outs
test
cld
lea
mov
fs
pop
cwde
mov
dec
jno
aad
es
repnz
and
or
pop
mov
or
pop
inc
push
(bad)
in
mov
pop
jmp
lock
push
mov
out
push
pop
and
sub
ins
xlat
xchg
xor
or
mov
das
dec
inc
out
jl
lods
dec
mov
xchg
loopne
in
out
or
or
fs
mov
inc
stos
xchg
aas
jle
out
sbb
dec
adc
mov
jecxz
push
data16
add
js
pop
outs
mov
aad
mov
in
mov
clc
call
popf
add
jnp
out
in
pop
pop
jbe
stc
out
jnp
test
mov
out
fdivr
jmp
pop
scas
test
repz
nop
add
xchg
pusha
bound
mov
push
stc
lea
ficom
iret
inc
mov
push
cwde
sar
rcr
dec
push
lahf
cmp
movs
fild
xor
mov
out
xchg
cmps
out
mov
or
lds
outs
push
ja
fistp
pop
aas
mov
xor
cmp
lock
add
dec
cmp
fnsave
stos
add
xor
sti
cs
push
mov
aam
enter
fwait
icebp
imul
sbb
adc
inc
jle
fdivr
ret
xor
xor
mov
sbb
pusha
push
gs
jmp
stos
int3
data16
cwde
(bad)
mov
mov
clc
cmp
push
ret
shl
outs
(bad)
push
dec
adc
stos
test
inc
mov
addr16
push
fs
jb
lds
or
xor
lahf
ficom
sbb
stc
pop
daa
sub
push
(bad)
cmp
jp
imul
test
mov
mov
jo
pop
push
mov
(bad)
(bad)
jnp
nop
je
mov
push
mov
shl
in
or
mov
jmp
popa
or
push
push
sbb
mov
lahf
test
mov
shl
sub
inc
cmps
aam
or
xchg
sbb
das
hlt
xor
call
mov
mov
push
mov
mov
stos
jmp
cmp
pop
xchg
fs
call
test
mov
ret
jp
rol
loope
cmp
pusha
sbb
add
sbb
imul
das
mov
dec
retf
sub
pop
cmp
xchg
or
push
pop
(bad)
xchg
cmps
or
adc
cdq
daa
xchg
(bad)
inc
mov
fsubr
lahf
xor
(bad)
test
out
dec
(bad)
mov
xchg
(bad)
bound
jle
popa
mov
and
sahf
ins
mov
ror
mov
movs
fwait
and
retf
das
test
pop
jbe
and
add
out
push
mov
cwde
ds
sti
scas
pop
push
pop
pop
test
repz
xchg
inc
push
out
sub
push
xchg
clc
pop
into
ret
or
push
ficomp
mov
jno
retf
rcl
inc
sahf
data16
fisub
jo
loop
out
aas
das
test
mov
xchg
out
ins
cmp
pop
dec
test
fcmovnbe
pop
sbb
xchg
mov
mov
xor
loop
jb
mov
add
push
xlat
lods
in
icebp
(bad)
jge
aad
pop
dec
scas
retf
inc
inc
mov
je
cmp
stc
not
mov
mov
imul
and
fwait
inc
cli
xchg
sar
aaa
stos
fs
sbb
es
int
dec
jo
mov
frstor
and
adc
and
pop
pop
jae
xlat
sbb
daa
ficom
dec
sar
add
mov
ja
mov
mov
push
inc
arpl
mov
push
mov
test
inc
lea
fwait
mov
rcl
cmp
test
xor
pop
repz
sbb
in
sahf
cmp
mov
aaa
or
sar
mov
enter
mov
mov
enter
movs
movs
shl
sub
push
ror
mov
lds
nop
(bad)
mov
inc
jmp
imul
xchg
in
jnp
pusha
das
outs
inc
jge
call
pop
shl
cwde
cpuid
bound
leave
pop
outs
or
add
dec
mov
repnz
pop
(bad)
(bad)
out
mov
nop
gs
dec
and
or
jo
cli
addr16
jbe
in
aas
mov
pop
pop
push
adc
mov
imul
lds
loopne
push
sub
out
xchg
cmp
xchg
fld
cmp
mov
xchg
arpl
mov
ret
(bad)
mov
mov
xchg
xor
mov
jp
int
dec
or
and
mov
enter
and
mov
loope
mov
test
imul
lock
xchg
push
mov
mov
sbb
shr
xchg
cmc
in
lock
sub
imul
push
inc
mov
jmp
clc
add
sahf
fcmove
dec
ins
pushw
xor
fimul
in
adc
inc
mov
aas
mov
jmp
stos
call
imul
mov
fcmovbe
repnz
adc
sub
pop
jmp
add
ret
push
pushf
mov
jne
jg
test
cmp
fcomp
sbb
cmp
scas
je
fist
ret
sbb
pop
(bad)
jns
ret
rol
cli
mov
sbb
sar
cld
xchg
pop
sahf
sbb
loopne
jp
arpl
in
push
loopne
ret
sub
(bad)
into
fnstenv
push
inc
inc
outs
and
test
pop
ins
mov
js
ins
repnz
add
iret
xchg
xchg
add
xchg
dec
in
xor
mov
lock
out
pusha
fisub
xchg
push
jne
jae
sbb
jg
push
mov
fs
xchg
sbb
xchg
lock
pop
and
jle
adc
xchg
int
loop
into
adc
rcl
daa
(bad)
fdiv
mov
jmp
adc
cmp
call
mov
mov
ror
push
or
xchg
or
adc
xchg
mov
cdq
adc
js
in
pop
pop
fcmovu
(bad)
ds
push
scas
jnp
jmp
call
test
sahf
fidiv
repnz
push
sub
js
pop
cmp
repnz
lds
repnz
mov
push
jp
and
gs
pop
xor
xor
mov
sbb
inc
loopne
mov
sbb
pop
in
dec
dec
pop
dec
sub
or
or
dec
test
inc
jno
xor
pop
pop
push
mov
aad
shl
xor
mov
mov
mov
aaa
test
imul
add
das
xchg
jl
jmp
adc
inc
inc
or
iret
in
or
inc
(bad)
movs
sub
ss
in
jmp
xor
lock
out
mov
je
pop
push
cmps
pop
jmp
mov
sbb
mov
aam
cmp
ret
loopne
mov
scas
mov
dec
dec
retf
or
xchg
xchg
jge
jg
out
ror
xor
bound
fcmovne
add
inc
and
pop
into
push
push
test
arpl
dec
pop
loope
mov
push
sub
and
add
pusha
lods
mov
cmp
cdq
jne
xchg
cdq
inc
sub
push
cmp
clc
and
jae
loope
(bad)
int3
sub
(bad)
jne
repnz
(bad)
pop
icebp
sti
jae
jecxz
mov
pop
jo
loop
sbb
ret
test
mov
(bad)
jmp
push
sti
ins
imul
dec
out
push
jae
ret
add
lea
mov
push
fist
(bad)
stos
cmp
in
mov
adc
(bad)
jg
add
add
aaa
push
test
xchg
aam
ds
mov
sub
mov
ins
sbb
add
ins
sub
jno
and
inc
push
call
dec
mov
loopne
(bad)
addr16
std
mov
ret
push
mov
std
iret
(bad)
std
add
cmp
rcr
loop
mov
inc
mov
test
add
jg
mov
or
out
adc
inc
mov
jmp
add
retf
std
pop
push
ins
mov
mov
in
pop
sub
cdq
or
mov
into
and
(bad)
es
cli
(bad)
nop
iret
mov
lea
mov
lahf
bound
xor
scas
pop
ret
pop
mov
std
lea
das
arpl
push
mov
cmp
mov
add
xchg
jle
sti
dec
add
add
cli
xchg
cwde
std
clc
sbb
dec
xchg
imul
inc
gs
add
inc
outs
adc
sub
sub
je
cmp
pop
lods
xchg
jge
imul
jne
mov
sbb
xchg
or
cld
(bad)
jae
ds
call
call
or
mov
dec
jle
loop
mov
mov
stc
in
std
fld
jns
cmps
and
sbb
mov
pop
jmp
jbe
icebp
mov
fbstp
sbb
jnp
aas
stc
hlt
inc
and
jb
ss
add
mov
mov
xchg
fsub
mov
mov
fcmovbe
add
push
xchg
mov
xchg
pushf
aas
inc
jo
pop
fiadd
adc
popa
inc
cmp
pusha
push
int3
sub
nop
adc
mov
push
scas
mov
sub
mov
int
sub
dec
movs
jbe
dec
ins
rcr
pop
in
mov
cmps
nop
xor
test
(bad)
and
jmp
or
in
popa
shl
es
ds
add
sub
cmc
out
mov
(bad)
ret
or
xchg
into
fnstcw
jnp
xchg
or
cmp
and
and
fnstenv
fs
push
add
and
cmp
dec
je
ret
mov
je
ja
into
adc
pop
mov
fucomp
cmp
test
bound
fidiv
sbb
mov
dec
loop
jno
add
int
mov
fiadd
(bad)
in
xor
and
in
movs
ins
dec
cmp
xchg
dec
out
pop
sub
mov
sti
loop
or
out
jnp
shr
cmp
hlt
shr
push
adc
mov
fs
rcl
mov
repz
outs
inc
or
xchg
jmp
mov
scas
jle
xor
aaa
pop
popa
in
jge
mov
dec
jbe
push
das
dec
call
fild
cmp
lock
push
dec
mov
out
jmp
stos
fistp
and
dec
jmp
add
or
mov
js
cmps
push
cmp
xlat
xchg
mov
mov
push
add
jmp
mov
pop
add
and
cwde
jp
les
adc
out
or
ret
sbb
adc
xchg
jb
aam
add
and
push
jb
das
pop
loopne
arpl
ins
cmps
stc
imul
dec
mov
and
cmp
je
or
(bad)
jae
add
aad
dec
or
not
and
cmp
rcl
push
(bad)
rcr
ret
into
js
mov
outs
inc
cmp
jbe
push
mov
inc
jo
int
xor
and
or
push
push
cmps
ins
mov
inc
xchg
fdivr
add
push
cmp
inc
cmp
sahf
mov
ss
push
inc
out
int
mov
icebp
mov
stos
dec
sbb
xor
push
call
inc
iret
mov
pop
dec
add
jp
or
mov
shr
rol
push
sub
mov
hlt
daa
dec
gs
dec
add
push
sti
sbb
xor
push
sahf
cmc
cmp
fld
pop
mov
dec
int
or
jmp
lods
clc
cmp
lods
cmp
test
jge
fwait
std
(bad)
or
shl
clc
push
or
mov
mov
inc
ins
aam
dec
pop
dec
gs
inc
cmps
dec
dec
aaa
or
mov
sub
dec
mov
pusha
aam
adc
adc
xchg
jmp
jp
mov
arpl
pop
(bad)
mov
jno
xor
div
xchg
mov
pop
inc
push
jns
test
ret
out
lds
xchg
call
popa
pop
jo
pop
icebp
cmps
js
mov
inc
xor
jp
clc
out
fdiv
jmp
std
and
mov
test
jp
(bad)
and
sbb
sbb
mov
inc
scas
je
cwde
mov
and
cmc
fmul
aam
mov
mov
mov
sbb
jne
cmp
and
mov
mov
sub
imul
xlat
dec
mov
mov
mov
fld
fwait
cmp
sub
add
inc
dec
call
icebp
out
dec
mov
ds
dec
retf
scas
cdq
aad
icebp
jnp
cmp
inc
into
pop
add
cwde
push
inc
addr16
jge
test
sub
je
or
retf
retf
push
popa
mov
jmp
fdiv
and
sub
dec
dec
ficom
popf
xlat
add
xchg
scas
cmp
addr16
jecxz
enter
rcr
dec
and
gs
xchg
lds
dec
xchg
pushf
dec
mov
test
fwait
sbb
xchg
fwait
call
dec
jle
inc
popa
imul
out
cmp
arpl
push
jmp
pop
add
pop
inc
data16
xchg
mov
mov
cmp
out
adc
aaa
xchg
sbb
mov
mov
pushf
mov
push
(bad)
pop
data16
mov
jp
jmp
jbe
cwde
or
ror
ret
lock
mov
pop
jecxz
outs
jp
ds
fdiv
in
loop
je
push
dec
(bad)
in
sub
add
retf
test
in
fcomp
arpl
mov
shl
enter
dec
lahf
fwait
pushf
mov
cdq
add
loopne
xchg
lahf
icebp
aaa
popa
fistp
add
leave
mov
mov
add
es
push
jge
int
dec
fmul
lods
lahf
test
jmp
add
out
int
scas
adc
clc
(bad)
mov
popf
or
add
(bad)
add
mov
adc
out
fild
loop
and
mov
inc
jecxz
sub
sbb
xor
leave
mov
test
xor
cmp
mov
ror
mov
in
neg
jp
or
push
out
jl
test
jmp
sbb
adc
sub
sub
dec
arpl
mov
mov
sbb
das
or
rcr
cmp
add
out
js
adc
inc
ror
mov
and
leave
mov
xor
mov
sbb
cmp
leave
pusha
mov
lea
mov
jmp
pop
and
leave
inc
add
clc
nop
dec
xchg
loopne
pushf
mov
imul
jo
cmc
dec
xor
push
pop
ss
sahf
and
add
pop
test
jmp
lahf
sub
sub
fistp
sahf
lahf
div
mov
outs
dec
jl
dec
xor
jno
sbb
jecxz
mov
dec
or
mov
or
or
lods
mov
aam
in
or
inc
pop
mov
or
jo
fsubp
gs
rcr
sub
(bad)
shl
mov
das
je
dec
retf
xchg
mul
stc
(bad)
retf
inc
mov
add
dec
inc
(bad)
repz
(bad)
test
mov
jge
(bad)
hlt
ret
jno
cdq
xchg
aas
mov
adc
cmp
hlt
sub
ins
or
(bad)
int3
(bad)
cmp
or
and
popaw
add
fcmovb
lods
push
popf
xchg
fcomi
pop
sbb
stos
or
sub
dec
iret
jmp
in
sub
dec
xor
mov
daa
loop
mov
(bad)
cli
call
sbb
mov
xchg
pop
(bad)
loopne
adc
push
fucomp
add
call
fbld
popa
dec
sbb
jmp
rcl
pop
imul
xchg
jns
popa
mov
xchg
jecxz
adc
adc
inc
sub
cmp
cs
cwde
(bad)
pop
jmp
(bad)
xlat
mov
or
mov
enter
cmc
push
repz
jae
mov
xchg
pop
jb
movs
int3
pop
in
push
inc
adc
jp
mov
mov
ins
sub
push
in
sub
or
js
(bad)
mov
call
adc
rol
das
add
popf
jl
rol
(bad)
or
jmp
(bad)
mov
xchg
neg
add
in
jl
push
sub
retf
repnz
(bad)
mov
inc
push
movs
sub
xchg
and
retf
push
bound
inc
xor
sub
les
pop
dec
test
loope
mov
and
iret
cmp
push
inc
jg
and
push
mov
rol
shr
shl
inc
test
sbb
inc
mov
jmp
mov
sub
pusha
sbb
cwde
xchg
or
dec
mov
hlt
retf
out
cmp
out
xlat
stc
xchg
pop
mov
aam
mov
pop
in
lods
ins
xchg
push
mov
mov
push
mov
in
inc
movs
push
fisubr
es
stc
ins
sub
sub
jg
sbb
pop
mov
push
fmulp
jecxz
or
dec
dec
or
and
push
out
arpl
aaa
neg
test
inc
imul
adc
push
sub
dec
jmp
jne
mov
fdiv
scas
mov
pcmpeqd
push
popf
out
test
fnstcw
cmp
mov
sub
cmp
mov
or
cmp
dec
mov
shr
mov
xchg
or
sar
pop
pop
nop
sbb
xor
mov
test
mov
adc
movs
data16
mov
sahf
add
jno
cmp
dec
and
loop
jne
jge
rcr
xchg
sub
jmp
sub
push
and
imul
shr
stc
into
adc
and
or
(bad)
mov
or
es
pop
ins
pop
mov
pushf
mov
aad
sub
cmps
ror
sub
loope
inc
dec
pop
xchg
mov
mov
aaa
mov
(bad)
stos
sbb
cmp
mov
iret
sti
aam
dec
(bad)
mov
in
je
and
push
adc
add
push
xchg
aas
pop
cmc
pop
inc
jae
pop
xor
fsub
jl
sub
adc
sbb
sahf
adc
mov
les
jmp
inc
stos
adc
jmp
mov
or
cmp
fcmovb
xchg
int3
ja
popa
jo
aam
mov
sub
or
adc
and
arpl
and
mov
cmp
movaps
ret
adc
jae
loop
lahf
jno
inc
daa
add
xchg
cdq
arpl
lds
dec
xchg
mov
ret
dec
adc
shl
jo
ret
repz
mov
pop
cwde
mov
in
shl
inc
inc
test
push
cmp
mov
(bad)
xlat
push
in
xchg
jp
sub
js
dec
pop
ret
or
inc
out
in
js
add
fwait
add
pop
inc
cmp
and
cmp
popf
in
inc
outs
rcl
les
pop
mov
into
cmp
dec
scas
fucom
mov
fucomip
fild
sub
lahf
hlt
cmps
into
scas
mov
ror
cmp
imul
inc
cmp
call
adc
fwait
push
adc
add
add
and
pop
mov
das
or
rcl
mov
rol
dec
adc
jmp
and
jl
repz
retf
rcl
fsubp
mov
sub
sub
pop
adc
pop
sbb
std
std
adc
jmp
xor
inc
xor
aas
jnp
rcr
add
sub
pusha
jb
rol
sbb
out
fistp
cmp
push
or
sub
jo
mov
push
mov
cmp
fldcw
pop
dec
add
and
push
inc
aaa
cwde
lock
jmp
into
jns
cmp
bound
jne
fs
jp
jnp
mov
or
pop
shr
pop
pop
into
stos
or
shl
je
aaa
xor
mov
pop
cld
fstp
ret
std
inc
into
jle
mov
xchg
arpl
inc
mov
sub
or
inc
mov
inc
gs
sar
inc
inc
xor
mov
mov
pusha
enter
(bad)
imul
mov
sbb
sub
test
and
sti
lock
popf
loopne
imul
(bad)
je
pop
test
cli
int
add
in
xchg
push
cmp
mov
xlat
cld
push
jbe
xchg
aam
dec
mov
outs
stc
mov
add
pop
loopne
enter
push
out
xor
adc
cmp
loopne
clc
test
mov
pop
pop
cmp
inc
jge
icebp
call
outs
ret
jns
mov
in
jnp
clc
cmp
imul
loop
lock
sub
sub
cmp
add
cmps
xchg
pop
and
enter
sbb
add
dec
mov
call
adc
sbb
cmp
inc
out
jg
jmp
or
out
sub
and
cdq
inc
mov
into
inc
outs
xchg
popf
mov
pslld
movs
nop
jne
push
stc
add
mov
fist
das
cwde
aaa
sbb
mov
xor
jmp
mov
push
jne
test
or
and
mov
sub
popa
scas
xlat
retf
cmp
ins
sti
gs
and
repz
jl
in
dec
std
aad
cmp
leave
add
inc
out
adc
retf
jge
cmp
jb
stos
enter
data16
clc
inc
push
in
add
icebp
sub
enter
jle
aam
mov
dec
movs
repnz
mov
cmp
stos
out
sbb
shr
adc
std
aaa
popa
(bad)
xadd
lahf
pushf
mov
shl
cmp
mov
cmp
inc
jns
adc
inc
mov
nop
inc
jmp
out
mov
and
adc
and
fnstcw
pusha
or
rcl
xchg
mov
gs
and
cmp
scas
fistp
xchg
pop
nop
adc
mov
dec
fcom
or
mov
xchg
push
fldcw
cmp
ficomp
test
scas
xchg
icebp
ret
dec
pop
outs
jb
dec
jp
jl
adc
dec
jg
cmp
lea
popa
out
sti
mov
dec
dec
(bad)
adc
shr
pop
icebp
cmps
outs
adc
cmp
push
push
dec
or
loope
pop
mov
shr
clc
and
fiadd
adc
mov
or
(bad)
clc
mov
shl
xor
loope
mov
jl
or
mov
mov
inc
or
das
pop
pop
jg
mov
add
xchg
std
cwde
inc
(bad)
mov
sbb
nop
test
or
(bad)
sub
dec
jae
pop
push
jb
and
sub
xlat
imul
pop
cld
adc
mov
iret
cmp
popf
aam
sub
jge
jae
xchg
cld
cwde
jae
fucomp
xor
dec
xchg
jmp
cmps
sub
frstor
dec
sbb
sub
aad
hlt
jbe
mov
dec
jae
dec
push
ds
test
sbb
movs
ret
mov
pop
adc
pop
fsub
bound
and
sbb
xchg
and
bound
jb
das
jg
ja
mov
dec
imul
sub
mov
pop
out
int3
adc
add
mov
cmps
push
mov
dec
lock
aam
xchg
(bad)
adc
fnsave
icebp
loope
pop
and
les
in
ins
jns
xchg
pushf
push
test
mov
das
jmp
shl
mov
shl
cmp
arpl
mov
sub
pop
in
stos
movs
dec
gs
ret
dec
add
aam
pop
fs
xor
jl
pop
lods
call
into
scas
xchg
add
movs
les
pop
xor
push
test
mov
sahf
jge
in
ins
in
test
push
xchg
xor
mov
xor
mov
jmp
gs
cmp
cmps
push
and
xor
sbb
sub
mov
sub
sti
scas
pusha
xor
and
(bad)
int
mov
into
or
and
(bad)
xor
pop
add
jae
xchg
into
(bad)
int3
inc
push
fs
jmp
imul
xchg
cmp
jle
mov
xchg
in
sub
dec
out
popf
popa
and
push
clc
dec
mov
dec
sar
ins
mov
movs
and
shl
nop
(bad)
push
push
in
xlat
mov
jo
sbb
aad
nop
jmp
(bad)
cs
pushf
sub
jle
out
nop
pop
mov
pop
jecxz
mov
add
mov
movs
xor
xchg
sbb
mov
push
or
sbb
adc
leave
fs
sbb
cmp
pop
adc
dec
cmp
sbb
jbe
inc
jns
jo
retf
sub
xchg
cli
in
hlt
add
mov
jge
sbb
into
sub
sbb
outs
mov
and
xchg
cmps
int
pop
jmp
mov
daa
add
adc
loopne
lahf
cmp
aad
inc
les
stc
leave
ss
or
mov
jg
xor
sahf
dec
(bad)
jae
mov
hlt
pop
jae
adc
xor
aad
pop
xchg
or
inc
mov
es
test
imul
mov
sub
daa
out
inc
mov
retf
inc
jmp
add
je
jl
adc
and
in
inc
shl
je
shr
out
adc
cmp
fst
xchg
xchg
sub
retf
mov
push
pop
cmp
dec
jecxz
dec
xor
pop
cld
adc
test
inc
jno
mov
adc
sbb
stos
paddusw
mov
sbb
sti
mov
add
cmps
jae
(bad)
jno
inc
add
and
sub
add
jbe
loope
repz
aas
lods
lods
xor
pop
in
in
in
sahf
test
call
pop
add
adc
inc
mov
adc
xor
mov
enter
jmp
(bad)
out
dec
clc
push
rcr
fdivr
add
fiadd
into
rcr
inc
mov
sbb
push
je
call
adc
xor
add
adc
and
loopne
mov
and
adc
inc
xlat
mov
mov
je
and
mov
xchg
or
inc
pop
stos
sbb
fcomp
sub
mov
sub
mov
popa
ins
std
mov
aad
leave
xor
cmp
arpl
std
push
hlt
mov
ror
add
jmp
jp
xor
jl
iret
lahf
cmp
mov
and
push
cmps
jae
xor
cmp
mov
mov
mov
push
div
mov
loope
mov
sub
mov
jo
mov
or
cwde
pop
ror
pop
inc
mul
imul
movs
mov
retf
hlt
push
mov
int
jle
fisttp
add
out
cmp
in
imul
adc
loope
in
inc
and
fwait
jle
jb
sbb
lods
lods
rcl
sub
mov
shr
xor
(bad)
xor
sahf
mov
push
cwde
dec
mov
shl
or
and
pop
les
xor
or
cli
mul
test
or
sub
test
loope
out
pop
cmps
mov
stos
and
mov
mov
cmps
add
hlt
mov
(bad)
pop
xor
out
sahf
rcl
push
cmp
mov
out
xchg
pop
pop
inc
adc
mov
outs
inc
mov
mov
push
adc
icebp
push
add
pop
cmps
dec
sahf
cmp
mov
shl
icebp
sbb
push
cmp
or
jb
imul
adc
jno
xchg
js
or
(bad)
jecxz
and
jb
icebp
(bad)
pop
mov
iret
or
arpl
sub
jo
push
outs
pop
push
jbe
dec
cld
loope
test
cmp
mov
retf
popf
adc
jp
jecxz
retf
ror
mov
jl
add
rol
sbb
lds
adc
mov
cmp
xor
and
js
mov
add
data16
jo
push
test
ja
int3
push
aaa
ret
add
mov
and
or
popf
data16
adc
jno
sbb
xchg
mov
jecxz
xlat
xor
in
sbb
mov
test
mov
mov
je
aam
and
jnp
(bad)
rol
jecxz
or
ficomp
push
or
push
fmul
cdq
adc
ss
daa
mov
push
int3
fistp
pop
outs
push
in
cli
xchg
jb
sbb
icebp
xchg
retf
int3
(bad)
xor
mov
clc
add
rcr
pop
xchg
xchg
push
lods
sahf
mov
movs
mov
sahf
pop
fdivr
xor
inc
dec
lock
inc
push
push
inc
xchg
mov
mov
pop
or
and
sbb
or
scas
push
dec
mov
jnp
jmp
xor
shr
stos
or
das
sbb
aad
pusha
or
fcomp
xchg
or
shl
js
or
adc
mov
pop
pop
and
jp
pushf
in
in
pop
aad
pop
pop
ins
mov
dec
aam
mov
sbb
popf
in
sub
aas
in
shl
enter
ret
sbb
add
mov
pop
cmp
retf
sti
dec
cdq
sbb
out
inc
into
lock
push
adc
jmp
cli
push
fstp
adc
sbb
pop
push
xor
inc
fucom
pop
dec
sub
fiadd
and
rol
add
cmp
es
sbb
leave
sbb
loop
movs
inc
std
push
pop
sub
mov
icebp
test
(bad)
adc
dec
sub
loope
sub
shl
(bad)
aaa
inc
retfw
mov
cmps
mov
push
ins
repz
xchg
dec
mov
test
sbb
fsubr
push
mov
xor
cmps
retf
and
mov
jmp
in
mov
outs
sub
xchg
icebp
jno
adc
pop
pop
sub
add
repz
rcr
arpl
push
add
(bad)
test
jbe
stos
cmps
fstp
mov
sub
cmc
into
stos
sbb
(bad)
jp
ds
or
pop
sar
out
mov
adc
lea
pop
(bad)
sbb
sub
add
push
out
popf
clc
pop
jp
stc
jb
std
(bad)
ds
dec
stos
jle
push
not
loopne
dec
or
scas
xlat
ins
push
xchg
cmc
adc
jecxz
pop
mov
(bad)
cmp
out
rcl
retf
ja
jbe
mov
out
cmp
movs
std
call
inc
fmul
lods
ret
jecxz
icebp
(bad)
push
or
inc
in
push
out
movs
push
pop
or
push
pop
mov
mov
push
or
cmps
or
sub
or
push
ins
hlt
retf
es
mov
loopne
xor
cmps
xchg
jb
sub
ds
add
test
mov
je
jne
fwait
xor
add
xchg
ds
movs
inc
(bad)
push
mov
adc
in
xor
ror
ds
hlt
push
test
mov
mov
(bad)
cdq
test
lock
div
cwde
fnsave
jnp
inc
sti
hlt
ret
and
popa
mov
jl
fldenv
scas
loop
cmps
jg
out
movs
push
or
shr
ins
lods
iret
add
cmps
mov
dec
push
ins
xor
adc
lods
addr16
mov
repz
mov
stos
cmp
xlat
fsub
push
jg
pop
mov
fmul
enter
int3
mov
mov
test
inc
jp
mov
test
clc
into
stos
jbe
inc
add
pop
mov
mov
push
fidiv
test
dec
jle
cmp
jbe
pop
(bad)
pop
hlt
scas
(bad)
cmp
adc
or
jno
mov
mov
add
add
dec
jmp
test
fwait
pusha
imul
adc
pop
stc
dec
inc
inc
mov
adc
mov
(bad)
in
mov
xchg
fldenv
ror
pop
push
ss
or
push
adc
and
loop
xchg
and
out
mov
arpl
and
mov
aaa
push
mov
movups
mul
pop
inc
sbb
push
mov
xchg
aad
dec
ficom
jp
(bad)
xlat
out
cld
(bad)
sbb
cli
mov
cmp
enter
push
inc
test
fcom
inc
out
lea
sahf
rcl
loopne
ret
test
pop
shl
xor
test
daa
(bad)
fwait
jb
pusha
push
dec
push
outs
push
push
outs
(bad)
jbe
js
add
imul
out
or
jbe
call
xchg
mov
cdq
dec
add
pop
lock
mov
aas
fiadd
add
ja
out
leave
dec
(bad)
pop
dec
push
xchg
inc
test
mov
push
xchg
aad
retf
inc
ja
ins
dec
mov
pop
bound
add
loop
rol
dec
jmp
xlat
dec
fld
dec
daa
mov
imul
aas
push
push
repz
xchg
in
lods
push
xchg
sub
adc
cmp
(bad)
out
mov
mov
mov
jb
jns
xor
dec
jmp
fldenv
or
mov
dec
test
mov
outs
outs
sbb
inc
xchg
aad
and
jns
mov
(bad)
push
cmps
jns
mov
and
mov
xchg
jg
fcmovnbe
iret
mov
sahf
mov
or
js
sbb
dec
fdiv
retf
iret
dec
fnsave
retf
jb
adc
gs
add
push
movs
retf
dec
imul
fistp
cmp
xchg
mov
pop
mov
add
dec
stos
jo
pop
xor
inc
outs
cmp
dec
xchg
add
ret
mov
add
leave
dec
add
in
add
or
arpl
loopne
jo
sbb
dec
stc
jo
je
mov
je
sahf
pop
adc
or
cdq
mov
mov
and
sub
sub
xchg
cli
(bad)
fstp
add
in
pop
push
arpl
pusha
push
je
mov
inc
xchg
hlt
ins
sub
es
dec
adc
mov
test
gs
or
fild
push
sbb
xchg
xor
mov
clc
les
xchg
mov
and
int
sub
popa
push
adc
push
out
jecxz
inc
push
fs
sbb
sub
mov
ret
adc
scas
lahf
fs
ins
jne
xchg
scas
ss
data16
pop
mov
fsub
mov
(bad)
(bad)
daa
jnp
jne
push
(bad)
pop
sti
ins
out
mov
sbb
jno
loopne
scas
clc
in
cmp
lds
fcom
sub
or
and
cmp
mov
mov
adc
addr16
inc
mov
mov
ds
mov
vminss
fiadd
add
dec
std
fmul
mov
push
mov
mov
pop
jne
xchg
mov
out
dec
in
in
add
rcl
and
pusha
(bad)
push
jecxz
out
test
inc
dec
inc
xchg
add
int
add
or
jbe
jecxz
ja
mov
lock
retf
push
sub
xor
dec
add
adc
jb
cwde
fsubr
pop
mov
data16
push
cdq
pop
sbb
(bad)
fdecstp
adc
add
mov
bound
repz
lods
ror
adc
jl
(bad)
out
cmp
hlt
pusha
xor
cs
fsubr
xchg
xchg
sbb
pop
cld
mov
mov
jmp
lea
push
add
xlat
clc
mov
daa
or
int
btr
or
call
aad
sub
test
test
sbb
and
adc
sub
(bad)
movs
sbb
fld
(bad)
push
mov
loop
repz
jle
mov
mov
(bad)
pusha
sub
jmp
fld
rol
mov
int3
push
retf
xchg
in
or
test
add
scas
cmp
rdpmc
sbb
mov
out
fist
add
test
lds
popa
outs
push
clc
xchg
fild
mov
mov
dec
xor
bound
sub
imul
jb
pop
mov
mov
aas
sub
sub
jp
add
imul
or
cmps
(bad)
adc
or
(bad)
jbe
nop
mov
inc
loopne
push
cmps
mov
mov
pop
sub
mov
ficomp
pop
fstp
mov
call
enter
mov
clc
push
lahf
jbe
ja
inc
scas
out
jbe
push
sub
int3
push
cmp
jnp
mov
imul
xor
leave
ret
xor
ror
and
jno
scas
xchg
dec
stos
pop
xor
mov
ss
stc
test
cs
mov
in
mov
mov
sbb
mov
pop
jnp
jecxz
and
aad
scas
add
pop
adc
xchg
ds
adc
sub
lods
pop
pop
inc
ret
push
add
pop
lea
mov
push
pop
add
cdq
je
ror
stos
cmp
imul
adc
mov
mov
test
shl
(bad)
icebp
adc
adc
pop
ret
ffreep
pop
mov
ret
rcr
imul
bound
jns
sub
ficom
jle
(bad)
cmps
repnz
sbb
imul
into
adc
imul
mov
jg
pop
into
imul
adc
retf
mov
mov
les
mov
mov
pop
xchg
adc
sub
fisubr
sti
inc
xchg
out
add
enter
dec
and
mov
ss
mov
bswap
jbe
xor
push
push
loopne
or
out
xchg
movs
fnstenv
icebp
dec
dec
mov
add
adc
cmps
test
int
xchg
push
scas
add
sub
scas
jbe
jb
xor
or
dec
push
ja
stc
xchg
les
sar
xchg
mov
sbb
jns
sub
xchg
or
and
(bad)
pop
xchg
and
pop
push
ins
sti
mov
and
shr
mov
jle
mov
xor
pop
jl
and
add
fldenv
ins
scas
mov
jbe
in
int3
jle
dec
stos
movs
sbb
mov
xchg
sbb
cmp
or
nop
aam
(bad)
cld
(bad)
int
lods
and
fwait
dec
pop
bound
or
mov
pop
leave
pop
aas
pop
dec
ja
dec
ds
retf
or
xor
dec
cmp
mov
sbb
ss
fsubr
(bad)
gs
out
cli
xchg
mov
jae
fiadd
clc
cs
inc
xchg
dec
loope
das
add
mov
mov
sbb
xor
(bad)
fist
mov
stos
outs
fcomp
mov
(bad)
mov
dec
hlt
cmp
les
test
xchg
pusha
dec
push
setle
mov
fcomi
xlat
inc
rcl
dec
push
es
stos
shl
and
int3
mov
call
out
pop
xchg
dec
jcxz
mov
pop
clc
clc
adc
mov
or
mul
fidivr
in
jge
jmp
test
popa
mov
push
and
retf
addr16
sti
pop
aam
dec
and
aas
inc
pop
cdq
sbb
imul
jl
lock
aas
push
popa
cmp
pop
mov
pusha
push
xor
xchg
shr
xchg
enter
cmc
xor
lods
jno
dec
xchg
jnp
xor
jb
test
add
sub
pusha
imul
add
adc
fcmovne
stos
addr16
mov
test
hlt
int
aas
cld
mov
or
ins
sti
jmp
outs
call
leave
and
inc
jne
sub
ret
in
(bad)
pop
loope
(bad)
xor
pop
or
popa
cmp
mov
ja
lds
test
mov
cmp
push
push
mov
ficom
xor
xor
das
scas
sub
loopne
daa
stos
adc
ficomp
idiv
outs
jbe
lods
cmp
add
or
mov
icebp
and
idiv
mov
jmp
push
popa
push
jg
movs
mov
mov
call
jge
add
lea
inc
dec
popa
sbb
push
lock
ret
xchg
jle
sbb
daa
push
div
jno
das
pop
pop
jmp
pop
or
xchg
aas
adc
cmp
cmp
mov
ins
aad
push
(bad)
and
(bad)
or
lods
repnz
mov
push
daa
add
push
ins
sub
add
lods
fst
in
cmp
frstor
push
push
stos
add
inc
push
inc
test
fsub
retf
mov
cmp
sbb
cli
adc
aad
ja
mov
and
dec
stos
xchg
sub
lods
cmp
mov
pop
mov
inc
cmps
neg
mov
cmp
call
(bad)
(bad)
rcr
std
daa
(bad)
rol
movs
mov
push
loop
cwde
fild
cwde
push
mov
outs
cmp
add
jne
adc
sbb
push
push
dec
sbb
pop
adc
jb
ds
mov
and
inc
adc
shr
xor
mov
sbb
je
inc
dec
mov
sar
ins
das
dec
push
fs
pop
lahf
test
push
dec
push
sub
mov
pop
cmps
shr
adc
add
stos
jmp
out
sbb
addr16
loop
inc
sbb
or
repz
mov
dec
cli
fbstp
bound
pushf
xchg
lahf
dec
fimul
fisttp
pop
ret
enter
clc
dec
push
jb
stos
xor
mov
xchg
shl
mov
fsubr
jae
fwait
mov
sar
sub
sub
fwait
jmp
xchg
(bad)
sbb
push
loop
cs
and
jbe
mov
add
test
jae
mov
movs
jae
push
aaa
push
sub
ret
adc
dec
outs
add
les
xchg
adc
dec
push
dec
jnp
push
or
retf
mov
jp
xor
mov
pop
xchg
sub
shl
xchg
sahf
jo
or
popf
add
fmul
jp
and
mov
mov
mov
in
popf
sub
int
pop
and
mov
sbb
loope
xor
sbb
mov
dec
loope
dec
sub
(bad)
jecxz
mov
aas
stos
adc
mov
push
or
jnp
cmc
xlat
addr16
cwde
add
fstp
mov
jle
cmp
lds
push
xlat
mov
pusha
or
xor
cmp
lahf
js
mov
std
pop
sub
jb
cld
fdivr
cli
inc
movs
out
mov
add
js
or
push
les
(bad)
xor
dec
loopne
pusha
cmc
adc
inc
jnp
and
inc
(bad)
in
fld
sub
xor
shl
cmp
les
rol
push
adc
add
pop
adc
aas
retf
mov
xchg
xchg
imul
xlat
pop
xor
cmp
pop
jp
or
or
cwde
(bad)
imul
dec
pop
ins
out
inc
push
and
push
push
or
jnp
stc
leave
sub
or
idiv
ja
imul
lods
stos
idiv
xchg
mov
lods
dec
xlat
stc
xor
jo
mov
jne
xchg
sub
cmp
cmp
icebp
jnp
(bad)
sbb
(bad)
(bad)
or
jnp
pop
lds
mov
div
in
gs
xor
sub
jecxz
mov
mov
mov
jo
add
std
lods
orps
and
add
test
jbe
loop
xchg
std
xor
sub
dec
pop
mov
mov
rol
jmp
popf
scas
ins
add
cmp
mov
mov
dec
or
shl
mov
test
mov
mov
push
popa
rcpps
xchg
cmps
sub
dec
jge
fnstenv
jp
dec
pop
sbb
jnp
xchg
vmread
dec
call
in
jmp
ret
inc
cmp
aam
outs
jg
fcmove
or
push
push
jmp
std
and
and
push
mov
mov
adc
add
xor
loope
adc
rcr
aas
mov
mov
arpl
mov
aaa
inc
js
mov
inc
cmp
sbb
dec
and
mov
div
mov
push
lock
push
push
ja
sbb
out
(bad)
jmp
fadd
xchg
mov
adc
imul
mov
lods
pop
sbb
js
lods
pushf
fimul
add
aaa
sbb
in
bound
sti
push
scas
cmp
xlat
sub
fadd
fnstsw
push
scas
push
sbb
sub
xchg
inc
lea
inc
jae
les
lods
shr
daa
xchg
int
and
lods
push
lods
mul
in
test
enter
jg
sbb
push
call
mov
test
pop
jb
test
sub
sbb
shl
ss
add
push
dec
and
jno
repz
jle
ss
xchg
inc
mov
es
popf
lds
mov
cld
dec
mov
push
jge
ins
fimul
jne
lods
and
jae
inc
and
cdq
ins
add
adc
stos
cmp
push
push
jb
and
mov
imul
aaa
cmp
xlat
xchg
and
cwde
enter
fs
jl
sbb
out
xor
pop
rcr
push
push
movs
lods
push
xor
mov
xchg
popf
jne
ja
(bad)
les
cmp
push
jo
jnp
int3
(bad)
aad
fxam
loop
loope
inc
jmp
or
ret
mov
(bad)
jae
adc
fldenv
dec
sbb
inc
or
fistp
rcl
inc
sbb
sbb
test
aam
cmp
ds
push
inc
sub
pushf
std
inc
out
fdivp
xchg
or
xchg
in
pop
int3
pop
(bad)
(bad)
push
xor
sbb
int
iret
test
push
or
clc
adc
lea
mul
dec
or
xchg
mov
call
adc
out
retf
scas
mov
fmul
std
or
imul
pushf
sahf
enter
(bad)
xchg
mul
push
int3
loopne
ret
(bad)
pop
in
mov
pop
adc
call
xor
lock
xchg
pop
push
inc
test
adc
mov
outs
fmulp
cwde
pusha
add
add
(bad)
cmp
lods
jmp
(bad)
pop
frstpm(287
sbb
mov
out
mov
in
cmp
mov
in
popa
hlt
sbb
push
xor
or
and
les
adc
push
mov
jmp
xor
in
lods
jb
add
scas
mov
movs
into
nop
xchg
pop
addr16
jne
adc
sbb
add
inc
and
pop
dec
pop
cmp
sub
rol
cdq
and
in
jne
clc
xchg
inc
ror
neg
out
shl
pop
mov
ins
cdq
jmp
lahf
add
lea
xchg
sub
mov
inc
add
fistp
sbb
jp
sar
xor
adc
in
and
xchg
add
push
test
out
inc
pop
add
ret
mov
mov
adc
ins
cmc
stc
xor
std
das
cwde
cwde
in
cld
sbb
or
addr16
add
or
aaa
outs
ja
loop
pop
push
pushf
jmp
dec
mov
shl
aaa
popf
jbe
je
push
out
cli
(bad)
sahf
inc
out
mov
jae
test
mov
mov
sub
std
rcr
lods
aam
cmpxchg
cmpps
cmc
xchg
xchg
leave
ds
test
aaa
or
in
mov
es
imul
mov
cmp
add
lods
pusha
mov
scas
call
in
mov
ss
fist
push
test
push
sub
je
mov
jle
or
or
outs
jge
cmps
in
or
push
cli
(bad)
in
mov
push
lea
(bad)
push
jp
sub
mov
jb
scas
addr16
sbb
push
(bad)
jmp
popa
xchg
jp
mov
mov
jnp
cmp
pop
fdiv
mov
ins
fisubr
(bad)
cwde
lahf
add
push
ds
imul
pop
rcl
mov
add
(bad)
xor
out
jecxz
xchg
js
js
push
mov
push
std
inc
test
cli
jp
push
mov
popa
ret
std
cdq
push
xor
push
xchg
sub
inc
mov
jae
adc
mov
retf
sbb
xor
dec
jl
pop
cwde
iret
outs
add
shr
mov
mov
add
fsubr
out
data16
dec
add
fsubr
cmc
cld
mov
cmp
out
(bad)
daa
mov
int
dec
mov
sub
mov
mov
push
xchg
add
sbb
adc
data16
lahf
retf
stc
cld
xchg
inc
mov
arpl
loope
jo
add
mov
mov
out
jb
movs
push
xor
test
nop
mov
lds
cmp
data16
sbb
cld
mov
add
xor
cld
xchg
adc
scas
daa
push
dec
les
push
ja
imul
pop
dec
test
ss
and
add
mov
fwait
aam
adc
jecxz
and
inc
inc
cwde
jbe
mov
and
xlat
jns
sub
push
cld
es
mov
sub
mov
js
jge
dec
xor
jns
dec
ins
mov
jo
out
dec
cmp
into
call
lods
xor
shl
inc
cmp
push
sbb
ret
scas
sub
xchg
push
cmp
push
nop
or
sub
jns
inc
in
stos
lahf
xlat
iret
(bad)
popf
fstp
sub
cmp
dec
xchg
fndisi(8087
push
xlat
jae
cmp
mov
rol
lods
xchg
xchg
xchg
scas
fstp
lahf
adc
jmp
fprem1
mov
div
add
add
inc
(bad)
add
out
mov
sub
mov
and
rcl
hlt
ds
nop
dec
bnd
aas
imul
cmp
xchg
dec
out
dec
mov
ins
mov
push
test
jns
in
mov
mov
adc
jne
leave
daa
pop
pop
sub
xchg
sar
push
jle
jecxz
daa
sahf
cmp
out
daa
shr
addr16
or
add
call
scas
fstp
push
dec
stos
pushf
mov
movs
mov
cmps
jno
mov
adc
xor
je
cs
shr
jl
iret
dec
test
aaa
mov
pop
lock
int3
mov
nop
pop
inc
scas
jmp
and
sbb
les
push
or
or
clc
push
pop
adc
xor
mov
inc
dec
arpl
or
xchg
loop
xchg
loope
pop
bound
mov
popf
es
sbb
shl
lock
and
jp
sbb
jbe
push
clc
sti
cld
into
push
sti
mov
psraw
pusha
jns
in
add
in
fcomi
fadd
pop
inc
rcr
or
push
jno
pop
sti
sbb
sbb
jnp
cmp
(bad)
imul
sbb
inc
cdq
sub
mov
pop
fstp
push
adc
push
mov
mov
add
outs
mov
into
cmc
cmp
(bad)
(bad)
clc
jge
dec
ret
sbb
loop
cmp
dec
jo
push
and
inc
push
repz
stos
adc
jmp
sub
addr16
xchg
and
movs
sub
fistp
pop
cmc
or
leave
inc
repnz
cmp
popf
(bad)
hlt
cmp
into
out
pop
pop
dec
sbb
lods
nop
push
out
cdq
ffreep
adc
mov
mov
out
outs
push
dec
add
and
mov
sub
mov
fbld
jge
dec
xchg
dec
pop
sub
xor
adc
lea
sbb
inc
jp
sbb
mov
leave
cdq
data16
nop
push
xchg
cmp
inc
jno
cmp
sbb
sbb
mov
daa
push
pushf
sub
cs
clc
(bad)
cdq
jg
jmp
mov
xor
lods
jge
retf
enter
fbstp
mov
and
ret
mov
push
mov
jo
das
cwde
dec
(bad)
test
and
xchg
cs
pop
pop
and
adc
dec
inc
pop
inc
test
dec
mov
jle
dec
add
arpl
jecxz
cmp
or
push
jns
iret
test
test
fucomi
dec
inc
fs
pop
adc
mov
fnstenv
retf
out
out
sbb
sub
jns
dec
in
push
into
rol
mov
lahf
repz
out
add
cmps
pop
test
cmp
xor
shl
dec
mov
dec
pop
xchg
pop
jnp
ret
test
mov
out
scas
adc
xchg
imul
jnp
inc
hlt
ret
xchg
cmps
sbb
sbb
or
daa
stc
js
leave
dec
sub
adc
call
arpl
jae
push
mov
and
or
lock
ror
xchg
das
jne
sbb
push
mov
mov
aas
jg
mov
jns
fild
sub
cmp
mov
dec
mov
dec
mov
or
cmp
ins
rol
and
or
out
sahf
sbb
sub
or
inc
push
pop
not
fstp
xchg
xchg
and
dec
xchg
add
xchg
xchg
(bad)
xchg
xor
and
inc
sbb
jmp
pop
ret
cli
push
sar
aam
in
gs
pop
cmc
jge
cwde
jo
xchg
cmp
lahf
popf
(bad)
adc
(bad)
mov
stos
test
shl
dec
call
inc
mov
or
das
and
xlat
movs
leave
inc
lock
jg
gs
lds
call
mov
imul
adc
movs
adc
pop
(bad)
cwde
or
pop
pop
push
mov
pop
dec
daa
pop
mov
and
dec
aam
sub
or
jae
in
(bad)
out
mov
mov
jae
icebp
call
inc
pop
lahf
cmp
xchg
pop
lods
aad
xor
push
enter
movs
dec
dec
cld
jns
cmp
jmp
mov
mov
daa
inc
cwde
fwait
cwde
pop
and
add
mov
fcom
push
sbb
push
sbb
call
(bad)
push
xchg
ret
jmp
(bad)
(bad)
repz
ret
leave
fistp
mov
pop
jmp
in
and
sbb
and
cmc
stc
arpl
mov
outs
ror
mov
jecxz
pop
aam
call
icebp
mov
mov
outs
push
and
hlt
sbb
shl
ins
or
mov
outs
mov
xlat
pop
jmp
mov
popf
mov
in
mov
push
ds
not
and
mov
data16
das
(bad)
inc
int
xor
lods
addr16
cli
call
rcl
clc
ins
push
fwait
mov
and
ja
sar
iret
xlat
repz
or
xor
gs
cmp
popa
(bad)
adc
cmp
xchg
cmp
scas
retf
or
add
and
mov
fs
mov
or
pushf
std
sub
gs
pop
mov
jecxz
es
scas
inc
dec
leave
cmp
(bad)
into
mov
mov
dec
adc
ror
xchg
sti
imul
lea
mov
inc
jge
pop
jge
cmp
stos
pop
cdq
daa
xor
cmc
outs
int
ret
ins
adc
mov
adc
retf
pop
scas
leave
pop
dec
icebp
jno
push
inc
and
(bad)
cmp
fbld
outs
cmp
pop
jmp
inc
xlat
xor
je
rol
and
mov
adc
mov
inc
aad
push
mov
jnp
mov
mov
ins
push
jno
mov
sar
in
adc
pop
push
jecxz
in
adc
repnz
mov
push
sti
lahf
repz
inc
xchg
sub
shl
ja
jecxz
test
adc
jbe
lods
bound
or
or
push
mov
mov
sahf
and
in
outs
lea
cmp
inc
push
xchg
scas
or
nop
jle
es
(bad)
xor
mov
fcom
fs
mov
shr
inc
sbb
and
pushf
popf
mov
or
mov
pop
gs
mov
jg
popf
int
scas
gs
xor
repz
push
out
and
jg
test
xor
mov
es
jecxz
cmc
add
in
xchg
lahf
dec
inc
sub
fisub
outs
fcomp
shl
je
out
lods
popa
inc
stos
xchg
xchg
dec
lock
retf
ss
rol
fs
or
mov
xchg
pop
mov
jne
dec
xchg
push
mov
adc
bound
retf
jl
inc
push
js
sub
pop
rol
mov
jns
dec
std
aaa
in
dec
lods
xor
scas
xlat
add
movs
mov
(bad)
jge
shl
(bad)
aaa
mov
xchg
cmps
inc
pop
ret
ror
loopne
xchg
sub
ins
push
xchg
scas
and
push
data16
add
mov
retf
les
jns
aas
inc
mov
add
scas
outs
or
mov
xchg
test
push
mov
stos
jecxz
push
jns
loope
sub
pop
ins
mov
push
mov
cdq
and
inc
xor
adc
test
js
push
loope
leave
xor
jl
or
loope
fnstsw
pop
jl
dec
hlt
sbb
std
cmp
pop
loope
or
stos
sub
cmp
enter
jmp
pushf
xor
ins
repnz
scas
add
js
mov
dec
(bad)
push
mov
in
hlt
push
paddusw
stos
ins
jae
push
mov
(bad)
loop
shr
xor
das
(bad)
mov
aas
dec
jno
and
xchg
jbe
xchg
pop
mov
ins
xchg
and
xor
cmp
add
test
xor
sbb
pop
xor
push
mov
dec
push
shl
repnz
mov
mov
adc
imul
jecxz
cmps
ja
mov
sub
and
gs
mov
cmps
push
scas
mov
std
xchg
add
shl
xlat
or
lahf
mov
loopne
xchg
mov
push
lea
pop
scas
push
push
xchg
je
fild
fldcw
xchg
push
das
cmp
ds
and
mov
push
cmp
push
xor
clc
sahf
jbe
mov
loopne
mov
std
scas
cmps
inc
aam
mov
mov
jb
jbe
mov
mov
xchg
ror
mov
adc
jae
fwait
xchg
scas
push
cli
xchg
aas
mov
into
or
mov
fisttp
call
test
add
jnp
xor
cli
pop
test
xchg
stos
mov
fimul
cdq
stos
dec
add
push
mov
ja
les
das
pop
push
das
jbe
icebp
jne
push
popf
cmp
int
fldcw
cwde
sub
adc
xor
push
sub
jg
cmp
inc
xor
sbb
cmps
jl
jmp
push
ror
stc
mov
xchg
fistp
(bad)
mov
cli
test
outs
repnz
into
inc
hlt
jb
mov
jp
xor
jg
jno
outs
xchg
js
into
add
jb
daa
mov
or
jge
adc
xchg
add
sub
rcl
cmp
(bad)
ds
mov
mov
inc
aad
(bad)
dec
jmp
jno
mov
cs
imul
int3
jno
dec
xchg
in
jp
test
fwait
jmp
int3
push
cmps
cmp
(bad)
jp
mov
pop
push
(bad)
jp
mov
mov
jns
inc
icebp
aam
ins
add
pop
int3
jbe
lea
mov
push
and
sbb
sbb
or
scas
cmps
shr
sub
in
inc
pusha
mov
call
fdivr
cmps
jg
es
(bad)
lods
mov
iret
xchg
or
leave
test
test
dec
pushf
movs
cmp
inc
fld
test
ins
sbb
or
(bad)
div
xchg
ret
push
pop
jno
push
sti
adc
mov
jne
dec
mov
sbb
pop
jecxz
jo
outs
loopne
clc
dec
xor
sar
jo
aas
cld
loop
push
sub
dec
jae
and
or
mov
call
repnz
pop
(bad)
pushf
int3
pop
int
sub
aam
test
aas
xchg
dec
icebp
repnz
jg
dec
xchg
sub
push
repnz
jmp
mov
jne
xor
imul
xchg
ins
xchg
jae
xchg
dec
scas
out
sbb
or
ins
and
or
addr16
xor
xor
push
sub
int3
or
sbb
cmp
lods
or
fnstcw
jge
movs
sub
sub
sahf
jmp
pop
mov
and
cwde
or
push
adc
sub
jmp
ja
out
das
mov
and
jae
int3
test
xchg
jne
fdivr
int3
cmp
or
jle
cmp
pusha
or
mov
or
adc
imul
ror
test
jge
pop
xchg
push
clc
xchg
fwait
cmp
and
mov
arpl
xchg
adc
shl
sar
sbb
sbb
stos
cmp
(bad)
sbb
xor
push
les
xor
dec
and
dec
pop
mov
(bad)
js
outs
jge
pop
(bad)
cs
push
push
cmps
sub
rol
xchg
mov
(bad)
loop
sbb
mov
movs
xchg
mov
je
xor
jo
scas
mov
sti
jle
jno
cmps
inc
pop
xor
(bad)
enter
es
arpl
iret
mov
and
mov
push
and
jmp
cdq
adc
ds
inc
shr
mov
xchg
cmps
cmp
add
int
pop
mov
mov
mov
xor
es
dec
fdiv
fcmovnb
inc
mov
in
inc
cmp
(bad)
ror
jns
sbb
cs
fwait
dec
pop
popa
adc
fbld
test
loop
(bad)
adc
(bad)
push
sbb
jnp
jle
stc
jle
inc
jo
and
or
(bad)
and
inc
or
adc
scas
imul
fild
add
mov
pop
xor
sbb
stc
mov
push
xacquire
or
ja
mov
inc
adc
mov
loope
adc
jno
js
adc
retf
fist
adc
lock
sbb
enter
or
push
mov
cs
out
mov
mov
aam
adc
ss
mov
and
call
shl
in
jge
add
daa
mov
dec
sahf
cmps
in
pop
or
adc
add
or
ss
cmp
repnz
lock
imul
ins
cmc
add
adc
jmp
and
sbb
sub
dec
xor
lock
ss
mov
jns
pop
add
add
ret
pop
xor
andnps
neg
and
stc
(bad)
push
loope
jecxz
push
xchg
arpl
loope
es
xor
lock
aam
int3
xchg
jl
mov
mov
sub
cmp
inc
jae
or
or
bound
(bad)
retf
das
xchg
dec
mov
or
loopne
adc
(bad)
inc
nop
test
xchg
sub
pop
jmp
dec
lods
mov
add
sahf
ja
in
jmp
dec
mov
cmp
cli
test
mov
jmp
mov
mov
add
adc
popw
pop
dec
dec
mov
stc
out
popa
test
lea
jbe
cmc
cdq
fcos
into
sbb
rol
adc
imul
jmp
xchg
add
loopne
imul
mov
sub
add
ss
xchg
test
pop
jo
lods
sub
xchg
xor
and
sbb
shr
fcom
sahf
sqrtps
es
fptan
ret
rol
out
enter
mov
push
mov
and
xor
cli
sbb
dec
iret
data16
in
popf
xor
jbe
adc
les
ss
pop
adc
push
sub
push
test
adc
out
jnp
or
sub
adc
and
pop
or
repnz
jg
mov
jmp
and
jb
popa
sahf
loop
xchg
push
mov
aam
loop
inc
pop
mov
adc
adc
into
or
addr16
push
test
call
enter
les
xlat
and
mov
push
fist
mov
enter
jns
rcr
xor
(bad)
adc
or
lahf
pop
dec
sub
mov
xchg
out
nop
inc
push
and
adc
mov
pop
rcr
xor
lods
xchg
jg
dec
mov
loope
cmp
mov
mov
dec
mov
nop
clc
or
jle
fnsave
push
adc
in
mov
not
mov
inc
pop
xchg
nop
jo
enter
sbb
retf
movs
and
push
xor
pop
ins
imul
loopne
sub
adc
push
cmc
gs
jp
cwde
and
addr16
xchg
cdq
jecxz
popf
jne
retf
addr16
xchg
ror
pushf
cdq
test
adc
mov
pop
test
jne
lods
leave
xchg
xchg
scas
or
jg
iret
xor
sub
cmps
and
and
mov
dec
ss
sub
(bad)
pop
xchg
and
cmc
cwde
mov
cmp
sahf
inc
hlt
inc
loop
(bad)
ror
xor
icebp
shl
lods
mov
inc
jae
loope
cmp
out
out
fxtract
jmp
pop
mov
and
cld
ins
pop
dec
cld
add
sahf
cli
mov
mov
and
lods
repz
dec
iret
cmc
jecxz
jp
sbb
mov
rcr
nop
pop
loopne
xchg
or
mov
loopne
adc
add
xlat
stos
cmp
neg
adc
test
outs
ret
out
inc
movs
mov
loope
mov
mul
lock
xor
mov
loope
dec
cmp
loope
mov
aad
push
shr
outs
std
and
dec
mov
outs
mov
out
(bad)
ss
mov
sbb
jae
call
(bad)
in
popf
outs
aaa
cwde
fstp
aaa
(bad)
pop
sbb
jl
sub
mov
and
test
mov
jmp
sbb
mov
cmp
rol
out
cmp
and
rcl
lods
je
pop
mov
dec
cmps
dec
jnp
pop
pop
cdq
mov
iret
xchg
in
mov
fwait
loop
aaa
lock
add
sub
aam
pop
dec
push
xchg
inc
push
ja
pop
mov
jp
cli
pop
cmp
mov
push
dec
pop
pop
sub
push
mov
cmp
pop
jmp
dec
and
xchg
shl
mov
xchg
pop
cmp
adc
cmps
stos
mov
push
into
mov
jns
jecxz
fxam
push
and
mov
mov
ficom
cmc
scas
dec
push
push
sbb
and
pop
sub
fistp
mov
inc
out
aam
vmovntps
nop
or
xchg
pop
add
sub
retf
cmp
lds
test
xchg
bound
fld
sub
mov
pop
mov
jbe
repz
jb
mov
cmp
fstp
sub
inc
dec
inc
dec
imul
ja
xchg
xchg
mov
xor
push
xchg
mov
push
jne
jp
lds
jp
pop
jb
mov
ins
mov
pop
rcr
xchg
jp
repz
push
outs
je
leave
adc
cmp
in
(bad)
adc
sub
xlat
mov
jnp
adc
iret
jmp
xchg
out
dec
xchg
inc
mov
js
jl
movs
test
adc
test
aad
es
pop
add
movs
in
add
int3
cwde
inc
cmp
jbe
popf
sub
adc
inc
loopne
xchg
fcomp
shl
mov
mov
div
pop
(bad)
lds
mov
lods
push
mov
sub
cmp
int
pop
mov
mov
sbb
inc
mov
inc
(bad)
in
bound
and
pop
mov
mov
movs
cmc
mov
movntq
out
add
sbb
mov
mov
imul
iret
pop
jmp
ss
mov
or
jns
iret
cmps
and
cmp
pop
xchg
cmp
cs
sbb
adc
sub
loopne
les
pop
cmc
jecxz
test
clc
imul
xchg
jnp
fmul
push
mov
ins
or
or
gs
dec
push
ret
lea
cmp
retf
pop
movs
sti
sbb
pop
hlt
mov
xor
dec
cmp
test
shl
rol
adc
adc
cmp
bound
popa
in
xor
fcom
jno
addr16
mov
push
pop
adc
dec
xor
dec
bound
cdq
xor
fmul
cmps
je
and
add
sub
es
xchg
call
pop
mov
lods
repz
sahf
cld
cdq
mov
cwde
in
std
fisttp
aaa
das
popa
xchg
es
adc
int
adc
aaa
jge
daa
out
adc
mov
sti
out
mov
mov
stos
lahf
pop
mov
ror
or
fiadd
aaa
mov
(bad)
repnz
dec
shl
xor
sbb
je
and
js
jecxz
sbb
mov
fidivr
xor
cmps
test
xor
mov
bound
lods
fldcw
dec
xchg
mov
mov
pop
loop
inc
dec
outs
out
pop
sub
movs
(bad)
mov
bound
ffreep
enter
xchg
out
stos
mov
pop
lea
jmp
mov
repz
lahf
cmp
pop
mov
cli
or
aad
test
pop
jmp
mov
nop
pop
xchg
into
cmp
aam
cdq
dec
inc
or
cli
dec
xchg
test
mov
mov
mov
inc
scas
mov
popa
jg
iret
test
mov
cli
scas
in
inc
ja
fcom
or
adc
push
sub
ins
dec
jle
in
test
cmp
hlt
lock
adc
lahf
or
daa
movs
xchg
push
jo
add
mov
or
xchg
fs
inc
pop
xchg
fwait
daa
pusha
nop
push
push
mov
adc
adc
cli
scas
imul
ins
inc
pop
mov
repz
cmps
shl
mov
lahf
and
jmp
push
push
jae
mov
mov
imul
cs
cmp
in
mov
dec
mov
xor
idiv
mov
jmp
pusha
jp
pop
inc
sbb
inc
movs
pop
cmps
out
or
pop
xor
loopne
retf
lods
jo
mov
repnz
add
cld
adc
adc
xor
iret
mov
js
das
retf
test
xchg
loope
pop
push
xchg
sar
xor
xor
dec
or
stos
inc
sahf
aas
icebp
mov
outs
inc
xor
cmp
int3
sbb
int3
rcl
or
pop
cmp
xchg
std
ja
shl
cld
pop
mov
sbb
or
sub
or
mov
pop
gs
adc
mov
cmp
mov
and
into
into
cs
(bad)
cmp
and
xor
mov
icebp
xchg
mov
xchg
stos
or
add
inc
sbb
stos
mov
push
inc
ret
xor
jns
pop
rol
mov
pop
mov
repz
pop
add
inc
xchg
add
pushf
lock
jle
adc
jmp
or
je
scas
cwde
in
ficom
sbb
dec
sbb
xchg
cmp
and
loopne
pop
ins
inc
mov
inc
sub
cli
adc
jmp
xchg
scas
stos
in
or
cld
dec
rcl
lahf
mov
repnz
stc
pop
dec
mov
cmps
xchg
or
cmp
pop
cs
(bad)
cwde
(bad)
fdiv
fistp
xlat
(bad)
and
jecxz
int3
mov
jne
shl
in
mov
loopne
sbb
dec
or
imul
(bad)
pop
mov
sti
test
cmps
mov
sub
mov
sub
js
aas
mov
mov
jae
test
cmp
stos
xchg
push
jmp
sub
dec
fadd
jecxz
mov
js
rol
in
and
in
cmp
std
inc
jne
lahf
and
xchg
scas
inc
cmp
push
(bad)
sbb
jmp
cmp
mov
fcomp
movs
daa
and
pop
xchg
adc
inc
jle
shl
cmc
(bad)
add
push
fiadd
(bad)
xchg
pop
arpl
ror
lods
movs
les
daa
bound
adc
ficom
mov
aad
sub
jae
dec
pop
ds
pop
jno
inc
mov
mov
pusha
inc
jns
fisubr
jp
je
add
adc
sahf
inc
xor
inc
xchg
pop
jge
jg
inc
fcmovnu
and
jg
repnz
cmps
or
cmp
ror
jp
or
or
call
leave
mov
mov
(bad)
(bad)
lods
mov
mov
jnp
in
dec
cmp
xchg
push
mov
(bad)
dec
pop
call
cli
sub
into
jmp
jle
icebp
in
lods
dec
or
jne
inc
cmp
jl
and
cwde
fild
js
jecxz
aam
inc
jge
enter
push
mov
scas
xchg
push
and
mov
and
call
xor
(bad)
jo
cmp
add
fimul
arpl
adc
xchg
and
and
repz
dec
gs
sbb
xor
pop
push
mov
adc
jecxz
push
cli
ficom
inc
pop
xor
dec
jmp
fimul
sub
aaa
xor
sbb
int
test
dec
mov
mov
fsubr
loop
adc
lea
dec
dec
in
fs
and
xor
les
dec
(bad)
mov
sub
rcr
(bad)
retf
jecxz
push
bound
stos
dec
movs
push
mov
mov
inc
arpl
scas
mov
mov
shl
cmp
jns
bound
mov
dec
sbb
mov
inc
dec
adc
ret
xor
jmp
sub
xchg
aam
xchg
mov
dec
out
fimul
daa
mov
adc
ds
push
fld
mov
sbb
and
repz
sub
cli
test
inc
mov
scas
push
aaa
xchg
adc
xchg
lea
cmp
test
movs
stos
inc
adc
jmp
add
adc
aaa
gs
add
seto
or
data16
mov
dec
call
push
lds
int
dec
xlat
mov
cmp
push
nop
and
or
loope
jp
daa
or
mov
ret
mov
test
inc
(bad)
loop
jae
jmp
enter
sub
hlt
ror
lahf
jnp
dec
and
xchg
fst
cmp
daa
imul
fild
adc
mov
das
ret
shl
mov
cs
out
cmc
sub
jae
inc
stos
lods
ror
xchg
inc
adc
sub
nop
dec
inc
mov
or
mov
jae
and
jge
mov
enter
inc
mov
outs
sub
fwait
sbb
call
push
loop
fdiv
arpl
mov
mov
sbb
sub
sub
push
fisubr
mov
in
mov
adc
mov
xchg
push
cdq
in
hlt
sub
out
int
bound
scas
fwait
popf
xor
mov
sub
mov
(bad)
cdq
adc
and
xor
(bad)
sub
adc
popa
add
push
jg
movs
inc
inc
sub
ds
dec
ret
and
lock
int3
jecxz
test
or
mov
js
pop
mov
cdq
popf
in
in
push
jecxz
scas
sbb
sbb
call
dec
lock
ret
adc
out
add
in
mov
sbb
into
sub
jne
mov
or
outs
mov
sub
mov
cmp
mov
adc
pop
les
dec
or
xchg
imul
push
xlat
out
dec
push
sbb
sub
leave
jmp
int3
or
int3
push
push
push
mov
pop
lods
jae
mov
push
int
movs
add
xor
push
out
or
push
push
leave
cmp
cmp
retf
hlt
jno
mov
fcomp
leave
xor
div
jge
shl
mov
sbb
sub
add
popf
stos
inc
add
retf
lahf
mov
ja
inc
loop
ret
push
xor
xor
or
shl
loop
pop
push
leave
add
aaa
or
sar
and
and
repnz
mov
mov
loop
push
sbb
and
(bad)
mov
add
mov
popa
inc
lahf
xor
loop
xor
jecxz
or
out
jae
jne
jnp
xchg
repz
pop
jnp
xchg
xchg
mov
mov
inc
ficomp
mul
cwde
jp
inc
dec
pop
popa
leave
loop
push
in
xchg
mov
icebp
jp
jnp
mov
dec
cmp
std
mov
icebp
jmp
and
lahf
jnp
jae
dec
iret
int3
sar
dec
xchg
and
or
push
xchg
retf
jmp
repz
int
mov
dec
mov
cmc
adc
sub
jecxz
sti
mov
xchg
sbb
cmp
lods
jecxz
ret
call
jge
test
dec
push
xchg
scas
dec
push
cmp
jne
mov
jo
mov
cmps
mov
jb
jmp
jo
fild
and
inc
sub
push
cmp
push
pop
stc
mov
(bad)
push
arpl
lds
call
cwde
cmp
pop
in
lock
add
ffreep
pop
(bad)
mov
inc
xchg
dec
sbb
mov
je
scas
rol
sub
xchg
sbb
test
dec
and
sbb
mov
inc
push
cmc
lds
repz
jo
xor
xor
pop
out
push
xchg
stos
push
enter
outs
movs
dec
mov
inc
inc
fst
arpl
jle
or
pop
mov
xlat
and
jne
or
xor
icebp
loope
pop
ds
pop
enter
out
jb
mov
jg
sar
mov
pop
int
push
mov
in
jmp
cdq
jne
lahf
push
sbb
(bad)
jecxz
outs
jbe
fnstenv
mov
dec
pop
dec
in
sbb
mov
test
jae
sub
mov
mov
sbb
stos
(bad)
sti
cmp
push
mov
adc
fistp
into
adc
push
out
cmp
loope
jno
and
push
and
jne
push
adc
mov
sub
mov
push
jno
fsub
(bad)
stc
xchg
add
and
or
ss
je
sub
dec
ss
js
inc
test
or
lea
mov
les
xchg
inc
mov
xor
data16
shr
pop
dec
cmp
inc
pop
inc
mov
sub
fimul
out
or
jb
mov
push
fdivr
test
mov
loope
int3
jp
inc
jle
sub
fwait
add
ret
outs
ret
xchg
inc
dec
inc
adc
out
xor
mov
and
and
mov
out
test
pop
cmp
adc
sub
out
jnp
dec
test
xlat
bound
add
jge
and
cmp
pop
pop
mov
aam
shr
dec
jae
and
(bad)
and
ss
add
mov
inc
push
jns
xor
nop
sub
sub
pop
inc
cs
add
mov
push
sub
ret
cdq
ins
jne
inc
pop
ret
xchg
stc
pop
xchg
push
dec
repz
mov
adc
in
clc
cmps
pusha
or
fdiv
cmps
neg
sahf
imul
mov
out
je
jae
push
ds
add
sbb
and
jle
or
mov
test
jb
enter
push
add
adc
lods
dec
retf
cmp
xor
std
leave
mov
in
leave
cs
inc
pop
les
outs
sahf
jno
push
or
sbb
in
sbb
or
mov
push
lahf
cli
rcl
sbb
dec
call
fnsave
pop
adc
test
xchg
movs
lods
(bad)
fwait
(bad)
mov
xchg
je
mov
mov
fcomp
push
cs
dec
xchg
or
inc
test
ins
inc
jge
add
lods
push
add
and
jecxz
add
lea
adc
and
xchg
dec
or
mov
jnp
repz
push
or
sbb
adc
cmp
loop
dec
aad
jmp
gs
cdq
sbb
jns
test
div
ret
mov
inc
pop
push
sbb
jl
enter
ficom
lds
lods
inc
pop
movs
loop
ret
add
das
cmp
loope
dec
iret
out
or
add
(bad)
repnz
mov
xor
push
movs
popf
cdq
dec
cmp
lds
inc
pop
push
clc
pop
pop
pop
xchg
sbb
sbb
cmp
xchg
aas
mov
xlat
ins
dec
pop
inc
out
xchg
jae
cli
icebp
mov
fs
clc
in
popf
push
xor
or
ds
add
stos
xchg
ret
pop
mov
outs
retf
in
or
mov
fwait
je
and
inc
in
xor
js
addr16
push
mov
mov
in
out
in
pop
adc
in
xlat
mov
dec
cs
mov
inc
mov
mov
mov
xor
xor
adc
jne
adc
xlat
imul
inc
test
lds
fidiv
in
ret
mov
push
(bad)
fs
outs
(bad)
repnz
xchg
dec
mov
push
xchg
jg
inc
adc
pop
and
sti
popf
and
xchg
in
imul
push
sub
cmps
outs
dec
pop
cmp
rcr
rcl
inc
movs
adc
stos
inc
dec
adc
jno
adc
pop
fdivr
pop
jmp
add
fidivr
xor
retf
and
nop
jmp
xchg
repnz
mov
ds
and
and
fiadd
and
(bad)
cld
xchg
xor
std
out
cmp
(bad)
fist
(bad)
sub
or
lods
rol
lods
retf
inc
mov
mov
lahf
mov
jb
outs
push
or
jns
xchg
inc
paddd
dec
xchg
retf
popa
shl
xchg
jecxz
stc
imul
pop
inc
outs
xchg
adc
mov
int3
in
mul
add
lahf
out
push
cmp
int3
mov
mov
xchg
dec
outs
je
jnp
jl
sahf
retf
popf
cwde
inc
test
std
add
sub
int3
in
in
fisttp
fs
xor
cmp
or
fidivr
test
outs
mov
std
std
stos
mov
sub
jmp
popa
jg
outs
popf
call
fwait
rol
gs
sahf
xor
sub
test
(bad)
inc
fadd
sahf
inc
in
arpl
fisttp
clc
mov
mov
call
sbb
inc
inc
mov
scas
or
xchg
sub
and
stc
or
repnz
cmp
and
shl
jns
(bad)
ror
sub
mov
dec
cmc
jp
push
sbb
out
std
test
xchg
aaa
fsub
mov
inc
clc
push
xor
adc
pop
jo
inc
inc
add
sahf
lods
add
and
lods
sbb
push
mov
mov
mov
nop
test
(bad)
push
and
mov
sahf
mov
(bad)
leave
dec
cmp
outs
or
jge
(bad)
pop
push
scas
loop
(bad)
rol
cmp
jo
in
fadd
mov
push
lds
in
loop
mov
loopne
(bad)
xor
cmp
jg
xlat
jns
cmc
pop
repz
pop
sbb
scas
call
push
add
rcl
call
inc
rol
repz
ret
inc
add
xchg
fisubr
xchg
lock
pop
retf
mov
dec
adc
push
dec
jae
or
cmp
xor
xor
add
mov
sub
arpl
(bad)
add
dec
in
mov
retf
pop
(bad)
dec
push
call
sbb
fdiv
arpl
mov
mov
ret
loope
outs
xor
push
cdq
jecxz
dec
sar
inc
mov
push
push
into
mov
jb
fwait
and
add
ins
or
xor
es
xor
dec
ja
inc
adc
sahf
in
cmc
xor
cmp
lds
fnstsw
mov
mov
movs
pop
scas
(bad)
sbb
xlat
xor
fimul
push
add
hlt
cmp
(bad)
jp
cmp
xchg
cmp
mov
popa
xchg
sbb
popa
(bad)
call
and
shl
push
jecxz
imul
adc
(bad)
push
lds
push
repz
jbe
out
les
clc
lods
cmp
push
add
inc
xor
xchg
lea
loope
lds
mov
mov
cs
jnp
cwde
mov
js
aaa
retf
out
mov
fstp
inc
mov
inc
lds
mov
nop
inc
cmp
jge
test
push
pop
mov
sbb
ss
imul
cmp
xor
xor
jmp
mov
mov
cmp
out
mov
stos
pop
lock
cmp
imul
cli
scas
pop
jno
sub
xor
add
in
stc
in
data16
ret
dec
ins
(bad)
arpl
sti
jmp
aaa
sbb
in
xchg
cmp
mov
sti
cmps
(bad)
fwait
out
in
pushf
mov
xchg
bound
jbe
enter
push
dec
sbb
out
outs
fwait
push
push
inc
fwait
cmp
into
dec
outs
lahf
xchg
cmp
sti
sbb
in
xlat
test
xchg
mov
neg
sbb
call
cmp
out
jbe
xchg
sbb
mov
adc
imul
sti
and
push
test
das
(bad)
sub
mov
xor
ret
jmp
mov
pop
pop
cmp
fimul
xadd
mov
xchg
loop
jle
loopne
leave
movs
imul
xchg
cmc
mov
aaa
(bad)
adc
mov
pop
sbb
movs
add
dec
add
stos
js
ret
sub
loopne
or
xchg
sbb
jns
sbb
pop
push
les
push
mov
in
cmp
dec
xchg
call
and
cmp
add
xchg
fsubrp
arpl
sbb
fisub
mov
add
adc
popf
pop
(bad)
jmp
ins
push
(bad)
cmp
jno
fist
or
lods
cmc
shr
ret
sub
mov
xor
pop
add
mov
rol
js
adc
lods
or
loope
aaa
xchg
loope
movs
sub
ins
jge
xchg
dec
int
inc
mov
scas
out
mov
call
dec
pop
(bad)
sar
dec
jmp
or
loopne
fnstcw
pop
(bad)
js
dec
sub
loope
push
outs
(bad)
sub
jecxz
test
mov
pop
loopne
adc
mov
push
pop
xlat
sbb
pop
mov
mov
leave
ficomp
sar
xchg
in
ins
push
inc
jl
mov
or
pop
xor
push
or
ret
and
rcr
push
std
enter
lock
addr16
ret
lods
vmwrite
mov
add
loop
push
cmp
leave
mov
mov
cli
and
popa
sbb
fwait
dec
mov
jne
lock
enter
out
(bad)
pop
push
(bad)
push
clc
xchg
sti
lahf
dec
ins
rol
mov
dec
add
ficom
mov
sbb
scas
xor
pop
js
int
or
xor
mov
and
sti
fwait
lock
gs
(bad)
mov
inc
mov
cmps
ret
ds
cmp
and
cld
xchg
mov
dec
nop
cmp
addr16
add
loope
mov
or
cld
retf
mov
fsub
jb
iret
inc
mov
inc
adc
lahf
sub
xchg
call
push
mov
jmp
mov
lds
sub
dec
and
sbb
cli
test
cdq
es
es
not
mov
push
in
test
stos
mov
std
out
test
xchg
cmp
inc
outs
dec
lahf
mov
and
mov
call
jno
lea
ins
aas
cli
inc
cmp
cdq
dec
icebp
sub
test
cmc
dec
cmp
and
bnd
mov
fisttp
mov
pop
daa
pusha
shr
movs
aam
out
test
aas
jno
and
scas
js
cmc
push
jo
cwde
xchg
pop
mov
jns
lods
call
aaa
jbe
sub
push
xor
repz
inc
push
or
das
xor
lods
retf
xchg
sub
es
bound
sbb
push
lods
sub
pop
or
lahf
add
adc
mov
aam
sbb
xchg
outs
pop
sbb
jno
iret
cmp
pop
mov
loop
imul
sub
cli
mov
lock
loopne
push
inc
pop
pop
add
cmp
pop
sub
xor
stos
(bad)
stc
jle
pop
mov
and
pop
repnz
out
add
icebp
or
fcom
xor
sub
outs
lea
fstp
inc
cmp
xor
push
push
xor
jge
leave
loop
lods
inc
js
jno
adc
scas
ret
in
add
call
out
pop
dec
es
outs
jp
cld
cmps
xor
inc
idiv
jecxz
cmps
loop
adc
inc
pop
scas
mov
psrlq
xor
add
out
and
xchg
jl
out
gs
movs
inc
mov
xchg
jmp
(bad)
outs
inc
xlat
shr
sbb
dec
cli
outs
(bad)
stc
xchg
scas
mov
cli
mov
xor
mov
std
pop
and
aas
scas
test
add
push
imul
ror
jmp
iret
add
into
sub
ficom
call
data16
push
mov
div
fs
ja
jecxz
mov
mov
imul
sbb
or
jo
fidiv
iret
sbb
jbe
sbb
mov
dec
jl
fsubr
mov
mov
inc
xchg
xchg
cwde
xchg
jg
sahf
lods
in
xchg
mov
mov
int3
sahf
dec
mov
jmp
xlat
jp
or
xor
mov
dec
ret
mov
mov
leave
(bad)
iret
pop
sahf
adc
cmps
push
and
mov
(bad)
scas
adc
mov
adc
push
int3
sub
push
xor
add
add
xor
test
mov
ret
mov
cmp
daa
xor
std
pop
daa
mov
mov
and
dec
push
test
ins
xor
xchg
push
push
call
(bad)
mov
arpl
outs
push
lahf
pop
xchg
xchg
adc
mov
ss
inc
push
or
dec
push
scas
retf
dec
nop
imul
mov
inc
mov
addr16
stos
cmps
retf
jbe
scas
lahf
movs
xor
rcl
sbb
clc
dec
aaa
mov
ja
js
out
fdiv
outs
xor
popf
sbb
sub
xor
sbb
jmp
push
sub
cmps
add
jmp
mov
sbb
es
sub
lds
jo
push
sbb
in
fdivr
mov
aad
fisub
in
sbb
hlt
inc
pop
clc
cmp
mov
mov
push
stc
iret
mov
ja
ds
shl
rol
xchg
fistp
adc
mov
retf
nop
mov
push
mov
and
test
adc
loopne
or
sub
dec
xchg
inc
in
movs
push
cmc
or
or
in
jnp
sub
imul
lea
ret
and
pop
hlt
mov
call
rol
bound
cmps
cmp
in
adc
(bad)
fild
adc
call
dec
xor
cmp
pop
int
imul
and
fild
inc
jae
fld
inc
xchg
shl
mov
pop
mov
mov
push
xor
es
pop
outs
popa
cdq
and
nop
daa
(bad)
adc
lods
loopne
mov
push
push
stc
mov
cmc
adc
fwait
arpl
jae
cwde
sbb
xor
or
bound
jb
pop
mov
fmul
aam
jmp
setl
pop
xor
lahf
or
push
call
in
std
jmp
inc
shr
cmps
xchg
clc
aam
cwde
pop
and
push
or
jge
dec
inc
adc
scas
lods
(bad)
aas
cmps
or
jmp
xchg
sub
cmp
xor
not
sbb
push
loope
adc
loop
and
jmp
sub
xlat
adc
add
inc
movs
sbb
cmc
test
test
(bad)
dec
mov
fistp
sbb
mov
push
push
xlat
adc
ss
sub
jge
or
dec
xor
div
pushf
and
cmps
lods
sbb
data16
iret
lahf
into
inc
int3
(bad)
jl
sti
adc
and
lahf
add
ror
push
xchg
sbb
iret
clc
imul
pop
mov
lea
movs
push
nop
in
test
into
fisubr
jo
xchg
(bad)
ss
dec
mov
pop
xchg
gs
and
mov
cs
xchg
adc
mov
rol
pop
in
add
pop
xchg
jb
xor
fsubr
popa
or
lds
push
fisub
loope
daa
xor
mov
jmp
add
iret
popa
(bad)
cmp
mov
movs
mov
xchg
hlt
repnz
fild
push
push
xor
fisttp
nop
mov
lods
dec
adc
add
jno
push
fs
inc
jnp
fcmovbe
xchg
xchg
ss
push
sar
dec
jne
cwde
out
push
and
xchg
imul
and
mov
inc
inc
xchg
xchg
add
jmp
ins
mov
mul
icebp
mov
pop
inc
shr
jle
inc
jne
(bad)
dec
gs
das
pushf
pop
or
test
ret
xchg
jns
pop
sub
lock
push
dec
pop
lds
mov
jecxz
jne
push
movs
imul
shr
xchg
mov
pop
ins
push
adc
es
xchg
pop
fild
dec
dec
jb
not
shl
and
or
xor
push
shl
int
sub
in
xlat
jg
xlat
push
into
and
jne
daa
dec
popa
or
dec
sub
cmp
nop
xor
pop
xchg
xor
cmp
inc
addr16
dec
loope
retf
inc
cmp
dec
fisttp
xchg
je
sti
(bad)
mov
xchg
cmp
push
xchg
sti
push
xor
and
add
jmp
mov
int3
lock
cs
jmp
cli
pop
call
mov
or
mov
mov
scas
aaa
lds
in
ins
aad
mov
adc
imul
out
push
mov
leave
lods
push
into
dec
and
out
std
xchg
mov
retf
outs
cmp
(bad)
sbb
mov
inc
pop
xlat
push
rol
test
ficomp
arpl
clc
repz
or
sbb
fistp
imul
cld
mov
mov
in
fld
mov
(bad)
fcmovbe
in
pusha
inc
or
push
stos
ret
or
loopne
push
imul
xchg
fimul
mov
int
out
xchg
inc
call
mov
xor
xor
mov
cmp
mov
cs
sti
(bad)
jl
jbe
out
gs
shr
cmp
jmp
gs
jmp
fistp
mov
test
lds
mov
in
cdq
pop
cwde
dec
cmp
stos
cld
int3
mov
shl
sbb
push
jmp
and
pop
test
in
push
test
sub
popa
stc
and
sbb
rcr
mov
mov
inc
mov
inc
dec
cwde
jl
aam
jmp
aas
lahf
adc
cmp
enter
cmp
inc
pop
xor
jg
fdiv
arpl
push
dec
pop
mov
mov
int
mov
mov
jns
icebp
xor
ss
mov
call
test
arpl
std
sub
sar
stos
mov
and
ss
pop
sti
cmp
ja
aad
pushf
jne
jne
lock
int3
inc
outs
dec
test
scas
xor
fstp
or
stc
in
lea
jg
stos
or
aam
mov
aas
sbb
push
ss
pop
jge
mov
or
mov
mov
pop
jecxz
retf
xor
inc
fcmovnu
mov
cld
xor
fs
sbb
mov
aam
sbb
mov
fiadd
or
lock
sub
aas
sti
retf
movs
adc
xchg
dec
xor
in
or
cmp
ror
push
inc
cmp
aas
xlat
rcl
mov
or
std
add
pop
and
mov
xor
mov
jge
pop
repnz
enter
popf
mov
jle
xchg
and
int
out
xor
jae
hlt
or
jecxz
mov
dec
or
pop
enter
sub
lods
addr16
aas
into
push
fldcw
sbb
in
out
cmp
xor
sbb
push
and
jb
ss
jmp
fld
cmp
and
pop
out
loopne
xlat
jecxz
dec
(bad)
mov
test
rcl
test
pop
xor
sbb
sbb
adc
add
enter
es
sbb
retf
xchg
push
mov
sub
add
pop
gs
jmp
mov
test
mov
dec
lea
movs
cdq
xchg
jo
in
loopne
push
or
sbb
pop
ins
mov
xchg
repz
jns
xchg
call
ins
into
jp
or
sub
mov
mov
imul
add
xchg
imul
call
sar
sbb
mov
lods
xor
rcl
push
rcl
dec
push
(bad)
push
mov
(bad)
fbld
loopne
mov
repnz
mov
jne
or
mov
dec
add
outs
mov
(bad)
bndldx
dec
dec
in
fist
std
and
jecxz
and
mov
mov
inc
mov
push
out
mov
jecxz
inc
add
jo
inc
test
jb
inc
add
aas
cmp
enter
dec
xchg
sbb
push
and
daa
out
call
mov
sti
fstp
not
inc
mov
jl
adc
pop
dec
iret
pop
push
add
xchg
cmp
mov
inc
adc
dec
jmp
ins
call
ret
mov
fisttp
xchg
lods
fdiv
add
test
pop
loopne
pop
and
add
mov
sbb
sub
sbb
xchg
inc
outs
push
jmp
jmp
add
add
add
mov
hlt
in
mov
int3
dec
mov
ficomp
popf
imul
adc
sub
mov
shl
and
cwde
sbb
sub
pop
(bad)
mov
out
cmp
lahf
out
arpl
add
inc
mov
push
mov
retf
cs
arpl
cwde
arpl
(bad)
sub
pop
in
cmps
(bad)
mov
jno
popf
sub
or
sub
push
dec
aam
jae
xchg
sbb
in
jle
ss
aam
xchg
xchg
iret
xchg
fnstsw
mov
jb
sbb
nop
popa
leave
cwde
mov
ins
and
inc
mov
pop
fimul
sbb
mov
popa
ins
cmp
jp
pop
adc
cld
jns
jmp
movs
xlat
or
xchg
inc
pop
mov
add
add
icebp
push
xchg
aam
sbb
sub
fwait
clc
outs
sub
dec
xor
add
add
fwait
ja
bts
xchg
popa
mov
sub
and
aaa
xchg
nop
jnp
mov
lods
in
and
ins
lock
or
dec
sahf
addr16
sbb
inc
dec
pop
out
in
xchg
xor
out
ret
dec
ficom
pop
and
inc
je
std
mov
add
jl
je
fnstenv
xchg
movs
xor
push
enter
dec
ss
xor
in
jmp
ficom
mov
or
adc
push
inc
mov
rcr
xchg
jl
rcl
fstp
and
std
pavgw
outs
in
test
or
(bad)
sub
scas
dec
jno
popf
ret
out
call
outs
arpl
cdq
stos
fsub
jb
fdivr
sub
inc
or
mov
scas
mov
movs
fs
dec
loopne
mov
or
or
mov
scas
jle
xor
push
int
or
aas
sti
outs
aad
ds
out
call
pushf
out
int3
pop
ror
jecxz
sar
inc
jns
push
shr
outs
out
jl
out
repnz
sbb
(bad)
out
dec
xor
push
nop
aaa
and
inc
mov
push
ror
xor
cmc
pop
inc
mov
movs
mov
jmp
clc
jle
add
and
sub
mov
or
inc
outs
xchg
aam
in
(bad)
dec
sahf
out
sub
jmp
sbb
mov
ins
inc
aas
ffree
xor
js
mov
ret
jmp
addr16
mov
push
jecxz
sbb
mov
(bad)
jns
mov
movs
lea
push
test
push
ins
in
lock
int3
or
aad
pop
jae
shl
ss
fild
add
cmp
lock
cmp
add
shr
ret
das
lea
fs
xor
aaa
cld
and
(bad)
in
dec
dec
pop
push
xchg
imul
test
cmc
aas
jbe
adc
fisubr
stos
cmp
adc
pop
xchg
jo
push
ins
xchg
sbb
cmp
cwde
icebp
push
inc
inc
and
inc
adc
test
bound
push
xchg
mov
mov
xchg
add
fxch
(bad)
pusha
in
fbld
call
aas
cmp
mov
sub
shl
mov
sti
add
sbb
pop
mov
inc
int3
and
jecxz
pop
das
imul
ror
loope
retf
int
test
mov
popf
stos
adc
cli
(bad)
dec
std
inc
mov
cmp
pop
or
fwait
push
add
ret
(bad)
mov
test
cli
mov
imul
push
pop
sbb
jle
and
ret
jmp
jae
mov
and
mov
stos
adc
dec
xor
daa
sub
sub
mov
and
jnp
add
add
fisttp
test
out
aaa
pop
lea
mov
xchg
in
sbb
mov
in
jl
jle
(bad)
cmp
aam
mov
add
jp
jns
mov
push
adc
sbb
push
adc
sub
and
jmp
adc
push
push
push
lds
or
add
lods
inc
jge
nop
pusha
mov
mov
xor
and
xor
or
mov
ret
fadd
out
mov
pop
mov
push
pop
or
cmp
mov
repz
aas
adc
dec
out
arpl
cmp
(bad)
jae
dec
push
mov
sub
fisubr
push
add
fsub
inc
es
push
lds
mov
jne
add
bound
js
inc
ret
out
mov
loope
ins
push
pop
mov
pop
out
ret
pop
push
call
arpl
mov
rcl
pop
xor
push
cmp
stc
std
inc
cmp
aaa
popa
or
aam
add
xchg
sti
add
pushf
pop
dec
pop
jle
test
push
sub
mov
xor
pushf
push
outs
adc
push
xchg
cmp
cmc
retf
lds
stos
je
mov
(bad)
or
push
stos
outs
xchg
jb
xchg
test
inc
popa
pop
arpl
cmp
sub
lods
pop
scas
stos
push
sti
aam
fsub
and
adc
xlat
push
adc
sbb
sub
dec
daa
add
shl
lahf
mov
in
add
clc
xor
mov
adc
push
push
push
(bad)
jg
adc
out
ret
arpl
jae
mov
imul
ins
sub
fwait
xchg
adc
int
arpl
add
mov
pop
mov
test
xchg
add
adc
(bad)
imul
inc
mov
jecxz
daa
push
data16
dec
repnz
(bad)
jmp
ror
jae
fstp
repnz
lods
je
mov
daa
lds
scas
movs
mov
rep
sbb
hlt
sbb
mov
and
push
mov
(bad)
test
or
shl
xchg
pop
and
push
dec
push
imul
inc
pop
jp
call
ds
jmp
call
add
and
inc
xor
inc
ror
add
mov
push
fldenv
out
inc
daa
(bad)
iret
or
lods
loopne
cmp
lods
cmp
inc
dec
push
cmp
js
leave
sbb
shl
mov
jno
jbe
dec
mul
inc
push
leave
fst
sbb
jne
mov
jge
jecxz
inc
movs
adc
gs
dec
cs
add
jge
(bad)
and
pop
inc
mov
cmp
cmp
dec
cmp
mov
nop
rcr
sbb
sbb
pop
xor
in
or
pop
cs
out
hlt
movs
cmps
ret
adc
and
or
clc
inc
xor
push
dec
fldenv
inc
xor
jmp
xchg
ret
xchg
dec
cmp
dec
dec
addr16
adc
sub
mov
pop
(bad)
sar
into
push
jecxz
call
jmp
push
stc
or
inc
sti
outs
jo
xchg
sbb
(bad)
jp
iret
xor
and
cld
stos
lods
or
mov
rol
scas
aas
pop
mov
in
js
jmp
add
add
pusha
shl
cmp
dec
popa
int
add
cmp
lods
shl
sti
call
es
jae
inc
xor
hlt
or
pop
push
xchg
xor
push
ss
repnz
inc
out
mov
retf
push
sub
clc
cmp
mov
push
push
addr16
push
and
(bad)
mov
mov
fnstenv
pop
cdq
fwait
js
xchg
cld
leave
jbe
pusha
add
popf
in
int3
(bad)
mov
mov
fisttp
out
sbb
repz
into
movs
ret
in
and
ins
test
cmp
xchg
jmp
xor
sar
cmp
inc
xlat
inc
jnp
pop
jns
icebp
mov
adc
sub
popf
adc
xor
sbb
shl
jae
push
popw
stos
jecxz
pushf
popf
shl
ret
popf
popf
mov
dec
cs
dec
es
dec
or
jb
adc
repz
in
and
dec
das
and
in
call
adc
cmp
jb
outs
inc
mov
in
jns
add
sbb
pop
xchg
push
fsubr
je
sbb
dec
int
neg
dec
out
mov
pop
sub
dec
dec
xor
xor
test
pop
loope
ja
scas
repnz
jecxz
sbb
sahf
inc
int
movs
jo
pop
ins
xor
jo
push
mov
inc
iret
mov
add
iret
in
mov
mov
adc
xor
loop
in
add
test
in
inc
dec
leave
cmps
push
ror
push
xchg
scas
pop
fidiv
sub
aas
xor
lods
mov
lods
inc
inc
aad
push
nop
xor
jbe
lock
ins
cdq
pop
add
leave
pop
repz
scas
stc
push
inc
fdiv
cld
xchg
dec
sub
call
dec
lods
jo
jl
jnp
jle
xchg
or
inc
lods
add
mov
cmp
idiv
stos
mov
xor
mov
or
sub
and
cmp
(bad)
idiv
push
iret
and
gs
mov
frstor
retf
mov
call
mov
inc
vpmaddwd
sub
fiadd
cmp
mov
xlat
xchg
data16
cld
and
fwait
push
dec
add
iret
in
cmp
bound
add
shl
mov
ss
test
add
rol
cmp
scas
test
mov
push
jmp
jno
out
or
dec
adc
out
sar
test
mov
add
mov
mov
loopne
sub
les
mov
or
mov
mov
inc
pop
push
add
push
cmps
pop
push
lock
add
ins
or
cmps
ficom
xchg
adc
aam
sbb
add
lock
and
jle
rcl
daa
push
(bad)
dec
mov
retf
sbb
mov
xor
lock
mov
pop
and
xchg
out
add
rol
mov
or
adc
add
lods
ret
loop
cmp
stos
movs
jl
push
cmps
pop
fs
ret
cmp
dec
rcr
push
xlat
mov
xor
gs
shl
pop
dec
xor
loope
adc
cmp
aas
xor
sbb
inc
test
in
call
pop
add
sbb
lea
daa
adc
(bad)
movs
jns
sub
pop
or
lock
in
or
sub
mov
jmp
aas
in
mov
mov
shl
mov
cmp
stc
call
ja
mov
sbb
imul
sar
scas
adc
stc
stc
in
ret
and
mov
cdq
mov
dec
add
lahf
psrlw
mov
loopne
cmp
sbb
mov
sahf
std
mov
ret
push
mov
sti
pusha
inc
les
(bad)
not
rcl
stos
sbb
test
cdq
pushf
adc
rol
sub
push
adc
into
push
sahf
je
je
leave
shr
xor
sbb
sbb
mov
es
out
das
imul
in
and
loopne
dec
popa
(bad)
adc
pusha
pop
mov
popf
dec
ins
(bad)
xor
lods
pop
fld
jno
mov
jb
call
and
jle
jl
push
mov
inc
mov
and
test
ds
cmp
mov
cmps
xor
cs
xchg
xchg
xor
pop
ret
lahf
cwde
cs
lahf
(bad)
push
push
les
cdq
inc
mov
iret
mov
fsub
xchg
retf
add
icebp
dec
xchg
and
in
xchg
pushf
scas
ins
(bad)
adc
mov
jns
push
cwde
add
outs
movs
sub
call
sub
fnsave
sub
aas
fnstcw
mov
inc
in
add
adc
ss
ins
in
or
mov
push
aas
(bad)
push
xor
pop
inc
xor
push
mov
xchg
int3
outs
imul
push
retf
and
cmp
out
push
sbb
mov
cmp
mov
test
and
push
lahf
ss
mov
ss
outs
mov
pusha
repnz
mov
cdq
dec
pop
int
in
adc
pop
fs
out
jb
in
inc
inc
sub
data16
sbb
push
inc
das
scas
mov
in
js
cmc
inc
xchg
out
jl
mov
bound
les
test
(bad)
nop
xor
(bad)
jecxz
sub
mov
dec
jns
pop
dec
(bad)
mov
stc
int
int
int
pop
jae
mov
cmp
dec
pusha
adc
out
mov
inc
ror
mov
cs
sbb
or
adc
in
outs
popf
add
mov
ins
inc
cmp
xlat
in
xchg
sub
mov
cmp
mov
cdq
jp
scas
and
scas
call
mov
test
mov
aam
cmp
clc
repz
pop
leave
push
mov
pop
popa
sbb
jle
fs
rcl
mov
(bad)
add
pop
div
das
cwde
fnstcw
jge
rol
push
test
xchg
or
xchg
pop
jno
pusha
push
inc
mov
mov
imul
cli
int3
mov
fs
inc
int
cld
lds
pop
mov
add
sbb
dec
pop
inc
gs
(bad)
adc
out
cli
jne
dec
cdq
mov
leave
or
add
(bad)
in
mov
sbb
loop
adc
jns
or
shr
mov
ror
jle
jg
jns
sub
inc
lock
into
pop
push
xlat
loopne
pop
out
mov
test
or
dec
movs
rcl
jne
inc
push
push
test
adc
aad
fdiv
pop
dec
mov
lea
aad
xor
push
inc
mov
xor
adc
dec
sbb
cmp
cmp
fsubp
inc
shl
pop
call
imul
(bad)
shl
mov
inc
and
jmp
imul
pop
sub
scas
xchg
xchg
test
hlt
adc
pushf
nop
in
scas
mov
test
pop
outs
popa
pusha
sbb
jge
cmp
std
mov
mov
cmp
je
xor
pop
mov
jo
outs
add
push
xchg
push
ss
pop
adc
lahf
das
test
loopne
leave
int3
arpl
repnz
sbb
push
or
(bad)
data16
inc
daa
imul
mov
push
sub
lock
mov
out
gs
js
in
ret
sbb
jg
mov
push
push
in
add
cmp
and
clc
lock
call
xor
sbb
sub
gs
or
sub
sbb
test
xor
pop
mov
dec
pop
sti
adc
addr16
pop
push
sub
idiv
xchg
pusha
fist
je
adc
cmp
jmp
int3
pop
inc
test
es
xchg
mov
loopne
test
push
les
sub
clc
sbb
xor
jae
rcl
sbb
sub
sbb
sub
xor
xor
mov
jecxz
stc
add
mov
lds
add
iret
cmp
test
adc
mov
test
xchg
int
xor
mov
push
cli
movs
mov
pop
cld
mov
inc
xor
leave
jbe
std
jmp
push
pop
out
ins
jmp
push
cs
mov
inc
loope
test
mov
aam
test
psrad
push
movs
xchg
push
mov
test
out
mov
xchg
cmc
mov
xor
outs
sbb
pop
lock
leave
jp
inc
cmps
neg
push
or
mov
sbb
mov
and
push
inc
je
jns
sbb
jnp
mov
xchg
sahf
mov
stos
outs
stc
bound
imul
fwait
movs
inc
fiadd
push
sbb
jbe
(bad)
cmp
push
push
dec
fld
in
pushf
je
xchg
xchg
mov
pop
sti
loopne
xchg
xlat
xchg
inc
mov
jle
aam
cmps
jl
daa
jl
mov
jo
movs
dec
std
mov
repnz
ins
sub
push
ror
lea
imul
push
neg
and
leave
jo
daa
out
fisttp
pop
test
add
sub
sub
xchg
test
ja
fisubr
cmp
js
dec
stos
jae
lahf
call
cld
xchg
xor
mov
jb
(bad)
dec
mov
mov
fcom
and
dec
adc
mov
in
cmps
nop
inc
das
dec
mov
mov
pop
sub
xchg
adc
sti
out
test
dec
jmp
sbb
outs
imul
test
dec
adc
out
repnz
ss
jge
mov
in
addr16
sbb
dec
xor
aas
(bad)
sbb
dec
mov
dec
fnstcw
pop
nop
fidivr
call
ins
jmp
mov
outs
or
int3
push
push
mov
sub
jne
push
dec
pop
mov
add
out
mov
push
popa
xchg
mov
leave
mov
clc
push
movs
mov
out
jp
out
jb
sub
pushf
mov
jge
xchg
(bad)
out
xlat
pop
inc
pop
clc
sahf
cmp
std
loop
retf
add
mov
push
ret
mov
jb
sub
fs
jmp
adc
fs
xlat
js
ror
mov
arpl
(bad)
ror
out
cwde
dec
fdiv
cmp
fisttp
or
or
xchg
inc
xchg
ja
jbe
mov
or
mov
dec
push
cmp
fsub
test
stos
test
retf
and
imul
mov
es
ins
movs
jmp
mov
ds
clc
ror
inc
call
or
retf
xchg
fcom
loope
fnstcw
mov
jae
fsub
mov
iret
idiv
gs
pusha
fidiv
adc
cli
popf
mov
or
or
mov
jp
lahf
jmp
not
clc
clc
dec
dec
dec
sub
push
or
and
sub
pop
adc
mov
adc
jg
sbb
movs
pop
popf
fist
inc
inc
(bad)
retf
ficom
jl
dec
and
outs
adc
call
mov
lock
and
ret
repnz
ins
std
dec
mov
inc
mov
inc
les
push
ja
mov
out
mov
stc
inc
mov
mov
push
popa
dec
stos
or
jmp
fidiv
idiv
sbb
mov
jmp
push
xor
xchg
xlat
lea
mov
jmp
into
mov
cmp
out
sub
scas
dec
inc
push
xchg
call
mov
mov
dec
add
out
ja
test
mov
sub
and
dec
sar
in
pop
push
pop
jbe
dec
adc
sbb
sub
jmp
push
sub
(bad)
pop
fwait
jnp
stc
(bad)
stos
or
mov
xchg
cmp
mov
adc
std
fwait
je
cld
vmovaps
and
inc
pusha
mov
cmp
and
and
(bad)
mov
push
inc
or
xlat
cmp
not
adc
jl
and
in
popa
in
cmp
pop
popf
mov
out
add
inc
das
and
addr16
mov
inc
ret
dec
inc
movs
test
or
jg
adc
adc
aaa
popa
mov
sub
add
(bad)
pop
pop
mov
mov
mov
(bad)
xor
inc
and
aaa
xchg
mov
mov
jmp
stc
nop
inc
adc
ins
cmps
ret
(bad)
out
js
mov
mov
lods
push
outs
dec
shl
js
inc
adc
jae
add
add
lods
lods
xchg
mov
cmp
stos
sbb
retf
xchg
int3
pop
push
dec
xor
add
outs
jmp
add
inc
pushf
sub
cs
and
ret
sbb
dec
lods
lock
pop
push
dec
int
xchg
(bad)
ds
popf
mov
enter
loopne
pop
retfw
sub
mov
add
popf
stc
stc
aad
add
sbb
and
push
movs
mov
inc
das
mov
push
mov
add
icebp
jns
outs
cli
mov
aam
aam
adc
sbb
mov
and
jb
pop
iret
(bad)
fld
sbb
jle
in
daa
jp
es
pushf
cmp
inc
sbb
inc
xor
jns
jne
ror
addr16
jge
jnp
vhsubpd
stc
rcr
and
gs
cmp
add
dec
jmp
bound
imul
cmp
xchg
mov
pop
imul
(bad)
pop
ds
sar
xchg
ja
mov
sbb
gs
pop
int3
arpl
das
and
and
lods
call
adc
loop
xchg
push
mov
add
in
mul
jecxz
inc
fidiv
cli
scas
enter
shr
add
pop
or
pop
(bad)
popf
mov
dec
mov
adc
mov
sbb
xor
(bad)
lods
test
pop
into
jnp
lds
xchg
sub
adc
lea
xor
cmp
xor
clc
dec
and
test
in
mov
mov
fcmovnu
fchs
jb
xor
add
aaa
xchg
pop
mov
mov
out
scas
jnp
jbe
test
mov
xchg
call
sub
imul
jns
push
sub
mov
cmp
cmp
adc
jge
int
xchg
movs
push
repnz
std
xor
ret
and
inc
sbb
leave
push
mov
xchg
jnp
aaa
shl
push
mov
dec
sbb
gs
pop
cwde
fs
mov
inc
push
inc
nop
jge
cld
(bad)
xor
das
es
in
mov
jo
inc
out
aad
cmp
neg
sub
imul
iret
aad
and
pop
iret
xchg
jno
jle
xor
or
sbb
popa
jno
in
out
ficom
cld
fxch
shl
pushf
stos
loope
cmp
inc
xchg
jle
add
xchg
add
add
out
aaa
and
ss
nop
push
out
and
movs
dec
sub
lahf
in
adc
push
pop
out
into
jno
mov
jp
pusha
jns
add
adc
sar
dec
call
idiv
ret
or
gs
jp
je
ins
ins
loopne
and
mov
cmp
inc
cmps
sub
mov
sub
mov
xor
jl
vfrczsd
pop
mov
out
cmps
jl
sahf
fs
jnp
pop
ins
fsubr
test
fs
pop
xchg
clc
pop
cli
cmp
loopne
xor
stos
mov
aad
enter
aad
xchg
test
sub
sub
je
fwait
into
retf
sbb
in
xlat
mov
in
sub
retf
mov
inc
xchg
jo
retf
mov
pop
xchg
iret
lods
adc
outs
ret
mov
aaa
ins
pushf
or
rcl
sub
stos
or
cmp
xor
(bad)
ins
cdq
int
(bad)
jnp
push
pop
push
aad
(bad)
mov
mov
aad
jge
cdq
mov
xor
pop
push
movs
adc
push
ja
jbe
imul
pop
loopne
shl
pop
mov
push
add
test
mov
test
ret
mov
mov
push
jmp
mov
push
inc
lock
clc
xchg
lahf
xor
in
imul
sub
push
int
ret
ficomp
ret
hlt
out
push
jo
leave
retf
pusha
retf
mov
(bad)
xlat
sub
rcl
outs
mov
xlat
mov
lea
fldenv
xor
cld
jne
fnstsw
mov
xor
enter
aas
mov
and
or
loop
dec
lods
pop
inc
sbb
push
jno
and
dec
jmp
push
sbb
test
xchg
fsubr
stos
lea
cld
pop
int3
push
cdq
ret
arpl
pop
outs
mov
or
call
or
cmp
push
dec
adc
iret
je
and
movs
inc
outs
add
out
in
xor
jp
pop
ds
inc
inc
dec
fwait
or
jg
push
addr16
cmps
inc
iret
cmc
push
lods
cwde
and
xor
push
push
ja
lds
icebp
aam
push
dec
movs
sbb
seta
scas
sbb
or
add
mov
out
jnp
daa
loope
inc
add
dec
rcl
mov
leave
sbb
daa
arpl
jge
xchg
jns
out
enter
dec
push
inc
shl
mov
inc
push
mov
cmp
push
fs
xchg
movs
mov
data16
sbb
xor
cmps
pop
int
fist
jmp
mov
das
movs
push
add
aaa
jmp
fwait
or
or
imul
shr
sub
out
mov
jl
cmp
jns
out
jns
xor
push
mov
or
ja
mov
mov
push
mov
int
test
pop
mov
jns
call
dec
pop
mov
test
ffree
and
dec
rcl
mov
jne
pushf
repz
and
mov
or
mov
(bad)
xor
mov
aas
or
int
dec
(bad)
or
(bad)
enter
sub
scas
pop
jecxz
mov
xchg
pop
iret
mov
adc
push
adc
cbw
xchg
(bad)
sub
or
cmp
add
ficom
stos
mov
push
add
pop
adc
adc
(bad)
fstp
xor
adc
push
sub
add
dec
xor
adc
dec
dec
je
and
inc
(bad)
aaa
js
inc
fcomp
pop
and
je
mov
aad
scas
adc
std
push
xchg
movs
sar
sub
dec
pop
scas
ds
mov
mov
mov
cs
les
xor
dec
sub
(bad)
mov
clc
cmps
je
rol
inc
mov
ficomp
std
int3
lea
jo
mov
movs
dec
aaa
out
cmp
mov
test
fstp
sbb
fsub
xchg
mov
dec
mov
dec
push
iret
sub
pop
ud0
movs
movs
pop
cmp
aad
mov
test
outs
pop
enter
adc
es
dec
jmp
sbb
(bad)
(bad)
mov
test
cmc
mov
sbb
mov
adc
lods
stos
mov
scas
shl
dec
leave
fist
jno
dec
(bad)
dec
push
xor
leave
push
loop
push
int
cmp
jmp
add
inc
mov
(bad)
adc
mov
pop
sub
xor
jp
add
dec
shl
jmp
jno
dec
push
and
callw
rcl
adc
cli
jmp
or
stos
dec
cli
dec
in
cwde
shl
fsubr
rcr
sbb
xor
xchg
cmps
mul
cmp
pop
shr
push
xchg
scas
jmp
js
or
outs
repz
sbb
and
data16
(bad)
sub
xor
xchg
xchg
ins
test
iret
dec
pop
aaa
enter
push
xchg
mov
push
stos
or
jmp
gs
pop
mov
dec
cmps
cmps
scas
pop
jo
mov
inc
call
adc
adc
test
inc
mov
mov
xor
stc
dec
mov
lds
jmp
daa
push
ins
nop
movs
jae
add
push
jnp
mov
in
mov
sub
inc
lock
cs
sbb
pusha
dec
pop
aaa
cmp
dec
ficomp
ror
and
xor
jmp
sbb
lds
mov
ret
or
imul
cmp
std
mov
xor
sahf
ret
adc
call
adc
xchg
out
push
mov
add
push
cmp
dec
outs
mov
in
mov
add
mov
jmp
scas
loop
and
outs
xchg
jo
in
stc
leave
fistp
fdiv
sbb
arpl
sub
mov
xor
mov
mov
pop
pop
and
nop
push
sti
sti
(bad)
xor
push
sbb
mov
mov
ret
add
test
aam
or
push
cmovb
arpl
dec
scas
cs
cmc
cs
xchg
mov
xor
mov
int
push
retf
je
cmp
orps
cli
addr16
and
mov
loope
adc
iret
sub
xchg
loope
rcl
and
dec
jp
iret
jne
scas
pop
cmc
data16
jg
pop
inc
cdq
mov
jecxz
setl
adc
mov
and
les
mov
sub
pusha
and
mov
scas
xchg
stos
sbb
sbb
movs
jle
pop
stc
inc
int
cdq
inc
jae
iret
test
pop
dec
ret
test
fimul
outs
(bad)
mov
push
mov
cwde
clc
pop
cdq
jno
out
pop
mov
sti
popf
sbb
leave
aas
lds
loop
in
movs
sub
inc
enter
jb
adc
scas
mov
or
or
in
inc
cmp
and
nop
lahf
push
retf
jbe
mov
cli
jae
cs
push
into
xchg
jns
dec
leave
inc
and
dec
xlat
cli
imul
sub
cs
mov
test
outs
push
mov
mov
inc
mov
cmp
push
movs
pop
adc
add
iret
xchg
arpl
js
hlt
call
imul
imul
mov
xchg
stos
jl
ror
pop
mov
outs
mov
mov
sahf
dec
es
push
xchg
mov
inc
xchg
sti
ins
(bad)
push
xchg
jb
repnz
adc
dec
call
movs
xchg
dec
or
push
lahf
jp
adc
mov
pop
sub
jmp
int
cmps
adc
xchg
cmp
sub
mov
and
pop
sub
jle
xor
adc
xchg
mov
neg
mov
pop
jl
jg
lea
test
into
loopne
rcr
jb
lahf
arpl
mov
xchg
icebp
adc
aad
aad
or
push
(bad)
mov
or
popf
test
loopne
sar
cdq
fild
adc
mov
fld
pop
ret
ret
cmp
out
sbb
mov
dec
shl
lea
push
mov
mov
retf
imul
and
push
xchg
vminss
rcr
pop
lahf
lods
sub
mov
mov
and
mov
ins
adc
into
xchg
push
jnp
out
xchg
pop
and
in
mov
push
jnp
mov
and
fwait
arpl
fwait
mov
push
les
xchg
out
cmp
cmp
and
popa
jp
test
xchg
(bad)
stc
sbb
repnz
stc
inc
loope
cs
ret
pop
or
add
out
push
stos
push
sbb
repnz
inc
sbb
add
scas
sbb
test
mov
xor
cmp
cmp
imul
adc
lods
dec
xor
jmp
sbb
je
adc
add
(bad)
(bad)
pop
jns
ret
(bad)
cmps
push
aaa
mov
imul
cs
arpl
pop
adc
dec
icebp
inc
in
xchg
xor
(bad)
push
jbe
cdq
in
push
sbb
pop
adc
and
sar
dec
inc
jge
sub
daa
add
and
mov
inc
test
ss
test
cmc
adc
xchg
cmp
inc
inc
ret
and
or
ret
test
dec
lock
lahf
pushf
cmp
mov
test
mov
scas
retf
scas
push
cmps
or
or
inc
cmp
mov
stos
daa
je
scas
cld
mov
cld
in
mov
fiadd
pop
xrelease
je
sti
ficom
cmps
inc
pop
pop
mov
fnstenv
xchg
sti
push
scas
jbe
sbb
adc
dec
jp
mov
pop
in
jp
mov
xchg
inc
sar
dec
clc
ret
aas
jmp
mov
in
sar
mov
or
js
out
mov
push
inc
cmps
push
rol
pop
cmp
sti
mov
test
pusha
dec
xor
push
pop
sub
jnp
imul
mov
shr
cli
inc
cmp
mov
mov
ins
or
sub
mov
movs
push
dec
sbb
stos
mov
ror
dec
mov
mov
inc
mov
into
push
ds
imul
or
push
cmp
dec
popa
inc
push
xchg
xor
or
cmp
retf
test
pop
xchg
enter
outs
bound
dec
inc
aad
add
lods
ficomp
xchg
pusha
jle
mov
sub
jns
mov
mov
mov
adc
das
ret
mov
dec
ficomp
push
xor
imul
add
inc
xor
xor
adc
xor
xor
sub
out
repnz
inc
sbb
fcomi
ins
dec
jns
lahf
jmp
xchg
call
les
outs
mov
and
push
jmp
fisubr
mov
pop
jnp
js
dec
jb
int3
leave
test
sbb
daa
mov
ret
es
dec
std
xor
pop
mov
xchg
shl
das
retf
or
sub
xor
xchg
mov
fmul
push
xchg
scas
lea
push
adc
sub
jg
fisub
push
and
add
inc
mov
lea
dec
dec
pop
mov
or
mov
div
cmps
ss
and
push
adc
push
rcr
mov
xchg
std
mov
add
jne
inc
lock
pop
dec
ret
adc
adc
outs
fadd
cli
int
dec
ds
mov
mov
aas
lds
inc
lods
int
stos
loopne
jg
or
and
sub
jge
cmp
mov
pop
rol
fidiv
push
jae
pop
add
neg
pop
mov
mov
xchg
rol
mov
push
add
pop
jecxz
cdq
or
adc
mov
and
push
jl
jnp
jl
xchg
dec
or
sbb
pop
push
(bad)
dec
sub
pushf
int
adc
ins
loop
sub
fst
jno
xchg
pop
inc
lea
mov
or
in
dec
ins
xor
test
push
aas
sub
pop
test
inc
retf
add
and
pop
out
mov
push
stos
and
adc
jg
test
push
and
popw
pushf
(bad)
in
adc
pop
cmps
xor
repnz
fsub
outs
nop
or
xlat
adc
sub
xchg
push
mov
shl
loop
inc
nop
mov
daa
inc
out
push
mov
cmp
jle
cdq
outs
pushf
jae
call
push
inc
call
adc
push
jg
arpl
sbb
aas
mov
xchg
es
mov
lods
inc
adc
movs
lods
dec
push
mov
sahf
or
xor
clc
add
mov
mov
push
adc
mov
fwait
adc
mov
repnz
and
arpl
mov
sub
lods
aam
movs
xchg
push
push
ficom
ds
jge
enter
push
add
adc
dec
push
data16
adc
mov
or
retf
xchg
or
pop
adc
jbe
(bad)
pop
dec
(bad)
sub
(bad)
push
outs
movs
fsubr
push
add
mov
cmp
or
rcr
push
cdq
leave
sbb
ins
data16
mov
rcr
dec
jo
pushf
and
inc
and
ficom
dec
dec
pop
outs
call
gs
cmps
push
pop
ds
bound
shr
fisttp
aas
mov
fidivr
sbb
inc
mov
in
dec
jne
repz
add
sub
sbb
rcr
outs
sub
repz
adc
adc
cld
inc
mov
mov
imul
aas
js
mov
sub
test
dec
in
popw
mov
pop
or
icebp
leave
and
aam
arpl
push
push
ja
and
bswap
mov
pop
rcl
rol
mov
shl
lock
mov
arpl
movs
xchg
out
add
(bad)
mov
shr
js
in
mov
cmp
jle
enter
rcl
out
fcomp
in
pop
fstp
mov
add
xor
jmp
pop
jmp
push
in
and
jns
loope
gs
lods
sbb
mov
aam
fwait
push
aad
mov
ja
aaa
fcomp
and
jnp
retf
push
ins
les
jge
stos
mov
sahf
ins
sub
addr16
pop
cld
xchg
ja
mov
clc
popf
or
inc
adc
rcl
sub
sub
ficomp
add
fsub
sub
cli
xchg
out
int3
fucomp
(bad)
push
xbegin
pop
test
or
add
add
loope
mov
pop
push
enter
test
rol
pusha
jl
inc
int
hlt
or
dec
jns
aas
lods
mov
jmp
cmp
ficom
sub
add
mov
inc
mov
adc
int
test
popf
cwde
jl
xchg
pop
jno
pop
loope
xor
adc
xor
loopne
cmp
mov
pop
fisub
pop
cli
loope
fucomip
fdivrp
arpl
mov
sbb
(bad)
mov
xor
dec
stc
(bad)
push
xchg
aad
and
adc
in
push
stos
in
cwde
jmp
(bad)
icebp
rol
retf
aam
sub
sbb
std
rol
scas
cdq
movs
add
cmc
mov
mov
and
repz
into
out
cmp
push
pop
ja
inc
jmp
adc
mov
dec
ror
mov
sub
in
rcl
dec
push
dec
daa
in
retf
test
pop
not
xchg
popf
shl
fdivr
cli
ins
fistp
inc
and
dec
mov
iret
jge
scas
jb
dec
fdivp
and
stos
cmp
push
cld
sahf
stos
xchg
or
jg
inc
mov
pop
mov
pop
pop
xor
or
mov
mov
cmp
(bad)
loope
out
lock
sbb
mov
jns
jecxz
ins
pop
std
(bad)
sub
ins
sub
sbb
leave
into
in
xchg
adc
hlt
in
fcom
idiv
inc
dec
adc
sbb
mov
push
sub
dec
das
sub
mov
add
sbb
inc
scas
test
xchg
jo
pop
pop
sub
add
xor
pop
cld
ret
xor
mov
sbb
fdivr
mov
add
fsub
adc
jno
cmps
xchg
outs
and
sbb
mov
cld
mov
mov
bound
ror
cpuid
out
test
mov
(bad)
cmp
aad
or
push
fwait
hlt
jp
jno
arpl
push
mov
and
mov
(bad)
adc
test
or
push
dec
fadd
jl
rcr
xchg
or
data16
ins
adc
xchg
ins
loope
ret
hlt
scas
stos
xor
retf
dec
jecxz
arpl
mov
jnp
fwait
psubd
pop
dec
adc
xchg
xor
hlt
fnsave
push
push
fadd
inc
sub
addr16
dec
in
inc
icebp
and
mov
stos
mov
mov
loope
xchg
jno
sub
or
add
std
push
pop
aam
dec
jmp
mov
jno
fiadd
retf
or
outs
mov
sbb
retf
jl
inc
fisubr
xor
repnz
out
xchg
in
adc
ins
fild
pop
cmp
icebp
out
cmp
jl
dec
cmp
dec
adc
(bad)
ror
pop
dec
inc
add
scas
mov
push
(bad)
int3
push
push
shl
fcmovb
mov
pop
loop
clc
sbb
cmp
cmp
inc
dec
xchg
arpl
call
xchg
test
(bad)
cs
xor
cmp
jb
mov
push
mov
mov
mov
rcr
inc
cmp
div
(bad)
stos
jb
dec
mov
cmp
shl
fsubr
dec
ins
loop
adc
je
pop
xchg
xchg
(bad)
mov
pop
scas
adc
inc
(bad)
test
inc
popa
cmp
jmp
sub
lods
scas
arpl
retf
jno
mov
imul
cmps
jecxz
aaa
push
cld
push
xchg
push
in
xchg
int
sbb
mov
cmp
xor
push
push
or
cwde
jl
test
adc
jo
dec
sub
sub
mov
pop
push
mov
pop
and
jmp
js
sub
test
pop
jecxz
lahf
push
pusha
push
add
ret
and
push
jne
(bad)
push
lods
mov
mul
dec
push
xchg
test
or
mov
xchg
and
gs
stc
mov
push
mov
mov
lock
mov
mov
mov
mov
ja
mov
dec
adc
jmp
ss
addr16
es
xor
imul
dec
inc
test
pop
push
push
imul
jnp
mov
scas
in
call
sbb
push
push
pop
loope
aas
rcl
sbb
jne
xlat
push
pusha
mov
xchg
mov
mov
xchg
dec
xchg
(bad)
aas
push
and
and
push
sbb
and
int3
xchg
test
adc
fucomip
clc
in
stc
sbb
inc
mov
xor
mov
sub
add
jmp
dec
nop
mov
or
(bad)
loopne
xor
ins
cmp
add
inc
gs
mov
sar
dec
xor
fnsave
mov
pop
ins
jle
gs
mov
jg
sbb
bound
out
or
das
je
jecxz
cmp
jnp
sbb
add
xchg
add
icebp
mov
jb
ins
xchg
int
push
xchg
dec
popf
fwait
mov
ss
push
(bad)
sub
mov
pop
or
call
adc
jae
lock
push
loope
je
(bad)
stos
mov
movs
push
aaa
and
and
pop
in
add
xor
sub
cmp
pop
pop
add
pushf
movs
mov
call
jg
test
sub
(bad)
jnp
fistp
retf
jnp
bound
jg
js
lods
in
inc
movs
add
jmp
dec
mov
jmp
pop
sbb
mov
(bad)
clc
push
mov
cmps
jb
ret
inc
mov
hlt
inc
pop
int3
cmp
clc
mov
xor
cmps
pop
mov
pop
jg
xchg
mov
sub
fdivr
or
fstp
(bad)
(bad)
sub
jg
inc
loopne
mov
sbb
xor
sub
call
xor
cmp
dec
and
push
lahf
mov
push
xchg
adc
cmp
cmps
mov
or
sbb
pop
xchg
into
into
xlat
sbb
sub
mov
(bad)
movq
std
sbb
push
add
mov
sub
cli
jecxz
mov
mov
sub
mov
mov
or
dec
pop
xchg
rcl
sbb
sbb
and
push
push
(bad)
std
adc
mov
push
pop
aaa
adc
push
adc
scas
mov
mov
jae
in
test
or
push
mov
pop
ins
pop
and
jnp
xchg
imul
dec
sub
push
dec
sbb
clc
lods
std
add
mov
inc
cmps
add
xor
popf
movs
jmp
push
or
mov
call
push
sbb
xchg
cwde
lods
cdq
push
js
rcl
add
xchg
mov
xchg
pop
(bad)
cs
bound
mov
sub
sti
jne
retf
cmp
jbe
rcl
les
aas
push
outs
repnz
cdq
jo
inc
out
pop
cmp
or
fisubr
push
dec
inc
test
dec
mov
fstp
shl
jp
mov
retf
push
mov
leave
outs
cmps
arpl
ror
shl
push
arpl
repz
jp
sub
cld
outs
ss
sbb
cmp
fdiv
sbb
scas
xor
push
(bad)
push
jg
push
xchg
sub
stos
add
hlt
inc
push
mov
mov
ret
cld
ror
fwait
in
adc
add
inc
clc
push
mov
inc
xchg
enter
(bad)
push
bound
mov
sub
sub
push
ss
aad
movs
jl
sbb
ficomp
rcr
imul
pusha
popa
adc
push
je
stc
ins
test
cmp
and
ficom
shl
enter
outs
mov
mul
pusha
fwait
mov
push
fdivr
hlt
cmp
mov
pop
hlt
jno
cli
div
mov
bound
mov
inc
cld
jecxz
xlat
mov
mov
js
pop
enter
ins
movs
outs
bound
icebp
shl
xlat
mov
push
inc
cld
add
sub
mov
popf
std
pop
and
div
sbb
and
in
mov
cmc
sub
test
icebp
stos
icebp
ror
mov
test
inc
(bad)
imul
sub
add
nop
and
xor
fbld
push
xchg
(bad)
loop
dec
dec
or
mov
sbb
imul
jb
mov
in
adc
jb
push
xchg
out
adc
jle
call
fldcw
sub
mov
ins
xor
stc
es
xchg
outs
sub
adc
push
and
add
mov
xor
mov
xchg
dec
test
cmps
cmp
sbb
xchg
push
arpl
rcr
or
(bad)
xchg
mov
shr
sub
jp
dec
and
dec
icebp
dec
shl
fild
out
ss
(bad)
in
aam
jge
xchg
jecxz
pop
or
jmp
mov
xchg
(bad)
mov
arpl
xor
sbb
adc
cmp
push
push
cmp
jl
out
sub
xchg
sysenter
and
pop
dec
push
push
push
call
mov
into
(bad)
mov
fwait
lahf
cli
xor
arpl
repnz
jmp
jp
cmp
test
outs
xor
retf
cmp
mov
and
pop
lahf
aas
xchg
popa
mov
push
cmps
nop
popf
scas
enter
std
xchg
mov
dec
xor
(bad)
push
jge
mov
pop
push
leave
jns
pusha
pop
mov
and
(bad)
in
test
in
js
fiadd
pop
push
pop
cmps
and
cs
mov
lock
mov
lea
mov
jmp
xchg
add
jg
stos
ret
jecxz
out
jecxz
xchg
std
jmp
sbb
add
push
into
jp
xlat
jo
xor
sub
jnp
jmp
or
fcomi
loope
js
and
xor
js
std
xchg
popf
xlat
xor
push
pushf
cmc
lahf
sbb
jge
in
jbe
fistp
xor
rol
aad
in
pop
lods
mov
or
imul
dec
jp
dec
or
sub
sbb
pop
lock
xor
out
sbb
lds
jns
clc
jno
or
test
or
jp
test
cmps
ins
cmp
call
adc
test
(bad)
xor
daa
ins
cs
daa
inc
test
pop
dec
addr16
inc
cmp
ret
pushf
inc
mov
ret
rol
hlt
ins
and
cmp
jle
jbe
cli
(bad)
daa
in
cmp
daa
addr16
jne
cmp
out
pop
dec
ins
aam
movs
push
push
out
jle
cmp
ror
dec
(bad)
(bad)
aam
mov
pop
jl
pop
aad
dec
sub
icebp
pop
arpl
loopne
and
call
ret
xchg
push
xor
or
cmp
iret
js
xor
adc
out
cmp
mov
inc
mov
std
ja
mov
cmc
imul
inc
repz
aaa
retf
lock
sub
push
js
xchg
loope
(bad)
jecxz
int3
push
sbb
in
imul
jmp
jl
popf
xor
sbb
ret
loopne
lods
dec
xchg
and
addr16
adc
sar
int3
cmp
or
jbe
add
mov
pop
repz
mov
in
das
xor
mov
lahf
pop
fldcw
push
mov
les
and
push
xor
push
pop
sub
push
mov
and
xor
(bad)
addr16
(bad)
lahf
and
cmp
test
xor
jmp
es
clc
cmp
rcr
loopne
mov
or
pop
int3
dec
xchg
loopne
ja
mov
pop
adc
aaa
adc
fwait
adc
pop
mov
test
ret
adc
mov
lock
and
je
sub
cld
ss
test
jmp
outs
cmp
cdq
fisubr
push
fisubr
pop
fdiv
(bad)
in
retf
movs
push
mov
repz
jne
dec
mov
inc
push
nop
xchg
sbb
sbb
ss
xor
int
out
jns
pop
mov
aad
mov
ret
inc
mov
jae
pop
ds
or
xor
cli
mov
test
cli
cmc
je
xchg
sub
movs
or
inc
add
dec
jmp
dec
sbb
inc
push
mov
mov
fs
ds
push
jecxz
push
das
ds
inc
cs
mov
in
inc
ins
push
std
sub
ja
dec
mov
mov
or
mov
jnp
jo
inc
cmp
add
sbb
and
hlt
hlt
sbb
adc
inc
mov
sub
xchg
or
dec
dec
pop
hlt
and
jae
cmp
fcmovu
mov
js
push
pop
int3
jecxz
je
pop
inc
xchg
retf
and
xor
popf
jb
dec
jge
sbb
sahf
mov
push
push
push
arpl
mov
icebp
or
mov
sub
push
ret
cmp
jle
sub
jno
jbe
xor
adc
and
les
cmp
bound
pop
cmps
push
mov
dec
jg
int
fild
ffreep
or
inc
shl
xor
pop
les
imul
sub
test
xchg
mov
pop
pop
and
inc
mov
mov
imul
mov
stos
mov
ficomp
cmp
(bad)
shl
pop
(bad)
jmp
or
push
(bad)
mov
push
les
xlat
ficom
pushw
fistp
push
mov
aas
cmp
int3
mov
daa
xor
iret
sub
push
leave
add
sub
loope
out
jg
pop
inc
jae
fstp
or
ret
xlat
retf
sbb
cmp
add
pop
adc
mov
test
lds
mov
mov
push
lock
hlt
add
lods
pop
jns
push
cmc
pusha
icebp
jne
repnz
xor
ror
fld
jp
or
add
mov
pop
add
cdq
repnz
mov
sub
fldcw
sbb
int
xchg
leave
aad
xchg
ins
ret
lods
mov
lahf
int
lock
inc
lds
mov
dec
sub
jl
fisubr
cmp
jl
dec
lds
sbb
repz
scas
leave
pop
in
sar
lods
out
fucomp
stos
retf
push
fs
xlat
fadd
mov
ins
and
lods
fmul
adc
mov
or
xchg
(bad)
fisttp
inc
xlat
shl
ds
cmc
xchg
or
dec
mov
arpl
sub
or
cmc
jno
daa
call
mov
gs
push
push
jge
jbe
jp
out
imul
int3
ficom
jno
push
ins
int3
xchg
outs
or
loopne
mov
xchg
es
mov
fs
scas
lods
mov
add
push
mov
mov
mov
stos
inc
mov
mov
dec
mul
push
add
push
sub
xor
es
jnp
xchg
inc
sbb
sbb
and
mov
jo
xchg
and
sub
cs
jecxz
or
and
mov
jno
in
inc
sub
inc
push
sbb
movs
and
and
sbb
or
call
xchg
push
mov
pop
xchg
push
stos
enter
test
sbb
not
cs
push
stos
aaa
gs
lahf
hlt
push
pop
jmp
(bad)
ins
push
mov
gs
adc
xor
adc
pop
inc
and
(bad)
xlat
or
mov
mov
xor
sub
mov
push
movs
imul
scas
pop
or
add
outs
mov
leave
add
add
xor
cmp
(bad)
push
aaa
sub
mov
dec
push
or
cwde
xchg
test
icebp
mov
cs
int3
mov
push
push
loop
out
pop
sub
adc
sub
xchg
cmp
dec
jae
xor
push
xor
mov
outs
arpl
bound
out
out
inc
sti
(bad)
lea
jae
inc
data16
mov
mov
ins
pop
sub
push
add
jb
test
sub
scas
int3
into
cmps
or
jnp
jnp
cmp
pop
mul
shl
gs
hlt
inc
cmp
xor
data16
inc
std
pop
xchg
repz
aam
sar
push
(bad)
jb
loopne
iret
push
mov
add
aas
push
stc
movs
mov
push
btr
das
jae
pop
or
mov
mov
jb
mov
or
inc
iret
fdivr
fnstsw
jge
arpl
repz
in
ja
sub
je
mov
adc
ins
aaa
inc
fdiv
cmc
jns
sbb
movs
mov
push
loop
adc
popa
inc
pop
(bad)
cmp
aaa
push
mov
pusha
mov
outs
js
inc
xchg
scas
(bad)
ret
lea
ss
ret
mov
jno
or
fdivr
shr
pop
jne
dec
add
mov
or
jge
pushf
gs
inc
and
xor
and
stos
loope
ds
mov
ficom
daa
mov
lods
retf
push
retf
add
mov
mov
jg
or
paddd
mov
or
jge
xchg
pop
imul
push
add
push
(bad)
ss
sbb
(bad)
jne
inc
push
mov
out
test
jb
pop
ins
popf
mov
and
rol
push
mov
push
mov
mov
dec
or
in
cdq
pop
retf
cs
mov
inc
inc
js
fidivr
pop
test
add
cld
test
psubb
loop
icebp
ins
(bad)
or
dec
xchg
cmp
xor
sbb
add
clc
sti
fld
mul
or
rcl
icebp
pop
pop
cmc
push
sbb
das
mov
inc
xchg
jnp
inc
mov
iret
std
mov
xchg
(bad)
int3
rcl
cdq
btr
sbb
rol
loopne
and
inc
(bad)
lods
xchg
mov
(bad)
out
or
mov
repnz
pop
xlat
lock
ror
mov
sbb
scas
xchg
sub
ret
sbb
dec
inc
test
xor
mov
mov
(bad)
sub
jle
daa
bound
pop
jns
imul
adc
fucomi
add
push
sub
mov
js
popf
xchg
retf
lahf
adc
adc
inc
sbb
dec
pop
(bad)
arpl
cmp
pop
xor
adc
test
aad
cs
call
fnstenv
or
dec
lods
stos
test
pop
int3
dec
mov
mov
loop
dec
fistp
nop
pop
add
cwde
adc
ins
fs
push
outs
lods
lahf
icebp
in
arpl
out
test
jnp
scas
add
add
inc
cmps
cmc
sbb
mov
mov
mov
pop
imul
fsubr
sbb
push
jo
out
dec
push
cwde
pop
cmp
jne
inc
(bad)
(bad)
arpl
add
inc
adc
outs
aam
adc
adc
push
and
sbb
mov
arpl
int
scas
dec
popa
add
adc
sahf
xor
push
and
or
cmp
push
jp
cmp
retf
outs
cmp
lds
mov
lock
pop
mov
push
sub
jns
leave
cmp
mov
aam
outs
inc
icebp
or
lahf
cmp
xchg
sub
loopne
dec
push
jl
sbb
in
les
sbb
push
mov
or
jmp
fadd
sar
add
ret
pusha
sti
and
fsubr
inc
repnz
pop
adc
je
adc
aam
ss
adc
push
imul
pop
jo
(bad)
add
push
shl
mov
push
fimul
lock
push
inc
sbb
pushf
adc
adc
inc
sbb
dec
mov
pop
std
pop
retf
push
mov
and
xchg
jo
jne
(bad)
gs
lock
pushf
adc
repz
int
stc
pop
(bad)
mov
leave
sti
pop
mov
adc
js
pop
stos
xchg
mov
xlat
test
xor
dec
push
mov
sbb
(bad)
mov
xchg
xor
pop
sub
and
inc
mov
push
push
jb
sbb
xchg
xchg
test
or
mov
inc
pop
int
fnstsw
aaa
sti
sbb
ror
add
cmp
enter
test
or
stos
bound
in
mov
scas
or
ss
call
push
pop
mov
xor
push
mov
cmp
push
xor
out
or
call
lss
dec
imul
pop
cmc
sbb
jecxz
jbe
mov
mov
or
test
out
call
mov
in
cmp
mov
push
fstp
lahf
sbb
add
sbb
fdiv
jg
shl
out
jmp
push
adc
ins
in
add
rcl
sbb
dec
jecxz
arpl
or
ss
imul
shr
pusha
or
out
loope
adc
fisub
aaa
loope
mov
push
out
call
retf
in
and
test
push
mov
stos
loop
or
or
pop
rcr
sub
loopne
or
or
fwait
nop
leave
lods
mov
aad
jnp
es
mov
shl
inc
jne
shl
mov
mov
pop
pop
aas
sbb
xor
push
xor
dec
loopne
push
stc
push
aam
add
inc
xchg
sbb
jno
sbb
(bad)
sbb
mov
out
inc
sub
outs
das
push
jno
and
in
cli
pushf
jmp
xor
fnstcw
adc
push
in
mov
mov
mov
jmp
out
lods
stos
ds
sub
mov
pop
in
fwait
jb
repz
hlt
loop
inc
sub
stos
pop
cwde
dec
push
inc
jb
xor
cmp
xor
fwait
cmps
in
bound
push
jmp
cs
cwde
sahf
nop
adc
aam
xchg
fxch
clc
jae
inc
adc
fbld
xor
cmp
mov
pop
jne
push
xchg
cmps
pop
retf
xor
push
retf
sub
mov
dec
xor
jmp
mov
pop
hlt
cwde
pop
movs
icebp
adc
ins
sbb
stc
mov
sub
or
jb
dec
add
xchg
dec
adc
add
bswap
scas
fisttp
mov
push
push
ret
jnp
adc
sti
adc
mov
xchg
xchg
dec
cvtps2pd
jle
xor
js
mov
xchg
inc
mov
mov
ins
pop
nop
fimul
push
xchg
in
pop
xor
repnz
repz
add
in
adc
adc
xor
call
cmc
bound
lods
lods
pop
jae
cli
sbb
add
in
scas
adc
mov
adc
das
jns
jno
push
fnsave
arpl
lock
sub
push
(bad)
xchg
icebp
arpl
retf
(bad)
aad
in
(bad)
pop
cmp
lds
mov
jge
rcr
dec
cmp
sar
cmp
pushf
adc
pushf
xchg
inc
jb
test
shr
fnstcw
in
sbb
cmp
rol
xchg
xor
push
inc
inc
ret
(bad)
xchg
fs
pusha
cdq
inc
movs
or
sbb
imul
loop
sahf
push
rcr
sbb
adc
stos
mov
out
xor
inc
mov
mov
mov
inc
xlat
sub
(bad)
int3
push
int
bound
pop
repz
and
ss
mov
cs
pushf
retf
daa
sbb
cmc
retf
inc
hlt
xor
jmp
mov
push
leave
cmp
ror
jle
xlat
mov
jbe
fdivr
mov
je
scas
jl
dec
in
cmp
ja
xor
les
pop
aaa
ss
sub
pusha
jbe
mov
dec
xchg
addr16
das
mov
xchg
test
nop
shl
pop
in
push
xchg
inc
jmp
repnz
cmp
inc
cmps
push
in
js
int3
mov
xor
js
sub
add
push
jg
xor
push
mov
push
ror
cwde
sub
into
mov
add
sub
ins
and
rcl
mov
stc
add
loop
adc
(bad)
(bad)
push
addr16
sub
dec
cmp
add
jns
(bad)
xlat
fisttp
and
lods
sbb
repz
cmc
sbb
stos
jb
and
xor
iret
sub
mov
movs
popf
pushf
xchg
or
inc
push
les
jge
push
sbb
jo
push
jecxz
call
inc
test
test
pop
fstp
mov
mov
test
ret
add
lods
push
loop
dec
or
pop
(bad)
mov
pop
int
sub
push
inc
xchg
xlat
push
mov
and
lahf
dec
push
inc
hlt
adc
aad
jo
(bad)
scas
jno
inc
fdivr
sub
or
cwde
inc
loop
sub
inc
ficom
cmp
push
mov
mov
shl
nop
hlt
jmp
jge
in
xchg
cmp
lock
bnd
jnp
dec
xor
sub
ss
pop
sub
inc
fucom
imul
out
das
xchg
jnp
(bad)
sbb
je
jnp
pop
mov
fsubrp
push
les
pop
pop
or
push
ror
jecxz
sub
adc
xchg
xchg
(bad)
out
call
and
mov
pusha
out
or
push
cwde
aad
inc
movs
outs
cs
add
dec
and
inc
lods
ret
ss
(bad)
arpl
sbb
push
test
ds
sbb
sub
(bad)
push
call
fistp
sahf
inc
push
dec
dec
jns
(bad)
adc
dec
js
scas
frstor
inc
xchg
mov
pop
dec
push
xchg
pop
mov
leave
div
xchg
ins
mov
icebp
mov
add
pop
(bad)
ss
scas
inc
sub
call
hlt
rcl
shl
gs
and
pop
(bad)
push
mov
mov
in
mov
cli
bnd
rcl
cmp
jo
jmp
test
lds
xchg
enter
stc
inc
test
mov
les
aam
ja
inc
cld
js
lahf
sbb
and
jle
adc
retf
jbe
push
push
dec
add
fsub
lods
fisttp
mov
or
xchg
mov
neg
cmp
inc
enter
bound
adc
jge
rcl
int
cmc
lds
mov
nop
ins
enter
gs
leave
aas
adc
pusha
push
in
xor
mov
ret
or
mov
push
mov
cmc
pop
and
xor
jle
popa
xor
cdq
arpl
or
dec
int
cmp
js
in
pop
or
popf
std
fcmovne
shr
mov
push
push
push
dec
test
std
push
dec
cmp
aad
jg
pop
scas
ja
adc
sbb
mov
mov
lea
out
into
cmp
repnz
movs
cmps
mov
mov
loopne
jb
pop
test
add
push
iret
add
pop
mov
mov
pop
jns
mov
pop
outs
sub
and
out
ret
imul
hlt
les
movs
push
fist
mov
adc
mov
rcl
stos
movs
pop
dec
les
jns
fcmovbe
jmp
and
pop
mov
sbb
ja
dec
adc
ja
shl
ja
mov
in
or
and
adc
lds
test
fidivr
xchg
(bad)
in
adc
push
ds
in
outs
test
repz
push
dec
and
push
lods
cs
and
aaa
ins
mov
mov
imul
gs
icebp
adc
push
shl
sub
xchg
in
shl
fwait
div
add
push
jne
and
lahf
sbb
mov
mov
xchg
scas
cli
inc
sbb
sub
pop
inc
xchg
jge
imul
mov
pop
or
push
add
outs
mov
push
dec
(bad)
sub
jp
mov
mov
stc
jns
aas
bound
mov
jecxz
cwde
sub
shr
setns
ja
call
(bad)
lods
ret
in
pop
push
es
cmp
shl
lahf
pop
fidivr
xlat
in
cmp
or
sar
ss
aam
adc
ss
jecxz
idiv
out
sbb
movs
pop
mov
mov
rcl
div
shl
inc
add
lods
adc
mov
push
jbe
xor
sti
dec
repz
jb
push
gs
sbb
rol
inc
dec
jle
fwait
pop
dec
pop
sbb
sub
pop
sub
lea
xor
rcl
jnp
leave
imul
imul
enter
cmp
ja
mov
add
lahf
cdq
loop
lods
iret
jp
ret
repnz
lods
lods
mov
push
nop
cs
inc
shl
jg
pop
lea
xchg
jo
jg
dec
je
pop
cmp
in
pop
out
mov
call
push
scas
rcr
and
fsub
inc
stos
pop
sahf
sbb
xor
fwait
retf
add
dec
dec
retf
push
pop
imul
les
int
fisubr
jecxz
xchg
sti
cwde
sub
sub
nop
fisub
jmp
sub
dec
jb
aas
add
mov
js
xor
rol
stos
pop
jecxz
inc
or
arpl
jae
xor
xchg
ss
je
in
shr
or
jge
add
sub
cmps
xchg
mov
data16
mov
loopne
jb
dec
push
fs
enter
lods
mov
xchg
addr16
shl
mov
call
xchg
dec
xchg
adc
dec
push
adc
test
cmc
(bad)
faddp
or
adc
sub
pop
imul
int3
add
jbe
(bad)
mov
(bad)
ins
inc
jb
or
pop
test
push
or
mov
movs
mov
xchg
cmc
(bad)
xchg
xor
dec
cmp
nop
xchg
adc
es
inc
add
and
adc
and
dec
dec
repnz
les
and
inc
dec
push
mov
in
ffree
fist
and
sub
and
jecxz
ror
jb
cmovs
test
test
or
inc
ror
jmp
push
mov
rcr
xchg
stos
push
into
and
xor
dec
mov
add
push
push
jg
les
daa
and
test
xor
stos
cmp
jno
or
or
int
lahf
outs
mov
mov
inc
nop
unpckhps
ja
or
cs
pop
fild
js
idiv
ret
(bad)
dec
sub
push
fstp
push
or
lock
add
push
add
scas
sub
mov
sub
dec
test
fbstp
(bad)
test
add
mov
ror
add
push
adc
push
test
aaa
adc
push
mov
ficomp
fdiv
ret
mov
sbb
or
xchg
push
and
movs
test
cmp
stos
cwde
shl
xchg
and
sbb
inc
dec
xor
pop
pop
jmp
xchg
bound
adc
cmc
cs
les
sub
imul
cwde
mov
mov
clc
add
adc
push
cld
inc
sub
or
xor
xchg
jae
or
jae
lods
imul
mov
push
sbb
test
inc
xchg
fnstsw
mov
dec
lods
jp
popa
mov
mov
out
pop
test
inc
jb
jae
rol
inc
imul
cdq
and
dec
pop
xchg
mov
cmc
std
mov
mov
mov
ror
lds
movs
(bad)
jecxz
sbb
popf
call
pop
pop
mov
mov
fcomp
xchg
mov
ins
jge
adc
xchg
lods
dec
in
fs
int
mov
jg
cmp
or
outs
xor
cmp
mov
jge
mov
in
and
lock
mov
or
test
je
js
icebp
push
js
push
addr16
adc
xor
xor
test
push
andnps
or
xbegin
mov
repz
mov
loopne
retf
inc
retf
sub
and
xchg
(bad)
jge
in
test
(bad)
das
mov
dec
bound
imul
clc
push
test
xor
xor
jb
xchg
xchg
dec
jle
sub
imul
sti
push
stos
dec
in
adc
mov
xor
pop
xchg
lods
cmp
test
aaa
sub
pop
xchg
(bad)
cmps
xor
movs
push
gs
ret
aas
not
jb
ss
call
sahf
push
in
xor
les
push
mov
mul
xchg
minps
adc
mov
xor
cs
dec
inc
add
push
scas
sbb
loope
xchg
outs
fmul
add
mov
out
and
dec
push
xor
jnp
push
add
jno
out
cmp
ins
add
(bad)
into
xchg
pop
pop
jg
jb
scas
loop
test
xchg
xchg
push
pop
cmp
in
ja
cmps
jnp
mov
inc
adc
sbb
adc
bound
pushf
jmp
sbb
xchg
outs
adc
adc
arpl
mov
ret
adc
mov
sbb
sbb
fisttp
pop
mov
xor
ja
aam
fisttp
ret
sbb
xlat
daa
xor
jp
sahf
outs
cli
cld
imul
fmul
cmp
xchg
jecxz
int
loop
inc
imul
sbb
scas
xor
enter
inc
jno
pop
inc
mov
rcr
and
and
fstp
add
dec
rol
loope
cmp
inc
dec
fdivr
jmp
sbb
jns
xor
jne
xor
lock
cli
or
push
push
scas
ja
rcr
(bad)
data16
(bad)
and
mov
mov
out
mov
jmp
(bad)
std
pop
dec
push
or
dec
jle
pop
(bad)
in
lea
pop
mov
xor
mov
mov
inc
aam
dec
push
mov
daa
pop
in
pop
add
es
retf
cmps
jb
aad
out
stos
adc
or
add
pop
jl
pop
shl
adc
fldcw
pop
lock
fild
sbb
imul
int3
retf
mov
dec
idiv
jge
push
cli
fmul
xor
jl
fmul
mov
mov
cmp
mul
aam
xchg
fld
imul
mov
cli
in
sahf
out
loopne
dec
ss
mov
sub
(bad)
mul
jecxz
pusha
into
adc
and
test
push
es
cmp
add
ret
outs
adc
inc
lods
mov
jbe
int
out
cld
hlt
jge
jae
xchg
add
or
adc
in
call
jnp
enter
and
imul
cmps
add
jmp
das
es
gs
mov
in
es
in
or
jno
and
mov
add
sub
addr16
adc
rcr
fdivr
je
inc
in
add
ret
rcr
loope
(bad)
fnstsw
mov
cwde
scas
jg
mov
push
pop
or
in
vmovdqa
enter
out
mov
movs
inc
jno
(bad)
jo
cmp
xchg
aas
popf
sub
arpl
stc
push
mov
adc
sub
dec
movs
xchg
cmovg
pop
ins
gs
loope
and
sub
cmp
push
lea
stc
ins
out
lock
lahf
aaa
arpl
std
(bad)
mov
out
and
dec
xchg
lods
xor
std
pushf
(bad)
adc
xchg
icebp
push
xchg
mov
mov
sub
and
dec
into
xchg
or
add
movs
push
iret
pop
aaa
push
add
out
jo
shr
xor
inc
and
sub
mov
sub
ins
(bad)
test
call
pusha
gs
mov
out
hlt
bound
movs
push
xchg
div
adc
mov
(bad)
cmp
cdq
frstor
arpl
sbb
pop
jo
fdivr
and
retf
xchg
in
sbb
mov
jp
cmc
pop
out
arpl
xor
cmps
movs
dec
pop
or
pop
test
sahf
or
dec
xor
aaa
jecxz
dec
outs
ins
mov
xor
jge
mov
add
pusha
sub
scas
int
int3
add
sahf
jne
leave
push
shr
jns
jmp
ja
retf
sbb
imul
sub
mov
and
inc
mov
cmp
mov
int
mov
cmps
jns
ret
inc
jns
push
jnp
pop
inc
gs
pop
mov
xchg
loopne
imul
xchg
xchg
clc
outs
sar
sub
jmp
inc
gs
xlat
cdq
mov
pop
adc
in
dec
movs
jl
bound
cmc
aad
fwait
icebp
sbb
inc
mov
add
cmps
aaa
inc
xchg
push
out
mul
ins
push
sbb
dec
ins
fnstcw
push
jmp
gs
scas
add
mov
adc
pushf
inc
xor
jno
mov
sub
xor
(bad)
mov
cmps
shl
or
sub
xchg
jno
jnp
and
push
addr16
mov
shl
sahf
and
dec
rcr
(bad)
stos
fistp
push
scas
int
or
sbb
lods
xchg
push
adc
mov
test
mov
idiv
aaa
fstp
aas
or
or
js
push
push
mov
push
add
hlt
mov
push
xchg
fdiv
pop
gs
aad
jnp
(bad)
jb
mov
ss
cli
cmps
adc
xor
push
sub
jl
adc
lea
mov
jnp
cwde
std
mov
ja
or
push
int3
aad
mov
andps
pop
test
retf
js
jno
jns
jnp
das
cmp
test
mov
loope
or
sbb
adc
xchg
(bad)
retf
add
mov
cmp
ins
pop
pop
jmp
jmp
ja
or
lock
mov
mov
fdiv
inc
cmps
dec
or
or
retf
(bad)
and
pop
scas
cdq
sub
fdiv
xor
mov
sbb
mov
xchg
xor
(bad)
(bad)
movs
rcl
out
dec
inc
pop
sar
daa
or
push
xchg
enter
not
add
cmp
in
pop
les
cld
das
push
xor
xchg
fcom
enter
jbe
retf
adc
out
pushf
aas
adc
jno
lahf
adc
add
xor
sub
fcom
mov
add
pop
add
jg
mov
lods
aam
lods
and
inc
push
in
mov
mov
fsubr
fs
mov
in
fbld
loopne
pusha
jge
jl
mov
jae
inc
mul
sub
pusha
cmp
cwde
lds
mov
cmp
bound
ja
push
mov
jne
or
dec
inc
dec
rol
xchg
out
mov
mov
sub
data16
mov
dec
in
mov
pusha
or
ds
pushf
adc
jecxz
mov
in
out
shl
jb
mov
lock
rcr
mov
add
pop
cmc
sbb
mov
sbb
icebp
std
(bad)
outs
std
jmp
push
jno
(bad)
pop
jmp
xchg
add
lea
rol
add
xchg
fwait
ret
adc
add
(bad)
fist
cmp
and
adc
inc
and
and
aaa
mov
or
call
fdiv
in
cmps
dec
popw
or
cli
cmp
cmc
mov
sti
mov
es
or
jbe
cmps
sub
lea
mov
fnstcw
std
icebp
ja
mov
leave
mov
mov
pop
std
call
adc
pop
mov
cmp
pop
add
ret
pusha
push
shl
stc
push
mov
out
dec
sar
sti
mov
mov
out
nop
rcl
pusha
outs
sub
add
push
lods
adc
pop
shl
ret
aaa
and
mov
xor
test
cmp
adc
je
jne
xlat
jl
dec
rcl
xor
sub
aam
mov
or
pop
mov
mov
mov
add
mov
adc
inc
push
pop
adc
mov
std
stos
sub
int
jno
retf
cmp
jle
iret
in
cmp
sub
movs
add
or
jp
dec
mov
shl
fcom
jo
adc
ss
addr16
mov
push
arpl
jl
pusha
inc
xor
push
outs
xor
(bad)
int3
sbb
cmp
mov
idiv
fwait
or
scas
xchg
test
add
add
sbb
out
(bad)
cs
out
ins
xchg
add
xor
lds
dec
dec
push
mov
xchg
loop
sbb
mov
mov
and
std
push
cmc
cmp
fcomp
ror
sbb
or
inc
cmps
aad
psrad
ds
fist
jp
xchg
push
xchg
push
pop
push
sbb
adc
pop
xchg
fwait
out
mov
pushf
mov
cmps
fdivr
ss
sub
mov
dec
cmps
adc
nop
scas
cli
pop
aas
pop
daa
adc
jnp
call
mov
aaa
add
adc
fidivr
inc
mov
es
(bad)
ds
adc
fcomp
sub
imul
adc
pop
aam
pop
mov
scas
add
xor
cmp
adc
mov
add
in
sbb
mov
cmp
imul
dec
sub
jecxz
mov
jnp
xor
(bad)
xor
out
btr
add
adc
mov
xchg
lods
(bad)
test
fidivr
in
adc
lock
std
dec
lods
dec
mov
pop
ret
and
jo
cmp
dec
nop
fcom
dec
pop
ss
iret
bound
inc
sahf
or
jmp
xor
test
loop
psubw
pop
repnz
cdq
mov
and
sub
popa
xchg
mov
push
(bad)
xlat
lahf
(bad)
fisubr
sub
cmps
mov
sahf
es
mov
cwde
rcr
xor
jmp
int3
fiadd
movs
xor
pushf
adc
lahf
mov
pop
test
leave
jmp
add
popf
cmp
adc
mov
adc
push
xor
leave
pop
jae
jbe
push
mov
dec
jns
aaa
cdq
inc
mov
sahf
and
test
mov
sub
bound
enter
cdq
stos
aad
inc
scas
mov
mov
mov
fcomp
stos
ja
push
push
imul
aaa
je
and
in
stos
xchg
lds
pop
in
inc
and
nop
jo
hlt
mov
mov
cmp
call
cld
sbb
and
stos
ss
sbb
sbb
cmc
push
sub
mov
(bad)
cs
xor
sti
xor
or
add
dec
lock
fsubr
mov
or
ret
xor
dec
mov
pop
xor
inc
xchg
push
adc
jg
cmp
std
and
cmp
jae
retf
fdivr
sub
push
fidiv
mov
mov
sbb
pop
sub
aas
adc
pop
(bad)
jnp
mov
adc
fidiv
xor
cli
mov
dec
or
mov
lods
mov
sbb
out
cmp
jg
dec
adc
or
out
movs
push
or
mov
outs
pusha
pop
in
pushf
mov
in
sbb
sbb
scas
int3
sahf
jp
ins
enter
mov
adc
and
push
int3
std
xor
ds
leave
adc
cmp
iret
dec
stos
push
add
test
rcl
rol
mov
cmp
je
movs
mov
ds
mov
es
mov
scas
jne
push
mov
test
and
arpl
arpl
fild
jecxz
mov
hlt
outs
sub
pop
nop
jnp
std
rcl
pop
pop
inc
dec
sbb
clc
inc
mov
mov
out
icebp
inc
test
jae
sar
sub
sbb
out
dec
movs
jmp
sub
rcl
in
inc
adc
bound
(bad)
imul
fisubr
pusha
push
sbb
cwde
push
inc
sub
jnp
leave
mov
sub
inc
mov
jl
jmp
mov
jl
add
(bad)
xchg
mov
dec
and
fs
fsub
mov
mov
popa
(bad)
push
jecxz
retf
xchg
les
adc
push
and
aad
inc
test
jl
data16
mov
cli
jae
into
shr
adc
xrelease
fdivr
cdq
add
cmp
adc
shl
stos
add
sub
cmp
icebp
push
pop
jecxz
push
mov
and
mov
xor
faddp
jl
jge
jno
fcomp
fimul
pusha
aas
jle
sub
inc
dec
jb
aam
push
ins
icebp
(bad)
loope
mov
sbb
pop
test
jmp
xor
mov
xor
pop
cmps
jl
addr16
push
test
pop
mov
cld
cmc
mov
stos
in
adc
cmp
fisttp
int3
mov
loop
dec
(bad)
cs
dec
and
mov
scas
xchg
and
add
lods
out
xchg
ins
mov
sti
jp
int3
ret
int
movs
jne
jmp
mov
(bad)
push
mov
and
push
pop
adc
retf
inc
xchg
push
outs
mov
ror
test
xchg
or
(bad)
ds
(bad)
test
(bad)
add
add
sub
lods
je
inc
jge
out
and
add
add
hlt
mov
dec
jne
add
clc
fstp
popa
jno
xchg
and
int
bound
push
adc
mov
in
hlt
rcr
push
inc
xchg
out
cdq
mov
pop
jl
jbe
(bad)
push
inc
mov
test
jno
push
mov
xor
scas
xchg
cmps
pop
loopne
pop
inc
(bad)
jnp
mov
mov
ds
inc
mov
dec
fist
sar
pop
or
sbb
push
inc
das
out
push
mov
dec
aas
scas
addr16
cld
cmp
jmp
cmp
js
test
dec
push
popa
adc
fcom
mov
push
sub
jg
fdiv
ins
lock
(bad)
xchg
loopne
(bad)
(bad)
es
xchg
cmps
imul
pop
xchg
push
mov
pop
ja
xor
test
mov
xor
mov
(bad)
jecxz
dec
mov
jb
sar
je
push
test
test
sbb
dec
xor
inc
retf
inc
in
dec
test
loopne
pushf
pop
rol
mov
(bad)
and
nop
lea
call
cmp
sub
sbb
iret
pop
push
dec
(bad)
(bad)
cmps
aaa
fsubr
cmp
arpl
mov
int3
rcl
mov
dec
jmp
dec
cmps
rcr
and
jbe
(bad)
test
enter
mov
outs
xchg
retw
retf
outs
mov
icebp
sub
xor
mov
mov
or
loop
movs
mov
mov
cmp
add
push
xchg
mov
pop
shl
jge
push
lods
fsub
ds
rol
cwde
test
cmp
mov
inc
cwde
scas
(bad)
in
(bad)
je
call
cmp
(bad)
outs
pop
dec
jo
retf
push
xor
pop
mov
push
fistp
dec
into
call
cmp
push
sub
cmp
mov
push
mov
sub
mov
jmp
push
and
repnz
inc
mov
jae
das
mov
cmp
mov
retf
rcr
ret
in
push
fisttp
add
cmp
dec
retf
push
dec
add
addr16
jp
jb
xchg
jo
ja
in
fnstenv
and
cmp
sbb
xor
dec
cmp
mov
and
push
mov
call
mov
pop
das
scas
jge
and
iret
aam
ret
stos
push
(bad)
lds
aad
xchg
sti
stos
xor
dec
sbb
cs
into
mov
inc
retf
scas
div
test
mov
ins
or
xor
outs
fiadd
jl
and
adc
xor
pop
maskmovq
idiv
mov
xor
sub
loope
dec
test
icebp
pop
mov
push
out
ret
idiv
ret
shl
sub
call
xchg
out
xor
(bad)
sbb
mov
inc
add
cmps
pop
sbb
gs
int3
jmp
push
adc
cmps
push
dec
dec
and
js
out
cli
cmp
leave
xchg
xor
fidivr
hlt
mov
cmps
and
xchg
xor
adc
hlt
aad
(bad)
stos
test
(bad)
sbb
sub
sub
fwait
inc
lea
aaa
div
call
adc
and
inc
jle
es
add
pop
and
call
out
inc
push
je
imul
mov
lahf
jmp
aad
int3
xchg
push
add
xor
add
ss
rcr
inc
loop
jp
sbb
pop
and
imul
scas
mov
xchg
fadd
aad
or
jl
mov
push
popa
push
retf
mov
cwde
sub
mov
movs
or
push
sar
cli
and
mov
pusha
ins
stos
xor
jge
xor
add
sbb
pop
cs
jg
jp
xchg
ja
sub
(bad)
pop
mov
(bad)
addr16
es
jl
lock
test
clc
jns
lds
cli
sbb
or
mov
adc
sbb
lods
imul
pop
call
mov
adc
movs
addr16
dec
fistp
mov
jns
pusha
sbb
or
xor
into
dec
in
mov
ret
xor
rcr
js
sbb
xlat
in
xor
repnz
call
shr
inc
xchg
adc
mov
mov
shr
jne
lds
or
cmp
xor
add
(bad)
ror
imul
stc
(bad)
mov
repz
test
(bad)
ss
out
in
popf
das
dec
pop
inc
adc
sub
mov
into
ret
aas
out
push
adc
xchg
mov
xchg
xchg
pop
call
pusha
dec
iret
pop
mov
mov
fsub
or
pop
out
jmp
push
mov
mov
push
inc
dec
cld
mov
loope
not
adc
aaa
(bad)
jmp
adc
lods
stc
sbb
push
in
and
xor
fnsave
adc
inc
xchg
xor
mov
fstp
xchg
aam
test
fld
in
test
jle
sbb
pusha
in
sbb
lock
sbb
push
inc
imul
xor
cwde
adc
dec
lods
inc
fwait
out
ins
imul
fimul
inc
rcl
(bad)
sub
inc
bound
out
mov
ss
mov
pop
jmp
shl
adc
cmc
popf
cld
pop
jae
pusha
push
or
adc
dec
cli
xchg
scas
and
and
xor
hlt
arpl
xchg
std
pop
adc
test
xor
bound
mov
pusha
repz
cmps
pop
gs
pop
bnd
jecxz
pop
or
in
adc
test
ds
fidiv
adc
call
or
aaa
mov
jno
lock
pop
adc
xchg
sub
stos
iret
inc
je
jge
add
or
pop
jb
sbb
jbe
xor
je
and
adc
mov
mov
xchg
sub
pop
ret
test
and
fdiv
sub
bnd
pop
dec
mov
enter
fst
push
lea
int3
cli
jb
cmp
imul
mov
dec
dec
dec
mov
pop
add
aad
sub
jbe
stc
jl
out
out
movs
shr
or
and
push
sahf
es
iret
loop
cmp
inc
outs
push
rol
dec
jmp
push
test
xchg
sbb
push
ret
fninit
aaa
xor
mov
pop
and
fsubr
inc
cmc
arpl
dec
fadd
jle
xor
dec
jmp
fsubp
mov
ins
jae
test
lds
lods
js
stos
and
inc
inc
addr16
arpl
in
stc
dec
adc
int3
mov
call
int3
jbe
lods
push
das
imul
push
xchg
outs
add
(bad)
call
dec
mov
gs
jo
out
lea
jmp
push
repnz
or
cs
cld
adc
addr16
fstp
mov
fld
loope
adc
scas
jmp
pop
mov
xchg
jb
rcl
fs
dec
loop
sbb
ja
(bad)
push
into
fdivr
cmp
inc
test
sahf
shl
sbb
and
and
call
dec
outs
sub
std
call
push
dec
mov
cdq
push
and
test
inc
mov
bound
add
iret
movs
pmaxub
es
push
into
cmp
cs
movs
jmp
in
adc
inc
out
cmp
mov
add
push
mov
div
and
cmp
xor
popa
cld
clc
add
test
xchg
and
pop
xlat
arpl
jns
mov
arpl
sub
popa
inc
sti
aaa
sbb
(bad)
push
test
fdiv
ins
ror
push
cmp
push
jbe
ins
ficomp
sub
cs
cmp
es
jl
retf
xchg
scas
lock
fwait
fwait
loope
(bad)
in
mov
repnz
mov
sub
fldcw
dec
ss
add
mov
ins
fidiv
test
pusha
pop
fsubp
repz
jecxz
stc
imul
inc
les
shr
scas
iret
xor
xor
shl
nop
aas
xor
mov
xor
push
mov
sub
ret
loopne
or
ja
mov
and
mov
mov
lea
test
jae
mov
outs
sub
mov
outs
jge
mov
or
jle
mov
jns
sub
inc
or
xchg
push
mul
add
mov
pop
int
sbb
jle
popf
into
xchg
sahf
jge
sbb
mov
mov
into
push
lahf
mov
fadd
mov
inc
mov
sub
cmp
xor
and
repz
shr
mov
iret
(bad)
mov
cdq
cli
dec
cmps
xlat
clc
shr
fsub
cmps
sbb
stos
sub
test
stc
ret
fldlg2
popf
sub
in
fsub
es
inc
jb
mov
pop
xchg
jle
loop
pop
lods
jne
pop
inc
fbstp
mov
dec
jge
push
adc
(bad)
pushf
lods
pop
ret
adc
xchg
stos
sbb
add
jne
pop
push
stos
ja
xor
add
push
push
lahf
cmps
test
out
dec
push
data16
(bad)
sbb
fld
les
dec
aas
shl
fadd
dec
stos
mov
jp
push
inc
inc
or
iret
mov
stos
out
aas
out
test
mov
ins
loop
imul
xchg
mov
xor
adc
inc
cmp
xchg
mov
jbe
pusha
movs
(bad)
jge
pushf
jb
mov
adc
add
pop
jnp
mov
add
(bad)
jmp
xor
dec
pop
gs
ret
and
cmp
jg
or
inc
mov
cli
xlat
and
int3
mov
pop
xor
ss
sub
cld
cmp
icebp
add
cmp
push
nop
pop
mov
and
in
js
call
out
add
int3
adc
xor
dec
outs
loope
rol
shl
or
mov
in
retf
mov
(bad)
pop
fwait
sub
and
dec
push
adc
repnz
or
aaa
fnsave
shl
or
adc
mov
jp
mov
hlt
lods
imul
pop
adc
scas
fbstp
and
int
stc
imul
push
ja
or
fist
xor
lock
mov
ja
test
jb
ins
hlt
jno
mov
mov
enter
in
fld
mov
push
mov
out
ins
cmp
xor
and
xor
jb
or
push
leave
jbe
mov
rcl
push
lea
push
jg
push
test
push
jg
(bad)
ins
dec
jnp
stos
aaa
and
sub
outs
test
sbb
xor
xchg
pushf
js
icebp
adc
or
ins
mov
fld
pop
jecxz
ret
nop
shl
hlt
push
cmps
jnp
adc
sbb
iret
sub
push
sbb
jmp
shld
inc
lock
cmp
lahf
fldenv
sub
jns
sub
pop
adc
mov
pop
and
or
(bad)
push
jne
in
(bad)
cmp
out
inc
push
xchg
push
fistp
pop
scas
scas
stos
xchg
mov
(bad)
jmp
jno
fadd
push
pop
mov
dec
or
jmp
mov
mov
xchg
push
xchg
mov
cmps
xchg
mov
cmps
sbb
pmaddwd
xchg
rcl
or
test
jmp
cmps
adc
fstp
and
shr
lock
outs
inc
imul
pop
cmc
loopne
into
push
clc
cmp
pop
in
aaa
pushf
push
stos
inc
jge
out
pushf
xor
sbb
lds
dec
xchg
lods
mov
les
jg
cdq
dec
call
sub
cmp
cmp
aad
push
test
out
or
adc
ja
cmp
pop
sub
inc
pusha
push
mov
lds
adc
popf
out
cmc
inc
pusha
mov
xlat
xchg
fdivr
aaa
sub
pop
push
adc
or
repnz
sub
mov
lock
pop
pop
fldcw
adc
aad
jnp
push
sub
scas
iret
lahf
lods
aam
jge
cmps
stc
mov
xor
jp
xlat
jge
jmp
inc
mov
ret
inc
cdq
call
stos
cmp
jno
jge
sbb
pop
js
hlt
and
push
repnz
push
push
xchg
outs
rol
sbb
es
sub
repnz
fadd
loopne
clc
mov
xchg
in
data16
mov
adc
lock
xchg
adc
push
stc
int3
xchg
(bad)
dec
retf
jnp
out
cld
pop
int
pop
scas
push
ins
popf
add
mov
(bad)
push
(bad)
or
pusha
jle
jns
and
loope
stos
cmps
sub
jg
inc
push
add
enter
cmp
outs
sub
mov
ror
inc
xchg
(bad)
push
imul
sub
jg
mov
retf
test
les
outs
ror
xor
neg
aas
test
xlat
pop
jae
adc
bound
push
bound
pop
xchg
dec
add
or
aad
jb
or
cmp
mov
jns
cmp
dec
jbe
inc
inc
pop
and
in
dec
scas
mov
shl
call
mov
inc
push
and
movs
iret
movs
jecxz
or
push
loope
xor
(bad)
dec
xchg
jp
jo
nop
xchg
movs
or
push
aas
add
es
mov
ins
inc
aad
popf
sti
(bad)
mov
inc
inc
xor
idiv
dec
xor
inc
bound
mov
(bad)
aam
out
push
std
add
lahf
pop
outs
clc
into
in
dec
xchg
push
inc
dec
xchg
add
dec
xchg
outs
cmp
sbb
inc
popf
pop
pop
popf
jmp
jmp
jne
xchg
sbb
fimul
pushf
sub
pop
mov
test
clc
ret
xor
inc
lock
push
fstp
shl
or
mov
gs
(bad)
(bad)
hlt
jecxz
or
cmp
leave
fcom
cmp
daa
push
xor
or
add
icebp
jae
jg
ins
pop
xchg
xchg
cmp
dec
jle
or
sti
mov
in
xor
mov
or
or
cmp
push
mov
nop
jg
imul
not
mov
cmp
and
pop
mov
fisttp
xor
push
je
ss
fprem
dec
adc
xchg
(bad)
or
xor
bound
fnstsw
aas
pop
mov
mov
cmc
jmp
mov
lods
push
call
cmps
mov
cmp
repz
mov
adc
sti
pop
retf
repz
cmp
mov
xor
test
pop
clc
add
inc
xchg
ja
mov
mov
outs
in
or
push
lock
jmp
ins
add
jl
add
inc
adc
or
pop
dec
and
pop
stos
sub
inc
adc
movs
xchg
mov
mov
retf
les
repnz
enter
test
sbb
movs
sahf
push
jl
enter
shr
iret
stc
lds
and
inc
pusha
stos
mov
ins
gs
aam
jno
inc
pop
pop
retf
sbb
das
in
retf
fnstsw
jl
inc
pop
and
stos
aas
das
cmp
nop
cmc
add
xchg
fsubr
jmp
rcr
sub
jle
fdiv
(bad)
std
leave
mov
scas
push
push
inc
xor
push
inc
movs
xor
pop
fptan
xor
pop
mov
inc
mov
ret
inc
clc
lods
rcr
jae
xor
dec
mov
jne
pushf
mov
mov
xchg
xchg
mov
mov
shl
jecxz
pop
jno
jecxz
loop
movs
mov
sbb
add
and
xchg
push
call
retf
int3
ss
or
add
in
adc
push
ret
jnp
dec
ud0
test
sub
inc
add
loope
pop
outs
lahf
mov
mov
sbb
js
adc
movs
mov
pop
shl
cdq
cwde
pusha
cmp
mov
xchg
ficomp
loop
scas
pop
sbb
inc
xor
jbe
push
bound
lea
inc
in
dec
sub
sub
sub
mov
in
jne
movs
jbe
and
cmps
push
jmp
imul
add
or
nop
data16
sub
(bad)
jp
push
pop
out
jmp
cld
retf
pop
jmp
mov
fwait
mov
ins
iret
aad
push
cdq
call
outs
ja
mov
push
repz
cmp
cmp
add
push
adc
call
pop
test
mov
jnp
aad
(bad)
jbe
daa
repnz
popa
pop
add
and
cmp
jle
outs
in
inc
ins
adc
or
xlat
dec
dec
inc
das
mov
mov
inc
jg
retf
xor
pop
mov
xor
or
fistp
jmp
mov
cmc
cmc
out
sbb
fld
mov
test
push
push
push
addr16
rcr
mov
in
jns
pop
add
rol
outs
push
test
mov
mov
enter
sbb
mov
imul
add
sbb
cmp
pop
fist
dec
sub
pop
sbb
les
inc
push
jne
pop
gs
and
sti
xchg
cmp
enter
out
mov
inc
push
push
xor
mov
jnp
xor
cli
fsubr
mov
xchg
pop
in
push
cmc
(bad)
mov
sub
pop
mov
shl
cmp
xchg
push
mov
inc
push
sbb
repz
clc
adc
test
js
loopne
add
add
sub
into
(bad)
adc
mov
repnz
mov
and
cmc
or
sbb
aad
jp
xchg
out
mov
pop
jl
xchg
inc
fcom
or
push
inc
inc
mov
xchg
push
xor
or
outs
out
jno
inc
xor
imul
xchg
addr16
clc
aam
adc
mov
adc
xchg
pop
mov
xor
or
out
std
cmp
iret
aad
push
cmps
xchg
push
mov
lea
or
fisubr
add
or
pop
mov
pop
arpl
fs
idiv
(bad)
xchg
into
in
retf
mul
inc
or
mov
xor
xor
mov
cs
fs
stos
sub
data16
retf
xor
push
outs
lock
jmp
xchg
jge
dec
cmc
jecxz
add
xchg
shl
sar
in
jl
mov
cmp
jno
test
inc
dec
and
cmp
pusha
sahf
test
jns
outs
mov
dec
cmp
mov
inc
dec
and
inc
loop
cmp
push
addr16
(bad)
std
push
lahf
(bad)
idiv
sub
push
lahf
fld
sub
add
nop
and
loopne
mov
add
push
dec
add
repz
les
xchg
inc
sbb
movs
pop
sub
mov
lds
pop
out
cmp
adc
jmp
aad
loop
scas
jne
(bad)
fcomip
fldcw
push
movs
adc
dec
sti
sub
dec
(bad)
xor
or
into
sbb
bound
adc
mov
or
mov
ror
xchg
cdq
bound
mov
aaa
xor
cmps
mov
mov
xchg
jg
sbb
imul
call
pop
nop
adc
daa
aaa
ins
or
outs
out
add
mov
jmp
cmp
sbb
and
dec
xchg
aas
cmp
jge
bound
pop
xchg
cmp
cwde
scas
mov
js
mov
sbb
pop
cmps
cdq
fldenv
pop
test
push
pushf
xor
out
sbb
and
push
in
inc
mov
add
dec
sbb
out
pop
sbb
pusha
imul
cld
push
int
or
rol
pop
lea
add
push
test
jp
stc
sbb
xchg
dec
shl
nop
mov
or
call
mov
add
aad
inc
loopne
test
adc
jbe
dec
rol
imul
jle
ud0
xchg
pop
push
cmp
sub
adc
enter
in
imul
push
fdivr
les
je
jne
sbb
lods
icebp
add
ss
mov
(bad)
movnti
retf
sahf
xchg
pop
lock
loope
mov
test
mov
and
mov
ds
xchg
and
mov
ret
in
das
test
and
mov
or
adc
sub
xor
jnp
cmp
ds
dec
dec
and
inc
pop
daa
mov
xchg
add
fisubr
mov
mov
pop
ret
loop
add
(bad)
pop
shl
stc
test
jns
cmp
aas
fwait
jae
popf
aam
sbb
xchg
or
jnp
cmp
or
xchg
out
sub
xor
fist
and
sub
dec
cwde
cmc
jns
and
push
es
ffreep
test
mov
inc
outs
aaa
in
retf
sub
adc
es
out
xor
sub
mov
ss
cli
call
aad
outs
and
mov
cld
ins
sbb
jecxz
mov
or
jns
mov
jns
jae
adc
les
sbb
gs
or
in
sar
adc
fsubr
fild
inc
add
push
xchg
add
jl
add
pop
cmp
std
repz
pop
sub
push
push
xchg
jo
adc
lds
movs
lea
or
scas
loope
rol
xchg
test
dec
ret
cmp
inc
vpaddd
mov
scas
or
icebp
pop
lods
into
ins
lds
cli
jno
repz
call
xor
cli
shl
mov
dec
inc
xchg
jl
call
in
lock
into
inc
mov
mov
or
push
add
cmp
rol
scas
push
rcr
mov
ins
mov
ins
loope
lds
fs
lea
div
sub
xchg
fnsave
jmp
jnp
pop
dec
sar
jg
inc
jmp
sahf
aam
mov
fmul
test
std
or
icebp
into
cmp
cmps
xchg
mov
int3
sti
add
test
jg
test
(bad)
dec
mov
cli
inc
cmc
dec
cs
mov
dec
fs
out
mov
adc
add
out
outs
cmp
sub
and
(bad)
dec
ror
sar
fcomp
mov
mov
mov
mov
sbb
lea
popf
mov
scas
jnp
jl
xor
in
sub
or
ret
movs
int
in
or
shl
fs
stos
(bad)
xor
cmps
mov
sti
jne
mov
mov
iret
inc
sub
stc
outs
push
pop
pushf
inc
xchg
cs
enter
cdq
xchg
jmp
rol
sbb
cmc
mov
call
mov
inc
(bad)
iret
cmps
sbb
jle
inc
loop
in
in
inc
mov
push
jg
mov
adc
or
icebp
sahf
mov
int3
outs
or
mov
cmp
mov
add
sub
jne
mov
xchg
xchg
jge
scas
enter
mov
leave
scas
(bad)
adc
inc
stc
cmps
jae
pop
std
jge
push
daa
push
dec
sar
arpl
xor
xchg
pushf
jno
pop
mov
push
mov
xchg
push
xchg
inc
inc
les
jo
xchg
pop
fsubr
mov
inc
fistp
mov
aam
loop
mov
scas
bound
fcmovne
pop
cwde
retf
push
call
ja
outs
xor
jmp
push
sub
repz
(bad)
pop
mov
cmp
in
mov
xchg
lods
xlat
dec
pushf
dec
mov
mov
js
sbb
scas
mov
out
ins
scas
out
dec
xor
cmp
repz
push
mov
test
sub
sub
pop
pop
jmp
in
xor
scas
in
mov
lock
cmp
jge
pop
jmp
test
cmp
std
cmp
popf
pop
xor
cmp
cmp
pop
enter
add
fs
out
inc
jnp
jle
fdiv
arpl
pushf
fldenv
iret
imul
(bad)
jb
add
les
fdivrp
into
cdq
mov
jmp
mov
push
push
ins
push
sbb
in
xchg
pop
mov
jmp
rcl
mov
outs
(bad)
out
fdiv
jns
movs
fidiv
ins
cli
or
xchg
mov
(bad)
cmp
add
dec
fs
push
jl
push
(bad)
pop
xor
mov
shl
ss
add
lock
out
mov
push
stos
rol
jmp
(bad)
test
mov
test
movhps
xor
sbb
retf
in
mov
jmp
xor
push
jne
mov
popa
loopne
push
stos
dec
sbb
fld
push
mov
xchg
adc
cmp
mov
mov
nop
outs
movs
add
dec
xchg
mov
mov
out
push
add
lock
xchg
jae
in
vmwrite
or
add
mov
int3
popf
jmp
cmp
dec
push
xor
mov
jecxz
mov
es
es
dec
mov
sub
push
repz
lods
daa
fadd
iret
push
aam
jge
mov
loopne
out
adc
sub
inc
mov
lods
push
push
retf
outs
mov
shl
imul
or
stos
imul
xor
ret
mov
arpl
push
lods
retf
ror
xlat
popf
fwait
scas
mov
mov
push
hlt
cmp
push
sbb
out
xor
xor
imul
sub
cmps
push
inc
ror
stc
jnp
mov
(bad)
dec
cmp
mov
or
jmp
ret
addr16
(bad)
mov
xor
add
test
push
inc
or
in
or
sbb
aaa
cs
sahf
(bad)
icebp
mov
pop
push
mov
and
inc
enter
and
rcl
shl
lahf
mov
cmp
fpatan
jl
and
out
dec
in
inc
pop
mov
sub
(bad)
pop
in
cmpxchg
jno
xchg
sbb
hlt
push
sbb
adc
mov
lahf
(bad)
ins
cmp
push
mov
fstp
sub
lea
or
dec
sub
sbb
outs
pop
jl
mov
or
xchg
test
pop
or
mov
mov
repz
sub
sbb
add
ja
je
ja
(bad)
pop
xchg
push
xor
mov
inc
xchg
mov
test
or
xor
cmp
pop
neg
mov
mov
arpl
inc
mov
xchg
pop
mov
stc
inc
sub
jg
scas
std
das
frstor
xor
(bad)
push
inc
adc
pop
mov
cld
mov
mov
mov
(bad)
or
cs
or
lock
(bad)
jg
ror
sub
inc
jae
add
iret
outs
call
es
sbb
fisub
scas
mov
xor
xchg
mov
add
push
or
pop
jo
cwde
sub
or
jp
leave
(bad)
cmc
sbb
pop
mov
mov
imul
outs
xor
xchg
leave
cmp
cmps
test
add
mov
aam
scas
enter
popa
ret
ret
sbb
pop
cs
or
mov
inc
scas
push
lods
call
and
daa
ja
sbb
or
add
mov
movs
jge
stos
sub
xor
pop
push
sbb
fs
mov
out
into
xchg
scas
stos
sub
adc
push
in
cli
outs
pop
mov
popf
fcom
into
cmp
pop
jns
jmp
pop
pop
mov
loop
adc
xor
pop
ret
sub
aad
xchg
(bad)
jmp
mov
stc
mov
add
fbstp
cmp
add
inc
dec
and
dec
xchg
sub
jge
xor
cld
lock
pop
mov
inc
mov
mov
or
push
fwait
mov
xlat
dec
leave
aad
ss
aad
sar
in
dec
jecxz
jmp
xchg
jne
fwait
ja
imul
lods
mov
fidivr
sbb
retf
xor
mov
scas
movs
mov
add
arpl
mov
lods
ret
xchg
add
pop
popf
retf
pop
jl
inc
fcomi
scas
mov
popa
jge
ret
iret
mov
pushf
jbe
jno
movs
sub
imul
jecxz
jecxz
repz
and
fild
mov
stos
rcr
addr16
bound
xchg
dec
xor
xchg
lahf
(bad)
push
pop
jmp
jle
mov
xchg
jecxz
sub
sbb
mov
xlat
push
pop
imul
into
xchg
or
pop
adc
mov
jo
clc
dec
dec
xchg
push
ror
pop
test
pop
sub
ss
fnstenv
dec
loopne
adc
fidiv
xchg
sbb
ins
rcr
dec
jb
ret
sub
dec
cmp
ins
or
sub
jmp
or
clc
mov
mov
(bad)
cmp
aad
pushf
adc
mov
push
lahf
push
adc
push
xor
test
sti
mov
in
bound
jns
cmps
jmp
mov
jp
rcr
movs
adc
xchg
mov
dec
scas
adc
jmp
cdq
sti
xor
mov
fs
push
shl
sbb
pop
mov
inc
scas
lahf
ja
sub
or
ds
sub
std
add
lods
call
mul
aad
add
fst
pop
lods
cs
repz
xor
imul
cmp
xor
pop
idiv
mov
je
jne
pop
xor
cmp
scas
outs
cs
retf
xor
mov
int3
inc
(bad)
loopne
push
or
mov
gs
add
pop
stc
nop
adc
icebp
add
add
ins
shr
shl
(bad)
aaa
loope
(bad)
scas
mov
and
jo
sbb
data16
idiv
bound
hlt
mov
sub
push
es
pop
je
sub
loope
add
loopne
bound
ds
inc
jecxz
and
bound
div
scas
mov
arpl
xor
or
ds
pop
mov
or
fwait
jge
popf
into
inc
jmp
arpl
pop
ficom
mov
lock
ficomp
std
aaa
mov
icebp
mov
fcmove
or
pop
into
add
in
jmp
add
mov
sub
scas
ror
outs
push
retf
push
jmp
aaa
inc
punpcklbw
les
icebp
inc
ret
jmp
mov
mov
adc
jge
or
mov
movs
add
adc
cmp
xlat
nop
das
inc
fisub
out
adc
(bad)
mov
jg
data16
mov
fiadd
(bad)
xchg
call
std
mov
jle
icebp
mov
add
jne
mov
mov
mov
jl
in
repz
mov
repnz
mov
inc
popa
fcomp
dec
jbe
int
ins
hlt
sbb
call
inc
sub
jne
cmps
vcmpss
xor
leave
lock
(bad)
movs
push
out
adc
mov
sbb
sbb
mov
mov
push
xchg
xor
lods
push
pushf
xor
lods
out
push
shl
xchg
or
pop
loopne
adc
into
ret
fnstcw
fisttp
mov
pop
or
sbb
mov
mov
ins
mov
stos
in
nop
cmp
sbb
push
mov
jmp
fcom
fmul
fwait
imul
pop
rep
xor
mov
inc
mov
bound
add
outs
and
mov
(bad)
push
mov
xchg
ins
popf
jmp
push
loop
inc
std
hlt
pop
inc
fstp
mov
mov
aam
loop
push
jg
cmp
adc
add
pop
int3
ins
sbb
xchg
repnz
int3
mov
lea
call
add
clc
(bad)
adc
push
fistp
or
data16
es
or
or
cmp
push
jnp
inc
cld
xor
cmp
mov
mov
xor
ss
popf
sub
xchg
stos
and
jmp
push
aaa
push
movs
fidiv
xchg
pop
add
pop
push
dec
loopne
das
imul
add
daa
xlat
push
inc
pop
fadd
arpl
dec
stos
repz
in
fcom
jle
arpl
sub
lock
rol
outs
(bad)
push
clc
sub
in
aaa
inc
data16
mov
add
fimul
sbb
fcomi
in
stc
push
(bad)
jbe
xchg
icebp
and
ja
jnp
add
outs
out
stos
or
add
cmp
dec
test
pop
jl
push
inc
xchg
cmp
push
mov
out
mov
adc
icebp
fst
sahf
hlt
xchg
pop
pop
sub
or
lods
mov
out
mov
mov
adc
pop
or
pop
jb
add
sbb
repnz
inc
retf
lods
(bad)
jne
shr
aam
cmps
mul
aad
iret
cdq
retf
out
mov
repnz
addr16
sub
cld
mov
pop
inc
xchg
test
ja
add
or
lahf
add
pop
sbb
mov
mov
in
fistp
movs
cmc
cmps
push
xchg
cs
xchg
rol
sub
rcl
jmp
(bad)
ror
push
xchg
inc
push
sbb
mov
and
stos
add
sub
sub
pop
xchg
mov
xchg
dec
xchg
div
mov
add
xor
sti
ja
sbb
pop
push
add
repnz
or
jo
loope
inc
xor
dec
push
repnz
out
test
pop
fmul
jns
jg
or
nop
test
inc
mov
pop
int
jne
xchg
ja
cmp
mov
push
pop
xchg
sbb
inc
test
adc
(bad)
cmp
sub
scas
sbb
pop
mov
repnz
pop
sbb
add
(bad)
fbld
inc
inc
xor
push
(bad)
stc
(bad)
adc
in
or
adc
les
jecxz
jg
dec
or
imul
xor
xlat
lock
pop
das
clc
xor
mov
mov
xchg
adc
movs
and
int
jge
push
sbb
push
or
stos
xor
mov
sbb
sbb
cmp
cmp
jnp
pop
gs
push
pop
mov
push
dec
jmp
(bad)
xlat
sbb
push
arpl
and
push
aas
or
xor
cmp
jo
mov
jmp
adc
xchg
mov
movs
pop
cmps
ds
(bad)
aam
or
inc
mov
mov
jo
add
cmc
xchg
mov
imul
cmp
push
out
out
data16
cld
aad
jmp
cmp
pop
cmps
ror
mov
ds
or
ret
out
push
pop
fist
inc
loope
lds
mov
and
inc
cmp
out
mov
clc
dec
sub
div
sub
push
das
mov
sub
cmp
jecxz
jecxz
ins
push
je
cmp
movs
cmc
pop
pusha
cli
inc
or
xor
push
mov
pop
shr
jo
or
or
enter
out
cmp
ficomp
data16
dec
mov
daa
(bad)
shl
shl
mov
cmps
lods
inc
dec
leave
xchg
pop
ds
push
retf
and
xchg
jmp
dec
xor
das
popa
(bad)
mov
sub
fsub
retf
add
lea
fisubr
xchg
(bad)
popa
cmp
rcl
mov
test
pushf
dec
push
push
pop
jae
movs
imul
fcomip
jl
ret
lds
or
jmp
jne
mov
aad
sti
sbb
enter
xor
push
pop
aas
or
loopne
out
cmp
mov
jmp
cli
xor
mov
cli
push
jmp
fwait
mov
xor
dec
sub
push
stos
lea
std
fisubr
lods
lahf
bound
mov
dec
repz
cmps
es
add
add
out
mov
xchg
inc
jmp
pusha
sub
in
rcl
jne
fsubr
adc
jo
loopne
push
xchg
cdq
or
mov
arpl
mov
dec
cmps
mov
test
loope
mov
inc
mov
mov
jno
outs
or
fisub
pop
and
shl
test
icebp
sbb
or
cmps
call
cmps
and
pop
pop
adc
enter
imul
rol
xchg
dec
xchg
fcom
in
es
cli
dec
or
xor
(bad)
test
push
inc
outs
adc
repz
xchg
shl
pop
test
adc
int
add
jp
mov
xor
pop
push
jnp
(bad)
call
jle
pop
icebp
cmp
retf
inc
xchg
jecxz
xor
loop
aas
ja
add
ror
mov
imul
xchg
cmc
fbstp
in
dec
push
xor
mov
inc
pop
repnz
sub
and
loop
dec
addr16
and
pusha
and
sti
sbb
cmp
push
and
clc
dec
icebp
mov
xor
xchg
add
mov
jnp
cmps
xchg
test
jecxz
xor
outs
aad
iret
and
retf
inc
dec
dec
sbb
int3
nop
in
mov
adc
jecxz
jmp
in
xlat
int3
dec
loopne
and
popa
jno
sbb
dec
repnz
xchg
push
ss
or
push
mov
loop
aad
(bad)
push
mov
xor
adc
adc
retf
add
(bad)
push
adc
or
repz
jne
xor
dec
imul
add
push
in
stos
mov
enter
push
push
(bad)
or
mov
inc
xor
pop
fsub
std
sub
clc
sahf
and
ds
and
ror
xchg
ds
mov
clc
dec
shl
jnp
inc
xchg
dec
rcl
or
(bad)
in
xor
test
jmp
loope
std
aas
in
fmul
mov
or
cmp
add
stos
ret
loope
mov
mov
pop
scas
xchg
push
clc
mov
es
sbb
push
mov
jg
dec
and
enter
jl
jmp
xchg
aad
adc
lods
and
xor
pop
lock
mov
retf
mov
push
out
test
pop
fmul
mov
fist
xor
sahf
in
adc
inc
inc
ss
add
call
mov
pushf
in
inc
mov
sub
lahf
pop
std
gs
loop
js
cmp
xor
and
call
popa
pop
fucomi
stc
cdq
out
fidivr
pop
test
fisttp
and
addr16
mov
test
jl
addr16
or
pop
sti
mov
sbb
test
das
mov
jmp
xchg
jge
push
mov
mov
xchg
sub
xchg
shl
adc
hlt
enter
dec
jne
adc
sar
push
xchg
push
imul
jb
movs
cdq
sahf
mov
enter
fs
or
xchg
and
jmp
arpl
and
push
ins
inc
push
loop
cmp
dec
xchg
xchg
call
sub
mov
adc
jecxz
add
pop
test
dec
or
movs
inc
data16
call
mov
aam
lea
cmp
fs
xlat
clc
mov
ins
dec
pop
into
pop
fidivr
movs
mov
and
inc
pop
push
imul
mov
loopne
lds
enter
aam
scas
je
ret
fisub
sbb
popf
add
div
arpl
xor
(bad)
outs
ret
fstp
out
les
pop
add
push
push
nop
inc
pop
fld
int3
sbb
mov
or
lds
jmp
imul
call
(bad)
inc
pop
push
jmp
and
inc
loop
xchg
cmp
add
pushf
clc
cmp
cli
(bad)
fst
cwde
sti
xchg
shr
sahf
inc
jge
mov
adc
rol
cli
sbb
dec
out
stos
inc
pop
fdivr
mov
xchg
ret
idiv
mov
out
sub
dec
fs
pop
add
jge
mov
out
or
bound
aad
jae
cs
pop
xlat
cmp
cwde
arpl
cwde
inc
ss
pop
push
inc
stos
in
inc
clc
jbe
movs
test
mov
loope
shl
mov
dec
xor
sbb
inc
cmc
xchg
fsubp
mov
mov
mov
inc
cmp
arpl
stc
xchg
into
sbb
stc
rcl
and
loope
xchg
(bad)
sub
sbb
sahf
dec
nop
xchg
inc
es
sbb
adc
mov
add
cmp
sub
stos
scas
and
push
in
(bad)
xor
int3
jne
icebp
(bad)
stos
cmp
(bad)
xchg
rcl
xor
loop
jbe
or
mov
mov
mov
fstp
xor
loope
retf
pop
ss
adc
push
call
movs
test
xchg
push
fstp
aad
fstp
mov
xchg
bound
mov
add
call
xor
sti
pop
and
lods
mov
add
inc
(bad)
cld
cmp
sub
xchg
jb
inc
stc
adc
inc
jns
add
mov
push
dec
pop
(bad)
aas
or
fadd
sbb
mov
jge
add
sub
stos
into
inc
pop
(bad)
ins
mov
in
shl
or
cmc
aas
xor
sbb
jo
mov
push
mov
or
dec
arpl
push
jne
cmc
outs
pop
mov
push
xchg
retf
outs
push
out
push
pop
adc
mov
dec
hlt
out
cmp
iret
dec
clc
mov
xchg
pop
and
ds
leave
adc
lods
jae
in
test
jge
inc
js
out
nop
je
dec
mov
scas
jbe
addr16
cmp
fwait
pop
movs
aad
cdq
sub
shl
sub
jns
pop
test
inc
mov
mov
inc
pop
cmps
int3
mov
add
test
mov
xchg
cwde
push
add
add
loopne
xor
hlt
sahf
std
imul
mov
call
mov
inc
stc
add
cmc
cmp
(bad)
jmp
pusha
cmp
inc
xchg
loope
loope
sub
and
bswap
iret
fist
pop
neg
fsub
outs
lahf
div
sub
iret
xchg
sbb
in
sbb
sbb
xchg
dec
sub
jae
iret
pop
mov
(bad)
push
into
adc
or
mov
sar
xchg
jo
shr
pop
aad
or
call
inc
mov
pop
jmp
fstp
loope
or
(bad)
(bad)
sbb
fcmove
in
push
lods
and
in
mov
mov
lods
xor
push
push
sbb
ins
imul
pushf
adc
mov
jmp
call
or
out
mov
dec
and
add
outs
and
mov
imul
iret
fwait
imul
in
scas
cmp
lahf
push
mov
jno
lock
pop
sti
ins
ins
and
cmp
stc
mov
dec
inc
test
xchg
lods
add
fs
scas
add
aad
mov
(bad)
mov
sbb
pop
or
bound
cmp
and
add
sub
ror
ret
push
test
dec
sub
out
mov
cmp
(bad)
imul
mov
daa
add
repz
add
mov
repnz
cmp
sub
pop
push
sub
jg
inc
ins
movs
and
pop
cmc
lods
outs
push
jmp
mov
mov
rcl
push
jmp
mov
pop
push
outs
popf
or
inc
push
shr
dec
dec
(bad)
fdivrp
cmp
imul
das
push
push
sub
loope
or
data16
mov
js
mov
ja
rol
dec
and
outs
daa
xchg
(bad)
cli
scas
out
and
jne
ja
sub
imul
in
js
cwde
stc
out
xor
addr16
adc
call
mov
jno
cmps
stos
imul
arpl
adc
xchg
dec
mov
adc
movs
fwait
pop
outs
fisubr
jmp
sbb
int3
es
mov
push
adc
and
ja
cmp
bound
xchg
adc
retf
test
and
pop
icebp
fdivr
sub
mov
or
in
loop
cli
dec
push
push
add
sub
imul
xchg
dec
aam
pop
cmps
into
inc
cmp
xchg
add
rol
cmp
mov
pushf
movs
pop
call
test
push
mov
mov
or
dec
fdivr
mov
jns
test
mov
fld
retf
mov
cmp
inc
jmp
sbb
push
jb
movs
sti
mov
outs
mov
push
fadd
mov
dec
add
or
cli
pop
aaa
imul
retf
(bad)
in
mov
push
or
(bad)
push
fld
mov
or
fst
pop
into
repnz
adc
jae
fld
sub
cld
dec
and
push
outs
cmp
pop
fdivr
mov
dec
cmps
pop
xchg
push
das
out
sub
and
stc
cli
out
out
pusha
dec
jbe
and
imul
sti
lock
les
sbb
fxch
pop
call
mov
mov
std
or
add
pop
(bad)
repz
pop
pop
push
push
sub
(bad)
pop
inc
cmp
(bad)
push
add
pop
adc
jle
loope
sbb
add
movs
aaa
sub
out
and
jmp
push
or
add
add
outs
push
sub
daa
add
gs
pop
push
dec
xor
push
cwde
scas
icebp
xlat
mov
add
xchg
xchg
nop
rcl
enter
div
test
lea
mov
mov
cld
(bad)
fldln2
cmp
mov
inc
out
mov
fistp
mov
inc
or
(bad)
cmp
mov
xor
div
push
cmp
lock
cmp
or
sub
int
addr16
js
sub
mov
inc
add
(bad)
mov
xor
push
repz
fadd
push
sbb
or
mov
sbb
popa
xlat
pop
lods
and
ror
sub
or
call
mov
pop
inc
ins
xor
inc
ins
stc
sub
bts
mov
test
and
cmps
into
push
lahf
push
inc
stos
mov
(bad)
js
or
sub
add
loopne
lock
and
sub
stos
call
lock
mov
in
xor
jg
push
jne
ret
xor
dec
sub
mov
push
cmps
jge
mov
jnp
mov
int3
push
leave
sbb
(bad)
(bad)
sub
stc
dec
sbb
loopne
lods
ss
ja
retf
pop
comiss
je
ret
sub
retf
pop
inc
inc
cmp
inc
hlt
inc
mov
mov
jns
(bad)
or
ffree
or
pushf
mov
jmp
xor
adc
push
add
lock
sub
dec
fimul
and
add
xor
lods
aas
and
mov
comiss
jg
pusha
adc
mov
inc
xchg
mov
mov
out
mov
loop
das
inc
inc
gs
xchg
pop
aaa
cmps
cmp
pop
cmp
outs
pop
jmp
mov
ror
sub
xchg
adc
pop
and
cld
mov
xchg
enter
fisub
daa
push
dec
mov
sbb
xor
add
ret
xor
sbb
lods
inc
xchg
lahf
push
xchg
or
push
stos
dec
inc
cmp
cmp
clc
aam
movs
adc
ds
loopne
shl
stos
mov
std
imul
into
xchg
out
fcomp
aas
mov
jmp
push
lods
es
inc
xchg
sahf
push
xchg
push
out
cmp
out
leave
or
xor
outs
push
and
dec
cld
or
or
mov
retf
pop
mov
aam
lods
cmp
mov
cmp
and
cmp
jae
xchg
xor
adc
(bad)
add
pop
adc
popf
cmp
dec
in
xchg
daa
das
add
popa
in
xchg
push
jecxz
xchg
xchg
int3
mov
jne
dec
std
aad
pop
add
sbb
adc
lock
mov
mov
or
cld
xchg
mov
inc
mov
rcl
fmul
push
rcr
test
mov
sub
inc
outs
jle
jmp
add
and
or
outs
std
inc
mov
loope
cmp
out
xchg
sbb
in
cmps
ins
loope
xor
gs
in
sbb
or
adc
imul
arpl
cmp
rol
dec
mov
sahf
jp
out
push
mov
pop
fdiv
add
ss
call
cld
loope
mov
xchg
xchg
pusha
and
jecxz
stos
cmc
jl
adc
or
bound
lea
push
sbb
push
inc
cmp
aad
int3
add
mov
jbe
scas
cmp
ret
sar
push
shl
fs
rcl
cmps
jp
jp
pusha
push
retf
into
or
ds
fidivr
jecxz
cmp
xchg
daa
test
pop
xchg
pop
inc
pop
or
or
call
xor
inc
mov
adc
int
out
pushf
add
fist
rcr
scas
xor
push
repnz
dec
mov
xor
leave
out
(bad)
xor
sbb
pop
mov
xchg
inc
xchg
jl
xchg
les
mov
js
enter
(bad)
fnsave
xlat
and
mov
call
ret
sbb
inc
cld
mov
sbb
jecxz
cwde
add
mov
and
or
jmp
mov
scas
inc
inc
add
lea
outs
cmp
test
ins
fild
xchg
dec
sub
adc
mov
call
mov
movs
data16
xor
(bad)
jno
xor
xor
lea
dec
add
test
inc
sub
jnp
push
pop
pushf
lock
ficomp
lock
stos
cmp
adc
xor
mov
sbb
add
ss
pop
dec
jns
and
div
push
jne
lahf
cmp
outs
cmc
shl
jmp
jo
repz
mov
mov
dec
(bad)
cmc
inc
out
jnp
ds
push
fbstp
mov
scas
jno
adc
lock
or
test
in
sbb
cs
sbb
sbb
arpl
into
sub
push
mov
xchg
test
mov
xchg
pop
sub
push
fst
ret
ret
addr16
jmp
test
cs
imul
mov
scas
imul
add
jo
pop
sar
sub
cld
jmp
aad
xor
add
call
pop
jge
cmp
test
sub
ins
push
loop
jmp
jg
pusha
jp
fwait
pop
clc
dec
test
mov
fs
mov
fst
test
mov
mov
sub
add
adc
sti
loope
(bad)
and
movs
lods
cs
mov
inc
fucomp
enter
jno
xchg
and
mov
inc
inc
sar
xchg
xor
or
cmp
push
xlat
mov
dec
xor
mov
pop
imul
pushf
je
xchg
pop
cmp
aaa
fadd
(bad)
(bad)
lock
popa
dec
push
jbe
and
dec
jne
mov
lea
cld
aas
lock
jmp
cmp
hlt
pop
pop
or
jmp
xchg
call
mov
out
and
in
(bad)
into
iret
sbb
hlt
dec
dec
mov
add
dec
pop
jb
sub
or
jnp
aas
lods
fsub
js
or
out
mov
and
sbb
inc
inc
xchg
cli
cmp
in
adc
inc
(bad)
dec
mov
int3
pop
mov
sbb
xchg
es
and
out
hlt
retf
jp
add
inc
xor
or
in
dec
mov
cmp
mov
inc
out
mov
loope
cwde
jmp
rol
xor
popf
fdiv
scas
loope
push
xor
fild
mov
dec
int
sub
adc
inc
jg
test
fs
push
xchg
mov
(bad)
cmp
mov
fcomip
mov
jb
out
sub
xchg
jno
cmp
sub
movs
sti
push
mov
retf
push
ret
mov
loope
js
mov
leave
rcl
(bad)
repz
pop
int
pop
fisub
and
retf
sub
add
jnp
aad
mov
push
in
pushf
cmp
in
mov
mul
sub
or
sub
aam
retf
or
pop
mov
ret
xchg
jne
repz
out
ret
sbb
mov
push
adc
in
cmc
es
or
mov
jge
mov
mov
cmc
pop
pop
retf
rcr
daa
scas
push
movs
sbb
jae
call
scas
(bad)
xor
or
outs
jb
loop
pop
sub
ss
jmp
lahf
cld
ret
mov
and
rcr
call
fsub
int
enter
and
pop
pop
ds
retf
mov
cmc
sbb
sar
or
hlt
pop
sbb
push
(bad)
adc
popf
push
(bad)
mov
fprem
fisub
adc
sub
adc
push
bound
loope
mov
shl
sub
daa
loop
aam
hlt
push
stc
xchg
xor
lahf
nop
iret
jb
mov
cdq
in
jne
nop
test
xlat
jne
jmp
sub
jno
pop
adc
mov
and
mov
mov
inc
das
and
(bad)
aas
adc
xchg
and
shl
cmp
push
repz
and
sar
shl
fisttp
mov
jb
push
xor
das
push
or
adc
lods
and
ret
fs
jns
cmp
sbb
mov
icebp
add
sti
in
xor
adc
aam
pop
jmp
or
mov
add
clc
popf
inc
or
shr
adc
stos
adc
pop
into
ja
pop
add
adc
outs
xor
stc
(bad)
mov
or
push
(bad)
inc
(bad)
loop
outs
iret
(bad)
(bad)
adc
mov
or
mov
jno
dec
shl
sbb
xchg
push
push
lods
shr
sub
in
dec
pop
sahf
jl
push
jbe
aam
jns
loop
(bad)
outs
ja
dec
sbb
mov
ffree
sub
pop
mov
push
jle
inc
add
cmp
out
or
das
dec
xchg
out
mov
jmp
shl
mov
cdq
lock
lods
jl
retf
add
push
pop
or
icebp
push
jbe
mov
jb
imul
ret
out
and
and
push
dec
ds
inc
pop
hlt
sub
sub
push
into
jl
lods
xchg
mov
mov
sub
repz
jbe
(bad)
arpl
popf
push
push
rol
mov
and
mov
in
icebp
or
test
add
cwde
or
test
popf
retf
pop
xor
sar
sbb
mov
test
mov
mov
lods
cmp
cmp
jb
sahf
pop
mov
or
loop
imul
out
and
lds
movs
pop
inc
add
cmp
enter
imul
pushf
add
sahf
test
xchg
adc
adc
fimul
jbe
sbb
retf
ret
dec
cmp
int
jae
out
jne
or
js
in
push
test
and
jno
imul
in
xor
push
out
movs
dec
out
jp
pop
and
pop
cld
mov
mov
jno
mov
(bad)
mov
movs
cmps
pop
push
pop
mov
jns
retf
dec
sti
jecxz
pop
sub
lds
jge
js
iret
popf
in
jae
xlat
call
pop
xor
call
xlat
js
(bad)
dec
leave
mov
sbb
mov
cmps
dec
push
sub
xchg
int
(bad)
dec
push
in
mov
jns
test
ja
mov
add
nop
stos
sar
sbb
rol
gs
mov
and
fsub
popa
retf
mov
mov
inc
adc
pop
retf
test
mov
clc
lea
popf
aaa
xor
je
in
mov
pop
sub
mov
adc
imul
sub
xchg
and
nop
inc
sar
sub
add
cmp
stos
mov
ud0
cwde
out
push
sbb
jne
push
xchg
and
dec
test
addr16
inc
push
es
pop
pop
lahf
cwde
cdq
cli
mov
cmp
adc
cmp
jae
jae
enter
inc
mov
or
mov
sub
fsubr
call
movs
sub
push
int3
inc
and
mov
jb
int3
test
sub
jge
xchg
in
xor
test
push
fwait
cld
push
cdq
(bad)
cmps
mov
jno
fst
test
sub
mov
add
jae
mov
loopne
add
sbb
test
or
addr16
mov
popa
jbe
pushf
hlt
out
push
fs
js
cld
inc
xor
leave
int
jl
xorps
pop
jmp
lods
jp
sbb
fcomp
inc
push
outs
jno
push
repz
ds
xor
daa
call
icebp
pop
adc
lods
test
pop
jg
dec
pop
lds
xchg
xor
imul
push
xor
adc
jo
jg
(bad)
sub
pop
pop
pop
cmp
gs
ret
not
in
pop
push
rcr
cmps
psllw
mov
cmp
ret
aam
jne
out
xor
dec
mov
mov
push
mov
fist
in
cmp
addr16
adc
outs
repz
ss
out
sbb
add
xchg
mov
dec
not
add
mov
movs
shl
push
inc
imul
cmps
jecxz
ss
jo
adc
push
cmp
mov
aad
cmp
bound
sbb
imul
xchg
mov
cmp
mov
fidivr
add
xor
pop
add
pop
stos
sub
cs
daa
mov
movs
fidiv
jge
or
lea
jp
or
xchg
or
adc
xchg
and
mov
push
pushf
fdiv
ret
les
pop
xchg
sub
jecxz
and
pop
jns
daa
cli
(bad)
aas
cmp
mov
sbb
push
dec
add
add
dec
std
cmp
data16
jo
xchg
push
push
sahf
and
mov
stc
in
cmp
xor
jo
xor
pop
sahf
pop
pop
aaa
fucom
jg
xor
jl
jns
and
icebp
test
mov
cmps
outs
mov
xchg
and
lods
pusha
mov
mov
inc
popa
mov
aad
cmps
sbb
(bad)
jmp
adc
mov
neg
adc
sbb
add
push
mov
cmp
sbb
daa
ss
inc
or
xchg
lahf
lods
ins
jns
pushf
pop
pop
push
mov
test
dec
dec
test
(bad)
and
fidiv
scas
xor
adc
push
shr
adc
mov
dec
add
jmp
lods
mov
out
push
pop
in
push
fbstp
repz
(bad)
in
or
push
je
mov
inc
inc
adc
cdq
stos
dec
lds
cs
sub
ins
call
mov
jmp
repz
jp
jmp
rcr
mov
imul
shr
leave
(bad)
imul
mov
frstor
jl
out
or
ins
stos
pushf
adc
mov
xchg
pop
lods
pop
add
popf
imul
cmps
pop
sbb
xchg
dec
repz
out
jbe
pushf
repnz
xor
add
dec
pop
das
cwde
and
xor
cmp
jns
push
ins
gs
fmul
jb
adc
cmp
jmp
mov
add
push
in
inc
fdiv
sub
popf
test
push
ss
xor
retf
mov
mov
mov
xor
sbb
adc
ror
icebp
das
iret
rcr
shr
cs
cmp
in
call
mov
jl
enter
jle
rcl
jl
bound
inc
pop
cmp
cmps
adc
dec
jmp
jl
pop
movs
inc
retf
test
xor
or
cmp
gs
stos
mov
daa
mov
jae
mov
sub
jne
xor
cmp
ret
icebp
(bad)
jmp
push
aas
sbb
jge
fnstenv
mov
loopne
xchg
retf
or
mov
pop
dec
pop
adc
add
push
pop
(bad)
cmp
add
push
cli
inc
shl
clc
push
int3
pusha
xchg
cld
inc
or
ret
push
sub
js
popa
pop
hlt
test
jmp
arpl
bnd
add
aam
scas
ret
sar
mov
sub
loopne
cmp
cli
mov
and
or
push
mov
and
test
inc
pop
aam
xor
sbb
pop
cs
pop
int3
sub
push
stos
xor
push
(bad)
dec
pop
call
stos
sti
out
mov
les
ficom
mov
and
repnz
xor
inc
jg
out
or
cs
push
push
mov
ja
cld
loopne
or
sub
mov
cmp
loopne
sub
stos
stos
in
add
push
out
lock
call
xchg
ins
rcr
repz
mov
in
push
mov
pop
mov
int
aam
sub
jo
fs
and
jne
jnp
add
jmp
retf
mov
jo
add
mov
jnp
pop
inc
adc
stc
jl
repz
cld
pop
ficom
xor
mov
imul
inc
or
dec
mov
hlt
inc
inc
jl
or
add
sbb
push
call
std
stos
and
lahf
loope
jne
mov
aaa
and
iret
xor
mov
ja
adc
shr
cs
shl
cmp
cwde
jno
shl
(bad)
in
mov
push
nop
pop
das
and
xor
pop
adc
fimul
std
mov
cmp
add
inc
int3
jl
aaa
sub
test
gs
cmp
adc
pushf
pop
(bad)
ret
ins
mov
and
mov
cmps
call
(bad)
mov
push
xor
sbb
mov
call
mov
not
es
jnp
call
mov
mov
movs
mov
retf
jne
mov
sbb
ja
jo
mov
scas
mov
ins
xor
or
enter
pop
jo
sbb
mov
call
adc
mov
imul
adc
sub
fwait
pop
out
retf
ins
(bad)
out
(bad)
or
xor
sub
pop
jae
jge
das
jns
in
arpl
setp
(bad)
adc
in
pusha
jecxz
push
cmp
adc
scas
mov
xor
and
inc
push
mov
shl
fcmove
xchg
cs
mov
lods
xor
push
das
push
stc
xchg
movs
lds
call
jmp
mov
aam
call
lea
(bad)
cld
mov
push
lods
dec
push
pushf
imul
push
std
imul
sub
call
aas
cmp
adc
mov
push
add
push
mov
mov
call
in
aaa
rol
pushf
push
fsub
cmp
sar
xchg
ins
or
mov
pop
mov
or
dec
rcr
das
mov
pop
lock
das
cmp
lock
xchg
add
scas
hlt
out
xor
jmp
ret
movs
stos
int3
cmp
repz
and
sub
xlat
push
push
fadd
call
ins
mov
ret
cwde
xchg
mov
call
sbb
xor
xchg
dec
es
adc
or
mov
mov
and
(bad)
sub
pop
mov
or
xor
sub
sbb
sub
mov
fadd
std
and
inc
mov
pop
loopne
jne
(bad)
in
fcom
into
xor
inc
sar
icebp
loop
xchg
ins
mov
or
loope
lock
out
inc
fs
lock
sub
pop
(bad)
or
mov
jecxz
in
addr16
xor
sbb
nop
shl
fld
popa
jne
sbb
es
enter
mov
sub
and
and
dec
jmp
jle
sub
mov
cdq
mov
lods
jmp
mov
push
mov
int
mov
mov
xchg
jne
pop
call
mov
mov
sti
pop
cld
out
shr
or
push
mov
pop
test
imul
aam
lea
loopne
and
jnp
(bad)
fiadd
pop
test
fsubr
jne
retf
test
pop
push
push
mov
into
test
inc
dec
sbb
xor
enter
popa
pop
ja
pusha
addr16
xor
mov
nop
out
push
or
cwde
push
call
call
shr
pushf
outs
cld
xchg
mov
js
aaa
sub
and
ret
into
outs
repnz
repz
add
mov
addr16
adc
add
mov
mov
hlt
dec
lods
mov
pop
lahf
sub
out
popf
stos
in
retf
std
mov
retf
cdq
push
pop
xchg
sbb
mov
imul
fwait
push
xchg
mov
add
push
cmp
gs
dec
sti
call
jns
xchg
(bad)
stc
sti
aas
div
jo
cs
add
mov
mov
push
pop
or
mov
mov
ret
retf
dec
sahf
dec
or
loope
push
dec
or
loopne
or
into
mov
lock
pop
in
add
daa
retf
cmp
and
cmp
jl
jmp
fwait
cdq
sbb
fild
mov
inc
popa
push
adc
mov
cwde
mov
sub
repz
xchg
adc
xor
inc
pop
push
push
pop
inc
mov
sbb
cmp
mov
and
adc
popa
out
or
dec
mov
cli
(bad)
mov
div
ins
shl
mov
jl
mov
ror
fld
and
inc
imul
mov
push
push
rcr
sbb
ins
and
mov
gs
or
push
add
adc
push
pop
xor
xor
add
mov
adc
mov
lods
xor
push
rcl
popf
arpl
lds
daa
jmp
and
into
das
mov
xchg
stc
mov
(bad)
jecxz
cmp
ss
xchg
or
cmps
sbb
fwait
cmps
xchg
das
cmps
(bad)
mov
in
and
push
sub
inc
scas
in
mov
popa
mov
mov
mov
fist
cdq
dec
jae
xlat
or
mov
xor
push
fimul
adc
mov
xchg
jg
gs
rcl
mov
jmp
or
push
rcl
jne
pop
cmovs
fwait
popa
test
xor
scas
test
stos
fxch
inc
cdq
push
cmc
jg
or
pop
inc
push
mov
adc
mov
cmps
and
arpl
mov
js
arpl
int3
movs
jmp
(bad)
clc
xor
movs
mov
clc
call
sbb
scas
cmp
cs
and
scas
sar
fstp
ja
jb
dec
add
fcom
or
or
push
xor
mov
adc
adc
enter
fwait
outs
sub
inc
loopne
and
loop
push
stos
add
add
ins
push
mov
pop
cmp
(bad)
jno
pop
fist
pop
or
loopne
fidivr
jno
xchg
test
repz
das
sub
lods
pop
test
lea
and
sbb
adc
daa
jecxz
js
fsub
aaa
in
bound
jo
inc
mov
vmwrite
stc
pusha
in
popf
cdq
mov
xchg
mov
add
movs
mov
sub
dec
scas
mov
in
fsubr
add
jae
jns
xor
neg
and
push
popf
pushf
cs
add
fadd
out
inc
dec
dec
test
lahf
push
nop
adc
push
pushf
xlat
(bad)
mov
sbb
xor
test
into
jns
sbb
scas
push
jmp
popa
push
pop
xchg
or
outs
movs
mov
fadd
nop
push
repz
push
(bad)
lds
adc
mov
neg
std
(bad)
xor
daa
imul
dec
sbb
lahf
and
and
xor
pop
hlt
js
cmp
pop
adc
sbb
xor
sub
sbb
mov
sub
jb
or
movs
loope
aam
cmp
xchg
(bad)
out
xchg
fiadd
cmp
inc
mov
jno
pop
rcl
repnz
mov
fiadd
bound
cmc
lds
sbb
aam
in
cmp
xor
mov
or
leave
popa
jmp
xor
aad
xchg
sbb
aaa
cmp
add
mov
mov
mov
mov
mov
out
push
fld
retf
pop
neg
push
rcl
cmp
xor
cmp
outs
push
cmp
pop
sbb
mov
sahf
bound
aas
jecxz
and
inc
les
and
fidiv
jns
test
mov
adc
scas
icebp
pop
dec
jge
aad
jae
lods
cmp
rol
pop
adc
loop
fnstcw
inc
lods
cmps
clc
test
and
jmp
mov
sti
xlat
not
nop
pop
imul
movs
(bad)
pop
sbb
(bad)
fs
(bad)
in
call
mov
nop
and
paddb
pusha
mov
imul
(bad)
out
mov
mov
xchg
and
mov
add
movs
mov
ins
jbe
push
loope
stos
xchg
repnz
shl
cmp
dec
pop
add
dec
mov
rcl
mov
cmp
scas
inc
cmps
inc
call
mov
std
pop
out
or
stos
adc
adc
das
stos
push
call
push
cli
jl
or
mov
xchg
and
mov
loopne
inc
xchg
lods
retf
addr16
mov
dec
inc
aad
sbb
sub
xlat
cmps
and
jmp
int
dec
into
cmc
call
lahf
push
jmp
rol
loopne
movs
ret
add
add
aad
mov
mov
mov
out
mov
int3
mov
xor
push
gs
rcr
or
xlat
cmps
jnp
(bad)
hlt
or
push
xor
outs
out
icebp
dec
push
rol
add
ins
out
inc
xchg
in
add
mov
sbb
leave
jnp
sub
pusha
paddb
inc
fdivr
pop
jae
mov
push
stos
lahf
loope
call
sub
jne
lods
cmp
push
mov
inc
xchg
or
nop
pop
int
fdivp
js
scas
fwait
in
adc
cdq
fs
jle
mov
and
movs
pop
rcr
gs
mov
movmskps
outs
or
pop
pop
cmps
scas
cld
in
pop
(bad)
push
out
push
repz
jmp
outs
lahf
rol
in
mov
xchg
lods
cmps
mov
repnz
je
retf
jb
push
jp
or
jmp
fsubr
pusha
dec
mov
mov
push
(bad)
imul
test
cmps
fsubr
sbb
scas
dec
push
xchg
jbe
cs
jp
gs
xchg
ss
xchg
adc
jp
pushf
cld
or
xchg
add
aaa
pop
jno
xchg
call
xor
pop
in
mov
cmc
repnz
mov
xchg
out
fldenv
mov
push
pushf
xchg
mov
popf
xchg
repz
shl
mov
cmp
jecxz
test
jns
adc
add
data16
jno
jmp
imul
iret
inc
pslld
sub
js
cmp
sub
xor
cmp
push
outs
in
pop
and
test
sub
mov
ins
outs
mov
int
adc
mov
rcl
data16
pop
sub
dec
mov
loop
movs
and
sub
sub
cmp
leave
icebp
enter
and
xchg
or
pop
movs
mov
hlt
or
test
jl
shl
test
and
out
mov
xchg
pusha
mov
inc
pop
mov
cmp
cmp
mov
enter
and
test
sbb
jp
pusha
push
mov
cmp
loope
jge
mov
fcmovnbe
dec
sub
mov
fdivr
ret
mov
jmp
add
ins
sub
fs
ret
cmp
enter
ins
cmp
lds
xchg
test
and
aad
mov
in
popf
(bad)
fild
cli
cdq
push
dec
push
out
shl
inc
scas
fisubr
mov
adc
loopne
stos
shl
addr16
aad
and
imul
js
and
outs
cmp
popf
enter
lahf
xlat
jnp
mov
out
mov
adc
mov
xchg
xor
mov
sahf
out
xchg
scas
(bad)
fucomip
arpl
jnp
out
sub
push
and
add
pop
push
xor
xchg
mov
mov
or
test
(bad)
adc
mov
fbstp
mov
mov
push
ds
cmp
(bad)
push
push
fwait
push
pop
arpl
scas
add
jge
inc
cld
lods
adc
(bad)
ins
loop
cwde
popf
cmc
sub
rol
inc
(bad)
jge
aad
lds
lea
sub
clc
xchg
pop
push
mov
jbe
mov
jne
inc
sub
rcl
mov
(bad)
cmp
mov
movs
ret
imul
pop
retf
jne
or
jp
jno
jp
adc
cmp
nop
icebp
enter
ins
rcr
push
sbb
leave
arpl
and
sahf
dec
jg
pop
in
push
jae
not
or
jns
push
ins
stos
cmp
imul
xchg
inc
or
inc
add
movs
mov
nop
movs
and
callw
jp
xor
ffreep
mov
imul
daa
inc
mov
fdiv
dec
adc
shr
xchg
dec
aad
add
icebp
dec
rcr
and
cmp
ja
mov
loopne
imul
adc
pop
xchg
iret
ret
int3
cmp
inc
inc
mov
jge
test
clc
test
jb
and
call
xchg
cdq
xchg
xchg
sti
sbb
or
frstor
xchg
mov
push
mov
adc
sar
push
cmp
sub
adc
xor
lahf
lods
scas
jne
dec
cmp
fdivr
mov
fcmove
add
mov
icebp
sub
out
test
lods
mov
test
mov
xchg
loop
and
jne
xor
loop
jmp
dec
sub
test
sbb
cmp
cmp
add
push
sti
push
inc
dec
pop
repz
icebp
icebp
shl
movs
pop
movs
fs
out
add
cdq
push
jmp
inc
shr
mov
sbb
or
call
loop
or
sti
dec
push
lock
imul
sbb
dec
ret
add
sub
sub
xor
rcr
bound
ja
inc
jo
lods
lea
popa
adc
adc
jle
movs
add
add
stos
cmp
and
inc
outs
(bad)
cli
push
movs
fs
test
das
xchg
add
popa
pop
std
xor
pop
fsubr
stos
fisttp
or
shr
(bad)
dec
pop
test
je
jo
push
dec
pop
cmp
add
mov
xor
sbb
pop
adc
sbb
in
xchg
sub
xchg
and
push
push
inc
jmp
gs
(bad)
shr
shr
or
pop
xor
sti
inc
mov
cmp
daa
cmp
ror
nop
mov
das
mov
mov
xor
test
sbb
fist
xchg
(bad)
stc
cmp
or
mov
arpl
inc
popf
cmps
cmp
mov
pop
push
push
dec
std
shl
cmp
addr16
(bad)
dec
(bad)
and
add
or
ins
inc
push
lods
mov
(bad)
push
push
mov
(bad)
call
pop
es
mov
mov
fs
jnp
pop
aad
or
xor
test
pusha
lds
pusha
popf
js
movs
pop
outs
in
bound
test
imul
sub
frstor
mov
xchg
fisubr
dec
inc
out
sar
or
in
out
shl
(bad)
aaa
iret
lahf
mov
out
inc
dec
test
xor
fs
push
repnz
lods
mov
adc
(bad)
xchg
cmp
and
movs
stc
sub
xor
or
push
(bad)
aad
stc
cs
push
sub
fdiv
xlat
jne
and
movs
shl
fidiv
and
fs
push
push
jg
push
loopne
sahf
dec
sub
mov
retf
outs
mov
pop
jg
loopne
inc
mov
test
mov
aas
loop
cmp
mov
cmp
mov
mov
or
mov
or
mov
popf
xchg
lahf
mov
push
sub
mov
or
pop
jecxz
lods
cmps
out
xchg
or
iret
sbb
xchg
sub
call
outs
mov
or
pop
test
std
dec
fsubr
xlat
add
xchg
bound
add
sbb
pop
fidiv
test
xchg
fcom
sub
ja
push
(bad)
lods
pop
jo
mov
retf
jmp
jno
mov
mov
sbb
es
pop
repnz
stos
sar
xchg
loope
popf
push
jmp
outs
js
mov
xchg
xor
into
mov
call
call
retf
dec
xchg
int
test
fimul
lods
loope
in
jmp
mov
cs
cmps
ret
push
retf
or
cwde
mov
loop
shr
cmps
push
shl
jnp
dec
pop
imul
push
or
mov
sub
fst
stc
popf
inc
push
or
jns
cmp
dec
xchg
aam
push
ror
fcmove
or
sti
lea
jne
rcr
push
mov
push
adc
xor
sub
sbb
sbb
xchg
pushf
mov
(bad)
sahf
jge
ja
dec
repnz
or
rcr
cmp
in
out
sub
jge
sti
call
clc
mov
bnd
push
js
pop
adc
jbe
xor
into
sbb
push
rol
add
outs
cmp
cmp
mov
out
imul
adc
pop
push
mov
dec
gs
dec
cmps
add
out
or
inc
ja
sbb
mov
sub
outs
ins
push
sbb
mov
xchg
iret
(bad)
ret
xchg
cli
cwde
push
imul
mov
aaa
lods
inc
push
push
mov
pushf
jnp
and
push
scas
test
mov
adc
js
jp
dec
pop
jmp
inc
dec
pop
mul
pop
adc
fmul
test
or
mov
leave
and
mov
dec
xor
xor
jle
push
cs
jno
push
cmp
or
adc
aad
call
cdq
jl
xchg
mov
and
mov
cmp
js
and
add
cs
mov
and
cmp
jmp
(bad)
push
jge
in
loopne
dec
aad
js
or
and
fcomp
adc
mov
fstp
mov
add
pusha
sbb
fst
or
jp
cld
out
popf
or
in
xchg
cwde
pop
adc
push
aaa
int
int
call
jmp
or
sub
(bad)
push
ins
mov
add
xchg
adc
fcomp
push
bnd
inc
cli
pop
bound
sbb
cmp
mov
jle
int3
push
rol
jg
adc
cmps
or
imul
std
sub
(bad)
mov
xlat
inc
cmp
cld
sub
mov
add
clc
push
aaa
enter
or
jecxz
fwait
stos
pop
or
leave
in
retf
(bad)
mov
test
ror
call
(bad)
cli
pop
mov
push
or
jge
adc
mov
(bad)
ins
fbstp
test
mov
retf
inc
fild
mov
test
test
out
sbb
or
or
ja
fxch
push
push
sbb
push
push
shl
test
inc
mov
fidivr
daa
lahf
and
xor
ja
jmp
pop
das
xor
mov
test
cmp
arpl
loope
int
rcr
fsub
cwde
out
xor
mul
xchg
pop
pop
dec
ret
fs
adc
icebp
sub
out
gs
mov
mov
shl
xlat
mov
mov
adc
mov
push
cmp
inc
push
mov
jo
sbb
scas
mov
rcr
inc
stos
call
and
add
xor
faddp
xchg
test
xchg
out
imul
bound
adc
or
cmp
pop
scas
dec
test
push
into
xor
popf
push
adc
mov
mov
ins
push
imul
and
mov
ret
xchg
mov
mov
repnz
inc
(bad)
fld
cmps
mov
adc
xor
sti
lahf
mov
mov
sub
jae
mov
push
push
add
or
dec
aaa
mov
cmp
fadd
jne
stos
mov
dec
int
shl
retf
jle
nop
dec
cmp
and
inc
cld
xchg
cmp
call
sbb
clc
les
mov
jnp
jb
mov
cli
sub
adc
inc
ret
ins
lods
pop
mov
adc
hlt
ror
das
ret
or
sbb
xlat
sbb
pusha
je
and
cmp
fdiv
aam
xchg
shl
push
movs
sub
pop
and
lods
repnz
jl
icebp
sar
mov
and
adc
(bad)
xchg
popf
or
fistp
or
xchg
hlt
and
sub
(bad)
call
stos
cmp
sbb
pop
out
dec
add
dec
or
sub
sub
in
cs
push
sahf
aad
sub
mov
or
inc
in
data16
jo
jg
mov
jne
rcr
loop
push
xchg
sub
cwde
es
mov
jp
sub
(bad)
xor
push
sub
test
cdq
dec
faddp
ror
fs
lahf
adc
or
and
ret
or
aaa
mov
fistp
add
faddp
inc
pop
sbb
ret
or
push
mov
cmp
outs
xchg
inc
mov
mov
ins
add
mov
pop
jg
push
sti
lods
and
hlt
xchg
adc
xor
mov
add
(bad)
fwait
pop
inc
les
jb
mov
push
or
adc
pop
xor
lea
icebp
ins
xlat
xchg
dec
dec
push
xchg
dec
fbstp
je
mov
movs
(bad)
push
jae
out
sti
int3
ja
outs
dec
inc
cwde
xor
sar
jmp
jge
or
mov
xchg
ja
cmc
(bad)
mov
dec
es
pop
ret
xchg
mov
out
jnp
dec
fmul
cwde
jle
out
inc
mov
ret
inc
inc
sub
(bad)
and
cmc
xor
xor
dec
xor
lds
add
aad
pop
popa
enter
ficomp
movs
xchg
fcomp
pop
or
stos
ins
fstp
push
fsubr
fsubr
(bad)
fwait
jge
je
xor
ficomp
push
in
jge
xchg
inc
xlat
jnp
(bad)
loop
ins
enter
and
adc
mov
jl
sub
or
jne
jp
out
leave
push
test
xchg
pop
jge
(bad)
out
xchg
es
cdq
and
or
xchg
add
pop
and
push
daa
sbb
test
adc
push
sub
(bad)
mov
icebp
jae
mov
hlt
push
and
out
int
mov
sbb
popf
sar
pop
int
jno
cld
sub
mov
mov
fsub
add
jmp
sbb
in
lea
dec
push
sahf
or
jae
out
mov
adc
xor
sbb
push
shl
dec
int
push
aam
jmp
std
lea
jmp
mov
movs
and
into
fbld
mov
sub
aaa
fdiv
lock
rol
sub
stc
sahf
push
ja
fild
ja
push
dec
jg
cmp
stc
cld
pop
scas
pusha
out
inc
inc
mov
fstp
inc
xchg
add
jmp
jmp
adc
dec
jo
rcr
mov
(bad)
out
ret
ffreep
and
mov
mov
shr
cmps
lock
adc
test
repz
xchg
fcomi
pushf
mul
adc
xchg
pop
call
pop
mov
in
mov
push
dec
pop
jns
sub
or
sbb
pop
pop
movs
cdq
dec
jmp
fwait
sub
mov
push
call
pop
imul
loopne
adc
fiadd
inc
int3
inc
jg
add
leave
bound
cdq
xchg
sti
scas
shl
loop
cmps
ja
mov
or
push
lods
adc
cmc
cmp
inc
cmp
xor
fistp
xchg
fs
sahf
je
fs
xchg
push
adc
xchg
mov
dec
mov
push
stos
retf
(bad)
imul
(bad)
retf
mov
imul
xor
jle
fisttp
sbb
add
mov
leave
jmp
push
int3
xchg
sub
xrstors
imul
or
into
sahf
sbb
push
shl
cwde
xchg
mov
dec
cmp
test
aas
add
lock
and
stos
pop
(bad)
or
and
mov
wbinvd
iret
pop
ret
test
mov
fsubp
cmc
outs
mov
int
mov
inc
mov
cmp
iret
jmp
ret
pop
(bad)
push
xor
xchg
or
(bad)
fs
js
je
push
xor
mov
adc
in
js
cmp
das
inc
push
mov
dec
xchg
mov
dec
jp
rol
inc
ins
inc
cmp
jbe
aaa
ret
jmp
jp
sbb
mov
out
push
xchg
test
cdq
and
mov
xchg
loop
mov
xchg
xlat
pushf
jl
jae
add
xchg
dec
dec
mov
jnp
xor
stos
daa
lock
jmp
rcl
iret
(bad)
jl
xchg
movs
shl
jmp
mov
pop
test
cmp
mov
mov
push
mov
xor
bound
jnp
test
out
cmp
pop
xor
pushf
or
retf
xchg
iret
sub
xchg
add
leave
fdiv
mov
aam
cmp
jnp
(bad)
cmp
mov
std
aas
arpl
enter
inc
add
pop
jg
mov
push
sahf
iret
cdq
jne
jp
icebp
mov
push
inc
dec
and
scas
push
or
mov
retf
leave
shl
out
pop
fnstsw
dec
pop
add
and
mov
inc
aaa
inc
sbb
arpl
arpl
jmp
mov
sub
cld
call
add
lahf
push
lds
mov
ja
sti
(bad)
jmp
dec
mov
xchg
mov
pop
cmp
xor
test
nop
pop
push
bound
adc
sahf
mov
or
jp
and
addr16
sbb
bnd
push
shl
les
rcl
sub
mov
inc
cmc
addr16
addr16
jmp
pop
in
sbb
inc
push
inc
(bad)
xor
test
arpl
(bad)
popa
add
cmp
or
jne
dec
pop
adc
(bad)
and
out
ins
jo
cmp
ret
in
mov
cdq
cmc
cmps
(bad)
cld
cmovns
inc
pop
cmps
out
push
in
jg
std
mov
scas
scas
mov
push
das
sub
scas
pop
and
jne
dec
addr16
call
cmp
and
inc
and
pop
xlat
cmp
add
xor
shr
dec
je
fmul
sbb
mov
imul
jmp
mov
xchg
push
push
repz
(bad)
sbb
shr
es
(bad)
and
jno
lods
out
inc
mov
jo
push
adc
cwde
sub
test
out
lds
cmp
mov
leave
inc
sub
scas
xchg
ret
or
xchg
add
shl
mov
cwde
sahf
mov
popa
lea
or
stc
not
xor
pop
and
int3
pop
pop
addr16
and
(bad)
aas
stos
repnz
jne
cmp
mov
lods
sbb
mov
xchg
inc
pop
push
or
adc
dec
push
aam
cmp
(bad)
repnz
jmp
pop
xchg
jecxz
in
mov
das
dec
sub
shl
add
dec
ret
cmp
xchg
add
mov
lock
dec
mov
aas
div
pop
repz
cs
mov
and
daa
push
imul
data16
and
pop
out
fwait
xor
push
stos
jge
dec
jecxz
dec
pop
xor
data16
and
adc
gs
jl
pop
call
call
cli
test
(bad)
daa
mov
ja
add
hlt
xchg
es
(bad)
data16
xlat
fmul
imul
(bad)
pop
mov
stos
lods
fisubr
pushf
jns
aaa
xchg
aaa
div
push
mov
in
push
js
push
test
cmc
jnp
xor
push
ins
pop
or
(bad)
cmp
and
xor
out
aad
int3
out
into
push
call
fstp
aad
repz
jl
test
xor
fsubr
add
ins
into
mov
aas
push
stos
push
sbb
sbb
xor
push
(bad)
pop
mov
sti
or
rcl
in
add
outs
pop
or
cmp
movs
cwde
xchg
out
add
iret
jns
ret
pop
sahf
faddp
imul
cmp
jo
jmp
icebp
mov
dec
div
ins
fsub
adc
iret
mov
adc
xchg
dec
iret
ret
mov
nop
mov
sub
leave
iret
in
ss
inc
lods
faddp
nop
xchg
sub
mov
sub
shl
lods
inc
add
mov
ret
mov
aas
jns
mov
ins
mov
xchg
outs
test
std
gs
sub
out
ror
fsub
mov
pop
pusha
outs
cdq
xchg
dec
popf
add
retf
mov
inc
mov
ds
idiv
xchg
xchg
mov
push
pop
mov
mov
cld
sbb
cli
mov
inc
or
ficom
jbe
loop
jb
les
mov
sub
push
shr
xchg
pop
xchg
and
xchg
cmc
adc
xchg
inc
shl
cdq
inc
mov
call
test
cmp
sbb
dec
inc
push
pop
jg
pop
fcom
(bad)
pop
gs
push
xchg
push
adc
adc
fwait
jge
lods
or
xchg
aad
hlt
mov
data16
bound
mov
pop
pop
jmp
loope
inc
mov
std
dec
mov
jge
dec
xchg
or
xor
push
popf
cmc
cmp
(bad)
clc
ret
test
test
cmp
add
mov
retf
fs
sub
(bad)
or
js
sahf
mov
lods
sahf
dec
sahf
cs
sahf
(bad)
imul
lods
xor
not
push
aaa
jns
inc
int
and
pop
rol
mov
rcr
pop
clc
inc
sar
add
leave
pushf
into
and
dec
sub
inc
cmp
gs
adc
dec
cmp
addr16
mov
mov
sbb
add
das
jl
and
jl
pop
add
dec
imul
jns
or
pop
std
cs
mov
ficom
jl
arpl
mov
in
ja
pop
jb
arpl
and
sahf
mov
jecxz
and
push
int3
in
inc
popa
cld
fmul
(bad)
gs
pop
cs
push
mov
cmp
sahf
fld
or
ret
cmp
dec
inc
loop
lods
and
hlt
bound
mov
pop
push
add
dec
enter
or
and
cld
das
mov
mov
ds
loope
stos
push
sbb
rcl
lds
sbb
dec
sub
pushf
call
enter
pop
sar
cmp
inc
fist
clc
mov
mov
out
xchg
shr
imul
stos
or
xchg
sub
and
cmp
dec
leave
in
jns
ins
sbb
inc
ds
push
test
hlt
mov
and
push
dec
cmps
sbb
retf
dec
adc
adc
inc
out
mov
xchg
js
clc
int
dec
mov
rcr
fstp
pmaxsw
xor
out
xchg
inc
jb
std
pusha
adc
lahf
xchg
add
shl
test
test
jp
sbb
jo
sub
jl
jecxz
stos
sahf
stos
sahf
fbld
add
sub
sbb
dec
je
out
test
popf
sbb
shl
mov
repnz
ja
push
repz
mov
fst
sbb
cli
shl
je
scas
outs
div
cwde
cdq
fild
loop
ret
mov
mov
movs
cmc
pop
add
inc
sbb
sub
ficom
out
outs
jmp
add
(bad)
mov
push
jbe
movs
mov
std
mov
push
or
repz
leave
sti
add
xor
sub
push
popa
mov
add
fcmovb
scas
outs
jecxz
nop
ins
cmp
jne
push
sbb
mov
iret
and
push
inc
mov
jge
mul
fdiv
dec
mov
(bad)
(bad)
jl
xchg
lahf
cmp
div
cmp
out
inc
(bad)
test
xor
inc
fcomp
adc
fidivr
or
out
fst
sbb
jnp
int3
dec
jge
push
cmp
sbb
dec
aas
or
xchg
jbe
popf
out
ds
push
jg
jnp
lods
pop
loop
outs
cld
jnp
in
mov
rcr
jp
out
or
and
add
(bad)
sti
jmp
dec
mov
(bad)
cdq
frstor
es
ss
fs
loope
imul
sti
jae
outs
fild
pop
dec
xchg
cmp
addr16
add
fnsave
aas
pop
std
mov
xchg
rcl
test
sar
jmp
mov
adc
pop
dec
scas
adc
ds
mov
jne
ficom
nop
jge
scas
pop
lods
out
test
ret
lahf
ja
jbe
adc
inc
ds
lock
dec
test
movs
sub
and
xor
shl
sbb
fdivp
test
loop
adc
movs
add
stc
shr
pop
test
mov
aaa
retf
adc
add
xchg
xor
not
mov
push
test
das
in
cmp
hlt
jl
gs
push
mov
movs
leave
jecxz
push
iret
loope
add
sti
rcl
pushfw
dec
xchg
sub
lea
mov
inc
adc
jmp
mov
or
push
sti
mov
inc
fst
xchg
sub
loope
jo
es
pushf
pop
jnp
js
jmp
test
push
call
std
push
inc
xchg
cli
movs
push
xor
fdiv
lea
dec
and
dec
iret
jne
jno
sbb
ja
inc
cmp
outs
dec
mov
pop
dec
sbb
and
add
jb
adc
arpl
xchg
sub
imul
inc
out
dec
cmp
std
(bad)
fcomp
push
mov
pushf
in
stc
adc
cmc
pop
xchg
jnp
fisttp
dec
jnp
out
lahf
test
add
mov
dec
pusha
mov
push
das
sub
out
sub
addr16
and
(bad)
cli
mov
sbb
popa
int3
push
int
test
cmp
sahf
push
pushf
das
mov
dec
ret
or
xor
std
pop
outs
push
inc
xor
pop
or
adc
mov
les
mov
cmps
sub
inc
push
cs
dec
add
mov
es
pop
mov
pushf
and
pushf
mov
loope
add
push
jle
lods
ror
cmps
push
pop
int
rol
into
adc
push
rcr
ret
in
in
add
call
sub
lds
mov
neg
std
outs
mov
push
mov
mov
call
pop
test
mov
jb
loope
sub
inc
push
test
or
sbb
pop
lahf
add
pop
adc
out
imul
lahf
adc
es
cmp
xchg
(bad)
lahf
cs
out
jo
test
test
pop
bound
adc
cmps
test
pushf
jno
shl
lods
sbb
mov
out
or
call
xchg
inc
xor
retf
rcr
inc
loope
pop
bound
je
icebp
dec
cdq
lods
scas
jl
int
je
std
jl
call
aad
xor
or
xor
dec
mov
call
mov
not
sub
(bad)
mov
mov
or
pop
test
push
mov
or
and
dec
mov
out
mov
jge
jge
cmps
stos
cmp
xchg
enter
jmp
lods
push
xchg
mov
mov
pop
add
add
mov
data16
test
or
nop
push
lods
nop
push
(bad)
mov
or
xchg
repz
cmp
cmps
jne
cmc
cmps
mov
mov
ret
xchg
push
loopne
and
push
xlat
sti
jmp
mov
sub
repnz
aaa
dec
retf
ins
mov
icebp
mov
pop
std
rcr
aas
jmp
mov
aas
mov
adc
sbb
out
xchg
std
cmps
cmc
jmp
or
loopne
mov
sbb
cs
mov
pusha
loope
into
mov
mov
test
dec
into
addr16
pop
xchg
or
and
fist
in
(bad)
aad
rol
scas
dec
push
aas
inc
cmp
outs
pop
sub
add
xor
or
pop
jecxz
call
(bad)
xchg
(bad)
push
xchg
sti
adc
xor
jmp
loop
mov
push
add
mov
fsubr
test
in
test
mov
in
ds
push
les
add
jne
mov
cmp
jl
jb
xchg
movs
inc
mov
imul
sub
mov
cmp
or
xor
test
jb
xor
inc
add
cwde
sub
sub
inc
gs
push
stos
dec
mov
jae
addr16
test
mov
mov
int3
push
in
mov
or
inc
rol
imul
xchg
xor
pushf
sbb
shr
je
outs
ret
push
sbb
inc
div
cmp
mov
pop
jp
jp
xchg
test
mov
bound
pop
and
out
out
imul
idiv
push
jo
ja
int3
les
dec
sub
ins
and
cld
pop
sar
mov
lds
inc
mov
retf
pop
je
ins
and
and
xor
add
pop
cli
add
(bad)
or
pop
aas
stos
cmps
and
scas
addr16
outs
lahf
cdq
idiv
pop
(bad)
adc
inc
in
and
fmul
in
ds
fwait
cmp
pop
pop
xchg
push
cmp
sahf
push
jnp
repz
call
fwait
pop
call
test
xor
xchg
data16
ficomp
test
push
imul
js
in
imul
lods
inc
dec
add
fld
jo
lods
fadd
mov
dec
test
and
sahf
inc
pop
dec
xchg
test
xchg
jp
jbe
loope
lock
jnp
xor
gs
adc
pop
add
sti
enter
sahf
fdivr
das
inc
leave
push
push
into
(bad)
icebp
mov
or
jge
popa
jg
and
push
adc
push
jmp
xchg
pushf
scas
dec
adc
in
js
ret
push
sub
lds
call
sub
lahf
fild
and
imul
in
cld
push
adc
push
scas
inc
ret
inc
mov
and
js
or
and
pop
push
mov
pop
and
or
pop
dec
lods
dec
je
call
scas
data16
push
loope
adc
mov
(bad)
bound
mov
jno
adc
sbb
js
pop
adc
adc
push
adc
js
clc
inc
jecxz
es
inc
scas
bound
mov
int
in
gs
mov
out
bound
push
(bad)
jmp
popa
aad
out
scas
shl
retf
and
inc
cmps
lds
fwait
lock
push
clc
fwait
icebp
xchg
pop
cmc
xchg
mov
pop
push
mov
aad
xchg
call
mov
outs
xor
stos
sti
(bad)
loope
pop
sbb
add
dec
repz
xchg
push
(bad)
sbb
rep
loop
shl
sub
addr16
les
clc
sbb
xchg
ficomp
repnz
stc
lock
jle
mov
adc
mov
fistp
daa
into
push
xchg
jmp
(bad)
inc
xchg
cmc
dec
sbb
jb
fsubr
adc
in
lods
rcl
out
mov
test
push
add
in
cdq
sub
lock
and
sar
dec
xchg
xor
push
rol
push
scas
call
retf
aaa
clc
mov
or
cld
das
mov
jmp
or
jl
cli
pop
enter
movs
dec
das
jmp
ret
scas
add
mov
mov
test
push
fs
mov
sub
loope
je
test
movs
mov
mov
sahf
or
test
sahf
mov
xor
(bad)
xor
cmps
jle
cmp
xchg
ror
clc
repnz
sbb
adc
or
mov
nop
cld
stos
sub
mov
inc
sbb
repnz
and
pop
cli
cmps
lods
jmp
or
ror
inc
mov
xor
jmp
push
sti
inc
fisttp
add
sar
loope
adc
daa
mov
xchg
cmp
fbld
lods
sbb
(bad)
cmc
jne
push
xor
add
aam
lahf
push
icebp
cmp
jb
stc
xchg
ins
cmps
shr
leave
mov
dec
aam
ins
mov
xor
add
les
pushf
push
retf
jle
mov
mov
hlt
clc
leave
loopne
dec
int3
mov
adc
stc
loopne
add
pusha
and
inc
mov
jbe
ja
jbe
xor
cmps
loopne
fstp
jb
and
das
cwde
outs
adc
repz
out
icebp
jmp
sbb
cmp
mov
addr16
mov
int3
pusha
aad
std
add
test
sub
loopne
popa
cdq
std
or
mov
(bad)
jne
aas
clc
and
cmc
retf
sub
rcl
sar
(bad)
out
jmp
adc
rol
ret
sub
cs
pop
or
loope
ja
sahf
xchg
xchg
push
or
fs
add
sub
(bad)
mov
mov
(bad)
xchg
test
fistp
mov
(bad)
or
mov
push
addr16
xchg
jae
std
or
mov
jae
mov
addr16
or
sbb
lods
sub
jp
sbb
and
xor
jne
(bad)
pop
cmps
xchg
ror
push
mov
arpl
push
mov
dec
jbe
inc
jmp
icebp
fist
xchg
inc
xor
sbb
inc
div
dec
(bad)
das
arpl
xor
cmp
fcomp
and
jecxz
sbb
xor
mov
leave
mov
pop
out
mov
jge
ja
or
sbb
push
xchg
add
cmps
es
std
shl
test
shr
mov
js
push
cwde
sbb
xchg
mov
es
and
sub
xchg
out
mov
mov
test
xchg
push
dec
adc
cdq
pop
sbb
cdq
xor
movs
out
adc
mov
loope
xor
cmp
mov
pop
xchg
ss
arpl
out
loopne
out
mov
add
inc
shl
les
mov
xchg
adc
mov
dec
adc
mov
mov
adc
gs
sbb
inc
scas
pop
lods
cmp
or
mov
mov
and
xchg
adc
mov
mov
pop
(bad)
aas
mov
loopne
mov
mul
outs
imul
add
dec
not
movs
pop
imul
fsubr
mov
pop
ins
lock
ins
push
mov
pusha
mov
sbb
das
sar
pop
pop
gs
popa
fld
sub
stc
nop
aaa
jge
push
mov
sar
jb
or
in
push
pop
sub
adc
inc
xchg
mov
cmp
dec
jbe
or
loop
inc
lods
ins
or
push
mov
sub
(bad)
dec
es
pop
mov
into
and
pusha
adc
cli
(bad)
daa
std
cdq
ret
jno
mov
hlt
jle
add
lds
push
xor
lods
ret
ret
jecxz
xor
cmc
out
ds
push
add
xchg
cmc
mov
test
cmp
mov
jno
pusha
iret
mov
push
push
or
pop
pop
out
cmps
loopne
cs
test
and
lods
sbb
dec
ret
mov
repz
jne
inc
lods
popf
pushf
cmp
cmps
mov
adc
mov
scas
paddd
xor
dec
xor
and
mov
fistp
sub
adc
xchg
stos
(bad)
add
fstp
push
mov
mov
cdq
jecxz
(bad)
pusha
sbb
stc
(bad)
dec
mov
stos
mov
mov
push
clc
jp
push
imul
retf
popf
xchg
jae
call
or
or
and
mov
scas
mov
lock
aam
inc
add
and
mov
sbb
and
jmp
xor
jecxz
pushf
and
test
mov
std
clc
out
mov
scas
aam
leave
jle
add
jmp
retf
sub
push
push
xchg
cmc
test
movs
cmp
bound
in
jecxz
sbb
pop
pop
jb
bound
push
jo
dec
in
iret
(bad)
shr
push
out
dec
jne
inc
leave
mov
shl
inc
push
es
mov
push
inc
dec
rcl
jmp
pop
dec
mov
shl
xchg
nop
call
pop
(bad)
aam
hlt
cs
pop
sub
lock
cmp
in
int3
xor
int3
inc
std
faddp
daa
shl
sar
cmp
ficomp
mov
mov
push
xchg
xchg
jmp
test
pushf
loop
xor
adc
test
lea
jl
adc
or
fidivr
lods
gs
mov
ret
mov
clc
pop
push
dec
bnd
sbb
ret
add
lss
(bad)
std
je
xchg
inc
mov
xchg
add
fidivr
mov
test
in
pop
int
(bad)
arpl
lds
pop
and
fild
sub
or
sbb
xchg
aaa
fnstsw
add
jl
sub
mov
ret
rol
mov
xchg
mov
sbb
cmp
pop
mov
push
xor
mov
inc
pop
xlat
xchg
dec
jne
add
mov
data16
push
in
mov
push
push
xor
imul
icebp
scas
adc
lea
sti
xor
sub
enter
add
adc
mov
sub
(bad)
fdivr
scas
push
rcl
or
sbb
pop
add
nop
or
out
adc
or
pop
mov
mov
and
aad
mov
adc
xchg
xor
mov
jge
shl
loope
dec
mov
adc
add
(bad)
sub
xchg
xchg
or
mov
ins
or
dec
mov
outs
cmp
pop
lea
xor
mov
mov
xchg
inc
sub
in
xchg
or
in
cmp
lods
adc
mov
cwde
push
push
dec
mov
inc
push
adc
(bad)
mov
push
(bad)
or
sbb
adc
mov
mov
adc
ins
push
mov
js
pop
hlt
mov
daa
enter
repz
test
fbstp
mov
test
addr16
and
das
aaa
ja
outs
in
inc
stos
cld
jae
or
sar
mov
add
cmps
clc
les
repnz
movs
jbe
lahf
cmp
bound
repnz
stos
or
dec
cmp
mov
adc
and
aaa
fmul
inc
cwde
fwait
int
icebp
push
std
inc
lahf
in
add
fstp
pop
push
inc
arpl
dec
pop
sbb
ret
inc
push
imul
xor
(bad)
push
adc
out
inc
loope
pop
xchg
fstp
push
mov
push
jb
xor
inc
inc
inc
push
jmp
pop
lods
add
cli
adc
lods
pop
adc
dec
cmp
call
fisttp
(bad)
push
push
repnz
sbb
mov
in
mov
lods
gs
ret
pop
les
aam
cmp
fist
adc
push
std
movs
mov
and
push
pop
pushf
mov
dec
dec
fsub
out
lahf
push
push
push
rcr
push
je
jmp
lods
xchg
sbb
adc
cdq
push
sub
or
fs
sub
dec
nop
hlt
pop
scas
mov
rcl
and
out
nop
mov
retf
test
hlt
retf
outs
jb
loope
push
ja
mov
jnp
aas
outs
scas
(bad)
rol
bound
js
sub
jns
aas
xor
les
ds
pop
cs
mov
add
rcl
(bad)
pop
add
xor
btc
in
imul
mov
iret
out
cwde
loopne
or
popa
test
pop
leave
ficomp
(bad)
into
sub
cmp
push
cdq
imul
mov
into
adc
imul
cmc
jns
sbb
aam
ds
xor
js
aas
push
adc
adc
mov
pop
or
(bad)
clc
hlt
jns
adc
nop
fwait
pop
repnz
xor
fdiv
adc
shl
adc
js
xchg
mov
in
or
jae
in
das
add
fisubr
dec
sbb
cmp
mov
adc
xor
rol
sub
mov
enter
cmp
in
mov
arpl
or
imul
xchg
cmp
imul
or
adc
xor
rol
jae
into
scas
push
out
sub
jae
mov
jecxz
jo
mov
xlat
(bad)
into
and
add
jmp
xor
rcr
sbb
sbb
adc
mov
shr
stos
mov
retf
cld
jp
retf
sti
mov
lds
mov
jle
shr
jne
adc
pop
fwait
(bad)
cmc
sub
jnp
push
inc
rcr
mov
aaa
pop
cmp
xchg
test
or
adc
jmp
(bad)
ror
and
lock
clc
mov
(bad)
in
test
sbb
cmp
das
imul
into
fnstsw
pop
cmp
inc
push
inc
test
sub
movs
mov
adc
mov
sbb
dec
jle
cmp
repnz
dec
sbb
xor
popa
push
add
shr
adc
or
push
fadd
sub
pop
mov
and
ins
push
outs
xchg
pop
sbb
js
jmp
sbb
cli
stos
cmp
xchg
or
(bad)
pop
mov
jl
pop
pop
xchg
(bad)
jl
dec
jle
sti
add
mov
push
pop
or
inc
scas
mov
add
iret
xor
fwait
in
inc
in
jmp
imul
xchg
and
cmps
iret
pushf
sar
in
inc
push
call
enter
pushf
hlt
int
cli
lods
push
pop
xchg
push
in
mov
(bad)
ins
dec
jl
and
pusha
jmp
fist
repz
call
mov
fldpi
out
fcompp
gs
xor
sub
cmp
lahf
shl
cmp
cmovp
push
cmp
hlt
popa
dec
jne
push
pop
retf
mov
xchg
jbe
pop
sbb
pop
mov
push
xor
pushf
cli
stos
mov
fdivp
mov
mov
xchg
stos
sub
jg
lahf
push
inc
mov
xor
sub
mov
mov
mov
mov
or
arpl
pop
add
xor
fwait
pop
pop
xor
xchg
or
arpl
push
rcl
ret
push
push
pop
(bad)
mov
adc
push
mov
popa
dec
mov
not
or
jp
mov
add
(bad)
dec
(bad)
imul
call
mov
mov
ss
stos
mov
cmc
xor
test
rcr
push
test
push
mov
(bad)
out
pop
loope
scas
sub
lahf
sar
ja
xor
sub
push
jle
mov
scas
ret
fdivr
leave
add
shr
dec
or
sbb
ins
mov
scas
mov
lock
bound
idiv
jae
loopne
pop
stos
scas
jne
jae
jo
ins
(bad)
(bad)
aas
push
mov
lea
cs
mov
adc
js
ud2
ins
and
pushf
push
dec
sar
cmp
mov
push
lahf
or
cmp
push
add
push
aad
dec
arpl
adc
stos
jmp
push
test
in
jle
(bad)
adc
mov
in
sbb
clc
fisub
pop
pop
icebp
pop
aas
stos
push
sub
(bad)
xchg
sbb
xor
shl
jle
cli
stos
bound
pop
movs
into
test
std
aaa
sbb
cmp
cmps
sar
jge
mov
inc
push
or
dec
mov
sbb
fst
(bad)
pop
(bad)
cmc
retf
ss
cmp
es
stos
mov
jle
(bad)
xchg
xchg
mov
fbstp
pop
cwde
lods
push
xchg
jo
sub
cs
pop
jl
jle
(bad)
mov
xchg
fwait
mov
lds
das
iret
enter
jle
jl
inc
push
loopne
or
xor
out
add
das
aas
shr
xor
rcl
(bad)
jmp
or
in
mov
add
and
(bad)
stc
mov
scas
xchg
mov
(bad)
dec
cdq
imul
cmp
popf
gs
stos
dec
xchg
xchg
xchg
inc
mov
stc
mov
mov
xor
inc
and
scas
add
cli
not
loopne
inc
pop
fwait
pop
sbb
mov
mov
inc
mul
lea
sbb
ins
test
adc
xchg
js
mov
dec
js
es
adc
xor
nop
int
push
je
pop
sub
mov
enter
mov
mul
loope
pop
shl
lods
repz
mov
push
fs
fist
pop
ret
dec
pop
jmp
into
jo
iret
movs
add
lahf
cld
mov
push
pusha
retf
data16
inc
or
sub
pop
daa
sub
stc
lahf
into
xchg
inc
movs
mov
sub
jo
shl
mov
daa
adc
xlat
mov
inc
js
inc
mov
push
loope
(bad)
popf
ror
js
test
(bad)
mov
jne
ja
and
push
and
push
pop
jmp
popa
cmp
xor
scas
lds
outs
or
cmp
pusha
fld
sub
pop
cmp
out
test
mov
popa
rol
lock
daa
sub
jg
or
sbb
dec
aas
ins
cmp
jle
adc
jmp
shr
nop
clc
jle
arpl
pusha
push
add
(bad)
clc
pop
sub
pop
cmp
out
dec
nop
xchg
cmp
repnz
cmp
test
jecxz
mov
push
adc
jp
cmp
jb
mov
push
ror
pusha
jns
stos
loopne
mov
retf
mov
push
jnp
mov
in
xor
pop
dec
(bad)
outs
in
loopne
jmp
xchg
mov
rcl
mov
pop
f2xm1
inc
data16
int
cld
xchg
xchg
mov
pop
test
sub
xchg
xchg
or
test
rcl
add
shl
movs
or
and
mov
(bad)
iret
enter
pop
sub
adc
mov
pop
mov
inc
dec
cmp
jle
cmp
test
adc
mov
cmps
shl
mov
or
enter
je
inc
push
test
movs
inc
pushf
ror
push
lahf
test
sub
std
daa
push
leave
pop
retf
inc
rol
jno
cwde
les
popa
adc
js
pop
add
ds
xlat
repnz
jne
xor
sti
sti
jnp
cmps
cmp
push
add
push
xchg
mov
push
mov
add
push
xor
mov
outs
nop
xchg
xchg
mov
sub
das
pop
jmp
adc
and
jl
mov
inc
setb
std
xchg
(bad)
les
sar
fldenv
(bad)
int
mov
and
inc
inc
and
pop
pop
dec
push
mov
add
gs
adc
mov
shl
push
in
mov
in
addr16
ss
or
sbb
add
inc
sub
jle
cmps
gs
ror
mov
(bad)
je
idiv
jo
sbb
jmp
in
rcl
aas
lahf
loope
and
ret
in
jmp
psubd
push
outs
or
inc
inc
in
out
cmp
in
xor
mov
ret
shr
adc
or
mov
jbe
shl
adc
addr16
jmp
mov
mov
dec
cmp
add
xchg
les
mov
inc
stos
jbe
push
inc
repz
jecxz
jno
dec
inc
enter
rcl
les
dec
jno
aad
das
inc
out
in
mov
xchg
hlt
scas
mov
int
xchg
aas
jg
push
mov
mov
add
mov
pop
sti
retf
sbb
ins
or
mov
inc
mov
movs
into
in
scas
ja
inc
cdq
add
sbb
(bad)
outs
arpl
push
(bad)
out
nop
dec
sahf
rcr
movs
sbb
jmp
int
add
add
inc
dec
and
not
mov
pushf
dec
push
inc
dec
lods
scas
mov
adc
mov
sbb
jmp
cli
nop
das
aas
cmp
xor
xor
mov
or
xlat
xchg
pop
inc
lods
idiv
jae
mov
adc
out
mov
(bad)
push
dec
cmp
dec
cmps
int3
sub
jl
push
mov
jl
cmp
(bad)
mov
or
inc
mov
push
fld
dec
pop
enter
ins
js
pop
in
add
add
lock
test
push
mov
test
jl
(bad)
fld
daa
cmp
popf
js
jp
ds
aaa
jmp
fdivr
or
retf
icebp
cmp
xor
sub
rcl
push
nop
arpl
imul
pop
jmp
mov
dec
retf
stc
pop
add
sub
xor
outs
jl
pop
loope
pusha
jo
(bad)
xchg
popa
mov
push
sti
in
fs
rcl
ja
daa
out
js
cmp
stc
pop
das
les
push
popf
sub
fimul
clc
nop
push
cmps
add
lock
push
std
(bad)
repz
fs
movs
xor
shr
jl
daa
cmp
cwde
xchg
xchg
xchg
and
push
jae
test
mov
frndint
cli
adc
add
add
or
ja
jmp
sub
lds
fwait
inc
je
xor
inc
mov
fsub
cmp
imul
push
mov
enter
jmp
(bad)
mov
adc
sbb
imul
push
push
retf
popf
rcr
fimul
(bad)
and
xor
sbb
test
push
dec
cwde
xor
or
mov
sub
mov
or
lock
retf
jno
mov
ficomp
and
mov
adc
jae
pop
out
push
mov
jbe
jno
ss
adc
retf
arpl
sbb
push
xor
fs
inc
jmp
lahf
imul
add
ins
ja
mov
xor
mov
adc
xchg
jl
push
enter
in
xchg
mov
out
mov
pop
aaa
aad
and
(bad)
dec
shr
rcl
sti
jnp
push
adc
cmc
mov
outs
rol
adc
jge
data16
test
and
pop
jne
movs
pusha
jnp
test
pusha
sub
ds
lock
fwait
mov
sub
add
xchg
adc
popf
addr16
push
in
retf
ja
xor
les
push
mov
jge
pop
pop
cwde
stos
mov
shl
ss
pop
imul
push
mov
(bad)
in
jle
icebp
or
jg
sub
sahf
and
outs
cmp
mov
dec
cmps
fcomp
call
pop
outs
and
mov
into
movs
pop
jnp
or
cmp
inc
mov
into
ins
mov
repz
cmp
lods
xchg
mov
fldenv
in
aaa
ret
add
out
inc
sub
jmp
fidiv
inc
cld
xor
push
stos
xor
test
fist
shl
aas
icebp
jno
xchg
lahf
add
adc
retf
push
jmp
adc
add
sbb
mov
std
cmp
or
sahf
data16
push
or
mov
push
xchg
mov
mov
mov
jmp
push
sub
arpl
jne
or
loop
cmp
icebp
fdivr
(bad)
or
imul
loope
std
or
test
mov
in
inc
lea
leave
fidivr
sub
cmp
fild
jnp
cli
dec
inc
pop
inc
std
(bad)
cmp
add
ins
mov
ins
scas
test
mov
dec
cdq
adc
adc
mov
fcom
not
int
pop
jmp
pop
pusha
jl
jb
push
jb
inc
lds
cwde
out
mov
cmp
pop
(bad)
xchg
pop
out
loope
pop
lods
mov
popa
cdq
leave
mov
icebp
xchg
sub
mov
sub
cmp
pop
inc
fs
mov
add
retf
cmps
mov
loop
fmul
icebp
mov
jns
out
cmp
sbb
mov
xchg
and
lahf
cmp
ss
bnd
lods
fbld
mov
jnp
jbe
daa
cwde
aas
test
mov
inc
sub
aaa
lods
shl
sahf
or
push
jne
xor
in
dec
mov
je
xchg
mov
mov
cmp
arpl
push
cld
add
and
not
nop
arpl
outs
pushf
xchg
repnz
ss
shr
jno
xchg
retf
icebp
fimul
shl
lahf
popa
gs
mov
ror
mov
mov
sub
retf
inc
pop
test
jl
cld
mov
cmp
cmp
js
into
inc
jmp
adc
sar
cmp
retf
shr
sub
lock
(bad)
push
hlt
std
loope
icebp
dec
xor
aaa
movs
mov
shl
cmp
hlt
adc
dec
mov
movs
(bad)
fcomp
retf
icebp
and
idiv
push
xor
out
call
mov
icebp
mov
mov
xor
and
dec
sbb
sbb
sub
(bad)
out
xor
daa
or
scas
xor
xchg
pop
xlat
mov
cmp
retf
cmps
inc
xor
cmp
loop
push
pop
xchg
jno
js
mov
cld
je
icebp
push
or
push
aaa
enter
push
fidivr
inc
hlt
(bad)
test
das
mov
cld
jle
fabs
int3
imul
out
fld
xchg
mov
lea
push
fdiv
inc
and
or
push
enter
jmp
mov
or
cmps
and
cmp
jno
rcl
pop
fs
lahf
daa
outs
cmps
cdq
add
out
cmps
call
lods
and
push
lea
addr16
out
mov
push
xchg
dec
call
adc
xchg
lea
lahf
aaa
fidivr
pushf
adc
cmp
mov
out
cmp
push
ret
outs
pop
jnp
cmp
movs
push
pop
sub
outs
and
jns
or
jmp
fmul
xchg
lods
call
fwait
ins
das
and
fwait
mov
out
or
cmp
ins
fcomp
push
sub
not
aad
stos
cmps
cmps
daa
mov
(bad)
ficomp
jecxz
lar
inc
or
sub
dec
inc
and
rcl
inc
fld
dec
jmp
cmp
outs
xchg
rol
(bad)
(bad)
xor
scas
test
sbb
(bad)
fild
and
and
shr
sub
lods
das
mov
push
cmp
cmp
inc
xchg
loope
xchg
sub
jmp
shl
adc
clc
cmc
dec
sub
pop
and
inc
add
or
mov
(bad)
out
sbb
outs
test
dec
mov
mov
pop
add
mov
movs
cmp
mov
and
pop
push
fisubr
xor
mov
mov
loop
sbb
dec
ret
idiv
ja
or
cwde
sub
call
cmps
mov
jmp
sahf
(bad)
mov
jno
cmp
int3
inc
or
outs
mov
jecxz
inc
mov
sub
push
jns
push
jns
add
(bad)
pop
jbe
lods
ret
into
ds
adc
push
or
psubd
test
jbe
out
ins
mov
ins
call
inc
or
push
scas
(bad)
ficom
fldcw
sbb
sbb
push
ins
cmps
sub
inc
(bad)
cld
mov
aam
aad
pop
and
sub
push
push
sub
sub
popf
sub
jno
push
sbb
(bad)
cmp
and
je
aaa
sbb
sub
cmps
shl
mov
out
sbb
jne
aad
mov
jbe
not
and
cld
mov
in
(bad)
repnz
leave
sub
shl
jno
in
rol
sub
(bad)
icebp
sub
xchg
or
pop
(bad)
(bad)
mov
fadd
adc
sub
ror
enter
inc
cwde
push
test
pop
imul
and
adc
mov
(bad)
fs
xlat
dec
and
out
mov
adc
mov
sub
jne
add
push
xchg
int3
push
push
pop
mov
jl
out
fs
cmps
xchg
retf
mov
outs
pop
test
gs
imul
push
pop
in
sbb
(bad)
cmp
nop
mov
add
out
xchg
test
cmc
ins
popf
int3
fimul
ret
xor
add
bound
arpl
mov
sbb
jae
test
das
in
(bad)
fsqrt
mov
jo
push
mov
sub
inc
mov
inc
mov
mov
pop
daa
test
bound
push
and
mov
fild
push
push
mov
pop
fist
shl
rol
push
pop
pop
aam
(bad)
gs
loopne
mov
jmp
push
test
sti
popa
and
add
add
add
sahf
push
out
sbb
std
jne
jnp
fbstp
sub
ja
mov
test
push
pop
push
xchg
mov
int3
ins
xor
lahf
repnz
aam
mov
call
push
mov
mov
xor
jmp
push
inc
adc
cmp
pop
mov
(bad)
icebp
cli
out
in
aam
xchg
jg
leave
retf
fwait
jne
mov
loope
sub
call
cmps
mov
cmps
xchg
pop
or
xchg
dec
jne
or
out
sbb
lds
push
jb
push
lds
(bad)
and
xchg
les
das
mov
mov
mov
lds
lahf
sbb
xchg
pop
mov
sti
fcomp
jnp
icebp
mov
in
and
mov
or
inc
push
scas
mov
inc
imul
test
mov
adc
xchg
mov
dec
and
aad
dec
adc
dec
jbe
cmp
scas
gs
das
cmps
push
mov
push
mov
xchg
ss
ins
xchg
es
or
(bad)
mov
into
and
pushf
sbb
dec
push
mov
fidiv
call
fmulp
arpl
dec
lock
xor
test
iret
mov
dec
push
dec
int
lahf
ja
jb
cmc
aad
jb
inc
cmp
pop
adc
jmp
cld
sar
shl
push
or
mov
cmp
mov
sub
jne
sub
adc
aas
dec
add
xor
(bad)
add
nop
clc
retf
fild
stos
shr
xor
and
jle
sbb
loope
das
aas
repnz
and
not
(bad)
xchg
push
aaa
cmps
and
js
add
movs
ret
mov
xchg
(bad)
dec
pushf
jne
aas
std
repnz
(bad)
test
inc
add
call
sub
xchg
pop
fisub
cdq
bnd
sbb
mov
mov
arpl
ret
(bad)
push
nop
add
add
and
ret
xor
(bad)
inc
and
in
(bad)
aas
or
sbb
loop
lds
sbb
loope
pop
and
xchg
sub
inc
xor
ds
cwde
xchg
je
shl
xchg
xlat
leave
aad
repnz
ins
pop
jg
out
pop
inc
dec
jge
call
out
xchg
push
mov
ficomp
add
adc
mov
or
sahf
jle
or
mov
nop
mov
rcl
xchg
or
retf
adc
loopne
xchg
in
inc
inc
sub
add
dec
push
mov
mov
xor
adc
push
shl
mov
lahf
(bad)
aaa
(bad)
inc
inc
jbe
mov
(bad)
mov
jmp
pop
sbb
in
(bad)
xor
jne
sbb
scas
adc
inc
stos
inc
into
pop
inc
mov
dec
dec
inc
mov
pushf
cmp
xor
pusha
jmp
retf
xor
cmps
nop
sub
int3
hlt
add
aad
fbld
push
mov
sub
sbb
call
add
push
cli
xor
add
sar
cmps
sbb
cmp
ins
test
or
dec
jmp
sub
mov
inc
clc
scas
sub
pop
pop
(bad)
mov
pop
jb
mov
lea
cmp
mov
scas
ror
xchg
mov
mov
jg
cdq
xor
mov
sub
into
(bad)
jno
mov
xlat
sti
xchg
or
lock
mov
inc
or
aaa
cmp
mov
cli
popf
adc
dec
out
bound
(bad)
mov
push
sbb
out
neg
and
inc
lods
daa
rol
push
push
ins
mov
movs
push
push
pop
fs
adc
fild
in
clc
in
cmps
inc
pop
push
inc
or
and
sbb
pop
inc
scas
mov
dec
into
jp
in
dec
dec
outs
aas
icebp
mov
fwait
stos
mov
jb
sbb
dec
xchg
mov
or
add
add
enter
xchg
cmp
cmc
dec
fmul
pop
scas
mov
(bad)
repz
(bad)
mov
mov
pop
dec
jmp
jmp
and
jmp
and
jle
xchg
scas
mov
xlat
fldenv
das
pop
ss
ret
mov
sbb
add
and
pusha
lds
inc
mov
or
jl
sbb
pop
pop
cmc
mov
idiv
inc
and
scas
mov
aam
in
push
or
(bad)
stos
into
es
mov
xor
pop
daa
call
in
cmp
dec
dec
mov
push
add
xchg
(bad)
mov
xchg
int
ja
pop
ja
jne
out
jp
retf
nop
inc
cmp
adc
ins
jge
xchg
repz
lock
stos
and
call
loopne
icebp
nop
xchg
mov
mov
out
call
ins
adc
js
mov
xor
fistp
xor
sub
cld
repnz
sub
in
sbb
xor
cdq
jl
popf
cmps
fld
(bad)
hlt
pop
jle
add
mov
jl
and
add
clc
jnp
inc
in
sbb
fcomp
add
(bad)
jg
mov
gs
fbstp
adc
daa
dec
hlt
stos
jae
adc
push
xor
add
push
es
sub
mov
inc
shr
movs
jb
in
dec
(bad)
int3
xchg
xor
out
xor
inc
push
cmp
mov
dec
or
pop
and
dec
arpl
xor
popf
dec
imul
adc
ja
test
inc
data16
mov
sub
jno
mov
fistp
stos
add
shl
lahf
(bad)
xor
std
mov
sbb
call
hlt
or
enter
cmc
xchg
ds
xchg
push
scas
dec
movaps
push
push
adc
mov
sar
dec
loopne
or
cdq
repnz
(bad)
fcom
rcr
cdq
jecxz
pop
icebp
sub
enter
enter
push
sub
fiadd
mov
std
adc
sbb
xchg
pop
mov
fs
dec
mov
xchg
cmp
arpl
dec
mov
mov
test
xchg
fcom
fs
cs
sbb
js
sbb
push
and
aas
dec
ja
iret
gs
or
ins
mov
adc
std
jecxz
mov
xor
and
iret
es
push
and
(bad)
(bad)
push
pop
jp
test
rcr
and
das
int3
movs
mov
call
jp
loope
cmp
inc
cmp
or
fcomp
add
dec
out
cmp
sbb
cmp
vpmovqd
dec
js
aaa
test
sbb
mov
out
cwde
aad
jo
movs
sub
int
pushf
inc
mov
rcr
jl
fldcw
mov
adc
add
lods
imul
mov
imul
push
jg
das
dec
clc
xor
mov
pop
sub
add
dec
lahf
jbe
or
mov
repnz
mov
fidivr
and
xchg
mov
sbb
sar
xlat
mov
ins
ds
aam
or
jmp
mov
sti
sub
or
mov
xor
repz
call
scas
in
adc
in
stc
or
mov
mov
fnstenv
jmp
ret
adc
pop
jg
mov
mov
(bad)
jne
movs
(bad)
in
adc
mov
clc
add
mov
cli
inc
cwde
inc
in
mov
pop
je
shr
xchg
lds
pop
fst
mov
fld
and
mov
jl
add
arpl
out
adc
dec
sbb
sub
div
aas
(bad)
pop
outs
cmp
ja
std
mov
fwait
xchg
dec
xor
(bad)
xchg
cmc
(bad)
movs
sub
or
(bad)
jno
pop
sbb
and
(bad)
jecxz
jg
dec
and
add
fmul
gs
dec
adc
das
out
ja
jmp
not
push
sbb
jmp
xcrypt-cfb
cmps
and
add
sub
push
aaa
rol
inc
retf
inc
and
outs
sbb
fidiv
cmp
pop
lods
inc
cmps
inc
fsub
dec
cmps
jo
call
dec
mov
pushf
or
fadd
mov
int
call
stos
push
es
pop
mov
call
xchg
adc
cs
retf
mov
and
inc
movs
jecxz
push
je
into
xor
pop
xchg
sbb
pushf
fcmovne
mov
mov
scas
retf
xchg
scas
push
mov
arpl
add
jg
ins
call
ret
inc
sbb
add
fimul
add
test
fnsetpm(287
pusha
aas
and
inc
xchg
cmp
cmps
xchg
aam
jecxz
int
mov
icebp
in
sbb
fistp
pop
(bad)
shl
inc
dec
call
cmc
jmp
sbb
loop
stc
fist
shl
mov
mov
stc
mov
enter
(bad)
xchg
cmc
and
sbb
test
stc
adc
(bad)
ficomp
sbb
rol
lds
fistp
nop
sbb
aam
fbstp
div
pop
push
test
sub
xchg
rcr
into
adc
repnz
dec
jns
cmp
mov
xchg
(bad)
retf
test
push
push
stos
xor
hlt
mov
in
adc
ror
fidivr
add
jmp
test
cmp
stc
pop
scas
add
mov
arpl
movs
outs
push
mov
inc
in
push
mov
outs
or
out
icebp
jne
sub
and
jg
ins
jno
bound
lods
vsqrtsd
addr16
test
xor
xchg
gs
bound
fnstenv
leave
or
pop
cmps
jl
push
test
xchg
das
push
add
mov
ds
ret
mov
jmp
xchg
test
mov
and
xor
sahf
push
fadd
dec
gs
dec
ss
or
jb
aam
add
bound
fs
inc
cmp
lods
cmp
xchg
jmp
pusha
loop
push
sbb
pop
mov
stos
pop
and
sub
ins
movs
jl
push
jnp
lods
lea
into
and
adc
jae
ret
pop
shl
mov
mov
jle
mov
add
ds
loope
adc
push
rcl
and
xor
sahf
sbb
push
fisubr
lahf
cmp
fld
pop
shl
dec
in
sti
retf
es
repz
jp
les
in
mov
dec
xlat
pop
out
mov
mov
and
ja
retf
xor
sar
dec
ja
cmp
fld
mul
jmp
js
push
cmp
lock
call
mov
or
nop
adc
je
mov
jmp
cmp
(bad)
cmp
loop
les
cmp
add
mov
popa
arpl
add
mov
mul
mov
fdivr
pop
inc
pushf
out
xchg
pop
add
xchg
adc
add
rcr
les
stos
jmp
aaa
arpl
mov
mov
jo
push
mov
aas
and
lea
add
and
gs
add
retf
sub
aas
stos
sub
hlt
imul
mov
(bad)
mov
ficom
nop
xchg
adc
mov
out
mov
mov
dec
(bad)
dec
test
in
pop
inc
dec
test
out
xor
mov
or
cmps
scas
xchg
inc
jns
popf
dec
mov
shl
xor
jg
(bad)
xchg
pop
jnp
cli
jecxz
test
xor
jne
mov
cmp
and
or
rcl
ficomp
pop
push
add
jle
arpl
ss
mov
sbb
sub
cdq
and
jns
repnz
sbb
call
add
xor
cmp
imul
retf
inc
loop
mov
mov
lods
mov
aaa
movs
jp
(bad)
cmc
push
add
add
stos
int
sub
jmp
daa
(bad)
inc
rcr
in
push
ds
mov
add
out
mov
out
jmp
dec
arpl
rcl
xchg
sti
or
pop
cli
in
add
repz
mov
pop
push
mov
pop
cmp
cmc
ret
sti
std
cmp
movs
jp
sbb
aad
(bad)
mov
je
sbb
add
push
sbb
jae
or
in
pusha
pop
movs
dec
aad
es
inc
ins
loopne
dec
jmp
pusha
test
cmp
sub
xor
popa
push
and
sbb
mov
and
addr16
jp
add
rol
sub
movs
push
and
loop
fwait
(bad)
jecxz
dec
sahf
or
jmp
std
adc
mov
ret
xor
pop
lds
mov
call
xchg
leave
dec
xor
xor
sbb
call
sar
mov
add
in
sbb
jl
lods
arpl
(bad)
aam
retf
push
clc
popa
push
pop
xchg
push
dec
fbld
outs
out
jo
rcr
mov
push
adc
pop
and
add
mov
cmp
inc
mov
inc
push
cmp
mov
out
std
mov
push
pop
add
sbb
cmps
cmp
pop
call
inc
inc
std
ror
cmps
sbb
jle
adc
and
test
retf
add
pushf
inc
mov
inc
rol
cs
jae
nop
mov
ds
lahf
or
push
pop
inc
cmp
cdq
mov
jle
pop
mov
dec
je
mov
inc
in
(bad)
push
and
xor
jnp
int
dec
(bad)
fmul
mov
jnp
repnz
pop
mov
retf
out
ror
jae
lock
mov
sbb
nop
add
jns
imul
mov
pop
or
stos
pop
pop
mov
jns
repnz
pop
imul
adc
loop
or
out
int
jne
sbb
mov
fnstcw
adc
cmp
arpl
cmc
pop
mov
add
and
jns
(bad)
sub
push
data16
inc
cmp
dec
dec
or
push
ja
fld
inc
pop
jns
mov
out
mov
shr
cmp
jnp
daa
xchg
fimul
test
shl
imul
mov
pop
add
(bad)
movs
movs
fisttp
pop
out
jmp
xchg
imul
mov
jae
daa
pop
loopne
test
imul
hlt
fidivr
imul
mov
out
xchg
push
cmp
cmc
int
pop
jnp
or
push
stc
stos
movs
ins
jae
ins
rol
add
das
adc
and
mov
or
xchg
nop
in
call
sub
push
lods
sub
mov
sbb
push
add
in
movs
push
(bad)
mov
mov
add
push
cli
out
cmp
pop
sti
jb
push
fild
jle
mov
inc
popf
ins
mov
xor
mov
and
fild
add
daa
push
sbb
or
pmulhw
push
lock
lea
cs
sbb
stos
xor
not
inc
jle
into
xchg
cmp
(bad)
mov
ja
add
imul
xor
sub
xor
je
pop
push
push
adc
out
mov
inc
sahf
push
xchg
sub
xor
push
fild
inc
loop
lds
test
mov
inc
or
popf
or
mov
sub
out
std
fcmovu
cmp
stc
mov
mov
add
(bad)
fimul
mov
retf
inc
cmps
popf
ins
inc
adc
fistp
(bad)
xchg
push
fucom
inc
mov
jns
inc
xchg
pop
mov
popf
push
loop
cmc
pop
add
add
mov
and
jno
or
push
imul
sub
mov
pop
mov
(bad)
jbe
in
int
stos
push
cs
cdq
fcom
push
cmp
xor
inc
xlat
add
clc
out
mov
or
mov
pop
fst
or
lahf
pop
fisub
movzx
mov
xchg
mov
ss
lock
push
dec
push
outs
cmp
push
mov
hlt
test
adc
xchg
mov
or
or
retf
sbb
imul
sbb
lock
aaa
mov
movs
push
stos
xchg
mov
and
add
add
mov
mov
pop
arpl
add
rcl
(bad)
xchg
imul
or
call
stos
inc
idiv
sub
aas
add
and
xor
test
cmp
rcl
daa
popf
cdq
sar
outs
js
ins
pushf
mov
outs
mov
push
pop
cmp
cmp
push
xchg
mul
int
or
xchg
xchg
xor
pop
push
iret
lods
adc
sbb
pop
jle
xor
or
cs
xchg
in
add
mov
mov
jmp
push
cmps
ror
int
mov
dec
pop
jae
gs
aad
test
outs
inc
or
in
inc
lods
iret
jbe
inc
push
pushf
mov
lds
mov
lds
push
call
mov
push
and
xor
pop
(bad)
mov
sahf
xchg
ja
icebp
jb
sub
and
dec
push
mov
or
inc
mov
jbe
ficomp
jcxz
ins
pop
adc
push
fcmovnb
clc
cdq
test
inc
mov
mov
lds
push
ss
js
jmp
or
fld
outs
sub
int
xor
mov
adc
imul
paddd
mov
out
pop
lods
jns
(bad)
in
aad
inc
adc
sub
inc
cmps
jbe
dec
pop
ret
pop
sbb
scas
es
sbb
scas
jp
xor
js
std
test
das
push
call
dec
pop
loopne
xor
adc
push
icebp
and
aad
mov
cmps
fs
movs
jmp
ret
add
xlat
test
cmp
lahf
push
push
push
ja
div
cwde
pop
mov
xchg
dec
jg
push
fistp
or
mov
dec
ja
js
test
arpl
aam
and
mov
out
ret
pop
jo
fist
inc
xchg
cmp
aaa
das
sti
add
or
cld
aam
stos
mov
adc
rol
sub
and
dec
loopne
cmp
out
stos
rcr
stos
sar
cmps
push
movs
mov
mov
rol
mov
push
repz
(bad)
call
inc
stc
mov
ds
cwde
mov
fdiv
mov
gs
fdiv
dec
outs
fld
ret
cli
cwde
jmp
xchg
out
mov
test
jg
sbb
inc
mov
sbb
mov
pop
pop
or
nop
(bad)
jmp
xchg
push
mov
in
adc
mov
push
or
fwait
adc
xchg
pop
add
mov
xchg
jbe
jo
sub
push
test
or
xor
jae
inc
pop
repz
lods
repnz
fisttp
out
push
pushf
sub
leave
cmp
das
push
and
sbb
lock
adc
sbb
sub
(bad)
mov
test
sbb
imul
dec
mov
cdq
sahf
or
retf
dec
test
retf
sub
fidiv
fwait
mul
add
(bad)
cwde
mov
add
push
add
fs
lds
cmps
imul
fld
cs
cdq
aam
iret
(bad)
xchg
sbb
pop
lds
fs
daa
cmp
mov
dec
in
icebp
mov
outs
and
(bad)
dec
sar
push
add
xor
adc
sahf
in
mov
adc
mov
add
xor
pop
and
js
fsubr
pop
clc
shl
cmp
mov
jg
push
ja
cmp
xchg
push
retf
repnz
aaa
xor
sbb
aam
mov
enter
sub
push
fimul
cmp
mov
in
xor
xchg
mov
or
into
jae
push
out
test
(bad)
cmps
mov
pop
xor
enter
movs
pop
call
aam
mov
dec
push
shl
jp
es
fiadd
pop
scas
scas
pop
(bad)
enter
sub
(bad)
cli
cs
aas
popf
add
imul
loop
adc
fnstenv
nop
dec
or
in
das
fwait
retf
dec
dec
cmp
xor
adc
es
(bad)
xor
pop
sahf
jg
movs
ret
daa
ss
dec
lea
sub
mov
push
sahf
dec
(bad)
imul
icebp
out
sahf
into
dec
lods
mov
dec
push
lea
(bad)
mov
cmps
ja
inc
mov
and
(bad)
adc
das
xchg
ja
push
jb
fcmovnu
gs
jp
dec
jle
mov
add
test
cmp
and
fdiv
jmp
xchg
retf
clc
rol
imul
out
mov
and
jmp
out
and
pop
mov
lahf
mov
js
push
sub
sub
mov
ss
aaa
arpl
adc
sub
retf
sub
test
sbb
push
mov
xor
mov
out
inc
xchg
std
cmps
mov
in
loopne
xlat
fbld
test
mov
dec
retf
ds
fucomi
jno
pusha
test
mov
out
or
inc
dec
or
mov
adc
add
cli
ret
cs
sub
add
imul
cmp
in
shr
sbb
pop
fsubp
dec
sub
(bad)
stc
jg
cmp
shr
and
test
ret
nop
jns
fs
inc
dec
or
repz
add
popa
sub
xor
aad
xchg
shl
imul
xchg
ds
xor
pushf
adc
pop
repz
push
add
dec
jae
mov
pop
int3
adc
call
enter
mov
push
xchg
call
cdq
jae
sub
or
std
add
comiss
popa
out
int3
pushf
cmc
(bad)
mov
dec
xchg
jecxz
cdq
or
loop
out
mov
pop
int3
dec
in
push
lea
mov
mov
loope
mov
push
xchg
ds
mov
sub
and
in
push
mov
inc
pop
imul
mov
mov
inc
shl
cmp
add
pop
pop
ret
es
xlat
cmps
cs
int
xor
bsr
inc
ss
jo
daa
popf
in
bound
xchg
mov
mov
lods
test
test
or
push
cmp
push
inc
jle
pop
mov
ret
pop
shl
stos
push
or
and
ss
and
or
out
and
jb
mov
int
adc
jns
(bad)
pshufw
ficom
shl
xlat
sub
stc
(bad)
mov
jmp
jg
sti
push
adc
(bad)
push
xchg
imul
xor
mov
sar
dec
dec
xchg
mov
aaa
xchg
inc
daa
lods
cdq
adc
cdq
arpl
ja
xchg
and
je
mov
aam
add
mov
lea
push
aas
or
add
adc
push
stos
adc
add
push
mov
and
jge
imul
in
mov
push
jmp
int3
mov
push
jae
jmp
jns
jg
inc
test
fsub
jmp
or
lods
call
aas
aam
pop
jno
outs
xor
push
adc
or
sbb
lahf
lods
xchg
fstp
std
sar
inc
das
xchg
mov
jge
push
mov
or
ds
lods
mov
pop
(bad)
mov
push
xor
pop
mov
inc
xor
bound
call
pop
cli
mov
nop
cmp
test
adc
ja
adc
sub
jne
mov
enter
fst
js
dec
test
cmp
neg
(bad)
mov
xchg
pop
jp
rol
xor
sub
dec
in
in
(bad)
nop
sbb
and
ja
aas
aad
stos
xchg
add
(bad)
data16
and
pop
gs
pop
in
mov
scas
je
mov
add
je
mov
xor
nop
mov
test
inc
jge
jge
mov
push
pop
aaa
and
mov
jmp
jo
push
cmp
data16
sti
jl
dec
or
scas
retf
lock
loopne
mov
pushf
call
std
mov
dec
lea
push
loope
inc
test
fs
and
fidivr
inc
cs
icebp
sub
in
mov
mov
sub
mov
das
add
in
fsub
out
pushf
into
mov
jp
les
xchg
fwait
in
iret
fwait
or
rcr
sahf
icebp
jns
adc
add
(bad)
xor
adc
sti
lods
aas
inc
sbb
mov
lds
push
mov
lea
enter
or
pop
test
ficomp
mov
or
cmp
push
movs
cmp
out
jle
sti
cwde
jbe
jmp
movs
sub
cmp
add
out
mov
xlat
pop
movs
jg
repnz
in
outs
out
xchg
repnz
not
jb
mov
lods
jle
push
mov
xchg
cld
cmp
push
add
aaa
cmc
cmps
mul
jl
sbb
jle
jge
mov
inc
scas
add
test
out
mov
out
and
sti
add
jns
mov
mov
xchg
lea
jmp
or
std
scas
mov
hlt
int3
hlt
dec
movs
xchg
lea
xchg
xor
retf
fs
and
jae
inc
jge
retf
rol
add
add
inc
xchg
jl
test
or
call
pop
and
sbb
stos
jmp
inc
sub
addr16
xor
pop
js
arpl
in
hlt
and
lea
lods
ret
retf
mov
test
cmps
sub
stos
es
pop
icebp
mov
imul
nop
aas
add
mov
cs
scas
mov
mov
inc
(bad)
scas
add
inc
push
ror
mov
stc
pop
fsubr
cmp
(bad)
(bad)
mov
test
ja
aam
ins
jae
inc
mov
std
or
add
add
xchg
lods
nop
xor
dec
mov
cmp
out
jo
cmp
mov
sar
jns
imul
shl
mov
sub
jl
mov
sbb
stos
pop
jmp
lds
and
int
xchg
sub
rcl
inc
sbb
add
lock
shl
cmp
sar
and
inc
out
push
and
fwait
mov
fld
mov
pusha
inc
js
movs
or
fsubr
arpl
out
pusha
lds
xchg
es
movs
cmc
push
inc
sbb
aas
sub
test
push
scas
inc
jbe
jae
pop
retf
sub
jo
daa
rol
sbb
xor
adc
int3
loop
call
xor
pop
sbb
mov
dec
add
in
adc
mov
xor
mov
imul
dec
mov
cmp
pop
sahf
lods
jae
(bad)
mov
sub
jne
aad
ins
jns
(bad)
in
dec
imul
shr
mov
pushf
ror
inc
push
sti
xchg
out
sub
cmp
push
(bad)
cmps
cmps
fistp
ja
test
or
fcom
leave
nop
inc
push
in
daa
call
mov
push
adc
cdq
pop
xchg
sbb
retf
push
fdivr
loope
push
xor
mov
(bad)
in
push
scas
or
sbb
mov
and
fwait
adc
xchg
mov
enter
inc
sbb
dec
adc
push
fimul
xchg
mov
fucomip
(bad)
mov
(bad)
rcl
scas
xchg
xlat
xchg
test
xchg
clc
fwait
mov
xor
ins
test
imul
or
mov
push
cld
mov
dec
sbb
lods
push
xchg
cld
call
bound
dec
(bad)
repz
pop
loopne
ret
not
lods
inc
loopne
call
push
push
inc
mov
lods
movs
push
lods
shr
adc
movs
mov
dec
xor
in
outs
shr
shr
push
push
movs
and
sbb
mov
or
pushf
push
push
adc
add
inc
retf
idiv
push
add
pop
out
lods
int
sub
add
andps
inc
or
cdq
(bad)
dec
(bad)
movs
ret
pop
int
or
jnp
cmc
inc
add
pop
inc
mov
pop
fisubr
cmp
add
fcomp
sar
and
or
push
add
retf
mov
pushf
rcr
cmp
xchg
test
push
test
sti
jo
jno
out
out
pop
add
fstp
loop
add
add
dec
gs
jae
adc
jg
cmp
cmp
scas
enter
hlt
pop
(bad)
jmp
push
repnz
or
xchg
pop
pop
rcr
jecxz
add
pop
ret
in
test
daa
mov
imul
pushf
mov
inc
fwait
int
push
das
sub
fwait
mov
cmc
in
or
fs
or
(bad)
stos
cmps
sti
and
pop
jns
xor
mov
jns
mov
cs
test
outs
rcl
xchg
std
mov
push
sub
retf
add
mov
xor
or
pop
popa
sub
adc
inc
jmp
mov
push
ret
leave
addr16
sbb
jb
ja
sbb
xor
rcr
test
xchg
sbb
cmp
xchg
test
iret
jge
push
stos
jmp
xchg
outs
xchg
mov
sbb
mov
mov
push
jp
repz
jb
sbb
add
jbe
test
dec
setle
int
icebp
call
mov
pop
out
gs
mov
push
cmp
lds
int3
jl
mov
pop
test
repnz
ret
ja
add
mov
mov
cmp
movs
or
and
mov
add
xchg
ret
rol
cmp
pusha
lods
sbb
lahf
leave
push
leave
dec
sub
xchg
pop
scas
xchg
jnp
daa
movs
ja
test
or
outs
jb
not
dec
or
in
mov
pushf
test
daa
out
sahf
xor
push
sub
inc
clc
rcr
sahf
imul
xlat
jne
jbe
adc
cmp
and
or
inc
mov
retf
lahf
xchg
pop
stos
lea
sub
repnz
xor
xchg
mov
sbb
fdivr
mov
inc
popa
xor
adc
or
adc
add
xchg
dec
lds
scas
mov
sbb
movs
pop
add
jo
ss
ds
pushf
retf
or
out
sub
ss
xchg
xor
push
and
pushf
add
cmps
fwait
xchg
enter
aaa
cmps
sub
and
push
mov
std
dec
cmp
adc
iret
inc
leave
xor
xor
ret
push
add
inc
cld
es
pop
ret
sub
hlt
test
sbb
aad
(bad)
sub
sub
sub
fbld
push
jl
dec
movs
mov
sub
inc
iret
test
push
je
adc
inc
repz
push
or
fwait
jmp
test
sbb
push
mov
in
ja
lods
ret
mov
xchg
jl
mov
leave
add
pop
and
inc
adc
pop
mov
scas
cmp
fimul
push
fs
or
jb
sub
mov
inc
icebp
jmp
pop
sub
pop
je
cmps
fbstp
adc
xor
pop
aam
cld
pop
cmp
pop
pushf
sbb
sub
jnp
sbb
xchg
mov
xchg
bound
inc
outs
loop
sbb
cmp
stos
leave
sbb
or
icebp
mov
inc
daa
and
or
mov
aam
hlt
cmps
out
ja
out
push
add
or
shl
fdiv
int3
imul
cmp
xchg
xchg
xchg
nop
inc
(bad)
sbb
cli
(bad)
repnz
push
pop
popf
gs
aam
mov
jmp
lods
(bad)
pusha
cdq
pop
fld
adc
fldcw
lods
rcl
fdivr
lods
xor
jmp
daa
cmc
retf
pop
call
imul
movs
imul
leave
inc
inc
inc
mov
mov
ins
xor
les
push
stos
mov
push
xlat
ds
lock
iret
mov
cmps
shl
(bad)
shr
or
(bad)
sti
xchg
test
cmps
dec
pop
gs
push
sub
jecxz
cmp
test
jnp
sub
bound
mov
dec
ficomp
fistp
sbb
cmps
sub
in
sbb
dec
pop
mov
and
repnz
sub
sbb
inc
mov
cmp
push
and
inc
outs
xor
sbb
popa
mov
or
xchg
dec
cmc
(bad)
adc
js
xor
or
jns
in
out
jecxz
jp
sub
rcl
int
ss
pop
push
push
fimul
cld
sub
or
ficom
std
cmp
test
fisttp
xchg
fadd
or
leave
in
pop
rcr
repz
push
mov
sahf
popa
add
adc
int
and
int
cmp
clc
adc
fmul
pushf
clc
inc
mov
in
cmps
jbe
shl
ret
mov
lea
(bad)
jo
inc
mov
popf
inc
enter
scas
aam
adc
fdivr
sbb
std
test
call
inc
mov
jb
retf
adc
rol
jp
sub
or
mov
popf
imul
fiadd
imul
inc
mov
sub
or
mov
idiv
fisttp
sub
sbb
pop
dec
idiv
sub
cmp
aam
pop
pop
and
mov
cmp
push
sub
cmp
adc
push
cvtps2pd
dec
mov
push
fiadd
add
lods
or
mov
fmul
push
fucom
sar
sbb
shl
inc
hlt
fldenv
test
js
xor
sub
data16
ret
fwait
cmp
mov
sti
scas
mov
das
add
xchg
cmp
sub
ret
jle
dec
pop
call
test
out
push
lods
inc
test
cmp
ins
cmp
xor
fiadd
dec
add
dec
dec
inc
add
ds
push
icebp
js
jle
sub
iret
fsubr
cmp
mov
jne
retf
pop
inc
rcr
add
(bad)
push
cld
sub
push
sub
jbe
lods
push
stos
imul
mov
fwait
je
cmc
das
test
enter
jmp
push
adc
mov
pop
aam
fwait
sbb
xchg
push
hlt
mov
nop
dec
sbb
outs
fwait
adc
pop
test
mov
mov
not
adc
into
jmp
mov
(bad)
lods
jge
hlt
sub
iret
ret
(bad)
xchg
inc
dec
mov
push
(bad)
jns
push
add
mov
push
xor
pop
dec
(bad)
stos
and
mov
jbe
adc
pop
sti
fs
push
or
aaa
sub
jae
adc
stos
mov
or
mov
hlt
dec
jecxz
or
stc
jecxz
adc
mov
lock
dec
jns
outs
(bad)
jnp
dec
int
pop
mov
push
jae
dec
(bad)
cmp
dec
ja
jl
push
push
not
outs
cmp
test
add
addr16
nop
mov
fistp
stos
xlat
mov
cmovo
(bad)
daa
jnp
inc
ss
mov
xchg
lahf
(bad)
xchg
or
mov
popf
xchg
nop
retf
sbb
push
inc
enter
push
call
(bad)
cmps
dec
(bad)
pop
les
mov
mov
jl
dec
mov
(bad)
lock
inc
inc
rol
fadd
fs
push
xchg
push
int
scas
dec
popf
ja
stos
mov
in
fidiv
or
mov
pop
adc
adc
mov
mov
xchg
sub
pop
popf
pop
lods
lods
mov
mov
dec
loop
inc
push
xchg
pop
push
inc
scas
xor
fwait
pop
dec
sbb
adc
pop
mov
xchg
mov
sbb
daa
iret
mov
arpl
gs
mov
push
inc
lock
pop
pop
fdivp
pop
sbb
int3
mov
and
xchg
jmp
push
xlat
dec
jge
or
lock
add
in
add
pop
ret
xlat
clc
or
cmp
(bad)
push
mov
(bad)
dec
and
inc
stos
hlt
jnp
pop
loop
es
or
ror
cmp
in
mov
inc
mov
jecxz
fimul
sub
call
mov
pusha
iret
sub
xor
mov
xor
inc
sub
jmp
lds
xor
push
adc
or
movs
jp
repz
mov
pop
cld
cmc
shl
adc
jecxz
jp
mov
mov
ins
jo
retf
mov
jbe
push
add
push
sbb
ja
dec
jb
sbb
xchg
mul
sbb
sub
xchg
outs
out
icebp
push
ror
or
inc
retf
sbb
into
outs
cmp
jle
xchg
add
fistp
(bad)
mov
jl
xchg
xchg
std
mov
(bad)
nop
jmp
push
pusha
mov
jo
enter
pushf
jmp
mov
push
jecxz
hlt
adc
or
push
out
mov
mov
out
repnz
imul
pop
push
pop
in
sbb
sbb
jmp
int
sub
add
inc
test
loope
xchg
into
rcl
xchg
ins
push
xchg
ds
imul
and
adc
(bad)
rcl
lahf
jle
dec
and
neg
lahf
(bad)
int3
xor
stc
mov
sub
es
aam
jns
mov
mov
es
fbld
pop
in
cmp
add
pop
sub
mov
dec
jge
xchg
jns
or
sbb
mov
lahf
xor
mov
stos
cdq
mov
nop
dec
adc
adc
adc
daa
add
pop
rcr
sbb
ret
scas
xchg
push
dec
repnz
fs
or
push
adc
and
push
stc
(bad)
xchg
ret
lds
cmp
outs
jg
sub
push
jbe
int
mov
inc
retf
stos
dec
dec
arpl
in
inc
and
sub
dec
je
arpl
out
sbb
(bad)
retf
and
push
jp
leave
and
test
dec
or
dec
or
mov
dec
jnp
fdivrp
jmp
gs
add
out
(bad)
jl
sti
pop
sbb
mov
add
xor
rcl
dec
cmp
jmp
pushf
push
mov
dec
adc
cmps
daa
sub
int
mov
pop
test
sub
in
in
retf
lds
iret
and
in
int3
mov
(bad)
ins
mov
into
jmp
push
push
xor
cmps
mov
push
jecxz
cs
add
js
xor
test
ins
sbb
inc
pop
mov
enter
xor
(bad)
popf
or
jmp
pop
daa
push
pop
pop
xor
fwait
(bad)
lock
ficom
int3
pop
pop
push
lds
jno
movs
cmps
or
push
xchg
push
aas
and
ja
fistp
pop
mov
outs
xor
in
lods
push
push
fidivr
cs
stc
push
and
mov
jecxz
shl
repnz
das
and
and
inc
out
fisttp
repnz
xchg
xor
xchg
mov
xchg
repnz
idiv
test
hlt
dec
(bad)
bnd
adc
mov
rcl
ret
neg
push
mov
mov
push
(bad)
cli
dec
shr
xor
inc
jnp
ja
stos
sbb
and
(bad)
dec
adc
mov
test
ror
dec
leave
bound
js
frstor
xchg
popf
bound
aas
xchg
mov
shl
jb
or
jne
hlt
frstor
imul
jmp
and
loope
test
dec
js
rcr
push
test
xchg
and
push
jb
xor
shr
fsub
or
out
xchg
adc
jmp
mov
js
dec
cmp
push
xchg
pop
test
mov
movs
inc
movs
add
ss
push
and
xlat
dec
push
mov
xlat
call
or
pop
pusha
aam
sub
fidivr
lods
scas
es
fistp
out
(bad)
imul
pop
xchg
xchg
cli
inc
jno
mov
rcr
jnp
jecxz
lahf
push
mov
and
xor
test
mov
or
test
mov
not
and
mov
lods
mov
(bad)
mov
enter
mov
rol
mov
or
in
push
xor
mov
aad
lods
jmp
add
mov
not
dec
dec
mov
shr
sbb
shl
ror
jnp
pop
mov
and
mov
ja
mov
push
push
int
(bad)
sub
out
mov
repnz
mov
dec
lods
pushf
mov
test
(bad)
rcr
add
dec
jbe
out
jecxz
and
mov
mov
test
dec
adc
adc
outs
lods
ret
jp
push
pop
cmp
sbb
ja
mov
sti
xchg
jp
add
clc
pop
ror
inc
and
jns
pop
sbb
mov
xchg
dec
fs
fisubr
xor
outs
mov
shl
pop
sub
pop
adc
icebp
mov
add
fidiv
xchg
scas
pop
and
inc
and
dec
xor
test
int3
jl
pop
popf
add
loopne
or
(bad)
lock
xor
sbb
aad
xor
dec
mov
ror
xchg
xchg
in
dec
push
nop
aam
pop
stos
add
fucomi
sub
xor
nop
xchg
es
dec
or
cmp
aas
adc
mov
ror
jmp
and
inc
icebp
es
lds
mov
out
scas
ss
test
shl
stc
push
or
retf
(bad)
cmc
and
ins
repnz
push
pop
sub
sahf
test
scas
xchg
cmp
(bad)
stc
loopne
push
addr16
stc
xchg
inc
inc
stc
fcomp
imul
test
jecxz
push
xchg
movs
das
xchg
mov
push
pop
shl
pushf
sbb
cmp
fcomp
mov
push
pop
in
push
pop
lahf
push
ret
dec
push
shl
inc
or
scas
adc
jnp
aad
in
repz
sbb
cdq
add
sahf
or
xchg
or
setbe
jge
js
mov
pop
mov
sub
push
aas
scas
movs
ds
dec
pop
pop
sub
sbb
push
pop
imul
pop
fwait
jl
repnz
adc
dec
xchg
push
xchg
int
into
stc
out
mov
cwde
jns
or
scas
sahf
jns
cmc
loope
pop
stc
xor
fcomp
ss
push
call
test
pop
jg
inc
jmp
out
sub
inc
test
xor
rcr
sub
rcr
push
ret
pop
pop
jmp
mov
idiv
inc
mov
icebp
sub
dec
test
push
out
test
test
cmp
inc
shl
in
std
cld
call
cmp
pop
xchg
push
jbe
imul
dec
push
nop
call
pop
add
outs
xchg
xchg
pusha
mov
icebp
test
xlat
out
dec
push
retf
ret
jp
and
mov
cmp
ds
cmp
mov
dec
inc
addr16
xor
add
jae
sub
dec
xlat
sub
push
leave
daa
fwait
or
repnz
or
or
cmp
mov
lock
test
clc
out
cmp
cld
push
mov
sub
and
cmp
loopne
pop
pop
pop
call
jns
arpl
push
adc
jle
and
sbb
cdq
movs
jmp
inc
sbb
jp
fmul
or
mov
adc
sub
mov
pop
xor
js
aas
jp
mov
cmps
test
and
pop
(bad)
call
sahf
hlt
mov
inc
sbb
arpl
sbb
stos
xlat
xor
div
dec
mov
mov
xchg
sub
fild
xor
inc
cmp
xchg
paddw
xor
inc
aaa
rcl
cs
shl
scas
cmp
sub
mov
inc
ret
cmp
lea
adc
scas
ss
xor
xor
push
lods
sbb
jg
stc
es
movs
lock
xchg
shr
add
dec
out
movs
inc
daa
jle
hlt
(bad)
mov
adc
sbb
mov
(bad)
push
leave
sub
in
test
fucomp
shr
out
cmp
test
icebp
out
data16
int3
jg
add
cli
pushf
lods
sub
stc
adc
icebp
xor
fucomip
push
fisttp
push
jg
ins
cmp
jbe
mov
popa
pusha
push
mov
call
dec
addr16
fsub
in
push
loop
inc
in
xor
cs
pop
xchg
mov
jecxz
test
xchg
aam
xor
jae
adc
mov
rol
or
or
jmp
mov
sahf
jns
(bad)
or
dec
pop
xchg
ins
xchg
adc
pop
dec
inc
jnp
pop
and
dec
mov
je
les
and
xchg
jae
sub
(bad)
ficom
hlt
xchg
jbe
or
jl
sbb
pop
mov
ins
cld
cmps
mov
pop
xor
mov
(bad)
fnsave
ret
mov
mov
ins
add
aaa
ins
movs
sbb
xchg
aad
mov
clc
test
ja
ja
adc
cdq
mov
bound
mov
imul
adc
cld
pop
leave
xchg
rol
sub
sub
adc
mov
into
push
inc
cmc
imul
push
ss
cwde
inc
lods
push
mov
jo
push
sbb
push
xor
jg
shl
push
inc
js
cld
popa
or
dec
rcl
mov
add
xchg
outs
in
fdiv
or
jmp
or
test
and
jmp
cmps
ins
test
jbe
jne
repz
retf
aam
addr16
and
mov
or
inc
test
sub
jecxz
pop
pop
pop
sahf
jno
fs
mov
add
ins
or
mov
loope
ss
mov
mov
pop
sub
mov
sub
or
inc
mov
jg
push
and
mov
mov
inc
stos
cmps
inc
and
(bad)
dec
xor
movs
adc
push
xchg
cld
sbb
sub
mov
push
lds
ret
sbb
out
jecxz
test
inc
push
dec
add
push
and
sbb
jne
jmp
mov
cmp
enter
lods
add
test
test
sbb
(bad)
mov
mov
sbb
addr16
push
push
fistp
popf
call
shr
sub
imul
outs
sub
shl
test
push
add
in
lods
(bad)
fld
xor
stos
into
(bad)
sahf
cmp
add
call
adc
lahf
xor
sbb
cmp
mov
(bad)
xor
int
das
jmp
fwait
sbb
jb
in
sbb
and
dec
xor
cmps
out
aaa
jne
ss
xor
xchg
adc
sbb
movs
sub
mov
mov
jns
inc
add
pop
shl
aad
ffreep
inc
loop
mov
pop
inc
push
pop
xlat
inc
int3
hlt
int3
sar
out
sub
jns
sahf
daa
je
fstp
neg
xchg
faddp
mov
mov
mov
pop
dec
xchg
out
jmp
mov
stc
ins
sbb
int3
mov
mov
and
cwde
dec
sbb
add
mov
jns
inc
and
jno
adc
mov
inc
cmp
enter
pop
sub
bound
mov
test
sar
inc
mov
mov
bnd
pop
or
mov
retf
mov
loop
mov
(bad)
(bad)
push
jg
aam
aad
repz
pop
std
aas
outs
shl
call
mov
push
jo
jecxz
movs
mov
push
fnstenv
adc
cmps
hlt
jp
sahf
mov
aam
fmul
lock
out
jbe
pop
cmp
dec
mov
mov
arpl
(bad)
pop
xchg
lea
(bad)
cmc
dec
stos
in
cmp
sahf
fsubrp
mov
ss
push
test
cli
fcmovbe
xor
rol
movs
pop
cmps
sub
mov
xchg
stos
jb
data16
pop
pusha
pushf
push
mov
sbb
xchg
push
scas
lock
mov
enter
jg
cdq
dec
pop
loope
xchg
ficom
test
mov
mov
xchg
leave
mov
xchg
int
movs
aad
xor
and
sub
dec
mov
cmp
daa
inc
dec
iret
repnz
sbb
movs
out
js
sbb
push
popf
fmul
add
push
es
ficomp
fwait
les
or
cmps
add
jmp
ret
mov
inc
mov
jmp
stos
dec
cld
bound
lods
or
sahf
cwde
mov
movs
inc
cmp
pop
shl
loopne
gs
scas
retf
cmp
and
sbb
xor
test
bound
clc
mov
les
pop
dec
sbb
arpl
xor
mov
or
adc
ins
inc
je
cld
bnd
std
and
ja
add
pop
add
(bad)
scas
pop
pop
cmp
test
add
hlt
out
and
je
and
lahf
enter
cli
adc
push
enter
int
mov
add
adc
sbb
das
test
cwde
jmp
popa
dec
outs
add
into
push
add
pop
jbe
jmp
jl
test
in
adc
sub
sbb
and
call
cmp
pop
xor
hlt
rol
and
les
and
pop
cmp
cmp
out
clc
jbe
(bad)
aaa
nop
sbb
out
sub
out
aaa
push
xor
inc
xchg
sub
cmp
ja
loop
cld
pop
test
jle
sub
sub
aas
pop
cs
popf
sbb
cdq
push
push
in
xor
sub
jne
hlt
retf
and
sbb
inc
ja
movs
jns
and
sbb
mov
(bad)
mov
pop
fsubrp
hlt
jl
push
add
into
cmp
call
enter
jmp
and
outs
nop
cmps
jno
jbe
loope
pop
push
int3
mov
stos
ror
gs
add
fnstenv
pusha
inc
bound
push
je
mov
pop
sbb
mov
pop
xor
mov
cmp
ja
push
sub
(bad)
sti
fmul
ja
mov
test
adc
mov
outs
sub
fist
ins
mov
sbb
jb
lods
std
sbb
repnz
pop
sbb
je
stos
ret
mov
scas
sbb
test
pop
out
add
dec
hlt
enter
das
cmc
lds
std
mov
ret
lea
xlat
inc
btr
movs
jmp
jae
push
(bad)
out
cmc
push
sbb
sahf
pushf
dec
mov
out
sub
inc
lahf
dec
popf
xchg
xchg
xchg
jg
fnstsw
sbb
cwde
test
ja
popf
aam
ret
xor
retf
xor
loope
outs
sbb
lods
aaa
neg
pusha
push
fcmovne
cmp
fnstcw
lahf
out
rcl
daa
push
xchg
dec
push
xchg
fisubr
adc
mul
inc
loope
inc
and
fisubr
div
loop
in
clc
loop
push
fs
iret
jnp
adc
test
mov
stc
cmp
in
into
adc
or
cmp
in
div
leave
xor
cli
mov
fisub
adc
inc
enter
cmp
and
clc
popf
sub
(bad)
jmp
test
pop
jmp
cmp
test
push
push
int
pop
cdq
xor
stc
pop
fwait
cwde
push
arpl
pop
repnz
sahf
jae
pop
dec
adc
loop
sbb
jae
rol
scas
mov
push
jb
ret
cwde
xchg
push
je
popa
outs
call
ins
jp
sub
sbb
ins
pop
jmp
sbb
push
jne
inc
mov
sti
aas
dec
ins
inc
rcr
sbb
pop
lea
push
xchg
pusha
gs
cmp
pop
dec
fisttp
inc
aaa
jge
rcl
fild
pop
adc
cmp
and
xor
dec
rcr
ficom
fbstp
and
sub
call
movs
enter
cmp
dec
inc
retf
jmp
jae
pop
lahf
test
out
cmp
xchg
imul
inc
xchg
fcomi
mul
push
loope
aas
stos
iret
jp
dec
mov
pusha
pop
inc
pop
ins
retf
pop
inc
stc
test
mov
jns
mov
cmp
inc
inc
iret
cmps
mov
ins
cmps
cmp
pushf
add
mov
add
not
scas
dec
das
mov
in
add
mov
mov
(bad)
or
jmp
imul
pushf
inc
mov
push
icebp
cmp
in
jle
fisubr
dec
jge
push
lea
mov
or
out
int3
stos
retf
mov
xchg
inc
gs
add
and
xchg
mov
adc
cli
pop
stc
adc
sub
shr
scas
retf
cmp
enter
jae
or
daa
(bad)
retf
or
out
dec
xor
dec
sbb
adc
outs
cli
test
xor
fisub
or
movs
sub
mov
add
jb
dec
out
es
inc
popa
out
(bad)
dec
cmc
cmps
jmp
push
push
jb
inc
mov
outs
sbb
sbb
xchg
sub
dec
ins
mov
(bad)
xchg
push
fidivr
sahf
dec
xlat
out
sub
ins
xchg
xchg
or
jmp
mov
mov
adc
xlat
mov
or
jno
(bad)
out
test
rol
pop
xor
arpl
sub
jecxz
jge
xor
xor
sbb
cmp
mov
dec
pushf
adc
push
ds
les
sbb
jmp
es
xchg
push
xor
shr
dec
(bad)
pop
pop
dec
mov
sub
rcr
add
xchg
imul
jge
xchg
imul
sub
push
shl
inc
das
lahf
pop
das
hlt
jp
sbb
xor
or
cmp
dec
jg
lahf
push
ret
movs
xchg
retf
sar
cli
add
(bad)
out
and
into
mov
into
loope
mov
sbb
xlat
(bad)
sub
sbb
fist
mov
mov
and
cmps
sub
in
xor
inc
sti
push
into
ins
xchg
lea
xor
sbb
test
jae
inc
rol
add
mov
repnz
mov
mov
scas
ins
lea
or
stos
sub
xor
imul
xchg
cmp
fnstcw
sbb
adc
aaa
dec
jne
jmp
push
mov
xor
arpl
call
inc
outs
inc
out
retf
cmp
mov
fwait
(bad)
lds
popf
push
jb
push
stc
jmp
ret
mov
retf
leave
and
mov
hlt
movs
iret
xchg
push
inc
test
mov
inc
mov
fnstenv
mov
stos
pop
dec
xchg
and
mov
or
(bad)
jnp
repz
or
mov
(bad)
ror
arpl
xchg
inc
rol
int
cmp
cmc
(bad)
cmp
pminsw
push
jo
mov
push
sahf
sar
call
mov
jmp
jae
ror
retf
jl
inc
and
xchg
xor
jbe
push
int
fisttp
adc
imul
mov
xchg
jns
rcr
(bad)
test
unpcklps
lahf
adc
inc
jbe
dec
scas
push
sbb
sti
xchg
ds
jecxz
les
in
inc
cmp
xor
mov
xchg
dec
scas
xor
jno
xor
jl
sbb
adc
vpsubusw
jmp
enter
stos
sbb
add
dec
sub
call
fwait
jae
or
(bad)
mov
stos
cmp
inc
cmp
dec
jo
sbb
xchg
leave
nop
xchg
adc
(bad)
std
adc
sub
pusha
cmp
in
test
mov
lds
call
mov
ret
cmc
push
jmp
outs
mov
jmp
mov
imul
push
inc
jmp
or
xchg
int3
or
dec
jnp
pop
mov
pop
pop
pop
shl
test
ret
mov
or
popf
lds
inc
push
xor
sub
sub
hlt
jne
(bad)
sar
or
mov
mov
sbb
pop
into
std
nop
fdiv
(bad)
xor
pop
mov
out
mov
fstp
adc
pop
jecxz
scas
mov
adc
push
iret
jae
mov
aas
jecxz
cli
and
add
mov
dec
je
cmp
cmps
mov
push
imul
enter
and
dec
push
icebp
mov
xor
push
sar
dec
inc
fidiv
fwait
lahf
add
pusha
fxch
inc
stos
adc
fisttp
jmp
sub
test
or
and
push
in
dec
test
gs
shl
out
clc
pmaddwd
push
push
add
popa
test
mov
(bad)
cmp
dec
pop
inc
xor
mov
scas
xchg
popa
dec
rol
mov
jnp
push
int
push
out
(bad)
pop
jno
ds
adc
and
sub
mov
sbb
xchg
xor
js
not
int
fistp
lods
or
push
cmp
push
ja
mov
push
adc
test
fisttp
aam
cmps
mov
jg
je
sti
mov
ja
jmp
xlat
lock
lods
add
rcr
das
add
cwde
push
add
(bad)
sub
cli
inc
xchg
inc
cmp
fcomip
lods
nop
inc
mov
retf
cwde
jle
xchg
push
mov
lock
dec
test
push
ds
pop
paddusb
dec
and
(bad)
cdq
addr16
icebp
mov
mov
xor
inc
mov
pop
push
(bad)
(bad)
lock
cli
into
scas
pop
xor
out
or
jle
rol
popf
and
adc
int
mov
push
or
and
call
aas
and
test
not
call
jmp
into
hlt
mov
inc
xchg
sbb
jno
arpl
cmps
sub
cli
or
inc
xor
stos
dec
lahf
lahf
test
fcom
sti
jo
pop
push
pop
add
cmc
ds
loopne
(bad)
imul
or
int
popa
add
cli
jmp
push
jl
fisub
push
and
sub
xchg
arpl
mov
pop
mov
(bad)
or
pxor
repnz
mov
paddd
pop
(bad)
dec
popa
mov
push
add
idiv
nop
aam
push
data16
icebp
and
mov
fs
mov
sti
popa
xor
jmp
mov
xor
adc
push
cmps
ins
push
mov
lods
jae
repz
pop
stc
pop
sub
int3
mov
pushf
or
jl
xor
out
lock
push
dec
dec
mov
aas
sub
xor
sub
sub
lahf
cmp
sbb
push
jmp
rcl
inc
add
popa
pop
shl
ret
ds
jg
jo
in
in
loope
and
push
outs
icebp
ins
jmp
test
and
in
cmp
xor
pop
pop
shl
sti
stos
call
shl
pop
dec
cld
shr
clc
push
adc
setbe
or
sub
push
push
xchg
adc
(bad)
jns
xor
in
hlt
cmp
push
mov
imul
mov
push
data16
mov
lods
add
mov
xchg
jl
cmp
mov
mov
mov
gs
loop
sub
adc
or
mov
and
shl
ffree
or
ret
jmp
add
int
add
push
xor
jns
rcr
and
or
sub
xchg
ficomp
out
or
fstp
int
and
das
fwait
jb
icebp
clc
icebp
mov
mov
addr16
cli
ss
push
sbb
jle
jae
pop
adc
adc
wbinvd
and
sub
call
dec
pop
or
lods
ins
cld
cwde
jne
mov
jne
in
addr16
ret
jecxz
int
mov
mov
xor
out
ret
push
js
loop
mov
mov
add
js
mov
mov
std
mov
ficomp
scas
(bad)
test
dec
adc
and
call
and
ds
sub
jle
idiv
iret
pop
retf
clc
dec
hlt
push
inc
or
push
test
adc
push
add
and
rcl
daa
jecxz
cwde
and
or
push
mov
in
sbb
dec
jmp
(bad)
je
into
test
lods
sub
mov
rcr
push
inc
add
cmp
fimul
cmc
push
out
mov
sbb
fdivr
es
or
jmp
bound
and
push
sar
sub
push
adc
mov
cmps
aaa
lods
nop
fstp
inc
(bad)
lea
fidiv
mov
pop
dec
lock
cmps
push
add
fs
scas
mov
pop
sub
out
rcl
add
pop
int
push
mov
lods
mov
mov
jl
iret
inc
xchg
bound
icebp
shl
push
std
mov
lods
aad
lods
fidivr
outs
dec
nop
inc
sub
mov
sub
sti
xchg
shl
xor
pop
lahf
or
sub
or
leave
or
adc
test
push
mov
dec
je
jmp
jbe
or
inc
cmp
sub
shl
mov
push
sub
(bad)
lock
fmul
jecxz
mov
xchg
popf
jnp
fist
and
das
jcxz
xor
loopne
add
shr
mov
(bad)
pusha
cmp
cmps
jb
imul
pop
mov
jmp
scas
mov
imul
aas
xchg
fcmovnu
pop
stos
adc
inc
xor
shl
cmp
daa
ror
sbb
maskmovq
inc
js
mov
cs
(bad)
pop
fadd
xchg
jge
pushf
cs
mov
aad
pop
and
adc
movs
repnz
adc
xchg
(bad)
ins
mov
adc
inc
mov
mov
ret
pusha
stc
popf
ins
jp
xchg
jne
mov
xor
into
aas
xchg
repnz
mov
mov
sub
sub
sbb
xchg
mov
dec
sub
in
movs
cmp
arpl
pushf
out
clc
mov
mov
dec
inc
daa
in
push
jb
push
sbb
call
rol
fst
ror
inc
inc
lds
jbe
dec
ins
cmps
lahf
lea
nop
sti
cmp
jo
sbb
sahf
pop
fdivp
adc
add
xchg
stc
add
leave
je
cmp
ins
inc
and
call
pop
test
jae
push
jecxz
fisub
movs
jecxz
iret
xor
shl
inc
pop
data16
mov
xor
jae
cmc
xchg
jae
xchg
lock
ins
(bad)
jmp
jecxz
push
and
jnp
and
add
inc
xchg
fdivrp
int
dec
or
xchg
leave
add
pop
xchg
sub
aaa
mov
add
cmp
pop
fimul
je
xor
fcmovnb
push
jle
pop
sahf
mov
mov
aam
add
cld
pop
fidivr
jb
mov
pop
inc
push
cmp
add
sbb
pusha
xchg
das
mov
cld
xchg
movs
dec
mov
pop
xor
pop
rcr
sar
xor
shr
aaa
(bad)
inc
aam
cmp
pop
jge
jl
mov
dec
jg
jbe
call
sub
cmp
outs
sub
js
push
cld
cwde
push
sti
stos
cmps
mov
push
gs
retf
std
cmp
mov
sbb
cmp
test
mov
fld
in
ins
jp
cs
cmp
pop
push
cld
pop
call
xor
sahf
mov
jb
movs
imul
or
sub
jle
vmovdqa
adc
xor
mov
daa
lds
adc
or
fucom
mov
jmp
mov
inc
in
push
cdq
cmp
aad
out
push
jp
and
sbb
sbb
gs
or
call
sbb
int
push
cld
into
ja
mov
enter
cs
jae
ficomp
ss
xchg
jecxz
into
add
push
mov
jmp
push
ins
sub
loop
xchg
pop
aam
pop
dec
in
jbe
ficomp
cli
fisub
sbb
jg
mov
mov
adc
in
test
mov
test
popf
jecxz
les
sbb
jge
lods
in
and
sub
int
lea
or
jae
pusha
cmps
leave
pop
int3
xchg
dec
outs
sub
jnp
inc
sub
jmp
sahf
push
or
sbb
pop
and
and
push
daa
inc
call
sbb
lods
add
sub
push
dec
enter
dec
in
cdq
pop
lods
inc
call
and
cwde
ins
and
and
sub
js
enter
fld
in
imul
fwait
and
pushf
retf
ficom
mov
and
hlt
mov
sub
mov
mov
nop
adc
shl
cli
stos
outs
ret
(bad)
in
loopne
shr
and
out
cmps
cmp
int
shr
push
jo
jg
adc
adc
and
ja
sub
pop
pop
mov
shr
(bad)
lahf
cs
shr
inc
dec
mov
(bad)
sbb
cwde
movs
mul
jne
out
mov
shl
fs
and
jle
fdivr
xlat
lods
ds
je
(bad)
(bad)
lock
leave
lods
xchg
mov
fstp
xor
xor
xor
nop
movs
pushaw
xlat
popf
inc
js
test
cmovns
fwait
ss
inc
loop
push
iret
push
cmp
fld
in
mov
and
xchg
sar
fwait
adc
and
test
inc
test
out
stos
mov
cmps
jnp
pop
xchg
out
cmp
add
jo
jo
into
std
inc
js
mov
mov
mov
daa
mov
pop
mov
mov
add
mov
int3
nop
jno
jecxz
loop
mov
push
rcr
dec
lods
mov
adc
or
leave
lds
mov
fild
sar
inc
std
jle
or
add
shr
aam
ds
or
sbb
stc
jb
push
add
aad
push
rcl
lahf
push
ja
popf
(bad)
xchg
test
jg
sub
and
popf
loope
push
in
jnp
sbb
mov
dec
sub
jno
lods
call
push
ins
mov
or
clc
call
mov
ja
ror
jb
and
add
xor
mov
gs
repnz
mov
mov
(bad)
jae
pop
xchg
cld
aas
inc
sbb
aad
jle
je
test
jne
std
jp
std
mov
lods
loopne
mov
in
xchg
jnp
mov
dec
push
xsha256
cmps
nop
or
add
aam
jmp
repz
mov
popf
inc
jne
pop
mov
sbb
inc
jmp
hlt
pop
inc
shr
jle
cmp
aam
jge
leave
in
jo
loopne
fisttp
push
sub
mov
mov
or
and
push
xor
push
cmps
fisub
add
jbe
retf
and
fs
imul
sbb
mov
adc
push
ins
(bad)
sub
push
sar
mul
push
mov
scas
pop
mov
call
mov
inc
out
leave
push
fidivr
mov
js
xchg
and
add
add
push
mov
mov
mov
mov
hlt
test
shr
sbb
enter
cmp
aam
xor
loope
sar
repnz
idiv
mul
mov
mov
lea
iret
add
xor
inc
int
cmp
push
cmp
push
cmp
aam
jns
push
imul
add
imul
movs
push
in
lods
adc
in
(bad)
in
imul
push
cmp
xchg
call
into
stos
in
test
adc
mov
xor
inc
cmp
inc
pushf
mov
pushf
xchg
pop
fs
dec
push
add
sub
sbb
stos
nop
xchg
dec
dec
inc
jne
and
dec
sar
push
pop
adc
mov
xchg
jp
xchg
fild
dec
adc
inc
adc
stos
xchg
and
add
mov
ins
sbb
cmp
iret
sub
or
inc
mov
mov
out
cld
xchg
mov
icebp
xchg
hlt
loopne
and
(bad)
jae
xor
inc
test
cmps
(bad)
ror
mul
cmp
push
dec
stos
mov
jo
and
xor
mov
inc
das
(bad)
pop
or
(bad)
jl
mov
lahf
sti
mov
rcr
aam
sbb
bound
xor
js
in
arpl
into
and
sub
loopne
jae
mov
imul
out
shl
dec
mov
or
std
clc
cwde
fs
jns
(bad)
sub
jle
cwde
or
push
mov
ficom
mov
xor
dec
pusha
pop
retf
das
in
jmp
loop
and
imul
imul
inc
cmps
push
dec
enter
outs
sbb
xchg
out
test
retf
dec
dec
pushf
cmp
cmp
mov
fwait
jnp
dec
clc
retf
lahf
sti
addr16
pop
out
mov
nop
and
xchg
test
add
popf
into
int3
pxor
sbb
mov
iret
(bad)
and
jmp
mov
outs
sub
mov
icebp
inc
push
pop
stos
push
push
xor
inc
cmc
mov
xchg
iret
(bad)
jg
popf
fwait
cmp
push
repnz
add
in
out
jno
push
repnz
mov
js
cmps
shr
mov
dec
adc
mov
std
outs
sub
cwde
push
xchg
js
mov
shr
std
cs
rcr
ror
jg
mov
push
jle
mov
stos
fld
test
aas
sub
inc
ins
imul
icebp
jg
or
repnz
lock
call
test
or
je
or
mov
sbb
fdiv
add
(bad)
sbb
stos
scas
daa
cmp
sub
int
cmp
xchg
sub
mov
dec
sub
neg
lahf
mov
inc
ret
xchg
nop
and
mov
aad
int3
jb
adc
int
jno
cmp
test
addr16
dec
les
clc
pop
push
into
xchg
retf
cdq
repz
les
jb
mov
test
jb
or
cwde
daa
push
cmp
jmp
pop
jecxz
fist
push
or
aam
cmp
int3
cmps
jl
lods
push
mov
or
nop
and
mov
fldenv
mov
or
daa
inc
nop
imul
xchg
add
sbb
sbb
inc
xchg
dec
aas
pop
or
cdq
fmul
fcmovnbe
dec
xchg
div
in
dec
mov
jmp
les
xchg
jb
cmps
adc
xor
nop
outs
xchg
popf
dec
cld
cmp
(bad)
or
adc
push
jbe
pop
mov
call
jne
xlat
lods
fldcw
dec
inc
sar
outs
cs
add
out
popa
ror
adc
mov
popa
mov
mov
jl
(bad)
fwait
cmp
(bad)
mov
cmp
sbb
jnp
jle
inc
dec
add
hlt
fild
inc
mov
push
push
lods
cmps
dec
xchg
dec
pop
ret
out
cmp
mov
push
mov
sar
pop
cdq
out
jo
icebp
add
int3
out
(bad)
repz
es
mov
and
xor
jp
cdq
repz
xchg
and
sbb
push
mov
jmp
(bad)
push
mov
sahf
xor
dec
rol
shl
out
xchg
xchg
gs
dec
add
adc
dec
add
jbe
movs
inc
(bad)
jle
jp
xchg
xchg
jmp
add
push
jmp
cmp
shl
das
and
adc
shr
es
cmp
out
std
ins
(bad)
lock
xchg
pop
aam
jmp
out
pop
sbb
or
xor
and
inc
mov
loope
popf
jecxz
sub
inc
add
and
mov
sbb
das
pusha
enter
push
mov
inc
neg
or
out
mov
and
(bad)
xlat
loopne
cmp
jne
and
cwde
fwait
dec
jne
(bad)
rep
sbb
mov
fmul
adc
outs
ins
nop
push
icebp
xor
add
movs
inc
inc
sbb
adc
adc
test
(bad)
popf
(bad)
xor
aaa
movs
clc
and
scas
repz
jecxz
and
aaa
or
popa
inc
sbb
pushf
jmp
cmp
(bad)
test
in
mov
popa
test
jl
aas
fidiv
retf
inc
ss
add
fsubrp
jg
sbb
jb
leave
int
adc
int
fmulp
fiadd
jb
lods
adc
xchg
clc
pop
pop
mov
xchg
pop
dec
and
jecxz
add
push
sbb
into
or
fld
sahf
ret
mov
jb
movs
cmp
daa
cdq
add
cmps
or
cmp
mov
cdq
push
(bad)
cmp
adc
mov
sbb
pop
jns
sets
jmp
sbb
mov
aam
pop
sbb
frstor
out
dec
push
neg
xor
retf
pcmpeqw
inc
dec
cmps
(bad)
pop
sub
xor
push
repz
xchg
and
(bad)
fnstsw
(bad)
fisubr
inc
inc
add
scas
lahf
(bad)
mov
jae
imul
xor
mov
mov
inc
mov
add
adc
retf
inc
inc
push
pop
les
xchg
(bad)
or
into
push
mov
fcomp
cmp
out
cmps
pop
mov
push
into
out
sbb
pop
cmc
sbb
dec
pop
lods
out
dec
lods
jae
add
jb
jns
cld
adc
sar
jge
or
jge
xchg
in
dec
lock
ins
xor
int3
and
cs
or
sbb
or
cmp
xchg
dec
or
or
pop
pop
aam
rol
pop
fsubr
xor
arpl
aas
xlat
outs
jmp
push
jecxz
jnp
fcomp
in
psrlw
mov
add
cmp
mov
lahf
jb
xor
xor
dec
push
pop
push
xor
lock
or
pop
ds
popa
inc
adc
clts
das
movs
shr
addr16
movs
int
pop
adc
xchg
mov
movs
jmp
test
jo
out
jge
mov
or
je
mov
ret
sub
imul
and
adc
test
mov
out
xchg
(bad)
xchg
mov
nop
cmp
lock
mov
or
aaa
cwde
and
mov
mov
out
sub
js
out
movs
mov
hlt
pop
pop
pop
sbb
pusha
sub
ins
mov
jbe
mov
(bad)
and
sub
(bad)
aad
addr16
ds
les
mul
cld
xchg
cmc
and
in
les
mov
mov
std
int
ins
outs
xchg
push
ret
pop
dec
sub
ficom
pop
jecxz
inc
adc
and
pusha
sbb
movs
xchg
stos
sahf
and
ja
call
ret
dec
std
mov
or
(bad)
jmp
and
jge
add
mov
push
iret
push
sbb
popa
xor
xor
gs
das
test
pushf
inc
or
or
out
popa
pop
sbb
fiadd
mov
xor
ret
ret
stos
and
mov
sbb
sub
jmp
mul
fdivr
ror
not
(bad)
repz
fdivr
dec
nop
add
into
jmp
lods
mov
mov
in
ficomp
(bad)
pop
adc
add
pop
sbb
and
adc
js
(bad)
jnp
mov
pop
iret
mov
mov
mov
mov
scas
fs
call
adc
fwait
ins
mov
andnps
and
xchg
xchg
mov
leave
sbb
mov
mov
fistp
addr16
and
repnz
mov
cmps
lds
pop
call
fwait
test
cwde
test
adc
push
adc
dec
mov
dec
movs
aaa
pop
lahf
xchg
pop
push
xchg
lahf
shr
movs
in
xchg
shl
cmps
pop
cmp
in
dec
clc
in
stos
dec
lds
sti
adc
outs
rcl
call
sbb
push
mov
call
inc
jp
dec
int3
(bad)
wrmsr
xchg
mov
icebp
mov
lds
mov
or
cmp
cmp
add
(bad)
push
pop
mov
sub
xchg
mov
fdiv
inc
pcmpeqw
lods
bound
xchg
iret
lods
inc
in
fstp
or
jno
jmp
push
adc
xor
imul
xchg
dec
sub
cmps
lea
fwait
mov
repz
mov
cs
mov
call
adc
pop
and
(bad)
lea
sahf
jb
push
add
jle
mov
sub
add
sbb
out
pop
push
add
idiv
in
push
aaa
jg
inc
inc
or
mov
rol
not
jl
inc
neg
lods
fstp
sbb
lea
sbb
push
and
pop
cmp
je
or
jb
aas
sbb
mov
xchg
test
lock
lods
cs
xlat
iret
fdiv
mov
icebp
push
outs
and
dec
xor
outs
fcmovnu
xchg
ja
push
and
pop
add
pop
sub
push
call
cmp
xor
sbb
retf
jae
push
pop
out
xchg
or
jl
xchg
test
imul
jp
into
sbb
mov
sbb
mov
xchg
(bad)
es
movs
dec
pushf
dec
into
nop
mov
add
add
lds
neg
test
ins
shl
sti
jecxz
lahf
test
call
mov
icebp
mov
jle
or
loop
xchg
xchg
ins
jg
xchg
pop
push
btr
loope
clc
mov
cmps
jmp
push
neg
mov
or
repnz
shl
cmp
adc
ror
lods
retf
pop
add
sub
int3
push
jo
(bad)
retf
fsub
ja
xor
shl
mov
or
sbb
cwde
popf
cli
test
adc
mov
ja
and
inc
int
je
add
inc
sahf
pop
out
fild
mov
std
sbb
xchg
imul
mov
(bad)
dec
push
sbb
(bad)
stos
pushf
daa
xor
test
jle
mov
xchg
clc
pop
pop
fst
adc
push
call
mov
mov
imul
and
loop
fs
ins
aam
sets
and
push
stos
add
lods
imul
fwait
retf
inc
xor
or
dec
inc
es
mov
(bad)
in
sub
scas
arpl
mov
mov
les
xchg
ficom
scas
add
or
ret
enter
or
xchg
xchg
mov
cmp
sub
add
or
ret
mov
push
push
mov
jmp
jns
mov
or
repnz
std
mov
jnp
jmp
push
and
cs
fistp
aam
(bad)
fsubr
js
jae
add
mov
rcr
aas
clc
aaa
mov
dec
popa
jb
pop
rcr
xchg
sbb
std
pop
sahf
mov
movs
fdivr
sahf
xchg
push
sbb
inc
ins
xor
sub
int3
add
enter
inc
inc
inc
mov
(bad)
mov
sub
or
in
sub
pop
adc
mov
sub
cmp
mov
(bad)
mov
clc
inc
or
mov
in
lock
mov
adc
mov
cmps
aaa
jle
(bad)
shl
loope
adc
and
dec
daa
arpl
mov
mov
js
loopne
ins
arpl
mov
or
fdivr
push
popf
or
pop
enter
xchg
dec
jmp
jmp
cmp
inc
and
adc
jo
arpl
fcom
jmp
enter
jo
push
xchg
cli
test
ss
mov
shufps
lods
cmp
or
enter
cmp
xor
jnp
iret
pop
xlat
loope
cdq
clc
push
add
ror
jno
xor
es
scas
jae
push
imul
loopne
lods
jmp
jg
pop
xchg
repz
adc
cmc
js
in
adc
cld
(bad)
mov
mov
cld
mov
push
xchg
dec
dec
cmp
sub
push
mov
sub
mov
arpl
xor
daa
out
pushf
loope
xlat
xor
push
and
xlat
ret
ficom
mov
mov
inc
pop
enter
or
js
or
test
cmp
mov
jmp
ret
std
ins
cmp
hlt
adc
clc
inc
(bad)
jmp
out
sbb
jnp
adc
shl
inc
inc
cwde
call
stc
mov
mov
js
scas
fisubr
(bad)
shl
xacquire
repz
fs
rcr
add
jae
in
xchg
(bad)
sbb
or
aaa
sbb
mov
jecxz
cwde
xor
jo
pop
mov
in
outs
cli
mov
ror
jp
push
cli
in
rol
in
les
xchg
fsub
pop
adc
data16
in
xchg
xor
icebp
add
jne
daa
mov
pusha
adc
ins
push
ins
(bad)
fistp
int
add
push
loop
stos
std
xchg
jecxz
inc
call
movs
das
mov
and
cmp
cmps
test
sub
or
lds
loope
jp
outs
popf
xchg
test
ret
(bad)
data16
daa
test
ins
icebp
cmp
pop
mov
arpl
in
ds
cmps
shr
or
add
add
fist
bswap
dec
and
dec
aad
repnz
sar
out
mov
cwde
sbb
mov
sbb
aad
enter
call
lods
call
jo
fmul
push
xor
rcl
jmp
and
mov
mov
sub
xchg
inc
and
cmps
inc
mov
jns
sti
push
cmp
mov
mov
into
mov
or
xchg
cmp
or
ret
jo
into
fidiv
pop
jnp
xor
or
or
popf
add
test
sar
mov
les
dec
gs
ins
adc
jnp
test
(bad)
sar
mov
and
xchg
ds
ds
aam
mov
outs
cmps
outs
cmc
push
idiv
repz
push
inc
dec
push
jge
cmps
dec
xchg
pop
xchg
sub
pop
xchg
cs
idiv
pop
ins
fcomp
pop
xor
pop
rol
sub
(bad)
fld
mov
add
add
cs
fist
sbb
ss
mov
jmp
dec
test
dec
loopne
cli
cmp
mov
out
push
mov
inc
or
iret
mov
stc
add
pop
adc
and
xor
fld
adc
lds
pop
mov
inc
and
mov
cmps
shl
mov
dec
das
add
dec
xchg
imul
movs
push
in
outs
mov
nop
or
nop
mov
xor
sub
jecxz
cmp
movs
retf
inc
mov
shl
jo
rcl
add
and
dec
lods
cmps
cli
sub
inc
inc
iret
pop
mov
dec
ret
addr16
cmps
xlat
sub
clc
adc
(bad)
idiv
out
dec
mov
test
mov
jb
popf
xor
jmp
add
inc
sbb
rcr
je
pop
dec
sti
neg
xchg
mov
inc
and
loope
jle
mov
scas
cmp
in
inc
or
xchg
mov
and
or
std
pop
mov
call
jl
hlt
icebp
push
test
cmp
pop
xor
out
adc
mov
lods
in
scas
fnstenv
ret
cmps
add
pop
scas
fmul
into
iret
and
sub
xor
sbb
sbb
sahf
call
test
push
jae
fnsave
inc
and
pop
inc
sbb
xor
outs
cmp
ds
fadd
retf
xchg
mov
jge
inc
out
sbb
lock
shr
in
js
and
xor
cs
imul
popa
ja
and
shl
daa
pusha
leave
out
aad
rol
or
dec
mov
add
push
loope
xor
(bad)
xchg
sbb
ja
mov
out
(bad)
das
enter
int3
dec
mov
fistp
adc
pop
pop
jmp
ret
inc
add
movs
push
mov
xchg
push
test
adc
mov
xor
sub
daa
mov
retf
popa
lds
sub
jno
out
fisubr
mov
lods
js
inc
fisttp
stos
dec
mov
mov
cmps
out
jae
jbe
push
sbb
dec
(bad)
pop
jp
sub
scas
mov
or
rcl
pop
push
jl
les
call
int
jno
sbb
and
mul
icebp
leave
aas
mov
jbe
mov
arpl
xchg
sub
or
jo
cdq
loopne
stos
dec
mov
sub
xor
js
inc
fadd
das
(bad)
adc
cs
sbb
inc
cmc
cmp
jns
in
sar
jmp
cmp
pusha
nop
retf
cmp
repz
mov
cmps
cmps
outs
aaa
retf
test
cmp
in
sbb
push
dec
xchg
out
cmp
xlat
out
sub
jnp
shr
ror
adc
daa
iret
xor
pop
outs
jmp
mov
or
ss
(bad)
xor
mov
jnp
push
fst
jmp
mov
les
test
adc
cmps
rol
leave
pop
leave
repz
pop
mov
pop
lea
jecxz
shl
imul
arpl
fisubr
lods
pop
test
xchg
(bad)
mov
lea
das
pop
cmp
sahf
cmp
out
push
jge
stos
cmc
push
nop
scas
dec
inc
pop
shl
inc
cdq
stc
sbb
xchg
pop
in
pusha
daa
jne
in
sbb
mov
ins
call
push
jnp
cmps
inc
stc
sub
jle
xchg
push
adc
pushf
push
dec
ss
sbb
push
lods
(bad)
adc
movs
and
test
test
mov
push
mov
cli
ins
mov
ror
jae
popf
popf
aad
xor
ret
xor
mov
inc
sub
test
into
mov
jecxz
xlat
cmp
jge
outs
outs
or
jg
sub
pop
sbb
fs
push
pushf
neg
lods
cmp
push
or
scas
xchg
or
sub
retf
jle
jne
out
inc
aam
gs
inc
jle
add
pop
enter
adc
mov
cmps
jae
jle
bound
and
movs
push
pushf
daa
mov
xor
or
es
lea
imul
xor
rol
mov
repz
sbb
daa
cmp
lods
pop
mov
data16
dec
es
adc
std
jmp
(bad)
jge
jp
jbe
jae
xor
xchg
inc
das
sub
xor
jl
jecxz
or
lahf
outs
ficom
or
stc
mov
rcr
adc
xor
aam
bnd
push
int
xchg
ins
pop
addr16
jns
bound
fdivr
fidiv
or
fcmove
leave
push
ja
jo
or
pusha
inc
in
ins
jnp
xchg
mov
sti
mov
and
scas
jbe
bound
ficom
mov
mov
fistp
or
jp
dec
scas
xlat
imul
lock
lods
scas
jge
pop
jge
add
movs
in
adc
aaa
xor
or
inc
cdq
sub
test
and
movs
(bad)
(bad)
sti
loopne
or
xchg
fistp
jp
mov
popf
add
pushf
retf
inc
or
cmps
push
sbb
pop
sar
jne
mov
ret
jbe
xor
scas
ja
aad
call
xor
xor
jne
pop
xchg
test
mov
xor
idiv
and
or
mov
hlt
popa
gs
test
mov
jge
aaa
adc
sbb
pushf
clc
dec
pop
jmp
jno
pop
imul
dec
sbb
outs
gs
hlt
jmp
es
push
mov
cld
aad
dec
push
clc
xor
ss
popa
les
xchg
jmp
stc
jmp
daa
cmp
(bad)
aam
mov
xor
inc
and
adc
push
stos
xchg
jns
mov
push
mov
(bad)
mov
test
pop
lods
xchg
cmp
jmp
dec
cld
pop
mov
sbb
cwde
or
pop
jle
rol
rcr
cs
nop
mov
rol
sahf
jmp
inc
dec
iret
movs
fsubr
mov
jl
and
inc
jbe
cmp
mov
xchg
dec
lea
in
sbb
stc
pop
outs
(bad)
fsubr
sub
xor
sbb
hlt
push
mov
loopne
and
neg
inc
(bad)
sub
aam
outs
ficom
movs
(bad)
push
push
or
jge
out
test
cmp
(bad)
jmp
mov
ror
xchg
outs
pop
and
mov
scas
inc
popf
test
dec
add
test
sbb
jg
dec
ins
inc
adc
sub
sub
push
mov
add
or
xlat
retf
cmc
push
retf
mov
xchg
sahf
xor
sub
ret
das
cdq
push
cmp
fimul
mov
sbb
pop
mov
ret
loop
mov
das
inc
cmp
lods
(bad)
jecxz
test
je
or
add
loope
arpl
in
xchg
sub
mov
call
push
jb
mov
xlat
pop
jnp
lods
retf
sbb
push
xor
lods
mov
fisub
outs
icebp
pop
aad
xor
xchg
cdq
pop
imul
pop
ja
push
jbe
or
fld
dec
fcom
jl
xchg
xchg
and
arpl
pop
jmp
adc
jecxz
aam
push
adc
mov
or
out
ins
rcl
iret
loop
add
loopne
vmread
jns
fild
mov
mov
(bad)
mov
xchg
push
and
push
sbb
mov
mov
xchg
cwde
addr16
das
pop
stos
mov
adc
push
xchg
lock
dec
out
cmp
imul
int
mov
mov
das
or
jmp
or
retf
mov
out
pop
icebp
mov
inc
pop
enter
sbb
or
sahf
xchg
xchg
mov
call
cdq
ins
cwde
pop
add
lods
jmp
cwde
mov
js
mov
out
lods
je
mov
add
loop
sahf
and
jnp
cmp
ret
(bad)
cmc
dec
mov
movs
push
or
(bad)
jmp
inc
xor
push
(bad)
lahf
sti
cmp
ins
scas
scas
cwde
pusha
test
jne
rep
push
mov
inc
ja
dec
(bad)
jno
jp
xchg
jecxz
sahf
xchg
mov
jae
push
pop
push
mov
or
pop
mov
jno
jnp
push
vmovntpd
movs
cli
nop
adc
rcr
lahf
jl
test
stos
jp
out
(bad)
adc
inc
loope
adc
mov
into
test
pop
gs
cwde
inc
(bad)
in
jmp
inc
jmp
mov
sbb
lahf
fbstp
adc
sub
fmulp
sbb
movs
fwait
out
add
(bad)
shl
pop
mov
and
popf
nop
icebp
sub
mov
(bad)
je
sti
sbb
icebp
jle
jle
mov
fwait
xor
mov
or
cli
xor
push
or
pop
fcomp
cmps
add
in
cmp
jnp
xor
cwde
cld
sub
and
or
push
or
jno
repz
sysexit
(bad)
repnz
sub
sbb
adc
(bad)
sub
jbe
mov
scas
test
mov
jne
call
pop
into
daa
dec
mov
nop
adc
and
adc
cmp
add
icebp
neg
xchg
movs
ja
sahf
pusha
test
pop
add
jge
ds
loopne
adc
iret
push
in
dec
cwde
xchg
stos
jmp
pushf
adc
push
hlt
push
jae
cmp
leave
cli
fs
mov
pop
push
(bad)
sub
mov
or
or
and
mov
sbb
cmp
jns
ss
add
cmp
xchg
idiv
mul
push
lea
sbb
stos
sbb
add
out
lds
cmp
movs
stos
dec
repnz
adc
xor
mov
jae
pop
pop
sbb
mov
in
or
fst
or
jmp
ss
and
js
sti
loop
push
das
gs
xor
test
(bad)
movs
xchg
mov
sub
pop
mov
lds
pop
test
inc
sub
in
sub
adc
push
(bad)
jmp
dec
xchg
rcl
push
lods
adc
inc
inc
pop
push
in
pop
ss
add
out
ret
mov
mov
aas
add
into
cmps
test
xor
ja
xor
or
mov
push
sbb
nop
(bad)
add
lods
(bad)
repz
xor
add
dec
cli
fcmovb
add
jnp
loop
dec
inc
add
shl
int3
movs
xor
loop
mov
adc
les
inc
inc
adc
addr16
cli
in
pop
shl
xchg
or
int3
jnp
pop
or
push
xchg
and
mov
sub
mov
sub
push
pop
or
repz
stos
dec
movs
push
and
push
sahf
pop
sti
lods
loopne
jge
rol
inc
xchg
call
in
imul
xor
daa
xchg
call
out
xchg
ror
sub
outs
sub
push
pop
mov
and
sub
fwait
or
scas
test
fs
ror
cmp
cmp
outs
(bad)
jge
add
cmp
add
cmp
push
(bad)
leave
movs
sub
aaa
or
pop
repz
push
repnz
pop
jl
mov
mov
sub
aad
adc
cmp
jns
xchg
nop
and
or
sbb
enter
xor
fwait
or
inc
clc
mov
int
jge
imul
js
shr
pop
add
mov
adc
mov
or
sahf
pop
cdq
pop
cmp
in
in
mov
(bad)
mov
xchg
int3
aam
lea
push
push
popa
push
test
mov
xchg
(bad)
lods
push
int
bound
mov
enter
enter
xlat
push
xor
jle
mov
pop
ror
push
pop
sub
add
(bad)
jg
cmps
push
stos
rcl
in
mov
mov
xor
loope
add
mul
push
test
inc
pop
ins
call
movs
sti
mov
rcl
adc
xchg
dec
lods
imul
sub
inc
imul
cld
jp
mov
jmp
jbe
mov
sub
mov
push
adc
pushf
sbb
dec
jns
xchg
aam
cmp
push
inc
icebp
mov
ins
or
cld
cdq
hlt
nop
or
cli
shl
pop
jle
add
xor
add
fstp
add
rcr
sub
loope
jb
and
pushf
sbb
sub
inc
dec
mov
add
pslld
aad
shl
je
add
inc
jmp
jecxz
xor
jmp
xchg
retf
or
sub
jl
inc
adc
sti
mov
inc
lds
call
popf
pop
sub
scas
mov
imul
inc
test
test
test
or
mov
push
push
leave
imul
xchg
jp
enter
cmp
sub
add
push
test
jmp
rcr
cmp
int3
pop
stc
mov
adc
or
add
lods
dec
sub
pop
out
dec
inc
jne
fisubr
jno
ror
mov
cmp
push
cmp
test
ret
jg
ror
test
les
mov
jns
add
test
adc
std
retf
fiadd
adc
stos
movs
stc
add
cmc
ret
mov
inc
test
cmp
cli
arpl
push
clc
(bad)
call
stos
mov
push
(bad)
mov
or
arpl
xchg
jecxz
jo
sti
es
inc
xchg
cmp
bound
adc
push
call
aaa
aaa
push
inc
in
loope
sbb
pusha
jge
sub
push
adc
sub
inc
ret
imul
(bad)
dec
adc
pop
xor
adc
fst
xchg
push
rcl
sbb
jbe
scas
push
xchg
out
cmp
pusha
aam
sti
test
test
jnp
push
dec
mov
xchg
aam
out
lods
cmp
jmp
push
mov
hlt
cmp
inc
xchg
jle
(bad)
retf
cwde
lds
cmp
ja
pop
xor
out
jbe
scas
cld
dec
outs
out
sub
cmp
mov
lds
xor
ret
cmp
pop
(bad)
fisubr
retf
in
mov
sti
adc
jne
sub
and
jmp
and
sub
out
enter
sub
xchg
cmp
cs
dec
nop
ret
inc
stc
arpl
add
mov
pop
ins
clc
mov
cs
pop
or
mov
xchg
dec
popa
cld
lea
pop
dec
retf
mov
les
sar
push
sahf
je
add
and
and
dec
out
test
cmps
aas
dec
sbb
add
xchg
xchg
add
rcr
movs
dec
ret
adc
sar
cmps
out
fistp
add
aad
and
sub
clts
bswap
call
cmp
mov
out
ja
mov
sub
mul
dec
xor
out
mov
bound
inc
rsm
in
xlat
(bad)
loopne
push
repnz
dec
sar
iret
cmp
les
(bad)
mov
jae
sbb
add
cmp
fwait
test
jnp
mov
xchg
mov
(bad)
into
mov
stos
stos
ja
add
mov
adc
push
mov
adc
inc
mov
xchg
add
push
test
ret
add
mov
pop
add
mov
in
sbb
cld
sbb
jns
nop
into
jo
or
mov
pushf
int
jno
enter
inc
(bad)
cmp
pop
cmp
shr
out
mov
inc
(bad)
inc
fist
imul
cmc
sbb
jne
mov
cwde
or
cmp
add
cmp
pop
ror
dec
out
(bad)
popf
pop
(bad)
jnp
mov
mov
mov
out
lock
mov
dec
jo
bound
sub
jo
mov
shr
push
scas
pop
pushf
test
push
inc
fidiv
mov
(bad)
fdiv
cmp
fcom
mov
jne
push
sti
jae
and
xor
jecxz
sbb
xor
sub
ror
(bad)
dec
push
outs
mov
lds
ficomp
xor
mov
sub
cmpxchg
ficom
dec
pop
leave
xchg
sbb
jmp
js
sbb
xchg
adc
cdq
sbb
iret
jae
mov
enter
aam
inc
push
ret
inc
mov
push
push
cwde
mov
rol
nop
call
xor
daa
call
call
add
popa
neg
cmp
mov
pop
mov
push
lea
or
fs
inc
test
jnp
push
jg
add
xlat
mov
shl
xor
mov
jmp
cld
jbe
mov
daa
cmp
loopne
adc
shl
mov
jns
scas
xchg
test
inc
pop
mov
and
pop
pop
push
inc
in
pop
add
lock
cmc
inc
inc
xor
inc
mov
jmp
ror
out
mov
repz
fcmovnb
fisub
dec
cmp
mov
pop
add
mov
cwde
fs
je
retf
push
int3
ja
adc
out
mov
ret
sbb
ds
imul
mov
ins
adc
inc
push
xchg
arpl
(bad)
fld
mov
pop
ret
mov
mov
and
sahf
inc
sub
lods
dec
frstor
sub
in
sti
int3
popf
pop
ja
and
jp
mov
and
fwait
jae
push
ficom
xor
les
leave
ret
dec
or
xlat
jg
sub
cmp
ds
data16
int3
arpl
jp
(bad)
iret
adc
lods
sbb
dec
jg
jg
sub
movs
adc
int
popf
(bad)
pop
ds
std
pop
push
test
les
fdiv
mov
popa
push
push
adc
dec
arpl
add
je
push
mov
sub
lds
push
daa
sbb
inc
mov
pop
sub
cmp
adc
lea
rcl
adc
sar
or
mov
pop
jbe
push
cmp
dec
std
mov
sbb
pop
(bad)
mov
xor
(bad)
dec
dec
cmps
add
mov
mov
ret
aam
sbb
test
sar
dec
jo
cmp
jl
es
pop
adc
pop
jmp
jb
inc
loop
or
jmp
pop
aad
jmp
xor
out
add
sub
fild
bound
pop
push
daa
lahf
inc
push
pop
je
xor
jno
push
inc
into
or
inc
les
jo
ror
cs
(bad)
jae
pop
aam
fstp
(bad)
cmp
xchg
loop
adc
icebp
pop
sub
push
dec
mov
adc
fcomp
ret
push
ret
stos
icebp
pushf
sub
fbld
movs
in
and
add
stc
shr
shl
push
cmp
inc
movs
pushf
sbb
in
adc
mov
mov
and
xor
sbb
mov
addr16
pop
push
jl
xchg
push
mov
adc
inc
jle
mov
addr16
sbb
push
lods
cs
loopne
repnz
arpl
mov
leave
aad
pushf
mov
and
or
mov
sub
test
fld
ins
mov
js
xor
inc
push
adc
shl
(bad)
xor
and
mov
fucomi
cmps
or
jo
sbb
dec
sbb
(bad)
es
inc
lahf
jae
dec
(bad)
vmovddup
cwde
xor
stc
push
pop
mov
jne
mov
and
pusha
imul
in
lock
int3
pop
inc
ds
loopne
jnp
and
(bad)
xchg
fst
pop
push
inc
shl
aas
pop
jmp
adc
sub
xchg
pop
add
mov
jne
inc
sub
loope
jmp
and
mov
out
cmp
pop
mov
sahf
dec
mov
jp
popa
mov
mov
sbb
pop
fst
cld
je
aam
sahf
lea
stc
mov
lea
movs
pop
mov
jp
xor
dec
out
pop
push
ins
sbb
cmp
adc
and
loop
movs
loopne
retf
xchg
sub
push
mov
adc
pop
fiadd
cmp
cmp
loope
lea
mov
adc
loopne
or
(bad)
rcr
xor
push
idiv
cmp
sub
popf
or
rol
and
inc
data16
fimul
mov
das
movs
cdq
xor
sar
jne
or
es
xor
push
jmp
xor
pusha
in
pop
enter
pushf
push
call
sub
into
adc
xchg
inc
add
popa
xor
or
pop
dec
xor
imul
jecxz
loop
mov
int
sub
popa
ja
nop
idiv
ror
mov
clc
mov
movs
pop
ficomp
lods
or
sbb
xchg
xchg
fld
push
(bad)
ss
and
loope
jmp
or
jne
sub
jle
inc
aam
mov
sbb
push
and
lods
addr16
out
jg
cmp
jmp
inc
adc
popf
movs
push
loop
loopne
and
sbb
xor
popf
cmp
lea
into
dec
in
jmp
das
xor
xor
packuswb
jge
cwde
push
or
cmp
jecxz
inc
push
fcomp
jbe
xor
imul
mov
es
add
(bad)
cmp
(bad)
mov
mov
loopne
addr16
xchg
shr
add
jnp
mov
mov
inc
loope
mov
pop
sub
xchg
push
mov
xchg
xor
sub
or
push
xchg
test
jno
xchg
mov
sbb
mov
mov
mov
pop
rcl
shl
rcr
push
xchg
and
fld
pop
mov
icebp
adc
scas
sbb
xor
scas
(bad)
push
call
ins
xor
pop
lods
pop
aaa
es
xchg
inc
fistp
xor
push
xor
inc
jp
mov
xchg
and
loop
sti
aam
pusha
dec
push
aad
shl
call
mov
sbb
sbb
repnz
add
cmp
push
push
lods
mov
xchg
adc
jne
cmc
div
mov
jns
test
rol
mov
loopne
std
mov
out
pop
dec
sub
call
push
mov
int
jbe
call
jle
scas
xchg
nop
ins
and
sti
fcmovb
nop
lock
mov
pop
mov
mov
jo
xor
dec
cmp
push
push
lods
add
adc
inc
add
pop
bnd
js
pop
out
cmp
add
mov
sbb
retf
int3
addr16
ss
jecxz
inc
out
pop
fimul
retf
ficom
loope
cmp
pop
lods
xchg
cmc
aad
xor
les
and
mov
and
call
add
lods
cmp
leave
test
mov
cmp
sbb
inc
dec
cmps
pop
add
cmps
clc
test
add
call
adc
pop
sti
stc
mov
xchg
pop
sbb
scas
pop
pop
or
or
push
xlat
inc
repnz
fbstp
in
aaa
loop
cmp
mov
sbb
or
lahf
push
and
(bad)
sbb
das
xchg
and
ss
jl
push
mov
xor
push
neg
push
mov
pusha
aaa
hlt
cmp
sar
es
push
jns
sbb
cmp
clc
addr16
outs
xchg
adc
jp
xchg
addr16
lods
aad
cmps
mov
xchg
mov
lods
jmp
cli
push
out
test
sub
arpl
fmulp
sti
movs
jno
xchg
mov
mov
pop
cmovne
cmp
mov
adc
in
add
out
stos
fbld
(bad)
sar
scas
jp
ja
pop
sub
std
loope
cld
jae
cmc
xor
nop
jp
mov
jmp
mov
call
and
and
sbb
jecxz
add
ret
aam
aam
shr
(bad)
cs
jnp
aas
pop
(bad)
call
xor
daa
push
addr16
cmps
in
adc
sbb
(bad)
mov
sub
push
mov
adc
mov
and
inc
push
loopne
cmp
mov
in
jecxz
adc
dec
xor
pushf
int3
adc
mov
adc
or
cli
cmp
xor
retf
inc
or
icebp
mov
ret
dec
add
xchg
sbb
xchg
call
xchg
sbb
fcmovnb
xchg
sbb
sbb
pop
push
push
jl
(bad)
pop
or
push
mov
push
jge
bound
lea
inc
mov
add
mov
mov
mov
popf
sbb
jmp
and
mov
(bad)
jg
mov
inc
(bad)
jmp
rcr
cmc
xchg
mov
sbb
(bad)
nop
sub
and
mov
mov
ret
stc
jbe
sub
dec
out
sub
icebp
dec
fiadd
xchg
mov
fstp
mov
retf
je
lea
xchg
inc
xchg
dec
xor
cdq
pop
call
in
fst
xchg
rcl
adc
push
jns
push
cwde
mov
adc
inc
shl
mov
das
je
sbb
xchg
retf
in
cmp
dec
ror
ret
cmp
mov
pop
inc
(bad)
pop
cmc
push
retf
and
pop
inc
and
retf
push
cdq
les
jno
jae
repz
movs
mov
sbb
into
sbb
popa
add
or
outs
rcl
jnp
mov
add
jp
xchg
cmp
pop
or
mov
push
dec
in
cmps
sub
inc
push
xchg
cmps
rcr
retf
and
and
sub
nop
or
mov
push
mov
sub
push
dec
aas
or
jo
(bad)
jmp
and
pop
retf
cmp
mov
mov
mov
repnz
xchg
in
mov
int
(bad)
pop
or
pop
dec
xchg
mov
xchg
ja
push
inc
retf
cmp
je
xchg
shl
dec
pop
or
pcmpeqd
mov
mov
hlt
lea
cld
dec
cli
dec
lock
push
jmp
ret
aad
lahf
mov
int3
lods
inc
mov
or
out
data16
sbb
jg
push
test
in
push
mov
lahf
jbe
push
lock
fdiv
je
jmp
and
and
mov
mov
out
xor
es
je
rcl
adc
mov
lea
push
not
shl
pop
xchg
sub
and
cmp
jecxz
xchg
or
xor
retf
add
or
mov
(bad)
aas
sub
std
jl
sbb
mov
xlat
ins
retf
hlt
(bad)
or
and
pop
loope
(bad)
xor
cli
jae
push
add
loope
dec
adc
ret
push
jle
or
or
popf
in
out
mov
imul
fcmovb
pop
int3
cmp
push
test
xor
lock
jg
push
fisttp
loop
dec
out
sbb
scas
cdq
lock
adc
sahf
xor
pop
in
leave
imul
fidivr
fcom
xor
ins
add
es
popa
sub
movs
sbb
repz
dec
xchg
pop
pop
hlt
fist
loopne
and
lock
test
test
xchg
or
data16
push
xchg
ja
push
sub
cmp
adc
int
dec
and
dec
nop
in
cmp
adc
and
pop
sub
mov
das
push
jge
call
push
push
xchg
aaa
push
lods
repz
adc
scas
icebp
pop
rcr
test
cld
jns
retf
xchg
jg
stc
imul
sar
mov
or
arpl
mov
test
pop
push
or
ja
call
js
mov
movntq
push
adc
lods
cmps
jae
aas
push
fucomip
cmp
rep
sbb
pusha
stc
push
std
ins
jmp
repz
push
mov
cmp
daa
sub
dec
shr
cmp
cld
dec
fdivr
call
push
dec
push
xor
lahf
rcr
repz
cmps
xchg
cmp
mov
sub
push
add
inc
mov
mov
add
mov
js
dec
and
cmp
jl
pushf
add
or
sahf
and
dec
cld
test
loop
mov
jp
mov
pop
ja
inc
aam
scas
push
scas
mov
test
xor
mov
retf
iret
mov
or
mov
shl
push
push
movaps
add
jl
jg
add
mov
or
cmc
pop
out
call
pusha
sub
push
mov
mov
cmps
retf
or
inc
push
add
adc
pop
sub
xchg
(bad)
pop
mov
in
stos
push
adc
lods
dec
cdq
jno
ins
test
sbb
test
jmp
xor
inc
xchg
pop
xchg
mov
sar
push
in
shl
jb
jle
dec
push
int3
fmul
movs
dec
rcl
mov
movs
pop
sub
xchg
or
sbb
sbb
mov
mov
adc
les
add
mov
leave
and
fist
sub
aam
icebp
in
bound
add
add
ins
popa
cmc
cmp
sub
dec
push
out
add
xor
push
pop
jb
pop
xchg
stos
clc
aad
pop
fwait
dec
pop
mov
std
push
add
adc
fiadd
shl
sbb
ins
fld
and
pop
lods
test
inc
push
outs
mov
cmp
add
sti
in
jnp
jnp
idiv
and
rcr
retf
and
xor
cmps
fldenv
jg
and
into
bts
inc
xor
mov
mov
loop
mov
fidivr
inc
fs
(bad)
jge
shr
(bad)
mov
test
jecxz
adc
ret
mov
retf
jo
xor
add
sbb
mov
xlat
mov
pop
aam
scas
(bad)
cdq
outs
pop
xchg
icebp
xor
pop
mov
aas
pop
jmp
test
imul
push
loop
jmp
xchg
js
adc
push
xor
or
jns
das
sub
mov
sbb
push
xlat
popf
cmp
push
jnp
frstor
xchg
(bad)
dec
test
push
and
and
sbb
cmp
cmps
pop
imul
int
fisttp
cmc
pusha
mov
adc
add
jg
sbb
push
repz
gs
adc
cmp
enter
fcmovbe
je
mov
ja
iret
faddp
sbb
mov
adc
push
pop
punpcklwd
sbb
xchg
cwde
stos
mov
retf
(bad)
popf
add
sub
xchg
ins
out
aaa
xchg
repnz
inc
ror
mov
mov
push
sub
leave
sub
inc
push
push
test
std
lock
fst
sahf
xchg
cmp
cmp
dec
js
xchg
jle
push
int3
cmp
fstp
sub
mov
jnp
dec
jae
int
in
idiv
adc
int3
xor
repz
or
ins
je
jmp
push
xchg
rol
jae
cmp
lfs
pop
inc
retf
cmp
call
cmp
mov
pushf
fwait
(bad)
mov
dec
call
retf
les
inc
adc
fisubr
cmp
(bad)
not
(bad)
mov
mov
mov
push
fcmove
jbe
jb
vpunpckhwd
mov
push
clc
cli
sub
fs
adc
movs
inc
neg
cmp
pop
jnp
fcomp
fisubr
inc
or
fs
mov
(bad)
pushf
stos
dec
les
jmp
or
leave
sahf
sbb
ins
mov
push
sbb
cmp
loope
xchg
xchg
mov
jae
mov
cmps
cmps
movs
push
fstp
mov
in
mov
mov
out
mov
mov
mov
(bad)
scas
push
push
pop
(bad)
fnsave
into
je
aas
push
es
sti
iret
mov
push
shl
or
(bad)
pop
sub
adc
xor
rcr
push
dec
dec
jmp
cdq
int3
outs
mov
inc
mov
(bad)
and
jno
ss
iret
loopne
iret
mov
cwde
cli
add
imul
loop
pop
add
mov
mov
push
xchg
push
mov
les
mov
cmp
mov
cmp
push
fdiv
xchg
pop
jbe
lahf
dec
out
icebp
mov
lock
loope
inc
in
xchg
sub
sahf
xor
loop
jle
sbb
mov
and
mov
xchg
(bad)
xor
add
push
xor
or
adc
dec
inc
dec
push
xchg
ins
js
adc
cmp
jg
cmp
sbb
xchg
jp
repnz
adc
cmc
mov
dec
stos
jle
fwait
ror
mov
jmp
mov
mov
ss
std
dec
shl
add
adc
jae
je
jo
pop
ret
mov
push
fstp
movs
dec
mov
in
sbb
xchg
sbb
mov
cmps
sti
sub
outs
addr16
ins
dec
add
retf
ror
stos
xchg
push
xchg
xchg
mov
push
inc
sub
push
cmp
cmp
mov
sahf
mov
adc
mov
idiv
inc
sbb
into
ror
xor
push
cs
xor
add
sub
(bad)
cmp
mov
movs
cs
jns
mov
cmp
nop
xchg
fucomip
xor
or
dec
test
sar
scas
pop
push
popf
and
mov
fucomip
adc
fcom
xor
ja
repnz
push
pop
sub
push
mov
jne
pop
add
scas
pop
mov
sbb
inc
movs
(bad)
rcl
jle
pop
adc
mov
or
arpl
jle
cli
test
jo
hlt
mov
jns
call
pop
mov
xor
push
xor
sub
dec
sub
mov
loopne
das
jns
push
sub
or
dec
lea
push
scas
xlat
iret
imul
ja
test
xchg
dec
mov
jae
sub
and
pushf
aam
or
call
ja
es
dec
or
or
div
pop
cs
stc
add
inc
rcr
mov
push
push
iret
(bad)
cmp
pop
and
bound
ret
cs
mov
cmp
sub
inc
dec
sbb
es
nop
(bad)
mov
mov
cld
daa
repnz
xchg
sbb
jmp
push
ja
dec
or
xor
add
cmp
jnp
js
loope
mov
pop
int3
inc
ja
mov
clc
cmps
inc
or
push
ret
xchg
jecxz
xlat
mul
lock
lock
sub
popf
adc
ret
xchg
jmp
mov
aam
sub
call
shl
pop
mov
call
ficom
bnd
sub
data16
push
xchg
push
cmp
test
imul
push
mov
imul
jae
gs
pop
les
stos
jno
jecxz
and
add
leave
std
imul
mov
jno
push
enter
sub
cmp
fdiv
mov
test
loopne
adc
pushf
ds
sub
dec
dec
hlt
lods
stc
imul
loop
or
scas
or
int3
outs
icebp
outs
cmp
in
cmpps
mov
adc
mov
push
inc
xor
aas
aad
(bad)
push
jp
scas
rcr
jne
mov
or
push
bound
repz
bound
xor
pop
sub
or
(bad)
cwde
js
xchg
and
call
mov
mov
jo
sbb
adc
or
stos
cmps
neg
adc
sbb
loope
pop
sub
call
daa
mov
call
loopne
test
push
add
pop
ja
fisttp
mov
fimul
movs
scas
stc
cmp
test
fld
mov
vpsubusb
call
xor
pushf
fsub
fst
xlat
or
adc
pop
dec
sub
sbb
jmp
or
repz
pop
cmp
push
add
and
ins
sub
push
mov
xchg
inc
inc
or
(bad)
hlt
loop
lahf
leave
sbb
add
push
xchg
dec
mov
retf
or
jp
je
xor
lds
leave
fidiv
aas
mov
lock
dec
pop
dec
sub
add
lock
or
ret
int3
fdivr
mov
dec
jge
mov
push
pop
jo
repz
mov
adc
in
pop
sub
push
xchg
jmp
mov
inc
push
add
lds
xor
jp
cmc
adc
out
cmps
cdq
mov
in
call
push
dec
push
rcl
mov
sub
bnd
jp
js
in
adc
rcl
cmps
xchg
jg
ss
nop
std
mov
mov
xor
rcr
jle
int3
and
fld
add
jne
jg
int3
test
shr
mov
dec
xchg
xchg
repz
mov
mov
dec
push
pop
mov
sahf
movs
xchg
(bad)
push
inc
test
jne
dec
cmc
js
iret
(bad)
lods
rcl
pop
imul
and
lock
movs
inc
not
push
xlat
in
and
mov
pusha
arpl
mov
leave
push
scas
(bad)
sbb
and
inc
sbb
inc
pop
pop
or
ret
sbb
xchg
cmp
retf
out
leave
scas
test
popa
inc
cmp
dec
sub
ret
jne
sub
adc
mov
addr16
and
(bad)
int3
mov
adc
stos
repnz
add
mov
rcl
cmc
dec
out
mov
fidivr
mov
pusha
fist
dec
test
lods
jp
fidiv
adc
xor
out
adc
jge
dec
enter
xchg
push
xor
and
xor
inc
cwde
inc
sti
mov
pop
sub
(bad)
ins
cmps
sub
mov
int3
mov
cli
cli
not
mov
aas
mov
mov
lock
into
(bad)
outs
mov
mov
sub
mov
inc
ds
shl
stos
leave
jno
cmovbe
and
xor
scas
mov
(bad)
jns
test
mov
ficomp
xchg
repz
ins
sub
xor
pop
scas
mov
cmp
sahf
sbb
repnz
sub
and
or
inc
(bad)
mov
out
xchg
jp
pop
pop
push
push
push
movs
mov
fdivp
stos
je
sbb
stos
pop
xor
add
pop
jbe
jmp
or
push
add
test
sbb
push
jo
xor
mov
jecxz
ds
mov
cmps
lods
push
test
sub
out
adc
adc
adc
xchg
sbb
loopne
mov
ins
lods
lds
dec
outs
enter
pop
sbb
mov
or
and
sbb
lods
cmp
adc
mov
in
iret
push
ins
cwde
stos
mov
cmp
ret
mov
stos
jmp
cld
push
adc
call
jp
lock
xchg
push
dec
lds
mov
cmp
cmps
cmp
or
jmp
dec
inc
adc
xchg
mov
mov
shl
mov
dec
inc
inc
jo
inc
cmp
dec
pop
and
sbb
fiadd
dec
push
mov
test
movs
adc
pop
push
mov
jno
cmp
retf
xor
(bad)
call
das
push
add
mov
mov
div
retf
adc
dec
(bad)
fisttp
clc
jle
das
cdq
xchg
les
sbb
inc
ror
ret
mov
call
push
add
or
fild
out
(bad)
lea
fdivr
cmp
xchg
sbb
mov
imul
cdq
stos
xlat
popf
add
call
inc
cwde
push
cmp
(bad)
out
mov
adc
cs
inc
fisttp
jae
cmc
push
xchg
add
push
mov
aad
and
xorps
jns
dec
(bad)
dec
vcvtdq2ps
test
xchg
pop
and
adc
mov
jne
mov
push
mov
inc
imul
in
scas
retf
dec
gs
outs
(bad)
repz
push
dec
jo
xor
dec
sbb
nop
mov
jo
enter
add
inc
push
les
push
out
inc
nop
stc
inc
scas
and
add
enter
aad
jmp
push
mov
and
cmps
enter
test
dec
mov
cmps
dec
cmp
cld
xchg
sub
jo
cmps
out
adc
iret
sbb
movs
add
adc
xchg
lock
adc
sub
push
rcl
ror
mov
in
mov
mov
sub
sbb
mov
cwde
call
xchg
ret
retf
ret
jns
inc
ds
cmps
ins
jp
pop
push
mov
fist
cmp
les
dec
xchg
push
fs
daa
mov
and
in
and
fs
sub
cmp
sbb
dec
call
movs
fmul
sub
dec
into
(bad)
adc
add
pop
xlat
cdq
xlat
shr
mov
call
adc
xor
sbb
retf
jecxz
jns
fild
sbb
ins
ret
ins
cmc
cmp
std
or
std
pop
inc
loope
adc
xor
stos
sub
arpl
add
loopne
jmp
mov
ss
add
xor
xchg
pop
clc
retf
in
mov
enter
lock
mov
jne
repnz
sbb
push
and
cmp
mov
mov
cmps
push
xchg
mov
cmp
pop
inc
ss
xor
or
cmp
rcl
shr
mov
dec
repz
dec
pushf
xchg
repz
xchg
dec
jb
fdiv
aaa
fcmovbe
pop
aaa
mov
punpckhdq
cmp
push
xlat
js
dec
fdiv
mov
mov
add
loope
fsubr
shr
push
scas
and
cmps
jg
ret
imul
xor
pop
pop
loope
ret
mov
adc
enter
popf
shr
repnz
dec
aas
ins
jmp
mov
jae
pop
mov
lock
pop
psrlq
aad
jo
mov
stos
stos
cmps
in
cmp
xchg
(bad)
into
adc
jae
movs
cdq
je
sti
imul
xchg
pop
mov
mov
xor
sbb
outs
cmc
aad
xchg
pop
mov
retf
xor
lahf
aas
rcr
inc
sbb
mov
aas
pop
cs
fadd
aaa
dec
leave
push
fld
or
sahf
imul
inc
bound
fsub
jb
enter
fxch
sbb
clc
inc
jl
mov
repz
aad
imul
repnz
popa
mov
xchg
(bad)
mov
sbb
data16
les
sahf
pop
popf
test
mov
es
in
movs
mov
sub
and
hlt
rcl
push
test
mov
mov
adc
out
shl
ins
cli
add
cld
retf
sbb
or
fnsave
jge
fwait
rcr
test
repz
mov
pop
xor
mov
push
mov
jmp
call
push
jbe
repnz
cdq
shr
dec
imul
adc
out
pusha
xchg
mov
mov
cmps
fwait
movq
fwait
pop
popa
or
xchg
mov
adc
jmp
adc
push
fisubr
inc
mov
cld
scas
sub
inc
pop
mov
fld
xchg
test
sar
aas
cmp
mov
push
fld
ror
pop
mov
clc
mov
push
out
ins
mov
iret
jbe
mov
loopne
loope
(bad)
repnz
test
ds
sub
out
repnz
mov
into
and
dec
mov
sbb
mov
test
stos
cmps
imul
call
(bad)
adc
test
scas
sbb
stc
je
jne
mov
adc
mov
xor
xchg
adc
xchg
fsub
int
jmp
addr16
mov
test
clc
fdivr
mov
imul
(bad)
dec
pop
mov
int
movs
mov
push
mov
repz
out
dec
rcl
cvtpi2ps
fisubr
call
ins
popa
rsqrtps
jo
loop
push
jns
mov
push
movs
mov
ds
fxch
xchg
add
sbb
test
add
pop
push
and
sub
sbb
mov
jmp
pop
stos
popa
test
enter
aaa
xor
xchg
sub
or
sbb
cmp
je
and
dec
xchg
mov
arpl
adc
xchg
dec
call
retf
inc
xlat
fild
retf
cmp
in
hlt
inc
push
cmc
jnp
aaa
cmps
sub
or
adc
add
rol
push
xor
pop
mov
inc
inc
mov
sub
gs
shl
pusha
push
loopne
mov
dec
adc
shr
inc
xor
inc
cmp
mov
sbb
add
fld
push
add
aas
push
mov
scas
ror
lock
ins
add
(bad)
xchg
inc
mov
scas
data16
xor
sbb
fcmovnb
xchg
inc
inc
mov
xchg
retf
rcl
and
mov
and
xor
test
or
dec
ret
jle
lods
aad
movs
push
mov
retf
in
cmp
lea
or
jmp
cmps
jmp
icebp
in
das
jecxz
mov
or
ja
inc
retf
imul
xchg
sahf
xchg
mov
out
sub
sub
lods
mov
das
into
jno
dec
mov
imul
xchg
xor
mov
data16
loop
mov
sar
loopne
xchg
or
jae
imul
adc
cs
rcr
dec
pushf
xor
out
lahf
movs
cmp
movsx
lahf
pop
dec
push
mov
or
jmp
movs
push
jg
aad
xlat
add
xor
(bad)
mov
or
xchg
aad
(bad)
aam
and
out
fadd
pop
mov
dec
ja
add
cs
jecxz
iret
leave
les
xor
jne
or
test
mov
push
and
push
inc
sub
sahf
sub
pop
mov
cmp
(bad)
sub
(bad)
mov
xor
jp
jb
pushf
mov
xchg
push
dec
jg
cld
popa
aad
repz
pop
(bad)
aas
inc
(bad)
repz
fisttp
xchg
pusha
add
aas
lds
cdq
add
sbb
xchg
mov
sahf
dec
je
ret
lock
clc
cld
div
xchg
ficomp
mov
dec
adc
mov
loopne
xchg
or
pusha
js
cwde
sub
add
out
in
(bad)
cmp
pop
loopne
call
add
outs
or
mov
mov
pushf
adc
sub
and
push
scas
outs
dec
mov
scas
aaa
mov
test
mov
mov
das
pop
cmp
mov
test
xchg
jae
(bad)
vorps
ret
add
xor
xor
fs
adc
inc
mov
inc
fwait
mov
adc
test
mov
(bad)
push
mov
mov
inc
inc
pop
iret
es
pop
jl
loope
(bad)
dec
push
fwait
int3
test
fcomp
cmc
mov
js
aam
dec
push
cmc
jl
inc
jecxz
adc
cmp
sahf
aam
sbb
les
in
retf
mov
cdq
aaa
and
je
adc
call
inc
lods
mov
pop
mov
sbb
jecxz
add
and
or
jno
push
push
fiadd
stc
xchg
ret
leave
repnz
pop
push
int3
dec
test
dec
fisttp
in
sar
mov
dec
inc
adc
add
cmp
(bad)
sbb
ret
xchg
pop
and
xor
(bad)
xor
jo
mov
fucom
iret
xchg
(bad)
jb
into
sub
pop
daa
(bad)
xchg
push
cmp
retf
jne
dec
inc
mov
mov
xchg
xor
test
pop
xor
jle
add
aaa
cmp
dec
mov
jmp
xchg
xchg
sub
lock
xchg
and
jne
div
pop
mov
retf
sar
push
lods
push
lods
or
sbb
(bad)
jge
mov
popa
inc
lods
add
call
ins
out
sbb
clc
mov
or
ins
cld
push
call
fsubr
sbb
out
shr
out
xchg
repnz
or
int
push
aam
out
xor
pop
mov
mov
jo
imul
or
out
scas
out
mov
xor
and
lods
adc
fsubp
outs
pusha
xor
call
mov
aas
jge
add
cld
int
mov
sti
(bad)
into
xchg
jmp
js
inc
pop
sbb
jl
or
(bad)
nop
sub
jne
jns
jle
and
rcl
jno
fstp
outs
adc
pop
pop
sar
fdivr
leave
pop
jl
pop
sahf
popa
cmps
pop
mov
jns
sahf
sbb
push
sub
mov
mov
repz
cmps
repnz
xor
jl
stos
cdq
call
jge
ret
adc
mov
(bad)
mov
mov
dec
fimul
dec
aad
loope
je
mov
dec
lds
cmps
mov
dec
mov
loope
fisttp
mov
lods
adc
mov
aaa
jle
xchg
push
out
cmc
jge
sbb
ja
push
jae
pop
das
loop
aad
cmp
ss
imul
test
fidivr
fistp
or
dec
pop
outs
adc
inc
sbb
imul
push
call
push
cli
or
retf
push
xor
mov
es
outs
outs
iret
lock
dec
inc
dec
xchg
data16
adc
jmp
dec
cmp
pop
inc
out
sub
add
pop
data16
(bad)
push
mov
fistp
mov
mov
add
cli
xchg
in
fsubr
jle
ins
dec
int
push
cmp
jg
in
mov
imul
adc
cmp
sbb
adc
fstp
and
popa
cmp
mov
test
and
and
movs
pop
aas
jb
cdq
out
in
(bad)
daa
cld
arpl
inc
inc
repnz
mov
sub
jmp
sbb
push
or
and
xchg
mov
out
iret
push
std
cmc
dec
pop
mov
xchg
outs
xor
mov
leave
jae
adc
dec
das
jns
jb
pop
mov
lds
sub
iret
ret
sti
pop
pop
mov
sbb
ret
mov
sti
adc
into
push
adc
popa
push
daa
xchg
out
mov
jnp
sbb
jmp
test
addr16
push
lock
jecxz
dec
mov
push
sub
push
std
imul
and
fisttp
jno
cmp
test
and
scas
inc
imul
jbe
xor
cli
pop
and
stos
test
inc
jb
aaa
call
les
lock
mov
cmp
inc
or
div
xor
lahf
pop
sub
push
inc
movs
data16
xchg
stc
push
sbb
pop
inc
lock
shl
cmp
sti
js
xor
test
lods
inc
xor
scas
ss
push
inc
adc
in
aam
and
jnp
sbb
loop
jo
inc
jne
stos
cmp
cwde
adc
cmp
cmp
lea
push
sbb
push
out
jecxz
fdiv
mov
stc
inc
inc
sahf
mov
stos
addr16
jbe
ret
mov
cmp
or
cmp
ss
adc
mov
pop
cmp
pop
sbb
add
inc
js
(bad)
ins
pop
rcl
ret
cmp
sti
cmp
in
popf
jp
mov
mov
cs
mov
jl
test
cmp
or
dec
neg
xor
cwde
xor
inc
dec
stos
sub
sar
repnz
pushf
jp
lock
adc
xlat
fs
jns
jns
push
or
xchg
cld
push
mov
pop
inc
sbb
inc
adc
retf
push
std
xor
mov
xchg
sbb
retf
fs
xchg
or
push
dec
rcl
jle
cmc
and
xchg
iret
sbb
mov
push
clc
cmp
imul
xchg
mov
lods
clc
test
pop
sub
inc
adc
cmp
ins
dec
cmp
mov
mov
sbb
xchg
push
inc
jne
and
pop
sar
and
fdiv
jns
rol
cmps
cs
or
movs
adc
sub
sub
in
xchg
dec
out
sbb
push
or
pop
jo
xchg
xor
fnstenv
push
dec
and
jp
hlt
int3
retf
scas
imul
push
adc
mov
icebp
ss
mov
adc
mov
jg
sbb
add
and
adc
sti
dec
int3
mov
cld
jmp
out
lahf
retf
cmp
xchg
enter
ret
outs
jns
sub
inc
cmc
mov
pop
hlt
fsubrp
aas
stc
adc
movs
fld
movs
and
sub
inc
and
and
sar
mov
lds
sbb
mov
mov
cmc
pop
push
and
add
fcom
lahf
mov
xchg
cmp
out
aad
jecxz
lock
shl
xor
lahf
pop
or
gs
jae
cmp
stos
gs
mov
adc
mov
or
gs
push
push
aad
out
push
xor
rol
aam
(bad)
pop
adc
jae
aam
sbb
or
pcmpgtw
lea
shl
(bad)
xchg
add
ins
jl
mov
inc
inc
in
out
fild
jb
adc
xchg
call
sbb
add
lahf
jnp
ins
sub
lock
adc
idiv
sub
in
aas
add
dec
mov
ins
mov
jb
je
(bad)
pop
dec
outs
jle
ret
test
mov
jmp
test
loopne
cmp
jae
in
retf
ins
sub
mov
push
mov
in
jnp
adc
fcom
jge
test
xchg
xchg
aaa
dec
add
test
sub
jg
sbb
push
xor
mov
addr16
pusha
xor
imul
push
leave
test
out
inc
and
dec
test
sub
cdq
or
in
sub
stos
sub
cmp
fnstcw
mov
jno
fwait
fs
mov
and
push
dec
sub
shr
rcr
jl
xchg
dec
loope
xchg
adc
jmp
sbb
sbb
xchg
mov
inc
in
pop
jecxz
jmp
(bad)
movs
cdq
aaa
or
aad
loopne
lds
pop
inc
mov
jno
shr
daa
outs
(bad)
or
dec
and
sbb
(bad)
mov
adc
jmp
add
jo
or
sub
imul
aam
cmc
mov
inc
xor
out
jmp
dec
xchg
fadd
rcl
loop
adc
xchg
xchg
jmp
xlat
aaa
jle
pop
adc
ror
push
or
push
in
pop
int
aaa
les
cld
nop
dec
inc
cmp
cs
jg
mov
int
loopne
push
ins
add
pop
and
inc
rol
fucomp
shr
int
ins
fcmovnbe
mov
jbe
xchg
adc
or
ret
sub
daa
jle
sub
push
adc
scas
mov
xchg
(bad)
push
cmps
add
sub
fcomp
daa
call
call
add
scas
iret
push
loop
hlt
fstp
inc
cli
dec
cld
sahf
jmp
clc
adc
(bad)
lods
and
push
loopne
inc
mov
push
push
sbb
xor
cmp
sbb
adc
mov
das
leave
jge
retf
cli
sbb
adc
enter
mov
(bad)
mov
xchg
es
pop
inc
xchg
out
inc
outs
cmc
pop
shr
mov
sti
inc
rcl
in
adc
pushf
stos
movs
dec
cwde
mov
test
mov
iret
adc
mov
neg
jmp
sbb
cmp
mov
call
in
sbb
cmp
sbb
mov
repnz
push
pop
(bad)
(bad)
push
lods
inc
lahf
outs
lods
mov
fiadd
pusha
push
call
add
gs
mov
adc
aad
push
popf
popa
sub
sub
mov
cmpps
mov
inc
sub
cmp
pop
pop
jecxz
std
adc
or
dec
es
(bad)
cld
jns
mov
cmp
popf
jmp
mov
add
repz
push
xor
sub
mov
hlt
push
icebp
loopne
aas
and
cmp
dec
imul
lods
fisttp
mov
fisubr
fwait
pop
push
dec
das
and
adc
xor
jp
mov
push
in
retf
jge
xchg
add
or
rcr
pop
push
lahf
pop
data16
fmul
jg
cld
lock
bound
mov
mov
sbb
popf
das
push
lods
cmp
out
repz
les
arpl
inc
xchg
or
and
dec
icebp
xchg
leave
retf
ror
js
push
dec
adc
mov
push
xor
leave
dec
add
add
push
int
adc
add
cli
jnp
(bad)
mov
xor
mov
jno
call
and
data16
push
imul
inc
jb
xchg
dec
jle
or
and
mov
je
sbb
adc
lods
or
xchg
(bad)
sar
ds
sub
mov
lahf
outs
jle
jge
imul
adc
pop
xor
and
or
out
push
ficomp
jo
mov
ds
mov
ds
or
rol
add
mov
push
jns
lods
or
sahf
das
test
stos
mov
sbb
daa
fmul
pusha
sti
jns
add
sti
je
xchg
fadd
repz
xchg
call
mov
adc
push
js
add
adc
add
mov
jno
add
mov
jg
sbb
jns
out
nop
dec
loope
ss
retf
cmps
push
fnstenv
jnp
(bad)
div
lods
in
call
cmp
xchg
xor
or
adc
cli
(bad)
adc
add
aas
addr16
shl
pushf
dec
mov
fsub
in
arpl
xlat
jle
leave
jae
or
pop
shl
ins
mov
adc
(bad)
stc
shr
aad
ja
cmp
mov
mov
std
inc
fwait
idiv
or
js
xchg
jmp
gs
ret
and
out
sub
xchg
fidiv
mov
cmps
pop
lods
cli
data16
cwde
push
mov
sbb
cld
fstp
mov
jg
push
out
icebp
add
push
jmp
lock
xchg
push
ins
jl
add
jae
outs
js
or
jne
pop
call
into
iret
inc
pop
and
xchg
jl
out
cmp
cmp
mov
js
or
mov
(bad)
in
cmp
js
in
(bad)
sbb
cmc
mov
pop
fnstenv
add
jle
imul
adc
div
cmp
xor
cmc
push
mov
jnp
mov
sub
shr
jbe
xchg
xor
mov
jb
and
mov
ds
inc
dec
lds
jo
clc
fcom
cmps
fnstcw
loopne
addr16
inc
lahf
stos
int
sti
xchg
cmps
xor
dec
cwde
shl
xchg
mov
lock
sub
jecxz
xor
and
mov
clc
ds
fstp
push
xchg
(bad)
loope
or
sbb
xchg
and
or
adc
lahf
outs
mov
mov
and
stc
jno
add
retf
pop
popf
xor
loope
xor
push
xor
and
xchg
or
push
push
fdivr
pusha
or
fistp
lds
jbe
or
cmps
sub
lea
add
in
xor
dec
sahf
ror
leave
in
pop
pop
mov
pop
sbb
fisttp
sbb
add
and
mov
xor
adc
xchg
arpl
mov
pusha
es
or
test
jo
push
das
retf
pop
int
xor
and
xor
rcl
push
test
das
loop
mov
jae
pop
fild
mov
xchg
or
jmp
inc
and
xchg
dec
ret
xchg
sub
ror
mov
jae
addr16
sbb
jae
push
push
sbb
cld
jo
stc
xchg
or
add
hlt
sbb
xor
(bad)
enter
and
xchg
shl
inc
dec
jle
out
cdq
fidiv
outs
shl
push
or
bound
int
fldenv
fmul
(bad)
push
lods
jmp
scas
rcr
inc
stos
cdq
xor
call
jl
or
xor
inc
adc
movs
mov
sbb
sub
jno
mov
inc
lods
mov
dec
mov
adc
and
mov
das
cdq
add
or
(bad)
je
outs
fistp
and
xchg
push
sub
pushf
fmul
in
sahf
hlt
and
call
mov
cwde
popf
mov
adc
(bad)
fnstenv
adc
sub
push
mov
mov
loop
inc
mov
or
jns
in
or
push
outs
cmp
cld
(bad)
push
arpl
scas
jne
ret
mov
shr
mov
mov
and
or
dec
pop
repnz
push
popa
aam
inc
sti
and
sbb
inc
xchg
movs
adc
push
gs
cmp
(bad)
push
cld
push
dec
mov
ja
jne
gs
jle
and
mov
inc
lea
push
dec
int
and
sti
xor
mov
mul
test
fs
adc
jl
xor
cmps
mov
cli
dec
or
mov
xor
add
(bad)
or
inc
inc
sbb
inc
mov
inc
or
mov
push
pop
lods
mov
shl
enter
xchg
sbb
xchg
popa
mov
scas
and
jmp
xchg
nop
jmp
popf
jo
out
fisub
aam
mov
ror
xchg
aaa
aas
fldl2t
(bad)
dec
jp
ins
jne
add
clc
push
jp
add
mov
push
pop
leave
gs
pop
repz
aas
push
add
mov
add
mov
xor
ret
mov
(bad)
ins
ja
test
pop
cmp
pop
sahf
pop
dec
lods
call
cmp
loop
mov
jmp
and
and
mov
pusha
push
scas
outs
repz
push
push
dec
loop
xlat
mov
push
stc
adc
repz
sahf
loop
pop
or
ret
pop
dec
sar
(bad)
ins
call
aaa
ja
mov
test
push
iret
lock
inc
loope
dec
sbb
neg
int3
jnp
in
adc
cmp
cmp
sbb
lahf
xchg
std
mov
xchg
dec
xchg
test
aad
mov
ficom
mov
cmp
setle
outs
sbb
popa
shl
iret
mov
leave
cmc
jbe
mov
int
mov
stos
shl
jg
repnz
mov
dec
or
cmps
and
dec
mov
shr
retf
inc
adc
pop
jmp
sbb
ror
mov
ds
jle
push
aad
mov
xchg
rcr
ss
xchg
out
add
fwait
cld
jae
push
or
pop
xchg
repz
cmps
or
adc
jae
popa
pusha
ret
stos
dec
movs
in
push
in
lock
data16
shl
leave
pop
ret
or
add
mov
retf
leave
fstp
addr16
stc
retf
cmps
mov
aaa
adc
call
jbe
pop
outs
sbb
pop
(bad)
mov
push
xor
pop
adc
aad
push
movs
or
popf
scas
mov
icebp
mov
mov
push
mov
jmp
mov
pop
push
std
pop
loop
movs
lea
ss
clc
ficomp
dec
sti
in
jmp
call
arpl
out
fnstenv
sti
or
xchg
pop
shl
shl
xor
fs
adc
or
out
ins
pop
xchg
clc
mov
sbb
lods
dec
jle
mov
adc
pushf
jmp
mov
jb
jne
mov
xchg
sbb
and
cmp
lds
sar
dec
and
out
push
push
and
mov
sub
and
or
or
out
fild
mov
mov
dec
cdq
pop
(bad)
js
adc
(bad)
hlt
jmp
adc
push
xor
es
pop
not
or
xor
xchg
push
clc
stos
ror
pop
mov
popf
ds
mov
xor
jle
outs
movs
mov
ret
lea
adc
mov
icebp
in
pop
je
jo
mov
pop
data16
fisttp
mov
jp
sti
push
fdivr
adc
add
pop
xor
sbb
clc
mul
enter
mov
xchg
mov
add
sub
add
sbb
inc
mov
mov
jne
pop
jo
adc
xchg
mov
pop
les
rcl
mov
ds
pop
jmp
sub
or
nop
sub
mov
cdq
test
popf
and
cld
bnd
pop
xor
mov
ins
sub
cmp
xchg
or
dec
mov
dec
cmc
retf
sub
mov
cmc
inc
mov
cmps
daa
sub
xor
loopne
sub
lahf
mov
rcl
aaa
scas
xchg
inc
retf
bnd
loopne
xor
es
fsubr
mov
(bad)
jno
dec
in
movs
addr16
jle
jb
nop
cmp
mov
repz
mov
es
pushf
fwait
xor
xor
sub
in
xchg
lds
retf
outs
imul
ret
daa
xor
int3
stc
adc
mov
sbb
cmp
jno
fbld
loope
jae
ror
loopne
push
sahf
test
(bad)
cld
popf
sub
mov
arpl
xchg
push
(bad)
aad
pusha
in
sub
add
adc
push
or
int3
inc
jge
mov
xchg
out
dec
inc
aas
jno
xchg
jl
es
mov
sub
dec
test
adc
sbb
dec
daa
in
and
or
xchg
mov
xchg
inc
add
and
ds
fisttp
and
bnd
cdq
xor
push
nop
jle
inc
std
push
add
sbb
xchg
in
inc
and
(bad)
pusha
dec
sub
and
cmp
ficomp
in
nop
fcom
out
push
test
xchg
add
pop
shr
fdiv
in
aaa
pop
jns
sbb
popa
cmp
test
repnz
hlt
or
adc
jnp
arpl
mov
ret
data16
jno
jl
jmp
call
data16
f2xm1
fistp
test
test
xchg
outs
adc
xlat
icebp
mov
lds
clc
inc
xchg
sahf
loop
push
stos
out
loop
aas
loop
ret
pushf
mov
sbb
ret
xchg
cdq
loopne
mov
aam
enter
fld
pop
cmp
xor
or
(bad)
sbb
hlt
pop
jmp
dec
mov
sbb
xor
and
rcl
das
dec
(bad)
sahf
stos
out
pusha
outs
xchg
cmp
enter
imul
xor
cmp
mov
shr
xor
repnz
out
inc
pop
loop
push
repz
xchg
xchg
push
jbe
shl
or
(bad)
or
jecxz
xor
cmp
into
sti
dec
mov
dec
add
dec
sti
jecxz
jae
sub
adc
outs
sub
push
retf
pop
jge
sbb
mov
adc
repz
xor
(bad)
(bad)
jmp
mov
push
cld
clc
hlt
mov
push
cmp
add
xor
xor
dec
fsub
mov
add
loope
jl
xchg
sbb
cld
dec
stc
push
inc
xor
mov
jmp
sbb
in
(bad)
mov
std
les
daa
ss
jae
sub
push
cmp
das
cmps
stos
repnz
addr16
mov
xchg
jmp
pop
nop
cmp
xor
out
xor
out
iret
inc
dec
ja
add
jbe
xor
scas
xor
add
jle
cld
test
fiadd
mov
pop
ror
cmp
sti
jns
fwait
movs
jmp
imul
sar
ins
sub
xchg
cs
mov
das
mov
jae
fcomp
adc
inc
nop
out
int
outs
pop
xchg
(bad)
mul
retf
jb
shl
add
mov
out
sbb
fwait
adc
sbb
arpl
nop
sub
out
xor
repz
not
retf
xchg
clc
scas
inc
jmp
loopne
ds
ja
xchg
inc
or
lock
ja
pushf
gs
xchg
adc
adc
sub
cmp
pop
stos
xor
cmp
fstp
leave
ret
push
xor
and
enter
outs
cmp
pop
cli
out
jb
ja
mov
not
imul
lahf
mov
xchg
les
in
ffreep
push
fs
(bad)
clc
or
sbb
call
push
add
adc
test
or
mov
outs
fisubr
popf
jmp
jmp
stc
std
or
mov
push
test
aas
dec
fisttp
int3
adc
mov
xchg
pop
shl
pop
xor
mov
sub
mov
mov
xchg
jmp
sub
mov
dec
rol
imul
ja
popf
mov
xor
dec
cmp
ja
jecxz
jge
jmp
lods
arpl
cs
iret
nop
(bad)
shl
daa
into
icebp
inc
hlt
fld
dec
call
sbb
pop
push
mov
or
not
lods
imul
(bad)
clc
jecxz
je
adc
mov
pop
(bad)
adc
test
pushf
mov
or
dec
xor
mov
call
xor
shl
pop
ss
inc
jne
fst
pop
mov
add
into
add
xchg
stos
add
cmp
add
jmp
fnstenv
loope
data16
loopne
jne
stos
pop
and
push
mov
add
aam
out
lods
cmp
jge
mov
pop
push
or
mov
arpl
add
lea
xor
fadd
lods
aas
jmp
cmp
sbb
shr
sbb
push
push
shl
cs
or
add
mov
popf
pop
bound
arpl
mov
data16
mov
popa
mov
fcmovnu
sub
icebp
mov
cli
pop
pop
xchg
pop
pop
neg
dec
xor
mov
mov
lea
seto
pop
inc
fwait
aas
mov
push
and
daa
mov
jl
jae
lahf
pushf
mov
into
sbb
or
pop
mov
(bad)
pusha
jmp
add
mov
sub
push
or
cmps
dec
mov
cmp
adc
mov
mov
mov
mov
outs
iret
cmp
(bad)
lds
push
inc
xchg
mov
push
fwait
add
push
adc
pop
jmp
add
pop
outs
push
pop
pop
mov
push
pop
cli
cmc
xor
add
scas
inc
add
mov
popf
fucomip
popa
mov
test
jp
not
mov
cld
pop
hlt
pushf
shl
push
and
pop
push
adc
scas
mov
jno
out
xchg
jno
push
inc
add
fild
sub
ss
cmp
es
pop
test
popa
or
inc
push
call
std
push
outs
and
add
clc
mov
sbb
or
mov
inc
sub
ror
inc
jg
popa
rcr
jno
mov
js
hlt
jns
push
push
jp
mov
sti
aam
or
and
inc
sub
rol
push
dec
mov
dec
in
jecxz
into
sub
xchg
sbb
push
cmp
into
idiv
xor
and
repnz
add
test
lds
jnp
(bad)
jg
retf
daa
adc
dec
jmp
jnp
sbb
mov
out
cmp
inc
(bad)
and
jns
imul
in
cdq
cli
xor
fucomi
stc
sbb
out
lods
in
lock
stc
push
aas
xchg
int3
scas
ins
push
pop
pop
stc
inc
leave
jns
ins
cli
jno
ins
arpl
fld
xor
in
outs
int3
push
imul
mov
jge
jne
inc
cmp
sbb
sub
or
(bad)
mov
sub
push
fst
cmp
lods
push
clc
jno
push
xor
into
les
(bad)
pusha
ds
neg
std
fild
bound
mov
pop
lds
mov
std
pushf
ins
pop
ja
pop
jns
mov
sahf
mov
in
jge
push
mov
xchg
shr
or
xor
retf
fwait
loope
push
aam
mov
xchg
sbb
mov
adc
ds
bound
aaa
ja
xchg
jnp
pop
mov
fcom
in
ins
adc
adc
xor
cli
icebp
mov
sbb
dec
js
ror
adc
jp
fcomp
aaa
out
cmp
sub
icebp
out
ins
sub
add
nop
push
addr16
les
(bad)
or
mov
lods
imul
push
repnz
xor
adc
mov
inc
mov
xchg
cmps
lods
lds
sub
sbb
pop
icebp
push
cmp
inc
mov
push
xor
test
mov
or
and
jo
xor
and
fucom
jecxz
mov
fcmovu
ret
or
or
aad
loopne
dec
pop
push
(bad)
iret
ds
jmp
enter
cdq
std
in
cs
out
aad
push
por
jmp
mov
xchg
mov
sub
push
cmp
test
cmps
mov
daa
aam
push
xrelease
mov
or
ror
jbe
pushf
or
xchg
sub
cmp
adc
push
sahf
fist
or
mul
aad
int3
lea
push
ss
jb
push
sar
ror
aaa
push
stos
adc
and
or
jns
jb
outs
mov
fisttp
mov
cmp
xor
popa
mov
jo
and
adc
pop
fadd
dec
je
mov
ins
dec
pop
xchg
mov
inc
call
sub
add
nop
retf
repz
gs
sbb
jo
push
xchg
or
outs
mov
mov
add
daa
cmps
mov
add
add
repz
je
sbb
push
mov
(bad)
mov
inc
fwait
jne
ins
rcr
stos
dec
mov
repz
inc
or
fbld
cdq
das
or
movs
inc
xchg
and
or
adc
rol
mov
ss
out
xor
inc
enter
xchg
ret
fs
pop
mov
les
push
ss
sub
dec
ret
mov
jns
jmp
push
xor
mov
pop
sub
imul
ficom
pop
ss
jg
mov
cmc
add
loope
pop
fimul
mov
mov
imul
or
mov
inc
xor
or
popa
and
push
hlt
aaa
sbb
push
test
je
stos
push
adc
loope
gs
stc
jmp
test
cld
jmp
jne
mov
inc
pop
mov
sbb
xchg
and
sti
fisub
movs
xor
pop
arpl
add
and
push
ret
push
leave
mov
cmp
in
or
or
movs
dec
ror
push
fisubr
sbb
add
push
pop
js
es
shr
sub
clc
dec
test
fsub
test
pop
mov
fsub
push
jecxz
xor
out
inc
jnp
and
mov
inc
jl
xor
adc
inc
in
rcr
push
pushf
add
call
cmp
mov
sub
push
or
adc
movs
or
fisttp
fcomp
push
xchg
jmp
mov
in
cvtps2pi
call
add
in
lods
add
jne
xor
push
push
imul
pop
pop
cwde
aam
(bad)
mov
ins
dec
pop
retf
mov
dec
retf
fdiv
fwait
cmp
and
and
pop
mov
sbb
shr
ret
push
add
add
dec
push
cmp
loopne
rcr
sub
cmp
icebp
pop
xor
push
dec
lock
inc
jge
cld
pop
push
pop
mov
jmp
mov
mov
pop
int
jge
dec
cmp
aam
and
pop
mov
push
dec
inc
int3
mov
sbb
jno
cs
ror
mov
fsub
pop
add
mov
mov
or
clc
push
je
jns
test
xor
rcl
stos
push
cli
and
in
push
dec
sub
xor
lods
mov
repnz
or
mov
scas
adc
arpl
ins
sar
shr
cmp
inc
(bad)
je
jmp
cmp
xor
push
lds
in
adc
or
adc
push
leave
test
dec
mov
jge
das
cmp
ss
xchg
xchg
push
fwait
and
movmskps
mov
pop
gs
inc
cmp
mov
rcr
call
int
fiadd
mov
push
add
into
mov
mov
out
jecxz
mov
cmp
test
adc
out
inc
(bad)
xlat
mov
ss
pop
xor
jnp
jmp
cmp
mov
push
push
ret
xchg
imul
mov
sbb
js
and
cmps
and
add
in
sbb
inc
mov
loop
and
mov
jae
jno
in
jg
mov
sbb
mov
add
imul
dec
jno
leave
jnp
test
scas
cmp
pop
mov
mov
dec
pushf
pop
std
test
sub
lds
popf
test
mov
inc
cmp
outs
test
dec
add
in
shl
loope
test
pop
idiv
dec
aas
sbb
data16
fs
cli
jb
stos
es
scas
sahf
out
(bad)
pop
jo
cmp
into
in
adc
arpl
sub
(bad)
aas
lea
dec
add
bswap
add
mov
iret
stos
mov
and
mov
inc
out
lea
dec
bound
add
xor
push
jmp
jmp
sub
pushf
hlt
pop
jae
dec
rcr
push
sar
xor
pop
xchg
sbb
test
mov
jg
nop
daa
das
int3
fist
outs
into
xchg
jg
xor
sar
lea
or
jbe
pop
cs
mov
cs
and
mov
push
sub
push
inc
ret
mov
jmp
fwait
(bad)
std
leave
addr16
jno
sti
loope
sub
les
inc
mov
and
sub
mov
aad
ret
lods
aad
dec
cdq
pop
test
dec
dec
stos
sar
enter
lahf
push
ficomp
outs
fstp
cmp
outs
add
repz
sar
call
dec
add
movs
adc
xlat
aas
sti
int3
xchg
lahf
repnz
jno
or
clc
leave
cmp
out
cmp
sub
jmp
enter
loopne
inc
mov
pop
test
shl
in
jns
les
sbb
rcl
xor
mov
and
fist
mov
stc
add
fist
cmps
hlt
cmp
and
sub
rcl
jae
push
add
lahf
pushf
repnz
adc
and
jge
xor
fs
push
scas
fs
fstp
sbb
rol
or
mov
jmp
outs
mov
xor
lahf
mov
mov
mov
aam
adc
cmp
inc
mov
adc
ins
xor
dec
inc
cmp
(bad)
ss
aam
fstp
sar
ss
push
(bad)
rcl
sub
sbb
xlat
push
lahf
jecxz
inc
icebp
sub
jno
jmp
cmps
dec
sub
loop
inc
and
mov
ret
ror
(bad)
iret
ficom
jmp
push
js
mov
inc
inc
xchg
ret
sahf
jmp
adc
jecxz
mov
js
mov
or
dec
mov
outs
pop
push
nop
jmp
data16
loope
xor
sub
push
or
jg
popf
std
(bad)
fucomip
enter
push
xor
mov
mov
adc
and
push
push
push
cdq
add
fs
xchg
inc
pop
or
adc
add
ins
push
sub
dec
xchg
retf
je
inc
test
mov
pop
into
jle
ror
shl
shl
push
je
in
inc
mov
adc
bound
push
stos
jbe
lds
add
outs
mov
pop
xchg
enter
(bad)
inc
idiv
lods
jne
sahf
and
mov
pop
xchg
aad
sahf
js
and
fdiv
xchg
push
lea
into
push
mov
and
icebp
not
or
retf
or
sub
sbb
fiadd
push
and
cmc
(bad)
ins
jmpw
gs
stc
pop
inc
push
in
jne
cmp
jnp
pop
mov
test
(bad)
lods
adc
scas
inc
(bad)
jae
fiadd
adc
mul
pop
dec
mov
dec
jl
push
mov
fistp
push
xor
or
shl
fisubr
ss
mov
ss
xor
or
mov
adc
or
push
xor
ds
daa
and
push
sub
cmp
iret
mov
push
pop
imul
stos
push
and
mov
aam
jl
or
sbb
jae
test
sub
cmp
jp
rcl
dec
pop
mov
(bad)
pop
sbb
shl
call
cdq
lea
adc
cdq
mov
mov
lahf
into
cmp
adc
or
rcr
cli
sbb
or
cmp
test
jo
push
mov
mov
inc
sub
mov
mov
and
pop
inc
xchg
fsub
mov
inc
sbb
or
or
pop
pop
cmp
je
sbb
out
or
push
sub
push
je
adc
test
ins
icebp
mov
xchg
add
push
movs
push
jp
or
ficom
xor
xor
mov
jae
ret
xor
cmps
sub
call
clc
xor
xchg
out
inc
xchg
and
pop
retf
or
loope
inc
imul
mov
es
ins
sub
or
add
jb
popa
fbstp
mov
packsswb
jo
(bad)
xchg
repz
jnp
pop
and
scas
mov
rcr
pop
pop
jno
outs
mov
es
pop
add
cmp
mov
push
inc
pusha
and
ret
loopne
test
add
gs
xchg
es
cmp
sbb
sub
icebp
cmps
adc
lahf
(bad)
push
inc
add
cmp
loop
cwde
(bad)
cmp
sub
call
xchg
test
repnz
adc
imul
or
das
outs
and
xchg
das
fmul
into
cmp
xchg
xor
dec
dec
into
out
push
jmp
xchg
inc
push
test
ss
sar
ins
cmp
daa
mov
or
push
jno
call
lock
ins
cld
adc
push
rcr
xchg
and
inc
inc
arpl
iret
out
ins
jns
pop
mov
pop
fs
sahf
mov
test
dec
fwait
(bad)
fsub
test
inc
stos
push
push
mov
fs
push
inc
adc
jns
rep
aad
int3
inc
loope
aam
inc
adc
(bad)
out
jns
pop
(bad)
repnz
lods
dec
push
dec
(bad)
ins
jg
sbb
jb
cli
push
fist
pop
lea
dec
enter
popf
shr
int
jo
fistp
add
ja
retf
push
out
not
sub
ins
leave
sbb
inc
add
fs
push
stos
scas
retf
mov
mov
sbb
inc
cmc
dec
mov
or
jl
dec
outs
inc
into
das
fbld
jmp
movs
or
mov
pop
push
lea
mov
push
lock
or
xor
xchg
and
iret
fxch
push
movs
cmp
jmp
dec
or
test
daa
add
xlat
and
jae
mov
xchg
iret
shr
cli
loopne
mov
mov
cmps
cmp
mov
jl
inc
cdq
jb
fs
lock
outs
(bad)
jo
adc
loop
pop
or
sbb
add
cwde
jb
or
rol
inc
ins
mov
hlt
sub
mov
neg
adc
xchg
cmp
mov
cmp
sbb
dec
out
or
and
jae
sbb
jmp
mov
mov
enter
cld
cld
ins
jecxz
idiv
rcr
mov
mov
jmp
js
fistp
leave
mov
mov
cmpxchg
cwde
out
outs
cmp
sbb
daa
cwde
sbb
pop
test
mov
dec
sbb
repnz
bswap
dec
stos
in
out
mov
aam
jne
retf
sbb
pop
and
dec
aam
push
pop
and
pushf
jmp
jns
outs
leave
and
mov
and
aas
(bad)
mov
dec
clc
cs
jge
adc
push
fdiv
dec
xchg
(bad)
xchg
cmp
cmps
jl
jmp
(bad)
adc
mov
push
sbb
xchg
jns
fnstcw
sbb
sbb
and
xchg
jmp
adc
xlat
ins
div
sti
sbb
mov
mov
nop
and
hlt
hlt
inc
into
out
fmul
mov
cmc
enter
sar
outs
ret
jp
sbb
cmp
pop
in
sub
pusha
adc
popa
add
into
push
outs
fistp
inc
dec
push
(bad)
(bad)
daa
leave
cwde
xor
mov
fdivr
lods
popa
add
cli
sbb
sbb
je
jae
jg
fistp
pop
sahf
push
mov
in
and
mov
push
push
stos
sti
aam
xchg
mov
lahf
xor
test
cmp
cdq
or
movs
arpl
or
or
mov
sbb
mov
push
push
mov
repz
inc
sub
xchg
and
mov
pop
into
popf
data16
popf
inc
fstp
out
xchg
in
movs
(bad)
jnp
jmp
jnp
test
fst
mov
sbb
pop
mov
sub
cmp
out
and
or
nop
imul
push
pop
cmps
pop
stc
jecxz
mov
ret
div
in
fdivr
out
stc
outs
dec
push
mov
jl
mov
mov
add
jbe
lods
lea
mov
push
inc
and
cmp
nop
scas
sbb
sbb
lea
and
popa
sbb
xor
dec
xchg
mov
jnp
cli
jne
add
dec
arpl
sub
push
lds
push
sub
lahf
sar
je
mov
xor
mov
mov
jmp
mov
xchg
push
fimul
sar
or
jl
xchg
sbb
out
push
out
rcr
cmps
lahf
ret
ins
cmp
call
addr16
int
pop
inc
or
(bad)
enter
dec
dec
jnp
enter
jmp
xor
cmc
sub
mov
add
sbb
mov
std
push
mov
push
fld
ja
add
shl
jl
aaa
mov
stos
jecxz
xor
and
shl
xchg
int
pop
push
pop
lds
out
loopne
addr16
and
pop
sub
sbb
lahf
nop
mov
push
adc
pop
ret
imul
(bad)
cmp
dec
fbstp
sti
sub
dec
sub
(bad)
fadd
jle
rol
and
pop
adc
movs
xchg
xor
inc
push
data16
mov
pusha
mov
cld
inc
xor
pop
pop
loopne
mov
push
pop
pop
xor
retf
dec
and
in
scas
pop
fst
jo
jno
fidivr
in
repnz
pop
hlt
nop
push
fs
fbld
fld
push
(bad)
pop
in
jnp
daa
dec
jmp
das
sub
cmp
movs
push
sbb
(bad)
adc
es
cmp
xor
sar
mov
and
pop
mov
xchg
lods
iret
mov
stos
jecxz
fs
push
push
push
ja
push
mov
inc
clc
neg
out
movhlps
imul
xlat
xchg
sub
xor
popf
daa
pop
pop
inc
movs
xchg
and
mov
cmps
mov
arpl
jle
das
push
lods
out
xchg
pop
in
pop
mov
aaa
mov
or
cmps
ds
icebp
imul
stos
cmc
xchg
lahf
mov
jo
inc
fwait
xchg
mov
leave
cmp
retf
sub
cmp
sahf
mov
retf
lods
push
xchg
cwde
xchg
shl
jns
jnp
cmp
jo
inc
iret
cmp
inc
or
push
push
out
enter
adc
test
sbb
adc
jnp
lock
out
dec
cdq
aaa
jle
into
inc
jne
into
clc
leave
sub
mov
sahf
push
es
dec
test
retf
inc
add
pop
mov
mov
imul
mov
shr
fidiv
inc
movs
push
fist
and
and
pop
jno
lock
dec
lods
rcr
jle
stos
or
retf
repz
mov
sub
mov
dec
(bad)
cli
inc
(bad)
jmp
cld
stos
or
sub
jnp
or
not
int
mov
arpl
stos
xlat
xchg
inc
mov
popf
or
popf
dec
stc
(bad)
idiv
inc
not
bound
addr16
clc
loope
cs
jb
sub
mov
popf
aas
push
and
pop
imul
mov
jmp
cmp
mov
lock
pop
fbld
inc
fsubr
fisub
inc
jp
xchg
cmc
out
mov
inc
add
xchg
fld
push
sbb
fidivr
je
and
or
je
mov
pop
push
(bad)
mov
retf
mov
mov
mov
mov
cmp
and
arpl
pop
fidivr
jmp
dec
mov
or
loopne
mov
xchg
add
cmp
and
div
repnz
pop
call
call
pop
inc
pop
out
icebp
pminub
scas
sbb
jecxz
cmp
aad
sub
and
push
test
das
add
jo
mov
xchg
stc
test
xor
push
xor
mov
int
xor
inc
jo
dec
dec
or
xor
mov
in
lds
pusha
popa
popf
jmp
sub
push
stos
mov
in
push
sub
or
or
sbb
cmp
dec
cwde
pop
inc
xor
sbb
setg
mov
(bad)
aad
adc
(bad)
and
cmp
jmp
mov
loope
adc
sti
cli
std
aam
sbb
mov
push
dec
xchg
in
std
mov
lods
add
mov
cs
adc
retf
stc
out
sub
ror
mov
lock
add
jle
int3
nop
push
sub
mov
int
mov
sbb
pop
mov
mov
xor
cmp
sub
enter
sub
add
mov
rcl
add
xchg
nop
adc
push
scas
cli
mov
inc
mov
aaa
loope
inc
jmp
mov
mov
jge
sub
pop
pop
or
push
or
pop
push
out
jecxz
in
test
cmp
repnz
jns
ja
and
ins
and
cmp
int
add
retf
push
dec
mul
xchg
jae
not
aam
add
xchg
and
mov
lock
add
test
fadd
mov
pop
sbb
add
imul
bound
rcr
ret
push
push
lahf
pop
push
stos
test
push
shl
push
pop
or
jge
rcr
std
outs
pushf
popf
adc
outs
or
dec
sub
pusha
daa
mov
cdq
mov
addr16
call
pop
sbb
mov
mov
cmp
and
adc
add
jno
add
(bad)
retf
sub
jno
mov
cmps
pop
and
sbb
push
mov
xlat
sbb
xor
mov
lock
add
mov
jnp
lea
mov
imul
int3
ror
jnp
xor
imul
jae
dec
int
(bad)
ret
movs
shl
jmp
mov
sub
mov
cmps
or
loop
stos
inc
fsubr
push
add
retf
ins
pop
ficomp
aas
xor
dec
daa
jmp
test
fsubr
xchg
imul
scas
scas
cmp
push
pusha
je
xor
pop
push
xor
aaa
in
and
and
dec
add
data16
mov
inc
es
or
jmp
pop
cmp
pop
xchg
jbe
push
scas
cmp
mov
push
push
and
and
mov
pushf
sub
lahf
mov
xchg
cmp
test
mov
das
mov
shr
mov
test
xchg
or
xor
mov
cdq
mov
push
cmc
aas
pop
cdq
je
pop
and
outs
jmp
ja
add
xchg
in
fnstsw
mov
mov
dec
mov
das
xchg
fstp
call
pop
sbb
repz
pop
fisttp
inc
retf
bound
dec
loope
mov
xchg
stos
js
(bad)
mov
push
xor
jg
outs
push
pop
add
test
mov
jnp
mov
xchg
stc
or
and
sub
(bad)
adc
push
sub
inc
sbb
xchg
cmp
mov
sbb
dec
dec
(bad)
fbstp
aaa
mov
rcl
movs
pop
mov
push
lahf
or
sbb
dec
push
jecxz
xor
xchg
les
cmp
sub
das
xchg
pop
and
sti
cld
cld
jae
adc
or
imul
(bad)
xchg
or
or
cwde
(bad)
mov
leave
or
(bad)
adc
adc
scas
cdq
jge
aam
stos
jmp
mov
mov
lea
inc
nop
add
sub
fdiv
mov
pop
shr
mov
adc
popf
cmp
(bad)
in
outs
rol
clc
outs
adc
mov
or
cdq
mov
enter
add
push
adc
cli
push
test
outs
or
and
cli
fdiv
jnp
repnz
je
xlat
sbb
add
push
loopne
mov
mov
out
outs
lea
dec
loope
popa
call
xor
outs
sbb
mov
cmp
sbb
sub
xchg
sbb
mov
push
retf
mov
pop
mov
sbb
gs
inc
cmp
push
out
popf
xchg
pushf
push
push
rcl
mov
movs
push
stc
jecxz
dec
dec
daa
outs
je
mov
or
pop
(bad)
in
push
rcr
inc
(bad)
mov
xor
js
sbb
and
pop
loope
test
sub
out
inc
push
(bad)
ficomp
out
ins
and
or
ficom
neg
das
sub
test
mov
jo
inc
sbb
les
mov
push
push
sub
enter
out
inc
add
jne
outs
mov
mov
mov
test
adc
dec
fdiv
sub
ds
ror
sahf
inc
call
dec
loop
and
int
push
ss
sub
in
and
sub
mov
pushf
cld
xor
test
loope
pop
pop
xor
push
daa
and
mov
in
leave
and
mov
mov
xchg
jb
mov
nop
cmp
xchg
xchg
or
jmp
pop
cmp
nop
movs
add
xor
ret
mov
movs
jle
jnp
out
pusha
icebp
jg
stos
cmp
retf
cs
cmp
add
or
pusha
jmp
in
test
fisttp
adc
or
iret
pop
mov
jecxz
dec
rol
repnz
xor
cmp
aad
fsub
shr
or
jb
js
test
loopne
daa
pop
mov
mov
xchg
sbb
inc
jns
call
call
movhps
xchg
and
dec
sub
add
push
jbe
jecxz
cmp
adc
inc
movs
mov
jno
shl
aad
xor
hlt
pop
mov
(bad)
lds
add
outs
outs
mov
push
sub
cmp
(bad)
int
ja
test
xor
mov
scas
push
and
adc
stc
xchg
daa
push
das
(bad)
int3
cmp
cmp
loope
xchg
push
xor
js
mov
stc
pavgb
pusha
mov
jb
dec
xor
dec
jae
outs
dec
mov
jbe
lahf
jnp
push
or
pushf
jl
adc
enter
add
leave
mov
pop
dec
xor
int3
push
xchg
push
jecxz
ins
push
cmp
dec
jle
xor
cmp
jne
push
mov
retf
test
cmp
fmul
or
adc
xchg
xor
cld
jne
or
sbb
cmp
cwde
inc
sbb
outs
mov
dec
mov
dec
jg
dec
pop
call
mov
xor
adc
in
and
scas
push
jne
cmp
and
inc
enter
jge
push
shr
adc
call
bnd
cmps
js
cmp
(bad)
dec
call
pop
dec
sbb
stos
inc
mov
arpl
pusha
mov
sti
xor
jne
ffree
std
jnp
(bad)
xor
fisub
loope
(bad)
enter
cmp
mov
or
cwde
mov
sbb
lods
popa
mov
push
daa
xor
push
les
jmp
pop
aaa
sub
ret
dec
push
and
inc
cmp
jns
or
push
mov
mov
and
pushf
mov
nop
push
stos
xchg
jnp
je
pop
adc
jbe
mov
(bad)
mov
xchg
mov
mov
dec
sbb
add
je
out
pop
jns
test
mov
movs
push
ret
data16
jmp
addr16
sub
pop
int3
mov
and
(bad)
(bad)
hlt
xlat
outs
and
pop
push
xor
xchg
ins
push
mov
(bad)
jae
daa
adc
add
and
mov
push
pop
push
sbb
or
(bad)
push
dec
(bad)
(bad)
jmp
es
dec
sbb
inc
fucomip
add
or
pop
add
adc
sub
ret
cmc
mov
mov
xor
pop
outs
xchg
lds
or
femms
push
cmp
adc
push
in
aas
jns
stos
stos
enter
adc
in
sbb
call
cmp
test
xor
jle
pop
bound
xor
xchg
xchg
scas
dec
sbb
call
pop
pusha
hlt
mov
push
bound
pop
add
repz
inc
push
rcr
xchg
imul
fsub
cmps
mov
jno
sub
cmp
mov
sub
test
sbb
mov
mov
mov
jae
xor
(bad)
mov
add
jno
jae
xchg
mov
jne
iret
mov
and
rep
or
pop
addr16
or
call
sar
adc
test
pop
mov
cmp
out
xor
mov
aas
sbb
mov
repnz
mov
xor
dec
push
ds
jbe
in
enter
daa
push
mov
jmp
imul
stos
dec
mov
enter
popa
xchg
jge
cmps
mov
cmp
stos
sbb
add
mov
pop
scas
cmps
popa
pop
fild
les
ds
lds
mov
icebp
idiv
pop
jbe
dec
ret
mov
shr
jno
aaa
nop
mov
das
enter
pop
or
sbb
(bad)
movs
mov
int3
gs
jo
lahf
xor
pushf
jl
cli
mov
mov
pop
cwde
stos
div
jno
daa
mov
(bad)
imul
test
js
js
inc
inc
mov
fcom
leave
or
dec
sbb
sub
mov
aad
or
push
div
in
jmp
fwait
nop
and
jne
lahf
xor
mov
aam
inc
inc
mov
cmp
xchg
cmps
mov
jae
and
scas
stc
push
arpl
lahf
xchg
shl
xchg
mov
shl
in
push
jns
adc
jle
scas
fistp
push
sbb
dec
dec
pop
mov
loope
test
dec
sbb
jmp
jle
fdiv
in
iret
in
xlat
arpl
addr16
inc
xor
and
test
scas
jb
mov
lahf
inc
aam
add
sar
cmp
mov
inc
call
sub
push
fmul
imul
and
popa
test
iret
sar
int
ins
inc
and
(bad)
xor
repnz
adc
outs
test
fcom
sub
xchg
mov
cmp
(bad)
mov
and
cmp
mov
sub
sti
pop
add
rol
sbb
dec
xchg
cmp
(bad)
sbb
inc
add
daa
enter
cmps
jg
xchg
les
dec
cli
inc
xchg
xchg
jge
rol
xlat
adc
push
pop
xor
jp
sub
and
cli
ja
lea
and
xchg
ins
std
(bad)
cmps
adc
movs
and
or
add
stc
mov
push
popf
(bad)
imul
fs
dec
xchg
dec
lock
cmp
mov
push
xchg
xlat
push
fild
shr
jp
inc
lods
or
adc
dec
clc
pop
popa
(bad)
fld
adc
mov
jge
div
sub
test
mov
push
xor
add
lahf
mov
xchg
arpl
dec
test
inc
jo
clc
or
out
jne
(bad)
xchg
aaa
(bad)
cmps
xor
popf
imul
ror
pop
xor
aad
inc
mov
mov
pop
mov
in
test
xor
xchg
les
lahf
shl
push
add
xor
in
mov
fld
xchg
adc
inc
sti
sahf
xor
xchg
(bad)
dec
enter
aam
add
inc
push
test
mov
pop
hlt
mov
call
inc
mov
cmc
cmp
and
cmps
cli
mov
packuswb
xchg
inc
add
test
push
aad
sbb
dec
repnz
test
and
inc
int3
jmp
es
daa
aad
sbb
jb
xchg
add
hlt
push
aam
ds
clc
jnp
sahf
mov
or
rol
or
or
call
inc
shr
fist
in
ja
bnd
sub
inc
fisub
xor
and
movs
inc
ficomp
dec
push
adc
call
mov
imul
test
pushf
sbb
xor
loop
mov
mov
xor
xchg
pop
xchg
inc
mov
fisubr
dec
loop
frstor
mov
adc
add
mov
xchg
jg
and
test
mul
cmp
sub
jge
mov
xlat
(bad)
xchg
ins
cmp
imul
call
xchg
(bad)
inc
mov
mov
call
jmp
and
mov
lea
or
pop
sub
adc
dec
xor
add
pop
shr
cmc
jbe
test
in
test
mov
jle
jmp
inc
jecxz
dec
push
pop
paddusw
repz
cmp
je
cs
adc
push
loope
mov
fcmovb
repz
xor
ret
pop
and
mov
imul
pusha
mov
jne
cmc
fnstenv
fucomp
or
mov
aam
in
sbb
fdivr
fstp
jo
in
xchg
push
jae
mov
pop
jnp
movs
cmp
test
jno
xchg
push
adc
mov
lahf
push
outs
imul
stos
xchg
mov
mov
sbb
cmp
fisub
pop
and
in
push
ins
ja
mov
jb
xchg
and
dec
mov
pop
jae
cs
push
les
add
mov
push
out
sub
movs
popf
cmp
(bad)
(bad)
scas
fld
hlt
sbb
dec
push
jbe
(bad)
sub
dec
sub
push
cld
sub
sub
push
fbld
shl
call
dec
or
out
sahf
das
sar
pop
inc
mov
js
repnz
aad
mov
add
inc
loopne
sub
ins
mov
add
test
inc
inc
imul
out
ret
adc
push
arpl
or
jge
stos
iret
or
ja
retf
jecxz
xchg
cmp
pop
xlat
mov
in
xor
cmps
or
into
dec
lea
jecxz
cmps
pusha
mov
jnp
cmps
sub
test
add
aam
int
sub
iret
fisub
in
mov
jno
sti
adc
mov
icebp
ror
mov
gs
mov
pop
inc
dec
ss
pop
aas
xor
sub
das
jge
cmp
sbb
jmp
adc
imul
add
pushf
fst
popa
pop
aas
xchg
lea
mul
cmp
bt
push
jmp
add
pop
fucomi
inc
sbb
repz
popf
stos
pop
in
xchg
imul
scas
cwde
rcr
pop
mov
cmp
hlt
push
add
movs
aam
mov
stos
cmps
jmp
xchg
add
mov
and
fdivr
stos
xlat
jno
xchg
enter
dec
std
cld
pop
aad
sbb
sub
sar
inc
movs
dec
jns
pop
xlat
jns
pop
ror
jecxz
and
xor
mov
sub
repz
push
pop
dec
cmp
xchg
or
mov
fadd
sub
jo
retf
repnz
test
jne
jbe
lahf
lahf
mov
stos
jno
mov
loopne
xchg
mov
inc
push
js
xor
xchg
sub
lods
sub
rcr
mov
(bad)
dec
sbb
pop
aas
dec
dec
cmp
push
daa
lods
into
cmps
xor
(bad)
mov
pop
xor
scas
jle
jp
test
jb
or
jne
inc
retf
cmp
mov
es
mov
clc
push
and
push
adc
and
(bad)
mov
mov
daa
iret
pop
or
pop
in
push
xor
shl
push
popa
or
mov
and
ficomp
test
ret
mov
(bad)
das
movs
push
mov
test
or
shl
test
loop
mov
xchg
ret
shl
(bad)
jecxz
or
in
enter
lds
das
push
ror
and
test
mov
and
jne
sub
cmps
inc
xor
mov
adc
daa
push
data16
cmc
pop
cmp
xor
dec
jo
pop
bnd
mov
je
out
cmps
(bad)
ss
adc
aas
sbb
ja
mov
test
adc
fadd
sar
mov
punpckhbw
mov
or
jae
dec
pop
sbb
dec
es
jnp
dec
(bad)
xchg
cmp
push
add
or
movs
xchg
bound
add
les
or
ins
cmp
je
mov
sbb
pop
add
in
add
inc
(bad)
outs
xchg
in
aas
xor
or
int3
push
or
mov
jmp
fidiv
in
or
xchg
outs
cli
movs
sub
jl
outs
or
push
mov
xor
call
dec
bound
inc
inc
int
(bad)
neg
outs
aaa
dec
cmp
xchg
xor
mov
scas
jno
sub
stos
int3
and
xchg
inc
sar
mov
movs
add
scas
mov
(bad)
xor
stc
jecxz
in
push
loopne
mov
shl
mov
jbe
jp
dec
jns
in
push
jg
pop
mov
jne
dec
pop
outs
cld
xchg
mov
jb
fdivp
inc
lock
cmp
cmp
lea
arpl
dec
popf
mov
test
xor
movs
bound
adc
das
shl
and
pop
push
and
js
and
jb
enter
lea
in
(bad)
fild
push
(bad)
cmp
das
cmp
pusha
xchg
pop
retf
and
jnp
and
mov
mov
aas
sahf
sub
mov
fild
ds
jp
lahf
jge
idiv
fild
rdtsc
jecxz
inc
repz
mov
leave
sub
xor
aaa
and
mov
ror
xlat
dec
repz
pop
scas
call
(bad)
into
or
cwde
jmp
fist
jno
add
in
mov
hlt
xchg
sub
inc
or
lea
aad
push
fisttp
pusha
add
sbb
pop
mov
test
adc
mov
test
fdivr
(bad)
mov
rcr
gs
popa
addr16
cmc
pop
test
mov
pop
xor
repz
loopne
inc
call
mov
in
out
pop
jmp
dec
fiadd
mov
xor
stos
rcl
leave
xlat
pop
mov
inc
xchg
ss
sahf
add
retf
addr16
mov
pop
inc
gs
sbb
and
mov
call
nop
mov
pusha
es
shl
pop
push
in
out
push
sub
push
jnp
rcr
cwde
pusha
fisttp
(bad)
repz
xchg
pop
cdq
ds
nop
enter
dec
fst
dec
test
inc
repz
movs
push
pop
sub
adc
xor
dec
retf
mov
lahf
push
ret
pop
inc
jecxz
cli
loopne
inc
mov
jno
jae
or
push
or
jmp
xor
mov
pop
pop
cwde
or
xchg
push
(bad)
adc
scas
pop
js
mov
mov
ja
or
pop
and
xor
(bad)
in
xchg
pop
and
ret
mul
mov
dec
adc
jns
xadd
jle
mov
push
jle
loop
jo
adc
dec
xchg
in
sahf
(bad)
mov
sbb
pop
test
mov
xchg
mov
cmp
pop
pusha
push
sub
sbb
mov
xor
(bad)
pop
sbb
hlt
mov
add
cmp
scas
push
cmp
leave
cmc
adc
aas
push
dec
int
xchg
pop
neg
idiv
shl
mov
dec
mov
mov
in
xor
mov
cmps
sti
mov
mov
push
inc
das
pop
ins
je
js
adc
mov
dec
jl
movs
lea
inc
pop
push
jmp
popa
loopne
xor
or
or
cli
test
lahf
retf
repnz
(bad)
call
arpl
sbb
or
lods
mov
sbb
push
jle
dec
stos
lods
mov
and
ds
pop
xor
jg
jle
mov
test
aad
sbb
cmp
pop
pop
je
or
cdq
mov
aad
xor
dec
loopne
push
ret
hlt
data16
adc
mov
jl
in
(bad)
les
mov
test
idiv
inc
xchg
pop
test
in
enter
ins
and
mov
pop
lock
or
lods
fistp
mov
ins
cs
std
add
pop
shr
mov
dec
(bad)
jmp
push
xchg
dec
je
dec
ins
mov
push
inc
mov
sbb
dec
push
aaa
imul
cmovno
dec
mov
inc
out
loopne
mov
sub
mov
arpl
xchg
xor
retf
xchg
test
xchg
outs
out
sbb
mov
inc
stos
imul
jns
pop
int
enter
push
adc
clc
mov
mov
sahf
xchg
and
fimul
test
cmps
add
add
cmc
dec
push
push
or
adc
cmp
test
xor
movs
xchg
pop
jp
movs
cmp
pop
mov
sub
fld
icebp
push
setno
loop
push
jns
jae
and
push
rcr
mov
scas
lahf
push
push
cli
adc
fcom
(bad)
loop
push
inc
mov
mov
call
push
mov
retf
je
out
pop
xor
cdq
sti
mov
pop
sub
(bad)
mov
and
shr
cwde
cmp
imul
jge
mov
add
mov
xor
mov
push
dec
ja
dec
lock
dec
pushf
jle
out
bound
mov
idiv
(bad)
je
xchg
mov
dec
sbb
es
stos
inc
pop
xor
mov
fldenv
cmps
xor
popa
and
retf
push
enter
icebp
repz
or
jg
dec
movs
js
out
shl
(bad)
aad
xor
cdq
scas
call
jg
sub
jle
bound
dec
pop
cmp
cs
xchg
xor
and
cdq
rcl
ins
inc
jle
frstor
in
mov
add
fild
leave
pop
cli
lods
fsub
mov
mov
add
push
pushf
pop
sbb
inc
aaa
lock
jg
or
jns
lahf
adc
pop
xor
inc
xlat
jbe
cmps
cdq
mov
out
adc
or
xor
call
cmps
loop
push
and
mov
or
mov
scas
mov
mov
push
enter
addr16
push
push
outs
fadd
pop
out
cdq
or
ret
shl
imul
pusha
lea
daa
(bad)
sbb
sbb
cmp
cli
data16
push
(bad)
jnp
ins
aas
cdq
push
ret
in
push
les
xchg
or
movs
dec
cmps
fcomip
inc
inc
call
loopne
cmp
jmp
cmp
repz
inc
in
out
cmp
js
test
fadd
fwait
xchg
sbb
mov
add
daa
stc
mov
test
mov
std
inc
sbb
inc
fs
(bad)
jno
cli
dec
call
xchg
test
(bad)
aas
push
xchg
push
lock
fincstp
(bad)
adc
sub
xchg
inc
shl
add
(bad)
pop
pop
mov
xchg
sub
sbb
jae
(bad)
dec
add
or
shl
sbb
ja
outs
cmps
push
aam
or
push
cwde
pop
(bad)
push
into
sbb
sub
mov
(bad)
test
mov
jb
pop
jl
aam
mov
or
shl
cs
out
hlt
cdq
in
and
(bad)
gs
cmp
fsubr
clc
jle
stos
movs
cdq
cmps
lods
retf
loop
pop
retf
out
es
hlt
dec
and
(bad)
lock
loopne
jle
retf
cmp
pop
mov
jno
pop
into
and
sbb
dec
addr16
mov
xor
repnz
shl
loope
inc
fwait
cmp
inc
adc
xor
jmp
add
mov
mov
push
ds
push
test
fs
or
inc
lahf
js
(bad)
hlt
pop
loope
sub
les
jmp
or
mov
mov
sub
in
adc
arpl
ins
xor
dec
jge
xor
mov
mov
jle
mov
lods
jmp
push
mov
mov
aam
loope
popa
lods
loope
test
mov
ins
push
out
jb
xchg
(bad)
push
in
cmc
(bad)
inc
scas
(bad)
push
fbld
out
mov
mov
jg
cmp
ret
rol
mov
sbb
jp
and
aam
adc
ss
jl
cmp
test
js
retf
(bad)
fst
mov
jmp
push
rcr
loop
dec
inc
adc
nop
cmp
cmp
jmp
jns
push
bound
xor
sbb
pop
ret
in
fmul
or
lock
std
add
mov
adc
push
jle
dec
rol
pop
sbb
push
cmps
sub
xor
xchg
int3
pop
push
fwait
je
xor
cmp
jns
popf
dec
je
in
es
(bad)
mov
jne
fs
sbb
push
or
mov
lea
rcr
sub
pushf
cs
mov
adc
retf
into
dec
movs
dec
jl
in
jecxz
fs
shr
adc
jp
iret
ficom
scas
loope
dec
pop
cdq
xchg
repz
or
cmp
push
pushf
fwait
push
je
push
inc
stos
imul
adc
je
xchg
std
dec
in
ins
enter
cmp
mov
aaa
dec
pushf
dec
add
rcl
mov
pop
rcl
cdq
xor
mov
imul
fdiv
push
leave
mov
bound
out
xor
sbb
xchg
cmp
mov
or
mov
jbe
push
fisub
xchg
stc
dec
add
mov
rol
xor
shr
mov
mov
shr
dec
ins
xchg
stos
inc
popa
cli
cmp
add
sbb
call
mov
iret
outs
scas
sti
in
mov
mov
jbe
dec
lock
stos
jne
mov
dec
mov
loopne
sbb
fisttp
sub
jno
add
pop
test
lds
movs
mov
mov
mov
xor
repnz
pop
lods
push
jecxz
fmul
lods
ret
jmp
xchg
sar
inc
gs
pusha
xchg
inc
mov
fsubr
mov
ins
mov
adc
es
or
pop
popf
aas
lods
aas
lods
cmp
(bad)
xchg
pop
or
in
mov
fmul
stc
and
hlt
mov
and
fcomp
push
mov
scas
imul
pop
push
outs
jmp
mov
lea
bound
icebp
bound
jmp
mov
add
scas
dec
cmp
inc
sub
push
(bad)
scas
outs
retf
push
mov
into
loop
mov
push
jbe
jge
push
call
sti
push
inc
and
and
cs
mov
je
or
call
test
xor
clc
ret
sbb
jecxz
movs
xor
ffreep
cs
shl
fiadd
mov
retf
jne
cdq
pop
(bad)
ins
cmp
pusha
jmp
(bad)
aaa
inc
gs
sbb
mov
xlat
xor
std
mov
loope
mov
xchg
push
je
jae
call
mov
push
les
add
adc
cmp
mov
lock
mov
push
sbb
push
jge
sub
jmp
jp
(bad)
mov
push
mov
shr
jae
in
fnstenv
cld
xor
mov
xor
hlt
fld
pop
ret
cdq
fwait
je
imul
movs
cmp
scas
shr
test
and
sbb
call
in
mov
std
jle
mov
aam
push
jp
mov
movs
dec
pusha
mov
mov
call
int
add
xor
(bad)
shl
call
mov
enter
ins
icebp
aaa
mov
xchg
xchg
test
sar
and
push
(bad)
jp
bound
add
push
mov
stos
add
retf
sub
push
and
adc
ret
xor
test
mov
stos
ds
out
pushf
mov
adc
aam
xor
test
pop
pop
xchg
std
xor
call
add
mov
rcpps
xchg
cmp
push
(bad)
into
pop
and
outs
outs
pop
test
outs
dec
dec
pop
mov
repz
out
data16
mov
add
add
fiadd
lods
pusha
jle
addr16
push
push
outs
jle
vpminsw
jo
ret
push
in
in
test
add
mov
das
and
pop
inc
shl
fdivr
jb
sbb
arpl
jae
pop
shr
std
jb
sahf
or
outs
fbstp
into
leave
fsubr
es
(bad)
fsubrp
repz
mov
rcl
test
jmp
(bad)
call
shl
adc
mov
in
lods
xor
push
stos
mov
je
mov
rcl
movs
stos
bound
jb
shr
xchg
aad
arpl
add
mov
into
or
cmc
xchg
test
movs
add
mov
cmp
xchg
addr16
gs
dec
mov
(bad)
add
hlt
xchg
cs
cmp
pop
hlt
adc
int3
push
inc
inc
mov
shr
dec
stos
lds
cmp
repnz
and
div
test
cmp
scas
xor
pop
das
(bad)
addr16
mov
cmp
lods
mov
aaa
mul
adc
aam
jmp
clc
popa
inc
cdq
jb
jns
fcomp
rcl
pushf
aaa
fmul
sti
nop
inc
push
xor
jb
push
stos
inc
jecxz
pop
clc
nop
cmp
stos
call
loop
push
popa
cmp
push
pusha
jge
sbb
(bad)
call
dec
jp
pop
lods
cmp
fcmovb
jp
int3
cdq
push
or
inc
arpl
lods
dec
pusha
push
nop
fdivr
mov
cmp
inc
aam
arpl
lods
popf
sub
aas
push
and
and
cmp
loop
xchg
push
scas
pop
xchg
test
and
mov
adc
dec
and
ss
enter
ins
(bad)
sub
aaa
jo
add
stc
inc
jl
jne
xor
jg
pop
or
pop
mov
inc
jmp
(bad)
clc
fst
dec
pop
and
(bad)
out
inc
out
sahf
jp
mov
in
cs
inc
(bad)
jmp
dec
mov
push
adc
push
inc
add
icebp
sub
jl
fdivp
lods
int3
or
or
and
in
fld
mov
outs
daa
mov
xor
mov
out
or
es
leave
adc
adc
add
cmc
mov
sub
aas
repz
xchg
fstsw
jnp
les
stos
mov
mov
retf
pop
jmp
or
out
mov
retf
xchg
and
es
cmc
push
fldenv
dec
pop
xchg
add
(bad)
cmc
cmp
jge
jno
mov
push
push
adc
jbe
mov
not
aam
push
jecxz
pop
stos
and
fisttp
pop
mov
popf
pop
repz
adc
sbb
adc
xchg
aam
out
inc
pop
push
fnstsw
inc
mov
and
addr16
cmp
inc
pop
sbb
jecxz
xchg
mov
enter
cmp
sbb
jne
les
pushw
int3
cmp
mov
ror
int3
or
push
imul
rcr
pop
out
jnp
lds
ds
lds
daa
xchg
xor
sti
ja
jb
gs
es
(bad)
mov
mov
(bad)
out
ins
inc
call
jge
xor
aam
nop
dec
call
pop
jg
xchg
imul
push
and
jl
ds
hlt
fist
or
xchg
xor
cmp
bound
adc
or
jmp
ret
sub
stos
mov
cmc
pop
clc
push
pop
je
arpl
aaa
daa
mov
jne
mov
sbb
(bad)
xchg
(bad)
iret
mov
push
pop
push
cwde
mov
sbb
and
cmp
stos
in
minps
jecxz
sub
jmp
pop
inc
mov
xchg
js
add
jmp
data16
ret
xor
outs
cli
dec
lahf
rcl
nop
sub
pop
mov
cli
and
loope
cmps
pop
int
sahf
inc
pop
mov
out
dec
sub
movzx
gs
mov
sbb
sbb
cwde
jo
mov
mov
xor
in
loop
hlt
mov
imul
cli
ins
repz
pop
mov
xor
fsubp
sub
je
mov
pushf
push
sub
pop
ins
sub
sub
stos
and
outs
arpl
add
retf
shl
push
or
hlt
mov
and
push
repz
sbb
std
xor
jns
push
movs
mov
call
(bad)
or
sar
and
test
sbb
sar
xor
cmps
add
out
and
stos
ret
inc
adc
or
sbb
adc
push
push
and
dec
xchg
mov
shl
xchg
mov
std
rol
dec
(bad)
jbe
into
(bad)
fldl2e
cmp
mov
adc
add
jg
push
aaa
ja
sbb
out
cmp
add
mov
popf
push
mov
ror
test
sbb
pop
jmp
movs
jno
fdiv
stc
loope
out
or
out
pusha
(bad)
adc
lds
sbb
jnp
xchg
sar
xchg
ret
add
dec
add
je
jo
aaa
ja
sbb
mov
int3
mov
out
inc
push
cmp
sub
push
mov
(bad)
in
push
iret
cmp
xchg
out
fst
clc
mov
arpl
push
and
or
mov
cmps
inc
push
cmp
addr16
fsubr
cmp
bound
pop
call
mov
push
mov
xchg
xchg
xchg
pop
jmp
sti
adc
or
or
adc
sub
icebp
les
icebp
inc
out
or
pop
mov
and
adc
dec
mov
(bad)
shr
repz
ret
sub
push
mov
(bad)
hlt
sbb
out
in
sbb
jb
sbb
xchg
xor
loope
jo
lods
lea
in
mov
lods
out
xlat
sub
and
pop
push
ins
or
clc
cmp
sub
mov
or
xchg
outs
xchg
xchg
and
fwait
es
fbstp
cmp
(bad)
mov
pushf
dec
pop
(bad)
mov
jl
cs
mov
rcr
(bad)
xor
mov
jecxz
push
sbb
mov
jmp
pusha
sub
shr
ficomp
mov
movs
repnz
mov
mov
(bad)
movs
mov
mov
push
adc
repz
cmp
aad
adc
adc
je
test
push
add
xchg
dec
mov
shl
jmp
push
rol
fadd
test
imul
inc
pop
mov
int3
sti
cwde
jns
pop
mov
lea
(bad)
push
lea
adc
jae
in
mov
sbb
es
push
lock
and
int
inc
arpl
fnstenv
jmp
shr
push
xchg
or
ret
fistp
and
hlt
ss
in
das
push
fsub
out
xchg
add
cmps
fisub
lds
jmp
rol
dec
pop
arpl
cs
add
imul
sti
ret
adc
jae
xchg
mov
or
xor
sub
cdq
xchg
sbb
mov
inc
and
fbld
mov
es
mov
or
mov
sbb
inc
push
ds
cdq
leave
sub
aaa
cli
mov
add
(bad)
cwde
sub
adc
push
out
sub
mov
in
mov
cmps
pushf
fs
mov
in
imul
cmp
jae
pop
mov
ficom
cli
std
movs
stc
pop
push
loopne
xchg
dec
cmc
jmp
jl
cmp
mov
pop
imul
pop
pop
push
sub
xlat
mov
dec
xchg
sbb
xchg
push
dec
stos
in
sbb
loopne
(bad)
cmc
dec
shr
ja
cld
gs
or
hlt
inc
mov
dec
adc
xchg
add
xor
neg
mov
mov
loop
jne
mov
jecxz
mov
mov
mov
pop
fs
mov
inc
imul
mov
sbb
jg
push
iret
jge
xlat
jae
pusha
(bad)
mov
daa
xchg
and
imul
lods
jnp
mov
cmp
sub
push
mov
clc
add
push
jo
and
fwait
sbb
inc
sbb
retf
xlat
push
inc
mov
cld
mov
(bad)
mov
inc
jp
fadd
movs
mul
dec
aam
dec
shr
repz
pop
movs
rep
xchg
mov
js
pop
js
xor
push
inc
ins
pop
push
sbb
cmp
int3
dec
dec
scas
cmps
shr
fistp
push
mov
pop
jge
mov
imul
test
addr16
push
mov
es
das
push
lods
scas
and
jl
push
add
cmp
mov
jle
cld
jns
dec
xor
jmp
call
shr
shl
les
(bad)
popf
inc
xor
push
daa
inc
adc
xlat
cmps
dec
xchg
jnp
cli
fnstenv
jmp
xchg
(bad)
out
xor
pusha
mov
push
leave
dec
popa
out
rcl
jl
fimul
cmp
push
ja
test
add
xchg
xor
lds
push
inc
dec
push
xor
push
push
outs
pop
clc
popf
(bad)
dec
xor
fild
gs
mul
jno
cmp
cmp
inc
push
or
pop
cmps
or
(bad)
sbb
push
cmp
out
push
(bad)
fistp
rol
cmp
cmps
mov
inc
mov
mov
scas
std
jp
fsubr
inc
xchg
jns
cdq
jae
push
or
mov
popf
and
dec
or
ret
xlat
int
out
pop
iret
jnp
fidiv
das
ror
jle
inc
xor
lea
sub
xor
sub
xchg
or
pop
hlt
or
mov
dec
sar
sbb
jl
and
hlt
cmps
mov
(bad)
sub
js
call
loopne
je
je
adc
in
mov
or
mov
or
adc
inc
inc
(bad)
jge
add
jl
stc
sbb
icebp
lea
test
es
stc
test
loopne
and
dec
cs
sysret
loop
leave
js
add
xor
add
test
and
ret
push
pop
pop
mov
adc
mov
jle
(bad)
aad
cmp
adc
add
neg
jae
lahf
pushw
cmps
sbb
pop
ror
push
out
mov
sti
mov
leave
jo
inc
cmp
jg
int
nop
mov
out
pop
cmps
mov
xchg
icebp
loop
out
gs
mov
mov
ins
push
adc
xchg
arpl
ins
ja
cmp
mov
inc
xchg
or
fwait
jp
shl
push
pop
jne
cdq
je
pusha
cmp
lock
add
fs
sbb
dec
gs
mov
dec
sbb
ins
(bad)
das
ret
ret
addr16
mov
push
call
xor
sqrtps
shr
cmp
or
push
push
sub
lods
ror
push
mov
loop
pushf
adc
mov
pop
out
aam
sub
data16
and
push
les
push
sahf
out
scas
out
sub
jns
outs
sbb
fadd
inc
arpl
inc
mov
mov
mov
cmps
aas
stc
enter
jbe
int
test
ins
repz
add
add
inc
aaa
mov
and
mov
adc
jg
movs
and
lahf
outs
pop
repz
lods
dec
xor
sub
fist
and
icebp
aad
(bad)
sub
test
not
int
sbb
cli
pop
jno
movs
stc
(bad)
int
mov
loop
idiv
out
test
or
dec
ds
mov
xlat
fwait
les
lock
sub
jmp
adc
xor
gs
ds
mov
cmp
fstp
mov
sbb
sub
pushf
lods
push
or
jge
scas
jo
(bad)
pop
sub
and
add
mov
cmp
dec
jno
fisttp
jbe
stos
outs
fld
dec
pop
dec
bound
add
aas
mov
dec
in
mov
jp
js
sbb
push
inc
inc
aam
dec
test
stos
call
movs
call
mov
inc
clc
fs
push
stc
(bad)
pop
fdivr
cld
aas
call
mov
stos
add
repz
push
neg
jno
xlat
and
aad
(bad)
pop
loopne
pop
push
adc
jmp
loope
cdq
inc
adc
imul
dec
loope
sub
cmc
add
enter
ins
aaa
xchg
push
adc
test
lods
mov
std
sub
push
jo
addr16
mov
sahf
fmul
arpl
inc
cli
clc
xchg
ror
pushf
call
enter
push
(bad)
sub
mov
inc
neg
xchg
mov
scas
cmp
inc
dec
ds
lds
bound
sub
jae
dec
lea
in
sbb
sub
sahf
mov
fsqrt
sbb
xchg
pop
call
push
iret
inc
cs
jb
mov
cdq
jp
ret
cmp
les
jmp
test
sub
and
dec
ins
ret
xchg
imul
and
mov
adc
add
cmps
movs
movs
push
mov
push
or
push
fstp
rcl
mov
cmp
jmp
adc
daa
jne
sub
fwait
test
nop
mov
xor
xchg
stos
adc
jns
push
cmc
in
xor
add
loope
iret
fcomp
enter
daa
jno
cmps
call
mov
imul
aas
cmp
repz
sub
mov
jp
push
call
jo
cs
ror
in
(bad)
sbb
jmp
into
sbb
call
jb
cmp
sbb
test
sti
sub
push
push
sub
data16
or
inc
aaa
mov
sbb
fistp
inc
popf
js
rcl
mov
out
push
mov
fistp
xchg
xor
dec
xor
adc
cmps
popa
shl
stos
loope
and
adc
fwait
lahf
mov
(bad)
push
retf
xor
push
outs
mov
fdivr
std
mov
sbb
cdq
mov
push
fadd
repnz
fadd
push
inc
mov
cmp
cmp
clc
or
stc
xchg
sub
push
mov
arpl
enter
sti
loop
push
fmul
ins
jno
mov
hlt
jg
xor
ins
inc
or
push
mov
pop
mov
push
dec
adc
mov
pop
mov
add
fnstenv
pop
fisub
shr
lock
xor
adc
int3
and
dec
inc
scas
sub
cli
lods
xchg
js
sub
outs
enter
sti
fdivr
xchg
loopne
mov
sub
aaa
das
jge
cmp
mov
cmp
ret
add
out
jne
adc
retf
gs
push
cmp
pop
fild
sub
pop
fistp
dec
cmps
out
int3
das
into
sub
inc
sbb
xchg
out
mov
dec
stos
mov
out
sub
cmps
loope
ficomp
sahf
out
in
data16
jno
add
push
dec
pop
and
pop
xlat
(bad)
aas
adc
outs
call
inc
mov
retf
int
clc
mov
enter
data16
pusha
out
loopne
push
pop
push
dec
inc
cmps
les
inc
dec
push
scas
mov
add
dec
and
jmp
in
jne
nop
pusha
sbb
inc
mov
mov
mov
push
push
inc
sbb
xchg
mov
pop
outs
sbb
sbb
pop
ror
es
mov
(bad)
jmp
mov
push
fnstsw
mov
adc
sbb
inc
fdiv
mov
mov
movs
mov
jmp
dec
fmul
pop
cmc
and
cld
enter
adc
leave
loop
xchg
cmps
fs
dec
in
inc
jge
sub
repnz
loope
daa
inc
pop
(bad)
shl
iret
adc
xor
xchg
xor
out
mov
add
in
mul
pop
or
pop
pop
sbb
xchg
jo
arpl
jae
xchg
dec
out
ss
jae
sahf
iret
cmp
fcom
je
sahf
sbb
adc
xchg
lea
mov
into
mov
mov
sbb
imul
jae
pop
inc
push
cmp
adc
pop
sub
cmp
xor
in
pushf
aas
into
jle
out
jnp
mov
cli
divps
fist
pop
out
dec
sub
inc
xchg
mov
add
and
dec
inc
(bad)
pop
push
mov
sub
clc
push
inc
mov
mov
fdiv
ret
(bad)
idiv
jno
fucomip
jb
pop
inc
pop
cmp
and
push
push
and
(bad)
fmul
inc
test
pop
mov
pop
cmp
arpl
push
or
push
jmp
and
dec
sbb
js
xor
stc
push
jmp
and
jbe
add
lods
movs
gs
in
int3
mov
pop
mov
xor
push
push
and
test
leave
mov
sbb
xchg
in
pop
adc
das
jl
(bad)
mov
scas
test
dec
sbb
adc
pushf
cld
push
popa
shl
imul
fst
in
loop
int
movs
pushf
daa
sub
sbb
shr
jno
into
xchg
inc
or
or
and
mov
in
shl
fmul
fisub
adc
and
pop
out
push
fmul
lea
mov
cmp
jge
aaa
sbb
mov
mov
in
scas
fidivr
jbe
inc
mov
scas
push
jle
mov
pop
mov
xchg
push
nop
mov
sbb
out
add
(bad)
lock
jmp
ins
xchg
or
push
xchg
mov
int
jmp
into
mov
dec
sar
add
ins
pop
sub
push
jns
cmp
in
out
out
rcr
call
pushf
jle
adc
fisttp
fdivr
aad
retf
mov
ins
movs
add
lods
adc
lea
repz
daa
(bad)
lods
sub
mov
sub
in
jg
jle
cs
(bad)
sub
xchg
shr
ins
lods
(bad)
push
retf
add
jb
and
push
or
and
jg
add
pop
cmp
mov
ja
sbb
fsub
dec
sub
test
jo
loope
inc
mov
loope
mov
int3
cmp
pop
pop
mov
dec
pop
fidivr
cld
shl
fimul
inc
inc
xor
lahf
out
mov
call
add
and
fnstenv
cmp
fcmove
arpl
mov
mov
pop
push
dec
push
mov
mov
(bad)
(bad)
xlat
fdivp
inc
inc
jmp
dec
xchg
stos
mov
stc
mov
xchg
xor
mov
mov
retf
in
and
sub
repnz
iret
sub
xchg
push
ror
mov
lea
mov
sbb
aaa
pop
loop
sbb
test
dec
mov
inc
fs
add
sbb
imul
mov
sar
arpl
cld
in
mov
cmp
adc
rcl
dec
adc
adc
test
mov
rol
int
push
add
add
(bad)
and
lods
cmc
mov
pop
sbb
mov
ds
or
clc
jae
push
sub
sti
push
xor
pop
mov
xor
jge
inc
pop
(bad)
jecxz
fcom
jno
es
loopne
adc
div
fisttp
jle
push
mov
dec
call
jb
shl
mov
jne
cmc
std
jg
push
add
xchg
add
xor
jp
or
xor
push
lahf
xor
ret
adc
mov
adc
xor
std
push
fmul
ud0
rcr
xchg
jmp
and
test
das
in
pushf
hlt
mov
jno
dec
or
push
test
(bad)
cmp
cmp
mov
cmp
popf
cmp
std
mov
cmp
mov
mov
mov
xchg
mov
lds
in
clc
pop
xchg
xor
or
dec
mul
test
popf
(bad)
punpckldq
mov
jnp
std
pop
xlat
outs
pop
fistp
xor
daa
sbb
cdq
inc
js
add
loopne
aam
lahf
rcr
mov
cwde
repz
or
or
inc
push
adc
mov
test
xchg
pop
adc
jp
stos
fnstcw
loope
(bad)
cmp
loop
pop
fiadd
fwait
adc
mov
mov
and
and
call
adc
fld
popa
fild
enter
cli
stos
loopne
lods
daa
jb
xchg
sbb
cs
adc
push
push
dec
int
and
xor
aaa
sbb
or
mov
aaa
mov
or
inc
into
(bad)
scas
push
jge
xor
xor
loop
int3
ror
mov
imul
inc
test
lea
sub
pop
movs
add
mov
lahf
cmp
ins
or
ror
inc
sbb
addr16
mov
jo
mov
mov
xor
sub
and
cmp
mov
fcomp
call
push
add
mov
inc
rcl
push
movs
jae
je
push
movs
addr16
mov
pusha
xor
xlat
call
jp
inc
xchg
adc
mov
xlat
inc
jge
add
repz
xchg
mov
push
out
test
and
mov
call
pop
mov
aam
ret
mov
vpsubb
pop
dec
sar
rcr
sub
fidivr
ja
mov
pop
xor
ss
jge
bound
adc
xor
add
fistp
sub
jbe
iret
cld
shl
jg
retf
add
es
cmc
and
jo
dec
(bad)
dec
mov
fisubr
and
adc
jmp
mov
push
dec
push
jmp
push
js
pop
mov
outs
xor
jp
dec
or
pop
(bad)
aaa
lods
dec
stos
je
dec
adc
mov
dec
or
aad
sar
inc
int
or
dec
pop
inc
mov
lods
dec
xor
mov
xor
lahf
dec
jmp
loop
pop
and
xchg
retf
jbe
sti
xor
mov
or
hlt
fcmovbe
push
sbb
adc
or
inc
(bad)
popa
in
stc
and
adc
inc
add
mov
popf
ret
arpl
sbb
mov
jne
scas
loop
mov
mov
jbe
jle
and
shl
sahf
stc
jno
ss
jns
je
outs
xor
mov
fisttp
outs
dec
leave
adc
xchg
sub
sub
or
jle
in
into
imul
push
mov
inc
jl
adc
es
and
retf
pop
imul
sub
gs
loopne
sbb
sub
inc
rcr
xlat
sti
fiadd
push
and
and
jp
and
ret
mov
mov
call
sub
std
jge
inc
out
stc
addr16
mov
sub
enter
dec
pop
mov
cmp
jp
repnz
aas
sar
jg
iret
mov
or
sub
mov
addr16
dec
movs
pop
ret
mov
sbb
in
rcr
les
mov
outs
call
std
mov
sti
and
xor
cmp
pop
pop
inc
(bad)
pop
cdq
sbb
rcr
inc
ret
xor
sahf
in
or
imul
popf
stos
imul
fst
adc
sub
aad
aas
jno
lahf
fist
aas
mov
cmp
jp
inc
mov
dec
inc
xchg
pusha
inc
ss
or
ins
mov
loopne
arpl
fdivr
lods
jbe
cmps
lods
xchg
lea
push
sub
loopne
lods
xor
loope
jnp
jnp
jo
or
lock
rcr
mov
jl
mov
in
(bad)
mov
in
xor
xchg
nop
pushf
in
movs
push
gs
jne
mov
xor
dec
pop
int3
push
push
jmp
cs
test
push
add
aad
ret
(bad)
xchg
je
pop
ficomp
call
mov
das
ret
stos
call
sub
sbb
and
dec
pop
out
fisttp
dec
pop
xchg
rcr
and
(bad)
daa
dec
xlat
outs
lahf
sbb
enter
dec
and
test
daa
and
sti
ds
jmp
mov
inc
mov
pusha
xor
std
mov
dec
push
xchg
sbb
dec
gs
mov
jp
add
pop
mov
sub
fadd
mov
ret
mov
dec
jmp
and
sub
dec
mov
cmp
out
push
pop
xor
mov
cdq
cs
les
(bad)
xor
jne
mov
in
push
sbb
sub
mov
mov
pop
inc
pop
mov
out
loopne
sbb
and
dec
dec
test
data16
outs
or
xor
xor
mov
stos
cmp
and
(bad)
push
cs
push
pop
push
cmp
sbb
movs
mov
sub
lods
inc
mov
sbb
ins
or
ror
ja
mov
fidiv
mov
push
jbe
lock
xlat
push
inc
imul
bound
sub
fcom
pop
inc
hlt
push
gs
xchg
and
mov
pop
mov
dec
push
pop
lods
outs
sbb
shl
shl
push
sbb
aas
xchg
leave
cmp
cmc
push
jmp
xchg
ret
dec
mov
mov
mov
shr
aam
outs
fdecstp
(bad)
push
xlat
cmp
std
and
or
sahf
je
int3
(bad)
pop
inc
add
push
aas
mov
repnz
pop
icebp
test
cmps
sbb
std
pusha
lea
dec
(bad)
pop
pop
pop
sub
lods
jne
fcom
push
mov
stos
cli
sahf
dec
mov
jle
inc
dec
jge
mov
test
sub
cmp
pop
mov
mov
into
ins
enter
push
pop
jmp
(bad)
pop
ins
test
cli
mov
add
aam
add
mov
(bad)
dec
xor
or
sub
mov
pop
pop
fisubr
call
dec
push
lahf
cli
add
ret
sbb
sbb
jae
mov
mov
mov
test
pop
fst
out
inc
or
mov
fstp
add
add
nop
test
es
(bad)
mov
xchg
and
push
pop
ret
or
inc
pop
popa
dec
loope
inc
inc
or
fstp
(bad)
es
sbb
scas
imul
leave
cmp
xchg
inc
adc
repnz
aad
mov
push
xor
mov
imul
ret
sbb
iret
pop
or
sbb
loope
pusha
ins
adc
sar
hlt
push
dec
fst
xchg
(bad)
jg
sbb
cli
mov
fxch
pusha
xchg
mov
popa
repz
outs
fisubr
lods
adc
add
aad
gs
or
xor
sar
rol
inc
dec
shl
ds
jno
push
push
test
push
push
(bad)
mov
rol
jg
dec
adc
xchg
scas
mov
xchg
mov
sbb
fsub
xor
fdivr
push
add
into
xchg
out
pusha
pop
fisub
or
aad
lods
in
add
fwait
jne
add
xor
outs
jb
xor
lods
sub
sti
mov
or
dec
inc
les
aam
or
or
mov
call
inc
push
sbb
lea
mov
loope
jbe
cmps
rcr
adc
lods
lahf
psrlq
dec
jg
dec
inc
sahf
sub
daa
jmp
sub
addr16
sub
sahf
stc
dec
xchg
sbb
rcr
stos
std
aas
or
cdq
inc
jb
shl
imul
out
into
mov
and
into
or
outs
mov
cmp
xchg
cmp
test
dec
xor
add
sbb
push
std
xchg
push
adc
movs
sub
fidivr
clc
fprem1
mov
cli
cdq
push
ss
jecxz
adc
dec
mov
rcr
mov
mov
mov
sub
xor
icebp
add
mov
push
pop
mov
push
repnz
outs
pop
pop
sbb
adc
jg
int3
xor
mov
dec
dec
aaa
pop
movs
imul
jns
stos
and
add
jne
dec
arpl
xor
scas
sbb
adc
xchg
(bad)
popa
out
data16
xchg
mov
mov
pop
jno
rol
sbb
jge
aad
test
mov
pop
add
xchg
xchg
daa
stos
imul
cmp
ss
outs
jnp
or
inc
mov
add
fmul
repz
leave
(bad)
pop
sub
inc
push
mov
jge
mov
mov
mov
push
repnz
xchg
(bad)
js
pusha
xchg
mov
test
pop
xor
or
aad
jmp
or
pop
pusha
inc
add
push
xlat
xor
pop
adc
ds
adc
fistp
adc
dec
ins
dec
bound
arpl
dec
outs
stos
hlt
push
ins
movs
lea
sti
movups
push
xchg
xchg
xor
mov
mov
dec
adc
(bad)
pop
push
add
jo
or
(bad)
and
mov
xor
mov
aas
stos
call
and
mov
mov
test
les
push
dec
cmps
sub
hlt
repnz
shr
mov
push
(bad)
fidiv
retf
adc
dec
shl
(bad)
push
in
fnstsw
ficom
addr16
push
xchg
add
push
je
add
adc
adc
mov
inc
imul
adc
mov
and
sbb
ret
jle
jmp
test
es
push
shl
shl
(bad)
pop
cmp
xor
jns
mov
(bad)
(bad)
cmp
xchg
push
fs
and
sti
leave
add
cdq
ficom
sbb
cmp
dec
out
mov
dec
mov
cmps
ds
sbb
xchg
cld
or
icebp
xchg
mov
das
div
add
shl
inc
push
dec
dec
(bad)
jmp
inc
mov
jbe
or
jo
mov
in
jns
(bad)
jbe
fisttp
or
repz
rcr
sbb
dec
pop
mov
test
fs
or
xchg
sbb
ret
dec
outs
xor
inc
jae
aas
cld
push
dec
gs
xlat
(bad)
inc
pop
dec
xchg
add
imul
mov
lods
mov
mov
outs
rol
test
mov
cmps
push
(bad)
aam
(bad)
mov
arpl
sbb
aas
push
adc
xchg
or
sti
cmp
or
add
outs
jg
or
and
js
jae
pop
fnsave
push
rol
sar
jmp
xchg
cmps
ja
test
retf
cmp
in
dec
outs
xchg
in
push
add
or
mov
repz
call
sahf
fld
fiadd
sub
xchg
and
cmp
arpl
xchg
adc
or
cmps
jb
gs
jns
test
push
pop
scas
mov
add
aas
mov
(bad)
test
push
ret
out
test
clc
xchg
adc
jmp
icebp
pop
jge
inc
mul
push
test
into
das
aaa
nop
mov
inc
call
out
xlat
data16
xor
pushf
test
addr16
popf
adc
test
scas
std
fs
shr
(bad)
fld
jno
repnz
jnp
inc
fcomp
clc
fst
cmp
loopne
add
xor
mov
or
loopne
stos
pop
shl
jns
sbb
mov
cmp
inc
jmp
mov
popa
sub
retf
jo
xchg
ret
mov
enter
jg
int3
sub
dec
test
out
scas
lds
jno
jno
jbe
retf
in
jno
cs
lahf
das
and
sbb
rcr
sbb
lods
xor
push
cmp
fst
retf
xchg
ror
xor
fnstsw
repnz
xchg
loopne
bound
sbb
cdq
and
fiadd
fisubr
adc
push
aad
and
loopne
mov
mov
fwait
pop
xchg
or
dec
or
scas
mov
mov
xor
clc
mul
or
repnz
and
nop
mov
push
push
in
fsubp
adc
bound
inc
xchg
or
adc
hlt
gs
test
add
jmp
fcomp
and
jmp
jmp
sbb
(bad)
popa
popa
(bad)
mov
out
inc
scas
daa
ja
das
xor
dec
dec
jno
ret
add
scas
pusha
scas
xchg
mov
push
xchg
adc
mov
shr
sub
cmp
sub
add
pop
push
jae
enter
jecxz
mov
cmp
popf
add
sbb
jo
mov
push
dec
xchg
stc
xchg
fstp
int3
mov
clc
or
loope
arpl
jmp
test
inc
push
xor
xchg
fcomp
pop
jo
call
xchg
jge
test
push
movs
(bad)
and
push
adc
add
cmc
inc
push
cli
mov
ret
ins
ds
xchg
push
xor
cli
loope
jbe
mov
sbb
pop
xchg
pop
addr16
ja
scas
xor
das
push
stos
add
jbe
aam
lods
sbb
sub
cmp
ror
daa
xor
(bad)
lods
xlat
or
popa
ret
outs
xor
push
sub
ds
jns
cmp
ins
jg
enter
scas
xor
mov
in
jg
xor
jnp
(bad)
push
inc
imul
adc
push
sbb
adc
daa
fadd
add
les
stc
xor
jmp
inc
mov
sub
(bad)
fldenv
or
jb
dec
addr16
shl
inc
jl
daa
or
push
fisttp
test
lods
xor
jp
jmp
sti
xchg
fistp
mov
data16
movs
cmp
hlt
popf
mov
arpl
lods
call
jb
lods
jns
jne
and
(bad)
jmp
rcr
call
jp
cmps
ret
loopne
enter
sbb
cmps
mov
pop
rcl
jae
shl
repnz
fldenv
push
pop
pop
inc
stc
sar
mov
xchg
push
ret
fstp
test
sub
adc
(bad)
jle
fistp
xor
stos
lds
jp
iret
test
jg
je
pop
(bad)
xchg
dec
xchg
jmp
mov
mov
loope
out
aam
popa
adc
xchg
es
mov
cmp
cmp
test
stos
sbb
repz
out
push
push
jl
or
sbb
hlt
fdivr
sahf
mov
fisubr
repnz
inc
mov
ffreep
sub
aam
pop
mov
add
pop
pushf
or
in
sbb
test
repnz
sbb
movs
sub
aas
mov
xchg
pop
jmp
sub
and
shl
and
xor
jge
retf
xor
es
jnp
jno
sbb
jl
call
add
call
cmp
mov
mov
lods
std
pop
enter
je
adc
jg
gs
stos
pop
sub
fcomp
and
pushf
outs
shl
(bad)
out
and
or
mov
cmc
ds
mov
xor
adc
hlt
xchg
xchg
daa
mov
aad
loope
ss
retf
sbb
cmp
(bad)
(bad)
(bad)
jno
ss
mov
cdq
and
mov
sub
xchg
push
and
(bad)
xchg
dec
xchg
mov
ret
mov
cmc
xchg
or
jb
outs
cmps
sar
xor
pop
xchg
shl
mov
inc
xchg
jo
cmp
bound
or
call
call
cmp
lea
jp
in
imul
jl
cmps
or
stos
jbe
sbb
mov
(bad)
jge
scas
xor
mov
jo
jnp
jae
int
cmp
adc
ret
rol
dec
xchg
push
in
rcl
retf
test
out
ror
jge
call
or
add
shl
sahf
sti
inc
sbb
pop
and
popa
pop
cmps
mov
pusha
xchg
retf
addr16
popf
sbb
xchg
push
loope
adc
in
dec
xor
mov
sbb
sti
mov
jmp
xchg
outs
retf
or
inc
sahf
mov
pusha
jl
mov
pop
icebp
xchg
ins
ins
jnp
mov
test
test
pop
and
inc
mov
mov
xchg
loop
and
rol
fbld
pushf
pop
push
ins
gs
or
loope
aam
dec
pop
xchg
aam
pop
aam
fimul
mov
inc
(bad)
cli
cmc
ret
xchg
dec
sbb
lahf
cmp
ret
adc
or
rcr
shl
aad
fs
dec
xchg
mov
mov
push
inc
and
push
mov
(bad)
or
jle
add
std
out
adc
ds
cwde
ins
popa
mov
push
mov
mov
js
ins
jbe
sub
ret
mov
sahf
pushf
xchg
jmp
data16
mov
push
or
jns
pop
dec
mov
scas
mov
scas
int
in
jg
and
cmc
mov
sub
jno
imul
clc
adc
add
push
not
(bad)
xor
xor
push
loopne
test
push
shl
mov
sar
xchg
stos
pop
sub
loopne
je
dec
inc
mov
xor
cmp
inc
xor
popf
ins
repnz
mov
mov
sub
mov
mov
std
repnz
jmp
rcl
ret
pop
movs
fidivr
xor
mov
dec
sbb
xor
push
mov
lods
(bad)
mov
push
call
dec
or
pop
adc
dec
int3
leave
xor
loop
call
out
pushf
outs
stc
test
xchg
cmp
lahf
fsubr
xor
push
push
sar
aam
fdivrp
push
adc
repnz
xor
retf
xor
and
ret
sub
cmp
xor
daa
not
push
arpl
and
les
add
repz
adc
xchg
add
mov
cli
outs
fwait
cmp
sbb
mov
cmp
movs
imul
mov
outs
mov
cmps
not
dec
pusha
dec
(bad)
xchg
pushf
lea
fidiv
jp
inc
fadd
rol
dec
pop
call
in
mov
js
mov
mov
xor
mov
inc
xor
push
mov
sbb
scas
je
xlat
addr16
adc
aaa
cmp
imul
scas
repz
imul
and
stos
fcmove
(bad)
push
leave
dec
mov
das
sub
cmps
sub
pusha
sub
in
scas
cmps
stc
cli
jo
iret
clc
cdq
cld
adc
jecxz
sub
xlat
ja
scas
dec
es
xchg
and
in
mov
push
mov
rol
ins
dec
xor
js
sbb
ins
pop
lahf
push
mov
push
movs
xor
or
ja
inc
fstp
dec
cld
push
mov
pop
dec
je
jmp
sar
mov
push
call
scas
jmp
xlat
and
scas
dec
xchg
loop
mov
loop
xor
sahf
loopne
stos
mov
jl
sahf
clc
mov
mov
jl
int3
inc
xlat
aam
sbb
fwait
xchg
sub
cmp
or
xor
icebp
or
adc
imul
pop
imul
add
out
jo
sub
pushf
inc
sti
inc
add
jbe
and
inc
sbb
mov
mov
in
rcl
mov
jne
(bad)
jbe
call
test
leave
xor
sahf
inc
mov
in
cli
add
inc
loope
shr
push
mov
mov
push
inc
cld
add
adc
das
pop
and
retf
inc
jp
test
nop
and
jnp
and
rcl
xor
nop
mov
fsubr
daa
jecxz
jmp
fidivr
sub
popf
xchg
dec
push
sti
lea
push
xor
sub
mov
aad
inc
jmp
arpl
stc
sub
(bad)
int
pop
scas
bound
rcr
js
and
call
mov
or
cmp
mov
and
ins
int3
shl
and
loop
mov
jmp
push
adc
enter
inc
cmp
stos
repnz
movs
retf
dec
pop
aaa
out
jle
mov
(bad)
xchg
out
cmps
add
push
out
and
dec
dec
cmps
addr16
jmp
jb
clc
(bad)
imul
je
mov
jg
sub
cmp
and
sti
xor
cmp
lds
ds
and
dec
sbb
ins
cmc
enter
cmc
pop
push
pop
mov
fcomp
retf
mov
jp
mov
jp
jle
add
jmp
aas
push
sub
pop
push
xchg
mov
movs
inc
mov
loopne
jo
mul
in
rcl
addr16
lds
gs
outs
std
out
dec
retf
add
fisttp
fdiv
push
jge
dec
sbb
out
stc
mov
arpl
sub
movs
mov
ret
loope
gs
lds
cmp
cmovp
add
push
push
or
dec
cmp
test
or
push
dec
scas
push
push
push
or
into
push
cmp
inc
cld
cmp
push
or
mov
or
jnp
mov
lods
pop
mov
ficomp
rcl
mov
mov
ins
push
and
xor
push
jl
cmp
xchg
mov
jae
aas
xchg
pop
pop
or
fwait
out
or
dec
cmps
sbb
repnz
call
test
call
xchg
jae
call
add
call
pushf
xchg
fiadd
movs
(bad)
idiv
mov
pop
data16
popa
js
push
jle
sub
sbb
fdiv
(bad)
(bad)
ins
inc
inc
das
mov
mov
gs
jmp
pop
adc
add
mov
jecxz
dec
and
popf
pop
int3
push
rol
mov
sub
jl
add
push
push
xchg
pop
mov
lods
mov
push
cli
in
xor
jno
stos
dec
mov
pushf
xor
push
jae
inc
cmp
es
adc
dec
mov
aas
hlt
and
mov
test
inc
dec
stos
pop
cs
movs
and
das
aas
das
cmp
out
movs
into
cmp
stc
repnz
movs
inc
or
scas
fcmovb
imul
std
hlt
leave
add
mov
ins
mov
cmps
loopne
jmp
pusha
xchg
retf
xor
mov
cwde
repnz
push
test
sub
dec
push
jmp
ins
scas
mov
push
in
shl
cmp
rcr
pop
mov
add
(bad)
pop
cmp
out
je
shl
ins
mov
sbb
iret
and
int
xor
mov
add
fs
and
xor
jmp
aad
pop
cld
leave
imul
nop
or
retf
xor
repz
dec
inc
xor
mov
inc
sub
cmp
inc
lahf
jp
repz
pop
adc
push
in
cdq
sbb
and
call
fdivr
and
xchg
test
add
and
test
mov
cli
sub
push
clc
jge
out
dec
push
in
pushf
gs
jbe
xor
stc
or
das
ss
movs
sar
hlt
adc
stos
popf
arpl
or
mov
arpl
nop
cmp
ficom
fild
fild
pop
in
shl
mov
loopne
(bad)
jl
pop
data16
or
iret
enter
lea
adc
fsubrp
lahf
retf
xchg
add
lds
cdq
cmp
mov
sbb
pop
mov
xchg
sbb
bound
ss
sub
mov
or
int3
scas
inc
pusha
add
stos
and
push
mov
in
hlt
in
push
sub
jge
pop
mov
inc
push
jmp
mul
and
jmp
xchg
pop
(bad)
clc
pop
in
loope
dec
xchg
mov
es
into
cmp
jb
ror
loop
jno
ins
xchg
add
(bad)
and
sahf
pop
jno
in
xchg
jo
and
out
jmp
xor
push
sbb
imul
inc
nop
std
lea
out
shl
imul
mov
scas
fs
pop
mov
mov
mov
pusha
xor
fs
mov
xchg
xchg
imul
adc
aam
aaa
mov
jno
xor
cld
xchg
or
mov
gs
and
mov
jo
aas
(bad)
sub
mov
sbb
inc
pop
scas
in
dec
or
cmp
in
push
test
xchg
int
dec
pop
out
push
sbb
xlat
mov
test
adc
xlat
push
pop
pusha
adc
mov
adc
das
xlat
dec
mov
test
ins
cdq
or
push
lock
jl
pop
mov
push
and
cmp
shl
mov
mov
mov
das
push
sub
fdivp
pop
repnz
cmps
out
jnp
cmp
aam
fcomp
mov
arpl
or
es
lods
inc
sbb
push
mov
dec
mov
fadd
jo
mov
or
adc
pop
adc
cmps
in
cmp
adc
mov
jl
xchg
loop
add
movs
rol
out
push
in
jecxz
mov
push
add
lods
mov
test
add
outs
ds
adc
int3
test
out
mov
dec
std
outs
dec
sub
popf
or
or
cwde
mov
adc
(bad)
cli
test
xor
pop
lahf
jns
ret
imul
call
jns
dec
lods
test
sub
mov
xchg
xchg
sub
ret
dec
(bad)
fnstenv
pop
xchg
test
inc
add
dec
loope
xchg
repz
ins
sbb
pop
mov
call
jbe
and
mov
cmps
jl
mov
arpl
push
lds
mov
adc
out
daa
and
pop
lock
add
icebp
aam
(bad)
jno
dec
push
mov
xchg
push
aaa
or
(bad)
scas
outs
cs
push
loope
movs
rol
pop
add
int3
aad
cmp
fwait
popf
mov
loopne
shr
cmc
sub
jmp
mov
mov
std
(bad)
cmp
mov
push
jns
or
dec
inc
mov
int
arpl
les
push
arpl
mov
sub
xchg
xchg
fstp
inc
lahf
sbb
push
cmp
cmps
ins
paddw
aaa
cld
aas
dec
push
pop
push
cmps
js
das
xchg
test
or
and
inc
mov
cmp
jmp
pop
(bad)
outs
and
cmp
mov
add
jge
gs
dec
mov
test
cmc
nop
outs
loopne
aam
out
push
dec
push
pop
mov
sub
mov
push
(bad)
fbld
in
(bad)
sub
je
jmp
fisub
data16
adc
push
data16
test
fwait
dec
popf
lock
hlt
pop
movs
push
or
cmp
mov
inc
(bad)
dec
push
jp
js
(bad)
test
pop
inc
sbb
aad
cmp
inc
push
test
pushf
sbb
(bad)
jmp
shr
lods
xchg
call
stos
shr
pop
push
jae
dec
(bad)
sbb
dec
enter
inc
or
iret
data16
lods
test
xchg
lods
and
cmp
div
ror
out
mul
or
ret
movs
dec
fdivr
jno
add
leave
mov
sbb
cmp
cmp
test
and
sub
push
add
inc
mov
lds
dec
in
les
in
mov
add
emms
jb
in
and
adc
call
add
sbb
iret
scas
stc
push
retf
daa
xor
nop
aas
rcl
push
outs
mov
js
jbe
(bad)
jmp
xor
cld
retf
jmp
in
or
sbb
jno
lods
pop
and
push
popa
and
cld
mov
mov
aam
retf
out
xor
clc
shr
cmp
mov
in
xchg
(bad)
and
pop
fldenv
pusha
sub
mov
jb
iret
cmps
mov
push
xchg
mov
dec
dec
pop
aas
int
test
imul
test
ret
std
mov
mov
jbe
pop
mov
mov
jb
shl
pushf
stos
inc
inc
cli
push
enter
in
shr
mov
add
outs
ret
loope
daa
push
mov
fdiv
data16
stos
jg
or
mov
sub
fisubr
shr
dec
pop
inc
or
sbb
shl
fnstsw
shl
aaa
test
fdiv
test
push
popf
rcl
cld
pusha
and
push
jl
and
sub
or
jg
push
jl
(bad)
xchg
pushf
data16
mov
(bad)
je
sahf
test
neg
sbb
cmps
mov
popa
pusha
in
in
int
and
ret
repnz
pushf
jo
push
fldlg2
ss
push
cs
mov
dec
dec
inc
mov
pop
sbb
dec
ret
push
push
jl
(bad)
xchg
xlat
fcmovnb
icebp
lods
mov
xchg
out
sub
test
int
and
(bad)
out
dec
pop
(bad)
push
fild
add
or
iret
movs
retf
push
pop
mov
clc
daa
fcmovbe
add
arpl
call
ins
xor
push
pop
push
iret
fcomp
fisubr
icebp
std
popf
add
daa
aaa
push
sub
xchg
jl
sub
ss
push
adc
push
push
xchg
stos
jno
pop
inc
(bad)
imul
lahf
fs
rol
div
add
call
adc
mov
(bad)
xchg
loop
ins
imul
repz
mov
mov
or
mov
ja
clc
pop
aas
push
xor
jae
call
cdq
je
xchg
lds
sub
cmp
pop
enter
pop
test
ficomp
lds
shrd
inc
or
lea
jmp
adc
add
xchg
xchg
lods
aam
cmps
pop
jne
sbb
jbe
fwait
xor
test
call
outs
in
cmps
idiv
lea
lods
mov
add
push
test
adc
inc
push
mov
test
pop
jmp
or
(bad)
xchg
int
cld
aad
ret
xchg
xor
gs
mov
fs
push
cdq
mov
dec
add
fld
push
jmp
and
out
pop
hlt
fild
jmp
dec
and
ins
inc
mov
push
cdq
out
add
cmp
(bad)
aad
ss
mov
adc
or
jno
lods
in
fistp
fmul
and
xchg
call
inc
or
(bad)
mov
or
jmp
loopne
xchg
adc
or
jle
repz
and
sub
xchg
iret
xor
call
(bad)
movs
ja
pop
popf
mov
popf
mov
(bad)
mov
and
in
int
ret
fbstp
lea
sahf
sbb
jge
jp
movs
pop
mov
iret
dec
jbe
adc
cmp
mov
sbb
aaa
jns
ins
jo
gs
popf
dec
jle
jmp
mov
dec
cmp
pop
repnz
int3
jecxz
mov
push
mov
sub
cmps
jae
cmp
retf
repz
pusha
cmp
inc
mov
fmul
loopne
add
div
das
sub
call
jo
cdq
mov
fwait
mov
push
cmp
inc
call
scas
cmp
(bad)
test
scas
test
lea
mov
inc
aaa
fidiv
dec
mov
repnz
cmp
mov
jge
mov
sub
xchg
push
ja
push
pop
test
imul
and
jns
xlat
aas
pop
ret
cs
mov
lods
push
loop
push
push
(bad)
hlt
jle
popf
fdiv
stos
in
jnp
rcr
mov
jmp
inc
mov
push
js
fnstsw
fld
psllw
arpl
dec
jecxz
mov
xchg
sbb
das
(bad)
adc
adc
and
jge
xchg
fmul
push
test
aas
fmul
mov
loope
fwait
inc
xor
repnz
mov
or
jp
xor
mov
xchg
fisttp
inc
hlt
mov
je
push
aaa
lods
mov
dec
and
push
mov
mov
into
push
aad
push
lods
pusha
into
dec
popa
sub
mov
popa
jo
cmp
(bad)
repnz
test
add
out
xchg
inc
xor
call
push
mov
inc
int3
xchg
cmp
aad
jmp
jae
cmps
adc
pop
mov
and
mov
rcr
mov
shl
mov
jno
mov
mov
push
(bad)
hlt
lea
ins
mov
jns
(bad)
fmul
jne
cmp
and
fidiv
inc
jno
nop
dec
cmp
mov
mov
ss
(bad)
sar
scas
cmp
push
xchg
shr
dec
cmp
adc
test
jns
fld
jg
into
test
dec
add
lods
jo
pop
inc
aam
repnz
out
jl
xchg
aad
adc
and
jae
xchg
scas
mov
add
jb
mov
inc
and
mov
add
sbb
stos
xchg
push
jo
jae
jae
or
fstp
sbb
or
stc
or
lea
adc
hlt
(bad)
retf
nop
inc
retf
jp
jmp
loope
je
adc
(bad)
fisttp
pushf
cmc
push
sub
cdq
aam
xchg
int
sub
lods
dec
fs
and
loope
and
push
cmps
ins
ins
sbb
xor
sub
scas
and
call
mov
ins
xchg
xchg
xchg
pop
fdivp
jl
xchg
and
(bad)
bound
clc
(bad)
pop
dec
hlt
jge
leave
sbb
(bad)
add
sub
dec
int3
xchg
mov
push
enter
stos
ins
ja
int
xchg
add
or
pop
jnp
lods
sbb
stos
and
xchg
or
jle
out
scas
push
ror
test
pop
sub
aam
and
mov
jp
cmc
int
ret
fiadd
mov
push
sub
dec
icebp
adc
aas
cmp
xchg
jae
and
sub
into
dec
test
ins
sahf
and
scas
mov
pop
pop
inc
ret
int3
push
std
jmp
jecxz
xor
retf
sub
loop
adc
cmps
dec
pop
fs
adc
mov
addr16
das
ins
sub
aas
sbb
les
jmp
sub
fdivr
jmp
jecxz
pop
or
pop
je
fs
sub
sti
xchg
fild
stc
add
adc
jmp
imul
mov
sahf
adc
mov
in
mov
xor
mov
dec
movs
add
outs
ds
loope
push
pop
inc
loopne
fidivr
retf
xor
shl
dec
mov
js
cmp
es
int
loop
push
sbb
lods
fild
fistp
push
cmp
loop
clc
test
out
aaa
push
cwde
daa
jno
xor
jmp
or
xchg
and
mov
mov
mov
cmps
call
cmc
jge
icebp
repz
add
xchg
lea
xor
mov
daa
inc
test
call
mov
(bad)
mov
adc
(bad)
(bad)
rcr
xchg
pop
aad
cmps
loope
xchg
pushf
mov
adc
cmc
mov
or
movs
popf
dec
test
mov
cmc
hlt
into
or
mov
mov
mov
(bad)
je
cmp
call
dec
sub
and
pusha
push
jp
stos
mov
mov
inc
stos
lods
sub
and
pop
cmp
pop
xchg
out
mov
mov
push
inc
xchg
or
push
aaa
mov
xchg
stos
ss
jg
sbb
mov
(bad)
lds
(bad)
jnp
cmc
add
adc
lds
in
cld
mul
xor
shl
adc
push
repz
push
rcr
fcomp
mov
test
repnz
cmp
out
fnsave
mov
cmps
dec
adc
xchg
xchg
aas
sbb
lods
push
or
fdivrp
and
sbb
(bad)
popf
pop
je
(bad)
cmp
xchg
and
push
sub
cmc
xor
cld
sub
jne
xchg
xlat
fistp
out
pop
and
inc
xchg
aad
xor
pusha
mul
dec
popf
adc
dec
out
push
int
push
mov
jecxz
cwde
clc
mov
es
cmps
xchg
sub
ss
addr16
inc
out
adc
push
sbb
xlat
movd
outs
push
enter
mov
push
and
mov
data16
mov
(bad)
ror
and
pop
imul
or
pop
lock
jp
sbb
inc
and
jmp
(bad)
das
inc
push
(bad)
push
jecxz
cld
adc
iret
cmp
movs
cdq
jle
add
sub
into
pop
jle
mov
data16
cmps
pop
cmps
jo
das
and
fsub
dec
aad
mov
or
and
addr16
jmp
sub
mov
jmp
sbb
xchg
bound
and
jo
stos
lock
mov
and
popa
sbb
lods
pop
pop
js
pop
xchg
pop
xchg
stc
int
xchg
leave
arpl
in
movs
pop
lods
sbb
lock
addr16
mov
std
pop
ret
pop
jbe
and
pop
not
into
push
adc
sbb
inc
pop
mov
push
sub
movs
enter
cmp
push
jno
clc
iret
mov
shl
jl
cmp
(bad)
cmp
movs
mov
cmps
hlt
inc
xchg
dec
sbb
inc
or
cwde
or
loopne
icebp
pop
retf
(bad)
jmp
ds
neg
cdq
stos
add
jae
pop
mov
pop
push
mov
cmp
mov
mov
pop
add
add
push
aad
int
fcmovb
sbb
es
jbe
shr
pop
add
lock
cli
enter
and
loope
dec
push
jae
mov
test
xchg
pusha
add
dec
mov
cmps
sub
jl
xchg
pop
jg
fwait
cdq
mov
js
dec
add
fcmovne
cld
scas
and
(bad)
mov
pop
jg
xor
pop
cmps
sbb
stos
mov
adc
mov
ins
shr
(bad)
imul
je
(bad)
shr
stos
jae
or
outs
rcr
in
ja
inc
mov
mov
std
mov
add
icebp
cmp
icebp
outs
jge
pop
jmp
mov
outs
pop
mov
inc
inc
sbb
jge
repz
call
ret
cld
push
es
dec
out
jmp
sbb
pop
dec
adc
shr
push
jle
fst
pop
hlt
out
xor
xchg
add
(bad)
pop
(bad)
dec
xchg
jmp
inc
ja
xchg
bound
sub
jmp
pop
dec
mov
loop
push
mov
je
sbb
iret
or
jmp
div
jbe
sbb
into
jg
mov
cdq
sub
pop
stc
mov
cmps
gs
movs
sub
enter
(bad)
clc
cli
mov
cmp
dec
push
pop
aas
pop
and
int
std
mov
jmp
out
jge
outs
mov
les
sbb
repnz
and
jmp
mov
jnp
jmp
ins
mov
pop
mov
xor
fild
repnz
je
dec
movs
in
arpl
mov
pusha
push
pop
jmp
je
sbb
xchg
xor
dec
cs
fucomi
mov
xchg
inc
mov
sub
ror
stc
push
xor
test
and
gs
jbe
out
xchg
loop
xor
ins
(bad)
movs
adc
sub
lds
cdq
cmc
rol
xchg
fwait
sub
sub
ja
pop
icebp
pop
retf
dec
ds
in
mov
ds
pushf
pop
fwait
stos
and
(bad)
sbb
adc
sti
add
cmp
aam
push
sub
jecxz
sbb
mov
mov
sub
(bad)
(bad)
je
ins
cmp
jmp
jmp
sub
(bad)
cwde
(bad)
into
pop
and
mov
test
push
fstp
cmps
adc
mov
sbb
mov
and
scas
and
adc
pop
inc
hlt
mov
push
(bad)
lock
mov
out
shr
push
lods
(bad)
call
push
lds
arpl
fwait
lds
lods
mov
ret
inc
iret
sti
inc
int3
cli
in
fwait
and
jp
push
push
mov
xor
and
cmps
cmp
cmp
cmps
mov
or
sub
pop
pop
imul
(bad)
xchg
or
scas
xchg
pop
pop
mov
cmps
loop
ret
hlt
push
jno
xor
jmp
xlat
call
(bad)
jnp
xchg
mov
jg
out
outs
inc
xchg
adc
test
inc
pop
sbb
ret
cwde
movs
ret
mov
mov
or
aas
cmp
in
jno
mov
out
pop
add
je
cmp
xchg
arpl
pop
test
jns
mov
mov
adc
jno
cmps
in
pop
loop
call
int3
jg
out
xor
into
push
mov
arpl
pop
pop
dec
shr
ja
sar
ins
dec
jbe
and
cmps
aam
dec
retw
inc
das
sbb
jmp
das
sbb
and
push
mov
(bad)
xchg
xchg
lods
aaa
push
test
leave
ror
jne
or
sub
push
dec
les
hlt
mov
dec
(bad)
sub
push
cwde
push
dec
push
ret
fsub
in
xor
pop
mov
iret
lock
jl
mov
jmp
mov
jmp
mov
dec
jae
pushf
inc
shl
imul
adc
cmp
push
inc
fadd
cmp
in
push
push
mov
rol
pop
mov
add
movs
test
mov
sbb
push
test
adc
push
mov
pop
int3
jno
ud0
call
in
mov
mov
dec
fs
cmp
sub
mov
(bad)
lea
imul
push
je
cmp
mov
dec
outs
jmp
inc
and
push
rcr
jmp
and
lods
dec
jle
pop
ds
fdivr
fcomp
mov
jl
jb
jl
cmp
xchg
pop
(bad)
and
loope
push
or
dec
lock
out
in
jl
mov
push
sahf
jle
xor
cmp
mov
cmp
call
xlat
cmc
or
mov
mov
xchg
xchg
pop
adc
imul
sbb
xchg
xchg
and
rcr
in
ret
cmp
cmp
pop
outs
inc
enter
mov
mov
cmc
stos
fidiv
push
loopne
mov
and
inc
aas
(bad)
fist
xor
jl
sbb
retf
lock
iret
sub
nop
xchg
mov
les
mov
outs
mov
pop
and
popa
data16
xor
imul
nop
push
xlat
jo
sub
or
sub
test
inc
inc
rcr
adc
inc
pop
imul
(bad)
bound
rcl
fsub
aaa
aam
mov
xchg
pop
adc
xor
pushf
or
jns
inc
xor
dec
jmp
mov
ret
sbb
xor
xor
jecxz
lea
mov
adc
adc
pop
add
mov
adc
pop
jp
stc
or
fistp
or
fistp
inc
stos
jb
cmp
mov
fs
inc
mov
inc
lahf
xor
mov
pop
pop
dec
xchg
or
lods
cmp
cwde
mul
jbe
(bad)
mov
add
retf
scas
jnp
sbb
sub
repnz
rcl
push
repz
mov
jg
loopne
inc
nop
aam
je
inc
jbe
jge
mov
sub
scas
or
push
push
sbb
pop
ds
inc
adc
repz
pop
test
xchg
pop
dec
xchg
stc
or
mov
xchg
mov
ds
adc
test
jmp
gs
dec
cmp
test
fdivrp
mov
scas
or
sub
xor
xchg
ret
mov
daa
fld
mov
fidiv
adc
pushf
mov
add
fbld
es
lahf
mov
xchg
xchg
enter
jo
mov
xchg
rcr
and
jno
sar
mov
aad
iret
pop
jns
mov
cmp
ins
mov
std
xor
jle
push
out
jbe
adc
sbb
mov
je
stc
in
add
pop
ss
gs
(bad)
mov
mul
lods
xor
and
cmp
mov
push
sbb
jae
cmps
loop
pop
add
outs
adc
retf
std
xor
sub
mov
daa
stos
fistp
fsub
cmp
mov
jge
mov
fs
das
or
jge
add
out
mov
add
push
or
sbb
dec
imul
cdq
hlt
leave
ds
pop
mov
xchg
cs
test
jne
inc
aam
jl
cmps
mov
pop
mov
push
aam
icebp
shl
dec
mov
lea
or
cwde
adc
dec
sbb
stos
mov
outs
js
dec
mov
inc
mov
lds
mov
mov
mov
pushf
shl
(bad)
cmc
pop
mov
js
int
adc
adc
xor
mov
fs
das
mov
lea
call
mov
push
xlat
mov
mov
arpl
jmp
sbb
push
es
iret
pop
mov
dec
push
jno
sbb
pop
jae
cld
mov
sti
sbb
xor
pcmpgtd
pop
fbstp
jecxz
fild
popa
int3
pop
cmc
fcom
test
call
xor
jne
enter
mov
sti
adc
or
adc
mov
and
push
cmp
and
mov
adc
lds
repnz
sbb
data16
jo
add
push
adc
jmp
and
jle
mov
stos
inc
pop
and
out
push
mov
xor
imul
test
inc
movs
sbb
ja
cmc
int3
mov
test
aam
or
add
das
xor
repz
add
mov
adc
icebp
mov
sti
test
fiadd
test
adc
neg
out
push
jle
push
cmp
fs
jmp
push
stc
scas
jl
jnp
inc
inc
adc
into
push
fadd
xchg
dec
lahf
loopne
in
fstp
fst
nop
inc
pop
cmps
jb
cmps
adc
cmps
movs
mov
dec
cmc
aad
push
jg
jnp
(bad)
sbb
pop
jl
pop
sub
fist
jnp
cdq
in
fs
and
mov
(bad)
and
push
repnz
lock
push
adc
test
mov
dec
push
(bad)
dec
mov
pop
mov
data16
imul
xchg
outs
inc
jae
gs
call
adc
pop
fnstsw
lea
mov
mov
and
arpl
inc
jp
aad
mov
xor
xor
mov
dec
xlat
and
mov
call
bnd
test
lock
push
cmp
push
sbb
adc
mov
xchg
and
jge
cwde
push
loop
nop
mov
pop
mov
popa
xchg
out
iret
add
sub
cld
cmps
xchg
std
in
fld
test
jae
xchg
psrlq
push
xor
mov
lahf
push
cmp
shr
test
jmp
xor
js
aaa
xchg
cli
pop
pop
dec
pop
xchg
imul
xchg
adc
aad
aam
jmp
cmp
pusha
push
fsub
out
ds
xchg
lea
jmp
addr16
mov
in
inc
inc
add
mov
mov
fwait
mov
push
cmc
add
das
mov
adc
into
loope
lahf
mov
rcl
pop
retf
sbb
ins
jne
pop
es
cwde
shr
in
in
inc
popa
inc
cs
push
not
push
xchg
push
or
gs
jg
fld
ret
lahf
adc
sbb
(bad)
push
ffree
fldenv
scas
test
and
push
paddusb
adc
jb
sbb
inc
mov
lds
loope
and
pop
dec
xchg
stos
mov
sbb
daa
int3
cmp
ins
js
xor
or
xchg
jmp
xchg
or
stc
mov
sub
dec
enter
pop
xor
mov
imul
mov
mov
cli
xchg
dec
jo
stc
xchg
call
jne
popa
adc
ror
scas
out
data16
push
icebp
popf
js
mov
cld
add
push
push
mov
jne
cmps
(bad)
enter
jnp
xchg
or
dec
movs
cwde
sbb
js
pop
pop
(bad)
mov
adc
mov
shl
dec
test
call
pop
repz
clc
outs
cs
in
xor
sbb
inc
mov
mov
in
popf
arpl
loop
pop
cmp
mov
push
cld
push
jp
jne
outs
in
pop
dec
cld
or
mov
imul
out
retf
imul
aad
and
mov
push
test
test
sub
aas
iret
pop
add
pushf
inc
movs
enter
push
pop
mov
and
xchg
sbb
fs
(bad)
idiv
hlt
mov
popf
dec
mov
dec
or
call
jnp
iret
lods
jb
ds
mov
sbb
aaa
inc
pop
push
adc
(bad)
aam
fadd
push
add
fisttp
sub
lahf
test
lods
inc
inc
not
dec
mov
mov
push
inc
xor
and
xor
or
mov
mov
lds
push
shl
xor
mov
xor
push
out
fwait
or
aam
xchg
xchg
push
sbb
add
shl
dec
dec
cmps
stc
mov
daa
xchg
dec
popa
loope
or
and
ret
pop
mov
inc
icebp
pop
fadd
out
add
cmp
cwde
xor
xchg
shl
push
sub
xor
mov
(bad)
mov
mov
sub
shl
(bad)
xor
icebp
sbb
loop
adc
ret
jnp
call
arpl
push
and
bound
jecxz
sahf
xchg
lahf
repnz
mov
jp
in
adc
sub
pushf
scas
out
xor
int
push
aad
inc
cvtdq2ps
dec
push
nop
repz
es
xor
loop
jg
dec
iret
fldcw
and
mov
xchg
pop
or
pop
in
mov
xchg
lods
(bad)
pushf
loopne
aad
(bad)
bound
pop
outs
sahf
pop
sbb
ja
les
pop
cdq
retf
jmp
xor
add
push
retf
cmps
xchg
stos
movs
int
loope
mov
dec
jno
push
psllq
lds
inc
inc
pop
cmp
dec
jno
pop
cmp
je
add
idiv
inc
inc
test
lds
popa
(bad)
in
outs
call
cmp
push
add
repnz
popa
cwde
xor
pop
mov
and
mov
pushf
xlat
arpl
mov
clc
or
sar
push
xchg
std
push
std
cmp
sbb
pop
jge
in
icebp
add
shl
xchg
imul
mov
fld
js
sub
add
cmps
test
popa
dec
sub
add
push
push
sub
test
call
pop
icebp
pop
lock
cdq
push
lea
(bad)
sub
mov
aas
push
fnstsw
aaa
pusha
test
mov
mov
sti
push
dec
int
xor
aad
pushf
dec
shl
pop
sub
push
ficom
sbb
mov
enter
cmp
aad
retf
lods
jmp
stc
sub
and
jmp
mov
pop
xchg
mov
popa
cli
and
xor
pop
cmc
mov
sub
mov
stos
inc
(bad)
and
daa
mov
adc
int
xor
int
daa
cs
inc
and
test
movs
outs
jle
test
(bad)
stc
push
xlat
sbb
push
test
cwde
xchg
inc
pop
mov
sub
outs
ret
lahf
mov
das
cdq
and
into
ins
icebp
mov
dec
mov
jmp
mov
cmp
mov
adc
in
(bad)
pop
ror
les
sbb
lock
and
in
pop
mov
push
adc
inc
sub
icebp
iret
jo
(bad)
pop
push
js
(bad)
popa
repz
sbb
xor
jnp
scas
fwait
pop
call
frstpm(287
test
xchg
jb
add
sub
mov
push
push
mov
dec
mov
mov
out
jb
xlat
jo
data16
mov
sub
repnz
ds
sub
mov
xchg
lock
cmp
sbb
js
mov
leave
out
and
in
xchg
cmp
sub
arpl
mov
and
out
test
adc
adc
hlt
sub
mov
or
dec
pop
jns
pushf
sahf
sbb
int
pop
stos
in
test
add
iret
adc
ror
call
loop
jne
lahf
xchg
outs
aad
cmp
stc
icebp
loopne
push
cli
sub
push
gs
mov
ss
and
popf
jbe
out
cmp
pop
mov
jmp
out
mov
pushf
ss
lods
mov
mov
dec
inc
push
lea
fldenv
and
cmp
repz
jo
out
jnp
pop
jb
cmp
cmp
imul
push
jmp
sti
or
stc
mov
mov
mov
cs
sbb
addr16
in
cmc
je
popf
pushf
xchg
xchg
or
in
stos
retf
jge
sbb
push
clc
cmps
and
xchg
cs
push
push
jo
pop
pop
mov
repz
cli
sub
mov
adc
in
pop
test
cmp
in
fstp
mov
cmp
push
inc
mov
dec
xchg
movs
ret
or
sub
dec
xor
xor
and
or
loop
gs
push
sar
(bad)
nop
push
jecxz
cwde
inc
popf
sahf
cli
mov
sub
and
jge
sbb
in
pop
or
cli
cmp
adc
push
inc
outs
mov
dec
push
add
inc
rcr
test
ja
out
dec
clc
adc
and
out
xor
xor
fisub
fsubrp
dec
test
sub
inc
arpl
pop
and
dec
pop
cmp
popf
dec
or
ins
retf
lahf
mov
mov
aas
leave
jl
cmp
pop
mov
cmp
push
stc
jb
or
ins
add
mov
mov
adc
pop
jb
aam
ret
not
push
mov
idiv
mov
sahf
pop
popw
test
and
mov
ja
shl
push
dec
cmp
stc
cmc
jmp
or
push
pop
and
mov
bound
pop
or
pusha
adc
jns
sahf
xchg
(bad)
mov
fucomip
push
cmp
cmps
jb
pop
mov
pop
xchg
stos
dec
jno
mov
xor
enter
mov
mov
adc
pushf
repz
mov
cmp
add
jo
xor
sbb
mov
sti
enter
push
jno
mov
js
(bad)
push
nop
adc
cmp
movs
test
sub
add
mov
fist
push
sbb
in
out
retf
mov
pushf
aaa
mov
and
pop
ret
lods
fs
mov
aaa
or
(bad)
mov
test
adc
mov
in
iret
xchg
fld1
add
pop
xchg
or
popa
scas
jecxz
cmp
ror
outs
adc
jne
cli
jg
sbb
jle
adc
push
rol
push
shl
ret
jmp
out
and
push
add
sar
mov
inc
into
mov
mov
or
dec
push
add
mov
push
adc
inc
lods
addr16
adc
hlt
or
push
outs
mov
sub
pop
adc
imul
lods
jo
xchg
xor
inc
jb
das
mov
sub
jne
sti
(bad)
cmp
xlat
loopne
inc
inc
inc
rcl
and
cdq
xor
mov
ret
test
nop
inc
push
pop
or
jmp
mov
nop
mov
ins
pushf
shl
lods
cmp
hlt
cmp
cmp
loope
xchg
stc
push
retf
ret
imul
retf
div
aas
movs
pop
mov
std
push
js
(bad)
push
sub
adc
xor
(bad)
aas
dec
inc
fdivr
(bad)
stc
rcr
push
popf
jge
jle
fidivr
dec
add
and
ror
ds
mov
nop
pop
inc
dec
iret
stos
add
and
icebp
cwde
ss
sbb
jmp
push
nop
stc
sbb
mov
jge
lea
xor
mov
jmp
call
sub
js
jnp
pop
(bad)
loop
in
xchg
sbb
das
enter
call
aad
mov
mov
pop
or
fnstcw
outs
jmp
push
xchg
adc
jge
add
jae
xor
sar
mov
mov
mov
cs
cmp
jge
pop
pop
mov
(bad)
call
cmp
jae
retf
sbb
std
sar
cmc
test
scas
mov
xlat
and
(bad)
pop
jecxz
lock
shl
cmps
ins
xchg
cmp
aad
(bad)
jp
repz
std
fstp
sub
sar
sbb
in
cmp
cdq
xchg
aam
nop
sbb
icebp
outs
das
je
inc
and
xor
sub
mov
mov
push
aam
adc
push
jl
dec
fstp
iret
jmp
add
les
dec
push
enter
std
jecxz
rol
dec
ds
dec
pop
xchg
icebp
and
mov
cmp
inc
cmp
js
pop
xchg
and
xchg
mov
xor
fdivr
add
jno
mov
loop
push
outs
ds
mov
add
scas
ins
bound
cmp
mov
push
fisub
jmp
pop
and
ds
sbb
xchg
xchg
xor
xor
dec
pop
cmp
push
sbb
clc
loope
mov
retf
rol
icebp
dec
jo
adc
inc
test
fcom
inc
sahf
ror
and
test
xchg
in
push
xlat
inc
(bad)
and
inc
push
lahf
sar
add
out
fcom
(bad)
push
jg
(bad)
and
pop
and
pop
das
xchg
out
fwait
mov
pusha
push
inc
and
sbb
jnp
pop
sar
inc
xor
stos
jnp
adc
repnz
mov
rcr
dec
fld
mov
push
dec
outs
xchg
jl
push
sub
mov
adc
les
ja
jle
mov
xchg
jne
addr16
adc
fist
adc
sub
push
enter
ds
(bad)
jbe
fstp
dec
push
jmp
and
add
sub
sbb
js
sbb
add
push
test
add
cmc
or
mov
popf
inc
enter
push
ret
mov
cmps
ss
das
xchg
movs
test
jnp
xor
add
pop
sti
shl
pop
jl
fidivr
inc
dec
xor
test
push
xor
fdiv
jmp
xor
nop
js
pop
sbb
inc
add
addr16
imul
sbb
(bad)
or
fld
inc
jbe
add
or
jno
cmc
jnp
cmp
arpl
push
and
sub
xlat
fisubr
or
cli
cmp
cmp
int
fs
ret
cdq
ja
cmp
adc
xor
add
ss
jle
dec
xor
mov
test
sub
test
or
dec
and
mov
cwde
sub
xchg
cmp
sub
or
push
dec
pop
adc
imul
push
cmc
jns
enter
aas
jns
cs
xchg
(bad)
jmp
dec
cmp
jecxz
in
jnp
imul
adc
and
mov
ret
fistp
mov
cld
mov
adc
(bad)
daa
inc
sar
xchg
cmp
sbb
outs
mov
push
aad
cwde
inc
sbb
mov
movs
mov
mov
push
xor
jmp
push
and
cmp
pop
in
sbb
push
imul
dec
pop
cli
std
jl
xchg
cmp
test
repz
loop
out
push
sahf
movs
add
mov
pop
xchg
cmp
nop
loop
or
cmps
and
inc
add
es
dec
adc
adc
dec
fiadd
and
lods
mov
iret
sbb
push
(bad)
repz
ins
imul
jg
pop
jmp
fbld
push
ja
pop
jge
dec
inc
imul
outs
push
into
scas
xchg
mov
addr16
mov
cmps
nop
jmp
mov
add
fisub
sar
or
and
ins
xchg
pop
xchg
retf
loope
and
xchg
mov
cmp
mov
jmp
push
repnz
hlt
mov
stos
dec
sbb
push
adc
popf
mov
(bad)
jp
jbe
ins
dec
cmps
mov
or
in
jb
sahf
and
push
xchg
jbe
cmp
push
les
push
out
jo
fwait
pushf
mov
loop
xchg
dec
ins
adc
dec
push
xor
and
add
add
push
add
adc
cmp
mov
test
dec
sub
cwde
lods
imul
cmp
hlt
xor
and
das
imul
pop
call
xchg
in
out
mov
fwait
xor
loop
xchg
loopne
sbb
cmp
xchg
enter
or
(bad)
or
sbb
jne
pop
into
fstp
adc
and
daa
xlat
ins
iret
sbb
call
out
add
loop
and
adc
push
jmp
loop
mov
mov
scas
das
mov
jae
repz
pop
cmp
cwde
mov
sub
mov
sbb
(bad)
lods
jb
and
(bad)
push
or
pusha
les
push
sub
mov
fidivr
or
cli
jo
pop
sub
out
pusha
rol
js
fnstcw
out
ror
jp
xchg
add
and
(bad)
mov
(bad)
mov
cmp
push
mov
fld
mov
cmp
out
jecxz
ds
jae
iret
ror
xchg
les
inc
jg
jl
xchg
lods
push
xor
mov
cmp
(bad)
stc
sbb
daa
int
cmp
sti
daa
loop
outs
sti
mov
dec
popf
(bad)
xchg
jne
mov
out
test
add
imul
test
sub
into
xchg
adc
mov
ret
ja
in
cmp
jo
pop
test
pop
pop
call
out
jmp
not
xor
mov
or
cmps
not
fisubr
xor
mov
push
mov
les
cmc
push
fcmovu
scas
or
dec
and
cmp
fwait
arpl
push
mov
push
add
(bad)
ins
sub
dec
fcmove
add
(bad)
mov
inc
leave
vpmuludq
es
cs
loopne
push
and
xchg
ret
ficomp
mov
in
out
jns
cmp
cmc
movs
push
lds
adc
fidiv
mov
xchg
mov
push
xchg
(bad)
js
mov
ret
dec
pop
fst
ror
das
jno
xor
rol
fstp
inc
pushf
loope
sbb
jp
adc
and
lds
or
out
xchg
aaa
(bad)
jbe
or
xchg
jbe
push
lock
leave
xor
jae
xchg
and
xchg
dec
mov
xchg
cmc
retf
pop
sub
push
pop
sbb
sub
repnz
cs
mov
add
mov
push
sbb
inc
jge
rcr
xchg
xchg
push
shl
cmc
sub
fnsave
xor
cmp
jb
repz
lods
ficomp
ins
mov
(bad)
cmp
cmps
xor
test
pop
adc
dec
sahf
dec
das
or
and
fcom
xchg
addr16
repz
inc
cmps
das
test
xor
add
push
pushf
jmp
retf
pop
sbb
imul
lods
inc
pop
adc
adc
jmp
cs
xchg
adc
test
arpl
outs
or
add
out
mov
dec
pop
jmp
nop
cmc
push
fiadd
pop
sub
shl
push
retf
inc
and
cmps
dec
add
inc
inc
mov
push
jg
dec
adc
inc
call
jno
lods
rcr
mov
aad
lock
pmuludq
bound
enter
or
ret
cmp
mov
mul
(bad)
jb
(bad)
popa
call
sub
and
adc
and
out
mov
or
adc
inc
cli
test
add
pop
mov
neg
(bad)
(bad)
fucomp
lea
outs
test
or
stos
retf
(bad)
jmp
scas
mov
leave
mov
jne
test
adc
shl
es
cmp
add
mov
jl
nop
add
daa
push
push
into
pop
neg
add
xchg
xchg
and
add
dec
mov
cmp
fdiv
out
jecxz
mov
lahf
sbb
add
fs
cld
sbb
mov
jo
lock
add
in
enter
in
je
ins
sti
push
pop
out
add
test
outs
int
sub
and
xchg
fmul
retf
inc
xchg
or
xor
cmp
pop
data16
retf
fistp
pop
xchg
stos
mov
sub
add
mov
outs
mov
test
mov
xchg
ret
test
and
call
aam
leave
out
stos
mov
xor
pop
shld
test
push
pop
outs
inc
sar
mov
xchg
mov
push
mov
movs
dec
push
mov
jge
test
aam
xor
pop
xchg
clc
lea
mov
mov
sub
outs
inc
mov
or
mov
fldpi
repz
xor
in
lea
adc
xor
cmp
pop
sub
test
repz
ret
inc
stc
adc
jp
les
push
shl
push
mov
repnz
clc
std
pop
jnp
sub
popf
(bad)
xor
push
icebp
movs
mov
push
adc
lea
cmp
aad
push
(bad)
add
add
jp
aam
repz
out
sar
ror
jo
pop
mov
jp
adc
fild
ins
addr16
cli
pop
add
cld
ret
mov
jno
pushw
jb
fbld
jmp
cmp
push
clc
jae
dec
js
jp
vphadddq
lods
mov
cmc
jp
outs
jg
out
mov
xchg
sbb
mov
mov
pop
mov
xchg
ja
ins
aaa
or
fisubr
jne
pop
adc
out
mov
pop
jae
mov
push
jno
lock
int3
mov
lock
loopne
js
lds
xlat
pop
cmp
push
xor
push
mov
stos
and
stos
in
mov
push
scas
or
inc
repz
test
fisub
std
je
shr
push
sbb
inc
dec
fild
fcomp
adc
hlt
inc
cmp
push
fwait
sbb
fstp
jge
inc
xchg
sub
mov
ror
push
inc
add
test
mov
xchg
xor
mov
push
xlat
inc
repz
inc
jecxz
aaa
dec
iret
fimul
data16
mov
loope
inc
lahf
xchg
xor
repz
xor
jmp
outs
popf
iret
fs
ins
inc
xchg
mov
sbb
mov
hlt
jbe
adc
inc
and
or
or
or
cld
stc
xchg
iret
xor
add
jle
sbb
jmp
or
mov
iret
scas
pop
loopne
in
cdq
inc
xor
cmc
ss
pop
pop
out
xchg
inc
xchg
xchg
and
imul
dec
nop
test
cmp
sbb
mov
out
xchg
outs
sub
xor
and
ins
ins
lock
dec
gs
leave
aas
xor
int
xchg
and
mov
arpl
jne
aaa
mov
ret
iret
pop
dec
aaa
pop
sbb
jno
cli
add
inc
pop
cmp
push
cmp
push
mov
ret
imul
mov
jg
call
pop
lock
or
addr16
pop
dec
fist
mov
sti
mov
lds
mov
out
loope
or
or
stos
popa
cdq
inc
mov
add
adc
xor
jmp
enter
inc
pop
xchg
pop
mov
int
sbb
ss
int3
pop
push
dec
add
mov
mov
les
nop
jg
adc
cmps
(bad)
mov
adc
xor
and
stos
stc
jmp
outs
inc
xor
sahf
fcomp
jne
dec
mov
loope
jmp
sbb
jecxz
mov
add
sub
or
mov
loop
push
push
sub
xor
nop
mov
xchg
(bad)
aas
mov
xchg
or
and
add
scas
ror
pushf
jae
inc
mov
cmp
pcmpeqd
retf
cmp
dec
push
sbb
pop
das
sbb
shr
pushf
pop
xchg
xchg
jno
stos
sahf
xchg
inc
xlat
test
div
stc
or
jb
xor
outs
fldcw
mov
rol
inc
mov
retf
xchg
out
rol
or
sub
lods
and
stos
out
add
mov
out
aam
cmp
and
(bad)
lods
fldcw
xchg
jns
dec
jbe
pop
pop
lea
stc
lds
js
cmc
pop
mov
call
mov
pop
mov
xlat
daa
jp
arpl
out
mov
sbb
dec
mov
mov
jmp
jbe
in
pop
daa
jbe
fs
push
loopne
lea
enter
in
scas
mov
xchg
jo
enter
jmp
addr16
das
adc
inc
jae
sub
lds
mov
mov
sahf
inc
pop
pop
jbe
fisubr
daa
adc
int3
test
ins
ins
jp
es
mov
in
outs
fdivr
inc
jl
into
dec
jns
lods
(bad)
pop
and
or
cmp
lods
and
hlt
xchg
lods
pusha
xor
and
sbb
loopne
(bad)
push
xchg
xbegin
inc
gs
mov
mov
sub
sub
shr
movd
imul
aam
addr16
xchg
bound
test
test
or
retf
mov
adc
test
dec
fidiv
push
stc
or
mov
xor
addr16
cmps
push
inc
mov
and
cmp
mul
popa
fwait
mov
jnp
mov
cwde
fcom
mov
scas
out
popf
clc
les
mov
push
dec
in
add
dec
enter
add
jecxz
sbb
das
ret
fdiv
xchg
push
shl
xchg
and
xor
push
imul
sub
mov
sahf
cmp
retf
ins
stc
xor
jnp
cmp
jno
mov
mov
adc
inc
leave
call
mov
cmps
inc
data16
mov
sbb
je
test
mov
jne
jle
sbb
mov
(bad)
fidiv
test
mov
test
adc
hlt
call
clc
(bad)
mov
or
pop
mov
jle
out
mov
or
xor
dec
mov
adc
(bad)
ja
stos
pop
sub
cmp
mov
mov
outs
retf
adc
arpl
jo
repz
pop
adc
out
fwait
push
jne
pop
and
add
xlat
daa
out
or
ror
mov
xchg
ins
scas
cmp
fsub
or
(bad)
scas
fsub
es
mov
sbb
loop
nop
test
mov
mov
aam
inc
xor
icebp
ja
ret
push
jge
stos
or
mov
xor
xchg
sub
push
push
lock
in
fucomp
cmps
mov
inc
pop
leave
pop
fdiv
outs
mov
daa
(bad)
(bad)
sbb
and
cli
jmp
pop
and
ins
int3
or
aaa
call
sub
out
jbe
stc
outs
pop
add
add
aam
aam
outs
push
lock
sti
mov
add
xchg
pushf
jmp
pusha
jmp
push
push
into
int3
mov
pop
scas
repnz
test
mov
cld
cwde
movs
out
idiv
pop
inc
pop
test
xor
cmp
jecxz
mov
sub
aam
outs
outs
movs
pop
(bad)
bound
sbb
push
sete
rol
in
outs
push
mov
ret
cmps
dec
and
test
push
push
cmp
call
cdq
int
cmp
or
inc
mov
and
xchg
imul
jp
pop
mov
mov
adc
jb
jne
jl
jno
mov
mov
cmc
cmp
mov
jmp
and
shl
adc
mov
es
cmp
xor
fsubr
loopne
sbb
adc
push
icebp
push
sbb
aaa
fs
ins
jmp
ret
mov
das
das
div
or
call
addr16
inc
cwde
inc
bound
mov
inc
aam
addr16
rcr
ret
jg
or
mov
push
add
ds
imul
iret
jbe
pop
cld
cwde
mov
nop
xor
stc
mov
push
inc
mov
ficomp
dec
dec
loopne
sbb
movs
ret
pop
mov
jecxz
or
stc
cmps
adc
pusha
nop
out
xor
js
(bad)
push
lods
add
fld
(bad)
mov
pop
aad
cli
out
sub
enter
dec
es
sub
cli
loopne
rol
mov
adc
or
pusha
(bad)
mov
clc
inc
ror
out
imul
cli
mov
or
fwait
xor
cdq
and
mov
pusha
icebp
nop
neg
mov
dec
xchg
out
push
test
cmp
hlt
mov
and
inc
loop
jbe
mov
ret
cmp
sub
jns
and
test
mov
cdq
jge
(bad)
inc
neg
and
xchg
(bad)
cmp
xchg
lds
enter
sub
scas
addr16
bound
adc
dec
cld
cmp
sbb
fwait
xchg
aad
out
cmp
add
sub
adc
add
(bad)
inc
or
or
cmp
cld
xchg
or
sti
mov
loop
pop
loope
in
lahf
and
mov
cli
mov
das
adc
mov
inc
xchg
pop
mov
test
in
push
repz
pop
imul
call
xor
push
sbb
stos
mul
(bad)
out
dec
inc
dec
inc
fwait
ja
xchg
fs
loope
addr16
repnz
mov
add
and
clc
aas
leave
push
mov
out
inc
sub
mov
pusha
ss
ficom
push
cmp
rol
adc
mov
cmp
retf
(bad)
push
aad
dec
test
cdq
in
jae
fnstcw
sbb
inc
sub
jl
or
mov
mov
mov
iret
out
fstp
inc
jbe
frstor
pushf
test
ds
outs
aad
jl
cwde
icebp
pop
sub
pop
addr16
std
das
sub
test
sti
and
xchg
mov
mov
fcomp
adc
add
or
cmp
ret
(bad)
arpl
xchg
mov
fidivr
cld
cmp
jo
les
mov
sbb
sub
mov
cs
inc
sub
add
mov
out
mov
cmp
jae
std
imul
jno
pop
cld
mov
xor
call
xlat
mov
fidivr
in
cmp
ss
cli
sbb
adc
sub
dec
push
into
mov
sub
pop
and
icebp
neg
dec
xor
push
and
xchg
pop
dec
pop
aam
adc
mov
pop
push
mov
xchg
cld
fcomp
mov
inc
sar
dec
mov
and
or
or
frstor
or
outs
lods
ror
pop
jbe
adc
icebp
pushf
push
or
lock
adc
sub
mov
call
sub
sub
and
cs
int
fdiv
in
mov
pop
bound
in
ins
xor
xor
dec
das
cmp
sbb
lods
xor
jp
adc
dec
fld
inc
ja
cmp
jae
and
xor
add
push
inc
scas
sbb
dec
mov
cmp
ja
shl
leave
xlat
mov
adc
retf
icebp
push
dec
popf
test
mov
pop
push
sub
xor
adc
retf
(bad)
add
ss
dec
mov
pop
retf
jne
jb
jp
adc
loop
test
rcl
xchg
sub
or
mov
sar
sub
popa
pop
ds
mov
cdq
test
imul
push
pop
mov
movs
dec
mov
in
sub
rcr
ficom
fmul
mov
adc
in
cld
popa
aam
push
(bad)
fbld
mov
xor
dec
(bad)
bound
dec
fsubr
pop
fisub
bnd
pop
dec
imul
in
aas
sar
in
loopne
add
mov
in
ficomp
push
mov
outs
(bad)
(bad)
xchg
lods
inc
in
mov
jecxz
rcl
sbb
pop
and
xor
push
sub
cmp
popa
addr16
pop
jno
shl
inc
and
cmp
xchg
je
sbb
sbb
(bad)
icebp
inc
cmc
cmp
sub
es
cwde
mov
icebp
add
stc
(bad)
ja
pop
adc
aaa
fdivp
out
sbb
movs
out
sar
inc
dec
stos
inc
neg
inc
lock
sti
icebp
push
dec
pop
add
stc
aam
add
aam
dec
stos
and
add
push
and
mov
repz
clc
aad
mov
adc
shl
cmp
(bad)
cmp
jecxz
inc
out
hlt
jl
test
movs
inc
(bad)
sub
jmp
xor
enter
add
ss
mul
cs
mov
shl
neg
pushf
inc
mov
sbb
mov
ror
add
jmp
dec
(bad)
stc
in
mov
jmp
(bad)
aad
push
inc
int
ins
add
inc
ror
stc
pop
pop
ins
mov
repnz
not
jg
dec
cdq
mov
ins
movs
bound
and
push
leave
jp
xor
test
mov
inc
stc
clc
xor
sti
or
call
cmp
dec
inc
pop
cwde
lods
mov
enter
pop
push
adc
lahf
jne
cmp
fnsave
xchg
(bad)
add
sub
mov
cld
int
popf
fimul
fld
or
push
ds
add
lea
push
outs
enter
jmp
out
cmp
push
mov
adc
out
std
sbb
mov
push
or
fadd
jne
push
lea
jnp
lahf
movs
sub
jno
sub
jne
stos
cmp
lods
xchg
pop
mov
add
push
fisub
aas
ds
xor
inc
(bad)
in
mul
out
pop
jg
mov
scas
retf
jle
mov
xor
sub
mov
sbb
xor
dec
cs
sbb
addr16
inc
or
(bad)
out
mul
fsub
or
xor
xchg
sbb
xor
je
retf
imul
sar
test
push
add
pop
pop
das
jns
outs
mov
das
dec
mov
jmp
dec
mov
jle
enter
push
vunpckhpd
mov
and
dec
imul
jmp
sbb
dec
pop
dec
or
scas
mov
addr16
mov
xor
lods
shr
adc
ret
packssdw
pop
mov
pop
prefetch
mov
int3
mov
sub
sub
cmc
jns
inc
mov
mov
fcmovbe
scas
inc
mov
jnp
and
pop
adc
mov
(bad)
ja
out
adc
sub
or
icebp
mov
sar
or
mov
arpl
std
icebp
cwde
or
jnp
xchg
lahf
cmp
pop
mov
mov
in
adc
xchg
push
dec
outs
shr
ins
iret
mov
shr
xchg
ror
lods
and
outs
scas
jge
and
scas
xchg
inc
aad
aaa
enter
and
xchg
or
cs
stc
xchg
in
push
popf
push
jmp
call
xchg
pop
or
popa
inc
jg
xor
lods
xchg
or
movq
fdiv
jge
xchg
cmp
dec
inc
sub
sbb
xor
out
mov
(bad)
push
cmp
or
mov
js
inc
dec
xchg
jnp
add
cmc
gs
add
xchg
loope
dec
scas
leave
mov
pop
adc
mul
dec
mov
xor
sub
out
lods
mov
mov
enter
xchg
pop
stc
sbb
stos
pop
cmps
es
add
push
repnz
outs
movs
scas
out
adc
jg
lds
jne
mov
sub
movs
(bad)
jmp
movs
push
dec
or
dec
adc
sub
cmps
xchg
test
sub
and
scas
addr16
cmp
sub
or
(bad)
push
sbb
(bad)
mov
fcomp
sahf
xlat
sbb
pop
or
data16
sbb
sub
add
sbb
call
lahf
data16
dec
test
cmps
test
xchg
dec
paddusb
loope
je
dec
dec
push
adc
outs
aam
rdpmc
out
xor
sub
cli
dec
jl
inc
loop
sbb
pop
fwait
sub
int
jnp
retf
jmp
dec
push
imul
test
aam
mov
jle
sti
or
out
repnz
scas
inc
xchg
pop
adc
pop
xchg
inc
pop
sbb
dec
adc
or
ja
add
out
imul
das
push
(bad)
das
pop
and
hlt
or
call
cdq
pop
in
daa
(bad)
dec
xchg
inc
fistp
push
shl
xor
push
mov
sub
and
jnp
mov
push
xchg
scas
das
xchg
push
add
movs
lea
xor
cmp
popa
push
ja
inc
scas
icebp
jecxz
lea
mov
xor
and
cmp
inc
repnz
pop
mov
imul
mov
cmc
aaa
pop
repnz
movs
aas
xchg
cdq
dec
and
ret
and
sub
les
retf
popa
xor
call
sub
or
push
jge
and
xor
les
addr16
and
movs
pushf
out
ret
mov
daa
int3
and
push
pop
mov
or
jmp
imul
outs
mov
sub
(bad)
loop
test
stos
mov
bound
pop
cmp
push
lds
shl
xor
xchg
xor
std
aas
shl
popf
shl
test
mov
loop
mov
add
push
fwait
and
(bad)
mov
test
or
call
lock
sbb
ins
aas
pop
jecxz
(bad)
stc
ds
aaa
rcr
out
jno
xchg
dec
mov
test
dec
arpl
and
push
lods
cmps
movs
movzx
test
push
dec
movs
cmp
repnz
arpl
(bad)
js
push
(bad)
in
push
out
fdiv
adc
dec
dec
(bad)
iret
test
nop
out
add
clc
mov
in
add
not
jb
out
hlt
out
data16
pop
adc
xchg
out
test
(bad)
xor
dec
call
mov
mov
out
sahf
sub
shl
out
mov
jge
gs
rol
mov
push
sub
and
dec
mov
adc
cmc
dec
push
std
or
and
xchg
stos
in
movs
xlat
adc
mov
test
aad
mov
and
lea
pop
jb
jle
push
repz
fisubr
enter
xchg
jmp
dec
mov
xchg
fcom
sbb
add
jmp
pop
xor
dec
push
repz
and
xchg
lds
pop
adc
frstor
sub
xchg
call
ss
out
and
pop
cmp
jmp
mov
call
mov
imul
icebp
push
scas
mov
push
inc
xchg
cmp
jle
xor
mov
push
aas
pusha
dec
cdq
shl
aaa
xchg
pushf
out
mov
push
js
push
fidiv
xchg
mov
adc
ficom
fisttp
repnz
cmp
outs
movs
jbe
xor
loopne
jle
xchg
leave
xchg
cmp
sub
test
sbb
aam
mov
mov
xchg
xchg
sbb
stos
scas
lahf
hlt
pop
mov
aad
add
xor
jns
icebp
push
jle
inc
or
sar
ja
fs
bound
(bad)
hlt
sub
es
pop
popa
add
je
daa
mov
xchg
fisttp
cmp
cdq
rcl
js
sbb
xchg
push
pop
pop
xchg
jne
clc
sub
sti
lock
aam
and
lahf
adc
scas
mov
call
jns
imul
mov
xchg
mov
and
mov
add
jg
adc
retf
imul
aam
push
push
scas
shr
movs
dec
mov
stos
xchg
cdq
sub
push
and
aad
push
cs
test
stos
dec
sub
adc
add
mov
push
in
add
repz
ja
pop
mov
and
test
test
adc
ss
fwait
aas
movs
ja
or
(bad)
out
cwde
pusha
popa
sahf
sub
push
popa
test
into
daa
inc
pop
mov
xchg
jmp
fs
cdq
ins
fsub
je
sub
lods
mov
inc
mov
mov
adc
push
(bad)
push
dec
jl
pop
inc
aas
mov
push
bound
cmp
push
adc
loop
out
sbb
in
lea
dec
ins
push
pop
sub
jmp
dec
inc
cmp
mov
nop
or
call
push
xor
imul
(bad)
int
test
pop
inc
pop
ss
xor
pop
push
jbe
mov
mov
popa
popa
and
imul
dec
(bad)
out
lods
sar
jnp
sahf
pop
and
cmp
pop
mov
push
mov
daa
fs
stos
pop
sub
jns
aas
pop
adc
data16
mov
jl
push
pop
ret
mov
xor
stos
test
sbb
ds
xlat
lds
sub
pop
xchg
cli
mov
mov
imul
add
je
lahf
or
div
add
sub
ds
cld
push
push
sub
inc
pop
lods
fild
lahf
test
inc
mov
inc
cmp
xchg
mov
push
adc
adc
call
sub
pop
in
sub
cmp
popa
ds
or
dec
push
addr16
mov
in
fcmovb
xchg
inc
mov
sbb
fcomp
loope
mov
adc
shl
test
add
test
or
lods
loopne
pop
mov
push
push
jle
(bad)
sub
cmc
outs
stos
stos
out
lahf
and
or
mov
jecxz
xor
add
sub
(bad)
xchg
aaa
and
jp
dec
je
stc
cmp
mov
cmc
fs
push
jmp
(bad)
outs
fcmove
cld
jo
pushf
repz
dec
mov
stos
lods
dec
shl
rol
or
jnp
icebp
pop
push
cld
out
sbb
in
pop
sti
pop
std
add
mov
mov
sub
call
or
mov
adc
int3
in
jle
pop
retf
movs
movs
sub
dec
sahf
push
jno
mov
out
sbb
or
cmp
call
push
pushf
xor
ret
or
mov
mov
adc
sub
and
jle
fwait
mov
cmp
jle
cmp
pop
ins
int3
cmps
mov
nop
xor
add
sub
push
and
inc
add
xchg
mov
mov
lods
aad
ss
jo
mov
addr16
push
scas
aad
call
sbb
xchg
adc
mov
lods
(bad)
mov
je
lds
or
add
mov
push
icebp
les
push
inc
pop
pop
jbe
outs
xor
jmp
test
outs
xor
cmp
mov
xlat
mov
push
aaa
ret
pop
xchg
sbb
je
jecxz
push
fisubr
pop
leave
and
push
push
loope
mov
xor
jecxz
pusha
icebp
es
adc
jo
jmp
lea
in
mov
ret
add
pop
mov
xchg
test
movs
outs
mov
xor
leave
fistp
push
nop
mov
or
xor
aad
pop
mov
ins
(bad)
retf
in
add
leave
xchg
or
and
aas
pop
jb
jge
shl
outs
xchg
js
mov
mov
mov
mov
out
mov
fbld
rcr
adc
mov
xlat
adc
adc
cmp
pushf
pop
push
ret
jns
push
adc
inc
rol
jae
push
push
xchg
out
mov
ins
int3
mov
popa
jb
add
stc
retf
push
sahf
ja
mov
hlt
adc
and
mov
xor
and
sbb
aam
call
pop
arpl
adc
xor
sbb
sti
cmps
push
jns
pop
pop
inc
xchg
inc
inc
sbb
pushf
jmp
sub
(bad)
xchg
int
sbb
arpl
push
js
sahf
imul
pusha
int
xlat
xlat
mov
or
mov
out
arpl
adc
in
aad
ret
outs
mov
pop
jns
es
cli
aad
mov
mov
or
sbb
add
sar
mov
test
sahf
arpl
jecxz
jp
adc
jmp
xchg
jb
and
aam
inc
mov
push
pop
adc
sbb
jns
xchg
cmp
shl
xor
pushf
dec
je
fsubrp
or
or
xor
mov
adc
call
cmp
push
(bad)
in
add
mov
pop
ins
imul
jmp
and
xchg
(bad)
sbb
inc
push
push
push
ret
ins
data16
or
scas
hlt
xchg
push
cld
xor
and
or
clc
jb
pushf
jb
arpl
xchg
enter
retf
pop
lods
add
mov
dec
pop
adc
or
xor
sub
in
adc
xchg
jae
mov
(bad)
scas
mov
xor
mov
dec
sti
(bad)
cld
jge
repz
sub
fcomp
jbe
gs
xchg
(bad)
stc
push
dec
js
sub
or
dec
cld
sti
xor
in
sbb
push
daa
jae
jno
xchg
xor
fisttp
jle
daa
xchg
(bad)
mov
inc
jae
or
popa
jbe
jmp
rcr
dec
xchg
add
and
pop
mov
hlt
jmp
mov
jg
(bad)
adc
data16
cli
xchg
es
mov
shl
inc
dec
les
js
xor
jmp
mov
xor
sbb
jle
shl
lock
sub
leave
sub
xor
pop
cld
xchg
xchg
and
xlat
loop
cmps
gs
xchg
add
and
int3
adc
bound
mov
pop
neg
scas
mov
push
cs
xor
int
jmp
pop
scas
or
sbb
push
add
int3
and
mov
ins
xchg
ins
push
jno
sbb
ret
in
not
out
xchg
mov
sub
push
inc
xchg
shr
mov
in
(bad)
fcom
inc
mov
dec
sub
jae
sbb
mov
jb
iret
add
and
call
test
fmul
jl
pop
sbb
xchg
ds
fcomip
dec
jbe
fstp
ror
sbb
stc
mov
lahf
pop
jbe
or
sbb
xchg
push
pop
test
call
mov
push
dec
enter
xchg
mov
sti
cmp
jbe
out
and
movs
jp
shr
das
enter
cmps
sub
shl
and
das
xchg
or
ret
lds
push
or
ret
push
je
stos
inc
popa
add
xor
call
pop
or
jmp
cwde
in
dec
aaa
mov
mov
cli
mov
pop
pop
into
in
pop
fistp
jl
add
daa
push
xchg
cmp
hlt
dec
imul
push
jbe
xor
imul
jnp
mov
add
pop
inc
pop
xor
daa
leave
inc
fs
loop
int3
cmp
imul
bound
stos
sbb
jp
aad
sar
(bad)
cmp
data16
sahf
fnstenv
xchg
cdq
imul
adc
fldenv
or
cli
jne
mov
es
imul
mov
pop
sub
pop
xor
sub
leave
sub
sbb
retf
mov
dec
pop
mul
hlt
loopne
in
je
push
push
repz
xchg
lods
and
out
aaa
inc
sub
mov
into
fs
mov
(bad)
cmp
or
mov
pop
fild
mov
mov
sahf
mov
(bad)
cmp
jne
cs
or
cmps
cmp
ret
call
mov
fcom
retf
fld
dec
sub
ror
cmp
inc
sub
sub
dec
push
add
jne
inc
out
movs
xchg
push
jg
retf
lods
add
xchg
sahf
xchg
push
push
sar
lahf
jbe
adc
mov
add
ror
jge
lock
sub
stos
sti
or
idiv
ds
pop
out
dec
lahf
lahf
icebp
xor
idiv
pop
inc
mov
mov
neg
add
ins
jae
add
fdivp
std
and
push
fidivr
pop
cmp
or
test
or
sub
mov
test
xor
ja
ins
mov
stc
loopne
sbb
ins
and
and
xlat
je
(bad)
aam
fiadd
ror
fmul
sub
fcmove
movs
sbb
and
stos
inc
into
rcl
or
sbb
stc
dec
aam
adc
imul
push
int3
out
lods
jbe
mov
push
out
leave
or
fstp
push
hlt
or
push
mov
(bad)
ins
test
sbb
imul
stos
ins
xor
cs
sbb
mov
jb
(bad)
in
inc
cmp
jno
sahf
dec
cmp
sbb
cmp
push
ret
push
pop
mov
mov
push
hlt
stos
pop
mov
xor
xor
(bad)
stos
lock
xor
sti
jp
fistp
test
or
jbe
and
adc
xchg
xor
leave
jecxz
add
jns
dec
std
mov
xchg
inc
or
jbe
jae
and
ja
add
lea
fcmove
or
jle
jmp
xor
inc
movs
jnp
inc
enter
jnp
ret
and
popa
mov
daa
addr16
sub
in
push
cmp
(bad)
aam
scas
jne
clc
mov
jecxz
push
or
cmp
jmp
pop
ds
pop
mov
xchg
dec
sbb
jmp
inc
pop
mov
add
push
pop
jmp
popf
(bad)
call
add
scas
xor
rol
xchg
pop
mov
mov
enter
dec
dec
pop
dec
jnp
rol
scas
push
xor
cmps
sbb
sbb
movs
jmp
sbb
add
xchg
(bad)
fsubr
outs
dec
cs
jle
push
mov
mov
xchg
fistp
sub
sbb
hlt
mov
cdq
out
in
loop
xchg
sbb
jne
push
mov
cmp
stc
pop
(bad)
jmp
dec
mov
inc
mov
or
fwait
je
mov
popa
pop
jmp
into
mov
fs
sbb
dec
cmp
xchg
pop
loopne
push
dec
push
xlat
push
pop
jmp
push
repz
fs
out
adc
mov
sahf
xchg
int3
(bad)
dec
scas
dec
retf
lahf
inc
xor
adc
movdq2q
inc
mov
adc
retf
pop
pop
jo
inc
mov
jg
dec
pusha
jns
(bad)
mov
pop
and
je
and
loopne
iret
cmp
call
sub
lea
leave
mov
sub
dec
jb
jg
and
add
inc
cld
sub
in
into
nop
mov
(bad)
fdivr
je
xchg
push
out
popf
mov
mov
adc
jnp
lahf
push
mov
sbb
movd
test
lds
icebp
sbb
mov
sbb
test
add
int3
add
adc
mov
(bad)
les
jg
pop
das
cmp
mov
or
xor
push
adc
and
addr16
dec
psllw
mov
cmp
mov
sub
in
ret
mov
dec
je
(bad)
sub
push
enter
daa
pop
cvtdq2ps
pop
call
xchg
mov
or
dec
xor
jmp
sbb
mov
xor
nop
ss
test
pop
push
fnstenv
sub
jmp
jne
scas
cmp
ret
loope
and
ins
aaa
jge
dec
xchg
and
fmulp
mov
loopne
xchg
outs
leave
adc
aas
jecxz
dec
lods
dec
sbb
retf
sbb
jnp
lds
rcl
inc
cmps
xchg
and
sub
popa
add
neg
pop
jle
leave
popf
cmps
sbb
outs
push
scas
in
or
stc
cdq
popa
sub
jp
xchg
retf
pop
and
in
cmp
inc
stc
mov
push
push
xchg
and
gs
out
mov
das
mov
xchg
aas
adc
adc
nop
xchg
mov
jmp
sub
arpl
fdivr
push
adc
sub
nop
sbb
or
inc
and
fisttp
test
repnz
das
mov
mov
dec
add
mov
and
shl
aam
test
cmp
mov
cmc
ret
sub
push
pop
call
sbb
lock
icebp
jge
xchg
iret
add
imul
mov
sub
adc
jbe
cld
adc
mov
stos
mov
push
cmp
push
xor
stos
inc
test
cmp
call
(bad)
data16
fdivp
repz
ret
pop
pop
pop
rcl
ins
in
cmp
into
jnp
out
inc
add
das
pop
xchg
and
push
out
cmp
jo
lahf
lahf
jnp
xor
or
jo
pop
out
xlat
call
adc
cmp
lds
mov
dec
loop
lds
xchg
xor
lahf
push
mov
inc
push
push
mov
xchg
adc
push
cld
jb
and
inc
aad
dec
or
inc
mov
jae
push
jl
aam
cmp
cmp
rcl
fcmove
mov
mov
mov
xor
aam
pop
dec
mov
ds
xchg
imul
adc
cmc
pop
sti
sbb
add
test
rol
pop
in
lods
inc
sub
add
jmp
jo
mov
mov
sbb
adc
dec
out
jne
nop
adc
add
stc
imul
add
int3
dec
and
mov
dec
enter
mov
ja
mov
inc
(bad)
(bad)
adc
cmp
mov
push
mov
cmp
push
scas
xchg
dec
inc
or
xor
mov
jmp
add
cld
inc
xchg
lock
inc
movs
lahf
and
mov
loope
adc
and
xor
and
(bad)
gs
fisub
repnz
cwde
push
out
loopne
rcl
xchg
adc
or
call
and
mov
xor
das
repz
jb
sbb
pop
pop
xlat
dec
mov
lea
nop
sub
push
sbb
xor
mov
adc
and
xchg
fldenv
loopne
inc
xor
fmul
aam
xlat
(bad)
test
hlt
jl
adc
je
scas
data16
out
sub
xor
pop
inc
push
in
push
int
das
arpl
arpl
mov
int3
in
sbb
xor
unpckhps
retf
mov
fwait
and
ins
mov
les
xor
dec
retf
jnp
push
xor
cmp
xor
xor
mov
xor
ja
mov
sbb
push
cmc
shr
dec
shl
mov
rcl
mov
stos
mov
jbe
jge
jge
adc
movs
adc
mov
and
inc
inc
or
sub
ds
mov
mov
inc
push
fst
sub
adc
in
(bad)
fstp
data16
inc
outs
jne
shl
(bad)
mov
cmps
xor
pop
pusha
jb
nop
test
mov
into
loope
out
adc
setne
aas
inc
aas
in
hlt
pop
pop
sub
mov
mov
stc
aaa
in
and
fcmovnu
adc
psubusw
arpl
push
add
sub
xchg
mov
mov
or
int3
scas
dec
xor
sbb
xchg
retf
push
cwde
in
sbb
cmp
stc
lods
push
repz
or
arpl
push
xor
xchg
or
test
xor
fstp
call
push
test
rol
ins
mov
dec
imul
or
scas
movs
xor
daa
ret
ret
mov
or
push
jg
inc
xchg
pop
mov
test
lods
jecxz
xchg
and
ja
xchg
aaa
loope
mov
nop
out
cmp
jge
test
imul
fld
jmp
call
nop
xor
xchg
cmp
lods
sbb
nop
imul
inc
xchg
fst
mov
aam
sub
(bad)
pop
mov
adc
(bad)
mov
jnp
jo
xchg
mov
repnz
es
inc
iret
jbe
and
xor
sbb
arpl
pop
jbe
hlt
pop
inc
nop
int3
daa
xchg
add
in
mov
add
(bad)
cmp
mul
mov
fwait
pop
hlt
pop
push
fcom
aaa
push
cmp
inc
xchg
xor
dec
jne
les
pushf
cld
sbb
sbb
mov
mov
push
and
lds
add
loope
sbb
ror
pop
shl
mov
xchg
ret
xchg
push
aam
or
mov
int3
call
js
lea
push
and
es
in
pop
pop
mov
push
and
cmps
add
sbb
aas
jns
jecxz
xchg
inc
or
test
push
add
mov
cmp
gs
call
jmp
sub
inc
cmp
inc
push
push
and
mov
cmp
and
sbb
test
lea
mov
mov
pop
out
iret
ret
ret
fs
ins
in
cmp
mov
xchg
inc
retf
scas
add
pop
jnp
and
les
cmp
aas
pop
in
sbb
lea
in
sub
xor
xchg
or
and
mov
sbb
pop
jge
int
cld
test
pushf
retf
out
(bad)
imul
push
xchg
and
dec
aam
pop
out
push
hlt
mov
sbb
in
or
fild
mov
mov
dec
ret
push
mov
cwde
dec
jae
sbb
cld
cld
mov
retf
sub
out
push
(bad)
xor
pop
cmp
dec
movs
idiv
xchg
js
scas
push
jbe
loopne
call
js
add
call
xor
jnp
xchg
xchg
xor
inc
aas
pop
dec
and
jmp
mov
xchg
xor
(bad)
imul
fs
push
cmps
icebp
inc
xchg
out
jmp
cmp
inc
addr16
mov
inc
mov
dec
push
push
cmp
test
mov
or
(bad)
mov
jne
xchg
pop
mov
call
mov
inc
and
leave
push
push
mov
fistp
mov
repnz
xor
shl
sbb
fmul
mov
xor
and
adc
loope
push
pop
(bad)
mov
stos
lock
fsqrt
lods
cli
mov
fld
or
pop
int3
loop
data16
mov
xor
mov
pop
and
dec
and
inc
mov
jle
stos
cmp
jg
(bad)
push
push
dec
push
test
outs
push
repz
jge
mov
imul
jp
int3
mov
sub
(bad)
into
fcom
pusha
sub
cmp
in
loopne
je
call
jp
iret
mov
cmp
or
sbb
lods
ror
mov
xor
es
jne
sub
and
loop
stc
and
dec
sahf
nop
xlat
(bad)
test
add
add
fldenv
xor
mov
cmc
stc
rcr
ja
ret
push
and
mov
rcl
push
out
(bad)
cmp
or
rcr
jbe
ss
mov
fst
repz
lds
jno
int3
add
xchg
xor
push
xor
aaa
cmp
fcomp
ins
xchg
and
scas
arpl
xor
jp
call
aaa
(bad)
iret
mov
xchg
xor
push
pop
inc
jo
adc
shl
daa
pop
test
xor
idiv
inc
mov
enter
popa
sub
ss
sbb
stc
inc
mov
add
xor
push
inc
in
jo
xchg
in
and
adc
xor
cmp
sbb
ror
fiadd
ret
retf
es
inc
in
xchg
das
mov
pop
push
push
adc
pop
cmp
cwde
test
inc
enter
lds
or
or
pop
cmc
add
movs
mov
(bad)
fwait
cmp
fbstp
cmp
cli
xor
int3
inc
mov
and
xor
call
gs
sar
mov
stc
jns
cmp
pushf
fisub
sbb
xchg
enter
lds
ficomp
in
fwait
jns
pop
mov
mov
(bad)
out
dec
and
ret
scas
push
dec
ss
dec
fstp
pop
dec
dec
add
sti
push
loopne
dec
iret
jae
mov
loopne
mov
movs
(bad)
pop
out
sbb
or
push
movs
imul
mov
loope
cmc
jg
xchg
mov
cdq
outs
clc
inc
pop
(bad)
mov
div
sbb
std
ret
sbb
(bad)
sbb
sub
jae
cmp
add
test
ja
mov
jb
cmps
or
cld
add
sbb
repnz
sbb
push
ins
outs
pop
sbb
jnp
imul
dec
mov
movs
rol
add
xchg
xchg
enter
nop
xchg
(bad)
loop
fnstenv
js
sahf
dec
inc
xor
sbb
and
mov
or
enter
sbb
pop
add
psubusw
push
mov
jmp
jno
jge
dec
fsubr
jnp
ja
clc
scas
mov
arpl
mov
push
stos
cmps
fwait
(bad)
setg
test
mov
retf
add
xor
sub
adc
jg
je
inc
xor
cmp
add
xchg
(bad)
mov
pop
sub
cmp
cld
dec
nop
pusha
push
fucomip
sar
into
cmps
sbb
pusha
rcl
sub
gs
adc
movs
test
or
cmove
mov
not
stos
xor
or
mov
sub
pop
icebp
dec
push
pop
jb
pop
sbb
xor
xchg
pop
cmp
mov
jp
rcl
(bad)
pop
mov
ret
fidiv
je
dec
dec
sub
leave
shl
xlat
imul
aam
xchg
je
shl
shr
sbb
or
push
(bad)
imul
mov
out
inc
aaa
data16
sub
or
mov
inc
sahf
es
inc
sahf
pop
nop
adc
retf
xchg
push
mov
jle
ins
dec
jp
sti
gs
inc
mov
das
push
movs
repz
inc
shr
popa
push
pop
sbb
push
xchg
pushf
cwde
cwde
shl
xchg
fisubr
cmps
outs
dec
mov
ds
add
xor
in
adc
je
inc
adc
sbb
pop
push
test
scas
inc
popf
shr
push
in
mov
loop
push
add
cmp
movs
jl
mov
dec
inc
cmp
push
data16
outs
int
or
sbb
outs
int3
cdq
stos
leave
cmp
jle
push
pop
mov
or
mov
(bad)
pop
cmp
fist
es
jg
cmp
mov
add
mov
pop
daa
add
movs
enter
jo
pop
mov
and
mov
je
sbb
push
lock
popa
int3
or
mov
jmp
outs
leave
mul
ret
and
mov
shr
mov
rol
sbb
je
ins
push
jg
adc
pop
xor
stc
int
fisttp
dec
stos
aaa
ret
out
push
call
jb
inc
movs
cmps
test
lahf
mov
xbegin
mov
pushf
(bad)
ret
add
push
inc
(bad)
jnp
shr
mov
and
dec
aaa
xor
(bad)
and
pop
mov
stos
cdq
in
dec
add
inc
je
into
cmp
adc
in
xor
aad
lds
mov
ds
mov
sub
mov
mov
adc
bound
das
pop
jg
dec
cmp
mov
mov
xor
adc
inc
cli
ficom
scas
jmp
pop
fcmovne
shl
cld
mov
fbstp
mov
inc
test
adc
rol
lock
call
in
mov
cmps
iret
fsubr
es
ret
data16
not
(bad)
fistp
retf
(bad)
loope
mov
jl
lock
xchg
jge
pop
cs
mov
bound
frstor
jmp
mov
sub
xchg
mov
inc
jno
and
call
push
jle
sub
rcr
jbe
cwde
(bad)
dec
enter
push
dec
add
cmps
shl
dec
rcl
cwde
out
cs
push
jmp
in
or
popa
xor
pop
mov
inc
out
xlat
mov
and
repnz
pop
mov
test
inc
out
daa
add
cmp
repz
ins
jns
fsub
xor
adc
cmps
cmp
in
mov
(bad)
push
stc
sub
int3
xchg
mov
fs
sub
cs
mov
inc
xchg
outs
xchg
mov
into
lods
mov
sub
mov
jp
and
push
xchg
enter
sbb
fs
stos
mov
mov
test
in
call
mov
cdq
and
cmp
push
or
es
fwait
pusha
sbb
arpl
or
cmc
shl
js
repz
scas
push
in
(bad)
jnp
nop
lods
xor
push
xchg
sub
cmp
lea
popf
lock
jo
add
out
push
xchg
mov
cli
xor
pop
xor
xor
jne
or
pop
mov
add
xchg
mov
jnp
pop
fs
inc
fdiv
mov
xor
xor
add
lds
scas
xchg
push
adc
inc
mov
jle
cmps
add
mov
sub
mov
aas
movs
mov
pslld
addr16
mov
ror
add
mov
add
loop
mov
sub
cmp
mov
xor
fst
movs
mov
mov
xchg
ja
cld
mov
lahf
jne
pop
mov
jmp
adc
sbb
pop
iret
repz
mov
dec
cmp
scas
fist
retf
mov
jg
sahf
rcl
ds
cld
xchg
cmp
mov
mov
pop
pop
inc
stc
int
and
dec
aas
cmp
sub
sub
jmp
jb
in
add
xchg
mov
jg
je
jne
outs
inc
cmp
jg
mov
rol
push
mov
loop
mov
sub
or
cwde
stos
loope
inc
xchg
div
lahf
out
sub
hlt
jo
or
xor
sti
arpl
xor
sbb
neg
aam
arpl
(bad)
and
pop
std
nop
or
in
aas
repnz
and
pop
popa
jo
lea
mov
add
cmp
xor
popa
int
or
sub
sub
jbe
shl
cli
xlat
mov
popf
cwde
ins
ret
push
test
adc
aad
shl
pushf
ja
and
icebp
add
test
cmps
mov
cli
test
(bad)
addr16
(bad)
enter
rcr
ror
inc
and
cmp
mov
sub
cmp
xchg
test
or
(bad)
jg
jmp
push
sbb
int3
dec
sub
nop
test
in
push
bound
in
mov
in
outs
push
inc
mov
and
or
xor
inc
mov
push
imul
out
fsubr
cmc
mov
xor
inc
pop
mov
push
mov
mov
xchg
cmc
ja
sub
imul
lahf
inc
push
lods
jb
scas
adc
retf
dec
jle
mov
(bad)
popa
mov
shl
arpl
sub
cmp
jecxz
aam
aam
out
push
repz
sub
(bad)
push
jg
das
inc
imul
cmc
sub
outs
adc
xor
mov
jmp
dec
mov
mov
frstor
mov
invd
push
inc
mov
aas
xchg
popa
jno
sbb
mov
dec
or
pusha
neg
jmp
mov
loop
add
mov
and
pop
mov
mov
retf
mov
movs
and
cdq
(bad)
push
pop
enter
fcmovnbe
jae
adc
or
repnz
pop
cmp
aad
loope
sbb
sub
daa
push
and
pop
and
mov
das
cli
stos
cs
sub
daa
jnp
push
jmp
xchg
bound
in
xchg
sub
cld
fisubr
sahf
push
cld
jl
bound
sbb
cwde
fs
jecxz
das
and
sbb
pop
add
xchg
popa
jg
mov
out
mov
in
stos
ja
ret
test
sbb
xchg
aaa
mov
and
mov
mov
push
out
pop
aam
push
dec
test
push
and
xchg
mov
test
xor
and
and
fs
pushf
add
(bad)
pop
adc
out
lock
inc
jmp
pop
and
sbb
xchg
std
push
dec
mov
inc
les
movs
xchg
std
xchg
mov
enter
mov
lock
and
cmp
xor
and
pop
clc
loopne
and
mov
out
gs
std
push
icebp
jne
scas
out
(bad)
jmp
and
adc
push
inc
sahf
xor
ds
dec
iret
retf
neg
movs
and
vmaxss
inc
fsubr
(bad)
add
xor
dec
xchg
or
inc
les
xchg
add
cmp
sahf
pop
data16
mov
lea
inc
jecxz
test
and
jge
inc
inc
fsubr
and
or
stc
paddusb
or
not
pop
xchg
cdq
push
jmp
mov
scas
jns
xchg
pop
sub
inc
in
iret
aad
jmp
mov
push
cdq
bnd
mov
cmp
pop
cmp
movs
jb
ret
test
jne
sub
test
imul
ins
mov
mov
xor
pop
call
jmp
and
int3
jbe
mov
retf
jecxz
pop
rol
clc
nop
or
out
fldcw
inc
push
sub
mov
adc
popf
pop
ins
pushf
push
(bad)
in
xchg
rcl
pop
or
xchg
repz
inc
adc
and
test
ins
js
push
call
and
sbb
out
push
test
mov
aas
call
(bad)
js
sar
lods
sbb
push
adc
push
xchg
inc
mov
ins
lods
fstp
jns
test
sub
push
aad
mov
xchg
push
mov
data16
sub
mov
pop
pop
aad
push
jbe
cmp
sub
fsub
xor
shl
aas
ds
rol
iret
aam
stos
xchg
scas
and
mov
mov
mov
mov
mov
int
test
sahf
call
call
test
in
xchg
and
cmp
shl
push
and
sti
inc
mov
adc
push
xor
leave
gs
call
fsub
pop
mov
fwait
popf
or
inc
rcr
mov
and
test
dec
push
jmp
or
nop
mov
hlt
mov
inc
pop
mov
inc
into
jl
pop
repnz
test
shl
mov
jno
xchg
lods
pop
movs
add
pusha
jno
outs
add
cmps
in
adc
mov
lahf
pusha
(bad)
cli
aad
retf
cmps
movs
mov
mov
outs
xchg
js
aas
and
cld
xchg
sub
jns
inc
scas
std
xor
xor
jnp
sub
test
jne
out
jl
and
sub
dec
sub
pop
dec
push
in
jmp
mov
jns
push
rcr
pop
neg
test
cld
add
sbb
push
dec
dec
stos
movs
int
and
mov
and
pop
inc
imul
pusha
mov
stos
and
ret
das
pop
inc
test
jle
dec
sbb
clc
daa
jmp
ret
jle
inc
fld
rcr
jmp
in
inc
movs
push
test
clc
or
mov
jno
loope
mov
test
xchg
call
int3
(bad)
les
add
rol
aas
retf
push
adc
fadd
repnz
loopne
pop
scas
hlt
(bad)
pusha
es
ret
sub
mov
loope
jbe
jp
pop
and
xchg
jle
mov
push
xor
adc
cmp
dec
push
push
aaa
(bad)
jnp
and
xor
fild
dec
mov
inc
lea
cdq
push
push
popa
(bad)
inc
xlat
adc
mov
es
test
aad
out
pop
push
aas
dec
xchg
retf
sbb
fst
imul
mov
sub
fcomp
lods
push
add
xor
outs
movs
sbb
cwde
icebp
and
and
in
sti
ret
not
mov
mov
test
icebp
movs
call
push
inc
adc
cld
jne
fnstenv
mov
sub
push
es
stos
(bad)
or
push
in
ror
and
(bad)
pop
or
out
js
shl
or
add
ins
add
nop
(bad)
mov
cmp
pusha
fnstcw
push
jnp
arpl
shl
sbb
nop
sub
sahf
inc
leave
xor
xchg
jp
sub
mov
mov
or
mov
or
pop
frstor
rcr
sbb
cmp
call
subps
mov
push
mov
in
sub
or
ins
inc
std
inc
mov
addr16
pop
jne
bound
gs
ret
or
jg
clc
mov
pop
mov
mov
or
bound
add
mov
mov
push
outs
inc
icebp
adc
sub
les
fisttp
addr16
cmp
push
push
mov
gs
lea
jg
aad
sbb
and
pushf
out
adc
inc
repnz
push
mov
in
cmp
test
test
sub
cmps
daa
cmps
stos
jp
fbstp
std
sbb
add
cmp
xor
cmp
xchg
pop
sbb
or
xor
ins
xor
loop
fdivr
jne
adc
aaa
add
fwait
ret
cmc
push
int
out
cs
fdivr
mov
scas
sub
sbb
xchg
dec
push
cmp
push
outs
fistp
mov
inc
dec
leave
xor
mov
mov
data16
inc
sub
pop
push
cmp
xchg
xchg
push
fmul
or
aaa
sbb
cld
movs
and
shl
nop
inc
int3
fst
sahf
sar
les
ret
and
ret
inc
addr16
call
lods
ins
xor
stos
sbb
cmps
add
adc
adc
aad
(bad)
aaa
xor
sbb
jecxz
jl
or
mov
inc
adc
test
cmps
mov
sbb
sub
fidiv
sbb
sub
ret
xor
or
inc
stc
inc
stos
scas
scas
mov
and
push
cld
popa
adc
inc
add
adc
mov
sub
push
(bad)
fldcw
cmp
mov
pop
and
shr
into
mov
cmp
int3
mov
sub
pop
gs
mov
mov
ret
loop
pop
push
push
mov
popa
push
test
mov
pop
test
mov
inc
xor
cmps
mov
add
arpl
ror
pop
pop
pop
mov
shr
cmc
push
add
das
sub
jmp
cld
cmc
xchg
movs
popf
into
int
mov
es
xor
int3
jge
popa
push
aaa
div
or
adc
xor
repz
repnz
push
cwde
pop
sub
jns
idiv
mov
dec
mov
push
push
sti
pop
gs
and
pop
jmp
inc
cmp
sbb
sbb
xchg
mov
inc
jle
jb
cmps
pushf
stos
(bad)
cmc
std
pushf
sub
pop
jmp
or
push
mov
scas
and
test
xchg
sahf
jae
and
inc
sahf
add
cmp
mov
or
pop
jmp
jno
sbb
test
lock
into
pop
jmp
je
lods
stos
rcl
(bad)
inc
and
mov
dec
aad
mov
rcr
jnp
push
push
and
xchg
jnp
mov
pop
xlat
icebp
jb
cs
dec
mov
mov
out
into
add
push
les
fldcw
dec
call
aas
mov
stc
pop
mov
jno
outs
hlt
dec
mov
inc
je
mov
mov
ss
rcl
cmp
int
pop
fnstsw
jge
inc
out
cmp
inc
add
test
push
fadd
repnz
aam
mov
sub
push
stos
test
jge
retf
jo
push
fild
xor
push
(bad)
mov
std
(bad)
push
jne
je
push
dec
push
rcr
sbb
push
mov
xor
mov
repnz
mov
add
daa
sbb
aaa
loop
add
mov
ins
dec
movs
jnp
cdq
dec
clc
loope
aaa
retf
ins
test
add
sub
adc
mov
bound
sub
sub
fiadd
sub
xor
fs
and
xor
add
jae
lds
cmp
push
scas
retf
mov
out
cli
pushf
cmp
dec
je
sub
dec
push
test
and
mov
arpl
xchg
sbb
sub
(bad)
pop
lods
mov
cli
stos
xlat
mov
(bad)
mov
jne
or
mov
je
gs
and
ret
sbb
mov
lea
test
inc
es
aam
imul
cmp
mov
cmps
int
push
cmps
cmp
cmps
xor
mov
adc
cwde
cmp
int3
stos
in
dec
shl
ret
push
jg
pop
(bad)
cmp
sbb
jne
sub
imul
jo
jno
xchg
push
into
repnz
mov
movs
clc
and
ret
into
add
(bad)
push
adc
jb
ret
sub
cmp
icebp
cwde
push
outs
icebp
sub
sub
in
stos
or
paddusb
fild
leave
xor
cdq
or
mov
sub
(bad)
mov
xchg
das
push
stc
adc
add
jecxz
xor
outs
(bad)
scas
mov
hlt
ja
jbe
mov
mov
mov
retf
aas
and
push
and
jl
sub
push
add
xchg
adc
test
in
sub
retf
aas
movs
jl
in
test
jne
jg
jnp
adc
jb
test
ins
sti
mov
mov
ins
in
lods
push
aas
dec
ror
jo
out
test
call
or
dec
jg
push
imul
or
xchg
pushf
pop
les
jl
sub
inc
imul
mov
scas
test
dec
stc
inc
outs
les
push
jno
sbb
sub
movs
(bad)
xchg
daa
jb
scas
inc
xor
int3
pop
or
hlt
add
stos
shr
es
push
test
das
xor
mov
jo
test
out
jl
inc
les
push
pop
mov
(bad)
xchg
rcr
mov
cmp
pusha
nop
add
sub
and
xor
sbb
jp
dec
sbb
movs
in
(bad)
call
cmp
scas
sbb
sub
pop
loopne
mov
outs
ss
ins
pop
push
adc
pusha
jbe
aad
xchg
out
in
dec
es
bound
cmps
mov
mov
sub
cmc
popa
mov
lea
psrld
jbe
cmps
(bad)
sub
adc
outs
in
in
repz
and
pusha
ja
jp
adc
mov
dec
xchg
lahf
push
push
loope
in
mov
cmp
outs
retf
(bad)
rol
fsub
data16
mov
xor
in
cmp
test
mov
test
call
sub
mov
(bad)
cmove
cmp
xchg
jl
jecxz
jle
push
dec
cmps
gs
(bad)
push
data16
int
mov
hlt
movs
push
fstp
cli
xchg
pop
(bad)
xchg
xchg
cmp
adc
scas
addr16
adc
add
(bad)
shl
ins
mov
call
push
push
inc
mov
(bad)
leave
out
push
mov
add
adc
sbb
xor
xor
into
clc
out
push
or
mov
ds
cmp
jp
(bad)
xchg
fiadd
je
int3
jae
(bad)
es
(bad)
xor
lea
dec
push
cs
popa
cmp
pop
outs
enter
fidivr
inc
sbb
mov
scas
inc
leave
(bad)
(bad)
jg
popf
inc
or
mov
xor
push
out
call
mov
mov
ret
sub
cmp
retf
mov
jecxz
xor
das
aad
pop
sti
les
add
cmp
add
jae
ss
mov
mov
lea
jae
add
or
sub
(bad)
sbb
nop
pusha
out
test
sbb
or
ss
mov
adc
xor
add
jbe
dec
cmp
push
pushf
sbb
fadd
jle
or
dec
push
pop
dec
retf
clc
ret
sar
inc
jbe
enter
imul
stos
lds
shl
sbb
inc
test
adc
fdivp
and
and
test
cmp
ins
mov
fstp
shl
sub
mov
aas
mov
cwde
dec
adc
and
(bad)
pop
pop
inc
sbb
pop
fisubr
jb
cmp
xlat
imul
punpckhbw
push
adc
fnsetpm(287
daa
nop
inc
xor
popf
or
repz
lahf
dec
mov
(bad)
jl
sbb
and
out
sub
sub
mov
(bad)
iret
fisttp
sbb
jne
lea
pop
dec
es
sub
jl
mov
cdq
xor
(bad)
or
pop
dec
jns
hlt
cmp
lods
test
fisttp
jno
lahf
test
lds
push
mov
cld
fstp
mov
dec
inc
fiadd
xchg
call
mov
xor
sbb
ffreep
data16
not
sbb
sbb
into
outs
js
arpl
(bad)
pushf
mov
std
sbb
iret
test
cmps
or
push
mov
mov
adc
dec
add
add
xor
stos
push
jg
mov
xchg
xchg
(bad)
push
and
inc
xchg
mov
inc
inc
mov
push
sub
mov
je
in
fwait
sub
xchg
add
lods
out
lahf
mov
dec
fld
pop
mov
ins
push
or
retf
adc
cmps
mov
loopne
cmp
and
daa
mov
pop
and
push
mov
ffreep
jns
add
jnp
mov
push
xor
enter
inc
jp
jle
adc
in
daa
dec
or
jl
fistp
adc
int3
test
or
cmps
int
addr16
mov
pop
rcr
fs
push
mov
cmps
bound
aas
leave
cld
add
and
xor
push
sbb
lock
jmp
pop
xchg
(bad)
jmp
jno
rcl
sub
xlat
movs
xchg
xor
stos
pop
cld
cwde
ins
mov
jg
das
test
sbb
or
imul
xor
js
arpl
int
cmp
jns
ret
int3
(bad)
fldcw
inc
xchg
mov
add
mov
dec
cmc
stc
cmp
stc
dec
mov
jmp
and
push
sbb
outs
icebp
jmp
pop
(bad)
aam
in
ss
push
jp
stc
add
ja
sti
hlt
enter
xor
inc
aas
outs
cwde
cwde
adc
xor
xchg
xor
aad
call
inc
jle
les
push
shl
(bad)
jmp
or
mov
stos
pop
imul
mov
out
ret
jp
jp
inc
loopne
add
mov
sbb
fwait
add
xchg
imul
lea
and
xchg
adc
add
inc
scas
dec
les
movs
pop
ins
scas
sbb
hlt
mov
ret
inc
cmps
xchg
jno
mov
mov
cmp
mov
mov
sub
sbb
jg
fimul
repnz
adc
or
inc
cwde
xor
shl
lea
cmp
cdq
push
ret
ret
shl
adc
xor
ja
mov
sub
push
xchg
push
sub
mov
xchg
jnp
or
push
mov
push
inc
cmp
mov
push
and
cmp
mov
and
jnp
in
cmp
dec
lock
jns
adc
sbb
(bad)
in
cmp
in
sub
and
jno
ficom
lods
movs
int3
jg
dec
dec
mov
lahf
(bad)
daa
xor
ret
push
cmps
inc
(bad)
push
sbb
and
mov
outs
outs
pop
or
xor
in
dec
cmp
sbb
mov
mov
xchg
push
xor
and
xor
les
sbb
pop
push
mov
inc
out
xchg
lods
dec
inc
xchg
icebp
fwait
jmp
or
jbe
mov
mov
push
popf
jb
ins
in
mov
mov
or
xchg
call
pop
arpl
cmps
inc
jns
inc
int
movs
inc
daa
and
leave
sub
xchg
icebp
push
mov
movs
adc
jo
inc
pop
and
sbb
inc
je
push
push
add
icebp
shl
xchg
jns
and
fsub
push
mov
pop
shl
cdq
pop
mov
push
test
das
mov
(bad)
out
out
mov
jmp
and
ret
add
retf
push
ret
inc
mov
ins
mov
inc
jmp
and
cmp
inc
pop
cli
stos
cmp
retf
sub
(bad)
in
sub
leave
adc
mov
xor
retf
call
adc
test
div
xor
add
nop
xchg
sbb
ins
xor
imul
xchg
dec
inc
neg
sbb
jge
inc
pop
push
xor
xchg
out
ror
or
iret
aas
or
pop
icebp
stos
test
mov
mov
pop
stos
(bad)
lahf
sbb
scas
jb
mov
lods
ins
lock
inc
dec
xor
sub
cmp
ds
mov
mov
inc
arpl
xchg
imul
ss
xchg
sbb
push
icebp
push
jmp
fst
cld
ja
dec
dec
adc
sbb
out
bound
cmps
leave
cli
imul
mov
cmp
sbb
rol
ins
or
mov
call
jmp
pop
sahf
mov
xchg
xchg
inc
add
sbb
dec
dec
in
or
cs
sub
cmp
and
into
test
jmp
arpl
mov
fimul
cmp
shl
cmp
out
push
or
jae
cmps
push
pop
sbb
(bad)
data16
bound
adc
loope
cmc
into
test
nop
and
pop
mov
js
outs
(bad)
outs
pop
std
(bad)
xlat
stc
popf
retf
jb
xchg
cmc
shl
je
ins
xchg
movs
pop
dec
fadd
push
ds
xor
shr
inc
sti
icebp
popf
sub
cmp
dec
push
sub
and
sub
in
mov
aad
xchg
inc
xchg
rcl
cdq
(bad)
sub
outs
out
test
jg
outs
jmp
retf
loop
or
add
in
or
scas
add
clc
lock
sub
adc
ja
fucomi
mov
cmp
rcl
mov
jle
les
out
lods
inc
add
stos
lds
fmul
and
mov
setbe
add
(bad)
dec
aas
jns
mov
std
or
jmp
int
fwait
sti
loop
mov
jne
pop
xor
mov
mov
xlat
out
movaps
in
or
les
popf
sbb
jnp
mov
test
cmps
sbb
jmp
adc
xchg
mov
fwait
or
xchg
and
and
push
cmp
mov
jnp
popa
neg
aam
movs
shl
sbb
jno
sbb
and
cld
mov
jb
push
adc
sar
xchg
jg
inc
lods
fnstenv
cli
cmp
(bad)
xor
xchg
and
inc
test
pushf
add
mov
xchg
push
sahf
pop
movs
jecxz
or
xchg
imul
and
inc
(bad)
lods
lea
fwait
jne
sub
stos
ins
xor
mov
pop
addr16
mov
iret
mov
xlat
retf
bound
rcl
mov
sbb
movs
sbb
mov
push
add
pop
inc
fs
int
clc
adc
imul
jb
add
or
pop
xchg
adc
xor
(bad)
pop
mov
inc
xchg
jle
pop
dec
pop
or
outs
mov
mov
push
or
pop
ja
test
xchg
add
cmp
add
fstp
sar
or
ins
jmp
sub
xchg
jge
(bad)
call
xor
jae
ds
mov
pop
test
mov
adc
jns
mov
cmc
add
push
loope
std
cwde
arpl
push
aad
add
pop
xchg
sbb
ins
push
jae
xchg
or
jge
iret
and
jmp
xor
shl
stos
and
cli
aad
jmp
mov
das
xor
js
and
mov
pop
jo
es
aam
enter
ficom
jno
inc
add
cmp
fs
jnp
push
jle
and
adc
push
les
xchg
or
gs
call
mov
lods
xor
and
cld
pusha
or
add
ss
aam
mov
add
pop
pop
mov
cmp
pop
push
mov
dec
mov
bnd
loope
and
cmp
jbe
xor
add
in
push
dec
xchg
jp
pusha
dec
bound
in
sub
(bad)
cdq
gs
sahf
test
add
cmp
lds
xor
mov
popa
mov
paddw
or
inc
pop
out
cmp
cwde
fwait
ret
or
dec
mov
pop
lock
and
adc
xor
fisttp
xor
pusha
out
sub
or
xor
outs
xor
jg
es
sbb
cmp
fs
jmp
pushf
cmps
push
sub
mov
inc
mov
cmp
xchg
in
jle
addr16
mov
popf
es
loope
pop
cmps
sub
xor
cmp
jmp
sbb
dec
mov
or
dec
xlat
std
mov
mov
inc
jle
mov
mov
leave
push
ins
es
sub
adc
adc
or
pop
call
jmp
mov
xor
dec
mov
add
repnz
into
leave
fld
adc
and
cmp
lea
call
jo
loop
pop
je
or
(bad)
int3
inc
pop
shr
repnz
xor
addr16
sub
test
mov
clc
movups
cli
test
out
mov
lods
mov
xlat
jge
mov
sub
push
leave
dec
and
dec
jb
movs
pop
(bad)
xchg
out
and
xchg
setns
push
pushf
and
imul
cs
push
pop
sbb
sbb
push
sti
movs
cdq
imul
scas
sbb
sbb
and
repz
xor
inc
fld
repz
pop
data16
sub
mov
pop
jbe
adc
ds
rol
shr
jbe
in
sub
in
in
mov
loop
add
outs
xchg
in
cmps
in
dec
in
jb
jge
pusha
push
inc
pop
std
dec
push
nop
fild
push
and
idiv
xor
ds
fild
mov
push
scas
and
loopne
out
jo
cmp
adc
subps
xor
lds
sbb
daa
fidiv
mov
adc
movs
std
mov
pusha
cmps
jo
mov
push
lock
mov
dec
fld
xor
inc
outs
mov
and
sub
(bad)
pop
mov
std
add
dec
retf
inc
ins
inc
loop
jg
and
test
pop
aas
adc
cmp
jge
jg
test
scas
sub
push
cmp
das
mov
fwait
jne
pop
clc
xchg
or
sahf
mov
push
mov
mov
cdq
jo
mov
mov
jmp
cdq
xchg
and
imul
clc
push
jbe
fdiv
jge
xchg
and
add
je
ja
pop
dec
pop
cmp
pop
aad
pop
sbb
loope
clc
loopne
jb
mov
clc
les
and
mov
xor
es
mov
fdiv
int
ins
imul
jb
mov
push
mov
mov
in
sub
dec
inc
mov
and
test
mov
cmps
aaa
test
push
mov
nop
mov
dec
inc
cmp
push
cmp
test
fsubr
xor
or
mov
das
push
adc
clc
and
xor
aam
adc
retf
addr16
pop
ss
mov
in
sar
adc
dec
adc
sbb
xchg
xor
out
(bad)
jge
outs
outs
push
mov
dec
int
and
mov
(bad)
jne
mov
into
outs
int3
dec
sub
out
mov
sahf
mov
or
dec
inc
outs
xchg
pushf
mov
jp
stc
inc
pop
jno
xchg
stos
movs
push
(bad)
in
rcl
inc
cmps
push
jns
out
add
test
inc
and
pusha
clc
lods
enter
xlat
jge
sub
lds
xchg
ret
adc
cs
mov
int
sbb
aas
fdivrp
add
dec
push
pop
repz
test
lahf
sbb
xor
xor
dec
jno
inc
repnz
jnp
cmps
sahf
ffree
inc
push
(bad)
dec
dec
mov
adc
call
(bad)
adc
mov
pop
repnz
pop
jbe
iret
fs
enter
lds
xchg
aas
xchg
xchg
je
mov
and
rcr
iret
mov
cmp
(bad)
ret
gs
adc
sub
ins
jl
in
cdq
inc
push
cmp
xlat
jno
push
inc
aam
pop
es
push
cmp
sub
scas
xor
stc
ret
dec
inc
push
push
push
or
sbb
jns
jb
icebp
popf
inc
xor
fidivr
sub
and
pop
and
int
vdivps
push
enter
sti
pop
jmp
mov
lods
imul
push
out
ret
adc
mov
rcr
mov
mov
jnp
lahf
sub
dec
jle
add
dec
jns
sub
ret
fild
push
ret
shr
sbb
ins
jns
mov
dec
scas
(bad)
aam
mov
xchg
or
inc
scas
repnz
adc
jmp
(bad)
fldcw
retf
jnp
inc
sbb
xchg
lahf
xchg
xor
add
push
xchg
mov
mov
mov
aad
cmps
lods
push
jecxz
pop
pop
outs
xchg
sub
or
dec
inc
outs
pushaw
inc
sub
test
ret
sub
sub
xchg
xor
stc
and
les
xchg
arpl
xchg
mov
mov
mov
cmps
popf
add
sub
aaa
dec
daa
xor
add
ret
out
dec
mov
sub
aas
cmp
outs
push
lods
ja
sub
or
enter
adc
pushf
mov
xchg
xor
jl
pop
pop
call
fisttp
cmps
call
call
ins
xor
inc
sbb
dec
loope
sbb
jmp
sbb
shl
mov
gs
and
jae
sub
mov
dec
movs
push
cld
pop
(bad)
xor
push
repz
inc
scas
mov
sbb
pop
sbb
mov
push
lods
popa
fwait
cmp
popf
xor
outs
out
test
loope
clc
cdq
jmp
sub
xchg
or
loope
dec
jb
aad
jmp
fidiv
fmul
repnz
adc
cmp
(bad)
outs
sahf
in
push
(bad)
jecxz
js
fisttp
fwait
aam
scas
cld
loopne
pop
out
lods
mov
adc
xchg
ja
gs
jl
out
mov
cmp
xor
out
inc
aam
cs
gs
bound
jge
cmp
mov
out
xor
adc
or
pop
shl
add
adc
xor
mov
(bad)
cmp
aaa
mov
je
out
cmp
div
pop
push
ja
loop
xchg
mov
cmps
dec
push
push
pop
push
call
out
xchg
jmp
js
imul
jbe
mov
mov
or
(bad)
jl
out
mov
into
hlt
mov
xor
or
and
out
fild
mov
mov
je
push
push
js
sbb
fs
shl
lahf
inc
mov
cmp
jg
cdq
jno
ja
push
cwde
pop
mov
jbe
das
and
cmp
vphaddwq
pop
or
adc
test
int
cmc
sbb
adc
dec
sub
mov
lods
into
retf
cld
mov
repnz
scas
loop
sbb
mul
xor
loopne
add
jmp
adc
push
lock
loopne
pusha
mov
shr
mov
(bad)
das
lods
or
jb
jecxz
jbe
popa
lds
sub
add
sar
fistp
sub
aas
not
ins
mov
jae
cmps
dec
xchg
add
or
cmps
stos
jmp
not
xchg
xchg
pop
sti
push
dec
repnz
repz
lea
mov
pop
cs
nop
cmp
pop
inc
retf
int3
fisttp
pop
mov
vprotq
cmp
fld
sahf
dec
jle
in
pop
sahf
scas
jae
jbe
shr
mov
jo
pushf
inc
inc
push
adc
movs
inc
mov
pop
ror
mov
xchg
xor
aas
dec
and
mul
push
sbb
(bad)
dec
leave
push
mov
ins
cmp
pop
xor
and
lahf
or
retf
mov
fisttp
inc
dec
(bad)
test
scas
jb
xchg
mov
and
jns
in
or
and
push
cdq
adc
mov
xchg
cmps
fst
jmp
mov
sbb
in
or
mov
inc
pop
das
pop
adc
cmps
pop
add
mov
imul
pushf
xchg
push
shr
jne
test
adc
xchg
and
cmps
xchg
pop
shl
jo
sub
xchg
jo
dec
jl
inc
(bad)
adc
push
loopne
mov
stos
scas
aad
mov
sub
dec
and
push
ret
sbb
pop
pop
and
jg
mov
ja
inc
ret
daa
sub
sbb
jp
dec
dec
jbe
mov
dec
idiv
xor
add
jnp
pop
and
sbb
mov
adc
mov
lods
in
cmp
mov
repz
mov
ror
push
dec
icebp
(bad)
sbb
jne
push
test
les
test
inc
mov
dec
mov
cmp
out
aam
fild
cmp
mov
mov
pop
mov
cwde
and
mov
cmps
out
fldenv
(bad)
push
stc
(bad)
je
jp
aam
pop
inc
pop
les
aam
mov
inc
sbb
je
addr16
ret
cs
repnz
jnp
or
or
or
xchg
xor
std
cdq
into
aad
jns
outs
addr16
pushf
int3
les
cmp
dec
xor
gs
pop
push
mov
xor
inc
or
stc
imul
fistp
jmp
xchg
fldenv
mov
push
ja
sub
dec
pushf
jle
out
popf
neg
mov
xchg
test
mov
call
int3
push
test
sbb
int
scas
sub
pop
mov
sahf
(bad)
mov
les
or
push
clc
cwde
aam
cmps
pop
pop
das
aad
cs
xbegin
dec
dec
mov
repnz
fmul
add
jnp
mov
or
push
cmps
test
(bad)
into
mov
inc
stos
(bad)
pop
or
and
xchg
popa
push
ins
dec
pop
add
jmp
adc
(bad)
fwait
repz
outs
retf
popa
sub
scas
das
jp
dec
stc
cs
sub
sbb
(bad)
fwait
xchg
(bad)
loope
pop
call
jb
(bad)
(bad)
(bad)
std
mov
or
dec
je
mov
jmp
push
push
mov
call
std
dec
(bad)
loopne
jb
and
add
(bad)
mov
mov
scas
cmps
inc
adc
mov
adc
(bad)
(bad)
std
jmp
pop
in
pop
mov
ficom
or
push
mov
add
shl
pop
test
aas
fdiv
sar
retw
mov
jecxz
dec
daa
in
cmp
ds
inc
retf
xor
mov
cs
stos
xlat
and
mov
xor
jb
fidiv
cmp
popf
inc
pop
sbb
test
inc
movs
mov
(bad)
imul
mov
jbe
fnsave
sub
ins
fmul
(bad)
pop
cmp
adc
stos
xchg
xchg
(bad)
iret
mov
scas
popf
pop
repnz
lahf
mov
jge
cmp
jg
and
push
sbb
sar
imul
jbe
push
xor
dec
dec
cdq
sub
sub
int3
imul
imul
xchg
xor
push
les
sti
xchg
into
jmp
into
sub
pushf
repnz
test
push
pop
out
dec
ror
push
mov
jp
hlt
ds
dec
mov
inc
pop
ins
xor
imul
aad
push
or
inc
ret
retf
cwde
in
xor
mov
je
sbb
pop
adc
push
cmps
xchg
pusha
stos
cdq
sbb
adc
mov
or
call
shl
arpl
lsl
in
mov
cmp
add
xchg
mov
(bad)
out
push
pushf
xchg
xchg
lods
jb
xchg
stc
sub
out
mov
or
mov
or
sbb
dec
lods
sahf
push
xchg
enter
(bad)
jl
dec
cmc
mov
jne
mov
add
popf
sti
(bad)
or
(bad)
jo
jle
mov
xor
xor
mov
jge
xchg
adc
jp
pop
or
inc
mov
inc
jb
jns
stc
retf
mov
sbb
cmp
enter
xchg
out
out
int
std
sub
movs
xor
mov
repz
repz
icebp
ror
dec
add
test
inc
ins
iret
inc
push
cs
inc
jl
sbb
fdiv
mov
xchg
(bad)
mov
scas
inc
xchg
dec
xlat
stos
mov
jge
mov
sbb
lds
jnp
dec
popa
(bad)
mov
fild
mov
mov
adc
lahf
in
and
push
jmp
jl
jne
iret
cwde
cmps
jecxz
cld
pop
inc
dec
popa
push
xor
xlat
push
std
sub
push
or
fs
add
aad
jmp
mov
inc
jmp
sar
fldz
and
int
(bad)
lahf
popf
mul
dec
xchg
pop
jle
push
pop
retf
sahf
cmp
pop
nop
rdtsc
pop
and
ja
fdiv
xchg
dec
pop
push
and
cmp
and
sbb
fist
sbb
sub
lahf
xchg
cmp
je
jnp
inc
push
push
dec
(bad)
push
xchg
mov
push
and
test
fcmovne
outs
ins
out
xchg
std
cmp
mov
pop
ins
rol
or
jb
repz
xchg
adc
ss
popf
mov
mov
call
leave
scas
push
jne
in
push
jmp
stc
cdq
cmp
xor
sub
mov
sbb
fsubr
hlt
jp
cmps
pop
xor
into
inc
jge
and
adc
jae
pusha
sub
scas
or
ret
mov
pop
mov
and
lea
imul
push
xchg
adc
add
popf
jnp
int3
xchg
inc
cmp
clc
cmp
test
(bad)
call
jns
mov
push
sbb
into
pop
dec
or
cmp
cli
inc
mov
in
mov
movs
pop
jae
mov
in
xchg
fwait
mov
ret
ret
add
daa
je
cmp
sahf
test
jp
add
or
popf
popf
xor
idiv
fisttp
aam
xor
or
add
and
mov
mov
test
shl
xchg
push
sub
pop
mov
cmp
xchg
mov
fnstcw
xchg
sbb
(bad)
in
cmps
pusha
repnz
fsubrp
icebp
mov
mov
jnp
pop
cli
int3
mov
or
pushf
jmp
cmp
(bad)
in
mov
aad
shl
jmp
mov
xchg
sbb
call
lahf
jmp
outs
fsubp
stos
in
mov
stos
popa
or
inc
lds
lds
cmp
pop
test
scas
sbb
repz
iret
retf
adc
imul
mov
(bad)
enter
arpl
xlat
mov
dec
je
add
(bad)
cmp
mov
mov
and
shl
sub
pop
ins
cmp
or
test
mov
pop
lahf
repz
inc
and
retf
mov
push
test
sar
mov
aaa
mov
stos
dec
fsubr
sar
mov
jmp
sbb
retf
sub
add
in
sbb
xchg
dec
xor
mov
push
cmp
mov
js
mov
adc
sbb
(bad)
std
jmp
inc
(bad)
dec
mov
stos
enter
mov
pop
out
rcl
es
and
mov
rcr
mov
lock
int
adc
clc
cwde
imul
push
not
int
icebp
aam
clc
xor
pop
out
mov
pop
xchg
inc
sub
xchg
cs
and
out
imul
push
mov
out
sahf
adc
sub
lds
add
or
out
scas
in
sahf
dec
fild
fbld
enter
jmp
push
or
add
xor
outs
daa
test
add
xor
popf
ss
aam
push
dec
dec
rcl
adc
or
inc
imul
and
jle
mov
xor
jns
imul
pop
ss
outs
hlt
dec
cs
outs
call
jmp
icebp
fnsave
add
or
pop
int3
jmp
or
push
call
fisub
sahf
in
jge
stos
fdivr
mov
sbb
loope
xchg
scas
mov
jmp
adc
leave
pop
adc
and
push
pop
jnp
inc
std
ss
dec
mov
or
xchg
fisub
jle
lods
(bad)
pop
or
imul
mov
xchg
aaa
sub
cs
inc
cdq
xor
push
jo
pop
mov
xchg
cmp
mov
and
ds
mov
repnz
add
ret
lods
or
or
sbb
cwde
aad
dec
xchg
mov
jmp
lods
xchg
(bad)
sbb
mov
lea
sub
cmps
jecxz
out
mov
imul
mov
cdq
mov
loopne
mov
pop
test
out
cmp
dec
retf
data16
pop
sub
scas
sahf
or
pop
rcl
sub
pop
push
pop
xchg
fwait
push
add
adc
imul
out
hlt
test
cmc
pop
std
idiv
mov
sub
out
dec
cmc
pminsw
mov
pop
outs
ja
add
jle
retf
scas
fisub
mov
hlt
mov
sbb
(bad)
out
ret
dec
add
in
inc
sbb
cmps
mov
icebp
test
mov
cld
inc
fild
dec
test
loop
inc
sbb
xchg
cs
push
fmul
(bad)
dec
cwde
cmp
out
inc
xchg
fsub
lods
loopne
test
inc
jp
pop
call
pop
aaa
jmp
xchg
addr16
enter
rcr
in
scas
lods
cdq
jo
in
shl
pop
pop
js
rol
cli
lahf
jmp
clc
inc
sahf
in
es
into
(bad)
pop
sub
ret
or
fcomp
imul
daa
fisubr
mov
dec
xchg
ins
in
push
cdq
xor
arpl
pop
test
in
(bad)
fst
fs
es
ins
jns
ss
pop
rcr
pop
(bad)
hlt
sub
ror
pop
lods
ror
jns
fcom
test
mov
mov
call
call
mov
jae
push
test
fdivrp
pusha
jecxz
push
movs
test
dec
xchg
adc
xor
push
out
add
call
push
mov
fisttp
fs
pop
mov
or
(bad)
pop
xchg
xor
dec
push
dec
push
pusha
add
and
shl
pop
rcr
xchg
cli
shl
rcr
jne
mov
movs
cmps
inc
push
dec
pop
rol
fucom
jnp
out
jl
push
in
mov
lahf
je
sub
iret
and
push
cmp
jns
pop
inc
(bad)
sbb
fdivrp
sbb
mov
pop
jae
cld
cmp
ss
or
movs
and
mov
repnz
stos
test
cld
fwait
push
popa
test
push
sbb
lea
repnz
fisubr
pop
call
cmp
test
dec
pop
test
dec
imul
outs
std
fwait
xor
int
cmp
aaa
add
ins
sbb
jae
or
or
pop
adc
aaa
ret
mov
sub
mov
mov
mov
jnp
push
aaa
sub
xor
cmp
pop
ins
cdq
sahf
test
ins
cmp
loope
leave
pushf
fldenv
xor
(bad)
push
cs
fsub
pop
iret
jnp
and
xlat
dec
mov
inc
xchg
call
stos
jb
(bad)
rcl
(bad)
call
call
lahf
inc
shl
push
sbb
push
div
jmp
inc
(bad)
jnp
and
jp
xor
add
cmp
inc
jmp
outs
inc
xchg
xchg
mov
cmp
test
rcr
push
add
hlt
retf
xor
retf
pop
mov
icebp
je
test
vcvtss2sd
sbb
ret
(bad)
xchg
jb
fist
mov
and
dec
shr
jge
(bad)
sub
cmp
shl
mov
je
sbb
push
jl
sbb
push
test
sub
(bad)
cmovbe
pop
pop
dec
xchg
jge
loop
stc
std
push
pop
mov
lock
pop
scas
jle
xchg
stos
mov
mov
pop
out
dec
loope
adc
sbb
dec
mov
shl
(bad)
clc
mov
xor
jns
enter
cmp
movs
inc
test
mov
jle
dec
popf
sbb
pop
das
nop
inc
and
adc
push
xchg
call
and
retf
inc
jp
popa
outs
push
dec
sbb
pop
addr16
iret
repz
sbb
cmc
int3
sbb
jmp
xor
jb
inc
fidiv
daa
sub
fst
cdq
(bad)
push
inc
outs
jle
jns
movs
inc
jne
gs
add
pop
push
mov
jmp
pminsw
in
addr16
sbb
push
stos
mov
mov
push
aas
fbstp
mov
fabs
inc
mov
dec
xchg
in
pop
and
mov
leave
or
das
into
shl
in
call
nop
cmp
sub
cs
mov
scas
jno
add
out
mov
ja
hlt
mov
jmp
mov
push
ss
xchg
lods
or
call
pushf
int
jecxz
push
pop
cmps
loope
(bad)
or
test
in
ret
in
push
jmp
jl
sub
mov
mov
ror
push
pop
fsub
mov
cmps
rcl
push
xchg
sub
pop
test
jns
or
or
shr
adc
xchg
push
jne
jp
and
adc
mov
or
sub
mov
retf
adc
mov
scas
xor
dec
jmp
xor
xor
jg
jmp
std
xlat
sub
sar
arpl
xor
or
mov
sbb
mov
movs
test
inc
sub
lods
xchg
mov
das
in
mov
popf
hlt
push
(bad)
in
enter
jnp
and
dec
dec
adc
pusha
push
mov
adc
push
call
sub
xor
add
outs
leave
aas
ret
call
cwde
mov
in
in
push
push
cmp
cwde
not
sbb
das
add
pop
mov
sub
inc
xchg
sbb
mov
add
mov
mov
lock
sub
scas
push
xchg
cli
fs
hlt
inc
cli
cmp
push
or
add
sub
std
xchg
jge
out
pop
lds
repnz
and
mov
aas
mov
hlt
sub
sbb
loopne
cmps
xor
add
inc
(bad)
mov
mov
stos
dec
int3
outs
or
sub
shl
pop
sub
imul
jne
outs
sub
nop
mov
pop
cmps
push
test
cli
jno
outs
int3
popf
clc
lea
and
cdq
in
mov
or
jo
and
inc
out
mov
ins
or
mov
xchg
xchg
mov
mov
cmp
jmp
xchg
mov
push
cli
mov
leave
in
scas
xor
scas
sbb
loop
(bad)
adc
fbstp
(bad)
xor
out
sbb
movs
aam
mov
in
mov
loopne
jecxz
aas
pop
push
add
mov
mov
out
(bad)
cmp
test
mov
aad
sbb
lahf
mov
push
rol
add
imul
lods
add
call
rcl
jno
ins
hlt
jle
shr
sub
dec
cmp
fld
xor
push
addr16
ror
loop
repnz
adc
shl
test
pop
dec
pusha
push
sbb
xchg
dec
shl
loope
add
mov
(bad)
cmp
add
fwait
inc
vpextrw
lds
sub
stos
in
fwait
js
push
dec
test
xor
cld
test
push
xor
push
push
push
xor
and
sahf
(bad)
push
xor
mov
inc
icebp
xor
or
sub
jno
int3
cmp
retf
mov
ds
repz
neg
dec
xlat
stos
iret
pop
inc
popa
dec
ss
cmc
mov
or
dec
push
scas
jb
hlt
mov
into
in
mov
outs
dec
dec
push
push
xlat
sbb
mov
pop
jge
aad
loopne
push
push
ret
int3
rol
shl
and
das
push
jl
push
fidiv
sahf
mov
stos
shl
movs
mov
test
hlt
cdq
stc
mov
call
pop
dec
sar
jo
les
mov
fild
xlat
scas
sbb
lea
add
aas
ja
jl
test
sbb
aas
pop
jns
rcr
test
push
mov
nop
jle
inc
cli
repnz
or
sub
jg
jno
bound
ret
sti
pop
xchg
jbe
lea
inc
bound
mov
and
sub
sub
mov
test
ss
call
je
es
jge
jo
push
xchg
and
repnz
out
add
sub
xchg
retf
or
in
xor
dec
test
and
or
test
jne
dec
in
pop
xchg
ffree
cld
jmp
in
scas
adc
or
rcr
sub
cmp
shr
or
jmp
pop
mov
pusha
ficomp
push
enter
add
pop
ja
leave
mov
lahf
jge
xor
cld
jecxz
ficomp
mov
mov
mov
ds
push
int3
(bad)
lock
dec
mov
jg
xchg
mov
out
dec
inc
mov
jl
clc
jecxz
add
arpl
push
cmp
pop
xchg
in
mov
mov
cs
push
add
inc
ficomp
aas
xchg
icebp
repz
mov
imul
sub
das
fwait
sub
mov
jae
int3
sub
sar
inc
shr
mov
inc
int
jne
loop
fs
xchg
ror
or
fs
push
mov
pop
inc
sub
cmp
ror
inc
mov
cmp
hlt
ins
pop
int
dec
and
push
fisub
jmp
inc
inc
out
xlat
and
out
popf
cwde
jbe
imul
shl
mov
sub
popa
out
push
ret
or
pop
inc
sar
cdq
ja
ror
mov
push
jo
xchg
movs
test
dec
adc
pop
out
adc
push
(bad)
and
or
int3
mov
xor
aad
sbb
jmp
inc
adc
test
xchg
adc
fs
call
inc
in
clc
xor
jne
(bad)
lds
out
fist
stos
cmp
test
push
pop
daa
retf
and
test
bnd
pop
adc
pop
retf
ds
into
enter
mov
ficom
cmp
dec
cld
mov
mov
pop
sahf
or
inc
jns
cmc
sbb
nop
cmps
ss
sbb
stc
cmps
lds
arpl
shr
cmp
ins
pushf
test
pop
rcr
or
aaa
fldcw
adc
sbb
fs
dec
shl
pop
mov
fadd
fcompp
jle
add
rcl
xchg
mov
out
mov
call
out
jne
loop
xor
pop
inc
and
add
jl
xchg
or
lds
fidiv
adc
jae
adc
lock
test
int3
mov
pop
and
jl
push
xchg
outs
ret
int3
sub
push
push
test
iret
imul
inc
xor
ds
clc
fcomi
lahf
sar
fxch
jecxz
lea
push
push
or
lods
shl
mov
push
mov
and
js
add
sbb
stc
mov
imul
add
popa
push
std
in
dec
add
repnz
push
mov
fldcw
inc
inc
xor
xor
adc
pusha
and
ins
pop
inc
and
cmps
inc
or
ret
das
scas
jns
sub
push
or
cmovnp
daa
push
mov
xor
sub
bound
or
add
stc
scas
and
jg
imul
mov
sub
push
push
ret
dec
sahf
or
push
test
push
push
loope
clc
push
pop
xor
sbb
aam
ins
push
xchg
mov
paddsb
mov
loope
push
push
sbb
and
inc
push
in
cmp
cdq
jnp
xchg
retf
pop
add
imul
ret
xchg
mov
jne
mov
and
xchg
cmc
icebp
into
outs
dec
cmps
xchg
leave
rcl
jbe
call
lds
es
mov
jp
xor
push
xchg
sbb
sti
ret
das
lock
sub
cmp
inc
lock
or
outs
push
ss
iret
pop
sub
in
mov
imul
xchg
jb
movs
mov
ss
repnz
cli
adc
push
sub
mov
cmp
jmp
sub
adc
or
and
fimul
add
stos
mov
add
out
mov
jns
or
es
cmc
and
jecxz
adc
xor
and
daa
mov
or
or
neg
inc
xchg
leave
or
mov
ret
das
fs
inc
jb
pop
inc
cmp
fimul
mov
xor
push
push
add
and
mov
push
mov
adc
pop
sti
xchg
xchg
or
pop
popf
retf
aaa
fucom
mov
cmp
mov
rol
jmp
dec
mov
xchg
les
jmp
repnz
mov
out
popa
bound
adc
xchg
jp
or
add
xchg
jg
inc
in
sub
sub
cmc
in
jnp
adc
dec
fwait
jno
iret
int
jmp
jmp
icebp
xchg
adc
mov
pusha
jno
lock
dec
das
mov
sub
cmps
cmp
data16
fucom
sbb
lahf
fldcw
std
xor
stos
jo
dec
scas
shl
paddsw
call
mov
push
jecxz
int3
and
bound
cs
sub
jo
popf
mov
pop
inc
sub
and
and
call
cwde
mov
popf
sbb
push
xor
xchg
mov
shr
loop
pop
xchg
sbb
push
or
dec
mov
inc
test
ror
or
jmp
pop
(bad)
jmp
(bad)
jecxz
push
in
test
mov
ffree
push
xchg
das
mov
div
xor
outs
hlt
(bad)
stos
nop
or
mov
adc
cmp
jns
pop
call
das
xchg
cmps
out
xor
push
inc
inc
sti
jg
or
mov
cmps
iret
dec
or
out
js
mov
repnz
je
jmp
mov
cmp
dec
xchg
jns
sub
xchg
ret
jl
test
cwde
jns
adc
cdq
mov
sub
hlt
xor
jae
das
jno
adc
sbb
call
jge
(bad)
xor
stos
sub
xchg
stos
into
cs
stos
fwait
repnz
fadd
out
dec
jmp
push
add
jmp
mov
pop
(bad)
jl
jmp
lahf
in
lock
les
cmc
inc
dec
cmp
shr
mov
out
ret
jnp
mov
mov
mov
(bad)
in
loopne
scas
mov
dec
sub
push
pushf
imul
and
dec
fsub
pusha
sbb
xlat
cmp
push
in
add
(bad)
xor
push
lods
mov
ds
or
adc
push
mov
repnz
adc
fmul
cmc
out
push
cdq
xchg
cwde
or
lahf
mov
or
popf
sbb
addr16
das
push
ret
ret
test
in
cmc
or
(bad)
xchg
pushf
clc
or
int
add
lods
data16
pop
out
test
mov
adc
pop
mov
inc
mov
pop
int3
inc
cmp
fs
push
or
(bad)
mov
add
ja
push
(bad)
hlt
add
aam
mov
and
fadd
dec
fisubr
mov
cmp
out
mov
mov
sbb
and
out
inc
outs
sbb
fnsave
push
das
pop
in
add
cmps
(bad)
out
clc
mov
fild
dec
enter
mov
inc
arpl
dec
sub
xor
mov
rcr
test
mov
pop
and
ja
push
adc
push
dec
xchg
xor
mov
icebp
int3
lahf
bound
adc
movs
icebp
in
push
pop
outs
lock
xlat
sar
mov
inc
les
jno
rcr
iret
xchg
pop
push
add
xchg
stc
jle
push
sar
pop
xchg
jmp
xor
sub
ret
sbb
mov
out
ret
arpl
inc
jmp
and
mov
sub
stc
iret
aad
scas
push
add
inc
imul
cmp
dec
ja
popa
arpl
into
dec
in
mov
test
cmp
push
inc
sti
push
call
adc
dec
enter
jne
and
into
sub
cmc
or
rcl
repz
mov
ins
fisub
push
stos
mov
gs
add
add
mov
and
retf
mov
push
mov
jmp
fsub
add
stc
mov
cmp
ins
test
mov
cdq
adc
dec
dec
add
add
adc
popa
or
push
sar
retf
mov
inc
jl
adc
and
add
retf
adc
leave
pop
sbb
mov
adc
or
stos
mov
scas
fstp
arpl
outs
call
or
lods
ds
dec
and
inc
sub
mov
push
add
and
and
inc
dec
or
push
mov
std
jo
fwait
pop
sbb
ins
mov
in
xor
icebp
and
or
mov
push
inc
pop
jmp
inc
not
sar
test
dec
xchg
sbb
jnp
pop
fs
fadd
jl
jo
shl
mov
pop
aam
mov
mov
cdq
cmps
outs
cmp
inc
xchg
or
xchg
push
sti
mov
aaa
push
loope
and
scas
mov
cmp
fisubr
ja
xchg
push
gs
pop
movs
ror
jle
mov
clc
ret
sub
jno
ret
stos
and
dec
lods
addr16
fwait
push
retf
mov
jno
bnd
inc
adc
adc
jnp
cwde
popf
scas
sbb
mov
ins
xor
dec
mov
lock
repnz
loope
pushf
sbb
inc
xchg
push
jb
add
add
ret
loope
in
xchg
into
not
jge
js
je
pop
out
in
dec
test
(bad)
sbb
stc
sub
mov
mov
retf
sub
or
stos
dec
mov
mov
inc
mov
lds
push
mov
xor
bound
into
or
js
nop
jle
lods
sub
sahf
outs
xchg
pop
mov
add
mov
mov
jmp
shl
dec
or
mov
mov
jg
addr16
xor
les
pop
push
sub
jg
adc
inc
sar
cld
fwait
adc
and
shl
mov
lods
add
xchg
sub
inc
push
rol
xchg
sub
call
mov
ret
jp
dec
mov
cmc
into
mov
jmp
stc
xor
retf
xchg
cmps
pop
adc
test
std
js
push
push
jg
xchg
outs
mov
je
scas
pop
shl
call
aad
cwde
popa
test
add
inc
ins
adc
jne
test
adc
pop
xchg
mov
jne
fs
add
fiadd
sub
lock
arpl
mov
and
cmps
dec
pop
sub
icebp
loope
fdivr
cmp
jle
lea
leave
push
pop
or
and
adc
push
hlt
call
rcr
js
dec
ss
sbb
inc
test
push
leave
mov
push
outs
call
mov
pop
jb
and
icebp
rcr
xchg
fild
call
mov
in
(bad)
aam
cld
xchg
js
cmp
xor
test
xor
jb
xor
fldcw
dec
int
jp
mov
std
test
test
or
mov
jmp
pop
add
sub
mov
cmp
pop
into
dec
in
add
sub
lea
cmp
adc
inc
mov
and
mov
and
mov
aaa
into
ret
lock
sbb
icebp
mov
pop
and
daa
and
shr
pop
mov
aam
inc
cmp
in
sbb
lds
sub
das
pop
xchg
daa
sub
adc
sub
sub
gs
jle
inc
jo
mov
push
jecxz
call
pop
xchg
sub
(bad)
movs
cmp
jmp
cwde
int
shr
inc
mov
test
push
enter
aam
ins
cmp
push
push
iret
xchg
ss
es
daa
fwait
jecxz
mov
jno
into
mov
xor
xor
pop
test
lods
fld
xchg
in
mov
dec
push
jge
cdq
test
mov
inc
pop
iret
push
push
inc
mov
pop
mov
sub
cmc
cdq
cdq
outs
repz
cmc
movs
stos
pop
jmp
add
mov
test
xchg
push
iret
std
inc
fidiv
int
mov
jmp
loope
push
cmp
cld
cmp
or
sub
pop
mov
sahf
enter
in
jmp
wrmsr
rol
mov
xchg
int3
call
ds
out
push
xor
out
sbb
inc
in
sub
dec
mov
bound
js
cld
cmove
hlt
add
popa
sub
je
push
repnz
jle
fadd
imul
mov
leave
mov
push
lds
sbb
add
mov
mov
std
dec
xor
jecxz
pop
pop
pop
dec
cmps
in
jo
push
xchg
lods
movs
cmc
pusha
rol
sub
and
cwde
sub
addr16
scas
pushf
mov
xchg
or
fst
enter
dec
mov
add
push
popa
push
ja
mov
cli
inc
lds
jmp
sbb
rcl
aam
xchg
sbb
rcr
int
repnz
or
(bad)
iret
aas
mul
add
ins
sbb
daa
repnz
mov
dec
retf
or
inc
lock
test
mov
xor
jecxz
and
dec
push
in
ret
jo
dec
leave
shl
ins
xchg
and
mov
dec
gs
scas
push
xlat
dec
adc
lahf
xchg
or
mov
hlt
repz
or
pop
cmp
dec
sbb
mov
fsub
add
pop
push
jp
jb
mov
pop
rcl
mov
ds
sbb
sbb
fnsave
sub
sub
push
popf
stc
rcr
enter
loopne
ret
(bad)
leave
and
mov
mov
loopne
and
ret
add
push
push
repz
mov
pop
sbb
popf
xchg
and
fs
loopne
cmp
(bad)
mov
adc
add
push
ja
xchg
out
test
jne
ret
shl
jo
dec
mov
aam
repz
and
stc
mov
inc
jo
je
jno
cmp
pop
push
(bad)
adc
gs
aad
hlt
ins
or
add
push
pop
out
(bad)
dec
lds
mov
push
xchg
out
push
ss
jno
or
mov
(bad)
mov
push
outs
jne
adc
push
fld
mov
pop
mov
out
sub
mov
rol
add
jns
cmp
outs
enter
mov
int
lods
outs
iret
add
cmps
ins
stos
adc
mov
lea
mov
push
sub
repz
mov
inc
scas
(bad)
or
mov
cmp
jecxz
scas
dec
cmp
fcomp
inc
stc
pop
je
sbb
mov
xor
inc
push
or
add
test
stc
daa
push
dec
mov
cld
inc
ins
xor
pop
push
int
xchg
sbb
test
arpl
icebp
shl
add
pop
pusha
hlt
xchg
jbe
pusha
sbb
add
shl
aam
or
push
sbb
pop
mov
lea
ret
mov
dec
jns
fucomi
aam
in
inc
adc
adc
scas
inc
xlat
cmps
aaa
enter
push
dec
pop
pop
js
mov
bound
jno
or
xlat
ret
iret
dec
cmc
pop
pop
cmps
or
(bad)
cmp
test
int3
push
and
or
and
mov
push
rol
or
popa
pop
cmp
clc
mov
fsubr
or
sub
mov
xor
mov
sub
(bad)
cmp
mov
mov
dec
inc
sbb
in
int
rcr
loop
or
xor
sti
mov
loopne
jo
jg
loopne
hlt
add
arpl
jl
xor
push
dec
call
pop
cmp
sbb
pop
rcr
clc
push
js
mov
inc
jmp
pop
leave
xor
in
mov
adc
ds
loop
mov
mov
add
fs
cmps
rol
pop
push
mov
inc
pushf
lahf
lods
jmp
xor
addr16
iret
cmp
xor
jae
cli
dec
or
rol
add
retf
jle
dec
out
sbb
mov
sub
sub
retf
mov
sti
popa
pop
mov
cmp
cmc
inc
enter
cmp
xchg
xor
jmp
add
loope
js
pop
aad
test
mov
adc
sub
or
jns
push
fcom
retf
or
pop
pop
push
fld
in
dec
shl
and
adc
xchg
cmps
into
mov
adc
(bad)
cli
lds
xchg
mov
fcomi
(bad)
cmp
cmp
test
add
sbb
ror
mov
outs
mov
fsub
adc
push
mov
or
jmp
dec
in
idiv
adc
dec
jecxz
into
mov
out
cmp
imul
sub
out
push
or
js
mov
stos
mov
lock
mov
ja
or
push
das
dec
sub
ds
mov
dec
or
mov
jae
js
add
inc
neg
jnp
or
or
ins
out
push
imul
in
in
rol
es
(bad)
and
shl
call
shl
sub
scas
fisub
(bad)
(bad)
lock
sti
test
call
push
add
push
cwde
adc
mov
xor
ins
or
shl
inc
jbe
pop
xor
leave
cwde
xor
inc
(bad)
fadd
mov
cmp
pop
fsubr
aaa
std
xor
add
(bad)
cld
pop
adc
pop
mov
sub
sbb
pop
loop
fistp
inc
mov
adc
jle
movs
out
adc
pop
and
fadd
pusha
cmps
outs
add
cmp
imul
cdq
jbe
div
loope
pop
fldenv
or
and
xchg
xor
loope
and
out
dec
rol
push
ins
push
test
js
pop
mov
shr
push
cs
test
sbb
(bad)
sahf
cld
imul
(bad)
jmp
je
mov
jge
loope
adc
xchg
mov
scas
stc
mov
leave
mov
add
cmp
pop
dec
cli
movs
aas
adc
sub
inc
sub
add
add
mov
ror
pushf
or
jnp
movs
in
(bad)
push
xchg
call
fisub
ror
pop
adc
leave
out
mov
fimul
daa
fbstp
repnz
into
mov
dec
xchg
enter
aad
fisubr
shr
out
rcr
retf
mov
xlat
mov
mov
and
jo
mov
pop
stc
into
pusha
push
out
gs
or
pushf
xchg
xor
cmp
and
ret
bound
jno
push
jb
mov
mov
lahf
movs
or
xor
sbb
sbb
and
xor
add
ret
push
aam
cld
add
push
test
aas
cwde
mov
(bad)
mov
pushf
test
cmp
push
cmp
movs
and
adc
push
out
sub
(bad)
jp
pop
push
bnd
sbb
add
and
daa
cmps
mov
test
xchg
enter
neg
mov
inc
adc
mov
jge
xchg
and
imul
shl
or
mul
aam
shl
jo
or
bswap
cmp
push
repz
scas
es
and
adc
lods
jle
das
mov
(bad)
jecxz
jg
add
sub
mov
add
xor
jnp
call
xchg
sub
sar
ror
adc
adc
das
dec
pop
pushf
(bad)
retf
fld
mov
repnz
in
rcr
leave
xchg
aam
jmp
or
clc
adc
or
xchg
nop
cmp
push
mov
imul
jmp
nop
test
push
inc
(bad)
or
out
js
xchg
movs
sti
pusha
iret
das
push
and
in
jb
cwde
mov
pop
or
mov
dec
and
aaa
xor
fwait
mov
xchg
(bad)
inc
sbb
mov
mov
sbb
push
xlat
daa
jnp
mov
enter
inc
add
xchg
or
fstp
movs
mov
lock
imul
cmp
mov
in
cld
mov
loopne
mov
or
js
sbb
imul
nop
add
cmp
adc
inc
sub
sbb
mov
cs
daa
inc
pushf
cli
fcomp
ret
jecxz
sub
pop
add
stos
popa
or
xor
push
cmps
cli
scas
aaa
cmps
inc
cmp
dec
rcr
es
shl
shl
or
inc
xchg
push
int3
int
stc
pop
mov
inc
sti
(bad)
xor
sahf
in
push
mov
xchg
mov
mov
popa
jb
loopne
clc
sub
out
xor
pop
loop
daa
and
rcl
dec
push
pushf
mov
cmc
sub
jae
mov
es
sbb
popf
rcl
(bad)
mov
shl
test
pop
add
les
mov
sub
jecxz
sub
mov
test
push
jae
out
lahf
clc
mov
mov
hlt
sub
dec
xchg
inc
mov
movs
mov
in
xor
push
xchg
xchg
imul
and
movs
mov
into
and
sbb
sar
jmp
rol
xchg
jle
jae
shl
push
pop
inc
test
adc
std
cmp
data16
cmp
cmp
clc
jbe
sbb
push
mov
add
xchg
dec
xchg
adc
je
adc
(bad)
inc
mov
imul
test
pop
(bad)
xor
inc
idiv
xor
mov
mov
es
add
icebp
add
sub
daa
loop
jmp
and
jmp
pop
jecxz
inc
lock
retf
lods
popf
lods
(bad)
and
pop
xor
jmp
push
sbb
in
xor
repnz
lock
neg
movs
sbb
aaa
test
mov
adc
cmp
pusha
into
fiadd
cmps
movs
dec
xor
in
add
mov
and
sbb
jmp
dec
pop
nop
push
add
jge
cmps
push
cwde
jae
mov
pop
les
jp
mov
fdiv
inc
or
sbb
hlt
pop
and
fwait
sahf
or
scas
pop
scas
adc
and
repz
jns
jmp
test
pop
fnstenv
gs
push
ins
push
movs
loopne
xchg
add
xor
push
push
cwde
jnp
and
mov
add
aam
jg
stos
push
mov
das
or
push
repz
mov
push
xchg
cmp
fldenv
jnp
xchg
jmp
pop
imul
xchg
mov
das
mov
mov
dec
sub
inc
fstp
rcl
xor
mov
pop
mov
retf
jle
mov
movs
cli
or
adc
shl
xchg
mov
or
in
pop
sbb
mov
in
cmc
mov
xchg
pop
inc
pop
adc
mov
lds
sub
add
mov
lods
(bad)
sub
dec
jae
add
mov
jmp
push
mov
addr16
iret
push
cs
mov
and
daa
mov
fstp
xchg
adc
sbb
inc
addr16
dec
imul
cmp
out
call
add
cdq
inc
xor
inc
sbb
and
mov
mov
(bad)
xlat
cmp
push
cmp
js
pop
sub
cli
jmp
mov
cmp
mov
jae
push
sub
inc
pop
push
pop
mov
adc
push
fisubr
icebp
pop
cdq
(bad)
inc
scas
lea
scas
add
lods
in
pop
jp
xchg
dec
imul
or
mov
test
and
push
lods
dec
in
sub
out
jge
sbb
shr
lods
inc
jle
hlt
jne
push
ss
xchg
push
cmp
cmp
das
in
jmp
imul
ins
or
test
test
jmp
inc
nop
ja
mov
cmc
(bad)
inc
shl
cmp
xchg
xlat
dec
and
rcr
int
inc
sbb
and
scas
and
mov
loopne
clc
jne
inc
add
enter
xor
or
mov
out
jle
cld
sbb
sti
cli
adc
mov
stc
mov
sbb
cmp
and
ds
xor
jnp
adc
dec
and
dec
sar
fwait
dec
jl
daa
sub
push
ss
mov
push
dec
dec
gs
mov
add
jmp
cmp
jp
js
repz
movs
je
addr16
adc
cli
dec
inc
aaa
out
in
adc
cld
cmp
sub
inc
sbb
fidiv
scas
or
adc
scas
xor
aam
push
push
fiadd
cmp
fsubp
xchg
jns
mov
xor
mov
scas
jb
ficomp
add
shl
adc
cmps
imul
cmp
cmp
fcomp
clc
scas
xor
adc
daa
dec
dec
scas
dec
xor
movs
repnz
xchg
(bad)
sub
mov
xor
pop
sub
sbb
ds
dec
dec
xor
cmp
pusha
adc
jnp
sbb
leave
ret
mov
cmp
es
ror
movs
ss
inc
mov
aad
jmp
imul
cs
jns
das
call
push
sub
xor
aas
push
mov
xor
ret
jmp
out
(bad)
pop
stos
aas
push
pop
stos
dec
sbb
outs
nop
jb
add
ja
stos
gs
(bad)
push
test
dec
in
sbb
fwait
lea
push
xchg
int3
jae
mov
ds
hlt
outs
idiv
shl
(bad)
(bad)
mov
or
sub
xchg
adc
imul
push
jne
and
fisub
xchg
mov
cmc
fdiv
shr
inc
jp
xchg
pop
push
js
and
jbe
mov
retf
xor
mov
xchg
xchg
sbb
dec
or
stos
and
inc
mov
pop
cmps
push
retw
xor
(bad)
outs
inc
sti
dec
mov
jo
cmp
cmps
cmp
inc
xlat
dec
arpl
sbb
neg
sub
ja
mov
nop
sbb
or
cmp
jnp
sbb
cmp
sub
pop
mov
ins
push
and
xchg
out
dec
mov
sar
mov
addr16
jl
sub
cli
lock
mov
sbb
inc
call
dec
retf
pop
dec
pop
enter
cwde
test
adc
cmp
shl
add
dec
fistp
pop
test
mov
loope
test
xchg
ss
xchg
adc
popf
cli
ss
pop
inc
mov
out
lods
imul
adc
(bad)
sub
aaa
mov
inc
jbe
movs
ins
push
stc
sbb
ds
jle
jmp
icebp
imul
inc
xor
xor
out
mov
inc
push
repnz
fs
cld
fnstenv
add
les
add
pop
mov
xchg
adc
inc
cmp
dec
inc
lods
jmp
cmp
test
cmps
lds
adc
retf
push
mov
dec
neg
test
rol
rcr
pop
shr
loop
mov
push
pop
loopne
popa
lods
inc
xchg
es
repnz
je
rol
or
xor
imul
enter
inc
fld
fwait
fwait
hlt
mov
icebp
push
mov
enter
jmp
add
inc
mov
lds
xor
fsub
stos
mov
enter
jno
mov
jmp
inc
cmp
sub
mov
sub
jg
add
inc
popa
jl
clc
jo
fimul
mov
adc
ins
sbb
adc
xlat
cmp
mov
sbb
(bad)
repnz
or
in
sti
nop
cmc
cmps
xchg
test
jmp
stos
mov
mov
mov
or
cmp
and
pop
jb
shl
adc
icebp
movs
cs
cld
loopne
mov
or
add
enter
mov
fcmove
hlt
lods
jmp
mov
cmp
dec
or
int3
xor
hlt
(bad)
fs
iret
(bad)
pop
test
push
cmc
xchg
jle
popf
add
cwde
shr
sub
mov
dec
push
pop
add
call
or
scas
mov
sub
sbb
adc
xor
mov
fnsave
fs
mov
icebp
adc
mov
cmp
and
xchg
je
fsub
add
jne
jl
fbstp
jl
int
aam
mov
xor
shl
jecxz
or
mov
xchg
ja
sub
inc
fsubr
aam
mov
or
daa
xor
jle
push
or
clc
mov
add
xchg
lock
sbb
mov
lods
sbb
out
xor
ins
jmp
retf
pusha
daa
fidivr
lods
clc
or
repz
xlat
daa
into
sbb
jge
mov
rcl
jno
mov
shl
cld
add
xchg
cld
inc
or
push
mov
jno
push
jbe
mov
imul
stc
xor
test
xchg
data16
sahf
nop
dec
pop
adc
mov
or
scas
lods
stos
in
add
mov
test
mov
sbb
sub
sti
sub
gs
call
retf
fidivr
ret
fcomp
xchg
pop
lahf
dec
cdq
adc
pop
jmp
adc
xchg
mov
gs
jo
fisub
ds
cli
or
push
fcomp
arpl
fbld
js
mov
outs
push
repz
sbb
paddw
jo
psubsw
push
out
cdq
(bad)
jb
jg
jb
add
movs
ret
icebp
and
fs
sbb
pop
cwde
cld
lahf
mov
aaa
pop
inc
xchg
pop
jae
shr
xor
rcr
aaa
lods
into
xchg
cmc
es
test
lods
leave
jbe
cmp
push
retf
jne
sbb
mov
mov
mov
add
arpl
cld
dec
push
mov
push
jnp
inc
sti
cmps
test
call
fild
mov
les
mov
cmc
inc
out
popa
es
stc
jae
xor
cmps
icebp
push
cmp
loop
imul
xlat
stc
addr16
in
arpl
lahf
jmp
mov
sbb
xchg
jns
pop
retf
sub
cmp
mov
mov
das
xchg
test
and
xchg
imul
sbb
pushf
shl
int
jp
pop
mov
pop
mov
test
bound
sbb
ret
jmp
pop
fsub
adc
add
pushf
xor
pop
mov
ss
stos
jmp
jb
call
jo
addr16
es
mov
addr16
mov
es
xor
cmps
sbb
push
adc
inc
sub
pop
(bad)
aam
cmp
dec
cdq
dec
push
and
jbe
and
aam
mov
rcl
xor
pop
sbb
fiadd
jmp
mov
sub
xor
sbb
xchg
pop
mov
sar
pusha
adc
(bad)
jns
fild
mov
cmp
lods
ret
jge
iret
jmp
mov
xor
or
imul
add
dec
stos
cmp
popf
and
mov
bts
cmovl
jmp
jno
jle
cmc
xor
(bad)
cmp
add
mov
jb
xchg
sub
xlat
addr16
div
jae
xchg
lahf
ret
sar
mov
xchg
lods
and
cmp
dec
mov
xor
sbb
inc
mov
inc
xchg
ins
lods
fdivrp
test
and
xchg
pop
or
loopne
add
mov
dec
cld
jle
mov
cmps
push
push
cdq
mov
fs
pop
add
addr16
daa
inc
sar
frstor
sub
sub
stos
cmp
dec
xchg
aaa
push
cmp
ret
jle
nop
clc
inc
arpl
and
dec
ins
mov
push
adc
int
xor
sti
dec
push
sbb
clc
lods
add
jbe
fwait
jle
cmps
fwait
sbb
jg
lds
and
and
out
push
sub
cmc
pop
cmps
lds
or
and
ret
or
int3
outs
push
cmps
sub
xor
or
daa
xor
push
hlt
or
loopne
loop
fisttp
std
call
mov
jg
jmp
in
out
pop
inc
lock
and
cmp
cmp
daa
or
test
push
sbb
xor
fnstsw
xchg
imul
shr
ret
sti
add
(bad)
adc
ins
dec
test
sub
xchg
cli
push
mov
mov
rcr
xchg
pop
into
push
pop
femms
hlt
ror
data16
test
in
mov
pop
daa
into
(bad)
mov
cmp
iret
ret
cmc
xor
ficomp
add
or
pop
push
dec
xchg
test
mov
lds
push
hlt
imul
daa
cmp
pop
jge
cdq
std
cmps
imul
nop
mov
inc
push
int
dec
stc
add
cli
add
xchg
test
jl
pop
push
inc
popa
push
mov
retf
push
gs
sbb
sbb
shl
push
dec
fs
scas
lahf
jmp
sub
adc
les
inc
loope
mov
neg
(bad)
cmp
pop
mov
mov
inc
mov
ret
or
outs
neg
hlt
(bad)
xchg
pop
mov
adc
test
dec
pop
frstor
inc
loopne
mov
into
jbe
dec
mov
into
test
mov
adc
push
mov
repz
or
jb
in
mov
rcl
fild
push
xchg
(bad)
cmp
mov
ins
adc
dec
loopne
(bad)
data16
rcr
stos
ficom
movs
rcr
popa
aad
jne
lods
in
jb
gs
inc
lods
fst
mov
into
fldenv
pop
pop
xor
jl
in
lahf
outs
push
jb
mov
xor
jl
cmps
push
and
pop
stos
mov
outs
int
in
les
sbb
dec
lods
mov
out
mov
cmp
mov
sar
sbb
adc
ficom
jmp
dec
mov
lods
jp
stos
rcr
js
push
inc
fsubr
mov
test
mov
cmp
inc
mov
pop
xor
out
and
adc
add
push
clc
mov
and
mov
sub
dec
rcr
lea
dec
mov
inc
ret
gs
cmp
(bad)
cld
out
dec
add
push
sbb
(bad)
xchg
add
mov
ins
sbb
fild
lock
ja
and
(bad)
ins
and
movs
sub
pop
mov
add
scas
aam
stos
and
pop
mov
push
test
pop
fwait
mov
dec
adc
add
daa
add
test
sub
push
fs
xchg
cmps
in
sub
pop
mov
outs
cmc
out
jg
jmp
pusha
outs
cmp
gs
ret
and
xchg
mov
rcl
iret
mov
adc
mov
dec
add
pusha
jle
and
mov
push
hlt
mov
pop
fcmovnu
dec
bound
sbb
arpl
push
pushf
add
jmp
fs
fdivr
xor
and
jmp
adc
sqrtps
lea
push
inc
pop
jg
xor
test
addr16
mov
icebp
in
ja
push
xchg
mov
cld
push
sub
xchg
mov
iret
cmps
mov
pusha
xor
retf
mov
lahf
mov
aad
adc
fnstenv
sar
getsec
test
repnz
mov
retf
popa
fcomp
inc
inc
retf
sub
jle
pusha
mov
dec
jns
in
in
cli
inc
mov
in
outs
jo
mov
cwde
cld
nop
mov
mov
inc
cwde
dec
or
mov
push
xchg
popa
ins
inc
adc
mov
jno
mov
push
pusha
jnp
int
dec
adc
inc
adc
or
leave
(bad)
jns
adc
neg
push
and
jne
push
lds
imul
shl
xor
xchg
push
pop
(bad)
int3
inc
(bad)
ret
mov
ins
lea
sbb
icebp
push
cmps
push
cmp
lods
rol
call
cwde
pusha
popa
or
push
and
jb
xchg
mov
push
pop
mov
bound
mov
aam
fnstcw
outs
frstor
jo
(bad)
dec
enter
dec
cmp
hlt
push
leave
xor
ret
leave
es
jecxz
jae
sub
mov
cwde
xchg
call
jb
ret
dec
push
jmp
sbb
push
pop
add
dec
inc
rcl
jno
jb
jnp
sti
inc
xor
adc
pop
xchg
sub
xor
inc
and
(bad)
scas
push
rcr
popa
or
push
out
push
iret
inc
dec
and
popf
add
ret
sti
in
dec
inc
rcl
jp
pop
sbb
addr16
(bad)
aam
push
out
rcr
push
stos
jp
inc
cmp
outs
or
jl
(bad)
sbb
lods
inc
and
loop
mov
sbb
arpl
jp
and
outs
jnp
sub
inc
or
int3
pop
push
xchg
sub
or
or
movs
fstp
or
inc
or
pop
mov
jecxz
popa
xor
call
out
pop
jno
out
lods
fcomp
xchg
and
(bad)
scas
mov
xor
ja
adc
mov
xor
(bad)
xor
xchg
in
lods
xor
inc
sbb
xchg
xor
push
out
les
movs
pop
xchg
clc
cmc
mov
xchg
xor
push
push
pop
sub
pop
sub
mov
mov
sub
jle
dec
fbstp
push
fidiv
dec
jmp
or
xor
sbb
out
ja
hlt
mov
pop
cli
dec
cmp
daa
sbb
mov
iret
mov
aam
clc
mov
mov
cwde
jnp
inc
or
(bad)
(bad)
jmp
ss
adc
xor
fwait
dec
mov
sbb
movs
cs
mov
mov
mov
mov
repnz
push
dec
push
pop
cs
pusha
dec
push
cmps
and
mov
out
shl
dec
push
or
ds
inc
mov
outs
into
adc
pop
or
retf
rol
data16
or
push
dec
out
lods
mov
jb
dec
jge
es
mov
sar
dec
adc
adc
(bad)
xchg
cld
jmp
stos
pop
hlt
jo
cmp
dec
sbb
and
arpl
lods
cmp
ds
and
fidivr
adc
inc
jae
sub
pmulhuw
mov
pushf
push
sbb
mov
add
sub
jmp
retf
mov
xor
(bad)
pop
into
jbe
and
mov
jae
cmps
push
jnp
ins
or
loope
int3
enter
mov
inc
mov
pop
xlat
ret
cwde
lods
push
stc
push
popa
mov
ds
push
and
sub
cmps
pop
mov
xor
xchg
ret
int
aad
aas
(bad)
repnz
out
mov
sti
aaa
stc
inc
scas
adc
adc
jno
pop
popf
cmc
repnz
shr
or
nop
pop
xrelease
mov
call
inc
cmps
mov
std
push
test
jns
scas
cmp
sub
movs
repnz
sub
mov
add
mov
in
shl
xchg
retf
arpl
dec
mov
aam
aas
call
jb
inc
test
(bad)
stc
out
and
mov
push
sbb
mov
pop
jmp
jle
fimul
das
jle
cmc
sbb
push
lods
adc
or
rep
xor
data16
clc
push
mov
mov
(bad)
jmp
push
dec
mov
or
xor
mov
sub
(bad)
mov
cmp
inc
mov
cmps
test
xor
inc
inc
int
or
std
rcr
(bad)
lea
xchg
pop
addr16
cmp
pop
test
jle
jns
aas
out
pop
sbb
movs
lock
push
or
and
ins
retf
inc
and
int
sub
aas
mov
jmp
jb
jp
and
into
xchg
push
sbb
sbb
cmp
mov
adc
add
xchg
dec
retf
sbb
ja
or
test
lahf
lods
data16
loope
repnz
xchg
add
cmps
lahf
pushf
dec
(bad)
mov
nop
fistp
lods
cmp
cmp
cli
push
jbe
das
push
pop
mov
push
fs
pop
mov
adc
sub
inc
xchg
or
jmp
pushf
mov
or
not
clc
xor
cs
cmc
out
inc
inc
push
sbb
ja
xor
in
frstor
xor
mov
stos
cvtpi2ps
cmp
popa
xor
popa
mov
jg
dec
dec
test
cwde
(bad)
iret
or
or
or
std
cs
mov
add
nop
or
mov
cmp
inc
inc
js
dec
adc
mov
xchg
mov
push
in
adc
inc
(bad)
cli
xchg
dec
inc
sbb
xlat
jb
sbb
(bad)
push
dec
call
sub
ja
or
adc
gs
into
or
retf
retf
bswap
sbb
ins
in
jbe
fist
mov
lock
pop
stos
sub
and
pusha
test
adc
in
push
pop
xchg
add
rol
test
and
sbb
cld
loop
xor
ss
arpl
push
mov
sub
rcr
aam
mov
enter
icebp
or
dec
out
push
fwait
mov
test
(bad)
cmp
stos
nop
jns
jnp
mov
aas
sbb
dec
bound
or
movs
into
retf
mov
and
pop
into
jns
movs
cmps
fcmovb
cld
loop
xchg
es
sbb
inc
lahf
test
sub
mov
push
add
mov
xor
pop
outs
outs
pop
in
mov
jnp
push
sti
in
bound
add
dec
inc
xor
cli
xchg
mov
addr16
test
sub
cmp
outs
sbb
mov
cli
mov
movs
sbb
ret
stos
jge
out
aas
mov
dec
and
pusha
stc
xor
cmps
pop
xchg
jmp
int3
dec
jns
mov
adc
std
add
(bad)
push
mov
xchg
mov
mov
jmp
mov
mov
inc
imul
pop
or
mov
inc
ret
arpl
dec
mov
xchg
fucomp
sbb
lahf
mov
in
add
adc
mov
into
dec
imul
xor
aad
add
jne
popa
push
popf
out
mov
sar
sub
xchg
jecxz
int3
stos
or
retf
and
rol
mov
or
xor
sbb
push
mov
push
int
ja
ja
dec
or
xor
cmp
inc
or
xchg
fwait
cmc
push
push
xor
fs
iret
iret
pop
sbb
add
into
rcl
jp
mov
gs
imul
ret
cmc
movs
ret
fsub
inc
xchg
xchg
and
in
loopne
jecxz
aas
ret
fiadd
push
icebp
lods
mov
(bad)
inc
jns
push
xchg
(bad)
daa
mov
xchg
push
push
lock
mov
outs
in
icebp
sbb
mov
pusha
jmp
cmp
(bad)
xchg
in
push
mov
sar
fsub
pop
fxam
cli
push
push
popa
lods
xchg
mov
nop
mov
and
xchg
popa
and
inc
lock
mov
xchg
push
loop
aad
cld
cmps
lods
jnp
pop
das
xchg
push
gs
fwait
call
xchg
popf
or
push
push
(bad)
sbb
outs
mov
and
daa
rcr
mov
xor
fsubr
or
test
xchg
xor
jg
mov
mov
push
jge
out
inc
addr16
xlat
sub
retf
jo
inc
push
(bad)
imul
ss
loopne
xor
enter
ins
jge
and
rol
imul
(bad)
jbe
mov
sub
sbb
jge
sub
add
xchg
add
push
xor
call
jecxz
add
fild
dec
pop
(bad)
sub
or
sub
inc
inc
mov
test
out
sbb
int
popa
scas
cmp
xor
adc
test
inc
mov
repnz
push
test
repnz
clc
sahf
add
sbb
fsubr
ja
ins
mov
call
out
dec
jmp
dec
(bad)
xor
push
xor
fbld
xor
loop
fisttp
mov
cmc
xor
jmp
jnp
pop
in
pmulhuw
mov
repz
mov
mov
std
sub
push
cmc
xor
xchg
icebp
cwde
pushf
sub
repnz
add
out
mov
adc
and
sbb
mov
inc
in
call
leave
lds
stos
lds
sbb
cli
call
stos
adc
jg
(bad)
ror
loop
repz
js
ret
pop
sub
dec
xchg
std
call
inc
call
dec
or
mov
push
out
repz
(bad)
xchg
je
ds
stc
mov
retf
aas
popf
ret
inc
mov
or
fs
mov
xor
in
push
dec
sbb
jle
cmp
imul
adc
mov
adc
stc
mov
out
repnz
aas
fst
pop
scas
mov
xchg
sbb
dec
pusha
dec
xor
ds
daa
xor
jecxz
sbb
inc
xor
popa
sar
lea
push
inc
mov
xchg
es
pop
inc
call
inc
jecxz
ret
ror
ja
arpl
mov
jl
out
(bad)
out
jbe
sub
cs
cld
dec
fnstenv
pop
or
retf
out
add
stos
iret
shl
loop
shl
(bad)
sbb
fimul
popf
mov
pop
sbb
iret
ret
jge
jmp
pusha
rcr
xor
and
ret
sar
retf
jmp
jle
xor
aad
psubd
or
mov
ds
xchg
push
shl
adc
mov
push
cmc
adc
adc
out
add
pop
aam
pextrw
pop
pushf
push
add
or
ss
dec
inc
fcmove
xchg
mov
jmp
stos
cmps
lods
push
cmps
(bad)
push
ins
mov
or
and
mov
cdq
or
and
jb
mov
sbb
cmp
sbb
add
mov
mov
mov
lods
inc
enter
mov
pop
sub
jae
(bad)
(bad)
js
gs
mov
and
jmp
push
ja
xor
icebp
inc
dec
mov
test
mov
fiadd
pop
pop
mov
xchg
pop
ss
jle
inc
and
mov
sbb
pushf
xor
bound
add
jbe
cs
mov
jns
cmp
test
outs
in
pushf
ja
adc
pop
punpckhwd
or
cdq
mov
push
jmp
test
scas
pop
sahf
(bad)
fcomp
mov
cli
je
add
push
dec
call
outs
push
sub
mov
test
push
mov
mov
leave
mov
iret
test
jb
sbb
adc
mov
push
pop
retf
sub
mov
in
xchg
mov
shl
mov
ins
and
adc
jmp
push
lea
push
dec
mov
mov
test
cmp
pop
dec
jmp
push
inc
push
addr16
mov
rcr
mov
add
(bad)
mov
mov
or
out
adc
in
fcmovnu
loope
rcr
or
adc
xor
lods
inc
push
fcom
or
sub
jae
stc
inc
rol
adc
mov
fimul
pushf
inc
mov
push
fcomp
cmp
in
ins
and
inc
sub
fsubrp
xor
pop
adc
mov
pop
test
mov
inc
inc
jle
sub
xor
or
dec
mov
sub
sbb
fisubr
push
xor
pop
jno
movs
sub
and
dec
pop
push
leave
xor
daa
iret
mov
pop
repz
push
repnz
adc
cli
mov
cmp
lock
ret
mov
push
loopne
add
push
inc
sbb
in
int3
dec
adc
xchg
movs
inc
xchg
xchg
mov
pop
adc
dec
sar
pop
aam
adc
ret
ror
imul
mov
rcr
ds
lea
es
cmp
cmp
inc
sbb
out
and
ins
xchg
imul
xor
pop
fld
sub
jbe
inc
jae
mov
jmp
int3
repnz
jle
push
retf
scas
mov
inc
cmp
out
sbb
loop
aad
cmp
inc
stc
push
icebp
sbb
cdq
icebp
retf
mov
and
adc
lahf
xchg
ins
ret
push
pop
sbb
cmps
pop
ds
(bad)
jecxz
mov
shl
and
aas
dec
mov
push
or
adc
jmp
sar
and
sub
jnp
xchg
and
fild
in
mov
mov
lods
xlat
jmp
out
mov
mov
push
cdq
mov
sbb
movs
sub
mov
stos
mov
cs
jmp
dec
retf
cdq
call
call
mov
icebp
stos
daa
imul
cmp
(bad)
cmp
sbb
add
xlat
pop
arpl
cmc
popf
out
pop
fs
jb
inc
mov
mov
push
jb
cli
pop
int3
mov
cli
add
lds
inc
adc
sbb
jo
inc
loopne
xor
lock
xor
loop
xchg
or
xchg
aad
inc
adc
add
sub
adc
scas
fsubp
mov
jbe
pop
jmp
pop
adc
fscale
mov
mov
cmp
iret
sti
stos
ja
iret
mov
add
xchg
pop
pushf
sub
fwait
xor
or
cmp
sbb
inc
adc
call
mov
or
data16
inc
jns
fbstp
scas
ds
mov
mov
push
jmp
pop
bound
test
mov
mov
clc
pop
inc
ins
inc
fld
(bad)
fnstcw
(bad)
ficomp
mov
and
les
cdq
fdiv
call
and
lods
in
gs
xchg
retf
fld
sbb
ss
cmp
or
add
(bad)
div
cdq
stos
mov
jg
cld
xor
jmp
scas
dec
ret
xor
cs
push
(bad)
inc
cld
mov
je
push
sahf
stc
ss
div
in
and
sti
or
push
lods
lods
and
xchg
jns
adc
xchg
jnp
out
pop
xor
test
cdq
enter
add
clc
mov
clc
push
mov
into
sbb
cmps
cmp
int3
sbb
cdq
test
pop
dec
inc
(bad)
pop
adc
retf
out
movs
cli
call
push
cwde
jmp
ror
mov
int
or
imul
dec
rep
(bad)
push
cmp
dec
lahf
adc
out
(bad)
jle
cmp
jno
cwde
call
mov
push
jecxz
xchg
sbb
mov
mov
inc
mov
lods
push
(bad)
out
(bad)
xchg
scas
or
sbb
mov
adc
leave
(bad)
sbb
or
repnz
inc
mov
mov
sti
pop
inc
push
adc
xor
cmp
adc
(bad)
jg
and
je
cmp
jbe
inc
or
or
loope
or
inc
and
out
jne
dec
repz
lock
mov
pushf
fst
cli
stc
xlat
aaa
test
(bad)
xchg
fisttp
dec
mov
(bad)
in
sbb
sub
movs
fcomp
add
fsubr
pop
or
pop
js
sub
xchg
mov
outs
shr
xchg
lock
(bad)
xchg
mov
xor
lahf
(bad)
mov
mov
(bad)
iret
jno
mov
push
(bad)
fstp
cmp
fistp
cmp
pop
aad
jmp
dec
pop
sbb
adc
aad
mov
sti
clc
cmp
mov
push
ret
pop
jmp
in
mov
jbe
fcmovnbe
dec
jmp
add
lea
and
js
icebp
push
add
cwde
push
fmul
bound
in
pop
mov
sbb
(bad)
in
bswap
loop
lods
and
inc
xor
xor
gs
fwait
cmps
sar
inc
pop
adc
cwde
pop
mov
mov
pop
xor
fidiv
cmp
sbb
fistp
loopne
dec
mov
add
daa
sbb
(bad)
inc
fidiv
mov
call
xor
shl
stos
daa
daa
ss
outs
mov
pushf
fdiv
add
dec
jno
or
call
lods
push
and
ins
nop
mov
mov
dec
mov
cmc
hlt
mov
cmp
data16
cdq
xchg
int
add
aaa
jb
popa
xchg
data16
leave
outs
arpl
lea
mov
div
sti
cmp
mov
scas
inc
dec
jge
mov
fidivr
out
cld
adc
fwait
cdq
add
xor
aaa
arpl
iret
xor
mov
(bad)
cmc
jle
aaa
(bad)
mov
cmp
inc
jae
js
retf
cmp
pop
xchg
icebp
sub
pop
(bad)
mov
add
xchg
lods
jecxz
ret
cmp
in
lock
inc
das
or
inc
retf
adc
cli
mov
jmp
push
push
outs
(bad)
push
in
xor
lods
sub
xor
into
mov
push
dec
cmp
sbb
daa
sub
sub
fmul
xor
add
jmp
cli
add
shl
lea
lods
mov
adc
and
out
xlat
rcl
xor
or
pushf
sbb
ret
mov
jo
push
inc
je
pop
adc
xor
ds
loopne
push
inc
movs
call
idiv
push
je
xchg
nop
xor
jb
not
icebp
pop
ds
and
add
mov
mov
sub
int
cmp
pop
pop
jp
lds
test
xor
outs
pop
jae
mov
(bad)
pop
mov
jb
pop
lock
aas
(bad)
dec
adc
inc
mov
push
test
inc
sub
pop
mov
xchg
and
jge
test
movs
fst
int3
jge
pop
xor
inc
mov
fmulp
sub
mov
sbb
jp
cmp
push
adc
xor
neg
xlat
scas
aam
and
ror
cmp
int
mov
leave
leave
fwait
jae
cmp
xor
popf
push
and
loopne
int3
pop
cmc
nop
jg
pop
in
repnz
jno
lods
lock
mov
pop
push
sub
lods
mov
mov
addr16
cmc
xor
dec
mov
pop
xchg
inc
and
cmp
mov
add
cmps
mov
add
push
mov
fdiv
dec
retf
jmp
adc
test
sbb
jnp
lea
dec
fbld
jnp
jno
inc
stc
mov
adc
ins
or
sub
enter
pop
mov
cmp
cs
push
std
addr16
ret
pop
add
iret
jne
fld
xchg
pop
pop
lea
jno
int
xchg
pop
scas
outs
xchg
jmp
jns
pop
inc
outs
jo
pusha
lahf
ins
xchg
sbb
mov
imul
adc
sub
jo
shl
mov
fisttp
les
ret
icebp
lods
shr
ins
cmp
inc
mov
sbb
hlt
xchg
mov
fmul
push
leave
xor
(bad)
jb
jg
xor
retf
retf
mov
mov
and
test
test
pop
ret
in
xor
adc
into
in
sbb
scas
adc
cmc
imul
pop
jbe
xor
test
out
cmps
mov
inc
or
mov
mov
test
push
cmps
mov
mov
jnp
rcl
adc
adc
out
mov
xchg
adc
sbb
add
test
xor
sub
jle
cmp
xor
pop
stos
jno
mov
sbb
cdq
sbb
adc
push
test
jo
inc
xchg
jmp
stc
jns
rcl
(bad)
xor
fnsave
(bad)
cmp
mov
ins
add
mov
pop
pop
sahf
out
in
pop
mov
pop
xor
bound
xchg
and
ret
or
mov
xchg
test
xchg
mov
bound
stos
dec
popa
push
test
movs
mov
popf
jno
(bad)
adc
out
fidivr
cwde
retf
cmove
xor
sbb
xchg
call
test
pop
dec
inc
mov
addr16
(bad)
xchg
test
into
lahf
(bad)
call
int3
cdq
fs
sbb
ins
xor
movs
ss
into
xchg
mov
dec
hlt
jae
add
aas
mov
in
sbb
call
cs
cld
or
cli
cwde
adc
fwait
mov
stc
mov
loop
cmp
or
add
scas
mov
outs
dec
cwde
mov
add
pop
and
jo
jg
ret
cmps
add
push
sbb
cmp
mov
jmp
int
sar
jno
mov
adc
cmp
cmp
jnp
ds
xor
fndisi(8087
or
xlat
mov
sbb
add
in
mov
inc
adc
xchg
xor
aad
aaa
push
sbb
into
int
mov
or
dec
bound
fwait
(bad)
call
sbb
ret
cmp
ss
popf
es
iret
pop
mov
xlat
mov
stos
xor
inc
inc
hlt
xchg
jb
inc
xchg
and
jp
xor
int
ror
jmp
leave
push
xchg
xor
out
lock
mov
pop
adc
jecxz
mov
in
(bad)
cld
xor
mov
mov
and
fdiv
das
sub
pop
jbe
xchg
repnz
dec
pop
mov
sbb
outs
movs
js
lds
or
jnp
leave
addr16
mov
retf
sub
cmps
jmp
ja
mov
xor
test
dec
push
ror
push
sub
mov
pusha
mov
cmp
xchg
jmp
jl
mov
fwait
inc
or
push
and
dec
mov
xor
adc
mov
test
into
aad
fst
jg
leave
push
jmp
mov
push
mov
mov
hlt
repnz
out
es
add
push
jnp
int3
scas
cmp
fnsave
inc
add
pop
daa
aaa
adc
jp
ins
clc
(bad)
clc
or
dec
shr
mov
ud1
push
xchg
cli
das
mov
sar
cmp
mov
out
cmc
sar
sub
or
jne
adc
out
sub
stos
dec
mov
xchg
ficom
cdq
push
cwde
cs
inc
rol
jecxz
xchg
sbb
cdq
ja
sbb
ret
or
pop
out
movs
xchg
lea
mov
add
cmp
sbb
cmp
jne
inc
cmps
fiadd
fistp
mov
mov
pop
adc
xor
sbb
xchg
jp
dec
call
rcl
push
push
fcomp
mov
clc
fs
outs
test
mov
sub
mov
pop
ins
nop
imul
fbstp
shr
inc
aas
jp
mov
outs
ins
movs
mov
xchg
dec
data16
arpl
jp
mov
xchg
outs
sar
repnz
aaa
push
push
(bad)
mov
xchg
adc
mov
mov
and
add
cwde
xor
fst
in
mov
jmp
dec
std
cmp
inc
(bad)
pop
and
ret
inc
pop
fdiv
xchg
ss
and
aas
(bad)
int
jle
and
(bad)
lods
retf
call
xchg
movs
call
sub
push
imul
int
out
mov
cmp
mov
fwait
cs
inc
aad
repnz
jne
cli
sub
mov
(bad)
push
mov
mov
inc
dec
adc
data16
imul
pop
scas
inc
jnp
addr16
sbb
out
repz
sub
or
out
mov
jne
or
in
leave
shr
jb
mov
sbb
ins
dec
or
or
shl
jnp
mov
jge
xor
ficomp
int
jecxz
int
and
sbb
fmul
mov
je
add
test
or
dec
aas
mov
enter
cmp
mov
cmp
or
sub
cmp
cmps
mov
loopne
xor
outs
push
stos
cmp
call
push
and
adc
sub
mov
xchg
mov
mov
and
mov
dec
pop
jg
add
jns
inc
push
pop
les
mov
mov
inc
xchg
sub
ds
in
mov
and
(bad)
inc
fist
or
sbb
clc
and
call
jmp
test
and
inc
test
mov
mov
arpl
inc
stc
cmp
mov
pop
add
ss
inc
or
push
movs
sub
stc
adc
sbb
xchg
dec
dec
pop
mov
xchg
ja
pusha
(bad)
and
pop
stc
fdiv
xchg
mov
outs
cmp
push
shr
call
push
in
inc
xchg
call
sub
inc
sbb
push
pop
lahf
std
mov
hlt
mov
or
push
fcom
ret
popa
and
xchg
mov
mov
fld
popa
out
xor
popf
fcmovbe
movs
cmc
fucomi
or
mov
mov
push
sub
test
jmp
push
inc
repz
sbb
sub
stos
pop
sbb
jns
push
and
inc
mov
adc
cmp
hlt
movs
xchg
lea
ja
cmp
hlt
xchg
pusha
xchg
mov
pop
clc
jmp
jecxz
aad
adc
mov
or
repz
ins
dec
pop
les
add
mov
fadd
sub
dec
sub
popf
scas
mov
xchg
xchg
add
cmps
mov
push
stc
adc
outs
push
jle
adc
push
xor
xor
(bad)
test
es
in
mov
jo
push
pop
es
popa
add
pop
adc
jecxz
clc
smsw
lahf
nop
es
inc
pop
div
shr
in
loop
nop
out
out
es
xlat
sbb
imul
stos
dec
pop
inc
push
fstp
xor
dec
and
mov
add
or
imul
inc
cmp
push
in
ror
mov
mov
test
(bad)
rcr
in
fdivr
lock
ja
inc
xchg
jmp
adc
push
movs
mov
cmc
mov
or
je
loopne
in
add
mov
lods
push
pop
push
ja
clc
bound
adc
into
in
in
cmp
jmp
fstp
icebp
push
add
lahf
mov
repz
push
rcr
ja
inc
push
mov
inc
inc
retf
stc
mov
ret
dec
or
mov
xchg
push
fstp
(bad)
cmps
add
pop
inc
and
fldenv
lea
add
sbb
sbb
fisubr
cld
int
cmc
cmps
dec
(bad)
in
mov
xchg
xor
call
fcom
cmps
xchg
popf
imul
lds
dec
push
mov
js
mov
or
rcl
cld
ror
mov
dec
sbb
int3
inc
push
jmp
inc
fisub
mov
in
hlt
lock
ins
cmp
scas
les
popa
xor
in
cmps
lds
or
and
leave
mov
add
push
rol
outs
je
imul
jmp
je
jae
test
rol
das
mov
std
push
aaa
dec
pop
push
cdq
add
add
or
gs
in
pop
inc
stos
cmp
mov
xchg
jle
or
fiadd
(bad)
sti
mov
mov
inc
or
mov
xchg
mov
enter
mov
lods
push
test
rol
sbb
add
jno
cmp
xchg
push
jne
pop
(bad)
mov
mov
add
inc
lahf
mov
xor
test
and
cmps
pop
sub
cld
mov
cmps
mov
rcl
pop
in
sbb
mov
ss
loopne
or
ins
imul
sub
mov
into
xchg
jnp
(bad)
cmp
sbb
stos
jno
stc
test
clc
xor
aas
and
cmc
loope
scas
sub
jle
fldcw
fs
iret
les
sbb
(bad)
out
push
mov
xchg
jle
jnp
xor
cdq
fidiv
mov
push
mov
popf
ret
or
(bad)
(bad)
jmp
rcr
ja
call
jmp
inc
ds
add
mov
jmp
sub
jp
mov
add
pushf
fwait
dec
push
cmp
int3
leave
stos
scas
xor
fsub
xchg
sbb
jg
jp
mov
aad
lahf
in
push
adc
fisub
add
or
ds
push
in
mov
fwait
mov
jb
outs
mov
adc
loope
push
mov
pop
in
xchg
or
adc
rcpps
hlt
add
or
in
mov
mov
pop
dec
cmps
aam
adc
addr16
repz
xor
das
push
dec
push
movs
mov
inc
iret
pop
es
ret
and
mov
jne
(bad)
std
mov
popa
mov
mov
jg
hlt
into
pop
aam
(bad)
pop
aad
adc
adc
int3
pop
ins
call
mov
inc
adc
add
fwait
inc
in
push
into
dec
xchg
mov
xlat
sbb
sub
jno
and
xchg
sbb
jle
(bad)
jecxz
std
dec
repz
sub
sbb
(bad)
enter
cmp
mov
lods
nop
sub
sbb
mov
cdq
xor
adc
aaa
std
or
xchg
ja
mov
outs
movs
push
jmp
popf
fnstenv
shl
mov
add
(bad)
ficom
mov
mov
(bad)
pop
xor
scas
outs
lock
mov
loope
mov
adc
movs
push
cmp
in
ins
mov
xchg
movs
test
sub
jbe
imul
(bad)
pusha
push
out
add
pop
cmps
mov
jne
cs
pop
popa
imul
lea
inc
dec
gs
fnstcw
fisttp
xor
cmps
loopne
push
pop
xchg
(bad)
ds
pop
cmp
add
js
ds
sub
dec
xor
add
lahf
mov
fdivr
inc
fdivr
jno
mov
gs
repnz
les
call
retw
jge
dec
push
sbb
(bad)
imul
mov
add
and
push
(bad)
std
xlat
fisttp
cmp
lods
jmp
mov
loopne
fwait
imul
push
mov
ins
mov
pop
pop
add
test
es
xchg
sub
mov
mul
or
lods
neg
outs
(bad)
push
pop
cdq
adc
test
dec
daa
arpl
arpl
sbb
call
dec
inc
mov
ret
test
pop
icebp
add
sar
outs
dec
cmp
mov
sar
sub
push
daa
cmc
and
xchg
dec
xor
cmps
repnz
call
enter
gs
push
cmc
xor
push
adc
iret
inc
dec
add
adc
mov
call
xchg
sar
test
mul
jecxz
stc
sub
cmp
fs
mov
leave
out
jbe
lea
aam
aam
clc
imul
inc
push
into
jecxz
jecxz
dec
mov
jle
pop
lds
mov
pop
xlat
jno
jge
mov
(bad)
mov
inc
mov
mov
test
xor
or
xchg
leave
pop
mov
push
or
out
sbb
mov
cmps
sub
jmp
stos
movs
add
or
jmp
and
dec
psrad
call
mov
lea
in
sti
xlat
jge
lds
(bad)
hlt
mov
(bad)
sbb
mov
shl
xchg
dec
add
rcr
xchg
mov
pop
ror
xchg
mov
pushf
(bad)
sbb
into
pop
sub
out
stos
xchg
ret
dec
inc
push
mov
pop
imul
daa
inc
sar
xlat
inc
add
pop
scas
loop
push
adc
sti
mov
sar
and
ds
inc
add
(bad)
in
fistp
pusha
jp
mov
sete
in
retf
inc
add
pushf
pop
dec
adc
inc
add
xchg
adc
jmp
push
mov
popa
push
xchg
pop
stos
aas
xor
hlt
lea
scas
daa
test
enter
adc
call
mov
xchg
jmp
lods
imul
xchg
or
aad
push
lea
push
fsubr
movs
cld
and
sti
jnp
mov
push
add
fmul
sar
out
test
pop
and
sub
adc
xor
pop
pop
jne
jnp
pop
rol
retf
test
aaa
mov
adc
adc
sbb
jae
xchg
out
jl
popa
retf
(bad)
pop
mov
push
mov
pop
sub
ja
test
dec
je
mov
cmps
in
pop
xor
mov
lods
inc
adc
test
(bad)
fisttp
or
mov
test
inc
jle
neg
push
mov
sbb
push
jo
gs
inc
adc
std
xchg
and
sbb
inc
sub
loop
dec
pop
cmp
sti
std
in
movs
pusha
jno
pop
pop
push
aaa
les
ja
out
sbb
dec
repz
jle
out
mov
mov
pop
pop
sub
shl
in
jmp
sbb
(bad)
xchg
stos
push
pop
cmp
adc
and
adc
ficomp
mov
mov
xchg
nop
mov
jb
xor
sbb
fst
in
cmc
adc
mul
repz
jno
sbb
not
xchg
or
sbb
jmp
cld
add
mov
fwait
jno
into
mov
mov
stc
mov
inc
xor
xor
or
sbb
mov
adc
retf
pop
cdq
push
sub
cmc
rcr
and
pop
cmp
pusha
cmp
(bad)
fcomi
popa
mov
dec
outs
xor
call
pop
das
push
and
cmps
lods
mov
lea
jno
les
push
sub
dec
repnz
into
mov
jl
add
in
mov
xor
out
jl
popf
sbb
inc
pop
enter
fs
pop
fstp
push
adc
clc
add
cmp
add
xor
mov
out
js
add
mov
mov
jecxz
pushf
fidiv
and
sbb
push
lahf
gs
test
stos
repnz
scas
jmp
sub
xor
dec
jbe
(bad)
leave
or
add
inc
mov
ins
inc
cmp
dec
imul
jno
adc
adc
dec
mov
adc
stos
dec
scas
ds
pop
push
fwait
loopne
imul
lds
out
scas
stos
mov
mov
xor
mov
mov
and
scas
pop
mov
and
adc
lods
mov
repnz
cmp
xor
in
mov
xchg
cwde
xor
jecxz
aaa
cmp
xor
out
pop
inc
test
sbb
pop
arpl
aam
sbb
test
mov
ins
push
mov
imul
rol
pop
mov
jl
or
sub
mov
and
cmp
retf
inc
add
cmp
xor
fldenv
sub
repnz
lahf
into
jno
fnstenv
push
lods
pcmpgtb
ja
iret
push
add
or
iret
or
pop
aaa
inc
iret
mov
inc
outs
retf
push
cli
xchg
push
push
inc
jge
std
pop
sbb
scas
mov
sbb
js
adc
cmp
imul
sahf
mov
jne
shl
mov
mov
das
ret
into
jmp
xchg
in
mov
xor
pop
mov
jmp
adc
cmp
jae
icebp
jns
and
in
mov
adc
test
es
dec
icebp
retf
xor
das
int3
adc
sub
dec
das
je
sbb
lock
out
movs
push
into
ins
fnsave
cld
rcl
inc
push
scas
cmp
push
mov
xor
mov
data16
sar
and
aaa
movs
shl
inc
pop
les
dec
jo
adc
fst
sub
fdivr
ror
xor
hlt
add
sar
fldl2t
retf
mov
cmp
mov
pop
call
xor
gs
xchg
cli
dec
jbe
or
shl
mov
pop
dec
mov
jp
pop
sbb
into
push
ret
push
ss
sbb
jp
and
sub
addr16
fcmovb
out
sti
pusha
nop
xor
(bad)
in
and
in
jp
je
movs
aas
add
test
call
fisttp
fisttp
or
das
cmp
or
push
add
je
sti
sahf
cld
out
cmp
rcl
icebp
cmp
lds
mov
add
mov
test
xor
jl
cmps
out
dec
push
out
adc
mov
(bad)
push
pop
mov
or
fsub
and
retf
int
and
adc
pop
cld
xor
xchg
push
sub
(bad)
test
movs
mov
inc
or
adc
mov
loopne
repz
cmps
dec
out
lea
or
add
inc
inc
(bad)
cwde
(bad)
hlt
sbb
aas
fsub
adc
pop
adc
mov
test
mov
cmp
xor
push
clc
adc
arpl
and
shr
dec
push
jecxz
daa
icebp
fs
fnsave
adc
add
sbb
mov
std
add
imul
outs
mov
fadd
lds
outs
push
pmaxsw
mov
dec
les
js
jle
mov
push
jo
or
push
scas
jl
xchg
jbe
shl
add
add
and
unpcklps
add
or
sub
das
mov
dec
add
gs
xchg
ja
das
fwait
pop
outs
into
inc
mov
movs
rcr
movs
xchg
mov
mov
push
jno
pop
xchg
mov
mov
sub
into
mov
(bad)
or
and
sub
xor
inc
cwde
popf
mov
pop
xor
cmp
imul
es
outs
mov
jb
mov
icebp
inc
sub
pop
mov
jno
jecxz
lds
lea
in
jnp
jo
hlt
push
jmp
mov
jb
ins
popf
dec
test
test
and
aaa
(bad)
lods
jae
inc
mov
pop
sub
stos
cld
adc
loope
js
mov
loope
lock
cmp
div
fcmovnbe
clc
mov
movaps
xlat
xchg
and
cld
into
and
pop
inc
call
inc
fst
cmps
pop
cmp
icebp
pop
or
ficomp
and
or
fcomp
sbb
cmp
and
rol
(bad)
jmp
push
mov
push
sub
cmp
cs
inc
vmulsd
int
jae
jmp
movs
sub
sbb
xor
adc
mov
mov
mov
mov
sti
add
pop
sbb
pop
imul
push
mov
scas
xchg
sub
mov
add
xlat
pop
and
stos
jl
xor
dec
daa
ret
mov
lock
pop
test
fxch
shl
xor
and
jle
in
and
fwait
cmps
cmps
leave
movs
out
jo
push
ret
jp
jb
cmc
mov
adc
jmp
cmps
pop
and
daa
dec
or
xchg
mov
and
add
popa
aam
jne
pop
mov
imul
retf
sar
mov
iret
add
mov
xor
sub
add
sbb
add
jecxz
call
dec
mov
sub
ins
jo
icebp
jnp
mov
call
or
es
sub
fwait
sbb
call
inc
push
jo
shr
inc
or
fnstsw
pop
je
push
retf
ror
or
pop
cmp
test
imul
jns
and
int3
xor
ficomp
shl
mov
mov
jmp
push
push
inc
repz
xor
in
lds
imul
pushf
mov
daa
loop
mov
xchg
scas
stc
xchg
pop
push
push
imul
mov
push
mov
inc
pushw
jge
gs
add
dec
cmp
mov
call
sahf
adc
add
mov
inc
sub
push
cwde
lahf
movs
scas
xchg
or
dec
popa
xlat
jnp
movs
xchg
xchg
adc
lds
adc
hlt
loopne
xchg
loope
xchg
sbb
cmc
xchg
mov
xchg
jnp
in
cmps
fsub
and
push
aas
call
and
xchg
test
push
cmp
iret
push
xor
cmps
call
mov
ins
mov
pusha
adc
xchg
test
cmp
in
call
repz
ins
in
dec
loop
cli
add
fxtract
xchg
push
or
icebp
mov
cmp
scas
mov
data16
out
xor
arpl
test
adc
cmps
fucomp
add
pushf
add
sub
sbb
shr
xor
add
inc
ss
outs
(bad)
cli
out
xchg
fcomi
test
add
shl
rol
fs
loope
and
or
cmc
jne
adc
sbb
cdq
push
pushf
scas
mov
pop
cmp
rcr
mov
dec
jbe
scas
stos
mov
mov
in
nop
xchg
jb
mov
mov
hlt
into
mov
jmp
pop
jg
out
call
loop
les
cmps
cmp
jp
imul
in
dec
lahf
mov
add
cmps
and
jbe
adc
inc
jnp
jns
add
into
pop
ret
xchg
and
pop
(bad)
add
jmp
add
jno
adc
push
outs
cwde
adc
shr
mov
lods
loopne
ret
push
jecxz
mov
inc
ins
sub
popa
shl
mov
mov
and
or
ins
pop
enter
mov
sub
jbe
(bad)
loop
mov
pop
int
retf
mov
inc
xlat
fs
inc
push
sbb
push
inc
fs
mov
sbb
lods
sbb
fs
sub
mov
mov
add
jg
jb
push
xor
xchg
sub
daa
lds
ds
inc
adc
mov
(bad)
mov
and
xchg
lods
dec
xchg
mov
inc
outs
sahf
push
loop
mov
add
fsubp
sub
sbb
or
cld
(bad)
mov
leave
and
fdiv
dec
(bad)
cwde
adc
push
pop
mov
call
adc
outs
iret
or
jl
mov
bound
jb
xchg
inc
add
xor
(bad)
stc
retf
push
aad
xchg
mov
hlt
repnz
push
sahf
out
std
mov
and
mov
push
aad
cdq
in
pop
ret
fmul
push
jo
lock
test
cvttps2pi
(bad)
mov
jb
add
or
call
(bad)
mov
push
push
inc
xor
xlat
pop
inc
push
mov
iret
xchg
ins
fcmovnb
inc
add
je
jmp
sub
push
or
ret
dec
xor
cmp
pop
int
xchg
fdiv
cs
pop
(bad)
mov
and
lock
mov
adc
mov
xor
jg
ror
or
(bad)
jl
jmp
mov
popf
imul
push
sub
loopne
cld
mov
and
test
cwde
sbb
pop
lods
scas
hlt
jae
sub
movs
jecxz
out
jo
cmp
and
cmc
sbb
daa
fadd
repnz
stc
imul
inc
fisttp
mov
jns
ret
and
aaa
mov
add
push
jp
mov
pop
xchg
movs
cmp
xlat
ins
push
xor
cmp
adc
jno
xlat
mov
ret
sbb
xchg
xor
arpl
sti
and
stc
sub
repnz
ret
mov
or
adc
sti
xchg
fsubrp
nop
jnp
pop
loop
xchg
ss
sahf
cwde
xchg
dec
icebp
lds
cdq
lds
repnz
sub
mov
rcr
mov
sub
cmp
adc
mov
out
in
fldcw
mov
test
xchg
pop
iret
cmc
xor
ds
aad
cmps
lods
xchg
sub
adc
add
add
in
pusha
clc
sub
and
cmps
mov
lahf
jl
dec
ret
sbb
(bad)
cmc
daa
out
push
jmp
pop
and
sub
fld
out
inc
shl
xchg
push
dec
test
xchg
and
clc
test
ret
push
js
aad
dec
cwde
xchg
mov
fnsave
or
rcpps
sub
cmp
add
push
clc
sbb
and
leave
fucomip
xchg
and
jmp
mov
pusha
mov
inc
rol
sbb
dec
out
mov
mov
repz
loopne
sbb
xor
add
inc
pop
adc
shr
retf
cmp
leave
(bad)
adc
(bad)
xchg
jne
mov
xor
repz
cmp
imul
shl
stos
ss
sub
mov
or
cmp
retf
outs
jo
dec
sbb
lds
aad
shl
mov
pop
and
fwait
data16
cld
test
nop
cs
ret
add
xchg
mov
fs
mov
add
push
rcr
mov
xchg
mov
data16
dec
das
ja
dec
cmp
mov
arpl
dec
outs
jmp
int3
push
or
pop
sbb
je
adc
in
fcomp
or
inc
imul
iret
fsub
push
test
jmp
cmps
les
test
pusha
push
adc
dec
imul
leave
pushf
push
ret
cmps
and
xor
test
int
in
fimul
dec
mov
pop
and
repnz
loope
out
ds
adc
jp
add
daa
test
cmp
pop
retf
cld
xchg
inc
sub
cmp
adc
add
int
sub
mov
dec
push
(bad)
dec
xor
out
inc
adc
jp
sbb
jmp
jg
nop
rcl
imul
jno
out
icebp
js
mov
jmp
repnz
sub
arpl
jae
call
pop
push
or
shr
or
std
fistp
or
mov
sti
jmp
jno
xor
xor
out
repz
mov
(bad)
out
js
cmp
pop
jno
push
in
and
push
clc
push
inc
or
pop
lahf
icebp
mov
bound
leave
scas
add
add
ja
imul
std
and
leave
mov
mov
test
rcr
pop
jae
lahf
ret
push
call
retf
push
and
ja
mov
pop
in
pop
popf
push
jb
lock
clc
jle
sbb
in
adc
xor
dec
iret
pop
and
xchg
sub
or
mov
xchg
imul
dec
ficom
retf
mov
mov
pop
cmp
mov
neg
cmp
sbb
iret
xchg
out
mov
cwde
cmp
jae
mov
fsubr
jecxz
lods
fidivr
jb
aas
dec
adc
movs
outs
push
in
int3
cli
mov
sbb
clc
mov
not
and
mov
repnz
ret
ret
sbb
ficomp
push
push
fiadd
enter
outs
mov
cmp
mov
outs
pop
or
ja
lods
bt
aas
dec
add
push
mov
inc
nop
jbe
jl
dec
aad
enter
div
into
outs
jmp
rcr
mov
adc
push
dec
je
psrlq
out
sqrtps
dec
and
imul
inc
loop
outs
pop
cwde
pop
outs
pop
mov
dec
sbb
jne
pop
xchg
dec
neg
outs
aas
dec
sub
outs
sahf
ss
ret
xor
mov
stc
or
pop
ds
arpl
test
lods
mov
add
fs
sub
push
loop
inc
xchg
shr
and
addr16
cmp
mov
inc
dec
ret
add
daa
jmp
mov
jmp
sub
test
ds
out
mov
mov
adc
sbb
adc
inc
out
test
ds
xlat
fbstp
jnp
cwde
or
fisttp
jb
jbe
or
jp
shl
add
xchg
jo
xchg
ins
mov
jno
mov
cli
loop
lea
pop
xchg
push
sbb
push
ds
mov
enter
push
ins
jl
and
dec
inc
mov
inc
mov
imul
sub
pop
leave
jl
ret
test
adc
jp
call
cwde
pop
xor
and
pop
push
mov
inc
adc
lods
mov
(bad)
hlt
jbe
addr16
(bad)
(bad)
push
fstp
loop
aas
xor
xor
xchg
stc
jns
std
lds
xor
adc
and
outs
and
je
jg
adc
lds
imul
mov
cmp
loop
xor
pop
push
into
push
das
test
pop
sub
inc
movs
pop
adc
jno
(bad)
(bad)
rcl
jb
aad
jge
dec
pushf
mov
mov
pop
xchg
pop
mov
es
cdq
mov
mov
shl
jns
xchg
(bad)
in
mov
pop
sbb
cmps
or
pop
pop
inc
(bad)
jne
xchg
out
stos
cmps
fdivr
xchg
dec
leave
add
dec
ja
cmps
dec
mov
mov
jbe
dec
das
(bad)
mul
sbb
mov
sub
and
mov
push
adc
cmp
add
jg
adc
cs
stos
pop
cdq
mov
push
mov
cmp
out
pop
mov
in
mov
cmp
fmul
inc
and
mov
pop
jb
pop
imul
(bad)
cmp
stos
dec
sbb
jo
push
lods
xlat
pop
js
mov
shl
stos
sar
pop
lods
sub
cmc
aaa
mov
int3
loop
imul
add
sbb
enter
leave
into
out
mov
inc
xchg
fs
sub
out
dec
push
icebp
call
lea
and
movs
xor
pop
jbe
mov
mov
inc
inc
rcr
imul
or
lods
push
ret
push
dec
or
adc
push
xlat
js
je
aas
mov
adc
or
out
cwde
push
mov
mov
cmp
mov
mov
addr16
test
or
hlt
aam
jno
adc
neg
fadd
out
jecxz
xor
aam
inc
sahf
lahf
movs
mov
xor
xchg
sbb
cs
fisub
retf
sub
dec
dec
push
pop
jmp
jne
pop
add
fmul
mov
pop
data16
fs
ds
cs
out
ja
into
mov
pop
adc
in
fild
movs
adc
mov
ss
add
clc
push
push
cmp
pusha
stc
(bad)
ffree
test
push
ja
push
int3
and
hlt
and
push
(bad)
scas
dec
xchg
cmp
sbb
(bad)
loopne
sub
data16
inc
mov
ds
retf
adc
inc
push
jno
orps
fidiv
das
cmp
mov
loope
je
in
stos
fbstp
push
cwde
xor
mov
jnp
sub
inc
shl
inc
stc
push
leave
test
pop
sub
int
dec
xchg
jp
jle
cld
in
not
jb
dec
pop
push
fisub
pop
fidivr
pop
mov
les
cwde
repz
repz
stos
xor
push
xor
retf
jb
sbb
xlat
jns
mov
outs
and
loopne
imul
pop
mov
vpsubsw
add
loop
dec
test
rol
cmps
rcl
mov
and
(bad)
xchg
push
test
mov
and
mov
test
mov
mov
sub
push
mov
mov
add
je
(bad)
test
or
imul
dec
fdiv
fld
and
xor
adc
jns
call
stos
xor
lods
test
sbb
es
xchg
dec
sub
jge
cmp
les
or
adc
hlt
(bad)
retf
les
sub
scas
inc
and
lock
lods
imul
mov
int
imul
push
sub
mov
jo
mov
or
mov
arpl
js
call
xor
out
pushf
scas
dec
cld
cs
imul
mov
sub
add
push
adc
jge
dec
cwde
sbb
es
popf
ds
ins
clc
loope
sbb
aad
repnz
pop
or
mov
sahf
jp
mov
sahf
(bad)
movs
and
fidivr
inc
adc
push
popa
and
movs
in
jecxz
mov
pop
jmp
retf
push
xchg
(bad)
mov
icebp
fs
call
push
loopne
inc
cmp
stc
add
adc
out
xchg
xchg
icebp
xor
das
dec
jae
sbb
shl
out
lods
xchg
jb
rol
cld
sbb
hlt
xor
cmp
xchg
das
sbb
jne
pop
and
ja
mov
xchg
mov
mov
inc
jbe
mov
jecxz
int3
test
test
cmp
pop
test
gs
sti
mov
ja
stc
dec
jg
(bad)
cli
shl
add
sub
cmps
push
mov
jl
jbe
popf
(bad)
xchg
mov
inc
mov
fbstp
sbb
sbb
xor
imul
mov
ss
jl
jno
inc
fimul
lahf
mov
dec
cld
scas
call
jge
pop
stos
test
lods
(bad)
push
xor
dec
leave
jg
fld
cmp
mul
and
lahf
push
out
inc
imul
or
add
arpl
test
(bad)
jmp
dec
cld
ret
push
jns
les
cdq
jae
shl
xchg
(bad)
sbb
cld
sub
movs
pop
lahf
xor
cmp
cmp
repnz
jmp
mov
add
or
xor
jle
mov
in
xor
push
jecxz
mov
ret
test
imul
nop
in
or
out
and
jnp
pop
inc
sub
sbb
fisub
sbb
jnp
inc
ror
outs
cs
dec
add
pop
pop
sbb
xchg
or
int
aas
sub
mov
cmp
mov
inc
sahf
jne
cmp
aam
lods
mov
nop
gs
retf
cs
sbb
into
xchg
gs
int
enter
pop
sub
mov
into
leave
leave
mov
popf
outs
push
and
icebp
in
sbb
jnp
sar
bound
and
call
xchg
xor
cmps
xlat
sar
xchg
sub
xor
xor
push
ror
push
dec
dec
sbb
fxch
pop
repnz
xchg
cmp
dec
inc
xchg
les
cmovb
inc
sti
sub
jl
int
loop
jecxz
(bad)
sbb
mov
mov
sub
and
neg
lea
mov
addr16
or
in
icebp
inc
xchg
mov
cmp
and
dec
or
jle
mov
data16
cdq
(bad)
xor
push
mov
sar
les
push
adc
ins
data16
outs
mov
cdq
sub
iret
dec
mov
in
fisub
movs
lea
sti
call
fidivr
test
in
in
hlt
loope
xchg
jbe
dec
jmp
es
jl
sbb
shl
jno
sti
loop
retf
ffreep
dec
xchg
mov
cmc
xchg
and
lahf
pop
test
clc
dec
in
js
ret
cmp
in
dec
mov
pop
mov
retf
and
xor
int3
fs
cmps
mov
std
leave
fimul
aaa
or
lea
xchg
mov
je
mov
daa
std
and
jl
daa
add
ds
jb
call
sbb
sbb
mov
out
mov
ret
mov
pop
xor
jmp
cmps
jo
not
xchg
push
add
test
movs
push
and
pushf
(bad)
xchg
sbb
mov
fdivr
cwde
jns
jno
dec
mov
cmp
hlt
dec
sub
out
mov
test
push
in
jbe
xor
out
sbb
xchg
outs
mov
adc
and
ins
and
mov
(bad)
cmp
push
pop
int
inc
cs
retf
movs
dec
sub
mov
outs
cdq
pop
sub
inc
push
mov
xchg
enter
push
mov
cmps
cmc
popa
das
stc
loope
imul
sub
pop
push
rol
test
enter
(bad)
sti
push
xor
icebp
or
mov
xchg
jle
add
inc
and
mov
jg
inc
sub
adc
loopne
inc
cmp
push
inc
cmc
leave
ins
jmp
xor
test
cmc
sbb
sar
add
imul
or
test
xor
int3
xor
and
sbb
and
mov
popa
repnz
les
xor
inc
hlt
add
retf
hlt
int
inc
pop
scas
rcr
jno
je
fldenv
ja
dec
mov
lds
sbb
int3
cdq
cwde
ret
test
(bad)
or
repnz
dec
bnd
stos
xchg
movs
dec
movs
mov
fnsetpm(287
and
lds
dec
mov
and
and
and
pop
fbstp
dec
loope
in
adc
scas
dec
fnstcw
cmp
das
das
gs
inc
les
mov
dec
sbb
fcomp
push
inc
xchg
imul
stc
mov
mov
fidivr
add
out
jmp
pop
or
scas
fs
fsubr
ret
and
ja
data16
cmp
mov
push
inc
cmp
inc
imul
daa
cmps
das
and
xor
jp
or
push
(bad)
fcomp
add
lods
cmp
dec
sbb
mov
sbb
xor
pop
imul
jl
cmp
addr16
cmps
movs
push
mov
xchg
xchg
jno
pop
outs
jge
nop
aad
jge
mov
cmp
push
dec
push
(bad)
cmp
dec
ret
or
hlt
test
loop
xor
lock
shl
sub
loop
push
xchg
shl
and
cmp
fld
jmp
ja
pushf
xchg
arpl
pop
adc
hlt
or
sbb
cmp
push
dec
mov
push
add
jge
scas
(bad)
fiadd
fst
cmp
adc
aaa
add
fidivr
ret
ret
cmp
imul
sbb
and
fisubr
add
fs
ret
xor
jnp
inc
dec
or
jp
lds
cmp
jno
adc
sub
lea
push
aam
add
cmp
arpl
push
mov
std
ja
sub
mov
mov
aaa
cwde
test
cmp
xchg
aaa
popf
push
adc
xchg
retf
lock
retf
gs
push
mov
cdq
(bad)
or
cmp
out
xchg
xlat
xor
dec
fdivrp
out
rol
and
loope
push
jmp
std
xlat
jp
mov
and
cmp
push
or
or
into
jae
sub
test
mov
push
add
lea
pop
xor
add
shl
jecxz
sub
das
adc
pop
dec
ret
sbb
mov
adc
repz
or
aam
xor
retf
mov
xchg
jge
jmp
mov
out
fstp
popf
call
jl
int
loope
inc
xchg
sbb
xor
jnp
add
call
mov
mov
mov
inc
adc
push
hlt
push
pop
not
mov
adc
xor
xor
mov
sbb
retf
mov
dec
pop
outs
test
pusha
sahf
movs
xchg
sub
aam
dec
shl
xchg
lea
cmp
cmc
sbb
stos
jge
inc
push
xchg
pop
mov
(bad)
daa
mov
in
shl
mov
(bad)
test
loop
cmp
mov
stc
jns
sbb
fidivr
std
ret
mov
clc
cmp
es
and
adc
sub
cwde
cmp
in
xchg
leave
pop
std
cld
stc
mov
adc
call
cs
cli
inc
inc
pop
stc
xor
pop
stos
loop
movs
pop
test
sahf
cwde
pop
sub
inc
sbb
adc
xchg
ins
aaa
xchg
mov
xor
push
les
stos
inc
jmp
dec
add
hlt
scas
loope
sar
aad
imul
lds
fisttp
dec
push
rol
cwde
mov
xor
clc
cmps
fild
cmp
popa
push
push
jb
in
mov
fcom
pop
add
inc
jne
dec
mov
mov
push
cmp
inc
mov
into
dec
addr16
jno
sbb
repz
or
(bad)
ds
or
rol
test
(bad)
sub
xlat
pop
test
mov
ret
xchg
or
mov
int3
mov
(bad)
sub
ror
xchg
mov
pop
cmp
enter
jb
mov
mov
in
mov
aad
adc
and
in
lods
arpl
jmp
rcl
cli
cwde
aad
loop
iret
xchg
pop
mov
mov
fstp
jb
lock
add
adc
outs
cmp
xchg
or
and
pushf
mov
cmp
mov
not
inc
jmp
shl
dec
adc
bswap
mov
adc
pop
mov
dec
adc
push
cmp
scas
sbb
ds
fsubr
jge
ret
or
shl
je
sub
aaa
xchg
fcomp
btc
mov
fimul
inc
pop
mov
out
test
push
mov
jmp
int
sub
mov
xor
sub
cs
in
bound
ret
push
cmpps
sbb
xor
cwde
test
cmp
jg
ret
arpl
rol
inc
jle
fcmove
pop
mov
imul
jo
and
cmp
mov
fwait
jbe
cmc
stos
fisubr
inc
pop
mov
test
mov
inc
add
mov
pop
jl
hlt
fcmovnbe
and
dec
ret
call
inc
out
xbegin
mov
retf
fsubr
retf
cmp
(bad)
daa
popf
rcl
mov
or
push
adc
mov
pop
daa
into
sub
(bad)
shl
pop
push
stos
jp
cmp
xor
iret
or
aad
sbb
dec
and
xchg
jbe
xor
cmp
in
frstor
ins
mov
push
jo
leave
mov
ss
add
dec
outs
pop
hlt
lea
fstp
fwait
adc
and
sbb
cmc
xor
and
mov
sub
movs
push
fnstcw
ins
sbb
push
outs
and
jg
sbb
cmp
adc
inc
jle
push
inc
or
movs
jmp
and
out
push
sub
lock
jo
outs
arpl
inc
dec
mov
dec
jnp
add
or
es
aaa
es
dec
das
sahf
les
jmp
out
shl
cmp
div
lods
out
dec
mov
idiv
(bad)
cmp
jl
call
gs
jnp
xor
mov
mov
les
je
rcl
scas
push
dec
in
sbb
sub
jb
hlt
adc
xor
lahf
pop
je
in
int3
add
fnstenvw
sar
cmp
(bad)
dec
inc
(bad)
mov
xchg
mov
sub
shl
repnz
popf
popf
mov
rol
cvttps2pi
mov
and
jnp
sbb
or
xor
pop
iret
jmp
inc
xchg
push
mov
repz
aad
pop
(bad)
(bad)
in
out
sahf
stc
into
(bad)
ins
fist
mov
mov
shl
(bad)
jecxz
or
test
mov
add
pop
cdq
fs
push
movs
jmp
adc
mov
sub
mov
inc
or
add
hlt
dec
leave
sub
push
jbe
fidivr
adc
fwait
mov
loopne
cmp
xor
lods
pop
leave
xor
cwde
sti
test
adc
in
lds
imul
mov
push
mov
rcr
out
jmp
mov
jle
mov
and
jl
dec
clc
mov
je
cmp
jmp
mov
je
(bad)
jns
cli
mov
mov
sbb
sub
enter
push
adc
add
cmp
iret
or
xchg
add
pop
sub
in
leave
adc
nop
inc
push
cli
mov
adc
fwait
inc
mov
jne
data16
cs
in
mov
mov
jg
xchg
stos
cmps
aam
call
xor
xchg
enter
sbb
inc
xchg
sbb
test
inc
imul
xor
ret
dec
imul
inc
aaa
aam
sbb
pop
mov
mov
loopne
adc
outs
into
mov
adc
dec
movs
dec
rcr
outs
xor
mov
mov
(bad)
push
and
xchg
xchg
push
mov
push
sub
js
dec
mov
add
mov
test
test
mov
push
add
aad
mov
fcmovnu
cld
lea
mov
rol
push
adc
sbb
inc
lds
neg
int
loope
xchg
cmp
sub
pop
mov
or
jmp
dec
or
pop
test
out
out
(bad)
int
or
arpl
ins
jmp
mov
jg
add
lea
mov
std
mov
and
push
popf
jmp
iret
fidivr
sbb
imul
popa
pop
inc
mov
enter
fdivr
mov
xchg
call
je
in
and
inc
cmc
outs
(bad)
hlt
xor
das
out
lahf
cmp
xchg
dec
(bad)
cmp
or
in
test
cdq
mov
add
call
pop
shl
ins
push
push
pop
mov
pop
adc
sti
mov
test
inc
outs
leave
imul
mov
retf
sub
imul
retf
xchg
mov
int
jge
ins
mov
pushf
lock
mov
adc
outs
cmc
jl
repnz
aaa
mov
jle
mov
or
push
jbe
xchg
stos
push
std
lahf
inc
pop
icebp
imul
(bad)
ins
mov
pusha
xchg
mov
sub
aaa
fisubr
sbb
pop
push
xor
test
jo
jno
icebp
push
sbb
mov
and
push
(bad)
dec
and
scas
sub
sub
aad
pop
mov
fdiv
ds
mov
mov
xor
adc
adc
add
das
sbb
adc
mov
sub
loop
jmp
in
sub
inc
lea
inc
mov
push
mov
lods
scas
inc
rcl
fld
jb
xor
into
mov
sub
sar
jb
xor
push
xchg
sbb
sub
dec
xlat
cmp
mov
ficom
mov
mov
adc
add
sbb
rol
add
mov
adc
pop
(bad)
mov
mov
xchg
mov
sbb
jg
and
dec
sub
adc
push
and
leave
mov
jge
jmp
mov
add
or
and
xor
cwde
jo
mov
lods
adc
ficom
xor
jecxz
out
or
loopne
dec
add
pop
mov
and
daa
ret
and
sub
pop
mov
xchg
push
mov
dec
imul
dec
pop
jl
lock
pop
sub
dec
and
or
or
sbb
int
inc
push
add
xor
push
push
jmp
dec
cmp
in
xchg
inc
push
imul
or
retf
(bad)
outs
sar
jno
cld
pop
adc
push
cmp
loop
ja
dec
xchg
pushf
add
aaa
loop
and
xchg
ret
jge
aaa
es
clc
pushf
lods
mov
xchg
inc
stc
add
or
mov
lahf
and
cmp
bound
mov
adc
es
retf
cs
push
jne
stos
rol
sub
xor
pop
xor
cdq
or
test
cld
add
stc
mov
pop
das
and
cmp
hlt
inc
retf
inc
adc
xor
frstor
jmp
retf
std
rcl
cmp
adc
enter
cs
mov
test
cdq
mov
ja
xor
rol
adc
mov
sub
jae
ret
inc
cmp
hlt
stos
pop
xchg
mov
hlt
imul
adc
and
sbb
pushf
sub
(bad)
ret
add
and
retf
adc
retf
push
fdiv
repz
clc
clc
jp
cmp
out
dec
mov
shl
mov
sbb
imul
pusha
mov
adc
arpl
sub
jl
popa
ins
ja
fmul
iret
loop
xchg
inc
sbb
popa
add
mov
xor
ret
push
call
daa
shl
popa
inc
inc
out
loopne
mov
pop
lods
ins
sub
push
add
nop
xchg
sar
nop
mov
fidivr
fistp
cmps
imul
adc
call
mov
scas
sub
mov
mov
add
sbb
movs
(bad)
sub
out
mov
jle
push
pop
sbb
jge
test
xor
jp
test
imul
mov
mov
and
inc
push
adc
pop
pop
in
dec
js
outs
push
pop
mov
jecxz
push
int3
ret
stos
mov
shr
lods
mov
outs
fdiv
bound
xchg
es
test
lds
add
push
cmp
jne
out
mov
add
sub
cmp
xchg
xlat
cmps
sub
jmp
test
mov
popf
mov
or
xor
loope
or
out
ret
pop
dec
adc
pop
fwait
pop
xor
adc
pop
out
fidivr
ret
or
iret
les
xor
stos
std
sbb
stc
mov
pop
add
stc
push
dec
mov
cmp
lock
rcl
clc
call
sub
mov
cmc
add
idiv
xchg
mov
das
push
fnstenv
popf
push
fldcw
pop
ret
inc
cmp
jp
push
repnz
stos
inc
push
jbe
stc
in
paddusb
pop
int
dec
stos
repz
arpl
(bad)
sub
sub
movs
mov
call
js
fs
das
cmp
mov
mov
ret
dec
jo
stc
pop
mov
adc
jnp
fimul
mov
retf
cmp
rol
cmp
sub
icebp
cwde
xchg
sahf
idiv
sbb
xchg
xlat
je
sub
pop
mov
int3
mov
mov
adc
in
daa
sbb
inc
mov
psrad
xchg
mov
jo
pop
in
jl
xchg
mov
cdq
mov
ins
push
jmp
sar
scas
loope
ja
test
(bad)
pop
lods
add
xchg
inc
lock
lods
sbb
cmp
mov
mov
jle
and
movs
jmp
sbb
repz
xchg
push
das
add
sbb
leave
jge
dec
mov
sbb
xchg
add
sbb
add
icebp
inc
ss
dec
mov
pop
or
or
aad
mov
rcr
movs
jl
xchg
mov
mov
data16
dec
add
dec
test
add
push
mov
mov
xchg
rcl
xchg
mov
sub
add
mov
popa
dec
cmc
pop
dec
add
push
cmp
inc
mov
add
adc
lea
jae
push
dec
cmp
sub
ins
xchg
mov
or
push
call
mov
dec
int
inc
dec
jns
or
pop
or
imul
in
push
pop
mov
movs
out
cmp
je
xchg
sar
aad
mov
cmp
or
mov
xchg
(bad)
cmps
sub
jne
imul
(bad)
cmps
stc
test
xchg
and
test
jo
mov
cmc
mov
dec
add
icebp
xchg
add
inc
dec
xchg
clc
sti
push
push
sahf
daa
dec
enter
retf
sub
arpl
aaa
jnp
cwde
movs
jecxz
and
imul
out
data16
test
pusha
xlat
jp
fucomip
adc
inc
adc
add
mov
out
movs
adc
test
loop
test
cs
xor
xlat
push
or
xor
jge
inc
xor
and
jp
outs
xchg
movs
std
xlat
retf
push
sbb
jmp
mul
lods
retf
nop
xchg
lds
push
or
movs
xchg
dec
mov
cdq
pop
adc
shl
pop
xor
ret
inc
sub
icebp
lock
ins
jmp
mov
and
leave
shl
(bad)
(bad)
mov
adc
aam
adc
mov
sub
inc
pusha
or
mov
fist
ins
and
xchg
js
pusha
outs
add
ins
add
adc
in
mov
daa
dec
test
rol
inc
(bad)
adc
cmc
xor
inc
mov
cmc
sti
ins
or
(bad)
stc
loop
xor
fwait
or
pop
and
rol
cwde
inc
icebp
ds
repnz
jbe
movs
adc
sub
inc
jo
sub
scas
stos
pop
sub
add
add
in
mov
ins
inc
and
jnp
jnp
sub
jl
leave
mov
enter
add
mov
fdivr
mov
inc
mov
shr
ret
cmp
xchg
mov
inc
cli
mov
inc
mov
(bad)
aaa
retf
(bad)
jp
mov
imul
add
jbe
push
ins
cld
xchg
loop
and
and
out
loop
sub
lea
lods
sub
add
mov
fdiv
movs
rol
jp
(bad)
addr16
push
cmp
lahf
rcl
arpl
leave
add
inc
mov
fadd
mov
or
mov
sbb
inc
adc
scas
xchg
data16
or
std
into
lods
pop
cwde
sahf
in
loop
cmp
leave
add
fs
dec
and
dec
push
stos
mov
call
or
adc
dec
test
scas
fmul
call
rcl
add
sbb
(bad)
mov
stos
cmp
and
aam
pushf
fcom
xchg
xor
test
(bad)
sub
cmp
sti
inc
stc
push
cmp
shl
inc
mov
(bad)
mov
jge
cmps
les
aas
aam
push
in
test
sub
(bad)
mov
in
mov
ins
hlt
dec
dec
jg
je
push
jno
inc
enter
stos
call
lahf
dec
not
pusha
aaa
pop
pop
mov
xlat
sub
leave
std
in
pop
in
test
int
mov
retf
jns
jecxz
std
mov
fisttp
dec
push
xchg
cmp
rep
jns
jo
into
out
sbb
loopne
xlat
mov
in
shl
in
pop
repnz
mov
sbb
jo
aam
ins
sub
xchg
aam
cmps
and
pop
ror
push
sub
push
stc
ds
sti
inc
mov
cmp
sbb
lods
retf
xchg
jmp
and
pop
dec
(bad)
adc
add
loopne
imul
mov
xchg
leave
dec
movs
mov
xor
pop
add
out
pop
out
pop
dec
loopne
pop
xchg
inc
mov
adc
pop
jle
cmp
test
mov
pop
sbb
add
add
pop
pop
sub
lods
push
daa
mov
outs
or
(bad)
xor
mov
jl
ret
test
jns
call
xchg
pop
sub
jnp
ret
inc
stos
movs
je
or
inc
fild
test
cmp
(bad)
hlt
or
jmp
cs
or
and
mov
in
ds
and
pusha
push
jae
dec
sbb
test
sub
test
pop
inc
cld
mov
xchg
std
test
ret
aaa
call
rcr
retf
adc
xchg
ins
adc
push
shld
out
xchg
fiadd
(bad)
mov
jbe
movs
scas
jne
mov
ret
ds
or
cmp
xor
jmp
mov
mov
xchg
popf
xor
ins
jae
mov
sbb
mov
dec
cld
scas
imul
sbb
mov
push
mov
mov
sbb
in
push
xchg
fbstp
mov
and
dec
inc
jle
sar
sbb
dec
pop
enter
sar
push
in
int3
jp
inc
dec
cmp
sub
aad
(bad)
dec
lock
(bad)
adc
adc
push
test
shr
mul
hlt
ins
data16
add
mov
inc
shr
jp
jo
lahf
xchg
pop
or
mov
xor
popa
ins
dec
inc
stos
cmp
call
imul
outs
add
leave
aaa
cmps
ins
test
mov
add
push
xchg
mov
cmc
jae
shl
adc
fucomp
movs
adc
ss
popf
dec
das
(bad)
mov
jle
push
fcompp
stc
pop
enter
jg
clc
mov
mov
into
stos
pop
lods
and
into
mov
inc
aas
mov
pop
into
sti
jne
lods
add
add
dec
lea
pop
dec
pop
xor
mov
into
pop
inc
fs
cmovo
mov
bnd
sbb
inc
jge
mov
mov
sti
aam
jne
ror
pusha
mov
test
icebp
sub
mov
pop
xor
sub
outs
ins
movs
and
ror
aaa
dec
mov
xchg
pop
pop
pop
jmp
pop
mov
push
call
or
repnz
leave
inc
pusha
push
call
add
inc
mov
imul
iret
add
dec
outs
inc
test
dec
cs
sar
das
sbb
std
nop
leave
jmp
popf
xchg
pushf
jl
fdivr
fs
mov
mov
hlt
aaa
scas
imul
scas
out
fsub
into
sahf
into
inc
hlt
push
jmp
xor
repnz
fucomip
xor
inc
hlt
push
or
ror
pop
jmp
fst
mov
dec
sub
mov
xor
js
sbb
ret
or
add
jmp
jbe
inc
mov
jnp
add
ficom
jp
dec
jg
fwait
xchg
mov
cld
in
cmp
pop
lahf
rcl
ror
into
dec
cmp
lock
mov
pusha
dec
or
je
jno
dec
xchg
push
cmovno
daa
pop
retf
leave
mov
jmp
cld
adc
dec
retf
mov
mov
sahf
rcr
push
fld
add
sub
adc
xchg
into
and
cmp
es
xchg
int
std
mov
mov
in
stos
mov
cmps
adc
cs
outs
xchg
adc
fcom
or
imul
mov
scas
mov
pop
mov
xchg
les
mov
adc
pop
cmps
stc
addr16
call
sbb
and
inc
int3
enter
and
mov
cdq
xor
int
pop
pop
jne
stos
pshufw
imul
jo
mov
retf
outs
ficom
stos
outs
or
cli
xchg
jnp
std
jns
push
mov
int3
jns
mov
push
stc
pop
movs
jle
js
add
jmp
fwait
jne
ins
mov
mov
(bad)
cmp
and
adc
out
adc
mov
or
push
push
fild
ret
sub
aad
cmp
lds
stos
test
pop
xchg
call
lds
mov
mov
xor
jg
js
mov
dec
lahf
ds
dec
push
pop
adc
test
bound
(bad)
(bad)
mov
nop
test
xor
icebp
in
iret
dec
repnz
(bad)
adc
ror
call
mov
aaa
cmps
mov
retf
mov
and
jmp
adc
xor
and
cmp
push
ret
jmp
pop
cwde
inc
jbe
in
sub
gs
out
js
sub
cmp
std
xor
jecxz
push
sub
lea
neg
pusha
sub
shl
hlt
sbb
fnstenv
sub
pop
and
sar
mov
mov
push
adc
hlt
stos
jne
xor
pop
lea
xchg
and
lahf
scas
xor
or
out
adc
cli
std
add
fldcw
sahf
movs
ds
(bad)
pop
mov
(bad)
js
push
pop
aas
and
xchg
sahf
jne
ds
push
mov
xor
jns
mov
push
jp
adc
popf
adc
jb
pop
mov
push
inc
pushf
out
inc
xlat
mov
sub
dec
fisttp
push
push
jecxz
out
addr16
imul
jo
stos
inc
add
in
push
dec
xchg
push
sbb
(bad)
int3
pop
mov
loopne
jmp
(bad)
cmp
stos
arpl
retf
mov
mov
xchg
inc
bound
adc
push
inc
dec
mov
mov
pop
(bad)
shl
mov
test
add
test
cmp
movs
jmp
daa
retf
sbb
loop
ss
cmp
dec
pop
cmps
pop
or
adc
lods
cli
popf
pusha
adc
daa
hlt
in
push
test
xchg
movs
(bad)
adc
dec
pop
dec
les
xor
lea
fidivr
(bad)
les
and
repnz
dec
mov
aas
sbb
arpl
into
sbb
ja
jb
pop
jno
aas
sub
cmp
bound
retf
outs
jmp
icebp
jmp
or
ds
call
sbb
sub
jge
mov
fmul
lods
movaps
retf
inc
fwait
add
enter
shl
or
outs
loop
adc
in
xchg
mov
imul
inc
pop
inc
shl
rol
push
test
or
js
scas
fyl2x
cmps
rol
jne
push
jp
pop
xchg
or
cmp
imul
pop
ins
sub
imul
stc
or
in
xor
add
dec
leave
mov
retf
in
mov
pop
leave
xor
outs
fdiv
outs
loopne
shr
sbb
or
sti
sub
pushf
fisttp
ror
jmp
into
gs
outs
scas
loopne
mov
push
(bad)
inc
inc
pop
retf
in
cmp
(bad)
mov
push
cmp
dec
xchg
sub
adc
mov
ins
fadd
es
sub
cmp
sub
mov
popf
jae
(bad)
imul
xor
add
jge
enter
add
xchg
aaa
adc
fwait
sbb
iret
mov
mov
movs
xor
jne
sub
jle
push
pop
mov
vcvttsd2si
gs
test
sub
ret
into
sbb
pop
rcl
add
int3
add
std
sar
adc
pop
push
cmp
lods
mov
movs
fsub
fcomp
dec
and
out
ja
inc
lahf
scas
jl
pop
shr
or
sub
pop
gs
je
dec
fnstsw
daa
mul
(bad)
stc
les
fs
or
ss
or
sub
movs
cli
iret
pop
outs
mov
add
(bad)
push
add
das
sub
pop
loope
daa
mov
lods
(bad)
ffreep
outs
cmc
push
xchg
pop
jle
fs
push
cdq
das
in
mov
enter
mov
ja
aas
push
xor
jmp
mov
cmp
dec
add
stos
mov
add
fs
mov
mov
mov
call
fs
jmp
hlt
popf
push
inc
xchg
lods
mov
ret
push
pop
ss
cmp
js
mov
jbe
pop
bound
dec
push
sbb
daa
pusha
dec
scas
xchg
shr
sbb
in
xchg
and
pop
ja
mov
or
mov
xchg
push
ja
and
dec
pop
stos
(bad)
iret
add
add
pop
xchg
xchg
jg
adc
ins
(bad)
jns
movs
mov
inc
and
cmps
push
cdq
add
mov
jl
jg
and
sbb
pop
jbe
adc
mov
repnz
cmp
popa
nop
jecxz
clc
shr
jae
(bad)
dec
cdq
lds
inc
sbb
stos
dec
(bad)
mov
sub
dec
add
pop
sbb
out
jnp
lea
add
cmp
dec
jge
fwait
imul
fadd
lahf
call
or
jnp
xchg
mov
sub
dec
sbb
sahf
sub
ds
ins
sbb
fbstp
gs
ss
xchg
in
loope
mov
cmp
retf
push
aaa
cmps
adc
mov
lahf
mov
push
mov
or
inc
xchg
and
jns
in
cmps
(bad)
mov
ja
std
mov
sub
xor
mov
add
ret
fs
xor
mov
fbstp
sub
out
test
movs
mul
adc
(bad)
js
pop
pop
daa
dec
ret
imul
sbb
or
out
in
push
push
(bad)
mov
pop
jb
sar
call
push
ror
and
lods
(bad)
sbb
sub
mov
pop
and
add
push
dec
loop
sbb
cmp
lods
jns
fs
std
pop
inc
jnp
push
and
mov
bound
or
pop
mov
call
ret
add
or
pop
fist
(bad)
sub
or
ret
xor
es
xchg
xor
loop
gs
outs
xchg
ins
cwde
(bad)
fstp
fstp
out
data16
cmp
push
cmp
xchg
mov
push
repnz
mov
sub
arpl
cmp
pop
xor
pop
pushf
xor
scas
call
pusha
mov
(bad)
sti
adc
jae
pop
adc
cmc
outs
rcl
pop
sub
rcl
mul
dec
add
(bad)
out
xor
arpl
in
push
adc
pop
bnd
xor
enter
mov
xor
(bad)
(bad)
sbb
iret
scas
jb
retf
xchg
pushf
fidiv
movs
ds
jecxz
jae
popa
adc
call
push
mov
loop
add
pop
stos
jge
test
sbb
jl
adc
mov
popf
sbb
mov
lods
gs
xchg
(bad)
jp
add
lods
addr16
jg
xor
shl
arpl
sti
test
(bad)
sti
es
adc
in
xor
inc
loop
lods
xor
dec
out
mov
inc
mov
push
(bad)
jmp
jge
and
call
push
mov
xchg
push
out
adc
add
retf
dec
cmp
mov
mov
in
xor
sub
out
jno
(bad)
dec
ds
sub
and
xchg
retf
dec
add
stc
cmp
push
not
in
jmp
outs
sbb
ss
push
ja
xor
mov
ret
adc
daa
sbb
or
cmp
sbb
nop
jecxz
stos
xor
into
or
xchg
push
cmp
sbb
scas
(bad)
mov
retf
sbb
out
mov
ss
mov
add
call
sbb
mov
or
sub
sub
inc
jnp
std
mov
xchg
sbb
xor
cmps
fidivr
mov
jb
mov
ret
cmp
mov
adc
in
add
adc
mov
cmps
jge
pusha
stos
push
in
inc
push
cmp
xchg
(bad)
call
outs
(bad)
mov
or
jae
jb
sbb
cmc
or
std
push
push
jmp
jmp
mov
pop
push
fsub
or
adc
jno
jnp
(bad)
xor
jnp
jmp
jb
add
mov
idiv
test
mov
aam
out
xor
jl
ins
inc
(bad)
pop
iret
adc
in
pushf
push
add
test
fld
dec
les
out
aad
cmc
push
les
xlat
cwde
ret
mov
fidiv
into
mov
call
jle
fisttp
fwait
dec
fmul
data16
gs
push
xchg
jb
mov
xor
mov
pusha
aam
add
(bad)
push
inc
jnp
div
fcomi
(bad)
call
fs
push
jmp
mov
test
cmp
and
xchg
dec
xlat
xor
xchg
jo
test
and
repz
in
ficomp
or
shl
out
push
rol
stc
xor
stc
test
mov
aam
pop
xchg
daa
xchg
in
xor
inc
sub
xor
outs
cld
and
lea
ins
jl
leave
push
xor
(bad)
and
pop
mov
add
stos
loope
imul
fisttp
ds
int
cmps
stos
retf
add
and
xchg
adc
int
cwde
fsubr
mov
int
sub
sbb
push
aad
adc
aaa
jg
jb
mov
mov
mov
call
clc
dec
sbb
xchg
fadd
xor
cmp
adc
call
dec
xor
xchg
aaa
cwde
lds
les
imul
and
rcl
xor
pop
mov
in
(bad)
loope
dec
xchg
and
cdq
mov
cmp
jnp
cmp
ss
test
dec
sub
push
ficom
ret
mov
pop
repnz
or
mov
loopne
sbb
xor
or
jmp
mov
mov
adc
adc
sbb
or
int
adc
std
push
(bad)
das
mov
int3
push
pusha
cmp
push
lahf
cmp
inc
loopne
retf
xor
jo
mov
stos
pop
imul
xor
pop
imul
xchg
in
icebp
movs
mov
sbb
fwait
enter
out
cmp
dec
dec
test
dec
mov
fisttp
ins
xchg
cmp
js
xor
aam
js
cmps
mov
inc
push
add
mov
mov
cs
mov
push
push
mov
movs
sub
hlt
int3
int3
js
frndint
jae
mov
dec
fcmovnbe
dec
mov
sbb
xor
sbb
bound
and
jae
sub
stc
jne
stc
pop
mov
scas
repnz
pusha
test
lea
mov
push
push
loope
or
cdq
int
sbb
loop
pop
mov
or
and
loope
xchg
fidivr
ins
dec
aad
sub
mov
push
imul
call
cmp
and
pop
mov
data16
ss
(bad)
jmp
out
xor
rcl
mov
retf
jne
jo
and
jge
js
jns
jmp
shl
sub
pusha
jmp
popf
jg
retf
push
aam
pop
aad
cmp
xchg
jno
mov
cmp
sbb
in
push
div
retf
fsub
movs
push
movs
fbstp
shr
imul
pushf
sub
jnp
or
fs
mov
xchg
sub
jbe
pop
dec
not
sbb
add
sti
fdivr
movs
inc
(bad)
sti
sub
and
jl
test
cmp
push
add
or
lea
lds
div
jg
aad
sub
imul
ds
aad
xchg
pop
loop
add
cmps
fld
(bad)
dec
or
xchg
mov
rcl
xchg
xchg
and
movmskps
movs
adc
jae
cmp
sbb
or
les
push
call
test
push
fisub
mov
xchg
test
scas
jnp
test
add
in
std
fisub
jb
push
jg
mov
lods
dec
cld
aad
cs
jo
int3
push
enter
dec
dec
ret
mov
les
mov
pop
jb
cmp
lds
call
add
addr16
push
lds
sti
and
icebp
lds
pusha
jecxz
add
dec
mov
adc
sbb
jl
jae
jle
jae
das
and
push
jmp
push
les
cld
xchg
out
mov
clc
pusha
adc
cmc
rol
jle
inc
lea
inc
repnz
out
cli
in
push
repnz
cmp
cmps
imul
xchg
sub
push
pop
(bad)
int
loope
adc
outs
mov
push
or
adc
dec
lods
inc
sub
call
mov
sbb
mov
addr16
aas
sahf
push
mov
mov
pushf
xor
shl
js
popa
mov
lock
scas
sub
pop
enter
pop
or
jg
pop
adc
xor
out
leave
ret
xchg
aad
test
or
retf
leave
pop
jbe
ja
xor
fisttp
out
cwde
pusha
mov
dec
mov
pop
addr16
call
sub
jno
ins
in
jmp
retf
loop
sub
scas
sbb
call
mov
mov
push
pop
pop
(bad)
sbb
aas
cmps
xor
pcmpeqd
mov
fwait
mov
xchg
enter
sub
push
or
sbb
je
inc
(bad)
push
fdiv
cwde
movs
int3
cmc
and
leave
pop
inc
fwait
adc
jne
push
push
loop
lods
ja
cmp
int
cmp
adc
sub
jns
sbb
mov
cmp
cmp
xchg
aam
and
test
ins
ror
movs
test
mov
sbb
or
lea
jb
fs
sub
loopne
mov
pop
jp
cmp
dec
(bad)
sbb
repnz
test
add
(bad)
dec
test
test
int3
xchg
pop
mov
xor
ins
sub
mov
push
xlat
aaa
sub
mov
sti
loope
stc
in
sar
xchg
and
adc
sbb
push
or
or
bound
repz
ret
stc
dec
xlat
add
scas
mov
paddsw
xchg
push
imul
int
sub
icebp
outs
nop
push
aas
or
add
movs
enter
(bad)
(bad)
setb
inc
clc
imul
and
pop
jl
or
jo
test
pop
mov
mov
aad
ds
imul
xor
cmp
(bad)
out
in
xor
sbb
in
cmp
pop
or
pusha
es
(bad)
mov
and
ret
mov
and
push
out
jl
je
mov
inc
xchg
inc
adc
movs
and
or
mov
xchg
jo
retf
pop
sbb
and
out
hlt
push
push
imul
dec
pop
call
ds
and
aaa
sahf
addr16
mov
xchg
pop
xor
sbb
test
mov
adc
mov
bound
rcl
enter
mov
int3
cs
mov
push
mov
xchg
mov
mov
outs
ins
pop
scas
nop
fisub
lahf
sbb
loop
hlt
xchg
mov
lock
sub
cmps
fistp
inc
mov
sub
cmc
std
adc
adc
sub
test
cmp
jbe
(bad)
scas
mov
push
adc
fnstsw
aam
push
in
cmp
jae
mov
pop
jecxz
xor
pop
popa
push
push
inc
repz
stc
test
dec
add
or
sbb
pop
pop
cmps
mov
push
aas
int3
adc
icebp
mov
xor
shr
(bad)
mov
lea
sti
sub
cmps
in
test
lea
mov
mov
xchg
mov
cld
(bad)
jge
enter
inc
fdivr
out
ret
mov
xchg
mov
sub
std
arpl
repz
sub
mov
cs
dec
imul
jge
mov
out
push
push
dec
fnstenv
lds
pusha
pop
out
xchg
hlt
lahf
repz
fmul
push
sbb
and
pop
sub
fs
out
pop
das
mov
cdq
int
std
std
sar
repz
mov
xor
sbb
adc
xor
sar
mov
add
jmp
and
cmp
lods
f2xm1
adc
iret
imul
xchg
imul
call
test
jmp
lock
push
jl
jb
push
enter
or
add
popa
pop
xor
shr
cmps
(bad)
outs
nop
sbb
and
scas
es
cs
lock
ja
imul
lock
cmps
pusha
shr
(bad)
push
in
dec
stos
pop
ins
sbb
mov
sub
call
cs
add
inc
mov
in
adc
jo
and
push
fcomip
sbb
jo
icebp
dec
call
div
neg
bound
push
je
cs
push
cmp
jne
hlt
repz
loope
or
inc
rcl
jb
call
adc
sahf
sbb
fisttp
jle
push
add
fs
mov
(bad)
fsin
xor
movs
cs
sbb
xchg
inc
adc
retf
or
dec
std
stc
inc
mov
add
psubsb
das
adc
jl
and
icebp
ins
sti
ds
popf
test
mov
popf
jmp
mov
xchg
push
mov
retf
inc
ret
cmp
shl
dec
test
fwait
push
out
ins
pop
popa
enter
mov
xor
sub
sbb
out
stos
je
and
retf
fcomp
cmp
sahf
mov
push
mov
lods
in
inc
lds
aad
xor
xor
adc
int
or
xchg
rol
test
mov
dec
test
in
gs
pop
push
popf
shr
mov
jne
sar
(bad)
inc
retf
repnz
aas
addr16
sbb
in
or
push
mov
(bad)
dec
movntq
out
sbb
push
add
cmps
cmp
dec
inc
jbe
retf
in
cli
rcr
in
mov
adc
xchg
leave
jb
outs
push
sub
add
mov
int3
dec
inc
add
(bad)
cmp
retf
sub
sub
(bad)
ret
sub
add
cld
fisttp
cmp
mov
cmp
mov
sahf
rol
inc
add
gs
and
mov
mov
js
cdq
xchg
xchg
retf
std
repz
imul
jo
xchg
inc
cld
je
dec
add
mov
fimul
test
push
js
imul
jb
jmp
cmps
mov
pop
lods
fiadd
in
pop
sub
or
sub
(bad)
sub
inc
mov
jbe
test
aaa
dec
mov
xchg
push
push
inc
dec
pop
test
xor
mov
add
in
aaa
sub
(bad)
into
lock
add
or
div
popf
stc
mov
aad
add
rol
and
sub
movs
jbe
fwait
xor
mov
add
dec
jae
add
out
(bad)
in
ss
cmp
and
rol
sub
or
inc
popf
add
cmps
out
xor
(bad)
test
cmp
inc
jbe
sbb
xchg
imul
das
iret
stos
push
add
xor
es
mov
jbe
jno
(bad)
sub
sub
sub
retf
pop
std
cmp
xchg
fdivr
dec
or
pop
cmps
fcomp
enter
xchg
and
xchg
shr
retf
xchg
mov
inc
or
inc
dec
ins
xchg
cmp
jmp
xchg
push
or
cmp
mov
dec
mov
fisub
pop
xchg
cmp
aas
or
inc
aad
stos
dec
(bad)
repnz
scas
shr
mov
dec
cmc
sub
test
or
xor
in
or
ror
(bad)
add
es
xchg
dec
pusha
push
mov
pop
or
xchg
adc
repz
xchg
pop
into
mov
shl
mov
push
fwait
or
stos
(bad)
std
sub
test
in
dec
les
mov
mov
mov
aas
bound
push
add
lods
or
mov
jae
shl
mov
aaa
jp
repnz
add
in
imul
pop
ret
int
xor
mov
dec
(bad)
mov
sub
pusha
aad
jge
stc
xchg
push
cmp
mov
lods
jge
fisttp
loop
cmp
pop
cwde
fs
std
fcomp
popa
or
in
sbb
loopne
and
push
retf
aad
pop
push
push
cli
loop
xchg
add
add
add
ins
cmp
dec
shl
sub
pop
test
push
push
push
and
fiadd
push
sets
mov
enter
popf
sub
and
dec
push
pop
sub
aas
mov
adc
pop
jecxz
xchg
or
shr
dec
xor
stos
jno
mov
dec
pop
fsub
je
popf
pop
adc
cdq
cmps
inc
inc
xchg
mov
pop
add
sbb
xchg
pop
dec
loop
mov
xor
call
mov
push
es
int
inc
inc
adc
sar
into
cli
sub
mov
ret
sysexit
loope
leave
loopne
sub
pop
inc
jo
dec
loopne
sbb
pop
mov
add
push
ret
movs
jmp
or
push
arpl
jns
push
xchg
std
outs
pop
mov
or
mov
sti
mov
iret
pop
or
test
xchg
adc
push
dec
sub
jmp
push
pop
ins
ror
cmp
mov
mov
std
push
sub
sti
push
retf
xor
stos
in
sbb
fwait
dec
aaa
sub
xchg
sar
mov
es
(bad)
test
ins
out
shl
xor
fmul
mov
test
dec
ficomp
mov
pushf
or
adc
repz
loope
repnz
xchg
loop
ret
pop
mov
sbb
cmp
out
dec
dec
ret
pop
icebp
push
and
call
(bad)
mov
add
adc
jne
lds
xchg
fisttp
dec
ror
cmp
inc
dec
dec
add
rcl
imul
scas
cmps
dec
add
fstp
push
inc
dec
add
lods
push
fxch
adc
adc
inc
sbb
xor
adc
es
jno
test
adc
inc
add
icebp
call
sub
xor
add
xlat
out
push
jmp
out
push
xchg
call
in
fstp
call
xor
mov
fcomp
cmp
cli
jnp
out
div
pop
jne
arpl
pusha
mov
jge
sbb
or
dec
aam
xor
sbb
xchg
xchg
ss
push
or
inc
sar
and
(bad)
je
(bad)
xor
rcl
test
mov
push
daa
inc
push
stc
std
or
dec
mov
dec
pop
xchg
int
mov
xchg
mov
imul
xlat
mov
rcl
mov
rcr
dec
add
(bad)
(bad)
cmp
mov
icebp
vmaskmovdqu
leave
neg
leave
mov
retf
mov
pop
inc
popf
sahf
jae
inc
pop
mov
xchg
out
les
mov
inc
xlat
ss
shr
test
and
call
pop
lods
mov
dec
js
pop
cmp
add
pop
inc
icebp
ss
test
out
sub
test
pop
dec
daa
pop
adc
sar
fmul
jl
fmul
mov
pop
or
loopne
in
mov
fst
mov
mov
mov
lea
sbb
(bad)
imul
pop
dec
pop
inc
addr16
je
scas
sub
hlt
cmps
mov
imul
mov
xchg
mov
jns
mov
sbb
icebp
popa
mov
stos
sub
xchg
pop
add
mov
cmc
mov
xchg
mov
sti
xchg
sbb
sbb
test
mov
fwait
cmp
push
call
push
imul
imul
push
std
(bad)
enter
jb
fld
stc
shl
pop
aaa
movs
aaa
dec
mov
dec
loop
shl
mov
shr
movs
cmp
popa
dec
addr16
cs
pop
mov
gs
rcr
ja
(bad)
loop
mov
inc
cmp
dec
sbb
test
sub
pushf
adc
sbb
test
xchg
test
mov
sbb
outs
sbb
cdq
shl
pop
dec
jle
pusha
dec
add
cmps
or
in
or
in
ret
jmp
jle
jno
cli
aam
mov
add
pop
mov
inc
or
out
push
out
sub
adc
mov
mov
test
hlt
int3
fidiv
test
or
into
test
jne
mov
jecxz
pop
push
les
sbb
jnp
cmc
sti
js
in
inc
cmps
jl
(bad)
jae
push
outs
hlt
cdq
pop
or
sbb
sbb
rdtsc
repnz
xchg
imul
imul
popf
imul
mov
movs
lods
test
push
pop
es
xor
fadd
xchg
ror
dec
lods
and
inc
add
pop
stos
fwait
sub
mul
jae
js
stos
movs
and
clc
xchg
ins
sub
fild
xchg
push
fcom
cmp
movs
pop
cs
pop
sbb
cmp
mov
xchg
jae
adc
sub
mov
pushf
xor
pop
out
mov
lahf
xor
jne
sbb
jo
mov
cmp
push
sbb
rol
fist
mov
push
adc
call
in
fld
cld
adc
xchg
out
inc
js
fidiv
and
test
mov
in
dec
nop
leave
ror
xor
sbb
in
dec
jg
(bad)
sbb
mov
shl
test
shl
retf
sub
(bad)
pop
outs
push
jp
sbb
out
fnstcw
jae
imul
xchg
cwde
bound
cmps
mov
xchg
jp
jl
das
xchg
jbe
inc
ss
pop
mov
pop
xor
cs
into
pusha
push
js
aad
shl
aam
scas
rol
movs
retf
cld
in
adc
jl
jb
adc
int3
mov
or
push
sub
je
cdq
jnp
and
sub
jb
fadd
adc
or
nop
sub
mov
add
gs
outs
fxtract
scas
test
fiadd
or
fcom
dec
out
add
jae
or
jno
sbb
test
(bad)
loope
sti
pop
pusha
add
scas
call
popa
aaa
jmp
dec
xchg
push
icebp
pop
xor
stos
mov
jg
into
pop
jno
test
imul
shl
aaa
jnp
fcmovbe
shl
dec
jmp
jbe
ret
retf
into
(bad)
jmp
fiadd
ret
xor
out
imul
mov
pop
fisttp
(bad)
push
jge
pop
push
(bad)
lods
and
mov
xor
data16
out
sub
pop
push
test
pop
inc
test
and
inc
jns
dec
xchg
fdivrp
mov
xor
xchg
in
dec
and
sbb
les
cmp
sbb
jecxz
push
not
or
pop
fidivr
pusha
addr16
mov
cli
push
loopne
xor
jno
pusha
jle
aas
bound
mov
pop
fucomi
aam
sub
stos
xchg
mov
cs
jne
sub
xchg
push
shr
pop
xchg
mov
push
jnp
clc
cmc
push
das
cmc
xchg
xor
outs
scas
movs
push
(bad)
dec
fwait
in
jae
stc
clc
daa
mov
pushf
les
rcl
mov
mov
retf
daa
test
xchg
xor
lock
(bad)
mov
adc
adc
sub
repnz
jo
in
(bad)
pop
cmps
sahf
into
inc
sbb
xor
or
inc
addr16
mov
ja
pop
and
es
add
test
add
and
jnp
neg
movs
xchg
enter
mov
fwait
jecxz
es
adc
ins
outs
xchg
sbb
mov
(bad)
inc
xor
in
mov
cmp
inc
mov
lods
mov
loope
xchg
push
inc
sti
or
in
test
pop
jmp
or
add
push
in
fisttp
pop
sahf
ret
or
push
das
adc
fisubr
fiadd
mov
push
fld
mov
jmp
mov
xor
out
ficom
cmp
adc
mov
pop
sub
call
test
out
add
push
(bad)
jns
lea
ins
inc
push
cmp
lea
sbb
cmp
mov
outs
test
dec
sbb
mov
sub
xor
loop
mov
jno
loop
outs
mov
pop
ret
xor
inc
push
xor
push
std
std
icebp
fmul
dec
dec
je
rcr
cdq
popa
jp
in
adc
popa
outs
sbb
jge
aad
xchg
mov
or
sub
sbb
into
fidivr
pop
inc
icebp
or
or
jl
cs
stc
das
loope
cmc
mov
in
push
push
les
xor
jae
in
sub
inc
loop
test
or
out
in
mov
dec
add
call
xchg
sbb
xor
imul
out
jns
xchg
pop
mov
xor
mov
push
adc
xor
movs
mov
test
ds
mov
push
aaa
sbb
inc
and
in
sbb
and
enter
dec
(bad)
in
xchg
ss
mov
sbb
jmp
js
add
or
adc
pop
jmp
adc
test
jno
cmps
out
sub
ins
dec
push
in
add
ficom
xchg
add
adc
sbb
sbb
mov
cmp
xchg
jae
xchg
fs
aaa
push
pop
lahf
dec
sbb
cs
scas
aaa
mov
inc
sub
bound
nop
ins
lock
add
hlt
xor
and
arpl
mov
dec
out
stc
iret
rcr
inc
dec
imul
mov
test
out
or
fnstsw
jne
dec
fwait
aam
les
xchg
fsub
ss
(bad)
pop
adc
sub
mov
jbe
ds
fwait
jo
aam
mul
ret
jmp
ret
cmp
cmc
aam
push
xor
or
sub
xchg
lods
push
loope
xchg
inc
and
fs
mov
iret
jmp
and
push
xchg
jnp
cmp
mov
push
adc
out
sub
xchg
adc
out
dec
(bad)
mov
sub
(bad)
pop
sbb
cdq
data16
or
and
xchg
not
data16
jns
mul
xchg
mov
aad
pop
dec
push
xor
lea
aam
or
out
pushf
into
lea
mov
iret
cmp
adc
mov
xchg
sbb
out
dec
cwde
mov
or
loopne
and
cmc
fcomp
test
sahf
lahf
jge
pop
xchg
scas
cld
inc
jmp
jp
rcr
ins
mov
icebp
jo
stos
jmp
dec
xchg
rcr
inc
lods
test
adc
cmc
xlat
iret
mov
mov
nop
add
pusha
sbb
in
fnstsw
std
lods
idiv
add
pusha
and
pop
hlt
(bad)
pushf
fdivr
jmp
add
out
pop
inc
adc
xchg
mov
aad
in
pop
int3
xchg
push
outs
movs
jne
mov
inc
adc
mov
inc
call
imul
cmp
cmps
lock
fnstsw
cmps
xor
jo
jne
add
jno
leave
or
rol
not
out
rcl
cmps
and
call
jb
ins
mov
sbb
fldln2
cmp
pushf
cs
repz
stc
repnz
sbb
(bad)
inc
cs
cmp
mov
call
mov
cmp
push
and
mov
out
psubw
(bad)
movs
sub
sar
movs
cmp
jge
mov
cmc
iret
push
in
fmul
and
jo
rol
mov
div
dec
jne
aad
adc
icebp
sbb
mov
cmc
lods
mov
(bad)
ins
nop
adc
in
test
inc
or
jne
cmovg
pop
pop
mov
pusha
ror
cmp
les
test
movs
cmps
push
cli
push
pop
mov
out
sbb
fsubr
ins
push
adc
bound
nop
sbb
test
jb
sbb
pop
mov
dec
fdivr
push
cs
dec
pop
cs
pop
mov
mov
and
inc
and
cmps
mov
test
inc
cmp
sahf
popa
jbe
addps
pop
dec
xchg
or
mul
inc
push
test
cmp
cmps
cmps
lock
dec
cli
pop
push
sub
shl
adc
stos
stc
ret
call
(bad)
int3
pop
xchg
pop
adc
dec
jmp
inc
or
mov
out
adc
cmp
mov
neg
cmps
rol
retf
jp
pop
adc
(bad)
mov
pusha
pop
cmp
dec
xchg
xor
popf
cmp
adc
mov
outs
sbb
xchg
push
mov
test
xor
sahf
inc
xor
push
or
ins
sbb
dec
jecxz
jmp
test
mov
cdq
call
cmps
dec
sti
jae
sub
push
push
cmp
xchg
mov
push
ds
cmp
outs
dec
ins
sbb
sbb
pop
mov
jmp
pop
mov
push
mov
mov
bound
mov
xchg
lahf
sub
loope
cmp
jne
mov
sbb
fcomp
out
sub
sub
hlt
xchg
dec
dec
(bad)
push
xor
cmps
(bad)
adc
push
push
or
push
adc
fdivr
movs
dec
or
xor
push
loopne
jae
imul
sub
dec
call
repz
push
mov
int
popf
lods
jbe
adc
popf
push
out
div
ja
mov
jbe
cmp
es
test
pushf
scas
and
in
mov
test
pop
addr16
sub
pop
push
pop
cld
add
dec
inc
cmp
lods
imul
mov
and
cmp
enter
or
jecxz
mov
mul
imul
sti
push
mov
push
pop
movs
out
mov
mov
mov
cld
xchg
out
pop
repnz
cld
xchg
or
ins
push
mov
pop
dec
movs
dec
adc
je
cmp
xor
(bad)
scas
xchg
inc
sbb
fstp
std
cmp
pop
and
dec
pop
in
adc
dec
movs
aam
repnz
jmp
jmp
cmp
adc
sbb
test
sbb
jbe
ds
push
cli
cmp
loop
or
jno
xor
enter
inc
shl
lods
lahf
mov
push
out
pop
fbstp
dec
lock
test
ins
adc
or
xchg
shl
ins
repnz
int3
mov
add
adc
mov
retf
or
cmp
je
jp
push
dec
out
sbb
sbb
pusha
call
push
sbb
rcr
or
ror
and
imul
push
sbb
rcr
jno
loope
inc
out
inc
or
sbb
fwait
dec
popa
scas
popf
stos
sbb
into
dec
ins
pop
cmps
loopne
mov
outs
in
sti
outs
pop
jle
mov
mov
fadd
mov
sub
mov
test
iret
xchg
sub
out
fiadd
(bad)
out
push
fdivr
mov
mov
clc
xchg
add
and
adc
into
and
sub
test
inc
xor
xor
ret
jl
scas
and
adc
sub
cmp
test
push
dec
lds
push
sub
cwde
sbb
push
sbb
mov
ja
xor
mov
xor
mov
out
and
lods
sub
sbb
in
inc
aaa
gs
scas
pop
mov
stos
(bad)
xchg
jmp
aaa
adc
mov
mov
je
cwde
add
scas
call
mov
stos
mov
js
adc
cli
and
xchg
les
clc
sub
dec
aam
jmp
sti
pusha
mov
cli
jge
push
call
int
mov
cmps
add
fstp
sub
nop
jecxz
adc
mov
or
cld
cmp
in
hlt
jecxz
aad
idiv
lahf
or
and
xchg
inc
xor
mov
scas
movs
outs
pop
test
push
add
inc
cld
ror
rol
xor
push
fwait
jns
add
sbb
sbb
inc
call
sub
pop
sbb
pop
cli
mov
in
mov
int3
int
fcomip
inc
mov
cmps
mov
clc
push
cmp
(bad)
popf
mov
js
pop
es
rcr
or
sub
and
(bad)
xchg
mov
mov
cmps
jbe
pop
mov
addr16
ja
dec
idiv
cdq
adc
aas
push
movs
retf
fcomp
add
lods
out
cmp
jecxz
xchg
gs
fcmovne
les
icebp
shr
add
push
sbb
cs
test
dec
in
jns
test
dec
jl
lods
in
pop
xor
idiv
adc
lods
mov
data16
fbstp
add
xor
call
int3
(bad)
mov
cmp
pop
add
call
xchg
add
dec
xor
in
add
(bad)
rcl
outs
xor
aas
jl
mov
xchg
sub
repz
sub
test
sub
loopne
jb
arpl
sub
(bad)
mov
shr
lds
loopne
mov
or
out
out
mov
leave
clc
and
aam
mov
sar
adc
das
push
fsub
dec
shl
add
sub
push
dec
mov
dec
(bad)
sbb
test
stos
sahf
imul
or
or
push
adc
lahf
ins
pop
inc
call
sub
in
ins
sbb
not
xor
or
or
mov
push
nop
cmp
xchg
push
xchg
into
test
int3
dec
ins
fiadd
daa
adc
ret
xchg
jns
inc
dec
adc
mov
sub
ins
test
dec
dec
jnp
in
aaa
xlat
mov
cwde
jl
xchg
push
push
jb
jmp
mov
imul
daa
jp
or
enter
lea
loope
jmp
push
mov
call
xor
jmp
adc
je
into
imul
sbb
xchg
mov
jg
mov
faddp
dec
or
mov
pop
ss
or
pop
xor
jmp
(bad)
jp
mov
nop
lds
pop
dec
js
mov
inc
mov
cmp
rol
add
(bad)
dec
clc
xchg
push
(bad)
or
lods
in
add
cmc
fbld
sbb
sub
mov
mov
push
sbb
inc
addr16
stos
cli
test
out
pushf
or
ret
fnsave
jmp
leave
or
xchg
loop
xor
or
dec
pop
ins
loop
pop
in
jmp
mov
repz
dec
xchg
(bad)
mov
loopne
sub
dec
or
out
(bad)
lods
popa
dec
daa
ret
pusha
mov
cli
ror
cmp
sbb
retf
out
push
jle
pop
jne
and
sub
lods
stos
xor
les
jb
lods
dec
jge
jmp
and
ss
popa
dec
inc
jns
test
mov
or
cmp
pop
push
gs
loopne
push
(bad)
cmp
scas
jbe
adc
jo
and
mov
fs
or
and
test
scas
dec
jae
loop
call
lock
mov
nop
(bad)
ins
or
loop
cwde
aas
and
aas
sbb
sti
daa
mov
or
cmp
(bad)
popa
jns
inc
cld
jge
movs
jecxz
hlt
dec
cwde
sub
and
call
adc
in
jle
dec
stos
popf
inc
pusha
cwde
cdq
sahf
shl
push
sub
out
stos
and
out
adc
pop
ret
mov
sub
jecxz
pop
sbb
xchg
sub
mov
jecxz
or
mov
rcl
pusha
push
push
nop
sub
and
stos
ins
add
rcl
sar
or
mov
and
dec
dec
inc
nop
push
mov
ja
xor
icebp
push
inc
test
cmp
mov
(bad)
and
mov
iret
out
or
pop
dec
test
inc
lds
mov
mov
cmp
or
out
xchg
mov
popf
rol
mov
scas
mov
mov
dec
adc
cdq
add
repnz
dec
push
scas
mov
mov
pop
mov
mov
adc
je
sub
mov
mov
mov
mov
lea
xchg
popf
xacquire
adc
mov
lea
inc
hlt
push
test
push
gs
gs
dec
sbb
push
cli
mov
add
daa
pusha
or
dec
cmp
cmp
mov
or
cld
sub
mov
icebp
xor
enter
shl
dec
inc
aaa
movs
mov
push
leave
fmul
add
mov
or
sbb
or
jmp
jg
inc
std
nop
xchg
mov
cs
sub
pop
outs
jns
ins
inc
shr
test
mov
adc
xor
xchg
je
fdivr
sub
es
jp
push
mov
adc
fiadd
mov
sub
jp
sub
inc
mov
push
popa
(bad)
loopne
xchg
js
(bad)
or
(bad)
adc
(bad)
imul
push
daa
xor
fild
jae
cmp
xchg
retf
not
(bad)
and
out
stos
inc
push
pop
mov
fsubr
call
mov
xchg
ja
mov
out
(bad)
mov
cs
pop
add
in
sbb
test
into
fst
adc
mov
inc
cmp
inc
lahf
or
dec
(bad)
call
mov
shl
cmp
(bad)
dec
adc
jmp
xor
sbb
rol
retf
ret
in
jle
lds
js
sub
outs
out
sub
repz
inc
push
sbb
pop
adc
(bad)
test
jp
mov
push
xchg
jl
iret
xor
in
xor
stos
popa
fs
gs
sub
les
imul
pop
push
jbe
add
mov
loope
stc
mov
ret
lods
nop
inc
pop
sbb
xor
scas
jmp
fsubr
stos
pop
mov
push
pushf
push
dec
pop
push
sub
xor
xor
jno
rol
dec
in
xor
adc
inc
cmp
jmp
and
mov
ja
stos
popa
xchg
icebp
les
mov
cmps
or
cmp
mov
sahf
xlat
and
out
scas
and
dec
aam
lahf
inc
(bad)
push
fbstp
nop
lahf
push
aaa
arpl
cmp
pop
call
fstp
dec
sbb
adc
add
jmp
(bad)
jecxz
jnp
jns
adc
mov
lds
je
aaa
rol
pop
mov
or
jno
out
ret
dec
test
fisub
(bad)
repz
or
(bad)
lods
or
add
shl
pop
jo
hlt
movs
or
in
xchg
mov
int
fucom
jb
push
mov
pushf
retf
out
pop
add
push
mov
jmp
xchg
stos
addr16
out
inc
cmps
neg
push
or
call
cmp
push
js
inc
mov
into
outs
jno
mov
push
leave
mov
call
push
and
pop
sbb
jo
adc
retf
cwde
sub
neg
pop
mov
inc
ins
cmp
push
xor
ds
or
adc
es
mov
fldcw
clc
or
add
cwde
jo
pusha
inc
sahf
mov
jmp
mov
ja
call
dec
and
jmp
or
aam
shr
adc
test
pusha
sbb
aam
sub
out
out
fadd
test
xor
leave
popf
movs
jnp
xor
popf
test
popa
adc
sub
adc
sub
and
lods
xlat
int
ss
cmp
rcr
addr16
dec
push
and
xchg
and
and
xor
mov
dec
jmp
jne
repnz
push
sbb
sahf
xchg
fidiv
fisttp
push
xor
test
out
dec
outs
mov
mov
cmc
movs
cli
and
add
in
sbb
dec
fucomp
pop
cmp
cmp
in
lds
not
inc
mov
or
int3
dec
jns
rcl
and
sbb
popf
popa
addr16
mov
cmp
lock
jmp
and
(bad)
repz
adc
dec
retf
or
aam
add
daa
out
inc
movs
and
cmp
cmc
das
lahf
mov
mov
jnp
push
sti
sub
add
mov
cld
cs
cmp
mov
dec
sbb
add
hlt
adc
fbld
push
pop
push
pop
cmp
test
jns
fadd
outs
and
addr16
push
dec
jmp
je
rcl
xchg
sbb
shl
rcr
sbb
adc
mov
dec
xchg
scas
ror
out
hlt
mov
jp
popf
ds
and
pushf
idiv
sahf
ss
and
icebp
sahf
ret
imul
sbb
out
cmps
lds
nop
fbstp
(bad)
adc
sub
mov
jecxz
or
sbb
cmp
test
inc
xchg
mov
(bad)
push
rcr
mov
stc
gs
mov
inc
test
sub
mov
ret
sub
mov
or
mov
xchg
dec
jp
sub
mov
(bad)
retf
push
jg
inc
aam
out
cs
nop
aaa
mov
icebp
pop
aam
imul
xchg
ins
mov
jnp
dec
movs
retf
inc
fistp
in
jmp
mov
pop
push
clc
mov
push
dec
out
ins
fs
out
fdivr
dec
xchg
neg
mov
push
mov
pop
jg
icebp
xchg
movs
movs
xor
adc
mov
adc
cmc
adc
sahf
jae
repnz
arpl
add
xchg
sbb
sub
mov
push
lods
jmp
dec
lahf
and
addr16
pop
stc
and
sar
loope
lods
sub
push
pop
and
inc
pop
je
adc
out
mov
push
cmp
scas
sar
xchg
mov
test
lods
add
mov
jae
popf
dec
sbb
dec
pop
cmp
test
test
adc
(bad)
and
push
adc
loope
ror
aaa
ret
mov
xchg
dec
call
mov
hlt
cld
push
mov
mov
shr
pop
add
stos
dec
mov
fiadd
xchg
rol
sbb
loope
popa
adc
mov
and
aam
gs
or
shl
xor
mov
xlat
shl
imul
pop
sub
jnp
jnp
fisub
jp
mov
into
and
push
stos
add
dec
sbb
aaa
or
pop
test
push
sbb
sbb
nop
ret
cmp
add
xchg
mov
pop
mov
mov
inc
inc
and
data16
mov
and
xchg
sbb
js
lahf
call
push
pop
or
jmp
add
inc
bound
out
mov
daa
sar
popf
cmp
or
add
xchg
or
and
jle
xor
jge
cmps
test
pop
pop
jns
lods
lds
inc
fiadd
jecxz
mov
stos
xchg
jae
bound
xchg
and
dec
popa
push
dec
and
jbe
cmp
adc
stos
or
jecxz
(bad)
mov
and
sbb
mov
mov
jecxz
test
(bad)
jl
(bad)
cmps
repz
(bad)
lock
sti
xor
stos
cmp
adc
inc
shl
mov
and
aad
inc
(bad)
dec
push
lods
xchg
adc
xor
(bad)
addr16
pop
inc
test
packuswb
pop
sub
jo
addr16
cli
fidiv
idiv
ficom
shr
xbegin
mov
xor
in
adc
sbb
xchg
cmp
popa
push
mov
dec
dec
mov
jecxz
xor
jge
and
in
add
inc
and
pop
cmps
dec
lds
fxch
je
retf
stc
push
adc
repz
xchg
loopne
movs
shl
pop
add
pushf
push
jbe
sbb
sub
xchg
getsec
xlat
loopne
aas
inc
and
and
jo
vrsqrtps
int3
nop
push
popf
mov
jae
(bad)
(bad)
adc
cmc
scas
push
mov
adc
mov
pop
(bad)
push
es
mov
das
(bad)
mov
int
daa
lds
adc
xlat
shl
stos
retf
xor
or
mov
and
push
mov
js
test
push
pop
mov
fist
pop
test
rol
fs
add
imul
mov
inc
enter
(bad)
sar
add
jae
(bad)
repnz
xchg
mov
(bad)
xchg
mov
adc
mov
aam
mov
cdq
outs
cmp
and
adc
mov
into
jmp
jb
mov
pop
test
popf
sub
push
retf
test
(bad)
or
mov
scas
sti
jecxz
(bad)
adc
jp
dec
repz
xchg
and
cmp
mov
add
dec
movs
or
xlat
mov
outs
ja
clc
stc
mov
idiv
cdq
(bad)
lock
shl
movs
loopne
mov
cmp
lea
push
data16
jmp
dec
jge
daa
icebp
xor
icebp
hlt
pop
jns
(bad)
xor
pop
sub
fst
outs
int
jb
les
loop
push
cld
add
pop
clc
xor
(bad)
call
aam
sbb
pop
aad
fisubr
or
(bad)
clc
enter
pop
fsub
pop
mov
ror
xor
mov
lods
nop
pop
or
cmps
fsubr
lods
cli
xchg
(bad)
out
or
mov
nop
(bad)
xchg
jmp
mov
fld
mov
movs
std
sbb
pusha
cmp
push
jp
fst
xchg
or
mov
sbb
not
jge
lahf
inc
arpl
sub
jmp
adc
push
cmp
add
in
and
pusha
fwait
mov
and
cwde
xor
in
jmp
scas
aam
js
mov
pop
add
(bad)
push
push
push
dec
cmp
xor
xchg
mov
cmp
gs
mov
arpl
cmp
pop
sahf
mov
push
fiadd
cmp
jg
rcl
scas
pop
mov
xchg
icebp
jge
test
cmps
push
cmc
push
pop
and
rcr
fs
mov
jmp
sub
cmp
push
fist
push
loopne
push
and
loop
sbb
iret
rcr
xor
ret
shl
cmp
xchg
dec
add
add
add
lods
mov
xor
xchg
pusha
jg
inc
(bad)
cmp
jne
mov
mov
or
stos
sub
(bad)
rcr
std
outs
call
pop
repz
adc
jns
sti
in
loop
leave
loope
push
sbb
shr
jo
popa
mov
popf
and
sbb
sbb
ret
dec
xchg
test
jp
shl
rol
sbb
mov
jmp
into
lds
adc
gs
outs
pop
mov
jne
jne
inc
out
pop
sbb
mov
mov
rol
dec
jne
adc
mov
gs
int
push
push
sbb
dec
sbb
push
stos
xor
inc
lods
mov
mov
ffreep
mov
push
lea
test
mul
cmp
inc
ins
fstp
fcmovnbe
push
popf
or
ror
sti
push
outs
loope
xchg
daa
int3
mov
lea
cli
jge
mov
shl
clc
jb
sahf
sub
scas
push
fidiv
out
cli
(bad)
mov
ficom
aas
push
mov
shl
aas
mov
inc
and
scas
mov
aam
jle
retf
mov
add
xchg
jge
out
mov
mov
cdq
cmp
pop
add
push
or
mov
mov
inc
inc
fisubr
xchg
neg
pop
mov
cmps
jmp
call
push
scas
jno
push
inc
push
and
test
sub
add
cmp
push
push
add
inc
jae
mov
stc
repz
or
popf
or
out
mov
mov
outs
pop
mov
or
gs
movs
call
jae
outs
jmp
aam
jmp
inc
sti
inc
clc
xor
repz
sub
sbb
sub
or
mov
inc
jle
daa
movs
jmp
sbb
lea
leave
movs
jb
jecxz
outs
push
push
pop
jg
mov
imul
psubusw
sahf
cdq
dec
fs
inc
xor
ins
jmp
stos
sbb
div
jo
sbb
mov
push
xchg
dec
sbb
das
push
fbstp
pusha
sub
mov
jmp
in
mov
xchg
loop
sahf
xadd
push
fnsave
add
mov
and
in
sbb
or
call
into
mov
rcr
fimul
movs
inc
push
and
dec
ret
test
push
xchg
rcl
neg
fnstenv
lds
(bad)
mov
sar
dec
and
outs
xchg
xchg
faddp
push
aad
and
and
lea
mov
push
pushf
push
jecxz
rol
ds
out
pusha
fist
(bad)
or
mov
in
repz
pop
inc
mov
push
or
popa
mov
(bad)
popf
(bad)
repnz
cld
loopne
xchg
stc
mov
lods
loope
fmul
sbb
add
push
cmp
sar
cmp
shl
inc
push
dec
neg
or
retf
jle
and
cvtpi2ps
mov
push
mov
or
adc
sub
sbb
add
rcl
cs
test
(bad)
out
pop
pop
inc
xchg
push
xchg
shl
shl
xchg
inc
xor
mov
iret
add
sub
sbb
adc
push
(bad)
sti
push
adc
pop
xor
and
jne
sub
xchg
cmp
aaa
push
retf
sti
int3
lock
sar
pop
add
mov
push
and
js
and
pushf
xor
scas
inc
int3
push
in
cwde
fidivr
adc
movs
int
adc
popa
scas
fidiv
jmp
or
clc
mov
push
popa
pop
mov
cmps
ins
cmp
push
sbb
addr16
xchg
rcr
mov
cmc
imul
dec
mov
dec
adc
mov
mov
push
dec
jb
add
push
call
sahf
xchg
cmp
cld
mov
cmp
sbb
rcr
dec
and
jecxz
or
push
or
inc
mov
or
(bad)
pop
jge
sbb
add
shl
xor
jns
mov
add
gs
shr
jecxz
test
pop
in
loope
cld
ret
imul
daa
cmc
pop
pop
movs
retf
pop
sub
dec
pop
scas
cmp
mov
inc
mov
mov
bound
shl
mov
(bad)
fisub
les
popa
pop
not
into
jg
cmp
xor
in
mov
pop
test
arpl
das
addr16
mov
xor
or
mov
and
xchg
idiv
or
test
imul
cli
mov
nop
(bad)
lods
cwde
and
retf
xor
push
fisub
jae
dec
push
adc
cmp
mov
aaa
inc
rcl
iret
mov
adc
imul
or
dec
inc
ja
stc
movs
(bad)
sti
jl
and
mov
xchg
arpl
neg
mov
cmc
retf
mov
mov
or
jne
and
push
das
and
retf
shl
mov
jle
add
mov
rol
mov
adc
fld
imul
mov
gs
add
ss
jecxz
cmp
ds
mov
mov
fist
lahf
js
dec
mov
in
ins
fisub
stos
xor
jp
stc
popa
es
out
xchg
xor
leave
dec
add
xchg
call
scas
movs
dec
lods
push
xchg
arpl
std
pop
dec
leave
xor
xchg
push
add
and
sbb
(bad)
jecxz
cld
fcom
ss
cwde
enter
xor
mov
test
mov
ins
jae
push
sub
pop
sub
add
mov
adc
std
push
jmp
sti
fucom
rol
xchg
shl
gs
popf
sti
lahf
jmp
es
hlt
mov
scas
pop
cli
retf
push
pop
imul
add
fisttp
xchg
add
jge
add
stos
mov
or
mov
sbb
ficom
aas
dec
sbb
jno
mov
outs
mov
sbb
xlat
jg
in
jle
and
xor
(bad)
aam
or
lods
xor
xlat
loop
pop
inc
mov
xchg
in
enter
push
in
(bad)
jns
xchg
test
sub
aas
(bad)
int
lahf
xor
je
push
jns
mov
cwde
(bad)
jne
pop
movs
les
mov
lock
cmps
adc
adc
div
(bad)
lahf
pop
neg
inc
inc
mov
fidivr
repnz
jo
mov
push
cmp
leave
test
or
mov
and
stc
into
push
push
arpl
push
mov
test
push
jecxz
jnp
sub
mov
rol
fs
cdq
pop
sbb
popf
and
mov
dec
addr16
neg
lea
jae
clc
je
mov
in
rcl
out
mov
(bad)
and
mov
hlt
push
sbb
jp
xor
mov
dec
and
xacquire
lahf
xor
out
cwde
pop
das
and
pop
inc
int3
fld
cli
dec
in
mov
mov
test
sub
mov
inc
movs
pusha
cmp
mov
push
mov
xchg
and
aas
pushf
sub
test
mov
loopne
or
cmp
xchg
popa
mov
cmps
xor
scas
rol
in
push
and
push
xchg
cmps
dec
push
pop
ret
imul
out
call
shr
lods
xor
push
enter
dec
(bad)
scas
add
daa
std
jmp
sbb
cmps
sbb
fisttp
movs
adc
sbb
cmp
add
mov
add
popa
pop
pop
in
pop
mov
test
adc
out
arpl
das
ror
mov
xchg
jbe
(bad)
fcmovu
dec
ja
dec
pop
jnp
cmps
sahf
jge
fisubr
inc
imul
mov
cmc
je
mul
sub
cmp
in
jbe
mov
jecxz
sub
mov
xchg
cmp
cmp
mov
test
arpl
call
aaa
or
jle
pop
mov
pop
pusha
xor
sub
xor
add
ds
fisub
movs
push
sub
ficomp
jp
sub
pop
mov
inc
xor
lahf
inc
jecxz
test
xchg
jle
jb
aas
and
popf
dec
mov
in
shl
aaa
mov
dec
addr16
mov
jp
or
mov
fwait
jmp
shl
scas
shl
(bad)
repz
add
jge
cmp
aad
pop
adc
pop
xchg
jl
mov
stos
into
cs
dec
stc
mov
gs
sub
push
pusha
aam
shl
inc
push
jp
pop
mov
and
push
jbe
out
stos
pop
push
and
mov
out
cmps
mov
jbe
fcmovnu
mov
mov
pop
add
sub
ins
jb
push
ds
jo
jb
mov
pop
in
jb
fmul
stos
paddq
mov
or
mov
jno
xchg
fnstcw
cdq
and
xor
mov
mov
pop
xchg
imul
fs
rol
sbb
sti
dec
push
dec
mov
pushf
jnp
xor
xlat
mov
mov
mov
rcl
aaa
push
movs
mov
cs
xchg
repnz
dec
xchg
(bad)
pop
xor
push
mov
mov
mov
loope
and
mov
mov
bound
in
and
(bad)
hlt
cmp
push
leave
loopne
cmp
(bad)
and
pop
repz
lea
dec
pop
ja
stos
ins
and
dec
movs
and
jge
adc
not
dec
mov
inc
or
mov
(bad)
clc
pop
push
fimul
ret
lahf
xor
fisub
icebp
cld
push
mov
jne
mov
popf
and
cmp
aaa
in
xor
fs
mov
call
xor
out
jle
movs
xor
mov
pop
popf
call
pop
xchg
add
sahf
popa
dec
fwait
or
scas
push
test
mov
cld
mov
daa
ins
dec
sahf
test
jmp
leave
popf
jmp
push
pop
and
xor
adc
jns
outs
lds
xchg
je
gs
sbb
ins
mov
push
not
cwde
xlat
dec
loope
xlat
cs
(bad)
pop
mov
ret
jne
mov
dec
and
mov
jnp
push
jnp
fidivr
cmp
mov
jnp
dec
aas
scas
test
loopne
inc
fsub
push
mov
mov
mov
jne
adc
adc
(bad)
dec
pop
scas
in
stc
or
and
cli
mov
inc
test
fucom
popa
lock
imul
xlat
and
cmps
test
test
leave
dec
test
ins
ja
or
add
adc
sub
ret
sbb
cmp
shl
and
mov
sbb
sar
sub
popf
hlt
std
and
mov
cmp
or
fild
mov
mov
fndisi(8087
fdiv
sub
xor
inc
es
lahf
add
fldenv
rcl
out
(bad)
and
pop
lahf
dec
add
sub
add
mov
dec
mov
jne
inc
es
pusha
and
std
or
push
mov
or
push
mov
pop
aas
cmp
ins
lods
(bad)
mov
pop
test
push
or
fnstenv
cmp
mov
push
mov
cmps
je
push
repnz
mov
add
fidiv
cmp
mov
adc
(bad)
xchg
xchg
test
push
das
push
push
lods
dec
outs
test
sbb
call
xlat
inc
cmp
add
test
xchg
lock
repnz
pop
js
jb
daa
push
test
(bad)
sub
hlt
dec
add
pop
sub
adc
xor
mov
cmps
or
imul
inc
mov
stos
(bad)
jge
ret
cmps
repz
mov
out
inc
jmp
aas
cdq
inc
xchg
call
push
sbb
es
outs
xor
mov
jo
cli
mov
gs
push
sbb
fisttp
fsubr
add
jl
ret
jnp
xchg
fdiv
lods
retf
add
jge
or
inc
test
imul
cli
sbb
imul
jg
pushfw
mov
mov
loope
mov
cmp
inc
xchg
push
sbb
mov
daa
mov
or
cs
pop
xor
adc
adc
sbb
dec
sbb
mov
jmp
mov
jle
pop
and
call
rol
out
ret
(bad)
xor
retf
cmps
xchg
arpl
leave
hlt
sbb
ss
dec
inc
in
sbb
xchg
pop
mov
stos
dec
push
(bad)
sub
cmp
mov
dec
dec
adc
mov
and
je
jns
aam
xchg
nop
jmp
jle
aaa
cs
leave
clc
or
(bad)
dec
add
xor
jns
xor
(bad)
mov
out
int3
aas
dec
sub
ror
sbb
dec
movs
jno
xor
pop
mov
aam
jge
mov
popf
cmp
and
mov
push
jecxz
xor
loop
inc
mov
lods
in
mov
dec
fld
popa
adc
aam
mov
xchg
dec
stos
in
or
cmp
addr16
add
sbb
push
(bad)
mov
cmp
adc
lock
sbb
mov
outs
mov
icebp
in
stos
fwait
scas
rcl
jmp
enter
cmp
inc
out
mov
adc
ins
dec
nop
and
popa
call
xchg
xlat
mov
mov
pop
iret
stos
cmc
dec
cmp
ror
jb
rol
lods
cmp
push
jle
js
(bad)
dec
xchg
xchg
dec
hlt
sub
(bad)
sub
mov
sub
(bad)
mov
ror
adc
adc
xchg
out
xor
addr16
jecxz
push
mov
dec
movs
cld
mov
add
mov
bound
(bad)
sti
not
das
xor
inc
movs
mov
add
pop
pop
imul
mov
sbb
pop
movs
sub
cmp
neg
fst
jge
jmp
fcomp
add
xchg
(bad)
mov
inc
mov
xchg
dec
lods
fldcw
call
cmps
pop
scas
push
sub
not
or
jecxz
lods
(bad)
sti
pop
and
jecxz
pop
ret
lods
clc
mov
jb
call
add
(bad)
ret
(bad)
ds
cmps
add
cmp
ja
adc
arpl
arpl
nop
mov
xor
or
mov
mov
mov
sub
and
gs
in
jno
inc
jecxz
test
imul
xchg
retf
retf
add
ja
xchg
jl
or
outs
and
bound
and
mov
scas
aaa
dec
aam
mul
pop
retf
inc
inc
sbb
sub
sbb
push
es
adc
pop
cmp
mov
retf
test
xor
enter
call
repz
pop
daa
(bad)
out
dec
mov
aaa
repz
mov
cwde
(bad)
and
sbb
jecxz
ss
repnz
mov
clc
fist
scas
test
aam
xor
retf
hlt
dec
pop
cmp
cmp
or
sub
xchg
stos
mov
popa
jne
push
sbb
dec
cli
xchg
inc
add
or
adc
sbb
loope
add
movs
jge
xor
int
mov
xchg
mov
sahf
adc
inc
inc
cmp
fs
inc
out
sub
xchg
test
push
push
outs
mov
sbb
xchg
mov
jae
imul
sub
shl
ds
mov
call
int
push
push
xchg
mov
push
push
cmps
(bad)
in
shl
icebp
inc
loopne
aas
add
push
add
fmul
xchg
lods
jae
rol
les
rol
jnp
mov
mov
sub
popa
jmp
pop
call
push
(bad)
adc
repnz
test
lods
clc
out
fcomp
and
and
and
aam
retf
fs
jmp
bnd
adc
push
daa
sub
aad
in
out
jecxz
jecxz
ror
xor
pop
popf
lea
or
jbe
mov
nop
sbb
jg
or
xor
mov
push
dec
test
cmps
iret
jmp
push
imul
xor
stos
shr
in
pop
std
scas
pop
sub
mov
dec
in
push
mov
sub
cdq
les
out
xor
xchg
retf
or
sub
jle
psrld
in
inc
sub
jb
pop
jmp
and
repnz
and
mov
call
sub
jg
into
dec
or
dec
fwait
sbb
jecxz
adc
mov
sbb
adc
pop
enter
icebp
fdivr
sbb
mov
inc
and
sub
cs
call
out
add
(bad)
xor
jg
dec
outs
popa
inc
out
push
fcomp
jbe
xchg
cmc
mov
out
or
push
stc
inc
in
movs
les
cmp
mov
sbb
mov
xchg
ror
jbe
and
pop
mov
bswap
out
cs
pusha
jg
inc
sbb
and
shr
push
mov
idiv
push
sar
pop
sbb
mov
mov
jg
lods
push
(bad)
xlat
inc
inc
inc
jmp
fild
inc
ja
test
movs
rol
test
jns
mov
ds
stos
jmp
cmp
fistp
and
cmps
stc
das
jo
sbb
mov
ins
sqrtps
jmp
lahf
add
xchg
push
je
cmp
jae
mov
sub
jg
jge
adc
jno
xchg
or
xor
cmp
cmp
adc
in
jmp
mov
cmp
pop
dec
aad
pop
in
dec
jmp
push
sub
pushf
imul
mov
mov
jl
loop
adc
jno
mov
pop
arpl
adc
cmc
mov
add
adc
dec
imul
(bad)
call
in
repz
add
mov
jmp
cmp
addr16
retf
or
cmps
sub
push
pusha
inc
sbb
cmp
fwait
mov
mov
loopne
or
retf
sbb
aas
push
ror
xor
das
lods
xchg
sub
sub
and
jmp
dec
inc
popf
xor
mov
out
div
sub
fs
sbb
lods
cmp
imul
out
cmc
xchg
push
xor
sti
xchg
inc
pusha
pop
or
and
gs
inc
out
jno
pushf
or
cld
mov
popa
jmp
mov
and
jo
loopne
jns
xor
mov
adc
mov
xor
sbb
push
mov
jb
int3
cs
xlat
mov
sub
inc
push
or
lock
jg
rol
cmp
mov
push
mov
pop
icebp
popf
les
pop
jp
mov
pop
imul
jg
stc
test
jl
xchg
fiadd
xchg
jl
or
cmp
call
(bad)
adc
sti
sub
push
push
addr16
sbb
mov
push
adc
fnsave
or
mov
inc
mov
pushf
rcl
adc
(bad)
jmp
xor
(bad)
mov
adc
shl
in
(bad)
push
in
sbb
xchg
pop
repnz
das
movs
sub
cmp
push
mov
(bad)
push
fnstcw
sub
or
mov
pop
xor
dec
cmp
inc
inc
imul
sub
or
adc
sbb
fisub
mov
add
jbe
adc
mov
jmp
mov
inc
shl
sbb
clc
fwait
pop
lods
repnz
xchg
jl
xlat
jmp
fdiv
jns
push
addr16
rcr
ret
xor
movs
ret
rcl
push
or
add
mov
add
data16
loopne
inc
mov
mov
ins
jmp
(bad)
jbe
test
(bad)
shl
lock
push
mov
(bad)
push
enter
xchg
mov
or
jg
and
fwait
in
test
cmp
xor
rcl
inc
sbb
dec
sub
out
jno
mov
sub
or
dec
movs
mov
lods
mov
sbb
dec
fcmove
mov
fmul
nop
mov
leave
jg
xor
aas
or
adc
inc
sub
pusha
pop
dec
popf
fdivr
push
ret
sub
pusha
inc
cs
jmp
jbe
out
imul
call
cdq
je
mov
scas
xchg
mov
sub
jp
and
cmps
out
add
test
scas
pop
push
aad
pop
cmp
lds
out
dec
mov
je
cld
ja
fcmovne
and
inc
lds
stc
pop
addr16
sbb
mov
popa
xchg
cmp
scas
jl
push
(bad)
arpl
sbb
in
(bad)
sub
xchg
ins
retf
leave
xchg
jmp
fs
adc
mov
cmc
xchg
inc
jge
mov
dec
mov
fidivr
outs
mov
xor
inc
inc
mov
jecxz
lods
out
push
xchg
movs
stos
loopne
add
jne
cmp
xor
fsubp
in
(bad)
pop
(bad)
aad
push
sbb
or
push
ss
movs
test
mov
and
push
push
js
out
loope
out
sahf
cmc
push
and
sub
mov
and
das
dec
cmp
push
cmp
inc
push
mov
test
and
mov
mov
outs
sahf
mov
cmc
lea
outs
mov
inc
jno
mov
cmps
enter
fimul
sbb
int3
mov
sub
dec
addr16
test
lsl
out
cld
push
and
movs
mov
and
inc
pop
aas
add
test
push
xor
(bad)
div
test
push
push
outs
fadd
(bad)
push
daa
xchg
xor
adc
mov
cmp
xchg
adc
jecxz
stos
(bad)
pop
fwait
loop
dec
neg
jns
je
and
or
jp
mov
movs
adc
stos
dec
fcom
daa
ss
adc
sahf
pusha
sub
mov
adc
popf
into
xlat
repz
(bad)
sahf
lahf
test
out
adc
inc
mov
ins
mov
pusha
(bad)
loop
iret
sub
in
xchg
xor
loope
lea
adc
(bad)
(bad)
movs
loopne
mov
sub
ret
push
fstp
push
and
ds
pop
pop
sbb
(bad)
jmp
test
push
popf
jecxz
inc
out
lahf
add
dec
fstp
(bad)
cmps
jmp
pop
inc
aaa
cmps
mov
and
or
adc
mov
popf
mov
mov
retf
mov
jne
inc
icebp
sub
xchg
cmp
js
neg
pop
cdq
sbb
and
or
out
outs
adc
add
mov
(bad)
out
sti
jp
xchg
cmc
mov
jle
bound
mov
jns
nop
xor
lea
sub
and
imul
test
gs
jg
cdq
add
cmp
and
dec
jbe
pop
sti
dec
aad
out
lds
jno
int3
dec
iret
ins
or
push
shl
lock
mov
(bad)
push
dec
xchg
cmp
dec
cld
xor
in
inc
push
and
lds
and
jne
dec
jmp
sub
mov
popa
pop
inc
dec
jmp
mov
gs
(bad)
add
fwait
in
outs
push
stos
lea
mov
mov
popw
adc
ins
mov
pop
repnz
out
lea
push
dec
jle
xchg
xchg
in
ret
inc
imul
jnp
and
dec
push
inc
sbb
jne
add
jno
fstp
jmp
repnz
mov
pop
sar
xchg
jno
mov
bound
test
xlat
shl
bound
gs
daa
sar
mov
pop
(bad)
inc
mov
adc
ret
mov
inc
ss
jp
popf
mov
mov
push
lock
cmp
add
and
push
clc
push
jb
push
repnz
dec
add
std
lea
outs
bound
dec
add
jmp
cwde
jmp
aam
je
add
or
jp
out
sbb
mov
shr
shl
jge
push
and
cmc
push
and
fisub
rcr
push
(bad)
lock
nop
idiv
div
push
(bad)
lods
loope
cli
int3
inc
fidivr
out
jnp
adc
xchg
jne
or
(bad)
in
ins
sar
ret
dec
aas
mov
push
adc
sbb
jge
or
pop
mov
xor
dec
retf
jl
mov
push
lahf
es
inc
cmps
cmp
pop
cmps
cmp
jmp
pop
cmp
out
jo
jne
in
pop
(bad)
jecxz
cmps
cmp
cmp
mov
push
dec
push
in
out
jmp
jp
jne
in
sub
enter
add
not
push
sub
out
mov
cmp
enter
pop
sub
mov
js
pop
and
pop
jbe
jnp
dec
int3
push
pop
test
rcl
lahf
xchg
adc
popf
push
mov
(bad)
mov
es
fsubr
or
mov
mov
jp
(bad)
dec
(bad)
js
daa
shr
daa
add
jae
jle
mov
jno
xor
out
push
and
mov
lods
cmc
dec
xor
pusha
fisubr
imul
ds
aad
les
cmp
push
loope
dec
sbb
es
cmp
mov
adc
add
aaa
ss
inc
test
mov
cmp
add
and
mov
push
in
(bad)
movs
test
jno
jb
imul
aaa
outs
jmp
(bad)
cmp
(bad)
jecxz
cmp
jne
clc
scas
outs
dec
js
out
jmp
sar
jecxz
xor
pop
movs
jnp
lea
lock
ror
mov
mov
add
sahf
or
out
hlt
push
out
test
push
lds
rol
xchg
mov
aam
mov
xor
xor
addr16
sti
sbb
mov
or
repz
mov
jbe
or
stos
adc
xor
ret
mov
call
push
and
je
cmc
or
jne
imul
cld
push
mov
fs
sbb
(bad)
sti
cmp
mov
pop
mov
(bad)
shl
das
xor
inc
test
lods
ror
pop
cmp
jl
pop
sbb
test
imul
inc
pushf
adc
adc
fyl2xp1
push
xchg
add
xchg
xchg
daa
dec
dec
mov
push
xor
sub
jb
imul
test
xchg
es
or
add
push
jnp
jne
jns
or
retf
dec
popa
cmp
inc
fcom
mov
shl
dec
lahf
sahf
loop
dec
xchg
clc
push
mov
or
mov
bound
mov
add
mov
mov
push
mov
pop
pusha
xchg
add
push
std
loop
xchg
push
push
frstor
and
test
or
cli
mov
push
mov
loop
jp
out
cmp
and
xor
(bad)
sbb
inc
pop
xor
in
adc
jbe
mov
xchg
aam
jmp
push
sub
push
xor
cmp
inc
dec
push
out
adc
outs
mov
shl
jnp
cmps
mov
cld
loopne
push
mov
inc
jno
retf
push
jb
repnz
imul
push
lea
add
addr16
data16
sbb
or
loopne
mov
pop
loope
jmp
sub
xchg
mov
xchg
mov
retf
push
adc
aam
jmp
pusha
xor
jecxz
mov
fdivr
hlt
jnp
push
push
sbb
(bad)
mov
xor
int3
lods
and
mov
lock
jb
cdq
stos
add
mov
dec
icebp
xchg
mul
xor
jle
js
xchg
jmp
int
sub
call
sbb
sbb
movs
dec
and
add
int3
sbb
jle
pop
sahf
xchg
gs
jmp
and
iret
test
out
mov
mov
mov
adc
or
stos
inc
cmc
ret
cdq
and
stc
push
ret
stos
shl
adc
scas
sub
xchg
xor
loope
clc
pop
mov
nop
push
movs
cdq
sub
jae
cs
jecxz
daa
mov
mov
cmps
addr16
xor
sar
call
rcr
pop
popa
mov
xor
retf
inc
cmps
push
push
dec
mov
lds
or
fimul
jmp
into
(bad)
hlt
pop
lds
dec
cmc
sub
mov
inc
retf
jno
sub
push
out
ror
mov
mov
dec
pop
mov
or
mov
mov
xchg
inc
mov
and
cmp
cmp
adc
cdq
scas
and
inc
jnp
int
stos
mov
mov
and
mov
test
ss
dec
mov
push
(bad)
jg
mov
xor
test
iret
call
or
lods
(bad)
(bad)
lock
jb
mov
cmp
mov
sub
mov
lods
push
cwde
ins
clc
frstor
dec
cmp
jae
enter
or
loop
(bad)
and
mov
imul
mov
adc
ds
push
xchg
cld
add
inc
mov
cwde
test
imul
fild
pop
sub
push
rcl
retf
frstor
retf
mov
out
sbb
clc
xor
ins
mov
test
aas
cs
sbb
mov
cmp
mov
iret
stos
adc
and
xor
lahf
mov
and
es
sub
(bad)
jl
xchg
retf
pop
ret
lods
xor
test
cdq
mov
out
push
sahf
imul
movs
cdq
mov
xchg
jp
ds
shl
sbb
cdq
push
aad
inc
ds
(bad)
daa
bound
(bad)
dec
inc
push
mov
pusha
adc
outs
inc
call
jbe
jp
mov
mov
imul
dec
mov
lock
je
inc
and
xor
lods
sbb
loope
cmp
sti
fsubr
retf
adc
enter
pop
js
push
cmp
xor
pop
shl
jmp
scas
test
pop
outs
fisub
xchg
cmp
mov
mov
mov
push
inc
xchg
int3
cmp
jecxz
pop
inc
fucom
pusha
mov
mov
mov
(bad)
sbb
nop
cmp
cld
xchg
mov
ins
es
fist
push
mov
cli
xchg
sar
fsubrp
mov
xor
fst
lds
mov
push
sti
iret
push
jae
xor
test
stc
lds
test
add
imul
jno
std
jae
inc
jle
xor
add
imul
fstp
movs
test
loope
sbb
sub
cmps
popa
mov
mov
cli
pop
(bad)
mov
mov
push
mov
fnsave
nop
loope
and
je
mov
(bad)
jne
sbb
pop
fnstsw
lahf
dec
and
push
test
or
ins
lea
lock
or
imul
cdq
or
cmps
push
mov
push
scas
hlt
popf
(bad)
adc
jno
jl
(bad)
cli
cld
adc
js
add
or
(bad)
(bad)
push
inc
sub
mov
push
repz
push
cmps
xor
push
out
mov
pop
cmp
stc
(bad)
xor
dec
sbb
call
push
popf
jne
fidivr
je
popa
int3
hlt
and
push
mov
es
bound
sbb
aaa
adc
rcr
(bad)
repz
bsr
mov
and
cs
out
sub
cmp
jne
jns
rcl
or
sub
xchg
adc
pop
adc
fcomp
loope
mov
mov
loopne
enter
xor
les
push
daa
mov
or
out
cmps
jns
(bad)
scas
int
mov
sub
and
push
mov
mov
jnp
(bad)
push
jle
xchg
movs
fadd
mul
test
xchg
sub
fs
pop
add
mov
lods
and
and
lock
cmp
(bad)
sub
push
scas
in
mov
xchg
xor
push
std
adc
pop
xchg
sub
pop
inc
inc
jno
jmp
sub
rcl
or
icebp
daa
push
xchg
cli
imul
(bad)
push
jmp
fs
jo
dec
pop
movs
and
addr16
int3
mov
push
outs
push
loope
cli
fnstsw
punpckhwd
mov
adc
cli
jge
adc
adc
lock
(bad)
jae
xchg
sub
cmp
push
aad
jbe
enter
aad
jg
stos
rcl
add
fidiv
test
fidiv
rcr
repz
(bad)
(bad)
fnstenv
rcr
inc
xchg
mov
(bad)
jp
fwait
aam
call
outs
fld
int
iret
imul
int
xor
je
popf
test
mov
loope
mov
mov
push
(bad)
cli
dec
(bad)
pop
std
rcl
sub
inc
fldcw
mov
outs
mov
das
out
aas
pop
mov
movs
pusha
xor
add
jp
jb
pop
mov
retf
es
pop
cld
es
push
call
mov
cli
bound
jb
js
clc
mov
pushf
rol
shr
repz
arpl
es
sbb
pop
sub
pop
movs
hlt
and
xchg
cmp
add
mov
mov
jns
mov
sub
(bad)
in
fisttp
(bad)
pop
frstor
and
jmp
cmp
std
mov
jl
inc
xor
dec
push
xchg
(bad)
jnp
cmp
push
xor
retf
je
rol
mov
mov
shr
(bad)
les
or
mov
mov
imul
pop
daa
xchg
outs
fs
stc
push
(bad)
iret
stos
mov
test
sbb
mov
outs
mov
imul
(bad)
repz
shl
and
jmp
call
adc
shl
fbld
imul
sub
out
mov
inc
clc
sub
inc
and
aas
push
xchg
popa
xchg
sub
idiv
xor
in
cmp
mov
xor
imul
jg
dec
stc
mov
mov
in
add
fs
outs
dec
adc
inc
shl
adc
cmp
stc
out
pop
xchg
jno
sub
push
iret
movs
add
mov
xchg
scas
adc
test
sbb
cmc
pop
je
mov
mov
xchg
xor
(bad)
pop
push
mov
mov
mov
fstp
les
dec
std
(bad)
sbb
xor
or
jle
push
jno
ret
mov
and
and
int
popf
and
out
pop
mov
jns
mov
push
push
sub
retf
fwait
push
mov
jmp
push
loopne
sbb
adc
lods
je
or
sub
out
outs
push
sar
push
dec
lods
ret
out
xchg
stc
and
out
(bad)
ret
cmp
out
popf
rol
scas
mov
leave
fs
loope
lahf
shr
lds
push
repz
nop
pop
ins
fistp
sbb
mov
cmp
stos
fnstsw
sbb
push
scas
popf
cmp
jnp
out
movs
inc
popa
or
push
(bad)
xor
out
mov
loopne
dec
adc
dec
test
push
adc
stos
shr
inc
mov
test
out
les
clc
pop
dec
(bad)
cmp
outs
popa
cmp
bound
daa
jmp
adc
in
add
mov
ret
jnp
jmp
shl
mov
or
add
ins
xor
adc
loop
mov
push
mov
cmps
test
jl
and
fxch
das
cmp
cmc
or
push
pop
push
jp
icebp
ja
push
xor
sub
xor
push
ss
ins
(bad)
and
mov
sbb
sar
cmp
add
push
inc
in
adc
in
retf
xchg
sub
iret
neg
sub
sub
in
mov
fld
inc
adc
inc
addr16
jae
(bad)
loopne
jp
mov
mov
das
jge
arpl
mov
xchg
scas
inc
(bad)
sub
inc
inc
mov
out
add
inc
(bad)
mov
push
stc
mov
pop
mov
(bad)
stos
sub
(bad)
cmps
arpl
adc
xchg
sub
in
mov
ror
ret
dec
pop
(bad)
xchg
sub
dec
pop
sub
loope
jge
outs
pop
into
pop
shr
ret
icebp
inc
mov
sahf
inc
sbb
and
xor
cs
mov
pop
pop
sbb
mov
add
mov
inc
icebp
sub
xlat
dec
scas
and
jle
mov
or
pop
adc
sub
arpl
mov
cmp
jnp
imul
(bad)
(bad)
push
jae
inc
into
(bad)
das
jp
mov
call
push
in
and
push
or
inc
mov
add
jmp
pushf
ror
mov
or
sub
adc
pop
imul
pop
mov
(bad)
pop
bound
xchg
icebp
ficomp
aaa
push
psubb
add
sbb
cmp
fs
push
ss
fs
js
mov
sub
cld
retf
dec
jp
or
dec
ja
and
lahf
stos
movs
mov
mov
(bad)
xchg
sub
mov
cmp
inc
pop
sub
mov
mov
sub
mov
cwde
int
rcr
ds
pop
aas
jne
fwait
and
lea
adc
je
pop
cwde
lahf
pop
cmc
cmp
mov
ds
xchg
jl
and
dec
retf
xor
inc
addr16
popf
mov
mov
sbb
aam
mov
sbb
fcomp
mov
fld
cmp
test
jbe
cmp
js
cmp
(bad)
ficom
jmp
stos
sub
sbb
imul
(bad)
out
lods
inc
inc
jmp
push
imul
call
rcr
frstor
std
sbb
mul
xchg
push
jne
enter
hlt
into
in
pop
sbb
lods
jp
fld
lahf
sub
in
jmp
xchg
and
xor
jno
sbb
push
mov
push
int3
cmp
fwait
or
inc
adc
jmp
rol
dec
lahf
adc
add
test
jne
mov
jge
in
mov
jb
pop
lds
xor
mov
dec
mov
add
push
xor
xor
arpl
and
adc
push
int
inc
jo
xor
jno
pop
jnp
not
in
add
mov
xchg
stos
test
mov
jl
(bad)
sbb
pop
mov
gs
mov
in
mov
push
or
jbe
mov
jbe
mov
push
repnz
dec
sbb
cs
inc
js
pop
daa
sbb
push
aad
pop
je
arpl
push
mov
cs
sub
pop
jns
push
pop
sub
sti
out
pushf
test
push
push
repnz
nop
(bad)
ret
mov
fisub
jbe
xchg
maskmovq
idiv
xchg
data16
mov
and
sahf
lods
test
adc
cmp
loop
xor
call
shl
stos
xchg
jle
mov
imul
cld
verr
mov
and
inc
pop
pop
leave
loopne
sbb
rol
push
pop
or
fwait
mov
xor
jp
dec
jecxz
movs
sub
sub
ins
in
lods
jne
mov
or
xchg
gs
mov
shrd
js
or
out
iret
pop
dec
jmp
enter
inc
sbb
gs
cs
leave
dec
and
loopne
mov
push
fs
jae
cli
jns
and
sub
aam
rcl
in
fwait
data16
xchg
mov
jo
pop
lock
cld
retf
inc
adc
retf
call
lods
inc
push
jo
push
xor
cmp
fwait
inc
je
cmp
sahf
sahf
adc
aad
loope
cwde
jge
in
sub
cld
adc
shr
iret
mov
add
frstor
aad
inc
rcr
aad
pop
aam
call
push
shr
aam
jno
rcl
outs
mov
ins
or
ins
jp
fcom
pop
int3
mov
add
inc
xor
call
mov
sub
cmp
dec
icebp
xchg
cmps
mov
pop
mov
rcl
call
add
pop
dec
fwait
or
pop
mov
retf
mov
cmp
xor
movs
sbb
test
(bad)
movs
mov
dec
cmp
pop
sub
pusha
sbb
jg
test
and
jge
add
fisttp
xor
push
jnp
ficom
mul
enter
popf
sbb
cwde
inc
das
inc
repz
and
xor
jmp
xlat
shl
push
push
jp
in
pop
jg
sbb
xor
out
fs
jp
adc
in
jb
mov
push
mov
sub
mov
gs
mov
mov
and
push
(bad)
stc
jnp
ss
rcr
cmp
or
movs
es
dec
aad
int
addr16
sub
out
or
popa
ja
dec
xor
jge
mov
addr16
add
gs
cmp
mov
jb
ss
frstor
add
aas
wbinvd
mov
mov
mov
dec
pop
push
mov
cmp
sbb
mov
dec
pop
aaa
mov
sub
adc
(bad)
lods
retf
movs
lods
inc
inc
pop
and
lods
xchg
repz
mov
sub
ret
fisub
cli
sbb
hlt
sti
sbb
jb
add
mov
fistp
repz
inc
mov
adc
and
adc
adc
sub
jne
and
xor
add
cmps
std
(bad)
pusha
ss
and
cmps
call
scas
sbb
clc
stos
aad
daa
cmp
pop
inc
xchg
movs
jg
cmp
xlat
push
cmp
(bad)
pop
and
add
ret
cmp
call
or
dec
pop
adc
mov
jecxz
mov
fwait
das
mov
div
mov
mov
jno
fdiv
test
stc
cmp
neg
mov
push
dec
test
pushf
test
adc
push
add
fsub
sbb
mov
sbb
jge
div
mov
mov
sub
jp
or
pop
sbb
imul
dec
mov
push
lods
push
lods
inc
mov
sub
mov
fwait
push
inc
popa
cmp
fucom
mov
pop
call
mov
fistp
retf
jb
mov
iret
mov
cmp
aaa
sbb
je
dec
push
and
dec
xchg
or
idiv
xor
dec
in
adc
loopne
mov
push
pop
inc
push
pusha
js
or
add
pop
push
jne
sub
arpl
out
push
mov
clc
test
sbb
sub
mov
ror
mov
sbb
call
mov
test
stos
xchg
clc
es
retf
mov
jecxz
cli
mov
(bad)
sbb
test
inc
xor
push
xchg
mov
sub
fbstp
adc
arpl
inc
push
stos
or
test
ss
or
sbb
adc
js
test
test
fisttp
ret
(bad)
cld
sbb
sahf
(bad)
test
xor
rcr
push
dec
fisubr
cmp
cmp
push
push
fdivr
retf
add
loop
cmc
push
loop
fdivr
cmp
cmp
sub
push
xor
mov
mov
xor
xchg
enter
nop
movs
sti
add
cli
or
mov
push
adc
jge
add
call
(bad)
adc
dec
loope
xchg
aas
jl
cmps
ss
cld
repnz
je
adc
mov
out
jno
leave
nop
adc
test
ret
push
mov
(bad)
push
cmps
and
sub
xor
test
push
js
xor
nop
sbb
push
inc
dec
jecxz
adc
xchg
fnstenv
push
lods
push
lea
fadd
pop
sub
push
cld
popa
cmc
sbb
sbb
enter
dec
icebp
mov
test
std
test
xchg
in
jmp
pop
mov
int3
aam
pop
repz
int
pop
jle
test
aas
xchg
pop
call
xchg
je
push
or
push
test
xor
lahf
pop
pop
bound
fwait
mov
add
in
add
adc
add
lods
jno
adc
dec
cmp
loop
cwde
dec
pop
xor
cmp
enter
sbb
aas
fwait
mov
icebp
ins
push
dec
idiv
cs
mov
cmp
jbe
push
ficomp
mov
repz
push
sub
clc
xchg
push
std
cmps
cmp
add
mov
stos
dec
jl
cmp
xor
cdq
test
ds
xor
xchg
add
fwait
push
out
sub
cdq
inc
xor
pop
lods
sbb
sub
aas
(bad)
and
fadd
mov
dec
add
sbb
imul
punpckhdq
sbb
inc
ret
mov
xchg
inc
jg
or
test
or
jae
pop
popf
ror
sti
aad
test
aaa
fbstp
stos
fisub
bound
dec
mov
test
push
loopne
add
mov
cmp
sub
adc
daa
dec
push
ins
movs
fwait
int
sbb
lds
call
jnp
xor
dec
fs
push
rol
add
sahf
adc
lods
push
cs
call
mov
out
dec
adc
cwde
adc
pop
jbe
and
mov
ins
adc
pop
cld
dec
push
jp
pop
cmp
mov
and
xchg
ins
dec
push
clc
shl
popf
neg
or
add
out
adc
dec
in
in
(bad)
out
jne
lea
add
fxch
pop
out
or
mov
cmp
pushf
ret
cmpps
test
pop
scas
xchg
pop
sbb
ins
in
cmp
(bad)
fisub
or
or
loopne
push
pop
adc
mov
or
cwde
inc
and
(bad)
mov
cwde
dec
push
push
imul
or
xchg
inc
fwait
xchg
push
test
scas
and
ss
fisubr
lahf
cmp
or
imul
pop
pop
mov
fisub
std
dec
sbb
add
int
and
push
das
push
(bad)
pop
push
cli
mov
ret
int
inc
pop
and
ss
dec
mov
xor
or
xchg
(bad)
psrad
pop
sar
fnstcw
adc
and
mov
dec
cmp
mov
nop
imul
into
jno
add
popa
mov
mov
jecxz
adc
fnsave
push
icebp
mov
adc
sbb
inc
dec
cli
mov
jb
in
push
retf
nop
cmp
enter
add
(bad)
ja
out
xor
mov
lea
rcr
mov
xor
repz
lods
mov
data16
cs
icebp
test
movs
aas
ins
add
xchg
test
and
sbb
pop
mov
imul
mov
out
shr
cmp
sbb
(bad)
xchg
and
(bad)
jno
and
(bad)
fidiv
movs
stos
push
fild
mov
fsubrp
jp
clc
inc
jo
push
ficomp
(bad)
mov
xchg
frstor
aaa
ins
xchg
cmp
jnp
cli
iret
addr16
mov
mov
leave
push
mov
dec
outs
pushf
dec
xchg
cmp
mov
and
pop
stos
mov
ins
es
xchg
test
push
add
cmp
xchg
rol
clc
loop
popf
cld
pusha
xchg
inc
ret
pop
xchg
xchg
sbb
sub
test
mov
fild
iret
sub
xchg
scas
rol
scas
sub
sbb
sbb
xchg
in
and
sbb
cmps
je
loope
add
inc
fld
ds
and
sbb
jno
mov
std
cmp
jnp
jne
or
pop
jnp
cmp
adc
push
test
dec
inc
loop
js
movs
xor
jb
push
scas
fld
stos
shl
(bad)
add
sub
xchg
jmp
inc
dec
dec
jbe
dec
jbe
les
cmp
out
push
imul
xchg
cmp
cli
adc
or
xlat
and
popf
in
mov
das
xor
adc
bound
push
aas
out
out
aas
dec
pushf
arpl
in
lods
and
mov
jmp
stc
mov
mov
jmp
or
call
sahf
lods
or
lahf
mov
repz
js
xchg
xor
push
sbb
dec
fst
iret
and
sar
pop
sahf
cmp
fwait
call
retf
fisub
scas
mov
sahf
cwde
stc
test
xchg
adc
les
ins
jp
js
mov
pop
aad
dec
dec
sbb
cmps
fistp
inc
sub
sub
cmps
dec
fsubr
inc
retf
test
dec
aaa
jle
jo
add
xor
jecxz
push
aas
leave
out
cmp
pop
pop
repz
in
(bad)
imul
sbb
in
jne
ret
shl
pop
mov
outs
addr16
out
xchg
leave
jnp
aam
cwde
sbb
sub
imul
mov
inc
stos
fistp
mov
mov
pop
(bad)
cmp
fisubr
dec
xlat
sub
jmp
xchg
cmc
je
or
pop
inc
(bad)
mov
daa
aad
and
movs
jmp
xchg
fimul
lock
mov
es
pop
mov
sahf
je
fisubr
sbb
add
in
imul
push
out
pop
(bad)
mov
sbb
push
lods
adc
btr
pop
test
jmp
dec
retf
inc
loope
mov
fnstsw
imul
xchg
mov
pop
je
jb
ror
sbb
mov
sbb
lods
inc
xchg
es
sbb
and
(bad)
mov
ret
lods
retf
cmps
jnp
scas
fcom
xor
or
sahf
jl
push
(bad)
mov
arpl
dec
mov
xchg
lods
sub
int
xchg
test
dec
outs
sub
xor
push
(bad)
push
mov
out
jg
pop
rep
sti
mov
(bad)
lock
jae
or
sbb
push
jns
xor
(bad)
out
(bad)
cmp
jmp
mov
mov
jg
pusha
push
inc
mov
rol
and
pop
aas
mov
in
(bad)
xchg
adc
sbb
inc
fild
in
test
dec
push
call
mov
into
out
out
stos
pop
cli
adc
sub
bound
mov
pop
sbb
adc
dec
into
xchg
jbe
dec
icebp
das
addr16
jae
lock
inc
(bad)
dec
mov
add
(bad)
pop
or
aaa
mov
mov
jle
outs
xchg
xor
out
rol
xchg
retf
dec
xor
add
mov
adc
inc
mov
mov
test
in
loope
sbb
das
lds
push
xchg
sbb
sub
mov
or
adc
or
or
mov
sbb
rcl
or
div
dec
loope
push
add
stc
frstor
xor
push
pop
jnp
xchg
enter
mov
cmp
ficomp
push
pop
mov
sar
inc
dec
adc
div
les
popa
add
adc
loopne
pop
adc
cs
int3
dec
mov
leave
and
out
into
pop
dec
dec
pop
and
out
test
xor
dec
(bad)
jg
pop
ror
sbb
add
push
fcmovnu
adc
and
bound
sub
fs
inc
test
cmps
test
(bad)
(bad)
loopne
jo
and
inc
sbb
xor
mov
test
sbb
or
inc
sbb
iret
xlat
shl
data16
iret
mov
add
xchg
ja
push
push
or
shr
popf
repnz
jecxz
fnstenv
pop
stos
adc
jmp
(bad)
cmp
gs
fnsave
daa
mov
and
gs
add
fst
imul
retf
stc
xor
and
(bad)
jns
call
cmc
xchg
mov
xor
ss
jge
jns
mov
lock
mov
aas
inc
inc
inc
addr16
dec
jno
cmps
mov
addr16
sti
aaa
aad
loop
test
dec
icebp
mov
cmc
ds
aaa
and
cmp
fild
(bad)
jle
lods
mov
stos
pop
jl
je
hlt
push
mov
aas
ret
(bad)
jmp
add
add
dec
dec
jmp
cmps
sbb
mov
dec
shl
cmp
mov
repnz
jbe
out
bound
sahf
imul
mov
jg
test
inc
loope
push
jl
inc
sub
xchg
jmp
xor
retf
repz
das
out
aad
ss
fadd
xor
icebp
add
inc
ret
inc
popf
xchg
pop
or
ss
(bad)
ja
js
ja
dec
xchg
mov
xchg
jo
mov
xchg
jg
int
inc
cmp
mov
pop
mov
or
jbe
aam
mov
sar
lds
repz
sub
dec
(bad)
loope
and
sti
xchg
cwde
into
outs
popf
fcom
sbb
js
out
or
push
int
iret
imul
adc
jo
add
inc
dec
adc
mov
inc
fs
out
mov
dec
pop
inc
sbb
lock
xor
clc
fisubr
or
jmp
outs
scas
fstp
xchg
dec
xlat
icebp
retf
jl
mov
pop
push
mov
sti
loop
pop
inc
pop
loopne
push
and
jbe
or
mov
lahf
pop
ins
pop
fisttp
out
(bad)
adc
dec
xchg
sub
cwde
iret
and
test
mov
xor
mov
(bad)
fld
dec
dec
push
mov
out
aam
xor
gs
das
jb
movs
out
push
mov
push
xor
xchg
das
xchg
arpl
loope
dec
dec
sbb
jg
js
out
scas
fadd
ins
xor
lods
xor
cmp
xor
pop
gs
pop
in
xor
jbe
nop
popf
ins
mov
cld
repz
jns
and
cmp
jmp
retf
adc
sub
fsub
repz
mov
into
mov
fnstcw
cmp
cmp
les
out
jmp
dec
jnp
push
add
rcr
adc
rcr
cmp
jns
(bad)
cli
pusha
jmp
push
fdivr
ret
cmp
das
mov
ss
and
pop
fdiv
add
pop
aam
arpl
int
imul
jp
(bad)
in
pop
lea
fs
xchg
and
inc
xchg
jle
fcom
clc
sub
xor
add
fcom
fs
stos
outs
je
mov
(bad)
adc
jle
imul
mov
cmp
add
ret
lea
imul
cmp
ja
pop
bound
cdq
stos
pop
int
push
or
adc
arpl
mov
dec
sbb
in
cmps
pop
push
pop
int3
jmp
sub
(bad)
cmp
xor
and
fcom
pop
aam
clc
lods
sti
add
push
fmulp
mov
repnz
and
fcom
xchg
das
pop
xor
mov
rcr
fincstp
sub
mov
loopne
ds
jb
xchg
pop
push
ror
jecxz
sti
mov
ja
(bad)
push
ret
enter
xchg
(bad)
xor
ret
fdivr
imul
daa
pop
cmp
std
push
shl
loopne
or
mov
iret
sbb
push
ficom
cmp
cli
add
loop
mov
es
enter
je
mov
xchg
mov
(bad)
ficom
cmps
outs
rol
aad
pop
ficomp
int
pop
inc
or
dec
nop
cmp
jp
push
adc
jp
push
ss
dec
cwde
cmp
sub
mov
ficomp
mov
repz
gs
int
inc
popf
aam
movs
xchg
xchg
ficom
es
mov
cdq
dec
sbb
lods
pop
lea
and
push
mov
loope
lahf
inc
mov
hlt
jnp
or
pusha
into
mov
sbb
xor
cs
mov
shl
(bad)
adc
loopne
fld
jo
push
enter
cmp
call
add
xor
stc
fnstenv
repnz
add
cdq
int3
jnp
or
mov
dec
stos
cmc
mov
mov
loopne
xchg
fwait
dec
test
movs
cmp
arpl
sbb
pcmpeqb
(bad)
sbb
(bad)
and
sub
dec
(bad)
push
jb
jmp
adc
stc
jb
lods
cmc
fsubr
hlt
repnz
push
adc
push
dec
mov
sbb
mov
bound
push
xchg
out
or
cwde
jns
xor
xchg
push
in
mov
dec
fwait
jmp
(bad)
int
mov
inc
test
outs
stc
outs
adc
mov
test
mov
dec
jle
adc
lods
lods
pop
and
jmp
or
push
ins
sar
mov
imul
fdivr
mov
mov
rol
mov
loop
iret
rcr
mov
lahf
inc
std
(bad)
mov
or
repnz
inc
in
sbb
mov
push
sbb
in
test
cmp
into
push
inc
push
mov
inc
(bad)
sub
jecxz
push
cmp
pop
pop
js
and
repz
mov
das
iret
pusha
fiadd
xor
cmp
mov
or
adc
cmc
lds
(bad)
sbb
ret
dec
and
shl
inc
js
shl
sti
cmps
hlt
sti
cmp
or
fisttp
add
in
push
adc
adc
cld
out
aaa
aam
rol
mov
cdq
cmp
fwait
test
mov
fnstcw
xchg
mov
and
adc
std
shl
jb
mov
scas
xor
outs
ret
jg
outs
leave
mov
push
jmp
out
test
rcl
out
fs
jle
and
adc
jmp
addr16
xor
lock
nop
repz
lahf
push
pusha
mov
pop
retf
xlat
push
inc
add
sbb
add
adc
jo
add
dec
inc
push
cld
neg
or
and
xor
daa
scas
popf
ins
popw
adc
lods
cmp
mov
cdq
pop
or
inc
lods
js
aas
sub
ret
ja
and
pop
imul
into
enter
pop
jne
cmp
(bad)
sahf
jns
not
dec
mov
mov
push
daa
mov
fisttp
lock
mov
cmp
cmp
das
dec
jae
add
mov
push
call
bound
nop
fldcw
mov
push
aaa
in
mov
adc
in
dec
or
inc
push
outs
sub
cld
sub
sub
repz
add
int3
jecxz
call
dec
mov
int
popf
mov
leave
sar
scas
xor
sub
pop
int3
jl
enter
mov
pop
fs
lds
cmp
pop
imul
adc
aad
sbb
mov
(bad)
jb
push
(bad)
pop
xchg
out
cmp
out
test
rcr
cs
push
inc
pop
lock
mov
cmp
int3
fsubr
aam
adc
pop
enter
jbe
or
mov
pop
inc
movs
rol
xor
and
mov
jp
sahf
leave
fwait
inc
call
sub
mov
mov
(bad)
sub
sub
inc
jge
shr
bound
imul
mov
and
and
mov
adc
dec
push
jecxz
xor
jnp
inc
mov
jl
mov
and
push
aam
fwait
test
ds
lahf
mov
pop
(bad)
mov
sub
cmp
adc
lds
loopne
push
scas
ret
aaa
mov
icebp
sub
mov
or
inc
adc
sub
ja
fwait
push
sti
jmp
jne
cwd
daa
cs
loop
div
iret
or
dec
fstp
call
dec
sub
xor
jmp
sub
cmc
inc
cmp
sub
xchg
sub
jnp
in
std
cdq
mov
pop
aaa
xchg
test
push
jp
repz
jnp
mov
cmp
(bad)
xor
jecxz
xor
xchg
add
sub
ins
mov
pop
imul
jg
dec
adc
imul
jno
or
daa
mov
mov
stos
xchg
pushf
out
push
add
mov
xor
sub
jo
popf
cmps
mov
mov
jl
xor
fstp
stc
or
cmp
retf
mov
xchg
out
mov
mov
or
xchg
pop
inc
and
cmp
pop
mov
mov
fiadd
inc
imul
xchg
(bad)
add
dec
mov
cdq
sub
inc
or
int
sbb
rcl
xchg
fstp
push
xor
pop
lods
dec
jmp
ficom
retf
sbb
jae
sbb
jo
inc
inc
adc
xchg
or
pop
pop
xchg
pop
sbb
call
retf
mov
mov
jns
xor
mov
repz
test
pop
push
push
mov
cmp
and
push
loop
mov
pop
sahf
test
js
dec
jg
push
mov
pop
mov
lock
dec
xchg
iret
jne
push
cld
xor
clc
pmaddwd
push
movs
sub
das
in
jnp
fisub
dec
addr16
(bad)
rcl
loop
pop
and
ror
add
mov
jbe
jo
dec
push
xor
loop
bnd
imul
pop
aad
pop
xchg
aam
aaa
(bad)
fimul
(bad)
shl
cmp
dec
sahf
inc
lock
cmps
mov
add
cmps
push
or
(bad)
data16
push
int3
leave
enter
cmps
enter
imul
cmp
cmp
inc
das
xchg
add
and
push
std
cld
dec
lea
sub
xor
das
shl
pusha
pop
jmp
mov
(bad)
pop
fwait
cmp
xchg
xor
xchg
scas
inc
mov
dec
jmp
movs
mov
js
rcl
popa
mov
pushf
xchg
arpl
pop
jge
and
push
arpl
sbb
push
dec
cmp
arpl
mov
mov
sbb
call
popa
pusha
and
cdq
xchg
pop
arpl
mov
push
stc
sub
(bad)
stc
xor
dec
add
arpl
add
pop
(bad)
call
inc
neg
movs
in
rcr
fsub
pusha
or
xor
in
fcomi
ins
pop
mov
add
fidivr
push
mov
xchg
inc
out
fyl2xp1
vsqrtss
or
mov
xor
push
(bad)
mov
lahf
inc
minps
jecxz
sub
add
popf
adc
fdiv
mov
pop
cli
add
shl
mov
jne
fimul
jg
scas
rol
add
or
mov
clc
mov
sar
scas
jge
inc
ss
or
jle
pop
sub
push
data16
adc
es
cmc
hlt
push
mov
lods
push
call
loope
retf
add
jnp
mov
inc
stc
xchg
push
dec
div
and
out
fldenv
ja
sub
sub
cmc
test
pusha
lods
ds
push
add
cmp
(bad)
xchg
cmc
(bad)
cs
loop
in
je
out
(bad)
push
nop
and
std
lods
rcr
sub
in
es
aas
sbb
sub
xchg
rcr
daa
shl
sti
les
mov
mov
push
mov
scas
das
mov
(bad)
or
mov
push
mov
shl
arpl
outs
adc
lods
cmp
jno
es
popa
cmp
shr
sub
sti
sub
icebp
sub
fdivr
ins
lods
cmps
cdq
push
mov
xchg
outs
push
jle
mov
lahf
sub
push
jmp
out
mov
sbb
es
retf
out
add
sub
adc
mov
cmp
ss
test
inc
mov
add
sbb
or
and
fldenv
jle
dec
stos
jge
or
pop
add
jne
sbb
cmps
cmp
jg
jp
fdivrp
call
jo
int
add
fwait
jp
jg
popf
mov
mov
push
dec
mov
mov
bound
ror
dec
out
mov
sbb
rcr
pop
dec
add
ror
mov
inc
aaa
enter
test
add
lock
jl
cli
sbb
(bad)
mov
pop
sub
mov
outs
dec
mov
dec
xchg
sub
xchg
cwde
imul
jo
dec
push
sbb
xor
adc
cmps
rcl
sub
call
movs
call
push
call
sbb
daa
ret
sbb
jno
cmp
add
test
out
inc
jp
and
call
push
mov
std
or
xchg
cld
xor
ror
imul
pop
or
lea
sbb
inc
call
(bad)
push
mov
jb
ja
mov
pop
lahf
pop
dec
jmp
and
add
adc
addr16
cmp
sbb
jle
add
addr16
pop
mov
jl
adc
xchg
fcomp
cmp
ins
sub
xchg
lds
xchg
cmps
mov
mov
pop
mov
or
in
pushf
pop
dec
cmp
nop
mov
jl
lahf
push
dec
xor
mov
std
fld
sbb
jecxz
add
popa
xchg
jmp
jmp
fimul
(bad)
hlt
mov
iret
cmp
push
cs
or
adc
pop
pop
cmps
xor
cmp
jno
fsub
xchg
push
push
pop
arpl
cmps
retf
cli
movs
bound
jae
mov
push
pop
jae
loop
(bad)
cmp
and
in
ins
jne
out
arpl
and
jae
shl
mov
stos
loope
das
and
mov
dec
ds
das
in
enter
and
loopne
daa
lock
add
push
les
jns
push
xchg
mov
(bad)
jg
dec
mov
popa
push
inc
lahf
mov
(bad)
imul
dec
dec
mov
add
jnp
lods
adc
retf
mov
stc
pop
xor
je
fcom
mov
lock
int
jns
shl
xchg
xchg
sar
push
adc
mov
push
jbe
fsub
mov
popf
jmp
hlt
cmp
xchg
xchg
out
and
aas
jnp
out
mov
pop
pusha
in
adc
retf
mov
push
adc
call
inc
push
dec
xchg
add
div
(bad)
or
or
cwde
neg
sub
test
pop
jo
pusha
jae
test
jb
in
nop
loopne
xchg
lods
jmp
mov
loop
jl
mov
push
jge
cs
add
imul
xchg
jo
imul
mov
shl
mov
jmp
sub
out
dec
jnp
push
gs
addr16
mov
shl
ins
lods
mov
bound
inc
leave
in
mov
aaa
inc
sbb
cmp
jno
inc
(bad)
in
fild
pop
pop
or
jb
in
js
mov
adc
mov
addr16
xor
inc
pop
push
push
cmps
xor
(bad)
sbb
mov
(bad)
adc
mov
(bad)
int
mov
xchg
jmp
fs
sub
test
sub
add
push
mov
test
dec
sub
lods
sub
or
adc
repnz
pop
aam
mov
sbb
mov
jne
mov
jbe
popa
push
rol
and
ins
push
mov
(bad)
lea
push
cmp
lods
pushf
ds
pop
loopne
sbb
dec
dec
jo
(bad)
retf
sub
mul
push
loope
pop
test
clc
mov
mov
cs
or
je
xor
and
or
test
add
cmps
loop
movs
popa
mov
and
pop
pushf
add
sub
iret
neg
aad
call
xchg
jns
sub
les
inc
xchg
mov
push
loope
fs
sub
es
into
dec
(bad)
aam
ret
fnsave
aam
sub
jmp
dec
cmp
in
inc
dec
les
inc
mov
lds
ins
test
das
mov
adc
ret
int
pusha
inc
pop
rol
cwde
fstp
les
ja
inc
cdq
js
test
xor
adc
xchg
movs
popa
push
arpl
ret
scas
pop
dec
popf
xchg
pop
int
in
(bad)
ror
mov
out
mov
xchg
push
call
push
xchg
ss
xchg
push
xor
xchg
mov
test
push
adc
lock
push
mov
mov
pop
xchg
enter
test
rcr
je
lldt
in
fwait
mov
leave
and
out
or
push
enter
sbb
sbb
daa
rcr
jne
inc
out
sar
push
inc
(bad)
cdq
dec
repnz
sub
jb
outs
outs
test
sahf
adc
jle
mov
out
jg
add
lods
js
std
lods
xor
stc
lods
arpl
test
adc
xchg
cld
inc
out
mov
mov
ja
ins
push
xor
or
mov
push
push
and
dec
popf
mov
cmp
clc
pop
pop
ins
or
jns
pop
pop
xchg
mov
ss
test
sub
add
mov
fcomp
shl
ffreep
pushf
jg
inc
jl
sbb
(bad)
jae
and
repnz
in
jne
xchg
dec
push
adc
push
popa
inc
adc
cld
aaa
mov
retf
leave
add
je
(bad)
jmp
xor
xchg
mov
sbb
dec
xchg
inc
je
push
into
icebp
loopne
lods
cmc
outs
or
mov
mov
mov
dec
pop
in
or
push
mov
cmp
arpl
mov
cmp
retf
pop
movs
and
lock
sub
in
mov
std
mov
sbb
xchg
aad
xchg
sbb
inc
aaa
std
ret
xchg
jbe
out
das
jg
js
push
sub
mov
shr
mov
sahf
cmp
or
inc
mov
call
jnp
pop
ret
push
ss
mov
push
(bad)
mov
icebp
(bad)
jae
pusha
mov
jns
ret
xchg
fnsave
xor
ficomp
push
adc
and
lods
mov
push
repz
push
movs
pop
cmp
jmp
xchg
rcl
xchg
jp
ror
mov
pop
out
ins
xor
and
xor
sub
sub
lods
test
sbb
call
adc
jmp
mov
xor
ss
ror
mov
jno
cwde
sbb
ret
cmp
js
rcl
hlt
fsubr
(bad)
mov
scas
sbb
arpl
xor
ds
retf
popf
adc
pop
lar
xchg
imul
xchg
adc
inc
xchg
cld
mov
fild
inc
fisub
fild
adc
ret
xchg
cli
cwde
(bad)
adc
popa
mov
jl
inc
int3
adc
ins
(bad)
out
adc
jg
ret
in
clc
xchg
xchg
in
std
stos
clc
push
adc
bound
(bad)
js
fwait
jp
jo
jo
mov
aas
add
cli
imul
stos
sub
popf
fwait
adc
and
cdq
dec
cmp
fst
bound
test
mov
xor
jl
in
push
rcr
idiv
inc
iret
fcmovu
xchg
xchg
mov
inc
clc
xor
mov
inc
pop
mov
lds
pop
lods
jne
loop
(bad)
sbb
sbb
or
and
mov
int
add
sub
les
xchg
pushf
add
lods
inc
and
imul
cmp
inc
push
loopne
mov
jno
ror
in
int
int3
inc
push
mov
test
jmp
fild
mov
in
stos
sub
xor
div
pop
push
aas
add
adc
jl
add
clc
jmp
fbld
movs
mov
lods
jge
rcl
sbb
pop
xchg
scas
stos
adc
push
int
fwait
and
mov
(bad)
hlt
push
xor
mov
and
mov
cmc
dec
mov
mov
or
push
jne
les
sub
dec
popf
add
add
jns
push
pop
inc
(bad)
leave
cmp
cli
jecxz
aas
imul
fwait
xchg
loope
pop
stos
jecxz
daa
ret
jecxz
adc
jnp
inc
aas
xchg
cmp
mov
jge
cli
pop
push
movs
push
repz
push
ds
cdq
mov
mov
jmp
and
int3
mov
sahf
cmp
sbb
lods
xchg
hlt
jne
retf
(bad)
std
jecxz
ss
repnz
das
jnp
sub
pop
fsubr
or
bound
fidivr
xlat
ss
retf
jmp
mov
sub
or
push
lods
mov
xlat
xor
xor
mov
dec
jmp
jns
ins
int3
and
les
xchg
popf
shr
ja
or
pop
mov
iret
mov
mov
xchg
dec
ret
adc
imul
arpl
push
or
jb
icebp
xchg
call
daa
adc
dec
nop
mov
adc
dec
dec
push
repz
mov
nop
in
add
lock
mov
call
add
mov
xchg
xchg
and
xchg
xchg
pop
fiadd
in
stc
cmp
jmp
pop
xchg
jo
rcl
sbb
popf
sub
xor
iret
xchg
mov
xor
sbb
sub
push
and
jg
or
out
loop
int
retf
dec
lds
xlat
mov
sbb
es
xor
sbb
repz
shl
mov
fxch
aam
xchg
out
(bad)
call
cdq
adc
jmp
inc
sbb
in
ja
repnz
daa
cmp
push
nop
sbb
add
and
test
arpl
in
jmp
sbb
xchg
pop
dec
ins
mov
pop
rcr
je
stc
dec
cmp
rcl
mov
mov
ret
and
xor
and
push
(bad)
mov
aam
adc
mov
cmps
pop
mov
mov
loop
movs
mov
sahf
es
sub
dec
je
jno
rol
fdiv
xchg
sbb
pop
fs
pop
pop
dec
fwait
pushf
addr16
cmc
out
int
adc
ja
outs
icebp
rcr
mov
cmp
pop
adc
push
int
mov
sub
inc
cmp
sub
cmp
or
pushf
(bad)
lock
inc
call
mov
adc
push
in
xchg
stos
or
fs
mov
xor
int3
ins
jmp
out
xchg
sbb
sub
sbb
fmul
sub
dec
in
retf
pop
xchg
nop
ror
call
lods
dec
int3
cmc
in
sbb
popf
inc
(bad)
ficom
sbb
jecxz
xchg
(bad)
mov
bound
loop
call
cmp
int3
cmp
jge
out
xchg
pop
imul
xor
push
jno
cmp
mov
inc
icebp
jae
pop
in
add
iret
popa
xchg
and
or
inc
sbb
mov
imul
pusha
mov
mov
fld
fadd
ret
mov
or
jle
std
xor
call
jmp
jb
lock
push
mov
daa
scas
pushf
pusha
xor
pop
push
jns
sbb
fadd
push
mov
test
pop
push
nop
cs
and
jnp
(bad)
mov
inc
iret
scas
pop
(bad)
sti
ficom
xchg
les
push
push
xchg
cmp
xlat
int
retw
jb
cmps
in
mov
adc
push
and
and
into
retf
outs
inc
sbb
mov
in
mov
add
sbb
outs
adc
mov
jg
clc
mov
sbb
int3
or
inc
mov
jno
iretw
repnz
es
sbb
mov
hlt
dec
sub
std
imul
pop
in
imul
neg
test
icebp
mov
push
rol
push
adc
jecxz
jge
sbb
(bad)
gs
std
jle
in
dec
sbb
xor
loop
inc
(bad)
jecxz
test
mov
(bad)
add
inc
ins
icebp
add
sbb
or
or
bound
xor
fs
mov
jb
xchg
cmp
sbb
pop
dec
pushf
or
xor
sub
icebp
lock
pop
dec
fsub
loopne
pop
xchg
or
mov
mov
jo
sbb
retf
mov
sub
jbe
dec
cmps
xchg
adc
and
ror
hlt
dec
mov
lods
or
inc
sbb
mov
cmp
or
jbe
cmp
(bad)
jns
imul
xor
add
in
cmp
adc
dec
inc
fsubr
in
mov
in
jecxz
mov
jmp
mov
and
sbb
es
inc
push
hlt
mov
pop
cmp
popa
xor
jecxz
push
das
arpl
pop
inc
shl
add
fisttp
jge
inc
fcmovnbe
pop
add
mov
jecxz
pop
shr
pop
pop
add
mov
jns
sar
imul
xchg
into
icebp
jge
bnd
imul
add
in
mov
lods
outs
shl
jmp
in
iret
or
jge
ret
add
ds
pop
test
ds
fnstcw
add
or
cdq
out
clc
jns
rcr
int
loop
mov
loopne
jmp
call
add
xchg
ins
cmp
into
fsubrp
retf
fwait
xchg
enter
fist
out
fcmovb
bswap
test
add
mov
cmp
das
and
int3
lock
push
ret
jns
std
mov
inc
add
inc
enter
fcomi
adc
mov
mov
sysret
retf
jp
jne
xor
and
lock
imul
mov
push
addr16
data16
adc
in
sbb
imul
dec
cli
leave
sbb
dec
imul
inc
ss
dec
fsub
jo
pushf
mov
push
dec
fisubr
add
repz
movs
lea
enter
cmc
pop
(bad)
push
cmovge
cli
ss
jle
xchg
mov
add
ficomp
and
jo
call
push
cmp
daa
sub
int3
inc
in
xor
mov
loopne
add
mov
inc
sbb
fmul
sbb
popf
mov
or
out
dec
mov
pop
cmp
push
sub
outs
scas
dec
fild
sub
icebp
adc
xor
mov
fisttp
inc
jmp
lods
jle
push
into
test
shl
(bad)
cdq
xor
adc
sub
push
inc
cmps
add
scas
sbb
or
sbb
arpl
hlt
out
jmp
arpl
xchg
adc
cmp
mov
mov
fimul
and
sahf
or
xor
add
cmc
jmp
sar
movs
mov
jp
pop
or
add
ficom
jge
cmp
je
lods
and
xor
adc
lods
or
ret
sub
(bad)
outs
mov
fs
in
and
mov
xor
hlt
test
out
loopne
(bad)
retf
push
mov
vmread
dec
push
in
sbb
jb
and
mov
jb
xor
dec
lods
addr16
les
jle
loopne
mov
or
fidiv
and
xchg
sbb
mov
mov
pop
add
(bad)
repnz
cld
cmp
cmp
lea
js
xchg
mov
scas
nop
leave
popf
lock
(bad)
jl
jbe
lock
jbe
in
pop
clc
out
pop
xchg
push
cmp
xchg
push
jge
aad
jle
sub
out
inc
(bad)
lock
sbb
push
and
popa
mov
mov
bound
dec
cmps
or
ret
mov
sub
loop
and
sbb
mov
lods
sbb
xor
fs
es
inc
mov
sub
lds
mov
push
xor
dec
push
jne
cmp
test
adc
or
xor
pop
scas
les
xchg
jno
or
xchg
mov
mov
in
out
push
repnz
push
mov
hlt
test
ja
sub
dec
mov
and
imul
jl
jb
pop
cmps
jbe
pop
or
lods
mov
pop
test
push
inc
call
loope
fild
in
popf
shl
mov
pop
push
sahf
(bad)
sahf
xor
add
sbb
fsubr
mov
push
jo
and
or
cmp
(bad)
call
add
fadd
gs
add
inc
push
push
daa
leave
mov
push
jecxz
and
xchg
jne
call
scas
(bad)
push
sar
sbb
stc
les
fs
scas
enter
inc
ja
mov
push
mov
and
mov
xchg
adc
mov
pop
push
jns
enter
mov
call
sub
push
div
scas
add
out
inc
sbb
dec
xor
loop
xlat
aad
sub
icebp
jl
mov
dec
loopne
mov
aam
arpl
sete
pop
jl
push
pushf
jmp
inc
xchg
bound
xchg
loop
cmp
mov
adc
out
push
call
mov
xchg
and
shl
sbb
pop
fidivr
mov
test
dec
popf
pop
aad
out
sti
mov
pusha
pop
or
leave
pushf
mov
popa
retf
dec
inc
mov
pop
push
dec
dec
and
ins
mov
movs
push
xor
mov
mov
push
pusha
push
cmc
mov
sub
(bad)
leave
add
aas
mov
aas
mov
in
sub
xor
xchg
sub
pop
mov
sub
jmp
mov
jbe
push
mul
(bad)
lods
sub
aad
sbb
movzx
pop
add
ret
mov
xchg
(bad)
lods
add
dec
stc
in
fxch
pop
(bad)
mov
inc
push
mov
cmp
lock
hlt
rcr
aad
jmp
aas
cmp
mov
daa
scas
ret
pop
push
fs
(bad)
adc
std
jecxz
and
mov
or
aad
mov
fiadd
mov
add
out
stos
ins
cvtpi2ps
adc
ja
adc
mov
xchg
cmovbe
lea
mov
cld
ins
pop
ds
push
push
push
sbb
cmp
pop
loopne
mov
or
daa
jno
jo
or
leave
ja
sti
cmp
(bad)
sbb
ss
retf
pop
aaa
rcl
jo
(bad)
xchg
mov
cs
test
pop
xor
iret
dec
add
test
xchg
fld
dec
cdq
jo
rcl
push
sti
push
pop
inc
addr16
mov
sbb
(bad)
test
or
jns
int3
div
lahf
dec
dec
ror
jne
shl
test
cmp
scas
out
sbb
mov
xchg
jmp
nop
int3
sahf
sbb
ror
xchg
int3
add
movs
cdq
xchg
(bad)
int3
add
je
(bad)
push
mov
daa
stos
daa
imul
dec
imul
imul
dec
pop
mov
dec
enter
das
ret
adc
fnsave
push
push
ret
arpl
addr16
call
mov
and
push
mov
mov
pop
pop
xchg
scas
mov
js
xor
ret
fdivr
and
fstp
out
in
adc
dec
jae
xchg
pop
cdq
or
push
nop
out
jmp
clc
rol
push
inc
outs
jge
int
gs
mov
idiv
xor
push
jnp
xor
inc
mov
mov
(bad)
arpl
(bad)
mov
fnop
pushf
test
pop
cmp
jne
cdq
imul
pop
inc
sahf
lods
inc
fmul
fidivr
and
fdiv
mov
imul
add
mov
dec
inc
(bad)
mov
sbb
xchg
cmp
sub
rol
call
lods
cmp
adc
inc
das
jecxz
shr
js
retf
daa
push
xor
sti
sbb
ret
ja
jg
inc
leave
xor
je
push
imul
les
mov
adc
popf
bound
cli
pop
mov
enter
inc
mov
jns
cmp
and
mov
cmp
retf
movs
cdq
aam
jbe
and
lds
adc
add
das
pop
outs
dec
ror
cmp
push
xchg
imul
sub
jno
ror
mov
sub
imul
cmp
sar
call
js
xchg
xor
inc
inc
(bad)
fisub
inc
out
(bad)
jmp
arpl
xchg
xor
sahf
retf
jne
inc
and
jne
icebp
test
push
push
add
js
sub
adc
cdq
aad
xor
inc
daa
sti
pop
(bad)
rcr
pusha
cmps
test
cli
add
inc
jnp
sbb
mov
arpl
push
push
xchg
mov
xchg
imul
inc
and
xlat
sbb
push
adc
push
adc
mov
push
push
in
scas
jge
pop
fdiv
ret
pop
in
gs
inc
(bad)
or
cli
add
and
movs
adc
je
pop
add
xchg
push
ins
idiv
scas
xchg
loopne
stc
cmp
xchg
jmp
jmp
out
xchg
or
pop
dec
shl
repz
jne
jae
imul
pop
sub
movs
sbb
inc
rcl
loopne
pushf
push
jae
dec
cmp
repnz
in
sub
loope
add
pop
leave
pop
test
xor
mov
sub
fidiv
sub
sub
out
mov
sub
dec
call
mov
clc
loopne
aad
jmp
nop
jp
fs
mov
fimul
adc
js
inc
cmps
stos
pop
mov
mov
cmps
in
jl
(bad)
and
or
(bad)
mov
jl
call
test
pop
mov
in
dec
xchg
sub
or
add
cli
aam
push
inc
fst
or
cdq
je
rol
stos
shl
mov
ss
push
mov
cmp
out
mov
or
sbb
inc
fadd
jge
popf
add
push
adc
je
mov
jg
jl
lods
mov
nop
mov
xchg
das
aam
or
(bad)
jmp
jg
adc
pop
(bad)
das
push
std
pop
loope
mov
popa
imul
mov
fcmovb
and
bnd
ror
sub
mov
add
mov
push
fcmovne
into
mov
rcr
xchg
adc
pusha
ja
das
sahf
dec
jmp
adc
and
mov
mov
sub
std
push
cmp
dec
inc
add
shl
add
xor
mul
cmps
repz
(bad)
sub
mov
mov
mov
dec
in
(bad)
mov
(bad)
pop
fsub
mov
jne
mov
push
sub
push
sbb
adc
das
cmp
sbb
ds
mov
outs
ffree
das
cmc
lock
xlat
into
cmps
imul
sti
pop
xor
adc
outs
mov
push
std
imul
xor
into
adc
mov
sub
inc
(bad)
adc
jecxz
fisubr
sub
and
pop
push
mov
pop
cmp
in
xchg
sbb
enter
lahf
(bad)
outs
dec
clc
pushf
mov
loop
test
cli
jge
jnp
inc
out
mov
add
xor
pop
cdq
mov
aam
out
jmp
ret
call
hlt
ja
ss
jl
into
push
sub
cdq
mov
leave
sub
jbe
ss
push
dec
daa
cld
push
jns
(bad)
and
xor
push
int3
cmp
repz
(bad)
gs
fild
jmp
sbb
mov
push
jae
addr16
(bad)
in
and
call
aas
into
pop
push
xchg
dec
push
mov
pop
dec
test
mov
jne
push
outs
jbe
int
mov
scas
mov
jecxz
ds
pop
into
test
jb
fimul
cmp
pop
push
fild
xchg
test
movs
jnp
sbb
or
push
inc
jae
adc
std
stos
clc
popa
xlat
xchg
adc
pop
xchg
push
lea
je
fmul
ret
mov
xchg
test
adc
loop
mov
(bad)
enter
aam
aad
dec
scas
stos
pop
dec
pop
mov
mov
sahf
mov
popa
inc
mov
mov
pop
das
not
dec
imul
push
sbb
push
test
into
fidiv
aam
sub
pop
push
jns
adc
dec
inc
jbe
cld
(bad)
dec
jo
inc
je
outs
popa
add
fs
xor
pop
data16
adc
stos
jo
jle
sbb
add
outs
mov
aas
add
inc
jns
sub
das
sbb
lea
xor
mov
addr16
test
lahf
jb
mov
xlat
pop
(bad)
aas
or
mov
lods
imul
into
fbstp
sbb
clc
pop
xor
cmp
(bad)
dec
add
(bad)
ins
fwait
xor
ret
push
mov
sar
nop
sub
cld
(bad)
cli
cmps
and
scas
mov
pushf
test
mov
push
adc
test
out
cmps
mov
dec
xor
out
int
xchg
xchg
xor
shr
movs
fidiv
xchg
xor
seta
add
push
mov
mov
xor
call
iret
aam
or
popa
(bad)
push
cmp
inc
sti
or
lods
dec
popa
xchg
dec
xchg
or
adc
mov
pop
arpl
bound
ja
pusha
and
add
fisttp
jae
pop
fist
das
xchg
ret
mov
jmp
add
inc
fsubr
rcl
sysret
or
mov
jp
adc
int
inc
jmp
push
or
fld
or
cmp
cwde
push
sbb
cli
aad
push
das
mov
xor
ja
lods
out
mov
mov
add
shl
mov
inc
sbb
and
cmp
mov
inc
cmp
lods
sar
clc
retf
pop
pop
imul
popa
pop
lds
mov
xchg
enter
ret
add
inc
cmps
popa
(bad)
dec
test
add
or
xchg
lahf
and
mov
rcl
sub
jbe
jns
bound
cld
mov
mov
pop
imul
cmp
gs
retf
adc
(bad)
int
and
cmp
add
pop
jle
inc
icebp
sahf
mov
cmp
cmp
add
sysexit
call
enter
and
or
test
cmp
and
mov
cs
push
mov
and
call
mov
xchg
adc
cwde
cmps
hlt
sti
fs
mov
pop
pop
ja
mov
bound
adc
fcomp
mov
adc
mov
int3
arpl
mov
xchg
adc
dec
pop
push
inc
sahf
inc
pop
dec
ins
mov
jno
jnp
ins
jle
xor
xchg
and
retf
xor
aam
add
inc
adc
out
das
or
enter
enter
pop
repnz
jp
pushf
xchg
mov
mov
jb
mov
cmp
dec
int3
pop
ret
or
sbb
sbb
rol
dec
lahf
scas
scas
je
pop
cdq
lods
cmovb
sar
cwde
retf
inc
retf
and
shl
push
add
dec
scas
jmp
fist
in
pushf
ds
push
dec
mov
mov
test
or
bound
(bad)
sub
xor
add
loope
lahf
cdq
fsubr
xchg
xchg
mov
mov
xor
mov
lods
push
pop
sbb
xchg
mov
js
sti
loope
jns
mov
in
loop
sub
addr16
fdiv
std
mov
stc
sub
gs
sbb
inc
loopne
(bad)
das
mov
or
sbb
lods
dec
push
mov
loope
pop
fidiv
call
cli
add
inc
cwde
imul
xlat
hlt
adc
pop
push
(bad)
sbb
add
mov
sbb
adc
pop
mov
aam
sub
fs
sahf
std
int3
jmp
dec
push
in
push
in
int
push
aas
(bad)
in
mov
call
xchg
jmp
xchg
mov
imul
retf
ss
jecxz
popa
inc
inc
xchg
jmp
cmp
scas
fld
or
inc
mov
xlat
mov
movs
sbb
add
inc
or
cdq
pusha
jp
out
adc
cmps
mov
sahf
arpl
sbb
adc
cmps
or
pop
xor
fwait
js
dec
out
or
rol
mov
int
test
adc
xchg
adc
(bad)
(bad)
cmps
inc
cmps
ret
mov
mov
dec
sub
pop
test
es
mov
test
shl
lods
in
nop
fnstcw
aad
fisttp
jge
pusha
adc
es
push
adc
idiv
out
jbe
sbb
push
(bad)
out
lahf
push
sbb
test
loope
lods
fidivr
test
movs
mov
lock
adc
fs
dec
arpl
call
retf
ss
(bad)
leave
or
xchg
mov
js
mov
sub
ds
dec
mov
nop
leave
cld
addr16
pop
add
nop
fidivr
es
pop
sar
pop
(bad)
icebp
pop
cs
sub
mov
sbb
mov
pop
cmp
dec
xor
pop
mov
loope
xor
pop
test
adc
push
mov
pop
out
xchg
arpl
mov
pop
mov
dec
sti
cmp
ds
dec
jle
cmp
mov
adc
pop
dec
mov
inc
pop
sub
fwait
push
int3
mov
inc
ret
lock
ret
scas
cs
cli
pop
pop
cmp
out
clc
xchg
cdq
adc
or
mov
icebp
aas
(bad)
and
(bad)
inc
inc
or
test
mov
mov
in
inc
hlt
jge
and
mov
add
aaa
test
imul
(bad)
jmp
(bad)
push
push
popa
ret
pop
shl
inc
jmp
pop
inc
push
ror
ins
pop
shr
lods
mov
xchg
jecxz
popf
rcr
cmp
pop
jp
fcom
pop
cdq
cmps
push
imul
icebp
xchg
imul
(bad)
les
pop
sub
mov
add
enter
cld
std
mov
dec
xchg
jp
mov
sbb
xchg
movs
popf
(bad)
xor
pushf
outs
in
mov
mov
mov
adc
imul
js
mov
mov
mov
xchg
outs
ficom
loopne
ficomp
mov
pop
js
shr
imul
leave
or
int3
sbb
mov
add
popf
jmp
(bad)
jmp
mov
mov
push
and
retf
mov
mov
jbe
sbb
jne
das
loop
int
stos
in
stos
and
push
into
out
push
je
xchg
lock
sbb
pop
inc
sbb
iret
mov
lods
fst
fiadd
aam
sub
add
je
outs
mov
sub
ins
loope
cmp
mov
popa
in
hlt
clc
sub
push
das
jge
arpl
inc
int
bsr
int3
and
dec
popa
xor
cmc
es
stos
shl
sub
ja
pop
pop
lea
dec
and
inc
dec
and
cwde
rol
sub
jmp
dec
jmp
ret
in
fmul
or
jg
mov
mov
test
mov
cld
mov
dec
or
push
push
xor
fnstcw
test
cmp
jb
sbb
pop
icebp
cs
(bad)
sbb
mov
jne
(bad)
push
imul
ret
push
and
je
retf
lea
cs
cmp
mov
les
call
adc
cdq
dec
sahf
pop
fsub
pop
add
les
stc
xor
cmp
inc
sub
icebp
or
and
mov
and
pop
arpl
pop
mov
mov
jmp
mov
ret
stos
outs
sbb
push
push
ins
jecxz
mov
inc
pushf
pop
loop
or
hlt
(bad)
jge
pop
inc
(bad)
sbb
mov
lock
jae
mov
mov
and
push
cmps
daa
stos
mov
xchg
pop
or
push
mov
sbb
mov
repz
scas
push
mov
cdq
dec
sub
pop
mov
ss
(bad)
nop
mov
gs
sbb
sub
(bad)
dec
dec
movs
ret
das
inc
cdq
rcl
xchg
mul
mov
ja
push
push
rol
adc
shr
xchg
sbb
jecxz
lods
mov
and
cmp
push
jns
mov
inc
test
and
xor
out
daa
cmc
cs
ins
adc
inc
jbe
and
test
mov
test
jae
push
or
outs
inc
push
leave
push
dec
inc
jmp
mov
inc
cmp
js
pop
mov
cmp
push
inc
push
push
xchg
imul
add
loop
imul
sub
popa
cmp
or
push
pop
adc
sbb
pop
ret
pop
ret
mov
ret
mov
stc
shl
mov
xchg
scas
(bad)
rol
add
iret
das
cmp
cwde
(bad)
daa
jle
or
imul
pop
repz
lds
or
push
adc
fmulp
or
xor
(bad)
xlat
jns
jmp
out
ret
pop
push
fs
xor
inc
or
outs
sub
fsubr
mov
outs
pop
lds
mov
dec
lds
lahf
sbb
add
dec
hlt
aam
scas
pop
add
lods
or
mov
out
fcomp
pop
cli
cmps
shr
push
pop
int3
es
dec
fldenv
pop
hlt
mov
pop
icebp
sar
cmps
cs
jg
rcr
cmps
jmp
and
dec
mov
ss
mov
jne
neg
shr
xor
adc
jae
aam
rcl
cmp
movs
outs
not
in
retf
add
shr
xchg
dec
and
(bad)
or
sub
sub
fs
fadd
jo
push
sub
test
or
jge
outs
test
inc
sbb
mov
ret
int
sbb
in
pusha
mov
cmp
(bad)
lods
repz
les
fucomp
xchg
adc
xor
jg
aaa
xchg
mov
mov
shr
sti
pop
(bad)
inc
mov
sub
add
inc
fiadd
jp
jb
adc
iret
popf
or
cmp
dec
sbb
lock
sbb
xchg
aaa
aad
cmp
mov
addr16
cmp
jge
adc
xchg
inc
push
data16
sub
mov
movs
cmp
arpl
adc
add
ins
push
push
daa
jge
cmps
in
test
xchg
sub
es
xor
in
ds
aam
pop
loopne
int
lea
mov
adc
int
clc
mov
mov
mov
jmp
loopne
pop
inc
mov
out
leave
sar
push
inc
jns
dec
aad
mov
xor
in
test
shr
pop
mov
xchg
or
enter
outs
inc
cld
ja
and
sub
adc
cli
pushf
adc
test
mov
push
sbb
mov
xor
sub
mov
xor
(bad)
lock
mov
sahf
inc
cmp
push
dec
xchg
lds
inc
sub
test
dec
push
mov
lods
jecxz
add
fsubr
in
cmp
es
gs
call
push
sub
sub
clc
int3
xchg
dec
xchg
gs
imul
inc
outs
or
dec
jmp
cmp
push
shl
les
retf
adc
and
mov
cmp
dec
ret
fsubp
fmul
lea
mov
inc
sub
jge
dec
sub
and
cs
stos
add
aam
leave
or
jbe
dec
rol
in
xchg
and
outs
push
lods
push
(bad)
call
jae
mov
inc
dec
mov
repz
mov
outs
xchg
xor
ds
ret
mov
daa
xor
push
(bad)
mov
xchg
out
mov
fld
cmp
cmps
ror
shl
push
jle
xchg
call
ret
xchg
dec
loopne
(bad)
sub
push
pop
std
push
scas
mov
(bad)
fstp
fidivr
add
loope
sbb
aas
mov
out
or
das
ror
outs
daa
add
mov
or
jmp
cmc
sbb
clc
int
jl
lock
es
ds
xchg
out
pop
ja
dec
inc
dec
mov
(bad)
aas
and
popf
fmul
test
hlt
mov
mov
loop
aam
push
stc
stc
lds
out
popf
stos
mov
loope
jp
or
jbe
jnp
xor
pop
lods
inc
adc
or
pop
pop
aam
dec
mov
xchg
enter
dec
sbb
sub
dec
out
or
cmp
es
sbb
nop
scas
loopne
in
add
cmps
cmp
rol
lods
sub
fstp
adc
cmp
mov
mov
cmovg
mov
in
push
jecxz
dec
mov
sbb
xlat
mov
cmps
aad
fs
ficomp
imul
imul
lds
es
inc
ror
mov
push
retf
aad
xor
shl
aam
sub
sbb
sbb
test
popf
outs
mov
adc
lods
or
adc
dec
inc
jns
retf
inc
xchg
repnz
mov
lods
loop
xchg
ret
repz
pop
rcr
xchg
xor
in
(bad)
jmp
xchg
push
adc
stc
cmc
cmp
rcl
ja
push
adc
pop
fimul
mov
push
inc
test
fidivr
(bad)
fs
sub
out
mov
sbb
jle
mov
adc
adc
push
gs
mov
pop
hlt
fist
(bad)
pop
xchg
ret
mov
(bad)
loopne
sbb
dec
mov
dec
dec
out
test
loop
xor
inc
xchg
mov
mov
jbe
push
jp
xchg
mov
mov
nop
jl
add
movnti
mov
fistp
mov
sbb
inc
add
rcr
(bad)
ret
push
pop
loope
imul
scas
jo
pop
push
mov
fwait
mov
mov
data16
pop
and
mov
sbb
stos
in
cwde
ins
sbb
sub
movs
mov
jmp
ret
ds
xor
aad
xadd
idiv
or
adc
adc
in
xchg
loope
mov
xchg
xchg
mov
and
xchg
stos
test
jecxz
outs
es
inc
dec
or
mov
pop
mov
or
push
into
xchg
les
jge
jno
mov
dec
push
(bad)
in
add
mov
test
ins
fs
fisttp
lods
mov
aaa
dec
fmul
ret
mov
retf
or
sbb
ds
js
adc
mov
mov
int
sbb
cmps
add
inc
push
shl
(bad)
loopne
cs
retf
jp
sub
ss
pop
(bad)
dec
mov
sub
jnp
aam
lods
stos
or
sbb
mov
loopne
and
ret
fld
xchg
mov
out
pusha
outs
cwde
jo
push
jmp
fsubr
sub
fstp
loop
mov
leave
iret
xor
loop
mov
leave
mov
fs
and
mov
jge
cdq
mov
out
adc
pop
fidiv
out
inc
mov
mov
mov
add
cmps
std
sti
mov
movs
leave
cmc
(bad)
fild
ins
and
sbb
mov
xor
sbb
std
aaa
pop
or
dec
std
(bad)
out
cmp
push
xor
xchg
fsub
inc
mov
sbb
mov
jmp
test
sub
dec
sbb
push
mov
ja
into
loopne
mov
ja
xchg
mov
test
adc
xchg
pop
inc
inc
mov
pop
jmp
push
xor
bound
cs
pop
ins
shl
xchg
mov
into
dec
push
push
mov
cmp
clc
jecxz
retf
jb
mov
push
push
in
loop
loop
sub
cwde
mov
sti
rol
inc
leave
xchg
xchg
push
sbb
push
fisttp
mov
in
pusha
mov
xor
and
jg
xchg
jnp
iret
rcr
sub
inc
add
sub
push
pop
xchg
pop
aam
xor
mov
hlt
sbb
rcr
mov
mov
inc
pop
sub
jbe
inc
sub
mov
mov
iret
outs
dec
add
mov
pop
test
add
pop
shr
mov
jae
iret
inc
xor
and
cmp
dec
sbb
loope
leave
out
push
(bad)
mov
push
das
lahf
mov
aad
out
and
cdq
mov
mov
dec
int
adc
mov
or
scas
mov
hlt
sub
es
xchg
out
sbb
pop
or
cwde
sar
lahf
aad
fcmovnb
sbb
dec
jge
enter
fst
mov
(bad)
push
and
xchg
inc
cdq
lods
xchg
mov
xchg
cmp
outs
fdiv
sbb
add
sar
leave
push
or
cmp
sbb
add
shl
dec
sub
mov
loopne
push
adc
jmp
push
mov
push
imul
sahf
fwait
icebp
xor
adc
xor
mov
jle
mov
std
dec
es
out
repz
mov
and
add
mov
mov
cdq
push
shl
lea
mov
inc
pop
(bad)
pop
xor
pop
outs
daa
pop
ret
sbb
imul
aas
or
mov
push
out
not
sar
popa
adc
sub
cdq
push
mov
push
stc
pop
ins
loop
lahf
mov
dec
(bad)
ins
dec
in
inc
mov
cdq
test
adc
sub
adc
out
iret
pushf
xchg
fisttp
or
jno
fisttp
hlt
lods
call
stos
fbstp
fcompp
movs
lahf
jno
das
into
int3
(bad)
fs
xchg
xor
cdq
sub
dec
push
cli
fstp
mov
test
pop
fwait
daa
in
add
sub
hlt
dec
cmp
xchg
add
sbb
js
imul
test
movs
jg
movs
jmp
mov
stos
pop
inc
or
or
leave
xchg
ins
mov
test
sub
repz
aam
pop
dec
ins
in
clc
xor
xlat
mov
sub
movs
test
movs
and
imul
xor
dec
shl
es
out
jbe
shr
gs
pop
sub
jle
cmp
mov
sbb
ja
mov
mov
add
aas
lahf
test
das
add
pop
or
ja
pop
shl
mov
(bad)
icebp
xchg
sbb
sar
repz
cmp
mov
inc
jae
call
in
loope
lahf
daa
in
push
aaa
add
add
jmp
mov
nop
scas
xor
scas
pop
into
test
and
and
push
xor
gs
loope
inc
jno
push
sti
jmp
nop
out
mov
cmp
leave
xchg
pop
fisttp
mov
push
inc
fld
pop
pop
jle
mov
dec
fadd
dec
neg
adc
add
leave
ins
sub
add
rcl
ins
daa
(bad)
mov
push
aam
ror
lods
jmp
ins
dec
int
and
jbe
aaa
cmc
jp
fsub
shl
ror
push
dec
daa
test
xchg
rol
mov
sbb
mov
dec
int3
xchg
sbb
dec
sub
mov
test
stos
mov
fld
jp
sbb
jne
push
jle
mov
pop
ins
(bad)
lds
ror
and
add
sub
cmp
cmp
mov
(bad)
fcmovbe
dec
push
outs
xchg
neg
aas
xor
push
(bad)
fnsave
xor
out
fldcw
and
(bad)
repnz
jo
inc
cmps
mov
or
cmps
bound
lods
ins
cmp
aam
or
ret
ret
mov
jno
mov
pop
jnp
ss
mov
imul
mov
add
push
and
clc
cmps
jmp
fwait
clc
mov
sbb
test
add
rcr
aam
mov
inc
stc
ins
push
cmp
addr16
pop
jmp
out
xor
in
adc
cli
and
hlt
xchg
daa
xor
fld
push
test
aas
mov
les
pop
mov
lock
jae
fdiv
ret
xchg
sbb
into
pusha
into
dec
xor
push
mov
mov
retf
cmp
dec
add
fdivr
loopne
(bad)
out
ins
push
pop
mov
aas
jo
out
adc
test
cs
sub
sbb
mov
add
iret
hlt
mov
push
or
retf
xor
dec
test
in
xchg
pop
sti
dec
push
and
inc
xlat
jge
xor
fiadd
pop
aam
sbb
or
movs
jae
add
inc
stos
stos
push
xor
dec
dec
lods
int3
add
or
(bad)
stc
fnstsw
inc
cdq
aaa
cmc
in
pop
cmp
mov
inc
xor
das
lahf
push
outs
test
loop
inc
ins
retf
ss
outs
xor
adc
fucomi
jg
cmc
cmps
lods
dec
adc
je
push
add
mov
or
jl
lods
xor
cli
add
push
push
das
cmp
fiadd
and
cmp
cmp
jmp
in
pop
(bad)
cmps
mov
xor
dec
mov
fiadd
jp
push
push
push
scas
imul
pusha
iret
cmp
jecxz
sub
pushf
sbb
and
pop
lahf
adc
cdq
mov
pop
adc
pop
neg
(bad)
sub
jg
mov
inc
mov
inc
imul
int
push
mov
lock
retf
cmp
fisubr
sbb
adc
jb
jl
scas
jbe
test
push
adc
call
stos
xor
pop
outs
fsubr
iret
int3
mov
sub
mov
mov
mov
xchg
sbb
fidivr
sahf
dec
add
adc
mov
ins
inc
push
mov
xchg
pop
ror
push
aas
adc
fisttp
pushf
fstp
xor
xchg
mov
jne
cld
push
sub
fadd
sar
mov
sub
push
aam
push
neg
in
fst
sbb
dec
xor
xor
scas
test
and
fdiv
jecxz
sbb
ds
dec
mov
jge
pushf
daa
aaa
outs
jmp
sub
mov
jbe
sub
lahf
sub
xor
cmp
je
faddp
jb
cmp
aas
push
and
data16
data16
xlat
sti
aad
push
push
ss
inc
shl
aas
test
jnp
retf
sahf
xchg
dec
data16
mov
test
cdq
outs
sbb
add
pop
mov
jge
pop
adc
in
mov
sub
push
push
dec
mov
call
iret
pusha
push
jmp
mul
xchg
(bad)
hlt
inc
out
and
shl
popa
cmc
lods
xor
div
outs
test
sbb
aam
add
pop
add
aam
stos
call
or
add
call
adc
xor
mov
mov
adc
push
inc
pop
inc
mov
js
xor
nop
in
sbb
clc
and
div
in
pop
(bad)
in
cmc
cmp
xchg
pop
ins
cmp
cmp
ja
int3
jecxz
icebp
stos
sbb
int3
sahf
push
xor
fidiv
popa
in
sbb
or
rol
loop
dec
lods
mov
(bad)
inc
push
scas
adc
push
js
je
mov
in
cmps
push
ds
jae
mov
fs
femms
jb
mov
in
mov
rcl
pop
mov
sahf
add
rcl
pop
xor
or
xchg
(bad)
mov
fs
jmp
mov
xor
dec
ret
adc
addr16
enter
mov
sbb
push
(bad)
fsubr
xor
xchg
fdiv
sub
shl
ret
xor
and
cmp
movs
pop
pop
mov
and
cmps
and
cmps
jmp
mov
xchg
cmp
xbegin
push
addr16
out
ins
frstpm(287
add
pop
ins
stos
mov
xchg
dec
je
add
jle
arpl
hlt
sbb
pop
repnz
mov
sub
rcl
loopne
adc
test
imul
inc
fild
sub
aas
loope
loopne
xlat
dec
loope
test
sbb
mov
not
call
pop
or
mov
push
loop
ins
inc
xor
push
jmp
stos
fcom
cs
adc
push
jns
xor
fwait
mov
push
and
mov
inc
push
daa
jge
imul
push
in
add
or
into
sub
retf
je
mov
repz
dec
jle
inc
push
loope
pop
push
xlat
stos
cli
jg
mov
fidivr
sbb
dec
por
dec
(bad)
sbb
cmp
jg
ins
je
je
push
cmps
js
int
pop
pop
xor
fwait
pushf
pop
pop
data16
sub
je
xor
jmp
mov
push
dec
xchg
test
icebp
lds
xchg
sub
cs
gs
fnstenv
mov
ds
dec
push
mov
sub
adc
pop
outs
push
lock
cmc
sti
jmp
out
xchg
jle
mov
mov
in
and
outs
div
inc
or
sub
vpsubw
xor
push
or
sub
adc
repz
sar
neg
ins
push
dec
mov
cmp
pop
cli
(bad)
inc
out
or
jbe
jecxz
dec
mov
pop
sub
pop
adc
push
ret
push
push
int3
das
jne
jmp
popf
adc
repz
pop
inc
clc
xchg
inc
dec
inc
cwde
push
mov
and
(bad)
imul
jno
retf
mov
or
sbb
cmp
popf
mov
or
ror
(bad)
fist
jp
imul
stos
loope
xchg
call
xchg
out
adc
jb
xor
pop
movs
or
movs
fwait
mov
sbb
adc
jl
(bad)
outs
push
dec
mov
adc
sbb
or
push
lods
movs
nop
dec
mov
xor
sbb
imul
xlat
inc
mov
out
sbb
ja
cmc
xor
sub
xor
jb
inc
cld
mov
es
aaa
or
aad
pop
sbb
rol
jbe
cmc
ror
push
xor
sub
cmps
in
pop
sahf
call
pop
add
cli
mov
pop
mov
imul
push
jecxz
stos
or
movs
pop
ret
outs
out
push
mov
xchg
mov
sbb
imul
push
dec
mov
inc
cmp
cmp
fadd
outs
pop
add
cmp
jo
cmp
and
scas
aam
mov
mov
cmp
ins
ss
push
mov
mov
(bad)
jp
xchg
(bad)
repz
retf
rcl
sbb
pop
inc
xchg
cmps
rcl
pop
call
test
jg
imul
adc
fucomi
inc
lahf
jns
mov
scas
pop
cmps
aam
movs
push
stos
inc
imul
into
clc
sub
xchg
mov
imul
dec
sahf
mov
pop
cmc
shl
push
outs
clc
adc
mov
and
pusha
cmp
jle
fmul
fstp
xor
lds
out
and
sbb
adc
cmp
dec
pop
(bad)
jge
mov
push
mov
movs
shr
sbb
jge
jae
(bad)
(bad)
add
sub
sbb
scas
push
add
push
inc
ins
lds
dec
push
dec
cwde
pusha
les
jbe
cmp
pop
ret
add
test
lahf
pop
out
popf
push
xchg
dec
pop
arpl
enter
push
add
jmp
daa
stos
add
js
in
movs
aam
cmc
out
or
arpl
loop
fwait
out
jbe
cdq
outs
pop
sti
inc
std
ret
or
icebp
dec
ret
mov
clc
mov
imul
mov
sar
movs
je
out
hlt
or
sbb
sub
sub
xor
push
jg
lds
cmp
dec
hlt
scas
mov
jbe
mov
ds
pushf
int3
call
cmps
cld
or
mov
in
adc
gs
sti
inc
mov
sbb
cmps
call
jno
jecxz
int3
xchg
call
std
pop
add
in
mov
pop
xchg
sbb
or
in
pop
push
pop
fs
and
bound
jmp
mov
arpl
jae
cmp
fcom
or
mov
(bad)
cmps
ret
jp
sbb
pop
ins
stc
sbb
jae
dec
jecxz
rcr
iret
sbb
int3
fist
dec
push
int3
push
call
fiadd
and
jle
in
mov
pop
in
mov
push
test
add
dec
mov
inc
aam
mov
and
ja
enter
mov
icebp
sbb
and
xchg
inc
bound
adc
dec
(bad)
xchg
jge
xlat
bts
call
pop
inc
int
scas
sub
jmp
pop
cmp
rcl
sbb
sub
int
jmp
jnp
mov
jmp
(bad)
pusha
pop
mov
dec
stos
xor
mov
sbb
test
adc
xchg
fsubr
cwde
add
in
aad
mov
mov
xlat
add
cs
mov
pop
xchg
call
jno
mov
xchg
es
mov
mov
dec
inc
nop
cdq
es
dec
(bad)
xchg
mov
push
push
mov
ret
aaa
pusha
leave
cmps
cmp
lds
sti
fisttp
xor
lods
mov
jns
jnp
call
dec
adc
or
out
or
xor
ja
or
data16
and
jbe
xlat
mov
imul
push
pop
mov
das
sbb
inc
dec
mov
xchg
loope
xchg
and
jno
dec
cmp
mov
mov
pop
pop
bound
inc
rcr
pusha
add
jle
push
sub
xlat
sub
out
mov
mov
mov
mov
push
inc
mov
push
and
cmp
loope
pop
xchg
lods
push
dec
mov
push
cmps
mov
std
pop
vunpckhps
repz
dec
int
and
stos
jg
push
mov
push
div
add
mov
inc
add
adc
sbb
les
repz
xchg
daa
test
ins
xchg
add
or
loopne
jmp
(bad)
pusha
in
dec
push
iret
push
add
(bad)
loopne
outs
mov
inc
mov
cmp
in
cmp
and
daa
inc
sbb
fisub
mov
pop
push
test
sbb
mov
add
cld
or
or
push
test
pop
test
adc
call
pop
ret
mov
or
adc
pushf
mov
xchg
pop
dec
jp
fsubr
add
push
push
popa
sub
mov
in
jle
outs
mov
fnsave
pop
inc
mov
mov
mov
xor
add
push
adc
shl
ins
add
into
icebp
add
xchg
adc
call
mov
lahf
cmp
mov
add
imul
test
xchg
xchg
retf
mov
(bad)
vunpckhps
mov
imul
loopne
aam
or
or
leave
push
jmp
pop
out
cld
jle
xchg
icebp
cmc
sbb
fwait
cld
push
rcl
push
(bad)
rol
dec
mov
ja
retf
cwde
cmp
pop
dec
mov
or
xor
xor
int3
inc
jmp
xchg
pop
push
(bad)
sahf
(bad)
daa
mov
or
xchg
xchg
or
mov
xchg
inc
or
mov
dec
aas
ror
mov
adc
(bad)
jns
fstp
addr16
rcr
scas
cld
and
jg
loopne
push
adc
sub
push
rol
(bad)
arpl
in
jecxz
std
jl
call
cdq
mov
dec
int3
icebp
inc
not
cmp
bound
aam
dec
add
sbb
(bad)
nop
(bad)
mov
pop
xor
add
inc
pushf
and
mov
mov
xlat
mov
add
sar
jbe
cmps
mov
push
or
push
xchg
sub
sbb
iret
daa
addr16
mov
pop
iret
xlat
or
cs
inc
pop
inc
movs
push
imul
daa
and
xchg
inc
mov
into
sbb
push
fcmovbe
scas
fbstp
push
dec
out
and
lds
popa
push
cmc
mov
call
jge
loop
bound
pop
xchg
xchg
gs
inc
mov
retf
leave
adc
jle
xchg
dec
or
pop
push
jmp
fiadd
dec
mov
push
mov
movs
fwait
cld
jmp
mov
aam
push
loope
and
cmpxchg
ins
mov
icebp
mov
in
aas
iret
sbb
add
popa
cmp
jno
inc
stos
sbb
repz
pop
inc
sti
rol
cmovs
pop
pop
outs
aad
inc
cmp
xor
ins
or
xchg
mov
xor
retf
stc
jl
cmp
xor
loop
or
imul
lock
push
stos
inc
test
imul
retf
in
add
fldenv
cdq
pop
pushf
aad
dec
sub
cli
mov
lahf
bound
adc
jns
xchg
jnp
xor
add
xlat
call
jmp
add
ret
enter
add
(bad)
jo
inc
iret
scas
mov
fucomp
inc
inc
add
lods
pop
test
add
ret
mov
adc
shl
outs
std
test
mov
or
outs
inc
mov
fwait
outs
in
and
fnstcw
fisubr
nop
sbb
clc
jp
cwde
ret
mov
pop
ss
sbb
add
push
sub
xor
cmps
jge
(bad)
addr16
push
outs
sub
inc
mov
lock
dec
mov
cmp
add
cs
or
imul
push
pushf
scas
popf
lea
add
sti
sub
fwait
jno
rcr
(bad)
in
lods
(bad)
ficomp
jo
iret
push
das
inc
mov
cmp
mov
dec
mov
push
xor
rcr
add
xchg
mov
mov
nop
das
out
sar
and
shr
(bad)
out
xchg
aaa
add
mov
xor
pop
mov
or
cmc
stc
fsub
sahf
mov
sbb
mov
xchg
sbb
jns
es
xor
fcomp
ret
test
add
sbb
fadd
les
out
sbb
call
xor
cld
or
push
mov
mov
repz
sbb
adc
mov
popa
das
scas
mov
dec
add
sbb
xlat
mov
push
ret
retf
div
jbe
xchg
xor
xor
repz
inc
mov
inc
cmp
outs
xchg
mov
in
or
sub
dec
xchg
ja
or
hlt
cld
jnp
and
out
enter
mov
shl
test
into
mov
pop
inc
pusha
jbe
cmp
stos
into
jge
dec
call
imul
push
pop
sbb
and
aam
xor
test
movs
mov
enter
repnz
out
ins
adc
or
cmp
mov
jmp
push
mov
jmp
test
mov
mov
or
push
cmp
push
leave
cld
sahf
xchg
clc
and
ins
mov
inc
and
outs
xchg
in
mov
pop
inc
imul
xchg
xor
(bad)
out
shl
pop
jg
cld
outs
adc
ret
jne
cs
imul
retf
jl
mov
ficomp
outs
push
out
pop
mov
jge
mov
adc
jne
push
jmp
div
fld
fst
imul
into
pop
jo
lock
lea
js
push
gs
jns
into
xor
pop
mov
ins
sbb
push
push
push
lahf
sub
mov
jge
call
cmp
leave
jmp
popa
mov
mov
mov
movs
aad
dec
mov
sti
add
sbb
jg
pop
pop
nop
lea
(bad)
jns
cli
mov
push
adc
fidivr
adc
cs
idiv
sbb
comiss
xchg
sub
jg
dec
dec
stc
dec
mov
sbb
jl
test
fdiv
sbb
jns
das
jbe
mov
dec
shr
mov
aam
inc
mov
pop
(bad)
cmp
xchg
neg
adc
mov
dec
xchg
repnz
cmp
xchg
inc
jg
scas
call
inc
iret
xchg
or
add
scas
cmp
sub
ja
inc
jecxz
lods
(bad)
data16
adc
lock
lea
stos
addr16
(bad)
jle
in
(bad)
xor
out
lods
sbb
push
ss
test
(bad)
push
dec
call
test
add
cld
add
add
push
xor
xchg
pop
sbb
xchg
fldcw
fstp
or
or
test
sbb
pop
pop
popa
loopne
cmps
mov
ja
jmp
jne
cld
cmp
mov
pop
(bad)
(bad)
xchg
xlat
retf
out
pop
jecxz
out
in
into
inc
or
sbb
sub
fdivr
inc
mov
and
push
and
sti
cwde
or
sahf
shr
inc
je
(bad)
aas
jbe
sub
test
xor
je
jbe
xor
cmp
xlat
(bad)
call
fadd
adc
push
sub
pushf
xor
adc
add
push
mov
push
sbb
ds
push
jg
pop
mov
jne
push
mov
xchg
mov
sub
les
add
sbb
adc
mov
xor
jle
test
pop
jmp
pop
cmp
and
js
sbb
jae
mov
sbb
dec
or
leave
dec
dec
div
ret
dec
bound
adc
sbb
fcmovbe
pop
cmp
sbb
clc
int3
scas
scas
inc
xchg
add
pop
jp
dec
loop
push
test
xchg
or
sbb
push
ja
jb
popa
ins
int
cmp
push
out
daa
jl
inc
jbe
rol
daa
aad
or
not
pop
cdq
mov
into
pusha
xchg
adc
cs
pop
sub
adc
call
inc
fbstp
add
sbb
retf
dec
sub
loope
jae
xor
xchg
repz
mov
sub
test
(bad)
rcr
fld
add
jne
fld
dec
fdivr
cmps
call
inc
or
jns
adc
pop
sbb
or
or
xchg
jbe
sbb
cld
in
mov
adc
jg
inc
in
and
push
xor
add
mov
mov
sbb
or
mov
cmc
cmp
adc
rcr
rol
retf
sbb
in
push
inc
pusha
cmp
aam
aas
mov
jmp
cmp
dec
mov
nop/reserved
into
and
hlt
ss
outs
fwait
scas
shl
in
test
movs
xor
pop
add
xor
fstp
mov
add
sahf
jbe
xchg
fld
(bad)
cwde
and
sbb
xchg
or
hlt
fld
mov
mov
sub
leave
cmp
xor
cs
aas
push
mov
dec
call
adc
mov
ds
lods
retf
enter
out
fdivr
ja
scas
inc
jl
stos
movs
sub
mov
push
outs
or
sub
pop
in
cmp
cmps
mov
inc
pop
jg
jns
(bad)
sub
hlt
test
cmp
cmc
loop
je
jl
mov
inc
add
dec
imul
es
dec
sub
ins
imul
mov
mov
lock
push
in
leave
loopne
lds
(bad)
test
jo
sub
or
sub
(bad)
mov
xor
xchg
mov
mov
add
lahf
in
add
xchg
lds
inc
loope
sub
mov
push
outs
jae
push
aam
fwait
out
int3
jp
and
xchg
call
int3
cmp
scas
mov
pop
xchg
sbb
fst
pop
inc
je
dec
xchg
call
mov
inc
mov
push
mov
mov
ret
xor
xor
xrelease
pop
popw
pop
push
xchg
sub
jl
out
dec
xor
mov
dec
fdivr
aad
sbb
outs
hlt
fadd
mov
test
dec
ror
cmp
mov
pop
xchg
dec
sub
xor
cmps
push
aaa
pop
sub
int3
sub
adc
daa
cmp
out
sub
pop
stos
add
shr
sbb
out
xchg
sub
stos
imul
lahf
and
jp
hlt
xor
mov
xchg
aaa
cmps
mov
mov
stc
cmps
hlt
iret
mov
xor
aam
(bad)
xor
xor
addr16
out
xlat
(bad)
les
(bad)
push
enter
mov
pop
cmp
mov
ds
outs
outs
je
or
repz
adc
imul
call
sti
int3
in
pop
xor
pop
js
shl
jecxz
loopne
jns
mov
movs
clc
adc
cmp
xor
in
iret
mov
mov
ss
aad
outs
xor
or
mov
sub
sbb
cld
ins
push
sbb
lea
xchg
pop
dec
ret
outs
xor
sub
xchg
les
inc
pop
les
pushf
xlat
xor
push
mov
dec
cwde
aam
sub
cmp
int
jmp
adc
dec
pop
adc
sbb
cld
fstp
ds
push
push
nop
bound
aad
stos
mov
je
xchg
cwde
dec
shl
sti
test
inc
cs
jae
push
stos
or
mov
in
dec
sub
adc
add
inc
scas
add
fwait
sar
(bad)
jp
sub
mov
ror
mov
data16
push
aam
gs
pusha
rcl
icebp
or
in
jmp
ins
dec
inc
cwde
cwde
scas
fcomp
push
xchg
sbb
pop
popf
mov
sbb
mov
popa
ror
mov
or
mov
cmps
sti
pop
add
lea
popa
xchg
imul
pusha
dec
popa
sub
inc
lea
sbb
stc
cmp
add
adc
xchg
lds
jle
inc
adc
icebp
cmps
inc
xchg
enter
stc
and
loope
adc
fidiv
push
push
sahf
or
ror
cwde
xlat
scas
dec
or
mov
leave
jae
loop
popa
shufps
hlt
add
sar
sub
pop
sub
sub
add
sub
jae
or
dec
cdq
repz
clc
rcl
mov
addr16
cmp
mov
pop
adc
add
add
stos
fisttp
scas
mov
cmp
out
das
cmp
outs
(bad)
ins
test
fmul
mov
sbb
call
xor
pop
mov
adc
outs
popa
imul
cmps
or
scas
and
mov
popf
ret
xor
js
mov
xchg
call
cmp
stc
loop
xchg
or
ss
push
or
icebp
(bad)
mov
cld
out
add
ins
inc
add
das
and
push
imul
(bad)
out
call
mov
push
ret
shl
mov
cmp
jecxz
mov
adc
outs
mov
and
bound
sub
jmp
mov
dec
mov
sub
ss
jg
xchg
pop
pushf
mov
cwde
inc
imul
retf
vminss
adc
fstp
int
in
das
cmps
jmp
in
std
jmp
imul
loopne
pop
jp
cs
fmul
stc
adc
fiadd
adc
pop
fsubr
xchg
call
pop
lds
ds
adc
cmp
test
and
call
adc
cmp
push
cmp
fs
pop
fcom
sbb
xchg
lods
dec
lahf
fiadd
mov
jge
inc
mov
and
retf
push
cs
jb
ror
cmp
jg
jl
jge
push
lods
xchg
jp
sahf
call
xor
mov
xchg
adc
push
xor
jmp
push
(bad)
popf
and
push
shl
pop
stos
aad
jae
stc
fwait
dec
mov
add
sub
xor
pop
push
pop
sbb
mov
ret
ins
outs
sbb
pop
sbb
(bad)
ret
imul
fistp
cmc
inc
enter
xchg
xchg
mov
inc
pop
mov
repnz
push
pop
mov
cdq
jno
dec
xlat
inc
loope
out
pop
cmp
mov
sahf
inc
les
lahf
xchg
out
mov
dec
lods
je
imul
sbb
lds
out
push
sbb
ret
inc
xor
sub
xchg
cdq
aaa
adc
push
push
add
and
outs
loope
lods
scas
mov
or
add
inc
cld
cmp
outs
fild
pop
add
push
mov
push
retf
dec
sbb
movs
cmps
lahf
add
sbb
push
jp
adc
adc
inc
pop
inc
sbb
mov
fs
hlt
and
mov
imul
mov
dec
dec
sub
xchg
xchg
sub
jp
push
clc
xor
inc
inc
push
xor
pop
sub
out
mov
pop
les
mov
sbb
(bad)
cmp
retf
jo
call
ins
jmp
pop
inc
jae
rcr
pop
mov
mov
push
pusha
jb
xchg
mov
add
adc
fiadd
add
cmc
and
push
cmc
lds
sbb
out
repnz
or
addr16
leave
cmp
(bad)
dec
(bad)
mov
cmp
and
xchg
cmp
pop
dec
inc
push
adc
fidiv
scas
repnz
xchg
or
adc
rol
pop
inc
loope
cmp
mov
push
les
cmp
or
xchg
stc
test
retf
movs
pop
dec
xor
ret
lock
jnp
je
fist
cs
loopne
push
mov
aad
sar
int3
arpl
popf
test
xlat
cmps
ret
jg
sub
pop
dec
rol
gs
aas
xor
popa
popf
out
mov
in
cmp
sub
pop
test
sbb
xchg
mov
pusha
shl
pop
xor
test
inc
cmp
test
cld
lds
xchg
js
and
or
pop
push
push
push
pop
ins
mov
aad
es
xor
inc
punpckhdq
fnstsw
retf
(bad)
loop
mov
in
(bad)
push
and
and
adc
test
retf
fcmovu
cmps
or
xchg
(bad)
sahf
mov
jmp
xchg
sub
ins
inc
ffreep
(bad)
mov
ret
sub
les
or
test
add
inc
cmp
and
scas
cmp
(bad)
sub
jl
outs
cld
push
or
inc
push
bswap
add
inc
loope
ins
adc
loope
call
jmp
adc
and
hlt
jp
sub
sbb
into
jmp
out
add
neg
fnstenv
xor
rcr
scas
mov
nop
pushf
lock
and
lock
or
push
xchg
out
cmp
repnz
shl
ret
ret
pop
xor
js
push
mov
popa
xchg
add
adc
pop
mov
inc
xchg
dec
mov
dec
jmp
movs
out
xor
sub
call
psllw
scas
xchg
popa
xor
mov
ror
jmp
aaa
mov
push
test
inc
jle
sbb
shr
jle
jo
add
in
shr
and
mov
leave
in
add
mov
xor
sahf
fiadd
ja
pop
sti
sub
add
xchg
mov
dec
pop
lds
push
push
jbe
daa
in
scas
jle
pop
and
mov
adc
inc
fistp
iret
mov
sti
adc
pop
mov
daa
xchg
fmul
xchg
inc
sbb
out
mov
std
(bad)
add
adc
mov
sub
sti
fwait
or
mov
jmp
pop
test
inc
inc
icebp
xor
xchg
in
test
push
mov
mov
push
or
(bad)
jmp
in
inc
mov
pop
fcmovb
add
jb
int3
sub
cmps
inc
and
in
adc
xchg
mov
lds
xor
aam
in
sbb
and
popa
mov
mov
movs
shl
popa
pop
push
xchg
ret
bnd
aam
in
push
ja
push
mov
dec
or
mov
in
xchg
push
adc
cwde
daa
lods
xchg
cs
int
ror
mov
or
mov
sub
in
jbe
sbb
loope
arpl
int
or
ja
dec
pusha
mov
push
ins
jg
and
sbb
enter
mov
std
jecxz
xchg
call
int3
jge
or
inc
out
sbb
mov
and
xor
pop
js
xor
aaa
xor
xchg
xchg
mov
rcl
out
jl
aad
or
das
es
stos
daa
imul
leave
and
sbb
inc
jb
dec
mov
mov
test
call
ret
dec
test
add
loop
shr
outs
or
jo
ss
jb
xchg
adc
mov
xchg
outs
lods
mov
les
movs
icebp
push
mov
mov
push
or
fs
bound
lods
lea
or
lods
inc
xor
sub
mov
mov
xor
arpl
push
add
adc
jl
mov
je
sbb
mov
mov
push
popa
pop
out
add
mov
pushf
popf
add
push
test
mov
or
(bad)
jnp
mov
rcl
push
frndint
mov
sub
xchg
je
loop
jae
and
xchg
inc
scas
sub
sub
inc
fcmovbe
das
cmps
jnp
pop
xor
repz
fsubr
lds
adc
das
mov
sub
sti
sbb
inc
popa
mov
mov
call
je
popf
test
je
pop
mov
push
push
cwde
jle
dec
dec
shl
pop
cmp
add
push
adc
mov
jno
(bad)
lods
cmp
inc
or
push
jnp
nop
fdivr
arpl
inc
push
mov
push
or
or
jmp
mov
(bad)
mov
mov
jae
cmp
sub
jno
pop
test
jae
jl
popf
lock
inc
push
pop
or
mov
repnz
push
sbb
std
movs
pop
sbb
mov
loop
arpl
dec
(bad)
push
call
in
loop
xor
ins
inc
popw
call
xchg
sbb
mov
xor
loopne
and
dec
shl
sbb
dec
fsubp
(bad)
popa
out
pop
xchg
add
shr
xchg
pop
jg
push
jmp
rcr
dec
add
imul
idiv
push
pop
ins
pop
adc
inc
xor
mov
push
inc
mov
xchg
jl
cwde
push
scas
mov
inc
ret
aam
ret
jb
add
cmp
repnz
pminsw
in
pushf
cmps
jo
cmp
sub
shl
sub
fimul
pop
fsubr
fsub
int
inc
dec
cdq
jns
cli
jmp
into
idiv
xchg
add
lds
xchg
(bad)
jg
ds
xlat
xchg
pop
(bad)
adc
push
push
push
mov
movs
cld
cld
xor
out
add
test
or
shr
shr
popf
sub
push
iret
or
add
cs
xor
out
rcr
sbb
pushf
xchg
cs
or
mov
ins
nop
inc
and
sbb
mov
jb
or
push
cdq
push
sbb
clc
mov
dec
or
fdivr
mov
lock
push
hlt
jecxz
test
mov
inc
sbb
mov
stos
fbld
pop
(bad)
dec
jo
rol
xor
mov
sti
cmp
rcr
sbb
xor
loop
dec
mov
pushf
imul
xchg
repz
cmp
mov
xor
xor
lods
lds
xor
adc
add
jle
jbe
gs
mov
mov
xor
bound
pop
shl
push
dec
cmp
or
jae
inc
daa
retf
adc
arpl
aad
stos
pusha
fcmovbe
jge
pop
push
call
cmp
lock
daa
or
push
lock
fidivr
mov
in
dec
jmp
data16
sub
out
cmp
pop
pop
jge
es
repnz
xor
mov
jne
dec
ror
movs
lock
sub
dec
ja
ror
stos
inc
je
xchg
sub
movs
or
mov
icebp
in
adc
and
aas
inc
cli
xor
jl
inc
xor
scas
bound
pop
sbb
dec
xor
lock
xchg
ss
popa
jo
push
repnz
ins
aas
mov
frstor
fistp
inc
test
xor
inc
fisttp
shl
add
inc
outs
push
out
cmc
data16
inc
jge
pop
inc
and
lods
or
xor
call
jge
sbb
popa
mov
cmp
jle
inc
inc
mov
jmp
push
sbb
je
inc
push
mov
stos
sbb
add
ret
xchg
mov
dec
mov
or
retf
aaa
fisub
or
mov
cmp
mov
adc
pop
ja
mov
cmovge
out
(bad)
rcl
pop
rol
js
inc
lods
call
ins
in
(bad)
xchg
jle
jns
dec
pop
mov
and
mov
push
cmp
sub
and
int
jg
mov
or
lahf
fdiv
adc
pop
or
add
mov
xchg
mov
jns
outs
cmps
mov
gs
sbb
in
mov
mov
test
(bad)
aas
std
push
mov
shl
cmc
dec
fnsave
pop
adc
sub
inc
xor
mov
test
fcomp
ss
outs
(bad)
idiv
ret
mov
loop
or
ret
jge
out
std
cli
adc
pop
or
mov
loope
shr
xchg
xchg
cwde
xchg
fcmovu
or
jno
pop
pop
bound
scas
adc
jne
aaa
rcr
pop
cmp
outs
rol
loope
mov
xor
into
sbb
clc
push
pop
inc
sub
pop
adc
mov
aam
fwait
inc
fwait
mov
lods
(bad)
cmps
dec
hlt
std
push
out
ficomp
jo
mov
repnz
scas
ins
outs
iret
lea
leave
icebp
pop
or
mov
fmul
in
push
jbe
xchg
cli
adc
fcomp
out
add
pop
push
jae
iret
xchg
(bad)
jmp
mov
add
test
mov
pop
and
fimul
push
xor
jo
or
and
popf
ficom
stos
xlat
push
in
fwait
hlt
daa
push
mov
cli
addr16
add
inc
mov
fucom
std
mov
cli
xlat
loope
into
fs
aam
mov
cmps
mov
push
in
nop
mov
jge
hlt
xchg
lea
cdq
cmp
add
int3
(bad)
dec
in
push
lds
fldpi
mov
mov
cmp
xchg
mov
pusha
aaa
nop
into
push
inc
jp
dec
add
dec
add
jo
cmps
sbb
arpl
(bad)
lahf
loop
movs
sub
mov
mov
cmp
sbb
mov
cmp
jne
mov
add
jnp
jns
stos
cmp
std
jae
inc
iret
fdiv
test
mov
xor
or
xchg
jae
jae
std
mov
adc
pop
in
clc
sti
add
push
sub
ret
mov
push
mov
ret
ror
iret
out
inc
popa
dec
and
fistp
mov
sub
mov
ror
fimul
pmuludq
data16
adc
clc
in
mov
sub
sub
sbb
and
das
lods
mov
call
mov
ja
(bad)
into
ret
rcl
sub
and
sbb
mov
pop
jmp
mov
test
jmp
sar
lods
dec
fiadd
jmp
out
jo
dec
cmp
retf
adc
imul
xor
gs
scas
int3
inc
sahf
mov
mov
stos
mov
adc
lock
inc
in
ins
and
jl
(bad)
repz
cmp
mov
inc
xor
fld
mov
cmp
jmp
dec
out
adc
cmp
mov
jnp
das
push
cmps
pop
xor
addr16
fisttp
imul
ja
inc
adc
inc
scas
or
sub
or
sti
scas
std
mov
and
push
sahf
hlt
push
test
pop
jae
pop
push
adc
fidiv
fs
repnz
ret
or
inc
out
movs
std
test
je
cmc
jecxz
idiv
sub
scas
stos
ss
(bad)
icebp
lea
xchg
mov
xchg
adc
dec
test
in
xchg
pop
fdivr
stos
jge
shl
push
sub
sti
adc
inc
repnz
sbb
dec
test
scas
jno
mov
xor
shl
imul
sbb
mov
das
pop
sbb
outs
rcr
aaa
sub
sahf
shl
in
push
add
pop
pusha
xchg
(bad)
stos
mov
retf
pop
mov
jns
leave
mov
daa
adc
je
adc
sub
push
imul
sbb
cmc
(bad)
adc
ds
vpor
mov
mov
fwait
xor
(bad)
sub
aam
in
shl
pop
xchg
pop
imul
test
mov
inc
adc
inc
ror
pop
cld
jno
outs
push
mov
mov
rol
adc
pusha
mov
out
pop
push
xchg
inc
xchg
adc
xchg
fnsave
add
movs
retf
ret
cmp
iret
jb
loope
pop
in
mov
mov
cmp
sub
xchg
xor
pushf
mov
ret
outs
pop
lock
in
add
push
jbe
retf
lock
stos
xchg
out
test
adc
jae
fcomp
sub
lods
cdq
inc
nop
pop
test
lock
adc
imul
gs
push
xchg
nop
stos
aam
or
xchg
mov
jge
call
pusha
pop
inc
ja
(bad)
in
xor
inc
cmp
aam
add
cmp
sub
inc
int3
icebp
cmc
stos
sahf
pop
fisub
rol
cld
xchg
shl
pop
fmul
and
or
mov
lock
or
xchg
add
sub
test
scas
xchg
push
push
call
sub
stos
inc
pop
jne
scas
fisubr
or
gs
xchg
mov
cdq
and
(bad)
jo
movs
icebp
xor
jle
mov
push
dec
mov
sbb
clc
sbb
test
scas
mov
or
or
add
daa
sbb
cmps
sbb
cmp
cmp
or
sub
outs
(bad)
rcl
lds
xchg
popw
fwait
not
mov
cmp
adc
stc
retf
add
lahf
jmp
mov
jmp
hlt
push
pop
fld
sbb
and
icebp
push
dec
adc
aad
retf
jne
lock
mov
add
add
dec
jp
pop
sub
(bad)
out
scas
daa
sbb
jns
dec
ja
mov
loop
sti
mov
push
pop
jg
push
neg
into
cmp
test
pop
out
jne
imul
mov
dec
(bad)
fimul
jecxz
pop
xlat
ret
fistp
bound
mov
mov
cmp
cmp
push
fcomp
cmp
popf
xor
mov
push
sbb
ja
out
adc
pop
mov
jp
sub
cmp
xchg
inc
mov
mov
or
xchg
mov
mov
ficom
xchg
sub
or
ret
mov
clc
ficomp
mov
jmp
jg
leave
mov
add
mov
outs
add
mov
scas
out
pop
sbb
jle
sbb
jbe
or
popa
xchg
add
stos
jno
aam
jmp
(bad)
sub
rcr
and
xor
jae
lds
movs
inc
xor
arpl
sbb
pop
div
(bad)
outs
mov
fcom
fsub
dec
not
mov
xchg
dec
aas
pop
mov
jmp
data16
push
call
and
mov
push
out
sub
cmps
aam
(bad)
in
ret
cmp
mov
inc
nop
cmp
adc
jmp
mov
dec
push
in
sbb
xlat
pop
push
pushw
push
loope
int
popa
inc
scas
out
adc
dec
ins
not
out
push
lds
out
inc
xchg
push
cmp
rcr
dec
dec
inc
(bad)
jmp
popf
add
cmp
aas
mov
mov
imul
rol
push
mov
iret
jg
test
es
jmp
dec
aaa
cmc
cmp
push
add
dec
in
call
xchg
xchg
mov
lahf
ds
shl
retf
popf
mov
mov
popf
or
cmp
sbb
popf
push
ds
(bad)
repnz
lahf
test
mov
(bad)
mov
shr
jne
cmp
jo
nop
unpckhps
xchg
es
fisub
shl
das
push
xor
loop
(bad)
or
mov
scas
or
aas
lock
push
outs
cwde
hlt
imul
call
cli
push
lock
jl
xchg
cdq
fild
jno
cwde
(bad)
daa
sbb
inc
push
mov
sbb
cld
mov
pop
xchg
retf
sub
js
cmp
jge
xor
add
xor
push
mov
(bad)
sbb
sub
adc
mov
push
jb
push
dec
inc
sbb
imul
jbe
cld
or
mov
adc
lods
push
inc
aam
fdivr
xor
clc
dec
test
dec
shl
loope
ja
in
and
test
sar
dec
and
in
and
cwde
cld
push
mov
mov
jb
xchg
pop
lods
or
daa
xlat
fadd
aas
push
adc
retf
sub
xchg
mov
mov
push
stos
ins
push
push
outs
sub
fs
mov
fwait
in
xchg
retf
(bad)
add
ror
fsub
lods
ja
mov
pop
and
xchg
xchg
and
jl
xor
dec
mov
loop
mov
mov
xchg
and
pop
adc
aas
sbb
pushf
(bad)
dec
imul
sbb
cmp
jmp
fisttp
jae
xchg
fisttp
xchg
inc
(bad)
mov
into
retf
out
cmps
dec
loop
sub
push
call
mov
cmp
xchg
into
les
inc
fidivr
cmps
or
sbb
sub
movs
push
cmp
inc
aaa
int
push
aad
cmp
push
mov
mov
push
and
pop
fnstcw
xor
std
test
addr16
test
sbb
imul
cld
jmp
lea
mov
xchg
sar
cmp
push
push
into
imul
xchg
aas
pop
js
gs
enter
jno
jecxz
in
imul
ins
mov
pop
jno
adc
adc
aaa
aam
mov
push
bound
dec
cmp
push
push
daa
inc
pop
and
test
clc
jnp
cmc
xchg
inc
jle
mov
mov
les
in
mov
scas
add
or
aam
push
jle
aam
or
mov
test
jb
jg
imul
or
outs
fistp
data16
mov
mov
add
rcr
pop
lahf
push
cld
pop
push
jne
xor
icebp
sbb
fcom
cmp
(bad)
je
push
xor
jno
or
sub
push
xlat
lds
test
dec
in
jae
jmp
out
dec
sti
push
and
retf
call
push
mov
loop
dec
adc
sbb
aad
pop
push
test
push
jns
or
pop
mov
enter
sar
pop
js
jbe
or
cmp
sbb
imul
shl
jmp
cwde
adc
push
sahf
inc
jo
iret
(bad)
in
xchg
cli
je
shr
pop
push
sub
mov
sub
xchg
data16
pop
out
mov
in
mov
and
ret
xchg
(bad)
inc
mov
sbb
adc
pop
sbb
or
jmp
pop
push
push
shl
arpl
push
and
movs
xchg
adc
and
mov
mov
ss
cdq
fistp
xchg
out
cmps
pop
dec
push
out
repnz
add
into
xchg
jae
rol
aam
dec
out
sub
xchg
jp
cmp
dec
xchg
loop
sbb
mov
mov
mov
fmul
inc
sbb
test
int3
sub
jns
jecxz
ja
movs
(bad)
cmp
xor
retf
inc
adc
push
outs
pop
daa
cwde
jno
mov
mov
push
adc
rol
das
test
cmp
fwait
(bad)
std
gs
add
mov
in
rcl
jmp
test
aaa
xchg
mov
mov
xchg
pop
in
push
test
and
or
in
enter
scas
inc
inc
rol
jmp
push
js
and
inc
or
pop
pop
xor
cmps
lods
pop
rol
fist
retf
enter
mov
push
lds
aam
lods
or
aad
pop
cwde
fst
and
xchg
imul
push
cmp
inc
and
ja
xchg
push
div
pop
(bad)
xor
shl
ficomp
sbb
sub
push
mov
jl
and
xor
mov
adc
lods
imul
nop
xor
mov
fild
movs
sbb
jp
mov
cmc
xchg
outs
mov
jecxz
dec
jne
add
mov
in
jo
call
jb
add
adc
lahf
lahf
pop
(bad)
out
mov
cmp
xchg
push
push
mov
rcl
jle
push
fdiv
(bad)
fld
dec
adc
sub
sub
mov
xchg
mov
call
and
inc
mov
cmp
fild
(bad)
pop
loop
mov
sbb
sub
mov
jne
arpl
push
pop
daa
sbb
repnz
call
inc
cdq
stos
mov
test
pop
jg
jecxz
cmp
pop
imul
adc
jg
nop
in
mov
jp
mov
mov
in
bound
mov
and
xchg
sar
xchg
adc
push
bound
rcl
cmp
mov
jne
out
adc
adc
mov
mov
call
and
push
and
shl
sbb
imul
jno
mov
fsubr
(bad)
xchg
loope
xlat
dec
jb
iret
cs
cmp
fcom
div
shl
push
dec
sub
or
mov
cmp
(bad)
mov
in
or
dec
(bad)
push
jns
push
adc
inc
loope
lea
xor
ins
mov
scas
dec
in
add
cli
enter
push
aaa
mov
and
pop
pop
push
pop
fdivr
fist
mov
dec
sbb
mov
aad
es
push
(bad)
in
les
sbb
mov
dec
mov
ja
add
push
mov
jne
pop
das
push
and
add
outs
arpl
ins
enter
mov
jns
stc
(bad)
jbe
mov
ds
pop
xchg
test
fnstcw
out
xor
jmp
dec
pop
xchg
push
imul
inc
pop
xor
xor
mov
in
popa
and
cli
dec
xchg
inc
add
and
popa
jbe
add
push
mov
popf
fcom
sbb
in
dec
movs
and
stos
retf
inc
cli
loope
repnz
inc
fldcw
adc
jecxz
ficom
cmps
imul
sbb
and
push
movs
in
dec
ins
ja
adc
arpl
lock
in
dec
pop
dec
mov
mov
xlat
mov
mov
jl
mov
adc
push
movs
test
aaa
dec
lahf
mov
mov
lods
cld
jnp
dec
xlat
(bad)
inc
sbb
jl
adc
sar
adc
mov
mov
rol
mov
sbb
or
pmaddwd
je
pusha
lods
jno
repnz
xchg
cmps
cs
xlat
daa
pop
push
xor
xor
(bad)
imul
sub
add
std
jmp
pop
adc
pop
xchg
mov
inc
out
dec
sbb
cli
out
or
xor
xor
mov
retf
adc
(bad)
(bad)
in
in
repnz
aaa
mov
shl
sahf
fist
fsubr
bound
aad
std
add
lds
sbb
xchg
fcom
xchg
test
jmp
(bad)
fsub
xor
stos
in
es
and
pop
pop
add
aam
(bad)
out
pop
jne
jecxz
inc
and
imul
lea
adc
(bad)
sbb
inc
and
mov
test
jge
mov
xor
aaa
or
popa
int
inc
jg
mov
neg
scas
sub
dec
or
cmc
mov
xor
or
inc
pop
fidiv
pop
std
add
ret
adc
mov
jae
icebp
adc
mov
pop
mov
inc
or
or
sub
mov
push
sbb
shl
repnz
call
xchg
and
int
pop
faddp
xchg
and
ins
push
or
pop
fdivr
ins
lock
out
(bad)
imul
jae
pop
shl
push
pushf
xor
inc
aam
(bad)
mov
add
loop
cs
pop
jb
pop
xchg
nop
pop
sub
daa
dec
adc
adc
adc
bts
sahf
mov
cmp
imul
inc
and
dec
mov
test
mov
or
xor
mov
mov
outs
mov
add
sbb
pop
or
test
shl
dec
fmul
clc
mov
or
in
cmps
fisttp
lds
push
hlt
jg
add
(bad)
(bad)
dec
pusha
sbb
jp
scas
mov
xchg
jmp
int
cmp
inc
add
std
sahf
fmul
or
inc
sub
mov
adc
inc
scas
dec
dec
call
dec
test
movs
cmps
movs
cmp
dec
int
outs
int
mov
cld
mov
popa
je
test
or
pop
jnp
nop
cs
dec
jmp
test
pushf
pop
mov
add
sbb
push
mov
pop
mov
fistp
xchg
add
aaa
jmp
sbb
sahf
sub
jo
hlt
push
and
jns
fstp
pop
add
pop
ds
jnp
mov
xor
out
push
dec
sub
in
(bad)
cmp
push
push
cdq
jmp
aad
loop
lea
adc
shr
mul
jle
inc
inc
icebp
jp
pop
in
sub
outs
test
hlt
(bad)
addr16
outs
add
popf
dec
pop
scas
call
push
js
stos
call
imul
dec
int
retf
xor
xlat
xor
cld
mov
fdivr
sar
mov
add
jecxz
cwde
fist
scas
dec
clc
sub
cwde
loopne
int3
dec
push
mov
and
pushf
adc
popa
repnz
(bad)
pop
push
int3
pop
push
loopne
jbe
stc
les
or
iret
pop
mov
or
test
repnz
push
inc
pop
sbb
popa
mov
jno
pop
lods
cmc
adc
ret
push
or
outs
jp
pop
fidiv
mov
cmp
mov
clc
lahf
out
sub
adc
in
and
mov
out
xchg
dec
mov
into
or
jb
int3
sub
pop
ds
mov
call
xchg
and
push
pusha
dec
scas
mov
(bad)
std
xchg
aad
ret
adc
(bad)
ret
in
arpl
arpl
arpl
inc
adc
jno
xchg
ror
in
pop
cmove
sub
xchg
out
jmp
bound
std
xor
test
arpl
movs
push
pop
loopne
aam
dec
mov
mov
sbb
movs
dec
lea
sub
xchg
loope
mov
pop
push
fisub
ds
stos
cmc
mov
call
sahf
mov
xor
rcr
scas
retf
cmp
or
inc
hlt
ins
and
cmp
sbb
jns
call
mov
push
scas
rol
inc
clc
jle
lods
dec
shl
sub
scas
add
dec
dec
cs
push
and
adc
add
stos
sbb
push
out
inc
loop
repnz
mov
mov
ret
xchg
dec
jae
mov
mov
sahf
inc
icebp
lock
dec
lods
data16
cmp
mov
inc
jae
in
adc
jecxz
or
xchg
or
addr16
jmp
call
inc
cmp
lods
sti
test
data16
aam
adc
xchg
bound
jns
add
xor
mov
xchg
(bad)
(bad)
stos
ss
out
ror
cdq
cmp
aas
jnp
test
out
enter
mov
xlat
inc
sub
xchg
mov
jg
sbb
mov
sahf
push
push
dec
lods
in
cmp
mov
mov
ins
mov
mov
movs
cmps
xor
push
(bad)
aam
push
aam
pop
outs
js
aad
push
cmc
out
(bad)
pusha
push
in
dec
daa
add
jae
xor
je
pop
inc
in
scas
mov
jo
das
jecxz
pop
pop
dec
mov
xor
and
xlat
movs
retf
sub
rol
mov
ret
enter
lahf
sub
arpl
add
sub
rcl
dec
(bad)
jg
push
sbb
xor
mov
mov
push
mov
push
jmp
nop
mov
mov
jb
daa
and
or
jl
mov
stos
clc
add
movs
shl
inc
iret
jns
(bad)
sbb
and
dec
fs
push
outs
sub
add
test
jl
mov
push
inc
cmps
jae
mov
arpl
pop
sub
dec
bound
call
test
add
xchg
mov
ins
adc
or
mov
(bad)
imul
test
test
pusha
movs
jp
(bad)
jae
scas
inc
mov
iret
stos
out
repz
push
xchg
popf
mov
sbb
and
lods
inc
add
cdq
and
stos
sub
(bad)
push
cmp
das
cmp
sbb
dec
pop
ret
test
mov
fldz
popa
jecxz
adc
mov
add
mov
inc
pop
cmc
and
mov
xlat
mov
fdiv
nop
pop
ins
push
cdq
or
fsub
popa
test
lea
arpl
test
dec
out
cmp
cmps
hlt
pop
or
add
push
add
arpl
sub
adc
jecxz
mov
sub
mov
jb
xor
adc
aas
push
call
pushf
imul
cmps
jno
fnstcw
adc
cmps
sub
mov
dec
repnz
cmc
xchg
push
xchg
inc
sahf
jnp
lock
ss
adc
xlat
stc
iret
(bad)
fistp
pop
ss
inc
sti
jp
stc
pop
mov
lods
push
ds
sar
test
movs
scas
js
(bad)
(bad)
inc
enter
mov
adc
jmp
pop
pop
mov
xchg
jb
inc
fsubrp
out
leave
ror
stc
or
xor
cmp
cmps
shr
cmp
imul
xor
repnz
jg
and
loop
ret
pop
fidiv
and
loope
xor
outs
push
add
(bad)
sbb
jg
jne
inc
jnp
cmps
and
jmp
xor
push
jge
dec
sub
and
push
push
cmc
daa
cld
or
xor
dec
rcr
sub
push
mov
int3
imul
mov
shl
jl
scas
jecxz
fisttp
fisubr
add
out
push
fdiv
lock
xchg
jmp
dec
push
or
push
mov
mov
and
jecxz
inc
or
dec
lds
(bad)
or
dec
xor
xor
pop
(bad)
test
out
mov
iret
pop
mov
xchg
adc
stos
mov
mov
mov
and
lods
mov
and
cmc
mov
in
push
mov
xchg
and
or
mov
xor
jnp
add
inc
lds
out
push
sub
fiadd
mov
imul
data16
mov
jp
cdq
dec
push
pop
cmp
xor
dec
dec
aaa
(bad)
push
loop
xchg
xchg
push
or
inc
jp
cwde
shl
pop
out
sbb
gs
jae
rol
call
jbe
sysexit
movs
fistp
mov
repz
iret
adc
push
pop
xor
push
data16
leave
imul
mov
or
rol
ret
(bad)
not
or
lock
and
mov
(bad)
xlat
movs
call
fsub
fist
and
in
cmc
pop
adc
sbb
xlat
mov
addr16
xor
sub
cdq
std
jmp
sub
push
data16
and
jnp
les
mov
inc
fsubr
lods
xor
mov
lds
(bad)
mov
loop
mov
mov
sbb
or
scas
repnz
loopne
mov
bound
and
fimul
ins
dec
cmc
mov
psubd
pop
pcmpgtb
adc
push
push
sub
(bad)
pop
mov
push
in
jp
or
jnp
cli
adc
inc
sub
ret
stos
xor
mov
dec
sbb
xchg
mov
stc
bound
pusha
icebp
xchg
out
and
pop
and
jne
jne
ror
(bad)
out
call
push
adc
ret
mov
ror
fcomp
leave
and
xchg
and
jl
dec
into
mov
out
ja
repnz
rcl
mov
(bad)
out
ins
jle
xor
jmp
mov
(bad)
mov
push
call
neg
in
aas
fcmovbe
fild
xchg
dec
lods
data16
fld
scas
pop
movs
mov
cli
pop
push
scas
xchg
lods
or
lods
hlt
xchg
in
xor
popa
mov
cmps
adc
lods
xor
imul
dec
aaa
je
add
jge
and
push
jmp
retf
dec
imul
out
retf
jg
fistp
lea
jp
sub
mov
lds
ss
and
test
cmp
and
sub
fidivr
outs
in
sbb
mov
(bad)
in
mov
dec
enter
mov
xor
fcomp
jl
cmp
inc
or
stc
out
push
sbb
jns
cmps
sub
mov
or
push
dec
test
mov
fmul
jnp
pushf
stos
inc
test
loope
bound
(bad)
mov
sub
pop
test
add
pop
daa
sar
or
iret
test
cwde
sar
pop
test
loopne
in
aam
cmp
fld
mov
mov
sbb
pusha
sbb
pop
push
jge
fldcw
in
mov
jnp
xchg
ret
mov
cmps
cmps
adc
sbb
sub
pop
pop
cld
ja
xlat
test
popf
xor
sbb
outs
jge
enter
jge
push
inc
(bad)
fistp
and
cmps
xlat
cwde
imul
jbe
mov
stos
xor
fmul
or
xor
cmp
dec
add
dec
dec
xchg
sbb
in
fcomi
mov
mov
clc
jmp
test
push
sub
clc
clc
sbb
out
xchg
retf
inc
stc
movs
sbb
xchg
jnp
push
call
add
lods
inc
mov
fs
xchg
mov
sbb
add
cmp
(bad)
pusha
ins
dec
ss
fwait
adc
xchg
repz
mov
ja
ja
cwde
add
and
enter
and
push
dec
fistp
into
aaa
pop
sbb
into
jae
xchg
test
adc
sbb
cmp
adc
mov
mov
in
push
pop
inc
popf
push
sub
clc
and
mov
xchg
mov
mov
fistp
in
popa
out
mov
in
hlt
xchg
dec
adc
jno
icebp
test
push
sbb
cmps
mov
sbb
stos
adc
sti
stc
aas
cli
sbb
je
pushf
jecxz
repz
in
mov
and
lods
mov
fiadd
rcr
cld
pop
or
call
cmp
fnstcw
call
jne
inc
xchg
sbb
stos
ret
in
jmp
xor
add
aas
dec
jbe
mov
mov
imul
dec
or
and
test
mov
add
icebp
push
xchg
xchg
xor
jno
lods
mov
sub
retf
(bad)
int
xchg
pop
rcr
pop
pop
push
inc
fwait
call
pusha
push
and
movs
mov
jmp
loop
xchg
test
fs
lods
xchg
das
fstp
add
dec
cmc
push
mov
imul
mov
jo
hlt
out
test
(bad)
cmp
retf
aam
or
jge
sub
mov
jg
ror
out
aam
sar
add
xchg
dec
cmc
adc
xor
imul
retf
mov
adc
or
aas
mov
sbb
sti
idiv
popa
and
sub
and
dec
adc
fiadd
in
adc
out
popf
sahf
xor
cmps
sar
inc
or
stos
xchg
arpl
lock
into
mov
push
(bad)
mov
push
in
(bad)
out
jnp
pop
xchg
div
popf
into
repz
mov
cld
inc
das
aas
sub
xor
(bad)
mov
out
xchg
in
aam
arpl
test
fs
ss
inc
inc
jmp
shl
xchg
repz
push
call
loopne
std
gs
xchg
into
stos
cmps
dec
sub
lock
mov
dec
xor
cmps
jecxz
cli
mov
and
ret
addr16
dec
icebp
leave
les
pop
call
es
mov
xor
popa
test
mov
lds
jle
data16
aam
cwde
add
loop
(bad)
arpl
loop
fwait
call
jg
cdq
jmp
jne
xor
mov
add
push
(bad)
loope
mov
stos
loop
inc
gs
cmp
xor
pop
ss
xchg
cmp
es
vcvttpd2dq
sbb
out
imul
hlt
fild
xchg
jne
js
push
cdq
mov
xor
pusha
dec
or
movs
js
ds
mov
push
lods
test
jo
cmps
push
xchg
imul
arpl
sbb
ds
fist
jo
icebp
(bad)
sbb
nop
ins
xchg
hlt
ds
mov
and
in
mov
jno
aaa
movaps
or
or
and
mov
gs
jnp
sbb
sub
push
mov
loopne
push
ins
dec
pushf
aad
jns
mov
retf
ins
into
jecxz
and
(bad)
ret
aas
pop
in
fnstsw
jae
add
sub
repz
mov
into
out
jge
out
sbb
or
and
push
sbb
mov
or
(bad)
retf
xchg
jno
cmc
(bad)
neg
mov
mov
fst
mov
dec
xor
nop
xor
mov
outs
xchg
pop
jg
pop
xchg
mov
aam
outs
shl
pop
mov
cwde
adc
icebp
into
repz
xchg
stos
js
cmp
mov
outs
push
les
xchg
dec
into
cmp
xchg
test
pop
cmp
pop
jo
push
xchg
bnd
mov
xchg
movs
popa
out
xchg
fistp
mov
inc
mov
cmps
inc
sbb
jl
retf
adc
pusha
push
or
(bad)
retf
ret
push
fdivrp
push
cmp
pushf
xchg
cs
int
loopne
add
mov
inc
push
sahf
pop
mov
jmp
xor
fwait
js
dec
sbb
pop
mov
add
cmp
pop
(bad)
inc
xor
repz
test
push
jb
in
push
sub
shl
xchg
mov
pop
mov
pusha
and
fs
scas
mov
mov
ret
push
and
test
cmp
rcl
xor
fsub
push
ss
ficomp
pop
leave
ss
(bad)
cmc
(bad)
push
add
push
fwait
(bad)
lahf
adc
pop
jle
mov
mov
loope
cmp
clc
or
leave
push
je
ss
aam
push
mov
or
dec
and
jecxz
(bad)
dec
lds
cmps
cmp
dec
sub
mov
stos
test
xchg
push
push
outs
data16
fsubr
mov
cs
sbb
xor
es
stos
clc
stos
xor
jl
inc
test
pop
lahf
in
sbb
mov
popf
cmp
shl
std
ss
arpl
arpl
jo
dec
push
lods
test
test
pop
imul
fisub
mov
mov
cmc
and
xor
mov
cmps
mov
jne
rol
jle
and
jle
mov
adc
fnstcw
and
ror
neg
push
mov
inc
and
rcl
and
out
mov
add
dec
pop
mov
movlps
arpl
test
inc
scas
jbe
mov
addr16
mov
popa
inc
cmps
pop
fwait
push
push
mov
int
or
xchg
dec
mov
dec
jmp
loopne
dec
pop
adc
cmp
(bad)
outs
cmp
add
jae
outs
shr
daa
pusha
xchg
xchg
mov
sbb
mov
pushf
(bad)
shl
std
mov
and
(bad)
nop
mov
jmp
xchg
sub
mov
stos
mov
in
iret
ret
sbb
sbb
jl
cmp
mov
push
mov
test
mov
pop
add
(bad)
sbb
arpl
icebp
mov
out
and
imul
cmc
test
cmp
xor
cld
call
retf
dec
lock
push
test
sahf
data16
or
sbb
scas
sub
scas
iret
pop
retf
jae
rcl
fs
jl
dec
dec
add
movs
sbb
dec
aad
push
mov
aas
popa
jl
cld
mov
icebp
cmp
(bad)
hlt
sbb
mov
ret
(bad)
not
sbb
and
inc
arpl
xchg
leave
je
js
and
out
movs
sbb
sbb
cmps
push
xor
jle
inc
fdivr
jns
add
push
add
mov
push
adc
(bad)
cmps
leave
(bad)
test
mov
push
dec
adc
call
lea
out
jmp
mov
mov
call
aaa
xor
(bad)
test
adc
push
clc
sub
popf
sahf
repnz
mov
add
dec
add
mov
out
je
mov
jbe
pop
cwde
or
add
or
ins
push
cmps
jg
pop
adc
gs
int
push
test
cs
mov
out
call
push
cmp
int
mov
shl
or
test
outs
jmp
push
inc
or
push
mov
cmp
dec
dec
(bad)
fst
add
mov
mov
mov
es
fwait
loop
out
and
pop
test
scas
adc
in
mov
imul
scas
sbb
or
cmp
sub
mov
dec
xchg
cmp
dec
inc
push
pop
fdivr
cmc
popf
pop
cmc
ins
addr16
dec
jb
add
sti
call
das
xchg
clc
push
dec
sub
pop
fisub
stos
lock
repz
lods
mov
sbb
dec
lock
loopne
xor
xchg
xchg
sub
call
enter
inc
or
nop
push
sbb
add
push
cmp
xor
pushf
add
xchg
dec
(bad)
adc
adc
cmp
mov
sbb
cmp
adc
mov
fwait
mov
test
loopne
lahf
pop
je
int
or
ror
push
mov
lahf
xchg
cmp
mov
ret
std
imul
rcr
enter
add
pop
pop
shl
sbb
sbb
idiv
or
int3
sbb
jl
ror
clc
cmp
push
push
cmp
scas
sub
dec
scas
sar
adc
std
fwait
pop
mov
dec
test
cmp
sbb
mov
inc
ror
mov
or
mov
addr16
and
push
mov
retf
mov
cmps
sub
mov
dec
popf
(bad)
cmp
push
pop
mov
cmp
enter
mov
jecxz
and
dec
push
ins
iret
xor
pusha
xor
mov
std
inc
ret
mov
loope
rep
daa
mov
sub
mov
mov
add
js
scas
jge
std
aaa
test
jp
lahf
cli
mov
pop
pop
mov
ror
cmp
(bad)
test
repnz
jno
idiv
ja
add
pop
sub
gs
mov
data16
mov
jg
adc
jp
dec
(bad)
fnstsw
fbld
push
inc
arpl
push
xchg
jne
vpmacsdd
mov
ret
out
mov
scas
movs
bound
push
out
sub
cmp
xchg
jne
sub
and
movs
push
scas
out
sbb
ror
mov
push
or
mov
xor
add
loope
and
aaa
jns
faddp
mov
fstp
jmp
adc
mov
ret
pop
mov
xor
repz
dec
add
cwde
dec
ror
push
jecxz
xchg
mov
mov
shl
imul
xchg
lock
adc
(bad)
add
out
shl
fcom
dec
jl
mov
pop
movs
xchg
jge
lea
or
pop
dec
sub
addr16
movs
rol
adc
or
or
(bad)
fsubrp
call
jmp
arpl
jge
push
(bad)
scas
out
leave
in
dec
or
jb
sub
das
mov
xchg
mov
test
rcr
(bad)
xchg
repnz
cmp
inc
mov
ja
dec
stc
pop
in
mov
mov
and
ret
nop
cmc
mov
ficom
adc
adc
mov
mov
add
test
test
movs
fidivr
pushf
out
and
mov
mov
and
mov
pop
enter
xchg
loop
sti
arpl
inc
std
mov
mov
xchg
loop
push
call
jae
sbb
mov
push
cmp
daa
sti
dec
mov
jb
pop
xchg
pop
retf
pop
gs
stos
mov
inc
mov
stc
mov
sbb
push
sar
xor
int3
fmul
xchg
mov
or
in
sbb
pop
hlt
jle
js
pushf
fimul
dec
xchg
out
mov
add
fsubr
dec
out
into
stc
mov
mov
add
dec
inc
dec
mov
dec
mov
dec
mov
std
add
mov
jne
loop
and
pop
and
shl
out
dec
or
inc
xor
out
push
outs
das
mov
add
pop
mov
push
mov
arpl
stos
popa
ins
out
xchg
dec
rcr
mov
enter
push
mov
fimul
and
add
push
pusha
sbb
test
mov
and
cmp
push
sub
xchg
iret
in
or
idiv
iret
xor
popa
test
xchg
sub
ds
icebp
clc
xor
jno
dec
(bad)
cmc
or
das
add
stos
test
fidivr
xchg
adc
mov
inc
or
xchg
ret
clc
mov
push
(bad)
ss
inc
aaa
cwde
mov
(bad)
cld
pop
mov
jge
xlat
cmp
daa
clc
jl
scas
std
mov
pop
jo
or
enter
adc
xchg
addr16
(bad)
loope
fwait
jne
xchg
mov
movs
loop
aad
icebp
xchg
mov
pop
sub
outs
pop
(bad)
icebp
inc
jns
dec
jo
(bad)
sub
push
aaa
cmp
xor
push
int
push
lods
out
mov
aas
inc
sub
out
ja
and
add
cmps
outs
int3
xor
(bad)
cdq
test
sbb
push
std
inc
clc
inc
out
mov
popf
mov
sbb
xchg
(bad)
fild
mov
dec
mov
mov
out
shr
sbb
test
iret
cmc
sahf
pop
mul
data16
cmp
fs
fimul
inc
in
mov
xchg
jmp
pop
jno
xchg
loop
xchg
fs
sub
sub
jmp
sbb
add
mov
daa
inc
adc
lods
or
fnclex
loope
push
jp
lahf
and
ss
and
push
rol
mov
retf
jmp
mov
xor
mov
(bad)
pushf
pop
inc
add
cmps
cld
clc
inc
cmp
xchg
mov
sub
push
mov
out
leave
pop
setne
popa
xor
xchg
daa
sbb
fadd
retf
inc
push
jmp
push
xchg
in
jecxz
test
cmp
imul
sbb
popf
shl
cmp
nop
push
xor
adc
add
adc
pop
fdiv
lahf
popf
jg
pop
push
xor
ds
add
popf
stos
test
and
xor
inc
fisttp
push
add
xchg
test
sub
cli
call
mov
mov
pop
and
push
jl
sub
and
pushf
stc
jns
ret
in
in
xchg
inc
outs
inc
mov
cmp
stc
push
push
push
jecxz
inc
std
aas
mov
inc
xchg
fcomi
pop
push
pop
xchg
mov
mul
pop
xchg
rcr
aaa
pusha
dec
cs
mul
clc
ss
cld
in
call
neg
mov
pushf
cli
aam
inc
dec
shr
add
pop
sar
xchg
inc
fnstenv
in
cmp
dec
and
mov
movs
dec
push
push
(bad)
mov
or
lods
push
sahf
aas
(bad)
pop
xor
add
call
xchg
cmp
(bad)
cdq
std
ret
int3
loop
add
call
add
dec
fcom
call
mov
call
es
mov
push
mov
jno
call
fsubr
inc
cdq
sub
retf
inc
jg
jmp
adc
icebp
movs
movs
dec
aam
jle
(bad)
bound
mov
into
mov
mov
cmp
(bad)
gs
mov
dec
pusha
add
(bad)
push
sbb
out
jmp
pop
scas
and
mov
xlat
jl
xor
xor
or
fisttp
sub
sub
dec
stos
shl
pop
push
out
ds
imul
(bad)
hlt
repz
mov
outs
adc
les
sub
fstp
movs
mov
jge
movs
aam
sbb
inc
sbb
mov
and
jbe
pop
ins
test
inc
xor
push
xchg
inc
pusha
test
xor
pop
mov
loop
sbb
mov
jl
test
cwde
std
outs
nop
in
add
scas
addr16
or
jmp
pusha
int3
js
xor
rcl
push
jg
repz
movs
sub
mov
rol
sbb
aam
sbb
or
mov
sbb
shr
or
pop
xor
cmp
arpl
xchg
lods
ja
jge
mov
and
js
or
dec
push
fild
ret
add
(bad)
jle
shl
jl
add
dec
add
sbb
bound
scas
retf
(bad)
popf
iret
stos
mov
mov
or
or
repz
xor
pop
xchg
pop
pop
cmps
ins
or
cdq
jb
jl
ja
lahf
mov
mov
dec
cmp
mov
jno
icebp
dec
(bad)
or
je
addr16
xchg
jge
in
imul
das
and
push
jbe
inc
push
xchg
pusha
sar
lods
cmp
sub
lods
imul
lds
ss
push
xchg
fistp
push
and
cmp
push
movs
cmps
ret
cmps
mov
mov
or
(bad)
shl
mov
inc
cdq
stos
adc
push
add
(bad)
push
xchg
push
stos
test
mov
inc
xchg
jmp
pop
sahf
pop
jg
hlt
dec
pop
inc
mov
call
pop
push
int3
mov
std
fmul
xchg
shr
dec
mov
mov
jmp
in
dec
mov
inc
(bad)
test
icebp
jmp
mov
cmps
or
pop
mov
stos
jmp
in
into
rcl
sub
fsub
jae
mov
jae
sub
or
and
xor
ror
test
push
push
mov
inc
push
arpl
xchg
mov
pop
xor
mov
loop
iret
push
fwait
xchg
xor
xor
ins
jg
push
addr16
jmp
inc
jae
stos
aad
jno
pop
push
push
jmp
es
push
xchg
ror
inc
dec
add
int3
and
pop
cmp
js
pop
ds
mov
jno
push
(bad)
sbb
test
addr16
ds
push
xor
xor
lods
pop
and
aas
xchg
xor
cs
pop
mov
sub
cwde
das
adc
sub
aad
mov
fbstp
(bad)
dec
sbb
add
mov
mov
js
stos
or
inc
adc
mov
push
mov
rcl
test
movs
add
aam
mov
mov
pop
xor
es
xchg
cmp
mov
icebp
push
pop
out
cmp
nop
push
fdiv
inc
icebp
mov
imul
out
lea
in
xchg
pop
ins
pop
dec
jmp
dec
loop
addr16
fistp
jl
rcr
(bad)
mov
addr16
mov
push
out
test
push
fstp
popa
ja
jle
xor
fisttp
pusha
je
cwde
cmp
dec
test
cmp
xor
(bad)
aaa
je
lods
in
je
stos
out
mov
arpl
mov
dec
lea
in
jecxz
loop
jnp
pop
push
out
sbb
loope
push
or
daa
fld
xor
jg
(bad)
frstor
hlt
cmp
(bad)
movs
lea
stc
dec
test
mov
jno
lock
rol
mov
jg
out
mov
pop
mov
adc
pop
into
cmp
adc
(bad)
stos
mov
aas
jmp
out
sbb
fwait
into
add
pushf
push
imul
sub
or
mov
or
imul
retf
xchg
pushf
cmp
sub
dec
das
mov
sub
hlt
and
pushf
jp
sti
adc
add
xor
enter
sbb
addr16
pop
jle
mov
in
push
inc
add
xor
stos
repnz
push
jnp
clc
ret
mov
adc
test
enter
cwde
push
push
mov
mov
test
xor
mov
test
mov
leave
lods
cli
jbe
aaa
jge
pop
fwait
mov
or
repz
ds
sbb
jbe
and
dec
xchg
xchg
jmp
rol
cmp
pop
add
mov
xchg
jae
clc
mov
gs
jecxz
into
add
pop
push
jmp
sbb
out
aaa
push
stos
mov
(bad)
test
cmp
jge
daa
xchg
int3
popa
cmp
mov
outs
xchg
xchg
cmp
or
cli
lahf
dec
cmc
sub
xchg
popf
test
mov
inc
mov
push
push
jl
push
lods
push
sahf
or
cld
xor
mov
popa
xchg
cld
mov
hlt
or
jmp
dec
mov
and
cmps
or
lds
aas
mov
pop
dec
pop
xchg
gs
leave
dec
popf
data16
pop
mov
loopne
cwde
sti
mov
into
shl
(bad)
fiadd
movs
mov
cmp
mov
add
rol
jecxz
and
rcr
or
sub
mul
cld
inc
and
movs
outs
xor
lea
les
sbb
sub
(bad)
ins
dec
push
or
ja
ror
mov
pop
adc
jmp
or
cmp
mov
cmp
retf
loope
sub
add
sbb
jnp
fstp
imul
pusha
aas
lods
and
sub
lods
xor
cmp
retf
and
add
scas
sub
add
lods
add
dec
stc
jne
xor
mov
fdivr
mul
pop
pop
fwait
jae
pop
leave
mov
push
call
cs
mov
stc
cmp
jp
mul
(bad)
add
cmp
aam
ror
push
jns
or
retf
movsx
cmps
or
pushf
repz
(bad)
daa
jne
pop
sbb
and
(bad)
dec
inc
jmp
in
jle
test
mov
loope
jmp
sbb
sbb
jl
push
push
mov
push
in
mov
xor
jl
cli
test
mov
mov
daa
icebp
inc
pop
sub
sbb
retf
inc
mov
ja
pop
in
lea
push
mov
mov
inc
test
jnp
cmp
push
ds
sti
std
jo
hlt
xlat
in
mov
xor
fnsave
lahf
(bad)
mov
aas
xor
cmp
xchg
call
jnp
or
loop
jecxz
js
int
pop
jg
movs
jns
lods
shr
or
test
arpl
div
cmp
cmp
push
or
jae
push
out
aam
les
cpuid
retf
inc
sub
and
or
jo
movs
fst
dec
pop
sahf
aam
(bad)
dec
sbb
jl
mov
adc
jge
in
push
ins
push
cwde
push
dec
sub
jle
call
jnp
stos
sbb
call
nop
pop
jmp
pop
xabort
cdq
movs
pop
data16
mov
fsub
mov
arpl
dec
push
ss
ja
lds
arpl
movs
daa
in
dec
stos
dec
clc
jl
lock
jle
sbb
sar
jno
sbb
inc
out
imul
add
or
cmp
retf
aas
add
and
jmp
rcl
das
xor
std
test
pusha
sub
enter
cmp
dec
and
shr
xchg
fwait
mov
and
fisttp
inc
(bad)
outs
sbb
aad
dec
ror
mov
aad
fcomip
push
into
into
inc
cmp
enter
push
push
dec
mov
bound
in
fimul
sbb
cdq
les
in
sbb
adc
adc
mov
or
icebp
retf
inc
add
fs
and
sbb
(bad)
jo
pop
and
stos
pusha
sub
dec
push
add
(bad)
aad
dec
mov
push
xor
ret
idiv
inc
test
rcl
dec
inc
push
mov
inc
or
call
div
dec
xchg
inc
inc
push
in
cs
movs
jne
cmp
mov
mov
enter
mov
fiadd
in
mov
sub
je
push
dec
add
test
push
inc
mov
mov
pop
mov
sub
jl
sub
(bad)
cmp
push
mov
aaa
push
jb
mov
movs
into
pushf
retf
lahf
pop
je
pop
out
in
adc
repz
mov
lds
dec
pop
sbb
and
or
gs
out
adc
xor
xor
push
sub
in
add
cs
fmul
mov
sbb
pop
push
das
cdq
add
ficomp
cs
(bad)
call
and
or
dec
cld
fcomi
sub
sub
ret
xchg
enter
mov
mov
or
add
xor
mov
and
in
gs
ins
dec
mov
ss
dec
shl
stos
inc
and
mov
push
push
daa
add
fimul
push
mov
dec
scas
dec
jmp
mov
out
aad
adc
sub
add
inc
push
inc
xor
xor
nop
and
push
das
cmp
fistp
xchg
lods
push
ds
fsubr
aad
(bad)
jg
ins
imul
call
retf
enter
shl
mov
cld
inc
jae
or
adc
fdiv
cmc
retf
ds
or
xchg
rcr
call
or
daa
fs
loop
jnp
je
outs
cmp
jne
cmp
and
jle
adc
ins
stos
cmp
(bad)
sbb
dec
sub
push
and
aas
(bad)
cld
test
cmc
jne
push
mov
xchg
aam
mov
leave
jo
or
mov
push
(bad)
push
add
jb
jecxz
das
sar
loop
adc
call
mov
(bad)
mov
xor
push
int
jp
pushf
cmp
lods
scas
or
sbb
pop
add
pop
jp
loopne
push
add
dec
inc
pop
retf
lea
mov
fld
popa
aad
mov
jge
mov
push
stc
pop
jns
inc
hlt
(bad)
cmps
dec
add
push
aaa
out
test
cmps
push
pop
sbb
pop
test
inc
cmp
and
dec
in
push
sub
cmp
xchg
es
or
inc
sub
cmp
jo
xor
(bad)
jmp
push
sub
jmp
ins
mov
or
xchg
pop
inc
pop
jp
cmps
mov
pusha
mov
int3
add
cmp
mov
out
mov
in
imul
or
je
xchg
ret
fst
mov
pop
cmp
movs
fild
push
pop
jp
xor
cmp
inc
mov
retf
ret
repz
and
mov
xor
and
in
ins
dec
mov
push
mov
xor
(bad)
in
fstp
sub
xor
mov
(bad)
sbb
jl
cvtps2pd
cmp
aaa
dec
(bad)
jmp
dec
mov
outs
mov
add
pop
hlt
inc
fnstenv
bswap
jp
lock
ret
inc
mov
dec
shr
test
(bad)
sub
cdq
or
add
mov
(bad)
dec
test
pop
cdq
sub
addr16
jnp
mov
xchg
jbe
imul
adc
xor
jg
and
aas
mov
aas
retf
fild
ds
cmp
push
(bad)
xor
inc
xchg
inc
cmps
rcr
mul
dec
sbb
xchg
pushf
ja
mov
sbb
aam
add
push
or
ins
mov
stos
add
cld
push
pop
sub
dec
icebp
ins
and
loopne
mov
ficomp
scas
icebp
out
mov
dec
push
sub
sbb
test
cmp
and
rcl
shl
scas
movs
in
ret
cmp
push
and
fisttp
scas
dec
pusha
and
jb
jge
sub
stos
cs
mov
mov
mov
repnz
(bad)
pushf
pop
test
rcr
mov
cmp
mov
call
dec
push
push
or
push
js
scas
retf
push
ss
add
fsubr
push
out
push
test
mov
cld
out
fnsave
jecxz
scas
xor
inc
xor
and
mov
jle
rol
or
cdq
pop
scas
or
ds
int3
jo
(bad)
dec
bound
into
(bad)
jmp
cdq
and
rol
mov
rcl
mov
in
(bad)
jmp
imul
xchg
jne
clc
loop
(bad)
cdq
pop
jnp
pusha
addr16
fsub
dec
xor
rcr
dec
or
stos
stos
rol
(bad)
outs
hlt
jne
popf
xor
repz
daa
ins
int
test
int
jge
cmp
sub
pushf
jne
sqrtps
sar
loope
(bad)
(bad)
jmp
inc
cdq
add
out
shr
inc
xchg
repnz
xor
and
jbe
out
push
adc
dec
jae
sub
aad
jo
jle
sbb
sub
push
and
mov
fdiv
sbb
add
std
fdivr
adc
mov
out
inc
adc
adc
and
nop
sub
sub
out
popw
fisttp
loopne
ins
xchg
and
add
sub
or
push
popa
adc
(bad)
sub
ins
in
inc
test
mov
cmp
pop
arpl
scas
sub
sub
mul
movs
arpl
sbb
jne
xchg
mov
loop
mov
add
push
xor
ret
sub
in
into
scas
xor
pop
pop
adc
jmp
adc
mov
mov
lods
popa
adc
fsub
into
in
jbe
out
add
jns
jne
push
stc
push
add
(bad)
jl
dec
rcr
jg
daa
rcr
mov
mov
and
jo
xchg
jg
adc
lahf
jp
pop
mov
cmps
mov
sbb
into
in
pushf
inc
dec
pop
fisub
lahf
mov
ror
sbb
std
(bad)
(bad)
mov
xlat
(bad)
mov
jbe
xchg
sub
cs
or
cmp
mov
inc
mov
jno
pop
push
cmp
retf
mov
sub
inc
pcmpgtb
daa
jge
inc
sub
fadd
or
jle
inc
popa
dec
ret
and
aaa
inc
and
loope
aad
(bad)
and
cld
mov
sbb
pop
or
adc
lods
jmp
mov
jecxz
cmp
in
cld
gs
repz
loopne
adc
xchg
outs
ja
movs
rcl
inc
add
dec
je
das
sbb
jne
leave
das
xchg
les
aad
adc
cmp
ret
aas
jge
xor
jecxz
scas
or
sub
imul
dec
enter
xchg
test
inc
sub
cmps
and
cmp
(bad)
std
in
sub
push
add
stos
fdivrp
mov
in
aad
(bad)
sub
sub
outs
push
sub
pop
cli
stos
or
jl
sub
test
(bad)
leave
test
dec
jge
jb
call
sbb
add
add
loope
stc
sbb
mov
movs
inc
xchg
cmp
stos
mov
and
ret
pusha
jnp
lods
cli
ret
call
inc
and
cmps
or
inc
sbb
test
in
test
cmps
daa
mov
push
ret
pop
outs
xchg
popa
xor
ins
jecxz
leave
push
and
mov
or
add
mov
hlt
fucomi
sbb
mov
in
mov
mov
cs
push
cmps
gs
ss
icebp
jecxz
out
cmps
repz
jge
jns
add
ret
sbb
jno
sbb
sbb
fldenv
cli
pop
sub
cmps
push
mov
int3
retf
in
pop
pop
mov
mov
mov
outs
push
lds
dec
mov
cmc
bnd
inc
ins
inc
retf
scas
jo
sbb
cld
xor
lods
mov
call
in
cmps
cmp
mov
aas
imul
sub
ss
aam
scas
sbb
stos
add
sbb
jb
mov
jp
and
jns
mov
les
cli
xor
ins
mov
inc
pop
(bad)
neg
mov
push
dec
and
lahf
rcl
dec
leave
and
or
sub
lds
iret
lods
mov
jns
fxtract
cdq
sbb
pop
cmc
jb
xor
stc
ficom
jecxz
push
leave
xchg
inc
dec
push
cmps
outs
ret
push
cld
fs
push
in
inc
push
(bad)
retf
call
pop
sbb
add
inc
jmp
cld
sbb
rcr
mov
push
inc
or
jmp
mov
int3
xor
pop
and
pop
stos
mov
fwait
call
clc
outs
dec
neg
pop
push
jecxz
push
mov
sahf
rcl
xchg
push
es
cdq
lock
gs
push
arpl
mov
mov
jne
mov
mov
aad
aad
cmp
pop
repz
fist
push
cmp
xlat
cdq
dec
push
ret
dec
es
jp
inc
pop
fild
sub
xor
scas
dec
scas
jecxz
or
adc
push
sti
arpl
mov
xor
retf
jmp
mov
loop
mov
and
icebp
aad
(bad)
fdivr
add
mov
push
inc
test
mov
inc
pop
add
daa
adc
and
ja
or
repnz
leave
mov
gs
cwde
in
dec
test
(bad)
ss
in
pop
fbstp
jnp
jg
add
into
jb
int3
jmp
jnp
test
ins
mov
imul
mov
push
(bad)
xchg
lods
sti
xchg
sub
push
dec
fist
jnp
in
dec
fs
inc
jns
ror
xchg
mov
jb
pop
out
test
and
cmp
in
xchg
xchg
fdivp
(bad)
inc
and
shl
aaa
xchg
out
hlt
out
(bad)
sbb
cmp
inc
cwde
movs
cs
mov
pop
test
fistp
lods
fisttp
mov
(bad)
retf
xchg
ror
push
mov
cmp
sub
cdq
pop
in
lea
mov
mov
dec
mov
cmp
stos
fdiv
ss
cdq
add
out
sub
shl
repnz
jmp
sbb
(bad)
push
mov
dec
mov
add
repz
scas
and
sub
addr16
test
call
and
add
retf
pop
mov
aad
push
adc
sbb
iret
enter
into
cmp
xor
fldz
cmps
push
mov
retf
jmp
cmp
jae
jmp
sub
inc
cmp
push
pop
ror
sbb
add
fcompp
outs
jge
cs
mov
test
lds
jns
pop
cmc
xor
bswap
stc
pop
xchg
fcomp
jns
dec
or
and
(bad)
mov
ret
imul
ja
popf
out
xchg
adc
jbe
mov
jg
test
jmp
leave
cmp
inc
cs
ja
jb
dec
push
adc
(bad)
mov
mov
in
std
push
test
dec
(bad)
jecxz
test
pop
sub
mov
das
adc
aad
push
icebp
aaa
lock
pop
mov
xlat
adc
jbe
ins
je
lahf
sbb
jb
gs
and
add
cmp
jae
jae
adc
inc
mov
ret
add
inc
test
push
xor
aad
inc
push
arpl
loopne
cmp
out
push
xor
retf
push
and
push
push
sar
iret
add
lds
jns
xchg
fld
(bad)
dec
mov
aam
sub
rcl
push
lahf
dec
ins
cmp
pop
(bad)
pop
jne
add
in
mov
dec
sub
lods
inc
or
jae
(bad)
stc
inc
xchg
arpl
inc
adc
mov
dec
fnstsw
pop
rcl
ja
pop
mov
push
mov
in
dec
je
cmps
jne
ret
int
repnz
int
popa
dec
bound
xlat
push
test
jne
jecxz
pop
pushf
sbb
outs
mov
pop
mov
push
cmp
or
ror
call
imul
cmps
ins
int3
cli
stos
xor
retf
push
push
mov
ret
cld
push
and
out
mov
jae
pop
push
bound
fisttp
adc
jno
jae
mov
test
outs
lea
pushf
hlt
jo
lock
imul
push
and
add
and
(bad)
retf
loope
sahf
xchg
sub
cmp
xor
in
sub
mov
out
cs
inc
movs
popa
sti
xor
les
xchg
ss
ror
sbb
sub
jbe
mov
imul
fidiv
pop
jg
leave
pop
test
inc
in
data16
adc
mov
into
mov
aaa
adc
icebp
cmps
xor
movs
inc
dec
stos
ins
jbe
call
mov
dec
inc
xchg
lahf
mov
pop
daa
popa
in
adc
mov
imul
in
clc
sti
clc
inc
pop
mov
leave
inc
les
(bad)
jmp
jp
add
lods
push
add
jns
aad
(bad)
push
pop
xor
sub
sub
or
icebp
ja
fld
stc
in
and
xor
jae
rcr
pop
mov
retf
or
push
outs
sar
xor
leave
pusha
std
pop
mov
adc
mov
popa
aaa
push
lods
or
pushf
cs
push
xor
in
std
ds
sub
sub
inc
pop
inc
push
rol
xor
dec
imul
jne
sub
inc
sub
or
xor
dec
xor
push
out
mov
sbb
jmp
jle
add
imul
repz
fsubrp
addr16
jo
push
xchg
cmp
icebp
rcr
mov
push
xchg
stos
mov
addr16
scas
lods
mov
sar
rcr
jl
and
out
cmp
ja
inc
mov
rcr
ins
mov
cli
mov
mov
sti
sbb
shl
stos
adc
inc
sahf
mov
test
xchg
sbb
cdq
sbb
out
imul
inc
mov
cli
adc
repnz
adc
test
ds
aaa
mov
add
xor
iret
nop
out
mov
fld
stc
sub
ja
fnsave
pop
jno
push
loope
out
out
shl
mov
js
enter
pop
outs
pop
or
clc
dec
xchg
or
jo
and
xchg
stos
jp
or
add
fsubr
out
add
std
and
push
sti
in
call
xor
cmp
mov
lods
test
sti
mov
stos
aaa
mov
inc
lods
rcl
hlt
inc
nop
and
and
cdq
fcom
ins
mov
movs
retf
or
lock
add
cmp
js
scas
mov
sbb
iret
cmp
ficomp
js
adc
lds
inc
mov
and
gs
xchg
js
sub
test
jecxz
jb
or
dec
or
sahf
dec
sub
inc
inc
lahf
jae
dec
out
dec
mov
(bad)
xlat
jnp
lods
mov
mov
lock
enter
int3
les
loop
shl
stos
push
movs
dec
sub
(bad)
idiv
mov
pop
push
add
fcomp
scas
jecxz
xor
sbb
xchg
pop
js
ret
rcl
mov
sar
leave
mov
inc
(bad)
fisttp
pop
sub
add
mov
inc
scas
fiadd
inc
xchg
punpcklbw
fdiv
movs
ins
pop
push
scas
int
inc
cmc
mov
mov
mov
mov
std
mov
shl
inc
ror
jb
sbb
dec
shr
and
adc
pop
fnsave
(bad)
addr16
mov
xchg
push
shl
(bad)
and
dec
push
cdq
xchg
cld
aad
(bad)
out
mov
leave
(bad)
mov
fwait
int3
fidiv
or
mov
pop
std
mov
movs
movs
addr16
scas
dec
in
jne
movs
sub
lock
je
push
call
sbb
xor
div
stos
mov
lock
lahf
pushf
imul
iret
dec
mov
nop
stos
push
sub
mov
mov
fmul
mov
(bad)
into
out
fmulp
mov
sbb
iret
mov
add
repz
pop
cmp
call
add
add
jmp
or
jg
mov
push
mov
cmp
cmp
je
mov
lods
jb
and
fisub
ds
aad
xchg
rcr
sti
mov
push
inc
sbb
out
xchg
inc
xor
loope
pop
cdq
jp
(bad)
int
les
(bad)
out
or
mov
mov
into
addr16
xlat
push
pusha
mov
daa
aaa
ins
mov
adc
jl
cmp
test
movs
sbb
jle
(bad)
xor
sbb
xor
sbb
ds
cwde
jl
or
push
mov
mov
or
sbb
(bad)
jae
push
xchg
mov
aam
cli
mov
das
cdq
or
fiadd
stc
and
leave
test
sbb
adc
xlat
rcr
loop
mov
sahf
mov
fcomp
test
into
jp
jno
inc
retf
jecxz
or
mov
fadd
jge
iret
push
lea
sbb
into
inc
in
mov
loopne
mov
(bad)
jp
pop
in
mov
nop
dec
das
ror
std
cmp
or
call
fiadd
xchg
das
pop
rcl
jo
out
push
icebp
mov
pop
std
adc
nop
inc
sub
aad
xlat
ret
es
add
mov
gs
scas
sbb
adc
xchg
or
fild
xchg
xchg
push
sub
js
add
aaa
mov
xor
cwde
jne
push
das
(bad)
adc
or
mov
mov
mov
in
out
push
add
dec
push
mov
xor
mov
cld
faddp
mov
sbb
dec
repnz
popa
pop
mov
mov
das
mov
inc
jge
mov
sbb
aad
push
mov
punpckhwd
xor
in
(bad)
xor
push
rol
push
or
and
rcr
repnz
enter
dec
cmp
jo
mov
push
sahf
sbb
movs
in
jge
les
xor
test
cdq
xchg
arpl
cs
mov
enter
hlt
outs
ins
sahf
out
iret
aam
xor
mov
cmp
das
cwde
js
shr
aad
out
(bad)
push
or
pop
ins
fidiv
out
xchg
jo
popf
int
cli
ret
icebp
xchg
mov
and
out
retf
pop
loopne
and
sub
mov
mov
pusha
ins
and
inc
mov
inc
jno
jo
add
dec
and
and
data16
es
inc
dec
iret
xchg
pop
push
mov
cli
iret
or
or
in
test
mov
or
pop
data16
xor
sub
jbe
inc
cli
xchg
add
and
xor
pop
(bad)
loope
sahf
pop
sbb
mov
jecxz
(bad)
mov
adc
icebp
lea
sar
mov
jmp
mov
xor
adc
add
bound
ins
sbb
inc
mov
shr
sbb
and
mov
mov
aam
cs
fadd
cmp
or
pop
mov
(bad)
lods
cmp
jo
lahf
jp
xor
jecxz
mov
clc
push
lea
aas
xor
cmp
cmp
fwait
pop
inc
pop
mov
aam
or
pop
pop
and
iret
imul
xor
mov
aas
shl
sbb
in
push
mov
sbb
mov
mov
sti
cld
fdivr
les
scas
pop
add
dec
xor
mov
test
lods
fmul
gs
repz
mov
add
loop
stc
xor
push
dec
test
int3
and
or
jl
xor
shr
push
(bad)
call
popa
das
sbb
mov
outs
(bad)
adc
daa
jg
lahf
loop
xchg
mov
(bad)
jg
push
xor
scas
push
inc
jl
push
addr16
mov
lahf
xor
mov
sub
xchg
and
clc
fsubr
fidiv
sub
add
cmp
aam
mov
bound
mov
inc
and
push
add
fld
xchg
ror
mov
mov
shl
nop
rcr
popa
sbb
push
add
sahf
cmp
jo
cdq
mov
je
or
popa
push
push
(bad)
hlt
aam
pop
mov
outs
ret
ins
pusha
dec
add
dec
mov
imul
cmp
retf
jnp
xchg
pop
inc
jle
(bad)
adc
mov
lea
dec
mov
popa
cmps
loop
(bad)
rcr
or
aad
(bad)
xchg
mov
aam
js
mov
fidivr
or
dec
fs
cli
sbb
pusha
adc
sbb
call
dec
jmp
xor
push
int
xor
cld
xor
in
out
test
mov
retf
lods
lds
dec
fisubr
dec
mov
ins
dec
and
push
inc
jns
mov
imul
mov
fwait
jbe
bound
dec
inc
dec
mov
call
outs
mov
icebp
mov
sbb
leave
xor
xor
xchg
dec
jl
jle
sub
mov
lahf
stos
add
adc
jb
mov
cli
jge
sub
dec
pop
hlt
sti
or
jno
mov
pop
xor
cmp
fidiv
pushf
cmps
cmp
aaa
mov
popf
fwait
sub
adc
adc
push
dec
(bad)
sahf
sti
and
or
(bad)
push
sti
adc
ins
sbb
scas
rcl
dec
div
out
clc
fs
push
cmc
xor
outs
out
adc
data16
das
std
sbb
push
mov
push
add
push
mov
mov
arpl
inc
sbb
add
sub
cmps
dec
fimul
(bad)
hlt
mov
mov
movs
sti
ret
sbb
mov
mov
mov
call
mov
and
pop
add
xor
mov
xor
call
cmp
icebp
imul
adc
out
pop
shl
add
int
xchg
mov
xchg
mov
outs
mov
add
add
ret
movs
in
dec
div
sub
dec
(bad)
dec
mov
mov
add
or
lds
jbe
stc
mov
mov
cmc
pop
push
(bad)
aaa
dec
jne
(bad)
sub
push
sub
xor
repnz
xchg
add
(bad)
fsub
add
or
sub
cli
xchg
jmp
test
fcomp
out
jge
push
ins
and
fidivr
mov
shl
xchg
pusha
mov
mov
dec
dec
push
mov
into
(bad)
sbb
jp
inc
push
mov
jg
sub
mov
scas
scas
xchg
mov
(bad)
and
push
pop
dec
and
xchg
arpl
jmp
int
mov
jnp
fistp
lahf
fs
mov
xlat
mov
cmps
jmp
loop
push
xchg
cmps
(bad)
and
pop
xchg
and
cmps
and
stc
bound
imul
test
imul
inc
dec
jns
dec
pop
scas
jmp
aaa
mov
retf
xchg
adc
mov
test
pusha
mov
call
pop
sub
jae
jg
cmc
cmp
inc
fs
test
xchg
jb
push
in
inc
stos
cmovge
repnz
gs
(bad)
std
inc
dec
adc
shr
sahf
mov
icebp
aas
cmp
xor
ins
mov
or
sbb
xor
ins
pushf
mov
cmp
mov
jb
ficom
cmp
mov
and
inc
jg
es
inc
push
call
mov
ror
fmul
mov
ret
iret
fs
addr16
cmp
push
adc
rol
add
sub
mov
sbb
mov
ret
jb
sbb
(bad)
scas
mov
and
lock
cmc
fsub
fwait
sbb
mov
dec
outs
push
mov
mov
push
sbb
mov
js
cld
mov
mov
pop
into
jmp
xor
or
sbb
repz
xchg
scas
pop
fld
or
aam
neg
lods
loopne
pop
mov
sub
movs
in
mov
call
loope
imul
adc
rol
push
jns
pop
out
cmp
mov
and
repz
test
shl
hlt
mov
in
mov
jmp
stos
inc
jnp
dec
mov
cmp
mov
sbb
int3
data16
cdq
out
cmc
stos
jae
cmp
div
dec
nop
ins
lea
outs
(bad)
sbb
scas
fsubr
cmove
xor
popa
inc
mov
nop
xor
push
jge
js
test
or
imul
ja
sub
and
inc
shl
test
int
cmps
adc
es
cli
push
sbb
test
(bad)
adc
push
outs
and
xchg
test
push
mov
loop
int3
mov
cmps
inc
sub
push
mov
inc
retf
xor
std
sbb
pop
cdq
mov
pop
or
lock
pop
(bad)
das
jae
ficom
stos
out
cmp
inc
sahf
arpl
scas
mov
fbstp
adc
outs
js
dec
mov
jb
push
sbb
pusha
rcl
pop
fdivr
adc
mov
add
adc
out
or
dec
clc
imul
scas
enter
pop
inc
stos
inc
sub
pop
dec
pop
cs
ret
bound
in
int3
out
and
push
cmp
pop
xchg
arpl
movs
mov
les
inc
and
shr
mov
call
jmp
sar
retf
enter
pushf
mov
in
cmp
call
loop
out
cs
xchg
pusha
pop
push
mov
add
add
std
ss
or
js
jnp
ins
or
jg
int
mov
add
ror
fld
sbb
out
mov
pop
cdq
xchg
xchg
cmps
jmp
xor
cmp
lods
cmp
mov
inc
int
arpl
pop
adc
jecxz
nop
idiv
fnstsw
dec
and
lahf
xor
ror
jl
xchg
jnp
test
cmp
dec
add
and
mov
add
dec
or
inc
or
push
xor
and
ins
or
and
mov
inc
shl
cmp
lods
clc
into
add
(bad)
push
sub
push
cmp
or
dec
pop
out
add
push
inc
mov
aam
sub
addr16
call
jo
sub
ss
in
movs
jg
pushf
je
fsub
cmp
and
fld
cmp
div
pop
call
or
in
cdq
sbb
mov
sbb
xor
test
repnz
sbb
inc
enter
jg
add
stos
xor
xchg
pop
les
mov
ret
inc
movs
stos
xor
out
es
pop
rol
xor
sysret
mov
inc
mov
xor
jle
mov
push
lds
push
pop
test
and
repnz
mov
bound
jmp
and
fldenv
shl
mov
fidivr
fcmovne
adc
push
into
mov
mov
sti
add
fucom
and
mov
or
jbe
lock
xchg
(bad)
stos
sub
inc
das
mov
bswap
icebp
mov
popa
xchg
pop
adc
dec
mov
add
fisttp
jno
popa
ja
push
data16
mov
retf
pushf
arpl
arpl
in
fsubrp
scas
inc
int3
pop
scas
and
add
inc
in
add
mov
fsubr
imul
test
xchg
mov
or
das
add
scas
jno
stc
cmp
daa
xor
pop
xchg
push
std
jl
mov
fdivrp
sub
fucomip
pop
fimul
pop
retf
fsubr
in
out
leave
sbb
cmp
fnsave
fadd
sar
out
lds
jecxz
test
jnp
fwait
test
and
bound
into
fbstp
sub
scas
stos
inc
or
mov
sub
pop
aas
imul
loop
mov
into
icebp
xchg
push
mov
stos
push
xchg
shr
fstp
out
dec
in
add
fbld
fwait
xchg
aaa
adc
jle
pop
je
mov
stc
xchg
retf
jne
nop
sahf
mov
mov
or
sub
test
scas
mov
sub
in
push
dec
scas
fcom
mov
pop
in
in
loope
inc
aaa
adc
sub
push
inc
ror
repnz
mov
push
xchg
in
push
ret
cmc
cmp
lock
fwait
pop
jb
dec
daa
jo
cmp
adc
and
outs
in
(bad)
adc
rol
mov
jecxz
out
ins
cmova
in
popf
ins
shl
cs
repz
dec
movs
shl
sub
jle
cdq
cmp
sbb
aas
dec
fld
arpl
mov
bound
ds
jl
sub
xor
pop
or
or
ret
sub
repz
pusha
jecxz
adc
push
fisubr
jle
icebp
pop
lods
jae
(bad)
dec
cmps
repz
ficom
test
adc
sub
or
pushf
mov
retf
lods
repz
outs
popf
jnp
sub
repz
add
and
xchg
out
jge
cwde
xor
jp
xor
stos
jb
xchg
cmp
pushf
inc
jecxz
test
dec
push
daa
adc
mov
sbb
lods
xchg
jns
fmul
outs
and
push
mov
pop
(bad)
popf
mov
sub
mov
loop
imul
aaa
adc
pushf
mov
adc
imul
inc
xchg
jmp
mov
out
jbe
mov
xchg
adc
xor
sub
dec
cdq
neg
push
(bad)
icebp
pop
jns
enter
fnstsw
je
outs
pop
loope
(bad)
loopne
mov
iret
std
bound
dec
lahf
lgs
test
stc
xchg
in
out
or
sbb
pop
rcl
mov
sub
out
mov
ins
das
mov
adc
inc
bound
bound
dec
mov
mov
lds
jae
(bad)
mov
test
ret
arpl
dec
sub
(bad)
sub
and
pop
cmp
xchg
(bad)
(bad)
mov
leave
adc
mov
cs
(bad)
ja
mov
rcr
je
(bad)
jbe
fs
xchg
adc
inc
mov
xlat
movs
adc
nop
dec
adc
inc
out
aaa
adc
cmp
cmp
out
or
mov
push
push
cmp
cmp
div
je
adc
or
push
or
call
jle
dec
mov
xlat
cmp
jg
stos
inc
(bad)
mov
rcr
ror
test
shl
test
or
nop
cmp
cmc
hlt
push
dec
scas
jl
jmp
mov
mov
cdq
xor
pushf
les
jb
scas
mul
test
push
aad
lahf
out
lahf
add
cmp
sub
nop
mov
dec
enter
jb
ds
es
dec
repz
(bad)
mov
xlat
iret
js
and
iret
sub
pushf
add
std
push
xor
inc
ja
cs
push
dec
daa
lea
sbb
cdq
jne
or
xchg
mov
call
in
es
into
call
mov
mov
lods
mov
push
adc
sbb
aam
xchg
pop
mov
icebp
mov
mov
cdq
xchg
mov
iret
aam
sbb
pop
xor
jmp
sub
dec
mov
retf
js
mov
cld
cmc
inc
jg
vandps
pop
mov
aad
lods
fsubr
sbb
cmps
jo
cmp
idiv
mov
mov
pop
out
inc
adc
push
jmp
xor
push
arpl
loopne
sti
and
mov
adc
sub
mov
fcomp
adc
rcr
test
popa
pop
xor
inc
(bad)
ds
retf
mov
push
out
inc
stc
mov
es
ret
push
les
add
jne
jne
out
dec
not
out
dec
jno
pop
or
gs
pop
fidiv
push
and
fxam
ins
xor
jb
add
cmp
xor
push
icebp
push
jnp
sub
pop
mov
cmp
div
mov
add
xor
and
xchg
add
mov
enter
ins
ret
mov
sbb
in
movs
adc
sahf
fmul
jmp
add
mov
cmp
popa
leave
pop
js
xchg
jecxz
sahf
xchg
dec
jnp
mov
inc
jo
sar
clc
mov
sbb
fist
jp
cmp
xchg
or
push
mov
rol
jb
push
bound
pop
xor
retf
pop
xchg
jg
out
adc
gs
es
cld
sub
dec
push
and
jo
mov
shr
inc
cld
aaa
iret
jge
xchg
(bad)
(bad)
adc
or
outs
mov
add
xor
jmp
adc
cmp
nop
adc
iret
data16
pop
cmp
popf
ss
or
fist
mov
sti
loope
cmps
pop
xor
jns
test
hlt
cmp
push
(bad)
xor
mov
push
test
dec
or
jne
int
dec
xlat
cwde
(bad)
adc
push
ret
mov
mov
addr16
(bad)
out
imul
dec
add
cmp
pop
out
shr
nop
call
push
ucomiss
lea
mov
in
push
out
out
outs
ret
movs
sub
inc
mov
arpl
ret
and
pusha
adc
mov
sub
push
mov
adc
push
test
pop
ror
or
jmp
mov
pop
mov
sub
ror
hlt
cmps
mov
ds
jle
out
adc
cmc
push
cwde
mov
fsub
imul
sar
stos
mov
les
rcr
lahf
gs
xchg
aas
cli
(bad)
jp
push
mov
xchg
lea
sbb
call
or
in
in
out
aad
mov
fisub
(bad)
mov
fild
mov
enter
outs
jecxz
push
test
outs
cmp
dec
mov
inc
or
push
xchg
mov
mov
in
pop
push
ret
xchg
pop
icebp
ret
add
mov
shr
(bad)
imul
gs
stos
iret
leave
mov
lds
or
mov
adc
add
push
xor
mov
and
cs
xchg
or
pop
and
loop
lods
les
dec
push
or
pop
pop
xchg
sbb
ror
iret
ret
dec
mov
sbb
in
xchg
lea
in
add
mov
jp
pusha
mov
and
add
xchg
mov
shl
fs
sub
sbb
mov
je
mov
mov
cmps
dec
xchg
(bad)
mov
test
mov
sub
mov
mov
outs
call
cld
mov
sub
xchg
nop
xor
add
jno
mov
push
cwde
jle
adc
xchg
and
jo
pushf
shl
dec
jl
cmc
hlt
mov
jp
mov
outs
mov
and
push
inc
stc
cld
enter
push
test
repz
mov
cwde
mov
scas
das
shl
call
out
daa
adc
js
xchg
sub
das
sbb
out
adc
adc
in
ret
hlt
in
jb
call
ins
stc
cwde
in
das
call
les
pop
call
and
mov
mov
in
js
scas
int
mov
in
jae
cmp
cld
lods
dec
hlt
cdq
mov
pop
pop
add
out
les
or
mov
sub
mov
add
sub
out
std
or
dec
call
jmp
in
ins
mov
aas
ret
in
movs
in
jmp
cmp
jo
push
jae
pop
int3
sbb
std
aas
sahf
fst
ins
jb
sbb
add
int
mov
mov
inc
loopne
arpl
in
and
fdiv
push
pop
idiv
mov
arpl
pop
ficomp
pop
jmp
mov
je
pop
aas
push
adc
out
xchg
pop
mov
mov
mov
dec
xchg
push
mov
mov
push
inc
push
cs
cmp
xor
les
sbb
in
inc
mov
adc
pop
lock
popa
fcom
add
mov
and
pop
sbb
arpl
mov
dec
mov
mov
das
icebp
ret
add
xchg
sbb
mov
add
hlt
imul
push
fbstp
jns
sti
aaa
scas
or
aas
ret
pop
lods
lea
inc
mov
dec
mov
xchg
inc
jle
push
mov
xlat
mov
call
dec
push
std
(bad)
inc
loopne
jmp
loop
or
and
cmp
mov
sti
dec
cmp
leave
xchg
mov
sub
test
fidiv
jno
ins
jmp
inc
inc
add
ins
push
jl
pop
movs
mov
ss
test
rol
mov
jle
pop
imul
adc
(bad)
clc
mov
pop
jg
and
and
js
mov
push
add
call
or
loopne
fsub
ret
or
jg
mov
jge
or
jns
push
jne
jp
mov
loopne
pop
sub
xor
sub
inc
dec
pop
imul
imul
ins
mov
sahf
cld
shl
push
rcr
das
outs
cmps
sbb
call
sub
sbb
inc
(bad)
pop
imul
ins
in
cmp
dec
jne
repz
pop
add
inc
push
fcomp
loop
mov
lds
xor
add
sbb
xor
sbb
(bad)
fnstcw
mov
and
pop
push
inc
fsubr
mov
and
cdq
push
dec
cmp
mov
dec
xlat
scas
mov
shr
or
arpl
scas
dec
lahf
mov
push
xor
(bad)
jae
loop
imul
pop
mov
aam
ins
cmps
push
jne
call
push
dec
mov
sub
add
and
test
lods
aaa
retf
and
mov
cmp
mov
jbe
mov
test
or
lods
das
retf
syscall
inc
leave
int3
test
cmc
sub
adc
(bad)
scas
push
in
adc
adc
and
jl
out
movs
inc
ja
mov
add
ret
adc
push
and
mov
push
ja
push
xchg
icebp
ret
out
and
scas
cmp
(bad)
stc
aam
adc
cmc
pusha
clc
adc
imul
outs
ja
cmp
mov
ja
scas
jo
push
mov
scas
addr16
lods
xor
js
movs
stc
jecxz
pop
test
push
or
cmp
xlat
xchg
mov
push
mov
out
shr
xor
ret
stc
mov
adc
adc
cmp
aad
mov
fwait
push
(bad)
xlat
popa
xor
repnz
cmps
dec
mov
ins
adc
mov
out
xor
inc
adc
mov
push
and
hlt
fistp
push
xlat
cmp
xor
mov
sbb
rol
loope
fisttp
movs
push
daa
mov
inc
pop
mov
imul
pop
leave
cld
sbb
dec
mov
retf
sbb
push
in
push
sbb
retf
lahf
ins
inc
or
sub
jge
xor
imul
retf
rol
stc
loop
push
ret
xchg
mov
sahf
mov
icebp
(bad)
mov
daa
cmp
mov
push
jno
iret
pop
add
sub
or
movs
stos
dec
pushf
test
xor
cmp
outs
pop
fdiv
mov
dec
in
aas
stos
and
sub
push
mov
fs
ror
xchg
pop
push
sbb
push
cmp
or
ds
(bad)
jb
call
mov
shl
jecxz
push
or
not
test
sub
cmp
ins
pop
scas
data16
pop
mov
faddp
sub
dec
sbb
(bad)
icebp
shl
in
std
push
jbe
rcr
add
push
pushf
in
mov
test
ja
mov
outs
dec
pop
div
pop
mov
(bad)
sbb
sbb
call
and
xor
pop
mov
pop
mov
lds
sbb
es
arpl
popa
(bad)
aam
sbb
leave
loop
(bad)
xchg
push
test
aaa
mov
xor
inc
cwde
loopne
jbe
xchg
aad
mov
xchg
push
cmp
cmp
sbb
mov
pushf
mov
pushf
mov
push
jg
and
leave
mov
shl
imul
repnz
push
dec
inc
xchg
xchg
jle
push
scas
sbb
mov
in
lods
mov
or
push
jmp
dec
(bad)
or
mov
jmp
leave
mov
fidiv
fbstp
mov
pop
into
xor
popa
xchg
scas
or
add
jge
cmps
pop
js
mov
dec
call
in
cmp
mov
dec
out
jmp
lea
push
(bad)
sub
xchg
mov
shr
rcl
inc
jae
imul
call
pop
(bad)
clc
mov
test
pop
adc
or
out
data16
pop
rcr
pop
mov
mov
and
cmp
dec
and
sbb
into
mov
clc
or
mov
into
mov
jg
cmp
(bad)
jle
and
mov
(bad)
pop
inc
mov
jge
lods
xor
xchg
es
fisubr
pop
rcr
jns
add
sahf
sub
xchg
dec
mov
sub
mov
xor
push
fwait
enter
sub
out
(bad)
adc
jae
mov
bound
mov
xchg
mov
cld
cmc
ins
inc
jecxz
mov
dec
jecxz
in
or
movs
cmp
jne
push
arpl
pop
mov
dec
scas
pushf
inc
(bad)
mov
xchg
arpl
mov
aam
cmc
mov
add
xor
inc
adc
push
(bad)
cmps
in
jno
jnp
pop
mov
pop
fdiv
cmp
(bad)
xchg
push
pop
cli
inc
int3
inc
adc
mov
in
jne
dec
in
pop
adc
sbb
push
cdq
ret
sub
xchg
mov
repz
repz
mov
cs
sbb
jp
into
outs
(bad)
jo
int3
fisttp
or
nop
ror
jmp
retf
dec
jnp
adc
lds
adc
jl
mov
xchg
add
push
pop
aad
sahf
bswap
loop
or
call
dec
mov
mov
xor
mov
repnz
pop
jp
push
ja
(bad)
std
ins
int
xor
cmp
loopne
sub
test
mov
add
ja
gs
sub
dec
pop
cmp
jmp
shr
outs
xchg
ss
sub
mov
cmp
retf
fwait
sbb
outs
icebp
pop
sahf
mov
jg
cmps
test
sbb
loop
aaa
dec
xchg
in
push
sub
inc
mov
dec
pop
idiv
in
lock
mov
loopne
rcr
pop
sub
fwait
xchg
jae
xchg
jecxz
and
ds
aad
mov
dec
popa
(bad)
adc
pop
or
or
es
mov
jae
fsubrp
repnz
(bad)
dec
push
test
sub
(bad)
ss
cmp
leave
gs
adc
inc
hlt
xchg
ja
int
mov
test
add
sbb
cdq
data16
aad
cmps
xchg
adc
lods
push
das
dec
mov
shr
sub
inc
cmp
jecxz
les
aas
shr
mov
pusha
jmp
fsqrt
pushf
enter
popf
(bad)
push
inc
stc
data16
push
dec
cmps
adc
inc
xor
adc
pop
ins
psrld
and
int
pop
leave
push
fprem
jns
fisttp
push
cmc
js
les
push
add
and
cmp
imul
jo
or
push
push
cmc
ret
mov
jne
push
mov
mov
(bad)
dec
push
dec
cli
out
lods
xor
jae
adc
je
lock
and
sub
add
outs
dec
sbb
jo
sbb
push
mov
int3
cmps
loop
or
add
mov
fwait
pop
jno
inc
dec
fisubr
adc
out
jp
xor
adc
sbb
adc
xor
push
(bad)
push
out
retf
pop
push
adc
cdq
add
dec
sbb
out
ja
jnp
mov
add
push
cmc
pop
sar
add
lock
push
mov
xchg
nop
mov
jp
cmp
in
lea
jns
mov
dec
out
xchg
push
jle
jp
test
xor
xchg
fidiv
shl
test
sar
in
pop
or
fnstcw
lods
mov
std
div
mov
cmp
sub
inc
out
mov
or
pop
lahf
pop
cwde
push
cmps
sub
xor
aaa
test
dec
and
clc
loope
(bad)
(bad)
(bad)
out
in
lahf
jns
mov
or
ret
out
cmp
jmp
outs
ins
jae
ficom
or
mov
dec
push
dec
sub
sub
add
dec
js
adc
stos
hlt
push
dec
pushf
mov
rcl
sbb
das
jge
mul
jle
xchg
cs
out
loopne
push
cdq
jo
mov
loope
out
mov
test
dec
(bad)
dec
ins
sti
and
neg
or
clc
out
xor
movs
in
int
dec
(bad)
pop
cs
adc
out
xor
imul
sbb
ja
stos
mov
push
aas
popf
fld
pop
stos
and
pop
xor
or
enter
or
das
xchg
jno
(bad)
imul
mov
scas
aaa
and
cli
movs
adc
sub
inc
xchg
aad
iret
hlt
pop
inc
sbb
mov
(bad)
push
sub
dec
aam
scas
adc
lods
xor
cwde
mov
ret
sub
into
(bad)
stos
and
movs
mov
repz
or
sbb
retf
jo
(bad)
fiadd
movs
retf
aaa
or
sbb
call
mov
fmul
cmp
pop
(bad)
js
mov
js
ins
mov
pop
pop
jge
stc
(bad)
mov
sub
iret
dec
mov
jle
add
cmp
cmc
hlt
inc
mov
jno
mov
push
dec
stos
push
arpl
call
mov
mov
imul
mov
mov
sar
(bad)
std
xor
cmc
(bad)
enter
in
mov
push
loop
mov
test
js
aam
adc
into
add
inc
clc
cli
mov
sub
iret
adc
mov
jae
push
les
enter
test
pop
xlat
mov
sbb
sub
lea
xchg
xchg
xlat
mov
jmp
(bad)
push
push
outs
ror
lods
mov
ins
in
push
mov
rcl
and
mov
mov
pusha
out
push
adc
mov
xlat
jmp
stos
mov
jo
mov
dec
cmp
arpl
xchg
idiv
push
add
retf
in
jmp
ror
pop
je
das
hlt
ja
jae
jb
cmp
mov
jmp
push
jo
adc
inc
mov
ficom
js
xchg
inc
cmps
js
mov
pop
push
jb
mov
cmp
mov
les
pusha
pusha
and
and
repz
ret
ret
push
data16
add
jno
enter
std
int3
xchg
add
cwde
repz
in
jl
shl
cmps
mov
pop
push
xchg
xor
rcr
lds
repnz
cmps
or
fucom
lea
pop
shl
js
sar
daa
sti
mov
jg
mov
addr16
cmps
adc
sub
sub
pop
add
aam
pop
xchg
(bad)
aam
mov
pop
mov
xor
call
mov
xchg
ds
adc
push
ins
xlat
sbb
lock
or
cli
cdq
inc
int
popa
jecxz
jg
sbb
and
sbb
outs
(bad)
es
mov
test
sahf
mov
mov
cmp
fcmovnb
pop
and
loop
mov
mov
out
jl
xor
push
scas
in
ret
fstp
les
rcr
and
push
xchg
mov
iret
ret
punpcklwd
mov
or
mov
(bad)
jmp
addr16
pop
and
out
dec
and
movs
outs
cmp
cmc
imul
nop
rol
mov
dec
addr16
xchg
push
hlt
iret
fwait
sbb
lds
mov
ret
sub
mov
scas
sbb
sbb
out
adc
add
pop
sub
sahf
cmp
popf
test
imul
or
push
dec
push
int3
push
mov
(bad)
push
add
xor
mov
aas
add
dec
imul
push
ss
in
sbb
cmp
inc
jecxz
sub
inc
mov
or
invd
mov
loopne
int3
push
div
outs
adc
dec
inc
sbb
popa
adc
inc
jbe
adc
loop
mov
stc
push
mov
xor
and
ret
or
inc
dec
cmc
aas
dec
jg
imul
mov
rol
push
test
jnp
dec
xchg
sbb
outs
sar
dec
and
fsubr
mov
stc
cmp
mov
add
pop
aaa
jns
fs
aad
lods
pop
add
xchg
and
dec
scas
dec
pop
(bad)
push
cld
or
push
inc
imul
add
sub
inc
jae
loop
aam
jg
out
fsub
aaa
or
pop
sbb
cmp
or
jp
call
cmp
or
and
(bad)
scas
add
mov
or
test
in
cld
in
push
dec
ret
int3
pushf
in
or
inc
lds
(bad)
retf
aam
fisubr
mov
dec
push
sbb
js
push
cld
dec
sbb
cmc
cmp
aam
push
call
pop
sub
and
outs
psadbw
jg
xchg
add
jns
fdiv
sub
outs
pop
retf
and
xor
xchg
stos
xchg
mov
test
xor
inc
inc
outs
xor
pop
pop
fmul
(bad)
add
cs
into
imul
and
mov
xchg
psadbw
or
and
adc
and
mov
cmps
aaa
das
mov
stc
sbb
in
sahf
push
adc
aam
es
into
(bad)
fist
push
dec
scas
cmp
in
and
stos
(bad)
(bad)
xor
inc
xor
popf
jmp
pop
xor
xchg
adc
sbb
push
xchg
aaa
dec
mov
jnp
(bad)
cmps
stos
loopne
or
inc
mov
in
rol
sub
fidivr
and
mov
(bad)
pop
adc
(bad)
shl
lods
pop
retf
aaa
jmp
pop
xchg
xor
neg
sub
sub
xchg
jno
repnz
out
add
loope
mov
mov
add
fidiv
dec
adc
pushf
jp
(bad)
sar
sbb
adc
bound
call
(bad)
cdq
sub
sbb
mov
mov
cmps
cmps
sub
out
and
fcmovb
sbb
ja
aad
jmp
jmp
cdq
fdivr
push
ror
fs
or
cmps
push
pop
push
or
xchg
lock
push
lahf
sbb
push
inc
in
pop
cli
sub
sbb
xchg
mov
stos
mov
aas
test
clc
call
or
jmp
(bad)
mov
xor
add
cmp
push
icebp
pop
movs
cmp
and
ret
sbb
push
loop
jle
or
sbb
imul
int3
mov
lahf
out
mov
inc
cmp
mov
stos
jbe
add
(bad)
in
ins
xchg
loopne
fisub
rcl
and
cmp
dec
fist
sub
in
sti
adc
fiadd
and
mov
dec
or
jo
ss
add
push
(bad)
or
adc
and
pushf
fst
cld
xchg
or
das
fs
sub
inc
vcmppd
jb
je
(bad)
push
xchg
mov
xchg
mov
retf
jb
into
fild
inc
or
mov
xor
shr
fwait
add
aad
push
enter
xor
adc
inc
pop
imul
out
pusha
cmp
cmps
push
add
sahf
jno
out
pop
push
xor
jge
enter
int
and
dec
cmc
fucomi
push
scas
sbb
xor
ins
or
xor
repnz
lahf
sahf
cli
movs
jne
xchg
or
in
mov
xchg
fiadd
aad
data16
sbb
cmp
ja
jmp
push
add
jo
stc
mov
mov
fimul
lds
dec
not
xor
dec
ds
adc
jmp
mov
cmp
sahf
out
ret
fptan
into
pop
push
adc
push
neg
inc
clc
push
lods
imul
clc
mov
mov
cli
xor
inc
cmp
repnz
scas
pop
mov
push
retf
stos
mov
je
fsubp
scas
imul
inc
pop
imul
adc
ins
ret
ja
inc
cli
neg
out
retf
sbb
and
mov
mov
or
sbb
mov
stos
shl
inc
fldenv
call
or
mov
lock
cmp
inc
pop
pusha
lods
into
xchg
icebp
mov
ret
arpl
xchg
mov
and
fcmovbe
add
scas
jge
inc
push
out
push
loop
sub
mul
pop
cmc
mov
inc
jne
call
cmp
mov
or
and
lods
outs
imul
or
xor
movs
dec
pop
iret
(bad)
mov
out
cdq
jle
cmp
(bad)
xchg
inc
cmp
vaddsubps
pop
xchg
sub
jmp
stos
xor
ins
lds
add
repnz
xchg
adc
aad
js
lock
in
adc
hlt
rcr
jmp
out
jns
rcr
leave
pop
loop
cmp
xor
imul
lods
cmp
aam
inc
and
call
xchg
aad
fwait
jae
cmp
(bad)
pop
ret
mov
jmp
xchg
imul
mov
aaa
or
jae
call
mov
mov
mov
fnsave
loop
loop
or
jp
icebp
clc
mov
mov
dec
and
ret
xor
dec
mov
sub
cld
and
in
adc
mov
cli
aas
jb
cmps
adc
jo
sub
call
adc
pop
jmp
sub
movq
jmp
rol
adc
div
sub
sti
adc
pop
ja
test
addr16
jne
in
jmp
pop
(bad)
mov
imul
add
popf
pop
pop
xor
xchg
scas
test
jecxz
mov
pop
pushf
loop
sbb
scas
repnz
cmp
adc
repnz
icebp
dec
lods
mov
dec
loope
adc
loope
es
ds
loop
mov
loope
call
cmp
shr
mov
repz
sub
xchg
sbb
out
rcl
sbb
test
xlat
inc
mov
mov
mov
movs
cmps
cwde
mov
jo
push
adc
shr
mov
xor
jbe
adc
mov
mov
jecxz
or
cld
mov
dec
stos
fist
mov
push
(bad)
pop
repnz
pop
sub
mov
inc
ret
rol
test
in
cli
cmp
shl
aam
jne
pop
push
ja
clc
out
arpl
imul
cli
das
jecxz
mov
sub
pop
cmp
and
in
adc
dec
fwait
cmp
sub
shl
fisttp
pop
sbb
add
jno
pop
cld
lods
cmps
movs
and
xor
push
push
or
mov
(bad)
mov
jmp
jmp
inc
push
and
sub
int
nop
imul
dec
push
lods
ror
push
out
mov
lahf
pop
pop
ror
dec
out
ret
push
rol
dec
push
jge
stos
scas
movs
test
lds
xchg
sub
mov
mov
aad
pop
mov
aaa
imul
mov
mov
push
sbb
cmp
xlat
adc
pop
pushf
adc
movs
mov
xchg
data16
out
jl
push
scas
jg
and
popf
pop
dec
push
inc
aad
lea
pop
je
push
push
and
mov
arpl
xchg
std
dec
shl
cs
scas
js
je
movs
jnp
xchg
adc
push
jo
rcl
pop
ds
shl
xchg
add
push
mov
imul
imul
in
xchg
(bad)
xor
mov
jl
cmp
clc
(bad)
gs
sub
or
inc
nop
jl
ins
mov
stos
cmp
adc
or
adc
fld
addr16
or
das
mov
and
popa
data16
movs
xchg
lods
xchg
sbb
ret
and
ins
xor
adc
or
cmps
cwde
dec
call
shl
xchg
and
addr16
mov
mov
xchg
xor
inc
xchg
jno
mov
xor
shr
mov
push
push
stos
sbb
stos
jl
push
in
cld
inc
pop
inc
sar
test
or
cld
xchg
xchg
(bad)
add
sti
inc
in
je
inc
and
xchg
stos
loop
adc
inc
daa
out
imul
int
movs
xlat
push
pop
cmps
dec
call
add
iret
adc
mov
push
stc
jg
mov
dec
(bad)
popf
loopne
jb
inc
fldenv
arpl
dec
mov
sbb
not
xchg
pop
xchg
sub
into
imul
mov
jne
in
hlt
sbb
add
shl
lock
pop
idiv
leave
int
imul
es
ds
cmp
or
inc
xor
dec
repz
or
lahf
and
mov
xor
aas
fist
jecxz
jge
cmps
adc
retf
sbb
cmp
sub
enter
xor
jnp
dec
mov
add
inc
hlt
xchg
push
mov
sub
stos
mov
dec
cli
dec
pusha
cmc
xor
and
adc
and
sub
retf
mov
and
jp
fsubr
push
sub
imul
pop
arpl
add
mov
repz
aas
xor
cli
cmp
add
inc
xchg
jb
inc
(bad)
(bad)
in
xor
mov
leave
adc
inc
sar
(bad)
out
scas
add
int3
imul
mov
movs
repz
sub
ja
retf
ins
aas
sub
push
or
jnp
jl
sbb
mov
pop
fs
(bad)
popf
jecxz
xor
jp
cmp
pop
mul
fs
or
(bad)
jbe
movs
mov
lahf
push
(bad)
hlt
(bad)
mov
cmp
aam
(bad)
xor
jns
jg
test
inc
xor
ret
cs
fmul
scas
movs
cwde
popa
mov
iret
out
push
sub
(bad)
aad
rol
fistp
out
(bad)
dec
pop
nop
repnz
jb
mov
xor
pop
inc
rcl
in
(bad)
stos
push
shl
daa
push
xchg
lahf
ss
cmp
xor
shr
and
mov
dec
out
cmc
jmp
dec
jmp
pop
sbb
add
push
repz
inc
data16
and
sub
xchg
(bad)
es
push
loop
pop
call
cdq
pop
sbb
mov
cmps
mov
cmps
jne
inc
daa
xchg
cmps
sbb
adc
mov
lock
pop
jl
cdq
mov
xor
push
adc
xor
inc
cdq
add
jl
sub
mov
jmp
sbb
push
push
push
jl
movs
out
push
mov
sub
push
jnp
mul
or
cmp
(bad)
ret
pop
push
inc
cmp
mov
sub
bound
pop
pop
ins
dec
adc
push
(bad)
(bad)
dec
lods
jb
call
jmp
xor
or
jecxz
or
xchg
pandn
cdq
ja
dec
stc
mov
mov
fwait
add
or
mov
ficomp
add
cmc
or
inc
outs
add
pop
jp
xor
scas
mov
test
mov
out
imul
arpl
clc
repnz
les
nop
pop
or
and
push
outs
out
fistp
retf
sbb
retf
sub
fsub
retf
std
jae
mov
mov
lock
movs
jns
pop
jle
loope
(bad)
repz
push
ret
dec
cmp
pop
cmps
addr16
js
shl
mov
pop
xor
fsubr
pop
add
movs
mov
xchg
outs
popa
cli
xor
sbb
inc
dec
cmp
inc
pop
xchg
adc
xchg
xor
icebp
cmp
cmps
mov
xor
movs
xchg
sub
outs
in
add
in
sti
xchg
sbb
sbb
and
cmp
inc
dec
push
xor
std
add
jmp
addr16
pop
ror
push
ja
stos
int
inc
mov
int3
shl
and
pop
cli
(bad)
fnstcw
or
movs
pop
aaa
cmps
movs
and
push
les
hlt
xchg
bound
fsub
out
adc
(bad)
aaa
dec
repnz
jbe
ret
cmp
fst
jb
into
pop
push
push
mov
test
pushf
aad
fsub
push
add
sub
adc
jnp
xlat
ds
out
push
inc
data16
fadd
hlt
mov
je
(bad)
retf
jae
out
jge
mov
dec
xor
jo
cdq
and
adc
mov
mov
or
(bad)
icebp
sub
scas
push
loopne
inc
inc
call
ins
add
dec
(bad)
cmp
push
cwde
mov
sub
popf
cwde
sbb
push
add
popa
dec
outs
js
int
xor
(bad)
xor
call
lods
ins
mov
mov
leave
faddp
stos
mov
jl
cs
int3
adc
pop
lahf
adc
int3
aam
dec
int
in
enter
mov
mov
(bad)
jle
jae
mov
sub
sub
(bad)
jnp
dec
cwde
aad
mul
add
sbb
jl
adc
xchg
add
scas
push
xor
jmp
iret
std
sar
xor
adc
mov
addr16
mov
inc
lods
fdiv
jl
in
xchg
sbb
retf
and
int
jns
jl
xor
xchg
gs
in
pusha
mov
ret
(bad)
inc
pop
adc
rcl
ss
rcl
stos
mov
mov
push
int
jmp
ja
xor
shl
jmp
aaa
ror
mov
and
jp
cld
adc
cmp
into
mov
outs
or
aas
cmp
cmp
scas
frstor
push
sub
in
pushf
bound
add
cmps
push
or
fwait
xor
fnstsw
cli
fmul
mov
mov
hlt
int3
push
inc
mov
or
adc
test
xchg
dec
mov
sub
outs
outs
and
fscale
call
in
out
push
jge
hlt
int3
adc
(bad)
sbb
stos
xor
dec
pusha
xor
arpl
sar
cli
push
mov
(bad)
jno
add
push
loope
call
jmp
fsubr
add
outs
push
sbb
stos
aam
pop
push
mov
sbb
jns
cmps
mov
dec
sbb
idiv
xor
push
call
mov
loope
add
daa
popf
sub
lods
or
or
push
push
in
(bad)
mov
int3
xchg
shl
pop
add
add
xchg
int
fs
int3
xchg
push
shl
les
fprem
mov
jg
cmps
jge
ins
mov
cmp
in
mov
push
and
call
rol
jb
jno
fwait
in
inc
ja
ss
or
enter
into
(bad)
stc
xor
mov
neg
mov
(bad)
cld
pop
outs
dec
jecxz
mov
xor
and
shr
mov
pop
push
lds
push
lock
sbb
xchg
cmp
adc
movs
cmp
ret
or
out
xchg
add
jp
or
jb
movs
int
mov
jg
xor
ret
sbb
mov
push
mov
sub
(bad)
sbb
sub
jnp
inc
and
dec
or
and
cmp
jmp
sub
push
and
(bad)
jle
and
cmp
cvtps2pd
dec
fldcw
add
add
inc
adc
aad
push
cdq
test
xchg
aas
sub
dec
loop
dec
xor
lds
ror
fdiv
dec
mov
xor
lock
sbb
inc
or
arpl
xchg
movs
add
aam
cs
jno
(bad)
(bad)
adc
cmp
pop
jmp
inc
loop
or
dec
fbld
fimul
out
cmp
jecxz
pop
jnp
repz
jg
js
push
cmp
nop
mov
js
sbb
repz
stc
scas
arpl
xchg
(bad)
(bad)
lock
sub
das
shr
outs
int3
mov
(bad)
or
or
(bad)
mov
jb
inc
dec
mov
nop
ins
sbb
popf
cmp
xor
test
adc
sbb
cwde
call
jecxz
imul
mov
lods
sahf
(bad)
sar
test
scas
sbb
mov
je
leave
pop
dec
ss
mov
jge
cmp
or
push
push
and
int3
push
hlt
scas
jns
and
mov
pop
jmp
lock
sbb
add
jbe
loop
jg
(bad)
daa
pusha
cvtps2pi
push
and
sti
out
push
jns
fdivr
mov
adc
jecxz
sbb
repnz
pop
push
fcomp
rcl
fnsave
and
mov
push
(bad)
dec
cmps
call
sbb
or
pop
movs
inc
je
mov
sahf
int3
loope
dec
push
sbb
mov
sti
(bad)
mov
dec
popf
cmp
mov
dec
std
push
mov
ror
popf
add
retf
fcos
mov
mov
aas
loop
leave
pop
iret
jge
sbb
loop
mov
or
cwde
lods
push
mov
xor
ins
cmps
add
mov
mov
mov
mov
movs
imul
rol
std
cmp
or
xchg
adc
dec
enter
mov
shr
sbb
mov
push
mov
ret
imul
jno
cmp
inc
mov
je
daa
mov
inc
out
sub
and
shr
popf
and
sbb
push
sub
loopne
ins
sub
push
gs
xlat
pop
and
jg
cwde
and
add
cmps
push
or
mov
outs
lock
mov
dec
mov
and
pop
mov
push
mov
popf
pop
sbb
push
cmp
out
adc
or
push
in
dec
jbe
pushf
add
jns
mov
push
push
nop
arpl
(bad)
push
pusha
add
dec
mov
test
xor
fst
mov
cdq
or
lds
cmp
dec
cli
mov
adc
xchg
daa
and
rcr
adc
mov
jno
jne
test
dec
and
je
movs
push
mov
dec
or
xor
mov
jne
xchg
lock
mov
loope
movs
push
in
call
sbb
push
bound
out
into
add
or
xchg
cmp
mov
xchg
mov
scas
lea
mov
lock
mov
jno
(bad)
das
lahf
inc
frstor
ror
inc
std
bound
movs
cmp
int3
out
push
fs
scas
and
ins
push
or
inc
push
or
sbb
jne
aad
mov
sar
scas
(bad)
pop
daa
push
cmps
xor
push
push
add
mov
fld
shl
mov
pushf
add
daa
sbb
(bad)
jg
imul
outs
aam
pop
fld
xchg
sbb
cmps
repnz
in
mov
iret
xchg
lods
js
mov
daa
pop
in
pop
or
inc
mov
sbb
xor
or
movs
shl
mov
imul
pop
push
mov
fsub
int3
xor
cs
pop
test
pop
adc
loope
xor
movs
pop
add
mov
repz
aaa
fidivr
sbb
sub
xchg
inc
ficomp
push
mov
dec
adc
mov
(bad)
imul
pop
pop
jne
ins
and
push
dec
and
je
outs
movs
(bad)
ficomp
ss
lds
into
sub
inc
jmp
sbb
in
outs
or
ja
lods
xor
int
rol
adc
cdq
xor
rcr
inc
in
xchg
pop
cmc
(bad)
lock
adc
imul
out
fist
lods
nop
inc
add
or
and
hlt
xchg
cwde
inc
xchg
outs
fistp
push
in
inc
inc
gs
loop
jecxz
pop
loop
jmp
and
in
push
push
scas
mov
stos
inc
add
sbb
add
pushf
dec
rcr
sub
push
xchg
arpl
fs
not
fsub
mov
add
sbb
inc
scas
xor
loop
test
mov
iret
test
dec
push
mov
inc
pop
(bad)
jbe
push
xchg
(bad)
lods
mov
ss
mov
loop
ficom
ds
aaa
inc
jmp
mov
push
aas
outs
or
(bad)
into
jbe
pop
adc
ret
stc
mov
int3
fs
repz
aam
mov
cmps
inc
mov
retf
into
or
mov
mov
push
push
cwde
leave
and
aaa
jecxz
sti
jmp
addr16
sub
cwde
rol
inc
xlat
mov
jnp
push
mov
jge
test
mov
test
cmp
sbb
push
adc
test
pop
mov
pop
xchg
out
gs
ds
mov
push
mov
mov
add
add
pop
pop
or
shl
repnz
inc
and
push
jmp
shr
in
push
leave
jecxz
cmc
add
inc
shr
shl
inc
pop
sbb
mov
sbb
scas
adc
inc
pop
(bad)
push
mov
or
mov
js
into
pop
loop
and
and
popa
int3
mov
mov
iret
cwde
repnz
dec
adc
push
test
pop
ficomp
push
mov
scas
clc
adc
mov
inc
mov
fwait
sbb
repnz
in
push
outs
sbb
xchg
fs
adc
dec
cwde
mov
mov
mov
push
and
inc
les
jge
pushf
push
fist
dec
cmp
dec
mov
push
mov
xchg
adc
pop
sahf
aaa
mov
jle
cwde
mov
popf
int3
sub
aad
arpl
xor
or
mov
int
and
call
arpl
xor
(bad)
cmps
fidiv
mov
mov
(bad)
and
fcmovu
shl
push
cmp
sti
jns
ds
sub
jne
jl
mov
addr16
cmps
scas
retf
(bad)
fwait
dec
xor
pop
mov
int
xchg
addr16
jmp
and
push
movs
imul
loope
and
xor
sti
mov
cmp
stc
cmp
jmp
and
data16
int3
mov
data16
push
ret
jbe
pop
mov
loopne
cmps
or
mov
mov
cmp
mov
shl
push
aaa
scas
hlt
clc
and
jmp
fcomi
jp
pushf
push
fdiv
adc
sbb
hlt
mov
dec
or
retf
sub
sbb
mov
or
lds
cmp
cmp
dec
sub
mov
int
call
in
push
add
xor
es
pop
xlat
push
popf
hlt
mov
push
pusha
xor
fwait
add
sar
(bad)
push
dec
mov
push
test
enter
retf
ficom
mov
imul
ja
lods
mov
dec
scas
push
pop
lods
loopne
add
jbe
rcl
mov
mov
jecxz
push
dec
jg
or
ds
jno
mov
push
scas
es
mov
out
in
and
cmp
cmc
outs
lahf
shl
imul
dec
sub
or
mov
pushf
add
push
xor
pop
in
daa
inc
pop
or
cdq
data16
daa
imul
push
push
pop
arpl
es
xlat
inc
sub
and
push
add
cmc
call
inc
sti
sub
fild
aas
and
(bad)
jl
adc
fldl2e
aam
mov
stc
pop
adc
jecxz
popa
in
sub
cld
and
sub
mov
in
jmp
cdq
dec
xchg
mov
or
arpl
test
xor
cwde
(bad)
mov
push
(bad)
sbb
inc
int3
jae
aam
jmp
mov
mov
add
xchg
push
pop
int3
popa
fs
xor
xchg
shl
movs
leave
add
xchg
cmp
mov
scas
cmps
bswap
adc
pusha
jns
mov
inc
gs
or
test
pop
rcl
aas
xchg
loopne
dec
mov
sub
inc
jo
sar
std
int3
mov
retf
jnp
in
dec
inc
inc
scas
mov
dec
les
mov
or
aas
mov
mov
xor
push
addr16
cmp
or
add
jne
ds
arpl
out
lea
xor
iret
aas
and
sub
mov
xchg
dec
cld
repnz
jns
or
and
mov
adc
mov
arpl
sbb
imul
mov
jl
lods
sub
movs
xor
lods
inc
mov
jmp
inc
or
and
mov
mov
mov
inc
dec
aam
popa
gs
add
cs
push
cwd
ror
jp
test
and
pushf
(bad)
scas
add
add
mov
and
sub
int3
test
scas
mov
pop
(bad)
fnstcw
repnz
push
xchg
fsubr
mov
or
gs
in
fsubrp
jmp
cli
mov
daa
push
data16
retf
std
inc
push
rcl
xlat
jne
or
mov
icebp
or
cwde
cmp
fcmovb
push
(bad)
mov
xor
popf
(bad)
(bad)
xchg
mov
sub
sub
xor
and
jge
jmp
mov
cld
cld
(bad)
mov
sub
push
cli
shr
and
scas
pop
gs
ds
sbb
jns
xchg
lock
sbb
cmps
pop
mov
dec
cmp
mov
xchg
adc
gs
push
xchg
icebp
mov
push
call
test
les
clc
cs
push
or
sbb
xchg
or
stos
and
iret
shl
mov
or
inc
cmps
jo
sub
mov
mov
pusha
sbb
mov
cdq
push
add
sbb
add
xor
mov
fcomp
stc
rcr
add
mov
inc
pop
das
jg
push
mov
repz
mov
xor
cmp
lock
mov
(bad)
pop
mov
dec
xor
bound
mov
ret
ror
scas
loope
inc
clc
cmp
pop
mov
in
aad
mov
mov
mov
outs
pop
xchg
xchg
jle
xor
sbb
in
test
sar
mov
int
cmps
in
push
shl
out
adc
mov
mov
push
and
loop
dec
dec
loope
pop
popa
mov
inc
inc
xor
or
cmps
dec
iret
cmp
or
fwait
cmps
fidiv
mov
cmp
pop
cld
int
and
mov
pop
cs
sbb
pop
dec
test
inc
out
es
inc
popf
daa
xchg
cmps
and
pop
loop
jbe
pop
in
adc
mov
jg
out
fdivr
clc
ins
or
sahf
ds
repnz
adc
pusha
push
adc
and
xor
pop
or
repnz
mov
sub
mov
std
push
cmp
(bad)
cld
lahf
in
xor
dec
xor
sub
nop
xor
hlt
adc
jmp
mov
jae
shr
fcmovnbe
daa
fwait
aas
jne
vpand
sbb
lods
leave
mov
cmp
std
retw
mov
cdq
add
xor
mov
jns
mov
icebp
sub
cs
sub
lea
push
retf
cmp
jno
idiv
mov
adc
cld
mov
je
ins
jp
push
jmp
or
pop
test
mov
jns
add
(bad)
clc
retf
push
jae
jae
cdq
das
out
jle
push
cmp
xchg
push
xchg
sbb
movs
pushf
sar
int3
jb
push
cli
fdiv
inc
push
fcmove
adc
dec
jno
pop
iret
test
and
xor
xchg
in
xchg
or
sub
ins
pop
mov
jp
shl
pop
retf
rcl
les
xchg
xchg
aas
xor
lods
sub
in
sub
sub
(bad)
in
shl
cmp
or
addr16
call
bound
(bad)
scas
xchg
add
pop
mov
rcr
scas
adc
ror
mov
retf
xor
nop
stc
sbb
test
and
sbb
outs
xchg
sub
shr
mov
(bad)
jo
xor
sbb
adc
repnz
jecxz
sti
xchg
hlt
inc
inc
pushf
sub
cmps
mov
cmps
imul
cs
adc
dec
int3
(bad)
sbb
mov
cdq
push
pop
sbb
ror
in
push
xchg
aad
jecxz
dec
dec
jg
ror
bound
sbb
mov
inc
(bad)
cli
stos
mov
cld
mov
mov
jnp
sti
pop
cmps
call
cmp
enter
adc
test
dec
sbb
lahf
ins
ja
out
mov
cdq
mov
mov
xchg
fs
popf
movs
sub
or
cmp
mov
ins
xor
or
sbb
(bad)
adc
and
jo
sub
rcr
xchg
dec
pop
and
mov
or
dec
and
and
dec
les
cmp
add
pusha
adc
sub
test
dec
mov
leave
arpl
(bad)
aad
dec
out
adc
cmovs
loopne
test
add
or
and
movs
mov
imul
pop
repnz
push
cdq
nop
sbb
inc
ror
jne
dec
sub
ret
or
pop
or
int
mov
jecxz
jno
jae
dec
lock
xchg
add
mov
cmp
outs
fstp
gs
dec
arpl
jl
mov
mov
and
mov
stc
jbe
add
test
jo
out
lsl
fstp
push
dec
inc
dec
mov
push
fisubr
aam
xor
call
push
sbb
or
and
and
pop
pop
or
into
lods
sub
scas
je
repz
xor
mul
push
adc
jle
cmps
fisub
mov
les
fstp
nop
jg
hlt
xchg
ds
call
test
fmul
pop
and
sahf
mov
inc
xchg
mov
adc
xchg
aas
scas
into
rcr
cli
fist
mov
sti
hlt
jae
aaa
push
in
push
inc
test
retf
pop
jns
mov
mov
xlat
or
out
and
je
cmp
scas
test
dec
xchg
ins
scas
mov
jg
in
inc
data16
repz
fs
(bad)
rol
cld
mov
rcl
es
pop
cwde
or
push
add
pushf
mov
das
ins
stc
inc
loop
ret
add
mov
and
ret
lahf
and
call
bound
mov
rol
cmp
loop
cmp
arpl
mov
gs
mov
ins
inc
jmp
xchg
in
test
rcr
jmp
js
ins
dec
jne
dec
loop
aas
mov
popa
mov
push
dec
test
sti
les
mov
(bad)
mov
(bad)
fdivr
and
mov
push
idiv
sbb
mov
mov
sbb
xor
daa
ins
test
mov
aaa
xor
and
cmps
sbb
call
pop
mov
mov
aas
int3
dec
jbe
jbe
mov
lods
call
xchg
push
and
sub
inc
ja
imul
cmps
outs
xchg
jecxz
xor
cdq
in
add
dec
jecxz
sar
into
cmp
mov
mov
repz
push
repz
cld
sbb
das
jmp
ins
jnp
adc
mov
pushf
push
pop
mov
or
jecxz
xchg
fld
nop
repz
mov
xor
inc
lahf
repz
sahf
ds
mov
cmp
xchg
pop
jo
xchg
mov
xchg
fidivr
pop
cli
out
cmps
add
fwait
and
div
sub
pop
jnp
fwait
adc
pop
push
mov
pop
sub
cmps
or
cmp
and
call
push
icebp
xor
outs
jge
sbb
sub
std
mov
pop
aad
mov
mov
sub
jge
push
frstor
cmc
sbb
(bad)
imul
loop
jge
mov
push
(bad)
and
cmp
add
pop
mov
sub
loope
pop
loope
movs
jnp
mov
icebp
sub
xor
and
daa
out
push
int
jmp
ins
ins
mov
popf
stos
sub
test
dec
test
dec
mov
hlt
daa
adc
cmp
rcr
retf
outs
dec
xor
mov
sub
push
push
push
jne
mov
sub
add
or
int3
jb
ror
aaa
fbld
cwde
adc
mov
pop
retf
lds
daa
dec
and
popa
int
mov
xlat
mov
sub
nop
xchg
push
hlt
sub
data16
pusha
cdq
into
mov
jnp
mov
xchg
mov
rcl
add
cmps
add
sahf
push
jnp
or
or
sub
scas
adc
jb
mov
in
sub
dec
stos
lds
aaa
(bad)
push
outs
in
shr
mov
xor
mov
data16
fistp
outs
imul
push
jecxz
fisub
cmp
xchg
lahf
sub
pop
cmp
inc
(bad)
rcl
push
jno
mov
(bad)
fld
xor
mov
(bad)
outs
add
xcrypt-cfb
cmps
popa
cdq
cmps
sub
stc
pop
les
lahf
inc
outs
out
dec
out
adc
loope
inc
fild
cmp
stos
hlt
adc
mov
movs
mov
sti
xor
push
or
jnp
cmp
ror
push
sbb
je
mov
test
test
movs
push
jns
cmp
dec
adc
pushf
fdivr
xchg
dec
imul
jecxz
sbb
pop
test
jne
dec
push
adc
shr
jbe
push
aam
xor
sbb
lock
and
fsubr
lock
mov
sbb
mov
lahf
imul
jl
and
jmp
lea
or
mov
jmp
pop
ins
xchg
push
adc
mov
mov
mov
bound
jno
call
mov
push
inc
lock
sub
add
repnz
data16
pop
sbb
inc
in
rcl
and
fisttp
dec
fisub
adc
dec
(bad)
stos
dec
cmp
imul
sub
inc
shl
add
repz
mov
ds
mov
or
mov
fidiv
sbb
pop
cmp
dec
shr
dec
dec
mov
stc
mov
test
xor
call
sbb
je
movzx
retf
jnp
sbb
jb
xchg
ins
add
pop
mov
ins
push
push
stos
enter
or
enter
jge
mov
popf
(bad)
dec
in
push
mov
ficom
pop
pop
cmp
dec
pop
mov
cli
add
into
popa
data16
in
add
loope
jl
ja
repnz
dec
out
add
int
rcl
mov
sbb
dec
or
mov
xor
dec
mov
stos
adc
pushf
xchg
inc
lds
arpl
fild
sub
and
das
jo
ror
fmul
test
push
sar
xchg
add
(bad)
ss
push
pop
mov
outs
xor
cld
add
mov
xchg
out
(bad)
into
out
sbb
(bad)
std
mov
shl
push
stos
xor
cdq
fild
or
int
dec
push
inc
mov
rcr
or
(bad)
jp
rol
movs
jl
push
mul
jo
mov
dec
(bad)
aas
cmp
iret
hlt
sbb
or
or
push
mov
mov
xor
adc
imul
out
push
inc
imul
pop
in
jmp
adc
mov
sbb
cmp
mov
bts
xor
jb
jb
ins
iret
add
lods
iret
inc
push
push
sti
or
das
cmp
les
dec
push
mov
out
popf
sbb
xchg
push
and
sbb
or
jg
mov
jns
aaa
bound
and
mov
dec
popa
mov
add
das
jle
mov
and
aad
push
add
ret
sub
and
add
pop
push
rol
dec
add
jnp
xor
mov
cmp
ins
jg
fsubr
xchg
pop
(bad)
popa
xchg
dec
adc
add
jmp
shl
vpsllq
lods
ret
mov
lock
les
hlt
push
dec
jge
push
ins
daa
retf
cmp
mov
lock
push
inc
add
cmp
int
push
sti
rol
repnz
adc
pop
xchg
adc
dec
into
inc
out
out
ficom
jmp
pop
cdq
fwait
adc
enter
movs
mov
add
in
dec
clc
pop
jl
iret
dec
lods
mov
cld
mov
jle
nop
aas
dec
add
les
mov
retf
arpl
int3
ror
adc
fs
sub
stos
loop
mov
mov
xor
inc
add
clc
(bad)
in
or
movs
fsub
fsub
or
leave
scas
cwd
aad
push
or
test
int3
fst
add
inc
push
push
aaa
and
mov
ins
inc
sbb
push
(bad)
in
add
fisubr
mov
jle
int3
jns
addr16
out
movs
cli
into
inc
and
sbb
aad
ins
inc
pop
sbb
sbb
sahf
cmc
mov
(bad)
fcmovbe
sar
das
loop
mov
js
push
inc
(bad)
into
adc
xlat
mov
aad
xor
mov
mov
(bad)
add
dec
imul
and
pushf
scas
out
pop
xchg
seta
sbb
cs
xchg
sub
jae
mov
cli
or
inc
cwde
adc
fldcw
rol
std
jnp
add
cmp
sub
cmc
aas
out
inc
jle
cli
xchg
inc
into
inc
ins
xlat
inc
dec
sub
xor
inc
aam
retf
outs
ss
mov
pop
cdq
mov
push
add
aas
test
movs
mov
fs
mov
scas
je
xchg
xchg
mov
into
push
jl
jbe
cdq
push
xor
xchg
mov
test
jmp
inc
cmp
cmp
mov
pop
cli
sbb
pushf
push
push
xchg
and
repz
pop
mov
enter
inc
add
xlat
pop
into
in
or
dec
aad
in
outs
fisub
bnd
xchg
je
sbb
ret
lahf
dec
mov
cwde
repz
loopne
mov
lock
in
and
sbb
push
fiadd
inc
int3
mov
push
gs
and
inc
xchg
sahf
lahf
xchg
jo
push
jo
(bad)
sti
outs
mov
pop
jecxz
and
push
call
mov
aaa
cmp
and
pop
ret
dec
sbb
mov
pop
out
lea
shr
ja
dec
cld
fst
rol
pop
test
call
jecxz
shl
ret
mov
movs
and
xchg
loop
push
and
imul
in
pop
mov
sti
adc
ss
or
clc
mov
fisttp
enter
jbe
push
sub
or
ficomp
pusha
inc
(bad)
shl
gs
in
icebp
mov
dec
cmp
pop
cld
jnp
retf
lods
dec
enter
fnsave
or
mov
retf
pop
aam
dec
enter
mov
mov
std
(bad)
pop
jb
xchg
or
call
fstp
outs
dec
mov
cmp
js
(bad)
jne
test
std
(bad)
jle
test
sbb
and
and
xor
lds
aas
mov
cmc
mov
daa
retf
retf
rol
push
mov
in
xchg
dec
out
aam
repz
loopne
loopne
aam
mov
inc
stc
das
push
mov
cs
bound
sbb
or
addr16
pop
lods
dec
and
int3
movs
mov
cmp
and
adc
fwait
xchg
(bad)
cmp
dec
dec
xchg
adc
es
dec
jmp
retf
sub
xor
mov
mov
mov
adc
inc
or
lds
and
loope
or
repnz
mov
inc
adc
daa
mov
xor
dec
into
imul
add
cmp
call
mov
js
imul
retf
add
gs
out
push
push
cld
push
pop
dec
xchg
inc
push
lods
loope
push
sub
pop
pop
xor
loope
mov
cmp
push
rcr
xor
les
and
add
pop
xchg
or
xchg
dec
pop
push
fs
hlt
ret
sbb
mov
cmp
mov
sbb
ss
ss
outs
xchg
add
mov
fwait
cmp
(bad)
push
mov
(bad)
cli
or
cdq
mov
xchg
fnstcw
stc
xor
dec
bound
in
sub
pop
jns
add
jb
pop
scas
add
(bad)
imul
outs
jmp
ror
mov
(bad)
and
loopne
mov
pop
sub
mov
mov
push
or
jns
sbb
mov
pop
scas
test
push
cs
leave
mov
test
pushf
or
pop
mov
sbb
xor
aas
shr
ins
push
cwde
sub
stos
and
cs
repnz
(bad)
stos
adc
pusha
popa
jmp
repnz
fsubr
or
dec
jne
cs
inc
(bad)
scas
sub
cmp
or
ficom
jae
mov
shl
ret
xor
inc
bound
add
int3
sahf
out
out
cmp
repnz
pop
scas
push
push
mov
clc
add
lds
not
fsubr
xchg
jg
sbb
int
and
lahf
xchg
and
rol
or
ror
fidiv
mov
sbb
test
gs
cmp
adc
nop
shl
jl
cdq
mov
imul
mov
call
outs
(bad)
aad
in
or
cmp
outs
cli
in
outs
xor
mov
mul
ja
or
loope
sbb
(bad)
repnz
cmp
stos
mov
xchg
push
out
push
push
rcr
sbb
sub
add
add
and
pop
xchg
fdivrp
cli
push
push
ins
inc
xchg
sbb
pop
and
(bad)
out
push
dec
faddp
jge
jo
mov
pop
mov
adc
enter
rcr
add
mov
xchg
jnp
aam
push
dec
cs
aaa
mov
mov
mov
jecxz
jmp
dec
jbe
jbe
dec
imul
jmp
jle
cwde
lods
xchg
imul
lods
sti
loopne
cmp
sub
mov
inc
mov
xor
mov
aas
out
outs
dec
inc
repz
add
pusha
pop
pusha
push
ror
pop
out
pop
pop
push
and
in
mov
jg
cwde
push
add
and
ret
cmp
inc
int
cmp
outs
pushf
pop
jge
sbb
js
int
movs
and
daa
mov
imul
sub
sbb
out
cmp
fmul
sbb
jecxz
mov
cmc
scas
loope
cs
inc
pop
push
inc
sub
push
pop
sbb
int3
xor
dec
cdq
mov
xor
jne
cwde
push
mov
je
aas
(bad)
lods
dec
inc
pop
out
pop
movs
lock
imul
aas
cmp
push
int3
xor
jae
xchg
popf
push
xchg
xchg
mov
in
call
lahf
xor
add
scas
ds
jecxz
movs
jbe
mov
lea
outs
test
stos
jno
outs
imul
(bad)
std
add
fst
inc
inc
add
push
les
adc
dec
mov
retf
(bad)
jno
xor
dec
pop
or
popa
retf
mov
ficomp
mov
push
dec
cld
ror
ret
(bad)
cmp
je
fsubr
mov
fcmovbe
aaa
xchg
test
xor
dec
add
sbb
loop
xor
pop
inc
xchg
xchg
out
mov
or
jg
mov
popa
fcmovne
(bad)
dec
loop
mov
push
clc
pop
mov
push
repz
xchg
aaa
mov
sub
repnz
fwait
dec
or
sbb
add
push
add
sub
pusha
push
jl
mov
add
sbb
and
push
sbb
(bad)
mov
inc
jge
mov
and
outs
clc
mov
fnstsw
jo
cmps
adc
push
cdq
sbb
mov
out
hlt
js
shl
jb
push
lea
mov
stos
(bad)
push
std
aas
dec
pop
out
cmp
inc
(bad)
(bad)
lahf
pop
cli
push
call
inc
xor
(bad)
hlt
into
mov
fistp
xor
shl
dec
ret
pop
(bad)
and
dec
or
pop
dec
push
loop
inc
aad
xchg
and
fiadd
cwde
push
and
out
shr
daa
imul
movs
int
fsubrp
jne
mov
push
aas
lea
dec
adc
in
add
mov
inc
cmp
fcomp
pop
sub
jle
(bad)
and
add
out
call
ret
cmp
mov
loope
sti
mov
jle
sub
mov
std
rol
add
aad
jno
xor
ja
push
ins
aad
pop
jmp
adc
adc
(bad)
pusha
in
es
out
mov
ror
add
pushf
adc
fcomp
and
sub
outs
xchg
call
and
mov
sub
push
sahf
inc
adc
ret
das
loopne
outs
daa
xchg
daa
enter
cdq
pop
aas
pop
int
add
sahf
mov
fcom
pop
xchg
xchg
pop
xchg
enter
movs
pop
fdivp
lods
dec
std
aaa
xor
mov
jae
xchg
out
pop
xchg
cmp
or
test
sub
test
jns
cli
adc
adc
inc
xchg
adc
ds
movs
leave
retf
imul
dec
inc
test
loop
lahf
std
in
push
cmp
dec
call
dec
and
sub
stos
push
(bad)
retf
and
imul
leave
xor
das
jl
pop
jb
loop
or
leave
sahf
lds
out
pop
sbb
repz
mov
push
xor
sub
mov
les
adc
mov
adc
xchg
ss
arpl
add
inc
or
pop
icebp
xchg
mov
mov
mov
popf
fld
and
(bad)
xor
jb
jl
call
das
and
add
mov
push
or
cmp
pop
jl
cld
push
push
neg
xor
xor
jg
mov
xchg
jb
jmp
mov
sbb
sbb
call
sar
shr
xor
pop
aam
int
mov
mov
sbb
es
jmp
jno
jae
mov
xchg
sbb
or
mov
add
in
mov
mov
pop
into
push
lock
fucom
dec
adc
fisub
mov
or
cmp
pop
push
xor
ins
(bad)
mov
out
jmp
int3
out
mov
xor
retf
inc
sub
test
push
or
out
cwde
aad
jg
stos
je
xchg
sub
mov
out
rol
ror
and
and
add
push
loopne
add
mov
cmps
out
stc
xor
sbb
xchg
gs
inc
mov
xchg
test
xor
xor
inc
mov
pop
pushf
cmp
add
jl
jecxz
jecxz
mov
ds
mov
(bad)
repnz
aam
in
adc
ins
nop
jmp
in
mov
std
and
push
js
xlat
ins
lea
retf
lahf
inc
push
fidiv
je
int3
inc
fs
addr16
sub
inc
cmp
mov
int3
push
dec
popf
sub
and
or
aaa
and
xchg
push
mov
pop
push
loop
pop
pop
(bad)
jno
jg
inc
leave
mov
cmps
xchg
inc
rcl
out
sbb
mov
sbb
sbb
(bad)
jle
into
ins
push
mov
add
js
cmp
addr16
enter
mov
sar
mov
repz
ret
sbb
push
jns
dec
cmp
mov
add
out
jne
ds
sbb
add
jg
mov
int
fnstenv
dec
push
or
push
mov
xchg
inc
or
aad
pop
mov
cmp
add
iret
bound
je
fdivr
(bad)
cmps
std
sbb
and
ret
(bad)
out
dec
or
sbb
or
cmp
stc
(bad)
sub
js
rol
xchg
mov
sbb
sbb
sub
or
push
cmp
mov
xchg
pop
mov
jnp
sub
inc
fwait
adc
dec
cmp
sbb
fs
jp
hlt
cmp
mov
xchg
ins
and
out
and
fistp
pop
mov
sub
add
idiv
imul
retf
adc
ss
mov
add
push
add
sbb
inc
(bad)
loope
dec
pop
(bad)
test
sub
data16
out
inc
std
fwait
in
cmp
icebp
pop
das
xchg
mov
fst
sub
inc
mov
jo
dec
pop
outs
mov
cwde
rol
outs
cli
xor
sbb
inc
rcl
cmc
cli
arpl
call
pop
xor
sub
adc
arpl
xlat
mov
push
aad
mov
cdq
popf
scas
cmp
je
loope
jb
sete
push
leave
je
xchg
lock
sbb
lock
pop
and
dec
jo
add
fistp
push
loop
sbb
adc
mov
fwait
int
inc
out
sbb
and
mov
ss
enter
push
sbb
dec
xor
lods
lock
ror
mov
and
xchg
push
add
repz
sahf
xchg
nop
cmps
mov
mov
jmp
pop
sub
pop
ins
adc
sbb
push
fild
mov
mov
xor
into
iret
adc
movs
dec
addr16
xor
dec
cmps
icebp
fadd
mov
ret
shl
dec
inc
jns
std
je
repz
mov
and
retf
pop
add
ins
sbb
ret
or
into
addr16
pop
cs
in
push
fimul
pop
clc
lds
fdiv
cmp
and
jbe
xchg
or
sbb
pushf
addr16
int
test
cld
les
leave
loopne
movs
outs
sub
div
mov
adc
in
sub
shl
fwait
jnp
adc
test
test
push
retf
jl
cmp
xor
popa
sub
sbb
gs
(bad)
movs
pop
xchg
dec
push
loope
add
sbb
and
out
sub
pop
add
fst
mov
hlt
ss
mov
fwait
mov
push
in
cmp
aaa
imul
lods
mov
je
mov
ret
push
enter
jp
popf
in
push
movs
shl
push
ror
cmp
sub
jp
das
nop
cmp
jg
shl
neg
add
pop
hlt
rcl
ds
call
lock
shl
sbb
xchg
les
cmp
jge
loop
or
sbb
or
rcl
lahf
mov
mov
lahf
push
push
rcr
cli
arpl
test
loope
pop
inc
lods
inc
addr16
cmp
xchg
fiadd
push
and
sub
mov
pop
(bad)
cmp
aam
push
xchg
dec
mov
push
inc
or
xor
pop
cmps
inc
sub
dec
repz
push
dec
ret
mov
cld
out
and
lds
jg
xchg
and
mov
addr16
out
mov
xchg
data16
test
jmp
ss
dec
lods
adc
mov
xchg
out
outs
push
or
xor
sar
rcr
nop
cmps
ror
and
xor
cmp
adc
jle
mov
cmp
(bad)
loope
int3
and
int3
lea
rcr
lahf
mov
inc
stc
shl
aad
sbb
push
xchg
mov
pop
loopne
xchg
cwde
jl
into
or
mov
js
or
mov
push
dec
adc
pop
ret
mov
(bad)
bound
rol
rcl
iret
out
loope
jecxz
scas
lea
ret
addr16
test
xchg
in
out
adc
popa
cmp
sub
enter
addr16
jmp
aaa
cs
ficomp
adc
out
jmp
mov
cwde
cdq
xor
xor
push
movs
mov
(bad)
retf
and
cs
ins
xor
retf
xchg
add
lods
and
pop
mov
(bad)
cmp
aas
jae
or
xchg
fs
dec
(bad)
fisttp
pop
lds
stos
mov
loopne
add
les
popf
bound
pushf
sub
sbb
loopne
adc
jbe
mov
push
push
inc
push
fstp
(bad)
mov
jmp
or
adc
cld
arpl
ins
icebp
push
sbb
pop
movs
hlt
(bad)
shl
xlat
lods
or
add
dec
mov
lock
cs
jmp
mov
push
pop
inc
loopne
pop
in
lock
in
movs
out
outs
or
add
add
out
jns
sbb
iret
push
mov
mov
or
push
jno
xor
aas
sub
jmp
push
jge
movs
icebp
push
or
bound
clc
mov
add
aam
or
sub
retf
dec
push
xchg
dec
sub
aaa
and
xor
mov
jge
in
pop
call
mov
sub
je
stos
enter
adc
sub
inc
enter
jne
sbb
ss
cmp
inc
sahf
push
adc
mov
jmp
and
push
test
jae
pop
add
adc
pop
in
and
ret
mov
out
sub
push
xchg
nop
pop
sub
loope
cmp
test
ror
jge
mov
jmp
mov
scas
dec
xchg
adc
add
in
aad
pop
jae
mov
lea
jmp
mov
je
mov
mov
or
jge
call
stos
loope
dec
pop
mov
xor
mov
retf
fisub
leave
addr16
xor
cdq
int3
cs
rcl
adc
xchg
cmp
stc
cmp
adc
stos
adc
dec
je
push
stos
stc
test
xor
push
cld
test
mov
jmp
aad
mov
ss
and
int
cmp
stos
aad
inc
mov
int
adc
adc
call
sub
icebp
fs
xor
sub
sub
out
ret
sti
add
arpl
sub
dec
scas
add
pop
jnp
push
mov
and
xchg
jp
sbb
mov
je
mov
lahf
sbb
nop
pop
lds
dec
je
sbb
movs
push
popa
mov
xchg
je
xchg
and
mov
mov
icebp
jae
in
jmp
je
xchg
arpl
push
lea
cwde
je
(bad)
jbe
sbb
int
dec
fbstp
ret
lea
jle
inc
faddp
fidiv
pop
or
pop
push
dec
aaa
sbb
xchg
pop
inc
push
inc
add
cmp
xchg
daa
fild
mov
sub
jecxz
mov
push
xor
in
or
add
popa
sbb
(bad)
adc
mov
not
ret
stos
push
jnp
mov
xchg
inc
xor
loope
in
lods
pop
loop
mov
pop
push
cmp
xor
sahf
das
pmuludq
ins
mov
mov
lahf
pop
mov
pop
jmp
shr
pop
and
in
jb
mov
retf
or
push
push
test
adc
and
popa
xchg
pop
mov
mov
in
cmp
or
xchg
xchg
daa
pushf
into
imul
enter
ror
adc
outs
out
push
dec
inc
push
je
mov
sub
gs
retf
mul
adc
xor
sbb
push
mov
add
sub
inc
stc
add
sub
inc
or
cmps
clc
jo
retf
in
(bad)
mov
jmp
dec
or
test
push
cdq
rol
cwde
call
pop
ret
push
fmulp
jno
xor
fmul
pop
jns
jmp
push
xor
retf
add
pop
mov
xor
mov
cld
and
cld
cmps
and
sub
add
test
inc
jmp
fbld
ins
js
ins
lods
or
dec
sub
mov
push
cmovnp
fdiv
cdq
push
pusha
lods
aaa
std
fisubr
test
and
nop
inc
dec
nop
jge
fdivr
dec
jecxz
mov
(bad)
sbb
cs
jns
xchg
ret
gs
inc
mov
ss
nop
add
retf
cmp
adc
mov
retf
(bad)
add
jae
stc
fld
icebp
push
inc
adc
fs
mov
popa
mov
mov
inc
leave
sub
add
adc
aaa
repz
jg
cmps
sbb
xchg
icebp
cli
sbb
jle
shl
icebp
repnz
hlt
movs
push
xchg
push
adc
das
lods
ins
std
shr
nop
(bad)
inc
test
shr
std
mov
cmp
and
jmp
retf
jae
adc
add
add
outs
push
imul
adc
mov
popa
(bad)
push
sti
xlat
ror
mov
adc
mov
sub
mov
neg
push
mov
pop
xor
cdq
test
mov
or
test
pusha
jne
std
mov
test
cmc
scas
jp
mov
std
mov
xchg
jbe
mov
mov
in
cmps
ss
jb
nop
push
lahf
je
xor
push
ins
lock
pop
lods
mov
aad
mov
test
jne
in
aad
jl
cmp
and
repz
loope
xor
mov
xor
lods
jg
imul
dec
and
fs
out
or
(bad)
stc
test
cmp
fstp
pop
aas
pop
inc
call
lahf
cs
xchg
mov
ins
into
adc
lods
push
outs
pusha
xchg
and
pusha
imul
cld
push
push
adc
aam
cmp
jno
ja
(bad)
iret
lock
xlat
and
jbe
dec
ficomp
mov
sbb
fwait
retf
xor
je
nop
(bad)
bound
xchg
dec
sub
xor
cmp
inc
test
cli
out
push
push
shr
xchg
pop
mov
mov
arpl
jmp
loope
fiadd
jns
mov
iret
gs
shr
not
mov
push
scas
lahf
cmp
mov
arpl
mov
shl
push
mov
fwait
mov
mov
cmp
sub
inc
pop
out
(bad)
fmul
shr
cmp
xor
jae
or
addr16
lods
mov
push
aaa
xor
call
inc
pop
lds
pop
pop
(bad)
popf
and
aas
jg
clc
jae
add
jl
mov
jmp
sti
ds
xchg
and
lods
fwait
dec
push
and
xchg
xor
and
xor
cli
jo
jbe
es
(bad)
lods
jbe
jecxz
aas
inc
das
lea
or
push
sub
nop
int3
leave
mov
sahf
mov
xchg
dec
add
push
cmp
icebp
in
into
mov
movs
enter
je
or
sahf
(bad)
call
lock
sahf
mov
xor
jge
cmps
loop
into
stc
nop
mov
sub
xlat
jb
neg
sub
sahf
int3
cs
std
mov
push
push
jge
or
ret
dec
pusha
std
push
test
shl
adc
jmp
mov
mov
fstp
inc
cmp
cmp
xlat
cmp
retf
outs
dec
jb
sub
inc
sub
(bad)
lock
mov
add
in
push
lock
repz
retf
sbb
jmp
xchg
mov
adc
push
(bad)
cmps
inc
mov
add
or
pop
add
mov
mov
mov
out
jmp
jbe
mov
adc
or
sub
mov
mov
jmp
sub
push
stc
movs
in
mov
(bad)
in
sbb
and
sub
lea
sbb
xchg
retf
rol
pusha
repnz
int
xchg
enter
push
stos
pop
adc
sbb
aad
or
in
(bad)
push
pop
push
sub
inc
test
rcr
dec
test
stos
imul
sub
fs
mov
(bad)
pop
inc
mov
ds
and
mov
xchg
dec
rol
or
lock
and
fsubr
sbb
inc
xor
arpl
fldenv
mov
nop
adc
sub
dec
js
pusha
lods
loope
xor
mov
add
cli
xchg
and
sbb
movs
mov
lods
dec
in
aaa
lods
jp
pop
ret
cmp
jno
push
inc
mov
pop
mov
jo
pop
mov
and
mov
xchg
pop
or
xor
xlat
dec
mov
dec
xchg
sub
imul
sahf
pop
pop
je
and
cmp
or
(bad)
clc
idiv
test
fild
lds
hlt
adc
clc
data16
jg
push
mov
sub
mov
es
cld
loop
ficom
retf
inc
jns
inc
loop
mov
test
dec
cmp
fsub
mov
xor
arpl
mov
scas
sub
test
stc
into
xchg
mov
jnp
push
mov
adc
push
pop
(bad)
in
jmp
jbe
sub
push
mov
push
dec
or
sub
adc
rol
inc
inc
mov
xchg
xchg
ret
lds
clc
xchg
xlat
mov
les
sub
add
div
mov
xor
push
das
mov
mov
imul
cmp
inc
les
fadd
and
imul
aam
icebp
mov
xchg
dec
idiv
iret
dec
sar
fild
pop
std
xchg
inc
(bad)
cmp
sub
mov
pmulhuw
and
mov
gs
clc
pop
pop
lea
xchg
movs
mov
xor
jbe
mov
(bad)
sub
push
sub
mov
pop
mov
scas
add
pop
or
mov
loope
lock
std
cmp
mov
and
push
leave
repnz
inc
inc
(bad)
leave
mov
cs
inc
bound
xchg
mov
xchg
mov
imul
cmp
push
pop
in
mov
outs
sub
jmp
std
fs
fisttp
shl
les
ss
leave
adc
jae
outs
sbb
pop
sub
lahf
pop
cmc
jbe
nop
sbb
jp
cmc
out
inc
inc
jne
add
sbb
daa
mov
fucomi
sbb
icebp
sti
scas
mov
rol
loop
mov
lahf
fwait
scas
ss
mov
lods
lock
adc
xchg
(bad)
shr
popf
mov
sbb
mov
ins
cdq
push
xchg
adc
jecxz
or
iret
movs
sbb
xor
jne
push
xchg
out
adc
ret
jmp
sub
xor
mov
jmp
ret
mov
bound
jb
xor
push
punpcklbw
push
stos
adc
aas
sub
jae
inc
mov
dec
push
test
lods
or
jb
fist
adc
mov
ror
push
fcomp
jo
sub
test
fild
mov
push
in
or
outs
ins
scas
inc
bound
icebp
and
inc
sbb
loope
(bad)
fiadd
ror
and
push
sar
shr
test
push
shl
jmp
retf
es
or
test
test
je
hlt
or
(bad)
mov
sbb
fild
popf
ds
xchg
xor
jmp
xor
jmp
adc
xor
mov
loope
outs
mov
mov
add
call
fist
icebp
gs
aam
(bad)
fld
loopne
push
fstp
shl
mov
pop
je
fstp
out
adc
div
int
popa
(bad)
xor
mov
dec
mov
mov
(bad)
pop
push
mov
mov
jmp
mov
pop
cmp
popf
movlps
out
sbb
and
repz
call
test
into
fnstcw
in
mov
push
dec
mov
mov
gs
jecxz
shl
cmp
adc
mov
loop
fs
ds
dec
mov
xchg
jns
(bad)
retf
ins
into
jmp
iret
add
xor
lock
sti
jmp
dec
loope
sbb
cld
(bad)
arpl
push
mov
or
out
push
xchg
jmp
adc
sbb
inc
in
ins
pop
mov
dec
adc
jp
(bad)
mov
mov
push
xor
adc
(bad)
mul
aas
mov
push
push
popf
cmps
sub
pop
mov
add
mov
enter
nop
inc
clc
dec
xor
pop
stos
das
mov
adc
stc
push
xchg
loop
jmp
movs
lock
daa
fcomp
sbb
bound
idiv
fdivr
push
cmps
leave
ret
add
pop
add
push
add
fs
lock
imul
mov
inc
enter
or
xor
in
jge
dec
and
clc
jno
jbe
cmp
lods
div
mov
sahf
add
adc
xchg
test
pop
daa
bound
or
adc
adc
jb
in
in
inc
jns
cmp
ss
and
jmp
call
add
(bad)
push
adc
fild
dec
inc
and
xor
loopne
jp
leave
js
in
mov
sahf
mov
enter
xor
aaa
mov
xchg
mov
jno
icebp
jp
xchg
movs
cmps
pop
ds
and
hlt
stc
push
cmp
jb
imul
loope
mov
ss
cmp
pop
cmc
push
mul
in
cdq
mov
or
dec
dec
cwde
rcr
les
sub
mov
(bad)
rcl
xor
mov
xchg
push
imul
call
fld
or
loopne
add
jno
imul
aam
pop
data16
jb
xor
push
vandnps
jbe
ds
dec
mov
cmp
popa
(bad)
in
into
movs
or
cmp
inc
cwde
add
sbb
les
jo
scas
ds
cmc
xchg
mov
jl
add
add
push
push
inc
out
mov
adc
xchg
push
mov
ficom
push
ins
aas
lods
mov
ss
enter
push
rcr
pop
push
sbb
xor
jno
adc
push
ds
mov
jae
mov
pop
mov
fisubr
push
cmp
xor
jbe
test
xor
test
lds
fcmovne
imul
test
jns
iret
fwait
dec
sbb
pop
loopne
dec
or
pop
xor
jle
mov
mov
mov
xchg
(bad)
ins
jge
adc
cld
scas
cs
aas
cmp
mov
and
sahf
pop
aad
mov
mov
dec
pusha
dec
in
jle
lea
inc
mov
xor
outs
adc
cs
mov
jmp
clc
fs
out
movs
sahf
fistp
sub
frstor
dec
inc
mov
add
rcl
cld
idiv
in
test
cmp
ja
pop
(bad)
xlat
ss
pusha
sbb
test
dec
cld
or
inc
and
in
fmul
dec
or
cmps
fsubr
es
dec
jmp
nop
jge
loopne
jae
push
mov
add
pop
arpl
rol
push
adc
mov
adc
std
cmp
mov
arpl
das
or
in
xor
pop
inc
test
cmc
das
or
or
xchg
(bad)
in
lods
fist
ja
mov
enter
leave
sbb
add
xchg
push
cdq
lds
mov
xchg
stc
cmp
inc
cmove
iret
lock
sbb
mov
loop
pop
push
jp
xchg
jge
out
in
jne
or
mov
push
inc
clc
sbb
call
xlat
mov
jo
adc
xchg
and
add
add
enter
lock
pop
leave
movs
mov
rol
cmc
fs
mov
retf
ja
push
cmc
mov
cmps
enter
outs
das
ss
lods
std
push
jns
out
inc
or
in
or
mov
or
pop
pusha
push
xchg
std
xor
add
push
out
shl
inc
les
dec
and
dec
imul
test
sub
add
sti
sar
dec
xor
mov
xor
ss
aam
inc
mov
sbb
imul
mov
fdiv
aad
mov
lahf
int3
cld
xchg
add
addr16
cmp
push
test
retf
js
or
push
xor
and
mov
arpl
int
leave
stos
or
loop
or
adc
mov
adc
pop
adc
(bad)
add
cmps
jb
out
mov
adc
mov
mov
ss
into
push
je
(bad)
es
gs
out
dec
push
mov
mov
adc
je
jae
imul
mov
or
mov
xor
fnstenv
daa
jo
fwait
neg
and
sahf
cmp
sbb
mov
ja
and
mov
jp
jns
bound
mul
lahf
jp
mov
repz
addr16
add
not
jmp
sub
jb
test
jg
daa
out
dec
enter
jnp
ret
xor
outs
mov
test
xor
imul
jno
adc
sub
aam
(bad)
cmp
mov
or
push
xchg
movs
cmps
pop
sbb
sbb
bound
xor
loopne
dec
int3
outs
jmp
shr
shl
out
mov
int3
sbb
push
nop
hlt
stos
add
iret
pop
stos
test
int3
sbb
xchg
repz
pop
cmps
popa
xor
jle
nop
xor
inc
mov
pop
push
in
bound
push
jno
jbe
ja
dec
sub
cmp
add
sub
fsubr
mov
sub
jp
aad
js
mov
js
lahf
leave
ins
(bad)
xor
ret
pop
leave
into
mov
pop
dec
jno
inc
test
inc
test
fldcw
ret
push
and
push
inc
xor
scas
aaa
adc
clc
popa
mov
rcr
pop
sti
aaa
dec
imul
dec
jae
mov
xlat
(bad)
fwait
ins
mov
lods
dec
and
xchg
jae
mov
sar
rol
mov
push
aaa
(bad)
mov
jg
sub
pop
faddp
mov
cmps
cmps
leave
adc
mov
inc
dec
pop
call
fsubr
jge
jecxz
call
std
or
or
arpl
pop
inc
cs
clc
mov
or
dec
lods
std
inc
and
pop
pop
jmp
pop
sub
retf
addr16
cdq
sub
out
jbe
ins
vpaddb
xchg
call
(bad)
mov
inc
pop
and
cmps
lods
sbb
daa
repnz
aaa
imul
fisttp
mov
fld
mov
jnp
(bad)
jle
push
jo
jbe
mov
xchg
and
xchg
pop
xchg
fstp
fcom
cmc
aad
out
fstp
cmp
in
xchg
jbe
xor
xchg
push
fisttp
out
sub
mov
inc
(bad)
pop
push
pop
movs
inc
dec
lds
aam
sbb
inc
aam
sub
in
push
mov
pop
std
mul
icebp
enter
fiadd
ss
jb
scas
mov
and
or
clc
xchg
sbb
movs
ficomp
mov
jnp
inc
sbb
mov
ret
xlat
rcr
bound
adc
mov
sub
in
outs
dec
hlt
out
adc
cmps
or
andnps
in
and
retf
jne
and
mov
sub
cld
int3
loopne
fimul
bound
fimul
cmps
push
sub
adc
dec
fiadd
les
jmp
jno
xchg
test
sub
jo
shl
hlt
loope
lock
pop
xchg
jp
(bad)
outs
and
pop
xor
sub
stos
push
addr16
scas
shr
enter
sub
shr
dec
ja
loope
test
retf
mov
pusha
das
push
mov
icebp
fisub
add
iret
xchg
sbb
jnp
fsub
imul
mov
dec
inc
or
or
sub
cmps
cld
mov
dec
adc
je
jno
test
lahf
rol
popf
daa
add
addr16
ins
sub
stc
mov
mov
mov
out
shl
jecxz
inc
mov
(bad)
mov
cmp
(bad)
sbb
and
shl
xchg
cli
mov
xor
stc
pushf
cmc
in
in
cmps
sbb
mov
xor
jmp
mov
inc
push
or
iret
fnstsw
dec
pop
mov
mov
adc
dec
test
and
jns
fdivr
or
dec
mov
push
and
aaa
movhps
sbb
mov
push
cmp
shl
cli
jae
pop
xchg
leave
jns
add
js
dec
pop
iret
test
sub
mul
and
lldt
xchg
mov
dec
push
sbb
jne
shr
js
(bad)
jae
jno
pop
icebp
or
lods
je
sbb
pop
leave
xor
les
adc
pushf
add
adc
push
pop
movs
xchg
push
mov
push
push
pop
fstp
in
(bad)
hlt
add
sar
push
mul
xchg
outs
sbb
std
jmp
xchg
xor
stos
fisubr
and
pop
shl
sub
inc
aam
sbb
outs
lods
add
cmc
sbb
popf
jno
stos
movs
pop
push
test
out
fcom
mov
ss
sbb
jmp
xor
(bad)
lock
icebp
iret
jb
cmova
adc
(bad)
call
sub
outs
pop
xchg
les
imul
inc
adc
imul
fnstenv
or
out
dec
imul
pop
ret
xor
push
arpl
mov
enter
ds
xchg
add
rol
jno
icebp
addr16
outs
push
pushf
and
dec
retf
jbe
adc
cmps
and
pop
aaa
adc
in
or
xchg
lea
mov
(bad)
mov
sub
mov
sub
inc
adc
xor
sbb
jmp
jno
pop
outs
or
lfs
add
xor
or
dec
mov
fucomp
out
xchg
pop
fwait
push
mov
or
mov
sti
cld
or
mov
xor
adc
jl
aas
data16
mov
push
fadd
adc
pop
push
(bad)
xchg
sbb
xchg
out
fsubp
pop
fdivr
scas
imul
lods
adc
enterw
hlt
ret
lea
or
mov
sub
ficomp
and
repnz
jae
test
enter
test
or
sahf
adc
sti
cmc
lods
inc
inc
push
loopne
retf
setb
dec
test
pop
movs
sti
xlat
sbb
mov
xchg
and
dec
sti
retf
jmp
dec
pop
jle
jge
or
data16
ds
fcmovb
push
lahf
xor
xchg
xchg
push
ds
repnz
ja
adc
sahf
xchg
out
jl
cmp
lds
xchg
dec
dec
mov
js
fidiv
sub
scas
dec
jecxz
or
ss
in
shl
pop
fwait
mov
add
jbe
pop
aam
movs
jbe
jecxz
loop
clc
xlat
or
sbb
or
pusha
lock
cmp
push
lahf
arpl
shl
inc
sbb
xor
das
or
ins
jns
shl
ret
cli
cmc
sbb
(bad)
mov
jecxz
jle
imul
into
sbb
inc
and
push
pop
sub
adc
movs
iret
scas
xchg
jp
mov
add
outs
add
mov
enter
sub
out
xor
and
xchg
les
jg
jl
in
repz
mov
add
aam
pop
clc
dec
call
xchg
mov
loop
cmp
daa
sbb
fisub
repz
pop
pop
enter
or
push
lds
cdq
cmp
cmps
mov
mov
sti
xchg
leave
cmc
test
inc
adc
pop
clc
(bad)
clc
mov
push
sbb
test
or
shr
inc
out
mov
ja
mov
stos
and
dec
xlat
mov
xor
sub
(bad)
(bad)
ds
xlat
lods
dec
out
adc
and
jae
xor
test
loopne
mov
mov
jmp
mov
xchg
sub
xor
and
add
mov
mov
sub
mov
ins
fcomp
jmp
and
jns
into
call
imul
xor
mov
push
shl
out
cmp
add
stos
jmp
ror
aam
cmp
mov
ret
arpl
adc
in
jbe
imul
and
xor
lods
cmp
imul
xchg
(bad)
mov
repz
adc
and
daa
loop
std
fist
inc
jne
dec
sbb
imul
cmp
fwait
pop
jnp
in
sub
test
mov
in
push
outs
rcl
scas
xor
rcr
repz
adc
stc
inc
jecxz
cwde
push
mov
lea
call
push
inc
call
push
or
pop
dec
lock
dec
mov
adc
test
cmp
jno
xchg
mov
push
mov
mov
vmovd
(bad)
cmps
mov
aas
push
cmp
outs
sahf
inc
and
adc
push
add
lea
scas
stc
arpl
mov
fisub
add
data16
pop
mov
mov
fidiv
xchg
or
in
push
das
mov
xlat
es
pop
dec
cmp
(bad)
xchg
repz
xchg
addr16
rol
fdivr
test
adc
mov
fadd
in
aas
mov
repz
daa
push
popf
adc
pop
fs
pop
xchg
ins
push
cmp
sub
or
add
fdivr
pop
cmp
(bad)
and
cmp
add
cmp
aas
and
sbb
jmp
mul
mov
stos
jmp
and
bswap
mov
outs
push
int3
push
xor
int
retf
div
ss
out
rol
sbb
mov
xchg
in
pop
jecxz
inc
jg
dec
push
(bad)
fsubr
cmps
lock
(bad)
je
pop
pop
mov
inc
movs
cmp
pop
sub
cli
arpl
aam
sub
(bad)
cmp
ja
(bad)
sbb
mov
mov
xlat
addr16
test
movs
les
in
adc
ds
(bad)
push
retf
pop
test
loope
push
call
add
mov
inc
jnp
sbb
xor
in
inc
jbe
mov
or
adc
inc
push
ret
in
leave
xchg
test
push
mov
dec
outs
arpl
popa
ins
push
pusha
xchg
pop
hlt
scas
pop
aaa
push
stos
loope
cmp
mov
imul
pop
jge
(bad)
stc
push
jno
jle
sub
add
pop
scas
adc
mov
icebp
jno
lock
cs
addr16
push
push
sbb
scas
lea
adc
and
jnp
ja
je
sub
loop
repz
mov
movs
jne
push
(bad)
cmps
jg
int
mov
sbb
sbb
lds
call
lods
shr
call
pop
cmp
ja
mov
inc
in
int3
cmova
mov
lods
ins
inc
ror
mov
cdq
(bad)
pop
dec
sahf
test
gs
ins
aam
xor
js
out
sub
lods
out
fistp
pop
inc
(bad)
push
mov
js
xor
dec
outs
gs
sub
dec
pop
ins
mov
jae
mov
fisubr
pop
add
push
(bad)
jg
iret
push
xchg
dec
lock
leave
popa
loop
mov
stc
fsubr
into
inc
outs
cs
sbb
xor
or
pop
add
cmps
and
or
pop
push
push
fldl2t
ret
sar
mov
or
arpl
scas
mov
fmul
mov
gs
and
mov
add
push
pop
loop
fmul
in
or
ins
movzx
stos
push
pop
fneni(8087
jle
push
sbb
ins
mov
sub
js
scas
mov
cmp
dec
test
shl
push
add
cli
sbb
lods
cmp
pop
mov
mov
popf
push
sub
(bad)
dec
push
jg
cmp
and
and
xchg
shl
loope
push
adc
jecxz
and
jmp
jmp
adc
inc
mov
jge
jmp
mov
out
test
imul
xchg
dec
movs
ss
scas
lock
lock
jb
ss
mov
test
test
mov
cli
fs
or
fmul
cmp
jbe
sar
jge
mov
jge
pop
dec
xchg
aad
lahf
jns
test
cmp
xchg
and
dec
push
and
clc
scas
fdivr
push
clc
and
out
scas
out
mov
xor
bound
cmps
leave
push
jb
inc
sbb
test
iret
into
lea
jl
mov
jo
loopne
or
inc
xchg
daa
imul
push
dec
fimul
outs
(bad)
fdivrp
cmc
xchg
mov
test
pop
mov
into
sub
xor
add
mov
pop
cmps
xor
mov
loop
sub
in
mov
fcom
inc
sub
(bad)
sub
mov
test
mov
sub
imul
cmp
mov
hlt
pusha
push
fs
xor
out
jle
jp
fld
dec
fidiv
add
(bad)
std
rol
mov
jmp
pop
cwde
ins
loopne
sbb
mov
add
sub
xor
into
cli
jno
cld
les
ja
push
mov
out
inc
lea
sti
mov
pop
mov
mov
icebp
mov
js
xchg
ins
add
aam
xor
and
mov
mov
mov
add
fidivr
jns
sbb
adc
imul
or
in
lock
fcom
int3
mov
fwait
data16
add
dec
scas
and
mov
scas
inc
mov
cdq
ins
pusha
nop
mov
xchg
xor
call
das
dec
repnz
lahf
pop
jmp
dec
in
ror
jmp
dec
sbb
sub
mov
xor
dec
sub
xchg
stc
mov
mov
pushf
mov
or
ja
sbb
pushf
fdiv
in
and
xor
pop
das
dec
dec
or
push
sub
in
gs
mov
cmp
inc
sahf
mov
icebp
lds
pop
fwait
xchg
and
js
add
retf
aam
jno
leave
popa
or
in
xor
sbb
cmps
sahf
(bad)
adc
dec
outs
arpl
sbb
cmp
dec
(bad)
out
ins
test
mov
dec
push
mov
cmp
emms
jp
(bad)
jp
push
mov
and
(bad)
jl
adc
sbb
cmc
cmps
mov
jns
ins
call
scas
(bad)
or
pop
adc
stos
mul
mov
repz
add
dec
jge
loope
les
cs
(bad)
mov
js
push
dec
out
push
jne
outs
loop
cmp
imul
inc
fdiv
add
xor
test
iret
shl
das
sti
add
xchg
ret
sbb
daa
bound
mov
mov
imul
cli
lods
mov
mov
or
inc
dec
lock
(bad)
jle
loopne
or
pop
push
sbb
out
rcr
or
jo
(bad)
jmp
ins
jmp
or
loopne
fisttp
fnstenv
add
ja
dec
cmp
jbe
push
sbb
jnp
movs
push
mov
jmp
lods
jmp
sbb
and
jmp
movs
vmovaps
and
(bad)
imul
sbb
add
cdq
dec
addr16
mov
lock
ds
push
jmp
sahf
adc
mov
sar
cli
fs
int3
loopne
inc
shl
dec
das
xchg
mov
sbb
adc
lds
or
jno
add
in
push
mov
pushf
sub
sub
(bad)
jecxz
ja
jnp
daa
inc
adc
(bad)
pop
sub
rcl
jns
jp
xchg
call
ds
pop
adc
mov
out
inc
sbb
cmps
add
xor
aam
call
test
adc
in
int
pop
ss
or
ret
or
jae
es
xor
sub
pop
jmp
loope
mov
sub
ret
jg
js
push
pop
mov
jg
jnp
xor
(bad)
rcr
mov
add
and
pop
mov
sub
mov
std
pushf
mov
cmp
fdivp
sbb
(bad)
lock
dec
sbb
sbb
not
mov
xchg
stos
xchg
xor
repnz
sbb
mov
or
sti
jno
scas
and
lock
(bad)
or
ja
dec
jecxz
jno
je
inc
mov
jmp
mov
mov
adc
mov
fcomp
inc
jmp
repz
(bad)
es
jg
int3
cwde
adc
fsub
mov
add
fadd
in
cdq
stos
inc
rol
shr
pusha
pop
add
mov
stos
gs
ret
inc
(bad)
(bad)
jge
(bad)
cld
stos
icebp
jg
cmps
jge
cmp
cmp
jp
add
cmp
mov
mov
test
ds
popa
lahf
in
ficomp
add
jne
mov
sbb
arpl
xor
mov
cmp
icebp
add
xor
sub
stos
adc
xor
push
ds
sub
mov
out
sbb
ret
add
mov
std
sub
popa
aaa
cmps
lea
dec
ficomp
add
mov
(bad)
pop
rol
dec
pop
and
call
ja
data16
sbb
mov
mov
or
aas
xor
or
lock
mov
test
jl
ret
xor
cld
mul
add
int
cmp
stos
and
imul
ret
sti
into
add
mov
xor
cmp
xor
lea
fcomp
ins
ds
imul
shl
mov
xchg
or
paddsb
fidivr
adc
sub
aad
mov
mov
fisttp
mov
adc
mov
inc
jnp
xchg
pushf
lods
mov
inc
jecxz
cmps
mov
sub
xor
cmc
outs
fdiv
dec
test
cmp
(bad)
sub
mov
lods
sar
push
and
inc
sbb
sbb
jne
test
xor
aas
call
pop
sub
gs
or
sti
add
cli
jl
mov
xchg
pop
repnz
xor
xor
retf
jns
mov
push
fcomp
jle
into
mov
dec
sub
inc
hlt
push
cmps
rcr
test
iret
in
jle
shr
mov
out
loopne
jno
das
sub
fs
imul
push
(bad)
in
ss
xor
push
push
imul
aam
cs
jp
sub
mov
out
jle
jb
js
sbb
hlt
cmp
jp
xlat
fwait
jl
cmp
xor
add
sub
loop
jns
push
std
or
(bad)
loopne
xor
adc
retf
cli
xor
out
(bad)
out
jmp
imul
mov
cmp
addr16
mov
dec
ret
nop
int
mov
xor
out
mov
push
cmp
and
jmp
mov
test
(bad)
mov
lds
iret
jg
mov
push
push
xchg
fidiv
sub
dec
call
lock
or
xor
movs
inc
aaa
out
xchg
xor
dec
jg
movs
cmp
retf
and
pop
sub
jne
sbb
xchg
pop
push
(bad)
imul
out
call
arpl
pop
jp
inc
rcr
pop
add
mov
adc
mul
jl
or
or
packssdw
(bad)
adc
fisttp
xchg
stc
in
cmc
std
out
in
out
pop
mov
mov
push
(bad)
in
mov
mov
mov
fild
push
mov
adc
pop
cmp
scas
dec
jmp
cmc
and
lds
imul
sbb
aaa
sbb
adc
mov
pop
push
cmp
or
ins
out
iret
pop
mov
adc
mov
cdq
aas
clc
nop
push
ror
sub
je
dec
xchg
dec
hlt
mov
fisubr
or
retf
push
mov
pop
mov
out
mov
jae
push
dec
repnz
fsubp
xor
adc
test
movs
push
adc
push
xchg
cmps
adc
xchg
sub
daa
xchg
lods
imul
inc
jp
ins
inc
push
pop
sbb
outs
push
or
push
mov
lds
jne
fninit
test
pop
sub
xchg
fist
bound
adc
stos
mov
sbb
xor
aam
dec
shr
call
jg
xor
jns
lahf
enter
push
xor
js
and
retf
xor
ficom
pop
aaa
cld
int3
inc
rcr
mov
mov
call
out
sbb
loop
ins
(bad)
int
rcr
cmp
das
pop
dec
das
fcomip
cmps
pop
aad
xor
icebp
pusha
mov
outs
scas
call
mov
fs
mov
or
xor
cmp
ficom
jg
inc
js
rcl
les
cli
or
fsubr
outs
xor
popa
pop
dec
cmp
test
popa
mov
test
pop
sub
or
stc
sub
ret
js
retf
sub
or
ret
sar
(bad)
test
lds
sub
arpl
pop
jmp
js
xchg
pop
lock
scas
hlt
fist
out
(bad)
push
cmp
popf
dec
ss
popf
not
pop
das
inc
xchg
push
mov
and
sbb
jl
jl
jns
ja
cli
int3
mov
aad
mov
in
repnz
pop
or
int
adc
ds
mov
mov
jp
cmp
mov
push
pop
ins
push
mov
neg
mov
call
xor
pop
sub
push
bound
out
mov
popa
push
dec
(bad)
pop
dec
jne
adc
jmp
stc
dec
and
mov
cmp
addr16
xchg
xchg
mov
add
adc
and
add
call
mov
repz
outs
call
fidivr
int3
mov
fstp
sbb
cld
mov
dec
jae
mov
aad
dec
or
push
in
push
mov
inc
icebp
push
out
add
aaa
mov
mov
adc
mov
sub
and
xchg
xchg
pop
jb
cdq
sbb
test
repz
push
xchg
xchg
es
push
rol
bound
jecxz
int
mov
or
(bad)
out
xchg
push
hlt
and
hlt
test
xchg
dec
cmps
je
xor
cwde
in
sub
sahf
jno
and
mov
ins
fcmovnu
adc
xor
test
xor
sbb
mov
xor
jns
fild
add
ins
enter
aam
or
ficom
push
or
in
mov
test
outs
call
cmp
aad
aam
mov
cwde
data16
mov
ins
pushf
es
arpl
xchg
xor
loope
jmp
stc
jge
fld
dec
(bad)
(bad)
ins
jge
enter
test
std
sahf
adc
mov
push
scas
jmp
and
adc
std
lahf
jle
adc
xchg
fwait
pop
mov
jo
cmp
loop
xor
loopne
repz
and
out
loopne
loopne
jmp
jmp
shl
(bad)
jmp
test
pop
pop
shl
xchg
pop
and
test
paddw
cmps
push
ja
pushf
cmc
movs
fdivr
les
add
outs
add
jg
in
push
xlat
(bad)
xchg
sub
jnp
cwde
fcmovnb
jge
aam
mov
dec
mov
or
das
cmp
ffree
pop
inc
and
xchg
xchg
imul
sbb
imul
add
cdq
push
(bad)
ds
in
add
sti
clc
jmp
mov
lahf
add
rcr
and
mov
xor
ss
inc
push
jo
xor
dec
inc
add
dec
scas
std
pop
adc
jbe
add
or
and
lock
mov
xchg
fadd
xchg
mov
test
pop
mov
mov
xchg
in
sub
mov
mov
jo
jae
imul
add
cmp
jl
div
add
jbe
ret
sub
arpl
inc
(bad)
mov
inc
in
xor
dec
push
push
sahf
pop
sub
push
ins
cmc
jmp
pop
je
jne
iret
xchg
xor
push
sbb
repnz
add
(bad)
shl
pusha
and
adc
(bad)
das
sbb
jge
bound
in
pop
push
cmp
push
xor
rcr
mov
cdq
jnp
sbb
ret
pop
js
(bad)
pushf
into
das
and
cmp
pop
popa
xor
ja
jae
lea
and
ret
sbb
inc
fild
cmp
jg
mov
arpl
loopne
les
dec
push
inc
add
jle
mov
enter
scas
push
mov
or
push
cmp
js
sub
imul
adc
pop
popf
or
int3
test
jbe
jns
push
rcl
int3
push
fwait
shr
je
cmp
push
adc
inc
lods
rcl
cwde
and
outs
sub
push
aas
repz
retf
test
jo
loop
cmp
mov
and
retf
mov
sub
fwait
adc
lds
jbe
sti
lea
daa
stc
es
add
dec
call
xchg
outs
mov
or
adc
jbe
and
adc
(bad)
dec
mov
test
push
adc
cli
xor
jns
setne
xor
enter
inc
hlt
xor
fdiv
xchg
shl
loop
mov
pop
fimul
test
sub
test
in
and
xor
dec
xchg
jbe
mov
aas
addr16
jns
scas
sub
das
mov
into
nop
adc
loope
je
sbb
push
xor
inc
adc
fcmovb
add
mov
aam
jecxz
cwde
out
mov
pop
pop
pop
xlat
jo
sub
fstp
(bad)
icebp
aaa
mov
(bad)
mov
leave
fwait
js
movs
pop
mov
ror
lods
sbb
test
cmp
rcl
jns
(bad)
push
xor
inc
pop
int
jge
sbb
stos
rcl
bsf
jle
adc
retf
leave
rol
adc
fcmovu
stos
cmp
ins
inc
in
call
daa
mov
lahf
sar
in
mov
or
or
(bad)
sub
mov
or
add
xor
adc
sub
das
les
stc
mov
sbb
in
fwait
sub
sbb
push
or
mov
pusha
loop
imul
xlat
iret
js
(bad)
retf
arpl
ins
(bad)
aad
fcom
add
lods
xor
in
inc
in
aas
sbb
(bad)
dec
cmps
push
(bad)
mov
dec
std
push
stos
aam
sahf
(bad)
or
mov
outs
adc
adc
pop
jo
add
or
mov
arpl
adc
jnp
aas
(bad)
stos
pop
add
and
and
inc
aas
jp
(bad)
mov
cmp
rol
js
and
pop
and
ins
and
repnz
retf
ins
push
add
in
test
sbb
mov
test
dec
cwde
jp
in
repnz
xchg
adc
sub
and
sub
xchg
fadd
or
add
xor
sub
sub
xor
les
out
xchg
mov
xor
in
(bad)
mov
mov
mov
jbe
xchg
fnstsw
pushf
ja
or
push
sti
test
inc
inc
pop
mov
sti
(bad)
fistp
mov
pop
les
outs
mov
inc
retf
popf
mov
arpl
push
aas
and
daa
mov
inc
cs
mov
push
jbe
cmp
dec
lods
dec
call
es
sbb
fwait
adc
mov
cs
fiadd
(bad)
ror
js
cdq
inc
data16
stos
out
xchg
test
inc
daa
(bad)
cmp
rcr
test
cld
add
shl
add
pusha
push
jbe
outs
xor
icebp
xchg
dec
add
mov
xchg
test
xor
adc
popf
cmc
xchg
jle
iret
push
int3
mov
fidiv
push
xchg
sbb
pop
test
fmul
dec
es
ins
inc
in
loop
mov
ins
dec
push
mov
mov
mov
push
mov
(bad)
xor
inc
xchg
es
ja
mov
iret
fisttp
dec
xchg
or
data16
(bad)
add
and
mov
sub
add
jp
mov
arpl
dec
addr16
or
pop
jp
cmc
or
jb
dec
xor
xchg
mov
dec
pop
sub
(bad)
and
mov
jno
lds
ja
lods
test
add
sub
push
outs
add
scas
nop
pop
add
inc
mov
mov
xchg
sub
std
aas
jle
scas
imul
stos
imul
loope
mov
xchg
mov
xchg
test
test
repz
or
push
addr16
mov
ss
mov
inc
ror
ds
xor
int3
sub
cmp
inc
push
add
add
std
stos
faddp
les
out
std
repz
nop
mov
(bad)
fdivr
jae
loop
aam
adc
inc
inc
and
cs
in
dec
ret
xchg
push
mov
sbb
mov
inc
cmc
lock
xor
xchg
(bad)
push
shl
adc
fnstenv
pop
mov
push
or
leave
and
popa
xchg
cmps
mov
sub
(bad)
sub
fsubr
enter
(bad)
mov
sahf
sub
xchg
mov
data16
retf
repz
inc
adc
push
inc
div
adc
inc
push
ret
jmp
pop
and
or
push
add
add
jae
xchg
loope
dec
pusha
mov
nop
jecxz
fdivr
fdiv
cwde
add
into
push
add
aas
pop
sub
test
outs
inc
jo
fwait
imul
push
inc
sbb
and
(bad)
lods
pop
retf
sbb
in
repz
xor
adc
js
cmp
push
(bad)
mov
or
inc
aam
scas
jb
lock
cmp
pushf
sbb
jbe
xor
dec
inc
cmc
xchg
(bad)
jnp
(bad)
sub
sbb
mov
(bad)
jg
paddusw
dec
psubsb
mov
fisttp
je
jbe
xlat
mov
push
mov
int3
and
xor
les
mov
cmp
pop
fwait
pushf
rcl
jmp
js
cmp
mov
mov
pop
adc
(bad)
jae
ins
fwait
adc
cmp
shl
fwait
cmp
pop
stos
jb
dec
sti
fistp
dec
(bad)
mov
lods
mov
xlat
jb
fmulp
mov
out
adc
dec
ret
xchg
sahf
jb
ja
sbb
add
inc
adc
enter
fdiv
ret
lods
cmc
lods
fsub
xchg
ins
retf
cmp
push
shr
inc
push
cmp
cmp
inc
mov
fs
jg
mov
mov
or
or
cmp
xchg
ds
pop
adc
cld
ins
and
out
fld
addr16
mov
push
mov
sbb
gs
sub
mov
mov
xchg
mov
xchg
aam
ins
pop
inc
lods
jnp
int3
sub
(bad)
out
ficomp
nop
gs
xchg
je
stos
inc
xchg
test
sbb
push
test
jg
xor
out
fistp
in
xor
sbb
and
or
sub
iret
or
add
js
mov
mov
js
(bad)
sbb
ret
dec
std
ror
(bad)
jne
pusha
arpl
sbb
outs
aam
or
int3
ficom
pop
(bad)
and
fs
xor
leave
push
cwde
shl
xchg
rcl
cmp
mov
xor
stos
add
call
and
and
push
and
mul
sub
cmp
mov
pop
(bad)
test
push
rcr
idiv
sub
test
loop
mov
fwait
push
jns
and
fsubp
jne
jge
xor
sub
stos
dec
repz
adc
jae
pop
adc
jne
jle
inc
inc
ror
cmp
gs
cld
cmp
push
fmul
loope
sub
xor
xchg
mov
add
cli
inc
movs
push
add
sbb
test
adc
dec
std
jne
jmp
xor
sbb
dec
cld
repnz
mov
and
call
pushf
sub
dec
inc
rol
jle
ret
(bad)
daa
mov
retf
mov
addr16
push
dec
dec
xchg
daa
cld
xor
or
cdq
or
inc
jne
iret
bnd
mov
ud2
xchg
fldenv
ins
int3
lea
lock
mov
outs
call
nop
(bad)
movs
outs
cmc
sub
sti
(bad)
call
in
mov
scas
(bad)
pop
imul
call
test
in
retf
jns
pop
push
sahf
xchg
mov
xchg
jno
out
mov
shr
pop
ss
pop
in
fwait
mov
jp
mov
dec
mov
pop
inc
sub
int3
fdiv
ss
cmps
pop
(bad)
js
pop
sahf
fs
daa
idiv
push
(bad)
mov
or
inc
lds
enter
imul
inc
push
push
cmp
pop
add
sub
fisubr
mov
rol
add
fwait
adc
std
not
imul
fmul
mov
ror
or
mov
xor
push
pop
pop
sahf
aaa
jg
fwait
and
fwait
jl
sbb
jns
cwde
and
push
xchg
add
push
imul
cmp
sbb
jnp
pop
iret
fist
inc
jno
lea
movs
xchg
jae
jg
outs
push
outs
pop
fs
cmp
xchg
fbstp
fld
mov
stos
xchg
in
cmp
pop
sub
mov
ja
push
std
rcl
stc
test
movs
stos
cld
push
sub
sub
pushf
jg
sub
js
in
nop
hlt
mov
test
movs
and
mov
std
jge
mov
mov
mov
test
into
inc
mov
std
xchg
jno
hlt
shr
cwde
push
adc
sub
lea
lods
sar
jmp
or
sbb
jae
repnz
sbb
pop
xor
lds
data16
sub
shr
jne
lods
icebp
mov
fcom
inc
sbb
fidiv
aaa
cmp
cs
js
mov
push
and
dec
push
jbe
push
push
jge
cdq
mov
adc
push
sub
mov
jmp
imul
xchg
mov
sbb
mov
inc
enter
cmp
fwait
jae
aaa
pop
jo
pop
(bad)
pop
xor
ret
dec
in
cwde
adc
push
cmp
push
mov
lods
ins
dec
call
push
xor
mov
addr16
pushf
aam
add
(bad)
icebp
push
les
cli
shl
jmp
and
adc
mov
xchg
(bad)
and
sub
rep
in
leave
adc
fbld
pop
pop
out
iret
pop
jge
or
pop
add
xchg
or
(bad)
fild
jo
imul
mov
xor
pop
inc
push
pop
mov
dec
adc
cmp
adc
fsub
shr
add
or
push
mov
push
not
es
bnd
fldenv
dec
mov
mov
retf
dec
sub
push
jne
fnstsw
mov
in
jnp
leave
cmp
dec
jle
outs
push
jle
div
not
mov
mov
ss
pop
mov
add
inc
mov
xchg
mov
test
lea
ret
sub
dec
(bad)
fsubr
test
test
cld
jp
out
popa
cmp
imul
mov
out
int3
dec
icebp
xor
jg
and
mov
aad
cdq
ret
ja
lahf
push
add
loop
loope
mov
sbb
lods
jp
sbb
jle
fadd
call
dec
(bad)
and
or
xchg
push
xchg
inc
out
out
xchg
pop
mov
and
push
add
jmp
adc
dec
hlt
pushf
jg
or
test
add
iret
and
and
call
shl
sub
retf
push
pop
sbb
enter
add
inc
mov
cmp
xchg
dec
inc
(bad)
imul
pop
cmps
lods
lds
or
and
pop
add
or
push
mov
iret
dec
ret
pop
dec
mov
jecxz
test
or
jae
loop
(bad)
iret
je
ficomp
into
fs
nop
movzx
sti
inc
es
aad
test
cld
cmp
xchg
cmp
xchg
dec
dec
test
inc
fs
mov
mov
popf
or
mov
iret
ja
retf
mov
dec
pop
jmp
nop
xchg
addr16
gs
adc
push
xor
fdivr
ret
cmps
lea
xchg
and
lahf
shl
fsubr
mov
adc
jo
pop
daa
xlat
mov
xchg
xor
test
add
pop
sar
mov
mov
pop
cmp
mov
ret
lock
cli
add
test
sar
add
mov
xchg
xchg
bound
into
mov
(bad)
hlt
pop
mov
sub
or
jle
add
scas
cmp
icebp
jmp
xchg
xchg
pushf
stos
popa
lods
sub
pop
add
lea
fcom
clc
jmp
lock
mov
mov
xchg
jecxz
mov
ins
mov
test
sahf
loope
push
adc
sub
xchg
fadd
cli
xor
outs
pop
cdq
(bad)
adc
cs
mov
sbb
sbb
retf
or
sub
(bad)
out
and
hlt
cwde
pop
dec
data16
in
cmp
test
les
aas
pop
dec
pop
and
ja
xchg
add
jnp
mov
pop
mov
cli
mov
fnstenv
pusha
xchg
xchg
nop
fs
or
bound
fwait
cmc
(bad)
out
sti
jecxz
fild
push
rcl
inc
mov
and
and
inc
inc
ret
xchg
and
rol
sbb
sub
cmps
in
mov
jbe
inc
lahf
fdiv
bnd
xlat
daa
out
hlt
sub
mul
pop
adc
imul
mov
or
lahf
gs
xor
cmp
aam
and
xor
pop
lea
movs
xchg
stos
leave
ins
jg
push
jns
pop
mov
add
popf
add
sti
inc
popa
jnp
nop
adc
push
or
mov
add
loope
add
sahf
in
xchg
(bad)
aam
xacquire
cmp
std
pop
out
or
or
pop
xor
sbb
cmc
and
mov
(bad)
out
add
daa
cmc
test
sbb
outs
push
shl
xor
repz
ret
and
je
inc
cdq
imul
mov
sti
xor
push
xchg
ja
fidivr
cmps
add
adc
test
add
mov
fstp
ret
fcom
jb
repnz
add
pusha
mov
xor
adc
out
inc
popf
not
mov
test
xchg
add
arpl
movs
push
xchg
dec
mov
stos
out
fidivr
adc
ins
cmp
push
jae
inc
pop
(bad)
scas
ins
jmp
inc
dec
mov
add
nop
test
fucomip
jbe
mov
(bad)
clc
jbe
cld
xor
imul
push
imul
jne
cld
movs
inc
les
xor
pop
or
es
add
push
or
in
sub
enter
inc
adc
out
(bad)
sub
adc
mov
inc
cmp
inc
adc
shl
mov
aad
cdq
push
push
xchg
sbb
call
popf
adc
and
repz
aad
push
repz
xchg
pusha
or
sahf
or
daa
inc
pop
mov
rol
sub
push
cmp
pop
add
in
gs
sub
imul
call
mov
jl
xchg
mov
loop
xchg
dec
xor
jp
inc
cmp
inc
mov
cli
adc
cs
shl
movs
pop
sub
sub
mov
xchg
das
cmp
hlt
lods
or
int3
das
out
(bad)
and
fwait
dec
cs
mov
or
xchg
mov
call
cli
(bad)
fsubr
add
(bad)
fxch
mov
jecxz
cld
cmp
adc
call
or
mov
mov
icebp
bound
add
mov
inc
enter
es
pop
imul
cmp
jmp
inc
mov
int3
jno
mov
aam
sahf
mov
ss
pop
(bad)
out
xor
mov
pop
xor
(bad)
repz
xor
pop
mov
jne
mov
pop
and
or
xor
xchg
outs
jp
ins
mov
nop
dec
push
jl
xor
or
cmp
and
nop
jbe
sbb
jb
sbb
jp
sub
push
std
lods
dec
push
sbb
push
aas
adc
jecxz
xor
xchg
or
fcom
popf
cmp
in
aaa
sbb
cmp
xor
xchg
push
and
(bad)
neg
and
or
mov
sbb
jns
stos
addr16
sbb
inc
addr16
add
aaa
test
sub
xchg
push
ds
(bad)
or
shl
lods
ins
outs
ror
jno
adc
sar
out
mov
sbb
cmp
xor
pop
add
gs
std
mov
mov
cmp
hlt
xor
stos
shl
mov
dec
ss
mov
mov
jae
xchg
add
jnp
pop
sub
or
inc
adc
sub
movs
jne
sbb
xchg
fnstsw
das
push
push
jl
xchg
add
cmc
mov
or
(bad)
fucomp
mov
xor
sbb
lds
lea
add
jg
clc
lds
xor
(bad)
cmc
adc
popa
ds
daa
lods
mov
fs
ja
(bad)
clc
cs
adc
add
stos
stos
cli
ret
xchg
pop
and
shr
jbe
add
add
add
xchg
shr
in
idiv
(bad)
stc
ja
scas
jg
xchg
jecxz
inc
jbe
sub
daa
push
mov
rcl
jnp
mov
or
xchg
imul
push
or
mov
mov
xor
nop
dec
adc
pushf
mov
sbb
jge
dec
ins
cmp
inc
push
add
(bad)
push
das
pusha
cmps
repnz
inc
dec
cmps
arpl
shr
sub
push
xchg
sub
adc
mov
xor
xchg
mov
mov
daa
pop
push
mov
je
mov
shl
lock
daa
data16
fbstp
stc
xchg
(bad)
adc
movs
scas
std
scas
into
push
aad
xor
xchg
mov
not
push
jmp
inc
jge
adc
pop
or
icebp
adc
shr
dec
dec
dec
cli
jns
rcr
pop
cwde
adc
mov
in
add
sub
or
xchg
cmps
(bad)
fldcw
sub
adc
test
test
push
(bad)
or
xor
xor
adc
call
sub
movs
jne
inc
and
(bad)
mov
mov
push
cmps
push
xchg
xor
stc
adc
ja
ret
add
shl
add
xchg
mov
fsubr
rcl
cwde
sub
stos
shl
inc
clc
mov
fcmovne
or
adc
jp
sti
gs
xchg
mov
mov
hlt
sub
popa
xlat
inc
loope
jge
add
in
call
cmp
in
sbb
mul
push
or
call
inc
out
stc
push
popf
mov
mov
add
shl
and
fisubr
xchg
mov
shr
cmp
and
out
and
sub
shl
outs
test
push
imul
jg
into
jge
fstp
fsubr
xor
nop
out
in
lods
pop
cwde
fwait
gs
or
pop
mov
imul
fistp
int
imul
ret
jg
stos
jecxz
cli
outs
dec
cmp
int
mov
stos
sub
pop
(bad)
xchg
(bad)
cmps
pop
out
hlt
pop
lods
sub
pop
dec
ins
mov
cwde
cmps
(bad)
pop
and
mov
add
push
fild
mov
ror
nop
ins
dec
jmp
daa
cli
jl
(bad)
cs
(bad)
mov
xchg
lods
popf
pop
and
push
jo
(bad)
mov
jbe
or
cwde
rol
jg
pop
(bad)
jg
repnz
dec
ins
mov
add
stc
fild
fdivp
test
mov
cmp
mov
ret
adc
arpl
mov
movs
jecxz
out
xchg
and
add
mov
fwait
js
xchg
push
cld
pop
mov
aas
test
add
xchg
(bad)
sbb
out
fisubr
cdq
add
jl
inc
outs
scas
test
or
fcom
movs
cmps
pop
lods
xor
ins
dec
inc
test
inc
ror
fs
pop
addr16
jp
cmp
jmp
jecxz
test
lahf
movs
ja
(bad)
push
jae
into
jmp
test
bound
lods
cs
das
sbb
sbb
jmp
or
ret
dec
dec
or
(bad)
push
mov
pusha
push
nop
add
std
rcr
repz
jae
fstp
xor
lds
shr
lds
jae
cmp
test
xchg
ret
mov
cli
popf
dec
jp
movs
jmp
jmp
imul
mov
cmp
jge
fisubr
dec
clc
div
cli
ret
call
cmp
cmp
into
cmps
add
jns
mov
out
cmp
test
(bad)
mov
cmp
aam
xor
push
xchg
dec
(bad)
in
pusha
adc
mov
pop
jae
loopne
push
fstp
lods
cmp
sbb
adc
repnz
or
mov
pop
push
stos
and
(bad)
sub
push
mov
sub
mov
(bad)
jno
imul
aam
movs
loop
cmps
ficom
in
sbb
jmp
fld
mov
iret
xchg
push
add
inc
cwde
lods
xor
clc
cwde
mov
sahf
adc
leave
push
pop
push
sub
xor
aad
or
push
xchg
push
cmp
sbb
fdiv
mov
outs
dec
mov
popa
repnz
cwde
jo
inc
push
imul
nop
and
inc
std
sti
(bad)
mov
or
fiadd
mov
std
ret
dec
or
pushf
jae
adc
pop
pop
outs
sbb
aaa
movs
mov
sbb
test
cli
hlt
mov
sub
hlt
mov
add
xor
stc
stos
int
and
cmp
stos
push
pop
dec
jbe
cmp
sub
sbb
jne
xor
inc
mov
repz
aam
jae
(bad)
push
hlt
mov
pop
dec
mov
into
out
ds
xor
pushf
and
cmps
push
(bad)
clc
push
das
or
mov
test
call
jns
aam
lods
arpl
cmc
aas
jge
dec
adc
adc
stos
dec
push
xchg
aad
mov
and
mov
andps
cwde
mov
rcl
in
xlat
movs
daa
pop
aad
sub
fs
cs
jmp
add
dec
push
out
rcr
adc
and
or
test
pop
sub
cmp
inc
sti
adc
cmp
push
cmp
or
retf
jle
xchg
pop
sbb
stos
or
hlt
aas
call
mov
and
mov
cs
movs
test
or
in
in
cld
sub
or
pop
jl
mov
add
push
or
loopne
sbb
add
and
ret
mov
jecxz
out
inc
push
jbe
and
pop
xchg
sbb
cmc
rcr
fistp
(bad)
(bad)
pop
test
test
or
and
fadd
ss
(bad)
loope
fwait
cs
mov
idiv
aam
out
jns
fwait
jp
addr16
cmp
inc
out
aas
sub
(bad)
repnz
mov
sub
sbb
adc
in
mov
lahf
les
pop
cs
dec
jnp
sub
test
imul
mov
jo
imul
retf
jno
dec
and
call
and
cmp
movs
dec
frstor
or
ret
fiadd
jle
fiadd
xchg
stos
pop
pushf
jle
into
fstp
pop
pop
out
jp
adc
aad
inc
ja
xchg
addr16
je
xor
mov
pop
aad
arpl
scas
mov
dec
pop
icebp
and
dec
mov
and
mov
xchg
dec
cmps
sub
aad
loop
(bad)
pushf
hlt
push
stos
cdq
enter
imul
imul
pop
sbb
sub
call
ins
test
imul
lds
pop
imul
movs
cmp
add
fadd
out
test
js
or
dec
ins
idiv
cmp
cmp
cmp
xor
lea
sahf
fdivr
pop
mov
fadd
jo
sub
hlt
iret
xor
test
adc
xchg
addr16
pop
aam
aam
xchg
int3
mov
out
adc
xor
and
scas
dec
and
inc
push
mov
mov
into
mov
cld
sahf
or
shl
arpl
xor
dec
fiadd
and
adc
stos
repz
cmp
dec
xor
adc
xchg
imul
int3
push
and
fcmovnb
jp
dec
test
in
or
outs
xchg
mov
fstp
sbb
mov
pop
cmp
retf
arpl
clc
dec
or
sahf
pop
and
cmp
cmc
and
inc
in
or
movs
xchg
sbb
dec
xor
xchg
push
or
mov
and
mov
enter
scas
xor
mov
loope
fs
(bad)
aaa
cmp
cs
and
rcl
jp
in
ss
mov
cmp
loopne
test
jmp
mov
inc
mov
js
push
inc
or
pop
mov
dec
xor
and
dec
mov
pop
pusha
test
iret
xor
mov
retf
call
bound
rcl
add
mov
xor
xchg
jge
cmp
lea
aaa
inc
(bad)
mov
dec
mov
cdq
cmps
rcl
das
push
stos
fcomp
xchg
mov
xor
mov
test
dec
adc
xlat
repz
add
lods
pop
add
mov
jb
jecxz
movs
ins
mov
xor
mov
cdq
inc
lahf
in
fbstp
aad
or
xchg
leave
pusha
in
and
and
aas
push
mov
jmp
jb
mov
sbb
push
sbb
pushf
xor
fucomip
dec
sub
adc
imul
inc
aaa
xor
dec
pop
bound
arpl
mov
dec
inc
cmp
xor
(bad)
adc
repnz
scas
and
xchg
inc
push
mov
push
bound
jmp
push
clc
loop
xchg
adc
daa
loope
mov
lods
sar
push
dec
jno
jnp
push
data16
sahf
adc
scas
mov
mov
rcl
add
(bad)
mov
mul
popf
aam
in
js
sahf
lds
stos
xchg
je
lods
fdivrp
out
pop
inc
shl
or
fwait
dec
scas
mov
jmp
pop
cwde
outs
inc
jnp
sub
push
add
repz
jmp
jnp
mov
push
dec
imul
or
add
xlat
mov
mov
jns
mov
dec
in
popf
ds
popa
(bad)
or
jno
shl
jns
push
(bad)
ja
neg
push
lea
lock
icebp
push
movs
pop
jge
or
sub
movs
(bad)
arpl
imul
mov
clc
add
or
cmps
inc
mov
cmp
jmp
std
add
stos
sbb
xchg
sub
cmp
xchg
push
fimul
ret
int3
imul
pop
push
rcl
addr16
dec
aam
lods
and
xchg
and
push
cmp
cmp
pop
pop
jmp
scas
mov
pop
adc
aam
cmc
jmp
or
aad
sbb
jno
mov
add
xchg
movs
dec
scas
mov
jnp
ja
les
daa
cli
sub
cmp
xchg
retf
dec
dec
add
and
lds
pop
imul
loop
ja
aaa
mov
mov
sbb
call
or
dec
xchg
jnp
mov
push
or
sbb
hlt
clc
cmp
xor
imul
push
mov
adc
stos
daa
dec
in
and
in
add
mov
enter
fsubr
bound
inc
and
mov
mov
mov
adc
mov
ins
add
cmps
add
arpl
jne
add
(bad)
icebp
cwde
daa
loop
mul
and
and
pop
jle
daa
stos
test
mov
(bad)
fcomp
push
mov
test
repz
and
les
pop
jnp
mov
xchg
sub
loope
mov
mov
mov
mov
xchg
mov
add
mov
and
mov
jbe
jb
push
pop
loop
lock
push
mov
test
jae
addr16
xlat
or
mov
jecxz
or
jg
inc
add
scas
out
xchg
out
and
int3
fwait
add
pop
rol
sub
dec
movs
cmp
jg
call
je
xor
sbb
xor
adc
jb
mov
jno
cmp
mov
mov
push
into
mov
(bad)
mov
or
pop
pop
scas
cmc
ficomp
dec
pop
sbb
push
xchg
jmp
inc
sets
mov
mov
into
enter
adc
minps
pushf
add
arpl
ret
loopne
adc
add
cmp
and
jmp
push
iret
inc
test
ds
jmp
mov
mov
pop
add
push
sbb
or
mov
inc
cmps
or
fmul
pop
xchg
xor
cmp
sbb
mov
push
shl
arpl
test
out
out
je
ss
mov
pop
stc
arpl
ror
fisttp
add
and
jno
jle
mov
fst
sbb
out
outs
neg
shr
and
dec
mov
adc
sub
shl
pop
adc
jnp
popa
sub
test
cmp
mov
jae
push
mov
or
outs
je
fistp
lea
cwde
(bad)
aam
cmp
lahf
fdiv
cmp
jmp
lds
rcr
push
add
and
cmp
cmp
xchg
into
pop
(bad)
imul
gs
outs
fcomp
rcl
inc
rol
or
dec
xchg
leave
or
setns
aas
pop
pop
call
popf
cwde
mov
sbb
jno
xor
rol
ret
mov
dec
xor
sbb
lds
xchg
addr16
call
dec
xor
imul
jbe
xor
mov
and
adc
xor
bound
dec
add
ins
or
mov
mov
mov
jmp
scas
ret
mov
push
sub
or
movs
ror
adc
shl
inc
xchg
add
jo
push
js
fisubr
jo
ins
jbe
pop
pop
dec
sub
fidivr
outs
mov
or
lock
or
sub
icebp
loop
ret
out
repz
shl
push
(bad)
adc
fdivr
popa
iret
pop
cmps
fild
adc
adc
jmp
mov
sbb
mov
(bad)
pop
in
clc
inc
in
pop
sub
rcr
sub
cli
sbb
cmps
sahf
xlat
dec
mov
sar
repz
cmp
inc
pop
hlt
(bad)
push
push
aas
fwait
xchg
jecxz
push
in
fwait
ret
inc
into
shl
ret
fisubr
sbb
aam
inc
cmp
cmps
jmp
jns
fld
jbe
cmp
and
js
rcl
xchg
popa
enter
neg
call
cli
call
pop
into
fwait
inc
rcl
ja
pop
lock
mov
(bad)
sahf
jnp
pusha
jne
mov
ds
mov
popa
(bad)
dec
retf
js
mov
adc
in
mov
loope
inc
call
int3
in
jg
lods
mov
dec
fwait
add
sbb
shr
and
jp
test
enter
outs
fnstsw
iret
and
fs
push
pop
bound
push
adc
pop
pop
mov
aas
(bad)
lea
ret
jecxz
fcomp
sbb
jg
jg
and
ret
or
int
sub
pop
fsubr
cmps
call
or
aas
shl
hlt
cmp
out
and
xchg
popf
dec
mov
xchg
aaa
xchg
scas
cmp
dec
sbb
sbb
xchg
stos
or
ret
push
or
mov
sbb
sbb
aaa
push
pop
lock
cmp
in
add
cli
inc
push
xor
push
in
push
lods
sahf
ds
sub
lods
xchg
sbb
test
sar
sbb
mov
mov
sar
leave
retf
push
and
fstp
xor
ret
push
mov
mov
sub
adc
and
je
xchg
icebp
sbb
and
cli
icebp
aam
or
outs
pop
scas
packsswb
fistp
xor
aad
sbb
xor
xchg
cmp
push
push
mov
inc
pop
loopne
jne
xchg
cmp
jb
std
inc
ss
pop
stc
ins
xchg
xor
add
arpl
leave
xor
mov
xor
lea
clc
cmp
cs
jp
and
scas
sbb
and
ds
inc
shl
add
jnp
pop
fstp
iret
and
lods
jle
test
(bad)
push
fcomp
or
in
mov
cmp
push
jp
lea
xor
arpl
jge
ja
fild
and
outs
nop
adc
mov
mov
pop
mov
dec
xor
jb
sub
mov
and
push
dec
dec
inc
cmp
or
(bad)
sub
imul
adc
leave
stos
js
mov
jb
imul
or
repz
out
cmc
pop
and
(bad)
sub
mov
inc
mov
cli
rcl
inc
add
mov
inc
into
rcr
mov
jae
xchg
icebp
cwde
sub
retf
cmp
xor
fcompp
add
and
icebp
dec
push
call
jl
popa
mov
icebp
fdiv
push
push
lock
xor
sbb
push
inc
retf
xchg
xchg
js
ret
addr16
idiv
in
sub
fst
fbld
out
inc
cdq
retf
sahf
(bad)
inc
mov
xchg
cmp
xor
retf
test
pusha
mov
mov
or
inc
mov
push
sti
sub
mov
retf
and
scas
stc
enter
sub
push
les
fld
adc
dec
inc
inc
outs
call
pop
sbb
fisttp
push
add
pop
push
jle
test
rcr
xchg
xchg
sbb
jo
inc
jmp
repnz
cmp
xor
xor
sub
scas
fwait
data16
adc
rcl
dec
ins
loopne
rcl
or
jb
(bad)
pop
hlt
dec
dec
jl
mov
shl
int
(bad)
push
sub
(bad)
addr16
cmp
cmp
and
shl
ja
inc
ins
dec
(bad)
xor
cli
(bad)
int3
xor
mov
ret
jp
push
mov
imul
jle
aas
dec
out
inc
lods
jno
fistp
bound
inc
(bad)
xor
test
xor
push
cmp
in
pop
or
cmp
push
add
dec
push
les
aas
cmps
inc
adc
fldl2t
cmp
sbb
lds
or
cwde
lods
sub
add
jnp
jp
and
sub
adc
cld
imul
mov
stos
pop
test
adc
add
out
add
vaddsubps
test
mov
nop
adc
xor
inc
mov
shl
out
rcr
sbb
sbb
and
mov
pusha
lea
push
sbb
pusha
mul
mov
adc
mov
jbe
lock
pop
sub
push
arpl
jo
xchg
xor
and
jp
xor
push
push
fwait
xchg
mov
mov
xlat
nop
test
mov
cmp
push
mov
(bad)
call
and
ror
push
rcr
mov
pcmpgtd
and
aam
mov
xchg
sbb
add
mov
leave
out
cmovb
xchg
xchg
(bad)
(bad)
sub
inc
cmp
cmp
cmp
jl
fwait
out
test
or
add
movs
fst
ror
(bad)
sbb
into
add
dec
push
data16
lock
and
das
pop
loop
sub
jbe
push
pop
jp
cmps
cmps
in
pop
lea
(bad)
ds
data16
inc
mov
jle
ins
or
xchg
sbb
out
outs
outs
adc
stos
repz
dec
in
js
retf
sub
xchg
popf
test
pop
sub
xchg
movs
push
pop
ror
adc
dec
and
mov
cdq
out
cdq
xchg
dec
push
imul
nop
dec
jle
jo
dec
icebp
xchg
mov
dec
mul
test
dec
or
imul
shr
sti
jbe
mov
xchg
pop
(bad)
(bad)
pop
or
dec
div
daa
pop
cmp
icebp
dec
mov
movs
mov
push
or
or
scas
xchg
in
inc
inc
(bad)
mov
xchg
and
and
scas
push
iret
fwait
xchg
mov
out
mov
jp
fidivr
outs
push
idiv
cld
cld
mov
cmps
mov
outs
cli
mov
pop
pop
adc
cmp
(bad)
mov
jb
ins
jmp
sbb
jnp
rol
bound
jno
adc
lock
dec
(bad)
dec
inc
xor
xchg
adc
aad
test
pusha
inc
imul
add
pop
cs
dec
mov
pop
pop
jbe
repz
add
(bad)
int
xchg
dec
xlat
movs
jmp
and
loopne
nop
and
out
in
jnp
and
mov
dec
mov
ret
sahf
mov
sbb
dec
fstp
dec
dec
cmps
mov
cmps
push
jbe
repz
add
imul
or
call
push
pusha
push
lds
and
mov
je
in
dec
jb
dec
movs
inc
daa
shr
push
sub
cmps
push
cmp
pop
jb
adc
xchg
xchg
mov
pop
clc
jo
cmp
cld
inc
push
stc
test
mov
sub
push
and
gs
xchg
cmp
push
inc
lods
push
gs
mov
xchg
push
outs
loop
xchg
jmp
or
ins
movs
mov
and
outs
cld
out
popa
xchg
xchg
test
mov
add
ins
(bad)
nop
aaa
sub
mov
pop
je
jns
scas
jns
cmp
imul
data16
cmps
ss
ficomp
inc
outs
jbe
and
frstpm(287
or
add
jl
mov
das
sar
xchg
test
push
scas
add
fdiv
aas
and
mov
add
stc
mov
xchg
fcomp
stc
sbb
lahf
test
or
(bad)
fild
fstp
mov
sbb
jecxz
add
xor
loope
push
mov
jbe
cld
xchg
or
and
xchg
mov
mov
adc
scas
imul
pop
mov
stos
pop
mov
mov
stos
aas
xchg
mov
sahf
xor
(bad)
xchg
push
or
cwde
push
push
imul
hlt
retf
xor
push
jnp
data16
jae
mov
(bad)
cld
mov
cld
test
push
and
rcl
jne
jg
sub
cs
jmp
xchg
fwait
call
sahf
mov
add
mov
cld
lods
fcomi
scas
pop
and
std
mov
test
(bad)
fwait
mov
sbb
mov
push
cmps
and
xor
imul
ins
test
rol
bound
pop
lahf
sahf
aad
nop
and
add
aad
xchg
push
loop
sub
jne
popa
adc
cmps
and
fimul
ret
and
out
nop
aad
aad
in
retf
cmps
sbb
xchg
sti
std
jb
cwde
inc
jg
push
xor
mov
xchg
cld
shl
xor
sbb
xor
dec
aas
pop
jge
int3
mov
dec
inc
dec
inc
push
sub
popf
push
std
shr
(bad)
test
and
data16
fucomi
cmps
jno
push
in
mov
cmp
mov
pop
lods
and
stos
sar
test
ins
ds
pop
mov
xchg
cmp
mov
pop
adc
outs
ins
sahf
add
dec
scas
xchg
cmc
xor
daa
test
ja
(bad)
out
mov
and
aam
inc
add
aad
dec
sbb
dec
jge
not
aaa
in
outs
cmp
mov
mov
mov
rcr
cmps
lds
dec
add
sub
jne
rcr
call
stos
(bad)
fnstenv
jge
mov
sahf
ror
xchg
or
ins
dec
cmp
cdq
enter
out
fisubr
jne
rcl
mov
hlt
in
(bad)
dec
jae
jbe
jmp
cmp
fstp
es
js
int
aad
ins
mov
mov
ret
sub
mov
cmps
xchg
pop
sbb
retf
lds
push
mov
jne
sub
(bad)
loopne
call
sbb
lods
adc
test
dec
sti
fisttp
mov
outs
call
aam
in
arpl
xchg
xchg
das
(bad)
xor
xor
pop
imul
outs
xchg
mov
sbb
jp
das
add
out
ret
hlt
je
das
shr
inc
call
push
lds
in
inc
fidiv
out
shr
jne
adc
jne
js
cmp
mov
mov
test
push
je
add
xchg
mov
jmp
sub
push
adc
movs
sbb
dec
(bad)
sbb
mov
fs
jl
outs
push
ds
stc
pop
push
rol
sub
xchg
loopne
pop
(bad)
adc
or
mov
movs
mov
inc
(bad)
sahf
mov
jge
sbb
xor
rol
imul
fist
cmp
test
dec
test
or
xchg
div
loope
pop
dec
inc
stos
outs
sub
into
ins
std
dec
stc
in
inc
mov
push
neg
iret
loope
xchg
adc
mov
xchg
xor
aad
cmp
rol
lock
or
mov
inc
sbb
dec
inc
xchg
mov
ret
ss
xchg
pop
sub
std
clc
daa
out
or
mov
add
shr
mov
or
cmp
mov
ret
jb
mov
test
test
loop
sub
mov
fsubr
sub
mov
add
pop
pop
xor
xor
ds
fwait
mov
lock
mov
sub
add
adc
xor
add
jmp
jo
sti
stos
call
mov
ficomp
lahf
inc
xor
add
push
jnp
jns
pop
push
out
mov
cld
daa
(bad)
mov
dec
enter
xchg
(bad)
shl
lea
cwde
(bad)
js
push
cld
pop
sub
je
fwait
sub
retf
fcmovnu
sahf
icebp
jne
out
rcr
or
test
ret
xor
pop
mov
addr16
jae
adc
scas
daa
mov
adc
sub
dec
push
adc
out
pop
leave
mov
cmp
jae
sub
fwait
repz
push
daa
adc
xchg
ss
xor
fsubr
loope
aad
pop
or
xor
bndldx
sar
mov
(bad)
mov
sub
sub
xor
mov
fnstcw
mov
adc
and
mov
ds
xchg
xchg
scas
imul
fist
mov
xor
mov
test
pop
mov
cld
xchg
xchg
inc
fiadd
cld
and
fidiv
aaa
sub
mov
fnsave
pop
nop
aam
mov
test
loopne
retf
(bad)
mov
inc
mov
push
cmp
sub
add
dec
iret
daa
retf
repz
xlat
xchg
adc
push
ds
pushf
sbb
mov
int3
jp
xor
add
ret
mov
test
jle
xchg
ror
cmp
sub
adc
sbb
or
test
and
call
out
ins
dec
adc
fucomp
ror
enter
mov
das
adc
push
imul
adc
fwait
inc
fisubr
mov
loopne
ins
mov
mov
popa
ss
add
adc
add
arpl
cmp
push
mov
retf
mov
dec
adc
std
pop
inc
xlat
mov
pusha
sbb
sbb
loopne
in
add
aaa
mov
cmp
inc
icebp
into
pop
pusha
dec
icebp
xlat
sub
add
rcr
mov
mov
jns
adc
fst
lahf
push
movs
inc
mov
in
sub
or
test
xchg
jge
sub
repnz
adc
or
stc
or
cmps
cmp
fist
mov
or
dec
dec
test
fldcw
aam
enter
cmp
retf
mov
add
push
adc
test
mov
loope
stos
pushf
adc
mov
and
xor
in
jmp
sbb
int3
push
and
pop
loop
or
and
(bad)
fmul
xor
ret
retf
nop
mov
inc
jp
jae
in
lods
add
add
loop
test
mov
shr
int
ds
movs
stos
inc
clc
add
adc
and
out
push
iret
call
pop
rcl
pop
retf
aas
jg
fs
or
push
add
dec
aad
push
mov
dec
mov
add
fdivr
fwait
mov
sbb
inc
popa
imul
fstp
sti
sub
inc
xor
nop
ja
lahf
lds
out
push
inc
or
mov
mov
or
mov
xor
cmp
stos
out
push
out
cmp
mov
gs
pop
pop
pop
int3
fisub
clc
and
jmp
and
jmp
mov
adc
mov
xchg
ds
lods
xor
bswap
push
mov
sub
outs
test
cld
aam
push
and
addr16
movs
sahf
shl
push
imul
(bad)
fidivr
into
xchg
xchg
jns
adc
jle
inc
sub
mov
aad
repz
pusha
mov
int3
adc
cwde
in
(bad)
test
add
add
(bad)
lock
hlt
jl
mov
push
mov
lea
cmp
xor
gs
pop
gs
aam
mov
fucomip
sub
mov
push
xchg
sbb
es
sbb
popa
repnz
pop
aaa
dec
dec
hlt
ds
sbb
das
gs
lahf
jns
dec
and
jb
pop
stos
sub
int3
add
inc
call
push
pop
(bad)
and
out
shr
mov
dec
icebp
mov
std
sbb
pop
adc
mov
cmp
fisub
hlt
sbb
jecxz
into
jg
add
mov
adc
adc
mov
or
ror
das
scas
push
push
push
icebp
loop
and
add
mov
inc
cmp
repz
fisttp
push
jp
(bad)
cdq
and
sbb
jbe
mov
mov
in
movs
add
les
in
mov
ja
mov
retf
pop
fadd
cmp
(bad)
push
and
clc
xchg
inc
jmp
ds
pop
mov
inc
xchg
or
dec
aam
repz
inc
lods
push
repnz
mov
inc
push
cmp
(bad)
mov
and
out
sti
push
inc
out
js
xor
or
push
pop
fucomip
xchg
cs
xor
xchg
fs
repz
cmc
and
int3
rcr
mov
add
inc
lahf
in
test
bswap
es
hlt
xchg
jp
ret
inc
mov
leave
dec
xlat
fdivr
in
dec
pop
pop
push
test
sub
cmc
push
inc
out
jmp
int
retf
push
retf
xor
mov
jbe
das
js
mov
mov
lahf
cs
jmp
mov
jbe
scas
aas
(bad)
ja
dec
mov
outs
(bad)
fisttp
adc
mov
test
test
jno
mov
fsub
sub
daa
pop
push
fisttp
adc
and
dec
ja
dec
mov
aam
bound
jmp
ret
repnz
or
pusha
inc
adc
mov
loop
pop
jbe
daa
push
pop
push
pop
pop
sub
(bad)
pusha
lock
inc
add
xor
inc
and
cmp
mov
out
rol
inc
push
cmps
cmps
mov
call
pop
jecxz
inc
imul
fwait
test
aam
add
test
call
loop
shl
xor
fld
mov
lds
adc
and
enter
cmp
inc
pusha
aam
rol
aas
fucomi
mov
xor
inc
inc
mov
iret
ja
in
pop
and
or
inc
add
jecxz
pop
mov
cmp
adc
inc
adc
scas
cmps
shl
pop
sti
and
aad
push
xor
inc
inc
pusha
cmps
mov
je
hlt
lods
or
jmp
jg
out
imul
cmps
enter
stos
xchg
(bad)
jne
mov
push
add
push
pop
mov
push
and
cmp
cmp
pushf
jbe
xchg
add
dec
push
popa
pop
xchg
inc
adc
adc
mov
xchg
mov
cmps
dec
jmp
dec
xor
mov
mov
nop
pop
inc
mov
fsubr
rcr
pop
outs
add
lea
adc
lea
call
nop
arpl
aaa
or
lds
cli
nop
jp
and
jns
shl
icebp
add
hlt
(bad)
loope
and
pop
or
leave
xchg
rcr
pop
adc
test
xor
aad
and
dec
test
rol
xchg
out
gs
sub
mov
or
hlt
mov
mov
adc
out
les
xor
jbe
ret
cmp
es
or
or
sar
pusha
xor
retf
es
cmp
or
mov
mov
xchg
shr
mov
sub
fs
popf
dec
push
pop
cmp
shl
adc
shl
cwde
shr
jno
int
cwde
push
dec
ret
pushf
cmp
xchg
mov
fs
iret
pop
mov
mov
xchg
test
inc
lods
pop
push
aad
sbb
es
test
jge
jecxz
inc
add
mov
lahf
outs
and
xchg
dec
jmp
mov
mul
outs
xor
shl
inc
loop
loop
lea
push
adc
sub
(bad)
jle
push
xchg
xchg
cmps
jb
mov
dec
push
(bad)
ffree
in
lods
fdiv
jne
bound
xor
call
pop
cmc
test
shr
jg
jnp
xor
shl
dec
mov
mov
cmp
fistp
cmps
mov
cdq
fcmovu
jbe
mov
dec
aaa
fcomp
arpl
fld
xchg
lock
gs
hlt
cmps
repnz
into
add
mov
sbb
outs
mov
sbb
repz
js
cmp
retf
mov
dec
rol
jmp
or
sub
in
or
adc
test
push
ins
xchg
xlat
xor
jle
inc
mov
retf
inc
ds
into
movs
and
pop
ins
(bad)
jecxz
or
cmps
push
cmp
rol
into
imul
(bad)
xchg
or
inc
loop
lahf
icebp
dec
mov
xchg
mov
shl
js
les
mov
test
pop
jnp
mov
jl
retf
(bad)
call
mov
push
mov
cmps
loop
mov
cli
mov
or
push
rol
std
push
xchg
imul
push
div
push
or
cmp
mov
mov
les
jne
xchg
mul
lods
cmps
leave
add
cli
dec
add
or
retf
mov
xlat
(bad)
and
and
shl
js
outs
fld
dec
cmp
cmps
bound
rcl
sahf
pop
add
dec
mov
pusha
inc
test
loopne
inc
jp
repz
push
(bad)
imul
ret
add
push
or
mov
xchg
cs
or
jmp
sub
sbb
addr16
in
or
ds
shr
mov
jmp
mov
inc
fcmove
inc
shl
push
xchg
adc
movs
pop
jb
dec
mov
xchg
scas
cmp
(bad)
push
enter
mov
push
ss
cmps
out
mov
movs
mov
call
mov
daa
loope
scas
or
movs
cmc
repnz
dec
arpl
pop
sti
ret
dec
arpl
dec
aas
stos
inc
or
loope
imul
jno
and
repz
dec
jae
stos
scas
jmp
jns
pusha
mov
dec
fdivr
cmc
rcl
popa
clc
cwde
push
pop
test
das
nop
mov
aad
js
je
fcmovnu
cmp
fdivr
dec
jb
in
mov
test
pop
mov
jmp
sbb
add
sub
rcl
test
idiv
push
pop
adc
pop
adc
inc
test
adc
shr
lods
mov
loopne
xor
imul
cmp
sub
jmp
shl
loopne
test
sub
mov
retf
out
inc
retf
lods
ror
in
push
cmp
mov
aad
leave
sti
jp
out
fistp
mov
cld
pushf
bound
out
in
inc
push
inc
jl
xlat
push
jmp
ror
pop
call
(bad)
mov
mov
mov
and
test
or
iret
test
adc
outs
and
jle
push
pop
fs
fcmovnb
mov
aad
and
in
es
scas
pop
inc
jp
mov
mov
ins
mov
dec
pop
movs
push
stc
mov
push
neg
(bad)
pop
bound
push
cmp
out
pop
out
jge
rcl
adc
imul
aaa
pop
jbe
ss
fs
adc
mov
push
pop
imul
dec
xchg
int3
dec
mov
scas
repnz
(bad)
dec
popf
movs
or
(bad)
out
and
dec
mov
lahf
sub
sub
xchg
or
mov
sub
jno
outs
out
adc
mov
mov
(bad)
push
in
push
pop
mov
mov
sub
xor
inc
push
ret
dec
pop
(bad)
(bad)
xor
sub
scas
jmp
cdq
mov
sub
in
cli
inc
add
adc
lods
mov
sub
xchg
xchg
outs
fimul
jnp
call
jg
iret
fs
outs
pusha
arpl
cmp
cmp
data16
icebp
dec
inc
lahf
sti
jl
call
or
xor
or
movs
rol
ins
inc
and
mov
add
fldcw
scas
mov
xchg
jl
push
imul
(bad)
mov
cmp
pop
adc
daa
bound
and
clc
add
mov
in
mov
fst
adc
loopne
mov
popa
call
or
sub
or
rol
pop
in
mov
mov
movs
ss
nop
loop
add
pop
push
ins
cld
data16
lea
cmps
pop
rcl
mov
js
cmp
test
or
push
fdiv
dec
jb
sbb
sub
ret
cmp
in
je
or
lods
rol
inc
shl
dec
mov
enter
movs
mov
and
cmp
in
push
mov
(bad)
das
lods
and
cdq
xchg
ss
push
mov
outs
jecxz
cmc
scas
adc
mov
ficom
sub
in
mov
pushf
leave
leave
mov
test
sbb
inc
loopne
aaa
cmp
ss
add
push
jl
jnp
push
cmps
or
mov
and
mov
dec
fisttp
or
jne
dec
cs
icebp
add
out
ret
mov
cld
mov
and
cmps
push
inc
xchg
jb
add
icebp
and
test
push
pusha
shr
mov
dec
sbb
out
hlt
sahf
mov
xchg
cmp
scas
cmps
clc
mov
sub
scas
sahf
sbb
test
mul
les
pusha
add
jle
mov
mov
mov
stos
mov
fidiv
pop
mov
dec
div
pop
add
jns
ins
fistp
ja
dec
es
mov
(bad)
cwde
ja
das
sahf
push
sub
mov
jle
hlt
enter
jns
or
cmp
fwait
mov
cld
sbb
pop
in
call
js
or
adc
xchg
int3
inc
xor
xchg
xor
outs
or
pushf
jb
jmp
push
jmp
sti
cs
dec
test
jp
dec
inc
pop
jns
and
(bad)
hlt
and
je
and
pop
xchg
mov
fimul
and
stos
out
out
mov
cmp
aam
mov
push
rol
(bad)
fstp
xchg
sub
cwde
mov
cli
mov
popa
popa
cmc
cmp
sbb
push
mov
retf
mov
pop
fsubrp
xor
les
clc
and
imul
xor
push
test
push
sbb
das
pop
sub
push
mov
pop
or
fwait
mov
repz
push
and
sub
bnd
sbb
jge
aam
sub
xchg
pusha
push
call
sub
pop
hlt
pusha
push
or
adc
arpl
rol
jmp
int3
fwait
push
lods
jmp
adc
inc
pop
scas
out
mov
fisub
mov
repnz
enter
cmp
mov
jo
rol
pop
dec
out
sbb
repz
arpl
lahf
sub
mov
fwait
or
sub
mov
sbb
cmps
(bad)
popa
jb
xor
scas
pop
retf
push
fwait
mov
mov
aaa
jnp
push
or
cmps
inc
imul
mov
iret
xchg
movs
fs
pop
call
pop
mov
push
mov
adc
inc
ins
neg
mov
and
or
pop
or
mov
fistp
push
sbb
out
scas
loop
hlt
or
or
loopne
ret
jmp
fs
cli
jge
pop
es
ss
push
aaa
test
into
add
pop
pop
loopne
sbb
fwait
mov
rcr
inc
scas
mov
mov
loop
cdq
fsubrp
pop
out
dec
jmp
sub
lahf
adc
lock
cmp
adc
test
xor
cli
dec
adc
dec
dec
or
sub
outs
xor
jo
(bad)
and
mov
xchg
inc
dec
sahf
mulps
pop
sti
mov
ficomp
sub
push
call
mov
int
test
pop
jmp
out
push
repz
mov
sbb
xor
xchg
cmc
dec
idiv
cmps
jae
shl
mov
mov
retf
push
fwait
inc
push
in
lods
inc
pcmpgtw
jnp
xor
and
adc
aad
lahf
hlt
ss
(bad)
push
mov
data16
sbb
xor
jbe
jne
mov
mov
mov
in
cmp
xor
ins
pop
jmp
jmp
inc
cmp
rcl
in
movs
sbb
dec
movs
dec
mov
gs
repnz
xchg
inc
add
pop
sbb
out
fucom
test
imul
cli
or
push
mov
inc
ror
sub
movs
nop
xlat
rol
adc
loopne
mov
fst
xor
std
into
cwde
add
cmp
push
jle
xor
sbb
xor
mov
fisttp
aam
and
jo
add
cmp
jb
out
inc
mov
hlt
sbb
and
or
movs
(bad)
jp
push
mov
mov
inc
(bad)
xchg
sub
cwde
lahf
xchg
es
or
sbb
(bad)
cmp
test
sub
and
jp
sbb
push
(bad)
push
loope
cmp
mov
neg
push
sar
loope
or
or
or
mul
adc
lea
daa
pop
xlat
stos
adc
mov
jp
leave
out
xchg
ds
out
out
scas
push
(bad)
outs
jb
cmp
mov
mov
xor
leave
in
mov
jg
in
int
fild
iret
cmc
push
or
mov
mov
movs
nop
jbe
pusha
push
or
out
xchg
push
jl
fs
scas
dec
and
or
pop
test
xchg
ficomp
into
aam
adc
pop
sahf
ret
idiv
jp
sbb
shl
push
xor
xchg
sbb
cs
push
sahf
jbe
icebp
stos
push
mov
xchg
cmp
hlt
jb
xor
icebp
jns
stc
dec
push
pusha
sbb
gs
dec
mov
pop
inc
out
shr
xchg
int
addr16
and
mov
cmp
sbb
sbb
leave
popa
sub
jnp
sahf
fs
scas
xchg
inc
(bad)
push
push
sahf
dec
push
push
sbb
xchg
mov
push
loope
and
leave
xor
jecxz
call
test
pop
aaa
enter
add
inc
mov
sub
test
int
dec
sbb
mov
push
mov
adc
test
rol
outs
imul
and
sahf
test
cld
mov
mov
mov
or
add
stos
cld
and
fld
pushf
mov
ins
push
bound
outs
aas
push
in
xor
xor
jns
mov
sub
inc
in
fsubr
rol
icebp
jne
lahf
push
fstp
out
and
xor
mov
jmp
dec
ins
cmp
out
mov
shl
mov
mov
int
xchg
xchg
sti
in
xchg
cs
sti
mov
inc
fstp
test
dec
push
jp
jl
mov
jmp
popf
cmc
es
aad
jmp
leave
jge
dec
fwait
movs
iret
ss
lods
inc
push
and
(bad)
aad
dec
mov
mov
sbb
xchg
push
das
sbb
jb
adc
adc
mov
inc
sub
dec
mov
push
fs
rcr
xor
repz
push
xor
jmp
mov
cdq
push
fwait
inc
scas
jnp
fsub
mov
pop
shr
addr16
lods
ja
mov
repz
into
stc
int3
mov
pop
cmc
xchg
cli
movs
pop
fsub
push
push
es
fsubr
jg
mov
pop
push
add
rcr
sub
pop
sbb
(bad)
mov
xor
repnz
fwait
cmp
or
leave
jns
or
aad
xor
pushf
dec
jp
mov
mov
div
stos
xchg
xor
sub
xor
ss
pop
adc
mov
push
and
(bad)
into
dec
xchg
(bad)
pop
mov
inc
hlt
jp
arpl
and
cmovg
scas
scas
cmp
les
inc
push
stos
sahf
push
or
iret
jle
cmp
test
mov
jmp
fstp
ss
cmp
pop
jae
pop
idiv
rol
movs
mov
lods
cdq
sar
test
clc
loope
rol
cmp
stc
lods
and
iret
test
add
push
push
out
add
sti
mov
and
cmp
or
push
jmp
rol
cs
and
pop
leave
out
push
mov
cmps
jp
sub
aaa
pop
sbb
xor
stos
(bad)
push
and
rol
ins
mov
pop
stc
sub
fdivr
test
aad
sbb
jmp
sysexit
aad
clc
and
ret
ins
mov
and
jne
imul
add
fs
mov
enter
cmp
adc
inc
scas
retf
xchg
clc
or
je
xor
mov
inc
sub
(bad)
fwait
dec
hlt
push
cs
mov
sbb
inc
pop
xchg
jno
fnsave
pop
pop
xor
aaa
push
sub
ss
sahf
daa
jbe
(bad)
imul
lea
and
jmp
push
dec
inc
jae
mov
mov
cmp
loope
cmc
push
sti
xchg
lods
jp
pop
xor
gs
adc
sub
das
push
mov
jb
lds
xor
adc
js
ins
in
test
popa
xor
jo
cmc
jle
test
jmp
pushf
movs
ds
cld
sub
cwde
mov
cmp
lds
xor
dec
push
xchg
cmp
addr16
mov
push
xor
arpl
pop
enter
aaa
into
fiadd
add
mov
nop
sub
push
cdq
pop
pop
enter
or
fsubr
and
test
fst
cs
add
xchg
test
xchg
ss
scas
in
adc
popa
int
js
repz
pop
cdq
inc
xor
mov
lock
sbb
mov
popa
mov
xor
add
sbb
dec
fiadd
add
mov
loopne
(bad)
push
inc
fadd
inc
jle
pop
js
adc
pop
jae
xor
adc
mov
push
in
or
ficomp
mov
xor
fisubr
lahf
cmp
mov
call
addr16
cmp
adc
xchg
scas
inc
jp
jo
jmp
ins
inc
arpl
push
rep
sbb
cmp
and
jecxz
dec
scas
jnp
call
es
jge
aad
adc
or
fadd
out
in
and
fwait
mov
repz
loop
ds
mov
and
xor
dec
pop
aas
push
mov
inc
and
lods
in
aam
js
adc
xchg
sub
sbb
xor
push
xchg
sub
push
sbb
mov
loop
dec
and
inc
adc
cmps
pop
rol
out
mov
cmp
loopne
(bad)
fist
inc
ins
mov
movs
sbb
jmp
dec
jmp
movs
cmp
jbe
jg
repnz
and
scas
popf
std
test
xor
sbb
(bad)
jae
xchg
push
ins
je
push
mov
sbb
and
pop
fisub
aam
in
xchg
adc
test
in
xchg
outs
push
jae
and
fstp
xchg
xor
pop
dec
out
std
push
retf
std
add
cmc
add
in
retf
aaa
hlt
xchg
jbe
push
lock
movd
shl
and
sbb
dec
and
xor
(bad)
mov
xchg
jmp
fidiv
adc
mov
nop
lock
scas
aaa
nop
call
sbb
pop
retf
mov
jp
mov
lea
inc
lea
cmps
xor
xor
(bad)
pusha
std
sub
push
mov
or
push
mov
lock
push
int
add
pop
sahf
mov
pop
inc
jge
imul
mov
(bad)
xchg
mov
lock
jmp
retf
shl
pop
dec
hlt
xor
call
push
call
sbb
test
int3
pusha
xchg
dec
mov
bound
or
add
frstor
retf
mov
test
pusha
and
aas
push
push
hlt
cmp
arpl
leave
and
(bad)
sbb
iret
push
(bad)
data16
adc
jno
pusha
addr16
cli
and
not
cmp
push
jle
(bad)
std
mov
aam
sahf
sti
cmp
sbb
sbb
cmp
pop
cmc
push
addr16
(bad)
daa
clc
inc
fmul
mov
imul
adc
or
call
mov
(bad)
cld
mov
xor
or
or
or
daa
pop
mov
(bad)
int3
and
jmp
out
cmc
shl
ret
jge
jecxz
mov
sub
les
dec
xchg
or
hlt
push
push
sub
sub
retf
movs
add
jle
mov
shr
xor
jae
jmp
xor
retf
shl
std
xchg
aam
dec
sub
pop
lods
gs
sahf
outs
neg
or
je
outs
pop
adc
(bad)
iret
inc
mov
sahf
or
dec
push
jmp
or
movs
popf
and
fimul
xlat
bound
ficom
cld
push
jns
fcomi
mov
xor
popf
stos
sub
jbe
int3
sub
xlat
jecxz
adc
fbld
je
jg
push
xchg
add
js
or
test
adc
int
sbb
imul
int3
(bad)
push
test
or
lahf
xchg
jle
stos
xor
sub
or
std
push
cdq
xlat
cld
sahf
out
sub
inc
xor
push
mov
mov
call
jo
jns
cs
rcr
(bad)
call
mov
dec
aaa
fdiv
xor
test
xchg
scas
outs
mov
and
jle
int3
aad
je
push
scas
and
icebp
mov
cwde
retf
pop
and
jne
into
bound
sbb
pop
mov
inc
mov
dec
inc
sbb
data16
add
dec
nop
pop
xchg
fs
aad
inc
mov
sbb
mov
lock
dec
arpl
sub
add
imul
mul
cmps
sti
xor
or
push
jns
xor
pop
add
jno
ds
fsubr
mov
(bad)
sbb
outs
stos
scas
mov
arpl
out
test
xor
loop
push
xor
pop
inc
jb
dec
outs
mov
jecxz
cmp
and
imul
outs
inc
es
cmp
pop
cdq
push
rcr
les
mov
icebp
xchg
pop
and
aad
cdq
loopne
and
pop
call
sbb
xor
cmp
ret
adc
mov
(bad)
push
test
xchg
mov
add
and
xor
sub
test
loop
jp
nop
das
out
cmps
inc
js
sub
loop
dec
pop
xchg
repz
pop
mov
cmp
lock
mov
jmp
and
pushf
xor
iret
cmp
jmp
clc
cwde
pop
dec
lock
loope
jecxz
int3
or
inc
pop
jle
jns
into
fist
js
mov
sub
repz
repnz
jmp
add
xor
sub
adc
(bad)
jmp
xor
and
cld
out
push
sub
cmp
pop
sub
xchg
das
mov
arpl
in
fs
jg
jnp
pop
xchg
pop
dec
sbb
nop
or
push
in
jb
scas
std
fcomp
sahf
xchg
imul
aaa
out
mov
jae
cmp
cmp
jecxz
pop
ins
adc
cmps
push
mov
and
jl
jge
cwde
xchg
fild
sbb
sub
popf
push
pop
cmp
imul
jae
shl
dec
cld
cld
jbe
(bad)
mov
mov
dec
sti
sbb
pop
lock
mov
dec
add
lds
adc
cld
mov
scas
jl
leave
push
mov
xor
jae
(bad)
sbb
je
add
mov
aam
pop
cmp
cmps
cdq
ret
sub
outs
cmp
mov
or
ror
mov
pusha
xchg
retf
pop
(bad)
mov
mov
sar
mov
xchg
fcmove
push
test
mov
adc
pop
ja
and
mov
add
xchg
push
imul
movs
jg
dec
stc
jg
sbb
hlt
dec
inc
imul
push
dec
lds
test
mov
aaa
mov
aam
retf
push
pop
mov
pop
inc
frndint
pop
ds
xor
imul
cmp
mov
cmp
pop
out
xchg
movs
and
or
xor
sbb
dec
cmp
cld
lds
idiv
stos
add
lahf
xor
out
imul
scas
xchg
cmp
in
(bad)
jae
js
icebp
mov
push
dec
sub
mov
xor
mov
jb
mov
(bad)
cmp
lods
pop
das
retf
lods
test
int
mov
sub
in
and
jne
ins
pop
and
fwait
popf
dec
movs
push
sbb
inc
dec
sbb
and
jge
inc
movs
rcr
outs
jge
rcr
rcl
repz
aas
neg
aam
call
lds
pop
adc
outs
mov
push
mov
xchg
dec
mov
sahf
mov
pop
sbb
cmc
or
ror
cmc
ret
add
bound
push
add
adc
js
adc
mov
cmp
mov
pop
jo
retf
and
(bad)
ss
ja
retf
lods
shl
xlat
jbe
leave
shl
loopne
aam
retf
test
xchg
fidiv
push
call
jmp
cmp
dec
pop
cmp
hlt
cmp
inc
daa
or
or
xor
push
out
sar
or
mov
mov
loop
ret
cmp
ret
lods
loope
fidivr
aad
sbb
in
das
rcr
mov
xchg
jmp
mov
aaa
inc
mov
xchg
(bad)
outs
mov
bound
aam
call
(bad)
into
and
pop
and
mov
xchg
xor
jg
adc
fdivr
sub
jmp
and
pop
dec
pop
jae
adc
cmps
je
lock
mov
push
xchg
and
lds
push
mov
sbb
and
sub
add
push
retf
or
mov
pusha
mov
inc
(bad)
ret
sbb
cld
into
pop
pop
psubusw
fild
mov
mov
mov
ret
loop
push
dec
out
mov
enter
mov
sub
mov
retf
(bad)
enter
les
push
cmp
stos
popa
pop
add
in
call
gs
repz
push
and
or
shr
test
adc
pop
out
iret
inc
push
retf
pop
inc
gs
fsubr
add
sbb
jg
inc
out
outs
call
jecxz
je
cmp
mov
imul
pusha
imul
cld
push
jmp
add
das
xchg
(bad)
lds
adc
sbb
(bad)
mov
in
sbb
je
jae
sbb
(bad)
mul
sub
jmp
(bad)
ret
cld
addr16
mov
(bad)
jb
inc
leave
movs
inc
cli
mov
fisubr
cdq
inc
xchg
popa
test
mov
dec
ja
call
inc
xchg
push
(bad)
pusha
sbb
cmp
and
push
ds
mov
mov
cwde
push
ficom
jb
fstp
or
jne
ins
movs
sub
shl
ds
inc
inc
call
mov
mov
scas
ret
mov
dec
(bad)
imul
out
ret
clc
not
inc
retf
in
call
jge
mov
inc
stc
sbb
in
mov
jbe
xor
inc
pop
inc
neg
ret
cmp
in
test
outs
xor
dec
pop
shl
or
and
dec
jg
retf
cmp
push
out
pop
adc
lock
pop
(bad)
or
xor
call
test
dec
or
test
cld
mov
call
adc
out
jl
xchg
push
lea
(bad)
xor
shr
mov
stos
sub
js
pop
fs
jg
cli
fst
scas
adc
xor
adc
shl
or
scas
fnstcw
lds
addr16
icebp
inc
push
mov
mov
cli
cmp
jo
adc
daa
jns
adc
(bad)
cmc
ret
and
mov
ins
sbb
dec
daa
inc
mov
int
add
popf
jno
inc
arpl
(bad)
dec
aaa
xor
xchg
dec
stos
or
dec
mov
sub
stc
mov
rcr
mov
mov
movs
sub
repnz
pop
xchg
pop
stc
inc
xor
aam
xchg
fdivr
pop
pop
aad
std
push
popf
int
or
(bad)
jge
inc
xor
inc
gs
inc
les
pop
or
jecxz
jmp
inc
fld
in
dec
lods
ds
xor
inc
(bad)
push
xchg
js
loope
mov
nop
fdecstp
push
retf
test
mov
sbb
ds
test
cmps
jmp
mov
fcomp
pop
xchg
ins
cld
sbb
xchg
pop
lods
push
(bad)
ins
inc
mov
cmps
pop
hlt
mov
movs
or
mov
jb
cmp
sub
outs
movs
and
in
jae
inc
inc
push
lea
adc
mov
push
dec
shl
icebp
sbb
into
in
cmp
hlt
hlt
pop
jne
ret
imul
push
jns
mov
or
mov
fcmovb
xor
add
mov
test
lods
adc
mov
push
imul
movs
pop
mov
jmp
fmul
inc
mov
inc
jl
mov
xchg
popa
inc
push
inc
stc
sub
jp
stos
fs
or
lahf
(bad)
sbb
fs
or
and
push
jmp
add
popa
sub
out
jnp
fwait
xor
nop
out
xchg
imul
fisubr
lds
inc
pop
int3
ret
push
dec
bound
mov
mov
das
sub
int
stos
ss
icebp
sub
mov
pop
jno
sbb
fsub
push
ja
add
adc
dec
rol
ins
aad
cwde
lods
xor
outs
into
(bad)
adc
ins
or
shl
pop
mov
outs
mov
aad
scas
push
sub
push
inc
dec
adc
retf
xchg
and
mov
inc
daa
cmp
push
cmp
test
std
sbb
sub
scas
and
push
hlt
mov
cwde
or
sub
xchg
pop
rcl
jb
sub
retf
push
bound
xor
imul
lods
push
icebp
xchg
dec
add
imul
xor
sar
mov
push
jmp
in
mov
shl
aad
and
fisub
outs
ficom
je
push
and
and
inc
add
(bad)
sti
sbb
int3
push
mov
xchg
mov
lods
pop
das
jl
xchg
js
mov
mov
push
jnp
rcr
sti
jbe
loop
jmp
mov
or
mov
(bad)
daa
add
lock
sbb
jne
and
fs
inc
clc
xor
pop
push
out
add
test
inc
mov
jae
repz
daa
outs
xchg
aas
xlat
inc
push
xor
dec
jo
pop
es
lods
out
mov
xchg
fnsave
cmp
lods
xchg
and
inc
popf
xchg
xor
inc
adc
ja
mov
ins
inc
add
out
push
mov
and
jae
pop
pop
daa
sub
mov
jnp
fcom
xor
not
fbld
add
pop
js
inc
popa
test
jg
push
dec
push
pop
inc
adc
call
stos
daa
fstp
retf
sbb
inc
ss
adc
call
sub
mov
dec
jge
fadd
or
ins
loop
sub
mov
mov
ss
fisttp
je
dec
sbb
cmp
jmp
cmp
xchg
imul
stos
shl
loop
clc
and
pop
jns
ds
int
sbb
push
mov
push
dec
or
aaa
or
outs
shr
sbb
mov
push
push
call
loopne
fimul
cmp
pop
add
test
je
jae
dec
popf
mov
mov
push
jb
push
and
pop
sahf
xchg
(bad)
sti
(bad)
imul
out
sub
inc
dec
sub
mov
out
shl
and
or
and
xchg
test
jle
or
mov
sbb
fisub
aam
in
add
lahf
jmp
in
jle
inc
movs
pop
(bad)
pop
movs
add
sahf
sbb
pop
sbb
sub
cmp
movs
xchg
aad
xlat
jbe
mov
or
mov
into
and
lock
ror
popf
push
test
jb
jmp
mov
je
gs
push
outs
dec
les
sti
sbb
or
ds
ins
int3
sbb
enter
pop
pop
movs
cld
sbb
js
xor
rcl
push
cmc
ret
lds
mov
jbe
call
pop
cmc
mov
jae
add
adc
loopne
push
cmps
scas
aam
enter
and
and
xor
dec
xchg
push
aas
mov
lods
loope
pushf
inc
in
dec
lds
cld
sub
pop
test
addr16
je
ja
lock
or
pop
lea
push
lods
sahf
xor
sub
xchg
retf
aas
pusha
fistp
call
data16
out
inc
into
ficom
imul
std
push
not
mov
inc
xor
(bad)
cmp
int
push
bswap
test
jmp
add
xchg
repz
shl
xchg
sub
cld
jae
test
cmps
repnz
mov
and
push
cdq
in
ins
rcl
jnp
xor
pop
pop
fsub
mov
jmp
in
shr
mov
pusha
push
push
push
ds
cs
push
sub
test
psrad
xor
dec
fdivr
lock
or
retf
xlat
int
shr
jmp
dec
jmp
push
ror
ror
repnz
inc
and
loop
pop
jbe
pop
sbb
sbb
neg
(bad)
enter
data16
shl
int
cmp
popf
or
lahf
pushf
pop
out
mov
xchg
sar
jmp
and
or
imul
mov
(bad)
das
hlt
rol
lea
ficom
test
mov
mov
pop
out
movs
cli
shl
int
jns
comiss
gs
rcl
sub
push
pop
jb
push
shl
add
jl
jne
inc
in
in
sysexit
pusha
fst
test
test
adc
mov
je
imul
(bad)
mov
test
mov
inc
fdivr
pop
in
cmp
or
jecxz
adc
add
addr16
adc
or
icebp
aam
mov
lahf
add
addr16
push
sahf
shl
jae
add
lods
mov
pop
dec
cs
xor
out
or
pusha
adc
pop
dec
lds
adc
cmp
mov
fidiv
mov
lahf
push
jl
push
ja
daa
push
in
jb
push
mov
icebp
xchg
cmp
xchg
aaa
mov
pop
pop
leave
(bad)
jg
dec
clc
rcl
(bad)
dec
xchg
das
dec
jnp
out
imul
pop
aad
test
jmp
sbb
cli
and
cld
dec
dec
pop
mov
fwait
sub
inc
les
sbb
retf
(bad)
push
jmp
hlt
(bad)
aas
sbb
aas
add
push
loopne
mov
outs
dec
mov
jge
mov
mov
ret
pop
mov
sbb
sbb
loope
mov
cmp
mov
mov
mov
pop
adc
test
or
mov
push
repz
mov
fisub
push
clc
xchg
cmp
movs
mov
sbb
xchg
loop
ds
push
cdq
dec
jo
dec
push
fdiv
sbb
scas
xor
mov
adc
inc
sbb
repnz
inc
dec
js
mov
retf
test
les
and
(bad)
xchg
(bad)
ja
jo
imul
xor
push
shl
(bad)
sbb
sub
std
cwde
push
adc
outs
cmp
and
sbb
xor
add
sbb
jmp
push
xor
cli
pop
or
aaa
xor
mov
ret
sub
lods
mov
out
jnp
and
or
ja
mov
rcl
rcpps
sub
(bad)
stos
mov
pop
push
nop
pop
retf
test
add
cmp
xchg
jb
mov
daa
xchg
jnp
lock
adc
popf
sbb
dec
mov
or
adc
jns
js
fcomp
aad
xlat
mov
sbb
clc
das
test
test
adc
add
xchg
push
mov
adc
inc
hlt
add
cmps
add
les
mov
aam
and
fld
push
ss
push
je
imul
imul
cmc
movs
mov
nop
(bad)
jmp
imul
sbb
sti
in
mov
(bad)
dec
dec
push
test
xlat
lods
int
jmp
mov
aaa
or
in
jo
mov
fidivr
xchg
xchg
or
shl
mov
xchg
and
stos
and
(bad)
sbb
imul
xchg
lock
fistp
fdivr
fcomp
stos
dec
and
and
push
(bad)
pop
sbb
xchg
inc
cdq
mov
or
stos
sahf
jmp
cli
loop
pop
retf
stc
aas
mov
icebp
cs
add
pop
jbe
xchg
xor
ss
mov
jne
movs
ja
movs
dec
xor
out
loopne
clc
dec
xchg
(bad)
and
test
or
and
iret
(bad)
pop
jb
dec
push
js
scas
fmul
add
or
mov
js
arpl
mov
xor
adc
add
dec
xchg
rol
fdiv
dec
aas
aaa
repnz
jle
adc
jae
fs
sbb
cmps
cmp
mov
lds
mov
imul
fisttp
adc
test
cwde
jmp
retf
add
lods
mov
sub
outs
adc
mov
or
cmp
ret
jge
cmp
popw
xor
out
lds
ret
repz
inc
call
stc
test
imul
je
add
inc
pop
adc
cmps
mov
in
(bad)
cmp
or
(bad)
jno
jb
fcomi
ds
shr
sahf
mov
clc
sar
cmp
aam
das
or
dec
aas
push
fbld
mov
jo
pop
fdiv
loope
sub
mov
push
shl
fs
pop
aas
shr
inc
jo
repnz
shr
sbb
retf
jae
mov
sbb
add
jo
gs
push
cmp
sbb
fist
nop
push
sbb
fsubp
lds
pop
dec
jmp
out
psubsb
addr16
ret
nop
pop
inc
loope
xchg
test
cmp
mov
add
fwait
popf
jb
lods
mov
push
and
sti
or
xor
push
retf
xchg
mov
stos
in
and
cmc
sub
and
ret
push
mov
ror
into
les
pop
push
inc
test
pop
out
or
dec
cmp
jge
in
pop
fld
shr
sub
frstor
mov
pop
aam
lahf
icebp
adc
dec
call
push
(bad)
lods
out
jo
or
pop
aam
jns
ret
das
ss
jmp
fild
add
call
or
adc
popa
stos
xor
fild
daa
push
in
in
out
mov
out
inc
cmp
(bad)
in
xchg
adc
xor
mov
loop
test
nop
mov
lds
sbb
fnstenv
push
pop
loop
arpl
sub
push
test
retf
lahf
fwait
mov
mov
out
lods
lahf
lock
loop
jb
cmp
call
sbb
aam
ja
call
pop
jge
pop
push
(bad)
or
sbb
stos
iret
lods
std
mov
mov
and
stos
jns
xor
dec
and
ja
and
stos
bswap
cmp
mov
mov
enter
sbb
lods
hlt
repnz
dec
jmp
push
shl
push
mov
ins
shl
shr
ja
fidiv
adc
lock
das
pop
mov
adc
and
xchg
sub
cli
dec
outs
jle
dec
mov
outs
or
jbe
push
sub
(bad)
into
loopne
sbb
cmp
inc
jo
jl
pop
push
dec
mov
add
xor
push
xor
sbb
dec
fcomp
dec
fadd
iret
xchg
(bad)
call
mov
mov
fst
mov
push
popf
xchg
mov
pusha
mov
imul
aas
out
sahf
in
cmp
in
imul
pop
imul
out
xor
sbb
or
cmp
or
aad
rcl
sar
sbb
imul
imul
jo
xchg
cmp
jno
outs
jne
scas
scas
fsub
cmps
mov
sbb
stos
inc
pop
xchg
add
jp
or
mov
nop
idiv
jbe
xchg
sbb
push
mov
or
mov
sbb
jo
cdq
test
imul
inc
test
into
cmp
jo
ja
int
mov
sbb
js
mov
addr16
add
sub
or
jns
call
ret
push
fdivr
out
stc
sbb
sub
ror
cmp
frstor
inc
inc
outs
adc
xchg
sub
jno
fcmove
push
xchg
pop
retf
mov
das
jle
pop
mov
or
inc
cmp
out
dec
push
xor
fadd
sar
outs
pop
out
std
mov
jne
and
pop
adc
dec
retf
push
stc
shl
cmp
imul
call
push
fnstsw
add
or
xchg
dec
jmp
push
je
sub
(bad)
sub
xor
xchg
xor
cmp
repz
je
xor
mov
fwait
ins
xor
aad
pop
das
sbb
sub
cdq
(bad)
(bad)
sbb
retf
test
test
push
dec
push
pop
in
push
pusha
sub
sbb
shrd
push
mov
popa
out
fldenv
in
dec
loop
xchg
cmp
sub
cld
cmp
arpl
mul
inc
and
cmp
mov
ror
repnz
push
(bad)
and
push
lock
sub
jl
out
inc
les
mov
lods
stc
cmp
xchg
jne
rcr
sbb
shl
push
pusha
mov
jb
mov
and
mov
retf
out
clc
add
bound
repnz
scas
xlat
mov
jle
in
push
jge
movs
push
dec
(bad)
in
xor
xchg
(bad)
fidiv
in
xor
mov
mov
in
push
or
sbb
in
jmp
movs
xchg
sub
js
retf
dec
dec
cmc
xor
sbb
cmp
lahf
cmp
clc
ins
dec
neg
int3
jp
xchg
dec
push
loope
add
rol
jle
sub
dec
iret
scas
imul
fucom
ret
js
retf
sbb
ror
push
cmps
sbb
imul
pop
hlt
ret
out
xor
aam
push
dec
outs
xchg
cli
jmp
dec
dec
sub
jne
and
mov
(bad)
bound
loopne
pop
mov
and
xchg
sbb
xchg
movs
dec
idiv
lea
ss
loop
inc
jb
mov
mov
jns
mov
xor
cli
jo
jns
mov
cmps
rcl
mov
fstp
ror
inc
movs
fild
(bad)
push
(bad)
movs
nop
dec
sub
and
in
sar
jmp
or
lds
stc
add
xor
or
mul
icebp
movs
fadd
jmp
pop
cdq
cmp
push
dec
aas
std
jmp
call
ins
(bad)
(bad)
retf
pop
pop
cmps
push
push
xchg
movs
mov
and
int3
arpl
add
push
jmp
cmp
das
dec
adc
pop
ds
lods
fidivr
push
cs
adc
inc
lahf
sub
ror
jg
das
loop
cwde
push
ret
jmp
add
and
in
xchg
loop
pop
ins
(bad)
(bad)
fdivr
inc
les
movs
adc
retf
and
(bad)
fmul
or
lods
loop
or
dec
in
inc
and
es
scas
dec
jb
popf
mov
mov
xor
mov
pop
add
loop
jp
imul
add
mov
bound
sub
push
push
mov
jecxz
sub
mov
scas
or
jg
mov
fs
xchg
push
add
rol
sub
adc
jmp
test
sub
in
cli
cmp
jle
add
repz
scas
push
out
mov
inc
mov
and
sti
sahf
sub
jnp
xor
lahf
or
mov
or
push
jb
fisttp
out
mov
sub
fsubr
cld
ficom
mov
fsub
ret
adc
mov
jmp
stos
xor
aas
jno
repz
cmps
daa
in
add
iret
pushf
dec
shl
daa
push
loope
(bad)
scas
or
rcr
retf
lock
adc
(bad)
ss
retf
imul
cmc
or
(bad)
jle
fwait
ror
fcom
clts
sar
gs
aas
ficom
sbb
fwait
mov
inc
out
pushf
inc
add
scas
and
fwait
mov
jns
nop
adc
xor
aaa
mov
mov
int3
jle
ret
xchg
call
fld
stos
loope
jmp
(bad)
ins
test
jne
lods
sub
inc
and
xor
xchg
mov
jg
mov
push
sub
and
mov
clc
xlat
mov
palignr
js
(bad)
popa
(bad)
adc
sub
inc
mov
mov
fs
xchg
and
dec
mov
fdivr
fsubr
rcl
sbb
or
add
push
hlt
xor
ja
dec
int3
add
lock
(bad)
outs
jno
push
shl
jle
test
sub
(bad)
(bad)
loope
and
mov
sub
lds
and
call
push
mov
mov
jg
(bad)
push
sbb
push
movs
ins
rcl
mov
fdivr
mov
mov
cdq
and
pop
(bad)
xor
xchg
jle
push
or
mov
push
clc
test
mov
push
imul
movs
sub
cdq
das
xor
retf
jno
fsub
pop
dec
dec
fcomi
std
outs
jb
pop
xchg
dec
je
mov
stc
push
movs
popf
pop
inc
fld
lds
pop
dec
inc
mov
push
sbb
(bad)
pop
lea
mov
mov
xchg
pop
stos
xchg
lahf
pop
push
rdmsr
pushf
(bad)
(bad)
jmp
xchg
cmp
bound
rcl
push
adc
mul
cdq
scas
es
pop
adc
jge
fwait
ins
xchg
jg
(bad)
std
push
cld
lods
add
xchg
or
cld
adc
stos
add
lods
retf
and
out
adc
das
mov
je
jbe
adc
jl
jmp
xchg
dec
ror
imul
enter
sub
fwait
ja
and
adc
jno
xor
(bad)
in
les
mov
xchg
and
adc
pop
mov
xchg
int
fmul
stc
pop
xor
out
sbb
pop
rol
into
std
into
cdq
fsubr
or
sub
or
mov
mov
dec
fs
cmps
mov
or
sbb
out
push
mov
mov
in
neg
push
div
jp
sbb
push
inc
and
cs
or
lods
jno
inc
and
pop
cmp
fidiv
jns
jb
pop
jg
sub
inc
(bad)
(bad)
sub
push
aad
mov
add
sub
test
pop
xchg
dec
int
gs
shl
mov
jecxz
dec
sub
mov
inc
aad
cmp
in
mov
inc
mov
(bad)
jns
mov
jl
in
jg
ror
call
popf
loopne
pop
sar
imul
xor
sahf
add
leave
pop
les
mov
in
ja
ret
fimul
ret
lahf
lea
cwde
mov
mov
fild
retf
adc
sub
les
ja
pop
xchg
dec
jae
pop
or
jle
adc
inc
sbb
dec
aad
inc
test
test
nop
push
xchg
and
and
adc
cmp
js
hlt
inc
nop
sbb
dec
push
mov
lock
pop
lahf
adc
out
aam
add
test
repz
add
iret
dec
jmp
lods
adc
aam
into
scas
dec
(bad)
aaa
xchg
aam
pop
xchg
pop
adc
or
push
xor
jge
mov
jb
xor
imul
das
repnz
cmp
cmps
xchg
fstp
jno
outs
mov
xor
mul
icebp
fbld
repnz
popa
push
xchg
sahf
mov
sbb
stos
das
xchg
xor
dec
jl
imul
mov
out
mov
dec
sahf
or
or
sbb
xchg
loope
mul
or
fmulp
xchg
fiadd
push
adc
adc
rol
jne
retf
pop
sti
popa
jle
push
les
mov
sbb
sub
sub
sub
mov
test
aas
add
mov
ret
pop
retf
mov
ss
sbb
mov
jmp
lds
jecxz
imul
dec
adc
cs
out
pop
push
in
mov
mov
jmp
push
fisttp
inc
sbb
jbe
pop
stos
push
into
arpl
jo
aad
fiadd
sti
xor
mov
mov
fnstenv
cmp
stc
and
es
popf
mov
jo
int3
pushf
adc
sbb
inc
sti
cmp
stos
mov
inc
mov
les
add
mov
mov
lods
mov
mov
bound
dec
or
adc
nop
cmps
adc
sbb
aad
fxch
mov
xchg
mov
cmp
cdq
xchg
pop
push
scas
xor
dec
mov
push
xchg
jle
cli
or
(bad)
into
push
push
or
repz
mov
xchg
cwde
ja
push
lods
rep
add
gs
aas
cmp
repnz
adc
pop
pusha
jns
sub
jg
mov
ret
loopne
out
xchg
dec
lahf
(bad)
mov
mov
fs
es
out
frstor
aaa
inc
int
lods
sub
clc
mov
xchg
jmp
cmp
cmp
jle
mul
gs
xchg
sub
fst
push
out
movs
jb
jmp
xor
mov
adc
test
inc
sar
imul
jge
int3
dec
sub
push
fwait
test
rcr
ds
cmp
and
popf
dec
jmp
inc
mov
push
inc
dec
mov
dec
xor
fldcw
es
cli
adc
jmp
jge
push
mov
jge
pop
mov
mov
cmp
sbb
mov
pushw
stc
or
cmp
(bad)
cdq
or
out
sbb
mov
push
das
push
ins
push
(bad)
out
std
push
popa
inc
mov
das
mov
cmps
xchg
fcomip
pop
daa
dec
pusha
outs
push
adc
mov
xchg
xor
jae
inc
call
test
out
jno
pop
or
lea
xchg
xchg
ja
cmp
jmp
or
faddp
fistp
(bad)
not
js
nop
inc
lods
sub
sub
test
xchg
ins
imul
fisub
lea
sbb
jle
xor
mov
aaa
jp
push
outs
ins
mov
fdivr
fsubr
xor
hlt
xor
and
test
inc
nop
ss
pop
aaa
push
xor
leave
and
imul
aam
mov
add
sbb
inc
adc
(bad)
lods
jmp
or
iret
add
ror
or
mov
push
push
sbb
add
fstp
repnz
imul
sbb
pop
popa
adc
js
mov
lods
std
inc
mov
mov
in
test
jmp
mov
add
jb
dec
ret
jp
lock
push
fadd
dec
pop
mov
dec
dec
pusha
jmp
sar
xchg
sahf
in
cmc
lahf
imul
div
pop
jnp
cmps
ffreep
sbb
stos
(bad)
jecxz
xor
dec
mov
dec
aad
mov
std
mov
dec
clc
loop
or
cs
adc
or
adc
add
cmc
and
xchg
scas
and
cmc
shr
cmc
cs
xchg
sub
iret
lock
out
lods
inc
jns
or
sbb
mov
rcr
scas
retf
int3
xchg
mov
leave
ins
daa
popf
jmp
lods
shr
pop
mov
int
inc
cmp
ret
stos
xchg
aas
lods
jns
add
adc
dec
push
mov
inc
sub
call
cmp
aad
jne
push
adc
inc
sub
xor
scas
xchg
in
ret
cmp
sbb
add
jb
add
pusha
cli
gs
outs
cdq
jo
cmp
xor
lea
(bad)
lea
inc
xor
mov
loop
cmp
and
push
sbb
mov
stos
out
sub
mov
dec
jmp
repz
dec
jmp
pop
lds
xchg
shl
icebp
push
jmp
int
sub
(bad)
and
inc
pusha
div
sub
fidiv
fs
and
imul
cmp
ret
mov
lds
jne
call
fisttp
xor
retf
fs
nop
mov
sub
mov
adc
fs
loopne
mov
das
test
jmp
cs
fbstp
hlt
leave
jae
pop
fcom
jb
mov
daa
inc
ret
aam
mov
xchg
aad
pushf
mov
mov
cld
sub
push
or
sub
ret
sub
retf
fisttp
rcl
mov
in
addr16
gs
mov
es
loope
lds
adc
mov
xor
fsubr
xlat
xchg
dec
sub
jo
mov
xchg
inc
sar
es
mov
xlat
or
mov
cli
mov
push
cdq
aas
add
jecxz
and
inc
ret
xchg
mov
idiv
retf
adc
cmp
dec
dec
ror
xchg
popf
add
mov
cld
(bad)
lods
and
iret
cld
bound
dec
cli
std
es
fs
cmp
in
mov
je
ret
pop
es
push
test
fistp
adc
and
dec
iret
xor
sbb
mov
cmp
js
retf
retf
and
sbb
shr
(bad)
into
push
(bad)
sub
push
sbb
or
shr
sub
out
mov
sub
retf
je
gs
or
hlt
mov
add
out
das
mov
mov
dec
test
fld
(bad)
lods
and
mov
call
rcr
movs
xchg
dec
idiv
xchg
sbb
sbb
mov
sbb
jns
adc
push
mov
cwde
cmp
and
fucomip
sbb
jnp
rcl
mov
sbb
dec
sar
test
sub
not
jge
inc
lods
xor
cli
jo
aas
pushf
mov
xor
xor
out
push
xchg
hlt
push
push
shl
aad
jns
mov
push
inc
ficomp
jbe
pop
out
fimul
sar
mov
adc
sahf
mov
cmp
push
dec
xchg
stos
int3
and
test
pop
gs
cmp
mov
dec
clc
sub
lock
mov
mov
inc
add
jg
(bad)
scas
pop
cld
push
clc
out
fmulp
mov
mov
les
pop
iret
mov
push
lds
test
push
jb
fbld
lock
dec
xchg
leave
pop
push
mov
call
mov
leave
scas
clc
pop
sub
or
xor
fld
jmp
add
aam
rol
into
fld
add
jmp
push
or
leave
or
imul
out
fldenv
xor
inc
rol
add
daa
nop
ror
imul
cld
sar
mov
aam
mov
push
xor
adc
mov
test
jne
mov
shr
jmp
bound
mov
rcl
or
nop
mov
mov
inc
call
mov
push
ror
push
mov
pop
push
repnz
push
mov
sti
jae
call
ins
mov
add
jmp
push
mov
mov
hlt
adc
push
in
ret
push
not
xlat
movs
adc
hlt
into
xchg
out
inc
sub
es
shr
push
push
jge
cdq
xchg
dec
xor
adc
mov
nop
gs
cdq
sub
mov
jmp
out
sbb
xchg
push
(bad)
cmp
pop
pop
sahf
sbb
clc
pushf
pop
push
fst
ins
(bad)
fidiv
push
adc
dec
inc
pop
lods
sbb
rol
(bad)
(bad)
fimul
fnstenv
sbb
fwait
inc
add
das
xor
cld
ins
jp
iret
rcl
or
dec
ja
repz
cmp
sub
and
or
xlat
imul
add
inc
mov
into
and
push
and
iret
xchg
loop
fdiv
xchg
test
dec
add
icebp
int3
stos
xor
repnz
sti
ds
xchg
jg
test
add
mov
dec
inc
mov
retf
mov
push
cmp
nop
xor
mov
cmp
daa
in
xchg
mov
jmp
and
pop
adc
mov
mov
(bad)
xor
and
jae
mov
aaa
es
add
gs
call
jns
xor
cmp
ins
aad
xor
shr
js
sar
fild
cmp
(bad)
ja
and
sub
xor
sti
add
in
in
add
jecxz
outs
xchg
lea
lds
add
dec
mov
fisub
ja
mov
dec
(bad)
sub
fs
sahf
or
sbb
js
sbb
jle
fidivr
push
push
push
in
xor
jbe
sub
(bad)
adc
es
or
mul
sub
sbb
pop
push
mov
inc
cmp
dec
js
sbb
iret
and
xor
xor
mov
jo
dec
xor
dec
cli
jge
fcomp
daa
sbb
dec
inc
xlat
jg
push
mov
movs
push
inc
call
ret
xor
adc
gs
lock
push
clc
cmp
add
push
movs
add
dec
or
push
(bad)
dec
sbb
movs
js
shl
js
jne
mov
push
scas
push
jg
ret
aas
aad
add
aaa
xchg
dec
mov
idiv
cmp
rol
xabort
pop
mov
and
(bad)
push
pop
pop
mov
xchg
das
dec
mov
dec
pop
xlat
add
xchg
add
adc
je
and
jge
int
mov
inc
std
push
pop
mov
mov
and
pop
test
pusha
sbb
scas
push
les
dec
add
inc
sti
bnd
imul
xchg
or
xlat
mov
pop
adc
adc
lock
mov
adc
jecxz
pop
xchg
or
mov
mov
and
mov
mov
sahf
in
lock
jno
mov
pop
loopne
les
bound
push
sti
or
mov
add
inc
sbb
add
call
loopne
retf
or
adc
pop
mov
xor
rcl
repnz
out
dec
xchg
(bad)
pushf
jmp
out
out
mov
mov
bound
xlat
or
scas
push
sbb
lods
sbb
stos
call
test
lods
adc
cmp
sbb
adc
sbb
cmp
stos
(bad)
or
sbb
mov
imul
rol
data16
cld
fwait
sub
xor
call
movs
add
out
scas
aam
cmovs
or
pushf
mov
adc
aam
sbb
or
imul
jbe
ins
sbb
push
retf
xor
pop
adc
jns
or
jbe
loopne
lea
pushf
les
int3
sbb
cmps
xchg
dec
into
pop
jmp
rol
sti
es
stos
mov
fisubr
imul
jns
adc
add
jg
ins
rcr
mov
inc
or
fsubr
jb
mov
pop
jp
test
adc
push
xor
pop
xchg
adc
aad
dec
cmp
fistp
(bad)
adc
retf
sbb
fild
call
addr16
test
into
xchg
xchg
pop
out
xor
sahf
cs
test
not
mov
int
daa
arpl
sub
dec
icebp
outs
scas
ins
(bad)
retf
sub
jnp
daa
sbb
xchg
dec
jp
ins
sahf
jmp
xchg
adc
clc
movs
sbb
inc
test
adc
mov
adc
cmp
imul
repz
clc
mov
pusha
xor
fimul
add
push
mov
call
fisub
mov
(bad)
and
subps
xor
mov
dec
inc
lock
fdiv
imul
sbb
mov
adc
and
push
mov
or
push
cld
gs
pusha
pop
sub
in
jmp
scas
add
xor
fwait
or
jns
mov
or
or
add
xlat
adc
movs
(bad)
add
xor
mov
or
push
pop
pusha
push
call
cwde
mov
or
mov
sbb
dec
(bad)
xor
neg
sub
loope
pop
rcl
fdiv
cli
loopne
ret
ret
adc
hlt
sti
adc
lds
hlt
xor
pop
mov
mov
hlt
mov
cdq
test
xchg
xchg
xchg
xchg
rol
dec
dec
cld
fdiv
sbb
shr
dec
int3
std
popf
(bad)
nop
cmps
sti
fs
xor
cmp
cld
add
jbe
(bad)
addr16
aaa
dec
mov
leave
sub
mov
add
popf
icebp
push
loop
lahf
sbb
dec
mov
inc
or
test
sub
fidiv
jge
icebp
adc
add
lods
jmp
pop
ficomp
aas
pop
pop
jmp
ffreep
xor
ds
sahf
pusha
fsubr
call
jne
mov
outs
cli
(bad)
out
mov
inc
jmp
inc
aas
xchg
fist
mov
lods
nop
fwait
xchg
cs
cmps
pop
sub
sbb
arpl
scas
rep
imul
nop
into
push
push
js
push
(bad)
loope
imul
aas
in
out
fdivr
mov
and
sub
std
fs
repnz
rcr
in
mov
jp
xchg
push
jae
and
mov
test
cmps
cmp
pop
ss
sub
cmp
push
jmp
and
cmp
ss
jle
xor
inc
les
rol
xor
jmp
and
aaa
mov
xchg
mov
sub
xchg
cmp
pop
mov
pop
cmp
jnp
lods
push
mov
punpckhdq
jbe
pusha
lods
cmp
mov
push
xchg
cmp
or
xchg
adc
rcl
xor
sbb
stc
inc
(bad)
push
sub
cmp
not
jae
fbld
fs
cld
pop
pushf
mov
inc
pop
and
mov
xchg
xor
jae
mov
pop
cmp
pop
push
or
cmp
js
out
aad
mov
les
add
(bad)
scas
dec
adc
or
jmp
cdq
mov
imul
scas
ss
jmp
or
std
mov
or
pusha
or
adc
fwait
dec
retf
mov
es
jb
ret
and
push
lahf
inc
jp
aad
js
xor
nop
les
mov
sbb
lds
call
mov
aas
cs
aam
mov
jl
imul
cmp
adc
gs
and
xor
and
sub
mov
push
push
sbb
mov
adc
and
jg
(bad)
adc
push
and
test
(bad)
or
inc
sti
cmp
mov
mov
loopne
(bad)
int
mov
gs
(bad)
sub
test
cwde
outs
imul
test
mov
rcl
add
in
sbb
push
xchg
arpl
sbb
ror
fidiv
outs
out
mov
pop
pop
jno
fstp
ins
(bad)
mov
sub
sar
sub
in
iret
cmp
and
lock
fdiv
cmp
inc
push
mov
jl
mov
sbb
dec
xor
xor
xor
push
mov
jmp
add
inc
movs
adc
add
and
mov
and
aaa
imul
and
add
sbb
ins
icebp
mov
jns
jo
pop
pop
das
loopne
or
push
xchg
jae
jmp
mov
sbb
pop
pop
mov
mov
sub
in
stos
xchg
jbe
ins
les
dec
sar
rcl
fisub
jge
adc
shr
xchg
push
aam
dec
pop
rol
push
jle
sbb
(bad)
dec
sbb
or
adc
int
mov
je
mov
(bad)
dec
xor
push
cmps
mov
(bad)
sub
loop
push
pop
and
add
sbb
push
jecxz
outs
movs
sub
int3
push
cli
and
inc
or
xchg
jo
or
xor
retf
dec
lea
jns
cmp
ret
or
(bad)
ins
xchg
out
push
fcmovbe
cli
add
fld
ins
sub
mov
es
rol
hlt
aas
sub
hlt
xchg
xlat
adc
cmps
dec
pop
xchg
pop
psllw
pop
out
pop
loope
sbb
shl
cmps
or
mov
sbb
dec
pop
mov
(bad)
addr16
or
add
fisttp
ret
js
adc
imul
sbb
dec
jp
sbb
sbb
loop
jecxz
(bad)
aam
in
dec
leave
xchg
pop
pushf
popa
push
call
sar
inc
jae
xor
repnz
mov
pop
arpl
add
jb
pop
into
aad
ss
pop
jne
pushf
and
int3
jp
mov
sub
test
aas
lods
adc
nop
out
or
mov
imul
sub
test
bound
stos
fisubr
xor
cs
loopne
add
test
aas
sbb
pop
test
adc
lock
call
lock
in
xchg
jbe
pop
jne
jle
pushf
or
and
out
in
aad
sub
jo
inc
stc
hlt
in
cwde
jnp
clc
mov
daa
xchg
ficomp
dec
xchg
pop
jle
sub
out
add
cmps
(bad)
loope
cwde
es
orps
or
cld
cmp
call
xchg
jge
inc
iret
and
lea
xor
xchg
adc
lods
(bad)
clc
or
xchg
mov
(bad)
cli
and
jl
fwait
aam
sbb
(bad)
mov
inc
out
leave
or
shl
mov
cmc
or
xor
mov
inc
popa
ficomp
(bad)
mov
mov
jecxz
jbe
mov
add
test
es
into
rcr
sub
fmul
test
add
ins
lea
retf
mov
xor
cmps
mov
std
or
dec
ss
lods
dec
int
inc
fcomip
stos
mov
sbb
add
sub
pushf
jnp
mov
jae
repnz
mov
dec
lods
jmp
jnp
lods
jg
push
add
bound
jo
dec
adc
mov
fisubr
dec
pop
sub
imul
xchg
outs
fiadd
jne
mov
loop
add
sub
cwde
fidivr
cmp
rcl
xor
fucomip
idiv
pop
fwait
mov
jmp
push
bound
mov
inc
pushf
leave
push
push
xchg
js
dec
dec
pushf
stc
scas
xchg
shl
test
lea
jne
pushf
xor
sub
push
sub
pop
scas
cmp
popa
popf
je
cmp
sub
fld
add
add
(bad)
stc
or
test
jnp
pop
(bad)
jb
aaa
mov
lea
push
xchg
cmp
call
xchg
inc
retf
mov
and
dec
in
int
xor
pop
nop
fld
mov
icebp
out
xlat
xor
mov
add
pop
gs
mov
je
add
out
mov
jl
inc
inc
inc
fadd
clc
adc
inc
and
rcr
(bad)
aam
mov
and
xchg
cmps
pop
xchg
movs
jae
out
pop
push
adc
cs
pop
imul
cmps
sub
ret
sub
push
imul
add
push
mov
loop
mov
std
cld
pop
mov
mov
int
mov
pop
inc
pushf
gs
gs
push
push
or
dec
pop
sar
js
aas
or
push
fidiv
sbb
retf
mov
arpl
or
xor
cmp
mov
sbb
pop
outs
and
mov
cmp
push
rcr
fist
mov
call
and
inc
popf
push
enter
fisub
mov
ins
push
hlt
push
jmp
mov
dec
jns
inc
pop
retf
je
mov
std
scas
inc
sub
mov
jbe
xchg
out
jo
cmp
das
fisub
ficom
mov
dec
sbb
(bad)
cdq
mov
mul
out
mov
fwait
sub
push
cmps
inc
btr
dec
stos
add
jo
inc
cmps
out
es
stc
into
cs
shl
pop
mov
inc
shl
in
js
inc
pusha
cmp
mov
cmp
jmp
scas
or
into
jo
mov
or
call
cmps
loop
xchg
std
cmp
pop
idiv
into
ins
fbstp
sbb
loope
(bad)
imul
xlat
or
cs
(bad)
jmp
xchg
mov
ss
sbb
push
sbb
pop
addr16
and
sbb
js
dec
jne
sbb
aam
sub
sub
xor
test
dec
ins
mov
xchg
icebp
sbb
add
out
xlat
pushf
pusha
scas
cli
retf
(bad)
mov
pop
sub
stos
pop
cmc
sbb
pusha
dec
jae
pop
pop
jl
mov
or
and
outs
push
jp
arpl
adc
inc
add
xchg
cdq
pop
lahf
icebp
outs
stc
sub
cmp
inc
aad
ret
pushf
add
jge
mov
push
in
jge
hlt
sbb
mov
call
sbb
outs
mov
shl
out
push
jnp
in
popf
das
ins
sbb
out
lea
sub
addr16
test
iret
fucomi
in
scas
outs
into
sbb
jge
pop
push
sub
dec
mov
push
fs
cs
pusha
scas
pop
sbb
pop
inc
mov
jge
sub
push
in
push
add
dec
and
int
enter
add
inc
cmp
lods
adc
pop
mov
lea
sbb
imul
call
push
sbb
inc
das
fdiv
sub
cmp
lock
fwait
sub
inc
mov
mov
jae
mov
mov
sbb
add
ins
stc
push
inc
aam
imul
test
dec
jns
imul
aad
pop
mov
pminub
or
inc
out
xchg
clc
js
adc
outs
jbe
cmp
xchg
push
add
pop
fistp
test
xor
sub
lds
in
mov
push
xor
movs
pop
xchg
fs
ja
mov
in
ds
adc
pop
loope
jno
sti
stc
hlt
sub
mov
mov
add
xor
sbb
in
sub
addr16
push
mov
pop
cmovae
das
xor
inc
jmp
push
pop
in
imul
cmp
xchg
push
int
movs
and
cli
cld
cdq
ror
aad
push
aas
pop
jo
fiadd
mov
xlat
xor
dec
and
fsub
cli
and
add
in
xor
int
adc
test
pop
stos
retf
add
push
xchg
dec
pop
mov
sar
jo
push
dec
in
xor
daa
movs
jmp
rcr
or
addr16
stos
jne
test
dec
mov
push
mov
aad
not
sub
cli
xchg
mov
imul
cs
test
leave
xor
cmp
mov
into
pop
loopne
add
inc
fdivr
std
mov
xchg
lock
or
cmps
dec
mov
inc
cld
fst
mov
(bad)
mov
xor
dec
inc
cmp
lds
and
adc
add
leave
push
inc
fist
mov
push
gs
cli
pop
arpl
loop
xor
pusha
sub
xor
xchg
and
dec
fadd
bound
dec
out
mov
sbb
shr
mov
push
mov
mov
cmp
repz
jmp
(bad)
hlt
cdq
icebp
mul
jl
fwait
int
mov
adc
pop
shr
in
mov
(bad)
in
add
in
pop
nop
mov
pop
loop
(bad)
ins
xchg
lea
push
mov
sub
imul
leave
retf
xor
mov
ss
fs
lahf
mov
mov
cdq
fs
cwde
push
cld
adc
mov
dec
inc
test
jg
xor
sbb
loop
cld
add
fidiv
xor
fild
cmp
dec
cmove
jae
out
xchg
pop
mov
out
into
pop
gs
ret
inc
popf
pop
xchg
movs
loope
inc
(bad)
jmp
clc
sub
test
fiadd
and
adc
imul
inc
pop
xchg
test
gs
loop
xchg
aaa
jno
inc
mov
mov
push
out
jnp
jg
in
dec
scas
daa
imul
(bad)
es
lahf
in
dec
scas
sub
push
pusha
adc
ds
pop
push
cmc
xor
imul
retf
cld
fst
pop
jne
repnz
shr
sti
arpl
in
dec
minps
mov
xor
jae
or
cmp
shl
sar
mov
enter
sti
dec
(bad)
pop
out
sbb
dec
out
push
and
xchg
clc
add
dec
lock
mov
sahf
jg
stc
xchg
out
mov
ins
out
jbe
xchg
dec
pop
lods
sbb
ret
aaa
xchg
scas
maskmovq
neg
call
cmp
push
cmp
jge
xchg
ja
mul
aaa
and
out
fbld
mov
jne
repz
jno
xchg
xchg
sub
lock
sub
xor
data16
and
jo
jp
dec
jl
cld
or
sahf
fcomp
les
push
(bad)
lahf
push
cmp
push
sub
repnz
cwde
sbb
sbb
pop
lods
jb
into
ret
and
in
mov
retf
xchg
sub
cmp
mov
mov
fwait
shl
fisttp
add
xor
xlat
enter
call
pop
push
xchg
in
imul
add
test
inc
xchg
or
sbb
or
cmp
popa
mov
push
mov
ror
push
(bad)
into
adc
fwait
movs
repz
shr
lock
shr
call
imul
xchg
jecxz
das
add
jo
jnp
inc
mov
or
ins
dec
in
(bad)
mov
(bad)
outs
mov
and
sbb
movs
jge
jecxz
sub
cdq
xchg
pop
into
mov
in
mov
pusha
push
mov
add
out
xchg
or
scas
clc
mov
xchg
or
jae
push
add
les
test
cmp
cs
mov
fldenv
(bad)
mov
xor
js
ins
push
xchg
imul
adc
sub
sti
lods
push
sbb
rcr
jg
ja
inc
les
inc
pushf
inc
cmp
scas
(bad)
pusha
icebp
push
dec
dec
jno
es
inc
pusha
movs
test
xor
int3
mov
jge
pushf
rcr
or
mov
std
adc
outs
out
push
enter
cld
and
enter
in
outs
pop
fst
mov
cmp
leave
es
push
mov
test
cld
jecxz
xchg
xchg
in
call
and
rcl
data16
stos
mul
lahf
outs
inc
test
add
push
aaa
mov
dec
mov
mov
mov
mov
sbb
xchg
aas
gs
je
out
stc
or
adc
das
and
(bad)
push
jle
(bad)
stos
cmps
in
jge
and
scas
(bad)
(bad)
call
xor
aas
push
mov
jnp
imul
ror
pushf
dec
out
call
cmps
mov
push
jns
jmp
sti
mov
pop
out
(bad)
fwait
and
daa
ds
pop
and
cmp
es
pop
scas
gs
adc
mov
test
mov
inc
jns
mov
cwde
mov
retf
fwait
xor
stos
mov
dec
xor
vphadduwq
inc
or
gs
xor
mov
in
xchg
mov
mov
in
les
into
inc
mov
xchg
xor
dec
cmp
stc
xchg
fild
ds
xor
adc
adc
in
xor
inc
lahf
shr
push
bound
inc
jnp
mov
push
sbb
pop
stos
shl
or
pop
jb
in
outs
imul
dec
test
mov
jp
popa
(bad)
(bad)
fld
gs
(bad)
jns
addr16
out
loope
xchg
xlat
sahf
cmp
(bad)
sub
sbb
xor
and
and
iret
lds
and
emms
jle
pop
stc
sbb
cld
addr16
dec
cdq
dec
jb
inc
(bad)
cmp
lahf
mov
in
in
mov
jle
and
ret
add
dec
out
out
jmp
add
push
xchg
sub
jmp
add
dec
lahf
jp
daa
fild
cmps
imul
lahf
std
clc
jae
mov
mov
ins
out
adc
sar
stc
call
lea
or
das
xor
ds
outs
in
mov
lods
push
ja
test
jns
push
test
sar
mov
mov
lods
mov
inc
cmc
lock
retf
pop
gs
pop
pushf
stos
scas
fld
dec
sbb
sbb
(bad)
iret
(bad)
sbb
movs
test
in
mov
xchg
inc
jbe
adc
sbb
adc
mov
adc
inc
stos
mov
int3
cdq
(bad)
ds
retf
mov
(bad)
out
sbb
idiv
add
into
push
arpl
mov
push
daa
inc
adc
pop
mov
daa
sbb
xor
add
xchg
xchg
dec
fldenv
adc
(bad)
mov
mov
(bad)
push
xchg
ja
adc
jno
push
push
stc
ret
sbb
xor
push
xchg
add
sub
push
loopne
xlat
sbb
and
out
jle
sub
push
jle
dec
out
addr16
movs
fbld
cmps
xchg
out
out
fimul
add
xchg
push
sub
jp
repnz
jge
dec
and
pop
dec
out
sbb
dec
cmp
xor
ret
arpl
fwait
outs
frstor
and
adc
xchg
sub
jbe
out
arpl
push
movs
and
shl
mov
loop
push
push
cwde
cwde
xor
add
xor
(bad)
pop
sbb
neg
iret
adc
add
aam
push
retf
xchg
fst
scas
(bad)
out
ins
je
outs
(bad)
cmc
add
and
mov
stos
or
aam
lahf
mov
mov
and
mov
pop
and
pop
jp
icebp
scas
ja
xchg
imul
mov
or
mov
mov
push
fadd
rcr
fucomi
pop
push
or
mov
push
jae
jle
mov
pop
mov
xor
push
adc
into
popf
or
xchg
jno
daa
out
jle
fisttp
pop
jecxz
in
dec
xor
pop
or
not
cs
push
push
xchg
loopne
cwde
adc
or
pusha
rol
add
shr
lods
or
sbb
scas
inc
sbb
dec
es
repnz
jl
and
retf
add
jl
jno
dec
sbb
adc
loop
clc
aas
cwde
dec
(bad)
pop
js
(bad)
(bad)
enter
shr
sub
stos
add
push
int3
or
loop
dec
pop
mov
cmc
sbb
cmps
(bad)
xor
jmp
adc
and
adc
mov
inc
(bad)
push
push
hlt
inc
inc
imul
push
shl
call
aas
sub
pusha
and
sub
mov
in
jmp
jg
les
clc
dec
adc
aad
sub
mov
fucomp
or
jmp
imul
and
mov
adc
mov
pushf
clc
xchg
popf
out
adc
push
imul
inc
sub
jae
sti
imul
je
in
lea
push
into
bound
repz
xchg
leave
push
daa
pop
in
sahf
div
retf
xchg
inc
mov
adc
mov
leave
lahf
je
and
cmp
jmp
cmp
arpl
mov
mov
or
popf
dec
lds
jae
cli
inc
repz
hlt
push
and
cs
jae
inc
sbb
loop
push
xchg
adc
(bad)
add
outs
cmps
out
jmp
aas
dec
mov
loope
cmc
arpl
leavew
inc
xor
ins
push
push
ret
gs
push
push
mov
mov
sub
jns
sbb
or
outs
xor
or
xchg
jnp
stos
jmp
mov
lds
es
call
dec
test
je
(bad)
repz
mov
mov
rcl
jp
pop
dec
lahf
test
push
shl
sub
xchg
adc
pop
sbb
repz
std
scas
mov
adc
jbe
pop
and
jmp
inc
and
xchg
aad
jp
push
sub
cmps
xor
hlt
jo
shr
cld
xor
popf
cs
xor
mov
call
dec
imul
scas
mov
adc
xor
push
xchg
xchg
out
cmp
jns
not
mov
vpaddsb
ret
jnp
cmps
test
xchg
pusha
push
in
dec
mov
inc
mov
mov
fadd
into
hlt
aad
push
vprotb
dec
mov
rol
jp
int
jnp
push
arpl
test
xchg
js
popa
sti
test
out
dec
adc
shr
sub
fwait
push
mov
and
add
push
pop
(bad)
cwde
push
mov
ins
mov
dec
mov
cld
sbb
mov
sbb
pop
fidiv
cmp
ins
fwait
push
jp
xor
jae
movs
mov
dec
(bad)
(bad)
sbb
cmps
adc
mov
loopne
scas
mov
push
pushf
popa
jle
jmp
(bad)
clc
or
inc
push
test
call
das
sub
mov
xchg
mov
lea
movs
mov
dec
fidiv
add
mov
push
gs
icebp
test
mov
(bad)
stc
adc
cmp
or
pushf
je
and
pushf
shr
neg
sar
jne
push
or
js
inc
ret
je
mov
cwde
mov
mov
jmp
cld
cmp
jle
nop
cmp
sbb
sti
into
out
iret
call
call
aam
ja
pop
dec
cmp
sub
dec
mov
in
fist
xor
adc
adc
mov
sbb
mul
cmps
in
dec
lods
mov
push
fwait
or
mov
bound
fst
add
xor
mov
pushf
pop
cmp
or
pop
jae
or
rcl
(bad)
div
xchg
mov
test
fs
dec
mov
push
dec
(bad)
lock
add
test
lds
dec
out
lds
mov
test
les
inc
stos
xchg
mov
jle
xor
dec
jge
fistp
fwait
dec
arpl
sbb
vsubsd
or
repnz
aad
les
adc
lods
pop
xchg
aad
and
outs
cs
outs
sahf
(bad)
cld
pop
jp
sbb
inc
xor
dec
aad
sub
cmps
aas
inc
lahf
mov
lock
mov
stc
retfw
jne
popf
bound
pop
out
out
mov
rcl
retf
jl
es
jmp
div
jmp
imul
test
add
cmp
shr
adc
or
sbb
out
adc
stos
push
cmp
shl
fimul
pop
xchg
gs
int
inc
pop
or
jge
pop
dec
call
shl
enter
xor
daa
pop
sub
psrlw
jge
dec
add
pop
cld
stos
shr
jb
into
es
push
bound
mov
adc
mov
(bad)
into
sbb
jmp
push
xchg
cmp
xor
cmc
ror
adc
rol
jnp
cmp
ret
scas
adc
out
inc
fisubr
push
in
xchg
adc
hlt
and
fcomp
xor
cmps
mov
pop
or
in
into
popf
cmps
cmps
aam
and
sbb
mov
inc
sbb
and
sbb
sbb
jnp
mov
retf
sub
mov
scas
sub
push
mov
pop
call
inc
rcl
mov
lock
or
ret
xor
dec
leave
sti
(bad)
scas
aaa
dec
arpl
add
pop
jnp
ss
fst
mov
mov
jmp
arpl
and
sbb
(bad)
or
lods
dec
fldenv
push
inc
mov
add
adc
cli
popf
jne
(bad)
(bad)
jl
ror
mov
shr
jg
aas
xchg
sbb
outs
inc
(bad)
loope
ja
fidivr
fild
push
das
sub
(bad)
out
fnstcw
push
and
xor
dec
or
pop
hlt
cli
inc
mov
pop
add
dec
push
shr
jg
dec
adc
out
out
fisttp
cld
dec
mov
(bad)
sub
mov
jae
test
and
push
sub
(bad)
mov
push
imul
mov
sti
jbe
push
xchg
sub
xor
mov
popa
loop
adc
push
mov
ror
add
xchg
and
cmp
xlat
pusha
mov
test
sbb
mov
shl
inc
jmp
lods
hlt
push
adc
push
xchg
int
or
arpl
je
mov
mov
loopne
retf
jns
xchg
xchg
lock
mov
cmc
and
cmp
jecxz
fisttp
cdq
adc
and
or
nop
stc
push
inc
pop
inc
mov
rol
cwde
icebp
aaa
int3
mov
add
lea
sub
pop
icebp
outs
dec
aad
push
adc
jmp
rol
into
xor
int3
sub
icebp
icebp
in
inc
xchg
or
ins
sbb
iret
fisubr
xchg
xchg
lea
pop
icebp
das
rcr
sahf
int3
xor
lea
shl
cdq
jmp
jmp
gs
cmp
push
mov
je
jno
cmps
aam
iret
and
or
gs
in
push
in
fdivr
in
add
sbb
outs
ja
cmp
pop
mov
and
and
sub
movs
sub
or
(bad)
test
cli
inc
push
ret
ror
mov
sub
mov
jns
stos
dec
mov
nop
sbb
dec
int
inc
mov
pop
pop
loope
cmps
imul
aaa
jns
mov
shr
and
jge
cdq
loope
lock
(bad)
into
xor
dec
add
aam
adc
xchg
jl
in
(bad)
cmc
or
xchg
adc
jmp
jno
mov
adc
mov
jmp
adc
adc
mov
adc
and
xchg
rol
outs
and
test
stos
mov
jg
(bad)
jp
sub
pop
dec
xchg
push
xlat
xor
jg
mov
(bad)
and
jmp
cmp
call
cli
pop
int
inc
mov
add
mov
lea
rcr
xchg
sub
jmp
inc
(bad)
leave
sbb
pop
and
fist
pop
leave
mov
xor
xor
lods
frstor
adc
xchg
mov
jb
or
pushf
scas
mov
cmp
out
js
push
iret
sti
inc
mov
mov
add
jg
cli
ins
adc
adc
mov
mov
dec
push
adc
jo
cwde
leave
lahf
pop
sub
inc
ss
jnp
pop
mov
cli
adc
cmp
out
ds
jno
enter
dec
or
lea
enter
loop
lods
jo
xor
lds
sahf
imul
inc
xlat
out
cmps
lea
mov
(bad)
mov
int3
ins
mov
inc
push
inc
test
cmps
and
xchg
cld
dec
int
xchg
push
(bad)
leave
adc
xchg
sbb
pop
push
icebp
pusha
shl
sub
push
icebp
cmc
ror
cwde
add
xor
jno
fild
nop
and
jbe
push
xchg
sbb
xor
mov
pop
pop
add
pop
jo
int
pop
xchg
popf
not
mov
shr
(bad)
pop
adc
enter
dec
not
cmp
dec
fcomip
and
mov
aas
sub
cli
dec
hlt
popa
jl
adc
fist
xchg
addr16
out
xor
jp
test
pop
es
cmp
rol
and
mov
adc
sub
(bad)
ds
pushf
xchg
pop
push
add
int
jle
rcr
xchg
mov
dec
adc
les
and
xor
sub
xchg
add
test
lahf
call
sbb
pop
jnp
pop
or
adc
mov
push
scas
fmul
and
call
push
jl
sbb
jnp
test
idiv
or
dec
pop
dec
jg
fidiv
jg
jae
or
jecxz
in
int3
cs
xor
pop
sbb
fild
das
cs
xor
or
inc
sub
in
cmps
mov
add
xchg
and
push
or
mov
retf
loop
mov
das
push
stos
(bad)
cmp
push
push
mov
(bad)
or
repnz
mov
(bad)
pop
cmp
adc
cmp
xchg
loopne
pop
inc
fadd
mov
lock
and
xchg
int3
es
std
test
lock
dec
outs
das
mov
mov
cwde
hlt
jb
mov
mov
fnstsw
inc
mov
imul
push
mov
mov
mov
out
ins
fst
fucomip
aaa
mov
jmp
jo
cmp
cmps
or
dec
stos
jne
sar
int3
dec
(bad)
aam
or
lahf
dec
call
ins
das
dec
lods
dec
sub
mov
mov
mov
shl
pop
pop
dec
(bad)
jo
add
cmp
xor
pop
fcom
mov
inc
add
dec
jle
(bad)
jbe
adc
dec
push
mov
(bad)
push
mov
and
and
or
sbb
ret
push
es
bound
push
daa
dec
mov
xor
shl
ins
repz
popa
sbb
outs
sub
push
adc
xlat
cmp
push
out
jb
add
loop
add
loop
div
and
mov
je
out
scas
adc
int
sbb
pop
retf
ins
(bad)
and
rol
jg
jbe
adc
cmps
stc
pop
inc
jp
icebp
xor
icebp
jae
call
sbb
jmp
mov
sbb
xchg
inc
and
mov
bound
pop
mov
fwait
das
jbe
outs
test
jne
in
push
cli
and
fiadd
inc
shl
xchg
call
add
push
test
mov
scas
xchg
aas
movs
arpl
inc
sbb
es
xchg
call
and
(bad)
js
push
mov
jmp
aaa
jge
popa
fdiv
xchg
add
into
fwait
lock
pop
int3
and
loopne
sub
or
rcr
xchg
cmp
lods
out
iret
xor
jne
repz
cvtpi2ps
out
xchg
mov
pop
pop
imul
in
sar
in
test
sahf
push
test
cmp
dec
jbe
sbb
jmp
mov
stos
jno
les
jns
jp
cdq
pusha
push
in
push
inc
pop
in
stc
out
scas
sub
gs
adc
pop
in
cmc
out
repz
fcomi
and
cmp
pusha
add
std
push
jle
add
push
rol
adc
sar
add
(bad)
push
aaa
push
push
mov
add
in
push
cmps
cmp
les
push
mov
retf
fiadd
xchg
mul
xchg
fist
push
lahf
sub
sub
in
mov
push
and
push
js
aas
clc
push
xor
fld
cmps
outs
dec
or
rol
or
mov
mov
jae
leave
cmps
push
jp
lea
xor
pushf
ins
push
hlt
or
out
push
and
pop
das
xchg
js
sub
pop
mov
fwait
mov
sbb
es
jno
sub
and
loope
leave
fistp
mov
cmp
dec
push
xchg
mov
add
mov
push
mov
push
icebp
jl
xchg
sbb
jp
aaa
mov
pop
push
hlt
stos
inc
mov
cmp
bound
mov
add
clc
cmp
jecxz
in
cmovo
lods
cli
movsx
cs
adc
dec
xor
jno
dec
sbb
sahf
jo
in
es
ins
xchg
xchg
bound
scas
jbe
xor
sub
push
fucomi
inc
fdiv
sub
push
add
mov
pop
push
mov
imul
imul
cmp
call
cmp
out
pop
movs
xchg
fwait
add
cmp
mov
fsub
dec
scas
int
adc
jmp
sbb
sub
pop
out
cli
push
mov
fmul
lahf
ret
sub
mov
jb
je
push
push
inc
mov
movs
cmps
sar
and
mov
pop
pop
les
cmp
cmps
xchg
pop
jmp
scas
xor
dec
pushf
in
xor
adc
mov
mov
add
je
popf
add
jecxz
cmp
jle
cdq
pop
std
dec
dec
adc
daa
addr16
lods
fnstcw
and
dec
sar
push
mov
push
inc
pop
xor
jno
mov
mov
retf
ds
in
aad
mov
pop
into
adc
push
mov
jo
sbb
and
add
out
iret
add
stos
xor
(bad)
jmp
mov
(bad)
add
std
stos
mov
cmp
ds
imul
cmp
mov
imul
cld
ins
imul
scas
jno
mov
es
sbb
and
xchg
pop
add
jmp
inc
mov
xchg
test
pop
sbb
leave
cwde
movs
push
push
mov
xor
inc
and
mov
mov
(bad)
cmc
pop
add
gs
or
inc
out
mov
xchg
das
cwde
mov
xchg
rol
sub
and
xor
in
cmps
lds
imul
shl
scas
adc
push
stos
add
and
nop
out
mov
mov
adc
mov
jnp
add
ja
cld
pushf
sbb
push
cmp
jl
loope
sub
out
dec
mov
xlat
nop
xchg
sub
xchg
dec
imul
aam
mov
inc
cmp
pop
aas
idiv
pop
dec
out
adc
or
cwde
(bad)
or
outs
or
xor
in
addr16
int
sub
cmp
stos
xchg
fld
in
mov
push
adc
and
jg
std
cmp
push
out
inc
sub
sub
sub
jne
pop
pop
push
and
sub
push
into
dec
xchg
mov
stos
repz
push
hlt
jmp
repnz
mov
inc
cmps
js
xchg
and
jae
and
ror
sbb
scas
push
data16
stc
je
cmp
adc
xchg
(bad)
sbb
pop
imul
pop
mov
(bad)
lods
mov
aad
sbb
or
das
mov
les
xchg
call
pop
jle
sub
mov
aaa
neg
mov
scas
sub
ror
xchg
les
inc
cmp
push
push
loop
mov
imul
outs
jle
inc
cmp
push
repnz
ja
loopne
loopne
jle
and
(bad)
pop
cmp
add
clc
xchg
jmp
mov
jno
cdq
mov
call
jp
(bad)
jle
repnz
lahf
inc
mov
sub
and
bound
(bad)
sbb
lods
icebp
xchg
sbb
adc
enter
pop
test
imul
scas
mov
cmp
dec
mov
cmps
fsubr
add
mov
test
push
xchg
aaa
std
out
cmp
ret
rcr
cmp
fnstcw
stos
xchg
in
sti
loopne
xor
xchg
add
cmc
jp
clc
and
push
leave
enter
scas
or
and
ror
sub
test
jae
dec
retf
cmp
push
mov
add
imul
adc
push
pop
jbe
xchg
int
mov
fisttp
loopne
ret
mov
and
pop
fadd
lods
daa
add
push
les
pusha
stc
std
inc
push
js
sbb
cmp
ja
repnz
ror
ins
movs
inc
(bad)
in
push
and
xor
gs
pusha
rol
and
push
loope
mov
fdecstp
arpl
push
int
stos
cmc
xor
mov
out
mov
ins
fistp
cmps
xchg
hlt
mov
arpl
xchg
movs
xchg
mov
push
mov
ds
loopne
jno
fsin
xor
clc
xor
mov
fcom
imul
lahf
repnz
sbb
cmps
sbb
cmps
popf
mov
adc
dec
mov
xor
rcr
push
out
rcr
fistp
and
mov
aaa
rcl
cwde
hlt
cmp
mov
push
mov
push
lahf
(bad)
xor
mov
sub
repnz
in
sti
xchg
xchg
lea
in
fild
lods
cmp
mov
outs
sbb
inc
add
std
or
jmp
ins
sbb
std
retf
(bad)
js
jae
pop
add
aad
in
pusha
lods
movs
ret
sub
mov
pop
loop
fcom
jmp
dec
cmp
stc
cmc
call
sbb
or
add
nop
loopne
clc
push
sahf
lods
scas
jb
sti
icebp
ret
or
mov
imul
cmp
mov
mov
inc
add
sti
adc
mov
jge
loopne
and
sbb
pop
sub
sbb
imul
nop
dec
into
call
push
adc
and
jnp
pop
add
mov
in
pop
(bad)
jp
popa
ss
or
mov
sti
mov
sub
inc
in
sbb
push
sbb
popf
push
add
out
inc
loope
int3
es
jmp
enter
dec
(bad)
mov
out
dec
outs
cmps
or
sbb
call
sub
dec
(bad)
or
mov
or
cli
ror
dec
dec
mov
movs
mov
movs
ret
cmp
mov
pusha
sub
test
add
push
std
jb
cmps
ss
cmp
gs
leave
cmp
pop
and
ficom
dec
stos
mov
push
push
xor
pop
pop
push
out
aaa
jecxz
adc
adc
or
jae
push
mov
jb
in
cs
lods
out
xchg
sbb
mov
repz
ins
or
fnstsw
lds
call
movs
xchg
add
pushf
in
xor
test
out
ins
dec
adc
in
retf
lods
pop
sub
xchg
dec
stos
mov
mov
int
aam
inc
imul
mov
loopne
aas
rol
or
lds
(bad)
sti
jg
icebp
mov
sub
shr
(bad)
out
push
(bad)
in
imul
mov
stos
jmp
cs
and
cdq
or
int
mov
jne
xchg
aaa
inc
iret
xchg
test
ins
fwait
and
aad
inc
cli
pop
adc
and
sbb
into
ror
or
(bad)
fucompp
jge
sbb
inc
push
stos
imul
clc
bound
mov
loope
daa
adc
cmp
xchg
push
pop
clc
leave
(bad)
fist
adc
inc
mov
ins
dec
cmps
jmp
xor
sbb
cld
aad
imul
cwde
sbb
fist
(bad)
ja
cmps
imul
shl
and
xor
scas
inc
test
mov
ret
mov
stc
push
mov
add
aam
mov
inc
out
jae
mov
(bad)
mov
xor
push
sub
and
test
fcmovu
sbb
pop
inc
xchg
ret
aad
cmp
mov
dec
shl
add
js
je
cmps
mov
xchg
adc
test
jne
mov
loope
mov
out
adc
and
rcr
mov
icebp
test
xchg
aaa
pop
or
iret
xchg
xor
pop
jns
in
mov
std
xchg
sub
test
bound
mov
mov
cmp
mov
mov
leave
dec
inc
rcl
cmps
shl
mov
rcl
inc
push
cmps
adc
inc
jb
lods
or
fadd
mov
out
movs
iret
ja
jne
fild
lds
adc
mov
sub
cdq
fucomi
out
cmp
inc
sub
and
call
ins
aad
jl
and
mov
xchg
sbb
fcomi
pushf
and
add
pop
fwait
add
je
popa
sahf
fcmove
cmps
(bad)
xchg
nop
xchg
(bad)
(bad)
adc
fwait
adc
push
dec
mov
add
mov
jnp
mov
mov
mov
jae
xor
ret
call
mov
out
mov
jbe
adc
outs
mov
in
retf
nop
in
adc
(bad)
adc
and
pop
xlat
imul
jne
push
imul
nop
pop
les
adc
inc
ds
xor
ins
popf
in
pushf
enter
pop
dec
sbb
sbb
mov
arpl
mov
adc
xchg
je
mov
mov
call
and
xchg
movs
jge
sbb
sar
data16
cwde
mov
push
push
xchg
enter
(bad)
cmps
ret
jnp
inc
add
mov
jmp
hlt
xchg
or
or
lahf
sbb
xchg
mov
mov
movs
or
xchg
pop
jne
rcr
(bad)
stos
mov
das
js
rcl
aam
push
cs
sahf
cmp
dec
nop
xchg
mov
pf2iw
retf
das
and
fild
dec
rcl
in
push
(bad)
pop
mov
mov
pop
jmp
(bad)
aas
popa
mov
fnsave
hlt
adc
ds
mov
inc
mov
out
es
das
ror
inc
xlat
adc
push
or
es
fdiv
loopne
(bad)
fld
jb
mov
jo
test
mov
lods
pop
out
jecxz
mov
es
add
stos
xchg
cmp
leave
test
push
pop
mov
mov
sub
mov
retf
mov
xor
test
fdivp
repnz
mov
in
or
mov
ins
les
adc
sbb
outs
mov
push
xchg
and
fsubr
sbb
add
and
rcl
dec
cld
push
sbb
sbb
loopne
cmp
ret
cmc
icebp
std
push
pop
push
mov
out
sub
and
xor
or
and
cmps
aas
dec
push
xor
mov
jne
dec
adc
imul
mov
sub
jbe
pushf
out
ds
mov
add
jnp
inc
xor
clc
gs
into
icebp
jp
test
retf
popf
mov
repz
shr
or
and
cmp
lock
push
and
add
dec
addr16
popf
(bad)
test
and
jmp
int
sahf
fbstp
push
push
movs
mov
pop
(bad)
hlt
cmps
dec
add
xchg
or
pop
(bad)
sahf
aam
dec
or
mov
xchg
mov
(bad)
dec
mov
push
mov
rcr
or
int
(bad)
ss
inc
in
ror
(bad)
std
fdiv
mov
adc
jae
movs
mov
or
pop
arpl
js
loopne
push
or
adc
dec
ret
ss
sbb
ret
lahf
pop
xchg
or
or
sahf
mov
jne
push
test
mov
aaa
(bad)
(bad)
sub
repnz
mov
mov
mov
sbb
cmp
mov
jno
push
test
adc
sub
lea
sbb
jne
mov
test
push
call
outs
in
push
addr16
imul
pop
scas
or
pop
inc
sub
xchg
adc
test
icebp
inc
xor
push
xchg
test
not
mov
rcl
pop
push
xchg
ins
mov
bound
xchg
das
ja
fstp
mov
sti
out
cmp
push
dec
dec
frstor
in
push
mov
mov
add
mov
rcr
movs
sub
dec
and
or
mov
pop
or
(bad)
ror
fsub
mov
jmp
mov
into
push
xchg
aas
ror
dec
rcl
add
mov
push
out
sub
retf
stos
sub
into
inc
outs
and
imul
mov
call
xchg
inc
pop
frstor
sti
inc
shr
cmp
mov
in
xor
sbb
pushf
mov
dec
jmp
sbb
retf
mul
push
loopne
sbb
jne
dec
into
mov
leave
jo
movs
xchg
stos
aaa
pop
scas
in
seta
xor
mov
sub
icebp
pop
inc
cwde
test
cmp
(bad)
add
add
mov
fdivr
add
push
inc
(bad)
or
je
shr
ins
imul
add
mov
call
in
xlat
xchg
xor
sub
pop
dec
call
adc
mov
pusha
pop
sbb
jmp
popa
int
pop
cmp
std
mov
mov
sbb
dec
outs
push
loop
push
inc
xchg
fwait
xchg
sub
mov
bound
mov
cli
xor
loope
xchg
lock
inc
push
cmp
push
mov
aam
ss
fstp
push
pop
cmp
fst
sub
fld
xor
ins
shl
in
mov
daa
sub
shl
loop
std
outs
mov
inc
mov
dec
stos
mov
or
ror
pop
retf
pop
push
mov
mov
xor
or
jno
test
daa
push
mov
pop
aam
mov
jge
enter
scas
(bad)
add
xchg
mov
aaa
mov
mov
bound
imul
or
cmp
(bad)
test
xor
cmp
cmp
mov
js
out
jg
xchg
pushf
iret
leave
inc
adc
rcl
jne
pop
sahf
push
aas
outs
mov
cdq
fild
xchg
addr16
jge
loopne
loop
iret
push
inc
hlt
(bad)
dec
inc
sbb
push
clc
and
cmp
cld
sbb
mov
xor
sbb
jp
xchg
cmp
mov
cs
sub
rcl
sahf
cmp
inc
mov
cmps
sbb
movs
leave
add
xor
inc
lods
xor
dec
sub
cmp
test
or
mov
aaa
sbb
mov
fdivr
adc
(bad)
sbb
and
ds
shl
ficom
add
and
inc
sub
mov
out
fist
jmp
xchg
not
aad
retf
pop
sub
imul
mov
ds
adc
push
test
xchg
xor
xor
repnz
adc
pop
mov
sub
aam
ret
leave
jecxz
(bad)
int3
pop
sub
or
jno
pop
xlat
mov
and
cmps
mov
in
sahf
adc
imul
jbe
mov
pop
fisubr
call
cmps
xchg
pop
xor
xchg
mov
stc
push
mov
iret
cmp
jge
sbb
aas
mov
pop
imul
mov
and
loope
arpl
add
pop
shr
popa
lds
mov
fcmovnb
in
mov
jbe
mov
and
(bad)
mov
jo
or
fwait
xor
loope
enter
mov
mov
add
pusha
xlat
ret
test
mov
cmp
das
test
cmps
add
or
jbe
mov
pop
push
jg
sub
test
and
and
(bad)
jno
scas
in
mov
shr
add
stos
lods
inc
(bad)
xchg
push
sbb
(bad)
xchg
adc
imul
adc
out
cmp
jmp
into
(bad)
int
loope
nop
int
inc
push
data16
sbb
sti
dec
test
in
out
int3
(bad)
or
or
iret
push
push
push
pusha
sub
cmp
(bad)
aas
mov
in
retf
cmp
mov
int
mov
inc
push
into
in
bnd
jmp
leave
cmp
nop
pop
imul
ins
icebp
stc
mov
(bad)
fsubr
or
dec
jecxz
lds
call
xchg
or
mov
add
popf
xchg
inc
pop
push
aam
call
push
adc
ficomp
fdivr
clc
ss
jns
mov
fs
add
jp
inc
in
pop
jp
ja
pop
pop
push
lock
lahf
aaa
inc
jle
sub
add
jge
mov
cmp
cmps
repz
dec
jecxz
xor
div
jo
dec
imul
fcmovu
mov
stos
sbb
pop
inc
int3
xlat
test
push
loope
ds
pop
push
mov
in
shl
xchg
rcl
sub
adc
cmp
ins
ror
dec
in
sub
mov
pusha
jmp
inc
inc
loop
std
out
ins
jle
out
shr
test
js
xchg
into
jae
xchg
fisttp
cmp
pop
fxam
or
repz
(bad)
out
and
or
aam
fcomp
mov
push
inc
mov
jge
mov
ds
push
sbb
or
data16
inc
jmp
retf
xchg
imul
jno
call
sub
dec
and
fiadd
mov
xchg
mov
pushf
loope
out
repnz
or
cmc
in
fstp
mov
movs
aam
push
sbb
mov
aas
adc
push
inc
dec
xchg
shl
or
sub
push
and
jae
sti
jg
inc
es
adc
pop
adc
push
cmc
sub
inc
hlt
and
fwait
cmc
mov
mov
std
cmp
arpl
mov
mov
outs
pushf
arpl
(bad)
sub
(bad)
sub
add
out
call
test
mov
xchg
(bad)
movs
sbb
xor
clc
pop
(bad)
mov
mov
imul
ffree
(bad)
call
sbb
jle
jns
imul
enter
inc
faddp
mov
fadd
shr
mov
cwde
test
lock
inc
mov
mov
mov
inc
adc
mov
mov
mov
sbb
mov
lods
lahf
jnp
or
outs
popf
aas
fsubr
ret
mov
or
jle
sub
or
sub
aam
scas
shr
sub
sub
cmp
push
xor
jg
ret
outs
cmp
pop
rcl
pop
out
push
mov
pop
inc
mov
mov
lock
push
xor
mov
or
jo
xchg
lods
std
pop
aad
jnp
mul
and
imul
push
jl
mov
push
outs
fs
inc
push
imul
mov
mov
or
mov
pop
(bad)
lods
rol
sub
addr16
es
pushf
and
cli
push
mov
push
mov
mov
leave
pop
daa
cwde
test
mov
push
mov
xor
xor
dec
repz
outs
adc
scas
mov
bound
shl
outs
adc
out
jns
cld
mov
cmp
sbb
xor
mov
mov
cmps
jmp
push
fild
sub
pop
xor
jg
mov
daa
popf
ins
xchg
cmp
mov
int3
mov
adc
fadd
jbe
inc
xchg
push
jne
adc
xchg
popa
inc
sub
xlat
addr16
mov
sar
imul
jl
(bad)
cmp
xor
int3
mov
sbb
nop
fs
mov
xchg
ret
(bad)
push
pop
lds
ss
pop
mov
add
movs
push
xlat
jge
pop
mov
imul
scas
scas
dec
scas
push
test
stos
nop
js
movs
sub
int3
ret
das
cli
or
cmc
xor
xor
push
retf
sub
mov
mov
mov
jmp
rcr
cld
pop
sbb
imul
pop
and
cmc
cmp
push
xchg
mov
cld
pop
or
out
dec
shl
cld
mov
jge
sub
ret
push
adc
mov
fnstsw
dec
and
dec
mov
(bad)
xor
adc
out
dec
fstp
out
clc
mov
dec
into
rcr
jg
pop
xchg
xchg
shr
popf
rol
nop
enter
(bad)
push
ret
cmp
inc
(bad)
shl
stos
cs
js
and
das
xchg
das
aas
in
ins
(bad)
push
enter
shl
sub
cmp
sbb
out
pop
in
or
pop
nop
ret
push
mov
stos
aas
pusha
xor
ret
jnp
cmps
ficom
pop
xchg
mov
xor
fcomp
xlat
js
sbb
std
and
call
mov
test
lods
stos
or
loop
data16
add
xor
imul
push
sbb
mov
xchg
mov
fwait
inc
dec
aas
push
ds
mov
pop
sub
or
das
cmp
dec
or
lock
sbb
mov
in
enter
jbe
dec
or
mov
mov
paddusw
add
sbb
loop
push
gs
fisubr
inc
mov
jo
fisub
nop
ds
push
addr16
cmp
(bad)
imul
aaa
inc
and
jecxz
cmp
push
cmps
ja
fimul
(bad)
mov
lds
ins
or
int3
enter
mov
adc
inc
fistp
or
movs
in
jecxz
mov
and
ins
(bad)
(bad)
xchg
loop
loop
outs
push
cmp
inc
lods
push
fistp
and
retf
stos
jle
adc
push
push
(bad)
mov
imul
cmp
jmp
pop
rcr
in
arpl
xchg
sahf
popa
adc
xor
loopne
repnz
add
push
ret
sub
sbb
dec
fxch
xchg
mov
pop
into
lahf
ror
xchg
rol
call
es
sub
pop
cdq
pushf
dec
inc
in
scas
aam
add
add
sbb
pop
(bad)
repz
or
inc
ret
test
out
nop
cmp
scas
mov
dec
ret
stos
push
sti
xchg
mov
mov
push
sub
mov
jne
ret
jp
cwde
jmp
in
pop
repz
dec
dec
adc
retf
addr16
push
ret
adc
mov
xchg
fistp
mov
cmp
scas
cmps
jle
push
(bad)
ds
in
pop
jg
mov
dec
call
lock
jmp
xchg
lods
arpl
xchg
scas
or
mov
jnp
sub
xchg
jl
jle
ret
xchg
sub
(bad)
xchg
pop
sti
ret
sub
mov
stos
ins
or
mov
int3
pop
and
icebp
cdq
cdq
and
xchg
fwait
mov
xor
fldenv
xlat
add
sbb
scas
sub
cmp
xchg
ss
or
rcl
(bad)
aas
test
mov
mov
pusha
mov
into
ins
(bad)
fisttp
addr16
xchg
stc
or
outs
or
jnp
out
ja
xor
sbb
in
cld
mov
jno
mov
xor
inc
in
xchg
lods
retf
pop
mov
clc
pop
mov
cmp
xlat
xlat
(bad)
icebp
jb
mov
das
jae
cmc
inc
xchg
data16
cwde
cmp
imul
xchg
shl
scas
dec
sub
xchg
enter
arpl
in
outs
jmp
pop
retf
lea
xchg
sahf
mov
stc
push
stos
dec
cld
mov
fcomp
mov
add
xchg
cmc
mov
cld
adc
test
je
(bad)
xlat
pop
push
and
shl
lods
out
cmc
loop
dec
cmp
fwait
inc
pop
inc
jnp
xor
and
pop
mov
dec
lds
cmps
pushf
xchg
imul
ss
push
jl
fimul
and
out
jo
shr
pushf
stos
jmp
les
and
clc
imul
adc
push
or
xchg
test
sbb
rcr
popf
push
cli
jo
dec
imul
mov
xor
mov
(bad)
inc
pop
outs
push
fsubr
out
adc
xor
pop
jnp
bound
cmp
rcr
out
sbb
jne
push
repnz
stos
loope
mov
mov
outs
test
daa
lea
rcl
dec
xchg
hlt
fwait
push
mov
pop
ins
push
mov
loop
test
fidivr
xchg
jle
(bad)
push
sar
dec
movs
add
sub
(bad)
and
jmp
mov
lahf
jno
push
fdiv
xlat
adc
mov
outs
sub
add
push
fstp
jae
(bad)
dec
pusha
inc
(bad)
push
xchg
adc
(bad)
daa
mov
jnp
mov
es
sbb
sub
cmps
jmp
pop
call
and
jae
jnp
dec
mov
pusha
into
aad
pushf
xchg
xchg
mov
ss
push
div
(bad)
pusha
adc
pop
sub
repz
add
es
inc
setno
iret
dec
div
and
jns
fild
push
xor
lahf
popa
push
and
iret
add
stos
lea
jecxz
ror
xor
inc
xor
mov
adc
sbb
inc
inc
push
imul
pop
sbb
ins
cmp
inc
adc
ss
and
mov
xchg
push
pop
add
lods
test
push
mov
or
lea
add
mov
xor
(bad)
jge
pop
fmul
pop
mov
push
push
push
fwait
cs
push
mov
jno
cmp
sar
sbb
ins
jl
mov
or
cmps
mov
jo
sub
push
ins
ss
call
test
movs
and
lock
in
jmp
push
fidivr
or
pop
out
dec
lods
ja
mov
hlt
inc
out
test
lahf
add
out
and
lds
(bad)
pusha
leave
sub
popf
fstp
jb
pop
fimul
jle
test
add
out
push
rol
jne
test
loop
out
cmps
sbb
pop
inc
lds
outs
xor
pop
fistp
mov
adc
sbb
popf
sar
mov
pop
out
popa
(bad)
sbb
fcomp
xchg
test
xchg
xor
sub
jno
in
and
pop
inc
jge
shl
mov
add
div
xchg
mov
(bad)
adc
or
sbb
pop
lods
aaa
dec
push
pop
cmp
mov
in
pop
sbb
loope
popf
push
pop
scas
(bad)
jnp
jecxz
imul
sbb
xlat
sub
jecxz
leave
nop
mov
fidiv
sub
cld
sbb
loop
xchg
cmp
ror
and
fild
push
and
rol
sub
adc
sub
pop
test
or
shl
xor
mov
sbb
ss
popf
mov
mov
or
lods
mov
into
daa
adc
mov
or
je
lock
jmp
pop
add
add
es
adc
xchg
xchg
push
push
cmp
in
jns
mov
sbb
ins
fmul
pop
mov
cmp
pop
popf
push
int3
pop
cs
sub
repnz
shl
stc
les
imul
shl
and
in
fidiv
loop
mov
push
xor
(bad)
pop
jne
sbb
jae
and
push
out
addr16
in
xchg
icebp
iret
cmp
popf
cmps
jge
cld
mov
sbb
jne
jecxz
jmp
xlat
not
lods
push
popa
add
xor
and
imul
dec
f2xm1
adc
mov
add
cmc
mov
jne
jae
cmp
push
mov
jne
push
sub
sbb
mov
icebp
in
xchg
push
mov
ins
push
mov
adc
in
sbb
out
imul
push
int
ins
cmps
mov
(bad)
pop
shl
(bad)
push
or
sbb
pop
xor
cmps
sub
cs
jns
jns
jl
repz
aam
xchg
adc
je
mov
mov
add
(bad)
cmp
test
mov
and
pop
mov
xor
fiadd
mov
sub
ret
fnsave
test
sub
stos
add
inc
dec
adc
loop
push
jae
jb
jnp
jg
pusha
adc
stos
pushf
(bad)
loopne
mov
out
nop
sbb
sbb
sbb
retf
fst
movs
dec
rcr
xchg
dec
pop
mov
call
movs
pop
cmc
inc
mov
pop
test
mov
nop
shl
call
and
movs
pop
and
arpl
xor
out
cmp
dec
jge
jle
shr
stos
inc
stc
mov
cli
mov
dec
dec
lods
jle
jno
pop
add
sub
add
pop
scas
sub
pop
cwde
push
and
and
mov
mov
push
in
imul
call
imul
ins
test
ins
mov
jmp
test
xchg
and
loope
sbb
aad
dec
shr
and
xchg
repz
cmp
retf
pop
fiadd
jnp
or
out
xor
scas
(bad)
neg
movs
inc
les
daa
mov
sbb
adc
and
stos
out
push
mov
dec
popa
sar
je
ins
mov
(bad)
mov
rep
or
jns
ja
adc
out
or
(bad)
(bad)
enter
and
push
imul
lea
movs
dec
mov
std
add
lods
je
push
pop
add
jbe
out
je
fadd
mov
inc
add
sub
sti
xchg
or
push
or
sub
jb
dec
mov
mov
fcomp
pop
aam
pop
mov
mov
adc
cmps
movs
fisttp
fmul
lods
pop
pushf
stos
out
(bad)
pushf
jno
push
pop
adc
or
add
into
rcl
cmp
xchg
aas
adc
xchg
adc
loope
(bad)
jb
loop
(bad)
mov
push
push
xchg
cmp
je
cmp
popa
add
out
jo
adc
lds
xor
bnd
loope
pushf
pop
adc
mov
test
lea
out
stc
pop
mov
add
dec
jmp
repz
sbb
push
test
iret
(bad)
push
add
mov
and
pop
mov
xor
out
sub
or
bound
sbb
mov
je
pop
jb
cmps
stos
xchg
lods
loop
hlt
mov
lds
adc
lahf
int
(bad)
cmp
xchg
rcl
xor
icebp
mov
je
ret
add
cwde
and
mov
int
push
sti
adc
jge
jl
imul
das
push
mov
clc
ror
mov
cld
das
and
push
pop
mov
outs
cmp
repnz
xor
mov
sub
ja
dec
dec
mov
dec
sub
stos
mov
stos
mov
stos
jo
jg
sbb
pop
je
cmp
inc
test
test
fistp
jg
mov
out
icebp
outs
mov
ja
ret
jo
sbb
add
cmp
jg
add
jp
aaa
xchg
int
(bad)
retf
mov
and
jg
int
movs
pop
pop
inc
cli
pop
ror
aaa
js
sub
xchg
adc
scas
out
xchg
sahf
out
(bad)
cmc
mov
or
sahf
fcom
div
push
ret
and
rcl
mov
not
fcom
push
lock
push
or
shr
aas
icebp
ss
pop
inc
int3
pop
adc
outs
mov
test
mov
mov
jno
mov
jl
xchg
std
cmp
lods
jecxz
sub
pop
inc
sbb
push
call
xchg
sbb
adc
or
and
xlat
(bad)
outs
loop
ret
not
mov
cli
fadd
std
fs
loopne
cmp
shl
pop
cmp
and
pop
pop
mov
or
ret
sar
pop
fisubr
pop
jbe
sahf
and
mov
adc
repnz
push
shl
sub
cmp
out
push
in
inc
mov
sub
xchg
push
add
jns
add
sub
xchg
pushf
scas
les
push
mov
jo
xor
out
mov
sti
sti
imul
data16
repnz
or
xchg
call
cld
frstor
call
jge
push
out
pop
pushf
aaa
mov
mul
xor
ss
push
jl
sub
ds
adc
adc
pop
inc
ret
inc
push
aaa
lahf
(bad)
and
push
in
mov
cmp
icebp
jge
pop
dec
jo
jnp
add
mov
cdq
cld
dec
jae
pop
sbb
into
mov
call
div
sbb
(bad)
push
daa
sahf
jae
cmovno
enter
sti
jbe
bound
mov
scas
pop
(bad)
mov
(bad)
cdq
call
push
jle
mov
pop
std
push
retf
dec
jp
out
xor
imul
aad
stc
hlt
idiv
cs
and
(bad)
sub
(bad)
adc
fscale
retf
pop
arpl
fcom
ss
lds
test
mov
mov
xchg
add
call
data16
mov
adc
mov
mov
sti
pop
and
mov
jmp
mov
pcmpeqw
mov
ret
cmps
mov
push
and
sar
fist
push
xor
push
lods
repnz
pop
cmp
mov
mov
hlt
xchg
ja
pusha
cli
xor
scas
lahf
sub
push
arpl
ja
jmp
fisub
int
ja
mov
jle
dec
xchg
dec
iret
mov
(bad)
out
push
es
int3
es
dec
stos
fwait
jae
xor
sub
loopne
xor
int3
cli
mov
fstp
inc
push
daa
pop
lods
lock
and
jbe
sbb
popf
mov
pop
js
mov
jo
jnp
mov
inc
inc
ret
iret
or
adc
sbb
pusha
push
jle
out
and
xor
pop
lock
mov
mov
std
mov
adc
repz
push
and
mov
pusha
out
xor
pop
inc
mov
sbb
fwait
jbe
out
ins
inc
out
and
std
fcomp
repz
in
jmp
pop
or
sub
dec
xor
mov
mov
fwait
mov
cmps
ret
(bad)
mov
std
xchg
cs
or
rcl
adc
mov
lods
into
hlt
sbb
push
adc
sub
fadd
mov
cmc
lods
cld
rol
jbe
push
or
out
sub
js
movs
pusha
push
sahf
inc
push
sbb
cmp
jo
add
lock
rol
add
cmp
pop
sbb
stos
lds
sbb
repz
add
(bad)
xlat
icebp
jnp
aad
and
xor
pushf
test
(bad)
fadd
pushf
cmp
jo
mov
jne
pop
cmp
sbb
out
popf
sbb
call
sub
es
stos
cmp
jmp
and
xlat
cmp
fild
jb
test
mov
loope
fnstcw
outs
fucomi
pop
jbe
and
stc
lds
inc
adc
fadd
daa
cmc
or
jnp
mov
repz
hlt
jne
popf
xchg
fstp
pop
scas
mov
and
pcmpeqb
mov
xchg
or
test
lar
mov
inc
push
scas
xchg
jg
dec
pop
nop
(bad)
push
pop
movs
(bad)
jecxz
je
sub
loopne
mov
scas
retf
cmp
add
jge
call
dec
popf
inc
shl
xor
adc
push
mov
mov
cli
and
lods
sti
xchg
jg
ins
cmp
add
and
loope
loopne
aas
inc
mov
mul
fstp
test
jbe
movs
sub
outs
dec
pop
and
movs
mov
lgs
or
sti
mov
in
mov
and
out
and
jg
adc
movs
shl
xlat
xchg
dec
dec
aad
js
mov
pop
sub
aas
iret
sbb
retf
mov
mov
out
inc
dec
push
pop
outs
mov
imul
(bad)
pop
stc
pusha
test
fisub
add
and
xor
jbe
mov
xor
fisub
xor
cmp
fldcw
or
out
imul
fmulp
dec
(bad)
xchg
sub
retf
mov
jnp
adc
sbb
jbe
lock
fxch
pop
mov
addr16
pop
std
push
jge
jo
sbb
xor
cmps
adc
das
pusha
mov
out
jnp
cmp
cwde
xor
mov
cwde
adc
lods
cmp
dec
or
ror
loopne
xor
cmp
mov
sbb
mov
adc
xor
fadd
inc
pushf
mov
mov
ret
jl
xchg
les
enter
dec
test
stos
cmc
js
out
outs
mov
sar
push
icebp
cmp
xchg
xchg
test
inc
fwait
push
cmp
xor
test
iret
mov
jno
(bad)
movs
into
push
mov
xor
mov
into
fwait
aas
icebp
popa
nop
cmps
mov
jg
js
jnp
cmps
fst
les
xchg
cmps
adc
xchg
or
jnp
std
icebp
xor
scas
aad
daa
xor
das
idiv
cmp
loop
addr16
jp
pop
xor
outs
(bad)
imul
outs
pop
jl
rcl
loope
je
cmp
dec
push
ja
cmps
push
inc
jg
push
leave
cmp
int
jmp
bound
loope
inc
je
push
js
cmp
sub
push
push
fild
stos
fistp
cmps
push
sub
jecxz
dec
std
add
rcl
pop
mov
push
fst
pop
call
inc
xchg
jge
test
and
push
in
jmp
cli
lods
jne
fidiv
retf
mov
xchg
mov
test
les
xchg
jae
jne
stc
or
sbb
mov
das
jmp
xchg
test
jmp
dec
shr
cdq
pushf
(bad)
out
jmp
fcom
pop
xchg
inc
mov
fidiv
xor
bound
int3
jmp
jmp
loop
jl
jns
jns
cmc
adc
jbe
sbb
add
arpl
cdq
aas
inc
inc
or
test
xchg
pop
retf
lods
fsubr
clc
push
adc
daa
mov
ins
pop
sbb
lea
dec
imul
push
clc
lods
xor
sub
scas
cmp
popa
dec
dec
add
or
fsubr
test
movs
addr16
cld
sbb
sar
add
add
xchg
addr16
and
movs
sub
sub
mov
movs
xchg
xchg
stc
aad
jecxz
add
sub
ret
dec
adc
push
es
stc
inc
cdq
or
jmp
add
les
add
aad
mov
mov
sub
outs
inc
push
ins
inc
inc
ds
(bad)
in
icebp
pop
sbb
mov
in
in
adc
out
je
sbb
push
sbb
xor
mov
(bad)
in
push
cdq
shl
mov
test
adc
cmp
cmp
cmp
dec
mov
jecxz
cmp
jl
fbld
cmp
lods
lods
dec
xchg
add
pop
mov
cmp
pop
add
inc
sbb
mov
lahf
(bad)
pop
int3
fs
mov
and
pop
adc
fimul
or
sbb
int
js
imul
std
inc
or
aad
aas
mov
push
popa
in
test
inc
jp
call
cmps
sbb
in
retf
jmp
add
scas
in
stos
inc
mov
out
(bad)
rcl
cs
neg
cdq
(bad)
jae
cmp
add
pop
repz
sub
repz
int3
pop
out
retf
sti
leave
popf
cmc
jmp
add
cmp
sub
jmp
std
mov
call
movs
pop
lock
push
sub
add
cwde
lods
xchg
xchg
push
cs
aas
cmp
pop
xchg
inc
push
in
in
mov
pop
mov
xor
push
ret
jmp
jns
pop
shl
jecxz
mov
ja
sub
out
mov
push
push
shr
sbb
push
xor
mov
cdq
sbb
dec
jge
xor
push
fdivr
xor
cmp
dec
inc
xchg
cmp
arpl
lods
or
add
outs
xor
pushf
cs
fwait
or
stc
fmul
xor
or
test
add
sub
repz
fadd
sub
jo
cmp
(bad)
imul
push
and
xchg
into
cmps
xor
(bad)
fld
call
mov
test
sub
imul
pop
fwait
imul
jno
dec
jle
mov
mov
cmps
cmp
out
dec
jbe
add
jne
dec
aad
daa
imul
dec
sti
rcr
ds
cmps
sub
sub
xor
addr16
and
sbb
push
and
jns
sbb
jmp
popa
mov
jns
dec
mov
jl
push
jge
test
cmp
sbb
in
sub
lock
push
and
hlt
sub
inc
retf
scas
jp
das
push
xor
data16
scas
push
push
and
or
jae
scas
not
jo
and
jmp
cmps
dec
pop
cwde
jno
call
cmp
aas
or
xchg
jp
add
adc
cmp
sub
jo
(bad)
stos
jmp
daa
stos
rol
sub
lea
sub
mov
scas
ret
mov
xchg
fdivr
xchg
stos
inc
jno
push
call
sbb
jbe
fwait
in
mov
aad
js
sub
push
ja
(bad)
int
push
inc
lods
cmp
inc
test
jg
pop
enter
sbb
sub
or
xor
nop
retf
and
popa
mov
xchg
jno
out
adc
pop
lods
mov
and
daa
aas
mov
rol
jle
mov
mov
mov
test
mov
jnp
or
fst
in
shl
push
sbb
daa
in
sahf
and
pop
shl
retf
jecxz
push
jb
jns
cmp
jmp
mov
lds
inc
int3
dec
push
adc
js
(bad)
push
int3
(bad)
push
jmp
mov
call
jg
xchg
sahf
out
popf
nop
jbe
pop
mov
xor
shl
pop
cwde
or
(bad)
lea
ins
jmp
inc
iret
(bad)
outs
rcl
clc
mov
mov
call
inc
mov
gs
mov
xchg
cmp
pop
jns
div
nop
(bad)
jl
int
mov
aam
fild
pop
mov
test
adc
ins
xor
add
add
add
cld
xor
hlt
pop
mov
mov
popa
mov
ds
ret
in
and
mov
cs
fldcw
das
cld
pop
out
loope
mov
dec
jno
dec
leave
xor
inc
dec
pop
(bad)
das
lea
jmp
mov
fadd
mov
std
mov
stos
hlt
mov
(bad)
mov
mov
(bad)
push
sub
ins
fistp
stc
push
mov
push
dec
loop
and
mov
dec
push
or
out
pop
adc
sbb
call
jl
repz
dec
aaa
push
clc
sti
jns
sbb
inc
fcmovb
inc
sub
pop
xor
icebp
pop
clc
mul
cmc
sbb
ja
daa
cwde
mov
lea
cwde
inc
inc
inc
xchg
outs
mov
daa
mov
mov
push
dec
or
dec
sbb
and
sbb
mov
mov
push
(bad)
or
jg
adc
and
adc
mov
adc
jmp
lahf
adc
push
adc
stc
mov
pop
outs
cmp
cmp
adc
jmp
mov
scas
mov
mov
jnp
cmp
xor
and
pop
fwait
xor
and
sub
not
cmp
mov
int
setp
jecxz
loope
and
sbb
fidivr
ja
push
adc
mov
dec
sti
dec
sub
xchg
adc
jp
in
push
and
mov
mov
(bad)
je
cmp
mov
jg
mov
jns
fild
enter
pop
push
mov
imul
test
stos
inc
and
rol
jns
ds
neg
inc
fld
ja
mov
fistp
or
ret
xchg
fwait
jmp
and
sbb
adc
jnp
fsubrp
xor
fcmovne
jl
addr16
dec
scas
scas
(bad)
movs
imul
sub
mov
jae
push
fsubp
std
xchg
sub
sub
inc
dec
in
mov
cli
push
sbb
mov
add
sbb
xchg
hlt
xchg
jp
push
fsubr
stos
pop
repnz
loopne
call
(bad)
pop
movs
xor
in
into
retf
addr16
lahf
mov
xchg
gs
imul
adc
mov
stc
repnz
popa
mov
pusha
mov
repz
mov
jb
daa
xor
outs
test
inc
pop
daa
ins
inc
cmc
bnd
popf
dec
lea
mov
daa
xlat
pop
or
sahf
dec
out
or
shr
(bad)
cld
outs
lock
jg
ret
int3
adc
mul
ja
xchg
pushf
sub
mov
test
(bad)
cmp
cld
fsub
xchg
shl
rol
mov
pop
push
fistp
fnstcw
nop
in
in
or
push
sub
xor
mov
add
sbb
ja
pop
add
inc
jg
cwde
or
test
sub
add
adc
xlat
retf
sub
sti
add
push
add
or
mov
mov
or
mov
in
cmc
dec
adc
xor
mov
push
xor
loope
sbb
mov
outs
test
mov
xor
xchg
fwait
stos
inc
(bad)
sub
(bad)
cmp
jmp
jmp
add
inc
aad
rol
pop
dec
fstp
jmp
lea
or
jg
push
dec
cmp
rdtsc
pop
inc
std
push
sub
repz
jle
sub
out
sub
sahf
sub
xchg
dec
push
cmp
rol
sbb
sub
cli
adc
mov
xor
mov
cmc
aam
jne
inc
imul
push
inc
pop
push
sahf
sub
popf
neg
imul
icebp
mov
cmp
cmp
(bad)
mov
and
out
cmp
movs
je
cmps
shl
dec
or
in
mov
aaa
mov
leave
ds
lea
das
or
loope
dec
xor
xor
lock
xor
shl
std
pop
cld
adc
pop
push
mov
push
adc
cmc
pop
jo
out
or
cmp
(bad)
out
fisub
outs
aam
xchg
stc
ja
retf
out
cmp
push
push
xor
dec
jle
cmp
mov
mov
icebp
cmp
jl
xor
es
daa
jne
mov
pusha
adc
aad
or
xor
cdq
dec
iret
(bad)
clc
inc
popa
mov
gs
cmps
adc
mov
push
outs
mov
pop
ret
into
jo
xor
in
sbb
imul
sub
ret
jmp
sbb
adc
or
inc
cwde
scas
rcl
jmp
out
xchg
and
and
rcl
jmp
scas
clc
cmp
xchg
cdq
ds
mov
cmp
add
pop
sbb
sbb
push
icebp
sahf
cmp
inc
test
jp
in
push
(bad)
not
adc
shr
jmp
sbb
cmp
cmp
fs
shl
call
lds
or
loopne
or
xor
(bad)
leave
mov
xchg
mov
js
arpl
add
cmp
js
popf
aas
lds
mov
jge
sbb
int
and
mov
adc
or
mov
xchg
mov
js
loop
movs
mov
pop
js
data16
push
shl
pop
cwde
or
xchg
push
out
mov
pop
sbb
jmp
lock
mov
lea
mov
hlt
retf
add
add
cmps
imul
sbb
sbb
sub
and
in
in
add
js
add
loop
stos
mov
lds
mov
xor
inc
add
xor
imul
mov
xchg
stc
push
inc
loope
sbb
mov
xor
std
fwait
addr16
pusha
sbb
push
push
and
pop
loop
ret
lea
(bad)
aam
cmp
sbb
adc
lods
add
cmp
adc
loopne
cmp
out
mov
push
jbe
dec
jae
mov
test
pop
mov
shr
std
mov
jecxz
jne
xchg
shl
(bad)
pop
mov
xchg
xchg
adc
retf
mov
nop
adc
icebp
jmp
pop
sub
mov
sbb
jb
mov
mov
xor
loope
movs
sub
xchg
invd
scas
arpl
jl
stos
inc
in
into
xchg
adc
lds
das
dec
sbb
rol
cli
mov
(bad)
mov
imul
les
(bad)
push
fistp
jge
xchg
addr16
push
and
data16
mov
cmp
jns
call
add
jno
mov
int
xor
scas
sub
cdq
adc
or
in
and
push
(bad)
and
cmp
jb
je
cs
call
lea
dec
xor
out
pop
dec
fcom
cmps
enter
and
xor
cli
inc
cmc
ds
mov
mov
int
mov
std
mul
dec
mov
ss
fnstcw
push
aaa
xchg
(bad)
fisttp
fld
in
arpl
lock
mov
or
(bad)
pop
sub
jge
bound
push
fild
hlt
(bad)
and
repnz
jns
daa
mov
push
and
cs
daa
nop
ins
cs
repnz
xchg
out
cmps
xor
stc
iret
mov
call
jle
xlat
cmp
adc
je
out
lahf
mov
in
push
cmp
in
arpl
inc
add
pop
mov
int3
cmp
xchg
and
push
push
pop
jge
movs
cmps
ds
ins
mov
or
div
iret
pop
bound
sti
cs
int3
cmp
lods
cmp
retf
jmp
sub
dec
pusha
bound
fcomp
fild
pop
xchg
xchg
inc
adc
pop
add
into
mov
mov
pop
aas
xchg
pusha
cwde
sahf
jae
or
sub
push
add
rol
cmp
push
cmp
shl
cwde
mov
popa
and
(bad)
push
stc
hlt
fisttp
lahf
ins
pop
loope
jo
mov
mov
mov
int3
cmp
pop
inc
xchg
and
cwde
mov
popa
test
jb
(bad)
mov
add
pop
mov
inc
std
cmp
es
push
cmp
test
(bad)
pop
dec
pop
iret
mov
sbb
rcl
out
test
and
xchg
sub
repnz
icebp
jg
xchg
dec
fldcw
xchg
jmp
inc
fucom
and
sbb
loopne
fs
cld
into
repz
pop
out
js
ja
fxch
and
xchg
mov
pop
out
xchg
dec
arpl
dec
sbb
xor
add
int
bound
(bad)
shl
mov
mov
sbb
add
pop
push
cmp
fild
aaa
gs
in
sub
sbb
adc
lahf
retf
push
adc
daa
pop
xchg
loope
xchg
pop
xor
(bad)
push
sbb
(bad)
dec
retf
add
mov
mov
in
ja
cmp
cwde
dec
stos
jmp
stos
mov
cs
cmps
cmp
push
add
pop
stc
mov
jb
mov
out
daa
adc
fistp
pop
fwait
jge
sub
adc
pop
ret
mov
loop
data16
out
test
int
adc
xchg
in
movs
push
mov
fisttp
test
cmp
or
push
jne
xchg
mov
loopne
or
fdiv
sub
stos
pop
movs
pop
pop
and
std
dec
xchg
fs
fsub
mov
pop
arpl
repnz
xchg
adc
jo
mov
imul
push
sti
sbb
push
jmp
push
or
mov
ja
lods
stos
aad
sbb
ds
and
(bad)
or
into
dec
aaa
push
test
imul
mov
pop
xchg
stos
and
outs
icebp
fistp
add
adc
adc
ja
lea
xchg
loopne
inc
iret
lods
cmc
and
sub
cmp
(bad)
das
lock
cmp
(bad)
cld
add
xchg
movs
cmp
inc
ins
push
repz
out
je
iret
pop
aaa
rol
loop
mov
lods
dec
cmp
data16
sub
pushf
xor
or
adc
(bad)
xchg
or
call
inc
div
clc
cmc
(bad)
mov
loop
rcl
pop
loop
xor
int3
hlt
loopne
pusha
jb
jmp
push
setg
inc
fdivr
retf
lods
cwde
std
addr16
xchg
mov
and
inc
push
push
xchg
ss
mov
call
mov
add
cmc
jmp
xor
lods
enter
inc
inc
jge
test
pop
adc
adc
or
push
pop
adc
xchg
mov
lahf
pop
xchg
cmp
neg
jne
xor
cld
mov
adc
or
adc
sub
aad
jb
xor
std
leave
outs
loope
sub
daa
dec
sub
xchg
add
inc
lock
pop
stos
jnp
dec
push
pop
aam
(bad)
add
mov
popf
mov
(bad)
pop
pop
std
mov
mov
cmps
mov
xchg
mov
mov
inc
dec
cli
mov
dec
dec
in
mov
add
ins
(bad)
mov
inc
jg
cli
sbb
retf
in
ret
fstp
push
add
out
es
xchg
mov
add
lds
cmp
leave
xchg
inc
dec
inc
inc
push
dec
add
pop
and
rol
out
sbb
xchg
mov
pop
jns
hlt
mov
gs
xchg
mov
scas
ins
xor
pop
jmp
xchg
popf
inc
pop
(bad)
and
jb
add
add
sub
imul
out
loopne
mov
mov
or
jmp
imul
xor
inc
nop
mov
les
push
or
pop
jns
jg
push
movs
cmp
js
mov
(bad)
cld
std
push
cvttps2pi
data16
lods
shr
sub
shl
xchg
in
out
shr
sbb
pop
jecxz
aas
repz
sub
push
push
or
sbb
loope
into
addr16
fadd
js
xchg
fdiv
aas
pop
lea
out
and
xchg
call
push
enter
mov
pop
repnz
adc
mov
clc
and
mov
bound
(bad)
into
cmp
pusha
(bad)
ins
movs
or
in
sub
sbb
dec
out
cmps
push
jl
punpcklwd
sti
and
test
enter
repz
and
push
jnp
and
pop
movs
sar
shl
sti
inc
sub
(bad)
sub
mov
mov
ret
jae
cmp
ret
jg
popf
cmp
cmp
icebp
xchg
arpl
addr16
shl
sahf
inc
lds
push
jo
pop
inc
push
std
mov
sar
in
mov
xchg
test
dec
sub
leave
add
fnstenv
retf
push
leave
dec
rcl
mov
xchg
addr16
cmp
sbb
sub
mov
je
not
jmp
xchg
push
push
cmp
(bad)
rcr
cmp
mov
loopne
movs
inc
shr
inc
jo
in
fisubr
xor
fiadd
(bad)
mov
fst
hlt
loopne
mov
loop
pop
sub
scas
sub
mov
push
xor
stos
(bad)
pop
sar
mov
dec
mov
fisttp
jmp
das
and
imul
repz
inc
add
pop
(bad)
cmp
scas
jnp
or
and
pop
cmp
rcl
in
loop
jnp
jmp
lods
pop
call
xor
loop
xor
clc
mov
adc
fs
repnz
mov
mov
and
or
or
cmps
dec
jge
repnz
ss
ds
add
mov
sahf
add
gs
cli
(bad)
sub
adc
mov
and
mov
hlt
call
rol
push
jge
mov
sbb
cmps
and
xor
inc
int3
lods
lea
push
push
loopne
clc
sub
cmp
(bad)
lock
ret
fsubp
jo
lahf
sbb
hlt
sar
mov
sub
lahf
lahf
shr
xchg
int
cmp
jecxz
mov
jmp
jl
jbe
popf
addr16
jge
call
adc
call
mov
leave
mov
add
(bad)
fmul
jb
add
sahf
cmps
inc
push
mov
inc
sti
cmps
repz
jbe
mov
fimul
(bad)
js
ret
pop
inc
jnp
mov
dec
or
(bad)
out
pop
stos
push
enter
loopne
mov
(bad)
jbe
loope
imul
jmp
mov
leave
fisttp
xlat
repz
adc
push
fwait
sbb
xchg
inc
in
sub
mov
pusha
jb
pop
lods
xchg
bound
push
mov
and
stos
outs
or
inc
xchg
out
aam
cmp
in
mov
out
push
mov
mov
arpl
rcl
(bad)
or
stos
xor
retf
add
imul
cmps
inc
fld
sbb
mov
ficom
push
cmp
in
iret
rcr
push
(bad)
in
ss
dec
mov
ins
xchg
std
in
add
inc
out
sub
mov
xchg
das
xor
add
or
sbb
xor
jb
div
sub
mov
xchg
clc
push
(bad)
push
arpl
out
cmp
lea
jmp
pop
adc
(bad)
and
emms
or
test
cmp
pop
test
adc
out
nop
sbb
jbe
cli
pushf
dec
sub
dec
mov
das
pop
sbb
enter
hlt
cmc
retf
loop
sar
ja
nop
push
loope
and
es
push
xchg
and
add
add
cmp
push
call
fwait
movs
mov
inc
mov
sbb
jne
mov
sub
jae
pop
fs
and
int3
jecxz
lds
pop
in
bound
jle
dec
dec
cmp
dec
jl
loopne
mov
mov
adc
pop
adc
out
mov
stos
jmp
out
loopne
pop
lods
sbb
loopne
mov
mov
int
ret
cmp
mov
push
mov
rcr
nop
mov
xlat
push
xchg
aam
pop
sbb
popa
push
bnd
push
aam
cmps
and
xchg
(bad)
xor
mov
xor
pop
sub
mov
and
mov
mov
aaa
shr
push
fild
mov
add
sbb
fs
cmps
xor
ja
icebp
push
mov
arpl
cld
xchg
add
jl
sub
(bad)
mov
sbb
jo
jecxz
cmps
ds
jl
test
push
xlat
or
or
inc
push
mov
scas
test
cmp
imul
fcom
mov
inc
fwait
lods
fbld
sub
in
inc
imul
adc
pop
sbb
mov
out
ret
push
sub
sahf
test
pop
data16
(bad)
call
lahf
aaa
pop
stos
adc
imul
cmp
(bad)
jmp
test
push
pop
out
dec
or
test
mov
sti
call
ins
mov
lds
jge
fisttp
or
mov
lahf
adc
mov
cmps
clc
jp
inc
fdivr
stos
fisubr
add
ins
dec
cmp
add
mov
pusha
or
pop
lods
xchg
les
shl
inc
es
dec
cmps
shr
rcl
aam
xchg
dec
dec
cmps
xor
push
mov
mov
sbb
ds
jl
jg
cmp
jnp
sub
mul
sti
fistp
not
or
rcl
cmps
add
mov
jge
adc
xchg
scas
inc
jno
fbstp
add
ja
stc
mov
xchg
stc
pop
mov
or
into
cmps
popa
push
push
ja
addr16
add
and
cwde
jnp
loope
loope
or
aaa
bswap
test
cmp
in
or
repz
xchg
and
pop
cmp
pusha
cmp
push
retf
into
push
retf
or
jl
cwde
xor
sahf
mov
and
pop
loop
inc
jno
fisubr
in
dec
les
repz
cmp
dec
hlt
jbe
xchg
fst
push
test
add
ins
ins
mov
lock
imul
cmc
call
fmul
cmp
or
xchg
fdivr
mov
pop
je
inc
xor
inc
ins
mov
int3
mov
das
(bad)
sbb
mov
daa
jmp
in
loop
mov
pop
fdivrp
mov
xchg
push
add
xchg
aas
test
adc
push
and
pop
dec
sub
ficomp
adc
(bad)
std
loop
jnp
arpl
inc
test
mov
adc
mov
xchg
add
push
push
fadd
aam
cmc
fcomip
pop
fld
aas
int
mov
dec
xchg
ja
mov
xor
lea
add
cmps
xchg
xlat
add
ret
dec
iret
mov
push
scas
cmp
or
les
dec
das
hlt
cmp
mov
push
jge
jae
or
xchg
shl
fnsave
pop
(bad)
pop
jge
div
pop
jp
jp
and
jg
(bad)
cdq
adc
ror
push
inc
sbb
push
ret
sub
push
dec
jecxz
push
out
xchg
push
and
jno
out
les
pop
or
cmp
leave
mov
div
pop
mov
sbb
adc
ds
out
dec
(bad)
mov
in
test
enter
sub
xor
xchg
lods
pop
fsubr
or
cmp
scas
movs
dec
pusha
pop
pop
pop
outs
sub
dec
pop
xchg
stos
rcl
jecxz
mov
(bad)
dec
mov
stos
outs
mov
cmps
shr
cmp
xchg
jmp
xlat
xor
xor
pop
or
cmp
retf
adc
iret
aaa
push
fs
test
mov
jns
inc
or
ins
dec
pop
or
es
jno
sbb
xor
or
jno
das
(bad)
ret
push
xor
(bad)
mov
mov
popf
test
sbb
aam
and
inc
pop
retf
pop
adc
push
mov
loope
xchg
lahf
ficom
dec
ret
sub
inc
push
push
cld
sar
add
jae
enter
sbb
mov
mov
mov
popf
fisttp
dec
iret
iret
fwait
je
pop
xor
pop
sbb
fdivr
das
mov
xchg
mov
out
(bad)
fld
cmc
nop
out
xchg
hlt
repnz
in
cmps
loope
shr
(bad)
leave
add
push
cli
jbe
or
inc
fisubr
sub
test
xor
imul
mov
es
mov
mov
stos
or
into
mov
add
dec
adc
cmp
loope
or
loop
cmp
push
ds
adc
int3
or
pop
aam
int
int
ds
mov
cmps
(bad)
cdq
and
xor
sub
pop
pop
icebp
xchg
jbe
into
add
sti
(bad)
and
mov
out
jg
push
push
aad
int3
and
sar
add
neg
stos
sbb
mov
mov
fwait
loope
rcl
xchg
and
xor
je
pop
scas
sub
loopne
pop
inc
xor
and
push
aad
das
pop
mov
cmp
and
dec
mov
jecxz
mov
xor
rcr
add
stos
test
icebp
dec
add
xor
stc
inc
invd
mov
sub
xor
arpl
std
in
jle
cs
jb
sti
clc
cmc
xchg
(bad)
push
inc
in
pop
enter
cdq
fst
mov
(bad)
call
mov
hlt
fisttp
pop
movs
dec
loopne
add
sub
imul
xchg
loope
into
or
or
imul
dec
pop
ins
(bad)
cmp
sahf
xlat
or
in
ins
sbb
fs
jnp
jns
jmp
mov
pop
in
lea
in
fstp
rcl
push
dec
popf
sbb
jp
pop
dec
sbb
add
lods
jp
xor
cmp
ins
or
lahf
hlt
cmp
adc
daa
and
test
xchg
out
cmp
not
cwde
cmps
push
xchg
mov
sti
stos
jle
sar
inc
call
test
jbe
stc
pop
xchg
pop
stos
inc
shl
cmp
push
gs
sub
cmps
jmp
cmps
xor
xchg
js
jle
repz
add
data16
les
add
gs
jp
int3
jno
adc
add
imul
jp
mov
sbb
jecxz
pop
mov
sub
imul
and
sub
into
stos
xor
push
adc
sub
mov
out
xor
cmc
js
fwait
mov
and
push
sbb
jmp
pop
cmp
jecxz
jnp
pop
xchg
test
pop
xchg
and
jne
cs
adc
and
dec
bound
outs
adc
cmp
jg
mov
in
rcr
sti
ret
and
scas
cmc
inc
mov
fmul
inc
sbb
or
xchg
jns
dec
scas
dec
lods
jecxz
sub
inc
pop
popf
pop
dec
imul
into
mov
mov
jle
jae
pop
adc
xchg
push
push
mov
push
loope
mov
push
adc
sbb
in
mov
sbb
test
mov
mov
mov
mov
dec
jg
retf
out
dec
and
arpl
pop
jns
(bad)
aaa
clc
loopne
sahf
pop
dec
pop
add
lods
and
mov
push
fmul
dec
ins
aas
rol
adc
in
sub
and
xchg
cmp
ds
xchg
aad
mov
adc
test
mov
sbb
pop
mov
call
cwde
stos
xchg
fnstcw
(bad)
aas
cmp
out
outs
in
pop
push
pop
cmp
jb
cmp
call
xchg
enter
or
stos
aaa
out
pop
(bad)
int
arpl
sti
(bad)
pusha
jbe
popa
pop
mov
ins
loope
push
sub
test
ss
mov
and
loop
dec
mov
mov
inc
mov
lock
jle
mov
call
adc
mov
pop
pop
inc
ds
or
and
cmp
imul
push
fstp
and
stos
jb
adc
mov
cmp
cmp
sbb
(bad)
data16
call
dec
call
push
shl
xchg
add
and
cld
inc
dec
xor
push
cld
aas
push
cmps
xor
sub
stos
ins
sti
add
imul
push
inc
sub
xchg
lods
mov
dec
sbb
mov
jle
cmp
(bad)
mov
mov
nop
test
or
lods
xchg
xlat
data16
and
out
icebp
lds
test
popa
(bad)
xor
js
dec
jmp
retf
jle
(bad)
cmp
sbb
or
(bad)
cmps
and
push
push
or
leave
int
fisub
pop
mov
mov
jbe
add
pop
pop
xor
ret
xor
xor
adc
stc
pop
mov
in
fimul
bound
dec
or
aas
cld
mov
ret
cmp
out
retf
mov
lods
dec
ss
nop
xchg
outs
ja
sar
mov
mov
push
call
scas
add
ins
or
xor
inc
repnz
mov
aaa
pop
jecxz
or
mov
sbb
ret
mov
out
inc
dec
sub
loopne
push
or
mov
cmps
xor
imul
ror
lahf
ins
js
sbb
fdivr
test
rcr
pop
cdq
push
mov
inc
aad
mov
(bad)
fild
ret
xchg
add
push
cs
mov
dec
(bad)
dec
(bad)
jg
mov
or
outs
add
add
in
dec
xor
scas
cmp
push
ins
dec
scas
jg
loope
pop
or
jecxz
add
mov
sub
sbb
xor
jae
pop
mov
cmp
imul
sub
clc
and
lods
or
test
jnp
mov
push
jle
scas
push
ret
inc
jno
add
push
cmps
rol
in
js
inc
test
sub
enter
ins
lahf
push
inc
and
mov
jge
push
mov
(bad)
pop
(bad)
ins
dec
pop
mov
inc
mov
jge
xchg
in
jae
sbb
rcpps
in
test
popf
push
push
push
loope
ret
sub
mov
ret
add
into
gs
dec
fcomp
int
imul
mov
push
pop
xchg
rol
cmp
inc
push
cmp
fidiv
into
pop
fldenv
fstp
pop
jle
(bad)
push
out
ins
(bad)
jge
inc
outs
adc
pusha
js
repnz
int3
push
jecxz
mov
pop
jno
cmps
sub
test
mov
test
push
les
lds
xchg
mov
dec
jg
repz
sbb
jne
ins
push
cld
sti
std
dec
pop
(bad)
cmp
xlat
push
movs
push
push
ret
xchg
jl
inc
or
push
pusha
jmp
or
std
xchg
sahf
mov
in
popa
stc
xchg
fwait
sub
add
in
mov
xchg
cs
cmps
mov
lods
inc
das
fsub
mov
and
jle
xchg
jge
inc
test
mov
jmp
xor
mov
ficom
imul
push
gs
push
aas
jns
mov
sub
mov
sub
retf
out
scas
in
popf
test
and
mov
adc
aad
mov
test
jecxz
or
and
mov
jne
pusha
leave
push
retf
nop
scas
into
push
xor
pop
fwait
adc
movs
je
(bad)
fisub
mov
repnz
sbb
adc
(bad)
popf
popf
push
pusha
add
(bad)
or
jb
add
test
adc
(bad)
pop
mov
ins
pop
jl
xchg
je
pushf
mov
(bad)
jbe
fidivr
retf
mov
or
jmp
int
push
adc
cld
pop
mov
adc
cs
movs
cli
repz
loop
sub
dec
aad
mov
jg
sti
jae
aas
mul
and
mov
(bad)
cmp
test
aas
stc
xor
jl
push
xor
ja
sbb
pop
cmp
jae
adc
icebp
clc
add
inc
mov
add
mov
pop
out
adc
popa
movs
loopne
cmp
or
push
jp
jo
in
or
xchg
loope
jnp
aas
sub
inc
lahf
push
test
stos
jnp
fidiv
cmps
mov
imul
test
mov
cs
in
mov
xor
inc
mov
xacquire
add
movs
sti
setl
pop
or
mov
test
jns
std
jb
inc
mov
movs
clc
mov
or
xchg
imul
mov
sub
push
shl
cmc
add
adc
in
cmp
adc
pushf
cmp
dec
inc
mov
pop
xor
mov
mov
int3
mov
fdivr
jge
or
xchg
aad
aaa
jl
mov
cmp
fcomp
cmps
lods
dec
je
and
fadd
pop
addr16
cdq
lea
mov
lods
push
mov
js
pop
hlt
inc
jne
ins
(bad)
repnz
imul
sar
cmps
(bad)
shl
push
inc
aam
jle
mov
sbb
stos
imul
adc
mov
pusha
mov
out
mov
sbb
pop
or
or
fwait
mov
pop
(bad)
mov
inc
inc
xchg
xor
imul
stc
pop
mov
jp
push
cmps
inc
outs
dec
mov
jmp
ror
mov
sti
popf
and
(bad)
cdq
and
ins
inc
cmp
sub
out
pop
sbb
aas
pop
push
cmp
popa
leave
push
in
ins
jmp
inc
sbb
data16
sub
ins
xor
fstp
stc
das
push
add
xchg
shr
mov
data16
stos
dec
and
call
inc
iret
je
fucomi
fldcw
or
or
ror
loope
sub
jmp
stos
mov
mov
xor
mov
mov
dec
push
imul
xlat
dec
inc
dec
adc
fnstcw
cmps
out
ins
push
ss
fdivr
ret
sbb
add
or
and
mov
push
sahf
cdq
xchg
mov
adc
cmp
xor
popf
loope
sub
sbb
inc
lsl
scas
sbb
and
or
dec
mov
sahf
sbb
fmul
sub
push
jle
pop
fs
fcomp
mov
mov
jecxz
add
adc
lods
or
xchg
or
mov
cmc
repnz
int3
std
popf
cld
loopne
xchg
jnp
int
xor
sahf
mov
and
adc
xor
ret
movs
gs
popf
xchg
add
sar
in
mov
adc
mov
enter
fmul
mov
pusha
sub
push
xchg
es
nop
add
dec
ror
xchg
test
push
imul
jae
lds
nop
cli
or
jo
clc
imul
push
lock
xchg
or
ror
add
push
and
cmp
stc
xchg
mov
(bad)
nop
and
inc
xchg
fwait
adc
xor
rcr
push
push
addr16
lahf
out
(bad)
pop
int
add
stos
cmp
add
dec
loope
jmp
shl
sbb
jle
push
lahf
and
pop
into
or
or
xlat
xchg
fadd
inc
pop
sub
out
fild
pop
inc
pop
pop
pop
mov
ins
jno
int
out
mov
and
dec
leave
inc
shl
in
mov
int
mov
lea
sub
sbb
jecxz
jae
sar
pop
(bad)
cld
scas
cmp
jo
xor
and
xchg
xchg
das
mov
mov
icebp
sbb
push
(bad)
jmp
cmps
pop
push
div
outs
jnp
enter
in
pusha
sar
in
mov
mov
aam
popf
mov
imul
ins
push
or
or
xor
jne
jnp
jge
add
(bad)
out
inc
add
mov
mov
xchg
adc
jmp
jmp
clc
sbb
bound
fdiv
push
setne
stos
outs
out
mov
inc
dec
test
sar
sub
jae
mov
test
adc
sbb
fwait
dec
pop
imul
mov
sbb
jne
ins
ja
fdivr
das
adc
pushf
push
dec
rol
mov
and
hlt
push
test
xchg
jp
or
das
and
ja
bound
xor
fs
cdq
ss
int
gs
adc
not
add
or
fs
ins
adc
adc
cwde
mov
fscale
data16
inc
push
leave
cmp
inc
push
push
fdiv
xor
js
mov
imul
mov
call
sub
push
fldcw
push
pop
ss
or
shl
pop
movs
mov
test
push
std
iret
std
ret
jae
adc
dec
add
sahf
xchg
xchg
dec
mov
and
lods
jp
js
imul
adc
mov
push
ror
push
aad
sub
rcr
js
pop
fistp
mov
sbb
or
pop
jmp
out
mov
aas
adc
fnstcw
call
shr
stc
rol
fs
xor
loope
std
xchg
shl
or
mov
pop
xor
adc
or
in
test
xchg
pop
js
push
lahf
call
sub
test
cmp
out
icebp
aam
dec
pushf
mov
mov
push
push
lods
mov
int
inc
cld
clc
inc
out
push
mov
fwait
fs
and
jmp
inc
shl
fild
mov
adc
sbb
jae
shr
xchg
push
cmp
add
jle
daa
(bad)
push
and
div
xor
mov
xadd
inc
pop
mov
mov
push
ds
mov
repnz
mov
ficomp
sub
leave
jecxz
xor
sbb
mov
movs
mov
sti
mov
jno
hlt
pop
inc
test
in
pcmpgtw
jb
sub
cwde
inc
xor
add
into
clc
mov
xchg
sub
pop
int
xor
sub
icebp
ins
push
cmps
sub
inc
scas
hlt
or
sbb
cld
push
mov
fwait
(bad)
bound
inc
mov
icebp
cmps
pop
sub
cmp
pop
dec
rcl
lods
int
scas
cmp
xchg
mov
inc
stos
mov
and
out
mov
dec
dec
outs
sub
and
sahf
nop
out
popa
retf
pop
repnz
ins
inc
sub
inc
xchg
(bad)
stc
mov
jmp
cs
push
imul
mov
std
ins
inc
clc
sub
movs
icebp
and
jle
pushf
iret
mov
cmp
rcl
add
xor
push
dec
pusha
mov
xor
or
in
pop
add
pop
xor
sar
(bad)
xchg
cmp
sub
ins
pushf
imul
sub
xor
data16
mov
mov
mov
mov
fld
xchg
xor
pop
mov
dec
lea
inc
dec
mov
dec
mov
loopne
xor
loopne
sbb
inc
mov
cld
scas
dec
mov
imul
or
or
ret
and
xor
ja
cwde
ffree
or
scas
rcr
out
xor
mov
stos
pop
or
scas
jns
inc
aam
push
daa
inc
cli
test
push
cmp
in
hlt
out
add
rcl
retf
xchg
cmp
pop
mov
movs
pusha
outs
icebp
repnz
cwde
sbb
test
loopne
push
frstor
(bad)
lods
arpl
mov
int
popf
ds
add
mov
imul
pop
mov
sub
nop
push
dec
add
sbb
jp
neg
in
xchg
out
dec
fisub
mov
jno
ins
jl
push
cmc
movs
pusha
lods
mov
jg
sbb
aaa
and
mov
mov
sbb
sahf
push
aad
loop
sub
push
in
adc
xchg
mov
cmp
xchg
push
cdq
cmps
add
mov
sbb
fisub
pop
lahf
mov
pushf
(bad)
je
stc
fild
add
xchg
shl
xchg
push
loopne
mov
xor
sahf
mov
mov
cmp
frstor
retf
xlat
in
push
daa
xlat
mov
or
push
add
cmp
fidivr
fidiv
stos
add
adc
inc
fiadd
adc
mov
cmps
inc
movs
movs
inc
pop
ret
movs
clc
or
mov
push
fsub
adc
ins
test
ror
dec
and
and
mov
xchg
jmp
or
repz
cmp
sahf
xor
lods
pop
fstp
(bad)
into
jecxz
mov
out
dec
stc
sub
jmp
mov
jo
aas
add
sub
lahf
mov
push
xchg
jp
scas
ja
mov
adc
jns
xor
mov
mov
stos
stos
push
and
inc
xor
mov
adc
push
sbb
js
jecxz
jo
push
pop
ss
jle
pop
ret
push
adc
push
jmp
push
stc
add
sbb
dec
mov
push
jmp
iret
call
push
aas
cmp
es
inc
push
pop
mov
inc
and
sti
and
test
mov
push
movs
out
mov
retf
ins
push
sub
push
les
pop
inc
mov
gs
push
sar
xchg
test
bound
jae
mov
cld
fld
int
out
outs
or
clc
clc
jno
pushf
enter
ror
js
fisub
or
cmp
mov
sbb
cmp
outs
pop
xor
les
xchg
pop
jne
stos
dec
fld
mov
dec
retf
adc
pusha
sub
xchg
(bad)
mov
inc
pop
popf
sbb
ret
mov
jbe
inc
cld
iret
inc
and
dec
cmps
pop
sbb
mov
cmp
rcl
pop
sub
rcr
xor
pop
or
xor
xor
and
cdq
ret
cmps
xor
fist
lock
mov
mov
pop
pop
and
sub
cld
xchg
and
mov
rol
or
mov
jmp
push
and
xor
pop
mov
mov
mov
(bad)
cmp
movs
push
sbb
xlat
xchg
nop
and
or
cmp
fdivr
jae
xrelease
cmp
fistp
(bad)
scas
hlt
sub
leave
dec
jecxz
lea
mov
mov
lea
mov
test
push
enter
adc
xchg
in
pop
(bad)
pusha
enter
data16
ja
retf
pop
jle
add
scas
out
inc
iret
mov
mov
add
mov
fwait
pop
ret
mov
sti
sbb
cmc
loop
lods
sub
jb
adc
mov
pop
scas
call
cdq
cmps
mov
inc
aas
mov
test
xlat
imul
sub
ja
mov
loopne
inc
push
ja
add
test
jmp
popa
scas
mov
jecxz
popf
scas
pushf
fcom
and
(bad)
rcl
xchg
outs
aaa
mov
xchg
test
pop
adc
call
repnz
sub
retf
mov
push
push
call
jmp
add
mov
and
mov
or
(bad)
push
movs
jne
leave
rol
stos
or
or
je
dec
scas
xlat
cld
dec
xchg
or
loop
cmp
in
fidiv
popa
clc
stc
and
cmp
mov
mov
cmps
lds
jns
sub
scas
adc
cmps
repnz
sub
xchg
inc
mov
inc
fdiv
pop
in
cmps
cdq
icebp
repnz
jecxz
xor
mov
sub
mov
xchg
dec
(bad)
mov
pop
lds
enter
ja
xlat
xor
mov
mov
jl
pop
fyl2xp1
cmp
mov
xor
lods
pop
add
fstp
cwde
(bad)
xchg
inc
dec
fs
out
jle
aam
adc
jnp
sbb
test
lods
xchg
jne
add
adc
pop
xchg
inc
fist
cmp
mov
test
out
push
test
adc
aad
aam
add
sub
imul
pop
in
inc
xor
ins
imul
in
push
mov
inc
adc
enter
ret
rol
std
shl
arpl
lahf
in
mov
mov
(bad)
push
mov
cs
dec
push
(bad)
ret
scas
mov
add
or
outs
jo
movs
or
dec
pop
std
clc
rcl
mov
mov
test
loopne
je
dec
cmp
retf
push
xchg
xor
add
popf
jle
mov
scas
addr16
pop
mov
leave
mov
jmp
and
mov
xchg
test
sbb
mov
pop
push
mov
mov
clc
arpl
out
mov
stc
sub
cli
sub
mov
(bad)
ds
out
and
mov
vminsd
imul
cmp
or
icebp
mov
rol
or
mov
in
pop
retf
ror
pop
and
push
in
dec
mov
push
out
jle
mov
inc
cmp
stos
fisttp
sbb
adc
dec
pop
push
call
cs
dec
loop
cmp
pop
in
mov
dec
arpl
mov
pop
ret
jmp
nop
ins
fmulp
imul
stos
call
and
pop
test
scas
adc
std
sbb
test
jmp
xchg
outs
mov
fld
imul
shl
and
sub
cmp
cli
jle
jg
xor
mov
mov
aam
sub
sbb
add
push
xchg
sub
fcom
cvtdq2ps
out
and
es
retf
mov
retf
popa
pop
push
mov
jns
pop
jg
xor
rcr
inc
iret
xor
pop
jl
sar
inc
vcvtss2si
mov
fdivrp
cmps
pop
popf
add
add
and
jb
dec
xor
sub
retf
test
adc
test
inc
jg
int
add
fwait
pusha
fisttp
sar
mov
not
or
call
outs
mov
les
jmp
movs
leave
ins
daa
movs
retf
cwde
out
jnp
xor
sbb
sahf
xor
in
test
xchg
jo
enter
ret
hlt
jmp
pop
pop
out
cmp
jp
and
pushf
ss
sbb
add
jbe
add
add
lahf
int3
jno
movs
mov
jb
cwde
push
shl
lods
jg
rcl
into
mov
jl
and
sub
xor
mov
sbb
leave
mov
idiv
ret
inc
addr16
adc
mov
inc
sbb
imul
inc
stos
pop
jb
jb
dec
pop
jge
and
addr16
dec
xor
popa
mov
mov
fwait
jmp
jecxz
(bad)
mov
pop
mov
out
jmp
inc
sbb
idiv
loope
mov
jg
mov
hlt
cmps
imul
sub
loope
fnstenv
mov
(bad)
or
mov
(bad)
fdiv
je
xor
xchg
mov
mov
dec
dec
inc
stos
sub
das
loop
shr
sbb
mov
ss
adc
movs
(bad)
xlat
lock
xchg
or
bound
xor
add
dec
add
popa
out
aas
aaa
rol
add
mov
dec
test
cmp
fdiv
fs
sub
mov
sar
pop
shl
bound
add
ret
push
mov
fisub
cmps
scas
mov
mov
dec
push
xor
mov
pop
ret
sbb
cli
or
movs
dec
pop
nop
mov
push
adc
sub
in
loopne
cmps
ficomp
fist
jbe
mov
adc
jne
push
(bad)
push
fistp
mov
fcom
or
pop
repz
js
cmp
mov
mov
into
adc
xchg
pushf
push
add
adc
mov
test
mov
pop
adc
and
scas
sbb
and
add
dec
fbld
pop
xor
or
jno
cdq
imul
ret
push
sub
fwait
inc
in
sbb
mov
jne
cmp
push
xor
sub
dec
enter
sbb
leave
jp
enter
mov
mov
lds
loop
rcr
jl
or
mov
out
pop
pop
cmp
fld
push
add
leave
xor
inc
loope
sbb
retf
adc
xchg
adc
cmp
inc
mov
pop
jmp
mov
call
lea
jb
and
scas
sahf
dec
test
dec
and
jecxz
add
sub
xchg
pop
mov
mov
inc
setae
add
cmp
adc
popf
mov
mov
sub
push
pusha
ja
add
into
xlat
lds
popf
in
sub
loop
add
pop
xchg
xchg
and
mov
jnp
ret
adc
dec
mov
mov
fcom
inc
test
and
sbb
mov
lock
in
cdq
(bad)
(bad)
xor
cmps
adc
mov
call
dec
retf
leave
fadd
fistp
adc
push
cmp
ja
mul
adc
mov
lods
adc
aaa
leave
je
out
pop
sbb
jmp
push
imul
aas
shl
add
inc
xchg
ins
out
mov
or
aaa
jl
retf
mov
sbb
sub
jmp
add
pop
cmps
stc
cmps
fcom
mov
push
xor
pop
inc
cmp
mov
fs
add
mov
and
bsr
retf
loop
cmps
and
inc
test
(bad)
mov
es
out
xor
push
mov
push
sbb
and
das
sbb
push
xchg
outs
add
inc
add
std
pusha
mov
in
je
mov
adc
das
jg
and
sbb
fsubr
fsubr
mov
shl
int
sbb
xor
or
mov
dec
sub
lea
clc
ret
pusha
push
mov
cmp
xchg
jnp
jae
pusha
aaa
or
pop
inc
scas
rol
mov
fwait
or
and
jae
pop
popf
cmp
sub
cmp
push
addr16
xchg
cmp
and
mov
sbb
int3
push
mov
add
dec
lds
jp
push
fs
add
or
mov
in
mov
stos
xchg
or
and
push
test
int
pop
sub
add
lods
out
cld
out
mov
lods
dec
loop
(bad)
sbb
scas
adc
jae
add
mov
pop
icebp
scas
push
mov
jp
cld
push
outs
je
aad
stos
sub
or
push
push
aam
or
(bad)
aaa
inc
pop
adc
add
outs
mov
mov
movs
fdivr
js
mov
and
and
cdq
inc
mov
lea
scas
pop
sahf
sbb
stos
(bad)
out
push
shl
xchg
stos
(bad)
leave
add
ficom
imul
push
in
mov
pop
add
push
jl
mov
ins
hlt
lods
mov
or
sti
and
jle
(bad)
repnz
xchg
mov
ret
push
pop
or
xchg
outs
push
mov
outs
(bad)
jb
sti
int
iret
cmc
test
jmp
mov
pop
and
pop
mov
mov
cmp
sysret
mov
or
cmp
in
pop
ins
cmp
inc
ins
loopne
ins
lods
int3
test
ficom
test
dec
mov
das
dec
data16
sti
sub
jbe
fdivr
xor
mov
mov
pop
jecxz
sar
clc
mov
ficom
xor
leave
and
bound
cli
(bad)
jnp
sub
push
sub
lea
jg
hlt
jne
jge
xchg
les
hlt
into
dec
xor
mov
jns
jmp
xor
jmp
dec
dec
jge
out
and
jmp
jno
loope
stc
jge
(bad)
push
inc
in
sbb
jecxz
jb
adc
push
sbb
xor
jl
xlat
jns
aam
mov
repnz
ja
fdivr
fild
loope
add
(bad)
cld
adc
in
mov
xchg
and
sbb
rol
adc
js
inc
ss
loope
in
mov
das
pop
cld
ss
xor
adc
fwait
std
push
mov
dec
xor
or
dec
fs
(bad)
jmp
int
xchg
test
dec
stc
mov
retf
cmp
pop
inc
mov
fisttp
mov
scas
fucom
sbb
xor
xchg
adc
test
(bad)
dec
jb
(bad)
test
sub
je
jl
fisubr
scas
dec
dec
jns
mov
out
mov
pop
outs
push
pushf
cdq
jecxz
mov
cdq
mov
aad
mov
idiv
ss
aaa
pop
ss
push
jno
mov
cmp
add
inc
stc
inc
and
ret
out
pop
ins
mov
shr
sbb
inc
dec
push
out
sub
mov
aas
pop
push
add
mov
mov
xchg
sub
push
adc
std
pop
call
dec
movs
cmc
cmp
iret
dec
pop
icebp
shr
retf
xchg
in
mov
call
xchg
jmp
mov
mov
aam
cmp
es
jno
iret
ret
inc
jnp
jae
or
mov
adc
dec
inc
les
dec
mov
mov
cld
aas
movs
inc
ret
sbb
mov
ins
(bad)
cs
nop
pop
pop
mov
mov
dec
adc
(bad)
int3
mov
cld
pop
pop
push
pop
fild
or
call
add
cmc
xor
movs
jmp
and
loopne
inc
jae
aas
gs
ja
add
xchg
aad
test
loop
xor
add
mov
leave
les
sub
in
stos
stc
xor
imul
pop
pop
jae
bound
mov
dec
xor
mov
cmps
aaa
pop
not
xor
pop
imul
xchg
adc
popf
jo
xchg
movs
cmp
xor
sbb
(bad)
and
fstp
jns
shl
jl
mov
jg
rcl
push
fld
icebp
sbb
outs
adc
shl
sbb
fcomp
push
jmp
sub
pop
fldenv
jl
jb
dec
and
jmp
inc
(bad)
push
fnstcw
es
adc
mov
xchg
sub
xor
or
or
popa
es
mov
inc
add
(bad)
sub
sub
hlt
mov
sub
ins
xor
xchg
rcl
retf
repnz
cmp
jp
ds
stos
pop
push
loop
or
int3
mov
push
push
icebp
out
pop
cli
fnstenv
mov
inc
out
mov
pop
sbb
adc
in
cmp
xlat
test
fmul
jge
icebp
push
pop
push
mov
test
xor
fadd
(bad)
sbb
xor
adc
push
mov
jae
mov
xor
(bad)
ficom
fiadd
adc
and
movs
pop
dec
jb
pop
and
xchg
dec
pop
sbb
add
stos
inc
xlat
push
dec
push
scas
test
add
into
adc
ror
nop
sub
pop
loop
adc
shl
push
mov
je
fnstsw
sub
mov
sar
xor
cwd
fdiv
inc
jecxz
test
stc
js
inc
js
call
outs
mov
mov
add
jle
scas
sbb
scas
js
mov
cmp
ins
and
jns
jns
std
sbb
jbe
cmps
daa
div
sbb
imul
mov
(bad)
(bad)
jbe
add
retf
jmp
mov
outs
or
pop
js
fsub
mov
sahf
xlat
mov
push
test
sbb
xchg
or
xor
in
dec
push
cdq
aam
js
push
xchg
imul
and
cld
popa
retf
sbb
mov
jmp
bound
lock
mov
fwait
ins
imul
bound
jmp
jo
sbb
sub
pop
sub
cwde
push
mov
imul
dec
leave
cdq
sbb
clc
loop
stc
(bad)
in
and
adc
xchg
sbb
xlat
add
mov
retf
push
adc
jbe
test
dec
sub
fmul
xor
jg
cmpxchg
mov
(bad)
sub
loopne
jo
sub
js
push
jb
cwde
mov
popa
pushf
jle
std
or
xchg
adc
popa
shl
aad
iret
in
jmp
inc
loopne
movs
repnz
mov
aas
mov
mov
enter
jle
inc
enter
data16
ret
loopne
mov
lods
cdq
enter
ds
mov
mov
pop
xchg
in
inc
(bad)
mov
int
repnz
mov
mov
mov
mov
mov
dec
fwait
inc
ins
xchg
dec
out
lods
mov
push
jne
das
mov
(bad)
movs
dec
add
pop
ficom
adc
cmp
inc
sar
aas
jno
movs
push
mov
cdq
shl
shl
inc
sbb
popf
pop
pop
test
jne
in
pop
push
xor
push
(bad)
sbb
pushf
dec
xor
int3
cmp
ins
push
pop
xchg
pop
inc
sbb
int
gs
sub
xchg
cmp
xor
sub
mov
dec
mov
xchg
imul
or
cli
sbb
cmp
cmp
xor
test
sbb
(bad)
pop
popf
mov
lds
push
push
push
inc
das
mov
xchg
jecxz
in
push
retf
imul
mov
xor
(bad)
bnd
rol
pop
cs
add
mov
shr
push
push
mov
mov
jmp
xor
std
jecxz
aam
xchg
push
adc
push
sbb
push
js
push
pop
sub
mov
(bad)
fisubr
lds
or
or
arpl
mov
scas
fld
xchg
inc
or
push
lea
and
pop
push
ret
sub
jle
ret
mov
shl
cmp
ins
cwde
sub
pop
test
int3
inc
mov
sub
aaa
jle
gs
xchg
fiadd
sbb
(bad)
fcom
jecxz
dec
xchg
les
push
or
sbb
adc
test
jbe
je
and
sub
shl
hlt
ret
sub
adc
jp
fcom
test
jmp
sbb
cmp
(bad)
sbb
loope
cdq
aaa
jbe
ret
sub
rcr
test
pop
push
pop
scas
add
(bad)
imul
adc
rcl
into
test
cdq
sbb
xor
aad
int3
inc
push
jne
js
fcom
mov
jbe
lahf
pop
jbe
or
sahf
push
xchg
xchg
inc
jb
xlat
or
or
add
push
leave
cwde
pop
lds
mov
lock
and
xchg
sti
adc
add
dec
(bad)
adc
or
sub
fild
imul
ret
mov
movs
mov
imul
sub
sahf
out
inc
jge
jnp
xor
jg
fsubr
mov
adc
aas
rcl
xor
inc
lahf
repz
test
pushf
mov
push
push
rcr
mov
loopne
add
add
or
cmp
jle
mov
loopne
out
xor
in
jnp
mov
in
call
push
ret
jge
test
pop
adc
test
add
addr16
les
mov
cmp
sub
adc
int
iret
xchg
add
(bad)
out
inc
(bad)
mov
test
dec
sbb
dec
jmp
push
mov
add
cmp
add
cmp
mov
int
loope
push
xor
in
popa
mov
and
or
pop
dec
inc
jl
fxch
and
div
mov
daa
xor
rcr
mov
scas
push
call
stos
repnz
jmp
sbb
pop
mov
dec
ja
outs
xor
aas
add
lahf
sub
and
xchg
or
dec
inc
(bad)
xchg
pop
add
popa
push
sar
or
js
pop
adc
addr16
or
fs
or
clc
inc
mov
mov
xor
and
sbb
out
and
xor
test
sub
sti
scas
retf
mov
stc
out
dec
jmp
aas
xor
jmp
popf
push
inc
aaa
clc
(bad)
mov
cmc
leave
xchg
rol
call
(bad)
(bad)
mov
mov
ins
jl
rcr
cmp
mov
enter
lahf
and
dec
push
adc
and
mov
ins
jb
pop
daa
jg
adc
sahf
test
js
not
jmp
je
and
leave
inc
frstor
call
push
jl
es
sub
sbb
cmp
fst
cmp
pop
fidivr
xor
push
inc
adc
inc
jno
arpl
mov
cmp
movs
jnp
fbstp
jecxz
add
jne
loopne
xchg
push
and
push
cmp
sub
call
push
popf
xchg
mov
sub
and
mov
pop
xor
mov
jg
pop
fcmovb
iret
shl
xor
test
add
adc
cmp
(bad)
and
pop
adc
ret
mov
(bad)
call
push
pop
cmps
inc
push
pop
cmp
lods
mov
xor
cmp
jle
sbb
mov
int
xchg
lock
iret
outs
ins
sub
sbb
fld
adc
dec
mov
ret
addr16
js
pop
add
jns
pop
adc
push
push
pop
cmp
sub
gs
loopne
test
stos
or
fcomp
sbb
cmp
xor
mov
jo
pop
xor
jns
push
lahf
dec
cmps
mov
in
jmp
mov
sub
xor
inc
add
mov
add
(bad)
retf
mov
popf
pop
mov
stc
pop
cdq
lea
in
fistp
mov
inc
cmovne
add
div
call
push
mov
jl
mov
inc
adc
ret
out
pop
iret
call
les
adc
lock
jne
scas
out
ret
cmp
in
or
pusha
stos
ja
stos
(bad)
sbb
mov
pushf
lea
pop
xchg
adc
or
or
push
sti
xchg
cdq
mov
adc
pop
push
sahf
test
out
pop
fist
pop
cmp
ret
and
xor
cmp
xor
in
test
movs
and
into
cmp
inc
and
jmp
mov
jle
fcmovnbe
popa
xor
retf
(bad)
into
pop
and
mov
mov
push
and
daa
inc
jbe
dec
cmps
std
ja
mov
lds
and
and
pop
in
aad
lea
jle
repnz
mov
bound
int3
inc
(bad)
xlat
and
xor
mov
jmp
scas
lahf
stc
xor
and
pushf
push
cmp
data16
ffree
jbe
call
out
(bad)
neg
iret
sub
or
sahf
xchg
out
pop
dec
mov
push
test
add
xor
shl
add
lock
jne
(bad)
and
jno
pop
mov
and
fbld
jge
dec
ins
jno
sub
movs
jnp
scas
sub
sbb
sub
cmp
call
xor
and
mov
(bad)
xor
pop
test
lds
iret
or
(bad)
push
lods
(bad)
cld
(bad)
in
or
adc
jne
in
inc
fcomp
mov
lods
lods
pop
pop
and
sub
push
or
add
xor
xchg
inc
(bad)
test
adc
cli
jo
in
lods
cmps
iret
mov
inc
imul
mov
(bad)
scas
push
cli
out
jb
es
call
mov
or
cwde
add
shl
jmp
sbb
xor
scas
adc
xchg
outs
clc
sub
mov
jle
sub
and
sahf
(bad)
push
das
jns
xor
mov
cmps
icebp
adc
mov
fucomi
add
call
inc
jnp
sub
push
xor
fiadd
jo
popf
popf
dec
dec
jmp
mov
inc
ins
sbb
add
mov
daa
int3
out
sub
mov
lea
fidiv
or
ret
je
or
mov
sti
jge
sub
xor
or
not
xor
std
mov
cli
mov
call
jae
push
adc
mov
xor
out
mov
in
jnp
mov
mov
imul
inc
cmps
xchg
dec
cmp
out
cmp
ret
pop
inc
xchg
dec
sub
imul
nop
data16
scas
ror
mov
pop
stc
and
lods
ja
push
push
jns
pop
out
rcr
jmp
sub
shl
pop
ss
mov
xchg
add
mov
repz
add
xchg
mov
push
rcl
test
xchg
push
(bad)
fidivr
sahf
mov
xchg
sub
jle
and
ret
popa
adc
or
cmp
sbb
pop
test
stos
sbb
jae
cmps
cmp
push
jmp
daa
pop
retf
jge
fiadd
pop
xchg
mov
ins
pop
add
add
test
mov
inc
dec
sbb
mov
in
(bad)
data16
(bad)
push
movs
pop
pop
mov
arpl
dec
test
cdq
inc
out
out
dec
or
gs
das
mov
pushf
and
and
inc
pop
cld
xchg
mov
sti
lahf
cmp
push
(bad)
xor
mov
loopne
push
test
and
mov
in
mov
ins
leave
mov
jecxz
cmp
xchg
es
jle
out
push
aaa
pop
sbb
gs
loope
mov
gs
in
aad
les
mov
cmps
pop
cmp
rcl
jns
test
in
mov
or
pop
or
js
adc
pusha
repnz
cmp
hlt
ret
push
idiv
cmp
jnp
adc
or
pop
sub
pop
sbb
mov
push
jle
and
jp
jns
repnz
jmp
dec
add
adc
add
jns
gs
nop
adc
mov
cmp
mov
adc
aaa
jno
pop
cmc
cmc
push
into
dec
xchg
hlt
scas
nop
jno
push
pop
movs
scas
cli
xor
fwait
mov
inc
ds
ret
and
jg
jne
dec
mov
mov
push
push
mov
or
jno
jmp
popa
xchg
sti
outs
fst
cmps
hlt
loope
je
xchg
loope
jle
js
sbb
xor
or
ins
js
scas
mov
ins
adc
inc
dec
lods
shld
(bad)
cwde
shl
pop
adc
pop
xor
xchg
pop
cmps
mov
pop
add
sub
stc
mov
sbb
dec
scas
ja
imul
adc
cld
in
mov
(bad)
push
daa
pop
scas
and
adc
cwde
imul
xlat
jmp
mov
ret
sbb
xor
daa
mov
inc
icebp
sub
inc
std
jle
xor
adc
mov
pop
jp
push
ins
shl
add
or
jecxz
rcl
dec
pop
aas
or
lds
movs
sub
inc
xchg
retf
in
fldcw
nop
adc
retf
jmp
xor
add
pop
mov
pop
scas
mov
xor
xchg
ins
push
out
jnp
pop
pop
cmp
int3
inc
xor
loop
leave
cdq
jns
movs
nop
pop
ffree
push
sbb
mov
icebp
mov
arpl
fisttp
bound
adc
es
xlat
cmp
(bad)
pop
sbb
push
sbb
daa
xor
jmp
ror
fisubr
and
push
jge
pop
inc
xchg
(bad)
ficom
dec
fld
in
dec
into
test
ja
cmp
xchg
and
fidiv
xchg
sbb
into
xchg
mov
jmp
mov
push
add
push
in
arpl
dec
mov
loopne
ud0
push
cmps
adc
out
push
pop
fdiv
cmps
pop
aam
jo
mov
popf
fild
jae
adc
(bad)
jge
and
cli
and
into
cmps
call
into
jge
mov
test
test
xchg
jecxz
mov
sbb
sub
or
sub
add
in
push
push
push
jp
(bad)
das
jbe
call
out
xor
push
arpl
inc
test
xor
mov
cmp
(bad)
(bad)
hlt
ja
cmp
xor
mov
jne
xlat
aad
cmc
popf
mov
dec
dec
into
sar
xor
lock
shl
sbb
aaa
mov
les
clc
and
ror
sbb
jmp
mov
fadd
jo
add
jl
test
push
adc
pop
retf
jae
addr16
and
cmp
inc
es
lea
add
cvtdq2ps
dec
lahf
jbe
mov
lahf
test
pop
fisub
cld
push
xchg
test
(bad)
pop
js
fsub
loop
dec
mov
and
jnp
pinsrw
xchg
xor
outs
mov
jo
sub
(bad)
je
stos
jmp
pop
fisttp
(bad)
mov
inc
movs
push
sub
pop
push
mov
pop
movs
pop
(bad)
inc
cli
push
fisttp
inc
lods
jmp
jp
mov
dec
daa
sbb
(bad)
mov
loopne
dec
fwait
pop
jge
xchg
and
fld
sbb
jmp
mov
mov
fmul
shr
sbb
jb
(bad)
mov
mov
push
push
test
mov
stos
pop
aam
mov
call
inc
idiv
sub
push
sub
movs
out
test
adc
mov
add
mov
adc
mov
mov
stos
pop
in
retf
(bad)
cdq
mov
test
std
les
sbb
ret
push
or
mov
sub
in
xchg
push
cmp
test
fs
and
jmp
loope
cmp
stos
mov
lea
mov
test
mov
push
cmps
jo
not
dec
cmps
aad
jnp
popa
pusha
(bad)
jle
push
(bad)
sub
std
fs
popa
test
inc
outs
push
cdq
ficom
sqrtps
ret
mov
and
jmp
adc
dec
add
pusha
test
or
test
inc
aam
mov
fwait
mov
out
rcr
data16
or
inc
sub
ret
repnz
push
xor
sbb
adc
add
fisttp
xchg
movs
fldenv
repnz
movs
mov
jmp
mov
call
inc
imul
fst
mov
pop
stos
lahf
sbb
out
(bad)
jmp
fwait
sbb
not
sahf
inc
clc
xor
sbb
or
dec
mov
pop
add
sti
test
jmp
push
sub
inc
loopne
or
(bad)
hlt
jle
retf
mov
cmp
repz
push
push
jmp
mov
scas
call
aam
cmp
(bad)
repz
popf
arpl
adc
out
cmp
and
call
out
adc
ja
sbb
stc
test
mov
dec
aam
jl
inc
and
arpl
lods
xor
in
xchg
dec
jbe
or
inc
retf
pushf
gs
pop
stos
jg
sbb
retf
movs
mov
pop
ins
loop
and
ret
test
retf
add
push
xlat
iret
push
xor
ffreep
int3
stos
mov
mov
mov
jle
sbb
data16
cmp
addr16
mov
ins
rol
push
push
arpl
mov
test
pop
xor
mov
xchg
loopne
mov
popa
int3
je
sbb
icebp
loop
inc
cmp
jmp
jo
and
into
inc
or
dec
icebp
sbb
push
in
aad
cmp
and
pop
jle
xchg
sbb
xchg
cmp
xor
dec
adc
push
pop
fnstcw
dec
pop
sub
dec
js
jge
jecxz
cmp
or
mov
xor
xor
out
dec
jg
mov
pop
cli
retf
or
sbb
xchg
cld
sub
mov
into
push
push
out
jle
cwde
sub
gs
mov
xor
loopne
call
jo
pop
pop
cwde
adc
inc
push
mov
sub
sahf
ret
add
jmp
mov
stc
std
jmp
pushf
or
imul
mov
cmp
push
pop
mov
scas
dec
imul
(bad)
aad
mov
nop
xchg
lods
jle
xlat
retf
cmps
push
cmp
xor
cdq
ret
mov
std
mov
jnp
jnp
fistp
sub
aaa
ins
dec
outs
mov
or
jecxz
dec
jg
and
xor
ins
loop
dec
mov
sbb
mul
or
add
in
push
or
outs
ror
inc
mov
repz
add
mov
add
cmp
xchg
ror
inc
sbb
and
sub
imul
sbb
and
cli
xor
dec
int
popf
pop
cli
dec
ret
ins
xchg
cmp
inc
stos
out
sbb
sbb
and
mov
mov
adc
xchg
sti
pop
ror
loop
adc
sbb
mov
(bad)
adc
push
enter
and
pop
push
fsubr
lea
(bad)
adc
(bad)
xchg
scas
push
cmp
ret
dec
jg
clc
loopne
dec
mov
in
aam
or
clc
repnz
push
out
or
mov
sub
push
(bad)
jno
pop
mov
into
cmp
out
stos
xchg
rcr
adc
sub
mov
jo
das
xor
enter
inc
cwde
push
(bad)
icebp
icebp
repnz
loope
pop
pusha
add
stos
mov
jmp
call
gs
retf
pop
push
add
pop
cmp
nop
icebp
xchg
jns
aad
lds
mov
jnp
std
dec
mov
pop
cmp
xchg
fwait
pusha
ss
mov
sub
add
xchg
out
fdivrp
or
daa
out
sub
jnp
xchg
loopne
cmc
sti
dec
cwde
in
jg
or
retf
icebp
xor
pop
and
loop
lea
jp
imul
mov
cwde
pop
in
pop
ss
into
sbb
bswap
xor
scas
mov
mov
call
xor
fadd
add
mov
stos
mov
daa
and
repz
shl
add
rcr
js
push
mov
jmp
out
dec
pop
cmp
and
je
dec
shr
sti
aad
dec
xchg
movs
adc
sub
cdq
into
(bad)
sub
mov
cdq
aam
ja
jmp
pop
push
xlat
fiadd
ss
mov
sti
pop
gs
ficom
push
icebp
rcl
mov
in
pmullw
cmps
xor
imul
dec
add
or
xchg
add
jecxz
mov
mov
(bad)
adc
jg
sbb
mov
paddb
fisub
xchg
or
ret
call
push
xor
cmps
or
mov
cmps
push
mov
inc
sub
ja
ds
out
cld
lods
(bad)
jp
movs
mov
push
aam
push
jns
or
out
xor
push
jmp
jo
fist
push
cmps
rol
test
scas
xchg
mov
lods
cld
xor
lock
adc
icebp
mul
mov
mov
aaa
sbb
sbb
inc
mov
xchg
mov
call
inc
jnp
or
push
loope
add
push
lods
adc
mov
in
retf
(bad)
mov
enter
fwait
mov
pop
cmp
sbb
inc
ins
inc
aam
inc
jmp
and
cdq
pop
adc
repz
push
xchg
pusha
sbb
popf
test
xchg
das
sbb
add
inc
lods
sbb
lea
out
push
ret
imul
adc
mov
popf
loopne
cwde
push
enter
sub
(bad)
xlat
ins
or
outs
mov
in
adc
jg
xchg
scas
xor
add
popf
gs
add
daa
xchg
sub
dec
icebp
inc
aad
sub
jmp
cmp
mov
imul
add
xor
inc
pop
mov
lahf
inc
and
mov
icebp
(bad)
out
scas
daa
pop
clc
and
sbb
(bad)
dec
imul
jnp
retf
out
mov
dec
or
cmc
sub
daa
stos
or
xor
and
movs
fsub
popa
dec
jle
movs
adc
dec
fdivr
push
and
test
test
ins
es
sbb
ror
fwait
jecxz
push
fdiv
xor
arpl
lock
sbb
mov
test
add
jo
sbb
sbb
pop
jbe
inc
and
dec
or
hlt
cmc
mov
imul
mov
jae
lds
mov
push
ret
orps
leave
loop
ss
rcr
fbld
ds
mov
scas
fst
mov
jae
bound
push
ds
out
pusha
mov
cmc
js
add
cs
mov
sub
sub
jl
xor
or
fisubr
fcomp
outs
push
lods
xchg
xchg
inc
push
and
push
mov
ds
ret
test
mov
or
and
fisttp
inc
and
mov
and
mov
xor
sbb
setg
inc
in
mov
mov
add
loop
xchg
jp
aas
imul
sbb
lods
in
repz
rol
pop
daa
pop
xor
test
fwait
cmp
or
push
xor
pushw
add
pushf
fadd
adc
and
jne
mov
mov
jmp
js
and
xor
push
mov
and
cmp
lods
jge
cmp
out
xchg
add
ret
sub
les
add
xchg
jmp
fbstp
inc
xor
test
mov
or
mov
out
xor
pop
test
mov
jns
and
add
cs
enter
mov
mov
push
xor
(bad)
in
int
pop
push
les
xchg
or
idiv
in
ins
popf
jmp
popa
xchg
cmp
add
inc
mov
daa
std
xchg
call
lods
xor
push
jmp
cmps
imul
cmps
mov
mov
push
sti
rol
sub
sbb
sub
std
(bad)
mov
popf
cmp
adc
add
shr
sbb
dec
add
movs
xchg
mov
(bad)
arpl
xchg
mov
mov
out
jo
aam
push
stc
enter
test
lods
cdq
sbb
lods
lock
fimul
popa
adc
sub
js
mov
xchg
xor
cmps
mov
inc
mov
into
fucomp
sub
dec
(bad)
js
retf
adc
xor
xor
mov
sbb
ror
pop
mov
pop
inc
mov
mov
aas
ja
(bad)
ins
outs
nop
jmp
jae
popf
cwde
inc
jmp
pop
out
jbe
sbb
es
sbb
mov
sub
mov
in
movs
push
ins
xor
sbb
call
call
push
bound
(bad)
jae
(bad)
pop
test
cmp
jecxz
outs
inc
mov
inc
jl
xchg
add
pop
xchg
les
jne
ror
sbb
mov
js
push
push
ins
stc
rcr
lea
icebp
sub
push
pop
movs
je
mov
call
jno
fcmovnu
or
xchg
and
cmp
dec
push
or
jmp
xor
(bad)
out
mov
push
adc
in
push
neg
popf
adc
out
mov
or
mov
scas
and
or
push
or
cld
xchg
fst
iret
fnsave
(bad)
stos
mov
xchg
add
push
sahf
imul
loop
or
add
psubd
mov
ja
test
addr16
dec
fstp
fiadd
and
scas
pop
mov
imul
popa
arpl
pop
fldenv
add
xor
dec
rcl
mov
ja
clc
fstp
aam
and
and
loopne
pop
and
dec
jecxz
inc
jb
das
fiadd
(bad)
movs
ja
loop
add
rol
ds
aad
ins
sbb
xchg
xchg
adc
paddq
fbstp
cmps
test
ffree
enter
mov
mov
sub
push
pop
sbb
imul
inc
xchg
mov
xchg
and
aam
mov
lds
inc
dec
sbb
xchg
mov
pop
mov
iret
mov
push
mov
pop
lahf
sbb
fwait
cmp
les
pop
mov
cdq
xchg
sub
icebp
out
in
das
jge
fnstcw
dec
mov
mov
loop
test
jmp
and
xchg
or
sub
sub
es
int3
fild
pop
fbstp
and
(bad)
pusha
sbb
adc
xor
pop
fstp
jne
cmp
sbb
push
sbb
scas
xor
cmp
inc
and
loope
rcr
loopne
mov
jecxz
mov
cld
retf
push
ins
inc
hlt
jp
cmp
sbb
fimul
aas
std
or
push
pushf
add
mov
and
or
ret
mov
aas
push
push
mov
push
aam
fbld
repz
or
jmp
dec
inc
fimul
loop
add
sub
fwait
add
or
cmp
outs
call
or
dec
push
int3
jb
add
cmc
push
pop
mov
mov
outs
lea
sub
or
fwait
in
mov
mov
das
aam
test
pop
or
push
jno
cmp
and
ins
pop
int
mov
call
retf
das
jno
outs
ja
sbb
pusha
rol
jne
cmps
lea
lahf
gs
cmp
popf
loop
cmp
mov
jle
add
cwde
xor
push
(bad)
push
sub
jmp
jmp
sbb
and
cmp
or
mov
push
or
mov
ret
cdq
add
sbb
aam
imul
push
mov
xlat
mov
add
sbb
jae
mov
(bad)
adc
push
push
ds
cmp
ror
or
mov
push
jae
loop
and
mov
jns
gs
cs
pop
dec
loope
shr
test
test
rcl
fdivr
movs
inc
das
mov
cmp
cmp
fbstp
jecxz
add
les
ror
jno
sub
popf
push
(bad)
xor
dec
cmps
loopne
push
ins
sahf
cmps
xchg
mov
cdq
dec
loope
out
adc
xor
xchg
enter
test
(bad)
sub
repnz
push
mov
dec
xor
sbb
inc
mov
add
push
scas
in
adc
jle
adc
daa
fmul
jns
mov
leave
sub
cld
cli
pop
sub
mov
js
add
lds
push
pop
mov
mov
fldcw
adc
mov
add
adc
hlt
test
sub
and
fidivr
cmp
ret
adc
and
lds
mov
jae
frstor
cmp
mov
fcomp
inc
out
mov
xchg
fwait
and
jbe
cmp
(bad)
das
pop
fs
or
pop
test
movs
xchg
push
mov
xchg
mov
retf
fsub
mov
and
repnz
lock
inc
dec
and
mov
xchg
cmps
fs
dec
ins
jae
or
jge
mov
xor
cs
sub
fstp
movs
sbb
and
rcl
lods
xchg
mov
(bad)
push
pop
mov
les
imul
mov
sti
xor
pop
lock
push
pushf
out
popf
push
sahf
icebp
mov
push
test
adc
push
ins
xlat
cli
xchg
popf
inc
fld
test
cmp
(bad)
xchg
mov
adc
or
jecxz
call
xchg
fwait
ja
(bad)
xchg
cmp
(bad)
div
jl
std
iret
out
dec
pop
stos
in
mov
inc
push
mov
dec
xchg
inc
in
xor
jp
dec
pop
idiv
dec
cmps
(bad)
pop
pusha
mov
cwde
in
lahf
inc
and
xor
les
cs
div
pop
scas
sbb
pushf
enter
pop
out
or
push
or
push
shl
test
cmp
inc
fs
jmp
jmp
jae
xchg
mov
addr16
pop
test
movq
jbe
xor
movs
jecxz
dec
inc
call
ins
mov
in
sub
cmps
cmp
inc
push
mov
add
and
test
scas
cld
or
add
inc
mov
jne
sub
push
pop
js
cmp
inc
add
int3
cs
sbb
cld
repz
sbb
data16
fstp
clc
pop
jo
add
out
sbb
jae
dec
or
adc
pop
pop
or
(bad)
pop
(bad)
mov
out
sbb
cwde
daa
jmp
mov
pop
pop
jns
ins
inc
scas
pop
jnp
sub
adc
js
retf
cmp
xor
jge
jl
inc
adc
inc
fcom
xchg
add
stc
xchg
cmp
pop
pusha
movs
sahf
jnp
in
pop
mov
mov
push
inc
sub
sbb
sar
call
inc
mov
jle
add
fidiv
test
sbb
loop
ss
and
aad
test
jg
ss
and
push
into
sub
mov
test
jns
xchg
cli
aad
into
stc
(bad)
pop
xor
xor
inc
stc
or
inc
pop
mov
int
sti
inc
mov
into
jecxz
fldln2
imul
bound
popf
mov
int3
pop
add
dec
pop
jmp
sahf
adc
cli
push
mov
ins
enter
jg
aam
enter
pop
xor
add
rcl
jmp
sub
sub
js
jp
lea
pop
push
xlat
call
fsub
int
std
js
pop
jg
or
lods
into
aas
mov
ficom
jp
rcl
leave
mov
dec
dec
les
wbinvd
lods
call
pop
into
jns
push
dec
jg
add
mov
adc
ja
repnz
cmc
jns
popf
ret
into
add
push
fwait
adc
rcr
neg
jmp
sar
sbb
(bad)
pop
fdiv
inc
int3
push
mov
push
addr16
test
jns
pop
pop
mov
cmps
sub
push
enter
std
(bad)
leave
outs
push
xchg
cmp
xchg
leave
sbb
int3
xchg
out
sub
cs
fwait
pop
sbb
xchg
mov
mov
shl
cmp
or
mov
xchg
mov
fsub
mov
ins
jle
mov
aam
loopne
ss
mov
xor
repz
pop
sub
xor
dec
dec
sub
jmp
dec
ficom
sub
jns
add
jb
loopne
jbe
add
add
mov
xor
xor
cli
inc
add
cwde
fwait
jae
jge
push
and
cld
fcmovb
lods
fsubr
push
imul
out
loopne
fwait
sub
xor
mov
sub
cmps
jns
sbb
(bad)
popa
test
lahf
sti
ja
fs
lea
out
test
mov
mov
movs
dec
and
and
xchg
dec
or
adc
cmp
and
xor
hlt
sbb
(bad)
and
cmps
jmp
push
jp
sbb
cmp
push
icebp
jmp
dec
sub
or
dec
outs
jge
adc
xor
popf
out
pop
xchg
and
cmps
in
in
xchg
addr16
xor
jmp
je
push
jae
shl
dec
inc
jns
and
dec
mov
loope
cmps
lods
push
jmp
xchg
cmp
mov
fnclex
inc
shr
enter
ror
inc
test
sahf
push
adc
inc
xchg
into
mov
ret
jmp
jge
cmp
mov
or
(bad)
xchg
push
adc
int
ja
enter
xor
fadd
cmc
outs
bound
outs
push
mov
push
pop
shr
addr16
lea
rcl
lods
mov
pop
dec
sub
dec
xor
mov
xchg
test
sahf
add
loop
mov
sub
(bad)
pop
mov
loope
pop
push
mov
hlt
inc
and
adc
push
enter
addr16
je
mov
sahf
ds
imul
or
movs
es
mov
ror
dec
push
mov
popf
mov
mov
jns
push
out
cdq
jp
xor
aaa
mov
out
into
cmp
xchg
ror
mov
arpl
sar
mov
and
cmp
mov
push
imul
jecxz
pop
stc
rol
retf
cmp
adc
jno
xor
mov
xchg
(bad)
cmp
lods
jmp
cmp
mov
(bad)
mov
lock
xor
cli
or
xchg
int
xchg
mov
pop
mov
fs
xchg
mov
popf
mov
aas
push
in
or
xor
(bad)
fidivr
inc
aam
sub
cmp
jg
push
mov
xor
mov
push
adc
stos
push
cmp
std
stos
jb
pusha
xor
cmp
mov
cmp
xchg
inc
lea
ja
sbb
aam
fidiv
rol
cmc
sti
call
xchg
in
jecxz
xor
cmc
jge
dec
mov
stc
pop
add
loope
les
inc
mov
sbb
inc
cmc
adc
cmc
daa
or
loop
xor
bound
jne
ret
(bad)
bound
cmp
out
outs
jno
pop
ja
mov
shl
xor
repnz
ficom
xchg
loop
rol
cs
in
push
xor
int3
mov
pop
mov
sbb
mov
sub
inc
or
out
into
ret
arpl
popf
rcl
mov
xor
repnz
jbe
mov
cmovg
call
movs
fldln2
jb
cmp
ins
outs
fild
sti
mov
adc
add
aaa
gs
cmp
and
xor
push
or
jmp
ficom
rol
adc
into
rol
adc
fwait
pusha
xchg
rcl
arpl
aaa
out
mov
repz
cs
in
cmps
imul
jo
xor
push
sub
pop
mov
jge
jae
adc
(bad)
xor
push
neg
hlt
fst
(bad)
dec
mov
lods
stos
inc
lahf
push
mov
adc
add
jo
jns
mov
cmps
sahf
pop
jo
mov
das
push
jns
pop
inc
xor
xor
sahf
pop
ret
mov
js
xchg
(bad)
xchg
fidivr
dec
(bad)
dec
cmp
repz
jle
fstp
enter
dec
pushf
or
sbb
std
pop
jne
pop
cwde
bound
and
cmc
jg
cmp
push
cmp
pop
sbb
mov
int
int
sub
xchg
ret
and
jge
mov
push
pushf
movs
ds
push
lds
xchg
movs
arpl
sub
adc
push
push
fcmovnb
xchg
hlt
vsqrtss
push
in
jmp
sbb
rcl
popf
shl
jns
push
lahf
stos
sbb
jmp
loop
xlat
mov
push
dec
sbb
pop
sti
mov
inc
mov
inc
sub
jecxz
fcom
xchg
arpl
and
lock
add
push
nop
pop
stc
fild
xchg
sbb
pushf
sahf
or
dec
pop
add
sbb
inc
jp
sahf
sbb
push
push
fldenv
xchg
jmp
pop
cmps
pop
pop
dec
pop
sbb
gs
and
sub
pop
lods
sbb
pop
rol
mov
dec
hlt
add
xor
or
fdiv
loop
call
xor
xchg
ret
mov
jb
(bad)
(bad)
test
pop
enter
cld
cli
aad
push
(bad)
loope
cmp
and
lds
mov
out
neg
xor
fwait
inc
inc
push
lahf
popf
jno
pop
or
mov
push
pop
inc
lock
pusha
out
sbb
in
ins
mov
leave
out
dec
mov
rol
inc
mov
push
in
mov
sub
fs
mov
int3
imul
out
push
jae
gs
fcomp
test
add
pop
xor
xchg
jmp
scas
mov
icebp
jbe
in
dec
in
ds
push
fs
ficomp
shl
inc
movs
cld
icebp
pop
mov
pop
sbb
iret
xchg
xlat
retf
inc
push
out
jae
cmp
jo
cmp
and
bound
stos
(bad)
sbb
out
gs
stos
in
and
jne
and
scas
mov
push
loopne
imul
data16
movs
pop
cmp
mov
sub
inc
rol
adc
fwait
pop
sbb
cmp
ja
pop
mov
and
dec
rep
jbe
movs
mov
int
dec
jns
xchg
sub
cmp
out
pop
adc
xchg
adc
int3
or
lea
sti
adc
loopne
and
dec
jbe
les
xchg
xor
and
xchg
fld
dec
int
dec
jb
sbb
js
aad
push
or
dec
pop
aas
call
mov
or
in
pop
sub
inc
sbb
shl
adc
int3
cli
cld
and
out
cli
cld
imul
jne
test
fdivr
mov
bound
mov
and
sar
loope
add
sub
or
adc
fmul
dec
dec
repz
push
add
out
fs
repz
stos
ror
or
push
(bad)
xor
jmp
jle
adc
cmp
mov
add
sbb
mov
js
shl
out
push
mov
and
pushf
lods
aad
dec
fnstcw
imul
push
and
and
fwait
jmp
scas
and
xchg
inc
xchg
stos
cmp
xchg
rcr
xchg
(bad)
fnstenv
xchg
mov
pop
je
jbe
mov
stos
test
call
ret
scas
push
aad
sbb
pop
cli
inc
mov
sahf
jb
sbb
aam
dec
xchg
hlt
cmp
ss
and
cld
loope
xchg
(bad)
fcomip
(bad)
mov
mov
push
lods
js
out
xchg
fs
dec
sub
stos
add
push
jbe
inc
add
pop
mov
adc
sti
clc
xchg
mov
add
mov
and
int
push
stos
add
push
jl
or
daa
mov
cmc
pop
aaa
xchg
ins
es
dec
test
adc
pop
leave
cmp
loopne
pop
mov
and
sbb
ins
sub
popf
lds
mov
push
pop
sub
push
push
or
inc
addr16
out
mov
push
mov
(bad)
xchg
pop
cmp
in
mov
mov
add
sub
jge
repnz
ins
(bad)
cmps
dec
fdiv
in
in
cs
pop
(bad)
cmp
inc
and
loopne
jo
ret
cmovp
sbb
popa
inc
jl
jp
sub
fstp
das
bound
lock
inc
push
sar
or
les
mov
vmwrite
(bad)
mov
or
aad
popf
outs
pop
aas
fdecstp
mov
pop
pop
cmp
inc
mov
gs
mov
movs
pusha
xchg
ror
test
mov
xchg
inc
test
scas
cmc
movs
xchg
sub
sbb
hlt
pop
push
add
mov
cdq
ror
lock
xlat
pop
inc
std
mov
xchg
(bad)
test
punpckhbw
retf
mov
jge
call
mov
in
push
loope
movs
sbb
sub
fwait
mov
sub
xor
(bad)
mov
sbb
aam
loope
dec
jge
dec
jp
xchg
jp
lahf
jae
rcl
stos
popa
scas
sub
cdq
add
(bad)
bnd
xchg
and
fcmovb
data16
pop
fsubrp
mov
js
mov
outs
and
inc
cmp
out
mov
mov
cld
adc
clc
or
sbb
pop
(bad)
fs
pop
cdq
mov
sub
xchg
sahf
frstor
sti
ficom
dec
into
je
repz
scas
mov
movs
or
sub
dec
or
test
mov
je
cs
push
xchg
inc
cmp
or
sub
and
(bad)
call
test
scas
loope
pop
sbb
scas
loope
es
leave
and
retf
(bad)
lahf
pop
ret
ss
push
repz
sub
mov
and
xor
inc
adc
fstp
dec
outs
dec
mov
ja
cmps
nop
arpl
and
stos
add
xor
fst
and
sahf
cdq
out
dec
pop
fisub
in
dec
jae
cmp
pop
call
mov
rcr
mov
xchg
mov
jl
shl
inc
fstp
int3
xor
movs
inc
mov
mov
ins
(bad)
and
mov
or
mov
mov
inc
xor
jp
bound
adc
repnz
and
clc
inc
cmp
cmp
mov
pop
in
push
jb
scas
ja
in
mul
pop
shl
cmp
inc
mov
mov
clc
ret
js
jg
or
and
rcl
sbb
icebp
push
fyl2x
mov
adc
sbb
jmp
mov
or
jb
push
mov
sbb
loope
and
neg
lods
std
fist
push
push
out
jbe
mov
mov
test
neg
outs
mov
repnz
jb
pop
mov
cmp
mov
js
xor
mov
(bad)
cmp
pop
stos
adc
inc
clc
jg
fsub
mov
jnp
mov
cmp
das
adc
jl
jecxz
movs
jnp
in
mov
ds
sbb
sbb
loopne
jnp
adc
push
gs
in
lahf
pop
add
mov
fsubr
xchg
ins
shr
or
add
sbb
test
inc
lea
loope
repnz
cmp
test
dec
cdq
fwait
sub
mov
sub
pushf
dec
lock
adc
sti
imul
and
in
(bad)
dec
test
ret
sub
push
(bad)
shl
xchg
or
call
dec
xchg
test
repnz
lahf
sub
pushf
add
mov
xchg
lea
in
loop
shr
test
retf
retf
pop
mov
std
add
movs
push
imul
ficom
outs
mov
mov
sahf
nop
sbb
in
out
rol
xchg
mov
push
adc
sti
out
sbb
push
jg
push
popa
dec
aas
mov
imul
lds
das
inc
mov
push
call
sub
je
jns
into
or
xchg
sar
in
call
sub
jge
lds
rcr
mov
push
scas
out
lock
jb
push
mov
pop
mov
retf
(bad)
(bad)
mov
mov
inc
inc
sbb
or
adc
enter
mov
fst
xchg
sahf
push
mov
cwde
ds
and
jl
ins
in
push
mov
dec
mov
jnp
sub
sub
jg
sbb
rol
xchg
add
mov
iret
dec
sbb
cli
mov
pop
lahf
ffreep
pop
dec
inc
loop
je
jmp
push
clc
sti
lods
mov
inc
sbb
loope
repnz
sbb
jnp
popf
gs
xchg
(bad)
xchg
or
aas
fisttp
cdq
inc
fwait
shl
fwait
int3
xor
popa
jb
jmp
xchg
scas
mov
sbb
int3
add
cli
in
jb
mov
pop
xor
push
test
hlt
stos
jns
push
adc
fcom
add
bound
bound
mov
into
mov
mov
das
xor
cmp
push
mov
fsubr
adc
jne
aad
pop
push
inc
fcomp
out
add
mov
push
call
ret
push
or
fwait
xchg
adc
jge
(bad)
fs
dec
or
cmc
mov
xor
daa
addr16
into
loope
std
push
xchg
mov
sub
add
pop
(bad)
loope
inc
daa
pop
js
dec
add
cli
xor
pop
pop
scas
gs
or
lock
sar
les
int
mov
add
add
cmp
loopne
xchg
add
(bad)
and
mov
fisubr
je
fs
shl
imul
or
xchg
sbb
cmp
lahf
cmp
scas
das
add
and
les
pop
hlt
ins
fld
cs
mov
pop
mov
sbb
xchg
sahf
xor
mov
ret
out
shl
mov
lods
imul
mov
icebp
fidiv
mov
add
add
and
inc
in
or
jns
stos
jmp
retf
jmp
test
jmp
xchg
idiv
imul
jne
das
mov
mov
outs
lods
movs
pop
jmp
sub
jp
mov
adc
rcr
adc
and
adc
or
sbb
push
sub
jnp
xlat
(bad)
daa
adc
arpl
cmp
cbw
sbb
cmps
mov
inc
and
xor
int3
data16
pcmpeqw
adc
add
sbb
out
mov
stc
mov
in
cmp
je
xor
push
std
lods
clc
mov
test
shl
in
jae
test
and
ja
or
popf
out
stos
push
rcr
test
sbb
enter
cmp
dec
xor
mov
shl
iret
repz
mov
sub
mov
add
sbb
lahf
loop
push
sbb
fdiv
call
inc
mov
(bad)
jg
xor
jge
fisttp
test
in
jnp
push
call
ds
cmps
jno
or
pop
sti
test
mov
int
iret
movs
pop
les
xchg
jmp
sbb
stc
dec
dec
add
inc
push
sub
loope
popf
adc
adc
add
jnp
fbstp
inc
jnp
int3
in
out
out
sti
(bad)
lock
int
je
bound
sbb
xchg
xchg
dec
into
pop
in
ffreep
movs
lock
jnp
push
xchg
sub
les
adc
inc
out
ror
push
pop
jne
mov
inc
cld
fisttp
stos
sbb
push
adc
xchg
xchg
(bad)
ja
adc
cmp
push
add
lahf
mov
mov
sbb
cdq
xor
and
div
out
cs
bound
mov
or
add
add
lock
fbstp
out
out
and
mov
ds
xchg
xchg
mov
xchg
jmp
lock
fstp
out
mov
fs
leave
inc
fmulp
ror
iret
inc
popa
rcr
js
(bad)
stc
in
adc
push
jne
cmp
mov
cmp
mov
mov
ja
shr
or
add
mov
xchg
adc
aas
aas
pop
mov
jno
xor
outs
sbb
sbb
outs
sbb
ja
push
jecxz
cmp
xchg
jne
js
ins
pop
sub
test
push
stos
sahf
sbb
neg
js
scas
mov
and
lods
repz
cli
and
mov
pop
cmp
inc
pop
jnp
inc
mov
push
add
mov
jae
pop
xchg
and
xor
add
sbb
sbb
retf
outs
and
fld
push
mov
xchg
fst
lods
jb
or
test
test
ins
(bad)
push
arpl
and
pop
adc
push
dec
jp
mov
xchg
xor
outs
and
sub
sub
idiv
sbb
outs
mov
cmp
mov
and
ss
call
add
out
pop
mov
and
(bad)
sahf
push
add
push
adc
loop
sbb
mov
mov
arpl
or
data16
sbb
imul
sbb
mov
sbb
xchg
mov
mov
hlt
out
out
arpl
add
dec
pop
jns
and
xchg
imul
movs
aam
xchg
(bad)
dec
push
mov
ret
sub
mov
cwde
xchg
(bad)
in
pop
mov
push
jge
dec
cs
(bad)
int
mov
and
mov
les
rol
ror
xchg
repnz
sub
aaa
(bad)
jmp
xchg
or
js
push
pop
inc
(bad)
fidiv
dec
(bad)
ds
movs
jne
xchg
xchg
inc
pop
mov
pop
inc
hlt
test
ins
cld
je
cwde
std
mov
jbe
imul
dec
add
dec
mov
cs
inc
scas
cdq
mov
and
xlat
or
iret
retf
shl
test
fist
and
inc
xor
in
fnstsw
or
or
scas
mov
hlt
icebp
or
cmp
dec
repnz
movs
mov
jno
add
jbe
mov
les
inc
dec
outs
out
jmp
in
into
mov
fisttp
aas
inc
aad
je
dec
jns
pop
and
enter
push
cmc
adc
inc
stos
imul
aas
mov
pop
push
dec
ins
dec
dec
mov
ins
jns
stos
pop
movs
mov
in
jmp
sub
cdq
add
cmps
sbb
sbb
call
mov
aad
test
mov
xchg
popf
push
add
ss
ins
(bad)
aas
lods
or
sbb
lock
mov
adc
icebp
arpl
lea
cmp
push
jecxz
dec
xchg
daa
push
xchg
xchg
sub
sahf
push
adc
repz
xor
lock
bound
or
movs
sub
fcmovnu
leave
pop
mov
mov
(bad)
push
jmp
push
nop
ss
xchg
jge
out
cmps
leave
movs
cs
sub
cmc
stos
ja
loop
push
pop
add
(bad)
mov
push
and
cli
push
fidivr
xchg
mov
repz
inc
(bad)
xchg
sahf
jb
pop
and
mov
xor
je
(bad)
lahf
int3
loopne
jmp
xchg
sti
mov
cmp
sub
std
dec
das
add
sub
sbb
fwait
and
xor
cmp
xchg
add
out
jle
imul
mov
sbb
(bad)
retf
lock
fwait
mov
mov
mov
cmc
popf
push
mov
and
js
or
add
dec
mov
sbb
jno
(bad)
sbb
xchg
or
ret
or
dec
test
sbb
clc
dec
and
lea
xchg
and
outs
fisttp
xchg
loopne
(bad)
mov
call
sbb
std
mov
dec
xchg
sub
mov
mov
ficomp
es
int3
dec
cmps
cld
test
dec
push
imul
das
xchg
pop
aad
jmp
sub
mov
sbb
sar
push
stos
js
dec
sbb
(bad)
(bad)
lods
in
loopne
daa
lods
mov
xchg
mov
jl
aaa
fcom
cmc
xor
cwde
into
inc
stos
add
mov
in
sbb
push
sbb
jmp
inc
lods
fs
test
repnz
imul
(bad)
out
icebp
stos
fmul
and
sbb
inc
jmp
mov
push
fucom
mov
mov
sub
push
aaa
add
inc
inc
or
out
push
fbld
ins
fisub
inc
inc
mov
fdivr
sbb
xor
sbb
fbld
jae
or
out
ss
call
mov
adc
cmp
loope
pop
aas
pushf
pop
jns
in
push
fdivr
inc
or
(bad)
stc
cmp
sahf
jge
push
cmp
out
dec
cmps
mov
adc
iret
add
clc
retf
mov
add
enter
xchg
xor
jle
and
daa
xor
ficom
out
inc
scas
lds
cld
ret
stos
xchg
fst
sbb
sbb
cmc
sar
mov
std
fisttp
(bad)
jecxz
mov
lods
js
sbb
jg
ret
aad
(bad)
cmps
push
ret
(bad)
pop
in
imul
loop
out
syscall
imul
stc
push
pop
sbb
sub
ins
lahf
mov
inc
sbb
sub
sub
ja
test
or
out
pop
dec
add
xchg
cmp
ins
fadd
iret
addr16
(bad)
neg
test
sub
lods
pushf
mov
popf
daa
mov
xchg
xchg
call
add
sbb
jne
push
(bad)
fisttp
inc
movs
aas
cmps
and
mov
aad
fmul
add
repz
jo
sbb
jmp
sbb
retf
repnz
mov
imul
push
hlt
sbb
add
repnz
in
xchg
ja
pop
xchg
mov
in
xor
and
imul
or
call
mov
ja
ror
sbb
cdq
mov
fisubr
imul
sub
mov
cmp
adc
movs
sbb
movs
and
jmp
push
(bad)
std
push
out
daa
iret
mov
dec
out
das
mov
sahf
push
dec
data16
ds
ds
aad
inc
jecxz
jecxz
shl
inc
repnz
out
cmp
pop
mov
imul
rcr
sub
test
ds
daa
sahf
outs
add
jbe
sbb
jge
sahf
push
sahf
sub
nop
pop
inc
push
jae
dec
into
push
sbb
cmps
push
lods
adc
mov
aad
fsub
mov
xor
(bad)
cmps
or
cdq
loope
jl
add
adc
gs
out
sub
lock
inc
out
pop
mov
cs
adc
xchg
inc
cli
pusha
popa
mov
jb
push
pusha
arpl
sbb
sub
je
loopne
mov
add
mov
add
jmp
cmp
or
ror
xchg
xor
jle
mov
add
fsubr
es
push
jb
pop
lods
pop
add
dec
std
jl
add
jbe
cmps
jno
push
dec
xlat
cmp
daa
mov
pop
pop
xchg
test
xor
imul
fiadd
repnz
popa
mov
fwait
aas
ficom
cmp
inc
inc
fidivr
inc
push
cmps
dec
add
(bad)
aad
bound
sar
xor
imul
pop
sbb
aad
pop
dec
jbe
inc
and
dec
mov
push
and
pop
stos
jae
in
inc
mov
mov
or
and
in
cmp
retf
adc
das
jmp
mov
fisub
pop
cmp
mov
jo
cmp
(bad)
mov
mov
jl
pop
sahf
fs
mov
call
(bad)
push
inc
sbb
pop
and
imul
add
das
in
mov
clc
pop
sar
les
mul
sti
inc
adc
lea
sar
mov
add
jns
inc
out
movs
fist
push
sbb
icebp
xchg
les
mov
and
ds
mov
mov
mov
mov
dec
dec
add
enter
mov
dec
pop
mov
(bad)
fwait
aad
cmp
ds
sbb
or
dec
jnp
add
cmps
es
push
je
xor
adc
dec
in
add
les
psubsw
dec
inc
mov
fisttp
lahf
mov
das
and
mov
popf
cmp
jbe
adc
pop
jns
fcmovbe
xchg
fistp
icebp
js
nop
imul
repz
inc
jg
pop
mov
cmovg
and
xchg
xchg
movs
push
ss
inc
xor
adc
repnz
sbb
js
iret
cmp
and
stc
pop
test
data16
push
rcr
xor
repnz
iret
dec
cmp
in
mov
sbb
clts
mov
test
pop
(bad)
jle
jo
mov
lods
call
xchg
fidiv
sti
jmp
xor
aad
int3
mov
and
and
inc
sub
xchg
and
sbb
add
in
inc
dec
sbb
ret
stos
imul
mov
cwde
or
aad
jns
outs
leave
daa
dec
add
repz
mov
call
shr
add
xchg
imul
(bad)
cld
test
push
inc
loop
xor
push
(bad)
dec
cmp
and
in
daa
jne
lds
jge
and
daa
mov
or
mov
mov
test
mov
inc
sar
inc
cmp
cdq
nop
push
push
aaa
cmp
adc
add
aaa
repnz
sub
xchg
dec
inc
les
in
out
idiv
jnp
mov
push
fldenv
fcmovu
push
ins
dec
ins
ret
mov
stc
push
fdivr
dec
les
mov
jl
shl
(bad)
adc
call
xchg
outs
out
inc
xchg
add
or
add
dec
ins
shr
in
shl
mov
xlat
cmp
jnp
fsubr
test
out
aad
xor
mov
cdq
mov
cmps
sahf
iret
repz
loopne
shr
stc
jae
cdq
addr16
sub
pop
int3
scas
in
(bad)
pushf
push
cmp
sub
push
lods
dec
mov
mov
and
push
dec
xchg
mov
outs
mov
sub
test
or
pusha
iret
or
mov
pop
loope
lds
mov
dec
ss
sbb
jne
aas
cmp
ret
in
mov
adc
mov
pop
test
xchg
stc
jmp
dec
mov
les
sbb
imul
mov
mov
push
(bad)
pop
adc
das
adc
xchg
les
cmp
or
retf
test
loop
pop
lock
stos
xor
aas
pop
xor
es
xor
call
cmp
ffreep
or
push
lahf
sbb
add
jp
fcmovbe
sub
call
xor
adc
(bad)
stos
and
pop
jbe
ss
mov
loope
sbb
cmp
movs
push
pop
out
jnp
inc
sbb
mov
rcl
in
test
mov
and
xlat
imul
mov
sbb
aam
outs
int3
sub
(bad)
call
ds
mov
cmp
stos
stos
fwait
pop
enter
cdq
or
mov
lock
data16
fild
cmp
retf
pop
js
sub
aad
mov
paddusb
xor
pop
inc
stos
imul
pop
xor
out
mov
into
mov
fwait
mov
outs
sti
icebp
pop
jecxz
mov
mov
popf
mov
(bad)
popf
arpl
icebp
test
mov
jmp
cmp
xor
adc
sub
fwait
inc
xchg
dec
jge
push
pop
dec
adc
jns
mov
pop
sbb
ret
hlt
cwde
mov
push
inc
gs
mov
jne
outs
(bad)
or
sahf
and
cmp
int
adc
or
test
in
inc
fadd
sub
jae
gs
mov
loope
pop
jge
pop
mov
int3
jae
sub
adc
sbb
dec
and
mov
cld
sub
dec
jmp
xor
ins
xor
cmps
iret
xchg
nop
cmp
xchg
rcl
int
pop
push
sahf
aam
loop
mov
inc
xchg
sub
movs
out
lods
mov
pop
add
iret
movs
es
mov
inc
jle
pop
popa
mov
xchg
inc
jno
and
mov
outs
nop
fmul
xor
push
test
jae
and
retf
jmp
inc
sbb
mov
sbb
lock
fisttp
popf
inc
cmp
loopne
std
(bad)
gs
pop
mov
ss
sahf
dec
lahf
inc
icebp
mov
inc
mov
ins
fld
enter
sbb
add
dec
lds
push
push
sar
in
add
fcmove
frstor
cmp
jecxz
in
pop
adc
stc
(bad)
sbb
cmp
imul
lea
sti
mov
cmps
push
jecxz
pop
mov
stos
jmp
loope
movs
pop
jge
mov
jbe
icebp
and
ja
pop
dec
sbb
daa
sbb
adc
dec
addr16
(bad)
xchg
jg
sbb
mov
mov
sbb
jae
popa
pop
out
out
cdq
imul
cwde
scas
scas
jge
iret
icebp
add
das
ret
int
(bad)
cmps
(bad)
stos
cmp
cmp
pop
xor
push
mov
jg
mov
(bad)
sti
dec
mov
mov
das
cmc
outs
mov
jmp
lds
mov
sbb
xchg
scas
xchg
cmp
cli
(bad)
dec
and
dec
leave
jae
das
shl
stos
sub
test
mov
xchg
inc
mov
or
imul
xlat
les
cmp
sub
or
jnp
push
push
xchg
outs
adc
xchg
pusha
int3
imul
push
jo
xchg
dec
pushf
add
cmp
les
xchg
jmp
push
out
shr
rol
icebp
pop
retf
daa
pusha
push
mov
dec
mov
xor
nop
mov
mov
out
nop
add
pop
fsubr
xchg
xor
in
or
into
lods
xor
jl
test
repnz
adc
mov
les
out
sahf
adc
pop
dec
cmps
jp
frstor
ror
dec
mov
push
add
mov
mov
loopne
test
aas
or
jbe
cmp
data16
push
nop
stc
xchg
bound
stc
jmp
outs
jp
ins
cmc
cwde
dec
dec
stos
cdq
popf
push
cld
cmps
cmc
push
cmps
sbb
rcr
pop
push
xchg
adc
sbb
dec
and
xor
fst
or
loope
cmp
pop
call
pop
inc
cwde
imul
test
clc
out
xchg
xchg
jmp
and
push
out
inc
fiadd
mov
cmp
mov
jbe
and
jmp
push
mov
sbb
adc
out
das
and
imul
dec
jmp
test
jle
or
jno
cmp
push
pop
xor
mov
cmps
inc
or
imul
inc
mov
cmp
or
idiv
pop
dec
or
sbb
mov
inc
popf
mov
add
mov
jmp
or
push
pop
jno
ss
test
mov
dec
rcpps
ror
stos
(bad)
adc
data16
cwde
sti
jp
cmps
mov
inc
movs
pop
pop
cmps
test
fwait
(bad)
shl
rol
add
lahf
sub
push
mov
in
sbb
lods
ds
or
not
add
xor
idiv
and
shr
sub
xor
adc
sub
(bad)
dec
sahf
cs
inc
sar
hlt
(bad)
dec
and
sub
(bad)
sbb
push
pop
stc
in
int3
xchg
mov
popa
cmps
repz
int
out
(bad)
mov
pop
int3
and
xor
jns
sub
xlat
sbb
test
push
icebp
sub
out
call
inc
mov
ss
movd
test
push
cmc
clc
jne
movs
out
dec
push
or
and
aam
sbb
dec
and
cmps
mov
leave
ficomp
shl
aam
add
dec
daa
and
jo
mov
dec
sti
sbb
dec
xor
fstp
push
sub
cmps
and
lahf
xchg
lea
dec
cs
je
sbb
xchg
pop
mov
mov
cmp
sub
or
shl
pop
rcr
inc
push
retf
or
inc
push
data16
add
push
je
cmc
aas
push
bound
int3
sbb
push
int3
loop
ins
test
push
cld
cld
fsubr
in
or
inc
retf
sbb
sub
dec
sub
in
cmp
lds
jo
cmp
adc
in
and
cmp
mov
outs
dec
div
fiadd
xor
arpl
xchg
dec
shr
je
mov
mov
sub
imul
hlt
addr16
xor
bound
leave
mov
gs
ret
xor
push
pop
add
cli
adc
retf
bound
mov
rol
jbe
pushf
fst
pop
xchg
sub
shl
push
sar
xchg
adc
dec
mov
lods
xchg
mov
ficomp
cmps
inc
lahf
out
add
or
xchg
jne
jne
ja
xchg
add
xor
mov
shl
or
fidivr
icebp
bnd
imul
cmps
or
xchg
adc
imul
lea
push
dec
popf
fiadd
inc
adc
push
mov
int
ss
cdq
call
jbe
(bad)
push
es
dec
in
pop
mov
xchg
das
xor
inc
push
or
fsubr
mov
push
ret
sub
inc
jg
outs
cli
cli
movs
into
jg
mov
mov
sbb
jl
loope
xchg
mov
imul
inc
jmp
dec
test
addr16
mov
jge
in
inc
and
jno
cli
add
call
fist
pusha
ret
sub
inc
dec
xor
xchg
mov
jns
movs
or
jge
pop
jo
in
mov
lock
jmp
and
stos
retf
js
cmp
or
mov
jmp
test
mov
or
and
push
(bad)
imul
enter
fimul
nop
jecxz
inc
mov
imul
and
and
adc
test
popa
push
call
cmp
dec
pop
fstp
jl
push
stos
shl
dec
jae
xchg
(bad)
hlt
test
stc
int3
pop
pusha
in
clc
mov
mov
outs
adc
adc
rol
shl
dec
fst
cs
jns
bound
sbb
aad
in
xchg
enter
(bad)
add
jne
stos
fimul
and
ss
loope
rcr
or
fnstenv
or
test
mov
dec
in
or
mov
in
das
mov
fs
lock
xor
in
jbe
jl
(bad)
cmp
xor
or
sbb
sbb
mov
push
or
mov
mov
lock
in
xchg
add
cli
inc
inc
das
and
in
pop
push
inc
test
mov
mov
xchg
cmps
xchg
xor
arpl
jb
and
pusha
add
sbb
push
or
(bad)
adc
add
outs
mov
ss
jle
in
xor
mov
sar
sub
popf
xchg
cmp
mov
pusha
lds
adc
out
mov
ja
mov
mov
cmp
cli
add
int
lahf
mov
ins
sbb
push
cmp
pop
fwait
mov
pusha
outs
daa
jmp
cmp
int
mov
pop
jo
sbb
mov
cwde
mov
jle
cmps
adc
inc
or
push
or
pushf
xchg
mul
repz
inc
lods
rol
shl
mov
stc
enter
out
add
mov
bound
ror
push
sub
and
imul
(bad)
cdq
(bad)
dec
cmp
bnd
popf
fsubr
test
xor
push
pop
cmp
push
mov
push
mov
in
push
add
mov
ret
sub
call
jle
jns
and
xchg
scas
rcl
shr
and
adc
mov
or
daa
pop
and
int3
xchg
inc
ins
pop
mul
push
xlat
adc
cdq
inc
sbb
sub
cmps
enter
(bad)
mov
mov
and
mov
movs
mov
cdq
cmp
rol
icebp
rol
jae
mov
xlat
ins
mov
lods
mov
rcr
stmxcsr
jge
mov
jo
push
xor
add
cld
sahf
retf
mov
xchg
mov
mov
in
pop
enter
loope
push
adc
jnp
mov
sbb
icebp
ror
xor
ds
add
fstp
and
fcomi
test
mov
popa
out
rcr
jp
dec
ins
pop
pop
out
dec
xchg
repz
je
cmp
lods
enter
(bad)
repnz
xchg
ret
jno
xor
xor
clc
shr
xor
mov
or
and
push
sbb
jmp
jg
sbb
hlt
sub
and
scas
sub
iret
stos
lock
addr16
test
cmps
jl
in
pop
popa
adc
xor
pop
cmp
push
fld
jle
fwait
xor
daa
fimul
lods
popa
add
sti
loope
loop
mov
lock
jb
mov
xchg
jge
sub
add
mov
(bad)
mov
imul
xor
stc
int
adc
cmp
pusha
arpl
mov
shl
test
jo
adc
or
popa
test
ins
add
jl
cwde
and
mov
nop
imul
jg
sub
xor
xchg
retf
mov
xchg
or
sbb
sub
add
mov
mov
loope
mov
jbe
mov
das
inc
add
(bad)
in
xor
jg
es
sub
ja
mov
adc
(bad)
mov
mov
jb
shl
xchg
mov
sbb
out
stos
jb
clc
push
adc
jae
test
xor
outs
adc
clc
adc
and
fst
cs
jae
shr
mov
cmp
cmc
adc
push
cdq
test
in
test
dec
jl
xlat
scas
rcr
adc
xchg
adc
xor
das
jno
inc
(bad)
lea
add
or
test
ss
push
daa
mov
shl
or
out
in
push
outs
inc
inc
rcl
or
shl
in
xchg
icebp
mov
or
std
add
lds
mov
scas
mov
cli
stos
mov
cs
push
xlat
jnp
mov
std
ret
add
cwde
nop
inc
pop
mov
shr
fs
sbb
add
push
out
push
retf
(bad)
rol
and
stc
mov
adc
jecxz
jl
cmp
mov
mov
add
push
pop
pop
(bad)
push
int3
rol
mov
movs
stos
stc
sbb
scas
sar
xchg
jmp
icebp
call
ficomp
clc
xor
pusha
mov
aam
jbe
sub
arpl
cli
in
cmp
neg
xchg
jbe
call
icebp
xor
and
sbb
(bad)
sbb
fdivr
and
pop
pop
ins
inc
push
fcom
adc
push
jl
add
push
iret
repz
movs
cs
jp
call
push
lods
in
stos
xchg
aam
aad
ror
loope
add
mov
inc
shl
imul
test
mov
out
dec
(bad)
xlat
jp
xchg
leave
mov
push
or
or
mov
ror
xor
push
imul
or
and
pop
repz
inc
les
out
xor
mov
inc
inc
inc
sbb
cmp
clc
sbb
dec
jb
and
jp
ins
pop
inc
add
imul
jg
inc
inc
xor
and
es
mov
nop
jmp
fadd
call
pop
test
or
xchg
dec
popa
fcom
fistp
inc
cmp
arpl
or
out
(bad)
fs
jnp
xchg
sbb
(bad)
popa
xlat
and
in
dec
inc
loopne
cdq
ins
mov
sub
iret
mov
adc
(bad)
int
add
popf
leave
ja
mov
xchg
inc
in
popf
mov
lahf
cmp
rcl
inc
dec
jecxz
pop
pop
and
cdq
stc
push
scas
or
mov
and
xor
adc
test
jle
imul
add
es
ret
lock
sub
lock
test
mov
pop
adc
jo
mov
dec
mov
jmp
jg
cmp
leave
sbb
ss
mov
mov
jg
lds
ins
push
test
mov
add
adc
sub
rol
imul
xchg
cli
(bad)
sub
push
test
cmc
jns
fs
cmp
add
pop
mov
xor
fadd
add
jmp
in
retf
jo
(bad)
ffreep
jge
pop
cmps
add
jno
xchg
mov
push
movs
fs
std
ins
out
mov
call
imul
leave
xor
das
fwait
mov
xor
xchg
push
iret
sahf
test
dec
and
(bad)
(bad)
std
xor
aam
ret
xor
mov
xchg
add
xor
movs
cmp
xchg
cdq
cwde
xlat
and
dec
daa
mov
jmp
pop
out
cmp
dec
bound
push
popa
rcr
mov
jmp
jo
rcr
sub
movs
cmps
mov
in
sbb
fld
shl
inc
jno
cmp
fistp
ret
fisttp
jne
fistp
dec
xchg
push
mov
jb
retf
cmp
and
ds
mov
(bad)
adc
pop
jl
xor
fcomp
loopne
sub
rcl
push
jp
shl
mov
mov
mov
pop
pushf
mov
jns
dec
popa
xchg
imul
pushf
push
neg
cwde
out
scas
ja
jp
or
push
mov
test
fsubrp
mov
iret
push
mov
ins
jg
jg
shr
fstp
cmp
mov
mov
adc
mov
dec
movs
and
xor
pop
enter
and
jbe
sbb
jmp
sbb
ret
jne
mov
dec
xchg
cmps
or
mov
out
inc
mov
adc
mov
es
sub
pop
add
pusha
out
in
sub
scas
xor
xchg
mov
cld
loope
mov
sub
dec
imul
nop
inc
es
xchg
or
adc
jnp
mov
test
clc
mov
sbb
mov
mov
inc
inc
mov
cwde
xor
inc
mov
mov
jbe
jg
cmc
sub
cmp
lods
sbb
nop
je
jb
mov
dec
or
test
pop
data16
cmp
adc
mov
or
inc
cmps
ss
sar
pop
sbb
or
stos
adc
mov
stos
or
sub
mov
call
mov
inc
push
jae
gs
lock
lods
pop
push
out
or
push
cmp
xchg
call
cs
jge
fidiv
imul
movs
ret
hlt
push
adc
xor
cmps
mov
mov
loopne
mov
loope
in
xor
pop
mov
mov
or
lea
adc
test
(bad)
stc
add
cmps
(bad)
aaa
cld
jge
repnz
mov
cmp
sbb
push
sub
in
lock
aas
jne
and
inc
pop
push
movs
(bad)
mov
pusha
or
fidiv
mov
xchg
fimul
aaa
jg
push
popa
jb
xor
mov
in
sar
sbb
or
(bad)
or
sbb
fcomp
cmp
inc
sub
and
xchg
cs
ret
es
or
bound
fsubr
inc
jle
push
mov
retf
pushf
and
and
or
jmp
(bad)
and
shl
mov
loop
fadd
ja
mov
jg
pop
jg
or
dec
mov
jmp
xor
xor
jb
jbe
addr16
aas
int3
fstp
pushf
pop
jb
leave
dec
popa
push
or
test
inc
lods
pop
test
enter
jg
jnp
xchg
add
mov
xchg
push
addr16
push
ins
jp
(bad)
dec
in
test
out
sub
sub
(bad)
aaa
jecxz
or
clc
icebp
out
imul
iret
add
pop
cmp
lock
add
adc
add
addr16
fsub
xchg
jo
out
mov
and
push
pop
call
das
out
ja
aad
loope
xor
jp
xchg
xchg
out
and
xchg
jecxz
enter
mov
outs
sbb
jp
mov
enter
movs
push
int3
xlat
jb
pusha
data16
xchg
arpl
shl
dec
jno
push
mov
or
popa
mov
sub
sub
in
ficomp
imul
cdq
ja
retf
cmp
sub
mov
dec
xchg
cdq
pop
stc
xor
stc
push
mov
xchg
imul
arpl
test
call
add
jo
push
sbb
sub
das
adc
mov
dec
fistp
fcom
clc
mov
sub
loop
jg
inc
push
xchg
test
pop
dec
outs
ret
add
rcl
repz
push
jl
(bad)
lods
outs
ret
leave
sub
clc
mov
inc
(bad)
jmp
fsubr
ja
add
jnp
test
mov
pushf
loopne
scas
sub
and
jp
jmp
mov
push
mov
push
push
sar
push
std
add
mov
sub
(bad)
lock
popf
cmps
aaa
mov
das
jb
jb
in
in
cmp
push
mov
inc
add
pop
mov
adc
movs
loopne
xchg
mov
inc
jmp
enter
adc
jae
mov
cmps
inc
pop
sub
xchg
sub
pop
or
mov
clc
and
movs
clc
test
in
add
xor
pop
adc
cmc
dec
xlat
cmp
add
leave
(bad)
xor
sti
scas
(bad)
cmp
shl
fwait
cmp
xchg
and
jge
call
popa
mov
sbb
jp
mov
sbb
into
cmp
jecxz
cwde
inc
inc
fst
xchg
mov
pop
mov
(bad)
inc
ret
ins
inc
retf
scas
mov
pop
mov
loopne
ror
enter
fucom
pop
pop
pop
sahf
bound
xchg
mov
dec
cmps
outs
loopne
jle
je
add
xchg
test
mov
xchg
les
mov
ja
(bad)
xlat
sub
sbb
dec
addr16
dec
and
stc
into
dec
mov
ins
and
jno
sbb
inc
mov
sub
frstor
cmp
mov
shl
dec
sti
push
push
pop
das
imul
aad
pop
cmp
shr
sub
or
jmp
push
out
fcom
inc
repnz
push
adc
lahf
(bad)
(bad)
jbe
ss
or
call
xchg
out
cmp
mov
aaa
add
outs
pusha
ficomp
divps
mov
push
or
ret
jne
rcr
sbb
in
das
call
fidiv
fcom
test
(bad)
xor
adc
aas
cs
aaa
bound
adc
popa
inc
mov
cmp
mov
or
sbb
gs
jge
aad
cmps
loopne
push
pop
inc
pop
out
cmp
or
mov
daa
add
ins
cmps
lock
aam
jl
loopne
mov
inc
sub
adc
dec
push
mov
cdq
fdivp
cmp
cmp
ds
add
mov
push
push
frstor
sbb
xchg
jb
jno
(bad)
aad
or
pop
or
test
lods
mov
push
imul
jle
in
mov
fidiv
cmp
push
int
xor
or
enter
(bad)
ss
sahf
jb
mov
inc
cmp
lahf
iret
fisttp
clc
push
jl
or
mov
ja
mov
add
adc
fxch
dec
or
push
fidivr
enter
rcl
test
sbb
and
sar
out
mov
cdq
imul
retf
push
sbb
xor
test
mov
dec
fisub
or
scas
retf
sbb
xchg
call
mov
adc
fmul
call
cdq
pop
das
cld
jmp
sti
add
and
ror
loopne
test
ins
or
mov
xor
sub
jmp
lock
faddp
inc
add
sub
xlat
mov
mov
mov
mov
mov
mov
mov
push
icebp
cwde
(bad)
out
mov
fsub
retf
inc
jmp
sub
push
or
repnz
ret
call
cmps
push
jmp
icebp
fwait
xchg
in
shr
sbb
mov
ror
jmp
out
push
or
inc
pushf
(bad)
lods
ret
dec
adc
mov
cmp
sbb
cmp
addr16
fnstenv
pushf
repz
sbb
int3
dec
sbb
sbb
jmp
or
sbb
push
push
pop
loopne
retf
adc
aad
js
gs
pop
not
pop
out
and
fiadd
sub
push
je
pop
ins
sub
int
dec
fs
sbb
mov
loopne
fbld
scas
ret
mov
push
jmp
or
dec
call
add
shr
scas
fwait
mov
lods
inc
jg
mov
inc
mov
push
and
rol
dec
mov
into
jmp
cmp
mov
fimul
inc
adc
jae
add
mov
js
add
js
add
adc
xchg
add
jae
outs
nop
and
jno
adc
mov
xchg
rcr
xchg
xchg
sbb
fisub
push
sbb
in
pusha
mov
sub
xor
jmp
inc
call
or
sbb
ins
jo
mov
lock
jbe
in
jecxz
imul
out
cmp
cmp
cmp
xchg
es
jle
out
mov
pop
(bad)
out
mov
aaa
(bad)
retf
xchg
adc
mov
bound
xor
ds
lock
stc
cmp
cdq
enter
jge
ret
inc
pushf
aas
adc
call
sbb
pop
outs
xchg
push
pusha
test
add
test
xchg
mov
xor
mov
ins
sbb
push
adc
fimul
enter
lahf
push
sbb
jp
mov
pusha
(bad)
imul
in
clc
jmp
test
dec
movs
dec
xchg
sub
xor
fwait
jmp
pop
lds
fnstenv
aaa
(bad)
sbb
pop
mov
pop
and
in
xchg
mov
gs
mov
mov
and
mov
or
in
loope
cmps
out
retf
mul
repnz
cwde
push
lods
out
or
repnz
aam
inc
push
call
int
out
scas
jge
and
fmul
dec
test
aaa
int
fnstsw
sbb
xchg
rol
ins
fadd
xor
neg
dec
push
mov
mov
bound
fld
call
in
aas
or
and
inc
cwde
ins
imul
imul
mov
dec
test
mov
jns
in
push
outs
dec
addr16
addr16
pushf
imul
xlat
ins
pop
push
xchg
les
mov
dec
xchg
je
mov
add
or
dec
pop
adc
sbb
icebp
fs
imul
jp
stos
and
fnstsw
cmc
and
xchg
cmc
mov
mov
cmps
xchg
adc
sahf
mov
rol
hlt
test
push
inc
mov
jns
ret
adc
jecxz
push
mov
and
xor
xor
pop
ror
adc
add
jno
leave
xor
push
ror
or
jmp
call
stc
xchg
loopne
jae
jg
stc
jmp
fidivr
jge
stos
sbb
push
add
scas
gs
add
xchg
xor
stc
outs
mov
(bad)
or
arpl
jae
inc
lods
inc
sti
cmps
lea
xor
(bad)
sar
pop
inc
pop
cwde
bnd
cmp
push
mov
mov
push
les
push
fcomp
mov
inc
adc
call
push
repnz
inc
lock
push
cmp
aad
(bad)
mov
ds
lock
inc
jecxz
add
leave
cmp
cmc
data16
out
pusha
ret
outs
and
pop
lock
mov
stos
or
cdq
aaa
ret
cld
xchg
lods
cwde
xor
iret
or
lds
push
jmp
pop
add
dec
pop
sti
loop
scas
jmp
or
add
and
jno
fadd
cmp
mov
push
ds
mov
or
in
inc
mov
test
(bad)
movs
popa
dec
xor
ja
cmps
add
ret
test
daa
xor
xlat
jg
std
mov
adc
inc
lock
sbb
loop
and
repz
addr16
icebp
fdivr
fstp
or
sbb
not
pop
inc
icebp
inc
scas
mov
adc
cmp
jnp
mov
mov
adc
dec
data16
mov
imul
scas
adc
pop
scas
xor
mov
rol
in
mov
jp
push
int3
mov
xchg
mov
dec
and
inc
std
jp
pop
aad
mov
scas
push
sbb
or
push
xchg
mov
cmp
and
sahf
push
mov
pop
rcl
xchg
adc
sub
imul
scas
xor
mov
ds
ffree
pop
(bad)
inc
xchg
out
sbb
mov
push
pop
imul
out
jmp
fadd
and
inc
or
fsub
in
and
sub
inc
(bad)
ja
leave
in
adc
push
pop
bnd
hlt
dec
pusha
icebp
sub
jmp
std
sar
(bad)
push
ret
cdq
ror
or
loop
ret
xor
dec
sbb
xor
fucomip
test
adc
(bad)
enter
mov
mov
mov
ins
mov
dec
mov
sub
fbld
mov
rcr
fild
int3
xchg
ins
(bad)
xor
(bad)
call
div
dec
cmp
dec
jo
inc
gs
mov
cmps
push
test
sub
jae
pusha
mov
fisttp
jmp
dec
in
sbb
dec
lods
ins
cs
xchg
jecxz
inc
add
(bad)
retf
dec
int3
mov
pop
lahf
push
stos
cmps
out
icebp
lods
cmp
arpl
sar
mov
push
rcr
or
fist
sub
stc
retf
test
out
jo
or
sbb
inc
ins
in
rcl
sbb
fldcw
arpl
imul
mov
jmp
cmp
ins
hlt
lea
cld
pop
sub
enter
push
jmp
adc
mov
cdq
out
or
retf
mov
into
push
lock
pushf
cmp
xchg
lods
test
shl
mov
lods
int
(bad)
mov
pop
shl
inc
mov
shr
add
bound
repz
loope
dec
mov
mov
(bad)
retf
in
loope
mov
or
inc
fcmovnbe
out
jno
adc
data16
pop
fidiv
in
pop
je
dec
xchg
out
jne
outs
das
sbb
mov
pop
mov
call
cmp
add
sbb
call
sub
scas
ja
fnsetpm(287
push
shr
xor
inc
cmp
mov
mov
movs
cvttps2pi
xor
ins
cmp
sub
popf
ficomp
inc
xchg
(bad)
jmp
mov
dec
daa
mov
xchg
cmp
dec
cs
sahf
sub
jno
xor
imul
mov
cmc
add
mov
jae
dec
and
push
jmp
outs
mov
les
ficom
in
push
pop
mov
push
mov
push
xor
leave
in
push
mov
call
pop
inc
fdivrp
adc
jmp
into
test
jmp
loopne
jbe
sbb
xor
sbb
push
add
mov
jg
(bad)
into
mov
push
or
lds
pushf
inc
sub
jae
jmp
div
xchg
adc
mov
or
add
mov
xchg
adc
jge
xor
dec
inc
mov
int3
fidiv
sub
fdivr
neg
outs
leave
cmp
cmps
add
in
jmp
mov
shl
movs
cdq
and
sbb
mov
mov
pop
sub
stos
cmp
pop
(bad)
jmp
or
iret
jno
pop
or
cmp
adc
mov
(bad)
ret
ret
adc
add
adc
dec
jnp
dec
es
sbb
repz
xor
or
mov
inc
jge
fcmovbe
sub
popa
cwde
jmp
sub
cmp
mov
cmps
add
ds
repnz
cmc
dec
(bad)
mov
jle
jnp
and
adc
push
mov
ficomp
test
jecxz
inc
imul
adc
pop
sbb
fldcw
xor
inc
add
pop
mov
pop
pop
shl
jecxz
iret
push
dec
cmp
je
or
(bad)
dec
push
mov
cmps
jecxz
mov
add
add
sbb
jae
loopne
jecxz
mov
aad
mov
cmp
cld
cmp
cmps
fwait
xchg
call
bound
aas
dec
mov
xchg
dec
imul
sbb
adc
push
repnz
stos
dec
jmp
outs
push
int3
push
jmp
in
cmc
loopne
cwde
out
jae
xchg
inc
enter
pop
arpl
adc
or
and
xchg
adc
cmove
js
push
and
or
mov
in
dec
jmp
xchg
int3
or
mov
adc
sar
push
mov
pushf
popf
cmp
mov
or
fldcw
ret
or
ss
repz
stc
xchg
call
or
mov
pop
jg
and
add
ja
ret
and
fnstcw
and
jmp
retf
add
adc
out
mov
cmp
fs
jmp
sbb
js
arpl
cmp
or
push
imul
outs
(bad)
jmp
mov
sub
adc
iret
push
das
and
pop
daa
pop
in
hlt
int
sbb
test
sub
adc
popf
mov
ds
jns
frstor
sub
neg
xor
out
inc
adc
in
outs
pop
xor
int
push
fist
fxch
in
sbb
pop
jmp
xchg
sbb
lds
mov
sahf
dec
test
or
fdivr
pop
xchg
sbb
and
mov
sbb
xchg
not
rep
and
es
cmp
in
fcmovne
test
lahf
jnp
and
aad
lds
out
and
jmp
pop
aas
test
mov
push
out
pop
mov
ins
loope
or
sub
jl
fld
cmps
iret
mov
ror
pop
jb
repnz
xor
cmc
in
xor
mov
inc
stos
mov
aas
push
arpl
sbb
xor
lods
cmp
mov
and
jb
xchg
bound
sub
jne
(bad)
in
pop
fldenv
jg
xor
add
mov
adc
xor
jmp
adc
push
jmp
jp
push
pop
fs
fwait
dec
(bad)
pop
mov
mov
les
loope
bound
jp
and
int
(bad)
jmp
and
mov
xchg
test
sub
fsubr
pop
mov
adc
pop
push
xchg
pusha
or
out
jmp
sub
test
and
addr16
(bad)
lahf
push
imul
sub
and
and
retf
jo
cmp
jg
pop
and
pop
push
jne
aas
pop
jmp
mov
stos
adc
lahf
movs
js
sti
je
jmp
inc
cwde
cmp
inc
add
in
movs
pushf
scas
movs
push
call
dec
jmp
pop
fwait
fwait
repz
js
jmp
(bad)
call
sub
mov
in
push
dec
or
add
pop
sub
cmps
jl
mov
hlt
sub
shl
stos
push
cmp
adc
sbb
pop
sub
cdq
mov
push
mov
(bad)
xor
repz
cwde
repnz
ds
xor
sbb
dec
pop
sub
sti
inc
inc
mov
xchg
cmp
and
and
pop
mov
sbb
jmp
sub
rcr
std
xor
cmc
push
and
xchg
push
leave
xchg
xchg
dec
cmp
retf
int
aad
icebp
scas
pop
fld
xor
jmp
jp
cmc
in
inc
std
outs
mov
sahf
and
lock
loopne
aaa
push
dec
mov
push
cmp
push
scas
(bad)
test
xlat
jo
adc
push
pop
cld
push
mov
push
fwait
inc
mov
jae
(bad)
pop
xchg
neg
xchg
sahf
mov
cmp
ja
inc
mov
mov
cmp
daa
mov
(bad)
les
fild
add
inc
or
jle
jo
add
(bad)
mov
mov
imul
jle
pop
xchg
iret
data16
mov
scas
cmps
sub
fnstsw
mov
call
jmp
in
cmp
dec
les
(bad)
sub
ja
xor
out
scas
mov
fsub
test
pusha
dec
pop
lods
inc
pop
daa
js
icebp
retf
mov
fs
stos
mov
pushf
sbb
mov
mov
test
jne
pop
pop
jp
iret
mov
sbb
stos
repz
int
xor
dec
loopne
cmp
xchg
dec
jge
out
add
retf
mov
popf
add
pop
push
aam
lods
pop
jo
jnp
aas
mov
lds
into
pop
push
cmp
and
pop
cmc
rol
sbb
loopne
cmp
xchg
iret
mov
sbb
cli
out
movs
sahf
push
add
mov
push
aaa
icebp
clc
adc
mov
jns
je
or
fld
lods
scas
and
dec
call
jecxz
imul
ffreep
out
adc
je
xchg
fist
mov
add
mov
loope
adc
xchg
mov
mov
loop
sbb
jo
jl
rcr
es
xor
mov
leave
les
xor
int3
push
mov
dec
adc
rcr
out
cmp
gs
and
and
dec
mov
or
xor
cmc
rcl
pop
cmps
cmps
fnstenv
pop
jge
fwait
jnp
xchg
or
out
test
adc
icebp
in
nop
mov
inc
mov
inc
fsubr
sub
mov
xchg
push
lock
test
or
mov
mov
cmps
mov
push
test
dec
ds
cmp
jp
adc
out
js
pop
ins
cmp
enter
out
pop
imul
xchg
ja
inc
das
maskmovq
div
pop
xchg
call
sub
idiv
mov
sub
pop
jl
rol
or
enter
dec
(bad)
call
and
push
arpl
movs
aad
jg
jge
and
sub
xor
jg
jmp
das
xor
stos
stos
cdq
mov
jp
ficom
arpl
xchg
and
ins
mov
in
daa
cmp
ret
pop
stc
jmp
and
shr
lahf
mov
fdivr
jg
pop
xor
mov
sbb
mov
xchg
or
ficom
rcr
cmp
mov
add
push
cwde
sub
xor
jmp
xlat
sbb
ins
push
and
out
(bad)
leave
cmp
mov
leave
int3
and
lock
mov
mov
cmp
aad
retf
vorps
jmp
aam
mov
ffree
push
xchg
push
xlat
mov
and
call
adc
pushf
es
dec
sbb
(bad)
lods
(bad)
fcmovnb
mov
addr16
out
sahf
or
mov
push
push
pop
dec
cmp
std
pop
push
shr
test
inc
mov
int3
sub
sahf
pop
xor
pop
rcr
lock
test
pop
and
dec
xchg
aas
inc
add
fisubr
call
rol
or
daa
shl
jnp
imul
fdivr
stc
sub
(bad)
popf
xor
mov
push
(bad)
movs
adc
ret
and
sbb
ss
daa
mov
adc
pop
push
repnz
inc
fs
je
or
dec
out
sbb
aaa
cmp
leave
repnz
sub
int3
movs
not
shl
adc
stos
call
sub
mov
ret
cmp
dec
idiv
xchg
imul
sar
mov
lods
shl
mov
inc
dec
cmp
stos
dec
aam
cmps
cmc
stos
sbb
push
dec
daa
enter
(bad)
arpl
mov
or
xor
in
mov
jo
mov
imul
or
xor
cwde
stos
push
ret
out
add
pop
ins
loope
inc
mov
aam
dec
imul
(bad)
in
std
not
mov
ror
shr
and
sub
int3
or
ja
dec
and
jle
pushf
mov
call
xor
jle
enter
adc
rol
in
or
mov
adc
(bad)
jmp
xchg
repnz
rol
sbb
cld
dec
jne
pop
repz
aaa
inc
out
push
jns
ja
mov
xor
sub
or
push
inc
ret
cdq
and
and
call
push
xor
fdiv
lods
shl
js
xchg
adc
jle
rep
sub
pop
jle
(bad)
sbb
jle
ja
xor
neg
loope
fldcw
jno
or
pop
je
mov
jb
xor
jb
fcomip
mov
mov
pop
mov
gs
cdq
jmp
cld
jb
cwde
jmp
xor
xor
jl
movs
mov
xor
jle
add
cld
mov
loop
xchg
jne
mov
fistp
cs
xchg
ret
fldenv
adc
push
jmp
cmp
loope
pop
(bad)
dec
js
jp
mov
mov
fs
adc
add
adc
popf
fwait
cmps
dec
out
and
pop
push
xchg
in
clc
sbb
sbb
jbe
ds
dec
repz
frstor
sbb
(bad)
into
mov
ror
push
test
mov
xchg
sub
ror
mul
sbb
xchg
mul
jg
sbb
add
and
push
loop
mov
jnp
push
and
ror
xor
rol
imul
in
inc
mov
and
nop
xor
sbb
adc
outs
(bad)
push
lods
sub
sub
or
dec
xlat
dec
pop
stos
call
push
xchg
mov
sbb
mov
dec
cli
(bad)
jp
out
pop
cmp
jo
mov
shr
sub
mov
sub
pop
test
lods
mov
xchg
ret
inc
fwait
call
std
mov
popf
call
mov
cwde
xlat
aad
(bad)
ins
xchg
cmp
dec
or
out
inc
cmps
loope
or
in
sub
xor
retf
leave
or
sti
adc
jmp
popf
lods
mov
mov
ss
pop
jge
jae
mov
(bad)
fwait
ds
movs
pop
push
jo
adc
push
repnz
ja
adc
jmp
and
dec
push
mov
loop
mov
leave
sbb
outs
arpl
add
add
out
mov
add
rcl
push
(bad)
cmp
cmps
ret
pushf
clc
pop
cmp
mov
or
adc
push
sub
ror
fiadd
jmp
jnp
jecxz
or
push
cmps
jmp
and
mov
inc
std
xlat
cli
sub
lock
xchg
cld
idiv
pop
out
fdivr
sbb
or
jo
aad
or
ins
into
add
aam
js
lds
dec
(bad)
cmp
fidivr
scas
dec
dec
ret
push
aas
and
popa
shl
sahf
sub
in
mov
jne
outs
push
mov
jmp
out
loopne
xchg
sub
sub
lds
ret
(bad)
adc
push
sub
cmc
cli
hlt
mov
and
test
and
fucompp
out
push
sbb
push
cmp
(bad)
push
mov
push
in
xor
pop
pushf
out
push
and
rcl
sti
push
ret
fbstp
mov
dec
jns
mov
push
stc
pop
xor
adc
(bad)
stc
xor
ins
popa
or
into
add
call
mov
ds
test
pushf
fs
mov
or
std
inc
dec
scas
push
(bad)
aad
loop
(bad)
mov
hlt
aas
jae
xchg
pop
add
movs
jb
add
xor
mov
push
gs
mov
mov
jge
sbb
fisttp
jge
lock
xlat
not
jmp
xor
jns
push
(bad)
shr
push
inc
shr
out
fistp
cmps
call
(bad)
mov
jae
inc
cmp
hlt
jb
loope
je
xchg
(bad)
fdivp
mov
push
mov
stc
cmp
scas
popa
add
test
inc
inc
or
pop
ds
xor
mov
jmp
pop
mov
rol
rol
daa
jecxz
mov
aas
lds
(bad)
sbb
fsubr
loop
test
mov
fstp
adc
(bad)
pop
dec
sub
int
sub
aas
imul
pop
jae
push
rcl
sbb
call
in
(bad)
jecxz
sbb
cmp
iret
mov
lods
in
push
inc
jne
test
rcr
retf
dec
sub
cdq
adc
adc
or
ret
inc
push
fcom
scas
outs
frstor
dec
xor
mov
jge
push
fistp
push
fistp
inc
pop
iret
ins
mov
cmp
mov
les
pop
mov
stc
aad
cmp
in
add
(bad)
mov
push
cmps
add
fiadd
xchg
pop
mov
popf
dec
pop
sub
leave
dec
mov
(bad)
retf
fdiv
pop
dec
clc
pop
call
mov
adc
mov
add
js
jae
loope
ins
push
inc
fld
mov
pop
fxch
cmp
rcl
or
(bad)
repnz
or
movs
leave
sub
mov
outs
jmp
in
sti
retf
xchg
and
imul
into
sahf
mov
sar
fcomp
dec
mov
sub
ja
arpl
sub
and
jnp
xor
adc
jns
mov
mov
pusha
hlt
ds
xor
jg
dec
mov
loop
push
and
pop
sub
push
mov
daa
jp
fsubr
loopne
inc
mov
popf
loop
xchg
je
inc
push
mov
dec
retf
mov
cmps
test
repz
movs
push
leave
shr
push
pop
push
or
(bad)
xchg
xchg
cmps
add
jne
cmp
pop
icebp
pop
pop
mov
pop
sar
ja
mov
cmp
xor
retf
shr
pop
loopne
xchg
lock
mov
out
sub
pop
cmps
push
inc
or
mov
lods
xchg
add
xor
pusha
dec
xchg
mov
das
pop
and
xchg
fimul
cwde
int
(bad)
sbb
sub
stos
pusha
fsub
in
stos
and
add
push
test
movs
dec
and
sub
in
push
dec
cmp
dec
scas
js
add
sti
aam
or
inc
cmps
aas
leave
pusha
adc
sbb
mov
aas
xchg
dec
(bad)
inc
jnp
stos
push
add
and
out
sar
jmp
out
stos
add
and
jge
fcom
xlat
jl
xchg
cmp
fisttp
mov
mov
mov
xchg
mov
pushf
outs
out
xchg
(bad)
jbe
cli
test
push
mov
cs
aas
(bad)
sub
sub
rcr
sahf
mov
mov
(bad)
mov
xchg
rcr
pop
xor
sbb
sub
mov
adc
adc
mov
add
repnz
call
call
outs
cdq
stos
clc
lods
js
mov
xor
(bad)
lds
jecxz
lods
daa
jmp
loop
and
jmp
sbb
inc
jp
cs
sbb
sub
pop
sbb
inc
adc
jb
and
in
es
dec
fisubr
xor
outs
test
aaa
pop
sbb
(bad)
fcomp
push
(bad)
int3
imul
icebp
stc
int3
mov
mov
push
loope
rol
fwait
adc
adc
jns
mov
call
inc
push
imul
int
mov
mov
retf
pop
xchg
adc
xlat
int
int3
ret
cmp
pop
lods
test
push
pop
push
mov
jmp
fidivr
pop
into
cmps
leave
mov
xchg
jne
dec
fsub
les
push
aas
(bad)
jl
pusha
lods
jnp
fucomip
pop
in
getsec
dec
fimul
jae
mov
sub
jecxz
push
jmp
retf
mov
add
lea
and
jno
stos
pop
cmp
jg
pop
sbb
xchg
cmp
retf
jl
mov
jnp
or
stos
out
adc
rol
not
pop
outs
add
fcom
jmp
int3
xor
xor
cmp
jmp
fidiv
call
xchg
jmp
arpl
inc
add
int
and
add
pop
sub
rcr
ja
fwait
push
inc
mov
fld
mov
imul
pop
pushf
or
xlat
movs
rcl
daa
sbb
and
popf
in
cmp
mov
adc
jmp
test
dec
jmp
outs
adc
sbb
sub
inc
lds
mov
dec
sahf
inc
pop
pusha
mov
jp
push
and
xchg
xchg
stc
dec
imul
outs
enter
std
rol
sar
lods
or
push
adc
jns
jne
jl
sub
sbb
cmp
lods
repz
and
cdq
xchg
aad
sbb
push
or
cdq
xor
cmovp
push
mov
fs
cmp
call
popf
sub
nop
mov
pop
mov
scas
adc
imul
jns
or
repnz
inc
mov
dec
inc
call
test
pop
sar
mov
fadd
sub
icebp
imul
(bad)
iret
sub
inc
jge
mov
sub
popf
mov
jge
xchg
std
mov
push
lea
std
scas
cmps
out
repnz
lods
and
imul
adc
(bad)
fstp
push
lods
(bad)
mov
ins
mov
enter
cmp
mov
push
mov
xchg
adc
in
cmp
aas
stos
sub
sub
retf
mov
xchg
iret
into
or
and
adc
enter
or
repnz
dec
xchg
je
ficomp
dec
leave
icebp
sti
adc
retf
(bad)
(bad)
mov
pop
dec
mov
adc
push
addr16
ffree
movs
or
push
sub
inc
(bad)
mov
push
cwde
popa
jns
adc
pop
sub
repnz
jns
add
addr16
lahf
fdivp
std
(bad)
outs
aas
sub
fstp
fild
add
or
adc
movs
mov
dec
sub
out
test
adc
sar
in
mov
mov
ret
test
ins
sub
iret
ret
sahf
or
test
cwde
cmp
pop
pop
call
imul
adc
push
test
fist
xlat
jne
pop
jbe
call
or
nop
inc
lods
ret
lock
(bad)
lock
scas
(bad)
repnz
sbb
pop
movs
pusha
pop
fistp
mov
shr
mov
xchg
xor
xchg
push
mov
push
sub
shr
or
mov
push
and
(bad)
pop
mov
rcr
cmp
outs
mov
xchg
mov
shr
jle
pop
mov
mov
in
inc
call
jmp
sbb
rol
add
xchg
dec
xor
int3
int3
mov
pop
sbb
(bad)
lods
cdq
pop
jo
cmps
jge
xchg
xor
sbb
les
mov
popa
hlt
ret
addr16
inc
dec
pop
sti
clc
mov
mov
jge
arpl
outs
add
push
sub
dec
push
inc
imul
dec
mov
inc
aaa
fchs
fwait
push
and
shr
mov
adc
repnz
jns
cdq
shufps
ds
imul
mov
scas
jl
dec
pop
in
mov
add
rol
cmps
ret
shl
push
dec
je
(bad)
cmps
scas
dec
jecxz
scas
inc
fs
sub
or
test
test
sahf
popa
fmulp
fwait
xlat
xor
cdq
idiv
cmp
push
arpl
xchg
pop
jg
cmp
scas
shr
and
add
xchg
xlat
call
imul
cld
outs
pop
xchg
test
jb
adc
dec
mov
sub
cmp
jne
sbb
inc
call
push
jg
jns
popf
xor
sti
cli
stos
faddp
pop
ret
xor
in
pop
call
or
ja
sbb
add
cs
push
mov
cmps
enter
inc
in
or
std
stos
cwde
pop
(bad)
sar
push
and
scas
jl
mov
jp
(bad)
cld
or
pop
adc
leave
outs
xchg
cmp
jbe
(bad)
sbb
sub
dec
(bad)
in
out
int3
lock
test
xchg
outs
sti
sar
jmp
lods
test
stc
cmps
js
xchg
dec
dec
xor
xchg
and
ss
int3
jb
jae
sbb
add
mov
test
inc
dec
fdivrp
sub
dec
in
out
nop
mov
cmp
and
inc
(bad)
aam
xor
xchg
mov
in
cmp
sbb
and
push
test
pop
les
nop
mov
pusha
pop
in
push
mov
(bad)
fld
mov
call
and
cld
dec
test
jmp
fmul
pop
inc
jmp
ficomp
push
stos
push
pop
(bad)
imul
test
ins
clc
adc
in
mov
ficomp
xor
inc
sar
xchg
xchg
mov
popa
cmp
out
ret
push
aam
pop
jmp
mov
arpl
int3
sti
cmp
dec
sahf
outs
(bad)
fdiv
mov
pop
and
std
adc
mov
mov
in
fldcw
or
xchg
pop
cdq
mov
das
jno
cmc
xchg
in
mov
or
inc
nop
ror
test
pop
movs
(bad)
cs
dec
int
(bad)
xor
mov
cmps
push
rol
sbb
imul
fldenv
cs
test
cmp
jle
jge
adc
sbb
scas
outs
ficomp
mov
in
cmp
mov
sti
xlat
sbb
pushf
into
std
jbe
fmul
push
movs
dec
jae
push
enter
inc
rcr
pop
add
sub
ss
xor
or
lock
les
cmp
lock
lahf
lea
and
dec
jmp
stos
fnstcw
dec
xchg
out
push
sub
or
icebp
mov
mov
jmp
pop
out
loope
dec
rcr
inc
and
jbe
jb
neg
mov
ret
into
sbb
(bad)
or
sub
jmp
mov
or
sbb
scas
mov
or
aam
gs
(bad)
and
push
outs
shl
mov
ds
test
push
pop
adc
ins
or
ins
movs
add
sbb
shr
into
stos
push
in
cli
sti
dec
mov
test
ins
cdq
push
stos
aaa
dec
jg
sbb
pop
cmc
cmp
adc
sbb
fnstenv
and
leave
add
xor
cli
xchg
stos
add
inc
in
jae
xchg
and
push
add
pop
fst
jecxz
sahf
mov
xor
sbb
sbb
and
cmc
(bad)
fdivr
xchg
cs
movs
add
(bad)
sahf
or
mov
dec
jmp
push
xlat
test
retf
mov
cld
stos
pop
inc
retf
rsm
fimul
in
and
shr
pop
xor
xchg
xlat
test
adc
lahf
xchg
pop
out
xor
(bad)
clc
xor
adc
sbb
neg
out
inc
cwde
sahf
mov
sahf
xlat
push
into
mov
dec
pop
mov
jle
aad
adc
inc
pop
mov
pop
xor
jae
stc
push
movs
stos
inc
push
in
dec
xchg
dec
rol
enter
jnp
pop
add
repnz
call
clc
lods
in
inc
mov
mov
jb
clc
jmp
ins
xchg
aaa
bound
or
mov
je
inc
pop
or
or
dec
cdq
fcomip
retf
lods
jp
push
div
test
mov
nop
push
xor
dec
adc
mov
or
pop
pusha
cdq
sub
icebp
into
test
or
mov
dec
mov
cld
inc
ret
fdivr
jge
clc
pop
in
xchg
pop
repz
scas
xor
inc
addr16
jge
(bad)
call
dec
jp
out
pop
sub
jl
xchg
iret
add
icebp
xchg
push
sub
mov
fisub
(bad)
jmp
in
mov
add
mov
and
loope
mov
mov
add
imul
mov
arpl
jnp
xlat
stos
mov
xchg
ins
sub
adc
dec
mov
scas
neg
scas
(bad)
sbb
sahf
les
and
fnstsw
arpl
xor
add
pop
and
mov
outs
stc
test
jmp
lahf
das
rcl
aaa
in
mov
cs
push
shr
repz
js
mov
mov
push
(bad)
mov
add
mov
in
movs
xor
cmp
jnp
movs
loop
lods
cmps
in
cli
(bad)
out
into
mov
pop
pushf
pop
mov
pop
shl
mov
std
mov
leave
aad
jg
cmp
mov
push
mov
jge
sbb
inc
lods
mov
das
jmp
mov
pop
fld
scas
outs
or
popf
pop
push
dec
and
add
mov
xor
es
dec
xchg
xchg
mov
popf
cmp
and
xor
push
lods
mov
shr
and
dec
push
add
jp
dec
daa
mov
mov
xor
jo
sub
movs
xor
shl
test
push
in
out
mov
jp
jmp
cmp
ret
aaa
lds
inc
mov
inc
(bad)
out
cmp
ds
pop
daa
hlt
ins
pop
bound
or
adc
sbb
pop
push
stos
mov
or
std
sbb
jge
(bad)
test
inc
inc
or
xchg
push
mov
jecxz
mov
aad
mov
setnp
mov
repnz
data16
neg
jno
jecxz
add
or
cmp
xlat
cmp
and
mov
add
push
test
addr16
(bad)
(bad)
inc
mov
pop
clc
repz
push
mov
mov
dec
cmp
stos
cwde
sub
cmp
sbb
add
rcl
mov
outs
dec
ins
dec
mov
data16
lock
fsub
inc
push
sub
inc
mov
lock
inc
push
cmp
dec
jge
mov
dec
or
mov
sbb
or
call
or
cmp
adc
out
mov
pop
fstp
ins
mov
loope
adc
jb
cld
push
mov
shr
sub
out
mov
push
or
hlt
pop
dec
out
ins
and
dec
or
ds
and
ds
out
sti
or
int3
ds
push
jne
inc
mov
sub
cmps
les
in
pop
xor
and
cmps
aad
inc
inc
pop
push
mov
repz
or
std
test
cwde
or
and
jl
cmp
data16
push
xlat
sub
outs
(bad)
sub
(bad)
outs
sti
test
xor
mov
cmp
inc
and
or
mul
(bad)
mov
push
sub
and
pop
mov
mov
push
data16
mov
aaa
fld
loope
jb
pop
xchg
aam
ins
mov
adc
add
sti
sub
cli
mov
cdq
in
lahf
(bad)
rcl
icebp
adc
sti
mov
aad
pop
jmp
in
adc
dec
fist
cmp
mov
ficom
pop
addr16
xor
shl
pop
mov
dec
pop
mov
xchg
inc
mov
pop
in
hlt
pop
cmp
movs
jmp
dec
fcmove
(bad)
mov
cdq
add
std
hlt
pop
fadd
(bad)
adc
push
cs
(bad)
sub
jmp
pop
pop
dec
inc
jg
sti
repz
data16
add
ds
mov
stos
int
ds
inc
jp
or
rol
sub
pop
mov
and
int
fld
jbe
(bad)
ins
or
add
xchg
inc
xchg
pop
mov
add
sub
or
(bad)
pop
nop
das
dec
popf
iret
jg
repz
rcl
cwde
addr16
mov
add
lahf
add
and
jns
(bad)
fcomp
xchg
mov
fwait
jp
sub
mov
fdiv
mov
inc
imul
lods
cmp
das
jge
add
stc
test
inc
add
std
dec
fcmovnbe
add
xchg
dec
xchg
aaa
push
dec
or
daa
nop
sub
mov
jne
aam
stos
mov
arpl
and
loopne
test
and
sbb
adc
cmps
jmp
mov
inc
cmp
jno
push
sbb
repnz
pop
sub
inc
mov
fidiv
pop
jne
inc
mov
cmps
(bad)
sbb
adc
sub
mov
xor
push
fild
xchg
sti
movs
out
sub
lahf
and
push
inc
mov
adc
test
and
mov
jnp
jb
leave
pop
mov
push
iret
cmp
adc
pop
(bad)
or
addr16
dec
cdq
fidivr
cs
lods
cwde
jbe
cmc
les
mov
xchg
pop
test
js
sbb
jae
ror
test
push
sahf
mov
xchg
out
aam
xor
out
mov
bound
test
out
add
pop
add
sbb
out
dec
icebp
loop
pop
idiv
ror
mov
cmp
popf
inc
and
out
(bad)
out
dec
mov
add
hlt
ds
loopne
and
mov
xor
xor
test
lds
inc
ins
or
push
mov
mov
add
and
mov
sti
iret
cs
mov
bound
ret
mov
jmp
in
movs
daa
jmp
pop
pop
or
adc
mov
push
xor
and
xor
sbb
aaa
enter
movs
add
inc
inc
fld
jecxz
and
push
movs
call
(bad)
xlat
std
ins
hlt
std
xchg
jp
jl
inc
outs
and
int
fist
and
nop
hlt
fadd
js
pushf
imul
sbb
sti
ja
jg
loop
fcmovne
jmp
int3
aas
arpl
jns
loopne
adc
adc
call
mov
jg
inc
push
test
xchg
jae
nop
stc
and
xchg
sbb
mov
mov
adc
xchg
mov
push
pop
dec
xchg
mov
inc
mov
repz
movs
or
ds
mov
clc
pop
cmp
jp
adc
pop
jne
jp
or
mov
mov
fcmovnbe
cmp
(bad)
xchg
xor
outs
push
ss
push
inc
addr16
jae
or
jl
mov
inc
shl
sub
aad
retw
imul
push
mov
jb
ds
popf
fwait
push
pop
(bad)
jg
bt
in
and
push
sub
mov
shl
mov
fwait
shl
stos
dec
push
jnp
mov
stos
jecxz
mov
xchg
ror
js
outs
cmp
fsub
nop
stc
mov
iret
ficomp
adc
test
mov
scas
xchg
and
ja
xchg
pop
fsubr
jns
rol
pop
cmp
fsubr
dec
fbstp
repz
dec
adc
sahf
mov
ins
xchg
sbb
jmp
xchg
cli
cmp
in
jmp
cmp
je
dec
cmps
call
sub
mov
lods
(bad)
(bad)
lahf
fdivr
push
aad
inc
sbb
in
jne
adc
call
dec
sub
sbb
sub
add
(bad)
arpl
out
add
and
mov
cmp
xlat
gs
mov
aad
test
ficomp
inc
arpl
xor
inc
leave
shr
xchg
ins
and
push
xchg
inc
mov
push
and
xlat
sbb
ror
or
adc
repz
hlt
inc
out
jmp
mov
and
rcl
cmp
mov
es
ret
mov
(bad)
dec
cmp
add
dec
(bad)
in
mov
jp
cmp
and
jecxz
clc
xlat
bound
mov
(bad)
push
inc
sbb
add
mov
xchg
in
mov
xchg
dec
jno
jecxz
pushf
inc
or
outs
call
adc
movd
jb
dec
outs
xor
hlt
and
sti
rol
inc
add
fdivr
push
or
jne
test
xchg
add
test
sbb
sub
pop
in
or
cs
push
mov
inc
shl
std
ins
adc
mov
outs
shr
mov
pop
xchg
stos
dec
jmp
clc
xchg
sub
xchg
or
sub
mov
loopne
xchg
jg
mov
xchg
adc
sbb
std
sahf
push
inc
scas
push
dec
or
scas
cmp
dec
jb
outs
cld
inc
inc
(bad)
ja
sub
and
mov
jno
mov
in
adc
(bad)
fyl2xp1
jnp
repz
retf
pop
xchg
push
stos
dec
pop
inc
lea
push
pop
jnp
inc
cmp
xor
cmc
jnp
push
adc
aas
push
pop
push
fwait
aam
ret
cli
push
sbb
fs
cdq
cmp
sbb
fst
pop
pop
(bad)
cmp
inc
pop
lods
mov
sbb
inc
jno
jp
mov
lods
(bad)
aam
out
mov
push
jecxz
pop
hlt
pop
sti
mov
jne
dec
pop
movs
and
push
mov
stc
stc
fld
sub
add
push
lahf
call
mov
add
(bad)
adc
mov
adc
and
or
pop
in
dec
pop
mov
rcl
dec
or
mov
mov
out
cmps
das
(bad)
xchg
ins
out
fwait
or
imul
xor
cmp
pop
test
jle
xchg
mov
imul
xor
xchg
cmps
dec
shl
pop
sbb
xchg
nop
sbb
push
pop
clc
mov
adc
and
push
lock
fdivr
xlat
in
mov
movs
dec
dec
pusha
sbb
aaa
ja
lods
daa
push
xor
pop
mov
or
popf
xor
jecxz
aaa
xor
jbe
push
pop
mov
xor
or
mov
pop
xor
jge
psubsb
pusha
cmps
inc
rcl
and
mov
outs
cli
cdq
ds
fiadd
imul
xchg
xchg
ds
and
ins
jg
mov
(bad)
in
dec
ret
test
lods
movs
movs
mov
out
inc
push
lods
sbb
outs
push
jecxz
je
mov
(bad)
and
xor
adc
sub
int
sub
xlat
test
push
or
cs
shr
call
mov
jne
not
fld
pop
push
mov
dec
imul
add
dec
mov
mov
xlat
add
outs
mov
dec
inc
clc
ret
les
adc
add
xchg
push
add
(bad)
(bad)
arpl
mov
fucomi
mov
mov
jae
adc
pop
ret
mov
retf
xchg
dec
fiadd
ror
sub
arpl
arpl
enter
cs
out
icebp
nop
and
loopne
dec
pop
add
jns
xor
jae
mov
stos
jo
rcl
add
(bad)
mov
out
in
jge
pop
daa
mov
lahf
xor
scas
in
aaa
mov
ins
(bad)
dec
push
mov
retf
jle
pop
mov
call
shl
gs
add
mov
rcl
gs
and
aaa
retf
adc
xor
jg
jo
int3
scas
cmp
std
call
mov
fwait
enter
or
test
xor
inc
call
dec
pop
std
int
stos
enter
jae
push
outs
xchg
fwait
inc
and
fs
je
fdivr
ret
es
rol
xchg
int
jl
xor
sti
test
out
loopne
pop
in
push
je
cs
inc
(bad)
inc
nop
jae
stc
adc
std
es
lock
rcl
rcr
sub
mov
(bad)
fwait
mov
pop
popa
sbb
jbe
fadd
xchg
loopne
inc
add
jge
cs
out
lahf
pop
sub
enter
movd
jg
jmp
stc
xor
push
scas
sbb
ds
stos
pop
movs
sbb
icebp
or
sbb
mov
imul
(bad)
aad
iret
push
adc
push
jmp
call
(bad)
repnz
cdq
fwait
adc
dec
int3
stc
fwait
shr
int
rcr
dec
add
dec
sub
mov
cli
xchg
jge
test
in
adc
ins
jle
pop
cmp
nop
cdq
repnz
mov
mov
jge
inc
mov
pop
jge
call
xor
push
je
jbe
ror
mov
or
imul
jbe
not
or
aam
stos
popa
test
(bad)
lock
xor
psubq
test
mov
cmps
mov
jge
mov
xchg
fild
fmul
retf
les
lahf
adc
xlat
addr16
pop
outs
xchg
or
cmc
mov
arpl
sub
rdpmc
adc
out
adc
pop
or
dec
stos
and
(bad)
and
fistp
add
sahf
(bad)
jnp
jbe
dec
add
jle
xchg
inc
shl
(bad)
imul
add
mov
mov
push
outs
js
xor
cmps
aaa
pop
test
sub
xor
add
aaa
xor
xor
mov
sbb
ds
mov
sbb
dec
adc
not
or
(bad)
data16
or
stc
sub
fs
fldcw
jns
jg
cmp
int
pcmpeqb
dec
icebp
out
mov
fwait
(bad)
xchg
pop
movs
sbb
int
xchg
dec
jp
and
enter
xor
inc
jg
popa
outs
repz
sub
ds
inc
frndint
enter
shr
adc
pop
data16
icebp
inc
sub
ins
popf
xchg
das
in
jno
ret
bound
pop
fdivr
movs
test
loopne
mov
push
mov
aas
cld
inc
add
aas
test
cmp
pop
sbb
push
or
mov
inc
(bad)
clc
shl
inc
popf
mov
daa
test
mov
add
std
ret
aad
add
pop
ja
in
push
and
or
push
outs
mov
out
inc
jg
repz
jb
inc
mov
stos
jbe
xchg
xchg
cmp
call
mov
xchg
inc
(bad)
dec
repnz
sub
sub
xor
div
ja
mov
sub
and
out
push
mov
rcl
xchg
js
mov
and
jae
jne
repnz
test
pop
mov
fnstenv
mov
mov
clc
mov
sbb
add
fimul
mov
push
icebp
lods
outs
rcl
test
daa
inc
pusha
jmp
jae
and
add
mov
push
jns
pop
mov
xor
and
push
shl
loopne
and
sar
dec
jmp
lods
fwait
push
in
push
rcl
iret
dec
adc
fwait
loopne
loope
in
push
retf
adc
jle
add
pop
test
mov
jge
cwde
inc
out
sbb
dec
fimul
sbb
add
mov
gs
sbb
call
push
cdq
dec
sbb
xor
dec
add
fs
adc
call
clc
frstor
scas
outs
fsub
and
jecxz
push
in
lahf
jmp
sbb
div
mov
mov
retf
xchg
mov
xor
adc
and
das
(bad)
mov
add
bound
push
mov
js
or
cmp
pusha
lods
sti
hlt
data16
jp
cdq
inc
sar
nop
cmp
call
cmps
push
push
and
repnz
mov
add
ret
jae
pop
mov
repnz
pushf
popa
bt
mov
std
mov
daa
mov
call
out
outs
enter
and
lds
cmp
dec
bound
lea
add
mov
and
jb
fisubr
add
and
jl
push
inc
or
cmp
xchg
test
stc
push
retf
das
test
fstp
cmps
add
adc
adc
aad
mov
sbb
jmp
xchg
mov
jg
sub
sbb
jbe
or
add
out
pop
sahf
or
sub
sbb
out
add
pop
push
pop
adc
ins
(bad)
cld
mov
jne
aad
(bad)
ja
xchg
cmp
call
movs
clc
sbb
cmp
fsub
cmc
pop
cmp
gs
jmp
xor
jg
sub
inc
push
cmps
sbb
dec
jae
add
movs
dec
push
lock
push
mov
int3
imul
jns
push
cmp
shl
(bad)
lea
xchg
frstor
add
sbb
inc
mov
clc
fnstsw
loope
mov
idiv
cld
push
add
xchg
add
push
(bad)
out
fisubr
inc
push
lock
mov
pop
aam
jecxz
xor
jns
and
mov
jo
push
(bad)
cld
jne
iret
cld
adc
pop
xor
scas
xchg
push
std
jl
ret
cli
cmp
call
aam
and
mov
out
test
cmp
mov
ss
mov
jmp
adc
repnz
bound
fild
imul
repnz
adc
inc
mov
mov
fwait
fwait
inc
pop
das
pop
sbb
sub
xchg
adc
mov
ins
or
pop
(bad)
jb
sub
pushf
mov
mov
jp
sub
pop
pop
loop
push
push
lock
dec
xor
lahf
pop
xchg
test
les
arpl
dec
int
jmp
bound
lods
adc
addr16
jge
mov
aaa
or
dec
mov
jne
push
push
inc
xchg
fwait
(bad)
push
inc
mov
cmps
clc
lock
mov
cmp
popa
and
add
je
das
dec
mov
add
out
sbb
ss
int3
pop
cld
add
out
push
adc
xchg
dec
pusha
popa
push
adc
jns
loopne
xchg
jns
or
pop
imul
into
push
jp
out
mul
rcl
loop
cmp
sub
lahf
sbb
lea
and
sub
lods
dec
cmp
aas
pop
xor
pop
jl
inc
pop
neg
int3
repnz
call
pop
push
add
and
leave
xchg
pextrw
mov
pop
loop
jae
jg
(bad)
(bad)
loopne
repz
or
lods
outs
daa
push
sti
or
ret
inc
mov
mov
pop
enter
mov
popa
pop
cmp
cmp
add
xor
fwait
mov
sbb
fs
lods
sub
scas
ins
xchg
mov
pop
mov
pusha
rcr
pop
repnz
jmp
shr
xor
imul
or
les
stos
fdiv
push
sahf
xor
mov
mov
or
loope
or
add
xchg
xor
jge
sbb
sti
rcl
jmp
xor
and
mov
popa
dec
pop
jp
sbb
jne
out
retf
or
mov
retf
and
mov
in
jmp
push
ja
adc
push
mov
jbe
ja
adc
sub
push
loopne
fwait
jno
rol
scas
icebp
pusha
pop
add
dec
shl
test
mov
xchg
sbb
sub
dec
mov
or
or
push
stc
cmp
data16
xor
loope
iret
(bad)
jmp
neg
aas
adc
sbb
repz
sbb
(bad)
movs
cmp
test
xchg
in
gs
add
push
push
jae
pop
movs
cs
cmp
and
rcr
jecxz
in
fs
dec
(bad)
adc
out
mov
stos
fcmovnb
gs
fdivr
call
hlt
cmp
inc
cld
stc
or
mov
jne
and
and
push
push
jnp
out
jge
sbb
arpl
inc
sbb
push
cmp
pop
and
rcl
inc
mov
jg
stc
jbe
(bad)
mov
pop
jbe
adc
push
mov
pop
out
mov
xchg
or
mov
adc
cmp
or
out
xor
je
inc
aaa
add
push
inc
das
nop
add
es
jns
push
out
(bad)
mov
dec
mov
push
stos
arpl
mov
push
inc
scas
or
pop
out
imul
hlt
jecxz
test
push
nop
xchg
mov
int
push
jnp
jnp
mov
xchg
(bad)
daa
dec
inc
adc
aaa
cmp
xchg
lods
adc
push
test
outs
mov
sbb
lea
or
inc
lods
mov
sbb
xchg
je
je
out
and
mov
das
(bad)
imul
fstp
adc
dec
movs
push
scas
inc
cmc
xor
sub
test
mov
push
rcr
clc
pusha
add
push
int
fimul
aaa
or
ja
test
lods
xchg
or
mov
sub
repz
dec
pop
and
mov
push
cli
xchg
pop
and
lods
jnp
jb
mov
xor
scas
and
addps
pop
aaa
dec
rcl
(bad)
sti
lahf
fstp
imul
test
sbb
hlt
repz
jmp
push
fnstcw
sbb
out
xor
lods
aad
(bad)
pushf
test
es
and
mov
test
or
add
arpl
ja
(bad)
lods
cmp
repz
sub
pop
aaa
sub
mov
jbe
imul
push
mov
aaa
in
mov
jnp
btc
sbb
(bad)
xlat
ret
cwde
jno
mov
mov
rol
sub
xchg
mov
inc
sub
mov
imul
lock
js
scas
cmp
fidiv
sub
sti
mov
jecxz
inc
pop
scas
inc
je
stos
aam
out
dec
push
es
dec
je
int
retf
leave
push
jb
pop
sub
xor
cmp
mov
push
call
cmp
aam
rcl
xchg
sbb
sbb
ret
mov
jo
fidivr
out
(bad)
lds
jb
in
mov
sar
mov
test
xchg
push
dec
mov
imul
fimul
gs
imul
jno
mov
in
pop
cmp
xor
add
mov
movs
loop
jnp
push
adc
out
jp
xchg
dec
jne
jne
repnz
test
or
xor
loopne
sbb
pop
jmp
ror
fisttp
stos
sbb
mov
adc
cdq
ins
loope
xor
xchg
xlat
fdivr
mov
fs
movs
cwde
loopne
clc
xor
cwde
loope
push
xor
jo
fsub
scas
lds
ds
adc
push
pop
(bad)
movs
in
(bad)
icebp
ficomp
ret
imul
bound
(bad)
in
mov
inc
mov
xchg
sbb
lahf
call
jg
ins
test
mov
(bad)
ins
cmps
fwait
push
scas
mov
cmp
adc
call
loope
cld
out
stos
jg
test
cmp
out
push
movs
mov
jae
sbb
xor
mov
xchg
(bad)
jmp
in
out
ret
ret
jno
fs
push
cmp
out
imul
jmp
xchg
gs
ret
cmp
lea
ret
push
sub
test
pop
xchg
xor
movs
sub
js
xor
or
call
pop
jns
test
or
cmp
sub
mov
push
ins
push
mov
clc
rol
and
mov
xchg
imul
ja
sub
push
add
int
dec
push
push
loop
xchg
imul
cmp
xchg
neg
test
add
stos
push
mov
test
into
sbb
jo
test
jb
cmp
and
popf
push
push
and
jmp
ret
and
stos
pop
xchg
cld
inc
test
shl
add
pop
cmp
int
int
adc
leave
lods
or
scas
cmp
aaa
loopne
rcr
cli
add
in
lock
and
mov
add
mov
mov
jecxz
sub
mov
inc
xor
xchg
adc
test
jle
pop
in
pop
push
out
cld
adc
pop
gs
push
jp
mov
sti
movs
cmp
fnstcw
pusha
out
cli
jg
or
push
cmp
sahf
pop
leave
lods
stc
(bad)
ins
icebp
loope
inc
sub
lock
popa
push
xor
(bad)
repz
mov
retf
push
mov
push
loopne
cmp
arpl
retf
pop
repnz
and
mov
add
jo
and
dec
mov
ja
pop
sti
sbb
sbb
dec
sub
call
pusha
lods
pop
(bad)
sub
jo
cmp
pusha
mov
push
dec
lahf
cmp
jno
jl
or
fisttp
and
cmp
xor
jp
sub
dec
pop
xor
mul
jmp
inc
retf
popfw
or
(bad)
mov
inc
xchg
leave
xchg
xchg
xchg
jns
sbb
mov
jb
xor
aaa
jge
loope
mov
jne
pop
stos
out
cmp
mov
xchg
add
pop
xchg
scas
stc
sbb
fwait
popf
mov
mov
neg
outs
jl
dec
sbb
xchg
pushf
arpl
jno
in
dec
jg
aad
lahf
xchg
stc
xchg
inc
dec
sbb
out
inc
mov
mov
in
inc
sar
test
inc
mov
sbb
pop
ss
or
inc
mov
out
cs
add
loopne
pop
push
data16
loop
ror
rcl
fldl2t
call
pop
in
dec
lods
push
push
in
cmc
(bad)
mov
pop
aam
and
ins
stc
mov
push
push
sbb
(bad)
dec
sub
(bad)
ret
jp
ja
shl
xchg
sbb
ret
adc
inc
push
mov
rcl
in
cmp
or
or
push
sbb
cwde
repz
and
cli
loop
sub
outs
mov
pop
pop
sub
fisub
(bad)
cdq
jmp
dec
mov
sbb
cmp
(bad)
cmp
xchg
dec
stc
mov
lea
xchg
rcr
popa
mov
fisubr
push
ret
punpcklwd
popf
push
push
jbe
stc
mov
les
or
cmp
inc
cmp
inc
enter
daa
mov
aam
mov
mov
xchg
mov
fcmove
cmp
jnp
xchg
lods
dec
xchg
xor
or
push
in
pop
in
icebp
jge
mov
push
lods
xchg
and
outs
push
xchg
adc
cmp
add
lock
lods
lods
data16
ds
inc
je
dec
lods
test
mov
cli
sub
mov
add
das
test
inc
dec
call
out
pop
pop
in
jb
scas
jmp
mov
push
inc
xor
cmc
mov
mov
pop
inc
jg
fst
jns
out
out
jno
sbb
mov
xchg
xchg
and
sbb
and
test
in
inc
sub
clc
sub
js
or
mov
sar
push
leave
jg
popf
fwait
xchg
imul
pop
ret
xor
mov
jmp
inc
add
in
adc
jmp
and
add
push
jns
dec
add
adc
jl
cs
fldcw
fiadd
jns
aaa
clc
sub
add
jo
fprem
xchg
pop
jmp
ds
or
nop
jmp
xchg
dec
cwde
fneni(8087
sbb
mov
dec
out
or
enter
push
cmp
pop
lods
dec
mov
xchg
dec
call
or
and
sbb
cmps
and
retf
int3
push
mov
aad
lahf
scas
xlat
pop
lea
rcl
rol
mov
lods
popf
fcom
fistp
jo
loop
or
out
pop
dec
mov
mov
nop
int3
(bad)
aas
sahf
leave
push
add
repnz
jmp
inc
mov
jg
jno
(bad)
jmp
mov
add
xlat
fdivr
and
or
dec
adc
ins
call
add
fcmovbe
push
sbb
mov
adc
setp
adc
cmp
jo
test
add
inc
mov
es
clc
cmp
(bad)
and
lock
arpl
enter
fiadd
call
mov
clc
popa
push
push
pop
or
sub
rcl
js
inc
dec
and
pop
mov
jnp
mov
pushf
push
movs
adc
daa
push
mov
mov
push
aaa
int3
ins
out
repnz
add
jle
sbb
push
fisub
ins
test
(bad)
mov
retf
inc
or
outs
ror
ins
js
fsub
pop
and
dec
push
pushf
sbb
and
and
scas
push
cmp
sbb
fsubr
retf
icebp
(bad)
dec
sub
xlat
jg
mov
movs
les
lds
mov
or
imul
loopne
scas
imul
pop
xor
fldcw
push
pop
sub
jne
mov
aaa
out
fbstp
inc
sar
sti
cmp
aas
inc
cwde
ret
fcmove
cmp
shr
cmp
ds
fnstsw
cmps
test
inc
jmp
and
mov
jo
lahf
movs
gs
cld
xchg
cmps
loope
(bad)
cmps
push
sbb
pop
mov
int
(bad)
dec
xchg
push
fsubr
push
mov
out
nop
jb
jbe
out
cmc
jae
mov
mov
fld
into
out
xor
jmp
sbb
jge
gs
sub
loopne
dec
adc
adc
sub
sub
or
lock
xchg
jmp
(bad)
xlat
(bad)
mov
mov
xor
mov
int
dec
mov
test
cwde
daa
loopne
mov
out
imul
dec
mov
clc
jg
mov
daa
je
mov
sub
popa
leave
call
add
test
pop
pusha
out
xlat
jecxz
and
popa
and
bound
sahf
dec
daa
jmp
ret
(bad)
cmp
cmp
mov
popa
or
and
xchg
pop
cmp
jae
loope
xchg
retf
and
xchg
cs
out
pop
sub
bound
inc
outs
dec
xlat
jo
add
and
neg
add
adc
js
aas
cmps
ret
pop
mov
test
xchg
(bad)
iret
data16
stc
dec
shl
stos
jns
sbb
xor
fcmovnu
xchg
sbb
clc
add
mov
in
into
sub
jmp
mov
inc
pop
jp
mov
lahf
cmp
lea
push
adc
ins
leave
push
xlat
sar
leave
fild
cmc
and
repnz
and
and
(bad)
dec
in
xor
inc
pop
icebp
pusha
mov
pop
mul
ret
jmp
jno
outs
mov
jge
cmp
imul
and
je
dec
add
push
(bad)
mov
into
push
or
or
cmc
mov
cmp
sbb
and
dec
test
cwde
(bad)
out
ja
pop
shr
into
sub
stos
add
mov
push
scas
inc
(bad)
xlat
push
outs
and
xchg
lods
hlt
fidivr
stc
mov
jnp
out
or
xchg
popf
(bad)
cmps
mov
cmp
push
shl
into
imul
push
out
mov
addr16
ins
inc
imul
fiadd
test
ret
imul
and
xchg
mov
das
outs
push
scas
scas
outs
dec
push
inc
xchg
dec
loopne
pop
je
outs
xor
push
clc
mov
sub
cdq
fs
repnz
sub
cmp
push
(bad)
inc
std
mul
fdivr
lds
adc
in
aam
xor
push
(bad)
mov
pusha
cmps
add
sub
dec
push
cmc
adc
pop
fnstsw
inc
or
cmc
mov
lock
pmaxub
xor
arpl
push
sti
adc
mov
sar
imul
or
fsub
mov
outs
xchg
mov
adc
call
sbb
and
xlat
lods
dec
mov
push
hlt
and
out
ds
dec
xchg
jae
pop
add
and
fist
loop
js
ins
mov
das
(bad)
jg
jp
mov
rcl
fs
stos
cmp
xchg
xor
int3
mov
ins
mov
inc
es
xchg
int3
pcmpeqw
sub
sbb
mov
pop
pushf
imul
jge
ficom
cmp
adc
not
fimul
enter
mov
movs
lahf
ja
and
mov
inc
mov
cdq
mov
push
in
mov
push
stc
xor
leave
pop
lds
call
ds
das
mov
or
adc
sub
adc
or
mov
fbld
iret
jl
pop
add
mov
pop
lahf
cmp
xchg
hlt
ret
pop
aam
mov
fiadd
push
mov
push
shr
xor
fwait
jecxz
and
mov
stos
repz
sub
jg
shl
mov
push
std
lods
sbb
mov
or
out
icebp
and
cld
adc
mov
pop
out
imul
jp
aam
adc
int3
mov
repz
xor
in
int3
sbb
fdivp
jne
std
int3
mov
call
lahf
push
sahf
xor
int
inc
adc
add
movs
dec
mov
or
ficom
and
xor
cpuid
aad
pop
cwde
ret
xchg
and
and
repnz
cs
std
xchg
xor
scas
loopne
in
popa
pop
push
lods
stc
hlt
shl
xchg
pop
int
sub
xchg
jbe
cmc
jnp
cmp
les
jmp
nop
mov
mov
aam
fisttp
in
sbb
inc
mov
fnstcw
xor
cmp
scas
add
fld
les
sahf
daa
inc
(bad)
push
out
aam
iret
test
mov
xchg
out
or
push
add
cmp
fld
mov
movs
(bad)
xchg
(bad)
dec
iret
and
xor
mov
adc
fldcw
in
mov
aas
and
bnd
(bad)
dec
je
mov
cwde
or
(bad)
sub
inc
ficomp
push
pop
aaa
add
(bad)
into
in
or
mov
scas
cmps
jae
xor
gs
mov
pop
pop
shl
inc
jp
pop
mov
mov
(bad)
sub
xchg
dec
scas
add
es
adc
cmps
imul
xchg
add
xchg
scas
dec
sti
jae
push
dec
mov
out
add
lods
fisttp
inc
popf
lock
or
mov
cmp
bound
fdiv
test
iret
dec
or
xor
xchg
inc
icebp
inc
jo
rol
cmps
cmp
xchg
cwde
gs
lahf
enter
mov
jmp
enter
out
or
scas
jb
movs
setbe
leave
in
std
xchg
adc
xchg
frstor
je
mov
rcr
inc
or
rcr
mov
pop
xchg
xchg
and
fsub
jle
sbb
lods
shl
loope
fidiv
mov
cmp
pusha
jae
nop
(bad)
cmp
jns
lds
add
iret
or
jle
hlt
and
rcl
xlat
clc
sar
fcomp
test
movs
pusha
push
inc
cdq
ret
inc
mov
ins
leave
xchg
ror
push
xor
xlat
mov
fisubr
inc
in
into
out
inc
call
push
mov
lea
push
je
dec
inc
rol
test
adc
sbb
(bad)
test
mov
push
mov
xchg
push
imul
jne
mov
or
daa
mov
jnp
fldenv
or
xchg
stc
shl
push
jmp
fdivp
jns
ins
out
pop
stos
push
outs
rcr
sub
cmp
call
add
sbb
cmp
xor
push
xor
and
daa
sti
fwait
pop
dec
xchg
ss
xor
(bad)
aaa
js
xor
jecxz
sub
test
fsubr
push
(bad)
std
mov
enter
mov
push
inc
sbb
sbb
and
test
jge
or
and
or
test
std
int3
inc
enter
test
sbb
out
push
mov
ja
sbb
or
mov
jmp
or
pop
mov
cmp
int3
pop
cli
jg
out
add
mov
inc
lods
mov
jns
cmp
mov
mov
xor
inc
cmp
jmp
daa
adc
push
js
jno
and
mov
ja
sub
retf
pop
in
pop
ret
out
or
sbb
mov
es
test
lea
rcr
ins
jne
dec
aas
cmp
push
es
test
ins
mov
out
outs
jecxz
test
std
or
or
push
sahf
or
in
mov
into
cmp
xchg
dec
adc
in
ins
jae
sti
mov
sbb
test
pop
push
pop
pusha
pop
add
in
sbb
clc
fstp
das
test
dec
gs
retf
stc
xchg
je
outs
sub
and
scas
dec
(bad)
adc
push
mov
call
or
shl
daa
aas
mov
jne
mov
fld
call
dec
mov
lahf
imul
mov
out
jb
daa
jg
cwde
fidiv
iret
inc
jmp
cs
inc
mov
cmp
mov
adc
xchg
repz
popa
pop
clc
fs
ins
add
dec
mov
jne
cmp
xchg
(bad)
adc
stos
mov
cmp
icebp
scas
sbb
mov
xchg
push
(bad)
int3
out
jg
mov
push
inc
(bad)
jl
and
sbb
in
xchg
bound
pop
mov
cdq
jo
ret
call
push
fstp
stos
mov
and
dec
fnstcw
lock
add
popa
jecxz
dec
fcmovnbe
adc
outs
rcl
sub
in
jne
jp
pop
fwait
shl
or
loop
ja
cmovg
dec
in
pop
mov
mov
aas
add
push
cmp
inc
rol
shl
fs
sub
loop
cld
xor
or
icebp
xchg
cmp
or
or
hlt
dec
dec
fst
into
lods
das
dec
jae
add
and
sub
sub
mov
js
pop
call
mov
sbb
inc
pushf
clc
mov
add
ss
cmps
xchg
dec
outs
arpl
add
sub
add
add
out
shl
imul
mov
ficomp
enter
cmp
cli
mov
call
nop
and
inc
repz
jns
add
push
inc
addr16
test
dec
dec
rep
pop
mov
pop
lods
xchg
cld
dec
mov
hlt
xor
jb
jecxz
arpl
sub
jl
and
cmp
add
into
ins
pop
lds
and
xor
popa
in
mov
repz
mov
mov
repnz
je
jmp
iret
sbb
dec
push
jg
jmp
push
je
sahf
aas
shl
retf
punpcklwd
(bad)
pushf
jno
les
les
or
add
pusha
neg
retf
dec
mov
or
pop
int
mov
data16
mov
imul
fstp
bound
and
mov
in
cmp
lahf
pop
fstp
xchg
lea
mov
inc
xor
jg
xor
retf
test
cmp
call
inc
lds
push
int3
fld
mov
push
hlt
or
lock
sti
sub
shl
jg
mov
inc
dec
jne
inc
leave
fisubr
lods
ret
bound
fmul
adc
test
or
addr16
pop
add
cmp
jl
pop
mov
adc
idiv
xchg
jbe
cli
test
or
sti
scas
mov
ret
add
and
jno
xchg
stos
dec
jne
enter
mov
lods
out
pop
xchg
xchg
adc
sahf
mov
mov
loope
inc
shl
test
in
imul
sahf
stc
test
clc
jmp
fnstcw
(bad)
stos
xchg
dec
and
mov
xlat
loopne
mov
adc
cwde
mov
jmp
ficom
int
push
fisub
and
sub
push
add
pop
(bad)
arpl
popf
fwait
bnd
add
pushf
lds
add
inc
scas
stc
icebp
sbb
mov
out
mov
mov
in
mov
jne
rol
gs
pop
div
mov
cmp
aaa
icebp
aam
pushw
xchg
jp
mov
jbe
sub
lea
sub
jecxz
daa
push
sahf
(bad)
xchg
xchg
sbb
or
jecxz
ins
les
pop
loopne
mov
(bad)
rol
ss
cs
pop
push
mov
mov
inc
repz
sub
test
mov
repnz
add
pop
pop
pop
mov
iret
sub
call
int3
movs
xor
or
arpl
mov
cmp
jns
in
xchg
test
inc
pop
cld
xchg
and
push
mov
cld
mov
fwait
movs
rol
xor
int
pop
cmc
pop
xchg
int
ja
outs
call
cwde
cs
mov
push
push
push
ficom
js
call
or
inc
dec
push
iret
std
pop
retf
jmp
dec
push
dec
loopne
sbb
lods
xchg
or
xor
sbb
mov
std
ror
add
dec
out
outs
adc
test
sahf
xchg
pop
(bad)
into
cwde
stos
cwde
fcomp
cli
data16
mov
push
imul
xor
pop
pop
loopne
fstp
sbb
mov
cs
lods
lahf
(bad)
mov
lods
or
mov
mov
xchg
stc
fldenv
mov
fstp
mov
mov
sbb
mov
je
retf
cmc
addr16
cwde
xor
neg
add
imul
test
shl
add
rcr
aam
movs
cs
and
cld
out
fwait
mov
rcl
out
push
jmp
hlt
inc
movs
fdiv
push
pop
cmp
popf
das
movs
sahf
stos
icebp
scas
fidivr
sbb
dec
jle
aad
jo
loop
push
mov
xchg
sub
cwde
push
inc
ret
mov
std
pop
mov
stos
add
and
add
fldcw
pop
mov
mov
mov
sub
js
(bad)
jecxz
sub
je
in
arpl
mov
mov
cmc
leave
pop
ja
sbb
mov
adc
or
fs
push
or
push
fnstcw
jmp
retf
popf
adc
mov
fbld
sub
jb
push
lea
pop
jnp
cmp
xchg
dec
fiadd
icebp
out
sbb
icebp
arpl
dec
push
inc
add
test
adc
int
shl
test
outs
pushf
mov
(bad)
push
outs
mov
push
xchg
and
int
(bad)
jns
lods
outs
cmp
push
scas
popa
imul
movs
xchg
aad
sbb
pop
xor
dec
pop
bswap
aam
mov
mov
repnz
mov
call
les
pop
add
fcom
(bad)
int
cmp
pop
(bad)
sbb
adc
sbb
mov
out
xchg
dec
fnstenv
pop
daa
pop
inc
mov
loope
add
push
cmps
mov
(bad)
push
ds
mov
int
pop
mov
mov
fucomi
sub
mov
sbb
iret
add
dec
push
xchg
jp
xor
mov
jnp
sar
mov
or
dec
jne
xchg
push
jmp
leave
push
test
sar
mov
push
xchg
pop
push
inc
(bad)
xchg
mov
neg
inc
jl
pushf
ins
mov
and
jnp
sahf
push
cdq
imul
repz
add
sbb
fdiv
mov
lea
int
jnp
xchg
cmp
xchg
push
sub
or
imul
xchg
call
outs
lods
mov
push
cdq
ins
dec
dec
in
and
mov
lods
shl
pop
sahf
mov
mov
or
addr16
(bad)
pop
mov
inc
xchg
xchg
jb
mov
cmp
js
and
dec
pop
jb
loop
cmp
pusha
add
push
loopne
adc
mov
and
fxch
dec
pop
repnz
sub
jmp
inc
mov
and
add
loop
and
push
imul
and
retf
cmc
clc
and
xlat
sbb
test
xor
fld
loope
mov
cmp
popf
mov
call
ins
push
imul
fimul
inc
inc
das
or
sub
ret
aad
xor
or
mov
mov
cwde
sbb
fsub
daa
in
ja
sbb
inc
dec
scas
test
adc
call
pusha
div
std
pop
or
pop
adc
movs
jmp
shl
pop
xchg
push
scas
jmp
pop
popf
add
out
shl
test
jmp
sbb
xor
test
mov
fisubr
ins
dec
jg
inc
lods
push
pop
cmps
movs
fistp
xchg
xor
inc
pop
js
mov
stos
ins
imul
xor
mov
cwde
inc
push
xchg
and
lods
add
mov
cmp
xchg
add
inc
loopne
mov
sub
push
cwde
jge
emms
push
xchg
dec
inc
mov
cmp
or
add
jle
mov
mov
jl
pop
mov
fiadd
jns
xor
xor
push
(bad)
or
dec
in
test
movs
add
sbb
mov
jno
mov
call
sub
push
inc
cdq
pop
jb
pop
pop
jg
test
xor
or
push
cs
pop
xor
jge
mov
mov
mov
mov
movs
sbb
mov
inc
pop
in
xchg
pushf
lds
jbe
ins
or
or
or
movs
push
xchg
inc
and
or
and
and
push
fdiv
sbb
mov
pop
leave
fbstp
movs
xchg
fdiv
pop
jnp
imul
test
movs
adc
sbb
icebp
in
rol
sub
pop
xchg
in
pop
or
add
(bad)
mov
fstp
mov
mov
push
stos
pop
ret
fcmove
int
pop
fstp
sbb
add
int3
pop
sbb
push
loope
mov
add
adc
sahf
aaa
ret
sbb
dec
or
fsub
dec
mov
shr
mov
lea
sbb
push
inc
mov
imul
pop
js
mov
mov
in
in
jle
ja
push
xor
add
push
(bad)
cmp
or
std
mov
add
pop
and
mov
mov
inc
hlt
iret
mov
jbe
dec
call
cmps
adc
jo
in
push
jg
push
cmp
neg
adc
push
daa
ss
outs
xchg
pushf
mov
pop
or
aad
sbb
gs
(bad)
xchg
jge
das
push
and
les
push
or
sub
push
mov
mov
loop
jno
xor
xchg
mov
jp
xchg
mov
movs
inc
fdivr
push
cmp
xor
fsub
jns
aaa
jmp
dec
cli
mov
or
and
imul
stos
pop
pop
pop
cwde
or
pop
and
add
jmp
call
inc
outs
cmp
cmp
dec
jg
sub
jnp
jge
mov
clc
mov
dec
mov
inc
out
ins
ror
mov
xchg
push
sub
cdq
das
ret
mov
pop
jmp
adc
mov
mov
sub
test
fwait
xchg
mov
mov
fdivr
sub
or
push
add
jmp
mov
add
daa
push
xchg
rcl
xchg
cwde
push
movs
inc
icebp
fs
aad
pop
fisubr
jle
adc
(bad)
mov
je
add
(bad)
(bad)
pushf
(bad)
into
xchg
sub
cmp
shl
and
and
aad
mov
sbb
div
mov
or
jbe
jmp
xchg
jl
jns
adc
cmp
pop
add
push
in
inc
aaa
dec
xor
clc
repz
dec
cmc
add
shl
int
sahf
aaa
push
push
sub
jle
sahf
inc
xchg
and
dec
outs
pop
pop
scas
push
cmps
jp
sbb
sbb
mov
stc
push
stc
jl
cmps
popa
test
mov
(bad)
jecxz
fiadd
xchg
adc
jno
xor
mov
push
fmul
pop
pop
test
mov
pop
mov
jb
and
cli
lods
ins
(bad)
fs
cmp
(bad)
mov
dec
out
sub
mov
mov
call
add
adc
aaa
int
dec
inc
sub
fnsave
mov
dec
or
or
lods
xor
jg
dec
sbb
push
sub
cmp
pop
sub
(bad)
mov
mov
enter
hlt
neg
push
and
fcomp
or
push
mov
in
or
hlt
cs
jecxz
inc
sti
ss
sbb
arpl
popa
xor
ficomp
iret
gs
pop
shr
pop
xor
inc
xor
inc
std
xchg
scas
xor
xor
pop
push
or
sahf
and
mov
xor
jp
add
mov
sbb
shr
jne
in
(bad)
repnz
cwde
leave
fs
call
jnp
sbb
popa
and
pushf
push
loop
mov
outs
sbb
lods
cmp
add
jno
mov
sbb
lea
(bad)
rol
lods
cmps
add
stc
leave
mov
push
iret
test
dec
pop
ja
cdq
outs
sub
sub
lock
cmp
sub
add
and
xchg
mov
sbb
jmp
inc
sbb
bound
push
push
int
mov
sub
pop
pop
(bad)
jns
push
jnp
or
das
add
mov
adc
cdq
mov
dec
call
push
xor
cdq
jb
mov
cmp
stos
das
jb
scas
and
mov
mov
lahf
retf
aas
add
xlat
fcomi
sub
or
test
clc
dec
es
inc
neg
stos
shld
xchg
popf
push
mov
cmp
push
inc
adc
fidiv
int3
inc
or
xchg
or
dec
ds
sbb
dec
mov
add
mov
fild
pop
cmp
mov
dec
sbb
cmp
xor
cmp
jle
sbb
movs
imul
sbb
push
mov
js
dec
xchg
jmp
cmove
aad
fs
ret
rol
pop
mov
(bad)
inc
stc
jae
xor
mov
pop
and
xor
xchg
rcr
stos
imul
jp
cmc
mov
imul
retf
js
call
or
pop
adc
mov
jmp
jp
mov
or
pop
test
cmps
mov
dec
in
and
sbb
mov
in
(bad)
pop
mov
in
iret
icebp
and
inc
imul
inc
push
cli
pushf
xchg
pop
mov
or
dec
mov
add
xchg
adc
add
mov
ss
cmp
pushf
not
(bad)
test
push
pop
mov
add
pop
test
out
jl
repnz
mov
dec
push
lds
test
xchg
repz
hlt
imul
loop
pop
adc
punpckhwd
clc
test
sahf
stos
jecxz
pop
int3
in
ret
fadd
pop
add
xor
mov
loop
or
xor
es
clc
cli
enter
in
test
jle
out
retf
test
les
loop
stc
repnz
por
cmps
inc
or
pusha
enter
int3
(bad)
cmp
retf
xchg
mov
mov
push
mov
bound
add
mov
dec
push
mov
push
sub
xchg
push
int3
sbb
pushf
add
add
inc
rol
gs
pop
(bad)
cmps
ficomp
xchg
(bad)
sbb
adc
sbb
and
test
jle
adc
in
or
loope
mov
mov
push
jl
sbb
mov
dec
loop
mov
stos
xchg
pushaw
mov
test
popa
pop
(bad)
jl
loope
cdq
dec
pop
into
pop
retf
iret
pop
mov
addr16
jno
mov
cmc
and
rol
je
sub
aad
jne
or
inc
pop
dec
in
dec
hlt
jp
(bad)
into
cmp
cmc
nop
into
push
xor
cmp
mov
mov
mov
inc
cmp
rcr
and
mov
mov
div
xor
out
aas
or
cs
shr
xchg
add
jp
or
pop
loop
cmp
xchg
leave
and
cli
daa
(bad)
mov
into
mov
aaa
lock
popf
and
cmp
inc
xchg
stos
add
cmp
ror
sub
sbb
das
bound
(bad)
(bad)
mov
in
jge
mov
add
mov
jne
and
cwde
out
rcl
push
and
iret
adc
arpl
xor
(bad)
enter
pop
xchg
idiv
repz
inc
out
inc
inc
cli
push
pop
xor
fdivr
lods
(bad)
ret
hlt
xor
repnz
es
push
xchg
mov
push
in
or
dec
push
mov
cld
xor
outs
adc
sbb
mov
cmp
push
aam
mov
data16
sub
jge
lock
cmps
inc
movs
inc
ds
mov
repz
mov
cmps
jecxz
inc
movs
arpl
jmp
mov
sbb
(bad)
into
xor
ins
adc
and
sbb
stc
inc
je
xchg
dec
ret
fsubr
dec
je
dec
das
ret
mov
shr
cmp
mov
shl
pop
push
adc
aas
mov
(bad)
int3
test
push
pop
pusha
inc
sub
mov
nop
(bad)
jo
xor
xchg
inc
and
push
sub
in
clc
cmp
push
(bad)
sti
aad
sbb
jmp
jbe
jmp
mov
std
ficom
imul
sub
nop
cmp
add
(bad)
bound
inc
fnstsw
cmp
inc
cmp
inc
inc
inc
retf
inc
cli
xchg
and
imul
cmps
adc
int
mov
pop
repz
int
jmp
lock
and
adc
fucom
inc
sbb
sub
mov
arpl
dec
lock
xchg
sub
inc
dec
int
mov
sbb
jno
stos
mov
jno
add
xchg
xchg
bound
div
retf
(bad)
dec
or
in
arpl
pushw
mov
fild
(bad)
mov
dec
jo
addr16
push
adc
lahf
int3
call
jmp
sub
pop
nop
pusha
xchg
shr
in
jmp
ds
fcmove
push
fwait
jae
cwde
push
xor
push
inc
mov
add
stos
retf
out
mov
jp
sbb
aaa
fmul
mov
sub
dec
hlt
push
fistp
idiv
(bad)
in
mov
cmp
outs
mov
out
and
sbb
xchg
pop
test
inc
mov
je
cdq
jmp
jno
ficom
lahf
mov
imul
ret
xor
jp
cli
xlat
mov
xor
cwde
xchg
jl
cmps
js
popa
fs
loopne
and
data16
push
inc
retf
std
test
mov
cwde
mov
push
xlat
pop
mov
ds
movs
nop
sti
xor
leave
push
mov
mov
ins
cmp
ss
adc
adc
pushf
loopne
adc
fs
adc
(bad)
imul
pusha
loopne
and
je
fucom
add
dec
xor
aaa
cmp
test
je
mov
push
fwait
push
inc
adc
fmul
addr16
xor
in
mov
pop
into
jl
push
es
aad
ja
shl
push
jbe
lock
push
mov
and
sub
in
mov
(bad)
adc
sbb
xchg
out
inc
sub
imul
mov
jo
sub
pop
ss
lods
std
enter
cmp
cmp
fadd
cmp
add
sahf
mov
pop
dec
xchg
jbe
jl
adc
sti
rcr
ror
loop
lock
repnz
pop
loopne
xchg
retf
jecxz
xchg
(bad)
in
sbb
fild
or
pop
jmp
mov
jle
mov
cmp
jo
add
sahf
or
xor
pop
repnz
jno
scas
xor
std
out
mov
lods
push
push
mov
imul
sbb
xor
jbe
lods
test
mov
and
(bad)
fstp
push
lods
push
call
data16
add
mov
sub
add
cs
jmp
pop
add
mov
xor
inc
xor
cs
call
mov
leave
add
add
xchg
(bad)
xchg
hlt
ins
mov
or
gs
into
inc
aaa
dec
adc
les
ins
cmp
ss
and
adc
loope
mov
dec
jo
iret
aad
add
push
push
cmp
pop
mov
shl
stc
mov
(bad)
cs
popf
(bad)
fcmovnb
in
mov
loop
ins
test
jge
stos
jns
cdq
add
adc
mov
shr
popf
xor
loop
fisttp
scas
into
dec
sahf
mov
mov
inc
rcr
push
nop
push
test
clc
mov
leave
add
and
shl
lock
outs
inc
mov
fstp
jmp
cli
jl
inc
or
inc
jg
xchg
mov
inc
fcomp
gs
sub
dec
les
push
outs
jae
or
mov
adc
(bad)
dec
push
push
xor
dec
sbb
and
ins
dec
(bad)
add
and
and
push
fistp
push
inc
push
add
addr16
push
and
mov
push
jo
fsubp
push
mov
jmp
in
out
icebp
mov
pop
inc
fiadd
mov
outs
loopne
cdq
adc
cmps
xchg
push
imul
or
add
pushf
bnd
pop
xor
push
jns
(bad)
or
cmp
dec
inc
fnsave
xor
sub
pop
or
repz
sbb
outs
lods
mov
sub
mov
xor
or
cli
es
xor
xchg
jmp
cmp
push
mov
sbb
dec
adc
aaa
stos
stos
sbb
and
(bad)
cli
(bad)
jge
in
and
repz
es
shl
sbb
mov
jecxz
inc
rcl
shl
popf
mov
cs
das
adc
cmp
imul
(bad)
adc
and
test
out
cli
fst
sub
rcr
sar
stos
add
sub
setb
pushf
mov
xlat
mov
dec
push
mov
cmp
adc
pop
jp
xchg
je
push
jmp
and
ror
popf
dec
aaa
inc
adc
js
imul
xor
xor
mov
sub
icebp
pop
inc
cmc
pop
test
and
shr
test
out
aaa
jecxz
push
sar
lds
les
sahf
lahf
mov
mov
(bad)
loopne
fiadd
xchg
inc
lds
dec
movs
test
xchg
sbb
das
cmp
fld
imul
jp
dec
and
push
dec
(bad)
mov
outs
in
or
push
xor
jg
arpl
fisubr
fadd
loope
cmps
adc
mov
xor
lods
xchg
jp
outs
mov
test
mov
repnz
shl
cs
das
aad
push
idiv
jge
add
and
repz
test
and
cli
dec
jle
lods
inc
pop
jmp
mov
into
repnz
dec
nop
nop
out
xor
jne
mov
xchg
fcmovnu
xchg
and
pusha
std
add
mov
aad
xchg
mov
jns
retf
xor
push
add
ds
jle
(bad)
cmp
xchg
sbb
gs
cmps
inc
aaa
jmp
ret
push
(bad)
adc
or
lods
out
outs
push
lea
les
adc
out
stos
loop
daa
sbb
mov
jae
xchg
mov
adc
test
jne
xor
daa
adc
sub
adc
dec
(bad)
shl
in
xor
xlat
cmps
xchg
iret
es
and
and
push
inc
cmps
pop
dec
add
xchg
sub
dec
loop
ret
out
out
fidiv
sar
in
int3
mov
mov
loopne
out
xor
mov
xlat
rcr
adc
dec
mov
dec
daa
movs
sahf
call
mov
sub
jo
outs
dec
add
xchg
data16
push
adc
iret
push
test
jmp
sahf
aam
inc
sub
jecxz
inc
jne
add
cmp
retf
cmp
fld
mov
mov
ins
xor
(bad)
xor
retf
dec
(bad)
push
pusha
shr
fwait
mov
test
mov
xchg
int3
repnz
arpl
test
inc
push
mov
cmp
stos
and
rol
rcr
xchg
jle
or
mov
inc
sbb
bswap
pop
xchg
test
aad
xor
adc
xchg
rcr
add
jmp
jl
or
xchg
jmp
out
cmc
jg
push
xlat
cmp
jle
pop
lahf
lea
out
dec
pop
cdq
jmp
ja
push
retf
iret
xchg
les
sub
xchg
adc
sti
xchg
pop
pop
push
add
inc
fld
xchg
inc
js
(bad)
and
pushf
pop
ffreep
jmp
add
cdq
cmp
fdivr
adc
fnstenv
ss
cli
mov
pop
sub
call
(bad)
and
loope
test
xor
in
lods
pop
adc
popa
ret
push
dec
adc
mov
inc
pandn
mov
test
mov
mov
xlat
pop
add
js
push
mov
cli
fisttp
ret
mov
lds
cmp
adc
and
mov
xor
test
cmps
(bad)
push
xor
xchg
dec
test
mov
jne
xlat
test
std
cmp
sub
loopne
xor
sbb
bts
sbb
mov
xor
jo
int
pop
iret
addr16
dec
xchg
dec
dec
in
mov
add
test
sub
add
data16
push
xchg
push
xchg
sbb
mov
xor
adc
lds
inc
retf
ret
push
jge
popa
stos
jb
lahf
xchg
push
xchg
gs
sbb
xor
or
jnp
ins
(bad)
shr
sbb
push
push
and
jp
mov
push
cwde
push
gs
out
test
aad
mov
xor
mov
cmp
lsl
bound
xchg
inc
sbb
aaa
loop
mov
(bad)
movs
test
movs
mov
in
dec
out
in
pop
sahf
sub
mov
lahf
jmp
std
dec
test
xor
fsubr
test
shr
jmp
movs
inc
rcl
sub
ins
lods
shl
ret
out
fmul
jg
pop
shl
jge
xor
(bad)
and
sub
(bad)
pushf
into
push
ja
or
sub
addr16
ror
stos
bound
mov
cmp
int3
out
dec
mov
fidiv
fistp
push
iret
(bad)
aas
push
test
lds
dec
popa
sub
push
call
mov
fs
dec
dec
cmp
xchg
aas
dec
je
test
dec
mov
push
sti
cmp
lahf
or
imul
mov
pop
add
daa
arpl
push
push
jmp
mov
clc
add
add
stos
loope
inc
in
mov
and
int3
jbe
int3
aas
push
cmp
xchg
and
out
xor
fbld
inc
cmp
mov
imul
cdq
(bad)
shr
push
int3
inc
(bad)
pusha
jp
lock
inc
lods
sbb
pushf
(bad)
xlat
psubsw
xchg
out
push
xor
inc
pop
and
sub
cmp
fistp
call
mov
(bad)
(bad)
xor
mov
fsub
add
mov
mov
shl
jmp
xchg
push
fild
and
adc
jmp
mul
add
std
sub
fwait
ss
fisubr
rcr
inc
cwde
cmp
outs
in
add
xor
hlt
rol
jae
cmps
pop
shl
ds
popa
push
jno
adc
int
enter
cmp
mov
(bad)
(bad)
(bad)
sbb
mov
jbe
jb
aad
inc
cmp
xor
mov
and
test
imul
jbe
es
xchg
mov
pop
mov
add
scas
fdivr
mov
lss
or
xchg
dec
adc
jb
jns
ins
mov
test
mov
ret
in
xor
daa
(bad)
dec
mov
xor
mov
in
loopne
sub
adc
stc
dec
repz
cmps
clc
sbb
and
push
push
jge
sbb
push
push
push
test
ret
jmp
movs
mov
(bad)
imul
push
mov
or
dec
in
xchg
jmp
daa
dec
enter
xabort
syscall
mov
dec
sahf
ja
xchg
mov
addr16
ja
lahf
mov
int
movs
les
cld
gs
xchg
or
cmp
xchg
int
dec
pop
sbb
(bad)
and
gs
jmp
sub
cmc
pop
pop
(bad)
sbb
xor
xor
or
ins
clc
mov
fisttp
pop
xchg
mov
sar
std
cmp
mov
pop
retf
and
pop
xor
(bad)
add
and
mov
or
push
data16
sbb
das
aaa
inc
fcomip
pop
dec
int3
std
pop
push
call
or
adc
call
cld
adc
jmp
outs
mov
adc
enter
out
pop
outs
(bad)
xor
lea
fs
adc
pop
inc
popa
hlt
cmps
push
outs
stos
into
pop
xlat
dec
add
mov
aaa
out
pop
add
ds
pop
and
scas
xchg
out
jne
dec
es
and
rcr
mov
aas
popa
adc
xor
cmp
into
sbb
inc
and
mov
loope
sbb
mov
aam
sub
cs
shl
inc
add
jne
movs
jo
push
in
xlat
or
movs
jmp
adc
jnp
aam
push
xor
inc
movs
inc
(bad)
xchg
ret
jbe
ins
jo
inc
jmp
out
push
mov
loope
inc
outs
adc
mov
jb
out
add
out
in
and
and
push
in
(bad)
jmp
fwait
sbb
sub
adc
sub
xchg
push
call
lock
and
sbb
cwde
cli
mov
xchg
stos
stos
fstp
cmp
push
adc
xchg
cmp
and
or
jnp
mov
and
jo
inc
inc
mov
or
fimul
cmp
mov
xor
gs
adc
push
icebp
je
pushf
sub
mov
and
jbe
mov
jmp
(bad)
push
pop
scas
dec
mov
addr16
or
xlat
cwde
out
xchg
(bad)
jl
jnp
mov
jb
dec
jo
mov
dec
std
adc
ret
das
loop
ja
ds
pop
dec
fwait
(bad)
int
pop
sar
xor
lahf
iret
into
popa
and
arpl
add
arpl
pop
pop
jb
push
jmp
lea
not
adc
jae
mov
fwait
sub
add
ror
retf
fiadd
inc
push
add
test
xchg
loop
mov
test
(bad)
lods
xchg
ins
sub
xchg
in
xor
cmp
dec
(bad)
rol
jmp
das
xlat
add
push
popa
cmp
fdiv
gs
or
push
pop
outs
call
clc
test
xor
imul
(bad)
jae
mov
imul
movs
bound
and
xor
scas
mov
movs
inc
movs
(bad)
jmp
idiv
icebp
sub
push
cwde
fmul
cmp
inc
lds
mov
mov
fild
and
dec
jmp
cmp
retf
rcl
imul
shl
fild
xlat
or
cmps
cmp
dec
fisubr
xor
std
mov
jge
pusha
ror
sbb
ds
sub
in
add
xchg
int
cwde
cmps
mov
cmp
shl
xchg
mov
rol
test
pop
xlat
fcom
fwait
(bad)
jge
in
(bad)
mov
loope
adc
mov
lds
loopne
pop
in
jmp
jnp
retf
in
and
and
aaa
js
lahf
xchg
push
shr
xchg
mov
mov
dec
sbb
ds
in
mov
scas
mov
call
out
(bad)
out
jne
arpl
into
xlat
push
mov
or
pop
and
pop
mov
cmp
dec
dec
sub
jg
cli
and
fsub
pop
and
adc
lds
nop
adc
push
mov
into
xor
les
cmp
cli
bound
imul
gs
aas
and
add
cmp
(bad)
fadd
jnp
mov
cwde
jp
sub
fs
sub
push
inc
out
mov
mov
call
inc
xor
test
pop
inc
jo
push
scas
sub
xor
mov
mov
cmp
dec
mov
fst
add
mov
packsswb
pop
imul
sub
loope
call
or
fs
pop
ins
push
ins
adc
sahf
(bad)
pop
jne
fsubr
das
das
push
cli
outs
push
add
pop
inc
jo
jno
cmp
pop
mov
or
cwde
jo
mov
bound
cli
push
mov
jg
retf
xor
loopne
mov
xor
pop
and
test
lods
movs
mov
adc
xchg
dec
cmps
movs
xchg
fidiv
cmc
ins
sub
mov
lods
mov
cli
push
jmp
add
mov
jne
and
jl
and
sbb
dec
and
and
push
push
mov
ins
ret
mov
push
stos
cmp
loope
aad
mov
pop
sbb
lds
jns
(bad)
call
mov
sbb
mov
xor
popa
imul
dec
push
rcr
add
adc
loop
ins
stc
xchg
clc
or
call
out
movs
add
hlt
fbstp
xchg
stos
je
mov
push
add
call
mov
loop
xchg
xchg
aaa
(bad)
addr16
sbb
jecxz
mov
retf
clc
sub
or
cmc
xchg
mov
es
xlat
add
and
pop
xor
sub
sbb
jg
aaa
in
cmp
jecxz
icebp
outs
inc
or
test
and
push
dec
mov
jb
jae
mov
in
inc
push
ja
jmp
(bad)
mov
ins
repnz
std
out
cmp
or
call
push
pop
and
lds
push
add
cmps
push
jmp
sbb
dec
xchg
push
jp
inc
jge
ret
bound
add
in
push
mov
lea
xor
in
jle
mov
jg
mov
(bad)
mov
aam
or
arpl
or
call
lea
movs
jp
mov
movs
fidiv
xchg
loope
xchg
and
jge
sbb
das
sbb
mov
lods
adc
jnp
mov
fistp
mov
pushf
mov
mul
push
out
cs
sub
mov
push
gs
inc
sub
mov
jno
xchg
adc
xchg
fidiv
mov
xor
push
add
fiadd
inc
mov
int3
mov
xchg
mov
push
sahf
mov
vphaddwq
les
test
mov
add
fidivr
inc
mov
xchg
add
outs
cwde
mov
dec
cs
push
out
push
sbb
ins
xchg
adc
mov
repnz
aas
adc
repz
jnp
mov
retf
mov
xor
jle
ficomp
add
std
fsub
dec
neg
stc
mov
(bad)
loop
sti
(bad)
call
movs
and
xchg
jns
iret
cdq
lahf
mov
je
sahf
sbb
and
cmp
(bad)
mov
sub
and
add
js
add
and
(bad)
xor
pusha
outs
or
push
dec
add
loope
jo
push
dec
daa
out
push
imul
les
xor
test
mov
xchg
add
add
adc
xchg
inc
test
push
das
sub
test
(bad)
stc
add
pop
jl
addr16
mov
es
iret
mov
cmps
sbb
add
dec
das
retf
ins
jmp
dec
(bad)
dec
cdq
xchg
aam
pop
cmp
xchg
dec
sahf
packsswb
sahf
dec
aad
sbb
cdq
mov
cmps
xchg
das
das
test
ins
(bad)
enter
test
xchg
ds
loope
push
rol
mov
test
addr16
sub
mov
hlt
and
int3
or
add
mov
mov
sbb
cmp
cwde
sbb
sbb
cmps
lahf
xor
and
cmp
fnsave
and
xchg
xlat
and
sbb
pop
scas
xchg
and
adc
pop
int3
add
push
repz
or
in
aad
stos
out
aaa
sub
xchg
(bad)
(bad)
cmp
jbe
dec
in
mov
movs
icebp
mov
dec
bound
bnd
sub
mov
mov
aas
inc
xchg
inc
pop
jne
cmc
sbb
add
jmp
mov
nop
(bad)
jno
and
call
jae
mov
adc
inc
adc
out
cmp
sbb
inc
in
mov
xchg
(bad)
dec
out
xchg
or
sahf
mov
xor
jns
sub
mov
push
mov
cwde
cmp
imul
sahf
and
jnp
mov
scas
mov
lods
iret
pop
xor
fsub
ss
cmps
jp
int
pop
out
ror
inc
test
mov
and
(bad)
js
add
aas
push
arpl
pop
inc
fld
mov
pop
aad
cmp
mov
jne
sub
cs
lods
test
cld
mov
bound
xchg
sar
dec
cwde
adc
jge
inc
sub
sub
xor
movs
sti
fwait
and
push
jno
cmp
mov
out
test
iret
or
fucomp
mov
fsubr
inc
sbb
imul
ret
aaa
cdq
mov
and
jb
sub
xchg
sbb
sub
xchg
and
add
daa
cmp
outs
loope
jg
cli
cdq
push
les
cli
lods
mov
xchg
dec
sbb
push
pop
cs
jo
jge
mov
mov
imul
out
ins
int
and
cmp
lods
push
pusha
sar
mov
add
push
xlat
dec
out
pop
push
mov
pop
test
mov
fist
fs
addr16
push
call
inc
mov
stos
cmps
idiv
jb
imul
cmps
in
daa
jmp
pop
cwde
cmp
int
and
mov
imul
push
test
outs
pop
pop
and
and
or
add
call
dec
stos
fisub
xchg
shl
adc
dec
pop
cmps
mov
shl
pop
retf
hlt
movs
push
pop
data16
iret
fadd
jbe
(bad)
xor
mov
or
(bad)
jle
outs
mov
mov
xchg
xor
jle
sti
push
idiv
adc
es
and
cmp
jg
repnz
mov
les
loope
inc
dec
sub
mov
xor
and
in
cmc
loop
sahf
ja
iret
into
lock
push
outs
nop
aam
nop
enter
mov
mov
or
pop
pop
pop
push
add
mov
test
mov
cld
mov
cdq
jne
div
leave
call
outs
cmp
xor
or
(bad)
adc
xchg
cdq
aad
cmp
jno
in
pop
sbb
jge
jne
dec
or
xor
aad
dec
lods
cmp
cli
das
cmp
gs
jmp
sbb
call
jno
scas
std
adc
clc
fisubr
lods
shr
cmp
xor
aaa
retf
(bad)
sbb
inc
xor
dec
ret
mov
imul
inc
mov
mov
xor
call
add
push
pushf
push
sub
add
dec
sar
ret
in
or
les
inc
mov
retf
into
outs
faddp
std
cmp
in
or
push
push
mov
aaa
outs
sub
(bad)
rcr
scas
(bad)
outs
mov
bound
sub
inc
sbb
push
pop
dec
push
jo
mov
or
mov
(bad)
cs
int
inc
jne
push
push
aad
mov
jp
push
or
mov
test
sub
popf
sbb
sbb
xchg
dec
and
xor
(bad)
shr
add
(bad)
bound
daa
inc
cwde
mov
push
jne
(bad)
movs
aaa
inc
pop
mov
dec
or
jns
dec
shl
cmp
add
add
movs
push
out
mov
xor
repnz
ds
jmp
call
add
gs
ret
test
lock
outs
jmp
(bad)
pop
mov
mov
movs
pop
pop
retf
push
jmp
shl
sbb
xchg
xor
or
or
or
push
ds
jnp
test
adc
push
sub
fldenv
arpl
enter
daa
add
mov
adc
int3
(bad)
(bad)
rcl
jmp
inc
rol
push
leave
data16
jp
pop
sar
adc
adc
js
rcl
call
pop
or
mov
mov
imul
mov
mov
xchg
xlat
mov
test
sub
pop
ret
jl
mov
mov
retf
xchg
xor
fwait
cwde
dec
lds
aaa
sbb
dec
add
retf
(bad)
or
out
add
fcom
inc
mov
out
out
pusha
and
jmp
not
add
cmp
xlat
scas
xchg
inc
mov
fdivr
lock
cld
dec
scas
push
scas
and
(bad)
inc
mov
jg
int3
aaa
and
mov
shl
sahf
pop
out
jg
mov
mov
mov
bound
gs
mov
pop
lods
inc
mov
pushf
aam
sub
mov
mov
add
mov
add
sub
push
leave
add
inc
push
inc
push
sar
push
test
repz
sub
mov
ret
sub
(bad)
pop
test
movs
loope
jb
bound
imul
dec
jnp
test
pop
out
aaa
popf
push
icebp
shl
aam
mov
inc
scas
hlt
mov
jp
cli
(bad)
jae
jge
les
push
add
ins
inc
out
std
xchg
imul
jl
or
mov
in
dec
adc
dec
je
sahf
lods
mov
arpl
jb
xchg
scas
jmp
std
push
push
daa
push
(bad)
push
sbb
jp
adc
xchg
ret
(bad)
div
and
aad
jmp
outs
mov
mov
xchg
adc
jnp
lods
je
xor
rol
and
pop
and
push
and
call
cld
or
push
fst
mov
jl
xchg
sub
adc
push
gs
mov
rcr
mov
sub
mov
out
pop
jb
push
dec
daa
fs
lds
inc
sbb
or
sbb
add
ins
cmp
xchg
cmp
jle
jbe
push
scas
dec
sub
gs
xor
jle
jecxz
and
dec
mov
dec
jbe
ss
jge
fstp
int
mov
sbb
mov
fidiv
int3
aas
xchg
les
cld
push
sbb
psrlw
ret
pop
pop
mov
pop
lds
sub
ins
or
cmp
mov
jle
xor
test
dec
pop
cld
gs
pop
xor
je
int
jge
scas
scas
sbb
adc
xlat
imul
in
fisttp
fs
jge
jbe
jae
popf
sbb
xor
clc
mov
cmp
cmp
fidivr
xor
(bad)
cmp
aam
jmp
dec
cmp
sbb
mov
fisub
dec
loop
or
sti
and
or
adc
nop
adc
push
xor
fld
rol
pop
enter
mov
clc
lods
push
es
adc
push
call
fmul
(bad)
pop
xor
jecxz
xchg
pop
bound
xchg
jp
mov
in
xor
aas
fcom
sub
add
cmps
adc
scas
jnp
xchg
aad
adc
(bad)
xor
jl
pusha
adc
cdq
ins
call
daa
mov
in
sub
retf
lods
xor
dec
pop
sbb
out
lock
push
outs
daa
iret
stos
aaa
aam
pop
lds
int3
aam
addr16
xchg
adc
and
adc
pop
xchg
imul
and
fmul
hlt
cmp
stc
add
sti
pop
cwde
adc
adc
dec
mov
mov
loope
sub
sbb
sbb
packuswb
xor
add
xchg
add
inc
and
jmp
xchg
jne
mov
sbb
mov
mov
pop
pop
jno
pop
xchg
sub
cmp
sub
jle
push
ret
sbb
push
mov
imul
inc
mov
push
repz
or
add
cmps
add
popf
loope
in
add
jge
jne
mov
add
(bad)
xchg
jb
pop
cwde
cmps
es
(bad)
(bad)
cmp
or
les
movs
or
mov
cmp
and
mov
and
pop
jle
mov
cmp
mov
mov
mov
push
hlt
cwde
and
pusha
push
push
jg
or
cwde
loope
clc
fs
jmp
add
jne
sbb
shl
cmps
push
inc
jo
jns
jno
popa
pop
jg
push
fimul
or
test
sahf
(bad)
sub
aad
ins
push
clc
dec
and
jle
test
sbb
sub
imul
push
into
enter
mov
jno
movs
(bad)
rcl
aam
push
sub
fucomi
gs
int
inc
mov
enter
out
daa
loop
jb
and
dec
(bad)
addr16
and
movs
dec
setno
lods
mov
adc
xor
fiadd
adc
cmp
je
or
rol
lock
mul
xor
dec
sbb
xchg
int3
jmp
es
jb
adc
fsubr
lods
cmp
ret
aaa
xlat
or
ret
hlt
jne
lahf
aaa
mov
add
jmp
mov
popa
cld
ins
(bad)
mov
hlt
sub
dec
mov
sti
xchg
ss
shl
fldenv
inc
sub
pop
hlt
sbb
je
frstor
loopne
fwait
mov
shl
mov
es
pop
stos
add
lods
jp
sbb
jno
outs
sub
mov
jb
xor
js
sub
ins
(bad)
stc
enter
out
and
repz
pushf
pop
or
cmp
test
adc
mov
jo
call
fs
mov
cmp
xor
jmp
xchg
sbb
shl
inc
rol
xchg
lods
out
dec
imul
mov
pop
mov
cld
sub
lods
or
ret
and
xchg
adc
js
push
cmc
xchg
dec
bound
mov
mov
ficom
in
retf
repnz
test
lds
cs
xchg
cmp
stos
mov
adc
je
pop
mov
pop
cdq
sub
jmp
scas
enter
sahf
daa
icebp
sbb
(bad)
pop
adc
ja
or
cld
inc
icebp
fcomp
sub
fnstcw
push
faddp
int
inc
cmp
out
mov
mov
jno
arpl
movs
imul
push
daa
dec
inc
int3
inc
shr
(bad)
xor
push
rcr
mov
ret
inc
push
test
or
ds
adc
iret
add
xor
pusha
inc
xor
mov
jbe
inc
pop
jns
xor
pop
cmp
rcr
xchg
jns
aad
pushf
cli
jle
popa
and
cmp
adc
pop
retf
jno
cmc
pop
cwde
pop
repz
adc
outs
xlat
push
popf
out
movs
rol
test
adc
lea
aad
ds
je
test
add
fwait
pop
in
aad
clc
inc
adc
ror
sbb
rcl
(bad)
data16
xor
outs
xchg
push
fcom
mov
mov
sbb
retf
or
pusha
aaa
js
and
jb
int
test
cdq
pop
test
push
cmp
add
arpl
test
push
sahf
aad
push
mov
adc
std
addr16
ret
jnp
ds
repnz
xchg
lds
lods
retf
xor
xchg
mov
mov
stc
mov
lock
arpl
or
mov
push
daa
btc
rcl
out
loop
loope
pusha
(bad)
jnp
jno
or
sar
jl
or
out
scas
addr16
iret
in
mul
jge
mov
pop
rol
sbb
int
inc
sub
push
dec
ror
data16
outs
fs
push
mov
inc
mov
ret
push
fcmovnu
in
adc
cli
xlat
aaa
mov
test
arpl
add
push
adc
sub
lds
fistp
jp
pushf
pop
dec
xor
or
mov
mov
fmul
or
js
jl
jecxz
jno
rcl
or
sub
fistp
dec
cli
add
mov
or
pop
adc
sub
xor
(bad)
xor
lahf
imul
sbb
jbe
jns
aas
jmp
mov
add
dec
inc
bound
test
lahf
inc
mov
mov
mov
inc
sub
mov
clc
daa
imul
or
std
mov
dec
xlat
dec
sub
and
inc
ss
or
cmp
ss
jle
loop
jae
xor
mov
xchg
and
lods
fisub
mov
mov
dec
push
inc
sbb
xchg
mov
dec
dec
(bad)
push
sahf
dec
repnz
imul
fdivr
xchg
sub
aaa
sub
ins
push
scas
imul
mov
xchg
inc
push
cmp
js
daa
ret
mov
(bad)
fidivr
mov
dec
out
inc
outs
sbb
jb
jns
mov
cmps
lods
push
(bad)
stos
ss
sub
sub
pusha
sahf
aam
out
sub
loop
push
inc
(bad)
in
fiadd
cmps
rcl
inc
jmp
hlt
pop
sub
out
out
sahf
or
mov
ror
inc
ret
jl
mov
sbb
mov
out
pop
dec
add
mov
push
rcr
mov
jo
or
sti
add
ja
out
push
pop
sub
das
sbb
jae
push
stc
imul
xchg
or
sbb
mov
dec
out
adc
or
mov
outs
cld
shl
outs
xchg
mov
test
minps
ja
or
sub
outs
or
fisub
je
dec
test
jl
push
outs
call
shl
mov
loopne
push
xchg
std
xor
frstor
xor
in
sahf
dec
mov
loope
inc
lock
push
mov
xchg
int3
sub
pop
jne
je
mov
jne
mov
cwde
jle
mov
je
inc
out
jmp
outs
fs
pusha
imul
pop
xor
sub
xchg
jg
in
(bad)
ja
sbb
ret
fsubr
xor
stc
mov
arpl
in
adc
mul
fistp
cmps
push
mov
sbb
and
lea
(bad)
cmps
add
aam
inc
mov
test
loop
jge
mov
cmp
loope
imul
loopne
pop
sub
loop
adc
ins
mov
jbe
lds
and
fadd
lahf
pusha
jg
pop
push
(bad)
(bad)
ins
scas
aas
pop
sub
ror
aas
in
imul
sahf
jmp
adc
call
pop
jp
mov
les
xchg
xchg
aam
cmps
in
in
pop
pop
mov
loop
dec
sbb
sub
ins
jmp
lods
sub
push
sub
xor
dec
scas
pop
push
sti
cmp
test
retf
les
loopne
ror
fisub
jmp
sub
and
loop
mov
out
dec
pop
icebp
jo
inc
test
xchg
rcl
shl
mov
cmp
mov
out
je
out
adc
das
adc
repz
mov
imul
inc
in
call
stc
push
sbb
addr16
mov
loop
cdq
push
mov
in
in
gs
addr16
repz
push
pop
mov
or
daa
aas
cmp
xchg
jbe
cmp
loop
push
pop
xor
imul
femms
div
xchg
scas
push
xchg
sbb
dec
push
cmp
out
les
mov
adc
push
fs
lds
xor
jecxz
xchg
xor
mov
aas
push
mov
and
lods
or
aad
push
mov
mov
jne
es
sti
iret
in
add
sub
or
cmp
jge
popf
sbb
jns
mov
pusha
fwait
mov
xchg
jnp
pushf
and
ins
movs
popf
popf
jmp
add
jmp
stc
mov
imul
imul
inc
les
xor
pop
push
adc
int3
mov
jnp
jb
cmps
inc
ins
and
clc
jg
jbe
nop
jne
mov
xor
and
scas
nop
mov
cmp
mov
sub
or
cmps
test
inc
icebp
push
pop
scas
loopne
cli
(bad)
out
xchg
sbb
stc
dec
test
inc
cmp
mov
scas
lods
pop
dec
pop
fbstp
xor
mov
test
mov
repnz
jb
inc
dec
cdq
fs
sbb
mov
shr
outs
popa
jno
xchg
or
sub
rcl
int3
jo
dec
inc
push
jle
add
std
les
jo
loope
and
movs
push
jecxz
jmp
sub
adc
sbb
jbe
mov
xchg
jmp
dec
lock
sub
ja
xchg
adc
xor
outs
push
jg
lahf
shl
jno
jne
test
xor
jbe
sbb
inc
pop
inc
int
mov
xchg
sbb
jmp
std
ror
popa
(bad)
adc
test
jnp
dec
fs
and
lods
jmp
aam
adc
xlat
jmp
lds
adc
sub
sahf
ins
or
adc
ja
xchg
addr16
out
mov
lock
and
add
cmp
mov
xor
push
jp
push
adc
add
(bad)
fwait
cli
xchg
lahf
and
mov
jnp
inc
ret
inc
cmp
popa
shl
call
xchg
inc
scas
jns
xor
inc
jl
xlat
cmp
gs
call
into
enter
xor
ror
add
push
xor
cmp
popa
push
sbb
mov
nop
push
aaa
pusha
jae
test
adc
les
minps
aaa
outs
xchg
add
out
pop
mov
lahf
fist
cmp
sub
cdq
std
mov
cli
inc
inc
rcr
add
push
scas
arpl
retf
push
in
xchg
adc
pusha
int3
push
xchg
dec
(bad)
mov
fs
mov
ret
pop
scas
ja
repz
sar
fisttp
leave
pop
jb
jb
test
mov
push
arpl
stos
addr16
stos
daa
sub
adc
mov
out
or
ins
repnz
(bad)
call
mov
lock
ss
ds
add
cs
loop
(bad)
(bad)
xchg
jno
xor
xor
or
movs
adc
arpl
adc
sbb
cmp
arpl
aas
adc
sbb
inc
add
sub
cli
les
jne
sub
enter
scas
push
xchg
clc
or
call
call
adc
loopne
mov
pop
inc
push
outs
sub
call
xor
fmul
xchg
test
test
and
mov
sbb
pop
sbb
stos
cmps
add
add
pop
stos
add
mov
cli
adc
cdq
clc
and
jne
cmp
sti
xchg
dec
call
pop
addr16
or
movs
sbb
xor
add
aaa
outs
out
outs
dec
sub
ja
inc
push
sahf
neg
add
xchg
dec
aas
jecxz
jb
sub
add
sub
xchg
mov
test
out
les
cmps
or
xor
(bad)
cmp
add
mov
aam
popf
fidivr
clc
jae
adc
xor
xchg
inc
stos
stos
lea
data16
sub
adc
pop
imul
mov
mov
into
cmp
mov
scas
dec
call
jmp
and
pop
xchg
scas
stos
xchg
sahf
xchg
(bad)
pop
inc
or
aas
iret
ja
mov
mov
loopne
sahf
cdq
dec
hlt
rcr
cli
sub
mov
push
sbb
mov
inc
dec
sub
cmp
sahf
icebp
mov
sub
nop
js
stos
stos
mov
add
push
pop
out
sahf
jb
inc
(bad)
loopne
mov
jbe
in
(bad)
loop
bound
adc
adc
aam
adc
xchg
(bad)
cmps
dec
scas
cmp
mov
(bad)
out
inc
pop
xchg
xor
xchg
popf
fs
dec
jne
lds
lods
add
mov
(bad)
sti
clc
xchg
jo
fdivr
mov
mov
aad
aaa
mov
or
cmp
and
xor
dec
popa
sub
xchg
push
mov
mov
push
jmp
add
test
lds
mov
(bad)
shr
or
dec
push
nop
xor
xor
push
add
pop
add
js
fidiv
and
test
outs
xchg
fidiv
(bad)
mov
in
bound
jle
cmps
cmps
xchg
sub
test
js
sbb
inc
test
jge
imul
mov
jae
add
mov
cmp
cdq
popa
xchg
cmp
loop
jle
call
jbe
sbb
nop
push
mov
test
ficomp
loop
nop
sahf
test
pop
fisub
cmp
cli
push
push
ds
mov
hlt
stc
leave
shr
mov
std
movs
cmp
lock
scas
sub
cmp
test
cli
clc
mov
test
fsqrt
(bad)
xchg
sar
xor
(bad)
jmp
jecxz
pushf
(bad)
call
add
mov
mov
and
mov
jge
repz
jmp
fs
sub
fld
add
lods
or
loop
dec
dec
mov
sub
dec
pop
fcomp
test
jo
push
sbb
fwait
in
stos
test
int3
or
push
dec
aam
je
(bad)
sub
cmp
xlat
test
xchg
xor
and
lds
cmp
jbe
or
in
adc
pop
jecxz
add
iret
sub
xlat
retf
aas
sbb
ss
push
jmp
call
retf
push
xchg
sub
ret
arpl
cmp
mov
mov
or
adc
jg
lea
xchg
mov
ret
inc
dec
or
imul
test
imul
int3
xchg
int3
pushw
popa
sbb
retf
xor
mov
mul
test
pop
and
push
(bad)
cmps
clc
pop
test
add
jbe
je
in
inc
ins
cmp
call
shl
mov
dec
sti
sbb
and
jnp
push
add
rcl
push
test
ds
dec
jmp
cmp
stos
xchg
pop
add
cmps
(bad)
jmp
into
add
icebp
mov
dec
push
test
imul
cmp
mov
test
call
cwde
push
cmp
repnz
mov
add
mov
es
mov
jp
stc
dec
(bad)
push
lods
dec
mov
mov
test
or
clc
outs
push
inc
add
push
jo
push
cmps
aad
dec
mov
scas
sub
push
nop
leave
inc
jnp
jmp
loop
fsub
retf
push
mov
dec
ret
aas
mov
mov
adc
or
cmps
adc
jne
in
hlt
sub
dec
fsubr
neg
mov
mov
stos
out
and
stos
push
(bad)
or
out
out
loope
or
add
cmp
stc
mov
fist
jnp
jo
int3
xlat
add
push
jnp
repnz
fldenv
outs
pop
fisub
jge
sahf
loope
lahf
cld
xor
inc
test
sub
xchg
hlt
sti
ffree
in
sub
leave
sub
aad
cdq
sub
fs
arpl
(bad)
sub
and
sahf
and
and
mov
jl
mov
push
stc
jne
repnz
xchg
repz
adc
adc
aad
mov
dec
push
shl
in
sub
xor
push
push
jbe
dec
aam
or
ss
xchg
sub
push
std
cld
xor
fisttp
adc
sub
push
out
popa
fstp
ds
or
std
std
scas
sub
jmp
xor
out
ret
adc
jmp
xchg
push
cmp
mov
jmp
jl
xchg
jmp
and
ins
mov
lods
lea
xchg
jno
out
sar
imul
fcmovnu
imul
(bad)
in
and
xor
dec
and
pushf
cmp
call
pop
shl
lahf
(bad)
test
popf
cli
sbb
jnp
stc
pop
inc
sub
cmp
push
lock
add
push
cmps
aad
cmp
sbb
push
cmp
adc
std
imul
push
push
xchg
adc
jmp
add
cli
mov
sub
lock
sub
gs
sbb
clc
ja
cmp
jmp
scas
test
and
cmp
(bad)
scas
inc
add
rcl
xchg
aas
int3
xchg
js
mov
(bad)
data16
arpl
sub
aam
or
ins
add
sub
xchg
mov
int3
retf
mov
push
stos
out
lods
xlat
push
daa
adc
js
outs
dec
aad
xchg
add
and
sbb
into
mov
retf
fs
push
mov
pop
int
dec
jnp
test
das
ja
jmp
mov
not
in
cld
enter
mov
inc
cmp
into
pop
xlat
addr16
xchg
mov
call
and
jecxz
jb
imul
fmulp
pop
inc
inc
pop
test
sub
pop
pop
aad
and
jns
push
addr16
add
nop
mov
add
outs
test
sbb
sub
fld
outs
mov
mov
repnz
in
push
xor
pop
fnstcw
xor
lods
or
jnp
dec
out
je
daa
mov
pop
mov
das
mov
push
bound
cmp
mov
push
gs
call
mov
retf
inc
lock
push
adc
std
(bad)
jg
add
mov
xor
sub
sbb
mov
lea
repnz
fs
xor
xchg
shl
and
xchg
jmp
out
sub
repnz
pusha
pop
lahf
mov
push
pop
pop
dec
push
imul
sahf
or
pop
push
inc
repz
cmp
mov
mov
adc
test
pop
ins
adc
mov
out
jne
out
push
outs
sub
jb
mov
jecxz
push
ins
push
shr
mov
sub
push
test
mov
mov
nop
inc
out
lock
out
cmc
push
xor
mov
outs
aam
jmp
and
cmc
sar
jge
adc
(bad)
out
aad
and
(bad)
pop
push
scas
sbb
xor
outs
mov
test
inc
(bad)
movs
pop
cmp
xor
stos
daa
sbb
es
lods
pop
sub
nop
(bad)
aaa
not
addr16
imul
(bad)
jne
test
lods
inc
pop
and
xchg
adc
lea
add
add
scas
mov
xchg
sbb
adc
cmp
test
sbb
outs
test
or
xchg
outs
enter
cdq
dec
cmc
retf
cdq
out
sar
mov
xchg
xlat
sbb
es
xchg
(bad)
enter
pop
cwde
rcl
(bad)
retf
adc
rcr
lds
ret
push
push
mov
mov
les
or
xor
and
pop
mov
popf
les
std
nop
adc
inc
pop
nop
lds
ds
mov
sbb
cwde
and
retf
lods
and
je
imul
cmc
mov
adc
(bad)
inc
xchg
movs
aaa
loop
mov
mov
pop
adc
jmp
jle
ret
test
je
push
and
hlt
cli
add
ins
ret
pop
mov
adc
jmp
sub
stc
xchg
mov
aad
pop
push
mov
mov
mov
xchg
and
aas
or
ror
fisubr
mov
xchg
pushf
dec
mov
cmp
je
in
test
int
cs
push
xor
push
xor
loop
cmp
and
dec
inc
ins
adc
pop
xchg
(bad)
cld
daa
jmp
sbb
scas
ret
stos
sbb
mov
shl
jb
aam
mov
(bad)
scas
popa
lds
mov
sbb
(bad)
dec
pop
dec
mov
fs
sub
cmps
xchg
dec
pop
xchg
into
jbe
jp
xchg
xchg
mov
cdq
mov
pop
cmps
fs
sahf
rol
pop
pop
loopne
mov
adc
imul
dec
mov
stos
fwait
addr16
adc
dec
mov
ds
call
or
loopne
dec
movs
dec
into
jp
test
mov
pop
xchg
mov
stos
int3
out
mov
fldcw
jmp
addr16
jmp
(bad)
stos
xlat
jge
setae
lahf
loop
cmps
jne
push
xchg
test
xor
push
test
retf
mov
pop
cwde
xlat
movs
mov
cdq
xor
rol
shl
mov
and
into
push
sti
jmp
les
adc
mov
test
pop
inc
fsubp
cmp
xor
mov
jp
loope
das
sub
xor
arpl
mov
cmp
jg
pop
mov
out
mov
jno
int3
mov
cmp
ins
and
les
inc
push
aam
ret
inc
mov
lds
ins
int
and
int3
pop
cmovle
ret
loopne
loope
jne
inc
sub
bswap
cmp
cmp
sub
cmps
and
(bad)
mov
lds
enter
add
mov
mov
cmp
je
push
outs
xchg
cmc
inc
out
mul
xor
mov
ss
jp
push
les
sub
fdiv
cdq
fisub
aad
or
mov
in
mov
popa
cld
mov
bound
add
mov
and
in
sub
jbe
leave
leave
sbb
pop
cmps
dec
add
mov
mov
sbb
lahf
adc
mov
sub
(bad)
retf
lds
pop
mov
retf
inc
inc
or
inc
retf
inc
and
pop
cdq
or
sub
movs
das
pusha
in
dec
leave
cmps
jg
loop
xor
cmps
push
mov
or
dec
add
xchg
sub
cs
or
push
pop
add
hlt
mov
cmp
inc
test
mov
and
vmovaps
jl
movs
sar
xchg
fwait
leave
xor
jge
pop
adc
push
fadd
add
inc
addr16
cmps
dec
or
repz
or
sbb
stos
pop
iret
sbb
mov
inc
inc
fdiv
inc
push
push
mov
sahf
clc
mov
(bad)
fnstsw
clc
frstor
cli
adc
dec
outs
ins
cmp
imul
inc
sbb
mov
loopne
sbb
pop
sub
cs
(bad)
or
push
rol
iret
mov
int3
sbb
daa
stc
imul
inc
dec
fistp
in
les
call
movs
call
fnstcw
xchg
push
sub
lods
push
mov
dec
push
sbb
je
jmp
mov
neg
push
sub
out
mov
pop
mov
push
aaa
sub
loope
retf
sbb
lea
lods
sub
in
mov
jno
adc
fld
(bad)
push
rcl
mov
add
jp
stos
jl
jno
xchg
fist
ror
jge
add
pop
(bad)
mov
adc
cmp
shl
sbb
sbb
aas
rol
in
cld
icebp
das
scas
into
retf
push
xor
push
popf
xchg
test
(bad)
mov
add
dec
or
or
cwde
lock
and
mov
mov
inc
loopne
cmc
jecxz
mov
mov
shl
push
inc
aam
retf
lods
jne
lds
mov
inc
sub
cdq
jno
pop
inc
leave
cld
mov
repnz
mov
cwde
mov
pop
push
ins
mov
mov
inc
or
idiv
pop
in
in
rcr
fidivr
repz
mov
push
in
lahf
shl
outs
or
(bad)
fs
add
add
ins
test
or
pop
paddw
leave
fsubr
imul
movs
mov
xchg
adc
(bad)
out
inc
cdq
pop
jae
clc
sbb
aam
sbb
sbb
in
sbb
(bad)
out
je
add
pop
cmp
std
pop
clc
blcmsk
jp
mov
std
out
mov
sbb
pop
lods
ds
fcomp
jg
imul
sti
call
xor
repnz
inc
mov
(bad)
in
mov
daa
lods
scas
imul
sub
sub
fcmove
repz
out
popa
leave
push
movs
bnd
inc
push
xchg
scas
ror
aaa
jns
loopne
aaa
pop
in
cmp
fnstenv
xor
pop
mov
fs
sbb
sbb
jl
mov
leave
sbb
je
dec
dec
adc
sbb
stos
pop
pop
loope
fcom
mov
cld
xchg
inc
add
jle
loope
out
imul
nop
dec
jnp
and
push
pop
lock
mov
mov
sub
dec
dec
mov
inc
jp
xor
popa
lds
jb
mov
push
push
js
mov
nop
ror
movs
clc
in
dec
arpl
les
inc
movd
test
pop
adc
xor
push
pushf
mov
or
xor
pop
cmp
std
mov
popf
das
jp
ds
push
ror
jp
icebp
in
cmp
push
xchg
rcr
cli
sbb
scas
inc
xchg
iret
jg
lahf
pushf
stos
std
push
inc
xor
xor
imul
fst
lock
pushf
cmp
pop
mov
mov
ins
adc
sub
icebp
sbb
mov
sub
pop
add
daa
in
dec
jl
fsubr
popf
mov
jb
adc
mov
dec
pop
dec
pop
ds
hlt
add
call
ret
jo
xchg
call
fidivr
inc
(bad)
stos
daa
and
push
push
int3
inc
xchg
popa
sbb
push
xchg
int3
and
cwde
sar
cld
mov
inc
cmp
das
jbe
xor
xor
ss
add
ds
out
std
leave
retf
push
and
sti
pop
(bad)
(bad)
fldenv
push
push
jmp
out
xor
jne
jle
daa
xchg
dec
pusha
ds
xchg
or
push
sbb
sbb
cs
(bad)
aad
sub
(bad)
jns
mov
loopne
sub
mov
cli
pop
and
inc
xlat
dec
sub
sar
arpl
out
xchg
retf
lds
test
dec
pop
clc
test
cld
outs
test
movs
mov
je
mov
and
(bad)
test
push
xor
popa
mov
add
test
cmp
bound
push
movs
ins
ss
mov
and
mov
retf
cli
push
mov
inc
loope
je
imul
ja
fimul
inc
shl
push
cmp
call
adc
push
inc
imul
dec
mov
movs
add
pop
inc
or
and
jge
shl
es
in
mov
mov
mov
out
or
loopne
adc
aas
push
xchg
cs
loope
xchg
push
ins
fadd
xchg
out
fxam
in
push
lea
cwde
loopne
imul
retf
sti
sub
loope
mov
(bad)
(bad)
lock
xlat
repz
push
sbb
adc
scas
not
mov
in
xor
pop
out
outs
sti
ins
scas
mov
imul
jge
ds
inc
shl
pusha
xchg
cmps
ror
fist
push
pop
imul
(bad)
jl
lods
mov
inc
stos
inc
cdq
jno
jg
mov
mov
cs
mov
add
or
adc
inc
in
clc
push
or
xchg
pop
sti
es
cmps
fsubr
mov
cmc
sub
mov
rol
xchg
xchg
adc
and
mov
jge
lods
nop
sub
sbb
sbb
aaa
adc
push
push
push
retf
das
inc
hlt
pop
in
sbb
xlat
ret
movs
into
mov
adc
mov
mov
sti
mov
(bad)
sbb
pop
pop
jae
push
arpl
aaa
jmp
loop
and
pop
cmp
sub
xchg
mov
scas
ret
push
aad
mov
pop
and
sub
loope
xlat
pusha
and
mov
push
adc
cmp
out
or
hlt
inc
jg
ds
jmp
mov
push
shl
call
jo
cmp
(bad)
stc
into
jbe
push
dec
(bad)
jno
aaa
(bad)
in
rcr
cmp
or
lods
(bad)
repnz
push
jns
mov
mov
popa
or
aam
fnstsw
push
adc
ja
mov
cmp
jnp
enter
enter
xchg
arpl
popa
xor
dec
scas
loope
mov
icebp
cwde
mov
pop
test
pop
dec
aaa
mov
and
cmps
push
sti
pop
inc
dec
out
addr16
dec
repnz
sub
cmp
add
push
mov
sar
or
retf
sub
fidivr
or
aad
mov
sub
jmp
out
fwait
pop
in
lahf
shl
mov
add
aas
xchg
outs
outs
test
push
shl
adc
jp
add
push
iret
adc
pop
test
div
jmp
loope
cmps
cmp
and
xchg
in
or
cmp
iret
outs
ins
je
cmps
ds
(bad)
(bad)
mov
jb
pop
push
out
icebp
pusha
adc
mov
popf
stc
or
mov
mov
and
cmps
cwde
xor
pop
and
ffreep
pop
fcom
add
stc
ins
leave
test
ja
push
sub
jo
(bad)
and
pop
jno
adc
addr16
lea
or
xchg
stc
data16
les
cli
or
call
pop
scas
pop
test
sub
pop
jne
dec
jbe
fcomi
push
rol
pushf
test
fnstsw
or
and
not
test
push
inc
push
fwait
test
push
push
lods
add
(bad)
pop
shl
dec
push
sub
scas
mov
lds
dec
in
inc
dec
je
sbb
adc
xor
xchg
imul
push
mov
test
daa
push
and
mov
push
fwait
call
leave
inc
adc
call
cli
dec
cld
int
xchg
lods
xchg
adc
(bad)
and
pop
sub
push
inc
xor
pop
mov
lock
enter
add
mov
sub
pop
xchg
xchg
and
xchg
jmp
xchg
(bad)
and
push
scas
shl
scas
and
shl
out
add
outs
ret
xor
jp
ins
popf
xor
loope
xor
push
out
(bad)
and
rcl
xor
ret
pop
sub
mov
js
add
retf
xor
ja
add
cmp
and
nop
das
inc
adc
test
push
popa
mov
add
out
gs
arpl
or
mov
pop
outs
jge
jbe
mov
mov
jbe
aad
ins
test
xchg
(bad)
push
cdq
test
hlt
cmp
push
pop
int
in
nop
push
ds
mov
and
cs
lea
pop
test
cmp
and
ret
jl
xor
fs
inc
dec
je
repnz
popf
sub
gs
outs
into
sbb
fild
(bad)
sbb
cmc
shr
pop
mov
retf
fstp
pop
xor
jnp
inc
pop
fmul
mov
ficomp
jae
jae
clc
dec
inc
iret
dec
sub
and
(bad)
push
movs
jecxz
jg
cmp
mov
shl
xchg
fnsave
adc
rcl
cmp
lahf
sbb
ins
retf
pop
jo
cmps
in
sbb
in
push
lea
sub
xor
jmp
(bad)
xchg
add
neg
xor
jp
dec
sub
dec
fwait
and
xchg
aas
fs
addr16
std
outs
add
sub
mov
repz
or
or
add
sbb
pop
test
sbb
aaa
jecxz
loope
jmp
(bad)
mov
in
push
pop
shl
or
hlt
cmp
mov
sbb
icebp
xchg
cmp
dec
aaa
adc
inc
(bad)
cmp
push
(bad)
out
mov
dec
and
les
mov
outs
lea
sub
in
pop
sub
xor
jmp
xor
fst
add
or
pushf
lock
ret
pop
int
out
out
test
jo
sub
jge
pop
xor
cmp
(bad)
repz
add
pop
xchg
and
fnsave
or
std
(bad)
repz
aad
ret
mov
xor
gs
cli
xor
mov
dec
jmp
mov
sahf
cmp
pop
rol
out
outs
mov
jae
repz
mov
lock
mov
push
mov
push
add
mov
add
dec
je
push
ficom
inc
ja
xchg
push
mov
or
mov
xor
arpl
or
jne
push
movs
imul
inc
nop
mov
dec
ficom
and
mov
xchg
push
ret
jnp
xor
or
push
inc
sahf
jnp
sbb
adc
jno
cwde
mov
adc
mov
or
(bad)
sbb
fwait
or
aas
movs
or
push
mov
push
jnp
xchg
call
mov
mov
mov
fst
mov
sbb
lock
or
adc
ficom
sbb
xadd
cmp
xchg
add
inc
fist
push
or
loope
xchg
mov
push
inc
mov
xchg
cmp
jp
inc
sbb
retf
mov
(bad)
stos
pop
cmp
les
outs
mov
iret
jb
xor
push
push
fs
test
cmp
mov
rcl
and
and
ja
jmp
mov
jno
icebp
push
jae
or
outs
pop
jnp
outs
out
xor
mov
adc
cmps
xor
fild
in
mov
into
xchg
movs
in
(bad)
inc
out
or
push
add
icebp
rcr
lea
lea
push
and
dec
mov
jae
cmc
test
jno
push
mov
xchg
inc
mov
add
jne
add
jnp
sub
rcl
inc
les
int3
inc
inc
adc
ror
shl
mov
cmps
push
mov
in
btc
js
push
dec
sub
inc
dec
add
ret
inc
xchg
adc
mov
xor
mov
inc
dec
pop
cmp
stos
lods
push
lea
jle
sbb
into
inc
or
pop
loop
or
retf
mov
adc
cs
cwde
data16
xchg
dec
sar
cmp
fisubr
shl
pop
pop
sbb
fs
mov
jle
or
out
mov
hlt
xor
mov
add
and
sbb
and
xlat
mov
pop
mov
adc
fist
sbb
xchg
loope
mov
jge
jne
push
mov
sub
addr16
or
inc
imul
rcr
mov
pop
sahf
repz
es
mov
ss
mov
or
push
in
push
retf
test
call
addr16
cwde
jb
mov
xor
je
fisttp
push
out
inc
mov
xor
mov
enter
xchg
test
idiv
stos
dec
dec
(bad)
addr16
addr16
sub
scas
fiadd
or
movs
mov
rcl
push
movs
or
retf
xor
ret
jl
push
(bad)
daa
push
jo
fcom
xor
push
movs
mov
jnp
jmp
jmp
loop
push
test
ja
or
addr16
sbb
xchg
push
add
scas
sub
sbb
mov
outs
imul
test
and
pop
ret
(bad)
stc
iret
pop
adc
rcr
add
cwde
adc
jmp
fidivr
cs
pop
gs
arpl
(bad)
ins
adc
add
mov
push
xchg
pusha
cmp
lods
xlat
or
xlat
or
or
lahf
pop
push
mov
push
mov
iret
lahf
or
sub
mov
cs
push
das
add
arpl
aad
dec
cmp
daa
les
leave
pop
and
or
jnp
mov
test
in
mov
mov
repz
cmp
pop
jb
push
(bad)
clc
xchg
pop
mov
mov
sbb
dec
sub
iret
les
pushf
sbb
cld
aam
scas
addr16
push
cs
mov
loop
(bad)
jbe
rcl
jnp
fnop
popf
inc
mov
shl
and
bound
in
loop
stc
pop
jo
ds
inc
scas
lahf
(bad)
shl
jmp
std
int3
adc
mov
adc
aam
hlt
inc
jg
dec
sub
(bad)
test
iret
in
mov
mov
add
cld
jnp
push
sti
retf
ja
pushf
stc
pop
cmp
gs
in
out
test
in
jle
and
call
dec
pop
imul
test
inc
xchg
sub
add
(bad)
mov
jnp
inc
dec
in
fisub
ds
cmc
fcomp
push
cmp
neg
xchg
mov
cmps
push
(bad)
hlt
xor
sub
push
fnstsw
shl
mov
jmp
add
jbe
(bad)
shl
dec
and
push
mov
bound
adc
or
cmps
je
test
mov
sbb
push
inc
retf
imul
sar
sub
mov
aas
ror
(bad)
adc
jg
mov
inc
xchg
push
or
mov
sbb
(bad)
out
jnp
push
push
sahf
mov
dec
xor
mov
pop
fld
mov
ins
cmps
je
pusha
or
or
push
jl
mov
dec
add
lock
test
mul
cmp
in
jb
jmp
inc
imul
dec
xchg
pop
jl
jno
adc
out
pushf
xor
std
ret
sub
push
scas
xor
repz
sub
in
scas
xor
push
push
sub
jmp
adc
rcl
(bad)
in
cmps
std
ins
in
adc
mov
xor
push
sub
inc
jecxz
mov
jp
repnz
cld
(bad)
into
add
sbb
xor
inc
mov
or
es
cmc
xor
adc
mov
sar
sar
add
jp
test
adc
stc
mov
repnz
xchg
cmp
call
and
ins
ds
xor
stc
adc
mov
imul
jne
inc
sbb
mov
fcomp
in
ins
rol
push
mov
(bad)
std
mov
inc
scas
inc
cmp
mov
les
jle
cmp
adc
sub
imul
ss
jo
cmp
adc
inc
dec
jg
push
mov
xor
fistp
inc
sbb
pop
mov
aad
xchg
outs
lds
cmp
mov
aas
sti
adc
jge
jbe
jmp
fsubr
fcomp
sahf
arpl
jnp
xchg
sbb
lods
or
jae
cmp
dec
js
xlat
mov
loopne
ds
cmp
gs
push
inc
add
test
pop
shr
or
in
xchg
call
cwde
mov
je
adc
fs
into
fild
(bad)
cmp
xlat
addr16
and
movs
dec
and
push
mov
sbb
ror
jle
adc
movs
add
jns
push
inc
cmp
out
shl
ins
je
gs
pop
jl
cwde
jecxz
loope
enter
jne
lahf
push
jge
jge
aaa
and
add
dec
adc
xor
sbb
pop
push
or
jo
or
les
inc
mov
ins
call
adc
mov
push
or
stos
leave
sub
outs
mov
ret
mov
test
repnz
mov
repnz
and
add
mov
cld
cmp
mov
scas
ins
(bad)
icebp
gs
xchg
and
popf
lock
outs
push
rcr
sub
push
pop
dec
pop
ja
ds
outs
pop
cmp
xor
addr16
inc
jmp
jmp
xchg
xchg
xchg
sub
pop
pop
push
in
aad
imul
mov
cmps
jl
mov
mov
ja
or
sub
cmp
ret
mov
push
popf
push
into
inc
(bad)
push
ret
std
mov
pop
inc
jp
xchg
and
and
test
pop
(bad)
add
mov
dec
cs
fld
int
in
jmp
jne
sahf
sbb
jno
sbb
daa
cmp
bound
xor
sahf
jo
or
loop
ins
aad
xor
outs
jbe
iret
fcmovnbe
or
sbb
push
cld
pusha
ins
outs
in
cmp
mov
(bad)
jnp
sbb
jae
xor
jbe
jmp
and
push
push
cmp
mov
popa
fild
lods
mov
mov
dec
dec
mov
mov
loope
popf
sti
mov
sub
in
cmps
stc
or
clc
sub
int3
mov
jecxz
or
mov
sub
adc
sub
iret
inc
(bad)
shr
retf
fistp
cli
and
and
add
sub
sub
into
jmp
push
jl
icebp
int3
scas
and
mov
xor
popf
mov
dec
lahf
retf
call
inc
push
cmp
dec
imul
lods
data16
cmp
mov
push
(bad)
movs
out
cmp
seta
jnp
fild
adc
retf
jae
jns
addr16
retf
es
sub
xchg
ins
inc
lahf
xor
repnz
xchg
xor
mov
add
sti
out
inc
shl
shl
cmp
retf
dec
xchg
sbb
mov
xor
mov
mov
mov
cwde
xchg
push
mov
adc
ss
out
movs
jmp
mov
sbb
sar
mov
sbb
and
inc
ja
sub
in
sub
mov
and
ror
popf
sub
in
jmp
out
jno
dec
stc
test
in
cmps
mov
jno
mov
(bad)
xor
add
call
sbb
rcr
jbe
push
mov
mov
cmp
mov
aaa
test
aad
dec
dec
xchg
ins
xor
mov
arpl
mov
popf
push
das
mov
ror
fisttp
aad
je
mov
cwde
sahf
or
sahf
mov
push
sub
icebp
mov
mov
cmps
adc
push
sbb
in
jp
xor
imul
loopne
lds
popa
loopne
pop
aaa
sbb
mov
pop
sbb
xor
adc
std
das
in
(bad)
adc
mov
push
push
into
aas
xor
dec
out
(bad)
pop
jge
icebp
ss
lock
mov
(bad)
das
repnz
adc
or
mov
or
push
mov
lahf
movs
mov
(bad)
or
or
jl
push
inc
jb
inc
sbb
popa
std
sbb
pop
jb
jp
inc
mov
xchg
mov
mov
(bad)
aam
pusha
xor
lock
push
repnz
dec
test
and
xlat
in
jp
ret
sbb
std
or
mov
adc
cmp
and
out
inc
out
pop
cmp
push
in
setbe
test
fbld
adc
(bad)
push
sbb
add
data16
pushf
leave
push
add
sub
sub
inc
and
popf
adc
push
daa
sti
ja
fstp
outs
or
add
cli
scas
or
jnp
pop
push
adc
cmp
dec
and
(bad)
call
pop
test
clc
mov
or
aaa
push
mov
jmp
retf
mov
or
jns
out
enter
std
jmp
sub
or
add
fs
pop
xlat
and
pop
xchg
iret
test
in
sub
jmp
lahf
test
cmps
mov
xor
popa
inc
push
fmul
and
ret
xlat
sbb
stc
es
inc
in
push
sub
pop
mov
add
in
scas
jne
dec
xchg
cld
stos
mov
push
dec
in
movs
pop
or
xor
aaa
mov
push
fs
mov
ins
loopne
jmp
movs
jl
ins
jne
xor
ds
fidiv
daa
frstor
jmp
sub
add
or
inc
jbe
mov
jbe
scas
test
pop
jae
and
imul
rcl
jp
add
test
jbe
push
test
fisubr
cmp
cmp
test
push
inc
inc
and
retf
xor
inc
cmp
mov
and
xor
cli
and
sbb
pop
cmps
pop
fistp
fcmove
mov
jl
shl
aam
ins
xor
clc
add
jge
ror
sub
cmp
pop
popf
imul
sbb
cmp
xchg
cdq
imul
outs
cmps
loop
jge
or
and
retf
jne
cmc
mov
test
pop
ficom
inc
test
daa
mov
cmps
push
sbb
add
mov
xchg
ds
leave
mov
jl
in
xor
test
xchg
jle
je
aam
push
fisttp
repz
ret
pop
and
push
sbb
in
dec
mov
mov
push
cmp
push
push
jmp
pop
dec
imul
(bad)
(bad)
xor
and
mov
pop
retf
test
xchg
sti
lods
push
test
scas
das
and
loope
sub
jle
inc
cmp
push
sub
add
rol
imul
jmp
cmps
push
out
dec
push
addr16
jp
add
mov
mov
push
ret
jno
ret
dec
jb
and
(bad)
xchg
mov
cmp
sub
and
push
cmc
push
push
mov
dec
sub
add
int3
test
xlat
add
mov
and
xor
cmc
dec
pop
icebp
mov
cli
in
loopne
clc
rcr
fcmovbe
mov
scas
stos
add
lods
test
jecxz
mov
call
mov
fs
fdivr
imul
call
mov
inc
mov
imul
(bad)
sub
(bad)
pop
fst
push
mov
adc
add
jbe
lahf
xor
mov
adc
ror
retf
das
rol
add
movs
mov
mov
std
pusha
pop
cld
pop
sbb
add
jno
daa
jmp
jecxz
test
xor
mov
pop
sti
mov
std
int3
adc
xchg
adc
loop
fisub
sar
jecxz
leave
mov
aad
xor
jae
jle
inc
popf
js
mov
adc
inc
inc
xchg
mov
dec
repz
test
fadd
pop
cmp
out
add
enter
data16
repnz
pop
sub
lds
hlt
(bad)
aas
inc
dec
fwait
inc
ret
adc
idiv
leave
sbb
dec
dec
xchg
bnd
xor
sub
arpl
dec
jl
mov
ds
aad
xor
xor
cmp
cmp
cmp
jb
enter
out
mov
test
and
movs
out
sbb
nop
adc
int3
mov
add
sub
push
push
ins
mov
mov
push
inc
fist
mov
mov
xor
popf
leave
outs
outs
gs
or
jle
fidiv
add
int
cmc
xor
mov
jno
(bad)
mov
ss
call
in
cdq
in
jb
jp
and
mov
lods
add
jns
dec
xchg
mov
or
cwde
jp
dec
jns
jae
mov
push
pushw
xchg
mov
test
add
sbb
cmp
mov
cdq
fbstp
outs
test
xor
test
ret
inc
mov
call
loop
pop
pop
sub
into
sbb
lds
jnp
shr
sti
hlt
lock
mov
dec
mov
(bad)
xchg
in
sbb
sti
sub
int3
dec
inc
repnz
sbb
nop
or
lods
out
xlat
shr
push
mov
js
or
jmp
sahf
cmc
sub
mov
xlat
xlat
(bad)
popf
mov
gs
clc
sub
inc
push
mov
sbb
fsubr
outs
mov
jnp
pop
add
fstp
push
push
pop
pop
div
inc
mov
sbb
int3
ficom
loop
xchg
cmc
(bad)
and
push
jbe
outs
xchg
inc
or
outs
jae
in
enter
aaa
mov
inc
or
ss
mov
pop
xchg
cli
(bad)
sub
std
lahf
out
daa
jle
add
xchg
(bad)
outs
aas
test
fidivr
sbb
jo
stos
push
dec
into
or
bound
inc
dec
push
(bad)
lea
mov
xor
sar
adc
sub
xchg
out
push
and
lea
jns
rcl
shl
xor
jl
test
jecxz
dec
neg
or
into
cmps
xchg
dec
lahf
rcl
fild
fcom
xor
out
jle
and
nop
pusha
aad
cld
data16
sub
hlt
mov
arpl
(bad)
mov
inc
xchg
jnp
and
shl
(bad)
jns
cs
movs
cmp
rcr
pop
and
mov
ret
lds
hlt
push
jle
push
retf
in
stos
push
dec
mov
fdivr
std
(bad)
not
nop
lea
out
(bad)
clc
imul
sub
out
fdiv
mov
push
mov
test
add
imul
aad
xchg
fisttp
fisub
(bad)
pusha
jmp
(bad)
ins
or
(bad)
ret
mov
mov
dec
movs
les
xchg
cmp
or
fisttp
mov
mov
out
in
xchg
in
xor
mov
pop
stos
cmc
push
cmp
retf
fst
ja
pop
mov
ss
lods
cmp
mov
cli
addr16
cmps
repz
add
lea
stos
cmp
push
add
mov
clc
or
ret
push
mov
stos
test
dec
jnp
mov
push
pushf
pusha
push
and
cmp
test
out
add
stos
sub
push
bound
mov
sub
inc
adc
cwde
fdivr
out
out
adc
sar
sub
cs
mov
in
inc
pop
and
call
icebp
and
arpl
cmp
cmp
mov
pop
or
fld
(bad)
adc
in
and
stc
sub
add
gs
inc
mov
iret
add
gs
call
pop
fucomip
mov
cli
xchg
xchg
sbb
mov
fcomp
out
cld
ins
push
or
add
xchg
cli
hlt
xor
adc
jge
loopne
dec
shl
sti
add
push
scas
jl
ins
in
push
cli
leave
gs
cmp
shrd
add
rcr
(bad)
sbb
sub
add
mov
stos
push
mov
cld
inc
sub
push
dec
sahf
ret
out
mov
pop
jle
aaa
aad
push
sbb
or
rol
add
xchg
loope
aas
bound
(bad)
leave
mov
mov
in
or
jmp
mov
fstp
dec
lds
cmc
xchg
popa
sub
bound
mov
jl
je
popf
out
push
push
ss
or
dec
shl
push
jmp
data16
cmp
and
xchg
xchg
mov
mov
loope
mov
or
pop
dec
fsub
fcmovne
sahf
(bad)
neg
xor
ret
fisubr
movs
in
in
inc
pop
or
jnp
inc
mov
clc
adc
xchg
outs
jmp
xor
inc
and
cmp
xchg
push
popf
test
stos
add
jne
arpl
imul
sub
cmp
sbb
or
xor
jmp
outs
ins
sub
cld
pop
or
cmc
and
sub
lea
or
push
cld
and
test
push
pusha
ss
and
add
sti
clc
mov
or
jnp
mov
(bad)
push
inc
push
sub
aaa
retf
cmc
jg
add
sbb
pop
icebp
out
outs
mov
dec
push
fnsave
test
int
and
push
fst
xchg
mov
mov
mov
add
cmp
xchg
add
ins
cmps
sbb
aam
and
cld
enter
fdivr
bound
repz
imul
in
hlt
mov
jbe
mov
inc
add
sahf
sar
jo
popa
jnp
adc
daa
dec
in
push
idiv
adc
or
rcl
ret
and
jge
jnp
stos
shl
mov
push
adc
or
push
xchg
dec
out
mov
les
mov
cmp
ss
inc
vunpckhps
push
outs
cli
(bad)
icebp
in
jg
clc
inc
test
jp
push
test
jg
sahf
or
(bad)
adc
loop
mov
pop
push
add
mov
cmp
popa
ror
dec
jmp
cdq
sahf
bound
cmps
xor
rcl
loop
pop
xor
int
adc
push
enter
mov
and
inc
adc
mov
cmp
sub
push
or
sbb
cmp
loope
int
stc
hlt
aaa
bound
mov
addr16
mov
pop
fadd
jb
jmp
cmp
push
je
mov
sub
push
hlt
push
fsub
mov
ja
mov
push
adc
cwde
call
push
shl
pop
pop
call
sub
xchg
outs
xlat
(bad)
aad
sete
mov
mov
mov
or
call
in
adc
mov
retf
cdq
(bad)
and
out
je
lock
nop
fcom
aad
cmp
mov
fwait
movs
pushf
loope
dec
mov
pop
xor
add
shl
fcmovne
jbe
mov
xchg
cmps
loope
and
push
mov
mov
imul
cmp
scas
int
repz
pop
nop
loopne
xor
jge
in
push
pop
dec
or
jge
sub
mov
and
test
aam
push
clc
stos
popa
fcmovnb
add
sbb
test
(bad)
mov
ja
push
pushf
das
mov
arpl
jg
lods
test
add
sub
sub
clc
out
push
sbb
stc
push
jl
shl
xchg
pop
cmp
push
in
(bad)
cs
pop
or
call
cs
dec
out
add
ret
out
cmps
dec
sbb
nop
sbb
mov
cmp
mov
loopne
mov
mov
iret
faddp
push
xchg
dec
into
mov
or
pusha
loope
enter
push
iret
scas
retf
mov
mov
mov
push
push
cmp
adc
or
cmp
imul
adc
sub
pop
test
data16
mov
add
cmp
xchg
(bad)
fld
dec
out
sti
dec
and
(bad)
icebp
push
clc
pusha
cdq
enter
out
ds
push
jno
sbb
cli
dec
xor
pop
scas
mov
mov
out
in
sar
mov
shr
mov
lea
mov
lods
pop
rcl
shr
mov
pop
mov
cmp
mov
push
call
xor
inc
fimul
add
adc
outs
gs
fimul
xor
xor
outs
pop
adc
je
outs
push
(bad)
fdiv
nop
mov
fsub
aad
icebp
iret
mov
mov
iret
sbb
icebp
neg
pop
jae
sbb
dec
imul
std
and
(bad)
push
sub
mov
in
mov
icebp
xchg
fnstsw
mov
fcmovnbe
mov
xchg
std
push
mov
rcr
div
xchg
xor
ja
arpl
ins
sub
or
inc
in
shl
je
movs
ds
fsub
dec
push
and
pop
call
aas
cmp
stos
adc
aaa
or
mov
(bad)
fstp
push
sbb
(bad)
movs
adc
arpl
push
int
mov
inc
std
loopne
out
jl
rcr
xchg
jg
mov
mov
jbe
arpl
lea
sub
scas
test
mov
popa
adc
es
mov
mov
daa
and
mov
sbb
inc
retf
mov
pop
add
mov
fs
pop
movs
outs
mov
bound
adc
jne
ret
loopne
retf
and
ret
cld
or
pushf
mov
pop
pop
jae
push
std
jl
jmp
call
sub
leave
retf
inc
jnp
pop
cmp
push
inc
mov
xchg
repnz
jl
loop
jb
icebp
xchg
or
xchg
xchg
sub
aam
sti
aas
sbb
push
mov
sub
outs
aam
mov
add
fwait
push
jbe
clc
rcr
cld
or
push
(bad)
(bad)
inc
jecxz
pop
fcomp
mov
aam
sub
shl
fisubr
es
lds
pushf
push
adc
les
jo
pop
icebp
xor
add
adc
adc
lahf
sbb
cmp
lods
jo
jne
loope
js
movs
fbld
pop
pop
adc
sahf
xchg
repz
into
push
dec
xor
mov
xor
je
cs
(bad)
addr16
and
rol
pusha
in
sar
pop
mov
xor
mov
jnp
fidivr
inc
and
sub
icebp
pop
fcomp
lods
rcl
lods
call
leave
xchg
cmp
adc
dec
pop
nop
iret
dec
jg
(bad)
call
sub
push
iret
add
mov
xor
mov
inc
ja
mov
mov
cmp
rol
mov
stc
stc
dec
ret
pusha
xor
add
mov
mov
repz
div
fstp
sbb
popa
mov
icebp
adc
ins
shr
push
loop
add
outs
nop
dec
pop
arpl
jae
and
and
dec
out
mov
mov
push
aad
jae
pop
dec
push
pop
and
stc
xor
push
xchg
push
out
mov
nop
lea
adc
aas
adc
test
jg
and
lea
cmc
cmp
fldcw
jecxz
loopne
test
sbb
outs
pop
mov
pop
bound
cmp
(bad)
and
mov
gs
sub
push
or
or
inc
adc
mov
xlat
mov
or
xor
popf
lds
fdiv
mov
ins
(bad)
in
push
or
jo
xor
(bad)
fsubr
rcr
inc
enterw
dec
icebp
js
dec
hlt
cld
push
(bad)
call
call
and
les
loope
lea
mov
popf
clc
xchg
bound
je
add
test
ss
jmp
sub
dec
imul
inc
jle
inc
cmp
mov
stc
inc
push
test
fld
out
shr
adc
push
cmp
popf
retf
pop
or
int
push
jb
call
cmp
or
rcl
lock
fistp
test
fs
sub
ret
pop
scas
std
(bad)
add
jmp
(bad)
call
mov
(bad)
stos
ins
jbe
inc
rcr
imul
inc
mov
pop
xlat
nop
cmp
sbb
or
fild
in
mov
les
sub
(bad)
enter
and
jne
jbe
cs
scas
mov
sub
and
pop
addr16
outs
in
dec
cmp
sar
ret
dec
(bad)
mov
cmp
inc
push
xor
repz
lea
test
xor
sub
push
add
push
in
lock
push
pop
call
into
ds
mov
scas
imul
pop
xchg
movs
add
jno
inc
xor
aas
xor
aam
add
or
or
pop
ds
jle
add
mov
and
xor
inc
jle
out
nop
ins
or
inc
cmp
cmp
cmp
xchg
lock
jns
adc
es
fs
(bad)
adc
pop
xchg
hlt
and
inc
cwde
jmp
ja
and
data16
mov
fcmovnb
test
dec
xchg
cmp
jo
cmps
ror
mov
push
sbb
popf
(bad)
aas
les
clc
dec
fsubr
movs
sub
cmps
dec
xchg
out
mov
sub
call
add
add
std
dec
clc
cmp
popf
cli
fisttp
adc
comiss
push
push
outs
fmul
mov
mov
lds
sub
(bad)
dec
movs
rcl
in
fsubr
cld
sub
hlt
movs
pushf
pop
daa
dec
jbe
clc
fwait
jle
or
int
push
das
mov
dec
mov
retf
fs
or
test
sbb
dec
xchg
adc
lock
sbb
dec
cmp
(bad)
repnz
dec
out
jb
(bad)
xchg
div
mov
add
jns
repz
out
stos
test
mov
test
push
repnz
jb
push
sub
and
sbb
mov
out
sub
push
adc
outs
mov
add
shl
mov
hlt
inc
mov
(bad)
out
and
js
mov
nop
add
and
nop
jo
ret
sub
lea
mov
inc
data16
fist
mov
je
lock
mov
or
movs
push
retf
jbe
inc
xchg
jecxz
stc
jl
jp
push
add
add
jp
je
cmp
scas
shl
cmp
add
xor
popa
sub
shl
loopne
nop
xor
imul
sbb
mul
jbe
push
movs
dec
in
jnp
dec
mov
imul
xor
mov
das
add
adc
(bad)
gs
or
imul
(bad)
mov
(bad)
js
mov
mul
mov
jno
stos
mov
pop
call
and
int3
push
inc
inc
sar
mov
fist
mov
pop
sub
mov
mov
aaa
in
jo
add
mov
lock
movs
xor
add
xchg
sbb
adc
jbe
jns
pop
movs
clc
xchg
nop
(bad)
test
js
std
fisttp
sar
pop
or
and
sub
imul
xor
daa
pop
dec
and
aaa
(bad)
or
jne
add
jmp
rcl
mov
mov
mov
bnd
push
in
jno
xchg
mov
test
add
or
loopne
add
jns
cmp
xchg
leave
sbb
mov
lahf
adc
pop
imul
arpl
jmp
push
shl
test
sub
fwait
jae
mov
in
arpl
pop
cmc
sub
gs
test
les
aam
mov
(bad)
jmp
push
sub
ins
shl
aas
ret
jecxz
xchg
dec
(bad)
jge
daa
or
dec
fadd
or
repz
mov
fst
adc
leave
or
fldenv
mov
dec
add
xor
pop
jle
or
dec
outs
les
xchg
outs
int3
inc
dec
or
jmp
inc
sub
or
lods
je
sbb
jo
dec
dec
stos
in
lea
push
sub
mov
dec
and
(bad)
lods
aad
cdq
test
movs
ficomp
mov
cmp
xchg
mul
movs
dec
cld
call
sub
mov
stos
(bad)
pop
jae
mov
push
sbb
dec
pop
in
mov
or
imul
fstp
or
sub
xor
pop
in
push
cmps
and
push
retf
mov
ins
mov
xchg
out
mov
pop
out
scas
daa
ret
stos
not
sbb
out
push
and
jbe
sahf
mov
(bad)
or
icebp
mov
leave
mov
mov
and
into
and
push
es
(bad)
popf
mov
push
fcom
in
dec
mov
cwde
xor
test
test
mov
sub
push
in
js
add
stos
dec
in
or
hlt
mov
xchg
scas
jb
shl
cmp
and
movs
push
xor
adc
(bad)
ja
sbb
(bad)
imul
mov
div
sbb
rcl
push
cdq
inc
and
rcl
sbb
jno
iret
in
xor
cmp
sbb
out
or
dec
push
div
outs
sbb
pop
and
mov
call
mov
shr
or
or
cli
push
in
jp
cmps
pop
mov
pop
jmp
xchg
cli
xor
rcr
mov
xchg
retf
stc
and
imul
stos
ja
add
push
out
sbb
iret
jo
call
dec
xchg
dec
les
sub
hlt
(bad)
or
pop
push
dec
test
push
mov
adc
jno
fimul
mov
add
shr
fdiv
xor
iret
sub
pushf
xchg
ja
in
jge
mov
mov
outs
out
push
or
pop
dec
cmp
xchg
xor
pop
or
arpl
out
jg
imul
cmp
mov
stos
mov
pusha
sub
stos
add
cmp
into
xor
mov
cld
and
inc
xchg
and
pop
cld
inc
fbstp
add
inc
aas
inc
or
cmc
cmp
ins
sbb
mov
out
js
jae
pop
test
xor
shr
sbb
or
inc
mov
unpcklps
xor
ds
mov
daa
in
loopne
jo
mov
fwait
in
cld
add
retf
jnp
mov
dec
lods
mov
fbstp
sbb
mov
lock
dec
add
push
test
xor
jne
push
shl
dec
and
or
xor
sub
push
adc
or
(bad)
nop
ins
in
sub
inc
(bad)
sub
pop
aam
xor
int
push
jg
xchg
aad
lods
sub
cmp
jnp
xor
inc
add
xor
sub
pushf
rcr
lahf
add
pop
fimul
cmp
and
jl
sub
adc
in
stos
xchg
mov
jg
xchg
pusha
mov
cmp
fs
cmp
fcom
jo
inc
repz
ds
mov
mov
in
loope
mov
mov
inc
jno
inc
out
cli
out
lods
push
jo
xchg
xor
clc
and
pusha
cmp
xlat
stos
repz
scas
mov
arpl
test
adc
jle
cmp
pop
cmp
xchg
jle
iret
(bad)
mov
rcl
dec
fadd
inc
nop
jg
xchg
inc
inc
mov
adc
inc
jge
inc
ret
int3
dec
and
jmp
scas
mov
mov
cwde
sub
sahf
cmp
leave
rcl
cmp
pop
sbb
cli
inc
idiv
cmps
loope
mov
dec
push
scas
inc
push
imul
inc
adc
leave
les
cmp
js
retf
xchg
sbb
fadd
xor
push
leave
cmc
dec
add
sbb
fistp
jns
mov
mov
call
jecxz
xchg
fsub
sbb
and
dec
dec
cmps
mov
xor
fild
jmp
adc
test
fisub
lods
push
mov
mov
fidivr
xchg
sbb
call
repz
rcl
(bad)
mov
add
rcr
adc
outs
adc
enter
pop
pop
mov
pop
xlat
scas
psrad
lahf
mov
mov
fcom
xchg
add
test
xchg
movs
mul
and
out
test
sub
dec
fsub
cmp
(bad)
adc
mov
cmp
push
adc
aaa
outs
add
retf
rol
jo
xchg
lds
arpl
jnp
sbb
xchg
add
or
cdq
std
mov
cmp
pop
int3
jmp
dec
jl
inc
mov
iret
std
test
(bad)
mov
cmp
ror
leave
xor
xchg
mov
dec
and
add
nop
icebp
cmps
add
xor
icebp
stos
or
call
(bad)
leave
xchg
lss
(bad)
pop
or
mov
jge
scas
movs
cmp
mov
pop
in
inc
jl
cmp
mov
sti
inc
repz
cmps
inc
xchg
xor
aad
mov
xor
ficomp
cmps
fld
mov
in
xchg
xlat
lahf
mov
(bad)
push
mov
mov
mov
aaa
xor
sub
inc
add
es
or
jae
fwait
or
xor
dec
clc
or
sub
xchg
stos
hlt
(bad)
js
mov
push
mov
xchg
mov
mov
cli
jge
cmc
call
xchg
outs
cmp
or
(bad)
mov
cmp
mov
mov
mov
shl
mov
loop
aas
sub
dec
push
fwait
dec
sbb
sbb
dec
push
call
into
xchg
pop
daa
cmps
fistp
push
ja
xchg
dec
out
mov
fwait
xor
lea
lahf
xlat
jne
inc
mov
(bad)
enter
in
sub
mov
or
out
ins
xlat
cs
enter
jle
jae
ins
adc
push
(bad)
popf
cwde
jo
repnz
push
xchg
dec
loop
outs
mov
mov
mov
jge
add
cdq
push
xchg
test
mov
inc
in
fadd
loop
je
inc
cmp
push
add
sbb
out
xchg
gs
sub
retf
mov
push
xchg
popa
cmp
pop
sbb
ja
mov
cli
mov
ja
jmp
or
pop
xor
test
aad
dec
mov
jmp
call
sbb
test
cmps
scas
adc
retf
xor
push
push
xchg
fisub
int
mov
and
xor
bound
fidiv
stos
xor
adc
and
dec
test
daa
ja
xchg
fisub
icebp
cmc
xchg
or
sub
mov
adc
lds
xchg
push
mov
int3
sbb
add
or
xor
call
jbe
std
shl
mov
and
cmp
or
in
jno
ins
fnstcw
in
mov
and
or
cmp
test
nop
pop
lea
xor
or
scas
retf
fiadd
push
test
(bad)
mov
cmps
in
push
sbb
push
mov
je
outs
call
imul
mul
in
xor
mov
je
mov
repnz
or
jns
test
push
push
xchg
pop
mov
xor
pusha
pushf
fild
lea
mov
jl
cs
push
ror
loop
and
nop
pop
xor
adc
enter
sar
jno
dec
(bad)
mov
jmp
dec
cmp
pop
pop
dec
pop
mov
int
mov
into
ins
and
popa
pop
push
xchg
lahf
sub
stc
arpl
mov
dec
ins
cmp
and
pop
inc
jp
adc
call
sub
cmp
out
ins
dec
mov
rcl
mov
ja
and
add
popf
mov
dec
push
adc
jns
xor
sub
ret
shr
jg
xor
imul
mov
xchg
aaa
pop
pop
push
xchg
retf
inc
sbb
(bad)
icebp
sbb
push
dec
dec
cwde
add
add
mov
scas
test
xchg
jno
mov
int3
lahf
pop
mov
dec
fld
cmp
cmp
xor
aad
lahf
jnp
mov
(bad)
stc
sbb
hlt
gs
xor
sub
sti
or
inc
xchg
ins
nop
pop
in
xor
dec
mov
mov
adc
setge
jne
and
rcr
adc
mov
pop
dec
hlt
(bad)
push
out
cmp
les
pop
cmp
dec
fimul
sub
(bad)
pop
adc
imul
pop
ds
xchg
jns
mov
std
jge
ret
in
std
pop
mov
loope
jle
call
(bad)
dec
ret
shl
xlat
xchg
iret
sti
cmps
mov
in
lahf
addr16
push
adc
mov
sbb
les
imul
lea
sub
or
sub
lock
and
iret
cdq
out
mov
movs
dec
dec
aaa
mov
int
cmc
push
rcl
(bad)
inc
lahf
dec
imul
fstp
data16
pushf
mov
pop
dec
dec
data16
jmp
sar
aaa
adc
test
and
ret
pushf
(bad)
int3
jno
pop
stc
aas
ins
fldenv
mov
popf
jmp
cmps
pop
enter
and
adc
stos
and
jle
call
pusha
jg
mov
js
cs
cmp
icebp
repnz
or
push
dec
add
loope
sbb
fcomp
movs
and
xchg
pop
ficom
div
add
imul
inc
fisttp
push
dec
or
inc
ja
push
dec
adc
push
xchg
out
out
fsubr
or
test
mov
sub
push
in
(bad)
mov
jge
mov
mov
jne
push
aam
sub
xchg
pop
cmps
cli
in
in
dec
mov
pop
js
and
jle
adc
int
mov
and
aas
imul
mov
iret
sbb
cmp
cwde
jmp
push
popf
dec
dec
icebp
inc
pop
xchg
out
push
xchg
xor
clc
or
mov
and
outs
push
mov
icebp
cmp
into
sahf
sti
and
ss
inc
mov
sub
lds
add
adc
jl
cmc
xchg
stos
mul
loop
retf
cs
leave
dec
sub
in
arpl
ins
cmps
cmp
sbb
push
mov
in
ds
mov
mov
dec
ins
sub
js
iret
mov
js
cwde
push
push
sub
lahf
retf
xchg
lea
pop
lods
pop
inc
add
or
mov
mov
or
test
aam
mov
sti
sar
mov
mov
in
stos
push
lea
fdivrp
mov
add
and
outs
ja
push
and
cmps
inc
mov
sbb
sahf
movs
xchg
sub
xlat
adc
je
stos
fmul
stos
or
js
add
mov
inc
gs
ret
sbb
outs
jnp
shr
sub
out
cwde
pop
pop
dec
cmp
cmps
and
push
add
repnz
int3
mov
les
add
lahf
adc
mov
mov
sub
jg
mov
fimul
sbb
cmc
ja
es
or
call
or
(bad)
retf
lods
pop
sbb
adc
repz
aam
add
imul
(bad)
popf
retf
out
mov
les
(bad)
dec
cmp
push
js
dec
pop
sti
out
lahf
mov
(bad)
sbb
sbb
adc
jns
sub
xchg
rol
xor
dec
daa
ror
mov
pop
mov
push
sub
dec
jmp
sahf
cmp
cmps
inc
mov
out
leave
push
(bad)
outs
jp
adc
jbe
and
pop
das
mov
push
(bad)
ret
xor
aas
jmp
cmp
js
out
adc
(bad)
addr16
and
stc
inc
pop
jp
xor
adc
lahf
jge
jg
mov
adc
push
pop
or
sub
or
dec
popf
nop
mov
test
iret
mov
sti
cwde
scas
jmp
in
cmp
dec
xchg
jnp
test
fwait
xchg
pop
adc
push
test
jne
sub
aas
push
adc
std
outs
sub
push
jne
mov
or
adc
mov
add
lods
lods
inc
xor
into
pop
mov
cmp
mov
pop
push
cmp
jnp
shr
pop
jo
push
sub
inc
adc
das
cmc
test
mov
xchg
or
jg
stos
(bad)
pusha
sbb
aad
xchg
ins
xor
mov
dec
xchg
mov
test
cmps
jl
mov
xchg
mov
push
nop
or
or
movs
mov
daa
sbb
aad
mov
inc
fsub
test
sahf
movs
imul
cmp
dec
and
fistp
loope
and
push
mov
sub
and
pop
adc
push
push
dec
ds
and
adc
add
in
jg
fcomp
cmp
(bad)
popf
scas
push
je
repz
rcr
test
sub
inc
add
cmp
outs
stos
out
push
js
or
jb
out
cmp
dec
cmp
jae
repz
cmc
cmp
mov
or
call
xchg
push
test
mov
(bad)
gs
and
mov
add
sub
xchg
sub
and
call
xchg
xor
and
push
sub
push
sbb
loop
les
aad
push
jnp
fnstsw
pushf
jmp
add
aad
pop
stos
xchg
test
test
retf
cmps
or
fiadd
jae
pop
adc
bound
inc
pop
mov
adc
imul
xor
mov
lods
popf
std
jmp
and
mov
push
bound
inc
inc
push
add
popa
cli
scas
mov
scas
and
push
jmp
cmp
(bad)
aad
ret
das
bound
cmps
lds
sub
pop
adc
cmp
xchg
rcl
cmp
cdq
mov
inc
fsub
cld
jne
fs
ds
pusha
xchg
ret
test
push
pop
or
mov
es
or
add
mov
push
mov
in
xchg
cli
(bad)
popa
xchg
and
cmp
imul
mov
xchg
sub
xchg
sbb
adc
mov
xchg
cmp
xchg
mov
out
fnstenv
pop
jmp
push
xor
mov
adc
dec
jns
daa
sbb
fcmovne
outs
enter
xor
lods
adc
xchg
(bad)
fisttp
inc
in
fwait
mov
mov
outs
xchg
fisttp
js
pop
ret
and
mov
sahf
jne
sti
jno
adc
fist
add
leave
xchg
loop
dec
test
ror
loope
addr16
push
pop
(bad)
dec
mov
cs
call
xor
xchg
hlt
adc
pop
xlat
push
test
repnz
mov
xchg
cmp
addr16
in
dec
retf
pop
pop
icebp
call
leave
lods
mov
rcl
inc
shl
cmc
mov
push
leave
jecxz
je
call
dec
ret
(bad)
push
stc
mov
mov
jmp
int3
and
into
add
add
mov
jno
out
or
rol
push
push
sub
int
adc
rcl
mov
push
jne
js
pop
in
or
inc
dec
and
and
mov
dec
outs
pusha
icebp
or
ins
loopne
nop
mov
jo
jo
neg
jo
jbe
xor
shl
xchg
jp
xor
jmp
add
sub
aaa
add
jp
inc
rcr
cmp
movs
mov
jmp
fdivr
mov
adc
je
mov
aam
pop
retf
or
mov
fstp
sub
ds
enter
(bad)
movs
retf
ror
dec
cwde
fsub
fild
push
dec
(bad)
hlt
mov
sub
les
cmp
push
loope
aam
xchg
cmps
mov
xchg
xlat
rol
jne
inc
mov
xchg
arpl
mov
mov
out
pop
inc
mov
xor
mov
sbb
and
mov
mov
adc
pop
rcl
test
(bad)
cmp
jmp
lods
rol
fadd
sar
rol
in
leave
popf
mov
and
in
aas
adc
or
mov
(bad)
lahf
arpl
loop
add
mov
jmp
sbb
jge
adc
push
mov
or
xlat
mov
fild
mov
je
mov
add
sub
inc
push
(bad)
fdivr
repnz
test
push
sub
cld
dec
push
hlt
dec
xchg
add
jecxz
cs
ret
(bad)
(bad)
icebp
mov
cmc
mov
mov
mov
and
inc
sub
pop
fisttp
test
(bad)
aad
mov
mov
jne
mov
test
loopne
stc
daa
ret
or
inc
ss
xchg
push
rol
pop
cmc
cmp
mov
in
add
(bad)
leave
or
ja
rcr
mov
adc
out
pop
cdq
pop
cli
cmc
mov
imul
adc
test
repnz
xchg
jae
(bad)
es
dec
push
dec
mov
cs
inc
(bad)
xchg
push
(bad)
adc
loop
cwde
mov
xchg
xchg
push
pop
push
add
lds
addr16
int
pusha
xor
jmp
push
push
aas
mov
in
jno
mov
out
mov
loopne
adc
inc
xchg
retf
cmp
xchg
movs
movs
out
or
mov
lods
mov
cwde
cwde
rol
jo
gs
push
lds
and
in
shr
enter
imul
jecxz
ins
dec
jbe
data16
mov
bound
ins
mov
mov
fcmovb
sbb
imul
add
mov
mov
ja
icebp
adc
int3
cmps
xor
ins
push
sbb
sbb
arpl
int
stos
mov
inc
out
js
mov
into
mov
add
js
into
aad
fcmovbe
xchg
mov
inc
pop
mov
push
out
inc
push
inc
arpl
push
movs
loop
outs
int
xor
pop
lahf
xchg
sbb
mov
imul
xor
retf
lea
arpl
mov
xchg
xchg
pop
or
lahf
dec
sbb
cmp
fcom
(bad)
in
pop
xchg
das
add
loopne
add
fild
cdq
jbe
pop
(bad)
or
dec
jecxz
adc
repnz
cmp
xor
sbb
sahf
fisub
in
out
je
xor
pop
push
pop
sbb
retf
test
mov
xchg
adc
inc
mov
idiv
fsub
inc
cld
pop
lock
inc
mov
sbb
jle
jge
hlt
or
push
jge
outs
adc
mov
mov
cmp
xchg
out
adc
mov
repnz
loopne
imul
in
ss
jno
pop
cli
mov
mov
or
ror
dec
lods
lock
sti
cld
push
and
mov
and
dec
mov
mov
enter
daa
sbb
(bad)
sub
xchg
mov
cmp
fcmovu
(bad)
mov
stos
fistp
retf
pop
in
sbb
test
mov
int
mov
repz
ja
into
jae
jmp
mov
test
outs
test
inc
das
int
shr
call
jae
scas
ror
dec
int3
aaa
jg
jmp
sahf
push
fist
movs
dec
outs
xchg
jbe
outs
or
cmp
inc
mov
adc
in
stc
mov
pusha
js
jl
stc
mov
loopne
adc
jno
jecxz
xchg
push
aas
iret
(bad)
mov
lock
and
push
jp
and
xor
jno
sub
sbb
add
mov
push
jo
or
xchg
xchg
aas
test
ret
daa
push
add
add
pop
in
push
shr
icebp
mov
or
les
stos
cmp
(bad)
lahf
jmp
xor
or
imul
cmp
fldcw
add
and
sub
add
cmps
retf
stos
imul
inc
pop
jecxz
fwait
je
(bad)
mov
int3
mov
sti
sbb
adc
xor
das
or
fsub
outs
pop
jbe
jge
dec
xchg
lahf
inc
es
add
out
fcomp
inc
sbb
mov
popf
scas
shr
inc
dec
std
xchg
lock
shl
cmp
in
stc
bound
jge
int3
adc
ins
rcr
daa
push
out
ins
pop
adc
add
inc
enter
stos
cmc
ret
xor
(bad)
adc
mov
in
sbb
retf
in
mov
cmp
adc
lock
paddsw
inc
call
sahf
retf
sub
jne
inc
and
call
dec
sbb
mov
pop
push
shufps
mov
int
shr
jmp
push
and
sub
das
scas
xchg
mov
iret
aas
dec
call
jne
xchg
jae
mov
ret
pop
pusha
sub
jmp
push
dec
into
push
ret
and
sub
xlat
mov
shr
and
xchg
mov
mov
leave
mov
leave
test
lea
xor
daa
xchg
arpl
cmp
pop
xchg
out
push
jns
cli
cmp
mov
sbb
test
int
cmp
and
idiv
enter
jo
popa
shl
push
xor
icebp
arpl
movs
fnstcw
in
inc
movs
mov
or
pop
adc
retf
adc
jecxz
stos
into
sbb
(bad)
rcr
mov
lea
ss
lods
leave
dec
data16
add
jbe
xor
jnp
out
sahf
dec
cmps
jge
sub
mov
fld
inc
or
xchg
mov
out
jg
xor
push
sub
jle
cdq
stos
out
hlt
inc
mov
cs
fst
adc
fisttp
jno
adc
or
mov
out
pushf
push
test
ja
mov
(bad)
push
adc
jno
push
inc
mov
mul
jmp
jp
ja
sub
or
(bad)
cld
(bad)
rol
mov
jl
iret
scas
std
and
inc
xchg
loop
(bad)
dec
(bad)
jmp
inc
push
lock
jbe
dec
adc
lds
out
popf
sub
jae
call
in
xchg
sahf
or
fild
cwde
mov
jmp
mov
addr16
pusha
mov
js
mov
adc
fs
in
in
jmp
lods
mov
mov
mov
(bad)
and
pusha
mov
inc
int
sahf
test
cmp
dec
mov
cmp
or
pop
popa
loop
cmp
mov
pushf
mov
or
xchg
adc
cs
mov
jmp
cli
or
adc
std
mov
movs
ins
xchg
dec
lods
xchg
(bad)
fsub
into
pop
lods
push
bound
xor
es
outs
mov
stc
add
das
or
cmp
rol
cs
push
jp
(bad)
aas
dec
mov
loope
outs
retf
test
data16
cmps
inc
addr16
test
sbb
jb
push
adc
in
push
adc
jo
and
imul
lahf
and
jae
jae
stc
fild
push
inc
fist
sbb
dec
mov
inc
ds
mov
out
jns
inc
in
xchg
add
xlat
jg
int
xor
call
(bad)
cmp
push
and
sbb
ins
mov
sar
or
daa
mov
sbb
mov
call
ror
mov
and
loope
xchg
ds
push
pop
mov
mov
inc
out
stc
xchg
das
dec
mov
add
or
out
lock
test
loopne
fsubrp
push
pop
jmp
dec
xchg
rcr
dec
in
sbb
in
stos
lea
loopne
imul
jo
pushf
xor
push
call
push
jge
mov
mov
push
xchg
mov
inc
xor
mov
pushf
dec
imul
xor
pop
inc
cmp
icebp
sbb
(bad)
and
stos
adc
xor
int3
cmp
int3
jmp
xchg
fwait
sbb
lock
js
(bad)
sti
jle
in
out
cmp
xor
adc
test
mov
jae
add
in
and
xor
add
or
mov
mov
jns
test
sbb
fs
in
pop
ret
fcomp
es
push
in
ror
enter
pop
push
adc
add
sbb
in
jmp
push
ja
ins
fld
sbb
inc
and
mov
sbb
pop
xchg
xor
mov
xor
push
jnp
push
aam
out
adc
addr16
push
xchg
lock
aas
fimul
hlt
test
aam
xor
xor
xchg
or
dec
jmp
mov
stos
ror
push
pop
mov
xchg
out
ss
je
xor
jle
lods
jmp
mov
fdiv
push
(bad)
fdivr
adc
push
pop
inc
mov
inc
popa
rol
jne
pop
loopne
loope
in
add
jns
shl
mov
or
imul
jbe
iret
pop
push
cmp
neg
in
pop
mov
push
push
jb
cli
lahf
xchg
push
mov
popa
(bad)
fnstenv
in
call
mov
mov
fcomp
push
xor
pop
push
push
ds
mov
pusha
cmp
push
cmp
mov
gs
inc
fwait
icebp
popf
(bad)
mov
pop
xchg
xor
cmps
(bad)
xor
add
sbb
mov
sar
test
cmp
cmp
shl
adc
and
mov
test
dec
scas
cmp
rcr
movs
(bad)
sbb
mov
pop
and
cmp
jb
(bad)
mov
pusha
or
std
mov
push
mov
pop
xor
mov
mov
ror
push
les
or
jecxz
ins
shl
in
repnz
into
loop
inc
sbb
jnp
movs
cmp
scas
inc
fst
xor
jle
adc
mov
fbld
cmp
mov
cmp
xor
sbb
fidivr
ror
jl
inc
(bad)
mov
pop
test
adc
mov
sti
or
sbb
and
fistp
pushf
sub
jo
popf
sbb
(bad)
cmp
sbb
fmul
loopne
xchg
test
(bad)
(bad)
add
dec
nop
(bad)
push
je
adc
dec
int
push
in
stos
int
inc
femms
fnstcw
dec
cld
cli
cdq
mov
out
xor
ins
inc
retf
pop
stos
xor
test
cmp
add
jle
jecxz
ror
adc
hlt
pop
and
clc
outs
jne
rep
xchg
pop
mov
loope
mov
loopne
in
xchg
std
sbb
or
or
xlat
fwait
dec
js
arpl
lods
ret
scas
jae
inc
repz
jl
xchg
jb
xor
ret
pushf
adc
cs
addr16
mov
mov
mov
mov
out
repnz
mov
adc
adc
test
or
add
paddusw
xchg
pusha
xchg
add
adc
addr16
adc
push
adc
aas
push
in
push
push
enter
movs
stos
push
adc
pop
xchg
das
fild
inc
das
push
in
mov
push
lods
js
cmp
jno
inc
inc
adc
stc
lods
xchg
pop
jg
sbb
adc
lock
or
int
jmp
mov
xlat
push
cmp
dec
shr
jge
mov
test
outs
mov
jae
push
int
lods
adc
or
leave
push
mov
sbb
jge
sub
fidivr
add
xchg
jle
je
sub
cdq
cmp
pop
push
mov
sbb
jle
mov
nop
(bad)
cmp
xchg
cwde
sti
int3
bound
and
cld
stc
sub
int3
jbe
imul
aaa
aas
int3
retf
or
mov
loope
jg
in
push
sbb
xchg
xchg
mov
je
adc
mov
outs
mov
jns
sbb
pop
ss
mov
push
jecxz
clc
push
test
out
mov
jbe
popa
addr16
iret
or
or
push
push
jbe
ss
and
int
push
sub
cld
sbb
jmp
movs
aam
shl
pop
or
das
mov
xor
in
test
inc
sbb
or
cmp
sahf
jecxz
xor
idiv
movs
ins
sahf
mov
repz
cdq
pop
mov
(bad)
outs
jno
bound
(bad)
fcom
sub
pop
pop
jp
push
pop
or
and
mov
(bad)
es
popa
ret
data16
rcr
dec
mov
push
rol
sub
mov
mov
sbb
pop
ds
xchg
(bad)
sub
lds
popa
cwde
out
push
imul
sahf
fwait
outs
inc
or
add
push
ss
call
mov
(bad)
cld
mov
inc
pop
or
xchg
jns
push
add
loopne
cmp
jg
adc
inc
loopne
stc
imul
sbb
or
fild
aaa
pop
or
add
add
popa
(bad)
sub
mov
icebp
push
lock
pop
sahf
xchg
mov
fs
pop
xor
add
cs
fs
ret
pop
fwait
in
popa
jl
cmc
popf
das
xor
mov
pop
(bad)
dec
movs
jb
xchg
leave
inc
cmc
push
and
dec
fimul
mov
sti
sub
pause
mov
cmp
(bad)
std
ja
(bad)
popa
repnz
pusha
scas
pop
add
push
mov
add
pushf
ret
repnz
sub
jb
pop
popf
sbb
scas
test
mov
xchg
cmps
mov
add
gs
fild
fist
cmp
adc
inc
mov
retf
bnd
sar
sub
mov
into
cs
cmc
sbb
fadd
xor
sbb
test
lock
mov
dec
dec
cmp
xchg
pop
adc
out
out
lahf
or
mov
dec
lds
dec
sub
xchg
jo
dec
inc
and
and
and
xlat
jmp
sub
ret
cmc
addr16
movs
sub
je
xor
(bad)
out
and
push
and
xor
fdivr
test
ds
or
inc
mov
hlt
push
movs
cwde
out
stc
scas
inc
ins
scas
inc
adc
std
in
test
sahf
push
stos
jecxz
inc
push
pop
adc
call
retf
das
cmp
mov
pop
call
aaa
stos
test
fwait
push
movs
push
cmp
in
xchg
mov
jp
xor
dec
out
xchg
imul
xchg
mov
std
popa
sti
out
jno
dec
scas
jb
cmp
jns
lahf
je
xchg
test
movs
and
retf
inc
mov
push
and
push
ret
inc
inc
ins
xchg
fadd
sbb
sub
adc
mov
rol
or
bound
pop
jle
sub
xor
jmp
das
xchg
xlat
dec
mov
pusha
pop
and
lods
pop
dec
mov
outs
fstp
std
jecxz
call
enter
leave
adc
xchg
test
out
push
mov
call
ret
add
test
jl
leave
push
xchg
cwde
push
ja
test
hlt
mov
jp
dec
shr
(bad)
jle
pop
ret
push
jp
dec
in
inc
pop
repnz
ficomp
pop
jle
fmul
pop
xor
bound
aaa
dec
mov
cmp
jae
test
sub
fwait
mov
sub
push
mov
sti
aad
push
push
mov
in
push
push
int3
nop
leave
arpl
dec
shr
fiadd
ror
dec
rcl
mov
lods
fwait
les
jb
sub
sbb
fstp
cwde
jmp
pop
call
adc
and
popa
sub
(bad)
or
jae
fldenv
in
xor
jns
mov
ret
push
div
push
xor
and
push
sub
adc
rcr
test
push
retf
pop
adc
icebp
test
push
jbe
jge
(bad)
lahf
mov
aad
dec
xor
and
xor
fcomp
cmp
les
pop
in
stos
xchg
fmul
cmc
or
dec
sti
pop
push
cmp
dec
cmp
mov
push
mov
or
pusha
loop
mov
dec
(bad)
imul
fmul
cmp
and
xchg
mov
int3
sub
ss
cmp
sub
fwait
inc
inc
rcl
dec
imul
inc
std
jmp
cmp
inc
das
push
mov
cmp
(bad)
je
sbb
jle
(bad)
out
mov
cmp
fdivr
mov
adc
scas
jle
sbb
cs
cmc
inc
repnz
ins
xchg
mov
rcr
dec
mov
inc
fadd
shl
pop
fstp
push
cli
jnp
jmp
add
int
xor
addr16
lahf
mov
in
jge
adc
adc
out
rol
mov
pop
lahf
dec
mov
fld
xchg
into
imul
scas
adc
xor
xchg
(bad)
mov
not
mov
sub
pop
lods
jb
inc
add
mov
aad
cmc
inc
fiadd
mov
adc
out
dec
lea
xchg
or
fidiv
pop
xchg
pop
fidivr
push
adc
dec
add
adc
clc
lock
stc
ud2
cli
sub
mov
jnp
add
adc
in
push
adc
push
mov
jnp
sbb
cli
jne
out
xor
outs
aaa
mov
push
mov
pop
jle
and
mov
push
jmp
inc
bound
sub
and
(bad)
adc
push
pop
adc
mov
mov
ds
push
mov
outs
and
jg
push
jge
out
repz
add
xlat
sbb
xchg
movs
rol
fistp
pop
outs
daa
inc
shl
pop
cmp
add
mov
fdivr
adc
or
add
imul
out
fld
test
cwde
cwde
lods
out
adc
push
(bad)
xchg
jo
je
or
mov
mov
pusha
pop
dec
xchg
mov
push
stos
fs
dec
out
jns
cmp
sub
dec
xor
push
sahf
cmps
jge
mov
sub
or
rcl
repz
mov
push
call
push
pop
(bad)
iret
cmp
lock
adc
adc
sbb
call
jno
test
fwait
adc
jle
pop
movs
mov
js
xor
mul
clc
inc
add
out
add
ja
rol
mov
test
jg
push
mov
stc
and
dec
xchg
js
xor
mov
pushf
inc
cli
sbb
mov
test
sub
int3
sti
outs
or
loop
xchg
sti
xchg
pop
mov
inc
mov
test
retf
and
inc
rcl
pushf
jnp
or
test
or
neg
sbb
scas
dec
xchg
mov
mov
add
icebp
enter
ror
ret
aas
push
adc
jo
xor
mov
inc
xor
mov
add
mov
cmp
lock
jge
add
cmp
cdq
cld
and
xor
pop
aas
popf
mov
fisubr
pop
jns
imul
in
cs
loop
add
repnz
inc
aaa
pop
in
inc
shr
cs
or
popf
push
not
out
push
jge
int3
jbe
sub
movs
jno
arpl
daa
leave
cmp
(bad)
and
sub
pop
test
or
cmp
dec
pop
mov
stos
mov
pop
jnp
dec
int3
mov
imul
mov
cmc
pop
out
loope
loopne
out
lods
(bad)
cli
mov
jne
stc
push
into
cmp
mov
int3
push
in
mov
add
mov
int3
in
mov
push
movs
sar
inc
sahf
dec
inc
or
retf
jno
repz
xor
daa
push
pushf
(bad)
lahf
jp
lds
out
iret
push
inc
cmps
sbb
mov
outs
cld
rol
stc
cli
ja
dec
jbe
jnp
dec
inc
sub
pop
repnz
sti
ror
mov
jle
jge
cdq
xchg
mov
add
lock
jecxz
sti
jns
stos
leave
jmp
pushf
rcl
xlat
bound
pop
mov
test
add
xor
jne
std
and
into
fdivr
add
add
pop
jecxz
aaa
pusha
jns
xchg
(bad)
sti
inc
add
lods
lock
data16
sbb
push
pushf
sbb
in
inc
leave
cwde
imul
call
and
in
xchg
dec
dec
push
xor
push
and
mov
cwde
cdq
ret
int3
pop
xchg
fisub
mov
pop
(bad)
and
sti
setge
iret
or
loop
call
add
ja
xchg
arpl
inc
or
adc
xchg
jg
es
jg
xchg
clc
xchg
xlat
mov
pop
inc
inc
cmp
scas
add
cdq
das
lds
call
cmp
jne
call
cmp
inc
cmp
push
lds
mov
lds
into
movs
dec
sbb
mov
cmc
scas
sbb
out
mov
inc
jne
cmc
push
adc
fs
imul
sub
(bad)
pop
inc
shl
lock
int
mov
adc
es
push
sub
sbb
pushw
not
jmp
xchg
(bad)
inc
or
xchg
mov
pop
and
mov
xchg
stos
mov
ret
and
cld
mov
inc
mov
push
je
push
ds
cs
out
repnz
bound
test
mov
lods
dec
icebp
push
mov
xchg
test
shr
aad
mov
inc
test
rcr
pushf
sub
ds
jae
fsubr
lahf
int
jbe
jno
push
test
mov
xor
and
dec
push
repnz
or
retf
or
outs
jmp
sub
inc
stos
mov
shl
test
inc
ret
and
daa
cmp
sub
jge
stos
fmul
cmp
inc
or
pushf
mov
enter
sbb
or
pop
in
mov
fadd
test
cmp
xchg
or
call
stos
mov
enter
sub
mov
stos
lods
les
pop
ficomp
or
jns
mov
mov
(bad)
sbb
rcr
ss
ret
adc
fsub
push
aad
or
inc
mov
cld
inc
xor
push
fsubr
add
rol
mov
call
mov
add
(bad)
ficomp
cli
pop
and
rcl
and
inc
and
mov
cmps
and
and
sbb
imul
shr
push
push
and
leave
sar
mov
mov
xor
push
add
adc
xor
or
mov
inc
and
xor
adc
jg
add
xchg
popf
aad
loope
push
jmp
test
adc
lds
mov
mov
(bad)
jo
push
add
bound
adc
xchg
jmp
stos
inc
mov
or
cld
sbb
sbb
icebp
(bad)
xlat
mov
in
xchg
dec
fidiv
lods
into
xor
push
mov
(bad)
movs
push
jbe
xlat
push
push
pop
mov
mov
repz
pop
add
sbb
xchg
cmc
pop
and
add
scas
dec
adc
push
outs
pop
or
or
adc
int3
imul
sub
scas
leave
push
sahf
and
cmp
stos
xor
or
icebp
imul
pop
ror
neg
cmp
pop
enter
adc
or
clc
popf
xchg
fild
scas
cdq
jg
jl
mov
aam
lds
aas
jns
dec
mov
retf
ret
sub
mov
dec
rol
add
ret
stos
mov
mov
cwde
add
adc
ins
es
cmps
adc
mov
stos
fist
lds
xchg
cdq
int
pop
aad
out
fs
mov
mov
not
and
cmc
int3
into
fiadd
mov
call
rcr
and
inc
lods
call
push
jp
pop
movs
movs
mov
enter
dec
add
and
fisubr
sbb
xor
pop
inc
sub
stos
pop
cdq
popa
push
mov
mov
push
jo
arpl
cli
hlt
push
icebp
jbe
paddd
int3
inc
xchg
fidiv
mov
inc
retf
cld
push
ror
fst
adc
xor
aam
loopne
push
out
and
jnp
mov
add
stos
lea
push
stos
popa
push
pop
dec
stc
pop
pop
cmp
dec
jle
aam
pop
pop
fistp
ret
es
jg
inc
cmp
adc
xor
inc
int3
mov
mov
fnsave
popf
inc
repz
mov
push
(bad)
xor
jge
into
in
or
gs
movs
sbb
pop
cmp
call
dec
xor
xor
jmp
js
push
imul
inc
imul
imul
sbb
and
jno
inc
mov
or
xchg
sti
sbb
cmc
push
and
loop
xor
xor
sub
out
je
cmp
ret
sub
sub
call
push
int
sub
dec
jmp
mov
cwde
test
or
push
sar
mov
(bad)
jmp
and
xor
push
xchg
(bad)
mov
(bad)
fcom
mov
mov
add
jne
sub
or
repz
xor
aad
push
and
in
sete
loopne
inc
sar
pop
stc
pop
(bad)
int3
jge
mov
mov
dec
jno
imul
push
repz
mov
jo
dec
or
mov
inc
pop
add
cmps
int
daa
mov
push
cmc
addr16
es
push
ret
xor
loope
jne
(bad)
mov
out
cmp
cld
jl
push
and
sub
fcomp
out
nop
xchg
movs
mov
xor
ficomp
ror
dec
mov
lahf
or
jnp
pop
xchg
push
fcom
add
xchg
jno
or
aad
nop
jmp
out
cmp
gs
pop
imul
cmp
pop
bound
adc
pop
mov
push
das
int
jne
mov
jge
push
jno
jle
les
adc
sahf
icebp
cmp
fwait
(bad)
mov
ficomp
or
mov
jbe
cdq
nop
adc
pop
and
stc
pop
pop
cmp
inc
pop
add
push
or
jne
mov
jb
fsubp
push
xchg
enter
push
add
out
(bad)
dec
cmp
dec
xor
ja
push
outs
arpl
push
mov
imul
xlat
push
mov
sub
sub
fdivr
pop
outs
or
in
adc
sub
(bad)
loope
ja
cdq
(bad)
imul
and
pop
sub
cmp
ins
in
cmc
adc
movs
cmp
and
inc
dec
gs
es
sub
jecxz
adc
add
mov
in
ret
aaa
es
sti
inc
mov
inc
clc
iret
jmp
lea
mov
cmps
shl
mov
fcmovnbe
xchg
inc
ds
mov
lea
jg
ret
pop
inc
and
cmp
jmp
mov
fldcw
es
mov
jle
popf
and
into
push
(bad)
mov
clc
inc
and
fs
dec
push
in
(bad)
out
(bad)
inc
push
outs
pushf
sbb
and
or
xchg
cmps
aam
cmp
inc
out
ds
fwait
dec
movs
push
(bad)
jbe
adc
push
imul
js
xchg
sub
xchg
and
pop
adc
call
push
jb
ins
lss
jno
sbb
rcr
adc
pop
das
jnp
sub
pop
mov
jg
push
ds
dec
repnz
lods
and
fiadd
add
xchg
arpl
adc
mov
add
sub
ins
ja
dec
jno
cmps
iret
xchg
pop
lds
mov
into
and
cli
ds
adc
jg
pop
xor
jl
xor
out
lea
iret
out
add
dec
push
cmp
sub
or
rcr
dec
push
push
lods
shl
or
dec
dec
pop
mov
cwde
movs
sbb
imul
cld
and
mov
mov
in
mov
push
sar
sbb
aas
pushf
sahf
xor
movs
loop
push
sub
mov
xchg
adc
push
add
jns
jmp
mov
div
cmp
icebp
in
icebp
pop
stc
and
rcr
daa
sub
aad
cmp
adc
jno
mov
add
pop
(bad)
push
adc
jle
(bad)
inc
repz
mov
mov
jne
hlt
sub
ficom
nop
mov
imul
popf
pushf
sub
in
shl
inc
enter
sbb
aas
ins
cmp
sub
xor
cmp
dec
test
and
out
mov
test
loop
fnstcw
rcl
fdiv
lea
pop
ss
mov
rcl
xor
push
sbb
or
pop
push
and
push
ret
push
push
sub
jnp
repnz
mov
mov
shr
dec
mov
cmp
or
push
cmp
(bad)
jmp
rcl
rol
out
cwde
xchg
adc
clc
clc
popf
mov
push
push
cmp
and
(bad)
push
xchg
push
jmp
xor
and
mov
test
cmp
popa
add
das
mov
cmp
add
jae
xchg
push
jge
sahf
or
mov
mov
div
dec
lods
cs
jo
sbb
bound
push
mov
loopne
cs
pop
push
add
and
lock
pushf
sahf
test
jl
mov
out
imul
in
js
je
jmp
mov
pop
je
mov
in
cmp
push
lea
adc
fs
fcom
cli
mov
mov
cmc
sbb
pop
push
push
(bad)
test
or
bound
jmp
push
fincstp
pop
test
rcr
xchg
js
and
add
jbe
xchg
adc
pop
jae
in
pop
adc
push
stos
xchg
xchg
je
ret
aas
adc
icebp
mov
xchg
mov
push
mov
jne
(bad)
fiadd
add
xor
out
push
out
push
mov
retf
push
mov
xor
mov
cmp
fs
movs
fdiv
ss
les
pushf
dec
aaa
loope
push
imul
fild
xchg
cs
cs
sub
sbb
scas
mov
(bad)
fdiv
mov
ins
adc
cld
mov
sbb
jbe
imul
(bad)
in
les
pop
sahf
fistp
fidivr
dec
out
shr
push
icebp
ss
pop
retf
test
add
mov
xchg
add
iret
idiv
xchg
lods
sub
sbb
cmp
cdq
out
or
jnp
add
popf
dec
inc
test
enter
pop
(bad)
xlat
cmc
push
fild
iret
push
cmps
data16
push
arpl
out
inc
pcmpgtw
popa
add
idiv
and
dec
sbb
jmp
jne
dec
pusha
and
push
sub
add
mov
sbb
and
sbb
mov
outs
call
repz
jg
jns
(bad)
popf
mov
mov
iret
mov
sub
inc
mov
fadd
push
bound
loopne
dec
fwait
inc
es
mov
jmp
das
loopne
je
adc
popf
inc
lods
xchg
loope
retf
sbb
push
cmp
je
mov
int3
mov
cmp
call
adc
or
lock
push
lds
inc
or
mov
loop
xor
mov
xchg
xor
xchg
sub
mov
mov
inc
adc
pop
pop
jge
cmps
or
xchg
push
fild
aam
clc
cli
push
adc
stos
loop
dec
fimul
mov
jg
gs
push
inc
lea
or
dec
cmp
loope
(bad)
sbb
mov
mov
fisub
mov
movs
std
or
aam
leave
adc
mov
dec
jo
mov
cmp
or
js
xchg
mov
daa
mov
push
(bad)
aaa
lods
push
popa
add
mov
inc
mov
in
imul
pop
imul
ror
pop
xor
or
lods
ja
cmp
jae
jecxz
jmp
test
pushf
push
test
mov
cmc
mov
cmp
push
call
xchg
int3
stos
add
xor
adc
mov
shl
sub
mov
out
pop
mov
jg
or
pop
cmp
aam
dec
mov
sbb
and
movs
data16
push
jo
sub
lock
adc
scas
mov
inc
push
push
stos
call
fcomp
push
xchg
dec
inc
ss
bound
jns
jo
pop
xchg
pop
daa
push
mov
arpl
loop
mov
inc
jmp
jp
lods
jecxz
lahf
loopne
sti
fdivr
(bad)
repnz
es
ds
push
arpl
icebp
jmp
and
fbstp
sti
out
cmp
ss
dec
pop
jo
pop
inc
or
loopne
arpl
inc
out
movs
xor
gs
mov
sub
out
cmp
sub
cmp
jae
xor
sbb
xchg
out
adc
in
(bad)
lock
pop
push
sub
mov
dec
pop
sub
div
inc
out
add
fdiv
jnp
and
add
retf
or
outs
dec
popa
push
mov
or
and
popa
jecxz
pop
sbb
in
bound
cli
in
js
inc
mov
and
mov
mov
fbstp
cs
nop
movs
shl
jne
addr16
adc
push
cld
xor
popa
clc
int
scas
(bad)
add
mov
fstp
aas
movs
test
mov
lods
xor
ffree
xchg
xchg
adc
push
add
ret
enter
dec
lds
loope
vminss
inc
test
out
mov
movs
inc
jp
dec
movs
fsub
or
iret
sub
ss
das
jo
out
cmp
or
add
inc
cmp
stc
xor
pushf
adc
jb
sahf
cmps
stos
cmps
mov
push
push
mov
into
sbb
xlat
outs
(bad)
inc
or
lods
inc
loope
outs
sbb
stos
std
xlat
xchg
(bad)
lds
mov
lods
xchg
stc
loope
sub
mov
lods
or
push
stos
or
hlt
xor
cmp
imul
add
cs
xchg
movs
dec
(bad)
fld
xchg
add
or
xchg
jecxz
repnz
stos
jmp
les
dec
ss
xchg
adc
adc
adc
inc
(bad)
je
push
or
mov
in
fwait
cmp
adc
aaa
std
(bad)
in
movs
mov
dec
repnz
(bad)
xchg
cmp
pop
adc
gs
adc
das
xchg
jmp
pop
cmps
scas
mov
jo
pop
lahf
mov
push
retf
pop
lock
data16
inc
jp
mov
imul
ins
inc
mov
sub
ficom
xchg
imul
div
(bad)
sti
mov
adc
sub
sbb
cwde
add
call
dec
rol
lock
dec
jp
ds
mov
add
xchg
cli
inc
jle
pop
cmp
sbb
xor
cmp
repz
hlt
mov
movs
les
test
nop
loope
cmp
push
inc
out
repnz
push
or
push
shl
adc
pop
adc
out
dec
ficomp
popf
push
fst
or
mov
test
and
sub
adc
test
adc
sbb
clc
cmp
xchg
add
pop
sti
mov
xor
cmp
(bad)
enter
iret
mov
xchg
inc
outs
stos
sub
fidivr
push
push
sub
js
or
fs
aam
add
jp
cdq
repnz
idiv
dec
and
call
add
ins
cwde
outs
scas
cwde
rol
and
scas
mov
test
out
aaa
enter
punpckhbw
or
test
loope
adc
or
push
pop
and
jl
and
bound
cld
mul
xor
push
dec
cmp
push
rol
or
xchg
adc
push
cdq
and
xor
inc
std
js
xchg
call
mov
dec
loope
cmp
data16
mov
hlt
jmp
push
mov
xor
test
mov
stos
(bad)
je
jl
and
mov
fsubr
imul
data16
pop
ficomp
das
dec
sub
jns
aad
in
dec
push
and
mov
sub
push
pop
out
sar
test
jno
xlat
out
loop
ins
adc
mov
sti
and
and
retf
arpl
dec
pop
or
loopne
pusha
fld
lods
scas
and
dec
pop
ins
adc
lock
sbb
jge
jp
jmp
push
test
movs
add
cmp
pushf
cmp
in
adc
ja
imul
retf
in
dec
shl
xor
fidiv
stc
retf
xchg
dec
cmp
clc
mov
xchg
in
pop
mov
xor
adc
les
ds
jb
and
arpl
rcl
cmps
xor
shl
inc
ss
lahf
or
out
les
not
push
jo
lods
sti
mov
fs
jmp
jo
mov
jg
jmp
jle
das
mov
jmp
inc
add
cs
fs
popf
jp
out
sbb
arpl
pop
loop
sbb
mov
out
adc
test
mov
xor
mov
(bad)
sbb
adc
outs
inc
mov
inc
retf
fmul
repz
fwait
sbb
mov
es
xor
jle
sbb
imul
fstp
mov
call
mov
jne
fnstcw
cmp
adc
jno
inc
sbb
push
add
sbb
outs
cmc
iret
ds
leave
inc
scas
cld
aaa
add
dec
ja
or
ret
cmp
mov
cld
jb
test
retf
pop
mov
in
out
push
aad
mov
dec
iret
mov
leave
push
jl
movs
adc
in
cmp
dec
cs
jl
js
(bad)
jge
xchg
enter
imul
jecxz
cmp
xchg
adc
inc
les
jp
and
xchg
lods
fwait
clc
out
xchg
xlat
or
cmps
pushf
gs
push
mov
test
push
sbb
mov
fidiv
aaa
jae
pop
cmp
xchg
jnp
je
cwde
and
addr16
not
mov
and
imul
adc
ret
xor
leave
push
or
adc
dec
lds
cwd
dec
push
loope
mov
dec
mov
ss
loope
call
xchg
cmc
sub
add
inc
pusha
push
mov
nop
add
cmps
dec
fimul
push
mov
lods
mov
push
mov
test
cmp
push
xlat
mov
mov
movs
jns
dec
into
sbb
inc
stc
ss
lods
xchg
gs
xchg
sbb
push
cdq
sbb
jl
dec
pop
push
mov
xchg
popa
bound
scas
push
in
dec
push
add
dec
loop
and
dec
aam
inc
shr
mov
push
leave
inc
add
pop
neg
push
shr
and
push
mov
test
fs
mov
loopne
xchg
adc
fs
or
push
(bad)
dec
mov
cwde
adc
cli
jno
pop
mov
sar
xor
mov
ficomp
inc
cmp
xchg
sub
mov
aad
mov
imul
pop
cs
lods
dec
pop
jo
inc
lahf
fsubr
and
dec
enter
mov
fmul
jno
and
mov
adc
hlt
imul
and
ret
addr16
test
cmp
gs
std
cmp
sub
push
call
fld
jb
leave
ret
inc
xor
xchg
fdivr
push
fldcw
add
gs
dec
stc
je
cdq
adc
xchg
out
fs
or
call
mov
push
mov
adc
xchg
inc
adc
jnp
lea
int
int
push
dec
sahf
fnstsw
mov
xchg
dec
mov
js
sub
mov
xchg
(bad)
dec
adc
call
stos
out
mov
fdivr
lods
clc
lahf
repnz
cdq
js
push
or
sub
retf
dec
jge
add
inc
nop
ins
std
fsubr
adc
or
fdivrp
in
in
mov
dec
or
fwait
jecxz
int3
mov
arpl
adc
movs
ror
out
sub
dec
js
lds
aas
je
dec
rol
aam
jle
cs
(bad)
fdiv
loope
sub
mov
jmp
push
lods
aas
ss
ret
jle
pop
or
pop
push
jns
sbb
cmp
mov
test
iret
and
popa
xchg
imul
jmp
adc
je
sub
jmp
mov
inc
add
mov
xchg
scas
xchg
rcr
addr16
pop
(bad)
shl
stos
cmp
mov
(bad)
stc
sub
retf
add
jmp
cmc
iret
mov
pop
outs
mov
jns
add
cmps
sbb
retf
(bad)
outs
dec
mov
pop
and
cdq
sbb
dec
adc
stc
push
jge
push
cmp
ficomp
mov
aaa
and
lock
int3
xchg
es
movs
dec
jmp
int3
mov
pusha
inc
inc
es
loope
test
jmp
inc
mov
cmp
retf
and
cwde
retf
or
pop
and
xchg
dec
push
arpl
inc
push
sub
cmp
(bad)
int3
dec
lahf
xchg
adc
scas
fyl2xp1
mov
mov
mov
cmp
rol
imul
sti
cmp
jecxz
sub
outs
xor
dec
pop
out
enter
icebp
stos
adc
pop
mov
dec
mov
cwde
cld
xchg
scas
cmp
xor
icebp
aad
jmp
in
cmc
out
hlt
mov
mov
mov
test
mov
xchg
sub
aam
in
dec
xor
push
mov
pop
mov
mov
xchg
mov
fdiv
jnp
mov
(bad)
(bad)
dec
push
hlt
push
xlat
aaa
add
jns
or
popf
xor
std
and
jmp
pop
inc
push
std
sub
add
push
jae
push
out
mov
fsub
(bad)
xchg
rol
jmp
jg
pop
mov
ss
xchg
out
cmp
push
dec
jno
sub
ds
popa
push
rcr
push
frstor
adc
test
arpl
movs
push
mov
mov
aam
sbb
push
jl
cmc
lea
jg
test
sbb
xchg
and
mov
gs
sbb
ins
mov
jmp
ror
in
in
cli
adc
cmps
mov
dec
out
or
shr
xchg
push
mov
cmp
loopne
lds
call
sub
ja
aaa
mov
inc
pop
(bad)
call
cmp
je
cli
xchg
xor
or
or
repz
dec
cmps
mov
add
lahf
int
outs
loopne
and
test
lods
ins
sahf
jle
ins
sar
cmp
cmp
xchg
xchg
clc
xchg
pop
mov
inc
pop
mov
fadd
data16
stos
sti
mov
sahf
adc
pop
pop
cmp
adc
jp
fistp
push
lds
ins
lea
xchg
outs
stos
fimul
repnz
inc
retf
jne
stc
movs
adc
sar
cmp
cmp
xor
and
gs
push
mov
adc
(bad)
sub
cld
xchg
jo
add
int
rol
add
iret
mov
mov
aam
std
pop
int
mov
pop
cmp
sbb
clc
push
ss
inc
jne
int3
fcom
and
push
enterw
(bad)
in
adc
xchg
neg
(bad)
push
sti
jne
stos
jmp
dec
add
mov
ins
test
clc
jo
outs
sbb
fwait
shl
adc
pop
gs
inc
retf
jecxz
xlat
mov
addr16
in
icebp
in
das
bound
imul
adc
sub
aaa
clc
(bad)
mov
ror
in
enter
inc
dec
call
cmp
fsub
std
aad
sti
xchg
and
lods
push
mov
jns
mov
push
out
sbb
add
or
pop
dec
mov
ins
jecxz
adc
retf
call
mov
daa
jnp
ins
push
scas
(bad)
aas
mov
imul
dec
and
das
(bad)
xor
push
xchg
pop
cmps
or
call
adc
mov
ficom
add
push
leave
mov
or
push
sbb
in
popa
cmp
shr
aad
dec
mov
jle
mov
bound
cmp
push
add
stos
or
xor
pop
push
dec
jmp
sbb
xor
xchg
adc
mov
inc
retf
push
dec
cmps
xchg
sahf
shl
jno
(bad)
sub
movs
pop
dec
hlt
xchg
jno
cmp
xchg
das
mov
pop
jae
fcmovu
xchg
mov
xchg
(bad)
idiv
push
in
sub
lods
push
test
xor
in
cmps
xchg
adc
cmp
or
fnstenv
shr
lea
xor
js
out
push
jb
xor
or
out
xchg
stos
and
jb
fnstenv
loop
and
push
ja
or
xor
arpl
pop
push
fs
cmp
or
jne
dec
dec
loopne
and
dec
push
iret
pop
cwde
or
in
xor
fild
inc
cmp
fnstcw
mov
(bad)
mov
sti
jmp
jbe
scas
push
fimul
dec
mov
pop
cmp
dec
adc
mov
bnd
mov
icebp
xor
pop
pop
gs
std
and
sub
arpl
pop
xchg
adc
fisttp
ins
in
or
dec
lods
cli
in
stc
cmp
dec
bound
(bad)
mov
cdq
int
jno
inc
pop
rep
xchg
or
push
nop
fcmovb
clc
xchg
fimul
add
dec
and
aam
les
inc
sub
js
cs
jp
fsub
pop
dec
jno
inc
repnz
movs
nop
mov
iret
int3
not
xor
or
bt
or
int3
fs
loop
sbb
sub
jecxz
in
ror
les
fs
xchg
pop
sub
xor
out
lds
push
jae
popf
mov
mov
in
add
nop
repz
inc
pop
and
popa
enter
add
push
and
(bad)
ins
sbb
cld
pop
or
or
psllw
hlt
push
mov
scas
in
sbb
in
sbb
shl
ja
pushf
sub
mulps
loop
mov
js
inc
inc
loopne
hlt
adc
inc
mov
loop
sti
dec
lods
call
test
je
hlt
mov
(bad)
mov
or
shl
adc
pushf
and
test
xchg
pop
sahf
and
mov
retf
ret
xor
push
pop
in
jge
xor
inc
mov
sub
push
xchg
movs
mov
loopne
dec
js
mov
imul
imul
jbe
or
dec
pop
adc
xchg
xchg
adc
ret
or
js
rep
sub
addr16
add
je
inc
dec
or
icebp
pop
jne
les
or
cmc
mov
adc
ins
push
inc
inc
ins
dec
cmp
outs
je
jl
dec
sbb
inc
xor
rcl
cmps
mov
scas
add
out
mov
xor
cwde
lock
imul
or
cdq
and
mov
cli
jns
(bad)
jmp
jns
mov
cmp
cmps
loop
push
stos
push
imul
xlat
pop
cmps
cld
dec
jle
movs
cmps
dec
add
cld
fwait
xchg
(bad)
sub
(bad)
add
out
sbb
pop
rcr
push
pop
mov
jp
lea
xor
pusha
pop
jge
add
sbb
xchg
mov
imul
shr
dec
xlat
xor
xchg
mov
pushf
vpaddb
add
mov
cmp
inc
jo
ins
push
clc
repnz
sahf
mov
in
int3
dec
adc
(bad)
aam
and
dec
pop
push
enter
mov
mov
or
mov
test
fisttp
mov
and
ins
mov
push
push
mov
jnp
and
mov
jno
aad
dec
fwait
pusha
in
and
outs
mov
jg
pop
xchg
jne
dec
ins
test
cmp
in
sub
sub
mov
and
(bad)
movs
call
jecxz
and
les
sbb
inc
inc
mov
ret
gs
fiadd
aam
xlat
out
loop
pop
(bad)
mov
arpl
jmp
jae
add
(bad)
mov
pop
jnp
jle
mov
add
aas
cmp
popf
pop
push
std
cli
pop
(bad)
inc
movs
push
icebp
stos
inc
mov
stos
cmp
xor
sti
mov
arpl
ja
pop
mov
repnz
arpl
xchg
aas
mov
jl
mov
lods
or
xchg
fiadd
jmp
dec
xchg
xor
push
scas
xor
pop
inc
outs
dec
and
dec
adc
ret
or
shr
retf
rol
push
mov
dec
mov
rcr
dec
ds
stc
int3
pushf
daa
push
pop
add
mov
or
test
sub
ja
pusha
ins
imul
and
addr16
loope
movs
jp
add
rol
xor
into
aas
jg
movs
enter
xor
ror
sub
ja
sbb
push
pop
pop
pop
bound
lds
outs
adc
int3
aaa
push
bound
sbb
sbb
arpl
xchg
adc
(bad)
push
stos
out
push
stos
cwde
lea
cmp
mov
shl
mov
stos
les
xchg
or
inc
sbb
add
outs
stos
ds
cmp
stos
pop
xlat
lahf
push
sahf
push
jo
xchg
add
and
int3
rol
retf
ror
and
gs
(bad)
and
rcr
jmp
imul
cmps
pop
mov
dec
movs
mov
(bad)
stc
ficom
jne
fwait
pusha
pop
outs
push
mov
mov
(bad)
loopne
(bad)
fxch
stos
push
mov
mov
into
dec
dec
dec
inc
inc
lahf
mov
rcr
or
sub
int3
push
cmp
nop
sahf
sub
dec
mov
pop
mov
sbb
sub
cmps
push
xor
and
ss
xor
inc
leave
mov
jmp
push
bound
dec
xchg
repnz
in
mov
nop
or
hlt
call
movs
mov
int
cli
dec
imul
scas
pop
ins
add
mov
fsub
sbb
xor
inc
inc
mov
(bad)
xor
inc
mov
pop
xor
jo
xchg
(bad)
pop
ficom
sahf
stos
or
sti
scas
fwait
ds
(bad)
mov
add
rcr
pop
add
les
(bad)
xor
or
jno
out
xchg
xlat
xchg
mov
popa
inc
sbb
(bad)
jae
in
inc
add
pop
int
int3
xchg
jecxz
lock
or
mov
ret
pop
or
sbb
lahf
pop
mov
mov
jne
das
cmp
mov
pop
inc
(bad)
enter
popf
cld
xchg
xchg
or
dec
not
xchg
cld
mov
sub
cmp
inc
div
mov
adc
dec
loopne
add
jb
call
ret
hlt
or
pop
push
(bad)
fwait
sbb
imul
xor
mov
test
mov
mov
pop
jbe
mov
push
sahf
adc
xchg
cmps
dec
mov
push
js
xadd
ins
fnstcw
js
xchg
dec
mov
das
mov
sub
mov
and
fwait
pop
pusha
dec
std
rcr
sbb
jns
push
add
pop
cmp
(bad)
xor
lds
pop
dec
push
rcr
jno
mov
ins
inc
daa
xchg
sbb
sub
push
mul
cmp
int
add
sub
mov
pop
sub
xchg
add
jbe
pop
in
imul
es
sbb
xchg
mov
add
and
dec
mov
retf
stos
(bad)
int
sbb
leave
test
mov
mov
or
movs
jecxz
or
dec
adc
mov
cld
sub
in
cwde
xchg
xchg
add
xchg
inc
pop
test
daa
addr16
push
adc
shl
out
push
or
je
call
and
shl
push
ins
dec
aam
xlat
mov
push
sbb
mov
cmp
add
inc
xchg
adc
stos
mov
mov
mov
xor
jmp
rcr
sub
loop
xor
mov
(bad)
in
pop
jae
scas
in
lods
xchg
daa
mov
mov
push
push
cmp
scas
(bad)
ss
pop
add
sub
sub
jae
stos
push
jge
popa
aas
cld
mov
stos
xor
cli
in
mov
call
(bad)
nop
sub
and
iret
es
daa
retf
jg
fsubr
add
sub
aas
rol
fild
ret
jb
test
jmp
jmp
dec
mov
icebp
call
rcr
inc
push
add
cmp
test
loope
push
das
pop
arpl
or
cli
lock
and
sub
scas
adc
and
dec
mov
or
hlt
loopne
mov
mov
enter
xchg
sbb
inc
rcl
cwde
sub
fld
and
xchg
mov
push
icebp
inc
stos
or
ins
int
or
add
jl
outs
mov
mov
push
jno
and
or
repnz
mov
rcl
rol
cmps
cwde
inc
lea
and
mov
xchg
bound
mov
leave
movd
dec
inc
mov
rcr
xchg
icebp
and
pop
ins
(bad)
jecxz
popa
fs
xlat
add
mov
dec
popf
test
and
jg
xor
mov
dec
stos
mov
or
stos
dec
adc
rol
aas
cwde
cli
bnd
sbb
mov
xlat
mov
cmp
push
(bad)
(bad)
sti
inc
mov
or
and
sbb
sti
sub
in
push
mov
push
ret
mov
xchg
dec
retf
jle
call
push
cmps
retf
addr16
push
pop
in
rcr
div
jecxz
sbb
mov
mov
jb
push
es
pop
bound
ss
rcl
(bad)
movs
pop
push
int
mov
sbb
je
xchg
dec
(bad)
scas
xor
movs
fwait
sub
pop
jle
inc
retf
xchg
loop
add
fmul
push
cld
jmp
into
sub
std
movs
mov
jp
jg
or
scas
cmp
cmp
dec
inc
fstp
add
call
cmp
mov
add
ret
mov
pop
inc
sti
std
test
jbe
jbe
jle
jecxz
into
les
mov
movs
xchg
dec
mov
mov
push
mov
mov
cdq
xchg
or
test
fisubr
pop
dec
xlat
in
cmc
push
mov
jns
jg
xor
xor
sbb
mov
sub
adc
jl
mov
sbb
or
mov
imul
ffree
sub
mov
icebp
pushf
push
call
imul
repnz
jb
leave
test
scas
lea
je
pop
jb
dec
inc
fstp
in
xor
xchg
shl
fdiv
ins
pop
xor
push
xor
pop
jle
sti
pop
jmp
imul
sub
fwait
pop
movs
in
(bad)
in
(bad)
push
push
lods
inc
dec
dec
in
pop
sub
mov
into
das
das
loop
or
dec
lods
cli
(bad)
mov
lock
pop
outs
cmp
and
dec
cmp
(bad)
out
pop
inc
ret
and
outs
sub
fiadd
mov
sub
mov
adc
dec
test
push
pop
sbb
cld
pop
addr16
xchg
ds
test
imul
sbb
std
pop
loop
pop
add
es
sub
adc
or
push
or
ins
stos
mov
xchg
stos
and
cmp
push
or
xchg
fwait
xchg
std
xor
in
fwait
neg
repnz
fidivr
clc
adc
cwde
mov
add
(bad)
gs
and
inc
call
div
mov
inc
pop
lock
retf
neg
xchg
pop
jnp
mov
mov
fcmovbe
mov
push
inc
mov
xor
or
xchg
out
ret
gs
push
jecxz
fcomp
das
enter
outs
pushf
bound
pop
test
push
inc
loope
dec
adc
pop
jle
jb
popf
call
mov
fistp
lods
add
out
adc
adc
cmc
xor
mov
ds
xchg
pop
dec
or
mov
xchg
cwde
gs
lock
mov
int3
data16
pusha
cld
xor
dec
mov
push
sbb
rcl
push
add
or
mov
inc
cs
fadd
cmp
xchg
sub
fs
mov
lock
int3
out
or
add
mov
test
in
jne
dec
aad
or
out
test
fild
sub
test
bound
inc
mov
and
cmp
cmp
fiadd
sbb
add
fstp
pushf
mov
lea
jmp
std
lock
pop
inc
dec
xchg
mov
shr
cmp
xchg
test
jne
xor
stos
fwait
lds
sub
cwde
sub
out
and
out
cmp
dec
push
adc
add
add
(bad)
jl
dec
or
and
xchg
addr16
mov
xchg
push
dec
scas
leave
adc
dec
pop
je
jmp
fsub
arpl
jbe
jno
repz
call
cmp
mov
call
dec
adc
pop
cmp
and
rcr
jge
mov
or
xor
or
outs
xchg
and
xchg
cmp
ror
xor
scas
cs
(bad)
push
add
mov
ret
mov
shr
imul
pop
or
lahf
jg
and
aas
pushf
sub
ret
sbb
jecxz
mov
imul
sbb
enter
inc
addr16
cmp
sbb
pop
fisttp
add
(bad)
mov
pop
dec
inc
and
icebp
mov
cbw
data16
pushf
sub
mov
popa
adc
jecxz
loopne
add
jmp
xor
xchg
cmp
fiadd
retf
ret
xchg
ret
mov
dec
push
mov
shl
sti
int3
fistp
es
sbb
add
pop
mov
add
xlat
dec
or
aaa
cmp
jp
sahf
mov
icebp
imul
rol
lock
mov
shr
sub
sbb
inc
cmp
adc
pop
out
and
adc
sbb
push
sub
add
aas
sub
adc
mov
xlat
inc
mov
pop
and
call
mov
sbb
jmp
adc
mov
call
fwait
cmps
clc
pop
mov
sub
fwait
call
test
out
lahf
mul
push
mov
sub
add
fcom
mov
mov
mov
mov
push
(bad)
mov
jnp
fsubr
jl
retf
xor
inc
popa
scas
push
stos
out
xchg
adc
xchg
adc
(bad)
sub
mov
mov
cmp
scas
adc
cdq
xchg
out
imul
mov
mov
xchg
pop
dec
pop
cmp
test
popf
add
mov
mov
mov
cmp
lock
and
pop
sbb
imul
or
fnstenv
sub
mov
je
mov
scas
xchg
cs
jo
es
inc
or
in
inc
ret
addr16
stc
idiv
mov
or
outs
adc
xor
pop
call
inc
movs
jns
rol
clc
mov
dec
repz
cwde
es
jle
ja
pusha
cmp
inc
shl
mov
push
mov
adc
push
icebp
xor
stos
xchg
jp
jno
xchg
push
cmp
and
push
lock
adc
xor
data16
movs
add
pop
(bad)
dec
outs
sub
ins
push
jge
dec
fisttp
pusha
adc
dec
xchg
inc
cdq
dec
les
sti
dec
jecxz
pop
dec
push
ret
jns
pop
nop
or
push
mov
fwait
push
out
cwde
rcr
mov
sbb
mov
inc
jno
aaa
dec
jne
or
sbb
xchg
aam
mov
outs
add
adc
nop
add
scas
push
pop
inc
lea
scas
arpl
xlat
ins
pop
mov
stos
and
jge
xlat
cmp
cld
out
mov
add
mov
or
and
pop
ror
out
iret
movs
jae
(bad)
adc
das
aas
cdq
test
adc
add
or
mov
adc
xor
retf
(bad)
push
fbstp
cmps
and
or
or
xchg
movs
fcom
(bad)
push
ror
(bad)
out
inc
cmp
aas
ret
inc
jle
and
and
mov
cmp
es
stc
mov
dec
sti
fdiv
cld
push
cmp
inc
data16
inc
pushw
xchg
adc
xchg
cmp
adc
inc
inc
loopne
mov
sbb
je
push
jb
sbb
repnz
mov
adc
test
jae
or
loop
push
add
test
fild
push
or
xor
ficomp
test
scas
test
or
(bad)
push
clc
clc
outs
mov
sub
or
mov
xor
sbb
cdq
dec
jbe
test
jne
push
push
xor
mov
call
imul
test
mov
pop
pop
inc
add
sub
gs
cmp
loope
fisttp
or
ja
es
pop
popa
scas
adc
jmp
cmp
(bad)
pop
mov
mov
or
nop
mov
(bad)
xlat
mov
mov
std
gs
cmp
aas
and
cmps
pop
repz
mov
leave
push
aaa
dec
(bad)
loop
ds
pop
and
push
enter
pushf
jo
jne
loopne
repnz
jmp
not
imul
aas
mov
fcom
les
in
gs
(bad)
rol
pop
cs
lds
jmp
in
cmps
push
stos
arpl
cmp
jno
mov
and
gs
jo
shl
inc
xor
std
add
mov
ds
mov
push
ret
xor
rol
aad
jae
retf
outs
sub
scas
or
mov
add
inc
lock
pop
stos
or
pop
inc
inc
iret
jecxz
lods
push
fld
jbe
mov
push
jmp
mov
inc
mov
popa
(bad)
and
lods
xchg
or
mov
imul
in
fmul
dec
ds
xor
gs
js
out
mov
mov
(bad)
fst
imul
scas
js
push
shr
jmp
(bad)
sub
xchg
cmp
retf
imul
lahf
xchg
jmp
push
popf
push
lods
xor
retf
enter
cmps
jmp
cmp
fimul
push
xchg
pop
(bad)
in
pop
pop
addr16
rcr
mov
xor
xchg
cli
inc
pop
inc
adc
pop
and
pop
xchg
je
cmps
sar
inc
jge
stos
push
mov
mov
sub
jecxz
in
xor
(bad)
dec
dec
(bad)
int3
lahf
hlt
lahf
stos
outs
test
test
in
bound
pop
push
xchg
pop
movs
pop
jo
(bad)
inc
push
lods
leave
ret
push
loopne
ret
sub
icebp
ret
shr
add
xchg
inc
mov
xlat
dec
mov
pop
xor
invd
ds
scas
cs
mov
and
mov
xchg
dec
or
mov
(bad)
in
imul
cmp
je
shl
lods
sbb
and
sub
stc
cli
pop
mov
jae
jp
adc
xor
inc
sbb
add
jecxz
sub
nop
mov
mov
inc
cs
fnstenv
xor
dec
(bad)
iret
(bad)
jle
xor
cmps
mov
sbb
inc
nop
(bad)
lds
outs
retf
call
xchg
loope
mov
adc
dec
mov
adc
push
pop
test
jmp
leave
push
jb
xor
sbb
inc
sub
loopne
cmc
jle
xchg
fstp
sub
mov
mov
call
stos
les
or
movs
cmp
stos
repnz
inc
es
arpl
aas
fcom
frstor
inc
fs
xchg
call
xchg
sub
mov
aaa
stos
aam
or
test
cmp
cld
dec
sbb
in
dec
out
and
jge
cmc
push
(bad)
jnp
add
and
lock
mov
jecxz
sbb
sbb
(bad)
aam
sbb
push
push
sub
and
retf
mov
cmc
nop
jb
test
sahf
dec
mov
sar
adc
(bad)
ds
push
popf
and
shl
fisttp
cmps
ret
call
jl
fiadd
mov
scas
add
iret
mov
int
cmp
mov
repz
fisubr
out
pop
enter
jno
sbb
xchg
shr
sub
cwde
into
hlt
call
retf
aad
cmps
cli
or
jbe
jo
stos
inc
mov
push
push
lods
push
arpl
loop
xchg
xlat
bndstx
cmp
mov
inc
out
adc
jne
aas
iret
jmp
popf
dec
gs
gs
jp
test
jp
movs
sub
xchg
push
pop
or
popa
pop
(bad)
fsubr
movs
jne
mov
nop
xor
outs
ja
cmc
stc
sbb
mov
sbb
mov
mov
fnstsw
rol
daa
jmp
test
sbb
ins
test
mov
call
xchg
push
iret
jno
mov
clc
mov
(bad)
fnstenv
cmp
shr
push
cwde
sbb
imul
jns
and
(bad)
dec
add
and
jecxz
jno
mov
shr
lahf
adc
sbb
inc
adc
call
adc
mov
push
xchg
and
fwait
xor
retf
ret
adc
jmp
fldcw
imul
push
stos
push
lock
and
xchg
movs
fstp
mov
and
stos
je
push
push
test
add
dec
arpl
idiv
push
adc
add
mov
daa
shr
rcr
xchg
pop
sar
jbe
enter
jmp
sub
mov
xor
rol
sbb
(bad)
repz
clc
ins
push
pop
inc
(bad)
clc
jno
push
xor
adc
sub
xchg
stos
jg
mov
mov
loopne
stos
call
lock
or
mov
jg
push
lods
mov
mov
je
dec
jge
cmp
xchg
movs
jecxz
jae
hlt
in
adc
inc
sub
into
add
scas
dec
pop
mov
cld
pop
xlat
or
int3
lods
(bad)
and
xor
mov
push
mov
jbe
(bad)
mov
push
mov
xor
outs
add
mul
lea
scas
adc
mov
lahf
mov
add
lods
dec
mov
mov
mov
xlat
push
and
jle
int
jecxz
inc
push
inc
sbb
inc
sub
sub
lahf
int
leave
leave
aad
loop
add
inc
push
test
fild
cld
push
jmp
ror
jae
scas
cwde
mov
jnp
jp
pop
pop
adc
xlat
cmp
xlat
pop
dec
inc
mov
xchg
or
pop
fcomp
daa
gs
push
mov
out
mov
stc
jg
jecxz
shr
mov
aaa
lds
xchg
call
dec
cmp
and
rol
xchg
out
mov
cs
adc
or
test
cli
les
jecxz
scas
icebp
in
dec
cmc
and
sub
mov
sbb
imul
adc
xchg
arpl
dec
sar
(bad)
jmp
jnp
sar
inc
lds
rcl
or
stc
push
dec
mov
out
xor
icebp
inc
mov
mov
jbe
cmps
pop
inc
popf
pop
daa
test
or
stos
imul
shr
outs
loope
shl
mul
cmp
mov
test
lods
add
push
gs
sub
push
xchg
hlt
test
pop
xor
lds
test
into
mov
addr16
inc
test
in
push
in
dec
jmp
mov
imul
xchg
jns
sub
and
mov
jmp
add
cmp
fsubr
sub
mov
sbb
ins
rol
jmp
test
pop
dec
sub
loopne
inc
iret
sti
icebp
add
int
repz
movs
int3
lea
repz
push
and
into
or
jmp
jle
pushf
add
pop
mov
xor
stc
(bad)
sbb
push
adc
jo
popa
push
pop
jecxz
xor
sahf
xchg
and
mov
and
add
mov
test
lods
pop
dec
dec
ret
outs
dec
jg
mov
add
not
mov
mov
jno
sti
xor
retf
fwait
ror
xchg
xor
mov
hlt
sub
jecxz
add
iret
dec
rcr
xor
adc
inc
sbb
add
inc
xchg
icebp
xor
and
mov
xchg
lods
inc
div
aam
mov
xchg
pop
ret
pop
sbb
mov
inc
xor
fsub
sub
test
or
push
cmp
sub
mov
pusha
(bad)
lea
retf
and
mov
repz
pop
jae
mov
pop
mov
pusha
jp
add
lods
jmp
push
mov
clc
cs
inc
adc
pop
or
loopne
(bad)
jbe
cmps
pusha
dec
and
(bad)
loop
push
cmp
pop
(bad)
jmp
mov
fs
das
add
int3
push
sub
inc
into
xor
sbb
loopne
add
mov
sub
dec
add
cmps
jbe
int3
daa
cmp
cwde
sbb
in
add
cmp
in
std
test
lahf
movs
sbb
push
imul
push
sub
lods
push
add
push
pusha
outs
pop
stc
add
cmc
enter
shl
jo
pop
std
jmp
jo
mov
xor
sti
mov
icebp
fcomp
xchg
retf
jnp
les
dec
push
push
mov
movs
cmp
aas
shl
sti
imul
mov
adc
repnz
punpckhbw
jb
mov
(bad)
dec
mov
aas
xor
mov
repnz
pop
mov
mov
jb
jbe
mov
loop
mov
xchg
aaa
cld
sbb
repz
jmp
outs
pop
mov
test
and
pop
daa
cmp
dec
in
bound
mov
xchg
shl
(bad)
stos
mov
jle
mov
psrlq
mov
aam
dec
fst
in
cli
push
das
and
mov
daa
(bad)
loop
stc
fs
out
jp
xchg
ins
mov
jp
pop
movs
in
sub
popa
mov
xlat
jno
mov
cmp
cmc
cld
loopne
sub
and
(bad)
repz
aam
mov
stos
int
mov
pusha
pop
fadd
jbe
adc
repz
ins
(bad)
enter
jmp
xor
mov
shl
add
mov
pop
pop
sti
shr
imul
les
push
lea
and
xchg
stos
mov
std
or
out
int
add
push
(bad)
xchg
cmc
push
or
sbb
xchg
mov
inc
jae
repz
shl
xor
dec
xor
mov
or
jae
enter
lea
add
jl
adc
sub
lahf
push
ds
jo
mov
dec
cmp
jnp
enter
mov
js
test
sub
aas
xor
jne
stos
xchg
adc
mov
adc
dec
imul
lods
push
push
outs
mov
mov
dec
mov
pop
(bad)
les
pop
dec
add
pop
mov
sbb
call
dec
xchg
or
dec
jns
add
sbb
inc
pop
cs
or
movs
inc
inc
ins
int3
add
or
or
movs
mov
das
sbb
pop
aad
adc
mov
pusha
ret
cmp
imul
nop
add
jns
cmp
iret
icebp
mov
cmp
add
push
lds
sahf
test
adc
xchg
test
sub
cmps
sbb
int3
mov
adc
(bad)
mov
popf
loop
mov
push
push
dec
(bad)
adc
gs
xor
jmp
in
mov
push
add
aad
jno
clc
(bad)
mov
or
aas
stos
jne
pushf
sbb
test
xor
test
je
dec
mov
xchg
sbb
lods
outs
mov
lea
in
call
loop
cwde
(bad)
xlat
loope
cmp
adc
xor
gs
push
and
repnz
add
(bad)
pop
add
imul
imul
push
test
jo
(bad)
ds
mov
jp
mov
lock
mov
mov
push
popa
loope
or
mov
cmp
jo
inc
test
xor
add
mov
inc
jmp
push
(bad)
sar
xlat
mov
mov
stos
mov
ins
pop
cdq
mov
sub
nop
bound
outs
or
sar
inc
test
sbb
retf
sbb
mov
push
sbb
mov
sbb
mov
test
enter
sub
ds
call
mov
pop
pop
add
leave
jno
lock
mov
mov
not
dec
movs
lock
sub
jp
int3
lods
out
gs
pop
xor
sbb
push
ret
popa
stos
push
ficom
nop
scas
cmp
push
inc
rcl
clc
jbe
enter
jmp
outs
nop
fcom
sbb
pop
test
dec
ds
push
cmp
fisub
mov
inc
cli
adc
in
xchg
pushf
push
ja
int
outs
dec
push
push
ret
inc
pop
loopne
nop
out
ins
test
aaa
in
loopne
xor
cmc
rcr
jo
mov
fdiv
shl
mov
push
or
or
popf
out
adc
sub
cld
push
xor
frstor
adc
sahf
cli
das
loop
arpl
data16
adc
cs
bound
inc
dec
dec
inc
mov
fcom
mov
jg
adc
call
dec
rol
inc
inc
inc
into
ja
inc
int3
dec
push
pushf
dec
sbb
pop
add
xor
out
pop
pushf
pop
les
adc
inc
lods
push
and
les
push
loope
jnp
jnp
mov
mov
pop
ret
fwait
ret
bound
ja
ja
xchg
loop
scas
xchg
stc
pop
sahf
int3
stos
icebp
enter
les
add
sub
push
inc
aaa
repz
sub
sahf
pop
sar
xchg
xchg
stos
cdq
sub
pusha
pop
xor
sub
push
call
or
lahf
or
enter
mov
fabs
mov
and
outs
mov
add
sahf
dec
or
jbe
or
sbb
jmp
mov
jb
inc
push
pop
push
pop
jecxz
dec
inc
enter
pop
push
xor
ret
xlat
daa
jge
xor
jb
sub
mov
mov
stc
repnz
lods
sbb
leave
mov
retf
push
(bad)
ja
cli
repz
cmp
(bad)
ds
mov
fmul
jns
mov
xchg
cmp
test
imul
mov
adc
mov
cs
movs
ins
mov
add
jae
mov
ins
sahf
pop
popf
int
dec
xor
daa
mov
pop
addr16
inc
lahf
iret
pop
out
sahf
loopne
out
mov
adc
dec
aad
mov
sar
jge
pop
mov
outs
push
xor
mov
mov
adc
js
in
push
push
mov
pushf
enter
mov
mov
and
push
repz
(bad)
ja
mov
retf
fisttp
and
mov
mov
ret
xor
push
pop
(bad)
aam
xor
xchg
das
cwde
out
fs
jg
cmp
cmp
mov
test
repnz
sbb
cld
(bad)
out
jmp
pop
push
outs
mov
fsubp
xor
movs
cmps
inc
in
jecxz
cmc
js
in
sti
sahf
add
hlt
hlt
pop
inc
jb
cmc
sub
movs
or
xor
adc
sub
in
(bad)
fsub
mov
pop
fucomi
fwait
repz
pop
xor
sbb
fdiv
rol
and
add
mov
pushf
cwde
mov
out
and
inc
dec
mov
sbb
inc
sbb
adc
sub
mov
test
mov
daa
mov
adc
push
pop
repnz
mov
xchg
rol
lea
or
mov
ret
pop
iret
ret
sub
inc
sub
das
push
sub
rcr
(bad)
dec
mov
push
jle
scas
push
fimul
cwde
and
shr
dec
mov
inc
iret
adc
ret
or
lods
iret
pushf
in
push
sub
inc
out
and
cmp
mov
aad
aas
pop
and
div
lods
mov
pop
dec
iret
pushf
movs
lock
jns
sub
fstp
test
pop
test
jp
jae
pop
push
adc
xor
scas
(bad)
xchg
inc
lods
scas
and
xor
xchg
dec
jmp
pop
inc
stos
outs
psubb
sbb
xchg
cmp
cmp
push
sti
cmp
and
das
dec
mov
jmp
pusha
xchg
sbb
mov
shl
mov
loop
mov
scas
mov
jmp
pushf
add
mov
out
add
mov
aad
sbb
jno
pop
loope
sub
jnp
sbb
lds
fcmovb
mov
nop
je
and
cmps
(bad)
jecxz
popf
das
adc
pop
sub
xchg
ror
je
push
mov
mov
shl
outs
push
aaa
mov
sub
jns
and
daa
push
sub
sub
in
sub
mov
xchg
or
pusha
mov
xor
sbb
rcr
fbstp
sub
xchg
pop
int
mov
fild
mov
dec
test
and
sub
or
repz
sbb
fstp
dec
mov
cmps
cdq
adc
mov
dec
pop
ret
mov
sbb
pop
dec
mov
jo
retf
mov
pop
leave
mov
fcmovnb
repnz
sbb
cmc
mov
mov
mov
sar
cmp
in
iret
push
mov
pop
cmp
mov
adc
rcr
(bad)
mov
jns
sub
shl
imul
sbb
(bad)
outs
or
test
cmp
icebp
cmp
test
mov
sbb
rcl
ficomp
les
shl
xor
lea
data16
fsubr
xor
or
ficomp
push
jno
mov
push
dec
sub
ss
and
int3
rcr
cld
jge
add
bound
test
int
rcr
cmp
fcom
jo
call
lods
pusha
test
adc
mov
mov
int
xchg
cmp
mov
movs
call
mov
(bad)
ds
je
loope
mov
cmp
mov
call
sub
out
mov
ror
dec
pop
mov
pop
xor
rol
xchg
in
adc
mov
xor
out
push
xchg
xor
sub
cwde
arpl
fwait
popf
and
je
cmp
add
xchg
adc
stos
xor
enter
in
out
adc
fisttp
cmp
xor
movs
xchg
jle
rol
dec
jbe
inc
outs
into
inc
jl
sbb
clc
rcr
mov
adc
call
mov
ins
lds
(bad)
into
test
imul
adc
inc
push
fisub
popa
mov
sub
fistp
cld
scas
and
pusha
(bad)
jmp
lods
imul
sbb
mov
das
jno
or
test
adc
mov
pop
push
clc
xlat
mov
adc
adc
jne
cmps
xor
pop
add
je
pop
aad
or
ins
pop
iret
fld
cmp
mov
push
mov
movs
adc
cs
mov
popa
test
in
mov
push
dec
mov
xchg
mov
scas
icebp
adc
pop
mov
arpl
sbb
cmp
mov
fs
outs
fdivr
mov
mov
(bad)
and
or
jg
push
repz
rcl
icebp
push
loopne
mov
mov
int3
mov
push
dec
out
xor
fist
loop
jl
in
pop
pusha
sub
das
rcr
fnsave
popf
dec
mov
mov
pop
pop
cdq
outs
push
repz
push
xor
mov
inc
jg
xchg
pop
retf
sub
out
ins
push
xchg
xor
sub
or
rol
jo
push
aad
arpl
data16
mov
call
into
pop
movs
inc
sub
dec
mov
imul
pop
dec
not
dec
repnz
lods
dec
out
pop
in
jp
push
mov
mov
cmp
xor
xor
mov
xor
xlat
push
or
push
sbb
fidivr
popa
call
les
sub
das
jns
dec
std
popf
rcl
cdq
adc
test
sbb
sbb
addr16
cmp
idiv
jnp
out
cmp
loope
shl
mov
ret
jno
sbb
ret
ret
shl
inc
add
mov
jne
pushfw
rol
lds
adc
cmps
jge
adc
inc
fnsave
int3
add
sub
xor
jno
out
test
in
fisub
sbb
or
pop
je
sbb
or
pop
lahf
jbe
out
call
repz
push
outs
jo
ins
jo
shl
cmc
cmp
mov
fidiv
ret
(bad)
pop
dec
popa
mov
js
sahf
pop
xor
inc
loope
cmp
in
or
push
push
rcr
push
ret
bound
add
int
in
add
adc
mov
aaa
cmp
pop
jae
es
dec
adc
mov
xor
mov
in
mov
mov
xor
push
jge
mov
cmp
out
or
adc
ret
and
add
mov
movs
mov
shl
mov
jae
retf
mov
push
pop
retf
popa
cmc
mov
iret
push
lock
inc
jno
adc
push
rol
jnp
mov
bound
or
fisttp
pop
xchg
mov
std
data16
xchg
iret
sub
pop
mov
dec
pop
lea
sbb
jns
sbb
mov
and
add
cmps
ins
cmp
in
pop
xchg
mov
cdq
push
mov
push
ret
push
movs
aam
jge
mov
cmp
inc
repnz
jno
dec
xlat
and
add
mov
adc
mov
or
inc
not
in
arpl
mov
jb
rcl
std
scas
cmc
(bad)
sbb
push
push
int3
call
sub
outs
mov
fnsave
sub
es
clc
adc
leave
aaa
push
out
fdiv
jmp
out
mov
mov
xchg
sbb
xchg
lds
nop
(bad)
and
arpl
cld
enter
repnz
(bad)
sbb
outs
jmp
out
add
xchg
sub
in
adc
sti
nop
xchg
lahf
adc
stc
cs
mov
and
or
adc
fisttp
out
cmps
mov
mov
mov
mov
pop
iret
ins
(bad)
mov
sub
xor
aam
xchg
adc
mov
mov
push
aas
sti
in
mov
push
jg
xor
dec
mov
sbb
push
jmp
jb
jno
movs
sahf
(bad)
jmp
cmp
mov
add
shl
adc
mov
mov
pop
mov
in
jl
jmp
pop
push
jne
mov
jo
dec
or
cli
and
inc
jg
ror
jp
pop
ret
pop
mov
pinsrw
push
loop
mov
in
push
jno
and
xchg
pop
xor
add
jb
inc
int
xchg
jmp
ja
(bad)
icebp
sub
mov
mov
dec
fst
out
neg
int3
push
pop
cmp
xor
xchg
les
(bad)
and
mov
mov
xchg
repz
sub
inc
iret
adc
adc
shl
test
out
scas
pop
jns
sahf
sahf
ins
popa
fidivr
jb
xchg
shl
loope
rcr
jp
into
(bad)
in
sub
das
cs
(bad)
lods
inc
dec
push
ficom
adc
xchg
mov
inc
xor
cmp
mov
cmps
mov
or
pop
mov
push
jecxz
push
ins
call
or
fwait
(bad)
xchg
cld
push
inc
sahf
adc
ret
das
imul
rcl
je
sub
retf
icebp
out
inc
xor
daa
sahf
mov
xor
fldlg2
or
fwait
cmp
stos
inc
push
mov
fisttp
add
adc
adc
mov
pop
or
and
xchg
or
xchg
push
mov
bound
xchg
jno
add
sub
and
ja
add
aaa
adc
cdq
jnp
jl
xchg
mov
dec
cmp
nop
xor
movs
(bad)
loop
jbe
hlt
lods
and
cmps
sub
xchg
jne
dec
push
outs
iret
jl
xchg
mov
fdivr
xchg
add
cmp
imul
int3
dec
nop
push
mov
jp
int
jecxz
add
fadd
jo
push
retf
push
sub
pop
push
popf
xchg
xchg
test
fisubr
mov
ja
nop
out
loope
pop
pop
aas
inc
cmp
jbe
scas
push
push
jne
fs
stos
push
add
jecxz
add
dec
scas
inc
push
mov
sub
outs
mov
ret
leave
aad
jmp
rcl
fnstenv
rcl
or
push
loop
cmp
jmp
cld
fcomi
dec
imul
fnstsw
das
lods
push
mov
inc
and
jmp
inc
outs
test
pop
or
or
mov
pop
mov
jl
sub
push
sbb
or
loop
pusha
pop
(bad)
out
ds
dec
repz
sbb
fstp
in
sbb
mov
enter
ja
(bad)
push
adc
jle
add
loope
xchg
(bad)
mov
shl
push
cmps
outs
retf
push
rcl
cwde
(bad)
aad
xchg
adc
xchg
and
test
jl
test
add
xchg
popf
pop
test
cmp
arpl
mov
xchg
inc
mov
push
pop
mov
dec
sub
pushf
je
cmp
xor
repz
lea
lea
in
ret
or
stc
or
jne
(bad)
jnp
(bad)
das
je
call
les
adc
xlat
cmp
sbb
cmp
jbe
add
mov
xchg
sahf
push
repz
push
leave
mov
inc
mov
add
pop
clc
sahf
fldcw
pop
in
xchg
fsubr
imul
stos
das
push
cmps
or
fisub
fwait
adc
ss
nop
invd
ins
xchg
rep
fisttp
xor
adc
mov
movs
pop
out
pop
push
test
mov
mov
jmp
call
pop
mov
adc
(bad)
sti
loop
cmp
aas
test
sub
mov
dec
dec
xlat
push
push
ret
call
(bad)
xor
pop
add
push
fs
sbb
(bad)
loope
std
add
mov
push
in
cmps
cmps
sbb
imul
lds
cld
cld
int3
fstp
and
cmc
cmps
enter
inc
mov
or
xor
stc
icebp
hlt
add
fprem1
ja
pop
(bad)
xor
mov
push
stos
sbb
pop
cmp
xchg
ret
and
pop
or
xchg
push
xchg
push
or
stos
addr16
sets
mov
mov
and
sub
outs
inc
(bad)
or
call
push
push
loopne
pop
mov
data16
call
sahf
or
imul
sbb
cmc
cmp
lock
mov
(bad)
stc
call
adc
shr
jns
sar
jo
mov
adc
cld
int
pop
sub
stc
or
push
ss
jne
pop
inc
pop
adc
sub
pop
cmc
mov
ds
pop
inc
iret
retf
outs
int
xor
bound
(bad)
fld
mov
daa
call
arpl
movs
and
push
jne
mov
(bad)
fimul
scas
mov
out
and
sub
xor
lock
xchg
movs
cmps
les
jbe
add
push
in
pop
rcl
and
add
sbb
mov
mov
ficom
cli
cmp
xor
mov
jnp
push
das
sti
or
call
and
lea
in
imul
inc
lods
adc
cmp
push
xchg
jae
fistp
aaa
clc
inc
xchg
(bad)
cmp
cmps
movs
scas
inc
xor
je
mov
mov
fucomip
addr16
push
outs
out
arpl
jle
cmp
(bad)
and
ret
(bad)
and
dec
jge
mov
xor
inc
lds
paddb
mov
cmps
xchg
fdivrp
dec
sbb
pop
push
push
mov
stos
pushf
sti
jge
cmp
mov
mov
add
push
pop
sub
(bad)
pop
xchg
int3
retf
cld
xor
std
mov
xchg
push
mov
arpl
xchg
test
inc
loopne
mov
jge
push
aad
bound
adc
and
outs
outs
inc
push
pop
test
inc
xlat
shl
adc
dec
dec
ret
daa
pusha
test
xor
addr16
mov
loope
(bad)
mov
adc
inc
jg
mov
fs
dec
sahf
imul
pop
pop
jne
aad
push
jne
dec
push
mov
ss
ins
sbb
or
cmps
out
sub
mov
enter
xor
movs
cmp
(bad)
(bad)
add
push
js
jns
xor
and
and
in
ja
fsub
imul
addr16
dec
leave
or
sbb
mov
cmps
xor
jne
pop
mov
cmp
ret
std
adc
icebp
and
add
neg
popf
leave
mov
in
add
mov
mov
push
inc
scas
int
jne
sar
movs
push
adc
out
inc
aas
inc
shl
sbb
pop
dec
add
test
sbb
or
xchg
xchg
in
xchg
mov
test
aaa
add
loop
or
sub
xchg
inc
(bad)
mov
aad
inc
mov
mov
mov
ja
add
daa
cmp
sbb
cmp
adc
push
mov
jbe
in
sar
push
jnp
test
div
fadd
adc
scas
inc
iret
push
sbb
inc
pop
inc
ja
hlt
pop
pop
pop
jl
pusha
je
jecxz
dec
ja
dec
stos
inc
cmp
push
ss
pushf
xor
cwde
ret
repz
es
dec
int3
mov
dec
outs
xchg
jmp
and
imul
adc
stos
mov
jecxz
push
pushf
sti
sbb
adc
mov
jb
stos
fdivr
stc
jnp
das
fadd
pop
gs
cwde
mov
xor
lea
push
in
push
retf
cli
loopne
ins
iret
xor
repz
dec
push
cli
jl
xlat
pop
lods
ja
push
fbstp
xor
lock
cmp
mov
jno
cmp
mov
(bad)
shr
xor
sahf
sub
cmp
mov
dec
enter
pop
loop
jae
js
sub
xor
ins
outs
lahf
scas
jo
cmp
cmps
pop
loope
cs
mov
and
mov
ret
ja
div
push
sti
cmc
mov
hlt
dec
push
jno
push
lods
jg
push
inc
cld
mov
fcomp
add
push
out
es
lahf
rol
cmps
call
mov
cmp
and
bound
push
arpl
(bad)
(bad)
lods
jl
(bad)
xchg
das
icebp
add
xchg
pop
push
jle
retf
pop
sub
in
mov
sub
adc
sub
push
cmp
fisub
ret
push
cmp
ret
stc
xchg
test
les
xor
pop
pop
in
adc
adc
(bad)
fcmove
cmps
xor
push
mul
call
popf
call
mov
fidiv
sbb
mov
repz
scas
pop
dec
in
cmps
inc
push
(bad)
idiv
mov
ins
pop
jge
mov
cmp
jb
imul
in
mov
fisub
adc
out
cmp
movs
mov
retf
mov
mov
jecxz
nop
adc
xor
sbb
add
jno
repz
xchg
cmp
sub
movs
and
test
xchg
cmp
mul
mov
mov
cs
inc
cmps
mov
cwde
mov
fcomp
cmp
sbb
sbb
xchg
or
adc
sub
jae
(bad)
mov
dec
xchg
outs
movs
int3
xchg
xchg
dec
push
scas
fidivr
ss
popa
in
adc
and
jno
shr
rcl
in
push
js
repnz
test
sbb
mov
into
mov
(bad)
adc
mov
jg
mov
fadd
lea
(bad)
mov
add
mov
arpl
xchg
out
cmp
cli
mov
sub
pop
sub
push
pop
fs
dec
fs
popa
outs
push
pop
je
push
mov
loope
inc
mov
out
mov
leave
jg
jns
ins
lods
push
ins
pop
ret
mov
fadd
loopne
pushf
jp
sub
mov
mov
(bad)
rol
cmp
dec
retf
push
xchg
dec
stos
mov
fidiv
test
or
call
lods
es
aad
(bad)
(bad)
adc
jg
call
mov
aas
push
sub
jno
imul
adc
idiv
dec
shr
dec
icebp
xor
jg
dec
cmp
push
xchg
xchg
jne
int
sbb
loope
ja
xor
imul
scas
enter
xchg
xor
dec
dec
mov
jno
mov
xor
mov
cmp
add
into
inc
ret
lahf
clc
xchg
and
dec
sub
sti
pushf
out
xor
or
mov
xchg
mov
push
cmp
loopne
jae
mov
shl
out
(bad)
cmp
ins
push
sbb
push
out
inc
mov
movs
add
test
ins
retf
int3
aam
cld
adc
ja
lock
pop
iret
jnp
push
mov
pop
(bad)
pusha
dec
push
pop
push
mov
fiadd
repz
sub
(bad)
jns
leave
and
cmc
cmp
jbe
push
ud0
cmp
inc
bnd
pop
pushf
ret
push
scas
mov
repnz
arpl
inc
or
cmp
sub
jg
push
sub
fs
stos
std
jp
mov
mov
push
mov
nop
out
int3
adc
sbb
(bad)
call
ficom
adc
repnz
jp
inc
cmps
aas
add
icebp
div
jbe
cmps
or
inc
lods
in
xor
sbb
daa
or
gs
ret
jnp
lock
sbb
in
imul
mov
in
(bad)
fsubr
mov
mov
jmp
adc
lds
add
dec
mov
adc
int3
push
xor
push
scas
pop
ret
out
adc
sbb
movs
jl
inc
les
aad
adc
es
out
cwde
es
mov
jg
cmp
cmc
sub
push
sbb
out
mov
xor
push
add
push
pop
jmp
inc
test
mov
or
outs
jmp
jmp
js
stc
int3
push
inc
fidiv
movs
add
stos
popa
fnstsw
ja
fidivr
sbb
jg
push
mov
sbb
sbb
mov
jbe
addr16
inc
test
icebp
mov
cwde
xor
(bad)
(bad)
jl
push
sbb
jb
jno
rol
mov
jne
cwde
fucomp
push
mov
sub
push
out
mov
push
and
cli
fstp
adc
add
jo
fcom
in
sub
add
mov
jae
mov
adc
jbe
sbb
cmp
imul
outs
stos
xchg
jno
ja
ret
shr
xchg
lds
loopne
dec
push
fst
lods
pop
cmp
inc
mov
inc
mov
push
xor
jmp
and
mov
sub
aas
xchg
mov
jne
mov
movs
cmp
call
stos
dec
or
and
inc
pop
add
ret
cmp
xchg
pushf
dec
or
or
shl
int
retf
fs
xor
mov
lds
push
ficom
cmp
push
into
aam
mov
xchg
mov
icebp
inc
xlat
aaa
or
pop
inc
shr
push
retf
pop
(bad)
mov
pop
fwait
sub
lods
je
push
not
mov
xchg
and
in
rol
sbb
fstp
xor
xchg
ja
dec
or
pop
dec
xor
and
mov
jns
add
xor
arpl
inc
adc
das
or
inc
jp
loop
xor
and
cmp
pop
inc
push
mov
add
sub
pop
pushf
jo
aas
and
add
inc
xor
adc
loopne
adc
and
or
xchg
ja
jp
jmp
push
scas
ret
sbb
mov
bsr
push
mov
lock
ins
and
retf
inc
or
sbb
enter
repz
jmp
mov
mov
rcr
popa
pop
dec
pop
cs
xchg
out
in
popa
or
movs
cmps
imul
mov
mov
(bad)
pop
fst
call
fld
jne
cmps
ror
inc
xor
sbb
test
or
mov
cmp
loope
mov
or
and
add
neg
xchg
ja
test
stos
xor
sbb
cmps
stc
imul
mul
std
jg
fiadd
dec
push
rcr
push
dec
das
push
mov
(bad)
cld
sub
mov
add
and
icebp
pop
mov
call
cld
push
in
jb
sbb
(bad)
mov
clc
or
je
loop
(bad)
or
test
test
mov
std
shr
add
pop
cmp
sar
rol
stc
mov
mul
mov
sar
adc
xor
push
leave
cmp
in
das
cdq
push
mov
xor
dec
adc
jnp
test
and
int
pop
jne
or
add
fld
add
adc
shr
pop
into
in
ret
in
mov
cmc
cmp
call
loopne
and
sub
test
jmp
pop
and
div
and
sbb
outs
mov
loope
and
cmp
shl
idiv
or
xor
int
jmp
lods
loope
loopne
jmp
cli
repz
lods
js
mov
fistp
mov
loope
js
out
inc
daa
mov
and
iret
mul
jmp
xchg
ins
mov
dec
in
aaa
cmp
and
outs
enter
jmp
mov
inc
add
(bad)
and
cld
adc
js
sbb
mov
cmp
sbb
mov
ds
pushf
call
mov
aas
stos
sbb
shr
call
pop
loop
cld
inc
movs
stos
rol
xchg
mov
or
push
dec
out
in
and
stos
sti
pop
(bad)
push
(bad)
outs
adc
xchg
scas
xchg
or
repz
out
call
mov
shl
daa
nop
dec
pop
add
arpl
push
add
test
cdq
jmp
or
add
(bad)
bound
sbb
inc
imul
cld
mov
test
or
mov
adc
push
aas
stos
lds
daa
add
adc
test
call
or
xor
out
jmp
ins
jg
fisttp
sub
ja
or
repnz
sbb
int3
sti
fxam
cmp
pop
ja
inc
dec
push
pop
arpl
push
imul
div
pushf
mov
adc
pop
adc
test
int3
xchg
(bad)
add
test
sti
hlt
repnz
mov
stos
mov
and
mov
push
jge
ins
add
adc
ficomp
pop
leave
mov
lea
add
pop
mov
fiadd
mov
mov
hlt
sbb
dec
hlt
shl
sub
inc
jmp
adc
dec
sahf
sub
cmps
add
ror
or
mov
xor
or
jb
ret
mov
or
rcl
xchg
jle
cmp
lock
mov
pop
push
mov
push
aad
jne
adc
jns
jno
and
inc
sahf
cld
and
push
dec
cmp
scas
movs
adc
sbb
movs
jbe
jl
add
inc
int3
pop
retf
jmp
stos
rcl
sbb
and
pusha
add
iret
imul
jns
cmp
jbe
xor
adc
stos
cmp
movs
jle
stos
(bad)
jmp
push
inc
cwde
add
add
pop
jnp
lods
es
ins
gs
mov
mov
leave
jecxz
mov
sub
in
cmp
fld
cld
in
int3
adc
or
repnz
cmp
or
div
imul
out
es
out
sub
(bad)
movs
das
outs
sbb
jg
fcom
inc
leave
mov
jns
jne
loopne
sub
or
pop
jne
dec
and
loopne
sbb
inc
cs
and
xor
in
dec
sar
inc
push
mov
xor
aam
pop
mov
xchg
repz
imul
mov
cmp
mov
sub
icebp
xor
inc
mov
ss
out
jns
pusha
pop
(bad)
fwait
das
retf
push
adc
jnp
cmc
and
lea
inc
into
enter
fimul
inc
push
leave
fwait
xor
adc
in
mov
mov
movs
fistp
pop
nop
(bad)
push
jne
or
mov
fwait
xor
dec
and
cmp
fwait
inc
enter
mov
neg
ja
xor
mov
lea
mov
push
cli
sti
jbe
out
lock
xchg
push
jmp
add
daa
sub
and
add
das
inc
mov
pop
lods
fcom
inc
rcl
dec
(bad)
push
out
xchg
out
pop
aad
in
dec
mov
lods
mov
mov
push
pop
xor
inc
or
adc
pusha
std
sub
es
int
(bad)
sbb
add
mov
inc
or
xchg
leave
sbb
loop
xchg
(bad)
jns
adc
aad
popf
stc
inc
push
sub
cmc
mov
shl
add
aad
clc
mov
cmp
lds
in
(bad)
cwde
cwde
jg
and
mov
imul
sub
pop
jnp
lods
scas
loop
ss
or
cwde
pop
mov
(bad)
or
fwait
jg
dec
or
(bad)
(bad)
jge
mov
mov
imul
or
cmp
add
gs
mov
inc
fisubr
sbb
add
dec
sbb
ret
dec
jmp
add
mov
iret
je
mov
cmp
cmp
push
js
add
mov
retf
(bad)
aas
sub
setns
stc
scas
shl
mov
cmp
mov
pop
js
or
add
pop
cmp
mov
les
mov
pop
stc
jp
jb
mov
sbb
icebp
sbb
mov
sub
(bad)
lods
movs
lock
mov
adc
adc
cmp
inc
cmp
push
rcl
stos
rcl
popa
xor
pop
jge
lods
and
icebp
stc
aam
stos
repz
push
cmc
inc
dec
out
jae
fisubr
mov
cmp
sbb
cld
stos
in
sbb
sub
test
cmp
mov
add
pushf
mov
in
shl
jge
icebp
xor
inc
shl
inc
dec
stos
jmp
fnsave
ja
pop
dec
push
xchg
(bad)
mov
mov
xor
sahf
inc
xchg
push
loopne
dec
cmovo
test
mov
test
scas
int
mov
imul
mov
cmp
jp
pop
lahf
cs
dec
mov
mov
fs
pop
addr16
cmp
ja
mov
or
stos
sbb
das
jg
sar
jge
push
stos
or
aaa
jg
mov
je
or
stc
fdivr
hlt
xchg
or
dec
arpl
mov
add
dec
dec
popa
lahf
xchg
idiv
dec
in
sar
movs
test
(bad)
(bad)
push
in
nop
pop
adc
push
sbb
push
mov
mov
enter
xchg
xchg
lea
(bad)
iret
jae
mov
cmps
rcl
push
xchg
fwait
arpl
pop
je
add
out
xchg
push
mov
pop
or
mov
or
test
cs
push
sbb
mov
ja
mov
mov
test
mov
arpl
icebp
int
xor
repz
das
xchg
push
push
out
mov
add
stos
cld
cld
pop
cmp
push
pop
mov
sbb
scas
or
adc
sub
mov
mov
sahf
jb
out
in
outs
cdq
adc
inc
or
rcl
xchg
and
jne
bound
xchg
(bad)
xor
daa
ret
addr16
sub
fcom
xchg
loope
rol
xor
(bad)
xchg
lock
ja
ror
nop
imul
and
fisub
fdiv
xchg
pop
hlt
(bad)
mul
xchg
lock
cmps
(bad)
loopne
sbb
vpavgw
dec
adc
ret
pop
add
retf
cmps
mov
rcr
lea
pop
mov
mov
add
stos
sbb
xchg
imul
loope
int
inc
ds
lahf
test
sub
jno
in
jle
jmp
fisttp
fist
jle
dec
fwait
lahf
sbb
out
into
pop
mov
add
push
mov
jno
mov
popf
and
or
xchg
xchg
out
daa
sbb
int
mov
test
add
mov
int3
outs
sub
lods
xchg
xchg
xor
ret
in
test
mov
pop
shl
sbb
push
add
out
scas
pusha
jmp
stos
retf
popa
mov
jmp
xchg
cmp
cmp
cmp
lea
add
mov
loopne
adc
add
push
ret
mov
jbe
arpl
aas
pop
pop
mov
xchg
pop
scas
xlat
adc
mov
adc
repz
repnz
scas
fs
in
pushf
jmp
pushf
add
aas
sbb
push
ja
inc
and
sub
stc
pop
push
inc
adc
xchg
outs
jae
cdq
or
pop
addr16
retf
push
fild
cwde
cmp
pop
xchg
not
pop
cmp
xor
nop
pop
aad
mov
outs
test
pushf
faddp
iret
push
jp
fxch
in
xor
int3
scas
inc
jle
inc
ins
mov
pushf
adc
jbe
mov
stc
mov
jmp
adc
dec
lock
rcl
adc
inc
cmps
cwde
fwait
xchg
sbb
inc
addr16
fwait
sub
mov
jge
mov
pop
ds
out
adc
add
cs
cmps
push
pop
js
mov
shl
and
fild
dec
(bad)
(bad)
test
dec
cmc
mov
cmp
inc
jecxz
cli
push
jns
mov
mov
push
or
mov
or
inc
jle
adc
lahf
xlat
push
inc
inc
jbe
test
mov
mov
mov
xor
dec
xrelease
xchg
cli
adc
sahf
xor
fdivr
fisub
jmp
std
enter
jle
dec
fcmovnbe
jns
mov
xchg
shl
pop
movs
out
cmp
leave
mov
pop
add
xor
fmul
call
and
lock
das
pop
jge
push
push
not
jo
inc
aas
lahf
inc
shl
mov
xchg
push
mov
in
(bad)
imul
pushf
add
outs
pop
sbb
ss
xor
jne
aam
test
movs
retf
fimul
xchg
outs
mov
dec
loope
jnp
mov
and
loop
leave
dec
adc
adc
push
fild
mov
cmp
fistp
push
and
push
clc
sbb
out
push
mov
cli
ret
pop
movs
push
pop
mov
or
or
ret
repnz
jmp
dec
outs
and
not
test
dec
ins
or
and
mov
xchg
icebp
fcom
xlat
mov
xchg
adc
ins
test
xchg
xchg
lods
scas
imul
lea
cmp
pop
inc
pop
and
pusha
test
sub
movs
mov
sub
inc
test
mov
mov
dec
jmp
mov
(bad)
jb
jmp
pop
mov
dec
shr
add
xor
xchg
dec
ror
cmp
lahf
lds
cmp
or
or
arpl
pop
and
dec
call
xlat
pop
xor
or
xchg
mov
pop
pop
and
clc
jbe
sub
stos
dec
test
imul
ins
xchg
adc
xchg
in
push
push
jg
mov
sbb
pop
je
inc
cmp
push
and
lods
mov
mov
xor
add
mov
cmp
dec
xchg
imul
shl
inc
pop
popf
add
push
xchg
in
fprem
(bad)
xchg
call
test
addr16
stos
and
test
cwde
xchg
(bad)
and
mov
jecxz
add
sbb
pcmpgtb
out
pop
fucomp
(bad)
in
pop
mov
pop
ja
lock
movs
shl
pop
mov
shl
jnp
inc
stos
jb
push
xor
stos
outs
mov
movs
mov
mov
data16
sub
inc
ins
or
ins
or
aaa
stc
sbb
cmc
cmp
sub
test
addr16
aas
mov
push
push
enter
cmc
push
xchg
inc
jns
add
mov
lods
daa
and
jmp
xor
mov
int
movs
sub
xor
xor
sub
jecxz
iret
hlt
outs
mov
push
enter
rcl
or
and
mov
mov
xor
mov
inc
pop
xchg
cmp
sbb
pusha
ja
pop
sub
pop
mov
call
jp
movs
push
ret
into
cmc
inc
stos
or
(bad)
cmp
jns
retf
fldcw
movs
shr
pushf
mov
mov
cmc
adc
pop
pop
cmp
push
enter
stos
cld
xchg
nop
dec
adc
pusha
(bad)
adc
cli
ret
push
or
popf
xor
test
or
std
mov
push
jl
push
jbe
movs
repnz
mov
imul
inc
loope
cmps
cmp
pusha
inc
sub
std
retf
stos
js
ds
mov
dec
ss
adc
pop
ret
fidiv
xchg
cmc
jbe
dec
sbb
xor
push
mov
adc
inc
jne
mov
xor
sub
inc
or
leave
and
in
std
imul
mov
jae
popa
test
lods
mov
xchg
adc
inc
jno
arpl
clc
push
xchg
xor
pop
cmps
lods
ds
call
cwde
pusha
add
push
dec
out
cmp
aas
imul
add
hlt
fidivr
repz
ds
xor
dec
call
imul
mov
add
aad
outs
adc
mov
adc
mov
std
mov
add
scas
push
and
xchg
lock
movs
fldln2
inc
mov
(bad)
push
cmp
mov
test
fbld
and
mov
rcr
(bad)
dec
into
jl
mov
repz
dec
lds
ins
push
(bad)
jnp
mov
mov
es
sub
popa
cld
adc
mov
fild
pop
aaa
(bad)
or
ds
ins
mov
lds
test
push
xchg
add
je
hlt
sahf
mov
jae
add
push
out
daa
or
cwde
fsub
out
and
jl
and
mov
cmp
jl
jo
inc
add
fcmovnbe
push
stos
dec
add
sahf
pop
ja
retf
loopne
(bad)
ss
daa
loope
out
popa
dec
pop
call
ficom
retf
out
loopne
inc
rcr
and
adc
or
xlat
mov
mov
and
lods
ins
xor
cwde
fld
ins
mov
pop
sub
(bad)
loope
sub
jge
or
arpl
loope
leave
sub
and
rcr
adc
das
je
fwait
or
iret
jno
inc
adc
sbb
sbb
retf
nop
loopne
stos
mov
mov
sti
cmp
dec
xlat
adc
lock
es
cwde
test
out
xchg
mov
into
cmps
mov
mov
xor
je
int
or
scas
movs
in
dec
dec
inc
repz
lahf
adc
sub
cmps
out
neg
jnp
inc
in
loop
aas
(bad)
push
fbstp
ret
dec
das
loope
popa
adc
ret
dec
jge
aam
push
inc
or
and
call
movs
inc
out
dec
scas
scas
push
push
dec
dec
cmp
fnstenv
cli
xchg
inc
test
mov
shl
loop
mov
ja
loope
push
in
sub
push
sti
je
lock
cmp
jmp
pushf
xchg
cmps
or
xor
mov
cmp
nop
loopne
inc
push
les
ret
pop
and
pop
or
xchg
cmc
or
ds
or
sub
outs
dec
loope
test
jne
sbb
mov
pop
adc
jp
popa
mov
and
cli
or
cdq
call
inc
bound
test
mov
mov
ret
push
and
add
call
aas
fbstp
in
adc
aaa
sub
xchg
(bad)
mov
int3
pop
jo
hlt
cmovno
leave
jns
push
xchg
mov
mov
jecxz
fst
jmp
ret
stos
push
dec
or
fld
stc
and
push
sbb
add
adc
test
inc
adc
sub
adc
jb
sub
jns
in
mov
shr
shl
mov
rcr
cli
sub
iret
sbb
bound
mov
aas
and
sti
jnp
jnp
js
lods
and
cmp
das
push
cli
stc
js
sub
aad
or
mov
test
pop
cwde
add
je
hlt
aam
fild
jnp
and
push
stc
out
xor
add
pushf
(bad)
enter
xor
jl
movups
cld
out
pop
ss
movs
xor
add
adc
pusha
fld
sahf
jb
add
stc
out
mov
add
jp
xchg
inc
jb
mov
jns
adc
inc
scas
scas
mov
mov
lods
fisttp
jl
fsub
mov
and
and
in
dec
sub
mov
jl
fld
mov
or
add
pop
repz
xor
push
xor
inc
xchg
pop
mul
push
gs
imul
mov
sub
xor
popa
and
sbb
movs
stc
imul
outs
pop
push
in
fnstsw
out
mov
das
push
push
arpl
push
cmp
rol
sbb
call
pop
clc
push
jl
sbb
(bad)
retf
(bad)
sahf
call
mov
jnp
adc
sahf
mov
ins
adc
add
cmps
ret
jmp
fld
jb
xchg
icebp
jae
arpl
dec
cmps
adc
adc
mov
xor
add
push
dec
sub
sar
lods
sub
icebp
xchg
mov
dec
call
mov
loop
movs
movs
cmps
jp
adc
icebp
jmp
daa
mov
push
sti
dec
call
das
dec
mov
fmul
adc
retf
and
sbb
outs
jns
retf
ins
daa
sub
cmps
aad
jecxz
xor
ret
or
inc
lock
push
iret
(bad)
loope
shl
cs
push
push
retf
pop
test
pushf
fimul
popa
inc
test
sbb
int3
sub
into
cmp
jb
(bad)
call
aas
repz
and
ret
cmc
jno
adc
les
retf
push
xor
dec
sbb
inc
cld
fst
jge
cmps
xor
imul
out
pop
and
mov
or
xor
dec
pop
or
cmp
lds
pop
cld
mov
xlat
dec
int3
adc
or
ret
xchg
je
mov
loopne
aad
aad
and
test
mov
scas
fsubp
xchg
sub
mov
cmp
mov
cmc
adc
shl
bound
aaa
pop
mov
(bad)
mov
sbb
loope
idiv
rcr
jmp
xor
sub
add
mov
pop
mov
add
mov
shl
ins
pop
into
xchg
or
setno
fistp
xor
je
loopne
(bad)
and
call
repz
scas
loope
inc
push
inc
xor
lods
fs
bound
push
mov
aad
pop
or
fdivrp
aas
outs
ret
xor
cmp
lock
ins
sbb
outs
imul
pusha
pop
dec
out
cmps
inc
or
inc
fwait
cwde
push
mov
jb
clc
repnz
rol
push
loope
jno
aaa
stos
ja
bswap
lea
ror
test
push
jbe
fwait
xchg
add
out
test
and
push
mov
pop
das
iret
aad
xor
jnp
jns
and
add
fisub
xchg
fstp
jbe
ret
retf
inc
xchg
jns
mov
xor
movs
sub
and
rol
jle
xchg
adc
pop
rcr
jne
test
sbb
mov
adc
xor
aam
cdq
add
cmp
scas
scas
shl
imul
add
jo
mov
pop
jo
add
ror
cdq
popa
xchg
lds
push
adc
mov
xchg
or
sub
sub
xor
loopne
sub
mov
scas
mov
pop
mov
ins
scas
mov
mov
shr
movs
dec
fdivr
push
aaa
or
jmp
and
or
icebp
jmp
xor
add
jl
mov
jno
out
xchg
sub
movaps
test
rcl
push
pop
pop
stos
push
mov
dec
dec
adc
push
aad
loopne
sub
mov
retf
daa
and
add
in
dec
pop
mov
mov
test
push
test
push
daa
jbe
mov
wrmsr
add
push
call
mov
call
xor
fsubr
nop
les
int
rol
sub
push
lds
pop
rcl
or
mov
push
pop
leave
jne
inc
pop
or
nop
cmps
stos
(bad)
nop
ins
mov
cdq
mov
cmp
pop
stos
jae
inc
xchg
dec
test
aaa
shr
lods
sbb
and
lea
sbb
add
js
int
pop
and
mov
mov
push
xor
mov
fsubr
(bad)
retfw
hlt
xchg
pop
scas
pop
fs
pop
add
add
lock
hlt
inc
jmp
dec
addr16
mov
dec
jmp
or
cmp
dec
icebp
mov
icebp
imul
int
nop
sbb
loope
rcr
(bad)
ja
dec
pop
in
cdq
sub
pop
call
imul
xchg
or
pop
xchg
into
shr
xor
int3
rol
and
out
inc
jns
test
mov
mov
sbb
(bad)
pushf
xchg
movs
adc
mov
pushf
js
shl
jno
mov
xchg
pop
stc
push
(bad)
pusha
data16
sar
aas
cmp
mov
arpl
lods
aas
(bad)
mov
lds
mov
aam
jne
mov
inc
mov
fiadd
push
xor
add
ins
cmp
(bad)
mov
mov
jne
or
(bad)
repz
push
mov
push
shl
mul
loopne
push
mov
lock
das
mov
stc
pop
or
mov
jmp
jl
stc
lahf
jnp
push
xchg
ds
cmp
and
in
jmp
sti
adc
dec
jnp
xlat
cmp
imul
jno
and
jmp
sbb
mov
or
jae
and
jb
xchg
js
jmp
outs
sar
test
jl
push
data16
and
sub
xchg
jnp
dec
iret
gs
mul
leave
sub
sbb
out
ret
std
rol
mov
or
lods
lea
ret
(bad)
arpl
test
ins
xchg
push
cdq
test
cmc
xchg
xor
ds
sti
nop
xor
in
repz
add
in
push
dec
rcr
add
outs
push
cmc
rcl
cmps
push
loope
mov
or
gs
lahf
pushw
or
mov
lods
mov
push
mov
into
mov
ss
inc
fsub
and
scas
and
rcr
ret
push
inc
into
lods
(bad)
cmc
dec
clc
cmp
mov
cmp
sti
mov
mov
mov
sbb
loopne
xchg
leave
in
xlat
adc
inc
xor
repnz
movs
or
int3
repnz
push
std
cmps
mov
cmp
xor
inc
jo
sub
stc
mov
inc
nop
xlat
mov
ret
pop
and
fcmovnu
push
sub
mov
cmp
mov
or
lds
psrld
popf
std
mov
in
scas
or
ret
mov
jnp
test
stos
punpcklwd
xor
sbb
js
cli
fidiv
cli
shl
lods
add
movs
mov
xchg
movs
mov
add
inc
out
jmp
sbb
aam
inc
fadd
rol
fmul
xchg
xor
ret
in
jne
xor
ret
ja
popa
imul
sub
xor
repz
fs
(bad)
(bad)
dec
rcr
ficomp
je
adc
xlat
retf
push
dec
cmp
ins
push
push
or
jne
mov
ret
and
loopne
lahf
loop
pop
movs
xlat
mov
push
stos
inc
and
rol
xchg
dec
dec
mov
cmp
jecxz
inc
aas
pop
adc
lds
fisubr
loopne
out
push
add
leave
fs
inc
sahf
popa
(bad)
(bad)
(bad)
sbb
and
inc
add
das
add
cmp
and
jb
push
cmps
es
call
popf
mov
inc
test
div
stos
stos
es
pop
sahf
pop
imul
dec
push
dec
inc
push
xor
jmp
adc
inc
sbb
sbb
movs
(bad)
push
cmp
pop
retf
jns
mov
mov
jle
pop
sbb
inc
call
ds
jl
lods
jbe
and
jecxz
mov
cmp
push
sbb
mov
int3
repz
dec
xchg
mov
jge
and
sub
lea
sahf
clc
jbe
call
mov
inc
lahf
adc
shl
leave
pop
data16
scas
leave
inc
ror
jp
adc
loope
pop
cmc
pop
pop
sar
sub
fdiv
mov
in
inc
rcl
shl
mov
fild
xchg
xchg
repz
mov
push
cmps
push
scas
retf
sub
and
xchg
sub
cmp
xor
fsubr
daa
inc
in
cwde
jge
out
add
pop
ins
out
lds
fisub
(bad)
push
shl
arpl
push
jl
call
push
jl
clc
into
pop
rcl
ss
loop
push
addr16
add
shl
dec
sub
and
pop
repz
enter
mov
adc
js
push
dec
fld
xchg
push
xchg
pop
jp
iret
pop
push
cmps
lods
pop
mov
mov
out
retf
pop
dec
add
retf
cmc
pop
mov
cmp
dec
mov
or
cld
push
stos
shr
rol
cdq
jg
stos
ror
test
xor
inc
and
and
movs
(bad)
mov
pop
cld
xchg
ret
push
lock
adc
mov
popa
xor
inc
aaa
push
pand
pusha
mov
pusha
pop
std
jne
nop
pop
and
das
add
mov
dec
pop
adc
imul
addr16
add
and
dec
lods
push
mov
xchg
push
lea
cli
xor
scas
inc
sbb
mov
(bad)
and
fs
push
je
in
inc
movs
or
or
jmp
mov
inc
inc
dec
mov
sub
sbb
iret
in
xchg
popf
sub
iret
sahf
pop
xchg
ror
jae
mov
test
push
fs
jno
mov
in
mov
push
xchg
adc
xchg
pop
rcl
in
xchg
outs
ins
sbb
adc
cmp
sub
(bad)
and
cs
test
mov
dec
mov
fsubrp
int
enter
pop
(bad)
mov
test
inc
pop
cmp
ss
push
je
loopne
shl
fdiv
ja
mov
adc
xchg
ins
clc
rol
jo
cwde
test
inc
pushf
cmp
out
lea
dec
jb
and
std
push
fidiv
pusha
pop
dec
pop
pop
inc
adc
mov
and
(bad)
mov
clc
jae
pop
jg
mov
imul
aas
mov
lods
shl
fs
and
je
clc
push
dec
jg
sbb
mov
jbe
mov
sub
jl
adc
div
inc
adc
sub
out
mov
outs
ret
or
push
(bad)
push
jnp
push
pusha
aaa
add
jle
lock
dec
rcr
and
call
into
sub
ins
xchg
stc
leave
add
repnz
jl
push
xchg
lahf
push
loop
dec
xor
and
movs
jge
mov
ds
cmc
mov
int3
inc
jmp
push
scas
std
jmp
sbb
pop
pop
add
mov
fsub
loopne
movs
inc
mov
push
ins
outs
jno
add
xchg
fwait
test
mov
xor
push
loopne
mov
sub
ret
sub
mov
enter
dec
xor
and
test
jmp
cmp
ds
sub
pop
aam
cmp
in
ret
rcl
inc
inc
fnstenv
add
ror
das
pop
fnstenv
sar
pop
push
sub
mov
bound
test
outs
push
and
jmp
pop
xor
xchg
outs
mov
sub
mov
ret
adc
lea
in
mov
std
js
ret
std
add
bound
mov
fldcw
and
push
push
fsub
mov
pop
test
repz
and
ror
sub
mov
pop
jg
gs
sbb
inc
cmps
mov
cwde
ds
jge
and
ret
inc
int
xchg
jmp
or
arpl
or
movs
push
or
sbb
cmc
mov
loopne
pop
xchg
push
ror
fisttp
inc
jmp
push
jo
xchg
int3
pop
adc
or
or
(bad)
(bad)
push
cmc
xchg
sbb
dec
in
cdq
jns
inc
(bad)
mov
loope
test
inc
inc
mov
cmp
imul
les
dec
sub
inc
retf
sub
adc
test
dec
xor
dec
jg
inc
pop
movs
push
call
sbb
mov
and
xchg
pextrw
outs
sbb
xchg
jns
cld
pop
(bad)
xor
call
push
and
imul
jmp
icebp
xor
dec
mov
xchg
xchg
xor
add
outs
lds
mov
movs
cmp
imul
and
adc
call
mov
xlat
sbb
fimul
pop
mov
inc
test
or
cmp
inc
xchg
jae
(bad)
das
adc
test
mov
add
movs
iret
inc
mov
adc
cli
pop
adc
add
mov
es
sahf
dec
loope
and
pop
std
push
out
jecxz
inc
sbb
xor
mov
pop
mov
jmp
pop
je
int
jne
inc
add
in
hlt
and
cdq
lods
xchg
fst
mov
sbb
loopne
xchg
push
push
add
les
leave
mov
(bad)
int3
xchg
nop
add
sti
and
pop
add
cwde
jnp
repz
pop
mov
imul
cmp
xor
jecxz
xchg
iret
mov
shl
adc
jnp
fdivr
int3
xchg
xor
out
pop
scas
dec
push
mov
jl
dec
fisubr
das
dec
sbb
inc
push
push
dec
fs
sub
cmp
mov
fbld
int
push
pushf
pop
jg
out
xchg
cmp
mov
(bad)
in
fadd
mov
std
fcomip
scas
int
xchg
mov
test
adc
pop
add
push
scas
call
adc
pushf
sahf
es
clc
mov
push
xchg
pushf
jo
push
fiadd
and
mov
stos
push
xchg
in
mov
add
push
xchg
rol
jg
out
in
fsub
xchg
jnp
jmp
mov
xor
test
xlat
loope
cmp
mov
or
adc
cmc
jb
mov
mov
and
push
mov
inc
repnz
cmp
push
mov
push
xchg
lds
(bad)
scas
aam
and
in
pop
mov
push
nop
sbb
cmp
xchg
stos
adc
xchg
jne
sbb
push
mov
ds
push
sub
les
xor
aas
cmp
jae
xchg
mov
and
test
xchg
sbb
scas
fwait
sub
scas
sub
pop
mov
fimul
dec
or
ja
push
mov
inc
cmps
cld
xor
loopne
in
je
cmp
adc
scas
pop
lds
cmp
(bad)
sub
pop
xor
adc
adc
pusha
les
or
out
lods
outs
mov
js
outs
inc
push
fs
(bad)
aad
call
mov
pop
sbb
popf
inc
push
add
dec
add
(bad)
push
xor
aaa
in
cmps
popa
icebp
data16
cmp
sti
sub
scas
imul
out
pop
mov
sbb
cmps
ds
rcl
retf
addr16
pop
push
in
test
add
and
push
gs
je
(bad)
int
mov
imul
sub
xchg
inc
cmp
loope
inc
mov
and
bound
lock
shl
jo
jle
add
loopne
adc
pop
(bad)
inc
pop
push
mov
sbb
(bad)
cmp
(bad)
and
xchg
push
sub
jae
cwde
ret
pop
add
mov
test
mov
cld
push
jp
jmp
push
or
inc
int3
outs
inc
mov
movs
sub
xchg
rcl
into
pop
xor
add
ret
fisubr
pop
lods
push
in
mov
dec
out
jge
and
mov
(bad)
out
mov
lods
sbb
or
loop
xchg
pushf
scas
fbld
cmp
jne
popf
mov
loopne
dec
out
pop
jne
mov
mov
push
mov
jmp
mov
pop
or
loop
imul
aas
and
mov
call
or
aaa
or
int
fadd
(bad)
loope
add
xchg
xchg
jmp
cdq
les
add
je
outs
ret
and
mov
shr
gs
stc
test
mov
xor
jb
fld
out
pop
loop
lods
push
test
jmp
xchg
(bad)
cmc
push
pop
mov
rcr
pop
outs
in
add
add
pop
pop
movlps
mov
pusha
push
dec
call
(bad)
adc
or
shl
std
out
pop
mov
inc
or
pusha
and
js
mov
cdq
and
jg
sbb
gs
outs
and
xchg
pop
sti
and
cmc
lea
cs
(bad)
in
data16
cmp
adc
xchg
fcmovbe
cmp
push
sub
mov
mov
mov
movs
adc
mov
add
ret
(bad)
das
cmp
inc
cdq
sub
fwait
cmp
xor
inc
jecxz
sbb
imul
data16
call
jnp
cmp
imul
sbb
loopne
clc
or
mov
iret
inc
mul
push
push
jbe
loope
addr16
repz
and
adc
push
jb
ins
cdq
jp
dec
sub
fsubr
and
fisub
scas
add
out
rol
sbb
sub
sar
sub
fmul
cdq
xor
daa
add
daa
adc
or
xor
xor
mov
cmp
sbb
shr
push
repz
pop
jg
and
dec
push
loope
push
aaa
mov
pushf
loopne
sub
push
repnz
lock
xor
lods
loopne
jmp
mov
inc
xlat
push
adc
ins
into
nop
or
(bad)
out
hlt
inc
pop
leave
push
sbb
cmps
pop
out
mov
and
sbb
cdq
cvttps2pi
outs
test
fidiv
ja
int3
xchg
cmp
jno
imul
mov
stos
fist
sbb
or
aas
cwde
push
jb
mov
pop
adc
adc
xchg
push
mov
and
pop
pop
xor
jecxz
(bad)
iret
movs
cmps
call
in
mov
inc
fidivr
xchg
hlt
test
or
pop
or
and
sub
stc
fucomi
adc
cmps
sar
pop
ja
(bad)
icebp
mov
jecxz
mov
xchg
pop
push
mov
cs
push
push
test
push
mov
scas
jmp
frstor
stc
and
les
ja
jg
push
mov
sbb
in
popa
mov
fs
push
outs
xchg
rcl
rcr
add
or
sub
into
ror
jmp
in
mov
and
push
cmp
mov
sbb
imul
jb
inc
adc
or
sub
rol
pop
xor
jp
mov
fsubr
or
or
add
lahf
(bad)
lods
out
daa
js
shr
int3
dec
cmp
test
fcom
mov
mov
jmp
cld
(bad)
sub
fwait
or
lahf
push
push
test
(bad)
push
lods
rcl
cmp
dec
mov
xor
ror
jns
jp
ja
push
or
lahf
mov
cmp
add
add
pusha
mov
lea
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
jo
pusha
add
pop
