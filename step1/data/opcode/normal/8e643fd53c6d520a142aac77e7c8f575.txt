sti
(bad)
(bad)
jmp
add
add
add
rol
add
in
push
mov
push
push
pop
mov
add
and
std
in
call
and
mov
jmp
cmp
mov
push
call
sub
cmps
std
pop
pop
pop
ret
mov
scas
push
mov
and
or
pop
mov
inc
push
push
add
lock
dec
in
test
jne
push
add
sub
call
mov
add
add
add
dec
clc
int
test
jne
jno
(bad)
mov
pop
ret
or
xor
jmp
cdq
cmp
ret
push
add
push
cmp
(bad)
adc
dec
mov
mov
and
jp
ret
push
lahf
pop
test
and
or
inc
aaa
js
into
loop
add
push
bound
scas
jmp
add
and
add
add
inc
add
or
cmp
push
or
sbb
adc
mov
imul
fsub
push
or
inc
int3
or
push
mov
mov
inc
je
fld
and
lods
retf
call
jp
add
jmp
sub
or
jl
fld
sbb
inc
pop
push
sub
test
push
xor
icebp
movs
cmp
mov
add
adc
mov
sbb
push
sub
mov
xor
pop
cmp
fsubr
add
jecxz
xor
outs
addr16
test
lods
fnstsw
and
add
jns
imul
fcmovbe
mov
inc
cwde
inc
or
push
or
adc
dec
push
or
adc
call
test
jne
fisubr
mov
xor
or
push
sbb
adc
(bad)
dec
pusha
pop
into
push
lea
sub
std
std
mov
lds
test
push
mov
lds
mov
mov
and
aas
add
sbb
lea
(bad)
push
mov
call
lods
push
xor
lea
test
push
sub
mov
(bad)
cmp
je
push
push
adc
ins
mov
add
fidiv
xor
xor
sti
mov
push
push
rol
sar
mov
lock
add
mov
push
lock
fimul
lea
or
and
xor
out
xchg
xor
add
add
jle
call
cmp
pop
je
push
or
mov
int3
pop
cmps
dec
lea
push
cdq
xor
out
pop
lahf
push
fwait
test
movs
mov
jb
lea
out
xor
pop
and
push
leave
sbb
stc
xchg
arpl
add
pop
or
nop
or
or
mov
aad
pop
xorps
dec
and
sub
fsubr
in
neg
sbb
and
adc
call
sbb
dec
inc
rol
inc
pusha
jnp
(bad)
jne
inc
adc
cmp
and
(bad)
pop
xlat
rol
in
stos
inc
adc
jecxz
fist
(bad)
mov
jl
test
loope
inc
cld
jle
loop
sbb
push
adc
mov
ss
out
inc
leave
test
rcl
xchg
adc
fptan
jecxz
mov
mov
(bad)
jo
lock
mov
lea
push
xlat
mov
mov
call
jmp
push
or
mov
push
mov
mov
mov
pop
xor
mov
pop
in
sbb
cld
pop
test
in
icebp
in
mov
in
pushf
lock
jo
add
mov
es
ror
in
pusha
call
push
lock
or
adc
pop
movs
push
mov
pop
or
call
mov
sbb
mov
dec
ficomp
adc
std
sahf
pop
mov
or
xor
lods
sbb
call
push
sahf
push
and
push
adc
adc
out
movs
sbb
jl
or
pusha
adc
shl
(bad)
in
cld
wrmsr
push
push
mov
and
clc
rcr
and
pop
cld
push
sbb
mov
neg
adc
je
repnz
into
pop
or
scas
cld
dec
xor
pop
mov
add
cmp
in
pop
fild
or
jg
mov
push
(bad)
clc
push
loope
pop
in
and
repz
add
inc
(bad)
mov
call
adc
scas
repnz
jnp
push
push
mov
pop
xor
push
mov
sub
fnstenv
out
add
aam
js
cs
movs
mov
dec
shl
xchg
hlt
mov
or
adc
hlt
mov
or
ret
push
(bad)
jne
mov
gs
lds
sbb
aam
or
push
fidivr
and
push
push
push
sub
into
mov
loope
push
and
pusha
frstpm(287
sti
rcl
push
sub
xchg
fld
dec
jnp
pop
adc
out
xchg
mov
es
adc
clc
(bad)
mov
daa
push
mov
cdq
or
and
inc
ret
mov
and
mov
push
pop
loope
sbb
sbb
in
add
push
pusha
outs
and
loopne
push
lea
lahf
jmp
cld
js
mov
pop
jns
in
sbb
mov
ja
test
push
and
js
jg
mov
push
pop
jbe
mov
pop
mov
cmp
jne
push
mov
mov
jmp
and
in
pusha
xchg
sar
loopne
(bad)
popa
jns
dec
hlt
xor
sbb
sbb
pop
or
aam
push
push
xor
xchg
aam
std
outs
mov
jl
idiv
add
add
adc
push
inc
xchg
fdivr
mov
push
mov
test
(bad)
xlat
xchg
xchg
lock
ficomp
not
gs
ss
mov
fmul
jge
(bad)
add
jle
(bad)
mov
scas
jmp
add
xor
ds
mov
clc
inc
jmp
mov
push
jbe
lock
adc
(bad)
jne
sub
dec
cmp
or
jl
xchg
mov
pop
scas
ins
push
inc
mov
sub
out
cdq
out
shl
dec
sub
push
leave
(bad)
les
outs
ret
push
xor
dec
or
mov
pop
mov
xchg
aad
stos
mov
inc
fmul
lea
mov
cwde
pushf
mov
(bad)
cmps
ins
cmps
mov
pop
xchg
aam
(bad)
jg
mov
or
push
jp
or
dec
test
cmps
imul
and
addr16
adc
push
aad
or
mov
mov
jne
cmp
dec
stos
pop
or
test
int
and
mov
or
cmp
test
fwait
push
jge
pop
xchg
sbb
mov
mov
jb
push
fld
or
ret
pop
ret
js
ds
in
or
loopne
ficom
push
jo
adc
push
add
ret
mov
jle
inc
stos
jle
pop
mov
inc
or
ins
or
mov
xor
mov
cmp
je
mov
and
pop
push
scas
push
add
inc
test
add
cdq
rcl
mov
add
lock
sbb
jne
aas
repz
xchg
mov
sub
das
pushf
nop
aas
fs
mov
retf
xchg
xor
adc
hlt
and
loop
fistp
dec
dec
inc
add
or
(bad)
mov
arpl
jmp
push
and
jmp
test
sub
sar
pop
mov
xor
rcl
add
jge
xchg
and
mov
ror
pop
or
fdivr
xchg
mov
or
pop
pusha
mov
jp
and
jbe
lea
ds
and
xor
mul
inc
sub
fisttp
call
xor
push
dec
jmp
js
mov
(bad)
xchg
add
pop
sub
dec
cmp
mov
call
(bad)
mov
add
aas
ins
or
nop
rcr
add
pop
mov
mov
test
sbb
jge
add
test
mov
dec
and
xchg
rol
pop
cmp
inc
cmp
sbb
retf
scas
mov
and
push
pop
pop
jmp
sub
mov
cmp
jmp
(bad)
test
fmul
lds
adc
fstp
add
push
cmp
push
dec
ret
push
push
mov
sub
repz
mov
pusha
je
and
inc
call
push
push
mov
or
cmp
jno
clc
cmps
or
mov
imul
(bad)
mov
push
push
pop
loopne
add
frstor
lods
push
in
xchg
jge
cmp
jg
pop
das
jmp
dec
push
inc
pop
mov
scas
mov
inc
fwait
sbb
int3
int3
add
and
push
or
and
pop
add
in
push
add
lea
push
pop
sbb
div
or
push
clc
add
or
pushf
das
js
pop
lock
push
jmp
je
gs
pop
add
mov
and
into
or
push
mov
je
adc
jae
push
xor
mov
mov
sub
je
mov
jmp
repz
lahf
nop
dec
clc
or
pop
mov
std
sub
adc
mov
adc
retf
lea
(bad)
in
cmps
fisttp
push
dec
aam
mov
shr
push
bound
popa
outs
ja
pop
cmp
loopne
mov
inc
cwde
push
mov
(bad)
out
dec
push
pop
das
mov
mov
(bad)
aam
(bad)
test
dec
inc
ins
rcl
add
mov
or
aaa
cs
jbe
push
xchg
mov
data16
jns
cmps
adc
mov
pop
test
cmp
lahf
lods
and
pop
pop
mov
xchg
or
mov
jecxz
xchg
loopne
mov
je
cmp
mov
ja
je
mov
xor
adc
inc
adc
jne
fdivr
outs
loope
mov
shr
push
and
or
arpl
cmp
outs
(bad)
mov
jne
(bad)
leave
jg
mov
push
jmp
mov
je
dec
dec
jne
loopne
ins
or
lods
daa
or
ficomp
shl
or
or
repnz
inc
cmp
loop
outs
fisub
div
mov
test
out
pop
xchg
pop
pop
push
sbb
inc
jg
mov
movs
gs
push
dec
clc
lds
in
lock
fmul
shl
adc
outs
lea
jo
jmp
sahf
(bad)
fcom
jbe
push
je
shr
dec
fsub
inc
(bad)
mov
fsubr
aad
lahf
or
adc
adc
adc
pop
or
loopne
add
scas
fsubrp
ss
mov
fist
add
sbb
ror
pusha
fucomp
stos
add
pop
mov
add
das
retf
push
mov
mov
gs
cmp
jmp
or
push
jmp
dec
aad
inc
adc
mov
mul
jmp
sahf
mov
loop
sahf
jo
add
xor
mov
ror
sbb
call
mov
idiv
and
int3
sbb
cmp
test
shr
rcr
push
push
push
mov
enter
add
sbb
dec
scas
stos
jg
inc
ss
leave
je
lea
repz
popa
dec
clc
cs
mov
push
mov
ror
ret
dec
push
cmc
cli
push
sub
rcl
call
sbb
cs
ret
xor
push
add
rcr
sbb
inc
test
retf
cmp
(bad)
xchg
mov
add
rcl
push
fsub
cmp
adc
test
inc
scas
or
data16
sbb
xchg
sbb
push
loopne
es
xor
cs
pop
jns
out
sbb
in
fdiv
xchg
cwde
inc
in
std
(bad)
clc
sub
mov
js
add
push
and
push
adc
jno
and
jmp
cmc
ins
shr
xor
ret
and
adc
xor
push
out
sub
sub
out
ds
sbb
inc
dec
push
ins
mov
mov
sbb
cmp
(bad)
ror
sbb
jp
push
xchg
add
hlt
je
lahf
or
into
push
or
xchg
jae
jmp
mov
test
je
mov
call
lea
jnp
push
mov
sub
dec
or
int
(bad)
cmp
jne
push
jnp
das
mov
pop
or
fwait
sbb
int3
adc
in
in
ins
sbb
nop
xchg
jne
gs
cmp
ret
pusha
fbstp
(bad)
and
cmp
mov
sub
sbb
cmp
pop
mov
add
in
sbb
mov
push
mov
scas
mov
xchg
iret
push
inc
nop
mov
jecxz
dec
jno
add
push
test
test
pop
test
mov
out
aaa
mov
pop
or
ret
(bad)
pop
xchg
lea
xor
mov
inc
jle
pop
ds
sub
xchg
fs
call
mov
mov
mov
mov
daa
cwde
push
add
add
pop
ins
mov
add
mov
mov
add
adc
or
push
cmp
sub
outs
mov
repz
jb
mov
retf
into
inc
in
pmuludq
xchg
fs
dec
repnz
add
add
imul
loop
push
push
sub
push
cld
sbb
loop
xchg
push
shl
sbb
add
test
add
xchg
nop
dec
inc
mov
pop
add
(bad)
cmp
(bad)
scas
inc
xchg
nop
mov
mov
sbb
ret
add
aam
inc
mov
inc
mov
push
mov
push
sbb
dec
nop
and
sub
rol
outs
push
imul
lock
lea
push
mov
push
mov
jle
xor
ss
jmp
xor
sbb
push
add
int3
push
add
xor
sbb
gs
push
fisttp
push
xor
jmp
outs
pop
pop
mov
inc
ds
mov
or
rcr
cs
outs
test
push
xor
mov
addr16
mov
in
imul
sar
ret
add
retf
cmp
mov
ret
cli
mov
rcr
mov
repz
push
mov
ficom
push
in
das
sub
or
xor
inc
pop
pusha
jo
push
(bad)
rol
jb
sbb
sar
cld
(bad)
adc
pop
mov
imul
rol
call
adc
dec
push
shl
nop
loop
sbb
push
lea
mov
pop
jmp
ds
jae
inc
lea
add
clc
std
movs
lds
dec
loopne
cmp
add
inc
pop
test
cmp
push
and
or
sbb
push
lea
aad
aaa
pop
push
jne
shr
pop
es
jge
or
mov
ja
sub
mov
loop
mov
test
xor
pusha
(bad)
sbb
xor
ror
or
and
clc
pop
push
push
imul
dec
inc
jne
clc
adc
in
in
shl
(bad)
arpl
fbld
stc
(bad)
sbb
sbb
mov
mov
shl
pop
in
cld
mov
stos
fist
mov
lods
sbb
jmp
bound
pusha
ret
push
jmp
cmp
je
push
cdq
pop
mov
sbb
cmp
loope
or
loopne
pop
clc
mov
and
gs
fadd
and
fnstsw
test
and
loop
je
in
and
add
sub
sub
vrcpps
jmp
mov
sub
in
push
fsub
or
retf
pop
rol
sbb
cs
repnz
rol
sub
pop
int3
add
aam
dec
xor
adc
sbb
fcomp
lods
ret
push
add
and
adc
xor
pop
pop
rcl
mov
cmp
jle
inc
sahf
cs
pop
push
mov
push
ja
cmp
or
mov
xor
adc
push
pop
inc
je
push
jnp
retf
inc
mov
sbb
dec
jmp
arpl
stc
(bad)
in
test
std
fimul
mov
inc
ja
test
mov
sub
in
out
repz
inc
cmp
mov
jmp
push
sahf
sbb
cwde
pop
ret
mov
pop
scas
and
mov
sbb
push
and
sub
nop
inc
xchg
adc
pop
cmp
and
inc
jmp
push
pop
cmp
fnstsw
jl
and
sub
mov
shl
in
mov
adc
movs
add
iret
shl
dec
pusha
push
sub
pop
sub
mov
xor
jo
xchg
daa
cmpxchg
add
add
gs
dec
enter
push
and
lods
and
sahf
add
fidivr
push
xor
pop
ret
mov
pushf
add
sub
mov
add
ret
xor
mov
dec
(bad)
neg
es
push
mov
sub
sbb
shl
ss
fcomp
push
xlat
fsub
rol
loopne
add
loop
mov
sub
movs
pop
adc
(bad)
cmc
jmp
iret
dec
cmp
cmp
dec
add
and
add
and
test
xchg
test
push
cmp
xor
loopne
hlt
bound
mov
ins
and
call
push
imul
mov
retf
es
sub
xor
dec
push
nop
test
shr
xor
hlt
push
test
ds
jnp
and
(bad)
mov
lds
cmp
inc
test
enter
mov
adc
mov
and
aad
lea
adc
sub
add
addr16
in
push
or
daa
int
jge
add
lods
xor
lea
cwde
sbb
pop
jns
shl
inc
inc
jg
je
rcr
adc
xchg
test
sub
mov
and
retf
mov
lods
ror
push
js
cmps
mov
cmp
ins
dec
in
and
jae
sub
inc
(bad)
rcr
and
xor
test
jno
mov
and
fadd
sub
ja
add
lds
outs
xor
cmp
cmp
dec
mov
enter
movs
mov
pop
mov
cwde
test
mov
dec
cvtps2pi
push
cmps
loop
pop
sbb
div
(bad)
adc
adc
mov
int3
add
sub
(bad)
lods
pop
bswap
das
mov
jno
sbb
call
sbb
and
mov
xor
arpl
sub
jb
mov
retf
in
movs
mov
test
cmp
add
push
jl
cmps
lea
jns
dec
stc
mov
addr16
mov
push
xor
cmp
xlat
(bad)
xor
adc
in
lock
jmp
cmc
push
cld
rcr
cld
(bad)
repnz
mov
inc
mov
arpl
jne
add
arpl
sbb
out
mov
cwde
dec
shl
lahf
adc
les
mov
mov
xchg
mov
in
inc
xchg
adc
add
or
mov
jmp
cmp
leave
xchg
adc
mov
adc
pushf
mov
pushf
jl
push
je
mov
fs
int3
add
(bad)
pop
pop
pop
(bad)
enter
inc
cs
cmp
adc
or
xchg
xchg
dec
mov
daa
mov
push
push
mov
sbb
leave
jae
sbb
cs
push
sar
push
xor
enter
xor
pop
enter
int
movaps
xchg
cmp
leave
xchg
ins
nop
cld
push
sub
jl
inc
lods
push
inc
nop
xchg
jbe
test
in
cli
neg
aad
mov
mov
mov
jmp
push
sub
shl
sahf
js
ret
cmps
lock
cmp
pop
add
cmp
hlt
out
frstor
inc
je
mov
adc
lea
inc
fadd
in
or
and
push
test
xor
cld
nop
popa
add
ficom
mov
xchg
pop
and
rol
fisub
adc
sbb
xlat
sbb
fidivr
dec
and
inc
lahf
jmp
out
les
jle
test
dec
ins
in
fadd
or
ins
in
inc
fidivr
add
sub
es
push
pop
add
test
mov
stos
adc
jne
mov
pop
shr
mov
mov
or
and
xchg
xchg
pushf
daa
hlt
and
je
cmps
scas
mov
mov
dec
mov
repnz
xor
sub
or
add
add
and
adc
and
and
repnz
(bad)
inc
xor
push
or
mov
test
mov
inc
fadd
push
add
ja
mov
and
mov
cmps
inc
psubq
inc
pop
pop
add
dec
fimul
hlt
mov
mov
cmp
fmul
push
push
pop
pop
in
push
lock
and
mov
sbb
cmp
add
pop
adc
cmps
or
and
cwde
jl
out
mov
sbb
cmp
cmp
or
cmp
push
add
xor
dec
push
sbb
loopne
pop
and
mov
pop
mov
fwait
pop
mov
lods
shl
push
pop
pop
fwait
mov
retf
cmp
xchg
or
mov
and
mov
call
adc
inc
es
inc
add
push
mov
jns
pop
pusha
cmp
aad
sub
bnd
sbb
ret
xchg
jmp
push
mov
iret
rol
and
lock
lods
push
sbb
out
sbb
outs
push
xor
fnstcw
mov
mov
inc
adc
push
adc
inc
jns
(bad)
call
xlat
mov
jecxz
test
cld
or
mov
sub
xor
jge
je
out
je
shl
dec
mov
mov
daa
ins
sub
cmp
je
cmp
je
fld
jl
add
cmp
adc
outs
push
repz
jmp
mov
sar
mov
adc
jae
mov
leave
xchg
xor
ja
mov
js
icebp
pfcmpgt
in
xchg
rol
or
fbld
xchg
or
in
add
mov
mov
test
jbe
shrd
clc
mov
mov
xor
push
sbb
push
loope
mov
int3
loopne
add
push
(bad)
xor
mov
div
mov
bound
ret
mov
jbe
and
push
data16
xchg
idiv
(bad)
(bad)
cmp
jle
mov
and
cmp
jne
shl
mov
movzx
and
dec
add
(bad)
(bad)
fld
pop
push
push
jl
lods
dec
popa
inc
cwde
in
lds
mov
push
mov
jnp
test
push
push
lods
cmp
sub
cmps
push
or
adc
jle
dec
cld
push
or
push
loop
stos
es
inc
mov
sub
inc
dec
outs
pushf
add
xor
inc
mov
cmp
call
fmul
test
in
das
shl
xchg
leave
inc
cmp
jle
cmp
add
sbb
mov
and
sub
hlt
mov
iret
inc
daa
inc
mov
add
xor
mov
fst
lsl
add
sub
and
out
jle
loope
in
or
and
push
lahf
jmp
sti
or
inc
mov
add
es
cmp
or
dec
and
outs
adc
lea
dec
inc
cmp
mov
push
inc
cmp
inc
ret
pop
cmp
repnz
add
mov
sub
push
outs
inc
jae
mov
loopne
mov
and
repz
push
mov
and
add
jb
mov
fisttp
xor
shl
pop
cmp
ja
scas
sbb
cmp
sti
add
mov
fld
add
xor
inc
mov
or
jg
repz
ror
lods
repnz
or
and
rcl
or
mov
mov
push
sahf
push
not
xor
add
add
shr
into
(bad)
lahf
fxch
loopne
jg
fidiv
retf
and
mov
int
xchg
mov
push
or
fnstenv
hlt
add
lock
mov
fdivr
xchg
stos
repz
mov
add
push
mov
cld
add
dec
add
mov
mov
add
add
add
arpl
xor
jl
cmps
push
cld
sbb
and
rol
js
add
xor
mov
inc
jmp
movs
pop
cmp
je
inc
cmp
stos
mov
sar
push
and
jg
js
adc
aaa
std
xchg
enter
adc
xor
inc
xor
stos
stos
adc
adc
out
push
or
fwait
push
and
sbb
jmp
mov
jle
retf
pop
cdq
cs
leave
repnz
or
into
enter
jecxz
push
mov
jl
add
add
mov
ror
dec
sub
push
jne
repnz
pop
or
dec
or
and
lea
mov
add
mov
mov
jg
jl
sub
jae
ins
cld
pop
aas
(bad)
or
push
neg
adc
neg
mov
push
fldz
fcomp
mov
sbb
fcom
out
inc
fchs
frstor
je
daa
test
or
pop
xor
push
inc
sub
dec
add
ret
mov
mov
sub
add
cmp
scas
push
fs
add
pop
sbb
into
ret
pop
rcl
or
adc
mov
neg
pop
cmp
cli
mov
cmp
ja
jmp
sbb
and
xor
cwde
mov
jmp
push
pop
jmp
mov
fisub
xor
fwait
outs
mov
mov
adc
cmc
add
add
retf
jmp
test
je
sahf
sbb
rol
mov
outs
popa
fild
fsubr
sbb
add
add
fcom
rcr
psadbw
sub
jb
xor
add
add
jbe
lea
add
div
add
inc
dec
aam
fdivr
fld
vmovntps
sub
cld
adc
ins
cmps
jl
xor
jne
inc
aaa
int3
int
iret
jno
and
cmp
jns
push
push
test
test
mov
dec
js
mov
mov
mov
or
adc
adc
stos
dec
pop
arpl
repz
data16
push
pop
jge
(bad)
(bad)
fiadd
inc
jne
ins
sti
icebp
bt
adc
mov
sub
sbb
push
or
jg
add
push
movnti
push
sar
lods
add
cmp
inc
in
adc
test
push
icebp
add
je
es
or
mov
aaa
ja
cdq
ret
and
add
imul
rol
clc
mov
dec
icebp
loopne
(bad)
sbb
ret
xchg
inc
imul
jl
cmc
adc
std
outs
adc
push
sbb
and
repnz
loope
cmp
mov
mov
cmps
test
push
ss
iret
repz
dec
push
pop
pusha
outs
ret
cmp
jl
dec
adc
dec
adc
add
add
add
leave
xlat
mov
add
push
mov
sub
ror
or
loop
sete
inc
jne
jg
jecxz
rol
add
ret
and
sar
dec
test
je
adc
sub
test
cmp
(bad)
fdivr
out
stc
mov
jmp
test
je
jmp
mov
dec
je
dec
jns
mov
xchg
mov
cs
jne
test
sbb
dec
or
adc
out
jmp
je
jmp
test
je
mov
mov
jmp
jmp
sbb
loopne
cmp
dec
mov
sub
mov
ja
and
or
ins
fnsave
jmp
imul
sub
rcr
scas
dec
fucomi
adc
mov
inc
cmp
and
pop
daa
mov
inc
jcxz
mov
or
adc
jl
xchg
cmp
and
inc
push
mov
mov
adc
lock
sub
mov
add
shl
pop
and
dec
test
jg
popf
dec
jnp
and
jb
pop
push
or
adc
adc
fsubr
sbb
or
mov
or
mov
js
and
xlat
dec
inc
mov
inc
xor
out
not
mov
sub
iret
ins
add
cmp
add
inc
sbb
sti
jo
push
inc
cmp
ss
(bad)
ret
pop
sub
jne
mov
sub
out
es
pop
xor
mov
cmp
sub
daa
and
xchg
fcomp
lock
mov
mov
les
cmp
jmp
cmp
lods
loop
cmp
mov
leave
or
dec
lea
inc
aas
pop
mov
fnstsw
cs
mov
mov
jmp
int
xchg
popa
test
shl
xor
mov
inc
cmp
ja
pop
sbb
scas
cli
test
xchg
jecxz
mov
dec
xor
mov
push
fst
push
add
dec
push
push
loopne
cld
movs
cmp
add
cwde
jmp
pop
clc
xor
shl
jle
leave
mov
js
add
sbb
pop
mov
icebp
sar
add
mov
jns
push
add
xor
ins
dec
add
push
or
cmps
into
add
in
or
pusha
inc
lea
js
mov
pop
pop
jne
push
or
push
sbb
push
clc
dec
or
aas
mov
push
push
sbb
add
xchg
loope
add
ss
dec
inc
jle
mov
sub
addr16
es
mov
dec
xor
sub
ds
rol
inc
pop
stc
mov
jne
lods
cmp
cmp
rcr
call
mov
add
je
lods
inc
dec
push
add
sbb
add
aam
or
inc
cld
mov
cmp
mov
xchg
mov
adc
clc
push
int
sub
loop
test
adc
mov
retf
mov
push
call
xor
push
sub
fisubr
ins
jne
jns
inc
cmp
and
pop
sbb
xchg
xchg
inc
or
idiv
or
add
in
add
loop
das
cli
enter
gs
addr16
dec
int3
scas
retf
mov
inc
pop
mov
cmp
cs
fs
bound
inc
sbb
neg
push
add
call
cmp
rcr
ss
shr
std
or
cs
call
ins
pop
inc
or
and
lods
pop
movs
mov
nop
sub
add
mov
jge
mov
inc
or
mov
sub
jb
sub
jle
mov
cmp
cld
cmp
mov
jbe
inc
add
pop
je
adc
int
xchg
lods
add
js
add
sub
test
std
mov
(bad)
mov
and
jmp
neg
sbb
inc
push
and
or
clc
or
out
hlt
dec
lock
cmp
addr16
sub
loopne
cmp
out
pop
jo
or
xor
mov
mov
sub
arpl
sbb
or
repz
imul
xor
outs
jne
add
jne
stos
dec
push
mov
lea
mov
cwde
mov
mov
fwait
cmp
and
or
data16
mov
jae
xor
pop
or
sbb
sti
je
or
or
in
dec
and
std
repz
(bad)
movs
sti
pop
call
mov
es
or
xor
adc
xor
test
mov
sbb
retf
add
fwait
cdq
jmp
test
fimul
clc
aad
ins
jne
jle
adc
sar
xchg
add
cmp
jle
dec
and
fsubr
mov
xchg
pop
xor
repz
sbb
pop
ror
and
cmp
int3
sbb
dec
jnp
pop
push
jp
or
inc
clc
mov
shr
and
imul
push
push
ret
push
push
adc
das
in
call
xchg
push
pop
sbb
or
xchg
jmp
jl
push
ret
jle
test
xor
and
ja
pop
pop
add
add
daa
push
adc
cmp
inc
mov
pop
sub
adc
sub
adc
dec
or
enter
add
lock
adc
daa
dec
les
dec
add
jle
dec
call
or
out
mov
xchg
aad
pop
dec
push
cmp
pop
and
jne
dec
adc
popa
ss
dec
outs
xor
ret
inc
adc
dec
mov
mov
scas
adc
push
std
or
bound
out
pop
pop
ins
and
cmp
sub
inc
icebp
mov
test
popf
lea
sbb
js
fadd
ret
aas
fbstp
lds
bound
mov
push
pop
xor
adc
jge
cmp
xchg
dec
sub
cli
pop
jne
add
xor
sar
inc
jl
icebp
mov
jne
in
pop
or
imul
jmp
mov
cmp
jb
sar
ja
out
jnp
jb
enter
inc
jb
and
or
aaa
jmp
and
push
data16
push
push
shr
jg
shl
cmp
jb
mov
and
dec
adc
jmp
sbb
inc
leave
jmp
(bad)
aas
jb
popa
jb
data16
test
inc
dec
test
jg
jmp
mov
sub
sub
jne
cld
adc
inc
daa
jp
fadd
mov
mov
(bad)
(bad)
cmp
mov
jle
lea
ror
inc
cwde
xadd
jle
or
shl
dec
pop
sub
inc
inc
dec
jne
pop
mov
or
jp
add
push
call
inc
push
cmp
pop
jne
push
jne
or
sbb
sbb
jle
hlt
fwait
sbb
jg
inc
mov
add
dec
lea
xor
sub
pop
mov
test
mov
and
jmp
cmp
jb
cmp
into
push
aam
sbb
scas
mov
mov
dec
inc
out
in
(bad)
jl
test
aad
or
mov
cld
mov
push
mov
push
clc
call
or
inc
jmp
cmp
jne
inc
int3
inc
in
push
inc
adc
sub
repz
ror
or
rcr
mov
popa
inc
and
ja
ret
loopne
xor
sbb
xor
push
add
aam
loope
add
sbb
jg
outs
js
or
ret
cdq
add
adc
pop
mov
mov
mov
inc
add
lods
cwde
outs
imul
test
pop
jb
nop
inc
jne
inc
outs
out
jmp
adc
jne
pop
leave
pop
inc
sete
mov
imul
xor
sub
inc
pop
mov
mov
daa
sub
fldz
jne
mov
cmp
xor
outs
ffree
nop
inc
inc
add
leave
mov
mov
cmp
add
shr
fiadd
mov
add
ret
out
mov
fsub
inc
add
sub
cmps
and
shl
add
cmp
not
or
add
mov
jl
add
pop
sar
sub
sti
sbb
jmp
ret
ror
jle
sub
dec
fdivr
jne
lock
fcomp
enter
leave
loopne
nop
mov
sar
cli
jne
sbb
push
push
fistp
bound
dec
push
lea
push
std
jecxz
out
sbb
mov
and
shl
test
and
adc
jge
sub
data16
mov
mov
inc
inc
xor
outs
pop
mov
jge
pusha
cmp
jne
mov
cmp
je
cmp
test
aam
dec
pop
push
add
movs
cdq
push
mov
add
cld
mov
pop
mov
retf
dec
daa
pop
sub
pop
shl
(bad)
xchg
loopne
cwde
mov
push
jmp
or
push
pop
sbb
fs
ficom
repnz
jmp
lods
push
(bad)
(bad)
xor
jmp
retf
or
je
lock
cmp
(bad)
je
dec
jmp
inc
pop
fnstsw
retf
retf
pop
xchg
test
dec
lea
push
inc
test
sbb
cli
stc
fild
not
and
add
test
(bad)
cmp
add
sub
or
shr
retf
mov
(bad)
sub
push
add
push
rol
js
xlat
mov
push
sub
outs
lds
in
jne
and
loopne
add
cmp
je
sub
push
(bad)
jp
mov
jmp
push
jl
or
inc
dec
dec
cmp
mov
popa
clc
ret
mov
mov
ret
clc
and
dec
ds
pop
shr
xor
or
ficom
mov
fnstenv
inc
push
mov
cli
push
loop
shl
add
mov
dec
mov
ror
fcomp
xchg
test
aad
imul
aaa
test
push
add
and
adc
sbb
jmp
xor
movs
jns
add
(bad)
cli
pop
sar
test
jle
cmp
jne
sub
stc
popa
lds
mov
mov
idiv
iret
and
add
mov
fwait
cmps
idiv
jl
jmp
dec
jns
cmp
into
xchg
push
xor
sbb
ss
ins
movs
and
pop
mov
cs
mov
test
je
dec
(bad)
jg
lods
push
je
inc
cmp
jne
mov
inc
sbb
adc
pop
and
loop
sbb
scas
add
mov
lea
cmp
jbe
push
mov
lea
ss
sub
pop
je
mov
jne
fwait
sub
repnz
ja
mov
lock
mov
psubsb
mov
fs
and
ret
xor
sub
inc
pop
adc
adc
ds
add
ins
mov
shl
jne
lods
jmp
and
psubsw
int3
cmp
cmc
and
adc
inc
push
ficom
test
inc
jl
test
jle
jno
js
jle
cld
loope
pop
scas
jge
xor
add
dec
dec
dec
and
mov
bound
add
mov
inc
dec
in
loopne
cmp
or
fwait
and
test
movs
cmp
mov
enter
dec
clc
loope
jge
neg
(bad)
sbb
bound
pushf
fidiv
mov
ja
pop
call
or
fcom
add
fistp
xor
mov
sub
shl
jecxz
mov
lock
loopne
psadbw
dec
call
add
add
sub
jmp
inc
inc
add
sbb
mov
jns
push
sbb
push
mov
and
jg
shr
ss
icebp
mov
scas
add
in
fsubr
cmp
push
mov
loop
cmc
inc
mov
mov
cmc
sbb
jmp
aam
mov
sub
add
dec
xchg
int3
lods
ss
addr16
xchg
add
lods
cdq
(bad)
nop
inc
enter
pop
shl
movq
int
cmp
and
cmp
adc
add
(bad)
stc
jmp
mov
add
push
adc
and
adc
jae
jmp
cmp
jne
or
sub
inc
cmp
aaa
cmp
jb
inc
dec
dec
cmp
je
mov
int3
mov
ja
adc
and
ror
sub
cmp
cmp
jae
leave
mov
not
cmp
arpl
jne
push
pop
cmp
dec
aas
clc
call
and
adc
push
cmp
xor
aam
std
cli
jmp
cmp
xor
rol
es
sub
popa
mov
(bad)
bound
lods
outs
sub
and
xchg
aaa
dec
push
sbb
xchg
addr16
into
jnp
and
mov
ret
aad
add
dec
jne
fbld
add
jne
inc
jmp
jne
std
add
shl
sbb
adc
mov
inc
xor
dec
pop
inc
js
(bad)
jmp
mov
shl
ja
adc
mov
rcl
(bad)
sub
jmp
mov
int3
stos
ins
sub
add
ret
xor
sub
add
jo
call
cmp
jne
ds
mov
mov
adc
pop
cdq
je
lea
push
lea
aam
mov
lock
je
arpl
jmp
ror
inc
ret
push
and
in
add
adc
mov
fcmovb
push
sub
lods
sub
adc
mov
adc
inc
scas
push
stc
mov
or
enter
mov
out
jmp
or
int3
fdivr
hlt
or
ss
fidivr
rcl
popf
fst
or
es
adc
push
sub
push
or
scas
ret
cmp
adc
mov
or
jmp
mov
push
jmp
enter
movs
fistp
push
fild
fmul
sub
xchg
in
pop
cmp
hlt
daa
sub
add
fmul
dec
dec
or
push
adc
cmp
and
cmp
inc
push
xor
inc
sub
cmps
and
ss
sbb
mov
pusha
imul
enter
pushf
xor
or
(bad)
pushf
lods
in
mov
jae
nop
popf
cmp
lea
sahf
movs
sti
jge
push
dec
mov
inc
loope
xor
fwait
push
(bad)
rcl
mov
push
lea
test
or
fstp
pop
push
popa
or
into
inc
and
in
outs
iret
cmp
jge
mov
push
aaa
adc
xor
std
loopne
mov
shl
cmp
add
ds
fsubr
loope
push
and
and
sbb
jge
mov
dec
shl
xchg
jmp
ret
in
mov
sar
adc
jmp
sub
cmc
sbb
fmulp
outs
push
mov
jno
inc
jns
mov
sub
repz
shr
or
ds
inc
inc
jmp
fild
dec
out
lea
push
nop
jmp
mov
jmp
jmp
mov
retf
add
ror
sbb
daa
inc
add
lock
ret
jmp
cmp
je
inc
mov
imul
shr
cmp
pop
mov
push
push
out
sub
dec
shr
jmp
jnp
inc
or
sti
inc
sub
sbb
jle
and
out
jae
repnz
cmps
mov
or
mov
push
mov
lds
inc
and
stc
in
push
in
ror
hlt
cwde
sub
inc
push
mov
inc
xchg
push
sub
push
inc
push
add
push
enter
mov
xlat
sub
fimul
sti
(bad)
xor
push
push
mov
aaa
dec
movs
sbb
push
cmp
mov
inc
das
dec
and
sbb
pusha
push
dec
push
pop
sahf
lock
shl
adc
cmc
call
mov
call
add
dec
cmp
les
sub
jmp
xchg
imul
leave
xor
dec
(bad)
add
cmp
(bad)
aam
add
xchg
aaa
mov
ret
js
pop
lea
iret
ins
adc
pushf
pop
add
or
fdivr
nop
jge
or
mov
jge
repnz
adc
fst
ja
in
jns
and
aaa
push
out
repz
rcl
cmp
(bad)
daa
jmp
(bad)
pop
enter
inc
aad
and
rcr
or
sbb
clc
gs
inc
mov
sbb
xor
dec
push
dec
(bad)
sar
push
mov
mov
and
xor
and
repz
adc
call
clc
adc
lods
rcr
push
repz
call
sbb
nop
push
scas
sbb
push
push
rcl
sbb
and
imul
sub
or
fbstp
mov
fimul
std
push
sbb
and
cmp
cmp
jmp
enter
sbb
push
test
sub
repz
lahf
adc
sbb
inc
add
pushf
adc
xchg
sbb
adc
mov
pop
xlat
and
jae
ds
pop
sub
and
or
push
lea
adc
out
push
adc
xor
aaa
test
xor
in
dec
inc
or
mov
pop
add
dec
in
test
frstor
aad
rol
loope
and
sub
add
shl
adc
sbb
shl
jecxz
xchg
jne
sbb
pop
jle
(bad)
xchg
adc
fldcw
data16
or
or
adc
cmp
pusha
jbe
jmp
pop
push
push
xchg
push
jecxz
pop
or
adc
ins
adc
add
jmp
mov
dec
popa
cdq
push
mov
imul
retf
fsub
loopne
call
imul
je
ret
daa
push
test
jg
loop
xor
stos
push
push
push
mov
cdq
mov
cmp
nop
vmovsd
or
enter
xor
xchg
out
cdq
test
or
(bad)
aaa
jle
pop
lock
stos
stos
stos
push
inc
lock
ret
or
sub
mov
cmp
or
pop
(bad)
sar
test
gs
cmp
and
cwde
inc
mov
dec
test
lods
jg
retf
mov
add
ds
mov
xor
and
pop
push
pop
add
aaa
ja
inc
add
and
adc
call
pop
int3
xchg
or
dec
inc
mov
sub
and
sbb
adc
inc
xor
inc
pop
add
xchg
cs
je
inc
sub
add
test
cmp
je
mov
outs
xor
repnz
retf
les
xchg
fld
cmp
pop
outs
pop
ret
mov
or
loopne
and
loopne
add
cmp
inc
push
jne
pop
ja
cmp
call
jmp
xlat
push
mov
pop
mov
adc
lea
sub
leave
mov
or
xor
cwde
arpl
dec
neg
das
dec
dec
jmp
sub
add
xchg
fisttp
fcomi
shl
in
jl
cld
sub
mov
ror
cmp
loop
rol
cmp
sub
lock
fchs
faddp
fcom
js
add
cmp
es
cdq
push
cmp
js
xchg
dec
add
mov
sahf
inc
push
jno
and
inc
call
mov
cmp
popf
jbe
add
dec
jo
push
add
into
sub
dec
or
mov
in
mov
(bad)
push
movs
and
push
xlat
je
mov
mov
ds
sete
stos
mov
fisub
adc
cmp
jp
adc
retf
aam
movs
xchg
add
jmp
aam
inc
mov
xor
stos
xor
div
dec
pusha
pop
(bad)
mov
jmp
mov
push
push
jecxz
loopne
add
sar
dec
add
push
cwde
cld
dec
call
fwait
push
into
cmp
je
cld
or
lock
pusha
inc
jmp
push
dec
xlat
inc
adc
nop
fs
add
js
loope
cmp
cdq
je
or
dec
pop
aas
or
repz
push
dec
mov
sub
scas
or
mov
push
or
sbb
dec
dec
call
add
sub
push
cmp
xchg
dec
push
add
fild
xchg
jmp
sub
add
cwde
pusha
ret
cdq
repz
mov
push
push
and
xor
add
sti
inc
sbb
into
mov
push
mov
xor
stos
xchg
call
xor
loopne
pop
ret
loop
inc
add
push
push
xchg
push
je
(bad)
sbb
loope
push
ins
add
sub
push
pop
jmp
es
(bad)
push
add
push
mov
ret
pop
mov
in
push
mov
pop
push
push
adc
push
call
xor
stos
push
push
stos
mov
cmp
mov
dec
sbb
cmp
pusha
(bad)
in
xor
mov
adc
pop
test
mov
stos
nop
xor
mov
lea
or
jns
call
loope
cld
mov
add
push
sbb
mov
in
add
jbe
add
(bad)
mov
jbe
mov
(bad)
and
(bad)
scas
test
lods
je
push
pop
(bad)
jge
xor
push
add
neg
jno
jle
in
stos
movs
setge
and
js
sbb
jne
and
and
add
and
gs
nop
sar
xor
cmp
add
hlt
sbb
jl
lahf
aaa
sar
inc
or
xor
xor
(bad)
cli
or
repnz
clc
add
or
or
push
ins
inc
or
pop
inc
sub
push
xor
mov
push
adc
jo
lock
test
jnp
pushf
push
push
inc
mov
test
add
cmp
fild
xor
ret
loopne
xor
cs
push
dec
repnz
pop
xor
out
ror
cs
xor
ins
lock
aam
addr16
jne
adc
push
je
inc
aaa
test
arpl
fisttp
stos
pop
out
push
push
scas
pop
es
add
push
cmp
bound
addr16
into
or
or
adc
imul
popa
and
adc
xor
dec
sbb
leave
data16
call
pop
aam
adc
clc
pop
pop
mov
popf
sbb
cmp
je
frstpm(287
rcr
adc
jo
push
pop
mov
adc
cmp
je
pop
sbb
add
and
jmp
mov
cmp
sbb
push
or
jle
and
int
push
imul
push
stos
iret
pusha
shr
dec
aad
or
rol
inc
fcom
jno
jge
shl
(bad)
aad
call
inc
mov
scas
movs
sti
fst
dec
addr16
inc
arpl
scas
adc
push
sub
shr
pop
pusha
pop
test
add
and
(bad)
jne
js
or
cli
xchg
not
or
or
fiadd
scas
sub
lods
fcom
fwait
lock
push
ja
out
xor
ret
sbb
push
push
push
ins
hlt
mul
xchg
stos
mov
adc
fcomp
dec
lods
or
addr16
loopne
xchg
adc
sbb
xor
or
fisub
add
or
leave
xchg
mov
mov
adc
mov
mov
pop
sti
mov
push
sbb
or
adc
adc
mov
push
jmp
arpl
mov
mov
xor
add
jb
mov
int3
mov
scas
sbb
shr
clc
push
lea
add
ds
inc
inc
fistp
push
push
jge
fsubr
fs
inc
xchg
(bad)
loopne
int
mov
test
rol
iret
jbe
lods
jge
sysret
call
mov
mov
dec
jae
adc
dec
and
ss
test
inc
mov
mov
loop
pop
jo
cld
jp
push
(bad)
pusha
dec
push
sar
ins
or
sub
(bad)
xor
mov
push
jg
cmc
push
mov
xor
ins
call
sbb
dec
sub
cmp
jne
push
jbe
test
out
mov
mov
add
fidiv
lds
fabs
dec
arpl
add
inc
fcom
cmp
jae
push
sub
mov
mov
inc
sbb
ss
add
dec
add
sbb
jo
mov
dec
add
cld
das
mov
pop
sbb
jae
mov
cmp
jne
lea
das
fsub
cmp
pop
mov
sub
add
inc
inc
cmp
adc
mov
cmp
out
inc
cmp
jb
adc
mov
cmp
jl
cmp
repnz
and
int3
xchg
add
nop
jmp
mov
cli
and
and
test
sub
pop
dec
mov
mov
xchg
mov
dec
mul
xchg
add
add
and
lods
sub
jge
xchg
retf
sbb
pop
and
mov
mov
imul
jle
cdq
push
or
cwde
mov
push
dec
add
ffree
outs
push
or
lock
dec
add
push
mov
rol
add
in
pop
mov
je
cmp
je
sahf
adc
in
jmp
dec
xor
test
dec
jmp
sbb
pop
fild
popa
or
pop
in
test
lds
jne
pop
in
fcmovbe
fxch
inc
add
adc
clc
jmp
cmp
jmp
pop
pusha
loope
jmp
call
and
xor
cmp
jmp
push
inc
fisub
pop
xor
(bad)
jmp
mov
pop
mov
pop
mov
inc
xchg
push
dec
jp
mov
push
sbb
loopne
and
jo
fisub
and
cmp
xchg
mov
inc
jnp
mov
cdq
mov
mov
inc
not
inc
mov
xor
and
jne
sub
sub
dec
push
cmp
xchg
push
aam
jl
mov
mov
stc
ror
or
add
pop
mov
mov
mov
cld
fimul
jecxz
imul
jmp
push
test
dec
add
sbb
and
test
test
sti
dec
inc
aam
cld
sbb
repz
push
mov
cmp
adc
push
inc
(bad)
cdq
add
push
push
xchg
icebp
mov
or
jl
cs
push
pusha
inc
retf
pop
cmp
add
jl
pop
add
jno
sub
dec
push
xor
bndldx
add
js
mov
dec
inc
xchg
lock
mov
aas
fbstp
ror
mov
sbb
outs
adc
je
xor
dec
adc
jp
repnz
ret
fs
call
mov
xor
or
gs
jne
(bad)
retf
jo
mov
mov
push
xor
stos
push
jg
add
test
cmp
add
rol
dec
inc
pop
je
lea
push
and
mov
movs
clc
inc
add
mov
inc
push
loope
sub
test
push
int
adc
pop
add
or
or
dec
pop
sbb
and
xor
nop
in
push
neg
add
daa
arpl
jne
cmps
cwde
xor
add
inc
pop
popa
loop
cmp
mov
inc
and
pop
xor
mov
or
xchg
add
mov
push
fisubr
fdivrp
fiadd
inc
pause
xchg
test
add
mov
dec
add
xor
xchg
fst
pushf
mov
jp
lods
mov
dec
rcr
adc
xchg
push
scas
mov
aas
push
inc
jbe
xor
jo
shr
dec
pop
add
je
fsub
push
movs
ja
jae
repz
loop
mov
jp
mov
cs
or
and
lock
and
xchg
repnz
xchg
bound
retf
cmp
shr
repnz
test
shr
add
mov
push
fnsave
or
mov
rol
jl
mov
mov
fs
mov
xor
lock
lock
push
push
cmp
mov
mov
fsubr
lods
push
add
dec
push
mov
mov
les
(bad)
push
push
adc
and
lock
call
jbe
loopne
or
dec
adc
int3
inc
les
fidivr
fiadd
pop
jmp
jp
stos
cmp
pop
pop
add
mov
adc
std
pop
jne
(bad)
adc
mov
and
or
cwde
in
call
sub
cmp
cmp
and
or
pop
js
and
jg
xchg
loop
push
xchg
sbb
pop
pop
inc
or
jmp
out
fldcw
ret
inc
jge
jecxz
dec
pop
mov
inc
or
arpl
imul
add
fcmovbe
sub
add
stos
sbb
xor
adc
mov
pop
push
pop
sub
push
ror
push
push
xor
test
lock
iret
or
or
push
mov
sar
jmp
adc
pusha
iret
add
push
or
cli
hlt
cmp
pop
xchg
stc
inc
mov
mov
dec
inc
sbb
clc
and
xchg
push
cmps
and
xchg
push
bnd
or
es
push
retf
add
add
or
push
repnz
inc
mov
dec
cmp
push
jle
clc
or
hlt
jg
sbb
jne
cmp
sub
inc
dec
dec
jmp
adc
jg
pusha
or
add
push
fwait
push
in
fwait
dec
dec
sub
cmovbe
lods
and
or
idiv
outs
or
push
mov
mov
cmp
jne
lea
mov
jmp
adc
jmp
or
inc
jmp
xor
or
pop
xlat
adc
ds
lfs
dec
inc
fimul
add
jmp
xchg
xor
and
jp
daa
push
mov
fcmove
iret
mov
jmp
rol
or
add
lea
fwait
cs
jmp
mov
ror
add
sti
cmp
ja
mov
or
test
adc
mov
push
dec
(bad)
push
add
adc
enter
sbb
pop
or
sbb
in
or
xchg
pop
pop
pop
pop
jmp
sub
push
sub
adc
ss
add
pop
leave
dec
dec
add
popaw
inc
mov
lea
push
dec
bound
cli
movs
clc
or
test
les
rcr
push
jmp
dec
cmp
jbe
mov
adc
(bad)
das
outs
idiv
or
cs
sbb
js
cmp
cmp
push
push
xchg
xchg
mov
not
rol
movs
mov
mov
outs
pop
add
fld
dec
shr
out
fstp
jbe
popa
clc
test
fld
call
enter
dec
mov
fld
jbe
inc
cmp
aam
movs
add
sub
mov
cdq
mov
in
idiv
push
movzx
cmp
xlat
out
mov
fs
push
add
cmp
sub
shl
dec
cli
add
rol
xlat
add
cdq
pop
idiv
jnp
sbb
mov
pop
push
mov
push
mov
add
out
sbb
add
or
cmp
lock
sbb
ja
aaa
cwde
add
mov
xchg
call
(bad)
and
lods
xchg
cmp
inc
fs
out
int
es
push
sti
cld
std
push
ret
rcl
xchg
sbb
fwait
adc
rcr
mov
out
retf
mov
hlt
add
adc
repz
xor
dec
std
dec
cld
xor
or
add
mov
jo
mov
sbb
fldz
fst
clc
mov
inc
mov
das
jne
push
or
xchg
test
jne
(bad)
mov
out
aas
neg
sbb
inc
jmp
xor
add
adc
lahf
std
sub
add
jp
cmp
jbe
fld
imul
push
les
jo
clc
movd
pop
sbb
inc
adc
imul
add
xor
cdq
or
fadd
sub
sbb
xor
faddp
and
sar
adc
push
loope
shl
ror
pop
cmc
mov
shl
or
add
sbb
push
sbb
add
mov
lock
cmp
(bad)
mov
xor
add
add
add
fcom
pop
cmp
fsubrp
mov
jmp
ins
(bad)
mov
or
xor
fwait
sahf
mov
xchg
xor
add
dec
test
jecxz
sbb
mov
add
inc
xor
call
in
mov
ror
mov
js
pop
fdivr
(bad)
loop
in
pop
push
fistp
push
fistp
pusha
into
loope
rcr
mov
dec
fisttp
retf
and
inc
pop
adc
push
ret
fadd
aas
das
sbb
inc
pop
xchg
inc
mov
call
push
cli
mov
xchg
shl
jmp
jle
cmps
sbb
add
cmp
pop
fs
add
jmp
les
dec
or
retf
add
or
dec
inc
ficomp
rcl
dec
jmp
iret
mov
ins
jmp
adc
cmp
enter
push
jmp
mov
pop
repnz
jmp
pushf
jmp
movs
jmp
enter
lods
jmp
mov
sub
repnz
jmp
int3
jmp
aam
pop
fmul
in
or
jo
or
add
(bad)
sar
shr
ins
sahf
out
clts
jp
hlt
iret
repz
jmp
jl
xchg
mov
lods
mov
(bad)
sar
and
fld
xor
(bad)
push
xor
lahf
pop
outs
loopne
clc
lock
and
add
add
imul
push
enter
std
xchg
sbb
inc
stos
in
clc
stos
and
push
jne
or
std
pop
jbe
dec
shl
xor
push
inc
push
test
sbb
push
fcomp
adc
mov
jle
lods
or
inc
add
movs
sbb
(bad)
ret
test
in
mov
mov
enter
gs
cdq
idiv
mov
sbb
into
ret
push
mov
or
mov
imul
cmp
jl
sub
lahf
and
lock
or
rcr
scas
daa
test
fiadd
sbb
rol
popf
push
leave
mov
pop
add
rcl
sbb
hlt
adc
cmp
pop
sub
and
adc
adc
cmps
(bad)
jae
loope
inc
fild
mov
or
call
push
rcl
or
and
pop
inc
and
ret
cld
pop
push
mov
jbe
sub
into
mov
add
and
or
sbb
(bad)
pop
sbb
adc
xor
dec
ja
cmp
hlt
scas
in
in
ficomp
and
test
inc
call
adc
mov
dec
test
jns
and
movs
test
cld
lods
mov
mov
loope
and
mov
mov
movs
mov
mov
bound
xchg
out
push
movs
sbb
inc
jmp
pop
push
mov
test
int
mov
mov
loopne
les
adc
stos
stos
stos
push
jmp
pop
mov
or
and
mov
mov
ja
cmp
jge
mov
and
popa
je
jbe
cmp
divps
je
or
in
add
test
retf
je
dec
(bad)
add
jne
xor
ret
ja
jo
pop
mov
push
sub
cmp
xor
dec
(bad)
sti
(bad)
mov
mov
mov
jmp
lea
(bad)
fisttp
ret
mov
or
into
dec
sti
jbe
cmp
scas
add
mov
or
jge
add
mov
rcl
into
mov
mov
pushf
dec
mov
ror
adc
sbb
or
adc
mov
sub
leave
mov
std
adc
adc
jo
jb
pop
rcl
sub
or
push
jp
cmps
push
clc
lock
call
mov
pop
jle
and
vldmxcsr
push
idiv
xchg
push
daa
sbb
in
aas
add
push
and
add
and
bound
push
cwde
aaa
add
sbb
or
imul
pop
mov
xor
pop
dec
pop
add
pop
xor
cmp
pop
push
add
xor
hlt
rol
sub
in
cld
aad
or
clc
xor
push
hlt
push
push
or
push
or
push
enter
pop
pusha
lock
jne
outs
mov
push
loope
mov
fnsave
add
xor
jmp
and
sub
shl
das
test
ds
push
jne
mov
jmp
(bad)
mov
add
addr16
ss
stos
add
fs
pop
xlat
dec
retf
out
dec
ror
inc
mov
mov
or
mov
mov
ret
and
les
call
jle
jge
jg
xor
ficom
cmp
pop
rcr
je
inc
mov
es
and
in
mov
pop
jmp
aam
dec
jns
int3
inc
adc
retf
pop
ins
sbb
pop
pop
add
or
sahf
xchg
sbb
add
jl
sbb
retf
pusha
xchg
and
push
cld
cmp
push
jb
dec
adc
std
daa
iret
(bad)
nop
clc
clc
and
aaa
mov
cdq
or
mov
iret
fcom
mov
std
xor
mov
add
mov
pop
in
leave
xor
test
xchg
sti
mov
fstp
inc
mov
scas
(bad)
jno
inc
push
sub
jmp
leave
add
xchg
iret
sti
cmp
in
mov
push
lea
add
pop
cmps
nop
and
pop
xor
add
ficom
mul
pop
pop
rol
cmp
fwait
mov
push
ror
lock
adc
leave
rol
ror
leave
mov
cld
lea
jl
add
das
inc
js
sbb
(bad)
adc
or
inc
loopne
(bad)
(bad)
adc
mov
mov
jae
mov
popa
mov
rcr
rol
movs
data16
dec
dec
inc
dec
imul
inc
xlat
sub
add
fsub
sub
fdiv
cmp
test
pop
js
xchg
mov
mov
ds
push
inc
jmp
push
pushf
lea
push
add
in
push
xor
mov
gs
ins
add
push
adc
mov
aad
repz
inc
pop
stos
jle
pop
pop
ret
push
mov
jne
mov
or
aam
xchg
cli
cld
mov
retf
aaa
lea
add
jmp
jo
sub
pop
outs
or
and
sbb
daa
or
adc
imul
je
mov
xchg
inc
ret
and
movs
pop
test
or
sub
xchg
sbb
mov
out
ds
cld
sti
outs
loop
fdivr
add
cld
push
adc
sti
pop
call
push
mov
push
jmp
icebp
cmp
ins
mov
mov
xchg
js
sub
shl
dec
std
popa
ins
lock
adc
jl
xchg
mov
mov
sub
nop
xlat
(bad)
cmp
mov
mov
retf
jp
and
mov
mov
mov
push
xor
ret
cld
mov
and
pushf
cld
je
cmp
sub
aam
sahf
sub
mov
test
es
(bad)
push
mov
or
retf
mov
nop
jbe
mov
test
es
pushf
loop
je
cli
(bad)
fild
jmp
push
jmp
push
jmp
sub
add
sub
ja
sbb
pop
out
ins
cmp
and
outs
push
ins
test
adc
add
cmps
jmp
jbe
test
shl
jbe
jecxz
pop
sbb
fcom
daa
xor
mov
pusha
sbb
cld
xchg
jo
ror
clc
scas
jo
mov
std
hlt
fiadd
mov
mov
cmp
repz
mov
repnz
scas
rcl
mov
out
cmp
and
mov
pop
lods
imul
cmp
add
dec
cwde
mov
les
sti
pop
ret
or
xchg
xor
jge
mov
sub
pop
adc
mov
retf
cs
out
cld
add
mov
std
in
lock
dec
outs
or
stos
push
push
inc
sub
dec
or
add
push
rol
cmp
inc
xchg
mov
and
ret
cmps
xor
push
dec
and
dec
xor
pop
mov
and
fidiv
fisttp
mov
fldenv
lds
shl
sti
jecxz
jo
mov
jp
in
test
push
cmpxchg
bound
or
les
pop
push
push
push
iret
sahf
bound
or
dec
(bad)
js
pop
mov
dec
and
jmp
lock
in
cmp
jmp
mov
or
inc
cld
add
scas
dec
pop
fstp
or
and
lods
out
clts
mov
xchg
adc
jno
push
add
stos
jp
mov
inc
add
data16
mov
inc
adc
out
sahf
neg
push
lock
or
scas
jns
hlt
add
add
pop
fs
imul
lock
and
mov
fwait
lds
out
cmp
and
push
out
dec
push
adc
cmps
jns
cmps
or
repnz
or
dec
jp
test
ret
frstor
add
mov
and
mov
and
inc
mov
loopne
adc
sub
add
xor
pop
or
sbb
rol
fstp
mov
cmp
jecxz
sbb
lea
call
scas
test
and
dec
lods
cmp
stos
adc
mov
pop
inc
xor
sbb
ja
xor
int3
and
imul
movs
sub
xor
dec
(bad)
and
xchg
xor
int3
push
sub
dec
jge
mov
mov
(bad)
mov
lea
mov
daa
mov
dec
mov
push
adc
cmp
and
stos
out
pop
imul
test
or
xchg
sub
test
add
xor
int3
or
mov
cmp
lds
pop
xor
pushf
mov
in
pop
sbb
add
add
adc
clc
xor
mov
enter
or
leave
or
sub
and
test
pop
cmp
mov
sub
and
or
jae
outs
sbb
mov
gs
adc
and
or
fisubr
dec
scas
cld
test
push
mov
js
push
sub
mov
xchg
add
or
jmp
std
cwde
xor
mov
or
fsubr
push
push
adc
mov
je
mov
xchg
(bad)
xor
add
push
ja
nop
shr
sbb
jmp
jne
cmp
mov
retf
aam
push
aas
push
dec
mov
lea
call
add
jo
adc
dec
mov
loope
and
and
pop
fwait
pop
popa
adc
inc
(bad)
cmp
xchg
dec
sahf
(bad)
aas
push
xchg
in
and
fcom
inc
push
xchg
sub
mov
inc
aam
inc
add
das
inc
cmp
je
je
xchg
adc
rol
jb
js
mov
test
pop
sti
cmps
pop
add
or
push
dec
clc
xchg
mov
sti
sbb
add
jne
mov
adc
call
int3
lock
cmps
movs
jne
es
push
xchg
sbb
sbb
and
pop
push
js
mov
mov
push
test
or
sbb
mov
sbb
lock
out
cmp
sbb
inc
xor
add
call
and
push
jp
into
push
mov
pop
mov
(bad)
cmp
push
jmp
(bad)
call
and
pop
mov
in
fisttp
jns
fistp
push
mov
inc
adc
fmulp
cmps
clc
cmp
xchg
pop
das
xor
or
dec
iret
jp
lahf
fdivr
(bad)
xor
jl
ror
dec
sbb
cdq
(bad)
push
scas
pusha
pusha
in
or
pop
je
sti
push
push
sbb
adc
xor
test
sbb
mov
lock
xor
(bad)
inc
mov
pop
cmp
aad
cmp
imul
rol
inc
clc
ficom
adc
add
lds
or
int3
jge
movs
shr
sahf
xchg
mov
jp
sar
stos
jbe
cdq
out
adc
mov
jae
push
sub
push
sbb
pop
jp
inc
ja
pop
push
loopne
inc
adc
retf
xchg
lock
jbe
sbb
add
add
or
outs
(bad)
repz
mov
add
mov
push
pop
push
sub
aas
aas
sti
cmp
jno
and
aad
pop
cmp
add
sbb
pop
sahf
shr
xchg
jmp
enter
mov
jle
or
add
and
sbb
or
aam
(bad)
cmp
and
data16
aad
mov
xchg
lods
ret
sbb
pop
popf
pop
lock
cs
mov
sub
add
mov
cmc
in
lock
mov
ins
xchg
fst
or
or
add
xor
inc
mov
cmp
jae
les
push
or
cmp
rcr
adc
adc
retf
and
dec
popa
enter
inc
and
je
loop
lods
loopne
js
cs
mov
sub
xor
daa
sbb
(bad)
cmp
dec
or
js
jmp
and
movsx
sub
(bad)
xchg
add
movs
in
lea
jl
aad
pusha
push
sbb
fist
sbb
test
je
dec
push
in
mov
lods
retf
inc
lods
popf
cwde
cmp
les
xchg
push
or
mov
je
pop
push
in
lods
jo
pop
mov
xor
sbb
dec
push
mov
daa
mov
mov
cmp
aaa
sqrtps
inc
fld
push
sub
mov
mov
dec
movs
lea
or
or
cmps
push
mov
cmc
sub
sbb
or
or
xchg
cmp
or
mov
ja
and
xlat
into
and
pop
jmp
xchg
push
repnz
jecxz
fidivr
iret
or
jmp
cdq
add
in
loopne
cdq
or
stos
mov
or
sbb
add
cmp
push
cwde
adc
mov
dec
cmp
sub
xlat
cmp
pop
pop
xor
and
sti
adc
ret
je
cmp
xor
fs
ss
jne
jb
push
inc
mov
cli
push
les
or
and
ins
imul
push
lock
xchg
shl
call
mov
jne
mov
repnz
popa
pop
rcl
push
cmc
sbb
add
addr16
add
mov
push
ins
dec
pop
xchg
icebp
ss
pushf
test
xchg
in
sbb
and
xor
cmc
jle
lock
and
sub
pop
and
push
sbb
and
test
dec
mov
push
mov
lea
arpl
xor
sub
inc
ins
push
dec
outs
shl
or
ficom
loopne
xor
mov
add
test
nop
add
pop
push
add
je
sahf
fimul
out
jbe
or
fmul
mov
inc
ficomp
xor
or
das
test
enter
xchg
push
fs
add
add
xchg
sbb
mov
add
push
xchg
dec
xor
add
bound
pop
js
jp
push
sub
cli
(bad)
mov
jbe
inc
gs
retf
mov
movs
sub
(bad)
or
add
pop
pop
and
icebp
int
or
loope
ret
add
test
cmps
js
sub
pop
pop
pusha
je
ficom
push
jno
jle
xchg
add
cmp
mov
push
xchg
and
cmp
fldcw
int3
inc
add
pusha
mov
cmp
mov
mov
dec
inc
jo
push
jge
mov
ficom
or
daa
push
sub
sbb
inc
bound
cmp
adc
(bad)
cld
inc
or
dec
inc
and
dec
jp
mov
add
push
popf
add
add
jbe
xor
pop
push
fmul
(bad)
sbb
mov
fistp
cmp
inc
fisub
sbb
pop
dec
mov
ss
jge
mul
cmp
mov
inc
aad
jno
js
(bad)
xchg
lds
cmp
ret
jp
jnp
or
jecxz
stc
jge
jle
jg
xor
or
fidiv
pop
inc
or
pop
arpl
add
test
and
inc
push
dec
outs
inc
or
sub
and
pushf
add
inc
xchg
adc
inc
outs
in
iret
fwait
push
xor
add
ds
stc
jns
xor
push
push
cmp
mov
cmp
je
cmp
cmp
push
jle
cmp
push
jl
fadd
jmp
adc
jmp
fs
cmp
add
sub
adc
movs
hlt
push
popf
jl
pop
and
xchg
dec
lock
or
or
aam
and
aas
jne
ficomp
xor
xor
leave
add
adc
shr
and
jmp
inc
sbb
cmp
lock
add
(bad)
out
clc
mov
inc
rol
push
jno
outs
cwde
and
loopne
mov
xchg
sbb
or
xor
or
dec
jns
jmp
(bad)
push
add
mov
dec
pop
mov
sahf
sub
loop
push
jle
or
jmp
jecxz
call
jne
ret
test
xor
cmp
or
addr16
js
je
cmp
and
pop
pop
pop
mov
adc
push
xchg
adc
cmps
idiv
jne
adc
mov
test
rcr
mov
mov
cdq
xor
sbb
ja
js
imul
cmp
xor
dec
add
inc
xor
adc
and
sbb
fwait
or
push
or
aas
pop
clc
push
cmp
ja
cmp
pop
inc
dec
add
sar
loopne
popa
test
sahf
xor
push
or
mov
clc
shl
push
or
jae
lock
mov
sti
das
add
sbb
inc
jecxz
fidivr
fistp
pop
enter
fist
sub
push
pop
cmp
icebp
inc
cmp
jg
(bad)
cmc
or
pop
xchg
and
add
adc
push
sbb
cmp
ret
cmp
jb
push
xchg
sub
adc
xor
fbstp
jae
jmp
inc
cmp
jae
mov
ret
mov
mov
inc
call
pop
adc
and
jnp
mov
ds
dec
dec
xlat
rol
inc
pop
pop
mov
std
jp
ja
xchg
mov
adc
pop
lock
(bad)
jl
dec
rcr
and
inc
cmp
jne
add
in
xor
cmp
(bad)
ss
mov
ret
ret
pop
add
aam
inc
pop
add
and
jns
mov
and
inc
xor
mov
xor
sbb
ret
shr
inc
dec
and
mov
add
or
ds
inc
lods
and
aas
jg
cli
sbb
leave
xchg
loope
cmc
xor
add
data16
pop
push
or
adc
pop
pushf
add
fimul
jge
lahf
jo
ja
add
fwait
cmp
inc
arpl
ja
pop
jecxz
scas
push
btr
lds
mov
xor
push
es
(bad)
push
mov
mov
sub
add
jle
dec
or
loop
sar
jmp
inc
or
add
pushf
dec
and
(bad)
(bad)
sbb
je
vcmpngt_uqps
mov
dec
jmp
jmp
retf
dec
sub
dec
movs
adc
int3
cmp
adc
loopne
dec
jnp
or
rcpps
enter
popa
cmps
sbb
inc
mov
test
mov
sahf
call
test
jnp
test
stos
push
add
sub
push
inc
jmp
rol
loop
cmps
jno
mov
movs
mov
lods
xor
aad
push
rcl
test
xor
fmul
retf
push
fiadd
xchg
outs
xchg
sub
mov
pop
mov
mov
mov
rol
add
in
add
fild
mov
jl
mov
fneni(8087
mov
mov
out
mov
mov
jno
xor
icebp
test
and
or
jne
jl
div
add
push
cdq
imul
add
xchg
add
inc
jmp
test
pop
les
clc
imul
cdq
loop
aas
pop
adc
mov
in
cmp
push
push
loope
mov
leave
in
xchg
repnz
push
mov
mov
and
cwde
dec
ja
cmc
fcomp
(bad)
pop
push
pop
or
call
fwait
mov
dec
jae
push
arpl
jbe
pop
outs
cmp
test
mov
jbe
das
push
cmp
push
push
adc
outs
push
jle
mov
push
jg
mov
add
mov
mov
pop
addr16
xor
push
test
jmp
pop
pop
add
movs
cmovs
fnsave
cmp
mov
add
(bad)
imul
add
ret
pop
arpl
pop
pop
fcom
xchg
sbb
sub
cmp
or
xchg
jl
ret
sbb
inc
cdq
aad
pop
and
xchg
out
mov
fstp
fild
push
mov
or
(bad)
stos
retf
mov
nop
dec
fadd
cli
inc
pop
or
pop
pop
ja
shl
xchg
push
mov
addr16
add
cmp
sbb
sub
xchg
push
sub
cmp
xchg
cs
stos
arpl
jae
add
movs
sub
lea
cmp
std
and
sub
dec
lock
mov
pop
int3
dec
fwait
imul
(bad)
dec
sub
leave
adc
jmp
cmp
mov
add
adc
mov
je
mov
adc
inc
nop
pop
adc
pop
xchg
mov
dec
and
sub
mov
xchg
pop
and
dec
jl
mov
daa
test
je
mov
mov
imul
or
inc
adc
imul
cwde
js
sbb
repnz
add
xchg
adc
push
mov
adc
repnz
leave
rol
(bad)
rcl
adc
lahf
xchg
popa
les
mov
mov
jne
test
sub
ret
mov
cld
inc
jmp
mov
lea
mov
add
mov
mov
inc
inc
xchg
ja
pop
add
dec
xor
cmp
push
stos
mov
jge
cmp
pop
aad
call
stos
jns
jge
cs
or
mov
icebp
shl
pop
stos
mov
jmp
movs
pop
jo
jmp
add
mov
pop
mov
sub
data16
jae
sub
pop
xor
js
les
fimul
adc
imul
and
pop
mov
shl
or
loope
push
scas
call
inc
mov
shl
jbe
xchg
stos
repnz
sub
push
or
test
sbb
sbb
in
rcr
add
daa
jno
or
sbb
sub
packssdw
mov
int3
jbe
pop
test
jmp
das
test
ret
fdiv
xor
jo
fstp
sub
inc
pop
fprem
inc
rol
inc
ja
sbb
mov
imul
adc
ret
mov
and
pusha
retf
push
ins
pop
pop
xor
das
fs
lods
dec
test
jmp
sub
pusha
inc
stos
add
or
pop
aad
loop
or
shl
mov
ficom
push
sub
movs
add
mov
dec
mov
and
(bad)
sbb
push
mov
outs
xor
pop
xchg
rcr
fs
or
inc
cmp
mov
and
push
pop
jb
jmp
(bad)
and
mov
pop
mov
ret
arpl
add
push
mov
inc
dec
ror
mov
adc
push
bound
mov
(bad)
adc
clc
fadd
int
test
or
call
iret
nop
mov
ret
jbe
daa
sbb
xor
lock
sbb
and
mov
xchg
adc
mov
add
fist
movs
fisttp
mov
repz
jmp
and
push
dec
push
inc
dec
or
add
(bad)
cdq
jle
push
mov
xor
lahf
adc
xor
pop
mov
ret
mov
mov
push
(bad)
xor
and
mov
mov
imul
clc
pop
ins
call
xor
stos
not
dec
movs
repnz
cmc
hlt
repz
and
icebp
lock
mov
rol
or
call
add
(bad)
and
push
xor
dec
jne
(bad)
js
pusha
ja
push
pop
bound
mov
les
push
pop
inc
popa
fsub
inc
aad
xor
pusha
sar
repnz
push
int3
add
or
rcr
fcom
mov
xchg
mov
and
pop
push
jns
fnsave
ds
loopne
sbb
into
adc
cmp
jae
inc
xor
adc
fdiv
test
lock
rol
mov
cs
fcom
jmp
test
sti
and
inc
data16
mov
outs
and
test
daa
enter
sahf
iret
or
mov
and
rol
sub
stos
sub
dec
(bad)
push
mov
push
mov
adc
jge
and
or
xor
movs
mov
fmul
mov
lahf
inc
or
cs
stc
pushf
add
mov
rol
lock
mov
pop
mov
adc
xor
not
dec
xor
lods
inc
xchg
mov
or
mov
push
and
mov
sub
mov
stc
inc
mov
shl
dec
xchg
push
mov
pop
(bad)
mov
(bad)
aad
sbb
xchg
cmc
and
pop
add
or
sar
pop
sub
outs
mov
add
inc
ror
sbb
pop
scas
in
mov
inc
sub
clc
push
sbb
xlat
ja
jb
cmp
ja
cmp
and
push
pop
xor
dec
cmovp
mov
add
shl
or
rol
xor
loop
add
pop
test
xchg
int3
mov
enter
outs
adc
test
or
movs
pop
arpl
les
cmp
dec
adc
or
mov
sub
aaa
cmc
adc
pop
fmul
push
jl
js
cmp
dec
push
mov
push
dec
dec
inc
(bad)
or
sub
loopne
jg
xor
fcomi
mov
sub
clc
sub
pop
or
add
jge
jle
mov
cmps
pusha
ja
dec
adc
or
adc
xor
xor
push
mov
sbb
iret
cli
fidiv
rol
fdivrp
retf
pop
adc
mov
das
adc
push
ja
and
loopne
in
loop
sub
sub
add
mov
(bad)
sar
mov
mov
sar
sub
iret
sar
add
stc
cmp
sar
sub
mov
push
dec
mov
push
scas
sbb
cmp
adc
and
add
fidiv
fisub
fbstp
idiv
(bad)
(bad)
fiadd
sbb
js
push
rol
add
mov
xor
and
add
aas
sar
mov
adc
(bad)
or
pop
(bad)
out
add
and
xor
jle
retf
mov
push
(bad)
and
iret
lsl
mov
scas
loope
(bad)
mov
out
into
mov
pop
(bad)
mov
xor
push
xor
add
loopne
scas
in
ficomp
mov
xor
push
cld
and
ds
fcmove
fisubr
aaa
sub
xchg
push
cli
in
cld
xor
dec
gs
cmps
pop
adc
test
pop
sbb
in
mov
loopne
add
add
xchg
std
out
in
and
cwde
dec
(bad)
pop
leave
sub
test
mov
iret
sbb
sub
mov
mov
cld
cmp
and
nop
imul
xor
dec
xor
jno
std
mov
mov
add
add
jns
fdivr
mov
cmp
push
add
mov
push
and
mov
ror
push
mov
in
sub
pop
aaa
mov
add
bound
(bad)
in
outs
xor
cs
sahf
jo
inc
mov
ror
pop
scas
mov
cld
mov
adc
pop
pop
es
(bad)
push
mov
mul
bnd
cmps
stc
imul
stos
(bad)
mov
or
xlat
add
pop
adc
(bad)
mov
rcl
sub
inc
add
mov
mov
enter
inc
repnz
adc
and
out
loope
cmp
nop
aas
(bad)
pop
aaa
ret
int
fsub
iret
xchg
cld
rol
in
adc
inc
icebp
adc
scas
xor
jmp
and
clc
mov
lods
add
add
add
xor
mov
leave
fistp
fld
outs
addr16
lds
jmp
clc
mov
lock
ss
cmp
dec
cmp
stos
cld
and
add
rcl
sbb
ins
rol
clc
xor
int3
fidivr
add
mov
clc
push
sub
ds
pop
cmp
ret
inc
and
ins
out
mov
fcomp
ret
mov
in
sub
out
popf
(bad)
je
pop
aam
ficomp
imul
movs
test
inc
(bad)
stc
repz
jbe
ds
stc
hlt
data16
jbe
call
fsubr
in
sar
jo
mov
add
fwait
sub
adc
cli
daa
mov
xor
aas
(bad)
test
out
aam
(bad)
cld
imul
push
sbb
add
es
xchg
shl
in
fcmovnbe
fstp
mov
stc
lock
(bad)
data16
fwait
in
fadd
in
scas
xlat
imul
add
jl
pop
rol
(bad)
xor
xlat
call
outs
out
push
lods
(bad)
int
fcomip
ror
pusha
fsubr
or
dec
sti
inc
and
hlt
mov
mov
sub
jnp
aas
add
mov
or
sub
stc
jnp
popa
in
cmps
and
mov
loopne
mov
jg
out
mov
pop
gs
or
jae
xchg
int3
or
fdivr
jo
pop
enter
rcr
test
inc
outs
shl
clc
repnz
(bad)
loopne
sub
int3
adc
add
enter
dec
(bad)
in
test
cmp
shl
jg
call
mov
xchg
rol
fcom
lds
mov
and
pop
or
adc
ror
mov
nop
fcmovne
stos
mov
jge
or
dec
add
pop
dec
std
cmp
jae
inc
shr
add
shr
and
call
scas
xor
sub
(bad)
jae
cmp
jl
ffreep
jae
push
idiv
or
lahf
sub
mov
dec
mov
inc
outs
add
sar
mov
mov
push
adc
cmp
sbb
or
and
dec
adc
or
arpl
jmp
inc
jle
sbb
mov
enter
fcom
jb
shr
adc
jne
push
aaa
sbb
dec
cmp
jl
ins
lods
or
pop
ret
sbb
push
pusha
clc
mov
fmul
or
xor
cmp
ficom
jo
mov
xor
pop
cmc
aas
enter
aas
pop
and
lea
jo
add
sbb
and
loop
jnp
aas
or
dec
sbb
push
popa
(bad)
(bad)
jle
jae
sahf
mov
or
out
jg
imul
imul
fwait
xchg
iret
ss
pop
adc
rol
pop
and
jmp
loop
loope
test
mov
imul
lea
test
or
clc
int
jp
push
and
cmp
sti
adc
pop
nop
cli
sar
call
jecxz
nop
adc
mov
fcom
das
mov
or
aaa
(bad)
into
pop
mov
or
mov
fdiv
cwde
sbb
xor
hlt
fs
imul
pop
inc
mov
mov
mov
(bad)
scas
hlt
pop
daa
(bad)
or
push
sti
es
sub
cmp
add
outs
js
hlt
inc
adc
adc
mov
or
mov
push
dec
pop
test
inc
(bad)
dec
mov
lods
sahf
push
(bad)
inc
dec
sbb
lock
sub
add
icebp
xchg
or
or
fcomi
cmp
mov
sti
and
push
mov
rol
add
xchg
xchg
add
into
pushf
ds
jns
fcomp
sbb
ja
pop
and
or
shr
movs
mov
ret
add
aaa
in
pop
fild
fld
daa
xor
lods
data16
ins
les
lods
add
outs
mov
enter
imul
sbb
int3
xor
push
out
cdq
sbb
ins
push
push
sub
ss
xchg
xor
loope
mov
mov
mov
sub
pop
scas
cmps
rcl
test
and
cmps
sub
cmp
ss
repz
ror
data16
or
cdq
xor
mov
rol
(bad)
outs
in
mov
add
aam
mov
fldenv
inc
cmp
outs
mov
cmp
xchg
lods
mov
rol
into
push
out
mov
bound
test
loopne
xchg
cmps
cmp
fidivr
sbb
in
enter
mov
test
mov
xchg
mov
test
adc
in
rcl
mov
mul
repnz
sub
mov
push
in
and
add
and
ficomp
sub
adc
lea
sub
mov
add
gs
movs
in
fdiv
hlt
mov
lock
or
ins
in
iret
mov
repz
in
mov
iret
and
or
xor
shl
add
es
test
daa
jp
and
gs
hlt
(bad)
jo
stc
aad
xor
int
retf
lahf
test
pop
mov
fcmovb
mov
icebp
inc
pushf
fidivr
out
in
mov
cli
and
(bad)
cmp
dec
ror
int
int3
mov
cli
mov
mov
pop
mov
call
cli
stc
inc
adc
movs
push
or
mov
inc
inc
fs
icebp
ss
or
inc
push
and
mov
push
inc
fmul
outs
pop
pop
cmp
(bad)
loopne
push
stos
push
in
(bad)
inc
add
sbb
pop
cmp
push
cmp
mov
fidiv
fiadd
xchg
(bad)
out
(bad)
xor
(bad)
fdivr
jge
sahf
mov
jb
icebp
mov
push
cmp
into
and
cld
stc
mov
push
add
sahf
mov
(bad)
add
hlt
adc
mov
mov
rcl
fstp
lock
push
retf
cs
mov
xchg
int
inc
jne
into
imul
sbb
mov
or
outs
or
int3
add
adc
fs
data16
adc
cmp
retf
sub
enter
push
gs
mov
mov
rcl
and
push
iret
test
shrd
rcr
movs
shl
int3
(bad)
imul
xor
pcmpeqb
aam
mov
dec
jae
mov
enter
shl
imul
shr
mov
clc
jae
fdivr
fs
ss
cmp
fcom
cmp
mov
ror
mov
push
imul
(bad)
lods
aam
arpl
fcomp
sbb
fdivr
sub
loopne
(bad)
rcr
gs
ja
inc
fdivr
gs
nop
xchg
aam
loopne
pushf
pop
call
sbb
in
call
inc
dec
call
imul
adc
popa
push
aam
in
in
sub
xchg
or
sbb
pusha
inc
mov
adc
or
push
test
ret
data16
push
xlat
jne
add
iret
pop
xor
(bad)
push
jo
jbe
clc
add
imul
out
mov
dec
test
scas
pop
dec
test
les
sar
nop
mov
repnz
enter
ja
sar
dec
cmp
push
popa
popa
call
jae
movs
fs
les
adc
shr
xor
arpl
pop
xor
outs
xchg
arpl
push
(bad)
leave
shr
das
adc
pop
retf
aaa
fdivr
fcmovbe
das
shl
jb
lods
shl
xchg
scas
iret
enter
cmp
aam
fsubr
cdq
nop
dec
int3
fcomp
icebp
enter
retf
clc
shl
cs
shr
movs
fsub
or
pusha
or
call
cmp
add
jecxz
sbb
out
add
call
iret
add
jbe
test
xchg
dec
jns
pop
fmul
stos
or
sub
jno
in
cmp
pop
cwde
popf
or
clc
je
jae
jno
sub
sub
in
sub
jbe
and
outs
mov
fadd
xor
jmp
pop
xor
inc
jle
aaa
or
dec
adc
adc
mov
mov
or
daa
fmul
add
and
aad
jge
push
out
das
shr
cs
sub
clc
fadd
mov
mov
pushf
loopne
sub
pop
leave
shl
in
mov
div
mov
repnz
xchg
sbb
(bad)
dec
adc
xor
leave
shl
and
int3
jb
mov
shl
sub
ret
xchg
(bad)
xor
xor
jmp
fmul
xchg
adc
pop
mov
sbb
in
inc
aaa
rcr
ds
lods
fmul
aaa
aam
sbb
sbb
loope
and
or
or
mov
cs
cmp
mov
inc
es
push
sub
or
pushf
loopne
stc
add
jle
(bad)
shl
and
pop
dec
clc
inc
jp
cmps
imul
aam
lock
or
xor
mov
shl
mul
and
or
aaa
loopne
add
pop
pop
ins
jp
add
push
mov
xlat
inc
loope
rcl
test
sbb
xchg
arpl
cwde
in
cmp
dec
and
pop
icebp
pop
lods
mov
mov
xchg
sbb
pop
daa
sub
enter
pop
cwde
imul
popa
lods
or
cmp
aam
push
ins
sbb
in
or
push
mov
sbb
rcr
stc
adc
dec
adc
aam
lods
adc
inc
dec
push
mov
rcr
jb
xchg
ret
in
and
jb
loopne
jb
shl
je
adc
inc
call
nop
or
call
push
inc
addr16
pushf
add
repnz
or
mov
not
stos
and
idiv
push
hlt
ds
add
add
jecxz
xchg
pop
inc
inc
sti
add
xor
mov
icebp
cmp
cmp
cmp
sbb
sub
inc
jo
and
or
mov
lods
mov
pop
sbb
lods
icebp
sub
pop
add
add
push
mov
xor
add
out
test
xlat
or
pop
xchg
or
sbb
add
cmp
shl
push
inc
pop
sub
add
femms
sbb
retf
mov
add
adc
sub
mov
dec
mov
and
cmp
test
push
push
pop
and
rol
jbe
or
push
and
pop
ror
js
adc
mov
hlt
cmp
mov
and
pop
add
dec
jb
adc
xor
jbe
sub
call
sbb
test
mov
sub
mov
dec
mov
inc
inc
mov
sbb
push
add
push
push
fs
shl
xor
out
rcr
shr
repnz
call
sbb
neg
mov
shr
inc
mov
add
fsub
or
mov
sub
push
xlat
mov
jnp
jnp
int3
sub
fnstsw
ret
fdiv
out
or
add
xchg
movs
das
add
ja
push
les
or
retf
pinsrw
push
arpl
fisttp
inc
or
sub
add
ins
pop
ret
jg
mov
daa
add
js
shr
fs
mov
xchg
cmps
and
inc
jmp
loop
or
mov
fdiv
sti
mov
push
add
movs
mov
dec
push
cdq
add
adc
cmp
jo
pop
repz
jl
pusha
xor
sub
sbb
loope
ret
lods
js
sbb
sub
push
enter
outs
push
mov
dec
dec
cmp
push
call
xchg
test
in
or
xor
or
adc
pop
aaa
dec
shl
pusha
sbb
and
aam
mov
push
or
dec
test
inc
pop
(bad)
pop
sti
inc
inc
jb
call
aaa
inc
jbe
sbb
adc
mov
push
dec
sbb
push
sahf
into
push
and
jmp
sub
inc
jg
add
xlat
sub
push
mov
xor
clc
mov
xchg
inc
pop
jmp
pop
xor
mov
mov
call
xor
or
push
push
xchg
sbb
sbb
or
fwait
adc
enter
jle
das
test
mov
xor
add
outs
or
push
div
lods
call
jbe
daa
jecxz
loopne
arpl
push
mov
push
cmp
pop
fmul
ss
or
xlat
sbb
mov
add
dec
ja
mov
int3
out
aaa
inc
das
mov
fs
push
sbb
pop
ret
push
aas
mov
adc
pop
inc
push
pop
addr16
cmp
pop
(bad)
clc
es
stos
add
inc
dec
popa
push
fcom
add
adc
es
pop
adc
cmp
push
in
push
es
dec
(bad)
cmc
and
in
ins
nop
xchg
jecxz
jge
mov
adc
add
arpl
pop
adc
aam
xchg
mov
lods
xchg
add
add
add
and
call
sar
pop
cmc
inc
pushf
stc
pushf
fisub
pop
sub
fs
mov
je
xor
xor
mov
(bad)
adc
sbb
ficom
jne
mov
test
mov
out
and
inc
cmp
push
mov
cmp
fst
pop
push
inc
sub
add
pusha
pusha
test
fcom
fidiv
dec
jp
xor
mov
jno
test
ret
jp
mov
xchg
inc
movs
xchg
rep
or
pop
mov
mov
cdq
jne
cmovle
mov
jmp
out
mov
jb
leave
push
cmp
mov
cwde
and
clc
sub
sub
xchg
add
mov
mov
dec
sub
sub
outs
sub
and
sub
jnp
jne
or
sti
leave
rcr
inc
aaa
popf
ror
push
fist
in
pop
clc
dec
mov
adc
stos
mov
add
adc
popf
(bad)
xlat
inc
mov
pop
fsub
pop
mov
push
and
and
pop
adc
(bad)
cmp
adc
mov
xchg
push
ret
push
xchg
jmp
js
mov
or
ror
sbb
pop
sbb
es
retf
ret
setbe
jmp
cmp
mov
adc
sbb
jmp
mov
je
xor
inc
sub
add
aas
mov
or
sub
sub
inc
jmp
push
dec
fdivr
jo
popa
or
inc
xor
push
btc
les
in
test
and
dec
nop
sar
aam
or
mov
jl
in
mov
sub
xchg
repnz
icebp
loope
in
mov
inc
inc
cmp
fs
inc
inc
mov
je
mul
push
xchg
sbb
inc
add
add
add
cld
add
xor
mov
push
xchg
dec
jl
push
lea
add
stos
retf
lods
mov
cmp
je
add
sbb
push
data16
sahf
lock
clc
push
imul
and
mov
pop
inc
aas
pop
pop
icebp
fiadd
dec
and
scas
lock
fild
cs
loop
lea
jmp
lea
dec
mov
or
add
test
jb
push
push
add
popa
inc
pop
add
mov
mov
adc
jns
xchg
mov
mov
adc
scas
es
lods
xor
gs
iret
push
shr
fld
mov
pop
pop
xlat
jns
xor
mov
pop
(bad)
and
inc
xor
cmps
lods
cmp
jp
add
sub
xor
adc
xor
or
mov
jne
add
push
imul
jge
jmp
sbb
hlt
mov
rol
jl
xor
pop
in
lods
inc
ret
or
and
imul
mov
js
mov
loope
pop
sbb
(bad)
fldcw
sub
ins
into
sbb
push
movs
and
pusha
and
xchg
cld
pop
pop
mov
xchg
mov
or
stc
jp
mov
leave
lea
push
jg
pop
add
call
sbb
inc
xor
add
jp
pop
inc
sub
mov
or
and
push
pop
adc
cmp
ficom
and
popa
jne
fistp
push
xchg
dec
add
pusha
mov
adc
xor
pop
jg
sar
rol
mov
cmp
inc
add
mov
mov
ds
sbb
rol
push
xchg
mov
cmps
mov
retf
jo
push
dec
add
lea
sti
inc
add
test
cs
xchg
xor
cs
cmp
pop
frstor
and
ja
jl
inc
into
in
dec
rol
sbb
repnz
add
ds
or
clc
ret
mov
jle
je
or
iret
mov
xchg
inc
pushf
cli
and
sbb
pop
sbb
and
mov
pushf
adc
pop
push
cmp
cmp
push
adc
sahf
sbb
or
xlat
adc
inc
pop
movs
fadd
leave
movs
(bad)
mov
jl
cmp
lea
ror
xor
dec
add
fdivr
jns
mov
cmp
pusha
sub
adc
push
add
and
call
pop
add
loope
aaa
loope
push
sbb
or
mov
add
into
test
(bad)
xchg
add
js
add
push
repz
mov
dec
clc
and
rol
adc
adc
cld
jbe
cdq
lea
push
add
add
loopne
mov
xor
xor
out
fsubr
shr
xor
and
xchg
loope
lock
sub
dec
inc
call
inc
scas
imul
xor
adc
hlt
test
cdq
not
lock
xor
and
into
xor
xchg
cmp
jecxz
dec
pushf
push
push
not
aad
imul
ret
and
cmp
retf
mov
int
les
outs
sti
cmp
jnp
add
gs
in
sbb
cs
sub
push
cmp
mov
sahf
shr
fisttp
push
add
repnz
dec
adc
outs
fcomp
enter
(bad)
push
ret
adc
test
xor
cmp
and
mov
sub
popa
arpl
mov
(bad)
(bad)
lods
pop
jecxz
clc
cmp
jg
adc
push
(bad)
sub
cdq
sub
stos
add
call
ret
shr
popf
adc
fmul
mov
or
jmp
pop
push
jb
and
jg
mov
xor
psubusb
sbb
sbb
cwde
in
js
jo
dec
dec
xor
test
push
lds
xchg
(bad)
in
mov
mov
rcl
outs
std
ret
mov
cmp
je
sbb
mov
xchg
inc
hlt
jl
cmp
pop
shl
cli
js
sub
and
xor
push
fld
push
sub
clc
(bad)
fidivr
fcomp
movzx
mov
and
push
mov
aas
xchg
jmp
jle
imul
nop
lock
inc
lock
stos
fsubp
loope
pop
fsubp
(bad)
call
cmp
pop
in
je
and
pop
pusha
lds
ins
pop
imul
outs
add
clc
jmp
inc
rcl
cld
in
mov
test
ror
adc
add
mov
cwde
clc
push
or
shl
sbb
jle
dec
jmp
ror
pop
test
or
sbb
sub
popa
or
sbb
jne
dec
jmp
push
sbb
sub
shr
xchg
shr
xor
stos
inc
jmp
imul
xor
or
mov
jp
push
jmp
mov
mov
aam
lock
adc
pusha
pop
fdivr
dec
cmp
pusha
fstp
jne
lock
je
popa
inc
lock
push
or
inc
mov
xchg
add
pop
xchg
adc
inc
rcl
cmps
xchg
xchg
xchg
jne
cmp
mov
and
bound
cli
(bad)
cwde
loopne
call
add
test
cld
push
test
arpl
adc
inc
repnz
mov
stos
push
add
ins
sub
xlat
mov
push
or
imul
push
sti
add
fiadd
daa
inc
mov
adc
imul
js
call
cdq
push
leave
or
push
mov
jecxz
push
iret
or
dec
cld
mov
mov
dec
push
inc
dec
jae
mov
add
add
test
and
fwait
dec
xchg
daa
jae
and
cmp
inc
pop
mov
adc
or
mov
and
sub
out
and
sub
sub
push
pushf
pop
mov
(bad)
push
mov
retf
test
add
push
dec
cmp
dec
mov
pop
sbb
pop
cmp
imul
xchg
fcomp
or
cmp
jge
outs
mov
jbe
nop
add
sar
mov
cmp
nop
add
je
xor
fcomp
pushf
aam
add
push
loope
sahf
test
stos
test
cs
or
dec
mov
push
mov
ficomp
imul
sub
(bad)
mov
pop
iret
add
jge
and
nop
mov
push
popa
jl
mov
sar
jae
add
iret
mov
adc
mov
lods
mov
xlat
add
xor
in
(bad)
jmp
xchg
fs
sar
lea
lea
xor
sub
test
mov
sbb
sub
cwde
sub
sub
or
pop
and
jne
add
std
and
mov
push
je
or
push
push
sub
jbe
(bad)
jns
fs
add
jg
jmp
cmp
daa
and
addr16
sbb
and
rcl
mov
push
xchg
sub
in
ins
adc
fmul
mov
in
mov
sub
cmp
push
xor
les
pop
cmp
jmp
xor
push
mov
cmps
fstp
mov
add
js
(bad)
xor
je
add
xor
pop
jp
fisttp
js
add
lods
push
mov
pusha
and
sbb
(bad)
and
icebp
js
mov
mov
outs
or
mov
push
and
push
jmp
cmp
mov
sub
call
daa
add
jg
sub
shl
jge
sbb
fwait
ret
jns
adc
sub
xor
pop
(bad)
int3
push
test
popa
dec
ror
add
call
sbb
cmp
push
dec
jmp
rol
(bad)
ror
jecxz
and
cmp
mov
daa
movs
call
jbe
nop
in
cld
cwde
mov
sbb
push
sbb
sub
pop
rcl
rcl
and
mov
add
xchg
in
cmp
or
xchg
sysret
pushw
cdq
pusha
mov
sub
dec
in
mov
icebp
mov
push
call
sub
bound
push
mov
xor
(bad)
mov
aaa
cmps
test
or
pop
pop
mov
xchg
jge
mov
loopne
int3
and
out
sbb
inc
movs
push
or
pop
ret
mov
mov
push
dec
pusha
iret
pop
inc
sbb
popa
and
and
adc
mov
push
xor
xchg
clc
cmp
mov
pusha
mul
mov
lds
mov
xor
or
or
pop
sub
push
test
or
jno
dec
add
jae
dec
call
xchg
or
mov
sub
dec
nop
cmp
inc
add
inc
add
and
jnp
aad
or
clc
ss
pushf
xlat
pop
push
cmp
cmp
inc
pop
pushf
jnp
dec
adc
out
jl
iret
sbb
cmp
dec
add
pop
loope
cmp
and
loope
push
inc
inc
sbb
sub
push
mov
add
inc
adc
outs
jmp
add
add
pop
sub
inc
push
sub
pop
sub
out
rol
xor
loopne
adc
xor
xor
fdiv
mov
adc
sbb
test
mov
pop
cld
jne
add
mov
dec
xlat
iret
sbb
lods
jae
je
xchg
lock
push
add
aaa
mov
push
sbb
push
stos
scas
xchg
rcl
fwait
mov
or
xor
mov
ja
iret
pop
fcom
out
scas
jge
daa
aas
(bad)
ret
lock
push
jne
mov
jmp
or
pusha
mov
fcom
sbb
add
or
imul
daa
push
ja
test
xor
inc
aas
push
xor
jp
mov
jbe
jmp
scas
in
or
or
pop
aaa
push
aad
hlt
data16
hlt
push
neg
adc
xlat
jno
inc
imul
jne
cld
lock
cdq
add
mov
sbb
jle
dec
and
mov
cmc
fimul
xor
loopne
mov
push
iret
jecxz
(bad)
ins
fstp
jo
fsub
push
fdiv
rcr
sbb
sub
shl
push
jae
das
cmp
lea
mov
add
xchg
inc
fs
inc
fisttp
push
or
xchg
and
xchg
(bad)
sahf
dec
xchg
or
outs
gs
loope
lahf
or
mov
add
mov
out
jmp
stos
test
es
retf
movs
aam
loop
cmps
add
stos
scas
push
dec
daa
sub
nop
mov
or
adc
outs
(bad)
cmc
ins
mov
and
and
arpl
push
sbb
inc
push
adc
inc
cmp
adc
or
pop
in
(bad)
or
push
add
pop
mov
test
push
push
push
dec
jmp
fcom
and
push
mov
and
push
adc
outs
not
out
adc
add
dec
or
sbb
in
sbb
pop
adc
dec
imul
fld
add
adc
je
mov
adc
imul
dec
adc
cmp
and
popf
fmul
push
or
add
mov
rol
je
add
ss
enter
and
and
enter
mov
test
loope
jmp
sbb
jbe
push
std
repz
or
aad
fwait
push
sbb
mov
into
add
neg
loopne
dec
jmp
jge
add
mov
mov
mov
mov
je
jbe
push
add
dec
xor
adc
mov
sbb
std
call
push
cmp
mov
ins
fdiv
sub
cmc
dec
je
pop
jmp
push
sbb
jg
add
cmps
movs
add
xor
inc
mov
add
sahf
mov
xchg
push
adc
sbb
jnp
jp
popa
or
ret
push
je
rep
mov
or
test
or
addr16
jmp
inc
mov
pop
xor
sbb
mov
sbb
add
cwde
mov
and
add
pop
pop
sub
dec
cld
adc
push
dec
out
push
jmp
cwde
enter
cmp
jmp
and
ret
int
ret
xchg
mov
pop
cmp
stos
cli
dec
inc
add
or
inc
jo
xor
add
add
and
shr
and
sub
ret
mov
mov
mov
sub
add
mov
mov
mov
jb
mov
jge
js
sbb
sbb
jb
jbe
ja
add
hlt
dec
fsubr
cs
mov
push
bound
push
ret
push
imul
mov
mov
sbb
add
push
sbb
inc
sub
ins
jo
sub
adc
scas
jno
fiadd
mov
(bad)
dec
or
lock
cli
(bad)
xor
ja
(bad)
jmp
sti
shl
call
adc
mov
in
adc
test
push
and
sbb
add
add
(bad)
sbb
push
push
fdiv
enter
cld
div
cmp
imul
xor
mov
mov
mov
imul
lds
pop
push
mov
push
fist
stos
dec
push
nop
mov
and
push
or
jmp
icebp
xchg
inc
call
ss
not
retf
push
fldpi
clc
outs
(bad)
lds
push
push
arpl
xor
stc
mov
sub
clc
xchg
mov
stos
add
shl
fwait
fs
or
adc
and
rol
and
jne
gs
fsubr
cmps
xor
sar
mov
xor
mov
xor
sbb
clc
fwait
nop
or
add
push
(bad)
sbb
je
(bad)
mul
cmp
cmp
xor
pandn
xor
fwait
push
add
push
and
add
xor
stos
ror
inc
or
mov
cmp
and
jge
rcl
mov
test
out
or
stos
fsubr
div
jne
rcr
(bad)
and
sbb
dec
push
or
or
xchg
push
add
push
cmp
stos
jne
je
push
mov
xchg
push
in
loopne
fistp
push
je
(bad)
daa
xor
jecxz
mov
movs
push
addr16
data16
mov
xor
hlt
push
mov
jne
jg
cmp
mov
mov
mov
cmp
push
je
xor
rol
pushf
mov
imul
aam
pop
cdq
pop
test
clc
call
adc
hlt
cvtps2pd
shl
or
dec
cmp
and
(bad)
pop
fnstcw
or
add
or
push
sbb
add
pop
les
dec
jns
mov
cmp
mov
gs
jo
inc
ins
mov
xchg
inc
pop
dec
test
fisttp
sub
adc
xor
rcr
rcr
or
push
popa
mov
ss
add
xlat
mov
ficomp
adc
sbb
jge
loope
mov
nop
mov
adc
pushf
or
xor
stos
or
push
add
adc
(bad)
and
xor
dec
pop
or
mov
je
(bad)
push
je
jg
sub
gs
lds
lahf
hlt
in
cmp
cmc
xchg
mov
and
cmp
push
sete
fsubp
push
xlat
add
inc
inc
fmul
add
out
sub
je
cmp
popf
cmp
or
dec
or
dec
xor
inc
out
cmps
pop
jbe
push
scas
sbb
dec
je
mov
mov
add
xchg
push
add
retf
les
xor
pusha
mov
add
jg
mov
scas
adc
jo
mov
inc
push
mov
nop
xchg
data16
stc
push
and
jb
or
js
imul
lock
fwait
add
lahf
xchg
and
lea
jge
push
jns
mov
movs
jmp
add
lds
aam
add
js
adc
xor
mov
loopne
and
stos
and
fwait
or
mov
cmp
arpl
xor
sub
push
ds
and
pop
jae
mov
cmp
or
sub
xor
add
lods
mov
push
cs
leave
or
cmp
mov
and
push
adc
mov
test
dec
(bad)
mov
add
cwde
shl
jecxz
cmps
adc
xor
lock
cmps
mov
int3
ficomp
push
inc
or
int3
rol
adc
sbb
clc
sbb
sbb
imul
xor
cmps
or
xor
cmp
sub
and
xor
shr
sub
xor
call
inc
pusha
inc
out
xor
jns
dec
sbb
push
imul
cmps
imul
outs
call
push
out
xchg
jbe
outs
lea
sbb
xchg
cwde
hlt
call
ficom
movs
sbb
mov
call
(bad)
retf
movs
sbb
mov
je
fsub
clc
adc
mov
adc
shr
push
mov
mov
push
add
pop
add
inc
adc
mov
outs
push
adc
int
imul
sub
les
mov
mov
ror
and
sub
pop
add
je
dec
push
jns
sbb
jns
ins
inc
pusha
jl
lea
mov
add
jb
(bad)
jno
push
or
mov
dec
xchg
push
test
add
adc
sbb
(bad)
sub
push
call
mov
gs
push
fsub
mov
mov
adc
mov
pop
or
push
sub
pop
ficom
mov
hlt
mov
or
xlat
clc
push
(bad)
clc
xor
push
mov
mov
leave
stos
or
add
adc
cld
push
pop
ja
imul
sbb
sbb
add
repnz
xor
rol
mov
sub
rcr
js
push
xor
sbb
inc
fnsave
xor
cmp
into
and
mov
mov
add
(bad)
xlat
push
mov
push
add
fdivr
xor
daa
lea
xor
(bad)
push
push
add
xchg
jne
sub
jmp
jne
push
sahf
hlt
test
mov
xchg
pusha
ds
sbb
sbb
xchg
cmp
xchg
xchg
jl
add
pop
in
xchg
lods
aam
pop
mov
imul
pusha
or
xlat
ja
mov
data16
call
inc
add
out
in
jbe
cmp
push
or
pop
xor
pop
dec
cmp
dec
sbb
sub
mov
in
inc
(bad)
dec
mov
cs
pop
jl
dec
add
or
nop
or
mov
idiv
xchg
nop
cmp
lods
add
jmp
nop
add
pop
jecxz
fmul
test
jecxz
pusha
js
pop
test
push
in
or
mov
pop
mov
or
sbb
add
and
in
sub
sbb
push
dec
repz
sub
push
mov
xchg
and
or
sub
fst
stc
mov
inc
sub
jge
mov
push
out
int
neg
mov
nop
lock
and
and
push
cmp
cs
fisub
nop
jb
add
in
jne
push
xor
add
add
push
shl
dec
cwde
inc
xchg
or
xchg
dec
rcl
adc
call
adc
or
push
not
hlt
inc
cmp
inc
xor
sahf
jmp
(bad)
sub
ja
pusha
and
je
add
out
lds
inc
shr
fidiv
jne
mov
mov
or
push
(bad)
cld
loopne
ret
sub
adc
dec
xlat
dec
mov
cmp
and
sub
cli
pop
or
jle
in
in
adc
dec
aaa
test
in
adc
or
call
js
(bad)
out
mov
neg
add
inc
push
inc
sbb
mov
cmp
mov
jns
(bad)
push
mov
sbb
inc
or
(bad)
cmp
dec
sti
imul
xchg
imul
lea
inc
cmp
or
nop
out
pop
cmc
push
repz
push
add
adc
cli
pusha
dec
adc
sti
push
dec
or
repnz
mov
mov
sub
mov
inc
loop
push
or
icebp
jb
push
add
add
adc
pop
push
xchg
sbb
ret
(bad)
push
fnsave
pop
xchg
adc
sub
nop
jl
sub
and
or
cmp
test
xchg
pushf
adc
clc
sti
add
and
or
xor
pop
pop
sbb
inc
sbb
int3
inc
ins
pop
dec
bound
jl
daa
dec
or
add
adc
lea
pusha
xchg
ror
and
in
or
or
das
das
or
stc
out
clc
out
and
mov
test
mov
neg
out
pop
repnz
sub
push
push
mov
test
push
push
cdq
pop
dec
ret
adc
jbe
mov
pop
popfw
mov
push
jo
nop
ds
mov
movs
fs
jl
sbb
sub
pusha
inc
xor
mov
hlt
aam
arpl
xchg
retf
enter
pop
cmp
pop
xor
push
dec
xor
stc
cli
dec
pop
enter
cli
xor
aaa
mov
out
shl
add
jecxz
or
int3
pop
dec
mov
add
or
cdq
div
aas
rol
jge
mov
push
pop
or
neg
js
push
pop
and
aad
xchg
pop
lea
xchg
adc
mov
push
mov
or
pop
sbb
pop
push
inc
loope
adc
(bad)
or
mov
jl
xor
or
adc
jno
pop
or
aam
adc
adc
sub
inc
cmp
cmp
push
dec
call
xor
jmp
jns
push
jo
sbb
or
push
jbe
inc
push
popf
(bad)
mov
push
dec
push
pop
in
dec
mov
pusha
inc
(bad)
pop
clc
mov
je
push
mov
and
(bad)
push
test
hlt
cmp
mov
mov
jl
call
dec
jae
imul
or
and
ja
imul
loop
inc
imul
xchg
xchg
data16
ds
les
sub
dec
dec
mov
cmp
rol
sub
rol
and
sbb
cmp
mov
mov
jecxz
mov
cmp
cmp
or
inc
jns
mov
adc
or
movs
call
sbb
pop
pop
mov
add
repz
sub
adc
test
mov
(bad)
addr16
adc
js
ja
adc
into
sbb
or
mov
add
pop
mov
sbb
pop
fdivr
inc
mov
rcl
int
sbb
fs
out
stos
xor
fcomp
pop
push
mov
jge
lods
push
jno
pop
dec
mov
mov
and
and
pop
dec
pusha
dec
push
out
xchg
aad
(bad)
fnsave
add
mov
add
mov
mov
adc
ss
pop
adc
dec
or
jp
int3
xor
mov
push
push
push
sbb
or
int
sub
or
ss
mov
push
ror
adc
jns
push
pop
jnp
or
rcr
mov
or
fdiv
aam
mov
(bad)
xchg
adc
in
sub
nop
jmp
sbb
cmp
mov
rep
xchg
add
(bad)
sbb
jo
movs
test
pop
push
add
dec
add
out
adc
push
dec
xchg
pop
mov
push
or
dec
add
cmp
add
inc
addr16
inc
push
fs
xlat
rol
jb
xchg
cdq
push
xor
clc
(bad)
push
ins
aaa
or
fmul
jb
pop
or
adc
dec
sub
push
in
pop
mov
ror
pop
mov
or
xor
ror
shl
add
(bad)
shl
int3
adc
add
stos
ret
xchg
mov
out
outs
ins
ficomp
imul
adc
or
or
and
adc
inc
mov
mov
punpckhwd
jmp
and
adc
mov
sub
call
cmp
jne
jmp
xor
push
cmp
jbe
call
push
dec
movs
cdq
fnstsw
sbb
adc
adc
mov
adc
dec
dec
add
jne
push
pop
or
cdq
icebp
push
inc
daa
inc
inc
and
or
js
xchg
retf
add
jl
nop
and
std
nop
mov
jb
repz
fmul
mov
add
outs
jb
sbb
and
pop
movs
rcr
pop
test
in
or
pop
and
cmp
nop
inc
outs
sub
or
shl
and
pop
add
pop
adc
test
cmps
les
adc
inc
ins
cmp
push
push
xlat
div
in
add
gs
popa
add
mov
jg
pop
cmp
mov
adc
sub
mov
pop
mov
xor
push
pop
mov
jne
lock
cmps
xor
cmp
or
leave
je
push
mov
jmp
call
jbe
xchg
ins
(bad)
xor
test
adc
movs
rol
pop
call
lea
aas
stos
mov
in
mov
imul
dec
add
dec
mov
rcl
pop
mov
xchg
lods
daa
or
ss
push
in
mov
(bad)
rol
(bad)
int
repnz
xchg
sbb
push
push
sbb
or
xor
sub
xchg
jb
jbe
add
or
or
mul
add
adc
pop
inc
retf
sub
mov
jge
cmp
ins
mov
rcr
jle
jp
pop
fidivr
sbb
(bad)
mov
dec
hlt
nop
sbb
mov
rol
test
xor
nop
lea
(bad)
ret
sub
imul
pop
adc
or
adc
adc
in
mov
or
sub
mov
push
pop
mov
scas
jnp
sbb
dec
jno
pusha
test
sub
push
inc
and
mov
daa
xchg
dec
or
into
(bad)
daa
pop
lea
js
shl
mov
sbb
ins
dec
mov
adc
mov
fwait
and
xor
push
mov
jecxz
mov
(bad)
fcmovb
sbb
shl
retf
repz
xor
pop
push
jne
cmp
imul
fcomp
sbb
mov
push
adc
sub
test
push
xchg
adc
sbb
push
xor
inc
xchg
xor
lods
cmps
jae
adc
leave
or
cmp
scas
or
xchg
xchg
scas
ror
adc
retf
in
sub
add
push
clc
les
sti
add
loopne
dec
push
xchg
or
ins
jmp
add
aas
sbb
pop
xchg
dec
out
jne
pop
push
aaa
push
mov
mov
mov
and
lds
push
push
adc
mov
push
push
mov
mov
cmp
aaa
push
aas
push
cmp
mov
std
inc
jmp
mov
adc
pop
mov
or
hlt
mov
jne
mov
popf
dec
leave
adc
xor
add
leave
dec
nop
add
fst
ror
and
popa
je
xchg
cmp
jmp
add
jnp
jp
and
sbb
and
fmul
mov
aam
or
(bad)
je
dec
jmp
jle
jecxz
pusha
jne
je
dec
je
add
xchg
cmp
mov
push
sbb
cmp
neg
test
and
add
cmp
jg
and
xlat
or
mov
(bad)
outs
(bad)
jle
(bad)
or
push
jmp
movlps
mov
adc
pop
cli
xchg
cli
add
pop
jmp
and
pop
push
push
in
jge
dec
push
jmp
sub
push
inc
pextrw
aam
scas
sub
adc
bound
xchg
pop
add
(bad)
mov
cli
or
jbe
jo
test
ja
call
adc
mov
xor
loope
mov
dec
hlt
dec
lock
rcl
aad
or
push
add
push
inc
push
jp
mov
or
into
cmp
xchg
mov
sub
adc
aam
push
mov
mul
ds
adc
mov
jmp
and
jl
and
sub
dec
mov
push
sub
mov
sub
aaa
add
sub
push
stos
add
dec
and
push
cli
inc
jecxz
fxch
pop
add
add
test
inc
push
mov
sub
ins
or
sbb
mov
aas
sar
mov
scas
fisub
mov
or
pusha
popa
mov
xchg
xor
fdiv
test
sbb
inc
popa
xlat
mov
mov
int
(bad)
jne
and
xor
pop
adc
mov
mov
adc
add
add
add
or
sub
pop
cdq
adc
test
jnp
das
fcmovnb
mul
adc
xchg
test
sbb
comiss
mov
rcr
in
add
cmp
in
pop
xor
jo
mov
mov
mov
in
push
sahf
loop
jp
nop
cdq
cmp
clc
add
xchg
inc
movs
push
fucomi
nop
loope
mov
test
sub
mov
pop
fwait
mov
push
call
inc
call
test
(bad)
test
loope
daa
adc
fmul
xor
xor
stc
or
dec
popf
mov
lods
xor
fimul
retf
inc
icebp
inc
or
pop
add
lock
inc
lsl
test
iret
(bad)
inc
inc
xor
add
mov
cmp
retf
sub
mov
sbb
xchg
jne
jo
int3
popa
iret
mov
sbb
out
sbb
icebp
inc
jmp
jp
daa
xchg
es
repnz
fs
inc
dec
push
xor
push
int3
and
cwde
mov
or
inc
xchg
mov
mov
adc
adc
cli
outs
bound
sub
sar
add
imul
je
loope
cmp
test
pop
(bad)
bound
mov
sbb
(bad)
push
push
cmp
ror
test
je
cmps
add
push
sbb
sbb
add
ss
popa
push
mov
popa
loope
xor
add
dec
jg
(bad)
xchg
adc
sub
daa
xor
leave
or
mov
js
sub
dec
pop
pop
mov
or
leave
or
popf
lea
retf
inc
int
inc
adc
aam
das
mov
popf
daa
popa
popf
inc
xchg
pop
and
push
jo
out
ins
and
adc
add
daa
(bad)
mov
adc
inc
ds
mov
jne
pop
jb
push
bnd
xor
in
lea
sbb
stos
pop
and
push
fst
push
or
aas
add
and
popf
adc
mov
mov
mov
cmp
xor
add
and
mov
cdq
lock
ins
pop
fdiv
push
jns
jnp
outs
fist
mov
daa
cmc
push
shr
jo
lock
add
pop
test
cdq
add
adc
imul
ds
stc
add
movs
mov
in
(bad)
movs
and
movs
test
inc
or
fstp
or
shl
xchg
loopne
xchg
adc
push
mov
push
int3
lods
retf
ss
lea
xlat
add
inc
mov
test
mov
jo
das
jne
ins
mov
xchg
xchg
cli
enter
in
adc
and
sub
repz
cmp
sub
or
push
lahf
cli
and
fsub
les
cmp
mov
pop
cli
xchg
das
or
add
pinsrw
jle
adc
cmp
les
pop
or
(bad)
jne
daa
pop
lods
in
fwait
mov
push
mov
push
push
push
cmc
inc
xchg
fmul
push
mov
or
cmps
jns
(bad)
rcr
sbb
clc
int3
adc
push
call
mov
in
sbb
inc
rol
xor
hlt
clc
inc
outs
adc
sbb
and
mov
out
aam
jnp
js
inc
(bad)
mov
shl
cmp
jo
xor
dec
dec
lea
test
push
add
pop
ins
mov
mov
mov
add
adc
js
sbb
pop
cmp
and
push
push
xor
mov
sub
sbb
add
pop
push
ret
add
add
add
adc
or
add
adc
and
xor
bound
cmp
push
inc
in
xadd
push
outs
loopne
adc
xor
push
lds
mov
int3
jns
std
mov
cmp
and
loopne
adc
xor
sub
dec
or
mov
adc
cmp
jnp
imul
aad
push
or
pusha
int
sbb
je
fs
adc
pop
dec
outs
or
fbld
in
mov
or
push
jle
adc
inc
cmp
or
aaa
jg
fs
xchg
fptan
and
fs
xchg
adc
fld
nop
repnz
call
cmp
cmps
mov
ds
push
jns
mov
add
neg
test
xchg
push
cwde
xchg
lea
std
data16
inc
push
dec
cmc
push
add
push
sbb
mov
jns
and
lea
imul
sub
lods
je
inc
shl
or
cmp
sbb
inc
call
mov
sub
or
lock
lods
jl
fsub
sub
sub
sub
enter
add
repnz
jnp
cmp
fiadd
jmp
iret
and
cmp
inc
push
addr16
jmp
test
in
sahf
mov
sbb
sub
movs
(bad)
(bad)
in
sbb
mov
inc
addr16
sbb
aad
adc
cwde
inc
fwait
jge
xor
mov
sbb
push
sar
mov
lods
sbb
jno
sub
inc
xor
mov
(bad)
(bad)
push
add
rcr
fcom
adc
dec
jecxz
xchg
mov
cmp
das
jae
pusha
jl
fisttp
sbb
in
dec
jae
fdiv
call
mov
test
pop
pop
sbb
sub
push
jns
bound
jno
push
shr
cmp
std
push
push
mov
adc
add
shr
mov
stc
jne
cli
jne
cmp
xor
and
push
stos
adc
push
lahf
ret
bound
add
retf
pop
mov
cmp
mov
out
xor
mov
loope
mov
das
push
mov
add
ud2
daa
data16
or
dec
sbb
and
xchg
retf
push
push
call
sub
sbb
scas
mov
dec
xor
push
inc
xchg
movs
sti
pusha
mov
xor
sbb
add
and
push
les
repz
iret
imul
lock
add
fld
idiv
ins
das
push
rol
mov
mov
sub
mov
xchg
aas
mov
adc
js
ret
add
jo
jl
jno
pop
and
xchg
xchg
and
xor
mov
mov
cmps
sub
or
sub
jae
jno
mov
and
sar
add
push
sub
pop
push
and
sahf
aaa
js
clc
movs
lods
inc
fadd
pop
sbb
mov
mov
pop
(bad)
fild
cmp
pop
jb
cli
aaa
je
cmp
sub
sar
ror
xor
xchg
inc
dec
loopne
sbb
or
pushf
in
inc
pushf
mov
xor
sub
or
xchg
pop
shl
les
fucomip
test
ins
(bad)
(bad)
cmps
push
mov
add
push
xchg
sbb
in
sbb
jmp
jle
push
(bad)
jp
aam
loope
jmp
and
ror
or
inc
or
cmp
xchg
pop
idiv
adc
lds
lods
jbe
pop
jp
in
xchg
in
stc
clc
hlt
jmp
dec
push
retf
dec
clc
hlt
mov
dec
or
jne
or
add
mov
ins
and
in
popf
jp
sbb
jge
add
mov
mov
es
lar
and
push
mov
mov
adc
lds
lods
mov
adc
cld
aam
jb
fldcw
add
mov
jle
into
push
add
sub
cmp
cli
xor
cmp
idiv
jbe
push
xor
imul
jo
call
inc
outs
mov
add
and
pop
mov
ret
jno
dec
loope
xlat
sub
or
xchg
fimul
ins
or
jne
dec
dec
dec
repz
push
(bad)
out
mov
push
push
ret
fs
add
push
inc
push
add
xlat
inc
call
mov
les
xor
inc
inc
jle
add
xor
(bad)
movs
or
push
pusha
jge
push
sub
call
clc
sub
cmp
rep
fisttp
or
fdivr
(bad)
jp
cld
xor
cmp
adc
adc
cmp
pop
stc
pop
and
adc
in
push
mov
ds
dec
or
iret
xchg
push
ja
push
ja
lea
aad
lock
mov
loop
mov
push
enter
js
mov
js
hlt
dec
mov
das
jecxz
dec
cli
add
cmp
je
and
not
jmp
adc
inc
movs
pusha
ror
dec
loopne
xchg
xchg
fisttp
or
repz
pop
jnp
add
mov
enter
jmp
push
or
es
das
lea
pop
add
push
add
pop
lea
nop
(bad)
push
cmps
mov
inc
nop
adc
and
push
retf
js
lods
push
sbb
and
cmp
fisubr
xor
mov
jne
movs
xor
arpl
ins
ins
out
mov
push
cs
and
push
aaa
push
sbb
hlt
mov
(bad)
push
inc
mov
inc
sub
js
js
loopne
daa
jne
mov
jle
fucomp
jae
movs
outs
push
aaa
adc
mov
faddp
(bad)
(bad)
in
int
jne
and
xchg
pop
movs
shr
cmp
(bad)
fmul
sahf
jae
mov
mov
mov
mov
sbb
test
add
mov
push
pop
call
cmc
mov
ror
dec
lods
or
and
dec
mov
mov
xor
fstp
cmp
sbb
and
dec
stos
loop
add
cmp
xor
jecxz
loopne
iret
jle
outs
jecxz
mov
outs
out
or
(bad)
sbb
std
jne
push
es
sahf
cdq
adc
xchg
push
cmp
push
push
fisubr
sbb
and
cmps
jecxz
inc
mov
mov
mov
int
jmp
push
xchg
in
or
nop
xor
sbb
jae
push
pop
mov
ret
arpl
inc
pushf
sub
xor
or
out
je
fs
jp
retf
mov
cmp
add
or
or
mov
dec
cmp
inc
sbb
stos
mov
sub
push
cmp
adc
repz
sub
mov
or
or
or
jnp
and
bound
pop
std
adc
push
jecxz
or
push
es
fisttp
mov
fimul
mov
sub
and
push
or
and
mov
xchg
in
popa
mov
pop
idiv
jl
dec
fmul
xor
test
ins
mov
data16
push
mov
dec
jg
push
ret
inc
push
mov
in
inc
push
enter
and
inc
dec
or
push
mov
jns
cld
mov
lea
add
lahf
inc
xchg
adc
leave
fwait
je
test
nop
pop
repnz
in
and
dec
mov
popf
hlt
jbe
leave
xchg
inc
test
mov
adc
fisub
sahf
in
daa
dec
sahf
dec
inc
xchg
rcl
enter
pusha
loop
inc
repnz
je
sbb
or
jns
(bad)
cwde
lods
repnz
add
sbb
in
stc
xchg
push
mov
push
pop
sbb
pop
mov
dec
retf
adc
pop
xchg
hlt
jle
mov
add
or
rcr
adc
xor
daa
int
adc
jb
sub
xor
sub
sahf
mov
inc
mov
jle
and
stos
push
mov
dec
add
mov
rol
mov
fdivr
push
push
test
cmp
add
add
dec
nop
js
loopne
pop
inc
pusha
add
add
push
jmp
push
sbb
loope
lods
cmp
or
ret
mov
movzx
int3
lock
lea
mov
test
mov
gs
(bad)
xchg
add
add
test
test
rol
in
movs
jnp
add
(bad)
and
nop
sub
push
add
fisubr
sbb
repnz
sbb
hlt
push
ret
adc
cmp
dec
push
mov
add
mov
lds
movs
jp
add
daa
and
ins
mov
cmp
pop
loopne
mov
in
mov
cdq
mov
xchg
pop
xlat
or
sbb
addr16
js
mov
mov
in
jne
jae
sub
mov
pop
mov
je
mov
sbb
js
movs
lock
push
dec
ds
fnstsw
jecxz
pop
add
pusha
mov
mov
popa
fcom
push
pop
sub
or
dec
int3
add
(bad)
xchg
daa
cmp
je
or
push
scas
xchg
add
cmp
mov
cmp
adc
push
cmp
jo
push
inc
sub
add
clc
arpl
push
mov
jl
jne
lds
xchg
(bad)
add
jge
aas
les
les
mov
push
mov
rol
xchg
add
popf
call
dec
fcom
or
xor
shl
adc
movzx
or
cmp
(bad)
fstp
sub
lods
movs
out
mov
jo
shr
xlat
aas
aas
xlat
or
es
sub
into
sub
(bad)
out
cmp
sub
mov
repz
cmp
jg
cmp
jg
(bad)
jmp
push
in
or
into
test
push
or
mov
sub
pop
xor
cwde
mov
into
mov
lds
sbb
and
loopne
add
pop
in
pop
inc
adc
lahf
pusha
into
mov
call
ret
fisub
dec
and
rcl
dec
dec
xor
mov
and
cmp
js
pop
and
adc
shl
enter
sbb
stos
mov
sbb
push
adc
in
dec
ins
cld
pop
or
(bad)
out
fist
pop
and
cmp
sbb
repz
add
dec
pop
add
ret
ficomp
adc
pop
ja
nop
lods
sbb
or
push
and
inc
jmp
or
and
shl
sbb
(bad)
imul
cmc
scas
mov
pop
icebp
add
add
out
pop
and
xchg
push
and
loopne
fadd
mov
imul
xor
inc
add
pop
mov
xor
into
sbb
push
sub
pop
out
in
ror
es
sub
push
and
xor
and
or
popa
mov
jge
fcomi
add
shl
adc
retf
sub
movs
clc
add
pusha
mov
mov
inc
cmp
xchg
daa
sbb
lods
iret
setl
call
sub
enter
add
fiadd
and
cmp
rcr
xor
stos
dec
fldcw
call
xchg
jl
sbb
sbb
jbe
je
lods
inc
daa
push
mov
xchg
mov
out
xor
aad
inc
push
inc
sub
or
mov
xchg
sbb
and
shr
in
cmp
shr
sub
jne
test
push
jo
inc
push
cmps
inc
or
xor
loopne
fdivr
mov
cmps
push
mov
mov
retf
push
xchg
push
or
lea
dec
add
lea
les
ins
retf
add
call
neg
test
sub
cmp
add
cmp
shl
shl
nop
punpckhwd
and
les
sbb
sbb
xchg
inc
out
lds
add
inc
inc
dec
and
dec
loope
push
int3
jmp
fcomp
fs
jb
inc
mov
inc
jecxz
(bad)
xor
sbb
jmp
sbb
out
mov
or
(bad)
pop
mov
xlat
add
cmps
clc
add
add
add
adc
jnp
push
add
inc
inc
jmp
cwde
and
dec
call
icebp
xor
dec
call
(bad)
jne
pop
dec
push
push
test
mov
jae
jg
mov
mov
mov
inc
xor
call
pop
cld
(bad)
sub
jl
fiadd
neg
(bad)
sbb
jle
fiadd
std
pop
fist
das
mov
mov
stos
mov
cmp
jg
or
dec
aaa
shr
fcom
loopne
dec
xchg
les
push
or
inc
cwde
and
mov
imul
mov
dec
in
mov
xchg
mov
xor
loopne
cmp
inc
test
retf
push
inc
lea
push
xor
retf
clc
(bad)
xchg
retf
jbe
pop
add
xchg
mov
outs
out
popa
idiv
add
outs
dec
xlat
push
push
push
call
fld
dec
(bad)
int3
call
inc
sub
inc
add
mov
jo
(bad)
add
mov
push
add
push
jbe
adc
ds
ins
sub
sub
or
adc
push
test
mov
dec
pop
inc
push
ja
inc
or
dec
call
inc
inc
add
ret
push
adc
mov
push
stos
or
mov
cmp
mov
or
cmp
pusha
data16
hlt
fs
loope
adc
bound
jne
push
mov
dec
adc
mov
aam
or
call
push
icebp
xor
pop
into
mov
sbb
inc
and
mov
sub
xchg
and
xchg
adc
retf
cs
xor
mov
loope
cmp
iret
dec
retf
mov
ds
pop
jl
into
movs
into
mov
in
out
sub
pusha
pushf
aas
(bad)
stc
cs
lods
lock
pushf
sub
cwde
into
pop
or
push
in
ror
call
bound
test
leave
test
out
pop
sub
ss
loope
scas
sbb
xchg
adc
xor
adc
pusha
movs
out
div
jnp
jp
sub
push
sahf
into
xor
ja
or
mov
sbb
or
pop
pop
dec
arpl
outs
xchg
mov
(bad)
fsub
js
add
sub
(bad)
adc
xchg
mov
inc
add
mov
shl
mov
mov
mov
inc
lahf
sub
aaa
inc
cmps
or
add
and
into
scas
push
(bad)
jae
pop
clc
jns
out
sbb
add
mov
inc
retf
in
and
movs
std
maskmovq
not
pop
xchg
adc
das
call
adc
jb
ss
jmp
mov
cdq
push
test
pusha
adc
lods
into
idiv
sub
mov
dec
add
enter
adc
inc
mov
dec
out
lea
(bad)
test
addr16
fmul
nop
std
cmp
xchg
out
je
sub
mov
(bad)
xchg
jb
int
mov
xchg
sub
or
inc
xchg
pop
cli
(bad)
div
fbld
sbb
mov
es
hlt
add
add
cmp
mov
popf
mov
adc
and
push
arpl
mov
test
xor
sub
test
and
adc
add
dec
int
and
scas
sahf
and
(bad)
outs
and
pop
push
push
push
push
jnp
push
jp
loope
fistp
ja
inc
jmp
jg
jge
dec
sahf
mov
fsub
mov
rol
retf
dec
sub
nop
pop
mov
mov
ins
push
scas
std
push
xchg
mov
xor
mov
bound
neg
shl
loopne
cmp
add
xor
popf
mov
sbb
adc
lahf
inc
jne
clc
rcl
and
add
(bad)
scas
test
or
arpl
test
cmp
push
push
add
mov
xor
mov
mov
jg
in
repz
add
cmc
jb
sub
mul
imul
push
sbb
adc
inc
call
pop
cmps
rcl
inc
movs
push
jmp
lar
push
stos
xchg
inc
mov
daa
inc
out
or
add
je
outs
inc
out
fdivr
pop
xor
test
out
subps
mov
xchg
push
add
pushf
xchg
dec
fst
cmp
icebp
ud2
nop
test
mov
xchg
(bad)
jge
sti
cmp
mov
inc
push
pop
data16
add
jno
(bad)
cli
or
adc
lds
retf
retf
repz
add
adc
xchg
mov
or
adc
xor
jle
sbb
sbb
mov
nop
scas
or
(bad)
aam
ret
add
clc
ins
loopne
mov
lea
ror
ins
idiv
add
adc
add
and
jbe
pop
js
outs
mov
fmul
adc
dec
repz
cld
mov
inc
adc
adc
scas
sti
sbb
aad
cdq
add
and
cmps
pusha
(bad)
fist
and
je
call
jmp
adc
mov
jg
in
mov
adc
jae
pop
gs
adc
dec
out
enter
scas
pop
adc
jmp
sbb
mov
arpl
or
jne
push
push
dec
pop
dec
mov
jnp
and
xor
and
es
cmp
jae
mov
popa
bound
ret
cli
adc
xchg
adc
pop
dec
add
or
xchg
call
mov
jmp
sbb
ins
bound
cmp
sbb
push
dec
add
xor
(bad)
push
add
cmp
adc
lods
add
mov
mov
xchg
mov
pop
mov
das
fstp
sbb
movs
push
adc
sbb
cli
std
push
push
(bad)
les
in
push
jecxz
cmc
lds
scas
cli
cwde
adc
sbb
jne
jae
jno
lods
arpl
mov
dec
mov
pop
mov
or
in
or
rcr
xchg
pop
cmp
ds
or
lea
add
stc
in
bnd
dec
pop
or
jecxz
dec
mov
clc
pushf
rcr
mov
xchg
fmul
push
fmul
shr
dec
mov
mov
sub
clc
and
and
fdivr
add
stos
pop
sbb
sbb
js
push
outs
int3
mov
push
sbb
or
ja
iret
push
or
or
cli
cmp
inc
test
or
push
test
int
xchg
or
iret
adc
mov
jle
push
movs
ins
cld
push
jp
push
stos
aad
lea
loope
push
xchg
cmp
lods
or
sbb
icebp
cmc
ret
adc
push
(bad)
lock
and
ins
mov
nop
sub
sub
mov
or
jl
dec
cmp
sbb
mov
push
cmp
push
gs
loopne
cmc
fsub
pop
sar
and
pushf
pushf
setbe
scas
and
mov
hlt
not
movs
lea
in
sub
mov
jmp
sbb
pop
loopne
clc
jge
gs
lods
sbb
cmps
mov
xchg
push
pop
mov
sbb
push
push
sub
fsubr
lea
dec
ret
pop
ins
xor
push
cmp
and
inc
retf
in
or
scas
lea
into
cmp
add
sub
jmp
rcr
push
imul
xchg
ret
in
jo
ins
enter
in
mov
sub
popa
jns
add
adc
in
je
nop
dec
push
push
adc
pusha
xchg
shufps
or
outs
pop
inc
or
sbb
rcl
push
inc
jae
xlat
int3
jb
stos
test
or
cmp
stc
addr16
das
sub
xchg
out
in
push
and
sbb
push
repnz
or
inc
pop
push
push
bnd
aas
lods
xor
out
mov
test
cwde
xchg
or
sar
fwait
in
cld
(bad)
pop
jmp
lods
popa
stc
icebp
jmp
(bad)
out
sbb
xchg
ja
div
cmp
sbb
and
add
push
add
inc
pop
int
out
jo
jno
xchg
and
enter
repnz
inc
or
sub
scas
sub
mov
inc
mov
or
in
movd
add
add
cmp
sbb
or
add
cmp
test
pop
xchg
nop
inc
and
pusha
cmp
xor
mov
or
ret
rcl
sub
repnz
mov
popa
add
push
pop
pusha
pushf
and
or
in
jecxz
inc
into
adc
dec
ror
or
ds
test
or
xor
or
loop
jmp
nop
pop
jb
adc
or
cmp
in
jmp
cmp
les
inc
ins
sub
(bad)
je
mov
jmp
nop
inc
sbb
in
scas
jmp
mov
pop
neg
popa
adc
pop
inc
fst
pop
xor
mov
(bad)
cmc
or
popa
dec
adc
xchg
dec
pop
enter
adc
and
pop
pop
inc
repnz
jmp
mov
jo
stos
inc
dec
jno
jmp
jmp
pop
mov
test
mov
test
stc
dec
test
jg
pusha
pop
sub
sbb
ret
es
in
fsub
and
in
mov
jmp
sub
fstp
inc
push
and
fstp
jmp
dec
mov
inc
inc
pusha
xchg
mov
add
data16
mov
xchg
push
and
add
jb
rol
nop
pop
leave
mov
test
in
sbb
cwde
xor
adc
out
arpl
dec
mov
dec
ins
lahf
jmp
xor
test
shl
pmulhuw
mov
xchg
rol
scas
lods
push
mov
test
dec
mov
out
sub
mov
(bad)
pop
xchg
jno
test
dec
call
cmp
(bad)
rcl
or
aas
cdq
add
cld
inc
adc
ucomiss
adc
mov
sbb
xchg
and
test
mov
xor
mov
jns
push
push
stc
push
loope
rol
enter
add
imul
test
push
jns
jmp
leave
dec
jne
pusha
mov
imul
jns
pop
div
inc
je
jno
xchg
repz
xchg
push
and
add
cmc
sbb
leave
cmps
repnz
int
je
and
cmp
mov
pop
jno
jmp
jg
leave
xchg
push
inc
add
inc
cmc
outs
mov
jne
lods
push
jp
leave
and
and
adc
or
repnz
xlat
add
xchg
add
in
and
lods
lods
and
mov
add
sti
fistp
inc
push
loopne
jne
dec
push
jmp
test
cli
pusha
push
aas
mov
test
es
lock
push
jl
sbb
pop
test
loope
or
pop
push
jl
pop
add
retf
xor
cmp
adc
or
jmp
jmp
les
das
jge
ret
fidivr
add
std
pop
mov
sbb
clc
and
sbb
pop
mov
pop
loop
mov
imul
or
jb
inc
cmp
fisttp
push
in
rol
xor
or
rcr
retf
mov
out
mov
xor
xchg
mov
and
or
dec
aaa
stos
add
bnd
sbb
inc
repnz
out
and
nop
int
pop
sar
push
mov
test
fwait
std
movs
test
inc
sub
push
stc
jbe
pusha
lods
inc
xor
sub
sub
out
add
lock
(bad)
ficomp
aas
jne
mov
jecxz
inc
test
in
jp
lods
sub
xor
push
(bad)
jb
mov
out
rol
push
cmp
loope
dec
inc
cmp
jne
push
lods
inc
(bad)
mov
push
cmps
call
(bad)
cmc
(bad)
jns
add
xor
popa
xchg
lea
int3
and
mov
imul
push
xchg
dec
adc
mov
mov
xor
jbe
push
or
sbb
mov
xor
xor
xor
xor
test
push
repnz
into
xchg
adc
adc
xor
iret
sbb
ret
test
rcr
xor
xor
in
adc
js
and
fisttp
fnstsw
sbb
mov
out
out
pop
adc
xchg
fisttp
and
or
and
add
mov
add
or
xor
dec
mov
fbstp
add
xchg
cmp
sub
mov
or
aaa
sbb
mov
call
retf
jmp
adc
in
sub
les
mov
cmp
jmp
push
push
or
lock
jmp
or
sub
idiv
sar
dec
daa
sar
add
xor
and
pusha
mov
rcl
mov
inc
cmp
push
outs
jge
jmp
jmp
adc
and
retf
leave
and
jnp
popf
xor
mov
(bad)
add
dec
loop
push
cmp
ins
xor
xchg
loopne
stos
fwait
or
out
push
push
xchg
and
cmp
cmc
add
in
sar
and
and
iret
iret
xor
ja
sbb
dec
dec
push
add
out
sub
and
icebp
ss
pusha
or
xchg
jmp
pop
mov
aaa
pop
jg
jmp
mov
or
test
or
sub
xor
in
xchg
int
pusha
mov
js
je
call
ins
cmp
push
jne
mov
adc
xchg
xchg
xchg
retf
add
fwait
dec
stos
jbe
sbb
aaa
leave
cwde
or
daa
fcomp
mov
mov
je
mov
stos
outs
dec
jge
pop
js
jge
or
mov
jne
jmp
shl
jae
jl
jmp
pop
std
gs
std
repz
mov
cmc
(bad)
stos
push
push
jo
jne
mov
lea
pop
ffree
jl
es
pop
mov
mov
add
push
cmp
sub
stc
adc
lock
out
and
pop
ret
sbb
lock
js
imul
cld
add
nop
out
or
cmp
mov
dec
mov
inc
sbb
and
cmp
shl
pop
cs
mov
mov
adc
cld
lock
sbb
or
ins
or
lods
in
imul
in
or
cld
sbb
cld
xor
push
dec
sbb
jb
lods
sbb
cdq
test
add
adc
mov
pop
dec
das
add
push
mov
mov
mov
and
cwde
fucomip
and
into
out
jns
and
lea
rcl
js
cli
into
fisttp
mov
dec
add
jmp
pop
add
inc
adc
cmp
inc
rol
lods
scas
sbb
pusha
std
mov
mov
push
adc
mov
sbb
cmp
cmp
or
test
sub
adc
adc
inc
cli
cld
jns
or
sub
ror
(bad)
cmc
lods
(bad)
out
int3
bound
fild
adc
out
rcr
(bad)
shr
xor
in
add
mov
pusha
test
lock
and
jns
xor
add
fst
pop
jmp
jmp
push
leave
and
sub
pop
mov
fs
lock
inc
pop
in
inc
jb
cs
(bad)
xchg
xchg
cld
repnz
or
jns
psllw
push
add
jns
inc
icebp
xor
pop
leave
in
pop
movs
fs
mov
mov
mov
lods
adc
outs
stos
jmp
and
in
scas
in
adc
enter
and
or
mov
xchg
and
mov
or
adc
mov
les
mov
jo
in
call
adc
mov
sbb
jno
lds
pop
call
in
repnz
mov
add
add
cmp
repz
repnz
adc
jnp
sbb
and
retf
idiv
jmp
and
jmp
inc
xchg
dec
sub
jmp
dec
push
shl
es
add
lea
clc
add
jne
add
adc
sub
jge
loopne
imul
std
enter
inc
ins
push
mov
pop
test
pop
nop
add
nop
and
sbb
push
sbb
or
jp
enter
nop
sub
or
cs
sbb
fsub
mov
jmp
in
imul
loop
inc
mov
popf
dec
jae
adc
dec
mov
aaa
jge
mov
pop
imul
rcl
(bad)
pop
or
sahf
ja
mov
div
xchg
xchg
fldenv
and
out
outs
add
mov
or
jg
scas
retf
enter
or
iret
or
das
std
dec
jb
jo
inc
mov
in
lods
das
or
pop
mov
xor
cdq
lods
sub
and
push
push
repnz
mov
adc
add
xor
inc
lods
push
test
jl
pop
ja
sbb
push
addr16
dec
mov
fiadd
xor
mov
mov
push
adc
xor
xchg
lods
or
mov
ja
sub
and
lock
push
add
cmp
fnstenv
rcl
and
and
push
rcl
xchg
outs
and
ret
xchg
mov
loop
sbb
xchg
pop
jp
push
or
mov
inc
add
lods
in
test
add
stos
cmp
sbb
pop
stc
movs
inc
mov
push
xor
clc
push
or
add
inc
jo
(bad)
cmp
or
mov
jb
je
or
jo
xchg
pop
add
dec
pop
push
add
outs
pop
sub
pop
inc
mov
jo
cmc
xchg
or
sbb
and
daa
outs
jecxz
ja
dec
scas
pop
and
dec
mov
dec
out
shl
and
add
xor
(bad)
adc
imul
fimul
aas
sbb
lock
mov
lock
sbb
add
test
mov
pop
pop
ins
sbb
xlat
jo
je
repz
pop
ins
dec
pusha
sub
sub
push
ja
loopne
push
adc
inc
call
sahf
les
cmp
nop
jmp
pop
sbb
and
in
pop
ret
mov
enter
int3
rcl
dec
cmp
cmp
mov
int3
and
fs
xor
enter
pushf
rol
stos
nop
pop
mov
mov
repz
jo
jmp
or
cdq
and
cmp
inc
inc
out
adc
pop
(bad)
push
sub
xchg
stos
cmps
inc
cmp
sbb
pop
sbb
cwde
test
or
sbb
push
pop
xor
inc
pop
lea
inc
jp
aas
dec
std
cmovb
ss
test
nop
dec
sub
inc
inc
sar
movs
test
adc
push
add
push
push
dec
aaa
dec
push
jns
xchg
in
in
sub
and
enter
push
jns
pop
mov
dec
test
add
fwait
mov
ret
aas
dec
shl
pop
push
nop
adc
jb
xchg
pushf
sbb
in
movs
add
(bad)
std
push
je
xchg
jle
(bad)
cmp
adc
and
push
pop
and
loopne
outs
pop
in
add
std
add
enter
dec
imul
adc
push
pop
add
cld
mov
and
sub
test
mov
dec
mov
add
or
jb
hlt
or
ror
adc
inc
hlt
adc
fidiv
xchg
mov
and
in
xchg
loope
add
xchg
add
test
enter
cmp
jge
xor
aam
shr
test
push
or
push
pop
pop
cmp
adc
pusha
push
dec
mov
cmp
cld
test
leave
jl
and
mov
cdq
push
add
and
bound
aam
pop
and
adc
adc
push
and
lods
dec
dec
sub
xchg
add
sbb
in
push
pop
xchg
ret
xor
mov
hlt
je
and
hlt
enter
inc
scas
pop
or
adc
or
mov
out
xchg
dec
mov
sbb
dec
inc
leave
mov
int3
das
push
fstp
pop
cmp
div
sbb
cs
out
out
addr16
jb
xchg
imul
das
into
sbb
pop
sahf
pop
cmps
sahf
sub
icebp
mov
adc
or
mov
out
(bad)
popf
in
sub
daa
inc
lea
stc
and
jle
push
push
mov
mov
jne
loope
cmp
xchg
jl
cmp
cmp
mov
cmp
jle
movs
sub
mov
sub
cmp
jbe
push
sar
arpl
jae
lea
inc
and
sbb
into
xor
repz
sbb
pop
cmp
call
jl
clc
mov
pushf
mov
push
push
jmp
xchg
and
push
in
push
add
in
into
mov
imul
popa
fst
or
sbb
inc
out
enter
xchg
push
cwde
inc
cwde
js
adc
popa
aas
sbb
and
push
or
add
xor
imul
pop
and
or
lock
retf
and
pop
mov
add
push
icebp
mov
jnp
xor
out
inc
add
aas
neg
push
loop
xchg
in
or
inc
xchg
call
adc
stos
pop
sub
mov
pop
pusha
popf
(bad)
rol
dec
mov
je
xchg
mov
out
add
push
xor
add
pavgb
mov
add
or
and
lods
adc
adc
push
fimul
pushf
popa
test
loop
jb
ja
inc
mov
divps
dec
cmc
lahf
mov
outs
(bad)
aaa
cmp
mov
shl
loopne
rcl
add
movs
ins
pop
add
mov
inc
mov
jnp
jne
test
xlat
push
jb
add
ja
cmp
jge
mov
mov
mov
imul
mov
jl
cmp
test
pop
lock
mov
pop
adc
push
adc
test
aaa
add
es
or
aas
lods
aas
pushf
pop
je
dec
and
xchg
jnp
ror
xor
dec
pop
push
(bad)
cmc
adc
sbb
and
pop
dec
jnp
test
scas
jge
sub
cs
or
movs
mov
cmp
or
adc
and
adc
mov
sbb
mov
(bad)
stos
call
mov
jb
push
lods
cmp
sbb
scas
xor
ret
mov
mov
int3
inc
xchg
inc
das
mov
jne
pushf
sub
dec
mov
add
ins
jo
adc
xor
xor
dec
js
pushf
call
xor
dec
rcr
mov
int3
sbb
leave
pushf
into
mov
add
pop
dec
adc
loope
cmps
or
in
mov
shl
jmp
and
dec
or
or
lock
pushf
es
repnz
add
xor
leave
xchg
dec
jbe
aad
cmc
inc
test
loopne
dec
and
cmps
lea
ja
pop
or
mov
xchg
jns
or
add
(bad)
in
pushf
call
iret
pop
gs
sahf
or
sbb
dec
jb
loope
je
loope
or
push
mov
mov
jae
ret
cmp
jl
jle
pop
sub
adc
push
enter
mov
pop
adc
dec
pusha
mov
push
xor
add
in
jbe
ffree
xor
xchg
add
add
pop
xor
mov
sub
jns
jo
cli
call
adc
sbb
mov
cmp
je
mov
in
mov
mov
shl
add
push
or
inc
cmp
mov
popa
mov
cmp
fsubr
pop
push
je
cli
sbb
shl
dec
and
pop
sti
sbb
push
movs
and
xchg
adc
pusha
sbb
push
sbb
jno
cmp
jbe
and
or
cmps
mov
in
out
mov
mov
shl
(bad)
in
out
or
cli
sbb
ror
adc
fidiv
mov
shr
imul
retf
lea
mov
movs
hlt
cmp
jbe
ds
sbb
adc
into
or
iret
and
jbe
sub
push
enter
mov
stos
mov
inc
add
lods
in
push
add
or
inc
loop
push
(bad)
pop
popa
sbb
cmp
cmps
cmp
pop
fadd
push
imul
sbb
dec
push
sbb
mov
inc
sub
ss
out
mov
and
or
movsx
mov
pop
or
sub
inc
cmp
in
jl
add
adc
gs
add
add
or
(bad)
jmp
repnz
push
pop
and
or
xor
jae
push
pushf
pop
mov
mov
push
inc
cmp
out
jg
push
and
fsubr
pop
jmp
sub
repnz
and
test
xor
dec
inc
fiadd
sub
pop
jmp
pop
inc
or
sub
push
or
jo
xor
mov
inc
loopne
fcmovnu
int3
push
jle
cmp
lea
dec
pop
in
lods
sahf
cmp
jl
mov
add
mov
mov
cs
add
sub
js
inc
inc
inc
(bad)
int
dec
movd
lods
cwde
dec
fiadd
mov
add
adc
inc
aam
jl
mov
mov
in
push
and
push
adc
cmp
jl
fld
(bad)
pop
add
adc
push
or
int
in
add
push
aad
es
and
push
lods
lods
loopne
pop
sahf
ret
call
push
cmp
jge
mov
daa
test
push
test
rol
cmp
test
jg
pop
mov
and
sbb
jp
mov
cmp
xor
es
popf
retf
jmp
add
xor
in
int3
add
fucomi
sar
dec
xchg
dec
mov
add
stc
shl
retf
sub
bound
sub
mov
add
add
mov
dec
jl
or
add
cmp
mov
pusha
pop
cmp
test
mov
test
push
jmp
and
inc
pop
jno
or
ins
pushf
into
ins
adc
mov
sub
add
test
movzx
les
adc
ret
or
stos
sub
pop
nop
or
pop
es
xchg
ins
sub
ins
xor
loope
shl
and
mov
clc
mov
mov
push
lahf
sub
add
es
xchg
mov
repz
and
fsubr
push
ret
cwde
mov
mov
inc
(bad)
jmp
pop
cdq
add
mov
add
mov
mov
or
cmps
lods
xor
mov
test
add
stc
mov
lea
lods
sbb
(bad)
mov
loop
cdq
fadd
shl
push
inc
push
mov
lods
and
cmp
cmps
into
mov
sbb
push
fld
pushf
mov
inc
add
adc
or
inc
mov
test
mov
sti
adc
sbb
ins
push
jnp
inc
add
inc
test
loop
pusha
mov
retf
mov
push
lea
or
test
inc
add
xor
sti
sub
pop
(bad)
cmp
clc
xor
mov
stos
dec
sar
add
pop
das
cmp
or
jge
jmp
inc
jl
jnp
and
and
mov
js
push
push
pushf
jge
std
js
dec
scas
fst
dec
adc
inc
mov
adc
(bad)
cwde
ins
inc
or
xchg
call
cmp
pushf
ret
jle
out
shl
mov
shl
add
shr
retf
sub
adc
mov
cmp
test
push
call
add
in
add
mov
sti
or
sar
rcl
jl
lods
xor
push
push
enter
inc
cmp
mov
jmp
mov
imul
nop
xor
and
fdiv
mov
push
das
adc
mov
mov
mov
rcr
adc
sub
scas
sub
add
mov
je
lock
imul
gs
mov
pop
or
push
(bad)
addr16
add
sahf
sbb
and
scas
adc
mov
add
dec
xchg
add
or
pusha
push
ds
push
jg
retf
gs
les
dec
cmp
xchg
push
xor
push
(bad)
rcr
inc
cmp
sbb
inc
cmp
sbb
and
sub
mov
lods
or
fwait
aam
sbb
scas
dec
mov
lahf
xchg
inc
sbb
ret
jle
mov
jg
jbe
fild
jbe
fwait
ins
fdivrp
fstp
in
popf
push
dec
adc
xchg
xchg
sbb
xchg
and
(bad)
sahf
cmp
add
cdq
fisubr
adc
movs
xor
inc
les
mov
dec
movs
jl
fs
add
pop
das
ret
cmp
pop
lea
pop
leave
stc
mov
cmp
mov
dec
fld
add
movs
aad
sbb
mov
jnp
imul
scas
repz
dec
and
jle
push
mov
add
dec
loopne
mov
dec
xchg
sbb
sti
mov
popf
xor
mov
(bad)
or
lods
iret
cmp
cmps
pop
loopne
sahf
push
dec
add
cmp
les
ret
jp
icebp
movs
mov
stos
cmp
and
icebp
je
out
add
xchg
ret
dec
pop
and
rcl
jle
adc
popa
push
push
fisubr
sbb
push
pop
test
mov
dec
mov
pop
pop
cmp
cmp
mov
lahf
ror
mov
sub
fldenv
xchg
jge
in
adc
fdivr
movs
pushf
(bad)
or
scas
pop
pop
pop
inc
ja
sub
mov
pop
push
sbb
cli
dec
je
push
push
clc
test
jmp
push
pop
push
movs
adc
cmps
dec
stos
sbb
cli
push
and
inc
popa
mov
idiv
shr
cmp
mov
add
or
pop
scas
movs
popf
nop
xor
xchg
shl
cmps
gs
loope
inc
xchg
sbb
fiadd
aam
mov
or
push
mov
pop
shr
mov
movs
mov
or
mov
test
mov
push
xchg
(bad)
or
test
pop
daa
jo
sbb
psubq
ror
add
adc
mov
jl
jo
inc
xchg
fs
dec
stc
add
in
and
call
adc
pop
cwde
xor
add
mov
or
faddp
or
and
xor
int
(bad)
cli
mov
cwde
xchg
in
cs
xchg
pushf
mov
(bad)
cli
test
pop
enter
and
nop
in
inc
call
or
mov
lods
mov
leave
test
lods
nop
and
add
dec
cs
and
adc
(bad)
(bad)
enter
xchg
dec
(bad)
int3
mov
mov
pop
enter
pop
leave
inc
jb
mov
(bad)
rol
adc
mov
sub
sar
xchg
sub
xchg
movs
and
push
push
dec
xor
adc
jecxz
add
mov
push
or
cwde
scas
shr
push
sub
adc
aam
popf
jnp
shl
mov
sbb
test
mov
push
add
mov
arpl
dec
push
pop
sbb
(bad)
mov
sbb
gs
dec
jmp
dec
xchg
mov
and
or
or
add
pop
jbe
mov
das
sar
inc
or
(bad)
jne
add
inc
loope
and
add
sti
mov
fadd
fistp
cmp
jl
push
push
mov
stos
add
ja
push
cs
or
ficomp
scas
mov
leave
and
arpl
aaa
shl
cmp
mov
push
inc
xchg
push
adc
gs
push
jo
stos
ret
dec
fs
sub
lahf
dec
pushf
(bad)
sbb
push
cmp
inc
bound
fiadd
lods
test
inc
and
add
test
xchg
movs
leave
enter
push
mov
cmp
or
pushf
mov
cmp
sub
mov
cmp
cmp
push
icebp
mov
push
movs
mov
mov
popf
cld
ss
push
clc
hlt
jno
jne
adc
dec
mov
aas
pop
repz
jg
or
pop
daa
add
xchg
adc
hlt
xchg
cmp
out
sub
or
mov
fucomip
lea
push
inc
inc
je
sbb
aaa
mov
call
fs
add
xchg
ss
ss
cmp
fwait
inc
sub
dec
movs
pop
mov
sar
shr
adc
pop
push
ficomp
mov
add
into
and
mov
not
cmp
and
add
mov
cli
fiadd
(bad)
mov
or
xor
sub
inc
jb
dec
or
imul
sbb
cmps
sub
cmp
imul
xchg
xchg
and
cli
daa
daa
out
imul
idiv
sub
add
inc
sbb
pop
fcom
icebp
cmp
clc
xchg
fwait
mov
js
pusha
fisub
loopne
mov
in
push
in
xchg
sub
sti
mov
mov
jb
jge
and
jle
jne
jbe
cld
iret
lods
mov
inc
and
mov
jp
cld
cli
push
lods
sbb
push
push
lea
jmp
repnz
cmc
cmp
adc
xor
push
add
mov
pop
daa
cmp
mov
cmp
test
jle
sbb
and
test
mov
pop
das
test
mov
jmp
std
and
push
popa
mov
pop
es
test
adc
xlat
pusha
lock
inc
shr
xchg
repz
in
cld
adc
stos
add
inc
and
mov
adc
pop
add
sbb
mov
jle
outs
push
or
call
scas
lahf
mov
add
enter
lahf
aam
jmp
add
ret
into
rol
mov
add
dec
add
xchg
call
add
jnp
lea
pop
outs
les
cmps
sbb
sub
or
mov
mov
add
jo
sti
cmp
pop
mov
and
and
push
dec
nop
jp
push
cmps
(bad)
pop
lea
push
shl
mov
mov
jge
dec
push
dec
jne
mov
pop
or
enter
pop
add
int3
bt
repnz
lea
adc
adc
aam
sar
jnp
or
push
add
test
mov
jle
lock
cmp
je
and
add
int
and
inc
mov
fimul
xchg
(bad)
cmp
sbb
push
sar
fadd
dec
test
mov
ins
js
or
adc
mov
es
adc
adc
cmp
add
das
and
jb
xchg
test
stos
in
lea
repnz
cmp
and
mov
xchg
sbb
movs
xor
pushf
in
not
adc
xchg
outs
cmp
arpl
mov
jbe
leave
fisttp
adc
adc
int3
mov
imul
jmp
dec
ja
mov
xor
scas
imul
das
iret
rol
xchg
(bad)
sub
repz
inc
dec
sbb
es
push
mov
mov
dec
xor
sbb
mov
push
pop
(bad)
clc
mov
or
test
pop
sub
test
and
les
or
xor
cmps
xor
dec
pop
popf
jl
xor
scas
and
or
mov
or
test
lods
dec
xor
add
sbb
add
xor
loop
jp
fs
test
push
test
adc
shr
xchg
adc
cmp
pop
rol
ror
clc
cmps
jp
imul
jnp
adc
cld
jne
enter
add
dec
jae
jecxz
adc
popa
and
(bad)
jmp
pop
fstp
pop
sub
out
mov
js
adc
sub
xor
mov
or
xchg
add
pop
inc
dec
pop
push
push
mov
xor
mov
stc
mov
add
and
cli
cld
test
add
xor
pushf
xor
dec
mov
shr
add
call
sub
mov
inc
and
test
inc
hlt
mov
test
enter
test
and
or
pop
push
sbb
lods
out
add
push
sbb
push
popf
jne
icebp
(bad)
or
xor
add
add
or
mov
xor
jl
jmp
adc
sub
lds
push
cmp
pop
or
and
(bad)
push
mov
inc
push
leave
push
fld
ror
adc
test
adc
jb
jmp
call
mov
jecxz
scas
xchg
lods
je
mov
adc
sbb
jecxz
ins
mov
test
push
xchg
ror
pop
jo
mov
adc
in
daa
jb
fsubr
push
jo
test
xchg
jo
loopne
adc
xchg
sbb
mov
movs
fld
and
jno
scas
in
push
lds
mov
or
xchg
or
call
je
jecxz
and
or
mov
mov
and
mov
mov
xor
and
in
sbb
sub
cmp
and
movs
pop
inc
mov
mov
(bad)
jmp
and
push
mov
add
sbb
cdq
and
jmp
out
pusha
inc
retf
mov
fcmovbe
outs
push
or
jns
icebp
push
pop
ds
fisubr
cmp
push
mov
or
adc
sar
mov
rcl
lods
cmp
jmp
mov
xor
js
(bad)
shl
rcl
add
cmp
or
jmp
add
mov
sub
aad
mov
push
mov
popa
mov
add
xor
jo
rol
mov
sbb
shr
jb
adc
jmp
js
dec
mov
or
push
aam
jae
mov
stos
inc
mov
call
push
js
push
gs
mov
inc
sbb
loopne
and
mov
add
test
push
mov
rcr
test
icebp
dec
in
popa
or
dec
dec
add
or
xor
fldenv
jmp
out
lods
cmp
jl
mov
nop
fcmovb
jbe
add
pop
les
sub
in
pop
jle
bound
xlat
ror
sbb
mov
pop
call
fld
fsub
pop
cmp
mov
dec
sub
mov
cmp
add
div
fdivrp
mov
sub
out
pop
fstp
and
xor
push
xor
dec
xchg
xchg
push
xor
push
mov
and
and
jg
and
xchg
dec
xchg
int
dec
cmps
arpl
js
pop
or
jmp
enter
sbb
cmp
sbb
sbb
out
mov
(bad)
jno
sbb
mov
mov
jno
pushf
test
inc
mov
xchg
add
lea
clc
cmps
das
sar
test
add
push
xchg
add
or
add
nop
or
dec
jns
ror
mov
sbb
inc
mov
mov
mov
hlt
xor
gs
mov
lods
in
mov
jns
aaa
inc
imul
jne
add
add
out
je
or
pop
aaa
lea
lock
push
push
(bad)
leave
retf
pop
xor
std
sbb
aas
dec
adc
dec
add
sbb
ins
jbe
mov
cmps
push
pop
jo
ss
push
push
cwde
(bad)
pop
mov
dec
xchg
iret
es
lock
push
cli
fld
mov
jg
adc
dec
jbe
hlt
mov
ds
sub
and
mov
dec
push
inc
scas
dec
cmp
pop
jle
lods
mov
neg
aaa
mov
dec
cmp
movs
push
fistp
push
push
xor
cwde
push
test
and
jmp
push
push
sub
std
inc
loop
icebp
xor
xchg
jne
mov
inc
push
cwde
les
lea
or
mov
xor
pop
pop
pop
add
add
test
test
and
arpl
(bad)
in
lock
mov
jb
fdiv
mov
cdq
push
push
push
add
push
jno
adc
popf
jno
sub
(bad)
push
mov
jnp
fmul
pop
pop
xchg
mov
cmp
inc
dec
and
cmp
pop
ret
mov
and
adc
pusha
push
in
sub
and
jo
and
iret
adc
retf
(bad)
cli
xchg
adc
push
dec
add
add
int3
dec
mov
mov
enter
xchg
pop
pop
jb
or
clc
aad
push
stos
dec
mov
jmp
mov
cwde
push
sbb
ret
jp
int
js
sub
loop
fcomp
repnz
ins
das
dec
pop
fdiv
rcr
pop
call
in
and
add
pop
(bad)
in
cmp
mov
cli
xor
pop
adc
mov
ja
xchg
loopne
add
jnp
aam
(bad)
adc
add
add
xlat
xlat
int
fsubr
push
int
dec
jmp
inc
or
call
add
(bad)
push
sub
and
lea
cdq
cmps
sub
adc
cli
cld
push
fild
or
shl
pop
shl
in
mov
push
xor
push
mov
sti
add
add
ins
stc
xor
xor
cmp
mov
and
test
add
jmp
mov
dec
adc
inc
jle
xor
rcl
outs
out
sub
mov
ja
shr
xor
push
and
iret
adc
jge
rol
clc
pop
hlt
stos
fnsave
sbb
dec
mov
xor
(bad)
mov
lods
jnp
push
das
(bad)
mov
xor
into
pop
ds
lock
hlt
test
call
or
xor
jnp
stc
stc
push
cmp
out
inc
adc
fistp
(bad)
lock
inc
pop
pop
sub
f2xm1
scas
sbb
add
jmp
jno
test
fs
cmp
lds
cmp
jmp
push
xor
loopne
or
outs
or
dec
mov
inc
sbb
test
scas
cmp
add
retf
(bad)
xchg
cmps
retf
sbb
inc
mov
or
push
inc
inc
cdq
retf
icebp
and
mov
scas
or
jmp
or
dec
cmp
scas
and
pop
shl
add
(bad)
repnz
ins
pop
ror
xor
sub
or
scas
sbb
aam
adc
lods
mov
mov
and
add
stos
cmp
jle
aaa
movs
outs
test
push
lea
ss
mov
cmp
pop
cwde
mov
scas
fwait
push
int
dec
stos
push
adc
pop
movs
aam
jl
adc
jne
retf
loopne
stos
pop
mov
push
jmp
les
inc
or
lods
push
fwait
xor
sbb
data16
or
aas
xor
xchg
dec
sbb
xchg
jp
cmp
pusha
jmp
aam
sahf
and
mov
jo
adc
daa
aam
pop
std
shr
cmp
adc
stos
inc
cmp
out
jnp
movs
aad
dec
hlt
push
sti
mov
push
fsubp
adc
cmp
je
call
sbb
or
dec
hlt
add
sti
fs
pusha
pop
add
xlat
loopne
pop
or
and
xor
(bad)
clc
or
int
aaa
push
jmp
inc
daa
inc
outs
repnz
or
rcr
adc
mov
mov
jbe
push
mov
xor
out
inc
imul
adc
pop
loopne
xchg
rcl
cmp
and
xor
in
xor
and
sbb
rol
push
and
add
push
xor
xlat
(bad)
push
jne
cwde
enter
add
xchg
jle
hlt
(bad)
(bad)
popa
mov
push
sti
push
mov
repz
leave
mov
loope
pop
test
pusha
and
rcl
xchg
popf
les
jl
adc
in
fcom
and
nop
mov
stc
adc
pop
pop
stc
nop
mov
popa
mov
mov
add
adc
ret
sub
cwde
xchg
lea
dec
and
nop
inc
add
xchg
jnp
cmp
cwde
pushf
or
fwait
lea
mov
enter
mov
mov
mov
add
xor
adc
xchg
sbb
cdq
scas
(bad)
cmp
or
ds
in
ins
jp
cwde
pushf
add
inc
push
fidivr
(bad)
int
int3
leave
loop
in
xlat
lea
les
add
and
test
inc
imul
fsub
mov
and
and
push
add
sub
test
sub
inc
add
js
add
inc
mov
ss
hlt
xchg
loopne
pop
add
ficom
pop
adc
ss
mov
or
retf
ror
or
push
mov
xlat
fisub
mov
jle
jle
enter
and
ins
imul
cmp
neg
sar
add
or
fst
psllw
mov
add
fcomp
xor
leave
jne
lock
cmp
inc
ins
or
je
or
cdq
adc
or
imul
and
and
xlat
lock
(bad)
and
sbb
push
add
push
xor
xor
int
daa
or
fadd
sub
test
call
cld
imul
cmp
jl
mov
add
cmp
mov
out
jne
dec
inc
jmp
mov
inc
cmp
jge
dec
xchg
out
fiadd
inc
add
inc
stos
fwait
icebp
js
inc
mov
add
push
mov
jmp
shl
cmp
xchg
mov
xor
clc
loop
ja
inc
inc
mov
inc
jp
jns
cli
sbb
leave
add
in
adc
xor
push
call
rol
test
rcr
test
out
mov
fs
adc
mov
or
add
scas
adc
rol
jbe
cmp
and
pushf
push
sbb
xor
push
mov
adc
jne
sub
adc
cmp
inc
jmp
mov
mov
or
sub
mov
ror
mov
inc
cmp
pop
adc
cmp
(bad)
push
nop
xor
mov
cdq
adc
xor
dec
icebp
enter
jle
mov
add
or
push
adc
or
imul
inc
in
and
push
push
inc
and
xchg
cmp
mov
cmps
xchg
aaa
pop
mov
push
adc
(bad)
jmp
fild
vrndscalesd
aad
or
mov
nop
loope
push
or
jb
rcl
int
test
and
(bad)
fsincos
dec
cmp
sbb
adc
push
lahf
sbb
test
pop
sub
jnp
mov
add
sbb
js
lea
cmc
shr
lahf
mov
mov
inc
cdq
iret
es
add
sub
mov
xchg
pop
imul
pop
add
dec
adc
sub
int3
add
sbb
cmp
mov
add
dec
push
jns
mov
test
mov
pop
jbe
fwait
mov
pop
leave
int3
movs
inc
add
xchg
sbb
or
inc
cmp
fcom
aam
(bad)
movs
lods
test
inc
or
add
push
bound
and
out
cwde
pop
inc
cs
jl
bound
aad
cmp
or
lahf
shr
push
sti
push
adc
or
mov
(bad)
out
pop
rol
das
imul
mov
inc
stos
push
dec
es
out
cmp
xor
call
int
add
lods
mov
not
or
sub
pop
dec
je
or
shl
or
adc
iret
or
cli
adc
dec
xor
arpl
test
loopne
sbb
dec
(bad)
hlt
fild
cmps
pop
xchg
fcmove
paddb
or
test
add
push
jmp
js
push
adc
adc
sub
push
or
iret
adc
dec
fldcw
sbb
mov
sub
inc
aas
inc
cmc
fnsave
mov
shl
adc
jo
dec
scas
ror
lock
aam
cs
shr
pop
dec
xor
mov
rcl
cmp
jne
cli
nop
push
jne
add
mov
mov
mov
sbb
and
add
retf
dec
cmp
scas
inc
popa
inc
in
sar
sub
clc
in
jmp
xchg
mov
add
pop
mov
es
push
ret
and
test
cwde
fadd
repz
mov
mov
repnz
sahf
pop
repz
inc
or
or
out
out
cmp
(bad)
push
stos
xchg
adc
sub
js
dec
mov
dec
jl
push
cmps
jg
out
popa
sti
ficomp
mov
adc
sub
shl
gs
cmp
and
imul
or
cmp
or
in
sbb
jmp
ins
add
or
push
xchg
ret
sbb
jne
nop
push
xor
mov
movs
fcmovnb
daa
xchg
dec
sbb
or
movs
jmp
xchg
inc
scas
or
je
dec
ror
inc
mov
jg
add
test
shl
xchg
and
sub
pop
and
add
mov
push
mov
cs
cs
sbb
cli
xor
push
lea
and
push
sbb
sbb
add
sbb
shl
cmp
and
cmps
pop
ret
fisttp
or
sbb
fsubr
or
cmp
pop
(bad)
jb
dec
cmp
ins
je
push
pusha
ja
mov
add
je
frstor
cmp
push
into
cmp
adc
cmp
popa
xchg
and
mov
cmps
mov
xchg
adc
mov
adc
mov
mov
stos
cmps
pop
mov
push
mov
mov
add
das
push
std
loopne
push
sub
(bad)
adc
or
test
pop
popa
mov
bound
arpl
std
xor
arpl
sub
aaa
sbb
movs
jae
push
inc
mov
sub
clc
sbb
(bad)
and
sbb
fstp
or
adc
adc
xchg
pushf
add
push
jp
adc
cmp
mov
dec
out
add
and
adc
cmp
mov
cmp
imul
pop
add
mov
sub
stos
fisttp
pop
stc
cli
enter
sub
dec
enter
test
sti
enter
sub
mov
adc
add
loope
mov
aas
mov
and
repnz
bound
or
push
comiss
iret
or
ror
mov
push
mov
ja
or
pop
aas
pop
stos
std
dec
xor
aaa
xchg
sub
add
jl
sbb
mov
jle
cmp
es
imul
test
xchg
mov
mov
stc
mov
ror
jo
sar
pop
adc
loope
add
sub
mov
dec
cmp
nop
push
push
clc
cmps
push
ins
add
and
pop
dec
mov
push
dec
inc
cmps
shl
test
sbb
lea
push
push
je
jg
loope
sbb
rcr
xchg
aaa
(bad)
ins
and
adc
jmp
xor
and
cwde
sbb
inc
lods
pop
mov
arpl
and
rol
pop
int
je
ficomp
or
aaa
add
jecxz
or
xchg
mov
loopne
and
stos
or
sahf
popa
adc
pop
loop
sbb
into
mov
popa
fldz
mov
fstp
mov
ds
adc
loopne
adc
ins
dec
and
(bad)
and
call
pop
pusha
pop
dec
push
ror
dec
std
add
cld
add
push
call
ds
mov
sub
jecxz
sbb
push
lock
add
push
dec
popa
cmp
xchg
bound
aas
mov
jne
cmp
fld
fdivr
nop
push
in
pop
adc
pushf
jecxz
frstpm(287
fsubrp
dec
pop
imul
sub
or
test
fisub
xchg
xchg
or
adc
bound
popf
adc
sbb
(bad)
fld
mov
ret
popf
nop
dec
das
in
sub
call
cmp
retf
movs
mov
mov
daa
pop
pop
sahf
pop
inc
movs
aam
jae
jle
packuswb
cli
xchg
mov
mul
xchg
aam
xor
test
sti
push
div
jmp
fild
stc
f2xm1
jnp
loope
imul
sbb
push
loopne
shl
fst
jl
test
mov
sahf
pop
add
scas
jae
imul
jo
cli
cwde
push
mov
stos
cmps
out
mov
sub
ret
sub
mov
test
mov
sub
ror
mov
js
xchg
or
or
push
retf
push
or
mov
mov
test
dec
mov
dec
dec
dec
add
scas
call
inc
in
cwde
fmul
fcomp
js
in
in
xchg
mov
push
das
in
mov
mov
sub
je
dec
je
add
push
and
loop
push
mov
push
imul
dec
in
in
popf
out
xchg
xchg
adc
push
aam
mov
mov
stos
inc
clc
jmp
das
push
dec
paddw
jl
pop
in
mov
sub
or
add
adc
adc
jae
test
shl
aad
iret
xchg
inc
add
push
or
push
dec
or
sub
xor
inc
pop
cmp
cmp
test
xor
pushf
mov
push
pusha
push
jb
int3
daa
cmp
pop
pop
fild
mov
es
adc
shl
mov
cmp
and
push
inc
inc
jg
fdivr
add
dec
sbb
repnz
and
enter
mov
call
pop
sub
push
dec
enter
je
jo
jns
lahf
iret
jo
js
push
pop
and
jo
jo
or
pcmpeqb
js
shl
jb
adc
leave
mov
pop
mov
xchg
or
xor
xor
adc
cwde
mov
leave
movs
mov
test
dec
sbb
and
in
movs
test
call
leave
in
mov
pop
cs
mov
xor
mov
sub
mov
shl
enter
sbb
fs
or
xchg
xchg
sub
dec
sbb
cmp
adc
nop
inc
out
call
in
adc
adc
sbb
lea
dec
in
lds
shr
sub
mov
mov
fcomp
mov
cmp
dec
add
add
mov
xchg
pop
push
pop
in
add
mov
div
sub
repnz
xchg
test
dec
shl
mov
cli
or
lods
push
add
test
ret
pop
or
fbld
test
ins
sub
mov
dec
mov
scas
cmp
out
push
sub
mov
dec
or
or
iret
inc
add
pop
jnp
(bad)
hlt
aas
ss
ja
push
cmc
xchg
mov
mov
sbb
cmp
jbe
iret
scas
fild
mov
dec
mov
les
push
jle
lds
les
push
add
(bad)
cmc
push
out
jae
mov
outs
rcl
xchg
popf
jbe
cmp
mov
xor
das
sub
sbb
pop
ss
je
cmp
test
aad
jge
jp
rcl
stos
push
cmps
nop
add
(bad)
stos
xchg
xchg
je
dec
je
mov
pop
sbb
or
push
mov
cwde
je
aaa
add
add
push
dec
mov
adc
mov
fisttp
pusha
lock
jmp
sbb
icebp
clc
mov
sahf
or
jg
cmp
loop
mov
and
xchg
inc
lods
mov
cmp
add
fbld
fbld
pop
mov
inc
repz
jbe
imul
test
add
and
jnp
jne
push
or
sahf
icebp
push
lods
inc
jmp
cli
(bad)
push
push
retf
icebp
cmp
shl
dec
or
es
icebp
xor
imul
cmp
xor
cmp
lds
jmp
xor
lea
sbb
inc
xor
cld
or
pop
mov
test
push
inc
mov
scas
sbb
test
adc
(bad)
nop
enter
leave
push
add
add
sbb
enter
adc
sti
jmp
in
(bad)
mov
jns
call
fs
add
jmp
xchg
fmul
lock
ins
icebp
shr
pop
push
sbb
daa
xchg
pop
dec
push
ja
sub
ret
jl
popf
sbb
cmp
and
popa
arpl
rcr
and
movs
add
dec
xor
or
sub
adc
push
push
fcmovnb
xor
jecxz
jg
pop
repnz
jo
in
(bad)
or
pop
push
(bad)
jecxz
adc
adc
push
mov
mov
and
shr
cmps
adc
or
int3
add
fdiv
sbb
mov
sub
int3
add
xor
rcr
add
loope
mov
jne
or
cmc
hlt
push
xor
add
stos
and
push
push
aam
pop
or
shl
loopne
adc
adc
out
jnp
shr
jle
sub
aas
dec
aam
retf
mov
cs
or
mov
pop
pop
fst
shl
xor
push
idiv
ss
pop
mov
movs
sbb
jb
sbb
xor
mov
xchg
(bad)
frstor
mov
ds
and
jo
dec
jmp
call
je
push
dec
(bad)
mov
call
inc
ins
push
in
out
shl
xchg
jnp
jle
sub
and
and
rcl
push
adc
cmp
scas
pop
push
(bad)
pop
das
mov
cmp
aad
cmp
pop
(bad)
icebp
pop
es
sub
out
imul
leave
fdivr
lock
jne
pushf
or
jp
pop
pop
jp
fdiv
mov
cmp
add
test
and
push
je
pusha
mov
mov
sub
cmp
inc
cld
add
adc
xchg
pop
test
push
les
jp
inc
(bad)
nop
add
add
add
push
and
add
xor
popf
sbb
nop
add
pop
lock
sbb
mov
leave
and
mov
popf
xor
add
pop
mov
mov
push
mov
push
sub
aas
cdq
and
add
or
jo
push
sbb
loop
push
and
jle
mov
pop
mul
cmps
lea
stos
jb
lods
mov
div
jno
jg
int3
mov
scas
cmp
mov
(bad)
dec
mov
mov
add
(bad)
cli
out
lahf
rol
(bad)
pop
mov
and
push
xchg
mov
out
and
pop
mov
ret
jl
push
push
mov
fbld
mov
ss
inc
add
je
ficom
mov
mov
pushf
or
shr
pop
(bad)
(bad)
sti
xchg
add
bound
mov
ror
cmps
fs
mov
sbb
xor
add
xor
xchg
in
retf
add
inc
imul
jns
stos
mov
enter
out
dec
mov
neg
sbb
and
push
push
pop
cmp
adc
xchg
popf
es
das
push
lea
call
cmp
push
push
mov
adc
dec
nop
add
outs
xor
or
mov
jmp
sar
mov
jmp
test
push
cwde
lods
xor
outs
scas
jge
enter
shl
add
pop
and
das
add
jae
inc
popf
call
push
push
movs
jmp
rcr
inc
repz
xor
movs
fisubr
xor
pop
mov
lock
push
or
nop
and
sahf
divps
or
inc
sbb
neg
jnp
pop
push
and
sti
dec
mov
push
retf
sti
mov
dec
pop
mov
add
dec
fisttp
mov
pop
pop
mov
out
cmp
sub
add
or
ror
les
sbb
xor
jmp
fdivr
outs
sbb
push
mov
loopne
shl
fmul
sti
jle
out
or
jae
sub
adc
push
fcmovnu
mov
retf
add
ror
mov
inc
aad
aaa
cmp
ret
test
cmp
rol
xor
mov
and
add
sbb
cmp
cld
sub
shl
js
and
std
inc
jbe
cs
pop
sbb
pop
push
fcom
in
fs
aas
ins
push
shr
push
push
jb
mov
inc
mov
sub
xor
lods
mov
pop
add
dec
cmp
fisttp
sub
(bad)
ret
jl
clc
call
sub
adc
movs
cmp
clc
add
add
push
ds
xor
mov
dec
movzx
data16
rcl
mov
or
and
jae
es
mov
(bad)
jmp
stos
push
inc
pop
aas
enter
push
movs
fwait
dec
sbb
clc
int
mov
inc
popa
mov
adc
adc
mov
add
or
push
movs
movs
shl
sbb
mov
push
or
inc
sbb
test
cs
mov
mov
clc
cld
ss
add
mov
jl
cli
cmps
and
jnp
push
push
and
mov
mov
stos
or
and
lea
repz
aad
fwait
clc
idiv
xor
or
out
pop
cmps
clc
push
bound
bound
inc
push
or
add
fcom
(bad)
jg
lds
or
cmp
ja
jb
cmp
jae
je
sbb
pop
loop
mov
cmp
or
pop
es
pop
pop
sahf
and
add
shl
or
adc
add
sbb
xor
lds
sbb
outs
sahf
add
xchg
pop
movs
add
scas
nop
dec
pop
lea
inc
lea
inc
dec
sbb
sbb
jl
mov
xchg
lods
sub
or
fs
xor
adc
ret
dec
fbld
mov
enter
popf
loop
scas
push
hlt
sbb
pop
je
ins
les
das
mov
test
add
inc
jb
add
xor
js
out
mov
mov
push
adc
mov
loope
loopne
cmps
mov
and
sbb
repnz
popf
retf
gs
mov
mov
pop
add
cmp
jg
lea
dec
sbb
(bad)
and
sub
jno
adc
jmp
adc
sub
es
jge
fsub
or
or
sbb
out
cmp
shl
ss
dec
js
or
movs
ret
icebp
push
push
aam
or
aaa
pop
add
inc
(bad)
nop
popf
push
cld
push
dec
xor
popf
push
xchg
dec
mov
shl
jle
cmp
or
and
inc
shl
lock
clc
pop
sbb
xchg
or
cmc
frstor
xor
or
push
fld
cmp
or
mov
cmp
xor
push
adc
sti
add
mov
mov
mov
(bad)
int3
jmp
sub
push
iret
pusha
jecxz
mov
add
ds
cmps
push
push
and
retf
push
call
in
sub
jge
and
or
push
ins
xor
mov
or
sbb
sub
xchg
add
inc
push
mov
dec
add
pop
add
or
inc
aaa
mov
nop
or
inc
(bad)
test
arpl
push
sub
ret
mov
sub
sub
enter
pop
inc
pop
mov
xchg
sub
push
or
jp
adc
adc
or
fsub
sbb
int3
cmc
in
and
shr
cmp
je
stc
test
cmp
pusha
dec
(bad)
retf
clc
pop
ret
inc
pop
push
add
pop
mov
std
push
gs
dec
pushf
int
cmp
scas
out
dec
dec
stos
jmp
bound
and
(bad)
in
data16
mov
inc
mov
mov
add
(bad)
push
xchg
push
sbb
push
push
loope
dec
xor
test
shr
cmp
xor
test
push
sub
push
lea
mov
test
add
mov
pop
mov
and
jne
or
test
xchg
aaa
unpcklps
or
or
adc
jle
push
pop
sub
cmp
aaa
inc
cmps
xchg
inc
cmp
les
push
inc
cmp
push
cmps
jae
inc
pop
add
jmpw
xor
jle
loopne
mov
dec
int
xchg
sub
cli
mov
fsub
call
push
push
mov
push
in
loopne
lahf
test
xor
dec
sbb
int3
leave
push
arpl
mov
ss
or
fs
shl
clc
push
mov
mov
xchg
xor
call
ret
add
rol
add
fadd
adc
xor
sub
pop
mov
lock
or
cmps
mov
xchg
shr
mov
and
nop
sbb
into
push
pop
xchg
sbb
mov
add
lock
into
inc
scas
popa
mov
push
aaa
add
inc
sub
leave
aam
or
inc
retf
pusha
sub
pop
xchg
push
mov
sbb
push
js
add
dec
je
das
mov
cwde
sub
fadd
loope
or
mov
jmp
fstp
popa
push
fcmovnu
inc
xchg
and
sbb
fldcw
adc
jecxz
mov
cmp
add
mov
(bad)
push
stos
push
mov
mov
in
sahf
add
dec
aam
ret
jmp
int3
push
adc
shld
xor
jle
fdivr
or
nop
xor
dec
adc
sbb
adc
or
xor
cmp
sub
fisttp
rcl
lods
test
cli
test
imul
inc
push
aas
sub
xor
add
popf
add
push
fisubr
js
cmp
loopne
cmps
push
push
mov
inc
call
push
sbb
dec
jmp
pop
fmul
push
or
jae
push
lock
push
cmp
add
inc
jmp
dec
mov
hlt
ja
adc
push
adc
sbb
stos
cdq
movs
test
aas
fwait
and
add
retf
ja
dec
jbe
cmp
in
hlt
push
pop
sar
fdiv
sbb
jne
aaa
dec
xchg
retf
sub
sbb
cmp
adc
js
push
add
jmp
jmp
sub
dec
cmps
pusha
mov
push
pop
(bad)
jne
dec
adc
out
jo
push
leave
clc
push
inc
push
lea
jmp
out
call
cmp
cmp
push
jne
cmp
jne
or
add
push
add
je
jl
fucomp
setns
(bad)
adc
out
cmp
mov
mov
ror
add
lock
sub
es
push
pop
add
lea
cmp
test
mov
add
push
cmc
xchg
xchg
out
jmp
rol
inc
jb
sub
adc
push
xor
sbb
loope
rol
jecxz
outs
push
pop
pop
fcomp
clc
repnz
enter
push
pop
xchg
pop
cmp
cmps
add
sbb
mov
or
movs
mov
mov
push
mov
xchg
and
or
push
cmp
jmp
cdq
cmp
or
pop
daa
mov
out
sub
mov
ins
loopne
sbb
inc
pop
gs
les
xchg
dec
mov
adc
std
pop
ret
ins
aaa
fisttp
cmp
std
lahf
xchg
ret
and
push
out
imul
or
lock
add
jbe
dec
or
ror
xchg
or
out
pop
rep
and
icebp
fdivr
mov
mov
fstp
xchg
cmp
cmp
cld
push
fmul
daa
cmc
js
or
and
cdq
jecxz
popa
test
rcr
iret
add
or
ds
es
shl
stc
ins
inc
fdiv
jne
pop
push
lea
cmp
shl
sub
rol
or
add
mov
adc
cmp
hlt
and
mov
adc
adc
and
add
adc
mov
and
arpl
push
lods
stos
and
mov
pop
pop
popf
xchg
icebp
cmp
das
push
nop
push
or
add
in
lock
dec
mov
or
cs
cmp
mov
dec
push
dec
sbb
xchg
mov
or
mov
or
pop
adc
in
cmp
ja
jb
cmp
call
inc
rcl
cld
jb
cmp
or
loopne
mov
xchg
jne
ds
sub
cmps
sub
ja
push
and
mov
rcl
xchg
xor
enter
xchg
adc
sub
dec
mov
push
stos
xchg
mov
sti
cwde
repz
int
clc
adc
int3
or
adc
pop
dec
lahf
sti
mov
sbb
mov
inc
loope
sbb
sub
pushf
mov
stos
pushf
mov
sar
fimul
jo
pop
xchg
add
jnp
cmp
mov
call
pop
or
ret
ss
cmp
je
ror
scas
test
and
sbb
sbb
pop
adc
mov
jno
loope
mov
mov
jo
mov
movs
add
and
adc
jecxz
dec
lods
(bad)
adc
cs
cmp
adc
pop
les
sbb
fild
jmp
dec
or
push
loop
dec
or
jg
(bad)
mov
adc
or
mov
mov
sub
sahf
shr
jp
mov
data16
in
fist
lock
shr
loopne
and
add
call
ds
inc
xor
mov
inc
push
inc
sahf
sbb
std
ja
out
add
mov
adc
movs
or
ss
jge
mov
jle
jne
or
jnp
hlt
pop
or
cmp
jns
xchg
dec
jnp
mov
adc
push
add
cmp
pop
xor
dec
sbb
or
fild
nop
(bad)
test
adc
push
dec
push
dec
cmps
cmp
xchg
cmp
stos
push
and
push
cmp
jo
sbb
pop
pusha
or
enter
push
and
ret
(bad)
mov
mov
add
mov
mov
inc
pushf
cmp
push
pop
add
pop
jo
inc
cmp
jae
mov
sbb
mov
sbb
push
jbe
xor
push
sbb
mov
ret
push
adc
sub
xchg
jo
jecxz
(bad)
push
push
add
dec
sub
or
or
cdq
adc
lods
stc
retf
push
dec
cmp
and
push
lods
adc
sbb
mov
ss
clc
jmp
add
ins
arpl
sbb
adc
push
add
adc
clc
je
cmc
ins
mov
xchg
sub
enter
sar
push
sbb
push
sahf
xor
in
fmul
adc
hlt
xor
cdq
imul
mov
xor
sbb
sbb
aam
add
sub
out
test
sbb
adc
cmp
jne
dec
push
xchg
mov
add
dec
push
inc
inc
cs
dec
sbb
or
das
sbb
inc
adc
push
or
fs
(bad)
fs
jecxz
jbe
nop
arpl
xchg
push
call
sbb
cmp
sbb
ror
or
lock
and
or
rcr
mov
and
sbb
test
push
or
mov
sbb
pop
scas
cwde
mov
dec
cmp
lds
adc
lock
cmp
retf
cwde
xchg
pusha
adc
jmp
xchg
add
add
ror
pop
iret
stos
xchg
ss
pop
cdq
pop
push
push
test
xchg
sbb
inc
ins
cmp
or
ror
add
inc
cmp
push
add
adc
sahf
add
ret
je
cld
push
xchg
rol
mov
lock
xor
adc
and
sbb
adc
and
jno
mov
cmp
in
ja
adc
pop
shl
cmp
je
dec
out
add
lds
rcl
movs
xor
add
xor
stos
mov
call
enter
cld
inc
paddsb
xchg
cmps
add
add
es
pop
push
adc
and
rcl
add
add
ret
mov
jmp
out
loopne
in
cmp
int3
test
sub
rcl
cmp
outs
aas
add
jge
dec
add
hlt
or
mov
lea
mov
dec
sub
push
push
cmp
fmul
pop
lods
and
jmp
fstp
loope
clc
jne
xor
or
or
xlat
sub
lods
lods
retf
ins
mov
test
add
xchg
je
test
cdq
imul
add
xchg
test
and
cdq
aam
lods
jbe
dec
scas
push
xchg
dec
push
(bad)
sbb
add
(bad)
mov
xor
in
cmp
jbe
add
pop
movs
push
fmul
push
mov
inc
and
adc
nop
mov
sub
cmp
mov
callw
pop
imul
lock
xor
inc
rcr
loopne
stos
in
jmp
in
cdq
jmp
push
imul
dec
loope
jmp
inc
sub
cmps
imul
in
add
mov
outs
stos
cld
jnp
add
mov
stos
xchg
adc
sub
in
and
cmp
mov
pop
sbb
add
ins
jbe
mov
mov
mov
cmp
std
pop
and
jb
cmp
inc
push
xchg
enter
movs
or
and
int3
movs
sbb
jp
sub
pop
in
adc
(bad)
jae
adc
sbb
mov
loop
cmps
test
xchg
add
xchg
push
inc
inc
mov
mov
jo
mov
push
push
pop
fisub
and
adc
inc
dec
adc
dec
mov
xchg
dec
jb
dec
das
sub
sbb
sahf
adc
xchg
adc
push
cmp
xchg
cmp
sbb
sbb
clc
push
outs
add
lea
or
je
add
mov
dec
or
out
and
pushf
adc
dec
leave
inc
sahf
cld
inc
push
and
and
add
scas
in
enter
or
sub
rcr
lock
xor
nop
or
inc
dec
or
or
push
pop
je
aad
add
xchg
inc
sub
pusha
add
xchg
enter
and
out
cmp
add
call
xchg
cmp
or
xchg
shl
and
push
fadd
push
stos
ficom
pop
iret
add
adc
xchg
jb
inc
jbe
retf
pop
adc
dec
cmp
(bad)
fs
mov
jae
outs
pop
jno
cmp
rcl
cmp
ja
(bad)
jbe
loopne
test
(bad)
(bad)
push
adc
shl
jbe
(bad)
xchg
jno
mov
mov
adc
push
push
(bad)
out
mov
mov
jbe
mov
or
inc
pop
clc
push
add
jae
into
les
mov
jecxz
xchg
popf
mov
iretw
jmp
test
test
jo
push
push
jno
cmp
sub
dec
add
sub
pop
popf
daa
retf
cmp
cmp
jbe
test
mov
ret
ret
sub
dec
jb
mov
pusha
jmp
inc
retf
or
loopne
retf
push
lods
hlt
jb
js
loop
xchg
imul
sbb
adc
mov
daa
test
xor
push
dec
fild
sbb
jo
outs
call
xor
pop
add
jl
cld
sbb
mov
add
hlt
std
jae
add
add
push
adc
loop
push
adc
in
jbe
cmp
leave
sub
sbb
add
aad
in
add
iret
push
jns
imul
js
sub
or
loopne
ret
into
mov
fld
loop
mov
push
adc
out
shl
xlat
jae
shr
mov
lods
loopne
out
add
add
sbb
or
movs
jae
push
mov
cld
movs
fwait
adc
ret
push
je
inc
cmp
(bad)
push
jge
cmp
push
mov
pop
stc
shr
or
ret
push
cli
aas
jno
mov
cmp
out
or
mov
fidivr
jg
mov
jne
(bad)
fcomi
sar
lds
outs
dec
aaa
add
mov
and
ret
pop
pop
pop
inc
dec
or
push
and
adc
dec
lock
mov
mov
pop
lods
xlat
bound
(bad)
cmps
sub
idiv
add
mov
jmp
adc
cmp
mov
test
or
rol
mov
or
gs
scas
stos
mov
pop
jbe
movs
and
adc
(bad)
icebp
shl
fistp
gs
sub
or
pavgb
lock
mov
pop
gs
call
das
cmp
leave
inc
inc
aas
xor
mov
push
push
data16
imul
rcl
jo
xor
or
push
mov
pop
or
xor
add
mov
and
loope
adc
and
jnp
clc
test
sub
sbb
jle
cmp
cmp
je
dec
jns
jmp
mov
mov
test
idiv
jg
jmp
push
adc
inc
pop
push
mul
sahf
and
mov
loopne
sbb
pop
pop
pop
adc
je
and
sbb
push
lds
mov
dec
stos
sub
adc
jne
push
mov
pushf
(bad)
idiv
test
add
xchg
test
test
pop
pop
pop
or
xor
hlt
push
or
or
sbb
xchg
xor
or
fmul
mov
add
cmps
jge
pop
stos
shl
mov
ss
mov
add
out
mov
leave
inc
outs
cmp
sbb
push
pop
hlt
push
and
mov
(bad)
or
jmp
test
in
cwde
sahf
xchg
scas
and
aam
mov
jb
call
inc
or
fwait
pusha
(bad)
fidivr
jbe
inc
xchg
out
mov
and
shr
ss
or
add
sahf
out
adc
mov
out
sbb
xor
push
mov
aaa
adc
dec
shl
pop
aas
inc
adc
popf
mov
cmp
xchg
daa
and
(bad)
pop
fdivr
inc
loopne
ret
data16
mov
push
fwait
mov
scas
adc
xchg
and
jo
sbb
ja
push
push
rcr
test
mov
add
and
fsubr
xchg
push
add
cwde
out
xchg
jo
iret
fwait
sub
dec
mov
cmc
fsub
pusha
in
dec
sbb
lods
imul
or
pushf
sub
xor
shl
jmp
push
mov
inc
loopne
icebp
cmp
mov
or
sbb
scas
dec
sbb
call
or
(bad)
loope
adc
add
lea
xor
sub
xchg
sbb
inc
inc
inc
jbe
shr
or
pop
clc
jne
and
movs
add
sbb
je
cmp
js
jbe
mov
or
jno
cmp
daa
xlat
lods
int
imul
sti
push
sub
add
push
push
mov
or
jmp
jb
dec
int
dec
shl
stos
adc
aas
fsubr
ja
pop
xchg
ret
xor
nop
jmp
inc
or
cmp
sub
lea
push
inc
sub
cmp
add
add
push
fadd
cli
cmps
sbb
add
adc
push
rcr
xchg
shr
shl
sti
pop
jl
add
or
int3
jbe
dec
jne
sbb
push
aad
add
jbe
icebp
mov
leave
xor
ja
xchg
sbb
clc
ja
scas
add
xor
push
inc
xchg
jmp
xor
(bad)
cwde
sub
adc
in
pusha
xchg
pop
out
daa
xor
jae
inc
popa
cmps
lock
lea
mov
or
add
fcom
sbb
dec
pop
leave
fadd
push
ret
cwde
sahf
cmp
pop
sbb
icebp
lea
push
jo
mov
xor
add
movs
into
pop
pop
fidivr
sbb
mov
mov
ds
repnz
cmp
adc
jge
push
push
push
es
es
mov
push
push
sub
test
dec
cmps
gs
cli
test
mov
xor
outs
dec
shl
adc
pop
pop
adc
sbb
jb
leave
sub
cwde
jbe
sub
mov
add
jle
(bad)
test
movs
adc
out
jbe
adc
shl
lock
push
fisub
pop
cmp
xor
jmp
inc
or
dec
adc
into
push
or
inc
add
cld
lock
je
pop
pop
sub
sub
mov
sub
and
sbb
test
add
xchg
(bad)
fadd
call
ss
in
pop
cmp
icebp
sbb
sub
lea
inc
jbe
inc
jle
push
or
sar
pop
dec
mov
jo
push
dec
add
ins
mov
es
call
adc
or
adc
sbb
rol
xor
or
and
add
mov
xor
(bad)
jno
sbb
sbb
or
dec
sbb
or
pop
nop
sahf
(bad)
push
xor
xchg
or
(bad)
xchg
or
mov
sbb
or
fndisi(8087
lock
mov
pop
or
adc
stc
outs
add
hlt
lea
push
add
and
dec
xor
(bad)
pop
add
push
and
and
imul
cs
adc
int3
das
add
sbb
sbb
add
mov
dec
sub
fcomp
pop
add
retf
sub
jmp
shr
jbe
leave
jl
xchg
add
add
cmp
xor
imul
sbb
pop
sub
rol
cs
inc
sub
sub
jae
add
jl
xchg
aad
rol
mov
loop
je
inc
xor
in
fwait
je
sub
mov
cmp
je
mov
dec
jne
and
xlat
ret
and
retf
test
retf
ret
cmps
mov
fcom
movs
cmp
sbb
dec
and
pop
fdiv
pop
xchg
sub
xchg
xchg
xchg
and
mov
cs
lds
das
jbe
sahf
xchg
js
outs
adc
outs
dec
icebp
inc
hlt
fistp
jge
not
mov
pop
sub
test
movzx
sub
icebp
cmc
mov
inc
mov
jnp
nop
in
sahf
and
mov
mov
lods
out
add
imul
jo
jbe
add
js
(bad)
mov
popf
adc
mul
adc
push
in
xchg
fcmovb
mov
stc
dec
add
xor
shr
enter
push
sub
mov
shr
fiadd
movs
mov
shr
dec
sbb
test
sub
fbstp
out
(bad)
pushf
setne
add
push
mov
and
xchg
inc
jmp
mov
fmul
push
mov
jno
ins
shl
inc
jo
lods
loop
mov
or
mov
add
add
scas
shl
sub
call
add
dec
mov
jmp
retf
int
je
mov
add
adc
bound
pushf
or
dec
ds
pop
call
ja
lahf
inc
pop
or
fcomip
adc
or
and
jge
mov
push
mov
jns
jns
mov
xor
in
mov
jmp
mov
xor
cld
sbb
outs
and
jle
dec
add
jg
fwait
sub
push
aad
out
and
cmc
jb
test
xor
mov
mov
shr
cmp
je
push
push
mov
out
scas
outs
pop
pop
pop
mov
add
rcl
xchg
shl
add
add
icebp
mov
or
test
mov
pop
loopne
jecxz
push
add
ret
mov
sbb
inc
sub
dec
rol
mov
xor
push
sub
pop
retf
add
fdiv
dec
or
fs
cwde
jno
jbe
push
data16
jmp
sub
inc
and
ret
add
cmp
sub
inc
call
js
add
push
aaa
pusha
in
ficomp
sbb
mov
mov
and
(bad)
jmp
add
out
sub
add
or
sbb
(bad)
sub
mov
bound
dec
call
cmps
push
pop
cld
pop
sahf
fcom
mov
adc
jne
sbb
pop
push
inc
rcr
or
mov
or
inc
mov
mov
inc
xor
es
sbb
mov
loopne
inc
xchg
ret
loopne
fsub
add
dec
xchg
xchg
test
cli
dec
sbb
ins
sbb
adc
mov
jp
dec
(bad)
or
loopne
jb
sbb
mov
push
in
inc
pop
mov
sbb
mov
mov
sti
fwait
inc
rcr
call
add
mov
inc
and
pop
test
push
arpl
sbb
xor
test
sbb
sbb
inc
dec
or
call
pop
mov
div
xchg
jb
pop
adc
test
jp
(bad)
stc
or
test
pushf
xchg
clts
cmp
xor
shl
cmp
adc
mov
xor
nop
pop
ds
shl
add
retf
ins
cdq
std
cmp
jbe
mov
sahf
out
das
xor
inc
add
add
ins
adc
adc
push
xor
pusha
mov
movs
lock
nop
xchg
or
sub
push
pop
daa
push
sub
mov
jae
cmp
jl
jnp
sbb
inc
add
adc
fistp
dec
add
movs
mov
addr16
test
and
ins
jmp
jmp
add
adc
and
xor
in
and
cmp
add
push
ins
inc
jge
push
mov
outs
je
and
mov
lock
add
add
pusha
lock
cdq
loope
sub
inc
daa
xchg
sbb
mov
nop
idiv
add
cmp
sar
shl
mov
jmp
rol
sub
dec
adc
add
inc
and
aaa
cmps
xchg
push
aam
neg
cmp
imul
xchg
sub
(bad)
imul
sub
cmp
mov
push
or
fwait
loopne
jle
xchg
gs
mov
jmp
push
xor
push
pusha
int
mov
mov
add
and
push
aam
lea
fs
lock
or
jb
and
adc
jl
sub
daa
data16
jmp
jb
rcl
aaa
pop
adc
mov
and
enter
js
and
test
sbb
or
xadd
and
mov
mov
pop
retf
push
mov
loope
movs
add
lock
and
and
jmp
das
push
mov
inc
pop
(bad)
fdivp
mov
xchg
or
bswap
jno
into
(bad)
sub
jnp
je
dec
cmp
lock
mov
xchg
mov
enter
cld
sub
adc
sbb
out
xchg
xor
sub
push
push
inc
add
int
fidiv
sub
aam
dec
stos
je
sbb
mov
sbb
or
dec
add
stc
and
sbb
in
or
add
addr16
shl
lock
cmp
sti
call
rdtsc
push
or
jge
xchg
sub
lock
jge
adc
cmp
sbb
mov
pop
or
push
or
imul
adc
outs
or
rcr
add
add
fs
scas
clc
sti
iret
push
out
push
cmp
adc
push
ja
or
add
adc
or
mov
push
adc
add
inc
dec
jo
push
fadd
mov
cmp
jb
push
adc
mov
xchg
inc
add
jnp
adc
lea
jg
or
dec
sbb
fwait
adc
pop
cmp
inc
push
(bad)
ror
jmp
dec
sbb
fdiv
adc
xor
cmp
pop
jmp
mov
and
add
in
pop
mov
imul
add
mov
push
leave
fs
ja
sbb
fsubp
cmp
jae
mov
xor
xchg
xchg
pushf
mov
loop
fild
jnp
and
sub
pop
adc
jno
test
call
or
inc
inc
outs
or
hlt
(bad)
fdiv
adc
test
enter
mov
mov
call
sysret
lea
sti
je
add
mov
mov
cmp
inc
push
jmp
jns
push
cli
imul
pop
push
movups
nop
ds
sub
mov
push
pusha
add
cmp
jbe
inc
or
pushf
(bad)
mov
mov
faddp
in
pop
mov
aas
fs
outs
pop
dec
inc
add
push
push
(bad)
mov
add
dec
mov
xchg
rol
xchg
add
inc
add
nop
and
btr
(bad)
nop
cmp
fs
pop
and
pop
inc
jg
push
push
test
mov
jmp
add
jb
cmp
retf
sub
or
add
call
push
pushf
jnp
push
repnz
ss
mov
dec
push
mov
mov
in
js
(bad)
(bad)
in
add
push
popa
jno
dec
xchg
mov
or
retf
inc
(bad)
dec
mov
out
lea
neg
mov
dec
and
jb
(bad)
xor
(bad)
xchg
cmps
shl
ret
popf
lods
test
call
ror
shl
cmp
ret
inc
aam
add
fnstsw
mov
out
shr
add
push
cld
pop
in
mov
add
fisttp
shr
xchg
or
retf
call
fmul
sub
daa
ret
cmps
ja
inc
sub
pop
add
pop
fdivr
and
and
push
mov
sub
or
pop
sub
sbb
push
imul
sub
inc
pop
shl
adc
or
sub
fs
adc
inc
in
jae
jge
push
or
mov
cdq
push
cmp
in
and
jnp
hlt
es
sub
clc
pop
jo
js
sub
inc
add
hlt
inc
mov
sbb
push
xchg
and
adc
push
adc
sbb
cs
pop
enter
push
ret
or
push
jae
fadd
enter
nop
pop
pop
add
pop
pop
xor
pop
sub
sbb
mov
in
xchg
push
loopne
into
cmp
sub
lock
sub
adc
cmp
xchg
hlt
push
xor
xor
or
lahf
add
sub
jmp
push
add
xor
adc
test
(bad)
iret
mov
outs
mov
or
xor
and
inc
sub
ficomp
mov
call
jmp
or
add
mov
cmp
cmp
into
dec
ins
dec
push
add
or
or
or
add
add
loopne
sub
adc
mov
pop
fdiv
bound
ror
mov
sti
das
jmp
out
dec
loopne
or
dec
push
jl
mov
shl
add
enter
or
or
cmps
and
adc
dec
adc
movs
or
xor
pusha
je
cmp
add
sub
sbb
test
jbe
jo
adc
mov
adc
loopne
cmps
push
(bad)
gs
inc
fmul
loopne
jnp
fdivr
push
sub
test
and
popa
mov
loopne
je
push
jge
jnp
lahf
cmp
(bad)
nop
popf
adc
fild
outs
inc
mov
sub
jge
jle
jb
pop
sub
mov
push
(bad)
rcl
xlat
push
mov
inc
push
iret
js
jno
adc
pop
add
or
jnp
stos
sub
or
add
inc
adc
or
clc
leave
jmp
push
inc
or
(bad)
push
add
add
fcom
inc
add
fisttp
cmp
push
sub
shl
jge
jne
sti
fmul
sahf
in
fdivr
add
xor
push
ss
aaa
cmp
fwait
int
xchg
mov
mov
xchg
out
cmp
ror
fnstcw
cmp
loope
or
iret
out
cmp
inc
mov
inc
adc
out
cmp
inc
and
test
pushf
shr
out
lods
add
repnz
pop
aaa
xchg
and
sub
or
adc
pop
cs
hlt
sbb
mov
pop
dec
js
mov
jg
inc
out
adc
xchg
jo
sbb
mov
add
(bad)
xor
adc
loopne
icebp
movs
pop
out
or
into
(bad)
cwde
add
in
sti
adc
add
(bad)
ret
mov
ret
mov
movs
sub
sahf
add
daa
daa
pop
imul
mov
add
daa
daa
daa
add
daa
daa
daa
or
or
daa
daa
daa
or
adc
add
mov
sti
div
mov
mov
in
adc
dec
mov
add
dec
cmp
adc
add
(bad)
je
sub
pop
ins
sub
arpl
fsubr
js
cmps
cwde
or
jmp
inc
sbb
jmp
nop
lods
sbb
fadd
mov
mov
adc
push
push
sbb
dec
loopne
adc
retf
ret
je
sbb
icebp
in
int
or
add
and
lea
xor
fsubr
xor
rol
xor
xor
or
xor
cmp
cmp
add
int
push
in
inc
mov
mov
mov
aas
push
in
or
enter
jae
scas
pusha
xlat
sbb
jbe
inc
and
out
jae
pop
adc
and
and
or
in
lock
jo
inc
cmc
sub
ins
retf
lock
sbb
adc
fiadd
mov
dec
add
inc
repnz
gs
enter
imul
lock
inc
jbe
pop
test
inc
adc
add
sub
jae
aas
addr16
lock
int
push
sahf
lahf
retf
add
jmp
rol
add
repnz
and
loopne
je
fist
sbb
in
cmp
jae
popf
out
pop
jae
repz
das
adc
fnsave
daa
inc
fistp
adc
fwait
sbb
iret
add
xor
xchg
xchg
mov
dec
retf
cmp
jbe
cmp
cmps
test
dec
xor
adc
daa
push
sub
add
dec
cmp
test
inc
mov
inc
jmp
cmps
adc
inc
push
mov
dec
fst
xor
call
push
je
out
pop
(bad)
mov
inc
dec
push
repnz
fsub
mov
imul
jmp
(bad)
push
sub
lea
push
rol
add
sub
mov
add
or
pop
dec
out
cmp
retf
pop
popa
stos
adc
adc
and
and
jbe
mov
jbe
mov
push
(bad)
pop
aam
aaa
cmp
xchg
sbb
xor
sub
sbb
fsubr
adc
or
push
mov
int
ins
jmp
sub
sbb
sub
mov
sub
inc
cmp
out
mov
and
add
ror
fcmovnb
lea
dec
retf
retf
ror
sub
add
addr16
adc
mov
inc
cmp
loope
pusha
retf
dec
imul
and
jnp
mov
and
in
and
adc
and
int3
push
or
pop
add
and
dec
push
leave
test
jge
jbe
or
mov
inc
inc
pop
js
mov
mov
addps
adc
add
cmp
or
lea
push
mov
xchg
ds
adc
and
mov
mov
data16
xchg
and
cli
fld
add
or
mov
ja
(bad)
jle
jb
cmp
sbb
les
add
les
(bad)
js
test
test
or
pop
jo
je
ja
or
pop
lock
add
inc
inc
push
or
fnstsw
dec
cmps
push
pushf
sub
add
aam
je
fisttp
test
add
dec
and
dec
cmp
sbb
dec
xchg
jecxz
mov
add
je
dec
dec
stos
ret
inc
sahf
(bad)
jmp
cmps
ins
xchg
mov
or
push
test
xchg
push
mov
dec
jge
adc
pop
arpl
mov
icebp
pop
dec
arpl
and
or
jnp
int3
or
ret
adc
shl
sub
out
in
add
cmp
jo
cmp
sbb
inc
add
jne
sbb
pop
fiadd
fcom
icebp
mov
or
rol
sub
and
call
rcl
and
sub
leave
mov
push
and
lods
push
je
ds
jmp
pusha
retf
data16
addr16
mov
mov
sub
mov
jmp
xor
or
sub
or
lods
adc
add
and
mov
jne
sar
push
xor
jle
add
jmp
fnstenv
scas
inc
aas
mov
push
dec
push
or
xor
inc
xchg
mov
(bad)
cld
xchg
push
sbb
cmp
hlt
cmp
into
inc
and
inc
or
icebp
popa
xor
ret
sub
push
sbb
or
adc
cmc
mov
mov
pop
adc
add
test
add
movs
jae
sbb
add
ja
jb
sbb
sar
adc
sub
fstp
add
dec
sub
pusha
loopne
loope
rcr
ret
fwait
aaa
(bad)
push
in
inc
or
loope
cmp
sbb
mov
jbe
push
ret
or
inc
jbe
mov
mov
adc
in
mov
dec
cmp
sub
xchg
loopne
outs
sub
inc
and
mov
add
or
add
in
fs
inc
jne
mov
sbb
into
aas
jmp
das
or
adc
call
pop
adc
lock
jb
jle
jl
test
pop
jo
outs
add
out
std
pop
pop
rol
imul
retf
and
mov
pop
xor
adc
sub
call
inc
pop
fist
and
sub
stos
sub
add
fmul
add
xchg
pop
jo
test
je
shl
xchg
lahf
xor
sahf
mov
or
jecxz
or
sbb
test
and
fwait
xchg
ret
js
shr
in
dec
inc
mov
sub
cmp
mov
xchg
push
xor
add
adc
(bad)
mov
jo
add
jl
push
pop
xor
xchg
cld
xor
sbb
jge
rcl
sbb
popf
call
cmp
add
nop
inc
enter
add
js
mov
dec
shl
inc
inc
fidiv
pop
cli
mov
pushw
(bad)
std
push
or
call
stos
daa
test
inc
ret
in
add
sbb
fsubr
inc
adc
pop
(bad)
pop
mov
data16
out
loop
push
movs
je
lods
cmp
ss
xchg
sbb
push
jmp
dec
xor
mov
icebp
dec
call
pop
lea
test
adc
adc
hlt
cmp
clc
push
shl
pusha
dec
inc
mov
je
shr
and
pop
into
adc
cmovg
lock
ret
fdivr
daa
jmp
std
dec
jecxz
add
shr
cmp
das
outs
out
scas
adc
jbe
push
push
lock
popa
repz
cmp
aam
mov
push
sbb
call
cdq
push
xchg
mov
push
pushf
inc
jl
jmp
cmp
je
nop
lock
pop
call
cmp
cmps
test
jbe
lods
cmp
lods
pop
pop
push
je
stos
or
es
inc
fimul
ror
mov
bound
ds
push
xchg
push
(bad)
ss
adc
int3
mov
pop
mov
or
das
sub
fucomi
or
pop
cmp
mov
inc
jmp
push
jae
inc
and
pop
pop
hlt
mov
jp
push
pushf
and
push
or
mov
fld
cmc
fild
jbe
inc
sahf
adc
push
dec
loope
xchg
ret
ja
or
outs
inc
push
sbb
sbb
or
mov
bound
ins
cmps
inc
jecxz
jne
lock
jnp
das
or
cld
pop
jl
jo
adc
jmp
xchg
cmp
outs
outs
or
sbb
das
je
pop
je
jle
mov
jne
mov
sub
or
pop
sub
xchg
test
mov
or
out
imul
and
jmp
or
add
xchg
shl
loope
mov
add
inc
sub
xchg
lods
xchg
mov
enter
ret
jge
jns
push
pusha
sbb
movs
ret
js
jae
xchg
mov
mov
dec
mov
jp
push
push
movs
jecxz
loope
xor
sbb
cmps
xchg
dec
sbb
mov
mov
out
js
outs
adc
imul
into
xor
mov
pop
call
inc
ret
icebp
add
ret
cmp
jle
mov
mov
leave
cmps
pushf
sbb
cld
adc
cmp
inc
adc
clc
mov
and
push
jmp
imul
cmp
jl
and
scas
or
dec
or
nop
xchg
and
pusha
lods
adc
adc
mov
jne
movs
sub
add
jno
cmps
ret
mov
cdq
(bad)
xor
add
push
cmp
inc
fst
add
shl
shl
cmp
aam
scas
(bad)
fld
in
add
or
jmp
pop
xchg
push
mov
in
xor
pop
pop
idiv
xor
jbe
push
or
push
mov
adc
or
inc
sub
test
fstp
loopne
sahf
add
loopne
cmp
inc
mov
sub
dec
xchg
cmp
push
add
add
repz
icebp
cmp
sub
push
adc
loopne
or
pop
(bad)
lock
test
and
cld
sub
mov
adc
cmp
cli
jmp
and
xchg
pop
arpl
fisub
sbb
mov
js
shl
cmps
jp
sti
adc
add
dec
push
xor
add
mov
cld
data16
or
dec
and
add
fnsave
push
ror
adc
shr
push
jns
pop
mov
and
dec
sub
(bad)
sbb
lea
dec
pushf
pop
push
pop
ret
dec
int3
xchg
jo
sahf
mov
test
cmp
pop
lds
js
and
popf
faddp
dec
call
push
pop
dec
add
addr16
(bad)
jl
mov
pop
out
push
mov
stos
or
outs
enter
add
retf
jmp
jae
jg
cmp
push
sbb
or
fcomp
push
hlt
inc
bound
push
sbb
and
(bad)
xor
dec
loopne
adc
outs
inc
pop
or
push
(bad)
ficomp
sub
dec
cmp
fnstenv
cmp
inc
and
movs
pop
jbe
jmp
sbb
retf
sub
jmp
call
and
aam
or
and
leave
loopne
ret
and
dec
pop
sub
aas
inc
inc
pop
jne
jmp
sbb
jle
push
dec
push
push
xlat
mov
je
adc
out
dec
add
mov
pusha
sub
ror
mov
or
push
mov
and
ret
or
in
dec
jge
mov
xchg
scas
push
mov
xchg
cmp
pushf
jg
push
sar
(bad)
aaa
mov
or
and
adc
jo
test
mov
pop
popa
jmp
(bad)
pop
enter
mov
jmp
in
push
jecxz
cmps
cmp
fsub
inc
popa
loop
cmp
sbb
adc
pop
pusha
jmp
xchg
jmp
or
push
jmp
in
fld
mov
sbb
ds
dec
sub
je
fxch
add
lea
clc
push
gs
jne
je
je
mov
pop
mov
and
rcl
xchg
aaa
out
add
int
jp
xchg
ret
(bad)
in
popa
fistp
or
stos
movs
int
lea
and
inc
icebp
pushf
cmp
adc
into
popa
cdq
pop
inc
ss
in
pop
cmp
inc
icebp
les
call
mov
mov
sbb
pop
loopne
shr
adc
add
aas
ds
add
inc
js
or
stos
shl
push
aas
or
mov
cmp
jne
or
push
fiadd
jp
inc
inc
inc
sub
mov
add
add
mov
inc
push
push
lods
outs
dec
xchg
imul
mov
scas
add
add
ins
cdq
mov
or
or
fild
xor
ret
lahf
outs
adc
add
dec
pop
adc
xor
mov
adc
cld
push
lea
fild
pop
adc
sub
jbe
cmps
test
push
cmp
je
popa
inc
pusha
xchg
inc
adc
stos
adc
outs
add
mov
mov
pop
xchg
dec
add
ins
or
clc
add
cs
push
or
retf
imul
pushf
sub
or
outs
xor
aam
sbb
mov
fs
fistp
sbb
mov
shl
retf
dec
dec
pop
pop
ins
or
pusha
ds
outs
adc
mov
sub
fadd
or
leave
xor
dec
outs
sbb
mov
sti
pop
xor
cmp
or
adc
cmp
xchg
retf
in
cmps
sub
xchg
adc
push
mov
cld
(bad)
rol
arpl
imul
ins
push
pop
dec
push
sbb
cmc
sar
leave
jbe
mov
imul
or
out
xchg
in
ret
jbe
imul
and
or
dec
jo
dec
ror
mov
das
mov
sbb
and
jmp
inc
call
add
ret
xchg
push
mov
add
jecxz
push
(bad)
outs
xor
adc
push
dec
push
mov
jle
cli
adc
xchg
mov
call
sub
pop
adc
in
dec
or
call
cmp
mov
inc
out
xor
sbb
pop
rol
or
ins
jbe
add
jl
outs
pusha
adc
mov
push
aad
imul
mov
or
push
pop
mov
jmp
xchg
pop
mov
xchg
xchg
inc
mov
xchg
mov
adc
inc
add
pop
or
cmps
mov
fstp
out
movs
mov
jno
ret
or
imul
jle
ss
pop
sti
push
clc
add
pop
outs
add
inc
mov
scas
popa
inc
jmp
imul
xchg
sub
(bad)
loopne
sub
loopne
out
and
mov
punpckldq
or
jbe
data16
sbb
int
call
xchg
call
(bad)
inc
outs
scas
push
sbb
push
cmp
jo
jne
add
mov
mov
mov
stos
hlt
test
lahf
jmp
ror
dec
sbb
retf
cli
jne
fimul
rcr
add
out
cld
sar
aaa
arpl
retf
ds
push
or
call
or
add
sub
mov
stc
je
and
jl
mov
mov
jg
pop
jno
jne
mov
fsub
cld
loopne
inc
xchg
in
jnp
fs
addr16
call
push
es
dec
or
mov
in
pop
add
jg
je
inc
adc
je
push
rcr
ret
fs
cmp
and
push
mov
in
pop
push
jmp
sub
hlt
mov
cli
or
jg
sbb
cld
verr
sar
push
ins
(bad)
fucomp
xlat
xor
loopne
es
mov
or
retf
mov
sbb
aaa
cmp
pop
mov
push
push
jns
js
out
repz
sub
enter
js
or
push
xchg
xchg
dec
pop
dec
push
xchg
pop
or
xchg
ret
pop
dec
inc
popa
lea
push
cmp
loopne
sbb
shl
scas
mov
inc
and
fstp
mov
cli
pop
ja
(bad)
test
xchg
add
push
push
int
sbb
bound
scas
mov
ret
adc
inc
(bad)
les
mov
fs
fs
sub
mov
ss
cmp
cmc
mov
pop
rcl
out
inc
(bad)
cmp
arpl
add
xor
mov
pop
sub
sbb
std
sub
xor
or
xor
pusha
test
sbb
int
sub
cmp
aam
mov
adc
dec
adc
push
push
sbb
cmp
and
xchg
push
cmp
jne
push
add
add
js
push
sbb
xchg
push
inc
out
pushf
dec
sub
mov
push
adc
ins
inc
aas
jo
or
push
inc
push
dec
sbb
push
ins
idiv
jne
mov
pop
inc
jge
mov
jnp
mov
jp
sbb
jbe
(bad)
jmp
inc
adc
mov
ins
jle
jl
xor
gs
fs
sub
and
or
push
(bad)
into
sub
or
or
shr
jmp
sbb
call
popa
in
inc
xor
xor
push
repnz
xchg
aas
in
inc
sbb
test
adc
add
add
jp
add
and
in
mov
ret
or
push
cmp
pop
pusha
loope
or
xlat
or
pop
adc
aas
add
mov
add
dec
cmp
lods
xchg
jecxz
(bad)
lock
cmp
pop
loope
mov
jmp
arpl
addr16
fisubr
popa
or
sbb
lea
sub
sub
dec
xchg
iret
mov
pop
dec
mov
outs
out
add
add
mov
loope
add
pop
add
or
cwde
add
and
pushf
mov
mov
mov
jbe
or
adc
push
sbb
frstor
(bad)
into
mov
sbb
dec
inc
ret
jno
push
pop
call
and
xor
sbb
adc
inc
inc
push
push
inc
or
inc
cmp
add
repz
xlat
sbb
sbb
pop
mov
xchg
pop
xor
xor
inc
sbb
sub
sahf
lods
or
push
xor
fs
shl
cmp
push
push
dec
mov
pop
daa
test
out
dec
push
xor
push
mov
sub
xor
push
add
jo
pop
dec
cmp
xchg
push
outs
jl
cmp
out
rcl
adc
call
out
popf
push
jns
pushf
cmp
xchg
inc
jle
ins
or
mov
inc
or
xor
pop
int3
frstor
inc
pop
mov
inc
jb
sar
inc
or
cmp
jle
mov
sbb
ret
lock
popa
pop
mov
add
and
push
mov
shl
fdivr
jle
dec
mov
add
mov
add
int
in
ret
xor
cmp
gs
shl
and
add
add
cmp
sti
push
and
mov
out
inc
add
mov
mov
pop
imul
mov
add
sub
and
test
ss
push
ficomp
les
fstp
cmp
cmp
adc
adc
pushw
jns
add
call
dec
or
div
jo
xor
mov
and
or
cwde
ret
test
xchg
out
sahf
xlat
cs
out
add
hlt
inc
push
ds
add
mov
xchg
fisub
jecxz
jne
data16
sbb
mov
jmp
add
jb
inc
loope
sar
jle
mov
add
sti
aas
ja
xor
ins
add
jo
xchg
ret
jl
xchg
inc
shr
popa
cmp
mov
xlat
jl
mov
pop
pop
mov
jl
pop
push
jge
mov
lods
pushf
xor
dec
ja
jl
inc
adc
je
push
mov
outs
dec
and
add
jns
sub
or
mov
push
imul
push
sub
scas
call
jle
dec
inc
scas
stc
ss
xor
mov
sub
and
sbb
cmp
jg
lock
pop
sbb
jl
xchg
aam
or
pop
xor
dec
mov
sti
mov
cmp
adc
pop
push
adc
push
mov
sti
push
sbb
mov
push
inc
and
ret
adc
loop
push
mov
(bad)
sub
ins
add
mov
pop
and
mov
cli
sbb
sub
xchg
cmp
add
jg
xlat
xor
sub
sbb
xor
mov
movs
repz
add
js
push
popf
dec
jne
sub
inc
ja
pop
and
ret
cmp
jne
imul
test
test
sub
xor
add
and
dec
adc
xor
mov
dec
jo
movs
or
jbe
lea
ss
push
enter
enter
inc
inc
cmp
outs
inc
jb
adc
sbb
sub
push
inc
push
cmp
cld
call
mov
shr
lds
jmp
fistp
sbb
dec
ds
sbb
sub
rcr
cmp
add
stos
add
sahf
out
ror
jg
sbb
add
int
(bad)
cmp
inc
rcl
out
or
mov
cmp
or
js
xchg
arpl
push
cdq
or
add
dec
btc
dec
test
lea
pusha
mov
test
div
das
push
stos
ror
ins
mov
fcom
sbb
push
test
add
cmp
lods
sar
xchg
jmp
push
sbb
adc
out
xor
rcl
jmp
jp
adc
in
shl
icebp
or
jle
mov
inc
adc
je
jge
and
mov
jp
mov
push
or
adc
mov
xlat
pop
rol
clc
sub
sti
clc
fst
loopne
cmp
aaa
or
clc
add
jle
and
push
mov
cld
mov
or
pusha
add
xor
inc
mov
add
(bad)
dec
clc
add
imul
dec
rcl
es
add
lock
or
sbb
or
or
adc
rcr
loopne
sub
mov
jge
sbb
hlt
sbb
push
cmp
aaa
sbb
and
cmp
cmps
add
add
adc
xor
sub
pop
movs
fwait
push
push
(bad)
mul
into
or
aaa
inc
sbb
inc
xchg
out
push
imul
add
aaa
xchg
jo
and
out
repnz
das
jne
mov
dec
xchg
lea
xchg
add
jp
icebp
push
or
mov
stos
and
movs
jl
js
mov
add
add
mov
xor
es
jne
dec
sub
jl
fsubr
pop
push
cmp
jbe
cdq
shl
fdivr
push
push
test
lods
dec
push
imul
xchg
hlt
inc
ret
mov
cmp
out
test
pushf
outs
adc
dec
ret
fimul
pop
cdq
add
mov
add
push
add
xor
pop
mov
in
rcl
push
or
push
inc
inc
cld
mov
out
and
fiadd
icebp
out
cmp
push
xor
stos
ss
jo
push
sbb
inc
and
retf
inc
mov
ins
sub
dec
push
lahf
ror
loopne
loopne
fchs
inc
sub
xchg
adc
and
call
je
cmps
enter
adc
sub
mov
sbb
add
push
dec
ins
adc
jne
jmp
ror
sbb
xor
xor
mov
dec
jmp
pop
or
test
outs
pop
sub
add
mov
mov
cdq
sbb
(bad)
add
and
lahf
popf
add
xchg
in
fild
call
jb
cmp
not
pop
sub
(bad)
pop
xchg
or
mov
mov
dec
sar
mov
jge
or
inc
or
jl
ss
or
cli
add
cmovp
test
call
xchg
jbe
jae
in
jmp
scas
mov
jle
test
lea
lds
and
jne
sbb
out
jmp
and
jnp
jp
cmp
add
xor
xor
cmp
loope
jne
test
je
or
dec
(bad)
ret
jl
inc
in
retf
inc
sub
xchg
mov
fcmovbe
cmp
fcmovu
jge
inc
sub
cmp
rol
pusha
loope
adc
or
push
call
rcr
movs
jo
add
push
(bad)
push
inc
add
add
adc
jg
into
xor
and
mov
pop
mov
push
inc
shl
sub
call
and
ror
adc
cmp
inc
jo
pop
je
cli
in
add
aaa
sub
inc
adc
dec
aas
or
mov
inc
retf
push
add
adc
jb
mov
adc
lea
cmp
mov
and
ds
test
xchg
lock
mov
inc
inc
js
mov
push
(bad)
jo
cmps
and
add
lods
nop
cmp
iret
dec
sbb
xchg
pop
mov
test
add
mov
test
mov
xchg
fcomp
and
push
inc
jg
lea
or
fcom
fiadd
jg
aas
loop
movs
or
mov
sbb
pop
imul
pop
ja
or
ds
jne
or
jae
mov
mov
xlat
in
add
sub
mov
sbb
add
test
xor
or
xchg
gs
inc
cli
mov
xchg
fcomp
sar
(bad)
sbb
fwait
mov
mov
lahf
jb
add
add
push
or
mov
loopne
or
nop
pop
or
retf
sbb
cmp
or
repz
ret
jmp
das
(bad)
js
and
mov
shl
out
jl
rol
js
push
aas
add
ins
movs
mov
(bad)
outs
ror
js
lods
fnsave
sbb
jb
xor
pop
call
sbb
fucomip
test
add
lds
sub
out
add
mov
mov
add
push
cmp
add
mov
add
push
xchg
cli
repz
mov
sbb
sub
sbb
mov
outs
idiv
mov
jne
add
mov
test
out
mov
dec
dec
jle
xchg
or
nop
lea
or
loopne
xchg
or
adc
add
cmp
inc
mov
push
inc
add
retf
push
xchg
cmp
dec
dec
push
mov
sbb
outs
jnp
hlt
cs
adc
jae
xor
shl
int
es
outs
sbb
push
ds
pop
shr
add
and
stos
mov
mov
mov
call
jge
and
dec
jb
mul
cmps
sti
jle
cld
sub
jae
and
test
test
add
daa
pop
test
mov
mov
gs
dec
cmp
pop
mov
dec
mov
inc
push
(bad)
or
and
fwait
mov
mov
add
es
cmp
pusha
data16
iret
push
cli
adc
push
xor
js
add
mov
enter
add
xor
or
shr
push
dec
sub
jge
adc
out
mov
inc
ret
mov
cli
leave
adc
sar
push
movs
lock
and
inc
push
cmp
jle
mov
adc
and
test
xor
xor
test
or
sti
aas
dec
sar
xchg
mov
fwait
mov
cmp
add
push
jae
outs
adc
push
mov
mov
push
sub
mul
push
inc
movs
cmc
leave
in
dec
and
mov
call
sub
xchg
lock
pushf
add
sahf
out
and
enter
dec
rcr
pop
adc
xchg
ret
stc
fstp
ja
jg
fst
sahf
and
push
push
cmp
call
cmp
and
xchg
pop
std
out
sbb
jne
sub
cmp
inc
or
or
je
rol
je
lods
sbb
mov
xchg
add
pop
cmp
or
in
adc
fcmove
scas
adc
and
mov
xor
sub
imul
cmp
or
ret
sub
fistp
or
ret
inc
lahf
fimul
mov
mov
mov
cmc
adc
xchg
mov
push
stc
fidivr
scas
stos
ficom
sub
cmp
hlt
ja
lock
mov
push
(bad)
pop
ret
cmp
xor
or
inc
pop
push
or
xchg
lea
loop
movs
mov
aam
jl
mov
xor
inc
(bad)
shl
cmp
sbb
push
push
sbb
or
and
jp
xchg
add
lods
out
mov
imul
adc
xor
dec
sti
cmp
cmp
or
inc
popf
movs
pop
std
add
and
mov
sbb
mov
test
xchg
inc
push
mov
test
push
mov
ss
xlat
push
inc
imul
pop
sbb
test
loope
ficomp
ret
mov
or
ficom
dec
mov
inc
inc
adc
mov
jns
daa
jl
mov
out
jnp
int3
jle
add
or
adc
sbb
push
clc
dec
fisttp
inc
loop
jno
mov
mov
sbb
shr
fcmovne
jbe
fadd
or
shl
icebp
xchg
add
xchg
in
mov
inc
and
fnstcw
cdq
pop
lea
hlt
std
add
pusha
pop
hlt
sti
das
push
mov
loope
lods
and
shl
movs
mov
sbb
sub
dec
inc
rcl
lea
stc
nop
and
mov
dec
add
xor
or
inc
adc
gs
test
test
mov
inc
adc
call
repnz
icebp
stos
inc
and
movs
mov
fdivrp
(bad)
fadd
dec
adc
js
or
arpl
mov
outs
mov
fsub
sbb
rcr
jle
pushf
mov
in
or
jne
pop
adc
ja
aas
sub
leave
mov
jmp
inc
lds
or
sbb
jnp
cmp
dec
sbb
xchg
xchg
xchg
movs
sbb
rcl
adc
inc
push
mov
or
(bad)
jae
sub
inc
cmps
pushf
add
adc
pop
stos
rcr
lar
jecxz
test
cs
js
add
xchg
into
cmp
or
push
(bad)
cmp
data16
in
repnz
paddb
test
or
adc
call
mov
sub
jp
test
lds
add
pop
xor
pop
sub
ins
popa
xchg
imul
sub
cdq
mov
mov
add
dec
fstp
sub
inc
inc
call
cmp
xor
daa
xchg
jnp
or
mov
push
xor
jb
inc
mov
or
sbb
test
sub
cdq
dec
mov
repz
inc
cmc
cmp
pop
mov
push
(bad)
enter
jne
add
or
and
sub
mov
dec
adc
adc
ror
ds
clc
adc
push
pop
xor
cmp
xor
cmp
sub
mov
sub
pop
lock
or
dec
retf
push
shr
mov
sbb
or
std
push
fnstenvw
cld
cmp
pop
pop
in
cmp
ffreep
dec
pop
scas
adc
fiadd
(bad)
lods
imul
ins
outs
nop
and
nop
mov
jo
mov
ror
adc
xor
aaa
xchg
sub
cmp
imul
fwait
or
je
mov
cwde
into
mov
out
mov
nop
call
push
jmp
sub
add
ret
adc
js
cdq
adc
ja
lock
es
dec
sahf
xor
mov
pushf
or
and
mov
fcmove
and
dec
adc
or
sbb
cmp
push
pusha
retf
fcomp
sbb
mov
add
sti
sub
into
add
xchg
pusha
jne
cmp
call
test
cmp
pushf
adc
xor
jle
inc
inc
add
adc
stos
push
jnp
xchg
test
fadd
mov
js
adc
inc
sbb
mov
mov
jp
or
add
fidivr
jae
sub
xchg
shr
cwde
push
sti
add
and
mov
adc
add
mov
jge
jge
jl
test
adc
sub
shl
sbb
sub
adc
push
push
fmul
push
jle
cmp
nop
cmp
dec
dec
and
mov
pop
jne
call
xchg
pusha
xchg
test
arpl
mov
xor
or
test
call
mov
call
xchg
imul
sbb
cmp
cs
push
jmp
cmc
cmps
mov
fwait
data16
push
mov
sbb
pushf
xor
fdiv
jno
lahf
and
cmp
or
rcr
cwde
jle
sbb
loop
jle
cmps
adc
inc
pop
fcompp
mov
(bad)
jo
aaa
leave
push
and
lea
fistp
mov
cmp
add
xchg
lock
xchg
cmp
je
enter
call
and
pop
repz
jbe
(bad)
mov
or
arpl
(bad)
in
ret
cwde
inc
cmp
sbb
jmp
sbb
lds
pusha
aad
adc
in
ins
push
cmp
cmps
dec
mov
addr16
and
xchg
test
jmp
push
ficom
shl
stos
sub
add
push
push
ret
out
add
hlt
mov
aaa
fwait
mov
inc
daa
in
ret
out
punpckhdq
mov
push
or
test
mov
cmp
pushf
int
sbb
scas
xor
pop
js
ldmxcsr
push
outs
retf
inc
jno
ins
vpaddsw
or
or
jne
int
js
jb
pusha
add
mov
pop
cmps
jb
outs
sar
or
and
xor
inc
or
sub
aam
jle
mov
pop
xchg
mov
mov
cmc
sub
nop
mov
imul
add
xchg
ror
cmps
push
outs
pop
xchg
adc
mov
je
push
or
or
es
mov
mov
add
out
in
jns
add
ds
aas
mov
test
pop
ss
mov
sub
cmp
cmp
mov
xchg
mov
mov
inc
test
imul
xchg
jmp
shl
adc
mov
and
xchg
xor
mov
cmp
push
or
mov
mov
das
ret
sub
div
test
xchg
or
popa
xchg
idiv
sub
popf
and
or
jb
push
dec
adc
iret
sbb
loope
sbb
sub
cs
jl
mov
stos
cmp
jg
jecxz
sbb
adc
clc
adc
(bad)
sbb
enter
push
pop
add
pop
out
mov
and
jnp
sbb
mov
lock
dec
adc
or
lods
ret
scas
mov
adc
stos
cmp
not
lea
out
sub
mov
iret
mov
mov
or
rcr
xor
xchg
rcl
hlt
mov
xor
xchg
ret
pop
xchg
and
mov
push
jmp
mov
xchg
out
test
das
adc
mov
(bad)
(bad)
mov
pop
xor
push
mov
ins
out
and
cmp
je
cmp
mov
pop
movs
or
or
add
jb
dec
xor
and
loope
push
lea
mov
sar
xchg
or
and
cmp
mov
xchg
mov
and
lahf
lock
sbb
inc
and
fwait
clc
nop
ret
ss
data16
shr
mov
add
test
ret
sahf
shl
ds
adc
push
jle
pusha
lock
and
rol
test
int3
jo
ds
je
mov
retf
add
xchg
mov
jae
sbb
int
sub
and
mov
sub
dec
je
or
popa
cld
loopne
mov
jmp
rol
cmp
add
mov
repz
lea
or
cmp
xchg
fisttp
ret
mov
inc
addr16
movs
test
test
xor
mov
pop
add
pop
xor
rcl
cwde
cs
clc
push
push
mov
out
jb
je
inc
add
push
ins
adc
add
and
add
sub
sahf
nop
or
mov
add
xadd
adc
push
mov
or
and
popa
in
add
push
and
mov
sbb
inc
push
mov
push
lods
sahf
test
push
or
xor
lock
enter
xor
hlt
outs
mov
into
add
inc
or
or
ins
and
xchg
add
push
imul
xchg
sbb
cmp
inc
push
adc
jp
jb
lea
scas
iret
xchg
fiadd
ds
dec
xor
ret
jne
repnz
es
lea
and
adc
xchg
add
fcomp
push
pop
jge
xor
jo
inc
hlt
repnz
or
mov
dec
or
(bad)
jg
add
sar
add
mov
sub
into
es
mov
rcl
test
cmp
push
inc
push
push
sbb
aaa
mov
call
addr16
mov
push
mov
and
sub
mov
or
mov
mov
sbb
dec
push
je
fidivr
or
sbb
sub
xor
gs
pusha
ss
sbb
xor
popf
adc
leave
mov
sbb
xor
movs
xchg
dec
pop
neg
lods
or
cs
or
pop
jae
or
cmp
(bad)
rol
test
mov
sub
xchg
xchg
adc
inc
inc
mov
push
mov
mov
stc
xor
call
fisttp
or
mov
loope
inc
pop
ins
je
adc
in
mov
sbb
dec
mov
pop
sahf
or
jb
mov
loopne
xchg
mov
stc
sbb
xor
test
sub
enter
in
and
(bad)
mov
add
dec
or
xor
out
or
frstor
fisubr
adc
dec
adc
inc
pop
mov
mov
outs
pop
in
sbb
inc
mov
fs
xor
rol
or
loop
and
fld
mov
das
repnz
pop
add
xor
in
mul
mov
mov
sbb
xchg
push
icebp
dec
mov
mov
lods
clc
mov
jl
mov
icebp
addr16
setle
jle
je
std
fisttp
lea
fsub
fstp
mov
clc
adc
add
fstp
fldenv
adc
push
mov
inc
jl
lea
rcl
ret
(bad)
test
mov
test
inc
sbb
jo
cmp
arpl
data16
inc
xor
movs
inc
cmp
mov
lds
in
mov
jl
(bad)
mov
push
push
ja
mul
call
cdq
and
jno
lods
and
or
xor
add
or
adc
cmp
cs
cmps
jns
in
call
push
out
sar
add
mov
push
xor
mov
pop
add
adc
sbb
push
aas
and
sub
pop
js
xchg
rol
xor
jne
imul
leave
sbb
add
nop
inc
or
and
mov
icebp
cmp
test
add
lock
cld
xchg
pop
cmp
arpl
outs
jno
mov
sub
rcl
push
push
mov
fsubr
adc
cmp
sub
fwait
and
jle
loopne
mov
ret
push
inc
mov
pop
mov
mov
dec
pop
push
lea
jmp
ins
jno
ret
fld
push
hlt
sar
fwait
add
out
inc
fst
sub
mov
ins
and
cmp
test
fsub
in
xchg
dec
in
aaa
ins
push
pop
pop
test
cmp
js
jl
retf
in
add
cs
cmp
pop
call
int3
nop
sahf
sbb
dec
daa
jle
pop
xor
out
retf
xchg
aaa
pop
cwde
sbb
mov
add
sbb
das
imul
inc
push
push
add
push
mov
mov
xchg
adc
add
fsubr
cmp
lock
je
cmp
push
or
in
xor
pop
fstp
sbb
cmp
add
and
pop
push
mov
pop
xor
rcr
cmp
loopne
(bad)
push
stos
dec
sub
mov
sbb
mov
test
push
push
mov
xchg
jmp
mov
movs
add
movs
lahf
push
mov
stos
es
jo
(bad)
push
(bad)
call
les
or
fldlg2
fld
jmp
push
mov
or
sar
push
fldcw
jns
sbb
sbb
push
add
sbb
mov
pop
iret
or
sbb
ret
xchg
or
test
pop
btc
push
mov
mov
cwde
or
xor
xrelease
push
xchg
fnstcw
sbb
shl
adc
ss
test
ret
mov
shl
jmp
pop
in
fadd
leave
jae
ror
jle
(bad)
cmp
mov
movsx
add
or
lea
nop
in
scas
dec
cmp
pop
or
sbb
mov
push
push
and
test
add
das
or
fnstsw
cmp
fwait
stc
mov
data16
mov
push
jnp
ins
and
sar
js
push
adc
mov
dec
inc
mov
pop
fucom
mov
push
aaa
call
mov
dec
stos
not
or
push
inc
cwde
loop
mov
mov
jp
xor
inc
and
push
rol
xchg
jl
or
in
dec
jb
and
pop
mov
loope
mov
jb
add
fwait
add
adc
nop
sbb
stos
xor
cmp
or
sbb
rcr
rol
adc
lock
dec
lods
mov
movs
push
jg
jnp
mov
test
sub
and
push
in
loopne
mov
sub
into
cmp
or
cmp
or
lea
out
aas
mov
movs
mov
dec
dec
je
dec
jne
ss
cmp
jne
cmp
and
dec
add
mov
cmp
push
sbb
popa
lea
inc
xor
pop
and
push
sbb
nop
inc
(bad)
fisttp
das
icebp
out
adc
cmp
retf
ret
and
or
or
clc
or
shl
push
push
cdq
push
or
xchg
ss
ds
sbb
xor
sub
cmps
rol
into
test
sub
sub
push
sbb
pop
ret
lods
out
outs
add
jno
add
jp
ret
jno
es
xchg
sub
or
jg
or
cwde
popa
mov
rol
xchg
fcmovnb
ffree
sub
jmp
lods
inc
jbe
fmul
or
mov
push
xor
mov
add
xchg
ficom
or
test
mov
pop
popf
ror
int
inc
mov
jo
jne
das
mov
ret
ror
or
cmp
mov
mov
or
or
dec
dec
clc
adc
test
xlat
and
jbe
cmp
sub
cs
shl
jl
jns
mov
or
test
lock
push
mov
adc
inc
xor
jmp
retf
or
or
pop
test
and
test
push
imul
push
loopne
mov
in
add
jne
jb
mov
es
mov
enter
in
fadd
(bad)
cli
or
adc
test
jle
and
int3
jnp
jne
sbb
add
add
pop
push
sub
mov
pop
cmp
xchg
test
ror
or
cs
adc
imul
aad
pop
cmc
ret
push
retf
test
push
test
xor
pusha
mov
iret
loop
xor
gs
cmp
fwait
add
sub
in
fwait
adc
adc
add
dec
dec
adc
adc
and
add
adc
adc
push
mov
pop
pusha
xor
dec
add
(bad)
push
sub
xchg
jne
cmp
rcl
clc
pop
cmp
inc
in
js
pop
push
shl
(bad)
add
in
xchg
out
in
mov
xchg
arpl
sbb
loope
adc
mov
jbe
adc
mov
call
pop
es
outs
enter
sbb
das
push
mov
leave
cmps
loope
sub
push
push
pop
jns
or
jmp
fs
loope
cwde
sbb
sub
daa
mov
mov
mov
pop
add
adc
fld
dec
enter
cmp
jnp
stc
and
stc
stos
in
loopne
outs
pop
mov
mov
xchg
push
mov
dec
imul
aas
cdq
and
out
ret
push
(bad)
loop
push
outs
mov
sub
add
hlt
test
inc
ins
in
sbb
push
ror
imul
and
je
lods
movs
stos
sti
sbb
mov
xchg
fs
outs
pop
scas
sub
fmul
mov
jp
retf
aas
call
test
cld
and
(bad)
loopne
stos
cmp
mov
pop
push
push
lods
shl
lds
scas
jne
mov
mov
jp
(bad)
ret
shl
xchg
mov
inc
aad
xor
and
ret
cld
popf
loopne
stos
sbb
lock
ret
jb
jo
sub
in
pop
mov
adc
loope
sbb
mov
outs
cmps
push
xor
or
or
push
dec
lea
sub
and
push
xlat
mov
jb
sub
ins
inc
(bad)
jg
fimul
lods
pop
dec
xor
ja
es
add
and
fadd
mov
div
das
cdq
cmc
pusha
add
add
mov
je
fld
fsub
mov
int3
cmps
cli
xchg
mov
cmc
pop
or
fwait
js
dec
and
cmp
adc
sub
mov
jne
add
xchg
xor
cmp
jo
sub
loop
xor
add
xchg
aaa
sub
movs
and
pop
adc
enter
add
pop
fwait
add
mov
add
xor
out
mov
pusha
pushf
out
or
add
cmp
dec
push
mov
or
push
push
xchg
inc
mov
push
(bad)
movs
xor
sbb
jbe
les
sub
sbb
scas
cmp
add
mov
retf
mov
add
push
ja
and
adc
pop
sbb
xor
shl
pop
cmp
sbb
js
gs
sub
xor
xchg
movs
push
mov
stos
xor
outs
mov
icebp
jmp
stos
jb
pop
adc
fstp
mov
adc
xor
pop
push
leave
xor
xchg
mov
bswap
sbb
cmps
lahf
dec
mov
mov
fsubr
daa
push
add
les
out
jg
bound
pop
push
jle
(bad)
cmove
mov
mov
je
mov
(bad)
xor
pop
push
aam
dec
xor
movs
(bad)
adc
mov
lahf
test
out
rcl
ja
add
push
jbe
sbb
add
lods
dec
xchg
mov
adc
mov
sbb
std
dec
and
xor
push
ins
jge
add
inc
xchg
jmp
add
inc
movs
mov
mov
in
scas
mov
imul
jl
sar
dec
or
jo
push
clc
push
sub
pop
nop
or
mov
add
in
in
or
aam
and
jg
scas
dec
pop
shr
jecxz
pop
jle
push
jb
sub
push
or
aaa
ret
or
sub
icebp
loope
cmp
inc
or
xchg
jbe
and
test
cs
movs
stc
popa
not
pushf
add
or
add
ret
sbb
cmp
(bad)
push
lods
icebp
popa
sbb
in
in
dec
lea
shl
mov
cmp
ins
add
mov
adc
dec
loopne
je
sbb
scas
adc
mov
test
adc
sub
adc
xor
adc
inc
push
sbb
pop
les
call
arpl
jo
(bad)
bnd
ja
mov
xchg
cmp
lock
add
fisttp
pop
jg
cmp
jne
jno
imul
xchg
xor
je
ds
push
pop
jb
sub
sbb
sbb
pusha
add
mov
sbb
ror
push
sub
test
pusha
push
lea
xchg
mov
sub
or
jge
mov
adc
adc
loop
jnp
enter
mov
ret
imul
popa
pop
test
inc
js
daa
aaa
jmp
js
xchg
lods
in
aam
xor
mov
xor
test
cmp
stos
inc
mov
(bad)
xor
push
or
(bad)
out
mov
dec
xchg
inc
cmp
fmul
xchg
fwait
or
mov
cmp
xchg
xchg
js
inc
dec
push
dec
dec
fwait
inc
cmp
aad
cmp
movs
push
and
add
aas
xor
scas
inc
push
out
pop
daa
pop
lea
or
test
push
or
jecxz
aaa
sbb
(bad)
pop
mov
jge
cmp
popf
cmp
pushf
aas
push
pop
pop
fiadd
pop
pushf
xchg
xor
rol
in
cmp
xchg
call
or
mov
fadd
(bad)
shr
inc
(bad)
fwait
test
jg
add
inc
xchg
shr
out
pop
mov
leave
push
xchg
test
jo
cld
call
mov
test
cwde
cmp
inc
lods
(bad)
(bad)
mov
and
add
jmp
add
sbb
cmp
je
(bad)
dec
loopne
inc
xchg
xor
icebp
jl
and
dec
cmp
mov
xchg
or
fucomi
clc
addr16
jle
add
or
rol
lods
jbe
out
xchg
xor
les
push
add
xchg
dec
cmps
add
sbb
fstp
adc
push
cli
add
add
mov
pop
inc
mul
add
mov
int
int3
ins
push
add
push
sub
xchg
imul
rol
lods
mov
add
cdq
pop
inc
adc
(bad)
cmp
ret
pushf
xor
lea
cdq
push
pusha
lods
xchg
adc
mov
pop
push
mov
dec
sub
and
lds
je
scas
loopne
mov
ss
adc
xchg
mov
test
ss
fistp
mov
pop
add
push
add
add
int3
push
add
push
cmp
sahf
nop
sbb
ret
xchg
mov
pop
cmps
xor
mov
sbb
sub
in
sbb
sbb
repnz
sbb
pop
pushf
sbb
xchg
or
mov
dec
sub
daa
sub
(bad)
jge
loopne
test
mov
(bad)
out
adc
dec
es
movs
cwde
xchg
add
ret
nop
nop
and
ins
push
push
es
dec
dec
leave
xchg
add
pop
rol
ret
or
xchg
push
push
mov
xor
sub
xor
sub
in
in
fiadd
cs
dec
xchg
hlt
or
or
jmp
out
xor
out
adc
mov
int
push
and
jb
and
stos
or
dec
or
imul
add
cmp
sub
and
mov
popf
in
in
data16
sbb
add
cmp
call
or
add
add
clc
retf
dec
add
xchg
or
ret
and
test
or
ret
in
xchg
mov
sub
cmp
dec
mov
sbb
inc
mov
mov
imul
cmp
outs
mov
ret
aam
or
or
mul
push
fwait
sbb
retf
or
das
test
test
out
mov
push
arpl
mov
out
test
cs
(bad)
sti
shr
movs
in
div
and
push
nop
ins
(bad)
mov
or
cdq
mov
xor
jmp
loopne
adc
ja
jo
aam
add
enter
jmp
mov
cdq
nop
push
cli
xchg
test
test
dec
push
ret
imul
retf
inc
adc
push
bound
adc
aas
adc
push
call
enter
ins
test
aas
add
xchg
sbb
sub
and
cmps
dec
or
in
fsubr
loopne
mov
test
scas
test
dec
fdecstp
(bad)
data16
push
jmp
popa
dec
jo
push
fistp
push
push
jl
hlt
add
mov
movs
loopne
and
xchg
loopne
imul
inc
cmp
pop
adc
pop
pop
xchg
je
pop
(bad)
jno
lock
push
mov
aas
cli
test
mov
mov
(bad)
xor
outs
and
(bad)
fcom
call
pop
xor
rol
push
add
test
daa
daa
ins
in
push
rcl
cmps
ret
sub
out
(bad)
and
(bad)
xor
dec
das
enter
push
push
inc
jg
sub
xchg
pop
mov
sub
xchg
inc
(bad)
ins
adc
imul
or
lahf
fmul
mov
out
cld
pop
sbb
ret
add
cwde
sbb
sbb
lock
jmp
push
ror
jl
cmps
mov
adc
mov
add
sub
test
daa
pop
or
out
or
jge
test
push
sub
push
sub
inc
adc
push
xor
push
lahf
mov
jae
or
fst
sub
jne
fstp
sbb
inc
aam
sbb
inc
jle
xor
and
inc
xchg
push
dec
push
fwait
and
or
jl
push
mov
test
pop
mov
add
mov
call
int3
sahf
or
setl
out
add
mov
mov
rcr
add
lods
les
pusha
push
lea
adc
xlat
inc
clc
rol
rcl
or
pop
or
adc
sbb
cmp
loope
sbb
inc
inc
jno
js
dec
mov
mov
test
mov
adc
aam
and
push
out
add
stc
push
(bad)
mov
and
je
xchg
ss
push
int3
in
push
xchg
nop
dec
outs
aam
imul
and
shl
(bad)
push
xchg
ins
and
rcr
fild
adc
(bad)
push
sub
cmp
sub
mov
push
clc
fsubr
jnp
push
sub
xchg
cmps
jge
js
in
aam
shr
(bad)
(bad)
aas
ror
fmul
jmp
sub
jbe
shr
fwait
or
cli
add
sbb
mov
and
or
xchg
cwde
cmp
dec
adc
dec
shl
jle
clc
and
add
xchg
mov
cmp
out
cmp
and
loopne
(bad)
ins
ss
or
inc
sbb
xchg
ror
dec
jo
cmp
ja
jmp
add
cld
imul
mov
es
sub
loopne
dec
sub
sti
dec
in
cmp
xor
sub
imul
cmp
jne
adc
push
jae
jns
stc
mov
sbb
add
js
mov
adc
pusha
cmp
stc
add
add
xlat
adc
adc
jl
xor
adc
sbb
sbb
mov
inc
and
int3
aam
call
ret
or
and
out
out
(bad)
xchg
adc
or
aas
test
cmp
rcr
sbb
(bad)
jecxz
add
adc
aad
push
enter
inc
(bad)
outs
inc
das
jl
add
sbb
or
shl
jmp
popa
add
adc
push
out
jge
or
or
inc
movs
push
or
push
adc
push
xor
jge
(bad)
(bad)
dec
retf
call
jecxz
les
push
movs
sbb
lsl
pop
sub
sub
mov
jg
mov
push
sub
cli
or
jle
jmp
gs
xor
pushf
push
mov
ret
cwde
add
add
push
clc
inc
mov
iret
les
fidivr
add
mov
sbb
sbb
adc
push
dec
push
and
fs
adc
inc
mov
sub
add
stos
test
aad
add
pop
or
lea
daa
or
sbb
lods
fist
sbb
jbe
ret
xor
xchg
cmp
hlt
push
push
sbb
adc
push
jo
cmps
push
ss
jl
pop
mov
int3
jge
adc
sbb
cs
sub
sub
ins
loope
rcr
mov
cmp
mov
push
push
(bad)
fcmovnbe
add
and
in
sbb
neg
rol
mov
cmp
sbb
(bad)
ficom
push
push
mov
fcom
mov
inc
adc
pop
adc
arpl
mul
dec
hlt
pop
lock
mov
xchg
(bad)
cdq
shl
div
sbb
inc
add
mov
dec
call
inc
jge
mov
mov
in
xchg
pop
fisttp
jg
sub
sar
add
or
jno
shl
push
(bad)
or
mov
call
test
cmp
jge
sbb
add
clc
dec
sbb
cdq
imul
adc
dec
push
jb
lods
and
dec
jne
retf
movs
add
call
xchg
mov
mov
mov
mov
or
inc
bnd
add
add
sub
add
or
add
cmp
mov
dec
xchg
stos
cmp
or
shr
push
sar
pmulhuw
jmp
repz
call
ret
push
xchg
add
jmp
mov
push
jb
jae
add
movs
add
inc
pop
adc
dec
mov
or
or
cdq
and
push
cs
pop
mov
fiadd
add
jae
or
push
or
fimul
jg
and
sti
sbb
fimul
inc
sahf
jne
push
xchg
mov
jl
and
pop
jge
pusha
inc
push
add
cs
adc
adc
xor
int
call
daa
push
call
xchg
push
add
in
stos
cmp
dec
adc
or
adc
fdivr
scas
pop
mov
push
fcmovnu
lahf
aaa
sbb
jecxz
xchg
mov
push
cmp
pop
jae
shr
or
sar
mov
and
test
push
sbb
adc
sub
test
or
cmp
inc
and
jl
add
hlt
movs
(bad)
test
dec
mov
push
add
cmp
adc
fdivr
push
fdivr
push
push
or
std
sub
sbb
push
sub
mov
es
pop
call
pop
js
aam
jmp
jne
inc
dec
int
inc
mov
push
fidiv
ins
hlt
jns
mov
xchg
xor
clc
jg
xchg
xchg
push
dec
cld
mov
sahf
dec
mov
pop
sbb
or
ja
xlat
pop
pop
push
pop
shl
or
and
scas
xor
xor
pop
(bad)
pusha
inc
inc
sti
inc
jmp
jmp
clc
lock
test
xchg
mov
cmp
adc
imul
cmp
add
push
(bad)
sbb
or
rcl
div
loop
jb
push
or
aaa
xchg
sub
jmp
cmp
dec
cmp
pop
ja
xchg
xor
psubusb
mov
addr16
inc
or
outs
xchg
or
add
sub
jnp
cs
inc
idiv
and
push
jns
es
lahf
je
dec
mul
jmp
sub
and
sub
cmp
fcmove
test
jmp
dec
mov
and
cmp
je
or
add
add
add
int3
mov
cmp
cs
test
into
in
jmp
jg
mov
inc
cmp
sub
ins
shr
cmp
call
std
mov
fcomip
popa
dec
stos
xchg
add
push
mov
scas
mov
cld
push
icebp
pop
jo
and
or
leave
ret
pop
hlt
mov
add
jae
jns
xchg
sbb
mov
inc
cld
jecxz
js
jo
je
adc
fwait
sbb
(bad)
lea
test
sbb
movs
dec
adc
les
aam
push
push
or
add
gs
mov
sti
push
sbb
mov
xor
mov
add
mov
jp
mov
mov
push
sbb
adc
cs
add
dec
push
xor
cmps
and
cmp
or
jne
sbb
test
and
daa
push
pop
ja
lock
push
sub
inc
lock
sbb
or
je
fild
mov
cmp
inc
or
loopne
push
xor
(bad)
add
adc
mov
sub
jmp
sbb
mov
mov
mov
inc
mov
push
xchg
retf
mov
pop
jmp
(bad)
in
push
pop
add
in
add
or
mov
sub
dec
mov
sub
cmp
pop
cmp
cs
sub
pop
dec
adc
outs
and
mov
ret
inc
push
and
pop
dec
movs
mov
sub
and
mov
retf
mov
push
pop
jae
js
cmovle
nop
adc
test
dec
add
mov
stos
jo
or
jmp
and
fbstp
push
ja
push
push
clc
inc
aas
rol
(bad)
fwait
enter
cs
stos
sbb
fadd
fadd
dec
mov
stc
mov
and
cmp
and
test
jnp
ins
inc
and
pusha
jmp
dec
pop
pusha
pop
jb
out
xor
movs
mov
xor
jnp
ror
inc
mov
sqrtps
jno
movs
xor
jle
movs
adc
push
bound
jnp
sbb
ins
pop
jle
movaps
ss
sub
adc
int
(bad)
sub
popf
push
jo
dec
push
adc
loop
outs
lds
lods
jp
push
jo
inc
shl
mov
pusha
sahf
fisub
or
(bad)
and
push
lea
mov
stos
or
mov
xor
fidiv
test
ficomp
mov
fimul
push
retf
js
mov
push
movs
mov
inc
mov
and
das
sbb
sbb
cmp
lods
xor
push
mov
xor
js
dec
bound
and
cmps
fstp
mov
inc
push
dec
imul
or
xchg
mov
in
mov
add
xchg
ror
and
cmp
xor
inc
mov
sub
nop
sub
adc
aaa
in
ja
and
jl
rol
sub
les
pushf
mov
test
gs
fld
xchg
inc
cmp
jne
sub
mov
push
retf
xchg
lock
loopne
or
dec
or
ins
mov
scas
fs
push
je
pop
loope
xchg
iret
fst
out
push
jmp
mov
mov
cwde
mov
loopne
mov
bsf
add
sbb
(bad)
int
and
mov
dec
and
enter
xor
test
push
mov
retf
pop
add
inc
sub
xchg
(bad)
mov
(bad)
gs
int3
pop
sbb
xor
jns
adc
add
add
xor
ins
add
and
add
push
add
enter
int3
push
sub
pusha
dec
add
adc
or
out
cmp
and
dec
pop
inc
and
or
test
cdq
fld
bound
push
repnz
cmp
dec
mov
mov
and
pop
ror
mov
adc
ins
les
jl
add
rcl
jno
jno
shl
push
pop
icebp
mov
inc
and
aas
mov
test
je
mov
push
icebp
and
jecxz
sbb
jns
jns
inc
inc
push
jne
jmp
dec
or
and
sub
xor
dec
in
sub
in
and
into
int
data16
daa
jne
repz
pop
xchg
push
mov
leave
or
loopne
xor
sbb
movs
or
jne
mov
xchg
dec
or
add
add
pop
les
or
test
js
and
js
(bad)
hlt
sbb
jno
or
fiadd
and
adc
mov
aas
sub
xor
inc
push
pop
jae
nop
je
xor
push
and
dec
stos
lods
test
and
sbb
add
dec
or
adc
or
mov
clc
aas
das
pop
sub
or
loopne
or
pop
sub
stos
add
div
jbe
pop
dec
add
ins
into
xchg
xchg
mov
adc
cmp
jbe
jp
and
mov
dec
cmc
(bad)
cli
mov
lds
mov
cwde
and
add
adc
sub
inc
clc
ds
or
out
inc
cmp
movs
jno
or
pop
aas
and
xor
sbb
and
leave
sub
adc
sahf
mov
loopne
mov
inc
or
lahf
ja
adc
pop
int
inc
adc
add
adc
add
out
and
cdq
nop
ja
dec
(bad)
or
add
ins
imul
adc
(bad)
and
add
in
mov
push
jne
inc
je
xchg
add
cmp
(bad)
in
ss
inc
and
mov
adc
pushf
or
adc
lock
es
sub
mov
dec
cmps
mov
or
ss
jbe
mov
(bad)
daa
add
aaa
mov
adc
pop
cmp
add
cmp
(bad)
cmp
jbe
jecxz
jmp
es
inc
cmp
js
pop
mov
popw
cli
cmp
ja
xchg
loop
int3
jmp
outs
mov
jge
or
dec
xor
cmp
mov
xchg
sbb
lods
add
jbe
inc
pop
jb
mov
or
les
cmc
cmp
add
sbb
add
cwde
add
not
das
or
inc
xor
mov
inc
cmp
inc
sub
sbb
jg
add
(bad)
retf
xchg
pop
outs
dec
(bad)
sbb
mov
mov
js
adc
fstp
push
shr
xor
out
xor
enter
iret
fwait
lods
or
push
xchg
jge
aaa
and
fs
mov
sub
ficom
cdq
mov
or
ds
jne
(bad)
jmp
mov
jmp
lods
inc
dec
sbb
or
lock
jne
pop
dec
adc
shl
or
dec
xor
mov
pop
mov
pop
les
jp
xchg
or
jo
je
xor
cwde
cmp
in
inc
inc
inc
(bad)
push
xor
xlat
and
popf
and
sahf
stos
test
inc
pop
shl
aad
(bad)
jmp
adc
add
sbb
inc
lods
sbb
dec
dec
test
das
inc
movs
test
or
pcmpeqb
gs
xchg
cmp
stos
pop
sbb
push
or
pushf
sbb
inc
mov
or
mov
mov
ficomp
addr16
xor
aam
add
push
adc
dec
adc
inc
out
push
mov
mov
scas
arpl
imul
and
inc
xor
push
mov
les
cmp
add
add
das
push
ja
adc
sar
inc
js
sahf
sbb
mov
xor
dec
or
adc
(bad)
ins
or
das
mov
jge
pop
or
rcl
call
jg
push
mov
xor
cmp
mov
xchg
(bad)
mov
xor
inc
mov
inc
xor
add
push
push
adc
push
push
inc
ins
jecxz
mov
sub
push
neg
mov
mov
iret
xor
fcomp
cmp
sub
sbb
push
mov
mov
rol
or
daa
js
xchg
dec
loope
adc
inc
idiv
ror
(bad)
dec
pop
xor
shr
add
add
sub
xchg
push
pushf
repnz
ret
ins
leave
js
add
add
push
adc
sahf
mov
and
push
fisubr
push
aam
in
add
push
adc
jg
sbb
lods
push
adc
push
adc
jmp
push
xchg
ret
adc
fisttp
pop
repz
aad
sbb
adc
ror
cs
add
stos
das
test
jmp
cwde
jae
jns
mov
adc
sahf
mov
inc
sub
das
arpl
stos
cmp
and
inc
shl
clc
inc
push
pop
inc
pop
xor
cs
loope
xor
cmp
popf
ror
jmp
nop
movs
push
pop
mov
test
sbb
pop
adc
xchg
and
lods
jmp
psubb
mov
cmp
xor
adc
push
jmp
js
sub
fdivr
fs
retf
js
push
push
sub
mov
pop
mov
pusha
push
jo
fiadd
sbb
ins
jg
jbe
add
mov
imul
sbb
mov
jo
sbb
xchg
add
cmp
adc
or
dec
fwait
dec
(bad)
jle
outs
jo
mov
and
test
xchg
fisttp
ins
and
inc
cmp
mov
adc
mov
adc
mov
add
mov
and
add
nop
push
je
cwde
push
(bad)
add
xchg
(bad)
das
fs
scas
dec
std
add
lds
sar
dec
mov
or
cmp
stc
pop
pop
or
es
xchg
mov
out
loopne
mov
jmp
adc
aam
adc
daa
sub
fst
xchg
dec
dec
and
(bad)
int3
loop
dec
adc
dec
add
sbb
repz
adc
sub
cmp
popa
ja
add
push
test
cdq
lahf
mov
dec
push
addr16
or
out
ret
sub
xor
ss
jb
pop
fwait
inc
icebp
scas
stos
jle
or
cmp
push
jle
sbb
je
xchg
sar
hlt
jg
pop
xor
inc
mov
retf
jae
dec
lea
cmp
je
inc
jle
mov
hlt
push
cmp
mov
mov
jmp
cmp
test
test
mov
jg
into
into
jne
cmp
mov
inc
sub
mov
or
xchg
or
push
test
pop
out
rcr
and
retf
inc
push
inc
js
fidiv
je
(bad)
xchg
in
dec
jmp
fdivr
test
aaa
push
pop
ds
push
inc
ins
call
sub
lds
js
jne
loopne
(bad)
jle
lea
arpl
xchg
mov
pop
push
inc
ja
xor
mov
ins
mov
sbb
movs
out
xchg
fsub
mov
je
mov
xchg
xor
mov
hlt
sub
es
sub
xchg
clc
retf
jmp
push
in
mov
ret
push
dec
adc
push
ds
loopne
adc
inc
mov
stos
jmp
pop
retf
jle
clc
or
jnp
mov
inc
call
xchg
or
ja
jo
sub
fcmovnu
inc
push
scas
push
xor
cmp
xchg
loopne
xchg
shl
js
or
mov
mov
ficomp
pushf
mov
adc
jle
dec
sbb
lods
icebp
cmp
sbb
mov
inc
inc
xor
push
and
sub
inc
mov
inc
sahf
cmp
cmp
adc
xor
rol
sbb
xchg
ins
push
inc
pop
add
adc
push
xchg
mov
push
loopne
fldcw
pop
mov
xchg
jbe
jecxz
dec
nop
shr
inc
je
mov
imul
adc
nop
rcr
mov
jmp
jns
sbb
adc
test
mov
test
hlt
stc
ss
call
sub
xchg
ror
xor
jle
test
push
loop
dec
pop
mov
sar
leave
adc
loopne
and
call
in
scas
mov
jns
fld
fidiv
mov
test
push
popf
sbb
sub
push
movs
cmp
je
dec
mov
arpl
inc
add
push
inc
jmp
data16
xchg
scas
xor
ins
enter
popf
ins
cdq
fisubr
xor
test
pop
push
data16
test
pop
dec
adc
fadd
push
xchg
bndstx
mov
shr
mov
lods
mov
mov
or
inc
shl
xor
jae
inc
adc
pop
xlat
xor
pop
addr16
or
(bad)
jo
test
dec
inc
cmp
(bad)
lea
adc
jo
shr
dec
fcmovu
rcl
or
or
loope
stos
dec
loopne
retf
push
test
movs
or
jle
cwde
ret
cmp
xchg
inc
mov
or
push
mov
es
mov
pusha
mov
mov
into
int3
fcomp
dec
add
sub
xor
jnp
inc
sub
lock
or
xor
jmp
repz
or
fsubrp
stc
xor
push
push
xor
lods
sub
adc
add
sbb
or
mov
cmp
mov
and
cmp
and
mov
pop
sbb
inc
or
push
pop
pop
repz
test
inc
dec
cmp
popa
scas
dec
jp
jb
mov
push
(bad)
stc
outs
mov
push
push
cmp
jl
sub
lock
icebp
xor
pop
(bad)
sbb
pop
adc
shl
retf
jmp
pop
enter
inc
xor
dec
sbb
outs
xchg
inc
cmp
or
mov
jmp
cmp
jl
test
lea
mov
fsub
repnz
jle
imul
and
push
mov
xor
add
add
imul
test
shl
pop
dec
xor
nop
and
shl
cmp
mov
cmp
out
mov
test
sbb
iret
fs
jae
lea
cmp
mov
ds
jo
lds
arpl
or
lea
ja
out
jb
push
imul
or
pop
sbb
push
and
mov
mov
add
mov
loope
(bad)
mov
xchg
jnp
xchg
out
cmp
and
rcl
cmp
add
jno
mov
push
and
cmc
stos
xor
xchg
dec
xchg
in
in
jl
dec
fucomi
rol
inc
add
repnz
aam
repz
mov
add
test
popa
out
fsub
dec
inc
xor
lock
push
mov
loop
mov
(bad)
add
push
out
cmp
push
add
jne
mov
or
or
or
add
int
shl
or
cmp
xchg
jne
jb
or
jbe
and
jne
xor
ret
call
pop
pop
add
je
fmul
ficom
pop
mov
sti
nop
pop
mov
add
push
sbb
xor
mov
repz
xchg
clc
cs
aad
sbb
push
mov
aad
sub
push
movs
repnz
mov
fcomp
shl
dec
add
inc
movs
xor
mov
mov
add
shr
add
xor
dec
xor
out
sbb
xor
add
xlat
pop
and
fisubr
adc
push
fidiv
dec
shr
mov
mov
inc
or
cmp
call
push
popf
push
stos
imul
ins
sub
dec
pusha
push
or
push
inc
cs
fsub
push
call
ret
xchg
clc
jmp
pop
push
fild
fst
fxch
xor
or
inc
sbb
js
pop
call
(bad)
jns
lock
xor
fstp
bound
sbb
cmp
mov
lods
sbb
or
shl
icebp
inc
or
rcl
cmp
cs
scas
cld
ins
adc
jns
leave
fcomp
add
push
call
fcompp
fdivp
pop
clc
fcmovu
std
aam
add
popa
xor
mov
pusha
push
dec
dec
js
pop
jb
jo
pop
rcr
cmc
std
cmc
std
shr
js
std
sub
retf
movs
pusha
pop
push
push
mov
xchg
imul
mov
test
push
adc
xchg
test
or
je
mov
stos
fs
adc
(bad)
mov
or
sahf
xchg
into
xor
rcr
push
mul
push
push
popf
inc
push
or
cmps
ins
cmc
add
(bad)
push
cmp
int
dec
mov
das
inc
push
mov
add
push
sub
sub
out
enter
aam
and
adc
mov
jp
pop
int3
add
pop
test
cmp
jge
pushf
outs
(bad)
sub
rol
sub
dec
cmp
int
sahf
in
mov
loope
pop
or
cdq
fs
mov
pop
or
fs
pop
dec
scas
xchg
pusha
retf
pop
or
in
sub
sar
sbb
and
mov
cmps
pushf
daa
sti
fst
or
jmp
adc
gs
jno
cmc
popa
dec
stc
jle
inc
scas
and
mov
imul
out
or
xchg
xchg
(bad)
xor
inc
mov
or
or
inc
add
sbb
and
pop
push
jb
xor
movs
lods
bound
or
jmp
int3
xor
xchg
mov
dec
out
std
ds
out
rcr
ins
sbb
dec
jne
xchg
daa
dec
sbb
adc
push
and
mov
mov
jmp
inc
test
pop
jae
fxch
arpl
ror
rep
dec
lahf
mov
test
mov
daa
adc
mov
sahf
inc
push
xor
pop
or
shl
sbb
push
(bad)
lahf
mov
jmp
cmp
sbb
inc
inc
lds
xchg
sahf
add
mulps
or
es
arpl
scas
xor
rcl
add
xchg
ror
idiv
pushf
cmps
or
fisttp
xor
adc
jne
jns
add
push
sub
dec
stc
test
rcl
fild
sbb
inc
or
clc
mov
pop
push
sahf
xlat
push
mov
loopne
mov
dec
cmp
ja
pusha
and
in
cmp
jne
imul
mov
inc
dec
cmp
mov
test
or
inc
popf
stos
mov
stc
adc
clc
or
add
sbb
cmp
mov
std
imul
xor
call
adc
loopne
inc
pop
inc
pop
jne
ins
shl
xchg
rcr
and
sbb
cwde
add
push
add
dec
mov
mov
(bad)
leave
inc
push
cld
into
mov
pop
mov
or
mov
xchg
jne
jbe
movs
mov
jns
pop
inc
addr16
sbb
add
cld
jmp
pop
pop
cdq
jb
nop
dec
daa
jae
mov
loopne
daa
mov
add
xor
pop
sbb
outs
jns
add
inc
adc
mov
mov
(bad)
mov
dec
fwait
mov
sub
je
add
dec
dec
imul
loopne
ret
mov
sti
adc
or
or
mov
cld
test
xor
jmp
push
imul
jmp
pop
xchg
inc
push
xchg
xor
cmp
jmp
pop
(bad)
pop
mov
scas
(bad)
jmp
xor
push
test
mov
mov
jmp
adc
xor
cmps
in
fdivr
pop
adc
es
in
fucomip
jnp
add
int3
jmp
(bad)
jmp
aam
dec
pop
mov
inc
fsubr
ds
ss
pop
mov
call
enter
pop
in
and
clc
and
fcom
repz
repz
sbb
sub
cmp
repz
inc
dec
push
pop
pusha
push
dec
je
add
xor
push
adc
nop
xor
jl
and
xchg
and
test
mov
mov
nop
push
xchg
sub
jae
mov
xchg
sbb
dec
test
or
jb
in
sbb
xchg
or
xchg
clc
call
and
adc
sbb
mov
or
inc
fdivp
and
or
and
push
es
das
(bad)
xor
add
jp
mov
or
aad
(bad)
mov
xchg
nop
xchg
std
lea
pop
add
outs
fldcw
shl
add
ret
test
sahf
jo
ins
push
out
cmp
xor
arpl
inc
push
adc
std
retf
cmp
jge
mov
push
scas
sbb
int
imul
dec
bound
push
add
dec
fidivr
add
or
sar
or
icebp
std
(bad)
cld
lea
push
push
add
lock
dec
dec
mov
ret
sbb
call
(bad)
loopne
dec
sub
push
cmp
or
adc
dec
jb
mov
jmp
push
and
add
dec
dec
jl
pop
lods
ret
add
imul
test
add
or
mov
xor
add
push
shl
dec
xchg
mov
and
pop
sbb
xor
push
sub
push
idiv
out
cmp
mov
or
jmp
bound
loopne
cmp
imul
inc
jp
sbb
outs
mov
push
xchg
push
cmp
jnp
adc
loop
or
sqrtps
xchg
nop
sub
sub
mov
mov
rcr
dec
and
jbe
gs
or
xor
ret
cmp
xchg
dec
xchg
pop
xchg
pop
clc
mov
xor
out
mov
add
test
rcr
sbb
inc
sub
mov
(bad)
push
push
adc
push
int
movs
test
out
and
ror
dec
rcl
mov
enter
and
or
jle
xchg
add
xor
inc
xchg
test
xchg
das
lea
inc
aam
pop
jmp
mov
pushf
adc
fnstcw
push
pop
add
(bad)
icebp
loope
push
cwde
and
shr
(bad)
mov
in
push
gs
and
ins
lea
adc
or
das
mov
outs
push
lods
or
in
movs
repnz
mov
mov
jae
ins
push
cmp
adc
sub
jmp
jb
pop
nop
fld
bound
jnp
cmps
and
outs
mov
xlat
cld
aam
movs
adc
add
in
mov
adc
std
push
mov
stos
mov
xchg
xchg
bound
mov
test
rol
fwait
inc
sbb
jl
dec
shl
rol
pop
les
inc
add
jmp
mov
ja
jmp
mov
push
adc
pusha
nop
jge
nop
test
add
mov
cdq
push
jae
and
imul
inc
inc
add
ror
movs
or
stc
adc
xchg
add
test
cdq
sub
adc
or
js
push
data16
mov
inc
das
xchg
clc
and
popa
jo
call
dec
or
dec
mul
cmp
je
pop
sbb
pop
and
(bad)
sti
(bad)
dec
jl
dec
(bad)
into
push
lea
xchg
je
jmp
jge
popa
mov
mov
inc
xchg
sbb
lock
or
div
loopne
dec
adc
add
jae
sbb
sub
or
ror
cwde
iret
cmps
pop
stos
sub
data16
test
pop
cmp
mov
and
rol
and
adc
fadd
call
xor
mov
stc
push
mov
lea
push
xchg
dec
mov
imul
xor
push
jge
ds
out
mov
test
test
add
cmp
sahf
call
nop
loopne
paddusw
ins
lock
ja
ficom
mov
jne
mov
pop
and
imul
and
daa
in
or
cwde
push
push
mov
cli
jbe
mul
out
addr16
loopne
adc
xlat
ss
rsqrtps
cmp
adc
mov
push
mov
push
fdivr
sub
cmp
jecxz
mov
pop
pushf
jmp
mov
or
test
out
or
push
retf
test
and
in
(bad)
xor
call
loope
and
jne
dec
call
push
add
cs
retf
or
adc
jecxz
les
or
xor
mov
es
mov
sbb
sti
std
and
test
outs
or
xchg
outs
and
and
nop
(bad)
jmp
and
test
jns
les
fs
in
out
or
add
(bad)
or
leave
imul
or
push
xlat
mov
mov
xchg
rol
xchg
ret
rcl
xchg
scas
adc
ds
push
js
xchg
jg
scas
or
or
adc
and
jmp
lea
jge
or
or
in
and
test
fstp
repnz
jae
pop
sbb
stc
addr16
or
retf
lea
lock
dec
dec
lock
leave
lea
scas
xor
jae
ss
lock
fbstp
inc
mov
cmp
pushf
mov
or
xchg
pop
imul
rol
jmp
cmp
adc
repnz
cli
sbb
mov
fiadd
jno
add
das
mov
xor
lock
push
push
inc
push
ds
xchg
cmp
mul
repnz
or
mov
or
or
xchg
xor
cmp
xchg
jnp
icebp
ror
cs
jp
aaa
xchg
imul
out
fld
sub
adc
daa
push
sahf
or
pop
leave
ror
or
cmp
jmp
sbb
fiadd
(bad)
in
add
or
pusha
jle
lds
sub
adc
or
pop
pusha
das
imul
push
iret
jne
mov
mov
pop
pop
jl
adc
lds
add
retf
add
xchg
jg
fisttp
inc
retf
scas
mov
sbb
scas
and
xchg
mov
mov
add
xor
dec
movs
rcl
icebp
inc
add
sahf
add
std
cmps
ret
call
int3
push
lods
inc
imul
lods
or
xchg
je
aad
dec
push
cmp
jge
loope
xor
push
pusha
adc
cmp
xchg
xchg
jb
push
adc
or
mov
adc
mov
lods
mov
stc
add
lds
lock
jl
sbb
cld
in
mov
call
jge
add
(bad)
or
sbb
div
or
or
imul
and
dec
out
or
inc
cmp
aaa
mov
push
lods
jbe
cmp
inc
ret
sub
jb
push
jo
shl
jle
mov
daa
cwde
call
imul
xchg
xchg
psllq
movs
jge
xchg
sbb
inc
nop
cmp
and
jbe
cld
out
adc
inc
dec
adc
hlt
imul
test
ja
mov
xchg
sbb
rol
mov
dec
lahf
add
jecxz
call
lds
in
push
or
in
xchg
pop
mov
cmp
lock
dec
adc
cmps
iret
push
sar
add
push
lock
cld
add
std
fld
pop
pop
dec
add
(bad)
popf
or
mov
or
fadd
mov
test
xor
jo
pop
out
(bad)
es
xchg
dec
adc
fisub
mov
shr
xchg
inc
gs
xchg
(bad)
dec
sbb
mov
add
or
popf
(bad)
jno
inc
push
sub
inc
in
xchg
rcl
add
mov
mov
mov
cmp
mov
xor
add
xor
inc
xchg
sahf
pusha
aam
call
sbb
adc
jg
cmps
push
mov
(bad)
sbb
out
jge
or
pusha
es
pop
or
or
xor
sub
clc
nop
popf
mov
fwait
sbb
pop
ret
js
fldz
push
cmp
jbe
and
cmp
adc
or
xchg
add
mov
in
dec
mov
addr16
push
movs
xchg
add
inc
cmovge
cmps
lock
pop
mov
enter
or
adc
addr16
pop
mov
adc
xor
add
mov
jb
jne
pop
movs
pop
xchg
cmp
fiadd
mov
(bad)
add
(bad)
mov
test
jmp
mov
pop
mov
fwait
mov
mov
icebp
push
in
test
mov
push
das
mov
iret
fld
fsub
int3
jno
xchg
cmc
inc
mov
rcr
jle
mov
out
mov
xor
fwait
sbb
pop
adc
mov
sbb
adc
ret
gs
xor
pop
sub
mov
dec
and
xor
bound
xchg
or
xchg
shl
rcl
pusha
inc
dec
inc
popf
push
mov
sbb
jnp
das
and
xchg
fsub
scas
hlt
pop
adc
cld
inc
or
call
loopne
sbb
adc
inc
cmps
push
leave
dec
cs
inc
pop
lds
test
or
mov
push
dec
mov
or
push
lds
xchg
sar
sbb
sbb
lds
cmc
add
adc
sar
push
nop
pop
and
int
cmp
pop
nop
or
jo
sahf
push
lahf
xchg
adc
xor
(bad)
and
jo
mov
rol
push
pop
ins
out
xor
xchg
sbb
imul
jbe
push
or
popf
add
inc
add
cmp
(bad)
and
popa
dec
loope
and
fs
inc
mov
inc
adc
scas
pusha
adc
ret
and
jmp
sbb
inc
sbb
add
fistp
push
int
in
loope
pop
push
daa
(bad)
sub
sbb
xor
cmp
jp
xor
and
add
sub
or
sbb
loopne
popf
mov
lock
push
fistp
jmp
sub
in
jp
mov
clc
mov
movzx
call
imul
int
mov
fldcw
mov
xor
enter
clc
stos
lea
pop
xchg
lea
jecxz
and
push
mov
popf
inc
or
jno
pop
add
sub
pop
sbb
fldcw
pop
test
movs
test
cwde
and
add
in
sti
dec
add
push
pop
push
(bad)
retf
enter
pusha
push
test
xchg
push
popf
jp
div
sub
in
add
cld
pop
sub
mov
adc
inc
retf
test
push
popa
outs
xor
mov
mov
aaa
xchg
das
add
or
fs
mov
adc
dec
arpl
cmc
sbb
cmp
mov
cmp
mov
or
in
jne
dec
gs
add
pop
adc
mov
and
mov
sbb
in
(bad)
in
mov
cli
sub
jo
adc
lock
imul
imul
xor
fidiv
push
outs
jmp
or
icebp
push
push
mov
xor
shr
cmp
push
and
ins
scas
loopne
les
add
sub
xchg
mov
inc
cld
or
imul
sbb
les
pop
jne
stos
fimul
jbe
dec
lods
hlt
push
jle
adc
outs
mov
xor
jbe
adc
inc
adc
jbe
pop
push
mov
dec
jno
mov
icebp
xchg
and
xor
mov
mov
sbb
fsub
jmp
add
bound
jle
mov
cld
jmp
or
sub
jle
mov
test
(bad)
sbb
les
add
inc
jmp
dec
leave
test
xchg
or
jae
lds
mov
dec
adc
lods
adc
and
mov
test
push
mov
jns
ds
leave
call
retf
data16
into
sub
(bad)
(bad)
dec
dec
fnsave
add
xchg
sar
loope
xchg
pushf
rol
test
imul
je
sbb
pop
push
push
lock
push
arpl
pop
fsin
retf
enter
ret
xor
mov
mov
mov
movs
add
frndint
ror
mov
dec
xchg
xor
cmp
test
mov
jo
test
mov
cmp
sbb
fild
push
xor
test
sub
inc
and
jmp
loop
mov
mov
data16
imul
cmp
mov
or
(bad)
enter
iret
jmp
adc
mov
movs
cs
jp
ror
daa
push
and
imul
mov
add
je
loope
jmp
mov
cdq
lahf
and
lahf
xchg
mov
aaa
mov
in
push
or
into
mov
and
adc
push
and
je
inc
test
dec
pushf
jne
mov
call
dec
dec
popf
add
inc
je
in
push
sbb
stos
xor
(bad)
fs
icebp
sbb
or
in
xchg
(bad)
lahf
popa
xchg
lock
outs
pop
add
jge
mov
jecxz
nop
cwde
push
fild
loopne
push
(bad)
adc
mov
pop
fnstenv
rol
test
sbb
inc
rcr
pushf
and
jl
mov
push
sbb
xchg
pop
inc
cmp
(bad)
mov
jmp
pusha
pusha
sbb
cli
xor
push
or
pusha
push
cmp
and
mov
and
mov
cmp
add
add
xchg
push
(bad)
cmp
lock
rcl
xlat
mov
push
call
inc
ja
or
push
mov
and
pop
fwait
jecxz
sub
or
scas
dec
add
movs
mov
xchg
pop
xchg
add
jp
add
movs
imul
sbb
sbb
mov
and
cld
sbb
loop
xlat
inc
push
pop
fs
and
cmp
or
cmp
or
cmp
push
add
mov
push
jo
mov
fs
ss
dec
in
inc
adc
sbb
push
push
dec
pushf
push
push
in
ins
jecxz
sbb
cvtps2pd
stc
push
psubw
adc
dec
jo
sub
loop
and
sub
mov
adc
add
cs
in
and
mov
rcr
fsub
and
xchg
push
inc
sub
pusha
fdiv
test
je
mov
enter
fadd
pop
aam
cmps
sub
sub
mov
pop
jne
xchg
icebp
mov
or
push
jmp
mov
(bad)
dec
jmp
push
popf
and
pop
bound
inc
xchg
shl
gs
add
xchg
jmp
mov
or
loop
fdiv
iret
out
pop
addr16
jnp
mov
rcr
iret
iret
iret
mov
mov
lock
jne
imul
call
(bad)
push
movs
jge
dec
lods
fmul
add
add
daa
pop
push
test
call
add
cmp
or
rcl
dec
dec
in
ss
sahf
fs
or
xor
and
xor
out
ss
sub
in
inc
push
dec
jb
adc
sbb
mov
dec
test
dec
leave
ins
dec
xchg
icebp
fild
add
ret
adc
fucomi
or
in
push
adc
push
pop
mov
mov
adc
mov
cmp
inc
and
xor
in
mov
js
es
jl
rcr
leavew
cmc
jmp
pushf
push
mov
lods
pop
retf
ret
adc
xor
mov
mov
es
inc
and
and
clc
cmp
add
lea
mov
ror
push
push
xor
add
mov
out
int3
inc
js
loope
jl
dec
and
inc
cmp
xchg
fiadd
mov
daa
adc
or
loopne
aam
ror
mov
or
mov
inc
push
test
fcom
dec
xor
jge
jne
push
aas
out
pop
clc
sar
push
arpl
retf
cwde
out
and
cmp
seto
lea
(bad)
shr
outs
push
nop
shl
cmp
clc
xor
or
push
ret
ds
stos
lods
pop
jne
sbb
or
lock
mov
lea
push
dec
push
jns
outs
adc
or
adc
jb
mov
mov
push
cmp
inc
icebp
loopne
jmp
xlat
pop
loopne
cwde
je
imul
add
adc
mov
push
or
cli
add
jb
shr
push
add
sbb
test
jle
test
cli
inc
adc
fcomip
xchg
sub
(bad)
cld
shr
mov
imul
lods
jl
pusha
lods
and
rol
dec
push
test
mov
pop
(bad)
ret
or
adc
fstp
int3
mov
test
push
push
mov
add
xchg
jne
or
cmp
jne
popa
xor
and
dec
and
shr
lea
not
and
dec
jne
push
dec
pop
and
fmul
xor
loopne
push
pop
push
pop
dec
or
mov
push
dec
pop
add
dec
xor
pop
and
push
bound
mov
sbb
pop
(bad)
add
adc
mov
adc
es
sti
add
mov
pop
stos
and
dec
pop
cmp
push
mov
imul
cli
jge
cmp
and
cmp
inc
scas
jno
mov
cmp
shr
neg
(bad)
loopne
and
add
pop
fbld
dec
loopne
mov
xor
cmps
jle
push
call
add
and
mov
gs
add
push
test
ja
lock
pop
pop
dec
pop
or
pop
ss
dec
pusha
mov
mov
daa
adc
js
and
and
retf
pop
fisub
call
inc
dec
or
xchg
sbb
sub
lods
dec
(bad)
push
add
rcl
or
cli
mov
xor
add
pop
dec
repz
xor
and
pop
jmp
dec
test
mov
or
sbb
lods
cmp
nop
icebp
mov
sub
dec
inc
adc
inc
mov
mov
or
(bad)
and
push
jo
mov
adc
iret
and
mov
mov
add
jmp
dec
cmp
sar
xchg
jl
push
cmp
cmp
jp
or
(bad)
adc
mov
mov
cmp
push
jg
shl
jne
scas
pop
sar
outs
push
or
add
add
imul
mov
je
cmp
pop
fwait
test
and
xchg
inc
jge
outs
inc
xor
jo
add
js
adc
cmp
fwait
or
call
cwde
mov
dec
cmc
xchg
or
mov
pop
scas
mov
jno
mov
add
rol
mov
imul
mov
mov
add
or
add
sti
inc
mov
out
or
jle
loop
sbb
sbb
sbb
lds
sub
push
or
lock
ja
mov
mov
adc
dec
clc
inc
fistp
adc
adc
out
inc
jne
(bad)
lock
call
dec
jne
mov
mov
clc
cwde
adc
jb
aaa
add
inc
fs
inc
add
idiv
mov
inc
mov
lock
mov
jne
in
aad
add
and
not
and
in
in
jno
or
or
push
sbb
xor
pop
shr
pop
arpl
push
jb
cld
push
adc
loopne
jl
and
and
mov
test
dec
xchg
xor
inc
mov
(bad)
cmp
scas
stc
add
rcl
gs
mov
int3
push
pop
adc
pop
call
stc
sbb
movs
add
nop
or
add
cmp
nop
mov
or
push
in
inc
test
into
add
adc
cwde
pop
test
cld
sar
dec
inc
dec
pop
mov
fidiv
or
shl
pop
pop
push
cmps
imul
call
sub
xchg
adc
js
shl
call
inc
jne
pop
test
iret
adc
rol
inc
ins
xor
add
fld
clc
jl
push
pop
adc
into
inc
or
inc
clc
lds
inc
dec
ins
pop
xor
push
sar
dec
jmp
rcr
movs
(bad)
pop
div
cmp
sbb
adc
mov
dec
je
fisttp
and
fldcw
fbstp
ja
dec
or
rol
adc
xchg
sbb
hlt
adc
dec
lea
mov
and
stc
popa
mov
dec
add
movs
loope
cmp
push
cmp
lods
(bad)
cs
retf
retf
mov
(bad)
push
rdmsr
cmp
inc
dec
mov
mov
cld
cwde
shl
jnp
ins
and
add
lods
pop
and
inc
cmp
imul
jge
pop
ss
fmul
inc
(bad)
or
stos
sub
sub
fldpi
adc
and
and
or
dec
sbb
jb
or
ins
push
jne
push
mov
add
adc
jbe
pop
cmp
xor
aaa
xchg
add
arpl
adc
adc
fsub
pop
daa
push
xchg
hlt
pop
cmp
jne
and
inc
lods
cmp
je
mov
cmc
sbb
mov
loope
mov
jl
and
iret
jne
shl
ret
xchg
push
mov
mov
inc
dec
push
aam
pop
cmp
out
imul
mov
enter
adc
test
and
leave
inc
test
inc
jbe
loop
push
pushf
mov
sub
icebp
sbb
fdivr
push
rcl
call
add
xchg
cmps
push
aad
sbb
iret
push
sbb
std
add
cmp
into
in
and
mov
dec
jne
je
adc
hlt
or
sub
jae
in
jp
mov
cdq
pusha
dec
bound
dec
push
and
push
clc
into
xor
call
jp
loopne
cmps
movs
xor
push
or
push
pop
xor
sub
xchg
inc
or
ret
add
or
dec
cld
or
xor
out
push
in
pop
ficom
mov
out
or
push
cmc
call
adc
add
scas
(bad)
out
jmp
sbb
hlt
mov
lea
(bad)
inc
sbb
sbb
mov
and
and
push
mov
int3
cli
pop
mov
adc
xchg
mov
or
sbb
adc
lds
gs
les
lea
mov
(bad)
sub
ret
movs
adc
add
pop
pop
jns
mov
fdivr
shl
jbe
push
push
mov
mov
(bad)
inc
mov
add
jnp
mov
push
pop
(bad)
je
hlt
add
dec
xchg
mov
stc
pop
inc
or
inc
add
and
movs
ror
(bad)
mov
dec
(bad)
sti
cmp
ins
in
pop
lea
add
dec
xchg
xchg
cdq
jmp
in
and
adc
cmp
mov
jg
nop
fsub
pusha
clc
jmp
xchg
or
hlt
mov
jo
cli
pop
(bad)
ror
cmp
xor
lahf
fisttp
sahf
xchg
xchg
and
pusha
ds
add
mov
call
nop
cs
sub
mov
push
inc
aas
pushf
gs
or
and
mov
jno
enter
pop
xor
dec
or
in
mov
jmp
retf
test
or
pop
push
dec
(bad)
xchg
jp
in
adc
(bad)
ss
out
sub
imul
sbb
inc
or
xor
dec
fwait
mov
or
fwait
je
dec
lods
cmp
sar
rcl
jne
mov
and
lock
int
or
and
(bad)
mov
call
les
inc
cmc
in
lods
call
pop
inc
mov
sub
push
movntps
repz
cld
nop
and
inc
(bad)
pop
and
frstor
lahf
inc
cs
jb
mov
mov
inc
add
xchg
inc
(bad)
fst
fucom
adc
dec
jo
ins
sub
sub
js
xor
stos
adc
or
and
mov
scas
push
in
add
es
movs
xor
stos
test
test
fmul
push
in
std
mov
push
xor
in
sbb
ss
jp
imul
mov
call
test
not
ins
xchg
bound
je
dec
lods
mov
ret
mov
lahf
je
xchg
sub
cmp
xor
test
test
inc
dec
in
lods
jl
push
in
push
push
in
lods
idiv
jno
movs
adc
nop
xchg
mov
sub
movs
or
sbb
pop
sbb
mov
(bad)
xlat
add
ss
jbe
gs
push
das
inc
xor
fiadd
and
stos
mov
out
loop
push
and
frstpm(287
sub
dec
sub
add
mov
jo
inc
test
shl
pop
jb
or
rol
inc
out
(bad)
sbb
xor
inc
jno
and
fldenv
jo
nop
mov
cmp
mov
or
adc
push
rol
add
mov
leave
mov
inc
add
inc
sbb
mov
mov
push
sbb
add
push
mov
inc
inc
cmp
cmp
add
sbb
(bad)
push
xlat
add
xchg
mov
pop
inc
and
inc
aas
test
repnz
pop
retf
cmp
inc
ss
inc
retf
push
and
ins
dec
dec
push
mov
in
cmp
enter
pop
enter
or
xchg
fidiv
mov
jo
pop
loope
std
pop
pop
je
lahf
stos
mov
or
xchg
not
xchg
imul
out
pop
outs
lds
cwde
in
adc
or
push
mul
enter
xchg
test
push
lahf
nop
fcom
inc
paddsb
test
popf
cmps
mov
cmp
movs
cmp
and
and
or
or
inc
cdq
xchg
inc
jle
add
push
xchg
loopne
jg
push
cmp
int
aad
dec
retf
ins
jnp
pop
ds
add
(bad)
inc
adc
adc
push
cmp
mov
dec
test
jbe
add
fsubr
popa
imul
add
ret
jne
hlt
mov
add
pop
loope
bound
repz
cmp
mov
stos
and
xchg
rcl
push
fisubr
sbb
and
inc
adc
mov
jge
push
mov
add
cmp
jge
imul
mov
and
sbb
xchg
dec
cmp
outs
outs
pop
clc
sar
xor
fs
push
add
cmp
nop
pop
or
sbb
test
cmp
sbb
pop
xchg
hlt
push
pop
mov
rcr
push
call
jmp
leave
push
sbb
imul
rol
jl
dec
mov
dec
icebp
xor
and
cmps
cwde
xchg
aam
cmp
fisub
cmp
adc
add
inc
add
shr
lahf
xor
mov
jp
mov
sub
jbe
in
ss
mov
mov
inc
sti
cmp
inc
xor
pop
dec
or
push
jmp
popa
call
fcom
rol
je
jbe
push
adc
dec
push
push
push
(bad)
popa
mov
ins
add
call
mov
adc
inc
(bad)
movs
sub
or
pop
repnz
jg
and
test
in
push
ins
ins
add
dec
push
out
mov
call
mov
test
fnstenv
lods
add
dec
xchg
fdiv
in
cld
mov
js
cli
imul
cmp
pop
sbb
and
add
sbb
adc
inc
mov
inc
inc
fcom
or
fmul
mov
mov
pop
or
xchg
add
inc
ins
movs
adc
and
cmps
test
mov
dec
jmp
xor
add
inc
adc
out
push
scas
les
add
inc
pop
je
loope
add
pop
es
dec
das
pushf
xchg
test
sbb
shl
or
loope
jmp
add
and
shr
fstp
cwde
push
inc
or
sub
add
inc
sub
movsx
rol
loopne
and
or
pop
or
ror
inc
add
sti
shr
xor
inc
pop
sub
(bad)
pop
add
enter
popa
adc
mov
ficom
adc
adc
pop
inc
hlt
sub
js
mov
movs
push
mov
jmp
cmc
adc
xor
and
push
sub
shr
cmps
inc
dec
mov
dec
cld
push
jae
dec
scas
add
ss
mov
ins
pop
gs
je
jge
les
mov
push
jecxz
lock
lds
sub
push
pushf
cmp
call
movs
aaa
push
mov
add
int
cmp
push
js
or
xchg
xor
(bad)
xor
cmp
repz
mov
cmp
je
inc
inc
or
jne
arpl
(bad)
repnz
sahf
sar
inc
push
push
adc
sbb
push
jb
sub
mov
or
and
rol
dec
push
hlt
dec
cmp
or
adc
cdq
movs
iret
sbb
test
mov
add
mov
xchg
popa
daa
lods
and
or
out
in
out
aam
or
sub
out
int
sbb
sbb
arpl
xchg
loop
pushf
xor
or
dec
inc
call
in
pop
popa
arpl
pop
push
dec
mov
test
mov
lods
mov
pop
jo
xor
add
sbb
and
and
xchg
xor
cmp
xor
or
fadd
js
into
mov
shr
mov
mov
lea
jmp
(bad)
repnz
or
sub
cmps
add
loopne
rcr
fsub
pop
sbb
and
cld
add
and
and
push
cmp
daa
xchg
(bad)
ins
or
dec
int3
sar
rcr
iret
imul
jmp
retf
inc
pop
fimul
(bad)
je
mov
sbb
retf
test
dec
or
movs
cld
dec
adc
push
cmp
mov
mov
out
shl
add
loopne
je
pusha
mov
int
adc
add
mov
leave
fiadd
hlt
inc
adc
inc
mov
cmps
repz
cmp
add
dec
inc
(bad)
push
jb
xchg
cmp
or
dec
and
cmc
xor
ret
mov
je
cmc
adc
ss
push
aaa
xor
mov
mov
jne
les
adc
sub
push
cmp
and
bound
mov
jns
cmp
test
not
xchg
(bad)
aaa
arpl
test
sbb
and
bound
lock
jb
test
test
cli
mov
push
retf
test
push
popa
jb
mov
int3
mov
cmp
xor
je
push
add
jmp
or
push
mov
jmp
cmp
sbb
or
fcomp
mov
pop
cmc
cld
fisttp
sbb
int3
das
lods
mov
mov
ret
pop
loop
int3
stc
ja
test
(bad)
test
fsub
xor
retf
jl
mov
pop
in
cmps
push
push
cmp
or
or
das
mov
and
gs
test
xchg
cmp
cmp
enter
test
and
add
mov
add
cld
(bad)
je
push
jo
xchg
or
add
movs
aas
cmp
or
inc
fbstp
in
jne
or
enter
and
int
sub
call
cmp
pop
arpl
jge
xchg
pusha
cmp
mov
pop
ret
jbe
mov
adc
jl
dec
push
xor
inc
je
push
push
fucomip
inc
ret
mov
cmp
leave
lock
cs
movs
or
pop
push
popa
aam
jae
jp
adc
xchg
adc
enter
mov
and
movs
sub
inc
and
sbb
pop
jb
xor
jb
pop
jb
inc
dec
mov
mov
pop
cmp
add
sbb
das
mov
cmp
push
dec
jge
int3
dec
sar
ins
and
cmp
je
jg
cld
fisub
push
sub
ins
jg
shr
or
mov
dec
cwde
jne
pop
mov
stos
rcl
mov
mov
pusha
xchg
cmp
cmp
cmps
xchg
inc
add
or
cmp
jl
in
(bad)
pop
xchg
(bad)
push
adc
sbb
mov
cmp
jb
mov
mov
cmp
icebp
and
stos
sbb
jnp
adc
faddp
test
test
sub
sub
xchg
inc
push
and
mov
fist
sub
pusha
ficom
pop
aam
js
or
fldcw
call
or
or
adc
adc
sbb
lods
sti
mov
pop
dec
sti
adc
xchg
push
call
jp
cmp
push
sbb
xor
je
test
or
push
(bad)
mov
int3
mov
fstp
lock
pinsrw
test
lock
adc
mov
rol
push
jbe
not
sysret
sub
sub
scas
dec
xchg
push
dec
mov
sbb
shl
dec
(bad)
into
push
shl
jmp
das
popa
rol
popf
cmps
test
and
enter
gs
or
(bad)
fcom
mul
mov
mov
clc
or
in
popf
enter
shr
pushf
(bad)
fwait
movs
sub
add
rol
call
hlt
aaa
dec
cld
adc
(bad)
sub
js
rol
aad
test
or
mulps
push
inc
jl
test
sub
pop
lods
sbb
push
lahf
in
cmp
cmp
sbb
pop
jmp
rol
adc
clc
jmp
in
das
hlt
sub
mov
leave
cmp
push
iret
cwde
or
jge
pop
ds
mov
enter
mov
mov
cmp
test
enter
sub
add
sub
pop
inc
retf
mov
push
out
aas
xchg
push
es
jmp
xchg
push
inc
fadd
aam
cmp
cmp
xchg
leave
pop
pop
mov
loopne
int3
add
mov
rol
test
pop
or
lahf
into
movs
mov
pushw
mov
(bad)
mov
fs
out
cmovs
loop
xlat
pop
popa
test
pop
mov
rcl
sbb
jb
rep
adc
cmp
mov
mov
in
imul
(bad)
iret
jnp
aaa
cmp
(bad)
nop
or
push
inc
push
and
into
pop
mov
mov
or
scas
adc
nop
scas
imul
push
dec
add
in
dec
mov
jnp
test
or
push
sahf
out
(bad)
push
ror
sar
test
inc
mov
mov
call
out
in
lock
hlt
xchg
out
clc
cld
in
fcmovne
sub
mov
nop
cmps
into
repz
push
or
push
pop
adc
xor
imul
and
fsub
and
lea
daa
mov
and
std
aas
ins
jle
(bad)
cld
out
cmp
neg
sar
and
inc
jno
daa
stc
sub
mov
mov
nop
push
movs
push
enter
test
fisub
add
sahf
inc
push
out
mov
dec
in
add
xor
adc
pop
add
mov
push
test
or
push
dec
repz
repz
pop
fs
je
cmp
lds
sbb
repz
adc
adc
or
and
repz
or
out
iret
and
mov
push
adc
add
dec
adc
pop
(bad)
and
xor
ja
stos
push
add
mov
js
push
push
xchg
(bad)
and
js
or
pusha
or
mov
movs
cmp
xor
mov
(bad)
je
xchg
dec
add
xor
cli
adc
lea
lea
or
fdiv
jmp
lds
pop
sbb
push
sbb
jmp
fs
push
mov
xchg
out
or
mov
push
test
fs
enter
mov
push
sar
adc
(bad)
jle
cli
mov
mov
sub
jno
dec
rcr
add
sub
sub
lods
or
push
mov
cld
pop
pop
sub
mov
lock
xchg
sub
rol
test
outs
inc
cmp
xor
out
ret
adc
int
cs
sub
push
fisttp
mov
push
popa
ror
xor
rol
leave
dec
or
sahf
add
aas
add
enter
ror
adc
mov
cmp
add
add
fild
(bad)
enter
adc
or
data16
sbb
test
push
or
and
sbb
xor
(bad)
jb
mov
dec
cmp
mov
push
das
mov
or
clc
xchg
xchg
xrelease
adc
dec
mov
lock
cs
arpl
jl
push
lock
imul
add
adc
xor
cmp
lock
mov
arpl
jns
xor
adc
pop
sub
shl
cwde
add
pusha
bound
pop
ja
mov
popf
dec
push
ds
jae
or
or
push
jmp
test
retf
test
xlat
cmp
jno
pop
adc
inc
or
mov
sti
add
push
mov
mov
in
rcr
mov
xor
jo
nop
jbe
adc
xchg
mov
gs
inc
dec
inc
pop
ds
pop
pop
xchg
in
adc
jge
ja
sub
mov
mov
(bad)
xlat
and
dec
arpl
mov
stos
les
mov
je
ret
mov
dec
xor
push
add
jne
jo
sub
imul
xor
shr
lods
lahf
out
xor
ror
enter
je
int3
or
aam
lods
pop
dec
xor
pop
sub
test
mov
(bad)
jb
jo
mov
pop
cmp
jae
cmp
xchg
xchg
mov
inc
cwde
sub
and
cdq
and
sti
or
in
sub
mov
loop
and
ret
iret
or
push
loopne
rol
adc
inc
ds
inc
mov
ja
sbb
jno
inc
push
dec
jle
push
or
pop
xchg
sub
je
or
je
dec
je
and
xor
push
pop
movs
cmp
push
aaa
mov
scas
xchg
aam
in
ja
jmp
pop
rcl
jmp
fdiv
pop
test
mov
push
cmp
xchg
jo
pop
sub
inc
adc
xlat
mov
inc
enter
dec
add
or
je
add
xchg
push
inc
push
dec
pusha
cmps
inc
fnstsw
mov
sbb
inc
mov
add
in
out
ins
mov
and
(bad)
ror
push
pop
mov
fcomp
(bad)
inc
or
fcom
mov
sbb
push
push
dec
jmp
cmp
ret
cmp
add
shl
add
xor
push
add
sub
shl
and
and
pop
sbb
xor
mov
pop
lock
jne
mov
mov
jns
push
daa
loope
adc
adc
popf
jns
aaa
jo
sub
hlt
and
jns
(bad)
es
test
mov
cld
bound
sub
cmp
mov
sbb
js
mov
jl
pushf
div
aad
jmp
add
xor
in
add
push
neg
push
div
jmp
scas
hlt
xor
test
sbb
clc
adc
sbb
aas
ins
xor
das
adc
inc
add
push
or
nop
bound
pop
xchg
xor
ja
push
pop
mov
push
add
jo
and
xchg
adc
cld
fwait
rcl
cmp
je
inc
dec
jne
out
mov
dec
adc
add
repz
inc
lea
cmps
adc
sub
pop
push
add
mov
inc
add
outs
fistp
lahf
adc
or
adc
adc
cmp
or
jmp
test
rcl
sbb
test
pop
add
push
push
(bad)
sub
or
dec
outs
int3
sbb
add
mov
ret
es
pop
cmp
pop
or
pop
cwde
ja
xor
or
sub
add
lock
adc
jb
inc
xor
or
dec
cld
mov
out
ret
mov
out
xchg
test
cld
jb
test
mov
test
adc
add
sbb
inc
dec
inc
ret
adc
cmp
nop
(bad)
std
cld
jb
pushf
dec
ja
retf
xor
or
rol
ret
pop
jb
xchg
sbb
into
test
adc
mul
test
jp
jmp
or
xor
stc
test
push
loopne
sub
shr
inc
scas
int
mov
retf
mov
mov
push
add
jle
push
or
push
cmp
and
test
xchg
clc
mov
add
pop
sbb
jbe
or
aas
or
push
test
dec
push
xor
mov
mov
cli
or
pop
mov
push
dec
aam
leave
es
out
inc
cmp
fadd
mov
fadd
add
in
mov
pop
and
and
or
dec
sbb
mov
jb
xor
std
xchg
stos
mov
push
movs
or
or
sub
jo
ss
pop
or
or
cmp
or
popf
adc
or
stos
loopne
xlat
es
sub
pop
push
or
rcr
imul
or
xchg
inc
or
jle
jae
add
mov
and
sub
mov
adc
shl
sbb
lea
out
dec
lds
or
xor
pop
fs
add
inc
es
sbb
mov
inc
pusha
dec
test
push
mov
or
out
and
add
ja
and
xchg
or
pop
mov
add
fmul
or
out
fisubr
cld
ficom
push
push
fld
ret
movs
(bad)
cs
mov
sub
push
cmp
cmps
adc
mov
mov
xor
imul
inc
push
or
in
adc
pusha
lods
jmp
and
je
xchg
cmp
nop
mov
push
ffreep
test
add
mov
mov
add
lahf
adc
sub
hlt
sub
mov
cmp
sbb
pop
test
or
push
shl
call
adc
push
and
and
pop
and
mov
out
jb
pop
bound
fadd
mov
and
clc
mov
or
ins
out
ja
sahf
xor
stos
and
lahf
inc
pusha
add
lock
sbb
xchg
retf
xor
(bad)
push
mov
das
inc
loopne
mov
push
xor
dec
arpl
in
jmp
mov
inc
imul
imul
add
pusha
mov
cmp
je
cmp
or
call
out
xor
xchg
cmps
cmp
jmp
ja
pusha
call
adc
es
and
jp
ror
push
aam
cmp
add
adc
pop
or
dec
dec
mov
xor
sub
shr
inc
in
cmp
or
std
push
jo
jmp
mov
mov
jl
jne
fist
in
dec
inc
scas
push
sbb
rol
mov
jae
cmp
xlat
call
out
movs
iret
sbb
out
mov
sub
xchg
setle
dec
pop
leave
inc
dec
repz
clc
stc
bound
leave
xor
mov
adc
jmp
cmp
mov
push
loopne
inc
push
fistp
inc
cmp
je
shr
and
or
(bad)
cmp
(bad)
xor
inc
pusha
imul
push
hlt
out
(bad)
mov
out
adc
mov
pop
mov
das
jp
inc
inc
inc
dec
(bad)
inc
mov
ds
movs
jl
sbb
div
jle
xor
jo
fidiv
mov
inc
or
add
movs
pop
or
gs
retf
jnp
test
xor
push
ret
or
or
adc
scas
fdivr
mov
int
sub
nop
dec
cmp
or
and
inc
shl
ins
cmp
sub
or
sbb
call
dec
jb
pop
lds
test
call
inc
adc
cmp
xchg
je
push
(bad)
std
dec
push
add
add
xor
(bad)
imul
lea
sbb
pusha
ins
xor
test
add
loopne
or
or
outs
ret
sub
jmp
xor
mov
sbb
mov
push
adc
add
sbb
aaa
push
sbb
inc
inc
jo
ins
adc
pop
sbb
dec
mov
jmp
xchg
jmp
lods
and
int3
imul
xor
add
loop
sbb
std
and
pop
lods
dec
dec
or
inc
add
push
xchg
mov
test
push
movs
nop
movaps
add
push
in
or
push
pop
and
xchg
repz
push
js
push
repz
push
dec
aas
repz
add
lods
push
push
add
mov
sbb
push
xor
push
xor
iret
jnp
pop
nop
push
inc
push
push
push
aas
push
xor
ja
push
and
fidivr
in
hlt
cld
sub
push
or
mov
or
daa
aas
shl
out
or
dec
pop
ins
(bad)
mov
or
lds
mov
aad
cmp
xchg
(bad)
inc
mov
sbb
pop
adc
mov
adc
adc
inc
mov
(bad)
into
int3
jl
lahf
jno
mov
mov
movs
rol
sub
sub
mov
aaa
sub
and
je
add
mov
dec
pop
mov
push
cwde
mov
outs
scas
jl
jne
out
aaa
out
jle
(bad)
int
mov
push
cmp
xchg
out
fs
sti
cmp
push
pop
(bad)
cld
jb
add
dec
adc
add
repnz
push
sbb
mov
mov
sbb
add
pop
sub
jnp
mov
aaa
cmp
mov
pop
ret
jo
test
inc
xor
push
sub
xchg
fidiv
fs
dec
xor
add
sub
or
sub
adc
xchg
ret
add
in
leave
pop
and
repnz
and
dec
lock
jo
and
ins
cmp
or
inc
or
xor
or
or
push
call
and
sub
je
lods
imul
mov
add
cmp
or
add
and
into
or
sub
or
scas
pop
inc
jne
js
jmp
lock
fadd
ror
mov
rep
mov
dec
jmp
add
dec
std
dec
ret
mov
loopne
mov
and
in
cmps
or
dec
jb
jne
add
sbb
jnp
fidivr
mov
push
add
in
jne
mov
ja
jns
daa
mov
fld
add
xchg
push
mov
test
push
and
popa
push
adc
and
inc
imul
sub
fsubr
dec
fadd
pop
inc
mov
inc
sub
push
inc
lock
(bad)
into
cli
or
test
push
push
das
(bad)
enter
adc
or
xchg
push
jge
or
out
adc
jg
aaa
and
xchg
(bad)
xchg
cmp
push
or
sub
sahf
out
fs
dec
mov
imul
and
pop
xor
mov
call
out
mov
mov
cmp
and
cmp
ret
mov
push
push
push
enter
cmps
and
cmps
loop
adc
cdq
adc
pop
mov
out
fldcw
push
sub
popf
inc
adc
push
scas
(bad)
in
mov
mov
add
xor
loop
shr
or
sub
jmp
adc
pusha
jne
mov
test
je
sub
cmc
sbb
mov
int3
aam
js
nop
pop
mov
mov
jb
aas
mov
fs
pop
retf
mov
jae
add
pop
jmp
pop
adc
sbb
mov
test
cmp
ins
cmp
or
sub
or
div
xchg
add
sbb
or
add
rol
sub
mov
movq
push
dec
adc
push
and
lahf
iret
div
jg
push
dec
and
push
jg
outs
data16
jl
inc
or
jbe
jle
xor
jg
dec
add
jg
jg
jo
(bad)
inc
dec
jne
jecxz
pop
jl
mov
or
inc
or
or
enter
inc
ret
loope
into
mov
cli
sub
jp
or
ror
hlt
stos
and
icebp
je
sub
daa
dec
ja
in
fidivr
sub
xchg
ins
je
sahf
mov
in
scas
adc
add
sub
(bad)
lock
in
lock
repz
jmp
in
xor
push
rcl
adc
sbb
ss
add
jp
in
pop
adc
sub
adc
or
jo
pop
popa
jmp
ins
and
and
push
inc
pop
pop
add
dec
(bad)
pop
clc
add
mov
mov
rcr
mov
pcmpeqb
cmp
add
loope
adc
pop
loope
mov
push
or
lock
mov
popf
pushf
pop
fisubr
push
popf
sub
cmp
out
jns
or
push
data16
or
push
ret
mov
sbb
inc
repz
daa
aam
push
and
mov
push
add
cmp
pop
and
mov
pop
xor
pop
xor
mov
xchg
dec
cld
pop
inc
push
sub
fldenv
ins
push
and
push
pop
imul
ret
push
popa
xor
(bad)
leave
sub
int3
and
dec
mov
mov
daa
loope
pop
ins
outs
outs
pop
out
or
cmp
daa
imul
mov
xor
lahf
test
jl
out
pop
xchg
icebp
adc
jmp
sbb
mov
leave
or
ds
out
mov
cmp
ds
push
or
push
sub
push
inc
mov
push
mov
in
adc
or
mov
add
pop
and
or
push
push
pop
pop
pop
pop
pop
cmps
dec
and
dec
clc
imul
or
push
sbb
fistp
push
push
push
inc
add
loope
shr
jae
or
test
pop
add
sub
push
adc
sbb
jbe
add
mov
test
sbb
add
mov
jecxz
sub
out
or
push
inc
xchg
push
adc
popa
or
retf
add
add
call
push
push
xor
cmp
or
stos
push
dec
lock
les
and
and
cmp
pusha
int3
jns
sar
pop
stos
add
dec
mov
popf
push
into
mov
xor
add
inc
xor
leave
cmp
nop
shrd
push
(bad)
fnop
fwait
pop
(bad)
repnz
adc
nop
or
add
pop
jge
sbb
sbb
add
cdq
dec
cs
push
in
and
loopne
and
push
lock
pop
or
mov
fcomi
rcr
inc
sti
inc
dec
push
push
add
inc
loop
lock
es
pop
add
aam
int
jmp
stos
sbb
dec
cmc
inc
add
jle
gs
cmp
popa
je
push
mul
ror
(bad)
leave
out
in
jge
inc
(bad)
pop
je
inc
cmps
pop
inc
test
pop
sbb
cdq
clc
nop
and
and
inc
xchg
sub
xchg
cmps
adc
jbe
and
adc
pop
xor
jne
jle
outs
sbb
std
loope
mov
aas
or
inc
das
and
ja
dec
les
sbb
jmp
fwait
ss
and
xchg
xor
inc
pushf
(bad)
adc
hlt
hlt
mov
aaa
gs
sub
push
sub
and
test
inc
aaa
(bad)
rcr
cmp
dec
fidiv
sub
lods
test
fild
jbe
jae
arpl
jb
inc
dec
call
push
push
pop
stc
inc
hlt
cmp
je
mov
dec
pop
or
sub
push
rol
mov
je
push
lods
mov
xchg
adc
and
rcl
pop
inc
or
iret
inc
and
loope
xchg
xor
lock
mov
retf
push
ret
ins
adc
add
ret
outs
cmp
xor
iret
xor
inc
pop
test
loop
outs
push
jno
mov
dec
add
add
mov
gs
mul
fsubr
loopne
cmp
sub
xchg
(bad)
cld
cmp
je
mov
mov
call
scas
push
cdq
fmul
hlt
jecxz
femms
jecxz
jmp
cmp
ds
inc
imul
in
shl
xor
xchg
jl
ins
mov
push
jmp
mov
adc
push
hlt
(bad)
sar
shl
or
inc
sbb
(bad)
lea
jno
les
dec
adc
sub
outs
mov
dec
fstp
popa
aad
scas
inc
cmps
and
push
push
rol
push
jne
cmc
dec
(bad)
int3
cmp
sbb
clc
sar
push
int
xor
das
xor
jns
add
mov
add
add
xchg
pop
sahf
sbb
sbb
adc
and
add
add
(bad)
jg
xor
pop
nop
mov
je
xchg
pusha
lods
add
into
dec
push
in
jnp
rol
xor
and
retf
jmp
sbb
pop
sahf
and
inc
movs
push
pop
mov
push
test
cmc
fsub
inc
inc
add
hlt
ins
jo
add
sub
dec
sub
cld
push
(bad)
in
add
sbb
and
ss
nop
out
jmp
push
and
cmp
imul
adc
cmp
adc
ss
in
and
sub
jmp
in
xor
cmp
cmp
dec
inc
and
inc
cmovs
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
ins
jo
js
test
and
dec
rcl
mov
xchg
cwde
pushf
dec
xor
and
movs
test
push
mov
add
lods
hlt
xor
daa
(bad)
lock
jecxz
ds
hlt
jbe
cmp
in
bound
cld
adc
pop
add
leave
in
retf
sbb
sbb
push
scas
loopne
and
sbb
adc
mov
mov
pop
push
pop
stc
push
in
adc
add
js
jno
and
rol
adc
add
jbe
or
stos
test
lock
jmp
scas
fs
jl
cmp
jae
mov
shl
leave
cdq
aas
sbb
pop
adc
test
xor
add
es
ficom
cli
and
sub
inc
add
sub
mov
sbb
ret
jne
push
nop
and
xor
sbb
shl
pushf
ret
xchg
outs
and
sbb
push
mov
add
fst
add
sbb
retf
mov
xchg
int3
shl
adc
imul
mov
lea
dec
ret
test
push
outs
sub
pusha
leave
or
fiadd
fwait
neg
pop
push
cmp
jne
mov
push
cmp
jne
mov
es
jne
call
or
mov
xchg
jb
jmp
and
cmp
dec
(bad)
jmp
adc
(bad)
jmp
in
out
jns
std
jmp
cld
cld
jmp
fld
mov
adc
cdq
and
ror
int3
pop
mov
mov
sbb
or
and
mov
icebp
lea
xor
fwait
mov
add
test
movs
out
add
nop
fld
or
xor
dec
movs
inc
push
pusha
jo
ja
mov
lods
mov
jno
cmp
and
aaa
pop
and
shr
jmp
imul
push
sbb
enter
aam
add
ret
mov
outs
hlt
rep
cmp
neg
add
sub
mov
sub
fld
push
sub
js
aaa
xchg
push
xchg
mov
xor
sub
or
dec
call
add
ja
cli
xor
jne
sar
or
ror
ja
adc
js
sbb
pop
stc
jecxz
inc
or
inc
mov
inc
xchg
jb
dec
popa
or
adc
push
cmps
daa
loope
or
mov
retf
adc
inc
hlt
daa
add
push
retf
in
push
and
hlt
xor
pop
outs
jle
cld
bound
sub
push
add
sbb
or
lods
sub
sub
adc
fmul
push
loopne
xor
test
mov
push
aas
cld
dec
push
test
fmul
cmp
xchg
ret
fidiv
aaa
push
imul
push
cmp
add
adc
adc
push
dec
int3
add
add
cmp
retf
dec
mov
push
cmp
ins
cmp
mov
dec
mov
and
inc
mov
leave
xor
cdq
paddq
mov
rol
lock
data16
cmp
rcl
ss
(bad)
je
sub
popf
imul
sbb
cmp
fcmovb
test
in
jno
in
in
rcr
mov
fadd
push
popf
adc
jg
int3
mov
mov
push
inc
adc
cmp
mov
(bad)
dec
inc
stos
cmps
aam
add
test
jns
mov
aaa
mov
dec
and
pop
loopne
sub
push
test
sub
je
adc
add
ret
out
dec
lea
push
adc
das
push
xor
pop
jo
push
cmp
inc
and
fcomp
xchg
dec
lds
jno
xchg
iret
popf
or
mov
shl
mov
rcr
shl
cdq
(bad)
push
jge
and
pusha
cmp
xchg
fsubr
mov
dec
pop
enter
(bad)
or
adc
push
movs
ins
ffree
ret
jmp
sbb
or
dec
(bad)
xor
and
fcomp
imul
cmp
pop
pop
(bad)
out
xchg
in
aam
enter
jne
mov
xchg
jns
les
sub
xchg
call
int3
mov
dec
push
stos
adc
xchg
mov
mov
cmps
push
sbb
pop
xchg
popf
fsubr
inc
aas
add
int
jo
jmp
sub
ret
and
mov
inc
lock
loop
sbb
pop
inc
xchg
mov
pop
xor
dec
fist
imul
ds
cmp
ret
je
push
not
sbb
inc
outs
jg
dec
jno
jmp
and
push
push
mov
push
push
out
and
add
inc
imul
sbb
dec
shl
ds
pop
push
mov
outs
jo
push
jae
cmp
dec
in
or
or
test
movs
stos
jo
pushf
jo
push
mov
dec
xor
push
add
(bad)
mov
jne
push
xchg
dec
inc
mov
aaa
nop
sub
or
adc
inc
push
jno
mov
inc
mov
inc
push
test
push
pop
xchg
in
sub
mov
jl
cmp
jg
out
jo
jo
jbe
pop
punpcklwd
jne
imul
adc
mov
fnstsw
aas
sbb
add
mov
test
fadd
adc
and
pop
sbb
or
sti
leave
add
jne
xor
fadd
inc
add
adc
and
in
loope
jmp
or
cmps
and
mov
hlt
push
pop
fs
xchg
jnp
or
scas
add
jbe
inc
sbb
inc
or
sub
fdivr
pop
dec
test
xor
sbb
clc
lock
fimul
in
push
push
ret
jp
imul
clc
or
add
das
mov
sub
jmp
sbb
add
fdivr
or
cmps
arpl
sbb
push
dec
or
push
push
or
jle
sub
jmp
icebp
xchg
sbb
mov
pop
adc
add
inc
push
call
and
leave
(bad)
adc
xlat
xchg
pop
dec
sub
pop
fs
enter
shr
imul
sub
in
(bad)
fbld
ret
movs
in
out
mov
dec
jns
or
push
(bad)
mov
sbb
sub
inc
mov
mov
push
lock
stos
sub
stc
cmp
test
or
jbe
and
or
pop
sub
jb
adc
mov
mov
cld
push
mov
imul
or
lock
sbb
sti
mov
mov
adc
out
push
push
push
jmp
pop
ins
mov
push
push
jmp
lods
enter
mov
and
lahf
pushf
sahf
xchg
jne
cwde
ins
lods
pop
(bad)
call
mov
fnsave
jmp
cmp
add
push
add
aas
stos
add
aaa
jge
into
jbe
push
mov
and
or
add
aas
push
pop
push
push
jnp
adc
mov
push
das
fsub
mov
mov
and
outs
jle
jge
cmp
jl
sahf
push
push
mov
jge
rcr
test
fld
idiv
push
jle
jge
movs
xor
call
pop
mov
or
jmp
gs
aaa
je
aad
adc
mov
(bad)
sbb
hlt
sbb
bound
(bad)
and
mov
dec
clc
add
sub
adc
jo
pop
sbb
adc
ja
sub
les
mov
or
jne
aad
in
sbb
ja
inc
adc
mov
and
adc
sahf
jl
retf
ja
test
jle
call
cmp
imul
add
cdq
push
cmps
test
xor
mov
mov
mov
xchg
(bad)
adc
sbb
pusha
cli
cs
aam
push
dec
fadd
leave
test
inc
cmp
sbb
fs
xchg
cmp
and
fsub
nop
add
je
bound
and
sub
mov
mov
jne
push
enter
inc
(bad)
test
inc
cld
je
loop
movs
push
fistp
ja
pop
pop
jmp
stos
idiv
jmp
inc
enter
jbe
push
push
dec
adc
loopne
ror
push
add
ret
sub
add
add
push
inc
arpl
mov
movs
or
and
sub
mov
inc
and
mov
cwde
jg
fimul
repnz
push
adc
push
cmp
inc
retf
loope
jne
cdq
or
test
and
mov
xchg
sbb
inc
ss
clc
add
hlt
in
sub
ins
loopne
jne
cmp
ds
es
sub
ins
je
add
nop
loope
or
sbb
jmp
add
sub
sbb
sbb
mov
sar
ins
inc
or
adc
int
and
or
retf
push
mov
jg
xor
pop
js
ret
mov
and
mov
mov
repnz
cld
mov
sub
or
jle
add
xor
in
enter
popa
sbb
and
in
adc
jmp
or
pop
xchg
scas
dec
aaa
xchg
push
scas
sbb
gs
inc
lods
dec
mov
xor
mov
test
mov
test
adc
nop
and
imul
cmp
jo
and
jne
add
fs
sub
mov
jmp
and
xchg
cmps
push
pop
leave
in
pop
in
pop
movs
and
sbb
or
mov
push
sbb
sbb
movs
shl
clc
hlt
mov
fistp
push
dec
or
rol
add
cmp
stos
adc
dec
cmps
pushf
test
mov
or
cwde
cmc
scas
cmp
dec
jge
cmps
cmp
adc
add
and
(bad)
cmp
aaa
lods
push
mov
(bad)
jle
sub
pop
inc
add
(bad)
mov
mov
xchg
enter
loope
loop
fadd
(bad)
ss
push
mov
jmp
call
inc
mov
test
xchg
cmp
int
push
xor
jns
lea
xor
adc
jp
into
pop
test
stos
jl
or
adc
or
adc
dec
add
rcl
inc
lds
aad
mov
aam
retf
pop
fiadd
dec
scas
push
mov
or
paddsw
xchg
push
popa
and
ja
xor
inc
xchg
test
push
sbb
mov
(bad)
or
jb
movs
loopne
loopne
jo
sbb
mov
sub
dec
call
add
pop
pop
push
or
bound
add
test
mov
inc
test
test
and
adc
pop
mov
lods
or
add
outs
dec
add
sbb
aad
pushf
pop
inc
add
into
jo
jbe
bound
push
xchg
cmp
loopne
inc
add
or
mov
clc
lock
mov
(bad)
adc
pop
pop
jbe
jl
push
sbb
pusha
ins
(bad)
push
and
leave
cwde
lock
sbb
mov
mov
or
nop
xor
fcmovu
je
jb
jmp
std
mov
push
cmp
ja
add
cmp
adc
(bad)
cmp
cwde
stos
xchg
jo
shl
sbb
pop
adc
mov
fstp
in
push
push
lods
mov
or
push
pop
or
adc
jmp
test
mov
adc
lock
mul
mov
lsl
jmp
push
pop
push
push
in
add
jmp
rcr
pop
jne
div
pop
jmp
test
pop
jb
cmp
or
cmp
jbe
dec
repz
lods
mov
or
fadd
mov
push
(bad)
das
add
out
icebp
nop
sub
or
adc
jmp
or
gs
mov
js
je
push
push
cmp
jbe
jns
aas
rcl
adc
mov
push
xor
jmp
mov
push
or
cmps
jns
mov
jo
mov
fimul
adc
(bad)
dec
push
mov
and
clc
imul
add
adc
xor
ret
push
add
loope
test
gs
push
inc
shl
arpl
and
cmp
pop
push
dec
push
dec
sub
fs
hlt
push
dec
xchg
push
jge
leave
push
add
je
adc
pop
jbe
or
jne
mov
xor
inc
jmp
sub
dec
lods
fdiv
lock
div
adc
loop
adc
pop
dec
lea
sub
cmps
xchg
outs
cmp
inc
inc
pop
jb
pop
(bad)
push
outs
inc
mov
mov
push
inc
int3
or
ror
sub
es
adc
loope
push
mov
push
add
pop
loope
xor
adc
dec
loopne
les
dec
mov
test
and
pop
shl
adc
adc
sbb
jg
fucomi
mov
cmp
(bad)
inc
imul
pushf
inc
adc
or
fwait
test
out
or
inc
cmp
lods
mov
dec
cmp
dec
test
push
shl
sti
daa
mov
sub
sbb
lods
and
push
loop
test
ins
jl
pop
and
mov
cmps
ds
mov
ror
mov
pop
push
push
push
dec
sbb
aas
adc
xchg
pop
cmp
icebp
scas
test
and
ins
add
inc
add
add
nop
jmp
or
dec
sub
loopne
jno
inc
mov
out
je
add
mov
je
mov
cmp
add
mov
mov
mov
and
jmp
pop
sbb
popa
out
or
inc
lds
xchg
lods
xchg
out
call
sahf
popf
sub
xchg
loope
into
mov
mov
inc
push
lahf
push
or
clc
cmp
fcomip
call
push
loope
adc
repz
add
lea
mov
or
inc
jb
shl
loop
mov
faddp
imul
sbb
or
lock
sti
in
sub
push
jnp
inc
push
nop
cmp
pop
stos
test
je
test
je
ins
mov
mov
aam
jb
sbb
loope
xchg
inc
push
mov
fcomp
pushf
inc
jecxz
je
leave
and
sbb
lock
mov
push
mov
jo
push
rcl
clc
sbb
popf
imul
dec
xchg
push
cdq
in
inc
sbb
clc
inc
add
jge
lea
lea
pop
dec
dec
enter
je
jb
outs
enter
shl
and
adc
ja
pop
leave
iret
jno
outs
add
jge
push
repnz
push
rol
mov
rol
outs
adc
xor
jmp
push
je
ss
cs
jne
push
jg
inc
sbb
fsub
push
xlat
inc
add
mov
push
sbb
cs
fst
pop
ins
xchg
mov
fdiv
dec
ss
xlat
aas
add
ror
pop
jl
fidiv
inc
cmp
not
add
or
sar
je
adc
or
mov
retf
adc
mov
fisubr
mov
xor
sbb
mov
fcomp
or
cli
push
or
gs
add
ss
and
xor
xchg
nop
mov
das
pushf
sbb
push
xchg
rol
push
cmp
imul
dec
rcl
adc
fcom
cwde
mov
fiadd
cmp
jae
jg
xor
nop
sar
lock
jle
jle
ss
sbb
jl
push
mov
cmp
sub
enter
test
and
mov
jbe
mov
pop
nop
cmp
sbb
cmp
popf
pop
stos
cmp
dec
loop
adc
xchg
lea
xlat
loope
sub
ss
sub
push
cmp
cs
and
test
xor
add
push
pop
add
sbb
adc
ins
jne
js
sbb
adc
sar
add
imul
jne
push
adc
popf
and
dec
in
ins
lods
sub
sbb
das
inc
mov
nop
xchg
xchg
aam
jo
xor
and
jbe
outs
cmps
inc
hlt
popa
push
mov
mov
sub
jmp
pop
call
ja
mov
xor
test
adc
xor
pop
mov
inc
or
dec
cmp
add
pop
inc
push
xchg
cmp
xchg
and
mov
test
je
inc
push
add
das
in
shl
mov
es
jle
jecxz
retf
dec
jmp
and
cmp
(bad)
push
or
data16
aad
(bad)
push
aas
push
js
push
scas
ror
jnp
lock
lds
test
xchg
dec
ret
retf
test
dec
test
inc
loop
inc
xchg
iret
dec
inc
push
push
loopne
sub
call
ret
shl
push
adc
inc
call
retf
loop
xor
push
lock
iret
xor
ss
retf
and
add
and
mov
hlt
inc
cld
add
ss
cmp
je
adc
rcl
adc
pusha
aas
aam
xchg
pop
addr16
(bad)
outs
or
jmp
dec
jp
pop
and
arpl
pop
mov
inc
pop
pop
jmp
xor
cmp
dec
daa
fld
push
and
dec
jns
(bad)
jmp
jmp
and
outs
pop
enter
add
xchg
pushf
je
aam
xlat
aam
enter
xor
adc
pushf
cwde
xchg
xchg
enter
test
enter
js
enter
jo
enter
push
sbb
pop
pop
push
xchg
enter
inc
sbb
enter
mov
in
xchg
aaa
add
pop
dec
jb
nop
shr
lock
in
fsub
xchg
cld
mov
jb
or
sbb
enter
sbb
jb
and
and
jb
and
add
sbb
cmp
mov
or
nop
inc
mov
nop
inc
push
cmp
in
mov
std
aam
xchg
nop
inc
push
jmp
inc
push
cmp
inc
cmp
in
in
xor
aam
nop
or
push
in
shl
sbb
enter
push
cmp
fdivr
pusha
xchg
sub
jmp
adc
xchg
cwde
pushf
ja
inc
push
mov
xchg
mov
dec
retf
sti
xor
xchg
inc
push
jmp
xlat
and
and
jg
data16
inc
ret
dec
push
xor
je
xchg
jecxz
dec
(bad)
pop
lahf
push
mov
or
push
clc
ss
cdq
xor
sub
pop
cmp
pop
jne
and
adc
mov
bound
inc
adc
cmp
dec
fs
cwde
push
or
mov
dec
ret
cld
push
(bad)
ror
aaa
add
adc
sbb
cmp
pop
addr16
jmp
pop
ror
jmp
add
icebp
sub
(bad)
mov
add
jne
js
add
es
into
call
mov
push
shl
(bad)
(bad)
pusha
inc
loop
pop
data16
pop
(bad)
mov
xchg
loop
ficomp
jp
jl
mov
mov
call
lahf
jmp
xor
lock
mov
add
loop
test
or
mov
mov
loopne
add
xor
pop
sub
add
xchg
pop
aaa
and
jbe
cmp
sub
mov
jmp
and
out
jo
sar
test
in
mov
add
push
sbb
push
mov
cmp
clc
ret
es
xor
loopne
cmp
mov
xchg
jo
outs
adc
ret
cli
add
ret
jg
ins
cmp
or
(bad)
fistp
pop
jl
jg
xor
es
xchg
ja
xor
or
ja
xchg
and
inc
lea
(bad)
jns
xor
and
stos
lock
and
xchg
jmp
inc
and
fdivr
sub
add
dec
cdq
push
push
hlt
pop
mov
sub
sbb
ins
dec
mov
and
adc
clc
adc
pusha
jg
jl
clc
or
cmp
mov
sub
xchg
cs
sub
mov
or
inc
jne
sbb
stc
dec
sub
sbb
jbe
daa
inc
add
outs
jmp
ss
mov
jl
les
push
mov
push
cmpps
cdq
xor
or
cld
add
adc
mov
cmps
dec
stos
inc
add
or
ss
sbb
jl
(bad)
xchg
pop
or
mov
cmps
shl
or
xor
adc
xchg
dec
popa
fs
xchg
int
jg
push
mov
or
icebp
inc
out
aaa
push
in
push
dec
inc
inc
inc
shr
cmp
sbb
mov
adc
push
popf
lods
ret
(bad)
loopne
loopne
and
sbb
iret
mov
inc
outs
out
sbb
iret
jne
into
or
inc
mov
ss
and
and
mov
shl
(bad)
ja
ret
shl
cli
inc
call
je
ficomp
cli
push
mov
hlt
popa
mov
dec
xor
inc
js
imul
push
and
add
scas
inc
ret
mov
aaa
xlat
rcl
add
jmp
jb
add
sub
lock
fisubr
jbe
xchg
mov
inc
jb
scas
loopne
lods
mov
mov
jbe
mov
mov
adc
xor
or
ret
adc
sub
lods
push
xchg
or
inc
jno
xchg
xchg
mov
jnp
clc
pop
jl
adc
or
sbb
xor
into
ret
fdiv
push
sub
int
xor
pop
(bad)
dec
hlt
xor
push
and
fmul
in
jne
xor
push
fmul
dec
jbe
imul
je
mov
inc
push
mov
ins
push
pop
push
xchg
push
enter
pop
jnp
or
cli
ret
adc
and
xchg
lock
in
jg
fcom
or
in
je
or
xor
sbb
push
push
ss
cli
or
jmp
or
pop
bound
popa
int
dec
xchg
retf
jmp
icebp
jo
sbb
ins
enter
xchg
pop
and
xchg
pop
adc
ja
ret
ss
loope
sbb
in
call
cmp
cld
push
loopne
push
je
mov
cld
mov
test
arpl
xor
sbb
inc
loopne
pop
leave
shl
outs
pop
mov
sbb
cmp
mov
cmps
or
push
push
cwde
leave
push
push
inc
stos
rol
sbb
loop
push
dec
test
data16
xor
push
add
push
daa
movs
xor
dec
push
pop
std
push
daa
dec
pop
add
jmp
retf
cmp
test
and
push
add
mov
add
jle
in
fcmovnbe
sti
mov
or
push
dec
cld
retf
loope
cli
not
test
and
fisttp
adc
dec
jecxz
je
outs
pop
mov
dec
adc
popf
adc
js
mov
nop
push
add
and
ins
rol
push
add
fsubr
movs
push
inc
push
mov
mov
fucomp
jns
dec
sub
cmp
mov
push
sbb
push
cmp
enter
(bad)
inc
add
test
fbstp
inc
cmp
mov
rol
jmp
or
aas
jmp
mov
cmp
push
xor
and
sbb
push
hlt
mov
sbb
or
dec
pop
shl
clc
cmp
daa
loopne
adc
fsub
jmp
out
lods
loope
int
cmp
adc
sbb
mov
(bad)
dec
inc
lea
dec
js
cmp
je
xor
scas
push
lea
mov
fcmovnb
aaa
mov
fldenv
pop
pusha
fcom
ret
lea
out
in
lock
sub
movs
(bad)
aas
add
cmp
mov
ja
mov
add
xlat
push
push
test
shl
mov
push
add
sbb
scas
sub
scas
pop
add
dec
mov
je
cmp
jecxz
pop
aam
inc
inc
sbb
out
inc
aas
mov
push
jmp
sub
rcr
dec
aam
cmp
iret
dec
or
clc
test
mov
out
cmp
pop
or
push
(bad)
xchg
jb
mov
pop
les
inc
mov
sbb
inc
(bad)
dec
add
push
mov
or
icebp
and
fs
mov
fucomp
lock
mov
and
fidivr
jae
mov
sbb
cli
mov
inc
sbb
aas
(bad)
pop
mov
inc
mov
adc
cmp
fmul
push
sub
and
ffree
push
sbb
inc
add
fmul
xor
mov
(bad)
clc
movs
mov
xor
pop
enter
movs
dec
add
lds
add
xchg
scas
in
mov
lods
push
or
mov
ror
dec
fist
cmp
add
bound
cdq
nop
retf
add
loopne
add
jl
xchg
xchg
push
int
dec
dec
stc
pop
xchg
cmp
pop
mov
adc
into
xchg
push
xchg
xchg
pop
push
loopne
or
iret
xchg
pop
add
test
mov
push
lock
inc
cmp
or
sub
aaa
inc
inc
pop
add
adc
fmul
xchg
pop
test
or
jns
je
or
jo
retf
jmp
stos
adc
pop
sti
mov
pop
or
aas
(bad)
lea
rcr
jp
inc
push
lods
retf
xchg
xchg
ja
call
ins
jmp
aam
inc
sub
or
jne
mov
jbe
sar
xor
mov
cmp
aas
rol
jg
into
jl
add
cmp
pop
pop
pop
pop
xchg
or
xchg
cmp
sbb
jb
mov
inc
mov
call
push
popa
and
or
cwde
lock
or
push
in
sbb
mov
xchg
sbb
mov
cmp
jmp
sub
sub
mov
imul
mov
movq
jl
xchg
adc
fisub
jle
outs
inc
xchg
jbe
mov
ffree
add
sbb
hlt
xor
xchg
cld
xchg
rcr
(bad)
dec
add
mov
jl
clc
cs
sub
jbe
ret
sbb
sbb
push
shl
inc
repnz
test
ret
fwait
pop
mov
pop
xor
or
fidivr
jne
push
lock
imul
call
push
push
movs
xor
je
popf
and
nop
jmp
pop
movs
push
jns
js
jle
stc
fnstsw
add
ficomp
fst
loop
sbb
lods
push
sub
lahf
fild
or
push
sar
les
fidiv
add
sar
aaa
push
ins
(bad)
aam
fs
add
clc
sub
ficomp
sub
sbb
dec
push
cdq
or
or
in
call
and
add
or
neg
push
sahf
push
sub
sbb
dec
add
scas
or
int3
cld
jl
dec
jg
jl
out
lea
fs
push
ret
add
clc
data16
xchg
or
or
mov
int
jo
ficomp
loop
(bad)
and
jmp
test
bound
dec
fstp
ret
jmp
test
inc
das
or
push
icebp
jno
scas
dec
jecxz
shl
dec
cli
ss
jge
xchg
jmp
ficom
sbb
repnz
xchg
cmp
enter
xchg
or
jne
add
push
add
pop
push
loope
and
scas
add
mov
call
aad
push
mov
rcl
call
sub
inc
and
(bad)
cmc
test
ds
jg
cmp
or
rcr
xchg
push
xor
push
mov
inc
add
xlat
xor
inc
mov
push
cmc
push
inc
push
push
sub
addr16
daa
sub
sbb
mov
sub
cmp
jns
(bad)
jmp
push
lds
cmc
xor
and
push
mov
add
inc
adc
cmps
fs
cmp
and
rol
jecxz
sbb
xchg
or
add
loopne
in
xor
add
mov
xor
adc
cdq
xor
nop
outs
cld
fadd
dec
dec
int3
(bad)
or
shr
adc
fdivr
cmps
loop
cmp
stc
adc
mov
add
dec
adc
les
push
out
xor
inc
ret
dec
inc
mov
and
sbb
add
cwde
mov
or
ja
and
cwde
ret
fsubr
sbb
jns
fimul
mov
out
and
jp
inc
xchg
and
lock
push
or
aas
iret
sub
jne
cmp
rcl
push
lock
add
sahf
add
adc
or
(bad)
dec
test
loope
call
ret
ror
add
jg
je
pop
adc
test
sub
pop
cmp
cdq
xchg
adc
push
jns
lds
es
and
je
push
cmp
imul
psubsw
pop
mov
add
inc
ret
ins
dec
sbb
(bad)
inc
test
adc
dec
add
pop
fadd
nop
lock
cmp
add
jge
test
aas
or
adc
add
cmps
outs
sub
sbb
sbb
mov
sbb
shl
sbb
test
pusha
adc
in
push
test
enter
int3
lea
xlat
movs
sub
mov
pop
cmp
out
and
push
outs
mov
push
jno
mov
sub
or
pop
adc
aaa
push
jnp
(bad)
movs
cmp
ret
test
call
mov
or
pop
inc
out
call
pop
adc
pop
add
sub
adc
enter
ret
mov
pop
mov
add
aas
cmp
add
mov
mov
and
or
rcl
push
call
add
add
aam
es
sub
mov
cmp
je
cmp
and
adc
sbb
inc
xor
int
data16
adc
pop
jl
stos
pop
repz
pop
call
push
mov
aad
shr
inc
xor
pop
add
sar
add
and
add
push
pop
out
or
sbb
xchg
lods
and
fadd
cmp
inc
and
add
data16
mov
sbb
sub
add
adc
add
pop
fst
inc
clc
mov
sub
std
sub
cmp
pushf
xchg
xchg
mov
ja
adc
in
inc
xchg
cmps
xor
push
or
xor
adc
movsx
xor
les
add
retf
or
inc
call
out
test
sbb
or
je
push
jne
mov
and
add
stc
ss
pop
sbb
xor
imul
sbb
inc
repz
add
(bad)
rol
fidivr
mov
(bad)
(bad)
adc
xchg
mov
xchg
adc
sub
add
and
test
jbe
dec
xchg
call
adc
lahf
(bad)
mov
cmp
xlat
or
fcomi
ret
imul
jmp
cmp
pop
or
sub
ins
mov
fmul
adc
jmp
popa
mov
rol
clc
dec
jg
retf
push
push
hlt
mov
retf
add
and
inc
inc
scas
add
adc
xchg
add
jmp
pop
and
or
mov
cmp
jne
mov
xchg
jbe
sbb
outs
imul
mov
mov
mov
pop
lods
and
sub
test
add
dec
sar
lds
mov
mov
add
inc
daa
or
pop
sbb
sbb
(bad)
cmps
mov
loopne
stc
pop
mov
dec
cwde
retf
scas
pop
and
ficomp
sti
je
adc
out
and
cmp
cmp
push
and
test
jb
cmps
fucom
pop
not
scas
fwait
pop
mov
stos
mov
test
in
sub
loopne
nop
loop
stos
pop
adc
test
(bad)
mov
add
cmp
lods
std
or
or
je
pop
fucomp
pop
cmc
or
data16
das
jne
cmp
mov
sbb
add
ins
add
sti
inc
push
inc
push
and
pop
retf
xor
out
jbe
stc
adc
xor
inc
inc
adc
(bad)
dec
cmp
je
fmul
pop
or
sub
cmp
popa
aaa
lea
inc
loopne
pop
fsubr
push
dec
mov
les
les
fbstp
push
mov
cmp
int3
fmul
xor
cmp
in
inc
js
in
add
sub
adc
pop
pusha
mov
sti
mov
sub
and
jle
mov
and
test
push
js
jno
mov
fist
xchg
hlt
jle
cmp
ffree
jmp
pop
add
aad
ins
mov
push
call
pusha
jmp
cli
xor
xor
movs
or
imul
mov
out
in
push
mov
or
dec
xchg
or
lods
scas
pushf
cmp
js
(bad)
in
xor
adc
je
iret
rcl
nop
(bad)
lods
jbe
cmp
adc
ror
rol
fadd
sub
pop
cmp
add
or
cli
shl
inc
aas
cmp
enter
retf
cmps
jns
inc
sub
mov
xor
pushf
push
adc
iret
push
and
xlat
cmp
push
test
push
mov
sub
js
lar
mov
imul
jmp
nop
aaa
inc
mov
iret
test
aas
fwait
pushf
pushf
cmp
cwde
xchg
xchg
lea
sbb
ror
xchg
push
push
push
mov
sub
or
sub
push
cmp
and
lods
xor
mov
test
xchg
mov
push
sbb
add
in
out
xor
pop
sub
and
pop
xor
pop
popa
lea
cmp
xor
or
dec
sti
ror
mov
dec
mov
mov
inc
pusha
adc
mov
mov
pop
dec
jae
push
mov
inc
test
cmovl
xchg
nop
ret
sbb
pusha
aaa
nop
call
in
cmps
adc
hlt
jmp
or
jmp
neg
aam
aad
or
es
inc
dec
mov
add
add
mov
or
jl
cmp
pop
mov
test
jae
mov
inc
push
cmp
call
adc
outs
sub
or
inc
mov
jle
or
jmp
adc
sbb
pop
or
sbb
adc
cmc
jl
dec
sbb
add
cmp
(bad)
and
mov
pop
addr16
loope
shl
jne
mul
add
jns
adc
test
cmp
adc
sbb
cmp
inc
jne
inc
js
adc
mov
outs
sbb
out
js
mov
aam
xor
test
stc
xor
push
jo
push
mov
or
hlt
sbb
dec
and
xchg
pop
push
xlat
pop
mov
daa
ret
ins
sbb
mov
and
push
fdiv
(bad)
ja
sub
and
mov
inc
mov
cmp
rol
cmp
scas
xchg
pusha
ss
sbb
add
nop
adc
aaa
aaa
mov
fiadd
xchg
push
pop
lea
fldcw
ror
test
add
jmp
arpl
sbb
lock
popa
out
dec
test
push
rcr
clc
ret
inc
call
dec
or
pop
sub
mov
mov
or
pop
jl
movs
sub
ret
push
and
and
inc
ins
cmps
adc
pop
pusha
loope
xor
jno
push
add
(bad)
and
aaa
or
mov
mov
(bad)
push
pushf
xor
xchg
push
in
addr16
mov
repz
xchg
stos
fstp
stos
xchg
dec
push
popa
mov
jmp
adc
sub
and
push
adc
ss
call
loop
loopne
test
(bad)
dec
mov
add
shl
(bad)
stos
add
pop
cli
dec
push
sbb
sbb
dec
xchg
ret
test
retf
xor
or
div
cmp
push
dec
xor
shl
int3
adc
rcl
cld
mov
ret
xchg
fdiv
push
push
or
dec
sbb
xchg
mov
add
mov
mov
aas
xchg
push
sub
add
test
je
mov
je
push
xor
test
fdivp
(bad)
data16
jge
jo
pop
inc
and
pop
movs
cmp
pop
add
jae
push
movs
sbb
add
enter
jl
add
push
ror
add
cmp
xchg
jbe
sbb
lods
adc
jo
test
popa
adc
xor
rcl
add
cmp
cmp
and
fwait
fwait
mov
dec
adc
ret
pop
push
test
sar
add
ins
ret
cmp
or
int3
push
fiadd
dec
xchg
fistp
in
or
pop
mov
jne
jmp
dec
cmp
nop
or
or
jmp
dec
outs
add
inc
retf
or
inc
aas
popa
mov
sar
push
mov
add
outs
adc
push
mov
jl
adc
pop
add
jnp
and
add
inc
(bad)
cwde
cs
or
hlt
pop
pop
xor
push
and
xchg
dec
sub
retf
mov
inc
mov
scas
push
fwait
hlt
and
mov
and
adc
push
dec
push
or
mov
sub
pop
call
movsx
out
adc
jp
jmp
add
fsubr
inc
popa
and
mov
fnstenv
movs
mov
jl
jo
mov
xchg
sub
neg
scas
push
lock
lock
test
not
retf
bound
dec
enter
push
jns
or
dec
rcl
(bad)
jmp
inc
xchg
mov
rol
xor
mov
outs
fnstsw
mov
jmp
sub
(bad)
inc
xchg
outs
sub
mov
xor
pop
jl
(bad)
adc
cvtpi2ps
inc
inc
inc
inc
clc
int
ret
and
test
sub
stos
or
sbb
or
sbb
int
dec
cmp
push
add
push
mov
sub
repnz
sahf
dec
jmp
clc
adc
and
outs
push
jmp
jns
pop
xor
arpl
repz
xor
sbb
mov
lea
push
cwde
dec
push
push
loopne
add
hlt
sbb
stos
push
in
adc
pop
xor
(bad)
ins
pop
arpl
or
sub
or
loop
jl
fisttp
mov
add
sbb
cmp
sub
fidivr
mov
add
sbb
inc
xor
mov
add
xor
mov
xor
jne
fld
mov
cwde
or
js
pop
dec
xor
adc
fcomp
repnz
and
retf
dec
or
iret
je
and
jp
or
ja
mov
sbb
imul
clc
clc
jno
mov
ds
loope
or
retf
and
scas
add
mov
inc
ss
les
retf
or
fild
js
mov
clc
jb
jmp
jge
jb
pop
clc
sub
jge
pop
imul
iret
add
add
fst
or
jmp
xchg
and
mov
cmp
div
or
jmp
sub
add
xor
jge
add
in
xchg
test
xchg
mov
jo
xor
stos
cmp
nop
mov
adc
and
dec
mov
imul
aas
adc
movs
add
sar
loop
(bad)
addr16
pop
loope
adc
add
mov
mov
push
xor
pop
add
xchg
mov
adc
mov
xchg
pushf
sbb
sbb
push
xor
ror
add
por
mov
stos
or
xor
add
fidivr
adc
sbb
jge
push
push
mov
or
add
or
add
in
pop
rol
push
(bad)
adc
and
sti
jne
or
mov
mov
outs
or
push
lock
add
ins
ficom
cli
inc
sub
mov
dec
sbb
sbb
jle
sbb
inc
push
je
aaa
hlt
xchg
add
add
or
fdivr
and
sub
out
rol
sbb
inc
inc
rcr
cmc
ins
add
inc
leave
or
dec
or
and
jb
push
icebp
jb
add
and
jne
mov
je
sbb
jne
and
es
jae
jne
sub
retf
push
pop
add
inc
push
ja
push
push
adc
dec
add
add
mov
push
aam
scas
mov
inc
mov
jmp
jge
dec
clc
cmp
mov
add
shl
dec
xor
or
das
je
dec
lods
cmp
push
push
jne
je
lods
aam
sub
pop
xor
je
hlt
inc
sbb
mov
mov
sti
test
outs
clc
or
pop
fcomp
adc
push
ins
lahf
cld
dec
cmp
int3
je
jns
jbe
xor
and
xchg
(bad)
mov
sub
les
jbe
push
mov
jmp
fwait
dec
mov
or
ja
(bad)
or
(bad)
loope
jbe
adc
sbb
and
pop
mov
push
or
shr
in
sub
pop
pop
shr
push
popa
fwait
test
add
pop
push
inc
xor
or
mov
jb
gs
cdq
add
mov
or
sub
lea
les
xchg
mul
ins
fninit
les
cmp
xor
mov
or
cli
cmp
cs
push
(bad)
or
xor
inc
leave
mov
dec
daa
adc
sbb
push
inc
jb
or
sub
bound
push
or
add
and
lea
aas
and
mov
mov
outs
mov
cmp
inc
xchg
call
cwde
dec
jbe
jp
outs
dec
xchg
xor
or
dec
adc
adc
push
call
mov
or
out
xor
jmp
ret
sub
call
or
push
dec
ins
jmp
das
loope
sbb
mov
test
pop
test
inc
inc
inc
data16
dec
jne
xor
dec
clc
jb
popa
aam
mov
fld
aad
cmp
push
or
jg
das
arpl
cdq
xor
push
pop
add
or
(bad)
nop
or
inc
or
or
sbb
lods
daa
sbb
lock
stos
test
dec
mov
lock
add
mov
jl
test
test
int
daa
inc
add
dec
fcmove
pop
inc
pop
xor
je
sub
push
jmp
ds
je
dec
mov
inc
sub
jne
add
mov
mov
cmp
jmp
ins
mul
push
out
lahf
mov
xor
mov
shl
fdivr
scas
mov
ret
(bad)
mov
jbe
sbb
sbb
push
add
daa
fisubr
and
pop
(bad)
jmp
imul
xchg
mov
pop
add
pop
mov
cdq
sbb
ret
inc
cmp
adc
inc
mov
loopne
and
sbb
mov
and
cs
mov
mov
dec
or
cmps
mov
cmp
jne
mov
sub
mov
add
ret
jge
daa
adc
cs
retf
scas
loopne
mov
lock
mov
or
cmp
xor
fild
out
cmp
adc
rcl
adc
leave
xchg
fmul
out
in
ror
cmps
sub
inc
popf
ror
(bad)
(bad)
std
jl
sub
cmp
ja
ret
dec
rol
clc
ins
push
and
sbb
sbb
sbb
clc
add
std
retf
fiadd
add
inc
loopne
xor
xchg
retf
movs
popf
pushf
or
sbb
jmp
call
push
(bad)
or
je
or
dec
sbb
inc
scas
pushf
pop
or
add
mov
add
scas
xor
sub
or
out
out
test
mov
mov
imul
retf
pop
nop
inc
sahf
mov
movs
call
cmp
call
mov
call
out
ss
or
dec
ins
je
loopne
outs
dec
and
adc
sar
adc
and
pop
and
push
sub
bound
push
cmp
mov
add
push
mov
push
cmp
inc
pop
mov
(bad)
jg
dec
aad
pusha
fs
pop
out
xor
cmps
ror
mov
test
mov
js
pop
nop
fidivr
sub
test
js
test
xchg
jne
pop
ins
push
sub
arpl
mov
push
je
adc
add
dec
test
in
push
(bad)
dec
test
test
clc
(bad)
out
ss
push
js
sbb
out
add
jae
push
push
mov
push
or
lock
jmp
ins
sbb
lods
pop
iret
jae
cmp
sbb
leave
cli
cmp
je
push
lahf
ret
into
call
inc
push
pushf
xor
int3
out
cmp
jne
xor
call
mov
push
adc
xor
or
fldenv
inc
popa
and
jle
or
rcl
cli
fld
movs
mov
sbb
xor
aad
shl
jl
je
movzx
sub
hlt
add
add
add
movs
mov
jmp
mov
sub
jno
test
sub
add
sub
xor
inc
add
adc
test
mov
mov
mov
sub
push
add
in
gs
mov
adc
mov
or
mov
sub
outs
jne
outs
rcr
test
call
ss
mov
imul
std
add
adc
mov
cmp
fmul
adc
adc
jmp
and
cmc
and
adc
aad
ret
rcr
cmp
addr16
mov
jle
ss
jae
cmp
and
pop
push
sbb
add
mov
or
and
push
dec
mov
mov
call
cmp
mov
nop
sub
mov
lahf
dec
dec
pop
test
mov
lea
push
ror
das
or
mov
aam
push
and
jne
mov
push
pop
in
lds
shl
dec
adc
jle
loopne
sub
test
out
aam
ret
cdq
loopne
scas
fwait
or
mov
enter
test
push
add
xlat
inc
icebp
adc
fs
mov
push
(bad)
stos
dec
xchg
aad
aam
stos
aad
scas
jno
mov
pop
test
scas
and
cmp
js
nop
popf
imul
test
cwde
add
pop
sbb
jo
adc
xchg
adc
rol
neg
shl
inc
fimul
jge
or
jne
sbb
mov
lock
aaa
mov
or
pop
(bad)
retf
lea
rcr
sbb
cli
lods
aam
or
les
rol
es
ja
dec
pushw
adc
repnz
ins
cwde
add
jmp
lea
sub
inc
xor
shl
cmc
jns
pop
fistp
rcl
aas
xor
and
pop
enter
xor
xor
sbb
add
jmp
and
daa
add
cmps
cmc
scas
fdivr
xor
aam
xor
xor
sbb
or
outs
test
pop
pop
add
popf
in
imul
or
jmp
jmp
arpl
scas
in
in
cdq
and
xor
sbb
movs
xor
or
sbb
xor
jbe
adc
(bad)
(bad)
mov
cmp
push
push
adc
lahf
test
push
and
dec
inc
sbb
arpl
push
inc
xor
icebp
dec
shl
mov
push
retf
mov
sub
fcmovu
cmp
mov
push
icebp
inc
out
fadd
adc
je
cmp
ror
or
mov
ins
ret
mov
mov
mov
popf
xor
mov
sbb
lahf
sbb
mov
sub
add
jecxz
jns
dec
add
retf
imul
cmp
cmp
xchg
retf
add
fs
sub
test
enter
ret
cli
(bad)
add
jne
sbb
jle
nop
call
popa
test
add
xor
jne
sub
je
inc
dec
xchg
push
or
std
or
icebp
push
int
or
(bad)
aad
ret
fcom
fucomip
dec
(bad)
jecxz
and
mov
shl
add
cmp
dec
and
leave
sar
dec
cmp
(bad)
sti
(bad)
jne
mov
and
imul
dec
int3
xchg
push
mov
stc
sub
or
in
adc
mov
jb
mov
imul
cs
shr
push
add
loopne
push
mov
jg
mov
add
push
mov
jne
and
fild
mov
xor
sub
push
shr
daa
sub
push
add
jnp
inc
push
cld
mov
int3
xor
pop
outs
int
or
shr
sbb
mov
dec
mov
add
(bad)
xchg
xor
add
add
dec
shr
and
addr16
pusha
cmps
jno
jae
or
adc
neg
inc
ins
jne
xor
pusha
cmp
rcr
cmp
fbstp
adc
ins
cmp
push
mov
inc
cmp
mov
mov
test
js
aas
mov
cmc
mov
in
add
or
xchg
pop
add
ds
dec
or
rcl
or
xor
(bad)
cmp
jne
cmp
sbb
mov
mov
mov
imul
adc
cmc
and
push
add
std
cwde
ror
xchg
or
add
add
mov
xor
pop
sub
or
push
sub
adc
push
ins
jne
dec
sub
ret
inc
shr
nop
and
stos
pop
test
daa
leave
dec
loopne
lock
rcr
or
and
and
rol
unpcklps
fisttp
test
je
cmps
push
nop
in
adc
je
call
push
retf
orps
pop
cli
mov
mov
mov
inc
or
cld
jmp
scas
adc
or
or
xor
sub
leave
jp
pusha
(bad)
jmp
add
mov
or
xlat
mov
je
and
popf
sub
sti
xchg
mov
cmp
add
mov
push
jne
cmp
je
mov
jo
jmp
adc
adc
jae
aas
sbb
inc
pop
inc
cmp
lds
daa
or
pop
(bad)
in
out
and
mov
sub
or
lods
pop
xchg
test
cmc
fcomp
mov
inc
add
mov
push
and
sbb
cmp
xor
aad
repz
jmp
mov
add
les
cmp
nop
fs
lods
fldz
fiadd
adc
inc
xor
xor
push
push
js
mov
jae
or
sub
or
push
outs
test
and
aas
ins
lock
sbb
test
sbb
inc
pop
aaa
xor
test
mov
clc
dec
inc
xor
jo
jmp
test
xchg
xchg
(bad)
pop
fcmovnbe
popa
xor
fld
mov
push
dec
fcom
sub
dec
jmp
and
adc
(bad)
xchg
push
inc
popa
pusha
aas
fstp
dec
repnz
sbb
add
sub
pop
leave
(bad)
push
push
call
xchg
adc
in
push
outs
cmp
(bad)
outs
dec
mov
dec
(bad)
loope
fimul
mov
dec
push
xchg
jmp
mov
sbb
or
dec
mov
dec
push
icebp
pop
pop
add
push
inc
lea
push
mov
ss
push
add
mov
fimul
sbb
lods
and
push
dec
sub
mov
div
push
xor
(bad)
sahf
and
fld
push
sar
xchg
hlt
mov
sbb
mov
add
lock
sub
(bad)
ja
pusha
xor
mov
adc
inc
or
test
movs
es
mov
mov
and
test
fwait
cmp
imul
mov
(bad)
xchg
mov
xchg
das
cmp
test
movs
dec
cs
push
dec
jmp
adc
out
fisttp
fisttp
fnstsw
add
shl
fdivrp
xor
adc
or
mov
mov
push
jne
xchg
xchg
adc
sahf
(bad)
sbb
pop
adc
sub
sbb
aaa
push
ja
cmp
sub
lods
sub
push
pop
jg
or
fidiv
mov
ins
adc
dec
fmul
xchg
inc
js
adc
or
mov
push
clc
lock
or
nop
stos
loope
sti
ins
add
nop
(bad)
jae
lahf
outs
mov
(bad)
(bad)
jb
ss
xlat
mov
(bad)
jmp
shl
sub
and
lea
lea
int
jge
mov
add
hlt
cmp
jo
sbb
jle
push
ror
mov
and
xchg
mov
int3
xchg
dec
push
jne
adc
sub
adc
call
cmp
test
test
or
sub
in
add
fwait
sbb
clc
sub
xchg
clc
popa
and
adc
ins
jnp
iret
push
les
ss
neg
sbb
ror
aam
fsub
(bad)
fsubr
iret
loopne
in
xchg
inc
push
pusha
cmp
mov
(bad)
push
pop
add
fnclex
imul
gs
pop
push
fmul
add
xchg
ss
or
inc
mov
(bad)
push
dec
call
hlt
add
jg
or
xchg
int3
sbb
sbb
and
pop
pop
mov
sbb
ret
mov
or
adc
rcr
adc
jmp
scas
mov
jmp
jge
sbb
adc
pop
(bad)
stc
jbe
icebp
sbb
stos
push
xor
test
pop
mov
push
dec
pop
fdivr
mov
nop
aam
inc
pop
and
adc
gs
push
or
jl
loopne
ins
or
push
or
inc
push
adc
mov
jne
pop
mov
mov
or
dec
adc
cld
push
daa
fiadd
or
sbb
sub
shr
xchg
mov
loop
cmp
loope
not
scas
mov
(bad)
xchg
add
daa
js
test
or
shl
push
or
(bad)
sub
and
fsub
std
ror
add
test
and
mov
and
ret
adc
pop
and
dec
inc
outs
aas
mov
or
sub
jmp
test
and
pop
cmp
and
out
test
inc
dec
or
test
adc
test
loopne
and
xlat
sbb
ret
and
xor
add
iret
fisttp
sub
inc
push
mov
inc
js
(bad)
scas
outs
div
std
or
jmp
inc
and
mov
cmp
add
jl
and
jecxz
sbb
mov
jae
mov
xchg
jmp
mov
dec
adc
sub
xchg
mov
push
xor
sub
aaa
jge
mov
or
loope
sbb
neg
test
pusha
loope
pop
sub
dec
and
imul
fnstsw
pusha
rol
je
pusha
(bad)
ins
fsub
adc
lea
sahf
inc
mov
dec
in
mov
es
adc
sti
add
pop
jns
test
fisttp
or
mov
mov
add
or
cld
or
sub
push
and
cmp
or
neg
std
sub
out
and
add
add
mov
lods
imul
mov
inc
add
adc
jmp
push
fstp
jmp
fisttp
jmp
sub
or
xor
add
mov
mov
test
xor
cmps
xchg
dec
out
pop
sub
rol
neg
pop
xchg
xor
inc
pop
adc
jne
or
xor
rcr
push
aaa
pop
add
push
inc
pop
loope
mov
push
sahf
dec
jmp
sub
sub
jmp
sub
daa
pop
jp
push
or
add
psubusw
cmp
cmps
dec
and
push
sub
mov
ja
mov
sbb
clc
adc
mov
mov
and
fs
stc
into
jbe
or
push
jl
or
je
push
inc
rcr
rcr
pop
xchg
mov
call
adc
mov
or
test
lock
sbb
shl
mov
mov
push
pop
movs
push
jno
sahf
jmp
pop
or
call
std
mov
das
mov
and
and
je
push
inc
outs
pop
sbb
fiadd
jbe
and
push
(bad)
mov
push
add
inc
mov
sbb
pop
call
fidivr
push
pop
or
test
in
dec
mov
push
test
and
pop
(bad)
fcom
add
add
rcr
or
or
out
cmp
add
les
sbb
mov
clc
xchg
pop
or
mov
gs
pop
(bad)
les
and
push
push
shr
and
push
mov
test
gs
lea
in
pop
cmps
mov
add
test
fwait
jno
mov
dec
inc
and
sub
rol
sahf
and
faddp
sub
retf
(bad)
and
fmul
jo
cmp
sar
and
fdiv
in
push
mov
xor
imul
xchg
(bad)
rol
loopne
adc
retf
mov
test
(bad)
sub
or
sub
inc
jo
pop
aam
popa
in
mov
jnp
sbb
out
pushf
inc
adc
sub
add
sbb
data16
pop
jo
ror
stos
js
jecxz
pop
rol
mov
cmp
fnclex
and
add
fstcw
push
and
sbb
hlt
xor
shl
dec
mov
push
push
mov
pop
adc
or
int3
hlt
or
pop
or
and
imul
adc
das
js
pop
or
fstp
sbb
fsub
or
jmp
adc
out
popa
imul
ja
fs
clc
loope
inc
lock
je
sbb
je
aam
scas
push
je
push
inc
sbb
sub
pop
and
or
push
pop
and
int3
mov
push
push
push
xor
jge
inc
or
inc
test
cmp
movs
mov
sbb
sbb
test
sbb
jne
add
xchg
xor
jg
cmps
mov
inc
push
xor
xor
(bad)
fistp
sbb
adc
cmp
mov
dec
mov
dec
sbb
or
sub
mov
lea
lods
add
add
inc
add
push
stc
test
fmul
inc
push
test
push
sbb
test
icebp
adc
mov
jne
or
xor
and
test
test
mov
add
jbe
xor
add
add
mov
add
mov
cmp
fild
push
and
mov
(bad)
je
lea
imul
and
pop
fdivr
mov
inc
inc
dec
repz
cmp
adc
mov
cmp
mov
mov
xor
mov
push
add
dec
mov
inc
js
xchg
mov
inc
jo
pop
push
movs
ret
mul
arpl
lahf
shl
mov
push
mov
stos
inc
dec
push
sbb
cmp
xlat
dec
jns
es
push
icebp
jmp
push
clts
ins
mov
pop
or
lock
aam
ret
and
push
pop
jl
add
jp
pop
aam
push
fisubr
xor
or
cmp
sbb
bound
push
xor
pop
das
(bad)
mov
test
sub
or
sbb
push
adc
(bad)
pop
inc
mov
adc
mov
and
add
mov
add
pop
add
or
mov
sub
add
fidiv
dec
scas
and
adc
dec
mov
mov
into
and
pusha
lock
sbb
inc
in
ret
ret
mov
div
leave
xchg
pushf
sbb
cwde
add
push
xchg
adc
push
(bad)
push
pop
imul
dec
pop
inc
sbb
xchg
mov
mov
pop
cmp
or
in
ficom
sub
xchg
adc
ja
stos
sbb
fisttp
retf
add
dec
pop
loope
adc
xchg
pop
xchg
mov
xchg
and
jmp
mov
mov
jo
sub
xor
push
adc
test
mov
(bad)
jne
call
mov
push
rcl
pop
or
cmp
ja
sbb
imul
or
adc
pusha
add
in
outs
test
mov
and
mov
push
lea
mov
add
or
movs
fucom
fwait
pop
sub
pop
out
iret
inc
pop
(bad)
adc
addr16
adc
shl
inc
pop
dec
pop
adc
mov
dec
test
ss
push
ins
rcr
jge
push
and
mov
xor
sub
jl
clc
call
ret
aam
xchg
nop
rol
loopne
clc
mov
gs
jo
mov
push
dec
sbb
mov
push
cmps
and
mov
in
rcr
repz
rcl
mov
(bad)
jo
xchg
stos
mov
pop
and
and
sbb
xchg
rol
or
test
xchg
dec
movsx
sub
xor
out
push
jb
inc
adc
mov
sbb
nop
es
jp
sbb
pushf
pusha
call
in
mov
push
dec
jns
jmp
lock
cmp
mov
enter
adc
adc
push
sar
sbb
push
or
adc
outs
sbb
and
push
popa
nop
(bad)
and
push
cmp
dec
inc
test
popf
cmp
inc
lods
sub
pop
test
push
push
or
jo
jbe
pop
jae
das
jecxz
bound
mov
jmp
dec
inc
mov
lock
jmp
nop
inc
in
adc
pop
jge
mov
xor
xchg
sub
fadd
js
push
dec
loope
inc
loopne
lahf
add
outs
lea
cmp
sub
push
pusha
mov
push
(bad)
jmp
int3
adc
stos
or
dec
cli
cmp
(bad)
push
fdivr
adc
lock
sbb
or
push
lar
and
jmp
inc
jmp
clc
cli
popf
push
leave
in
sub
mov
dec
pop
or
add
xor
ret
and
push
inc
adc
pusha
cld
jl
or
data16
and
das
or
mov
and
nop
inc
adc
adc
cmp
mov
adc
inc
inc
push
adc
imul
adc
dec
enter
iret
or
pop
pusha
inc
lods
jne
test
cli
jne
lea
clc
enter
dec
leave
or
mov
xchg
pop
dec
rcl
xchg
mov
mov
jno
ins
inc
push
cli
push
cmp
sub
dec
or
cld
inc
add
ret
jne
jbe
(bad)
sub
int
pop
add
into
mov
pop
cmp
arpl
xor
and
sbb
or
or
dec
out
xchg
lock
(bad)
mov
aaa
xor
outs
ins
in
push
dec
add
xchg
test
mov
add
enter
pop
inc
mov
shr
cli
js
loopne
or
and
add
js
in
jnp
pushf
push
call
sub
inc
sbb
dec
pop
add
sub
(bad)
sbb
jb
fcmovnb
rcl
(bad)
or
xor
push
push
mov
sahf
ja
mov
push
mov
push
add
add
mov
rcl
movs
cwde
cli
cmp
ja
cmp
lods
jg
jl
jae
push
ror
test
sbb
push
xchg
aaa
xchg
out
and
jb
sub
out
jmp
jne
fisubr
test
leave
fist
in
push
fnstcw
xchg
mov
fld
mov
push
add
add
dec
lahf
or
cs
movzx
jle
int
add
out
sar
cmp
out
push
push
add
fmul
dec
add
xchg
cmp
aam
loopne
(bad)
and
clc
or
add
sub
popa
add
arpl
xor
(bad)
push
scas
sbb
les
sbb
lea
add
inc
test
or
push
lea
mov
fsub
stos
sub
cmp
pop
sar
mov
sub
ret
jns
call
cmp
xor
stos
jg
push
fmul
test
inc
add
adc
jnp
ins
mov
jmp
cmp
xor
mov
loope
out
rol
xor
lods
push
xor
mov
test
arpl
xchg
inc
pop
sub
das
rcl
enter
sub
daa
or
adc
dec
inc
aam
fdivr
or
dec
mov
adc
cli
add
das
sub
icebp
fs
push
test
out
add
cmp
inc
sbb
not
and
cdq
jae
or
les
xchg
inc
hlt
test
dec
mov
(bad)
xor
in
retf
and
adc
popa
ret
jne
and
add
aas
cmp
mov
xor
dec
das
or
inc
(bad)
sahf
push
inc
test
jl
mov
lea
xor
sub
stc
clc
or
xchg
push
pop
adc
xchg
cmps
mov
sbb
inc
sbb
adc
fadd
add
loope
movs
pop
adc
inc
adc
in
sub
sub
xor
(bad)
adc
lock
jo
xor
xor
cwde
mov
pushf
add
adc
adc
xchg
add
mov
cdq
iret
sbb
jp
jle
sub
add
jmp
pop
pop
xor
and
or
cmp
jae
out
cdq
outs
ret
ins
xlat
jbe
sub
inc
pusha
imul
adc
movs
cdq
sbb
inc
and
xor
icebp
mov
jbe
add
pop
clc
ficomp
dec
xor
sbb
popa
push
add
add
cmc
fist
push
pop
cmp
xchg
cmc
jmp
push
call
cmps
fsubr
and
fadd
push
imul
add
or
cmp
lods
push
add
xor
pop
sbb
pop
mov
leave
sbb
jmp
adc
lock
dec
sub
retf
hlt
add
xchg
jb
mov
add
jb
xchg
push
jle
mov
mov
movq
mov
nop
sti
imul
sbb
test
ret
dec
popa
xchg
sbb
pop
xor
adc
mov
scas
jno
fidivr
or
or
bound
adc
pop
fisub
or
out
adc
pusha
mov
push
xchg
test
adc
adc
sub
mov
cmc
push
rcr
push
lock
call
hlt
add
loope
shl
es
mov
aam
mov
push
test
adc
jno
push
rcr
fcomp
fld
mov
(bad)
imul
pop
clc
ret
xor
int
xchg
cli
rol
pushf
lods
out
movzx
je
mov
sbb
mov
sbb
je
adc
out
cmps
cs
push
inc
inc
adc
hlt
icebp
movs
add
fld
dec
dec
cmp
inc
or
or
add
or
gs
sar
adc
mov
or
push
fstp
sahf
in
(bad)
ins
(bad)
cld
pop
out
addr16
div
inc
mov
inc
sbb
std
in
pop
xor
mov
iret
outs
inc
popa
cmp
cvttps2pi
mov
pop
aad
pop
js
adc
inc
or
sub
push
mov
or
mov
call
jecxz
and
or
add
adc
pop
(bad)
inc
jne
mov
jmp
sbb
push
(bad)
inc
pop
sahf
sar
ret
mov
mov
repnz
jne
dec
sbb
inc
dec
cwde
add
and
mov
gs
inc
mov
mov
or
mov
cmps
pop
add
add
add
xor
test
enter
adc
add
inc
add
mov
ins
cdq
es
xchg
push
lods
mov
nop
add
add
mov
lods
add
inc
outs
mov
pop
xlat
push
mov
pop
add
mov
xor
push
add
call
jg
cmp
(bad)
jge
add
inc
arpl
adc
gs
mov
lods
es
mov
repnz
adc
inc
call
dec
cmp
inc
sub
add
retf
mov
pop
and
sbb
xor
jnp
jne
xchg
jl
inc
popf
jnp
inc
sbb
adc
pushf
aad
sbb
sbb
lds
dec
cmp
pop
nop
sub
mov
test
push
mov
pop
je
test
sbb
push
in
xor
jo
xchg
arpl
call
jns
sbb
in
xchg
nop
cmp
test
mov
inc
add
mov
mov
add
add
jg
neg
ret
ret
lea
jecxz
and
aaa
add
dec
or
lea
mov
sub
push
daa
mov
add
xchg
sahf
fsub
es
mov
loopne
fwait
aaa
and
push
push
fdivr
(bad)
je
cmp
or
in
add
in
sbb
mov
mov
dec
sti
add
xchg
and
cmp
in
fsubr
cli
(bad)
dec
enter
fadd
or
cmp
mov
std
add
jne
and
enter
aas
dec
add
ins
mov
push
mov
fcom
xor
xchg
mov
nop
mov
test
mov
xchg
mov
and
in
pause
das
add
jae
lea
mov
mov
nop
inc
push
loopne
rol
in
inc
add
es
fdivr
cmp
dec
fdivr
(bad)
cmp
in
in
clc
(bad)
in
sub
shl
add
enter
mov
dec
push
dec
mov
pop
cmp
jge
pop
xor
je
fdivrp
je
add
ds
cs
add
add
or
add
and
hlt
and
mov
xchg
pop
ror
movs
push
pop
cmps
mov
jnp
retf
cld
cmp
out
(bad)
cmp
add
mov
mov
mov
je
cmp
pop
ins
mov
movs
xchg
jb
xlat
cwde
xor
cmp
xchg
mov
mov
jmp
mov
add
fsubr
push
mov
(bad)
push
je
mov
jecxz
mov
jbe
(bad)
add
xchg
pop
add
aaa
fsubr
rol
fs
nop
mov
iret
push
bound
call
pminsw
jns
pusha
mov
js
xchg
add
cmc
ror
test
dec
push
or
test
and
mov
test
push
sbb
xchg
dec
(bad)
push
inc
cdq
adc
ja
scas
jbe
push
inc
or
sub
jmp
xchg
inc
fsubr
push
sub
or
jne
adc
(bad)
push
call
in
ds
lods
sub
clc
dec
cmp
cmp
pusha
movs
pop
jle
add
sub
add
loopne
loopne
clc
adc
jle
iret
xor
stc
rol
nop
sbb
rcl
mov
push
pushf
ret
jae
jmp
push
cmps
xchg
jnp
push
inc
lods
or
jl
cmp
dec
enter
ret
test
test
xchg
xchg
cmp
push
adc
gs
jecxz
sbb
or
in
pop
add
push
ss
pop
push
push
jmp
xchg
dec
mov
pop
shl
and
xchg
retf
cmp
out
pusha
aam
je
inc
jns
mov
fist
push
xor
imul
adc
or
or
les
scas
popf
in
mov
xchg
clc
aam
fadd
out
mov
jae
cmp
test
sti
mov
push
add
mov
leave
test
or
or
add
add
rcr
test
sti
imul
mov
pop
mov
cmc
xor
iret
sub
add
sbb
cmp
or
aam
cld
inc
and
(bad)
sbb
gs
sub
popf
pop
or
not
add
cmp
or
adc
nop
sbb
add
mov
adc
lea
mov
sbb
arpl
bnd
xor
sub
mov
cmp
xchg
hlt
out
sbb
or
stc
shl
push
enter
je
and
clc
movs
adc
aaa
pop
clc
sti
loope
ins
jbe
mov
cmps
pusha
sub
imul
adc
and
dec
ss
xor
sbb
xor
cmp
fisub
adc
pop
xchg
data16
mov
ret
imul
je
clc
cmps
dec
movs
mov
push
(bad)
shl
leave
imul
stos
jo
ins
shl
das
add
sbb
xchg
cmp
or
aam
dec
out
fiadd
nop
push
xor
fnsave
in
in
sti
nop
hlt
sti
adc
test
int3
leave
clc
sti
enter
aaa
shl
das
mov
sar
jmp
ds
mov
sub
add
mov
sub
test
es
pop
rcr
push
sub
retf
hlt
pop
push
mov
push
inc
test
or
dec
sub
push
addr16
ins
cmp
sbb
imul
loope
sub
dec
cmp
push
add
dec
retf
ss
pushf
and
cmp
inc
or
inc
adc
fwait
sbb
or
and
test
iret
xor
pop
jno
setp
hlt
mov
inc
jmp
mov
movs
cmps
mov
(bad)
cmp
stos
xor
mov
adc
jns
movs
sbb
push
pop
leave
xchg
xchg
dec
cli
loop
jmp
or
clc
sti
call
pusha
nop
sti
xor
and
ins
jno
sti
push
sbb
(bad)
sti
adc
loopne
lds
jecxz
stos
cmp
adc
adc
jne
outs
arpl
sti
sbb
push
push
cmp
repnz
mov
sti
cmp
adc
ror
sahf
add
lock
lock
int
pop
pop
push
sti
inc
cwde
xor
mov
fstp
dec
sub
in
(bad)
clc
sti
jecxz
sti
rol
das
movs
push
ins
sub
sub
sti
neg
dec
jne
mov
sti
inc
test
ds
adc
sub
outs
aam
or
sti
addr16
outs
leave
sti
in
ret
mov
push
sbb
cmps
data16
push
and
retf
fild
jns
fistp
sbb
inc
push
mov
push
pop
push
inc
pop
aaa
int3
xchg
push
sub
outs
dec
sub
and
cdq
dec
push
jb
hlt
sti
hlt
sti
clc
sti
or
cdq
mov
mov
sbb
mov
call
jb
xchg
sti
test
leave
clc
sti
in
sti
lock
pop
push
shl
aad
cmp
loope
adc
jmp
dec
jne
lods
rcr
cmp
rcl
gs
sti
sub
sub
push
sub
loopne
sub
fcom
inc
sub
xchg
cdq
sub
sub
stc
pushf
mov
sti
loopne
add
and
sti
pop
xor
xchg
jne
dec
jns
clc
sti
pop
call
jne
pop
add
lds
(bad)
call
(bad)
pushf
push
rcl
adc
pushf
mov
test
mov
mov
cmps
cmps
loopne
repnz
ins
and
pushf
adc
jl
test
cmps
sti
sti
icebp
clc
or
sti
ins
mov
ror
cmp
sbb
inc
js
add
or
mov
mov
push
call
mov
sub
push
or
repz
out
sahf
push
popf
test
cmc
inc
mov
mov
xor
inc
jecxz
loopne
stc
gs
push
pusha
push
ss
pop
les
je
jmp
jns
xor
dec
sbb
cmc
mov
xor
add
jl
fdiv
dec
scas
call
push
adc
nop
mov
mov
mov
push
sbb
push
pop
ret
in
xchg
add
arpl
in
shr
rcr
pop
nop
ret
xor
popa
sbb
jno
hlt
mov
adc
xor
adc
mov
in
cmp
mov
xor
retf
push
call
das
add
inc
add
xor
ud2
push
retf
ret
test
rcr
push
and
dec
xchg
sub
and
repz
sbb
pop
jmp
enter
and
dec
cwde
add
mov
push
dec
cmps
adc
add
adc
test
push
sahf
inc
pop
fnstcw
adc
push
mov
mov
sti
jbe
cmp
arpl
mov
(bad)
call
push
fisub
lea
or
pop
hlt
lahf
or
clc
mov
cmp
je
test
fdiv
pop
ret
inc
mov
push
jb
rol
or
repz
jmp
and
add
add
movlps
sbb
ret
pop
or
or
mov
es
iret
dec
inc
sub
adc
add
fld
je
push
sbb
or
sub
push
mov
out
test
pop
call
add
ror
push
or
xchg
inc
inc
ficomp
imul
inc
rcl
cmp
adc
push
retf
(bad)
adc
cmp
sbb
arpl
jne
add
and
jne
push
je
cs
mov
inc
xor
pop
or
nop
push
ret
invd
cmp
jle
jne
or
or
xchg
inc
dec
cmp
inc
aaa
sbb
mov
hlt
aaa
adc
lods
jne
daa
cmp
and
addr16
loope
push
and
add
push
iret
add
sbb
retf
call
inc
and
sahf
push
test
ret
ffree
ss
jg
mov
or
mov
pop
add
cmp
mov
add
push
aas
or
in
or
and
shl
add
adc
sbb
lock
mov
push
push
add
cmp
leave
sar
and
iret
inc
push
lea
stc
lock
xor
sbb
adc
dec
push
cmp
and
aam
movs
push
popa
sub
cmp
push
adc
fimul
inc
adc
add
or
add
in
push
in
mov
test
cmp
movs
and
mov
adc
pusha
sbb
inc
add
mov
adc
mov
sbb
dec
stos
imul
or
out
(bad)
jnp
fsubr
or
jge
dec
retf
or
in
icebp
cmp
cmp
inc
add
sbb
push
int
add
adc
push
inc
pop
cmp
in
mov
sahf
neg
gs
sub
xchg
adc
cmc
fimul
push
or
imul
dec
jp
je
or
loope
movs
pxor
fs
add
sbb
mov
dec
mov
inc
inc
mov
int3
pop
sar
add
fcomp
adc
lahf
shl
pushf
xor
sbb
clc
push
or
mov
dec
add
or
jmp
xor
icebp
or
xor
sub
add
movs
lods
pop
or
mov
push
push
add
adc
(bad)
in
in
sbb
and
lds
fsub
inc
loop
sub
jne
and
nop
fmul
cmp
adc
add
(bad)
fcmovnu
sub
sbb
xchg
aas
jmp
stos
or
or
bound
and
stos
jmp
or
push
mov
ror
xchg
dec
setg
xor
sub
push
(bad)
jecxz
dec
loopne
push
movs
cmp
mov
sbb
jp
lock
sub
sbb
cmp
push
das
fiadd
add
xor
adc
jne
push
ds
sbb
(bad)
and
mov
(bad)
adc
out
stc
add
inc
mov
hlt
sbb
xor
adc
mov
inc
mov
dec
mov
pop
out
adc
jns
neg
es
jmp
pushf
push
fisubr
ret
or
xor
idiv
add
or
add
and
push
outs
dec
xchg
nop
and
inc
and
lds
sub
dec
cmovnp
dec
loope
xchg
add
adc
ins
push
mov
push
das
outs
jle
mov
jbe
and
dec
cmps
sbb
xor
mov
aam
add
sub
lahf
adc
or
cmp
xor
add
add
data16
cdq
xor
pop
aaa
rcr
(bad)
jmp
gs
test
movs
xor
mov
mov
inc
sub
shl
mov
sbb
pop
mov
and
fadd
xor
adc
sbb
cld
xor
mov
or
lods
movs
ret
jmp
pop
in
and
cmp
sub
adc
push
push
xor
inc
push
lods
mov
mov
mov
and
call
add
retf
pop
inc
jmp
add
lea
ret
rcr
and
pushf
sbb
xchg
add
jl
sar
test
data16
push
xor
enter
dec
and
add
inc
dec
sbb
sbb
je
stos
jmp
loope
xor
leave
and
add
cmps
(bad)
push
ror
and
or
sub
or
je
jo
dec
sbb
mov
mov
inc
neg
sbb
jecxz
and
mov
or
arpl
add
pop
cmp
xor
and
cmp
(bad)
(bad)
data16
mov
adc
add
or
(bad)
or
or
ja
sub
jp
retf
lahf
sub
adc
sub
sbb
mov
loop
into
add
lock
mov
test
adc
adc
cmp
add
int3
inc
icebp
lahf
jo
pop
hlt
shrd
push
cmp
cmp
or
enter
jl
cmps
clc
sub
jb
mov
or
cdq
nop
pop
dec
inc
ds
jnp
mov
jmp
cmp
js
add
test
outs
cmp
loop
mov
inc
call
jb
fs
mov
ins
add
pop
adc
dec
or
lock
or
jo
inc
sbb
shl
out
and
jp
pop
icebp
ins
xchg
icebp
sbb
js
lock
jb
push
sub
or
loope
gs
fidivr
ror
pop
clc
repz
adc
adc
cmp
ror
shl
dec
neg
jg
lods
jb
mov
fs
dec
inc
dec
pop
xor
pop
or
or
cwde
push
cmp
nop
add
daa
mov
and
xchg
jne
fadd
cmp
jmp
pop
adc
aas
scas
mov
fmul
and
xor
jp
xchg
aam
les
loop
mov
(bad)
jb
pop
jl
or
mov
and
sub
and
int3
adc
or
or
stos
rcl
dec
sub
add
jo
fwait
add
push
mov
mov
pop
nop
push
or
xor
enter
mov
xor
sub
call
push
test
movs
pusha
xor
mov
or
dec
je
push
jb
inc
xor
repz
cmp
es
retf
jbe
mov
aam
and
rcl
cmp
mov
or
enter
rol
pop
ins
cmp
xor
jl
sub
pop
xor
sub
or
add
pop
inc
jo
mov
push
in
dec
hlt
inc
rcr
into
mov
mov
sbb
jns
or
jo
jge
jmp
out
clc
gs
or
pop
data16
and
xchg
push
mov
popa
je
or
fld
sbb
test
ret
shl
movs
jmp
cmp
inc
and
ret
mov
adc
js
sub
cmc
dec
stos
scas
inc
cmp
sbb
cmp
aad
fstp
popa
jbe
lahf
cmp
fmul
ins
push
pop
clc
fstp
or
adc
fs
movs
mov
jnp
pusha
leave
mov
ret
ret
int
fsqrt
(bad)
jge
xor
mov
shl
sub
mov
mov
xor
add
shl
fwait
adc
gs
inc
push
cmps
add
add
cmp
inc
inc
add
xchg
jae
push
pop
inc
push
jno
sub
add
call
sub
adc
sbb
jmp
xor
pop
mov
std
add
out
jo
pop
inc
das
lods
mov
add
or
jne
sbb
push
or
and
adc
sbb
scas
push
sbb
test
xor
pcmpgtw
push
sub
mov
push
gs
xor
add
icebp
iret
lock
sbb
pop
adc
mov
mov
sbb
ins
loopne
ret
pop
mov
clc
ja
std
jbe
jne
adc
jmp
sub
inc
loopne
pop
sbb
push
xchg
push
hlt
xchg
aam
cmp
add
lods
jge
push
rcr
scas
ss
pop
sbb
adc
cmp
and
adc
sbb
push
add
test
sub
mov
fcomp
dec
xor
inc
inc
dec
pop
xchg
mov
inc
sub
add
shl
or
bound
pop
or
das
mov
sub
xor
fmul
sub
xchg
(bad)
ins
push
(bad)
lods
mov
jne
cs
jmp
pop
push
and
ins
lock
inc
inc
inc
inc
int3
pop
or
lea
xor
ss
dec
cli
cld
imul
push
inc
and
stos
iret
sbb
add
sub
ins
or
add
dec
(bad)
outs
cmps
or
and
loopne
and
ficomp
add
int3
rcr
retf
cmp
enter
add
cmp
in
add
push
stc
sub
pop
scas
push
pop
sub
ror
sub
adc
data16
cmps
test
cmc
or
sahf
or
lods
mov
sti
xchg
sbb
push
movs
retf
add
push
xchg
pop
mov
add
lods
pop
adc
dec
inc
sub
in
rol
rcr
loopne
add
cdq
push
call
ror
nop
sub
or
mov
push
sub
cs
push
add
or
cli
cmp
mov
jecxz
push
or
ins
or
jg
add
fwait
xchg
add
cmc
sub
cmp
or
xchg
sbb
push
out
pop
cmp
jle
je
mov
dec
cmp
sbb
push
adc
mov
sub
outs
enter
jl
addr16
cmp
cmps
add
js
dec
inc
push
repz
mov
push
push
dec
and
fisttp
retf
push
mov
aam
fsub
in
dec
add
push
add
push
lods
ror
inc
push
dec
ror
sub
add
rol
dec
jno
add
or
push
cld
mov
sbb
dec
rcl
adc
sbb
repnz
add
rol
dec
inc
enter
ss
push
and
and
xor
lods
mov
push
repnz
push
sub
add
push
add
mov
in
sub
in
shl
fcom
das
test
adc
adc
sti
cmp
inc
jo
jecxz
or
jge
mov
aas
mov
push
mov
mov
pop
lahf
fisub
cmp
cs
xlat
push
out
and
dec
xor
(bad)
call
cmp
sbb
add
imul
call
mov
jge
pop
retf
rol
nop
mov
and
mov
pop
shl
shl
retf
mov
jo
jle
out
adc
or
ja
add
jmp
and
jb
sbb
data16
sbb
and
push
clc
fdiv
inc
sbb
iret
add
add
repnz
es
pop
sub
inc
inc
inc
mov
aas
in
je
clc
cld
jmp
mov
xchg
dec
inc
xchg
adc
or
dec
in
mov
dec
dec
scas
nop
xchg
retf
dec
dec
cld
cld
jmp
push
addr16
into
sub
or
dec
adc
xchg
fcom
jnp
pop
inc
inc
out
add
ror
lock
cmp
repnz
les
pop
mov
cmp
push
mov
(bad)
xor
jae
push
(bad)
mov
dec
inc
mov
adc
xor
sbb
gs
jmp
gs
cdq
adc
shr
adc
je
inc
test
inc
xor
dec
sbb
fwait
and
aas
int3
test
cli
imul
arpl
enter
aaa
js
or
inc
movs
cmp
and
and
push
dec
and
dec
retw
pop
mov
sub
je
pextrw
pop
jno
push
mov
cld
je
enter
clc
cmp
and
sub
dec
or
and
(bad)
push
or
add
add
(bad)
mov
out
adc
js
or
sbb
sti
add
xchg
dec
stos
cmp
xchg
cmp
pop
ins
add
jl
xchg
inc
mov
enter
nop
fstp
adc
dec
inc
mov
sub
push
lea
bound
dec
mov
pop
cmp
pop
add
rol
adc
jns
dec
or
inc
lea
lahf
xchg
nop
jo
sub
test
push
pop
or
inc
mov
nop
cmp
loop
rol
hlt
add
jmp
add
mov
ins
aam
cli
out
mov
out
mov
inc
fsubr
fidiv
test
fisttp
adc
or
jb
sbb
sbb
gs
iret
dec
cmp
ds
(bad)
inc
jae
dec
loopne
ds
add
outs
and
and
pop
fsub
xchg
mov
push
ja
enter
or
inc
mov
aaa
fadd
sti
cmp
dec
dec
stos
inc
aas
or
test
mov
(bad)
js
dec
sbb
aam
xor
push
sbb
cmp
mov
movs
in
sbb
xor
lods
inc
adc
daa
dec
test
sub
lea
and
call
loopne
popf
je
mov
and
xor
and
sar
out
push
or
and
or
icebp
jne
shl
out
push
mov
jl
inc
popa
test
add
pop
sub
cmps
and
xchg
mov
cmp
mov
push
mov
jge
popa
pop
iret
int3
mov
pop
hlt
test
rcl
inc
and
rol
push
lea
in
mov
sbb
cmp
invd
sub
sahf
or
pop
pop
dec
inc
icebp
xor
pop
add
or
lock
sub
mov
mov
inc
clc
and
lea
clc
or
jl
or
push
inc
sbb
or
sbb
dec
stos
ss
pop
push
add
loopne
add
push
into
das
sbb
out
mov
jl
loopne
into
push
out
and
inc
enter
sub
inc
lock
mov
jge
sbb
nop
add
scas
ss
js
ror
add
fnstenv
cmp
add
add
mov
outs
pop
push
call
and
mov
or
stos
xchg
jns
pop
inc
ror
adc
xor
inc
inc
xor
sbb
cmp
inc
shl
sub
or
and
inc
inc
shl
enter
and
mov
sti
cmps
add
mov
inc
test
nop
imul
bound
call
mov
test
pushf
add
imul
mov
mov
or
xor
dec
int
dec
xchg
fcomp
mov
test
jmp
xor
nop
enter
cmp
test
push
nop
neg
mov
sub
add
ja
into
dec
jmp
fs
(bad)
ffree
mov
stc
cmp
push
cli
xor
pop
jmp
dec
call
or
test
or
mov
into
jmp
test
jmp
cmps
inc
and
test
sti
sub
and
neg
inc
jle
jle
cmp
or
inc
movs
push
xor
sub
or
mov
push
mov
rcl
mul
jne
xchg
jne
push
sub
cmp
call
dec
mov
icebp
or
cmp
sbb
cli
mov
ret
dec
inc
mov
movs
jmp
mov
inc
fisttp
push
pop
jge
(bad)
pop
fstp
test
nop
add
jne
pop
add
je
jmp
mov
mov
xchg
aad
cmp
lds
mov
fiadd
lock
outs
add
mov
lods
mov
pop
push
sub
fucom
adc
gs
or
pop
and
mov
and
mov
xor
mov
mov
mov
mov
je
mov
data16
push
xor
sub
je
cmp
ret
add
inc
test
loope
ins
pusha
fiadd
sub
xor
or
popf
jmp
cld
retf
push
rcr
pop
loopne
lods
dec
dec
lock
cmp
sub
or
jecxz
mov
ret
pushf
jmp
push
cwde
pop
mov
mov
xor
mov
dec
lds
(bad)
fwait
out
xchg
les
or
pop
or
xor
adc
push
add
dec
adc
outs
call
(bad)
in
or
cmp
mov
repnz
mov
push
pop
sbb
ins
pusha
jp
cmp
mov
enter
sub
nop
xor
loope
rol
les
sub
and
add
add
into
cmp
sbb
fs
aas
or
in
pop
pusha
mov
lea
movzx
mov
push
gs
fadd
mov
mov
push
xor
and
and
jne
and
shl
mov
mov
mov
mov
or
mov
mov
pop
mov
pop
mov
mov
test
hlt
jne
cmp
or
jne
ins
xchg
push
test
inc
inc
or
jae
mov
push
hlt
int3
add
jne
fadd
lock
mov
test
loop
push
mov
test
rol
dec
(bad)
pop
mov
or
les
pusha
or
movs
fwait
adc
jl
repnz
call
lock
cs
add
fcmovbe
in
mov
js
sub
call
inc
cmc
jnp
data16
(bad)
stc
jg
add
xor
(bad)
js
mov
adc
aam
out
jb
push
lods
add
or
inc
test
add
aam
rcl
xchg
add
clc
mov
jg
or
adc
inc
mov
and
add
test
data16
inc
pop
sti
(bad)
ja
shr
shl
shr
or
mov
sahf
dec
mov
aam
shr
ret
inc
mov
push
or
cmp
ja
aam
inc
and
mov
mov
(bad)
cmp
push
add
ficomp
sar
fwait
loopne
mov
fidiv
in
fiadd
push
call
sub
push
fidiv
shl
pushf
ins
inc
dec
outs
push
fadd
test
dec
fs
adc
ja
dec
pop
and
sbb
cmp
or
xor
(bad)
stc
mov
loop
retf
into
jmp
scas
les
dec
xchg
mov
(bad)
adc
test
out
imul
jbe
sbb
xor
inc
sub
retf
xor
loopne
xchg
test
sbb
push
fisubr
movups
sar
add
rol
call
add
ss
add
inc
add
mov
inc
pop
pop
repz
out
aad
or
cmp
addr16
mov
add
mov
nop
and
add
scas
add
jbe
popf
mov
xor
pop
xor
xor
enter
ret
add
sub
jo
sub
jge
ret
dec
fdivr
adc
cli
fadd
xor
out
pop
mov
pop
(bad)
xchg
xor
pop
xor
add
cmp
cmp
push
add
sub
or
test
or
into
inc
inc
adc
inc
stos
nop
rcl
lods
popa
and
adc
dec
push
ja
mov
loop
fld
jl
cmps
add
test
fadd
sbb
ja
(bad)
out
xor
sbb
(bad)
cmp
or
jmp
movs
mov
cmp
lock
jl
cmp
jmp
in
xor
cmp
je
(bad)
sbb
and
and
xchg
adc
mov
addr16
or
jecxz
sbb
inc
push
push
pop
push
push
push
add
mov
iret
jle
stos
sub
fldenv
pushf
scas
xchg
jo
test
adc
sbb
call
adc
inc
pop
push
adc
xlat
(bad)
adc
push
(bad)
jmp
push
loopne
dec
dec
add
lock
jbe
call
enter
(bad)
iret
xchg
dec
shl
pop
adc
or
out
push
fcmovu
add
shr
or
pusha
pop
clc
rol
leave
add
(bad)
je
dec
bound
clc
mov
pop
or
ins
adc
call
dec
pop
popa
inc
adc
dec
aam
adc
pop
add
jp
cld
movs
and
and
xchg
outs
shl
xlat
and
mov
movsx
add
(bad)
xchg
js
mov
shl
in
sbb
xor
push
shr
in
sbb
test
xor
inc
and
jb
and
sbb
and
dec
sbb
jns
dec
and
xor
sub
pop
int3
cmp
jae
sub
mov
loop
lods
rcl
jmp
and
shr
ret
jmp
jno
push
pop
idiv
and
scas
(bad)
lock
je
dec
idiv
dec
and
shr
mov
jmp
cmps
hlt
sbb
pop
cmps
add
jno
push
xchg
push
xchg
fmul
push
xrelease
push
or
xchg
push
hlt
add
ins
adc
sbb
nop
popf
xchg
sbb
loope
sub
push
aaa
xchg
dec
adc
xor
movs
or
xchg
mov
pop
or
xor
gs
sub
mov
sub
sbb
(bad)
stc
retf
aam
and
adc
jp
inc
sbb
adc
dec
and
ins
or
les
fimul
cmp
sbb
or
push
daa
cmc
push
xor
mov
jp
inc
jp
xchg
or
in
cmp
cmp
dec
mov
aam
mov
jp
adc
add
jbe
and
shr
inc
or
pop
mov
test
push
cs
je
xor
add
mov
xlat
sbb
int3
imul
push
bound
je
mov
jnp
cmp
mov
ins
test
inc
or
daa
lods
data16
cld
push
or
push
push
fiadd
inc
mov
sub
out
in
push
test
test
jb
inc
cmp
mov
adc
adc
push
mov
xor
mov
shl
retf
repnz
in
clc
je
push
and
dec
aam
iret
pop
sar
mov
inc
jbe
cmp
pushf
into
mov
xchg
daa
and
ficom
jb
shl
or
adc
iret
je
mov
cwde
jmp
mov
arpl
add
jmp
add
jbe
imul
or
test
xor
adc
adc
loopne
inc
add
adc
pop
sahf
lock
or
add
loop
in
jns
cmps
lods
push
ror
push
rcl
rcl
out
sahf
out
(bad)
xlat
fcomp
and
movs
int
sti
fstp
push
aas
adc
das
mov
inc
add
jmp
or
push
into
push
lock
das
adc
xor
cmp
cmp
les
dec
aam
ret
ss
add
push
xchg
and
pop
push
lea
sub
mov
pop
add
je
test
mov
push
icebp
adc
push
sbb
into
cmp
in
or
fidiv
sbb
fmul
push
cwde
inc
cmp
add
jo
push
add
sbb
dec
(bad)
js
inc
pop
sahf
(bad)
es
(bad)
out
push
imul
lea
sar
inc
sbb
fiadd
loopne
fsub
pop
neg
call
jmp
or
or
call
pop
inc
push
adc
out
and
add
push
(bad)
cmps
add
cli
test
jp
mov
sbb
enter
cmp
or
push
adc
jmp
inc
add
sbb
(bad)
retf
mov
or
sub
pop
call
(bad)
ja
shl
ds
stc
lahf
adc
fmulp
jne
inc
test
in
jmp
jmp
or
add
adc
mov
jne
inc
rol
movs
rol
cmp
rol
test
fmul
ins
push
lea
inc
(bad)
neg
inc
dec
xchg
mov
or
push
or
test
fmul
jb
inc
sbb
cmp
inc
shl
add
xchg
cwde
pop
dec
xor
mov
mov
cld
inc
aaa
dec
rol
add
sub
pop
aas
mov
and
lock
add
sbb
loopne
cmp
out
mov
mov
push
push
retf
call
rol
test
or
lock
es
test
ins
shr
cmp
mov
ret
out
adc
lods
dec
cmps
es
inc
lods
lock
or
repnz
test
cli
pop
jle
repz
sar
sub
mov
call
hlt
push
jnp
sbb
aad
sbb
(bad)
retf
sub
add
or
pop
sub
pop
test
fnstenv
push
cmp
mov
(bad)
pop
add
inc
mov
lock
dec
cmp
lahf
push
sub
push
sub
loop
out
sbb
cmp
pop
cmp
nop
mov
ret
add
sbb
cmp
mov
enter
adc
inc
push
cmp
fcomp
or
jne
fdiv
mov
cmp
ss
inc
test
dec
cdq
mov
inc
ss
mov
ins
cwde
das
jp
ret
xchg
pop
fcom
mov
push
inc
ds
sahf
out
outs
retf
cld
lea
cmp
fnstcw
movs
xchg
pop
ins
jb
inc
xchg
mov
cmp
das
jge
add
imul
xchg
push
sub
(bad)
imul
sbb
and
enter
lock
xchg
retf
out
or
sbb
fs
jge
inc
shl
add
imul
add
push
stc
movs
push
jne
imul
cmp
xor
push
dec
xchg
adc
mov
scas
pusha
pusha
ja
jp
je
cwde
sub
ins
sbb
ret
scas
mov
inc
mov
sbb
jmp
adc
adc
adc
out
dec
lods
or
push
pop
add
push
jmp
add
or
adc
in
jne
push
sar
ret
cmp
inc
in
sub
call
je
imul
addr16
dec
add
xchg
fsubr
lea
or
add
jp
paddusw
in
les
inc
addr16
cs
dec
xor
cld
and
xchg
mov
adc
push
rol
pop
mov
in
les
in
mov
lea
sbb
push
mov
xor
and
ret
add
lea
mov
cmp
push
pop
nop
cmp
and
sub
test
lods
iret
mov
mul
mov
aas
add
lock
inc
out
in
cmps
add
mov
dec
nop
dec
mov
dec
cmp
jge
js
icebp
dec
sub
cmp
outs
add
dec
cmp
jbe
sub
(bad)
inc
dec
add
and
icebp
add
fadd
pop
add
xchg
or
and
and
hlt
xor
dec
mov
jb
int
jg
sbb
adc
retf
or
mov
mov
add
push
nop
pusha
or
add
add
imul
add
test
xchg
adc
mov
mov
dec
clc
cwde
fcmove
push
mov
push
xchg
jnp
push
je
inc
ret
(bad)
adc
xchg
or
or
dec
(bad)
or
xchg
push
or
add
or
pop
pop
int
pop
pop
scas
add
adc
sbb
or
pop
mov
sbb
mov
mov
push
push
pop
es
or
xchg
adc
or
arpl
ret
es
inc
pop
push
loopne
and
cmp
xor
into
push
ror
pusha
inc
and
dec
jmp
sub
and
pop
pop
dec
mov
push
pop
cmpps
paddq
out
ret
or
scas
inc
add
clc
and
inc
push
pop
jae
or
or
imul
or
xchg
mov
add
cmps
shr
inc
or
mov
mov
and
pop
cmp
pop
mov
adc
xlat
dec
pop
lock
fisttp
push
ins
add
je
ret
mov
jne
and
and
or
xor
pusha
in
ror
iret
jne
add
cmp
scas
push
fdivr
adc
fs
mov
fldcw
and
sbb
cld
cld
test
inc
out
adc
push
stos
jg
sub
int
or
adc
outs
fnstsw
xchg
xlat
adc
in
fxsave
mov
bound
cdq
dec
xor
push
ss
or
add
or
and
add
add
call
into
jle
pusha
pmaxub
mov
xor
inc
jg
test
pushf
cmp
into
into
mov
pop
and
cwde
pop
sub
idiv
ja
pop
nop
pop
cwde
pop
or
add
(bad)
data16
not
and
or
(bad)
pop
or
xchg
jbe
(bad)
fnstcw
inc
push
test
adc
outs
pop
call
add
add
lds
and
or
in
jns
add
add
push
ins
inc
push
and
ret
je
and
mov
or
sub
pop
jo
sub
sbb
retf
cmp
retf
push
xor
jae
cmps
xchg
(bad)
push
sbb
test
scas
xor
jbe
cmps
std
fild
ss
js
arpl
mov
inc
dec
je
pusha
adc
push
pop
pop
nop
xchg
out
and
cdq
imul
xor
cmps
xchg
(bad)
inc
push
sar
hlt
jp
jb
fdiv
or
in
add
sbb
mov
sbb
jp
pusha
out
sbb
mov
xor
nop
pop
pop
pusha
fs
xor
in
inc
mov
jo
js
inc
push
cmp
inc
push
cmp
inc
inc
cmp
mov
aas
push
mov
and
dec
xchg
cvttps2pi
sub
das
add
aaa
mov
cmp
pop
mov
nop
call
pop
and
fld
(bad)
sbb
xor
clc
neg
mov
jns
fstp
icebp
push
les
xchg
push
ins
cmps
movs
(bad)
push
clc
retf
cmp
push
and
adc
(bad)
mov
push
stc
push
add
push
push
cli
shr
mov
sar
and
ret
adc
ret
cmps
dec
jecxz
mov
inc
test
fcom
and
or
and
and
(bad)
ins
inc
or
dec
test
movd
push
dec
jmp
and
push
enter
repz
clc
jae
xor
jle
xor
aam
mov
cli
rcl
retf
dec
cmp
push
jl
and
retf
mov
movq
mov
adc
(bad)
jnp
mov
add
adc
add
or
add
ins
loop
mov
pushf
rol
loopne
add
jnp
add
pop
sub
lds
push
enter
out
sub
sbb
push
push
into
aam
jne
and
inc
pop
dec
in
jmp
mov
xor
je
jb
mov
sbb
sub
push
les
fmul
pop
movs
lods
mov
sub
and
das
or
sub
call
or
inc
xor
dec
ret
sbb
and
adc
sar
cmp
inc
pusha
xlat
div
mov
out
sub
rep
sahf
and
mov
test
xchg
and
inc
lock
stos
add
sbb
push
je
dec
mov
pop
pushf
add
add
mov
scas
mov
pop
pop
pop
or
call
mov
shr
dec
enter
inc
mov
movs
xchg
mov
je
push
or
aam
jp
test
add
cwde
test
or
push
fld
in
push
xor
pop
inc
or
or
arpl
imul
xor
pop
fist
nop
jmp
jno
push
fld
dec
mov
push
mov
mov
je
pop
jmp
add
add
sbb
movs
adc
sti
fldenv
ins
mov
jmp
ins
jmp
jae
lahf
mov
pop
adc
scas
arpl
mov
and
arpl
stc
pop
and
loopne
stos
push
jmp
mov
jno
mov
fst
sub
test
adc
add
adc
jmp
push
cmp
or
enter
fdiv
std
nop
xchg
push
shl
push
xor
dec
mov
mov
and
inc
lock
sbb
fs
jbe
ins
sahf
out
or
sub
std
mov
and
push
scas
(bad)
push
add
cmps
xchg
xor
inc
or
jo
shl
sub
fbstp
fldenv
sbb
mov
sub
sub
jo
pop
push
inc
jge
ins
ins
jnp
scas
jmp
cmps
xchg
jmp
inc
jg
push
dec
inc
dec
in
popa
cli
aad
inc
mov
push
push
add
(bad)
pop
push
push
push
cmp
fst
mov
push
adc
push
dec
cmp
cmp
cld
mov
ins
call
inc
inc
add
dec
cmc
push
pop
cli
jmp
or
add
or
add
bound
(bad)
aas
adc
inc
outs
jb
js
je
jb
arpl
jae
ins
add
arpl
outs
add
add
add
bound
outs
not
push
and
jb
push
dec
dec
push
push
sbb
mov
jne
or
dec
inc
sbb
inc
sti
fistp
and
push
xor
xor
inc
outs
and
jo
imul
pop
outs
push
push
popa
lods
popa
cs
gs
jo
and
mov
lods
fldcw
push
push
bound
xor
mov
imul
je
jns
or
xor
fld
popa
arpl
sbb
pop
mov
pop
xor
and
ins
push
xchg
dec
lock
pop
aas
xor
and
jne
dec
mov
mov
jo
rol
les
out
fisttp
xor
add
fs
xchg
and
jbe
mov
mov
sbb
jp
push
jle
or
and
jne
push
and
daa
mov
in
push
sbb
add
push
sub
mov
adc
ins
and
mov
xor
push
push
daa
sub
fbld
dec
das
arpl
cmp
arpl
jo
dec
popa
sub
in
mov
clc
add
inc
xchg
dec
ins
in
shl
out
xor
int3
gs
push
pusha
or
push
call
adc
popa
and
rcr
push
div
gs
push
fistp
push
je
cs
aaa
scas
or
shl
fidivr
xor
hlt
popa
sbb
cdq
xor
and
mov
(bad)
ja
outs
in
fisubr
jae
rol
jne
jbe
add
inc
inc
xchg
push
scas
ficom
sar
xor
(bad)
sbb
mov
mov
test
jo
xlat
outs
push
outs
mov
arpl
call
bound
push
(bad)
inc
mov
jmp
adc
imul
movs
sbb
imul
lds
jne
stos
pop
cmps
(bad)
rcl
leave
nop
loop
jmp
cmp
cmp
xor
in
xor
add
mov
and
and
or
into
retf
cmp
(bad)
sub
jae
xor
adc
or
je
sbb
popa
or
push
sub
retf
dec
and
sub
pop
dec
jmp
lods
add
cmp
push
and
cmp
out
(bad)
inc
imul
inc
inc
and
pusha
ins
int3
or
dec
cmp
cmp
popa
movs
or
repnz
jb
lea
mov
and
xchg
adc
outs
pusha
fisub
sbb
mul
cld
pop
dec
add
dec
add
add
mov
adc
or
push
inc
gs
ins
jae
gs
imul
je
sub
inc
inc
ins
imul
sbb
ja
ja
fucomi
(bad)
je
das
push
jae
dec
bound
fwait
mov
inc
addr16
mov
je
sbb
in
dec
jo
out
aas
inc
xchg
pop
lea
mov
outs
js
(bad)
jmp
push
add
or
or
push
ud0
(bad)
call
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
(bad)
(bad)
dec
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
mov
and
dec
dec
push
inc
push
push
pop
icebp
aad
pop
pop
pop
pop
pop
test
push
jl
inc
arpl
mov
push
ins
ins
scas
jo
jb
movs
inc
js
jp
jl
jle
add
pop
add
sub
dec
add
jb
push
jb
adc
add
xor
leave
add
(bad)
and
push
add
add
add
add
ins
or
mov
test
inc
adc
fisub
jbe
aaa
add
pop
lods
and
shr
fist
push
dec
add
(bad)
inc
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
(bad)
(bad)
(bad)
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
inc
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
(bad)
(bad)
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
or
and
stos
and
pop
and
popa
push
xor
and
jmp
dec
cmp
cmp
mov
sub
dec
and
jns
add
in
out
call
mov
push
dec
outs
jbe
test
dec
xor
sub
addr16
in
add
fcom
jne
jg
clc
das
std
mov
imul
push
dec
bound
push
inc
popa
outs
adc
std
jg
outs
outs
push
jne
push
gs
push
popa
je
pop
jo
xlat
out
jb
or
mov
shl
inc
(bad)
push
pop
or
in
std
out
dec
dec
inc
push
cs
ins
and
dec
inc
push
dec
xor
mov
les
and
push
push
dec
dec
adc
nop
dec
push
push
and
stc
mov
mov
inc
inc
push
inc
push
push
dec
pop
xor
fiadd
mov
sbb
inc
inc
push
push
and
test
pop
sbb
adc
test
adc
(bad)
(bad)
call
inc
push
ins
ss
adc
pusha
or
popa
push
or
scas
int
adc
out
ror
outs
mov
gs
dec
add
scas
(bad)
lods
(bad)
stc
push
out
call
ds
shl
mov
mov
jle
test
ins
dec
sbb
leave
jmp
push
dec
test
out
test
sbb
mov
xor
pop
or
add
aas
pusha
cwde
out
cmps
and
(bad)
xchg
aaa
add
leave
or
sub
retf
es
fld
sbb
push
stc
push
adc
pop
bound
add
add
push
push
pop
pop
in
je
data16
div
outs
addr16
pop
jns
push
xor
add
daa
shl
sub
ins
outs
fs
push
out
gs
push
arpl
add
cmp
aas
and
fstp
outs
jb
ins
imul
ins
push
je
outs
xor
imul
fnsave
sub
xor
pop
inc
out
mov
cmovs
outs
pavgw
sar
(bad)
jo
fnsave
add
mov
inc
sbb
jb
pop
and
fiadd
test
dec
mov
popf
cmc
and
jecxz
aaa
push
(bad)
not
mov
sub
js
imul
jne
inc
mov
pop
hlt
sub
push
test
loope
jbe
mov
push
add
add
add
jg
xchg
add
and
push
pop
pop
or
aaa
xor
push
mov
in
push
lods
and
or
pusha
push
xor
sub
sub
add
mov
adc
sbb
sub
scas
push
xor
sub
push
cmp
adc
or
test
jns
jae
out
pop
sub
cmp
xchg
pop
daa
fldcw
dec
pop
ds
lds
jns
mov
dec
int
sub
jge
into
pop
cmp
scas
gs
lahf
jae
dec
in
mov
ficomp
dec
mov
dec
pop
mov
pop
xchg
sbb
outs
ins
les
aad
inc
imul
push
imul
ins
(bad)
cmp
repnz
movs
sub
jb
call
outs
es
fs
add
push
in
dec
inc
inc
cdq
dec
pop
pusha
rcr
inc
fstp
sti
outs
and
sbb
inc
sbb
dec
das
dec
pop
and
stos
and
aas
pop
cmp
sub
neg
iret
pop
cmp
fsub
out
jb
div
jne
push
add
cmps
jle
call
ja
lock
fstp
jae
dec
mov
mov
xlat
mov
add
jo
add
push
lock
jae
mov
push
and
lahf
inc
or
jg
add
adc
test
cwde
fs
iret
jo
je
(bad)
je
mov
std
pop
(bad)
fsub
ret
jp
mov
shl
mov
test
add
sub
sub
ins
mov
inc
mov
cmps
pusha
push
sbb
dec
inc
push
push
hlt
pop
int3
dec
inc
dec
out
cmps
mov
fbld
add
push
xchg
or
dec
ret
rol
cmps
mov
daa
push
inc
pop
cmp
push
and
sub
jb
inc
jle
jnp
push
jo
ja
jo
xchg
ja
xor
push
dec
inc
dec
cmovns
add
loope
pop
pop
add
push
push
push
push
outs
inc
clc
xor
push
pop
push
cmp
cmp
pop
push
xor
mov
add
mov
(bad)
(bad)
(bad)
call
mov
dec
inc
rol
pop
hlt
dec
mov
dec
in
repz
jmp
mov
sbb
jne
dec
lods
jg
ins
popf
xor
sbb
ss
inc
fidivr
fs
ror
xor
mov
cs
(bad)
or
and
push
(bad)
mov
push
lldt
add
add
xor
push
pop
mov
add
push
cmp
push
mov
xor
aam
(bad)
adc
adc
jb
adc
adc
push
iret
push
dec
xchg
add
cld
push
cs
push
or
sbb
popa
jle
icebp
call
push
add
push
add
add
adc
sbb
and
add
pusha
pop
out
repz
push
add
sbb
repz
sbb
sbb
cmp
or
out
les
pushf
push
mov
mov
or
(bad)
adc
out
int
jae
pop
push
jo
xor
rol
icebp
cmp
pop
or
pusha
and
jns
add
push
pop
sbb
iret
pop
lock
dec
pop
cmp
cmp
add
iret
repz
pop
adc
mov
mov
iret
repz
lock
jns
out
mov
jecxz
sub
out
sahf
out
fs
add
fnstsw
test
pop
push
sbb
out
(bad)
cwde
add
push
jl
fcomp
pop
(bad)
ins
sub
or
repz
repz
clc
add
iret
repz
mov
or
repz
and
repz
in
pop
sbb
repz
xchg
inc
jp
aam
cmp
repz
sub
repz
hlt
add
or
cmp
repz
jbe
int3
psllq
rep
push
xchg
repz
inc
in
or
pushf
cmp
jle
fcomp
sahf
neg
mov
dec
cmp
push
jl
add
push
(bad)
adc
push
ret
repz
and
jae
cmp
pop
sbb
iret
cmp
imul
iret
or
adc
cmps
jle
add
jne
iret
repz
cmp
gs
repz
inc
jmp
call
iret
ins
sub
leave
repz
cmp
push
adc
repz
cmp
jae
(bad)
arpl
leave
repz
cmps
add
cmp
pop
sbb
iret
leave
(bad)
imul
or
pushf
cmp
mov
push
pop
iret
leave
repz
ja
into
addr16
cmp
repz
pop
xchg
iret
leave
repz
pop
pop
sahf
jg
mov
outs
push
das
mov
ds
(bad)
push
dec
inc
inc
inc
cs
mov
in
shl
icebp
leave
pop
enter
jmp
test
mov
stc
lds
in
aad
pop
jb
mov
pop
enter
lods
in
test
popf
fnsave
pop
enter
pop
jb
pop
mov
jb
shl
repz
stos
test
jmp
leave
test
mov
pop
(bad)
cmps
out
pop
jb
xchg
xlat
pop
and
jb
test
scas
out
enter
lahf
fistp
(bad)
jle
pop
push
fild
sbb
add
adc
adc
add
ficomp
push
add
inc
out
and
add
add
xor
call
pusha
xor
cmps
rol
xor
or
or
mov
lods
dec
push
pop
sub
sub
inc
dec
out
ja
lea
ja
(bad)
call
pop
ja
popa
push
out
mov
ins
pop
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
dec
fdivr
jmp
rcl
jl
jle
sub
(bad)
call
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
inc
test
adc
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
jg
cmc
or
cmp
imul
addr16
add
aam
(bad)
(bad)
(bad)
dec
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
out
cli
inc
or
shr
and
push
adc
push
popa
sar
(bad)
push
cdq
xchg
mov
mov
or
or
and
or
(bad)
jmp
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
pop
mov
push
movs
in
lahf
xor
mov
js
stc
push
mov
(bad)
(bad)
call
push
sub
ins
fs
add
hlt
push
imul
ins
sbb
xor
das
sar
repnz
ins
jnp
add
shl
push
les
cmc
(bad)
(bad)
(bad)
inc
fnstenv
adc
mov
mov
bound
ficom
gs
aam
idiv
outs
clc
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
inc
shl
jmp
outs
xor
mov
sar
add
in
add
pop
(bad)
(bad)
(bad)
dec
leave
jl
fnstsw
add
daa
adc
or
and
test
or
(bad)
(bad)
call
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
(bad)
(bad)
call
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fild
push
fdiv
or
test
fs
ds
or
or
push
in
call
dec
movs
mov
pop
jge
xchg
(bad)
shl
jg
repnz
inc
push
imul
xor
sbb
push
imul
aam
loopne
sar
(bad)
(bad)
dec
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
sar
(bad)
(bad)
jmp
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
(bad)
(bad)
(bad)
jmp
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
mov
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
ret
repnz
(bad)
(bad)
in
pushf
mov
ins
add
ss
jmp
addr16
jb
jl
or
(bad)
(bad)
mov
loop
sub
or
mov
xchg
or
out
fdivr
fisttp
aam
(bad)
(bad)
(bad)
call
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
(bad)
(bad)
call
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
dec
loop
mov
push
add
mov
cmp
cmps
not
pusha
sar
mov
imul
scas
fcomp
fldenv
fild
jmp
scas
mov
fidivr
mov
jmp
add
mov
retf
mov
cmps
mov
(bad)
(bad)
push
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
ja
(bad)
(bad)
mov
or
sbb
add
sub
dec
ss
push
sub
hlt
ja
xchg
(bad)
(bad)
(bad)
inc
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
(bad)
(bad)
(bad)
call
dec
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
(bad)
(bad)
inc
sbb
add
call
out
ins
ins
(bad)
fistp
inc
aam
push
(bad)
(bad)
(bad)
call
mov
adc
mov
popa
ja
mov
out
repz
gs
(bad)
push
(bad)
scas
(bad)
jmp
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
push
(bad)
jmp
sbb
repz
fbstp
push
jo
add
cld
mov
mov
xchg
sbb
xor
pop
nop
sti
mov
and
fisubr
cmp
jns
jae
dec
call
(bad)
jge
lds
sub
pop
xor
inc
jle
jmp
xchg
push
adc
push
(bad)
(bad)
call
lock
or
hlt
mov
or
xchg
lea
or
int3
mov
dec
xor
inc
mov
outs
retf
push
pop
mov
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
les
(bad)
call
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
jecxz
std
gs
out
and
cmp
dec
mov
mov
xchg
call
and
cmps
xor
mov
lods
out
sar
mov
adc
stos
and
(bad)
(bad)
dec
jmp
sti
push
jns
das
mov
and
je
or
repnz
push
dec
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
ss
(bad)
(bad)
dec
call
cmps
test
cwde
cmp
test
mov
mov
scas
adc
(bad)
(bad)
(bad)
(bad)
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
(bad)
(bad)
(bad)
push
xchg
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
(bad)
(bad)
(bad)
jmp
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
lds
cld
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
jmp
stc
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
(bad)
(bad)
jmp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
push
mov
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
(bad)
push
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
(bad)
(bad)
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
(bad)
(bad)
(bad)
jmp
xlat
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
(bad)
(bad)
(bad)
(bad)
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
mov
sub
adc
jns
movs
dec
mov
or
call
mov
mov
in
and
out
mov
or
(bad)
call
cmps
or
jle
xchg
aas
mov
adc
out
sar
(bad)
(bad)
(bad)
push
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
aaa
std
call
aaa
push
add
test
pop
mov
mov
ret
pop
dec
jecxz
mov
adc
dec
add
(bad)
mov
mov
test
or
stc
sbb
inc
cld
or
mov
inc
leave
in
push
ja
pop
sub
(bad)
jmp
in
sbb
fild
sbb
repnz
adc
dec
jae
(bad)
(bad)
(bad)
call
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
(bad)
(bad)
(bad)
(bad)
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
push
std
(bad)
inc
xchg
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
(bad)
call
fsub
leave
pop
sub
and
mov
and
mov
sub
fdivrp
out
cmp
sbb
sub
(bad)
push
lods
mov
call
pop
cmp
xor
jb
(bad)
(bad)
(bad)
jmp
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
fcomip
(bad)
push
xchg
push
inc
js
mov
(bad)
jnp
cs
fdivrp
cmp
mov
es
xchg
pop
in
ja
add
push
or
(bad)
jg
scas
bound
stos
sub
shr
aam
cmps
gs
fs
add
loopne
and
xlat
dec
pop
mov
outs
jns
dec
(bad)
(bad)
(bad)
(bad)
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
bound
cli
inc
inc
jae
cmovo
out
inc
sbb
call
icebp
push
add
push
ds
mov
mov
clc
push
mov
adc
push
aad
mov
(bad)
call
push
and
in
pop
mov
movs
pop
lock
(bad)
jmp
sbb
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
(bad)
(bad)
jmp
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
popa
hlt
pusha
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
call
sar
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
push
jg
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
(bad)
(bad)
(bad)
fst
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
(bad)
(bad)
(bad)
call
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
(bad)
(bad)
(bad)
inc
daa
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
out
cmp
lahf
lds
adc
inc
int3
inc
call
jmp
int
rol
iret
sub
fcom
cs
sub
(bad)
(bad)
(bad)
call
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
add
jmp
mov
adc
xor
(bad)
push
xor
dec
mov
or
(bad)
in
popf
or
(bad)
(bad)
jg
sub
fs
mov
adc
fadd
(bad)
(bad)
inc
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
(bad)
(bad)
jmp
adc
lods
sbb
xor
inc
aas
mov
les
clc
(bad)
(bad)
(bad)
jmp
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
sbb
mov
mov
cmovns
xlat
clc
(bad)
(bad)
(bad)
mov
push
not
xor
mov
ficomp
mov
clc
(bad)
fisttp
xchg
addr16
stos
out
scas
mov
push
xchg
bound
cmps
push
outs
lock
imul
lds
loopne
(bad)
(bad)
(bad)
jmp
xchg
xlat
mov
fsubr
xor
loopne
adc
lahf
push
sbb
xor
(bad)
(bad)
(bad)
(bad)
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
(bad)
(bad)
(bad)
(bad)
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
(bad)
in
(bad)
jg
xchg
in
rol
cmp
pop
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
fsubr
inc
push
clc
sub
les
and
loop
outs
dec
jg
or
call
ret
(bad)
jge
aad
shl
mov
(bad)
lds
xchg
lahf
mov
jg
daa
sbb
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
(bad)
(bad)
(bad)
push
mul
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
cmp
(bad)
call
test
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetch
or
retf
(bad)
push
dec
mov
outs
call
cmc
inc
nop
call
into
data16
sbb
ficom
daa
mov
push
sub
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
es
(bad)
mov
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
push
cmps
in
fist
inc
addr16
fwait
push
add
in
mov
dec
leave
xor
(bad)
(bad)
inc
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
out
cli
(bad)
(bad)
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
and
clc
(bad)
inc
push
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
aad
in
(bad)
(bad)
(bad)
(bad)
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
jg
(bad)
(bad)
cmp
outs
xor
or
xchg
movs
loope
mov
sub
dec
(bad)
(bad)
(bad)
dec
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
inc
push
pop
xchg
idiv
sub
sbb
repnz
and
sbb
(bad)
(bad)
dec
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
mov
stc
(bad)
and
push
mov
sar
(bad)
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
(bad)
(bad)
(bad)
call
inc
adc
cmp
jbe
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
(bad)
(bad)
(bad)
call
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
(bad)
jmp
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
imul
mov
(bad)
daa
test
(bad)
cs
mov
call
mov
(bad)
push
cs
out
add
add
pop
std
pop
jmp
call
push
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
(bad)
(bad)
call
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
(bad)
(bad)
cmp
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
jno
(bad)
(bad)
(bad)
(bad)
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
stos
(bad)
(bad)
(bad)
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
(bad)
(bad)
jg
pop
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
xor
mov
push
xchg
rcr
mov
mov
sub
jl
out
sub
xchg
sbb
(bad)
jmp
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
sub
mov
inc
push
imul
mov
push
(bad)
(bad)
(bad)
jg
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
sbb
inc
in
dec
add
inc
ror
mov
xor
or
cwde
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
es
call
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
and
mov
ret
mov
mov
or
mov
or
(bad)
(bad)
(bad)
jmp
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
or
jmp
jno
test
lahf
mov
xor
leave
(bad)
(bad)
fist
add
or
sbb
or
sub
out
pop
or
arpl
imul
into
test
fdiv
(bad)
(bad)
mov
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
cmp
jl
fstp
mov
sub
repz
aam
gs
mov
test
call
ror
mov
loop
fbld
(bad)
(bad)
(bad)
call
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
in
or
or
jno
daa
add
mov
or
xchg
mov
and
(bad)
(bad)
dec
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
(bad)
(bad)
(bad)
cmp
xor
mov
mov
add
(bad)
push
inc
cmp
(bad)
adc
jecxz
or
xchg
cmp
push
jp
pop
test
push
iret
or
add
mov
setae
mov
call
add
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
(bad)
(bad)
call
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
mov
fadd
les
repnz
sar
addr16
mov
push
(bad)
(bad)
fisttp
ss
fmul
sbb
dec
push
add
call
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
push
add
cmp
sub
add
xlat
jmp
sub
sahf
mov
cld
(bad)
call
scas
sbb
in
arpl
es
mov
or
stos
push
ss
jb
addr16
adc
dec
loop
jp
jnp
sub
xchg
ror
repnz
mov
(bad)
(bad)
(bad)
(bad)
fcmovnu
and
aam
inc
push
fiadd
int
mov
ja
sbb
hlt
mov
repnz
out
punpckhdq
push
cmp
(bad)
(bad)
dec
fcomp
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
(bad)
dec
adc
ret
es
shl
test
ja
scas
shr
(bad)
pop
fdivr
(bad)
(bad)
inc
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
(bad)
(bad)
call
xchg
xor
mov
add
push
ficom
and
addr16
jp
(bad)
(bad)
jmp
les
mov
sub
xchg
mov
mov
mov
sub
mov
sbb
inc
xor
bound
lods
lds
pop
(bad)
(bad)
(bad)
jmp
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
cmp
(bad)
jmp
iret
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
(bad)
(bad)
(bad)
push
xchg
sbb
pop
fwait
add
fld
ja
pop
jmp
aam
(bad)
(bad)
(bad)
(bad)
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fdivrp
(bad)
mov
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
push
std
(bad)
dec
pop
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
(bad)
(bad)
(bad)
push
mov
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
pop
adc
lds
jge
fdivrp
(bad)
(bad)
jmp
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
fld
cmp
hlt
dec
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
ret
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
(bad)
(bad)
inc
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
fbld
and
and
jo
cmp
std
imul
and
call
cmp
scas
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
(bad)
jmp
xchg
mov
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
mov
sbb
sub
dec
lea
pusha
jle
xor
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
sbb
and
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
(bad)
(bad)
inc
inc
and
shr
ja
adc
out
movs
add
test
mov
(bad)
call
push
ja
cwde
pop
ins
(bad)
adc
ss
daa
mov
(bad)
(bad)
call
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
mov
xchg
neg
xchg
aad
pop
mov
test
xor
imul
sbb
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
addr16
(bad)
(bad)
jmp
lahf
mov
mov
(bad)
repz
cmp
call
imul
or
(bad)
(bad)
(bad)
jmp
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
cli
jmp
mov
retf
cli
xlat
dec
shl
out
stc
add
xlat
push
(bad)
(bad)
jmp
lea
or
mov
pop
inc
sbb
ins
je
aas
les
push
(bad)
(bad)
(bad)
dec
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
xchg
fsub
push
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
(bad)
inc
sub
xchg
mov
xchg
push
mov
repz
inc
gs
dec
dec
(bad)
dec
outs
jne
mov
call
or
(bad)
cmp
sbb
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
clc
jmp
lea
out
and
loope
or
mov
pop
icebp
(bad)
(bad)
jle
shl
imul
inc
cmp
ja
fsub
push
jle
hlt
out
push
pop
clc
(bad)
dec
aaa
test
mov
adc
xor
(bad)
fist
add
pop
lods
test
push
retf
(bad)
push
add
jl
add
adc
psrlw
(bad)
or
add
dec
stc
fs
xchg
push
or
cmp
(bad)
(bad)
(bad)
call
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
(bad)
call
neg
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
(bad)
(bad)
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
mov
(bad)
push
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
rcl
mov
and
in
mov
cmps
daa
aam
(bad)
(bad)
jg
es
dec
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
jmp
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
(bad)
(bad)
(bad)
call
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
jmp
(bad)
dec
push
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
or
outs
cmp
fisub
nop
jmp
ja
pop
push
jecxz
add
cmp
arpl
popa
sub
push
cmps
xlat
aam
fs
(bad)
(bad)
mov
mov
dec
xlat
retf
and
mov
dec
(bad)
inc
or
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
call
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
push
addr16
jne
ds
mov
or
ror
adc
push
mov
(bad)
(bad)
jmp
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
ja
push
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
(bad)
mov
in
or
cmp
in
paddsb
hlt
popa
call
in
mov
(bad)
(bad)
call
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
(bad)
(bad)
call
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
sar
jmp
test
fnstcw
pusha
fdivr
(bad)
push
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
(bad)
out
aam
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
jg
add
daa
(bad)
fisubr
jle
add
push
push
int3
ret
xchg
cmp
loop
(bad)
sti
rcl
mov
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
jmp
int
ins
inc
iret
rcl
into
add
nop
ins
cld
ja
sub
xchg
(bad)
(bad)
(bad)
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
(bad)
dec
jns
cwde
mov
and
add
dec
call
xor
pop
pop
mov
mov
sbb
mov
or
mov
dec
mov
sbb
int3
push
test
arpl
aad
or
test
(bad)
(bad)
(bad)
(bad)
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
(bad)
(bad)
jmp
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
(bad)
(bad)
(bad)
call
out
inc
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
dec
pop
mov
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
(bad)
(bad)
mov
stos
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
fwait
jl
jge
dec
mov
loopne
xlat
add
mov
(bad)
(bad)
(bad)
fcomp
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
cmps
(bad)
jmp
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
dec
call
inc
mov
and
xor
pop
or
addr16
xchg
shr
in
(bad)
(bad)
call
imul
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
(bad)
(bad)
(bad)
(bad)
aas
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
jg
ret
dec
dec
outs
test
or
rcr
lahf
ror
(bad)
(bad)
(bad)
jmp
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
cmp
jmp
nop
mov
mov
iret
push
retf
mov
ret
pusha
test
jo
out
cmps
(bad)
call
mov
test
fistp
ret
imul
ret
ja
imul
mov
pushf
mov
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
(bad)
(bad)
(bad)
(bad)
jle
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
dec
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
(bad)
(bad)
(bad)
inc
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
jmp
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
std
(bad)
call
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
(bad)
jg
jmp
inc
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
call
(bad)
in
sbb
bound
and
inc
sbb
jmp
sub
(bad)
mov
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
pop
loopne
(bad)
cmp
movs
add
sub
scas
cmc
test
and
(bad)
(bad)
push
mov
mov
sbb
ror
sar
add
push
movs
not
cld
sbb
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
test
mov
ret
push
jp
jmp
int
jg
add
arpl
and
stc
popa
call
pop
cmp
rcr
mov
ss
dec
call
xchg
ud0
(bad)
inc
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
dec
(bad)
(bad)
(bad)
push
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
(bad)
(bad)
clc
inc
call
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
call
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
(bad)
(bad)
(bad)
dec
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
(bad)
(bad)
(bad)
dec
pop
std
icebp
push
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
call
(bad)
jl
pop
retf
pop
sbb
mov
(bad)
(bad)
(bad)
push
adc
in
test
adc
ja
mov
ret
add
cmp
cdq
in
(bad)
mov
sbb
outs
xchg
cmps
fidiv
sub
fisubr
sar
(bad)
inc
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
out
xchg
push
into
jp
mov
push
icebp
in
jp
jo
xchg
call
in
xor
and
ins
xchg
push
outs
or
mov
push
dec
in
sub
cmp
das
ja
cs
sbb
pop
ins
test
xchg
add
inc
jbe
jp
ins
push
daa
and
dec
add
add
xchg
cwde
pushf
add
mov
iret
mov
iret
repz
or
or
sbb
sbb
inc
or
outs
(bad)
imul
adc
outs
add
push
add
sar
cmp
dec
and
je
inc
add
jo
bound
add
out
dec
bound
add
inc
push
xchg
add
add
test
out
push
push
add
and
and
pusha
cmp
mov
add
mov
mov
nop
call
sub
ds
push
dec
add
out
daa
xor
aaa
xor
xor
sub
mov
push
es
adc
addr16
js
pop
mul
xchg
out
xor
popa
push
arpl
out
add
mov
sub
ss
fild
push
dec
push
movs
mov
and
fmulp
mov
ins
add
adc
pop
push
imul
jae
xor
and
outs
shr
push
dec
jae
cli
(bad)
push
ins
popa
and
push
push
add
add
dec
nop
adc
arpl
fs
imul
test
and
and
mov
push
ret
or
inc
or
arpl
sbb
and
je
test
dec
adc
mov
cmp
pusha
loope
inc
aaa
push
jne
call
dec
xor
and
push
outs
arpl
data16
arpl
mov
sub
(bad)
bound
bound
ja
aas
ret
hlt
sbb
xor
sbb
fimul
mov
loope
ds
dec
push
bound
add
outs
inc
xchg
mov
addr16
push
dec
adc
pop
add
fisubr
xchg
dec
mov
in
outs
jo
sub
inc
xor
test
xor
xchg
addr16
fmul
mov
rol
imul
pop
jne
mov
jns
mov
jnp
outs
es
jb
jge
push
cmps
ss
bound
jne
or
pop
mov
xchg
out
pop
sbb
jl
adc
cmp
xor
bound
stos
mov
(bad)
sahf
dec
pushf
dec
ins
xor
or
ja
outs
pop
loopne
adc
pop
add
xchg
clc
xor
xchg
ja
or
add
jae
outs
pop
dec
popa
push
cdq
repnz
pop
or
jae
ss
jmp
movs
stc
in
cs
push
ret
gs
lods
popa
xchg
mov
ja
dec
pop
shr
sub
aas
jo
fidivr
sub
mov
jne
ss
cmps
fs
dec
ss
inc
sub
sub
sub
ja
and
or
or
fs
dec
sbb
pop
xchg
out
ror
sar
push
mov
imul
or
aaa
cmps
push
rol
bound
sub
mov
push
popa
dec
xor
mov
cwde
test
push
add
jne
sbb
push
xlat
pop
scas
in
cmp
xor
out
clc
ret
mov
xor
lock
mov
neg
ins
xlat
and
or
xor
sub
daa
and
imul
(bad)
push
inc
dec
and
cli
jg
push
dec
inc
dec
inc
and
push
and
push
sti
ret
or
aas
and
movs
push
mov
daa
sbb
xlat
pop
rcr
mul
mov
sub
imul
mov
je
cmp
mov
add
cld
sbb
fs
retf
ds
and
ins
or
push
and
imul
cmp
into
(bad)
sti
jl
push
jns
adc
out
cmps
and
rcl
and
mov
(bad)
add
dec
es
nop
cli
or
inc
jbe
adc
add
xor
dec
push
or
dec
and
pop
or
lds
jb
mov
gs
cmc
hlt
or
in
and
jb
push
inc
push
popf
fsubr
aas
rcr
pop
ret
and
shl
and
push
daa
inc
dec
mov
imul
dec
sbb
ret
inc
daa
mov
push
pusha
add
pop
or
ins
xchg
addr16
movs
pop
scas
arpl
jae
and
sub
imul
jmp
outs
je
or
repnz
cmp
data16
lods
aas
dec
sub
jo
sbb
add
add
or
sub
sub
or
xor
add
sub
pop
shr
sub
int3
sbb
lock
inc
shr
push
push
es
cmp
fild
(bad)
cs
add
dec
dec
inc
xor
ret
pop
(bad)
push
jno
clc
jmp
dec
or
inc
push
push
dec
push
cmp
test
adc
lods
add
ins
ret
adc
enter
add
inc
push
scas
sub
push
xchg
mov
ror
jne
dec
mov
xchg
inc
mov
push
jns
push
pminsw
(bad)
push
mov
dec
mov
mov
mov
mov
outs
dec
sar
rol
pop
sbb
test
inc
jnp
dec
and
or
or
add
add
aaa
xor
rcl
push
ret
movs
rcr
push
dec
sub
out
pop
inc
out
rcr
push
mov
jle
dec
mov
jno
push
mov
pop
mov
imul
add
jnp
loop
xchg
pop
adc
sbb
add
(bad)
sahf
xchg
fld
xlat
fst
fcmovnu
mov
adc
or
imul
push
dec
xor
dec
nop
pop
daa
xor
rol
push
fdiv
ss
jbe
das
dec
test
pop
loopne
dec
inc
daa
sbb
movs
daa
arpl
loop
fild
jle
shl
loope
stc
push
xor
nop
cmp
push
loope
fidiv
push
xor
outs
cmp
das
test
fisttp
dec
das
pop
push
jne
adc
fcom
lahf
push
dec
sbb
push
jb
sbb
clc
adc
aaa
ret
ja
jbe
xor
outs
jnp
dec
inc
inc
daa
pop
das
xor
push
xchg
push
jb
sub
sub
test
inc
push
outs
les
pandn
push
inc
inc
push
cs
out
arpl
push
mov
(bad)
ins
imul
(bad)
js
pop
pop
sub
and
fimul
rcl
pop
jle
push
pop
pop
pop
(bad)
aaa
test
push
ins
(bad)
shl
or
pop
pop
mov
mov
dec
mov
mov
pop
push
cmp
movs
inc
or
push
pop
cmps
int3
push
retf
mov
push
xchg
inc
sbb
not
dec
mov
pop
and
out
fisubr
outs
adc
jle
dec
test
add
mov
pop
lahf
inc
dec
dec
adc
and
adc
add
cmp
jo
and
fs
pop
repz
or
(bad)
into
add
sbb
int
jg
cmp
call
cmps
and
das
dec
fucomip
std
jo
movs
cmp
mov
fst
ds
add
mov
push
inc
jb
inc
or
add
nop
jp
inc
(bad)
adc
jp
rcr
or
inc
loope
sub
push
out
popa
imul
imul
mov
jae
data16
rol
jno
pusha
pop
fcom
dec
aas
cmp
cmp
jo
gs
pop
add
pop
and
inc
adc
ins
shr
pop
pop
pop
adc
cmp
je
jae
dec
mov
xor
push
or
test
mov
xor
dec
bound
mov
outs
xchg
inc
arpl
inc
cmp
pop
pop
das
pop
std
ret
stos
dec
add
aaa
fld
out
fs
call
in
movs
ret
loope
dec
xor
mov
sub
test
dec
outs
jge
push
sub
xchg
dec
in
adc
push
enter
pushf
sbb
cmp
and
pop
mov
add
imul
lahf
add
ja
test
sbb
push
jae
popa
outs
js
or
mov
mov
arpl
xchg
rcl
mov
cmp
cs
add
push
cmp
sbb
aaa
push
mov
cdq
popf
or
pop
sbb
mov
sbb
xlat
pop
pop
aas
pop
andnps
loopne
inc
pop
out
inc
or
stc
jp
push
pop
inc
inc
sub
push
inc
das
inc
fs
pop
push
aam
jns
stos
push
push
fisubr
pop
rol
or
bound
outs
push
sub
inc
das
push
icebp
add
add
add
mov
xor
add
xor
adc
popa
xlat
pop
pop
mov
lods
les
shl
inc
dec
push
push
add
scas
add
xor
cmp
cmp
xor
xor
cmp
cmp
ss
cmp
dec
dec
fidivr
cs
push
xor
xor
dec
dec
dec
xor
cmova
jae
imul
and
pushw
sub
(bad)
emms
gs
jmp
jae
mov
retf
adc
sub
test
cmp
imul
sbb
mov
add
inc
push
cmp
cmps
neg
sub
cs
or
pop
daa
cmp
add
adc
std
mov
test
lahf
xchg
pusha
test
sahf
pop
inc
jecxz
push
and
cmc
ds
or
and
inc
fadd
xlat
mov
jne
outs
test
rcl
dec
call
div
dec
outs
mov
sbb
dec
push
jae
mov
xchg
or
outs
pop
ins
mov
daa
inc
pop
mov
xchg
inc
push
push
dec
push
inc
ja
pop
push
mov
mov
pop
push
pcmpgtw
adc
loop
dec
cmp
sbb
xor
jl
js
or
and
mov
ins
push
pop
loopne
gs
pop
or
or
jo
fistp
je
clc
bound
and
or
(bad)
push
xchg
mov
pop
or
and
cmps
je
push
cmp
fld
xor
mov
(bad)
xor
mov
gs
gs
dec
js
jmp
add
imul
fs
cmp
pop
loopne
(bad)
data16
push
mov
jbe
pushf
outs
mov
mov
cli
push
lock
cmp
cmp
jb
push
sbb
add
and
fs
cld
adc
daa
adc
mov
pop
xor
das
hlt
xlat
jbe
add
rcr
pop
dec
mov
js
outs
and
gs
ret
cmps
sbb
movs
push
push
add
aad
pop
mov
inc
arpl
xor
dec
jmp
and
fisub
enter
outs
lods
inc
cmp
imul
test
mov
arpl
adc
add
test
xor
and
fbstp
shl
mov
push
cld
and
or
repnz
out
cs
pop
(bad)
pushf
bnd
or
xchg
icebp
or
call
add
push
pop
test
dec
add
add
movs
jno
outs
pop
lock
aad
not
imul
jge
nop
popa
inc
stc
push
dec
mov
mov
dec
jl
out
or
rol
cmp
je
cli
inc
inc
inc
cs
adc
adc
das
inc
dec
pop
popa
sbb
pusha
sub
ror
jae
inc
arpl
jb
shl
pop
and
jecxz
inc
icebp
jae
pop
mov
dec
push
pop
outs
outs
xor
popa
jbe
xor
aas
test
push
push
pushf
sub
add
aaa
push
sbb
out
gs
push
pop
sub
jmp
jmp
inc
lock
xor
or
out
daa
inc
fwait
outs
das
mov
in
pusha
ficom
jne
popf
jnp
mov
ins
arpl
cs
loop
and
iret
cmps
push
sub
movs
ja
push
mov
jle
push
jmp
jl
push
push
outs
push
pop
stos
in
aaa
pop
outs
js
adc
push
cdq
pop
cmp
fld
jmp
inc
sub
cs
push
gs
pushf
adc
xchg
xchg
sub
mov
adc
xor
xlat
call
push
ret
call
pop
imul
sbb
pop
ss
xor
push
add
(bad)
mov
ror
or
test
add
pusha
cmps
sbb
xchg
pusha
aaa
xchg
dec
and
scas
popa
add
rol
pop
xor
jg
in
ror
gs
sub
jnp
sub
mov
aas
ret
push
dec
pushf
jnp
and
and
jge
xor
add
and
jo
mov
idiv
jge
mov
mov
cmp
dec
inc
or
sub
cmc
(bad)
xor
push
adc
out
dec
test
sub
or
ja
ficom
mul
cs
arpl
mov
pop
dec
dec
sbb
outs
xor
gs
imul
(bad)
and
outs
cmp
jg
rol
out
mov
pop
outs
daa
mov
mov
out
cs
aam
push
inc
cmp
push
stos
add
pop
ret
xchg
xor
outs
xchg
sbb
fidiv
jns
or
adc
(bad)
ss
fs
inc
add
add
xchg
xlat
inc
or
sub
jg
push
mov
aam
push
das
test
fild
mov
xchg
ret
cdq
xlat
or
xchg
cwde
or
adc
pusha
fcomp
push
and
jp
add
mov
lahf
push
mov
addr16
dec
mov
and
dec
push
push
add
test
daa
push
rcr
push
stos
jnp
das
mov
scas
xor
jp
outs
mov
sbb
pop
fidivr
push
in
out
jae
arpl
das
inc
sbb
ret
inc
imul
fs
jnp
pop
jbe
mov
jge
xchg
call
stc
inc
bound
js
sbb
daa
add
sahf
inc
mul
xchg
adc
xor
popa
and
and
pop
pop
test
dec
das
jns
inc
jl
cmp
push
push
dec
cs
inc
mov
xlat
mov
and
iret
cmp
mov
push
fcmovnb
pop
push
les
mov
push
mov
jge
xor
cmp
lock
dec
jo
adc
inc
inc
jmp
add
daa
lods
fistp
push
sbb
dec
dec
inc
xchg
jo
cdq
mov
inc
je
pop
cwde
mov
or
lds
cli
adc
pop
and
out
sub
(bad)
icebp
call
inc
sub
mov
outs
pusha
and
test
js
sub
inc
(bad)
mov
or
pop
inc
or
cmp
dec
dec
das
aam
xchg
cmps
jne
pop
jecxz
jae
xchg
pop
mov
adc
cs
and
fcmovnbe
rol
sub
outs
dec
pop
icebp
sahf
jnp
mov
aad
or
adc
mov
xlat
mov
push
or
mov
ror
jne
push
loopne
leave
jg
stos
adc
jmp
cmps
outs
or
mov
jge
mov
ret
sub
inc
or
adc
je
outs
adc
les
cmp
or
push
mov
repz
ins
mov
and
dec
scas
mov
pop
add
xchg
fild
jns
xor
lds
mov
inc
cs
ins
mov
ins
ror
ror
pop
mov
adc
iret
mov
cmp
cmp
add
sub
inc
(bad)
cmp
stos
dec
inc
xchg
sub
mov
xchg
dec
sub
test
ins
xchg
cmp
xchg
dec
out
jae
jnp
push
push
cmp
lods
lods
or
lods
sbb
add
fs
and
ret
push
sbb
dec
cmps
adc
cmp
dec
icebp
inc
push
mov
adc
loope
scas
and
inc
pop
push
ror
mov
push
aaa
cmp
and
ins
dec
xchg
xor
rcr
mov
push
rcl
mov
fiadd
aaa
or
mov
div
adc
inc
dec
add
push
pop
add
inc
das
jmp
js
ss
jae
pop
aad
adc
loope
daa
cmps
adc
dec
imul
aaa
outs
dec
test
jne
daa
lods
popf
popf
js
dec
inc
outs
fs
add
sahf
ret
loop
pusha
in
popf
jmp
movs
push
add
pop
xor
pop
dec
mov
add
xor
add
mov
addr16
pop
xor
and
ss
test
loopne
jg
jo
mov
mov
mov
imul
mov
mov
cmp
jmp
daa
int3
lea
(bad)
and
sbb
cmp
call
arpl
cmps
daa
test
pop
adc
add
cmp
xor
jne
mov
pop
je
fbld
bound
lods
jnp
push
cmp
mov
push
shld
jle
add
xor
arpl
rol
add
add
loopne
adc
jnp
xor
call
and
jbe
sahf
xlat
outs
aam
sub
inc
push
leave
adc
xchg
and
lock
daa
hlt
xchg
bound
cmps
fcomp
mov
dec
cmps
enter
popa
lahf
cmp
pop
dec
add
inc
int
cmp
loopne
lods
or
idiv
xor
ret
mov
inc
and
sub
push
sahf
outs
pop
pusha
(bad)
cmp
dec
dec
mov
cmp
shl
push
mov
xor
cs
jo
scas
addr16
pop
add
ficomp
adc
ins
int3
and
rol
lahf
ja
inc
shl
pop
dec
push
js
mov
pop
pushw
es
sbb
push
pop
adc
in
(bad)
addr16
adc
sub
test
pop
xchg
mov
inc
xor
push
xlat
jae
loope
sahf
hlt
das
imul
or
dec
nop
sahf
pmaxub
(bad)
movs
addr16
mov
sahf
mov
xchg
ja
jo
mov
outs
jne
aaa
pop
fild
mov
ja
jmp
test
repnz
add
adc
or
mov
push
sbb
add
push
mov
lods
push
mov
pop
add
and
xchg
test
inc
mov
jge
cmp
xchg
sahf
inc
daa
mov
lds
or
pop
adc
loopne
push
push
fmul
shl
ficomp
inc
(bad)
xor
in
imul
fs
ins
xor
(bad)
or
sub
les
gs
jge
sub
add
cs
test
ja
mov
or
pop
imul
or
sbb
ins
pop
sub
add
daa
test
pop
mul
pop
sbb
arpl
pop
mov
push
push
or
or
fld
les
adc
xchg
fadd
iret
jmp
ins
sbb
xor
das
push
inc
jbe
add
cmp
fld
in
dec
push
test
or
mov
pop
bound
fdivr
xchg
imul
fld
jl
xor
or
xlat
aas
xchg
inc
mov
cs
mov
jg
add
xchg
pushf
adc
jmp
mov
pop
daa
inc
daa
and
dec
sub
push
add
jae
imul
fidiv
stos
test
and
add
jae
push
iret
fs
rcr
fidivr
dec
and
fwait
sub
push
pop
das
or
pusha
pop
stos
enter
daa
out
je
adc
outs
add
scas
dec
ja
mov
bound
call
mov
adc
jecxz
sbb
ror
(bad)
ja
mov
mov
xchg
push
pop
enter
(bad)
and
in
les
push
jne
adc
jns
aaa
mov
and
not
or
xor
lar
std
(bad)
inc
and
xor
xor
xor
sti
lods
adc
and
inc
xor
inc
cmp
outs
mov
fidiv
add
adc
add
sbb
xor
inc
inc
mov
xor
inc
inc
ss
xor
inc
xor
ss
cmps
cdq
fstp
mov
xor
xor
pushf
xor
aaa
inc
cmp
mov
jbe
mov
mov
ss
inc
xor
xor
jbe
inc
sub
inc
cmp
inc
xor
inc
inc
inc
inc
ins
mov
xor
ss
les
pop
inc
mov
int3
scas
stos
xor
mov
inc
cli
xor
fiadd
add
inc
dec
inc
push
xor
int
clc
inc
xor
xor
inc
cmp
inc
cmp
xor
cmp
cmp
add
add
push
xor
adc
add
sahf
aam
cmp
push
xor
aaa
mov
pusha
adc
add
inc
pusha
data16
mov
adc
cwde
or
outs
or
xor
xchg
fsubr
inc
adc
cmp
cwde
mov
xor
xchg
aam
push
inc
mov
int3
iret
add
inc
sbb
xor
fcom
fdiv
or
rcr
add
xor
or
ins
xor
cmp
fdiv
xor
mov
xchg
inc
movs
aaa
inc
inc
xchg
pushf
inc
outs
xor
push
sbb
mov
ds
pusha
jae
push
and
xor
xor
inc
or
xor
pop
data16
in
rcr
and
out
and
add
mov
inc
xchg
or
inc
mov
and
add
or
ret
rcr
push
or
sbb
lock
loop
stos
mov
inc
inc
inc
pusha
sbb
shl
sub
out
inc
add
inc
mov
aaa
inc
inc
mov
inc
xor
shl
pop
rcr
pushf
loope
jae
inc
pop
jmp
rol
inc
and
add
dec
xor
cmp
sbb
pop
mov
cmp
or
adc
repnz
cwde
popa
push
cmp
cmp
pushw
xor
cmp
cmp
dec
(bad)
sbb
fld
add
dec
push
out
sbb
push
xor
adc
lods
imul
and
dec
inc
mov
or
dec
call
push
mov
xor
mov
cmp
cli
ds
loopne
shl
cmp
add
sbb
xor
jmp
pop
and
in
mov
mov
or
push
loope
mov
and
lods
into
in
lea
mov
xchg
mov
je
adc
sbb
cmp
hlt
pusha
sbb
xchg
jbe
sub
cmp
loop
jb
adc
mov
mov
mov
add
sbb
xor
clc
retf
in
cdq
retf
adc
nop
inc
inc
and
je
dec
adc
fisub
mov
jmp
cmp
pop
cmp
inc
add
loop
xor
cwde
stos
push
xchg
jmp
push
inc
add
push
sbb
adc
inc
(bad)
ds
and
cdq
fbstp
and
aaa
in
dec
fldcw
loope
int
lods
loop
loopne
jo
mov
pusha
adc
(bad)
stos
ret
mov
xor
pushf
sbb
push
adc
xor
int3
sub
loop
shr
xor
add
cmp
nop
xor
add
dec
in
rcr
mov
cmp
pop
mov
shl
xor
test
es
inc
div
or
enter
sbb
pop
cwde
push
inc
mul
ret
mov
push
out
pop
icebp
cmp
ret
sub
sti
cmp
or
js
mov
and
cli
cmps
push
or
(bad)
jle
mov
cmp
int3
int3
jbe
cmp
xor
js
dec
icebp
push
jo
pushf
mov
popa
in
loopne
outs
js
repnz
pop
data16
mov
fs
pop
lock
mov
mov
es
ret
sbb
pusha
jbe
pop
mul
shr
fxch
dec
test
adc
outs
sar
ss
inc
pusha
les
jle
pop
sub
mov
dec
inc
dec
sbb
pop
mov
inc
inc
pop
and
sbb
cmp
and
test
pusha
xor
push
sbb
ret
xchg
push
ins
cmps
mov
push
and
jmp
rol
pop
test
push
push
dec
sbb
xor
stos
lea
cdq
adc
dec
mov
(bad)
jne
imul
adc
or
inc
test
xchg
ins
cmp
into
inc
test
xchg
add
mov
and
bt
shr
sub
inc
push
or
ja
inc
adc
gs
xor
mov
inc
int
js
xchg
push
pop
dec
test
push
dec
icebp
imul
sub
push
(bad)
pop
or
lods
ins
xor
pusha
mov
pop
aaa
sub
out
inc
sub
add
push
nop
fwait
mov
add
sub
pop
dec
(bad)
mov
lahf
sbb
ret
stos
movs
dec
or
inc
push
sbb
mov
jae
adc
sub
mov
inc
dec
sub
xchg
adc
dec
movs
inc
xor
jmp
adc
(bad)
dec
dec
cdq
mov
sub
mov
ja
xchg
loope
push
je
lahf
jo
pop
inc
push
fbstp
(bad)
add
adc
pop
dec
push
push
ret
daa
aam
jp
mov
push
adc
and
xor
push
add
int3
outs
dec
pop
adc
push
out
js
cld
aam
mov
ror
jae
outs
bound
sbb
lea
imul
dec
out
jne
hlt
lea
outs
imul
jae
fdiv
jns
movs
sub
add
aas
arpl
xor
fld
je
mov
ins
ss
xchg
idiv
pop
inc
dec
test
sbb
sub
jo
lock
push
and
jg
pop
inc
mov
jg
jge
outs
sub
add
inc
and
push
jb
pop
ret
adc
and
cmp
jbe
push
das
sub
hlt
sub
push
xchg
and
rol
hlt
sbb
dec
leave
xor
not
and
jae
iret
mov
fistp
add
mov
inc
bound
pop
xor
into
pop
je
daa
int3
ret
xor
clc
jae
ins
bound
imul
movntq
ret
or
test
test
clc
lods
aaa
outs
sub
xor
es
pop
pusha
ins
gs
mov
das
lds
aaa
bound
sub
addr16
fisubr
sub
das
pop
push
cmps
push
and
cmps
test
imul
fsubr
retf
xor
inc
cmc
adc
imul
jbe
inc
mov
add
jne
imul
arpl
ret
inc
sub
adc
add
hlt
aaa
or
mov
mov
or
cmp
cdq
mov
outs
rcr
(bad)
jmp
add
cmps
dec
sbb
stos
and
aaa
adc
popa
xchg
test
sbb
add
pusha
add
mov
rcr
push
inc
sbb
fsub
mov
imul
sub
daa
aas
or
mov
lahf
adc
add
sub
sub
ins
or
addr16
ret
xchg
addr16
mov
xor
dec
outs
into
nop
mov
hlt
ud2
jle
sub
mov
and
or
jge
daa
cmp
push
jge
pop
(bad)
xchg
pop
mov
neg
(bad)
lock
addr16
sub
sahf
out
ficomp
and
outs
jb
lods
ret
jns
inc
js
sbb
aaa
push
pop
push
loop
cmp
pop
sub
jnp
and
sbb
and
push
dec
push
mov
ficom
inc
or
dec
pmulhuw
mov
sbb
jo
xor
sbb
pushf
into
outs
add
je
fild
pop
and
cmps
push
xor
add
mov
(bad)
pusha
ins
xor
test
pop
push
pop
scas
inc
sub
ja
sar
adc
dec
inc
inc
jp
rcl
jb
out
xchg
mov
inc
addr16
fiadd
outs
adc
xor
jne
imul
inc
pop
(bad)
repz
xlat
ja
or
or
push
jp
cvtps2pi
out
sahf
pop
inc
clc
fld
retf
lea
sub
sub
jae
imul
jg
and
call
jecxz
mov
sub
in
pusha
add
movs
dec
addr16
out
addr16
loop
add
dec
inc
pop
xchg
out
mov
test
push
scas
cmp
push
push
fild
sub
adc
loop
shl
outs
pop
mov
add
push
sbb
inc
(bad)
inc
pop
test
ss
sub
das
push
call
xor
icebp
imul
and
pusha
xchg
(bad)
jg
data16
sti
lahf
cmp
scas
sub
fs
movs
loopne
aas
mov
sub
adc
das
xor
lock
jge
in
ins
outs
sub
add
call
dec
clc
outs
sbb
dec
mov
dec
dec
pop
cmp
adc
adc
push
sahf
fld
xchg
ror
mov
cmp
inc
pop
inc
and
fsubr
jo
adc
sub
sub
jnp
jge
inc
mov
test
jge
jnp
add
push
jecxz
sub
jmp
jge
dec
jo
sbb
adc
das
or
arpl
pushf
iret
or
xor
cmp
das
xchg
mov
add
pop
call
xor
ins
push
repnz
out
mov
sti
jo
mul
and
push
popa
stos
mov
aam
push
xchg
fcomp
js
cmp
fist
push
and
daa
aas
shrd
sub
popf
mov
push
aas
sub
add
and
jns
mov
mov
ins
inc
dec
cwde
sar
dec
fwait
in
sub
jo
movs
xor
loope
and
aas
outs
sub
ret
ds
mov
jecxz
outs
in
or
hlt
ss
pusha
popa
xchg
or
enter
mov
addr16
mov
push
(bad)
adc
movs
sub
inc
jo
or
add
push
jae
sub
loop
out
or
dec
jb
pushf
and
(bad)
xor
ret
and
push
push
inc
jmp
or
cld
jecxz
gs
inc
mov
cmps
test
dec
mov
push
adc
fst
dec
(bad)
daa
cli
and
movs
ins
or
test
xlat
ins
and
jns
push
or
jne
dec
jae
xchg
out
add
movs
pushf
movs
add
push
sbb
icebp
mov
lock
js
xor
and
into
inc
adc
sub
xor
and
mov
mov
in
arpl
addr16
pop
mov
xlat
push
xor
in
fadd
xchg
outs
cmp
inc
push
fsubr
xor
fadd
lea
pop
xchg
mov
pop
cpuid
popf
(bad)
cmp
in
push
jmp
ror
fs
test
ss
cmp
clc
mov
inc
ja
dec
test
call
and
xchg
sub
or
scas
pop
lea
fisub
jae
pusha
adc
dec
push
pop
inc
pop
ret
xlat
ja
mov
jb
xor
pop
nop
imul
or
push
and
sub
mov
aas
lods
fs
not
popf
push
cmp
xor
outs
and
push
mov
iret
adc
pusha
and
add
lahf
mov
mov
inc
inc
and
aaa
or
adc
ja
push
pop
mov
(bad)
lahf
(bad)
xor
outs
not
dec
sbb
cmp
pop
into
inc
mov
sub
in
add
jbe
sub
dec
inc
dec
jae
inc
ins
aas
and
jo
das
add
outs
cld
sub
or
cmp
sub
sub
in
cmps
js
call
fimul
fisub
in
jbe
or
pop
ins
pop
sbb
data16
jmp
mov
daa
jecxz
cmp
out
adc
inc
je
ins
daa
cs
sub
outs
sub
fwait
je
ds
jb
ja
ss
mov
add
cli
sub
or
mov
jo
jo
fs
push
shr
adc
cmp
mul
addr16
push
push
fisubr
push
pusha
popa
sub
in
jbe
data16
xchg
cs
sub
mov
push
arpl
mov
push
jne
add
xchg
add
fdivr
push
push
and
push
dec
adc
outs
dec
adc
jg
pop
pop
arpl
(bad)
or
xchg
or
inc
mov
mov
fs
sub
cmp
jae
data16
jbe
arpl
cmps
fdiv
adc
xor
dec
ficom
jae
push
cmp
pop
sbb
aam
adc
daa
add
rcr
push
jo
push
idiv
mov
je
ins
jle
loope
(bad)
imul
pop
pushf
add
or
xchg
or
cmps
je
add
or
mov
pop
popa
ss
jbe
or
mov
popw
push
add
pop
pop
add
fdiv
xchg
iret
add
(bad)
jo
retf
sbb
xor
xor
push
pop
arpl
pop
pusha
aaa
sbb
je
ins
in
pop
rcl
add
(bad)
outs
pop
mov
sub
movs
sub
mov
int3
test
fs
ds
aas
push
and
jmp
or
nop
jbe
das
call
ins
xchg
pop
ja
inc
jae
push
push
xor
ud2
dec
lea
jmp
xlat
cli
ds
adc
mov
(bad)
push
mov
xor
fbstp
cmp
push
cmps
addr16
jge
(bad)
into
or
test
and
jb
daa
pop
mov
adc
xchg
adc
mov
lock
ret
test
les
scas
pop
cmps
popf
shl
or
pop
mov
cmp
(bad)
loop
pop
fidiv
push
imul
arpl
or
ret
xchg
aad
or
mov
xchg
or
sub
cmp
popf
jae
cli
xchg
xor
jb
pop
lahf
push
push
fidivr
div
cs
pusha
xchg
stc
das
add
rol
pop
push
jo
mov
pusha
or
mov
fimul
addr16
cld
das
dec
cwde
sti
dec
shr
test
std
xchg
dec
mov
inc
inc
or
cmp
jbe
or
ins
ins
out
or
test
and
clc
xor
sahf
into
dec
cmps
test
in
aaa
clc
js
push
pop
and
je
in
hlt
ins
push
jo
fbld
mov
fs
push
or
cdq
add
inc
iret
or
fst
clc
mov
les
rcl
adc
retf
or
popa
push
mov
push
outs
jno
icebp
mov
adc
popa
cmps
and
and
sbb
ret
pop
sbb
iret
jo
dec
jnp
fcomp
aas
and
add
pop
xor
push
xor
cmp
fbld
xor
cmp
sahf
cmp
imul
sahf
add
daa
mov
mov
and
mov
es
leave
retf
rcl
fstp
mov
adc
leave
pop
ins
pop
bound
bound
push
mov
bound
scas
ins
jne
int3
xor
ss
mov
test
push
sub
(bad)
jo
addr16
mov
cs
xor
add
loopne
out
push
push
dec
push
imul
les
imul
iret
push
fs
arpl
das
test
leave
ins
je
pop
je
test
jne
lods
sbb
gs
scas
lock
es
js
jl
pop
idiv
ret
fmul
(bad)
fisubr
add
mov
ficomp
gs
retf
jo
mov
mov
cs
pop
add
lock
dec
adc
mov
mov
or
clc
aam
push
cmp
adc
and
addr16
fdiv
sbb
push
mov
xor
(bad)
adc
out
cmp
mov
and
push
ja
div
out
xchg
ret
jo
lea
mov
aad
stos
xchg
mov
outs
and
ss
enter
div
cs
bound
lea
call
push
int
lds
push
les
repz
lods
out
add
imul
adc
mov
in
aas
ja
cs
paddq
jge
push
xor
std
sub
and
ret
fidiv
and
pop
adc
push
jmp
pop
jl
push
push
lods
cs
and
add
lock
add
enter
inc
mov
sbb
cmp
xor
cmp
jle
aas
and
push
str
idiv
cmp
pop
or
test
mov
lock
lock
call
iret
pop
inc
pop
mov
pop
jmp
jle
dec
sub
jnp
xor
jg
pop
or
ficom
call
loopne
test
ror
psubq
jmp
retf
jno
icebp
pusha
inc
mov
outs
call
clc
ret
movs
add
add
dec
add
mov
push
and
add
fnsave
sub
(bad)
call
aam
add
or
mov
mov
pop
mov
iret
adc
and
nop
inc
enter
out
or
dec
fdiv
sbb
enter
xor
pop
(bad)
rol
or
pop
(bad)
in
inc
sar
aas
pop
push
outs
pop
inc
scas
jg
cmp
jbe
cmp
out
jg
in
inc
repnz
dec
mov
xor
rcr
mov
pop
gs
cmp
sar
jb
xchg
jl
inc
jg
jp
jo
cmp
jp
jg
in
cmp
adc
aas
mov
and
xchg
lods
cmps
push
popf
dec
mov
pop
mov
mov
movhps
mov
aas
rol
sub
iret
xlat
sub
fcom
aas
xlat
rdtsc
es
out
push
mov
sub
repz
(bad)
fiadd
or
push
(bad)
add
add
les
push
push
jmp
aaa
jne
loopne
mov
add
in
mov
iret
sar
lock
cmp
repz
test
xchg
jle
sub
int
mov
sbb
mov
loopne
sbb
loopne
jae
out
lock
xor
jo
adc
cmp
aam
jg
and
enter
hlt
cmp
dec
push
inc
ds
repz
nop
xor
ss
addr16
sub
mov
push
out
sahf
or
test
iret
sar
xor
repz
mov
jle
lahf
out
iret
and
aas
and
mov
pop
dec
jnp
cmp
mov
ins
adc
cmp
cmp
clc
add
jge
loope
inc
out
push
fcom
xchg
and
dec
repz
cli
inc
in
imul
in
lods
cmp
and
outs
inc
cmp
push
inc
sahf
inc
pop
sbb
out
sahf
out
ds
xchg
mov
out
sahf
js
fs
inc
popf
out
mov
push
add
or
sahf
out
sbb
push
mov
outs
jno
jns
jmp
cmp
cmp
mov
fsubr
jns
cmps
stc
add
and
out
sahf
out
pusha
ins
js
mov
stos
mov
mov
sbb
push
cli
aas
out
push
fmul
repz
repz
push
cwde
mov
iret
repz
pop
inc
xor
jns
out
or
ds
mov
mov
xchg
sub
xor
pop
push
inc
xor
mov
into
jnp
cmp
ss
push
sbb
popf
lods
add
push
xor
idiv
ficomp
lock
and
jp
jnp
cs
push
jo
cwde
cmp
out
mov
cmps
or
mov
adc
loop
neg
or
sahf
out
add
out
pop
jno
adc
cmps
sub
inc
cmp
repz
fs
xchg
ror
pop
icebp
(bad)
lahf
jp
movs
test
test
mov
cs
xchg
pushf
dec
shl
gs
test
xor
xor
es
pop
shl
push
mov
sbb
jae
and
jo
(bad)
shr
push
les
fs
inc
jmp
jmp
fmul
dec
jg
(bad)
sbb
adc
popa
xchg
cmp
enter
dec
cwde
xor
int3
sti
sbb
xchg
and
push
sub
fwait
inc
and
push
or
popa
mov
mov
push
jmp
or
or
aaa
ja
repz
inc
stos
in
inc
mov
jae
outs
rcl
sbb
sub
dec
arpl
cmp
outs
inc
lock
into
jae
cld
or
dec
jp
loope
and
arpl
shl
xchg
scas
push
dec
adc
stos
xor
sub
or
or
cmp
ret
fld
in
xchg
or
push
repz
and
jae
add
fcmovnb
pop
fist
sbb
dec
call
cdq
add
push
outs
sbb
ficom
bound
retf
jle
mov
movd
aam
cmp
dec
adc
dec
pusha
jb
add
fist
lods
mov
jg
shl
and
jo
sub
imul
cmps
ds
retf
pop
pop
outs
add
addr16
jo
push
mov
xchg
inc
push
inc
inc
mov
repz
push
and
pop
xchg
inc
fs
and
jle
pop
xlat
sbb
sbb
or
cdq
jle
jp
pop
outs
cld
cmp
jle
inc
lods
call
dec
jb
cwde
das
mov
xchg
(bad)
push
ja
ror
rcl
outs
sbb
ds
dec
inc
push
outs
scas
cdq
pop
xor
fs
nop
xor
mov
mov
pop
stos
xor
or
pop
ss
pop
stc
addr16
push
gs
inc
ins
je
inc
ret
inc
push
ja
daa
sub
lock
or
addr16
ret
add
dec
out
inc
gs
lea
inc
mov
xlat
adc
ret
mov
rcr
adc
inc
comiss
mov
adc
daa
sbb
and
add
mov
jb
pop
jmp
ret
pop
pop
aad
mov
les
ret
push
imul
pop
cmc
inc
jne
lock
mov
cmp
mov
push
mov
cmp
xor
imul
mov
add
mov
cmp
sbb
cmp
add
inc
dec
gs
(bad)
ds
push
dec
mov
cmp
mov
stos
cmc
loopne
add
imul
inc
adc
lods
clc
sbb
out
sub
add
add
loop
add
xchg
and
inc
add
mov
lods
and
inc
inc
mov
rol
mov
add
pusha
jmp
xor
fcomp
add
add
jns
inc
jmp
and
js
outs
and
pop
cli
jnp
test
xlat
retf
dec
dec
jne
data16
stos
xchg
adc
arpl
inc
out
adc
cmp
sti
sub
dec
sub
gs
add
pop
pop
imul
popa
(bad)
xchg
adc
fmul
pop
ror
inc
aad
pop
movs
cmp
adc
aad
sub
js
add
and
dec
mov
xchg
nop
adc
pushf
mov
ret
fcomp
dec
movs
test
les
lods
ins
mov
pop
sbb
inc
mov
cmp
jbe
pushfw
inc
add
xlat
push
pop
imul
jae
imul
sbb
test
xor
push
ds
xor
inc
pop
fisttp
xor
push
xchg
ja
icebp
mov
mov
add
repz
add
add
add
repz
pop
or
or
outs
daa
or
or
mov
daa
adc
adc
cmp
das
and
fucomi
jbe
addr16
das
push
xorps
outs
imul
push
and
outs
daa
iret
sbb
push
pop
and
outs
mov
jb
cmp
jns
xchg
sub
pop
jo
cmps
mov
into
aas
xlat
adc
data16
mov
das
in
ins
and
inc
mov
add
aaa
in
lods
popa
add
cwde
in
xchg
mov
(bad)
or
jbe
adc
adc
adc
sbb
xchg
and
sbb
jb
sub
add
je
pop
and
sub
dec
and
and
mov
mov
jns
nop
jp
cld
add
mov
js
inc
or
inc
sbb
sub
loop
add
jb
sbb
add
xor
xchg
and
inc
bound
fnstcw
inc
ror
cmp
pop
movs
test
rcl
xchg
add
add
movs
add
cmp
cmps
fisttp
mov
ds
movs
sbb
aaa
test
shl
pmulhuw
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
fistp
mov
ficomp
mov
xor
lahf
ins
aas
rcr
fsubp
stc
jb
jle
jl
xchg
mov
in
inc
add
rol
add
jge
add
clc
push
jg
movs
fnstsw
sub
push
dec
push
adc
cmps
xor
in
sti
ins
xor
aaa
jg
cli
push
out
sahf
addr16
xchg
nop
mov
sahf
cmp
mov
lods
movs
cwde
enter
cmp
repz
fsub
in
repz
call
sub
jns
nop
test
sub
sahf
idiv
push
inc
dec
cmp
lock
out
enter
add
add
int
(bad)
daa
out
paddsb
test
fist
add
xchg
popf
jo
jecxz
or
inc
push
or
inc
sbb
sbb
mov
pop
add
push
cmp
pop
jns
out
js
mov
repz
dec
repz
xor
add
jns
out
push
pop
ja
mov
loop
int
repnz
das
dec
and
cmp
xchg
add
jg
cwde
mov
psubb
jns
stos
icebp
pop
jmp
adc
add
nop
sbb
mov
mov
sbb
jb
enter
and
pusha
or
pop
(bad)
adc
inc
push
in
xchg
and
cmp
xor
mov
jb
or
enter
or
add
test
push
sbb
jb
hlt
pop
in
and
and
and
and
loopne
fsub
int3
fild
pop
mov
data16
adc
scas
pusha
pminub
and
pusha
inc
dec
push
aas
xchg
jge
and
pop
add
or
push
and
(bad)
cld
mov
not
cmp
loopne
adc
push
int3
push
ss
jnp
mov
mov
je
adc
ins
repz
dec
push
pop
push
adc
push
fidivr
iret
and
into
xchg
sahf
out
rol
mov
dec
daa
xor
inc
or
out
mov
enter
mov
cs
sub
ins
push
lahf
push
add
xor
mov
inc
inc
cmp
add
cmp
jg
add
stc
nop
xchg
cmp
add
or
stc
nop
movmskps
mov
adc
enter
mov
leave
sbb
mov
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
(bad)
(bad)
(bad)
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
(bad)
(bad)
push
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
(bad)
(bad)
(bad)
inc
fisttp
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
jmp
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
(bad)
dec
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
inc
adc
cmps
lock
mov
popa
sar
mov
(bad)
(bad)
call
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
jne
int
add
sti
aas
jno
or
mov
(bad)
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
sbb
lds
mov
ins
scas
add
aas
xor
aad
mov
(bad)
(bad)
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
(bad)
(bad)
(bad)
(bad)
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
(bad)
(bad)
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
(bad)
(bad)
(bad)
jmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cli
jmp
cmp
mov
cmp
xlat
cmp
mov
sbb
(bad)
(bad)
jmp
inc
inc
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
(bad)
(bad)
(bad)
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
xchg
jge
pop
ficomp
frstor
push
in
xor
sub
dec
push
dec
jns
cs
xlat
push
div
rcr
pop
sub
pop
pop
sbb
sbb
jae
fcom
sbb
add
mov
out
push
cld
pop
pop
hlt
(bad)
push
in
sbb
xchg
call
cmp
dec
enter
mov
leave
jae
mov
test
jae
pushf
cmp
movs
pushf
xchg
xchg
pop
jb
nop
xchg
mov
je
pop
pop
daa
iret
leave
jae
inc
inc
cmp
jae
pushf
cmp
adc
or
sbb
cmp
sahf
in
call
mov
pop
mov
movs
das
jae
pushf
pop
mov
and
js
pop
in
xchg
out
je
push
mov
pop
dec
dec
xchg
cmp
iret
cmp
sub
lock
or
sbb
push
lock
push
addr16
das
in
push
call
in
int3
push
enter
xchg
out
xchg
mov
mov
sahf
nop
mov
dec
dec
jnp
ins
pop
sbb
jo
daa
iret
in
fisubr
pop
pop
pop
inc
jae
pushf
cmp
cmp
jns
iret
leave
and
adc
push
add
outs
iret
mov
clc
call
xchg
out
cmp
jns
sahf
xchg
nop
mov
js
je
push
sahf
push
dec
inc
pop
cmp
leave
jae
pushf
sub
sbb
or
pop
add
xchg
imul
cld
sbb
in
das
call
loopne
mov
xchg
out
xchg
aam
sar
lods
push
movs
cwde
nop
xchg
out
cmp
jns
sahf
jo
pop
pop
dec
adc
sub
out
jbe
xchg
and
pop
sbb
adc
or
mov
push
clc
pop
in
call
push
rcr
jns
ror
int3
cmps
sbb
inc
enter
out
cmp
shr
movs
mov
xchg
out
je
pop
dec
(bad)
inc
daa
out
movs
fwait
pop
push
xor
jae
pushf
cmp
sbb
jns
out
enter
push
clc
pop
in
call
loopne
fcom
cmps
mov
pop
pop
(bad)
repnz
ficomp
ucomiss
mov
lods
jae
leave
jae
cwde
xchg
test
iret
leave
jl
push
loopne
inc
fild
cs
sahf
xchg
ja
push
xor
and
popf
in
jns
or
pop
cld
leave
jae
lea
call
loopne
ror
mov
mov
pushf
mov
jl
jo
dec
sbb
jae
pop
xchg
push
pop
mov
pop
jb
dec
daa
jbe
xchg
out
popf
inc
push
cmp
and
jne
sahf
sbb
mov
cmp
(bad)
ins
fiadd
add
clc
lock
in
out
call
in
mov
fist
jg
jo
subps
and
mov
adc
fst
les
inc
sete
jb
in
inc
fs
outs
inc
push
cmp
pop
into
mov
push
sbb
invd
xor
in
add
in
xchg
add
push
mov
enter
cwde
repnz
test
jo
cmp
in
inc
push
inc
cvttps2pi
inc
das
iret
mov
cmp
dec
pop
int3
sub
mov
and
pusha
push
sbb
jb
dec
cmp
adc
or
xchg
and
adc
cmp
push
les
in
lods
dec
cwde
push
mov
fs
inc
mov
js
jns
jbe
in
enter
cld
xor
sub
in
sbb
cld
mov
das
ins
jl
jnp
sub
adc
sub
lock
jnp
loop
loopne
mov
mov
das
retf
mov
ret
mov
fisttp
push
or
add
aas
shl
enter
cmp
andps
sub
sbb
jb
add
fs
xchg
and
or
or
stc
jb
test
or
call
popa
repz
test
clc
pop
push
push
or
fimul
sbb
into
adc
shl
pop
dec
inc
int
add
mov
neg
pusha
push
inc
adc
mov
jbe
addr16
push
push
add
pop
push
xor
sub
test
and
push
loope
jb
add
stos
push
xchg
scas
or
or
iret
aam
mov
xlat
jmp
(bad)
nop
fild
daa
or
daa
ror
adc
js
mov
cmp
popf
inc
repz
inc
(bad)
scas
pop
and
inc
not
cmp
push
(bad)
mov
and
ja
sahf
dec
xchg
push
pop
cmp
jg
nop
jnp
pop
add
and
outs
sub
push
or
pop
sub
mov
fist
inc
(bad)
ja
push
lods
fidiv
shl
mov
(bad)
fld
pop
int
add
add
jge
cmps
jge
mov
add
(bad)
(bad)
push
daa
add
pop
add
jne
mov
cmps
pop
call
jo
repnz
cs
jp
test
iret
jae
cwde
movs
mov
outs
mov
and
stc
(bad)
iret
out
in
rol
jno
fiadd
arpl
pop
push
test
sbb
fs
sub
cmp
repz
xor
mov
test
repnz
repz
pop
push
psadbw
cmp
jmp
inc
cmp
xor
push
add
repz
mov
cmp
repz
push
pop
outs
repz
repz
lea
iret
stos
mov
leave
rcr
fwait
int
cmp
icebp
sti
pop
repz
fxch
lds
mov
popf
xchg
mov
repz
jg
imul
cmp
repz
cmp
and
repz
mov
repz
into
out
or
add
not
pop
mov
mov
jns
out
sahf
xchg
fidiv
sahf
gs
jns
in
jns
clc
xchg
sub
push
xor
daa
jge
bound
xchg
sahf
out
fmulp
push
ret
mov
sahf
out
xor
inc
dec
pop
out
sahf
out
jae
xchg
fwait
movs
(bad)
jne
jg
iret
repz
xchg
popf
cmps
mov
pop
adc
dec
or
adc
add
int3
add
inc
pop
add
push
push
jmp
mov
dec
add
sahf
jmp
or
sbb
fstp
push
popf
add
sub
lahf
mov
movs
push
test
mov
mov
and
scas
add
push
scas
out
mov
push
mov
mov
sbb
mov
mov
mov
movs
sub
push
and
fnstenv
mov
cmp
or
cmp
and
out
mov
fnstsw
das
mov
mov
mov
es
inc
mov
mov
out
dec
inc
dec
inc
mov
dec
dec
push
dec
dec
push
push
dec
ficomp
imul
push
push
push
mov
(bad)
outs
fistp
int
sbb
push
rcl
adc
aad
push
fld
cs
add
es
fmulp
push
das
leave
cmp
ins
mov
add
and
sub
fadd
xor
int
std
mov
push
in
and
out
call
add
and
inc
inc
xor
in
cmp
loopne
cmp
add
add
fwait
in
mov
sahf
pop
pop
retf
pusha
push
imul
sub
cmp
jns
data16
in
mov
pop
push
jbe
push
in
inc
pop
push
popa
pop
mov
pop
shl
push
out
add
sahf
jle
push
cmp
mov
cmp
mov
add
adc
(bad)
add
mov
out
and
mov
jmp
push
je
mov
jmp
inc
(bad)
call
xor
fdivrp
push
add
push
or
ss
jmp
jmp
ins
fstp
pop
das
es
push
inc
jle
pop
nop
je
int
mov
mov
test
(bad)
fdiv
(bad)
in
jmp
push
adc
xor
jns
out
dec
pop
imul
popf
scas
rcl
jns
out
add
or
repz
out
push
and
ds
pop
repnz
jp
mov
add
data16
ins
add
add
add
add
ins
ss
int
inc
add
pop
xor
xchg
data16
jno
xchg
mov
enter
cmp
jae
ss
bound
repz
mov
enter
in
sub
sahf
out
sahf
dec
imul
adc
xor
hlt
push
div
xchg
cmp
sti
xor
out
sahf
out
aas
push
arpl
out
sahf
mov
outs
mov
or
adc
jle
and
sub
iret
repz
pop
jno
cmps
mov
add
stc
cmove
add
add
sub
jbe
mov
or
or
gs
int
sbb
pop
pop
add
or
sti
cdq
jb
mov
sub
ja
retf
sar
ins
mov
adc
pop
mov
mov
adc
out
int3
repz
pop
pop
push
mov
or
jmp
adc
push
popa
cmp
arpl
and
pop
push
xor
adc
jle
or
mov
fstp
or
push
popa
sub
pop
ret
cld
and
or
jo
mov
or
pop
pusha
adc
dec
sbb
mov
jle
and
push
pop
adc
xor
ror
sbb
fimul
pop
mov
fisub
neg
cmp
inc
pop
outs
arpl
repz
imul
adc
pusha
(bad)
cmp
cmp
jno
push
inc
and
mov
fdivrp
pop
xor
sub
push
inc
pusha
dec
mov
and
mov
mov
dec
dec
pusha
arpl
adc
or
fild
pop
dec
pusha
data16
mov
or
pop
dec
dec
aas
js
sbb
cmp
popa
test
shl
mov
cmp
add
inc
fiadd
outs
int3
xor
pop
pop
mov
inc
dec
dec
dec
add
xor
ficomp
mov
aaa
mov
push
cmp
dec
pop
add
push
adc
jb
enter
rol
add
ins
mov
jg
pop
pop
movsx
xchg
xchg
pop
add
add
loope
in
std
xchg
mov
in
std
clc
xor
inc
add
out
push
push
or
pop
fsubp
sbb
(bad)
punpcklbw
aas
clc
add
shr
push
inc
psraw
iret
es
(bad)
inc
pop
xor
xchg
push
lds
aas
dec
in
add
int
inc
pushf
add
push
push
jae
sub
sbb
lods
jmp
mov
push
mov
(bad)
cmp
aas
mov
mov
add
and
mov
outs
sub
sub
xor
mov
sub
mov
inc
inc
lods
push
inc
mov
dec
out
inc
inc
push
dec
push
push
mov
add
mov
hlt
add
mov
out
cmp
out
push
shr
rcr
mov
cs
push
sbb
push
fstp
ret
xor
hlt
push
ins
pop
cmp
daa
and
xchg
mov
sub
sub
add
sub
cmp
ficom
push
aas
in
out
sub
add
sub
xor
jmp
add
mov
cmp
push
dec
ret
rcr
pop
int3
add
inc
(bad)
mov
outs
push
jbe
les
jge
mov
inc
aaa
jae
retf
idiv
ins
mov
inc
jecxz
push
dec
jle
dec
push
outs
in
outs
movs
jmp
add
jmp
in
cmp
pop
push
jnp
icebp
sbb
jge
out
push
mov
fmul
jbe
mov
shl
mov
shl
mov
rcl
sub
mov
es
add
call
pop
dec
dec
mov
inc
dec
add
add
inc
dec
and
dec
and
sub
and
or
push
mov
cmp
inc
push
inc
aas
and
and
adc
push
sbb
add
sahf
mov
or
movups
adc
or
aas
inc
lock
or
adc
pop
and
dec
mov
aas
adc
es
inc
pusha
bound
add
addr16
jle
es
sub
sti
(bad)
sar
push
sbb
sbb
adc
ja
jmp
aas
cmp
inc
jb
jl
aaa
pop
outs
inc
cmp
xor
mov
xor
push
bound
cmp
aas
sub
cmp
ds
xchg
mov
ss
xor
cmp
dec
add
cmp
das
xor
cmp
stc
dec
mov
rol
repz
push
add
add
jb
and
js
add
call
call
icebp
sbb
add
cld
add
adc
xor
bound
popf
aaa
cmps
shl
or
push
mov
dec
mov
lods
push
movs
push
stos
add
js
loopne
cmp
test
lods
jbe
xor
test
fisubr
gs
(bad)
jmp
mov
sbb
fiadd
aas
cmp
add
fiadd
sub
in
out
call
movs
lods
rcr
push
fld
pop
push
inc
jno
sub
outs
jg
lds
mov
dec
jno
out
out
or
inc
(bad)
jle
fiadd
aam
dec
push
shl
aaa
dec
arpl
xor
fnstcw
iret
(bad)
lock
add
push
lods
or
jo
fadd
mov
in
lock
cmp
jae
sbb
sub
iret
repz
inc
dec
pop
jno
popf
loope
repz
leave
fisttp
cmps
imul
mov
adc
cmp
imul
inc
mov
add
mov
xchg
sub
dec
adc
mov
rcr
es
pop
adc
adc
push
vmrun
scas
or
push
or
repz
lods
and
sub
and
and
ins
daa
pop
sbb
sub
and
dec
push
or
pop
fcomip
cmp
xchg
add
push
ds
dec
pop
adc
add
loope
mov
and
lahf
data16
or
jb
sti
aad
sub
sbb
dec
repz
jns
push
sbb
movs
cmps
test
sub
jle
(bad)
sbb
adc
sub
mov
aam
test
add
sar
cmp
sbb
scas
unpcklps
and
add
sbb
test
sbb
mov
cpuid
test
pop
add
add
push
sbb
and
add
pop
repnz
mov
cmp
stos
or
jo
mov
inc
lods
cmp
inc
rcr
out
scas
xchg
add
mov
push
mov
popa
add
add
mov
and
popf
pop
sahf
sbb
jbe
loopne
and
mov
mov
inc
dec
xchg
jg
mov
push
and
push
jo
or
xchg
and
mov
dec
dec
mov
lods
ror
es
stos
add
aaa
int
out
sbb
mov
mov
sbb
imul
bound
mov
push
fs
xor
inc
inc
cwde
not
inc
adc
mov
or
jle
sbb
xchg
jns
mov
and
inc
rcl
add
les
lods
and
retf
add
iret
ror
xor
cmps
adc
dec
cmp
sub
xor
add
xor
xor
sar
sbb
enter
call
fisubr
loop
fsub
sbb
xor
(bad)
dec
lods
fmul
xor
loop
mov
adc
loope
adc
aam
das
loopne
fstp
cdq
js
add
adc
jo
add
adc
or
pusha
pop
loope
add
icebp
xchg
or
cld
add
mov
cld
call
test
push
sub
sbb
out
stos
xor
and
jle
push
adc
loopne
push
in
adc
jmp
cld
and
and
addr16
ds
pop
in
add
add
xor
mov
inc
out
test
lahf
or
mov
sub
pop
mov
fimul
or
or
add
dec
rcl
aam
sbb
fcomp
xor
fwait
cmps
(bad)
loopne
sbb
in
inc
mov
shr
cmp
shl
inc
sbb
js
add
outs
imul
push
fxch
push
fbld
sbb
jecxz
call
in
lahf
add
adc
outs
sub
or
mov
lock
pusha
pop
or
sub
dec
add
add
leave
jl
mov
and
out
stos
cmp
pop
shr
sub
shl
mov
imul
inc
mov
(bad)
push
and
test
add
push
dec
mov
popa
cwde
or
(bad)
repnz
lods
mov
leave
push
call
add
xchg
icebp
inc
push
pusha
mov
mov
xchg
pop
mov
sub
add
add
inc
in
mov
rol
push
jbe
stc
mov
test
and
jle
sub
rcr
bound
sub
daa
ret
in
loop
or
clc
fcomp
push
pop
sbb
(bad)
mov
aam
mov
test
cmps
add
xchg
loope
dec
and
mov
push
jecxz
sbb
rcr
xchg
movs
leave
jl
in
shl
cwde
cmp
sub
loopne
ret
cmc
mov
rol
call
dec
pop
sbb
push
loope
xchg
popa
dec
push
cs
pusha
movs
push
cmp
inc
sbb
sbb
aam
mov
jmp
sbb
cld
imul
mov
mov
or
adc
(bad)
imul
inc
and
lods
push
mov
jnp
jecxz
jp
mov
int
loopne
add
sbb
add
adc
adc
sbb
and
nop
cmps
mov
test
mov
or
xor
jle
dec
gs
push
pop
xor
ret
stos
dec
add
xchg
ins
push
or
ret
clc
into
cld
sbb
rol
cdq
retf
neg
mov
xchg
xchg
ins
gs
nop
add
js
xchg
cmp
sub
ins
xchg
icebp
add
out
es
loopne
pop
xchg
xchg
add
retf
js
dec
add
dec
(bad)
add
jns
sbb
fwait
out
xor
pop
cld
sbb
rcl
mov
outs
and
iret
repz
sbb
adc
xchg
push
add
xor
stc
in
push
push
cdq
lea
sbb
sbb
fdivrp
mov
xchg
call
xor
out
sbb
ja
outs
push
mov
movs
faddp
out
cmps
test
out
sahf
xchg
push
and
mov
jle
iret
rcl
test
pop
sub
mov
jg
enter
inc
ja
jecxz
jmp
into
pop
sbb
pop
push
mov
jg
add
mov
in
xchg
mov
mov
data16
push
mov
xor
or
scas
and
or
mov
and
push
mov
mov
sub
push
xchg
int
enter
neg
(bad)
xor
test
mov
and
xchg
ja
arpl
dec
jle
sahf
inc
or
or
fidivr
pop
adc
mov
and
and
mov
adc
jle
push
push
sbb
fldenv
mov
aaa
ins
add
sbb
sti
or
push
lahf
enter
cmp
jle
mov
mov
retf
push
jmp
or
jle
push
mov
out
cmp
sbb
mov
mov
sub
add
jle
push
iret
out
mov
jmp
ins
stos
xchg
lods
mov
cli
jle
fwait
outs
push
ret
and
sub
sbb
cmp
cmps
fldcw
rol
(bad)
cmp
add
stc
sub
sbb
adc
push
pop
mov
push
outs
or
cmps
push
sar
jle
push
cwde
retf
call
jbe
(bad)
jl
jmp
xchg
outs
adc
push
(bad)
enter
mul
int
shl
fwait
fwait
out
aam
xlat
cld
(bad)
fadd
test
ins
fisttp
cmp
or
out
clc
aaa
outs
mov
nop
std
test
pop
jg
repz
(bad)
dec
retf
repz
pop
(bad)
xchg
(bad)
(bad)
jmp
popa
je
dec
(bad)
jmp
inc
sar
sbb
aaa
jmp
push
mov
sbb
outs
cmc
pop
push
and
jg
(bad)
mov
mov
cmp
outs
pop
push
fldenv
js
cmp
in
xchg
push
fnstsw
push
lahf
cmps
loopne
in
(bad)
js
adc
and
addr16
cmp
(bad)
adc
ror
dec
(bad)
out
mov
cmp
ins
frstor
pop
add
fiadd
jecxz
in
jg
push
out
stos
add
jecxz
push
loopne
xor
lds
fidivr
scas
aam
fadd
add
out
out
or
jns
call
rol
inc
cs
push
sbb
nop
mov
jo
dec
loope
out
jne
or
call
xchg
ret
sbb
adc
mov
add
and
iret
data16
push
fdiv
loop
out
call
nop
add
inc
sbb
fiadd
movs
xchg
data16
imul
jmp
jle
add
in
sahf
add
pop
push
fadd
ss
pop
into
rcl
sahf
out
cmp
sbb
fcomp
fdivr
add
(bad)
sar
push
in
call
or
xor
loop
dec
mov
fcmovnu
pop
push
(bad)
jmp
jg
outs
pop
stos
push
sbb
jecxz
and
test
pushf
sbb
sbb
fstp
fstp
(bad)
jecxz
std
ret
les
pop
ins
ss
cmp
add
push
dec
out
out
push
mov
es
push
sbb
add
pop
inc
pop
clc
jg
dec
mov
nop
sbb
add
add
mov
lock
add
repnz
bound
add
maxps
cmp
add
add
leave
into
popf
xchg
add
cmp
loopne
add
add
push
nop
mov
and
push
nop
add
push
add
fsubr
rcr
lods
push
js
aad
cs
ds
cmp
cld
neg
sahf
dec
mov
push
or
cmps
into
out
cmp
and
daa
jo
push
stos
es
ror
dec
cmps
test
add
add
and
test
pop
pop
(bad)
lods
scas
pop
sbb
in
fs
sahf
jmp
sbb
ins
pop
movs
sbb
mov
scas
adc
cmp
ja
pop
push
rcr
and
fwait
ss
dec
pop
add
mov
push
mov
into
rol
push
pop
clts
lahf
xchg
(bad)
xor
sbb
es
inc
mov
push
mov
mov
out
aas
popf
inc
daa
jo
mov
pop
js
push
add
das
scas
data16
adc
mov
mov
ret
mov
imul
push
sahf
add
fild
movs
lds
sbb
test
mov
stos
sub
ror
add
sub
out
sub
int
push
mov
jne
pop
pop
xor
push
adc
xstore-rng
cmps
add
test
or
movs
ss
daa
iret
rol
inc
rol
pop
xchg
xor
jbe
shr
(bad)
out
out
fiadd
fdivp
loope
(bad)
dec
pusha
or
add
dec
sahf
das
pop
sbb
ret
and
mov
add
out
mul
xlat
jnp
add
(bad)
imul
pop
fsub
sbb
out
push
ror
xor
sbb
adc
jle
call
iret
(bad)
xlat
mov
scas
fiadd
push
inc
push
test
into
in
(bad)
fiadd
into
adc
bound
jle
stc
push
out
pop
not
not
sbb
(bad)
jmp
sbb
dec
push
mov
enter
push
loope
jecxz
or
(bad)
jecxz
call
and
(bad)
shr
lds
and
fisubr
push
dec
xlat
pop
inc
shl
mov
(bad)
(bad)
call
lds
and
mov
(bad)
inc
out
out
(bad)
cmp
out
das
and
out
mov
repz
scas
jecxz
push
pop
add
lock
inc
cmp
rol
pop
clc
sbb
lock
cld
imul
inc
shl
add
pop
add
or
add
mov
dec
jmp
cmps
xor
(bad)
jbe
jae
push
mov
sbb
add
adc
cmps
mov
add
sbb
imul
xchg
cmps
add
and
cmp
adc
and
adc
inc
adc
adc
adc
mov
inc
add
mov
jnp
or
adc
adc
lods
ins
pusha
arpl
sub
xor
inc
mov
fistp
inc
adc
inc
rol
or
call
jae
jns
sub
pusha
push
test
mov
push
xor
and
or
in
add
test
push
adc
mov
mov
(bad)
push
pop
imul
adc
and
shl
adc
test
cmp
jnp
xor
add
jo
dec
inc
or
adc
test
jo
inc
and
and
daa
inc
lea
js
mov
sbb
mov
mov
inc
xor
bound
xchg
cmp
inc
and
dec
adc
addr16
dec
jo
mov
mov
mov
ret
pusha
push
imul
leave
xor
add
test
sub
sub
cmc
rcl
(bad)
fist
adc
push
and
mov
mov
ret
lds
retf
popa
fs
push
dec
ret
ins
mov
sbb
jg
or
xlat
das
pop
mov
or
push
dec
adc
dec
inc
lock
shl
adc
jmp
nop
mov
lods
mov
fs
out
in
sbb
inc
push
retf
sbb
jo
js
push
xor
imul
addr16
aaa
rol
test
xchg
inc
jg
(bad)
arpl
mov
iret
mov
mov
cmps
and
or
rcl
adc
retf
inc
adc
sub
jne
jae
push
pop
scas
dec
inc
dec
sub
in
loop
adc
push
pop
inc
mov
mov
inc
pop
aas
mov
jl
not
mov
and
pop
hlt
inc
adc
add
sub
xor
dec
adc
mov
popa
jp
jae
test
sbb
mov
and
inc
dec
sbb
pop
outs
sbb
adc
mov
loope
outs
pop
push
shl
pop
inc
add
sbb
cmps
arpl
inc
xchg
sar
push
outs
push
adc
sub
push
rol
test
adc
xchg
loopne
mov
push
sbb
pop
jo
movs
adc
or
xchg
das
fcomp
pop
and
xchg
call
add
sub
repz
or
push
or
dec
inc
pusha
mov
mov
adc
xor
stc
ja
in
jne
mov
push
dec
inc
call
mov
xchg
push
pop
xchg
sub
cmp
jmp
dec
(bad)
aad
out
push
jp
enter
outs
in
xor
ss
daa
out
sbb
pop
(bad)
mov
mov
movs
imul
xor
or
lods
jbe
push
or
jnp
sub
adc
xchg
or
mov
cmp
or
xor
sub
sbb
inc
sbb
add
jmp
jmp
push
and
push
adc
or
or
push
push
xchg
adc
push
pop
(bad)
(bad)
(bad)
call
mov
pop
add
ins
ss
movs
nop
sbb
or
push
and
das
push
or
(bad)
jmp
or
pop
push
adc
push
adc
adc
and
pop
or
add
(bad)
(bad)
(bad)
call
es
inc
pop
adc
dec
and
push
adc
sbb
pop
inc
jns
and
or
xor
(bad)
call
sub
adc
push
push
out
push
xor
and
and
push
sbb
or
inc
cmp
or
ss
sbb
(bad)
(bad)
inc
xor
add
inc
es
xchg
dec
xor
adc
adc
sbb
sbb
add
(bad)
(bad)
adc
xor
adc
cmp
nop
xor
inc
test
add
sub
sbb
cmp
(bad)
(bad)
inc
aaa
push
or
sete
cmp
xor
jbe
retf
and
adc
jbe
or
adc
mov
or
or
bound
pop
and
or
pop
xchg
adc
(bad)
inc
pop
aaa
push
sbb
cli
add
rol
xor
ja
addr16
push
lock
add
(bad)
push
inc
add
or
rol
push
add
push
adc
pop
pandn
lock
add
fdivr
(bad)
sahf
add
pop
adc
adc
sbb
sbb
push
(bad)
aas
adc
pop
adc
dec
sbb
push
push
adc
xor
aaa
sbb
sub
outs
dec
add
loop
mov
add
cmp
push
or
adc
adc
cwde
ret
push
add
clc
(bad)
dec
sub
sub
or
sbb
sbb
or
and
sub
mov
and
cs
or
sbb
or
std
call
bound
clc
or
or
adc
adc
pop
and
and
adc
sub
cmp
dec
dec
sub
dec
mov
or
daa
sub
pop
inc
ror
add
das
es
fmul
xchg
push
retf
clc
xor
adc
daa
push
or
or
push
wbinvd
or
jmp
clc
add
adc
and
cmp
je
or
or
and
dec
sbb
xor
push
adc
sub
(bad)
dec
push
or
adc
rdpmc
and
adc
adc
mov
or
sbb
adc
aam
cld
outs
mov
push
sbb
inc
adc
lock
lock
adc
pop
and
xchg
cmp
div
or
add
push
jo
imul
add
or
call
adc
add
jg
push
sub
setb
pop
push
ret
mov
sbb
dec
xchg
push
or
xchg
inc
fwait
mov
imul
add
push
jmp
pop
cld
jmp
push
movs
inc
adc
adc
sub
push
pop
adc
or
cvtps2pd
mov
fcomip
sub
dec
lock
add
pop
and
sbb
jg
mov
out
cs
cs
sub
adc
test
and
push
sub
dec
sbb
sbb
into
mov
call
std
aad
lock
push
cdq
iret
pop
push
dec
pop
push
adc
adc
cmp
dec
dec
inc
es
push
ds
es
pop
push
xor
push
cmp
fist
and
pushf
cmp
lock
aaa
pop
mov
sar
pushf
(bad)
fstp
(bad)
sub
pop
add
sbb
sbb
add
in
push
sahf
cs
or
adc
scas
(bad)
out
jle
push
aas
bound
adc
add
stos
call
sub
sub
inc
or
push
movhps
xor
daa
ds
mov
cmp
adc
and
pop
adc
push
or
pop
scas
sub
mov
hlt
scas
cmps
sbb
or
sbb
fs
sub
or
cmc
(bad)
jmp
push
adc
adc
pop
sub
xor
or
sbb
cmp
ins
sbb
stos
in
dec
push
pop
enter
aas
pushf
add
mov
jg
sbb
add
cmp
dec
pop
push
sbb
jne
pop
xor
daa
add
ja
inc
or
and
sbb
cmp
jg
outs
cmp
xor
and
push
pop
cmp
aad
mov
push
xor
xor
or
push
hlt
daa
outs
push
fild
adc
or
or
dec
and
push
add
cmps
out
out
or
or
or
sub
clc
call
push
cs
sub
sub
push
cmps
adc
mov
sub
movs
and
xor
bound
pop
cmps
mov
daa
push
sbb
adc
xor
and
sbb
jg
call
sub
push
add
or
(bad)
push
pop
sub
cmp
cs
cmp
jno
sub
adc
das
inc
sub
pop
or
pop
sbb
add
sbb
adc
adc
aaa
cld
sbb
sbb
aaa
lods
inc
adc
mov
sub
clc
fistp
adc
sbb
and
or
sbb
mov
sub
pop
addr16
adc
pop
dec
push
adc
scas
cli
ja
push
add
mov
dec
imul
or
popa
scas
push
js
or
imul
lock
sbb
jb
es
push
add
add
ret
cld
pop
adc
adc
adc
and
adc
mov
lods
adc
dec
xor
push
pop
or
sub
sub
fisub
pop
sbb
and
or
mov
xor
test
or
inc
adc
and
sbb
add
xor
push
push
sub
fild
clc
sub
pop
xor
and
push
inc
push
or
aas
das
daa
push
fidiv
fdivp
xchg
inc
adc
xor
sub
sub
inc
mov
or
adc
call
or
cld
pop
or
push
lock
add
lock
add
push
cmp
fisubr
imul
inc
inc
cmp
cmp
dec
dec
pop
push
and
sbb
and
adc
and
lods
mov
mov
or
xor
sub
and
fucom
push
cmp
sub
push
and
jns
xor
sbb
and
fidiv
push
sbb
cmp
push
push
sbb
mov
xlat
neg
inc
and
das
mov
das
sub
push
pop
inc
and
(bad)
fcomip
dec
xor
js
pop
pop
pop
sbb
nop
test
and
add
lock
add
inc
dec
inc
pop
pop
and
imul
xchg
push
or
xor
mov
pop
add
cmp
sub
sti
jg
and
cmp
sbb
inc
xor
movs
xor
add
test
push
and
and
push
sub
jnp
loopne
pop
and
inc
daa
pop
inc
and
ds
fbstp
and
and
sub
mov
push
sbb
cmp
add
inc
ss
inc
aaa
and
and
inc
xor
sub
xor
pop
and
and
cmp
inc
pop
sbb
sub
or
and
cmp
xor
clc
xchg
(bad)
(bad)
cmp
push
sub
or
fwait
cmp
pop
in
jns
das
and
ins
sub
and
movs
cmp
scas
jp
add
adc
jne
sub
inc
push
or
stos
inc
cmp
es
sbb
xor
lods
inc
jno
arpl
mov
call
call
test
cmps
add
push
inc
xchg
xor
es
cld
add
inc
inc
lds
and
push
xor
arpl
adc
pop
sbb
pop
mov
ins
js
adc
adc
cld
push
in
clc
push
add
stos
and
sbb
lock
div
add
pop
cmp
dec
push
scas
es
push
ss
scas
sbb
das
adc
sbb
nop
dec
cli
(bad)
jg
and
mov
jmp
cmp
dec
jge
and
dec
or
lods
or
xchg
cmp
sar
jo
leave
(bad)
jge
pop
and
das
sub
fbld
and
sub
or
push
and
xchg
lock
or
gs
out
sti
mov
xor
or
dec
dec
adc
inc
or
(bad)
mov
into
dec
lock
daa
inc
inc
pushf
push
mov
xor
sbb
mov
mov
or
daa
xor
push
adc
mov
std
iret
(bad)
call
movs
pop
or
or
bound
xor
pop
add
outs
cmps
inc
addr16
dec
pop
outs
mov
ss
mov
popa
xor
shr
add
jb
pop
push
aas
aaa
or
pop
fidiv
push
adc
movhps
adc
std
es
rol
sub
out
cmovs
sbb
pop
or
lock
add
jl
cmp
dec
lock
and
inc
inc
lock
or
lock
push
add
lock
pop
dec
pusha
(bad)
ds
pop
adc
lock
sub
adc
das
xor
pop
add
sub
inc
mov
int
add
push
jns
js
outs
les
adc
aaa
push
jne
jo
xor
loope
std
dec
xor
and
lods
pushf
pop
lea
sub
and
daa
(bad)
fild
or
sub
xchg
mov
rol
aaa
sbb
inc
les
push
mov
popa
inc
shl
adc
call
(bad)
inc
mov
sahf
sbb
shl
stos
sbb
xor
add
lock
add
adc
mov
sub
add
aam
ins
xchg
mov
and
pop
adc
pop
fmul
adc
fst
fadd
or
push
mov
(bad)
(bad)
(bad)
out
dec
push
or
push
adc
or
or
or
sar
push
dec
cmp
adc
sub
adc
mov
and
sub
pop
and
mov
out
lock
inc
lock
das
adc
lock
push
arpl
add
pop
(bad)
add
(bad)
mov
dec
sub
adc
jo
pop
ss
or
adc
int3
pop
push
test
jecxz
inc
daa
inc
inc
or
adc
jg
sbb
nop
pop
(bad)
lahf
fiadd
cmp
adc
fcomi
mov
psubsb
inc
sub
sbb
into
ror
or
add
pop
lock
xlat
add
leave
dec
(bad)
(bad)
inc
sub
loopne
sbb
xchg
pop
dec
inc
js
das
adc
and
daa
pop
xor
lock
jmp
adc
lock
pop
arpl
cmp
nop
dec
jge
ds
inc
sub
pop
or
or
adc
push
loope
sbb
lock
or
sbb
mov
push
and
int3
js
and
xor
adc
push
or
or
or
(bad)
lahf
and
sbb
inc
sub
xor
stc
mov
or
push
or
add
jmp
sub
lock
or
sbb
(bad)
sbb
add
inc
daa
inc
sub
mov
outs
jp
add
cmp
sbb
cmp
lock
fidivr
add
(bad)
scas
push
gs
adc
adc
(bad)
jg
inc
in
lock
push
adc
adc
and
adc
adc
mov
xchg
mov
mov
add
in
sbb
add
into
retf
adc
jle
dec
push
inc
add
mov
push
and
sbb
adc
add
sbb
int
ret
add
adc
loop
sbb
xor
jbe
mov
dec
cmp
call
in
lock
add
cmp
rol
mov
sbb
int3
(bad)
clc
push
pop
or
or
or
push
push
inc
or
mov
(bad)
call
in
inc
or
sub
and
or
push
ja
sub
psignd
or
mov
mov
dec
fsub
push
ins
push
jle
or
sar
jg
dec
adc
sbb
adc
xor
inc
or
sbb
adc
push
mov
je
xor
bound
fmul
sbb
push
test
adc
or
push
or
and
sub
sbb
jp
or
dec
adc
adc
add
sbb
jl
mov
syscall
add
and
and
or
div
pop
or
adc
or
adc
add
scas
push
xor
sub
push
pop
lahf
cdq
out
adc
(bad)
pop
sub
sub
aas
nop
xor
lock
ret
aam
in
fwait
inc
loopne
call
sbb
pop
mov
mov
add
outs
or
jecxz
push
push
or
push
or
jne
cmp
scas
push
inc
sbb
adc
ins
add
jae
cmp
cmp
xor
inc
cwde
cs
xor
ins
pop
jne
in
sysexit
push
call
clc
(bad)
jmp
mov
sub
inc
dec
lds
dec
dec
dec
dec
outs
call
(bad)
nop
dec
pop
pop
adc
cmp
push
push
and
xor
inc
lock
add
mov
push
sbb
and
inc
push
clc
and
xchg
or
add
idiv
ret
adc
pop
xor
xchg
mov
jle
mov
sbb
sbb
xor
adc
and
add
into
add
lock
sbb
shld
cmp
cmp
pop
sbb
sbb
inc
repz
and
xor
sahf
xor
test
or
ss
sub
adc
shl
or
not
or
pop
mov
push
push
adc
xchg
adc
aaa
mov
add
mov
addps
mov
fld
pop
or
inc
pusha
jne
mov
adc
aaa
inc
pop
xor
pop
cmp
arpl
dec
add
mov
push
mov
jo
sar
in
adc
adc
das
lock
push
or
lock
aaa
or
mov
test
pop
lods
loope
mov
push
inc
pop
popf
xor
iret
add
adc
fcom
dec
and
sahf
add
inc
push
jecxz
(bad)
mov
pop
and
add
adc
mov
jp
clc
(bad)
inc
push
pop
adc
adc
and
push
adc
sbb
or
push
inc
adc
aad
(bad)
jmp
xor
ds
lock
mov
or
mov
rol
shl
sar
das
sbb
add
nop
add
lock
xor
jge
jle
add
pop
loopne
fsub
dec
xor
ins
imul
jle
adc
add
sbb
push
or
or
jo
ins
dec
mov
retf
sub
stos
pushf
(bad)
push
dec
mov
adc
add
push
adc
call
das
aaa
out
push
fs
cld
ja
push
bound
sub
inc
cld
ja
dec
out
or
adc
mov
jl
pop
sub
cli
aad
adc
cdq
rol
add
jae
clc
adc
lock
add
das
jecxz
sub
pop
pop
(bad)
out
fild
inc
xor
lods
es
mov
mov
lock
add
pop
push
cmp
pop
add
or
sbb
pop
jge
or
push
aaa
pop
pop
xchg
cmps
sbb
adc
add
imul
cmp
xor
stos
jle
pop
jns
ror
loop
push
mov
ins
js
mov
add
ins
shr
ds
and
and
js
stos
push
push
sub
and
call
lock
sub
cmp
(bad)
xor
and
sbb
or
or
cmp
stc
or
aas
mov
push
or
bound
iret
or
adc
xor
inc
adc
loopne
cdq
lock
std
xlat
icebp
pop
aam
add
and
or
and
or
add
imul
push
add
invlpg
and
push
adc
cwde
sub
add
fisub
add
add
add
push
and
and
add
or
loopne
ins
push
or
add
add
xor
mov
adc
lock
add
pop
jbe
sbb
or
add
mov
ins
cmps
adc
cmp
or
rcr
ficom
je
movs
adc
dec
mov
int
(bad)
jmp
or
mov
fwait
push
ins
add
fbld
dec
pop
fldenv
add
and
inc
mov
xor
add
pop
cmp
cdq
fild
inc
adc
(bad)
jae
dec
xchg
cld
pop
shr
mov
add
jg
cld
rol
fdiv
shl
add
fild
cmp
add
adc
ret
sbb
add
mov
add
and
cs
ins
inc
dec
and
imul
rol
out
inc
cs
leave
cmps
stc
ins
dec
mov
inc
add
rcr
xlat
ror
jb
cmp
fidivr
pop
outs
bswap
cmps
dec
ds
push
inc
add
ss
dec
add
retf
jne
cmp
pop
add
mov
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
xor
add
add
add
add
add
add
add
add
xor
add
loopne
add
push
add
sbb
add
nop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
js
add
mov
add
add
add
or
add
lock
or
add
sbb
add
inc
add
or
add
add
nop
add
or
add
mov
add
add
add
add
add
add
add
or
add
add
add
rol
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
jmp
add
add
in
add
add
add
add
add
or
add
add
cwde
lock
add
add
add
add
add
add
or
add
add
inc
or
add
in
add
add
add
add
add
or
add
sbb
add
add
in
add
add
add
add
add
or
add
sbb
add
in
add
add
add
add
add
or
add
add
add
inc
push
add
add
add
add
add
add
or
add
add
add
inc
pop
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
cmp
pop
add
add
in
add
add
add
add
add
or
add
pusha
pop
add
add
add
add
add
add
or
add
xchg
add
add
add
add
add
add
or
add
add
add
xchg
pop
add
add
in
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
in
add
add
add
add
add
or
add
add
ins
stos
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
fwait
pop
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
or
add
add
add
lahf
pop
add
add
add
add
add
add
push
add
dec
add
dec
add
mov
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
cmp
xchg
sahf
add
ds
add
or
add
shr
add
and
add
fiadd
or
mov
cs
or
out
xchg
xchg
loop
pop
pop
(bad)
add
push
cmps
add
push
jle
xchg
xchg
rol
data16
push
mov
add
push
stos
add
es
add
ds
add
or
add
jmp
xchg
add
repnz
add
push
repnz
push
mov
xor
out
add
stos
add
loop
add
push
repnz
sahf
test
push
mov
push
push
out
add
push
cmps
add
push
into
add
and
add
adc
add
push
fiadd
push
push
mov
mov
(bad)
add
ss
dec
dec
rol
or
mov
add
push
out
add
fiadd
push
push
xchg
mov
call
dec
dec
mov
add
push
xchg
add
test
or
add
shl
add
sub
add
push
mov
add
pop
jmp
sbb
add
sub
add
push
mov
xor
add
scas
add
loop
add
push
fiadd
xchg
xchg
fiadd
mov
mov
add
shr
add
or
add
or
add
data16
sbb
cmps
add
push
add
outs
into
add
sbb
add
push
scas
add
into
add
or
add
test
or
add
(bad)
inc
push
push
jmp
xor
add
cmps
add
loop
add
push
test
xchg
out
add
push
repnz
or
add
mov
xchg
xchg
rol
dec
dec
(bad)
add
cs
call
dec
dec
retf
xchg
fiadd
push
push
call
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
xor
xor
xor
pop
pop
pop
dec
pop
pop
pop
pop
pop
pop
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
pf2id
sbb
sbb
jne
jne
jne
jne
dec
pop
pop
pop
jg
xor
xor
pop
pop
pop
pop
pop
(bad)
(bad)
jo
addr16
sbb
sbb
dec
inc
jne
jne
jne
jne
xor
xor
pop
add
cmp
cmp
cmp
cmp
addr16
sub
add
sbb
sbb
jne
jne
jne
xor
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
sbb
jne
add
add
add
add
add
jp
jp
jp
jp
jp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
add
add
add
add
add
add
add
add
add
add
add
jp
jp
jp
cmp
cmp
cmp
cmp
cmp
addr16
es
and
push
push
push
push
push
push
push
push
add
add
add
add
add
add
add
jp
jp
jp
jp
cmp
cmp
add
adc
adc
inc
or
ja
es
push
push
push
push
push
push
push
add
add
add
add
add
add
jp
add
adc
adc
gs
adc
adc
adc
adc
es
push
push
push
push
push
add
add
add
add
sub
sub
gs
pusha
pusha
pusha
pusha
pusha
pusha
adc
adc
adc
adc
adc
adc
adc
es
push
push
push
add
sub
sub
punpckhwd
gs
sub
sub
sub
sub
pusha
pusha
pusha
pusha
pusha
pusha
pusha
adc
adc
adc
adc
adc
adc
es
or
or
or
adc
or
or
or
sub
sub
sub
sub
sub
sub
pusha
pusha
pusha
pusha
adc
adc
adc
adc
add
push
push
push
adc
add
inc
daa
daa
daa
dec
or
or
or
or
or
or
sub
sub
sub
sub
sub
pusha
pusha
pusha
add
xor
xor
pop
xor
sbb
gs
xor
xor
push
push
push
push
push
or
or
or
or
or
sub
sub
sub
add
sbb
sbb
dec
sbb
xor
gs
xor
xor
xor
xor
xor
xor
push
push
push
push
push
or
or
or
or
add
fs
gs
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
xor
xor
push
push
push
or
cmp
cmp
cmp
cmp
cmp
xor
adc
fs
sbb
sbb
sbb
sbb
xor
xor
xor
xor
add
add
add
add
add
add
gs
cmp
cmp
cmp
cmp
cmp
fs
sbb
sbb
sbb
xor
add
push
push
push
push
push
push
push
push
push
push
add
sub
add
add
add
add
cmp
cmp
cmp
fs
sbb
add
cs
gs
push
push
push
push
push
add
add
add
add
add
cmp
cmp
cmp
fs
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
sbb
gs
push
push
push
push
push
add
add
add
add
cmp
cmp
pop
pop
bound
bound
bound
pop
pop
fs
adc
pop
pop
pop
pop
pop
pop
pop
pop
cs
push
push
push
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
push
adc
bound
bound
pop
pop
pop
pop
pop
pop
pop
pop
pop
cs
push
push
push
add
add
or
or
or
or
or
or
or
dec
dec
dec
dec
dec
jo
bound
bound
pop
pop
pop
pop
pop
pop
pop
cs
add
or
or
or
or
or
or
or
or
or
sbb
dec
dec
dec
dec
bound
bound
pop
pop
pop
pop
pop
pop
add
inc
inc
inc
inc
inc
inc
xor
xor
xor
inc
inc
inc
inc
push
and
or
or
or
or
dec
dec
bound
bound
pop
pop
pop
add
xor
xor
xor
xor
xor
xor
xor
xor
push
push
inc
inc
inc
pop
or
or
or
or
dec
dec
bound
pop
add
xor
and
and
and
and
and
and
and
dec
cmp
xor
xor
xor
or
or
or
dec
dec
dec
dec
bound
xor
and
and
and
imul
imul
imul
cmp
xor
xor
xor
or
or
or
dec
dec
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
adc
adc
cmp
jb
sub
es
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
js
jns
cmp
or
or
sub
sub
sub
sub
pusha
pusha
pusha
pusha
add
add
fs
xor
push
jns
sbb
sbb
sbb
xor
xor
xor
xor
push
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
pop
or
jae
add
add
cmp
cmp
cmp
cmp
add
add
bound
bound
bound
bound
bound
dec
dec
and
pop
pop
pop
pop
pop
pop
cs
push
push
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
and
ins
and
or
or
or
dec
dec
dec
bound
add
add
add
imul
imul
dec
ins
jbe
adc
and
xor
xor
inc
inc
inc
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
pop
add
aas
add
jg
cmp
add
add
add
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
inc
cmp
add
push
sahf
add
mov
add
(bad)
out
add
cs
add
or
add
cs
add
or
add
sbb
add
sbb
add
out
or
ret
push
jle
xchg
xchg
out
push
push
mov
or
fiadd
repnz
add
out
xchg
xchg
repnz
adc
add
push
mov
push
push
cmps
add
scas
add
loop
add
or
add
repnz
or
add
shr
add
or
add
ss
push
push
out
add
or
add
or
add
push
xchg
xchg
xchg
out
add
push
xchg
add
push
repnz
push
into
add
and
add
push
jmp
call
call
add
mov
mov
jmp
mov
add
push
mov
add
or
add
(bad)
repnz
or
add
xor
add
or
add
push
scas
add
fiadd
or
mov
push
add
push
xchg
add
or
add
(bad)
inc
add
add
adc
add
mov
or
mov
add
push
mov
add
cmp
add
or
add
push
mov
push
push
call
and
add
xchg
fiadd
mov
out
add
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
das
das
das
inc
inc
inc
inc
das
das
das
das
dec
dec
dec
dec
adc
adc
adc
dec
dec
dec
dec
dec
adc
adc
pop
pop
pop
pop
pop
pop
pop
das
das
das
das
das
das
das
das
arpl
xor
xor
xor
xor
xor
xor
cmp
push
push
dec
dec
adc
adc
pop
arpl
add
add
add
pop
pop
pop
pop
pop
pop
push
or
xor
xor
dec
dec
dec
dec
dec
adc
inc
inc
inc
inc
sbb
add
add
add
add
add
pop
pop
xor
xor
xor
arpl
push
push
push
push
add
push
push
push
push
push
inc
inc
inc
inc
inc
inc
add
add
add
add
arpl
dec
dec
dec
dec
dec
dec
push
xor
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
add
and
and
and
dec
push
pop
and
and
and
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
arpl
inc
inc
inc
inc
dec
add
dec
bound
aaa
push
pop
pop
pop
pop
and
and
and
and
dec
dec
push
push
arpl
sub
sub
sub
or
pusha
or
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
and
and
arpl
adc
adc
adc
dec
and
dec
add
sub
sub
sub
sub
pop
pop
pop
arpl
cs
or
dec
dec
dec
dec
adc
adc
adc
adc
sub
sub
arpl
add
add
add
add
pop
dec
cmp
cs
dec
dec
adc
adc
adc
es
add
and
inc
inc
inc
add
add
add
add
cs
dec
arpl
push
push
push
push
push
push
push
push
inc
inc
dec
dec
dec
push
push
es
inc
inc
add
add
add
arpl
cmp
cmp
cmp
cmp
cmp
inc
daa
dec
dec
dec
dec
push
push
push
push
push
push
es
inc
add
arpl
or
or
or
or
or
push
add
cmp
cmp
dec
dec
dec
push
push
push
push
push
es
ss
sub
ss
or
or
or
cmp
cmp
push
push
push
arpl
sub
sub
sbb
sbb
sbb
sbb
pop
xor
xor
sub
ss
or
or
cmp
dec
dec
arpl
sub
sbb
push
push
push
push
push
push
push
ds
pop
sbb
sub
sub
ss
or
or
cmp
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
sbb
sbb
push
push
push
push
push
push
push
push
inc
inc
inc
add
arpl
sub
sub
sub
sub
inc
inc
push
cmp
pop
pop
pop
pop
pop
pop
and
and
and
dec
arpl
arpl
cs
xor
sub
adc
adc
adc
sub
arpl
arpl
push
push
push
push
push
push
push
push
push
sbb
adc
es
inc
inc
add
add
arpl
arpl
arpl
or
or
or
or
or
push
xor
or
cmp
cmp
dec
push
arpl
arpl
arpl
arpl
push
push
push
push
push
push
push
pop
cmp
and
sbb
sub
sub
dec
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
cmp
add
push
call
or
add
repnz
or
add
out
inc
inc
inc
fiadd
or
mov
add
push
test
push
add
ret
push
push
cmps
add
push
out
add
adc
add
mov
add
or
add
or
add
loop
push
push
scas
add
push
mov
add
xor
add
push
mov
(bad)
(bad)
inc
or
mov
or
add
push
mov
or
stos
add
push
test
call
push
push
sahf
add
or
add
test
or
add
repnz
add
test
or
add
or
add
push
xchg
push
push
stos
add
push
repnz
push
xchg
add
mov
add
push
rol
push
push
jmp
xchg
fiadd
dec
dec
retf
add
add
add
adc
adc
and
and
xor
xor
add
add
daa
daa
daa
xor
cmp
pop
sbb
sbb
sub
add
add
cmp
adc
sbb
xor
(bad)
pf2iw
cmp
sub
push
push
push
push
sbb
cmp
adc
and
or
or
push
push
sub
sub
and
and
das
cmp
or
sub
pop
sub
cmp
pop
or
or
and
xor
or
cmp
adc
and
sub
pop
pop
and
cmp
and
xor
adc
sub
cmp
push
push
cmp
sbb
sbb
cmp
or
sbb
pop
pop
pop
sub
cmp
and
add
cmp
cmp
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
(bad)
inc
add
push
add
add
add
add
add
add
add
and
add
add
and
or
add
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
sbb
add
or
add
sbb
add
dec
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
sbb
add
and
or
test
or
test
call
or
hlt
or
pushf
hlt
or
pushf
hlt
or
popf
hlt
or
popf
hlt
or
popf
hlt
or
popf
hlt
or
popf
hlt
or
popf
hlt
or
popf
hlt
xor
lods
not
mov
not
mov
clc
xor
stos
test
call
or
test
xchg
test
xchg
test
or
clc
or
xchg
stc
or
xchg
stc
or
xchg
cli
or
(bad)
cli
or
mov
or
(bad)
cld
or
mov
or
mov
or
mov
add
and
add
and
or
cmc
or
call
or
or
popf
hlt
or
sahf
repz
sahf
repz
lahf
repz
lahf
repz
lahf
repnz
mov
repnz
mov
repnz
mov
repnz
scas
hlt
push
push
mov
not
mov
div
xor
hlt
or
popf
hlt
or
pushf
hlt
or
fwait
cmc
or
call
or
test
xchg
test
or
or
xchg
stc
or
xchg
cli
or
(bad)
cli
or
mov
or
(bad)
cld
or
mov
add
and
add
and
or
hlt
or
popf
hlt
or
sahf
repz
lahf
repz
lahf
repnz
mov
repnz
mov
icebp
or
mov
icebp
or
mov
icebp
or
mov
icebp
or
mov
icebp
xor
mov
pop
pop
mov
cmc
pop
pop
mov
div
xor
repnz
lahf
repnz
lahf
repz
sahf
repz
popf
hlt
or
pushf
hlt
or
fwait
cmc
or
call
or
test
or
stc
or
xchg
stc
or
xchg
cli
or
(bad)
sti
or
mov
add
and
or
repz
mov
repnz
mov
icebp
or
mov
lock
movs
lock
movs
lock
movs
lock
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
xor
mov
pop
pop
ret
pop
shl
inc
mov
repz
scas
repnz
mov
icebp
or
mov
repnz
mov
repz
sahf
repz
popf
hlt
or
pushf
hlt
or
call
or
test
or
or
xchg
stc
or
nop
mov
add
add
or
mov
repnz
mov
icebp
or
movs
lock
movs
lock
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
or
test
or
test
or
test
out
or
test
out
or
test
out
or
test
out
or
test
or
test
or
cmps
out
or
cmps
out
or
cmps
out
or
movs
lock
movs
lock
movs
lock
mov
icebp
or
mov
repnz
sahf
repz
popf
hlt
or
pushf
hlt
or
fwait
cmc
or
cdq
test
cwde
test
xchg
test
or
add
add
add
add
or
mov
lock
movs
lock
cmps
out
or
cmps
out
or
cmps
out
or
test
or
test
in
or
stos
in
or
stos
in
or
stos
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
or
stos
in
or
stos
in
or
stos
in
or
test
out
or
test
or
cmps
out
or
cmps
out
or
cmps
out
or
movs
lock
mov
icebp
or
mov
repnz
sahf
repz
popf
hlt
or
pushf
hlt
or
call
or
test
add
and
add
and
or
out
or
cmps
out
or
test
or
test
in
or
stos
in
or
lods
in
or
lods
in
or
lods
in
or
scas
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
in
or
lods
in
or
lods
in
or
stos
in
or
stos
in
or
test
out
or
cmps
out
or
cmps
out
or
movs
lock
mov
icebp
or
mov
repnz
sahf
repz
popf
hlt
or
fwait
cmc
or
call
or
and
add
and
cmps
loopne
or
out
or
test
in
or
lods
in
or
lods
in
or
mov
or
nop
out
or
call
or
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
jmp
or
jmp
or
in
or
lods
in
or
stos
in
or
test
out
or
cmps
out
or
cmps
out
or
movs
lock
mov
icebp
or
mov
repz
popf
hlt
or
pushf
hlt
or
call
add
and
add
and
test
in
or
stos
in
or
lods
in
or
scas
jmp
or
jmp
(bad)
(bad)
call
shr
cld
cwde
cwde
iret
neg
sbb
jmp
or
or
mov
or
or
mov
or
or
mov
or
or
jmp
or
mov
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
cmps
out
or
movs
lock
mov
repnz
lahf
repnz
sahf
repz
pushf
hlt
or
call
add
and
stos
in
or
lods
in
or
lods
jmp
or
jmp
or
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
stc
(bad)
pop
pop
mov
or
scas
call
or
or
mov
out
or
mov
out
or
mov
or
or
mov
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
lods
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repnz
mov
repz
pushf
hlt
add
add
add
add
or
lods
in
or
scas
jmp
or
jmp
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
stos
out
or
or
mov
in
or
mov
in
or
mov
in
or
mov
out
or
mov
or
or
jmp
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repnz
mov
repz
add
add
add
or
scas
jmp
or
jmp
mov
or
or
mov
pop
pop
shr
in
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
cld
or
lods
out
or
mov
jecxz
or
mov
jecxz
or
mov
in
or
mov
in
or
mov
or
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
repnz
lahf
repnz
add
push
push
pop
xor
mov
or
mov
or
mov
or
or
mov
call
das
das
(bad)
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
or
shl
push
shl
push
shl
push
shl
push
shl
push
shl
or
mov
jecxz
or
mov
in
or
mov
out
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
repnz
push
push
xor
add
add
or
jmp
mov
or
or
mov
in
sbb
or
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aam
sti
or
cwde
out
or
out
or
jecxz
push
(bad)
loopne
push
(bad)
loopne
push
ret
loopne
push
ret
loope
push
ret
push
shl
or
mov
jecxz
or
mov
out
or
mov
or
or
jmp
or
scas
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
inc
or
mov
or
mov
or
or
mov
or
or
shl
or
shl
pop
(bad)
repz
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
(bad)
fimul
push
(bad)
fimul
push
(bad)
fisttp
push
(bad)
fisttp
push
(bad)
push
ret
loopne
push
ret
push
shl
or
mov
in
or
mov
out
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
movs
lock
mov
cmp
add
add
mov
or
mov
or
or
mov
in
or
mov
jecxz
push
shl
push
ret
loope
lods
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
retf
fisttp
push
retf
push
leave
fisttp
push
enter
(bad)
fimul
push
(bad)
fisttp
push
(bad)
loopne
push
ret
loope
push
shl
or
mov
in
or
mov
out
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
add
mov
or
mov
or
or
mov
in
or
mov
loop
push
ret
push
(bad)
loopne
inc
shl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
bswap
fisttp
push
int
push
push
int3
fmul
push
retf
fisttp
push
retf
push
enter
(bad)
fisttp
push
(bad)
push
ret
loope
push
shl
or
mov
in
or
mov
out
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
movs
lock
mov
add
mov
or
mov
or
or
mov
in
or
mov
loop
push
ret
loope
push
(bad)
loopne
push
(bad)
(bad)
xlat
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
bswap
fmul
(bad)
fimul
(bad)
fimul
(bad)
fimul
bswap
fisttp
push
int
push
push
retf
fmul
push
retf
push
enter
(bad)
fisttp
push
(bad)
loopne
push
ret
or
mov
in
or
mov
out
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
test
out
or
cmps
out
or
movs
pop
or
mov
or
mov
or
or
mov
in
or
mov
loop
push
ret
loope
push
(bad)
push
(bad)
fbstp
fucomip
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
std
cs
push
push
ret
fisttp
psrlq
(bad)
psrld
(bad)
(bad)
fimul
bswap
fisttp
push
int3
fmul
push
retf
fisttp
push
leave
fimul
push
(bad)
fisttp
push
(bad)
push
ret
loope
push
shl
or
mov
in
or
mov
or
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
js
add
add
mov
or
mov
or
or
mov
in
or
mov
loop
push
ret
push
(bad)
loopne
push
(bad)
fisttp
push
enter
cmc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
sti
pop
pop
shr
or
loope
psrlw
(bad)
(bad)
fimul
bswap
fisttp
push
int3
fmul
push
retf
fisttp
push
leave
fimul
push
(bad)
fisttp
push
(bad)
push
ret
loope
push
shl
or
mov
in
or
mov
out
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
js
add
add
mov
or
mov
or
or
mov
in
or
mov
loop
push
shl
push
ret
loopne
push
(bad)
push
(bad)
fild
aam
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
bswap
fisttp
bswap
fisttp
push
int
push
push
retf
fmul
push
retf
push
enter
(bad)
fisttp
push
(bad)
loopne
push
ret
loope
push
shl
or
mov
in
or
mov
or
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
js
add
add
mov
or
mov
or
or
mov
or
or
mov
jecxz
or
ret
push
ret
loopne
push
(bad)
push
(bad)
fbld
fucomi
repz
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
int3
fmul
push
retf
fmul
push
retf
fisttp
push
leave
fisttp
push
enter
(bad)
fisttp
push
(bad)
push
ret
loopne
push
ret
or
mov
in
or
mov
out
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
js
add
add
scas
xchg
or
mov
or
mov
or
or
mov
in
or
mov
jecxz
or
ret
push
ret
loopne
push
(bad)
loopne
push
(bad)
fistp
pop
retf
loope
sahf
jmp
stc
(bad)
(bad)
(bad)
dec
push
leave
fimul
push
enter
enter
(bad)
fisttp
push
(bad)
fisttp
push
(bad)
push
ret
loopne
push
ret
or
mov
in
or
mov
out
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
xchg
or
lods
mov
or
jmp
or
jmp
mov
or
or
mov
in
or
mov
loop
push
shl
push
ret
push
ret
loope
push
(bad)
loopne
push
(bad)
push
(bad)
push
(bad)
fisttp
push
(bad)
fisttp
push
(bad)
fisttp
push
(bad)
push
(bad)
loopne
push
ret
loopne
push
ret
loope
push
shl
or
mov
jecxz
or
mov
out
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
movs
lock
mov
add
lods
mov
or
jmp
or
jmp
or
jmp
mov
or
or
mov
in
or
mov
jecxz
or
shl
push
shl
push
ret
push
ret
push
ret
loope
push
ret
loope
push
ret
loope
push
ret
push
ret
push
shl
push
ret
or
mov
in
or
mov
out
or
mov
or
or
jmp
or
scas
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
add
stos
mov
or
in
or
scas
jmp
or
jmp
or
jmp
mov
or
or
mov
in
or
mov
in
or
mov
jecxz
or
shl
or
(bad)
xor
iret
jmp
xor
enter
mov
in
or
mov
out
or
mov
or
or
jmp
or
scas
jmp
or
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
mov
add
add
test
in
or
lods
in
or
lods
jmp
or
jmp
or
jmp
mov
or
or
mov
or
or
mov
in
or
mov
in
or
(bad)
call
pop
pop
shr
pop
pop
shr
pop
pop
shr
xor
(bad)
jmp
or
or
mov
or
or
mov
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
mov
add
add
cmps
ror
test
or
stos
in
or
stos
in
or
lods
in
or
scas
jmp
or
jmp
mov
or
mov
or
or
mov
or
or
mov
out
or
mov
jmp
pop
pop
shr
pop
pop
shr
pop
pop
iret
out
xor
ret
jmp
mov
or
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
lods
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repnz
lahf
aam
add
add
or
out
or
test
or
test
in
or
lods
in
or
lods
in
or
scas
jmp
or
jmp
mov
or
mov
or
mov
or
or
mov
or
or
mov
xor
ret
jmp
pop
into
out
pop
pop
int
pop
pop
int
pop
pop
int
xor
shr
or
mov
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
stos
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repnz
lahf
repnz
sahf
repz
add
or
mov
lock
movs
lock
cmps
out
or
test
or
test
in
or
lods
in
or
lods
in
or
scas
jmp
or
jmp
or
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
xor
jmp
pop
int3
out
pop
pop
retf
out
pop
pop
retf
lock
pop
retf
lock
inc
(bad)
or
jmp
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
lods
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
movs
lock
mov
repnz
lahf
repnz
sahf
repz
pushf
hlt
or
mov
or
or
mov
or
(bad)
test
or
test
xchg
test
xchg
test
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
cmc
push
push
mov
xchg
xchg
retf
xchg
retf
xchg
enter
(bad)
sti
(bad)
pop
sti
or
xchg
test
xchg
test
nop
test
(bad)
test
or
clc
or
mov
or
mov
or
mov
or
mov
or
mov
or
xchg
or
xchg
or
test
or
cmp
or
dec
or
add
or
hlt
or
xchg
hlt
or
xchg
hlt
or
xchg
repz
cwde
repz
cdq
repnz
cdq
repnz
call
or
icebp
or
pushf
icebp
or
pushf
icebp
or
pushf
icebp
or
pushf
lock
pushf
lock
pushf
icebp
push
push
mov
cwde
cwde
sar
xchg
xchg
iret
stc
xchg
xchg
int
xchg
xchg
retf
stc
jo
mov
repnz
cdq
repnz
cwde
repnz
cwde
repz
xchg
repz
xchg
hlt
or
xchg
hlt
or
xchg
cmc
or
xchg
cmc
or
xchg
test
xchg
test
(bad)
test
or
stc
or
mov
or
mov
or
mov
add
add
or
icebp
or
popf
lock
sahf
lock
lahf
out
or
mov
out
or
mov
out
or
mov
in
or
movs
in
or
movs
in
or
movs
in
or
movs
in
or
movs
in
or
movs
in
push
push
mov
neg
xchg
sar
xchg
xchg
sar
imul
out
or
mov
out
or
mov
out
or
sahf
lock
popf
lock
pushf
icebp
or
fwait
icebp
or
cdq
repnz
cwde
repz
xchg
repz
xchg
hlt
or
xchg
cmc
or
xchg
cmc
or
xchg
test
(bad)
pop
or
mov
fimul
or
in
or
test
or
test
jmp
stos
jmp
or
lods
jmp
or
lods
call
or
scas
call
push
push
(bad)
sahf
fcomi
pushf
pushf
(bad)
call
not
mov
jmp
test
jmp
or
in
or
movs
in
or
movs
in
or
mov
out
or
mov
out
or
popf
lock
pushf
icebp
or
call
or
add
stos
sub
or
fimul
lods
jmp
or
scas
out
or
out
or
out
or
mov
or
or
mov
or
or
mov
xor
shr
mov
fcomip
pushf
pushf
fdiv
cdq
cdq
fdiv
inc
inc
shr
or
mov
or
mov
or
scas
out
or
call
or
stos
jmp
or
test
or
cmps
in
or
movs
in
or
mov
out
or
mov
sub
or
mov
or
mov
or
or
mov
or
or
mov
loope
or
mov
loopne
push
mov
loopne
xor
out
mov
sahf
loopne
fdiv
xor
ret
in
or
mov
jecxz
or
mov
or
or
out
or
out
or
call
or
stos
jmp
cmps
fisttp
or
or
or
mov
loop
or
mov
fisttp
push
ret
push
ret
fimul
push
(bad)
push
(bad)
fmul
push
(bad)
fmul
push
(bad)
fdiv
ss
cmps
cmps
jmp
lahf
jecxz
pushf
pushf
fcomip
sbb
(bad)
fisttp
push
rcr
push
mov
loope
or
mov
jecxz
or
mov
or
mov
or
mov
or
scas
call
or
stos
sub
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
inc
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
xchg
push
add
add
add
add
add
add
add
and
add
add
adc
or
add
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
sbb
add
or
add
push
add
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pop
add
add
add
add
add
or
cwde
test
cdq
test
call
or
or
sahf
repz
sahf
repz
sahf
repz
sahf
repz
sahf
repz
sahf
repz
push
mov
not
mov
test
or
cmc
or
cdq
test
xchg
test
or
or
xchg
cli
or
(bad)
cli
or
mov
or
mov
add
add
add
add
or
(bad)
cmc
or
popf
hlt
or
sahf
repz
lahf
repnz
mov
repnz
mov
icebp
or
mov
icebp
or
mov
icebp
pop
pop
shl
pop
mov
cmc
push
push
mov
repnz
lahf
repz
sahf
repz
popf
hlt
or
fwait
hlt
or
call
or
clc
or
xchg
stc
or
xchg
cli
or
test
add
add
add
and
or
repnz
mov
lock
movs
lock
cmps
out
or
cmps
out
or
cmps
out
or
cmps
out
or
test
or
test
or
test
pop
pop
ret
repz
pop
ret
hlt
pop
pop
ret
pop
ret
or
lock
mov
repnz
lahf
repnz
sahf
repz
pushf
hlt
or
call
or
clc
or
mov
add
cmp
or
jge
or
xchg
repnz
movs
lock
cmps
out
or
cmps
out
or
test
in
or
stos
in
or
stos
in
or
lods
in
or
lods
in
or
lods
in
or
lods
in
xor
mov
in
pop
pop
mov
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
icebp
or
mov
repz
pushf
hlt
or
call
or
dec
or
xchg
or
out
or
stos
in
or
stos
in
or
xchg
out
or
cdq
in
or
lods
jmp
or
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
scas
jmp
or
jmp
or
in
or
lods
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repnz
sahf
repz
fwait
hlt
or
mov
or
jl
or
nop
inc
or
xchg
out
or
stos
in
or
lods
in
or
scas
jmp
(bad)
cwde
iret
neg
sbb
or
or
mov
or
or
mov
or
or
jmp
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
movs
lock
mov
repnz
sahf
repz
mov
or
xchg
add
add
add
or
call
or
jmp
or
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
call
aam
sti
sbb
lahf
jmp
or
mov
in
or
mov
out
or
mov
or
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
cmc
or
mov
add
add
add
add
test
or
sahf
in
or
mov
or
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aam
sti
sbb
cmps
call
or
or
mov
jecxz
or
mov
in
or
mov
or
or
jmp
or
lods
jmp
or
in
or
test
out
or
movs
lock
xchg
repz
call
add
add
scas
jne
or
call
or
or
into
jmp
repz
std
(bad)
(bad)
(bad)
(bad)
mov
or
in
or
in
or
ret
loope
push
ret
push
shl
or
mov
in
or
mov
or
or
jmp
or
scas
jmp
or
in
or
test
out
or
fwait
icebp
or
mov
add
add
add
mov
or
mov
or
or
mov
or
or
xlat
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
repnz
outs
(bad)
out
push
push
ret
push
shl
push
shl
push
mov
loop
or
mov
or
or
mov
or
lods
jmp
test
in
or
movs
out
or
movs
lock
mov
add
add
add
mov
or
or
mov
in
or
shl
push
ret
loopne
in
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
leave
lock
push
retf
push
enter
(bad)
fisttp
push
(bad)
loopne
push
shl
or
mov
in
or
mov
or
mov
or
scas
jmp
or
in
or
test
out
or
movs
js
add
add
add
add
mov
or
or
mov
in
or
ret
push
(bad)
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
(bad)
(bad)
fimul
bswap
fisttp
push
retf
fmul
push
leave
fimul
push
(bad)
fisttp
push
ret
loopne
push
shl
or
mov
out
or
mov
or
mov
or
lods
in
or
stos
in
or
cmps
out
or
movs
js
add
add
add
add
mov
or
or
mov
in
or
ret
push
(bad)
pop
int3
loopne
repz
std
(bad)
(bad)
(bad)
(bad)
mov
or
int3
fimul
bswap
fimul
push
int
push
push
retf
push
(bad)
fisttp
push
(bad)
loopne
push
shl
or
mov
out
or
mov
or
mov
or
lods
jmp
or
in
or
test
or
movs
xchg
or
mov
or
mov
or
or
mov
jecxz
push
shl
push
(bad)
loopne
push
(bad)
fisttp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
int
push
push
retf
fmul
push
leave
fimul
push
(bad)
fisttp
push
ret
loopne
push
shl
or
mov
out
or
mov
or
mov
or
lods
jmp
or
in
or
test
or
movs
mov
add
add
add
add
scas
mov
or
jmp
or
or
mov
jecxz
push
shl
push
(bad)
loopne
push
(bad)
fild
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
leave
fisttp
push
enter
(bad)
fisttp
push
(bad)
loopne
push
ret
or
mov
in
or
mov
or
mov
or
mov
or
lods
in
or
stos
in
or
cmps
out
or
movs
mov
add
add
add
add
lods
mov
or
jmp
mov
or
or
mov
jecxz
or
ret
push
(bad)
loopne
jo
in
xlat
xlat
idiv
(bad)
(bad)
(bad)
dec
push
(bad)
push
(bad)
loopne
push
ret
loope
push
shl
or
mov
in
or
mov
or
or
jmp
lods
in
or
test
out
or
movs
mov
add
add
add
add
stos
mov
or
jmp
or
jmp
mov
or
or
mov
in
or
shl
or
shl
push
shl
push
shl
or
mov
jecxz
or
mov
out
or
mov
or
mov
or
scas
jmp
stos
in
or
test
or
cmps
out
or
mov
add
add
add
test
in
or
lods
in
or
scas
jmp
mov
or
or
mov
in
or
mov
in
xor
call
xor
(bad)
call
or
or
mov
or
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
movs
lock
mov
add
add
add
or
out
or
stos
in
or
lods
in
or
scas
jmp
or
jmp
mov
or
or
mov
or
or
iret
out
pop
pop
iret
out
pop
pop
iret
out
pop
pop
into
out
or
or
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
or
cmps
out
or
movs
lock
mov
repz
add
add
add
or
mov
lock
cmps
out
or
test
in
or
lods
in
or
scas
jmp
or
jmp
or
jmp
mov
or
mov
or
mov
pop
pop
int3
out
pop
pop
int3
out
pop
pop
retf
lock
pop
retf
lock
mov
or
mov
or
mov
or
scas
jmp
or
in
or
stos
in
or
test
out
or
cmps
out
or
movs
lock
mov
repz
popf
hlt
or
mov
or
mov
or
(bad)
test
or
cmc
or
xchg
cmc
or
xchg
cmc
or
xchg
hlt
or
xchg
hlt
or
xchg
hlt
or
xchg
hlt
or
xchg
hlt
xchg
xchg
retf
sti
xchg
xchg
retf
sti
xchg
xchg
leave
sti
nop
nop
(bad)
or
test
xchg
test
nop
test
or
stc
or
mov
or
mov
or
xchg
or
test
or
cmp
or
add
add
add
or
hlt
or
cwde
repz
cdq
repnz
call
or
or
sahf
lock
lahf
out
or
lahf
out
or
lahf
out
or
lahf
out
mov
sar
xchg
xchg
into
stc
add
lock
pushf
icebp
or
fwait
icebp
or
cdq
repnz
cwde
repz
xchg
hlt
or
xchg
hlt
or
xchg
cmc
or
xchg
test
(bad)
test
or
pop
or
sahf
pop
or
mov
out
or
mov
in
or
cmps
in
or
cmps
in
or
test
or
test
or
test
jmp
int
fwait
fwait
xlat
neg
je
hlt
or
cmps
in
or
movs
in
or
movs
in
or
mov
out
or
lahf
out
or
popf
lock
fwait
icebp
or
cdq
repnz
xchg
repz
xchg
hlt
or
xchg
pop
or
cmps
pop
or
test
jmp
scas
call
or
mov
or
mov
or
or
mov
jge
aam
lahf
lahf
(bad)
(bad)
ins
ins
retf
or
out
or
call
or
stos
jmp
or
cmps
jmp
or
out
or
mov
lock
pushf
pop
or
scas
push
or
mov
or
or
mov
or
or
mov
loope
or
xlat
in
mov
popf
fcomip
push
push
retf
jmp
or
mov
or
or
mov
or
scas
call
or
test
in
or
mov
add
or
mov
loope
push
mov
fimul
push
(bad)
fisttp
push
(bad)
fmul
push
(bad)
fcomp
(bad)
mov
lahf
loop
push
push
shr
push
push
rcr
push
mov
loop
or
mov
or
or
out
or
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
js
or
pushf
hlt
or
sahf
repz
mov
repnz
mov
icebp
or
mov
repnz
sahf
repz
pushf
hlt
or
cdq
test
xchg
test
or
add
add
or
mov
or
out
or
test
in
or
stos
in
or
test
out
or
cmps
out
or
mov
repnz
pushf
hlt
or
cdq
test
jle
add
add
or
or
lods
in
or
xchg
out
or
fwait
in
or
mov
or
mov
or
mov
or
mov
or
lods
in
or
stos
in
or
cmps
out
or
mov
repz
mov
or
test
or
scas
jmp
or
jmp
cwde
cwde
shl
or
movs
call
or
or
mov
or
mov
or
lods
in
or
test
or
movs
lock
popf
mov
add
or
scas
mov
or
jmp
pop
pop
shr
repz
std
mov
in
or
mov
in
or
mov
or
lods
in
or
test
or
mov
add
mov
or
or
shl
jo
in
repnz
std
lea
iret
call
or
or
mov
or
mov
or
stos
in
or
cmps
mov
add
add
mov
or
or
ret
push
enter
sti
std
leave
leave
jmp
push
push
shl
push
push
leave
fisttp
push
(bad)
loopne
or
mov
jmp
or
test
add
add
or
mov
or
or
shl
push
(bad)
fist
repnz
std
pop
pop
shr
push
leave
fimul
push
ret
loopne
or
mov
jmp
or
test
add
add
or
scas
into
or
mov
or
or
shl
push
(bad)
loopne
sahf
call
std
push
push
ret
loopne
or
mov
out
or
jmp
or
cmps
rol
add
add
test
jmp
or
jmp
or
or
mov
jecxz
or
mov
out
or
jmp
or
test
lock
add
or
movs
lock
test
in
or
mov
or
mov
or
xor
jmp
dec
enter
mov
call
or
lods
jmp
or
in
or
movs
lock
mov
add
or
test
fwait
hlt
or
popf
hlt
or
sahf
repz
lahf
repz
push
mov
cli
dec
dec
mov
or
pushf
hlt
or
call
or
stc
or
mov
add
add
or
cmps
mov
or
scas
call
or
push
leave
in
lahf
lahf
(bad)
dec
dec
ret
or
call
or
cmps
jmp
or
movs
or
scas
prefetchw
mov
loopne
push
(bad)
fnsave
mov
retf
push
mov
jecxz
or
lods
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
stos
push
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
xor
add
add
and
test
add
or
and
add
add
and
test
add
or
add
add
add
add
push
add
lock
push
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
push
add
ins
add
add
add
je
popa
add
add
add
add
add
jb
imul
add
add
add
sbb
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
ins
add
jae
push
add
add
add
and
dec
add
jae
je
popa
add
add
jb
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
outs
add
je
add
js
add
add
add
sub
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outs
add
jo
outs
add
popa
add
add
add
add
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
add
js
add
add
add
sbb
add
outs
add
add
je
dec
add
ins
add
add
add
inc
add
add
add
add
ins
add
jae
push
add
add
add
and
dec
add
jae
je
popa
add
add
jb
add
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
inc
xor
scas
push
add
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
fs
outs
fs
arpl
or
and
and
gs
outs
fs
je
jae
gs
bound
or
and
and
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
and
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
arpl
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
and
or
and
jo
ins
imul
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
ds
jae
jo
outs
jb
gs
push
ds
and
and
jne
jo
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
ds
jae
jo
outs
jb
gs
push
ds
and
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
cmp
jae
jbe
cmp
jo
imul
and
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
jae
jbe
cmp
outs
outs
ja
push
gs
imul
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outs
ja
push
gs
imul
or
and
and
and
jo
inc
ja
jb
ds
jne
cmp
fs
inc
ja
jb
ds
and
popa
jae
jbe
cmp
outs
outs
ja
push
gs
imul
and
cmp
popa
jae
jbe
cmp
jo
imul
ds
jae
gs
bound
push
fsub
pop
add
mov
pop
add
movs
pop
add
movs
pop
add
pop
add
movs
pop
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
add
add
pop
add
add
add
push
add
add
add
add
add
ja
add
mov
add
add
popa
addr16
bound
jne
je
outs
cs
mov
inc
sub
mov
clc
hlt
xor
mov
sub
fadd
xor
lahf
repnz
clc
pop
out
mov
dec
cmp
jg
xor
(bad)
jecxz
ins
loope
xor
mov
jp
inc
lds
xchg
ja
xchg
push
or
imul
add
sub
xchg
pop
add
ins
push
add
mul
jp
jmp
jno
add
test
and
shl
push
dec
sub
and
test
aad
outs
addr16
(bad)
adc
dec
loopne
pop
push
cmps
dec
ror
pusha
lods
sub
bound
lahf
test
cmps
or
add
add
sti
lock
xor
dec
dec
js
and
call
inc
adc
and
outs
cmp
or
test
imul
pop
push
jl
mov
sub
loop
js
call
add
mov
(bad)
mov
movs
jmp
scas
sub
dec
mov
shl
ret
mov
sar
(bad)
mov
pop
int3
in
add
dec
arpl
sub
aaa
inc
or
inc
jns
fs
mov
sub
push
jl
jbe
add
daa
stos
push
test
test
jnp
push
sub
in
xchg
push
loopne
sti
push
xor
sahf
xchg
mov
shr
neg
or
or
jg
fs
or
mov
ret
inc
push
nop
push
mov
(bad)
adc
test
(bad)
cmps
mov
inc
iret
fwait
(bad)
sti
sbb
dec
lea
mov
push
mov
test
cmp
pusha
call
ret
xor
push
call
cmps
add
scas
pop
mov
push
rol
dec
rcl
pop
jp
cmp
out
xchg
sar
pop
fcom
mov
gs
scas
dec
dec
mov
dec
and
inc
cmp
push
mov
pop
(bad)
mov
fmul
or
dec
add
ss
mov
mov
inc
(bad)
pop
jb
mov
xor
sub
push
cmp
mov
mov
leave
mov
push
inc
sbb
lock
jle
mov
stc
xor
int3
aas
(bad)
mov
add
jmp
jmp
inc
fistp
inc
add
push
dec
(bad)
pop
ret
pop
or
enter
dec
mov
adc
add
add
add
add
cmps
adc
jg
add
outs
add
add
add
add
popa
addr16
bound
jne
je
outs
imul
gs
addr16
shl
jbe
lods
add
xchg
leave
add
leave
xchg
xchg
and
cld
mov
inc
hlt
or
xor
aas
sub
jns
push
pop
(bad)
out
sub
add
xchg
sub
adc
xchg
(bad)
xlat
add
in
repz
out
cdq
in
jl
arpl
sbb
add
mov
sbb
aas
retf
bound
into
mov
sahf
fs
clc
xor
xchg
movs
pop
adc
and
dec
cmps
push
xlat
ds
shl
cmc
ss
mov
aam
in
xor
push
cmovs
jl
push
arpl
add
and
dec
fdivr
les
jnp
push
adc
jmp
(bad)
js
ret
cmps
pop
ins
fs
jp
jecxz
call
popa
mov
mov
dec
mov
retf
aam
outs
outs
adc
retf
test
scas
stc
sbb
cmps
mov
inc
ret
movs
dec
popa
cmps
fld
fstp
cdq
add
mov
adc
stos
jge
ja
push
and
repz
mov
push
loope
mov
not
dec
mov
lods
lea
sub
aas
or
push
lods
jae
out
jns
push
sbb
(bad)
int
jno
adc
jl
shl
xchg
push
adc
push
test
bnd
add
mov
push
jbe
les
pop
stos
mov
push
call
aaa
lahf
xchg
cmp
push
outs
xor
mov
fs
sub
repnz
fldcw
dec
ror
clc
adc
mov
test
pop
push
ret
les
xchg
call
jg
(bad)
stc
sahf
data16
cmp
jo
push
cmps
mov
adc
loopne
aam
(bad)
std
mov
(bad)
mov
pop
sub
in
ret
movs
leave
sbb
cmp
pop
imul
xlat
xchg
sub
xchg
mov
lods
aaa
push
push
inc
mov
xchg
pop
std
mov
xchg
out
fwait
call
repz
add
xor
es
fwait
xchg
sbb
lods
mov
lea
cmp
jle
ss
in
into
mov
xchg
cmp
dec
push
push
xor
mov
mov
daa
cmp
leave
scas
out
mov
cmps
or
aaa
mov
add
sbb
sar
xchg
aam
ficomp
adc
sbb
cmp
dec
out
push
add
into
retf
mov
lea
imul
arpl
imul
loope
adc
jecxz
mov
pop
ins
cmc
add
in
mov
add
sbb
add
test
mov
stos
movs
shr
add
imul
dec
ficomp
and
mov
mov
int
sahf
cdq
inc
jbe
popf
retf
addr16
repnz
jae
das
cmp
repnz
adc
push
outs
das
jno
push
scas
dec
cli
push
jl
in
mov
inc
mov
stos
iret
push
or
cmp
pop
sub
add
or
sub
call
cmps
dec
mov
sbb
pop
mov
ss
add
aad
les
add
add
add
add
cli
ins
outs
hlt
add
add
add
add
add
add
popa
addr16
bound
ins
outs
jae
jo
outs
addr16
ins
cs
addr16
jmp
jmp
sub
sbb
std
push
repz
or
jp
adc
cmp
mov
push
pop
inc
inc
or
or
mov
(bad)
ja
cmps
mov
sub
inc
and
clc
xor
adc
inc
xchg
clc
and
dec
int3
xor
pop
into
hlt
push
lods
inc
inc
cli
push
xor
lds
and
dec
aaa
enter
cmp
out
fsub
pop
(bad)
in
movs
push
das
bound
(bad)
outs
mov
scas
sub
fst
cld
scas
xor
inc
mov
pop
dec
sbb
cmp
ins
pop
out
or
(bad)
xchg
fmul
sub
mov
ds
dec
sbb
mov
xor
js
aad
jl
and
sbb
xchg
cmps
mov
cmps
jecxz
out
out
test
or
mov
jbe
mul
push
fld
js
or
jo
push
add
lock
sbb
dec
jg
sub
mov
retf
pusha
popf
xchg
in
or
mov
test
rcl
mov
mov
cmp
fs
rcr
or
lea
and
lock
dec
xor
inc
jb
pushf
push
mov
mov
das
lock
adc
push
test
push
sti
ret
iret
movs
xor
sub
in
xor
repz
in
push
lock
push
lahf
ret
fiadd
cmp
pusha
call
les
mov
scas
out
cmp
inc
mov
sar
enter
cmp
inc
adc
jmp
xchg
(bad)
cmc
in
jo
or
push
and
xchg
sub
(bad)
cwde
xor
inc
jnp
cmp
les
cwde
push
mov
pop
inc
jb
cwde
cmp
push
ss
xor
das
add
push
ins
addr16
jnp
mov
or
int
mov
or
or
xchg
cmp
cmp
add
ins
push
sar
imul
out
repz
dec
push
icebp
fcom
test
push
inc
mov
(bad)
mov
push
xor
pop
and
cmps
cmovb
dec
or
xchg
imul
ficom
pop
sub
pop
push
sub
(bad)
iret
adc
ffree
sbb
gs
imul
int3
inc
mov
pop
jb
xchg
dec
mov
lds
hlt
pushf
xor
mov
sbb
(bad)
jb
xor
dec
ins
push
frstor
inc
jp
mov
push
dec
add
add
add
add
xchg
out
and
add
adc
add
sbb
ins
popa
addr16
bound
outs
ja
ins
outs
popa
bound
gs
jo
jns
jo
addr16
test
push
shr
sub
jmp
imul
mov
mov
or
js
ss
xchg
inc
(bad)
xor
sbb
push
jne
ror
jb
xor
sub
xchg
mov
xlat
push
push
jo
and
and
(bad)
sbb
pushf
inc
cmps
jne
(bad)
in
inc
mov
xor
mov
and
cli
iret
push
or
mov
ret
in
add
push
movs
jp
mov
or
and
fsubr
imul
sti
std
cli
or
and
or
adc
sbb
int
xchg
mov
jnp
mov
ins
xor
shl
jmp
sub
ja
rcr
inc
push
pushw
push
xchg
mov
popa
inc
or
push
jnp
es
jnp
data16
and
push
xchg
shr
leave
push
stos
push
and
lds
mov
jno
mov
xchg
call
adc
add
or
mov
sub
xlat
pop
add
add
add
sbb
ins
popa
addr16
bound
outs
ja
ins
outs
popa
bound
gs
outs
jb
jo
addr16
dec
mov
mov
scas
fnstcw
mov
movs
xchg
lock
shl
inc
sub
lods
in
jb
pop
fadd
les
out
adc
push
stc
jo
jmp
not
mov
cmp
sbb
aam
iret
outs
mov
js
test
int3
dec
mov
xchg
add
aad
jo
loop
hlt
mov
mov
cld
sub
std
xchg
std
stos
pop
fsubr
int
(bad)
repnz
cs
hlt
dec
or
add
jmp
shl
into
cmc
cmp
retf
(bad)
aad
xor
fs
in
cmc
inc
in
jmp
fist
or
dec
clc
xor
pop
out
xchg
mov
cmp
add
inc
mov
push
sahf
ret
cmp
mov
jb
xchg
xor
into
adc
push
test
dec
cmps
aad
retf
add
adc
sti
popf
mov
inc
and
xchg
movs
das
mov
jnp
jae
cmp
ins
sahf
push
rcr
xchg
lock
dec
pop
add
mov
popa
fisub
adc
jmp
dec
xchg
mov
and
add
mov
or
aad
adc
and
xchg
xor
lea
add
add
add
add
stos
sub
cmp
add
sub
add
sbb
add
imul
bound
outs
ja
ins
outs
popa
bound
data16
ins
cs
addr16
push
and
shl
fld
xchg
push
push
adc
pop
adc
cmp
mov
sar
mov
xor
mov
mov
movnti
adc
(bad)
or
mov
cmps
sub
repz
mov
fisub
fmul
jb
movs
sbb
hlt
jp
out
or
xor
pop
(bad)
das
mov
lahf
lds
int3
daa
jmp
inc
mov
mov
xor
xchg
xchg
push
stos
mov
call
fidivr
dec
out
push
cdq
pushf
lods
cmps
push
jbe
sub
dec
pop
inc
sbb
mov
movs
mov
inc
call
jne
jo
or
xchg
pop
pop
call
je
stos
push
jle
sub
inc
stos
into
cmps
mov
fwait
jmp
mov
aam
sub
pop
(bad)
push
enter
test
mov
iret
repnz
dec
cmp
ficom
xchg
jg
test
jbe
add
stc
ins
pushf
push
dec
add
repnz
daa
dec
mov
add
add
add
add
pmullw
add
add
add
add
popa
addr16
bound
gs
fs
jb
outs
jb
imul
retf
pop
leave
aas
cli
popf
js
dec
pop
call
dec
and
rol
jne
cmc
cmp
jbe
test
in
push
add
adc
(bad)
retf
or
repz
mov
aaa
sti
pop
push
js
jecxz
enter
push
dec
inc
stc
sbb
xchg
rcl
inc
cmps
jg
and
mov
rcl
inc
mov
leave
cmps
arpl
bound
lods
xor
sbb
push
scas
in
daa
in
inc
rcl
clc
xor
js
scas
jo
pushf
lock
pusha
mov
(bad)
or
dec
ret
sub
adc
sbb
adc
mov
not
mov
in
dec
mov
cdq
dec
jp
push
mov
dec
loope
jmp
test
iret
adc
xchg
es
sub
xor
fsubr
pop
fisttp
(bad)
out
pop
lods
mul
jae
and
adc
sub
mov
inc
fistp
sbb
xor
dec
inc
push
sbb
mov
(bad)
fstp
sar
and
lea
ins
rcl
add
in
mov
cmp
aas
and
inc
movs
dec
int3
ret
xchg
xchg
and
jl
ds
add
sti
cmp
jns
dec
fbstp
cmp
pop
pop
fdiv
in
or
mov
pop
push
mov
jmp
jg
push
mov
add
and
jg
sbb
int3
push
push
test
les
out
and
and
popa
cmc
iret
outs
cmp
add
loopne
push
cmp
jnp
mov
ins
dec
out
mov
cdq
and
sar
aaa
jbe
cdq
or
push
mov
imul
or
(bad)
pushf
ins
aad
pop
jo
pop
add
sbb
cmp
xchg
mov
fwait
enter
and
movs
mov
ror
or
or
adc
imul
mov
test
jns
mov
mov
aam
(bad)
xor
pushf
repz
out
movs
push
addr16
test
in
pop
popa
add
cli
test
jge
ja
xchg
sbb
sbb
ficom
jbe
shl
nop
std
repnz
cli
mov
jb
dec
pusha
xlat
iret
popf
add
push
pop
dec
bndstx
sbb
pop
push
and
ins
ret
js
ret
test
adc
or
lds
and
inc
cld
nop
mov
int3
jns
out
cmp
cmp
int
cmp
inc
dec
mov
xchg
xchg
out
popf
xor
fwait
sub
xlat
or
mov
stos
hlt
sbb
cld
out
adc
in
add
xchg
adc
in
pop
lea
nop
xchg
int
and
das
adc
mov
sbb
hlt
jp
outs
inc
pop
or
popf
jae
sbb
hlt
sti
pushf
mov
inc
je
loop
cmp
into
mov
inc
push
jmp
inc
arpl
push
mov
cmp
jmp
mov
aaa
pop
pop
mov
stos
aaa
mov
test
ins
xchg
sar
push
pop
xchg
cmp
(bad)
mov
push
mov
cmps
mov
aaa
sbb
push
in
test
shr
inc
dec
sbb
adc
add
or
mov
movs
jle
popf
add
add
add
add
popa
addr16
bound
imul
gs
jo
addr16
sbb
mov
cld
push
pop
sar
outs
dec
mov
mov
mov
xor
test
fisub
mov
xchg
aas
icebp
xor
jg
data16
inc
adc
cmp
daa
out
xchg
ds
in
push
inc
js
pop
jge
mov
or
push
sar
test
retf
stc
pop
dec
lahf
ret
cld
cmp
inc
and
rcl
cmp
out
and
pop
or
cld
retf
ss
ss
call
jbe
xchg
cwde
and
in
pop
inc
push
dec
add
add
add
add
add
add
add
add
add
add
add
popa
addr16
bound
je
outs
arpl
je
jb
jo
addr16
shr
sti
push
cmps
movs
jo
fild
int
or
repz
xchg
jge
and
repz
pop
xlat
int
loop
popf
ja
hlt
mov
push
mov
rcr
or
fwait
rcr
pushf
aam
out
cmp
in
mov
and
mov
inc
mul
out
xchg
pop
mov
cmp
lahf
pop
xchg
mov
aas
or
xor
pop
cld
ret
int
mov
mov
popf
dec
popf
retf
dec
inc
repnz
shl
mov
dec
or
mov
jge
pop
push
pop
xor
jmp
(bad)
sbb
mov
pushf
in
lods
mov
imul
xor
dec
push
aaa
pushf
pusha
shl
lods
push
mov
inc
movs
cmp
stc
and
into
or
retf
xor
into
rcl
(bad)
lock
dec
push
push
test
int
xor
push
dec
add
add
add
add
adc
int
add
add
add
add
add
add
popa
addr16
bound
je
outs
arpl
je
jb
imul
je
jo
addr16
sti
push
aad
stc
sub
mov
popf
add
pop
loope
(bad)
cmp
loopne
jne
ja
cdq
mov
outs
hlt
push
sub
or
cmp
rcr
mov
pop
adc
add
sub
enter
(bad)
mov
cmp
std
rcl
btc
or
xlat
(bad)
je
pop
ds
es
xchg
sbb
lock
mov
cmps
addr16
imul
push
hlt
sub
or
mov
xchg
(bad)
daa
dec
rcr
mov
int3
mov
and
inc
vpshuflw
aad
mov
dec
mov
sbb
push
xchg
lock
push
fbld
push
sub
rcl
cmp
xchg
and
in
xor
xor
ficom
data16
pop
jne
xchg
(bad)
lods
jb
jmp
pop
mov
sti
adc
add
and
cmp
dec
add
add
add
add
daa
cmp
xor
add
and
add
adc
ins
popa
addr16
bound
je
outs
ins
gs
jo
addr16
xor
push
adc
jge
sub
mov
daa
and
repnz
ret
inc
sbb
jg
xor
push
jecxz
ins
push
fisttp
cmp
adc
inc
shr
(bad)
enter
cs
test
stc
mov
dec
adc
add
fcom
add
adc
aas
ret
(bad)
fld
or
xadd
pop
jnp
aam
imul
or
mul
lods
ins
mov
lods
shl
inc
and
pop
or
loopne
add
and
mov
(bad)
rcr
shl
pop
dec
(bad)
fnsave
int
frstor
and
and
popf
push
mov
or
bnd
inc
push
bnd
gs
enter
popf
hlt
xor
push
sub
sub
mov
jne
inc
push
push
repnz
jle
push
sbb
pushf
and
lahf
enter
xchg
lea
mov
inc
inc
(bad)
xor
dec
icebp
stos
cld
inc
and
sbb
add
add
add
add
repnz
rep
add
add
add
push
add
add
popa
addr16
bound
je
outs
ins
gs
imul
je
jo
addr16
movs
push
cwde
popf
in
call
iret
xchg
imul
(bad)
cmc
jnp
sahf
inc
aaa
stos
icebp
repz
mov
mov
imul
sub
xor
xchg
inc
nop
xchg
daa
cwde
(bad)
and
pushf
test
sub
cmc
arpl
cmps
enter
pop
rol
stos
jnp
mov
push
std
pop
movs
pushf
pop
push
cmp
push
pushf
movntq
out
mov
inc
stos
test
mov
jne
or
inc
imul
fcomp
xchg
mov
jne
xchg
js
cmp
lods
loope
and
pusha
dec
xor
jmp
mov
das
mov
dec
mov
inc
push
test
ficomp
mov
nop
cld
int3
aam
stos
test
loope
idiv
add
inc
adc
push
or
xor
popf
push
popa
sbb
or
fwait
mov
push
push
dec
jecxz
or
cmp
clc
into
cmp
fbstp
cdq
mov
enter
out
jmp
pop
push
clc
mov
xchg
das
push
push
dec
dec
outs
fucomp
mov
xchg
push
sbb
mov
jne
test
mov
sti
stc
and
jmp
dec
push
fs
int3
jns
xchg
loop
cmps
inc
mov
mov
adc
loope
inc
mov
stc
sub
mov
nop
sub
clc
ss
ins
dec
push
dec
add
add
add
add
out
lea
add
add
add
add
add
add
popa
addr16
bound
je
outs
jb
addr16
addr16
mov
pop
mov
or
dec
push
xor
rol
icebp
in
xchg
enter
dec
loop
or
stc
ins
fcompp
clc
lahf
lock
repz
mov
popa
leave
mov
out
push
jb
sub
(bad)
mov
cmp
(bad)
aas
std
dec
jo
add
in
xchg
repz
add
xchg
in
pop
cld
mov
out
shr
sbb
aam
sbb
xchg
fild
dec
dec
(bad)
cli
(bad)
mov
cmove
fild
into
int
xchg
add
in
and
out
and
sub
in
pusha
xchg
sub
retf
inc
jne
pop
or
cwde
sub
mov
out
jecxz
stos
dec
retf
sar
xchg
pop
cmp
xor
nop
pop
xor
push
repnz
aaa
lahf
mov
aam
ins
outs
xchg
int3
retf
dec
sbb
push
mov
jb
mov
sub
loop
(bad)
scas
not
push
inc
add
test
popa
(bad)
into
stc
dec
cmps
rol
sub
sub
push
(bad)
dec
xchg
int3
mov
add
add
add
add
arpl
mov
dec
add
add
add
add
popa
addr16
bound
je
outs
jb
addr16
push
je
jo
addr16
cmp
aas
add
add
bound
cli
dec
sbb
gs
addr16
fisttp
lods
xchg
unpcklps
jno
push
xchg
or
fsubr
loop
(bad)
jnp
(bad)
movs
lods
repz
fdivr
mov
dec
sti
lds
not
jmp
xor
(bad)
lahf
and
pusha
cli
rol
ja
retf
out
cdq
or
ret
mov
dec
push
mov
dec
mov
lahf
mov
push
mov
outs
fstp
adc
test
push
hlt
push
adc
lahf
ja
addr16
daa
dec
test
rcl
and
push
pop
(bad)
add
cmp
push
das
xchg
mov
inc
neg
and
lock
leave
fadd
jo
pop
fimul
shl
fsub
add
in
mov
into
test
pop
addr16
sub
mov
adc
mov
lods
cmp
cmp
lahf
inc
cmp
arpl
push
mov
sub
int
and
push
xor
mov
out
push
cmp
cwde
jo
jne
dec
(bad)
or
popa
lea
dec
inc
enter
pop
je
vshufps
data16
jns
int
outs
es
sti
push
dec
add
add
add
add
jle
scas
dec
add
add
add
adc
add
imul
imul
outs
imul
imul
cmps
pop
adc
mov
push
sub
xlat
inc
fs
sbb
push
lahf
add
arpl
cli
cmp
mov
push
adc
mov
pusha
data16
lods
dec
xchg
or
jmp
push
aaa
jne
call
adc
add
or
mov
int3
inc
fwait
mov
add
add
add
add
add
popa
addr16
imul
jo
gs
imul
fwait
lods
pop
pop
retf
mul
mov
push
nop
ret
pop
js
mov
mov
jg
in
sbb
sub
xchg
inc
dec
cmp
cmp
cmp
or
sbb
es
mov
inc
adc
pop
sbb
movs
cmps
pop
scas
push
mov
shr
(bad)
lds
fiadd
jmp
lds
cmps
int3
xor
je
test
shr
cmp
jno
pop
retf
xchg
push
xchg
and
outs
ror
cmc
cdq
scas
dec
dec
scas
add
xchg
call
push
inc
repz
or
add
retf
movs
in
dec
int3
cmp
inc
(bad)
bound
aas
das
enter
cmc
outs
ret
ret
ja
pop
xchg
jno
xchg
and
xor
je
aas
aad
jmp
xor
mov
repnz
es
cmp
retf
(bad)
daa
inc
cmp
in
pop
pusha
pop
cmp
movs
pop
(bad)
stc
inc
hlt
out
sub
sub
or
inc
scas
imul
cmp
in
into
sbb
es
call
lock
(bad)
(bad)
das
es
dec
adc
jl
add
fild
fcmovnu
mov
mov
jo
push
ror
je
xchg
hlt
sub
bnd
pop
inc
pop
mov
adc
ret
out
inc
mov
test
retf
ror
inc
mov
jno
or
push
ss
mov
dec
xor
movs
mov
pop
das
rol
jmp
in
int3
push
lock
sbb
fstp
add
int
mov
mov
dec
add
add
add
add
xor
add
sbb
add
sbb
add
imul
imul
jo
gs
gs
outs
jb
imul
xchg
ret
mov
fld
out
and
sbb
std
jg
ins
fild
and
aaa
movs
ins
push
aad
fs
fisttp
mov
cmp
iret
(bad)
int
or
cmp
in
sub
addr16
inc
sub
idiv
inc
xlat
les
mov
nop
(bad)
ficom
push
and
xchg
adc
cmps
mov
and
mov
and
or
jmp
les
push
mov
mov
fmul
rcl
into
ins
jns
loopne
inc
push
cmp
push
dec
int
sbb
pop
ds
scas
xchg
aam
hlt
into
mov
xor
cmp
adc
loope
ror
loope
aad
mov
sbb
call
les
movs
jmp
dec
in
gs
mov
shr
push
outs
(bad)
push
xchg
std
clc
idiv
fisubr
popa
inc
enter
xchg
ja
into
sar
std
mov
pop
sbb
adc
add
or
mov
sub
int3
jecxz
add
pushf
add
add
add
imul
imul
outs
jb
imul
push
je
jmp
inc
(bad)
test
fcomp
adc
popa
dec
gs
loop
aad
out
mov
cmc
xchg
imul
or
xlat
fdivr
push
xchg
add
in
into
out
lahf
imul
outs
retf
push
adc
out
xor
sbb
cmps
imul
or
mov
push
dec
stos
xchg
lds
repz
xor
ror
stos
sub
push
int3
sub
fdiv
pop
jp
push
ror
imul
xlat
jno
xchg
pushf
cmps
shl
xchg
push
sub
and
and
nop
fcmovnbe
adc
mov
movs
add
pop
fwait
mov
loop
and
jmp
push
retf
xchg
mov
push
je
or
dec
add
add
add
add
lds
add
add
add
ins
popa
addr16
imul
fs
jo
addr16
mov
jbe
sbb
imul
out
stos
pop
shl
retf
je
cmp
movs
sbb
and
mov
push
stos
cmc
pop
out
or
aam
icebp
push
stos
dec
cmc
adc
inc
xor
into
pop
scas
pusha
push
dec
mov
and
add
das
dec
pop
lock
daa
mov
mov
jno
lds
scas
pop
test
push
icebp
retf
inc
imul
aas
xor
jno
cmp
ins
cmp
mov
gs
rol
arpl
bound
adc
cmp
adc
dec
in
add
mov
sti
loope
cmp
loope
fnsavew
ret
push
push
cmp
and
or
aam
les
sbb
mov
mov
mov
inc
lods
or
stc
xchg
xchg
and
push
ss
retf
cmp
dec
jns
or
ins
call
out
sbb
ss
push
adc
aam
in
loope
xor
and
ss
sar
inc
movs
or
cmp
ins
mov
icebp
mov
cli
out
test
jns
je
popa
push
xor
leave
xchg
push
jmp
stos
jp
dec
inc
rcl
add
ja
jbe
adc
pop
xchg
(bad)
ins
ds
xchg
aam
inc
stc
inc
les
dec
xor
loope
adc
xchg
cmp
into
mov
xchg
push
stos
out
repz
imul
scas
or
lock
inc
fld
jle
jns
xchg
inc
inc
mov
addr16
mov
ja
cmp
mov
popf
mov
and
inc
mov
mov
enter
rcr
pusha
clc
pop
jno
jbe
outs
in
addr16
cmp
(bad)
ss
pushf
mov
dec
pop
(bad)
out
data16
xchg
fs
dec
jo
xchg
xchg
aaa
js
adc
xor
icebp
or
mov
enter
and
pop
inc
stos
and
adc
cs
add
fldcw
cdq
movs
aam
fmul
push
dec
add
add
add
add
dec
inc
mov
add
add
add
add
popa
addr16
push
jo
jb
outs
ja
outs
ja
imul
aam
test
outs
in
ins
faddp
retf
dec
test
fmul
mov
not
or
inc
fdiv
jg
daa
dec
or
fsub
adc
mov
dec
mov
popa
fcomp
pop
or
fmul
jo
and
fstp
ret
fwait
test
push
popa
call
outs
popf
cmp
cmp
or
push
popa
ret
or
adc
cmp
stc
outs
repz
and
sahf
test
cmp
in
add
popa
icebp
jle
imul
test
jge
jno
or
add
pusha
test
rcr
xchg
into
jb
adc
sar
add
xor
jg
(bad)
shl
cmp
add
add
add
add
scas
jmp
mov
add
add
ins
popa
addr16
push
jo
jb
outs
ja
jo
imul
scas
std
cmp
and
mov
inc
jo
shl
scas
xchg
mov
adc
inc
mov
xor
xchg
inc
jle
mov
jbe
xchg
or
fmul
fisubr
loope
sbb
mov
push
sbb
int
iret
fadd
push
mov
pop
repnz
repz
int
ss
xor
add
scas
test
fcmovnb
xor
and
into
test
adc
out
les
sub
dec
imul
aaa
or
inc
mov
cmp
xchg
inc
mov
repnz
jb
div
push
loopne
xchg
arpl
push
dec
add
add
add
add
xor
push
and
add
inc
add
add
add
imul
ins
outs
outs
popa
outs
bound
imul
dec
jb
sub
and
arpl
fcmove
jmp
es
adc
out
push
cli
sar
ss
mov
scas
ss
jp
mov
loop
dec
sti
fadd
arpl
in
xor
jne
sahf
icebp
adc
mov
out
adc
xchg
nop
pop
out
idiv
mov
aaa
jle
add
mov
loopne
lods
cwde
mov
fcmovu
enter
pop
inc
pop
test
cs
in
in
sbb
add
xchg
mov
push
xchg
stc
pop
nop
or
pusha
pop
mov
add
inc
mov
aas
jg
rcl
cmps
(bad)
aad
or
add
push
stos
inc
cwde
hlt
adc
ins
add
mov
jg
add
das
push
ja
mov
pop
jb
or
inc
shr
in
and
fisubr
(bad)
iret
jnp
or
in
xlat
xor
cmp
lods
shl
inc
fadd
repz
push
and
into
cmovg
dec
add
sub
imul
inc
push
pop
fld
push
bound
xor
pop
imul
push
jp
dec
sbb
add
ret
and
jb
jae
push
sti
adc
into
jbe
out
popa
mov
stc
aas
mov
imul
in
lds
inc
jmp
mov
cmc
pop
xchg
jns
cmp
sbb
mov
out
mov
mov
mov
cmps
inc
fnstsw
ror
push
jno
sbb
push
scas
ja
icebp
jle
les
mov
cld
test
sti
(bad)
cwde
leave
sbb
sahf
ret
inc
mov
and
adc
inc
jg
bound
push
loope
cld
push
popa
rcl
push
stc
mov
aaa
int
loop
(bad)
fs
or
sub
mov
aaa
lods
mov
pop
(bad)
xlat
hlt
sbb
fwait
shl
scas
ds
add
mov
cmp
dec
das
and
pushf
in
push
add
jmp
ss
ds
lock
add
add
add
add
cmp
je
sbb
or
add
adc
add
pop
arpl
das
fs
jne
je
arpl
sub
mov
inc
inc
shr
jbe
jno
xor
cs
jle
xchg
test
pop
mov
pop
rep
out
and
mov
pop
cwde
call
ins
mov
(bad)
jecxz
jl
add
into
sti
das
aaa
fnstcw
and
cmps
cmp
jnp
inc
mov
sar
cmps
rcl
inc
adc
or
and
(bad)
ficomp
xchg
or
push
fild
or
mov
adc
sbb
or
call
outs
sar
cwde
jl
outs
xchg
fld
jnp
sti
xor
or
jp
mov
loope
fbstp
mov
fldcw
mov
push
sbb
inc
retf
mov
aaa
inc
push
add
xchg
ror
sbb
int
pop
sbb
adc
jns
imul
nop
jle
push
push
adc
pop
and
pop
rol
push
jb
sub
xor
js
jno
sbb
jnp
lock
mov
mov
sbb
ret
aad
cmc
int
outs
and
xchg
hlt
out
add
out
ret
mov
and
dec
add
add
cmp
inc
sub
jmp
jmp
adc
adc
push
in
mov
cmp
dec
xor
jp
icebp
fld
lods
ds
pop
pushw
div
int
xchg
dec
sbb
jl
mov
ret
mov
mov
sar
dec
sti
inc
nop
or
ins
jmp
ins
repz
dec
adc
icebp
lds
add
pop
fadd
ins
es
cld
in
adc
pop
mov
jecxz
mov
mov
out
bound
or
cmp
sbb
icebp
mov
xchg
cmp
fstp
jne
mov
fs
out
dec
mov
jno
shr
ret
outs
and
sub
aam
je
pushf
mov
mov
jge
mov
xchg
in
hlt
jne
shl
jae
popf
mov
and
out
mov
mov
inc
sub
loopne
adc
mov
scas
cmp
or
xor
hlt
pop
iret
cwde
sub
pusha
inc
pop
shl
sbb
movs
imul
pop
lods
jne
loopne
cmps
int
jo
jns
enter
stos
push
int3
pop
ret
lods
fsub
sub
xchg
inc
jns
mov
int3
cwde
push
je
test
dec
add
sub
cmp
inc
sahf
ins
stos
test
push
push
repnz
mov
and
ss
dec
mov
inc
xchg
(bad)
fcmovne
pop
add
scas
in
fld
cmc
xor
sti
fiadd
imul
dec
leave
je
adc
jo
in
fimul
or
xchg
aam
fiadd
xchg
icebp
dec
or
mov
bound
cmp
ss
das
repnz
mov
loope
cmp
outs
mov
bound
test
bound
jne
loopne
adc
adc
cmp
(bad)
dec
mov
add
cmp
add
shr
sbb
fnsave
push
mov
aad
out
sbb
push
sub
les
push
daa
jge
jg
mov
bnd
add
mov
xor
in
sbb
lahf
jmp
jae
hlt
ror
push
jb
mov
cwde
dec
or
pop
adc
movs
call
push
(bad)
xchg
jnp
lods
jbe
pop
dec
test
cs
cdq
push
or
jno
je
pushf
inc
push
fcmovb
ret
pop
add
mov
ja
test
int3
in
mov
neg
jno
mov
pushf
sbb
mov
jns
in
ret
cmps
add
jmp
mov
mov
xlat
scas
cwde
xor
mov
xchg
sub
es
or
call
sub
and
push
call
dec
in
ror
div
(bad)
shl
popf
inc
lahf
loop
mov
cmp
rcr
aaa
cmp
imul
pop
clc
(bad)
ret
mov
mov
mov
xchg
pop
mov
in
add
(bad)
es
test
shr
adc
sbb
pop
lock
not
or
icebp
and
mul
or
mov
pop
mov
stos
fcomp
dec
pusha
push
jae
push
sub
adc
outs
adc
inc
imul
xor
jnp
addr16
mov
ror
dec
push
mov
lods
daa
pop
mov
jl
jmp
sahf
ds
push
jmp
sub
loop
add
aad
test
retf
pop
or
push
dec
mov
cmp
push
loop
cdq
xor
adc
neg
sti
inc
lahf
or
jge
adc
shr
(bad)
and
cmp
xchg
in
fcmovu
push
mov
sbb
push
je
jno
sub
daa
fild
mov
or
les
out
jg
(bad)
cdq
sti
or
movs
mov
cli
xchg
xchg
mov
pop
cmp
sbb
sbb
bound
inc
pop
pop
and
xchg
outs
xchg
dec
jp
int
cmps
mov
in
cmp
dec
out
mov
adc
into
or
push
aad
mov
hlt
push
cmc
cmps
fst
jmp
and
or
xor
repz
dec
jecxz
imul
cmps
jne
cmp
xor
movs
test
sub
push
cdq
into
xlat
neg
mov
iret
adc
fstp
ins
test
fidiv
jg
fadd
or
cmps
push
xchg
test
cmps
jo
ret
neg
fmul
cmp
inc
mov
ins
fsubr
mov
sbb
pop
arpl
inc
or
add
stos
cwde
pop
adc
in
jg
(bad)
jecxz
loope
ja
pushf
sub
mov
push
icebp
jo
xchg
aas
and
stos
jo
ins
xchg
out
(bad)
imul
jbe
mov
cmp
sbb
sti
adc
mov
rcl
xor
(bad)
int
pop
pop
imul
push
in
or
or
and
mov
xchg
cmc
int3
mov
add
jo
std
and
scas
into
fwait
(bad)
mov
cmp
loop
jnp
mov
aad
cmc
out
out
xchg
sbb
test
rcl
in
mov
or
adc
mov
jne
leave
std
pop
popa
jl
cwde
lods
ret
sub
or
aam
arpl
into
loop
jns
stc
cmp
inc
mov
aam
push
xchg
adc
loopne
mov
inc
cmps
mov
jnp
aam
push
inc
stos
stc
pop
outs
test
out
mov
sub
in
cmp
sbb
or
test
call
add
and
rdpmc
pop
mov
mov
xchg
pop
mov
xchg
hlt
xor
xor
mov
sbb
and
ret
icebp
sahf
pushf
mov
push
pop
or
and
je
cmp
and
rol
nop
jg
sbb
dec
add
(bad)
retf
leave
rol
and
es
mov
sub
sbb
cwde
pop
das
stos
dec
fcmovnu
cmp
jb
jnp
sahf
loopne
mov
pop
scas
pop
gs
mov
jno
adc
jno
out
shl
sub
mov
(bad)
out
mov
dec
aas
push
sbb
test
pop
push
out
hlt
adc
pop
(bad)
daa
mov
test
imul
cmc
cmp
jmp
fnsave
sub
lahf
rol
leave
and
test
xor
mov
std
jmp
sub
int
mov
call
ds
(bad)
outs
add
ror
(bad)
cmc
or
inc
xchg
jmp
and
push
mov
mov
mov
and
(bad)
push
mov
xchg
loopne
pop
mov
cmps
xchg
mov
sub
inc
dec
jne
dec
xchg
cmps
leave
cdq
test
jne
mov
call
push
sbb
inc
jbe
mov
neg
loope
push
addr16
jp
mov
push
mov
in
mov
add
ins
push
and
sub
imul
hlt
mov
mov
dec
xor
push
sub
jge
nop
sub
enter
sbb
add
sbb
dec
sub
fwait
xor
sbb
repnz
push
inc
push
or
xor
mov
cmp
push
push
imul
pop
mov
test
stos
cmp
loope
add
push
cmps
mov
pop
add
xchg
push
jae
neg
mov
das
xor
cmps
aad
pop
sbb
ss
cmc
cmp
mov
mov
sbb
xchg
imul
adc
jp
pop
mov
mov
lock
(bad)
loopne
fucom
jmp
test
xor
adc
pop
jg
pop
out
sti
push
sar
or
mov
loopne
sub
ret
mov
adc
push
icebp
pop
and
lods
mov
push
cmp
les
les
push
xchg
push
dec
jmp
ret
mov
sub
dec
outs
cmc
jns
inc
in
aas
mov
and
cwde
fbstp
call
sbb
adc
popa
cmp
cwde
inc
mov
ret
dec
xchg
pop
mov
cs
pop
mov
cmp
cmc
or
adc
mov
dec
push
ret
pop
sbb
int
pop
mov
sti
ret
rcr
jge
rcr
dec
pushf
sbb
jle
pop
(bad)
push
in
dec
and
stc
add
and
mov
cmc
xor
add
mov
mov
fiadd
dec
dec
jo
jns
sub
mov
in
in
mov
mov
dec
cmps
out
mov
jae
sub
cmc
cmp
add
stc
in
in
icebp
popa
xor
dec
jg
adc
inc
add
leave
or
mov
cld
test
jno
retf
iret
pop
retf
jmp
inc
sbb
pop
lock
(bad)
enter
das
adc
sbb
mov
enter
push
icebp
(bad)
mov
call
adc
mov
mov
out
xchg
mov
xor
sub
mov
aam
mov
pushf
(bad)
rcr
ins
xchg
push
std
shr
clc
cmp
(bad)
(bad)
inc
xor
pusha
mov
sahf
daa
mov
push
mov
or
test
push
fisubr
mov
stc
mov
sub
push
mov
mov
rol
inc
jg
jbe
clc
pop
adc
and
vcvtps2pd
xchg
notrack
in
xchg
loop
add
push
ds
fs
mov
push
popf
addr16
(bad)
push
iret
sbb
sub
cmp
shl
std
pushf
push
jp
mov
adc
lods
(bad)
push
push
ja
dec
lock
xchg
mov
mov
movs
pop
loopne
pand
aas
pop
stos
lods
stc
test
adc
sub
pop
ins
(bad)
or
test
sub
(bad)
sub
movs
xchg
jmp
dec
mov
jl
cmc
lock
dec
xchg
pusha
shl
jp
je
sbb
out
pop
call
jmp
or
push
nop
pop
fdiv
mov
inc
cmc
fdivr
mov
push
jecxz
repz
or
mov
in
mov
mov
inc
std
popf
or
shl
fist
jp
ficom
xor
sub
jmp
call
sub
or
sbb
dec
mov
int3
test
inc
or
bound
stc
in
fwait
dec
imul
(bad)
and
addr16
out
sbb
stc
or
xchg
rcl
or
ret
pusha
(bad)
dec
dec
push
out
cmps
mov
dec
push
and
push
xor
in
push
cmp
xchg
(bad)
ss
sahf
into
movs
pushf
sti
mov
push
push
mov
fldl2e
cmps
xor
pop
pop
jns
or
(bad)
clc
std
mov
sar
sub
mov
inc
ja
lea
add
in
shl
pop
push
inc
mov
movs
push
jne
mov
jle
daa
xchg
and
iret
cli
xchg
mov
xlat
imul
and
lods
xor
push
mov
xor
test
out
out
and
gs
loopne
ins
inc
xlat
dec
fwait
mul
or
push
pusha
jg
jmp
pop
mov
dec
add
add
add
add
cmp
lods
mov
and
add
mov
add
push
add
add
jae
das
outs
jo
outs
js
arpl
pop
or
sti
adc
pop
leave
adc
inc
or
cmp
and
jne
sar
lods
das
jg
repz
pop
push
jmp
jns
mov
test
stos
(bad)
and
adc
jae
in
iret
cmps
in
sti
sbb
inc
jae
xchg
(bad)
and
out
test
ror
in
mov
rcl
fld
hlt
call
aam
jmp
fldenv
mov
mov
pushf
cmp
add
pop
pop
push
shl
or
mov
mov
jg
dec
scas
ret
jmp
movs
xchg
cmp
cmp
push
in
mov
dec
sub
mov
xchg
stc
inc
and
sub
fdivr
push
fnstcw
lods
cdq
sub
ins
shl
daa
pop
imul
dec
icebp
inc
push
push
xor
gs
mov
aad
inc
int
addr16
inc
dec
adc
call
xchg
pop
inc
pop
fimul
(bad)
xchg
and
mov
cmp
push
jg
dec
add
add
add
add
cmp
pop
inc
cli
or
dec
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
add
aaa
rcl
lods
movs
add
fxam
jge
push
push
and
jnp
sbb
pop
xchg
xchg
ins
stos
lock
mov
das
sub
sbb
stos
xor
mov
fdivr
faddp
retf
xor
mov
call
or
jo
stos
xor
jmp
mov
xchg
pop
cmp
xor
(bad)
mov
iret
lods
retf
push
outs
enter
cmp
xchg
inc
mov
iret
sub
loopne
add
fst
imul
ret
test
and
adc
popf
rcr
push
inc
dec
pop
xchg
inc
jecxz
out
jg
jge
mov
adc
into
lods
dec
fisttp
sub
cmc
test
cld
xchg
jg
mov
xor
ins
fcom
xchg
repz
fmul
stc
mov
rcr
sub
call
xor
mov
add
ror
fs
mov
push
sub
into
or
push
push
frstor
mov
mov
fstp
xor
lds
mov
add
or
add
das
adc
(bad)
xchg
or
mov
sub
mov
fistp
push
xor
ja
mov
pop
sbb
pand
mov
xchg
adc
das
inc
loope
push
sbb
dec
out
mov
dec
dec
ss
cmp
or
cld
jge
xchg
mov
clc
sbb
in
(bad)
cdq
add
sub
fst
loope
repnz
jnp
add
dec
clc
pop
sbb
sti
dec
std
sahf
mov
aad
adc
je
xor
popa
cli
sar
xor
int3
test
mov
jo
in
out
icebp
out
sbb
xchg
xor
mov
or
iret
pushf
or
push
out
cmp
fcmove
inc
not
out
mov
neg
fdivr
xor
vaddpd
cwde
pop
(bad)
xchg
push
fisub
cld
out
jbe
outs
jle
sub
jmp
(bad)
push
sbb
fsubp
push
jl
neg
add
in
add
sbb
pop
pushf
(bad)
cdq
adc
push
sub
sbb
jo
imul
add
inc
push
cmp
dec
div
arpl
xchg
dec
add
inc
daa
xor
jne
jge
and
mov
jmp
mov
sbb
sub
cmp
add
shl
stos
inc
mov
dec
xchg
and
and
jg
and
fnstcw
push
leave
call
mov
jge
imul
hlt
enter
jg
popa
fld
inc
(bad)
xchg
ins
out
cld
mov
int
inc
push
fisubr
push
push
sub
inc
pcmpgtw
(bad)
(bad)
push
xchg
stos
into
cdq
in
repz
sub
cmc
cli
mov
test
in
sbb
pop
movs
(bad)
scas
jne
shl
dec
sub
mov
add
out
dec
pop
in
adc
ret
std
add
shl
js
sub
dec
loop
jmp
or
repnz
aad
call
jbe
(bad)
xor
ret
repz
leave
adc
fiadd
push
cld
popf
push
push
dec
cmp
sar
push
jl
and
or
stc
pop
icebp
sub
inc
int
stc
test
push
stc
inc
mov
xchg
(bad)
jp
out
jb
mov
hlt
test
int
sbb
mov
pop
pop
sub
push
xchg
sbb
clc
and
sub
test
out
mov
ins
dec
and
push
popf
push
iret
sbb
pop
rcl
mov
stos
mov
xor
mov
fld
jle
mul
lods
and
cmp
dec
xor
nop
inc
repnz
cmc
out
jbe
fdiv
jl
scas
cmp
mov
inc
add
pop
jb
inc
add
cwde
repz
mov
int
mov
data16
call
inc
adc
jle
aas
sub
jne
test
sub
inc
xchg
jb
jmp
fs
jae
jnp
jle
jb
aas
xchg
fdiv
add
xor
leave
jecxz
test
movs
sbb
jno
add
pop
add
cmp
shl
hlt
cld
sbb
xchg
ds
pop
nop
jecxz
int3
or
xor
repnz
test
dec
stos
pushf
sbb
popa
shl
daa
mov
sbb
cmp
stc
push
stos
(bad)
sahf
xchg
inc
sub
inc
add
pusha
(bad)
(bad)
adc
jne
and
je
std
cmp
neg
(bad)
es
or
xchg
loope
xchg
loop
out
pop
arpl
int3
loopne
adc
lods
mov
xor
lahf
sti
cli
enter
int3
inc
gs
in
adc
inc
ret
or
rcl
stc
in
jmp
mov
fistp
imul
fstp
fcomp
mov
or
ja
rcr
and
fnstsw
pop
lahf
les
outs
pop
cs
test
inc
ret
test
push
jne
mov
in
jmp
gs
adc
pop
xacquire
jo
mov
inc
mov
dec
fist
js
arpl
pop
rol
or
dec
push
mov
fmul
inc
out
adc
cmc
pop
push
pop
emms
sub
mov
pop
xchg
jo
sar
lods
test
mov
imul
xchg
cmps
dec
cmp
xor
enter
push
pushf
dec
inc
push
xor
sbb
gs
or
push
inc
add
enter
stos
int3
sub
inc
pop
mov
mov
inc
dec
or
in
test
cwde
adc
daa
in
mov
sub
lock
adc
lock
adc
in
inc
popf
dec
mov
adc
clc
into
scas
or
(bad)
(bad)
scas
mov
sub
jl
es
hlt
clc
pop
sub
test
ficomp
or
mov
data16
adc
mov
shr
test
shl
arpl
ficomp
xor
inc
call
push
je
dec
push
dec
push
test
push
pusha
(bad)
mov
and
cmp
adc
in
jb
pop
cmp
and
xchg
mov
dec
pshufw
retf
inc
cmp
mov
sub
cmp
jnp
pop
stos
xor
xchg
xor
gs
sahf
adc
add
xchg
adc
iret
stos
out
add
aad
out
test
je
jl
outs
fmul
mov
movs
push
stos
mov
sub
outs
stc
mov
pop
add
mov
push
adc
popf
rcl
mov
push
test
ffree
cmp
test
pop
mov
(bad)
jne
dec
sbb
(bad)
adc
add
imul
add
das
ficom
sbb
inc
je
xor
jmp
xor
mov
cdq
or
shl
lahf
popa
pop
scas
fcom
or
outs
fiadd
les
dec
push
add
packssdw
pop
xor
adc
mov
cs
movs
fneni(8087
lea
mov
retf
or
xchg
nop
and
loopne
lea
dec
popf
mov
aaa
push
pushf
sub
mov
adc
xor
ins
jle
sbb
xchg
or
test
shl
xor
icebp
jno
fwait
pop
jg
inc
cmp
out
jle
push
mov
pop
shr
push
jae
adc
clc
test
mov
xor
shl
lods
cmp
popa
sti
or
mov
or
es
retf
aaa
jmp
mov
add
mov
stos
scas
fwait
js
rol
jae
ins
imul
sbb
sub
or
mov
push
adc
stos
and
js
cmp
dec
xchg
inc
das
int3
jge
pop
scas
mov
(bad)
popa
push
(bad)
push
push
fdiv
sahf
inc
adc
or
clc
jecxz
arpl
push
cmp
cli
xor
fild
fdivrp
push
jmp
cmps
push
xor
dec
je
mov
push
aaa
dec
loop
adc
aad
and
mov
movs
lock
mov
stos
pop
fsub
push
dec
mov
in
std
sti
outs
jge
inc
fadd
jns
or
and
in
or
dec
dec
or
sbb
lahf
or
push
cmps
sbb
or
inc
and
sub
pop
or
push
mov
inc
jg
dec
imul
ret
jg
cmp
addr16
jecxz
or
xchg
or
xchg
mov
ret
xchg
repz
pop
sub
xor
cmp
and
int3
ins
mov
push
pop
adc
jmp
inc
mov
adc
mov
push
and
push
cmps
sbb
je
sub
ja
push
sub
es
dec
inc
add
dec
rcl
sbb
popa
call
test
and
push
imul
sbb
shl
in
sub
pop
in
inc
sub
push
push
and
sbb
stos
dec
mov
inc
out
pop
push
cli
jle
mov
jg
out
popa
sbb
jmp
jmp
xchg
lods
xchg
sahf
push
scas
jge
in
push
enter
dec
aas
xchg
iret
xchg
ja
xchg
inc
push
dec
sbb
popa
dec
lock
inc
cmp
test
dec
retf
pop
add
jmp
test
and
inc
lods
mov
pop
(bad)
scas
jp
mov
cmp
or
sub
pop
mov
push
mov
pop
(bad)
push
scas
sub
(bad)
adc
adc
neg
repnz
fwait
xchg
retf
sbb
(bad)
ror
(bad)
mov
repz
test
pop
adc
mov
sbb
xchg
cmps
push
jbe
jecxz
cld
push
int
jge
lahf
inc
das
push
jae
movs
adc
dec
cmp
out
ss
ror
xchg
fadd
test
bound
and
dec
inc
mov
cmp
cmc
(bad)
mov
je
stos
fiadd
mov
and
call
lock
xlat
adc
rcr
cmp
outs
jle
sub
pop
fbstp
push
movs
xlat
or
mov
push
cmp
inc
xlat
ss
cmc
mov
pop
jnp
mov
push
arpl
mov
cmp
div
jg
cmp
fwait
sub
pop
mov
pop
into
adc
and
mov
stc
shl
pushf
add
cmp
(bad)
mov
and
loopne
pop
cld
jns
outs
mov
sub
add
pop
jae
pop
ins
ds
nop
jmp
and
sub
push
mov
outs
push
xchg
fsubr
mov
inc
cld
rcr
cmp
xrelease
mov
jmp
iret
push
dec
in
cld
push
adc
sub
mov
xor
imul
neg
push
mov
iret
xrelease
or
jle
scas
push
sbb
cmps
or
movs
or
sub
les
ficomp
add
lods
fisubr
dec
mov
loop
jbe
aas
icebp
sub
add
imul
call
test
push
punpcklbw
adc
cwde
scas
jp
and
icebp
mov
loop
or
push
das
push
std
xchg
fwait
pop
sub
jns
push
es
pusha
aam
mov
push
lahf
aaa
gs
call
sub
int
scas
mov
push
aaa
jge
lds
jne
pop
jmp
out
(bad)
xchg
pop
repnz
inc
fs
fst
out
inc
imul
ret
fldcw
in
aas
and
adc
(bad)
or
popa
and
cmp
pop
pop
adc
cmp
imul
xor
mov
push
sub
out
jno
rol
xor
add
or
out
adc
or
js
lock
shl
test
pop
mov
xor
mov
jmp
xchg
or
rcr
and
xor
hlt
cmp
inc
and
pop
bound
push
add
pushf
test
and
repz
icebp
dec
aaa
push
test
ds
shrd
std
je
cld
xor
mov
fmul
jl
call
jmp
cwde
into
cmp
cmc
cmp
dec
lea
ret
shr
ror
pop
cmp
jnp
gs
mov
and
mov
cld
and
mov
les
lods
jmp
sbb
test
sbb
inc
xor
or
shl
jne
lods
xlat
pop
es
in
cmp
cs
ss
push
mov
push
aad
in
out
mov
xchg
aam
ret
mov
xchg
loope
mov
xlat
js
cmp
shr
in
out
nop
js
mov
adc
adc
scas
mov
sbb
ffreep
pop
jbe
bound
daa
inc
jb
pushf
(bad)
jae
jb
mov
cs
bound
cmps
sub
mov
into
sub
test
and
iret
mov
bound
stc
and
mov
mov
cdq
(bad)
pop
cmp
sbb
dec
jne
add
inc
sahf
out
leave
cmp
mov
mov
(bad)
jbe
test
and
xchg
xchg
repnz
pop
idiv
mov
sbb
ret
mov
mov
movs
(bad)
test
rol
mov
push
cmp
pop
pop
(bad)
cmp
dec
call
nop
les
mov
mov
arpl
push
fadd
lods
fiadd
(bad)
addr16
mov
sbb
dec
shr
pop
inc
je
mov
aaa
fsin
(bad)
(bad)
mov
cmc
lock
sti
std
cmp
push
push
mov
cmc
gs
aam
sbb
add
hlt
add
add
jo
and
ret
mov
add
jp
fs
popa
lds
iret
(bad)
stos
xor
jl
loopne
push
repz
push
test
lods
shl
rcr
cld
jne
sub
mov
xchg
popf
aas
cmps
xchg
test
jmp
xor
fiadd
push
cdq
add
or
mov
xor
jecxz
jg
add
adc
and
dec
push
or
stos
call
mov
(bad)
jle
mov
pop
adc
outs
sti
fcom
sbb
adc
jge
mov
fsub
clc
inc
arpl
inc
(bad)
fld
mov
(bad)
aas
mov
data16
dec
fmul
icebp
cmp
mov
mov
or
fmul
push
(bad)
cmp
sar
xor
ret
xchg
cli
push
repz
pushf
rcr
in
xchg
mov
out
jno
pop
xor
stc
pop
add
jle
push
mov
fs
int3
xor
mov
mov
in
dec
add
or
arpl
adc
xchg
xchg
lahf
and
lds
ss
pusha
cmp
fidiv
cwde
mov
pusha
xor
inc
dec
ret
and
mov
pop
ins
ds
xor
loope
mov
cdq
cld
jle
imul
pop
fwait
imul
rol
test
stc
daa
sbb
sub
(bad)
mov
movs
adc
stc
ja
add
mov
xor
mov
fsub
out
loop
(bad)
not
(bad)
ss
adc
ret
das
jne
jne
popf
pop
sbb
loope
adc
imul
rcr
push
mov
ins
scas
pop
ds
adc
fwait
or
and
push
or
xor
mov
out
dec
cdq
loop
inc
xor
sub
cli
movs
enter
pop
inc
loope
dec
mov
aam
test
push
mov
dec
add
add
add
add
cmp
test
add
mov
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
jo
dec
enter
xchg
in
xchg
ret
iret
lods
jb
sub
xchg
loopne
add
push
cwde
arpl
add
test
scas
xor
rol
shr
jbe
sub
fcomp
mov
in
leave
ins
inc
int3
dec
cmp
or
or
xchg
mov
cwde
or
(bad)
movs
into
ret
pushf
std
push
mov
mov
pop
daa
or
jnp
xchg
mov
add
fcmove
leave
repz
push
imul
inc
inc
out
cli
fldcw
imul
xor
xchg
arpl
not
push
jne
jl
lea
push
jae
mov
mov
jo
cmc
outs
loope
dec
mov
icebp
jp
mov
sub
cdq
or
dec
retf
movs
push
icebp
pop
xchg
pop
sar
fisttp
stos
adc
fnsave
cmp
out
in
dec
in
xlat
pushf
call
jmp
lods
stos
fcom
pop
ffreep
cmp
fistp
ret
repnz
cs
pop
lds
das
and
and
into
pop
popf
mov
sub
das
(bad)
fbld
add
inc
aad
arpl
cmps
ret
movs
mov
test
push
mov
outs
mov
setl
adc
icebp
jns
ins
(bad)
aam
pusha
push
aas
jge
add
fisubr
out
xchg
out
dec
(bad)
sbb
dec
xor
stos
out
ss
dec
sbb
add
pusha
enter
mov
test
push
ds
ds
sbb
popa
ins
dec
repz
in
xor
pop
or
loopne
and
inc
adc
test
nop
popa
and
shl
mov
addr16
out
xchg
icebp
push
outs
pop
pop
jmp
pop
arpl
rcr
inc
pop
or
in
pop
xchg
add
ds
rcl
aad
das
xor
fimul
out
out
sbb
cmp
xchg
or
inc
nop
cmp
sub
lea
xchg
xchg
add
add
mov
jecxz
mov
sub
mov
dec
mov
sub
cmp
imul
dec
mov
adc
mov
xchg
out
jne
out
retf
cmp
adc
add
outs
push
push
sbb
fild
fsub
sar
inc
dec
mov
in
push
or
inc
and
ins
out
lods
mov
lds
mov
jnp
mov
and
inc
mov
and
inc
mov
or
jae
sub
mov
repz
push
inc
fwait
movs
mov
aam
and
ret
pusha
sub
and
leave
(bad)
aad
mov
mov
cmp
es
and
xchg
mov
movs
push
and
jns
xchg
in
pop
shr
aas
inc
or
adc
push
pop
ja
test
test
pop
(bad)
add
jno
cdq
mov
jmp
mov
jp
xchg
push
or
jmp
xchg
inc
sbb
jge
stos
xchg
inc
adc
in
aas
jae
mov
push
jle
sub
adc
es
call
xor
jo
movs
jl
xor
mov
ficomp
add
cli
push
mov
in
ficomp
je
sti
cmp
hlt
or
js
hlt
test
mov
fs
push
aas
sbb
push
sbb
xor
ss
inc
mov
jne
js
xchg
add
ins
les
adc
retf
call
xchg
push
add
xchg
test
mov
mov
retf
xchg
mov
jbe
add
push
adc
or
fwait
dec
mov
dec
mov
lahf
loopne
mov
mov
xchg
and
stos
jmp
cmps
xchg
stos
hlt
pop
adc
jo
and
or
data16
xchg
xchg
popa
fst
fdiv
pop
lods
stos
(bad)
mov
inc
inc
pushf
dec
and
ficomp
lock
sahf
add
push
retf
mov
arpl
inc
jmp
adc
and
iret
stos
je
cmp
pop
in
call
outs
push
sbb
inc
je
push
or
test
xor
pop
dec
pusha
jae
push
sbb
jb
aaa
mov
loope
enter
ret
ins
mov
mov
cmc
mov
arpl
cmp
popa
lds
adc
inc
cli
pop
sbb
mov
rol
pop
sar
mov
cmp
call
mov
popf
and
iret
add
ds
cmps
sbb
sbb
les
sbb
sub
dec
ins
repnz
jmp
pop
dec
out
pop
xor
dec
or
nop
push
pop
pop
lahf
clc
loop
fs
repnz
rcr
jecxz
sbb
and
out
pushf
adc
mov
dec
(bad)
stos
inc
nop
add
daa
jae
movs
inc
cmp
leave
or
out
fldcw
sbb
cld
ins
addr16
sahf
cmp
js
out
sbb
jnp
sti
(bad)
push
call
mov
int
outs
fisttp
xchg
leave
push
jnp
jns
and
popa
add
jnp
xor
push
pop
(bad)
cmps
rcr
add
mov
push
dec
sbb
sbb
loopne
sar
mov
(bad)
pop
mov
add
xor
lods
push
and
aad
repz
and
inc
sub
fistp
stc
fistp
jmp
in
movs
imul
sub
(bad)
mov
inc
push
imul
scas
(bad)
stos
pop
adc
pop
jge
je
sar
xor
loopne
jne
adc
jg
push
mov
cmp
and
mov
cmc
test
fbstp
sub
push
scas
xor
scas
jecxz
into
shl
xchg
jbe
jmp
mov
inc
xor
movs
cmp
sub
jecxz
mov
mov
add
mov
lods
xchg
movs
div
adc
adc
test
cmp
sbb
adc
cmp
test
mov
stos
loopne
adc
pop
dec
out
dec
(bad)
stos
icebp
movs
(bad)
push
test
pop
adc
sub
fsubr
adc
shl
dec
test
adc
lock
loopne
idiv
mov
inc
jge
xlat
(bad)
push
jbe
(bad)
aas
xchg
ret
pop
inc
pushf
pop
movs
mov
xor
(bad)
out
pusha
shr
pop
repnz
push
push
jg
push
movs
xchg
imul
push
enter
iret
xor
add
push
pop
(bad)
cmp
cmp
pop
imul
repnz
dec
rol
inc
xchg
sub
iret
add
jae
loop
outs
icebp
outs
clc
retf
jae
fs
mov
push
dec
mov
jae
or
jmp
cdq
popf
test
jmp
cld
hlt
movs
popf
imul
inc
cmp
arpl
xchg
pop
mov
add
add
inc
sbb
jns
sar
test
fbld
ins
mov
jmp
and
pop
mov
jae
pop
retf
mov
daa
dec
je
popf
fs
dec
shl
xchg
in
add
push
ins
pop
test
mov
test
(bad)
cmp
lods
cmp
test
xchg
fbld
gs
or
aas
lahf
push
mov
lea
jmp
push
jg
jp
popa
sahf
and
pop
mov
xor
js
dec
pop
mov
adc
fwait
mov
mov
lods
push
inc
in
or
cli
sub
popa
push
xchg
in
sub
stos
cmp
jne
sub
ss
or
push
dec
or
rcr
call
mov
push
lds
lods
sahf
sti
or
sbb
ins
cli
push
jne
or
leave
into
mov
cwde
or
mov
pusha
test
mov
adc
test
xor
add
scas
inc
ins
or
iret
loopne
cmp
pusha
mov
and
pop
xchg
inc
jb
pusha
inc
xor
inc
lods
in
retf
arpl
jecxz
inc
sbb
inc
jg
push
cmp
push
push
mov
nop
inc
mov
cdq
lods
cmp
sti
jle
je
adc
das
aad
loopne
inc
aam
sbb
(bad)
mov
loope
mov
or
lods
xor
hlt
xchg
in
dec
retf
mov
loope
(bad)
and
scas
push
rol
jbe
repz
stc
stc
cmp
mov
inc
repz
pop
ins
retf
ds
into
lea
jle
push
scas
(bad)
imul
test
jne
sahf
outs
lods
dec
retf
mov
xchg
pushf
push
mov
rol
and
stos
movs
mov
(bad)
jmp
fild
xor
sbb
or
in
sbb
and
outs
and
cmp
imul
in
xor
js
pop
rol
fwait
(bad)
sti
jo
pop
sbb
xor
add
gs
retf
in
aas
int3
aad
inc
dec
clc
push
shl
xchg
sbb
adc
aaa
test
pop
popf
and
jnp
xchg
ins
push
loope
(bad)
std
cld
into
dec
xchg
adc
jo
test
jb
lock
out
imul
dec
idiv
or
pop
dec
call
ins
ret
lds
dec
pop
(bad)
cmp
(bad)
sar
jae
loopne
adc
arpl
sub
(bad)
adc
fcom
add
mov
jle
mov
js
jg
nop
dec
mov
and
aaa
popf
or
or
sar
sbb
dec
popa
ins
mov
cmps
xor
pop
sub
shr
xor
repnz
ficomp
mov
loop
cmp
fs
imul
test
fild
pop
sub
ds
ret
out
not
lahf
jne
aad
xchg
ret
jmp
xor
cmp
test
cmps
sar
std
repz
enter
xchg
rcr
aam
(bad)
shl
xor
add
mov
xchg
xchg
mov
mov
jl
stos
push
jl
arpl
cmp
xor
jae
fwait
cdq
mov
retf
xor
mov
adc
inc
pop
loopne
xchg
lods
jmp
stc
push
std
xor
hlt
pop
inc
data16
cmp
mov
fcomip
adc
jg
sub
jl
pop
sar
jl
pop
movs
adc
hlt
sti
out
pop
rcr
int3
and
dec
adc
sub
jmp
cmp
into
xor
mov
scas
jle
pop
push
cmps
mov
mov
mov
pop
iret
mov
inc
add
push
and
inc
xor
shr
inc
aaa
pop
pop
vmovntpd
mov
jae
push
ins
pop
jnp
sub
mov
xchg
cwde
xor
sub
arpl
lock
xor
fadd
adc
cs
pop
ins
out
sub
push
xor
(bad)
iret
rcr
js
pop
je
xchg
jg
add
cdq
adc
mov
hlt
jl
add
test
dec
inc
jecxz
scas
mov
pop
imul
clc
pop
dec
jmp
xor
dec
lahf
push
mov
or
fstp
xchg
test
push
stc
repnz
jno
sbb
cmp
inc
int3
sbb
shr
in
push
in
(bad)
adc
sub
adc
jno
mov
adc
ror
adc
jno
daa
loope
stos
add
xchg
or
scas
or
pop
daa
mov
std
xor
adc
ja
std
pop
imul
lea
mov
inc
jbe
lods
push
lock
out
jle
rol
pushf
sar
mov
or
add
movs
xor
ja
adc
mov
push
push
popa
fimul
xor
mov
movs
inc
int3
inc
call
cs
loopne
and
xchg
mov
pop
xor
std
cmpps
and
sti
jae
idiv
in
cmps
pop
aas
mov
jmp
ror
cwde
popa
sbb
in
cdq
mov
in
out
sub
rol
mov
out
hlt
retf
(bad)
addr16
sub
fdiv
test
cdq
ret
push
in
bound
mov
push
jmp
sbb
jbe
loope
sbb
out
jnp
mov
or
sahf
test
dec
imul
add
mov
cmp
sti
mov
mov
test
out
mov
inc
lahf
in
repz
icebp
pop
sub
leave
out
cmp
icebp
adc
cdq
inc
scas
mov
push
imul
jle
jecxz
pop
push
gs
mov
mov
fsub
clc
mov
test
cmp
pop
daa
aam
push
aas
xor
push
out
xchg
sti
jmp
sbb
sbb
mov
cmp
stc
mov
mov
and
and
mov
and
into
dec
cdq
psubusb
cli
jns
adc
icebp
out
dec
movs
retf
dec
arpl
xchg
push
es
mov
and
jae
dec
pop
cmc
pushf
xor
adc
nop
scas
adc
fild
and
sahf
pop
add
cli
xor
aas
pop
icebp
stc
icebp
jp
xor
mov
mov
es
pop
jl
jmp
cdq
aad
add
push
jbe
sbb
(bad)
outs
cmp
jno
repnz
rcr
jl
and
scas
jns
mov
xchg
sahf
int
in
enter
(bad)
jge
sub
mov
loope
sbb
xchg
adc
cmc
ss
pop
ja
pop
dec
jge
nop
imul
mov
sbb
mov
xor
inc
push
xlat
mov
rcr
mov
push
stc
xchg
idiv
adc
out
jmp
retf
inc
out
push
das
aam
pop
or
push
in
mov
(bad)
jg
and
in
xor
dec
xchg
inc
out
ss
aad
cwde
lock
mov
xchg
dec
aas
fwait
xor
sub
push
jnp
sub
sub
sub
movs
xor
push
pop
mov
cmc
push
dec
add
add
add
add
cmp
mov
add
fiadd
add
add
add
jae
ins
popa
outs
addr16
addr16
jae
dec
cmps
outs
push
cs
ins
mul
mov
loopne
ret
je
gs
call
inc
es
nop
jmp
sti
inc
inc
sub
add
adc
cmp
push
popa
and
adc
mov
jo
cmc
and
push
inc
cs
test
test
push
repnz
pop
mov
add
fbstp
cmp
push
out
pop
(bad)
push
and
les
pusha
sbb
sti
setae
pop
add
scas
mov
rol
in
lock
les
cmp
inc
sbb
push
adc
retf
mov
inc
outs
(bad)
pop
inc
fldcw
clc
mov
jg
add
push
dec
xchg
aad
mov
fstp
inc
cdq
jbe
xor
push
inc
push
xor
mov
jmp
cmp
and
cmc
imul
hlt
jnp
and
sahf
aas
xchg
mov
ror
ret
and
jae
jg
cmovp
dec
mov
push
mov
out
jo
push
dec
sub
jg
dec
adc
movs
rcr
mov
sub
mov
and
jecxz
sbb
mov
movs
dec
lds
cmp
cmp
pop
push
push
sub
mov
std
out
mov
les
jns
or
test
hlt
clc
pop
out
cli
out
(bad)
leave
mov
cld
ins
inc
or
mov
test
(bad)
inc
stc
inc
iret
ins
add
jns
jmp
sub
es
xchg
inc
test
push
jno
pusha
movs
dec
mov
pop
ror
es
pop
mov
inc
cmc
sbb
imul
fnsave
push
popa
mov
xor
and
dec
or
jnp
dec
(bad)
add
and
mov
call
cmps
call
push
outs
fistp
(bad)
sbb
pop
fnstcw
pushf
jg
out
lds
sub
stos
mov
xchg
adc
out
aam
mov
retf
outs
cmp
lods
push
push
aas
lods
popa
push
out
retf
sub
adc
les
loopne
daa
addr16
pop
test
mov
or
mov
sub
ja
cmps
je
sbb
scas
dec
jmp
fdiv
lds
cmp
mov
dec
mov
lea
dec
jmp
jb
push
or
pop
retf
rol
pop
outs
fistp
mov
dec
sbb
push
aaa
loope
aad
nop
xor
jp
aas
test
stos
out
faddp
les
fisubr
nop
out
lods
rol
inc
adc
cmp
or
mov
sub
repz
outs
ds
ins
shr
jge
repz
leave
xchg
je
std
arpl
push
ss
mov
mov
jecxz
adc
sbb
jle
push
sbb
into
mov
cmc
ss
xchg
inc
es
jo
jecxz
je
ja
inc
(bad)
or
lds
inc
ja
inc
das
sahf
ja
push
shr
call
jne
mov
inc
test
jge
clc
movs
cmc
into
pop
sub
ins
xlat
pop
inc
jae
mov
outs
push
or
mov
call
pop
retf
mov
push
rol
icebp
push
inc
dec
out
xchg
jmp
inc
mov
mov
mov
sub
sub
inc
jg
out
cwde
and
cmp
mov
xor
and
sti
push
xchg
cmp
bound
cs
int3
sbb
es
mov
aam
jge
push
push
sub
fld
xchg
cs
in
mov
cmp
outs
fimul
loop
test
(bad)
xchg
mov
outs
inc
(bad)
clc
lods
(bad)
ins
inc
popa
or
pusha
mov
xchg
sub
aad
movs
ins
fcom
xor
dec
mov
ror
js
and
and
gs
mov
data16
cs
push
outs
cmp
lods
ja
aad
inc
mov
out
fmul
or
fsub
mov
fwait
outs
jo
add
xor
dec
push
out
mov
xor
push
dec
pop
jns
cmps
dec
(bad)
iret
mov
mov
ins
mov
fwait
test
add
push
and
outs
mov
mov
jmp
jge
sbb
jmp
inc
arpl
cmp
mov
sbb
jne
cmp
jl
retf
add
cwde
push
ds
or
scas
and
das
lea
inc
cmc
nop
mov
inc
scas
ror
pop
lods
or
mov
cli
pop
push
in
adc
cmp
and
push
push
mov
loopne
push
dec
xchg
cmp
pop
ss
push
lahf
push
fld
inc
cwde
les
shl
fild
mov
mov
(bad)
xchg
jb
fisttp
pop
pushf
push
shl
inc
dec
inc
mov
inc
sub
das
or
mov
push
clc
es
pop
mov
cs
mul
mov
aaa
xor
xor
fidiv
ficomp
and
cmc
add
cli
outs
(bad)
mov
and
pop
and
jb
(bad)
enter
xchg
shl
enter
xor
in
aam
(bad)
scas
mov
xchg
mov
and
mov
movs
iret
sbb
or
dec
and
mov
mov
movs
mov
add
pusha
popf
sub
mov
std
rcr
xor
sahf
and
inc
add
push
es
cdq
push
xor
adc
ss
ja
les
cmp
mov
fisub
or
test
push
jl
dec
push
es
out
sbb
pop
xchg
and
scas
retf
pop
mov
iret
cmc
adc
mov
xor
push
addr16
sti
dec
jbe
xchg
xor
fwait
out
adc
jmp
and
pop
aaa
enter
or
jae
sbb
push
jnp
call
popf
outs
cmps
aam
call
scas
xlat
jecxz
popf
pop
leave
gs
xor
mov
hlt
(bad)
xchg
dec
mov
or
mov
cmps
mov
or
cwde
inc
das
movs
push
fstp
imul
and
int
sahf
push
add
xchg
pushf
dec
pop
cmp
mov
outs
outs
dec
or
call
jmp
add
xchg
idiv
repnz
ss
(bad)
fs
dec
in
xchg
neg
psrad
out
jae
not
scas
sbb
cmp
out
lahf
sub
cmp
add
inc
or
fisttp
iret
or
mov
ret
jge
jmp
add
and
mov
je
pop
es
ds
sub
jno
sbb
int
jg
xor
gs
lock
std
or
fisttp
fnsave
sar
dec
jge
call
adc
fs
pop
jmp
call
mov
int3
pop
jae
inc
jge
add
scas
dec
push
fbld
leave
and
adc
aam
aaa
test
add
aam
pop
mov
fsub
mov
inc
fwait
push
add
mov
popf
push
in
jne
movs
adc
(bad)
or
dec
arpl
add
inc
dec
stc
data16
mov
pushf
ss
add
pop
rcl
loope
mov
mov
mov
mov
add
pop
stos
mov
pop
js
dec
push
fadd
mov
push
stc
xor
push
outs
fcomp
xlat
jbe
mov
mov
(bad)
mov
dec
sub
popf
fdivr
inc
push
es
adc
shr
mov
and
sbb
inc
jns
mov
push
cmp
mov
ja
mov
dec
sahf
push
ss
or
sbb
test
frstor
pop
(bad)
cmps
in
ds
jo
mov
lahf
retf
and
retf
int3
push
jo
imul
inc
pop
pop
add
sub
mov
pop
xor
cmps
or
pop
mov
pushf
pop
clc
daa
inc
fwait
inc
rcr
in
sub
ficomp
sbb
aam
hlt
pop
sub
cld
xchg
inc
sbb
xchg
fsubr
ins
sbb
adc
jecxz
mov
jbe
jecxz
in
fimul
ja
jb
jno
jecxz
cmp
fcom
add
sti
fld
aad
call
sub
inc
or
pop
in
outs
push
fst
loop
fisubr
(bad)
push
cmps
in
pop
inc
push
mov
push
add
and
adc
stos
or
push
sahf
ucomiss
ja
retf
fsubp
mov
enter
sbb
outs
pop
push
and
arpl
pusha
add
movs
std
loop
hlt
sar
mov
jle
addr16
jae
imul
je
into
dec
gs
sbb
in
je
pop
or
add
mov
mov
dec
dec
loop
loopne
and
sbb
cmp
bound
add
(bad)
sub
jg
test
sbb
rol
fisub
(bad)
push
cmp
ins
arpl
xor
mov
add
or
mov
inc
pop
ret
sub
or
aaa
jo
push
jp
int
into
fcom
mov
in
mov
mov
xor
icebp
mov
aaa
sbb
sbb
ds
ror
mov
mov
leave
jle
xor
or
mov
add
loop
or
or
aas
mov
inc
rcl
shl
mov
lods
scas
test
sub
test
sets
cmps
xor
loop
int3
mov
sbb
test
mov
pop
out
mov
iret
or
xor
and
push
cmps
push
les
(bad)
and
mov
inc
stos
(bad)
or
pop
in
pop
and
or
int3
xchg
jne
adc
jge
mov
retf
hlt
sub
or
in
pop
mov
cmps
jl
iret
sbb
daa
mov
test
inc
sub
rol
jbe
dec
add
xchg
inc
xchg
cmp
pop
outs
cmps
mov
pop
in
mov
bnd
call
scas
aam
mov
pop
xchg
cwde
sub
repz
dec
test
mov
xchg
add
loopne
icebp
stos
dec
push
aam
icebp
or
into
in
and
(bad)
popf
outs
dec
cmc
jg
sub
out
pop
xchg
loope
add
push
cmp
cmc
ror
(bad)
add
push
pop
test
bnd
outs
jl
iret
cmp
out
daa
xlat
fmulp
hlt
adc
push
inc
add
jle
dec
pop
xlat
add
int
xor
ror
mov
mov
es
add
mov
dec
and
mov
into
iret
test
sbb
mov
dec
imul
xor
xchg
mov
jne
fadd
xor
sbb
sub
cmp
xchg
cld
or
inc
push
or
test
dec
adc
movs
sub
mov
out
fcom
mov
fsub
push
or
ins
pop
push
and
and
loope
mov
pusha
cmp
cmp
adc
nop
jecxz
cwde
cmp
repz
mov
xor
dec
cli
adc
cmp
jmp
and
movs
push
ins
mov
aam
ins
xchg
mov
add
push
inc
out
add
ret
cmps
or
jp
jle
int3
mov
pusha
cmp
fdivp
push
pop
shl
stos
and
jne
xor
pop
dec
lods
aad
mov
and
inc
fwait
mov
scas
loopne
ss
mov
repnz
lods
mov
inc
lods
gs
inc
push
repz
inc
cmp
loope
fwait
dec
(bad)
ret
cld
daa
push
ffreep
pop
jne
xor
sub
(bad)
sbb
sbb
jns
leave
in
(bad)
idiv
jns
lods
not
inc
sbb
and
adc
mov
out
ret
jmp
stc
les
cli
inc
pop
cmps
pop
scas
jg
push
adc
cmc
push
(bad)
out
mov
and
jecxz
xchg
retf
dec
jmp
leave
push
fidiv
jecxz
pushf
arpl
mov
jg
xchg
in
daa
aam
and
fsub
mov
imul
or
pop
cmps
arpl
test
fdivr
addr16
xlat
mov
cmp
push
retf
mov
adc
js
push
dec
and
popf
scas
int3
cmp
aam
xchg
jb
pop
push
inc
xchg
jecxz
mov
repnz
stos
xor
pop
out
mov
dec
xchg
sub
xor
dec
add
xchg
mov
jmp
xchg
cmp
cmp
and
cmp
sbb
test
call
cmp
cmps
int
sbb
jle
gs
rcl
out
std
jl
mov
xchg
inc
mov
dec
and
sub
daa
aaa
and
adc
call
fcom
and
jo
mov
dec
loopne
add
add
jns
adc
movs
xchg
loopne
jp
cmp
shl
inc
jae
pushf
cmps
add
ficomp
mov
(bad)
push
xor
inc
xor
xor
dec
cld
push
hlt
cmp
cmc
sbb
or
iret
add
pop
and
mov
mov
dec
sub
call
(bad)
dec
icebp
clc
cdq
idiv
adc
dec
in
fwait
xchg
scas
clc
popa
push
and
jmp
loopne
hlt
mov
cmp
dec
mov
push
movs
(bad)
or
push
xchg
lds
jmp
pop
imul
sti
dec
loop
test
cmp
cmp
sahf
sti
mov
loope
xchg
js
inc
jle
push
sar
test
out
popa
mov
rcl
mov
inc
xchg
jnp
es
jle
xchg
outs
iret
scas
ins
(bad)
fs
jmp
call
jge
int
xchg
dec
jno
dec
and
xor
repz
lds
clc
mov
xchg
les
push
test
or
fs
jno
sub
xor
adc
data16
(bad)
enter
mov
inc
sbb
pop
sub
add
iret
push
iret
out
push
cmp
enter
mov
dec
mov
or
cs
cmps
fstp
aaa
jmp
pop
sbb
xor
sbb
loope
leave
inc
push
cmp
or
mov
ror
sub
call
push
mov
inc
fstp
add
push
mov
fcomp
xlat
add
mov
dec
add
aad
imul
loope
retf
imul
(bad)
push
addr16
in
imul
fmulp
pop
cmp
ds
movs
fwait
add
xchg
push
pusha
ja
dec
ins
cli
or
fs
xchg
repz
mov
cmp
add
mov
xor
jb
dec
stc
xchg
mov
and
jge
lds
cli
rcr
in
ins
loop
jmp
call
sbb
(bad)
mov
push
jle
dec
dec
push
pop
cmp
xor
jge
rcpps
add
add
add
add
cmp
(bad)
mov
add
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
push
sub
stos
push
xchg
pop
sar
cmp
neg
je
dec
cmp
outs
std
mov
inc
nop
pop
sbb
or
aas
xchg
mov
cmp
adc
sbb
mov
leave
xor
cmps
adc
xor
pop
cld
adc
nop
xor
lea
jbe
jg
cmp
and
mov
add
mov
lock
aaa
sbb
xchg
xchg
jmp
mov
inc
cmp
shl
lahf
sahf
(bad)
(bad)
fisttp
idiv
push
pusha
mov
(bad)
cmp
ret
xchg
out
test
test
clc
enter
in
cld
adc
stc
bound
lds
jmp
repnz
fisubr
add
std
mov
pop
(bad)
and
(bad)
cli
iret
xor
or
sbb
mov
stos
out
mov
in
mov
xor
jl
popa
ins
or
clc
xchg
int
movs
and
mov
hlt
es
lods
xchg
dec
or
ja
sub
jno
movs
pop
mov
lods
mov
mov
mov
pop
sbb
xor
jg
push
icebp
sub
lods
jne
sar
pop
ficom
xchg
push
les
stos
or
pusha
stos
enter
lahf
ss
aad
idiv
cmp
mov
aam
sub
test
cmp
out
push
mov
adc
adc
fcmovu
jbe
push
aaa
ins
cli
std
shl
loope
inc
xchg
dec
js
cmp
sbb
xlat
jge
(bad)
scas
jne
test
fild
aaa
outs
(bad)
push
or
out
js
and
ret
imul
mov
cmp
pop
mov
and
mov
jb
mov
(bad)
jo
retf
push
jmp
inc
mov
push
mov
xor
xor
push
retf
push
scas
iret
xor
in
scas
popf
test
retf
pop
fbld
mov
je
popf
fist
aas
adc
jecxz
pop
or
loop
push
pusha
xchg
and
mov
daa
jle
xor
in
add
push
or
shl
out
hlt
xor
mov
test
and
aam
leave
inc
push
jg
mov
xlat
jbe
inc
call
mov
mov
imul
test
movs
xor
shr
fcmovnu
adc
dec
mov
mov
jo
jnp
xlat
and
cli
pop
jmp
cmps
sub
push
fnstcw
das
ds
jne
lock
imul
aad
pop
cli
sbb
or
xchg
xchg
cmps
inc
test
nop
clc
aaa
jge
fmul
les
add
mov
adc
mov
add
mov
adc
cvtdq2ps
imul
xchg
jns
cmps
sbb
mov
mov
mov
(bad)
int3
inc
mov
push
jb
mov
push
loop
push
xchg
sbb
movs
rol
mov
sub
adc
out
lds
add
pop
inc
sbb
sbb
cmp
gs
or
js
and
ins
add
fstp
mov
jl
mov
cmp
idiv
cmps
mov
push
jmp
inc
rol
xor
mov
sar
lods
dec
aaa
out
jne
nop
cli
lahf
out
inc
lea
pop
or
add
or
mov
mov
aaa
out
sbb
mov
sbb
mov
int
inc
cs
dec
cld
mov
hlt
out
jno
dec
inc
inc
and
push
cld
(bad)
jmp
jne
fdiv
ja
xchg
or
mov
dec
inc
and
out
aad
xchg
sbb
and
mov
add
scas
push
or
mov
clc
retf
pop
out
push
mov
ja
add
push
(bad)
xchg
jae
cmp
sbb
mov
pop
outs
jno
push
mov
and
sub
push
in
pop
push
ins
imul
mov
outs
or
cmp
dec
dec
pop
dec
shl
fild
aaa
mov
call
dec
js
ret
jnp
je
lock
add
out
and
cmc
cmp
pushf
cmp
or
push
add
sbb
into
fdivr
popf
dec
xchg
sbb
add
cmps
mov
cmps
jae
in
leave
data16
stos
sbb
sbb
stos
gs
xlat
mov
dec
in
sar
adc
in
adc
xchg
cmp
and
jmp
pusha
jnp
in
pop
lds
adc
cmp
sbb
imul
xchg
jo
or
in
sub
sbb
bound
mov
call
jge
cmp
jne
cdq
jecxz
adc
scas
lock
mov
push
(bad)
lock
adc
inc
sahf
in
mov
sbb
ins
das
inc
pop
in
push
not
fisub
mov
mov
in
stos
das
xchg
test
shl
test
sbb
cwde
jb
dec
into
dec
out
pop
pushf
test
cmp
xor
repz
jecxz
loop
jl
fs
shr
shl
imul
adc
popf
xchg
mov
sub
cli
sbb
dec
xor
jae
movs
sar
scas
dec
push
pop
test
adc
push
xor
out
aam
mov
adc
and
arpl
fisttp
enter
add
sub
xor
push
in
jmp
add
pusha
jno
mov
scas
jmp
sub
into
cmp
add
mov
jl
push
gs
pop
sbb
xor
ss
push
aas
lds
mov
fcom
xor
or
and
pop
pop
(bad)
xchg
and
mov
add
daa
and
push
ret
sub
and
cmp
xchg
(bad)
cld
push
adc
push
retf
stc
push
enter
cmp
int
rol
sub
shr
lahf
adc
sbb
sahf
stos
es
mov
es
fwait
leave
add
les
mov
in
aam
(bad)
int
sub
xor
dec
sbb
adc
out
inc
mov
mov
or
sub
or
jecxz
inc
xchg
aam
sub
daa
movs
enter
jb
push
jl
adc
pop
and
imul
lds
sub
and
cs
mov
adc
je
out
cmp
rcl
stos
xchg
fsubr
mov
inc
daa
(bad)
pusha
mov
mov
mov
cmps
aaa
xchg
sbb
xchg
inc
xchg
dec
stos
mov
(bad)
fwait
mov
inc
adc
dec
cli
sub
add
test
dec
add
mov
adc
stos
sbb
rcr
sbb
repnz
sbb
lods
pop
xchg
test
enter
jg
sar
loope
mov
cli
loopne
sbb
cs
les
mov
mov
sub
mov
or
push
imul
add
dec
mov
nop
shr
or
inc
xor
fs
fild
jmp
or
pop
movs
movs
movs
mov
popf
loopne
pusha
leave
mov
je
xor
test
push
cmp
test
add
xchg
sar
jbe
lock
and
push
rcr
mov
test
sbb
imul
pusha
xchg
sub
jnp
dec
or
adc
jne
xor
rol
push
mov
xor
sub
popa
mov
push
clc
ins
jne
in
push
or
lahf
call
dec
jle
push
xchg
or
pop
xor
ret
pop
loope
test
imul
sbb
leave
push
xor
and
cmp
push
add
ins
inc
push
inc
hlt
in
sbb
retf
push
mov
dec
and
inc
test
cli
pop
mov
js
and
xchg
cli
xchg
push
xchg
(bad)
xchg
scas
push
test
mov
pushf
mov
jmp
and
jne
and
jae
stos
fwait
mov
std
ss
ds
jg
les
stos
ins
fild
mov
neg
call
iret
gs
movs
jno
loop
add
iret
int3
test
ja
xchg
push
repnz
rol
adc
sbb
test
and
jl
mov
icebp
dec
and
mov
fidivr
push
aaa
adc
xor
in
mov
in
daa
xlat
add
shl
sbb
cmp
inc
js
mov
mov
gs
test
enter
lahf
or
pop
inc
add
xchg
push
xor
push
sbb
loopne
jl
imul
adc
hlt
loopne
push
mov
jmp
mov
mov
pop
add
sbb
jo
adc
sbb
cmp
mov
xlat
cwde
dec
xchg
pop
inc
data16
jmp
and
xchg
adc
or
xor
push
mov
push
fadd
test
fcom
loopne
adc
or
cmp
mov
push
add
jae
call
pop
lods
xchg
(bad)
stc
jb
jp
dec
pop
cmp
push
sti
test
jo
sub
cmp
and
rol
call
pop
fwait
aam
into
jae
fs
retf
and
or
shl
sbb
(bad)
ja
sub
sbb
daa
push
dec
mov
jb
fwait
mov
xchg
aaa
xor
dec
outs
les
mov
jg
push
(bad)
imul
xor
loope
and
add
pop
adc
and
xchg
xor
xchg
aas
daa
loop
(bad)
xor
pop
push
pop
clc
leave
mov
dec
repz
ins
or
xor
xor
jno
cdq
pop
push
sbb
mov
push
and
adc
dec
(bad)
push
fimul
cld
mov
aaa
or
cmp
xchg
push
mov
adc
sti
loopne
stos
inc
ficom
imul
jo
cs
jo
jno
lds
jp
out
pop
dec
mov
jl
mov
dec
mov
(bad)
jne
adc
rcr
dec
pop
movs
dec
or
(bad)
movs
clc
mov
jp
inc
sbb
mov
test
call
hlt
pop
push
inc
frstor
rcr
rcr
das
loop
mov
adc
dec
pushf
pop
push
pop
addr16
or
pop
xchg
imul
cli
inc
cmps
sub
adc
xor
pop
aad
iret
loopne
sbb
push
ret
(bad)
in
mov
adc
sti
hlt
mov
fcmovu
xor
retf
sbb
sahf
pop
mov
test
xchg
(bad)
cmova
int
ins
pop
mov
and
mov
adc
push
je
push
xchg
jo
push
pop
push
inc
add
ret
pop
enter
xchg
push
repz
sbb
cmp
mov
push
mov
clc
scas
mov
lea
scas
ret
in
xlat
lock
(bad)
jns
or
push
(bad)
retf
xchg
(bad)
mov
inc
jb
jg
jns
xchg
sub
or
xchg
mov
loop
lock
addr16
lds
adc
loope
push
sub
inc
push
adc
push
shl
mov
pusha
push
pop
(bad)
jmp
add
popf
xchg
mov
mov
mov
mov
xlat
sbb
in
movs
in
ret
call
shl
das
scas
cmp
lds
test
add
aad
sub
ja
xor
test
out
stos
push
jo
inc
lds
sbb
push
inc
nop
push
jl
sbb
or
and
fsubr
sub
mov
jmp
mov
in
rcr
cmp
enter
int
and
rdpmc
int3
cmp
adc
adc
sub
push
jg
sbb
imul
jb
and
pop
pushf
sub
cmp
mov
aam
fcomp
lahf
aam
pushf
scas
cmp
dec
enter
fnstenv
into
sbb
test
ret
pop
fs
add
jmp
xor
mov
add
cmps
xor
pop
mov
adc
push
and
xor
sbb
xchg
push
and
fwait
xchg
sbb
xor
retf
ja
movs
sub
outs
sbb
cmp
sub
fld
adc
imul
addr16
dec
push
js
jmp
fadd
and
ror
imul
inc
mov
shl
sub
outs
(bad)
nop
call
cli
test
or
jbe
rcr
mov
add
add
add
add
cmp
rol
jg
add
cli
inc
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
outs
mov
xchg
xchg
test
pop
mov
push
test
xor
jbe
sbb
scas
cs
inc
jne
inc
js
mov
sub
cli
pop
jmp
jge
sti
dec
jle
mov
mov
out
sbb
cmp
in
push
ss
mov
shr
adc
aas
rcr
sahf
adc
pop
mov
les
popa
jmp
lods
test
(bad)
adc
loopne
imul
xchg
(bad)
xor
xchg
mov
in
jnp
int
xor
(bad)
pop
shr
jg
stos
stc
inc
or
cmc
lock
data16
mov
int3
xchg
sahf
and
mov
bound
jge
and
or
inc
xor
inc
add
scas
sub
and
rcl
push
xchg
popf
sbb
imul
xchg
es
stos
sbb
add
test
inc
pop
add
xor
mov
inc
fwait
add
lar
imul
sub
mov
adc
dec
adc
scas
repz
adc
cmps
(bad)
add
or
cmp
add
inc
push
ror
xor
out
aad
in
mov
adc
pushf
loop
test
pop
sbb
or
ret
add
in
cmp
inc
cmps
xor
sahf
(bad)
movs
xchg
gs
sub
sub
mov
data16
fldcw
js
sbb
mov
xchg
xchg
ret
hlt
cld
rcr
sbb
dec
rcl
jne
pop
jg
inc
add
out
repz
xor
call
cmps
inc
add
popa
mov
icebp
sub
shl
div
push
jle
aas
movs
cdq
mov
dec
scas
dec
psubb
sub
mov
or
mov
dec
mov
imul
jge
add
adc
inc
mov
jmp
icebp
fcmovu
outs
fs
ficomp
dec
inc
and
neg
cmp
icebp
daa
and
mov
popa
and
icebp
cmp
lods
mov
in
ins
mov
pop
(bad)
in
outs
xchg
or
(bad)
xchg
pop
lea
out
in
cmps
sbb
popf
leave
fwait
icebp
(bad)
aad
dec
push
fistp
outs
sqrtps
pushf
or
icebp
sbb
mov
jno
mov
test
cmp
sahf
ds
or
push
pop
jbe
dec
mov
dec
ins
shr
rol
sar
rol
mov
jecxz
outs
int
ja
pop
and
xchg
sub
rcr
jg
fs
cld
inc
ret
or
jb
out
xor
loop
mov
sub
push
adc
cmps
jns
aam
ja
add
push
pop
je
mov
loopne
call
pushf
jecxz
xor
aad
mov
out
loopne
mov
jmp
ret
adc
sbb
fcomp
jl
pop
adc
adc
xor
jb
jmp
popf
push
dec
mov
mov
cmp
fwait
not
icebp
idiv
and
jmp
std
mov
mov
outs
or
fidivr
add
mov
imul
mov
shr
sub
jns
add
lahf
and
and
data16
and
push
fwait
loopne
cmp
cmp
int
pop
(bad)
(bad)
push
mul
jge
lods
std
stos
sahf
repnz
push
je
dec
mov
clc
jge
add
or
loop
or
xchg
jo
add
mov
mov
jl
push
push
dec
xchg
or
movs
in
push
adc
dec
test
in
mov
stos
inc
lock
jmp
js
scas
fistp
(bad)
sub
push
daa
jno
(bad)
pop
adc
mov
aaa
lock
mov
jne
cmp
jns
iret
inc
out
stc
or
lock
lahf
mov
pusha
addr16
sub
dec
int
adc
outs
cmp
std
hlt
mov
and
xchg
dec
aaa
leave
jne
add
lahf
mov
ins
sub
inc
cwde
inc
push
(bad)
or
mov
fcom
push
or
xor
cmp
leave
adc
das
inc
in
sbb
pop
pop
dec
(bad)
cmp
retf
mov
jb
std
aas
add
in
adc
mov
mov
mov
jno
and
pop
xlat
mov
push
cmps
and
adc
mov
inc
jp
add
add
in
dec
(bad)
loop
inc
hlt
adc
mov
mov
mov
popf
xlat
mov
jo
jecxz
pop
push
pop
push
scas
sar
je
mov
mov
mov
mov
mov
jg
pop
cld
lahf
jno
mov
addr16
dec
ret
pop
adc
div
mov
call
xchg
xor
sub
push
mov
icebp
pushf
(bad)
fcomp
sub
lds
mov
or
xchg
jge
push
jmp
jmp
inc
xchg
ds
and
xchg
xchg
sub
adc
jnp
pop
mov
test
dec
push
nop
and
ja
xchg
test
test
(bad)
aas
pop
sbb
data16
mov
aas
jne
jmp
xchg
or
dec
out
jbe
pop
cdq
sahf
ret
sub
add
push
lock
xor
push
mov
scas
ret
mov
mov
push
ins
jmp
cdq
sub
out
push
ds
cmp
out
mov
repnz
cli
cmp
pop
pop
or
jno
cmp
dec
inc
stc
dec
shr
test
(bad)
dec
mov
dec
add
xor
push
inc
cmps
jo
xchg
jns
pushf
xchg
popf
mov
adc
imul
cmp
enter
push
(bad)
push
pop
inc
push
sub
mov
and
lea
inc
dec
in
xchg
or
retf
inc
xchg
add
inc
int3
pushf
sahf
and
outs
add
in
xor
xlat
xchg
xchg
sti
xchg
sub
add
outs
jno
xor
and
(bad)
hlt
lods
dec
pop
adc
stc
call
xchg
add
dec
push
lahf
xor
add
js
mov
adc
xor
add
out
mov
or
(bad)
sahf
stos
(bad)
push
pusha
adc
add
je
sbb
fcom
dec
fdivrp
lock
pop
mov
mov
inc
sbb
jae
mov
jle
out
in
adc
and
pop
add
lods
mov
adc
jg
sbb
bound
fimul
(bad)
sub
jo
movs
push
jg
xchg
nop
enter
imul
mov
cdq
adc
shr
aad
ja
cmp
push
dec
outs
lahf
or
test
inc
mov
adc
push
lock
out
and
sbb
inc
mov
sub
jmp
jecxz
pop
pop
ret
rol
out
mov
das
pushf
es
cs
imul
xchg
push
fldcw
cmp
push
push
enter
sbb
mov
mov
push
outs
test
adc
jae
into
xchg
sbb
cdq
or
fild
sahf
mov
or
mov
add
neg
sub
xchg
adc
xchg
xor
inc
je
push
jl
mov
out
dec
out
adc
xchg
das
mov
stos
hlt
jg
sub
dec
ficom
pop
sbb
ret
pop
sub
div
mov
sbb
scas
xchg
adc
sar
pop
scas
dec
dec
(bad)
jmp
daa
push
jae
mov
loopne
inc
out
adc
xor
ds
aam
retf
sub
or
pop
(bad)
outs
jne
movs
dec
sub
icebp
int3
aad
mov
idiv
(bad)
inc
lea
das
jae
mov
inc
push
jne
cmp
shr
xor
out
movs
dec
cmp
std
add
xlat
mov
lds
fidivr
push
xor
push
push
mov
test
pop
pop
fucomp
sub
pushf
(bad)
fld
addr16
push
scas
rcl
dec
dec
(bad)
sti
lds
test
cmp
fbld
fs
ret
mov
pop
aam
sbb
sub
retf
push
div
push
aad
jb
push
mov
inc
std
pop
(bad)
lock
scas
add
push
add
cmp
jne
inc
ret
adc
mov
movs
push
or
jmp
jle
and
dec
cmp
retf
add
add
xchg
leave
das
adc
fstp
(bad)
push
js
ins
dec
sbb
bound
mov
push
cmps
mov
cmp
in
int
and
jg
sbb
jo
rcr
pop
repnz
or
ins
cmc
lods
test
inc
pop
fwait
lods
call
mov
call
cwde
xor
sub
dec
sub
dec
jno
neg
mov
add
cmp
ins
(bad)
xor
adc
inc
add
data16
into
repz
es
xor
sub
fwait
es
xchg
fild
add
xor
xchg
call
les
gs
mov
ss
(bad)
sti
pop
xchg
cwde
sub
cmp
xchg
add
sbb
sub
mov
popa
stos
jb
cli
mov
repz
cli
mov
mov
lahf
daa
push
push
and
outs
mov
mov
imul
xchg
loope
movs
retf
xchg
dec
sbb
dec
and
and
stc
or
pop
repnz
je
mov
aas
(bad)
stos
xor
mov
iret
pop
or
sbb
jle
in
adc
stos
sbb
jbe
in
test
xchg
jle
in
inc
jo
or
inc
fbld
aas
inc
ds
aas
xor
ret
test
shl
jne
or
in
ret
stc
fild
mov
bound
rcl
into
push
mov
mov
cmp
fwait
arpl
dec
add
lds
cmc
sbb
mov
dec
xor
pop
pop
or
in
imul
push
out
dec
jp
out
fimul
scas
(bad)
popa
jns
mov
pop
fwait
test
jle
mov
sub
xchg
dec
loopne
loopne
js
(bad)
or
xchg
enter
pop
loope
xchg
sbb
rcl
sub
shl
adc
sub
or
and
stos
inc
xor
or
ret
fyl2x
push
adc
and
cmps
add
out
fist
(bad)
fdiv
aad
fldcw
mov
mov
aas
std
or
nop
loopne
mov
fcomp
pop
stos
jne
shl
xor
dec
fnsave
bound
jbe
sub
cmp
arpl
out
push
push
ret
data16
gs
ss
jns
(bad)
push
mov
or
mov
xchg
outs
mov
int
(bad)
mov
mov
jmp
jns
dec
push
shl
js
mov
xchg
jmp
adc
leave
popf
out
jp
outs
jmp
xchg
out
mov
lock
(bad)
mov
int
mov
mov
jb
call
cmc
xchg
sub
mov
jg
sbb
mov
mov
add
repz
add
mov
aaa
pop
inc
dec
in
jne
daa
sbb
add
push
mov
jle
push
xchg
jno
mov
in
mov
leave
rdmsr
xchg
ror
lea
mov
lods
pop
ins
push
sub
sar
mov
outs
mov
(bad)
scas
sahf
mov
or
xchg
out
js
loope
stc
inc
and
ret
sbb
cmp
xchg
inc
inc
sahf
pushf
mov
or
inc
and
mov
cmc
retf
shl
loop
retf
inc
neg
mov
je
or
mov
ja
(bad)
scas
xchg
mov
test
mov
rep
paddsw
xchg
test
adc
push
inc
adc
scas
leave
dec
xchg
jb
sbb
dec
fldenv
daa
sahf
(bad)
sbb
rcl
mov
xor
retw
sub
push
mov
mov
scas
shr
aad
movs
iret
cmp
cmps
adc
in
loope
mov
fcomip
cmp
lods
xlat
and
and
out
xchg
in
push
sahf
pmulhw
addr16
mov
sub
sub
and
sar
rol
cmp
mov
fidiv
jno
pop
push
dec
inc
jo
push
mov
retf
xor
clc
call
in
sbb
jne
sbb
mov
xchg
push
jecxz
sbb
sub
mov
iret
adc
retf
dec
ret
adc
pop
pop
ins
add
add
xor
ficomp
lea
arpl
jae
or
lods
fcomp
(bad)
les
cmp
mov
cld
leave
fsub
cli
cli
jne
sbb
pop
mov
hlt
sbb
mov
sub
loope
dec
dec
mov
cmps
lds
repnz
rcl
mov
mov
add
add
js
or
sub
mov
adc
push
(bad)
jle
clc
ja
jg
fwait
push
dec
in
cmp
loop
pop
pop
and
dec
inc
xor
fwait
hlt
fs
and
retf
cmps
mov
ins
jl
iret
jle
or
shl
or
out
icebp
xor
adc
repnz
cmc
jecxz
icebp
sar
in
sbb
or
dec
push
push
inc
test
aad
push
out
test
stos
cmp
popa
mov
xor
inc
push
xor
inc
push
mov
lods
mov
pop
jmp
aaa
repz
xor
icebp
jns
sar
pop
mov
xor
cmp
jo
dec
std
add
pop
xchg
push
adc
out
stos
sbb
enter
lods
sub
arpl
in
daa
jmp
in
xchg
cmp
cmp
push
xchg
lea
mov
dec
push
shl
push
dec
dec
das
add
cmp
stos
jno
ins
sets
sub
repz
icebp
pusha
adc
repz
adc
ins
mov
mov
mov
inc
sbb
xchg
imul
retf
out
std
popa
iret
cmp
adc
adc
fdivr
mov
cmp
xchg
mov
loope
xor
jl
and
dec
aaa
mov
outs
mov
out
adc
xor
bound
ds
rcl
push
hlt
sbb
and
xchg
mov
push
(bad)
jae
cmp
cmc
cmc
pusha
mov
and
push
lods
jbe
mov
push
gs
stos
or
or
add
call
mov
push
xchg
ret
mov
add
data16
stos
and
mov
push
fwait
sbb
add
add
add
add
cmp
jle
sbb
add
add
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
fsubr
in
je
mov
mov
in
rcr
iret
or
mov
or
and
sti
and
xor
repz
out
sub
jmp
fdiv
std
scas
adc
sub
scas
mov
jae
lock
arpl
pushfw
(bad)
mov
emms
jmp
dec
cmp
inc
adc
push
adc
adc
ins
(bad)
scas
in
jecxz
sub
xlat
inc
push
lds
sub
ins
mov
icebp
jl
sub
pop
inc
clc
test
call
cmc
mov
xchg
movs
sub
movs
and
fnstcw
inc
repz
jbe
xor
mov
adc
or
test
addr16
dec
jbe
jle
stos
imul
jo
push
lock
cmp
data16
fld
pop
inc
ret
mov
test
cwde
out
test
dec
mov
mov
jle
add
(bad)
xor
sub
jg
cmp
outs
mov
imul
paddb
imul
shr
and
mov
xchg
popf
gs
ins
shr
or
fisub
stos
imul
and
mov
pop
inc
mov
or
pop
mov
mov
shr
cmp
inc
arpl
jge
outs
cld
es
jnp
outs
shr
mov
sti
add
test
test
les
ret
sub
test
pop
jo
mov
out
xor
mov
or
sub
and
dec
stc
push
mov
mov
scas
iret
jmp
mov
sti
lods
or
fnstenvw
test
test
dec
jns
shl
mov
sbb
mov
and
loop
fnstsw
or
fst
add
cli
xchg
and
cmp
scas
xchg
pop
pop
xlat
test
lods
call
dec
inc
test
mov
or
repnz
mov
imul
aad
and
sub
and
loopne
ret
sbb
push
test
shr
scas
pop
sbb
ss
lahf
pop
cmp
(bad)
add
mov
(bad)
(bad)
sbb
adc
and
pusha
jmp
sub
fcomp
(bad)
sbb
mov
adc
ins
gs
xchg
push
loopne
or
dec
stc
pop
mov
sub
lods
int3
mov
mov
(bad)
xor
call
in
cdq
cmp
stc
sar
mov
not
mov
cs
aam
push
lods
fwait
out
xor
in
or
je
mov
mov
jbe
in
rcl
(bad)
and
je
adc
push
add
pushf
sysret
lea
lods
adc
popf
daa
xchg
push
xchg
(bad)
out
xchg
mov
or
out
sbb
fadd
push
adc
cmp
std
fld
mov
inc
ss
sbb
mov
dec
xor
(bad)
or
cmp
(bad)
adc
and
or
sbb
mov
sub
loop
shl
pop
in
dec
pop
or
add
or
cmc
cld
movs
adc
jnp
arpl
and
gs
jl
outs
test
adc
inc
jo
mov
or
cmp
xchg
js
addr16
cmp
lahf
repz
lods
rcl
pop
(bad)
loopne
lds
mov
sub
call
aaa
psrad
xchg
adc
or
sbb
movs
sbb
aam
sub
retf
and
shl
in
mov
xchg
sbb
stos
cwde
dec
inc
(bad)
rol
xchg
cmp
aad
jns
push
pop
imul
push
xchg
add
xor
mov
xor
inc
xlat
push
std
cmp
ja
push
sbb
js
iret
mov
add
es
movs
mov
or
pop
cmp
and
es
popf
aaa
add
les
int
mov
jae
adc
daa
pop
mov
cmp
mov
call
nop
push
add
loope
sbb
int
fisubr
in
aaa
retf
lahf
cli
xlat
lahf
inc
repz
inc
xchg
test
daa
imul
fs
jmp
and
fdiv
pop
jge
add
sar
sahf
pop
sub
aad
jmp
adc
in
and
cmp
cs
popf
jl
adc
inc
mov
out
mov
sar
(bad)
xchg
ins
jbe
push
out
retf
outs
jecxz
mov
dec
adc
push
sbb
xchg
add
aad
sbb
pop
sub
jecxz
test
inc
push
dec
add
mov
sbb
aaa
jmp
clc
cvtdq2ps
sahf
pop
cwde
inc
leave
cmp
popa
jb
jo
mov
or
mov
test
daa
test
mov
aaa
xlat
pop
mov
add
loopne
mov
xchg
mov
fild
mov
arpl
xchg
(bad)
lods
mov
maskmovq
test
nop
inc
bnd
in
stc
sbb
xor
pushf
pop
jge
dec
pop
and
and
in
add
std
push
inc
mov
xchg
xchg
inc
(bad)
imul
stos
jp
xor
push
shl
popf
add
aad
mov
xchg
cmps
xchg
outs
jno
jo
mov
jge
data16
and
lock
xlat
test
mov
xor
ins
repz
xchg
push
(bad)
call
sti
fwait
loop
scas
loopne
retf
jbe
sub
xlat
(bad)
cs
push
faddp
loop
mov
cmp
pop
call
(bad)
rol
shr
lock
ret
or
(bad)
std
mov
push
xchg
xchg
mul
daa
mov
das
cmp
loop
stc
loope
dec
add
mov
clc
div
xchg
push
inc
scas
retf
push
jae
jmp
lods
inc
xchg
ds
inc
lods
mov
lea
arpl
in
sub
sub
push
inc
pop
ss
fidiv
sub
xchg
mov
xchg
cmps
mov
js
data16
or
push
sub
(bad)
fsub
push
adc
popf
sbb
dec
dec
pop
fcomp
add
adc
push
sub
mov
jne
repnz
or
adc
push
out
lods
jns
iret
push
xor
mov
enter
push
cmps
movsx
jl
xchg
mov
push
out
inc
addr16
sbb
xchg
iret
mov
in
dec
arpl
pop
or
mov
stc
fidiv
mov
pop
mov
loope
lock
sahf
jno
movs
and
dec
aam
(bad)
xchg
or
test
das
es
jp
push
in
pop
int
jne
and
jbe
stc
mov
xchg
cmp
lahf
xor
jecxz
push
leave
fcmovnbe
or
add
add
pop
xlat
sar
nop
ret
xor
dec
int3
pop
and
cli
mov
sub
retf
addr16
cwde
lahf
add
dec
scas
mov
cli
into
scas
hlt
inc
lea
adc
jno
mov
ror
inc
outs
ret
jg
mov
aad
inc
scas
test
and
adc
sbb
dec
xchg
jae
fadd
js
shr
test
in
aam
sbb
ret
(bad)
cmps
stos
(bad)
(bad)
scas
stos
sub
mov
sbb
pusha
push
stos
arpl
out
xor
lds
sub
or
pop
and
push
jbe
sbb
jg
mov
imul
dec
and
(bad)
mul
mov
pop
adc
xchg
xchg
jp
imul
pop
jae
cmc
gs
push
popa
(bad)
int
mov
nop
mov
push
mov
mov
jg
stos
das
inc
xor
xchg
test
sub
add
ret
and
outs
cmp
ret
out
gs
mov
icebp
and
rcl
mov
subps
mov
add
xchg
sets
test
hlt
mov
ror
outs
in
movs
xchg
loopne
ret
fld
adc
xor
cmp
mov
inc
xor
jb
sbb
and
mov
adc
sbb
jae
inc
ret
movs
pop
ret
xchg
cmp
push
test
jnp
push
popa
cmp
fwait
adc
or
inc
outs
out
jmp
jbe
cld
xchg
stc
inc
push
sbb
add
int3
popf
or
(bad)
imul
jne
pop
mov
push
rcr
and
add
push
lds
or
sub
pop
test
dec
sbb
mov
shl
retf
mov
push
xchg
adc
sbb
jae
pushf
add
lods
sbb
mov
dec
xchg
cmp
and
fild
mov
sub
stos
in
and
pop
cld
dec
test
pop
repz
lods
mov
js
xchg
jmp
push
sahf
mov
add
push
popf
dec
scas
fmul
loop
add
ret
(bad)
mov
inc
sbb
clc
mov
dec
push
push
mov
pop
jae
out
div
inc
inc
cwde
xor
fucomp
xor
dec
mov
outs
cmp
jle
sbb
into
or
xor
adc
inc
pop
daa
jp
mov
or
ins
add
pop
aas
inc
fisub
mov
add
inc
inc
rcl
jns
cmps
jae
mov
fs
test
stc
cmp
(bad)
jbe
stc
clc
in
ror
jmp
in
jmp
int3
xchg
hlt
sub
mov
int3
in
cmp
or
or
adc
inc
js
fs
hlt
mov
je
jno
das
inc
push
xchg
xor
pop
pop
test
fnsave
cmp
rcr
int3
xor
push
push
mov
lock
gs
and
add
aad
fcomp
cdq
test
fs
jbe
movs
rcr
mov
jne
iret
add
aas
sub
ins
(bad)
mov
pop
push
adc
pop
test
or
(bad)
cmp
push
ffreep
pusha
rol
sar
pop
(bad)
call
push
lods
push
pop
dec
loope
loopne
repnz
push
dec
add
inc
ja
sub
idiv
test
dec
jmp
mov
mov
ret
inc
or
sahf
jmp
push
dec
rcr
mov
call
sub
xlat
mov
mov
aaa
mov
xor
hlt
inc
dec
scas
push
mov
xchg
iret
mov
dec
sbb
push
cmp
fwait
popf
mov
cmp
pop
xchg
ror
xchg
aas
inc
jns
mov
mov
pop
fst
out
jo
repnz
shr
pop
jae
lds
imul
jge
fisttp
sar
pop
sar
xchg
in
inc
sbb
arpl
addr16
mov
js
movs
inc
push
(bad)
daa
retf
loopne
inc
pop
test
fld
and
adc
dec
and
movs
add
cmc
sbb
xor
in
in
movs
adc
mov
pop
scas
mov
in
push
js
dec
leave
aas
in
imul
sbb
dec
lock
xor
lock
jns
dec
jmp
dec
mov
sti
fwait
pushf
inc
jge
sbb
clc
test
jg
cmp
inc
rcr
fdivr
frstor
in
pop
dec
sahf
or
add
or
and
xchg
mov
sub
arpl
jle
and
inc
inc
std
mov
add
adc
xchg
cwde
mov
ret
cmp
cmp
es
lods
mov
int3
lar
mov
gs
jb
jle
aad
cmp
add
push
sbb
jo
jmp
popf
(bad)
shl
icebp
sbb
or
(bad)
shl
xor
les
push
lods
cmc
popf
stc
pop
and
and
xor
imul
xchg
xchg
rcl
mov
sbb
pop
dec
scas
push
sub
jge
cmp
add
mov
push
hlt
cmp
std
lods
add
mov
xchg
mov
or
dec
sbb
inc
(bad)
xor
pop
repnz
ins
movnti
mov
dec
(bad)
loopne
mov
out
jg
sub
mov
push
add
xlat
bndstx
loopne
outs
fs
dec
push
and
jno
(bad)
jle
ds
or
adc
rcr
retf
dec
cmps
sub
inc
pusha
ret
sbb
test
shl
into
inc
jae
ds
mov
sub
dec
stc
pop
lea
dec
rcr
jnp
repz
in
xchg
adc
xor
scas
or
(bad)
adc
movs
(bad)
popf
cmc
pop
call
es
ficom
loop
sub
fld
unpckhps
adc
inc
adc
fwait
aad
adc
add
jnp
aas
fs
dec
sub
(bad)
stos
push
call
movs
fwait
gs
fbld
jge
mov
je
adc
adc
jae
lods
dec
and
ds
sub
xchg
inc
test
bound
lahf
iret
cmp
pop
push
sbb
sti
mov
or
mov
and
inc
test
cmps
push
jmp
inc
test
outs
pop
sub
cmp
sbb
(bad)
retf
mov
jb
dec
scas
and
push
sub
or
xchg
mov
sbb
addr16
add
pusha
stos
xor
(bad)
pushf
sub
fnstenv
enter
cli
loopne
shr
mov
mov
dec
dec
int3
or
bound
mov
push
outs
or
stos
or
xchg
test
repnz
or
loopne
int3
fsubr
arpl
call
xchg
fcomp
push
test
imul
ins
add
sub
test
out
out
cmp
jae
mov
fdivr
imul
jns
cdq
inc
loope
and
or
mov
inc
or
hlt
mov
pop
push
mov
arpl
add
fwait
adc
sbb
retf
movs
shl
sti
lea
inc
xor
and
aaa
scas
xchg
dec
leave
xchg
mov
and
clc
sub
in
js
mov
jae
cmp
mov
lds
sar
fwait
jge
loopne
or
out
dec
adc
add
add
add
add
cmp
or
add
jl
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
push
inc
out
js
push
mov
fdiv
bound
ins
(bad)
add
ss
hlt
ret
mul
aas
xchg
jg
sbb
add
sbb
dec
push
pusha
xor
sbb
xor
xor
xor
sub
xor
aas
data16
lea
mov
and
adc
iret
stc
push
pop
(bad)
push
sahf
mov
sbb
push
add
mov
push
xchg
dec
sub
and
or
xchg
stos
jmp
inc
outs
mov
mov
sti
and
out
sub
(bad)
fcmovbe
jle
push
lock
lods
jecxz
jb
xlat
fcomi
and
pop
scas
test
cmps
inc
sub
jg
lods
pop
in
lds
mov
sub
jmp
enter
fstp
mov
mov
ss
xor
sub
jmp
bound
and
leave
adc
lods
adc
(bad)
bound
mov
retf
cmp
jecxz
pop
jmp
dec
jg
adc
sar
mov
push
or
lahf
pushf
loopne
xchg
mov
push
cmc
pop
jecxz
nop
movs
mov
fldenv
mov
in
push
xor
(bad)
fadd
inc
cmp
lahf
(bad)
cmc
sahf
movs
lds
adc
mov
inc
mov
or
ret
mov
aam
je
xlat
(bad)
rol
cli
iret
movs
popf
push
lods
test
jecxz
pop
sbb
sbb
xchg
mov
es
xchg
(bad)
(bad)
or
dec
mov
push
jge
dec
outs
adc
and
pop
lods
add
retf
push
mov
ds
xor
cmp
jge
jp
arpl
lods
dec
shl
out
xchg
mov
popf
cld
dec
sbb
jmp
scas
int
adc
jp
and
retf
aad
mov
outs
ins
xchg
(bad)
dec
cli
or
mov
das
jnp
outs
sti
popa
adc
and
mov
cmp
jecxz
inc
jne
mov
jg
or
imul
test
adc
dec
sbb
push
or
xor
inc
nop
out
gs
cmps
and
mov
dec
add
mov
sti
push
push
push
test
adc
xor
(bad)
fstp
cmc
stos
out
mov
stos
je
mov
add
mov
jmp
(bad)
frstor
std
push
retf
test
hlt
mov
sub
or
push
xchg
sbb
push
inc
in
cwde
outs
mov
pop
enter
push
sub
adc
xor
xchg
add
or
cmp
and
push
add
xlat
cmp
lods
das
(bad)
(bad)
and
adc
pusha
rcr
(bad)
pop
out
xor
xchg
jp
aaa
sub
xchg
mov
or
iret
xor
add
clc
nop
ins
hlt
loope
sub
inc
ds
lahf
movs
fisubr
pusha
xor
push
and
scas
and
jmp
inc
mov
stos
sub
mul
inc
xlat
fiadd
add
cmp
cmps
fwait
loop
shl
mov
pop
and
mov
pop
fild
mov
jb
outs
mov
out
sub
xlat
pop
and
mov
cmp
das
mov
into
sbb
push
pop
sub
cmp
mov
mov
sbb
rcl
scas
mov
mov
jnp
int3
lds
mov
adc
retf
push
sbb
and
nop
mov
(bad)
adc
push
mov
icebp
loopne
jae
pushf
sub
xor
xor
loope
ret
adc
les
outs
adc
(bad)
pop
and
mov
cmp
arpl
pushf
push
in
frstor
jae
sbb
(bad)
and
mov
idiv
lahf
mov
sbb
fs
lock
addr16
xchg
rcr
fwait
movs
adc
sub
es
mov
(bad)
(bad)
pusha
add
rcr
test
in
mov
dec
das
jl
inc
push
jbe
shl
jo
push
lods
mov
and
add
fwait
cmps
ret
arpl
xor
loope
sbb
xchg
aaa
outs
js
xchg
mov
test
int
jmp
add
sti
es
cdq
jg
mov
imul
and
pushf
mov
je
test
ins
inc
mov
dec
xchg
xor
icebp
clc
push
(bad)
sar
std
ins
xor
sub
mov
jecxz
jmp
cmps
or
or
out
fsubr
jnp
jae
dec
xchg
cmps
cmp
add
dec
pop
mov
fwait
cld
das
dec
jmp
push
xchg
pop
push
or
xchg
push
out
inc
adc
or
ja
rol
mov
ret
sbb
sti
jg
sbb
test
cs
inc
xchg
(bad)
fdivr
inc
push
add
cmc
jns
shl
cmps
sbb
and
add
sar
popf
pushf
adc
pop
inc
das
stos
adc
lods
add
adc
inc
outs
(bad)
es
movs
loop
pop
mov
sbb
push
addr16
popf
xor
gs
ins
out
neg
or
cmps
xor
(bad)
rol
std
addr16
xchg
cdq
and
lds
push
and
or
mov
adc
outs
mov
xchg
xchg
fwait
mov
push
add
stos
mov
repnz
jg
inc
dec
sbb
dec
iret
retf
jbe
cld
aaa
or
rcl
mov
mov
fwait
cwde
or
jp
test
fld
sbb
imul
xor
aam
cmp
in
adc
inc
or
int
cmps
arpl
and
pushf
jbe
retf
or
es
mov
cmp
push
mov
xor
(bad)
movs
aam
jmp
popa
ja
div
int3
adc
sub
movs
test
push
pop
pop
push
mov
and
push
sar
sbb
dec
mov
call
xor
imul
cmp
cmps
xchg
jne
jmp
test
test
cs
pop
sbb
loope
sbb
push
adc
lahf
jle
mov
push
jg
sahf
retf
dec
pop
fnstenv
jp
enter
adc
int
jle
iret
or
retf
jmp
cmp
stc
movs
int3
jecxz
in
push
cmp
xchg
ins
mov
pop
pop
xchg
cmp
sub
repz
jnp
cmp
or
sub
jno
xor
rcr
xchg
imul
pop
mov
mov
daa
test
sbb
cmp
iret
test
jge
jle
ror
jns
dec
lahf
jge
push
vmwrite
adc
jecxz
les
sbb
sbb
push
cmp
jne
std
iret
push
(bad)
leave
sbb
xchg
jp
push
jmp
jno
and
cmps
rcl
call
mov
out
and
(bad)
cmp
dec
dec
xchg
inc
mul
jg
and
jl
sbb
(bad)
fisttp
mov
fst
mov
cmp
cmps
or
mov
in
inc
out
out
jge
mov
sbb
int
cmp
adc
jo
test
aam
ss
lahf
ss
push
aad
cmps
pop
ja
out
jne
pushf
hlt
sbb
cmps
mov
test
mov
inc
dec
jne
mov
test
cmps
outs
sti
(bad)
add
outs
and
dec
push
cs
addr16
mov
xchg
fwait
cmp
pop
addr16
mov
out
sub
sub
inc
je
mov
out
in
sti
adc
fnstenv
push
inc
mov
iret
jns
test
(bad)
ret
movs
ins
lea
sbb
icebp
and
addr16
loopne
xchg
add
mov
jecxz
cmps
test
sub
sub
pushf
mov
mov
bound
inc
mov
and
mov
adc
sti
retf
and
int3
cmc
sub
movs
sub
and
cwde
pusha
jge
xor
fwait
out
out
out
inc
jb
mov
dec
fwait
jae
pop
mov
jae
pop
add
cmp
mov
jge
in
mov
cmp
loopne
les
add
inc
sbb
jl
lahf
pop
mov
mov
icebp
jge
adc
enter
inc
add
sti
cmp
fidiv
cmp
(bad)
and
movs
out
cmps
cmps
add
test
out
jno
add
out
(bad)
fnstenv
push
add
mov
pushf
mov
adc
pop
and
cmp
fild
add
jg
imul
and
push
div
push
hlt
add
jg
gs
xchg
mov
ja
sub
in
lods
xor
int3
out
pushf
dec
adc
pusha
outs
aad
sahf
stos
js
jecxz
inc
mov
into
push
add
lea
neg
movs
sar
jno
fucom
adc
int3
cmp
movs
ret
pop
aaa
fidivr
and
sub
cmp
call
sub
scas
(bad)
iret
add
stos
lds
fidiv
ficomp
adc
sub
cmps
inc
push
les
repnz
xor
(bad)
push
pop
mov
mov
outs
ret
js
xchg
into
cli
retf
xchg
push
cmp
push
arpl
mov
fist
add
mov
loopne
dec
xor
cs
cmp
clc
cmp
sahf
mov
out
jae
mov
bound
out
(bad)
loope
cdq
das
cmps
out
mov
cmp
pop
mov
and
ja
xor
add
rcl
sub
into
loop
mov
or
ss
iret
or
dec
(bad)
(bad)
inc
jle
jo
movs
(bad)
arpl
jne
imul
mov
sbb
push
(bad)
into
je
jg
mov
inc
sahf
mov
sbb
push
fcmovnu
pushf
pop
enter
cmps
xor
or
inc
xchg
lea
ins
adc
jae
out
ins
jmp
stos
or
pop
fs
xor
or
sbb
or
(bad)
mov
inc
cmc
add
je
jno
in
xchg
xchg
sbb
sbb
sbb
icebp
inc
pop
fidivr
inc
mov
add
jge
js
jmp
xchg
into
das
rcl
xor
loop
lods
ins
stos
sub
loopne
imul
jmp
sbb
xchg
mov
mov
enter
adc
cs
jns
sbb
jle
jae
fldcw
push
fwait
(bad)
adc
movs
(bad)
mov
xchg
jmp
xor
pop
ins
cwde
div
repz
push
repz
fs
sub
imul
call
mov
mul
(bad)
push
sahf
mov
xchg
mov
mov
mov
in
push
or
in
or
cmp
xor
inc
icebp
cmp
rcr
pop
cmp
add
aaa
dec
call
into
sbb
fld
popf
lds
test
xor
mov
test
loop
pop
ds
pushf
xor
pop
dec
add
ja
sub
repz
lahf
adc
fnsave
mov
je
scas
(bad)
aas
or
xor
dec
adc
mov
pop
(bad)
outs
loopne
sub
jbe
xchg
outs
mov
ret
dec
xor
or
sbb
ret
in
retf
pop
push
add
ret
pop
fnstsw
aam
sbb
add
add
sub
or
or
xor
retf
add
jmp
movs
fisubr
shl
pop
add
call
xchg
xchg
test
pop
je
pop
jbe
jb
call
mov
aad
add
cld
(bad)
daa
dec
mov
xlat
out
dec
pop
push
pop
add
xchg
adc
jl
sbb
shl
test
inc
mov
xchg
cmp
mov
mov
inc
mov
xchg
sub
inc
cmps
dec
sub
push
cmp
fisttp
add
cmp
mov
shr
ret
(bad)
jno
jg
mov
and
arpl
jl
lods
movs
cmp
in
mov
push
stos
or
sbb
cli
fwait
mov
and
into
das
sbb
and
push
ins
cmp
xchg
jecxz
xchg
in
frstor
xlat
pop
xchg
aaa
shl
add
push
rol
pushf
aaa
mov
adc
mov
push
daa
aaa
xor
xchg
inc
or
xchg
aaa
push
add
or
push
mov
adc
mov
retf
sbb
adc
shr
and
inc
pop
icebp
push
and
cmp
fs
add
pop
and
lods
mov
xchg
mov
ret
pop
sahf
xchg
pop
fldenv
daa
cmp
movs
dec
stos
mov
and
pop
pop
pop
cmp
or
mov
pop
and
push
push
xchg
jle
clc
jo
popf
fldenv
aas
mov
sar
aaa
das
(bad)
js
xchg
cmp
cmp
mov
std
xchg
dec
push
xchg
xorps
pusha
push
rol
ins
mov
daa
pop
sar
adc
ds
cs
cwde
fsubr
push
mov
sbb
mov
pop
mov
jbe
ret
sti
mov
aad
jbe
jge
mov
jp
xor
stos
sub
sbb
cmovo
jbe
mov
add
ror
inc
imul
aaa
gs
test
mov
outs
popa
mov
mov
out
fcmovne
adc
jp
sbb
dec
pop
rcr
pop
pop
adc
jno
cdq
inc
mov
(bad)
loop
into
out
or
adc
mov
mov
sub
cmc
xchg
repz
add
inc
enter
adc
cmp
mov
sbb
cmc
mov
dec
push
retf
add
fsubr
add
les
mov
bound
push
pop
jecxz
iret
mov
inc
test
dec
imul
and
cld
idiv
jmp
jb
xlat
in
jmp
dec
xor
(bad)
in
in
mov
aam
xor
pushw
(bad)
xlat
inc
mov
(bad)
iret
sub
mov
retf
mov
stc
aas
ret
and
jp
(bad)
jmp
(bad)
fild
jo
sub
inc
data16
or
mov
jns
xchg
dec
daa
cmps
fwait
imul
cmp
cmp
in
in
push
test
sub
cs
jb
loop
fld
pop
nop
jmp
aam
cmp
mov
es
sbb
mov
xor
je
repz
sub
sub
dec
add
cmp
out
pop
dec
mov
cmp
stc
loope
mov
enter
xchg
ins
and
jns
mov
push
(bad)
xchg
sub
sti
push
pop
icebp
cmp
push
mov
xor
xlat
adc
inc
(bad)
xor
cmps
lea
xor
stos
and
rol
nop
mov
xor
cmps
movs
jecxz
fimul
mov
mov
sbb
sbb
sahf
and
std
xor
jno
rcl
push
or
pop
jo
rcl
addr16
mov
pop
sub
cmps
sahf
or
sti
sub
rcr
lahf
xchg
movs
pop
cmps
lds
frstor
inc
lods
cmp
dec
test
xchg
add
jae
loop
cmp
pop
aam
jns
inc
push
(bad)
je
jns
pop
adc
adc
add
loopne
mov
adc
pop
lahf
mov
push
inc
cs
pop
imul
jbe
push
pusha
je
outs
cmp
add
jae
mov
mov
mov
gs
inc
scas
lahf
and
movs
in
xor
pop
mov
in
pop
daa
adc
jno
ja
pop
mov
mov
pop
adc
outs
mov
add
xchg
ret
or
dec
add
add
add
add
cmp
jp
bnd
add
pop
inc
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
mov
inc
sbb
jl
pop
inc
in
or
push
fild
or
outs
idiv
push
push
ror
mov
jns
jne
cwde
push
stos
ds
inc
nop
adc
xor
lea
add
push
es
adc
lock
addr16
arpl
jae
lea
xchg
fidivr
push
into
inc
mov
in
stos
dec
xchg
jae
push
out
cmc
(bad)
shl
popa
in
sar
into
and
(bad)
jl
xchg
add
pop
retf
inc
jnp
popf
mov
aaa
and
popf
repnz
jmp
pop
cdq
sub
sub
pop
stos
push
push
xchg
sub
in
cmp
cwde
test
or
stc
cmp
(bad)
push
sar
push
xchg
lods
cmp
mov
dec
mov
mov
and
lods
sbb
lock
(bad)
lods
mov
iret
ret
xchg
test
add
add
sti
or
outs
mov
pop
imul
adc
adc
data16
add
test
sar
mov
loope
scas
xor
push
rcr
mov
data16
sub
repz
aam
sub
xchg
push
add
adc
mov
adc
push
ret
push
imul
aaa
(bad)
outs
or
aad
clc
or
mov
(bad)
cdq
adc
jp
pop
adc
xchg
inc
daa
cmp
les
add
int
in
pushf
or
sub
mov
ror
scas
outs
outs
xchg
adc
into
jo
dec
sub
xor
sub
out
mov
imul
pushf
jmp
mov
mov
xchg
xchg
stos
(bad)
in
jno
add
cmp
add
clc
into
cmp
push
push
adc
dec
xor
jmp
push
neg
rcr
imul
push
jl
jl
out
pmaddwd
push
mov
push
fmulp
jmp
inc
jae
(bad)
repz
jmp
adc
xchg
int
sub
imul
cdq
sub
lods
fdiv
ret
dec
xchg
jecxz
stos
aad
(bad)
pop
mov
mov
add
dec
(bad)
int3
mov
hlt
cmp
pop
dec
mov
in
into
cmp
fdivr
ss
sub
sbb
push
(bad)
mul
dec
inc
xor
in
call
cwde
mov
push
scas
xor
sti
test
add
mov
push
pop
mov
cs
mov
daa
rol
and
je
outs
sub
mov
inc
xlat
pop
sar
xchg
adc
adc
cmp
cmps
cli
addr16
out
dec
mov
mov
pusha
add
test
arpl
mov
jbe
(bad)
push
inc
jmp
aad
adc
pop
pop
mov
or
outs
sub
jno
inc
out
or
xchg
stc
cmc
outs
mov
fmul
test
movs
fnstcw
fstp
cmp
mov
leave
pop
lock
jns
dec
dec
cmp
fnstsw
data16
shl
push
pop
sbb
mov
cmp
fwait
stos
ret
(bad)
fsub
xchg
test
xchg
fdivr
ret
mov
xor
loop
jns
repnz
dec
cmp
cdq
lds
out
popf
sbb
(bad)
sbb
push
lock
retf
xor
ret
pop
sbb
jmp
push
sbb
sub
sbb
mov
mov
and
dec
mov
repnz
xlat
mov
js
cli
retf
loopne
out
or
sbb
ja
mov
out
pop
sbb
sbb
sub
adc
jl
sub
(bad)
fbstp
clc
pop
cmc
mov
rcl
fimul
pop
cwde
xlat
je
mov
fisttp
stos
or
fstp
outs
cmp
call
repz
push
(bad)
jecxz
inc
loope
inc
pop
std
mov
mov
jmp
mov
lds
ds
retf
fild
cmps
cmp
or
je
mov
mov
dec
fiadd
pop
movs
push
push
(bad)
imul
jns
push
leave
mov
and
rcr
clc
stos
sub
xchg
out
inc
jle
repnz
je
push
out
inc
inc
and
and
xchg
pop
cld
scas
fs
loopne
mov
cli
stc
mul
inc
mov
rcl
add
aaa
(bad)
fisttp
jg
or
fisttp
sub
fstp
xchg
add
aaa
rol
push
lahf
xor
sub
pop
inc
cmps
add
pop
push
fisub
xchg
(bad)
pop
inc
in
enter
imul
ror
push
pop
jl
lahf
ja
popa
dec
mov
lock
push
ret
fldcw
pop
or
and
cld
nop
inc
push
(bad)
pop
jge
add
pop
fs
rol
aad
push
jne
int
ins
push
clc
mov
sub
cmps
push
inc
lods
or
sbb
mov
and
and
xor
jnp
cmp
add
sub
adc
pop
mov
mov
push
xor
cmp
(bad)
inc
sub
int
sub
and
or
jbe
jns
(bad)
daa
js
cmp
inc
xchg
(bad)
ss
nop
xchg
mov
ss
jecxz
inc
adc
mov
and
and
inc
sbb
sub
(bad)
mov
adc
in
scas
push
into
cmps
fnstenv
shr
and
or
push
inc
jae
xor
xor
sbb
add
and
popa
dec
lea
add
add
out
adc
aaa
mov
adc
or
add
(bad)
gs
cmp
xor
loope
rol
mov
ins
add
popa
mov
cmps
lahf
xchg
movs
iret
jmp
or
(bad)
arpl
lahf
mov
retf
ins
stc
pop
rcl
push
cmps
sub
push
mov
popf
and
out
jmp
xchg
into
xor
ret
jecxz
mov
hlt
mov
ret
push
retf
sub
leave
inc
dec
jnp
iret
xchg
out
scas
test
lods
pusha
inc
xor
cmp
adc
xchg
mov
aad
out
arpl
push
push
cmp
lahf
jl
adc
rol
or
inc
fcmovu
jge
mov
test
outs
xchg
in
outs
popa
or
outs
in
mov
push
cld
inc
loop
dec
add
jns
or
test
sahf
dec
add
inc
sub
fisttp
sbb
inc
mov
call
pop
(bad)
or
cmps
test
mov
cmc
aad
mov
test
push
fsub
repz
pop
mov
push
dec
pop
popa
pop
nop
mov
daa
scas
or
pop
push
(bad)
pop
xchg
push
sbb
pusha
popa
aad
xor
int
xchg
in
ins
mov
lds
aad
shl
dec
xor
jmp
repz
mov
popa
fisttp
dec
(bad)
imul
sbb
sub
adc
add
rol
lea
(bad)
cmps
jmp
test
mov
out
or
scas
ins
pop
or
pop
call
inc
jns
fadd
or
pop
mov
xor
out
ins
push
je
je
xchg
aaa
cmp
mov
add
add
jmp
push
or
jae
push
es
ins
hlt
clc
push
out
sub
cmp
aas
mov
xchg
inc
(bad)
je
outs
ret
ss
xchg
pop
adc
cmp
or
fsubr
or
or
repnz
repz
xchg
push
inc
add
push
xchg
out
ins
ss
repz
in
pop
pusha
lds
add
mov
loope
mov
push
mov
jmp
cmp
hlt
retf
sbb
mov
scas
into
adc
cli
push
and
mov
fcom
push
(bad)
mov
mov
test
loope
movs
push
enter
int3
int
adc
pop
popf
add
sbb
mov
xor
jecxz
add
mov
and
in
xor
jne
fcom
dec
shl
pop
cmp
xchg
jp
fcom
mov
fwait
je
xor
or
jmp
test
pop
lods
cli
les
inc
enter
xchg
test
int3
xor
add
push
ja
nop
dec
cdq
mov
push
push
icebp
pop
xor
lods
or
aas
lods
dec
jp
or
pop
fsubr
sbb
outs
pop
repnz
push
test
out
jmp
dec
xor
push
pop
retf
pop
inc
mov
push
les
mov
sti
jns
(bad)
ret
jg
inc
mov
(bad)
mov
mov
dec
and
xchg
or
adc
mov
imul
std
pop
mov
stos
dec
test
mov
icebp
popf
mov
jo
in
cmps
sub
sub
(bad)
mov
(bad)
xor
out
dec
push
adc
mov
xchg
fimul
cs
jg
pop
mov
stc
ret
cdq
aad
nop
inc
aaa
es
sub
dec
jbe
int
adc
or
jp
test
mov
xor
xor
inc
or
imul
fdivp
jb
jle
dec
in
mov
sbb
adc
mov
loop
dec
mov
imul
cmp
aas
iret
jle
mov
jnp
pop
pop
push
xchg
shl
sbb
sbb
cld
ds
js
aad
icebp
adc
out
sbb
xor
shl
loop
cmp
leave
push
(bad)
enter
mov
pop
fdiv
jmp
dec
fnsave
fisub
(bad)
ja
(bad)
sti
sahf
lea
push
jp
test
pop
and
int
cwde
in
sahf
daa
push
mov
sub
and
arpl
retf
call
inc
xor
sbb
dec
jmp
dec
jmp
ret
and
out
mov
repnz
xchg
fiadd
fdiv
lea
adc
cmp
and
cmps
(bad)
js
ret
ja
mov
hlt
xchg
ds
jle
loopne
popf
push
jns
mov
mov
ins
push
daa
adc
retf
and
iret
pop
and
adc
loopne
nop
(bad)
(bad)
pop
daa
cmp
retf
test
sahf
dec
adc
or
mov
data16
xchg
jae
adc
push
(bad)
mov
push
call
push
adc
xchg
test
mov
pushf
and
xchg
rcl
xchg
out
mov
neg
jno
(bad)
push
(bad)
outs
retf
pop
(bad)
jb
mov
and
or
rcl
xchg
(bad)
imul
idiv
repnz
inc
adc
jne
pop
loop
adc
and
push
jne
jmp
add
push
lock
and
aam
xchg
cld
popa
pop
dec
sub
hlt
or
aas
bound
pop
and
jp
dec
push
repz
out
xor
adc
out
inc
ins
jge
cmc
(bad)
sub
xor
cmp
jne
call
jne
mov
rcl
ret
push
mov
sub
mov
aam
dec
je
cmp
or
add
jns
push
aaa
xchg
int
xor
inc
cmp
jmp
push
add
loope
push
std
mov
test
xchg
mov
mov
out
scas
daa
mov
mov
jmp
cmps
loope
test
loope
mov
dec
jb
jae
and
ret
mov
call
fsubr
sub
mov
sub
mov
adc
(bad)
pop
test
dec
dec
call
mov
retf
ret
movs
mov
out
sbb
and
iret
call
adc
cwde
out
push
mov
loopne
fidivr
in
jle
cmp
(bad)
out
jbe
retf
clc
xchg
and
addr16
jae
imul
mov
push
loope
jnp
dec
xacquire
bound
call
mov
pop
pop
les
mov
push
stc
mov
enter
test
ins
movs
dec
add
xor
xlat
jecxz
iret
fimul
fbstp
inc
rcl
pop
mov
ficomp
push
jp
adc
dec
mov
test
aaa
daa
pop
int3
test
inc
push
sbb
xchg
sbb
nop
dec
sar
icebp
int
adc
cmps
push
test
std
adc
mov
cmp
cmc
add
jbe
(bad)
mov
inc
lds
jg
iret
(bad)
scas
dec
stos
cwde
out
loopne
dec
sbb
add
sbb
push
mov
call
sub
enter
pop
xchg
mov
dec
clc
sbb
jae
sub
sbb
test
imul
jnp
jecxz
ficomp
xlat
inc
sti
fstp
scas
add
test
push
mov
inc
xor
jmp
cmp
jge
shl
sub
sub
cmp
sub
jge
arpl
pushf
jmp
popa
stos
data16
rcl
fadd
and
pop
retf
ror
xor
popf
mov
ja
in
fnstcw
cld
mov
jo
in
push
push
pop
leave
sbb
cmps
aaa
push
lahf
or
cld
inc
in
outs
push
inc
or
dec
ins
push
ret
arpl
sti
and
or
dec
icebp
jb
xor
mov
(bad)
(bad)
dec
dec
(bad)
jae
mov
jmp
sbb
dec
dec
sub
mov
mov
jle
cwde
pop
or
mov
int3
int
aad
into
xchg
pop
popf
fnstsw
addr16
push
adc
in
add
mov
in
xor
inc
(bad)
fidivr
or
jmp
xchg
add
jnp
jp
add
arpl
loopne
cmp
cmc
mov
loope
retf
push
pusha
or
shl
data16
movs
sbb
sub
xchg
aas
jg
jne
ins
retf
jnp
pop
arpl
int3
rol
fstp
out
int
rol
push
into
fisttp
cmps
(bad)
push
shl
cmp
hlt
lods
xor
sub
sbb
popf
add
push
inc
outs
not
dec
sub
push
sub
shl
adc
je
mov
push
xchg
loop
xchg
xor
stos
ret
jbe
and
adc
add
or
push
movs
cmp
mov
add
in
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
imul
jno
jne
sub
clc
xchg
sub
sar
pop
and
sub
xlat
not
jae
lock
loop
mov
cmp
in
add
test
jl
push
sbb
cmps
jg
mov
add
das
repnz
bound
lea
je
scas
xchg
loope
je
out
ficom
lds
add
pop
pop
retf
mov
aas
and
popa
shl
or
jl
cmp
xchg
jb
mov
mov
mov
and
cld
sub
sub
and
pop
in
sub
cmc
adc
pop
push
lods
inc
inc
xchg
or
cmp
adc
push
mov
shl
in
xchg
in
jne
fst
push
cs
inc
fwait
jns
sbb
or
add
iret
mov
and
ins
pop
sbb
shl
or
dec
orps
dec
inc
arpl
rol
sbb
mov
adc
dec
sub
add
xchg
jmp
ror
push
sbb
push
lods
push
inc
sbb
mov
mov
fsub
lea
dec
mov
cmp
mov
jb
mov
mov
in
xchg
les
sti
ja
pop
xor
inc
inc
hlt
mov
add
imul
out
pop
ret
cld
stos
inc
mov
mov
shl
aas
dec
fadd
xor
mov
push
sbb
popw
cmps
push
dec
aam
mov
mov
das
jb
out
jo
jns
adc
sbb
(bad)
sahf
call
push
adc
pop
inc
mov
sub
outs
rcl
pop
sahf
inc
sbb
in
sbb
or
mul
dec
ficom
sbb
sbb
int3
cmp
sti
call
cmps
inc
test
push
inc
call
cs
cmps
fsubr
xchg
push
adc
out
gs
aas
mov
ja
rcr
pop
js
rcr
inc
les
dec
aam
shl
or
dec
test
je
addr16
in
icebp
xchg
shr
es
in
or
nop
mov
repz
jo
pushf
dec
sbb
nop
movs
mov
sub
adc
mov
sbb
(bad)
push
mov
mov
shl
jmp
outs
and
out
pop
jecxz
or
repnz
enter
adc
jnp
(bad)
mov
xor
push
into
out
std
sahf
or
scas
jp
xor
jle
out
rol
mov
iret
les
hlt
outs
sbb
fst
iret
jecxz
leave
mov
clc
and
sar
push
cmc
inc
xor
(bad)
ja
js
(bad)
cwde
(bad)
ins
aad
and
mov
cmp
sbb
mov
lock
jmp
adc
mov
mov
mov
sti
outs
shr
mov
push
mov
test
and
jp
add
(bad)
(bad)
and
(bad)
xchg
fcom
sub
ss
test
scas
sub
stos
jge
jecxz
or
jmp
jmp
(bad)
xchg
jg
stos
ret
jb
data16
js
das
push
adc
xchg
ud2
mov
clc
fadd
dec
or
idiv
pop
mov
sbb
ja
adc
sti
imul
aad
scas
aam
aaa
jmp
add
dec
fs
sbb
lods
out
daa
mov
(bad)
loop
mov
pop
dec
fst
mov
xchg
adc
fcom
ret
out
mov
mul
(bad)
push
adc
add
xchg
movs
rcr
outs
push
sbb
(bad)
jnp
sub
inc
jnp
cdq
dec
jbe
shl
jo
mov
inc
dec
add
sub
aad
mov
daa
pop
clc
mov
addr16
jnp
push
and
push
int3
iret
push
mov
dec
mov
jae
push
push
imul
cwde
iret
push
not
xor
and
inc
xchg
sub
scas
shl
popa
test
or
ins
fcomp
cmps
push
and
fmul
xchg
loopne
or
pop
ror
mov
or
rep
jns
cdq
mov
fisubr
stos
xchg
loope
arpl
and
nop
jnp
shl
xor
aaa
inc
test
cmp
sbb
push
stc
xchg
xor
call
(bad)
mov
cmps
or
inc
pop
rcl
dec
ins
sbb
dec
setge
push
cmp
or
sbb
repz
aas
mov
xchg
into
in
dec
into
jno
xor
push
pcmpgtd
sti
mov
or
ret
stos
mov
cmp
std
repnz
in
ret
push
icebp
inc
dec
sbb
ffree
lahf
ins
mov
fs
xchg
sbb
sbb
jmp
xchg
lds
mov
div
rep
xor
test
or
ret
fld
xor
out
in
xor
and
mov
loop
movs
push
(bad)
into
cmp
push
adc
imul
fwait
cld
inc
mul
xor
and
jg
add
call
mov
out
js
fs
ret
mov
adc
pop
jecxz
test
fmul
addr16
mov
mov
inc
je
jle
or
mov
mov
ins
mov
out
cmp
xlat
je
xchg
repz
stos
dec
jo
jg
add
inc
push
cli
cwde
jbe
and
gs
ins
stos
dec
push
cmps
xchg
mov
inc
out
and
lock
dec
arpl
mov
fmul
adc
stos
cs
sub
xor
add
aad
gs
pop
out
sahf
cmp
add
fmulp
ss
loope
xchg
scas
paddd
cmp
(bad)
push
or
mov
jecxz
mov
int
fnstsw
nop
ins
mov
pusha
add
nop
adc
nop
pop
dec
mov
(bad)
jae
ds
cwde
aam
ins
xchg
in
je
dec
jae
fidivr
(bad)
mul
pop
inc
jmp
cli
dec
scas
(bad)
enter
cmp
fnsave
adc
sar
jae
cmp
cs
test
cmp
xchg
sub
sbb
int3
add
dec
scas
cmps
dec
jo
xor
pop
add
add
add
push
call
jno
cmps
sbb
das
icebp
inc
fs
inc
iret
popf
nop
adc
repz
out
test
xchg
or
push
xchg
fstp
idiv
lods
call
jb
test
stos
pop
or
xor
pop
cmc
xchg
push
fld
dec
cmps
cli
pop
pop
ins
ins
call
mov
pop
jmp
dec
sub
xchg
stos
sbb
xchg
pop
cld
mov
mov
or
mov
pop
push
add
inc
fwait
mov
or
leave
dec
mov
in
cmp
inc
push
cvtpi2ps
(bad)
jle
pop
mov
call
lods
jl
mov
and
xchg
xor
pop
scas
rcl
sbb
mov
cmp
mov
sub
sbb
and
push
(bad)
add
and
pop
and
pop
sbb
mov
test
int
inc
ja
mov
in
and
daa
inc
out
push
movs
nop
icebp
aas
loopne
add
jmp
mov
imul
sahf
movzx
mov
mov
xchg
test
or
clc
push
jmp
retf
(bad)
fiadd
mov
pop
int3
inc
movs
imul
push
stos
stos
dec
ins
(bad)
int
sbb
scas
mov
adc
sahf
repz
cmp
mov
mov
inc
push
fist
pop
push
outs
jo
cmps
xchg
sub
shr
push
aaa
stc
and
dec
jge
push
pop
daa
fidivr
enter
fs
sub
dec
mov
imul
call
pop
out
mov
add
xor
stos
adc
idiv
mov
out
cld
(bad)
rcr
xlat
xchg
cmp
dec
stc
mov
ss
xchg
clc
jae
out
pop
icebp
cwde
mov
adc
and
iret
out
inc
dec
ins
xor
mov
jmp
data16
pop
xor
mov
aad
push
bound
pop
mov
add
pop
mov
out
jp
and
pusha
stos
loope
aad
js
cmp
xchg
lods
push
and
adc
and
loopne
cmp
mov
jno
retf
retf
arpl
xor
mov
and
push
push
add
call
sub
jae
mov
pop
rol
mov
rcl
xchg
xchg
ret
pop
sbb
lods
jle
lods
fnsave
sbb
sar
imul
dec
fstp
inc
xchg
std
mov
jl
sub
xchg
and
xchg
or
xor
(bad)
sub
addr16
bswap
mov
dec
adc
in
(bad)
mov
movs
stc
xchg
adc
jp
cmp
idiv
push
(bad)
mov
int
fwait
mov
(bad)
jl
mov
shl
(bad)
fbstp
push
ja
stc
arpl
mov
dec
sbb
retf
imul
ins
add
outs
cmp
addr16
jecxz
cmp
mov
adc
push
push
jge
(bad)
out
xor
add
outs
enter
cmp
pop
pop
(bad)
and
enter
mov
mov
jle
mov
push
push
jae
in
cdq
dec
xor
call
or
cmp
jge
loopne
dec
sbb
dec
(bad)
shr
cmc
movs
push
call
sbb
ret
sub
sub
add
push
retf
nop
fisub
out
movs
jecxz
jp
adc
xor
dec
(bad)
loope
cmp
arpl
int
add
scas
fld
rol
pop
inc
push
xor
(bad)
and
mov
xor
mov
(bad)
fimul
cwde
mov
sti
loop
sbb
das
(bad)
pop
shr
fdiv
(bad)
and
pop
cwde
retf
in
(bad)
loop
movaps
mov
jg
mov
push
push
bound
mov
iret
cmp
retf
dec
lods
xor
popa
add
mov
call
test
mov
nop
adc
cmp
loopne
bnd
mov
nop
rcl
add
bound
jle
test
jle
mov
sub
dec
outs
js
sbb
inc
xor
xlat
sub
jp
out
mov
test
jnp
xor
push
enter
sahf
outs
jbe
or
push
mov
adc
push
mov
adc
ret
ret
xor
cmp
outs
aas
lahf
rcr
(bad)
push
pop
imul
pop
out
cmp
cmps
fisub
inc
add
inc
repz
popa
cmp
mov
push
xchg
xor
jns
inc
push
sbb
mov
or
and
mov
shr
pop
gs
push
push
sbb
movs
lea
(bad)
cmps
fs
mov
xor
mov
pop
add
movs
iret
not
pop
sbb
add
mov
jmp
(bad)
mov
or
add
lods
(bad)
es
inc
or
xlat
ret
or
or
mov
sub
(bad)
sub
push
cli
add
sub
xor
fwait
jbe
into
jmp
in
jle
cmps
bound
adc
mov
sub
pusha
in
fnstcw
pop
adc
push
(bad)
cmp
movs
pop
cmp
stos
cli
lock
sub
mov
leave
pop
sub
xor
bound
dec
lods
mov
cli
sahf
cld
jge
pop
int3
or
fcomp
mov
mov
test
cmp
sbb
sub
fstp
sub
movs
jl
mov
fild
and
mov
lods
xchg
scas
and
sub
mov
rcl
mov
dec
out
xchg
fmul
xor
(bad)
sar
scas
inc
gs
adc
(bad)
and
mov
(bad)
and
(bad)
pop
pusha
cmps
inc
test
out
psubusw
jl
push
mov
push
neg
fistp
fcom
cmp
int3
jp
gs
jmp
inc
mov
push
adc
mov
xchg
pop
or
mov
das
je
pop
and
xchg
add
in
inc
movs
pop
adc
call
ret
mov
mov
jns
sbb
enter
out
dec
jg
frstor
add
retf
imul
sti
call
and
into
mov
cmp
cmp
sub
call
mov
mov
mov
mov
inc
xor
scas
mov
push
addr16
add
in
jmp
in
adc
add
inc
shl
inc
scas
imul
stc
xchg
icebp
dec
xor
xor
retf
cdq
aas
xchg
cmps
push
xlat
pop
sbb
jae
test
fisub
jno
pop
popf
and
jmp
jg
sbb
adc
xlat
cmp
stos
sub
imul
jns
cli
inc
cmp
sbb
mov
dec
or
jae
ins
jle
dec
(bad)
pop
push
arpl
repnz
lods
stc
das
mov
inc
mov
xor
and
ret
fbld
mov
pop
sub
rcl
scas
adc
mov
mov
sub
(bad)
jp
imul
sar
inc
sub
cdq
int
in
in
xchg
js
xchg
movs
lods
ret
sar
sbb
jbe
sbb
jmp
in
ret
xchg
out
push
sub
jle
sbb
sbb
test
fldenv
and
inc
aam
sbb
xor
dec
jnp
dec
mov
cld
out
enter
rol
jmp
and
int3
xchg
mov
or
sbb
push
or
rcr
push
aam
mov
outs
test
xor
inc
xlat
add
nop
sti
xor
outs
or
adc
sbb
std
sbb
sub
pop
jp
ret
test
xchg
fs
push
dec
retf
mov
inc
jne
icebp
outs
sub
xchg
inc
in
lods
loope
mov
pop
xor
mov
pop
or
es
push
xor
jnp
mov
fmul
lods
sbb
fisubr
sbb
mov
mov
pop
(bad)
neg
icebp
outs
iret
rcl
cmp
inc
fs
(bad)
mov
ins
inc
leave
ja
jae
ret
dec
retf
std
and
jno
stos
call
jle
mov
sub
lods
aas
cmps
mov
inc
cmc
pushw
out
enter
int3
jl
push
lods
loopne
mov
push
mov
inc
sbb
(bad)
ror
std
sbb
adc
enter
arpl
jl
call
cmp
sbb
fisttp
jo
jnp
je
and
mov
mov
pushf
cmps
inc
idiv
fidivr
adc
mov
jno
into
dec
adc
aam
cmps
pusha
cld
outs
xor
push
fwait
cmp
hlt
or
out
fistp
inc
shl
mov
push
(bad)
loopne
ins
jmp
dec
and
fwait
out
aad
push
inc
retf
mov
push
dec
add
add
add
add
cmp
sbb
jne
sldt
adc
add
add
jae
ins
popa
outs
addr16
addr16
jae
cmp
sahf
jmp
adc
sti
call
(bad)
jmp
pop
dec
sub
in
dec
(bad)
and
scas
out
sub
dec
push
jecxz
rcl
mov
setae
ds
mov
jo
or
lahf
arpl
call
nop
push
sub
adc
mov
jle
mov
fcomp
mov
push
scas
and
cmp
push
jno
imul
mov
dec
or
sbb
jl
daa
pop
inc
arpl
in
das
inc
push
loop
mov
scas
nop
stos
push
push
inc
in
dec
adc
test
repnz
lock
fld
xor
fcom
call
add
xor
mov
jmp
ins
ret
fst
dec
dec
or
xchg
cmps
lahf
lock
xchg
xchg
or
dec
xor
ret
add
pop
xchg
xor
dec
fld
outs
aas
push
cdq
scas
dec
jno
lds
fnsave
loopne
jmp
and
cmp
or
cmp
pop
shl
jle
sub
add
dec
data16
sbb
icebp
pop
shr
and
jge
fisub
loope
adc
inc
test
jmp
adc
mov
mov
outs
pop
adc
or
cmp
dec
cmp
jmp
xchg
push
bswap
das
jmp
push
xor
adc
xlat
fucom
sub
mov
and
add
add
ja
and
sbb
(bad)
out
or
inc
inc
in
fisttp
sahf
mov
arpl
xor
es
lods
mov
mov
and
fstp
int
shl
test
aam
push
ret
jmp
adc
jbe
jno
rcl
pop
in
push
enter
sub
cmp
clc
outs
jmp
(bad)
mov
retf
call
in
leave
sbb
(bad)
in
int
test
and
stc
(bad)
jae
cs
jo
retf
push
das
test
add
xor
mov
mov
xchg
es
or
mov
push
mov
popa
mov
xor
loope
in
adc
cmp
dec
rol
mov
loopne
mov
repz
xchg
popa
add
iret
ins
aad
(bad)
add
jae
movs
shl
ins
dec
mov
cdq
sbb
or
cmp
or
rcr
dec
fbstp
pop
push
jmp
(bad)
xor
pop
cwde
movs
lock
out
sub
pushw
xchg
loop
mov
mov
push
inc
xor
lods
and
mov
inc
hlt
xor
and
js
aaa
ret
sbb
mov
mov
push
dec
fs
add
sbb
pushf
sbb
int
jle
pop
dec
jl
pop
pop
stos
add
dec
inc
pop
inc
mov
rol
sub
inc
xchg
je
test
out
mov
nop
cmp
in
add
cmp
sahf
xor
fwait
icebp
nop
vrcpps
and
enter
fisttp
xchg
call
inc
push
out
dec
sub
fs
add
in
ret
frstor
leave
and
test
sbb
add
jo
loopne
dec
jb
lea
ret
jmp
fsin
repnz
mov
xchg
dec
jo
das
cwde
aam
xor
adc
and
xchg
jnp
lahf
sahf
pushf
das
jmp
mov
mov
jecxz
outs
shl
sub
jg
mov
shl
pop
mov
lock
lock
das
test
ret
shl
nop
daa
pop
xchg
out
dec
sbb
mov
and
xchg
xor
fidiv
jge
xor
push
or
ins
imul
fdiv
adc
fld1
jmp
stos
jle
pop
mov
xor
repz
stc
sar
(bad)
pushf
jns
movs
loope
add
fs
lahf
loop
(bad)
pop
cmp
push
push
sub
aaa
mov
adc
shr
cwde
xor
imul
daa
ss
repz
(bad)
and
jns
jo
adc
(bad)
lea
mov
pop
push
out
jge
push
xor
mov
jbe
push
xchg
cmp
mov
mov
push
sub
and
mov
mov
dec
adc
cmp
inc
push
dec
mov
fcomp
mov
test
mov
xchg
sbb
ins
add
call
adc
sti
pop
dec
or
mov
push
ins
mov
ret
mov
push
loop
mov
sub
xchg
sub
pop
je
mov
sbb
mov
fisttp
jno
fs
xor
clc
(bad)
pushf
mov
push
test
imul
mov
fs
mov
dec
dec
jno
test
jmp
mov
loope
std
shl
fmul
push
or
dec
jbe
mov
xchg
mov
pop
scas
sbb
add
nop
out
adc
dec
(bad)
in
cmp
cmp
xor
dec
mov
test
aas
push
ja
int3
cmp
mov
jl
inc
lods
pop
xor
xor
push
mov
movs
addr16
cdq
xchg
adc
and
pop
lock
data16
sub
mov
ret
loopne
or
xchg
sbb
mov
cld
inc
xchg
inc
(bad)
cwde
push
sub
retf
add
and
test
movs
lds
call
rcr
bound
mov
mov
push
mov
cmps
cmp
mov
jb
push
jae
loop
add
ins
call
test
pop
pop
or
cmp
ins
push
jmp
jne
jmp
retfw
push
cmps
xor
push
mov
cmps
les
dec
mov
xchg
xor
sub
je
mov
sub
pop
loop
dec
out
jb
aas
inc
cld
dec
cmc
aam
pop
cmp
arpl
xchg
cmp
das
mov
stos
lea
stos
xchg
mov
push
aam
pop
je
icebp
mov
scas
jle
inc
xchg
mov
cs
int
ins
mov
and
add
mov
push
vandps
cmp
out
mov
cmp
mov
mov
cdq
imul
adc
je
xor
int3
mov
in
and
mov
jg
retf
xchg
push
jl
fdivr
push
in
adc
adc
pop
or
mov
aad
mov
mov
pop
and
(bad)
push
loopne
sahf
pop
test
fcmovb
clc
inc
lods
fcom
pop
test
cmp
imul
gs
and
cmps
test
jns
out
not
mov
cmc
ss
cmc
sub
push
jns
jne
retf
ficom
cmp
pop
test
add
cmp
xor
addr16
icebp
in
scas
mov
ins
inc
stos
dec
sbb
push
retf
bound
ret
cmp
dec
fs
jge
xchg
inc
mov
idiv
js
and
test
jmp
sar
adc
or
ja
(bad)
and
and
xchg
in
in
jge
xchg
mov
sub
stos
das
sti
adc
push
inc
ss
cld
dec
mov
inc
xor
mov
sub
inc
movs
and
out
or
and
sub
mov
and
mov
mov
push
das
pop
mov
mov
and
sub
dec
bound
pop
push
enter
push
adc
les
or
sahf
push
clc
xor
rcl
cli
movs
or
jno
sub
out
mov
push
std
cmps
dec
sbb
jne
ror
and
jnp
xor
mov
jae
std
and
dec
mov
(bad)
pop
and
inc
cmps
icebp
sbb
hlt
adc
xor
in
fiadd
jl
mov
mov
daa
cmp
mov
or
dec
mov
push
inc
sti
out
dec
jns
mov
xchg
loopne
xor
nop
push
sbb
pop
enter
(bad)
ror
scas
scas
push
jg
mov
xchg
xchg
dec
popa
mov
push
shl
inc
test
lock
push
pop
mov
dec
mov
sbb
rol
add
push
mov
cmp
in
cli
ins
scas
mov
push
int
adc
in
pushf
fs
into
pop
test
cli
jle
jecxz
add
sub
popa
aas
into
xlat
add
mov
jb
pop
in
xchg
mov
mov
xchg
or
push
loope
push
cmc
mov
cmp
cmp
loope
imul
and
call
sub
mov
jle
ins
fcom
pop
lds
sti
xor
ror
mov
jl
aad
pop
call
mov
jmp
xlat
fdivr
jb
mov
sar
fst
jmp
push
jg
pop
sahf
cmp
xor
adc
or
shl
push
push
lods
xor
jmp
fstp
cmps
daa
outs
frstor
mov
imul
and
outs
adc
stos
pop
scas
push
mov
arpl
stos
dec
lods
mov
cmp
jb
adc
shr
aaa
lea
frstor
dec
ret
adc
loope
mov
mov
cmp
xchg
dec
xlat
dec
outs
shr
bound
jo
cli
pop
(bad)
out
out
fist
mov
dec
xchg
adc
jecxz
(bad)
out
lods
dec
pop
add
fcmovnbe
data16
cld
inc
outs
je
(bad)
and
shl
add
gs
xchg
sbb
xchg
sub
popw
mul
enter
mov
inc
xor
xchg
jge
pop
enter
dec
mov
adc
fldcw
push
hlt
add
pop
enter
jae
cld
adc
cli
push
ret
pop
inc
mov
(bad)
mov
cld
sbb
jg
test
lods
clc
sub
cmps
stc
shr
repz
dec
push
imul
mov
jg
clc
loope
jo
fs
push
shl
dec
cmp
add
mov
mov
pop
das
or
xchg
sbb
xchg
loopne
dec
lods
ins
scas
mov
stos
cwde
movs
add
into
push
je
xchg
mov
test
push
pop
js
neg
fstp
mov
out
add
push
pop
add
test
adc
sbb
rol
dec
jae
aaa
fsub
repnz
imul
aam
sub
fdiv
aam
gs
retf
pop
mov
icebp
jmp
xchg
cmp
pop
sub
cmp
rol
dec
pusha
jns
xor
lods
mov
adc
stos
clc
ds
(bad)
push
cmps
mov
xchg
cdq
out
test
addr16
cmps
push
inc
xchg
daa
fs
jl
push
mov
sets
fstp
ss
adc
push
mov
push
mov
clc
loopne
jp
data16
pop
fiadd
add
fiadd
test
or
test
add
fmul
jle
repz
gs
sahf
sub
adc
add
and
bnd
and
xchg
or
lahf
jmp
fnstenv
mov
bound
call
push
clc
inc
rcr
cmp
cmps
dec
cs
aad
push
xor
mov
inc
aaa
mov
jns
sbb
shl
push
clc
shl
xchg
cmp
sahf
cmp
adc
adc
xlat
stos
jnp
sub
and
mov
neg
jbe
loopne
xor
in
mov
mov
cmp
lods
sbb
and
sub
int3
rol
mov
sbb
(bad)
cdq
sbb
jno
and
pusha
pop
push
outs
cwde
adc
gs
movs
pop
rol
add
dec
push
mov
xor
xor
sbb
inc
mov
enter
std
jmp
mov
js
fdiv
mov
fstp
ficomp
cmp
ret
jecxz
dec
xchg
lds
jecxz
test
loop
mov
std
cmp
jo
mov
cmp
pushf
scas
ret
pop
shl
cld
addr16
call
or
push
out
das
and
out
ds
(bad)
cmp
mov
ds
in
call
rol
xor
jnp
(bad)
arpl
or
dec
adc
ins
sbb
imul
pop
outs
mov
cdq
das
mov
mov
pusha
add
and
push
aad
mov
push
icebp
enter
into
mov
cmp
nop
xchg
(bad)
xchg
jmp
mov
add
dec
adc
xchg
fdiv
pop
push
cld
ss
mov
inc
xchg
sub
jae
mov
mov
jns
or
jb
inc
aaa
sub
inc
or
test
mov
stos
stos
add
test
or
sub
loop
xor
adc
imul
cmp
inc
push
and
jne
inc
pop
jbe
popf
pop
mov
icebp
sbb
add
daa
sub
(bad)
xlat
jne
dec
je
and
mov
sahf
xor
jne
test
jecxz
popf
popa
cmps
ficom
jno
cli
hlt
fnstenv
or
dec
mov
cmps
cld
xor
imul
aas
mov
cdq
xchg
push
lahf
ret
ss
test
xor
fdivrp
ja
imul
cmp
add
or
xor
push
jbe
scas
test
adc
addr16
mov
(bad)
push
iret
imul
dec
ror
stc
or
inc
vmwrite
jp
dec
dec
jo
mul
inc
movs
jae
pop
inc
or
mov
jmp
outs
mov
aad
jecxz
adc
pop
test
(bad)
outs
popf
fwait
dec
xor
sub
push
xor
rcr
fimul
push
imul
js
mov
popa
adc
inc
(bad)
jne
cs
pop
retf
or
add
aad
ret
adc
or
add
ret
dec
out
sbb
pop
adc
ds
xchg
data16
jle
sub
xchg
loope
lea
mov
push
pop
sub
pop
movs
sbb
repz
repnz
xchg
dec
and
pusha
loope
cmp
push
dec
add
add
add
add
cmp
stos
or
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
dec
and
int3
jnp
mov
mov
xchg
sub
outs
movs
mov
push
xor
cmps
test
mov
cld
inc
cmps
dec
pusha
test
pop
arpl
imul
inc
jp
iret
sbb
push
mov
arpl
cmp
ss
adc
mov
in
(bad)
xor
push
in
frstor
ret
ret
ins
shr
sahf
cmp
pop
out
push
jecxz
popa
stos
clc
(bad)
mov
rol
shr
pop
sbb
jb
rcl
and
adc
jmp
dec
dec
mov
mov
add
std
out
xchg
adc
test
adc
cmp
gs
pusha
xchg
es
ror
das
out
mov
es
xlat
test
jne
pop
pop
(bad)
cmp
fiadd
cmp
ja
(bad)
dec
cmp
test
test
mov
adc
mov
es
iret
lea
mov
mov
sbb
shr
jmp
pop
add
das
sbb
sti
jnp
mov
test
test
jne
push
sbb
mov
int3
hlt
idiv
or
imul
lods
aaa
ja
cli
ds
in
loop
cdq
sub
int
pushf
mov
ret
popf
push
dec
mov
cmp
test
hlt
shr
adc
xchg
rcl
jns
or
mov
sbb
pop
test
push
xor
push
mov
push
sub
cmp
xchg
jae
or
inc
cli
(bad)
dec
sub
pop
sbb
ins
inc
mov
iret
fimul
and
ret
stos
and
retf
sbb
lsl
cs
mov
add
or
movs
lods
ja
das
lea
jl
call
hlt
mov
test
mov
shl
enter
jo
dec
mov
mov
mov
lods
jl
ins
mov
dec
in
dec
sbb
dec
loop
sbb
stos
fnstcw
dec
add
popa
adc
in
repz
stos
pop
and
stos
adc
in
enter
fs
leave
sbb
jnp
cmp
(bad)
popf
icebp
lods
xchg
in
dec
fstp
inc
dec
int
add
sbb
fild
xlat
dec
nop
cmp
or
sbb
pop
repnz
push
call
jl
outs
(bad)
std
xchg
arpl
push
add
and
les
pushf
jbe
pop
sub
cmp
ror
add
push
cmc
fwait
push
imul
(bad)
inc
cmp
mov
jnp
mov
push
adc
call
push
cmp
outs
xchg
(bad)
mov
movs
fbld
push
xor
mov
and
xor
outs
mov
mov
mov
mov
(bad)
xor
and
bound
pop
fist
inc
add
je
sbb
call
pop
mov
outs
jbe
add
and
arpl
dec
sub
stc
repnz
inc
jp
(bad)
data16
and
out
cmp
ja
daa
hlt
popf
jecxz
enter
in
enter
pop
xor
ds
adc
inc
jle
fsub
cmps
push
stos
add
pop
outs
mov
ret
mov
dec
std
mov
cmp
lods
and
mov
test
pop
lahf
inc
ds
mov
and
mov
inc
js
mov
push
or
gs
imul
rcr
xor
les
adc
in
and
or
inc
mov
push
arpl
jae
test
fmul
stos
(bad)
fadd
cmp
add
test
test
repz
sbb
sti
jnp
in
aam
sbb
ds
stos
mov
cwde
cmp
sbb
rcl
sbb
mov
pop
enter
fwait
cmp
aaa
inc
sbb
jg
arpl
inc
stc
xor
inc
test
jg
sbb
sub
xor
lock
and
dec
inc
mov
sub
jmp
retf
ss
xor
xor
push
add
mov
clc
jle
adc
fnstenv
mov
jg
add
jns
std
dec
xor
sub
(bad)
fs
sbb
test
push
jnp
cwde
dec
inc
daa
bound
ins
test
xchg
xor
and
xchg
jmp
(bad)
adc
hlt
out
ins
and
repz
repz
leave
and
xlat
fld
ror
iret
(bad)
mov
loopne
fs
pusha
adc
in
add
mov
xor
icebp
push
cmps
add
xor
xor
push
pop
xor
mov
or
cmps
dec
jne
jp
dec
clc
cdq
test
ret
jnp
ins
jnp
pusha
mov
jmp
jp
repz
adc
or
sbb
xchg
add
pop
gs
popa
ds
int
sbb
and
and
sub
rcr
and
push
inc
fadd
mov
mov
sar
aas
aas
lods
mov
jg
push
or
dec
cwde
xchg
sub
es
neg
or
mov
xlat
cmps
sub
push
dec
jnp
xchg
(bad)
cmp
xor
jge
add
test
adc
add
push
jns
iret
xchg
jg
inc
jp
or
(bad)
mov
mov
in
mov
movs
pusha
push
sub
jns
ins
push
jb
mov
scas
fist
add
mov
mov
cdq
mov
retf
pop
gs
mov
cmps
adc
fs
mov
test
into
mov
outs
scas
rcr
repnz
sub
adc
int
fcmovnu
mov
mov
jb
rol
imul
arpl
jnp
adc
cmp
mov
sbb
jne
lahf
jb
hlt
aad
mov
clc
pop
aam
pusha
adc
push
das
into
push
into
dec
push
je
daa
jnp
(bad)
pop
add
xor
inc
cmp
out
js
push
gs
xchg
dec
mov
sub
jp
dec
and
sub
loope
adc
jg
and
out
or
push
loope
lock
add
and
adc
dec
lods
xor
test
pop
jb
fadd
or
stc
shl
pop
mov
aam
dec
pushf
sysret
sub
imul
test
inc
or
adc
cmp
push
repz
fisubr
cld
sbb
leave
add
fcomp
adc
movs
jp
call
or
fst
aas
xchg
cli
ins
sar
ret
mov
fmul
pop
in
out
(bad)
cmp
gs
sar
loope
jbe
lock
addr16
push
dec
fs
pop
mov
adc
inc
mov
retf
mov
cmp
outs
sar
int3
jns
xor
je
fstp
push
mov
adc
add
sbb
jo
dec
loopne
xchg
(bad)
cmp
lea
jnp
cmp
dec
xor
xchg
cmps
cmp
in
pusha
aam
xlat
(bad)
xor
data16
mov
stos
ud2
and
sub
addr16
pop
cdq
call
imul
cmp
and
jmp
shl
mov
or
adc
inc
ffreep
cmp
sbb
call
sbb
adc
leave
jns
ja
aaa
in
repnz
out
cmc
mov
jae
hlt
xor
scas
cmps
std
stos
std
and
pop
xchg
dec
fsubr
cmp
jmp
push
test
jmp
cs
test
add
mov
fcomp
ret
add
bound
js
mov
test
or
dec
in
out
aad
les
test
rcl
lds
sub
stos
ret
xchg
xchg
pop
movs
sar
jmp
pop
dec
xchg
scas
mov
push
mov
push
sar
xor
cmp
jmp
sbb
cli
sbb
xchg
cmps
adc
mov
push
inc
or
push
sbb
xchg
add
inc
mov
or
loopne
cmp
cs
ds
inc
mov
cli
data16
or
sbb
mov
in
ja
loop
jnp
jns
nop
jle
xor
xor
cmc
movs
leave
jg
je
fwait
lds
imul
inc
and
xor
mov
scas
sub
pusha
or
cmp
mov
inc
mov
push
or
xor
adc
inc
popa
mov
pop
in
mov
xchg
push
mov
inc
mov
and
and
cmp
mov
xchg
leave
xor
ret
jae
das
mov
mov
test
addr16
jb
jl
push
ss
sub
sbb
fistp
in
rol
pop
sbb
cmp
mov
inc
jns
arpl
push
add
rol
jecxz
pop
mov
push
daa
aad
shl
jmp
ret
jmp
dec
and
(bad)
jg
ret
test
pop
push
movs
mov
dec
sub
mov
jle
fst
or
popa
(bad)
mov
je
mov
xchg
xchg
jmp
pop
retf
shr
mov
retf
pop
push
push
or
dec
xchg
in
jno
fwait
ret
cmp
fldcw
cdq
popa
push
aas
pop
lahf
shr
add
or
xchg
lahf
int3
lea
cmp
fsubr
iret
or
std
jl
xor
xor
fidiv
retf
daa
or
sbb
nop
out
mov
nop
pop
push
jo
mov
adc
cmp
loope
jg
ja
pop
jns
and
gs
pop
fnstsw
cdq
sbb
xor
mov
push
pop
sahf
test
fild
arpl
ret
xchg
ror
xchg
shl
repnz
and
test
pop
xchg
xchg
cmc
jle
push
loopne
cmp
fisttp
dec
xor
or
imul
int3
pop
xor
(bad)
cmp
jnp
clc
and
int
cmp
adc
icebp
out
fisttp
ja
in
push
pop
je
and
mov
hlt
out
fnclex
rcr
xlat
in
dec
imul
cmp
and
data16
test
push
sub
pop
mov
mov
jno
and
jecxz
ret
dec
push
push
dec
push
inc
fiadd
pop
jp
mov
sbb
add
rcl
in
clc
dec
out
jae
sub
(bad)
jecxz
in
mov
js
sub
leave
cmp
jmp
xchg
sub
daa
dec
sub
xchg
retf
fadd
aam
pop
jle
sub
fbstp
icebp
adc
xlat
dec
or
or
test
test
push
mov
and
jnp
ins
int3
fdivr
ss
or
imul
imul
inc
(bad)
pop
mov
xchg
mov
cmp
add
gs
mov
int
aaa
mov
mov
(bad)
jle
les
ficomp
lods
sahf
xor
mov
or
jo
pop
clc
in
scas
ja
or
es
lea
test
jbe
xchg
out
cmc
mov
push
xchg
jmp
pop
dec
ret
lahf
push
jge
iret
(bad)
ins
lods
or
adc
xlat
sahf
jns
(bad)
sbb
clc
xor
mov
mov
fcmovnbe
in
mov
popa
jge
mov
pop
out
cli
imul
das
push
push
jns
push
push
(bad)
cmps
and
xor
pop
push
mov
je
shl
cmc
jmp
dec
retf
(bad)
(bad)
daa
mov
shl
mov
jmp
add
stos
call
mov
shl
loopne
xor
adc
es
fsubr
jmp
adc
ret
sbb
adc
pusha
(bad)
xchg
cmc
test
mov
dec
mov
out
dec
mov
cli
cmp
test
(bad)
pop
mov
aad
add
lods
jnp
fild
add
cmp
(bad)
es
and
repnz
add
and
sbb
(bad)
fcmovnb
lock
aas
dec
mov
or
push
clc
sub
ficom
scas
adc
pusha
mov
int3
pop
fxam
fwait
rcl
movs
jle
aaa
add
daa
(bad)
jmp
jp
dec
push
inc
repnz
mov
mov
push
xor
pop
sub
popf
fcom
pop
scas
ror
cli
mov
loope
arpl
ror
daa
mov
jb
mov
in
adc
pop
sbb
mov
mov
xchg
sbb
dec
pop
fcomp
loopne
cmc
out
mov
ds
push
mov
mov
imul
int
imul
mov
jmp
hlt
aad
test
xchg
sbb
pop
fisubr
outs
(bad)
fld
mov
dec
adc
sahf
or
jg
loope
into
loopne
popf
pmuludq
loop
cld
fiadd
loopne
pop
sti
add
mov
lock
sub
popa
push
push
mov
mov
gs
jge
mov
push
sbb
ret
fnstsw
cmp
dec
and
jecxz
pop
and
cmp
das
data16
mov
inc
mov
sub
int3
jge
mov
mov
pop
lock
xchg
add
rcl
mov
mov
neg
push
es
push
clc
int3
mov
retf
inc
lods
mov
int3
neg
mov
inc
sti
adc
pop
lods
(bad)
dec
sub
pop
mov
add
clc
ret
test
push
or
cmp
mov
sbb
mov
out
mov
cmp
lea
fisubr
(bad)
je
fild
inc
adc
cmp
cmps
pop
(bad)
into
pop
mov
ss
jno
addr16
cmp
nop
sahf
pusha
pushf
xchg
sub
in
adc
jp
mov
(bad)
adc
add
lock
pop
xor
xchg
loope
in
and
mov
mov
popf
xchg
adc
jle
xor
or
mov
(bad)
je
cmp
fs
push
mov
xabort
mov
lahf
(bad)
retf
and
mov
cmp
adc
stc
aas
fst
dec
cmps
xor
jnp
push
pop
(bad)
rol
js
stc
push
and
cmp
inc
pop
sbb
loopne
mov
popf
or
out
test
push
int
add
pop
scas
mov
int
cmp
and
xor
inc
stos
cmp
cmp
push
inc
shl
sbb
push
cmp
mov
cld
jle
mov
loope
pop
mov
xchg
xchg
retf
sub
lock
lahf
sbb
add
xchg
dec
mov
mov
xor
mov
push
mul
jl
dec
sahf
add
jl
ror
push
or
popa
sub
adc
in
(bad)
bnd
or
hlt
mov
popa
es
mov
or
retf
punpckldq
aaa
add
mov
popf
jle
inc
int3
enter
gs
cld
push
lods
dec
mov
movs
sbb
test
xchg
lods
mov
cmp
adc
lods
and
js
fcmovnb
sub
dec
jmp
outs
rcr
daa
xor
shr
add
fldcw
gs
fnstenv
dec
pop
pop
in
push
jns
out
xchg
xchg
in
gs
test
ror
retf
mov
or
(bad)
fucom
push
loope
test
sub
js
stos
in
xchg
jecxz
mov
js
lods
mov
inc
(bad)
sbb
cli
cmp
loop
rcl
mov
add
icebp
jle
sub
jg
sub
cmp
lods
test
fs
mov
sbb
stos
test
arpl
or
ret
es
iret
(bad)
xchg
es
bound
(bad)
xor
arpl
jmp
xchg
idiv
mov
cdq
mov
dec
cmp
xor
inc
leave
mov
and
(bad)
pop
imul
mov
or
mov
pop
sbb
sbb
pop
jne
cli
aad
imul
push
xor
inc
pop
pop
lahf
mov
fwait
in
jg
dec
imul
rol
popf
ret
aaa
stos
adc
push
adc
lods
jg
pop
xor
leave
fsub
out
cmp
popa
dec
aas
jge
js
shr
adc
stos
and
leave
cmp
xor
shl
jecxz
mov
mov
popf
sahf
icebp
mov
std
nop
pop
jae
xor
out
ins
ficomp
mov
xchg
inc
xchg
jmp
push
cmp
scas
xchg
ss
cmp
adc
shr
sub
cli
push
dec
enter
push
jo
and
arpl
aad
and
test
loopne
xchg
add
jbe
or
and
mov
(bad)
in
test
mov
pop
mov
push
inc
ins
dec
retf
pop
jbe
in
pop
enter
out
leave
out
or
cmp
fistp
or
mov
xchg
sbb
iret
pop
arpl
push
out
cmps
mov
push
add
adc
inc
dec
cmp
add
xor
push
dec
and
cmp
retf
(bad)
jmp
jnp
sub
cdq
into
sbb
mov
cmps
xchg
dec
shl
bound
sub
call
sub
mov
xor
test
inc
cmove
sbb
dec
call
fldenv
dec
add
sbb
aam
aad
cmps
cmp
lea
daa
into
test
jg
aaa
pusha
push
jge
test
fs
dec
mov
(bad)
sbb
fld
pop
fsub
and
jo
dec
mov
cld
and
sub
mov
imul
enter
aas
mov
pop
push
shr
dec
add
add
add
add
cmp
rol
rcl
add
stos
jno
add
add
add
jae
ins
popa
outs
addr16
addr16
jae
push
fdivr
test
gs
pop
and
xchg
lds
and
mov
pop
and
push
and
dec
jbe
mov
std
ja
popf
cmp
and
aad
into
dec
les
out
xor
mov
fwait
pop
xchg
mov
push
arpl
push
inc
(bad)
cld
cmp
fs
cmp
pop
mov
or
pop
jne
cmp
mov
mov
jp
outs
jae
jle
clc
add
xchg
out
icebp
fadd
cld
fidivr
sub
cdq
(bad)
ret
imul
fcomip
push
mov
outs
xor
jl
inc
sbb
sbb
cmp
sub
aad
enter
lea
mov
mov
out
ds
jg
loop
mov
mov
xchg
(bad)
pop
bound
jnp
repz
or
(bad)
data16
push
fnsave
fdivr
ja
mov
add
repz
lods
mov
ins
sub
int3
imul
jno
out
mov
in
out
xor
aam
addr16
or
mov
ror
mov
(bad)
leave
sbb
pop
shr
inc
mov
ror
pushf
jge
sub
cmc
mov
fnsave
or
push
lds
popa
aam
in
cmp
pop
or
adc
or
retf
sub
shr
inc
jns
dec
mov
imul
pop
lods
xchg
lahf
push
repnz
in
sahf
in
lods
xchg
(bad)
push
xlat
pop
ds
fcomp
das
push
lods
loopne
aas
mov
lock
fwait
inc
out
imul
ds
out
ror
inc
scas
loop
iret
push
sbb
enter
mov
ret
cli
popf
push
cli
sub
mov
out
test
adc
cmps
call
fisttp
aad
pshufw
repz
popa
sub
and
repz
cmp
fidiv
mov
mov
(bad)
int3
inc
sbb
mov
push
aas
data16
sbb
pop
stc
int
or
faddp
ins
adc
(bad)
add
(bad)
jbe
jg
jno
dec
pop
imul
pop
fs
es
push
adc
mov
add
cmp
dec
stc
ins
xor
sbb
test
leave
test
xchg
in
fdivp
cmp
mov
push
out
sbb
(bad)
outs
jge
add
xchg
xor
data16
mov
mov
cmp
xchg
mov
ins
and
or
mov
sti
inc
bound
xchg
jo
jge
aaa
inc
pop
pusha
adc
jns
push
repnz
dec
(bad)
and
test
in
loopne
pop
test
and
mov
adc
cmp
push
xor
mov
popa
adc
aad
mov
sub
jb
dec
das
sti
ret
scas
(bad)
repz
jno
out
dec
js
rcr
mov
test
or
stc
ror
fcomp
sub
arpl
loopne
scas
pushf
mov
test
or
enter
js
add
add
pop
xchg
pusha
jo
jne
inc
nop
clc
sub
adc
mov
mov
outs
stos
call
jecxz
add
xchg
jecxz
hlt
je
sbb
pushf
jbe
popa
nop
jmp
adc
push
fisttp
xor
pop
(bad)
in
daa
pop
lock
xor
pop
lock
iret
cmps
xor
dec
aas
sub
ficomp
das
pop
cmp
add
test
lods
daa
mov
add
jp
and
daa
shl
repnz
push
push
mov
aaa
mov
xor
popf
sti
push
add
pop
or
pop
test
jmp
and
mov
lock
pushf
ins
xlat
add
pop
pop
push
sti
out
push
in
mov
or
arpl
hlt
scas
in
inc
test
pop
pop
loopne
retf
outs
jnp
xchg
ror
inc
xor
cmp
aad
shl
jecxz
lock
ja
cmc
movs
ja
shl
inc
jmp
jg
jno
dec
loop
je
jmp
sbb
add
cs
movs
in
test
faddp
push
pop
xor
mov
xchg
sub
sub
(bad)
mov
std
jmp
enter
sbb
mov
xor
jle
dec
out
ret
push
test
and
shl
push
arpl
mov
mov
test
mov
sbb
mov
data16
ret
shl
nop
fcom
cld
stc
cmp
std
jno
pop
loop
dec
jns
dec
cmps
or
cmc
lock
outs
lock
jge
sub
call
pop
push
loopne
and
call
aam
lods
xor
out
sub
fs
jecxz
sub
xchg
inc
push
mov
in
loopne
jp
out
sub
into
dec
outs
cs
jne
addr16
daa
cmp
push
shl
pop
sub
and
loop
dec
xor
cmp
ficom
cmp
push
push
jnp
inc
mov
or
pop
pop
sbb
mov
cdq
or
mov
add
sub
fs
pop
jbe
test
adc
xchg
fnstenv
pop
(bad)
mov
xor
aas
jp
pop
in
int
stos
inc
es
sti
push
mov
icebp
cmp
cwde
pop
scas
push
cmp
fwait
cmp
inc
push
mov
sti
je
cdq
mov
or
(bad)
mov
xor
(bad)
inc
arpl
cmps
inc
dec
not
(bad)
jnp
mov
xchg
clc
jmp
(bad)
lea
adc
sub
inc
or
pop
inc
cmp
pusha
imul
loop
adc
ret
(bad)
lock
mov
adc
das
xchg
sbb
push
fld
or
in
inc
jmp
cld
rcr
rol
test
sub
and
test
dec
xchg
mov
inc
sub
sbb
into
dec
jne
imul
dec
in
daa
repnz
inc
xchg
jl
jge
push
mov
jp
cmp
jg
dec
mov
inc
(bad)
(bad)
call
mov
pop
mov
ret
adc
adc
jns
fist
push
pusha
xchg
cmp
stos
pusha
test
movq
jae
xchg
mov
sbb
and
push
mov
outs
test
mov
out
xor
inc
fwait
jmp
jle
sbb
fsincos
rcl
test
mov
std
test
jbe
pop
adc
je
stc
adc
push
inc
pusha
jns
adc
outs
daa
mov
jns
vfmsub231sd
movs
call
jmp
sbb
cmp
rcl
je
xchg
stos
and
and
fsub
fist
gs
ja
xchg
mov
mov
add
out
jnp
rol
dec
adc
(bad)
cmp
sub
push
lock
xor
int3
sub
jno
call
pop
push
xor
sbb
sub
dec
dec
xchg
push
(bad)
sti
fwait
ins
push
jae
xchg
sub
popf
and
mov
adc
call
test
call
and
jl
es
push
test
aad
push
pusha
ret
mov
into
ds
ficom
and
cmp
cs
das
dec
sbb
inc
ja
loopne
cmc
cmp
aaa
mov
(bad)
(bad)
jmp
shl
cs
dec
mov
shl
retf
dec
ins
mov
out
sar
inc
push
fsubr
pop
in
sahf
loop
inc
or
xor
xchg
icebp
push
fbstp
adc
push
lods
(bad)
mov
cmp
stos
aam
ja
movs
xchg
mov
jns
fcomp
icebp
dec
test
cdq
push
popf
lea
ror
pop
js
addr16
mov
in
push
push
repz
fwait
pushf
rcr
jne
or
lods
cmp
or
sub
mov
fdiv
mul
(bad)
stos
sbb
jbe
test
cmp
sub
push
fwait
cmps
setae
jecxz
stos
ret
lods
addr16
adc
jp
fnsave
cmp
mov
sbb
jmp
(bad)
das
sbb
mov
cmp
sti
lods
out
cmp
xor
sub
fdiv
fstp
inc
pop
iret
xchg
rol
loop
xchg
and
outs
mov
fnstcw
mov
xor
cmp
pop
shr
sub
and
or
push
push
push
out
popa
iret
rcl
ficomp
fstp
push
mov
adc
mov
fdivr
inc
stc
mov
hlt
call
pop
add
test
pop
jbe
dec
ss
imul
into
cmp
iret
mov
jg
shl
mov
in
pushf
jmp
or
mov
jmp
mov
and
mov
sbb
add
ss
pop
(bad)
xor
aad
lods
imul
adc
cdq
add
sar
and
pop
fucom
mov
stos
add
add
sub
call
dec
xchg
xor
fld
pop
arpl
mov
sahf
out
push
jae
mov
outs
fnstenv
pop
jle
jo
out
aad
cmps
cmp
in
jg
out
pop
int
mov
mov
repnz
fdiv
sub
and
fwait
add
cmc
cmp
dec
dec
mov
cwde
dec
jmp
mov
ins
test
adc
or
xor
aas
nop
shr
xor
std
cmp
inc
and
or
push
jnp
mov
aas
inc
lock
dec
and
inc
(bad)
icebp
scas
mov
and
shl
sub
push
inc
add
add
adc
test
std
sti
imul
lock
pop
loopne
cmps
mov
enter
loop
sahf
iret
sbb
arpl
mov
dec
adc
add
mov
push
aas
push
jge
ins
gs
mov
xor
adc
jo
sbb
call
push
sahf
(bad)
retf
inc
mov
(bad)
out
mov
data16
mov
sub
sbb
mov
cmps
mov
fcmovbe
cwde
mov
into
push
dec
aaa
mov
dec
imul
push
mov
test
cld
pusha
jmp
jg
sub
test
ficom
push
xchg
push
cmc
cmp
add
aad
add
dec
pop
lock
int3
cmp
(bad)
fucomi
hlt
test
add
enter
inc
jo
inc
jb
pop
leave
mov
leave
pusha
fidiv
mov
lods
mov
adc
inc
push
fdiv
fmul
add
les
dec
aam
xor
jle
mov
and
jecxz
xor
sbb
mov
inc
js
and
jge
fisubr
jmp
push
call
push
mov
push
inc
mov
out
mov
mov
or
sahf
imul
mov
out
sbb
push
lods
out
icebp
int3
into
daa
aaa
aad
(bad)
(bad)
inc
daa
sbb
xor
and
mov
jecxz
adc
push
pusha
or
dec
inc
pop
(bad)
(bad)
xchg
jecxz
cmp
fsub
sub
div
into
aaa
push
hlt
and
and
stc
inc
jmp
inc
bound
sub
and
loope
loopne
ins
push
inc
xor
icebp
xor
mov
xchg
push
jge
scas
and
add
xchg
and
cs
(bad)
cld
mov
and
jmp
rcr
mov
jnp
and
mov
adc
and
lahf
mov
jbe
xchg
test
mov
and
add
dec
xchg
pop
ins
in
arpl
retf
out
cwde
aad
push
xchg
push
xor
fistp
loope
lds
ins
and
inc
arpl
and
repnz
jmp
repnz
and
inc
push
dec
pop
and
idiv
iret
popf
push
mov
ins
sbb
cld
cmp
mov
jge
iret
and
les
xchg
loop
(bad)
inc
arpl
shl
sub
fidivr
call
mov
and
jge
mov
or
fdiv
imul
ficom
mov
adc
push
mov
lods
(bad)
pop
xor
cli
cmp
sahf
bound
or
cmps
dec
jp
jg
sbb
fdiv
adc
adc
movs
imul
xchg
retf
inc
sub
mov
inc
arpl
jmp
push
or
mov
sti
pop
test
cmp
out
pop
pop
dec
test
movs
hlt
push
mov
fcomi
inc
aas
mov
adc
ja
push
sbb
jmp
and
jl
cmp
mov
inc
push
xchg
jno
test
sahf
or
shr
mov
mov
inc
sbb
mov
fincstp
outs
pop
ins
cdq
pop
cmp
inc
mov
std
and
push
das
cmp
fs
pop
lods
jns
xor
mov
mov
dec
and
jge
xor
sar
or
jb
jge
mov
pop
sbb
xlat
inc
push
sbb
pmulhuw
bound
sbb
sbb
jo
xchg
dec
rcl
jg
push
hlt
loopne
push
cwde
xor
test
and
mov
jnp
aad
ret
aas
test
loopne
out
mov
dec
mov
movs
adc
lahf
aaa
push
gs
cmp
dec
lds
into
pop
cmp
fs
or
mov
fistp
mov
ja
adc
xlat
add
sub
mov
push
mov
mov
adc
jecxz
fldenv
movs
sbb
leave
xor
arpl
xor
std
fcom
dec
jo
push
loop
pushf
adc
test
ins
jns
sub
ja
rcl
mov
sbb
rcr
dec
stos
push
mov
inc
mov
dec
cld
jae
sbb
(bad)
hlt
fs
inc
sahf
pop
pop
gs
mov
(bad)
pop
jo
fisubr
cmp
xchg
pop
rol
mov
dec
inc
cld
ret
shl
pop
aam
in
test
aaa
and
mov
jge
inc
add
xlat
lds
ret
mov
inc
inc
fistp
fcomp
test
mov
pop
cmc
adc
fs
fisub
xor
pop
push
aas
out
imul
call
adc
inc
push
or
test
shl
dec
enter
jb
jmp
bound
out
sub
jb
shr
iret
mov
popf
mov
lahf
loopne
or
push
push
rcr
fnstcw
xchg
pop
and
or
dec
popf
mov
adc
mov
sbb
sahf
call
jmp
es
cmp
mov
push
std
cwde
out
dec
gs
inc
mov
ja
mov
push
pop
iret
mov
in
out
(bad)
xlat
(bad)
cmp
jb
sbb
cdq
jmp
jno
push
mov
jo
pmaxub
stc
in
pop
aaa
mov
stc
lahf
mov
stos
pop
add
arpl
repz
ins
leave
mov
or
inc
mov
pop
pop
lds
les
inc
and
test
repnz
push
sar
add
push
mov
dec
rcl
retf
test
fwait
jno
pextrw
das
fcom
xor
push
ds
jp
push
inc
mov
cmp
aas
leave
xchg
xor
imul
rcl
add
cmp
sbb
cld
pop
sub
lds
pop
add
mov
or
lods
cwde
xor
push
or
outs
jnp
mov
add
sbb
adc
xchg
dec
pop
inc
dec
dec
and
cmp
sbb
mov
or
arpl
add
and
test
iret
pop
cld
inc
xchg
hlt
sbb
adc
fs
push
ja
or
movs
lock
inc
dec
imul
movs
cmp
mov
lea
icebp
fist
popf
fld
or
stos
dec
aad
dec
jge
push
push
cmp
mov
inc
xor
mov
es
sub
loop
sub
inc
push
mov
xchg
pop
sbb
not
fldenv
gs
pop
outs
dec
js
push
clc
loop
mov
fsincos
xchg
sbb
mov
out
inc
je
adc
mov
push
jns
push
dec
add
add
add
add
cmp
jb
push
in
sldt
jecxz
add
adc
add
pop
push
das
ins
popa
outs
addr16
addr16
jae
jae
pop
cmp
mov
inc
inc
cdq
mov
adc
add
ret
sub
clc
pop
cld
sub
xchg
cmp
and
mov
inc
in
push
enter
(bad)
repz
jl
dec
jp
add
(bad)
std
out
lahf
lods
adc
dec
cdq
xlat
sub
xchg
pushf
pop
xchg
and
xchg
dec
icebp
dec
inc
fisubr
fist
scas
das
loope
sub
call
popa
jo
cmps
push
popf
pop
sub
stos
fild
sbb
adc
xchg
cmp
arpl
pop
out
test
icebp
sub
movs
repz
or
sbb
xchg
outs
daa
clc
js
aaa
xchg
enter
pop
jb
mov
pusha
outs
add
into
mov
aam
das
xchg
push
mov
add
test
aas
(bad)
push
enter
dec
cmp
pop
sbb
and
or
frstor
(bad)
cmp
sti
mov
dec
adc
jb
es
jmp
fist
xchg
jmp
cld
dec
fs
jne
das
adc
neg
mov
arpl
xchg
es
add
je
mov
in
cmps
mov
sti
popf
xchg
mov
shl
or
(bad)
xchg
inc
pop
loopne
jbe
pop
sub
xchg
dec
out
jnp
aam
fisttp
pop
(bad)
loope
or
mov
pop
mov
test
mov
push
push
sub
dec
loopne
das
adc
mov
mov
hlt
jmp
fdivr
push
pop
(bad)
jecxz
sub
or
stc
inc
sub
lahf
in
pusha
jmp
inc
shl
test
imul
add
test
and
sub
jne
mov
add
aaa
mov
cmp
mov
push
mov
sub
call
push
mov
pop
enter
retf
pop
pop
push
or
fwait
test
push
loop
retf
imul
mov
or
dec
fdiv
sub
cmps
movs
in
inc
das
push
and
stos
outs
dec
mov
ret
dec
ret
xchg
adc
movs
je
xor
aam
mov
ror
test
xchg
loope
mov
pusha
addr16
mov
push
gs
pop
shl
lods
iret
xchg
outs
loopne
xchg
mov
xchg
and
cs
es
outs
xor
arpl
cli
ror
aaa
loop
push
xor
popa
add
dec
bound
test
movs
dec
inc
fcmovb
dec
out
pop
int
in
cmc
stos
loop
cwde
pop
pop
daa
xchg
movs
xchg
adc
adc
imul
mov
not
and
test
mov
or
(bad)
push
popf
and
pusha
fidiv
mov
call
xchg
fnstsw
dec
and
cmp
popa
retf
cmp
mov
outs
mov
test
cmp
retf
imul
push
mov
pop
(bad)
dec
sti
pop
pop
dec
sbb
push
stos
add
bound
shl
shr
lds
mov
mov
lahf
pop
stos
retf
out
xor
jne
fnstcw
movs
fidiv
push
imul
repz
mov
xor
repz
retf
movs
clc
adc
cmp
xor
mov
call
imul
in
imul
call
ja
jecxz
ficom
inc
xchg
and
push
pop
inc
and
xchg
test
mov
pushf
mov
push
push
cmp
add
js
ret
sbb
popf
fldenv
shr
call
ror
push
cmps
sbb
or
xor
mov
add
sub
sbb
out
cmp
dec
(bad)
fstp
jle
add
jmp
push
cmp
sbb
dec
cmp
das
ror
jmp
rcl
aad
lods
daa
jmp
dec
aad
cmp
push
dec
add
push
add
or
into
pop
outs
pop
pop
leave
ret
mov
or
pushf
mov
daa
lods
ins
in
ss
jge
stc
shl
repnz
aad
aam
lock
and
xor
dec
mov
lea
mov
iret
sbb
test
sbb
jnp
xchg
push
daa
cmp
adc
mov
mov
int
push
jno
pop
nop
mov
daa
sbb
fisubr
in
add
les
repnz
sub
push
sub
scas
add
dec
push
mul
cmps
jmp
call
cmp
ss
adc
arpl
inc
jmp
iret
fwait
xchg
xchg
hlt
fsub
ja
test
mov
jmp
repnz
pop
lahf
cmc
xor
lds
div
xlat
xchg
mov
jb
dec
nop
ret
mov
xlat
repnz
pusha
test
add
push
or
adc
mov
adc
(bad)
or
cmp
fidiv
cmp
es
test
cmps
push
mov
in
push
sub
mov
pusha
jb
cs
dec
or
xlat
test
mov
test
or
fcomp
out
stos
push
dec
xchg
rcl
test
(bad)
pushf
or
bound
shl
icebp
leave
push
push
xchg
fist
jle
adc
xchg
dec
xchg
addr16
and
ins
xor
mov
dec
in
push
add
test
add
int3
cmc
pop
stc
ja
mov
test
rcl
sub
pop
mov
cwde
sar
sbb
aad
and
and
call
sti
loope
push
scas
cdq
mov
mov
out
aad
jecxz
dec
in
mov
jecxz
mov
push
fadd
faddp
xor
sbb
and
jbe
jae
xor
data16
pop
bound
retf
xor
mov
scas
retf
pushf
test
dec
jno
nop
jge
adc
imul
mov
cld
pop
inc
ret
outs
xchg
xchg
sti
pushf
inc
fdivr
sub
xchg
xor
arpl
fisub
cmp
mov
adc
int
in
mov
xor
xchg
sar
stos
leave
jl
pop
div
sbb
in
add
inc
test
imul
fnsave
pusha
ret
pop
fst
inc
(bad)
into
test
in
push
push
sub
sbb
mov
push
sbb
mov
mov
cmp
js
(bad)
lods
ficom
xor
scas
sti
js
cwde
xchg
mov
cmp
push
fstp
call
cmp
mov
or
xchg
dec
test
rcl
xlat
shl
mov
aaa
cmp
loope
pop
cli
adc
ret
jnp
inc
test
call
push
and
dec
sbb
xchg
(bad)
loopne
cmps
inc
xlat
push
jmp
popa
(bad)
mov
les
add
into
or
cmc
imul
jno
inc
fisub
jb
mov
mov
mov
aad
xor
loopne
std
repnz
aam
lahf
js
sbb
push
test
mov
push
sub
mov
fmul
pop
push
in
outs
jns
and
xlat
fst
pop
mov
enter
cmp
int
mov
mov
mov
cmp
in
cld
xchg
mov
mov
jge
dec
pop
call
mov
ja
mov
das
sbb
mov
sub
sbb
mov
xchg
icebp
mov
jb
xchg
sbb
(bad)
scas
cmps
mov
mov
dec
sub
mov
push
push
cwde
aad
repnz
or
mov
xchg
jnp
imul
pop
mov
cmp
(bad)
dec
xor
gs
cld
xor
sbb
fild
sbb
cmp
ins
leave
stc
dec
lods
mov
das
call
scas
sti
cdq
ja
fs
cmc
push
push
(bad)
push
cdq
push
xchg
leave
jnp
je
dec
dec
fbstp
xchg
fdivr
and
mov
fwait
pop
pop
cmp
dec
(bad)
sub
push
(bad)
push
xor
sbb
and
push
fsubp
aas
mov
cs
out
loope
mov
add
cmp
jmp
loopne
push
xchg
stos
push
push
push
jne
pop
out
mov
jle
mov
adc
xchg
adc
es
jno
mov
ret
scas
xchg
test
jge
(bad)
cmc
push
dec
adc
adc
pop
bound
les
pop
fisttp
test
push
add
es
xor
push
mov
fs
inc
dec
cmps
fs
cmp
jno
(bad)
push
push
mov
aas
int
retf
mov
xchg
push
inc
inc
mov
into
ja
add
mov
sar
(bad)
mov
cmp
adc
arpl
fs
mov
loope
retf
sbb
jo
dec
out
pusha
ins
dec
mov
iret
mul
mov
lahf
out
popf
and
std
js
push
and
pop
push
dec
cmp
mov
data16
jb
mov
cmc
xchg
xchg
xchg
mov
sub
pop
pop
ret
(bad)
jle
ins
push
sbb
push
sti
imul
stos
out
outs
lock
test
push
fnstcw
push
inc
push
jg
(bad)
ret
pop
mov
lds
aas
addr16
mov
pop
push
ret
mov
fdivr
popa
push
cmps
pop
jo
cdq
loop
iret
mov
imul
pop
and
push
rcl
sbb
xchg
mov
cmovs
adc
sub
fwait
into
fdivr
dec
in
add
lods
dec
call
inc
and
cwde
movs
imul
lds
push
ret
push
(bad)
sbb
lea
mov
dec
dec
sbb
(bad)
jg
mov
push
ret
std
fsub
cmp
repnz
cmps
out
out
jb
adc
icebp
and
jecxz
popf
cmp
or
(bad)
mov
mov
mov
(bad)
or
xchg
mov
mov
adc
dec
cli
arpl
ins
push
mov
outs
pop
in
mov
in
pop
int
dec
cwde
ror
lock
add
pushf
pop
adc
cmps
sar
lds
xor
fcmovnu
iret
cmp
lea
dec
xchg
fst
fwait
mov
or
xchg
adc
dec
jno
je
pusha
in
or
std
(bad)
sub
movq
mov
outs
out
repnz
push
pop
mov
inc
jmp
pop
xor
test
test
(bad)
xlat
and
add
into
loope
pop
cmp
rcr
xchg
in
fild
sbb
cmps
jae
pop
sbb
addr16
xor
adc
std
addr16
and
dec
imul
bound
sub
mov
push
mov
ins
jmp
jnp
out
mov
mov
ins
(bad)
pop
xor
jp
fmul
dec
stos
in
mov
ins
fild
xchg
push
add
cmp
loope
std
fsubr
inc
mov
cdq
adc
or
adc
mov
mov
jmp
aaa
repnz
xlat
cli
adc
adc
xor
and
pop
out
push
sbb
jb
xchg
and
das
inc
adc
rcl
lea
mov
sbb
lock
cdq
xor
loop
sub
in
cwde
jmp
into
and
dec
xchg
mov
dec
scas
jbe
in
cdq
mov
sbb
rcr
icebp
add
pop
in
lock
or
xchg
(bad)
dec
xchg
out
repz
enter
loopne
hlt
shl
and
fwait
scas
(bad)
sar
pop
pop
arpl
dec
out
pusha
sub
and
aaa
sub
xchg
stos
xlat
pop
ficom
pop
push
hlt
sub
mov
es
mov
push
mov
inc
pop
cmps
push
and
mov
sti
adc
ins
js
pop
shl
or
aaa
imul
xor
inc
mov
popa
adc
repz
add
bound
mov
pop
aam
stos
and
mov
out
and
mov
fistp
lahf
imul
mov
fmul
xor
mov
add
sahf
fiadd
add
or
cmp
mov
jecxz
and
bound
ret
dec
inc
leave
rcr
inc
mov
pop
(bad)
mov
sub
mov
and
in
adc
xor
xchg
or
ja
data16
fsubr
pop
ret
mov
xor
cmp
sbb
xor
int
call
push
scas
(bad)
pop
sbb
sub
jmp
shr
cmps
les
mov
inc
xchg
mov
xor
jmp
xor
cld
in
les
inc
add
imul
inc
adc
arpl
xchg
nop
sub
cmps
popf
jnp
xor
out
mov
iret
sahf
pushf
ja
cld
dec
test
mov
ins
dec
lods
outs
js
inc
xchg
cmp
jo
imul
(bad)
in
jnp
fs
scas
cmp
inc
sub
push
jle
pop
(bad)
cs
repz
sub
fistp
cmp
and
leave
mov
gs
push
daa
mov
scas
test
mov
and
adc
sti
pop
and
jp
fst
mov
retf
movs
ss
je
stos
pop
enter
adc
mov
hlt
sbb
or
dec
stc
int3
repz
cwde
push
mov
or
test
add
cmp
mov
jecxz
stos
mov
sti
popa
stc
xchg
xchg
call
movs
repnz
xchg
adc
cmp
in
cwde
fistp
pop
popa
inc
ja
lds
ja
test
push
rep
test
sbb
lods
add
fisttp
out
in
push
cld
sbb
inc
xchg
gs
shl
(bad)
or
xor
push
adc
scas
ret
and
ss
test
dec
pop
push
repz
cmp
and
mov
mov
(bad)
mov
hlt
dec
dec
stos
fucomp
(bad)
out
test
mov
xchg
out
sahf
dec
ficomp
call
or
enter
add
mov
and
sbb
mov
lahf
aas
mov
lock
pop
jne
add
popa
shl
pushf
data16
mov
out
lea
mov
cmp
in
lds
push
jecxz
mov
scas
push
dec
add
add
add
add
cmp
aam
adc
cmp
add
add
add
jae
ins
popa
outs
addr16
addr16
jae
(bad)
inc
pop
push
pop
cmp
stos
arpl
add
pop
pusha
imul
stc
pop
mov
or
mov
mov
(bad)
xor
mov
ret
xchg
scas
mov
cmp
jnp
data16
jge
stos
test
out
xchg
cmp
pop
shl
ficom
add
in
addr16
dec
pop
fldcw
pop
lea
fwait
or
(bad)
outs
cmps
stos
dec
lods
aad
pop
jmp
ins
jp
mov
das
sub
sub
test
jmp
cmp
test
js
cmps
sub
fisttp
imul
adc
adc
or
dec
jmp
jb
fwait
mov
jmp
inc
pop
sbb
mov
popf
mov
push
into
les
mov
mov
or
sub
loopne
cmps
js
xor
ror
mov
push
test
fbstp
pop
adc
push
xor
clc
cmp
xor
cwde
arpl
xchg
pop
jle
stos
pop
push
inc
add
dec
fadd
mov
sar
push
cmc
add
add
mov
jno
jnp
xor
sbb
pop
xor
ror
