push
call
ret
ret
jae
ror
dec
mov
cwd
or
adc
mov
retf
xchg
mov
jmp
pop
jp
leave
data16
add
and
mov
or
retf
(bad)
call
inc
jb
ins
cmc
jnp
xchg
push
ds
push
adc
dec
sub
add
sbb
jae
cli
scas
sub
pop
xor
push
lock
fistp
pop
hlt
mov
ret
mov
cmps
mov
aam
cmp
in
push
xchg
xor
daa
mov
in
jp
pop
sub
sub
cwde
pminub
pop
mov
mov
cmps
outs
and
mov
retf
jl
idiv
imul
mov
cli
push
fs
mov
out
mov
rcr
dec
pop
ror
rcl
mov
dec
sar
cli
sbb
pop
in
nop
mov
neg
not
cmc
ins
shl
mov
jg
out
mov
add
add
lds
xor
inc
sbb
fst
(bad)
div
push
clc
mov
xchg
pop
inc
stc
mov
push
or
out
sbb
rol
cmp
cwde
and
cmp
jo
mov
push
test
or
sbb
scas
add
js
xchg
retf
or
std
je
div
sub
push
iret
push
adc
ds
scas
push
jb
sub
in
push
push
rcr
cmp
sbb
and
xchg
add
je
retf
cmp
cmp
out
jle
std
push
dec
xchg
fisubr
fisttp
push
push
ror
cmp
lock
lods
cli
jmp
push
cmp
inc
xor
push
repz
mov
repnz
add
out
jno
aad
sbb
aaa
(bad)
clc
pushf
mov
stos
dec
adc
jo
sub
in
mov
dec
cmp
sub
jno
adc
in
and
int
int3
cmp
sub
je
es
not
jne
adc
jbe
mov
lock
in
stos
paddq
jmp
push
clc
outs
mov
add
rol
cmps
ja
loope
inc
jnp
mov
xchg
dec
pop
adc
dec
xor
dec
ret
cmp
push
or
adc
out
into
ss
push
test
fidiv
fidivr
adc
mov
push
sbb
ds
cmp
in
ss
retf
jecxz
push
cld
and
sub
shl
mov
cmps
push
fild
rcl
gs
sub
in
inc
je
inc
test
sbb
daa
sbb
push
add
jae
ja
test
dec
arpl
cmp
ss
cwde
cli
jp
xchg
adc
ja
daa
cmp
push
cmp
add
cmp
ror
mov
ins
mov
mov
sbb
jmp
push
es
and
in
fwait
loop
mov
sub
add
stos
std
dec
popa
addr16
(bad)
fs
pop
mov
loopne
cld
xchg
sub
lods
mov
pop
mov
pop
push
adc
push
inc
mov
adc
mov
je
es
movs
out
pop
sar
sub
sub
pop
and
out
iret
xchg
adc
fdivr
mov
ins
pop
xchg
xchg
inc
dec
or
add
fnstcw
pop
xchg
cmp
dec
ja
(bad)
aad
fs
shr
loop
inc
mov
popa
xchg
cwde
mov
lahf
or
and
stos
adc
int3
inc
dec
pushf
sbb
pop
stc
in
sahf
xchg
mov
jno
dec
(bad)
sub
push
repz
push
fs
stos
dec
cmp
scas
ds
xchg
pop
test
mov
clc
ret
inc
test
add
not
xchg
dec
clc
jae
mov
dec
xor
daa
and
enter
out
shl
xchg
sub
aas
movs
je
in
and
imul
in
mov
sti
inc
loope
ins
jmp
gs
xor
mov
add
jle
jbe
jbe
xchg
cmps
fstp
sub
jp
mov
scas
pop
popf
arpl
leave
sbb
push
cmp
data16
mov
mov
mul
add
jbe
cld
shl
xor
cwde
lahf
sahf
popf
adc
stos
dec
adc
dec
dec
or
or
add
and
test
xchg
inc
adc
xor
or
arpl
inc
ret
fcmove
ja
pusha
or
cld
iret
enter
popf
stc
fimul
aad
mov
imul
rep
into
ror
or
sar
pop
dec
test
jne
push
or
sar
inc
xor
dec
les
cmc
lahf
jb
or
push
mov
in
inc
add
imul
inc
add
mov
cld
xchg
jb
sti
push
push
xor
shl
rol
dec
fs
(bad)
loope
inc
fbstp
(bad)
stc
sbb
inc
sbb
push
fwait
adc
dec
jns
and
imul
(bad)
std
push
push
das
add
std
add
add
ficomp
ins
sbb
xor
fisttp
jnp
outs
xlat
dec
inc
adc
dec
ja
loopne
jp
jge
sbb
push
shl
std
jl
lds
into
inc
and
fidiv
push
lea
fcom
(bad)
aad
es
out
sub
xchg
movs
or
(bad)
iret
int3
stos
sahf
push
ins
aaa
ins
xor
daa
push
fdivr
inc
in
sub
shr
inc
mov
dec
imul
popf
mov
cmp
lods
xchg
sbb
and
pop
frstor
sbb
(bad)
jp
add
aam
out
retf
fcomp
xor
jg
fdivr
inc
add
and
inc
int3
jl
cmp
(bad)
jnp
mov
popa
push
cmp
and
stos
pushw
xor
and
jo
in
pop
pop
call
push
inc
inc
ret
mov
push
push
sbb
stos
dec
jne
pop
add
sbb
pusha
js
or
lea
cs
adc
scas
adc
or
not
mov
mov
les
mov
xchg
movs
leave
daa
mov
push
and
div
mov
daa
mov
push
in
pop
xor
lahf
dec
mov
pop
addr16
icebp
pop
push
and
dec
pop
add
mov
pop
repz
aam
imul
mov
xchg
push
jne
out
lock
imul
inc
mov
xlat
outs
sbb
dec
fwait
or
adc
sar
mov
push
add
cwde
and
sbb
out
(bad)
fwait
stos
cmp
sub
rcr
lods
jnp
jb
and
arpl
jbe
shr
rcr
fild
sub
dec
(bad)
neg
icebp
adc
sbb
ficomp
stos
mov
iret
lods
xchg
xchg
mov
jo
dec
pop
in
jno
pop
cmps
or
outs
mov
cdq
das
and
(bad)
fwait
push
dec
dec
ja
and
std
pmaxub
ins
xchg
xor
mov
and
adc
aad
cld
outs
jns
std
scas
xlat
dec
outs
mov
add
or
arpl
sbb
div
cmp
dec
cld
inc
int
adc
gs
ret
in
jl
inc
jg
push
aad
mov
and
pop
xor
repz
rcl
dec
test
xchg
pop
into
adc
adc
int
xlat
sub
(bad)
mov
mov
(bad)
fcomp
pusha
sub
stos
inc
fnstsw
adc
pop
push
std
or
aas
sub
int3
sar
scas
sbb
jmp
fwait
(bad)
or
mov
pop
xchg
sub
sub
(bad)
fcomp
es
push
shl
mov
pop
rcl
outs
mov
inc
mov
mov
fstp
out
sbb
int
shl
ins
(bad)
sub
imul
xor
xchg
jge
enter
dec
inc
push
mov
stc
loope
jmp
pop
sub
mov
retf
mov
test
test
push
xchg
xchg
or
xchg
dec
(bad)
cmp
(bad)
inc
cmps
pop
mov
jp
pop
add
push
mov
fmul
sahf
loopne
je
dec
add
sahf
cmps
push
lock
sub
add
shr
pop
jg
sub
retf
xor
inc
inc
dec
ss
jo
test
fst
mov
xchg
dec
pop
int
and
sbb
inc
mov
lods
cmp
pusha
xchg
mov
movs
aas
push
cmps
and
xor
mov
popf
jmp
dec
lds
xchg
ds
dec
xor
cmps
jo
in
inc
mov
lds
lock
jp
push
and
stc
jns
int
aaa
dec
dec
int3
jg
test
inc
loopne
dec
dec
out
push
mov
daa
mov
inc
gs
dec
js
sub
cmp
inc
inc
loopne
stc
fidiv
mov
jl
mov
jnp
in
add
out
mov
rcr
sbb
cmp
cmp
sar
dec
aaa
cmp
and
scas
jmp
pop
jp
outs
je
(bad)
cli
jmp
push
mov
xchg
pop
fcomi
adc
xchg
call
out
jecxz
mov
pop
cmp
pusha
adc
pop
nop
icebp
lods
cmp
repnz
jmp
xor
and
inc
xchg
repnz
sub
jl
cwde
arpl
cld
pop
xchg
push
mov
or
(bad)
mov
add
jb
retf
cmps
xchg
sub
cmp
sub
jbe
inc
and
sub
xor
in
cld
adc
sahf
push
cmps
loope
repz
push
mov
xchg
ins
les
sbb
cmp
cmc
inc
sbb
repz
cmovb
xor
addr16
enter
(bad)
repnz
xchg
xchg
mov
cmps
or
mov
fcmovbe
enter
sar
lods
mov
imul
jecxz
scas
(bad)
push
call
clc
and
lahf
add
adc
dec
push
inc
test
(bad)
iret
imul
jns
sub
jmp
sub
inc
xchg
xchg
stos
rol
dec
and
jecxz
xor
dec
adc
test
addr16
xlat
shr
fst
jmp
jmp
and
clc
aaa
jl
inc
aaa
(bad)
arpl
hlt
adc
cmc
sub
pop
(bad)
mov
xchg
fcomp
adc
sub
mov
addr16
push
lahf
and
sar
mov
sbb
jmp
rep
push
dec
dec
add
ss
jne
lock
sbb
push
xor
or
jns
inc
xor
(bad)
cdq
and
call
cmp
ins
and
cli
adc
sub
cmp
xchg
add
cli
test
sub
jne
pop
test
bswap
inc
fist
shl
mov
popf
sti
shl
(bad)
sbb
jns
enter
scas
add
xchg
fld
push
sbb
jl
and
pop
dec
jmp
stc
js
jmp
sbb
sbb
sar
and
test
enter
imul
lods
scas
push
fst
aas
adc
(bad)
out
aam
pop
cmp
ja
hlt
adc
clc
xor
test
cmp
dec
daa
push
xor
test
push
fiadd
adc
out
jmp
pushf
retf
inc
pushf
mov
xchg
jmp
push
mov
std
push
int3
add
dec
mov
ins
push
les
cmp
aam
mov
data16
jns
bound
push
mov
stos
scas
nop
bound
lods
jmp
jnp
sti
cmp
dec
xchg
ret
cmps
jge
push
loopne
das
inc
fdiv
ret
mov
and
mov
mov
adc
cmp
cs
cmps
push
iret
mov
(bad)
(bad)
cmp
mov
jge
adc
cmp
int
lahf
inc
dec
xchg
fsubr
pop
lods
add
sbb
jg
cmp
jbe
(bad)
pushf
mov
test
xchg
dec
mov
cmp
push
stos
sbb
ror
shl
pop
aam
in
and
sti
fsubr
adc
psrad
lods
mov
jno
mov
mov
call
test
(bad)
in
jno
mov
int
imul
in
int
(bad)
in
sahf
push
push
adc
mov
call
cld
add
not
jne
jne
jb
js
arpl
xor
call
jb
xchg
mov
mov
jno
push
inc
repnz
std
pop
sub
cmps
ins
sbb
shl
icebp
mov
and
inc
syscall
xor
jecxz
xchg
push
rcl
ja
in
jae
and
mov
clc
xchg
int3
fxch
xor
mov
inc
inc
(bad)
mov
fwait
imul
loopne
pop
push
addr16
sub
stos
adc
mov
retf
mov
fistp
sub
dec
popf
inc
push
out
rol
addr16
xchg
and
adc
mov
repnz
ins
shr
fadd
mov
mov
cdq
out
and
inc
jp
out
mov
imul
push
rcr
test
ds
mov
ret
xchg
mov
pop
std
loopne
add
xor
(bad)
sbb
ins
or
icebp
int
test
cdq
fst
fisubr
cmp
adc
cmp
into
enter
es
jge
(bad)
out
mov
push
dec
cwde
(bad)
pop
imul
sahf
lea
cwde
xlat
push
push
shl
outs
push
mov
inc
inc
scas
jp
cmc
mov
add
sub
or
int3
in
pop
cmps
mov
ret
add
lock
test
rol
dec
btr
add
in
aad
es
mov
xchg
imul
shl
(bad)
jecxz
pop
daa
mov
xchg
ret
call
mov
ja
out
mov
cmps
into
adc
mov
cwde
cld
call
out
sub
inc
and
adc
aam
xchg
imul
inc
push
add
ror
xor
imul
hlt
sti
in
outs
inc
imul
mov
(bad)
jmp
mov
cmp
mov
sub
out
ins
mov
pop
mov
jmp
jne
mov
adc
sbb
daa
nop
cwde
pop
popf
ror
push
add
stos
(bad)
pusha
push
(bad)
jo
jg
cld
ficom
ret
sbb
dec
xchg
sub
shl
(bad)
int
jnp
fcmovbe
hlt
repz
div
inc
add
pusha
cmc
cmp
push
or
ficomp
(bad)
repz
pop
cmps
not
(bad)
je
pop
jnp
cli
lock
(bad)
mov
cmp
xchg
test
xchg
sub
xor
mov
lods
dec
pop
push
inc
sub
and
retf
pop
push
or
dec
mov
lock
sbb
ins
jl
pop
mov
jl
push
and
cmp
(bad)
nop
push
ja
popf
ficom
arpl
dec
movs
cmp
xor
jmp
cwde
adc
or
ins
push
xchg
dec
call
je
push
adc
cmp
sahf
push
popa
adc
test
ret
jecxz
lock
retf
jno
adc
mov
popf
iret
xor
jo
scas
xor
sub
imul
dec
xlat
and
dec
stos
jl
xchg
mov
out
ret
mov
test
mov
xchg
ds
out
cdq
mov
jb
sbb
std
xchg
cli
ja
sub
mov
aas
loopne
fcmovnu
pushf
jg
cli
call
out
xchg
jne
out
add
cdq
mov
add
addr16
fwait
mov
xchg
rcl
jge
out
jne
pushf
int3
in
xchg
aad
retf
pop
in
pop
mov
sbb
mov
mov
outs
mov
cs
pop
mov
in
adc
(bad)
out
cmps
lds
xchg
adc
fisttp
out
jbe
inc
data16
fist
sub
ja
pop
jae
xlat
push
mov
gs
addr16
out
daa
inc
push
or
xor
lahf
xchg
dec
lea
imul
retf
ffreep
dec
pop
not
inc
jmp
inc
aaa
mov
cmp
pop
lahf
not
mov
dec
or
pop
icebp
ins
or
outs
jecxz
das
jle
inc
pop
in
cmps
(bad)
bound
das
scas
xchg
sti
xor
push
scas
ins
mov
call
and
mov
push
mov
clc
mov
jne
loopne
push
add
xlat
shl
xchg
cmps
jae
add
push
or
and
jge
cmc
inc
mov
cmp
jno
push
xchg
call
rcl
sub
out
or
loop
pop
leave
push
mul
push
js
fcomp
pop
repnz
(bad)
out
fwait
popf
or
jns
call
sbb
inc
sahf
mov
enter
arpl
(bad)
aam
adc
cmp
add
loopne
imul
cmp
pop
(bad)
imul
sbb
cmps
push
sbb
in
sbb
mov
dec
push
stos
into
mov
or
mov
inc
inc
push
mov
loop
mov
test
adc
cmp
dec
jmp
fdivr
cmp
pop
sar
xchg
sub
push
xchg
cdq
pop
bound
mov
add
and
push
xor
mov
ror
xchg
stc
mov
scas
lock
sbb
xor
lods
scas
pop
xlat
and
mov
push
hlt
inc
mov
je
loope
les
(bad)
(bad)
jecxz
cmp
fld
stos
fcomp
pop
scas
jb
pop
mov
movs
mul
shl
jmp
sbb
lea
pop
jb
xor
add
sbb
lock
lds
xor
mov
pop
push
push
scas
inc
push
mov
push
in
adc
xor
or
stos
rcl
add
inc
cmp
mov
push
inc
mov
rol
hlt
mov
(bad)
frstor
mov
retf
push
cmp
addr16
mov
outs
push
jmp
push
xchg
and
scas
arpl
dec
xor
xchg
ss
sub
push
stc
xor
jecxz
mov
pop
xchg
les
add
sbb
scas
loopne
std
je
lea
mov
sub
adc
mov
cs
adc
push
sahf
dec
dec
mov
or
add
nop
bound
idiv
jo
xor
dec
scas
cwde
push
cmp
cld
mov
mov
cli
fcom
and
ficomp
jecxz
xchg
push
and
not
retf
xchg
pop
xchg
fsub
inc
loope
(bad)
xor
sub
mov
cmc
stos
es
cld
push
cmc
dec
paddw
xor
bound
push
jle
scas
mov
xchg
aad
inc
test
add
sbb
pop
sbb
ja
inc
stos
out
push
enter
inc
mov
mov
inc
das
cdq
out
jbe
pop
push
cmp
int
lahf
fadd
cmp
mov
rcl
pop
outs
(bad)
jmp
icebp
or
les
add
xlat
int3
add
mov
push
iret
les
mov
xor
in
arpl
clc
ja
push
loopne
add
pop
cmps
mov
int3
xor
loope
xor
test
aad
invd
retf
test
aaa
ret
lds
or
jns
mov
mov
dec
fsub
mov
mov
icebp
int
loope
bound
dec
xor
push
aaa
cwde
jmp
(bad)
hlt
xchg
(bad)
mov
xor
xchg
shr
jle
pusha
mov
stos
test
or
lds
mov
dec
dec
mov
inc
out
(bad)
popf
mov
je
xor
les
and
dec
mov
and
cli
leave
xchg
add
fs
adc
aam
jb
jmp
and
ins
arpl
cwde
movs
arpl
neg
sub
daa
daa
jmp
mov
inc
cmp
xor
fmul
xor
mov
es
xlat
mov
sub
loop
scas
or
push
out
inc
dec
lds
cmp
xor
dec
cmp
out
dec
test
adc
aam
xor
push
aaa
mov
in
adc
pop
sub
dec
adc
jecxz
inc
in
inc
mov
adc
cvtps2pi
fld
add
pop
ror
leave
imul
push
mov
arpl
(bad)
mov
dec
and
add
cmps
push
idiv
cmc
stos
(bad)
xor
aaa
pop
fidivr
adc
mov
movs
fbstp
movs
shr
loop
ror
mov
mov
dec
push
mov
stos
pop
test
mov
cli
sbb
ret
add
out
or
(bad)
outs
adc
(bad)
ds
loopne
repnz
ja
mov
movs
xchg
ins
(bad)
xchg
mov
mov
mov
push
pop
aad
lods
xchg
(bad)
std
dec
aas
movs
jne
stos
or
pop
pop
mov
addr16
mov
mov
icebp
fmul
add
(bad)
inc
jl
movs
adc
in
stos
out
add
add
fsub
outs
cdq
inc
or
jp
int
mov
adc
push
cmps
jno
push
cmp
mov
xor
aaa
xor
mov
jmp
je
enter
sbb
cmp
xchg
sar
mov
(bad)
sub
add
fs
mov
movs
mov
push
and
sub
mov
jg
mov
push
stc
cmps
add
push
sti
add
mov
xlat
sub
pop
mov
pop
loop
and
enter
sbb
ja
call
cmovo
sbb
je
or
ret
inc
mov
xchg
jmp
jle
push
mov
shr
dec
hlt
push
jp
retf
loope
movs
or
lds
and
push
fbstp
fisubr
sbb
icebp
mov
fistp
arpl
nop
movsx
lahf
dec
jnp
lods
loope
add
pop
push
es
pop
mov
jo
movs
sub
cmp
fcom
(bad)
adc
(bad)
pop
movs
shr
dec
or
mov
add
call
call
hlt
movs
loope
sbb
aaa
xchg
xchg
pop
and
lods
dec
mov
nop
push
dec
xchg
int
inc
test
jmp
sbb
cld
imul
repnz
pop
sbb
sub
cld
bound
stc
icebp
mov
xor
arpl
in
cmp
loopne
sbb
jo
mov
rcr
pop
inc
int3
xchg
add
test
push
sbb
xor
push
lock
sbb
cwde
push
and
push
pop
mov
mov
cmp
inc
xchg
dec
push
movs
mov
(bad)
cmp
push
hlt
(bad)
rol
jbe
cld
and
lods
jmp
sbb
in
mov
and
jmp
push
icebp
or
pop
shl
rol
or
xlat
jl
out
data16
xor
cmp
movs
mov
ficom
imul
mov
pop
add
fmul
or
xchg
adc
mov
cmp
mov
sbb
(bad)
xor
lds
pop
or
stos
retf
nop
xchg
mov
jae
cmp
js
push
xor
cdq
mov
push
jle
pop
pop
jp
idiv
sub
and
push
pusha
adc
cmp
(bad)
sti
pushf
das
adc
mov
fwait
adc
in
cmc
shl
mov
cdq
(bad)
int3
out
lods
sub
jbe
fcmovbe
or
mov
jb
repz
popf
inc
ds
jmp
mov
push
cmps
inc
jge
mov
dec
dec
or
pop
ret
(bad)
pop
xchg
and
mov
enter
(bad)
loop
aaa
pop
pop
push
dec
pop
pop
fxch
ds
xchg
(bad)
std
push
pop
sbb
repnz
out
call
loop
cmp
out
adc
push
jb
add
scas
jmp
(bad)
rol
call
call
pop
xchg
xlat
jecxz
push
retf
mov
retf
jmp
mov
mov
sbb
leave
inc
in
std
in
or
mov
mov
jl
fstp
mov
mov
cmp
jo
xor
out
inc
call
repnz
xor
leave
sar
sub
outs
and
xchg
loopne
mov
add
and
pop
test
pop
adc
fwait
dec
(bad)
push
or
ins
adc
sub
jge
dec
add
sub
dec
inc
jne
add
xor
movs
sub
jge
movs
push
and
mov
fimul
daa
mov
jp
ins
es
test
repnz
inc
jge
js
xchg
arpl
dec
adc
xchg
popa
jge
jb
out
cld
jo
aas
test
xchg
mov
mov
sub
outs
ins
jne
xchg
mov
cmp
movups
outs
test
adc
movs
push
inc
stc
dec
test
pop
xor
in
cmp
adc
cmps
and
sbb
mov
xchg
out
cmps
xor
test
imul
out
mov
stos
mov
dec
xor
imul
sub
dec
mov
outs
push
dec
push
clc
outs
hlt
jb
mov
addr16
mov
pop
add
rol
cmp
inc
popa
dec
fsubr
(bad)
jmp
sub
pushf
imul
mov
outs
push
call
dec
jo
xor
xor
xor
stos
jmp
mov
cmp
mov
das
sbb
or
push
addr16
push
adc
daa
mov
stc
jae
shr
mov
jp
jg
lods
repz
cmp
inc
aad
xchg
lea
or
dec
shr
jp
sub
(bad)
into
imul
xor
xor
xchg
pushf
xchg
in
or
imul
pop
loopne
ret
or
imul
dec
xor
inc
cld
popa
mov
fcomp
dec
push
(bad)
in
pop
cld
das
sub
mov
pop
mov
imul
jns
sar
(bad)
sahf
cmp
cmp
pop
call
xchg
mov
push
in
xchg
and
(bad)
xchg
pop
inc
out
out
or
sti
jle
out
fsincos
xor
mov
or
std
fdivr
int3
in
mov
fild
cli
cmp
jno
and
cmp
mov
push
cmp
and
loop
add
pusha
movs
(bad)
mov
lods
fist
les
lock
pop
cmp
or
popa
push
mov
fdiv
mov
dec
xchg
loopne
inc
xchg
fs
pop
sub
fcmovbe
adc
outs
or
push
(bad)
std
push
(bad)
punpckhdq
adc
pop
lahf
ja
cmp
sbb
mov
mov
mov
and
cli
push
jae
mov
cmp
xor
dec
xchg
xchg
jns
ja
imul
neg
sub
scas
mov
dec
add
ret
xchg
popa
sub
fistp
or
jnp
cmovae
icebp
in
test
push
pop
xor
imul
fcmovbe
inc
xchg
mov
out
jno
jge
sub
loope
shr
(bad)
les
repnz
clc
mov
jne
push
ins
sti
int
cmp
clc
sbb
lock
mov
xchg
repz
jge
sbb
lods
ins
jge
into
jae
out
dec
ins
js
arpl
push
adc
mov
mov
call
push
mov
mov
call
add
mov
es
call
mov
leave
sar
cwde
xchg
xlat
in
popf
lock
pop
add
mov
xchg
inc
cmps
adc
dec
jne
mov
(bad)
popa
sub
test
xlat
out
jae
iret
daa
outs
movs
jns
or
lahf
adc
sub
sub
in
cmp
repnz
pop
and
sbb
aas
inc
sbb
dec
mov
ret
jp
sbb
daa
xlat
iret
mov
cld
loope
xor
loope
clc
push
ins
jnp
pop
in
xor
dec
in
(bad)
in
pop
xor
mov
mov
dec
mov
inc
mov
sub
in
pop
cmps
push
rcr
jl
sti
xchg
call
mov
jle
sub
mov
movsx
test
dec
call
arpl
iret
(bad)
addr16
test
push
and
jb
(bad)
and
mov
shl
mov
clc
push
sub
push
out
loop
cmp
mov
repnz
mov
ss
cmp
inc
movs
adc
mov
sbb
cmp
loope
fwait
cmp
cwde
sahf
lahf
imul
jae
and
jmp
mov
cmps
nop
cdq
iret
sbb
push
sub
std
lock
out
bound
test
jmp
pop
xchg
inc
mov
sub
loop
mov
inc
dec
jne
daa
or
dec
or
adc
mov
inc
imul
push
pop
aad
loope
mov
xchg
sbb
inc
sub
sbb
mov
(bad)
repnz
cmc
je
cs
jle
cli
jecxz
mov
mov
lods
cmp
test
add
enter
fadd
cmps
data16
xchg
push
mov
(bad)
stos
mov
pop
xchg
dec
imul
outs
fcom
mov
stos
jne
mov
(bad)
bound
dec
inc
fisttp
leave
mov
stc
add
nop
add
adc
ret
(bad)
cmp
ins
jmp
fcomp
hlt
mov
icebp
clc
mov
ss
jo
mov
not
mov
jl
inc
mov
(bad)
or
add
rcl
or
jo
dec
sbb
sbb
push
lods
mov
stos
mov
add
sub
bound
pop
int
cmp
push
push
jmp
(bad)
outs
pop
aad
xchg
mov
mov
cmp
mov
mov
or
lods
cmc
jmp
or
xchg
out
imul
sbb
mov
stos
sbb
inc
ins
aad
pop
retf
stos
ja
stos
hlt
iret
sub
push
sbb
call
out
mov
mov
js
sbb
dec
push
pop
xlat
xchg
stos
cmps
cmp
jb
mov
enter
mov
mov
out
(bad)
cs
and
jecxz
int
mov
imul
and
retf
jb
mov
(bad)
jo
sbb
dec
(bad)
inc
in
xchg
jmp
cli
shl
popa
xchg
or
mov
sbb
test
xchg
jbe
pshufw
lods
pop
mov
mov
pop
adc
test
pop
adc
xor
int3
jne
stos
test
shl
push
pop
aam
outs
aaa
call
xor
push
sbb
mov
fcmovbe
mov
inc
xlat
ins
cs
xchg
test
sbb
dec
cmc
popa
push
test
dec
add
mov
cli
sub
gs
imul
jo
fadd
das
mov
pusha
js
mov
inc
cwde
pop
mov
sbb
sub
sub
(bad)
ss
int3
jae
icebp
pop
pop
mov
retf
cwde
jo
js
dec
cld
add
mov
lea
rcr
push
cmp
jg
mov
lea
(bad)
dec
ficom
mov
std
in
pop
leave
jbe
jmp
mov
sub
add
(bad)
jns
push
outs
push
ins
retf
and
pop
lds
icebp
push
and
nop
retf
cs
aad
sahf
call
pop
pusha
jb
inc
loop
in
jae
xor
push
(bad)
jl
mov
mov
push
int3
fnsave
loope
push
repz
in
push
and
call
xchg
mov
xchg
fidivr
jo
ins
je
loopne
sbb
mov
xchg
mov
lea
mov
lock
mov
inc
int3
lods
call
aas
repnz
or
add
mov
cmp
adc
mov
xchg
sbb
add
jge
push
outs
inc
dec
iret
(bad)
fwait
xlat
rol
sub
mov
test
shl
push
es
pushf
push
popf
push
mov
pop
xor
jge
pop
cwde
inc
retf
retf
push
pop
js
dec
inc
xor
rdpmc
cmp
mov
xchg
in
mov
out
xor
std
add
clc
std
inc
imul
or
mov
sub
les
xchg
test
icebp
stos
lods
push
inc
mov
dec
push
push
xor
stc
mov
dec
ins
cmps
imul
sbb
jns
nop
xchg
dec
mov
sbb
mov
int
sahf
in
fwait
xor
or
pop
cmp
mov
data16
mov
add
xchg
loope
imul
test
jmp
cmp
sub
pop
xor
in
jmp
dec
mov
xchg
xchg
mov
pop
es
ud0
sbb
cmps
pop
(bad)
repz
(bad)
sub
or
inc
imul
dec
inc
dec
adc
sub
push
mov
std
adc
retf
or
and
(bad)
jg
pop
or
dec
mov
ret
fmul
jecxz
mov
sti
aad
je
cmp
push
lock
enter
jns
xchg
aad
cs
sbb
push
sbb
inc
and
(bad)
push
xchg
test
mov
outs
popa
loope
push
(bad)
dec
daa
lods
retf
clc
and
loop
hlt
stos
sub
push
mov
mov
scas
imul
les
mov
mov
inc
add
clc
fs
inc
es
pushf
cmps
xchg
inc
jg
xor
sbb
lods
push
push
mov
inc
pushf
shl
(bad)
mov
sbb
xor
(bad)
ror
jecxz
inc
dec
push
mov
xchg
js
les
mov
popa
xchg
xor
pop
outs
xor
leave
(bad)
aam
mov
mov
dec
xchg
dec
or
lds
les
adc
loope
aam
jecxz
pop
cdq
(bad)
ret
fwait
inc
cs
lds
gs
jno
sub
push
jno
scas
icebp
ret
fcom
icebp
mov
dec
push
sbb
arpl
inc
ds
add
es
cwde
cdq
sbb
call
xchg
test
add
vmwrite
adc
outs
mov
ins
in
out
(bad)
out
ret
fsub
xor
aaa
xchg
in
les
jl
and
jb
sub
mov
jno
add
mov
cdq
sbb
add
aas
adc
pop
pop
ja
or
jo
movs
inc
sub
xchg
inc
retf
mov
mov
xlat
pop
jecxz
push
sahf
inc
inc
lds
jge
or
sbb
xchg
ret
stc
cmp
icebp
inc
scas
cmp
fiadd
iret
cmp
sub
mov
add
xchg
icebp
mov
cmp
je
nop
push
xchg
out
fcom
mov
(bad)
in
xchg
pop
nop
inc
test
xor
jg
shl
inc
pop
inc
cwde
sub
and
test
xor
sub
cmp
sbb
loopne
or
cmp
xor
push
in
aam
repnz
xchg
sbb
cmps
cmp
inc
jge
add
or
xchg
sub
cwde
jg
or
cs
inc
sahf
mov
shl
xchg
js
jnp
xor
adc
xor
xchg
mov
and
inc
xlat
pop
mov
pop
das
test
jp
jo
cmps
xchg
imul
adc
out
mov
jns
(bad)
test
out
or
aad
mov
repnz
mov
push
lods
mov
scas
mov
inc
inc
and
xor
imul
sbb
inc
dec
repz
xor
out
mov
fnstcw
mov
ror
lods
sbb
retf
adc
in
mov
sbb
dec
xor
xor
out
iret
push
xchg
add
adc
sub
popa
push
es
adc
mov
cmc
stos
es
push
mov
push
pop
call
nop
fadd
outs
repz
pop
xchg
daa
mov
inc
cmp
addr16
sub
or
push
outs
jge
inc
mov
(bad)
inc
dec
pop
in
iret
cmps
test
fnstsw
mov
or
sub
popa
pop
loope
mov
call
dec
sbb
mov
fwait
jo
pop
sbb
aas
daa
mov
jmp
pop
rcl
mov
dec
mov
jbe
adc
clc
mov
cmp
sbb
ja
repnz
mov
inc
push
ret
jo
lea
push
sar
or
dec
jge
ret
add
cli
inc
js
int3
or
dec
add
(bad)
int
xor
add
push
adc
clc
mov
ret
mov
int
ds
shl
pop
imul
sub
movs
(bad)
mov
sub
int
ss
xchg
popa
out
es
daa
pusha
aam
dec
xor
rcl
test
jnp
mov
and
add
stos
adc
ret
push
sahf
hlt
popf
cs
(bad)
int
or
xor
mov
inc
jbe
loopne
add
ds
lds
jbe
push
and
dec
jmp
enter
mov
jg
cmp
shr
jecxz
adc
sbb
dec
ret
mov
sub
fadd
jmp
mov
or
call
stos
arpl
bound
fst
xchg
mov
sub
xor
xchg
and
test
pop
dec
int3
popa
push
and
jno
and
add
ret
lods
daa
ja
inc
inc
xor
cmp
mov
loope
mov
xor
rol
je
test
lods
adc
jmp
or
xchg
add
jle
imul
dec
outs
and
or
iret
adc
outs
dec
mov
inc
jle
fs
dec
dec
lods
mov
pop
(bad)
movs
ror
loope
inc
adc
out
xchg
dec
inc
and
fs
dec
retf
sbb
lahf
jmp
jae
cli
(bad)
imul
xlat
mov
out
mov
mov
es
mov
sub
jg
clc
iret
xor
dec
jle
outs
data16
cmc
mov
call
mov
xor
xchg
mov
ins
inc
call
aas
pop
xchg
jmp
xchg
(bad)
push
adc
xchg
mov
jmp
jg
adc
fs
dec
es
add
mov
icebp
jmp
(bad)
shr
sti
cdq
adc
jecxz
movs
(bad)
mov
or
pop
add
cwde
jmp
repnz
pop
xor
(bad)
loopne
xor
mov
push
or
fcmovne
cmp
(bad)
stc
in
and
mov
out
cmp
out
sub
cmp
ds
inc
jns
inc
ficom
sub
cs
lds
sub
or
leave
jg
shr
out
inc
arpl
fs
add
inc
pushf
pop
std
cmps
dec
mov
or
cmp
mov
mov
mov
ror
test
std
mov
dec
dec
dec
pop
adc
imul
dec
jmp
mov
cmc
push
test
cmp
mov
cld
div
mov
into
and
mov
out
pop
mov
addr16
ficomp
in
test
loope
scas
xchg
daa
out
jge
mov
mov
rcr
paddsw
mov
test
inc
dec
dec
in
sbb
jmp
imul
mov
cld
lods
scas
mov
jmp
xor
rcl
popa
inc
mov
push
(bad)
sub
inc
pop
mov
rol
pop
cld
hlt
xchg
into
loopne
push
push
xor
mov
dec
dec
cmp
stc
mov
pop
test
add
push
sub
add
mov
pop
xor
sub
dec
pop
inc
inc
ror
retf
and
or
mov
scas
das
ret
mov
cmp
je
fcomp
fisub
push
ss
mov
jnp
clc
into
cmp
push
stos
out
test
cwde
into
push
ret
inc
dec
mov
shr
aas
pop
mov
loop
sbb
pop
pop
ds
shl
addr16
(bad)
jle
xchg
dec
movs
fsub
ret
xchg
arpl
daa
xchg
push
jo
outs
mov
ret
popa
xor
adc
xchg
fcom
lahf
push
inc
or
jg
mov
xchg
popf
sbb
mov
sahf
imul
mov
outs
test
xchg
lds
inc
mov
in
xchg
and
ds
mov
movs
std
out
imul
rcr
sub
xchg
mov
shl
xchg
mov
sti
xor
mov
jb
mov
push
jo
test
mov
ror
out
jnp
aad
sti
jbe
popa
mov
lock
dec
into
mov
xchg
dec
fild
sbb
sub
push
dec
rep
jp
cmps
xchg
stc
cmp
mov
sub
imul
nop
xor
loopne
fsubr
pusha
xor
add
pop
gs
adc
ret
adc
stos
sub
cmp
jmp
push
adc
mov
sub
(bad)
out
jecxz
inc
movs
or
test
fistp
jnp
leave
or
fstp
mov
add
mov
(bad)
lahf
mov
sub
mov
pop
rcl
sub
push
mov
mov
js
inc
stos
pmulhw
and
in
lods
jl
push
inc
adc
dec
in
push
rcr
(bad)
jl
movs
cmp
jnp
scas
(bad)
into
imul
ja
rol
adc
adc
pop
adc
mov
pop
stc
fsubrp
cmp
lds
add
stos
out
jg
test
push
pop
repz
and
inc
lods
dec
ret
cdq
sub
aad
and
add
jmp
push
xor
add
xchg
inc
mov
sub
mov
inc
sar
or
jg
stos
lds
inc
call
(bad)
fs
jbe
sar
lods
sub
sar
xchg
or
xchg
sbb
loop
and
call
fldl2e
xchg
sub
mov
mov
mov
sbb
inc
addr16
into
push
pop
sub
dec
les
adc
call
stos
add
and
aas
sub
retf
sub
pop
lods
dec
adc
sahf
sub
ss
sub
add
cld
repnz
push
mov
(bad)
jnp
retf
scas
sub
out
jmp
or
int3
jmp
push
or
mov
or
sbb
clc
mov
jb
gs
jmp
loop
sub
xchg
or
jb
dec
sbb
push
cmp
mov
out
jge
mov
xchg
pushf
addr16
jle
dec
enter
sbb
push
popf
movs
mov
jmp
pop
mov
popf
jp
aad
jne
or
xchg
arpl
imul
out
test
cmps
sub
sub
syscall
xchg
sub
stos
mov
stos
push
xor
cs
and
stos
sub
mov
in
neg
leave
shl
std
out
dec
jnp
mov
pop
les
pop
mov
mov
pusha
xchg
(bad)
into
arpl
and
imul
call
pop
lods
inc
dec
mov
mov
xchg
mov
jg
lds
sbb
dec
test
push
sbb
cmp
repz
rol
adc
jg
pop
out
and
xor
aas
sbb
xchg
push
shl
or
xlat
push
bound
adc
adc
pop
push
jecxz
shl
add
add
inc
jp
push
cmp
stos
sub
stos
dec
aam
aad
cdq
icebp
cli
xor
jae
bts
add
cld
sahf
mov
movs
or
cmc
(bad)
dec
mov
cmp
cmp
xor
cld
add
xchg
fsubr
sahf
xor
fsubr
stos
ret
arpl
cmp
in
mov
cwde
mov
shl
std
pop
or
sbb
(bad)
jge
hlt
sti
mov
(bad)
loopne
mov
shr
cld
fisub
iret
outs
into
add
dec
outs
mov
hlt
scas
mov
push
mov
lahf
sbb
inc
and
or
and
call
jmp
loop
ins
hlt
pop
test
pop
xor
out
cmc
xchg
and
mov
sbb
iret
outs
loope
aad
(bad)
outs
jno
cmp
(bad)
(bad)
je
jns
push
ss
outs
pop
call
sar
pop
pop
jp
or
pop
mov
fs
dec
sub
outs
fstp
xchg
and
outs
mov
add
movs
inc
xchg
aam
push
stos
mov
pusha
mov
pushf
and
sbb
fist
sbb
dec
xor
jmp
test
addr16
mov
dec
sbb
clc
jo
cmp
loope
adc
test
jg
dec
dec
xor
sub
mov
add
lea
or
push
imul
mov
(bad)
mov
iret
inc
call
inc
aaa
inc
scas
push
fs
(bad)
je
sbb
push
(bad)
shr
leave
mov
outs
cmp
js
mov
push
fistp
xchg
jb
outs
cmps
or
jo
aad
pop
cmps
mov
test
or
sub
xchg
mov
and
mov
adc
into
add
inc
test
retf
and
scas
fidiv
lods
inc
and
adc
shr
aaa
xchg
int
sbb
xor
xor
out
(bad)
movs
aas
jo
pop
mov
out
aas
int
loope
mov
mov
and
sub
adc
dec
and
mov
fdivrp
sbb
imul
fimul
mov
in
sub
idiv
in
pop
and
jmp
mov
pop
stc
xchg
mov
mov
mov
mov
out
cmp
dec
jmp
sbb
es
hlt
lods
(bad)
mov
mov
mov
cli
popf
mov
jl
push
mov
les
fistp
xlat
adc
cmp
mov
cmps
dec
sti
pushf
lea
adc
lock
and
fist
xchg
mov
sti
aam
mov
pop
and
cli
mov
push
pusha
sbb
pop
pop
sti
lock
imul
mov
fdivr
and
imul
cmp
mov
out
cwde
inc
stos
mov
into
dec
jns
xchg
aas
dec
add
retf
(bad)
outs
pop
cmp
jno
mov
clc
shl
dec
mov
fwait
ror
sti
orps
mov
pop
out
sbb
lahf
pop
(bad)
aas
mov
mov
pop
jp
test
dec
call
sbb
sahf
or
repz
sub
jl
nop
jne
jmp
add
sbb
cmc
pop
cld
leave
fstp
ss
xlat
lock
cwde
jno
mov
nop
ret
sbb
shr
jo
dec
vcvttss2si
leave
or
cmp
and
scas
cmp
test
pop
mov
mov
inc
pop
sub
mov
outs
inc
ret
(bad)
push
scas
ffree
jbe
mov
(bad)
aad
jp
push
mov
add
stc
gs
jmp
jbe
mul
mov
gs
lock
mov
popf
jb
retf
push
(bad)
(bad)
jmp
push
(bad)
(bad)
mov
das
cmp
mov
or
mov
xchg
adc
jle
test
jae
adc
(bad)
(bad)
int
je
xor
or
out
mov
pop
jb
data16
pusha
dec
pop
cs
int
cmp
add
mov
imul
xor
adc
iret
push
mov
sbb
dec
inc
xor
adc
jbe
outs
sbb
sub
jnp
das
lock
ds
or
jns
cdq
movs
cmc
pop
pop
rcr
pop
int3
pop
stos
test
je
jae
movs
add
call
adc
sub
xchg
jl
mov
sub
inc
popf
push
mov
sub
test
pop
xchg
push
xchg
sub
fwait
into
in
mov
inc
fisubr
cmp
in
dec
aam
and
imul
push
and
outs
mov
mov
xor
movs
out
in
dec
(bad)
jns
test
pop
sbb
adc
dec
and
scas
inc
cld
(bad)
jl
xor
mov
popf
dec
test
add
mov
mov
pop
pop
jl
loope
inc
loope
xchg
jns
push
xchg
jns
dec
push
jge
push
outs
dec
test
es
pusha
push
test
inc
add
std
fimul
retf
mov
push
mov
lock
fist
cmps
jl
jne
dec
mov
pop
bound
arpl
or
aad
aas
mov
sbb
pop
dec
pop
jb
cmp
fisttp
aaa
add
xchg
pop
jbe
in
ret
daa
dec
xlat
jno
mov
push
loopne
dec
mov
push
loope
add
fs
hlt
int3
or
call
ins
fidivr
cmp
fdivr
adc
int
int
mov
push
add
stc
je
or
nop
xor
loopne
mov
loopne
inc
pop
mov
cld
aaa
dec
jns
adc
fs
push
ins
bound
popa
fwait
jl
mov
or
mov
or
leave
and
out
pop
nop
ret
js
push
cmps
jb
aam
jmp
out
pop
push
jl
xchg
jbe
xchg
or
iret
add
xor
fwait
xchg
sti
dec
addr16
adc
or
push
push
lahf
mov
imul
test
lahf
xchg
pop
jns
add
sub
xchg
mov
mov
sub
rcl
ss
xchg
and
xor
cmc
mov
cmp
sti
and
(bad)
in
pop
sbb
ins
jnp
push
or
in
aaa
mov
ss
and
ja
jae
jb
push
push
push
int
xor
iret
ins
jp
mov
add
retf
movs
pop
jl
mov
cmps
shr
inc
push
cwde
scas
pop
push
pop
call
shl
and
mov
bound
leave
cwde
idiv
outs
xchg
pop
aaa
push
aam
xchg
(bad)
out
rcr
inc
dec
adc
dec
pop
out
imul
daa
inc
inc
(bad)
cmp
mov
mov
leave
test
push
mov
arpl
xchg
adc
(bad)
cmp
ds
inc
jns
inc
(bad)
pop
clc
jb
xchg
push
mov
pop
test
lods
leave
jl
mov
jo
push
mov
dec
cwde
or
ja
jg
ins
inc
jmp
dec
xchg
adc
into
hlt
aaa
pop
xchg
jnp
push
shl
loopne
inc
aaa
movs
pop
mov
test
adc
or
pop
jmp
or
inc
dec
stc
add
jg
call
mov
add
add
mov
push
and
xchg
xchg
mov
aad
neg
bound
jb
dec
imul
or
add
pop
popf
mov
test
jae
add
je
lea
rol
cmp
adc
inc
and
or
clc
xor
(bad)
loop
es
inc
ret
retf
int
cmps
mov
aas
iret
pusha
lahf
mov
mov
push
adc
xor
pop
xor
push
ror
push
sbb
mov
icebp
or
push
outs
aam
cmps
pop
lods
out
test
push
lds
jns
das
test
push
and
imul
xor
mov
jae
repnz
popf
sahf
pop
pop
xor
pop
into
sbb
aam
push
add
aam
and
int3
inc
ret
int
sub
add
adc
mov
out
or
mov
(bad)
jns
(bad)
test
maskmovq
neg
sbb
cmp
imul
test
out
sub
xchg
sbb
imul
pop
adc
in
xchg
jmp
daa
aas
(bad)
in
test
aad
je
or
sar
push
fcom
mov
retf
adc
shl
mov
imul
dec
xchg
lods
mov
push
pop
mov
push
dec
inc
add
das
in
adc
xor
mov
or
sub
arpl
pop
jmp
ins
xchg
push
mov
not
dec
or
pop
jl
retf
out
in
sar
push
mov
lods
mov
xchg
jmp
mov
or
cs
pushf
xchg
lds
sti
test
mov
push
sub
sbb
iret
icebp
rcr
pusha
(bad)
cmc
jmp
(bad)
ror
ret
icebp
out
push
ficomp
leave
cmp
stos
mov
inc
mov
and
ret
and
out
into
shl
or
(bad)
gs
loop
mov
xchg
loopne
fwait
jmp
cli
ss
pop
adc
dec
adc
or
cs
mov
jecxz
iret
ins
adc
inc
ss
xchg
xor
pop
cmp
xchg
test
xchg
sar
xchg
dec
inc
jnp
mov
scas
out
add
mov
idiv
ins
push
xlat
icebp
cmc
or
adc
xor
mov
push
arpl
jnp
cmp
push
xor
call
cdq
xchg
xor
pop
(bad)
and
push
cmp
pop
mov
xchg
adc
ret
sub
mov
sub
jns
cmp
call
(bad)
xor
int3
fdiv
jl
mov
hlt
mov
dec
sbb
adc
adc
enter
movs
fbstp
xchg
push
mov
cmp
(bad)
inc
pop
in
xor
aam
repnz
outs
cmp
xlat
imul
pusha
push
test
das
aad
adc
mov
mov
push
pop
cmp
adc
and
addr16
dec
cwde
movs
adc
daa
in
dec
repz
mov
fdivr
cdq
mov
popf
adc
jmp
ins
or
inc
inc
dec
adc
ja
mov
out
push
mov
push
push
shr
or
out
sub
jno
sbb
test
inc
mov
rcr
pop
je
sbb
sar
test
iret
aas
mov
iret
(bad)
pushw
jbe
xor
daa
cmp
stc
icebp
xchg
or
imul
jg
sbb
cmps
jbe
jl
psllw
loope
mov
pop
test
xor
push
mov
add
gs
call
pop
cmp
push
add
cmp
dec
out
dec
or
je
mov
jmp
cmp
jmp
fimul
jmp
mov
call
mov
cmp
and
cmp
nop
jl
add
cmp
call
movs
mov
retf
pop
loopne
xchg
pop
push
mov
std
shl
dec
aam
clc
mov
sub
cmp
mov
dec
out
aam
jbe
push
add
sbb
dec
adc
mov
scas
fistp
retf
add
out
jge
sar
add
inc
(bad)
jmp
xchg
cmp
iret
cwde
xchg
fist
cwde
aas
cmps
jb
sub
xor
movs
lds
(bad)
outs
lds
pop
test
ins
add
inc
in
test
mov
mov
lock
jnp
cmp
cmp
popw
fild
shl
ins
add
fcomi
push
sub
mov
cld
and
call
dec
retf
push
push
mov
mov
mov
cmp
xor
pop
jae
and
push
mov
jg
in
adc
add
adc
mov
pushf
mov
xchg
gs
movs
jbe
scas
sbb
es
test
outs
jmp
cwde
add
adc
or
lock
pop
outs
jmp
mov
push
mov
mov
test
(bad)
jo
retf
leave
sub
test
pop
pop
jo
popf
jp
lock
inc
push
in
inc
xchg
adc
jl
xchg
xor
mov
fistp
(bad)
sub
pusha
test
dec
aas
cmp
shl
mov
lea
test
jle
jnp
ds
mov
inc
popa
ins
cmps
call
jmp
dec
out
mov
ret
scas
ror
retf
dec
das
rcr
or
push
sbb
cmp
mov
mov
out
cmps
dec
adc
jmp
call
pop
movsx
data16
xchg
mov
xlat
or
adc
call
test
loope
in
pop
sub
mov
mov
rol
bound
xchg
fisttp
popa
cmp
sahf
fs
shr
xchg
stos
imul
xchg
imul
xchg
imul
aaa
(bad)
out
(bad)
xor
adc
inc
push
test
test
repz
push
scas
int
data16
std
in
sub
push
mov
test
xchg
fimul
hlt
sbb
or
fadd
add
push
cmp
push
(bad)
fsubr
idiv
les
mov
fbld
movs
xchg
das
mov
hlt
fsubr
pusha
lock
je
and
push
xlat
out
push
loope
pop
mov
jg
or
shl
dec
adc
xchg
cmp
xchg
imul
xchg
ror
or
test
mov
icebp
sbb
mov
lods
pop
pusha
mov
sahf
(bad)
mov
fadd
scas
xchg
ja
clc
sub
leave
call
in
dec
outs
sbb
cs
cdq
inc
bnd
out
dec
retf
jmp
aam
adc
ins
mov
cmp
and
cli
dec
arpl
dec
add
and
cmp
xchg
xchg
bound
inc
adc
sbb
inc
or
rcl
mov
loop
call
cmps
sub
adc
mov
cmp
add
mov
adc
mov
in
cmp
xchg
ret
cwde
add
add
fcom
cmp
mov
push
mov
(bad)
sbb
jo
cmps
mov
js
stc
xchg
scas
sub
int
(bad)
cld
mov
inc
push
mov
xchg
leave
shl
mov
in
lods
imul
push
lds
sbb
cwde
jns
jl
sbb
sub
(bad)
lods
sub
sbb
test
cmp
not
fld
call
in
into
pop
iret
cmp
inc
sbb
cld
xchg
stos
or
jle
fmul
pop
mov
mov
jbe
sub
jno
lods
imul
push
adc
push
dec
pop
xchg
aaa
lods
push
je
xor
stos
sub
push
adc
sub
mov
in
xor
(bad)
sub
mov
xor
xor
cld
(bad)
ficomp
bound
xor
ins
jae
pop
mov
jno
mov
xor
ins
fldcw
adc
retf
add
gs
adc
pushf
enter
cmc
jne
rcl
das
scas
sbb
fnstsw
mov
das
lds
mov
mov
dec
out
add
fsubrp
jbe
ins
cmp
es
mov
cs
dec
in
mov
daa
call
pop
mov
xor
rcl
mov
sbb
mov
push
xchg
(bad)
pop
or
scas
outs
add
mov
pop
dec
xchg
adc
jmp
and
jg
cmp
mov
popf
jo
inc
neg
lahf
adc
lods
lea
and
add
lea
mov
out
test
ja
or
lahf
or
cmc
or
push
jge
mul
cwde
push
dec
hlt
je
test
xlat
(bad)
mov
lock
inc
in
ss
into
pop
push
test
fmul
cwde
(bad)
add
mov
xchg
add
jo
xchg
pop
push
push
in
loope
cmps
js
add
and
lods
jle
xor
shl
(bad)
inc
xchg
push
(bad)
mov
jns
mov
sub
xchg
dec
xor
dec
test
fistp
mov
add
or
(bad)
jl
pop
push
xchg
hlt
mov
aaa
cmp
cli
pop
mov
jle
adc
out
call
aaa
es
jecxz
imul
ja
mov
pop
and
or
inc
dec
dec
mul
mov
sub
dec
in
and
pusha
retf
movs
or
jmp
add
in
sahf
jmp
fs
pop
repnz
leave
pop
shr
arpl
cmp
cmp
(bad)
push
push
imul
mov
sbb
and
(bad)
push
out
jno
dec
mov
(bad)
cmc
in
fwait
inc
scas
mov
and
cmps
fwait
mov
mov
xor
add
and
pushf
xchg
aad
inc
das
mov
mov
inc
cmp
mov
outs
icebp
dec
xchg
test
adc
daa
and
fwait
xor
pop
dec
xchg
pop
jnp
fld
jns
mov
jnp
clc
ss
mov
pop
js
ins
jecxz
lock
sbb
lock
fstp
push
int
(bad)
rcr
int
xlat
ja
popa
hlt
in
jno
(bad)
jmp
fld
push
mov
je
fnstcw
sub
(bad)
mov
iret
mov
loop
xor
bound
jne
xor
cs
scas
ret
mov
inc
add
clc
cli
add
cmps
jl
out
fmul
xor
jmp
data16
or
pop
loopne
es
push
out
or
cmps
cli
cmps
repnz
vandps
lods
nop
mov
dec
std
inc
pop
pop
(bad)
inc
jl
xchg
fwait
dec
je
pusha
sbb
jo
int
imul
jge
ja
jle
cmp
lds
or
stc
lahf
popa
psrlw
std
sub
rcl
jbe
aad
cmp
pusha
push
cmc
stc
leave
retf
sub
xor
jmp
neg
jmp
push
rcl
nop
sub
rcr
ja
inc
outs
sbb
sub
pop
fwait
(bad)
sub
fisubr
add
adc
int3
sbb
push
mov
and
cdq
lods
mov
les
popf
inc
mov
pop
mov
inc
push
and
xchg
inc
and
(bad)
daa
sub
pop
mov
pop
cmp
cmp
call
mov
xor
out
fisubr
or
call
push
out
cmp
mov
pop
adc
adc
lahf
push
xchg
inc
sti
stos
mul
mov
push
pop
xchg
jmp
idiv
jns
mov
push
or
and
fiadd
push
pop
inc
mov
jmp
and
ds
test
or
xchg
out
inc
adc
daa
daa
adc
dec
ds
(bad)
pop
sub
cmps
push
lods
or
or
pop
pop
in
pop
xchg
dec
jecxz
ret
(bad)
popa
lods
neg
ret
jecxz
les
cmp
jmp
ret
add
in
ficomp
stos
lods
dec
inc
call
cs
mov
test
cmc
stc
scas
outs
dec
push
cdq
pop
call
mov
dec
cmp
or
mov
js
retf
sub
push
test
jl
lock
or
bound
fsubr
pop
push
mov
addr16
(bad)
jmp
xor
jns
cdq
sbb
cmps
loope
and
inc
push
mov
sahf
mov
lock
std
in
xchg
neg
test
sbb
push
in
pop
sub
mov
aam
xchg
fadd
mov
daa
mov
stos
push
retf
fsubr
test
push
sbb
jp
cmp
jge
inc
adc
push
ret
mov
ja
retf
dec
cmp
push
sub
jo
pop
jb
jmp
scas
xlat
(bad)
loop
add
xor
iret
call
mov
std
and
data16
jmp
sub
pop
push
xchg
(bad)
clc
push
rol
mov
ret
mov
sbb
pop
push
sti
iret
dec
xchg
repz
out
pop
xchg
dec
data16
mov
data16
imul
mov
out
shl
xchg
std
lock
jp
lods
test
pop
das
std
cmp
adc
outs
lea
add
cmps
fiadd
int
and
(bad)
adc
xchg
fucom
rol
jae
and
xchg
mov
fiadd
dec
push
xchg
inc
out
or
out
jno
mov
movs
hlt
call
push
aam
xchg
sub
add
into
adc
ds
std
xor
ins
aad
mov
or
inc
popa
outs
(bad)
lods
mov
hlt
les
das
ret
inc
xor
dec
cmp
jp
cmc
scas
mov
cmp
xchg
test
inc
mov
in
inc
scas
adc
sub
test
(bad)
out
dec
pop
jno
outs
jne
fdivp
in
push
(bad)
cmc
xor
sbb
popa
fs
cmp
or
mov
or
add
es
nop
je
ja
xchg
je
(bad)
cld
pop
dec
pushf
mov
jmp
(bad)
clc
ret
or
push
fimul
xlat
int3
pop
dec
nop
mov
cli
sar
sbb
pop
(bad)
mov
pop
imul
pop
cmp
dec
movs
mov
mov
fdiv
push
and
or
dec
mov
sbb
inc
mov
mov
popf
shl
movs
jle
(bad)
mov
pop
inc
pop
mov
pop
pop
inc
push
cmp
push
pop
daa
mov
call
pop
xchg
add
xor
sbb
fidivr
add
aam
push
xchg
pop
int
adc
sub
sahf
arpl
jb
lea
mov
les
inc
sbb
pop
ret
std
sbb
stos
mov
push
mov
pop
fs
jl
sub
ret
dec
cdq
add
enter
inc
inc
jno
or
push
mov
pushf
les
lock
push
jae
and
cwde
pushf
nop
mov
shr
mov
or
xlat
and
xor
jmp
in
pop
ret
gs
push
and
popa
inc
push
(bad)
in
or
jecxz
dec
(bad)
ins
or
sbb
mov
ror
xchg
inc
hlt
test
into
push
inc
xchg
mov
xchg
push
sahf
imul
pop
mov
inc
out
lock
cld
cmp
aam
and
lods
loop
push
mov
push
mov
lahf
sub
push
repz
ds
(bad)
xlat
pop
(bad)
inc
adc
inc
ret
inc
mov
fxch
dec
xor
daa
(bad)
ss
movs
gs
mov
xchg
push
imul
out
adc
pop
xor
xchg
pop
lods
inc
mov
adc
or
adc
xor
(bad)
xor
mov
mov
rcr
xor
xor
jle
sbb
sbb
pushf
jmp
xor
dec
sub
fisubr
cwde
or
gs
aam
mov
add
adc
sbb
movups
sahf
icebp
cmp
loopne
add
jmp
add
fnstsw
and
cmp
mov
pop
(bad)
push
adc
adc
adc
loopne
inc
mov
add
cwde
hlt
cmp
sbb
rcr
adc
call
stc
cs
or
adc
retf
out
lock
mov
ror
loopne
int3
xchg
add
jb
jp
stc
mov
sbb
(bad)
data16
pop
mov
daa
push
or
jno
jbe
mov
mov
std
outs
sahf
imul
call
sub
sbb
ret
loopne
and
adc
pop
inc
xchg
push
test
jmp
loop
add
push
cmp
stos
mov
pop
push
sbb
ret
mov
pusha
in
ror
ror
sub
lldt
ficomp
aam
push
jns
mov
aad
xor
sbb
(bad)
xchg
inc
mov
and
dec
into
pop
pop
push
push
adc
movs
dec
sub
pop
ficom
xor
in
add
sbb
enter
in
cdq
jmp
mov
out
adc
or
in
(bad)
rol
dec
js
les
dec
xchg
mov
aad
mov
mov
push
call
mov
lods
and
pop
xor
neg
stos
pushw
bound
inc
adc
popf
or
adc
xchg
or
adc
inc
cmps
ja
cmc
loope
movs
xor
inc
pop
add
xor
xor
sti
push
js
ins
fcom
sahf
mov
test
test
jmp
pop
xchg
hlt
int
jb
(bad)
int3
jge
daa
cmp
cmp
clc
lahf
in
es
and
call
out
sti
fsubr
or
adc
push
inc
sub
sbb
cld
ja
jb
pop
stc
imul
xrelease
data16
jmp
push
out
pop
adc
cld
call
stos
rdmsr
push
stos
push
sbb
loopne
jbe
push
cmp
mov
cmp
xor
xchg
stc
call
add
popf
retf
sub
dec
fs
push
sub
call
icebp
gs
rdtsc
cwde
pop
mov
push
cmp
out
shl
mov
retf
dec
add
mov
dec
jl
add
test
imul
jae
mov
dec
xchg
mov
pop
push
daa
xchg
mov
xchg
mov
das
jns
nop
or
adc
test
fadd
sub
inc
test
add
jge
add
ror
shl
daa
mov
or
popf
mov
dec
pop
dec
(bad)
cmp
daa
mov
push
pusha
std
popa
aaa
push
neg
and
int
adc
sar
push
es
jg
arpl
setns
ds
add
jmp
les
mov
mov
repz
mov
stos
mov
(bad)
xlat
mov
push
xchg
movs
test
xor
icebp
push
pop
scas
mov
pop
ins
fnstsw
out
(bad)
test
mov
add
add
jecxz
pop
(bad)
out
push
test
test
enter
jp
sti
inc
push
cmp
adc
(bad)
lahf
push
fisub
in
pop
adc
cmp
icebp
je
pushf
dec
adc
fwait
jb
pop
ss
add
mov
out
fcmovne
push
outs
or
pop
rcr
test
stos
mov
inc
das
sbb
in
inc
rcr
iret
mov
sti
pop
sub
aad
add
and
pop
mov
sahf
call
rcl
lds
sahf
jp
jmp
les
outs
arpl
outs
inc
(bad)
mov
adc
mov
cmp
and
lds
jp
sub
jle
enter
push
dec
xor
(bad)
daa
cli
inc
mov
je
xor
dec
fild
dec
out
pop
fstp
mov
inc
or
sbb
lods
pop
enter
xchg
cwde
push
or
dec
xchg
sbb
cli
std
jb
inc
or
cmp
mov
mov
dec
in
mov
adc
jbe
in
cmc
and
xor
outs
inc
or
cmps
(bad)
push
cmps
sahf
xchg
in
pop
sbb
idiv
pop
int
out
xchg
ins
popa
jmp
fidivr
xor
mov
out
push
(bad)
test
adc
push
pop
adc
jbe
clc
sahf
add
in
and
int3
aam
dec
jmp
pop
cmp
adc
jecxz
mov
das
out
xor
mov
xor
ja
sub
pop
pushf
pop
mov
adc
xor
or
jns
inc
dec
mov
es
repnz
or
sub
addr16
adc
stos
mov
loope
xchg
lea
adc
vandps
aas
cmp
pop
mov
inc
nop
mul
xchg
popf
and
mov
mov
lods
addr16
into
pop
inc
sub
pop
cmp
dec
xor
stos
add
int
in
or
outs
scas
add
cmps
or
(bad)
sti
retf
add
dec
lods
popa
ret
je
ins
xchg
ret
test
sbb
jbe
ret
arpl
clc
pusha
dec
pop
out
data16
ja
shl
jns
fbstp
push
fs
scas
shr
in
pop
retf
sbb
addr16
shr
push
or
fist
jmp
(bad)
cmps
outs
ffreep
pop
pop
and
mov
mov
pop
and
jno
push
xor
jmp
aam
hlt
mov
test
cmp
repnz
in
pop
dec
leave
push
aaa
lods
cwde
mov
xor
jp
aaa
and
push
not
aaa
lahf
pop
dec
enter
ror
ins
jne
arpl
ret
jb
lock
add
push
add
jp
out
mov
mov
sbb
retf
and
adc
cmp
inc
jb
mov
or
neg
push
xor
dec
mov
mov
xlat
test
mov
push
add
pusha
and
repz
pop
rol
xchg
adc
neg
jb
mov
push
imul
hlt
call
sbb
mov
xchg
jmp
adc
xor
or
jmp
mov
(bad)
ror
cli
add
fstp
xchg
mov
or
mov
outs
cmp
or
ins
aad
sub
scas
int
pusha
add
(bad)
mov
rcl
adc
cdq
push
pusha
push
and
jae
not
mov
cld
into
ins
leave
push
cmps
add
sahf
gs
in
mov
clc
or
cmp
popf
mov
mov
pop
add
sub
jg
into
and
leave
mov
out
out
fidivr
lock
mov
add
je
cmc
out
and
add
inc
bound
sbb
xor
repz
mov
cmp
cdq
add
pop
push
cmp
js
aaa
add
repz
jbe
outs
test
xchg
add
mov
js
fsubr
xchg
rol
loope
out
in
daa
ret
xor
add
addr16
scas
out
cmp
cmps
fdiv
or
push
push
fadd
inc
adc
and
mov
mov
outs
xchg
push
pushf
inc
call
shr
(bad)
je
add
dec
pop
mov
jmp
(bad)
gs
adc
xor
pushf
sar
je
and
and
inc
sbb
pop
pop
cmp
xchg
sub
daa
sbb
mov
scas
popa
fiadd
into
sbb
mov
cmp
(bad)
push
fnstenv
inc
sub
pop
repz
sahf
xor
push
mov
jno
retf
ss
out
mov
sbb
int
(bad)
xchg
nop
rcr
idiv
mov
or
les
mov
jge
arpl
inc
cmc
enter
dec
fucompp
ss
xlat
idiv
mov
push
adc
mov
in
lahf
scas
inc
gs
aam
jmp
cmp
data16
cmps
adc
ds
out
add
sbb
jge
sub
xor
dec
or
jns
dec
shl
jae
icebp
popf
mov
movs
add
test
cmp
loope
imul
mov
and
add
jnp
jmp
pushf
adc
adc
ret
aam
les
out
pop
adc
(bad)
mov
mov
lds
in
lahf
movs
pop
jns
fnstsw
add
lock
pusha
int
in
jmp
push
push
or
add
jg
adc
pusha
xor
dec
ss
mov
mov
cld
stos
outs
imul
mov
ins
mov
mov
js
icebp
and
xchg
shl
cli
mov
outs
mov
dec
mov
jbe
jle
pop
add
adc
stc
mov
shl
xor
xchg
ins
(bad)
data16
push
mov
dec
jb
iretw
arpl
mov
(bad)
mov
and
push
xchg
ins
int3
pop
jae
push
cmps
cmps
out
cdq
push
adc
lds
mov
movs
jne
sbb
sbb
es
add
mov
sub
xchg
sub
neg
dec
js
es
push
test
mov
shr
push
mov
cmc
cmp
mov
pop
or
or
xchg
lods
jae
push
xchg
arpl
sbb
jle
stos
mov
xchg
adc
jb
mov
xchg
mov
xchg
sbb
bound
fsubr
dec
and
mov
loope
inc
in
dec
sub
and
mov
mov
iret
push
sub
scas
push
lahf
mov
retf
inc
gs
scas
push
fisttp
cmp
fsubr
or
cs
inc
out
push
rcr
(bad)
int
out
xor
das
ret
pop
movs
ret
cmp
(bad)
pop
mov
fdivr
xor
jl
out
sub
js
sub
jo
retf
and
xor
cdq
movs
nop
dec
mov
outs
(bad)
movs
xor
adc
push
test
mul
push
sub
push
mov
jnp
test
iret
retf
add
popf
xchg
inc
sub
jge
push
ret
into
rcr
hlt
pop
cmp
pop
mov
push
dec
(bad)
out
repz
outs
pushf
fsubr
dec
pop
imul
pop
cwde
or
xchg
mov
mov
hlt
pop
pusha
nop
mov
movs
ja
pop
mov
sub
stos
xchg
stc
fsub
mov
fidiv
lock
add
sbb
sub
push
cli
mov
lock
dec
(bad)
push
iret
add
fldcw
les
jb
inc
inc
jmp
add
pop
sbb
mov
xor
ds
outs
aad
lods
and
mov
sbb
ins
mov
sub
or
jg
js
ds
pusha
inc
(bad)
jbe
push
test
clc
or
mov
or
jne
rol
inc
lods
push
retf
pusha
clc
push
arpl
pushf
and
test
and
add
stos
jne
fstp
and
cmp
sbb
mov
rcl
call
mov
in
ins
stos
es
jb
mov
adc
bnd
inc
pop
clc
adc
add
mov
test
loop
and
mov
bound
jns
ins
and
cmp
xor
and
sbb
stos
rcr
jle
test
sti
dec
fistp
repz
mov
pusha
cmp
add
xor
nop
mov
cmps
shl
adc
imul
sub
test
iret
dec
popa
aaa
jno
xor
popa
movs
lods
aas
sub
sbb
(bad)
fld
inc
xchg
cwde
and
sub
jp
outs
push
les
cmp
xor
inc
pop
call
and
nop
sub
inc
jge
fsubr
mov
iret
mov
jns
test
and
dec
push
sub
xchg
push
pop
sub
dec
mov
pushf
cwde
js
add
push
pop
adc
push
mov
dec
push
mov
jns
sbb
mov
pop
in
std
ror
out
mov
std
or
mov
and
cdq
and
dec
fucomp
pop
inc
push
add
ja
or
aas
add
ins
xor
lock
sbb
arpl
hlt
scas
jbe
enter
mov
pusha
inc
adc
test
jno
push
mov
cmp
and
fnstsw
mov
gs
aaa
sar
xor
and
imul
mov
das
xor
ins
push
cmp
sahf
and
xchg
sub
add
sbb
push
xor
in
mov
jo
xor
adc
or
dec
jne
sub
pop
push
out
fsub
fcom
xor
in
sbb
mov
aam
repz
push
mov
iret
cld
pop
fs
ss
call
sbb
dec
shl
and
loop
test
mov
pop
xor
cwde
mov
mov
pop
cmp
icebp
mov
les
into
jle
js
sbb
ds
push
in
cmp
jnp
dec
jnp
icebp
out
pop
pop
std
dec
stos
repnz
cli
ret
dec
std
push
mov
xor
push
jb
jle
sub
add
loop
xchg
xor
or
int3
aad
jp
test
jge
adc
mov
inc
inc
lds
xor
jo
xor
push
dec
call
mov
cmp
mov
(bad)
mov
add
or
stc
bound
jno
cmps
cmp
fimul
dec
add
outs
sahf
movs
inc
xchg
pop
bound
pop
jp
sbb
push
sub
inc
adc
mov
pop
pop
adc
jb
shl
rol
push
test
cmp
push
mov
xchg
sbb
dec
push
mov
test
push
sub
popf
cmps
cli
push
cmps
xlat
inc
fld
and
pop
or
lea
repnz
test
(bad)
or
bound
aam
xor
cmps
mov
mov
in
push
xor
(bad)
int3
repnz
fidivr
mov
bound
sub
mov
aam
jnp
push
or
add
jle
add
sbb
lea
and
cdq
(bad)
dec
mov
adc
or
inc
mov
xchg
and
add
inc
test
xor
mov
addr16
ja
jnp
push
xchg
jae
push
in
pop
mov
xchg
push
cmp
mov
pop
mov
lahf
scas
inc
sbb
outs
mov
movs
dec
(bad)
lock
jnp
ins
xchg
shl
xor
sti
fs
sub
popf
mov
cmp
jg
rol
xor
stos
ret
mov
test
retf
pop
lods
and
add
xchg
jb
jns
daa
in
xchg
xor
cmp
add
cmp
pop
stc
repnz
in
in
jbe
adc
ds
adc
pushf
aam
xchg
jecxz
push
pop
repnz
mov
rol
test
jbe
inc
cdq
inc
xchg
lock
outs
out
stos
imul
and
ins
lea
pop
iret
mov
lds
push
(bad)
fs
mov
sbb
xor
cmp
(bad)
stos
mov
mov
adc
mov
push
ss
push
scas
call
jle
add
sub
aas
data16
mov
in
out
lods
xchg
mov
mov
loop
pusha
mov
ds
test
add
or
inc
cmp
or
into
ret
jg
and
mov
clc
pop
in
cmps
movs
outs
es
cmp
faddp
js
cld
movs
into
push
fidivr
push
ds
add
mov
jp
and
pop
mov
adc
imul
sbb
mov
outs
cmp
jae
and
sbb
jo
mov
ds
out
shr
mov
popa
add
jl
ds
mov
hlt
sbb
or
fisub
sar
mov
jle
sar
push
xchg
jmp
retf
outs
ret
mov
out
mov
addr16
sub
rol
xchg
je
lock
repz
jmp
repz
cmp
push
add
cwde
sti
int3
fadd
cmp
and
clc
scas
jb
xchg
xor
pop
movs
xchg
iret
xor
fldenv
xchg
and
(bad)
mov
das
cdq
xor
sbb
add
jmp
popa
jb
cmp
mov
mov
mov
jl
es
add
xor
xor
fisub
add
jmp
pop
xor
push
data16
xchg
sbb
(bad)
movs
shr
in
xor
aam
repnz
xchg
je
mov
repnz
mov
or
inc
loopne
stos
inc
fwait
out
xor
nop
cmp
pop
sbb
shr
loop
mov
imul
stos
cmps
bound
mov
adc
add
push
xchg
sub
mov
xchg
dec
adc
cli
in
sub
xlat
jp
mov
xchg
loop
outs
inc
outs
inc
test
add
mov
sahf
aas
adc
cmp
add
jp
mov
not
test
lea
xchg
push
arpl
cwde
mov
pop
sub
mov
cmp
or
movs
or
jne
icebp
icebp
sbb
cmps
xor
sbb
mov
sub
in
daa
add
(bad)
mov
retf
add
(bad)
jp
adc
int3
mov
movs
xor
(bad)
jp
mov
(bad)
sbb
sahf
ficom
dec
mov
sub
inc
int
push
mov
jg
or
jl
shl
mov
jp
mov
ret
iret
dec
(bad)
jmp
dec
retf
add
(bad)
les
mov
popf
xchg
mov
add
adc
xchg
cmp
push
ins
dec
adc
stos
xor
stos
push
out
jo
jns
loop
push
jmp
jmp
and
addr16
inc
dec
jp
dec
inc
daa
loop
mov
cmp
test
pushf
push
jne
jo
push
or
jmp
popa
std
jns
jmp
mov
or
pop
test
shr
xor
push
fsubr
je
mov
iret
jmp
mov
mov
inc
mov
test
lahf
pop
nop
pop
mov
xor
sar
xor
icebp
shl
ss
cmc
scas
(bad)
adc
push
in
scas
aaa
mov
add
rol
ss
sbb
jle
sbb
xchg
and
push
dec
pop
cmc
mov
fdiv
(bad)
dec
movs
adc
out
es
in
in
call
pop
mov
xchg
push
and
inc
das
dec
faddp
das
arpl
icebp
jmp
mov
sbb
and
cld
push
adc
dec
aas
xor
adc
in
pop
and
into
sbb
gs
push
movs
sbb
add
push
xchg
and
xor
dec
loopne
clc
dec
push
xor
push
sbb
data16
cmp
adc
or
out
jns
lods
mov
sbb
inc
jns
mov
sub
push
xchg
stos
int3
jns
mov
xor
popf
call
(bad)
mov
jmp
dec
mov
xchg
sbb
jno
xchg
or
outs
sub
xlat
outs
ds
dec
movs
stos
jnp
ret
in
ins
push
mov
jge
dec
push
outs
cmp
test
sbb
mov
int
adc
jae
dec
inc
xor
and
push
pop
out
or
adc
stc
or
je
mov
dec
cld
push
xchg
pop
loopne
fdivrp
stos
cwde
push
jle
push
push
ret
dec
or
mov
push
daa
sbb
push
sbb
inc
imul
in
xchg
fsincos
movs
pop
add
int
mov
xor
mov
xor
mov
ret
pop
cli
add
fnstenv
rcl
xchg
stos
or
loopne
sub
(bad)
xchg
inc
(bad)
repnz
pop
mov
and
hlt
inc
pop
sbb
call
mov
ret
rcr
dec
cmp
shl
add
sub
xchg
push
push
cs
pushf
cmp
sbb
xchg
xchg
shl
sub
jge
lea
jo
jecxz
pop
or
cmp
lock
inc
mov
or
push
sahf
stos
ds
mov
in
adc
or
lea
jl
iret
xor
xchg
fnsave
push
dec
xlat
or
sub
jnp
mov
xchg
pop
push
mov
mov
mov
jg
cmp
mov
pop
mov
pusha
rcr
in
(bad)
int3
mov
and
lods
and
repnz
cmc
retf
cs
push
nop
or
push
and
inc
mov
(bad)
mov
rol
stos
and
xor
adc
cmp
xor
rol
jno
stos
lahf
sbb
or
mov
pop
in
lahf
jbe
(bad)
sbb
leave
gs
sub
xor
or
(bad)
cli
push
push
lds
add
sbb
lods
mov
adc
and
mov
cmp
sti
stc
repz
imul
shl
retf
pushf
and
out
mov
sub
pop
sbb
nop
pop
fist
sbb
out
shl
call
lea
(bad)
cmp
or
ret
jmp
dec
std
xlat
daa
mov
psrad
sub
loope
(bad)
mov
je
jae
mov
nop
jbe
stos
dec
mov
retf
pop
(bad)
add
das
mov
adc
xchg
movs
mov
retf
fsubr
inc
inc
mov
mov
sbb
pop
push
push
es
sub
push
mov
xlat
mov
popa
inc
and
mov
scas
movs
lahf
pop
and
repnz
std
xor
xchg
inc
add
lods
jg
push
jne
pop
cwde
cmc
and
int3
push
enter
mul
push
loop
outs
inc
dec
jne
aad
xlat
jo
adc
push
int3
sub
and
das
scas
adc
clc
(bad)
call
div
mov
js
lds
bound
retf
in
bound
mov
mov
inc
cdq
shr
jl
repz
ror
(bad)
xchg
dec
xor
ficom
ja
gs
mov
jl
repz
mov
add
cmc
call
jp
sub
mov
lds
and
and
jecxz
imul
push
adc
jb
push
mov
mov
rcl
retf
or
retf
sub
mov
push
mov
and
jns
jmp
repz
xchg
or
lods
or
or
mov
or
mov
and
ins
and
pop
(bad)
jecxz
sub
popf
clc
call
sar
sub
adc
jmp
mov
mov
push
mov
stos
dec
popf
aaa
inc
inc
inc
sti
arpl
lock
mov
fisttp
adc
scas
add
popa
jge
jno
jge
adc
mov
ja
out
jno
stos
jmp
outs
pop
(bad)
push
js
xchg
aas
mov
mov
jge
into
mov
fwait
icebp
jns
pushf
out
adc
mov
cmps
cmc
pop
xchg
inc
or
or
cmp
or
sahf
ret
stc
pop
jb
cdq
mov
in
jmp
or
xor
jae
iret
mov
in
mov
jge
mov
dec
rol
xchg
stos
mov
jl
dec
inc
fst
test
adc
mov
add
xor
push
sub
jge
cmp
bound
outs
jl
leave
call
xchg
jns
sar
mov
sbb
lods
add
dec
push
cmp
mov
adc
mov
mov
xchg
popf
cmps
push
jmp
sbb
or
jmp
dec
dec
xchg
jne
call
mov
stc
clc
das
cwde
mov
mov
cmp
fstp
and
push
push
pop
sti
test
int3
pop
mov
pusha
xor
sbb
add
xor
push
pop
push
repnz
daa
mov
cli
mov
imul
jmp
enter
sbb
mov
jns
out
mov
movs
cmp
and
stos
gs
pop
xor
xchg
test
inc
nop
mov
lods
lahf
clc
out
ins
aaa
pop
inc
mov
and
and
sahf
icebp
retf
sub
push
adc
iret
ds
mov
(bad)
mov
rcr
int
mov
dec
(bad)
mul
cmp
scas
ror
sti
shr
add
jo
in
or
in
add
hlt
dec
int
push
inc
xchg
jp
add
sub
into
add
ja
(bad)
test
mov
push
pop
xchg
es
and
cmps
mov
pop
ins
aas
lds
push
dec
loop
jge
xor
ror
sar
sub
mov
adc
mov
retf
or
xchg
sahf
lods
inc
adc
xchg
sbb
jle
hlt
mov
add
xchg
mov
jne
mov
or
and
pusha
ins
cmp
jl
out
adc
pop
sbb
rol
inc
pop
mov
aaa
lock
mov
inc
mov
adc
ins
mov
pop
jns
pop
int3
pop
lock
cmp
pushf
adc
cmp
inc
retf
xchg
rcr
mov
sbb
cli
xchg
popw
and
xor
bound
ja
retf
(bad)
pop
pop
push
pop
push
mov
retf
popf
nop
sbb
cli
bound
aas
in
imul
fistp
and
lds
push
aaa
cmp
or
adc
ins
mov
and
(bad)
xor
dec
(bad)
push
dec
dec
add
cmps
cmps
in
push
jmp
push
inc
push
(bad)
into
rcr
gs
aam
into
fldcw
(bad)
dec
pop
push
sub
cdq
mov
mov
wrmsr
(bad)
mov
popa
lea
data16
sub
jl
mov
sub
mov
mov
jae
jmp
inc
into
push
int
lahf
mov
arpl
and
adc
repnz
fsubr
pop
mov
xor
lods
lods
sbb
jbe
lods
jb
leave
pop
sbb
in
les
gs
je
lea
es
out
sub
in
adc
or
fcomip
mov
iret
and
lea
out
shr
movs
add
xor
dec
mov
(bad)
and
xlat
inc
rol
call
pop
loopne
cld
mov
cdq
shl
adc
not
adc
mov
lds
mov
mov
adc
inc
iret
lahf
xchg
fdivr
sbb
add
push
rol
inc
and
sbb
mov
(bad)
mov
jle
or
shl
inc
inc
test
push
or
dec
xor
stos
movs
and
or
and
mov
and
js
mov
inc
mov
jnp
mov
mov
or
stos
repz
push
nop
in
cmp
daa
(bad)
pop
jae
loop
call
push
dec
aas
sub
jb
nop
fistp
dec
pop
loope
mov
mov
push
js
xchg
inc
ds
cmp
jp
test
xor
(bad)
or
cmp
dec
and
fimul
nop
or
cmp
sbb
imul
or
fist
int3
iret
adc
inc
inc
xor
stos
icebp
mov
mov
push
or
cs
nop
pushf
int3
mov
stc
xor
int3
int3
adc
enter
mov
fmul
inc
ds
es
test
aas
jne
movs
movs
dec
pop
fs
cdq
xchg
cmp
repnz
mov
ins
and
cmps
push
addr16
pop
cmp
xlat
push
pop
adc
sbb
or
(bad)
sub
push
aad
push
pushw
pop
jno
adc
jge
sbb
inc
cmp
push
pop
enter
cmp
outs
stos
cmc
xchg
movs
(bad)
ins
or
add
addr16
popf
push
out
sbb
rol
inc
sti
(bad)
pop
std
and
shr
dec
mov
call
xchg
test
hlt
jp
mov
aaa
rcl
scas
loopne
pop
aam
xchg
xchg
cmp
fisub
jb
dec
cmp
xchg
or
popa
mov
jecxz
mov
mov
(bad)
lods
xchg
inc
adc
mov
jnp
or
iret
pop
(bad)
push
popa
mov
push
je
jnp
aas
xor
shr
xchg
mov
jg
adc
sbb
arpl
inc
test
call
dec
(bad)
jg
sar
xor
dec
xor
cmp
dec
adc
mov
std
sub
sub
mov
fisttp
and
sahf
sti
repnz
xchg
add
enter
(bad)
shl
inc
xchg
hlt
xor
std
jmp
fsubr
sub
(bad)
sub
mov
adc
inc
fs
movs
lods
mov
and
mov
inc
jecxz
pop
sar
mov
mov
mov
inc
or
inc
push
sbb
mov
xchg
mov
cmp
dec
dec
jnp
aam
jge
retf
cmp
xor
bound
mov
push
shr
fwait
sahf
scas
mov
(bad)
xor
cld
xor
(bad)
push
push
mov
outs
jge
pop
mov
(bad)
pusha
rcl
mov
mov
sar
xor
loopne
pop
xor
popa
je
pop
test
add
xchg
push
shl
(bad)
xor
push
imul
pop
pushf
aam
jmp
xor
in
mov
shl
(bad)
cli
jecxz
mov
mov
aas
xor
test
shl
mov
sub
xor
push
pop
das
shl
xor
nop
mov
add
ins
ins
cmc
inc
ins
int
xor
jl
call
and
aam
fidivr
push
adc
mov
mov
push
outs
in
pusha
xor
and
or
movs
adc
inc
rcr
test
cmp
aaa
sbb
push
mov
jbe
repz
sub
or
out
jmp
mov
sub
cmp
sub
adc
mov
push
or
adc
mov
inc
or
retf
dec
jb
test
imul
inc
fisubr
jae
in
push
mov
dec
or
push
out
stos
out
jae
pusha
in
ds
push
inc
or
add
cmp
and
jecxz
push
or
rcr
xchg
jns
sub
jmp
xor
call
fld
(bad)
mov
fwait
inc
mov
and
ja
leave
nop
je
mov
daa
inc
(bad)
xchg
xlat
aas
mov
adc
mov
xchg
inc
iret
add
pop
xor
fld
sub
dec
cmc
pop
loop
test
inc
mov
das
mov
add
lods
push
xor
out
jmp
jnp
inc
(bad)
mov
mov
mov
jae
into
in
or
pop
mov
dec
and
dec
popf
bound
arpl
ret
or
add
and
xor
not
popf
(bad)
adc
xor
xchg
jns
scas
jecxz
cmp
mov
popa
xchg
cmc
and
pop
ja
mov
pop
adc
push
adc
out
scas
sbb
stc
adc
enter
dec
cmps
or
pop
jb
jl
sub
cmp
jb
sbb
es
fwait
mov
lahf
fbld
in
and
ror
xchg
push
xchg
mov
dec
rcr
out
mov
jne
lds
icebp
cwde
lods
inc
out
mul
jg
or
idiv
ret
adc
mov
or
aas
scas
pop
out
loopne
xchg
dec
add
(bad)
aam
lods
adc
repnz
xchg
bound
test
gs
cmp
ret
arpl
adc
icebp
daa
mov
jmp
cli
inc
lods
fstp
cmp
dec
xor
mov
xchg
cmps
cwde
outs
lds
pop
add
mov
popf
or
cmps
cmp
sbb
movs
or
pop
das
jae
add
sar
sti
ror
cmp
push
sbb
and
mov
jmp
pop
push
out
xchg
or
cmp
sti
cmp
cld
loope
sub
and
in
mov
fadd
jge
imul
jge
rcr
imul
ins
cmp
inc
(bad)
cmp
(bad)
(bad)
mov
adc
jbe
mov
cmps
pop
xchg
and
adc
ret
icebp
setno
jnp
(bad)
ins
les
movs
add
addr16
sbb
cmps
in
mov
sbb
clc
daa
hlt
jmp
cs
pop
stos
jg
setne
xor
sub
mov
daa
cmp
xchg
fs
sub
mov
pop
popa
cmp
stos
mov
dec
xchg
(bad)
(bad)
push
cs
jns
xchg
leave
jle
xchg
cmc
neg
outs
add
setne
add
inc
out
addr16
mov
pop
xor
sub
inc
mov
(bad)
hlt
das
daa
push
int
mov
mov
xchg
scas
std
mov
mov
fsincos
cli
stos
cmp
cmp
sub
mov
xchg
xor
outs
mov
cmp
mov
dec
ja
out
sub
pop
les
inc
or
dec
cld
fadd
push
fbstp
repz
(bad)
sahf
popa
movs
(bad)
fdiv
(bad)
mov
clc
sbb
jg
mov
into
rcl
mov
add
mov
xor
pusha
jo
stos
(bad)
retf
nop
cmc
inc
call
lea
outs
push
fisttp
dec
push
jg
rcr
add
out
fwait
stos
movs
call
test
out
sub
shl
jnp
repz
mov
cs
xor
dec
mov
dec
push
cmp
push
jge
lods
xchg
xlat
jp
xor
out
push
dec
test
dec
int3
xor
imul
mov
or
stos
cwde
pushf
mov
push
adc
call
mov
call
jmp
adc
ins
lods
mov
outs
cmps
xor
inc
pop
mov
jp
mov
mov
push
or
neg
in
dec
sbb
dec
adc
outs
idiv
fcomp
jl
mov
jecxz
cld
imul
les
rcl
mov
call
sbb
pop
inc
cmp
int
dec
inc
xchg
enter
adc
xor
jne
cmp
push
adc
or
xchg
mov
jmp
inc
or
iret
cmp
out
loope
sbb
mov
daa
shl
mov
push
dec
mov
and
in
fcomp
jge
(bad)
fidiv
push
adc
in
call
cdq
xor
outs
mov
cld
in
(bad)
in
call
hlt
mov
mov
lock
sahf
movs
ds
push
cmps
fmul
sbb
jge
mov
fiadd
(bad)
ficom
dec
dec
adc
sub
ja
pop
inc
fild
imul
out
ja
cld
clc
cs
mov
mov
icebp
mov
mov
mov
std
xchg
adc
mov
(bad)
push
push
mov
clc
in
xor
aas
mov
(bad)
dec
repnz
cmp
imul
sub
or
pop
push
sbb
dec
bound
mov
sub
mov
pop
jne
mov
lock
(bad)
lock
imul
push
sbb
mov
fld
pusha
iret
xchg
or
jnp
xchg
in
enter
fincstp
imul
mov
iret
dec
(bad)
xchg
mov
or
xor
or
mov
mov
mov
enter
outs
gs
and
push
push
cmp
push
movs
mov
inc
jp
out
int
call
enter
sbb
nop
jns
mov
ins
test
pop
adc
aas
push
shl
cmps
ja
les
xchg
jae
js
inc
cmp
aas
add
cli
xchg
(bad)
in
pusha
xchg
fcmovne
aas
movs
jg
sub
xchg
cdq
add
mov
rcl
stc
push
mov
mov
pop
xchg
pop
mov
xchg
adc
and
stos
add
jp
les
fs
fdiv
mov
mov
inc
jl
imul
sbb
rcl
test
test
add
nop
add
jnp
push
xor
lods
mov
fimul
mov
cmp
aad
push
stc
add
push
stc
push
nop
adc
lock
push
jmp
leave
pop
jle
push
pop
add
sub
mov
imul
movs
daa
sbb
inc
xor
neg
imul
dec
xor
in
aas
mov
pxor
sub
sahf
fwait
out
mov
dec
inc
jae
inc
or
inc
retf
ds
xor
in
adc
hlt
adc
mov
clc
sbb
lds
adc
sbb
adc
mov
test
cmp
mov
popf
aaa
sahf
movs
jbe
dec
sbb
add
fstp
loop
jo
pop
pop
retf
xchg
adc
dec
xchg
test
xlat
and
xor
jg
rcr
dec
inc
inc
pop
cld
jmp
cmp
in
push
sub
push
xor
pop
push
or
in
push
out
ds
jmp
sub
pop
out
add
pop
push
push
add
jb
xchg
inc
out
hlt
in
adc
xchg
sahf
inc
push
jl
mov
test
hlt
rol
out
scas
fdivr
jo
popa
and
jl
and
test
jae
sbb
scas
dec
xchg
outs
out
clc
xchg
imul
dec
cmp
and
dec
dec
xor
sub
dec
call
jl
movs
pop
sub
fldenv
and
gs
out
js
jecxz
test
jb
sbb
adc
lahf
loopne
mov
mov
push
sbb
imul
jns
mov
sbb
mov
mul
xor
(bad)
inc
mov
in
push
xor
test
cdq
fucomp
and
mov
mov
scas
das
mov
pusha
addr16
fdivr
fstp
sub
aam
push
or
pop
(bad)
sbb
adc
(bad)
rcl
mov
ja
inc
mov
jmp
lock
outs
xor
xlat
(bad)
sub
lods
sub
pop
pop
cld
bound
cmp
bound
es
lock
aaa
das
push
int
(bad)
(bad)
mov
clc
mov
lds
hlt
stos
pushf
mov
repz
repnz
adc
mov
adc
fadd
lods
dec
mov
ss
shl
dec
imul
mov
mov
es
mov
jb
inc
adc
adc
neg
push
int3
cdq
sbb
test
data16
pop
pop
jne
lock
xchg
jle
xchg
xchg
cmp
xchg
gs
in
scas
movs
ins
xor
cmp
sbb
je
sbb
or
(bad)
aas
or
inc
adc
xchg
aam
inc
mov
fcmovbe
jno
mov
das
add
xchg
mov
test
mov
sbb
xchg
dec
popfw
xchg
push
lahf
sbb
jle
les
sub
retf
cmp
and
add
adc
push
xchg
cld
push
sbb
dec
xor
test
arpl
call
es
shl
in
pop
jecxz
outs
mov
in
popf
enter
(bad)
shr
cmp
scas
xchg
mov
(bad)
xchg
int
in
outs
xor
push
mov
cmp
outs
jb
xor
dec
arpl
push
mov
pop
mov
(bad)
jmp
cmp
aad
mov
retf
pop
imul
mov
push
sahf
ins
lahf
inc
and
imul
sub
pop
cmp
cdq
jnp
fldenv
int
mov
mov
rcr
scas
push
inc
cmc
addr16
xchg
loope
repz
mov
sub
fs
loope
scas
pop
adc
shl
push
(bad)
nop
out
cmp
xchg
inc
popa
adc
std
inc
outs
int3
or
div
adc
jp
pop
gs
jmp
es
adc
out
inc
sub
mov
clc
gs
(bad)
or
inc
stc
(bad)
and
(bad)
movs
std
xchg
pop
and
inc
sub
scas
fcomp
pusha
add
mov
pusha
and
jl
pop
jns
xchg
xchg
hlt
outs
push
xchg
or
mov
mov
sub
(bad)
push
test
inc
imul
push
mov
cmps
imul
bound
dec
pop
repnz
pop
aad
sbb
jo
mov
js
xor
mov
mov
mov
mov
mov
imul
mov
setbe
dec
fst
test
sbb
push
pop
les
pushf
ins
js
jmp
push
dec
jbe
cmp
sub
jg
loop
call
sub
es
and
xchg
sbb
cmp
gs
movs
mov
leave
je
out
and
xchg
cmps
ins
cmps
mov
adc
outs
stos
stos
imul
stc
fcmovnb
call
fdiv
popa
jge
dec
lock
pusha
movs
and
test
sub
loop
mov
std
lods
(bad)
outs
lahf
and
out
lock
or
jmp
or
mov
test
mov
cmps
loop
mov
aas
mov
cli
add
push
mov
call
inc
sbb
sub
mov
mov
add
lods
mov
ja
mov
pop
loop
jmp
mov
cmp
push
sbb
mov
adc
pop
mov
inc
xchg
cld
pop
call
push
jno
ret
adc
add
loopne
or
arpl
cdq
adc
outs
add
jecxz
pop
xor
xlat
test
push
bound
xchg
fwait
xchg
push
dec
dec
mov
push
fistp
xor
and
retf
cwde
(bad)
jae
jmp
clc
mov
sub
mov
mov
icebp
jns
addr16
out
retf
dec
pop
shr
(bad)
(bad)
sbb
pop
aam
adc
dec
mov
gs
cmps
(bad)
mov
add
ds
mov
dec
jmp
mov
adc
sub
jg
mov
pop
and
and
mov
push
(bad)
lods
or
adc
inc
cmp
fwait
popf
rcr
inc
jne
sub
pop
imul
cdq
clc
call
add
xchg
pushaw
mov
leave
adc
adc
idiv
pop
xchg
aad
in
push
pop
addr16
addr16
dec
clc
dec
shl
dec
xor
bound
jnp
rcr
mov
(bad)
sub
push
push
jae
cmp
cmp
xor
mov
xor
cmp
push
cmp
fmul
int3
add
sbb
mov
adc
adc
pop
push
pushf
or
jae
mov
mov
pop
or
aam
lahf
int3
mov
js
mov
cld
out
scas
xor
pop
dec
je
int
cmp
push
dec
mov
or
push
and
pusha
call
jno
sbb
fisttp
pop
ret
jl
cmp
jbe
jecxz
inc
mov
jo
gs
pop
mov
xchg
loopne
xchg
push
xchg
cmp
out
test
and
lds
imul
fild
push
fdivr
shr
cmp
fcom
(bad)
scas
mov
ja
mov
dec
inc
xchg
aam
mov
add
dec
cld
pop
and
dec
jp
or
and
adc
xlat
fmul
jnp
add
ror
dec
jge
mov
retf
out
xchg
mov
mov
cmp
xchg
xchg
mov
shl
or
dec
or
call
sbb
scas
dec
pop
out
inc
leave
sbb
(bad)
pop
add
or
cmp
leave
daa
test
repnz
add
jmp
outs
cmp
push
xchg
cld
mov
xor
mov
and
fisttp
in
xor
jg
adc
out
stos
pusha
or
cdq
sti
leave
inc
push
mov
(bad)
xchg
pop
sbb
sbb
lea
or
mov
inc
mov
mov
movs
sbb
ffree
mov
mov
repz
pop
adc
pop
out
push
outs
jge
test
aas
jb
popf
stc
pushf
cs
lds
mov
push
cs
ror
jnp
jbe
sbb
add
cmp
aam
adc
les
mov
out
xlat
iret
fldcw
inc
or
test
push
aad
retf
sub
cdq
mov
neg
inc
retf
mov
enter
adc
push
cmp
mov
or
iret
add
xchg
cmp
add
push
into
adc
sahf
cmp
push
mov
test
(bad)
mov
adc
and
sub
mov
lods
sahf
pusha
(bad)
scas
inc
xchg
pop
mov
sbb
(bad)
or
pop
push
mov
inc
cld
and
push
leave
nop
jb
lock
or
outs
rol
popf
sub
fstp
shl
pop
mov
mov
test
stos
jmp
push
xchg
jb
inc
mov
lock
dec
add
push
lahf
jbe
dec
ret
or
mov
bound
(bad)
dec
sbb
sub
xchg
scas
ret
pusha
outs
xor
outs
inc
out
mov
fild
pop
and
inc
leave
fidiv
iret
retf
sbb
and
rcl
push
les
adc
add
cwde
and
jb
sbb
push
(bad)
retf
and
mov
sub
push
(bad)
in
push
sti
adc
and
jg
or
popa
and
pop
mov
fidiv
cmp
es
jp
dec
push
jmp
xchg
jmp
sar
inc
mov
les
mov
jno
xchg
inc
mov
inc
xor
push
out
cdq
ja
or
jmp
push
cmp
int3
ss
retf
jnp
sti
imul
cli
mov
je
jae
jb
mov
add
sbb
push
in
sbb
gs
in
cs
xchg
jecxz
pop
mov
int3
pop
add
mov
add
and
mov
inc
xor
or
in
(bad)
jmp
add
sub
test
or
loop
pop
push
push
stos
and
push
(bad)
imul
mov
(bad)
jp
shr
jns
inc
pop
and
test
dec
cdq
push
arpl
jne
xchg
mov
inc
push
mov
sub
aaa
mov
dec
scas
xor
shrd
pop
out
(bad)
loop
pop
fwait
test
call
jecxz
push
stos
inc
sub
outs
jne
add
mov
mov
cld
pop
pusha
cmp
in
mov
and
stc
push
mov
mov
xlat
pop
stos
adc
out
fldenv
push
sub
call
gs
ret
mov
lds
or
jmp
test
mov
jmp
(bad)
mov
cmc
xchg
mov
test
(bad)
jnp
out
ins
cli
and
adc
lea
mov
push
mov
aam
jle
jne
adc
test
ds
inc
sar
or
mov
lods
xchg
lahf
std
ror
mov
ret
push
stos
ss
fnstcw
mov
mov
loopne
sbb
sub
imul
inc
gs
adc
mov
mov
dec
fs
out
xlat
sbb
xor
out
into
aas
es
loope
popf
xchg
inc
push
xor
fwait
in
cmp
sub
jne
iret
pop
outs
pop
xor
outs
or
mov
xchg
sbb
js
push
xor
out
shr
ret
pop
mov
sbb
dec
loopne
dec
push
mov
fadd
sbb
stos
mov
arpl
(bad)
(bad)
shr
test
fisttp
dec
mov
shl
js
outs
out
icebp
and
mov
addr16
ins
cs
sbb
and
dec
sbb
push
sbb
into
(bad)
inc
xor
jl
pushf
leave
or
mov
mov
xor
sub
ins
jmp
pop
mov
cmp
xchg
cmp
test
std
and
mov
pop
xchg
sbb
adc
xchg
mov
mov
mov
xchg
mov
sub
jns
lea
sbb
xor
or
arpl
out
sub
or
mov
add
pop
or
test
jg
ror
js
daa
mov
int3
aad
add
xchg
sbb
add
jmp
jmp
les
jb
arpl
(bad)
push
std
div
aas
inc
cmp
fbstp
sub
adc
leave
push
out
sbb
xchg
sub
popa
mov
mov
lea
test
mov
scas
test
bound
jp
push
mov
xchg
(bad)
jnp
jne
pusha
mov
sti
leave
loop
hlt
outs
fsqrt
clc
sub
jno
cmp
add
cmp
xchg
icebp
xchg
sub
mov
ss
pop
dec
jbe
mov
ins
add
in
adc
jbe
(bad)
iret
bound
xor
jne
outs
jb
repz
movs
jbe
add
and
push
scas
test
and
pop
sahf
sbb
sub
int
jae
mov
pop
xor
ins
xor
imul
push
inc
push
repnz
mov
dec
xchg
and
jns
pop
inc
add
mov
adc
or
push
mov
xor
push
lods
mov
sti
mov
not
pop
repz
dec
push
mov
jo
test
(bad)
or
push
ins
inc
test
retf
cs
scas
mov
push
adc
mov
inc
mov
mov
out
xchg
hlt
daa
mov
mov
add
cmp
adc
push
mov
push
(bad)
fcom
cld
mov
es
in
test
cmp
sub
int3
and
nop
mov
mov
ja
lods
in
(bad)
ds
loopne
mov
inc
mov
xchg
xor
js
in
lds
(bad)
sub
mov
inc
push
int3
push
cmp
pop
frstor
jle
test
cmp
mov
or
test
and
pop
inc
inc
adc
jns
xor
stc
fwait
ja
lock
cmp
and
xor
inc
dec
cmp
adc
push
lods
and
mov
leave
sub
and
mov
in
jne
jb
cmp
test
les
or
repnz
enter
jnp
gs
xor
(bad)
mov
fisttp
(bad)
and
mov
mov
icebp
or
(bad)
xor
or
adc
mov
or
mov
in
sti
and
cmp
xor
fbstp
or
jne
pop
sbb
mov
sbb
mov
mov
(bad)
xor
fcmovne
outs
adc
sub
and
aam
retf
loope
bound
push
and
jo
mov
aad
jae
imul
xchg
xchg
sbb
push
ins
retf
push
dec
aaa
call
add
pushf
arpl
xchg
fwait
or
push
and
push
mov
sub
rol
pop
xlat
inc
or
jae
mov
mov
aas
xor
int3
xchg
cmp
cwde
inc
mov
sbb
mov
iret
add
call
push
movs
or
aaa
dec
call
mov
cli
nop
and
addr16
idiv
nop
adc
mov
aas
adc
rcl
aaa
mov
int
dec
leave
aas
mov
dec
ins
mov
stos
outs
imul
ret
cmp
sub
rcr
arpl
xchg
popf
inc
movs
(bad)
shr
and
in
es
or
retf
jnp
mov
cld
fsub
jl
(bad)
mov
not
in
xchg
daa
sti
sub
jae
push
(bad)
and
add
and
retf
je
pop
ss
rep
iret
nop
inc
push
pop
ror
(bad)
ret
inc
sub
test
out
jo
jge
pop
cdq
jns
add
out
add
inc
fld
jmp
or
xor
inc
js
iret
pop
das
xchg
test
mov
mov
dec
fiadd
or
ss
cld
out
enter
pop
cld
popf
mov
lea
inc
in
push
xchg
pop
jno
push
push
cwde
mov
or
xchg
clc
mov
add
inc
push
fimul
out
jmp
and
or
inc
bound
shr
cmp
gs
icebp
cld
xor
adc
or
inc
in
in
add
sahf
leave
jbe
cwde
jl
adc
inc
adc
push
cs
mov
in
cmp
call
mov
jmp
push
loopne
js
out
jp
(bad)
mov
(bad)
xchg
pop
ret
mov
jl
inc
loopne
call
loope
arpl
icebp
pop
ret
cld
dec
pop
inc
je
aas
cld
in
(bad)
addr16
rcr
adc
loopne
sbb
cld
sub
xchg
lds
push
retf
xchg
frndint
rcr
jmp
daa
mov
loop
leave
push
pop
sbb
cmp
mov
idiv
sar
mov
pop
cli
fwait
retf
pop
test
enter
scas
inc
adc
icebp
cmp
test
add
inc
sub
out
jl
stos
les
mov
sbb
push
mov
pop
ficom
mov
test
jmp
sub
xchg
mov
lea
mov
(bad)
jmp
(bad)
popa
sub
lock
dec
jecxz
push
int
and
lock
ja
pop
push
adc
mov
xor
mov
imul
(bad)
out
push
enter
mov
push
imul
shr
xchg
call
pop
push
jne
vsubss
fstp
arpl
or
xchg
sti
cmp
cli
pop
pop
xchg
imul
sub
sbb
cmp
pop
cmc
aaa
(bad)
repnz
jmp
xlat
adc
ret
add
cs
dec
jge
lahf
jle
xor
mov
std
loopne
add
stc
xor
dec
push
add
xor
lahf
pop
jo
(bad)
push
jmp
jle
fidiv
xchg
out
popa
neg
cdq
dec
sti
stc
pop
out
test
xor
(bad)
sub
(bad)
and
xor
test
sub
push
add
call
sub
jle
mov
jae
xor
into
push
jp
sahf
cmp
push
mov
out
jmp
es
and
mov
xor
dec
jbe
std
and
ss
cmp
sub
sbb
xchg
ret
fistp
dec
sbb
ja
ds
inc
cmc
ffree
test
dec
adc
inc
jge
test
and
mov
add
pop
inc
xchg
out
cdq
aas
jmp
(bad)
(bad)
aaa
aam
jmp
inc
xchg
fwait
shr
pop
cmp
paddq
in
push
sar
in
enter
and
enter
cli
cdq
in
xor
(bad)
inc
push
inc
lahf
add
shl
mov
imul
sbb
fisttp
sub
ins
cmp
pop
mov
mov
cmps
jp
jp
mov
lahf
dec
xor
cmp
adc
(bad)
xlat
bound
push
pop
inc
test
call
call
sbb
mov
ins
ins
push
out
adc
test
or
add
inc
pop
lds
imul
imul
fsub
xor
jl
push
(bad)
push
mov
repnz
jns
xchg
adc
sub
mov
inc
inc
adc
and
fs
mov
sub
dec
sbb
loop
inc
xor
push
loop
(bad)
(bad)
iret
(bad)
xchg
test
inc
cli
daa
ins
add
inc
mul
(bad)
sti
push
or
clc
adc
xchg
mov
push
in
jecxz
rol
inc
sbb
cmps
dec
popa
in
mov
xchg
int3
and
mov
sub
jne
sub
xchg
sbb
cmc
scas
cmps
dec
sti
ror
fild
fstp
call
ja
sti
mov
inc
in
jns
repz
nop
or
(bad)
dec
sbb
loope
cmp
pop
pop
push
or
pop
faddp
jno
inc
lds
ds
jge
cmp
ins
mov
mov
ds
(bad)
ss
test
cmp
pop
adc
push
add
jl
fldenv
and
xchg
sub
pop
inc
mov
pop
add
xchg
aaa
and
sbb
in
hlt
scas
sub
loope
mov
cdq
hlt
mov
aaa
in
mov
aaa
dec
movs
lahf
jle
and
cdq
popf
inc
sbb
cwde
(bad)
or
inc
int
pop
jae
lods
xor
sbb
es
inc
mov
push
enter
or
xor
and
pop
pop
scas
sbb
call
mul
cmps
fs
(bad)
(bad)
jecxz
sti
push
ja
icebp
push
ins
jl
dec
push
cmp
mov
sti
xchg
inc
inc
scas
sub
xor
xor
arpl
mov
sbb
jns
xchg
xor
jno
push
jns
out
loopne
push
dec
data16
add
dec
mov
mov
leave
lock
cld
or
jge
(bad)
dec
icebp
scas
pop
push
sbb
jbe
jbe
jp
cmp
and
test
hlt
retf
movs
or
jp
jnp
and
jbe
cld
mov
test
cmps
push
jbe
mov
mov
sbb
add
shl
mov
cmp
fwait
push
imul
and
fwait
jae
jb
out
fbstp
test
pop
aas
bnd
push
adc
inc
ret
jecxz
xchg
iret
sbb
dec
adc
arpl
dec
ss
push
ins
test
mov
mov
mov
jo
cmp
xchg
or
adc
or
enter
xor
bnd
xchg
xlat
mov
push
xchg
adc
call
adc
movs
loop
leave
cmp
xlat
retf
mov
fstp
fs
and
addr16
cwde
jo
push
cmc
jae
inc
cli
sbb
pop
add
mov
mov
jnp
pop
push
jecxz
not
mov
retf
cmp
(bad)
mov
push
inc
rep
sbb
adc
mov
lods
dec
pusha
pop
fucomp
xchg
pop
jbe
cli
pop
sub
add
jae
cs
fwait
in
std
xor
call
add
dec
fcomi
mov
mov
or
dec
or
pushf
pop
pop
sbb
sbb
popf
push
ret
gs
jecxz
stos
sub
add
ret
call
add
cwde
dec
mov
mov
das
std
or
or
call
(bad)
std
mov
retf
notrack
addr16
mov
imul
icebp
push
lock
and
sbb
inc
fdivr
inc
jbe
rcr
sbb
jge
mov
fstp
push
stos
jmp
xor
movs
test
fucomp
push
mov
or
das
shr
and
mov
xchg
or
les
sbb
adc
add
je
out
jnp
sbb
call
cli
add
movs
or
mov
jecxz
leave
rcl
xor
and
in
pop
add
and
xor
shl
repnz
arpl
clc
mov
sub
mov
cdq
(bad)
out
adc
mov
lahf
cmp
int
movs
mov
push
out
dec
add
xor
(bad)
xor
pop
dec
gs
aaa
pop
in
call
jne
fsubp
cmc
cdq
fisttp
mov
setno
shl
loop
jno
add
fdivr
mov
shr
ret
dec
sbb
adc
or
sub
jge
popa
mov
ja
and
call
scas
iret
jecxz
in
(bad)
jmp
add
mov
add
mov
movs
pop
mov
xchg
fist
ins
(bad)
pop
dec
fcomp
ret
mov
arpl
out
mov
popf
daa
test
adc
lods
xor
rcl
push
aaa
push
pop
xchg
and
ins
pop
movs
jmp
out
pop
mov
xchg
pushf
rol
dec
mov
ret
dec
sub
into
popf
cmc
cmp
out
jae
repz
jne
jae
aad
pop
fwait
or
loop
mov
and
xor
jg
mov
movs
sbb
pop
aas
jns
fnstenv
outs
test
sub
cmp
cmp
push
push
jmp
inc
jmp
jg
mul
xchg
pop
dec
aas
movs
sub
int
mov
popf
adc
test
arpl
(bad)
fwait
ins
aam
xor
jno
sbb
xor
and
add
and
push
dec
mov
mov
mov
adc
popa
and
jle
or
lock
lea
outs
sub
mov
cdq
(bad)
(bad)
sbb
inc
inc
push
rol
lds
ret
xor
jae
jbe
pop
ficomp
fild
add
mov
scas
dec
stos
mov
dec
hlt
(bad)
adc
scas
imul
xor
aaa
push
pop
cmp
mov
jl
or
mov
cmp
xor
fimul
test
loop
mov
(bad)
(bad)
pop
fs
int
mov
(bad)
enter
pop
and
adc
xchg
ins
std
push
dec
sub
mov
mov
fist
push
imul
clc
jecxz
iret
cmp
cmc
push
or
jl
mov
div
dec
gs
mov
pop
cwde
icebp
ret
int3
push
and
jne
jb
mov
sub
fistp
xor
addr16
jecxz
xchg
mov
inc
into
aas
fdivrp
clc
push
add
jo
ins
bound
mov
ins
push
mov
fiadd
xlat
pop
scas
std
ret
shl
mov
and
push
rcr
out
icebp
rol
and
push
xchg
sbb
movs
adc
xchg
loop
add
clc
add
imul
pop
mov
xor
(bad)
jo
pushf
sub
pusha
inc
mov
inc
jecxz
jmp
leave
imul
ror
cmps
push
test
and
pop
or
inc
cld
call
sbb
data16
imul
cdq
inc
adc
(bad)
hlt
(bad)
mov
sub
out
jmp
nop
mov
xchg
xor
add
add
mov
jle
test
push
stos
sub
add
mov
mov
push
jp
and
stc
test
punpckhdq
test
xor
add
jbe
push
repz
test
cmp
dec
leave
cdq
xchg
pop
(bad)
pop
repnz
push
pop
lahf
push
pop
jge
shr
xor
iret
les
mov
sar
pusha
lds
push
scas
ror
or
dec
jno
sub
inc
sbb
push
out
ret
push
xor
mov
or
pop
pop
stos
(bad)
mov
add
and
jb
dec
outs
clc
stos
out
ret
dec
inc
cmp
js
test
fcomp
ja
inc
add
adc
aam
mov
jnp
dec
sbb
or
pop
test
(bad)
call
pop
sbb
cmps
cwde
(bad)
lock
mov
test
pop
push
daa
or
pop
inc
scas
shl
add
jl
call
inc
dec
leave
jb
inc
lock
push
xchg
dec
jo
mov
inc
cwde
das
sub
mov
out
dec
ret
adc
fidiv
aam
nop
(bad)
(bad)
pop
and
jae
dec
xchg
clc
jge
mov
lods
dec
jno
nop
dec
js
inc
push
dec
jl
cmp
aas
mov
out
xor
scas
(bad)
dec
push
call
pop
mov
pop
inc
jae
push
jge
int3
cmp
stc
jno
jb
js
(bad)
rcr
dec
cmp
push
dec
add
pop
mov
sbb
pop
aaa
ins
in
push
lea
and
mov
mov
pop
adc
stos
push
add
sar
and
cmp
test
xchg
or
mov
jno
adc
sub
shl
aas
call
jmp
inc
push
inc
mov
inc
xchg
ss
inc
or
pop
mov
aam
cdq
sub
outs
dec
jb
scas
xchg
sbb
xchg
mov
pop
inc
cdq
adc
jmp
xor
pusha
jl
jb
dec
sub
mov
cmp
bound
cmps
call
(bad)
sti
inc
mov
leave
or
retf
jg
test
(bad)
stos
add
sahf
das
sub
arpl
dec
sub
mov
sub
std
dec
jle
lods
dec
into
pop
in
add
popf
pop
cmp
mov
mov
cmp
mov
and
std
jb
stos
aaa
mov
mov
pop
xchg
xchg
into
hlt
pop
cli
ja
stos
pop
int3
inc
sub
fistp
or
jl
add
(bad)
fcom
fidivr
and
in
retf
mov
clc
test
adc
push
and
cdq
ins
or
call
sub
fld
std
lods
add
mov
mov
test
bound
xchg
push
popa
inc
or
sub
aas
mov
push
loopne
sbb
add
test
push
ins
ins
aad
nop
cwde
shl
cmp
xor
dec
mov
int3
adc
mov
xchg
inc
int
movs
xlat
movups
test
xor
neg
call
pop
fisubr
sahf
(bad)
sar
sub
cli
and
dec
cld
push
jo
shr
add
push
call
mov
mov
and
inc
stc
jmp
push
nop
js
cdq
jecxz
mov
out
pop
xor
sub
cmc
jae
loopne
mov
xchg
push
(bad)
cmps
and
aaa
mov
sbb
(bad)
push
pop
jmp
xchg
je
mov
clc
xor
xor
les
fbld
mov
mov
sub
push
shl
xchg
out
and
jecxz
fs
mov
xchg
repz
or
ret
sti
cmp
cmp
mov
retf
push
jle
test
fwait
cld
jp
movs
test
int3
call
mov
or
cdq
pop
popa
aas
cld
cmp
pop
int
fiadd
xor
xchg
pop
inc
cmc
sbb
mov
out
or
cli
sbb
jbe
push
nop
push
lahf
inc
pop
sub
cwde
pop
mov
mov
mov
xchg
int3
scas
into
leave
(bad)
push
add
aas
adc
jge
adc
shr
mov
test
fisub
enter
sub
sbb
sti
lds
sub
fwait
cmp
data16
movlps
push
movs
dec
daa
test
cmp
int
mov
xor
sbb
jnp
sbb
or
movs
mov
push
cmp
(bad)
in
lock
jmp
retf
or
xor
shr
mov
imul
int3
bnd
into
pop
(bad)
rol
adc
imul
and
cmc
cmp
pop
fldcw
popa
mov
nop
retf
add
xlat
sub
ss
(bad)
imul
sar
dec
ror
cs
mov
adc
leave
add
mov
sbb
xor
jae
adc
jge
dec
in
xor
aad
xor
test
stc
xor
shl
sahf
jecxz
loopne
je
test
lahf
test
dec
lea
xchg
or
outs
fadd
mul
retf
inc
lods
cmp
pop
push
scas
inc
mov
xor
stos
mov
push
aad
test
sub
mov
ret
cmp
aaa
in
test
push
mov
mov
movs
shl
mov
sti
jne
cmovs
aas
push
mov
lods
pop
push
mov
cmp
jno
xchg
jnp
mov
imul
push
sbb
cld
pop
cwde
sub
sbb
cld
test
repnz
call
push
xchg
adc
hlt
arpl
xor
and
push
and
sbb
cs
enter
sar
dec
xor
mov
mov
cmp
pop
xchg
jno
in
call
jno
pusha
sbb
out
rcr
xor
fwait
mov
pop
push
or
in
stos
inc
lds
sbb
popf
push
mov
push
xchg
out
mov
pop
into
(bad)
ficomp
push
mov
or
test
mov
sbb
aam
jge
out
(bad)
cli
test
dec
or
stc
mov
mov
push
push
or
in
mov
pop
je
add
test
sub
cmp
jo
push
in
jmp
popa
dec
or
mov
cli
(bad)
jl
out
push
scas
dec
push
rol
pop
xchg
(bad)
add
(bad)
call
lahf
dec
mov
shl
push
cld
or
mov
push
pop
movs
inc
loop
fcomp
dec
xchg
add
cmps
pushf
aam
mov
sbb
jl
fld
fsub
cmp
or
in
xor
adc
out
pushf
leave
jo
push
and
mov
cmps
push
xor
inc
pop
pop
icebp
push
mov
ror
popf
pop
sti
push
(bad)
sub
lods
jb
dec
pop
xor
ret
adc
repnz
and
sar
aaa
and
hlt
pop
mov
hlt
dec
enter
xor
out
cmp
sbb
cwde
sbb
addr16
inc
repnz
jge
jmp
out
retf
inc
jp
jmp
lock
sahf
adc
lods
inc
push
(bad)
cmp
mov
lea
mov
fst
push
push
pusha
xor
jecxz
jbe
aas
fs
inc
fwait
mov
pop
mov
loop
nop
jnp
retf
pop
jns
leave
data16
and
jno
xor
aaa
and
outs
mov
in
je
int3
jmp
inc
xchg
mov
mov
and
fbstp
jp
fimul
cdq
cld
stc
div
inc
imul
xor
jne
push
scas
hlt
loop
rcr
adc
cmp
aad
jle
movs
inc
xchg
push
div
shl
movs
inc
xchg
cmp
arpl
ror
jnp
mov
mov
inc
call
pusha
out
(bad)
call
frstor
jge
(bad)
loop
ja
xchg
(bad)
(bad)
cmps
jmp
mov
or
and
inc
push
aas
je
pusha
daa
aad
imul
test
dec
add
pop
cmc
xchg
pop
sbb
xchg
retf
mov
popa
dec
les
fs
sbb
mov
fdivrp
fwait
jno
pop
dec
mov
jb
mov
cmp
(bad)
push
icebp
adc
pop
and
stc
inc
and
test
das
jb
add
mov
fwait
add
dec
jne
loopne
inc
jne
aam
lock
and
fadd
jecxz
jle
sub
aad
loopne
sbb
pop
cmp
mov
retf
aas
movs
rcr
out
pushf
lea
je
and
aas
jp
shr
repnz
jo
mov
push
frstor
cmp
jg
dec
repnz
scas
out
add
jge
sbb
sbb
stos
inc
pushf
cmc
xchg
loopne
pop
in
xlat
mov
out
adc
aad
sub
sbb
jns
lds
jmp
dec
call
int3
icebp
lock
in
jg
test
int3
ds
inc
out
inc
jo
and
cdq
pop
ret
mov
popf
adc
fstp
xchg
dec
and
pop
in
push
jle
retf
jge
jmp
js
es
inc
mov
pop
sub
add
xchg
mov
and
loopne
pop
enter
mov
sub
cmps
test
lods
xor
mov
int3
xchg
fld
adc
ret
push
mov
sub
pop
xchg
test
sbb
and
and
cmp
int3
dec
or
movs
xor
mov
xchg
mov
mov
rcr
or
cmps
push
ins
imul
ret
xor
(bad)
xchg
xchg
daa
out
mov
mov
sub
call
int3
stos
cwde
inc
jbe
cli
ror
jno
xchg
xor
fwait
loopne
mov
mov
shl
sub
into
pop
mov
(bad)
and
push
adc
(bad)
xchg
in
jmp
call
xchg
or
xchg
push
jmp
out
push
sub
sub
mov
movs
jne
int
mov
add
es
sub
cmp
xchg
(bad)
mov
out
(bad)
fldenv
movs
loopne
out
cld
xor
loop
imul
jns
push
outs
or
jbe
dec
jbe
dec
lock
arpl
sub
cdq
dec
pop
cld
and
and
jne
push
xor
aaa
rcl
shl
or
push
out
(bad)
out
mov
lea
cmp
mov
sti
add
mov
push
adc
mov
xor
push
js
lds
pop
jo
pop
clc
js
clc
dec
pop
cmp
adc
mov
mov
lock
mov
pop
lock
jg
mov
ffree
mov
or
enter
or
in
(bad)
data16
adc
mov
xor
(bad)
pop
adc
inc
pop
pop
int3
ja
mov
pop
pop
add
stc
call
loope
adc
dec
loope
test
hlt
inc
ins
addr16
pop
aad
adc
jb
repz
aas
and
jnp
std
aaa
mov
push
out
and
into
test
clc
test
jno
fisttp
mov
(bad)
std
jmp
loopne
and
shl
jno
dec
in
jmp
das
fs
sti
(bad)
mov
out
mov
sbb
loope
mov
outs
xor
imul
out
sub
in
mov
sar
sub
inc
dec
jnp
repz
pushf
or
or
cmp
rcl
not
pop
in
test
or
or
sahf
or
mov
rcr
jp
dec
clc
mov
mov
into
mov
out
or
pop
or
mov
mov
add
mov
inc
scas
dec
rcl
loopne
div
mov
ror
mov
dec
aad
jo
mov
stos
push
jle
mov
jb
repnz
(bad)
gs
or
(bad)
out
xchg
pop
or
adc
mov
inc
cdq
mov
push
sbb
movs
lahf
in
nop
cwde
pusha
adc
xchg
pushf
imul
or
les
(bad)
fidivr
test
int3
icebp
add
std
loope
hlt
enter
inc
xchg
icebp
jmp
mov
xor
daa
cmp
(bad)
int
lods
adc
fsubr
mov
fst
xchg
stos
dec
and
jmp
pop
into
iret
push
sub
push
add
shl
in
imul
stc
xlat
mov
scas
mov
jae
cli
es
add
sub
mov
stos
jns
push
pop
sbb
jge
dec
loop
(bad)
jmp
mov
neg
fdiv
xor
cmps
dec
jmp
pusha
leave
aam
fstp
cmc
jbe
lods
add
jge
sbb
sahf
aad
shr
es
bound
lahf
rcl
lea
(bad)
pop
pop
test
jp
mov
vunpckhps
rol
or
jnp
aam
lea
sbb
ret
scas
fs
push
push
dec
sbb
inc
cmp
mov
xor
cmp
xor
pop
enter
ret
imul
call
sbb
lock
cmp
mov
push
dec
sub
adc
mov
ins
dec
jb
add
cs
repnz
sahf
cmp
fsqrt
sub
mov
mov
shr
cmps
mov
shl
cdq
nop
and
in
lea
jo
dec
outs
mov
into
call
fmul
and
sbb
loope
mov
adc
inc
test
lds
cld
and
jns
push
cmp
jbe
aaa
sbb
pusha
neg
fs
clc
(bad)
push
xor
mov
push
retf
ror
int3
xlat
daa
or
jp
cmp
adc
aad
in
ret
sahf
shr
ficom
xchg
xchg
dec
sbb
or
mov
data16
and
les
call
xchg
aam
push
ret
xor
lds
inc
pusha
test
test
jns
xchg
add
mov
imul
push
dec
sti
gs
xchg
out
xchg
pop
pushf
movs
inc
cs
add
scas
pop
fstp
hlt
lahf
sub
es
sub
cdq
shr
dec
adc
mov
pop
in
push
ret
int3
adc
ror
and
push
pop
ror
or
out
jo
ret
sti
push
dec
or
out
daa
sub
inc
std
fild
push
shl
aad
jb
call
cmc
inc
jmp
lahf
push
xchg
fwait
dec
iret
scas
in
ins
sub
int3
in
inc
xchg
xor
cmp
out
mov
sahf
les
sub
push
mov
lahf
inc
mov
imul
(bad)
jg
aad
movs
std
lods
sub
cmp
aam
leave
inc
jl
xchg
ret
rcl
pop
inc
pop
push
mul
cmc
push
xchg
or
or
test
jmp
pushf
sub
xor
pop
xor
and
sbb
pop
jo
pushf
int
push
ss
cmp
and
cmp
xchg
push
xor
adc
scas
sbb
pop
aaa
fistp
in
and
bound
fdiv
repz
jge
add
dec
cs
ret
pop
add
lods
repz
cli
or
enter
es
mov
inc
lahf
adc
das
in
jbe
fcom
xor
call
in
out
mov
adc
cmps
enter
mov
inc
dec
sub
in
mov
sub
dec
pop
fst
jecxz
push
push
cld
push
not
pop
cmp
xor
push
and
inc
pop
mov
(bad)
lock
loopne
mov
or
fistp
cld
inc
aam
enter
pop
scas
cmp
sbb
pop
mov
dec
ficom
mov
ficomp
nop
ror
lahf
cmps
adc
aam
sbb
hlt
push
adc
push
xor
mov
cs
sbb
push
lahf
lahf
push
mov
sbb
push
xchg
add
shr
daa
pusha
enter
daa
mov
arpl
mov
shl
mov
shr
cmp
xor
cmc
inc
mov
cmps
ror
jl
cmc
mov
cmp
stos
jno
xchg
aam
scas
aam
push
xchg
sub
lock
retf
in
mov
sub
cmps
test
mov
int
aas
ja
lock
pop
lds
jne
test
int
adc
popa
(bad)
daa
test
sahf
call
sar
mov
fimul
inc
mov
pop
test
adc
inc
scas
clc
xchg
inc
cmp
mov
xchg
retf
adc
ror
daa
scas
pop
fiadd
add
or
mov
or
cs
cmps
dec
ret
jb
retf
mov
add
mov
in
add
cdq
pop
sbb
inc
sbb
push
fwait
sub
stos
pop
rol
jns
push
adc
data16
cmp
(bad)
stos
cmp
fmul
jmp
jo
cmp
jno
clc
or
pop
loope
sbb
jge
xchg
mov
sbb
inc
add
and
gs
jmp
sbb
pusha
cmps
rol
(bad)
dec
jg
test
mov
xor
lds
push
mov
mov
add
or
cmp
and
shl
mov
aam
fimul
xor
mov
pop
push
push
mov
adc
push
addr16
mov
aam
mov
in
clc
xchg
call
in
sbb
inc
inc
js
in
test
arpl
loop
ins
or
aam
mov
xchg
sbb
jmp
jno
and
sbb
stos
xor
adc
jl
arpl
dec
cld
inc
sbb
adc
mov
fs
call
dec
iret
aaa
aas
mov
fild
mov
pop
mov
xchg
inc
jo
mov
and
add
dec
int
popf
sub
test
xor
in
push
xor
dec
sahf
adc
out
and
out
mov
and
mov
loopne
adc
mov
movs
fstp
or
push
add
shl
push
in
scas
push
imul
push
push
js
xor
sub
shl
jno
and
ss
push
adc
mov
mov
dec
pop
adc
lods
sbb
bound
pop
inc
mov
xchg
inc
fsub
repz
gs
(bad)
loop
pop
sub
js
aaa
xor
shl
fld
mov
repnz
adc
lods
pop
mov
enter
mul
dec
addr16
in
hlt
adc
ficom
dec
lahf
call
jnp
sub
jecxz
ins
repz
adc
or
and
sub
outs
movs
cmps
or
mov
mov
xchg
cdq
mov
pop
rol
pop
xor
mov
js
sub
loopne
stos
cwde
popf
jle
push
jbe
loope
sub
inc
mov
lods
push
xchg
(bad)
or
sub
jg
pushf
mov
das
add
shr
call
xchg
push
push
fsub
adc
sbb
cmc
sub
add
jg
or
in
call
jns
jb
add
outs
movs
dec
push
rcr
lahf
add
or
ins
lea
cmp
cmp
pop
pop
fs
jg
cwde
mov
sub
fs
adc
lods
lea
stos
(bad)
mov
iret
leave
data16
xor
int
dec
push
push
int
push
aad
movs
enter
ret
lds
mov
jns
(bad)
sub
adc
mov
pusha
mov
push
neg
ss
and
push
sub
pop
imul
loop
jecxz
test
in
adc
aaa
jno
test
mov
shl
cmp
pop
add
add
sub
or
xor
popf
push
js
call
mov
inc
idiv
mov
push
retf
scas
ins
pop
hlt
sub
int
scas
xor
leave
(bad)
sub
sbb
cli
add
repnz
rcr
push
hlt
jo
leave
rcl
or
cwde
adc
mov
pop
stc
popfw
push
(bad)
pop
push
lsl
xor
push
in
arpl
dec
adc
mov
les
mov
dec
mov
movs
xchg
out
in
mov
inc
retf
cmp
mov
cmc
neg
addr16
iret
ins
jb
test
sbb
mov
call
lea
jp
in
and
mov
mov
dec
xor
(bad)
mov
int
inc
stos
(bad)
and
repz
cmp
add
pusha
push
cmps
mov
or
leave
mov
xor
loop
xor
mov
or
cli
and
jbe
idiv
adc
idiv
(bad)
xlat
adc
jnp
dec
push
sbb
add
stc
push
sbb
mov
scas
mov
adc
push
jg
ds
hlt
inc
jbe
adc
mov
push
and
dec
call
fsubp
loope
pusha
jo
push
and
mov
or
loop
jno
mov
add
xor
int3
xor
outs
mov
mov
sar
(bad)
pop
mov
jle
popa
mov
dec
popf
in
push
jnp
fistp
inc
push
psllq
(bad)
and
mov
fldcw
dec
mov
fldln2
fs
cmp
jmp
mov
sub
lea
push
xor
imul
mov
repnz
scas
in
mov
ins
mov
bound
shl
rcl
out
and
cmp
rol
inc
inc
jb
movs
jno
mov
inc
(bad)
add
out
call
inc
std
in
adc
mov
icebp
pop
add
(bad)
loopne
mul
pop
mov
dec
jb
cmp
rcl
adc
lods
popa
add
(bad)
push
jecxz
add
mov
and
enter
loope
mov
pop
xor
inc
enter
pop
test
out
scas
aas
mov
sbb
mov
mov
adc
addr16
sub
push
idiv
or
dec
mov
scas
rol
mov
leave
cmp
ret
mov
pop
aad
sub
push
addr16
mov
push
lock
sahf
jne
sbb
jmp
retf
aad
xchg
xchg
movs
call
out
stos
mul
xor
iret
push
into
addr16
jb
sub
inc
jne
lods
fsub
jns
mov
adc
xlat
jl
pop
push
inc
stos
dec
into
dec
xchg
call
xchg
scas
das
xchg
pusha
pop
or
movs
xchg
push
sub
pop
xchg
cld
xor
dec
leave
mov
imul
lods
mov
push
mov
je
mov
cmp
imul
sti
add
ret
cmps
jnp
pusha
in
outs
movs
pop
pop
iret
imul
imul
mov
mul
sub
xor
repz
cmc
xchg
loop
test
stos
adc
dec
hlt
stos
pop
xchg
inc
rep
(bad)
int3
cmp
sub
pop
dec
pop
cwde
jle
dec
xchg
jecxz
xor
or
iret
(bad)
push
push
leave
push
leave
js
out
jbe
popa
out
xor
loop
scas
jns
dec
mov
ins
scas
aam
adc
push
jge
mov
ds
mov
pop
xor
push
mov
push
loopne
mov
mov
daa
outs
add
push
fwait
mov
lahf
pop
jbe
add
sbb
add
cld
inc
outs
hlt
pushf
sar
xchg
scas
add
les
stc
icebp
not
xor
(bad)
arpl
cmps
jmp
xor
jge
rcl
xor
loopne
std
inc
ins
sub
daa
mov
jo
stos
cmp
mov
xchg
mov
repnz
cwde
and
cmp
in
daa
loop
jp
add
mov
int
or
call
xlat
stos
mov
cmps
pop
push
mov
cmc
aas
mov
and
push
sub
adc
ds
and
imul
fcomp
repz
rol
push
dec
xor
mov
inc
sub
pop
test
or
cmps
mov
pop
cmps
and
push
ret
push
add
push
cmp
mov
imul
sbb
cmp
push
and
add
pop
mov
lock
dec
inc
and
xchg
loop
mov
ret
ror
cwde
addr16
popa
sub
clc
imul
jb
test
out
shr
push
add
pop
outs
sbb
into
mov
dec
inc
(bad)
call
adc
dec
out
sbb
and
stos
aam
mov
inc
ins
xor
cld
int
push
pop
mov
(bad)
das
xor
push
cmp
aam
inc
mov
or
ss
add
out
daa
cmp
and
and
adc
jno
or
fwait
pop
jge
mov
pop
cmp
xchg
in
mov
pop
repnz
or
rcr
bound
mov
mov
mov
out
call
sub
jge
jne
out
dec
imul
mov
sbb
cli
pop
fs
stos
outs
repz
adc
fwait
cmp
inc
call
jmp
shl
pop
int3
sub
mov
loopne
jge
cli
enter
mov
call
out
fsubr
fimul
(bad)
mov
dec
adc
aaa
dec
push
lds
and
das
dec
mov
das
sbb
fs
daa
sbb
imul
pop
retf
push
(bad)
push
mov
dec
outs
cmp
clc
mov
sbb
rol
lea
mov
jbe
cmp
pop
ffreep
dec
cdq
jns
sbb
scas
ror
cs
fcomp
out
loop
fwait
lahf
scas
mov
mov
fmul
int
aaa
(bad)
mov
xchg
xlat
js
sbb
aad
inc
push
(bad)
lds
outs
ret
pushf
xlat
jmp
sbb
add
or
mov
dec
cmc
xchg
fmul
sbb
int
jp
ret
out
inc
xor
sar
je
repz
div
sahf
xor
mov
mov
ret
adc
in
mov
retf
add
les
dec
daa
fidiv
jmp
sub
mov
lahf
mov
cmp
pop
stc
jae
popf
mov
and
into
shr
fidiv
jle
jle
jp
push
adc
mov
inc
jb
mov
adc
(bad)
dec
add
retf
imul
loope
xchg
add
add
mov
scas
movs
sub
popa
daa
cmp
cdq
xlat
add
mov
jmp
jp
aad
inc
jecxz
adc
out
cmp
ins
aad
sub
pop
ror
mov
mov
and
pop
pop
pop
(bad)
sbb
cdq
bound
clc
repz
sub
mov
into
cvtdq2ps
aaa
dec
pop
pusha
or
loop
push
mov
mov
sub
xchg
xchg
icebp
jns
cmps
mov
lock
pop
add
dec
jae
dec
pop
or
jle
in
in
fmul
sub
scas
sbb
adc
sbb
pop
and
add
add
mov
pop
loopne
xor
popf
out
cmp
add
mov
icebp
imul
add
shr
popf
push
(bad)
daa
retf
enter
bound
mov
fnstsw
sub
(bad)
aam
cmp
neg
fs
pop
cmp
fwait
bound
out
inc
fisttp
sub
cmova
mov
call
test
xor
mov
sub
dec
mov
mov
pop
pop
mov
ret
sbb
jg
mov
adc
dec
add
jg
retf
and
cmps
add
adc
popf
jmp
rcl
jae
sbb
in
jg
rcl
xchg
xchg
cmp
xor
add
mov
sbb
xlat
pop
and
mov
fist
jecxz
and
mul
push
inc
sti
call
sub
in
pop
ret
sar
jge
ret
cmp
add
shl
adc
sub
dec
fidivr
push
jmp
cmp
popa
or
adc
(bad)
mov
jo
cmps
loopne
fadd
movs
dec
fisttp
aas
cmp
jnp
outs
loope
fdiv
or
das
mov
xor
mov
loopne
sub
ja
les
adc
mov
and
(bad)
jmp
loope
cmp
icebp
movs
dec
into
cwde
clc
pop
mov
sub
sub
adc
add
stc
ins
mov
push
jle
retf
clc
mov
out
in
enter
sub
lods
cmp
pop
lods
das
and
out
pop
sbb
mov
sbb
lods
jae
cmp
(bad)
js
push
imul
imul
xchg
adc
pop
js
push
icebp
push
adc
and
sub
sub
xchg
xor
inc
add
xchg
loope
in
xchg
lods
or
sbb
icebp
jecxz
dec
cld
(bad)
cmp
xchg
lods
int
inc
xchg
xor
into
sub
jb
cmp
xchg
out
cld
cwde
sub
sbb
cmp
jle
out
mov
ss
sub
adc
mov
out
xor
and
lock
push
xor
and
push
out
fidivr
stos
je
pop
call
cld
stos
lahf
popf
pusha
in
sub
push
pop
ja
push
int
div
xor
jb
inc
lods
adc
fldcw
mov
leave
fwait
ja
leave
adc
rcl
pop
in
mov
andnps
cwde
adc
sti
lods
ret
mov
cmp
or
xchg
test
push
dec
inc
adc
pop
test
mov
ficomp
mov
jle
inc
in
rol
add
mov
sti
es
test
lods
dec
cmc
in
xchg
lock
jp
stos
mov
mov
xchg
mov
sbb
enter
test
or
mov
cmp
inc
bound
push
jl
mov
xor
push
js
push
pop
fwait
inc
in
loope
and
mov
pop
xor
stc
jne
mov
int3
scas
jb
xor
movs
sub
xchg
sub
stos
push
les
pop
inc
dec
(bad)
retf
pop
cmp
mov
rcl
mov
std
and
xchg
(bad)
cmp
mov
scas
test
loop
test
push
sbb
stc
jg
fild
pusha
into
in
cmps
inc
std
das
push
or
dec
sub
nop
push
fs
sahf
(bad)
fsub
add
sti
and
outs
xchg
std
push
ja
iret
ins
pop
mov
popf
mov
movs
and
cmp
sub
int
popf
int3
call
mov
inc
(bad)
pop
call
mov
test
add
pop
scas
fcomp
test
int
xor
xor
ud1
inc
dec
sbb
or
imul
xor
sar
pop
cmp
pop
mov
cmp
icebp
xor
mov
test
shl
in
aaa
fbstp
sub
xor
retf
aad
cmp
pop
iret
adc
mov
adc
js
das
out
jmp
add
jge
out
dec
mov
lock
or
xchg
sub
jmp
sub
mov
je
pop
mov
in
(bad)
xchg
fisttp
les
icebp
xchg
or
sbb
call
neg
call
sbb
cmp
fdivrp
rcl
lods
leave
daa
mov
inc
aaa
sti
(bad)
xor
or
pop
enter
ins
(bad)
in
pop
cmp
pop
fstp
das
(bad)
imul
xor
jb
mov
lods
add
jnp
loopne
outs
int
mov
dec
xor
call
fadd
mov
imul
loope
in
movs
inc
cmps
imul
test
arpl
push
mov
xchg
cmp
out
leave
xor
dec
adc
(bad)
add
push
into
mov
shr
and
cld
fs
ror
cwde
clc
inc
mov
bound
stc
sbb
inc
push
push
leave
daa
fldenv
sub
add
stos
mov
in
out
push
call
jl
adc
xchg
jl
movs
xchg
call
out
fwait
hlt
adc
test
xchg
inc
adc
iret
adc
in
mov
pop
push
xor
cmc
in
(bad)
jae
jo
mov
sub
retf
mov
push
ds
inc
ja
rcr
xchg
cmp
mov
aas
leave
mov
add
xchg
sbb
push
dec
in
xchg
pop
or
retf
add
add
pusha
push
popa
xor
or
js
push
mov
dec
call
dec
imul
cdq
xor
test
mov
mov
inc
and
lahf
data16
add
and
fistp
dec
ins
pop
mov
rsqrtps
or
xchg
fwait
jo
fistp
repz
mov
pop
(bad)
cmp
sub
mov
mov
outs
iret
jmp
sub
addr16
lds
pop
adc
mov
add
jl
mov
shl
mov
sub
jnp
pop
vcvtsd2ss
inc
aad
xor
sub
inc
(bad)
and
xor
daa
lahf
aam
fs
jge
sahf
pushf
pusha
shl
adc
lods
xchg
jp
std
inc
adc
dec
or
ss
rcr
stc
xor
call
lods
jbe
outs
ss
sti
fidiv
mov
xor
jp
iret
pop
push
fdiv
push
xor
jnp
sub
nop
retf
cmps
cmp
ins
mov
jge
loop
dec
add
fisubr
sbb
mov
pop
fistp
xchg
outs
cwde
add
cmps
pop
lea
(bad)
inc
add
cs
inc
jmp
xor
aas
int
mov
mov
lds
scas
sub
lods
or
aam
imul
push
ret
mov
loop
les
adc
pushf
adc
sbb
ret
add
cdq
adc
ror
inc
cmp
inc
(bad)
or
and
sub
out
push
push
sbb
dec
jl
push
jns
(bad)
(bad)
(bad)
out
lods
lea
call
jno
jmp
mov
ss
ficom
pop
push
xor
or
jno
cmps
xor
jp
in
fstp
pusha
xchg
jno
inc
push
xchg
stos
xchg
cmp
imul
arpl
mov
adc
loopne
clc
daa
mov
jl
das
or
and
mov
ret
fisubr
lods
pop
xor
xchg
dec
out
aas
in
lods
mov
fcomp
fst
mov
pop
in
mov
sti
aad
push
(bad)
loopne
jge
mov
push
cmp
neg
add
pop
pop
aas
pop
inc
mov
test
and
sbb
aam
fimul
sub
mov
sti
cli
mov
xor
aas
xor
xor
gs
shr
pop
mov
not
imul
(bad)
fdiv
icebp
mov
add
addr16
outs
mov
sahf
and
cmp
lock
retf
and
int
cmp
out
aas
(bad)
add
and
add
js
call
xbegin
mov
sbb
xor
mov
inc
mov
das
cwde
mov
out
mov
fwait
mov
in
outs
je
sub
inc
ins
clc
jle
add
out
ins
jbe
dec
pop
call
inc
jno
mov
pop
add
lock
push
xchg
arpl
iret
push
mov
sub
or
sbb
in
mov
cmp
mov
scas
popa
sub
jle
push
mov
cmps
iret
andnps
pop
frstor
jbe
dec
mov
sbb
cdq
test
out
sub
push
loop
dec
shr
aam
daa
sub
push
pushf
mov
or
add
pop
aas
mov
es
pop
fnstsw
cmp
jmp
jns
and
leave
cmps
or
mov
adc
sbb
inc
test
sub
sbb
jae
jmp
neg
sbb
clc
mov
inc
in
jmp
adc
out
test
jmp
xor
pop
test
inc
add
in
jp
xlat
jae
pop
popf
push
loopne
jmp
push
inc
and
mov
repnz
int
jecxz
sti
stc
mul
retf
jo
test
ss
jecxz
mov
sar
repnz
retf
xor
movs
mov
adc
ins
ret
fnstcw
arpl
fsubp
xor
ror
repnz
dec
sbb
ss
sbb
jnp
imul
nop
dec
jle
sub
mov
fucomip
pop
int3
mov
iret
mov
jmp
loopne
dec
or
xchg
fldenv
sbb
cmp
pushf
in
xchg
inc
xchg
mov
dec
add
dec
test
mov
cmp
int
mov
inc
pop
(bad)
pop
jmp
pop
push
xor
pop
cmp
mov
test
push
sbb
mov
movs
stc
pop
movs
pop
lds
mov
and
mov
pop
or
xchg
in
mov
push
mov
int3
daa
sub
pop
shufps
pop
jmp
adc
mov
add
pop
and
dec
add
icebp
cmp
out
(bad)
push
inc
xchg
inc
std
mov
test
inc
ret
popf
sub
mov
xor
and
hlt
out
outs
pusha
mov
retf
rdpmc
mul
inc
push
ficom
inc
mov
stc
and
cmps
cli
out
cmp
gs
pop
mov
push
cmc
xchg
xchg
add
mov
mov
jg
xor
xor
ret
xchg
mov
int3
jge
xorps
cmc
xchg
fbstp
ret
mov
in
mov
cmp
cmp
jecxz
retf
cmp
je
call
lahf
pop
xor
pop
mov
push
arpl
dec
mov
ins
mov
addr16
fs
rol
lds
push
and
adc
jne
bound
(bad)
js
add
fs
mov
xchg
mov
push
adc
rcl
addr16
enter
mov
outs
jo
inc
das
imul
sub
mov
push
addr16
cmps
out
jecxz
mov
mov
pop
pop
aam
push
and
sar
mov
mov
scas
mov
jbe
fwait
std
call
jno
adc
xchg
out
fst
and
adc
cmp
jg
test
sbb
mov
loopne
mov
sbb
imul
lock
pop
ficomp
test
outs
iret
sahf
out
xor
and
jne
test
mov
sar
fsub
sbb
mov
push
pop
mov
in
ins
jae
xchg
adc
cli
push
mov
in
movs
xor
sbb
fisttp
cmp
mov
mov
and
pop
test
inc
and
jge
adc
test
or
cmp
xor
jbe
sub
jmp
in
cmc
daa
inc
mov
aas
jmp
push
or
push
pop
in
sub
xchg
lods
sbb
xor
adc
mov
cmp
cwde
icebp
and
lds
add
shr
pop
icebp
movs
arpl
fidivr
cmps
or
jmp
pop
dec
pop
test
cmp
add
xchg
gs
daa
dec
rcl
inc
push
push
cmp
adc
std
push
stos
fidivr
and
in
add
mov
mov
mov
add
add
ror
int
jno
pusha
inc
xchg
add
sbb
stos
icebp
and
jecxz
imul
adc
mov
ja
mov
add
das
mov
inc
adc
cmp
mov
mov
jns
mov
nop
pop
xor
jl
xchg
xor
cmps
imul
in
inc
xchg
retf
out
push
mov
pop
test
out
jae
sbb
mov
push
lods
ins
xor
mov
adc
fs
nop
(bad)
mov
sub
cld
sbb
(bad)
(bad)
(bad)
(bad)
cmp
pop
and
pop
mov
je
stos
loopne
stos
std
jecxz
xor
call
popf
aas
shl
sub
imul
aad
adc
pop
mov
loopne
inc
xchg
xor
into
leave
repnz
inc
add
call
dec
lahf
test
xchg
ror
ss
sbb
or
fistp
add
adc
inc
cmc
add
inc
adc
stc
cmps
xchg
in
inc
call
add
xor
or
cmp
xor
call
xchg
ss
xchg
cld
xor
test
loop
stos
in
inc
lock
hlt
and
icebp
js
cmp
sub
and
(bad)
fadd
(bad)
adc
add
inc
adc
js
in
dec
pushf
dec
lahf
sar
adc
icebp
mov
je
les
in
cmp
mov
aam
push
out
fwait
bound
lds
loope
lea
pop
xchg
ins
add
sub
js
sbb
je
loop
xchg
dec
sbb
repz
and
jmp
(bad)
mov
dec
xchg
cmp
jp
in
and
mov
cmps
mov
xchg
scas
and
inc
daa
(bad)
cs
cmps
popa
jo
dec
or
(bad)
mov
inc
or
in
outs
inc
adc
sbb
push
out
mov
call
xchg
std
(bad)
jecxz
out
mov
mov
out
and
and
sbb
xor
movs
cmps
adc
pop
cmp
and
pop
clc
lds
sub
mov
dec
pop
ds
bound
dec
xchg
ficom
test
sub
and
push
enter
xchg
test
mov
outs
jmp
xchg
mov
retf
push
pminsw
movs
popa
mov
mov
xchg
std
hlt
int
in
adc
jg
aaa
ret
jnp
and
(bad)
jmp
or
jecxz
pop
or
call
cli
mov
ret
mov
adc
cmp
shr
int
adc
adc
or
xchg
push
push
rcl
mov
pushf
pop
sbb
sub
call
mov
xchg
sbb
outs
ja
jb
jbe
or
gs
mov
movs
pop
mov
data16
iret
jp
iret
rcl
retf
rcl
out
jl
sbb
cdq
pop
inc
push
pop
inc
popf
sub
paddsw
adc
sub
jmp
ror
stos
mov
dec
cdq
div
push
mov
aad
lods
push
and
push
hlt
bnd
mov
mov
push
fistp
sub
shl
xchg
pop
mov
jmp
adc
push
sub
jae
adc
retf
sbb
push
aaa
jo
int
popf
jmp
aas
leave
test
jmp
mov
lods
out
mov
dec
in
jmp
mov
pushf
sbb
adc
xor
in
shl
push
repz
xchg
int
push
xchg
jp
push
sti
outs
cmps
arpl
mov
add
inc
enter
stos
cmp
pop
cmp
adc
sar
(bad)
mov
aad
data16
fs
aaa
sub
jne
ret
pop
mov
push
dec
adc
ror
dec
push
(bad)
mov
mov
pusha
cmp
sbb
xor
push
rcl
mov
int
push
mov
adc
cld
jp
adc
jmp
pop
inc
xchg
cwde
add
xlat
sti
stos
(bad)
jno
push
popf
in
shl
dec
add
out
or
xor
cmp
fwait
enter
sbb
push
or
nop
test
or
jb
mov
ret
dec
outs
pop
and
xor
xor
or
dec
mov
sbb
mov
or
aas
sub
ins
cmp
not
ffreep
mov
movs
out
jbe
mov
xor
clc
data16
shr
imul
xor
ror
int
scas
push
or
out
dec
aad
(bad)
leave
fnstcw
sbb
ret
mov
daa
and
retf
mov
mov
pop
or
inc
(bad)
out
ret
rol
dec
repnz
xchg
xor
mul
inc
fs
jo
outs
bound
sub
ror
push
mov
popa
adc
or
and
lock
xchg
cmc
test
retf
adc
(bad)
fnstcw
leave
mov
mov
add
jmp
cli
mov
dec
mov
out
aaa
dec
jne
call
aam
jb
fisttp
mov
loopne
inc
repz
loopne
iret
outs
loope
jmp
gs
or
aam
scas
test
js
aas
(bad)
icebp
xchg
shr
sbb
aad
and
push
mov
mov
add
or
sar
mov
mov
xor
ins
inc
js
std
es
fdivr
pop
dec
pop
jbe
lds
icebp
mov
imul
je
push
mov
retf
and
cli
lods
clc
lea
fcomp
push
or
xchg
mov
jbe
aam
mov
sub
scas
mov
dec
pop
loop
jmp
(bad)
jmp
cli
dec
in
scas
fmul
sbb
jns
xor
int3
xor
imul
add
sahf
les
fst
or
scas
nop
bound
dec
stc
xor
push
xchg
stos
test
icebp
or
xchg
xchg
push
shr
or
push
cmp
ret
xchg
sub
xchg
cmp
sub
icebp
cs
inc
out
jbe
cdq
outs
shl
mov
inc
dec
aam
or
jg
sbb
sahf
xlat
mov
mov
hlt
mov
xchg
movs
loope
inc
pushf
cmp
mov
xchg
xor
xor
mov
fcom
cmp
(bad)
jmp
xor
add
jle
scas
sbb
adc
cmps
fstp
adc
push
(bad)
sbb
xchg
dec
push
movs
aaa
jp
lock
mov
into
mov
outs
mov
xchg
xchg
push
scas
push
cmp
xchg
jbe
out
out
pop
inc
popa
jbe
aam
push
int
jmp
inc
aaa
stos
mov
or
bound
data16
imul
cmp
cmp
inc
sbb
xchg
push
add
and
shl
test
dec
(bad)
pop
test
mov
add
or
adc
sub
pusha
outs
rol
adc
pusha
push
fdivr
adc
push
leave
stos
stos
pop
repz
fwait
jmp
mov
iret
shr
xchg
and
adc
mov
std
sahf
jp
rcr
mov
adc
imul
sbb
and
stos
inc
ret
lds
in
scas
inc
xchg
xor
aad
scas
shr
test
das
in
xchg
pop
cmp
sbb
cmp
xor
pop
xor
add
mov
pop
cmp
shr
ret
js
pop
inc
push
xchg
mov
dec
adc
ins
inc
movs
fucomip
inc
mov
sub
out
aam
lods
cmp
jle
or
ror
sub
(bad)
mov
cld
aam
cs
xchg
into
mov
jmp
out
inc
mov
sti
lea
cdq
or
daa
xor
out
dec
dec
test
lods
jnp
or
cmc
bound
mov
imul
pop
jl
add
mov
ja
sbb
loope
mov
add
or
ss
mov
add
mov
cmp
jge
sub
ins
sub
out
jb
adc
retf
dec
sbb
sbb
test
push
popf
push
aas
sub
inc
lock
jge
ror
aaa
imul
iret
jae
(bad)
jnp
jbe
test
xor
push
mov
mov
pop
add
pop
sub
jle
push
in
jge
xchg
hlt
pop
mov
call
dec
sbb
bound
addr16
dec
xchg
cmp
jmp
leave
sbb
push
push
mov
ins
jmp
push
cdq
les
arpl
or
xchg
icebp
pop
sbb
sahf
daa
es
std
mov
or
mov
ret
fwait
jg
sbb
or
movs
pop
inc
jb
mul
mov
dec
dec
aam
lea
jmp
jne
call
dec
fnstsw
neg
mov
leave
and
ss
movs
pop
xchg
xlat
stc
bound
mov
add
push
mov
dec
cli
(bad)
jl
xor
xor
add
lods
fwait
movs
pop
out
fbld
or
adc
(bad)
push
xchg
xchg
das
add
cdq
cmps
call
outs
pop
and
rcl
push
cmp
shl
lods
adc
pop
test
xchg
jl
sbb
loop
xor
pop
rol
fbstp
sbb
and
fisub
out
sub
mov
int
inc
inc
aam
jmp
addr16
cmp
inc
adc
push
add
adc
jecxz
cdq
lock
or
mov
sahf
push
test
push
sub
xor
push
cmps
clc
sbb
leave
popf
jns
movs
jmp
or
pop
xchg
mov
leave
(bad)
ficomp
outs
retf
test
pop
sar
fsub
pop
adc
mov
inc
xchg
cmc
sub
sbb
cmp
sub
in
xchg
cld
pop
pop
jbe
dec
push
ds
adc
add
xchg
inc
cs
adc
and
push
sbb
mov
shr
sbb
out
mov
addr16
pop
sub
mov
aam
pop
ins
cmp
cdq
call
ret
mov
xchg
jmp
test
mov
retf
inc
mov
push
xor
cmps
pusha
and
fcomp
(bad)
push
add
mov
push
mov
inc
gs
cmp
mov
arpl
int
pushf
mov
mov
dec
add
push
(bad)
retf
mov
adc
in
mov
mov
dec
lea
mov
xchg
xchg
mov
xor
mov
or
or
inc
scas
imul
and
pusha
in
ret
mov
and
daa
out
stos
push
fsubr
sub
xor
xor
out
or
dec
jne
push
pop
shl
sbb
mov
ja
pcmpeqb
adc
and
out
dec
push
xchg
jle
xor
iret
stc
xor
imul
fsubr
jo
je
test
fistp
xchg
push
jnp
jg
out
jo
sar
mov
mov
retf
pop
sbb
and
int
jl
(bad)
sti
aam
pop
xchg
jo
mov
jae
xor
nop
and
mov
leave
lods
repnz
call
fs
or
fstp
mov
cmp
mov
push
in
frstor
adc
int3
in
cwde
fldenv
sbb
mov
pop
test
not
out
mov
retf
xlat
mov
fs
(bad)
mov
retf
sub
jno
inc
push
xor
and
mov
add
push
pop
mov
call
scas
mov
ror
ja
mov
repnz
and
adc
and
jle
dec
xor
scas
dec
ds
inc
sbb
push
or
arpl
mov
jnp
aas
ror
das
add
mov
and
push
mov
inc
push
add
dec
cmp
fisubr
popf
shl
les
mov
imul
scas
mov
jge
mov
cdq
adc
imul
mov
lahf
out
sbb
nop
leave
test
push
jle
in
ret
stc
mul
iret
ror
scas
scas
add
imul
vmptrld
xchg
stos
bound
mov
push
je
ja
imul
dec
lds
pop
push
in
fcom
in
xchg
lods
aas
imul
dec
sub
cmp
pop
sub
bound
cli
fadd
sahf
rol
mov
(bad)
fwait
sub
cmp
xchg
xchg
mov
sub
test
cld
mov
outs
jmp
jnp
xchg
mov
cmp
fxch
aaa
mov
inc
in
mov
pop
sti
lock
and
(bad)
xchg
js
or
mov
pop
rcr
dec
pop
mov
xor
mov
ret
xchg
jmp
jns
mov
movs
test
iret
ds
enter
xor
add
jle
cmp
rcr
add
ds
ins
xchg
mov
add
stos
and
push
jbe
sub
push
popf
jb
mov
loop
jne
je
dec
mov
sbb
jp
cmp
jecxz
xchg
pop
fiadd
scas
sbb
adc
and
lea
sub
adc
(bad)
or
cld
call
gs
add
lods
shl
sbb
push
stos
dec
xchg
test
dec
inc
repz
xlat
sbb
sbb
mov
cmp
fyl2xp1
icebp
jge
pop
mov
popf
sbb
ret
inc
ret
xor
xchg
push
jle
fist
scas
xor
gs
xor
daa
ret
adc
add
sub
jbe
push
mov
sub
push
pop
cmp
repz
xor
lods
sbb
sub
mov
out
adc
scas
and
pushf
pop
cmp
mov
aas
std
rcl
pop
and
mov
add
sbb
out
add
mov
scas
adc
pop
pop
pop
and
and
xchg
iret
gs
sbb
jno
sub
xchg
rcl
fdiv
popf
push
mov
push
xchg
cmps
mov
gs
mov
loopne
repnz
imul
xchg
loope
ds
hlt
popa
mov
mov
addr16
mov
sub
stos
fwait
xchg
ins
mov
cwde
xchg
xchg
mov
mov
push
xchg
inc
les
fidiv
test
adc
stos
jae
dec
retf
dec
and
call
leave
adc
mov
add
dec
ins
push
ja
adc
push
xor
std
or
jg
ss
push
ret
(bad)
fimul
data16
pop
div
ja
adc
xchg
imul
es
dec
in
mov
retf
leave
jl
xlat
(bad)
test
and
sub
push
mov
and
retf
nop
into
rcl
push
inc
das
add
(bad)
xchg
leave
pop
xchg
(bad)
mov
mov
scas
cli
lea
stos
ret
popf
outs
jmp
fucom
clc
pusha
das
push
mov
into
inc
ja
scas
push
xchg
ds
jb
mov
sahf
pop
inc
jbe
aaa
push
mov
aam
inc
loop
int
sar
je
sub
mov
daa
shr
sbb
test
push
push
sub
(bad)
or
cli
dec
enter
adc
and
cmp
mov
je
mov
pusha
add
sbb
lea
and
inc
and
add
inc
ins
call
es
or
sbb
mov
cs
sub
xchg
sar
jae
ror
mov
jno
fldenv
scas
adc
and
jno
xor
dec
pop
neg
fdivr
(bad)
mov
sti
inc
sbb
or
pop
stos
cli
popf
push
jb
add
dec
pop
or
or
pop
add
aad
leave
jo
ret
cmp
xchg
sbb
or
and
or
fsub
jnp
jbe
xchg
add
mov
ds
pop
pop
mov
xchg
in
scas
dec
scas
or
aas
add
cmp
inc
jo
mov
and
cmps
jne
stc
xchg
adc
jg
or
mov
fdiv
mov
popf
(bad)
or
leave
iret
push
outs
movs
and
mov
dec
cmp
add
xchg
sti
inc
loope
xor
mov
xor
outs
(bad)
xchg
stc
dec
retf
xor
mov
fsub
push
push
loop
and
or
xchg
aaa
sub
adc
dec
icebp
test
rcl
jns
aaa
inc
out
xchg
push
adc
sbb
aam
mov
test
add
jb
ds
mov
xor
mov
(bad)
repnz
call
(bad)
fnstenv
fimul
jns
jo
sbb
mov
add
call
push
rcr
dec
fdiv
not
sbb
leave
mov
mov
jo
call
jp
sahf
ret
fist
jecxz
jmp
repnz
fidiv
mov
mov
fsub
jb
mov
icebp
sub
loop
pop
ds
(bad)
cmp
xchg
jg
ja
mov
js
push
lea
out
jle
push
hlt
sub
cmp
lock
and
mov
and
add
xchg
jnp
std
fsubr
iret
jno
test
mov
pusha
(bad)
xor
(bad)
aas
mov
cdq
test
fnstsw
in
inc
call
div
mov
fstp
fadd
test
lea
jbe
mov
clc
dec
push
push
push
push
push
fwait
xchg
mov
(bad)
cli
sbb
xchg
jle
fcomp
lea
es
(bad)
aas
ds
xor
jp
push
loope
mov
xchg
int3
es
ss
or
cmps
ret
and
add
repnz
push
in
loop
mov
sbb
and
jg
fnsave
cmp
int
call
in
cmp
pop
xchg
(bad)
pop
gs
sbb
or
lahf
ds
jecxz
stos
add
stos
sub
stc
data16
jle
push
push
jnp
xchg
in
add
xchg
pop
mov
ins
data16
jmp
adc
xchg
shl
dec
out
mov
inc
adc
jns
pop
das
xor
and
jl
fsub
std
mulps
sti
or
stos
icebp
and
dec
in
imul
fisttp
pop
add
adc
lds
and
outs
lea
and
and
push
ins
mov
or
nop
les
jp
sti
dec
pop
repnz
rcr
pop
aad
rcr
add
cmp
mov
xchg
lods
jne
pop
push
pop
adc
imul
or
xchg
cmp
es
lock
inc
xlat
pop
jae
std
popf
iret
in
jmp
jb
mov
add
pop
aam
pop
adc
test
jmp
jne
pop
lods
ret
jbe
cmps
jno
mov
fdivr
sbb
xor
add
imul
in
fmulp
fisub
dec
outs
push
add
push
ret
and
xor
xchg
cmp
test
add
jmp
push
jg
jge
cmp
dec
and
pushf
xor
out
call
push
outs
and
mov
adc
sub
xor
sbb
outs
sub
popa
pushf
mov
adc
hlt
cmp
lahf
pop
into
jbe
shl
pcmpeqb
dec
or
or
dec
add
nop
push
inc
or
and
outs
xor
div
adc
sbb
nop
jo
xchg
enter
jle
das
cmp
mov
stos
fwait
test
sbb
mov
dec
cld
out
fnstsw
call
enter
imul
out
push
loop
test
(bad)
sar
pop
inc
sub
outs
lahf
mov
arpl
(bad)
jns
xchg
icebp
ficomp
push
xor
jo
test
jno
dec
inc
push
push
xchg
mov
sbb
pop
outs
push
out
popa
sub
(bad)
xchg
adc
pop
enter
xor
add
mov
js
mov
and
jbe
mov
mov
ret
loop
fcom
mov
pop
lock
cmp
bound
es
inc
push
dec
ins
mov
scas
outs
adc
clc
out
gs
lahf
stos
leave
rep
xchg
in
dec
add
sbb
mov
ror
hlt
xchg
pop
jb
in
pop
leave
or
aad
sbb
or
jb
pop
(bad)
mov
jmp
dec
add
lds
and
cwde
or
cmc
daa
lods
into
sbb
inc
js
dec
add
movs
int
into
fild
gs
push
mov
push
out
jmp
popa
push
retf
arpl
add
add
std
rcr
cmc
cld
je
jmp
xor
mov
push
push
mov
fwait
add
sub
fisttp
jmp
cmp
and
ja
(bad)
sti
add
inc
pusha
push
xor
fcom
sub
ror
scas
sar
mov
inc
jmp
pop
push
(bad)
in
ud2
mov
mov
xchg
and
mov
jb
mov
aad
test
xor
(bad)
push
out
arpl
aad
hlt
fisttp
retf
sbb
call
mov
xor
lods
ja
imul
pop
push
sbb
xor
push
adc
fcmovb
ja
pop
nop
mov
inc
(bad)
pop
xchg
xor
cmc
sub
repz
fisubr
jno
cmp
ret
hlt
add
popa
pop
fldcw
(bad)
pop
xchg
pop
lahf
adc
push
fsub
scas
mov
loop
jg
outs
movs
repz
xchg
cld
adc
fucomi
leave
in
cld
adc
sub
out
sub
fistp
sub
cmp
ror
sbb
mov
xor
mov
cmp
icebp
jp
popa
or
lahf
sub
out
test
pop
out
adc
hlt
fdiv
neg
imul
pop
xchg
cdq
test
cmps
fs
hlt
pop
jns
add
cmp
bound
mov
lods
movs
mov
das
pop
cld
sti
sub
retf
jb
cmp
push
adc
mov
cmp
mov
fild
mov
mov
out
lea
jne
sbb
pop
ja
shr
add
sbb
xor
pop
mov
pop
mov
and
(bad)
call
jle
retf
sub
mov
(bad)
sbb
lods
aaa
mov
xor
jl
jns
iret
lahf
gs
or
bound
out
aas
adc
pop
vsubpd
add
mov
in
push
test
mov
xor
dec
inc
push
shr
xchg
out
pushf
jmp
inc
lods
pop
popf
test
out
repnz
mov
xor
mov
test
pop
inc
jnp
push
or
jmp
iret
je
arpl
and
mov
push
int3
dec
lods
inc
pushf
ss
aad
jge
pop
xchg
or
arpl
xchg
dec
sbb
mov
fwait
pop
call
push
inc
jo
xlat
xlat
les
mov
test
fld
bound
movs
xor
push
(bad)
clc
mov
xchg
add
or
and
and
sub
in
xor
jge
lods
iret
mov
adc
sub
jg
ins
mov
mov
jmp
adc
inc
sub
test
jno
cld
push
push
jb
and
cwde
adc
(bad)
stc
imul
mov
mov
sbb
aas
xchg
les
jg
lahf
shr
rcl
je
lea
cmp
push
pop
jns
hlt
retf
jno
scas
mov
les
adc
jbe
push
sbb
(bad)
pop
pop
and
fadd
std
fcmovbe
enter
ds
iret
dec
mov
sub
js
dec
ins
inc
mov
repnz
in
mov
push
dec
jge
pushf
cmp
loopne
leave
xlat
in
mov
sbb
jmp
jge
mov
mov
repnz
mov
jae
or
xchg
sbb
push
stc
xchg
sbb
mov
retf
cli
aas
jp
out
enter
fcmovbe
lods
rcl
xor
je
shr
cwde
aas
arpl
scas
enter
xor
dec
jb
adc
mov
jp
rcl
mov
inc
cli
sub
pusha
dec
lds
pop
pop
or
inc
aaa
dec
jb
scas
in
repz
jno
mov
pop
(bad)
enter
dec
loopne
nop
sahf
push
sti
iret
scas
or
inc
sbb
xchg
mov
repz
xor
cmp
sbb
add
sbb
imul
push
mov
repz
nop
mov
dec
cld
adc
nop
mov
or
push
mov
push
sbb
call
jecxz
mov
adc
pop
xor
test
and
dec
mov
jae
jo
add
or
neg
push
pop
adc
add
push
and
add
push
xor
or
lahf
xor
(bad)
das
pop
popa
mov
pop
jle
and
cmp
or
cmp
xor
mov
adc
mov
inc
mov
test
lock
pop
push
add
dec
sbb
xchg
push
lock
sub
sbb
std
popf
arpl
push
call
push
mov
xchg
movs
cmp
add
in
jecxz
pop
cmp
pcmpeqb
mov
movs
adc
mov
(bad)
(bad)
aad
mov
call
test
js
arpl
cs
leave
push
mov
push
mov
bound
cs
out
add
(bad)
(bad)
cmp
iret
lea
mov
push
xchg
lods
pop
push
pusha
imul
movs
stos
mov
fwait
xor
ret
leave
ds
mov
dec
sub
cmp
jle
sbb
push
into
addr16
sub
dec
jne
add
popa
and
ins
lea
sub
retf
retf
ja
sbb
loop
ret
mov
(bad)
leave
shl
int3
cs
dec
dec
push
mov
adc
xchg
repnz
ss
inc
rol
xor
test
adc
push
test
jo
adc
sub
inc
inc
pop
dec
cmp
ror
mov
jae
push
dec
adc
and
shl
mov
lea
cmp
int
mov
sti
push
jecxz
loopne
cmp
sbb
push
lods
rcl
or
scas
aaa
sahf
lea
stc
daa
mov
out
fxch
pop
aaa
aaa
mov
imul
adc
inc
mov
inc
das
cmp
mov
mov
and
das
sub
push
add
dec
outs
push
xchg
sbb
push
pop
ins
int
or
inc
stc
mov
js
ja
jne
cmp
out
jns
push
dec
scas
je
dec
jne
dec
push
add
add
mov
sub
inc
jl
aas
loop
add
hlt
push
scas
sub
cli
mov
jns
movs
out
xchg
mov
das
pop
stos
add
int
call
andps
adc
(bad)
jl
xor
lods
dec
imul
mov
and
pop
imul
mov
ss
dec
mov
mov
or
repnz
push
hlt
mov
out
or
loop
or
cwde
adc
loopne
int3
int
mov
cld
jg
hlt
dec
retf
jne
mov
mov
push
pop
pop
(bad)
je
lods
push
push
xor
dec
pop
mov
mov
push
jmp
xlat
jns
ss
or
inc
outs
mov
jnp
adc
and
cmp
mov
inc
push
stos
mov
sbb
sub
xor
(bad)
mov
fld
mov
mov
jle
or
fst
das
lock
or
shl
pop
ds
enter
inc
int3
cmps
mov
scas
inc
dec
xchg
xchg
ror
pop
call
gs
aad
lock
xchg
enter
dec
popa
cli
inc
mov
add
sbb
dec
xchg
mov
jge
(bad)
outs
jp
shl
cdq
fdivr
test
adc
adc
addr16
mov
fcmovb
je
cmp
or
lods
mov
pop
cmp
sti
pop
std
jbe
(bad)
out
xchg
pop
xchg
push
xor
(bad)
sub
xchg
mov
sub
fwait
push
ret
or
shl
add
lods
inc
jns
xchg
pop
add
mov
ror
sbb
sub
or
jbe
add
gs
xchg
(bad)
lock
loope
mov
and
ror
cmp
or
mov
test
jle
das
or
xchg
dec
enter
retf
sti
std
movs
cmp
loopne
and
pop
sar
hlt
push
push
loopne
jbe
jo
fstp
mov
pop
add
imul
cmps
add
pop
or
adc
mov
std
aas
xchg
cmps
stc
xlat
shl
jg
es
arpl
fadd
data16
jg
lea
leave
call
ficom
add
dec
mov
lds
cmc
bnd
inc
xchg
add
test
push
(bad)
js
cli
lea
cs
(bad)
iret
sub
rcl
and
ja
rcr
pop
(bad)
adc
mov
not
cld
jmp
jge
dec
ja
cmps
movs
call
add
sub
(bad)
push
cmc
inc
mov
adc
sbb
dec
pop
outs
mov
movs
mov
mov
lahf
jne
pop
sar
xchg
xchg
out
sbb
repz
loope
inc
data16
and
xchg
inc
outs
cwde
pop
fcmovnu
sahf
mov
add
and
ret
inc
sub
mov
jp
jp
mov
push
(bad)
(bad)
pop
cli
in
xchg
sub
sbb
repz
into
add
fisub
cmp
cmp
in
xor
aam
imul
mov
mov
add
dec
cmp
jne
push
ret
outs
push
cs
mov
pusha
xor
cld
mov
inc
fld
sar
jbe
imul
dec
lods
xchg
mov
loope
loopne
xchg
mov
adc
xchg
(bad)
(bad)
mov
in
loope
pop
bound
mov
mov
jns
imul
adc
xor
sahf
mov
shr
in
fnstsw
or
pop
movs
xor
adc
mov
sub
pusha
into
pop
les
daa
test
mov
inc
jno
push
nop
mov
outs
cld
sub
in
lea
or
repnz
or
jecxz
psadbw
imul
xor
fwait
lods
xor
es
dec
adc
je
cmp
add
sbb
retf
push
cs
xchg
jnp
int3
clc
mov
jno
mov
fistp
adc
fidivr
ret
jp
sbb
outs
pop
fbld
mov
pushf
or
and
add
jp
mov
push
push
aam
dec
loopne
inc
adc
inc
inc
cmp
or
data16
cdq
ins
mov
cmps
(bad)
gs
jmp
cdq
bound
mov
ja
mov
mov
or
sahf
xchg
icebp
mov
inc
push
adc
dec
out
xchg
daa
or
repnz
or
fdivr
loopne
shl
mov
xor
sub
cs
mov
xor
(bad)
pop
cmp
xor
mov
xchg
xchg
mov
xchg
les
xchg
adc
pop
call
aam
cmp
scas
adc
je
enter
(bad)
daa
aaa
mov
xor
xchg
add
cmp
mov
mov
or
xor
popf
repz
mov
shl
les
sub
xlat
mov
shl
or
ret
icebp
jge
lock
outs
retf
push
mov
stos
out
sbb
xchg
or
stos
inc
mov
push
scas
cmp
cld
sar
cmps
scas
push
add
or
sahf
aad
and
mov
mov
les
xor
cwde
scas
loopne
enter
jns
push
or
push
cmps
inc
out
jmp
enter
mov
xor
pop
push
or
retf
and
mov
jns
or
enter
stos
(bad)
out
mov
and
adc
fsubr
mov
rcl
xchg
xchg
sub
ds
out
mov
adc
xor
pop
mov
fnstcw
xchg
jnp
jo
in
and
inc
(bad)
and
push
mov
mul
dec
or
xchg
daa
mov
pop
xchg
dec
(bad)
mul
inc
and
jecxz
cmp
cmps
fiadd
rcl
xor
mov
aam
jne
mov
pop
lock
xchg
push
jnp
(bad)
mov
test
xchg
xor
push
jmp
xor
loopne
ds
sub
mov
cld
xor
mov
sahf
ret
mov
rol
loopne
js
aas
mov
push
sahf
into
cmovns
std
pop
push
cmc
add
sub
mov
sbb
movs
sti
mov
cmp
ds
and
aas
jns
dec
int3
pop
sahf
xchg
sbb
(bad)
and
aaa
inc
sub
enter
sub
inc
ins
push
adc
fmul
(bad)
fst
ror
sbb
imul
mov
push
jge
adc
popf
pop
inc
(bad)
push
jecxz
in
sub
mov
adc
fiadd
adc
and
call
stos
jno
sbb
sbb
add
mov
mov
popf
lods
adc
mov
ret
add
add
retf
mov
fdiv
cmp
lods
in
mov
ds
jne
ret
jmp
cmps
(bad)
retf
idiv
sti
imul
mov
sbb
jno
adc
jb
dec
shr
repz
sbb
sbb
inc
cmp
ins
jmp
addr16
sub
test
push
imul
push
cdq
pop
out
jl
je
mov
dec
jb
cmp
add
mov
jmp
push
outs
pop
and
sbb
and
fcom
push
xchg
sbb
lds
sbb
dec
mov
jae
cmp
or
dec
adc
pop
adc
dec
jnp
leave
jge
inc
xor
dec
push
xor
mov
clc
push
or
lods
add
call
lahf
ror
xchg
in
cmps
ficom
xchg
sub
or
dec
jge
aaa
cld
push
and
rcr
ret
psrlq
push
ror
sbb
push
scas
gs
cs
pop
push
pushf
je
jno
cmp
pop
add
aas
xchg
xchg
ins
inc
pusha
fldln2
cmp
mov
jecxz
sahf
icebp
and
mov
fldcw
cmps
shr
jnp
push
mov
out
jp
(bad)
push
push
not
outs
xchg
cmp
aad
mov
cmps
sbb
sti
enter
ud2
repz
pop
cmps
adc
adc
push
ja
daa
bound
in
jp
test
call
mov
iret
push
stc
icebp
xor
pop
pop
jecxz
jge
out
cmp
inc
not
gs
call
fcmovbe
jnp
outs
jge
cmp
(bad)
or
stos
push
dec
push
int
cdq
jae
cmc
push
iret
cmps
adc
mov
jmp
out
call
sub
(bad)
(bad)
cmp
loopne
cs
cmp
push
inc
clc
les
sbb
mov
outs
lods
fisub
jecxz
(bad)
jb
aam
jle
jns
call
hlt
and
inc
shr
jge
(bad)
frstor
mov
cmps
daa
aas
loop
add
inc
mov
repnz
lods
xchg
mov
imul
aas
sub
jmp
mov
fnstcw
scas
cmp
out
fadd
mov
xor
hlt
xor
dec
lock
mov
lahf
fdiv
push
dec
sti
movs
lahf
jmp
int3
test
adc
repz
ss
push
mov
sbb
nop
mov
lods
push
adc
test
div
fsubrp
push
inc
scas
mov
mov
push
out
and
add
mov
mov
aam
pop
push
fwait
jmp
sbb
mov
mov
and
sbb
addr16
(bad)
(bad)
sbb
xchg
mov
sub
leave
rcl
pop
mov
dec
inc
push
xor
pop
and
pushf
dec
mov
adc
dec
sub
mov
nop
mov
sub
push
jno
dec
push
outs
prefetch
lock
sub
out
jb
daa
mov
dec
xor
or
pushf
mov
pop
sub
dec
les
pop
jo
(bad)
arpl
lods
loop
jae
jecxz
dec
mov
adc
adc
mov
int
and
add
fucomi
jmp
aam
popa
fimul
pop
xchg
xor
dec
add
cdq
test
adc
(bad)
sub
test
cs
std
push
scas
sbb
or
stc
mov
sbb
push
loopne
inc
and
xor
test
xchg
jb
outs
push
add
sar
inc
pop
xor
addr16
(bad)
(bad)
jnp
pop
sbb
pop
adc
xor
frstor
mov
pop
cmps
xor
rcr
faddp
pusha
jmp
popf
retf
movs
and
sti
cdq
jge
and
(bad)
mov
jp
(bad)
(bad)
lds
out
mov
xlat
mov
xlat
pusha
xor
cdq
cmp
xor
or
xchg
loop
int
pop
mov
inc
sti
mov
and
and
sub
jge
popf
lahf
jno
shl
add
mov
cmp
mov
sbb
sub
jecxz
pop
sbb
cmc
push
jb
(bad)
jns
(bad)
test
and
int
cmps
out
push
xchg
sbb
pushfw
imul
pop
loopne
enter
lock
adc
xor
inc
mov
jne
sahf
dec
and
add
shl
lock
adc
mov
mov
or
(bad)
mov
xor
mov
movs
in
arpl
bound
cmps
push
pop
test
pushf
cmps
xlat
fwait
jae
add
cmp
xor
push
int
in
mov
pop
lds
pop
in
gs
jp
push
mov
test
jl
inc
js
add
and
out
cmp
or
xor
call
fdiv
pop
pop
(bad)
jp
mov
ins
mov
xor
mov
inc
jmp
arpl
mov
xor
mov
mov
mov
dec
mov
sub
sar
push
jno
jl
mov
sub
(bad)
pop
jb
int
in
sbb
mov
sub
jnp
push
dec
call
das
push
jnp
je
mov
dec
inc
inc
ds
push
push
in
sbb
rcr
push
in
mov
repnz
cld
dec
mov
xor
adc
inc
ins
sar
xchg
cmp
in
inc
stc
test
cmc
das
ja
push
push
xor
into
cmp
pop
test
in
xlat
ins
jg
outs
lock
mov
(bad)
into
dec
push
xor
cmp
push
mov
sti
push
mov
push
aam
xor
inc
xchg
lock
out
mov
cmp
fwait
jecxz
mov
inc
into
mov
xchg
pusha
in
mov
add
push
stc
mov
dec
inc
cs
pop
mov
ret
cld
jb
test
inc
lods
cld
jo
loope
pop
lock
cs
movs
jo
sar
mov
(bad)
push
int
iret
(bad)
stc
pop
jbe
popw
mov
cmp
fmul
rol
cmp
or
scas
inc
push
mov
fisttp
sbb
xor
inc
int3
jns
aaa
hlt
cld
adc
adc
addr16
out
sub
mov
stc
inc
sub
add
sub
(bad)
movs
fcomp
scas
sub
je
aam
test
xor
pop
int3
sahf
popf
inc
addr16
xchg
cmp
lea
repz
std
sbb
xchg
jge
jbe
sbb
adc
jle
xor
faddp
jmp
jns
rcr
aad
call
call
dec
or
inc
sbb
mov
inc
mov
(bad)
push
push
mov
push
cwde
add
stos
jne
adc
mov
int3
sbb
and
stc
add
mov
mov
cdq
cwde
cmc
shl
or
jmp
sub
dec
sub
and
fild
out
jno
jno
xchg
mov
aas
aaa
aaa
fbstp
icebp
jge
inc
test
jae
xor
cmps
sub
nop
dec
int3
adc
jbe
imul
scas
repnz
xchg
int
aaa
inc
xchg
in
aas
push
push
xor
add
sub
inc
ja
repz
and
dec
xor
in
or
sbb
ret
bound
mov
cmp
dec
cs
fisubr
clc
fild
push
fimul
mov
fld
sbb
pcmpeqb
cmps
push
jecxz
aam
les
mov
rol
dec
mov
adc
and
sti
imul
mov
out
add
je
add
aaa
add
mov
jge
and
sub
popf
cmp
in
outs
sub
call
lds
xchg
push
xchg
arpl
(bad)
cmp
fwait
mov
cmc
add
pop
or
gs
inc
std
jmp
add
sbb
shl
data16
cwde
aam
dec
in
jmp
mov
aam
imul
idiv
mov
dec
sub
sbb
dec
or
cmps
mov
pop
enter
mov
mov
(bad)
loop
call
push
fsubr
daa
jp
out
sbb
inc
jecxz
mov
sti
mov
nop
mov
add
aaa
sub
cmps
xor
mov
ins
and
(bad)
sub
and
xlat
clc
or
lds
cwde
fisubr
and
mov
sub
pop
or
jmp
jbe
lahf
inc
fidiv
jge
je
inc
std
and
inc
push
sub
stc
outs
mov
cmp
sbb
xchg
mov
inc
jmp
rcr
adc
mov
jecxz
or
mov
sbb
(bad)
fcmovbe
popa
xor
out
jo
sahf
sbb
es
gs
cmps
les
(bad)
and
ss
xchg
pop
test
popf
and
lods
inc
sbb
mov
cmps
popf
test
test
ret
adc
scas
pop
sub
lea
scas
sti
bnd
leave
xor
mov
jb
test
cwde
cs
shl
add
jnp
inc
sbb
xchg
add
add
xor
shr
push
jno
pop
mov
sub
fsub
sub
inc
loope
or
addr16
mov
inc
loop
stos
(bad)
and
cmp
pop
in
pop
jb
jg
or
jnp
sbb
cwde
aas
scas
mov
jge
stc
push
(bad)
inc
dec
inc
lods
leave
iret
bound
test
pop
repnz
cmc
inc
add
jns
sahf
jle
xchg
sub
jo
mov
icebp
icebp
gs
inc
outs
jg
dec
add
mov
adc
or
repnz
add
sub
mov
jbe
jae
sar
mov
cmps
inc
std
jl
lods
sub
push
mov
sti
mov
mov
addr16
std
add
jl
jl
xchg
test
xor
pop
(bad)
inc
aas
add
jmp
gs
jbe
cmps
jae
and
jnp
jnp
arpl
lds
das
inc
cmp
pop
nop
bound
dec
adc
mov
xchg
push
mov
mov
sub
ss
popa
rcl
mov
pushf
rcl
sub
enter
sub
adc
fnstsw
fwait
mov
jp
pop
inc
and
fs
mov
retf
cmp
push
fwait
iret
and
out
add
cmp
push
mov
test
in
adc
cmp
jge
shr
push
cld
fst
and
mov
movs
sub
xchg
hlt
jbe
lahf
or
jb
es
mov
cdq
add
fidivr
out
pushf
cli
aad
add
jnp
loopne
jb
lea
test
jp
xchg
mov
mov
es
mov
ja
test
(bad)
stos
mov
lods
std
and
pop
pop
inc
into
adc
adc
or
out
pop
mov
rcl
xor
push
cwde
cmp
pop
gs
add
scas
les
iret
push
adc
ffreep
pop
fst
push
rcr
aad
loop
jb
daa
loopne
(bad)
mov
ja
pop
xchg
mov
lahf
cdq
(bad)
or
push
jle
cwde
cs
test
test
adc
scas
or
movs
call
jl
enter
xor
jns
or
cmp
out
mov
pop
stos
xchg
fwait
add
pop
cmp
add
aas
mov
(bad)
push
pushf
xor
repnz
push
test
mov
mov
and
nop
bound
outs
sbb
xor
ins
cld
das
retf
push
xchg
fld
push
pop
xchg
je
hlt
pushf
mov
rcl
mov
cli
or
push
cdq
adc
call
or
jmp
inc
retf
jb
aam
mov
adc
or
cmp
(bad)
sub
inc
ss
scas
pusha
bound
xor
scas
(bad)
(bad)
out
push
jl
xor
shl
fldcw
(bad)
cld
arpl
pop
ret
push
mov
arpl
test
inc
mov
xchg
mov
adc
adc
bound
mov
mov
fwait
lds
mov
in
imul
test
push
mov
or
cmp
imul
dec
shl
mov
push
mov
xlat
jno
or
and
xor
retf
jecxz
stos
jge
mov
mov
or
shl
ret
dec
mov
lods
in
mov
aas
xor
mov
dec
and
pop
mov
mov
movs
jle
fistp
repz
dec
ret
mov
mov
sbb
sub
movs
out
gs
mov
mov
mov
fsubr
aaa
mov
iret
fstp
inc
jo
scas
repz
sbb
xchg
jmp
push
mov
jecxz
cmp
retf
int
sub
lock
leave
call
sub
push
ss
dec
pusha
jb
xchg
and
jae
sahf
xchg
xchg
cmp
sbb
push
xchg
ins
or
loope
sti
xlat
push
inc
pop
(bad)
jne
int3
inc
das
pop
push
jbe
(bad)
ffreep
out
jl
cli
fidiv
es
and
lods
sbb
inc
ins
lods
lahf
or
lods
(bad)
repnz
fbstp
push
sahf
dec
scas
adc
pop
imul
inc
jmp
jns
jb
outs
xchg
cmps
mov
adc
cmp
sti
mov
mov
mov
dec
aad
and
(bad)
daa
and
xchg
dec
cmps
and
push
push
ins
jo
mov
icebp
lahf
cli
inc
into
mov
mov
sbb
ror
int
mov
(bad)
jl
(bad)
out
xor
lock
nop
cmp
(bad)
or
inc
jle
js
xor
sbb
mov
jg
push
(bad)
jecxz
dec
scas
cli
es
jg
jo
push
pop
(bad)
inc
sbb
or
pop
push
lea
jo
pusha
pop
xor
jg
in
sub
xor
push
push
xchg
imul
mul
fisub
xchg
call
add
jnp
repnz
lods
add
add
int
arpl
inc
dec
cli
fmulp
mov
xchg
cmp
or
cmp
js
stos
and
lods
pop
jae
cmp
push
dec
ins
jae
xor
or
or
stc
jbe
ret
mov
mov
dec
je
fidivr
outs
rol
xlat
push
and
jmp
sub
cli
movs
ret
sub
jo
or
or
lahf
adc
dec
push
or
adc
mov
call
adc
xchg
(bad)
clc
sahf
fs
not
jmp
iret
int3
cmp
mov
xor
fwait
arpl
xchg
mov
push
mov
push
(bad)
ins
xlat
jbe
int
ins
cwde
in
mov
xlat
sbb
sbb
ficomp
rol
lds
(bad)
movs
cld
dec
dec
stos
pop
mov
fistp
in
xor
fdivp
and
imul
jmp
lods
js
inc
retf
les
test
dec
das
cmp
mov
or
test
fst
test
out
push
mov
out
pop
push
std
loopne
stos
pop
push
aam
cmp
xchg
(bad)
retf
jno
mov
push
call
and
scas
repz
sbb
adc
mov
rcr
jecxz
sbb
push
jp
dec
xchg
inc
aam
inc
or
test
inc
sar
xchg
movs
jmp
fnstenv
(bad)
cwde
add
jne
loope
xor
(bad)
mov
or
or
inc
lods
out
cmps
movs
or
rol
sub
das
outs
or
paddsb
cmp
scas
vmread
sbb
dec
ret
icebp
shr
xor
movs
aas
mov
push
mov
jle
movs
sub
jl
inc
and
pop
mov
ja
stos
cs
cmp
addr16
push
adc
cmps
fiadd
ds
fnstcw
sahf
dec
fwait
sti
add
fs
dec
in
push
scas
int3
adc
or
mov
sbb
ror
imul
and
arpl
div
test
jp
mov
imul
pop
in
vmovlps
pop
loope
jbe
xchg
les
sbb
xor
ss
mov
sub
adc
cld
loopne
jae
int3
jecxz
test
ins
outs
(bad)
and
xchg
mov
and
bound
loopne
aam
mov
cmp
(bad)
push
xchg
pop
xor
pop
mov
stos
cmps
lahf
sbb
clc
test
repnz
out
arpl
das
dec
rcr
lds
cmps
xchg
loopne
(bad)
mov
sub
mov
ins
and
fst
fdiv
adc
mov
push
sub
push
add
hlt
sbb
stos
sbb
and
test
sahf
mov
mov
mov
jne
ror
xor
dec
lods
aaa
in
loopne
sub
adc
ins
inc
dec
xor
call
dec
sub
cmp
lods
xchg
es
mov
out
xor
jg
inc
cmp
mov
mov
out
pop
std
sbb
add
jmp
jae
pop
mov
sbb
fldcw
or
(bad)
enter
stc
inc
dec
and
mov
movs
jb
daa
push
fld
xor
bound
dec
jmp
push
adc
(bad)
sbb
(bad)
push
or
fwait
out
add
adc
add
push
or
shr
(bad)
mov
sbb
cmp
nop
adc
sbb
(bad)
ds
lods
and
fimul
clc
scas
out
adc
mov
mov
add
jecxz
sbb
adc
scas
imul
inc
imul
sar
fdiv
pop
xor
stos
ins
sbb
int3
sub
xchg
ja
movs
in
and
xchg
hlt
call
lods
inc
or
pop
test
idiv
jg
ins
cwde
dec
rcpps
cmps
jp
out
pop
adc
xor
mov
adc
retf
out
jbe
mov
cs
shr
mov
mov
pop
sub
outs
neg
mov
stos
test
and
fst
loopne
cdq
or
sub
shl
loop
and
mov
add
sbb
(bad)
aad
loop
jbe
push
mov
xlat
xchg
lahf
call
fucomip
iret
in
mov
cmp
inc
push
pop
call
dec
xor
mov
repnz
sub
jmp
mov
fisub
in
dec
mov
pop
loop
stos
xchg
fdiv
int
adc
aam
jae
fbstp
fwait
pop
int
mov
cmp
aas
retf
out
jns
daa
jnp
in
cmps
gs
xor
push
adc
movs
loope
add
addr16
and
int3
and
clc
jmp
xchg
rcr
ret
mov
sub
mov
sbb
(bad)
aam
push
out
shr
test
push
dec
enter
ds
stos
jle
daa
inc
jae
xor
and
stc
xchg
mov
inc
and
in
and
retf
cmps
fwait
push
ds
push
and
xchg
push
mov
popa
mov
ds
dec
and
shr
lahf
cli
xor
enter
xchg
pop
push
inc
adc
rol
shr
lods
mov
inc
out
ret
xchg
(bad)
xchg
dec
mov
clc
fwait
adc
sub
mov
hlt
ror
adc
jmp
xchg
mov
sub
retf
sbb
imul
push
add
push
mov
xchg
movs
add
scas
pop
fsubr
cwde
iret
in
push
fwait
and
or
sbb
shr
int3
xchg
fisubr
neg
clc
push
or
xchg
mov
lods
imul
popf
mov
sbb
sub
or
cli
push
jl
dec
push
pop
gs
lods
xor
sahf
inc
lds
dec
mov
inc
jp
mov
ds
pop
cmps
and
mov
std
add
pop
popf
aas
lods
lahf
out
stc
stos
enter
mov
push
or
cmp
sub
std
rcr
jmp
test
sbb
mov
pop
mov
pusha
and
jno
cmp
stos
cwde
enter
psubusb
mov
xchg
test
jno
adc
jo
mov
add
sahf
jns
pop
hlt
(bad)
push
les
sub
je
push
stos
cmp
je
jns
jnp
push
lods
jno
(bad)
lods
mov
call
inc
retf
lds
jne
(bad)
add
add
mov
test
lock
popa
in
(bad)
adc
jmp
jb
xchg
sti
jge
das
inc
xor
mov
ja
pop
mov
or
or
sub
clc
arpl
push
int3
loopne
jecxz
add
mov
sub
inc
pop
(bad)
jae
jo
(bad)
(bad)
shl
push
ins
dec
push
xor
fsub
sahf
pop
jl
push
js
icebp
addr16
cli
add
fadd
cmps
fucomp
pop
movs
out
mov
adc
jl
xlat
mov
ja
sub
enter
inc
ficom
aam
(bad)
aas
xor
pop
dec
inc
mov
dec
in
xchg
fistp
enter
cmp
jl
call
retf
movs
repz
inc
pop
test
cwde
lea
leave
ret
mov
and
bnd
pop
lock
rcr
inc
push
loopne
mov
es
pop
(bad)
mov
enter
cmp
dec
test
jmp
or
lahf
fisub
push
rdpmc
or
pop
inc
mov
pusha
repnz
xchg
mov
or
or
add
test
dec
sbb
sar
inc
mov
xchg
out
pop
sub
jnp
loope
fcmovb
add
aaa
jo
xchg
fs
shl
in
sbb
and
or
add
or
(bad)
jmp
sbb
ja
sbb
push
xor
cmp
retf
mov
rol
lea
leave
mov
or
mov
mov
sbb
xor
xor
and
push
in
je
cli
mov
cmc
fld
cmps
mov
pushf
loopne
dec
and
xor
cmp
jnp
xor
mov
adc
cld
shl
xchg
movs
dec
mov
pop
sub
(bad)
and
iret
jmp
(bad)
mov
popa
lds
sbb
push
pop
push
cwde
mov
cwde
fist
mov
ds
xchg
xor
fld
daa
xor
dec
xor
push
ret
inc
stc
arpl
adc
fmul
mov
sub
cmp
sahf
mul
(bad)
push
xchg
test
adc
cmps
aaa
mov
mov
(bad)
ins
jecxz
pop
adc
xor
pop
xchg
frstpm(287
mov
jg
xlat
jg
cmp
aam
ss
mov
mov
cmps
std
lods
and
test
cmps
xchg
stos
push
das
cs
cmp
and
aaa
inc
and
xor
test
(bad)
sbb
jecxz
int3
test
clc
test
xor
dec
bswap
sub
pop
fscale
add
and
scas
test
seto
cmp
push
loope
cs
cmps
jl
fmul
sub
dec
push
or
sub
xor
adc
mov
cli
push
push
mov
cmp
fdiv
mov
in
das
cmc
out
mov
arpl
pop
jp
mov
xor
pop
mov
add
fisubr
sub
sahf
xchg
or
pop
into
push
jae
ror
loop
loop
mov
and
and
mov
push
jno
mov
(bad)
mov
pop
movs
popf
ret
sbb
and
lds
imul
xchg
mov
push
cdq
rdmsr
in
pop
and
and
sub
pop
mov
pop
pushf
adc
icebp
jmp
mov
lods
sahf
and
std
std
gs
test
or
push
retf
mov
or
int3
cli
push
mov
mov
iret
mov
adc
add
sub
in
fadd
cmps
and
pop
lock
(bad)
dec
sub
ins
sahf
aaa
inc
pushf
fmul
(bad)
jns
sub
movs
inc
fsubr
stc
ror
push
sar
in
hlt
in
js
push
sub
or
mov
adc
sbb
(bad)
jnp
inc
xor
cmp
add
mov
sbb
in
scas
mov
xor
mov
dec
xor
stc
jmp
je
adc
fsubr
cmc
inc
(bad)
gs
addr16
pop
mov
imul
xlat
scas
(bad)
mov
in
aaa
and
rol
dec
jo
pop
stos
sbb
mov
pusha
fldenv
xchg
sbb
gs
(bad)
adc
cmp
mov
call
pop
pop
jnp
ja
stc
mov
xor
jp
mov
jecxz
(bad)
mov
jmp
ret
push
add
jl
pop
int3
mov
mov
add
in
(bad)
not
(bad)
sbb
pop
or
pushf
add
mov
dec
fstp
adc
dec
sub
xor
dec
arpl
xchg
(bad)
(bad)
sbb
test
inc
mov
mov
ffreep
mov
(bad)
int3
int
add
movs
test
inc
addr16
mov
jnp
ins
and
add
aas
(bad)
sbb
push
fmul
scas
idiv
jecxz
sub
addr16
fisttp
mov
call
into
or
ficomp
jp
adc
xchg
aad
sub
lods
lods
imul
adc
lock
mov
ret
xor
lock
push
gs
ss
loopne
dec
inc
in
imul
adc
movntq
mov
fnsave
popa
cdq
and
js
and
test
inc
jnp
retf
cmp
mov
mov
jle
retf
pop
xchg
inc
mov
hlt
jae
inc
ins
ins
(bad)
cli
lods
clc
xchg
mov
iret
adc
lea
ror
les
pop
rcl
ja
xor
ja
stos
sub
cmps
mov
ret
sbb
lea
mov
enter
movs
test
cmp
sbb
cld
jmp
adc
in
and
jp
out
or
icebp
pop
popf
pop
ficom
xor
mov
and
imul
lods
test
inc
out
into
push
icebp
movs
fs
xchg
jg
mov
ja
call
mov
and
ror
ins
sbb
xor
cmp
xor
lods
inc
dec
sbb
daa
cwde
int
jp
sub
movs
lods
mov
xor
in
push
test
xor
retf
jne
jae
fwait
loopne
cmps
jecxz
push
pusha
imul
dec
jns
add
call
jb
or
ja
xor
sub
es
adc
and
repnz
neg
dec
dec
sub
and
cli
mov
aaa
test
pop
mov
fiadd
inc
push
retf
cmc
xor
push
shl
xchg
ret
sub
and
stos
mov
and
add
cmp
xor
ret
xchg
inc
add
dec
mov
jbe
add
xor
cmp
mov
ins
xlat
cld
gs
popa
push
pop
sub
out
aad
or
pop
icebp
mov
jg
or
jge
add
and
mov
stos
gs
gs
pop
es
ins
shl
push
xchg
sub
xchg
out
mov
shl
dec
mov
add
mov
dec
adc
xchg
loope
jg
scas
sub
out
mov
ffree
ret
bound
or
xchg
cwde
shr
mov
or
push
cmps
std
mov
push
cmp
pop
clc
inc
ret
mov
mov
and
xchg
popf
aad
scas
mov
shl
sbb
cli
xchg
mov
adc
cmc
jmp
inc
hlt
daa
lds
inc
lods
mov
xchg
dec
iret
sbb
imul
pop
mov
out
mov
fld
out
jno
pop
ins
das
xlat
cmp
xor
jle
and
mov
xchg
aad
xchg
lds
int
aaa
inc
sbb
cld
mov
test
(bad)
leave
call
inc
push
push
ret
test
or
loop
mov
sbb
popf
loope
iret
not
ja
push
gs
mov
sub
lods
pop
xor
pop
in
cmp
push
jecxz
push
(bad)
pop
push
jl
mov
dec
add
pop
(bad)
in
add
out
add
sub
jns
xor
jle
xchg
fwait
test
in
xchg
cmp
popa
jle
mov
lock
xchg
ins
sbb
addr16
mov
jns
je
sub
sbb
push
mov
and
mov
add
movs
push
or
es
push
movs
in
adc
xchg
push
jg
inc
(bad)
scas
xchg
shl
popf
cs
mov
add
ret
jp
mov
rol
nop
in
sbb
or
mov
hlt
mov
iret
adc
sub
inc
xor
pop
iret
mov
xor
mov
or
pop
test
test
inc
sub
adc
add
xor
pop
leave
xchg
enter
jmp
fisub
cld
xchg
int
shr
pop
sub
mov
push
dec
dec
adc
es
add
(bad)
pop
push
pop
sub
arpl
loopne
push
mov
dec
add
movs
jbe
pop
lea
inc
pop
mov
aas
mov
and
mov
cli
stos
sbb
xor
sub
enter
cmp
sub
sub
mov
pop
int3
in
dec
xchg
push
push
dec
test
ins
adc
div
pushf
popf
pusha
shr
icebp
iret
sub
or
dec
test
fwait
sti
jg
mov
pop
pop
sbb
pop
lods
lods
stos
es
sti
daa
mul
or
xchg
xor
mov
movs
push
adc
jbe
leave
inc
test
jmp
fs
sbb
shl
fcom
mov
imul
dec
mov
xchg
hlt
or
imul
in
enter
movs
mov
pop
jae
loop
fstp
xlat
rcl
repz
cwde
ret
xchg
add
sub
mov
pop
mov
dec
loop
lods
mov
stos
retf
push
(bad)
cmc
push
call
shr
jb
dec
fs
aad
pushf
test
jae
(bad)
mov
(bad)
cmc
pop
xchg
xor
pop
hlt
mov
inc
test
pop
mov
loope
xchg
push
push
mov
test
inc
xchg
test
and
push
retf
mov
push
xchg
push
cld
inc
and
popa
inc
test
mov
lahf
xchg
les
sbb
loopne
mov
aam
dec
ds
test
hlt
(bad)
call
iret
aad
jbe
shr
neg
icebp
aaa
add
repnz
clc
movs
rcl
mov
cmps
sbb
fld
add
sbb
test
mov
out
sti
sub
call
pop
(bad)
pop
aaa
std
cmp
mov
inc
mov
pop
sub
in
movs
out
jg
push
sbb
pop
scas
mov
enter
cli
mov
ss
push
test
mov
xor
cdq
push
pop
jle
pop
push
loope
inc
mov
or
(bad)
mov
ins
test
add
ja
adc
ins
mov
pop
(bad)
in
push
in
dec
jle
mov
push
mov
xor
jb
sbb
cmp
lods
mov
fbstp
mov
lds
cmps
stos
dec
and
iret
inc
jno
out
imul
add
xchg
call
test
or
cdq
jbe
frstor
stos
xor
xchg
mul
sbb
daa
lock
out
push
leave
push
sub
mov
clc
das
movs
pop
jp
nop
popf
jns
sub
ret
mov
shl
and
movs
addr16
ret
mov
jg
repz
out
lods
enter
pop
ret
pop
push
stc
sub
jge
nop
cmp
shl
sbb
mov
test
push
clc
pop
imul
out
push
cmp
imul
ds
adc
jge
push
stos
adc
cs
and
pop
inc
dec
mov
(bad)
cs
outs
pop
imul
imul
push
jge
jecxz
sub
mov
pop
or
add
test
mov
xor
in
and
fist
inc
sbb
popa
ret
jbe
xlat
stc
aaa
call
(bad)
fabs
rcr
mov
pop
fmul
fdivr
jmp
adc
iret
mov
clc
aas
ja
sub
mov
es
cmp
stc
jecxz
out
cmps
mov
jl
in
and
pop
adc
dec
mov
xor
call
call
retf
popf
lahf
sbb
ror
push
mov
stc
xor
sbb
mov
xor
fwait
sub
movs
jl
jmp
vmovq
mov
mov
jae
sub
into
sbb
and
add
shl
push
sbb
cmps
xor
in
(bad)
and
mov
popa
test
std
or
sbb
sub
pop
scas
inc
std
push
in
xor
dec
pop
pop
and
push
mov
aas
out
(bad)
cwde
mov
sub
popf
jge
cmps
iret
cli
daa
sar
loop
in
pop
or
adc
leave
push
gs
sbb
push
mov
push
ins
imul
fst
(bad)
lea
pop
lods
mov
scas
into
pop
inc
test
es
jmp
fnstsw
cmp
out
xchg
push
pusha
cmp
repnz
xchg
(bad)
lock
jne
test
mov
adc
lods
add
es
jle
dec
fisttp
jg
pop
ds
pop
das
push
fisub
aaa
lods
mov
hlt
stc
jge
(bad)
xor
popf
xor
jbe
mov
push
xchg
clc
jecxz
mul
sub
pop
es
jbe
retf
test
ror
movs
push
rcl
cmp
fld
jns
xor
outs
dec
retf
shr
arpl
push
mov
test
sbb
inc
xor
shr
sbb
xchg
xor
adc
mov
xor
idiv
push
add
jmp
int3
repz
das
cmp
sbb
and
pop
mov
sub
(bad)
bswap
fild
je
cli
or
mov
in
pushf
mov
lds
and
inc
jbe
les
imul
popa
pop
ret
fnstcw
sbb
sub
xchg
shl
mov
ins
hlt
in
push
cdq
ret
jg
adc
lods
sbb
fucom
sub
or
call
mov
xchg
test
(bad)
mul
shr
or
mov
mov
loop
cmp
(bad)
das
div
fistp
(bad)
adc
fimul
aam
mov
ss
sar
lahf
sbb
jbe
mov
retf
add
push
mov
repnz
das
fcmovnbe
ss
inc
sahf
push
sbb
aaa
xchg
jle
sub
aam
(bad)
and
sbb
js
and
push
setle
dec
arpl
cmp
xor
rol
inc
lods
cmp
dec
jmp
mov
and
in
xor
loope
lods
cmps
lds
mov
add
mov
lock
sbb
in
adc
scas
add
pop
dec
add
mov
cmps
mov
mov
into
push
(bad)
data16
pop
and
cmp
add
enter
jae
inc
int
mov
push
adc
cmp
mov
mov
cwde
imul
mov
sbb
xor
(bad)
or
dec
dec
sahf
rcr
int3
mov
pusha
retf
or
xor
repz
pushf
js
inc
mov
cmp
fs
mov
ret
int3
fldz
inc
js
dec
popf
push
repnz
push
lds
inc
jno
xor
dec
jge
nop
loop
mov
fs
jl
fistp
ds
fld
or
pop
push
mov
xchg
xchg
mov
or
xchg
mov
push
mov
xchg
xchg
cmps
mov
mov
xchg
(bad)
cmp
fist
pop
sbb
xor
es
mov
shl
cdq
clc
mov
xor
push
add
mov
imul
mov
stos
xchg
es
xchg
stc
jno
and
(bad)
sbb
push
dec
sub
sets
clc
sar
arpl
(bad)
scas
add
inc
cmp
adc
sub
stc
mov
bound
and
mov
sub
ja
push
sbb
ins
inc
movs
(bad)
cdq
mov
jmp
inc
cdq
adc
sbb
movs
jne
sbb
je
add
arpl
jns
push
inc
push
sub
push
xor
mov
je
fsubr
push
sbb
lods
push
popa
mov
mov
or
mov
shld
mov
mov
or
js
(bad)
mov
(bad)
fwait
push
outs
fnstsw
movs
adc
and
popf
add
loop
ja
or
mov
fwait
sub
mov
push
leave
add
stos
inc
sbb
and
mov
cmp
shl
bound
addr16
(bad)
fld
rcr
scas
fsub
sub
and
call
in
mov
repz
inc
mov
xor
les
adc
pop
cwde
(bad)
cmp
sahf
bound
ds
call
mov
jne
cmps
loopne
fwait
mov
aad
cmps
sti
(bad)
loope
mov
sub
adc
fistp
pxor
int3
lahf
aad
sahf
xor
iret
pop
cld
call
pop
pop
jb
fwait
out
xor
les
repnz
retf
movs
enter
fwait
sub
push
or
add
loope
shr
nop
call
sbb
cmps
jmp
mov
or
fdiv
pop
imul
cmc
mov
loop
pusha
dec
dec
iret
(bad)
jg
inc
gs
adc
mov
in
ret
or
mov
add
in
(bad)
cld
push
add
sbb
push
pop
aam
or
jmp
(bad)
cs
int3
fs
pusha
ins
push
jecxz
repz
test
add
fdiv
or
(bad)
sub
(bad)
jne
cdq
mov
pop
(bad)
cmp
(bad)
in
cmp
in
clc
iret
nop
push
xchg
cmp
jae
jecxz
out
and
sub
sbb
fld
out
cld
add
cwde
call
cmp
add
sahf
jmp
xor
mov
rcl
jo
dec
loop
mov
retf
es
mov
pop
movs
das
cmps
cdq
cmp
stc
cmc
xor
mov
fmul
cmp
mov
loope
int
mov
pop
(bad)
mov
sub
lds
push
test
xlat
jge
inc
cld
xchg
jmp
inc
cld
fwait
push
xchg
mov
call
popf
mov
pop
dec
lods
imul
cmp
and
cli
out
ss
ds
push
xor
(bad)
or
cld
mov
mov
sbb
and
imul
(bad)
xchg
or
pop
std
call
inc
push
jle
sub
xchg
pop
int3
scas
lock
aad
(bad)
jmp
outs
sub
lods
or
xchg
pop
aas
lods
xchg
xchg
mov
and
ror
xchg
and
add
jo
and
addr16
xor
out
lods
pop
jecxz
loopne
mov
js
sbb
ins
test
dec
(bad)
jns
dec
lock
xor
pop
xor
ror
mov
outs
fadd
into
cld
xchg
push
jns
or
movzx
dec
xchg
or
loope
sti
inc
push
fbstp
adc
xchg
xchg
lods
(bad)
pop
mov
lahf
or
mov
xchg
movs
push
fwait
jbe
lea
pop
lods
je
in
movs
jp
jo
xlat
retf
idiv
xchg
lea
push
popa
jl
test
add
jmp
jp
popf
xchg
add
retf
dec
add
jmp
pop
inc
and
stos
jl
jno
mov
enter
pop
loope
jmp
xor
mov
and
cmps
and
mov
jne
add
scas
inc
push
mov
dec
movs
inc
push
inc
loop
mov
mov
and
mov
add
inc
in
(bad)
mov
xchg
out
dec
iret
mov
ds
xchg
int3
leave
jle
outs
jl
cmp
rol
or
pop
xchg
(bad)
sar
jo
outs
add
pop
jns
push
outs
mov
cmp
cmp
test
fwait
loope
cmps
adc
in
adc
(bad)
repnz
ret
xor
bound
in
lods
adc
sar
pop
out
jbe
or
push
mov
mov
test
in
mov
dec
ret
cdq
call
out
imul
xor
xchg
lock
inc
or
cmove
sub
adc
inc
push
stos
mov
enter
pusha
mov
inc
ins
rcr
fistp
push
test
cmp
fcom
shl
add
pop
inc
sahf
jne
cli
pop
pop
call
mov
in
ins
add
es
mov
inc
push
ret
sub
mov
outs
popa
imul
jns
adc
inc
mov
retf
push
mov
add
(bad)
inc
test
out
and
repz
or
pop
jmp
mov
int3
pushf
cmp
repnz
add
sub
inc
das
xchg
dec
and
mov
mov
mov
mov
push
mov
pop
add
push
mov
retf
add
mov
retf
mov
push
push
mov
dec
sbb
sub
xchg
(bad)
pop
ins
and
mov
pop
icebp
push
push
fwait
sub
mov
cmp
(bad)
inc
fadd
mov
jmp
repz
ja
clc
mov
push
mov
add
ret
es
(bad)
loopne
mov
push
cld
je
and
repz
call
xchg
cmp
mov
jmp
movs
mov
mov
fs
les
mov
jle
push
inc
adc
jecxz
add
inc
retf
shl
or
or
inc
sbb
fistp
sub
call
mov
jb
lock
xor
in
fild
pushf
fst
mov
mov
push
mov
sar
sub
dec
mov
retf
add
and
sbb
ret
mov
mov
mov
sahf
fcmove
jae
push
dec
(bad)
iret
fdivr
int3
stos
call
jae
add
lahf
fisub
and
out
add
push
ja
jge
fst
retf
je
(bad)
cmp
call
hlt
ficom
push
dec
push
lea
or
punpcklwd
(bad)
pop
fistp
fiadd
es
sub
pop
movs
ja
push
xchg
enter
inc
mov
mov
jge
repnz
jnp
or
ds
cmc
mov
fldcw
imul
pushf
outs
mov
(bad)
loope
fstp
xor
sub
xchg
aam
movs
imul
jmp
jmp
jecxz
rol
dec
cli
ret
outs
movs
dec
jno
aaa
in
xor
ss
xchg
jne
cs
or
hlt
or
mov
mov
mov
(bad)
xor
push
add
and
outs
and
fcmovb
sbb
mul
loop
push
pushf
mov
jb
dec
add
outs
sub
pmulhuw
fild
adc
mov
mov
outs
movs
or
fs
jne
cmp
mov
outs
fld
icebp
sub
and
or
loop
fwait
int3
mov
mov
test
dec
adc
shl
adc
aam
xchg
mov
jl
fdivr
mov
es
fwait
mov
sub
ds
or
inc
jmp
sub
sbb
fs
scas
idiv
das
jo
cwde
jmp
inc
icebp
or
inc
out
jae
cmp
test
inc
mov
popf
outs
int
xchg
adc
and
adc
dec
lock
xor
adc
dec
pushf
jecxz
inc
dec
loopne
sbb
mov
mov
xchg
sahf
cmp
inc
xchg
add
jb
movs
mov
leave
ficom
shl
add
dec
shl
ret
or
adc
pop
add
lods
jp
or
cmc
(bad)
jbe
ins
mov
pop
pop
in
out
mov
gs
mov
xchg
leave
mov
leave
ret
or
pop
hlt
inc
shl
adc
mov
pop
pop
call
xchg
sub
or
std
(bad)
mov
inc
out
dec
jbe
mov
add
xlat
inc
call
mov
iret
mov
inc
pop
fsubr
mov
retf
xchg
cli
xor
in
idiv
push
pop
push
nop
in
add
inc
out
cmp
aaa
xlat
out
repnz
aas
(bad)
shl
cdq
mov
push
inc
mov
jno
pop
shl
add
inc
cli
cmp
data16
jecxz
ss
xor
jge
add
cmp
pop
ror
sbb
jmp
cmp
push
ret
inc
movs
push
mov
xchg
sub
push
sub
cmc
mov
sbb
loope
add
in
cdq
mov
je
out
es
xor
lea
cmp
push
lods
(bad)
retf
(bad)
cmps
sbb
dec
outs
xchg
out
daa
(bad)
or
ins
rcl
pop
pop
xor
dec
sahf
test
in
int3
enter
repz
mov
das
jnp
cwde
inc
ds
loopne
sub
fwait
sub
or
int3
sbb
pop
cmps
jb
pop
fstp
cmp
iret
mov
aas
mov
(bad)
std
aad
movs
imul
lea
adc
dec
idiv
cmp
shl
imul
and
ficom
je
retf
inc
xlat
adc
ss
jae
aaa
dec
aas
push
arpl
adc
fbstp
loop
sub
pop
push
fs
repnz
clc
cmp
repz
scas
rol
jl
outs
scas
fcomip
leave
add
pusha
xchg
(bad)
fldln2
popa
cmp
sub
mov
repz
loope
adc
clc
stos
or
mov
lds
sbb
repz
mov
cld
mov
aad
inc
cmp
add
fild
sbb
fwait
add
xchg
sbb
jle
mov
retf
lock
xor
sbb
int3
enter
imul
xor
add
xor
and
mov
cwde
cmps
mov
adc
adc
xor
sbb
shr
adc
(bad)
cmps
or
out
retf
rcl
fdiv
sbb
bound
fiadd
leave
xchg
pop
adc
stc
fcomp
push
sub
les
out
jnp
cmp
aam
outs
mov
stc
push
pop
in
pop
mov
xchg
hlt
std
dec
loope
sar
sub
inc
adc
div
xchg
sub
or
mov
fwait
rcl
fcomi
dec
xchg
adc
cmps
mov
sub
adc
mov
ret
out
in
or
lea
xor
test
fmul
daa
adc
inc
sub
stos
hlt
or
push
and
cmp
mov
adc
jle
clc
retf
shl
adc
push
inc
iret
inc
mov
xchg
add
aas
ret
inc
lahf
hlt
and
clc
mov
test
fldcw
xor
mov
xchg
aas
mov
mov
pop
(bad)
sub
mov
outs
rcl
sub
cmp
xchg
call
ins
lea
cmp
inc
or
loop
pushf
imul
push
add
sbb
loop
test
test
mov
movs
mov
pop
fadd
mov
data16
and
por
mov
inc
dec
adc
mov
int
xchg
dec
in
fbstp
dec
jnp
adc
ja
xchg
push
scas
adc
shr
das
pop
cmps
adc
out
push
jmp
xchg
push
adc
push
ja
pop
dec
(bad)
(bad)
in
sbb
adc
adc
and
pop
loop
adc
xchg
repz
mov
aaa
ret
in
aam
push
mov
xchg
xor
mov
mov
test
cmp
dec
ficom
(bad)
fisttp
mov
(bad)
les
inc
or
jp
stos
pop
jb
hlt
arpl
cmp
ins
pushf
jne
sub
cwde
pop
sbb
outs
xchg
xor
mov
shl
clc
div
test
cmp
pop
(bad)
dec
cmps
lods
aam
pop
sahf
inc
add
sahf
sub
xlat
cmp
sti
mov
mov
mov
jnp
aaa
fcom
sti
and
xchg
or
sbb
(bad)
xor
mov
sub
or
jns
lock
int3
loope
sub
out
outs
mov
push
mov
push
push
lds
fcomip
push
icebp
mov
mov
or
stos
fild
add
mov
(bad)
adc
inc
mov
adc
lods
jle
int3
inc
inc
dec
jo
addr16
ficom
stc
lods
rcr
mov
cmp
loop
push
jmp
(bad)
cmps
lods
cmp
stc
inc
mov
mov
gs
and
mov
loope
retf
adc
add
or
pop
pop
and
pusha
sbb
mov
mov
or
sub
lods
outs
jmp
dec
mov
popf
mov
cmp
dec
loop
pop
frstor
mov
jg
cmp
dec
(bad)
jo
mov
or
mov
or
jo
sub
jno
fs
and
(bad)
ret
and
aad
mov
pop
and
dec
jno
call
div
jl
xchg
je
pop
icebp
xor
cld
add
jbe
dec
push
cmps
mov
mov
adc
iret
lods
addr16
jmp
cmp
loop
jecxz
inc
or
ds
lods
sbb
push
mov
jle
xor
jge
in
mov
(bad)
popa
adc
inc
mov
cmp
jecxz
pop
lea
xor
inc
arpl
cmp
sub
jmp
jbe
sub
sub
mov
pop
arpl
mov
or
inc
adc
mov
inc
add
arpl
push
lds
adc
xor
pop
out
sub
push
jbe
inc
pop
pop
or
adc
popa
cmps
fbld
add
xchg
dec
div
fs
repnz
shl
add
pmovmskb
jp
pushf
push
and
cld
push
test
push
test
pop
xor
hlt
dec
adc
aad
cmp
scas
lods
jl
daa
pop
ja
clc
enter
aas
dec
mov
aad
or
push
pop
mov
mov
ja
stc
mul
int
push
call
rcr
jae
cmps
cmp
mov
mov
mov
add
xor
xor
jne
popf
push
pop
push
add
sub
icebp
jmp
xor
jno
pop
(bad)
stos
and
push
ja
(bad)
jmp
pop
mov
push
call
sar
les
push
iret
xor
xlat
sub
bound
addr16
mov
xlat
loope
push
repz
xchg
push
mov
pop
fistp
retf
xchg
mov
mov
pusha
(bad)
sti
call
mov
in
fisubr
jg
lahf
into
loopne
cmp
mov
or
sbb
std
pop
jp
cdq
push
repnz
xor
in
jo
inc
cmp
mov
ja
push
adc
inc
add
jmp
cmp
sub
add
dec
xor
cmp
xor
and
nop
retf
add
xchg
mov
ror
in
in
stos
fist
daa
iret
dec
jb
scas
xchg
xchg
pop
sub
jbe
mov
push
(bad)
cmp
test
ja
inc
dec
fidiv
int3
sub
xchg
mov
cld
loope
inc
cmp
fwait
(bad)
lock
fstp
mov
mov
xor
mov
shr
stos
(bad)
sbb
or
mov
push
mov
mov
ror
jle
xchg
sub
add
cld
push
test
cmp
pop
jno
call
fistp
add
fs
rcr
pop
loop
mov
adc
push
adc
sub
(bad)
(bad)
inc
sbb
popf
js
mov
xor
scas
push
pop
out
int
cmp
adc
or
adc
jp
mov
xchg
es
cli
add
movs
sbb
sbb
mov
pop
xchg
pop
mov
push
xor
adc
fidivr
add
cwde
stc
cli
mul
add
sbb
sbb
jnp
enter
scas
popf
fwait
mov
jge
push
xor
jnp
sahf
xchg
push
lock
mov
rcl
mov
xchg
jg
repz
sub
cmp
movs
test
lods
cli
dec
cmc
jae
outs
push
rol
(bad)
repz
cmp
clc
and
cld
mov
pop
and
pushf
push
jno
fmul
lahf
mov
xchg
inc
movs
or
pop
mov
stos
arpl
add
xchg
inc
sbb
jno
(bad)
xchg
push
sbb
mov
push
xor
repz
loopne
or
push
cmps
pop
mov
push
(bad)
out
mov
pop
xchg
and
dec
or
dec
inc
rol
cmp
jno
enter
push
inc
add
cmp
mov
movs
mov
lahf
jg
push
inc
cmps
mov
fs
ret
dec
cmc
stos
in
adc
call
fnstenv
cmp
dec
mov
pushf
rol
dec
adc
and
or
jmp
sub
cdq
sub
cmps
push
jl
sbb
loopne
arpl
and
sbb
iret
mov
rcl
test
cwde
adc
xchg
add
add
xor
sbb
mov
fcmovnu
add
and
mov
pop
hlt
test
adc
fnstcw
xchg
push
dec
sti
out
bswap
xor
and
pop
adc
cmp
aad
inc
stos
mov
pop
data16
pop
(bad)
mov
enter
add
sbb
movs
test
xor
push
(bad)
sar
or
mov
push
cmp
sub
mov
lods
xlat
fldcw
shl
mov
jne
js
xor
mov
or
(bad)
dec
adc
and
xchg
sbb
rcr
out
cmps
pushf
test
push
stc
mov
outs
frstor
fadd
daa
call
dec
lods
mov
test
enter
pop
icebp
cmp
lock
or
pop
(bad)
sbb
pop
stos
outs
inc
xor
ds
bound
xor
push
jns
dec
push
iret
out
fxch
push
pop
dec
out
jb
pop
sbb
aam
ror
adc
xor
mov
fwait
addr16
ret
pop
das
loop
int3
into
and
cmp
and
test
je
unpcklps
mov
mov
data16
ins
pop
pop
cmps
(bad)
push
mov
(bad)
mov
cmps
out
ja
inc
test
scas
cmp
pop
xchg
das
and
sub
call
sbb
(bad)
cmp
jge
xchg
inc
jecxz
nop
bound
xchg
shl
sub
jb
in
push
pop
cmp
jbe
lods
stc
(bad)
(bad)
xor
pop
jbe
inc
cs
xchg
push
in
mov
sub
dec
adc
jmp
cmp
test
xor
lea
sub
arpl
push
repnz
sti
bound
dec
inc
inc
sub
mov
sbb
in
test
adc
in
fbld
shr
cmp
push
push
mov
inc
xchg
pop
xchg
mov
sbb
or
inc
scas
cmp
jns
bnd
test
fmul
rcl
inc
std
dec
(bad)
jnp
cmp
adc
ret
push
(bad)
out
or
xor
sub
pushf
or
in
mov
sub
setne
add
jb
push
retf
mov
lock
cmp
sbb
mov
jns
adc
inc
lock
add
xchg
mov
push
lods
test
add
jmp
cmps
add
fcom
test
cs
jmp
xchg
sbb
jb
xor
dec
mov
cmp
cmp
inc
mov
imul
aas
dec
outs
js
push
bound
push
stc
popf
popf
std
es
stos
xchg
dec
adc
rcl
sub
inc
xor
cli
pop
sub
or
jbe
mov
fistp
daa
repz
in
push
sub
bound
mov
xor
iret
sub
sbb
enter
adc
fnstenv
lahf
in
call
(bad)
xor
and
inc
jo
loopne
xchg
and
sbb
push
mov
fwait
add
clc
sbb
xchg
mov
add
pop
int
pop
dec
push
mov
iret
push
adc
mov
inc
sub
enter
dec
retf
push
add
test
jbe
cmp
es
xlat
popf
repnz
pop
lds
out
cmps
jb
or
inc
add
push
cs
sub
mov
and
sub
(bad)
jle
xor
fadd
sbb
(bad)
cmp
xor
jmp
xchg
push
rcr
out
popf
xchg
inc
shl
inc
sub
dec
and
add
pop
inc
repnz
ins
lea
add
arpl
fwait
imul
shr
pushf
cmovns
ror
retf
push
dec
xchg
cmc
int3
dec
xor
mov
outs
xor
cmp
sbb
push
shr
and
xchg
leave
push
clc
jl
mov
adc
add
pop
fwait
lock
test
in
cs
pop
cdq
or
test
movs
pop
test
les
std
jg
or
pop
test
xchg
loop
dec
scas
in
sbb
(bad)
sub
push
and
cmp
mov
(bad)
cmp
test
test
int
pop
xchg
stos
fdivr
mov
jmp
fidivr
and
pop
mov
les
shl
mov
dec
xor
loop
mov
ja
mov
push
lods
pop
into
adc
ja
lds
leave
jmp
inc
cdq
out
adc
pusha
ins
fsub
pop
inc
sub
sbb
int
pop
add
je
arpl
shl
outs
mov
shl
push
addr16
test
mov
inc
xor
(bad)
xor
ret
cmp
jle
out
stos
jecxz
sub
jge
(bad)
cmp
pushf
lea
cdq
jmp
or
xor
and
sbb
hlt
and
ret
loopne
push
inc
cmp
jmp
cmp
(bad)
ret
shr
xchg
ret
sar
je
fucomip
jl
jmp
sar
in
jmp
icebp
mov
icebp
add
imul
push
jg
int3
sub
popa
mov
inc
dec
push
adc
pop
sub
or
(bad)
push
cs
int3
clc
push
sti
ret
push
(bad)
shl
shr
ins
xor
inc
jle
xor
sub
movs
jge
mov
lahf
add
lock
mov
sbb
mov
sub
xchg
xor
int3
xchg
js
dec
popa
push
mov
mov
icebp
lds
aad
adc
xchg
ins
(bad)
pop
add
jns
and
jge
in
jecxz
fs
dec
test
cmps
int
or
jl
or
scas
xor
iret
lock
mov
or
jmp
stos
inc
mov
data16
jmp
dec
and
sbb
and
mov
iret
mov
je
in
mov
lods
movs
retf
mov
push
cmp
mov
jmp
mov
(bad)
jl
imul
inc
retf
outs
shl
pushf
cmp
sar
cmp
fld
adc
sbb
call
(bad)
shl
pop
gs
mov
in
ja
xor
imul
xor
add
cmp
lahf
js
and
es
or
std
mov
lods
mov
cmps
lock
mov
add
mov
aas
adc
loopne
js
iret
repz
ret
pop
inc
addr16
push
mov
mov
jae
retf
call
cmp
data16
add
jg
inc
xchg
rcr
inc
add
adc
cli
xor
pusha
mov
xlat
xchg
test
jp
in
cmp
ins
sub
or
sahf
inc
xchg
mov
fdiv
adc
loopne
adc
and
(bad)
cmc
rcl
stos
inc
sti
repz
es
cmp
icebp
cmp
les
mov
enter
mov
arpl
mov
sbb
mov
rol
enter
add
mov
dec
int3
mov
jmp
jb
(bad)
(bad)
(bad)
sub
xor
pop
sbb
iret
les
(bad)
hlt
mov
sbb
inc
ror
adc
pop
cmp
push
popf
imul
pop
out
daa
jg
adc
mov
cmp
push
inc
ror
xor
dec
sbb
mov
xor
inc
jno
dec
add
push
dec
fidiv
push
imul
mov
xor
jge
push
push
jecxz
sub
sahf
adc
int
adc
cld
sub
jge
and
cmc
jmp
mov
(bad)
cld
and
mov
dec
or
daa
mov
and
stc
inc
push
ret
lock
and
xor
push
or
inc
lahf
sbb
int
mov
mov
mov
stc
cmp
mov
add
add
cmp
pop
push
addr16
mov
js
jbe
mov
sub
fadd
(bad)
jb
push
ins
push
in
sbb
cli
call
imul
mov
sti
jns
cmp
comiss
in
outs
call
mov
retf
aam
sbb
iret
mov
adc
mov
imul
das
stos
inc
ror
pop
inc
popa
jp
inc
push
sar
outs
push
rcr
sahf
div
adc
movs
out
call
fmul
arpl
je
lods
mov
pop
mov
or
(bad)
clc
or
ror
dec
in
stos
(bad)
or
stos
fistp
or
inc
clc
lock
test
sbb
jae
jmp
push
or
(bad)
test
xlat
cmc
add
out
ret
dec
fs
scas
sub
pop
cld
jg
imul
sbb
or
sti
xchg
jbe
test
das
xchg
push
mov
or
push
ja
pop
sbb
or
scas
mov
add
gs
mov
mov
or
dec
push
mov
mov
pushf
inc
and
jne
add
dec
imul
mov
loope
aaa
inc
inc
xchg
js
dec
push
movs
bound
pushf
mov
ror
inc
movs
lahf
jp
sbb
jne
into
scas
neg
push
adc
push
xchg
mov
shl
jnp
dec
jle
into
and
mov
cs
imul
jg
(bad)
stos
xchg
inc
fs
mov
rol
sbb
mov
xor
lods
popf
pusha
mov
in
mov
es
movs
sbb
pushf
mov
outs
mov
jae
ret
adc
jecxz
aaa
lods
movs
jg
stc
lea
adc
mov
or
add
jl
mov
xor
retf
mov
inc
cmp
inc
sub
movs
sahf
inc
pop
or
jle
pop
adc
add
add
or
ins
jo
shl
pop
push
jl
pop
enter
in
or
cld
shl
outs
shr
(bad)
aad
sbb
jae
pop
sbb
pop
into
add
pop
dec
jle
dec
in
cmp
stos
bound
dec
fbld
push
out
shr
push
mov
add
dec
int3
loopne
and
cwde
mov
push
push
xchg
shl
adc
and
or
lea
push
push
into
dec
xchg
jnp
mov
jb
out
inc
add
inc
movs
sub
jb
adc
ret
and
fstp
lea
adc
mov
fisubr
and
(bad)
mov
pop
jnp
xchg
sbb
test
jno
push
inc
mov
inc
mov
xor
cmps
add
mov
repz
int3
mov
sub
push
cmp
mov
xor
fbstp
jecxz
pushf
stc
outs
add
cmp
test
in
dec
jb
mov
push
stos
mov
xchg
and
pop
jne
ins
push
into
adc
int
adc
and
xchg
and
and
xchg
adc
mov
adc
ret
mov
jo
push
rcl
adc
add
sbb
adc
add
cs
cdq
jmp
das
pop
adc
mov
adc
xchg
xor
loop
mov
sahf
(bad)
lea
neg
inc
dec
pushf
push
inc
das
xchg
(bad)
cmp
out
fwait
cld
xor
jecxz
jno
sbb
jmp
fnstcw
js
push
das
test
cmc
popf
cli
lods
fnsave
leave
iret
test
mov
pop
enter
repz
push
lods
(bad)
int3
in
mov
pop
out
push
lock
mov
sti
hlt
scas
adc
xor
xchg
xor
retf
jmp
mov
popa
xor
and
mov
dec
dec
pop
shl
push
aas
xor
sub
sub
adc
xor
(bad)
cmp
ret
pop
not
pop
in
and
int3
mov
jg
shl
nop
fwait
sbb
xor
jge
mov
lods
cmp
nop
jnp
mov
test
sub
mov
dec
sub
dec
push
fiadd
inc
dec
sbb
sbb
mov
dec
gs
lock
fcomp
arpl
jecxz
js
int3
jmp
imul
push
push
(bad)
push
cli
pop
dec
sbb
test
mov
jge
jo
fistp
add
daa
mov
adc
mov
push
lods
adc
lahf
jnp
pop
jmp
mov
xchg
mov
push
push
sbb
dec
xor
in
dec
jno
shl
pop
push
fisubr
in
and
cs
mov
dec
pusha
jae
and
pop
and
mov
pushf
sbb
(bad)
loope
clc
sbb
pop
cmc
xor
or
cmps
and
shl
loope
outs
mov
or
sbb
push
not
pop
jnp
dec
or
mov
fcmovne
xchg
push
mov
pop
mov
jns
jmp
push
stc
fistp
mov
hlt
push
into
jecxz
test
mov
fmul
daa
ret
sub
or
xor
dec
inc
fs
int
cld
loope
add
jns
std
pushf
or
sbb
stos
adc
mov
cwde
stos
add
dec
js
jmp
je
mov
sbb
daa
push
(bad)
dec
push
xrelease
loope
dec
mov
hlt
cmp
outs
outs
in
es
xor
push
dec
mov
dec
cs
call
cmp
movs
inc
in
cmp
push
aas
xchg
push
mov
sbb
push
or
xchg
sub
iret
mov
icebp
push
xchg
sbb
mov
sar
dec
or
xor
adc
dec
sar
pop
xchg
pop
fist
loopne
cmp
mov
fbld
popa
jae
push
clc
pop
pop
push
jbe
sbb
sub
xchg
and
(bad)
pop
mov
pop
adc
pop
mov
and
and
ins
cmp
xchg
pop
sub
rcr
call
xor
or
pop
mov
jg
and
mov
not
mov
mov
ds
mov
addr16
add
aas
arpl
daa
mov
je
ret
xchg
mov
ins
xchg
test
mov
mov
mul
sti
aam
or
dec
retf
jae
jns
mov
call
and
sbb
popa
cmc
(bad)
frstor
mov
adc
mov
add
push
fist
cwde
(bad)
fidiv
mov
or
jae
pop
mov
test
mov
int3
xor
test
ficomp
sbb
arpl
inc
call
jbe
push
mov
stc
mov
push
movs
call
mov
dec
test
(bad)
push
test
xor
sbb
in
or
popa
push
je
(bad)
icebp
inc
pop
int3
ss
add
sbb
jnp
xor
mov
cwde
mov
cmp
jmp
test
bound
mov
fadd
adc
jb
mov
pop
bound
repz
xchg
cmp
hlt
jae
neg
sub
ss
jl
add
sub
hlt
ds
scas
pop
inc
sar
push
std
xchg
or
movs
mov
aas
pop
sub
sar
loop
jne
and
sbb
arpl
cmp
xlat
fisttp
pop
or
in
jns
addr16
pop
or
cmp
(bad)
lds
ret
jle
addr16
mov
dec
dec
jmp
dec
cmps
out
sub
gs
movs
sub
xor
sbb
or
adc
mov
add
jmp
cli
cmps
popf
cmps
repnz
ror
nop
mov
xchg
mov
dec
dec
push
mov
sub
push
popa
outs
mov
mov
mov
or
in
loopne
mov
mov
jns
rcr
inc
and
xor
xchg
shl
inc
ret
arpl
push
mov
mov
ret
ins
imul
mov
mov
and
and
push
(bad)
ins
nop
ss
retf
jmp
aaa
sbb
jg
test
cmp
cmovl
adc
cmp
repz
and
xchg
inc
call
popa
xor
and
enter
fistp
(bad)
mov
adc
mov
pushf
sbb
ds
or
push
into
jmp
pop
ror
je
fidiv
les
xor
mov
fsub
or
rcr
push
xchg
mov
ds
aas
test
jge
push
and
mov
cmp
fwait
jg
ret
ret
aad
enter
xchg
sar
in
ins
jp
pop
push
sti
(bad)
cld
clc
push
cld
dec
ds
mov
jnp
(bad)
and
test
push
jp
and
mov
jb
xchg
dec
adc
scas
inc
scas
jge
and
test
lea
adc
lahf
fwait
dec
sbb
inc
or
mov
aam
out
(bad)
test
xchg
jo
call
inc
(bad)
cli
push
imul
ja
arpl
mov
add
stos
dec
pop
nop
mov
and
sbb
pop
mov
xor
in
pop
data16
rcr
lds
pop
std
mov
test
cmps
or
lahf
std
(bad)
push
aam
jbe
adc
xor
ficom
jno
aam
sub
mov
inc
pop
fwait
clc
mov
pop
jne
pop
stos
mov
mov
inc
iret
cmp
push
push
mov
out
test
xchg
inc
inc
fs
push
aad
lahf
xchg
popa
int3
push
cmps
push
fwait
loop
dec
push
(bad)
fcomi
mov
fisubr
xchg
test
sbb
mov
in
xchg
jge
fisub
into
sbb
icebp
xor
xor
mov
lods
aaa
push
mov
jecxz
dec
mov
jecxz
mov
fs
xor
sbb
cmps
pop
xchg
stos
push
mov
(bad)
and
mov
ins
inc
cwde
sub
mov
fwait
cmp
push
push
xchg
loop
rcl
loopne
mov
jbe
mov
out
push
mov
hlt
pop
jle
sahf
add
adc
and
xchg
xchg
call
int3
mov
iret
mov
(bad)
jne
jmp
sub
pusha
jecxz
push
sub
jb
mov
adc
jmp
and
mov
jo
inc
push
dec
mov
push
mov
jl
ja
ins
in
jo
outs
test
out
stos
and
hlt
rcl
enter
push
fld1
frstor
sub
mov
test
retf
jmp
(bad)
cli
jb
je
call
std
dec
sub
(bad)
sub
fstp
xchg
mov
popf
gs
cmps
cwde
iret
scas
or
lock
xchg
push
lods
frstor
xchg
iret
in
aam
call
sub
btr
shl
xchg
adc
sbb
dec
arpl
xchg
adc
add
xchg
stos
movs
movs
shl
rcr
ror
sbb
inc
retf
mov
mov
xor
stos
or
cld
ror
popf
leave
pop
sbb
sar
xor
mov
add
xor
outs
out
pop
or
mov
jl
pop
mov
xlat
adc
mov
mov
inc
ret
push
cmc
ja
jno
mov
iret
call
mov
pop
xchg
dec
jecxz
jb
jo
movs
aad
retf
cli
sub
mov
ins
lods
fnstenv
pop
clc
sub
mov
scas
cmps
xchg
push
inc
ds
in
stos
add
(bad)
shr
int
setnp
lods
iret
fwait
jo
adc
nop
pop
stos
bound
fwait
sbb
not
mov
psubw
jecxz
leave
clc
sbb
jmp
mov
in
xor
and
pop
inc
mov
test
xor
pop
mov
sbb
outs
arpl
cmp
sbb
cmp
mov
xchg
stc
xchg
das
or
mov
push
les
mov
repnz
jg
aad
mov
sub
push
adc
and
push
sub
iret
fcmovne
hlt
dec
sub
rcr
sbb
imul
cmp
sbb
and
adc
inc
jno
or
mov
in
iret
repnz
push
es
sbb
lea
and
sub
mov
mov
cld
stos
jge
iret
sti
shl
js
xor
xor
shl
push
mov
iret
mov
frstor
fist
fwait
cmp
rcr
ds
les
stos
cmp
sbb
add
(bad)
cmp
ret
lds
stc
add
xchg
jl
sub
outs
lock
push
sti
push
pop
ficomp
xchg
mov
inc
cmp
inc
jg
stos
sub
cdq
or
xchg
call
mov
loope
dec
outs
or
ds
test
addr16
popa
pop
fcom
sub
lea
int3
xlat
and
into
add
enter
rol
out
jae
adc
dec
aam
push
fcmovnbe
jno
dec
cmp
and
sti
ss
into
xchg
lds
test
mov
xor
lds
push
cdq
iret
pusha
test
jbe
inc
xor
imul
jle
mov
add
sub
push
in
sbb
shl
and
outs
std
(bad)
int
jg
sahf
jbe
hlt
ins
(bad)
test
mov
nop
adc
ss
dec
std
adc
jmp
push
pusha
lahf
lods
hlt
js
mov
out
and
mov
out
leave
in
fcom
inc
(bad)
mov
xor
push
loope
xchg
sub
sub
fcomp
push
nop
fnsave
inc
or
mov
adc
mov
or
sbb
mov
scas
pop
jb
cwde
add
int
jne
hlt
inc
and
xor
test
fs
shr
or
push
pop
and
test
ins
shl
xchg
push
(bad)
fcmovnb
int
mov
bound
cmps
sub
pop
xor
das
xor
inc
ficomp
pop
jae
xchg
ins
ror
ins
or
jg
push
cmps
ins
or
imul
(bad)
and
and
cs
xchg
jle
mov
jmp
inc
out
aas
jno
jno
movs
lods
(bad)
mov
inc
repz
fwait
sbb
sbb
adc
pop
arpl
rol
nop
xor
into
icebp
fisub
push
push
and
and
pop
cmp
js
cmp
leave
sub
scas
cmps
push
ds
push
mov
mov
das
add
ja
pop
test
je
xlat
xor
ret
stos
clc
dec
ficomp
mov
sub
mov
stc
rol
dec
inc
mov
jp
sti
inc
call
mov
iret
jle
sbb
enter
cmp
sbb
rcl
adc
leave
cmp
stc
xchg
jle
fld
fidiv
add
(bad)
cmc
pop
pop
rcr
not
dec
jb
cmp
sub
fisttp
in
shl
nop
mov
xchg
je
sbb
mov
mov
xor
mov
jl
jno
mov
adc
inc
push
ror
ja
sbb
pop
mov
sar
adc
dec
stc
add
pushf
imul
cmp
or
in
xor
pop
cmc
fs
ins
inc
xor
jmp
pop
cmp
jns
jnp
cld
das
repz
lahf
jl
jmp
xor
jmp
mov
cmp
retf
mov
add
jl
movs
popf
dec
scas
cmp
loopne
mov
xchg
xor
mov
inc
outs
mov
and
cmp
repnz
gs
shl
retf
sbb
add
cmp
cmp
fcmovb
and
cmps
xchg
je
stc
push
mov
popa
loop
jmp
jmp
ror
xor
xchg
jns
push
dec
addr16
adc
sbb
loop
xor
dec
mov
jne
jg
out
ja
and
movs
(bad)
out
sbb
call
nop
fnstcw
inc
fidiv
mov
int
bound
jp
dec
fidivr
sub
out
ins
sbb
mov
cmps
inc
imul
ret
fiadd
cmp
into
(bad)
pop
push
pop
mov
(bad)
sahf
popa
icebp
fiadd
repz
push
adc
movs
clc
arpl
in
(bad)
lds
out
js
mov
mov
jnp
hlt
lock
push
inc
imul
mov
cwde
test
xor
aas
repnz
cli
out
cs
pop
sar
retf
and
loop
add
lea
and
stc
push
loope
scas
sti
push
pop
bound
das
mov
out
add
jl
daa
add
out
mov
sub
adc
(bad)
(bad)
std
xor
inc
std
enter
mov
xchg
dec
movs
scas
iret
adc
add
push
adc
push
clc
jae
sbb
jmp
test
mov
dec
or
aaa
fs
retf
xchg
(bad)
pop
test
or
int
adc
test
cli
sub
pmullw
imul
cmp
call
xor
push
mov
add
fidiv
fs
fistp
inc
sbb
js
sbb
dec
inc
mov
inc
add
cmp
dec
xchg
dec
xor
jge
add
xor
cmc
call
cli
gs
add
push
add
movs
sbb
push
mov
pop
sbb
(bad)
cld
mov
adc
je
sahf
das
lds
cmc
jl
cmp
mov
mov
add
stos
add
imul
rcl
mov
js
test
ds
ja
adc
hlt
mov
cdq
cmp
mov
inc
jecxz
xor
push
jle
pop
cmp
pusha
xor
aam
xor
xor
dec
or
outs
inc
sub
(bad)
mov
sub
stc
jge
cdq
outs
cwde
cmp
ret
std
jne
cmp
add
mov
cwde
movs
or
pop
push
xchg
fsub
push
inc
sub
sbb
aas
shr
or
and
js
das
leave
jecxz
pop
int3
push
retf
mov
loop
test
(bad)
or
jbe
xchg
pop
sbb
pop
sub
dec
push
aad
jo
imul
and
les
cmp
adc
out
mov
push
jg
dec
int
call
pop
sbb
ret
mov
pop
dec
shr
std
test
neg
push
sbb
cmp
xchg
pop
loope
outs
loop
pushf
ret
or
mov
retf
iret
adc
mov
mov
dec
cmc
inc
and
das
mov
(bad)
(bad)
mov
mov
clc
jno
lahf
(bad)
cmp
call
imul
imul
dec
and
nop
mov
jno
cmp
jb
jmp
in
gs
adc
push
sahf
cli
aas
dec
scas
shr
xchg
pop
xor
scas
retf
jbe
mov
and
push
mov
dec
xchg
sbb
(bad)
mov
push
xchg
repnz
je
sub
fisubr
call
in
out
or
mov
sub
xchg
(bad)
cli
jmp
popf
push
stos
add
xor
jecxz
test
aad
inc
push
pushf
inc
into
inc
mov
adc
or
in
(bad)
ds
dec
and
mov
xor
leave
adc
(bad)
lock
push
aas
inc
test
push
and
inc
fldcw
mov
icebp
les
stos
adc
cmps
cmp
aam
mov
mov
sbb
std
adc
xor
bnd
mov
and
jae
lods
jb
out
mov
cmp
pusha
mov
pop
jmp
stos
outs
pop
shr
jmp
push
fwait
push
inc
dec
into
cs
loope
jb
adc
hlt
ffreep
test
sbb
fwait
scas
xlat
push
sub
and
pusha
xor
push
lock
ret
dec
cdq
movs
mov
add
call
jns
mov
add
lods
xor
sbb
mov
add
jno
cli
imul
mov
push
daa
retf
jo
adc
jg
mov
jle
sbb
icebp
xor
xchg
fisttp
stos
and
sub
push
das
hlt
sub
fisub
mov
cmps
mov
inc
and
pop
retf
dec
int3
sar
mov
stos
mov
add
sahf
adc
ss
ds
cmp
pop
ficom
test
int3
inc
sahf
sub
jmp
sahf
mov
mov
push
loop
in
add
inc
cmp
aad
add
jge
xchg
mov
mov
je
dec
mov
test
dec
loop
retf
daa
scas
nop
into
neg
fidiv
gs
fmulp
xchg
aam
adc
ret
mov
sub
sbb
mov
mov
lods
and
mov
push
inc
xor
dec
cmps
daa
inc
je
mov
addr16
imul
aad
gs
hlt
les
and
pushf
ss
fld
jge
div
dec
xchg
cmp
fs
inc
out
shl
fisttp
in
stc
mov
loope
dec
or
push
mov
ins
in
push
push
sar
dec
and
pop
mov
jno
mov
pop
retf
sbb
out
les
and
dec
push
inc
mov
ret
fnop
pop
cmp
and
or
ret
push
fcomp
inc
arpl
and
and
sub
cli
xchg
add
(bad)
iret
mov
jle
bnd
gs
jmp
mov
adc
ret
in
jge
xor
(bad)
push
fyl2x
movs
jmp
lea
(bad)
mov
retf
mov
ret
hlt
aaa
loope
sbb
gs
or
xchg
add
imul
mov
inc
inc
jnp
test
call
(bad)
xchg
cli
fwait
or
inc
pop
fld
mov
jp
dec
cmp
jb
jg
mov
ss
out
aas
push
repz
mov
in
out
xor
add
cld
jnp
xor
adc
xlat
lods
inc
push
in
adc
or
aad
pop
sbb
push
pop
xor
cmp
mov
inc
scas
das
inc
xchg
or
cmps
int
jmp
out
fwait
mov
xor
stc
(bad)
lods
mov
pop
test
xchg
into
nop
mov
not
imul
fs
stos
cmp
cmp
add
or
add
inc
inc
outs
mov
ins
xor
int3
jmp
movs
out
sub
sti
xchg
ds
repz
mov
xchg
scas
or
cmp
sbb
je
jle
jecxz
scas
jbe
imul
mov
enter
jmp
sub
shr
fcmovu
adc
mov
mov
dec
adc
and
ins
and
(bad)
mov
or
iret
movups
lea
outs
or
inc
mov
xor
pop
iret
lds
or
adc
and
test
add
sbb
pop
mov
arpl
test
push
(bad)
sub
jne
sbb
ins
push
adc
jge
xchg
mov
pop
call
xchg
mov
adc
jnp
add
enter
sub
push
retf
mov
xlat
lds
adc
or
xor
adc
jmp
out
out
ss
mov
adc
ds
lea
pusha
or
arpl
lods
sysexit
sub
or
mov
sub
jg
sub
cmps
outs
push
push
leave
popf
shl
daa
popa
or
mov
ffree
cmp
test
inc
out
mov
pop
mov
mov
out
fimul
pop
rol
adc
adc
cmps
movs
pop
cmps
rcl
int3
inc
clc
imul
push
xor
iret
push
mov
pop
adc
push
jecxz
cmp
test
jmp
ss
xchg
xor
rol
bound
cmps
sahf
call
inc
jp
fsub
(bad)
repz
sub
adc
ja
push
out
in
pop
aas
push
neg
scas
dec
les
cdq
bound
movs
call
movs
lods
lods
sbb
mov
jnp
hlt
stc
xchg
adc
or
pushf
ins
mov
pop
xor
jl
xor
and
pop
mov
es
jl
std
stos
or
push
int
in
lock
add
repnz
movs
xor
jge
fistp
mul
imul
jb
stos
add
ins
sbb
jnp
add
test
mov
xor
cmp
mov
pextrw
dec
mov
daa
jg
mov
repz
iret
add
lods
cmp
or
push
push
mov
stos
in
adc
inc
outs
int3
adc
jnp
cmps
pop
pop
jbe
mov
push
add
mov
es
sub
outs
pop
pop
movs
add
aad
ja
lock
inc
out
sbb
psubq
add
xchg
add
push
jecxz
nop
fbld
or
push
push
jmp
mov
push
aam
mov
xor
daa
xchg
sub
loop
movs
xchg
jle
es
jb
test
rcl
outs
inc
repnz
mov
sbb
add
jecxz
bound
dec
sub
inc
sub
aas
inc
mov
ds
cmp
fwait
iret
sahf
cmps
xchg
addr16
mov
cmp
cmp
pop
call
mov
not
test
and
inc
and
mov
inc
in
lea
inc
outs
sbb
movs
mov
test
shl
jo
int3
and
loope
js
sbb
xchg
je
mov
movs
ds
ja
push
add
mov
or
mov
pop
imul
les
pop
das
push
in
push
(bad)
repz
push
pop
cdq
in
xor
pop
ins
mov
stos
shr
jbe
rol
lock
dec
jp
not
ins
mov
rol
lods
add
out
sahf
call
icebp
loope
hlt
cmp
xor
push
lods
es
gs
movaps
mov
or
sbb
mov
loope
es
ss
add
cmp
sub
pop
cmc
mov
adc
test
cmps
xor
add
movs
in
add
xor
das
popf
xchg
dec
out
mov
div
dec
cmp
loopne
add
push
(bad)
inc
mov
mov
mov
into
cmp
cmp
data16
cmp
push
dec
ins
iret
mov
popf
lds
push
ds
std
(bad)
clc
inc
into
les
(bad)
out
daa
lods
xor
ins
es
xchg
clc
mov
sbb
sub
mov
mov
add
retf
push
fucom
ins
sbb
push
jo
(bad)
enter
and
adc
dec
in
lods
mov
test
push
in
dec
dec
push
sbb
jmp
push
lods
xor
and
cld
pop
outs
je
xor
shl
fsubrp
fs
mov
cli
in
cmp
mov
fs
inc
(bad)
and
retf
add
in
out
sub
xor
int3
jns
add
xor
ror
je
sti
cmp
push
dec
mov
sub
xor
mov
cwde
and
mov
mov
scas
jmp
jp
jno
pop
in
loop
popa
out
sbb
out
fadd
dec
sbb
(bad)
into
adc
pushf
fbld
and
idiv
push
mov
or
dec
stos
push
push
addr16
xchg
addr16
ret
ins
js
adc
mov
push
cs
cs
mov
inc
mov
mov
cvtdq2ps
dec
fst
cmp
pop
lods
pop
pop
or
push
mov
mov
call
sub
mov
pop
out
in
cdq
test
and
rcr
rol
mul
push
cmp
add
cmp
push
mov
xor
nop
add
mov
int
inc
mov
loop
gs
add
xchg
in
loopne
inc
adc
jae
lock
mov
inc
sbb
jne
out
icebp
cmp
loopne
or
adc
push
dec
mov
jg
aam
xchg
mov
cmp
xchg
and
sub
fstp
sbb
inc
mov
fild
cdq
hlt
dec
fcom
add
test
mov
cmp
and
or
and
ins
js
mov
or
cdq
pop
stos
inc
push
imul
mov
pushf
stc
mov
popf
cmp
jle
ins
xor
lods
bound
mov
fstp
push
fisub
imul
add
inc
jne
sbb
cwde
add
sbb
fadd
clc
cmp
imul
(bad)
lock
and
push
data16
out
add
pop
adc
sti
adc
inc
pop
push
in
gs
mov
xchg
in
jmp
push
je
pop
fnsave
dec
js
inc
xlat
repz
loopne
xor
out
cmp
mov
and
call
mov
(bad)
lock
ds
adc
xor
outs
gs
push
lock
fcom
sub
inc
sahf
adc
dec
lods
cmc
scas
outs
sti
jns
add
aad
adc
(bad)
out
or
sbb
mov
mov
xchg
outs
sub
sti
(bad)
jle
sub
(bad)
inc
xchg
in
or
push
dec
jmp
mov
nop
cmps
xchg
inc
xchg
adc
xchg
fbstp
out
cmps
outs
sbb
bnd
and
cmp
nop
jg
push
jnp
cs
push
shl
jno
xor
dec
cmp
hlt
lock
sub
out
or
jb
xchg
sti
aad
sti
jl
ins
ds
xchg
jle
pusha
nop
(bad)
pop
cmp
int
repnz
jo
sbb
(bad)
fs
cmp
add
jp
adc
adc
mov
shr
mov
(bad)
mov
mov
fwait
sbb
sahf
pop
xchg
(bad)
or
cli
jp
add
jnp
mov
inc
xchg
scas
lock
outs
pop
fstp
clc
aad
xchg
cs
and
pop
sub
mov
pop
adc
aaa
sbb
ret
jae
jbe
sub
add
xor
xor
sbb
shr
mov
ja
iret
sbb
xor
mov
ins
inc
out
mov
sbb
cmp
jle
ret
nop
aaa
dec
mul
add
fs
mov
jo
ror
cmp
stos
mov
das
popf
xor
inc
(bad)
clc
fisubr
out
or
pop
sub
push
pop
push
pop
jo
cs
push
adc
push
fld
retf
ret
sub
xchg
jle
mov
sbb
sti
dec
rcr
inc
fisttp
fcom
movs
int
movs
mov
test
dec
mov
retf
repz
jbe
push
dec
cmps
cmp
dec
sbb
ins
xchg
in
and
sub
gs
cld
loopne
ror
out
ja
test
leave
xor
int
cmps
out
stos
xchg
out
push
pop
push
out
call
out
loop
and
shl
push
jo
jmp
pop
shl
adc
push
cmp
inc
jnp
mov
or
adc
inc
push
repnz
mov
sub
dec
loopne
mov
pop
push
xchg
push
and
lods
sbb
test
and
dec
cdq
loope
and
in
xchg
push
add
test
bound
(bad)
pop
adc
sub
stos
mov
retf
mov
pop
sbb
repnz
jns
mov
sti
mov
push
and
jge
cmps
lock
iret
pop
xchg
mov
xchg
mov
cmps
jb
imul
add
dec
push
(bad)
dec
xor
and
scas
jb
pop
das
mov
xchg
ja
and
into
lahf
add
iret
cmp
das
push
sbb
daa
sub
cld
dec
and
mov
inc
popf
idiv
pop
mov
loopne
adc
imul
cmps
stc
inc
mov
jns
aad
push
jae
dec
sub
call
fcomip
mov
and
and
add
pushf
mov
int3
xchg
mov
outs
cdq
adc
bnd
repz
in
jl
pushf
add
or
and
cmp
dec
mov
fbld
mov
add
ins
and
stos
fldenv
loopne
adc
jl
and
nop
add
or
shr
mov
sbb
push
xchg
adc
mov
inc
pop
inc
fmul
pop
and
in
(bad)
xchg
scas
inc
aam
sti
test
arpl
sbb
jecxz
fistp
add
retf
out
scas
fldcw
and
mov
dec
cwde
adc
pop
mov
jne
fs
fcmove
pcmpeqd
mov
push
ret
mov
jg
mov
mov
xlat
inc
jnp
or
fs
pop
es
lods
fwait
xor
ins
shr
mov
dec
test
inc
(bad)
inc
(bad)
jmp
jb
sbb
das
sub
repz
mov
lock
pushf
enter
shl
pushf
int
aas
jp
adc
lea
sub
test
xor
call
mov
lods
push
cmp
pop
fwait
or
rcr
mov
sbb
test
lds
cmp
dec
jnp
add
aad
aad
push
add
mov
out
scas
pushf
fs
pusha
mov
jno
enter
iret
xchg
(bad)
mov
not
mov
mov
cmp
gs
(bad)
bound
mov
dec
les
dec
xor
cmc
(bad)
clc
and
add
in
cmp
repnz
cmp
gs
sbb
fiadd
sub
ins
mov
xor
cmp
mov
arpl
inc
ds
xor
movs
push
xlat
cs
adc
sbb
inc
int
call
into
jp
cs
cmp
cmps
(bad)
pop
jbe
call
jne
aas
ja
jp
sbb
jl
sbb
hlt
push
daa
loop
sub
add
leave
cmp
push
scas
xor
loop
push
cmp
ss
fcomip
xor
push
jb
jmp
(bad)
das
pop
push
outs
cmp
pushf
data16
adc
xchg
loopne
das
xlat
or
int3
mov
out
lods
add
ret
neg
mov
outs
addr16
sub
mov
adc
adc
mov
cmps
dec
jmp
sub
sbb
stos
ret
xchg
pop
fcmovb
shl
mov
scas
(bad)
out
add
adc
(bad)
data16
mov
xchg
mov
xchg
xlat
out
dec
(bad)
and
test
or
jae
push
(bad)
push
jecxz
jno
loope
pushf
or
stos
cmp
sub
xchg
pextrw
add
int3
mov
in
xchg
dec
sar
pusha
pop
ret
mov
and
stos
jb
ja
jno
push
icebp
xor
lds
sti
out
jbe
out
pop
add
adc
imul
dec
retf
or
cld
fimul
adc
add
lods
pusha
fs
pop
lea
or
inc
les
mov
fcom
mov
rol
jle
adc
(bad)
cmp
mov
das
(bad)
in
inc
xlat
test
arpl
cmps
mov
pop
mov
push
mov
jmp
pop
mov
js
and
and
dec
jns
xchg
mov
ins
out
inc
into
imul
mov
leave
mov
hlt
sub
add
cmp
and
dec
ja
int3
jle
dec
sbb
arpl
popf
imul
and
jno
fdiv
pop
dec
js
ds
inc
mov
xchg
sub
ret
out
test
pusha
inc
daa
jns
sub
cld
fs
shl
fstp
stos
js
cmps
das
lock
fbld
add
sub
loop
push
aas
push
sar
push
in
sbb
ret
cld
outs
ja
dec
inc
arpl
add
inc
out
mov
push
mov
sub
outs
sti
sbb
cmp
lods
xchg
mov
and
scas
and
ins
aas
dec
push
pusha
jp
jl
shl
gs
sbb
jmp
mov
xchg
scas
ds
or
sub
sbb
mov
push
lock
add
pop
pop
js
xlat
ins
sahf
pop
mov
or
pop
pop
stos
dec
inc
dec
fwait
jnp
test
sub
mov
mov
mov
xlat
in
das
retf
(bad)
sbb
sub
push
add
pop
das
sub
push
adc
cmps
jmp
aam
adc
lods
mov
ficomp
retf
retf
pop
add
or
jno
call
mov
and
pop
ret
xor
je
sub
ret
icebp
call
ss
dec
sti
mov
cmps
or
mov
inc
jbe
mov
das
push
mov
sbb
imul
jp
push
pop
scas
outs
push
(bad)
iret
mov
in
or
sbb
inc
or
lea
adc
push
mov
push
inc
mov
cwde
mov
daa
dec
jmp
cwde
rcl
xor
inc
inc
xchg
mov
cmp
pushf
imul
pop
adc
pusha
adc
out
cld
aam
jge
in
pop
push
sbb
rol
pop
sub
pop
(bad)
lahf
or
push
jmp
sub
and
jbe
xor
adc
cmps
jnp
test
(bad)
cmp
popf
cmp
aad
shl
test
cmps
cmp
push
push
jp
ds
add
inc
mov
cld
repnz
lahf
xor
sub
adc
(bad)
ror
test
and
rol
imul
add
iret
push
mov
cmp
imul
mov
nop
cld
sbb
cmp
packuswb
sbb
jmp
or
ds
not
aam
(bad)
in
int3
mov
pop
sub
adc
fidivr
and
xor
inc
pop
test
jne
inc
mov
ins
lds
lods
or
sbb
jo
retf
leave
inc
sub
or
cmps
leave
jno
mov
pop
ins
jo
add
aad
mov
add
in
jae
jp
adc
sub
test
test
mov
xor
dec
jmp
jbe
in
setge
mov
inc
aad
cmps
pop
cld
jl
arpl
sbb
hlt
lahf
fmul
xchg
mov
dec
cmp
jnp
jns
mov
adc
iret
dec
ins
jne
and
mov
or
mov
cmc
rcl
(bad)
dec
out
rol
mov
sub
test
xchg
movs
in
mov
fst
rcr
(bad)
cmc
xchg
push
(bad)
clc
xor
leave
inc
test
cwde
ficomp
sbb
dec
push
sbb
mov
cmps
shl
cmp
or
jmp
sete
dec
dec
adc
and
(bad)
add
jne
mov
jl
xchg
sub
addr16
std
ret
mov
xlat
add
cmp
fist
pop
pop
mov
xchg
es
pop
push
adc
sub
lods
cmc
(bad)
div
or
mov
push
out
dec
(bad)
push
cmps
and
repnz
cmp
test
in
inc
gs
(bad)
mov
sub
cdq
xchg
fisttp
cmp
add
ret
push
fdivr
dec
sbb
xor
movs
mov
enter
or
das
push
inc
xor
(bad)
test
scas
and
scas
hlt
scas
mov
cmp
call
inc
iret
and
add
lea
xor
and
mov
call
js
xchg
mov
jg
daa
xchg
add
adc
mov
mov
mov
aas
in
mov
icebp
mov
cmp
arpl
push
into
cdq
push
retf
jmp
or
out
fcom
cmp
sbb
lods
in
sub
out
lea
(bad)
push
cmps
addr16
and
add
add
jnp
je
syscall
cmp
jns
push
(bad)
jns
jge
aaa
sub
adc
shl
ret
fldenv
daa
pop
xchg
adc
cmp
add
loopne
outs
push
sar
adc
cmp
test
push
dec
into
dec
dec
mov
inc
lahf
jne
push
bound
and
cli
mov
pop
into
(bad)
cmc
in
in
or
hlt
stc
not
inc
mov
fld
jge
clc
dec
loope
mov
adc
mov
push
test
dec
in
sub
mov
mov
dec
retf
cwde
jmp
loope
(bad)
(bad)
hlt
nop
cmps
pop
inc
ins
or
inc
int
mov
lods
in
call
sub
pop
sbb
sar
(bad)
fwait
xchg
mov
pop
and
jmp
dec
sub
mov
out
sub
je
adc
jo
mov
ds
enter
xchg
cmp
shr
imul
mov
pop
ret
or
stc
inc
(bad)
call
add
fwait
js
mov
push
cmp
movs
fdivr
pop
cmps
out
iret
(bad)
test
pop
in
inc
cmp
repz
adc
fadd
xchg
out
call
(bad)
(bad)
cmp
and
cmp
push
or
fist
rol
ret
inc
nop
inc
repnz
sub
and
xchg
aaa
mov
into
outs
or
jg
ja
cdq
jo
inc
push
jbe
push
cmps
jno
test
sbb
mov
sahf
(bad)
leave
loop
sahf
xlat
mov
and
add
mov
(bad)
mov
shr
pop
mov
and
pop
cmps
sbb
mov
data16
mov
stos
mov
xor
jno
in
jmp
sbb
xor
and
jno
cs
adc
popf
push
ror
call
iret
xor
loopne
(bad)
jg
jnp
jnp
stc
daa
outs
iret
dec
or
mov
ret
mov
es
sbb
mov
pop
cmp
jmp
xor
pop
iret
mov
aad
mov
inc
cmp
inc
imul
cli
sub
xor
xchg
mov
cmc
push
and
rcl
es
mov
adc
stos
pop
ds
call
and
xchg
ss
fwait
std
faddp
jl
lock
pop
dec
xor
out
fldcw
jae
push
inc
or
call
push
imul
mov
jmp
xchg
push
daa
dec
mov
cmp
dec
psubq
or
or
mov
fisttp
pop
cmp
cmp
ret
mov
out
xor
mov
shr
movs
mov
mov
mov
adc
pop
into
scas
dec
mov
fsubr
inc
fld
daa
dec
dec
push
and
outs
cmc
jecxz
dec
lock
mov
sbb
sub
cmp
or
xor
xchg
mov
xor
lods
test
fcom
jbe
fstp
sbb
xchg
mov
in
imul
xchg
add
fst
push
in
fwait
xchg
jne
push
retf
pusha
mov
mov
lods
stc
stc
rcr
int3
jge
cmp
fcomp
inc
cs
pop
adc
mov
mov
sar
mov
jg
(bad)
cwde
clc
fmul
call
into
sub
mov
arpl
push
js
(bad)
jecxz
inc
mov
repz
nop
sar
arpl
jo
outs
ja
add
sub
(bad)
sub
xchg
(bad)
rcr
data16
mov
push
js
mov
and
fst
mov
arpl
arpl
jns
ja
int
out
jl
mov
xchg
dec
mov
add
shl
sub
ss
movs
mov
cmp
xlat
js
in
jae
mov
add
inc
ja
mov
fcmovnu
sub
cmp
call
sub
pop
sbb
xchg
or
push
or
lea
xchg
xchg
std
int3
add
jne
call
jmp
cmp
lods
mov
call
lods
xchg
es
hlt
pop
pusha
add
int3
ss
(bad)
jge
shld
xchg
add
nop
cld
push
fwait
cs
lds
es
jo
jge
push
jp
push
out
outs
xchg
mov
cmp
xchg
(bad)
loop
movs
xor
(bad)
loop
ss
popf
xor
(bad)
neg
icebp
mov
cld
cmps
jne
push
xlat
dec
cmp
div
mov
popf
add
xchg
pop
popf
data16
push
sbb
retf
sahf
repnz
dec
out
in
and
sar
movs
sbb
cwde
jbe
into
lahf
test
sub
push
mov
or
call
push
push
fimul
int3
mov
mov
xor
fist
aad
test
(bad)
(bad)
fadd
(bad)
add
xchg
jle
xchg
mov
mov
fnstsw
add
mov
dec
clc
sbb
inc
es
ja
outs
clc
int
inc
fcomp
lahf
xchg
mov
dec
sub
into
shl
sbb
mov
push
push
(bad)
in
aad
xchg
jnp
push
stc
out
inc
loopne
(bad)
mov
dec
imul
dec
dec
adc
lock
xchg
jmp
fsubr
nop
movs
dec
push
and
pop
adc
sar
adc
scas
xchg
mov
sbb
sbb
jl
cmps
add
es
mov
pusha
push
push
ds
leave
das
movs
inc
shl
sub
aaa
(bad)
repnz
sub
push
jecxz
or
xchg
fisubr
mov
in
cli
mov
lods
mov
aam
std
push
test
push
lds
std
push
pop
pop
fstp
jae
(bad)
sbb
add
shr
cmp
imul
outs
adc
retf
lahf
mov
ins
add
sti
jle
in
inc
stos
jg
sahf
dec
pop
sub
js
cmp
push
jo
xor
ss
shl
jbe
push
jbe
mov
cmps
test
push
div
imul
pop
pop
push
xlat
cld
je
gs
push
mov
inc
ror
test
xchg
dec
inc
mov
loope
leave
jge
add
mov
ss
std
add
fld
outs
push
push
sbb
daa
xchg
ins
int
fsub
sub
push
cmp
inc
scas
adc
out
and
add
das
ret
xchg
(bad)
and
ins
mov
dec
fist
shl
test
and
xlat
add
jmp
std
mov
scas
add
jae
shl
push
xchg
ja
lahf
rol
sbb
jle
in
hlt
push
lahf
mov
test
stos
pop
pop
fiadd
popf
into
pop
mov
mov
inc
dec
mov
xchg
mov
cli
jmp
sub
adc
dec
das
and
xor
repnz
xchg
cmp
(bad)
loop
push
dec
lea
call
into
pushf
sbb
shl
dec
(bad)
loopne
call
shl
fldcw
mov
sti
sbb
jb
arpl
cmp
add
fdiv
nop
into
nop
push
fst
jo
sahf
jbe
sub
xchg
cmp
jnp
pusha
sbb
or
out
pop
in
adc
arpl
leave
or
fiadd
scas
adc
out
jae
retf
mov
(bad)
iret
ret
mov
das
mov
jno
xchg
outs
daa
inc
xor
ds
jmp
mov
addr16
data16
cld
shl
mov
dec
add
(bad)
nop
sbb
call
ror
push
lahf
sub
cmc
xor
in
push
and
fs
sbb
icebp
ja
adc
xchg
call
ret
hlt
jmp
xor
daa
retf
shl
mov
mov
mov
fs
(bad)
ror
inc
cdq
add
pop
les
pop
fmul
test
inc
mov
xor
xor
dec
outs
icebp
push
push
and
pop
xor
into
test
inc
jo
and
jmp
mov
xor
int3
sub
test
mov
mov
jge
call
pop
dec
add
test
xchg
xor
jle
test
xchg
jmp
je
movs
retf
js
inc
push
mov
jmp
push
fmul
aas
mov
loope
cmp
pop
sub
xchg
inc
push
and
mov
or
int
in
fbld
push
mov
push
sub
rcr
out
imul
push
cmp
adc
(bad)
pushf
push
popf
fsubr
fisubr
lods
dec
in
adc
das
test
push
stc
jo
push
outs
inc
dec
lods
mov
push
push
clc
inc
mov
dec
and
mov
sub
xchg
pavgb
das
push
xchg
sbb
jno
neg
dec
or
xchg
and
daa
xor
gs
jp
inc
cs
inc
push
jns
idiv
mov
cmp
push
cld
dec
or
sbb
adc
xchg
mov
popf
lea
mov
cmp
lock
inc
jnp
and
jge
or
out
popa
rcl
in
xor
pop
jb
mov
jo
pop
jno
clc
jge
mov
dec
loop
or
rol
pop
ror
jns
mov
xor
out
push
pop
mov
inc
test
pop
data16
fs
xor
pop
dec
xor
jecxz
loop
sub
in
outs
out
pop
leave
sub
popf
mov
push
ins
xor
push
xor
add
ds
sub
jae
das
add
ins
pop
cmp
jle
pop
outs
sbb
mov
inc
cmp
add
xchg
cmps
cmp
pop
dec
je
xor
jno
test
adc
daa
ins
adc
fist
xchg
and
or
clc
sbb
(bad)
mov
dec
ja
movs
pop
fstp
arpl
clc
and
xor
pop
in
adc
das
lock
dec
jle
test
stc
or
(bad)
cmp
xlat
jmp
xchg
pop
xor
data16
pusha
lods
mov
push
cmps
push
ins
mov
inc
sbb
repnz
jmp
lahf
add
rcr
mov
aad
adc
dec
test
sub
jge
xor
pop
repnz
in
pop
and
hlt
sbb
repnz
scas
add
or
dec
iret
sub
push
pop
xchg
pushw
test
lods
inc
clc
pop
and
lsl
enter
mov
or
jb
jo
pusha
pop
icebp
xchg
mov
repz
leave
enter
addr16
lea
lock
xchg
ret
into
sub
dec
jb
aaa
cmp
adc
stos
mov
shl
pop
pop
adc
and
sbb
jns
popf
int
in
mov
aad
sbb
sbb
push
jae
or
adc
dec
int
shr
int3
jmp
cmc
imul
fst
mov
fidiv
push
ret
stc
iret
sbb
sbb
mov
repnz
add
fisubr
nop
mov
cmp
xchg
leave
jno
bound
jmp
pop
lea
les
in
es
(bad)
sbb
sub
movs
cmp
js
popa
mov
(bad)
(bad)
aaa
xchg
inc
rol
push
jmp
cmc
fcom
mov
pushf
stos
and
mov
add
mov
mov
ds
mov
outs
mov
jecxz
fs
outs
or
and
push
test
dec
jo
nop
cdq
and
ins
int
xchg
adc
mov
ja
repz
and
cmp
and
arpl
movs
jns
test
add
(bad)
retf
mov
fucom
jns
test
pusha
mov
fcomp
mov
shl
or
cmc
cmps
push
maskmovq
test
jge
mov
rcl
fistp
mov
ror
ja
dec
adc
jl
jbe
(bad)
sti
jae
dec
repz
inc
bswap
sub
test
mov
mov
sub
(bad)
out
lahf
je
ins
bound
adc
jge
call
shl
sub
mov
js
inc
cwde
mov
or
je
shl
out
retf
popf
cmp
push
push
pop
int
jne
mov
adc
sub
(bad)
out
inc
pop
jo
das
js
pop
outs
in
or
inc
xchg
mov
test
lods
xchg
add
jno
scas
into
jb
scas
cmp
ins
das
jmp
sub
lods
inc
jp
outs
sbb
add
or
call
mov
xor
aam
push
pop
repnz
jg
jns
iret
aam
dec
push
push
hlt
pop
data16
jo
mov
sbb
outs
inc
inc
push
mov
(bad)
outs
add
xchg
test
fcomp
or
inc
or
outs
mov
in
cmp
js
sub
aad
inc
xor
inc
inc
retf
(bad)
mov
mov
jo
jmp
mov
and
dec
mov
sbb
cli
call
add
rcl
retf
add
stos
imul
adc
mov
fdivr
adc
loope
xchg
adc
xchg
in
into
fimul
out
push
in
sub
es
loop
stc
test
jge
mov
jmp
adc
outs
dec
test
(bad)
hlt
adc
pop
fmul
or
mov
add
mov
xchg
inc
popf
push
lods
lea
push
cmp
mov
shl
and
add
xchg
aam
(bad)
push
push
and
(bad)
adc
out
out
repz
mov
xchg
ins
sbb
xor
stc
add
shl
and
dec
pushf
sub
pop
lea
(bad)
(bad)
jb
push
cld
js
retf
dec
inc
or
call
cmp
shr
popf
mov
xchg
mov
xor
fidiv
xor
dec
add
sbb
stos
adc
pop
add
sbb
in
out
repz
int3
icebp
int
mov
push
rol
clc
out
cli
enter
ins
cdq
ret
lods
pushf
mov
xchg
shl
les
int
sbb
sar
xchg
repnz
jecxz
icebp
mov
cs
mov
xor
das
cmp
std
out
pop
popa
in
sbb
jecxz
dec
jge
xor
mov
out
popa
dec
cmp
or
movs
call
push
mov
xchg
jno
xchg
jnp
push
add
or
out
jae
test
aas
and
mov
mov
ds
shl
mov
mul
out
push
mov
jae
lods
xchg
fs
mov
mov
inc
mov
cmp
xchg
lea
out
dec
loopne
or
out
mov
adc
repnz
inc
cmp
sub
push
std
(bad)
in
mov
inc
and
mov
sub
aad
nop
outs
mov
sbb
scas
int3
add
push
dec
and
gs
add
jmp
xchg
cmp
pop
call
sar
sbb
mov
xor
add
inc
push
pop
bound
ret
and
aaa
out
imul
and
imul
sbb
(bad)
iret
pop
jmp
stos
retf
push
fldenv
iret
clc
not
movs
cs
test
icebp
jbe
(bad)
mov
sti
cwde
add
es
mov
movs
mov
rcl
fist
pop
xchg
mov
push
xor
rcr
mov
aaa
cmc
idiv
add
into
outs
popf
jne
cmps
scas
and
es
push
mov
rcl
sbb
ja
lds
rol
jb
jmp
out
cmp
cmp
int3
jle
cmp
shl
fwait
into
bound
and
sar
jmp
cmp
xchg
lock
mov
pop
repz
outs
jno
or
clc
cmp
cdq
xor
leave
push
int
push
sar
ds
dec
mov
repnz
mov
jo
dec
mov
jl
scas
mov
cmps
imul
ror
sbb
xchg
pop
call
(bad)
push
xor
retf
fwait
cwde
or
inc
push
clc
sub
lods
int3
inc
push
xor
xchg
stc
xor
pop
retf
cli
pop
sub
mov
push
outs
add
pop
jno
sbb
movs
icebp
pushf
inc
(bad)
push
mov
aam
jle
out
imul
mov
cdq
popa
xchg
jb
call
sub
cwde
fsubr
ins
sahf
sub
cmc
xor
sti
rcl
fidiv
lock
push
xor
cmps
jg
xor
or
cdq
pop
mov
jmp
fwait
xor
pop
push
test
pop
dec
in
or
jnp
mov
je
xchg
mov
fs
mov
inc
sbb
or
pop
retf
jbe
addr16
fs
mov
aam
and
mov
jp
inc
outs
int3
call
ja
adc
pop
and
xor
push
add
ret
mov
sahf
jg
cwde
mov
(bad)
rol
(bad)
movs
inc
ret
pop
sub
adc
xchg
cmp
pop
loopne
sbb
sub
rep
or
dec
pop
adc
in
in
sahf
(bad)
enter
int
int
mov
xchg
xlat
popa
sub
pop
aaa
imul
sbb
fstp
jecxz
arpl
lock
jb
jp
je
idiv
test
mov
adc
jo
mov
push
sbb
inc
push
xor
lds
rcl
jmp
cmp
adc
cmc
mov
or
out
push
adc
and
push
scas
cmp
mov
adc
imul
xchg
mov
xor
cmp
mov
cmp
jecxz
mov
(bad)
les
pop
sub
xor
pop
mov
pop
add
in
stos
pop
dec
and
fnstsw
movs
fcom
scas
rcl
add
call
in
or
lods
or
aas
xchg
stc
mov
push
cmp
movs
xchg
add
adc
sub
mov
fist
inc
mov
into
pop
xchg
loop
lock
and
or
jno
mov
je
lods
aaa
mov
and
sbb
pop
into
lods
pop
and
mov
in
mov
mov
jmp
jg
cwde
ja
mov
jne
adc
daa
pop
add
cmp
xchg
fist
sbb
cld
cwde
xchg
pop
or
(bad)
pop
ret
sub
jle
loop
fisub
xchg
pushf
loopne
add
dec
ins
push
retf
or
mov
call
mov
loopne
lods
repz
lds
and
mov
jo
popf
scas
add
sub
push
outs
cmp
(bad)
cmp
jo
mov
call
sub
stos
mov
jmp
cmp
cli
inc
je
ret
stos
or
pop
(bad)
jmp
and
cmp
add
jecxz
test
(bad)
out
lahf
fist
sbb
push
test
adc
ja
outs
sar
into
ja
push
adc
imul
jns
adc
pop
test
jl
jl
call
or
mov
cmps
ficomp
fidivr
cdq
scas
outs
pop
jge
xchg
sbb
stc
clc
rcl
adc
dec
jl
dec
(bad)
repz
fsubr
mov
mov
mov
cmp
in
sbb
imul
xor
dec
inc
cwde
(bad)
jns
sar
inc
(bad)
sub
fwait
lods
das
test
push
add
in
sbb
inc
call
cmp
cmp
sub
out
sub
rcr
js
das
xchg
or
aas
in
xor
stc
repnz
inc
pop
mov
push
fidiv
xchg
add
ins
push
push
dec
(bad)
aad
mov
mov
(bad)
fiadd
push
mov
cmp
or
pop
stos
cmp
jnp
push
cmps
outs
jmp
mov
sub
mov
pop
rcr
les
jge
ficomp
and
mov
sbb
cs
jge
mov
sub
fcmovne
push
mov
cmp
arpl
inc
jle
call
sub
jg
xchg
out
xchg
sub
scas
clc
mov
xchg
mov
clc
out
(bad)
icebp
inc
sbb
imul
adc
mov
fdiv
cmps
sbb
pop
sub
mov
xor
call
jno
xchg
aaa
mov
push
inc
dec
rol
repz
mov
rol
cmps
mov
sbb
je
fistp
mov
test
cmp
cs
push
fcomp
sbb
jle
mov
das
adc
retf
cdq
mov
les
mov
dec
or
jl
mov
cld
or
pop
scas
pop
stos
rcl
cmp
inc
stos
frstor
fwait
sar
xor
add
leave
repnz
fstp
outs
push
inc
jecxz
push
mov
mov
lods
js
mov
and
mov
inc
sbb
or
lods
push
mov
pop
or
push
aaa
fadd
je
xor
sbb
and
in
xor
stos
mov
loop
arpl
out
and
cld
les
imul
stos
push
mov
mov
xor
or
inc
jg
inc
cmp
xchg
popf
mov
ins
pop
lea
sbb
out
dec
mov
cwde
test
jmp
inc
ins
pop
int
(bad)
pop
ret
fcomp
push
push
push
nop
leave
fs
push
xchg
sbb
es
arpl
xor
mov
jecxz
jmp
fsubr
iret
sub
sub
das
dec
mov
mov
ret
push
mov
mov
sub
sbb
adc
cmp
loop
sub
adc
add
push
or
jecxz
je
mov
retf
in
aas
cmc
sar
and
es
dec
adc
jb
mov
cdq
inc
mov
mov
out
mov
ins
or
lock
test
xchg
jmp
xor
pop
loopne
lods
cmp
mov
xchg
xchg
imul
aas
nop
fld
xchg
(bad)
push
push
clc
and
cdq
adc
sub
not
imul
sti
shr
inc
or
cmc
movs
test
inc
out
push
es
rcr
loopne
loop
pop
aas
mov
push
pop
es
pop
mov
outs
mov
imul
adc
stos
and
lock
mov
imul
xlat
jl
and
push
jns
xor
bnd
scas
lods
and
test
cmp
mov
repz
add
pop
les
fiadd
push
cmp
sar
retf
or
jns
in
retf
push
lds
jle
sbb
shl
mov
add
(bad)
xchg
mov
mov
jecxz
xor
(bad)
fldcw
scas
sub
and
push
cwde
(bad)
int
mov
mov
xchg
pop
(bad)
lods
pushf
fdivr
jno
outs
aam
mov
mov
in
sub
movs
jmp
(bad)
mov
imul
pop
pop
leave
mov
inc
jecxz
fisubr
lahf
sub
cmps
or
ja
push
cmp
imul
nop
adc
outs
sub
push
imul
jb
or
stos
(bad)
loope
or
leave
ins
das
mov
dec
jmp
inc
pushf
push
vzeroall
sub
sbb
out
movs
push
cmp
and
xor
dec
iret
stos
sar
sub
cdq
mov
and
push
std
jno
lods
aam
rcr
xchg
scas
sahf
rol
loop
outs
stos
mov
mov
iret
inc
loop
dec
xchg
sub
mov
stos
ds
jp
push
cmps
sub
jmp
or
cmp
adc
and
or
pop
or
gs
sbb
pop
add
repz
call
out
cld
clc
(bad)
call
aad
pop
add
pop
add
adc
dec
(bad)
ret
lahf
rol
ins
retf
sbb
aaa
inc
sbb
outs
fisubr
loopne
add
cli
jecxz
fcmove
pop
pop
jns
retf
sti
sub
add
push
xor
cld
push
sub
int
sbb
fdivr
dec
and
push
push
push
cmp
nop
xchg
ds
ins
mov
(bad)
sbb
add
sub
(bad)
jns
fisubr
xor
lods
(bad)
popa
popf
push
pop
add
cmp
inc
std
aaa
xor
mov
mov
retf
and
push
(bad)
out
pushf
outs
mov
jecxz
inc
mov
jo
cmps
dec
out
hlt
mov
adc
aad
add
int
or
pop
test
jb
test
retf
xor
js
dec
jmp
adc
cmp
xlat
mov
scas
in
and
sub
cmp
test
fild
inc
add
pop
mov
cmps
outs
icebp
mov
sub
cmc
xor
sub
(bad)
dec
jae
sahf
push
into
leave
mov
and
test
dec
call
mov
fcom
aas
dec
rcr
ins
cmc
sub
data16
push
or
jp
cli
mov
les
ins
xlat
jl
jae
(bad)
fsubr
lods
cld
add
retf
pop
xchg
cmp
loope
or
repz
scas
fcomp
daa
out
push
stc
pushf
enter
or
ins
add
fld
loop
and
sbb
loop
xchg
cdq
retf
sub
jmp
xor
mov
mov
pop
ret
loop
retf
mov
fbld
adc
mov
adc
xchg
xor
js
sub
fmul
xor
fisubr
push
fild
call
fcmovnu
xchg
sar
lds
dec
pop
xchg
and
and
jb
and
pop
stos
jne
dec
jne
jmp
xor
ja
stos
iret
lods
jecxz
ret
mov
fstp
cmp
ja
retf
stc
loop
sub
imul
adc
leave
cmp
mov
loope
leave
sbb
and
push
xchg
stc
cld
sbb
mov
cmps
in
add
cs
mov
inc
xchg
ja
cmc
ins
xchg
xchg
mov
scas
dec
mov
or
fcmovbe
movs
or
mov
xor
aaa
cld
aad
enter
sahf
add
fcom
or
pop
push
dec
inc
popa
dec
push
add
mov
fsubr
push
popf
push
cmp
push
lods
dec
test
mov
lods
pop
stos
xor
test
mov
lock
loopne
push
ret
scas
call
icebp
fdiv
sub
ja
fdivr
repz
xchg
mov
ja
pop
ds
sahf
inc
(bad)
or
add
fsubr
mov
bound
mov
jecxz
(bad)
push
jecxz
pusha
in
mov
icebp
xchg
push
dec
mov
adc
test
mov
popa
sbb
inc
cmp
fsubrp
aam
adc
cdq
xor
cs
push
pop
sbb
sbb
jno
mov
add
or
pop
dec
(bad)
(bad)
cmp
test
ins
cmp
nop
cmp
mov
xchg
jbe
mov
sub
call
call
push
out
xor
mov
bound
sub
pop
dec
gs
mov
mov
mov
mov
push
ss
cmc
jae
in
xchg
push
adc
pop
push
sub
mov
dec
mov
pop
movs
je
lea
jl
pop
mov
int
jo
xchg
or
push
dec
(bad)
jmp
lods
jne
push
outs
mov
imul
and
mov
mov
jg
jnp
test
rol
xchg
or
in
jl
or
fnstenv
ins
or
mov
add
shl
not
sub
(bad)
fdivr
imul
repz
sub
(bad)
cmp
repz
sub
add
or
jmp
xor
sbb
push
cmc
nop
mov
rcr
in
ins
mov
into
fs
(bad)
outs
pop
movs
cmps
rol
cwde
lods
cmps
pop
fst
out
add
pop
das
pop
jnp
in
enter
sbb
nop
xor
ret
ret
jns
fcomip
rcr
lods
ss
mov
mov
shl
pusha
mov
mov
stos
dec
sbb
lds
fwait
ret
sbb
sti
push
cmp
lock
sub
repnz
stc
imul
push
loop
inc
pop
test
mov
mul
dec
loop
dec
aaa
pop
sub
(bad)
retf
fadd
cli
test
sub
adc
pop
mov
addr16
mov
dec
cmp
retf
xchg
cmp
(bad)
repnz
movs
cmp
scas
jl
enter
pushf
inc
lods
add
aas
sub
js
fs
out
cwde
and
pop
xlat
mov
inc
xchg
adc
sbb
leave
js
js
jne
push
in
or
std
jle
jno
int3
adc
mov
mov
rcr
aaa
inc
mov
mov
in
push
sbb
clc
test
jne
push
mov
xor
mov
jb
test
pushf
fisttp
cwde
or
rcr
loope
dec
pop
iret
shr
xchg
jbe
mov
mov
mov
ss
mov
xchg
popf
in
sbb
movs
retf
xchg
stc
xlat
inc
push
jmp
pop
cmp
dec
push
scas
lahf
in
cdq
sbb
mov
aaa
push
adc
xchg
int
cmps
cmp
add
xchg
xor
sub
or
les
xchg
aas
pslld
push
mov
ja
adc
inc
and
add
mov
nop
(bad)
into
mov
mov
ret
jge
pop
popf
(bad)
cmp
inc
jne
outs
and
mov
iret
cmp
inc
xor
call
inc
mov
pop
push
jnp
xchg
ret
aam
mov
das
stos
sub
scas
pop
mov
outs
enter
fdivrp
dec
lahf
movs
and
(bad)
or
inc
iret
xchg
cmp
pop
es
mov
les
jnp
and
cmp
mov
sbb
call
icebp
(bad)
mov
push
mov
lock
(bad)
in
ins
inc
cmp
fmul
xor
int
out
ss
pop
inc
dec
dec
lods
out
fs
imul
test
or
push
outs
lahf
aas
jae
in
jle
test
cli
inc
test
ss
loopne
push
cmp
jae
stos
stos
pop
mov
jg
movs
pusha
push
cmps
popf
les
push
dec
cmp
inc
aad
or
jl
pop
adc
cwde
popf
or
test
cmps
sub
sbb
dec
and
sub
inc
ja
stos
xchg
fistp
test
or
pop
jecxz
inc
jge
jb
or
mov
leave
in
jae
pop
addr16
ret
xor
add
les
daa
mov
lock
mov
repnz
mov
pop
or
dec
(bad)
jnp
add
adc
bound
(bad)
xchg
mov
imul
call
pop
mov
inc
icebp
pusha
cmp
dec
cs
repz
dec
pop
sbb
jne
mov
jb
ins
mov
add
sbb
clc
mov
xchg
mov
shr
das
mov
int3
shl
xchg
pop
xchg
pcmpgtd
add
push
cdq
xor
mov
mov
(bad)
pop
xchg
mov
xchg
sub
stos
and
popf
or
and
inc
push
sti
xchg
and
add
loope
push
or
and
fwait
dec
xor
push
movntq
shl
mov
or
fld
scas
mov
stos
fmul
pop
scas
lahf
mov
mov
fnstenv
ss
cwde
sahf
cmp
push
xchg
mov
inc
jbe
mov
hlt
sti
es
and
or
cmp
(bad)
xor
xor
xchg
jg
iret
mov
bound
and
into
xchg
arpl
add
mov
sbb
popa
and
lods
sbb
outs
lahf
out
out
in
pop
int3
jle
xor
out
not
inc
jnp
sar
movs
xor
inc
cwde
call
lods
mov
mov
jmp
push
cmps
out
cs
lds
cmp
pop
pop
aaa
inc
call
call
lea
sub
inc
push
or
imul
cmps
sti
aad
dec
mov
out
mov
push
mov
cmp
popa
jge
add
lds
sbb
inc
and
fst
inc
xchg
and
stc
out
xchg
mov
popf
bound
mov
mov
repnz
mov
aad
inc
ficom
fcom
fistp
ficom
icebp
mov
iret
shr
popa
pushf
call
jg
addr16
push
pusha
test
fisubr
inc
jbe
sahf
int3
js
add
xor
cmps
lea
mov
es
or
mov
data16
lahf
lds
sti
push
xchg
xchg
cwde
cmp
push
sub
sub
fistp
sub
cmps
sbb
fidiv
popa
mov
ret
mov
xchg
push
pop
int
in
mov
xchg
in
sbb
pop
in
dec
fldenv
movs
mov
xor
stos
loope
cmp
or
nop
test
or
movs
jmp
out
in
(bad)
mov
clc
jmp
hlt
mov
xor
or
jge
bound
rol
repnz
rcl
outs
inc
loopne
mov
mov
mov
jns
js
fiadd
mov
jno
cs
pop
into
popf
dec
ret
or
jo
and
(bad)
push
jns
mov
ds
jmp
dec
mov
js
sti
cmc
mov
inc
or
dec
add
data16
adc
push
mov
mov
push
cwde
int3
inc
mov
shr
sub
cmps
cld
xchg
jmp
(bad)
in
adc
repnz
push
push
test
jg
dec
mov
mov
mov
retf
enter
push
and
in
in
pop
ret
xchg
jbe
(bad)
movs
mov
fbld
cld
cld
lods
test
sub
icebp
loopne
adc
or
jp
mov
sbb
dec
mov
inc
fcomp
push
mov
sub
into
lea
sti
jp
scas
out
mov
test
scas
xor
xor
inc
dec
stc
retf
mov
not
div
ja
sub
xchg
add
push
mov
into
push
inc
xor
aaa
pop
xchg
js
push
xor
push
dec
test
mov
mov
xor
stc
adc
sbb
jo
mov
aas
mov
in
(bad)
xor
xchg
xor
and
mov
inc
ror
push
mov
ds
cld
aam
imul
stc
test
or
xor
cdq
cmp
and
rol
and
int3
arpl
or
out
mov
leave
jmp
leave
stos
and
mov
lods
xor
sbb
sar
xchg
add
cmp
das
sti
ficomp
mov
int3
mov
outs
pop
in
fld
lock
adc
push
ror
rol
mov
dec
adc
popf
or
mov
pusha
out
and
dec
sahf
sub
fwait
adc
cmp
jmp
pop
push
push
call
int
sub
push
es
inc
xor
or
pushw
call
stc
popf
stc
mov
cmc
jl
sub
in
adc
ret
pop
jbe
test
push
pop
xor
push
lods
xchg
dec
retf
ja
cmp
lds
add
jecxz
inc
shl
mov
mov
and
je
cmps
or
inc
xor
mov
aam
shr
sub
js
dec
pop
fnsave
outs
add
mov
fnsave
jae
mov
mov
in
pop
aad
and
clc
or
ins
jmp
repz
lea
push
xor
push
inc
pop
and
loope
add
fnsave
stos
sbb
pop
lahf
in
pop
and
out
sar
fstp
js
xchg
in
(bad)
pop
das
push
dec
pusha
rcr
sbb
loop
fidiv
pop
leave
mov
mov
cmp
(bad)
dec
test
pop
adc
fld
add
adc
and
mov
cmp
cmp
add
stc
xchg
pop
jne
or
aas
in
(bad)
jl
mov
(bad)
mov
dec
xchg
lods
sub
std
repnz
fbstp
adc
(bad)
bound
xor
(bad)
sti
sub
rcr
sub
sbb
sub
sub
pusha
fild
xor
fsubr
enter
or
loope
fmul
inc
movs
xor
jp
(bad)
sub
leave
pop
xchg
mov
push
outs
js
mov
inc
inc
adc
stos
or
inc
or
int3
rcr
jp
mov
retf
inc
sbb
xor
push
add
aaa
aaa
xchg
add
pop
or
pop
xor
fwait
loop
push
add
add
push
ins
icebp
mov
mov
scas
xchg
mov
sbb
xor
ins
xchg
outs
pusha
int3
mov
ins
xchg
call
dec
xchg
lods
sti
add
mov
push
cli
fild
mov
xchg
int
push
pushf
xchg
fsub
in
(bad)
mov
cmc
dec
add
jl
jge
shl
mov
mov
stos
repz
add
fcom
push
pop
daa
mov
test
xchg
out
mov
daa
retf
leave
icebp
jo
push
and
add
mov
aam
jp
cwde
fdiv
push
int3
out
adc
je
out
xchg
pushf
adc
dec
dec
mov
adc
mov
popf
adc
lods
or
sbb
mov
pop
pop
mov
pusha
aam
es
mov
xchg
pop
pop
add
and
sbb
push
fwait
in
fld
xchg
mov
mov
or
test
test
out
jno
mov
clc
cs
loop
cmp
outs
adc
mov
pop
adc
push
add
jecxz
sbb
sbb
cli
jmp
adc
pop
jae
aam
pusha
xchg
add
ins
push
cmp
cmp
ins
arpl
and
sub
inc
add
inc
adc
push
and
push
pop
dec
sub
cli
inc
loopne
sub
pop
mov
imul
lods
shr
sahf
iret
pop
pop
out
inc
addr16
xchg
mov
shl
fcmovnbe
lds
ins
cmp
in
mov
push
retf
sti
push
dec
cwde
pusha
lods
int3
(bad)
pop
push
push
jg
mov
out
inc
cmp
mov
push
jo
pop
mov
sahf
adc
pop
inc
xrelease
mov
dec
xor
inc
mov
mov
push
sub
lds
adc
jl
out
fiadd
mov
out
cmp
mov
jo
xor
cmp
pop
fiadd
cli
pop
push
dec
jae
retf
(bad)
push
ins
data16
stc
(bad)
int3
shl
or
mov
cmp
es
cmp
push
(bad)
daa
add
cmp
push
dec
imul
jns
pop
rcr
dec
jae
fst
mov
(bad)
iret
jmp
ins
fsub
adc
sub
into
(bad)
xor
jge
cmp
mov
xor
push
les
retf
xor
adc
or
ins
fcmovne
xor
cmp
sub
ins
test
das
push
inc
add
lahf
add
sub
push
cdq
mov
test
lods
jl
retf
push
cmp
push
cdq
popf
push
out
mov
or
jmp
fnstenv
mov
adc
add
add
ja
xchg
out
cmp
(bad)
or
adc
repnz
icebp
fldenv
and
xor
fmul
push
cmp
jmp
bound
bound
sub
pop
sbb
or
rcl
std
cmp
imul
stos
(bad)
in
mov
scas
repnz
iret
push
(bad)
mov
inc
pop
call
or
pop
gs
adc
jno
and
daa
push
enter
test
jp
fwait
test
mov
xor
inc
scas
out
ret
mov
xor
test
pop
push
fcmovb
sub
pop
test
in
(bad)
and
push
imul
hlt
lods
mov
xlat
add
(bad)
out
scas
dec
movs
adc
les
sbb
add
inc
fild
test
jne
add
cmc
call
cwde
fs
mov
test
and
pusha
jg
sub
push
stos
in
ds
pushf
div
jl
pushf
ss
leave
sbb
or
dec
addr16
jnp
lahf
test
mov
cwde
pop
or
test
push
adc
je
pop
retf
adc
add
adc
shl
mov
xchg
mov
adc
or
fisubr
push
jbe
lea
lods
ja
movs
jg
outs
and
movs
inc
dec
sti
ins
and
pop
jle
nop
xchg
mov
jns
pop
(bad)
fiadd
shr
sub
in
xchg
dec
xchg
mov
xor
cld
mov
mov
retf
lods
imul
test
mov
cmps
pop
(bad)
or
scas
cmp
push
or
mov
or
test
cmp
repnz
mov
cli
popa
sub
jae
jl
mov
cmps
(bad)
ins
es
or
push
movs
sbb
cld
mov
jo
jmp
jp
popa
push
movs
xchg
adc
(bad)
out
pop
fdiv
mov
add
mov
xchg
jl
out
lea
sub
push
push
inc
and
sub
scas
and
cmps
and
xor
aas
lock
cdq
mov
test
cmc
mov
mov
fwait
test
and
loope
shr
pusha
test
push
enter
lds
sbb
sbb
das
nop
fldcw
adc
push
lock
mov
fstp
cmps
hlt
aad
out
mov
mov
outs
gs
es
in
adc
cmp
and
sub
nop
daa
jbe
pop
mov
mov
stos
mov
call
xchg
or
out
pop
js
add
xchg
dec
or
jnp
cmps
mov
outs
jnp
pop
and
mov
ja
add
and
or
mov
nop
test
pushf
icebp
cdq
iret
sbb
daa
or
ss
aam
sbb
out
popf
and
fdivr
inc
mov
dec
and
mov
jae
cli
es
out
mov
ja
std
sahf
gs
mov
mov
jp
(bad)
cmc
aad
inc
fsubr
xor
or
xchg
add
fisttp
movs
mov
fidiv
mov
xchg
dec
mov
mov
jg
retf
sub
in
int
stc
and
pop
lods
inc
data16
out
adc
add
adc
hlt
push
xor
ret
and
jno
or
es
adc
inc
dec
push
and
xchg
jb
inc
stos
sub
fistp
adc
rol
dec
cdq
xor
inc
cmp
test
shl
enter
(bad)
mov
shl
xchg
xchg
pop
mov
(bad)
push
dec
test
fwait
loope
push
cdq
jg
(bad)
xchg
sbb
movs
orps
jecxz
or
adc
sbb
push
xchg
inc
les
fsub
test
cmp
pop
adc
push
(bad)
push
add
sbb
jb
nop
sub
pop
and
fbld
xchg
movsx
xchg
mov
cmp
clc
stos
mov
call
mov
ret
enter
ret
xchg
in
test
mov
sbb
cmps
push
mov
aad
and
fsubr
xor
mov
xchg
cmp
enter
mov
and
mov
outs
lods
cmps
pop
push
rol
clc
pop
adc
jmp
inc
aam
imul
sub
pop
ins
mov
push
dec
or
ficomp
shl
cli
in
(bad)
push
jmp
aas
push
pop
mov
mov
xor
dec
or
out
jmp
xchg
cmp
in
out
sbb
(bad)
xor
dec
outs
fstp
imul
sub
sbb
call
sbb
js
jp
lahf
inc
daa
std
add
iret
loopne
cs
cmp
hlt
sub
xchg
add
dec
in
out
xchg
test
dec
push
jp
pop
cmc
pop
jecxz
inc
out
das
ss
or
push
aaa
fist
push
or
push
ror
cmps
leave
push
outs
push
cmp
sub
push
xchg
cwde
push
test
leave
cmp
push
sbb
or
imul
hlt
lods
mov
fabs
push
int
add
pop
add
and
outs
adc
mov
sub
xchg
in
sti
jo
fisubr
push
popa
movs
pop
cld
pop
pop
dec
push
popf
pop
(bad)
in
push
mov
xor
repnz
sub
test
je
stos
pop
mov
lock
cmp
dec
sub
mov
pop
xor
int
test
scas
xchg
and
mov
mov
add
jp
cmps
add
xlat
out
fdivr
jmp
repz
pop
adc
mov
and
cmps
(bad)
push
push
fmul
cmp
mov
cld
mov
inc
and
nop
cmp
sbb
adc
pop
cmp
inc
ror
daa
add
jle
outs
jmp
inc
fdiv
inc
xor
imul
aaa
gs
out
sub
imul
js
(bad)
icebp
leave
ret
jne
xor
cmps
cmc
rcr
or
dec
sbb
sub
add
inc
jmp
push
rol
push
jecxz
or
stc
std
pop
jmp
int3
out
mov
ins
and
scas
xchg
div
les
push
xlat
sahf
movs
aad
pop
gs
adc
or
pop
fsub
sbb
outs
popa
not
stos
outs
rcr
outs
mov
mov
loop
adc
pop
out
and
cld
xchg
jmp
fistp
and
shr
adc
xchg
xor
jbe
jge
mov
inc
dec
xor
jno
mov
clc
lea
jno
pop
pop
xchg
cmp
ins
frstor
sub
data16
(bad)
or
xchg
sbb
cmp
mov
std
call
and
cmp
jg
sbb
and
mov
dec
mov
push
and
in
sub
inc
jb
mov
stos
in
xchg
mov
mov
and
sbb
mov
retf
cmp
hlt
cmps
jle
fwait
xchg
push
neg
mov
dec
jmp
mov
scas
iret
push
mov
push
push
and
(bad)
lock
test
sub
ja
jbe
pop
sbb
mov
aaa
mov
cmp
pushf
mov
nop
mov
cmp
sar
aaa
adc
fcom
inc
inc
and
xchg
pop
sub
rcl
mov
int
adc
add
and
cmp
dec
adc
push
les
or
call
je
retf
push
sub
std
mov
jp
scas
dec
out
and
dec
gs
cmp
cmp
(bad)
loope
mov
xchg
fst
inc
inc
sbb
cs
inc
and
mov
sub
mov
test
push
add
aaa
(bad)
mov
jnp
ret
out
adc
fild
test
add
cld
pop
test
xchg
xor
scas
sub
sahf
leave
cmp
push
inc
aas
mov
imul
into
movs
lss
int
inc
retf
daa
pop
out
neg
jns
fsubr
mov
movs
dec
out
call
cmp
jp
xor
dec
inc
sti
push
inc
mov
jae
mov
sbb
dec
xchg
(bad)
push
sbb
adc
aas
inc
push
jmp
sub
stos
rcr
push
mov
lods
dec
sbb
adc
cmp
lahf
pop
xchg
jmp
jnp
sub
push
mov
stc
jno
sbb
bound
or
iret
ror
dec
enter
clc
sti
fld
cmp
sub
sub
cli
cmp
out
sub
fs
and
les
sahf
pop
adc
inc
lods
cmp
xor
sti
loop
rcr
fcmovnbe
sub
push
in
in
push
test
mov
adc
pop
in
fidivr
fs
mov
leave
xchg
aad
pop
loope
xchg
push
pop
outs
popf
or
push
push
or
xor
pop
(bad)
sub
frstor
jecxz
xlat
adc
int
fadd
cmp
push
jg
pop
add
aas
cwde
pop
dec
jne
mov
cmps
fcom
cmc
xchg
push
mov
enter
push
jbe
xor
xor
push
inc
fndisi(8087
lods
mov
add
pop
push
out
sbb
stc
cmc
ins
cmp
adc
mov
lahf
push
mov
xchg
xchg
test
fidiv
ds
sbb
(bad)
ins
sbb
adc
mov
ins
push
call
mov
ficom
xor
mov
out
add
cld
out
sub
int3
jae
fnstsw
inc
fwait
hlt
sbb
dec
and
sub
retf
adc
dec
rcr
std
or
mov
xor
jl
inc
es
xchg
inc
xchg
push
xchg
shr
pop
push
cmp
push
sbb
lods
mov
xor
mov
out
es
les
pop
test
sbb
shl
dec
lock
rcl
jg
mov
repz
movs
lock
cwde
or
mov
test
add
scas
jns
mov
mov
mov
bound
aam
cli
es
add
xor
int3
call
movs
test
mov
adc
scas
out
inc
inc
stos
fxch
mov
sub
lock
mov
bound
mov
fimul
es
and
push
mov
movs
cmp
out
or
xor
mov
sub
jg
retf
les
jmp
loopne
mov
ins
retf
or
dec
(bad)
cli
popf
xor
js
cmc
cs
jmp
or
push
or
push
ret
jmp
or
inc
ret
mov
xor
pop
xor
sub
in
daa
adc
inc
pop
sub
pusha
mov
(bad)
popf
(bad)
or
jno
rol
jle
les
daa
(bad)
shr
push
sbb
jmp
cmc
or
dec
push
pop
lock
int
inc
gs
jne
pusha
mov
lods
bsf
repz
push
jmp
ja
cwde
arpl
scas
mov
stos
inc
fidiv
retf
mov
ror
mov
push
call
adc
pop
sub
mov
jecxz
shr
in
call
(bad)
sbb
test
iret
ret
sub
repnz
lea
push
fwait
cmps
xchg
clc
stos
mov
stos
push
rol
or
fmul
imul
push
imul
adc
fidiv
cmc
xor
add
lock
(bad)
jmp
add
pop
sub
lea
xor
icebp
add
test
or
dec
mov
or
or
ins
nop
ins
mov
sbb
xchg
out
cli
stos
icebp
xor
adc
jp
and
sub
int3
stc
enter
mov
call
mov
int
icebp
es
loope
gs
mov
dec
adc
es
jae
lock
dec
(bad)
cmps
push
pop
scas
jb
jecxz
repnz
or
xor
add
test
fs
xor
xchg
inc
mov
scas
push
in
mov
in
and
iret
shr
xor
xchg
pop
aad
shl
out
pop
and
mov
ret
int
cmp
inc
mov
push
dec
pop
cmp
loope
xchg
push
movs
cmp
adc
sub
push
mov
setge
aaa
xlat
xchg
(bad)
push
cmp
xlat
(bad)
and
push
sub
sbb
out
test
stos
dec
out
xchg
xchg
jmp
jge
ss
out
push
loop
or
rcl
inc
fmul
mov
retf
inc
or
fild
fs
xlat
sahf
dec
popa
mov
dec
jecxz
(bad)
shr
mov
out
(bad)
push
paddusw
in
sbb
es
arpl
sbb
mov
into
call
pop
aaa
ds
aad
out
repz
cld
out
lsl
loopne
in
jno
jmp
test
(bad)
call
les
std
dec
sub
push
push
out
mov
jno
movs
or
mov
xchg
nop
sbb
ficom
lods
mov
pop
into
sub
lods
adc
mov
retf
adc
in
and
dec
data16
pop
(bad)
pop
mov
push
mov
mov
inc
aas
pop
mov
and
mov
std
outs
arpl
movs
sub
pop
cld
test
ficom
out
xchg
sub
rep
test
cdq
mov
movs
or
sub
stc
pop
add
jo
icebp
in
sub
mov
xor
inc
repnz
jmp
sub
xor
adc
popf
and
icebp
mov
neg
or
pop
out
int
repz
mov
retf
push
xchg
add
inc
push
rcr
aad
cmps
in
leave
sbb
push
ss
fwait
pop
push
push
sahf
jle
and
xchg
js
lods
cmovs
lods
out
jg
cmp
movs
ss
popf
inc
sub
stos
mov
sar
sub
xchg
mov
(bad)
xor
sub
data16
nop
push
xchg
rcr
add
push
enter
xchg
add
mov
data16
xlat
fstp
(bad)
rol
sub
pop
jno
or
mov
xor
mov
pushf
mov
mov
adc
dec
xchg
dec
mov
ficomp
xor
(bad)
stc
ja
xlat
dec
dec
js
adc
cmp
mov
cmps
xor
(bad)
lds
(bad)
or
mov
loope
mov
jge
movs
clc
in
daa
neg
das
mov
mov
movs
js
xchg
je
movs
jae
daa
push
rcl
out
pushf
adc
scas
sub
cmp
push
test
xor
std
shr
xor
jae
sub
ret
dec
les
test
sbb
std
push
xor
mov
add
stc
and
jp
xor
xchg
repz
pop
ja
inc
xchg
adc
fld
aaa
sti
or
pop
lods
loop
pop
and
xchg
inc
sub
pop
cld
hlt
mov
adc
dec
es
push
out
xor
sub
fwait
icebp
not
adc
mov
cmp
shl
jp
sbb
aad
mov
into
xor
mov
cmp
sbb
hlt
iret
push
repnz
inc
xor
mov
push
test
outs
jne
lock
jmp
call
xlat
mov
out
out
sbb
and
xor
dec
lock
lods
out
nop
dec
call
fcomip
xor
repz
xchg
jl
push
adc
ret
mov
sub
add
cmc
and
test
(bad)
mov
and
fistp
idiv
dec
stos
cli
sbb
adc
outs
sub
mov
movs
fdivr
ds
jmp
jp
jge
add
and
add
sub
into
xor
jg
cmps
arpl
inc
gs
and
or
sub
cld
arpl
and
mov
rcl
xlat
xchg
in
mov
pop
push
inc
(bad)
fisttp
popf
mov
xor
jmp
lods
lock
scas
cmp
sub
jg
xor
and
pop
push
ja
mov
pop
adc
ror
cbw
adc
(bad)
pop
mov
pop
ss
cld
add
and
sub
scas
scas
mov
push
push
test
rcl
pop
xor
inc
inc
dec
xor
in
mov
ret
clc
lahf
and
outs
movs
cmp
gs
add
mov
adc
add
and
stos
dec
test
mov
sar
inc
mov
shl
jmp
adc
dec
(bad)
loopne
sbb
or
scas
and
mov
retf
or
jb
dec
sbb
scas
sti
or
jp
mov
imul
daa
pop
repnz
(bad)
and
lea
les
shl
mov
jae
mov
xlat
loopne
jl
mov
mov
repz
rol
push
mov
outs
lahf
mov
jmp
adc
scas
arpl
vmovhps
cmp
mov
(bad)
popw
push
jne
add
lahf
adc
pushf
inc
gs
mov
fidiv
inc
and
xor
and
cld
and
mov
dec
fsubr
movhlps
hlt
scas
push
jbe
ins
xchg
cdq
mov
mov
mov
add
sahf
and
cdq
sub
push
in
cld
mov
test
arpl
rcl
popa
sbb
dec
cmp
scas
add
xlat
outs
pop
(bad)
dec
sbb
cmc
and
xchg
bound
jecxz
cmps
pop
in
and
push
dec
jge
mov
xor
dec
fld1
(bad)
int3
mov
lea
jbe
shr
and
test
add
push
shr
xchg
jne
xor
xor
mov
sbb
xor
cld
adc
(bad)
mov
retf
hlt
gs
mov
mov
or
ja
inc
(bad)
sar
cwde
push
fisub
aam
sti
xchg
mov
cmps
jecxz
add
add
add
adc
pop
jbe
out
test
push
sbb
mov
xor
in
or
mov
sub
jb
enter
mov
push
mov
push
mov
sub
cdq
aaa
loopne
out
mov
mov
and
mov
pop
fild
mov
mov
fwait
dec
test
pop
adc
and
(bad)
neg
mov
mov
das
or
sub
push
mov
ds
aad
push
xlat
push
test
fwait
sub
lea
fidiv
ficomp
pushf
icebp
mov
fbstp
ds
dec
clc
hlt
fwait
pushf
xchg
mov
mov
lods
mov
stos
ins
sbb
leave
jmp
out
xlat
and
test
das
or
in
mov
xor
mov
dec
pop
ins
mov
mov
mov
dec
cmp
imul
ret
retf
fdivr
sub
inc
cmps
dec
adc
(bad)
repz
push
das
mov
ffreep
mov
repz
mov
jge
mov
mov
pusha
push
adc
mov
push
push
sar
ror
jg
in
fs
cmp
in
out
jmp
jp
inc
(bad)
mov
retf
sbb
shl
(bad)
mov
lds
dec
cs
jno
clc
push
arpl
push
ins
int3
sbb
dec
ins
sub
(bad)
or
sub
imul
imul
mov
cmp
cmc
xor
out
push
cmc
jb
pop
enter
xchg
(bad)
outs
inc
ins
or
icebp
std
ror
mov
jnp
adc
stos
mov
or
fiadd
dec
mov
add
jno
jnp
ins
dec
pop
push
call
xor
or
cmp
fcmovnb
nop
ds
sbb
in
je
(bad)
mov
fnstsw
nop
push
into
int3
(bad)
test
data16
mov
push
mov
fucom
xor
sbb
cld
dec
std
jo
cmps
xor
push
mov
arpl
dec
or
leave
fmul
dec
retf
fcmovne
cs
adc
inc
out
dec
jbe
sub
outs
jle
ret
fisttp
scas
push
fidiv
(bad)
jmp
pushf
leave
mov
mov
dec
sbb
repnz
pop
cmp
xor
mov
push
aas
xchg
adc
rcl
pop
out
mov
jb
mov
xchg
arpl
pop
pop
int3
addr16
sub
movs
int
dec
jg
pop
push
hlt
(bad)
pop
mov
(bad)
sub
mov
sar
jne
and
jle
(bad)
fsub
push
mov
stos
(bad)
fisttp
ja
mov
lods
out
fisttp
sbb
add
jmp
pushf
cwde
add
fiadd
fiadd
repnz
xor
inc
loopne
jb
xlat
xchg
outs
in
loopne
pop
mov
mov
mov
lock
adc
adc
(bad)
add
xchg
jnp
jmp
call
push
test
push
lods
sub
test
push
xchg
das
sbb
fsubr
cmp
push
push
pop
icebp
push
imul
outs
stos
stc
xor
ret
aas
enter
or
mov
ins
movs
mov
push
sub
xor
and
sub
lds
dec
pop
mov
ja
sub
(bad)
or
jle
cld
sub
mov
cmc
in
shl
push
and
(bad)
imul
inc
call
jne
aad
and
inc
fwait
jno
jle
rol
dec
xor
push
adc
icebp
rcl
sbb
aaa
xchg
lods
push
inc
or
xchg
retf
pop
mov
ret
mov
sub
mov
arpl
ins
ins
dec
aas
(bad)
mov
mov
retf
jns
xchg
sahf
jnp
dec
inc
lods
stc
pushf
sub
ret
out
ret
cmp
pop
sub
adc
fiadd
adc
push
pop
or
dec
push
fisubr
add
jl
or
out
pusha
cli
repnz
in
jns
push
or
push
adc
movs
std
xchg
xor
mov
cld
pop
dec
cdq
outs
adc
pop
leave
pop
mov
out
jle
push
loope
addr16
pop
sub
test
jg
test
jmp
cmp
jnp
or
jg
clc
add
mov
sub
mov
mov
movs
cmp
sbb
mov
movs
mov
test
pop
pushf
xchg
push
cmp
cmp
pminsw
mov
and
jmp
adc
fs
sbb
test
out
cmps
neg
imul
jmp
inc
cmps
mov
int3
mov
in
shl
xchg
adc
inc
jno
cli
dec
movs
or
pop
idiv
fcmovbe
xchg
mov
jp
cdq
repz
jle
cmp
mul
iret
int
cmc
dec
sbb
dec
pop
xchg
jle
push
mov
jmp
fwait
(bad)
enter
xchg
and
push
mov
iret
shr
out
or
daa
push
push
push
bound
dec
dec
sub
jl
inc
(bad)
in
lods
sbb
sub
ins
pop
aaa
bound
pop
ret
sahf
pushf
popf
retf
push
adc
add
xchg
xchg
and
pop
add
das
mov
sub
adc
cmc
sub
imul
cmp
and
test
cmp
daa
out
in
add
rol
gs
fyl2xp1
mov
xor
or
mov
xchg
xlat
cmps
xchg
pusha
ins
add
cwde
push
es
push
or
das
and
jae
div
out
je
mov
lea
dec
adc
fidiv
dec
sub
jae
pop
ret
in
sub
push
or
push
mov
push
lock
(bad)
dec
loop
aas
pop
push
mov
dec
mov
or
inc
shr
fwait
mov
fdivr
cmp
lahf
dec
push
sub
and
mov
std
xlat
ret
fsub
mov
arpl
pop
(bad)
mov
(bad)
shr
xchg
gs
and
sbb
outs
xor
imul
sbb
sar
clc
ins
lea
sti
(bad)
push
push
sub
xor
push
mov
jo
mov
out
or
fstp
scas
cmp
xor
push
push
push
sub
fst
jbe
mov
push
(bad)
push
adc
movs
out
imul
outs
add
sub
loopne
and
sbb
test
jge
jge
les
outs
aad
pop
into
xchg
pusha
fiadd
int3
dec
lock
mov
out
test
dec
dec
mov
xor
repz
dec
add
pop
fnstcw
jns
inc
sti
lods
xor
or
ret
leave
mov
xor
loopne
cmp
xchg
and
sbb
ins
xor
ja
fimul
les
mov
pop
retf
lock
add
sub
loop
ja
pop
xor
xchg
jbe
(bad)
out
in
stos
sub
shl
mov
cwde
stos
fcomp
mov
shl
rcl
int3
lds
cwde
mov
mov
aad
sub
mov
jecxz
mov
loopne
jg
mov
ss
xchg
lea
inc
fisttp
push
jg
pop
dec
loope
adc
adc
inc
xor
xchg
mov
cmc
sub
movs
(bad)
cld
xchg
dec
xor
add
mov
pop
adc
gs
fwait
push
mov
xchg
xchg
dec
data16
in
add
adc
aaa
repz
mov
cmps
and
imul
xchg
sahf
loopne
cwde
shr
fnstsw
dec
sbb
aaa
jecxz
add
cs
push
dec
retf
and
ja
jbe
push
pop
pusha
test
scas
xlat
test
sub
addr16
hlt
stc
push
lods
pop
xchg
loope
in
pop
mov
cmp
or
dec
aaa
ja
xor
inc
add
jae
push
and
push
sub
pop
or
shl
repz
mov
sbb
ja
ror
fist
and
lods
adc
ror
mov
adc
call
fwait
movs
fild
fisubr
adc
sbb
and
jmp
arpl
jb
out
ret
sub
push
inc
enter
mov
pop
ds
les
int3
out
inc
call
in
pop
adc
add
fmulp
(bad)
daa
aam
daa
or
mov
mov
rcl
pop
sbb
inc
sbb
xor
out
adc
pop
ss
xchg
and
loopne
retf
mov
push
pop
pop
adc
or
jne
fld
jmp
pusha
test
push
sar
jne
push
pop
jmp
stos
cmps
rcl
pminub
sbb
(bad)
fucomi
jne
in
ss
mov
push
jp
jp
mov
arpl
cmps
cmp
and
aam
or
jb
push
enter
icebp
aas
pop
lods
(bad)
iret
jb
adc
je
(bad)
aas
fiadd
push
and
xchg
add
or
adc
iret
imul
mov
lahf
or
pop
pop
push
jl
(bad)
mov
push
inc
mov
jns
xchg
pop
not
ret
cmp
inc
fisttp
not
push
call
ja
cwde
mov
xchg
mov
dec
mov
imul
enter
cmp
and
outs
jmp
xchg
push
in
mov
cmp
xor
movs
push
xchg
in
sbb
sbb
mul
xchg
dec
ret
dec
ss
lods
push
rol
int3
mov
and
mov
fld
ret
in
mov
leave
mov
jno
stos
xor
add
pop
sbb
in
es
xchg
or
outs
jge
and
aaa
add
jg
iret
inc
sbb
int3
dec
ret
jb
sbb
cmc
test
test
iret
add
adc
xlat
ss
pop
enter
out
sbb
mov
pop
lods
push
outs
test
cmps
mov
sbb
ds
xlat
ins
cmp
jae
rol
jo
sub
mov
and
push
add
(bad)
int3
out
cmp
jnp
sbb
fst
test
sti
cmp
inc
mov
loopne
cmc
add
jmp
dec
or
fcomp
sar
(bad)
dec
inc
popa
add
sub
push
cld
add
cmp
js
xchg
stc
mov
dec
cli
je
out
loopne
push
push
mov
and
push
cs
fs
xor
in
xchg
mov
ins
sbb
dec
inc
test
jg
xchg
cmp
std
scas
sub
sub
aad
jmp
(bad)
aas
nop
pop
push
(bad)
and
jae
out
lock
pop
int
jg
push
mov
cmps
sbb
out
pushf
pushf
imul
cmp
fnstcw
inc
inc
test
mov
or
pop
(bad)
rcl
je
sbb
retf
adc
dec
jb
fcomp
cmps
retf
mov
inc
mov
mov
test
jne
outs
and
pushf
aad
jno
stos
cmp
popa
add
or
pusha
sbb
adc
fwait
fwait
xchg
mov
fcmovnbe
xchg
repnz
xor
dec
adc
repnz
shr
es
mov
cwde
pushf
ss
or
inc
adc
inc
pop
rcl
shr
mov
jmp
loope
xchg
pushw
test
sub
pop
xor
dec
stos
push
cmps
xchg
xor
push
or
push
adc
(bad)
out
mov
enter
sbb
(bad)
daa
mov
into
jno
out
push
call
jmp
mov
jb
mov
dec
mul
nop
cmp
ins
xor
jle
outs
sub
xor
mov
cmp
and
or
inc
imul
mov
mov
xchg
cmp
stos
fsub
bnd
mov
mov
mov
ins
lea
pop
inc
ffreep
xchg
sub
fist
es
ins
inc
pop
(bad)
xchg
adc
loope
mov
xor
es
dec
call
or
add
jmp
mov
jno
mov
mov
xchg
pusha
(bad)
out
jae
push
das
inc
out
mov
jle
or
cmp
pop
jns
add
loop
je
dec
mov
cs
sub
std
(bad)
sbb
push
inc
mov
mov
jecxz
les
aaa
sbb
push
test
adc
cmp
adc
mov
movs
fisub
idiv
popf
rol
xchg
sub
cld
loop
mov
add
retf
push
mov
sbb
les
loope
fild
sbb
push
or
adc
ins
inc
pop
push
mov
mov
add
fisubr
lea
push
(bad)
sbb
nop
lock
stos
aaa
cmp
rcr
dec
xlat
test
les
mov
sub
xor
xchg
test
(bad)
movs
stos
inc
pop
mov
adc
jnp
lods
daa
push
les
xchg
js
(bad)
dec
fcmovne
push
ins
push
loop
dec
pop
aas
sub
faddp
mov
call
mov
lahf
cmp
push
int3
ins
fwait
and
retf
dec
mov
dec
xchg
stos
mov
pop
paddsb
je
jmp
bound
scas
in
clc
and
inc
cld
ds
xchg
xor
xchg
aaa
mov
mov
push
pop
adc
out
fwait
cmp
dec
retf
test
fdivr
sbb
push
add
push
adc
mov
scas
sbb
cwde
pop
fimul
dec
push
mov
pop
sbb
popf
aas
int3
ja
mov
(bad)
gs
retf
push
and
arpl
mov
jns
sub
push
popa
or
dec
pop
(bad)
in
xchg
shl
rcr
lods
push
xchg
and
(bad)
and
aas
call
adc
pop
call
or
sub
and
cmp
popf
popf
add
(bad)
cmp
add
push
pop
sar
shl
mov
in
cli
lock
jns
test
dec
sbb
out
out
inc
add
push
out
push
idiv
push
and
adc
pop
add
aaa
push
jp
dec
adc
sbb
mov
mov
(bad)
mov
mov
sar
imul
jbe
jmp
dec
fdivrp
(bad)
or
push
iret
fs
mov
cs
les
sub
das
jne
push
xchg
mov
in
xor
adc
sub
or
pop
jg
mov
sbb
mov
aad
sbb
rcl
xchg
and
popa
push
out
jbe
jno
leave
cmp
cmps
aam
daa
pop
and
shr
fwait
dec
push
cld
(bad)
cmc
mov
xchg
fdiv
fs
mov
idiv
pusha
add
push
adc
ja
xchg
mov
dec
xchg
push
push
in
pop
mov
xchg
dec
mov
movs
mov
and
gs
mov
jle
inc
or
add
fwait
enter
jmp
adc
daa
jno
inc
and
or
imul
jle
rcl
js
push
out
sub
pushf
xor
retfw
xlat
icebp
xor
data16
mov
xlat
pop
jo
or
fist
sahf
jno
mov
inc
(bad)
int3
xacquire
mov
ret
pushw
pop
xor
lock
push
rcl
mov
push
jns
cmp
rcr
frstor
std
push
rcl
pop
mov
fmulp
add
mov
test
fnstenv
pop
and
movs
or
mov
mov
idiv
je
dec
and
loope
push
pushf
loopne
mov
mov
rcr
inc
pushf
pop
xor
cwde
js
fs
push
jns
xchg
mul
les
aad
mov
xchg
lods
sbb
out
clc
aad
mov
mov
sub
test
adc
inc
out
aad
test
je
sbb
ja
jb
sub
popa
jg
rol
ja
arpl
std
das
cli
sub
(bad)
add
cmp
xchg
stos
dec
daa
and
std
xchg
and
in
es
jae
outs
(bad)
test
test
xchg
xchg
pop
pop
mov
xor
cwde
push
in
jg
xor
cmp
popf
lds
sub
fmul
sub
fsub
out
fcmovnb
mov
test
inc
mov
mov
enter
icebp
cs
mov
mov
add
cmp
mov
sbb
les
je
xchg
popf
stos
mov
pop
shl
enter
xor
imul
daa
add
outs
inc
mov
cmp
arpl
xor
sahf
xchg
call
icebp
outs
ror
sbb
push
fst
test
push
jmp
and
fdivr
in
push
lods
js
or
adc
xchg
arpl
aad
shl
xchg
sub
pop
arpl
add
cli
mov
jp
jge
shl
int3
call
(bad)
pop
dec
loopne
inc
test
pop
push
pusha
leave
or
inc
sahf
rol
jge
push
ffreep
ficomp
div
xor
aaa
xor
fstp
jl
bound
cdq
jnp
push
(bad)
cmps
repz
jg
push
int
xor
cmp
test
pop
pop
add
popa
das
xchg
sbb
push
inc
mov
sbb
cwde
data16
add
pop
sub
cmp
es
test
mov
xchg
neg
mov
ror
fisubr
cmp
sahf
push
cmp
(bad)
jmp
pop
sub
inc
(bad)
shr
movs
mov
shl
(bad)
push
xor
out
cmp
or
push
aad
cmp
pop
movs
rcl
jmp
dec
jno
pop
push
imul
(bad)
ss
mov
sbb
mov
push
inc
mul
sbb
fld
jno
test
ret
push
lods
loop
addr16
jle
je
and
cmps
nop
mov
retf
cld
mov
pop
ficom
cmps
(bad)
movs
imul
sbb
jae
sbb
ins
inc
rol
mul
or
add
jecxz
scas
mov
xchg
pop
fs
daa
inc
pop
or
fld
push
push
sub
(bad)
sbb
cmp
scas
cmps
lock
hlt
ss
push
xchg
out
pop
push
in
or
pop
pop
pop
ret
mov
out
test
mov
adc
cld
js
(bad)
data16
out
and
into
std
std
mov
and
jge
add
sar
inc
into
fadd
mov
(bad)
(bad)
fdiv
pop
cmps
leave
repz
inc
push
daa
dec
xor
arpl
mov
xor
inc
in
fmul
dec
and
repnz
adc
daa
or
stos
jnp
and
loop
mov
scas
cmp
inc
cmc
aas
mov
shl
out
sar
mov
add
add
fsubrp
or
mov
popf
jae
push
mov
adc
or
or
pop
xor
jl
test
push
retf
cld
data16
sbb
inc
and
int
in
adc
fidiv
outs
sub
jp
aam
add
inc
shl
dec
bound
mov
adc
mov
add
fld
pmulhw
mov
mov
(bad)
sbb
lods
scas
idiv
cmp
pop
adc
ja
pop
loopne
sbb
je
shl
push
clc
in
xor
cli
push
fimul
mov
pop
fisttp
adc
in
rol
push
mov
es
movs
pop
adc
pop
dec
push
inc
je
sub
cmp
sub
inc
and
stos
outs
mov
int
mov
xchg
imul
adc
popa
das
push
scas
pop
popf
mov
imul
mov
mov
scas
sub
addr16
pop
je
mov
dec
mov
xor
(bad)
clc
out
adc
mov
or
mov
mov
out
out
or
dec
repnz
js
cwde
mov
dec
cmp
pop
mov
adc
out
call
jmp
js
popa
aaa
push
pop
mov
into
inc
ds
jge
push
aaa
lods
div
lods
xor
mov
push
inc
push
fwait
(bad)
jae
jmp
daa
jmp
sbb
or
enter
ja
shl
mov
mov
(bad)
xchg
call
adc
aas
ds
das
mov
stc
js
ds
pop
and
lods
jo
jg
rcl
cdq
sbb
inc
shr
xchg
or
pop
cwde
and
fiadd
xlat
in
xor
pop
mov
mov
nop
mov
and
cld
dec
xor
mov
(bad)
jnp
das
aaa
pop
mov
lahf
push
loopne
mov
fisub
arpl
(bad)
jg
lahf
cli
mov
push
mov
jecxz
jle
les
sub
sbb
pop
data16
xchg
lods
sbb
mov
or
retf
mov
repz
dec
add
mov
push
out
xlat
push
add
sahf
repnz
fwait
js
dec
adc
pop
mov
and
push
xor
(bad)
jge
sub
mov
into
pop
inc
pop
push
repz
lds
ror
xor
and
cmps
popa
sbb
push
mov
popa
push
push
inc
clc
sub
out
outs
sub
mov
rol
sbb
in
or
xor
leave
(bad)
cmp
rcl
mov
mul
out
xchg
sbb
cld
and
cmp
stos
push
stc
fisubr
mov
aam
mov
dec
out
jmp
cmps
pusha
movs
ret
(bad)
(bad)
inc
in
in
inc
call
push
and
push
fs
or
int
or
cmp
and
idiv
jo
mov
outs
cmp
sbb
xchg
sar
cmp
pop
ins
in
xchg
test
xchg
pop
outs
popf
xchg
push
outs
test
pop
repnz
scas
push
inc
data16
mov
(bad)
push
pop
pushf
and
ja
add
pop
addr16
adc
mov
jmp
mov
mov
(bad)
jb
xlat
xor
retf
leave
dec
push
fistp
shr
jmp
stos
ja
stos
pop
xchg
popa
inc
(bad)
mov
(bad)
sub
cmp
shl
sbb
or
cmps
add
imul
adc
xchg
jb
pop
lahf
jne
sub
les
test
jg
clc
sbb
add
out
mov
jno
jne
jg
push
push
xchg
(bad)
cwde
dec
movs
xor
inc
cmp
adc
sub
cwde
xchg
push
mov
xchg
xchg
retf
pop
xchg
sub
aas
cs
std
adc
dec
(bad)
sub
(bad)
push
dec
mov
mov
pop
sti
(bad)
cmp
retf
inc
sbb
mov
push
bound
jmp
shl
pop
loopne
push
gs
mov
cmps
mov
adc
pusha
out
pop
mov
sbb
add
add
cmp
fistp
add
push
dec
in
push
es
ror
fcom
out
int3
pop
fsubr
xchg
sub
xadd
addr16
(bad)
ror
and
dec
mov
push
jmp
jp
stos
mov
xchg
in
adc
int
push
ror
stc
ins
loop
lock
pop
mov
jns
mov
add
mov
mov
fist
popa
leave
inc
neg
mov
or
xlat
call
fiadd
mov
mov
(bad)
loopne
push
mov
popf
xchg
(bad)
adc
and
sub
ror
enter
jg
clc
aaa
jbe
aaa
out
shr
es
mov
xchg
jns
cmc
movaps
push
and
(bad)
test
test
fcom
jns
push
addr16
sahf
movs
xor
mov
mov
adc
pop
sub
mov
xchg
pop
dec
mov
in
imul
cmp
cmp
and
mov
inc
pop
(bad)
fld
xor
mov
mov
xchg
out
enter
out
mov
xchg
lods
jae
add
adc
jae
xchg
inc
sbb
icebp
(bad)
jnp
lds
xor
out
cld
retf
dec
imul
jne
shr
mov
inc
ret
pop
cmc
lea
out
mov
xchg
pop
sub
xor
pop
loop
aad
mov
loopne
nop
cmps
stos
cmp
icebp
neg
out
retf
in
rcr
iret
jle
in
mov
inc
push
cli
jmp
clc
(bad)
cli
jno
dec
mov
dec
dec
imul
test
push
adc
push
pop
sub
ins
xchg
mov
mov
jge
(bad)
cmp
pop
clc
js
gs
push
push
mov
push
movs
into
call
inc
pushf
pop
shl
js
addr16
jp
mov
int3
push
mov
ds
mov
movs
push
mov
jle
ficomp
sub
scas
fisubr
ss
jbe
iret
(bad)
cmps
mov
aaa
rcl
dec
aam
adc
push
xchg
aad
push
call
shr
add
adc
sar
dec
pop
push
dec
add
imul
stos
out
sub
jo
push
std
movs
pop
rol
push
shl
pop
jmp
call
imul
jg
arpl
mov
adc
jae
(bad)
je
enter
pop
mov
test
xor
push
dec
jns
retf
lds
imul
pop
mov
jmp
mov
hlt
mov
icebp
inc
dec
mov
stos
and
mov
ins
pop
or
in
fxch
mov
mov
test
pop
pop
ret
sbb
xor
cmc
cmp
hlt
outs
cs
(bad)
cld
fdiv
sbb
in
mov
aam
and
movs
in
pop
test
out
lock
xchg
jo
movs
mov
and
jae
adc
je
inc
aam
cmp
mov
inc
push
jns
and
pop
div
mov
sbb
ja
xchg
xor
mov
cmps
add
popa
jnp
and
pusha
sbb
aas
jne
mov
dec
je
fnstcw
dec
pop
dec
cmps
push
inc
(bad)
int
mov
es
adc
ja
or
pop
xchg
clc
retf
xor
ror
pop
js
fnsave
int
xchg
(bad)
xor
mov
cmc
stc
cdq
or
or
repz
push
imul
cld
push
mov
or
mov
scas
jbe
mov
xchg
leave
popa
outs
mov
sti
sub
aaa
call
cmp
xchg
rcr
cmp
fdivr
xor
shr
lods
or
in
leave
pop
sbb
sub
push
es
mov
imul
mov
mov
add
xchg
adc
mov
shl
pop
xchg
aad
mov
scas
mov
fisttp
ror
jmp
in
sbb
out
push
test
enter
cmp
push
xor
xor
pop
mov
(bad)
sbb
fs
mov
jns
cmp
and
adc
mov
pop
enter
fst
fdiv
lea
pop
xchg
mov
push
adc
lods
pop
cmovl
and
adc
xor
jmp
in
sub
add
test
and
jecxz
xor
sub
jns
mov
xchg
add
cmp
fwait
test
lods
inc
movs
sbb
sahf
mov
hlt
das
movs
push
xchg
push
pop
mov
xchg
test
sar
and
inc
mov
rcr
ins
(bad)
scas
xchg
mov
jae
lea
ins
out
xor
adc
(bad)
test
mov
adc
cmp
enter
movs
mov
clc
scas
stos
imul
(bad)
(bad)
or
jbe
xor
dec
xor
shl
and
aam
hlt
outs
scas
pop
sbb
jmp
leave
mov
inc
ss
push
scas
or
or
test
rcl
std
or
shl
test
inc
and
mov
cmc
dec
in
dec
jge
in
jns
xchg
(bad)
or
ficomp
lock
es
dec
jnp
jns
jns
jle
cmp
mov
out
enter
mov
inc
call
add
cld
inc
lahf
mov
add
daa
cwde
push
mov
adc
sub
and
mov
in
cmp
push
dec
test
dec
lods
push
shl
jne
pop
jmp
mov
jmp
xor
jb
(bad)
mov
stos
add
ds
lds
into
arpl
xor
in
pop
cmps
jbe
jp
push
inc
sar
scas
jg
mov
mov
mov
pop
ret
mov
movs
mov
xchg
loope
cs
xchg
jb
sub
jno
leave
xchg
jmp
inc
jbe
pop
daa
(bad)
call
mov
mul
xchg
push
pop
push
xor
inc
outs
movs
repnz
aas
aam
mov
jp
xchg
shr
dec
test
ins
mov
icebp
out
aad
mov
add
movs
adc
inc
adc
cmp
(bad)
int
pop
inc
mov
inc
fiadd
xchg
mov
jns
iret
pop
shr
test
pop
out
cmp
dec
lea
popf
pop
cs
adc
je
stos
push
xchg
dec
pop
and
push
out
mov
mov
das
adc
cmp
pop
stc
pop
xor
mov
mov
rcr
dec
push
xlat
or
mov
neg
js
out
dec
jmp
out
ja
push
sub
das
mov
or
cli
mov
mov
pushf
mov
or
add
aam
jns
dec
cmps
lahf
pop
push
sbb
inc
push
cmp
adc
mov
aas
push
je
in
js
add
jle
(bad)
or
test
jecxz
mov
sbb
(bad)
test
arpl
in
sbb
adc
popf
push
inc
(bad)
xchg
sbb
fwait
in
fmul
fdiv
pop
lock
jno
xor
xchg
xchg
pop
out
push
rcl
sbb
pcmpgtd
call
aad
jmp
jp
jp
sti
push
ins
xor
and
getsec
pop
jg
or
and
push
adc
and
sub
ja
mov
push
jp
and
(bad)
mov
mov
mov
sub
jmp
mov
blcmsk
sbb
stos
jno
inc
push
lock
sub
fbld
xchg
cmp
push
ror
jmp
test
or
push
or
fs
or
scas
xor
add
cdq
mov
xchg
and
ret
mov
leave
jb
outs
mov
ja
addr16
lock
dec
ins
mov
cdq
mov
mov
push
sti
aad
out
out
jmp
pushf
call
movs
jle
lea
and
jb
movs
inc
dec
jne
outs
mov
retf
adc
pop
jp
shr
dec
pop
in
inc
mov
mov
sbb
out
je
cwde
dec
(bad)
mov
rol
imul
push
popf
mov
mov
mov
pushf
leave
cmp
fadd
movs
hlt
cmp
pop
pop
mov
loope
leave
or
jae
retf
aaa
in
sub
shl
mov
pushf
fadd
(bad)
sbb
dec
adc
and
(bad)
or
shl
inc
mov
fisub
jl
call
jae
test
in
retf
es
inc
clc
fcom
(bad)
leave
test
out
or
cld
cmp
or
mov
enter
rol
and
adc
add
inc
add
add
fcomp
sub
cmp
xchg
retf
repnz
mov
pop
mov
xchg
or
sbb
in
ss
xchg
stos
in
cmps
pause
dec
fldcw
test
inc
mov
inc
or
and
ss
cmp
cs
outs
jecxz
or
outs
mov
adc
mov
(bad)
call
jg
sub
sub
outs
pop
test
mov
ins
aas
ss
retf
pop
mov
dec
adc
inc
pop
jbe
xlat
inc
mov
sbb
js
pop
daa
adc
mov
lea
stos
or
add
sbb
adc
adc
mov
and
outs
ficomp
leave
sahf
mov
sub
mov
jns
cli
push
mov
or
sub
push
mov
test
ds
xchg
mov
mov
add
dec
addr16
dec
pop
xchg
dec
pusha
cmps
test
or
neg
push
dec
leave
shl
jp
fwait
retf
or
loopne
rol
mov
xor
(bad)
or
dec
mov
mov
sbb
jb
aas
push
sub
lahf
mov
rol
out
mov
stos
mov
sbb
mov
xchg
xchg
aam
dec
pop
xchg
cmp
popa
cmc
and
sbb
adc
retf
idiv
aam
xchg
jno
inc
in
jo
cmc
sub
cmp
add
inc
jo
in
loope
cmp
fdiv
test
test
or
(bad)
mov
xchg
lahf
(bad)
push
pop
mov
mov
out
cmp
sbb
cmp
in
xor
push
inc
pop
(bad)
fld
test
inc
sahf
pusha
adc
aaa
cmp
mov
es
sub
(bad)
les
jmp
xchg
pop
sbb
push
dec
pop
jne
call
test
adc
daa
mov
add
push
nop
push
clc
or
inc
es
jg
call
inc
in
dec
sub
test
ins
jle
lock
jmp
sub
inc
test
add
cli
xchg
jle
cwde
nop
sbb
imul
pusha
jmp
pop
cwde
mov
mov
or
xchg
mov
shr
in
shl
lods
rcr
lods
inc
sub
pop
lods
jmp
out
pop
push
xor
out
(bad)
sti
dec
mov
cwde
pop
icebp
mov
into
inc
mov
aam
fwait
cld
xor
lahf
xchg
mov
pop
push
inc
push
adc
and
loopne
push
or
mov
dec
fistp
mov
inc
add
lds
daa
test
rcl
das
sub
xor
or
jne
and
push
(bad)
jae
push
mov
jecxz
sub
test
and
test
xor
in
ds
leave
jns
or
inc
das
mov
push
cmp
dec
test
movs
pop
call
jmp
cmp
xor
fnstsw
icebp
adc
mov
fcom
(bad)
lods
or
test
sub
test
jecxz
cwde
lods
sbb
sar
popa
xor
cmps
xor
inc
mov
cmp
push
stos
cli
inc
dec
cli
xlat
test
adc
or
xor
cs
mov
inc
dec
push
dec
inc
retf
add
daa
gs
out
lds
jnp
xor
je
inc
jg
ret
loope
enter
mov
push
gs
xor
out
mov
pop
push
out
fsub
push
dec
movs
sbb
out
add
pop
rcr
or
je
dec
add
stos
imul
test
jb
sub
xor
sub
add
loop
fsub
lea
lods
push
retf
xor
not
loopne
xor
pop
adc
push
push
sar
add
or
addr16
int3
sub
add
mov
test
repz
(bad)
out
jle
push
pop
xchg
cmp
mov
adc
cmc
fcmovnbe
fidiv
retf
stos
ins
or
xchg
mov
cdq
sahf
imul
outs
sub
loop
clc
jb
push
scas
sbb
cmp
dec
pop
dec
and
leave
mov
fild
dec
(bad)
sub
sahf
je
neg
aaa
mov
xchg
mov
pop
adc
xchg
xor
cli
loope
sub
sub
xchg
fld
mov
lds
lock
clc
add
test
xchg
inc
dec
div
inc
mov
icebp
lods
shl
gs
jb
xlat
inc
or
ret
fild
imul
add
scas
inc
repz
fidiv
add
out
push
ss
cmc
inc
arpl
or
and
adc
xchg
daa
cmp
retf
mov
pop
pushf
xchg
jbe
xchg
push
ror
xchg
sub
aaa
or
xlat
fdivr
sahf
(bad)
fist
ret
jne
sbb
and
and
outs
test
or
outs
xor
lods
lods
xor
lds
push
popf
inc
nop
push
(bad)
xor
mov
or
push
pop
add
scas
inc
mov
cmp
(bad)
or
ret
inc
xchg
add
adc
and
push
dec
add
xor
jecxz
mov
jb
test
jmp
dec
mov
out
xchg
dec
sbb
ss
aad
lahf
mov
mov
aaa
cmp
jo
jbe
int3
jo
rcl
add
std
ss
sbb
pop
pop
(bad)
in
push
cwde
out
inc
out
outs
push
addr16
pop
ret
fstp
pop
lahf
cs
fsub
xchg
sub
stos
je
or
and
movs
mov
adc
fneni(8087
push
dec
inc
inc
jnp
mov
sahf
xchg
mov
(bad)
out
jnp
out
jmp
cwde
cmp
jno
and
add
push
outs
test
inc
shl
ret
pop
jp
call
(bad)
fisubr
int3
mov
jmp
jle
iret
out
mov
int
js
aas
movs
and
imul
mov
mov
adc
lea
mov
test
xor
cmp
add
add
mov
dec
mov
sbb
(bad)
dec
ja
out
xchg
inc
out
push
popa
icebp
xchg
mov
jp
test
popf
jno
dec
push
xor
in
dec
xor
dec
mov
sbb
enter
inc
add
pop
lea
xor
cmps
push
cmps
into
pop
sbb
test
dec
rol
adc
mov
call
mov
pop
mov
pop
cmp
es
ins
mov
mov
popa
sub
push
sub
imul
arpl
add
sub
add
and
enter
shr
and
pushf
jne
ss
scas
push
xor
pop
mov
test
xchg
xor
xor
in
frstor
fild
idiv
mov
popa
mov
repz
sub
pop
mov
xor
scas
jno
mov
in
sub
push
fs
jmp
popa
outs
inc
xchg
sar
out
xor
mov
enter
mov
cli
inc
cli
inc
imul
(bad)
in
mov
lods
mov
inc
inc
inc
test
pop
icebp
call
test
xchg
add
lods
jo
fdiv
imul
mov
test
rcl
pop
(bad)
outs
jl
sti
jns
inc
xor
call
in
inc
fbld
jl
sub
call
loope
aam
movs
lods
dec
dec
mov
mov
and
inc
fucomip
leave
jnp
xlat
push
leave
loop
leave
mov
daa
pusha
push
mov
out
fadd
sbb
mov
xor
sub
popf
loop
fcmovnb
lock
outs
mov
shl
ins
and
out
jno
mov
xlat
ss
jg
aam
adc
pop
sub
call
stc
mov
sbb
arpl
sbb
inc
mov
sub
xor
cmp
ja
(bad)
or
jecxz
fdiv
jg
jo
sbb
jmp
in
mov
aas
add
mov
les
jno
xor
add
mov
jne
or
les
mov
popf
inc
push
aaa
loopne
inc
xor
fcmovb
or
je
ins
iret
adc
xor
lds
cmps
psadbw
mov
ss
fist
call
jg
mov
test
push
or
loope
jle
push
push
sub
push
adc
int3
inc
jns
sub
(bad)
cld
retf
scas
mov
jl
inc
adc
sub
movs
jns
and
in
mov
inc
jno
rcl
mov
imul
mov
frstor
fstp
cmp
jbe
cwde
xchg
(bad)
icebp
les
mov
outs
mov
dec
call
outs
repz
icebp
pop
dec
mov
sbb
pop
sar
inc
dec
call
mov
(bad)
enter
ror
test
jno
cld
jl
mov
in
(bad)
pop
lods
es
add
fsqrt
mov
or
xchg
pop
outs
shl
mov
mov
stc
shl
(bad)
adc
daa
in
cmps
retf
sub
lods
imul
push
or
outs
outs
xchg
jp
and
scas
push
test
cwde
sub
xor
inc
imul
aas
adc
cwde
add
hlt
lahf
out
outs
add
sub
test
sub
push
scas
jecxz
out
imul
sub
into
out
jge
test
sbb
sahf
and
cmc
cmp
test
mov
adc
and
ficomp
nop
out
sub
fstp
dec
fstp
out
pop
pop
cmps
mov
dec
pusha
and
test
mul
inc
inc
adc
dec
mov
pop
pop
movs
pop
mov
shl
jb
add
add
jne
rcl
mov
jmp
sbb
mov
jmp
xor
add
(bad)
retf
inc
outs
dec
jmp
les
mov
push
addr16
mov
mov
xlat
xchg
pop
enter
sub
cmp
dec
and
or
fisubr
sbb
ds
js
in
leave
dec
mov
iret
cmps
mov
lods
cwde
sub
iret
xchg
popf
out
mov
loop
push
xor
mov
mov
sub
ss
dec
xchg
inc
out
add
pop
cwde
and
jae
sub
out
test
mov
cmc
dec
pushf
sbb
jns
pop
aad
fisub
mov
jecxz
(bad)
out
add
dec
cmp
sahf
add
fnstcw
dec
dec
pop
(bad)
inc
mov
mov
fnsave
adc
push
jl
xchg
mov
mov
xchg
pop
dec
mov
mov
addr16
pop
call
jl
cmp
out
mov
jnp
sar
and
scas
sub
ds
push
sub
mov
xchg
pop
sahf
fs
repnz
(bad)
jle
mul
lock
dec
mov
int3
(bad)
mov
scas
popf
mov
jne
outs
pop
mov
mov
mov
cmc
pop
dec
jae
(bad)
jbe
fcomp
pop
fistp
aas
sub
out
and
and
adc
dec
mov
xadd
mov
arpl
xor
inc
test
aam
lock
xchg
xchg
or
pop
sub
mov
arpl
xchg
mov
and
pop
mov
out
sub
push
jo
in
adc
les
rcl
inc
sub
(bad)
cmc
aas
add
(bad)
xchg
inc
jp
leave
push
fiadd
inc
in
ja
push
mov
test
bound
or
fcmove
dec
sbb
or
pop
retf
xor
lock
sbb
int
jb
cwde
in
pop
out
mov
jo
fisubr
inc
out
mov
jnp
cmp
je
je
data16
movs
sub
sbb
or
es
xor
hlt
jbe
or
(bad)
mov
addr16
std
ds
sbb
pop
or
cmp
jmp
dec
sub
sub
add
xchg
popf
jp
xchg
jbe
cmp
jecxz
adc
call
sub
neg
mov
xchg
movs
adc
xchg
xor
leave
xor
sahf
sbb
rcr
or
sub
popf
pop
(bad)
pop
cmp
mov
repz
pop
sub
lds
xchg
cmp
icebp
pushf
dec
fiadd
(bad)
and
jle
adc
xchg
pop
pop
jmp
movs
into
xchg
mov
push
aam
pop
loop
(bad)
fcom
pop
sbb
in
fsubr
sahf
fmul
push
mov
add
or
fimul
or
out
aas
cmps
je
retf
retf
inc
pusha
mov
cmps
sub
cmp
xlat
inc
pop
pop
or
xchg
mov
mov
add
push
jecxz
mov
in
jmp
sar
push
or
adc
push
sbb
sub
ficomp
mov
or
xchg
pop
inc
pop
fs
fidiv
mov
shl
les
addr16
adc
cmps
and
push
movs
xchg
or
mov
pusha
pop
repnz
dec
in
or
ja
call
mov
mov
dec
pop
cmp
xlat
dec
(bad)
data16
or
cmps
sub
stc
outs
cmp
add
xor
mov
mov
mov
std
push
pop
push
rcr
sub
lods
add
mov
dec
inc
jl
sub
iret
call
popa
inc
push
pop
out
mov
adc
pusha
shl
add
jge
pop
ds
dec
jp
inc
stos
fs
mov
push
hlt
fist
add
mov
dec
sbb
cmp
sbb
pop
(bad)
pop
fiadd
add
in
int
pop
dec
adc
fmul
ja
add
test
sub
mov
push
imul
ror
fisubr
fistp
movs
or
push
xor
mov
or
or
push
daa
mov
xor
mov
scas
mov
data16
sub
stos
dec
data16
mov
sub
repz
cmps
xchg
sahf
mov
loopne
test
popa
cmp
fs
jle
xchg
xlat
mov
sub
stc
aaa
dec
scas
rcl
adc
pop
sub
stos
cwde
lods
rcl
cmp
cmps
repz
into
inc
inc
dec
jmp
call
mov
adc
lds
(bad)
mov
popa
cwde
mov
jmp
aad
ja
and
ins
mov
sub
jne
jbe
push
(bad)
outs
ins
mov
mov
in
inc
add
xor
(bad)
aad
cmp
(bad)
gs
test
ret
out
push
outs
fmul
jae
inc
mov
call
shr
dec
inc
loopne
mov
popf
push
rcl
fst
adc
shl
(bad)
aad
mov
pop
jbe
(bad)
mov
scas
cld
es
pop
xor
dec
jne
sub
xor
clc
or
mov
push
(bad)
dec
sbb
xchg
mov
scas
cmp
dec
jno
or
adc
es
cmp
cmp
out
ins
jb
popf
aam
ins
gs
jnp
dec
fistp
test
out
cmp
jno
and
jno
ds
pop
shl
sub
dec
lea
clc
sub
cwde
xor
repnz
in
cmp
xchg
cmp
inc
pop
arpl
pop
sub
stos
enter
iret
fnstenv
inc
inc
xor
movs
jno
cmp
arpl
pop
mov
data16
and
jecxz
outs
xchg
push
jmp
dec
xchg
inc
in
mov
mov
xor
call
(bad)
scas
sahf
pop
or
out
mov
stos
mov
std
xor
daa
mov
mov
and
lock
loop
dec
fwait
lods
test
scas
not
jo
fldenv
shl
xchg
dec
pop
adc
stos
out
out
jno
xor
jp
repnz
aaa
int3
xor
or
fwait
pop
ds
call
cli
add
pop
into
inc
lods
xchg
mov
mul
add
xchg
adc
xchg
inc
mov
int
adc
jmp
mov
pop
out
test
(bad)
xchg
pop
dec
sub
arpl
mov
and
push
cmps
xchg
(bad)
mov
mov
repnz
fadd
mov
sahf
and
loopne
jge
pop
cmp
and
int
mov
ror
aas
out
daa
push
dec
jecxz
mov
dec
xchg
push
adc
xchg
sub
inc
push
neg
add
das
test
mov
inc
fs
into
inc
or
mov
call
rol
data16
cdq
cmps
cli
aad
ja
cmp
cld
dec
jno
xchg
std
stos
pop
sbb
sar
inc
inc
lods
mov
pop
shl
cmp
fst
push
xor
stos
adc
pop
loop
loopne
test
inc
mov
pusha
inc
jne
(bad)
cdq
cmp
jae
mov
or
push
xor
aaa
pop
inc
push
mov
or
in
test
or
leave
ror
or
int
fsubr
push
repz
jbe
pop
bound
ja
jle
mov
pop
div
add
cmp
int3
sub
mov
retf
repz
pop
in
cmp
fbstp
jp
sbb
daa
(bad)
mov
jmp
test
out
mov
int3
rcl
cwde
popa
cmp
popf
mov
xchg
lea
mov
popf
push
mov
daa
aaa
into
mov
dec
imul
sub
jp
lods
cmp
cmps
int3
iret
add
nop
jl
mov
xor
das
stos
xchg
shl
rcr
jae
add
xlat
and
icebp
mov
arpl
push
leave
adc
hlt
sub
mov
inc
mov
ret
rcl
ins
(bad)
daa
pop
cs
fcom
dec
lods
add
pop
cmps
xchg
xchg
call
fbld
sub
inc
or
fimul
push
in
repz
and
aaa
cmp
loop
div
fld
pop
and
mov
mov
imul
into
xchg
rcl
into
jb
sbb
sub
inc
pushf
push
rcr
cli
sbb
sti
aad
in
fbld
jmp
retf
add
mov
jge
mov
xor
dec
xor
ficomp
or
cwde
cld
call
adc
xor
mov
sahf
pop
and
adc
das
iret
imul
aas
std
and
add
dec
dec
sbb
sub
and
hlt
mov
sbb
mov
mov
sbb
jecxz
les
fistp
cmps
daa
jg
dec
ja
cld
das
push
xor
sar
xor
ins
lds
aas
fld
addr16
(bad)
push
mov
mov
jnp
es
sbb
mov
pop
sub
mov
jle
jmp
mov
add
mov
sbb
daa
mov
iret
jae
or
shl
or
adc
sub
shl
xor
dec
pusha
aas
or
sbb
fiadd
and
jle
adc
loop
mov
pop
sbb
sbb
jnp
or
stc
inc
imul
mov
mov
call
hlt
hlt
dec
and
add
and
mov
shl
aam
push
pop
and
jmp
xor
imul
pop
mov
xchg
outs
int3
mov
add
inc
jmp
xchg
mov
or
arpl
aas
test
xchg
sub
(bad)
ins
les
(bad)
outs
in
in
jno
sbb
dec
rcr
dec
aaa
push
mov
pop
sub
push
push
ss
inc
add
pusha
inc
imul
fcomi
mov
cmp
(bad)
int
jg
outs
sbb
xor
ror
xor
lds
popa
sub
push
xchg
add
mov
xchg
pop
test
sub
push
stos
(bad)
loopne
imul
cld
call
add
ret
les
clc
lds
inc
cmp
sbb
jmp
(bad)
out
out
inc
mov
and
fst
dec
shr
or
shl
and
leave
xlat
mov
outs
inc
mov
xchg
imul
dec
xchg
jo
imul
mov
xor
or
shl
nop
mov
inc
jno
xchg
jg
into
stos
cmp
mov
mov
fisttp
ffreep
mov
movs
(bad)
jmp
popa
cli
clc
lods
stos
push
dec
jns
push
mov
and
repnz
hlt
cmp
loope
ss
xchg
ror
icebp
in
in
clc
fisttp
jge
jecxz
and
test
mov
stos
ficomp
dec
ins
retf
(bad)
pop
das
sbb
jnp
je
test
call
cmp
dec
push
in
xchg
sub
inc
sbb
fst
mov
push
and
xchg
retf
inc
std
cmp
push
mov
fnstcw
in
mov
pop
sub
ret
addr16
jl
gs
(bad)
(bad)
clc
aad
or
sub
loop
add
jns
dec
or
push
int
aad
fst
fisubr
outs
test
mov
les
push
test
or
jnp
addr16
pop
dec
ret
(bad)
xor
inc
pop
imul
cmp
mov
aaa
in
xchg
out
add
es
std
fcomip
cmc
inc
xor
sti
popa
(bad)
xchg
inc
pop
cwde
sbb
mov
mov
mov
mov
inc
cmp
jne
aas
cmc
rcr
and
cmps
xlat
cwde
clc
data16
or
push
loopne
mov
scas
rcl
mov
inc
add
sub
invd
fisttp
fcom
or
xchg
retf
fs
add
jle
pop
xchg
mov
test
jbe
inc
mov
add
mov
fs
xchg
mov
pop
push
pushf
js
push
adc
scas
jmp
daa
repnz
jmp
xor
push
icebp
sub
scas
and
(bad)
push
jbe
int3
jmp
std
ffreep
arpl
shl
push
std
pop
pop
pop
(bad)
xchg
lods
and
test
leave
push
push
js
sub
in
out
mov
bound
test
lds
cld
cwde
mov
or
or
xchg
cmp
ret
std
loope
rcl
sbb
push
ss
mov
dec
push
dec
loope
icebp
lods
sub
enter
dec
push
inc
jge
mov
adc
and
shr
and
repz
lahf
dec
and
push
cwde
pop
jl
jns
pusha
xor
mov
or
lods
ins
push
cmps
ret
pop
lea
aam
(bad)
shl
ret
mov
mov
mov
enter
ss
adc
fild
pop
call
btr
nop
ss
sbb
xchg
adc
loopne
std
lods
(bad)
fld
lahf
add
xchg
aas
inc
xchg
cdq
popf
or
add
push
xor
sub
(bad)
les
ret
add
push
scas
or
stos
sbb
xchg
fild
jne
aad
jmp
sbb
dec
nop
or
jb
pop
cwde
xchg
dec
xchg
fdiv
ds
inc
or
adc
sbb
and
add
inc
in
dec
inc
xor
cmc
aam
jecxz
sub
cmp
popf
mov
in
fwait
add
mov
lds
mov
adc
cmp
aam
jl
mov
fstp
and
ficom
pop
(bad)
adc
js
mov
jmp
inc
inc
ror
xchg
mov
loop
push
and
or
into
mov
aaa
or
sbb
(bad)
pop
jne
rcl
cmps
add
mov
cld
pop
(bad)
loopne
inc
loopne
imul
test
push
scas
jno
push
mov
push
call
jb
push
mov
pop
aam
popf
xchg
fild
xor
push
call
cli
or
rcr
push
and
inc
fdivr
adc
(bad)
sbb
sbb
adc
(bad)
mov
cmp
ja
or
jmp
cmp
mov
popf
imul
outs
jl
(bad)
out
gs
jnp
cld
add
jge
int3
loope
loopne
data16
xor
les
mov
dec
push
cmc
mov
push
add
leave
ret
push
das
je
rol
(bad)
mov
in
daa
fsub
rcr
retf
mov
cmp
mov
mov
sub
pop
sub
xor
sub
dec
out
imul
xchg
ins
sub
push
iret
add
aam
out
xor
je
inc
and
mov
push
mov
add
adc
mov
aad
adc
dec
jns
std
push
mov
push
outs
jmp
push
cli
icebp
enter
jae
mov
(bad)
or
gs
mov
test
mov
add
jae
ret
repnz
cmps
xchg
push
fidivr
xor
mov
test
mov
(bad)
into
nop
into
je
mov
add
mov
test
call
xor
call
cmp
loope
inc
in
pusha
mov
sbb
xchg
dec
retf
cmp
call
mov
xor
fs
(bad)
rcr
and
xchg
addr16
mov
rol
idiv
fnstcw
sub
mov
dec
inc
mov
inc
fnsave
fidivr
add
pop
int
rcr
mov
cmp
int
rcr
or
jmp
fdiv
std
in
leave
mov
dec
ja
std
cmp
or
push
cmps
push
push
sub
cmp
cs
outs
sbb
lods
mov
ins
push
aaa
or
push
sbb
dec
ficomp
jmp
xor
ja
inc
ret
cmp
pop
cdq
int3
mov
retf
(bad)
push
mov
xchg
add
fcmovnb
sub
jmp
xchg
mov
pop
pop
imul
mov
ja
addr16
aam
mov
xchg
imul
mov
movq
shr
pop
jl
cdq
mov
enter
and
dec
fisub
push
push
fwait
sub
cmp
lds
scas
xchg
mov
sub
adc
ss
mov
fs
xchg
fcomp
iret
mov
lahf
mul
dec
mov
adc
(bad)
ds
xor
xor
cmp
xchg
scas
fisttp
(bad)
mov
push
aam
out
xlat
dec
jmp
mov
mov
xchg
inc
mov
es
xchg
test
fucomip
ins
and
sub
sbb
or
and
pop
inc
and
xor
fwait
add
test
lea
jge
ss
mov
rcr
loope
push
sti
cli
push
cmps
dec
int3
daa
imul
clc
inc
sbb
mov
jl
mov
imul
(bad)
pop
loope
pop
in
(bad)
adc
mov
loopne
iret
cmc
stos
jge
idiv
neg
and
push
icebp
ror
cmp
mov
ret
mov
outs
sbb
adc
(bad)
and
stc
xor
imul
add
push
mov
ret
int
xor
pop
leave
jp
pop
xlat
pushf
iret
mov
inc
arpl
xor
call
scas
outs
xor
jecxz
cmc
cmp
aam
fild
jp
mov
cli
retf
outs
dec
imul
(bad)
mov
aaa
add
pop
ins
sub
mov
dec
inc
jb
push
mov
xchg
mov
xor
mov
mov
push
xchg
sbb
lock
adc
int
enter
push
aas
sub
(bad)
in
inc
push
push
dec
sub
fcomp
and
popf
cmps
xlat
mov
bnd
inc
outs
pop
in
(bad)
out
sub
(bad)
add
xchg
jo
loopne
mov
cwde
or
or
out
mov
push
xor
outs
mov
add
ins
in
mov
xchg
mov
pop
push
xor
mov
push
push
xchg
jge
adc
ins
loopne
retf
leave
pop
arpl
iret
stos
pushaw
push
mov
mov
jne
psubq
into
fist
popa
push
dec
and
lods
fs
mov
jmp
fsub
jno
or
dec
and
out
rcl
pop
gs
ss
pusha
jae
sbb
dec
or
inc
imul
dec
lea
pop
sbb
sbb
adc
pop
add
leave
loop
xchg
arpl
push
mov
outs
aaa
js
fsub
std
jbe
call
loopne
loope
jb
push
stos
lods
push
inc
mov
mov
cld
or
leave
std
ret
aas
mov
xchg
push
popa
icebp
mov
xchg
jo
xor
rol
adc
call
sbb
and
imul
cmp
cmc
loop
popf
rol
pop
cwde
hlt
push
repnz
adc
push
and
xor
add
popa
and
repz
cli
imul
(bad)
mov
in
repz
push
jbe
into
repz
addr16
jbe
push
icebp
xor
push
xorps
fldcw
test
push
add
rcr
mov
jp
iret
push
jl
sbb
cld
jecxz
jl
adc
jg
dec
adc
icebp
inc
int
retf
popf
adc
dec
mov
bound
push
rcl
mov
inc
ret
cmps
adc
push
retf
xchg
loope
mov
xchg
sti
or
or
gs
mov
lods
xchg
fdivr
cmps
adc
mov
mov
cmp
(bad)
sahf
rcl
int
hlt
push
cli
jo
jnp
fwait
movs
in
mov
in
fnsave
mov
adc
fdiv
jae
mov
sub
mov
fcomp
int
inc
lods
jo
ret
repnz
mov
mov
cmp
inc
sbb
js
dec
ss
or
add
sbb
(bad)
pusha
ja
lock
iret
popa
cmp
cmc
lock
test
scas
cs
icebp
mov
xor
test
ret
lea
into
sahf
das
inc
jbe
jns
fistp
retf
mov
sbb
sub
imul
jle
into
clc
cmp
lock
adc
clc
stos
mov
in
in
cmp
and
sub
fadd
push
ins
gs
sbb
mov
mov
add
push
adc
sar
loope
mov
mov
xchg
fwait
icebp
shr
pop
out
nop
pop
or
mov
scas
push
sub
repz
push
js
shl
adc
push
es
into
(bad)
mov
outs
adc
xchg
cmp
dec
xor
pop
add
dec
out
arpl
repnz
popf
and
sbb
mov
cdq
dec
loopne
cli
dec
push
bound
adc
jl
adc
mov
sbb
jle
adc
outs
cs
loop
add
adc
in
jg
adc
pop
sbb
shl
mov
pop
cmc
push
adc
jg
push
and
or
and
call
repz
shl
pop
xor
mov
dec
pop
ds
imul
fst
movd
push
pop
xor
aaa
in
das
(bad)
(bad)
adc
call
mov
ja
sub
sub
jmp
ins
ja
inc
and
addr16
push
push
add
cmp
pop
aam
push
aaa
lods
and
push
mov
and
mov
or
(bad)
mov
retf
or
(bad)
and
dec
push
mov
pop
add
shl
add
xchg
xor
mov
jmp
push
outs
aas
pusha
(bad)
ror
iret
jb
or
jb
cmovp
inc
int
ja
daa
and
popf
pop
cmc
and
mov
out
aaa
call
cli
js
movs
outs
push
cwde
sbb
(bad)
cld
scas
mov
arpl
xor
(bad)
and
xor
mov
mov
push
add
jp
add
pop
imul
icebp
cmp
icebp
call
out
mov
adc
xor
push
lock
sahf
adc
lods
dec
mov
push
(bad)
jge
add
call
in
xor
pop
lock
pop
jno
dec
xchg
sub
mov
or
push
and
or
xchg
mov
xchg
sbb
sub
js
pop
jb
adc
add
test
jns
add
add
jmp
xor
sub
scas
add
fs
iret
jnp
(bad)
(bad)
cmp
and
jbe
sub
mov
jb
xor
mov
jns
fst
cmp
xchg
(bad)
movs
cmps
aas
in
stos
pop
sbb
jmp
dec
lea
data16
repz
adc
aas
shr
xchg
pusha
add
int
adc
repnz
mov
inc
jp
push
and
mov
xor
movs
sub
xchg
imul
and
dec
jmp
xchg
cmp
lods
mov
dec
loop
adc
cmps
ja
stos
and
mov
xor
or
lods
pop
jg
adc
les
jge
fnstenv
fcmovnb
sub
mov
pop
dec
repz
leave
inc
inc
shl
mov
inc
and
and
or
jbe
mov
and
fstp
popa
add
outs
test
cli
push
and
imul
xor
ret
add
or
and
mov
cmp
(bad)
jbe
mov
fadd
loopne
popf
stos
xlat
ds
jmp
mov
inc
(bad)
in
xlat
xor
pop
ret
or
pop
jecxz
in
or
mov
dec
fwait
mov
dec
(bad)
pop
test
xchg
and
cwde
fs
ror
mov
imul
jno
inc
lock
jb
mov
mov
out
inc
xor
inc
mov
fld
je
in
cmp
fild
(bad)
sbb
mov
(bad)
and
and
movs
sub
aam
jmp
dec
stos
mov
imul
jbe
sbb
lea
cs
mov
push
iret
cmp
dec
push
in
pop
ja
addr16
leave
or
in
jb
jp
push
mov
enter
in
ror
push
outs
movs
test
(bad)
sbb
sbb
ret
push
mov
mov
pop
add
push
icebp
cmp
lds
mov
push
xor
mov
adc
push
test
adc
cmp
mov
int3
dec
dec
sub
xor
add
icebp
je
stc
cdq
daa
push
and
mov
retf
push
popa
cmps
sbb
loopne
pop
cli
enter
cmp
repnz
pop
lahf
scas
jmp
sub
inc
jno
out
leave
jl
mov
shl
push
ret
call
fild
mov
jo
sub
push
mov
rcr
push
sbb
jmp
rcl
mov
hlt
stc
scas
stc
(bad)
cdq
and
sub
push
sbb
rcl
jnp
out
add
pop
add
scas
ret
add
jo
jns
int3
xor
push
cmp
xchg
movs
push
jg
jmp
cmp
(bad)
mov
jns
or
xchg
cmp
xchg
ret
stc
push
cmp
lock
push
dec
dec
sub
out
repz
jb
iret
and
mov
div
push
aad
push
xor
cmps
aad
test
clc
imul
rol
push
repnz
mov
cmps
inc
mov
sub
ins
mov
(bad)
push
out
aas
mov
retf
inc
lods
test
or
lahf
push
lds
jge
call
cmp
cs
jmp
add
cdq
lds
ins
(bad)
in
bound
test
das
lock
add
and
jle
(bad)
js
xor
mov
jecxz
fadd
das
push
and
shr
outs
frstor
sub
or
test
fwait
mov
into
dec
sbb
sub
dec
pop
gs
push
ins
out
mov
lods
aam
sub
movs
mov
inc
xchg
xor
call
xor
xor
sub
jp
cwde
lock
leave
jmp
stos
inc
jmp
aam
pop
cmc
push
nop
sbb
test
push
es
sbb
pop
cmp
xchg
mov
cmps
push
retf
xchg
rol
aad
inc
call
movs
mov
sub
neg
xor
mov
lahf
dec
sub
add
cmc
es
or
push
xor
inc
sub
mov
dec
fadd
rcl
dec
add
pop
or
repz
iret
in
sbb
xor
js
int3
(bad)
les
push
es
ins
cli
inc
xlat
pop
or
out
mov
push
mov
shl
push
push
aaa
push
xor
ins
popw
xlat
or
out
inc
xor
dec
shl
pop
mov
ins
and
fadd
hlt
dec
cmp
push
aam
aad
das
xor
and
das
scas
out
mov
jecxz
lahf
sub
pushf
add
ins
pop
bound
retf
fdivr
jg
jmp
pop
adc
fadd
mov
jmp
repnz
cdq
jne
sbb
xor
fs
adc
push
gs
inc
ret
mov
cmp
stos
scas
cmp
xchg
cs
push
pusha
lock
pop
(bad)
push
sub
mov
cmc
pop
movs
xchg
mov
adc
xchg
(bad)
fisttp
xchg
push
addr16
pop
inc
cmp
push
or
imul
stos
pop
xchg
movs
pop
ins
mov
pop
mov
xchg
pop
jp
xchg
aam
rcl
(bad)
(bad)
xor
ror
dec
push
add
pop
jno
inc
lds
movs
lea
and
mov
mov
js
cmp
(bad)
arpl
mov
fild
loope
js
fidiv
ins
mov
into
mov
dec
push
sbb
cmps
mov
popf
in
mov
je
or
fs
sahf
popa
pop
adc
xchg
jle
push
sbb
call
ds
add
sub
sbb
stos
fs
repz
dec
jmp
cdq
or
in
mov
mov
mov
xor
fwait
lods
jns
fld
loop
sub
ss
fnstcw
xchg
ja
xchg
pushf
inc
je
sbb
inc
das
neg
sbb
jnp
test
int3
lea
xor
sub
(bad)
push
cmp
dec
push
adc
jns
sahf
int3
ss
or
(bad)
jnp
pop
mov
dec
push
aad
xchg
imul
inc
mov
dec
nop
sub
push
mov
out
sbb
and
sbb
xchg
pushf
leave
fidiv
sbb
lods
xor
lods
sub
jg
adc
mov
enter
nop
xor
push
jnp
push
clc
add
loop
fild
ja
jno
sahf
cmp
xchg
(bad)
push
loope
inc
(bad)
adc
sbb
loopne
loope
sbb
ret
not
pop
std
push
xor
cmp
mov
or
fist
mov
mov
sar
pop
xchg
adc
mov
push
jmp
ror
hlt
(bad)
dec
inc
pop
push
pop
cmp
sbb
pop
mov
cli
mov
retf
push
sti
mov
sub
push
xor
push
add
pusha
push
in
sub
mov
add
(bad)
neg
cli
shl
lods
sbb
sti
inc
adc
in
jge
adc
nop
mov
add
ret
ret
sub
int
cwde
pop
push
sbb
cmp
push
popa
inc
out
popa
push
pop
inc
outs
mov
push
xchg
cld
mov
movs
inc
sub
inc
stos
movs
in
sahf
movaps
out
outs
hlt
iret
cmps
inc
xor
jmp
push
or
lahf
inc
xchg
call
mov
sbb
imul
cdq
jp
sub
pushf
xchg
aaa
sbb
jno
in
pop
imul
xchg
mov
xchg
fcmovnbe
cli
inc
sub
sbb
add
scas
xor
mov
ss
bound
push
and
jecxz
in
or
das
inc
or
mov
sub
fadd
push
fcom
movs
cmc
pop
and
retf
bound
adc
into
dec
fsubr
cmc
test
lock
mov
or
mov
mov
loopne
fild
sbb
and
mov
inc
mov
xor
fdivr
stc
or
mov
mov
mov
cmp
das
mov
jecxz
inc
int3
out
xchg
cmps
dec
cld
jmp
hlt
sbb
aas
push
mov
jle
mov
or
repz
pop
ret
push
in
fnop
dec
jg
dec
test
aad
inc
xchg
mov
inc
(bad)
bound
je
cmp
adc
pop
fs
cmp
retf
and
pop
popa
jbe
mov
sub
retf
aam
popf
xor
(bad)
sti
jo
push
add
fs
jns
mov
mov
add
cs
jo
adc
sub
retf
inc
inc
or
xor
adc
or
jecxz
xor
mov
push
xlat
xor
call
fdivr
push
scas
leave
jmp
(bad)
outs
cdq
mov
repz
cli
mov
pop
xor
outs
outs
scas
sbb
fsubrp
adc
push
mov
inc
or
or
ds
pop
xor
inc
lea
test
adc
out
ins
leave
aas
inc
jno
mov
pushf
imul
rcl
cmp
mov
cmp
adc
mov
call
ficomp
into
or
(bad)
sti
xchg
xor
mov
lds
xchg
jno
xor
shl
xor
in
add
loop
lods
push
adc
test
cmps
or
adc
adc
xchg
stc
mov
ret
cmp
xchg
cmp
cmc
arpl
push
sbb
or
xor
lods
jns
mov
push
cli
and
or
int
into
mov
jo
mov
nop
dec
loop
daa
mov
pop
or
or
mov
add
je
movs
ins
jmp
xor
in
mov
push
not
sub
pop
pmuludq
nop
aas
sub
ins
push
rcr
imul
cmps
popa
leave
mov
xchg
sub
mov
xor
xchg
outs
loope
pushf
or
sbb
xchg
xchg
push
retf
leave
(bad)
push
pop
movs
cmp
inc
maskmovq
(bad)
adc
or
cmps
js
adc
pop
inc
fiadd
or
mov
into
sub
mov
into
rdmsr
jbe
add
jns
or
fsubp
sbb
or
add
jle
cmp
sbb
fild
and
outs
xchg
jmp
test
sbb
mov
pop
xor
adc
addr16
sbb
mov
mov
rcl
inc
rol
fcmovnu
adc
jo
sub
imul
cmp
mov
jp
sbb
mov
lea
xchg
pop
test
int
in
in
popf
ret
dec
lea
(bad)
rcl
das
jmp
xor
push
aaa
mov
repz
cmps
push
imul
pushf
icebp
xchg
push
addr16
mov
jb
and
or
(bad)
or
ds
lds
push
iret
pop
sub
in
imul
push
xor
mov
and
pop
push
add
(bad)
jb
out
in
xchg
leave
loope
jbe
(bad)
mov
xor
push
popa
dec
adc
aam
dec
mov
mov
add
xor
cli
cmp
cmp
fbld
add
xor
xchg
cmp
jge
loop
cwde
push
loope
adc
or
or
mov
dec
repz
sub
(bad)
push
pop
push
or
jmp
cdq
ins
jle
mov
in
push
cmp
mov
or
call
dec
xor
adc
das
test
movs
jg
pop
nop
in
cli
inc
mov
clc
ins
and
fcomp
call
mov
jl
mov
and
stos
mov
pushf
push
shr
retf
(bad)
out
stos
mov
sbb
aad
sub
loopne
fwait
les
popa
arpl
and
out
mov
call
mov
test
ja
(bad)
xchg
pop
or
adc
xchg
in
mov
ficom
enter
push
stos
mov
div
pop
inc
pop
jns
loope
in
cdq
cmc
pop
stc
and
dec
mov
sub
and
xchg
test
imul
fimul
inc
shl
cmps
in
pushf
push
cld
pop
add
jne
cmp
jae
xor
adc
mov
inc
sbb
xchg
movs
fadd
mov
std
jg
xchg
mov
cmp
and
jmp
(bad)
shr
sbb
movs
xchg
aad
push
enter
loopne
fld
cmp
iret
and
or
mov
ret
pop
sbb
cwde
push
cmp
pop
fs
aas
pop
lea
rol
pop
sub
in
push
jno
and
mov
mov
push
shl
pusha
shl
adc
mov
xlat
out
cmp
dec
fs
mov
pop
aas
cmps
(bad)
adc
xor
jge
dec
clc
mov
nop
lahf
cmc
xor
loopne
inc
mov
movs
sbb
arpl
jnp
scas
mov
inc
mov
call
(bad)
mov
cs
inc
cmp
shl
inc
iret
pop
and
pop
xchg
push
rol
mov
ficomp
push
or
movs
out
push
inc
ror
sbb
in
mov
xor
ret
sbb
push
js
fbstp
mov
jb
aam
push
mov
daa
dec
add
inc
sti
fst
sbb
add
call
jb
xchg
call
test
mov
jge
push
pop
js
xchg
test
jo
mov
(bad)
fisttp
popa
hlt
mov
(bad)
adc
cmp
aam
cmp
bswap
sub
shr
aam
data16
mov
inc
ror
and
and
and
jo
int
pop
xchg
sub
jne
jecxz
add
(bad)
jne
enter
jle
dec
imul
dec
mov
enter
test
test
add
mov
jns
dec
int3
pop
sbb
call
aaa
add
fnstcw
hlt
pop
shl
gs
inc
sbb
fcmovb
jae
leave
mov
test
pop
dec
push
mov
mov
jbe
inc
movs
fdiv
adc
sti
dec
xor
add
arpl
mov
enter
je
pop
push
mov
or
mov
adc
mov
mov
adc
mov
in
loopne
imul
movs
psubw
ds
jne
scas
mov
mov
jae
(bad)
ja
daa
inc
pop
not
add
jmp
xchg
sub
cmps
rol
mov
mov
mov
xor
xchg
mov
std
sahf
xchg
jmp
xchg
push
xchg
icebp
les
aaa
fld
xlat
cs
mov
in
test
nop
cld
in
lahf
add
call
in
mov
xchg
sbb
dec
sub
push
pop
hlt
lock
std
xor
dec
xor
mov
std
push
xor
loope
pushf
stc
cmps
jecxz
scas
mov
push
daa
ins
mov
pop
popa
xchg
jmp
int
jns
ja
push
jbe
pusha
sahf
(bad)
sub
jo
mov
mov
push
dec
outs
inc
ret
dec
push
push
aad
sub
fst
mov
cmps
mov
cld
(bad)
jge
dec
mov
and
pop
push
inc
lds
or
jb
popf
cmc
cmp
mov
out
push
in
lahf
xchg
push
sub
jne
movs
iret
dec
sbb
add
cmps
and
int
hlt
out
lods
mov
pop
sbb
cli
shr
push
xchg
pop
push
sub
jp
inc
xlat
mov
fs
cmp
push
inc
cmp
add
jnp
rcl
jbe
ins
in
ins
inc
(bad)
or
jle
or
add
movs
(bad)
mov
out
push
sahf
stos
hlt
inc
daa
scas
shr
int3
pop
add
pop
leave
call
cmp
sub
inc
and
fstp
dec
xchg
repz
std
das
gs
fisttp
lock
mov
jnp
call
bound
inc
and
int
pop
jmp
aam
test
mov
lds
(bad)
addr16
mov
inc
mov
cmp
repz
data16
cmp
sub
xchg
mov
rol
mov
push
mov
dec
shl
daa
xor
pop
int3
in
(bad)
cdq
fisub
test
call
cmp
jp
jb
fwait
scas
mov
dec
sbb
fiadd
(bad)
mov
in
or
jmp
jg
push
jns
xor
inc
push
(bad)
pop
dec
sub
loop
adc
retf
dec
inc
addr16
ds
or
adc
push
jecxz
das
or
je
mov
aad
addr16
add
iret
ins
ins
cli
and
ins
retf
cmp
inc
cmps
xor
adc
pop
mov
rol
or
xlat
cmps
fist
inc
(bad)
xchg
jg
sbb
dec
in
jmp
xor
add
popa
jp
cmp
mov
xchg
inc
push
mov
push
rol
xchg
mov
push
mov
push
inc
push
cmp
xor
pop
ret
mov
shl
sbb
mov
nop
js
clc
cmc
sbb
jno
jno
je
aam
xchg
cmp
inc
pop
xchg
cmp
or
xor
sub
lods
call
test
popf
loop
add
fwait
into
and
add
in
xchg
test
test
stos
cdq
fs
aas
frstor
(bad)
ror
jmp
mov
mov
adc
inc
ds
scas
loopne
fucomp
sub
lock
jle
popa
push
scas
push
iret
addr16
pusha
dec
mov
das
sub
push
jecxz
sub
jnp
call
mov
pop
or
(bad)
and
and
in
aaa
in
jbe
(bad)
enter
(bad)
push
push
rcl
jae
mov
inc
fcom
nop
test
lds
inc
sbb
inc
adc
xchg
popa
ins
jno
sbb
mov
shl
rcr
pop
je
adc
test
push
pop
cmps
in
test
out
aas
fcmovnb
imul
xchg
scas
xor
mov
imul
push
dec
mov
ret
cwde
sub
and
or
cmp
cmp
adc
shl
mov
(bad)
pop
aad
adc
arpl
rdmsr
sub
inc
(bad)
pusha
cli
jbe
xchg
xor
cli
push
mov
cmps
xor
out
xchg
push
dec
xchg
imul
int3
push
adc
jo
xchg
lock
push
sbb
ret
and
ss
sbb
jbe
dec
test
pop
push
dec
sar
(bad)
test
mov
sub
sbb
fist
xchg
mov
ja
daa
and
mov
add
mov
ins
test
pop
retf
in
cmp
mov
fcomp
in
push
sbb
jne
sub
dec
jecxz
dec
mov
arpl
adc
test
or
addr16
push
pusha
cwde
add
das
lahf
and
pop
cmps
mov
ds
hlt
xor
pop
into
mov
test
and
cdq
jmp
dec
ficomp
pop
pop
pop
out
call
or
and
sbb
pop
cs
jecxz
movs
sbb
inc
mov
cmp
aaa
popa
push
cs
xchg
sbb
cmps
xlat
cwde
and
lods
rol
(bad)
xchg
mov
sbb
push
test
les
and
mov
lods
mov
adc
pop
sahf
cmp
adc
into
and
ds
mov
sahf
(bad)
iret
jg
push
jmp
test
test
mov
mov
jnp
aaa
fild
les
cmp
sbb
aam
dec
mov
paddsb
pushf
push
push
mov
enter
or
adc
push
(bad)
cli
inc
aad
mov
sub
cli
pop
sahf
clc
or
pop
and
jecxz
or
and
mov
inc
jg
sbb
je
mov
add
xchg
push
call
in
dec
add
rcr
push
xchg
and
mov
xchg
xchg
inc
rcr
imul
pop
imul
pop
mov
sbb
xchg
push
xchg
push
cmps
xor
mov
or
jbe
ja
clc
stc
cmps
clc
ror
clc
xor
or
fcomp
ror
sti
push
in
dec
mov
ins
jbe
cdq
mov
push
jl
fild
popa
daa
jmp
pushf
mov
stos
retf
sbb
push
cmp
movs
aam
jmp
rol
push
push
xchg
mov
add
sub
cmps
sub
(bad)
xor
aam
nop
adc
jmp
mov
jp
scas
mov
scas
cwde
and
mov
adc
push
cmp
pusha
add
xchg
loopne
movs
imul
cs
adc
and
(bad)
cmps
(bad)
jge
sti
jbe
sub
xchg
addr16
pop
and
call
sbb
out
pop
jge
push
je
pop
std
cmp
fcomp
mov
(bad)
sub
ss
std
pop
cmps
add
imul
daa
mov
bound
movs
push
stc
std
sub
dec
push
cs
sbb
lds
jo
in
mov
aas
test
dec
jbe
add
push
adc
push
test
es
jg
(bad)
or
ins
mov
mov
leave
loop
lock
pop
sbb
out
sub
mov
rcr
out
enter
push
jp
jmp
ins
push
cmps
adc
sub
sub
and
mov
push
test
lea
inc
dec
adc
js
neg
and
ja
sub
or
push
je
jp
std
inc
sub
mov
rcl
es
pop
je
pop
jmp
jae
ret
cmc
dec
mov
xchg
jmp
adc
fcomp
xor
icebp
sub
cmc
cmc
in
bound
hlt
icebp
pop
mov
rcr
push
in
jae
xor
imul
mov
lea
fwait
int3
inc
int
inc
out
xchg
neg
push
push
add
xchg
or
outs
out
jno
je
adc
inc
add
sub
repnz
inc
in
lock
(bad)
je
stos
pop
retf
pop
outs
push
stc
push
pop
jl
jmp
fcmovnb
xor
stos
add
loope
push
add
mov
stos
xchg
pop
les
es
mov
mov
(bad)
iretw
mov
fs
(bad)
fs
and
retf
push
test
ret
mov
pop
jmp
mov
std
sar
mov
je
inc
sbb
inc
ins
(bad)
xchg
arpl
sbb
std
shl
std
inc
jb
lea
(bad)
adc
adc
outs
es
dec
inc
int
ret
ins
pushf
pop
adc
xor
xor
clc
mov
rdpmc
pop
scas
inc
pop
mov
cmp
loope
into
mov
mov
iret
mov
pop
xchg
je
in
cs
adc
movs
jbe
shr
dec
hlt
or
jae
sub
or
jbe
xchg
test
dec
sahf
jp
out
cmp
(bad)
fild
add
mov
scas
cwde
push
(bad)
icebp
mov
cmp
arpl
(bad)
test
mov
popa
rcr
out
push
xor
loopne
clc
xor
xlat
mov
mov
cmc
imul
or
in
shl
and
sub
push
jns
jecxz
js
pop
(bad)
shl
loop
ficomp
mov
pop
mov
xor
sbb
ins
dec
aas
jns
fs
mov
(bad)
dec
jl
loop
js
fimul
loop
stos
adc
and
pusha
and
mov
in
test
and
aaa
inc
rol
jb
xor
inc
cmp
xchg
pop
hlt
jae
dec
cld
sar
jmp
and
retf
(bad)
gs
dec
add
popa
and
push
inc
std
push
jl
int3
rol
pop
and
sahf
mov
stos
jbe
lds
push
xchg
dec
pop
fnstenv
sub
push
pop
mov
rcl
xchg
out
daa
jns
inc
mov
mov
mov
out
xor
jnp
mov
ss
mov
lea
inc
in
cli
and
in
iret
popf
and
enter
jg
mov
enter
pop
sbb
call
sub
gs
mov
adc
and
sub
(bad)
xlat
sub
in
or
jp
out
lahf
sahf
ror
and
pop
int
push
mov
pop
and
in
mov
stc
mov
js
pop
push
push
adc
ins
scas
imul
push
iret
stos
cmp
fsubr
scas
test
fisttp
dec
add
ds
sti
pop
div
cmp
mov
inc
movs
(bad)
sti
lods
mov
dec
ret
xchg
ss
fcom
mov
xor
test
add
loopne
mov
out
sub
mov
push
ja
imul
cmc
enter
and
ja
sar
lods
push
mov
arpl
out
cmp
pop
xchg
xor
xchg
inc
lock
push
pop
aad
aaa
dec
in
fdiv
fwait
sub
clc
dec
dec
push
pop
(bad)
movs
adc
lds
ret
ss
mov
mov
mov
fsubr
mov
inc
fstp
add
fidivr
in
xchg
jge
cdq
call
xchg
inc
ret
inc
sub
int
cmp
xchg
inc
(bad)
cmps
jbe
or
int3
mov
mov
xchg
fwait
imul
jo
test
loop
inc
data16
mov
add
sti
pop
lahf
push
call
icebp
sub
inc
cmp
shr
imul
scas
mov
mov
mov
test
enter
jmp
mov
pop
mov
fdivr
adc
stc
and
scas
push
movs
lds
(bad)
cmp
cdq
cs
xchg
int3
mov
(bad)
push
bound
jno
or
in
in
xchg
data16
loope
xor
mov
mov
dec
jbe
ret
lahf
xchg
es
mov
inc
nop
jecxz
jle
shl
xchg
in
inc
leave
lods
in
xchg
in
push
addr16
cmp
jae
call
jp
pushf
fadd
mov
push
out
iret
loopne
and
sub
fidiv
mov
das
or
mov
sahf
mov
xor
mov
je
and
xchg
jb
aam
mov
xchg
xchg
movs
hlt
mov
pop
and
mov
mov
in
aas
xchg
outs
(bad)
out
fadd
adc
hlt
pop
cmp
push
mov
push
dec
mov
repz
xor
imul
jp
dec
out
add
or
hlt
adc
repnz
xchg
pop
dec
push
sbb
xchg
scas
imul
out
jb
cmp
lahf
inc
hlt
bound
and
fstp
sub
fidivr
imul
(bad)
or
test
pop
int3
sahf
inc
cmp
cmc
mov
aad
in
push
or
push
shl
add
and
adc
cwde
mov
imul
or
iret
es
sub
adc
pop
sar
into
stc
mov
frstor
mov
test
daa
inc
neg
cmps
aad
and
test
or
inc
jmp
mov
sub
test
pop
jmp
sbb
cmp
inc
sahf
dec
xor
push
fiadd
cdq
aas
pop
inc
pop
pop
loope
fdiv
inc
stc
clc
pop
into
outs
xchg
fstp
and
repz
adc
stos
test
mov
jmp
push
jmp
or
and
lahf
or
scas
dec
inc
dec
cmc
dec
stos
test
rol
jb
pop
mov
cmps
inc
cmp
ret
rcr
mov
sar
jns
lahf
dec
sub
push
neg
inc
cmp
(bad)
iret
pusha
fistp
fdivr
inc
push
(bad)
mov
out
cld
in
sbb
ss
rsm
jge
cmp
or
popa
cmp
pop
mov
lods
xor
sbb
mov
addr16
xchg
mov
mov
sbb
and
jp
rol
xchg
adc
outs
or
lods
(bad)
push
movs
daa
jno
punpckhbw
fs
scas
das
imul
sub
enter
fld
call
movs
mov
and
les
and
test
and
cs
popf
bound
in
les
clc
and
ja
inc
and
xor
dec
lods
ss
andnps
add
xor
mov
mov
sbb
push
pop
lahf
jle
cmp
push
out
jb
or
inc
mov
stos
mov
retf
mov
pop
mov
cld
or
ret
push
push
xchg
ror
lea
xchg
hlt
clc
cmps
and
sub
add
push
sub
das
ins
shr
rcl
add
ret
shl
arpl
add
jl
pop
dec
call
push
cld
fsubr
push
(bad)
rcl
push
xor
daa
mov
mov
inc
xrelease
adc
inc
fist
js
lea
out
sbb
fprem1
cmp
jp
sub
sti
mov
dec
pop
or
dec
out
or
and
jb
mov
loopne
sub
jl
mov
(bad)
inc
sbb
pop
inc
jae
push
cmc
add
push
imul
adc
sub
pop
bound
shr
inc
or
sub
push
das
clc
call
and
push
mov
push
dec
loop
jg
clc
pop
add
(bad)
jae
jge
cmc
icebp
xchg
pop
ss
push
call
adc
mov
ret
std
in
jmp
sbb
push
pop
inc
xor
jb
arpl
movs
out
sub
add
mul
daa
loopne
lea
cld
xchg
outs
aam
int3
fst
ja
xchg
push
or
ret
fdivr
cmp
icebp
(bad)
inc
popa
mov
jb
fisubr
in
push
stos
retf
adc
popa
sub
int
and
addr16
sbb
(bad)
xchg
pop
repz
dec
jmp
mov
or
aam
(bad)
sub
dec
xor
mov
pop
div
(bad)
mov
mov
jle
clc
js
jbe
dec
outs
mov
sar
rol
mov
xchg
adc
repz
stc
sub
push
cmps
push
xchg
push
jmp
cmp
test
fld
push
fwait
pop
xor
aad
sahf
jne
pop
xlat
repz
mov
inc
cmp
fstp
in
and
mov
inc
(bad)
inc
rcr
aam
bound
jae
mov
neg
fstp
jmp
fwait
mov
outs
and
(bad)
(bad)
jnp
inc
stos
ret
or
sub
jb
test
adc
jge
scas
ret
inc
mov
jmp
or
int
push
(bad)
and
mov
sahf
sets
cwde
mov
out
aas
sar
xor
inc
in
inc
xlat
pop
call
jl
clc
outs
scas
aaa
ror
daa
jmp
mov
ja
jmp
adc
mov
out
pop
xchg
in
fs
lea
rcr
xchg
sbb
mov
cmp
xor
fprem
inc
(bad)
cmc
fidiv
cli
mov
dec
or
sub
pop
jo
inc
shl
jmp
pushf
ss
add
xchg
inc
and
push
jb
mov
mov
sbb
fnstenv
jg
xlat
sub
lea
mov
xor
mov
jl
mov
jb
or
imul
(bad)
dec
lock
stos
aam
mov
in
shr
dec
mov
jbe
stos
mov
stc
jp
js
push
icebp
fiadd
jmp
and
inc
sti
ror
icebp
test
repnz
xor
call
xchg
out
ds
retf
call
repnz
adc
sub
mov
push
push
es
pop
lock
mov
test
loopne
daa
mov
pop
outs
xor
lods
dec
pop
cli
sub
sbb
bound
jae
and
push
cs
mov
pop
sub
test
iret
sbb
add
cmp
inc
lock
loopne
out
out
out
daa
sbb
ror
jo
pop
mov
mov
lods
cmp
and
xor
mov
retf
jg
adc
cmc
retf
push
movs
xchg
jge
mov
test
jg
jmp
sbb
jmp
cmps
out
jmp
fsubrp
shl
push
jg
xor
or
cmp
fcomi
iret
out
out
jbe
adc
jnp
lds
(bad)
adc
cmc
stos
add
enter
add
lds
push
ret
loop
fcom
xchg
or
out
imul
out
xor
sbb
mov
in
mov
or
ja
sbb
cmp
mov
push
xchg
lods
dec
push
inc
jo
dec
shr
add
out
or
pop
push
sti
inc
(bad)
out
repz
push
stc
sub
or
mov
daa
psubusw
jle
ins
xchg
rcr
and
mov
sti
cmp
sahf
push
loope
cmp
xor
xor
cmps
push
adc
mov
mov
xchg
jns
out
in
add
xchg
mov
sbb
pop
(bad)
sbb
call
sub
scas
jno
in
jle
(bad)
mov
adc
and
rol
cwde
enter
mov
xor
mov
dec
imul
xchg
xor
iret
out
mov
imul
imul
mov
lods
inc
adc
pushf
jne
jnp
add
inc
xor
add
test
imul
jns
cmp
pop
mov
adc
sti
add
out
sbb
inc
dec
xchg
retf
mov
inc
inc
cmp
aad
rcl
jo
xor
mov
add
cmp
dec
and
push
loopne
push
rcl
lahf
or
pop
xchg
mov
push
es
jbe
jb
inc
fcomp
sub
shl
inc
cld
repnz
ret
jmp
mov
lock
push
push
dec
jno
jmp
daa
xor
call
pop
or
outs
add
jb
cvtpi2ps
cmp
push
out
je
shr
outs
icebp
in
shl
add
cmps
sub
sbb
call
xlat
cmps
ror
sub
aaa
cli
out
leave
inc
imul
lods
xchg
fisubr
xchg
ss
jle
(bad)
cmp
daa
stc
(bad)
adc
xchg
ins
xor
ds
out
mov
jle
shl
aad
lods
imul
push
lods
sbb
mov
sbb
pop
popf
aam
push
addr16
aad
pop
cmps
or
div
sbb
dec
dec
push
push
bnd
enter
daa
test
mov
mov
cwde
sbb
ss
mov
dec
(bad)
leave
clc
repnz
mov
dec
push
or
mov
ror
outs
xchg
xor
pop
jmp
cmp
mov
jecxz
mov
lahf
mov
or
lods
add
adc
in
cmp
cmp
addr16
push
movs
adc
inc
inc
repz
push
mov
add
(bad)
and
mov
add
std
cdq
fwait
jp
sub
and
ins
push
jmp
and
jnp
xlat
mov
(bad)
(bad)
and
inc
mov
out
cmp
push
imul
push
mov
pop
mov
mov
mov
xor
mov
jecxz
cwde
pop
add
daa
dec
mov
sub
test
sub
add
repnz
push
test
ins
sahf
imul
cwde
push
fdivr
inc
add
lea
je
sub
fadd
sbb
xchg
xor
jg
leave
pop
push
push
jmp
daa
push
jno
add
into
sbb
xchg
pop
(bad)
ds
out
xor
shl
out
es
rol
gs
(bad)
aas
mov
nop
add
adc
ficomp
repz
xor
popa
int3
xor
inc
mov
push
add
cmps
cdq
nop
(bad)
fnsave
jo
in
inc
inc
iret
loop
in
dec
jge
imul
mov
cmp
(bad)
add
call
sub
cmp
sbb
imul
mov
and
scas
cmps
jnp
in
lea
mov
test
idiv
out
mov
sar
sbb
mov
fbstp
imul
test
scas
sbb
stos
add
cmp
xor
outs
fist
mov
jmp
cmp
dec
xor
out
cmp
test
rcr
pop
sti
adc
or
and
adc
push
pop
out
aad
push
mov
or
cld
add
add
pop
xchg
gs
cmp
jns
sbb
faddp
inc
xchg
int
rol
ins
aaa
jmp
iret
push
sahf
mov
fisubr
cmps
inc
sub
scas
xor
iret
mov
retf
sbb
es
dec
sti
(bad)
adc
xchg
ja
inc
popf
xor
push
imul
imul
repnz
icebp
inc
lods
xor
daa
mov
mov
aas
jge
mov
xchg
add
dec
call
mov
jmp
(bad)
popa
imul
sar
or
xor
mov
in
or
sbb
xor
add
movs
(bad)
stc
fst
and
int3
sbb
cli
pop
inc
xchg
stc
stos
push
xchg
sar
xchg
pusha
stc
jns
enter
or
aam
jp
in
dec
jmp
out
cmp
rcr
xchg
fwait
ret
imul
mov
mov
push
pop
aas
add
and
popa
adc
xor
bound
and
out
cld
jno
sti
ds
mov
ret
adc
sbb
cmp
add
call
push
scas
ja
cmp
(bad)
inc
rcl
push
push
pop
popa
pop
mov
std
daa
imul
xchg
mov
adc
inc
pop
add
and
pusha
movs
les
and
xor
loopne
jle
sbb
popa
into
loop
repnz
mov
xchg
adc
lock
xchg
and
cld
scas
push
ret
ins
lds
test
push
hlt
mov
dec
sbb
daa
lds
add
sbb
fimul
mov
cmps
xor
call
add
mov
cwde
fidiv
add
std
push
int3
inc
scas
push
loopne
add
cmp
out
sbb
sbb
in
lods
test
std
cmp
shr
lahf
xchg
mov
add
ins
xchg
sbb
std
add
lock
xchg
rcr
and
push
add
repnz
hlt
frstor
clc
inc
popa
and
mov
clc
addr16
sahf
adc
jp
in
test
mov
mov
dec
mov
jmp
mov
jmp
dec
js
xchg
call
cli
pop
add
add
jle
sub
mov
push
mov
js
int3
fidivr
les
mov
xlat
xchg
pop
aad
int3
stos
mov
pop
pop
mov
loopne
inc
mov
jge
in
retf
sbb
xor
sub
out
inc
pop
into
jmp
push
or
sbb
jne
aas
ins
add
ret
mov
cmps
pop
call
dec
jno
cmp
push
call
dec
aas
sbb
jno
jg
add
movs
leave
jbe
inc
mov
sub
fild
mov
movs
xor
sub
jo
retf
mov
mov
test
xor
shl
pop
retf
sbb
shr
aam
inc
push
(bad)
cmp
xchg
in
test
add
icebp
jo
dec
xchg
push
in
inc
aam
test
push
je
inc
cmps
pop
mov
inc
ror
sbb
iret
lock
cmp
fnstenv
sub
addr16
jmp
and
xchg
(bad)
add
ja
out
shr
aaa
les
lods
data16
fwait
addr16
lahf
sbb
xchg
mov
sbb
mov
in
adc
retf
ins
sbb
std
sti
arpl
mov
pop
mov
sahf
add
movs
outs
(bad)
lea
push
lahf
mov
mov
mov
xor
sbb
mov
ret
scas
(bad)
xlat
sub
lods
ds
cld
mov
lea
or
movs
daa
sti
cmp
cmp
inc
inc
arpl
dec
in
xor
xor
cwde
sub
repnz
test
in
xchg
add
mov
cld
out
jae
and
push
pop
stc
xchg
add
mov
pop
push
jmp
adc
lea
fwait
into
lds
sbb
cmps
add
mov
lahf
mov
mov
push
ja
dec
out
test
xchg
inc
mov
push
or
cmps
dec
out
cmc
adc
sub
leave
jmp
sbb
inc
pusha
pop
jp
mov
adc
cmc
sahf
jnp
cmp
call
mov
push
int3
xor
je
ret
sbb
ss
jae
ror
movs
xchg
or
or
fnstcw
sbb
call
add
inc
movs
mov
mov
enter
(bad)
push
fisttp
pop
jp
fwait
sub
jae
out
pushf
jnp
outs
les
jle
addr16
into
in
retf
enter
mov
xchg
adc
sti
in
mov
cwde
inc
(bad)
xchg
bound
push
mov
scas
pop
adc
jg
jecxz
test
xor
adc
cmp
stos
int3
dec
aaa
xor
or
cmp
ja
nop
daa
or
enter
xchg
xlat
mov
out
cwde
jbe
bound
fs
ins
(bad)
adc
pop
and
or
mov
ja
scas
mov
push
sub
in
xor
jno
int
cmps
addr16
mov
imul
fwait
push
mov
mov
lds
in
int
lahf
add
push
add
xchg
dec
dec
jmp
pop
rcl
cmp
(bad)
adc
lea
popa
or
jecxz
mov
mov
push
cmp
push
dec
les
add
pop
jns
push
mov
repz
jmp
scas
and
ins
xor
(bad)
in
sbb
(bad)
push
mov
ret
lock
sbb
sahf
sbb
xor
dec
mov
into
sub
ds
jb
inc
jge
add
(bad)
push
jg
jmp
fiadd
cs
mov
lahf
xor
push
cmp
mov
out
sbb
(bad)
sub
or
push
adc
jmp
pushf
adc
or
jbe
sbb
cwde
(bad)
ror
mov
es
push
ret
rcr
mov
mov
mov
adc
or
loopne
pop
push
hlt
aam
push
stos
lods
fistp
dec
cli
cdq
xor
dec
mov
loopne
push
jge
cdq
adc
inc
adc
ins
out
nop
in
dec
(bad)
je
mov
inc
shl
mov
pusha
cdq
mov
cmp
mov
jmp
sub
in
inc
test
jns
sub
ja
call
inc
ja
pop
dec
test
mov
inc
jmp
push
das
sub
jno
jl
ins
mov
mov
xor
retf
cmp
xchg
cmps
mov
retf
add
in
sub
jmp
xchg
jno
imul
jmp
nop
mov
mov
push
pop
push
retf
scas
sbb
dec
jne
sbb
adc
cmps
adc
(bad)
stos
ret
xor
push
push
cmc
dec
and
mov
mov
mov
dec
repnz
cmp
xor
sub
mov
sbb
int3
popa
pop
aad
ds
mov
das
test
mov
dec
mov
jmp
adc
pop
pop
out
dec
cmp
cmp
es
and
test
and
ja
clc
jne
mov
jb
pop
retf
scas
cs
push
inc
dec
jge
(bad)
jnp
push
mov
pop
imul
es
dec
cmp
test
adc
push
jecxz
adc
pop
pop
loopne
repnz
dec
sbb
inc
cli
aam
arpl
cmps
cmp
mov
(bad)
call
test
or
cs
dec
ror
in
mov
add
rcr
ins
jne
lods
jg
dec
jb
and
scas
pop
mov
clc
push
inc
and
dec
pop
push
(bad)
xchg
loopne
fwait
ins
or
xor
lds
outs
rol
ss
ds
xor
repz
movs
inc
and
not
inc
jmp
test
xchg
pop
add
mov
inc
xor
inc
stos
fiadd
sahf
jo
jmp
push
mov
adc
jg
(bad)
jecxz
push
xchg
arpl
mov
in
dec
push
xor
loop
(bad)
(bad)
pop
je
inc
and
jl
mov
mov
int
cli
xchg
xor
cli
jecxz
dec
mov
repz
xchg
or
test
cld
bnd
enter
push
or
inc
adc
loope
(bad)
shl
xor
inc
repnz
xchg
or
shl
mov
inc
jp
mov
mov
pop
dec
(bad)
imul
neg
mov
(bad)
out
call
das
dec
push
aas
xor
mov
dec
dec
sub
and
inc
inc
shr
sbb
xchg
xor
mov
aad
jo
stc
inc
fwait
mov
sti
test
inc
dec
lock
or
mov
pop
pop
mov
mov
lds
jmp
repnz
rcl
sub
jo
leave
sbb
mov
pop
sbb
ret
bound
jb
mov
in
neg
add
cmp
(bad)
adc
jle
pop
jo
adc
std
add
fsubr
mov
and
and
test
sub
out
out
cs
cs
pusha
popa
adc
sbb
stc
retf
inc
add
bound
out
sbb
enter
dec
out
cmp
xlat
cmp
mov
jmp
pop
or
imul
mov
ins
push
pop
not
ds
fsubr
mov
rcr
daa
cdq
rol
mov
mov
loopne
aas
cmp
leave
cmps
cmp
sbb
inc
out
shl
mov
push
inc
or
mov
add
(bad)
push
iret
xchg
cmps
add
enter
xor
dec
pushf
lods
or
aaa
xor
xchg
ss
loope
sub
push
xchg
(bad)
je
pop
popa
xor
cmp
das
sub
mov
add
ror
sbb
or
lods
cmp
pop
mov
enter
cld
cmp
cmp
and
daa
pop
test
sti
fcom
clc
mov
mov
push
or
dec
sti
or
leave
loope
push
push
xchg
and
ror
push
into
push
out
mov
lods
in
adc
mov
mov
ficom
jne
adc
add
in
or
add
inc
xchg
sub
mov
xchg
shl
cmp
dec
add
cmc
push
xchg
jp
inc
shl
xchg
daa
mov
repz
retw
stos
jecxz
inc
sbb
sub
bound
sub
adc
(bad)
dec
(bad)
out
pop
jecxz
cvtps2pd
xchg
push
inc
push
sub
bound
sub
nop
leave
push
dec
sbb
cmp
aad
jg
imul
inc
xchg
mov
push
ds
mov
pop
fdiv
outs
inc
addr16
in
xchg
xor
pop
rcl
dec
stos
repz
adc
scas
std
fdiv
jno
iret
mov
jecxz
js
mov
scas
push
mov
arpl
push
dec
sub
cmp
pop
mov
jne
xchg
xor
xor
adc
jge
stos
das
or
pop
push
movs
leave
repnz
out
cmp
out
or
xchg
pop
and
or
lods
add
test
and
std
inc
jl
mov
mov
jg
fadd
movs
jb
std
cmpxchg
jmp
sbb
inc
stos
pop
(bad)
cmc
inc
inc
in
lock
mov
pusha
sti
pushf
sbb
in
mov
jp
inc
dec
aas
xchg
mov
ins
ins
dec
shr
xchg
pop
aas
cmp
bound
jne
adc
xor
push
jno
out
repz
inc
addr16
imul
xor
(bad)
or
imul
inc
cs
mov
pop
or
jg
cs
xor
xchg
mov
add
mov
mov
inc
mov
stos
mov
mov
push
sbb
or
shr
mov
mov
loopne
and
stc
fcmovnu
cmp
ins
add
dec
test
addr16
es
das
xor
clc
push
out
jg
push
sbb
or
pushf
mov
pop
daa
lds
leave
int
lods
nop
sbb
and
mov
mov
in
and
aaa
mov
inc
sub
movs
pop
push
lock
int3
leave
sbb
inc
cld
sbb
add
out
test
mov
jg
stc
xchg
xchg
push
aad
pusha
sub
in
aaa
jo
sub
sbb
hlt
inc
or
inc
sub
jb
mov
push
ins
adc
add
push
pop
mov
fidiv
pop
fist
movs
popa
test
sbb
mov
sub
aad
mov
aam
scas
and
push
fs
push
gs
outs
push
dec
cmp
mov
mov
jne
or
ret
int
lods
test
ss
or
test
jmp
xchg
cmc
(bad)
leave
jl
dec
sub
push
movs
pop
sti
fld
arpl
in
pop
adc
xchg
add
ror
mov
(bad)
dec
in
(bad)
imul
and
lock
lahf
and
iret
jno
pop
inc
dec
jmp
dec
sbb
dec
or
lahf
ins
iret
aad
dec
fild
mov
hlt
jmp
into
loope
cdq
fsubr
dec
shr
mov
jae
or
into
scas
in
pusha
enter
fisub
cmp
clc
jae
mov
(bad)
mov
(bad)
out
stc
pop
les
xor
or
mov
retf
or
jmp
pop
sbb
stos
mov
jo
push
push
dec
add
xchg
mov
lods
je
mov
mov
sub
xrelease
js
mov
call
sahf
mov
ss
jb
sbb
ret
mov
daa
add
imul
es
pop
add
sbb
mov
sub
pop
sbb
pop
inc
mov
inc
das
(bad)
and
out
xchg
jl
mov
shl
fst
call
and
fnstsw
mov
mov
dec
(bad)
int
add
(bad)
je
or
and
xor
mov
sbb
fcomp
cli
jg
push
push
jnp
inc
mov
add
pop
dec
jmp
addr16
imul
imul
inc
push
rol
movs
push
jns
mov
(bad)
fdiv
fdiv
daa
sub
dec
dec
or
mov
jp
mov
fsubr
jo
jp
dec
cs
fxch
inc
cmps
dec
sub
cwde
push
push
or
mov
(bad)
icebp
fild
dec
push
pop
jecxz
loope
or
ds
push
int
mov
fnstsw
xchg
mov
outs
movs
cmp
mov
or
mov
pop
div
outs
and
mov
and
pop
leave
fdivr
adc
in
stos
pop
lods
sub
js
mov
jno
mov
push
fs
push
scas
retf
or
add
(bad)
push
arpl
mov
cmp
sbb
jp
mov
inc
pop
cli
scas
out
inc
dec
mov
nop
jo
pop
pop
ficomp
(bad)
setge
adc
xor
jae
add
xchg
push
pusha
int3
xor
ja
lock
sub
pop
lahf
sub
jnp
fimul
or
mov
push
ret
cmps
stos
adc
(bad)
jge
retf
sbb
retf
es
shr
fiadd
cwde
jecxz
imul
aad
xchg
or
pop
daa
repz
cmp
cmpxchg
(bad)
inc
(bad)
rol
sbb
aaa
mov
mov
and
jl
mov
mov
mov
int3
cwde
xchg
outs
and
test
xor
mov
xor
xchg
and
add
and
aaa
mov
es
sub
cli
adc
adc
fwait
push
cmps
sbb
aaa
in
or
jbe
mov
dec
fldcw
sub
pop
sti
adc
jp
lock
and
pop
push
pushf
dec
ins
in
mov
fmul
retf
lock
pop
push
dec
and
popf
pop
cli
mov
mov
leave
hlt
sub
sbb
sbb
(bad)
loope
xchg
adc
(bad)
xchg
movs
cmp
pop
jno
or
mov
mov
in
aam
or
adc
mov
push
repnz
ins
ret
or
xchg
adc
and
and
mov
cmp
jge
test
adc
dec
add
(bad)
arpl
mov
sbb
dec
mov
push
rol
cmp
rcl
mov
push
stc
jecxz
mov
inc
jmp
xchg
ror
cmp
movs
(bad)
or
imul
cmc
in
and
pop
push
rol
adc
rcl
outs
in
add
push
mov
or
mov
cmp
push
cmps
add
mov
in
sbb
sbb
aas
inc
sub
fs
push
mov
adc
adc
fidivr
cmps
sahf
rcr
shl
test
adc
jno
lods
mov
push
xor
add
in
pop
xchg
jl
push
mov
sbb
ret
cdq
xchg
jp
adc
int3
ja
mov
push
mul
dec
jbe
mov
push
int3
sub
test
psubw
(bad)
(bad)
cmps
aad
add
les
es
mov
mov
nop
mov
js
push
jns
or
cwde
sbb
lahf
jl
mov
in
std
push
or
data16
out
cld
xor
sti
mov
(bad)
repnz
xchg
inc
adc
movs
movs
mov
jno
push
pushw
(bad)
mov
outs
mov
fwait
jmp
adc
pop
call
and
aaa
dec
ins
shr
xchg
and
aad
cwde
adc
mov
aam
xchg
and
jno
cli
lock
(bad)
aam
mov
scas
and
scas
cwde
add
aas
fsub
fmul
cmps
ins
push
add
jmp
xor
push
scas
ins
push
out
add
ds
test
lea
ficom
inc
pop
in
and
push
add
out
pop
std
data16
test
pmulhuw
aad
popa
jl
les
daa
cmp
xchg
(bad)
sbb
jl
popf
mov
jp
nop
sar
add
ds
or
mov
pop
fimul
xor
and
cmp
mov
scas
lea
aad
aas
sub
and
test
dec
pop
jp
sbb
popa
imul
xor
inc
in
mov
inc
sub
mov
adc
iret
mov
hlt
mov
aas
jbe
jne
pop
inc
outs
arpl
inc
ror
jo
jmp
jecxz
stos
push
jmp
pusha
movs
popf
sbb
mov
xor
and
mov
mov
int
inc
mov
push
sub
sub
int
xchg
mov
push
es
ins
add
mov
lods
ds
ret
addr16
sub
popa
lock
push
push
ror
jl
ret
mov
mov
rcl
mov
jl
jg
push
and
fisub
pushf
push
retf
lock
xor
es
cmp
sbb
xchg
pop
fld
dec
out
xor
aad
fadd
outs
loope
push
movs
add
push
pusha
xchg
ja
adc
retf
sbb
fisub
mov
sbb
cmp
mov
mov
xor
retf
adc
mov
and
xlat
movs
dec
in
and
je
pop
mov
sti
je
retf
jne
iret
xchg
loop
pop
sub
jb
pop
arpl
lds
call
sub
lock
out
enter
call
arpl
push
aaa
jge
add
add
call
xor
pop
std
es
xchg
cmp
in
inc
pop
mov
lock
cwde
rol
adc
mov
mov
in
pushf
lds
rol
mov
xchg
push
repz
push
push
pop
outs
aas
jg
or
lds
mov
gs
inc
add
sub
mov
mov
neg
add
and
in
sbb
cmp
pop
dec
fwait
push
mov
shl
mov
retf
stc
push
push
cmc
jmp
imul
pop
lea
dec
inc
ror
xchg
int3
sbb
fld
xchg
rcr
(bad)
mov
jno
scas
jae
popf
rcr
movs
in
aaa
jbe
ret
xlat
add
cmp
bound
mov
mov
xchg
inc
out
fadd
fcmovnbe
sti
(bad)
adc
pop
mov
sbb
jnp
mov
int3
test
and
add
add
int
xchg
pop
jmp
lods
xor
sub
adc
inc
repnz
jae
xchg
dec
ret
rol
jbe
mov
or
xor
outs
mov
push
dec
nop
daa
cmp
jnp
pop
test
mov
dec
jno
inc
xchg
push
xchg
push
pop
dec
test
loopne
ficomp
jg
jae
jns
adc
add
fiadd
jnp
aaa
dec
mov
rcl
dec
cmps
cmps
jb
cmps
call
push
dec
test
ficom
sbb
or
fwait
jmp
lock
aad
scas
push
jo
jge
aas
loope
dec
lods
retf
mov
test
or
mov
iret
in
dec
and
rcr
cwde
fild
xlat
or
mov
movs
repnz
daa
inc
(bad)
push
js
cmp
out
hlt
scas
fdiv
push
loope
std
push
call
sub
adc
and
out
in
cld
out
into
sbb
hlt
cmp
pop
call
in
dec
adc
(bad)
mov
mov
sub
jg
xchg
add
int
push
xchg
jmp
dec
push
push
push
push
sbb
xchg
pop
xchg
xchg
sub
leave
mov
and
repz
outs
cmp
loop
mov
push
jno
push
cmc
mov
mov
test
push
mov
movs
cmp
push
xchg
jno
xor
and
dec
fcmovb
push
in
(bad)
out
adc
jb
dec
sbb
cmps
in
neg
stos
push
cmc
addr16
enter
push
gs
mov
addr16
loope
xor
ret
or
mov
std
out
lods
xor
mov
jmp
xchg
adc
push
(bad)
clc
ins
sbb
pop
adc
in
xchg
ss
and
loopne
xlat
mov
push
jg
sbb
(bad)
adc
xchg
cmp
add
sub
in
jns
stos
dec
nop
enter
cdq
lods
push
fnstsw
movs
dec
pop
push
push
xor
or
repnz
push
ror
push
es
sub
retf
dec
cmp
jno
test
cmp
cdq
lods
dec
fld
cmp
out
jmp
cli
stos
shl
mov
push
es
xchg
and
dec
lods
cmp
inc
pop
(bad)
shl
and
iret
enter
sar
jo
test
sub
mov
lds
push
sahf
sbb
shl
xor
sbb
sub
and
aas
cmp
test
xchg
cwde
pop
mov
add
add
inc
dec
inc
sbb
or
mov
enter
push
mov
fstp
jmp
test
lods
mov
ret
jno
ja
xor
push
cmps
mov
imul
lahf
repnz
pop
je
jnp
mov
push
repnz
mov
mov
frstor
mov
push
jno
pop
(bad)
sbb
imul
jecxz
xchg
loop
dec
out
sub
adc
ds
sub
xor
hlt
lods
pop
push
aam
push
jmp
pop
bound
ret
mov
rcr
std
or
mov
and
sub
ror
jle
add
fidivr
ja
movs
mov
jnp
outs
mov
mov
add
jo
dec
call
pop
cmp
jns
mov
mov
mov
pop
mov
sar
pusha
or
add
xor
mov
imul
(bad)
xor
sbb
inc
lock
arpl
jo
mov
mov
sbb
mul
xchg
inc
sar
jo
or
scas
lods
push
cmp
add
test
dec
xchg
or
sbb
mov
push
inc
sti
ss
mov
inc
xchg
repz
hlt
(bad)
dec
std
int
cmp
add
mov
and
and
mov
xlat
xchg
pop
push
cmp
xor
cdq
lahf
stos
inc
mov
div
popa
inc
rol
dec
mov
movs
xchg
mov
inc
pop
mov
js
aad
xor
add
hlt
mov
daa
mov
push
xchg
jne
cwde
inc
ds
and
aam
jb
(bad)
sar
test
fisub
inc
add
pop
mov
sbb
xlat
sub
xor
xchg
sbb
sub
adc
add
pop
push
push
push
retf
stos
mov
call
add
out
(bad)
and
pop
pop
jecxz
(bad)
or
and
mov
push
jnp
push
out
adc
pop
(bad)
mov
add
sub
mov
imul
call
and
mov
retf
ficom
push
sbb
pushf
fcom
sbb
ins
(bad)
rcl
lea
ret
mov
test
fadd
adc
and
lods
mov
push
sub
paddusw
sbb
mov
aas
daa
repz
call
in
pop
push
sbb
popf
xor
mov
xor
int
(bad)
fdivr
mov
bound
dec
inc
or
(bad)
cmp
stos
leave
xchg
push
push
add
mov
pop
cmps
add
outs
loopne
mov
pop
jecxz
push
mov
sahf
mov
arpl
and
sbb
(bad)
cmp
mov
push
xor
fwait
out
inc
add
jne
xchg
xor
sub
retf
shl
mov
ret
js
in
cmp
dec
xchg
or
sub
push
inc
xchg
int3
xor
mov
nop
inc
mov
pop
scas
cdq
jmp
mov
in
xor
add
xchg
sub
retf
cwde
jle
ja
mov
sti
add
mov
ror
push
imul
add
nop
fidiv
movs
std
push
mov
ds
dec
aad
(bad)
jb
push
push
mov
mov
mov
shl
xchg
sbb
and
mov
xchg
arpl
sub
ret
xor
adc
in
outs
retf
jge
or
in
pop
shl
xor
lahf
xchg
mov
mov
outs
sub
into
push
push
dec
rcr
sub
push
or
xchg
push
mov
dec
mov
cmp
inc
push
das
(bad)
shr
jp
cmps
idiv
and
nop
daa
and
mov
mov
mov
retf
adc
fsub
xchg
jbe
mov
loope
adc
sti
(bad)
(bad)
pusha
retf
ss
out
popa
xlat
or
pop
imul
mov
lea
mov
scas
das
inc
loop
adc
cs
xchg
ret
pop
add
fadd
(bad)
das
aas
mov
outs
jbe
pop
xchg
pushf
cdq
xchg
loop
movaps
daa
clc
bound
dec
stos
rcr
inc
mov
mov
xor
fwait
and
test
movs
pop
sbb
jp
sbb
sbb
jae
mov
inc
nop
add
mov
ins
lods
retf
rol
mov
jne
scas
xchg
aam
xchg
push
cmc
xor
mov
mov
jae
add
push
mov
out
je
add
push
inc
xor
std
es
sbb
mov
jno
add
sbb
imul
retf
ror
pop
push
xor
int
pop
shl
mov
retf
addr16
iret
jg
mov
push
cmps
loop
add
mov
cli
jle
sar
gs
mov
sub
stc
adc
lods
lahf
dec
(bad)
aas
loop
cld
aas
out
mov
push
pop
mov
clc
clc
cmc
popa
retf
outs
add
js
into
sub
scas
cwde
pop
xchg
out
lods
call
frstor
imul
pop
ins
jnp
pop
popf
cmps
mov
out
fdiv
jns
mov
jns
in
push
repz
push
aad
xor
mov
das
jmp
inc
imul
outs
xchg
(bad)
sub
in
ror
dec
jl
jle
sahf
call
add
lods
pushf
jno
mov
ror
add
or
neg
jg
inc
test
(bad)
cmps
pop
add
pop
(bad)
fs
mov
xchg
sub
sbb
int3
cmc
xchg
out
add
cmp
mov
dec
lods
push
lods
test
sbb
mov
repnz
xor
inc
cwde
cmp
jns
loope
jg
xchg
adc
xchg
inc
lods
cs
xlat
adc
add
and
aad
xor
jmp
dec
outs
nop
xor
or
adc
push
jecxz
sub
sbb
(bad)
pushw
inc
xchg
push
dec
push
push
addr16
push
sub
or
xor
push
or
jbe
mov
popa
call
mov
iret
das
fisttp
mov
sar
je
xchg
test
mov
dec
loop
ret
fild
dec
aas
cmp
jmp
push
icebp
inc
in
xchg
dec
rol
loopne
cld
jle
jo
mov
aas
mov
xchg
pop
push
fsub
dec
add
out
fwait
inc
ins
hlt
mov
aaa
or
or
pop
pop
imul
add
cmp
scas
ss
bound
adc
pop
lods
jmp
(bad)
lods
cmp
ss
cmp
test
sbb
dec
retf
sbb
jbe
xlat
or
xchg
in
int3
cmp
mov
adc
cmps
jno
iret
sub
push
mov
add
pop
mov
jb
mov
adc
ror
icebp
gs
sbb
imul
popa
mov
stc
mov
lods
sub
push
(bad)
cwde
clc
mov
arpl
mov
fcomp
pop
(bad)
xchg
(bad)
and
push
cmp
inc
mov
nop
shr
dec
or
sti
push
fmul
and
shl
je
adc
popf
xor
push
popf
adc
in
out
xlat
dec
pop
stos
cmp
xchg
jle
mov
and
xor
ds
dec
fsub
or
cdq
fdiv
lds
xchg
inc
or
dec
sub
push
mov
int3
stos
fistp
test
xor
shl
pop
sub
mov
jmp
or
scas
xchg
ss
test
enter
shr
push
pop
ret
mov
stc
or
cwde
ss
push
pop
xchg
les
sub
(bad)
jecxz
in
cmps
loop
ror
add
jbe
jno
cmp
int3
sbb
push
mov
mov
sahf
test
mov
int
iret
and
jecxz
pusha
mov
xchg
inc
mov
mov
jno
xlat
or
in
int
sub
adc
push
dec
ret
sub
add
(bad)
ins
sbb
dec
jl
loop
lods
mov
jno
(bad)
sbb
sti
fmul
jbe
ja
icebp
sbb
icebp
popa
das
clc
push
ss
test
dec
adc
sub
fcmovnbe
sub
lock
jmp
sbb
in
cdq
jo
jo
sbb
test
mov
fst
mov
jbe
add
jl
adc
mov
or
arpl
popf
lock
scas
pop
movs
add
cmc
mov
sub
jo
dec
or
fadd
cli
cmp
xchg
shl
mov
(bad)
push
cmp
daa
adc
pop
cmp
mov
sub
push
out
push
adc
fdivr
jl
mov
inc
pop
push
jmp
push
ds
out
mov
xor
mov
xor
push
push
or
and
dec
in
mov
std
(bad)
sbb
jbe
pop
inc
jle
cwde
and
or
ret
mov
in
mov
shr
xor
jnp
fisttp
adc
cli
dec
dec
cmps
push
jle
or
pop
shr
xchg
jns
and
mov
sub
sbb
push
fcmovnbe
movs
cmps
ja
add
pop
mov
pushf
adc
mov
fwait
xchg
aaa
test
fldenv
in
fisttp
(bad)
scas
xor
loopne
inc
xchg
mov
or
imul
xor
jecxz
push
cmp
inc
or
scas
rol
xchg
daa
in
mov
jp
icebp
stos
inc
adc
cmp
jae
mov
(bad)
sub
mov
fcomp
inc
push
mov
jns
cli
pusha
and
dec
mov
pop
jg
sub
push
or
repz
je
aad
mov
push
les
in
push
mov
and
cmps
jmp
jne
stos
mov
pop
retf
mov
mov
adc
aam
cmps
adc
cmc
clc
sub
adc
inc
pusha
dec
xor
ss
cmc
and
jmp
sar
fwait
lock
inc
out
imul
sbb
mov
inc
xchg
xchg
loope
cmp
dec
imul
inc
popa
shl
pop
cdq
cmp
sti
scas
pop
mov
mov
call
cmps
mov
sahf
aas
sub
or
xchg
ins
jnp
mov
xor
out
data16
and
cmp
mov
(bad)
cmp
cs
xchg
adc
mov
bound
pop
shr
arpl
sbb
push
dec
dec
scas
mov
ins
in
pop
call
xor
dec
mov
push
adc
adc
cli
pop
rcr
test
cmp
push
loopne
and
imul
inc
xchg
xchg
out
shl
jecxz
adc
jmp
sti
out
pop
in
push
(bad)
mov
ins
inc
jmp
fist
mov
jmp
jae
retf
xor
jbe
mov
mov
or
push
jns
test
mov
out
das
add
xchg
inc
fdivr
(bad)
in
ins
stc
push
imul
adc
popf
mov
push
push
frstor
sar
test
and
pop
loopne
jecxz
pop
inc
shl
out
mov
stos
rol
ficom
push
mov
sete
or
adc
push
inc
rol
mov
sub
jmp
sbb
sub
adc
xor
adc
jmp
lahf
int3
data16
jp
cmc
adc
mov
test
(bad)
add
(bad)
test
pop
repz
outs
cmp
call
out
pop
das
jl
xchg
jmp
aaa
ret
sub
mov
imul
retf
pop
or
mov
add
leave
mov
mov
mov
push
ret
cdq
scas
imul
retf
add
jle
jecxz
xor
outs
jae
push
mov
adc
ins
xor
and
push
ror
je
push
or
dec
leave
xchg
add
outs
xchg
out
inc
(bad)
(bad)
mov
fmul
cmps
cdq
mov
dec
cld
sub
xchg
enter
dec
and
(bad)
inc
add
mov
push
mov
movs
jns
sbb
sub
and
rol
inc
outs
int3
sbb
data16
out
(bad)
sbb
sti
leave
mov
sbb
ja
cmpxchg
mov
xchg
mov
jno
fs
and
mov
push
dec
push
arpl
xchg
or
and
sub
out
sbb
inc
out
outs
xlat
retf
cmp
pop
dec
sbb
sbb
int3
jmp
les
mov
xor
inc
fsub
test
push
xchg
or
jl
inc
(bad)
cmp
cmps
in
inc
cdq
sub
ins
data16
cdq
xchg
inc
inc
shl
adc
jg
jne
jbe
or
out
mov
ds
push
cmp
inc
enter
in
jge
outs
cmc
xchg
std
add
data16
and
jno
fild
cmp
lahf
dec
push
outs
jns
push
pop
(bad)
push
lods
and
mov
cwde
inc
add
jmp
mov
repnz
clc
mov
ins
(bad)
out
pop
xchg
loop
jg
inc
daa
icebp
popa
xchg
ror
loope
mov
add
jmp
test
js
movs
fidiv
cdq
push
xor
mov
inc
cmp
hlt
aaa
inc
push
mov
outs
jne
add
retf
cmc
lds
in
pop
aas
arpl
scas
push
inc
aaa
push
movs
push
call
(bad)
adc
xor
inc
inc
test
dec
xor
fist
pop
and
mov
xchg
cld
cmp
mov
adc
(bad)
out
sbb
jb
jae
mov
(bad)
gs
sbb
inc
pop
mov
push
nop
cmp
in
fcomp
mov
out
lds
inc
(bad)
push
ins
mov
stc
cld
repnz
xchg
sub
add
out
imul
mov
cdq
sub
ret
dec
jl
xor
cdq
stos
jle
stc
data16
test
(bad)
mov
stos
and
pop
add
dec
(bad)
cmps
pop
enter
dec
pop
lea
sub
fldenv
clc
xchg
aad
pop
mov
pop
pop
push
pop
pop
cmc
(bad)
adc
sub
fisubr
mov
or
cwde
(bad)
clc
cli
(bad)
cli
data16
jmp
popa
dec
dec
sub
loopne
push
(bad)
iret
push
and
add
fist
ret
inc
cmps
push
pop
inc
ss
mov
sbb
ss
loope
xchg
pop
mov
jne
inc
xor
pop
je
not
cwde
jae
jnp
push
mov
xor
xor
dec
mov
das
pop
mov
inc
fs
xor
int3
dec
cwde
test
dec
out
push
sahf
add
adc
imul
fiadd
ins
jno
or
pusha
mov
(bad)
cli
inc
fcmovu
mov
movs
sbb
je
inc
mov
inc
push
cmps
mov
push
cmp
inc
imul
mov
in
sbb
js
data16
jno
jb
cmp
aaa
in
mov
cmp
mov
pop
ror
pop
(bad)
ja
mov
lahf
push
bound
ins
stos
sahf
cmps
pop
mov
es
repnz
lahf
jne
mov
mov
dec
imul
popf
pop
ror
push
add
mov
shl
arpl
shl
shl
xor
and
xchg
sbb
(bad)
jnp
lods
sbb
dec
mov
stc
mov
fist
mov
fwait
or
(bad)
mov
mov
les
loopne
push
nop
rol
mov
ret
imul
mov
mov
jno
mov
les
ret
and
test
sub
xchg
mov
test
test
sub
imul
ja
jmp
dec
add
ficom
xchg
test
and
adc
daa
dec
stc
jnp
repz
int
aad
pop
cmp
cmp
(bad)
gs
cmp
xchg
xchg
stc
dec
xor
into
gs
and
fisubr
cli
shr
sbb
cmp
pop
pop
fadd
(bad)
nop
jmp
inc
(bad)
mov
push
mov
es
add
retf
sbb
push
into
push
add
jmp
mov
push
sub
mov
jle
pop
bound
pop
cld
fcomp
sbb
int3
sub
or
in
icebp
add
push
mul
mov
jmp
inc
int3
shl
dec
enter
xchg
sub
push
icebp
stos
dec
neg
shr
mov
add
or
sbb
sbb
mov
je
mov
adc
je
in
imul
aad
pusha
dec
dec
out
and
xchg
mov
loopne
call
jnp
gs
push
ss
sbb
push
push
shl
cld
into
fadd
mov
fimul
or
iret
adc
xchg
int
xchg
pop
(bad)
sbb
popf
xor
in
out
loop
jge
pushf
fstp
jp
push
pop
dec
mov
jne
rcl
mov
push
fwait
add
pop
jg
pop
ja
popf
sub
inc
sub
(bad)
adc
loop
cli
pusha
mov
sub
dec
ss
pop
not
lods
fidiv
adc
(bad)
dec
jle
or
adc
inc
out
pop
push
mov
mov
leave
js
test
icebp
jmp
sub
add
add
xchg
or
mov
(bad)
fs
lock
stos
dec
je
pop
cmc
not
into
xlat
adc
inc
dec
jne
mov
aam
fisubr
(bad)
mov
mov
jb
dec
jno
dec
mov
repz
xor
inc
push
and
xchg
gs
or
fstp
pop
cmp
retf
mov
fwait
cs
ds
cmp
shl
popf
retf
mov
sbb
inc
push
stos
stc
sub
push
push
cld
ja
in
mov
push
cmp
lea
fmul
pop
fnstenv
(bad)
pop
cdq
pop
rol
jns
mov
cmc
pop
ret
cmp
push
fbld
daa
pusha
jno
adc
sub
or
xor
(bad)
leave
ret
dec
xor
inc
xor
and
sub
sahf
adc
mov
xchg
mov
cmp
bound
dec
inc
pop
sub
shr
inc
cmp
test
data16
movs
arpl
cmc
test
cld
jge
jp
pop
xchg
bnd
xchg
(bad)
add
lods
std
mov
mov
aas
xchg
add
aam
les
push
outs
sbb
stc
push
retf
mov
xchg
push
std
and
das
mov
xor
int3
mov
xor
inc
mov
ret
and
jl
jns
shl
cmc
into
mov
sub
repz
xor
shr
xor
push
ror
add
pop
arpl
ins
jmp
aad
lea
or
xor
daa
cmps
add
popa
dec
(bad)
loope
xchg
(bad)
movs
outs
fsub
pop
(bad)
iret
fprem
int
and
add
or
retf
and
fimul
sub
push
inc
cmps
arpl
stos
jb
sub
push
fcomp
cmc
in
(bad)
shr
cmp
ja
not
add
repnz
mov
mov
js
fwait
pop
xor
jmp
pop
or
or
jo
icebp
add
sbb
repz
push
cmp
mov
out
cmp
(bad)
push
mov
ret
xchg
jmp
sbb
dec
mov
or
mov
jno
enter
nop
sub
retf
sub
cmp
xchg
je
xchg
dec
mov
mov
adc
and
(bad)
xchg
and
jae
fimul
cmp
xor
repz
movs
pop
jo
les
lods
aas
and
push
mov
cld
mov
loope
mov
ret
inc
cmp
enter
not
lahf
mov
or
sub
mov
xor
ret
jp
adc
sbb
in
test
adc
mov
clc
enter
dec
call
inc
sub
and
aaa
gs
leave
adc
add
std
jmp
jbe
adc
dec
jp
inc
cmp
scas
adc
cmp
jae
rcl
pop
test
mov
xchg
xchg
jmp
retf
mov
or
enter
mov
add
cmp
fst
or
cwde
push
cmp
adc
add
add
xchg
cmp
xor
push
jne
aam
(bad)
jl
jno
mov
and
sbb
mov
leave
inc
ror
fist
xor
enter
mov
stc
pop
out
add
adc
xor
je
lahf
mov
xor
dec
xor
xlat
or
mov
sub
scas
leave
push
jmp
inc
js
(bad)
in
xchg
pop
and
aam
clc
retf
xor
sbb
push
cli
test
in
sub
test
(bad)
aaa
cs
mov
and
loope
fdivp
fstp
dec
push
cmps
pusha
inc
cmps
out
xlat
out
mov
pop
sub
cmp
mov
cmp
fdivr
mov
rcr
push
and
or
popf
cs
cdq
out
mov
pop
mov
popa
in
jno
in
sbb
clc
les
jo
add
loopne
or
inc
sti
aam
push
out
and
call
rcl
repz
addr16
sub
out
or
loop
xor
jne
loopne
mov
inc
fimul
call
cmp
inc
adc
movs
pop
adc
xchg
fs
or
mul
mov
push
imul
outs
jns
ss
pop
add
jbe
ja
call
mov
inc
retf
cmp
jmp
inc
in
lods
pop
add
shl
inc
and
pop
push
dec
add
xor
mov
sbb
jno
bts
jne
and
xchg
pop
aam
jp
mov
jmp
(bad)
cld
inc
inc
jmp
dec
mov
dec
mov
mov
fmul
cmps
cmps
dec
ja
mov
fwait
shl
add
adc
sbb
mov
bt
sbb
add
sbb
loopne
xchg
data16
add
hlt
cmp
fst
int
loope
dec
pop
mov
out
call
fldcw
xor
clc
js
cli
mov
xchg
sub
mov
pop
jecxz
leave
cmps
lods
aam
pop
out
and
mov
xor
cmps
inc
ja
in
xchg
jae
mov
ss
push
sbb
test
bound
loope
push
mov
call
enter
(bad)
xchg
mov
icebp
pop
daa
aas
fwait
add
out
cwde
mov
jo
xchg
dec
xor
jecxz
sti
leave
(bad)
cdq
rol
retf
test
push
aaa
adc
jo
lahf
jge
pop
jmp
jmp
inc
out
jecxz
or
outs
xchg
adc
pop
mov
push
add
jo
dec
outs
add
push
test
pop
out
cmp
nop
cli
push
test
bnd
or
inc
out
sub
call
add
(bad)
in
push
xor
mov
add
xchg
aam
dec
stos
push
lea
add
mov
sbb
inc
dec
push
out
inc
and
jmp
test
adc
lahf
mov
dec
mov
mov
loop
aam
stc
mov
mov
add
out
imul
xchg
and
retf
aas
inc
push
je
or
jns
dec
ret
sub
rol
push
inc
mov
xchg
and
shl
(bad)
cli
jo
ss
cwde
cmps
sub
add
or
lods
and
add
adc
xor
xor
hlt
aam
xchg
retf
(bad)
sub
jno
inc
retf
xchg
pop
pop
imul
mov
les
adc
call
lahf
dec
ret
ret
(bad)
loopne
fs
mov
pop
add
mov
test
sbb
xlat
xchg
pop
imul
xor
mov
sbb
sbb
adc
push
jb
jg
xor
nop
jo
jnp
retf
shl
fsubr
or
and
inc
cmp
lds
jns
pop
imul
adc
loope
dec
mov
addr16
inc
stc
cmps
push
push
jb
mov
movs
stos
jl
sub
ja
pop
arpl
popa
add
sbb
in
jmp
xchg
cmp
cmps
cmp
xchg
dec
push
out
mov
jge
jb
fisttp
int3
xlat
mov
inc
mov
mov
adc
jmp
pop
xor
popf
mov
mov
xchg
cmps
jae
cmp
call
fistp
shr
mov
fcmovbe
jecxz
lods
cld
inc
les
in
(bad)
icebp
and
pop
mov
add
cmc
sahf
mov
xor
mov
sub
mov
lds
cmp
repnz
or
outs
outs
out
sbb
inc
int3
fbld
hlt
out
dec
xchg
ror
out
fmul
xor
aad
sahf
inc
loopne
(bad)
hlt
cli
jge
lds
lds
pop
and
cmp
xchg
repnz
scas
ret
pop
or
xor
mov
(bad)
out
loop
ret
dec
cmps
inc
imul
add
ror
push
push
enter
adc
loope
neg
std
jae
cmps
ror
xor
inc
inc
push
jnp
jno
sbb
retf
fwait
push
mov
fsubr
adc
mov
icebp
test
js
arpl
push
ins
clc
mov
jmp
(bad)
loopne
xchg
shl
sbb
sub
dec
cs
push
adc
adc
ja
adc
pushf
push
xchg
mov
adc
add
test
add
cmp
jno
sbb
lds
test
push
inc
(bad)
inc
push
pop
cmc
fstp
ins
mov
into
imul
push
xchg
lds
jg
les
push
bound
outs
cmp
sbb
inc
neg
repnz
popf
mov
into
inc
(bad)
es
cmp
sub
sub
adc
sar
jmp
adc
sbb
inc
sbb
jbe
les
cli
push
lods
sub
jmp
gs
pop
push
or
fsubrp
daa
leave
jg
jne
cmp
xchg
in
xchg
addr16
pop
test
das
scas
scas
cwde
in
inc
cmp
and
in
mov
shr
pop
cli
call
mov
jb
mov
fild
and
xor
call
add
xchg
or
lods
adc
je
push
push
xlat
mov
push
cmps
push
(bad)
pushf
loop
ds
pop
test
lds
jbe
jmp
(bad)
(bad)
adc
das
clc
mov
cmps
test
adc
cld
ins
pop
xor
retf
mov
and
mov
cmps
pop
dec
dec
imul
stos
fwait
test
addr16
hlt
pop
pop
or
inc
sbb
mov
cli
and
sbb
ss
jns
addr16
mov
pop
movs
cli
or
lea
mov
imul
ds
es
retf
and
inc
pop
mov
push
xlat
stos
mov
or
sbb
inc
or
fwait
mov
aad
xchg
sbb
cdq
aam
cmp
fadd
sub
je
dec
jae
xlat
hlt
jnp
push
stos
fwait
sub
jl
imul
test
in
sub
loop
jne
jo
sbb
fsub
sti
pop
das
xchg
and
jbe
stos
es
adc
pop
jne
xor
fstp
iret
mov
jnp
mov
push
xor
mov
mov
mov
outs
js
xchg
mov
out
jmp
mov
scas
ins
out
jae
lea
jb
xor
inc
repz
out
(bad)
sub
mov
pusha
inc
jns
in
arpl
mov
xor
xor
mov
(bad)
xlat
lods
inc
pop
arpl
and
ror
hlt
(bad)
cmps
lds
xchg
outs
xor
test
inc
into
dec
pop
jle
mov
inc
call
movs
or
arpl
enter
pop
repz
movs
fld
add
mov
loope
ficomp
and
mov
cmp
dec
rol
fild
pop
stos
push
popf
ss
xchg
rol
inc
fadd
stc
ret
pop
imul
call
jecxz
int
xchg
add
sub
mov
xlat
loope
in
loope
push
xor
test
cmp
cmp
add
adc
nop
cs
xchg
(bad)
push
adc
dec
mov
cs
shl
or
shr
inc
lock
jbe
or
leave
fadd
(bad)
dec
cmp
mov
(bad)
mov
and
cmp
cmp
xchg
int3
push
mov
(bad)
push
adc
pop
push
(bad)
in
nop
pop
pop
mov
pusha
dec
jp
(bad)
mov
jecxz
stc
je
adc
or
int
lds
pop
mov
xor
hlt
bound
xchg
std
sub
mov
jae
mov
xchg
add
push
push
in
add
sub
xchg
popf
je
leave
and
idiv
mov
xchg
jg
add
pushf
cld
dec
push
xchg
jb
push
cmp
mov
sahf
add
(bad)
iret
js
pop
ror
into
cmp
stc
not
(bad)
mov
bound
sbb
push
mov
imul
push
ins
push
dec
enter
mov
retf
pop
xor
mov
sbb
ins
iret
pop
push
ret
xchg
sub
sahf
test
scas
push
push
into
ins
adc
adc
mov
dec
mov
shl
mov
std
pop
pop
add
popa
call
icebp
mov
add
cs
adc
mov
mov
aaa
hlt
je
cli
out
dec
(bad)
fld
mov
sub
jl
jmp
jae
cld
shl
and
outs
sub
lds
je
mov
and
add
sbb
out
pop
hlt
jb
mov
(bad)
in
or
inc
push
in
ins
aaa
cmp
enter
sbb
call
xchg
leave
les
push
fild
imul
dec
clc
in
(bad)
(bad)
das
push
jo
(bad)
push
fs
jne
xchg
icebp
mov
sbb
stos
test
mov
sbb
inc
jbe
mov
sar
mov
sub
mov
sbb
mov
xchg
cmp
scas
test
adc
cmp
lock
pop
sub
add
cmp
or
mov
cmp
fs
out
ss
aaa
push
xor
test
ficom
add
xchg
ins
inc
pop
out
pop
push
outs
dec
(bad)
outs
xchg
add
cwde
push
jmp
retf
ss
movs
repz
xchg
test
cmps
mov
sbb
mov
sahf
and
into
xchg
(bad)
sbb
int
sbb
cdq
test
aaa
into
pushf
(bad)
mov
add
out
in
(bad)
jmp
mov
push
xchg
ja
or
jo
dec
push
jge
cwde
xor
mov
add
pop
sbb
sub
push
pop
rol
(bad)
popa
xor
aaa
xchg
add
pusha
inc
sub
rcr
(bad)
pop
cmps
scas
addr16
mov
cwde
mov
push
mov
sub
xchg
mov
dec
adc
push
iret
test
clc
dec
xchg
fwait
or
dec
aam
pop
xchg
fidiv
sar
and
int3
iret
repz
jmp
test
mov
sti
es
mov
dec
into
jg
aas
jne
and
push
pop
call
and
(bad)
frstor
jo
push
aad
add
push
dec
jp
mov
mov
jmp
pop
stc
jp
mov
sub
test
push
lahf
pusha
movs
add
out
movs
jecxz
loopne
dec
outs
fild
adc
stos
jl
fcom
inc
dec
lods
xchg
xor
xor
or
jmp
xchg
out
out
and
jns
mov
dec
rcl
or
push
mov
fidiv
cli
lock
stos
or
push
and
add
(bad)
mov
scas
sub
cmps
inc
mov
cmc
std
fild
inc
mov
inc
jge
scas
jno
fist
(bad)
(bad)
scas
and
cmps
push
cmp
sbb
push
(bad)
mov
pop
frstor
shl
ins
jp
mov
or
ss
clc
push
or
xlat
cld
js
or
xchg
push
xor
sbb
arpl
push
mov
outs
fidivr
lahf
jns
cli
sahf
adc
lods
mov
cmps
test
mov
dec
int
adc
jecxz
or
mov
mov
push
lods
aam
mov
outs
push
sahf
or
(bad)
push
mov
dec
jecxz
sbb
inc
push
sub
and
mov
es
jo
inc
xor
cmps
retf
xchg
out
loopne
repz
cmp
inc
lahf
or
fild
aam
jl
sub
mov
mov
and
shr
xor
mov
jmp
dec
jecxz
mov
int3
adc
push
push
push
(bad)
mov
rcr
(bad)
dec
daa
xchg
add
cmc
or
mov
test
dec
adc
mov
out
js
dec
pop
call
and
mov
mov
out
stos
adc
adc
sbb
push
cdq
ror
jp
jp
dec
dec
cmp
jns
xlat
mov
cmp
xchg
(bad)
cs
add
iret
or
sahf
adc
outs
scas
jge
popa
rcr
mov
pusha
in
sahf
fsubr
loope
mov
cmp
and
(bad)
in
rcr
xchg
jo
jg
int
movs
rcr
popa
loope
dec
repnz
pop
mov
mov
shr
stos
mov
(bad)
icebp
push
jnp
(bad)
mov
xor
push
xor
imul
lea
and
pop
(bad)
loopne
jecxz
jg
cmp
mov
push
imul
sahf
loope
mov
mov
add
sbb
push
leave
lods
int3
scas
imul
pop
out
and
cwde
ret
or
push
xlat
xchg
fsubr
ja
ds
push
out
(bad)
movs
ja
(bad)
cmps
ficom
cwde
cmp
push
inc
cmp
sub
loope
sbb
mov
xchg
fs
daa
rcr
cmp
je
test
movs
pushf
and
sbb
or
imul
ds
ins
xor
adc
pop
movs
ret
or
(bad)
ret
enter
sub
pop
dec
retf
sti
fmul
shl
int
adc
jb
int
outs
ja
mov
(bad)
pop
stos
jae
cmp
hlt
daa
or
pushf
and
daa
(bad)
fdivr
jo
test
push
xchg
hlt
cmps
mov
mov
xchg
dec
ins
fs
pop
(bad)
jmp
xchg
mov
lods
push
je
sub
mov
shr
mov
sbb
push
inc
ja
push
out
push
or
pop
stc
dec
pusha
arpl
jns
inc
dec
gs
mov
mov
xchg
adc
inc
xor
cmps
inc
and
imul
push
(bad)
(bad)
fwait
sbb
ins
pop
(bad)
loope
add
sahf
and
add
mov
dec
and
dec
test
push
sub
mov
xchg
mov
jge
lods
adc
sbb
(bad)
sbb
add
loopne
pop
push
adc
leave
clc
dec
dec
call
or
in
in
mov
xor
retf
sahf
loopne
inc
rol
and
add
sub
dec
push
mov
int
xlat
call
dec
sbb
jmp
outs
imul
cdq
inc
pop
(bad)
clc
retf
ss
ror
mov
retf
add
and
movs
pop
cdq
jmp
loop
fist
into
add
sub
fwait
rol
mov
dec
cdq
call
sbb
mov
inc
(bad)
sub
dec
inc
jns
cmp
jb
inc
arpl
lea
sub
xlat
xchg
push
stc
xchg
sbb
or
sub
add
imul
push
or
test
jne
rol
(bad)
dec
in
jmp
outs
inc
dec
cdq
fprem
adc
mov
fimul
adc
test
cwde
hlt
sbb
adc
push
add
in
cmc
and
ins
jmp
mov
dec
jne
mov
pop
pop
ins
mov
(bad)
cmps
rcr
mov
ins
or
xor
into
dec
sub
mov
retf
and
cmp
adc
enter
ja
push
int
and
fs
and
and
aaa
push
mov
add
sti
daa
and
das
scas
add
xor
xor
fwait
sub
inc
addr16
cmp
add
mov
fidiv
jns
fst
pop
neg
sti
mov
mov
inc
adc
mov
push
jmp
jmp
pop
mov
aaa
jle
inc
aam
xchg
repz
mov
xchg
ss
mov
test
push
dec
or
lahf
mov
(bad)
shl
sbb
ret
aad
pusha
in
mov
ins
or
into
and
es
mov
jbe
test
adc
jge
xchg
or
sbb
add
cli
pop
ffreep
sub
in
xor
daa
mov
add
push
out
sub
mov
cmp
js
xchg
mov
fld
add
js
fild
rcl
mov
add
jle
jne
in
in
pop
add
xor
dec
mov
cmps
enter
xchg
call
ins
sub
aad
push
stc
pop
sub
sbb
stos
mov
(bad)
test
shr
dec
lahf
scas
jmp
sbb
and
lahf
mov
icebp
pop
push
clc
xor
mov
or
xchg
(bad)
div
inc
cmp
cmp
stc
cmp
add
sub
(bad)
add
bound
test
mov
mov
sub
push
hlt
(bad)
sbb
scas
push
cmp
mov
out
loopne
sub
mov
add
test
push
loop
xchg
xchg
fistp
in
pop
in
in
(bad)
fwait
mov
out
cwde
sub
(bad)
test
aad
movs
xchg
test
mov
cmp
sub
jmp
rcr
stos
adc
fwait
dec
mov
pop
in
mov
mov
sbb
jmp
push
out
adc
adc
lea
add
sub
mov
popa
and
push
out
or
sbb
adc
(bad)
clc
xor
mov
hlt
adc
test
lea
xor
dec
pop
dec
mov
cmp
fwait
jns
or
pop
or
mov
jmp
neg
pop
add
loop
(bad)
cmp
add
sti
add
stc
pop
jnp
es
xchg
repz
mov
lods
call
pop
mov
cmps
push
push
shl
call
xor
inc
xchg
pop
sbb
or
inc
push
dec
sbb
sub
jecxz
jbe
(bad)
ins
add
dec
lods
and
xchg
or
mov
or
call
mov
ret
jmp
cmp
dec
jmp
inc
hlt
xor
jl
(bad)
test
xchg
sub
and
xor
loop
sub
nop
pop
(bad)
mov
jno
adc
jmp
lock
cmp
pop
aas
bsr
jp
push
popf
inc
sbb
dec
lahf
ret
imul
sub
push
or
lock
das
inc
idiv
popa
arpl
mov
and
cmp
xlat
pusha
call
sbb
rol
jo
cld
mov
fst
cmp
mov
loop
sahf
scas
aam
and
iret
mov
cmp
imul
sbb
cmp
push
sbb
sahf
mov
push
in
hlt
inc
jb
lods
or
xchg
xchg
cld
mov
out
leave
adc
neg
cmp
xchg
shl
lds
push
jle
jns
iret
movs
dec
mov
adc
or
stc
aam
retf
xchg
(bad)
adc
call
rol
clc
sahf
adc
outs
aaa
pop
and
loope
shr
imul
clc
add
retf
les
push
jmp
test
push
stos
xchg
aad
bound
in
fisub
dec
mov
pop
cmp
lea
push
jno
into
ss
shl
adc
icebp
push
cdq
bound
add
push
arpl
jmp
mov
outs
dec
aad
or
mov
adc
adc
int
cmp
xchg
push
dec
inc
jmp
in
cwde
sbb
or
repz
mov
adc
cli
push
leave
inc
es
hlt
test
scas
or
ror
pop
mov
fs
jbe
int3
mov
imul
into
gs
sbb
into
xchg
leave
fist
jbe
xchg
jmp
or
mov
mov
dec
das
mov
sti
xchg
sbb
dec
dec
loop
cmps
add
mov
xor
movs
mov
sbb
mul
add
dec
movs
and
cmp
lods
ss
mov
pushf
jmp
xchg
adc
jae
cmps
add
xchg
cmp
xchg
jno
mov
jp
lods
adc
cli
mov
imul
cmps
xor
test
pop
adc
daa
inc
push
out
mov
fnstenv
test
dec
pop
cs
stos
ds
mov
lods
mov
jmp
pop
push
push
int
pop
cmc
jo
inc
repnz
in
mov
xchg
adc
stos
jae
(bad)
bound
fmul
push
push
jb
push
imul
adc
idiv
js
test
div
or
cmp
sbb
into
inc
sbb
daa
xchg
xchg
sbb
mov
and
nop
mov
sbb
adc
and
adc
ret
xchg
movs
outs
xchg
mov
dec
mov
je
inc
push
jle
scas
test
xchg
dec
outs
push
clc
dec
mov
int
(bad)
std
movzx
mov
stc
push
jb
fcmovb
lods
cmps
pop
sbb
inc
int3
and
sbb
jg
sbb
ror
test
jle
pop
mov
sbb
scas
(bad)
in
fstp
das
fld
dec
xor
mov
out
and
cwde
movs
call
inc
dec
fs
inc
enter
ja
sahf
mov
in
cmp
pmulhw
inc
sbb
mov
xchg
out
pop
xchg
scas
cli
sbb
adc
mov
xor
adc
sar
mov
cdq
push
push
std
ins
or
sti
and
js
mov
in
test
in
neg
cmp
(bad)
ret
mov
test
push
out
pop
rcl
cmp
scas
and
add
rcr
cmps
xlat
xor
sbb
ins
jo
pop
mov
push
arpl
mov
adc
xchg
cmp
mov
cwde
(bad)
cmc
ss
and
scas
mov
fwait
or
(bad)
xchg
das
cmps
pop
cmps
loopne
ins
cwde
cmp
mov
arpl
retf
scas
adc
ds
stos
mov
or
cld
ds
mov
or
mov
adc
mov
and
mov
nop
ret
lods
mov
(bad)
in
push
cmp
sbb
xor
mov
push
loopne
sar
idiv
jge
and
add
std
dec
mov
fsub
jmp
and
(bad)
push
cmps
repnz
dec
ss
out
sahf
neg
inc
add
and
lods
cwde
repz
out
pop
pop
xlat
sub
stos
in
cmp
cld
mov
add
sti
jecxz
mov
pusha
xor
sub
shl
sub
mov
cmps
lahf
cmp
loope
scas
mov
sbb
enter
aaa
jp
mov
xchg
sbb
nop
out
sub
and
mov
bound
sub
sub
sbb
mov
xchg
lahf
dec
xchg
lahf
inc
ror
mov
xor
jg
or
push
jl
xlat
inc
scas
in
leave
sahf
jge
cld
pop
jmp
xchg
mov
push
adc
add
mov
xchg
xchg
ror
mov
push
xchg
scas
out
iret
inc
imul
jg
inc
in
xchg
jl
leave
(bad)
jno
inc
aaa
sub
cmp
push
cs
div
xor
xor
xchg
xor
les
mov
js
loopne
inc
(bad)
jp
add
fs
ret
shr
jae
pop
dec
xchg
fnsave
fcomp
push
iret
sub
enter
mov
mov
outs
call
fs
clc
loop
jecxz
cli
xor
xor
xor
mov
mov
mov
mov
sbb
pushf
hlt
dec
add
mov
pop
sub
test
add
bnd
mov
stc
fstp
cli
lods
cmp
mov
sar
or
std
or
das
xor
sahf
xadd
call
adc
sub
push
mov
mov
lock
adc
pushf
dec
jb
push
mov
sbb
(bad)
xor
out
lods
sahf
push
fcomp
xor
loope
sbb
lock
aaa
movs
addr16
push
(bad)
fcomip
lods
in
f2xm1
cmp
fiadd
(bad)
xor
adc
retf
jl
add
sti
loope
push
dec
pusha
lock
adc
cmp
sar
jmp
cdq
sub
inc
scas
idiv
js
mov
nop
xchg
jnp
out
sub
jmp
clc
(bad)
sysret
out
and
push
lods
in
retf
movs
add
or
not
xor
arpl
scas
fidivr
aas
cmp
cmps
lea
add
cmp
pop
and
retf
test
inc
(bad)
into
mov
imul
xlat
ret
aad
test
pop
adc
sbb
mov
and
ins
cli
sbb
clc
jo
loope
mov
pop
push
or
mov
mov
mov
scas
inc
mov
lea
lods
lock
pop
imul
scas
out
mov
mov
adc
pop
jmp
inc
sti
mov
xor
int3
in
cli
or
retf
test
into
and
cdq
inc
adc
xchg
and
add
test
int3
iret
jmp
inc
sbb
and
in
movs
jge
lods
cmp
int
push
mov
or
call
dec
aas
adc
push
jmp
sbb
imul
inc
dec
mov
fnstcw
je
sahf
lea
addr16
mov
(bad)
cwde
cld
cmp
mov
inc
mov
dec
cmp
sar
(bad)
ins
neg
xchg
sub
sbb
mov
pop
aam
fcomp
xchg
pop
xchg
aam
jnp
popf
sub
es
jmp
ds
push
(bad)
pop
repnz
jg
ficomp
stos
in
xor
xchg
push
lds
xor
in
add
mov
dec
je
mov
dec
out
push
call
jae
jbe
std
mov
es
imul
xchg
pop
push
dec
outs
push
dec
mov
das
test
xchg
jae
xor
dec
push
retf
aam
push
into
ins
cmp
mov
mov
xchg
and
rol
hlt
and
aas
mov
shl
sbb
hlt
ret
imul
jno
data16
std
scas
xchg
aas
pop
sar
pop
add
sbb
(bad)
jg
outs
ret
push
(bad)
add
fs
adc
jb
arpl
adc
dec
xchg
mov
in
cld
iret
dec
push
add
and
ds
pusha
fwait
aad
mov
push
mov
adc
in
pop
adc
stos
mov
push
jns
jge
retf
xor
into
cmc
pop
cld
nop
mov
push
jmp
scas
mov
stc
(bad)
(bad)
or
xor
fcom
pusha
push
sti
sahf
jae
xchg
out
gs
inc
adc
nop
movs
daa
jns
jg
mov
dec
repnz
push
pusha
push
xor
js
cdq
inc
push
inc
sahf
js
xor
adc
ficomp
aam
adc
pusha
mov
jns
mov
sbb
(bad)
out
jge
mov
adc
sub
inc
aam
out
fs
push
xchg
sub
xchg
mov
imul
pusha
xchg
test
sbb
dec
pop
inc
jl
add
call
mov
mov
inc
lods
push
push
pusha
sahf
dec
push
(bad)
sub
mov
sub
aam
xor
sbb
int
pop
inc
fcomp
or
int
pop
lea
push
(bad)
ror
xlat
and
ror
retf
mov
ja
cmps
cmp
or
addr16
lods
fs
push
repz
mov
dec
jns
retf
(bad)
mov
stos
xor
pop
push
mov
pop
fild
rcl
stc
jne
call
bound
retf
lahf
fidivr
pop
std
je
outs
xor
scas
call
fldcw
mov
pusha
int3
(bad)
jbe
leave
pop
fist
and
inc
or
pop
jns
cmp
stc
xor
cld
movs
shl
xchg
xor
nop
popa
adc
pop
cmps
int
in
retf
mov
cmps
imul
and
mov
pop
aas
add
push
popa
addps
or
leave
xor
(bad)
dec
jmp
out
xor
mov
xchg
sub
lods
ins
or
push
and
cmp
mov
and
sbb
push
(bad)
xchg
xchg
add
mov
add
push
mov
fild
inc
test
xor
mov
or
xchg
arpl
mov
xchg
test
add
retf
sub
push
mov
cmp
outs
lods
pusha
aad
imul
in
jle
xchg
or
int
xchg
test
mov
mov
mov
mov
retf
mov
cmp
pop
repz
or
push
fistp
cmp
shl
into
sub
lock
repz
adc
push
and
std
sub
jbe
xchg
jg
repnz
cmp
ds
not
push
arpl
test
mov
dec
jmp
loope
push
ret
mov
adc
(bad)
xor
or
sbb
popa
(bad)
xlat
cmp
pop
out
push
sbb
inc
call
inc
popf
movs
sbb
jnp
and
mov
scas
dec
loope
dec
sub
fcom
je
mov
pop
mov
sub
popa
int3
lock
cmp
outs
int3
inc
lods
aam
jae
inc
add
in
ins
shl
jae
test
jle
jae
mov
fdivr
jns
push
and
sbb
fistp
(bad)
arpl
sbb
mov
ss
dec
xor
dec
or
xchg
call
aam
outs
leave
or
sbb
cmp
cmp
cmp
call
nop
(bad)
(bad)
push
sub
ins
cmp
test
bound
xor
mov
clc
test
mov
adc
jmp
enter
mov
mov
sub
mov
mul
mov
into
and
inc
fucomp
dec
xchg
movs
rol
dec
mov
cmp
in
das
je
pushf
ror
ficom
add
cmp
inc
fidiv
mov
adc
inc
outs
dec
push
jge
sub
xchg
bound
inc
lods
xchg
and
add
mov
dec
mov
imul
add
push
packuswb
(bad)
int
mov
push
pop
or
test
pop
mov
pusha
es
push
and
and
sub
ds
fwait
out
jecxz
or
jle
cli
das
jg
mov
add
mov
sbb
jae
or
inc
fprem1
push
scas
jbe
jbe
sar
sahf
sbb
test
push
xchg
jge
dec
or
rol
call
cli
mov
stos
movs
test
(bad)
sar
mov
add
pop
mov
ret
or
adc
jb
cmps
add
arpl
lahf
and
cmps
ins
(bad)
fadd
imul
xor
sbb
or
jge
shr
test
mov
pop
sar
stc
add
fidivr
cmp
mov
xor
in
lods
fadd
rol
add
nop
or
inc
sbb
or
sbb
add
fst
xchg
enter
add
jno
adc
push
add
push
mov
cmc
cmc
mov
and
dec
sub
mov
jp
dec
call
inc
and
push
fdivr
jmp
je
leave
jmp
xchg
adc
and
xchg
out
cli
jns
push
xchg
cmps
or
sub
dec
dec
xor
sbb
dec
in
dec
jecxz
mov
jbe
push
push
pop
pop
xchg
popa
mov
push
clc
xchg
jmp
fcmovb
test
jae
dec
inc
xor
adc
add
ins
out
jae
mov
adc
cmps
push
inc
sub
mov
jno
jl
mov
add
sub
aad
dec
push
std
mov
loopne
outs
lods
adc
js
jp
popa
adc
inc
je
fsub
or
push
daa
jmp
scas
into
dec
inc
int
pushf
jl
cwde
retf
adc
fcomp
mov
jg
inc
mov
sub
dec
retf
push
fisub
repnz
daa
dec
push
arpl
mov
cmp
enter
jmp
and
inc
daa
mov
ret
ins
leave
aam
push
call
xor
inc
dec
repnz
xor
fidivr
addr16
(bad)
(bad)
jb
fdivr
shl
sbb
push
inc
sbb
repz
aad
aas
int3
dec
push
adc
int3
or
xchg
jmp
pop
mov
inc
dec
or
test
mov
sub
movs
mov
dec
or
outs
sub
cmps
inc
popa
out
adc
and
not
xchg
js
retf
push
jp
sar
or
cmp
jns
jo
sbb
push
add
(bad)
fbld
mov
and
scas
cmp
mov
sub
shl
sbb
dec
ret
push
out
dec
stos
or
adc
das
sahf
loopne
add
jbe
adc
fild
dec
iret
fcom
(bad)
leave
inc
add
repz
push
icebp
jmp
loop
jmp
ins
int3
es
ins
mov
and
fs
sbb
dec
dec
ror
movs
pop
or
call
mov
dec
lods
(bad)
and
popf
push
push
add
fild
inc
xor
pop
dec
xor
(bad)
push
test
ret
dec
repnz
cmp
ret
jge
mov
outs
loope
lds
jnp
xor
std
fist
lds
lock
pusha
mov
ret
loopne
fimul
adc
cli
lods
sub
loope
aam
push
xchg
test
pop
stos
popa
dec
pop
sub
ret
(bad)
enter
add
sbb
les
(bad)
in
xchg
pop
sbb
(bad)
paddsw
hlt
pop
(bad)
push
inc
jae
fxch
and
scas
cmp
sub
xor
popf
mov
add
cs
out
aam
fsubr
scas
imul
and
xchg
retf
loope
stc
mov
enter
add
das
cmp
xchg
in
jnp
mov
push
idiv
sbb
fs
lds
pop
mov
cmp
jbe
and
lock
or
mov
mov
data16
pop
inc
sti
and
std
xor
mov
and
in
xor
pusha
dec
push
fadd
mov
mov
mov
push
jbe
inc
mov
imul
int
inc
stos
aas
jb
popa
(bad)
test
dec
ds
add
pop
push
jp
and
push
ins
pushf
jmp
cld
sub
es
dec
and
dec
shl
ror
cmp
jg
lods
aad
pusha
shl
inc
hlt
pop
mov
fdivr
shr
mov
cmc
in
test
jmp
out
jne
xchg
push
(bad)
int
pusha
or
push
out
mov
or
push
ins
sub
imul
mov
(bad)
nop
in
rcl
cs
xchg
push
pop
in
(bad)
sbb
pop
fs
in
(bad)
mov
gs
fs
push
lods
not
cmps
mov
xchg
in
or
sbb
hlt
lods
pop
add
mov
inc
daa
arpl
test
dec
adc
push
push
pop
jmp
cld
in
cs
add
imul
outs
movs
jle
cmp
jmp
push
lahf
scas
xchg
addr16
xchg
mov
or
mov
in
cdq
rol
rcpps
and
pop
dec
mov
push
and
bound
cld
cwde
gs
movs
(bad)
js
ds
xchg
xchg
push
(bad)
sbb
mov
fnstenv
test
adc
mov
outs
and
retf
jg
inc
mov
and
out
sub
mov
inc
imul
cmc
test
dec
or
ret
xchg
add
xlat
mov
daa
ret
std
sbb
xchg
jnp
fcom
(bad)
add
jns
pop
movs
lods
sub
rcl
test
fadd
out
add
jo
and
cmps
sti
pop
or
xchg
adc
mov
cmp
cmps
lods
jmp
push
scas
into
pop
add
xlat
pop
and
sub
jle
xchg
leave
sbb
sub
jb
out
jns
cmp
adc
lods
xchg
jne
scas
or
sbb
jne
dec
pop
add
xchg
ror
pop
push
push
jae
xor
and
ss
dec
bound
repz
jecxz
sub
mov
shr
mov
mov
push
cmp
sbb
inc
pop
cmp
shl
pop
inc
jecxz
jno
mov
(bad)
rcl
sbb
out
sub
inc
call
stc
sub
out
xchg
(bad)
fidiv
xchg
dec
xor
movs
rol
aad
dec
div
in
(bad)
mov
dec
daa
aas
sub
mov
cmc
push
sub
mul
sub
inc
ins
xor
or
add
(bad)
bswap
pop
ss
push
dec
rcr
lods
jge
movs
xor
push
js
mov
out
cld
pushf
adc
hlt
dec
jo
mov
sub
dec
dec
pushw
xor
je
mov
cmp
out
scas
fidivr
or
sbb
and
fs
in
or
xchg
xchg
cs
inc
pop
pop
pop
mov
xchg
popf
mov
(bad)
pop
fdivr
xchg
fst
fcomip
push
arpl
and
jb
adc
mov
cmp
adc
shr
in
out
sub
xor
nop
aaa
movs
inc
cwde
cdq
or
cmp
shr
loopne
leave
in
mov
jne
dec
add
push
add
cmp
cli
pop
ins
dec
rcr
mov
fidivr
or
or
inc
fsubr
shl
into
call
into
movs
adc
push
adc
loopne
pop
xchg
and
and
scas
push
mov
mov
(bad)
or
pop
or
push
ja
rcl
pop
or
jnp
mov
outs
jmp
xor
push
and
lahf
jb
dec
movs
cs
jge
jb
xor
jmp
add
adc
in
into
(bad)
sub
xchg
cmp
ret
jmp
addr16
add
fld
push
sub
lock
jno
sub
sbb
(bad)
and
fisttp
das
sti
cmps
fldcw
pop
or
mov
sti
cmp
cwde
push
add
mov
mov
aam
or
(bad)
jae
xchg
int
cwde
stos
retf
pop
pop
sub
loop
arpl
xlat
ss
add
cwde
retf
pop
loopne
icebp
mov
addr16
cmp
or
fiadd
(bad)
les
sub
cmp
movs
pop
pop
out
sbb
lea
rcr
xor
mov
nop
jmp
pushf
adc
(bad)
xor
(bad)
imul
dec
mov
or
jmp
cwde
cmp
(bad)
jp
jo
daa
mov
mov
scas
xor
or
stc
inc
test
pushf
jo
pop
cmp
icebp
xchg
xchg
or
xchg
adc
scas
das
or
jae
popf
pop
retf
and
lahf
in
xchg
test
into
pop
retf
(bad)
shl
mov
inc
xor
mov
es
retf
es
pop
enter
popa
test
pop
(bad)
pop
sbb
outs
stos
repnz
adc
cmp
retf
adc
ja
mov
mov
test
sbb
sub
out
lods
cwde
push
dec
movs
mov
adc
dec
mov
cmc
fiadd
mov
adc
mov
push
inc
pop
mov
xor
cmps
cmp
pop
sbb
inc
fidivr
pop
fidivr
pushf
aad
or
sti
mov
jno
daa
stos
bnd
xlat
mov
fimul
cld
ss
push
aas
add
or
in
sub
and
fnsave
pop
jg
add
aaa
mov
mov
pop
in
xor
fwait
in
gs
mov
mov
aad
cli
jl
mov
(bad)
cmp
mov
cdq
mov
ds
test
sub
mov
adc
or
jge
jo
fst
fcmovbe
mov
jmp
and
or
cmps
aaa
loope
cmp
jno
fidiv
pop
lock
and
xchg
jmp
retf
lfs
add
fdiv
scas
mov
pop
jb
mov
xchg
sub
add
not
xlat
sar
add
pop
sub
push
int3
sbb
mov
adc
stos
or
pop
dec
das
dec
(bad)
cmp
inc
mov
imul
xchg
sahf
mov
pop
fxch
mov
popa
cmps
adc
adc
fnstenv
cmp
loope
or
sbb
jne
add
ins
sbb
cmps
repz
test
gs
int3
movs
adc
in
xlat
aaa
inc
xchg
sti
mov
push
jmp
or
xor
cmp
mov
xchg
ds
stos
mov
mov
mov
sub
inc
jbe
(bad)
fidivr
ins
stos
cli
imul
sbb
jns
sub
nop
shl
lds
ss
ja
cwde
xchg
mov
mov
fcomp
dec
xor
bnd
cmp
sar
mov
(bad)
xor
mov
jl
jge
cmp
js
push
xor
mov
imul
inc
out
sub
adc
jmp
clc
cld
or
sbb
push
inc
dec
int
jp
in
test
push
mov
ret
push
jne
jmp
jns
int3
mov
fs
pop
stc
xchg
out
add
int3
imul
jl
aaa
pop
bound
adc
ret
cs
gs
add
(bad)
push
cld
scas
out
icebp
inc
(bad)
movs
mov
inc
or
jo
sub
ins
lods
jmp
push
push
or
int
xchg
inc
push
pop
jmp
outs
xchg
cs
mov
push
jno
ficom
inc
dec
(bad)
shr
mov
(bad)
std
or
sbb
shl
lods
test
test
test
push
aad
mov
dec
pop
dec
out
or
dec
adc
lds
jmp
mov
cld
or
cmp
and
loop
rol
data16
sbb
jge
popa
clc
push
jl
arpl
jne
sub
call
fwait
pop
push
push
cmp
scas
ds
adc
(bad)
in
jne
mov
pop
add
adc
rcr
(bad)
movs
dec
cli
add
xor
cld
cmp
xchg
inc
scas
aam
inc
cmps
cli
and
mov
loopne
aam
mov
retf
add
sub
fnsave
iret
add
adc
(bad)
cmp
mov
pop
mov
stos
dec
push
test
push
jae
retf
jbe
ret
lahf
repnz
xchg
xlat
dec
pop
xor
dec
fnstenv
mov
xchg
retf
push
inc
pop
add
mov
dec
add
pop
ds
int3
inc
pop
sub
rcr
pop
mov
and
pop
sbb
sub
or
xlat
in
popf
sub
sahf
js
sub
mov
xchg
stc
xor
mov
and
jge
retf
jo
test
(bad)
fucomi
xchg
outs
inc
(bad)
lahf
in
aad
not
cmp
or
or
mov
inc
shl
pop
gs
jecxz
mov
dec
popf
ret
mov
add
loope
jae
push
mov
inc
sub
and
cmp
xor
stc
jne
test
icebp
dec
xchg
clc
mov
sbb
add
jns
cmp
fist
jno
aad
push
call
ret
sbb
mov
sub
outs
icebp
pop
xor
xchg
or
int
jecxz
das
pop
lods
movs
mov
imul
sub
ja
pop
daa
popa
cmp
jmp
mov
add
pop
mov
lahf
lds
mov
mov
lea
call
push
mov
pop
sub
nop
cmps
mov
stc
ss
mov
aam
aas
jmp
neg
gs
sti
sub
enter
in
or
pop
or
stos
popa
enter
leave
mov
adc
test
or
das
mov
popa
in
fsub
fwait
xchg
dec
icebp
cmp
imul
add
pop
push
add
mov
dec
push
pop
inc
ror
btr
push
cmps
mov
push
imul
cld
adc
adc
and
pop
push
adc
inc
jmp
cld
cmp
leave
lock
fisubr
outs
adc
mov
jecxz
mov
jb
in
sbb
retf
or
push
nop
xchg
xor
imul
pop
pop
xchg
pushf
and
cmp
ja
cmc
sar
clc
nop
pop
repnz
adc
rcr
xchg
mov
pop
pop
int
sti
ins
dec
sbb
adc
and
movs
mov
bound
idiv
pop
and
sbb
(bad)
out
adc
inc
je
pop
sub
dec
sub
or
lea
and
sub
icebp
fdivrp
retf
jb
cmp
repnz
jbe
jb
imul
jge
out
mov
dec
je
aas
cwde
not
cmp
gs
stos
cmp
jg
pushf
sbb
xchg
stos
mov
dec
cwde
dec
mov
mov
dec
lds
sub
pop
pop
imul
(bad)
not
test
cmc
test
xchg
xchg
dec
fstp
mov
inc
out
das
cwde
jmp
(bad)
(bad)
sbb
repnz
sbb
cmp
imul
jp
xchg
scas
sub
imul
imul
inc
test
aam
jbe
jno
xor
ins
fwait
stos
jns
and
je
sbb
mov
stos
mov
mov
fisubr
xor
pop
add
lahf
jnp
pop
inc
movs
mov
popf
xor
rcr
or
into
mov
jge
(bad)
jo
and
(bad)
cmp
or
mov
hlt
popf
sub
mov
iret
fdiv
sub
cmp
fcom
test
pop
sbb
fimul
das
das
mov
cli
shl
int3
lock
xchg
aad
and
inc
push
fwait
in
shl
sub
loopne
aad
ins
sbb
sub
sar
lahf
test
jo
(bad)
imul
pop
add
inc
and
arpl
mov
pop
sbb
scas
add
aas
inc
or
ret
in
in
or
cs
xor
xor
mov
js
or
scas
iret
xor
sbb
jno
pop
jg
fldenv
push
and
jge
inc
dec
jns
sub
out
icebp
mov
(bad)
leave
and
or
retf
int
mov
ror
xor
stc
jecxz
(bad)
fwait
call
sub
cmps
nop
in
sbb
or
xchg
rcl
in
les
sbb
test
(bad)
and
mov
push
cmp
jo
push
ins
jno
popf
(bad)
inc
mov
mov
js
lods
imul
arpl
loopne
sar
jg
and
sbb
div
sar
outs
lahf
das
int3
cmp
xchg
mov
adc
cwde
loop
jne
pusha
inc
mov
(bad)
lds
pop
add
repnz
gs
mov
and
outs
scas
mov
movs
and
cs
fdiv
and
adc
jge
pop
xor
mov
inc
leave
cld
pop
bound
outs
int
lods
jmp
shl
loop
rcr
dec
shr
add
test
fninit
and
cli
jl
jl
mov
sub
xchg
ficom
inc
jnp
push
retf
sub
mov
iret
(bad)
(bad)
fucomi
mov
fcomi
or
je
push
mov
dec
jg
test
inc
stc
or
push
cs
xor
dec
mov
add
out
cmc
xor
imul
fisttp
stos
lea
mov
or
xor
or
enter
movs
or
push
fimul
jg
(bad)
and
clc
aad
adc
test
mov
and
inc
popf
add
icebp
xor
(bad)
test
push
loopne
add
xchg
dec
cmp
popa
push
mov
dec
xor
mov
mov
jp
xchg
jae
mov
out
dec
adc
jmp
std
das
ins
adc
dec
sti
add
xchg
imul
lea
sub
sub
scas
dec
adc
xchg
leave
in
fsub
xor
jg
fisttp
cmp
in
ficom
popf
retf
or
mov
fst
push
push
retf
adc
and
sub
xor
fwait
retf
add
es
jo
mov
pushf
fidiv
lods
push
and
retf
cdq
jnp
fsub
fcmovbe
pop
xor
lods
mov
push
jae
sub
fcmovb
outs
aaa
cmc
lea
leave
aad
xchg
int3
mov
shl
inc
stos
mov
push
dec
loop
inc
cs
scas
test
stos
stos
push
cmp
scas
call
jno
mov
fbld
dec
pushf
lods
mov
rcl
sbb
push
xchg
das
or
pusha
add
cld
mov
adc
pop
(bad)
mov
out
and
ja
add
dec
sbb
pop
test
or
retf
push
pushf
pop
mov
ss
push
xchg
cmc
out
test
lds
pop
inc
sbb
arpl
mov
scas
jp
dec
pop
(bad)
stc
cmps
cld
and
xchg
pop
xchg
(bad)
popa
inc
and
sub
sbb
ret
jle
jmp
xor
push
cmp
pushw
sub
pop
retf
dec
data16
pop
and
addr16
sub
cmp
pushf
lock
idiv
aam
ja
scas
mov
inc
mov
repz
outs
dec
dec
dec
and
jns
mov
je
jp
adc
push
out
into
ret
(bad)
sbb
mov
or
jg
push
mov
push
mov
dec
scas
cwde
popa
aaa
mov
jle
xor
mov
and
movs
js
mov
push
retf
fwait
jle
inc
in
push
xchg
retf
sbb
cmp
xor
repnz
adc
clc
jo
or
out
es
imul
mov
out
imul
arpl
aad
idiv
(bad)
cmp
pop
mov
cli
movs
xchg
ror
dec
test
fwait
add
xchg
push
jl
adc
cld
adc
jl
mov
fldcw
mov
cs
shl
pusha
imul
cmp
pop
pusha
cmp
pop
stos
or
je
xor
jb
cli
xor
imul
jo
pop
movs
jbe
aas
mov
inc
and
mov
loope
xor
xchg
ds
mov
inc
sub
or
push
and
mov
std
imul
pop
sbb
push
sar
adc
and
test
xor
fisub
call
and
js
dec
test
ins
aaa
mov
xchg
mov
sbb
xchg
push
(bad)
sti
adc
lock
push
mov
mov
loopne
pop
jne
dec
add
and
outs
mov
out
clc
fstp
cmp
xchg
fbld
leave
je
and
aad
xchg
out
div
push
outs
cmp
cmp
fnstcw
stc
mov
jo
push
popa
fstp
mov
mov
iret
jl
getsec
pusha
fiadd
mul
cli
std
lahf
arpl
mov
fs
xchg
lods
sub
xor
fs
dec
add
cs
dec
mov
push
aas
xor
mov
pusha
mov
mov
sbb
mov
shl
hlt
xor
pop
mov
pop
add
je
mov
je
cld
loop
xor
jle
adc
lods
mov
pop
ja
and
ret
retf
push
inc
imul
and
mov
les
and
cdq
rcl
dec
jp
xchg
dec
fimul
(bad)
inc
or
add
push
xchg
adc
or
scas
jp
inc
mov
ss
inc
test
or
int3
test
adc
dec
sub
movs
movs
(bad)
outs
loope
jae
xchg
xor
retf
shr
push
addr16
jp
in
sbb
or
not
dec
push
gs
loop
sahf
int3
cdq
xchg
mov
outs
add
not
mov
lods
in
and
sbb
push
mov
sub
sbb
jmp
fiadd
js
sti
lods
push
jmp
sbb
adc
mov
(bad)
test
and
adc
cmps
jl
(bad)
mov
and
jmp
pop
fiadd
movs
popa
push
cmc
cdq
fdivr
movs
xchg
push
adc
and
je
call
mov
mov
int
fwait
cmp
ror
xor
clc
ds
arpl
add
arpl
imul
pop
call
push
pop
cmp
add
and
fcmovnu
add
jl
stc
in
cmps
mov
outs
adc
cdq
ficom
ss
fs
popf
retf
push
mov
jge
cdq
(bad)
cdq
push
xchg
mov
scas
push
out
adc
repnz
push
mov
mov
ins
mov
jne
mov
pop
push
mov
jae
add
xchg
sub
xchg
les
lahf
mov
and
loope
jg
mov
jge
sub
scas
inc
xchg
push
sbb
pusha
and
fmul
sbb
mov
mov
(bad)
xor
(bad)
popf
jno
jns
mov
xchg
lods
cmp
inc
push
call
sbb
mov
rol
(bad)
xchg
and
cmp
(bad)
cdq
mov
jb
imul
es
lock
cli
in
into
rcr
sbb
and
sbb
pop
js
dec
std
xor
leave
js
dec
in
lock
push
ss
je
xchg
pop
pop
ja
not
xor
jmp
les
adc
jecxz
pslld
sar
aaa
jmp
fisttp
mov
inc
cs
push
jns
or
pop
daa
push
pop
inc
loop
sub
cmc
arpl
fist
shl
ret
jp
xchg
cmp
daa
sbb
mov
mov
cmp
xor
jnp
dec
sub
les
sbb
sbb
js
mov
cmc
mov
add
aaa
push
inc
sahf
jne
lods
push
fwait
out
and
jb
fcom
xor
sbb
jne
sub
cmp
mov
cwde
fs
fist
mov
add
ds
xchg
or
push
push
arpl
mov
mov
mov
mov
popf
xchg
push
mov
jns
popa
sub
in
mov
push
shl
retf
lods
fdivr
xor
jb
enter
pop
jle
jle
ins
icebp
and
stc
xchg
test
loop
bound
xor
and
pop
mov
adc
hlt
sbb
in
stos
cmp
inc
outs
imul
pop
fs
not
mov
xor
rcl
jno
xor
popa
inc
mov
fs
addr16
mov
repnz
cld
inc
cdq
push
mov
sar
sub
pop
xchg
out
inc
fadd
cmp
ss
dec
test
pop
cwde
xor
cmp
std
dec
pusha
ret
adc
push
mov
or
les
ficom
mov
jmp
out
sbb
inc
dec
gs
test
sbb
inc
cld
pop
das
imul
rcr
inc
call
out
adc
or
ss
fbstp
repnz
(bad)
mov
push
xor
or
fwait
xchg
push
mov
ds
add
mov
inc
imul
fdiv
dec
dec
dec
sub
mov
and
cmps
sahf
jmp
push
call
iret
inc
jo
outs
test
cmc
cmp
dec
js
jge
jecxz
stos
les
xor
pop
inc
arpl
pop
xor
pushf
stc
sahf
push
pusha
push
jecxz
or
pop
test
xor
(bad)
icebp
cdq
arpl
sub
inc
mov
nop
mul
clc
cmp
jecxz
aas
or
mov
push
sub
cmps
jbe
(bad)
ss
mov
ficomp
jne
les
cli
loop
xor
push
mov
mov
sar
jb
sub
pop
push
add
mov
les
jb
and
shr
loope
mov
pushf
add
fdivr
mov
add
test
popa
cmps
cwde
icebp
int
push
inc
mov
lahf
sbb
cmp
add
adc
clc
loopne
ffreep
sbb
inc
and
xchg
rcr
push
mov
loope
sbb
out
femms
std
(bad)
and
in
adc
mov
push
movs
daa
lahf
inc
rcl
addr16
push
push
test
sbb
rol
sbb
(bad)
and
inc
jno
pop
jle
xchg
mov
mov
fsubr
adc
ins
sbb
in
retf
rcl
fisub
shl
xor
ror
mov
ins
test
cmps
cmp
mov
xchg
sub
jmp
sar
mov
and
mov
repnz
test
push
push
jnp
cmp
ret
sub
xor
enter
cmp
(bad)
arpl
mov
jb
shl
idiv
mov
mov
shr
mov
fmul
pop
jecxz
es
in
sbb
xchg
xor
in
aad
mov
xor
icebp
out
std
ret
add
lea
or
dec
out
cmps
(bad)
jno
jb
and
jge
fsubr
sub
sahf
mov
mov
ins
in
mov
stos
inc
or
test
jns
jmp
sbb
in
xor
xor
test
(bad)
adc
cmps
push
push
les
movs
cwde
cs
push
pop
sub
add
pop
icebp
sub
jbe
and
cmp
cwde
mov
cld
shr
jg
jp
ja
loopne
and
adc
xchg
mov
rcr
mov
arpl
jmp
fnsave
outs
sti
fsub
pop
sbb
mov
test
adc
aaa
push
jp
aaa
fstp
dec
and
push
adc
mov
addr16
repnz
(bad)
jbe
xchg
test
aas
sub
jle
jns
xor
sbb
lock
out
rol
add
nop
cmp
ins
push
test
jae
shl
pusha
cmp
(bad)
loop
mov
imul
hlt
data16
inc
xor
arpl
popa
cmp
jns
mov
mov
and
sbb
pop
pop
jl
pop
(bad)
jge
push
out
push
mov
mov
add
sub
daa
scas
frstor
mov
out
pusha
mov
sbb
adc
inc
arpl
sbb
xchg
and
push
icebp
inc
rcl
call
mov
and
in
mov
mul
mov
sub
clc
test
test
shr
(bad)
push
shl
bound
push
test
jmp
stos
jl
jb
inc
xchg
inc
ins
lds
add
and
sbb
retf
pop
fsubr
mov
jae
movs
scas
test
js
cmp
test
cwde
mov
inc
xor
pextrw
dec
out
or
outs
pop
fimul
jmp
and
popf
dec
adc
push
(bad)
mov
leave
sbb
mov
xchg
ret
into
jno
out
xor
std
xchg
push
dec
jno
inc
test
test
into
dec
lahf
jmp
push
jecxz
shl
popa
das
enter
jp
inc
leave
ret
leave
mov
xchg
dec
dec
xchg
outs
mov
(bad)
outs
pop
into
iret
repz
into
xor
(bad)
pop
jb
inc
mov
cdq
cli
sbb
cmp
push
dec
test
mov
sti
int
arpl
das
jo
adc
and
retf
inc
xor
xchg
mov
sti
mov
and
sub
fnstsw
(bad)
stc
mov
dec
jl
or
or
stos
pop
push
jge
mov
cmp
push
(bad)
add
cmp
inc
stos
iret
movs
xor
daa
cmp
test
mov
add
and
mov
push
js
mov
and
sub
mov
setbe
or
jns
mov
jmp
mov
int3
div
stos
mov
je
jne
stos
(bad)
cmp
and
mov
dec
jb
fs
cmp
jecxz
jnp
loope
xor
int3
push
mov
cld
adc
jp
sub
mov
mov
outs
cmp
cmp
mov
jmp
les
loope
das
or
dec
mov
lea
and
inc
sbb
into
mov
in
push
add
jge
cs
cmc
(bad)
add
cmp
cdq
call
sbb
out
fcmovbe
ja
dec
xchg
aaa
add
outs
fnsave
fiadd
dec
jns
xchg
mov
cmc
fistp
jge
aaa
jp
shl
pop
hlt
push
cmc
xchg
loopne
xchg
repnz
jg
lea
cli
adc
ret
pushf
mul
push
aaa
ret
sahf
into
fwait
mov
jno
dec
iret
sub
mov
sub
pop
inc
loope
push
jae
pop
movs
push
xchg
call
or
push
(bad)
dec
mov
cmp
mov
xor
pop
(bad)
imul
int3
rcl
fisttp
sub
jmp
and
and
out
cdq
sar
fs
push
lods
mov
push
jno
mov
fs
test
in
imul
sub
leave
bound
adc
stos
dec
mov
sub
cli
sar
imul
ss
js
or
fld
jae
aad
in
lock
loop
push
mov
and
outs
mov
sub
in
jmp
xlat
data16
cmp
cmp
inc
cmc
mov
call
push
fdivr
or
imul
push
add
sti
and
int
movs
repz
or
outs
shl
mov
mov
and
dec
js
mov
sbb
sub
push
test
aad
(bad)
and
jle
sti
pop
fistp
mov
jb
add
sub
test
push
adc
and
sbb
add
cmp
int3
(bad)
fdiv
fnop
add
mov
xadd
mov
adc
jmp
push
aas
into
inc
add
daa
rcr
sub
fnsave
xor
lahf
xlat
ins
add
fld
push
jne
pushf
icebp
outs
arpl
adc
je
mov
fldcw
sub
sub
out
jmp
popf
dec
mov
test
hlt
cmp
push
sbb
mov
dec
(bad)
mov
xor
imul
ror
adc
adc
out
jmp
loop
imul
xlat
inc
mov
pop
fldpi
jmp
push
mov
mov
cmps
cmp
inc
cmp
xor
fs
adc
ins
in
jne
call
out
inc
inc
xchg
adc
aas
mov
cmc
fsubrp
or
dec
mov
shl
dec
xor
je
mov
xchg
js
retf
das
out
test
mov
jnp
int3
fidiv
inc
jle
sti
jg
les
fcomp
enter
pop
cld
add
adc
popf
mov
idiv
stc
jmp
inc
ja
mov
pop
pop
cmp
pop
xor
sub
outs
in
mov
mov
sahf
inc
cmp
sbb
mov
cmp
ffree
and
jbe
sahf
cdq
jae
push
hlt
retf
pop
and
imul
cli
ss
push
cmp
ins
add
sahf
jmp
sbb
sbb
inc
dec
mov
icebp
imul
pop
fiadd
sub
sub
mov
hlt
or
test
test
loopne
cmps
ror
jl
push
mov
gs
mov
sub
push
cmp
pop
ds
push
jp
or
sbb
mov
sub
js
inc
inc
pop
mov
pusha
pusha
sahf
loop
add
mov
int3
push
jmp
test
test
mov
mov
xor
xor
mov
fcom
dec
adc
or
xchg
push
(bad)
and
adc
push
xchg
call
aam
inc
or
mov
inc
test
pop
push
pop
cdq
int
dec
dec
dec
imul
dec
out
lock
dec
lods
sar
dec
xchg
inc
(bad)
lods
push
mov
add
imul
xor
mov
rcl
imul
xlat
call
dec
into
aam
xchg
mov
pop
cmp
pop
(bad)
retf
mov
sbb
(bad)
fild
and
xchg
into
xor
adc
mov
dec
test
mov
arpl
cmp
adc
aas
div
adc
loop
cld
stos
sbb
cwde
lock
cmp
imul
jbe
jne
bound
int3
int3
icebp
xor
movs
(bad)
(bad)
pop
in
push
sub
aaa
in
icebp
dec
jbe
rol
adc
xchg
mov
xchg
je
push
(bad)
in
cmps
in
lock
int
(bad)
sbb
outs
stc
test
and
loopne
dec
cdq
sub
pop
pop
inc
xor
mov
mov
pop
mov
test
inc
out
jo
stos
mov
sbb
sub
or
cdq
(bad)
cwde
sbb
pop
sub
imul
(bad)
(bad)
mov
mov
scas
mov
adc
or
pop
psrlw
dec
fisub
ss
rcl
or
call
pop
in
cmps
mov
jp
leave
stc
fild
out
xlat
sti
stos
sub
jle
mov
out
je
gs
push
pusha
mov
ret
xor
pop
test
mov
js
pop
push
lds
icebp
mov
mov
dec
pop
inc
(bad)
(bad)
outs
stc
(bad)
popa
sar
fisttp
(bad)
and
ds
push
push
hlt
ins
mov
adc
imul
mov
sbb
into
mov
clc
es
icebp
int3
xlat
sub
push
enter
and
sub
jno
ret
sbb
(bad)
jmp
test
jmp
sti
and
mov
nop
and
unpckhps
add
loop
mov
mov
cmc
cmps
mov
pop
leave
es
repnz
gs
push
out
jae
imul
push
stos
daa
dec
leave
xchg
stc
jbe
ror
sbb
shl
and
out
js
push
fdiv
cs
out
inc
or
sub
and
jmp
mov
out
mov
jl
or
(bad)
(bad)
loope
scas
jmp
hlt
movs
rcr
mov
inc
cmp
arpl
or
cmp
pop
pop
mov
pusha
and
dec
(bad)
clc
xor
cmp
jb
(bad)
nop
dec
loop
pop
fmul
adc
xchg
outs
retf
sbb
(bad)
cdq
xchg
and
or
and
clc
popf
addr16
adc
or
xor
mov
xor
imul
adc
cmc
aas
icebp
ja
adc
jmp
mov
mov
pop
call
sub
nop
out
add
and
fwait
mov
test
test
pop
dec
push
cmc
fdiv
rol
in
test
inc
std
inc
stos
cli
mov
dec
pop
ret
aaa
lds
sbb
clc
cwde
in
jmp
push
mov
push
xor
test
cdq
fidiv
mov
mov
test
lock
fadd
sbb
mov
imul
outs
sub
int
imul
cmc
ja
imul
cmps
jmp
sub
mov
and
cs
cmps
add
dec
pop
vsqrtps
cdq
mov
sub
xor
sub
add
inc
in
leave
xchg
push
aas
inc
push
ins
dec
outs
inc
ret
shr
cmp
jp
sbb
out
xchg
jb
clc
xor
lods
mov
mov
pop
(bad)
cmp
ins
mov
mov
scas
imul
xor
mov
xor
int3
or
dec
and
imul
and
and
lahf
cmp
adc
mov
call
ins
push
push
stos
cmps
outs
xchg
jl
mov
cmp
out
std
addr16
sub
mov
jb
or
inc
cmp
popf
js
clc
pusha
dec
mov
push
jp
dec
jmp
aad
push
cmp
or
call
int3
iret
push
cmp
or
xor
pushw
jge
xchg
retf
fisubr
call
call
mov
stos
inc
inc
push
pop
ins
fadd
pop
scas
pop
repnz
jo
fcomp
mov
jnp
jle
push
mov
sub
push
arpl
mov
adc
and
addr16
nop
mov
sti
(bad)
sbb
or
pop
fisttp
lea
add
or
retf
aas
fstp
cmps
mov
xchg
push
pushf
mov
shr
fsubrp
repnz
mov
addr16
pop
aaa
add
pop
into
js
popa
add
das
dec
push
iret
xor
add
mov
(bad)
ret
mul
dec
cs
aaa
scas
repnz
jnp
neg
jmp
call
xchg
dec
pop
mov
dec
jge
xor
and
add
adc
retf
daa
mov
aas
mov
jae
pop
sbb
sub
mov
add
xor
xlat
jne
in
cmp
sub
bound
mov
xor
(bad)
aad
xor
or
fidiv
jge
push
xor
leave
add
mov
add
xor
(bad)
out
mov
cmp
jne
dec
xchg
je
xchg
ins
pop
mov
icebp
pop
pop
inc
in
stos
loope
jo
cs
(bad)
rol
or
pop
mov
inc
fidivr
and
lahf
sbb
mov
mov
imul
test
cmp
shr
fs
mov
add
cmp
sbb
inc
loop
xor
push
imul
arpl
push
push
daa
mov
dec
(bad)
push
sub
test
out
sub
imul
jnp
push
(bad)
pop
mov
into
jmp
stc
ins
std
xchg
push
div
sbb
jg
ins
mov
imul
pop
add
repnz
inc
or
enter
cmp
inc
fstp
mov
enter
sbb
jno
dec
pushf
mov
add
mov
imul
rcl
xor
inc
in
adc
mov
xchg
xchg
xchg
jae
fst
not
adc
cmp
cdq
mov
dec
jo
fs
inc
pop
mov
xchg
lock
test
rcr
jae
popa
(bad)
es
ins
mov
cmp
(bad)
fdiv
cmp
call
push
xchg
dec
pop
push
sar
call
inc
retf
sar
cdq
adc
adc
sub
mov
inc
call
xchg
addr16
mov
sub
lds
or
movs
push
mov
shl
mov
dec
pop
imul
test
xchg
nop
mov
and
push
in
or
sub
and
adc
cmp
ja
icebp
and
dec
retf
retf
sbb
(bad)
cmp
and
cmp
lock
lea
mov
js
sub
sbb
mov
das
mov
ss
lock
test
mov
or
xor
jae
sbb
cmp
icebp
leave
pushf
jno
mov
into
sub
jb
loope
mov
sub
mov
add
pop
cmp
in
pop
arpl
aaa
or
or
add
mov
mov
scas
xor
test
ja
cmp
mov
scas
test
cmp
fmul
rcl
sub
push
cwde
in
jbe
sbb
add
test
push
imul
pop
lock
ret
mov
or
cdq
jmp
popf
push
daa
imul
dec
scas
push
lahf
scas
adc
outs
or
(bad)
shr
cwde
pop
xchg
cli
sub
or
fild
mov
mov
adc
cmp
xor
sbb
sti
sti
jp
add
adc
add
inc
or
repz
(bad)
jg
sub
cmp
cli
dec
lods
push
popa
std
mov
pop
outs
addr16
inc
out
sub
add
jle
lods
adc
dec
dec
aad
hlt
stc
push
xor
xor
ds
xchg
or
mov
in
mov
shr
dec
popf
inc
adc
mov
jns
mov
sub
jmp
and
(bad)
movs
and
imul
pop
pop
pop
pop
fst
push
cdq
pop
in
ins
aad
rcr
mov
mov
rep
ins
jl
(bad)
cmp
or
cwde
in
lahf
mov
cmp
test
cmp
(bad)
push
push
sbb
test
jb
lahf
std
xor
mov
mov
enter
imul
call
xchg
shl
xchg
push
jb
pop
ficom
lods
movs
cmp
mov
aad
mov
or
dec
dec
lods
test
mov
inc
mov
mov
shr
push
mov
(bad)
sbb
hlt
jns
das
(bad)
in
add
addr16
xor
imul
rcr
in
mov
and
cmps
mov
out
dec
sub
jge
cmps
sub
add
jle
sar
jecxz
jmp
mov
test
jmp
pop
cmp
mov
outs
pusha
sahf
outs
fidivr
cmp
and
movs
cs
imul
retf
sub
shl
mov
sub
fnsave
in
sahf
pmuludq
enter
loope
clc
imul
sub
push
cmp
sbb
and
inc
adc
cmp
adc
out
add
xchg
mov
inc
daa
std
stos
push
repz
fwait
or
pop
pop
xchg
mov
pop
adc
xor
push
inc
pushf
repz
cmp
aas
or
sub
lock
popf
scas
jecxz
mov
jb
test
cmp
xchg
leave
or
inc
jle
push
aas
mov
or
dec
push
jge
fmul
ret
add
ins
fs
fisttp
or
in
ja
push
ficomp
int
xor
stos
popa
cmp
mov
jae
dec
std
loop
jmp
popf
adc
dec
mov
movs
mov
shr
inc
sub
inc
sbb
je
test
ss
lock
(bad)
fbld
(bad)
fs
or
add
je
sti
loop
or
(bad)
lods
int
and
xor
dec
ja
add
shr
xor
imul
icebp
xchg
movs
pop
push
sub
or
pop
pop
adc
or
ja
ja
mov
ins
imul
dec
push
and
add
xchg
aas
arpl
pusha
nop
mov
sbb
or
xchg
push
xchg
push
push
jge
aaa
imul
stc
xor
mov
mov
add
push
outs
sbb
push
cmp
xor
sbb
sub
and
mov
stos
jmp
cs
mov
cwde
fisub
pop
jge
lock
xchg
pop
and
jle
sar
mov
lahf
in
mov
mov
pop
dec
inc
sub
aaa
(bad)
jle
mov
mov
add
rcr
imul
retf
xchg
out
stos
in
out
or
call
cmc
loope
dec
loop
sub
call
inc
call
xchg
push
outs
add
ret
mov
lds
cli
ds
not
lods
xor
sub
lock
les
inc
daa
int3
push
mov
jg
pusha
ja
inc
mov
push
lods
xor
pop
test
add
xor
loopne
enter
or
adc
cmp
inc
es
cld
push
adc
sub
or
and
imul
in
dec
cmp
call
xchg
and
pop
int3
aam
dec
in
mov
test
dec
cmp
dec
sub
sbb
fcmovnb
push
add
jns
mov
inc
shl
stos
jo
xchg
cmp
popa
jmp
adc
sub
repnz
retf
and
inc
fidiv
inc
and
in
bound
aad
and
or
dec
ficomp
and
add
pop
cld
dec
pop
inc
fst
dec
stos
idiv
pop
mov
bound
xchg
cmp
mov
ss
and
mov
mov
outs
pop
mov
jns
shr
jmp
jbe
xchg
mov
dec
std
sbb
jno
lods
rol
jle
inc
push
mov
xor
test
cmps
xchg
arpl
cld
repnz
test
pusha
fild
pop
push
scas
mov
sbb
(bad)
(bad)
fidivr
xchg
push
mov
adc
push
test
adc
pop
js
mov
repz
fdiv
add
in
test
mov
jb
cmp
sbb
xor
stos
icebp
sar
dec
stc
sub
(bad)
jmp
sub
sub
lea
sbb
loop
aam
push
inc
inc
ds
mov
jecxz
loop
shl
sub
int
int3
(bad)
xchg
test
jns
ds
adc
retf
adc
add
mov
hlt
pop
mov
in
rcl
fwait
push
mov
test
arpl
adc
fadd
push
mov
xor
add
inc
dec
scas
and
xor
jb
mov
addr16
inc
dec
ja
les
jecxz
cli
outs
dec
ja
stos
movs
and
cmps
out
push
arpl
jo
and
lods
js
jge
sbb
xor
in
dec
fadd
pop
add
mov
sahf
jp
and
aad
pop
stos
nop
add
pop
jmp
out
das
mov
cmc
mov
inc
and
daa
push
stc
loope
scas
mov
push
jl
iret
pop
jo
ret
hlt
jnp
sub
hlt
pop
lods
push
jo
in
xchg
popf
and
mov
lahf
jge
cmp
jo
inc
sti
mov
arpl
jecxz
dec
pop
lods
add
sub
fwait
aam
enter
sub
mov
cli
sbb
cmp
jae
and
aaa
fnsave
adc
sbb
jmp
ss
retf
lahf
dec
jbe
cdq
dec
dec
ins
jmp
jl
add
aas
xchg
mov
inc
data16
test
mov
dec
retf
lea
sub
sub
loopne
hlt
ja
xlat
jne
test
fdivr
add
push
sbb
ja
sub
sub
adc
imul
lods
or
mov
adc
push
adc
push
mov
aaa
cwde
add
xor
adc
inc
(bad)
xchg
jmp
jns
mov
aas
aaa
jg
test
mov
aam
test
jl
stos
je
inc
xor
enter
mov
sbb
lods
and
sub
dec
or
mov
sub
pusha
lea
adc
push
lock
xchg
xor
xor
sbb
jno
js
aad
mov
mov
in
stos
imul
test
cmp
pop
or
dec
imul
jle
call
xor
les
dec
paddb
or
push
scas
movs
inc
out
sub
push
(bad)
sbb
jmp
xlat
add
cmp
stc
inc
dec
jbe
lock
test
mov
mov
dec
jo
lods
sbb
mov
lds
fisub
cmp
push
nop
or
xchg
fdivr
loopne
inc
clc
ins
nop
stos
sub
cs
les
mov
pop
cdq
(bad)
enter
cwde
in
adc
je
mov
jns
out
or
mov
mov
mov
cdq
sbb
gs
test
mov
xchg
mov
int3
outs
sar
aam
jmp
push
popf
dec
sbb
push
test
out
aam
and
aam
jmp
mov
mov
dec
(bad)
cmp
shl
fisttp
aad
fld
retf
jno
inc
sub
cli
out
dec
and
xor
es
packssdw
enter
and
push
sub
cdq
xor
ret
ds
and
les
mov
addr16
int
mov
cld
das
mov
ret
ja
fstp
outs
and
pop
shl
in
pop
push
push
mov
nop
(bad)
(bad)
mov
push
inc
cmp
iret
mov
dec
inc
pop
dec
or
jb
jne
push
sbb
push
cwde
sub
data16
dec
and
push
xor
fldenv
out
out
nop
adc
stos
jne
mov
mov
ret
add
mov
dec
dec
clc
(bad)
mov
shl
icebp
shl
mov
imul
push
jns
inc
repnz
out
jne
push
push
mov
cmps
nop
pop
jbe
and
jb
and
popf
rcr
dec
mov
fs
(bad)
shl
xchg
scas
cli
retf
jmp
clc
sub
arpl
mov
sub
and
repz
xor
es
pop
sbb
xor
adc
push
test
dec
(bad)
mov
iret
mov
popf
mov
adc
mov
cmp
push
fadd
push
cld
mov
ror
addr16
scas
jp
loopne
(bad)
int
pop
sbb
ret
adc
xor
mov
mov
jne
arpl
pop
pushf
xchg
xchg
popf
mov
cmp
lds
js
cmp
lea
xlat
pop
xlat
mov
push
not
dec
jmp
xor
out
retf
dec
push
cmps
mov
cmps
xchg
(bad)
call
rol
sub
push
ret
pop
jp
imul
(bad)
stc
loope
into
xor
jmp
adc
dec
jmp
cwde
pop
test
mov
push
push
xchg
pop
mov
cli
jge
xchg
add
jnp
and
mov
jae
add
into
jb
scas
addr16
(bad)
jl
jl
cmp
mov
in
mov
xchg
pop
pop
inc
gs
add
js
lea
mov
and
mov
xor
or
mov
stos
sub
dec
or
mov
and
mov
in
shl
out
push
jae
cmps
and
adc
inc
mov
jne
cdq
xchg
xchg
jo
mov
push
jl
and
ja
mov
pop
enter
sbb
in
and
xlat
adc
into
mov
fiadd
cs
les
inc
movs
dec
mov
call
bound
into
pop
lds
enter
mov
or
lahf
mov
jecxz
jo
and
xchg
xchg
cmp
push
jmp
mov
push
and
loop
jo
not
and
dec
mov
(bad)
jmp
xor
(bad)
adc
cmp
fisttp
pop
sub
in
or
sub
jnp
cmp
pushf
stos
pop
jo
retf
int3
mov
outs
pop
ja
stc
les
xlat
lds
int
push
inc
stos
aaa
test
rcr
imul
inc
dec
fisttp
test
mov
popf
es
fistp
add
stos
in
into
cli
stc
(bad)
js
(bad)
aam
xchg
sub
aaa
mov
or
sub
inc
ret
in
push
push
push
pop
and
pop
sbb
int
adc
mov
jo
test
mov
iret
leave
and
dec
jbe
cli
xchg
lods
imul
test
push
ficom
stos
repz
repnz
xor
cmp
loopne
pop
push
test
fisub
repnz
add
arpl
jns
repnz
data16
mov
shl
rcr
push
loop
imul
mov
push
xchg
mov
mov
fmul
and
fnstenv
push
outs
mov
sbb
aaa
out
and
jmp
push
push
repnz
sbb
call
retf
repnz
jl
cwde
rol
push
mov
stos
jns
adc
and
pop
add
rcr
fs
mov
sub
mov
dec
fadd
cmp
test
cmps
ret
adc
cld
sbb
push
mov
call
sbb
dec
aam
sub
push
jmp
call
sub
leave
out
xor
iret
pop
xor
push
add
enter
daa
pop
int
(bad)
pop
(bad)
ja
fcmovb
xor
pop
mov
sbb
pusha
mov
mov
scas
mov
and
stos
(bad)
je
xchg
cmp
sbb
movs
ja
std
out
fild
imul
in
xchg
pop
imul
xlat
js
pop
push
push
xor
mov
and
jle
mov
sbb
push
and
lahf
in
cwde
sub
xlat
pop
sahf
jl
push
cmp
ins
mov
lock
jb
call
aaa
lock
rol
xchg
sub
cmp
mov
and
hlt
rcr
jmp
enter
cmp
fcmovb
inc
dec
rol
and
aas
ja
mov
leave
or
push
rcl
mov
jle
ins
add
push
jne
dec
push
ds
push
sub
outs
push
mov
pop
fnstenv
lds
mov
icebp
cmc
mov
aam
lock
jbe
out
out
cmp
lds
mov
cmps
in
inc
cs
mov
loop
arpl
stc
adc
dec
ret
dec
sbb
jle
into
loop
fcmovnb
lea
add
sub
sbb
jmp
(bad)
imul
dec
fnstcw
cld
mov
push
rcl
mov
inc
mov
mov
add
iret
push
mov
push
jle
mul
mov
imul
cli
jne
xchg
jecxz
mov
fwait
pop
mov
shl
push
arpl
xchg
setl
pop
dec
mov
or
adc
mov
cli
mov
popa
mov
jg
xchg
or
(bad)
sbb
loop
call
adc
push
or
fisub
pop
sub
dec
push
call
lahf
add
add
movs
nop
pop
and
idiv
adc
xchg
popa
pop
lods
xchg
mov
mov
rcl
jmp
outs
sub
mov
adc
(bad)
movq
pop
push
adc
out
sahf
cwde
scas
xchg
add
push
jp
or
fsub
pop
or
mov
ins
pop
mov
mov
ins
pop
lods
repnz
aam
or
sub
ret
rcl
push
and
lock
outs
push
lahf
lods
sar
popf
jle
push
cmps
adc
adc
popf
les
xor
imul
movs
cmp
test
fiadd
lahf
lahf
xor
imul
mov
std
out
popa
sti
pop
mov
bound
sti
mov
fcom
push
add
xchg
xchg
adc
sub
mov
or
dec
push
(bad)
or
jbe
(bad)
push
cmps
stos
inc
loopne
push
mov
loop
sbb
push
stc
call
mov
mov
popa
in
je
inc
adc
cmps
jbe
in
call
sub
neg
adc
jmp
push
cmp
pusha
shl
lahf
in
jp
retf
out
jp
cmps
add
xchg
jge
into
je
inc
test
jns
and
fsubr
lock
cmc
and
mov
sub
mov
in
test
das
aas
xchg
aam
cmp
rol
mov
mov
fstp
jb
gs
stc
cmps
lds
jnp
dec
xchg
test
iret
jns
les
push
sar
xchg
pop
inc
add
pushf
adc
call
and
and
mov
jg
push
movs
mov
sar
inc
push
aaa
sbb
dec
in
lods
pop
sbb
out
mov
mov
sbb
test
and
sbb
cmp
push
jle
xor
fadd
std
xchg
dec
out
pusha
cmps
jo
push
or
inc
jg
mov
sbb
mov
pusha
sbb
jnp
pop
mov
loope
mov
hlt
inc
xlat
push
into
out
icebp
scas
jbe
adc
repnz
aaa
jp
mov
gs
inc
add
adc
repnz
shl
mov
sub
cmp
int
mov
dec
mov
std
push
mov
sahf
call
cmp
mov
or
lahf
jo
pop
scas
into
sar
stos
in
ins
data16
sub
out
pop
or
and
push
std
push
cs
mov
or
out
dec
sbb
push
cli
fisttp
fisub
push
imul
and
punpcklwd
nop
data16
xchg
ret
dec
ret
mov
shl
ror
ret
movs
or
or
mov
pop
ins
mov
push
pop
test
lods
xchg
jp
cmp
mov
and
inc
aam
fcom
in
sub
mov
xchg
imul
mov
mov
in
cmps
cmps
mov
xor
enter
xchg
(bad)
test
pusha
stos
cwde
ficomp
mov
mov
sbb
adc
and
xor
fild
ds
pop
jmp
jno
stos
push
xchg
xor
pop
ficomp
ror
add
add
inc
loop
xchg
into
cli
xor
pop
or
jno
loop
inc
xor
xor
mul
(bad)
jp
cmp
jae
sub
out
adc
ss
stos
sti
test
or
push
fst
xor
mov
and
mov
xlat
pop
loopne
imul
sbb
sar
aaa
rcl
add
and
mov
adc
sar
psubb
pop
jns
push
adc
imul
or
lock
in
sub
inc
dec
and
mov
sbb
and
xchg
fsubr
jmp
mov
xor
fmul
dec
mov
xchg
push
jno
movs
xchg
pusha
(bad)
(bad)
das
pushf
addr16
outs
mov
inc
sbb
jle
xchg
push
adc
mov
xor
(bad)
fisttp
ret
(bad)
imul
or
dec
adc
or
sbb
jle
outs
pop
call
mov
sbb
movs
sbb
jnp
les
add
mov
ins
rol
cli
xor
xchg
adc
push
sub
mov
mov
sbb
(bad)
rol
movs
adc
std
inc
sub
iret
mov
push
shr
adc
movs
bound
add
sbb
inc
cld
sti
ror
and
(bad)
into
inc
xchg
pop
pop
in
pop
mov
fisub
out
int3
xchg
dec
gs
into
sub
aam
(bad)
xor
stc
int3
in
mov
inc
adc
sbb
push
scas
mov
xor
fnstenv
mov
xor
adc
jmp
cld
sbb
and
outs
jb
arpl
jmp
mov
inc
pop
bound
push
xlat
sahf
lea
clc
retf
icebp
lahf
mov
sbb
test
out
dec
or
sbb
push
xchg
cdq
adc
shr
call
das
jae
in
loopne
xchg
shl
leave
cmp
stc
mov
call
fidivr
ss
sahf
pop
ret
jns
xor
adc
add
fistp
sahf
sub
call
into
lods
cmp
xor
pop
into
xor
inc
xor
fld
and
(bad)
add
in
sbb
or
ret
sbb
pop
mov
sub
dec
or
inc
mov
adc
or
scas
xchg
lods
pop
stos
rcl
pop
pop
popf
int
sub
ins
mov
movs
div
sub
push
fwait
adc
cmps
xchg
(bad)
adc
fwait
outs
je
lock
fnsave
xlat
xor
mov
fldcw
or
lds
push
push
arpl
fmul
js
out
retf
dec
inc
add
jmp
out
cmps
shl
push
cs
imul
push
and
stos
push
push
inc
lods
sub
jmp
xchg
xor
push
push
inc
mov
imul
lods
or
push
and
(bad)
mov
pop
les
mov
pop
test
push
popf
cmps
in
das
mov
stc
jae
pop
movs
retf
stos
adc
(bad)
pusha
call
jns
loopne
ins
push
addr16
adc
xchg
or
xlat
test
imul
fisub
cmp
and
bound
xor
iret
in
lds
bound
jnp
cmp
xchg
cmp
repz
js
jmp
(bad)
in
xchg
push
jae
push
repz
ins
pop
ret
inc
imul
test
mov
arpl
js
jge
fidivr
push
into
ja
adc
cmps
stos
fs
mov
fs
sbb
outs
sbb
jge
dec
mov
sbb
test
in
ja
add
jmp
mov
jge
movs
jb
xor
test
in
pusha
loopne
sti
add
arpl
(bad)
inc
jg
sub
nop
fdivr
push
aam
gs
loopne
imul
outs
retf
mov
xchg
or
into
enter
mov
mov
sbb
sub
(bad)
hlt
imul
pop
es
mov
test
jnp
add
cmps
xchg
pop
adc
cld
repnz
xor
sar
mov
mov
loop
icebp
sub
test
inc
aam
jae
sub
gs
test
stc
jg
add
shr
pushf
and
pop
mov
mov
jmp
rcr
call
in
inc
mov
ficomp
or
ss
lahf
or
or
sbb
pop
lods
int3
aaa
aas
push
ss
mov
in
aam
test
into
fnstcw
cmp
dec
sub
cmp
xchg
ja
and
mov
lods
push
add
jo
xor
ror
adc
push
sahf
add
movs
pop
cmp
add
scas
or
repnz
dec
sar
mov
pop
and
pop
mov
ins
xlat
sub
cs
and
leave
jl
sub
pop
aaa
clc
add
das
xor
mov
xchg
jecxz
xchg
adc
sbb
lods
dec
fcmovnb
sti
popf
test
xlat
pop
pop
mov
out
ins
cmp
mov
cmp
(bad)
arpl
pushf
mov
inc
test
pop
pop
inc
je
xlat
loop
leave
movs
stos
adc
mov
pop
shl
arpl
dec
inc
idiv
cmps
xchg
add
xor
sbb
add
out
push
add
lock
pop
imul
fdivr
xlat
push
mov
cmp
shl
shl
(bad)
mov
jecxz
or
dec
sar
cld
nop
ret
adc
les
push
fcom
cdq
into
aad
xchg
cmp
jl
fcomp
repnz
clc
aam
cwde
pop
push
es
hlt
mov
inc
fcmovu
jo
and
sub
scas
sbb
lahf
pop
adc
or
xchg
add
dec
jge
cmp
add
or
aas
cmps
push
add
jl
pop
lahf
pusha
ins
cmovno
pop
and
mov
xchg
add
icebp
popf
cmc
mov
movs
cmps
ins
xchg
arpl
xchg
adc
fisub
in
xchg
mov
and
pop
sbb
sbb
dec
sub
lahf
in
cmp
(bad)
repz
sub
fistp
cs
inc
lds
sbb
les
cmp
or
push
dec
jo
push
aaa
or
lods
jae
adc
aam
push
or
mov
retf
aas
(bad)
(bad)
pop
clc
sbb
sub
jp
pop
push
inc
enter
cmp
cwde
rep
popa
sbb
or
ins
or
clc
frstor
scas
xor
std
add
int
jl
fidiv
xchg
ss
sbb
adc
xchg
pop
xor
cdq
ret
nop
repz
(bad)
pop
in
mov
push
fdivr
and
sub
and
test
or
(bad)
sub
adc
(bad)
and
and
jmp
mov
pop
xchg
jbe
lods
jecxz
add
jmp
pop
adc
push
dec
data16
div
mov
stc
in
sub
xor
arpl
mov
and
daa
loopne
sub
dec
mov
inc
es
xor
mov
(bad)
mov
mov
clc
pop
cmp
pop
in
cli
sbb
rcr
pushf
popa
lock
dec
mov
cmp
mov
inc
stos
xchg
xchg
(bad)
jmp
movs
pop
dec
push
(bad)
bndldx
xchg
mov
sub
mov
cld
shl
sbb
(bad)
sar
pop
lods
aam
sti
(bad)
push
ficomp
sub
stc
inc
sbb
pop
lods
add
cmps
pop
mov
or
retf
mov
repz
repnz
fisub
aaa
add
(bad)
push
add
mov
cs
pushf
xchg
icebp
mov
add
ins
lods
jp
jae
shl
je
pop
stos
add
or
gs
pop
sub
call
int3
push
in
cmp
mov
kxnorw
sbb
xor
pusha
ja
test
and
(bad)
loop
sbb
push
or
sub
inc
imul
and
cmovs
gs
push
mov
pop
retf
cmps
mov
and
dec
mov
add
pop
jp
inc
ins
cmp
jmp
scas
and
lods
inc
push
jp
push
les
dec
inc
rcl
adc
ds
pop
mov
jle
fdiv
outs
arpl
clc
rcr
sar
in
(bad)
out
int3
sub
mov
fsubr
mov
aam
cmp
add
fmul
mov
jb
add
jl
push
ja
adc
mov
inc
mov
retf
sub
cmovo
int
outs
mov
jne
or
aas
mov
fdivp
call
xor
repz
pop
mov
in
lock
mov
sar
and
xchg
daa
mov
mov
fs
daa
rol
lock
scas
and
cmp
and
in
rcr
or
inc
jmp
(bad)
push
pop
adc
adc
icebp
mov
hlt
sbb
inc
shl
out
fisubr
jmp
or
add
mov
clc
pop
je
push
stos
push
or
push
xchg
jecxz
sbb
xchg
xor
scas
je
xchg
lock
cld
inc
cmps
(bad)
xor
jmp
xor
sub
inc
data16
mul
xchg
pop
xor
loop
in
lahf
loop
or
ror
stos
cs
cmps
jecxz
xchg
dec
jmp
cdq
push
push
add
mov
pop
fs
push
aaa
cwde
(bad)
fmul
xor
push
xchg
fld
ror
mov
dec
push
dec
and
rol
pop
in
dec
jl
jecxz
movs
adc
mov
ds
leave
div
js
pop
lahf
icebp
retf
clc
xor
rcr
inc
mov
stc
add
dec
mov
xchg
call
mov
imul
adc
sbb
cwde
mov
push
fld
ss
push
aaa
(bad)
outs
mov
dec
and
fwait
mov
mov
xchg
fadd
(bad)
cli
and
neg
lods
sar
shl
mov
int
push
fld
pusha
cli
mov
fs
jg
lahf
add
outs
push
mov
inc
sti
xchg
dec
pop
enter
inc
arpl
shl
nop
mov
ja
adc
mov
cmp
cld
xchg
push
mov
aaa
(bad)
xchg
pop
pop
xor
(bad)
enter
push
jmp
mov
dec
jg
mov
dec
xor
adc
lock
adc
and
fist
in
xchg
mov
pushf
sahf
lea
cmc
out
popf
ret
or
dec
stos
jae
icebp
jb
add
addr16
std
cmps
mov
inc
mov
add
iret
sub
mov
push
inc
or
xor
test
mov
xchg
jo
cmps
in
adc
lds
sbb
outs
sbb
add
xlat
test
idiv
mov
mov
xlat
(bad)
xchg
mov
push
dec
or
xchg
dec
movs
sbb
jo
pop
ja
in
lahf
push
ficom
aaa
push
cmp
mov
fisub
jg
cwde
loopne
jmp
lahf
mov
sub
and
or
ss
and
adc
or
and
inc
les
xor
outs
add
stc
push
mov
ds
or
inc
jnp
inc
ja
push
(bad)
cmps
loop
dec
dec
outs
pop
cli
xor
outs
into
ret
cwde
adc
push
cmp
add
out
xchg
ds
pushf
and
shl
or
cmp
push
sbb
lods
cmp
adc
jb
imul
ins
sahf
int
(bad)
outs
cld
push
mov
iret
mov
add
std
pop
and
push
call
scas
adc
in
xor
(bad)
sbb
sahf
jp
shr
inc
jae
mov
enter
jp
sbb
dec
pop
jns
pop
mov
xchg
jge
push
fistp
imul
mov
push
pop
stos
mov
daa
push
cmc
dec
movs
sti
dec
push
jmp
mov
arpl
jns
and
fs
ds
fld
sahf
jbe
xor
cmc
jno
mov
retf
xor
xor
jecxz
push
jg
stc
xor
add
jp
mov
or
or
imul
push
fs
and
adc
inc
mov
sub
mov
sbb
pop
int
sub
mov
xchg
mov
xlat
in
add
scas
mov
rcr
(bad)
jg
lods
push
pushf
popa
sub
movs
mov
push
inc
outs
pop
aaa
mov
bound
mov
icebp
aad
shl
add
or
std
(bad)
push
enter
jne
add
inc
cld
inc
jno
inc
mov
in
jno
push
jae
jg
sub
pop
pop
jmp
push
xor
dec
loope
xchg
call
adc
je
push
mov
jbe
aaa
mov
mov
or
lahf
clc
jo
push
fisttp
mov
and
xlat
or
pop
sbb
clc
jg
cs
or
inc
cmps
imul
mov
xor
(bad)
dec
outs
pop
dec
dec
(bad)
ror
and
mov
cmp
data16
push
cmc
push
ror
push
mov
jmp
push
mov
in
mov
and
inc
jg
scas
ficom
xor
jo
fbld
ja
xchg
adc
dec
rol
cmp
pop
pushf
mov
cld
loop
mov
add
mov
loope
fscale
sbb
cmp
dec
ret
test
xchg
rcl
cmp
xchg
push
popa
cmps
sub
mov
ins
sbb
xchg
(bad)
mov
leave
add
ins
jmp
(bad)
pop
add
inc
mov
inc
cld
add
xor
cmp
(bad)
repz
dec
cli
cmp
sub
cmps
inc
push
cmp
test
data16
jbe
jns
push
lock
(bad)
in
aam
hlt
add
mov
inc
out
outs
xor
jecxz
push
pop
add
movs
leave
lods
add
cmp
ja
ret
mov
mov
ins
mov
sbb
test
in
clc
adc
outs
jg
and
loop
movs
(bad)
cli
mov
push
cli
jbe
mov
(bad)
jbe
outs
jno
xor
bound
imul
movs
pop
popf
xchg
clc
xor
and
mov
adc
mov
test
loop
aam
loopne
or
shr
out
sbb
add
dec
xchg
addps
mov
or
adc
mov
sahf
and
shl
fcom
es
cmp
test
outs
jns
ficomp
loop
jbe
pop
in
pop
jae
inc
loope
scas
lds
dec
sti
mov
xor
mov
xchg
ds
js
add
xchg
inc
rcl
hlt
dec
mov
lock
lods
inc
outs
sti
push
lock
xor
mov
xchg
aam
mov
and
inc
pop
js
cmp
inc
ret
xor
sbb
and
nop
mov
xchg
adc
inc
in
fidiv
inc
xlat
xchg
mov
cwde
ss
xchg
adc
sub
das
mov
and
stc
cs
cmp
and
push
mov
sub
lods
ss
stos
js
ins
cld
or
sub
imul
(bad)
inc
outs
mov
stos
sbb
sub
mov
leave
mov
push
dec
ret
pop
ret
dec
mov
jmp
in
xchg
jmp
dec
or
lods
loopne
adc
into
sbb
dec
jae
push
dec
cmp
fs
jg
aaa
push
sbb
shl
fisubr
mov
add
inc
ret
xchg
clc
sbb
adc
(bad)
pop
repnz
pop
xchg
(bad)
sbb
fisttp
mov
jne
adc
int3
or
mov
out
stc
fisubr
mov
inc
repnz
aas
add
je
mov
rcr
inc
jmp
mov
das
ds
out
mov
jmp
add
and
push
xchg
jl
cld
sbb
ja
or
jl
jb
pop
jg
in
dec
(bad)
imul
dec
rcr
aas
jmp
xchg
dec
outs
loop
push
adc
jnp
jbe
fdivr
fadd
add
jp
cmp
nop
add
mov
aad
aam
xchg
gs
adc
inc
ins
push
dec
sub
dec
ss
jp
leave
sub
adc
dec
std
sub
div
jp
das
(bad)
lods
pop
xchg
push
inc
int
sbb
stos
clc
retf
pop
test
fisub
fidivr
or
adc
lods
pop
inc
lods
and
mov
stos
fisubr
mov
mov
or
jmp
fs
ret
xor
inc
jnp
fcom
test
retf
pushf
cmp
sbb
mov
jge
movs
xchg
imul
aas
pop
xor
addr16
dec
test
jp
test
test
rol
mov
dec
mov
stc
test
xor
pop
es
adc
call
adc
movs
mov
mov
test
loope
retf
mov
xor
jmp
fmul
es
(bad)
push
push
mov
mov
ins
or
std
adc
(bad)
adc
in
sbb
push
add
sar
loope
adc
sbb
cld
std
scas
jne
sub
push
call
iret
sti
mov
fst
mov
mov
mov
xchg
pusha
xor
popa
and
mov
fnstenv
call
pop
pop
pop
push
mov
fisub
mov
sbb
rol
mov
jecxz
mov
adc
xchg
and
or
in
adc
mov
pop
sub
repnz
or
jge
(bad)
push
cmp
(bad)
xchg
mov
lods
xor
add
push
sub
ins
in
movs
pop
test
dec
test
mov
cmps
or
mov
imul
mov
dec
ss
inc
or
inc
and
mov
mov
fwait
jmp
in
dec
fisub
dec
xor
sub
mov
xchg
mov
mov
xchg
mov
adc
addr16
xchg
scas
fidiv
mov
lds
test
retf
aam
cmps
loope
lods
pusha
mov
bswap
je
je
push
xor
popa
out
test
and
sbb
in
mov
pop
inc
or
pushf
pop
or
cld
push
aam
cmps
sbb
mov
inc
imul
or
int3
cs
adc
inc
push
das
mov
ja
or
ja
test
mov
das
loop
cdq
cli
das
call
shl
shl
stos
sub
cmps
mov
xor
inc
push
xchg
add
pop
js
dec
aad
jge
bswap
cmp
leave
rol
pop
xor
jne
inc
call
shl
rcr
mov
xor
sbb
xchg
fwait
aas
jecxz
lahf
xchg
clc
jecxz
aad
clc
rcl
lahf
sti
arpl
out
inc
scas
enter
mov
loop
call
scas
pop
stos
sbb
xchg
adc
add
sbb
idiv
sbb
or
add
mov
mov
outs
fst
shl
fucom
cmps
inc
outs
add
movs
sub
mov
scas
pop
lods
push
mov
jmp
and
jae
fcomp
xor
pop
call
mov
pop
lods
das
push
xor
in
popa
push
mov
aad
jecxz
jp
jmp
int3
jnp
cmp
jae
call
mov
imul
cmp
mov
mov
pushf
adc
mov
add
cmc
es
jb
test
and
add
leave
jecxz
and
sbb
mov
jecxz
outs
mov
daa
mov
lods
(bad)
lea
xor
push
out
test
mov
xor
add
pop
sbb
jnp
cmp
jo
mov
(bad)
pop
mov
dec
mov
nop
clc
sbb
cld
jp
outs
xchg
lahf
mov
mov
sahf
outs
xchg
push
inc
push
into
dec
xlat
jp
pop
sub
inc
in
and
movs
in
popa
sahf
and
int
inc
xor
stos
mul
cmp
push
jl
mov
jne
ja
or
xlat
stos
mov
push
dec
scas
pushf
sub
add
push
fdivp
jl
in
or
fldenv
dec
nop
mov
fdiv
mov
sbb
imul
arpl
jle
pop
inc
push
dec
sub
push
js
jae
pop
dec
pop
ins
or
out
ror
add
scas
or
js
push
jp
pop
dec
push
push
mov
pavgw
adc
mov
push
in
push
out
es
mov
sbb
addr16
int
aas
lods
js
dec
js
ja
mov
jb
mov
icebp
movs
cld
jl
dec
jb
les
or
sahf
xchg
out
and
mov
ins
lds
pop
jmp
mov
xchg
mov
fimul
mov
mov
int
cdq
cli
sub
mov
iret
sbb
fs
cld
add
and
cdq
mov
pop
jnp
mov
cs
cmc
fst
inc
dec
xor
xor
inc
jno
stc
pop
enter
jne
inc
mov
std
int
pusha
(bad)
dec
movs
cmp
pushf
dec
daa
std
or
adc
adc
xchg
xor
and
ss
xchg
(bad)
ins
jge
push
push
inc
icebp
cmp
int
add
ja
dec
sub
xchg
push
fidiv
and
mov
xlat
sbb
arpl
in
add
mov
in
push
scas
cli
stos
(bad)
push
push
int3
cs
mov
pop
push
dec
dec
loope
fcmovne
push
add
pop
cmps
push
sub
mov
jmp
jns
ins
and
sbb
mov
lock
adc
or
mov
arpl
push
lock
mov
dec
gs
(bad)
pop
jmp
pusha
mov
movs
cmp
vphaddbw
jns
xor
pop
ins
loop
test
popa
mov
in
cmp
inc
aad
cmp
and
aad
stc
clc
mov
scas
mov
add
lods
loope
test
call
sub
mov
or
out
xor
cmps
mov
mov
jno
push
push
cmp
scas
sub
rcr
ins
mov
mov
dec
xchg
lock
test
xor
nop
adc
idiv
in
out
jns
call
lahf
adc
out
jmp
repz
sahf
cwde
shl
ds
mov
adc
in
jno
in
mov
sub
push
and
div
inc
leave
mov
in
bound
fwait
imul
cmp
cmp
mov
cmp
inc
mov
prefetcht0
jmp
and
xchg
mov
sahf
cwde
movs
pop
stc
mov
and
inc
int3
ss
jmp
ret
pushf
mov
pushf
and
jae
cmp
cmp
fs
mov
or
es
dec
push
pusha
add
aam
(bad)
cmp
sbb
mov
cmp
fild
mov
pop
call
sub
adc
outs
adc
inc
setne
and
or
mov
push
cmp
inc
movs
mov
jl
add
scas
add
movs
out
dec
aas
jo
sub
pop
fsubr
add
dec
push
popa
cdq
ss
fdiv
mov
mov
lahf
xor
nop
cld
fidivr
or
xchg
cmp
cmp
test
mov
scas
mov
retf
mov
pop
cld
and
stc
je
cmps
or
iret
adc
and
fisubr
mov
ja
popf
inc
aam
imul
add
add
iret
jecxz
xlat
loopne
adc
scas
inc
les
pop
mov
mov
pop
(bad)
adc
retf
mov
mov
lea
dec
pop
push
fsub
add
adc
inc
stos
inc
in
jbe
test
xchg
cmp
adc
ja
mov
add
enter
jg
dec
lea
(bad)
loope
jmp
pop
push
pop
cs
nop
pop
test
retf
movs
hlt
xchg
daa
push
fisub
push
shl
sub
dec
retf
push
xchg
inc
inc
push
xchg
sbb
push
movs
mov
mov
idiv
in
loopne
dec
mov
imul
fist
int3
add
jle
push
sbb
mov
sbb
lods
mov
pop
mov
aad
cmp
mov
jmp
out
pop
mov
xchg
pop
clc
pusha
xor
cs
test
sub
pop
aad
adc
xor
dec
loopne
fdivr
ss
sbb
dec
push
mov
and
push
mov
outs
scas
xchg
cmp
sub
jecxz
push
mov
popa
push
mov
push
scas
(bad)
or
or
ss
fcom
repnz
add
push
rol
scas
cmps
(bad)
jp
cmps
inc
cmp
je
add
xchg
sbb
sub
jp
and
xchg
sub
push
neg
jno
push
out
pop
xor
jmp
mov
add
push
xor
cmp
xlat
(bad)
retf
add
push
fmul
pop
adc
sar
jns
out
pop
jae
jmp
mov
je
(bad)
dec
sub
add
pop
lods
jmp
jmp
call
mov
mov
icebp
and
mov
fwait
xor
xchg
inc
popa
popf
pop
inc
(bad)
mov
cld
mov
icebp
push
mov
aam
mov
movntps
mov
sub
shl
xchg
ret
test
xor
pop
movs
aaa
cmp
idiv
or
mov
ss
adc
mov
push
dec
ja
pop
cmps
xchg
je
pop
es
jnp
xchg
arpl
add
mov
dec
cmp
ds
in
push
das
push
mov
cmp
cmps
ret
pop
je
popa
and
lods
jecxz
jae
rol
ds
sbb
push
call
dec
pop
nop
imul
pop
jmp
inc
dec
rcl
inc
mov
jne
jg
sub
out
fcom
sbb
call
or
or
inc
pop
add
cmps
and
(bad)
cmp
sbb
dec
pop
mov
loope
aas
mov
mul
je
and
cdq
push
loop
cmp
ficomp
mov
in
ds
test
jge
ja
dec
mov
pop
mov
mov
ins
(bad)
mov
or
stc
sahf
and
mov
outs
lock
and
pop
or
rcr
add
cmp
xchg
sar
sub
dec
movs
adc
dec
mov
clc
jecxz
mov
ins
xor
inc
add
cmp
and
out
(bad)
aam
lahf
xlat
call
cmps
dec
out
push
adc
sbb
aaa
lods
adc
shl
sub
xchg
(bad)
and
cmps
shl
sbb
das
inc
push
hlt
mov
nop
push
not
es
or
js
imul
ds
outs
fwait
aam
mov
fild
(bad)
jne
or
and
in
in
ins
jmp
and
jns
fmul
push
es
add
sbb
test
mov
sbb
cmp
sub
(bad)
fist
push
add
mov
test
ret
jmp
data16
xor
add
xchg
daa
mov
fdivr
dec
aam
scas
jecxz
std
cmp
pushf
push
enter
sbb
stos
rcr
push
jl
out
sbb
dec
or
mov
sub
stos
jl
jl
and
ja
retf
pop
mov
jp
mov
mov
and
sbb
sbb
dec
inc
pop
clc
out
sub
loopne
pop
pop
imul
icebp
mov
mov
cmp
fbstp
push
adc
inc
mov
inc
dec
bound
dec
mov
clc
ja
test
push
scas
add
jmp
les
repnz
add
adc
inc
in
add
fwait
ss
call
mov
iret
xor
inc
push
popf
nop
std
pop
pop
jl
add
ds
cmps
and
jb
inc
dec
xor
ret
retf
pop
jle
mov
aad
dec
lods
cmp
clc
mov
xchg
out
dec
xchg
cdq
test
ds
inc
mov
dec
push
pop
(bad)
mov
inc
sar
xchg
pop
jge
and
xor
and
shl
std
cmp
push
or
mov
xchg
stos
call
je
loop
movs
mov
mov
aaa
pop
lds
stc
(bad)
push
loopne
(bad)
sub
ds
mov
cmp
xlat
dec
test
mov
inc
stos
mov
inc
add
pop
ss
mov
and
sbb
jno
mov
add
pop
dec
push
enter
sub
lock
(bad)
loop
stc
inc
out
test
xchg
xor
aad
cmp
xchg
cmp
mov
fmul
pop
xor
arpl
mov
sbb
and
inc
mov
jecxz
je
xchg
pop
add
push
and
imul
inc
movs
(bad)
pop
mov
loopne
xchg
shr
arpl
cmp
in
jmp
mov
mov
pop
outs
sub
inc
sbb
inc
sahf
not
retf
sbb
cmps
jp
xor
into
std
pushf
pop
jle
stos
(bad)
repz
and
xor
jo
dec
icebp
out
add
and
cmp
loop
repz
jp
(bad)
pusha
inc
and
call
or
fbld
dec
loope
adc
(bad)
repz
dec
xchg
fisttp
call
push
repnz
icebp
nop
aas
adc
add
jl
sub
(bad)
mov
int
jb
xchg
ins
nop
push
js
jne
or
ja
nop
xchg
aaa
test
inc
repnz
push
or
int3
cwde
popf
cli
ss
mov
fild
loopne
adc
ror
sbb
mov
dec
fsub
fist
mov
repz
test
hlt
cmp
mov
pop
test
retf
push
mov
(bad)
mov
mov
and
fild
and
sbb
mov
inc
cmps
push
and
popa
jbe
cmps
mov
and
call
mov
jnp
popf
scas
(bad)
mov
ror
fwait
and
cmc
add
adc
cwde
fistp
xor
mov
adc
jno
cmps
pop
div
jl
sbb
push
movs
leave
or
dec
jns
xlat
cmp
mov
jmp
out
inc
addr16
leave
add
aad
and
or
cmps
sahf
adc
ret
inc
or
aam
mov
in
add
sub
jbe
mov
push
inc
push
movs
jmp
test
jb
shr
inc
jae
sbb
inc
mov
sub
lea
jmp
ja
shl
aam
mov
xchg
arpl
dec
jecxz
fistp
arpl
shr
ror
jmp
sbb
inc
popf
outs
sbb
ins
sub
shl
fbstp
sub
add
lds
cmp
jae
cmps
or
and
mov
mov
cmp
mov
clc
add
inc
mov
jne
cld
add
fisttp
aas
out
aaa
in
adc
or
jae
push
mov
arpl
inc
std
ret
stos
mov
imul
cwde
inc
stos
ja
ds
loop
sub
arpl
lds
mov
or
(bad)
gs
mov
fst
adc
push
xchg
pop
xor
inc
cmp
lods
mov
inc
push
xor
test
xchg
imul
(bad)
arpl
mul
lahf
adc
leave
cmp
jle
jns
push
cmp
push
mov
push
fiadd
push
leave
jbe
movs
xor
iret
ror
sub
push
inc
mov
repz
xor
mov
push
data16
fiadd
push
fdivr
(bad)
fstp
cs
push
movs
cmp
aad
test
das
(bad)
push
sub
mov
das
cmp
in
js
xchg
stc
fistp
push
push
jo
int3
nop
call
add
jbe
pop
test
xchg
stc
mov
dec
jle
jo
add
fimul
mov
sub
and
cs
stos
sub
js
xchg
adc
jecxz
mov
dec
enter
cmp
jg
sub
jp
in
cmp
adc
sub
push
and
call
and
mov
lock
cmp
xor
jge
or
and
xchg
mov
dec
das
shl
adc
test
mov
dec
rcr
iret
add
cmc
mov
mov
xor
sar
shl
sbb
jbe
or
adc
cmp
push
xor
ja
lock
test
outs
xor
pushf
fwait
dec
in
pop
or
push
outs
dec
je
dec
sub
fld
sub
jmp
loope
cdq
adc
add
mov
inc
xor
sti
mov
push
jmp
daa
push
xchg
cmp
aam
mov
sub
xor
mov
(bad)
not
stos
daa
sbb
imul
(bad)
mov
into
(bad)
pop
test
xchg
add
arpl
rol
mov
jmp
push
shl
jl
jecxz
or
sbb
movs
repz
imul
sbb
and
jns
dec
ins
xchg
sub
(bad)
retf
xlat
add
mov
bswap
jbe
mov
add
(bad)
jae
jbe
xchg
mov
sub
sbb
mov
(bad)
cmps
and
imul
cbw
stc
cmp
cmp
lea
sub
(bad)
jbe
lahf
xor
push
xchg
and
pop
adc
ret
inc
ins
mov
cli
add
ds
or
nop
iret
push
adc
and
cld
pop
push
js
adc
retf
dec
and
pop
add
mov
inc
aas
fistp
and
mov
jbe
into
(bad)
push
or
fisub
js
retf
fwait
mov
inc
push
shr
cmc
repnz
cmps
xchg
loop
out
and
inc
cdq
neg
pusha
out
rol
inc
inc
popf
cmp
shl
aad
addr16
ins
push
pop
cli
retf
add
mov
mov
out
cs
jo
les
xchg
out
jo
push
(bad)
inc
and
dec
cmp
(bad)
not
icebp
or
shr
test
adc
lahf
lds
hlt
aam
add
sbb
pop
test
stos
add
adc
xor
sbb
repnz
mov
xlat
mov
pop
ins
push
sbb
stc
(bad)
fimul
(bad)
pop
rcr
cmc
add
test
pop
in
add
fcomp
adc
out
and
test
cmp
pop
mov
fidivr
and
cwde
jmp
jnp
push
jle
fcomi
hlt
ins
out
loopne
sbb
add
jmp
adc
mov
rol
jb
or
mov
arpl
stc
push
add
ror
mov
push
cmp
jb
mov
xor
outs
outs
aas
jp
mov
fidivr
ret
xchg
aaa
fnstsw
xchg
(bad)
dec
mov
mov
stos
mov
pop
inc
inc
pusha
in
mov
xchg
dec
(bad)
cmp
sti
ins
pop
cdq
js
or
(bad)
shl
loopne
fwait
and
cwd
adc
sub
adc
leave
loope
adc
sbb
sti
outs
sub
or
cld
movs
jecxz
call
aas
push
mov
ret
mov
mov
loopne
mov
jp
outs
sahf
dec
mov
ins
jmp
popf
push
jae
in
xor
neg
dec
inc
pop
or
xlat
leave
scas
inc
xchg
pop
outs
xor
aam
scas
popf
mov
cmp
mov
ficom
xor
ins
(bad)
dec
push
sub
jl
pop
popa
xor
sar
(bad)
adc
xor
mov
fdivr
sbb
outs
mov
mov
and
xor
dec
sub
xor
push
in
imul
xor
cwde
cli
push
fistp
xchg
imul
lds
pusha
popf
pop
hlt
pushf
xchg
ret
mov
ror
pop
cmps
dec
in
sbb
cdq
mov
push
or
dec
sbb
in
sahf
sbb
jno
adc
or
hlt
and
test
push
inc
callw
mov
xchg
or
and
xchg
les
sub
mov
lea
mov
push
scas
ror
sbb
xchg
xor
mov
sbb
xchg
aad
mov
and
(bad)
(bad)
adc
sbb
sub
dec
aad
adc
add
and
shl
retf
movs
cmp
movs
jmp
xor
mov
xchg
jmp
call
sbb
sub
adc
neg
fiadd
xor
jo
push
add
sbb
out
inc
xchg
inc
xor
pop
ficom
sub
ret
dec
jb
js
ja
fisubr
mov
pop
add
fild
cmp
mov
pop
adc
dec
lea
sar
icebp
xchg
(bad)
das
mov
add
mov
fcomp
or
or
cmp
mov
or
xor
aad
pushf
push
in
xchg
movs
cmp
cmp
scas
or
sub
scas
mov
ret
pop
ror
call
xor
pop
imul
cmp
test
sub
daa
xchg
inc
pop
jg
lea
dec
pushf
xadd
iret
out
test
and
repnz
xchg
sub
push
jnp
jl
loope
jl
les
es
pop
loopne
sub
sbb
call
push
xlat
stc
(bad)
daa
dec
dec
imul
push
mov
js
mov
dec
fisubr
pushf
push
aam
inc
xor
pop
(bad)
imul
lods
xchg
add
cmp
add
add
test
mov
add
sar
enter
out
in
xchg
dec
sub
or
enter
adc
retf
mov
inc
add
xlat
loope
sub
xchg
(bad)
xor
int
xchg
cmp
icebp
mov
lds
fsubr
push
mov
aaa
stos
add
xlat
loop
add
clc
xchg
ins
daa
cs
or
inc
int3
loope
clc
xor
mov
js
push
mov
pop
sar
push
ja
and
mov
xchg
cwde
inc
popa
scas
idiv
pop
repz
fidivr
in
mov
(bad)
arpl
jge
shr
xor
dec
jl
sbb
fdivr
or
scas
push
xchg
jle
mov
and
sbb
jb
ins
jo
test
loope
sub
jne
inc
add
adc
mov
push
xchg
ficom
iret
mov
mov
arpl
cmc
push
pushf
jp
push
int3
ret
sti
cmp
(bad)
(bad)
sbb
cmp
dec
sub
or
fisub
push
mov
loop
push
add
pop
sar
stos
adc
pop
cld
jb
sbb
jnp
mul
mov
dec
dec
adc
add
push
sbb
sbb
in
leave
mov
and
or
jmp
popa
fidiv
leave
fcom
shr
xor
clc
xchg
add
pop
add
imul
jl
xor
mul
add
xchg
jle
push
lds
sub
ret
xlat
pop
scas
or
pop
inc
cs
and
sbb
(bad)
and
push
adc
mov
imul
out
cwde
pop
cwde
mov
jne
pop
int
outs
dec
fiadd
loop
shr
push
inc
pop
lods
rol
fidivr
xchg
je
cmps
cmps
dec
fsubr
nop
fidivr
icebp
adc
cmp
fstp
enter
add
and
enter
inc
dec
or
or
ret
cld
push
(bad)
lds
inc
out
(bad)
sbb
inc
xchg
pop
or
ins
mov
xchg
xor
test
mov
(bad)
enter
cmp
in
jle
mov
xor
popa
xor
lea
movs
push
cmp
sbb
test
call
jno
(bad)
imul
int3
dec
call
hlt
push
pop
jle
gs
fdiv
shl
test
out
aad
jle
jg
cmp
pop
jecxz
ficom
sub
add
or
mov
adc
xchg
xor
and
popf
and
lods
xor
ds
pop
ja
jge
or
scas
xchg
dec
xchg
das
dec
rol
outs
sub
fldcw
fcomp
adc
sbb
test
ja
fs
xlat
(bad)
shr
std
retf
ds
rcl
mov
or
jb
xlat
add
aam
inc
sub
push
sub
fs
inc
(bad)
mov
pop
ja
lahf
inc
pop
push
les
shl
sub
sar
mov
scas
or
jne
jl
jge
cs
fdiv
fs
pusha
cdq
pop
mov
mov
adc
repnz
int
fldcw
pop
aad
jo
jg
sbb
mov
test
and
outs
movs
sbb
sub
pop
rol
scas
or
xchg
add
fmul
mov
xor
jb
mov
lock
jge
dec
mov
and
sub
mov
loopne
dec
sbb
mov
ins
mov
aas
mov
aaa
mov
or
mov
test
adc
mov
mov
rol
pop
adc
dec
and
inc
and
call
cmc
enter
mov
leave
pop
ret
sub
pop
(bad)
das
scas
out
mul
sahf
add
aad
lahf
mov
std
cmp
pop
ds
cmp
lahf
nop
xchg
shl
mov
and
repz
call
movs
lds
adc
nop
xchg
cdq
push
inc
xchg
pusha
fisub
sahf
cmp
jp
fcom
addr16
pop
(bad)
add
das
mov
(bad)
ss
mov
xchg
call
jl
inc
dec
pop
in
hlt
inc
ja
and
loope
xchg
sti
inc
cmc
imul
je
mov
out
mov
mov
aaa
mov
out
aas
adc
mov
sbb
dec
xor
icebp
mov
or
mov
imul
(bad)
out
jmp
dec
arpl
sbb
inc
popa
or
push
jns
inc
xchg
jl
push
jns
sbb
ins
cs
xor
dec
push
mov
fcmovne
dec
and
push
jg
mov
dec
push
out
dec
into
in
sbb
out
(bad)
push
inc
cmps
fcmovne
mov
fwait
sti
into
or
mov
or
push
mov
ds
retf
aam
and
xchg
xchg
dec
popa
cmp
push
mov
test
pop
xchg
(bad)
sar
shl
dec
inc
cmc
adc
sbb
adc
fild
xlat
push
add
xor
xchg
hlt
sar
pop
mov
push
jmp
cwde
addr16
adc
retf
mov
test
test
push
xor
in
jo
fdivr
jmp
sbb
xor
in
iret
sub
(bad)
pop
les
cmp
ret
stos
mov
mov
jle
xchg
in
xchg
push
mov
pop
dec
rcl
test
push
jge
sbb
mov
test
std
fwait
not
mov
lock
mov
ret
xchg
sbb
pop
jbe
add
addr16
cli
stc
mov
mov
mov
mov
mov
sbb
xchg
ja
pop
dec
dec
inc
mov
daa
jp
ficom
sar
daa
xlat
jmp
inc
inc
sbb
xor
push
dec
cmp
sub
stc
dec
mov
xor
test
scas
xchg
out
jle
dec
cdq
or
repnz
jo
rcl
inc
dec
push
pop
lahf
lea
shr
mov
mov
outs
rcl
xchg
jle
mul
push
mov
and
hlt
dec
push
sbb
jp
push
mov
dec
rol
jns
adc
aaa
dec
jno
mov
lods
push
and
fs
mov
adc
xchg
jo
add
into
aaa
inc
dec
push
enter
add
mov
push
out
call
sbb
in
xor
daa
or
jae
daa
cmp
aad
into
push
in
xor
xor
les
sub
push
das
jge
or
sub
hlt
std
cmp
mov
addr16
in
adc
add
push
lods
mul
cwde
or
mov
mov
push
call
cli
arpl
ficom
fsubr
pop
add
mov
les
repnz
or
ins
or
inc
ret
dec
mov
and
xchg
outs
das
call
inc
fs
xor
stc
gs
or
push
das
or
sbb
ja
inc
sub
aas
fwait
js
push
shl
jns
iret
inc
xchg
mov
fmul
imul
popa
cmp
dec
out
and
lods
mov
cmp
cmp
sbb
cmc
aas
lods
aam
jbe
inc
(bad)
test
and
xor
xchg
iret
sub
in
bound
adc
les
xor
sub
mov
or
ins
xor
jnp
std
std
lea
sub
dec
ins
push
cli
mov
enter
stos
xor
mov
retf
sbb
push
jp
icebp
jmp
or
xor
loop
rcl
stos
xchg
cmc
inc
aaa
sub
mov
repnz
stos
push
xchg
gs
mov
inc
and
xchg
sub
iret
jmp
adc
in
arpl
sub
xchg
pop
iret
lds
jl
inc
adc
dec
mov
jge
dec
and
shl
dec
jns
xchg
push
mov
dec
mov
aam
out
aam
inc
movs
out
push
xchg
push
repnz
(bad)
jecxz
std
imul
arpl
dec
loopne
call
adc
(bad)
int
pop
add
inc
fdiv
stos
inc
push
jmp
leave
dec
outs
xchg
imul
cmp
sub
out
fldcw
cmp
fcom
fldenv
or
xor
add
sub
jne
push
fst
test
daa
in
repz
outs
jmp
pop
mov
cmp
div
sub
stos
xchg
aad
xor
test
retf
lock
sub
cli
pusha
test
movs
jg
sub
fst
ja
xor
je
test
xchg
sbb
mov
and
nop
fisttp
dec
repnz
add
inc
(bad)
in
pop
dec
push
aaa
cmps
into
test
sbb
mov
jo
jmp
es
(bad)
xor
xlat
add
fdivr
mov
daa
xor
pop
xchg
dec
jecxz
into
stos
sbb
mov
inc
iret
xor
inc
inc
nop
js
cmp
ror
dec
bound
jecxz
cwde
xchg
cmps
inc
add
cmps
daa
mov
xor
cld
push
popf
sub
xchg
test
mov
add
adc
mov
shl
jno
out
push
mov
dec
out
cmp
add
outs
repnz
sub
jbe
pusha
mov
push
aad
pop
arpl
popf
stos
test
cld
push
push
add
arpl
mov
jo
es
lds
fisubr
inc
mov
inc
out
(bad)
mov
sub
jp
adc
xor
hlt
dec
in
cmp
add
push
repz
fcom
cmp
mov
sbb
push
mov
jp
idiv
jo
call
or
fs
xchg
mov
mov
imul
cwde
lea
test
xor
mov
adc
test
(bad)
scas
in
repz
mov
inc
ret
cwde
loope
fisttp
mov
or
scas
fs
bound
push
call
push
mov
shl
jnp
sbb
lds
mov
mov
jmp
in
cwde
gs
cli
xor
add
scas
pop
sub
mov
(bad)
aam
pop
rcl
out
fisttp
mov
in
jb
add
sub
mov
dec
add
push
dec
imul
(bad)
jecxz
cmp
movs
xchg
fsubr
fbld
ds
(bad)
mov
js
retf
sub
addr16
(bad)
xor
xchg
cmc
pop
jnp
pop
int
sub
cmps
test
retf
xor
mov
mov
push
cmp
mov
(bad)
xor
and
enter
mov
mov
test
xlat
pop
xor
stc
test
aad
stos
lods
std
(bad)
jle
inc
lock
stos
cmp
daa
cmp
repnz
iret
ins
push
call
(bad)
sbb
cmps
adc
adc
lock
and
push
push
je
in
push
push
mov
add
hlt
inc
popa
jns
inc
fisub
mov
dec
pop
pop
mov
sub
clc
aam
push
push
and
or
xchg
je
sub
adc
pop
push
aaa
mov
or
fcom
repz
les
sti
add
and
retf
mov
lds
cwde
int
cmp
repz
sub
xchg
push
test
mov
inc
cmps
push
pop
dec
push
pop
jne
ret
xchg
xor
aad
in
jmp
xchg
push
push
cmp
pop
cs
aad
cld
or
stos
xchg
es
(bad)
retf
xor
ss
ret
(bad)
xor
test
push
das
dec
xor
shr
sahf
xor
fsubr
aas
sbb
jmp
imul
push
ret
or
aas
movs
jae
jne
jmp
int3
enter
cli
sbb
push
arpl
xchg
jmp
inc
addr16
(bad)
or
lea
call
into
or
(bad)
sti
std
xor
mov
pop
or
fsub
dec
test
sbb
push
and
js
ins
addr16
(bad)
sub
push
xlat
pop
imul
sar
lock
xlat
and
icebp
mov
mov
and
cwde
add
outs
cmc
mov
adc
aaa
fiadd
repz
aaa
pop
out
mov
jo
mov
xor
scas
mov
push
ja
jl
scas
dec
cli
push
sbb
ret
shl
scas
push
je
push
xchg
pop
or
cdq
or
repz
outs
sub
dec
sub
xchg
mov
mov
jp
jnp
test
int
dec
cmp
lahf
jge
rcr
cmps
cmp
dec
out
push
sub
and
aad
cmp
test
xchg
inc
out
inc
push
sub
in
add
les
mov
data16
inc
push
stos
inc
jp
cmp
cli
mov
fs
jp
(bad)
in
inc
pusha
mov
out
jecxz
sbb
jb
pop
leave
cmc
adc
cmp
sbb
out
dec
add
scas
jp
int
call
push
rol
adc
xor
je
fadd
pop
jl
in
pop
shl
lds
xchg
push
sub
jno
lahf
sub
add
push
or
push
aaa
fbld
push
xchg
push
loope
shl
cs
mov
pop
sub
cwd
mov
fidivr
int3
cmp
inc
jb
into
jge
mov
xor
or
sub
adc
xor
adc
cdq
xchg
stc
mov
mov
int
loope
jmp
and
iret
div
test
ret
cmp
cmp
dec
dec
adc
(bad)
sub
ins
dec
push
cli
inc
push
les
rcr
xchg
pop
fadd
out
ss
imul
mov
int
daa
inc
stc
rol
sbb
jns
xor
stos
jbe
push
in
js
push
cmp
aad
dec
sub
loop
push
retf
inc
icebp
dec
sbb
push
stos
push
mov
call
dec
and
imul
hlt
call
push
jb
dec
inc
les
jg
or
push
pop
pop
push
push
fld
mov
cmp
mov
sub
inc
in
inc
push
gs
push
movs
imul
adc
add
(bad)
push
dec
hlt
ror
jmp
jmp
call
mov
mov
(bad)
clc
ins
or
or
test
pop
(bad)
(bad)
push
vmwrite
ins
(bad)
pop
hlt
pop
mov
cmp
pop
in
sub
inc
mov
or
sbb
dec
cmp
lea
mov
shr
cmp
mov
push
sahf
pop
xchg
sbb
push
add
mov
sbb
push
jmp
and
add
cwde
bound
sbb
mov
fwait
or
ror
dec
jl
dec
imul
ins
or
loope
stos
ret
cld
mov
retf
sbb
shl
push
ror
push
cdq
in
dec
repz
mov
repz
loop
into
sbb
mov
sbb
jmp
pusha
mov
xchg
add
adc
xchg
lahf
test
mov
btr
icebp
jge
lods
scas
lea
outs
adc
adc
(bad)
hlt
lds
fwait
in
jns
jnp
out
das
(bad)
mov
mov
push
je
ins
add
ins
push
dec
fdivr
ret
out
leave
pop
cmc
gs
je
iret
dec
dec
ror
xchg
xchg
jae
adc
mov
int
gs
xchg
ror
pop
sbb
int3
fwait
cmp
cmps
cmp
xchg
xchg
aam
loope
mov
(bad)
and
mov
xor
lods
or
xor
fxtract
hlt
jle
rol
sub
shl
ret
(bad)
mov
or
pushf
cwde
cld
leave
(bad)
xor
loope
or
mov
mov
in
pop
out
(bad)
mov
ins
push
out
rcl
mov
ds
adc
jg
ds
fstp
adc
dec
push
rol
xor
sar
lods
inc
push
mov
or
inc
xchg
jbe
push
and
in
call
rcl
or
jg
arpl
cwde
fcmovb
xor
jnp
scas
mov
sub
xchg
(bad)
fcmovbe
out
in
or
neg
pop
mov
dec
cdq
sbb
xchg
jmp
mov
imul
je
enter
inc
xor
add
xchg
stc
cmps
test
mov
je
rcl
mov
pop
xchg
aad
sbb
ret
xchg
data16
and
dec
cmps
xor
xchg
jnp
mov
pop
jp
mov
mov
cmc
inc
fsub
pop
icebp
sbb
push
int3
mov
repnz
popf
xchg
xchg
sbb
fadd
adc
jns
(bad)
xor
cmc
imul
stos
jle
in
pop
sbb
or
dec
and
movs
ja
xor
lock
add
xchg
sbb
fldenv
add
es
xor
push
mov
test
dec
dec
into
arpl
push
and
mov
jb
sub
sub
cmp
sahf
adc
aad
mov
(bad)
xchg
cmp
and
(bad)
mov
push
pusha
mov
neg
pushf
cld
sub
push
add
fcomp
fistp
cmp
inc
add
mov
inc
cmps
sbb
out
rcr
pop
jb
push
mov
cmp
add
pop
loop
xchg
int
jp
je
inc
xchg
in
dec
cwde
mov
jns
leave
fs
gs
inc
and
inc
add
xor
je
outs
and
push
cli
mov
int3
pop
popa
adc
xor
cmps
mov
pop
(bad)
fdivr
lea
das
fistp
aaa
push
test
into
jnp
ins
aas
shr
xchg
jg
cmps
xlat
bound
xor
push
xchg
jl
xor
xor
jb
popf
sti
add
adc
mov
push
leave
mov
push
aas
inc
push
jae
mov
jge
sbb
pusha
dec
test
pusha
out
adc
loop
lock
(bad)
movs
repz
push
and
xor
mov
jg
pop
daa
movs
call
and
fwait
sbb
xchg
mov
lahf
rol
mov
jns
add
sar
jae
movs
dec
test
xchg
mov
add
jl
inc
pop
ins
(bad)
dec
loope
mov
retf
xchg
clc
pop
sub
mov
lea
pop
pop
mov
repz
ins
ror
(bad)
push
pop
bound
dec
fst
jnp
inc
test
inc
aaa
nop
cmp
sub
xlat
xchg
fbld
sahf
jb
inc
cmps
push
adc
sub
int3
jb
cmps
outs
lods
mov
xchg
pop
out
xor
adc
dec
inc
jle
gs
aaa
cmp
push
adc
inc
sub
clc
shl
dec
jnp
retf
mov
mov
inc
xchg
scas
pop
out
or
ins
jmp
movs
push
cs
out
popa
push
push
jg
adc
stos
int3
stos
stos
push
lods
push
call
mov
sub
sub
mov
ja
fld
push
dec
push
mov
sbb
dec
jbe
mov
xchg
pop
xchg
mov
push
(bad)
(bad)
lahf
pusha
adc
bnd
and
or
es
jns
ins
pop
mov
test
mov
push
cwde
mov
popf
fimul
cmp
bound
jmp
retf
int
int
mov
hlt
imul
jmp
jno
lods
in
push
sbb
inc
test
inc
fadd
mov
xchg
sbb
daa
mov
scas
div
sbb
pop
outs
jge
inc
int
xchg
(bad)
outs
sahf
pop
call
ins
sti
mov
test
shl
sbb
xchg
inc
push
dec
rol
jb
push
dec
sub
jne
and
test
push
cmp
or
and
mov
push
(bad)
das
push
aad
jle
fs
pop
mov
sub
aam
xor
(bad)
xor
jb
sub
nop
xor
retf
out
test
ins
mov
mov
adc
cs
popa
dec
mov
push
mov
aaa
sub
cld
pusha
add
jo
aas
cld
dec
mov
xchg
inc
push
aad
repz
fs
rol
dec
jl
loope
xchg
mov
push
iret
leave
push
stos
sar
gs
xor
out
jl
jb
aam
pop
stc
outs
push
push
mov
xor
shl
aam
stos
out
jl
cwde
std
mov
mov
push
add
(bad)
mov
out
mov
daa
je
neg
ror
(bad)
sti
dec
cmp
(bad)
mov
aaa
jb
scas
std
xchg
aaa
inc
lock
sub
push
sub
or
mov
xor
cmc
inc
(bad)
cmp
lds
jne
test
push
aad
mov
inc
fist
mov
mov
(bad)
or
add
inc
jl
cmps
adc
push
mul
jp
inc
mov
adc
popf
or
sub
push
lea
or
shr
movs
or
repnz
jle
inc
mov
sbb
mov
loop
out
push
fiadd
ror
xchg
jb
jmp
jbe
mov
test
scas
movs
and
push
mov
inc
xchg
jg
jno
(bad)
jmp
adc
jns
icebp
xor
retf
int
fst
jmp
add
mov
jge
jg
call
call
mov
in
out
scas
mov
aam
scas
in
dec
mov
fwait
popf
aam
bound
das
in
jecxz
outs
and
inc
or
out
int
sub
fwait
jb
ret
clc
popa
add
or
dec
in
jle
pop
test
mov
push
sbb
cmps
xor
push
ds
imul
cmp
cmps
test
push
xchg
in
cmc
inc
aam
xchg
inc
(bad)
cmps
jae
icebp
outs
inc
cmps
pop
mov
mov
sti
add
fist
pop
pusha
leave
icebp
mov
inc
fwait
ror
jo
out
mov
sub
scas
mov
out
call
aad
cmp
js
pop
neg
jne
xchg
jae
push
stos
fdivr
sub
or
mov
xchg
xchg
cdq
mov
jl
or
ret
add
dec
sub
or
int
xchg
or
(bad)
fiadd
popa
sub
inc
ins
mov
adc
push
aad
call
pop
sub
scas
pushf
cmp
mov
out
(bad)
addr16
mov
cmp
test
shl
add
test
xor
mov
out
mov
ss
and
icebp
xchg
lock
jmp
push
add
stos
sti
repz
ja
outs
lock
push
xchg
mov
or
dec
pop
xor
cdq
dec
mov
adc
sub
push
sbb
sbb
(bad)
cmps
out
mov
jo
jbe
pop
pop
ffreep
leave
adc
push
enter
pop
xchg
gs
inc
sub
jecxz
test
cmps
inc
mov
fdiv
lods
cmc
inc
pop
ss
cmp
mov
push
dec
dec
les
test
shr
adc
jne
push
je
data16
out
leave
cwde
pop
outs
popf
or
out
cs
sti
mov
sbb
test
pop
push
add
sahf
jle
stc
cmp
popa
lock
(bad)
sbb
inc
add
mov
ja
scas
pop
adc
inc
and
pop
leave
cmp
jns
xchg
data16
lods
scas
mov
pop
add
add
fistp
pop
mov
shr
cld
add
dec
or
xchg
sbb
sub
jl
mov
mov
dec
mov
div
mov
adc
test
pop
stos
and
popa
pop
cmps
sbb
rol
sbb
(bad)
mov
add
inc
leave
jno
shl
sub
and
(bad)
push
das
outs
retf
jmp
cwde
nop
sub
pop
stc
fsubr
iret
and
sbb
lock
mov
push
sar
shl
or
xchg
ins
shr
inc
pop
jle
fist
xor
mov
jne
(bad)
ficomp
and
adc
scas
mov
test
ins
xor
cmp
out
pop
ror
jbe
test
push
out
fsub
aaa
(bad)
nop
jb
mov
mov
pop
les
add
mov
lds
dec
aas
les
fstp
adc
xlat
fsubr
and
or
pop
jns
test
aas
dec
stos
sub
cmp
cmps
fld
nop
pop
ror
cmps
jmp
es
add
loope
jl
in
lea
add
popf
test
movs
jns
ficom
and
shl
addr16
xor
popf
dec
(bad)
or
daa
popf
cmp
add
cmp
gs
sbb
stc
cmp
mov
mov
add
addr16
movs
or
or
add
and
pop
ret
and
ins
jns
mov
dec
mov
ror
mov
dec
mov
rcl
dec
std
out
push
cs
xchg
iret
pop
leave
mov
xor
cmp
hlt
adc
into
mov
jmp
retf
pop
push
fbstp
mov
inc
push
leave
stos
fadd
adc
clc
inc
shl
sub
pusha
xchg
sub
in
mov
xlat
jne
push
(bad)
loopne
inc
pop
dec
xchg
rcl
mov
pop
sti
sahf
enter
test
aas
cmp
and
in
outs
inc
sub
jne
pop
add
adc
push
mov
ss
(bad)
mov
push
and
jne
imul
aas
pop
dec
ret
aam
cs
scas
popa
js
mov
fist
cmp
gs
push
popa
fcom
xchg
xchg
mov
(bad)
cmp
sub
adc
aaa
shr
xor
mov
push
ja
fnstenv
aad
sbb
jmp
sbb
lss
lds
push
adc
dec
dec
ret
jmp
repz
cdq
pop
mov
push
dec
push
clc
dec
aam
mov
shr
es
int3
jbe
mov
dec
inc
cs
or
call
xlat
dec
inc
dec
cmp
jl
mov
push
adc
div
in
int3
fisttp
lock
std
(bad)
sub
movs
dec
push
or
retf
jo
ret
or
retf
and
jg
push
inc
sbb
jmp
ins
ja
cmp
adc
(bad)
ficom
jmp
and
ins
inc
cmc
pop
in
popa
pop
add
mov
mov
xchg
sub
fcomi
scas
lds
push
fsub
push
das
mov
jmp
adc
leave
push
aad
mov
lahf
pop
(bad)
xor
add
data16
cmp
movs
jl
out
add
push
push
mov
mov
popa
leave
out
push
cs
call
xor
js
out
or
mov
sahf
mov
loope
fadd
cdq
outs
imul
inc
rol
and
mov
mov
add
jmp
sahf
add
sbb
in
mov
xchg
or
xor
cmp
jnp
mov
mov
xor
sbb
or
daa
add
mov
jnp
lea
add
pop
adc
jge
lods
pop
shr
fild
mov
pop
es
jmp
lahf
push
shl
in
pop
lods
pop
push
icebp
test
push
addr16
outs
xor
mov
xlat
push
inc
in
in
fwait
sahf
mov
adc
lahf
aad
add
hlt
cmps
cmc
out
outs
pop
sbb
push
in
test
pusha
push
pop
cmps
jmp
xchg
sub
mov
mov
div
inc
sar
sub
add
xor
adc
pop
ss
daa
test
shl
mov
enter
xlat
xor
cdq
pop
pop
or
aaa
push
push
retf
sar
cmc
dec
rcr
repnz
shl
dec
arpl
div
imul
pop
movs
xchg
ficomp
jae
and
sub
retf
jb
inc
shl
jmp
cmp
pop
mov
(bad)
(bad)
jp
iret
paddb
mov
jecxz
retf
out
jns
in
sbb
aam
rcl
fwait
pop
daa
inc
dec
inc
enter
(bad)
(bad)
sub
or
jns
mov
mov
inc
cmp
mov
mov
in
inc
mov
pop
xor
movs
je
mov
xor
iret
sub
cdq
(bad)
and
test
je
mov
test
stos
rcr
test
or
adc
jecxz
cmp
lods
das
int3
mov
cmp
gs
scas
sub
or
sbb
and
sbb
bound
daa
dec
call
shl
ror
pop
adc
mov
cmps
mov
lock
hlt
sahf
mov
(bad)
mov
mov
inc
cmp
add
sti
mov
cmp
movs
and
mov
in
dec
push
imul
adc
js
fsubr
jl
mov
leave
mov
mov
shl
sbb
fisttp
or
pop
and
out
mov
es
ins
ja
xlat
hlt
mov
fcomip
jae
and
sbb
mov
aad
out
std
leave
out
or
or
pop
mov
xor
mov
mov
fiadd
scas
xchg
push
push
movs
jns
fcmovnu
leave
xor
fwait
inc
adc
xchg
sbb
dec
add
or
lds
sbb
repz
mov
retf
mov
int3
fsubr
pop
sbb
xchg
cmp
je
dec
pop
bound
stc
movs
dec
ja
clc
push
mul
inc
cdq
mov
xlat
adc
mov
sti
xchg
addr16
test
cmp
lods
in
inc
push
es
loopne
repz
sahf
repz
push
mov
imul
mov
jmp
adc
test
and
ins
scas
out
pusha
lods
sbb
imul
sub
push
mov
jle
neg
jg
out
ds
aad
mov
ins
lock
jo
or
and
jo
jb
scas
cwde
mov
in
push
dec
aaa
jb
jnp
push
dec
idiv
aas
push
xor
mov
popf
xchg
pop
lods
dec
pop
mov
jae
out
retf
push
dec
movs
cdq
cli
adc
icebp
sar
or
jp
push
sbb
xchg
dec
xchg
popa
shr
xchg
push
ja
movs
pop
inc
xor
stos
fisttp
sbb
xor
repz
shl
dec
cmp
popf
js
repnz
cs
mov
rcr
ror
and
clc
test
shl
xchg
mov
push
and
adc
cmp
push
mov
push
lahf
mov
mov
add
ret
inc
xchg
lahf
mov
out
cmp
pop
int
(bad)
push
lea
mov
pop
adc
xor
pop
cwde
sub
mov
xor
xchg
popa
repnz
imul
push
ins
les
add
mov
gs
test
mov
mov
test
jno
ret
xchg
cmps
idiv
lods
and
(bad)
popf
dec
into
jmp
js
shr
arpl
pause
(bad)
(bad)
std
movs
data16
test
mov
push
sbb
inc
jecxz
pop
pop
pop
xchg
out
jnp
repnz
sbb
scas
jnp
js
ss
repnz
dec
out
push
pop
adc
mov
loop
js
xor
pop
cmps
loopne
xor
cmps
rol
dec
jge
cs
xchg
mov
addr16
mov
push
mov
pop
inc
jns
mov
in
and
mov
into
xchg
fist
retf
ret
bound
mov
ret
mov
lahf
pop
leave
cmps
adc
mov
cmp
mov
dec
neg
test
jne
push
and
mov
mov
loop
add
in
ret
das
jnp
sub
aas
ss
push
cmps
je
add
inc
(bad)
cdq
xchg
ss
ss
cmp
jmp
mov
fdivr
loopne
jae
add
imul
xchg
int3
sub
out
or
mov
xchg
mov
fidivr
or
sub
lahf
pop
adc
mov
movs
push
out
push
or
lods
sub
push
inc
xor
in
outs
xchg
sub
or
dec
mov
or
adc
(bad)
push
clc
movs
movs
and
mov
push
adc
xchg
(bad)
sub
and
xchg
jle
jmp
imul
mov
jno
adc
call
repz
mov
fisttp
or
sahf
pusha
xlat
mov
cld
ja
xor
and
jge
out
or
es
inc
das
test
cwde
or
ins
xchg
xlat
pop
(bad)
mov
je
in
clc
inc
stc
cmp
or
dec
mov
xchg
pop
cld
push
mov
popa
neg
jp
dec
movs
adc
xor
mov
inc
add
cmp
stc
ds
pop
jmp
test
test
jne
mov
call
test
scas
adc
in
inc
ds
scas
test
and
xchg
jl
test
hlt
cli
push
push
rep
push
ja
jecxz
stc
jo
les
shr
ins
mov
fmul
jl
inc
xor
lahf
xchg
sbb
xchg
mov
ja
icebp
cmps
or
dec
ins
aad
(bad)
fild
jns
jns
stos
jp
pop
stos
mov
lea
and
mov
and
cld
pop
sbb
and
(bad)
jmp
xchg
jno
xor
sub
aaa
popf
cwde
sti
cmp
add
sar
sti
cmp
scas
cmc
cld
or
maxps
les
sub
mov
test
push
rdpmc
pop
jecxz
loop
mov
push
scas
mov
adc
mov
test
lods
adc
pop
xor
arpl
push
call
xor
repnz
imul
dec
out
in
loop
or
push
je
test
mov
ds
ss
sub
es
jmp
aad
xlat
mov
loop
xor
add
mov
in
cli
aad
pushf
std
jns
ret
iret
push
out
mov
imul
pop
sub
mov
(bad)
mov
sbb
or
jl
fst
in
or
dec
mov
pop
and
daa
cmp
stos
aaa
mov
es
add
call
and
pop
into
push
sub
adc
or
dec
fs
add
mov
xor
repz
inc
mov
cmp
mov
dec
push
pause
dec
xchg
push
ja
daa
stos
sar
jmp
mov
pop
enter
mov
shr
pop
call
pop
pop
loop
mov
jecxz
pop
add
sbb
jle
loopne
and
repnz
mov
fs
in
lock
and
jnp
xchg
stos
loop
xchg
mov
test
jo
xchg
retf
(bad)
cli
leave
sub
lea
ficomp
popf
aas
jp
pop
in
mov
packsswb
jmp
xchg
ins
retf
mov
pop
movs
pop
push
outs
and
push
push
not
into
and
add
lds
neg
aad
adc
rcr
lods
dec
loope
fwait
push
push
dec
add
test
lock
and
out
popa
lods
loopne
xchg
aam
sbb
add
dec
lea
xchg
mov
pop
call
xchg
pop
mov
ds
in
aad
dec
shl
push
dec
in
enter
or
mov
sbb
cdq
popf
mov
xchg
pop
shr
mov
pusha
stos
dec
ret
(bad)
jnp
iret
outs
mov
in
fst
stos
or
cmc
cmp
sub
sub
das
or
jmp
fs
in
jecxz
jbe
sbb
mov
push
mov
(bad)
xchg
lods
xchg
pop
std
sub
icebp
pop
retf
mov
mov
test
pop
imul
pop
add
call
movs
mov
adc
dec
ins
add
mov
lods
jmp
mov
and
xchg
jecxz
dec
add
js
stc
in
sbb
xchg
mov
in
mov
jp
js
test
test
mov
fistp
adc
jp
cmp
out
dec
cli
mov
adc
mov
iret
shl
xor
retf
sahf
sub
xchg
mov
pop
call
jp
popf
stc
mov
add
jg
test
push
scas
jbe
or
bound
fldcw
cmps
and
mov
lea
and
adc
sti
pop
ja
xchg
xchg
push
push
cmp
dec
mov
dec
mov
add
inc
outs
xchg
fwait
pop
shl
mov
vpor
xchg
dec
andps
aad
(bad)
mov
adc
add
sub
and
and
push
fldcw
or
dec
int3
pop
ds
inc
idiv
add
jecxz
ffreep
push
std
dec
sbb
mov
mov
xor
xor
sub
and
cmp
neg
shr
sbb
ja
rol
daa
fcom
scas
sbb
xor
fwait
inc
adc
fist
(bad)
aam
sub
or
mov
mov
jae
out
enter
lea
inc
js
inc
js
adc
cli
cs
adc
aaa
pop
inc
fwait
and
push
xor
scas
fisubr
mov
xchg
popf
add
jns
(bad)
jl
xchg
pushf
loopne
jmp
inc
cmp
cmp
mov
movntq
pop
(bad)
fstp
push
ror
xchg
clc
mov
jnp
sbb
inc
dec
push
das
cmp
inc
ss
les
mov
sbb
test
rol
jp
add
retf
cmp
or
in
mov
or
sbb
jo
mov
push
xor
pop
mov
(bad)
lods
iret
cli
add
inc
cs
xchg
je
xor
pop
fs
mov
jp
outs
rcl
fmul
jno
(bad)
imul
cmps
pop
(bad)
loope
lahf
lds
xchg
fs
mul
(bad)
div
lea
jecxz
push
arpl
aad
out
fucomip
push
ficom
enter
or
adc
pop
jl
jno
outs
out
sub
xchg
ret
and
jo
cmp
enter
fcmovu
mov
adc
dec
adc
xchg
dec
rcr
push
mov
adc
fdiv
mov
add
hlt
jge
cmp
test
ret
add
stc
push
add
add
lahf
cmps
push
cmp
xchg
push
cmp
push
out
mov
retf
std
jno
push
or
jns
adc
out
inc
retf
out
mov
shl
jnp
inc
cmps
fucomi
ins
mov
call
jb
std
dec
je
or
cmps
push
shr
dec
ins
mov
mov
pop
mov
push
dec
xchg
pop
pop
cmc
dec
mov
out
push
pop
xchg
cs
ficomp
fs
mov
pop
or
into
add
xchg
loopne
pushf
nop
popa
fistp
or
cdq
xor
scas
int
inc
and
das
push
cdq
fstp
popa
mov
test
xchg
dec
sbb
je
pop
loope
mov
jmp
add
pop
pusha
mov
xor
shl
ret
or
adc
or
mov
aaa
in
iret
mov
out
xor
aam
into
xor
ss
loop
and
dec
das
xchg
(bad)
dec
sbb
cwde
lock
stc
sar
mov
jb
clc
inc
fsubr
cwde
clc
dec
adc
mov
movs
jo
into
xchg
pop
imul
sub
add
mov
adc
out
cmps
mov
icebp
mov
add
pop
dec
sbb
jo
cmp
mov
ret
inc
mov
mov
mov
repz
call
lods
add
hlt
cmp
call
(bad)
jnp
test
stos
xchg
ret
in
div
int
movs
in
push
pop
push
xchg
pop
lahf
jl
cmp
(bad)
xor
cmps
lods
icebp
fsub
rol
xchg
dec
imul
or
addr16
dec
cmp
xor
ret
aaa
aaa
(bad)
xor
inc
jnp
xchg
enter
push
test
mov
jns
push
(bad)
movs
push
pop
gs
movs
mov
out
call
adc
mov
cld
(bad)
jmp
mov
mov
pop
fdiv
popf
mov
jp
retf
jno
and
add
getsec
inc
or
mov
mov
jmp
mov
enter
into
dec
inc
sub
adc
pop
pop
data16
push
lods
adc
mov
or
adc
jo
cld
sub
mov
fcom
fxch
je
mov
sub
repnz
xor
mov
cwde
mov
sbb
and
clc
xor
loopne
mov
jne
call
push
out
and
mov
push
dec
mov
shl
push
jge
ret
push
cmp
sub
mov
enter
dec
cmps
stos
ja
mov
fidiv
mov
xor
ins
xor
xchg
sbb
or
call
hlt
out
sub
mov
mov
pop
jp
mov
repz
mov
test
sbb
and
mov
xor
data16
(bad)
jb
adc
push
adc
inc
pop
shr
add
add
mov
out
inc
mov
jmp
bound
inc
push
test
jmp
mov
xchg
xchg
les
aam
add
inc
mov
inc
ret
rep
mov
icebp
xor
test
xchg
fnstenv
xchg
fwait
repz
xchg
cmp
cmps
cdq
pop
call
push
das
jns
xor
mov
xor
out
nop
xchg
retf
sahf
scas
xchg
cli
aaa
loopne
mov
sbb
leave
xchg
dec
mov
mov
cdq
dec
jno
cld
or
push
push
cmp
movs
data16
mov
sbb
jmp
sbb
dec
addr16
mov
fs
mov
in
rcr
mov
and
popa
jle
jo
outs
mov
push
adc
xor
jns
dec
sbb
pop
sbb
(bad)
and
pop
movs
idiv
jbe
mov
mul
jge
xor
jmp
test
out
xchg
(bad)
pop
xchg
pop
push
and
fwait
mov
adc
retf
or
adc
sbb
xor
inc
inc
jo
enter
ret
int
pmaxub
outs
retf
mov
cmps
mov
scas
ins
push
mov
or
das
imul
jmp
inc
push
mov
inc
or
sbb
xchg
cdq
pushf
xor
or
and
imul
(bad)
outs
out
(bad)
leave
cmp
sub
leave
add
jnp
mov
out
scas
add
xchg
cmp
jno
add
jns
mov
add
gs
int
push
xor
fwait
cmp
cmp
repz
int3
cmp
icebp
cmp
cs
mov
xor
jbe
popa
jp
jmp
cmp
iret
adc
xor
mov
adc
mov
outs
outs
xor
fistp
shl
mov
loopne
jg
cmc
into
cmp
test
(bad)
adc
inc
mov
inc
(bad)
pop
xor
mov
scas
mov
nop
bound
xor
fxch
out
mov
ret
mov
or
cwde
jnp
sub
sbb
push
jmp
xor
bound
jmp
jae
lahf
adc
out
iret
rol
mov
mov
rol
and
rol
jns
call
jmp
jg
adc
xor
dec
cmp
push
inc
int
sbb
adc
xor
bound
inc
daa
cmps
cwde
add
fwait
scas
jp
ins
(bad)
imul
jae
cld
inc
pushf
out
xchg
outs
lds
cmp
push
pop
cs
push
mov
neg
add
loope
sar
jnp
ret
push
into
(bad)
retf
cmp
retf
(bad)
ret
pop
adc
repz
mov
cmp
bound
mov
ss
sub
lods
retf
cwde
dec
test
(bad)
mov
jge
stos
lock
(bad)
push
(bad)
hlt
mov
mov
mov
enter
in
cli
inc
xchg
dec
add
shr
ds
push
scas
or
sbb
outs
adc
lock
xor
inc
sar
stos
in
push
outs
and
dec
ror
cdq
xlat
repnz
and
adc
outs
inc
sub
cmp
mov
(bad)
ror
ss
dec
add
neg
xlat
pop
retf
jecxz
adc
into
fdivr
sar
add
push
lods
fsub
jbe
inc
fbstp
adc
fucomi
jo
in
ss
sub
sub
or
or
into
sbb
in
fcmovnu
pop
(bad)
sahf
rdpmc
mov
inc
sub
bswap
pop
imul
xor
mov
in
imul
sub
mov
dec
xchg
jno
cwde
hlt
xchg
sub
retf
mov
jmp
xchg
sbb
gs
add
jl
ins
push
daa
xchg
fadd
sub
loop
mov
sbb
scas
jle
fsubr
adc
mov
leave
das
sahf
mov
(bad)
icebp
jl
sbb
jmp
stc
inc
add
shr
pop
js
inc
cmp
cli
test
rol
jp
mov
jmp
loope
pop
or
or
inc
mov
xor
mov
sub
mov
icebp
mov
mov
pop
ret
cmp
lea
dec
fidiv
xchg
dec
jp
fsub
push
sub
pop
pop
rcr
shl
cmp
aam
das
loope
jo
adc
sub
pop
pop
outs
push
pop
mov
inc
fxtract
xor
call
or
pop
sub
call
add
daa
push
ror
imul
or
aad
xchg
cmp
out
jmp
out
mov
and
sub
sahf
mov
(bad)
clc
mov
or
popa
nop
cwde
inc
aas
fist
icebp
std
inc
mov
sub
sar
xor
movs
sbb
fdiv
or
in
clc
inc
stos
pop
cld
jge
popf
mov
repz
imul
sahf
std
pop
push
and
ret
xchg
push
(bad)
mov
sub
xor
call
cmps
dec
add
pusha
mov
push
je
mov
ins
add
and
mov
nop
add
mov
xor
pop
cli
and
fldenv
dec
jmp
aaa
shr
mov
inc
fcomp
or
daa
dec
into
icebp
retf
jne
cmp
movs
adc
mov
sub
push
fwait
jbe
xchg
sbb
outs
or
addr16
test
daa
lock
pop
jne
(bad)
sbb
bound
and
jmp
stos
movs
adc
sbb
movs
add
retf
pop
and
mov
clc
pop
and
sbb
retf
icebp
mov
mov
cdq
add
sub
int
repz
xor
ret
mov
sbb
or
mov
cdq
push
scas
outs
pushf
aaa
ret
pop
fist
int
imul
cmps
push
addr16
clc
xchg
xchg
mov
outs
push
setns
and
cwde
cmp
imul
pop
cmps
add
ficom
xor
pop
aad
fild
xor
jle
push
hlt
int3
dec
sbb
mul
loope
fs
bound
jp
je
sbb
shr
je
push
(bad)
xlat
stos
sbb
push
dec
jmp
dec
xor
movs
cmp
out
ret
div
fabs
leave
test
xchg
dec
(bad)
push
sub
sti
mov
in
jp
fadd
popa
mov
pusha
xor
and
xchg
mov
loope
ins
add
icebp
fndisi(8087
mov
jecxz
sub
sbb
and
out
adc
sub
das
fst
inc
in
aaa
jno
cmp
xchg
pop
mov
sbb
in
popf
out
jmp
cdq
and
ror
sub
dec
ins
jne
popf
mov
inc
pop
scas
jmp
xchg
imul
sub
adc
inc
mov
test
xchg
fsub
or
jmp
dec
jle
inc
push
sbb
mov
mov
add
sub
call
(bad)
jmp
or
pop
sbb
loopne
fild
push
jo
xor
jns
idiv
ins
jp
paddw
popw
fiadd
sbb
(bad)
je
mov
push
xor
pop
mov
repnz
fidivr
mov
mov
fild
jle
adc
cwde
mov
inc
jecxz
ja
inc
jmp
movs
pop
adc
leave
pop
jle
pop
push
loop
test
mov
repz
sub
out
loop
psubd
icebp
stos
std
mov
xchg
or
adc
mov
and
jbe
call
mov
mov
cmp
int3
(bad)
mov
out
scas
mov
mov
cwde
ss
and
xor
xchg
scas
clc
lock
jp
out
mov
mov
cld
test
mov
test
mov
cmc
adc
repz
inc
cmps
and
sbb
retf
fwait
mov
inc
aad
fwait
dec
mov
push
scas
out
pop
sti
jo
jecxz
sbb
jmp
hlt
xor
leave
jle
jle
mov
in
loopne
lock
outs
sbb
aad
push
push
dec
cld
cmc
scas
jle
dec
movs
and
cmp
cmp
xlat
loopne
cmc
sbb
jg
push
pop
jbe
cmp
inc
mov
mov
sbb
cmp
add
push
scas
rcl
push
cmp
sahf
xchg
jp
jno
and
xor
jb
icebp
lock
pop
gs
mov
data16
sub
ret
cmps
popa
push
mov
das
pop
dec
(bad)
cmp
cmc
cmovb
fist
sbb
push
jmp
or
xor
enter
jno
pop
arpl
xchg
push
fs
or
addr16
mov
clc
int3
jmp
and
lea
xchg
mov
or
mov
xlat
paddd
aad
imul
cmps
push
mov
outs
sbb
loope
xchg
aaa
nop
push
cmp
sbb
and
js
pop
repz
xor
dec
sar
push
in
loope
adc
xor
pop
int
jge
cmp
nop
adc
mov
push
dec
das
pop
push
dec
cwde
mov
sahf
stos
adc
inc
sbb
scas
jno
out
cmp
jno
cdq
or
test
jp
jae
test
loope
xchg
mov
mov
pop
sbb
sbb
mov
jp
(bad)
jb
test
push
jo
mov
xchg
mov
pop
cmp
scas
into
loop
dec
in
push
mov
ret
sbb
mov
data16
jmp
fs
test
or
inc
repnz
retf
ss
popa
xor
aad
aam
std
mov
push
ss
mov
inc
es
cld
imul
mov
jbe
pop
pusha
int
xchg
lea
dec
and
ror
and
shl
add
movs
fwait
jno
mov
fwait
les
es
aam
mov
xlat
dec
in
and
ja
movs
push
or
adc
ficom
(bad)
out
jle
cmp
add
pop
dec
add
pop
sub
mov
pop
inc
out
xchg
jb
xor
pushf
cdq
adc
loope
dec
dec
jae
je
adc
mov
call
mov
stc
js
or
test
jns
sub
add
cmc
ins
lea
pop
rcl
cmp
mov
add
sbb
aas
cmp
dec
or
xchg
test
jl
fsubp
out
jg
sbb
push
repnz
push
add
adc
int
repnz
xor
push
pushfw
fadd
xchg
ret
cmp
push
inc
mov
inc
(bad)
int3
cmp
or
popa
fist
daa
add
dec
retf
lock
in
add
pop
mov
outs
imul
lods
jns
movs
cmc
out
xor
or
es
xchg
sahf
sbb
and
inc
sbb
mov
in
xor
add
out
or
mov
imul
aad
add
popa
(bad)
and
dec
stos
jns
dec
or
fnstcw
pop
stos
jb
mov
arpl
mov
or
ret
jg
not
aaa
clc
sti
cmc
mov
or
xchg
mov
test
iret
push
aam
and
cmp
jae
adc
pop
fnsavew
aaa
aaa
inc
(bad)
and
xlat
in
pop
imul
cli
push
aaa
mov
imul
cli
nop
je
scas
jmp
clc
mov
or
add
pop
scas
sahf
inc
sbb
push
loopne
cmp
push
pop
dec
cld
js
push
adc
pop
cmp
aad
mov
mov
mov
cmp
pop
fisubr
dec
inc
mov
jb
mov
aas
scas
clc
jne
and
imul
je
pop
mov
add
out
adc
mov
add
push
dec
mov
out
mov
mov
mov
add
scas
mov
jno
shl
test
mov
in
inc
mov
aas
data16
sti
jo
push
test
loop
fimul
fimul
xchg
aas
push
(bad)
mov
mov
test
or
pushf
mov
into
in
hlt
mov
xchg
inc
dec
push
out
daa
sub
int
jmp
and
cmp
add
test
push
xchg
and
and
lea
pusha
pop
adc
in
pop
mul
clc
cli
out
(bad)
cmc
int3
inc
inc
retf
pop
jb
sub
dec
dec
lds
mov
ret
(bad)
test
dec
shl
aam
mov
jae
sbb
sbb
add
mov
mov
into
xchg
or
sub
or
sbb
push
push
test
mov
in
and
pushw
mov
adc
mov
pop
rcl
cmp
test
push
inc
mov
adc
lods
addr16
push
sar
rol
fnstsw
bound
jmp
pushf
jg
cmps
popa
mov
mov
and
cmp
(bad)
idiv
call
ror
xor
xchg
inc
push
mov
stos
xchg
push
dec
mov
imul
daa
sub
jo
stos
and
mov
stos
pop
sar
jl
cmp
ss
push
cld
outs
cdq
push
jp
(bad)
leave
adc
xchg
clc
xchg
retf
adc
xor
shr
mov
xchg
jo
lahf
jecxz
out
scas
cmps
ror
sub
(bad)
fisttp
loop
test
inc
iret
adc
adc
dec
in
jbe
pushf
dec
scas
retf
pop
sub
jecxz
scas
adc
or
in
xor
xor
movs
sub
xor
and
sbb
push
clc
(bad)
sbb
aam
sar
pop
jge
stc
add
bound
cs
hlt
std
adc
xchg
aam
adc
jp
cmp
jno
test
xchg
jge
int
inc
cmps
outs
clc
sub
push
and
dec
fidiv
mov
fs
mov
cmc
enter
cs
push
pop
imul
stos
mov
sbb
cmp
pop
jl
pop
adc
sbb
dec
mov
sti
add
sbb
test
and
test
pop
jl
and
bound
nop
pop
mov
mov
dec
adc
push
(bad)
mov
int3
mov
in
ins
scas
out
icebp
jno
xrelease
and
push
mov
push
adc
nop
mov
mov
add
xor
xlat
(bad)
cwde
cmp
jno
adc
mov
push
mov
mov
lea
inc
cmp
fild
icebp
xor
sbb
fcom
int3
xchg
or
mov
pop
dec
mov
enter
pop
and
xchg
push
or
sbb
(bad)
cld
dec
(bad)
and
cld
and
inc
les
aaa
stos
sbb
pop
cmps
fisub
jle
jnp
out
xchg
or
imul
cmp
pop
das
sbb
aas
aas
push
jns
nop
pop
rcr
ins
jne
mov
es
fadd
sbb
scas
pop
je
les
xchg
jns
popf
pop
mov
mov
cmp
jno
mov
mov
inc
push
or
xchg
and
mov
xchg
icebp
or
or
ret
sub
fisttp
les
mov
xchg
jbe
mov
retf
or
gs
jmp
ret
pop
or
sub
outs
mov
push
(bad)
(bad)
scas
leavew
sbb
mov
cwde
push
sbb
cmp
mov
push
sar
shufps
adc
call
fcomp
dec
jno
iret
imul
jg
jle
lods
xchg
pop
xor
popa
out
mov
imul
pop
jbe
jo
(bad)
icebp
jo
ja
rol
mov
or
out
push
sub
xor
movs
mov
fild
and
shr
mov
shl
pop
sbb
xchg
cwde
imul
pusha
pop
loopne
stos
cld
(bad)
push
repnz
(bad)
cmp
(bad)
sub
pop
call
mov
leave
mov
inc
stos
iret
mov
xor
retf
retf
cmps
inc
pop
into
shr
xchg
adc
push
fcom
lods
fisub
ret
test
adc
xlat
cmps
and
pop
repnz
shr
(bad)
adc
cmps
data16
mov
ins
aam
loop
ins
wbinvd
stos
mov
leave
mov
cmp
sahf
dec
out
and
fisubr
xor
std
jle
sbb
sub
lahf
gs
not
je
inc
das
sbb
mov
sbb
xchg
adc
gs
cmps
mov
ss
sub
jl
add
cmp
pusha
mov
adc
out
cmps
test
pop
mov
or
cwde
(bad)
adc
mov
cmp
addr16
aam
jae
jnp
adc
cli
fidiv
and
mov
les
xchg
adc
mov
stos
adc
dec
gs
sub
and
mov
cmp
cmp
xchg
retf
xchg
outs
xor
mov
cdq
sub
cmp
inc
test
push
out
jo
push
cmp
mov
adc
lods
pop
jecxz
dec
rcl
sub
jnp
mov
cdq
add
push
or
mov
icebp
mov
xor
out
jae
jecxz
clc
inc
xlat
inc
mov
jae
mov
pop
stc
push
inc
jmp
mov
cmp
xchg
jge
lea
lahf
jmp
sahf
dec
cmps
xchg
lahf
stos
shl
pushf
xor
imul
pop
cmp
call
jp
imul
aam
xor
repnz
and
adc
inc
(bad)
lods
jb
push
and
out
and
das
xor
aam
rcl
aam
push
std
iret
push
cmps
iret
in
mov
pop
mov
cmp
cmps
into
test
ja
sbb
rol
cwde
jle
ss
push
adc
movs
into
aas
(bad)
pop
add
sub
sbb
cmp
mov
jg
mov
mov
mov
jmp
es
xor
arpl
popa
mov
cmps
daa
cmp
push
push
ins
imul
out
loop
(bad)
rcl
stc
sub
xchg
(bad)
jne
mov
call
sub
fadd
adc
and
sbb
mov
adc
jb
and
test
mov
jnp
push
xor
xlat
test
push
stc
ror
mov
pop
xor
xchg
ins
push
xor
cmp
and
mov
cdq
or
adc
scas
xor
jle
mov
leave
fidiv
xchg
mov
adc
jmp
mov
cmp
rcl
mov
pop
push
fdivr
sbb
out
or
hlt
in
adc
lea
mov
mov
push
mov
into
stc
fsubr
mov
mov
pop
jae
adc
or
xor
cmp
mov
jnp
shl
in
pusha
jno
sbb
inc
inc
push
sahf
sahf
imul
data16
in
and
or
jbe
push
fcom
(bad)
lock
mov
stc
xor
jge
loopne
daa
fnstsw
fbld
ins
mov
stc
push
adc
add
(bad)
cli
sbb
mov
popa
(bad)
test
mov
call
and
pop
cmp
scas
push
daa
jecxz
adc
mov
jl
mov
cmc
mov
jbe
out
fst
sar
repz
stos
inc
push
rol
shl
sub
cmp
xor
jnp
imul
push
jb
fisttp
push
mov
outs
xchg
xor
cmp
std
sub
int3
mov
jnp
and
mov
inc
mov
xchg
(bad)
ror
outs
push
jecxz
sar
test
imul
adc
mov
retf
sbb
and
dec
in
shr
add
mov
hlt
jo
fimul
jns
rol
pop
outs
lock
(bad)
fild
(bad)
inc
rcl
cmp
adc
stos
cmc
cmp
mov
sahf
push
mov
movs
sahf
inc
adc
loopne
call
push
call
sub
xchg
or
imul
movs
or
xchg
in
aas
(bad)
movs
jg
inc
cmp
in
ret
jge
push
fcmove
sti
adc
sbb
outs
call
push
fsubr
sahf
movs
leave
movs
inc
cmps
test
aad
and
mov
data16
or
jbe
inc
in
xchg
cmp
xchg
cli
sbb
call
fdivr
sub
mov
mov
jmp
fild
jno
xchg
mov
aam
xor
adc
scas
and
nop
(bad)
pop
call
mov
icebp
stc
inc
loop
scas
mov
dec
cwde
cs
enter
test
ror
inc
adc
mov
adc
dec
(bad)
aas
xor
sbb
into
in
add
ins
in
dec
mov
sub
mov
jle
jno
jns
scas
into
xchg
pusha
or
(bad)
sti
mov
ret
call
xchg
cmp
int3
pop
push
scas
and
add
int
ins
sbb
std
jge
xor
push
add
mov
inc
and
add
xor
test
xor
cmps
ficom
adc
pop
mov
dec
(bad)
sub
movs
xchg
leave
jae
out
mov
ret
sub
add
fstp
(bad)
mov
cmp
jb
cwde
fisttp
push
aad
retf
add
rcr
cmp
mov
sbb
mov
in
pop
ins
iret
xor
cwde
leave
jb
movs
jne
stos
xor
cmp
mov
imul
sub
pop
sbb
ins
mov
xor
jle
rcr
popf
cdq
dec
mov
mov
add
adc
xchg
push
cmp
push
iret
call
sbb
nop
dec
pusha
fs
iret
push
lock
fist
pusha
xlat
adc
xchg
cdq
les
test
int3
mov
inc
daa
fiadd
ja
ret
sub
mov
mov
call
pop
mov
xchg
icebp
push
pop
fst
sbb
jne
ret
shr
scas
and
pinsrw
mov
dec
ret
mov
out
loopne
sub
inc
lods
lock
pop
jmp
mov
popf
adc
lock
ficomp
and
mov
je
std
inc
push
ret
sti
scas
sahf
test
mov
add
jmp
in
xchg
scas
xor
daa
adc
sbb
jbe
sbb
test
pop
mov
(bad)
out
fldenv
ret
fwait
and
stc
xor
xor
and
out
pusha
ins
test
mov
sub
into
fld
xchg
mov
inc
jne
mov
mov
pusha
mov
xor
jg
inc
push
ja
push
mov
xchg
pop
or
cmp
sbb
call
mov
push
in
xchg
lods
dec
mov
outs
mov
sar
inc
inc
pop
or
fistp
sbb
cmps
pop
stos
xor
fiadd
repz
outs
or
and
rcr
push
stc
sar
pop
in
scas
ja
mov
or
mov
repz
jp
test
stos
mov
les
dec
ret
jl
push
dec
adc
xor
popa
push
(bad)
push
fmul
push
in
repz
inc
and
shl
cmc
mov
add
(bad)
movs
lds
not
(bad)
std
das
xchg
xor
add
idiv
push
jne
mov
adc
addr16
lods
jnp
jmp
mov
in
xchg
rol
mov
mov
pusha
ror
mov
enter
xor
(bad)
mov
std
jmp
or
pop
sbb
adc
push
ins
mov
or
xchg
movs
add
lods
sbb
test
je
xor
addr16
or
rcl
or
ficomp
fsub
hlt
les
or
imul
add
xor
jnp
push
mov
movs
mov
pop
sar
mov
ret
dec
xor
sbb
add
add
aas
and
and
pop
cs
mov
in
(bad)
aam
pop
fwait
mov
movs
jle
inc
mov
enter
sub
fst
pushf
push
mov
iret
mov
(bad)
imul
and
out
pop
je
add
loopne
push
push
jnp
and
out
or
shl
test
js
lea
ja
fdivp
or
sbb
mov
int
and
(bad)
dec
dec
in
add
out
inc
or
adc
pop
in
add
mov
jb
push
imul
jnp
lea
mov
sbb
popf
cmp
jle
outs
dec
in
(bad)
(bad)
out
mov
inc
cmc
jo
fwait
xlat
out
cld
push
outs
xchg
or
jl
push
scas
push
hlt
shl
movs
imul
je
les
mov
xchg
dec
(bad)
ret
adc
cwde
adc
pop
pop
out
xchg
push
aad
add
xor
mov
pop
pop
loopne
dec
pop
dec
pop
add
and
jb
sbb
ins
mov
jno
inc
add
dec
mov
or
arpl
sbb
cmp
loope
arpl
sub
adc
sub
xlat
dec
mov
in
or
inc
dec
pop
pop
or
cmps
rcl
pop
outs
data16
cmps
jbe
das
adc
jo
lods
movs
cmps
rcl
ror
jbe
mov
and
mov
dec
mov
mov
lahf
push
inc
jp
and
dec
imul
pop
sbb
ins
mov
loope
xchg
mov
push
or
test
push
gs
sbb
xlat
shr
outs
sbb
push
neg
push
push
push
jmp
xchg
loop
aaa
adc
cmc
fsub
inc
int3
stc
xchg
shl
mov
pop
sub
adc
push
sti
je
dec
stos
fs
retf
or
mov
fild
in
out
xor
cmp
push
jp
or
in
inc
fdivr
mov
mov
ret
mov
stc
mov
sbb
fld
inc
(bad)
mov
pop
push
pop
push
jl
mov
push
cmp
and
aam
test
jmp
sub
out
das
mov
pop
lods
inc
int3
cmc
pop
cmp
cmp
ret
add
lea
inc
je
push
jg
(bad)
push
cmp
int
and
ret
xchg
jp
fmul
mov
ficom
sti
jbe
dec
add
and
gs
and
jp
or
xchg
sub
es
out
adc
xchg
push
xlat
jb
iret
sbb
jb
pop
arpl
clc
inc
sbb
in
mov
jbe
ins
add
test
sub
cmc
cs
div
test
mov
cwde
xor
enter
cld
daa
mov
jbe
pusha
mov
jge
add
cmp
cwde
sub
dec
ja
jp
hlt
fwait
push
jle
fild
xchg
inc
push
mov
call
or
add
mov
push
fwait
into
mov
cmp
cs
sub
ss
sub
out
aad
scas
push
inc
xor
les
jo
dec
sbb
jnp
es
push
je
arpl
out
adc
lods
pop
push
add
shl
fs
mov
fidivr
or
add
sub
cmc
rcl
jecxz
push
pop
fst
js
inc
inc
enter
clc
mov
sbb
fsub
fild
and
xchg
mov
cmp
cmp
xor
mov
imul
es
push
loope
mov
pop
push
push
dec
(bad)
sar
sbb
int3
ret
sub
mov
out
xchg
mov
sub
pop
hlt
mov
cmp
outs
sub
push
loop
jns
pushaw
bound
sar
mov
push
mov
std
jl
arpl
mov
xchg
rcr
daa
fwait
retf
popa
sbb
mov
mov
movs
and
cmp
add
xchg
inc
add
ins
ret
push
out
and
cmovbe
loop
inc
xchg
shl
cmp
in
ret
data16
push
popf
fidivr
(bad)
mov
inc
lods
fnop
icebp
enter
push
je
push
mov
pop
lods
ret
daa
cld
xor
and
or
sti
scas
scas
jbe
xchg
dec
push
mov
inc
outs
arpl
test
shr
pop
fcom
or
into
sbb
inc
into
ds
add
mov
push
adc
sub
addr16
mov
out
and
xchg
pop
mov
fld
pop
lea
jbe
dec
rol
xlat
mov
imul
push
inc
mov
int
and
fs
dec
jno
bound
hlt
push
pop
jnp
movs
sbb
push
sbb
jno
test
jmp
sub
ret
arpl
mov
add
mov
adc
imul
mov
outs
cwde
push
push
xchg
or
stos
jmp
sub
out
out
xor
jecxz
xor
pop
dec
dec
push
std
fstp
shr
(bad)
sar
lds
sbb
retf
jb
mov
ja
adc
push
xchg
leave
ja
repz
fnstenv
push
push
mov
rcl
mov
mov
mov
pop
stos
ja
mov
push
lods
push
es
dec
mov
outs
dec
cmp
in
sbb
cmp
xor
dec
in
fcomp
inc
iret
js
sub
adc
test
jns
and
stos
pusha
mov
sub
push
cmc
rol
cmps
stc
push
inc
dec
mov
test
push
jmp
cli
(bad)
(bad)
sub
mov
lea
out
dec
cmp
xchg
adc
mov
mov
dec
jge
scas
loop
cwde
dec
mov
cmp
xor
js
xchg
inc
or
out
ret
add
adc
dec
out
(bad)
cmp
cmp
cli
sti
not
cmp
adc
mov
ret
xor
xlat
sbb
sbb
lea
push
bound
mov
iret
arpl
cld
fwait
(bad)
int3
(bad)
push
mov
mov
mov
and
lock
sar
bound
mov
mov
push
shr
and
call
ret
cmps
add
hlt
loope
int
leave
clc
mov
mov
pop
ffree
mov
mov
jmp
adc
xchg
fsubp
mov
cmp
push
loope
dec
dec
mov
out
std
pop
cmp
adc
leave
sbb
mov
shl
add
mov
xchg
aaa
mov
push
adc
jno
jge
leave
mov
outs
xchg
jno
lahf
mov
xchg
dec
pop
pop
call
mov
jnp
fdivr
jo
out
test
push
stos
in
jnp
out
add
ds
sub
ins
mov
das
je
sbb
or
into
(bad)
cmp
es
add
xchg
and
inc
cmc
imul
inc
sub
mov
or
push
(bad)
gs
or
and
mov
enter
xlat
dec
fcom
push
jecxz
and
shr
ss
aam
arpl
ror
mov
mov
pop
leave
mov
pop
cli
scas
data16
ins
je
pop
test
inc
jo
jns
dec
neg
push
adc
aas
in
inc
mov
mov
mov
je
push
cmps
loopne
add
inc
push
sbb
int3
hlt
repz
pop
mov
push
pop
shr
mov
movs
cmps
pop
(bad)
mov
xchg
in
sub
cmp
add
fadd
dec
ret
or
add
in
lock
xchg
and
jo
loop
or
pop
punpckhbw
jmp
or
out
packssdw
stc
or
add
fcmovnb
ss
inc
fist
jno
ja
(bad)
or
xchg
adc
into
push
cmps
jmp
jmp
int3
loopne
aaa
call
(bad)
movs
mov
pop
xchg
adc
test
push
inc
fsub
xor
sub
jmp
mov
mov
rcr
lods
push
inc
inc
add
add
and
add
cmp
ds
xor
dec
cmp
and
inc
sub
scas
cdq
idiv
xor
aam
retf
pop
mov
push
cmc
retf
ins
or
in
sti
imul
je
int
inc
addr16
jmp
add
xchg
mov
imul
pop
retf
mov
dec
pushf
sub
jg
mov
mov
mov
mov
loopne
(bad)
jae
loope
sbb
pop
ins
enter
icebp
icebp
in
imul
xchg
cmp
popa
aam
bound
adc
inc
pop
sbb
(bad)
fimul
ret
in
add
xchg
mov
dec
bts
pop
xchg
gs
push
rcr
std
loopne
jbe
call
lock
call
jns
push
(bad)
mov
push
enter
mov
mov
xchg
add
jo
adc
dec
(bad)
and
fsub
sub
iret
xor
jge
lods
xchg
std
xchg
std
mov
xor
bound
mov
adc
imul
aaa
add
cdq
sub
das
add
ins
xor
loop
xor
lds
retf
jns
outs
rcl
lods
cmp
inc
(bad)
sub
call
dec
jbe
xchg
mov
mov
cwde
clc
lock
adc
stos
rol
dec
pop
add
fwait
retf
xchg
mov
mov
pushf
hlt
add
mov
jge
add
sti
mov
jno
mov
xor
add
jmp
xchg
mov
idiv
dec
aaa
scas
mov
in
outs
lock
sti
jge
inc
mov
lahf
ds
and
popa
or
and
aam
pop
push
int3
in
and
stc
jno
mov
enter
(bad)
les
(bad)
fsub
dec
xor
loopne
jne
pop
xchg
movs
jmp
shl
inc
rcl
inc
loop
in
scas
out
push
push
cmp
mov
repnz
fld1
or
into
mov
mov
fadd
aam
cmp
inc
add
pop
stc
mov
mov
clc
lahf
jge
out
mov
inc
bound
pop
push
mov
sahf
jmp
xchg
sub
pop
or
jmp
adc
mov
out
and
dec
pusha
push
lods
les
aam
mov
and
ss
push
imul
shl
jmp
jl
outs
fstp
sti
inc
lahf
jne
scas
nop
aas
fwait
xor
sbb
pop
test
ret
loop
out
and
adc
inc
mov
mov
test
dec
push
jmp
movs
mov
inc
dec
js
out
and
adc
ret
cwde
pop
push
ret
jmp
mov
stc
pop
out
test
stos
dec
lods
mov
jmp
add
sub
xor
repnz
adc
dec
scas
(bad)
jae
out
dec
call
or
test
mov
les
leave
push
scas
cmp
push
jl
adc
scas
jnp
or
mov
rcl
(bad)
mov
push
pop
jnp
call
out
xchg
lahf
pop
push
in
inc
cmp
mov
cs
mov
call
add
je
nop
imul
and
inc
dec
dec
sbb
es
sub
lock
test
icebp
sub
xlat
loope
cmp
and
fadd
pop
and
mov
movs
pop
cmp
inc
and
(bad)
mov
fwait
pop
mov
sub
sbb
int3
mov
and
test
mov
fistp
sbb
shl
les
cli
cmp
or
sahf
pandn
je
int
pop
mov
sbb
and
mov
nop
fsubr
lods
push
cli
adc
pop
stc
sbb
jno
shl
outs
stc
jb
neg
adc
pop
mov
jmp
xor
add
inc
(bad)
inc
xchg
mov
in
into
mov
bound
xchg
and
pop
in
rol
push
fisub
fs
push
add
leave
mov
adc
sbb
inc
scas
mov
rcr
fsub
add
xchg
jl
movs
sub
dec
mov
loopne
out
out
push
fst
jmp
cmc
mov
gs
mov
and
adc
cmp
iret
std
mov
cmp
repz
mov
adc
bound
(bad)
ret
add
mov
sbb
scas
popf
(bad)
push
ins
out
add
fcomp
jne
and
loopne
fs
jae
loopne
pmulhuw
mov
arpl
fnsave
test
sub
mov
sbb
sti
arpl
iret
addr16
clc
jg
add
mov
leave
rol
nop
sub
outs
rol
imul
xchg
cmc
dec
and
inc
cmp
es
or
into
adc
mov
cli
mov
lahf
jecxz
fidiv
sbb
in
ins
xlat
into
mov
jmp
dec
sbb
je
mov
fst
push
addr16
and
mov
mov
mov
retf
mov
dec
pushf
sub
and
mov
inc
mov
hlt
dec
popa
sti
movs
(bad)
inc
clc
repnz
clc
retf
shr
cmp
add
jp
mov
test
pop
mov
inc
adc
push
pop
jmp
pop
jmp
mov
out
xchg
xor
adc
xor
sub
push
cmp
sahf
add
movs
movs
data16
pop
inc
xchg
sub
es
xchg
inc
jbe
pop
jge
pop
call
out
or
push
cmp
mov
jns
(bad)
pop
sub
sbb
hlt
pop
jp
add
cmps
lock
scas
dec
mov
or
fidiv
cmp
pop
daa
cmovg
(bad)
inc
sub
mov
f2xm1
movs
jno
xlat
in
mov
push
in
inc
jmp
iret
cmps
or
imul
scas
cld
dec
fucomip
(bad)
pop
js
mov
sbb
xor
fwait
push
stc
mov
loopne
push
aam
cmp
jge
cmp
sti
jns
sar
(bad)
add
push
and
or
retf
mov
add
pop
sbb
jnp
and
jb
jmp
cmp
mov
mov
sub
hlt
js
hlt
pusha
sub
push
pop
loopne
jg
ss
xchg
loopne
ins
movs
pop
xchg
jno
ret
dec
and
xlat
ret
dec
sbb
je
fwait
adc
pop
xor
mov
dec
pusha
jbe
stos
movs
mov
xor
(bad)
fwait
jmp
mov
cmp
mov
mov
mov
xchg
pop
push
cmp
mov
outs
(bad)
cmp
in
arpl
or
cwde
or
sbb
in
enter
mov
or
mov
rcl
sbb
mov
jle
sahf
out
mov
cmp
mov
fisubr
fisubr
push
or
mov
push
inc
pop
mov
call
jo
xchg
sti
call
inc
shr
cmp
mov
stos
inc
sub
push
ja
test
fcomp
xchg
mov
push
ror
push
pop
inc
cmovae
jge
out
popa
dec
mov
adc
cmp
pusha
ret
into
push
lock
out
shl
fptan
and
push
popa
mov
mov
stos
mov
mov
cmp
add
mov
push
jns
imul
xor
data16
mov
push
loope
fbstp
lods
gs
es
into
push
push
(bad)
cmps
adc
xor
xchg
or
stos
dec
cmps
hlt
jge
mov
cmp
dec
repz
rcr
jp
or
aaa
in
xchg
out
mov
mov
adc
test
out
jb
mov
xchg
push
inc
into
dec
pop
dec
shl
mov
(bad)
dec
out
add
jae
sbb
mov
mov
(bad)
xor
fwait
mov
mov
pop
loopne
sbb
dec
out
mov
test
and
dec
rcl
pop
shl
jl
xchg
add
and
add
aam
pop
stos
adc
iret
stos
push
pop
jge
xchg
xchg
add
cdq
sub
jle
pop
loope
mov
(bad)
out
shl
fldcw
imul
inc
popa
cmp
jle
xchg
pop
popf
xchg
rcr
xor
bound
fisub
sub
jmp
fdivp
imul
jp
mov
inc
adc
mov
fcomi
loopne
push
loope
dec
xchg
push
(bad)
icebp
aas
or
jb
int
mov
jecxz
pop
ret
fld
neg
aaa
sub
out
cld
add
es
jl
sbb
mov
lahf
in
inc
nop
inc
test
setns
push
in
(bad)
retf
or
sub
add
fisttp
stc
xchg
pusha
xchg
aaa
mov
mov
push
push
pop
xchg
idiv
push
in
(bad)
mov
adc
sub
inc
in
sbb
clc
lahf
scas
lds
lock
mov
xlat
scas
adc
int3
adc
lods
inc
mov
mov
fdivr
jle
ret
and
cld
mov
lods
jp
jp
sbb
jmp
(bad)
inc
mov
sub
ja
adc
fistp
or
into
movs
fwait
packssdw
xor
cmp
or
xlat
sub
rcl
sahf
xlat
jmp
loopne
stos
xchg
enter
or
pop
add
cli
pop
scas
inc
push
aam
jl
hlt
xor
test
push
add
mov
jno
mov
xor
xchg
scas
into
test
xchg
mov
faddp
int
fimul
mov
retf
pop
lahf
fimul
mov
cmp
add
cmp
adc
jbe
xchg
jge
cmc
pop
cmps
mov
cli
mov
mov
in
rcr
fdivrp
lods
ret
loopne
les
lods
push
and
ffreep
mov
lahf
push
icebp
(bad)
jmp
idiv
and
or
dec
retf
jo
js
mov
fnstsw
call
xlat
push
inc
xchg
cld
mov
fstp
int3
jge
jmp
ficomp
mov
icebp
inc
jl
xchg
adc
ret
daa
stos
pushf
into
int
pop
lods
sub
xor
push
aam
pusha
ficomp
push
jge
fisttp
sub
mov
mov
mov
pop
cmp
push
int
jecxz
mov
(bad)
pusha
dec
rol
jl
xlat
ins
sbb
shl
cmp
(bad)
push
popf
jmp
cs
sub
adc
mov
pop
and
sub
ds
retf
adc
jmp
pop
dec
lahf
and
mov
push
add
in
xor
ja
xor
jg
(bad)
outs
xor
(bad)
sbb
sbb
push
mov
mov
adc
sbb
cmp
ds
mov
fimul
shr
stc
cwde
jge
movs
add
bnd
(bad)
ficom
test
clc
cli
xchg
aas
cmp
lods
cmp
loopne
mov
scas
and
iret
in
imul
adc
mov
pop
add
jmp
xchg
xchg
leave
mov
push
cmp
xchg
add
push
cmp
call
out
pop
fldcw
popa
push
arpl
fisub
imul
sbb
jnp
int
je
pop
clc
sti
mov
iret
mov
jge
loop
clc
int3
fcomp
das
or
or
sbb
data16
popf
mov
jo
or
inc
cmp
jg
xor
jo
out
loop
das
and
cmp
aas
cli
xor
sbb
adc
outs
push
cmp
daa
or
inc
ror
icebp
inc
and
jp
mov
or
leave
xchg
(bad)
cld
jb
mov
and
mov
arpl
mov
pop
les
(bad)
ja
out
or
mov
sbb
dec
pop
and
mov
push
mov
pop
cmp
xchg
loope
(bad)
retf
adc
push
lahf
rcl
or
stos
mov
out
add
dec
ins
shr
adc
bound
or
ror
outs
rcr
or
ja
fild
cmp
mov
jns
cmp
or
jle
fdiv
mov
sub
xor
adc
aaa
(bad)
jb
ds
(bad)
icebp
les
dec
das
push
sub
pop
push
dec
loopne
in
pop
jmp
and
pop
mov
arpl
dec
sbb
aas
adc
jbe
jecxz
push
push
push
lds
jo
inc
cmps
stos
stos
xchg
pop
sub
mov
rcr
xlat
jnp
sub
call
xlat
lahf
lods
lea
jl
mov
xor
xchg
clc
push
jle
pop
movs
jne
xor
push
push
mov
jb
add
cli
fwait
dec
cli
ins
in
inc
jo
dec
or
cmp
pop
dec
retf
(bad)
in
gs
add
(bad)
imul
cmp
mov
xchg
adc
aas
mov
mov
retf
sub
(bad)
rcl
outs
mov
xchg
data16
ret
and
sbb
inc
sbb
mov
jl
inc
pop
loop
jbe
xor
dec
es
dec
pop
std
out
call
push
pop
cmp
sub
push
nop
mov
cld
pop
popf
or
xchg
xchg
sti
xor
jne
(bad)
in
and
lods
adc
pop
push
(bad)
shl
mov
push
add
(bad)
arpl
movs
mov
fs
pop
push
pop
imul
out
mov
mov
cmp
xchg
(bad)
in
dec
scas
mov
(bad)
(bad)
dec
sbb
out
push
inc
and
ins
lods
out
popa
std
xchg
mov
or
mov
xor
les
lods
jg
mov
pop
mov
and
dec
xchg
jbe
sbb
mov
xchg
nop
xchg
aaa
and
and
sti
jne
jp
nop
stos
mov
jl
clc
xchg
in
mov
and
jg
mov
loopne
cmp
retf
rcl
in
jns
ins
cmp
sbb
pop
icebp
pop
les
xor
cmp
mov
inc
or
stos
mov
cli
xchg
jg
sahf
cdq
ins
pop
mov
loope
xchg
dec
leave
gs
daa
sub
mov
clc
rcr
sub
shr
sbb
dec
inc
(bad)
or
dec
push
nop
addr16
inc
mov
jmp
pop
shl
sub
or
cmps
retf
mov
sbb
dec
js
inc
mov
cmp
push
cmp
adc
movs
jp
dec
loop
in
inc
pop
retf
pmulhuw
into
xlat
push
ret
fsubr
inc
sbb
jnp
std
xor
inc
push
push
mov
add
xchg
push
test
cmp
fbstp
add
scas
div
xlat
lahf
sub
mov
cmp
fcmovb
mov
adc
cmp
stos
jmp
ret
or
in
aaa
sbb
arpl
inc
inc
(bad)
popa
mov
xchg
in
xchg
cwde
push
jb
lods
push
xchg
(bad)
sti
add
add
cld
cmp
pop
push
dec
movs
mov
dec
sar
jge
mov
push
push
cmp
mov
mov
ss
cs
movs
cs
mov
cmc
out
xor
pop
std
shl
and
mov
ins
(bad)
rcl
in
mov
lods
out
jge
retf
out
and
imul
fs
xchg
call
jl
(bad)
adc
sub
jecxz
inc
stos
and
gs
in
adc
sbb
sbb
mov
jo
fldenv
rcr
mov
mov
test
add
int
xor
mov
shl
aaa
in
push
jle
xchg
dec
jg
sbb
shl
and
mov
jno
mov
adc
lods
push
(bad)
(bad)
ds
cdq
div
cmp
test
(bad)
das
fstp
pop
sub
popa
cmp
mov
imul
dec
imul
sbb
into
lea
pop
out
sti
push
mov
rol
ss
pusha
cdq
cdq
lods
adc
push
mov
lock
xchg
and
sbb
lahf
push
lds
push
mov
sub
push
cs
xlat
test
jecxz
and
fimul
(bad)
imul
cmp
add
in
int3
(bad)
movs
bound
stos
mov
pop
sbb
enter
push
adc
pop
push
mov
mov
sbb
dec
aas
sub
in
pop
mov
inc
adc
aaa
and
pop
sbb
or
push
sahf
out
jle
xor
cmps
jnp
out
fsubp
cmp
test
retf
stos
pusha
jmp
popa
jmp
repnz
in
dec
sti
pop
test
scas
jbe
sbb
and
loopne
cmp
lahf
jp
dec
mov
inc
push
and
ja
hlt
push
jns
dec
das
xor
repz
adc
adc
imul
pop
cli
or
push
dec
and
jbe
dec
push
std
pop
stos
or
mov
jbe
dec
jo
arpl
stos
cmp
add
ror
jmp
xor
mov
xor
aam
dec
in
mov
jl
shrd
js
cmps
scas
rol
jmp
and
pop
ret
std
inc
in
xchg
or
pushf
outs
or
movs
mov
(bad)
cmp
sbb
xchg
int
repnz
icebp
mov
sub
add
push
adc
inc
push
mov
cwde
xor
rcr
xchg
and
in
not
in
push
shl
mov
test
jbe
or
sbb
push
test
cmp
mov
sub
mov
shl
(bad)
xchg
sbb
mov
add
xchg
jp
jp
jne
pop
lea
sub
xor
push
push
jno
lahf
test
jmp
scas
jae
xchg
sub
or
lds
or
sbb
sahf
mov
mov
jmp
mov
push
inc
pop
xor
and
mov
jbe
in
xchg
stc
and
sbb
or
xchg
mov
inc
pop
test
push
cmp
ja
inc
ins
sbb
xchg
ds
fmul
mov
loop
or
jns
js
ins
mov
jns
inc
pop
jno
mov
jno
ins
fsubrp
dec
fs
scas
adc
les
mov
cmp
cli
ja
hlt
xchg
cs
inc
call
sahf
ins
pop
xor
es
das
sub
inc
cmps
jmp
cli
and
test
stc
test
adc
inc
dec
xor
xchg
ret
mov
add
push
adc
push
fbld
leave
stos
pop
aas
jbe
fwait
jns
push
dec
into
xor
test
sub
ins
popa
pushf
les
adc
mov
cmps
cmp
movs
int3
cmp
icebp
xchg
cwde
shl
fs
scas
pop
ins
icebp
inc
movs
jle
sbb
adc
int3
test
shr
pop
and
xor
dec
or
or
cld
mov
mov
test
jg
and
rol
xchg
sub
retf
ja
into
xlat
xor
loop
cmc
jl
xchg
movs
jl
cld
inc
and
fsubr
pop
cmp
outs
fadd
fcmovnb
retf
ss
jmpw
pop
call
or
pop
sub
or
iret
into
mov
shl
mov
push
mov
add
fwait
sub
(bad)
popa
dec
inc
inc
add
or
adc
xor
mov
add
fwait
cmp
(bad)
sbb
out
adc
int3
fidiv
xchg
call
lods
or
popa
and
fcmovu
mov
adc
(bad)
(bad)
lea
(bad)
mov
ja
pop
aas
ins
enter
mov
mov
sbb
dec
mov
outs
daa
mov
xchg
popa
mov
iret
jl
adc
mov
sub
mov
shl
cwde
test
and
stc
dec
jg
cmp
push
mov
lods
jecxz
cmp
bound
mov
(bad)
and
mov
jnp
mov
ficom
dec
mov
call
sub
retf
idiv
sub
lds
adc
sub
mov
sbb
(bad)
push
xchg
sahf
cmp
fstp
cmps
aam
(bad)
fsub
mov
adc
push
mov
int
test
cmps
call
mov
stos
dec
mov
in
pop
fmul
loopne
fstp
dec
pop
and
sbb
int
xor
data16
dec
dec
stos
addr16
push
push
repnz
test
jmp
inc
pop
mov
out
inc
sub
sti
jmp
dec
js
add
sbb
(bad)
fld
ret
scas
cmp
cmps
and
push
sub
into
hlt
arpl
cdq
sbb
movs
sti
or
jp
ss
and
inc
xchg
xlat
mov
mov
inc
xor
cmp
push
ficom
add
cmc
cmp
xchg
dec
mov
sub
xor
movs
ss
lods
sti
je
xor
in
fst
aaa
inc
or
mov
nop
push
ins
(bad)
mov
push
xchg
pop
(bad)
sahf
fucomp
imul
mov
shl
mov
cmp
xchg
and
mov
xchg
mov
movs
ret
ret
pop
data16
cmp
data16
sahf
push
mov
outs
ret
lds
jecxz
lahf
retf
ins
movs
fld
push
in
jne
test
xlat
aaa
sbb
nop
pusha
shr
mov
cmp
sub
inc
jnp
(bad)
mov
cmp
adc
into
jb
dec
repnz
cmp
adc
popa
retf
fist
or
stos
jae
cmp
xor
pop
lahf
cmp
mov
cmp
lods
cwde
or
sub
ret
cmps
ins
imul
or
ins
bound
sub
inc
jno
dec
adc
cmp
sbb
mov
mov
dec
es
sub
push
push
adc
in
adc
repz
in
lods
sbb
cmp
push
adc
ss
push
sbb
fstp
jp
xchg
les
sar
es
and
into
pusha
in
cdq
clc
pop
stos
fistp
ficom
fucomp
mov
pop
call
jle
in
sbb
mov
xor
pop
pop
cmps
jae
xlat
dec
ret
out
dec
daa
or
rol
sbb
jne
clc
sub
mov
adc
xchg
int3
cmp
scas
cmp
test
les
inc
jnp
outs
mov
push
pushf
dec
movs
in
(bad)
popf
mov
ficom
inc
bound
pop
outs
pop
aam
lods
fdiv
push
push
jb
rcr
cwde
mov
mov
pop
test
sar
retf
in
dec
dec
or
push
fadd
outs
icebp
fld
out
cmp
pushf
cmp
loopne
in
adc
push
fistp
imul
loopne
dec
out
mov
mov
out
inc
enter
in
(bad)
dec
lahf
jno
inc
lea
std
or
xor
scas
imul
scas
popf
and
push
inc
jne
mov
in
jae
mov
sub
nop
mov
sbb
gs
ds
fstp
or
xor
int3
cmp
cld
pop
and
xchg
(bad)
push
jns
fidiv
adc
mov
xor
out
sti
push
xlat
aam
mov
in
mov
mov
cmp
leave
xor
stos
shl
and
cmp
jns
repnz
repnz
mov
mov
adc
xor
ret
push
mov
and
popa
(bad)
fwait
(bad)
test
out
imul
jg
xchg
add
fdiv
cmp
stos
xchg
jg
and
shl
jle
call
xchg
cmps
xor
aam
pop
mov
mov
inc
mov
stos
int
icebp
lods
mov
sti
test
not
test
in
ins
aas
shl
cdq
or
sahf
in
test
xor
add
rcr
inc
pop
movs
bound
mov
pop
pop
or
ja
xchg
(bad)
cmp
(bad)
pusha
je
cmp
and
sub
xor
jno
mov
arpl
mov
jp
pop
mov
jns
dec
push
popa
fstp
jb
lods
inc
mov
pop
lods
imul
pop
sbb
adc
sti
xor
retf
in
cmc
outs
pop
xor
jmp
xlat
pop
out
adc
movs
sub
mov
pop
test
ins
test
cmc
fcomp
push
dec
mov
jns
cmp
pop
test
xor
iret
sbb
dec
std
and
aad
inc
mov
pop
mov
sbb
push
loope
xchg
ins
data16
jae
aaa
mov
shl
int
sub
je
enter
or
cmp
mov
into
cwde
jne
call
add
popf
or
push
xor
sbb
push
mov
sub
add
mov
mov
xchg
arpl
xchg
popf
outs
rcl
and
pop
sbb
ins
add
aas
mov
call
xchg
push
pop
xor
loopne
fwait
sti
shl
imul
adc
pop
test
lds
pusha
aaa
xchg
add
pushf
rcl
push
arpl
out
sahf
test
sub
or
mov
addr16
(bad)
in
pop
pop
and
lds
test
mov
jge
(bad)
jnp
ds
es
loopne
stos
aas
jecxz
call
mov
pushf
jo
cdq
mov
mov
mov
sub
mov
hlt
dec
scas
popa
mov
adc
cmp
out
std
add
arpl
aaa
(bad)
jecxz
repnz
pop
xchg
pusha
ret
mov
jnp
mov
add
retf
and
adc
xchg
sub
dec
call
js
aas
fisttp
cmp
(bad)
stc
loop
cmp
push
lea
sbb
inc
mov
aad
aam
loopne
push
add
xor
jle
(bad)
out
int3
pop
dec
std
xor
pop
xor
sahf
push
call
xchg
fabs
adc
xchg
sub
out
aas
mov
(bad)
loope
mov
ins
push
(bad)
mov
adc
or
dec
fisttp
push
mov
mov
dec
pop
jmp
shl
cdq
out
lock
sti
test
jbe
fbld
jae
sbb
xchg
fidiv
pop
mov
pop
cmps
xchg
cmp
repz
arpl
imul
push
imul
add
add
rol
mov
mov
add
and
mov
jmp
popf
push
mov
js
mov
sahf
push
leave
aad
sbb
call
cmp
int3
(bad)
(bad)
shl
ins
in
les
pusha
cmp
into
mov
push
xor
ss
xor
je
das
jg
fiadd
pop
xchg
xor
fisubr
arpl
ret
sub
test
or
pop
jnp
add
pop
ins
imul
add
retf
mov
leave
int3
xchg
jmp
(bad)
jnp
jge
mov
lea
mov
shld
shr
cmp
inc
shl
bound
dec
aam
or
xor
das
push
fldenv
repz
ds
pop
pop
sti
fld
pop
cmp
cmp
cli
test
mov
mov
mov
out
xchg
adc
mov
mov
or
daa
cmp
test
inc
call
push
cli
and
jae
mov
mov
pop
sub
xchg
iret
ror
jns
stos
leave
xor
sbb
enter
popa
pop
outs
out
das
dec
push
iret
mov
sub
xchg
mov
jb
popf
jle
adc
xor
sub
mov
cmc
mov
scas
mov
pop
(bad)
xlat
fstp
jb
ds
and
sub
xor
dec
or
outs
fidivr
retf
scas
cmps
sub
xchg
jp
pop
mov
idiv
push
and
adc
mov
xchg
push
dec
adc
pushf
dec
ror
stos
test
xchg
shr
stos
push
and
mov
push
test
jae
retf
jb
or
xor
mov
add
cli
cdq
popa
rol
test
mov
push
adc
dec
jecxz
adc
stc
inc
jbe
leave
(bad)
xchg
xchg
cdq
adc
into
lods
out
in
(bad)
aam
and
fucom
inc
cmp
cmpxchg
(bad)
retf
dec
daa
inc
repz
in
xchg
jb
and
cld
cwde
stos
adc
inc
(bad)
cmp
push
or
sbb
repz
sbb
(bad)
mov
adc
cmp
inc
ret
push
adc
and
iret
call
adc
retf
xchg
adc
shl
xor
mov
mov
jecxz
xchg
pop
rcl
xchg
adc
push
imul
sub
add
dec
in
push
das
cmps
add
cmp
in
ror
call
and
xchg
push
jmp
movs
movs
mov
adc
and
or
gs
retf
iret
push
repnz
mov
scas
movs
sub
inc
mov
(bad)
int
pushf
xchg
push
jmp
fwait
mov
stos
ret
mov
les
push
xchg
mov
jno
loopne
pop
adc
push
jno
cmps
imul
pop
lock
pop
ja
ins
fcomp
add
loope
dec
test
in
shr
xlat
aad
push
jge
mov
popf
stos
xor
xor
push
addr16
xchg
cmp
jl
cli
test
popa
sahf
mov
pop
fist
push
pop
sbb
hlt
(bad)
enter
popa
xchg
movs
or
fs
sti
or
push
shl
push
lds
aam
enter
scas
test
fwait
push
sub
std
rol
xchg
dec
(bad)
add
inc
mov
inc
dec
das
ret
pop
push
mov
mov
jge
xchg
clc
fldcw
pop
jno
iret
cwde
sbb
add
lods
add
pop
les
mov
enter
das
ins
mov
pop
dec
sbb
xor
jo
cli
adc
mov
xor
ja
mov
movs
imul
add
std
add
mov
cmp
ret
inc
inc
div
sbb
or
dec
pop
mov
in
inc
fdivr
add
sbb
sbb
push
xchg
ins
(bad)
adc
xchg
fcmovu
fwait
jb
xor
jns
push
push
pusha
cmp
add
push
movs
mov
or
mov
mov
shr
loope
mov
fs
inc
or
mov
adc
add
adc
into
pusha
fisub
in
dec
mul
outs
stc
ins
jp
sbb
dec
cmp
icebp
pop
push
cmc
xchg
push
sub
and
dec
xor
pop
stc
xchg
xor
mov
std
jmp
add
and
jnp
mov
loop
cmc
js
out
add
retf
inc
and
movs
cmp
and
mov
xchg
movs
sub
jno
dec
jno
bound
clc
jo
hlt
hlt
test
lods
call
ins
pop
push
fbld
sub
cmp
adc
cld
add
in
push
cld
or
xchg
mov
sub
aas
gs
(bad)
(bad)
and
inc
mov
loopne
adc
sbb
and
sub
scas
cmps
in
jns
ret
call
push
cmc
cmp
push
sbb
cs
or
pop
push
movs
call
mov
mov
ds
repz
(bad)
push
fimul
or
mov
adc
adc
xchg
jnp
test
std
pop
out
ror
shl
(bad)
adc
mov
cmps
fcomp
jle
ror
es
(bad)
cld
arpl
xchg
lock
aad
sahf
cmp
jb
(bad)
xor
dec
test
mov
pop
sub
or
(bad)
les
test
sub
(bad)
mov
out
xor
(bad)
pop
dec
pop
xor
sub
mov
loop
sbb
jae
mov
iret
into
pop
fs
test
sbb
add
sub
mov
add
je
sbb
daa
sub
push
mov
mov
jp
pushf
std
in
lods
dec
imul
jmp
enter
pop
retf
ja
pop
aam
jle
pop
clc
in
out
test
sbb
xor
out
jae
mov
(bad)
sahf
loop
leave
pop
lds
sbb
xchg
adc
or
mov
iret
mov
sub
xlat
cmp
out
sub
ins
lods
inc
sbb
xor
test
clc
dec
lahf
in
jae
dec
arpl
inc
pop
jmp
jmp
inc
adc
icebp
cmp
jnp
idiv
mov
data16
int3
std
lock
movs
lods
movs
cmps
pusha
clc
sub
test
bound
in
lods
jbe
mov
cdq
mov
pop
jle
loop
mov
mov
cdq
in
int3
repz
loope
cmp
(bad)
pop
adc
stc
push
push
xchg
ja
and
ror
je
mov
data16
and
outs
pop
retf
aad
jne
bound
xor
dec
rcl
in
sbb
mov
pop
add
mov
inc
rcl
js
pop
(bad)
sbb
jbe
mov
add
inc
stos
jl
mov
add
imul
xchg
stos
(bad)
sbb
mov
ficom
rcl
in
pop
push
repz
test
xchg
sub
test
add
xchg
aad
in
jae
push
popa
mov
ins
add
dec
fist
adc
dec
sub
daa
pop
dec
xchg
push
addr16
lods
popf
jno
addr16
push
repnz
lods
dec
jle
mov
jl
scas
mov
dec
setle
aaa
or
sbb
cld
inc
xor
enter
cmps
movs
outs
(bad)
(bad)
cmp
sbb
scas
jmp
in
(bad)
sbb
mov
push
pop
gs
gs
mov
mov
lods
sar
nop
stos
add
lock
ja
fdiv
bound
dec
mov
fistp
cmc
arpl
xor
shl
scas
push
sbb
pop
xor
push
cmc
fimul
pop
cmp
cmp
cwde
dec
jbe
dec
pop
mov
adc
retf
dec
xor
ret
add
fcomp
sub
sbb
inc
outs
pop
and
test
or
mov
inc
fst
bound
mov
cmp
cmp
out
sub
cmp
inc
mov
ror
mov
iret
outs
xchg
jnp
(bad)
scas
mov
and
lods
retf
xor
into
lods
lock
ret
pushf
retf
mov
ja
adc
retf
inc
or
mov
xchg
fadd
dec
dec
adc
pop
out
mov
and
or
mov
int3
add
jns
test
pop
and
mov
in
(bad)
sbb
pushf
jae
pop
mov
dec
mov
pop
cmp
mov
or
pop
xchg
fsub
xor
pop
jbe
mov
jb
cs
sub
mov
fiadd
nop
test
sbb
xchg
call
neg
fdiv
out
sbb
push
popa
dec
push
sub
xor
and
mov
sub
mov
mov
jns
and
push
adc
dec
mov
xor
mov
repz
xor
jle
and
jl
jle
rcr
into
ret
pop
mov
into
or
jb
add
adc
int
out
sub
cmps
or
jo
les
mov
aad
xchg
cs
cmp
inc
pop
mov
in
lods
out
inc
lds
add
adc
iret
push
stos
pusha
push
push
movs
or
or
push
loop
xchg
imul
addr16
repz
mul
dec
nop
push
pop
push
xor
cwde
xor
sbb
loope
cmps
int
xchg
test
lea
je
fisttp
jno
call
outs
loope
mov
(bad)
daa
sbb
push
add
xor
or
and
data16
lock
(bad)
sub
repz
sub
mov
repnz
jae
ret
sbb
push
cli
fild
fs
lods
movs
cmp
add
stos
sti
jae
cmp
aad
cmp
push
imul
cmp
aaa
pushf
xor
outs
lods
xor
iret
mov
xlat
mov
iret
retf
iret
xor
mov
test
(bad)
xor
out
(bad)
aam
cld
movs
jp
mov
sbb
and
sar
xchg
add
or
shr
mov
xor
in
js
sahf
arpl
inc
pop
popf
mov
shl
jmp
fs
in
mov
xchg
daa
sbb
ds
imul
adc
rcl
fmul
mov
adc
leave
loopne
bound
fbld
hlt
push
mov
sub
sub
pop
(bad)
add
push
test
dec
pop
xor
(bad)
icebp
jg
mov
push
outs
sbb
mov
hlt
mov
je
lahf
int3
out
jne
adc
pop
inc
and
dec
daa
push
jmp
clc
rcl
jp
imul
pop
movs
xor
xchg
in
retf
xor
jl
popf
sub
pushf
ja
ror
xor
icebp
jmp
xchg
jnp
iret
dec
stos
mov
push
out
loope
retf
jo
xor
movs
leave
mov
fmul
sub
rol
lock
unpckhps
js
data16
fcomi
mov
adc
push
jno
fcmove
in
int
pop
out
cmp
mov
iret
nop
addr16
push
arpl
add
jmp
xor
inc
loopne
(bad)
loopne
sbb
cmp
add
add
push
cld
cmp
loop
pop
arpl
xor
gs
ins
test
cmp
jp
int
inc
stos
cs
pusha
xchg
push
add
shr
std
ret
cmp
(bad)
sub
popf
ins
sbb
in
mov
cmp
push
add
jmp
xor
inc
cli
jle
xor
xor
gs
ja
mov
in
test
adc
inc
and
fist
xor
add
shr
adc
pop
and
frstpm(287
cs
pop
inc
push
sbb
sbb
gs
lds
add
mov
scas
js
imul
mov
mov
add
in
cdq
adc
cs
loopne
pop
dec
sub
cdq
rcl
mov
cmp
in
popa
xchg
push
xchg
inc
mov
xchg
and
adc
stos
dec
mov
fidivr
dec
and
lea
mov
movs
and
push
or
repz
outs
inc
enter
sub
out
popa
(bad)
sub
lods
imul
jno
mov
adc
cmps
mov
cmp
ins
fcomp
push
sbb
shr
xor
adc
stc
movs
adc
in
sbb
adc
aaa
popa
jb
std
add
call
int
xor
mov
imul
sbb
mov
ret
mov
jmp
push
into
adc
and
rcl
pop
sbb
sbb
add
(bad)
out
mov
out
pop
outs
into
shr
scas
xchg
xchg
stos
cmps
cs
test
xchg
int
dec
push
out
es
ficomp
pop
or
xchg
out
(bad)
mov
sbb
add
retf
test
sbb
push
leave
jp
or
les
and
sbb
push
mov
mov
or
pop
ds
sub
lock
scas
movs
scas
scas
jae
mov
and
es
retf
sub
not
pusha
mov
push
cmp
inc
cmp
or
outs
push
add
js
xchg
outs
sub
mov
mov
cmps
push
mov
inc
push
xor
mov
popf
fidivr
cmp
lods
nop
and
jo
mov
rol
cmp
mov
fmul
pop
popa
cs
sub
ss
push
shl
stos
and
push
stos
retf
call
sbb
jp
mov
inc
dec
mov
or
push
(bad)
das
(bad)
cmp
push
sbb
dec
test
retw
fdiv
adc
scas
icebp
adc
(bad)
sub
jmp
xchg
dec
mov
mov
mov
ret
shl
inc
sbb
addr16
std
jmp
addr16
add
lods
lods
inc
js
loop
int3
add
(bad)
jmp
cmp
lods
jne
mov
mov
inc
dec
stos
xlat
cmp
sub
out
outs
push
inc
jmp
pop
jecxz
cmp
cdq
cwde
fsubr
cmp
dec
outs
jl
aaa
xor
xchg
pop
jg
or
or
cmp
pop
mov
xlat
inc
jno
xor
mov
repnz
xchg
xchg
mov
xor
xchg
popf
adc
fs
pop
movs
and
and
add
dec
sbb
sub
mov
inc
and
sub
push
in
xlat
xchg
jns
test
clc
pop
sub
mov
fcom
push
mov
inc
or
inc
movs
mov
fisubr
scas
in
jne
ins
mov
mov
cmc
mov
jo
and
mov
mov
jo
sbb
xchg
sbb
and
ret
or
movs
sbb
mov
bnd
mov
mov
and
arpl
imul
xor
cmps
mov
and
sbb
icebp
xor
iret
dec
xor
out
dec
pop
ins
enter
push
and
out
js
popf
gs
rcr
fwait
adc
es
sbb
pop
cmp
cmp
mov
ficom
lds
stc
ficomp
repnz
cmp
sbb
(bad)
dec
or
test
ret
rcl
dec
outs
push
es
dec
loop
sbb
rol
fstp
bound
cli
xchg
rcr
fmul
repz
and
mov
(bad)
jb
mov
or
dec
xchg
mov
add
fstp
push
lock
sub
add
sub
jnp
(bad)
jge
adc
add
aas
push
js
jmp
repz
call
fbstp
aaa
mov
pop
mov
pop
pop
dec
data16
js
repz
adc
bound
jmp
mov
ins
ins
mov
pushf
int
js
jno
das
ret
mov
(bad)
jmp
dec
dec
sbb
pop
dec
inc
test
es
mov
cli
inc
and
sbb
in
jmp
out
push
sbb
push
and
xchg
pop
leave
xchg
ss
mov
mov
test
rol
hlt
mov
pop
cmp
adc
lods
xchg
pop
sub
lods
mov
retf
shl
in
push
pcmpeqw
lods
jnp
rcr
stos
fcom
sub
sub
sahf
add
jmp
ins
xchg
jae
in
mov
aad
test
jp
inc
in
cs
or
repz
sub
and
cmc
mov
cdq
mov
sub
xlat
(bad)
dec
inc
enter
shl
outs
dec
popa
adc
out
xor
aas
fstp
stos
inc
cld
bnd
cmp
dec
cmps
stos
inc
inc
add
ret
fabs
jmp
mov
mov
jae
popf
and
int
pop
popa
mov
clc
cmp
pop
jns
inc
inc
cmp
push
test
ins
nop
out
jecxz
xor
push
leave
adc
out
mov
fst
inc
test
je
and
sub
jnp
xchg
cmp
push
push
sar
add
gs
pop
sub
mov
push
mov
cld
sar
push
mov
cdq
xlat
mov
xor
push
and
imul
xchg
lahf
sub
xlat
xchg
xchg
dec
aad
es
and
fucomp
pop
and
popa
dec
mov
jle
hlt
inc
push
adc
mov
lods
or
sub
or
scas
jns
in
sbb
loope
cwde
ror
inc
aas
mov
jp
ja
xchg
mov
cmp
fnstenv
es
pop
aam
fwait
ja
movs
aaa
xchg
(bad)
sub
ss
shr
scas
call
mov
xchg
scas
and
cmp
pop
ss
xlat
or
sub
leave
stc
dec
mov
arpl
dec
shr
dec
push
fdiv
dec
mul
inc
test
leave
or
lods
shl
cs
xor
xlat
fwait
inc
loope
mov
leave
fcmovb
jge
cmps
fs
jbe
imul
into
jbe
(bad)
cmps
or
retf
rcl
stc
inc
test
lds
or
std
push
fstp
movs
ret
(bad)
or
ss
jge
add
data16
pop
add
pop
sub
dec
int3
cmp
leave
iret
cmp
enter
lea
cmp
test
or
push
xor
pop
cmp
vcmpps
rol
mov
jge
add
lea
call
xchg
dec
pop
xchg
nop
js
fmul
shl
mov
xchg
xor
add
inc
cmp
xchg
fmul
fiadd
call
in
cmp
push
or
outs
inc
mov
not
and
clc
call
cli
sbb
test
push
shl
fimul
aas
(bad)
sbb
xor
xchg
mov
dec
out
sar
pop
cwde
fwait
mov
push
retf
aam
and
sub
repz
mov
arpl
inc
nop
jns
outs
test
ficom
test
pop
push
inc
ffree
mov
or
and
sbb
mov
fcmovne
sbb
mov
sub
out
adc
and
ror
xchg
jle
mov
fwait
retf
xchg
fdiv
int3
(bad)
ss
mov
leave
aaa
mov
mov
mul
(bad)
mov
sbb
sbb
in
sbb
push
into
inc
js
dec
inc
inc
ror
xor
push
sub
adc
adc
imul
fadd
mov
pop
mov
loop
lahf
mov
int
out
mov
adc
retf
adc
sub
call
and
js
jecxz
(bad)
imul
jns
push
cmp
cmc
nop
fadd
sbb
jb
jmp
dec
sub
outs
cwde
out
pop
iret
xor
test
rcr
les
mov
or
ret
and
pop
ds
sub
sbb
pop
test
popf
mov
mov
arpl
mov
inc
fisttp
inc
sar
aaa
outs
push
aad
pop
jne
mov
pop
hlt
pop
pop
(bad)
jo
cmc
pop
xchg
aaa
sti
pusha
fdiv
cmps
and
or
ficom
imul
ds
cs
push
push
enter
ror
inc
xor
or
dec
and
retf
cmp
jge
mov
lock
sbb
push
loop
dec
xchg
hlt
mov
loopne
aaa
and
int3
aaa
xchg
xlat
pop
aad
jle
movs
iret
mov
xor
loope
test
lahf
movs
pop
inc
lahf
jno
jmp
xor
dec
stos
out
lods
movs
jne
dec
jg
cmc
int3
sub
xchg
sbb
loopne
mov
loope
adc
sbb
lds
cdq
jg
sub
adc
std
mov
fadd
aaa
jmp
aas
icebp
jae
loope
and
cmc
inc
sbb
pop
sub
mov
cli
popf
mov
or
movs
lahf
imul
inc
mov
mov
add
int
pop
data16
mov
xchg
push
mov
or
or
inc
or
push
mov
fbstp
xor
mov
sub
imul
sbb
out
aad
cmps
mov
(bad)
imul
dec
xor
rol
dec
nop
sbb
inc
dec
repnz
cmp
add
test
enter
or
lea
fist
jb
mov
inc
inc
or
push
retf
xor
sbb
lods
xchg
(bad)
cld
mov
xchg
inc
and
stos
add
push
mov
and
pusha
sbb
pop
and
adc
xchg
cmp
add
and
adc
xchg
mov
aas
sub
ins
enter
outs
dec
mov
sahf
cmp
xchg
movs
sub
add
(bad)
icebp
mov
ss
movs
mov
stos
movs
push
mov
push
xchg
push
cmovs
push
push
xchg
jb
push
push
jg
setl
adc
mov
out
dec
sti
int
mov
les
jmp
out
iret
or
std
out
test
mov
jp
into
mov
clc
addr16
jmp
mov
cmps
push
pop
loopne
dec
outs
fsubr
shl
sub
lahf
scas
pop
test
mov
int3
inc
cmp
test
das
mov
inc
addr16
adc
in
rcl
int3
and
adc
dec
adc
xchg
pop
or
test
mov
lea
cmp
and
xchg
repnz
out
popf
hlt
adc
jmp
mov
cmps
nop
test
or
gs
sub
xchg
sub
loope
inc
mov
sub
mov
scas
aas
fdecstp
or
push
mov
xchg
fadd
push
sbb
sub
mov
mov
icebp
adc
pop
cmp
sbb
jnp
sti
jp
ror
fs
adc
in
retf
retf
mov
pop
sbb
cdq
mov
pushf
pop
jg
mov
xchg
inc
inc
mov
retf
pop
test
xor
aas
push
mov
jno
xor
stc
pop
mov
or
push
xlat
out
add
outs
sub
clc
cwde
or
mov
push
and
repnz
cmps
add
add
(bad)
adc
push
sub
dec
sbb
xchg
test
mov
pop
loop
jp
add
shr
adc
adc
xchg
inc
mov
(bad)
(bad)
psubw
mov
clc
dec
pop
and
lea
in
cli
repz
test
cli
fimul
adc
adc
scas
lods
xchg
mov
mov
mov
fstp
mov
nop
ret
push
sbb
xchg
pop
dec
inc
inc
in
in
iret
aaa
xlat
aas
retw
mov
aad
xchg
mov
pusha
sbb
sbb
or
repz
repnz
xchg
cs
xchg
xor
imul
push
aas
xchg
xor
push
addr16
cs
xchg
sbb
rol
xor
out
inc
cmps
daa
sub
cs
add
push
mov
mov
pop
test
fld
jle
push
cmp
adc
in
sahf
pop
sub
push
pop
js
cmp
inc
outs
sti
push
or
daa
popa
bound
cmp
mov
sub
cs
mov
test
push
jno
pop
aaa
mov
push
dec
enter
fs
sar
add
xchg
mov
test
mov
dec
call
jnp
call
cmp
or
fs
jb
outs
mov
xchg
(bad)
fcom
jae
dec
mov
mov
mov
xchg
or
or
ins
xchg
retf
lods
xlat
rcl
xor
cdq
daa
pop
cmp
mov
fcomp
cmp
mov
pushf
fmul
add
in
mov
add
jns
adc
pop
xchg
mov
jae
scas
ja
call
push
adc
xchg
lea
pop
std
mov
idiv
mov
ficom
xor
das
jle
loope
aaa
pop
bound
not
stos
call
fwait
arpl
sub
xor
(bad)
movs
mov
jne
ds
jb
ss
inc
cmp
and
(bad)
cli
je
dec
xor
pop
rol
push
jge
test
xchg
sub
sub
loope
push
pop
aas
or
int
dec
mov
mov
push
jb
aam
push
ins
add
(bad)
out
in
pop
adc
aaa
jno
leave
sahf
hlt
and
cmp
inc
sub
ret
cmps
adc
ss
sub
ret
cmp
mov
mov
jge
dec
cmp
je
aam
cmps
pop
dec
mov
mov
lock
push
mov
(bad)
loop
cmp
test
pop
cmp
and
adc
into
clc
jle
inc
and
int3
ror
sbb
out
add
push
test
or
(bad)
mov
push
fmul
std
repz
push
popf
call
sbb
popf
or
call
cmps
fcomi
movs
adc
test
pop
push
pop
add
stos
repnz
sub
dec
pop
js
adc
popf
adc
in
push
gs
sub
cwde
pop
and
mov
lods
fmul
inc
shl
sbb
ja
(bad)
sti
mov
pop
test
push
out
lea
or
into
popa
cdq
cmp
mov
fcomp
mov
mov
bound
int
cmp
std
in
lds
call
inc
fidiv
jl
sti
aam
dec
pop
push
xchg
lahf
stos
outs
or
out
iret
jl
es
push
inc
xor
es
push
div
ins
and
push
push
mov
add
inc
popa
sbb
jb
xchg
mov
inc
enter
cmp
xor
es
(bad)
cmp
fdivrp
xchg
xlat
ror
scas
mov
imul
stos
adc
cwde
add
mov
jl
loope
jns
data16
stc
adc
mov
scas
pop
ret
sbb
cmp
mov
mov
mov
(bad)
(bad)
mov
shr
ret
push
xchg
test
mov
enter
movs
fs
add
jns
les
outs
imul
icebp
cli
sub
mov
adc
cdq
ins
xlat
dec
add
movs
test
(bad)
mov
inc
mov
pusha
add
mov
sub
fbld
aad
jp
jno
inc
popa
mov
jmp
xchg
or
stos
pop
and
(bad)
pop
pushf
ja
movs
rcl
xchg
lods
mov
les
ds
or
ret
sbb
pop
shl
int3
pusha
fsubr
mov
popf
in
jno
mov
cwde
mov
and
cmp
(bad)
inc
jbe
outs
mov
xor
mov
add
sbb
xchg
neg
mov
push
test
xchg
lods
fnclex
fidivr
fisub
(bad)
or
daa
jne
push
xlat
adc
in
repnz
lock
in
bnd
ins
cmp
xchg
out
pop
int3
xchg
add
fisubr
dec
push
nop
aad
cli
jecxz
pop
push
(bad)
add
sub
push
ror
repz
icebp
pop
test
call
jae
es
jg
sub
and
adc
pop
mov
adc
cli
inc
pop
dec
jnp
popa
jecxz
pop
pop
push
std
pop
or
xor
jne
inc
retf
and
(bad)
push
jbe
ss
jb
or
nop
mov
lods
icebp
mov
xor
mov
jl
or
jp
sti
pushf
cmp
dec
mov
sbb
jo
pusha
jno
not
lock
das
and
nop
xchg
sub
mov
jb
retf
mov
inc
and
and
and
xchg
aas
repnz
stc
stos
hlt
cmp
dec
ds
add
adc
call
cmp
dec
clc
and
inc
int
push
adc
jno
inc
icebp
cmp
mov
lea
mov
mov
fcomp
xor
std
aas
jl
outs
inc
mov
mov
call
add
or
retf
dec
mov
ds
bound
and
push
fmul
pushf
push
add
loop
sti
stc
jno
aaa
push
dec
mov
pop
int
loopne
mov
mov
add
repnz
jae
in
cli
lea
jns
outs
cmp
xchg
popa
push
iret
aam
pop
popa
push
cmp
sub
rcl
test
(bad)
jno
aas
dec
sti
repnz
pop
in
retf
sbb
xchg
xchg
sub
pop
mov
cwde
iret
sahf
jg
arpl
or
pop
cmp
xor
jo
pop
xlat
sub
mov
pop
aas
aam
push
push
ds
fisubr
int3
or
imul
mov
ss
inc
icebp
leave
pop
inc
and
popa
in
int3
test
push
(bad)
xchg
inc
cmp
arpl
and
(bad)
lods
pop
mov
pusha
nop
or
mov
test
rol
std
and
rcr
aas
pop
mov
mov
sbb
cli
push
dec
fadd
les
aas
sbb
sti
mov
mov
retf
ja
xchg
inc
call
fwait
sbb
push
xor
xchg
lock
(bad)
retf
push
jecxz
imul
lahf
je
(bad)
js
pusha
jl
dec
mul
sbb
pop
sub
mov
jp
test
add
mov
imul
loope
in
push
adc
ss
enter
pop
inc
ins
(bad)
jnp
sub
fnsave
aam
(bad)
sbb
fmul
and
ins
call
or
mov
(bad)
jp
fldenv
cmp
jb
jge
js
xor
cmc
adc
inc
add
sbb
out
xchg
pop
mov
mov
inc
or
and
fdivrp
xor
cwde
xchg
and
push
ins
ins
pusha
mov
mov
shl
xor
aad
in
push
mov
int3
stc
movs
adc
mov
aam
mov
pop
xor
jg
xchg
and
dec
in
arpl
mov
adc
in
mov
push
ret
sbb
pop
ss
psubusw
sahf
dec
and
jns
mov
lods
(bad)
xchg
sbb
sbb
cmp
ins
sub
mov
adc
or
imul
pop
and
je
xor
mov
icebp
mov
xor
xlat
mov
in
mov
cs
inc
loop
dec
lods
push
dec
mov
inc
test
inc
retf
jg
test
cmps
ror
inc
sti
mov
adc
enter
adc
loopne
push
lods
xor
mov
cdq
popa
sbb
(bad)
(bad)
pushf
push
adc
leave
(bad)
and
mov
nop
test
sub
ds
jp
mov
cmp
stc
(bad)
add
or
jp
mov
int3
data16
add
in
push
adc
out
data16
retf
ret
xor
jbe
sub
loop
shl
push
push
pop
push
mov
push
cmps
cmp
jg
shr
mov
mov
jle
out
js
mov
pop
fcmovne
mov
cwde
or
fsubr
inc
(bad)
ds
inc
inc
(bad)
(bad)
jne
sbb
das
mov
clc
sti
test
xchg
jnp
mov
add
je
jmp
addr16
pop
cwde
enter
inc
mov
xchg
or
push
sbb
shr
aaa
shr
cdq
add
and
dec
xchg
test
sbb
and
mov
sub
sar
out
cmp
shl
je
jno
cli
cs
aad
mov
pushf
fist
push
dec
xor
pop
or
movs
add
jne
mov
jno
fcom
stos
cmp
xchg
inc
sub
jae
push
mov
cli
aaa
ror
xor
imul
dec
fwait
pop
lahf
stc
jmp
xchg
jbe
xor
cmp
movs
mov
pop
cmp
(bad)
mov
lea
daa
ins
adc
ja
mov
xlat
adc
clc
add
cli
ficom
aam
mov
xor
stos
leave
and
sti
in
pop
inc
mov
icebp
push
pusha
stos
sbb
neg
dec
addr16
xchg
mov
jbe
xchg
jmp
loopne
into
pushf
push
je
jle
sub
retf
inc
shl
pop
add
jp
fnstenv
pop
xchg
dec
dec
and
dec
rcr
cmp
push
fsubr
fistp
mov
lds
push
xchg
cmp
adc
loop
in
movs
sahf
push
test
jmp
mov
addr16
inc
data16
sbb
sub
fwait
cmp
inc
pushf
push
pop
lock
pop
mov
jl
push
and
sub
sbb
jecxz
int3
leave
sbb
sub
ror
dec
xchg
fld
push
or
xchg
loop
jne
or
jo
fsub
pop
(bad)
int3
pop
pusha
jl
push
push
enter
in
mov
test
je
gs
repz
outs
xchg
add
movs
hlt
pop
mov
xor
pop
and
dec
aaa
jge
shl
imul
and
xchg
jmp
std
dec
pop
sub
in
aam
ficom
jns
jbe
mov
adc
xchg
(bad)
dec
jno
pop
ret
adc
mov
xchg
adc
sub
popf
sbb
mov
into
add
ror
mov
jmp
adc
repnz
test
cwde
hlt
xchg
retf
(bad)
das
not
xor
xor
(bad)
jo
mov
(bad)
fs
inc
iret
into
and
ret
(bad)
lock
(bad)
xor
aam
push
or
xor
or
fwait
vminps
push
in
sbb
pop
out
xor
mov
xor
push
xchg
dec
aad
sbb
cmp
lahf
in
push
pop
jae
outs
fst
ficomp
inc
ja
retfw
dec
mov
cmp
jns
xchg
mov
cli
rcl
or
out
sbb
xor
loopne
xor
fsubr
jp
mov
or
das
sub
sbb
out
mov
sub
push
push
mov
out
jle
push
enter
inc
sbb
push
or
push
xchg
add
adc
lea
dec
mov
or
jne
pop
dec
jmp
sbb
(bad)
jmp
(bad)
xor
inc
out
add
jne
cmps
mov
fistp
ret
lock
adc
scas
jo
ins
in
xchg
add
into
mov
repnz
cs
cwde
ror
mov
jecxz
loopne
mov
cwde
js
into
cmps
or
mov
ins
xor
call
xor
pop
mov
icebp
cmp
cwde
mov
jo
loop
inc
lahf
jno
dec
aas
loope
pop
push
lods
cmp
(bad)
sbb
mov
sbb
and
mov
mov
and
addr16
retf
js
jmp
stos
add
out
sahf
out
out
xchg
push
mov
lock
lahf
mov
movs
jl
movs
jp
mov
mov
rcr
fsubp
into
xchg
ds
jo
push
inc
or
mov
sbb
xor
jecxz
sar
mov
xchg
sar
sti
xor
call
sbb
mov
push
(bad)
and
test
gs
xchg
jns
cmp
mov
push
nop
mov
mov
or
add
ds
xlat
in
mov
cmp
fmul
jmp
xchg
push
jno
jg
sbb
int
inc
or
adc
test
out
xchg
test
and
cmp
ss
in
mov
lods
sbb
lds
sbb
cmp
or
rol
retf
xor
mov
out
mov
mov
nop
in
ds
aad
jne
imul
cmp
mov
cmps
mov
in
or
movs
aas
js
aas
or
psubusw
call
pop
jge
je
imul
mov
inc
aas
(bad)
cmp
inc
dec
mov
test
mov
jge
cmp
aad
inc
es
enter
(bad)
xlat
or
repnz
cli
out
in
sbb
sbb
push
add
push
xchg
xchg
cli
pop
test
xchg
xchg
in
push
mov
mov
test
retf
and
lods
or
add
add
call
push
call
xchg
inc
jp
push
xchg
or
inc
inc
cmp
pop
jg
inc
ss
aas
retf
pop
pop
jns
adc
test
and
mov
mov
jp
dec
cmp
pop
lods
cmp
arpl
call
int
inc
outs
cmp
sar
fisttp
gs
popf
daa
pop
(bad)
cwd
xchg
jmp
in
in
paddusb
lahf
repz
sub
add
movs
mov
daa
add
hlt
adc
and
mov
leave
cmp
jg
or
push
mov
inc
push
xchg
arpl
ins
sar
sbb
dec
xor
sbb
mov
cs
lods
adc
cmp
pop
aam
aam
xor
pop
xchg
and
and
jb
lods
out
adc
push
out
cmp
(bad)
push
jo
imul
mov
or
std
cwde
mov
dec
ror
pop
inc
dec
add
iret
je
cmp
xor
int3
test
sbb
cld
lahf
dec
rol
jmp
dec
add
push
ins
sub
icebp
push
test
add
cmp
dec
(bad)
dec
outs
daa
and
dec
jecxz
xchg
mov
jno
jb
mov
scas
dec
inc
mov
dec
jmp
pop
pushf
fcmovnbe
sbb
jbe
outs
hlt
jns
dec
push
cs
movs
pop
mov
lahf
(bad)
lock
cmps
lock
cwde
push
dec
cmp
fstp
push
arpl
pop
in
mov
adc
ja
and
stos
xor
jp
sbb
push
jae
popa
sbb
mov
inc
lahf
sub
jmp
adc
or
repz
cdq
scas
mov
pop
mov
push
mov
dec
jo
dec
push
jmp
mov
mov
add
rcl
and
jno
add
pusha
mov
sti
jo
push
pop
cmp
(bad)
mov
pop
sub
imul
and
imul
mov
inc
ror
xchg
push
int3
push
and
stc
fadd
rol
outs
jnp
je
jle
xchg
adc
or
xor
and
add
test
push
jb
inc
ficom
call
jo
popa
xor
add
xchg
or
clc
into
call
pop
fstp
std
(bad)
std
push
inc
retf
aaa
push
cmp
jb
push
xchg
stos
pop
adc
pop
pop
cmps
(bad)
lds
ror
imul
pop
xor
js
mov
and
and
xchg
aas
jge
and
push
pop
jbe
mov
aas
cmp
int
mov
aad
jp
push
clc
fucomi
inc
or
push
clc
xor
push
lods
add
xor
je
inc
shl
cmp
outs
mov
fwait
in
daa
push
jbe
cmp
(bad)
dec
rol
add
retf
jae
xchg
das
arpl
xor
and
pop
mov
out
sbb
jl
mov
adc
xchg
sub
xchg
test
mov
cs
jne
leave
push
clc
mov
popf
and
call
mov
or
sbb
mov
adc
cmp
jo
mov
sbb
mov
xchg
xlat
sbb
lock
(bad)
and
add
ins
ja
push
cld
inc
lods
aad
pop
arpl
not
mov
loope
dec
fcom
xchg
pop
outs
pushf
lods
fistp
mov
fisttp
dec
bound
stos
push
test
adc
dec
xchg
or
sub
cmp
sub
mov
jmp
shr
mov
es
push
(bad)
fdiv
enter
and
int3
push
lods
cld
mov
test
pop
cs
jmp
pusha
jo
inc
rcl
(bad)
fucom
xchg
(bad)
mov
cld
pop
(bad)
hlt
in
xor
adc
sub
and
mov
jns
lock
pop
clc
jg
in
mov
or
idiv
test
pop
fsubr
ficomp
adc
dec
jp
dec
sbb
mov
pop
jno
out
cmp
shl
pop
hlt
jae
jnp
js
jb
cmp
add
cdq
cmp
mov
retf
or
inc
(bad)
fs
sbb
mov
(bad)
cmp
test
sbb
out
loop
jno
ins
stos
loope
fmul
xchg
out
nop
imul
mov
(bad)
iret
shl
sub
and
jl
push
fwait
outs
add
ret
idiv
or
lods
iret
mov
add
mov
inc
(bad)
add
or
cmp
bound
add
scas
div
in
retf
ins
xlat
mov
jl
adc
mov
cmp
dec
inc
and
or
scas
scas
xor
dec
mov
inc
int3
scas
in
push
mov
addr16
pop
(bad)
(bad)
clc
pop
mov
mov
mov
adc
(bad)
es
lock
clc
adc
mov
mov
shl
cwde
ret
fwait
and
dec
jne
scas
jne
pop
or
dec
push
ret
sbb
and
push
mov
mov
lahf
pop
pop
sahf
(bad)
sahf
dec
xchg
cmps
pop
jmp
lods
fsub
lds
les
add
aaa
pusha
add
add
mov
js
adc
mov
pop
inc
cwde
and
mov
mov
sub
pop
jecxz
fisttp
test
inc
xor
fwait
sbb
adc
lds
js
dec
ss
and
test
imul
xchg
retf
aaa
push
mov
into
push
adc
dec
adc
(bad)
jmp
lahf
adc
(bad)
mov
mov
jbe
sub
test
enter
mov
mov
push
test
in
pushf
stos
js
std
jne
mov
ins
ds
pop
fimul
dec
dec
jns
jno
rol
pop
cli
inc
cmp
add
call
out
mov
and
addr16
dec
push
mov
cmps
and
and
sbb
mov
scas
push
sbb
jno
jbe
xor
int3
cmp
ret
pop
aad
add
(bad)
mov
mov
leave
test
xor
or
test
sub
jmp
adc
or
and
add
mov
aad
ret
sub
fiadd
sub
or
pop
ret
inc
xchg
popa
test
or
pop
inc
movs
mov
or
mov
adc
xchg
xor
sub
out
pop
(bad)
sbb
jb
mov
enter
inc
outs
mov
cwde
jo
ret
pop
pushf
jmp
jbe
fwait
cvttps2pi
mov
add
mov
and
(bad)
es
xchg
pop
mov
xchg
std
or
and
push
(bad)
xchg
mov
adc
jbe
movs
xchg
shl
out
inc
(bad)
mov
sub
mov
cmp
les
fs
and
retf
mov
test
push
sti
retf
sub
adc
adc
iret
int3
push
mov
mov
scas
ror
test
xchg
push
sub
and
popf
sub
ins
std
rcr
imul
or
inc
sti
inc
ins
lods
jg
leave
add
mov
neg
ds
sub
and
push
call
stos
inc
push
(bad)
sub
fs
or
mov
xlat
(bad)
pop
call
jo
call
mov
jae
fst
sti
fstp
movs
pop
jge
xor
and
push
adc
(bad)
es
mov
mov
in
fisttp
ret
xchg
xchg
jns
bound
neg
mov
or
int3
lock
jmp
sbb
or
and
xchg
sub
outs
push
ins
or
jle
adc
and
inc
mov
cmps
fisttp
aad
outs
bound
pushf
(bad)
mov
inc
call
cs
cmp
aaa
jmp
xchg
das
xchg
mov
loope
fdivr
mov
mov
lock
pusha
mov
loope
ins
adc
bnd
pop
xor
ret
jno
dec
loop
jge
push
movs
scas
int
test
js
dec
jecxz
out
cdq
push
lock
lock
jb
cwde
out
sub
xor
mov
sbb
inc
loopne
and
or
mov
dec
loop
xchg
dec
or
or
dec
shl
dec
mov
jge
add
sub
sbb
jns
xchg
adc
pop
push
cmp
jge
(bad)
imul
push
fwait
dec
mov
xchg
int3
(bad)
mov
xchg
xor
xor
jg
xor
or
sub
xor
sub
nop
test
imul
test
sub
xor
adc
mov
cmp
pop
out
add
fwait
cli
popf
cdq
stos
aad
test
push
mov
pop
pop
in
add
pop
or
xchg
std
pop
icebp
stos
xor
mov
cdq
add
adc
enter
cmp
jl
add
adc
push
sub
cwde
icebp
mov
movs
inc
push
scas
lea
aam
mov
int
imul
inc
inc
add
(bad)
aad
sub
or
jle
lds
sbb
mov
das
adc
mov
and
nop
aad
push
sbb
fnstsw
dec
movs
add
push
add
arpl
xor
jo
pop
and
mov
arpl
rcr
aad
xor
or
js
jns
mov
pop
outs
pop
xchg
cli
adc
or
mov
aam
inc
ins
cmps
jmp
in
jg
inc
pop
ficomp
cs
movs
movlps
sbb
xor
inc
xchg
(bad)
pop
lock
inc
lds
xchg
push
aam
int3
or
inc
in
add
outs
jae
or
xchg
shl
(bad)
fisub
xor
enter
popa
xchg
sbb
das
mov
daa
xor
inc
mov
inc
pusha
sbb
add
xchg
xchg
iret
enter
xor
pusha
into
arpl
jmp
pushf
in
dec
cmp
sbb
je
in
jge
dec
div
shl
adc
xor
out
dec
pop
fxch
or
mov
pop
outs
mov
iret
sub
scas
addr16
es
shl
loope
mov
cmp
pop
jecxz
out
stc
push
mov
pop
xor
mov
scas
cli
retf
adc
push
dec
mul
jmp
xchg
sub
adc
nop
dec
pop
(bad)
sub
jp
jo
lods
rcl
addr16
das
rcr
and
inc
(bad)
in
jno
jne
aas
test
cmps
loop
fcmove
jecxz
int
cmp
push
gs
jno
dec
out
jle
cdq
jne
sub
fsubr
mov
xor
scas
pop
xor
aad
arpl
cmp
cmc
into
aaa
mov
and
iret
xor
push
pop
cli
xchg
es
push
outs
jmp
dec
loope
mov
adc
(bad)
cmps
cmps
retf
add
enter
hlt
xchg
jle
lea
inc
push
and
je
mov
mov
retf
lea
addr16
repnz
jmp
sbb
mov
sub
loope
cmps
out
jbe
lds
aas
sub
cmp
cmp
push
push
xchg
xchg
dec
shl
(bad)
jmp
std
es
or
stos
adc
or
jns
and
enter
repz
in
jae
inc
mov
mov
or
cs
fst
stc
mov
sti
in
ret
sahf
pushf
aaa
sbb
cmp
ret
inc
pop
(bad)
or
or
mov
pop
test
ret
aad
pop
adc
mov
rcl
fsubr
and
js
call
xchg
xor
cmp
xchg
pop
loope
sahf
sbb
aas
aam
call
xchg
or
cmp
loopne
call
sub
test
loope
mov
fmulp
scas
and
and
popf
mov
cmp
xchg
imul
cmpxchg
sahf
inc
add
mov
push
push
ficom
cmp
sbb
addr16
adc
dec
aaa
(bad)
inc
dec
in
mov
je
xchg
test
into
jnp
dec
jecxz
xor
add
ja
scas
out
inc
adc
adc
mov
and
mov
stc
ror
mov
pop
std
adc
sti
jmp
shl
aas
cmp
clc
imul
sti
cmp
(bad)
mov
xor
aad
fmulp
in
dec
ror
mov
nop
dec
das
sub
in
push
push
dec
dec
stc
xor
mov
sbb
jnp
mov
xchg
xlat
jns
mov
dec
ret
inc
jns
fidivr
and
sub
jecxz
call
jo
cmp
fcmovnb
bnd
in
bound
or
or
sar
sub
push
outs
jne
test
pop
mov
das
sub
or
dec
pop
sub
stc
call
mov
in
int3
(bad)
aaa
add
repz
fs
jg
and
in
scas
or
loop
pop
xchg
jp
dec
stos
add
jg
gs
clc
mov
sbb
push
arpl
push
(bad)
jne
push
ss
mov
cdq
jmp
rcr
sbb
mov
call
or
jl
pop
jo
cmps
inc
sbb
jbe
scas
push
repz
or
enter
cmp
out
add
ret
xchg
add
fs
movs
cmp
cld
fwait
stc
ret
fs
pop
adc
es
ss
sbb
movs
sbb
mov
test
xchg
in
mov
adc
cmp
push
test
into
push
push
or
jp
dec
mov
das
mov
cli
arpl
fistp
cmps
push
gs
hlt
in
pop
inc
aad
aam
(bad)
jmp
xchg
dec
retf
gs
sbb
test
rcr
ss
repz
shl
cwde
movs
hlt
push
cdq
into
xchg
fstp
dec
xchg
test
in
leave
cmps
jl
rcl
pusha
lahf
mov
push
add
ins
shl
out
cmp
jo
dec
mov
in
pop
ficom
add
out
cmps
mov
repnz
stos
nop
or
push
and
loop
arpl
das
test
out
inc
cmp
mov
out
mov
pop
es
leave
add
adc
sti
dec
test
scas
popa
mov
in
imul
dec
inc
jecxz
push
ja
rcr
shl
sbb
rcl
in
popa
movs
jns
call
jecxz
ret
mov
pop
retf
hlt
sbb
imul
ret
xor
sbb
mov
sbb
sti
ror
call
aad
jp
add
in
jl
add
xor
xor
ret
pop
out
(bad)
(bad)
jmp
nop
in
cmp
rcr
int
pushf
scas
sbb
jg
mov
stc
and
mov
not
ret
(bad)
clc
xor
retf
lock
push
retf
mov
scas
push
dec
pop
out
aam
cmps
xor
sbb
push
or
fmul
mov
ret
hlt
test
jp
pop
(bad)
cld
int
fmul
test
popf
and
and
fld
ja
jp
sbb
inc
clc
paddb
daa
push
push
inc
call
call
pop
rcl
pop
mov
icebp
mov
mov
add
sti
dec
sbb
mov
fisttp
pop
pop
jne
(bad)
adc
movs
mov
scas
adc
mov
in
adc
mov
sub
out
movs
ds
mov
push
dec
jge
xchg
adc
aas
mov
xor
adc
bound
pop
outs
lods
fs
dec
clc
popa
mov
shl
mov
adc
xchg
pop
jmp
aaa
icebp
out
(bad)
fdiv
loopne
fucomi
test
loope
cdq
clc
xor
sub
sub
cmp
sub
addr16
lds
(bad)
dec
mov
and
dec
dec
add
shr
push
scas
jmp
loope
ja
mov
enter
dec
xchg
repnz
cmps
sti
popa
dec
lds
cmp
or
out
shr
lea
dec
sub
sbb
mul
mov
fmul
mov
leave
ins
leave
loope
mov
out
popf
inc
shl
add
retf
(bad)
inc
push
jge
rcr
inc
fidivr
jbe
xchg
fnstsw
loop
fadd
dec
mov
sbb
rcl
test
jg
test
cdq
lds
dec
mov
ror
jns
scas
mov
push
lea
mov
mov
add
jae
(bad)
ins
jbe
or
adc
fwait
daa
fs
(bad)
push
inc
pop
int3
xchg
mov
loope
jb
out
xchg
ins
retf
popa
(bad)
mov
ret
add
pop
jb
push
ret
xor
xchg
div
jns
adc
push
push
fwait
or
and
in
shl
les
fmul
cmps
arpl
add
adc
cmps
dec
jg
mov
fld
js
mov
xchg
inc
and
test
sub
cli
push
inc
mov
into
xchg
test
fist
test
sub
rcr
test
push
add
mov
jle
retf
daa
ds
sub
xchg
adc
into
fdiv
mov
push
pop
jnp
sbb
test
jmp
iret
mov
xor
(bad)
shl
mov
jnp
(bad)
lock
shr
sbb
mov
sub
dec
dec
gs
and
es
sub
out
or
pop
sub
mov
and
mov
dec
and
fsubr
mov
xlat
mov
dec
out
xchg
clc
(bad)
enter
sub
inc
call
push
(bad)
pushf
or
lock
dec
enter
xor
in
push
loop
push
xchg
push
test
fist
inc
cli
cmps
cmc
push
test
(bad)
push
push
pop
dec
je
and
(bad)
cmp
leave
ror
pop
sbb
inc
shl
push
sbb
jmp
add
mov
das
mov
mov
jo
jns
add
aad
dec
popa
push
push
aam
mov
mov
dec
test
pop
rcr
scas
outs
inc
sar
nop
xor
push
jne
movs
cld
inc
add
inc
enter
aas
sub
add
inc
clc
mov
xchg
jmp
in
dec
and
sbb
ret
scas
ds
pop
inc
std
in
out
shld
or
xchg
js
inc
loope
cmps
sbb
lahf
mov
sub
cli
cmp
jne
add
out
or
xchg
sbb
or
and
in
pop
push
(bad)
pop
adc
ins
add
gs
sub
pop
sub
sbb
ins
mov
je
pushf
out
adc
scas
call
mov
in
inc
pop
int
xchg
cmp
enter
mov
cs
mov
in
int3
outs
icebp
cmp
jbe
sbb
gs
pop
push
into
jg
dec
inc
dec
out
ins
sbb
xor
inc
es
icebp
aas
jns
iret
cmc
jo
or
jmp
mov
popa
fsubr
int3
rol
movs
cmp
out
ja
or
test
icebp
lahf
inc
adc
pusha
gs
jae
and
and
pop
ret
dec
adc
fwait
das
cwde
(bad)
out
repz
in
jno
mov
inc
xor
call
jmp
fdivr
scas
rol
xchg
cli
cmp
sbb
add
mov
cmp
push
xor
jle
xchg
cdq
dec
inc
fs
mov
daa
out
scas
xor
sbb
pop
lds
jno
call
call
mov
pop
movs
xor
sbb
jb
addr16
out
xchg
pop
stos
rol
pop
xor
jmp
mov
sbb
call
lock
or
or
xchg
cld
mov
and
fldenv
retf
hlt
(bad)
mov
xchg
jmp
jp
mov
sbb
repz
aad
xchg
add
push
mov
call
mov
add
pop
sub
inc
js
mov
int3
or
cli
xchg
inc
test
and
scas
jmp
call
out
inc
push
dec
out
ucomiss
pop
(bad)
mov
jge
xchg
loop
sub
dec
lods
pop
pop
dec
js
mov
xchg
ins
xor
push
jp
gs
sbb
ss
cdq
(bad)
sbb
dec
loop
lods
add
movs
aaa
bnd
pop
ret
fdiv
fistp
popf
mov
clc
bound
xchg
pop
movs
iret
cs
sub
lods
xor
sbb
pop
cmp
cmp
adc
cmp
sub
cli
int
shr
nop
mov
pop
(bad)
jbe
cmps
xchg
jp
sar
add
xchg
je
inc
stos
xor
xor
movs
push
adc
out
es
mov
mov
lahf
or
mov
sbb
xchg
xchg
mov
mov
pop
xor
ja
jo
std
xchg
ret
pop
push
mov
in
js
(bad)
xlat
jnp
cdq
pop
int
mov
test
mov
pop
pop
fidiv
(bad)
out
inc
mov
scas
shr
jnp
adc
inc
in
xchg
stos
or
outs
sbb
mov
push
das
xchg
add
jle
cmp
dec
add
mov
mov
add
mov
mov
sub
adc
push
or
jbe
call
push
pusha
fs
ss
push
jno
lea
pop
xchg
(bad)
iret
je
pop
mov
adc
pop
xchg
int3
lock
(bad)
mov
and
icebp
dec
fcmovnbe
leave
mov
pop
movs
outs
ror
cmp
cmps
mov
mov
adc
mov
pop
ds
popa
push
adc
inc
xor
in
mov
cmps
and
sub
adc
stos
std
(bad)
mov
pop
jge
shl
add
xchg
repz
or
inc
pop
daa
pop
sub
xchg
imul
pop
pop
(bad)
je
mov
retf
retf
dec
lahf
scas
mov
data16
leave
call
mov
test
add
les
clc
es
mov
nop
jl
jnp
cmps
xchg
add
add
inc
sbb
test
out
push
mul
call
sti
sub
movs
xchg
aaa
push
add
mov
cmp
(bad)
pop
or
cld
ret
imul
dec
mov
mov
adc
sub
movs
mov
mov
add
xor
hlt
ja
fstp
mov
and
push
mov
jno
xchg
lahf
inc
jg
in
jmp
test
(bad)
and
bound
loope
sub
sbb
push
sub
or
add
test
inc
dec
sbb
out
(bad)
imul
cwde
test
xchg
cli
adc
push
ss
pop
mov
push
daa
cmps
xchg
and
cmc
jns
pop
sbb
outs
push
enter
dec
(bad)
sub
jp
scas
sbb
push
into
mov
rcl
(bad)
push
fsub
mov
nop
fincstp
sub
cmc
push
es
out
jbe
pop
out
inc
jp
mov
mov
cwde
jb
fimul
or
sub
loopne
out
retf
pop
or
dec
inc
loop
clc
aam
dec
outs
push
mov
mov
jne
mov
aad
pop
(bad)
xchg
xchg
dec
sub
xchg
scas
shl
xchg
outs
ss
jbe
and
sbb
test
push
pop
out
fcmovnbe
iret
lods
leave
xor
lods
jne
mov
jl
jae
push
mov
sti
aam
sbb
(bad)
movs
je
jns
sbb
mov
pop
add
xor
fisttp
mov
pop
mov
enter
aad
movs
lahf
mov
fcom
dec
add
data16
aas
js
nop
jmp
pop
push
lock
push
mov
cmp
add
cld
call
pop
fucomp
rol
lahf
pushf
and
inc
lds
push
cwde
dec
inc
call
enter
and
sub
push
adc
std
pop
inc
sub
and
(bad)
jecxz
cmp
fcmovu
repz
push
push
fistp
jnp
dec
jp
(bad)
loop
xchg
mov
stos
add
sub
adc
ds
movs
in
movntps
and
push
ins
les
mov
outs
sub
lods
in
mov
daa
pop
pop
inc
push
jmp
rcr
in
mov
rcr
mov
cmp
or
jbe
(bad)
fidivr
fdiv
imul
icebp
xchg
leave
add
(bad)
sbb
dec
dec
cmp
dec
jg
sar
repnz
sbb
mov
fst
and
cmc
stos
into
and
and
jns
sahf
out
ja
pop
dec
adc
jmp
(bad)
out
mov
jge
dec
retf
(bad)
lods
dec
pushf
mov
stos
or
(bad)
pop
mov
ds
push
dec
and
mov
adc
sub
inc
xchg
jl
cmp
movs
inc
push
jbe
int
cmps
stc
out
dec
jmp
bound
mov
iret
int
sbb
jg
fcomp
shl
stc
mov
cmps
sar
sbb
inc
aam
in
dec
cmps
cld
std
lahf
inc
or
repz
dec
sbb
(bad)
ror
shr
push
xchg
popf
sbb
out
call
mov
cdq
sub
jae
or
loope
repz
mov
push
adc
aam
mov
adc
(bad)
adc
mov
mov
arpl
scas
aas
adc
cmp
push
imul
mov
and
sbb
adc
mov
push
cdq
pop
cs
xlat
enter
xchg
dec
int
mov
pop
(bad)
fild
xchg
pop
sbb
pop
test
mov
xor
adc
shl
sbb
(bad)
cs
mov
dec
dec
int
daa
sub
sub
jle
pop
fs
aaa
bnd
bound
mov
xchg
test
outs
popf
jg
fiadd
jno
js
retf
mov
jle
jno
mov
(bad)
std
arpl
cmp
les
jmp
int3
push
fst
cmp
stc
pop
jno
arpl
jns
fisub
mov
mov
clc
xor
mov
stos
mov
mov
adc
aas
(bad)
mov
test
and
mov
add
into
mov
cld
inc
and
jns
nop
mov
cld
pop
mov
rcr
ret
xor
stos
add
pushf
sahf
xor
mov
mov
test
lds
movs
cmc
ret
(bad)
adc
std
or
xchg
adc
add
push
push
repnz
js
sub
cmp
mov
lock
xor
inc
push
xchg
inc
mov
sti
lock
fldlg2
cmps
shl
inc
lds
addr16
pop
retf
xor
or
push
add
sbb
jle
xchg
outs
mov
dec
mov
test
(bad)
xchg
add
sub
mov
pushf
xchg
cmps
jle
jae
inc
add
das
and
jmp
retf
cmp
loopne
retf
adc
enter
jmp
fist
add
ss
enter
lock
and
shl
dec
adc
cmp
jb
jg
xor
cld
jp
les
ss
xor
add
xor
push
add
aaa
inc
xchg
mov
sbb
fld
or
add
adc
or
mov
ror
jb
pop
dec
push
rol
loop
jg
repz
fmul
sbb
loop
sbb
cmp
mov
mov
stos
aam
or
outs
nop
std
dec
xchg
(bad)
stc
pop
pushf
mov
adc
sbb
add
cdq
push
add
jl
mov
xchg
cdq
cmp
push
stc
inc
out
push
add
lea
xlat
sar
sbb
push
addr16
xor
pop
loop
cld
pusha
jnp
outs
mov
push
jae
mov
push
sub
out
and
(bad)
ja
bound
loop
loopne
xchg
mov
sbb
mov
pusha
adc
retf
mov
push
test
or
cmps
jb
ror
arpl
mov
pusha
jle
dec
and
sbb
pop
xchg
jno
daa
cmp
inc
movs
xor
into
loope
inc
or
sbb
loope
imul
mov
jge
lods
mov
loopne
sub
imul
jns
push
movs
out
std
into
jge
or
daa
sbb
das
stc
mov
aaa
mov
pushf
mov
js
jne
push
call
in
adc
inc
in
fdiv
sub
push
and
add
or
cmp
jmp
cmc
or
xlat
push
outs
lahf
aam
push
xchg
inc
xor
dec
(bad)
sar
pop
xor
loopne
ret
out
xor
scas
dec
movs
jle
add
add
(bad)
out
jl
jne
je
and
push
cwde
mov
mov
lods
bound
xchg
xchg
out
movs
aas
mov
sbb
dec
sbb
jbe
mov
leave
(bad)
fwait
(bad)
dec
arpl
retf
rol
(bad)
jge
fdivr
xor
ins
xor
arpl
pop
inc
mov
xchg
int3
cmp
dec
push
(bad)
and
mov
mov
fild
dec
xchg
sub
xor
ss
mov
pop
jbe
psubusw
xor
dec
add
sub
push
loop
dec
mov
data16
add
and
push
enter
dec
add
adc
stc
pop
cmps
or
dec
iret
inc
in
fistp
bound
pop
sub
test
xchg
pop
stos
mov
mov
xor
call
adc
clc
or
xchg
sub
adc
imul
jmp
rep
jmp
mov
jg
jl
xlat
ins
or
adc
shr
outs
adc
loop
sbb
fwait
dec
adc
mov
and
pop
sub
cmc
movs
fsub
pop
shl
jne
pop
push
ins
add
clc
das
lods
xchg
setne
mov
inc
and
cld
cld
stos
xlat
pop
ret
add
mov
out
adc
hlt
push
js
(bad)
aas
jmp
int
mov
fst
sbb
(bad)
cmp
pop
rcr
jmp
jl
push
pop
repnz
push
popa
xor
test
loope
sub
mov
movs
dec
cmp
and
xchg
jmp
pushf
xchg
jle
sub
cwde
mov
mov
jle
cmp
cli
imul
adc
and
cs
add
sysexit
inc
xor
imul
and
scas
jo
adc
push
int3
push
mov
dec
sti
movs
(bad)
loope
mov
loopne
pop
(bad)
out
popf
jecxz
test
dec
(bad)
xchg
adc
push
jae
pop
in
je
ret
and
mov
jp
push
pop
lods
sub
cmp
cmps
movs
mov
add
cmp
push
jmp
aaa
xor
test
in
int
das
call
in
push
fdivr
outs
test
or
pop
or
popa
mov
lock
fdiv
cmp
adc
xchg
xor
dec
dec
adc
iret
pop
mov
sub
fstp
icebp
lahf
xlat
xor
jg
sub
mov
in
inc
adc
xlat
mov
loopne
fdivp
inc
push
jns
pop
daa
push
cwde
stos
je
shr
js
(bad)
or
pusha
cmp
dec
dec
ret
adc
fbstp
retf
fdiv
inc
je
inc
scas
jmp
jns
data16
or
movs
and
aas
sbb
inc
mov
int3
adc
xchg
mov
in
ss
mov
(bad)
sbb
pop
(bad)
lods
in
aas
pop
adc
clc
scas
aaa
jp
call
xchg
nop
int
push
add
(bad)
rol
jbe
aas
fst
imul
sub
lock
cld
pop
cmps
test
test
push
ss
test
gs
xor
fsubp
sbb
enter
add
mov
ins
mov
imul
lock
cdq
mov
and
xor
lea
jnp
stos
pushf
fwait
sahf
pop
mov
cld
mov
sub
sbb
ret
popf
imul
sub
ret
test
push
cmps
movs
jmp
out
push
xchg
les
or
sbb
(bad)
loopne
or
pusha
into
mov
sar
or
repnz
or
xchg
icebp
add
sbb
pop
jmp
cdq
sub
ds
es
sti
xor
mov
aam
pushf
(bad)
lock
add
xor
sar
test
addr16
sbb
xchg
arpl
cmp
push
pop
adc
or
fwait
xor
fs
jl
push
push
ds
aad
push
xor
mov
jmp
push
pop
mov
mov
sti
sbb
(bad)
pop
adc
push
mov
aaa
jmp
shr
(bad)
jmp
or
pusha
sahf
push
add
mov
mov
out
mov
mov
pop
rcl
imul
mov
push
leave
in
and
jmp
push
out
adc
(bad)
sbb
and
in
lods
pop
pushw
data16
sar
sub
sub
cmp
pop
icebp
mov
sbb
pop
ret
pushf
cdq
outs
fdiv
and
enter
jge
sahf
or
adc
xor
pop
imul
iret
int3
aam
js
lods
or
and
push
mov
or
xor
pop
mov
ret
arpl
shr
adc
pop
dec
loop
not
mov
daa
push
repz
fdiv
push
call
push
inc
cmps
(bad)
mov
jnp
sub
movs
jb
jp
jb
ds
mov
imul
mov
xor
out
xchg
or
push
mov
jmp
in
jne
jo
mov
jle
ficom
mov
xor
pop
sbb
sar
push
jecxz
lahf
mov
inc
int
mov
std
or
mov
inc
jne
push
(bad)
rcl
mov
call
ins
jne
mov
xor
inc
push
push
js
cmp
shr
xor
dec
xor
cdq
mov
jno
xor
out
je
push
xchg
icebp
dec
add
ret
pop
dec
adc
push
movs
xor
pop
nop
sub
adc
js
jle
retf
adc
xor
sbb
stos
pop
out
xchg
adc
pushf
aaa
mov
icebp
and
popa
rol
adc
mov
jno
movs
clc
and
lock
gs
call
mov
clc
mov
lods
dec
add
dec
sbb
push
jmp
dec
add
addr16
or
push
rcl
ja
mov
cli
pop
and
push
cmp
cmp
fmul
std
cwde
(bad)
fsub
xor
sub
and
int
ja
ins
outs
data16
sbb
mov
cmps
bound
pop
push
movs
ins
mov
sahf
leave
sbb
sub
in
(bad)
pop
retf
sti
or
or
mov
jns
ja
mov
pop
in
cmp
mov
xor
mov
add
sar
ja
int3
pop
test
adc
outs
dec
addr16
imul
test
cdq
retf
cs
push
mov
xchg
aas
out
and
ds
mov
add
cmc
adc
inc
ins
pop
fnstsw
push
push
cmps
fwait
add
icebp
test
(bad)
and
scas
out
jo
push
sub
jbe
push
call
jmp
ds
adc
jo
hlt
outs
fcom
stc
add
mov
mov
mov
retf
pop
push
cmp
sbb
fwait
add
jge
ror
xlat
je
(bad)
fisubr
sub
mov
and
xchg
std
(bad)
lods
je
into
jb
ret
leave
mov
fld
jns
or
mov
or
xor
or
sub
mov
cmp
int
(bad)
adc
sbb
test
pop
sbb
jg
mov
icebp
daa
in
sahf
cmps
inc
dec
or
lahf
push
cmp
or
cmp
add
and
hlt
mov
clc
jmp
jl
add
add
repnz
jnp
lea
jp
push
dec
mov
mov
cmp
leave
xor
adc
mov
sbb
cli
mov
popf
sbb
jbe
int
sbb
and
inc
push
or
lahf
mov
repz
outs
stos
push
call
lods
lods
jne
inc
inc
mov
mov
and
cli
lods
sbb
stos
std
js
jnp
push
rcr
xor
cmc
cs
stos
(bad)
sbb
bound
(bad)
call
aas
pushf
mov
cmp
sbb
ins
jnp
mov
nop
cmp
lahf
ins
iret
xor
jae
aas
xor
xor
mov
sti
jo
or
out
mov
inc
std
push
push
mov
lds
add
cs
icebp
shr
(bad)
(bad)
push
(bad)
inc
ret
ss
or
js
pop
sti
(bad)
pushf
or
adc
push
ret
and
adc
(bad)
xchg
push
repz
push
rol
xor
and
sub
xor
dec
adc
stos
and
add
adc
fisttp
adc
push
ins
mov
or
jns
add
addr16
fisub
fcmovbe
repnz
mov
cmp
clc
mov
add
loope
popf
push
jp
xchg
cmp
(bad)
div
mov
in
add
mov
out
dec
add
sub
out
ins
jno
pop
sub
add
mov
ret
popa
imul
int3
jbe
cmp
sbb
ror
(bad)
arpl
mov
aad
push
call
or
xchg
into
pop
test
mov
inc
pop
lock
sbb
add
ins
xlat
iret
in
push
push
dec
mov
jmp
cld
hlt
sbb
add
push
cli
sbb
neg
mov
mov
pushf
mov
jae
jmp
pop
jae
dec
pusha
mov
out
push
imul
aad
adc
inc
mov
jp
pop
shl
int3
nop
scas
sbb
add
cdq
mov
outs
jmp
and
sbb
mov
sbb
test
scas
xchg
jecxz
fnstcw
std
mov
and
stc
jne
fs
lds
arpl
pop
xor
into
int3
pop
aam
fmulp
inc
test
xchg
xor
mov
mul
fwait
and
(bad)
inc
imul
sbb
push
fwait
adc
push
xlat
rcr
jo
lods
and
mov
cmp
inc
repz
xor
xor
jecxz
xchg
push
into
bound
lods
sbb
rep
xchg
add
or
sti
jecxz
xchg
xor
jns
mov
adc
cs
movs
jmp
and
sub
dec
pop
inc
fisttp
sbb
dec
xchg
rcl
and
ret
test
enter
aaa
movs
mov
sbb
iret
push
dec
inc
cmp
(bad)
dec
(bad)
mov
lock
ret
push
inc
sti
mov
pop
pop
repnz
mov
(bad)
jmp
mov
xor
cmp
mov
hlt
and
sbb
inc
arpl
jns
xchg
sub
or
jnp
rcl
push
loopne
mov
push
inc
fsub
mov
(bad)
cdq
aaa
pop
jno
adc
inc
loop
(bad)
movs
js
in
and
jnp
out
mov
cld
retf
(bad)
cmc
inc
fistp
pop
dec
sub
and
dec
xor
and
xor
pop
or
les
adc
jne
mov
ret
or
out
lea
out
xor
fisubr
adc
(bad)
mov
xor
cli
dec
test
cmp
xchg
pop
fs
test
scas
mov
leave
jmp
imul
mov
xrelease
sub
ins
mov
xchg
cmps
mov
sub
pop
add
and
and
ret
rcl
push
ror
xchg
and
in
out
adc
fist
aas
shl
clc
dec
shr
push
inc
stos
dec
adc
cdq
ins
or
rol
push
cmp
adc
inc
xor
loop
icebp
push
(bad)
bnd
mov
cli
call
popa
(bad)
mov
push
push
dec
scas
cld
and
mov
xchg
mov
xchg
in
inc
retf
push
pop
add
test
cs
test
imul
mov
add
mov
out
dec
mov
and
fbstp
xchg
cmps
retf
dec
adc
std
xor
je
and
into
cmc
arpl
mov
inc
mov
movq
imul
jne
pop
mov
pusha
out
lds
lahf
retf
(bad)
push
fild
into
xchg
xchg
loope
stos
adc
jmp
movs
ds
sar
dec
retf
pop
mov
inc
rcr
arpl
dec
je
adc
iret
std
jmp
or
scas
mov
lods
xor
or
(bad)
pop
es
xchg
mov
cmp
mov
mov
xor
std
nop
dec
xor
sbb
add
xlat
repz
inc
xor
push
sub
sub
sbb
mov
mov
pop
or
les
ss
mov
add
(bad)
cs
add
xchg
dec
gs
pop
scas
inc
sub
call
fst
iret
mov
adc
pusha
test
inc
cmp
push
test
push
or
mov
stc
xchg
push
or
ja
push
jbe
pop
xor
out
cmps
stos
test
mov
add
ror
cmp
icebp
push
cmp
dec
inc
push
adc
stos
retf
into
pop
mov
std
pop
sub
push
arpl
jae
xor
loope
adc
adc
fadd
sub
xchg
mov
adc
push
push
ror
inc
cmp
and
bound
(bad)
mov
cmp
jp
sub
dec
push
cld
push
lea
jmp
lds
inc
inc
pop
and
sbb
aad
retf
mov
fnstsw
ins
and
sbb
pop
stos
cli
pop
inc
mov
cmps
pop
sahf
ds
ja
aas
ja
mov
loope
repnz
(bad)
and
jmp
jmp
cmp
pop
ret
mov
xor
mov
pop
ds
imul
xchg
push
pop
popa
call
pop
cmp
in
les
pop
daa
xor
call
jl
xchg
sahf
movs
not
xchg
sub
push
xchg
(bad)
mov
jecxz
les
dec
bound
lock
ins
mov
mov
mov
and
xchg
xchg
mov
xchg
cmp
inc
mov
pop
mov
gs
xchg
es
jp
sbb
and
push
xor
push
push
ror
pop
mov
sti
sbb
push
pusha
dec
clc
xchg
mov
pop
jmp
xlat
jecxz
push
inc
test
(bad)
mov
out
int
out
out
jae
mov
jp
jmp
mov
fnstenv
xlat
jp
adc
or
pop
sbb
cmp
leave
aam
jle
sahf
aam
rcr
mov
push
xlat
xchg
pop
in
std
pusha
dec
push
les
push
in
retf
pop
push
retf
dec
sub
dec
(bad)
jmp
jno
sbb
ds
jbe
mov
mov
imul
jge
sub
sti
stc
dec
repnz
or
jno
mov
fiadd
fcom
inc
js
dec
dec
pop
push
es
out
and
dec
lods
int3
and
push
adc
imul
aad
clc
neg
or
loop
iret
lock
sbb
jno
repz
cwd
push
jmp
push
mov
call
mov
out
shl
cmp
jmp
mov
out
mov
lahf
stos
mov
and
or
inc
iret
fs
aas
call
mov
sbb
icebp
cmp
fidivr
js
xlat
push
mov
mov
test
lds
mov
cmps
cmp
add
lds
cs
lock
xor
xor
out
aas
pop
in
cmp
push
mov
add
test
bound
mov
and
fsubr
inc
shl
or
mov
jle
(bad)
jmp
sub
cmps
cmps
imul
xchg
es
(bad)
cmp
inc
enter
pop
adc
imul
sub
and
or
(bad)
dec
adc
call
fldenv
stos
dec
inc
int
fist
add
lahf
jnp
sub
imul
popf
pushf
sti
iret
push
push
aaa
(bad)
jp
pop
xor
repnz
jno
jmp
inc
mov
lea
ror
movs
pop
push
pop
fwait
ret
push
inc
addr16
dec
jge
cwd
in
sub
mov
cmp
shl
inc
loopne
xchg
stos
push
jmp
cmovns
xchg
xor
jne
addr16
(bad)
call
aam
fstp
rcl
xchg
xchg
retf
pop
xchg
mov
xchg
dec
inc
stos
icebp
int
cmp
inc
rcr
ja
retf
lea
and
jmp
adc
mov
mov
jnp
daa
or
inc
sar
pop
pop
push
loopne
inc
mov
jg
or
out
cld
(bad)
mov
iret
daa
adc
cld
in
out
xor
adc
ret
and
xor
jmp
out
pushf
in
push
(bad)
dec
add
dec
jbe
xchg
mov
mov
or
(bad)
daa
jl
imul
jmp
std
(bad)
cmp
lods
cmp
call
mov
in
xchg
xlat
psubq
ins
sbb
scas
jge
out
sbb
lahf
inc
pop
lods
xor
sub
xchg
mov
mov
(bad)
ficom
or
and
mov
rcr
sub
push
call
xor
add
int3
daa
xor
sbb
mov
jmp
jno
(bad)
sbb
push
fprem
fisttp
mov
and
pop
and
cmp
xor
jmp
ins
in
add
out
test
sbb
aas
dec
clc
xor
imul
fimul
out
sbb
fdiv
inc
or
xor
sbb
call
and
ds
ret
mov
sub
add
scas
sar
mov
adc
je
push
fnop
xchg
les
ret
dec
mov
jae
aam
cmp
call
push
mov
jae
mov
pop
ins
sub
sub
cmps
out
ror
(bad)
jne
or
cmp
mov
inc
mov
or
ror
scas
es
sub
cwde
or
cli
movs
jo
pusha
add
cmp
lock
push
js
mov
maxps
aaa
dec
jb
pop
mov
push
frstor
push
in
pop
and
data16
push
cdq
inc
sub
or
mov
outs
mov
inc
pop
xor
xchg
lods
(bad)
jmp
mov
mov
fucompp
cmps
out
push
leave
sbb
loopne
jg
lahf
sub
fst
(bad)
pop
mov
enter
pop
add
jbe
fild
es
ins
pop
cli
lods
shl
mov
xor
push
push
std
daa
loopne
jmp
mov
mov
jns
push
sub
mov
mov
jno
scas
rcr
lds
push
lods
scas
jne
rcr
fs
mov
push
imul
out
inc
jmp
inc
inc
or
dec
pop
fisttp
inc
test
pop
push
jo
cmps
mov
add
jne
mov
sbb
add
bound
xor
cmps
jle
outs
mov
pop
inc
xchg
fucomi
jl
mov
mov
add
(bad)
mov
pop
out
test
cmp
fidiv
pop
fwait
push
cmc
mov
xchg
and
dec
sub
xchg
xlat
sbb
dec
mov
pusha
nop
jno
and
retf
js
pusha
sbb
cmc
test
jge
mov
add
sub
cld
fnstsw
xchg
sbb
hlt
adc
pop
mov
stos
aam
outs
xchg
pop
in
rcr
push
mov
inc
pushf
inc
stc
or
das
paddw
cmps
and
jno
bound
outs
jp
sbb
push
data16
out
into
not
push
out
cmp
add
push
and
sar
add
sti
popf
mov
cdq
cwde
xchg
pop
adc
mov
out
mov
aaa
arpl
and
lahf
out
in
mov
mov
dec
mov
sar
cli
sub
jnp
(bad)
push
call
dec
cwde
in
push
adc
xchg
repz
outs
jecxz
xor
shr
and
cmp
arpl
cmp
out
aas
(bad)
mov
call
mov
hlt
fwait
pusha
sub
pop
mov
sbb
test
mov
sbb
test
push
adc
dec
out
add
inc
call
in
test
inc
adc
mov
in
xor
popa
scas
sbb
jmp
ret
push
ja
pop
repnz
cdq
bound
mov
call
xor
jmp
daa
inc
enter
jmp
push
pop
movs
imul
mov
js
and
cs
jne
rol
sbb
scas
mov
jb
add
stos
ret
push
ja
call
cmp
imul
cmp
lea
test
les
pop
call
and
in
mov
mov
retf
xor
retf
imul
xchg
in
xor
pop
sbb
loope
sbb
cmp
push
pusha
jmp
int
or
jmp
xchg
dec
sub
push
mov
inc
jmp
int
lahf
inc
and
inc
cmp
pop
lods
call
popa
push
sbb
cmp
pusha
ret
into
push
pop
xchg
pop
mov
push
mov
jo
pop
stos
pushf
rcr
aas
(bad)
mov
xchg
retf
call
xor
mov
or
xchg
add
dec
into
rol
imul
pop
outs
xor
lock
pop
and
cmps
pop
adc
or
mov
mov
mov
pusha
xchg
jae
jmp
push
pop
jge
cmp
mov
iret
mov
pop
icebp
mov
push
lea
pusha
popf
inc
test
pop
jne
lock
stos
and
pusha
mov
cmp
adc
jp
movs
dec
dec
add
aas
pop
in
xchg
cmc
pop
pop
ja
rcr
(bad)
imul
pop
cmp
inc
xor
add
add
pusha
(bad)
mov
mov
xor
xchg
cmp
outs
scas
xchg
or
push
ret
and
aam
arpl
xor
fist
push
pop
cmp
test
es
pop
xor
push
add
push
mov
mov
mov
inc
aad
mov
push
pop
lds
call
ret
pop
add
mov
or
je
out
sbb
lea
and
add
fwait
clc
add
out
aad
adc
or
scas
scas
xor
adc
mov
test
(bad)
cs
sbb
inc
jmp
arpl
pop
jne
mov
in
add
xor
jns
push
sbb
jns
adc
jne
mov
push
push
mov
lods
ret
cmp
clc
sub
mov
into
mov
jl
add
popa
add
mov
inc
jmp
test
mov
jl
into
jmp
jmp
pop
pop
outs
popf
push
cmp
mov
mov
xchg
jmp
imul
xchg
inc
dec
test
movs
push
xchg
jb
push
adc
rol
nop
inc
xor
stos
fsubr
push
inc
(bad)
jmp
pop
ret
mov
pusha
sub
add
mov
stos
jmp
xchg
mov
push
ds
fucomi
lods
movs
mov
movs
mov
mov
in
nop
std
sub
ss
out
mov
cmp
pop
jo
adc
sub
add
push
popf
mov
xchg
cmp
xchg
pop
daa
cmp
xchg
push
cmps
leave
mov
stos
jmp
movs
jb
and
push
adc
push
xor
cmp
push
add
sub
icebp
xchg
fsub
pop
int
test
iret
setne
in
jle
xchg
daa
out
(bad)
jecxz
and
mov
test
inc
loop
mov
push
mov
adc
dec
push
bound
(bad)
cmp
(bad)
imul
clc
aaa
sbb
fs
push
sbb
bound
push
jmp
xchg
push
xchg
jge
lock
sbb
xor
pusha
mov
jbe
test
repnz
js
stos
push
sub
sti
loope
pop
mov
mov
ds
pop
push
dec
clc
cmp
and
ret
push
mov
popf
sbb
in
fstp
inc
leave
mov
scas
ins
pop
cmc
mov
ror
jno
adc
retf
pop
aas
dec
iret
and
pop
cmp
push
mov
or
cli
addr16
sbb
and
cmps
cmp
mov
mov
fdivr
push
rol
sar
xor
pop
jmp
or
dec
in
xchg
fwait
push
add
xor
dec
jnp
test
sahf
mov
repz
mov
mov
mov
fidivr
xor
mov
call
int
stc
add
sbb
int3
lods
push
sub
mov
aam
cmp
push
sbb
mov
(bad)
mov
ret
sti
sub
in
ins
push
test
cmp
das
mov
dec
mul
test
jg
lds
pop
in
mov
ja
es
test
lds
push
xor
fiadd
(bad)
sti
adc
and
inc
loope
sbb
mov
(bad)
sub
add
xrelease
pusha
mov
xchg
mov
push
sbb
push
not
imul
cmc
bound
cmp
das
cli
and
cld
jg
xor
sub
dec
mov
mov
stos
or
bound
dec
mov
inc
or
scas
fiadd
leave
cmp
shl
sub
int
sbb
cmps
ret
fdiv
(bad)
cld
rcr
mov
movs
jnp
mov
mov
iret
std
push
sbb
push
cdq
and
pop
daa
fcmove
mov
lahf
std
mov
int
clc
mov
scas
dec
mov
add
daa
enter
dec
int3
repnz
(bad)
lahf
jmp
les
add
ret
fcmovnu
push
add
pop
mov
adc
adc
push
ins
movs
fisttp
shl
jae
mov
cmp
jns
push
mov
pop
pop
popa
sbb
cs
sub
mov
adc
lock
sbb
pop
fwait
adc
jbe
pop
(bad)
mov
xor
mov
push
xchg
xchg
and
(bad)
mov
mov
sub
test
outs
add
xchg
adc
int3
xor
mov
xor
mov
pop
(bad)
push
loop
stos
rol
mov
mov
rcl
in
mov
loopne
xor
dec
sbb
inc
inc
pop
jns
sbb
mov
jo
jge
xchg
cmp
jae
iret
js
ret
js
cwde
jmp
fist
sub
and
jmp
pop
(bad)
leave
jl
xchg
adc
icebp
mov
dec
int
adc
inc
out
cli
andps
int3
test
arpl
in
test
cmp
pop
retf
cmp
jns
ins
cmp
pop
dec
dec
inc
ret
sbb
mov
enter
jg
popf
jg
xchg
mov
sub
retf
cmp
sbb
lea
mov
sti
sub
push
fcmovne
mov
dec
push
and
and
or
(bad)
dec
sysenter
jmp
dec
call
dec
call
(bad)
mov
xlat
popa
xor
xchg
in
repnz
cwde
neg
cmp
pusha
cmp
fst
shl
push
mov
scas
dec
pop
gs
out
es
loop
sub
add
(bad)
in
je
sbb
in
sub
out
(bad)
pushf
and
cmp
push
mov
jmp
and
icebp
mov
jno
adc
push
imul
in
int3
enter
push
jp
pop
loopne
and
pop
or
and
std
push
adc
mov
dec
mov
mov
into
and
pop
js
sbb
jnp
xchg
dec
xchg
idiv
das
mov
cmp
(bad)
mov
in
adc
shr
mov
(bad)
xor
scas
sub
ficomp
xchg
jns
jmp
les
cmp
cmc
out
stos
ss
jecxz
lods
sbb
mov
xor
scas
popa
es
sbb
adc
cwde
cld
repnz
add
fbld
aaa
push
lahf
out
(bad)
iret
and
cmp
cmps
and
mov
mov
mov
xchg
lea
fwait
inc
pop
js
mov
mov
adc
bound
and
pusha
mov
icebp
lahf
fwait
mov
mov
cmp
or
ror
mov
movs
push
sub
or
inc
imul
adc
adc
aad
pop
add
ds
das
cld
push
daa
jge
nop
in
gs
pop
test
repz
mov
jp
dec
cli
mov
xchg
push
in
or
inc
pop
loope
aas
add
(bad)
pop
icebp
jb
add
addr16
in
pushf
mov
out
outs
add
call
(bad)
aas
jg
cmc
xchg
rol
lods
cmp
sub
addr16
adc
jg
push
ret
(bad)
clc
icebp
pusha
cmp
pop
lock
(bad)
ja
aas
xchg
fst
and
mov
sahf
mov
mov
inc
cmp
and
xchg
das
mov
mov
jns
ja
jecxz
jns
and
call
cmc
pop
cmps
lods
in
cmp
add
pop
pop
mov
adc
jne
(bad)
mov
or
popa
stos
repz
mov
pop
push
shr
jne
jb
test
pop
sub
xchg
ins
aam
mov
mov
mov
out
xadd
test
out
sbb
sbb
outs
mov
lock
in
dec
dec
and
fadd
aad
xor
pop
test
xchg
in
pop
xor
mov
mov
cld
lods
jp
push
jno
(bad)
push
cs
sbb
movs
sbb
fsubr
arpl
hlt
push
push
and
mov
jns
leave
and
aas
inc
xchg
in
arpl
cmp
adc
and
dec
jo
shl
jo
xor
cmps
lahf
test
push
fucomp
adc
icebp
retf
and
mov
bound
idiv
ins
mov
rcr
fmul
(bad)
aam
(bad)
retf
out
add
push
pop
mov
and
das
in
dec
fld
lock
xchg
pop
or
jne
xor
mov
test
push
gs
icebp
invd
jb
cmp
dec
mov
dec
call
add
loop
dec
xchg
call
push
shl
jo
(bad)
fidivr
ret
int3
ss
into
sbb
xor
jmp
movs
into
cmps
push
movs
adc
mov
or
mov
dec
sub
push
aaa
mov
rcr
iret
pop
js
mov
adc
jge
aaa
loope
cmp
pop
sub
or
fld
mov
pushf
mov
test
mov
cld
push
push
nop
das
dec
loop
lods
cmps
sbb
iret
gs
sbb
or
outs
inc
push
mov
push
dec
push
fistp
lods
test
jge
les
cmps
bound
push
sbb
mov
cmps
(bad)
push
test
in
movsx
rol
ror
cld
and
fcmovnb
mov
lahf
cmp
lahf
lahf
dec
je
inc
dec
mov
ret
push
jo
push
pop
call
jmp
adc
pusha
es
cli
xor
jp
scas
mov
xchg
ret
fisttp
pusha
cwde
fsubp
sub
sbb
add
sti
shl
xor
and
inc
lods
sbb
xchg
out
mov
or
ins
or
inc
mov
cs
and
push
cs
out
sub
sbb
cdq
dec
push
jns
jmp
jecxz
ja
xchg
test
pop
xlat
retf
cmps
(bad)
cs
xor
int3
icebp
inc
xor
sbb
inc
cmp
xchg
adc
xchg
mov
test
xor
gs
mov
add
cmp
aas
jno
jecxz
loope
sub
fisub
lods
clc
repnz
cmp
jo
xor
lods
pop
mov
mov
into
movs
mov
(bad)
adc
xor
or
les
and
stos
jnp
mov
addr16
test
push
push
pop
in
fsub
inc
jnp
lods
repz
ret
ss
adc
jge
mov
mov
push
dec
adc
adc
xchg
inc
cmc
lea
bound
pavgb
je
xor
sub
ror
sbb
jl
xor
or
cmp
loopne
pop
test
or
repz
test
and
xor
dec
stos
fyl2x
loopne
data16
lock
mov
mov
jnp
sbb
mov
outs
pop
daa
fs
out
xor
xor
jmp
lock
pop
mov
nop
dec
leave
(bad)
div
and
add
pushf
mov
js
xchg
vphadduwq
sbb
stos
(bad)
out
data16
push
xchg
sti
xchg
sti
mov
jno
test
push
pop
sbb
push
dec
push
shr
(bad)
out
mov
pop
pop
aam
sub
shr
cmp
mov
xchg
es
int
rcl
inc
dec
int
fnstcw
mov
push
mov
and
ins
ins
imul
fwait
ins
aam
rcl
xor
mov
adc
es
and
stos
outs
xor
stos
not
(bad)
mov
lods
cmp
push
xchg
enter
mov
jmp
sbb
push
jb
add
mov
out
cwde
aad
jg
jge
cdq
sub
cmp
out
nop
add
in
aam
sub
hlt
xchg
pop
data16
and
mov
mov
aaa
mov
fisub
imul
adc
out
rcl
adc
and
mov
push
adc
in
popa
mov
std
inc
mov
shr
call
pop
(bad)
fcomp
push
xchg
mov
out
(bad)
jmp
lock
fadd
sbb
outs
push
xchg
inc
imul
pop
adc
frstor
cmp
test
popf
test
add
loope
pop
ror
jg
mov
pop
repz
jmp
adc
push
jbe
movs
sti
movs
enter
jle
sub
or
push
pop
repz
mov
pop
push
jnp
cmp
sub
mov
mov
cmp
stos
push
sub
sbb
push
mov
jle
push
push
ss
xor
jl
lock
scas
std
cmps
aaa
cdq
jmp
call
call
(bad)
xor
rcr
xor
ss
outs
int3
cmp
adc
pop
imul
jns
jne
cld
fisub
cdq
test
push
mov
mov
push
out
add
inc
xchg
daa
xchg
adc
xor
pushf
mov
movs
test
pushf
adc
mov
and
mov
cmp
les
jg
lods
retf
xor
popf
inc
mov
repnz
jns
and
xor
mov
movs
scas
cmps
or
mov
in
out
movs
jmp
add
push
fisttp
and
mov
dec
ja
pop
imul
xchg
icebp
imul
jbe
cmps
test
xlat
pop
dec
into
fimul
pop
jp
mov
into
ja
xor
sti
lock
xchg
mov
(bad)
(bad)
jmp
mov
push
push
xlat
pop
fs
push
xchg
(bad)
push
in
inc
pop
sahf
pop
mov
stos
mov
aam
cmp
jl
sar
adc
cli
mov
sbb
mov
enter
and
imul
jl
test
std
pop
push
ins
pop
fsubr
xor
xchg
lods
ror
mov
mov
out
imul
add
xchg
and
jne
sbb
adc
rcr
mov
addr16
cmp
addr16
or
mov
jmp
sub
out
(bad)
aam
(bad)
sub
(bad)
push
push
and
fstp
and
ret
dec
mov
iret
rol
ss
add
lds
mov
sub
push
cmp
fwait
das
lods
call
xor
loopne
(bad)
pop
aas
hlt
adc
jmp
mov
addr16
jg
or
push
jecxz
sbb
jbe
idiv
mov
xchg
and
mov
push
pop
xor
shl
pop
dec
cmp
push
ret
repz
cmc
push
xchg
xchg
shl
ins
xchg
xchg
pop
push
sahf
pop
imul
jne
fidivr
cld
mov
mov
mov
fmul
mov
dec
push
pop
jge
call
and
dec
mov
cmp
call
pop
cmps
into
fiadd
sti
pop
xlat
call
pop
sub
pop
in
aas
mov
xchg
push
test
(bad)
push
xchg
outs
imul
xchg
cmp
pop
fadd
adc
xchg
inc
sub
stc
inc
ror
outs
mov
cmp
loopne
aaa
or
ins
nop
jno
outs
or
dec
pop
push
xor
sar
ror
sbb
and
outs
outs
test
mov
(bad)
mov
cmp
rcr
cmp
fucomip
jbe
jmp
outs
jmp
xlat
add
ret
pop
cs
jae
xor
xchg
inc
mov
stc
iret
sbb
sub
nop
or
pop
pop
add
pop
or
imul
inc
add
aas
and
xor
push
pop
jnp
sbb
push
repz
movs
fucomip
dec
cmp
jge
push
dec
(bad)
into
xor
sub
mov
scas
cmps
or
test
cdq
call
dec
std
sbb
aam
jp
push
dec
fcmovu
aam
inc
mov
(bad)
or
into
in
movs
adc
gs
pop
jp
or
pop
repz
push
or
xor
cdq
push
sbb
hlt
pop
paddusw
mov
popf
not
stos
fwait
retf
pushfw
pusha
movs
pushf
jae
pop
or
pop
xchg
scas
in
int
add
shl
popa
data16
pop
test
lods
gs
mov
push
or
test
retf
push
xor
add
(bad)
loope
mov
pop
push
fnstsw
ins
repnz
add
pop
ja
outs
xlat
cld
xor
push
cmp
outs
imul
pop
pop
push
leave
and
pop
jno
cmps
int3
push
push
sahf
dec
adc
xchg
add
in
ja
inc
push
push
dec
test
scas
(bad)
je
xor
data16
pop
or
hlt
icebp
fwait
(bad)
retf
pop
cmps
ret
pop
jmp
loop
in
sbb
mov
mov
push
add
call
xor
out
mov
leave
lods
mov
repz
push
adc
lds
loop
and
ds
lahf
stos
xor
scas
mov
enter
sub
ret
lea
xchg
xchg
jmp
lea
push
mov
sbb
imul
bound
push
outs
xchg
retf
push
xlat
sbb
loope
and
(bad)
push
(bad)
iret
(bad)
neg
mov
cmps
cwde
out
fld
popa
(bad)
hlt
push
jmp
stos
add
sub
mov
fdiv
cmove
inc
sahf
lds
mov
in
xchg
repnz
rcl
jecxz
push
mov
jo
push
pop
adc
dec
enter
popf
out
(bad)
jle
popf
retf
fwait
(bad)
mov
sbb
int
jmp
cld
sti
mov
out
jns
test
push
mov
rcr
popf
stc
imul
call
neg
ret
imul
pop
in
inc
mov
push
outs
jno
dec
je
cli
mov
jmp
retf
retf
je
loopne
in
and
sub
dec
pop
retf
xchg
pop
and
lds
(bad)
int3
loope
dec
add
cwde
adc
(bad)
xor
mov
(bad)
(bad)
xchg
cmp
repz
or
add
mov
movs
mov
mov
sub
lds
mov
cmp
push
lock
jnp
rol
fisubr
push
xor
test
das
out
ja
nop
and
enter
mov
stc
outs
shl
inc
leave
push
call
or
xor
ds
mov
jns
hlt
ret
mov
sub
fist
scas
pop
fsubr
or
xchg
shl
pop
jg
mov
fiadd
pop
pusha
fsubrp
mov
and
repz
sub
movs
repz
fcmovnu
pushf
mov
adc
jg
ss
pusha
dec
addr16
scas
call
mov
push
adc
add
std
mov
gs
enter
out
pushf
paddw
pushf
sub
arpl
or
pusha
cmps
or
mov
scas
xor
enter
jbe
jle
or
mov
xchg
fidiv
or
imul
and
call
scas
push
sti
movs
aad
fild
mov
data16
push
ins
movs
or
scas
aam
xchg
je
mov
ret
adc
rcr
lds
cmc
call
mov
pushf
movs
mov
pop
inc
ror
mov
std
mov
or
lods
lock
or
and
cmc
pop
test
retf
bound
push
push
xchg
fdiv
xchg
inc
mov
xor
sar
add
repz
test
jge
test
ja
push
mov
fs
nop
fcmovbe
sti
ret
call
dec
xchg
xor
ss
popa
push
stos
and
sar
lods
mov
data16
sub
mov
mov
addr16
push
mov
push
mov
push
adc
outs
jp
mov
fsub
or
xchg
shl
cmp
pushf
mov
int
fdivr
mov
loope
mov
pop
mov
xchg
jmp
lock
inc
fidiv
ss
loopne
mov
or
sbb
cld
test
pop
cs
mov
imul
mov
(bad)
fadd
pop
xor
jl
inc
xchg
xor
aam
cmp
stos
adc
push
test
lods
aaa
pop
xor
adc
std
push
add
xchg
shl
mov
dec
int
je
xchg
(bad)
imul
idiv
fstp
iret
fcom
lods
arpl
or
xchg
jle
push
or
adc
je
xor
and
cmp
mov
clc
add
add
xlat
das
mov
data16
outs
add
daa
out
(bad)
test
cmp
xor
jb
mov
add
jae
adc
inc
call
sbb
mov
jae
js
jle
mov
je
aas
mov
add
jl
mov
jne
cli
pop
cdq
push
add
mov
mov
cwde
mov
sbb
mov
outs
mov
fstp
cmc
mov
int
push
gs
xor
stos
and
outs
inc
out
xlat
mov
movs
in
fisttp
push
stos
jno
in
into
push
into
imul
pop
sahf
inc
rcr
bound
sahf
sub
cmp
inc
sub
cmp
addr16
aas
dec
mov
lods
jmp
cli
fsub
iret
cmp
jnp
es
push
fild
mov
jae
or
movs
(bad)
retf
pop
cmp
xchg
out
jns
call
jmp
xchg
iret
sbb
add
cmc
sbb
stc
or
dec
jge
jns
test
es
scas
rcl
push
aam
adc
loope
lahf
loop
lock
mov
ja
es
retf
mul
and
xor
pop
test
pop
sar
cmp
cmp
daa
mov
mov
mov
fisttp
(bad)
sub
ficomp
sbb
cli
mov
cld
adc
or
push
retf
sub
pop
popf
mov
ror
inc
sub
gs
sub
and
mov
js
test
adc
es
sbb
retf
xchg
(bad)
leave
pop
cli
sbb
scas
call
inc
pop
or
mov
imul
xor
ds
push
fsub
cld
push
lahf
jbe
fistp
(bad)
xor
pop
pop
mov
pop
icebp
es
ins
ins
push
xor
cmp
repnz
or
push
movs
or
std
in
and
mov
cwde
add
mov
pop
sub
aad
dec
mov
dec
sbb
test
hlt
jb
out
out
test
mov
test
es
add
mov
pop
push
push
lea
dec
xchg
test
ficom
mov
mov
jae
pushw
ds
ja
cmp
rcr
ret
or
mov
cmp
mov
clc
inc
mov
in
loopne
xchg
mov
fnstenv
pop
out
mov
mov
jnp
aad
std
xchg
jmp
fisttp
stc
fistp
mov
xor
sbb
xchg
or
out
mov
aas
aam
leave
loope
mov
mov
retf
je
dec
jns
movd
out
out
scas
sbb
jo
nop
xor
dec
(bad)
dec
mov
mov
in
sbb
cld
mov
rol
add
xor
icebp
add
(bad)
cli
ins
dec
mov
movs
push
push
ror
fs
and
inc
cld
(bad)
mov
stc
mov
clc
mov
xor
inc
pinsrw
shl
and
pop
cmps
mov
sub
pop
or
(bad)
fninit
mov
jb
push
(bad)
adc
ret
and
pop
add
xchg
das
aam
pop
jmp
(bad)
mov
cmp
sub
out
retf
push
aaa
nop
pop
xor
and
xor
mov
cmp
push
popf
and
mov
rol
xor
in
pusha
pop
inc
clc
push
aad
push
ds
ss
fs
or
jle
sar
add
jmp
add
sbb
xor
pop
loope
clc
adc
mov
xor
fwait
mov
popf
pop
or
(bad)
jo
xchg
xlat
movs
in
movd
xchg
xchg
icebp
mov
and
cdq
clc
je
inc
movs
test
les
jmp
call
(bad)
out
sbb
out
scas
mov
loopne
inc
inc
xor
add
nop
and
xchg
gs
cmp
or
out
jne
add
xor
aas
add
jmp
jbe
outs
pop
cmp
sub
iret
out
jae
call
ret
ins
adc
sub
sahf
dec
sub
into
(bad)
push
dec
(bad)
call
mov
loopne
inc
ror
or
jge
clc
mov
push
lods
and
fmul
mov
cmp
imul
mov
call
pop
and
adc
cmp
(bad)
cmp
xchg
es
sbb
aam
and
scas
cmps
in
xor
push
inc
inc
rcr
(bad)
mov
dec
out
ja
sub
cmp
jae
aas
mov
xchg
jmp
pop
out
or
(bad)
retf
cmps
shl
cmp
xor
cwde
pop
movs
lods
xor
cmp
ja
jmp
in
shr
lods
push
add
je
bound
movs
cmp
ret
sbb
scas
loop
mov
sbb
fcmovne
sub
push
mov
stc
xor
inc
(bad)
xor
ins
mov
pop
xchg
jno
inc
int
sbb
arpl
outs
shl
ror
lock
jg
pop
mov
or
push
mov
jbe
pop
pop
mov
loope
mov
(bad)
xchg
lea
cmc
dec
sbb
stos
aaa
aam
in
sar
test
jle
adc
xor
mov
ret
leave
or
call
push
mov
adc
fbld
sbb
(bad)
sub
pop
cmp
ror
cwde
ins
mov
(bad)
cmp
adc
sbb
pop
mov
adc
push
xchg
add
xlat
mov
add
pop
jnp
pusha
xchg
push
outs
repz
mov
xor
ins
inc
sbb
dec
arpl
mov
movs
inc
pop
sub
cmp
cli
stc
mov
xchg
add
in
pop
push
mov
(bad)
aaa
mov
adc
lock
add
(bad)
retf
push
adc
clc
xor
mov
into
push
mov
lahf
mov
sbb
cld
(bad)
cmp
out
inc
jo
aad
fdiv
or
cmp
mov
call
movs
mov
mov
push
lea
mov
out
cs
xchg
cmps
jns
popa
sahf
adc
movs
fild
pop
in
mov
into
pop
mov
mov
inc
mov
sbb
fsub
aad
fcomip
jae
pushf
jne
retf
retf
cmc
in
lock
or
stc
sbb
cwde
mov
mov
cld
mov
mov
jl
mov
pop
outs
push
push
xchg
push
sub
inc
jnp
and
sbb
ds
aas
gs
add
mov
cmp
and
adc
push
lea
xlat
outs
outs
fld
inc
cmp
sti
loop
scas
bound
(bad)
jmp
daa
aaa
mov
push
je
ds
stos
in
scas
imul
push
inc
push
xor
pop
and
test
pop
or
ins
pop
test
or
out
aas
icebp
stos
and
iret
add
push
xor
xchg
test
mov
mov
adc
sbb
jno
inc
sar
fdivr
retf
int
int
retf
sbb
adc
loope
push
inc
sub
push
adc
repnz
dec
pop
pop
jbe
inc
pop
std
arpl
scas
push
add
rol
daa
mov
xchg
movs
push
sub
loop
mov
or
add
fs
pop
(bad)
pop
imul
(bad)
enter
inc
daa
or
bound
cmp
fwait
jno
aad
imul
nop
jns
mov
inc
and
xchg
test
lods
xor
fistp
dec
out
ficomp
or
xlat
adc
fxch
add
stc
mov
popa
ins
movs
sub
mov
push
jge
aad
and
mov
popa
mov
inc
dec
mov
fcmovb
in
xchg
sub
sar
adc
cmp
test
int
jl
xor
(bad)
shr
add
es
fwait
mov
push
pop
or
sar
loop
xor
loop
pusha
in
cmp
fistp
push
int3
test
mov
or
imul
and
mov
cwde
jo
lds
enter
repz
aad
pop
push
mov
in
and
cli
sub
ins
or
mov
and
int3
dec
inc
push
jmp
cmc
add
or
mov
outs
mov
hlt
outs
push
sbb
sbb
lods
mov
fwait
cmp
sub
gs
jp
nop
je
fadd
adc
mov
sub
int
xchg
fs
icebp
dec
out
dec
test
add
scas
xchg
in
adc
add
mov
stos
enter
test
adc
mov
sbb
push
inc
call
and
xor
jge
adc
ror
fsubr
push
mov
rcl
pop
fwait
jae
pop
xchg
and
ja
sub
cli
mov
das
pop
adc
stos
mov
push
dec
jno
lods
hlt
mov
push
xchg
pop
dec
jbe
in
sar
lods
fisttp
adc
mov
jmp
push
xchg
jmp
mov
scas
xor
add
out
inc
int3
retf
lock
mov
dec
popa
imul
in
fstp
rol
daa
cdq
dec
out
sub
inc
shl
jae
imul
add
adc
mov
stc
lods
dec
inc
test
mov
scas
lds
sub
sub
sub
pop
out
fcomip
fwait
imul
xchg
pop
out
loopne
iret
add
aaa
jne
dec
lods
xchg
xchg
loopne
mov
fld
test
xchg
jg
dec
sbb
sub
mov
paddusw
xchg
mov
call
xor
mov
xchg
scas
sub
arpl
pop
xor
mov
imul
fwait
rol
and
xchg
jb
cli
(bad)
sbb
not
ins
dec
rol
(bad)
call
nop
jecxz
mov
sti
add
jg
into
sbb
daa
fwait
cmp
cmps
call
cmps
xchg
mov
adc
call
sub
dec
dec
sbb
cmp
jnp
jge
xchg
loopne
(bad)
jmp
xor
fistp
daa
xor
ins
movs
inc
pop
sbb
pop
pop
test
mov
call
jnp
xor
enter
pop
ins
pop
adc
xchg
push
(bad)
stc
adc
jp
mov
test
(bad)
scas
scas
sub
add
pushf
mov
mov
call
add
(bad)
je
mov
(bad)
in
xlat
ins
shl
lea
add
pop
add
lock
ds
or
call
aam
sbb
push
sub
adc
mov
push
(bad)
retf
cmc
in
sub
push
pop
ja
(bad)
jge
mov
test
or
mov
aaa
lock
mov
cmp
icebp
bound
repz
or
push
(bad)
push
inc
cmp
push
dec
(bad)
mov
sar
loopne
sub
or
inc
mov
push
or
daa
in
jg
pop
out
bnd
cmp
dec
mov
outs
sub
dec
add
mov
shr
mov
or
sbb
cmp
ds
push
aas
dec
sbb
xor
inc
cmp
push
add
aas
sti
sbb
and
imul
mov
iret
sbb
out
add
fmul
or
adc
int
dec
mov
pop
xchg
in
push
pop
clc
dec
sub
cwde
xchg
or
mov
jecxz
sbb
adc
retf
sahf
fsub
cmp
retf
ins
pop
js
dec
push
dec
dec
fdivr
cwde
cld
in
out
sub
jmp
retf
inc
cmp
push
js
mov
inc
sub
(bad)
jp
sbb
test
popf
push
in
xchg
addr16
es
xor
mul
fstp
scas
add
movs
cld
nop
push
mov
xchg
jmp
ins
lods
xor
daa
stos
inc
jo
add
lahf
addr16
xlat
jns
rol
(bad)
pushf
mov
dec
push
sub
jnp
push
call
xor
push
and
nop
push
xor
imul
sar
shl
fsubr
mov
and
inc
pop
stos
lods
jo
add
ret
call
test
(bad)
(bad)
mov
push
inc
mov
inc
mov
xchg
into
xor
jno
xchg
in
dec
sbb
or
out
pop
popa
je
push
ds
add
arpl
mov
inc
pop
jle
mov
adc
xchg
rcr
inc
sahf
mov
push
cld
add
mov
push
cmc
xchg
(bad)
pop
adc
xchg
mov
push
scas
add
mov
fwait
cmp
call
cmps
cwde
jg
cmps
(bad)
es
sbb
movs
adc
pop
fisub
mov
jb
jg
dec
inc
or
mov
xchg
ret
push
test
shl
pop
retf
out
(bad)
xchg
imul
mov
dec
dec
retf
fadd
adc
out
cld
aam
dec
xchg
aas
pop
jmp
pop
cmp
retf
jmp
pop
imul
push
cmp
jecxz
mov
mov
adc
shl
xchg
outs
dec
adc
loopne
or
jle
or
(bad)
and
(bad)
fstp
jno
call
mov
add
add
sbb
(bad)
lock
or
fs
jmp
xchg
jl
or
pop
mov
mov
sub
and
repz
out
sahf
retf
jmp
shr
popf
and
loop
jno
dec
test
xor
lock
je
mov
sbb
and
xchg
add
inc
xor
add
lds
or
out
js
ss
stos
sbb
dec
cdq
jl
gs
pop
je
jno
leave
sub
call
sub
fnsave
mov
push
mov
xor
ret
shl
fistp
xchg
push
pop
loope
inc
jnp
popf
clc
sbb
mov
inc
shl
not
ret
pop
add
into
sub
clc
imul
add
cmp
mov
fst
daa
outs
mov
fld
ja
hlt
sub
xlat
or
mov
in
loopne
imul
movs
jmp
push
xchg
addr16
shl
mov
inc
xchg
or
(bad)
in
clc
mov
mov
adc
jae
adc
(bad)
jb
not
jbe
arpl
call
mov
cwde
gs
dec
inc
in
mov
test
adc
mov
mov
adc
rcl
aas
imul
dec
sub
dec
cmps
push
add
stos
ficomp
jp
push
fld
cmp
add
das
mov
lds
int3
fst
pop
lds
shl
xchg
push
cmp
enter
sub
adc
and
jnp
sub
sti
repnz
adc
mov
das
das
inc
push
lds
sub
push
push
and
push
call
pushf
fldenv
test
mov
push
xchg
xchg
test
mov
cmp
psrlq
fcomp
sbb
out
xchg
adc
dec
or
scas
xchg
nop
jne
adc
icebp
out
fldl2e
ret
and
push
fnstenv
xor
push
outs
fiadd
pop
mov
pop
and
and
iret
repnz
or
pop
push
daa
dec
loope
jb
mov
mov
pop
jo
retf
jnp
sub
xchg
inc
cmp
pop
xor
int3
push
mov
inc
pop
pop
into
(bad)
mov
add
repnz
fisub
out
mov
iret
mov
setbe
(bad)
nop
mov
jmp
mov
sbb
mov
mov
push
call
xor
jp
dec
pop
mov
(bad)
jecxz
sub
dec
(bad)
and
not
outs
(bad)
pop
push
aam
jae
test
shl
inc
cmp
mov
xchg
mov
lea
test
jno
and
out
push
cmps
mov
mov
cmps
adc
jb
dec
mov
push
add
call
(bad)
xor
jle
push
cmps
(bad)
fsubr
jge
cmp
jecxz
push
inc
mov
js
fwait
and
sti
and
and
loopne
jge
mov
test
pop
and
das
je
jns
stc
aas
add
sbb
xchg
lods
push
jmp
lock
mov
mov
dec
leave
add
jge
xchg
mov
mov
xchg
test
pop
dec
jo
scas
xor
int3
shr
call
xchg
mov
nop
jae
je
sub
adc
push
cmp
mov
rol
cmpxchg
adc
mov
sar
mov
pop
or
bound
retf
push
pop
jl
aam
stos
push
mov
pop
je
leave
sahf
stc
aas
pop
mov
out
sbb
leave
daa
call
cwde
(bad)
popa
lea
push
es
fucomp
jmp
ret
loope
dec
mov
inc
dec
call
test
ret
mov
fidiv
add
adc
or
pop
daa
xlat
aaa
adc
xor
dec
pop
aad
(bad)
mov
sbb
xor
xchg
inc
xchg
pop
ja
xor
cmc
ficomp
and
mov
and
mov
mov
mov
adc
pop
xor
pop
sbb
movs
(bad)
jbe
mov
jns
mov
ds
mov
bound
shr
pop
(bad)
sbb
in
fidiv
xlat
xchg
jp
dec
jle
mov
mov
in
xchg
adc
jmp
ins
xchg
imul
dec
outs
fldcw
xchg
arpl
stos
sub
and
jl
or
xor
jmp
adc
xchg
xor
dec
mov
idiv
ret
sbb
rol
sbb
cmp
sub
mov
cwde
jae
and
jg
inc
add
pop
dec
push
and
iret
jbe
push
xor
sub
add
not
and
sahf
dec
or
push
dec
into
fimul
mov
xchg
jecxz
retf
pop
loop
leave
add
es
icebp
cdq
cmc
cdq
ja
(bad)
ins
(bad)
into
pop
adc
jb
out
add
cmp
jo
push
fadd
ds
sbb
cmps
imul
retf
into
scas
mov
add
or
in
(bad)
jge
test
popa
leave
inc
ror
xor
inc
mov
fist
mov
xchg
pop
xor
jnp
adc
ret
addr16
mov
in
fadd
loope
and
imul
dec
or
call
repnz
test
push
cdq
scas
stos
sbb
inc
mov
repz
mov
or
or
and
mov
cmp
cdq
in
cmp
out
addr16
std
jne
jecxz
in
call
adc
shl
cld
pusha
jecxz
fnstenv
leave
and
aas
js
pop
(bad)
arpl
dec
aaa
sbb
mov
gs
mov
test
pop
push
sti
rol
inc
xchg
and
test
leave
shl
add
arpl
push
fidiv
jne
retf
dec
cld
sbb
int
js
ficomp
pop
jb
xor
lods
jbe
jg
jno
loope
outs
mov
adc
or
(bad)
out
cmp
sti
or
out
rol
and
scas
loope
xor
mov
scas
cmp
jl
repnz
mul
in
cmps
shl
int3
mov
ins
rcl
jno
cmps
fst
inc
jne
mov
jl
pusha
and
sbb
jbe
jno
dec
pop
ds
lock
dec
inc
(bad)
sar
fild
xchg
adc
push
cmc
repnz
fmulp
aaa
xor
dec
push
pop
sbb
jno
sbb
repz
out
pop
adc
ja
mov
lods
xchg
in
loop
adc
mov
jmp
push
mov
cmp
pop
xchg
cld
mov
retf
js
test
adc
and
cli
cwde
imul
sbb
cmp
jo
cmp
inc
(bad)
sbb
ins
push
cdq
rcl
leave
sub
div
inc
aam
jno
xor
shr
mov
aad
xchg
ja
ret
outs
jmp
daa
rcl
(bad)
pop
outs
mov
mov
pop
mov
dec
xchg
dec
call
cmp
scas
enter
int3
mov
adc
mov
and
out
cmp
retf
mov
popf
(bad)
cvtdq2ps
into
movs
std
adc
movs
mov
adc
jmp
mov
out
sahf
push
jae
sbb
enter
or
inc
push
icebp
jp
sti
xor
xlat
cmc
jns
cmp
movs
jnp
jae
pop
fidiv
pop
imul
pop
(bad)
ret
aam
jns
sbb
push
jo
dec
jmp
aad
out
push
cdq
and
push
and
mov
mov
fwait
push
jp
jg
pop
xchg
cmp
cmp
cmp
mov
test
int3
inc
shl
in
daa
data16
lock
dec
mov
cmp
mov
in
into
repz
sbb
dec
bound
mov
pop
adc
mov
imul
scas
ds
sub
stos
bound
shl
cmp
xchg
fstp
add
or
hlt
cmp
mov
mov
mov
xchg
mov
mov
push
jbe
mov
mov
mov
add
fistp
add
mov
xlat
sbb
push
cmps
cdq
push
test
pushf
add
scas
test
sub
jp
mov
adc
imul
mov
int
cld
inc
rcr
pop
xchg
bound
enter
(bad)
addr16
ret
(bad)
call
jge
scas
mov
mov
stc
mov
sub
test
nop
(bad)
jp
imul
cmps
mov
loop
cmp
adc
sub
mov
rol
dec
mov
add
jecxz
mov
jl
icebp
mov
bound
and
dec
sub
iret
adc
or
sbb
into
pop
xchg
popa
jp
cmp
rcl
data16
hlt
mov
pop
mov
ret
jne
adc
mov
or
sub
push
mov
ins
daa
or
jl
pop
sub
cli
nop
int
pop
lock
inc
mov
cmps
sbb
cmp
dec
push
sbb
xchg
sub
aaa
or
shl
iret
leave
jmp
mov
xchg
hlt
shl
jns
xchg
xlat
sar
lods
test
cli
mov
push
arpl
fisubr
cdq
or
in
in
push
sub
xchg
int
cwde
ret
fucom
pop
in
pusha
inc
xor
add
and
adc
or
out
stos
std
adc
jecxz
icebp
lock
out
sub
bound
je
aam
mov
push
movs
pop
push
rol
(bad)
fadd
ret
(bad)
out
lahf
sbb
xor
shr
inc
mov
jno
push
pusha
sub
aam
add
sub
adc
lds
adc
jno
icebp
pop
fst
mov
fldcw
int
shl
jge
inc
dec
addr16
scas
nop
mov
xchg
mov
or
dec
in
sbb
xor
rol
movs
mov
jns
add
xchg
call
jge
mov
sub
fdivr
das
data16
push
xchg
or
mov
aad
cmps
pop
push
neg
fwait
pop
call
pop
fsubrp
in
(bad)
mov
mov
xor
lds
add
push
push
pop
enter
inc
icebp
adc
ror
pop
repnz
cmp
call
xlat
lods
push
jo
sub
mov
cmp
xchg
push
in
jmp
sbb
fisubr
cmps
mov
das
xor
adc
push
in
aad
imul
dec
jg
fwait
(bad)
jbe
mov
jb
lods
mov
xchg
lods
stc
xlat
(bad)
ret
dec
jbe
out
aam
div
in
out
sub
clc
jl
popf
jae
mov
fs
sbb
rol
pop
ja
push
cmc
dec
aad
or
dec
pop
cmp
retf
in
mov
movs
fnsave
cmp
std
mov
push
imul
addr16
div
pop
repz
lods
dec
dec
mov
scas
adc
mov
adc
arpl
ds
cmp
movs
rcl
aaa
movs
sub
sub
inc
dec
sbb
sbb
jno
inc
call
popf
cmp
pop
push
adc
push
daa
pop
movs
sbb
shl
lock
jb
xchg
add
cld
pop
fdiv
sub
loop
shl
movs
outs
cmp
sub
xor
cmps
mov
jp
icebp
push
gs
call
mov
mov
push
out
cmc
pop
xchg
(bad)
dec
jle
sti
add
mov
sti
dec
in
daa
sub
lds
cdq
and
sub
movs
inc
pop
cmps
jg
in
addr16
sub
xor
(bad)
dec
xor
shl
dec
mov
jl
xor
dec
jmp
pop
in
jae
pop
ja
jbe
leave
dec
and
je
dec
mov
ret
mov
push
fiadd
fabs
not
jnp
cdq
(bad)
stos
or
(bad)
or
test
fs
int
adc
dec
jge
mov
mov
and
pop
repz
dec
mov
pop
inc
dec
(bad)
xchg
call
ret
xchg
mov
dec
ror
mov
ror
into
test
sbb
jae
rol
aam
les
pop
push
xchg
mov
test
jg
push
pop
sahf
mov
inc
fcmove
xchg
loop
mov
ret
mov
jmp
ds
sbb
ss
sbb
scas
repnz
ins
push
xchg
ss
mov
jno
iret
sti
cmp
hlt
adc
pop
pop
jmp
repz
mov
lock
xchg
pushf
xchg
in
aam
int3
fnsave
fstp
data16
ds
push
push
pop
lock
js
mov
ins
sar
test
push
dec
and
cmp
pop
pop
shl
fmul
jle
sbb
retf
push
jns
xor
in
daa
mov
mov
cmp
lods
or
ss
xchg
outs
push
lds
jle
cwde
push
call
out
xchg
inc
push
scas
imul
jae
call
in
iret
or
xor
pop
xor
cmp
sub
(bad)
mov
mov
pop
pop
pop
xchg
fcom
mov
ins
cmp
push
jmp
mov
out
aaa
pop
movs
sbb
mov
sbb
(bad)
aas
sbb
push
cmp
leave
clc
sbb
gs
imul
out
jbe
(bad)
(bad)
pop
movs
out
mov
pop
and
popf
jae
xchg
pushf
pop
test
push
leave
cmp
ret
sahf
add
pushf
sub
push
sbb
jmp
imul
xor
retf
mov
std
mov
fdiv
jae
rcr
push
sbb
nop
je
call
cmps
sub
xchg
and
xchg
add
fild
xor
bnd
(bad)
and
adc
cmp
add
lea
sbb
xchg
jo
rcl
or
mov
aaa
mov
mov
jmp
xor
mov
test
jns
jo
popf
cli
pop
imul
aad
or
lock
sub
push
shl
sbb
stos
les
fnstsw
aad
stc
inc
test
mov
push
out
adc
pop
leave
and
daa
sub
jg
dec
mov
fadd
out
mov
stos
xchg
(bad)
adc
cwde
into
and
fistp
or
xchg
adc
and
or
sti
shl
pop
mov
dec
xor
(bad)
mov
or
sub
inc
sub
mov
movs
loope
xor
add
mov
test
pop
or
fcom
in
and
test
push
mov
push
imul
fnsave
or
push
pushf
test
loopne
inc
jl
cmp
xchg
shr
cld
lods
jo
test
inc
push
cmp
add
int3
cmc
mov
repz
mov
mov
out
adc
pushf
lahf
jg
push
ficom
int3
and
adc
int3
xor
pop
gs
jno
sahf
xchg
mov
dec
ret
pop
pop
(bad)
mul
mov
addr16
aam
enter
jp
call
jns
ins
clc
mov
imul
mov
hlt
ss
mov
push
fsub
cwde
mov
nop
ror
call
push
jb
fwait
xlat
and
arpl
dec
loop
jge
pop
je
pop
(bad)
(bad)
or
push
cmp
sub
cwde
cmps
test
inc
jecxz
cmc
mov
xlat
fdivr
or
sbb
popf
loopne
mov
xchg
dec
inc
lods
xchg
and
aam
fistp
js
jmp
push
cmp
lea
(bad)
fwait
mov
lahf
inc
loope
sbb
repnz
lock
int3
test
arpl
loope
jge
or
adc
dec
ss
ins
dec
mov
xchg
in
mov
aam
inc
jo
dec
int3
aad
mov
sbb
mov
shr
loopne
pop
fdiv
fs
jbe
cmp
iret
cdq
cld
retf
push
xchg
jl
mov
mov
or
push
in
inc
popf
push
shr
or
dec
inc
out
test
mov
(bad)
bound
fild
(bad)
jmp
jb
cmp
fimul
pusha
or
jo
jb
aaa
shr
loope
xchg
das
stos
add
int
cmp
pop
mov
mov
push
ds
inc
cli
sti
in
popf
outs
mov
stos
jnp
inc
fisttp
jge
mov
add
(bad)
xlat
lods
(bad)
sub
cmp
test
bound
jno
fmulp
aas
sahf
test
xchg
ror
mov
fild
cmp
or
xor
loopne
cmp
dec
int
neg
fisub
mov
and
call
faddp
jmp
sti
fcomp
std
lods
cmp
mov
push
inc
pop
into
and
sti
mov
lods
mov
and
cmp
cld
fidiv
cld
lahf
mov
fcomip
xor
jp
rol
push
fild
mov
leave
sub
cmp
mov
sbb
jns
cmp
or
pop
xor
push
cmps
push
jecxz
ret
inc
cli
out
test
add
mov
mov
cld
jne
adc
stos
gs
cli
or
mov
mov
dec
fadd
dec
lahf
hlt
int
cwde
stos
mov
rcl
test
jge
cli
xlat
sub
jge
pop
call
loop
push
pop
cld
ja
pop
dec
sub
das
dec
mov
fdivr
fild
xchg
jno
lahf
jae
addr16
inc
jge
pop
call
icebp
push
dec
mov
mov
int
jmp
add
rcl
cmp
(bad)
test
cmp
sbb
mov
ror
nop
test
je
or
jne
rol
xor
cmps
xchg
pop
lea
in
outs
cmc
inc
dec
idiv
inc
fnsave
popf
or
fidiv
mov
scas
lods
pusha
fs
inc
(bad)
in
outs
xor
ds
(bad)
xchg
in
rcr
jmp
fwait
sbb
imul
sbb
sbb
pushf
cmp
pop
push
repnz
jle
rol
jbe
ret
das
rcr
jp
push
inc
jo
sbb
fisttp
jg
push
popa
out
jmp
lods
xchg
sub
idiv
add
sub
cwde
cmp
scas
cmps
aaa
sbb
cdq
add
push
(bad)
aad
out
sbb
xchg
push
stos
pop
fs
fsub
sub
icebp
cmps
mov
cmp
and
inc
lods
sub
aaa
(bad)
dec
xor
sbb
fmul
pop
xor
inc
xchg
push
jg
jbe
(bad)
lds
or
sub
lock
mov
imul
mov
imul
xchg
and
xor
cdq
xor
dec
leave
pusha
jl
sub
add
ret
cmps
add
jae
pop
(bad)
push
out
adc
ds
xchg
enter
lea
addr16
aam
sub
adc
sbb
fimul
push
loopne
shl
mov
das
lods
sbb
into
add
pop
enter
mov
xchg
dec
jmp
loope
push
push
jp
xchg
lahf
and
cmp
push
sbb
test
repnz
ins
mov
pop
sbb
push
stos
push
sub
fisubr
idiv
xchg
jns
xor
xchg
cld
aas
shl
call
pop
jb
jecxz
loopne
adc
add
jnp
fucomi
mov
jne
sahf
sub
jo
aas
in
dec
inc
retf
push
push
push
repz
adc
std
cmp
dec
(bad)
jae
stos
jns
loop
adc
xor
adc
mov
pop
cs
push
or
jnp
xchg
jno
mov
jle
xlat
xchg
fiadd
xor
out
xor
icebp
inc
push
xchg
fld
(bad)
adc
out
aam
leave
in
sbb
je
(bad)
mov
fst
push
pop
(bad)
jecxz
fcmovne
sbb
xchg
popa
in
inc
adc
dec
inc
mov
popf
pop
ret
adc
sub
jb
pusha
jmp
dec
xchg
fisubr
and
test
fld
sbb
mov
add
dec
inc
cmp
pop
lahf
ins
push
in
add
scas
call
(bad)
icebp
dec
or
jecxz
push
scas
idiv
mov
push
scas
and
inc
(bad)
fiadd
add
and
jle
cmps
adc
inc
or
add
aad
lods
mov
ret
xor
dec
popa
jg
add
push
jge
fisubr
adc
dec
ja
ins
dec
xor
daa
js
push
mov
shl
sub
sub
imul
sub
mov
cmc
daa
mov
lahf
inc
jge
out
sub
push
xor
dec
mov
mov
fld
sub
sbb
pushf
push
sbb
int
adc
lock
je
jle
and
jns
push
inc
xchg
xor
cs
or
xor
ds
xchg
jns
sbb
dec
adc
mov
out
mov
iret
sub
fidiv
or
ficomp
cmp
xchg
call
cmc
jb
test
(bad)
scas
ficomp
add
dec
shl
cmp
jne
xchg
cli
aam
jnp
adc
jno
cdq
pop
mov
jae
dec
and
repnz
popa
lods
xor
xchg
imul
outs
pusha
pop
mov
or
mov
xchg
sbb
or
inc
fmul
dec
or
mov
repz
enter
fcmove
iret
psubusw
mov
push
pop
repz
pop
lahf
in
mov
cmps
out
addr16
lods
add
lock
cdq
aad
and
jg
sub
pop
pop
lds
jmp
jmp
in
mov
xchg
sub
cmps
sbb
jmp
push
cmp
int
cmp
icebp
stc
mov
les
cmc
pop
in
ss
pop
ret
sbb
inc
stos
test
arpl
leave
repz
or
(bad)
push
add
cmp
jl
pop
sbb
movs
jecxz
jno
aad
adc
movs
sbb
push
adc
sbb
jmp
mov
call
stos
inc
imul
cld
int3
mov
imul
xchg
adc
dec
add
loopne
xchg
sub
lods
jmp
ficomp
cmp
pop
adc
outs
call
stc
loope
jg
es
push
and
inc
xor
adc
movs
or
ror
data16
mov
(bad)
pop
xchg
jns
movs
movs
mov
inc
and
pusha
mov
lods
sbb
loope
and
arpl
xchg
push
push
jle
jle
lods
dec
sbb
pop
mov
mov
int3
aam
xor
fsub
xor
mov
jno
aaa
xchg
out
dec
xchg
sub
rcr
adc
mov
dec
jg
mov
mov
in
cmp
dec
add
cmps
lea
lea
lods
fbstp
mov
push
jl
jo
adc
ja
mov
stos
sbb
es
pop
cmp
(bad)
sbb
jp
sti
or
aad
and
dec
icebp
imul
or
adc
adc
push
pop
es
in
mov
addr16
retf
sub
xor
add
push
imul
pop
mov
jmp
lods
and
out
cwde
cli
test
loope
and
xor
pop
mov
or
push
dec
sub
imul
(bad)
nop
shr
mov
sub
add
test
xchg
aad
adc
cmp
aad
mov
xor
fwait
daa
mov
(bad)
imul
add
cmp
(bad)
jne
push
push
seto
mov
push
jmp
jmp
cmp
outs
adc
jnp
jle
mov
cmp
movs
push
jnp
xlat
scas
pop
lea
clc
xchg
sub
mov
jp
cmp
cmps
xor
mov
pop
loop
shr
sbb
fiadd
and
xor
in
mov
push
stc
outs
jp
push
pop
xlat
xor
add
fs
jecxz
cmp
inc
lds
pushf
(bad)
mov
aaa
test
add
add
std
mov
mov
sub
push
mov
pop
mov
adc
dec
mov
mov
in
cmp
inc
pop
clc
mov
daa
push
out
pop
push
nop
cmps
in
mov
mov
push
je
fs
add
(bad)
(bad)
stos
retf
mov
arpl
shl
sub
out
mov
nop
mov
dec
inc
add
jecxz
mov
inc
out
frstor
int3
(bad)
stos
jnp
jmp
fist
test
leave
fcom
test
xor
clc
and
xchg
push
inc
jg
in
add
loop
xchg
imul
in
in
rcr
les
in
int
fisttp
push
jge
clc
pop
xor
adc
dec
test
sub
adc
inc
stc
in
jmp
(bad)
push
ins
mov
shl
das
xchg
mov
aas
mov
sub
fist
push
jne
imul
dec
mov
inc
push
dec
jmp
mov
nop
(bad)
mov
jp
je
jl
ret
daa
sub
loope
pop
push
mov
adc
ja
fs
repz
or
shr
inc
fucom
ret
out
add
stos
je
inc
inc
push
data16
cmp
mov
movs
pop
add
cmc
arpl
xchg
jo
mov
mov
enter
(bad)
cmc
or
fwait
pushf
scas
mov
sub
mov
cmc
rcl
(bad)
aam
shr
fsubr
sahf
imul
or
inc
xor
push
arpl
mov
add
sub
cld
jo
das
mov
out
mov
pop
in
push
inc
mov
dec
stos
ja
fldcw
push
jns
(bad)
cli
xchg
js
addr16
dec
out
xchg
daa
les
sbb
(bad)
inc
sbb
jnp
iret
sub
cmp
and
lds
popf
xor
cmps
rcr
rol
lahf
sbb
std
iret
in
fist
ret
sar
cmp
and
push
data16
aaa
inc
inc
push
aam
repz
dec
aas
je
std
into
test
fadd
jb
repnz
sub
ret
or
ss
pop
jmp
fisttp
adc
xchg
cmp
push
test
push
sub
sub
int
aad
aam
fcomip
sbb
jle
imul
mov
mov
dec
ss
push
or
(bad)
fcomp
push
sub
dec
pushf
mov
cmp
sub
and
xor
scas
xor
daa
rol
sbb
out
test
(bad)
js
out
popa
jnp
adc
enter
xchg
xchg
dec
mov
into
dec
add
jmp
jl
fdiv
jae
dec
jae
jle
sbb
(bad)
out
jecxz
test
pop
or
mov
ss
xor
aaa
or
fcom
loope
out
fiadd
adc
lds
jne
loope
inc
mov
inc
mov
pop
push
idiv
push
cmp
sbb
jecxz
xor
sar
inc
add
pop
out
add
clc
dec
(bad)
leave
(bad)
lods
ret
ret
dec
outs
mov
rcr
mov
arpl
cwde
mov
and
das
idiv
rcl
mov
or
and
push
jl
dec
daa
xor
loope
rcl
add
fst
inc
das
ja
cmps
adc
xor
leave
dec
lods
fdivr
or
xor
cwde
sub
mov
loopne
cmp
iret
loopne
push
push
in
hlt
icebp
add
and
fadd
(bad)
mov
inc
jmp
jecxz
cld
mov
movs
jge
mov
iret
push
repnz
(bad)
cmp
fs
fnsave
in
daa
inc
lods
or
int
pushf
mov
cmp
dec
jge
sub
dec
int3
bound
add
cli
fidiv
fistp
inc
sbb
push
popf
ins
mov
mov
daa
pushf
sub
loope
inc
sbb
fnstcw
sub
sahf
cmp
add
aaa
lods
push
mov
mov
pop
push
fucomip
xchg
push
pusha
inc
enter
adc
aad
and
push
inc
push
fadd
fwait
test
mov
(bad)
mov
push
dec
sub
xchg
adc
sbb
mov
test
inc
and
je
jnp
stos
lock
add
pop
inc
mov
xchg
outs
jecxz
rcl
pop
icebp
movs
aam
xor
add
xchg
ins
mov
sbb
inc
push
xor
dec
dec
fndisi(8087
sti
xchg
(bad)
mov
sub
push
push
adc
or
scas
ss
nop
push
mov
mov
pop
push
aas
or
adc
fld
xchg
(bad)
ds
aad
mov
dec
fld
out
cmp
pop
jmp
nop
dec
mov
scas
or
push
test
dec
xchg
inc
and
sub
dec
(bad)
aas
into
xor
(bad)
pop
xchg
std
adc
into
xor
adc
add
cmps
retf
sbb
fs
push
shl
aaa
aas
jne
mov
and
call
and
aaa
or
sub
rcl
clc
shr
mov
data16
popf
pusha
sbb
test
xchg
(bad)
jmp
sbb
jb
enter
nop
dec
or
pop
and
mov
and
imul
dec
pop
mov
aas
dec
mov
sub
push
adc
pop
cmc
sti
ja
and
sbb
popf
rcr
cmps
lds
(bad)
sub
fdivr
sbb
dec
arpl
ins
or
push
loope
mov
push
add
sbb
sbb
sti
js
push
bnd
sti
lahf
xchg
rcl
cmp
push
ret
cmp
ds
shl
sbb
dec
or
imul
les
jecxz
mov
pop
jecxz
jne
mov
push
iret
inc
xor
xor
xor
je
outs
fistp
mov
jae
lods
inc
clc
push
fstp
movs
test
jle
pop
mov
addr16
xchg
jae
dec
mov
and
jne
mov
nop
push
mov
es
int
pop
adc
hlt
cmp
mov
scas
dec
jl
fwait
mov
cmps
repz
jge
aam
iret
mov
add
std
(bad)
push
adc
mov
adc
mov
add
call
cmp
dec
add
stos
out
clc
xchg
inc
push
shl
adc
mov
and
xor
fisub
sub
ins
push
loope
sbb
inc
add
rol
outs
jl
jecxz
dec
icebp
dec
aaa
out
stos
xor
les
sbb
std
mov
mov
aas
cmp
sub
dec
xor
pop
dec
imul
mov
cmps
cld
and
aaa
je
and
dec
sbb
mul
sub
push
loope
mov
jae
cmc
xor
shr
inc
ins
dec
out
xlat
xchg
out
in
imul
xchg
mov
in
push
mov
cmp
jl
aaa
cld
inc
sbb
icebp
lods
mov
pop
push
sar
push
es
popf
loop
push
add
mov
movs
xor
jl
add
ins
mov
repnz
or
adc
dec
cmp
arpl
dec
xor
test
adc
out
xchg
xchg
dec
pop
cld
hlt
ins
mov
nop
cmps
cmp
pop
(bad)
sbb
mov
shl
xchg
stos
cmp
sti
jb
aam
mov
xor
cmp
leave
or
mov
gs
push
jecxz
ss
sub
sub
jmp
and
outs
mov
adc
adc
cmp
(bad)
in
out
ja
adc
movs
icebp
jge
adc
sub
fs
add
test
sub
call
or
ins
xchg
cli
dec
fstp
push
jo
fwait
int
mov
push
daa
int3
cmp
pop
adc
sub
call
stos
and
sub
out
ror
xor
cld
jp
sbb
scas
aam
in
dec
mov
lea
rcl
imul
outs
jecxz
xor
sub
jle
in
sbb
fwait
repz
cmp
jne
cmp
fisttp
inc
in
inc
xchg
and
push
scas
cmp
sub
fisub
add
push
xchg
pop
lods
clc
int3
out
mov
mov
pusha
dec
xchg
repnz
pop
mov
jo
cli
jmp
mov
push
add
into
(bad)
push
pop
cmps
jp
xchg
push
cmp
add
push
or
leave
and
pop
and
jo
add
outs
push
das
addr16
arpl
jp
f2xm1
mov
jl
push
dec
xchg
mov
popf
inc
(bad)
loopne
sub
mov
addr16
inc
inc
neg
lahf
sbb
dec
mov
mov
cmps
dec
jo
mov
cmp
xor
add
icebp
or
arpl
aaa
je
cmps
jne
fdivr
ins
jae
inc
xor
shl
fwait
es
jne
xchg
pop
cmp
xlat
popf
aam
jno
(bad)
jae
inc
retf
movs
imul
std
mov
in
lods
cmps
inc
sub
or
push
ret
fld
das
(bad)
or
js
std
sbb
daa
jp
mov
push
push
and
pop
jmp
jmp
iret
stos
int
push
dec
or
jnp
mov
adc
int3
iret
mov
retf
xchg
adc
aam
fwait
add
push
mov
jae
enter
pop
jno
jbe
xchg
xchg
pop
movs
dec
ins
mov
cmc
outs
iret
fcomp
sub
mov
adc
pop
and
pop
xchg
shl
mov
aad
sub
cmp
lods
mov
js
pop
je
xchg
cmc
in
fdivr
loop
pushf
lods
sbb
test
jne
mov
enter
pop
sub
or
loop
or
pusha
aaa
hlt
sbb
or
mov
xchg
inc
or
add
mov
jmp
add
pop
fcomp
mov
ror
xchg
sub
xchg
popf
inc
jp
sbb
push
pop
retf
and
gs
mov
xchg
loop
outs
inc
xor
test
inc
or
push
adc
dec
adc
sbb
mov
movs
xor
push
jmp
mov
or
cdq
test
arpl
sub
cmp
xchg
inc
xor
push
movs
jns
pushf
addr16
out
xlat
pop
nop
mov
loopne
xor
loop
pop
gs
imul
retf
out
arpl
xor
test
sahf
jns
pop
movs
add
sub
and
xchg
xchg
fild
pop
pusha
jle
ret
mov
pop
mov
test
fistp
sub
loopne
ss
xor
scas
inc
and
shl
enter
and
ror
cmc
cs
(bad)
xchg
inc
push
pop
pop
imul
in
or
mov
dec
mov
push
test
out
fs
jmp
ret
mov
mov
mov
shl
lds
loop
pop
or
pop
add
pop
movs
pop
fldenv
clc
cmp
xchg
test
stc
aas
push
retf
sub
pusha
hlt
js
push
lock
(bad)
xor
xor
pop
sbb
pop
pop
call
mov
es
mov
scas
cmp
loop
test
repz
sar
add
ret
pop
or
push
in
xchg
xchg
mov
jno
(bad)
aaa
dec
loop
inc
arpl
xor
in
out
mov
add
outs
add
pop
xor
push
fsubr
jnp
jmp
push
int
mov
loopne
jnp
out
test
sbb
adc
rcl
push
das
out
ja
push
push
cld
jg
mov
nop
mov
pop
shl
inc
adc
mov
xchg
mov
fs
xor
lock
xor
test
loop
or
adc
xchg
xor
mov
popf
out
mov
jae
stc
popa
xchg
or
data16
fld
dec
(bad)
cmp
cdq
icebp
mov
repnz
xchg
ret
sbb
push
and
in
pop
scas
mov
add
jb
cmps
xchg
mov
xchg
xor
ret
mov
and
ret
mov
push
cmp
pop
or
imul
jmp
add
imul
xlat
bound
ror
icebp
push
test
cld
sub
ins
nop
das
mov
mov
pop
xchg
jle
pop
(bad)
adc
cmps
sar
pushf
inc
cmp
adc
mov
pushf
fdivp
dec
gs
shl
test
retf
push
inc
scas
mov
repz
pop
cmp
sti
add
scas
inc
(bad)
mov
xor
inc
cmp
cmp
es
popf
aam
adc
xor
cmp
(bad)
sub
and
popf
pushf
mov
sti
and
sbb
xchg
aad
add
dec
inc
xor
sub
and
dec
inc
mov
xor
pop
xchg
jne
inc
add
xchg
scas
pop
xor
push
stos
and
(bad)
lahf
test
xchg
shr
in
fisttp
aaa
cmp
jp
sar
in
lds
ins
add
ficom
mov
dec
inc
jo
rcl
adc
inc
and
scas
dec
das
xor
jle
cmp
cld
popf
jns
in
scas
mov
cmp
pop
and
adc
jmp
fsubr
(bad)
ins
lods
stos
out
sbb
inc
sbb
push
aam
frstor
test
jge
mov
push
xor
dec
mov
push
jmp
and
in
sti
std
not
fs
add
daa
xchg
jecxz
or
mov
jb
mov
mov
sbb
idiv
lock
mov
xor
jge
xchg
fstp
repnz
pop
bound
mov
add
and
pop
mov
mov
xor
dec
(bad)
out
xchg
add
mov
int
sahf
les
(bad)
pop
jns
jle
js
rcr
sub
cmp
jmp
mov
dec
dec
mov
fs
xchg
sbb
sub
lods
test
cmp
shl
int3
movs
pop
call
sti
push
cwde
cs
es
fcomp
iret
xchg
push
in
rcr
push
rcr
aam
call
inc
rcr
sub
dec
pop
fwait
pop
imul
mov
rol
pop
dec
sahf
in
aas
push
hlt
jecxz
(bad)
out
pop
fnsave
ror
cmp
ins
xor
inc
mov
pop
in
inc
cmpxchg
jl
jge
cmps
les
lods
mov
aad
dec
outs
inc
mov
scas
retf
jae
push
mov
push
gs
loope
cmp
pop
or
cmp
inc
aad
adc
xchg
lods
mov
mov
rol
xchg
outs
push
cmps
pop
mov
pushf
xor
cmp
int
fidivr
sbb
in
and
xor
push
mov
idiv
mov
pop
daa
sub
ret
xchg
and
rcl
(bad)
or
xlat
lods
pop
mov
cmp
jnp
in
scas
mov
sbb
mov
std
or
cmps
jnp
sbb
shl
rcr
aas
mov
out
loop
dec
shl
dec
jmp
ins
dec
fdivr
iret
mov
mov
ficom
imul
pop
mov
inc
cmp
cmp
or
(bad)
push
scas
es
jg
push
fdiv
lahf
mov
mov
scas
cmp
dec
pop
mov
ins
hlt
sbb
and
pop
or
inc
lods
into
lods
popa
iret
mov
pop
add
adc
adc
pop
jne
sar
loope
sub
adc
imul
lock
rcr
mov
mov
sti
(bad)
test
adc
jmp
mov
xchg
fcmovu
inc
sbb
inc
test
inc
xlat
pop
adc
fild
leave
test
or
mov
hlt
sbb
pop
xor
sahf
loope
aad
cwde
inc
push
mov
push
inc
cmps
adc
arpl
mov
cmps
xchg
cmp
dec
arpl
(bad)
lods
loopne
sahf
dec
sbb
leave
dec
jmp
xor
aaa
push
push
mov
push
sbb
jp
adc
test
mov
jno
push
test
(bad)
fs
inc
inc
pop
push
jns
mov
sbb
mov
dec
lahf
cmp
or
jnp
pusha
cs
ror
aaa
fbstp
out
mov
adc
adc
jne
push
push
repnz
cs
and
jno
jo
fisttp
jg
hlt
outs
shr
cmp
inc
sub
retf
jecxz
rdpmc
sbb
sbb
add
pop
mov
push
(bad)
sbb
jg
aaa
outs
cmp
adc
push
hlt
mov
dec
loope
inc
icebp
pusha
mov
imul
aad
pop
add
leave
pop
je
aas
xor
mov
dec
neg
or
xlat
and
inc
shl
popf
or
jmp
xchg
mov
dec
sbb
je
sub
sub
xchg
dec
cmp
mov
ss
stos
adc
pop
dec
dec
scas
repnz
lods
mov
push
shl
fs
pop
(bad)
push
inc
pop
xchg
sbb
jo
sub
fisttp
mov
dec
pop
in
jb
outs
iret
push
jp
pop
pop
cs
and
call
push
(bad)
imul
xchg
mov
ret
jbe
pusha
pcmpeqw
aad
cmps
into
popf
mov
xchg
and
pop
lods
test
pop
inc
fidivr
fmul
sub
iret
sbb
mov
enter
ss
aad
mov
jno
add
add
(bad)
aam
inc
movs
rcl
(bad)
retf
push
inc
sub
jge
and
adc
pushf
jae
xchg
push
fdiv
jle
mov
test
inc
inc
das
dec
mov
jb
push
gs
pop
ds
(bad)
xor
test
adc
mov
pop
mov
adc
xchg
mov
mov
aad
adc
mov
inc
add
aam
mov
xor
loop
jo
or
adc
sbb
iret
out
xchg
sbb
xor
mov
or
and
(bad)
aad
jo
pop
(bad)
out
jns
or
sahf
call
lahf
mov
sbb
pop
(bad)
rep
fprem1
not
lds
fwait
xchg
adc
enter
shr
jo
cmc
xor
mov
inc
sbb
add
retf
xor
jg
xchg
mov
mov
xchg
mov
in
xchg
or
call
mov
jns
inc
(bad)
jmp
and
pop
ja
xchg
aam
stc
(bad)
dec
push
pusha
mov
cmp
ins
mov
gs
in
dec
sti
mov
cwde
js
lods
adc
sub
scas
or
xchg
outs
das
psllw
xor
jl
pop
xor
out
cmp
clc
mov
aas
imul
sbb
inc
lods
cmp
mov
pusha
scas
adc
mov
fs
out
ins
shr
lods
stc
pop
sub
push
dec
scas
mov
adc
sub
xchg
mov
push
das
neg
sbb
imul
mov
pop
jl
or
ja
adc
js
fsubr
inc
add
dec
dec
mov
cld
aas
(bad)
inc
sbb
push
inc
dec
jecxz
mov
jnp
cs
pop
aad
fidiv
xor
sbb
cdq
xchg
sub
lods
jp
jns
adc
push
xchg
xchg
or
or
mov
fisttp
add
mov
addr16
cmp
in
pop
std
jmp
dec
lea
sub
jge
pop
ins
nop
enter
add
leave
xchg
pusha
mov
xchg
js
mov
scas
push
imul
in
scas
mov
jnp
movs
outs
adc
pop
add
in
sbb
mov
pop
mov
xor
into
xor
scas
push
test
pop
push
js
ret
scas
or
mov
push
mov
mul
outs
out
punpcklwd
xchg
push
scas
loopne
popf
push
repz
inc
jg
test
sar
out
xchg
dec
mov
div
ins
jg
fist
jg
mov
retf
adc
rcl
popa
push
pop
pmaddwd
in
mov
jmp
movaps
nop
xlat
lea
fisttp
lds
jae
mov
and
cmp
push
fsubr
mov
inc
cmp
(bad)
adc
mov
sbb
or
inc
pop
add
mov
fistp
outs
dec
imul
add
cmp
inc
scas
push
mov
adc
mov
int
mov
adc
jp
or
and
in
sbb
inc
jl
ret
xchg
mov
dec
shl
mov
dec
push
or
cmp
sbb
push
mov
mov
sub
ret
test
retf
push
ret
int3
out
sahf
sti
iret
retf
adc
ins
jae
adc
rcr
dec
std
jb
jle
jge
pop
pop
cli
clc
inc
mov
repz
adc
mov
cmps
mov
add
cwde
or
jmp
adc
xor
pop
mov
fild
inc
jg
sbb
jno
in
out
cdq
out
sbb
push
xor
nop
les
adc
mov
inc
lock
push
lea
call
lods
pop
inc
cmp
sub
adc
adc
sahf
jo
inc
dec
jmp
sbb
fucomi
cli
mov
ss
xlat
pop
call
mov
sub
fmul
out
xchg
mov
pop
lock
pop
push
test
mov
mov
fwait
inc
mul
loop
div
jnp
adc
test
rcr
dec
movs
fmul
jns
outs
add
fidiv
leave
lea
inc
cld
add
inc
dec
cmps
cmp
push
sbb
pop
pop
mov
add
sub
or
ja
imul
pop
mov
fs
dec
add
push
out
mov
xor
int3
sub
xor
jae
push
dec
dec
push
xor
imul
jno
lds
out
and
paddw
fst
xor
mov
inc
xor
push
mov
sbb
jmp
fidivr
mov
or
jge
add
daa
je
(bad)
ret
sub
out
out
push
(bad)
enter
scas
push
addr16
pushf
or
mov
aam
shl
and
and
gs
mov
jge
dec
xor
mov
icebp
jp
mov
fcom
lods
aas
xchg
pop
mov
rol
add
adc
jae
imul
jnp
inc
mov
enter
lahf
mov
stc
imul
add
xchg
adc
add
cld
mov
xchg
push
out
mov
mov
icebp
xor
ins
(bad)
cmps
mov
enter
or
cmp
test
mov
cmp
cmps
dec
arpl
xchg
les
mov
bound
jnp
popa
ss
xchg
dec
loop
push
cs
sbb
lock
mov
out
jge
sar
aaa
rcr
aas
mov
inc
add
(bad)
ins
cld
lock
in
jp
pop
mov
int
push
fwait
jg
mov
add
push
or
inc
cmps
jbe
shr
sti
mov
lds
xor
xor
cmps
retf
and
adc
in
jmp
cmp
jg
fld
test
jge
ror
sahf
or
mov
inc
imul
jnp
adc
faddp
leave
test
popf
outs
out
fadd
mov
jl
xchg
cmp
pushf
xchg
mov
xchg
pop
and
sbb
pop
add
aad
jo
xlat
mov
sbb
out
dec
xchg
mov
adc
push
cmp
add
mov
cmp
dec
sub
cmps
jmp
push
(bad)
iret
adc
stc
or
add
(bad)
out
stc
jg
ins
push
fwait
pushf
sub
push
jno
dec
mov
xchg
xor
push
mov
add
popa
xor
cmp
sub
push
icebp
inc
pop
xchg
js
dec
or
mov
xor
outs
outs
das
cmp
inc
xor
(bad)
test
loope
arpl
pop
mov
pop
sub
push
and
leave
pop
(bad)
retf
xor
mov
xchg
bound
in
je
jmp
pop
pop
repnz
ds
push
or
pop
test
(bad)
dec
push
jbe
bound
outs
bnd
in
mov
mov
stos
push
fcmovne
sub
pop
idiv
and
dec
pop
imul
and
sub
mov
cli
add
das
test
jo
adc
gs
fcmovne
adc
push
sub
cmp
fwait
push
add
outs
and
xchg
nop
jno
inc
mov
and
or
sbb
das
gs
xor
inc
dec
(bad)
rol
xor
push
je
xchg
cmps
adc
mov
popf
scas
sub
cdq
pop
std
(bad)
sbb
sahf
sub
test
pop
jnp
xchg
add
mov
imul
outs
and
out
fnsave
sub
mov
dec
popf
js
outs
add
push
loop
adc
sbb
xor
xlat
and
inc
jmp
sbb
loopne
or
xchg
pop
fcom
and
mov
pop
ja
es
cmps
mov
add
mov
mov
into
outs
paddusb
jp
jl
ds
ret
adc
mov
ds
(bad)
fidivr
jl
dec
jno
cmp
xchg
test
inc
push
repnz
add
outs
pushf
jnp
fild
mov
sub
dec
das
popf
mov
ret
sbb
xchg
(bad)
in
cmp
in
sub
adc
cmp
arpl
mov
inc
inc
mov
add
stos
inc
add
xchg
cwde
loopne
test
dec
cmp
mov
push
lea
stos
sbb
mov
mov
test
sar
xchg
pop
mov
and
fneni(8087
lock
test
rcl
je
pop
das
pop
shr
pusha
popa
inc
dec
inc
pop
test
stc
(bad)
and
jns
cli
jg
nop
dec
jge
or
cmps
ins
int3
xchg
jne
or
xchg
rol
imul
sub
sub
jge
cs
imul
mov
retf
es
and
ins
repnz
aad
pushf
dec
aad
aam
adc
sub
out
adc
cmps
(bad)
in
fucomp
dec
(bad)
lock
or
sbb
test
repnz
cmp
ins
nop
push
cmp
call
fwait
or
xor
shr
(bad)
xlat
push
mov
push
jb
xchg
cmp
pop
inc
add
sahf
mov
cmp
test
mov
push
push
out
clc
mov
sbb
xchg
mov
cld
add
sbb
jae
sbb
mov
push
add
out
fmul
cmp
mov
or
jmp
aas
les
xchg
jns
sbb
mov
jg
or
cli
out
clc
data16
popw
jne
daa
clc
das
push
jl
inc
add
pop
sbb
outs
adc
mov
xchg
pop
pop
enter
mov
and
or
test
dec
fsub
mov
cmps
fnstcw
sbb
inc
lods
push
and
cld
or
retf
popf
call
in
shl
lods
mov
xchg
mov
pop
ins
jecxz
leave
call
outs
jmp
repnz
jb
popf
inc
xchg
lds
push
and
lahf
enter
lods
sub
call
lea
test
sub
mov
xchg
push
fsubr
mov
add
ss
pushf
add
mov
out
push
jnp
push
sbb
sub
mov
imul
mov
jne
inc
and
jo
mov
shl
jnp
sub
mov
std
jae
ficomp
test
cs
pop
dec
cmp
add
mov
and
inc
aad
and
mov
ins
gs
imul
das
test
scas
pusha
pushf
xchg
cmp
xor
scas
fisub
add
pop
std
inc
scas
hlt
jg
adc
or
mov
aas
pop
adc
push
pop
in
add
xor
or
int3
xor
aam
rcr
jo
std
int
sub
cmp
push
scas
cdq
shl
rcr
cmps
mov
mov
pop
pop
test
mov
xor
cmp
sub
mov
fs
fild
fsub
mov
je
mov
inc
adc
scas
fcom
(bad)
fidiv
jb
jl
rol
adc
imul
inc
mov
rol
xchg
popf
push
call
adc
adc
imul
dec
xchg
cmc
pop
push
fnsave
out
mov
das
retf
jns
stc
and
fnstenv
lea
test
leave
sahf
enter
leave
dec
loop
add
dec
add
es
fs
add
xor
enter
sti
(bad)
mul
mov
pop
pop
ja
dec
mov
test
sbb
xchg
mov
ss
loop
dec
sbb
sbb
data16
mov
(bad)
fsub
cmp
inc
dec
(bad)
addr16
(bad)
(bad)
adc
sub
pop
stos
movs
stos
lds
add
inc
xchg
icebp
hlt
jmp
add
pusha
pop
cmc
pop
sahf
mov
xchg
push
sti
dec
sub
sub
mov
jle
icebp
pop
mov
enter
add
cs
nop
aad
jne
sbb
push
jb
out
xchg
jl
or
xor
paddusb
inc
(bad)
fsub
sub
icebp
or
jge
mov
push
xor
jae
jb
fnstenv
repnz
das
inc
or
mov
mov
outs
lds
jmp
or
cld
loope
sbb
rcl
add
pop
mov
mov
bswap
add
cmp
frstor
push
xlat
popf
lods
jl
mov
push
cmps
cmps
add
pop
hlt
pop
mov
push
dec
cmc
mov
cmp
mov
pop
mov
lock
and
aaa
hlt
lods
fisub
cmp
adc
add
pop
sahf
push
jbe
mov
es
(bad)
call
ret
out
shl
pop
and
sub
xlat
adc
sub
xlat
es
push
(bad)
ficomp
cdq
xor
in
push
js
stos
push
fidivr
sbb
mov
mov
or
lahf
call
movs
stc
xchg
push
cmp
in
cmp
mov
ja
push
fstp
and
sbb
js
xor
sbb
ds
or
xchg
mov
push
pushf
xor
jo
pop
xchg
daa
(bad)
arpl
das
iret
mov
(bad)
xchg
adc
ret
ret
stos
cmps
ja
and
xlat
fisubr
mov
lds
test
and
dec
fsub
ss
jne
ret
xor
call
pop
xor
pop
sbb
push
dec
nop
mov
outs
cmp
cmc
pop
sub
(bad)
push
mov
movs
sbb
ins
sub
aam
cs
cmp
add
jmp
inc
push
jg
sub
imul
mov
inc
(bad)
es
dec
xlat
inc
push
mov
cmc
call
jno
scas
adc
and
or
(bad)
ds
hlt
loopne
vmovhpd
push
movs
adc
and
jp
push
mov
lds
dec
data16
sub
and
pop
ins
shl
jp
pop
push
mov
and
mov
pusha
rol
stc
mov
js
and
int
sbb
inc
inc
cwde
dec
push
aaa
test
push
in
mov
enter
sar
or
xchg
inc
mov
or
fwait
jge
mov
mov
gs
xchg
(bad)
xchg
inc
add
enter
fsubr
in
mov
lea
push
dec
scas
pop
ins
cld
aaa
pusha
or
add
inc
mov
pop
in
mov
add
js
arpl
jne
(bad)
jle
sbb
xlat
jecxz
mov
lods
inc
data16
loopne
out
adc
or
lahf
ret
jno
mov
std
pusha
fs
mov
dec
je
popa
cmc
sahf
loope
inc
out
arpl
pop
aad
and
jnp
dec
jl
mov
sub
inc
and
mov
xor
xor
movs
xchg
ins
cmp
jp
add
add
push
inc
iret
outs
int
xchg
adc
rol
and
mov
cld
jmp
hlt
cmps
jnp
cld
cs
bound
jae
imul
mov
mov
fsub
jns
clc
mov
mov
add
mov
cmc
cld
cwde
repnz
xchg
adc
nop
outs
pop
jl
push
mov
test
ret
jmp
pop
sbb
xor
inc
movs
push
test
lods
mov
add
xor
leave
jb
stos
dec
pop
or
test
in
test
(bad)
loope
cmp
int
add
dec
jge
rol
data16
fisubr
and
pushf
fistp
pop
cmp
dec
(bad)
into
int
mov
push
lods
dec
popa
ins
jns
add
daa
outs
jnp
out
std
sub
mov
ror
cmp
outs
shl
mov
push
inc
cs
gs
dec
data16
out
sar
jno
sub
mov
stos
add
leave
mov
out
lahf
stos
mov
sub
cmp
and
pop
fcmovnb
and
dec
jne
mov
pop
jbe
jne
rol
sub
or
test
mov
mov
and
fdivr
cdq
enter
cli
push
dec
mov
call
(bad)
xchg
or
push
pop
out
push
out
dec
xchg
sti
mov
pop
push
mov
out
mul
dec
sahf
or
ror
jno
inc
pop
nop
ss
retf
(bad)
das
and
cmps
gs
mov
mov
cmp
out
inc
fiadd
sahf
js
push
retf
jmp
fsubr
(bad)
and
cmp
(bad)
lahf
pop
dec
mov
jp
push
sub
pop
lahf
ficom
jne
cli
je
cdq
fdiv
push
mov
sub
and
daa
sbb
cmp
or
cmps
stos
inc
sub
ja
cmps
pushf
int
mov
xor
sub
loop
lahf
adc
in
into
cmps
sub
(bad)
pop
not
out
push
xchg
push
les
ret
cwde
mov
cli
jecxz
or
push
sub
mov
sahf
pop
call
aad
mov
adc
add
xor
mov
sub
dec
pop
shl
stos
mov
add
cmp
ins
ins
ret
loop
ja
jl
ins
call
mov
out
lods
retf
rol
add
(bad)
lahf
les
out
popa
pop
addr16
enter
leave
mov
xchg
mov
push
or
xchg
pop
push
pushf
or
fst
sbb
ds
outs
rcl
mov
rcr
mov
fidiv
leave
sub
add
lods
loopne
ret
xchg
sub
aaa
int
dec
dec
stc
jl
xchg
cdq
out
or
arpl
push
mov
(bad)
(bad)
jp
repz
push
dec
std
sbb
sbb
sti
cmps
hlt
cmp
adc
and
pop
mov
test
mov
ficom
aad
fwait
rol
mov
adc
ja
dec
push
scas
(bad)
into
in
jp
cmp
add
mov
sbb
out
jb
ja
jno
pop
mov
add
ss
loop
(bad)
jp
jmp
in
ret
jns
mov
inc
add
pop
push
jge
cmp
adc
sbb
pushf
shl
jle
sub
(bad)
xor
jmp
rcr
(bad)
cmp
and
pop
int
rcr
add
loopne
lock
jbe
test
pop
aas
sti
ret
in
dec
jg
fiadd
xchg
sbb
xchg
push
inc
jae
stos
mov
(bad)
jno
test
jmp
mov
repz
ret
sbb
fdiv
mov
mov
inc
add
sub
sub
in
jmp
icebp
xsha1
cmps
int
imul
leave
or
retf
movs
dec
out
pop
fwait
call
clc
daa
jnp
jo
pusha
add
or
stos
out
dec
jns
adc
or
and
mov
out
mov
dec
int3
mov
pop
pop
and
cmp
lds
(bad)
jle
mov
(bad)
fcmovb
iret
shl
xor
sbb
into
test
in
jno
daa
add
mov
add
xchg
or
push
mov
dec
or
jge
mov
ret
pop
xchg
out
push
mov
jmp
xchg
jmp
adc
mov
xchg
jge
cmp
int3
rol
jo
inc
push
add
add
xchg
mov
mov
pop
fdivr
ret
cwde
ds
dec
scas
mov
mov
cmp
test
push
lods
fs
fabs
mov
add
lock
mov
dec
pop
sar
inc
jmp
aaa
addr16
ja
push
jecxz
push
outs
xchg
sbb
or
add
(bad)
neg
xchg
int3
mov
mov
mov
inc
mov
and
push
dec
push
pop
mov
ss
push
and
mov
xor
pop
aaa
adc
xchg
adc
sahf
rol
or
push
and
dec
ins
xchg
popf
hlt
mov
mov
jae
jg
jmp
mov
scas
push
push
call
or
cs
out
(bad)
or
gs
inc
pop
add
adc
sub
mov
sbb
mov
add
or
sub
(bad)
adc
arpl
fld
and
mov
xor
std
shl
lahf
test
push
and
gs
xor
mov
mov
inc
out
mov
pop
adc
or
into
fstp
stos
outs
jp
inc
jmp
jg
or
and
xchg
add
fst
nop
cwde
in
cmps
push
sar
iret
xchg
mov
inc
xchg
ss
and
popf
xor
jno
bound
pop
sub
rcl
mov
mov
mov
dec
div
mov
inc
mov
xor
push
jl
cmps
pop
xor
xchg
lock
(bad)
mov
std
pop
shr
push
push
xchg
sbb
aaa
pop
jl
or
mov
inc
ss
xchg
mov
mov
push
xor
lods
mov
pusha
mov
mov
into
push
fwait
(bad)
movs
xchg
jae
xchg
lock
int
mov
fmul
jne
test
sbb
lds
repz
jmp
pop
test
lods
push
stos
sub
jmp
fisub
or
xor
cmps
dec
dec
movs
mov
lock
cs
mov
xchg
out
imul
mov
xor
xchg
jecxz
push
xchg
loope
cmp
retf
sbb
ss
mov
outs
repnz
out
jae
ins
pusha
add
aam
adc
dec
dec
cmp
and
scas
pop
inc
xor
dec
int
mov
sbb
xchg
shl
mov
bound
add
ins
ins
mov
movs
fwait
mov
in
in
sbb
mov
call
pop
les
add
fsubr
xor
nop
int3
cmp
sbb
daa
cmp
cmp
cmp
stc
fcmovnbe
mov
push
mov
in
xchg
inc
mov
sub
retf
pop
adc
add
es
add
jge
in
sub
sub
je
add
xor
rep
adc
aas
retf
ret
daa
cmp
cwde
xchg
jo
test
sub
or
and
lds
dec
push
popf
jne
shl
xchg
inc
mov
ret
cmp
mov
push
push
ds
push
ins
stc
call
mov
jg
addr16
jns
sahf
stc
daa
ret
pushf
or
leave
enter
jne
sbb
xchg
ja
(bad)
sti
test
aas
cmp
dec
mov
bnd
lahf
leave
add
into
arpl
pushf
push
aad
pop
cdq
xor
addr16
cmc
lods
mov
outs
sbb
or
jl
mov
ss
mov
pop
leave
jge
ficomp
and
xchg
aam
nop
dec
mov
fcom
adc
call
adc
sbb
push
and
cmp
cmps
shl
adc
test
or
mov
adc
and
pop
ret
call
aaa
and
shr
pop
push
jae
mov
outs
inc
xor
inc
add
mov
repnz
and
push
lods
xor
cmps
ret
sbb
ins
pop
xlat
retf
and
jp
push
mov
test
scas
aam
scas
retf
sti
(bad)
mov
pop
ins
aam
xchg
xchg
and
rcl
mov
mov
fst
jp
icebp
movs
stos
add
cdq
retf
pop
inc
push
scas
ficom
pop
push
fwait
cmp
sub
call
sbb
jp
in
add
push
and
or
dec
and
(bad)
add
js
push
xor
sar
out
cmp
xchg
popf
popf
xor
aad
adc
dec
mov
jb
adc
push
inc
push
jbe
dec
jle
push
es
aaa
dec
or
adc
dec
mov
cli
jo
add
add
adc
mov
push
stc
xor
xor
lods
shl
lods
pop
cmps
jne
and
jg
push
jg
imul
mov
cmps
test
fdivrp
push
pop
ss
push
xchg
sub
std
js
test
stos
fidivr
aad
out
fcom
adc
lods
and
xor
outs
inc
add
ror
call
in
jle
adc
retf
xchg
push
fldenv
sub
fsubr
inc
inc
pop
xor
es
mov
mov
xchg
mov
lock
pop
sub
or
sbb
es
mov
push
push
aam
in
mov
mov
jae
test
push
aad
daa
int
mov
ror
into
or
mov
jae
shl
ins
call
xor
and
dec
cmp
pop
(bad)
cmp
test
stc
and
cmp
retf
and
sbb
jl
sbb
(bad)
scas
jge
or
and
inc
and
mov
stos
add
adc
stos
xchg
push
retf
jmp
popf
fsubr
rol
addr16
inc
inc
adc
bound
ds
scas
push
nop
pop
repz
mov
mov
sbb
sahf
nop
inc
ss
pop
mov
sub
dec
(bad)
adc
fsub
leave
(bad)
outs
stos
and
cmp
int
jge
pop
shr
cwde
mov
adc
xor
and
mov
sbb
cmp
cmp
xchg
xor
fucomp
mov
add
adc
mov
or
mov
leave
inc
push
inc
and
inc
ins
jbe
sbb
cmp
dec
(bad)
jle
je
sar
outs
ss
cmc
and
sahf
mov
dec
pusha
xor
retfw
push
sub
stos
mov
sub
pop
out
mov
inc
(bad)
ins
push
loopne
dec
cli
adc
xchg
or
and
retf
icebp
ret
les
outs
call
into
jge
jne
mov
jecxz
lods
sub
outs
ficom
lods
push
adc
sbb
scas
add
mov
push
jbe
push
movs
inc
lods
jno
mov
push
or
ins
mov
gs
dec
fistp
retf
(bad)
add
push
les
stos
sbb
push
sub
pop
pop
data16
retf
jbe
xchg
mov
push
data16
pop
test
mov
in
push
aaa
jmp
fsub
jle
out
xor
push
mov
paddb
cmp
pop
or
jae
scas
shl
js
cmc
or
aad
push
mov
jmp
aad
add
add
sar
into
push
test
nop
add
pop
pop
(bad)
cmp
pop
ror
inc
test
mov
inc
fwait
cli
loop
bound
dec
xor
mov
xchg
sub
pop
adc
scas
adc
out
xchg
inc
or
xchg
pop
sbb
and
iret
cmp
inc
dec
pop
and
hlt
or
(bad)
and
ja
hlt
sub
hlt
pop
add
cmps
adc
lsl
mov
mov
ror
add
cmps
mov
sub
movs
(bad)
fst
sbb
mov
and
and
mov
shl
fmul
mov
repz
cmps
sbb
out
rcr
imul
adc
cs
mov
xor
lock
in
xor
push
xor
aam
(bad)
repnz
push
(bad)
lock
(bad)
fbstp
sub
gs
in
in
int3
xor
push
loop
scas
aam
add
push
aaa
add
and
ror
cwde
aam
loope
mov
pop
pop
add
jmp
mov
gs
stos
push
pop
shr
or
arpl
and
xor
dec
inc
daa
imul
and
iret
stos
cs
repnz
inc
ds
ror
sbb
cmp
icebp
(bad)
aas
out
xchg
jnp
outs
and
sbb
in
fs
loopne
shl
sahf
pushf
retf
mov
push
cmps
mov
add
jne
stos
xlat
fist
mov
pop
mov
lock
inc
dec
jge
aam
jp
push
inc
mov
(bad)
ins
out
nop
mov
fiadd
ret
mov
and
retf
inc
inc
ret
mov
lock
hlt
into
and
adc
icebp
inc
loop
in
jmp
scas
fs
jecxz
(bad)
lock
cmps
enter
mov
ror
retf
mov
cmc
pop
mov
push
or
ret
je
imul
add
jmp
jg
nop
mov
aam
mov
push
inc
sbb
iret
adc
mov
sbb
pop
shl
mov
push
mov
sub
scas
aaa
mov
xor
mov
lds
cmp
add
fstp
movs
mov
aaa
adc
lock
clc
ret
or
mov
xor
sub
or
mov
aas
int
xor
stc
daa
adc
mov
push
sti
cmc
mov
(bad)
add
fisubr
mov
jecxz
pusha
jns
rol
jns
xlat
in
push
add
adc
sahf
cli
das
fwait
mov
push
xor
cmp
and
loope
or
sub
stos
sbb
mov
rcl
push
jae
sub
adc
xchg
add
rcl
pop
pop
xor
dec
out
adc
ins
leave
ja
or
(bad)
outs
dec
lods
xchg
pop
mov
push
mov
mov
jge
jo
loop
imul
mov
scas
push
dec
or
pop
mov
adc
adc
sub
arpl
mov
push
mov
mov
iret
lock
dec
and
add
lea
neg
movs
ror
pop
mov
push
mov
add
xchg
jbe
enter
cli
jg
ins
pop
mov
push
mov
inc
cmp
pop
add
xor
push
jle
test
(bad)
pop
pop
add
into
les
lods
jb
cmp
loopne
push
xchg
retf
je
dec
add
js
(bad)
out
cmp
shl
hlt
xchg
xchg
inc
cmp
in
sub
ret
jo
(bad)
and
(bad)
je
mov
int3
ds
cmp
sbb
jno
cmp
imul
aad
push
retf
jle
push
jp
lahf
ficom
sub
jecxz
stos
rcr
out
mov
loop
jae
inc
out
into
lods
clc
jo
sbb
sub
adc
mov
out
pushf
rcr
(bad)
jbe
jae
mov
or
jl
add
adc
ins
push
mov
inc
jnp
retf
ret
mov
je
pop
add
push
and
imul
cld
push
xor
shl
stc
out
ins
jo
aas
push
adc
fadd
ins
outs
pop
jne
mov
cdq
cdq
inc
adc
outs
add
or
push
gs
inc
int
mov
push
cmp
outs
sub
adc
sar
jmp
loop
cmc
or
fucomp
outs
inc
cmp
mov
sbb
fwait
and
jb
bound
aaa
add
stc
xor
and
scas
push
cdq
and
and
or
push
cmp
sbb
push
dec
test
or
hlt
jl
mov
dec
and
fwait
mov
xor
and
gs
inc
jbe
dec
xor
nop
sbb
retf
idiv
or
ret
add
popa
dec
or
dec
cwde
aas
sub
out
sub
inc
push
inc
cdq
cmp
repnz
call
div
fst
(bad)
add
and
pop
lock
fdivr
shr
cmc
pop
mov
int3
xchg
je
jmp
inc
and
shr
push
and
iret
fcmovb
hlt
and
push
adc
les
cmp
xchg
push
xchg
mov
leave
xlat
pop
ret
sbb
stc
(bad)
xor
fsubr
fs
fs
ret
sub
sbb
outs
int
cs
es
dec
dec
xchg
sub
xchg
mov
jl
repz
push
scas
dec
xchg
mov
add
inc
mov
scas
retf
pop
gs
arpl
popa
das
out
cs
pop
xor
mov
jns
in
mov
aad
ds
lahf
mov
data16
dec
dec
inc
push
scas
fwait
jp
push
stos
data16
mov
je
push
fisttp
js
xor
cwde
add
inc
addr16
push
sbb
pop
mov
or
sub
dec
add
and
sbb
jns
or
pop
push
jne
imul
adc
das
ret
sbb
outs
in
les
cmp
stos
mov
in
iret
mov
pop
mov
fld
inc
dec
leave
xchg
or
mov
fwait
add
and
jmp
pop
xchg
mov
xchg
add
xor
jecxz
mov
jmp
dec
test
fisub
retf
cmp
jecxz
jb
out
loopne
daa
xchg
loope
test
mov
fidivr
xor
xchg
xchg
mov
lahf
shl
and
leave
sub
pop
jl
jg
jle
or
stos
mov
test
call
jno
pop
jge
ret
adc
out
jmp
stos
add
or
fstp
mov
xchg
lds
sub
inc
cwde
and
xchg
xor
mov
adc
shl
(bad)
repz
sbb
adc
xchg
es
ins
cs
clc
adc
into
aaa
mov
ins
pop
ds
stos
fdiv
xchg
adc
pop
sbb
push
js
jno
ds
sub
mov
leave
scas
jb
aas
mov
scas
mov
jecxz
xor
inc
xlat
(bad)
jmp
and
call
lock
xlat
into
(bad)
push
jecxz
mov
mov
adc
adc
push
fwait
xchg
out
popa
mov
cmps
xchg
xor
add
mov
cmp
das
dec
dec
fsub
push
je
jo
jb
sub
xchg
dec
mov
in
adc
xor
mov
aas
or
push
or
mov
(bad)
fdivr
cwde
cli
sbb
out
xor
call
gs
cmp
pop
mov
ds
dec
mov
(bad)
lahf
imul
or
loopne
xor
stc
jmp
sahf
mov
pop
xchg
mov
push
jge
inc
(bad)
push
(bad)
push
cld
sti
jbe
push
pop
sub
sbb
stos
scas
cmps
pusha
inc
sub
adc
popf
jmp
stc
or
not
mov
add
pop
ficomp
sbb
cmps
je
add
loop
fidiv
jb
push
not
adc
pop
xchg
jecxz
fidivr
in
mov
popf
push
xlat
pop
mov
fsubr
and
add
gs
xchg
xchg
(bad)
outs
es
sahf
scas
retf
mov
imul
fistp
ds
repnz
add
gs
xor
or
cmc
lods
in
add
lock
out
retf
cmc
test
mov
xor
fnsave
xchg
in
xor
iret
add
sbb
cmp
jmp
pop
fld
inc
scas
ror
fwait
shr
jecxz
fimul
shl
(bad)
imul
sub
add
cli
sbb
mov
cwde
jl
jecxz
retf
cmps
clc
ins
add
add
mov
sub
inc
and
xchg
int
(bad)
sub
out
(bad)
cli
xor
inc
and
xchg
movs
gs
jmp
fwait
pushf
aaa
pop
mov
jno
or
mov
out
gs
dec
addr16
pop
add
aam
xor
add
xor
adc
mov
mov
inc
dec
(bad)
out
dec
mov
mov
jp
add
mov
cmc
add
mov
arpl
dec
sub
jecxz
outs
lods
pop
sub
movs
and
retf
fdivr
(bad)
pop
ja
ss
cmp
mov
loope
dec
js
add
push
mov
or
sahf
addr16
cwde
stos
outs
mov
mov
dec
xor
mov
out
or
out
test
out
cmps
rcl
pop
dec
mov
dec
pushf
dec
fadd
pushf
in
jl
lahf
xchg
push
pushf
jecxz
ret
xchg
test
iret
pop
in
cmp
ins
adc
fadd
in
jle
mov
push
ror
mov
xchg
xchg
loop
mov
icebp
pop
imul
call
lods
cmp
ins
lahf
test
pop
out
mov
cmp
mov
fsub
mov
push
ficom
loope
jg
inc
mov
cmp
fdivr
push
das
cmp
ret
mov
scas
out
fstenv
mov
sbb
popa
and
cli
xchg
sbb
stos
shl
pop
test
ja
add
fist
pop
mov
cmp
mov
mov
or
push
ror
mov
es
xchg
mov
push
mov
stc
loopne
imul
add
jg
lock
mov
xchg
lahf
dec
(bad)
mov
mov
sbb
pop
cld
sub
xor
shr
mov
movs
lahf
and
xor
mov
je
pop
cwde
cwde
xchg
daa
add
loopne
push
cmp
(bad)
(bad)
int3
fsubr
adc
xor
push
int
and
lahf
cmp
inc
xor
aam
sub
into
inc
jmp
outs
popf
sub
dec
sbb
mov
inc
mov
shl
addr16
iret
rcl
movs
mov
mov
mov
aas
sar
les
cli
jge
stos
jecxz
mov
cmps
jns
jo
movs
out
push
push
mov
call
pop
je
mov
push
push
mov
add
adc
pusha
jl
cmp
sub
repz
loop
xor
sub
jbe
pop
sbb
mov
jmp
test
sbb
shr
pop
fbstp
jnp
test
xor
push
jmp
push
ret
bnd
jb
dec
sub
sahf
popf
mov
mov
add
jnp
(bad)
loop
in
sbb
out
mov
add
leave
aam
scas
gs
and
(bad)
or
test
push
mov
iret
or
xchg
ret
ins
cmp
inc
ja
xchg
nop
out
push
mov
dec
xchg
repnz
test
dec
(bad)
cmp
pop
aaa
or
popf
mov
pop
push
inc
pusha
cld
mov
inc
nop
test
push
imul
lea
xor
icebp
and
inc
mov
cmps
pusha
xchg
into
ins
xor
aas
sub
(bad)
mul
xchg
add
dec
fdivr
sub
icebp
add
arpl
cmp
xchg
mov
cmps
sub
sbb
ds
inc
ds
mov
data16
out
mov
xchg
dec
or
mov
pop
dec
inc
ins
xchg
xor
call
call
out
pop
shl
and
iret
imul
push
jne
mov
adc
je
loop
lods
ins
loop
daa
fbstp
xor
mov
jno
and
mov
pop
xchg
not
or
call
fld
sbb
push
sar
fldenv
dec
sbb
xor
cmove
scas
mov
jmp
jp
mov
push
(bad)
call
mov
in
adc
cmp
pop
int3
push
out
xchg
inc
je
pop
(bad)
adc
test
mov
xchg
mov
mov
sbb
loopne
mov
inc
adc
fbstp
mov
and
ins
sbb
mov
lahf
pop
push
sub
in
or
adc
and
gs
mov
cmp
or
sbb
add
call
nop
mov
push
dec
jns
stc
fimul
sar
in
or
push
mov
pop
sbb
xchg
mov
mov
out
(bad)
inc
ret
cmp
dec
push
gs
jmp
outs
pop
popa
dec
xchg
and
jns
bswap
jne
test
inc
out
pop
sub
and
cwde
repnz
jmp
xchg
sar
aad
push
mov
xchg
and
xchg
cs
pop
icebp
dec
jns
popf
call
(bad)
pop
(bad)
stos
push
jg
mov
cmps
pop
(bad)
cs
mov
xor
dec
mov
xchg
or
sub
adc
popa
add
mov
test
sbb
daa
xor
sub
and
scas
xor
int3
hlt
ret
std
mul
adc
lea
rol
mov
or
adc
xor
(bad)
mov
fcomp
rcr
xor
xchg
push
loope
sub
mov
and
pop
test
mov
fiadd
add
or
xchg
dec
outs
inc
pop
retf
adc
xchg
in
jbe
je
mov
sub
rol
add
popa
fmul
stc
inc
mov
iret
mov
lods
adc
xchg
cmp
nop
cli
jl
add
ins
mov
adc
arpl
inc
mov
stos
into
loope
xchg
inc
cmp
adc
or
push
jo
or
xor
ret
lahf
cwde
retf
pusha
cmps
fild
cmp
adc
xor
push
pop
cmc
jnp
outs
imul
cmps
daa
dec
lock
xor
cmp
and
inc
or
or
test
add
pop
cwde
xor
(bad)
sbb
mov
ret
jmp
push
pop
stc
in
aaa
mov
into
ins
push
xor
jl
and
cmp
push
mov
adc
lds
movs
mov
pushf
inc
adc
jo
mov
mov
lds
shl
and
cmc
and
xchg
lods
rcr
sub
cdq
mov
xchg
(bad)
idiv
mov
inc
das
shr
xchg
mov
xor
lds
mov
mov
xchg
rol
fcomp
outs
xor
xlat
cmps
or
sub
jmp
cmp
inc
sbb
ss
js
jns
sub
in
inc
jge
fnstenv
and
inc
mov
out
retf
add
aad
(bad)
arpl
sub
push
dec
and
push
jecxz
mov
js
mov
add
sbb
int
daa
jno
jnp
pop
and
xchg
sbb
mov
or
cmps
inc
sub
mov
sbb
cmp
cmp
rcl
aad
dec
add
jecxz
or
push
call
ja
add
inc
adc
sbb
leave
xor
adc
nop
sbb
xlat
movs
shr
push
sub
inc
xor
xchg
xchg
jg
sar
rcr
or
call
(bad)
aam
jns
hlt
shr
mov
pop
aaa
ret
xchg
fdivr
jge
fcmovnbe
or
cmp
std
jae
dec
aad
mov
push
mov
sbb
lock
xor
jae
imul
bound
mov
loope
fucomip
sbb
jno
mov
ret
cmp
mov
clc
push
ret
cwde
dec
or
pop
ss
sbb
neg
mov
pop
(bad)
sub
push
cwde
sub
cmp
jmp
mov
or
or
jmp
sbb
cmp
xor
inc
or
jbe
scas
mov
js
xor
ds
test
push
ss
(bad)
cmp
lock
sbb
sbb
sub
mov
push
xchg
ins
in
dec
(bad)
push
jg
sahf
jecxz
push
push
inc
(bad)
bound
pusha
sub
fild
pop
inc
cs
out
mov
sub
adc
xchg
sbb
imul
psubd
mov
pop
dec
ret
mov
jmp
fucomip
mov
cli
out
adc
xor
inc
repnz
inc
mov
scas
repnz
xor
inc
push
stc
fdiv
add
sbb
push
nop
aad
add
call
ret
enter
fist
cs
pop
jp
adc
rcl
adc
pop
sub
aaa
into
(bad)
xor
rol
sub
js
out
jg
out
mov
stos
int
call
pop
daa
push
fbld
cmp
cmp
sub
das
leave
dec
popa
inc
mov
scas
adc
je
sub
pushf
add
sahf
retf
add
pop
lods
cmp
dec
imul
outs
ror
sbb
pop
dec
out
mov
mov
inc
mov
test
ficomp
sub
idiv
or
(bad)
pop
gs
cwde
xor
push
mov
movs
sub
pop
sbb
add
neg
push
call
inc
and
retf
call
aas
jno
cmp
pop
xlat
add
aam
add
movs
dec
jl
pop
imul
adc
push
sub
mov
dec
sbb
ret
outs
add
mov
xchg
add
pop
jns
sbb
shr
xchg
call
pop
xor
loope
fsub
xchg
xchg
mov
sbb
jl
push
jb
adc
leave
mov
aas
add
xor
mov
sbb
retf
in
jo
aad
cmp
or
push
adc
nop
test
lahf
in
je
fwait
int3
int3
add
xchg
xchg
(bad)
push
inc
push
mov
cmp
stc
pop
cmp
out
(bad)
mov
mov
mov
pop
fs
push
mov
add
aaa
xlat
add
mov
cmc
test
xrstors
pop
sets
pop
xchg
xchg
mov
add
inc
mov
pop
dec
xchg
movs
fnstsw
inc
cmc
cmps
adc
mov
pop
in
sbb
adc
jle
test
mov
mov
fcom
push
nop
cmp
jge
(bad)
aaa
shl
adc
dec
sub
add
fucomip
mov
call
adc
outs
pop
je
or
xor
inc
outs
pop
jp
rcr
mov
cmp
mov
pop
pop
(bad)
movs
pop
pop
(bad)
in
pop
xlat
scas
cs
pop
mov
cdq
jnp
mov
in
lea
jg
add
ss
scas
mov
xlat
repnz
mov
jmp
cwde
xchg
and
mov
jns
push
cdq
mov
idiv
out
dec
pushf
fdiv
push
sbb
leave
loope
call
shl
and
jnp
repnz
and
mov
mov
movs
hlt
cmp
cs
dec
mov
mov
mov
mov
jnp
enter
cs
jnp
dec
aad
dec
push
cmp
les
in
lods
sti
stos
mov
aas
push
jge
adc
shrd
add
inc
sub
mov
jecxz
pop
(bad)
adc
in
movs
sbb
rcl
rcl
xor
lahf
add
cmp
lock
je
les
lock
push
in
out
dec
addr16
mov
icebp
xor
cmp
test
xchg
jns
push
sbb
int
cdq
fsubrp
imul
mov
test
enter
gs
jmp
or
outs
sbb
mov
sti
fs
jle
jle
mov
test
stos
sub
fisub
retf
fistp
aas
mov
push
xchg
test
jns
cdq
in
and
popf
xchg
sbb
pusha
mov
xchg
cmp
inc
sub
xor
in
pushf
shl
sub
dec
loope
push
jl
jnp
popa
pushf
xor
cmps
push
sbb
adc
not
ror
cmp
sub
mov
shr
jne
sbb
pop
cmp
call
or
lods
(bad)
xor
or
std
inc
out
test
(bad)
mov
(bad)
sbb
and
shl
push
lock
push
or
adc
or
pop
into
mov
sub
cwde
inc
dec
(bad)
repnz
adc
push
push
dec
inc
inc
loopne
cmp
push
add
int3
dec
ud2
pop
sti
add
lods
dec
jecxz
ret
lahf
adc
xlat
and
out
push
inc
popa
jmp
mov
test
or
push
mov
outs
and
push
out
scas
mov
neg
xor
mov
and
cli
mul
mov
adc
push
leave
pop
mov
es
sub
jae
dec
xchg
sub
push
test
mov
in
arpl
jle
adc
fsubr
xor
into
sub
test
lods
js
std
(bad)
ds
mov
mov
xor
push
adc
dec
dec
mov
in
dec
jle
or
icebp
stc
stos
fs
pop
xchg
loopne
push
add
lahf
in
jmp
jmp
lock
adc
sbb
icebp
das
aad
sbb
xor
sahf
and
gs
(bad)
icebp
movs
mov
xchg
cmp
add
xor
pop
sti
mov
mov
inc
icebp
sub
add
call
(bad)
leave
xchg
pop
loopne
lock
sahf
jno
fnstsw
fucomip
enter
jb
lahf
cmp
mov
movs
xchg
repz
jo
pop
mov
and
pop
shr
mov
imul
test
jp
fidiv
test
fs
inc
das
cwde
pop
or
into
(bad)
out
push
push
sbb
cmp
mov
jge
pop
fisubr
lods
test
or
repz
jge
sub
shl
push
das
dec
shl
(bad)
pop
pop
push
cs
dec
pop
out
mov
mov
mov
xchg
xor
mov
aam
xchg
les
mov
call
dec
popf
lods
repz
fisubr
in
add
push
daa
mov
loop
xchg
ins
adc
cmp
pop
adc
stos
pop
int3
xor
xor
stos
movs
push
mov
sbb
clc
push
sbb
sbb
add
stos
test
adc
mov
cmp
shr
push
cmp
mov
ja
ins
in
scas
lock
fsubr
retf
cmp
adc
mov
jne
and
fist
aaa
mov
test
shl
in
js
fdiv
lds
mov
fs
jle
push
jmp
adc
mov
cmps
push
icebp
dec
jns
jnp
mov
(bad)
pop
add
pop
ins
enter
(bad)
cs
sti
call
push
and
xlat
sub
push
pop
mov
cli
dec
fisubr
jbe
push
out
sbb
sub
cmp
leave
outs
add
adc
jo
les
outs
mov
adc
pop
xchg
dec
fs
mov
inc
cmp
xchg
pop
pop
repz
ror
repnz
cmp
lahf
push
mov
xor
mov
ret
and
icebp
mov
mov
xor
cmps
jp
imul
cdq
int3
xor
call
jecxz
ret
sub
pushf
mov
dec
push
jb
cs
mov
clc
inc
rcl
lahf
ret
cmp
dec
push
int3
mov
pop
xchg
in
cmc
cli
sbb
fdivp
icebp
in
and
mov
and
push
inc
retf
mov
divps
repnz
sub
loopne
retf
jae
push
jnp
outs
stc
push
popf
aaa
add
jecxz
test
call
cwde
xor
mov
sbb
and
and
in
cmp
mov
and
call
shr
mov
xchg
pop
cmps
(bad)
int
iret
dec
(bad)
and
nop
push
inc
fiadd
or
sbb
aad
test
add
xor
xchg
cmp
sub
aad
fdiv
fs
ins
pop
ins
push
rcl
jecxz
mov
mov
cmp
mov
jecxz
out
jbe
push
mov
fmul
push
js
rcl
addr16
popa
scas
mov
cld
or
cmc
inc
outs
pop
test
sbb
cmp
nop
movs
jl
data16
scas
cmp
jo
test
and
or
sbb
jmp
add
(bad)
cmp
pop
or
sub
in
dec
cmp
xor
scas
fild
fld
jmp
in
dec
xor
loopne
dec
in
ds
sti
inc
jo
mov
push
inc
test
daa
movs
inc
lahf
jns
xor
ret
push
mov
dec
push
push
popf
pop
mov
jl
cwde
aad
ds
and
dec
dec
adc
dec
fild
iret
cmps
add
mov
mov
xchg
pop
and
and
mov
cmp
sbb
jle
jl
in
(bad)
loopne
xchg
add
arpl
sub
out
leave
cmp
xchg
imul
inc
(bad)
jns
cmp
jp
iret
repz
sbb
dec
push
jmp
mov
retf
and
xor
(bad)
loopne
test
stos
and
mov
retf
into
(bad)
mov
enter
fstp
mov
loope
adc
movs
push
inc
movs
cwde
repnz
jno
sbb
retf
jo
inc
nop
and
push
mov
enter
jb
sbb
(bad)
mov
sub
cmps
sbb
adc
stos
xchg
fcomp
in
popf
push
mov
push
je
cmp
repnz
movs
jbe
and
push
xchg
xchg
repnz
pop
fidivr
mov
xchg
push
mov
clc
pop
lods
lods
ja
pushf
jmp
mov
sub
lods
loopne
dec
(bad)
retf
mov
dec
cmp
std
jmp
retf
(bad)
pusha
icebp
dec
cmp
repz
inc
mov
push
mov
push
fs
jp
mov
adc
imul
loope
or
inc
add
test
push
jg
dec
das
dec
mov
mov
mov
xchg
inc
jecxz
lock
leave
sub
xchg
lods
out
push
scas
cmp
dec
or
sub
dec
dec
push
sub
pop
cmp
fcom
and
or
add
push
out
jp
fild
clc
(bad)
call
popa
js
int
aad
add
jl
xor
mov
cmp
icebp
pop
jp
pop
jge
mov
mov
out
repz
in
cld
cmp
icebp
dec
pop
jl
xor
in
call
bound
inc
cmp
test
neg
pop
cmp
jns
loopne
and
ss
cmp
xor
jns
push
sti
sub
pop
jl
xor
cdq
xor
retf
retf
lods
mov
sub
test
push
pop
je
sub
(bad)
mov
sub
ror
mov
arpl
in
lds
cli
(bad)
and
ret
xchg
sbb
aas
bound
ds
push
sar
sahf
fidiv
out
(bad)
fnstcw
imul
sub
cs
inc
(bad)
cmp
xchg
sub
jo
mov
mov
adc
xchg
cs
jns
xchg
mov
mov
cmp
loopne
daa
fist
push
xchg
pop
lds
inc
test
mov
inc
imul
arpl
add
sbb
fist
jl
scas
ds
outs
(bad)
push
push
sbb
popf
scas
dec
jecxz
mov
mov
xchg
mov
(bad)
cmps
scas
lods
and
xor
xchg
lods
test
lods
pop
retf
pop
cmp
pop
inc
test
ja
les
lds
fchs
ficom
sub
bound
jno
jp
push
jle
or
test
pop
and
mov
pop
sub
repnz
and
dec
clc
cmc
(bad)
adc
xchg
hlt
mov
jns
or
xchg
aas
inc
dec
sti
repnz
dec
(bad)
outs
stos
push
outs
push
jp
jmp
dec
jbe
out
sbb
mov
push
pop
xor
inc
ja
movs
xchg
in
cli
(bad)
push
loopne
imul
scas
push
stc
test
cmps
inc
mov
pop
mov
push
dec
mov
test
fld
push
outs
cli
(bad)
jno
mov
or
push
mov
mov
stos
fcmovb
(bad)
dec
adc
push
mov
jmp
rcr
fcom
cmp
call
sub
push
adc
jp
pop
xchg
jbe
sbb
pop
pop
or
inc
pop
ins
(bad)
sti
mov
xor
call
jle
repnz
out
xor
loope
cwde
and
xchg
lahf
lahf
cwde
cli
sbb
scas
sar
xor
out
cmps
jae
jmp
in
daa
mov
and
mov
mov
inc
cmp
sbb
or
push
push
fdiv
jecxz
pop
pop
or
add
sbb
jbe
pop
call
(bad)
cmc
nop
push
retf
inc
mov
jo
cwde
or
sbb
loope
addr16
jo
xor
ins
mov
inc
xchg
mov
mov
xchg
dec
jb
lea
mov
and
ss
dec
mov
in
scas
xchg
icebp
jl
adc
xor
jb
(bad)
xchg
gs
dec
fcom
sahf
push
dec
aas
inc
xchg
mov
jl
aas
jle
je
xchg
push
inc
mov
jne
and
stc
rol
wrmsr
inc
shl
enter
xchg
xchg
add
jmp
and
mov
stos
nop
dec
mov
fiadd
xor
in
lods
inc
xor
push
or
neg
stos
jecxz
mov
add
push
jle
lea
mov
in
mov
cli
ror
mov
js
test
push
ret
push
stos
pushf
movs
cmc
or
mov
cmp
pop
jnp
dec
fwait
iret
cmc
add
lods
xor
mov
ins
add
test
push
(bad)
(bad)
push
repnz
fnstsw
sbb
push
test
mov
popa
fisttp
and
(bad)
loopne
add
inc
mov
retf
stos
in
dec
cli
cmps
add
mov
jne
out
xchg
mov
xchg
cmc
enter
mov
fst
mov
inc
imul
test
xchg
loop
pusha
imul
mov
std
sub
mov
pushf
sub
jmp
and
rcr
or
sub
inc
(bad)
push
ud2
shl
movs
(bad)
ss
xlat
fistp
xor
stos
int
cmps
cwde
gs
xor
fiadd
inc
sub
sbb
sti
lds
mov
aas
dec
xchg
lahf
jb
int
(bad)
rcl
fsubr
fldenv
xchg
imul
xor
push
mov
test
jno
jmp
aad
imul
add
leave
mov
test
repz
iret
add
add
(bad)
xor
mov
aam
(bad)
adc
xchg
add
xor
dec
mov
movs
adc
xchg
xor
mov
fsubrp
sub
add
vpmulhuw
jecxz
mov
jae
and
ror
sar
xchg
xor
sub
sbb
repnz
push
rcl
fnstcw
scas
jb
push
mov
stos
loop
repnz
mov
xor
or
into
pop
push
test
and
shr
movs
mov
xor
adc
shl
test
jl
in
sub
add
addr16
mov
pop
ret
xor
xor
jl
loopne
ins
inc
cld
pop
push
jnp
lea
ja
iret
test
stos
adc
lds
or
sbb
pushf
jbe
or
das
das
push
add
mov
jge
cwde
scas
mov
or
and
mov
movs
adc
mov
sub
xchg
push
mov
adc
aad
push
popa
dec
gs
fadd
sbb
and
push
punpckldq
mov
fsubr
xor
jg
aad
test
call
or
mov
stc
stos
mov
adc
mov
and
pop
retf
sbb
xor
adc
add
xor
jmp
sub
arpl
dec
ror
call
fisub
pusha
in
ja
ds
pushf
sbb
(bad)
mov
jno
es
ds
arpl
xchg
sti
aas
rcr
cmpxchg
or
(bad)
sub
stos
stc
lods
mov
lods
pop
pop
mov
xor
call
sbb
adc
scas
pop
add
loop
loope
mov
mov
popf
mov
movs
xchg
retf
sbb
push
fsubr
pop
dec
out
stos
mov
int3
not
aaa
cmp
add
das
dec
in
pusha
push
les
jb
and
out
pop
push
gs
xchg
pop
and
jmp
(bad)
sub
pop
dec
jno
push
add
xchg
and
call
xor
call
jae
ins
jecxz
cmp
rcr
stc
in
xor
cmc
inc
push
inc
out
fs
push
addr16
and
or
iret
inc
jmp
cmp
adc
in
cwde
mov
inc
retf
loopne
int
inc
adc
pop
clc
out
(bad)
lds
imul
out
sub
or
mov
dec
adc
mov
movs
enter
cmp
pop
ds
sub
dec
fldenv
sahf
pop
out
inc
es
std
icebp
dec
mov
adc
stos
lea
or
je
out
(bad)
and
rcl
jo
or
push
test
adc
adc
and
shr
(bad)
out
lock
dec
clc
lods
add
ja
push
ins
in
add
idiv
pop
dec
test
jge
les
out
out
dec
push
xchg
ja
or
call
mov
pop
(bad)
xor
ss
pop
pop
mov
ret
in
test
pushf
jnp
push
leave
aad
clc
lods
mov
mov
test
pushf
es
and
and
xchg
adc
xlat
call
scas
sbb
iretw
pop
xor
das
or
sub
ins
adc
xor
cmc
lahf
frstor
pusha
push
jae
mov
icebp
dec
xlat
(bad)
and
retf
mov
hlt
into
loopne
dec
and
shr
(bad)
out
or
test
jns
popf
fadd
jns
cdq
bound
and
cmp
jae
aad
lods
sbb
adc
cmp
lock
mov
mov
xchg
popf
adc
sbb
add
lahf
fisubr
jmp
sub
mov
sar
inc
test
or
test
mov
or
jmp
cmp
gs
mov
in
pushf
sub
into
pop
inc
fadd
mov
imul
retf
mov
scas
not
sbb
mov
adc
sub
test
lods
bound
(bad)
jp
pushf
add
push
pop
leave
lahf
xchg
sbb
xor
mov
sahf
add
xor
cmp
loope
mov
mov
(bad)
cld
ds
xor
jb
pop
(bad)
fabs
or
or
sbb
sbb
pop
ret
les
arpl
inc
hlt
lods
outs
ret
rcr
and
dec
mov
adc
jbe
inc
out
test
shl
xor
pop
xchg
fst
mov
call
clc
push
cmp
add
add
lahf
outs
xchg
cwde
(bad)
(bad)
sub
fldcw
push
jecxz
mov
sti
push
jae
mov
inc
inc
inc
dec
imul
and
add
loop
mov
into
dec
test
cmp
jecxz
clc
xchg
lods
jge
or
imul
gs
mov
xchg
outs
(bad)
leave
fsub
push
repnz
add
out
test
loop
out
cmp
scas
sub
sbb
or
and
lea
arpl
push
movs
jge
neg
rcr
xor
or
mov
sbb
leave
cs
mov
das
pop
adc
sbb
cmp
pop
shr
int
test
sub
lea
fs
fstp
xor
scas
dec
mov
dec
rcl
lods
cmc
jg
outs
mov
jmp
je
repnz
xor
mov
out
iret
cs
mov
out
pop
scas
ret
inc
test
enter
outs
adc
mov
dec
popa
lods
push
cmp
stos
inc
mov
dec
pop
rol
push
xchg
scas
fsubr
std
jb
mov
enter
and
out
jnp
scas
inc
mul
ficomp
cdq
out
ins
and
(bad)
cli
cmp
adc
sub
(bad)
(bad)
outs
adc
mov
clc
cdq
mov
pusha
sar
jmp
in
xchg
in
imul
xchg
pop
test
inc
repz
dec
dec
movs
jmp
pop
jbe
(bad)
jnp
movs
bound
mov
int
push
fdiv
dec
or
sahf
ss
cli
fld
jmp
movs
xchg
inc
jl
clc
jae
xchg
mul
sub
retf
jbe
xchg
loope
mov
cmp
add
cmp
and
sbb
mov
push
jne
jo
and
xchg
leave
loopne
pop
imul
ins
loope
mov
xlat
dec
adc
sbb
aaa
imul
stos
inc
shr
ror
dec
adc
loopne
jp
(bad)
jmp
fucomip
test
ins
jns
add
fisttp
das
xchg
js
inc
dec
pop
pusha
cld
sti
add
and
mul
call
pushf
fdiv
sub
cmp
ja
rcl
sub
fs
push
dec
mov
xchg
movs
shl
xchg
cmc
jbe
sub
inc
pop
pop
inc
jmp
push
clc
scas
ss
push
sbb
mov
cdq
push
and
jnp
cmp
stos
mov
and
xor
sub
iret
ret
adc
lahf
xor
cmc
pop
aas
lock
adc
loopne
xlat
push
add
mov
xchg
not
push
pop
out
push
pop
mov
rcr
call
call
pop
or
fsub
or
pop
shl
icebp
mov
rol
clc
sub
cmp
mov
sub
adc
sbb
and
add
xchg
jge
or
js
push
imul
dec
cmp
jle
sub
sub
aad
push
mov
in
jb
inc
bound
cmp
ins
shl
fs
inc
sahf
xchg
loope
out
icebp
xchg
lahf
fsub
clc
das
jnp
jge
pop
dec
mov
addr16
xchg
adc
sbb
stc
pop
jbe
jecxz
pop
outs
dec
inc
push
jno
sbb
adc
inc
jne
pop
sbb
or
jecxz
sbb
imul
js
pop
push
jno
xchg
add
aaa
(bad)
mov
ficom
jnp
lods
addr16
pop
adc
je
sbb
outs
cmc
cmp
cmps
mov
int
cmp
call
ja
and
inc
loopne
sub
(bad)
lds
xchg
repz
push
jae
std
push
lds
dec
jns
jae
mov
mov
sub
push
mov
movs
out
fstp
push
(bad)
mov
test
mov
mov
push
shr
sbb
mov
scas
pop
mov
ja
pop
or
lods
loope
nop
dec
xchg
mov
cmc
adc
add
mov
scas
mov
in
xchg
in
sbb
push
cmps
(bad)
out
aaa
pop
popa
shl
mov
adc
add
fadd
mov
rol
(bad)
or
arpl
jecxz
xor
mov
cmps
jle
add
jne
dec
xchg
xchg
cli
push
or
addr16
mov
les
je
or
sub
cmp
cmp
adc
loopne
loop
std
add
stos
sbb
ins
mov
test
push
and
push
xor
les
sti
sub
(bad)
out
jns
stos
sub
sub
push
stos
in
test
mov
xor
nop
iret
adc
add
shl
jle
inc
nop
nop
or
jecxz
fcmovbe
je
out
add
imul
daa
pop
je
mov
stos
in
and
fdivr
scas
xor
je
jge
movs
adc
jmp
(bad)
or
shl
in
shr
dec
ds
test
dec
je
mov
and
aaa
fabs
mov
shl
adc
mov
jns
movs
stc
mov
push
cmps
inc
fistp
sar
fmul
jne
test
ret
aad
scas
ins
out
jl
sub
adc
cld
mov
mov
pop
leave
(bad)
rcl
clc
repnz
cmps
das
pop
int3
retf
and
xchg
call
add
or
ficom
out
mov
jb
test
or
enter
fcom
pop
shl
cmp
les
or
mov
aad
cmp
sub
inc
xchg
mov
pop
and
add
pop
fcos
inc
(bad)
cmps
mov
adc
mov
and
movs
dec
inc
mov
dec
sbb
push
push
lock
jg
mov
pop
xor
std
retf
mov
rcl
push
cmp
jmp
xchg
in
enter
jno
mov
mov
hlt
ret
cld
sbb
call
nop
sub
movs
ds
mov
cmc
imul
in
pop
pop
bswap
pop
daa
iret
lods
les
jle
loop
sub
inc
xchg
adc
sbb
stos
pop
shr
das
imul
jle
sub
pop
add
cmp
cdq
leave
outs
int3
aaa
retf
das
test
(bad)
clc
lea
cdq
jo
push
jg
lock
adc
ficomp
xor
out
pop
inc
jl
(bad)
pop
dec
retf
mov
jno
sbb
arpl
sub
mov
shr
adc
int3
mov
ret
cmp
mov
outs
pop
mov
bnd
cmp
ja
xor
mov
push
mov
pop
jmp
mov
cmp
inc
sbb
ss
imul
mov
retf
adc
jo
mov
mul
inc
mov
lock
cmc
xor
mov
aam
mov
jle
shl
adc
stos
and
inc
cmp
jge
jnp
sbb
pop
add
scas
or
test
push
repnz
xor
jg
in
pop
sbb
or
mov
rcr
add
mov
fidivr
retf
mov
pushf
jge
jecxz
sysret
popf
lahf
(bad)
inc
sbb
mov
add
cmp
outs
dec
jmp
cld
or
and
and
mov
outs
jbe
leave
movs
in
(bad)
gs
and
inc
jae
fnstcw
test
adc
or
imul
clc
jmp
cmp
sti
out
loop
cmp
gs
pusha
pop
rcl
pop
dec
jp
jge
xor
cld
xchg
pop
xchg
stos
push
mov
inc
out
std
popf
jmp
mul
popa
rcl
add
ins
lahf
jmp
clc
rcr
call
retf
jle
and
dec
sbb
test
xor
xor
push
(bad)
sub
and
mov
dec
sbb
test
inc
xchg
rol
sub
aam
mov
test
mov
jb
ins
ss
push
and
adc
and
popa
mov
jns
sub
inc
out
xlat
xlat
pop
out
repz
cmp
pop
and
dec
leave
loop
call
cdq
adc
ins
sbb
jle
add
jo
and
pop
mov
lods
cmp
call
int3
lahf
(bad)
retf
ins
popa
aas
inc
mov
daa
cmps
loopne
popa
and
imul
jmp
cdq
sbb
mov
jo
pop
js
outs
pushf
xchg
test
mov
shl
mov
pop
cdq
and
pop
xlat
mov
dec
adc
rcr
and
iret
push
push
sbb
mov
dec
adc
sub
sub
sub
mov
cmp
add
out
sahf
mov
jmp
add
push
pushf
(bad)
pop
fld
adc
in
and
push
mov
outs
dec
push
sbb
icebp
repz
xchg
mov
pushf
push
fld
popf
cmps
jecxz
shl
adc
jl
shr
push
fst
and
or
xchg
sti
push
push
sub
lods
mov
mov
push
jp
xchg
mov
jno
xor
mov
or
enter
jno
inc
pushf
lods
add
aas
mov
imul
pop
add
retf
shl
int
stos
test
inc
mov
jbe
xor
xchg
mov
add
loop
pop
pop
push
mov
fidiv
shl
cmp
scas
dec
sbb
add
and
cdq
fst
leave
test
in
and
clc
(bad)
fmul
das
mov
lds
sub
pop
sbb
adc
ror
rol
sbb
(bad)
aaa
xchg
aaa
mov
jnp
and
push
jb
add
lds
mov
jns
hlt
xchg
mov
sbb
jbe
jbe
test
fistp
shr
push
test
sub
addr16
dec
dec
scas
sub
mov
push
mov
jnp
cdq
les
out
jo
aaa
or
std
pop
jl
push
jl
sub
jne
(bad)
aaa
cs
mov
xor
inc
mov
cmp
adc
aaa
mov
sbb
loop
jb
loope
ror
adc
mov
cmps
inc
push
cmp
xor
sbb
popa
inc
icebp
jbe
add
add
fnstcw
jns
int3
pop
rcl
jl
push
jae
data16
ins
addr16
and
push
shr
ds
fild
mov
out
mov
fsubrp
stos
and
and
pop
pop
push
in
test
shl
scas
pop
test
jne
cmp
fsubr
imul
xchg
jno
xchg
xchg
sub
dec
push
mov
sub
mov
dec
xor
mov
repz
pop
jne
outs
test
mov
push
shl
scas
cdq
outs
push
stos
xchg
(bad)
push
in
ins
test
sub
mov
ror
(bad)
lods
cld
xchg
or
cli
mov
aam
scas
test
fsubr
data16
fs
shr
lock
sub
in
sbb
test
loop
fidivr
nop
rol
arpl
or
je
pop
(bad)
mov
ficomp
xorps
adc
sti
in
mov
icebp
sub
pop
(bad)
add
mov
enter
or
adc
movs
aas
pop
dec
popf
arpl
pop
or
test
jg
stos
test
mov
or
and
cmp
pop
(bad)
sub
adc
test
xor
jb
data16
aas
sbb
push
pop
pop
mov
xor
mov
mov
sub
or
pop
mov
or
stos
fimul
adc
xchg
mov
ffree
arpl
shr
inc
push
cmp
call
imul
je
into
hlt
cmc
adc
xor
pushf
aad
cmp
sub
jo
mov
push
push
mov
mov
dec
and
(bad)
adc
add
jl
and
daa
push
test
pcmpeqd
xchg
paddq
lods
addr16
and
push
sahf
cmps
rcl
iret
cmp
sub
jg
and
fucomp
cmps
dec
jl
(bad)
sbb
mov
fisttp
xor
lods
sub
xchg
push
jbe
cs
cli
pop
mov
loop
jecxz
mov
loopne
test
jp
jl
mov
mov
sbb
pop
popf
mov
xchg
pop
js
inc
enter
aam
les
jae
in
jns
jp
push
in
mov
cmp
mov
test
cmps
inc
das
out
sar
cmps
fsubrp
mov
repnz
out
test
shl
pop
mov
mov
and
es
ror
mov
push
jmp
lahf
ret
sbb
popa
add
out
xchg
in
xlat
enter
leave
sub
bound
sbb
ror
add
aas
movs
jecxz
out
int3
test
adc
shr
xchg
cmp
xor
mov
mov
loop
ja
ins
gs
stos
cdq
pusha
jnp
ins
pop
test
retf
push
stos
or
sub
jmp
sbb
fsincos
fmul
pop
and
int
(bad)
stos
push
mov
mov
jle
xchg
jmp
inc
lods
sub
(bad)
xor
jae
addr16
mov
mov
jmp
mov
adc
out
fmul
fs
(bad)
(bad)
scas
ss
ficomp
pop
sbb
jmp
mov
outs
mov
adc
ss
test
cmp
in
jge
sub
inc
inc
retf
sar
push
je
pop
mov
sbb
sub
lods
lds
xchg
inc
xchg
cli
cli
push
jo
lock
hlt
add
jbe
call
(bad)
sti
ret
popf
sub
inc
imul
test
cmp
xchg
loop
outs
outs
sub
mov
jp
cwde
jno
cmp
or
retf
inc
mov
xchg
not
loop
inc
aas
pushf
nop
or
or
mov
push
movs
mov
lea
push
mov
fucom
(bad)
xchg
pop
xchg
cmp
clc
outs
mov
into
adc
dec
xchg
sahf
loopne
cmp
dec
push
push
push
dec
ret
mov
sbb
mov
xchg
jle
aam
sub
mul
(bad)
mov
sti
inc
test
xor
bound
test
outs
inc
add
in
sub
aam
bound
add
repz
pop
and
jp
stos
in
dec
sub
arpl
jmp
jno
pop
stc
and
xor
xchg
jno
or
xor
mov
hlt
sub
retf
in
dec
mov
les
xor
jecxz
pusha
in
add
inc
adc
sbb
addr16
xor
cmp
scas
cli
push
cmp
pop
stc
xchg
(bad)
cli
adc
xlat
cmc
push
popa
xchg
(bad)
jg
or
dec
cmp
or
mov
test
pushf
cmp
sbb
nop
pusha
cwde
and
pop
cmp
int
and
jmp
je
das
xchg
gs
jb
je
inc
pop
xchg
repnz
xchg
and
pop
jmp
ret
sub
enter
daa
popf
xchg
mov
loopne
pop
add
or
popf
push
jle
push
repnz
pop
ins
adc
retf
xor
xchg
mov
test
dec
push
or
(bad)
lods
xor
(bad)
fucomi
mov
cmp
xlat
jecxz
xchg
movs
rcl
inc
add
inc
ja
cmc
rcr
lock
loope
add
mov
cmp
pushf
pushf
mov
adc
cwde
jno
pop
mov
call
pop
xchg
mov
adc
mov
pop
inc
hlt
pop
xchg
or
xchg
push
or
cmp
push
inc
mov
dec
fist
cdq
push
jo
(bad)
in
xchg
mov
sub
js
xchg
scas
push
lds
repz
inc
pop
sub
jmp
push
sub
mov
je
test
out
shl
(bad)
scas
repz
xchg
loope
mov
mov
into
push
adc
into
das
sub
aad
mov
dec
mov
jg
cmp
push
scas
shl
xchg
pop
addr16
jmp
pop
sti
in
pushf
stos
xor
jge
jle
stc
aaa
aaa
in
cdq
sbb
adc
test
sub
dec
(bad)
jp
inc
mov
xchg
imul
shl
cmp
cmp
xchg
mov
add
fbld
mov
(bad)
sbb
cmp
ja
mov
retf
in
mov
(bad)
mov
dec
(bad)
and
jbe
outs
push
push
jae
inc
pop
lds
pop
aam
shr
add
fadd
push
adc
ss
jb
inc
pop
mov
cmp
and
lea
je
stos
pusha
icebp
adc
jecxz
pop
in
xchg
push
jg
cwd
in
push
inc
aad
loope
mov
loopne
dec
gs
xor
into
cmp
mov
(bad)
js
dec
pop
(bad)
imul
jo
add
push
scas
outs
popa
cwde
pop
xchg
xchg
adc
and
es
inc
sar
ret
push
cmp
repnz
add
es
ret
sub
adc
ror
out
pop
sar
call
das
cs
ins
shl
mov
adc
fs
jmp
gs
scas
pop
les
loopne
cmps
pop
or
test
(bad)
movs
and
cs
push
dec
mov
sbb
push
sub
fidiv
in
mov
ins
movs
sub
dec
(bad)
(bad)
xchg
push
out
pop
mov
mul
aaa
test
mov
lds
pop
clc
jo
xor
xchg
sub
pop
int
cwde
sbb
imul
daa
xchg
fild
in
movs
ja
mov
lea
sub
xchg
mov
cdq
and
js
xchg
xor
in
mov
cmp
cmp
mov
mov
bound
(bad)
push
mov
jne
shr
xor
mov
cmp
jmp
ins
test
pop
out
cld
xor
sub
dec
push
push
jo
lds
xor
stc
xchg
and
dec
fwait
add
jmp
cmp
mov
pop
xchg
sar
xlat
and
add
lods
cmp
inc
pop
xor
pop
scas
inc
int
dec
ror
imul
mov
inc
cmp
loopne
jp
ror
shr
pop
pop
pop
js
jmp
jg
cmps
ins
lahf
ins
push
add
xchg
in
aas
lods
xor
out
jg
lods
dec
in
or
pop
adc
push
int
neg
fs
xor
bound
or
nop
int
push
dec
inc
imul
fist
mov
retf
inc
sub
cdq
or
mov
pop
jbe
inc
pop
pop
xchg
movs
test
in
bound
mov
adc
pop
jmp
mov
icebp
push
xor
xor
xchg
ja
mov
pushf
mov
fistp
or
(bad)
movs
push
xor
cmp
or
sbb
sub
and
test
fild
out
test
iret
sahf
adc
mov
lods
xchg
call
out
fisub
addr16
jae
daa
fcomp
retf
aam
stos
cmp
daa
dec
sub
ds
xor
cmp
stos
arpl
push
adc
cdq
xchg
(bad)
hlt
repz
int
aam
mov
fcmovbe
and
jg
sub
sub
add
sub
xlat
rcr
aas
not
push
bound
fs
pop
pop
(bad)
loopne
fld
mov
mov
cmps
jge
sub
jb
(bad)
xor
es
push
cmps
cld
adc
lea
cmp
mov
(bad)
fsubr
ret
mov
cmp
repnz
sub
ficom
sahf
adc
mov
dec
pop
inc
scas
inc
xchg
push
arpl
and
shl
inc
sahf
dec
(bad)
cli
out
bound
xlat
dec
clc
or
inc
inc
jmp
enter
ss
adc
outs
and
mov
ror
cmps
(bad)
jb
in
fdiv
pop
mov
or
(bad)
mov
push
cmp
adc
mov
xor
jbe
xchg
leave
rcr
repnz
jo
xchg
out
mov
lahf
push
sbb
(bad)
std
fs
mov
or
jo
dec
dec
fsub
out
rol
aaa
xor
stos
jb
or
xchg
mov
loop
int
test
int3
push
cld
add
jge
sahf
ret
shl
dec
movs
and
mov
movs
dec
pushf
cmp
(bad)
iret
cwde
leave
out
dec
fs
inc
in
dec
int3
in
sub
mov
dec
in
add
es
sbb
xchg
pushf
mov
adc
movs
loopne
iret
cmp
push
mov
sti
cld
mov
mov
push
stos
xor
ins
mov
xor
jns
xlat
lea
(bad)
xor
out
ins
retf
jle
and
xchg
inc
pop
fidiv
xchg
repnz
test
and
mov
or
jbe
sti
retf
int
call
jbe
and
or
lea
inc
aam
cmp
stos
inc
(bad)
sbb
cmps
outs
mov
sti
ds
or
mov
pop
fdivr
jp
ret
movs
pop
dec
or
cld
dec
fild
clc
cs
xor
call
aam
cmp
sub
mov
shl
test
cld
and
add
lods
loope
dec
ss
pop
jbe
jae
(bad)
xchg
(bad)
push
dec
pop
shl
ret
ficomp
(bad)
sub
not
stc
mul
jbe
cs
arpl
icebp
add
cmc
aaa
jbe
mov
and
pop
dec
inc
add
xchg
out
ins
invd
hlt
mov
or
jg
adc
sti
jo
jmp
xor
div
in
repnz
dec
movs
adc
xchg
jmp
test
mov
es
mov
scas
sub
inc
test
bound
mov
and
sub
mov
sub
cmp
jo
fidiv
leave
mov
fs
dec
inc
inc
fld
aad
jno
jne
xchg
mov
dec
aas
fs
cmc
repz
mov
div
sbb
xor
aas
adc
imul
mov
and
inc
in
adc
pop
daa
xchg
mov
pop
jo
mov
sahf
js
mov
lods
lods
sub
push
std
xcrypt-cfb
cmps
cmps
pop
push
sub
mov
jp
push
data16
shl
(bad)
lods
mov
in
cs
xchg
sub
push
retf
xchg
pop
push
jmp
in
rol
and
add
ja
pop
imul
leave
mov
enter
scas
inc
xchg
lds
icebp
or
xchg
ss
in
loopne
sti
inc
jne
sub
addr16
mov
jl
aaa
sub
xchg
das
and
lods
dec
(bad)
and
xor
mov
mov
push
dec
jmp
movs
mov
cmp
pop
stos
add
and
adc
xchg
fild
mov
push
jmp
inc
aam
xor
les
mov
xor
ret
cld
add
fwait
mov
mov
dec
xor
ins
fiadd
pop
or
sahf
leave
clc
mov
sub
nop
jg
push
js
int
mov
fcomp
jecxz
inc
bound
inc
cli
leave
push
iret
clc
cmp
pop
call
pop
shl
mov
or
mov
jp
mov
adc
cmp
cwde
cld
xor
mov
cmc
mov
push
popf
lods
mov
cdq
push
fcom
lds
cmps
mov
test
sub
add
jnp
push
add
outs
push
mov
fild
adc
mov
cdq
retf
or
jl
ret
scas
xlat
fidiv
xor
movs
lock
pop
sti
arpl
xor
mov
pop
xor
sahf
stos
cld
jl
scas
call
push
add
mov
push
ins
jo
std
push
mov
hlt
repz
dec
xchg
ret
mov
adc
lock
xor
or
in
imul
popa
es
xor
mov
inc
xchg
or
and
xor
xlat
pop
or
and
and
aad
retf
mov
sub
sti
push
cmp
jge
mov
add
ret
sub
sbb
mov
(bad)
pusha
xchg
enter
jo
test
add
addr16
ss
jae
push
or
aad
mul
call
in
test
fndisi(8087
outs
pop
popa
test
jg
push
cs
call
outs
and
mov
adc
fisttp
and
inc
lods
ss
pop
and
sbb
push
add
or
jecxz
sbb
in
sbb
pop
dec
addr16
mov
loope
jmp
mov
cmp
inc
xor
adc
imul
popa
cmp
mov
inc
sub
jmp
lds
push
dec
(bad)
loope
loope
push
or
jbe
adc
dec
cmp
jp
les
in
add
sub
xchg
add
pop
add
rol
add
pop
mov
lock
mov
jp
xchg
mov
add
js
mov
jbe
mov
xchg
inc
rcr
mov
pop
hlt
sub
dec
mov
cmp
mov
ror
in
xor
in
cmp
pusha
in
sbb
outs
adc
mov
or
in
or
cmp
pop
inc
mov
add
xor
clc
(bad)
enter
aam
lahf
push
sub
cmp
mov
cmp
push
xchg
sbb
mov
xchg
pop
mov
pop
shr
es
stos
pop
or
hlt
(bad)
mov
mov
arpl
jmp
inc
cdq
addr16
aad
ss
loop
jns
push
or
imul
lahf
lds
mov
pop
xor
dec
sub
jmp
push
test
dec
push
or
js
sub
repz
push
in
mov
pop
call
hlt
pop
loop
rol
pop
test
mov
lods
sbb
scas
mov
rcr
inc
adc
mov
clc
cmps
cwde
ins
shl
sub
pop
rcr
(bad)
jecxz
not
scas
loopne
pop
into
dec
shr
lods
xor
jmp
xor
in
jns
jle
mov
xchg
jecxz
pop
popf
in
pop
jl
ds
movs
xor
ret
lahf
(bad)
fiadd
mov
fdiv
fmul
inc
mov
imul
(bad)
push
test
lea
pushf
in
sbb
(bad)
stc
cmp
push
fldenv
ror
jo
mov
daa
push
xchg
fstp
fist
jno
mov
sub
lods
pop
(bad)
push
sar
out
jne
in
retf
sbb
aam
shl
test
cmps
and
jno
jg
shl
jne
push
dec
jp
sub
rcr
in
fsub
mov
sub
movd
lds
(bad)
push
cmp
cs
aam
dec
jecxz
push
pop
nop
xchg
clc
lock
sbb
sbb
adc
sti
stos
ficom
in
push
xor
mov
jle
xchg
jbe
push
sub
mov
jo
and
jae
mov
mov
pop
xor
mov
pusha
mov
push
lahf
sbb
addr16
mov
jp
pop
inc
push
inc
jmp
mov
ins
add
imul
inc
fincstp
leave
fadd
inc
jmp
outs
outs
pop
jge
xor
xor
sbb
paddusw
or
lock
inc
cmp
cmp
je
inc
push
mov
inc
sar
in
push
mov
fmulp
test
ret
int3
jmp
push
mov
in
push
mov
mov
mov
loope
pop
scas
rol
imul
fs
xchg
mov
adc
dec
enter
cmps
pop
mov
cld
(bad)
jmp
inc
lock
clc
mov
jno
inc
lock
pop
jae
sub
add
retf
xchg
popa
push
fcomp
and
aam
(bad)
jl
stc
mov
cmc
and
enter
mov
in
(bad)
xor
xchg
cmps
jmp
or
mov
call
iret
cdq
pop
pop
aad
(bad)
cli
xchg
repz
mov
in
popa
pop
lea
and
ja
inc
leave
enter
mov
vpsubsw
pushf
iret
cmc
mov
dec
mov
mov
jle
add
pop
sub
sub
lods
js
mov
mov
xor
jnp
in
(bad)
cmps
mov
mov
cmps
sub
lods
clc
or
sbb
popf
and
fwait
sub
call
int3
mov
test
(bad)
cdq
pop
ret
mov
bnd
leave
jb
sti
push
rcr
aaa
mov
out
ins
xor
mov
xor
test
push
push
pop
lahf
xchg
test
sub
(bad)
sbb
and
ins
sbb
cmc
dec
jb
push
addr16
xor
leave
mov
inc
retf
jae
loopne
shl
out
inc
je
xor
popf
es
sar
mov
xchg
pop
jno
mov
in
mov
pop
push
fcmovnb
ins
xchg
stos
push
mov
adc
cmps
cli
jmp
pop
jmp
enter
mov
dec
nop
or
sbb
ficom
mov
(bad)
(bad)
cmp
cwde
stc
std
mov
jmp
xor
xchg
movs
scas
sub
imul
rol
and
popa
pop
xchg
test
ss
addr16
adc
push
(bad)
cmp
ret
cld
lahf
cmp
mov
or
sbb
test
and
outs
push
pop
xchg
ss
test
xchg
retf
outs
push
jns
lea
add
dec
jg
scas
into
(bad)
loop
pop
inc
mov
dec
mov
dec
push
push
add
jnp
int3
adc
dec
xchg
pop
or
and
movs
xchg
jmp
imul
loop
jp
mov
push
fwait
sub
adc
add
je
xor
fs
push
push
sub
pop
not
cmp
dec
push
mov
mov
fnstsw
add
stos
cmp
push
aad
retf
mov
adc
inc
push
icebp
sub
.byte
