lahf
mov
push
leave
mov
shr
test
je
xor
test
or
adc
mov
adc
adc
enter
std
dec
inc
cmp
jb
add
add
mov
cmp
enter
shr
xor
push
mov
sub
sub
fs
xor
jbe
cmp
les
clc
retf
test
push
mov
cmp
(bad)
mov
mov
mov
jne
call
inc
or
jmp
or
scas
ins
fild
xor
shr
sbb
inc
dec
jne
cmp
jb
push
mov
lahf
jg
inc
out
add
sbb
shr
dec
ror
mov
enter
jle
cmp
inc
test
push
adc
pop
mov
shr
or
(bad)
or
xchg
pop
xor
jmp
int3
mov
push
push
mov
push
adc
aad
xor
push
(bad)
sub
hlt
mov
lea
push
push
mov
add
pop
or
(bad)
rcr
outs
mov
je
or
in
xor
mov
mov
push
push
or
adc
jb
outs
mov
jge
lea
push
xor
sbb
or
mov
or
push
add
jne
pop
jnp
jge
(bad)
ins
in
loopne
or
add
cwde
or
xor
repz
mov
nop
or
push
add
dec
or
mov
mov
sub
mov
mov
mov
jbe
lea
and
sbb
imul
add
jb
icebp
cwde
cld
mov
mov
adc
jecxz
and
sbb
es
or
inc
sub
(bad)
in
ins
push
and
out
dec
dec
imul
or
xor
sar
ror
xor
add
dec
jmp
data16
ror
shl
scas
jmp
and
lea
mov
xor
mov
pop
in
inc
and
or
adc
adc
mov
adc
xchg
lods
clc
or
cmp
mov
push
in
add
mov
mov
mov
or
mov
push
xchg
fdivr
imul
imul
or
sahf
lds
or
adc
push
mov
retf
lds
je
int3
push
sub
sbb
push
or
jne
mov
retf
call
add
cmp
cmp
jl
fld
xor
mov
mov
add
or
movs
mov
push
or
adc
mov
pop
mov
add
xchg
pusha
call
inc
outs
push
in
inc
xor
xor
mov
adc
ins
xlat
ins
jb
sub
mov
and
adc
pop
aas
rcl
mov
pusha
pop
call
and
xor
addr16
jb
es
in
out
or
loopne
mov
imul
leave
push
in
call
fsub
mov
sbb
call
mov
in
add
sub
frstor
and
or
iret
xlat
data16
cmp
aaa
addr16
ins
mov
rcr
clc
cli
jae
arpl
lea
push
imul
sbb
xor
pop
sbb
rol
adc
popa
push
mov
in
sar
inc
sub
cld
hlt
adc
stc
add
lock
pop
mov
push
push
sub
(bad)
out
scas
add
ins
sub
add
add
jns
xor
sub
sahf
mov
mov
cmp
mov
stc
xchg
and
xor
mov
xor
popf
or
jg
in
and
add
jo
cmp
mov
xchg
js
test
xor
push
lea
jo
into
xor
lods
xor
mov
or
xor
imul
imul
mov
icebp
std
mov
sub
test
push
dec
mov
xchg
fst
sub
mov
push
imul
and
call
lea
mov
push
add
jne
push
div
push
mov
jmp
jecxz
lea
pmaxsw
cld
imul
arpl
mov
adc
jmp
mov
icebp
out
rep
mov
call
lea
mov
sti
xor
mov
mov
or
ss
je
push
or
or
rol
and
xor
fldenv
sbb
mov
test
push
add
fisttp
jb
js
xchg
mov
mov
cmp
neg
and
inc
mov
mov
(bad)
cmp
cmp
push
mov
jae
cmp
jb
fisubr
rol
xor
test
push
lea
ins
push
mov
jp
fadd
jb
mov
and
fdivr
sub
and
pop
hlt
jle
(bad)
add
mov
test
in
cmp
jle
pop
sbb
dec
mov
out
pushf
jbe
pop
hlt
test
je
push
shl
cmp
sub
dec
je
jmp
call
(bad)
fucomp
xor
mov
adc
cmp
jne
sub
pop
xor
add
out
mov
push
push
mov
mov
sub
ds
not
cmp
lea
xor
lea
in
(bad)
cmp
add
add
or
add
jne
pop
pop
push
mov
clc
lea
push
sbb
(bad)
test
inc
sub
stos
out
test
aas
mov
inc
adc
int
cwde
(bad)
fdivr
xor
jbe
xor
mov
mov
test
movs
imul
out
cmp
adc
mov
mov
dec
cmp
cmp
push
cld
enter
clc
adc
in
rcl
out
push
lea
stc
or
mov
mov
jmp
aas
add
leave
add
and
push
xchg
mov
jnp
lds
hlt
push
and
fistp
mov
mov
jp
sub
retf
cdq
js
add
scas
popa
jbe
add
mov
push
jle
movs
fdivp
push
add
xor
arpl
repnz
nop
cld
jb
push
mov
es
fld
mov
mov
shl
sbb
add
inc
fcomip
adc
fmul
mov
loop
imul
idiv
pop
das
je
movs
mov
test
setne
mov
imul
add
push
mov
dec
mov
adc
out
loopne
sar
push
test
xchg
xchg
and
xor
xchg
sub
cmp
xchg
xor
inc
pop
xchg
clc
sahf
cmp
inc
fimul
inc
sbb
in
shl
nop
out
push
push
mov
mov
fistp
in
xor
sbb
mov
sub
xor
xor
idiv
push
add
xor
inc
add
push
cmp
out
cmp
xor
in
or
or
or
or
or
pop
push
cmp
cmp
cmp
adc
push
adc
jecxz
(bad)
popa
sbb
cmp
push
push
adc
dec
js
scas
lods
cdq
xchg
test
or
mov
nop
sub
imul
call
inc
call
push
pop
push
call
lahf
ret
sub
adc
or
pop
(bad)
mov
fcom
xor
fidivr
retf
lds
xchg
inc
cli
push
or
add
mov
lds
add
sbb
shl
sahf
sbb
mov
stos
leave
cmp
je
(bad)
jmp
mov
shr
push
mov
mov
add
xor
pop
mov
stos
add
sbb
push
call
add
mov
push
jge
rcr
push
sub
lods
std
adc
(bad)
sub
or
dec
adc
add
adc
or
cs
pushf
jbe
(bad)
sbb
sub
or
push
mov
mov
add
mov
pop
out
nop
ficom
pop
mov
push
sbb
adc
jne
dec
es
fwait
es
ret
mov
test
pop
aad
mov
mov
ret
sub
mov
shr
sti
mov
add
nop
push
test
sbb
push
sub
or
sbb
xchg
mov
aaa
cmp
retf
inc
jle
adc
dec
sahf
pushf
iret
dec
mov
jmp
xor
dec
jo
cli
call
pop
pop
pop
jg
cli
or
inc
push
je
adc
push
movs
push
ds
cmp
jbe
std
cmp
or
jne
mov
mov
inc
(bad)
jle
sti
loope
or
inc
dec
add
push
cmp
ja
lea
pusha
fisttp
push
pop
sub
ds
or
inc
inc
cld
sbb
jmp
and
cmp
scas
shl
in
sub
add
retf
jl
add
aas
add
inc
jle
je
imul
leave
jns
add
in
cmp
leave
jle
inc
jae
mov
adc
(bad)
js
mov
imul
div
loopne
cli
cmp
fimul
jp
ret
xchg
not
jge
sbb
sbb
sbb
inc
pop
push
cld
ret
out
shl
and
cmp
sub
or
push
mov
dec
fdivp
enter
push
sub
adc
xchg
jns
scas
aas
mov
add
push
inc
idiv
jno
dec
add
loopne
or
or
pop
mov
mov
sub
pop
sahf
and
dec
(bad)
mov
push
jg
shl
adc
adc
test
mov
adc
cmp
jne
outs
and
sete
ret
sbb
adc
rol
or
adc
int3
stos
cmp
loopne
or
retf
in
or
push
je
(bad)
stos
jno
mov
or
mov
cld
xor
sbb
inc
push
push
aam
or
and
out
mov
inc
cld
add
dec
mov
out
fdivr
mov
dec
loopne
stos
xchg
cmovo
fdivr
jl
sbb
or
lock
jmp
pop
sbb
adc
sbb
mov
shr
sbb
mov
push
lea
les
(bad)
in
ja
or
lea
push
push
in
xchg
add
mov
in
(bad)
sbb
imul
in
or
fild
cmp
or
pushf
sar
push
imul
cmp
push
pop
push
pop
outs
int
add
and
sub
add
push
push
pop
mov
mov
fmul
not
call
sbb
adc
sbb
(bad)
and
push
mov
jl
fcomp
mov
adc
cmp
int
add
lods
pop
mov
data16
push
jno
sub
std
cmp
adc
mov
push
jo
add
push
xchg
mov
push
dec
mov
xabort
rcr
inc
cmc
lock
ins
enter
and
xor
sti
jne
fnsave
sub
mov
mov
add
push
mov
cmp
arpl
movs
loop
push
pusha
fistp
add
call
lods
dec
or
xlat
nop
ret
movs
repnz
and
lock
jo
mov
enter
jge
pusha
or
push
sti
add
jae
mov
jle
mov
push
sar
mov
cmps
sti
(bad)
xchg
lea
data16
fistp
mov
push
(bad)
pop
or
test
test
repnz
fsubr
fisttp
dec
cmp
ss
and
test
je
test
hlt
aas
mov
mov
mov
lea
les
(bad)
retf
jmp
and
push
push
dec
enter
mov
and
cmp
mov
loope
jne
les
xor
std
sub
inc
adc
mov
mov
call
xor
xor
iret
push
popf
mov
sub
cmp
jb
mov
inc
test
add
dec
sahf
test
xchg
test
hlt
mov
jge
cmp
inc
enter
adc
outs
(bad)
adc
bound
push
mov
fmul
or
inc
jno
test
mov
jae
xchg
xchg
rcl
daa
lock
pop
sbb
pop
add
add
jne
push
jns
inc
jo
jmp
outs
or
jle
or
pop
jne
mov
fcmovne
iret
iret
jb
popa
jne
jb
sbb
add
push
fsubr
int
adc
cmp
hlt
push
xor
add
jne
sub
push
mov
pop
cdq
or
dec
dec
stos
inc
popf
sbb
adc
mov
pop
cmp
dec
add
cli
jnp
in
aas
pop
pop
or
add
sub
dec
jnp
mov
jnp
push
loope
xor
cmp
jle
xchg
jmp
test
leave
(bad)
pop
pop
mov
mov
cld
inc
repz
fcom
xor
mov
mov
mov
out
push
jmp
or
lea
jno
fdivr
jl
in
sub
lea
mov
jl
retf
push
mov
rcl
out
add
mov
pop
lock
mov
inc
cmp
or
jne
mov
sub
mov
jb
rcr
jecxz
mov
je
test
jle
inc
sbb
cmp
lds
mov
xor
js
push
mov
sbb
repz
inc
or
pop
je
rol
clc
jl
jmp
repnz
add
js
sbb
inc
cli
ds
push
(bad)
sub
add
mov
sub
xor
and
call
xor
pop
cmps
sub
push
jo
pop
hlt
in
add
repz
pop
and
(bad)
cdq
sbb
sbb
mov
shr
push
mov
and
cli
dec
add
push
call
ret
popf
pop
pop
push
jbe
lods
mov
push
mov
loop
inc
test
je
test
jl
or
add
mov
adc
sub
je
inc
or
and
fdivr
mov
je
mov
or
inc
xchg
les
into
and
(bad)
bound
jnp
retf
test
mov
scas
stc
sar
mov
mov
and
loope
lea
xchg
js
push
jmp
sub
std
imul
mov
dec
pop
js
not
sbb
adc
dec
cmovbe
loope
test
pop
pop
or
es
sub
inc
adc
and
cmp
jb
dec
in
mov
mov
add
fimul
jmp
mov
shl
call
push
jg
shl
das
in
sub
aas
(bad)
lds
test
aaa
mov
scas
je
mov
mov
jo
jb
sbb
js
lods
(bad)
push
iret
fild
mov
pop
test
je
mov
pushf
xchg
loopne
push
push
aas
inc
cmp
ror
sbb
rol
xchg
push
les
adc
push
call
jle
inc
adc
loopne
into
adc
sbb
mov
adc
shr
mov
daa
dec
inc
out
sub
dec
and
add
sbb
and
jl
sub
pop
jmp
iret
movs
fstp
rcl
mov
js
popf
lahf
inc
imul
xchg
out
(bad)
mov
mov
retf
add
or
leave
test
je
(bad)
rol
inc
sub
jg
and
mov
addr16
aaa
loopne
ret
loopne
(bad)
loope
sub
ficomp
shl
rcl
add
sub
rcr
push
lea
shl
jmp
mov
cli
loopne
in
dec
loopne
push
mov
cmp
adc
ins
ret
jmp
lock
push
inc
push
mov
add
lahf
or
sbb
xor
adc
fdivrp
or
rcr
imul
sti
jecxz
xchg
push
mov
mov
jg
pop
mov
fdivr
fisttp
div
xchg
mov
push
and
cld
cmp
ja
mov
mov
mov
lahf
lods
jmp
icebp
aas
cwde
or
jae
push
ins
mov
and
(bad)
cld
gs
add
jb
shld
pop
xor
je
(bad)
mov
mov
not
cmp
jnp
mov
mov
fsubr
or
pop
dec
dec
(bad)
jnp
sbb
ret
jl
and
mov
rcl
ins
push
xchg
sub
enter
mov
mov
rcl
pop
test
loopne
fsub
clc
rcl
and
mov
mov
adc
ret
cmp
jl
jg
cmp
mov
or
push
add
mov
pop
rcr
fwait
ret
mov
pop
inc
or
in
in
xor
xor
xchg
int3
das
xchg
mov
test
ds
sti
xor
dec
sub
lea
cmp
mov
push
add
or
inc
rol
add
pop
push
dec
ds
rol
test
(bad)
jae
mov
inc
cmps
mov
rol
mov
cs
xchg
mov
xor
xchg
daa
mov
shr
dec
mov
jbe
xchg
dec
dec
movs
js
jmp
jo
sbb
push
cmp
out
push
ror
jne
push
jmp
adc
(bad)
test
push
stc
js
mov
push
shl
lock
sar
mov
std
push
sub
ja
or
pushf
inc
int3
rcr
xchg
or
dec
inc
jmp
(bad)
test
jp
mov
movs
mov
xchg
or
push
lea
outs
inc
scas
sahf
add
cmp
cmp
sub
rol
pop
shl
cwde
jmp
test
adc
inc
div
inc
pop
and
mov
pop
or
push
lea
jae
ror
jmp
or
cmp
and
unpcklps
pushf
fsubr
sbb
and
and
push
and
mov
lock
dec
or
xlat
xor
push
sub
mov
adc
mov
add
jle
and
or
fcomp
sub
inc
push
adc
push
outs
fsubp
mov
adc
mov
ins
dec
adc
adc
in
inc
and
ret
loopne
dec
xor
cmp
pusha
cli
in
pop
cmp
in
push
sti
aas
sub
push
push
mov
cmp
pushf
call
inc
mov
push
inc
lahf
(bad)
jecxz
or
dec
and
stc
mov
in
sub
mov
add
or
push
add
lods
mov
xor
sbb
lea
fst
lods
add
pop
ja
cld
mov
push
or
loope
add
adc
sbb
mov
cmps
jl
enter
rcl
adc
je
mov
jecxz
rol
clc
pop
xor
rcl
test
mov
cmp
mov
clts
shufps
rcr
mov
push
pop
test
mov
mov
fistp
cmp
(bad)
enter
inc
push
sub
push
fsub
popa
inc
or
push
repnz
cmp
cmp
jne
jl
sub
inc
std
ss
repnz
shl
jmp
pop
sub
mov
push
imul
dec
sbb
aad
test
adc
loope
cwde
push
hlt
ins
or
nop
add
loope
or
dec
pop
push
sub
inc
xchg
cmp
xor
mov
(bad)
cs
out
stos
xor
adc
mov
cmp
cmp
ja
aaa
sub
scas
loope
into
inc
pushf
mov
shr
add
loopne
and
test
leave
inc
mov
or
fld
ja
fild
addr16
dec
ror
mov
(bad)
rep
scas
inc
add
adc
nop
jle
adc
mov
pop
jle
lock
mov
mov
add
mov
rcl
add
or
dec
jne
mov
jmp
enter
lock
shr
iret
add
clc
loop
fadd
mov
ins
cmps
add
mov
mov
cdq
(bad)
jmp
pop
sbb
rol
xchg
cmp
inc
test
test
adc
jne
dec
les
jo
clc
rol
mov
push
lea
dec
add
(bad)
fsub
clc
mov
mov
mov
add
mov
into
movs
mov
mov
fld
jbe
and
into
and
dec
loopne
sar
int3
rol
into
call
call
sbb
test
xor
rol
cmp
or
sub
bnd
push
mov
pusha
xchg
sub
lds
xchg
arpl
test
arpl
icebp
sub
sub
xchg
mov
or
pop
sbb
jno
inc
push
shl
push
jo
aaa
adc
retf
popa
test
push
or
jo
mov
xor
xor
test
jne
mov
jg
(bad)
mov
test
mov
(bad)
call
xor
hlt
push
xchg
jl
ret
cmp
dec
fcom
(bad)
dec
pop
fld
nop
sub
test
imul
adc
add
cmp
cmp
jae
test
mov
loopne
or
cmp
mov
sub
jb
mov
jmp
push
in
shl
fcom
loopne
mov
mov
jge
jmp
mov
je
popa
sti
push
mov
(bad)
xchg
jmp
cmp
adc
lods
pop
ret
bound
jp
mov
pop
aas
or
jmp
xchg
jne
cmp
std
je
stos
not
or
pop
test
jnp
aad
jmp
sub
or
cmp
fbld
jno
pushf
inc
adc
imul
inc
adc
mov
mov
add
dec
fistp
(bad)
mov
pop
push
rcl
cmp
sbb
pop
cmp
mov
outs
sahf
xor
mov
rcl
push
ficomp
jnp
lea
sbb
es
(bad)
jae
or
pop
mov
xor
mov
push
pusha
add
rcl
cmp
jnp
pop
add
xchg
(bad)
js
mov
or
mov
add
hlt
jg
cmp
cmp
jbe
push
lea
cmp
mov
sub
ds
add
sti
mov
pop
pop
cmp
sbb
ret
jae
ror
push
push
xor
(bad)
std
pop
and
rol
je
push
push
jns
xor
and
aad
rcl
icebp
push
adc
lock
push
(bad)
int3
jb
lock
push
adc
sar
shl
daa
adc
fmul
inc
iret
jp
push
push
push
in
adc
(bad)
loopne
lds
push
mov
cmp
retf
cmp
test
ficomp
push
lea
(bad)
(bad)
jbe
mov
cmp
jae
push
cmp
sub
jg
pusha
cmp
sub
inc
dec
dec
add
pop
jo
fucomp
faddp
fstp
sbb
push
xor
jl
push
push
repnz
push
shufps
push
sbb
aas
sub
(bad)
push
jns
or
sub
cmp
jae
dec
or
push
or
retf
xor
mov
cmp
jae
lahf
mov
enter
sub
mov
stos
cmp
pusha
lahf
xor
mov
and
push
adc
or
dec
push
jae
push
push
sbb
stc
nop
xor
clc
xchg
ss
nop
bound
pop
mov
inc
(bad)
lock
lea
mov
pop
mov
jle
mov
pop
adc
xlat
or
ja
push
mov
xor
lea
push
xor
(bad)
fmul
cmp
(bad)
push
mov
pusha
mov
icebp
dec
mov
push
fabs
and
add
(bad)
loopne
or
lock
cmp
add
lea
mov
mov
les
scas
pop
scas
scas
add
lock
outs
imul
je
pop
shl
sbb
dec
and
push
and
(bad)
rcl
push
or
push
in
shr
push
push
jge
ficomp
dec
test
loopne
lds
push
add
cdq
xor
lahf
imul
inc
clc
push
jmp
pop
inc
push
out
dec
or
in
das
out
mov
mov
xchg
xchg
inc
or
dec
fisub
mov
add
cmp
jge
ins
and
add
fsubr
jecxz
add
rcr
cwde
sbb
lds
sub
add
cmp
cmp
cmp
sub
mov
sahf
es
pop
cmp
fcomp
(bad)
sbb
ins
enter
dec
push
sbb
test
push
out
ret
jb
pop
add
adc
xor
in
fnstsw
movzx
add
sub
jne
and
jbe
outs
fisubr
mov
add
and
jbe
sahf
fwait
out
add
lsl
add
scas
stos
adc
sahf
sar
pop
or
or
xchg
and
ds
adc
mov
or
adc
(bad)
or
xchg
cwde
adc
and
pop
pop
in
dec
cwde
or
(bad)
clc
imul
mov
test
push
icebp
fs
pop
aad
int
loop
cmp
cmp
div
das
push
ficom
sbb
jecxz
fst
add
repnz
iret
(bad)
std
push
pop
dec
popa
in
push
imul
add
dec
xor
inc
fist
inc
jle
adc
inc
mov
sti
inc
inc
adc
sti
sahf
arpl
inc
cmp
jne
fiadd
sti
cmps
ss
push
shr
mov
lock
or
or
shl
(bad)
pop
adc
push
mov
out
or
adc
retf
push
push
add
or
mov
jl
pop
or
ds
mov
push
push
test
jl
xor
sub
push
push
pop
dec
sar
xchg
jno
pop
in
or
mov
hlt
mov
hlt
hlt
movs
jg
or
dec
push
or
cmp
or
push
outs
adc
daa
mov
mov
out
retf
shr
shr
cmp
push
sar
retf
xchg
test
sbb
fdiv
mov
shl
adc
retf
imul
je
mov
and
push
fdiv
adc
movs
jae
fcom
ret
fadd
inc
sahf
ret
in
sub
sbb
mov
ret
mov
inc
cmp
in
dec
sbb
sti
imul
jp
xor
cmp
push
cdq
mov
pop
mov
mov
push
(bad)
mov
(bad)
xchg
clc
rcr
add
cmp
push
push
push
push
stos
sbb
jge
jmp
cmp
stos
jl
cdq
ret
jae
push
xchg
cmc
add
sbb
fmul
sub
je
data16
mov
icebp
dec
aad
fs
xchg
sbb
ja
test
stos
xchg
enter
or
push
and
aaa
add
mov
bound
push
in
or
daa
push
loopne
inc
mov
pop
pop
dec
or
sub
jbe
push
cs
pop
test
pusha
push
push
pop
mov
sbb
xchg
mov
enter
or
or
pop
ret
xchg
jb
mov
cld
push
sub
push
push
mov
xchg
push
push
movs
add
mov
or
push
push
adc
or
pop
or
lea
lea
mov
lock
and
cmp
shr
rcr
repnz
or
and
push
push
add
hlt
adc
ss
cli
fs
mov
shr
stos
int3
je
clc
sbb
cs
xchg
cmp
(bad)
xchg
je
push
mov
ror
xchg
inc
adc
push
adc
fwait
mov
push
adc
sbb
push
outs
int
adc
sbb
ins
cld
mov
ja
loop
jp
and
cmp
inc
repnz
or
mov
or
jnp
mov
int3
ds
inc
shl
(bad)
inc
in
(bad)
dec
mov
fbstp
ins
stos
fnstsw
and
adc
ffree
outs
sbb
sub
xlat
cmp
cld
sub
lea
gs
xor
add
push
add
dec
shl
pop
add
mov
js
add
mov
push
paddb
inc
or
mov
xor
jae
hlt
rol
nop
add
clc
jae
stos
ins
jae
xor
inc
and
and
fidiv
and
adc
ja
jo
inc
dec
xor
or
loope
movzx
outs
push
sti
scas
fadd
sub
mov
pop
mov
mov
jge
push
and
ds
pop
add
dec
sahf
or
shl
adc
loope
sub
jne
jg
retf
in
mov
imul
cmps
movs
cld
pop
or
fwait
shl
shr
xor
mov
test
in
sti
sbb
neg
and
add
jne
inc
repz
and
loopne
mov
sbb
sbb
jae
add
push
and
push
in
mov
jmp
mov
and
inc
ret
sbb
out
aaa
pop
push
push
xchg
mul
cmp
shl
fimul
ror
arpl
mov
push
mov
rol
rcl
dec
xor
mov
xchg
lahf
push
push
test
retf
cmp
mov
cmp
fs
enter
leave
(bad)
sti
sub
xchg
add
scas
pushf
cmp
wrmsr
adc
repnz
inc
mov
out
rcl
lea
lea
pop
sbb
out
das
test
jge
(bad)
sti
push
inc
push
or
inc
mov
push
bound
(bad)
sub
imul
mov
inc
and
mov
push
xchg
loop
jnp
push
sbb
dec
xor
pop
push
xchg
cmp
push
jecxz
aam
sbb
mov
retf
xchg
xchg
iret
popa
inc
ret
and
(bad)
in
shl
xor
push
push
inc
xchg
data16
push
ficomp
xchg
and
mov
mov
pop
sbb
add
push
jo
jmp
lock
or
mov
sti
xor
cs
mov
cmps
jae
fadd
test
mov
jmp
call
add
fcomip
mov
out
dec
add
inc
cmp
ins
cmp
rol
retf
push
lds
jl
test
leave
not
xor
rcl
lds
adc
cs
sbb
inc
mov
shl
cld
jmp
pop
mov
mov
mov
call
popf
mov
neg
cmp
(bad)
fisubr
pop
clc
dec
mov
jo
ror
push
enter
pop
inc
jbe
sar
mov
add
mov
jmp
aaa
and
sub
fimul
icebp
int
daa
push
ja
lea
mov
adc
movs
stc
and
sbb
hlt
cdq
nop
and
lock
and
es
mov
sub
sub
push
jo
in
shl
loopne
inc
pop
stc
fxch
arpl
lea
and
ret
or
inc
and
jb
dec
fisttp
adc
sbb
inc
sbb
addr16
dec
adc
jno
adc
xchg
adc
xchg
and
test
or
cwde
fldcw
mov
add
daa
sbb
loopne
movsx
jns
pop
test
js
or
mov
div
mov
and
push
add
ret
xchg
mov
pop
add
push
test
nop
data16
or
sbb
sbb
dec
pop
or
cmps
adc
test
loope
jo
jecxz
out
je
cdq
std
ja
(bad)
hlt
cmp
jb
jne
test
push
les
fist
and
inc
dec
ja
inc
jo
shl
push
add
retf
loopne
and
mov
stc
cmp
inc
cmps
or
aas
daa
jecxz
cld
xor
inc
or
xor
pop
mov
aam
adc
ret
jno
push
or
push
pop
(bad)
sbb
pop
xor
adc
ds
mov
outs
inc
push
xchg
jnp
int
push
ret
iret
inc
dec
sahf
mov
out
ss
sar
inc
pop
push
arpl
jle
xchg
movs
enter
jns
dec
sbb
jno
fwait
int
ins
inc
sbb
inc
add
inc
outs
sbb
inc
adc
pop
push
xor
or
out
ss
push
popa
jno
out
mov
(bad)
jbe
dec
pop
inc
lods
or
inc
add
or
nop
ja
or
or
mov
sbb
leave
cmp
jbe
or
mov
inc
retf
or
mov
shr
add
and
ins
pusha
pusha
ret
inc
adc
cmp
push
and
add
(bad)
xchg
clc
ins
pop
cld
dec
shl
leave
cmp
lock
xor
mov
push
clc
scas
pop
or
cmp
jb
jmp
je
mov
xor
jo
sahf
pop
sub
loopne
repz
jmp
lea
mov
and
pop
push
or
mov
scas
lock
xchg
inc
imul
mov
dec
mov
sbb
inc
enter
xor
pop
les
je
add
aad
(bad)
mov
stc
into
shr
sar
inc
sub
add
repnz
(bad)
shl
aaa
test
test
mov
(bad)
xchg
xlat
push
dec
pop
call
push
dec
cmp
cmp
fs
mov
ja
and
pop
jae
sub
push
sub
movs
mov
cwde
inc
pop
cld
sub
nop
cmp
xlat
inc
pop
shl
xor
push
push
ret
cmp
sub
(bad)
push
push
jne
mov
outs
jae
sub
fiadd
cwde
ins
test
(bad)
jp
dec
sub
test
xor
call
into
jmp
repnz
rcr
aas
fs
push
lea
retf
add
dec
and
mov
cld
(bad)
jb
ss
sub
inc
cmp
add
hlt
mov
inc
add
pusha
enter
rol
push
out
movs
push
lahf
int3
clc
inc
out
and
(bad)
and
and
sub
cmp
push
repz
scas
mov
nop/reserved
jns
sub
ret
add
stos
adc
xor
dec
add
adc
clc
pop
push
arpl
pop
pop
pop
shl
push
inc
dec
push
jne
jne
xchg
push
push
push
add
pop
mov
push
add
sbb
movs
enter
mov
jnp
sbb
cwde
rol
inc
or
pop
mov
mov
pop
in
xchg
inc
xchg
jmp
mov
lea
mov
rol
adc
mov
cmp
adc
lods
and
test
adc
je
popa
cld
loope
push
mov
cmp
jne
shr
les
push
sub
outs
das
jmp
mov
xor
adc
aaa
push
jg
je
mov
cwde
add
or
sub
add
or
push
fwait
pop
xchg
pusha
jl
lock
adc
jl
adc
jbe
cmps
or
mov
call
push
xor
xchg
sub
in
fst
cmp
push
stos
push
adc
dec
dec
or
sub
pop
nop
ret
adc
add
push
lea
adc
sti
int
push
and
and
add
cmp
(bad)
stos
or
retf
aam
in
pop
sub
jmp
cmp
loopne
test
(bad)
gs
syscall
push
mov
sub
cld
add
mov
push
pop
jl
pop
or
rcr
ror
dec
bound
cmps
jle
push
imul
xchg
sub
(bad)
bound
add
inc
or
or
sbb
and
sub
pop
jmp
js
xchg
lahf
pop
imul
mov
push
xchg
ror
inc
xor
shl
loope
push
inc
fdiv
mov
add
inc
ins
cwde
xchg
iret
lea
call
aam
add
ss
mov
ss
mov
mov
cmp
xor
xor
mov
shr
mov
adc
lea
cmps
pop
push
mov
mov
sbb
xchg
mov
es
cld
fisubr
pop
add
mov
cmps
adc
mov
mov
pop
xchg
adc
mov
mov
aaa
aaa
add
retf
dec
div
pop
xchg
ins
jg
ret
cmp
lea
int
jnp
pop
mov
push
int
mov
inc
inc
mov
pop
sub
lock
movs
and
stos
ss
lahf
add
cmp
mov
sbb
jns
mov
jmp
ds
dec
or
test
call
daa
sub
ja
stos
shl
xchg
cmp
ret
test
sbb
jb
and
cmp
ja
ins
lods
xchg
nop
dec
adc
push
lock
int
xor
push
add
xchg
ret
push
push
dec
sbb
jmp
rol
aaa
xor
ss
repnz
xor
xor
sbb
shl
repnz
lods
or
sub
mov
neg
add
adc
lods
(bad)
jb
add
imul
lahf
push
sbb
cli
inc
int3
sub
pop
push
ja
push
jmp
jge
mov
and
jno
cmp
ret
cld
ins
dec
mov
repz
add
pop
cld
add
dec
jbe
adc
fistp
inc
inc
inc
inc
cmp
je
cmp
jne
stos
test
jns
lea
ds
inc
fistp
mov
or
mov
mov
shl
add
add
sti
jl
or
add
or
or
adc
sub
dec
sub
test
mov
lea
mov
sbb
outs
pop
push
js
mov
cmp
adc
add
mov
sar
scas
jmp
jge
je
push
dec
sbb
sti
sbb
rol
sbb
inc
fcom
adc
paddd
inc
ins
(bad)
frstor
xchg
mov
inc
shl
dec
jmp
loopne
adc
or
loopne
loopne
test
add
jns
lahf
xor
mov
cli
sar
ret
jge
mov
inc
mov
(bad)
or
sub
fdiv
cmp
jl
fist
rcl
ins
push
sub
cmp
in
shl
mov
inc
mov
sub
outs
mov
cld
mov
push
neg
mov
movs
push
int3
cmps
shl
cmp
jge
loopne
int3
sub
in
mov
mov
shr
inc
push
les
sub
push
inc
fdivr
add
retf
add
cdq
mov
sub
adc
clc
xor
sub
loope
push
push
sbb
std
sub
cdq
xor
pop
push
jge
(bad)
out
lock
cmp
jg
sbb
ret
outs
cmp
fs
fisttp
add
or
xchg
xor
inc
aam
int3
inc
xor
sub
inc
pop
test
shr
push
(bad)
cmp
js
add
ret
mov
nop
push
ret
(bad)
ror
pop
add
jl
ins
jno
sub
jg
mov
mov
jge
mov
mov
rcl
cld
inc
shl
lock
test
pop
jg
imul
in
dec
ret
sbb
(bad)
cmps
imul
int3
aam
inc
loop
sub
into
xor
femms
inc
cli
mov
mov
push
adc
mov
sub
adc
push
or
ret
xadd
mov
push
popf
loope
mov
out
pop
mov
sbb
and
inc
es
rol
outs
mov
inc
loopne
ins
sbb
mov
or
xor
in
mov
dec
sahf
lock
hlt
xor
test
aaa
call
loopne
xchg
clc
aas
rol
push
test
cmp
jae
pop
inc
btc
inc
push
test
jb
out
jmp
lea
add
push
int3
lock
stc
ja
jl
jl
jmp
adc
jge
inc
sub
outs
fcmovu
xor
aam
pop
adc
sbb
jmp
jbe
cmps
imul
sub
sub
enter
push
add
rcl
adc
push
lds
xor
push
ins
mov
mov
xchg
sti
cmp
in
push
add
inc
cmp
jne
pcmpeqb
add
cld
add
fs
sar
sar
sub
mov
jecxz
mov
xor
pop
test
data16
pop
fst
inc
push
sahf
push
iret
repz
and
test
lds
add
loop
test
lods
lock
xor
xor
or
sbb
lods
js
pop
push
ds
in
dec
or
clc
add
ret
mov
push
lea
pop
sar
mov
loopne
jecxz
imul
mov
not
sbb
arpl
and
or
mov
jne
dec
dec
mov
add
enter
jnp
popa
bound
rcl
mov
mov
cmp
and
sub
cmp
popa
add
or
retf
sub
pop
add
push
xchg
mov
sbb
push
cld
push
push
pop
or
inc
cld
adc
jae
mov
dec
into
and
pop
mov
mov
(bad)
int3
dec
mov
sbb
shl
nop
std
mov
sub
ror
add
mov
adc
pop
adc
cmp
je
mov
rcl
je
push
push
dec
sti
or
test
les
sub
and
gs
mov
loopne
xchg
ret
shr
sub
jecxz
fwait
jp
repnz
mov
imul
adc
hlt
ret
add
jbe
sar
ins
cmps
clc
aad
fwait
or
push
pop
int3
and
push
or
pop
pop
add
stc
mov
xor
push
push
into
shl
fisttp
arpl
ja
push
ins
mov
mov
sub
adc
sub
(bad)
pop
les
(bad)
dec
pusha
jo
jbe
or
or
adc
sub
push
cs
je
outs
out
push
push
adc
jg
inc
je
adc
add
add
add
inc
xchg
dec
cld
push
push
lock
adc
mov
pop
add
jl
push
loopne
nop
shl
xor
pop
add
fsub
mov
jo
push
or
shl
lea
cli
mov
push
dec
jne
lahf
lods
out
jecxz
jbe
je
xchg
shl
clc
dec
adc
adc
jne
das
sub
xlat
lea
jnp
repnz
punpckldq
dec
cmp
inc
inc
(bad)
or
xchg
inc
je
sub
mov
mov
xlat
inc
and
add
cmp
test
mov
or
fld
or
(bad)
(bad)
jge
mov
pusha
sub
neg
sbb
and
add
jmp
add
cdq
fld
jl
and
mov
adc
push
fwait
and
push
jge
add
pop
pop
adc
jmp
sbb
dec
adc
push
push
mov
mov
mov
inc
cmps
mov
ret
aas
shl
cmp
std
mov
dec
add
or
fild
data16
push
jl
xchg
add
jg
sub
jg
add
jno
add
add
neg
in
mov
add
adc
push
lahf
pop
lock
inc
sbb
add
xchg
mov
lea
mov
push
cmp
adc
mov
sbb
test
es
xor
dec
inc
inc
movs
sub
add
inc
jbe
sbb
shl
sub
int3
lea
retf
add
inc
and
leave
out
ret
and
mov
in
sub
cmps
or
xchg
jbe
mov
or
test
mov
aam
cs
retf
in
rol
mov
nop
lock
call
imul
sbb
movs
push
loopne
in
jg
jp
fadd
pop
xor
push
xor
sbb
sbb
jbe
jo
jno
mov
push
pop
cmp
fdivr
retf
es
retf
inc
push
sub
(bad)
enter
inc
data16
in
push
xchg
cmp
ins
jo
and
cdq
add
ins
xchg
icebp
pop
ins
push
sbb
or
jne
cmp
call
push
add
mov
setge
(bad)
inc
rcl
jge
clc
clc
pop
inc
cmp
dec
and
and
push
lods
sar
adc
sub
test
repnz
jo
retf
xor
pop
mov
not
sub
xor
ret
out
or
(bad)
lods
enter
in
cmp
(bad)
adc
out
push
xor
pcmpeqb
and
add
pop
push
retf
and
add
pusha
sub
pop
push
sbb
or
inc
stos
cli
cmp
jae
mov
mov
imul
pop
xor
pop
imul
xchg
adc
jne
pop
cmp
test
mov
sbb
clc
jbe
jge
es
fistp
sbb
shl
ret
dec
sar
jb
or
adc
lock
loope
push
push
cmp
inc
inc
sbb
fild
fsin
retf
or
xor
ret
and
pop
in
or
pop
cwde
out
inc
shr
in
adc
add
je
push
lea
shl
clc
cmp
add
xor
mov
mov
add
push
xor
sbb
xor
dec
fdiv
dec
call
in
adc
sub
rcr
adc
pop
and
mov
push
add
add
mov
push
inc
jne
sub
in
push
add
ins
fwait
jbe
call
lock
or
rol
lods
xor
jo
sub
outs
test
lods
lea
rep
adc
scas
xor
js
or
(bad)
push
add
mov
ss
and
mov
pop
fld
mov
jl
dec
jmp
fimul
push
fild
adc
push
retf
popf
std
jne
inc
call
mov
enter
or
jmp
data16
sbb
push
sahf
adc
sbb
xchg
ins
sti
xchg
fimul
sbb
mov
jns
data16
inc
inc
inc
fisttp
fisub
(bad)
loopne
call
out
out
call
out
mov
cmps
jmp
jg
push
mov
adc
push
add
pop
ret
mov
and
(bad)
adc
sub
or
mov
test
xchg
cs
movs
std
push
mov
(bad)
xor
push
cs
push
cld
pop
add
add
nop
imul
and
pop
add
fwait
add
or
or
xchg
dec
or
inc
pop
not
xor
push
push
cwde
push
xchg
clc
enter
fsubr
or
shr
gs
jg
xchg
mov
and
adc
hlt
xchg
jbe
xor
in
jns
mov
mov
(bad)
inc
push
push
adc
fwait
mov
lods
sahf
mov
and
xor
(bad)
mov
push
mov
xor
(bad)
and
imul
adc
mov
push
repz
jle
xor
ins
xchg
imul
xor
ret
sahf
sub
fdiv
iret
add
push
rsqrtps
mov
ja
popa
ret
ins
jb
cwde
inc
push
push
inc
push
jbe
add
inc
shr
lea
js
xor
pop
ret
or
jle
adc
cli
das
ret
mov
mov
xor
sub
push
pop
into
mov
adc
rcr
lea
mov
clc
shr
xor
sti
mov
gs
mov
in
inc
mov
bswap
pop
push
pop
(bad)
cmp
fidivr
jge
adc
cmps
fst
push
stc
dec
or
push
loopne
jne
fstp
sbb
out
pop
in
jno
ins
add
adc
mov
mov
xor
ds
xor
rcl
call
jne
shl
xor
lock
add
jmp
fld
jge
rol
in
jmp
out
in
xchg
inc
cs
mov
dec
add
fxam
ins
sbb
std
fimul
mov
push
xor
adc
adc
into
fdiv
push
fdivr
in
dec
dec
loopne
dec
stc
mov
in
fcmove
mov
push
inc
sub
iret
jno
daa
pop
jmp
rcl
imul
call
dec
aam
or
call
jmp
stc
cmc
stc
aaa
mov
ret
lods
pop
jne
popf
rcl
xor
pop
popf
pop
nop
jmp
pop
jnp
es
dec
xor
test
and
mov
lods
mov
fwait
lock
xchg
dec
pop
out
adc
sub
push
push
bound
imul
pop
in
stos
adc
outs
enter
mov
inc
and
push
sub
push
sub
sub
dec
add
pop
xchg
call
shl
mov
add
fsub
fcomp
ffreep
sbb
jg
movs
adc
add
or
or
movs
popf
add
or
or
cmp
push
or
add
les
mov
or
xor
xor
mov
sbb
ffree
mov
add
inc
or
dec
ja
sar
pop
pop
jmp
mov
leave
call
dec
xor
jg
mov
or
cld
add
std
mov
dec
cli
mov
xor
xor
ret
cmps
imul
add
mov
fidiv
rcr
jne
pop
add
in
or
sub
aas
ret
sub
test
lea
xor
add
pop
add
pop
ror
mov
inc
ins
mov
mov
or
or
xchg
xchg
xchg
xchg
leave
enter
jne
daa
xchg
xchg
retf
retf
jmp
cmps
jne
adc
adc
mov
retf
or
pop
jns
fisubr
or
and
sub
retf
enter
inc
retf
stos
cwde
cmc
jecxz
or
js
or
cli
or
rol
cmp
rol
add
jmp
xchg
fisttp
fsubr
test
daa
rcl
xchg
or
fs
lea
ss
mov
or
retf
pop
pop
push
leave
push
enter
adc
cmp
lahf
enter
fs
retf
xchg
retf
retf
fs
leave
enter
fs
retf
in
xchg
retf
cmps
inc
fs
mov
retf
retf
cmp
cmp
sbb
(bad)
shr
jb
mov
aaa
adc
mov
and
mov
jne
sbb
sub
pop
test
out
(bad)
shl
daa
push
mov
push
(bad)
std
movs
jae
shr
loopne
cmp
(bad)
in
mov
add
sub
je
dec
(bad)
push
mov
ds
or
int
int
in
in
pop
cmp
xlat
sub
lea
xor
gs
sar
inc
mov
add
cmp
lsl
jne
add
pop
push
enter
or
cli
or
push
retf
ins
xlat
push
lea
cmp
aaa
mov
push
rcl
(bad)
out
std
xor
mov
cmp
jne
data16
inc
add
inc
sbb
sub
neg
jne
(bad)
xchg
xor
jne
fist
(bad)
out
dec
pop
sub
add
(bad)
(bad)
pop
test
add
push
adc
and
pop
popa
xor
or
lahf
dec
imul
jp
je
adc
or
adc
test
jle
ret
mov
or
mov
and
dec
(bad)
(bad)
into
xor
ror
inc
in
pop
adc
add
xabort
or
inc
mov
jle
and
add
xor
push
or
fsubrp
lea
pop
or
mov
xchg
mov
repnz
sub
(bad)
js
add
jl
or
mov
test
cs
iret
jns
out
xchg
fisubr
or
(bad)
xor
jns
imul
fcomip
sbb
loopne
daa
ror
test
loop
sub
sbb
fisttp
fiadd
adc
xlat
ins
js
lea
out
call
sbb
or
les
mov
adc
or
lock
jo
dec
xor
les
cld
cld
hlt
dec
and
or
dec
jae
test
pop
and
sbb
(bad)
clc
out
and
cld
hlt
rcl
(bad)
xor
or
adc
and
jne
jle
sbb
idiv
call
push
enter
add
jo
or
and
add
or
sub
xchg
xchg
xor
cld
push
dec
ret
or
adc
xor
lock
sub
loopne
out
mov
clc
dec
movs
imul
add
mov
or
adc
gs
repnz
lock
xchg
xor
mov
in
cmp
adc
lock
clc
lea
cmp
cmp
pop
dec
ret
xchg
fld
sti
or
rcr
cmp
(bad)
and
test
sti
push
xor
sbb
push
aaa
jne
sub
sahf
or
xchg
xor
rol
mov
xor
xchg
jg
add
jbe
cld
cmps
imul
imul
mov
out
(bad)
pop
sub
jge
ja
xchg
xchg
lock
mov
ja
adc
jl
or
mov
sbb
xchg
cmc
push
pop
cld
xor
aaa
push
push
clc
in
cmp
sti
xor
jmp
lock
fcomp
clc
in
aad
jns
rcr
rep
cmp
mov
xchg
out
mov
clc
pop
ja
in
ret
rcl
or
push
jne
cld
hlt
hlt
jae
cs
or
sub
or
or
or
in
cmp
(bad)
shl
xchg
out
enter
jb
enter
dec
loopne
dec
jo
xchg
xchg
outs
jb
out
hlt
leave
xchg
inc
fsubr
inc
jo
dec
xor
xor
loopne
add
leave
jo
sub
xchg
in
sar
sub
cmp
ds
sub
and
or
adc
stc
xor
pop
pop
int3
cld
push
xor
(bad)
jo
or
push
out
jge
xchg
adc
push
iret
add
rol
dec
sub
cmp
or
jo
fst
xor
jmp
push
cmp
pusha
ret
enter
add
sub
adc
sub
push
hlt
fiadd
fimul
push
ins
push
lock
xor
and
or
ds
and
mov
push
shr
xchg
popf
rol
repnz
adc
push
sbb
cmp
outs
das
mov
cwde
shl
scas
rcl
lods
jo
loopne
push
shl
add
pop
jle
push
mov
ss
mov
popf
or
(bad)
(bad)
loop
in
or
mov
jb
adc
push
mov
mov
jno
hlt
inc
idiv
fldenv
xor
push
(bad)
lock
sub
retf
into
push
sbb
or
push
push
sub
jmp
xor
xor
jmp
xor
shl
addr16
in
push
or
fsub
dec
and
popa
pop
sbb
imul
push
in
and
or
fsub
xor
lock
pop
sbb
cmp
push
mov
imul
add
hlt
sub
dec
jo
inc
pusha
xor
das
ret
outs
sub
or
mov
adc
or
clc
jbe
mov
mov
sti
xchg
mov
add
pop
sbb
enter
mov
jns
xor
setb
jg
sbb
cmp
sub
ins
movs
and
xchg
sub
or
pop
push
or
js
pop
retf
mov
jmp
ror
clc
outs
mov
jnp
xor
out
cmps
int
call
mov
hlt
aad
push
mov
stos
jmp
xor
push
sub
mov
cmp
loopne
cs
loopne
jnp
cli
dec
fbld
out
in
jo
xor
adc
in
cmp
lock
and
mov
dec
cld
fimul
mov
dec
cmp
or
test
xchg
test
retf
and
mov
into
push
or
push
scas
sbb
push
add
and
xlat
pop
(bad)
and
or
outs
je
pop
adc
fidiv
pop
push
addr16
push
push
aad
retf
sbb
ret
adc
add
aaa
mov
or
or
mov
mov
retf
fimul
js
mov
ins
mov
or
jbe
inc
lahf
movs
popf
push
xchg
sbb
cld
jp
shl
mov
aas
push
sbb
sbb
cmp
cwde
or
adc
jbe
mov
test
out
cmp
sbb
fild
hlt
outs
jmp
sbb
push
lods
add
dec
call
fwait
cmps
iret
push
push
jl
fdivr
sub
fs
dec
add
inc
das
cs
scas
xor
sub
or
sbb
jmp
pushf
push
mov
xchg
add
or
cmc
es
sub
jns
push
(bad)
pop
pop
mov
xor
sub
pusha
ds
mov
hlt
int3
lods
push
addr16
cmp
xchg
dec
pop
dec
shl
shl
(bad)
shl
sbb
sbb
fimul
mov
imul
jle
xor
jge
dec
mov
cld
fisubr
loopne
jl
retf
mov
nop
xchg
adc
push
push
cmc
dec
sub
into
xor
stos
xchg
aad
sub
aas
pop
pop
ret
or
push
data16
imul
(bad)
xor
and
dec
or
loop
imul
inc
jb
mov
lock
add
add
jae
or
popa
xchg
mov
mov
pop
popf
imul
xchg
add
call
test
out
ret
mov
jecxz
adc
mov
inc
or
dec
xchg
push
popf
imul
sbb
adc
adc
sbb
clc
cmps
ins
add
cmp
mov
jne
mov
push
ror
jae
or
add
loopne
test
fcom
push
mov
sbb
jo
pop
into
sbb
int3
and
ret
adc
adc
pusha
adc
retf
test
add
add
call
inc
bound
xor
sub
cmp
dec
int3
pcmpgtb
inc
inc
mov
add
adc
mov
mov
fnsetpm(287
xchg
gs
adc
mov
pop
int3
leave
jne
clc
pop
add
mov
adc
ja
cmp
pop
gs
bound
pop
mov
xor
out
repnz
inc
add
outs
std
je
bound
sbb
lea
ds
bound
xor
fs
mov
or
pop
pop
sbb
cmp
adc
inc
pop
jne
retf
in
js
loop
lock
and
xor
adc
add
jp
sub
add
add
jo
add
push
aad
mov
push
dec
adc
cmp
push
clc
hlt
push
in
test
inc
push
adc
adc
std
xchg
fcom
ret
(bad)
ja
arpl
rol
inc
jae
inc
cmps
sbb
adc
cmp
gs
jmp
jbe
pushf
mov
push
aaa
mov
lock
mov
dec
sbb
int
lea
ror
xor
or
sub
movs
fdivrp
and
pop
inc
pop
or
les
retf
pop
data16
ficomp
dec
fbstp
sub
dec
or
inc
into
push
inc
pop
and
mov
aas
mov
cdq
xor
shl
or
jg
push
ret
mov
push
inc
push
ret
ds
jb
adc
xor
pop
repz
movs
xlat
push
fidiv
and
sti
loopne
clc
clc
and
cmp
push
xchg
pop
enter
jne
loop
jbe
hlt
or
mov
(bad)
mov
iret
cmps
in
mov
add
jne
mov
mov
in
addr16
xor
sbb
pop
jnp
mov
adc
pop
inc
les
leave
hlt
nop
cmp
punpckhdq
add
push
cmp
int
shr
xor
cmps
pop
pop
add
mov
mov
add
or
adc
sub
adc
or
sbb
add
fwait
rol
shr
mov
push
push
push
push
adc
pop
test
add
gs
mov
mov
push
fbld
test
dec
add
lea
jmp
cmp
imul
add
cmp
add
jns
into
sub
cmps
jns
push
add
add
cmp
sub
mov
inc
(bad)
cli
add
pop
test
inc
or
cwde
dec
sub
das
add
add
push
std
add
nop
rol
push
jae
mov
fcom
aam
adc
cmp
loopne
and
mov
and
cmp
lock
fs
mov
and
shl
push
test
retf
lock
xchg
aam
add
mov
and
js
fsub
pushf
xchg
push
(bad)
add
addr16
clc
mov
ror
cmp
ja
inc
addr16
retf
mov
mov
sbb
imul
ret
loopne
add
outs
mov
js
cmp
mov
adc
ja
jne
add
aaa
lea
or
sar
and
fs
outs
mov
std
stos
xchg
mov
add
add
add
movhps
ret
loopne
or
test
in
adc
xchg
dec
test
and
std
jae
pushf
mov
call
pusha
seta
mov
add
call
icebp
add
ret
or
mov
fisttp
adc
sbb
push
mov
mov
mov
inc
mov
cmp
sbb
jle
loope
push
ror
sbb
mov
inc
fwait
xor
push
add
dec
loopne
inc
movs
enter
aas
clc
and
inc
mov
xchg
ror
xchg
adc
int
lea
add
add
mov
push
popa
and
hlt
mov
pop
sbb
mov
jg
add
cwde
jl
ret
xchg
push
test
loop
mov
jge
cli
imul
loopne
int3
out
add
inc
push
add
out
ret
xor
clc
repz
out
xor
add
mov
dec
lahf
jbe
popa
cmp
add
jo
into
dec
push
add
inc
stos
lea
ficomp
push
add
add
jge
push
repz
or
adc
es
and
mov
xlat
mov
fld
ds
sub
scas
jns
sub
add
xor
and
ret
add
jl
ins
in
inc
mov
or
mov
mov
cmp
adc
pop
push
scas
push
sbb
jno
cmp
xor
cmp
cmp
clc
or
add
test
mov
jmp
cmp
js
pusha
jne
inc
cmc
jg
test
jbe
mov
(bad)
je
push
add
aas
mov
je
adc
mov
add
mov
jne
jo
mov
(bad)
fiadd
jp
add
push
sbb
mov
enter
add
adc
add
mov
add
je
sub
or
mov
lods
push
adc
xor
add
jp
inc
shl
or
xchg
dec
or
pop
jle
lea
lock
mov
mov
out
pop
inc
mov
neg
shl
jle
scas
shl
test
add
pop
adc
mov
mov
push
dec
mov
je
mov
test
(bad)
cmp
dec
mov
sub
mov
push
add
jne
sti
nop
mov
mov
mov
test
test
adc
lods
imul
push
mov
cmp
sub
mov
and
sahf
stos
sbb
sahf
sub
mov
dec
adc
mov
movs
ret
mov
(bad)
test
push
fisubr
add
mov
in
test
adc
add
dec
or
sub
inc
sub
pop
push
sahf
rcr
fnstenv
mov
push
pop
icebp
inc
aaa
dec
sbb
cmp
push
outs
sub
mov
inc
inc
mov
inc
mov
clc
mov
push
sub
pop
sub
shl
sub
dec
pop
xchg
xchg
in
sbb
movs
loopne
dec
xor
(bad)
xchg
or
mov
dec
xor
ins
dec
add
fnstcw
leave
jbe
cmp
leave
in
cdq
inc
sti
add
sar
pop
adc
clc
out
ror
sub
fdiv
cmp
push
pop
out
xlat
inc
add
test
shr
jg
sub
dec
jp
cmp
pop
sub
adc
xchg
lahf
xchg
push
pop
dec
outs
mov
test
jmp
xchg
fild
or
lock
lods
mov
cmps
hlt
cmp
xor
push
push
fisttp
aaa
cmp
icebp
fld
add
loope
push
call
cmp
adc
mov
adc
test
nop
pop
into
push
push
adc
push
ja
sub
outs
shr
mov
mov
mov
ret
mov
je
xchg
pusha
bound
lock
clc
add
mov
mov
shr
ret
xchg
mov
jo
mov
jmp
xchg
cs
cmp
rol
out
and
pop
cmp
dec
sti
test
mov
jmp
sub
mov
lods
mov
dec
pop
or
mov
inc
jecxz
lea
xor
cli
push
mov
xor
clc
mov
inc
bound
xchg
icebp
cmps
jge
leave
sbb
ins
or
lea
lahf
mov
mov
(bad)
sahf
test
xor
push
push
add
mov
(bad)
jp
xor
add
cmp
(bad)
jo
cld
das
add
jmp
or
mov
outs
test
cmp
enter
add
idiv
mov
test
add
inc
pop
push
lock
xchg
add
out
or
jl
fimul
inc
sub
adc
loopne
adc
loope
scas
mov
test
aas
mov
cli
jg
pop
inc
std
mov
call
lock
cmp
jl
jns
mov
bound
fdiv
xchg
sub
add
data16
cs
cmp
sbb
push
fcomp
or
sbb
mov
xchg
jb
add
sbb
or
jl
mov
sub
div
jge
fidivr
movs
in
out
dec
mov
inc
inc
jno
adc
lea
push
ss
and
outs
mov
pop
inc
push
add
ins
pop
clc
rcr
push
and
mov
mov
lea
mov
mov
data16
pop
push
sbb
mov
in
or
call
shr
dec
fisttp
add
add
pop
add
fs
sub
mov
cdq
mov
retf
sar
(bad)
or
hlt
mov
sar
push
sub
add
stc
xor
push
mov
cmp
int3
inc
cld
dec
sti
jbe
mov
jle
in
enter
sbb
cli
mov
or
and
adc
out
push
inc
(bad)
jg
cmp
ja
adc
pop
lock
mov
call
bound
je
sub
and
add
ror
test
jp
imul
cmp
loop
rcl
inc
in
cmp
jg
or
xor
rcr
xchg
mov
adc
iret
mov
rcl
sub
ins
mov
pop
add
out
aaa
sub
push
or
cmp
ds
inc
push
mov
sbb
shr
stos
in
(bad)
jecxz
loope
js
mov
out
fadd
push
fimul
nop
lahf
(bad)
outs
sub
ret
mov
inc
ins
mov
mov
adc
or
inc
cld
cmps
jg
cmp
fmul
fnstenv
jo
pop
xor
cs
or
aas
add
(bad)
jg
push
jnp
add
or
or
or
clc
cs
adc
xchg
inc
add
push
add
add
add
jne
sbb
push
jo
push
test
or
mov
sbb
rcl
mov
std
loope
cmp
pop
cmp
aam
mov
mov
jg
inc
inc
dec
add
add
movs
jle
adc
sar
sbb
jle
enter
push
jge
xor
add
sub
lea
and
(bad)
fstp
push
add
aas
rcl
adc
add
and
and
mov
js
adc
sbb
mov
ds
pushw
loop
sbb
dec
sbb
sbb
fcomp
inc
ss
cmp
pop
dec
jmp
js
sbb
push
push
pop
or
push
or
(bad)
lahf
push
push
not
mov
sub
pop
test
mov
dec
or
clc
bound
hlt
mov
cmp
shl
inc
push
mov
inc
add
jb
mov
mov
jle
push
call
cmp
ins
cli
or
(bad)
push
cli
(bad)
data16
fidivr
jae
add
mov
mov
adc
xchg
lods
mov
jno
cmp
setb
rcl
pop
or
mov
das
test
xchg
(bad)
xchg
rol
stos
mov
mov
imul
test
cld
test
sub
and
or
adc
bound
sub
mov
cmp
ja
xchg
aad
dec
or
inc
sub
loop
ja
inc
sar
or
mov
dec
add
cs
cmp
mov
cmp
sbb
outs
push
push
pop
mov
mov
sub
fmul
pop
ret
int3
adc
xor
(bad)
les
jle
push
sbb
inc
aad
ret
call
push
mov
gs
or
or
mov
jmp
cld
addr16
ror
inc
inc
and
pop
clc
mov
inc
and
push
dec
adc
mov
dec
out
cmp
push
out
pop
lea
aas
fcmovu
mov
(bad)
cmp
add
ja
jo
stos
push
push
jae
add
cmp
push
js
pusha
jnp
dec
inc
cmp
xor
ficom
xor
xchg
add
popa
sub
lea
call
cmp
mov
pop
cmp
lea
sbb
das
jmp
dec
(bad)
mov
xchg
(bad)
jmp
dec
loop
rol
fistp
scas
inc
push
inc
add
retf
or
push
ror
cdq
cmp
loop
repnz
shr
inc
inc
add
rcl
std
mov
mov
inc
xor
mov
cmp
mov
xchg
lahf
or
cs
adc
jbe
std
sub
pop
add
jb
and
jg
cmps
shl
adc
repz
jb
mov
sar
jg
std
sbb
inc
mov
shr
sub
mov
sub
push
dec
mov
mov
cmps
cmps
or
mov
and
ror
jl
lea
jp
lock
ret
add
sub
push
pop
xchg
add
in
push
jo
out
xchg
jl
push
push
push
mov
add
mul
out
or
repz
cld
jo
pushf
lea
movs
sub
mov
fmul
imul
pop
jb
pop
add
add
leave
stos
lock
sbb
mov
push
push
mov
push
and
jno
add
or
sub
lock
inc
xchg
dec
inc
xchg
out
and
xorps
xchg
out
pop
lods
xchg
mov
or
test
mov
jo
sahf
je
cmp
mov
jmp
and
push
pop
add
add
stos
mov
mov
jl
pop
push
push
daa
mov
adc
jae
popa
mov
adc
mov
dec
jp
(bad)
jg
hlt
je
sbb
loopne
mov
xor
jle
icebp
ret
push
(bad)
ins
fs
and
sahf
jb
add
and
sub
mov
xchg
sub
js
mov
call
and
mov
cli
jno
out
push
dec
data16
xor
cmp
jbe
push
xchg
pop
dec
or
mov
(bad)
mov
mov
push
imul
iret
inc
sub
xor
rcr
loopne
dec
(bad)
xlat
in
mov
mov
cmp
push
or
pushw
pop
pushf
rcr
push
dec
add
hlt
aaa
inc
lds
push
mov
xlat
shr
xor
sub
xor
fs
cmp
mov
pop
dec
test
xchg
(bad)
jmp
pop
pop
mov
mov
and
cmp
xor
cwde
mov
sbb
mov
lock
test
push
mov
sub
jl
imul
push
shl
inc
dec
pop
dec
cmps
pushf
mov
je
push
push
add
outs
mov
fadd
mov
jb
or
into
iret
mov
test
jo
mov
outs
retf
out
lea
lods
pop
and
or
pop
add
test
add
jp
loop
sub
inc
(bad)
cmp
jae
dec
jne
pop
jmp
sub
add
mov
shl
inc
mov
mul
push
jle
push
dec
fwait
mov
jp
jbe
push
imul
aam
xchg
pop
mov
rol
dec
lods
mov
int
fwait
movntps
jae
add
loope
sbb
push
pop
adc
xor
jno
out
dec
fcomp
enter
call
and
inc
mov
mov
mov
cmps
dec
mov
dec
mov
cmp
imul
push
adc
add
push
add
sbb
addr16
or
mov
mov
add
aam
cld
pop
push
push
cmp
rol
sbb
mov
nop
test
lock
cmp
push
pushw
test
je
aas
push
cmp
add
add
sahf
add
jbe
add
cdq
cli
xchg
jge
fiadd
add
dec
jle
lea
adc
jne
int3
xor
cmp
push
ror
in
lahf
pop
mov
push
inc
idiv
inc
daa
dec
(bad)
shl
push
fadd
mov
xor
sub
push
add
ja
cmp
adc
out
ret
dec
jmp
in
push
cmp
jbe
aaa
mov
cmp
ja
cmp
je
or
lods
and
cmp
ja
fidiv
and
xchg
jne
pop
cwde
xlat
add
jg
mov
lods
hlt
loope
ins
stc
xchg
scas
rol
xchg
pop
xchg
mov
mov
ror
xlat
lea
mov
aas
out
adc
sahf
jo
mov
mov
add
push
jae
test
and
mov
fst
inc
inc
xchg
rol
push
or
sbb
push
push
jo
xor
hlt
call
sahf
cmc
lods
ret
mov
inc
inc
push
sbb
out
or
inc
add
inc
adc
xchg
inc
je
push
or
adc
jecxz
mov
jo
out
inc
test
sahf
sbb
push
mov
or
sbb
imul
pop
test
cmp
cmp
stos
fs
push
push
and
pop
movs
scas
mov
inc
call
push
int3
push
pusha
ins
test
movs
test
xchg
fild
or
jmp
jae
out
jo
popf
out
in
push
imul
out
lods
rol
movs
adc
cld
(bad)
pop
dec
sub
or
and
cmp
out
xchg
pop
mov
mov
mov
or
fsub
cmp
sbb
jb
sbb
scas
pop
in
mov
adc
sbb
xor
dec
sbb
xchg
cld
fsub
lahf
jmp
lds
add
jle
push
dec
test
sar
push
call
mov
sbb
(bad)
rol
loopne
mov
jmp
fisttp
pop
inc
les
out
idiv
fidivr
rcl
ror
pusha
jbe
dec
fstp
pop
jg
sbb
add
les
test
int3
mov
mov
and
jl
and
mov
cmp
ja
loope
fimul
cmp
je
jecxz
not
sub
cwde
pushf
adc
clc
stc
neg
and
retf
ja
pop
inc
sub
retfw
mov
rcl
mov
mov
pop
push
pop
sbb
push
ja
cmp
call
cmp
mov
add
cmp
mov
call
mov
repz
mov
or
xor
iret
dec
inc
xchg
rol
mov
push
ret
outs
shl
add
icebp
and
or
fsub
push
or
out
sub
mov
ror
xor
fwait
jmp
cli
not
test
je
bound
pop
outs
cs
gs
ret
adc
dec
inc
fimul
or
into
xchg
icebp
push
nop
out
sbb
arpl
xchg
adc
es
dec
add
sub
dec
ins
pushf
dec
or
add
jecxz
int
push
inc
nop
lock
jl
push
clc
xor
cmp
sub
mov
les
cmp
add
rcl
popf
mov
sbb
adc
lock
push
inc
inc
cmp
fnsave
adc
aas
rol
xor
push
daa
sub
shr
pop
or
test
dec
cld
lods
mov
hlt
xor
adc
add
and
sub
lods
ds
ror
lea
adc
test
(bad)
bound
mov
enter
sbb
dec
rcr
js
or
adc
and
jle
icebp
sbb
(bad)
inc
js
nop
fcomp
out
dec
hlt
fwait
sbb
xor
mov
retf
push
add
and
push
sub
xor
sbb
pop
je
dec
mov
push
push
dec
fsub
pop
add
cs
sub
je
sub
ins
xor
add
xchg
sub
clc
or
add
or
push
hlt
cmp
jbe
inc
cmp
jb
mov
test
shr
fcomp
adc
cs
jmp
cmp
rol
and
hlt
(bad)
xor
xchg
rol
fsub
loopne
in
loopne
adc
loopne
push
or
mov
or
ret
in
fdiv
out
iret
or
add
pmaxsw
mov
mov
cmp
je
jbe
adc
push
(bad)
push
add
outs
inc
and
or
adc
mov
adc
pop
adc
aam
in
repz
std
adc
fiadd
mov
or
adc
rol
lahf
ret
scas
lock
inc
nop
adc
call
xor
adc
push
adc
adc
add
ret
sbb
push
(bad)
jmp
stc
jp
pop
mov
ret
popa
and
cmp
pop
xchg
mov
inc
add
ja
inc
rol
into
aaa
or
jo
sbb
fld
cmc
arpl
add
call
adc
jno
inc
jb
push
cmp
js
dec
call
add
inc
adc
sbb
sbb
jge
nop
popa
lds
sbb
mov
loopne
sub
test
push
sub
into
ins
out
mov
push
xchg
xchg
loope
add
data16
jg
out
les
mov
inc
push
lea
xchg
push
mov
cmp
js
call
inc
cmp
jb
clc
pop
mov
fmul
push
inc
inc
xchg
adc
inc
retf
sbb
xchg
pop
xchg
pop
ror
adc
shr
ret
xor
aas
mov
push
push
mov
in
lods
jmp
mov
scas
test
mov
xor
pop
mov
push
dec
mov
pop
scas
or
adc
inc
rcr
push
or
out
dec
les
xchg
fmul
mov
mov
cmps
aam
inc
inc
mov
and
xlat
ret
in
mov
lea
les
ror
xchg
or
jne
retf
arpl
rol
stos
jl
push
les
jl
mov
add
sub
and
retf
call
(bad)
dec
ror
(bad)
arpl
out
fdivr
sub
test
bound
lds
push
data16
cmp
xchg
mov
ja
push
xchg
lods
fcmovnb
mov
or
inc
out
or
add
mov
add
cwde
push
aad
inc
mov
ja
int3
enter
jmp
cmp
or
pop
add
mov
int
and
fiadd
adc
(bad)
xchg
mov
mov
or
js
addr16
or
xor
adc
mov
xor
and
rol
in
mov
repnz
imul
rol
push
(bad)
jo
cmp
cmp
mov
sbb
adc
pusha
push
jb
enter
ret
je
jbe
retf
frstor
or
add
sub
inc
pop
mov
out
sar
sbb
test
push
xor
aas
cs
add
loopne
add
jne
xchg
lods
mov
pop
pop
or
xor
stc
int3
cmp
scas
jl
aaa
test
shl
lds
cmp
sete
jo
cmp
pusha
cmp
sub
sub
push
imul
add
or
xor
(bad)
int
icebp
add
xor
or
xor
sbb
or
dec
push
and
adc
adc
push
adc
ret
add
sbb
mov
ficom
pop
jb
sbb
ret
sbb
add
stos
aaa
pcmpgtw
dec
add
bnd
ret
mov
dec
push
neg
sbb
cwde
nop
cmp
fs
dec
call
and
out
dec
cmp
adc
or
xchg
xchg
sahf
in
jne
int
lock
jbe
mov
rol
pop
(bad)
mov
lock
lahf
and
mov
out
fistp
adc
xor
(bad)
mov
ja
sbb
and
mov
add
aas
lahf
aad
xchg
pop
fbld
retf
jne
fisttp
pop
sub
(bad)
fbld
shl
sbb
adc
dec
inc
dec
mov
bnd
loope
inc
inc
cmp
loop
scas
fstp
cld
add
mov
sub
(bad)
js
nop
or
cmp
test
inc
jle
mov
sahf
mov
loope
ficom
les
adc
xor
fsubrp
and
gs
xchg
retf
in
or
fcom
ror
loopne
rcl
push
xor
push
inc
dec
nop
hlt
nop
lock
or
sub
call
or
repnz
lods
rol
mov
or
add
popa
mov
inc
mov
ret
jns
ds
rol
dec
and
sub
inc
ds
jb
nop
pop
les
pushf
les
and
mov
sbb
and
mov
dec
sub
movs
(bad)
mov
mov
shl
repz
fdiv
pop
test
jne
dec
jns
adc
mov
sbb
loop
dec
mov
jns
jne
rcl
fistp
cmp
stc
cmp
or
pop
mov
enter
add
dec
sub
mov
retf
push
and
pop
mov
cmp
mov
fldcw
fcmovu
cmp
mov
jl
aaa
inc
test
or
mul
mov
jne
cld
jmp
je
scas
js
push
cmp
ja
inc
inc
push
xchg
jbe
adc
in
adc
push
popa
add
jns
cmps
xchg
fist
pop
dec
or
adc
mov
imul
inc
fisttp
cmp
out
mov
rol
ret
mov
xchg
jae
clc
sub
(bad)
js
push
mov
rcl
xadd
mov
dec
retf
mov
xchg
xor
sbb
mov
bound
push
sbb
(bad)
pop
mov
mov
mov
mov
jne
cmp
push
and
cwde
int3
mov
idiv
mov
outs
inc
and
(bad)
iret
aas
fisttp
or
cdq
sbb
jmp
lahf
dec
add
sub
pcmpeqw
dec
mov
fsub
call
push
xor
dec
sbb
(bad)
cld
in
outs
mov
push
sub
cmp
jle
xlat
add
jae
and
sub
add
iret
and
or
push
push
mov
mov
sbb
bound
cld
and
sbb
sbb
mov
ins
int
sub
jecxz
cmp
jae
lahf
in
int3
fist
sub
ror
sub
inc
icebp
in
sbb
jae
lea
add
inc
inc
mov
repz
mov
aas
xor
mov
sub
inc
cmp
jb
add
inc
mov
add
loopne
sbb
lahf
shr
inc
daa
jl
add
pop
loope
xchg
or
xchg
fcomp
add
cmp
push
lahf
add
inc
pop
add
gs
test
cmp
dec
inc
cmp
(bad)
int
pop
pop
inc
add
or
lahf
push
imul
mov
in
mov
add
add
dec
push
sub
cwde
or
aas
repnz
sub
mov
add
pop
pop
or
mov
daa
cmp
shr
pop
mov
add
pop
or
inc
jb
movzx
adc
and
test
add
retf
add
sar
scas
lock
mov
in
push
mov
fcomp
xchg
pop
pop
mov
loopne
mov
sbb
aas
dec
in
pop
addr16
loopne
movs
shr
dec
inc
add
loope
clc
clc
mov
stc
jo
fmul
cmp
retf
pop
pop
loopne
(bad)
cdq
loope
scas
movs
repnz
enter
popa
jmp
adc
popf
add
mov
mov
or
push
pop
adc
xor
adc
sub
hlt
or
cmps
add
rcl
inc
mov
test
dec
repz
adc
lock
test
cmp
or
fld
xor
ror
xchg
(bad)
xor
imul
(bad)
loop
cli
mov
cmp
sahf
jns
cmp
mov
mov
cmc
int3
mov
inc
cmp
jae
jge
or
dec
or
jae
jbe
fs
out
repnz
pop
mov
retf
lahf
pop
jns
jns
add
test
and
call
ficom
jnp
adc
ret
cmc
push
sti
pop
cmp
stc
sbb
inc
adc
cli
imul
jmp
cmp
jne
inc
ret
repz
inc
mov
and
jo
mov
popa
shr
in
stc
mov
cwde
or
mov
inc
pop
fild
call
stos
cld
int
sbb
push
jle
shl
pop
sub
daa
sub
push
stc
(bad)
adc
add
cli
shr
pop
push
add
push
and
cli
add
add
ret
loopne
fisttp
iret
pusha
test
loopne
push
mov
loop
(bad)
mov
mov
xchg
ja
cmp
out
or
out
inc
mov
pop
js
mov
jl
mov
outs
fdiv
clc
ins
icebp
push
inc
mov
je
mov
xchg
push
push
test
jbe
int
lods
popa
sbb
pop
add
cmps
adc
hlt
data16
lea
mov
jmp
cmps
add
xor
nop
mov
mov
inc
sub
adc
(bad)
scas
jle
adc
xchg
clc
xchg
xchg
xor
fadd
or
and
mov
repnz
cmp
jle
jle
mov
add
cmp
jle
push
adc
xor
sbb
in
lods
stc
push
xor
ds
cmp
(bad)
push
sbb
or
or
js
jle
push
xchg
dec
xor
push
mov
xchg
ret
loop
inc
jmp
shl
das
dec
shl
loopne
or
mov
jl
pop
dec
xor
sar
xchg
push
or
mov
sub
mov
or
xchg
iret
or
push
jo
push
sbb
xchg
cmp
or
or
mov
retf
mov
loop
sahf
clc
xchg
jecxz
sahf
cmp
pop
sub
sub
popf
icebp
cmp
pop
mov
loopne
aaa
(bad)
xchg
sbb
cmp
movs
mov
mov
cld
cmp
xchg
inc
cmp
mov
xchg
push
adc
sbb
add
movs
rcl
jo
sub
fisubr
xlat
push
pop
call
adc
fucom
dec
cmp
and
sar
jg
jmp
cmp
jbe
adc
jne
in
or
pushf
loop
inc
pop
js
cmps
imul
or
outs
push
push
in
dec
rol
add
in
(bad)
lods
pop
push
mov
push
cmp
dec
jae
cmp
sbb
call
popf
xchg
lea
loopne
mov
popa
adc
mov
mov
jnp
aas
nop
add
jl
pop
jp
std
jmp
pop
pop
xor
cdq
push
push
call
xor
pop
push
std
sbb
jns
test
dec
or
jbe
rep
mov
daa
cmp
fistp
or
cmp
pop
mov
add
ss
ror
sbb
cmp
jp
nop
stos
imul
push
rcr
jg
push
sbb
sbb
in
or
pushf
adc
sbb
mov
in
xor
push
xor
fwait
icebp
adc
(bad)
mov
mov
adc
cmp
rcr
leave
push
lea
pop
dec
retf
ret
xor
sti
cwde
xor
sub
cmps
or
dec
or
and
rol
retf
or
xor
add
xor
test
push
xchg
mov
sub
add
(bad)
js
inc
and
push
push
sti
pop
(bad)
aad
mov
sbb
jb
sbb
or
mov
mov
mul
out
nop
sub
xchg
mov
adc
test
push
inc
nop
cdq
add
inc
stc
push
add
jne
dec
sbb
ins
mov
mov
jecxz
fisubr
mov
test
in
mov
aas
push
mov
jns
adc
mov
(bad)
jns
rcr
cmc
mov
mov
popa
sub
and
imul
mov
push
and
push
adc
inc
push
sbb
sub
push
push
or
ss
add
scas
sbb
pop
mov
mov
pop
xor
lea
or
test
es
sub
sbb
xor
adc
add
sub
cs
lea
(bad)
sbb
xor
xchg
pushf
pop
sbb
cmp
ds
mov
inc
inc
and
inc
dec
mov
loopne
xor
aaa
and
pop
push
lock
push
mov
sub
inc
ret
mov
neg
pop
mov
add
mov
jno
or
pushf
lea
or
pop
imul
es
pop
rcr
xor
add
xor
rcr
cmp
add
inc
cmp
inc
inc
in
mov
or
daa
int
dec
or
dec
cmp
cvtps2pd
sub
mov
and
ja
xlat
mov
and
mov
pop
mov
jns
pop
inc
mov
adc
(bad)
ret
in
and
inc
mov
test
sbb
pop
neg
push
ja
or
mov
aaa
and
pop
dec
or
gs
sub
xor
mov
adc
pop
iret
fild
movs
sub
cmp
iret
repz
mov
(bad)
repz
aas
xchg
xor
(bad)
push
leave
daa
mov
fist
jbe
cmp
aas
mov
push
push
push
fidivr
push
push
std
rol
or
inc
(bad)
dec
add
push
inc
or
pop
cs
push
push
pop
add
retf
in
fs
jle
xor
cwde
cmc
dec
pushf
test
push
adc
sub
test
test
pop
pop
dec
inc
ret
mov
inc
push
pop
aas
xchg
add
ret
xchg
clc
shr
out
add
idiv
(bad)
retf
push
jmp
jb
fsubr
push
dec
push
push
mov
inc
inc
inc
and
cmp
add
or
push
cmp
fnstenv
cmp
dec
dec
fldcw
es
mov
sub
je
dec
push
mov
cmc
adc
sub
or
loope
adc
add
add
sar
pop
cs
add
loopne
aam
mov
xchg
lock
or
or
pop
in
cld
xchg
test
sbb
jbe
jo
inc
scas
jg
xor
fisttp
cmp
(bad)
sub
lahf
lods
mov
test
cld
pop
ret
push
mov
adc
mov
inc
jl
adc
add
imul
add
or
mov
cmp
sbb
ins
fcom
rcl
das
push
or
adc
test
push
mov
test
ficomp
sub
xchg
(bad)
jmp
adc
fwait
ins
mov
rcr
sub
mov
loopne
xchg
pop
jne
clc
or
repz
loope
adc
xor
lea
mov
shl
add
test
push
(bad)
repnz
mov
add
dec
pop
inc
add
dec
jne
push
pushf
inc
xchg
cmp
jb
cmp
or
cmps
repnz
dec
ret
aaa
repz
or
push
mov
add
je
dec
retf
clc
sbb
add
add
cmp
adc
repz
or
cmp
ins
or
mov
icebp
(bad)
mov
jb
adc
daa
mov
out
jno
test
cmp
pushf
and
dec
jnp
ins
push
and
fisttp
cli
cmp
dec
aas
(bad)
add
xor
push
leave
push
lahf
test
mov
mov
push
adc
add
add
dec
jbe
sbb
cld
inc
xchg
jecxz
or
inc
or
retf
mov
xor
jmp
popf
dec
or
es
scas
rol
push
rol
xor
or
jge
mov
sub
and
sti
push
xchg
data16
sti
mov
popf
xchg
pop
lea
add
add
mov
or
rcl
jmp
mov
sahf
adc
retf
sub
add
out
add
add
out
sahf
out
add
pop
add
mov
mov
jo
loop
jnp
xor
std
std
sbb
dec
add
dec
mov
add
add
mov
cmp
add
pop
call
push
out
aad
imul
rcl
mov
add
aad
js
or
or
daa
ins
loopne
mov
xchg
xchg
popa
dec
mov
lock
xlat
add
dec
xchg
call
xor
cmp
push
or
lahf
add
retf
cld
nop
mov
cmps
gs
in
cld
add
adc
mov
push
cmp
adc
aam
pop
add
adc
dec
mov
loopne
fiadd
out
movs
dec
div
mov
add
mov
sbb
lods
jns
cmp
mov
add
pop
sahf
nop
sub
rcl
mov
inc
inc
jo
stc
sbb
cmp
lfs
shld
repnz
inc
inc
loopne
sbb
lock
or
lods
add
sub
lock
mov
jge
or
shl
mov
xchg
mov
mov
sar
xchg
iret
loopne
inc
and
loope
sar
sbb
mov
mov
inc
sub
jge
ds
lods
cmp
mov
inc
inc
mov
loopne
cmp
shl
scas
mov
jb
jp
mov
rcr
sub
sahf
pop
mov
iret
adc
sbb
pusha
inc
in
xor
mov
cli
(bad)
mov
daa
jo
dec
xor
mov
xchg
lock
dec
mov
adc
mov
mov
sbb
dec
ret
sbb
(bad)
push
inc
sbb
rcr
mov
inc
sahf
leave
cmp
retf
rep
ret
dec
add
outs
loopne
sbb
push
nop
mov
test
xchg
fisttp
jo
call
fsub
fist
cdq
pusha
dec
loope
jbe
jne
(bad)
sub
loopne
jmp
mov
xor
out
ret
dec
sub
ror
nop
and
sahf
dec
lea
cmp
cmp
jbe
pop
pop
add
sbb
or
stc
push
mov
xor
push
xor
push
call
and
icebp
pop
fs
mov
xchg
and
push
mov
xchg
and
or
xchg
retf
movs
push
push
pop
push
push
push
push
pop
mov
push
(bad)
or
push
test
jp
jae
gs
mov
dec
add
add
xor
xor
sar
inc
outs
imul
mov
push
and
inc
leave
xorps
idiv
push
in
or
dec
mov
pop
cmp
jl
xchg
mov
sti
cld
mov
add
retf
sar
rcl
xchg
imul
pop
js
pop
or
xor
mov
pushf
and
sbb
mov
inc
mov
mov
popa
and
add
sar
mov
pop
popa
mov
nop
xchg
inc
add
dec
add
xchg
sbb
xor
nop
inc
ss
jns
sbb
adc
cmp
jns
ficom
jge
jmp
nop
pop
or
in
aaa
cs
cmp
sbb
imul
add
nop
jmp
add
pop
add
mov
ret
and
add
fstp
stos
inc
or
xchg
lahf
bnd
jne
xchg
stc
stc
mov
jne
lahf
jmp
dec
dec
in
or
test
int
sahf
dec
imul
cmp
repz
scas
sahf
mov
mov
jg
rcr
push
sahf
push
popa
cmp
lahf
fstp
push
sar
repz
push
add
pop
rep
dec
fistp
inc
repnz
lea
sub
iret
inc
add
test
retf
add
or
icebp
(bad)
dec
mov
jge
adc
mov
(bad)
pushf
dec
jnp
sub
push
add
sbb
loopne
adc
adc
mov
inc
push
add
call
lahf
jecxz
mov
sub
xchg
dec
mov
lahf
(bad)
and
cmp
ss
add
push
dec
adc
out
aaa
xor
popa
cmp
adc
pop
mov
fldcw
push
mov
and
mov
sbb
cmp
and
adc
test
mov
int3
push
aas
ror
add
rol
dec
enter
jg
sbb
xor
enter
pop
sbb
mov
push
ss
clc
lea
adc
sbb
fmul
push
pop
dec
mov
popf
int3
xchg
jle
push
cs
jbe
pop
jne
or
div
cmp
and
cwde
mov
fucomp
das
fcomp
sub
pushw
(bad)
mov
inc
and
imul
xor
stos
jecxz
push
mov
jle
and
adc
cmp
jl
jmp
(bad)
cmp
jl
mov
inc
mov
mov
ins
fadd
loope
mov
mov
pusha
inc
xor
jae
mov
cmp
jl
xchg
fcom
test
inc
inc
push
je
jl
fcom
jp
inc
pusha
and
in
xor
inc
mov
in
and
xchg
test
sbb
mov
xor
(bad)
and
and
sub
call
aaa
jns
sub
daa
ficom
pop
pop
jmp
push
dec
int
(bad)
jle
mov
int
fld
lea
dec
jbe
sbb
push
pop
mov
push
call
lds
pop
mov
mov
sbb
mov
inc
sbb
jmp
jmp
add
add
sub
sub
inc
(bad)
shr
jo
push
mov
pop
cdq
out
mov
cwde
pop
mov
add
xor
adc
inc
xor
lahf
xor
pop
mov
add
lods
in
add
pop
lea
lea
add
xlat
or
add
adc
add
xor
mov
(bad)
test
jmp
jo
mov
(bad)
cmp
jmp
dec
sbb
or
fistp
popa
(bad)
push
adc
pop
sub
sar
cmp
fucomip
xchg
push
into
jns
aas
xchg
pusha
or
sub
cli
test
cmp
ja
mov
add
push
push
addr16
inc
pop
mov
sbb
xor
cmps
inc
ret
sub
dec
shl
xor
inc
sbb
mov
ins
sub
sub
pop
imul
mov
lods
pop
xchg
cmp
stos
xchg
in
pop
outs
dec
push
and
cmps
pusha
adc
inc
push
sar
mov
cld
push
add
loopne
fmul
ins
pop
out
or
ficom
push
dec
rcr
inc
xchg
cld
sbb
ret
push
sbb
mov
in
lahf
shr
inc
fcomp
jp
cld
arpl
aaa
je
cmp
(bad)
mov
sub
dec
add
push
(bad)
stc
jbe
or
mov
push
or
inc
cmp
test
sar
cwde
dec
outs
(bad)
mov
push
mov
add
push
mov
mov
sub
into
cmp
call
outs
pusha
mov
push
and
mov
adc
push
mov
jecxz
cdq
or
dec
and
icebp
xor
inc
cld
sub
or
cmp
sub
pop
ds
loope
mov
mov
(bad)
ss
cmp
je
popa
add
cmp
mov
jbe
cdq
and
jmp
sahf
push
ret
xchg
jae
mov
sub
xchg
jp
outs
jmp
pop
dec
inc
fwait
mov
adc
mov
dec
nop
add
push
xor
ror
adc
cmps
lock
xor
ret
adc
add
sub
sub
xor
jecxz
mov
(bad)
xchg
adc
xor
and
subps
add
rol
test
ins
arpl
shl
add
jb
(bad)
(bad)
fdiv
cmp
mov
inc
clc
ds
push
fidivr
jl
cmps
mov
mov
adc
adc
out
les
rcl
loope
push
sbb
cli
jbe
mov
mov
js
push
inc
and
jle
divps
mov
imul
xlat
jb
out
xchg
sbb
es
add
sub
sbb
fisttp
mov
iret
pop
dec
cmps
stos
add
jge
push
and
mov
dec
sub
inc
sub
lea
cli
cmp
adc
pop
es
es
ja
and
loopne
add
jg
push
push
inc
xlat
push
cmp
push
or
sub
sub
xchg
stos
or
mov
xor
sub
push
sub
shr
push
lahf
and
iret
fmul
cmps
rcl
es
inc
outs
xlat
mov
add
shl
pusha
jbe
add
push
int
ror
push
js
je
or
rcl
jns
mov
retf
dec
dec
jb
inc
or
pop
mov
or
scas
enter
cmp
add
xchg
cli
call
or
adc
mov
push
dec
push
call
fcom
pop
or
call
add
adc
xor
add
leave
js
sub
or
rcl
cmp
mov
imul
call
pop
sub
loopne
lea
cmp
and
cmc
and
mov
rcr
xor
cmp
les
mov
mov
add
dec
jmp
add
mov
lods
mov
push
and
aad
sub
mov
jg
push
xor
xlat
jle
bound
pop
jle
inc
ss
sub
add
xor
push
es
and
sub
sub
pop
stos
jns
xor
pop
ret
aas
mov
or
test
mov
jb
and
add
mov
mov
inc
inc
data16
mov
sti
mov
add
add
js
int
add
and
jg
(bad)
loop
ins
xor
out
enter
mov
add
lods
cmp
sbb
adc
into
je
add
sbb
xlat
popa
gs
movs
into
(bad)
lock
xchg
add
js
icebp
jb
jno
sti
sbb
or
jbe
dec
lods
sub
sbb
mov
or
call
mov
jae
xchg
enter
dec
bnd
mov
lods
sar
dec
adc
pop
jnp
rcr
mov
adc
js
std
push
xor
sub
inc
mov
(bad)
sbb
jecxz
retf
sub
push
add
sub
add
mov
push
xchg
fsub
int3
imul
sbb
inc
sbb
add
psubsb
outs
test
loopne
cmp
push
inc
popa
mov
rol
mov
pop
bound
cmc
mov
add
pop
dec
add
inc
imul
adc
mov
push
jecxz
call
cmp
enter
cmp
push
add
lock
push
push
clc
pop
mov
(bad)
pcmpgtd
xor
pop
lock
(bad)
aad
pop
jl
inc
mov
sbb
mov
out
or
cmc
clc
mov
rcr
lahf
inc
scas
push
push
inc
repnz
cmp
xor
fwait
add
das
add
test
add
jmp
xor
lock
js
push
inc
adc
mov
sub
mov
mov
sbb
pop
adc
inc
xchg
ret
movs
sbb
cmps
sti
popa
push
and
jbe
ins
bound
je
fist
add
jnp
jmp
jae
dec
sbb
inc
sbb
cwde
test
sbb
loope
sbb
xlat
mov
inc
xchg
and
dec
adc
pop
push
cmp
loop
or
xchg
jb
and
lock
(bad)
icebp
or
jns
mov
lea
add
cmp
cwde
xchg
jae
retf
movs
stc
xor
dec
or
cmp
arpl
je
adc
jne
rcl
stos
mov
add
push
sub
xor
int3
push
in
int3
and
or
gs
mov
sub
cmp
push
push
pop
cld
lea
adc
cmps
cmp
xchg
jg
icebp
je
dec
loop
shl
add
shl
cmp
xor
lods
pop
dec
adc
sub
sbb
adc
andnps
mov
or
(bad)
push
test
in
inc
in
(bad)
and
mov
cwde
jne
shl
jno
sub
sbb
clc
xlat
push
add
cmps
in
xchg
scas
xor
mov
fisttp
rcl
rcr
push
clc
inc
call
cmp
mov
sti
aas
push
fs
add
mov
ins
cmp
pop
ret
mov
shl
mov
pop
and
add
(bad)
or
je
test
inc
push
jb
and
lahf
pushf
inc
je
xchg
out
cmp
push
dec
mov
add
sbb
sub
add
adc
div
pop
push
test
add
mov
adc
neg
add
pop
jne
(bad)
cmp
ja
mov
or
mov
jae
sub
sbb
xchg
sbb
in
hlt
xor
pop
mov
jbe
jmp
cli
dec
clc
add
or
daa
test
fucom
ds
idiv
nop
int
jg
jl
xor
scas
nop
fidivr
out
push
das
add
jl
jg
cmp
ja
fst
or
inc
xor
mov
imul
fwait
gs
xchg
mov
jae
sub
cmp
add
pop
xor
jne
repz
mov
add
movs
xchg
or
shl
add
pop
ins
loop
jmp
add
pop
loop
mov
ret
pop
jne
(bad)
mov
pop
or
arpl
rcr
xchg
mov
mov
add
ss
fwait
cld
pop
in
imul
or
test
add
cmps
push
sbb
adc
mov
cmp
sub
mov
inc
push
pop
mov
adc
rol
or
jecxz
xor
pcmpeqw
leave
and
cmp
mov
loop
sbb
test
mov
push
mov
por
mov
stc
adc
sbb
inc
(bad)
lock
jmp
pop
xor
idiv
adc
mov
mov
pop
pop
pop
push
xor
arpl
int3
push
(bad)
lahf
sbb
pusha
cmp
add
(bad)
in
repnz
inc
inc
jb
(bad)
rcl
push
mov
mov
push
and
loop
mov
xchg
add
ins
adc
sub
dec
sub
mov
adc
push
lods
and
inc
push
or
dec
enter
pop
xchg
rcr
push
cli
scas
(bad)
and
pushf
add
cs
repnz
mov
dec
xor
inc
aaa
aas
or
(bad)
pop
jge
mov
or
sbb
mov
iret
mov
add
jle
cmp
leave
aad
sub
clc
ins
xchg
cmp
mov
cmp
xor
add
add
mov
and
mov
cmp
punpckhdq
adc
test
int
push
mov
or
loopne
daa
jno
shl
icebp
ror
lahf
or
in
lock
inc
das
arpl
cs
mov
push
and
nop
sbb
or
jns
push
xor
dec
(bad)
hlt
push
or
adc
cmp
push
rol
pop
inc
jb
pop
push
mov
mov
add
ret
int3
jne
push
jnp
mov
or
add
rcl
daa
popa
in
popf
sbb
pop
ja
xchg
test
sbb
mov
xchg
mov
xchg
pop
push
sbb
sub
pop
aad
fdiv
push
lahf
xchg
stos
xor
div
inc
adc
ins
or
add
les
sub
ror
add
adc
pop
xor
mov
add
mov
and
frndint
test
test
and
cmp
pop
in
loopne
push
(bad)
mov
in
nop
sub
stos
mov
push
dec
inc
jecxz
cmp
fstp
pop
push
mov
push
mov
lea
mov
pusha
sbb
mov
pop
mov
xor
jb
icebp
imul
xor
je
ud0
lea
cmp
jb
(bad)
scas
add
push
lea
cld
cwde
mov
mov
dec
add
cmps
jnp
xchg
nop
mov
jmp
test
mov
dec
sub
jg
push
mov
sbb
pop
test
pusha
ror
add
jl
(bad)
ror
cmp
jae
or
dec
enter
rol
int
mov
ds
or
int3
or
ret
mov
cmp
mov
or
mov
shl
sub
fcomp
xor
hlt
jmp
or
jae
jecxz
ret
out
jge
jge
or
je
xchg
push
ins
sub
(bad)
leave
mov
dec
sbb
xchg
inc
mov
add
xchg
and
jb
cmp
test
pop
or
cmps
cmc
mov
add
cmp
jmp
xor
mov
jo
sub
and
sahf
movs
imul
arpl
xchg
bound
cmp
dec
inc
jno
mov
mov
sbb
test
inc
xchg
inc
cmp
jae
xor
sbb
mov
mov
add
inc
test
sbb
add
movs
inc
mov
xchg
xor
mov
xor
sub
icebp
cmp
cmp
jne
mov
sbb
test
rol
inc
adc
mov
sbb
mov
in
add
ret
dec
call
cmp
ins
shl
sbb
xchg
jle
pop
jo
daa
or
xchg
or
ror
cmc
sub
vucomiss
movs
mov
scas
test
mov
pusha
and
fs
adc
outs
push
push
mov
xor
(bad)
jp
test
push
shl
cwde
pusha
or
and
sbb
inc
(bad)
fcomp
test
sub
jg
xor
rcl
mov
xor
or
add
cwde
push
and
pop
inc
jb
fs
enter
mov
adc
adc
and
sbb
cmp
push
push
sar
scas
sub
pop
jl
mov
or
ins
cmp
add
pop
mov
dec
sub
pop
mov
test
data16
cmps
rol
loop
enter
push
adc
fimul
xor
js
imul
clc
imul
push
push
inc
inc
nop
push
enter
inc
jp
jg
xchg
push
call
pop
pop
scas
pop
inc
cmc
test
or
outs
inc
je
mov
cmps
ficomp
fimul
lahf
sbb
xor
inc
or
adc
push
mov
mov
lods
pop
xor
pop
das
sub
mov
out
lods
xchg
pop
sbb
push
das
adc
mov
lahf
dec
stos
or
cdq
or
sar
cmp
jae
mov
(bad)
loopne
adc
movs
lea
data16
movs
mov
and
add
fsub
add
enter
imul
(bad)
xchg
js
call
scas
mov
stos
add
xor
pop
retf
test
sbb
xchg
jo
lahf
js
push
jmp
or
pusha
stos
pop
call
mov
movs
leave
lds
cmp
jno
jecxz
sbb
mov
pop
xor
mov
aaa
call
add
jl
push
rcl
shl
rcr
xor
retf
mov
pop
repz
rcl
add
jbe
hlt
mov
frstor
int
or
loopne
call
in
lock
clc
ret
rol
push
aam
test
jo
call
ficom
push
jg
fsubr
pop
les
inc
add
sub
mov
push
rcl
imul
add
cmp
cmp
call
add
popa
daa
pop
cld
std
pushf
hlt
cld
mov
sbb
xchg
mov
jl
rol
xor
in
movs
cwde
enter
pop
mov
push
aam
je
or
or
fs
jns
or
test
pop
jnp
sbb
jne
jmp
sahf
in
jno
sbb
loope
mov
psrld
xor
sbb
cmp
or
aad
aad
inc
div
rcr
or
push
jne
mov
aam
pop
cwde
inc
outs
jmp
add
add
clc
pop
or
pop
(bad)
push
push
pop
je
xchg
scas
repnz
xor
loopne
leave
xlat
adc
adc
aas
adc
adc
fs
or
shld
xchg
fmul
dec
mov
pop
or
cmp
(bad)
jne
xor
or
push
in
xor
hlt
call
pop
lea
push
sub
mov
sub
add
pop
and
inc
(bad)
into
add
in
cmp
push
push
mov
clc
mov
stc
shr
xchg
jle
mov
jge
test
push
jb
mov
sub
or
xor
sar
or
adc
movs
les
push
pop
cli
test
mov
push
mov
jg
out
enter
add
mov
pop
push
or
lea
xchg
lods
dec
cmp
test
stc
add
imul
mov
out
nop
loopne
fadd
(bad)
cmp
xor
dec
ins
bound
add
fiadd
dec
ins
inc
push
aad
push
sbb
mov
nop
or
cdq
nop
or
cdq
nop
or
fmul
cmp
push
enter
loopne
sub
fs
cmp
mov
xchg
fs
std
repnz
(bad)
pop
iret
repz
adc
cmp
iret
repz
jns
mov
loop
mov
dec
jnp
out
ltr
cs
ret
jns
out
push
sub
call
xchg
mov
(bad)
out
(bad)
mov
add
push
pop
add
or
or
or
and
sub
movs
std
pusha
xor
adc
push
pusha
pop
sbb
cmp
jl
sbb
sbb
aas
test
dec
cmp
enter
mov
mov
rcl
jbe
daa
fcom
jmp
mov
imul
dec
pop
popa
ins
xchg
retf
inc
sbb
adc
jbe
sub
repnz
sti
inc
add
mov
shr
cmp
mov
sub
xchg
add
mov
ins
or
sub
sbb
push
adc
push
push
push
or
adc
pop
sub
xchg
adc
(bad)
div
add
jb
js
push
or
ins
lods
movs
shl
cdq
loopne
sub
cmps
fstp
mov
or
push
push
in
inc
jns
sub
sub
cmp
sqrtps
sbb
push
adc
mov
div
dec
ins
pop
jb
popa
pop
or
rcr
int3
ror
or
or
rcl
add
or
dec
push
push
add
push
or
push
lahf
ret
loopne
inc
or
pop
fcomp
fwait
add
test
pop
sbb
pop
xor
jl
ret
mov
push
mov
and
inc
push
loope
jecxz
test
or
and
js
fwait
ret
aas
push
repnz
shr
loopne
mov
xchg
and
xchg
jno
inc
xchg
mov
nop
or
imul
xchg
dec
inc
inc
imul
(bad)
jnp
inc
push
mov
lea
cwde
pop
jno
add
mov
jl
pop
out
inc
in
push
movs
and
ss
sub
sub
inc
loopne
cmp
sbb
into
sub
xchg
add
dec
or
out
dec
add
es
dec
cwde
je
js
in
fstp
or
stos
fwait
call
lahf
inc
stc
aaa
push
mov
rcr
add
outs
daa
inc
loop
shl
or
and
and
push
jmp
movs
icebp
call
shr
shl
push
jp
hlt
push
sar
imul
test
jae
push
and
push
cmp
jae
cmps
mov
repnz
push
sar
dec
inc
xor
lea
xchg
pop
mov
(bad)
pop
jae
(bad)
xor
push
repz
mov
rol
(bad)
ds
daa
clc
jb
(bad)
jbe
sub
dec
dec
pop
adc
(bad)
mov
mov
sbb
dec
adc
gs
sbb
loopne
fbld
not
or
sbb
or
sbb
mov
rol
pop
es
and
and
mov
push
stos
add
xor
stos
add
mov
xchg
or
push
sti
xlat
adc
fmul
mov
or
imul
loop
inc
xor
jmp
mov
loopne
mov
dec
mov
out
xchg
call
cmp
mov
xchg
push
push
push
cld
or
in
push
xchg
add
xchg
add
ja
test
inc
xchg
call
imul
add
rol
int3
ror
fmulp
mov
in
or
mov
lea
pop
ret
add
fmul
arpl
aam
dec
push
fld
mov
adc
fwait
sub
push
push
pop
cmps
outs
rcl
xchg
xchg
fsub
lock
mov
ds
push
push
int3
mov
lds
adc
daa
sbb
dec
retf
xor
push
lods
sub
add
in
push
sbb
lock
dec
je
sbb
xor
add
cmps
jp
loope
call
jnp
dec
inc
fidiv
dec
ret
or
inc
shl
pop
mov
shl
ds
jb
jnp
or
and
call
and
ror
hlt
test
jmp
dec
test
enter
mov
outs
sbb
rcl
inc
and
mov
push
fiadd
adc
mov
inc
pop
mov
leave
aas
cmp
nop
and
adc
cli
push
adc
push
in
aad
imul
retf
and
and
loopne
xor
push
jmp
adc
jecxz
out
ins
loop
push
push
mov
ret
enter
mov
adc
mov
cmp
loope
add
jne
jmp
pop
popa
call
pop
movs
mov
jge
and
out
add
mov
and
(bad)
cld
pushf
and
daa
or
push
add
add
cmp
sete
add
add
or
sub
(bad)
xor
inc
lea
add
inc
jmp
neg
pop
in
pop
lods
cmps
xor
leave
dec
and
add
sar
add
div
push
popf
or
xchg
and
and
je
rol
mov
push
add
mov
push
push
call
pop
adc
in
dec
inc
jne
(bad)
jle
and
jo
push
stos
gs
test
add
cmp
adc
adc
in
adc
push
ins
daa
nop
cmp
loope
nop
adc
mov
mov
movs
sub
lea
sub
mov
mov
test
test
(bad)
adc
add
(bad)
cli
adc
jl
xchg
or
out
and
imul
mov
and
je
xchg
ret
fxch
sub
mov
add
add
adc
mov
sub
cmp
call
mov
enter
adc
hlt
test
push
das
jb
xor
neg
mov
cmp
loop
inc
mov
push
ds
les
cmp
or
cdq
(bad)
rcr
jge
out
pusha
and
push
and
adc
jo
mov
push
push
repnz
cmp
outs
add
pop
mov
inc
push
push
push
xchg
sub
loopne
sub
push
jo
sub
dec
imul
cmps
cmps
js
mov
out
dec
sbb
mov
xchg
xor
clc
lock
xchg
data16
mov
stos
xchg
clc
or
push
add
xor
push
add
fisttp
stc
push
sub
ins
enter
sbb
mov
add
rcr
push
cs
dec
cmp
pop
cs
(bad)
in
or
mov
jb
je
popa
into
jge
push
push
repz
xchg
je
inc
or
mov
add
in
mov
add
and
xor
movs
paddsw
and
cmps
cmp
shr
add
xor
clc
xchg
jmp
scas
adc
inc
ds
fdivr
xor
mov
pop
jp
or
(bad)
mov
fs
sub
xchg
mov
cmp
addr16
mov
add
lock
daa
mov
les
pop
or
popf
es
xor
push
xor
shr
push
out
jo
pop
in
frstor
inc
inc
fisttp
mov
or
loope
ja
inc
fwait
push
push
push
ficom
or
dec
in
nop
adc
retf
sub
ins
sbb
or
lea
test
or
and
xor
adc
push
not
sbb
jmp
dec
jne
pop
adc
lea
mov
adc
pop
movs
fistp
test
or
push
or
sar
sub
int3
add
add
xchg
jo
xor
inc
push
repz
xchg
push
inc
cwde
and
into
out
sbb
push
dec
inc
cs
retw
loopne
out
sub
mov
push
mov
repnz
mov
or
cmp
jae
mov
xor
sub
or
cmp
mov
iret
inc
adc
sbb
mul
pop
inc
cmps
cmp
aaa
scas
(bad)
seto
lods
inc
mov
jmp
mov
inc
push
dec
add
dec
lods
adc
pop
add
xor
js
sbb
add
mov
adc
pop
inc
arpl
mov
(bad)
aas
jnp
dec
xor
mov
lods
test
cmp
sbb
mov
(bad)
mov
(bad)
sbb
test
cmp
jae
add
push
(bad)
fmul
mov
enter
pop
sub
pop
in
and
inc
jo
sub
adc
(bad)
ds
jo
retf
push
std
ret
mov
or
repz
jecxz
adc
add
push
shr
or
sti
and
out
add
lods
pop
cwde
popa
mov
or
push
jg
sbb
or
movs
fst
and
std
lahf
or
cmp
adc
or
dec
adc
xor
into
cmp
fwait
pop
adc
jne
push
sbb
ja
cmovb
push
lock
mov
(bad)
jecxz
bound
pop
mov
or
movs
and
push
pop
(bad)
(bad)
ja
push
jl
fsub
push
push
push
adc
jge
out
xor
cmp
xchg
sub
jg
add
cmps
jecxz
push
add
adc
mov
mov
movs
imul
popa
in
test
movs
and
jns
sbb
and
mov
adc
mov
adc
lock
rep
cmp
cs
dec
jae
or
or
in
mov
adc
jge
retf
sbb
cmp
or
mov
or
sub
mov
rcr
nop
jmp
xlat
(bad)
rcr
push
mov
mov
shr
mov
rol
add
call
lods
nop
call
ds
out
push
pop
fst
dec
add
out
push
(bad)
fisttp
adc
adc
fdiv
icebp
xchg
in
and
test
adc
(bad)
push
pop
mov
jecxz
mov
into
in
test
pushf
jne
xlat
loopne
inc
call
in
mov
add
add
or
lock
ror
dec
jne
mov
xchg
mov
movs
jo
inc
lods
or
sub
mov
inc
dec
sti
inc
or
adc
inc
popa
imul
dec
pusha
(bad)
jmp
xchg
ins
ror
sbb
jb
dec
call
enter
outs
cmp
loope
push
xor
cmp
inc
in
fdivr
push
ins
sti
cld
mov
popf
add
pop
arpl
out
fadd
mov
lahf
cmp
xor
stos
dec
out
mov
inc
fbld
in
pop
jg
or
arpl
dec
jo
mov
and
sbb
into
loopne
sbb
push
sub
cmp
aad
adc
or
xchg
or
in
push
or
adc
ret
pop
and
retf
(bad)
jg
shl
pusha
or
or
push
enter
outs
lea
inc
mov
xchg
pop
or
cmps
inc
pop
pusha
pop
jae
mov
push
push
lods
fcmovnb
pop
inc
scas
pop
mov
and
cli
or
and
inc
jnp
ds
add
adc
push
imul
fidivr
adc
jo
ror
mov
and
jg
ds
cmp
je
inc
cmp
les
inc
xor
(bad)
aas
cld
std
or
pop
dec
jb
mov
cmp
dec
pop
dec
add
xchg
lahf
popa
sub
mov
cs
or
or
push
jg
js
clc
push
dec
mov
add
or
and
inc
and
add
sub
push
out
ficom
xchg
or
push
xlat
cmp
inc
sub
add
add
or
sub
inc
jb
adc
jo
inc
jb
xor
sbb
push
jae
sbb
cmp
inc
test
bound
fwait
add
push
cmp
mov
jnp
mul
jbe
adc
ins
jnp
inc
es
jo
in
es
cmp
daa
add
test
les
add
test
or
adc
movs
adc
lock
rcl
mov
fist
fs
or
dec
jns
inc
addr16
fwait
fwait
fwait
pop
push
cmp
xor
cmp
je
cmp
jne
xor
nop
sub
adc
mov
jg
inc
repnz
jmp
or
das
jb
xor
add
mov
loop
pop
or
dec
dec
shl
push
xchg
xor
test
dec
je
out
fiadd
enter
ja
idiv
rcl
mov
cmp
jne
inc
inc
xor
xchg
inc
in
cmp
or
fs
and
push
sbb
(bad)
jbe
pop
ret
mov
clc
sub
xchg
stos
push
add
lock
or
(bad)
push
dec
xor
add
pop
jns
or
add
repnz
shl
add
sub
mov
add
add
or
mov
xor
jl
repnz
lock
dec
sub
or
sahf
out
add
push
shl
add
add
addr16
xchg
jl
add
add
add
mov
cs
xchg
or
xchg
ror
push
adc
sub
cmp
push
fidiv
sbb
cmp
mov
adc
mov
mov
enter
dec
les
mov
rol
pop
add
mov
push
jmp
(bad)
sub
push
push
ins
mov
ja
xchg
sbb
pop
inc
test
inc
adc
hlt
jb
pop
jmp
adc
sar
pop
outs
sbb
sbb
mov
ffree
fbstp
xor
adc
jns
test
loope
mov
xchg
dec
cmp
rcr
mov
mov
retf
je
push
jmp
in
fnstenv
jnp
or
aas
or
xor
push
aaa
jp
icebp
mov
popf
adc
lods
js
mov
mov
sbb
sar
add
mov
pop
sbb
(bad)
into
jbe
loopne
test
and
push
or
mov
cmp
fcom
mov
inc
ret
push
ins
in
stc
mov
stc
add
popf
clc
sub
inc
add
mov
push
xchg
and
stc
jne
dec
in
in
int3
(bad)
sub
sar
out
push
push
lods
mov
mov
xor
jge
fsub
sub
adc
cmp
inc
adc
loope
adc
adc
and
and
call
lock
push
pop
cmp
fild
mov
popf
jns
sar
dec
cmp
cmp
mov
test
and
call
push
fild
lods
push
adc
not
and
pop
mov
mov
popa
(bad)
fisttp
mov
pop
out
repnz
mov
push
jmp
enter
xor
cmp
je
xor
scas
pop
lock
jmp
imul
mov
cmp
(bad)
mov
pop
push
mov
or
mov
call
push
sub
popa
iret
xor
hlt
iret
dec
add
pop
call
mov
add
out
stos
xor
enter
push
loop
repnz
pop
dec
inc
push
xchg
or
add
xchg
mov
retf
push
das
loop
push
jle
mov
pop
add
js
cs
sbb
dec
jo
loop
in
and
mov
or
inc
add
nop
lahf
pop
sbb
aas
xor
push
mov
arpl
push
pop
adc
mov
sub
push
call
inc
scas
push
mov
les
sar
jl
or
mov
es
mov
mov
mov
aaa
sbb
movs
mov
push
int3
mov
cdq
and
jp
in
xor
sbb
lods
movs
mov
mov
push
cmp
mov
adc
sub
mov
cmps
aam
cmp
je
je
xor
mov
cwde
retf
add
push
jg
mov
int3
pop
pusha
std
push
jl
mov
jmp
push
lods
and
dec
push
sub
mov
retf
movs
push
lods
out
lods
stc
mov
outs
les
lock
push
xor
test
mov
icebp
je
dec
or
pop
pop
push
lods
push
xchg
in
aas
clc
lea
cdq
push
setg
arpl
pop
(bad)
lds
push
ds
hlt
mov
or
cmp
icebp
scas
mov
sub
lea
imul
outs
inc
lods
push
push
imul
dec
adc
mov
cmp
ret
mov
and
jno
sub
mov
in
or
cmp
or
movs
inc
xor
and
mov
and
lods
or
mov
je
ins
popa
mov
mov
or
push
sub
sbb
data16
inc
push
jl
push
push
sbb
mov
jmp
pop
push
pop
lea
mov
test
jbe
cmp
adc
push
inc
inc
jno
(bad)
jbe
sub
and
loopne
pop
push
in
(bad)
lock
or
and
fwait
dec
push
mov
pop
pop
inc
sbb
and
push
int3
es
ins
cmp
push
sub
and
into
inc
and
outs
sub
js
lock
add
push
cmps
jbe
xchg
sahf
inc
push
push
mov
(bad)
mov
outs
neg
inc
clc
jmp
(bad)
in
fadd
int
mov
mov
dec
sub
lock
jmp
adc
push
cmp
fidiv
xor
ja
pop
icebp
cmp
jge
inc
or
ret
arpl
push
add
inc
or
lea
cmp
aad
mov
add
sbb
call
mov
mov
cmps
imul
jae
add
sbb
shl
or
(bad)
push
inc
mov
das
mov
or
call
push
and
lods
sbb
es
popa
mov
cmp
or
movs
mov
inc
adc
ja
mov
test
dec
jns
jne
push
mov
pop
imul
ror
arpl
fbstp
(bad)
je
pusha
cmp
push
push
mov
imul
sbb
sbb
sub
add
push
sub
ret
sti
adc
jmp
xorps
mov
sub
inc
push
scas
sub
lock
add
add
int3
mov
ltr
jbe
mov
(bad)
adc
shl
shl
add
fdivr
inc
or
xlat
int3
add
ud0
mov
add
adc
dec
or
jmp
inc
in
or
pop
sub
popa
fisttp
or
mov
js
mov
inc
arpl
enter
fmulp
jmp
push
or
mov
push
add
dec
mov
sahf
cdq
push
bnd
es
or
stos
push
fistp
retf
ret
jne
cmp
jne
mov
ror
add
cld
jmp
cmp
jne
xor
sub
and
pop
rcr
into
jmp
mov
movs
iret
jne
nop
mov
pop
or
push
or
or
push
jmp
ins
add
pushf
xchg
scas
xor
fadd
adc
push
inc
pop
retf
mov
mov
mov
test
stos
aaa
inc
int
jo
push
ss
sbb
inc
dec
inc
sti
pop
add
dec
sub
push
add
(bad)
ret
jno
pop
sub
test
mov
lods
lods
or
jmp
add
aam
pusha
or
cmp
pop
jb
mov
in
sub
shr
cmp
or
add
je
or
adc
mov
mov
cmp
push
not
pop
sub
fucomip
in
push
mov
(bad)
jmp
mov
mov
cdq
and
dec
loopne
(bad)
add
dec
lock
jmp
or
jmp
ins
call
mov
dec
jmp
adc
rol
fiadd
inc
and
inc
and
push
popa
int
adc
and
sub
add
fs
adc
inc
jnp
jg
dec
push
les
mov
and
(bad)
std
push
jmp
jae
adc
mov
cmc
xchg
pop
jns
cmp
jns
inc
adc
jp
inc
inc
rdtsc
nop
inc
(bad)
(bad)
fiadd
inc
push
sbb
sub
jne
jo
add
mov
adc
mov
into
dec
dec
jae
cmp
inc
inc
push
push
aaa
mov
arpl
test
bound
push
or
inc
clc
cld
dec
sar
push
cmp
mov
cmp
adc
rcl
add
outs
dec
dec
pop
mov
or
or
and
or
adc
aaa
or
cmps
sub
pop
inc
push
push
outs
xor
(bad)
mov
ds
and
movs
inc
aam
imul
push
push
pop
pop
pop
repnz
aas
cmp
jne
mov
push
dec
push
mov
push
dec
lea
stc
dec
pop
mov
shr
cmp
fcom
mov
sahf
jae
add
vmwrite
dec
or
scas
xor
push
jp
scas
sub
and
popf
clc
rcl
(bad)
sub
inc
mov
repnz
and
setl
sbb
mov
add
imul
(bad)
cdq
add
sub
xor
jb
push
dec
sbb
cld
ret
inc
test
mov
(bad)
scas
inc
and
add
inc
cwde
xchg
mov
arpl
mov
cmp
push
ficomp
inc
inc
push
push
adc
movs
dec
adc
adc
sbb
jmp
call
or
or
dec
push
fsubrp
call
adc
in
dec
into
icebp
idiv
retf
mov
mov
out
jns
movs
pop
and
aam
mov
cmp
sbb
and
in
push
(bad)
iret
cmp
jge
add
jg
push
sbb
cmp
ins
add
jbe
inc
xor
push
pop
cmp
icebp
mov
lods
jno
xor
clc
mov
je
xor
and
aas
jno
cmp
push
xor
mov
ret
push
adc
mov
cmp
cmp
jae
call
mov
test
test
mov
imul
ss
push
mov
(bad)
into
int
jmp
les
aas
adc
add
or
cmp
or
inc
xchg
mov
xchg
ds
imul
pop
aaa
cmp
sub
out
xchg
test
dec
xor
and
jo
cmp
sbb
xchg
daa
mov
dec
and
mov
xor
pop
in
es
adc
pop
add
mov
retf
jo
inc
mov
cmp
call
add
lods
xor
push
hlt
xor
jo
addr16
ins
pusha
xor
mov
push
add
cdq
gs
mov
push
push
call
nop
mov
repnz
inc
fcom
add
lods
mov
imul
call
mov
push
lea
clc
push
cmps
push
mov
repnz
push
push
xchg
mov
fst
or
mov
or
adc
pop
lods
xchg
pop
loopne
retf
ret
ret
pop
or
leave
jnp
outs
push
adc
mov
sbb
test
dec
xchg
push
or
add
ret
sbb
sbb
and
movzx
or
out
cmp
adc
ret
rep
adc
xor
pop
and
lds
push
rol
sti
out
push
or
pop
mov
arpl
pusha
popa
jmp
sbb
js
pop
push
dec
pop
jp
int3
push
es
call
add
or
pop
push
adc
push
imul
adc
add
pop
and
or
mov
push
jmp
fst
test
xor
sbb
shl
js
push
or
inc
clc
inc
push
push
les
das
push
push
or
or
shl
or
adc
adc
mov
pop
xchg
add
xchg
xor
fbld
push
jne
mov
pop
dec
dec
mov
xchg
pop
movs
lea
test
ss
or
inc
ja
mov
(bad)
jmp
adc
(bad)
pop
and
push
jnp
or
cmp
sub
fwait
cmps
cmp
inc
sub
add
jmp
int
push
mov
rol
shl
xor
ret
fsub
and
sub
es
push
mov
cmp
hlt
aam
repz
add
sub
jo
(bad)
mov
imul
mov
inc
lods
push
cmp
jbe
cmp
jns
xchg
push
movs
jo
jecxz
mov
add
(bad)
jo
jno
push
mov
dec
shr
mov
inc
mov
sbb
mov
mov
xor
mov
xchg
xor
sub
mov
scas
sub
pusha
aam
and
xchg
cmps
aam
add
pop
xchg
hlt
mov
pop
push
call
jb
test
xor
sub
push
sbb
cmp
mov
cs
inc
jle
or
(bad)
fdiv
xor
es
dec
push
mov
push
add
mov
mov
or
(bad)
lea
or
pushf
mov
adc
fsubr
jecxz
dec
inc
cmp
xor
sbb
or
xchg
sub
push
and
cmp
mov
lahf
lock
sbb
outs
pop
cli
push
add
inc
adc
push
daa
inc
es
mov
out
xor
mov
push
sbb
adc
and
or
(bad)
out
jmp
push
fstp
ror
adc
std
in
dec
push
lahf
or
cmp
mov
das
and
mov
out
fisub
adc
mov
adc
jne
in
cs
xchg
adc
scas
je
jg
les
push
jmp
fild
add
cmp
call
pop
push
add
add
aam
cmp
inc
add
mov
inc
push
dec
lods
xor
and
jo
enter
aas
bound
les
js
or
sahf
pushf
loop
sub
jl
push
sbb
and
(bad)
aad
loopne
cmps
or
mov
in
cmp
not
mov
and
push
fidiv
mov
imul
xchg
xor
pushf
jb
cmps
rcr
or
out
test
pushf
je
mov
push
(bad)
(bad)
mov
mov
push
cmp
movs
aam
lea
pop
lock
out
movs
in
test
or
add
clc
movs
xor
pushf
loope
pop
fld
loope
inc
cli
mov
inc
leave
mov
lods
and
xchg
jg
fstp
out
loop
mov
or
jbe
sbb
pushf
sub
sub
scas
cli
sbb
cmp
mov
out
cs
push
mov
scas
(bad)
jmp
cs
xchg
push
mov
js
and
ret
add
xchg
or
fisubr
data16
and
inc
sub
arpl
jmp
add
movs
xor
mov
pop
cwde
aas
int3
fdiv
and
jnp
inc
cmps
xchg
mov
dec
nop
add
test
loopne
jnp
call
movs
pop
lea
mov
sub
es
mov
add
mov
xor
mov
or
inc
std
cmp
pop
cmp
xor
mov
jnp
cmp
push
mov
xchg
mov
xchg
test
cmp
dec
pop
pop
jmp
bound
jle
mov
pop
(bad)
mov
sbb
cmps
jmp
adc
add
sbb
or
dec
push
jmp
add
mov
popa
xchg
mov
adc
movs
into
(bad)
adc
loopne
fcom
mov
dec
jmp
mov
cmps
inc
add
mov
lods
in
js
mov
add
dec
nop
inc
mov
xchg
mov
jno
and
pop
adc
jmp
mov
pop
ss
xchg
add
cs
lock
cmp
xchg
push
cmp
(bad)
fild
dec
push
cwde
bound
pop
and
mov
icebp
or
mov
push
dec
cmp
adc
nop
dec
pop
fdivr
add
cmp
sar
(bad)
push
cli
xchg
pushf
push
jo
jo
or
sbb
xor
and
dec
push
inc
fwait
test
inc
or
mov
enter
adc
push
mov
lods
in
test
ss
push
add
mov
cmp
fwait
sbb
mov
sbb
mov
and
hlt
sbb
and
ins
push
je
push
rol
jmp
xchg
aam
jl
call
or
xor
cmp
mov
inc
int3
bound
sar
xor
cmp
adc
xor
cmp
xor
mov
rol
scas
adc
lods
mov
mov
aaa
inc
int3
cwde
bt
or
les
inc
stos
lahf
rol
lods
nop
inc
lahf
jo
ja
add
jb
mov
mov
(bad)
leave
(bad)
mov
into
cmps
mov
sbb
(bad)
mov
mov
dec
dec
jmp
add
or
cmps
or
std
mov
cmp
jae
fild
data16
jmp
sub
jb
lahf
(bad)
ds
mov
lods
sti
pushf
adc
adc
lea
push
lock
push
ret
in
movs
test
mov
shl
iret
dec
dec
push
pop
sti
and
sub
mov
jb
jmp
cs
out
mov
push
lea
dec
inc
js
or
lods
dec
mov
in
sbb
jae
in
scas
cs
or
push
jo
mov
test
jnp
mov
enter
mov
int
push
sbb
jb
jb
fist
sub
add
dec
(bad)
sub
jbe
add
sti
lock
adc
sub
add
jg
mov
push
inc
and
call
sbb
je
jl
push
dec
fadd
and
mov
cmp
and
jmp
jo
iret
mov
mov
xchg
sbb
int3
jae
lea
gs
mov
std
aas
(bad)
jmp
mov
sub
push
jmp
xor
test
inc
dec
or
pusha
mov
test
movs
mov
dec
add
cmp
(bad)
xor
mov
mov
movs
xor
and
push
mov
dec
jl
cmp
je
or
les
cmp
push
sahf
fadd
push
ret
shr
push
sub
mov
gs
cmc
adc
fadd
nop
aad
dec
sub
sbb
xchg
popa
outs
push
and
dec
ss
mov
pushf
cmp
push
jbe
fcom
dec
xchg
push
data16
mov
dec
sbb
(bad)
jmp
push
iret
leave
ins
popf
push
cmp
pop
inc
add
push
jne
mov
push
sbb
hlt
mov
nop
or
jmp
adc
fnstcw
sub
push
pop
lock
ins
jne
les
sbb
stc
push
and
sub
push
shl
push
jno
cmp
pop
xlat
sbb
or
fstp
lea
push
xor
add
enter
das
lahf
sbb
inc
mov
es
pusha
inc
test
jp
mov
test
jg
das
mov
(bad)
cmp
loope
inc
movs
jbe
movs
push
rol
sbb
mov
shr
sub
adc
or
inc
imul
pop
or
xor
xor
cmp
je
lds
jno
pop
pop
or
cwde
test
sub
sbb
test
(bad)
xor
add
mov
mov
sahf
fs
call
cmp
cmp
xchg
add
cmp
cmp
ror
mov
ror
push
cli
popa
fisub
outs
jg
jne
sbb
pop
adc
addr16
out
push
out
test
cmc
adc
inc
push
leave
call
jns
add
sar
mov
sub
xchg
xor
and
xor
and
mov
and
repnz
cmp
cwde
fsub
mov
push
xchg
sbb
add
das
sbb
cmp
psraw
adc
or
nop
mov
and
mov
dec
or
jmp
inc
ja
add
pop
(bad)
and
sbb
fwait
mov
add
push
cmp
cmp
sub
sub
or
jmp
fcom
mov
in
mov
movs
ja
mov
mov
out
dec
push
ja
cmp
mov
or
inc
jne
mov
ins
fst
je
jb
mov
sahf
sbb
bnd
mov
fbld
mov
xor
in
jb
in
mov
pop
out
pop
mov
cmp
xor
cmp
fiadd
pushf
xchg
or
fld
mov
sub
neg
(bad)
push
repnz
imul
add
inc
or
sub
sub
xor
fsub
adc
adc
jns
jg
pop
nop
stos
cmp
mov
or
and
dec
cmps
imul
ss
sub
and
or
test
or
cmp
push
jns
or
inc
push
mov
dec
sbb
fwait
mov
and
aas
cmp
dec
cmp
pop
or
enter
shl
ficom
ret
jle
jge
add
cmp
mov
or
adc
mov
sbb
ins
jle
int3
inc
add
push
ins
fild
test
and
fild
xor
std
push
sub
sub
jp
lea
shr
imul
fdiv
sub
pop
jno
inc
push
pushf
mov
inc
aas
and
int
and
mov
imul
add
jae
ja
push
xor
push
or
mov
sub
pop
cld
test
imul
and
cmp
dec
xchg
jno
mov
adc
mov
mov
adc
ins
mov
test
pop
gs
pop
test
xor
dec
inc
lahf
add
or
xor
lock
scas
shl
adc
(bad)
mov
or
ds
pop
sbb
sbb
out
sbb
loopne
call
xchg
and
push
push
fs
fmulp
cmp
add
inc
add
pop
lahf
adc
ins
into
(bad)
push
jmp
pop
adc
lds
add
sub
add
push
mov
clc
mov
dec
mov
mov
adc
pop
loop
or
sub
add
scas
scas
(bad)
cmp
dec
or
stc
pop
je
add
or
push
xchg
add
adc
jbe
das
and
shl
adc
adc
mov
jmp
jns
sbb
xor
add
xor
push
push
scas
pop
inc
xchg
shr
add
dec
jb
sub
add
gs
sahf
or
hlt
cmp
lds
mov
add
inc
inc
fs
push
inc
mov
pusha
fmul
inc
jmp
aaa
xchg
call
push
pop
call
pop
or
and
dec
add
xor
push
mov
int3
mov
xor
(bad)
ror
ret
push
add
cwde
mov
mov
loopne
sub
clc
or
test
jge
or
mov
cmp
retf
jo
add
push
and
or
dec
shl
ds
push
sub
or
xchg
add
adc
or
mov
repz
or
mov
or
mov
clc
call
sub
jne
push
push
mov
jo
(bad)
xlat
test
jne
enter
pop
push
xor
xor
cmc
adc
aas
jp
sbb
out
jns
dec
aad
dec
or
mov
repnz
jmp
(bad)
mov
adc
ds
lea
dec
cmp
pusha
inc
or
adc
(bad)
xlat
es
and
in
mov
mov
into
in
dec
fmul
push
nop
nop
push
lahf
or
or
test
add
cdq
pop
and
sub
push
cmp
pop
sti
in
sbb
inc
cmp
pop
xor
neg
jo
cli
and
pop
or
and
dec
sbb
push
lods
bound
or
pop
add
sub
ins
xor
push
rcr
mov
imul
or
arpl
pop
lods
and
rcl
fist
add
sbb
icebp
pop
xchg
jle
or
add
sub
add
mov
or
mov
cmp
cmp
add
push
cmp
aaa
adc
cmp
jmp
xlat
pusha
sbb
push
ja
movsx
mov
mov
pop
out
and
xor
add
call
scas
push
jp
or
sub
pop
xchg
out
mov
mov
jmp
cmp
out
pop
int3
movs
call
(bad)
cmp
rcl
les
or
jne
cmp
cs
dec
cmp
loopne
jae
push
pop
pop
jne
sahf
add
mov
in
push
inc
push
jecxz
dec
outs
mov
sub
jae
fs
pop
mov
les
ficomp
movs
loopne
hlt
jmp
and
(bad)
test
or
pop
mov
mov
int3
sbb
ffreep
jp
jp
aas
inc
icebp
imul
rcl
loopne
push
into
dec
pusha
shl
push
js
cmp
jge
add
inc
pop
or
(bad)
cmp
adc
sbb
add
adc
jo
sbb
push
jo
pushf
pop
test
scas
push
adc
pop
mov
or
inc
mov
mov
mov
call
xor
push
enter
in
dec
ret
pop
add
xchg
add
psadbw
push
shl
xlat
mov
test
push
mov
aas
sahf
lods
add
std
mov
adc
cmp
or
repnz
cmps
inc
(bad)
call
sub
mov
sbb
and
rol
sbb
int
test
mov
and
aas
xor
push
call
add
loopne
push
imul
dec
loopne
and
push
(bad)
xchg
aam
pop
retf
sbb
add
sbb
popa
scas
push
imul
pusha
in
(bad)
jle
push
stos
push
pop
sbb
adc
xor
shl
pop
push
inc
je
inc
push
shl
cmps
jl
push
or
lock
loope
mov
nop
ja
add
cmp
popa
inc
lock
push
xchg
push
dec
in
mov
xor
call
sub
xor
push
push
mov
mov
dec
std
js
es
push
pop
xchg
es
dec
cmps
int3
add
test
pop
(bad)
cmp
sbb
loopne
addr16
and
mov
int
sbb
adc
xor
add
jmp
popa
inc
loopne
fstp
sbb
(bad)
and
cmp
xor
jne
mov
push
push
push
and
or
inc
cmp
je
or
adc
add
mov
les
pusha
inc
or
mov
push
sbb
dec
sbb
xor
cmp
dec
out
sbb
and
add
arpl
(bad)
cmp
mov
pusha
out
jl
lahf
imul
sbb
iret
or
dec
loop
into
lock
xor
jnp
cmp
adc
adc
cmps
and
cmp
or
sbb
sbb
xchg
sahf
mov
mov
inc
add
dec
add
pop
movs
mov
ret
and
push
and
mov
test
out
mov
add
outs
and
mov
mov
xchg
sub
push
push
push
outs
ins
xor
push
cld
pop
cmp
xor
call
push
mov
push
xor
and
push
loope
push
xchg
stos
xchg
pop
retf
cmp
adc
fs
dec
push
mov
call
push
or
xchg
loope
aad
add
icebp
xchg
mov
inc
inc
lea
sti
add
out
jns
fmul
push
mov
or
scas
jmp
push
or
imul
push
nop
js
in
cmp
push
or
or
dec
xchg
leave
xchg
add
int3
lock
push
mov
xor
(bad)
mov
add
ret
sbb
xchg
inc
push
sbb
adc
inc
test
inc
shl
fist
pushf
cmp
jg
pop
sub
sbb
jmp
and
jmp
xchg
pop
pushw
push
cmc
pop
mov
pop
mov
xor
jg
sub
mov
cmp
nop
or
imul
mov
arpl
je
push
pusha
dec
push
test
mov
cmp
sub
pop
mov
lds
pusha
ins
sub
add
sbb
pop
sub
push
inc
sbb
(bad)
pusha
mov
cmp
jmp
mov
pop
pushf
ret
dec
test
cwde
add
sub
mov
push
jle
adc
sbb
push
test
mov
pop
sahf
and
aas
cmp
push
enter
lock
mov
test
(bad)
std
in
or
aam
mov
in
adc
jl
in
push
les
inc
fmul
push
sbb
push
fs
jb
rcr
pop
imul
not
ret
push
cmp
jne
mov
ja
pop
ds
jl
lock
cmp
je
push
mov
test
gs
and
retf
inc
pop
adc
jmp
cdq
cmp
loope
test
rcl
xchg
adc
mov
pop
adc
pop
pusha
fs
(bad)
in
ins
mov
jb
addr16
mov
ss
sub
(bad)
jp
popf
ins
pusha
ja
inc
fwait
add
adc
lea
push
push
xor
mov
popf
adc
mov
pop
mov
mov
lds
outs
pusha
inc
fsub
hlt
adc
add
pop
popf
loop
imul
and
ja
jmp
xor
xor
cmp
call
lock
montmul
cmps
pop
jbe
test
mov
shl
iret
out
lods
imul
push
xor
jo
je
inc
dec
add
cwde
loope
adc
popa
push
push
fsub
scas
data16
test
adc
sub
cmps
adc
repz
pop
xor
cmp
ficom
popf
clts
jno
test
cmp
jg
or
xchg
les
push
imul
pop
mov
mov
popa
mov
aaa
jo
fwait
enter
adc
test
add
imul
fwait
cmps
movs
in
add
push
adc
push
push
and
sti
je
in
cmp
inc
aad
and
jne
rol
push
icebp
mov
mov
mov
jge
mov
arpl
sub
test
lods
jecxz
test
or
rcl
or
push
pop
add
push
dec
jmp
push
(bad)
xchg
call
sub
push
int3
cmp
sbb
jne
mov
jge
std
test
inc
add
imul
ins
or
fadd
push
shr
call
adc
test
daa
shr
fwait
inc
sub
ret
or
int
aaa
xchg
mov
inc
retf
ret
mov
scas
fadd
mov
sbb
xchg
inc
adc
jge
popf
std
add
push
push
faddp
cmc
push
nop
movs
ja
lods
fmul
xor
neg
mov
fs
nop
mov
and
lock
in
je
enter
hlt
push
adc
xor
xor
sbb
jne
div
test
les
or
es
adc
cli
add
popf
xor
mov
push
lea
paddusb
outs
sar
sbb
or
cmps
sbb
and
sbb
pop
fwait
ror
dec
ret
aam
pop
lock
add
jne
and
and
dec
xchg
in
and
add
adc
pop
data16
jo
add
xor
iret
pop
std
sar
sub
(bad)
jne
xor
mov
cmp
leave
pop
xor
add
and
(bad)
pop
sub
add
dec
add
sbb
or
or
or
cmc
test
fdivr
fcom
ret
jmp
js
test
inc
push
gs
mov
push
xchg
cmps
sbb
push
loope
imul
mov
jmp
mov
mov
addr16
jmp
and
scas
mov
mov
popf
les
or
add
or
cmp
in
int
shl
and
push
ss
imul
movs
nop
aaa
or
or
mov
xor
jmp
test
nop
xchg
add
cmps
cld
scas
adc
ret
hlt
xchg
push
xor
sub
push
add
unpckhps
and
adc
in
popf
add
xchg
push
inc
mov
and
aaa
enter
ret
push
mov
mov
stc
cdq
aas
lea
cmc
xor
(bad)
aam
inc
call
xchg
dec
imul
pushf
ins
mov
xor
mov
fiadd
(bad)
aas
stos
push
cmps
test
popa
push
popf
leave
cmp
imul
add
imul
xor
pop
sbb
xchg
les
cli
push
enter
jbe
(bad)
mov
inc
fs
dec
ficom
inc
xchg
aad
je
int3
push
mov
cmp
je
out
leave
push
leave
or
pushf
test
jne
sub
cmp
inc
lock
or
dec
fcmovnb
mov
add
and
mov
jbe
cmp
mov
and
cwde
je
fist
loop
fcmovbe
mov
pop
dec
adc
popf
jg
fidiv
push
(bad)
cld
cmp
dec
movs
mov
push
sbb
add
test
jecxz
call
inc
add
loopne
xchg
adc
mov
mov
imul
outs
cwde
mov
inc
mov
imul
push
dec
fsubr
lea
xchg
test
xchg
inc
pop
or
int3
xchg
cmp
gs
xor
dec
mov
cmp
inc
sub
jg
enter
lea
loop
add
pop
jmp
fcmovnb
adc
add
dec
mov
push
loopne
loopne
adc
cmp
rol
xor
gs
sbb
push
and
fs
pop
test
call
ficom
and
cmp
aad
lods
sbb
hlt
jmp
xor
mov
mov
aam
mov
pop
fld
xor
cwde
addr16
and
mov
inc
aaa
push
push
push
jnp
mov
jp
and
add
sbb
aaa
sub
dec
lea
mov
jge
lods
cmp
and
icebp
mov
leave
sub
retf
jno
push
jmp
push
bound
xor
sbb
cs
movs
push
xor
sub
and
in
push
push
push
dec
test
sbb
inc
add
mov
inc
mov
inc
push
sub
bsf
sbb
shl
push
call
adc
in
or
push
rol
add
push
add
add
repnz
lahf
or
xor
repnz
fld
ins
rcr
mov
sar
mov
je
sub
pop
ja
rcl
xor
sub
and
push
jo
lods
dec
xchg
and
dec
inc
or
cmp
mov
pop
ret
mov
ret
xchg
add
mov
adc
imul
(bad)
cmps
jmp
add
shr
mov
sub
test
xchg
sbb
jle
pop
adc
call
dec
jo
test
mov
jge
retf
stos
push
add
push
pop
fsub
dec
xchg
sub
xchg
add
rcr
js
add
xchg
in
mov
or
jb
ret
adc
or
jns
mov
sub
dec
pusha
sar
push
fst
gs
add
call
and
sbb
and
mov
lahf
or
aas
cmp
dec
and
cmp
jne
jne
pop
jge
xor
jl
xchg
and
stc
in
lods
loope
xor
aas
in
xchg
rol
dec
inc
add
ret
loope
(bad)
sti
fs
cmp
jmp
frstor
push
jecxz
inc
mov
sbb
adc
xor
sub
sbb
push
and
jo
sbb
adc
js
pop
cmp
mov
cmp
in
mov
inc
lods
out
leave
jae
imul
xor
cli
sub
pop
and
mov
stos
or
jl
lea
clc
sahf
daa
js
and
mov
ins
cmp
push
jl
jmp
jno
stos
test
imul
lea
dec
enter
addr16
sub
xor
ret
movs
icebp
and
cmp
jg
add
enter
jp
sub
sbb
and
or
rol
inc
jne
pop
add
sbb
sbb
pop
or
sahf
out
pop
inc
adc
retf
mov
js
fisttp
loop
and
or
xchg
xlat
cmps
sbb
mov
daa
shl
adc
or
add
inc
sbb
mov
je
or
mov
int3
xor
stos
xor
mov
imul
jmp
mov
mov
nop
ror
sub
mov
stos
(bad)
xchg
std
add
loop
fs
(bad)
cdq
pop
or
push
push
add
push
ret
sbb
test
(bad)
push
add
jmp
ins
sbb
mov
pop
add
test
mov
xchg
pop
jae
(bad)
sar
or
xchg
lea
push
loope
jno
cld
xor
pushf
cmp
sbb
enter
syscall
enter
aam
sbb
jno
test
add
push
mov
mov
movs
stc
jb
pop
push
pop
or
push
repnz
pop
rol
call
jno
add
adc
xchg
xchg
jo
sbb
adc
push
lock
fld
add
mov
mov
xchg
push
dec
pushf
mov
xlat
lods
(bad)
or
cmp
add
enter
hlt
lea
lea
(bad)
mov
ins
test
pop
cmp
or
js
lea
jmp
je
mov
inc
adc
xor
mov
fmul
je
sbb
inc
sbb
cmp
jne
and
adc
adc
int3
test
test
and
rcl
call
pop
and
add
clc
cmovae
xchg
lahf
jl
leave
loopne
add
ins
rcl
das
jb
add
or
jmp
fisubr
cmp
jne
push
mov
pop
lock
adc
push
sub
ins
cmp
inc
pusha
push
pop
push
int3
test
sbb
pop
add
mov
je
xor
jnp
sbb
adc
sub
es
add
pop
ins
jl
pop
sub
ins
int
test
enter
mov
or
cmp
call
or
in
pop
sub
mov
out
ins
icebp
inc
adc
je
inc
push
jecxz
imul
sbb
retf
dec
push
mov
gs
and
pop
stc
push
inc
xor
or
pusha
lods
or
dec
jge
std
mov
lea
sbb
adc
in
inc
xchg
xchg
and
add
sub
cmp
shl
push
mov
jge
mov
mov
push
es
add
shr
add
arpl
push
push
sub
rcl
mov
pop
and
call
inc
out
vpshld
(bad)
call
fdivr
mov
sbb
mov
pop
les
ins
mov
cmp
fdivr
in
in
inc
call
ror
jnp
sbb
mov
shr
sub
in
jl
xchg
adc
sbb
lods
ins
or
in
jle
bound
mov
add
jb
jmp
lods
stos
jo
in
das
xchg
sbb
pop
lods
adc
jg
dec
and
jne
test
and
adc
cmp
add
jo
cmps
js
push
shl
nop
sub
or
sub
shr
nop
pop
push
sar
je
mov
stos
scas
add
mov
push
nop
dec
or
cmps
pop
pop
mov
add
pop
mov
pop
cmp
inc
inc
test
inc
in
inc
pop
adc
xchg
out
sub
scas
jg
popa
rcr
or
add
push
clc
movs
lea
daa
test
repnz
outs
es
clc
in
add
les
ret
pusha
icebp
mov
fdiv
icebp
int
add
pusha
leave
stos
in
sbb
pop
mov
fcomip
pushf
stos
add
inc
mov
push
mov
push
fcmovnb
lea
and
xchg
mov
sar
mov
pusha
sub
add
cdq
jno
pop
mov
pop
fnstenv
rcl
dec
pop
adc
pop
movs
aas
mov
imul
sbb
pop
inc
sub
sbb
jge
xor
mov
adc
and
xor
cmp
lahf
push
je
push
leave
and
or
cmps
and
jne
push
or
in
adc
(bad)
cmp
fsub
or
and
or
stos
dec
mov
fstp
lea
push
es
sahf
loop
jecxz
sub
fs
je
and
add
imul
inc
je
pop
dec
mov
or
jl
(bad)
xchg
inc
fmul
ficom
push
inc
lea
mov
fadd
sub
fnstenv
mov
(bad)
jne
pop
jmp
sti
xchg
in
dec
test
push
cli
cmps
push
push
enter
push
std
and
jb
add
mov
adc
or
sub
mov
enter
sbb
and
movs
out
jns
out
sub
xor
cmp
adc
xchg
push
dec
mov
xor
gs
sbb
sub
or
adc
je
pop
mov
xor
or
mov
sbb
(bad)
shr
adc
jno
mov
jp
inc
cld
mov
and
push
add
test
cmp
clc
lods
sbb
sbb
sub
add
or
xchg
mov
adc
pop
push
xchg
xlat
loope
mov
cmp
mov
adc
jmp
fwait
xor
pusha
add
aas
sub
inc
add
or
xor
mov
mov
or
aaa
ror
es
(bad)
imul
adc
and
std
scas
and
mov
das
hlt
xchg
or
and
jo
fild
add
jg
xchg
xchg
pop
(bad)
xchg
mov
popf
aas
cs
add
jbe
or
pop
push
and
ror
cmp
mov
xchg
and
mov
pop
(bad)
sub
jg
idiv
cmp
pop
or
push
xchg
fisttp
pop
or
push
mov
mov
pop
imul
dec
sub
jg
sub
fs
adc
in
mov
cmc
add
sub
push
pop
or
push
mov
fist
sbb
shr
sub
or
sub
pop
(bad)
ror
into
xor
sbb
mov
jnp
ss
mov
and
idiv
push
or
dec
adc
cmc
test
fucomi
aam
adc
test
aaa
scas
(bad)
jmp
ror
cmp
repz
test
cmp
or
sub
lods
fwait
inc
sub
dec
popa
popa
push
cmps
inc
and
push
shl
sub
add
(bad)
pusha
push
jns
adc
in
sub
jge
cmp
inc
ins
jo
sbb
and
mov
or
pusha
xor
or
dec
cli
mov
mov
add
into
cmc
push
adc
rcr
inc
or
push
cmp
fdiv
pop
repnz
fbstp
mov
mov
js
mov
add
ret
adc
inc
and
rol
fistp
mov
out
pop
sub
push
lahf
shl
loope
and
pop
retf
test
pushf
(bad)
fisttp
push
lea
mov
dec
enter
in
popa
mov
adc
push
mov
test
sbb
add
push
or
push
or
sbb
jae
pop
test
mov
loop
sbb
add
dec
mov
lea
test
or
push
and
mov
or
jle
and
sbb
out
loopne
mov
mov
test
(bad)
or
bound
adc
mov
fdivr
stos
inc
mov
loope
cmp
je
cmp
inc
add
(bad)
aad
add
add
nop
mov
jne
sbb
or
imul
add
jne
ror
adc
sub
adc
cmp
retf
push
lock
sbb
adc
cmp
sbb
push
int
aas
or
pop
enter
sub
adc
out
push
pop
(bad)
sbb
push
or
or
pop
inc
shl
(bad)
add
add
(bad)
int3
pop
mov
and
xor
xchg
out
fs
or
hlt
add
add
(bad)
and
sub
inc
add
adc
mov
dec
and
sbb
les
dec
push
pusha
mov
mov
retf
push
xchg
sahf
pop
in
add
push
push
mov
loopne
mov
in
js
cld
jo
and
sub
pop
sub
enter
sbb
pop
adc
jge
or
jg
cld
rcr
and
imul
sbb
or
or
xchg
pop
xor
scas
xchg
hlt
fwait
push
add
loop
cmp
sbb
lea
pop
pop
lahf
sar
push
cmp
fwait
sbb
js
sar
(bad)
mov
test
adc
or
les
or
dec
bound
fadd
ret
adc
fbstp
cmp
stos
xlat
jmp
leave
xchg
push
int
cmp
push
sbb
mov
clc
sbb
or
sbb
mov
pop
jne
jecxz
push
xor
mov
leave
cmp
mov
xor
mov
xchg
mov
inc
scas
dec
lock
outs
es
inc
inc
pop
sete
xchg
or
stos
lock
lock
psrad
sti
inc
sub
rol
sbb
in
and
mov
or
call
mov
jne
cmp
mov
lods
push
and
pop
dec
xlat
ja
mov
pop
ins
mov
test
fidiv
xor
movs
inc
out
cmp
dec
icebp
inc
mov
cmp
in
and
movs
mov
jmp
sub
push
cmp
push
inc
sbb
dec
fimul
aas
sbb
xchg
cmp
nop
xor
push
and
pop
push
and
jecxz
movs
js
popf
inc
pop
nop
jp
jle
cmc
push
mov
repnz
adc
daa
out
sti
cdq
mov
call
dec
adc
sub
in
jg
pop
rcr
pop
sbb
mov
push
jg
(bad)
adc
jg
movs
xor
xchg
xor
pop
jnp
push
or
jmp
or
adc
push
jns
mov
mov
xor
xor
imul
iret
jne
mov
add
mov
or
xor
adc
out
and
test
dec
not
pop
dec
and
sbb
mov
fnstsw
add
sbb
sbb
pop
mov
sub
adc
xor
je
push
add
andnps
xchg
ds
pop
test
xchg
pop
dec
cmp
cmp
outs
(bad)
dec
ss
aad
mov
mov
xchg
xor
add
adc
adc
jae
push
jl
sbb
mov
mov
or
iret
or
dec
mov
mov
ret
jb
imul
pushf
sbb
aam
in
fwait
shl
cmp
mov
pop
lds
jg
es
and
test
push
or
in
hlt
push
pop
dec
push
lods
sbb
inc
inc
adc
fwait
cmp
sbb
test
sbb
pop
ins
mov
inc
push
add
mov
adc
pusha
cdq
stos
call
dec
call
cld
jl
jg
and
lods
dec
cmps
cdq
call
sbb
sbb
sbb
scas
scas
sar
add
je
push
call
into
push
retf
xor
sbb
sbb
and
rol
fsub
movs
cld
lock
push
imul
and
in
push
sbb
xchg
inc
mov
add
and
arpl
ss
inc
or
mov
dec
mov
popf
jmp
retf
adc
fld
adc
nop
pop
xor
inc
xor
mov
test
cmc
or
ins
mov
cmps
aad
add
retf
adc
lods
mov
push
ror
dec
or
test
stos
repnz
loope
pop
in
sbb
neg
je
pop
call
gs
cmps
or
or
loopne
mov
inc
jg
xlat
rcr
(bad)
adc
sbb
mov
xchg
and
sbb
xchg
dec
cs
sbb
mov
xchg
aad
adc
or
add
xchg
js
xchg
in
test
bound
add
push
pusha
xor
mov
mov
mov
adc
push
push
imul
push
xlat
xor
jb
outs
inc
pop
dec
push
push
xadd
dec
test
jg
cmp
adc
cs
add
xchg
pop
mov
push
or
call
add
add
push
arpl
mov
pop
xor
xchg
sbb
test
bound
arpl
(bad)
std
adc
and
mov
push
xor
les
inc
pop
cmp
push
add
push
cmp
push
leave
sub
mov
xor
retf
enter
jl
fldlg2
(bad)
(bad)
add
popa
les
mov
lock
and
in
inc
pop
or
jmp
test
enter
or
test
or
add
dec
cmp
and
adc
pop
daa
ror
add
sub
call
mov
std
ror
or
push
pusha
loop
int
push
hlt
jl
fcom
stc
xchg
sbb
cmp
jnp
es
not
and
(bad)
jge
int3
jg
jns
dec
or
inc
jne
pop
mov
or
ret
pop
mov
add
push
push
icebp
cdq
pop
mov
mov
jae
xchg
ficomp
cmc
(bad)
sbb
repz
scas
fstp
push
lea
stos
cmp
lea
mov
mov
or
xor
repz
push
inc
and
or
inc
or
or
and
icebp
mov
jo
push
cld
add
lods
mov
jns
mov
add
mov
jl
cmp
push
adc
adc
add
leave
inc
dec
shl
add
loopne
push
add
sub
cmp
mov
out
loopne
jmp
add
jmp
inc
lods
push
ror
push
fcomp
lea
ins
xchg
fwait
cmp
push
or
shl
cwde
push
add
adc
sub
or
pop
mov
mov
dec
jne
add
inc
or
and
sbb
adc
in
(bad)
adc
shl
mov
cwde
in
pop
dec
(bad)
pop
mov
push
ss
jno
stos
not
(bad)
rcl
test
loopne
jne
add
or
(bad)
out
jecxz
fisttp
mov
add
retf
xchg
and
mov
pop
repnz
cmps
or
ret
cmc
call
mov
cmc
mov
loope
sub
mov
and
push
loope
mov
and
dec
out
push
push
(bad)
call
mov
mov
jne
je
sub
sub
stos
ins
pop
in
icebp
push
push
dec
ret
gs
mov
dec
sbb
sub
lahf
cmp
je
add
loope
add
in
or
repnz
imul
lahf
cmp
cld
sbb
push
or
or
ret
sbb
and
dec
pop
and
jno
inc
pop
fistp
lea
mov
adc
jmp
push
jne
into
sbb
rol
test
sub
push
dec
cli
pop
add
ins
pop
fistp
les
pushf
pop
and
or
cmp
sbb
pushf
jnp
dec
and
outs
es
pop
mov
add
rol
addps
lods
(bad)
cli
adc
and
cmp
push
add
cmp
push
add
fist
jns
and
ficomp
mov
adc
xor
adc
push
mov
leave
adc
sbb
pushf
stos
aas
mov
and
sbb
adc
jb
or
cmps
dec
mov
xlat
add
inc
ds
pop
push
xor
imul
test
adc
lds
jne
sbb
adc
add
inc
pusha
or
mov
fstp
mov
sbb
js
ret
mov
inc
adc
mov
adc
popa
or
fsubr
dec
dec
or
repnz
adc
xor
xor
xor
div
test
mov
loopne
fnsave
mov
mov
xchg
out
fwait
inc
add
push
xchg
or
adc
adc
xor
inc
enter
adc
sbb
pop
dec
push
xchg
mov
adc
dec
adc
adc
xor
adc
test
lods
adc
adc
stc
xor
adc
adc
inc
or
adc
mov
lods
retf
sahf
retf
leave
daa
pop
adc
adc
mov
idiv
(bad)
cmc
or
lds
adc
dec
bound
push
gs
xor
test
or
pop
popf
adc
mov
push
fst
inc
mov
dec
cmp
shl
xor
pusha
pusha
cmp
or
mov
jp
add
push
shl
adc
push
push
push
int
add
inc
mov
mov
rcl
repz
pop
inc
mov
jg
jmp
aas
or
add
fistp
adc
sahf
add
in
mov
fisttp
sbb
adc
jle
xchg
inc
cmps
aam
push
push
call
add
clc
je
push
loope
ret
das
lods
fcom
add
scas
fdiv
xor
sub
sub
add
sbb
inc
clc
sub
add
mov
pop
or
inc
addr16
and
xor
mov
or
xlat
push
mov
sahf
ficom
jle
xchg
cmp
xor
repnz
inc
lea
cmp
jle
test
sub
or
mov
jbe
mov
add
or
adc
neg
mov
lds
je
push
mov
int3
sahf
sahf
or
inc
push
lahf
add
sub
push
pushf
popf
imul
xor
push
xor
add
xchg
pop
lea
aas
jb
mov
ret
fadd
push
(bad)
add
add
inc
inc
addr16
inc
push
xchg
jae
aam
cmc
adc
inc
shr
xchg
mov
or
mov
xchg
sbb
sbb
out
test
fwait
lahf
mov
adc
mov
mov
rcr
jo
mov
add
push
mov
scas
inc
mov
inc
jp
or
xor
enter
add
xchg
jmp
inc
lock
stc
adc
push
or
add
push
mov
sbb
mov
inc
and
jb
sahf
adc
adc
xor
and
adc
mov
in
mov
lahf
pop
popa
push
in
adc
ret
pop
push
mov
lods
xchg
cld
sbb
or
adc
jg
xor
mov
bound
mov
in
fcmovnb
dec
jne
mov
xchg
mov
dec
mov
adc
repnz
jl
cmp
mov
(bad)
jge
add
inc
sub
push
sub
shl
lea
inc
lods
cs
mov
ins
sub
add
pop
cld
dec
adc
sbb
push
and
pop
lea
jo
arpl
inc
inc
pop
(bad)
mov
adc
cmp
inc
fistp
pop
add
jae
dec
jnp
sbb
rdmsr
mov
sar
push
or
pop
imul
adc
das
shr
mov
rol
fsub
aam
mov
ret
pop
mov
cmp
xor
jle
dec
mov
adc
(bad)
jb
movs
aam
call
mov
push
push
push
ja
popf
dec
jge
mov
cmps
mov
pop
(bad)
xchg
call
ret
mov
and
arpl
cmps
ds
fistp
mul
jl
adc
pop
inc
push
sbb
dec
std
and
ds
movs
pop
adc
or
out
jbe
jmp
inc
lea
mov
lods
jmp
and
cmc
and
sbb
pop
add
mov
mov
jg
mov
pop
push
ja
inc
mov
fadd
jbe
mov
dec
push
and
jae
sar
ja
mov
xchg
lahf
test
add
add
push
add
arpl
jne
aas
mov
in
push
daa
and
push
push
push
sbb
xchg
inc
sub
xor
or
push
js
push
mov
jns
mov
(bad)
pop
pop
test
dec
cld
sub
or
jge
fs
stos
push
iret
int
and
cdq
iret
cmps
or
push
mov
sbb
pop
pusha
adc
pop
clc
jg
mov
cli
fwait
test
mov
pop
gs
xchg
push
and
or
cmp
mov
and
clc
add
mov
adc
pop
ret
or
or
push
enter
adc
add
inc
jno
push
xor
lock
pop
hlt
or
lea
or
inc
or
fdivr
mov
lea
jmp
pusha
pop
cmp
add
ret
stos
lods
push
add
or
or
sub
push
or
and
cmps
out
lahf
mov
in
push
or
add
xor
adc
cmp
push
sbb
mov
inc
mov
ret
jg
pop
inc
sbb
hlt
cmp
jle
inc
(bad)
ficomp
inc
clc
cmp
jge
jmp
adc
sub
les
add
jg
add
push
iret
mov
pop
mov
mov
loop
push
mov
fst
dec
clc
sub
or
jge
into
pcmpgtb
push
sbb
in
pop
xor
and
lahf
and
mov
jnp
push
addr16
loopne
push
adc
loopne
lods
sub
sar
pop
icebp
fdiv
and
push
inc
ret
or
jmp
and
xor
add
push
cmp
pop
adc
lea
rcl
jmp
push
cs
sbb
add
adc
lea
mov
cmps
xor
mov
push
lds
test
adc
push
sbb
or
cmp
mov
add
pusha
xor
push
mov
sub
in
stc
test
sub
popa
xor
and
mov
cmp
xor
xor
and
adc
pop
loopne
xchg
not
pop
push
push
push
stos
pop
sub
lea
inc
pop
sbb
(bad)
xor
clc
or
inc
and
and
shr
jo
mov
ret
and
in
inc
enter
es
add
adc
(bad)
cld
mov
js
cmp
jg
cmp
jne
push
dec
jne
inc
push
lock
or
lock
pop
arpl
fmul
ins
nop
or
(bad)
inc
jmp
inc
pop
enter
add
mov
and
data16
cwde
mov
shl
mov
ficomp
xor
sbb
mov
pop
and
mov
mov
dec
jp
push
push
and
mov
jmp
pop
and
(bad)
outs
(bad)
jmp
lea
aaa
mov
sbb
xchg
adc
jo
sbb
xor
pop
adc
lods
add
mov
push
xchg
add
mov
xor
and
pop
add
lea
dec
dec
cmp
ins
push
add
jl
pusha
adc
sbb
and
cmc
sub
pop
sub
test
or
xchg
adc
add
(bad)
inc
push
lods
add
idiv
jecxz
add
in
adc
and
jb
cmp
xchg
mov
xor
test
push
shl
add
and
xchg
or
sbb
add
fbld
in
add
mov
test
xor
movs
jno
test
lea
cmp
mov
mov
mov
jne
jl
ret
dec
sub
cmp
je
cmp
mov
bswap
adc
into
xor
pop
add
mov
pop
hlt
push
lea
add
sbb
cmp
add
adc
sbb
int3
push
push
mov
js
inc
or
cmc
cmps
outs
or
mov
xlat
adc
add
lods
mov
test
or
pop
push
sar
push
ss
mov
or
dec
or
mov
add
in
mov
js
call
pop
outs
pop
es
or
loopne
(bad)
hlt
lea
mov
ret
mov
test
pop
add
add
sbb
call
adc
aas
xchg
push
jb
(bad)
mov
jmp
adc
adc
pop
inc
add
push
pop
iret
mov
push
or
or
fcom
dec
test
sbb
xor
pop
call
test
dec
sbb
loopne
call
aaa
xor
les
cmp
mov
pop
out
(bad)
frstor
scas
test
dec
pop
movs
ret
or
or
mov
les
ret
jmp
pop
push
nop
mov
dec
adc
movs
push
movs
inc
push
push
xchg
pop
jmp
cmp
push
ror
test
jecxz
xor
or
rdmsr
dec
mov
xchg
and
push
sbb
cmp
or
pop
out
push
or
push
out
jo
xchg
hlt
movs
adc
mov
in
add
in
inc
popa
sub
pop
pop
pop
enter
jb
shr
xchg
mov
outs
clc
jl
data16
out
adc
dec
sbb
mov
ror
cwde
mov
rcl
test
cmp
mov
jle
fs
movs
je
mov
jne
adc
xlat
lock
in
sbb
sbb
lahf
pop
mov
cmp
data16
adc
cmp
pop
and
dec
pusha
dec
js
cmp
ins
test
scas
pusha
pop
mov
int3
aam
int
sub
xor
ss
and
loope
test
mov
div
fcom
imul
shl
mov
xor
xchg
push
sub
dec
iret
iret
dec
adc
(bad)
mov
xchg
cli
shl
dec
enter
push
push
mov
jns
adc
jne
lock
test
sub
fidivr
shl
add
dec
arpl
imul
inc
pop
pushf
rcr
(bad)
fld
bound
push
(bad)
les
pop
mov
inc
bound
(bad)
loope
lea
xor
inc
lea
or
sub
(bad)
push
mov
dec
adc
xchg
ret
pop
lea
push
add
add
out
and
add
pop
add
xchg
out
xchg
inc
in
push
mov
pop
sar
add
pop
inc
and
inc
or
popa
test
das
pop
push
inc
inc
les
nop
test
add
sub
dec
push
xchg
pushf
xchg
dec
add
nop
mov
stc
or
stos
bound
inc
mov
and
inc
cmp
jne
add
xchg
sar
xor
adc
mov
repz
mov
mov
mov
repnz
add
cmp
pop
mov
popa
push
mov
inc
mov
cmp
out
fsubr
push
repnz
icebp
adc
jmp
lods
inc
add
dec
sub
pop
jne
add
mov
xorps
mov
dec
in
fisttp
shr
dec
xor
(bad)
cmp
pushf
push
jo
push
xor
daa
pusha
jo
call
jmp
or
inc
aaa
daa
cmp
xor
xchg
xchg
adc
sub
loop
pop
push
mov
popf
or
cld
pop
xchg
pushf
stos
sbb
pop
sbb
in
pushf
fdivr
sub
xlat
xchg
dec
mov
call
call
stos
pop
(bad)
bound
adc
add
mov
xchg
jmp
inc
add
sub
wbinvd
mov
dec
adc
ins
popa
pop
repnz
fcom
pop
xchg
lea
popa
push
adc
(bad)
dec
(bad)
std
inc
mov
add
cmp
test
lock
dec
fistp
add
pop
pop
inc
jmp
mov
inc
and
adc
xor
inc
mov
add
add
push
push
push
shr
push
retf
(bad)
cmps
arpl
ret
pop
or
and
add
pop
add
xor
pop
pop
and
adc
pop
adc
lock
jg
cmp
or
xchg
push
pop
repnz
mov
inc
jne
or
push
add
ss
repnz
adc
or
and
cmps
and
popf
cmp
sub
mov
cmc
push
or
xchg
(bad)
dec
adc
nop
add
inc
or
test
clc
dec
call
das
dec
stos
add
lods
test
sub
cmp
ins
mov
or
inc
mov
leave
ja
and
bound
and
loopne
(bad)
jg
fidiv
push
rcl
cwde
or
leave
inc
stos
inc
or
mov
fisubr
xor
add
cmp
jl
dec
or
stos
cli
or
jae
jbe
pop
rcl
adc
sar
mov
adc
dec
mov
sti
mov
pop
fdivp
and
retf
mov
ret
sbb
sub
gs
adc
pop
dec
test
cmp
cmps
inc
js
jne
mov
enter
sbb
nop
push
mov
dec
sbb
mov
int
push
test
in
enter
and
add
push
dec
sahf
add
xor
mov
loope
mov
adc
pop
push
jmp
mov
dec
mov
jbe
cld
push
push
push
mov
shl
add
sbb
mov
cmp
mov
jo
xor
pop
test
stos
mov
mov
mov
test
or
xchg
or
ja
push
in
sub
jae
ror
dec
or
shl
outs
xor
xor
iret
add
or
and
fistp
cmp
sbb
mov
test
lods
dec
pop
jno
sbb
js
mov
pop
sub
or
inc
movs
mov
lea
(bad)
shl
sub
mov
sub
ret
mov
int3
push
add
int3
(bad)
leave
inc
jmp
lods
mov
out
xor
(bad)
xor
add
push
data16
aam
sti
lock
sbb
adc
inc
loopne
xchg
push
sub
wbinvd
cmps
fist
das
pop
sbb
ss
push
ins
xchg
lea
test
inc
pusha
dec
enter
pop
mov
lods
rcr
dec
(bad)
jge
outs
push
jg
or
cld
pop
add
add
and
mov
rcl
rcr
out
stc
inc
add
mov
add
nop
push
and
or
mov
xchg
mov
movs
or
xchg
mov
mov
add
push
retf
and
loop
ret
clc
mov
push
mov
pop
in
fnstsw
or
mov
cmp
cmp
test
sar
mov
pop
adc
movs
lahf
ret
ja
call
cld
jge
mov
mov
cmp
pusha
cmp
daa
mov
cli
dec
adc
add
jmp
mov
cmp
dec
in
add
mov
cmp
add
xor
add
xor
dec
pop
or
lods
or
fld
hlt
mov
pop
sub
cmp
or
into
call
cmp
inc
ja
shl
push
or
cdq
push
or
mov
in
jmp
add
jb
cmp
jecxz
inc
loopne
push
iret
adc
add
sub
jmp
push
or
sbb
call
mov
xchg
sbb
cwde
add
mov
(bad)
inc
hlt
mov
hlt
stc
cwde
mov
add
lock
aas
pop
dec
(bad)
je
in
jne
js
cld
sahf
xchg
pop
aam
aam
push
cmp
adc
mov
jnp
push
push
out
pop
(bad)
mov
mov
(bad)
shl
inc
and
add
int3
mov
push
add
loopne
cmc
mov
fstp
test
sti
sti
and
add
sbb
xchg
js
(bad)
je
push
clc
push
les
mov
ja
inc
fmul
popf
test
stc
jle
lea
imul
mov
sub
ja
inc
rol
push
test
into
sbb
call
push
sub
xor
xchg
sbb
lods
sub
inc
or
popf
imul
(bad)
dec
push
xor
lods
rol
sub
test
pushf
adc
xor
pop
xor
mov
push
mov
pop
mov
into
test
adc
mov
test
lods
cmp
ins
pop
into
sub
(bad)
cmp
xchg
mov
push
dec
clc
mov
xor
or
sbb
adc
add
xor
cmp
sbb
sub
cmovge
mov
sub
inc
sub
fist
pop
pop
or
add
adc
adc
mov
in
jmp
adc
xor
fild
movs
push
push
push
pushf
mov
xor
xchg
lock
jo
das
js
fimul
fwait
loopne
pop
sub
inc
push
dec
ss
iret
mov
sbb
adc
xchg
or
cdq
push
push
in
sbb
add
leave
pop
imul
push
fcom
xor
mov
sbb
dec
cmps
dec
in
aam
arpl
js
adc
jge
push
sub
loope
mov
xor
dec
stos
dec
mov
mov
sbb
imul
adc
je
mov
(bad)
sbb
push
jnp
xor
push
cmp
push
pushf
retf
dec
sbb
loopne
cdq
mov
aas
lahf
loop
xlat
hlt
int3
jnp
call
test
repnz
pop
and
loopne
or
fcomp
dec
or
rcl
inc
xchg
push
adc
fchs
mov
js
lock
push
push
outs
or
fdivrp
fdivr
add
nop
xor
adc
pop
sub
inc
add
mov
cld
lock
mov
or
push
std
arpl
ret
xor
inc
pop
jb
leave
ret
das
retf
repnz
adc
sahf
jge
mov
dec
dec
rcl
ja
mov
or
(bad)
push
sub
xlat
and
mov
mov
jb
test
cli
push
push
sbb
aaa
mov
sbb
push
inc
sbb
inc
aam
inc
sbb
nop
retf
in
test
jo
dec
enter
fcomp
xchg
sub
stos
loopne
xor
sbb
aam
push
adc
shl
test
xor
pop
das
and
sbb
and
jae
adc
pop
mov
adc
adc
xchg
shl
push
xchg
push
out
enter
mov
enter
sub
and
jge
outs
xchg
pusha
(bad)
in
push
adc
adc
into
nop
cmp
rol
mov
cmp
or
cmp
mov
push
xor
pop
push
(bad)
inc
mov
push
call
fadd
test
inc
hlt
test
retf
movs
cdq
mov
mov
mov
lods
pop
cmp
add
fdivr
mov
pop
mov
lds
cmp
and
icebp
push
cs
push
loopne
xchg
push
adc
and
add
lods
adc
shr
or
lea
push
nop
loopne
scas
ret
sub
sbb
cli
call
xor
or
push
pop
and
mov
push
add
jb
xor
xor
loope
cld
sub
xor
push
mov
xchg
ins
mov
cmp
cmp
cmp
mov
jp
cmp
jo
jo
out
push
inc
add
out
inc
movs
out
xchg
out
sub
xchg
xor
mov
pop
xchg
lods
and
(bad)
jmp
ror
mov
sub
rol
mov
and
mov
dec
mov
and
push
xor
push
lds
js
xor
dec
shl
pop
dec
cmp
dec
cmp
sbb
xor
sbb
and
pop
push
adc
adc
xor
imul
or
(bad)
mov
jne
test
repnz
push
fdiv
adc
out
adc
add
lea
es
rol
and
mov
(bad)
test
mov
mov
push
push
loop
mov
push
clc
xchg
add
es
add
mov
sbb
(bad)
push
aad
imul
cmp
je
movs
call
jmp
mov
cmps
adc
lea
lods
not
inc
fmul
test
test
(bad)
lahf
add
or
push
push
push
es
push
in
mov
clc
mov
add
mov
and
inc
xor
inc
or
fcomp
or
mov
mov
or
outs
add
sti
sub
frstor
jle
sbb
mov
push
dec
jo
xor
das
or
xchg
je
inc
push
jmp
pushf
push
push
hlt
ins
loopne
or
lods
cwde
ret
cmp
jl
adc
inc
sub
aaa
in
mov
dec
test
mov
popa
push
ins
jne
cli
mov
or
xor
add
(bad)
fadd
shr
jge
test
pushf
adc
pop
cmp
outs
test
sahf
sbb
fnsave
add
and
mov
add
in
mov
push
cmp
add
call
mov
sub
adc
jb
adc
push
pop
or
lahf
cwde
mov
pop
fdivr
push
aas
jne
push
push
sbb
pop
push
cld
lea
sbb
pop
scas
js
push
sti
xor
mov
pop
mov
and
loopne
pop
pop
push
sub
jne
mov
add
in
mov
push
cmp
lea
or
scas
sub
adc
lea
dec
enter
sub
jo
daa
add
lahf
xor
cmp
and
add
jecxz
dec
lock
das
xchg
int3
(bad)
push
psrad
(bad)
ds
xchg
fisttp
xor
and
aaa
je
test
inc
leave
pop
pop
pop
or
add
in
es
push
das
fadd
adc
xor
mov
inc
cmp
add
inc
rol
cmp
dec
into
inc
cmp
lods
es
jle
jbe
sub
cmp
cmp
push
push
test
push
push
inc
sbb
add
inc
lods
adc
push
pop
sar
call
mov
xor
adc
add
mov
pop
or
push
loop
out
mov
call
push
shl
outs
sti
hlt
enter
or
xchg
sbb
pop
cld
lea
jl
cmp
dec
dec
mov
mov
adc
inc
hlt
cmp
add
push
movs
in
sbb
push
jb
add
loop
mov
adc
sbb
stos
mov
xchg
jge
mov
push
test
fadd
dec
sub
and
push
fst
sbb
push
out
mov
sbb
cdq
inc
cmp
jge
and
sub
dec
js
xor
dec
shl
shl
stc
call
nop
retf
enter
lods
ins
add
std
in
jecxz
shl
pop
out
xlat
js
cmp
push
inc
in
mov
repnz
pop
mov
test
and
jmp
je
sbb
mov
push
xor
sbb
and
xchg
ret
sub
mov
xchg
push
mov
add
xchg
(bad)
mov
sub
lahf
dec
and
repnz
sub
push
es
jle
adc
mov
push
push
pop
mov
or
add
or
ja
xor
sbb
jg
and
mov
rol
mov
mov
push
sub
inc
cmp
sbb
ss
jmp
dec
fstp
lods
call
leave
sbb
jle
out
sub
pushf
add
bound
cs
add
cmps
jo
lea
adc
pop
mov
dec
adc
dec
or
je
out
loopne
push
adc
mov
inc
xor
mov
mov
sbb
sub
xchg
(bad)
and
mov
out
xor
jbe
dec
mov
dec
inc
mov
xor
adc
cmp
sbb
add
mov
inc
jecxz
sub
jge
jne
push
movs
sbb
add
push
fimul
ror
dec
jle
cmps
adc
cmp
add
mov
adc
xor
push
push
jmp
das
inc
imul
mov
stos
cwde
sbb
cmp
push
inc
dec
or
xor
xchg
sbb
in
pop
lea
push
mov
or
mov
adc
xor
sbb
sub
pop
push
push
dec
jae
push
sub
fs
mov
call
dec
mov
dec
es
cmps
push
mov
add
sbb
jbe
mov
(bad)
mov
mov
das
adc
push
mov
jmp
sbb
sbb
icebp
mov
adc
dec
inc
bswap
mov
in
cmp
adc
xor
adc
popa
and
adc
dec
scas
(bad)
ror
je
push
jns
or
sbb
inc
les
in
inc
or
push
cmp
inc
mov
pop
and
test
movs
sbb
xchg
ins
adc
adc
cmp
je
icebp
push
cmp
and
out
inc
xor
inc
ins
aam
add
cmc
lock
(bad)
call
mov
jne
add
test
pop
fs
dec
inc
jecxz
test
lock
movs
pop
inc
(bad)
mov
push
jne
push
mov
sub
aad
and
ret
test
push
popf
mov
pop
jp
sub
mov
popa
mov
mov
fsubr
push
adc
or
inc
lahf
sahf
dec
test
push
push
push
cs
xor
(bad)
fcom
popa
les
pop
or
inc
dec
sbb
mov
fbld
xor
xchg
stos
lahf
les
out
test
xchg
out
mov
lods
fstp
push
hlt
push
or
les
lods
icebp
add
mov
sub
(bad)
add
jg
or
mov
cmp
xchg
pop
test
out
xchg
xchg
push
fsubr
push
xchg
(bad)
sbb
bound
lock
movs
lahf
and
push
sbb
mov
cwde
xor
gs
out
push
pusha
or
ror
sub
xchg
popa
jmp
or
retf
lea
inc
add
ja
xor
js
cli
cmp
das
pushf
push
ret
xor
fadd
arpl
sbb
ja
mov
pop
movs
inc
mov
sbb
push
push
outs
push
mov
aas
xchg
sbb
mov
inc
sub
cmp
clc
cs
inc
add
lea
sbb
xchg
lods
lea
gs
movs
sbb
cmp
je
add
(bad)
retf
inc
aaa
inc
xor
inc
js
(bad)
fmul
xor
and
ja
ret
add
add
push
xor
(bad)
enter
mov
adc
or
and
test
daa
mov
ds
ins
add
push
sbb
xor
cmp
xchg
mov
stc
and
and
(bad)
or
ficom
ins
adc
cmps
inc
push
mov
and
push
ja
into
xchg
sar
and
dec
out
dec
push
scas
add
jb
js
addr16
pusha
cdq
movs
dec
or
or
inc
inc
and
pushf
and
ret
enter
loopne
mov
pop
popa
or
push
push
jne
mov
dec
and
loope
add
dec
aam
cmp
cmps
push
jbe
enter
test
jno
pop
inc
or
and
and
add
loopne
jns
adc
mov
push
and
nop
test
dec
inc
sub
enter
jmp
mov
pop
push
xchg
addr16
pop
fbstp
and
add
shl
inc
add
dec
jge
in
or
and
rcr
clc
repnz
cmp
mov
inc
mov
mov
push
call
add
enter
pop
inc
xor
rcl
je
clc
pop
jmp
pop
cwde
pop
popa
add
push
pop
cmp
cmp
push
repnz
inc
or
in
add
sar
sbb
scas
lods
and
je
inc
dec
push
push
push
rol
ror
push
add
dec
dec
pop
je
add
and
test
sbb
add
mov
push
aas
icebp
pop
mov
jne
enter
mov
mov
and
mov
adc
dec
test
ret
mov
or
push
jno
pop
test
cld
and
test
push
or
js
jbe
mov
push
push
or
pushf
sub
sbb
mov
outs
push
add
ss
dec
(bad)
or
je
pop
mov
fadd
ret
pop
pushf
xor
jle
iret
data16
sub
pop
pushf
or
mov
and
cmps
jnp
scas
add
jmp
adc
jns
cld
inc
push
xchg
inc
inc
or
popf
push
xchg
out
sub
cmp
mov
adc
(bad)
rcr
jle
add
clc
push
sbb
mov
fisubr
cmp
clts
fadd
sar
das
je
lahf
ins
mov
mov
add
rol
mov
add
mov
inc
cmps
push
test
mov
cmp
(bad)
xor
sub
inc
or
cwde
or
clc
clc
xchg
enter
cmp
adc
sbb
xchg
sub
imul
imul
pop
push
in
js
pop
adc
push
ficomp
jbe
sub
xor
cwde
sahf
out
push
sub
data16
fs
cmp
sub
push
repnz
cmp
data16
jge
xlat
jmp
or
movs
jmp
loope
mov
fs
inc
lock
adc
or
and
jns
fimul
sub
dec
addr16
imul
push
leave
or
(bad)
es
sub
and
xor
mov
cwde
push
mov
adc
mov
add
ret
cdq
lea
lahf
test
je
scas
pop
imul
mov
or
and
add
push
sbb
push
mov
mov
mov
sahf
lods
or
push
push
adc
adc
pop
and
fnstenv
push
sub
mov
push
call
sub
adc
in
test
sub
enter
inc
push
stos
inc
inc
xchg
dec
mov
push
pop
sbb
lock
rol
jne
ins
or
sbb
push
les
in
push
push
cmp
shl
mov
mov
or
int3
sbb
mov
or
bound
std
cmp
lea
pop
add
mov
stc
loope
adc
mov
jae
mov
arpl
jbe
cli
sub
pusha
add
and
add
and
cmp
cmc
push
mov
shl
mov
mov
inc
add
lds
sub
xchg
xchg
add
mov
push
cmp
ror
cmps
fild
in
je
and
test
push
inc
push
(bad)
xchg
retf
mov
scas
push
lahf
inc
jo
jg
and
in
mov
sub
int3
aas
mov
popf
jns
inc
dec
or
add
dec
neg
(bad)
loopne
adc
inc
lock
jnp
mov
(bad)
cwde
sub
lea
jae
pop
jg
mov
fiadd
add
jl
stc
or
add
ins
pop
dec
xchg
pop
lock
sbb
jecxz
ffreep
int3
mov
jmp
cli
mov
loopne
pop
add
cmp
lahf
add
mov
(bad)
cmp
sti
fcomp
and
inc
and
hlt
push
cmp
xor
fidivr
test
dec
pop
push
adc
and
xchg
push
jg
test
pop
jl
stos
pusha
(bad)
jmp
(bad)
popa
push
test
sub
pop
mov
or
mov
inc
mov
inc
mov
xchg
sbb
cmp
sbb
lahf
or
adc
cmp
mov
lea
(bad)
(bad)
(bad)
aas
inc
sbb
lods
cmps
vpunpckhqdq
inc
or
xchg
add
adc
adc
out
lahf
f2xm1
mov
fistp
dec
call
mov
push
or
loopne
adc
in
push
mov
jle
int3
es
jne
lea
inc
sbb
add
push
add
(bad)
mov
test
js
pop
std
push
push
sbb
ins
pop
push
ss
in
rol
pop
jbe
(bad)
or
shl
mov
xor
mov
jmp
enter
add
push
adc
add
and
js
jg
mov
adc
jp
push
jmp
add
or
adc
sahf
cmp
ja
or
dec
jne
ret
pop
adc
rcr
loop
pop
test
test
mov
push
push
daa
ror
stos
push
mov
ja
or
jnp
push
pusha
(bad)
xor
push
mov
push
push
inc
inc
dec
xor
push
sbb
sub
mov
dec
add
ret
ror
push
xor
pop
nop
dec
fmul
je
adc
push
and
repz
lahf
xchg
(bad)
xchg
pushf
add
lock
inc
or
add
pop
test
inc
xchg
adc
jle
xor
sahf
add
adc
iret
fprem
jne
hlt
cdq
add
mov
scas
sbb
stos
pushf
js
sti
jbe
mov
mov
mov
inc
ja
xor
xor
cli
dec
fwait
js
xor
sub
pusha
jo
stc
popa
inc
sub
repnz
pushf
pop
adc
or
add
push
jmp
es
(bad)
(bad)
psubd
push
inc
add
retf
rcl
pop
push
loopne
pusha
mov
lahf
xor
adc
pop
adc
or
imul
dec
nop
adc
push
pushf
fs
movs
xchg
push
pop
push
pop
jg
xor
out
sub
gs
jmp
add
enter
or
test
jmp
cmp
push
mov
sub
js
(bad)
adc
shr
push
pop
xchg
cli
jecxz
mov
xor
rcr
push
dec
hlt
lock
pusha
ins
loop
dec
add
xchg
or
dec
and
dec
push
dec
gs
lock
xchg
jecxz
bound
test
aad
mov
add
daa
in
pop
mov
rol
adc
sbb
loop
idiv
adc
mov
inc
mov
inc
mov
jmp
jl
int
push
jne
add
inc
and
pop
sub
add
aad
ficomp
out
in
mov
and
rcr
adc
and
cs
xchg
stos
fild
test
jo
aam
pop
add
mov
add
out
je
push
and
mov
inc
cld
jnp
aaa
lods
lods
call
pop
popf
push
leave
or
lahf
jecxz
mov
or
pop
jne
push
sbb
loope
add
dec
sahf
or
sub
fwait
push
cdq
rol
push
jb
aas
cmps
mov
lods
clc
cmp
loope
in
cs
fld
lea
int
retf
add
es
and
test
adc
and
and
and
inc
or
aad
dec
repnz
fild
gs
pop
ja
repnz
add
mov
aas
mov
dec
pop
out
add
fdiv
sbb
xchg
iret
add
je
xchg
mov
dec
mov
lock
inc
mov
iret
adc
push
xchg
jl
xlat
push
or
mov
nop
pop
cmp
fadd
mov
sub
pop
lea
xchg
pusha
ja
and
sub
or
adc
sbb
pop
(bad)
sbb
mov
push
inc
sub
push
push
pop
inc
nop
push
dec
pop
aam
ss
and
test
add
xor
enter
fild
adc
movs
in
add
sbb
mov
inc
jne
cmp
and
aam
add
push
adc
jmp
nop
jnp
xchg
retf
push
call
inc
add
inc
jmp
pop
dec
jle
adc
add
ret
push
xlat
cmp
ss
push
popa
cwde
add
adc
popa
rol
pop
add
and
sbb
inc
inc
sub
sub
adc
and
adc
test
mov
jns
or
mov
je
int3
std
mov
sbb
dec
sar
loope
clc
iret
movs
push
mov
inc
rol
sbb
mov
sbb
jl
shr
rcl
add
dec
and
push
push
enter
xchg
ja
jge
jae
or
xor
in
adc
add
fild
rcr
mov
int3
and
adc
push
popa
jmp
and
adc
or
xchg
add
mov
sbb
xchg
push
ins
add
in
mov
(bad)
test
jno
mov
xchg
xchg
hlt
loopne
cmps
jae
mov
ret
xchg
(bad)
jne
adc
and
(bad)
arpl
fbstp
add
or
jmp
leave
shl
movs
fcomp
pop
jne
(bad)
adc
test
ins
inc
loop
push
ja
mov
test
xor
mov
retf
jae
jle
mov
or
xor
mov
movs
in
jae
stos
jo
retf
or
shl
fsub
loopne
push
push
mov
dec
push
scas
pmuludq
pop
xor
ret
add
or
and
mov
retf
cmp
lea
dec
inc
push
mov
pop
xor
mov
or
leave
nop
shl
cmps
sub
adc
dec
test
jl
retf
ja
adc
xchg
nop
adc
and
nop
mov
and
sbb
sub
inc
sub
mov
sbb
sub
fcom
mov
in
loope
sub
mov
xchg
retf
(bad)
aaa
les
pop
xor
nop
jo
xchg
hlt
xor
sub
shl
loopne
push
xor
mov
sti
inc
std
jnp
jecxz
stos
cmp
adc
push
dec
movs
sti
sbb
xchg
rcl
dec
push
push
add
lahf
dec
js
sbb
mov
push
sub
inc
sbb
dec
dec
cmp
ror
push
mov
xchg
mov
add
add
and
lods
jg
lods
adc
mov
sub
xchg
jp
sar
cmp
mov
add
leave
sbb
cwde
je
mov
pop
int3
push
push
loop
(bad)
adc
sub
fsub
adc
mov
test
aaa
add
push
mov
lea
inc
or
inc
retf
ror
mov
repnz
inc
or
jne
xchg
cmp
and
dec
cdq
dec
adc
mov
fsub
leave
and
shl
ret
push
out
push
test
cwde
jg
sbb
xchg
retf
sbb
loope
xor
push
jp
ror
ror
cmps
vpsadbw
repz
and
pop
pop
ret
pop
jbe
push
adc
adc
je
adc
add
jle
sub
test
ins
ret
je
out
mov
test
ret
sub
iret
movs
push
sar
(bad)
pop
adc
repz
push
jg
or
cs
or
jmp
out
sub
retf
or
and
add
call
and
in
lds
loop
jo
inc
and
xchg
cmp
pop
and
pop
jne
lahf
(bad)
cmps
cdq
nop
dec
add
jmp
xor
(bad)
inc
pop
push
shl
cs
dec
popa
aas
xchg
sub
and
movs
sub
inc
sbb
ins
or
push
jno
push
or
test
jle
add
push
push
addr16
mov
adc
add
stos
jns
inc
xor
inc
daa
and
mov
mov
call
int3
adc
clc
or
rol
push
je
or
aaa
pusha
fwait
mov
jns
adc
shl
mov
push
push
movs
or
pop
setg
or
and
pop
(bad)
xchg
sbb
xchg
xor
lods
call
ret
add
loope
inc
dec
xchg
push
lock
jo
adc
not
jne
inc
mov
in
les
(bad)
leave
push
mov
add
popa
in
add
push
or
push
scas
or
loop
adc
popf
dec
ret
xor
push
and
push
push
mov
test
shl
shr
xor
xlat
dec
jge
je
dec
push
mov
push
pop
push
sbb
inc
mov
call
or
sbb
test
into
add
mov
inc
arpl
arpl
mov
and
test
or
inc
and
test
sub
add
pop
stos
add
nop
sub
ins
push
into
jp
(bad)
movs
sub
xchg
scas
or
bound
xor
xlat
test
aam
iret
adc
mov
outs
mov
add
sub
cmp
inc
mov
add
js
or
xor
sbb
jg
xchg
jl
rcl
push
mov
test
lds
test
leave
pop
jl
sbb
mov
pop
sbb
iret
movs
jo
push
xchg
add
mov
xor
push
sub
push
sbb
pop
and
jmp
mov
pop
movs
mov
ja
stos
push
push
inc
mov
pop
stos
sti
sbb
retf
cmp
lock
or
nop
inc
cmp
jne
xchg
mov
mov
scas
add
add
xor
sbb
aaa
out
cmp
cmc
jne
mov
mov
ja
push
dec
and
shl
aad
sbb
xchg
cmp
mov
cmp
mov
sub
pop
and
jmp
mov
mov
inc
lods
outs
push
xor
bound
mov
push
sbb
pop
sub
jbe
mov
xor
push
mov
dec
in
jbe
or
inc
jne
inc
mov
xchg
push
sbb
xor
xor
cmps
mov
stos
test
sub
sti
add
test
sub
jmp
lock
push
mov
jbe
mov
push
dec
call
lahf
mov
je
cmp
fimul
es
je
pop
mov
pop
das
call
cmp
dec
jne
sub
mov
mov
je
mov
repnz
ss
xor
shl
les
loope
lods
dec
adc
test
or
das
adc
xor
adc
push
mov
xchg
adc
mov
jo
dec
cmp
add
mov
or
and
cwde
pop
aad
dec
cmp
cmp
repz
or
sbb
inc
nop
sar
xchg
mov
sar
and
sub
ror
xchg
inc
mov
push
mov
pop
add
cs
in
jb
and
push
add
loop
(bad)
aam
rol
inc
icebp
test
pop
pushf
movs
movs
xchg
retf
shr
jg
test
cmps
push
jb
mov
xor
xchg
inc
push
ja
rcr
bound
jbe
out
xchg
push
mov
jl
cmp
fmul
jb
sub
dec
fidivr
add
add
nop
sub
or
div
les
push
jp
or
jecxz
inc
dec
addr16
jbe
and
jmp
int3
mov
xor
out
ins
cmp
sub
dec
ins
or
dec
pcmpgtw
fwait
mul
push
pop
adc
pop
jg
call
inc
push
push
inc
js
sbb
xchg
pushf
mov
aad
cmp
jl
mov
(bad)
enter
mov
inc
push
repnz
div
jb
aaa
cmps
jmp
jp
push
sbb
popf
int3
xor
sbb
out
icebp
xlat
and
add
push
adc
popf
leave
aam
adc
and
out
xlat
fdiv
or
popa
sub
leave
mov
fwait
push
in
push
pusha
and
gs
mov
jmp
pop
mov
pop
and
cdq
mov
xchg
mov
je
mov
sbb
and
arpl
daa
mov
mov
mov
out
xchg
js
cmp
loopne
jmp
xor
mov
xor
rol
in
leave
jnp
daa
pusha
aad
cld
cmp
ret
test
adc
sar
call
pop
xchg
ret
or
pusha
push
(bad)
imul
mov
mov
lea
inc
and
sub
jbe
cmp
int3
lea
(bad)
test
push
les
sbb
jne
cld
adc
push
cmp
cmps
imul
mov
out
adc
pop
sbb
pop
jnp
aad
cmp
mov
add
imul
push
pop
ds
rcr
push
fadd
pop
jnp
(bad)
popf
pextrw
and
fmul
add
sbb
push
rcr
or
mov
nop
add
out
add
jecxz
add
cmp
or
pop
mov
xchg
cmp
add
xor
mov
aam
mov
inc
inc
fcomp
outs
mov
mov
add
rcr
cdq
ja
cmp
sub
dec
mov
cmp
add
and
adc
xor
adc
lea
or
and
dec
xor
shr
add
fisub
or
mov
jl
stc
fdivr
call
jnp
inc
(bad)
in
jl
test
inc
or
stos
fsub
push
push
xor
push
hlt
cmps
ins
mov
jno
shl
fadd
in
mov
ins
(bad)
mov
push
mov
push
cmp
sub
cdq
sbb
clc
add
sub
fs
xor
xor
mov
repz
dec
push
add
jb
in
(bad)
sti
mov
sti
mov
push
in
pop
in
in
push
or
ds
pop
pop
dec
aam
dec
pop
jb
call
in
mov
stos
movs
jb
call
push
xor
or
add
in
push
jno
sub
push
pop
cli
cmp
add
(bad)
stc
add
in
pop
xor
xchg
mov
or
push
sar
xchg
add
cmps
xchg
xchg
retf
mov
cs
(bad)
lock
pushf
xchg
dec
push
clc
std
cld
cmp
sbb
sbb
stos
in
call
retf
jmp
lock
and
sub
inc
sahf
pop
leave
cld
test
test
add
push
jb
js
adc
test
(bad)
cwde
add
xchg
or
enter
enter
jo
mov
std
cwde
xchg
xchg
dec
cmps
xchg
retf
add
repnz
push
xor
sub
(bad)
pop
add
pop
(bad)
sub
inc
sub
enter
sbb
pop
jmp
test
cmp
and
xor
add
mov
push
sar
sahf
movs
outs
xchg
addr16
lahf
pusha
jne
scas
leave
sbb
mov
pop
(bad)
js
adc
jle
mov
or
clc
mov
icebp
test
mov
sub
dec
hlt
xor
lods
mov
or
sub
push
js
je
mov
mov
jmp
rcl
push
shr
or
xor
inc
dec
sbb
mov
into
sahf
xchg
or
lds
xor
pop
inc
out
add
mov
cmp
sbb
push
pop
in
call
aam
mov
loop
sub
ret
pop
add
fs
pushw
xor
pushf
icebp
fdivr
int3
mov
cmp
psubsw
xchg
xor
mov
test
dec
dec
jns
sbb
sub
add
or
into
add
mov
mov
test
in
xor
jge
fmul
cmp
lea
add
ins
sub
fcom
sti
lea
xor
retf
cwde
in
or
test
cmp
ins
gs
sub
aaa
out
push
imul
dec
fadd
or
or
dec
ret
cmp
xchg
and
in
repnz
cwde
jmp
test
and
and
clc
jle
aaa
icebp
mov
es
jno
(bad)
scas
xor
mov
je
jns
loope
enter
and
adc
sub
movs
push
or
mov
fwait
cli
push
push
sbb
aas
jmp
out
cmp
fstp
(bad)
or
sbb
les
aam
arpl
aam
sbb
mov
sub
std
xor
lods
xchg
sbb
pop
icebp
jp
cmp
adc
lahf
sbb
cmp
cmps
cmp
sbb
sbb
cmp
sbb
adc
ja
repnz
pop
jnp
sub
cmp
jge
add
cmc
adc
daa
push
mov
nop
and
icebp
xadd
ret
nop
pop
cmp
pop
mov
add
adc
call
js
and
mov
mov
cdq
sub
push
add
dec
ins
and
or
stc
mov
xor
sbb
or
inc
sar
sbb
push
inc
rcr
sbb
in
rol
sub
push
enter
jbe
or
push
and
shl
(bad)
sub
repnz
and
add
int
fs
sub
or
xor
mov
fwait
lahf
xor
(bad)
jae
cmp
pop
push
pop
pop
pop
push
mov
xor
sub
punpckhdq
ins
jmp
jne
inc
out
test
adc
and
push
jne
push
ret
loope
mov
cwde
loopne
pop
and
push
out
ret
adc
xchg
mov
inc
test
sbb
cmc
movs
stos
retf
push
add
or
cmp
mov
mov
sub
rcr
and
dec
mov
push
popa
test
cwde
loop
add
movs
ins
jne
push
xor
fiadd
add
inc
call
cmp
ins
adc
inc
test
leave
or
adc
xor
shl
sbb
sbb
xor
(bad)
mov
test
mov
sbb
ror
imul
mov
jne
ins
mov
sub
rcl
inc
pop
js
sub
mov
cmp
sub
sbb
push
adc
iret
adc
push
inc
mov
push
cmp
inc
or
xor
push
inc
add
jb
inc
push
cmp
shl
adc
jno
xchg
shr
xor
xchg
xor
test
icebp
or
inc
stos
pop
cmp
xor
push
mov
dec
ret
and
sub
mov
push
jo
fadd
sub
cwde
pop
add
int
xchg
jl
mov
mov
dec
xor
push
mov
not
add
adc
ins
cmp
pop
loopne
cmp
mov
push
push
dec
outs
cmp
ror
pop
out
push
sbb
mov
sbb
call
adc
xor
sbb
xchg
pusha
pusha
cmp
cmp
jge
add
inc
or
sbb
dec
and
mov
pop
test
push
inc
out
or
mov
pop
and
shr
mov
xchg
loopne
sub
sti
nop
jo
mov
cli
add
mov
add
mov
shl
jno
adc
inc
dec
sahf
pop
jns
stos
sbb
cli
ror
add
jne
sbb
ror
dec
xor
pop
outs
xchg
pop
ja
iret
ins
imul
adc
jmp
and
push
push
lea
mov
mov
or
pushf
jae
sub
xchg
adc
pushw
(bad)
and
aad
xor
inc
int
les
dec
mov
and
xor
mov
xchg
mov
add
xchg
xchg
pop
push
sbb
fdivp
or
fcom
test
rcl
nop
xchg
inc
push
lock
cmp
shl
iret
inc
fs
inc
loopne
loopne
mov
inc
mov
jb
pop
inc
pop
sub
pop
mov
shr
inc
lods
fidiv
fwait
aad
dec
shr
xchg
push
es
inc
fadd
pop
xor
push
mov
cmp
adc
enter
fcmovne
ins
add
mul
mov
adc
aam
push
in
in
test
sub
adc
push
scas
pop
aam
and
in
icebp
mov
push
rol
and
add
push
jge
popa
shr
lods
or
sub
sar
nop
cmp
and
add
iret
or
and
movs
xchg
repnz
mov
mov
xor
pop
pushf
push
mov
and
shl
xor
out
pop
into
or
inc
inc
out
(bad)
xor
aaa
shr
add
sub
jno
push
in
sbb
dec
inc
sub
jbe
and
push
lds
add
mov
or
aam
push
movs
retf
lahf
rcl
pop
xor
cwde
test
ss
xor
push
or
test
arpl
call
inc
addr16
call
pop
cwde
(bad)
push
push
lds
adc
fs
mov
jnp
jb
bound
(bad)
xor
push
dec
add
push
shr
sub
jg
aam
xor
or
cmp
push
xor
jmp
je
inc
or
mov
inc
push
enter
add
add
sub
or
int3
aad
dec
pop
sub
pusha
or
nop
pop
and
adc
test
add
push
cmp
std
push
int3
mov
push
mov
pop
add
test
clc
push
movs
ret
mov
test
rol
cmp
jne
lock
test
in
inc
ins
pushf
or
adc
and
xor
or
jle
test
inc
cmp
add
in
clc
jb
aad
cmp
add
pop
mov
lods
jmp
inc
or
cmp
cmp
sar
xchg
inc
es
es
push
call
push
clc
push
xchg
sbb
leave
jmp
push
sbb
xor
and
pop
cmp
leave
and
and
and
pop
xchg
sbb
leave
jl
mov
xor
and
xchg
mov
and
nop
dec
push
xor
add
cdq
in
pop
sub
cdq
in
push
in
dec
popa
pop
imul
push
nop
dec
push
cdq
imul
mov
in
outs
mov
nop
dec
jb
jae
enter
add
and
dec
jne
jbe
xchg
ja
xchg
js
jns
dec
jb
and
pop
jnp
enter
jg
cmp
fs
inc
mov
enter
es
call
sbb
or
and
dec
xchg
sbb
leave
js
mov
and
push
lock
in
xchg
dec
out
or
in
dec
push
sub
nop
dec
push
cdq
inc
push
in
aas
lods
push
cdq
in
dec
enter
jb
dec
dec
lock
jb
and
sbb
and
dec
jge
mov
dec
jb
mov
dec
jb
mov
dec
jb
and
mov
jb
and
int3
(bad)
in
fs
or
xchg
xchg
inc
cmp
xor
cmp
xchg
cmp
xchg
je
cmp
mov
outs
lods
jo
inc
cmp
fs
cmp
test
test
fs
inc
lock
add
inc
es
adc
sub
sub
mov
es
inc
and
adc
jae
sub
lods
mov
rol
xchg
ret
ret
cli
or
je
pop
mov
out
sti
fisubr
cld
rcr
push
cld
ror
inc
outs
fdiv
nop
xchg
into
and
xor
or
sub
hlt
jb
adc
and
mov
inc
or
aam
inc
inc
test
cmc
pop
lock
adc
lahf
add
ins
inc
sub
add
adc
or
adc
inc
sub
loope
inc
dec
sub
out
nop
(bad)
into
jae
or
jecxz
and
xchg
add
dec
jne
jne
inc
cli
aaa
sbb
in
fdiv
fistp
fild
int
xor
shr
bound
pop
push
sbb
and
fst
stos
mov
push
dec
scas
xchg
xchg
test
push
dec
inc
and
adc
or
mov
cmps
and
inc
movs
in
adc
adc
mov
rcr
mov
loopne
add
fadd
push
add
(bad)
mov
or
or
and
add
ins
les
or
pusha
adc
and
dec
sub
xor
mov
adc
push
push
or
cmp
or
lea
and
mov
sbb
add
shl
add
adc
push
push
pop
repnz
xor
inc
and
ins
add
dec
je
call
int3
and
pop
push
aaa
test
xor
cmp
xlat
or
call
jne
pop
xor
into
les
add
mov
add
xchg
inc
inc
xor
ins
sub
pop
ret
cs
fucomp
jg
nop
or
adc
add
(bad)
cmp
fwait
aam
ja
je
test
lods
ja
test
jmp
adc
ins
fdiv
jmp
adc
dec
jmp
push
ret
jbe
add
xor
shr
adc
adc
adc
mov
dec
inc
call
imul
jmp
push
xor
or
cmp
jo
add
rol
jo
adc
add
clc
or
add
xor
mov
mov
push
fadd
in
push
sub
and
mov
jmp
add
ror
retf
pushf
test
into
adc
pop
push
dec
cmp
or
push
and
inc
jnp
adc
gs
add
or
or
mov
mov
sti
inc
mov
adc
push
push
push
(bad)
aam
shl
ins
sbb
xchg
out
(bad)
pop
pop
fbstp
or
jne
fild
adc
mov
repz
inc
ret
enter
xor
pop
repz
data16
xchg
cmp
hlt
jge
in
test
pop
(bad)
not
cmps
dec
sbb
mov
xor
sbb
pop
mov
cmp
idiv
mov
xor
pop
adc
adc
stos
sub
xor
adc
mov
sub
sub
push
fs
xchg
sub
jb
icebp
push
sbb
sbb
push
shr
sbb
push
add
add
add
xor
push
test
stc
stos
dec
push
and
or
movs
or
cs
xor
nop
sbb
and
pusha
std
push
pop
pusha
pop
jo
mov
push
or
xchg
sub
fimul
push
imul
ja
aas
test
add
cmps
sub
dec
pop
call
pushf
xchg
repnz
ja
fiadd
push
add
sbb
cwde
mov
out
xchg
jmp
sbb
cmp
enter
ins
push
push
push
daa
or
fld
mov
sbb
dec
push
movs
rol
retf
rol
add
inc
in
in
fisub
xchg
(bad)
test
pop
in
or
xor
nop
xchg
sbb
add
add
add
sbb
mov
xchg
shr
and
mov
rcl
pop
lea
push
mov
lods
or
sub
fimul
xor
mov
stos
mov
mov
mov
jmp
xor
jl
add
es
cmp
sub
mov
es
dec
cmp
and
add
adc
or
xor
popa
push
fs
cdq
rol
cmp
cmp
mov
adc
adc
(bad)
add
or
inc
inc
inc
ins
jle
jl
inc
pop
je
sub
cmp
sub
sub
dec
call
adc
push
call
xchg
test
or
sub
add
push
push
test
les
mov
in
sub
mov
pushf
xor
fcom
sbb
adc
enter
xchg
sbb
or
cmp
sub
add
xor
out
lea
adc
lods
not
mov
ds
xor
jnp
in
sbb
sbb
cwde
pop
jb
retf
xchg
aas
push
inc
dec
adc
sub
push
cwde
jp
add
sbb
cdq
lods
sbb
mov
add
dec
pushf
or
mov
ds
nop
inc
dec
hlt
dec
adc
pop
or
mov
repz
nop
add
ss
sbb
jb
test
or
test
sbb
jae
pop
in
xchg
popa
sbb
je
mov
pushf
jmp
pop
and
icebp
adc
adc
or
jmp
sub
pop
movs
sti
shl
loop
jmp
idiv
imul
ficom
jl
mov
stos
add
push
sbb
dec
inc
add
movs
jo
adc
add
or
or
jns
and
adc
xor
cmp
add
jmp
dec
or
sub
sub
pop
inc
push
mov
jecxz
jg
and
cwde
jb
arpl
lods
nop
adc
dec
data16
jae
jg
and
(bad)
push
add
or
fcomp
dec
xor
and
cmp
mov
je
sbb
(bad)
and
add
jns
mov
icebp
stos
mov
gs
push
sar
shr
mov
jge
pop
inc
outs
mov
ret
dec
pusha
add
ret
push
mov
sahf
xchg
je
jp
stc
or
pop
mov
lods
mov
add
fstp
pusha
(bad)
fcom
mov
add
adc
sub
cmps
mov
mov
mov
pop
push
cld
ret
rcr
dec
clc
add
std
adc
add
add
dec
add
or
sub
xor
pop
jne
push
xchg
retf
pop
pushf
and
push
sbb
imul
mov
jnp
mov
lock
push
pusha
popa
pop
cdq
mov
pop
sub
mov
adc
push
mov
lea
push
lea
add
(bad)
pop
xor
lea
inc
jmp
call
mov
mov
lea
push
ror
mov
push
sbb
mov
pop
pushf
add
dec
inc
popa
leave
hlt
loop
in
stos
mov
idiv
jno
xlat
add
pop
lahf
mov
cmp
sub
fdiv
push
(bad)
xor
mov
lea
mov
lea
cld
jg
or
(bad)
jg
retf
add
je
pop
btr
cmp
std
or
daa
cmp
mov
sub
inc
mov
shr
xor
xor
lock
test
int3
std
adc
imul
push
lea
or
or
sbb
mov
pushf
cs
add
call
bound
inc
xchg
es
inc
lock
or
or
les
inc
int3
add
sub
jp
pop
sbb
sahf
faddp
jnp
shl
cmps
repnz
out
pop
sub
cmp
rcl
cmp
adc
jo
rcl
lods
pushf
mov
xchg
pusha
movs
mov
sbb
inc
pop
adc
addr16
add
adc
leave
sub
jbe
push
sub
cmp
mul
sar
xor
outs
dec
movs
aad
loope
bound
add
pusha
jmp
push
pop
pop
int
inc
dec
sub
adc
push
and
les
mov
rdpmc
test
cs
inc
iret
aam
movs
jno
push
in
aam
ret
mov
ss
inc
add
add
or
fsub
ret
cmps
in
add
sbb
sub
iret
(bad)
stos
es
add
ds
in
inc
fadd
mov
repz
loope
jne
xchg
mov
hlt
test
lock
push
dec
clc
or
xor
add
aad
sbb
and
and
pop
scas
add
ins
cmp
sbb
scas
push
out
enter
dec
and
pop
mov
lods
into
ja
call
or
sbb
cmp
jb
mov
test
test
cdq
inc
inc
jnp
ret
shl
push
scas
push
movs
cmp
pop
lock
add
ffreep
test
mov
pusha
xor
cmp
pop
xchg
add
push
mov
movs
shr
and
fs
or
out
dec
inc
pop
add
cmc
pop
fimul
sub
cmp
xchg
neg
or
test
pop
xchg
xchg
div
push
addr16
aaa
mov
and
inc
sar
sub
lods
push
into
shr
or
ja
hlt
xchg
adc
mov
pushf
mov
cmp
and
lds
or
jnp
lods
cwde
popa
xchg
push
xor
or
cmp
or
and
loope
or
xor
and
adc
enter
adc
or
mov
loop
setp
push
sbb
pop
movs
pop
sub
push
mov
popa
cmp
(bad)
push
inc
cwde
ins
pop
icebp
mov
addr16
rcl
push
int3
cdq
(bad)
in
fucomp
push
pushf
aam
in
jbe
fisub
mov
push
retf
mov
das
inc
sub
jmp
push
adc
jle
cmp
xchg
(bad)
int3
mov
dec
inc
sub
or
sti
rol
cmps
lahf
inc
rcl
sub
pusha
pop
rcl
push
adc
pop
(bad)
aaa
hlt
pop
mov
xor
call
call
jno
xchg
pop
sar
lock
add
mov
sub
imul
cs
(bad)
aas
add
mov
test
mov
or
aas
(bad)
cwde
mov
push
mov
add
cmp
test
dec
sbb
cdq
cmp
in
dec
mov
mov
scas
or
or
push
stos
mov
and
mov
and
mov
cwde
xor
lods
add
inc
push
add
mov
add
call
test
mov
imul
sbb
aam
rcr
call
call
adc
push
arpl
push
sub
add
movs
sbb
sbb
adc
sbb
shl
mov
or
add
sub
sbb
test
inc
jle
jae
push
push
cld
xchg
jmp
das
not
sub
leave
adc
adc
mov
mov
sbb
add
pop
arpl
add
push
or
call
xlat
mov
add
mov
mov
push
pop
jmp
push
test
lock
sub
jge
adc
xchg
lock
push
xchg
push
imul
enter
dec
cmp
sbb
sbb
lds
rcr
push
xchg
xor
adc
pop
bound
call
test
bound
inc
or
sbb
call
xor
push
or
add
lock
push
push
push
mov
lea
mov
push
mov
pop
adc
dec
sbb
mov
cli
xchg
loop
sub
lea
cmp
rol
inc
rcr
sbb
dec
(bad)
outs
pop
stos
push
je
or
jb
or
jbe
aaa
jne
mov
adc
xchg
lea
fs
push
xor
jbe
sbb
inc
sbb
push
out
es
push
rcr
lods
jmp
sbb
dec
ds
test
and
mov
mov
ror
dec
mov
inc
or
inc
jl
adc
adc
ret
inc
push
xor
loopne
test
into
inc
inc
and
and
xchg
cmp
je
lods
test
pop
jmp
push
lea
sbb
mov
and
or
xchg
lods
pop
stc
add
mov
fisubr
push
inc
mov
mov
adc
jb
lea
mov
add
shl
mov
rcr
js
jmp
xor
or
js
push
sub
addr16
and
sbb
or
mov
and
sbb
test
cmp
and
push
cmp
adc
sub
ret
mov
aas
cmp
xor
and
pop
jmp
xchg
fdivr
aaa
pop
stos
xor
cmp
xor
pop
mov
and
sbb
jnp
daa
rol
out
sbb
sbb
test
out
push
mov
aam
sub
inc
inc
xor
and
sub
pop
nop
dec
rol
mov
sub
xor
sar
mov
or
sub
(bad)
cmp
push
cwde
mov
add
dec
jnp
xor
bound
data16
mov
mov
push
lods
imul
cmp
jb
jg
fmul
push
clc
call
sbb
add
arpl
dec
fild
mov
xchg
jne
push
add
push
push
call
dec
shl
sub
lea
add
mov
dec
adc
and
inc
ss
gs
ins
dec
data16
pop
pop
or
rcl
mov
sub
cs
jns
adc
push
mov
cwde
lea
inc
ret
int3
jne
add
ret
pop
add
and
aas
fs
push
inc
pop
sbb
lock
mov
sbb
push
dec
inc
and
test
pop
or
jmp
pop
inc
data16
push
sbb
inc
test
pusha
pop
stos
xchg
or
sbb
(bad)
sub
je
or
test
movs
outs
daa
sbb
cmp
jmp
push
pop
push
mov
inc
pop
inc
stos
movs
push
scas
call
dec
cmp
or
ficomp
push
enter
push
in
outs
add
push
and
cmp
add
jl
sub
adc
pop
inc
fmul
mov
jnp
call
dec
shl
lea
push
pop
push
mov
jne
sbb
ins
jb
cdq
push
pop
fsubr
pop
sar
ret
(bad)
sbb
xchg
adc
add
cdq
ss
mov
loopne
sub
in
adc
js
push
iret
ins
dec
inc
fmul
mov
ret
mov
loopne
clc
adc
test
sbb
xor
test
cmc
fdivr
push
dec
mov
push
arpl
mov
sbb
or
pop
add
inc
ds
fmul
ja
xor
dec
jb
imul
std
int3
push
rol
mov
push
add
dec
cmp
sbb
or
dec
fwait
xor
ja
ud0
or
xor
retf
dec
pop
cmp
pop
seto
jb
mov
aam
movs
movs
aas
and
add
scas
push
inc
dec
lock
jecxz
jl
mov
fs
or
inc
inc
and
in
xchg
stos
mov
adc
(bad)
xor
xor
fs
push
movs
cmps
cmp
ins
or
pusha
sahf
mov
jmp
cwde
cmp
nop
loopne
data16
cmp
xchg
jb
and
je
add
add
and
dec
add
cmp
jb
add
test
jne
mov
test
fmul
fnstcw
or
inc
addr16
xor
(bad)
hlt
jae
sub
push
aas
fs
pop
or
sbb
sar
(bad)
loopne
(bad)
or
push
add
jo
add
xchg
or
mov
mov
test
push
jno
aam
push
ret
mov
add
or
test
(bad)
inc
adc
dec
xor
jbe
add
cmp
and
add
nop
dec
int3
lods
inc
and
ss
lods
push
xchg
or
les
gs
imul
jl
into
outs
test
cs
icebp
jmp
jl
push
pop
add
mov
loope
ror
push
call
or
cwde
mov
ins
sub
or
push
or
loopne
sub
pop
add
push
or
adc
and
adc
movaps
ins
or
lea
add
addr16
pop
dec
fadd
mov
hlt
test
test
xchg
adc
mov
les
inc
mov
cmp
inc
jbe
cmp
inc
retf
enter
fucomi
retf
mov
lock
aas
mov
bound
ja
rol
jne
rcl
pop
mov
sub
mov
or
in
push
or
fidiv
int
xor
push
sub
shr
or
jne
or
fs
pop
mov
je
push
cmc
jne
and
dec
test
or
popa
xor
mov
or
xchg
or
fcomp
fmul
int3
pop
add
enter
(bad)
mov
enter
jne
(bad)
xor
stos
call
mov
jne
lds
je
inc
pop
or
(bad)
iret
cmps
jo
ja
stc
sbb
or
push
pop
xchg
sbb
xor
xchg
push
add
les
jne
into
add
enter
fstp
cmps
fs
and
mov
(bad)
sbb
ror
cmp
xchg
push
arpl
mov
fisubr
add
cmc
xor
or
pusha
(bad)
xor
mov
sub
dec
fmul
xor
lea
and
nop
aaa
or
ins
xor
mov
test
and
stos
add
cdq
dec
sbb
jb
sbb
lods
jae
aaa
shl
pop
xor
rcl
pop
int3
ss
pop
fadd
jb
xchg
mov
mov
or
pop
sub
push
cmp
and
jg
(bad)
sub
and
mov
in
or
inc
out
push
or
lock
les
add
test
pop
xor
jo
jge
mov
adc
or
xor
pop
repz
mov
stos
xor
mov
(bad)
sar
add
pop
xchg
ror
shl
or
add
xor
xchg
ss
sbb
ror
push
movs
adc
jecxz
pop
icebp
stc
xchg
push
xchg
xor
jno
sub
push
add
mov
dec
rcl
int3
rcl
aaa
push
sbb
icebp
jp
dec
rcr
or
push
xchg
cmc
test
push
jbe
(bad)
push
or
mov
xlat
(bad)
fadd
cmp
and
(bad)
ror
pop
adc
ret
add
push
mov
and
add
and
mov
sbb
and
pop
add
and
mov
cdq
xor
dec
mov
pop
and
and
je
sub
or
xchg
cmp
jae
mov
add
retf
jle
stc
cmp
rol
jmp
add
test
mov
je
mov
out
test
mov
add
stos
cdq
into
xchg
enter
je
ins
mov
test
jmp
bound
aam
add
js
push
mov
imul
jge
push
loope
and
adc
inc
jne
jo
in
call
mov
rcl
ret
stos
rcl
ret
sbb
test
je
mov
xchg
xchg
pop
xor
sbb
lds
adc
pop
or
std
add
and
cdq
sbb
mov
push
dec
xor
int3
sti
movs
mov
nop
(bad)
jge
lock
mov
jg
xchg
repnz
iret
lds
pop
or
fidivr
test
xchg
pusha
or
jb
cmp
mov
daa
sub
push
inc
inc
push
and
mov
mov
mov
mul
xchg
lods
fsubr
sbb
ret
frstor
cmc
add
(bad)
ins
sub
cli
mov
adc
add
jmp
repz
sub
push
lods
mov
and
mov
jno
lds
xor
rol
dec
in
cdq
add
or
add
adc
ror
jb
xor
add
test
push
fwait
or
adc
xor
cmp
popa
or
jle
fisub
xchg
push
push
mov
or
sar
lods
push
push
xchg
stos
retf
int3
push
add
loopne
lea
push
(bad)
cmc
mov
rcl
push
(bad)
adc
(bad)
push
xor
rcl
and
test
and
inc
pop
sar
xchg
cmp
inc
jp
(bad)
cmc
jle
push
sahf
iret
mov
dec
pop
enter
add
icebp
je
jns
mov
mov
xchg
inc
cmp
inc
xchg
dec
bound
test
ret
sub
scas
sbb
(bad)
or
nop
aaa
loopne
(bad)
ins
icebp
jbe
cmps
jnp
and
dec
pop
sbb
rol
retf
movs
arpl
enter
ret
push
mov
jno
or
push
and
xchg
les
adc
daa
inc
dec
sub
mov
push
ds
mov
add
sub
ins
or
sub
cmp
adc
push
mov
lock
dec
iret
xor
adc
dec
pusha
ins
nop
jbe
cmp
clc
add
test
ins
jl
imul
inc
adc
nop
push
ds
mov
adc
push
mov
add
sbb
add
cmp
mov
mul
push
mov
rol
enter
cmp
adc
adc
leave
adc
sub
aaa
mov
and
adc
repnz
sub
adc
leave
in
mov
pop
adc
add
mov
jg
cmps
nop
or
(bad)
pop
adc
dec
adc
push
adc
dec
adc
jne
xor
push
sbb
add
pop
adc
fst
pop
lods
ja
pop
xor
adc
mov
lea
cmp
adc
adc
sub
add
fcmovu
call
jmp
arpl
lods
mov
mov
das
mov
mov
adc
and
pop
loopne
out
imul
mov
or
mov
dec
or
fbld
verr
cmp
xchg
add
inc
aaa
lahf
mov
mov
lahf
push
repnz
scas
fist
pop
sub
push
sub
adc
adc
pop
enter
sbb
inc
xor
mov
jne
cmp
pop
and
call
inc
add
add
sbb
inc
or
inc
push
call
pop
inc
or
pusha
mov
xchg
push
push
dec
(bad)
out
and
mov
sub
xchg
inc
mov
add
inc
call
push
sbb
adc
adc
scas
sub
add
pop
mov
inc
or
arpl
cmp
pusha
push
shl
hlt
xor
add
pop
mov
in
inc
cs
xor
sub
inc
stc
(bad)
add
or
or
adc
inc
sub
(bad)
ds
or
cmp
and
clc
push
xor
pop
inc
sahf
push
cmps
or
mov
adc
clc
jb
in
adc
test
pusha
add
stos
sbb
pop
addr16
xor
mov
mov
adc
shl
and
pop
sub
daa
in
or
or
pusha
test
mov
xor
or
adc
push
leave
xchg
adc
adc
adc
mov
mov
in
jnp
in
mov
cmp
pop
jne
(bad)
mov
in
add
add
or
inc
xor
add
xor
mov
sbb
xchg
in
sbb
adc
adc
sub
adc
rcr
imul
je
mov
or
sbb
add
add
and
mov
mov
xchg
enter
pop
imul
pop
add
into
and
or
add
aas
mov
hlt
add
pop
in
mov
or
rol
or
mov
cmp
dec
pop
ins
enter
dec
xchg
add
sar
int3
xor
cmp
out
push
or
pop
xor
add
jg
xor
inc
mov
shl
mov
add
addr16
dec
cmp
xor
mov
pop
or
xchg
dec
lock
add
cmp
adc
xchg
push
popa
sub
mov
ret
dec
xor
inc
(bad)
enter
mul
in
inc
cmp
push
push
or
pusha
mov
loope
lea
adc
frstor
and
jns
push
xchg
(bad)
xchg
sub
sub
popf
test
xchg
adc
addr16
movs
icebp
and
sbb
xor
mov
mov
mov
mov
pusha
fs
add
fdivr
ins
jecxz
lea
xchg
add
or
fist
int3
sub
dec
jo
sbb
mov
jl
push
pop
push
not
sub
jecxz
sub
add
add
outs
shl
test
mov
and
mov
mov
add
push
and
mov
mov
lds
jl
push
ret
sub
add
jnp
inc
mov
nop
jne
sub
in
je
pop
inc
scas
nop
inc
dec
push
lds
packuswb
push
dec
test
jmp
sbb
gs
cld
push
scas
adc
call
pop
dec
out
(bad)
sub
cwde
push
adc
stc
cmp
in
dec
inc
nop
popf
fld
into
add
and
xchg
in
fisttp
cmp
mov
popf
(bad)
adc
adc
into
cmp
jp
jne
outs
sub
popa
add
ror
xlat
ins
inc
(bad)
sti
jecxz
xor
mov
or
mov
xor
push
add
cmp
ret
and
mov
daa
push
stos
outs
mov
cmps
inc
cmp
mov
push
inc
push
inc
mov
fldcw
mov
jo
lods
jns
inc
repnz
adc
mov
sub
mov
pushf
shr
cmp
cdq
xchg
loopne
stos
outs
and
popf
rcr
add
jl
and
lods
iret
add
retf
add
cmp
dec
xchg
(bad)
xor
sub
or
sbb
jle
sbb
mov
jp
jns
fadd
in
add
test
ret
mov
add
xchg
imul
fndisi(8087
adc
hlt
mov
add
xchg
xchg
xchg
push
xchg
mov
out
std
icebp
jg
dec
and
mov
pop
adc
mov
or
scas
push
sbb
imul
in
nop
pop
adc
pop
pop
rcr
daa
in
mov
push
mov
xchg
pop
add
pop
bound
xor
pushf
cmc
inc
pop
daa
sub
xor
adc
push
or
push
xchg
push
add
jb
arpl
xor
mov
rol
mov
out
mov
mov
(bad)
sub
inc
and
push
adc
aad
add
inc
cmp
jl
mov
inc
or
(bad)
sub
mov
add
cmp
call
xor
inc
pop
adc
ret
jae
retf
mov
jbe
scas
ins
fistp
push
and
outs
add
sub
jle
fs
movs
push
adc
or
fwait
loopne
call
or
loop
mov
jmp
mov
pop
dec
bound
dec
aas
add
jns
mov
dec
add
ins
fmul
leave
daa
fst
imul
outs
fimul
and
pop
mov
ss
push
push
outs
add
in
pop
add
pop
enter
xchg
adc
push
add
push
popa
call
push
push
daa
lock
push
mov
sbb
push
shr
dec
pop
(bad)
or
add
mov
mov
jno
jg
mov
xor
clc
sub
mov
cmp
fld
mov
mov
mov
fimul
inc
or
or
scas
jbe
test
mov
jno
les
rcl
pushf
mov
dec
pop
sbb
and
adc
loopne
es
add
ins
add
fmul
dec
cmp
sbb
mov
xchg
adc
xchg
sbb
pmullw
fist
fwait
xchg
push
push
push
lods
jmp
cmp
and
pop
jecxz
xchg
dec
inc
scas
cdq
xchg
aam
or
je
dec
jne
ret
adc
sti
sbb
push
sti
fcmove
fwait
cld
ins
mov
xor
fdivr
je
xchg
or
sub
je
jo
lods
sbb
ficom
je
inc
cmp
(bad)
push
pop
jg
lea
or
shr
dec
and
addr16
nop
jno
mov
cwde
inc
int
sub
loope
mov
leave
test
cmp
add
retf
xor
or
dec
mov
or
sbb
aaa
mov
push
xchg
cdq
push
adc
stos
xchg
leave
loopne
je
sub
sbb
or
inc
inc
scas
mov
mov
(bad)
cmp
jl
jmp
rcr
or
dec
cs
in
mov
cs
cmp
sbb
push
push
adc
std
adc
out
or
jne
mov
xchg
std
dec
or
push
add
push
fisttp
adc
adc
fisub
adc
sbb
push
dec
and
(bad)
sub
pop
arpl
test
sbb
scas
lock
push
mov
or
fcomp
les
inc
fidiv
xor
and
xchg
and
dec
fiadd
mov
xchg
jne
sbb
sar
test
mov
jmp
mov
sub
pop
(bad)
and
cmp
xor
inc
stos
pop
or
fst
(bad)
jnp
or
add
add
nop
out
or
and
lahf
neg
daa
mov
xchg
ror
mov
sub
or
jecxz
call
pusha
sub
jg
add
mov
sub
jl
push
mov
mov
test
push
les
stc
icebp
dec
sahf
adc
loop
add
push
jmp
xor
(bad)
xor
mov
daa
loop
cmp
xor
pop
sti
sub
add
jle
dec
or
and
call
cmp
mov
inc
push
cmp
mov
(bad)
popf
pushw
shl
xchg
into
movs
or
fsubr
outs
(bad)
jp
jle
inc
shl
call
inc
scas
sub
movs
dec
sub
jnp
add
mov
jmp
adc
adc
(bad)
cmc
add
mov
sbb
add
add
cmc
fmul
push
sbb
in
xchg
push
or
jmp
ret
xor
pushf
shr
sti
fdivr
add
fsubr
mov
sub
adc
fs
push
mov
mov
rcr
push
(bad)
ror
adc
sar
xor
cmps
rol
cmp
fadd
gs
push
push
mov
outs
out
out
inc
sub
(bad)
aaa
push
rol
xchg
pop
movs
hlt
js
mov
mov
cmp
in
ret
aad
cli
call
push
mov
icebp
mov
add
mov
and
xchg
loopne
sar
push
test
push
loopne
jecxz
cdq
(bad)
fs
sbb
js
(bad)
fmul
inc
loopne
mov
pop
or
popa
xchg
dec
loopne
jo
cmp
test
call
push
rol
adc
das
pop
push
mov
add
add
add
test
in
jg
xchg
xor
xchg
cmp
cli
adc
inc
mov
xor
cmp
iret
sbb
retf
and
enter
fisubr
sub
mov
mov
je
daa
push
xchg
jo
inc
icebp
bnd
inc
xchg
xchg
jae
ror
sar
sar
mov
and
imul
dec
dec
cmps
mov
sub
xchg
mov
add
or
push
retf
jb
jae
mov
loope
add
test
lea
push
push
mov
ja
push
cmp
push
jmp
and
movs
aas
aas
push
sub
mov
xor
jae
aad
and
aam
cmp
lahf
sub
rcr
or
movups
shl
lahf
jl
jno
in
pop
not
sbb
cmp
push
pusha
aam
dec
mov
in
jbe
mov
aas
stc
xor
aaa
push
jge
lea
xchg
pop
sub
pop
and
movs
jle
fstp
fstp
dec
xchg
nop
ret
fnstcw
push
xchg
adc
mov
xor
pusha
in
add
dec
fisttp
jno
repz
jmp
in
inc
inc
inc
enter
xchg
xchg
adc
(bad)
push
jg
or
lea
add
loope
dec
or
(bad)
add
nop
or
ss
xchg
pop
inc
aam
inc
aam
retf
cvttps2pi
xchg
dec
dec
fs
xchg
int3
jecxz
mov
cmp
sub
xor
dec
test
and
cli
(bad)
aaa
and
lea
fdivr
mov
mov
ror
mov
dec
out
es
call
or
push
sbb
add
imul
lods
sbb
dec
cmc
ins
adc
sbb
pop
add
inc
add
push
push
inc
lahf
xchg
ins
add
push
test
(bad)
mov
pop
jmp
jle
cs
enter
mov
hlt
hlt
mov
outs
cmp
mov
mov
stc
hlt
not
xor
jl
pop
rcl
rol
adc
rol
push
or
xchg
push
push
or
sbb
push
xchg
shl
push
push
push
lock
sar
(bad)
test
push
inc
je
xor
sbb
push
pminsw
out
rol
xchg
fsincos
and
je
gs
int
rcr
adc
fist
mov
or
retf
inc
xor
xor
dec
dec
scas
mov
cmp
mov
mov
pop
movs
push
jb
lods
fcmovnb
sub
mov
fsubr
mov
sub
dec
imul
pushf
fs
push
(bad)
xor
call
sub
sbb
jmp
xchg
adc
add
add
rcl
enter
scas
mov
shl
faddp
mov
mov
jle
add
mov
jmp
aaa
mov
out
push
jb
imul
nop
adc
mov
ss
out
jle
mov
or
sub
pop
fwait
ret
fidiv
add
jo
or
ins
jmp
sar
aam
push
inc
or
inc
mov
ins
call
or
js
xor
sbb
mov
inc
cdq
jne
push
adc
aad
jo
mov
cmp
fcmovnu
mov
dec
push
add
xor
xchg
or
or
cmps
xchg
add
je
and
inc
inc
push
push
std
add
hlt
cmp
lock
xchg
es
ror
div
mov
jbe
mov
or
xchg
or
inc
js
outs
jo
and
fcmovu
sbb
les
mov
pop
pusha
add
jmp
push
scas
push
outs
arpl
cmp
sbb
adc
cmp
nop
sar
add
xor
push
test
sub
sar
xchg
aas
adc
enter
jecxz
sbb
icebp
ja
push
(bad)
mov
cmp
in
jl
push
retf
cmp
dec
mov
test
adc
sbb
pop
imul
add
loop
pop
mov
or
dec
test
inc
cmp
jp
inc
pop
sahf
sbb
pusha
lods
je
out
daa
xor
mov
or
cmp
or
add
ins
or
fadd
cmp
mov
or
jl
inc
bound
xchg
adc
mov
rcl
jp
adc
out
aas
and
or
add
mov
push
mov
in
icebp
adc
cmp
cmp
pop
push
mov
js
sbb
fwait
or
(bad)
faddp
or
dec
sub
out
popf
push
cmps
mov
jl
sbb
adc
pushf
nop
stos
or
dec
or
lock
add
mov
push
mov
xchg
(bad)
xor
mov
rcl
pop
out
adc
or
mov
(bad)
cmp
jg
adc
xor
mov
and
or
adc
mov
cwde
pop
and
push
push
mov
stc
scas
pop
xchg
daa
and
dec
sub
jl
(bad)
sub
push
je
xchg
sar
xor
nop
jl
pushf
sub
jne
inc
fadd
lods
int3
and
inc
ins
add
jmp
push
sub
lods
push
cmp
lds
jg
and
pop
adc
pop
ins
cmp
push
jg
jno
pusha
add
mov
jecxz
outs
dec
loope
retf
pusha
add
in
inc
test
pop
popa
mov
add
adc
arpl
mov
xor
mov
jne
xlat
dec
scas
or
push
cli
jb
dec
jle
jle
mov
mov
(bad)
cmp
add
pusha
adc
sub
(bad)
retf
inc
or
fldcw
mov
sbb
ins
xlat
and
add
mov
cmps
sbb
aas
iret
sbb
cs
ret
and
pop
push
adc
mov
lock
pop
xchg
sbb
pusha
sar
loopne
sub
add
js
add
clc
dec
push
mov
pop
adc
lods
add
xor
add
sbb
add
cdq
adc
inc
les
cmp
mov
add
es
add
xor
jp
jo
fstp
enter
dec
pop
cmp
dec
test
inc
lods
push
push
mov
adc
mov
leave
sub
add
fbld
jg
leave
add
xchg
out
jmp
pop
push
mov
push
add
loope
shl
dec
xchg
adc
add
lahf
mov
xchg
inc
bound
mov
or
dec
in
nop
xchg
retf
retf
rcl
call
pop
mov
jne
pop
(bad)
pop
cmp
push
xlat
cdq
sar
and
mov
sbb
dec
sbb
fld
jmp
call
add
mul
(bad)
and
enter
ja
mov
add
jmp
push
push
mov
cmp
retf
mul
imul
inc
xchg
mov
sub
mov
adc
ss
pushf
popa
add
jp
cmps
push
sbb
xor
add
cmp
pop
leave
mov
sahf
xor
sbb
add
in
xchg
rol
push
push
fstp
(bad)
sub
shr
icebp
ror
jns
xlat
add
adc
adc
imul
xlat
and
dec
(bad)
lods
nop
pop
or
mov
push
movs
mov
test
dec
test
cdq
inc
sahf
and
mov
push
cmp
xor
pop
test
cld
fistp
out
not
dec
jne
add
rcl
pop
adc
rcl
or
inc
sub
into
gs
inc
int3
cmp
sub
outs
retf
or
mov
icebp
xchg
pop
mov
xor
sbb
and
(bad)
test
and
or
sbb
test
mov
ret
cld
retf
(bad)
call
xchg
jbe
lea
scas
add
lock
inc
adc
aaa
mov
mov
popf
addr16
shr
xchg
rol
mov
or
or
lods
mov
add
fisub
jno
sub
or
loop
adc
or
push
addr16
test
mov
cld
adc
push
sub
in
or
in
popf
push
inc
test
sub
fmul
push
cmp
or
mov
xchg
push
xor
push
and
xchg
mov
ficom
and
xchg
xor
sbb
adc
lahf
mov
(bad)
(bad)
adc
xchg
mov
pop
or
jmp
mov
arpl
push
fsubr
jg
mov
add
fwait
add
or
add
add
mov
les
fisubr
pop
add
inc
xchg
add
dec
out
push
push
adc
test
dec
je
pop
push
pop
pop
je
mov
mov
pop
daa
mov
and
or
dec
jo
test
push
cli
push
mov
add
mov
clc
mov
mov
es
and
xchg
sub
cdq
inc
jge
dec
and
push
imul
and
xchg
cmp
push
cmp
inc
pop
xor
adc
add
aas
cmp
lods
daa
mov
retf
(bad)
push
adc
mov
mov
pop
and
push
adc
js
cmp
mov
adc
push
sahf
fld
pop
adc
mov
pop
xchg
lock
add
or
and
aaa
xor
add
in
js
movs
retf
daa
mov
and
scas
pusha
push
push
push
xor
cmps
mov
out
xor
in
add
lea
mov
ret
jbe
mov
sub
sub
dec
iret
mul
or
out
test
rol
push
xchg
stc
mov
inc
push
cmp
add
adc
cmp
aam
push
xor
cmp
cmp
test
cmp
pop
and
push
xchg
repz
cmp
test
mov
ins
mov
push
xchg
push
lea
and
ja
cmc
shl
adc
call
std
pushf
jno
fcom
mov
mov
xchg
fbld
jg
(bad)
std
mov
inc
mov
dec
xchg
cmps
push
movs
push
loope
adc
cmps
or
mov
mov
nop
rol
adc
add
xor
push
add
xor
inc
inc
sbb
push
or
lods
dec
hlt
stos
and
ins
dec
(bad)
les
mov
fidivr
cmp
or
adc
and
adc
test
mov
mov
add
ds
mov
jmp
lods
pop
adc
loope
pusha
adc
popa
mov
add
test
add
sbb
mov
and
sub
sti
or
xor
jge
push
adc
dec
rcr
out
adc
popf
push
xor
clc
push
mov
mov
lods
cmpxchg
shl
xor
movs
or
mov
loope
test
or
popa
daa
mov
lea
add
mov
les
lea
scas
test
or
cs
lea
jbe
jns
jmp
or
push
mov
scas
popf
xchg
cld
lahf
clc
nop
call
add
retf
add
jmp
and
out
sbb
aaa
(bad)
xchg
or
add
sub
pop
adc
enter
add
or
sub
xchg
cmp
sub
push
adc
dec
adc
nop
imul
cmp
push
push
cmp
test
test
cld
xchg
adc
add
jo
sahf
adc
sbb
sub
push
add
int3
add
push
enter
cmp
call
mov
dec
jbe
sbb
pop
mov
sbb
aaa
(bad)
add
xchg
pop
sbb
sbb
push
sbb
jo
push
or
fidiv
inc
test
hlt
xor
adc
ds
push
push
push
pusha
sbb
call
xchg
mov
inc
and
sahf
out
ret
sbb
dec
fbstp
cmp
push
and
mov
cwde
repnz
into
mov
pop
mov
hlt
mov
jmp
movs
push
aam
mov
and
in
fmul
in
test
sub
xchg
dec
in
sbb
pusha
fwait
ds
sub
sbb
sub
dec
cmp
pop
sub
test
push
je
mov
sub
fwait
jl
xor
pushf
sub
rcr
scas
mov
sbb
or
push
mov
and
jo
in
mov
or
add
sub
xchg
dec
mov
xchg
loop
sbb
xor
loopne
cmp
cmp
xor
inc
sbb
mov
inc
sbb
xor
cs
or
cmp
sbb
sbb
pusha
xor
fs
push
pop
ds
in
sbb
in
mov
pop
cwde
mov
pop
push
lock
repnz
add
mov
pop
shl
mov
aas
mov
mov
or
mov
inc
rcr
push
add
and
lea
or
push
loopne
add
dec
push
inc
in
push
push
lods
inc
dec
add
pop
es
ins
mov
push
aam
add
adc
(bad)
or
sbb
cmp
and
je
mov
dec
add
xchg
xor
pop
adc
inc
sbb
(bad)
push
dec
jg
cwde
test
lock
adc
mov
add
pushf
cdq
ss
int
sbb
mov
or
adc
mov
add
mov
xchg
adc
cmp
add
cmp
test
repz
bound
loop
inc
rcr
lahf
push
mov
pop
ftst
outs
arpl
push
cmp
sub
adc
pop
push
shl
daa
mov
jg
mov
loope
add
jmp
hlt
xchg
aas
cmp
dec
inc
push
inc
inc
fs
pop
pushf
add
sbb
cmp
retf
add
sbb
xchg
and
sbb
add
jb
add
adc
or
repnz
sbb
sbb
sbb
popf
rol
enter
or
fmul
rcl
sub
cmp
add
jp
sbb
pusha
sbb
xor
ins
adc
cmp
dec
enter
inc
sub
dec
or
sbb
push
lock
or
push
and
inc
mov
movs
repnz
mov
or
lea
imul
sbb
pop
dec
cmp
(bad)
xchg
not
mov
jge
xchg
ret
je
fild
mov
sbb
nop
daa
pop
sbb
mov
sbb
mov
mov
adc
leave
inc
ss
pop
hlt
pop
loopne
ja
fisttp
bound
pop
and
jl
mov
pop
nop
pop
xchg
imul
(bad)
cmps
cmp
adc
pop
cld
cmp
das
xor
mov
add
push
mov
(bad)
sbb
push
xor
inc
mov
mov
sub
adc
fs
adc
add
inc
xor
cmp
xor
mul
sub
(bad)
push
push
xor
sub
or
adc
or
imul
ins
retf
int3
adc
fs
push
jl
dec
mov
push
pop
sub
clc
push
xchg
push
mov
add
mov
jbe
ficom
and
lods
or
xor
les
nop
add
mov
push
push
mov
mov
fdivr
sbb
cmp
adc
pop
(bad)
xor
xchg
int3
add
repz
rcl
add
js
adc
mov
mov
ins
cmp
inc
pop
out
ret
push
arpl
jae
mov
(bad)
cmps
or
push
inc
ss
sub
push
sub
fistp
aad
add
inc
jnp
xchg
out
inc
add
or
lds
pop
add
call
cmp
xor
test
ret
mov
out
jl
mov
xor
and
inc
mov
sbb
dec
or
fucom
dec
dec
or
stc
pop
pop
and
cmps
push
leave
xor
xor
jns
cmp
lock
mov
(bad)
outs
mov
jl
pop
jb
pop
hlt
add
inc
lock
fcom
ret
pop
test
mov
push
push
xchg
fild
adc
push
lods
or
test
sbb
cdq
add
mov
xchg
sub
xchg
push
pusha
movs
iret
adc
push
fiadd
je
clc
mov
loope
aas
push
ret
or
aaa
fmul
jns
leave
jmp
inc
sbb
mov
add
inc
add
movs
jmp
or
xor
xor
pop
mov
push
push
icebp
es
add
clc
sbb
retf
repnz
sub
add
loop
inc
adc
adc
mov
mov
sbb
fcomp
adc
sub
xlat
mov
sub
or
(bad)
aad
inc
gs
xor
pop
sub
xchg
jmp
fistp
mov
sub
nop
or
pusha
lahf
outs
loopne
ret
cdq
dec
push
mov
das
add
sbb
sub
adc
or
das
ret
stos
addr16
pusha
adc
ror
sar
jge
sub
mov
pop
mov
or
cmp
in
xchg
jno
(bad)
pushf
and
gs
je
inc
dec
loopne
push
sar
dec
or
je
sar
and
jbe
rol
mov
cmp
or
jp
cmp
push
xor
mov
les
mov
cmp
pop
les
mov
cmp
adc
cli
xchg
loopne
fwait
mov
fcmovnu
(bad)
test
das
or
inc
push
sbb
adc
push
pusha
xlat
int3
push
xchg
jp
push
cmps
cwde
dec
mov
xchg
lea
jb
push
pushf
add
or
mov
test
pop
mov
mov
(bad)
aad
sbb
adc
and
call
xchg
add
sbb
dec
and
test
call
mov
dec
add
ins
add
dec
ficomp
add
push
adc
and
outs
push
sbb
cdq
je
sbb
cli
sbb
lea
cmp
popa
and
cdq
sbb
loopne
stos
and
push
retf
mov
push
mov
mov
adc
js
rol
jb
mov
add
fnstcw
(bad)
leave
es
jb
xchg
inc
push
xchg
xor
in
pop
push
pushf
or
push
ins
and
xchg
push
pushf
call
push
outs
movs
test
add
sbb
mov
jbe
push
xor
dec
cmp
adc
lds
jae
daa
xor
cmp
push
sar
or
mov
clc
push
jl
push
push
in
adc
inc
pop
cmp
push
vmptrld
dec
or
stc
adc
shl
mov
cmp
adc
loope
fisubr
movs
dec
mov
test
outs
xor
inc
jo
ins
pusha
mov
dec
sbb
in
dec
inc
dec
iret
xor
push
inc
bound
xchg
data16
inc
and
xchg
xchg
sub
add
iret
shr
push
adc
test
ds
dec
cmp
dec
push
xchg
adc
gs
dec
out
dec
call
pusha
or
fs
ret
adc
xchg
out
push
ret
loope
adc
clc
push
add
dec
pop
dec
mov
fmul
cmp
jb
inc
mov
cmp
adc
out
sar
dec
xor
sbb
lods
sub
stos
loop
or
sbb
push
mov
lahf
inc
ins
gs
xchg
fcmovbe
push
push
mov
jecxz
scas
call
pop
pop
call
leave
sar
je
ss
inc
cmps
push
mov
fsubr
jmp
push
xchg
jb
push
test
add
dec
ror
dec
xchg
adc
adc
cmc
enter
cmp
xchg
xchg
and
loop
xor
cmp
sub
push
clc
aas
test
mov
xchg
or
add
dec
sbb
aas
mov
sahf
pop
std
das
jg
sbb
sbb
jbe
sub
xchg
sub
jl
push
leave
fs
lahf
test
movs
xor
pop
mov
inc
adc
mov
(bad)
stc
dec
das
push
clc
jg
(bad)
(bad)
popa
push
inc
loop
pop
dec
or
rcl
jmp
xor
adc
and
test
or
lea
ss
dec
add
test
aas
rol
and
fdivr
lea
iret
inc
daa
push
push
rol
retf
add
std
(bad)
std
lods
test
add
add
xor
add
push
jmp
dec
js
shl
(bad)
mov
xchg
add
jbe
push
push
sub
push
jle
cmp
sbb
js
xor
jne
ror
mov
subps
in
clc
cmp
mov
pop
xor
clc
push
rol
pushf
(bad)
adc
sti
xchg
daa
icebp
cwde
mov
dec
adc
add
into
sbb
cmp
iret
and
iret
in
sub
ss
or
adc
cmp
jp
cmps
cmp
fs
inc
test
(bad)
jmp
xchg
mov
mov
pushf
pushf
rcr
ja
add
pop
out
int3
shr
mov
xchg
add
jno
xchg
sbb
add
stos
add
mov
lock
rcl
cmp
popf
sti
mov
cld
push
mov
mov
push
mov
test
mov
rol
mov
adc
mov
dec
cmps
lea
inc
sub
enter
jnp
(bad)
xchg
int3
mov
ret
push
bound
cmp
mov
lea
xor
cli
adc
daa
push
pushf
js
adc
cli
xor
or
mov
mov
or
pop
enter
jb
push
popf
je
cmp
and
ins
sbb
rcl
clc
in
es
sbb
retf
inc
xchg
ret
pop
sti
and
pop
pop
cmp
addr16
lods
outs
sbb
sub
push
icebp
mov
sub
loopne
fldcw
cmp
ss
aam
imul
mov
mov
and
and
mov
push
push
je
imul
lea
mov
or
xchg
loope
jbe
les
push
and
mov
sahf
xchg
xchg
dec
mov
xchg
cmp
(bad)
push
pusha
(bad)
in
hlt
ins
ret
xor
je
and
or
and
(bad)
(bad)
inc
std
dec
push
std
movs
inc
sbb
ficom
xchg
aas
xchg
mov
and
ins
xor
xchg
addr16
push
push
jae
mov
pop
inc
and
cmp
lock
xor
pop
test
cwde
sar
mov
add
xor
pusha
nop
not
or
shl
stos
mov
cmp
fstp
add
mov
adc
pop
rcr
add
add
into
jo
push
mov
add
bound
and
les
std
or
cmps
arpl
retf
and
popa
out
inc
in
pushf
mov
and
adc
mov
mov
xor
loop
(bad)
aam
movs
std
push
lahf
push
mov
xchg
into
loope
call
les
std
pop
push
xor
in
clc
cmp
xchg
xchg
mov
add
pusha
stos
xchg
push
push
or
sub
mov
pop
cmp
or
push
push
xor
adc
or
movs
adc
hlt
outs
nop
cmp
pop
dec
or
inc
sub
xchg
dec
jge
sub
sub
in
in
mov
adc
int3
jl
loopne
and
out
inc
loope
or
xor
jp
rcr
pop
je
push
mov
sbb
scas
dec
sub
pop
mov
fild
(bad)
sub
or
or
jmp
loope
mov
inc
add
sbb
xor
arpl
inc
add
clc
js
xor
daa
icebp
inc
mov
xchg
dec
pop
jmp
mov
in
inc
mov
sub
mov
movhps
ret
add
loop
xlat
lea
fmul
xchg
cmp
shl
mov
jp
jne
mov
pop
push
sbb
cmp
fldenv
cmp
shr
xchg
or
xor
push
rol
or
sbb
sub
js
adc
jmp
sub
call
pop
cmp
mov
pop
(bad)
adc
add
push
xchg
add
(bad)
dec
mov
out
ror
mov
loope
outs
jbe
gs
push
test
push
push
std
test
xchg
dec
ds
jl
lea
js
ret
mov
mov
jns
add
and
sar
push
mov
adc
loopne
hlt
fs
mov
mov
xor
es
sub
inc
add
retf
shr
shl
int3
(bad)
fsub
test
dec
inc
lods
jp
movs
movs
adc
push
in
lea
inc
ja
outs
adc
pop
adc
pop
dec
sbb
fcomp
ds
mov
dec
loopne
sbb
mov
ret
fist
outs
das
loopne
dec
cmc
or
and
arpl
push
or
or
icebp
pop
loopne
popf
(bad)
nop
(bad)
dec
adc
in
ds
in
cs
push
fld
sti
jns
fiadd
jne
add
xchg
push
popa
lea
mov
pop
dec
je
adc
adc
pushf
inc
retf
clc
dec
sbb
push
push
mov
add
inc
xchg
js
sub
sub
in
repz
je
add
cdq
test
add
and
push
js
fadd
(bad)
and
xlat
imul
add
mov
or
mulps
mov
scas
pop
pop
test
test
sbb
int
mov
cmp
nop
movs
pop
test
jne
mov
ret
ret
lahf
pop
sbb
cmp
push
shl
call
fs
jo
mul
jmp
sbb
adc
push
mov
push
sar
push
bound
sub
loop
and
pop
inc
pop
stos
fld
or
imul
mov
push
mov
xor
lahf
sub
add
add
inc
xchg
call
je
mov
xor
(bad)
xchg
or
pop
mov
retf
add
push
mov
lock
pop
mov
nop
cmp
hlt
pop
push
in
push
in
or
enter
enter
js
add
xchg
mov
jbe
jmp
mov
mov
mov
cmps
retf
enter
add
lea
popf
xchg
mov
inc
mov
mov
push
imul
push
push
push
mov
dec
sbb
push
mov
add
sub
adc
in
or
add
or
and
pop
pop
push
push
adc
adc
pop
lods
or
or
movs
mov
xchg
or
add
xor
and
pop
mov
or
cmp
aam
repnz
push
enter
cld
adc
int
jns
dec
adc
sub
push
adc
and
xchg
out
push
adc
dec
push
or
jl
sub
or
adc
inc
ja
xchg
jne
push
xchg
mov
mov
xchg
or
aam
and
fiadd
push
test
adc
mov
xchg
jo
pop
jae
jmp
mov
loopne
call
inc
daa
test
pop
vrcpps
cmp
aaa
fwait
cmpxchg
mov
test
sbb
adc
and
push
pop
jecxz
mov
push
xor
sbb
and
mov
call
cmp
fstp
cmps
cmp
lea
iret
imul
nop
out
in
jmp
in
cwde
and
xor
popa
xchg
xor
mov
inc
jl
jb
pop
inc
add
pushf
cmp
jl
fbstp
add
adc
dec
mov
add
cmp
fild
xchg
imul
(bad)
cmp
loop
xchg
inc
clc
ret
adc
sub
leave
push
push
add
push
add
and
sbb
jb
setb
add
int3
and
sbb
add
cmp
nop
push
dec
and
and
add
jb
pop
enter
add
clc
xchg
xor
popf
add
mov
mov
or
push
mov
(bad)
push
fstp
in
fbld
adc
cmp
add
and
jmp
adc
dec
sub
add
inc
jmp
pop
cmc
repz
cmp
jmp
into
jnp
shl
daa
push
jge
pop
cmp
je
fisttp
xor
jns
xchg
int3
int3
sub
add
addr16
mov
jle
test
aad
cmp
and
jle
(bad)
scas
cmp
pop
ret
(bad)
sub
dec
je
dec
jne
out
cmps
inc
cld
sbb
pop
cmp
cli
add
mov
stc
lock
adc
sbb
push
shl
xor
push
jmp
xchg
cmp
mov
add
jp
mov
sahf
fs
xchg
add
jo
xchg
push
outs
sti
and
cmp
mov
or
and
mov
ret
mov
mov
mov
sbb
mov
jo
xchg
icebp
inc
rcr
nop
jo
je
adc
cmp
mov
pop
lock
in
je
mov
mov
ss
out
enter
add
mov
add
inc
ret
push
aam
cmp
dec
add
adc
mov
(bad)
add
mov
icebp
pop
inc
pop
inc
and
xor
leave
or
mov
or
add
push
jmp
mov
sub
in
cmp
repnz
arpl
jnp
cmp
jo
fmul
cmps
(bad)
iret
add
adc
mov
out
inc
out
cmp
push
cmp
rol
lea
lods
jo
out
lock
jecxz
push
push
mov
sub
push
iret
dec
scas
mov
cwde
inc
ret
shl
add
cdq
outs
add
loope
mov
push
xchg
adc
or
clc
sti
mov
mov
sbb
mov
sbb
push
clc
add
mov
push
mov
fnstcw
add
adc
movs
dec
shl
push
repz
xchg
dec
dec
push
pandn
dec
sub
cmp
push
push
pop
out
inc
sbb
jne
jl
retf
xchg
xchg
leave
das
cmp
mov
xor
jns
mov
in
sub
jmp
jb
or
jne
pop
push
add
test
or
inc
add
aam
(bad)
inc
or
dec
xchg
ins
inc
add
adc
push
pop
inc
sbb
loopne
in
push
mov
mov
int3
mov
jp
jecxz
mov
ret
mov
cmp
xchg
arpl
lea
ja
gs
pop
mov
sub
xchg
aas
ja
lock
or
jmp
jl
adc
jmp
clc
jmp
pop
or
jp
clc
mov
add
adc
pushf
jo
lea
mov
ss
push
xchg
jle
xor
les
mov
or
pop
mov
sbb
and
and
jbe
retf
out
jne
cmp
add
inc
adc
sbb
or
jmp
(bad)
push
ins
lahf
inc
jo
or
adc
mov
sub
les
xchg
and
pusha
aad
daa
(bad)
jle
mov
int3
mov
jmp
cmp
xchg
ret
pop
push
outs
mov
xor
and
add
fld
mov
adc
add
jnp
inc
fistp
es
mov
adc
xor
mov
mov
dec
xchg
add
fst
imul
in
and
adc
inc
dec
xchg
mov
test
jg
enter
mov
mov
push
pop
fadd
sti
cdq
dec
cmp
inc
sbb
sbb
xchg
cmp
into
fmul
sbb
enter
pop
sar
jmp
push
add
xor
mov
xchg
and
inc
ss
cli
call
or
jg
sar
pop
pop
sbb
outs
add
push
sub
icebp
pop
inc
movs
mov
push
or
sbb
std
pop
or
dec
and
cmp
jge
pop
pop
js
mov
mov
cmps
fcomp
pusha
adc
mov
inc
fdivr
mov
aad
inc
sbb
es
fs
adc
mov
add
and
cmps
sub
mov
pop
aaa
push
mov
jle
(bad)
nop
es
faddp
mov
loope
add
mov
shl
fcom
pop
sbb
add
dec
test
jae
mov
sub
cmp
xchg
(bad)
les
xor
ret
mov
mov
aad
sub
push
movs
push
nop
cmp
inc
mov
(bad)
and
cmp
ret
mov
cmp
ret
push
outs
adc
in
mov
daa
(bad)
push
cmc
ins
es
add
sbb
lea
test
add
pop
in
ror
inc
jle
aam
sbb
cmp
push
jo
sub
push
and
mov
pop
and
push
inc
bound
xor
popa
mov
not
and
mov
in
pop
mov
add
pop
mov
adc
adc
lods
or
outs
sub
xor
adc
lea
ror
call
or
push
and
inc
xchg
cli
xor
or
shl
ja
mov
sbb
ficom
xchg
ret
nop
cmp
sub
pop
pusha
xor
push
mov
test
mov
pop
sub
push
mov
jl
repz
sbb
cmp
add
jo
inc
jmp
test
push
mov
repz
es
xchg
mov
adc
dec
ror
ret
add
loope
in
jb
pop
adc
fs
fcom
scas
imul
push
je
ja
and
adc
push
add
ins
not
pop
jno
push
push
add
push
xchg
aam
xchg
sbb
adc
les
idiv
pop
jbe
cmp
xor
xor
add
inc
pop
sub
pop
imul
push
cwde
xor
xor
outs
pop
pop
or
mov
in
add
fs
ror
shl
icebp
jno
cmp
inc
mov
xor
test
sub
push
push
pop
cmp
push
lea
popa
mov
pushf
mov
shl
push
jnp
icebp
pop
inc
mov
add
jae
mov
shl
out
sar
dec
mov
add
outs
cli
imul
loopne
jno
setl
fist
jno
lahf
into
xor
je
inc
test
xor
xor
lock
sub
jb
in
pop
aaa
lea
inc
mov
jne
rep
aas
adc
sub
dec
xor
sbb
adc
jne
jmp
mov
gs
lods
mov
shr
mov
loope
add
add
outs
or
push
pushf
aam
push
mov
add
or
sub
inc
adc
or
inc
mov
pop
add
(bad)
mov
outs
push
mov
push
xor
or
idiv
mov
stc
pop
in
jmp
cmp
repz
repnz
test
ds
jnp
push
inc
or
and
push
inc
cmps
adc
push
fmul
xor
(bad)
repz
pop
xor
mov
add
add
add
push
or
pop
inc
fmul
adc
or
iret
jnp
add
aas
es
and
aad
fwait
stos
jg
inc
shl
sbb
adc
or
add
dec
or
push
leave
mov
or
add
dec
movs
loop
aas
sbb
daa
xor
rol
dec
adc
test
mov
pop
add
stos
add
add
add
mov
mov
mov
mov
lea
pusha
mov
push
mov
dec
int
mov
test
cmc
jp
je
push
test
js
or
(bad)
jnp
inc
ja
push
mov
jo
sbb
mov
int3
rol
in
pop
imul
pop
add
push
fdivr
push
and
pop
test
push
mov
test
xor
dec
add
outs
arpl
xchg
adc
sub
jp
stc
add
cvtps2pd
test
jmp
inc
mov
sbb
xor
add
xchg
mov
pop
test
add
mov
push
loopne
jnp
or
jb
(bad)
cmp
cmp
iret
addr16
ss
pop
les
js
cmc
jmp
xor
in
mov
cmps
retf
xchg
xchg
push
mov
sub
jae
xor
inc
push
setp
lock
and
sub
dec
aam
cmps
inc
movs
imul
adc
test
rcl
rol
adc
mov
outs
popf
inc
cmp
and
sub
xlat
js
mov
adc
cwde
mov
clc
xor
nop
pushf
xor
and
mov
pop
xchg
daa
dec
jb
cwde
xchg
cs
pop
mov
lock
push
mov
jb
jg
xor
inc
pop
push
test
pop
mov
popf
add
cwde
test
ficomp
aad
jno
enter
cs
mov
dec
xor
xchg
adc
inc
sbb
sbb
in
outs
add
push
dec
push
add
push
out
adc
lea
dec
jg
lods
pop
std
sbb
imul
stos
fsubr
into
jbe
mov
or
mov
cmp
fadd
ss
push
psadbw
sbb
or
adc
add
bound
push
not
cmps
pop
sar
int3
arpl
dec
mov
and
inc
sbb
punpckhbw
cmps
call
push
sub
imul
adc
shl
jecxz
lods
es
ret
pusha
cmp
ret
push
push
dec
repz
fdivr
add
lahf
add
xor
rol
add
xor
pop
jl
or
out
push
inc
add
retf
(bad)
add
in
nop
add
clc
js
(bad)
out
add
out
shl
add
push
pusha
adc
in
push
mov
adc
or
sub
mov
sbb
or
stos
sti
add
pop
ret
pop
and
fcom
dec
pushf
or
jne
lea
call
jmp
pop
or
mov
sbb
jecxz
push
mov
fsub
adc
adc
add
lahf
shl
jecxz
pusha
fwait
movs
mov
leave
loop
sbb
mov
mov
call
call
(bad)
cmp
sbb
dec
cmp
and
inc
ja
xor
xchg
inc
adc
pop
mov
mov
cmp
fmul
adc
sub
fs
cmp
pop
cwde
popa
sub
hlt
int3
sbb
push
ja
xchg
jge
mov
jmp
or
sub
adc
out
int
lock
cdq
xchg
sbb
stos
add
xor
ret
dec
les
cs
xor
xor
test
jmp
cmp
sbb
and
mov
(bad)
ins
mov
add
and
stos
test
xor
push
fsub
add
sbb
mov
pop
xchg
add
push
xchg
imul
sub
out
mov
push
data16
add
add
dec
pushf
(bad)
mov
in
int3
inc
lods
nop
dec
cmp
pop
add
pop
adc
loopne
aaa
mov
mov
inc
jl
push
inc
push
retf
mov
or
jmp
xor
sti
pop
stos
ret
dec
dec
or
dec
clc
adc
jb
mov
push
js
add
lea
add
pop
or
or
push
das
or
jae
sbb
stc
push
xor
(bad)
mov
adc
push
and
sub
into
sub
sti
inc
loopne
mov
inc
push
and
mov
xchg
mov
loope
mov
mov
mov
mov
mov
xchg
add
psraw
enter
xor
sbb
dec
add
push
xchg
and
sub
rol
and
cwde
cmc
add
xacquire
jmp
fcomp
dec
sub
repnz
mov
jl
jo
cmps
sbb
pop
sub
icebp
push
mov
and
mov
fidiv
and
ds
mov
cmp
pop
cmp
pop
xchg
or
jge
in
inc
sub
inc
pusha
pop
or
push
jnp
adc
enter
cmp
sub
push
das
sbb
mov
jae
sar
inc
xor
jb
sahf
jp
or
rcr
js
(bad)
lea
adc
cmps
jg
mov
push
cmp
movs
inc
lock
sbb
ja
sbb
sbb
and
cmp
jne
pop
jbe
ins
push
pop
fsub
stos
ins
sbb
(bad)
(bad)
xchg
or
and
js
add
or
popa
push
inc
add
add
mov
dec
inc
jne
dec
mov
sbb
inc
add
rsm
inc
push
pop
cmp
data16
rol
mov
inc
sti
cmp
push
mov
out
cdq
sub
or
add
xchg
js
out
push
sub
xor
cmp
mov
adc
adc
inc
and
add
sub
fistp
and
and
push
adc
xchg
add
inc
push
stc
jo
cmp
rol
push
or
push
and
retf
xlat
push
push
push
hlt
sub
inc
and
jmp
mov
mov
and
or
in
rcl
mov
cld
mov
and
xchg
push
xchg
iret
ret
mov
sbb
shr
push
mov
push
mov
push
ret
addr16
inc
lods
pop
mov
es
add
sbb
mov
test
adc
call
add
loopne
xchg
idiv
pop
add
jbe
mov
xor
sub
pop
mov
inc
fcomp
je
dec
mov
outs
ins
and
push
push
outs
je
mov
outs
es
or
shl
call
ret
mov
daa
sub
cmp
dec
push
inc
or
aad
inc
mov
add
dec
adc
cmp
jo
inc
dec
cmp
push
xchg
cmp
and
imul
and
xchg
icebp
in
(bad)
xor
jo
mov
(bad)
loope
xchg
pop
sbb
sub
xor
cmps
or
jle
mov
and
ret
repz
dec
(bad)
into
sbb
ins
dec
pop
sub
jmp
and
jnp
and
push
mov
cld
mov
push
xor
jmp
push
cmp
push
add
cmp
rol
or
push
movs
lods
sub
(bad)
popa
sar
adc
daa
jne
mov
or
adc
mov
add
leave
push
push
pop
push
mov
or
lods
mov
inc
cmp
out
nop
shr
inc
pushf
push
mov
push
jae
rcr
outs
hlt
test
adc
imul
std
(bad)
in
ins
sbb
or
cmp
rcr
or
iret
sub
add
stos
fnop
inc
push
loopne
data16
mov
loope
pusha
mov
mov
mov
pop
pop
aad
test
pop
in
lods
imul
cmp
fisttp
cli
mov
pop
out
sub
or
sub
xor
add
sbb
sub
adc
pop
inc
add
lock
or
test
add
dec
lea
adc
add
xor
jge
mov
mov
fiadd
sbb
mov
cmp
sbb
dec
pop
dec
call
mov
bsf
xor
and
cmp
pop
cmp
or
sub
cmp
or
rol
enter
fmul
imul
and
sub
pop
fisttp
cmp
and
outs
cs
lock
mov
mov
lahf
and
or
push
inc
or
push
adc
adc
jns
jmp
dec
add
call
and
and
adc
xchg
xchg
add
loope
mov
(bad)
sbb
and
or
cli
loope
shr
sbb
mov
call
dec
mov
in
sub
add
or
or
add
inc
dec
dec
sub
call
test
push
movs
mov
mov
inc
xor
cmp
or
mov
into
fisttp
mov
dec
add
add
sahf
mov
or
aad
mov
xor
enter
in
cmp
imul
sub
add
add
add
mov
dec
push
loopne
in
mov
adc
jns
push
push
sti
pushf
sahf
add
fld
push
mov
jne
fidivr
xchg
xlat
shrd
ror
mov
adc
js
popa
adc
int
mov
mov
inc
test
mov
cmc
and
pop
call
fisttp
int
mov
std
inc
adc
popa
add
call
and
push
adc
jmp
pop
addr16
cmp
sahf
and
add
sub
push
lock
out
ret
call
or
xchg
add
xchg
or
push
add
test
inc
(bad)
mov
test
pop
enter
call
adc
imul
adc
cmp
loop
aas
xor
push
jg
out
sbb
les
(bad)
loope
xlat
sbb
minps
fwait
pop
mov
repnz
or
adc
into
jmp
add
push
cmp
ss
and
ja
pop
sar
dec
mov
mov
mov
fwait
dec
add
add
lods
xchg
add
mov
add
fcomp
inc
call
add
mov
push
cmp
push
ficomp
gs
fcom
das
or
cmp
xchg
enter
lock
out
int3
xchg
push
pop
and
add
cld
and
leave
inc
adc
xor
push
aad
imul
imul
ret
dec
or
xor
push
mov
scas
inc
fmul
sbb
pop
fdiv
add
jno
pop
inc
sbb
xchg
js
cwde
inc
sbb
adc
xchg
retf
adc
inc
mov
ja
test
sbb
add
cmp
push
sub
or
addr16
mov
popf
add
sbb
or
or
rcl
arpl
cld
mov
mov
sbb
loope
cli
xor
ret
rol
and
popf
mov
das
call
dec
xchg
out
jmp
or
pop
inc
push
jnp
ja
adc
mov
lods
test
or
adc
pop
add
scas
inc
and
rcl
jb
add
cmp
push
aaa
sub
push
clc
sub
mov
jo
lea
sub
push
sub
pusha
test
loopne
jno
xchg
clc
repz
push
mov
mov
pop
ret
pop
lock
or
sbb
adc
jo
push
push
add
add
pop
adc
dec
or
leave
dec
mov
push
repz
pop
clc
add
sbb
dec
loop
pop
retf
mov
out
sbb
aaa
mov
stc
or
push
adc
xchg
imul
mov
clc
and
lock
mov
lods
je
shl
mov
sti
in
mov
jl
js
inc
fs
or
data16
pop
adc
or
push
div
dec
xchg
jp
icebp
inc
repz
push
out
sti
or
xchg
jo
sbb
mov
mov
into
cmp
push
rcl
and
icebp
pop
sahf
ja
push
sub
xchg
lock
add
mov
cdq
adc
mov
ret
call
shl
mov
dec
or
scas
rcl
cmp
sub
inc
icebp
mov
sbb
mov
add
jns
jo
ror
test
shr
adc
in
sbb
xchg
cmp
mov
repz
dec
dec
pop
aas
xor
sbb
xor
jno
gs
je
in
adc
inc
push
inc
shr
outs
fs
and
and
cmc
and
cmp
je
push
xchg
xchg
lds
push
or
rcl
and
adc
pop
mov
ss
sbb
xor
stos
sbb
add
adc
mov
sbb
and
rcr
add
js
loop
retf
push
jo
fadd
loope
inc
sbb
dec
sbb
xchg
and
repz
or
inc
aam
sbb
popf
inc
sub
es
push
(bad)
or
mov
inc
adc
jnp
push
loop
adc
ret
inc
dec
nop
arpl
gs
xor
cwde
inc
bound
xor
rcr
les
shl
push
xchg
mov
fcmovnb
mov
add
pusha
pop
jne
and
adc
cmp
dec
sub
sbb
(bad)
je
jno
inc
cmp
add
jecxz
fild
test
test
arpl
(bad)
ret
lock
mov
test
int3
mov
mov
pop
pop
gs
cmp
icebp
mov
cld
pop
fwait
mov
ret
sbb
sub
outs
and
sub
icebp
je
jno
or
lods
daa
sub
iret
(bad)
test
fwait
sub
mov
rcr
sbb
add
daa
hlt
add
push
lods
loope
int3
out
outs
hlt
cmp
sahf
and
out
or
dec
gs
push
or
add
fimul
enter
push
dec
loope
pop
hlt
outs
bound
jle
les
mov
inc
shl
adc
and
mov
aad
(bad)
add
mov
call
imul
mov
add
adc
push
and
xor
push
and
ret
and
nop
js
xor
pushf
ins
and
icebp
pop
in
hlt
pop
jle
les
or
sub
add
sub
xchg
out
aad
mov
nop
push
in
test
mov
or
sbb
lods
xchg
lock
or
jo
rol
lea
cmp
adc
inc
es
es
pop
lar
mov
or
and
add
mov
jne
popf
idiv
fdivp
inc
dec
retf
je
test
ror
(bad)
pushf
push
pop
les
jp
addr16
sub
cmp
inc
call
pop
xchg
dec
out
sbb
mov
or
ins
mov
lods
idiv
rol
adc
or
movs
mov
jb
sbb
pop
adc
cmp
ret
daa
and
jb
or
bound
jbe
cmp
pop
or
cmp
shl
rcl
mov
js
push
mov
loopne
pop
sbb
daa
or
test
pop
not
xor
or
push
xchg
mov
fmul
mov
push
ret
inc
add
or
mov
push
push
mov
pop
push
add
add
adc
test
inc
pop
or
test
add
rol
mov
inc
mov
jmp
test
push
sbb
and
adc
or
shr
mov
aam
jb
inc
and
shr
pop
add
adc
scas
ret
push
dec
adc
cmp
sub
jle
test
adc
or
add
test
loopne
xor
xor
jno
ret
adc
inc
hlt
sar
add
mov
inc
jg
push
sahf
in
ds
mov
daa
loopne
adc
push
sbb
ins
mov
aam
adc
sbb
shr
sbb
push
cld
push
mov
cmp
sub
mov
inc
clc
loope
js
inc
mov
cmp
js
mov
adc
sbb
int3
pop
sbb
mov
jmp
add
les
push
imul
cmc
push
and
xchg
inc
imul
in
pop
mov
lar
and
pop
add
aaa
push
daa
mov
movs
add
mov
dec
xor
mov
and
inc
pop
rol
add
mov
sbb
jmp
(bad)
jmp
push
mov
sbb
xchg
sar
scas
add
jb
popa
movs
or
inc
xor
or
add
xchg
(bad)
out
sub
imul
or
movs
jno
push
bound
push
mov
adc
or
mov
sub
mov
add
dec
and
pop
push
and
xor
add
adc
aam
or
ror
cmp
add
lea
jbe
mov
push
(bad)
push
push
std
popa
add
ins
shl
pop
add
movs
push
xchg
out
add
or
mov
add
add
mov
mov
mov
std
sbb
pop
push
xor
call
in
adc
xlat
stos
mov
rol
and
xor
sub
inc
hlt
push
dec
lock
jo
pop
cmp
cmp
push
mov
dec
mov
and
stc
cmp
dec
repz
aas
pusha
scas
mov
or
sub
xchg
outs
mov
mov
popa
int
pop
add
aas
pop
ins
ins
inc
ja
mov
dec
cmp
or
cmp
sub
ss
pop
loope
mov
les
add
adc
sub
mov
popa
sahf
and
add
mov
add
push
xor
mov
xchg
aam
xor
mov
mov
jmp
push
dec
ret
push
add
ds
mov
or
pushf
sbb
rcpps
(bad)
jmp
push
push
mov
add
jge
das
dec
aas
das
jne
inc
mov
sub
dec
test
test
(bad)
pop
sbb
dec
mov
aas
cwde
cld
aam
xchg
inc
mov
stos
xchg
inc
pop
xchg
xchg
cdq
or
adc
jmp
xor
mov
jge
out
scas
mov
(bad)
scas
arpl
imul
fcmove
enter
push
mov
add
int3
xchg
xor
mov
push
cmp
daa
adc
add
jl
fadd
mov
jne
xor
jmp
adc
pop
add
add
dec
ins
ins
pop
push
popa
cmp
icebp
popa
cmp
push
add
or
jmp
pop
sub
inc
push
jle
mov
outs
xchg
dec
push
xor
ror
sub
fwait
or
xor
rol
sbb
mov
(bad)
and
iret
pop
push
xchg
mov
xchg
int3
int3
mov
mov
and
ins
dec
adc
xor
call
fs
xor
push
push
push
inc
and
out
add
mov
fcmovu
inc
and
push
jne
rcl
and
ror
rol
pusha
dec
mov
add
rcl
sub
int3
ror
cmp
mov
movs
jle
js
add
inc
sub
dec
cmp
test
shr
cmp
dec
cmp
mov
sbb
mov
popf
dec
movs
mov
test
lods
pop
pop
cmp
cmp
mov
xlat
adc
mov
jne
lea
fcomp
ja
pop
shl
fldenv
jne
and
daa
add
sbb
xchg
test
cmp
bound
push
pop
xor
and
mov
or
ins
arpl
sub
xchg
(bad)
push
retf
push
inc
mov
mov
pop
jo
xchg
aad
movs
into
jb
(bad)
(bad)
cli
mov
push
cmp
pop
adc
in
lods
std
daa
or
sbb
mov
xchg
jne
pop
nop
add
push
pop
and
push
sbb
xor
mov
inc
and
mov
sub
ror
or
inc
push
mov
cmp
jb
es
cmp
xor
jmp
or
add
mov
push
and
sbb
pop
ins
push
clc
loopne
js
stc
das
push
add
test
out
int
sub
and
lea
pop
dec
pop
jmp
push
xchg
mov
inc
pop
aam
fs
enter
fcompp
adc
push
inc
sub
je
or
sbb
mov
push
sbb
xchg
push
call
xchg
xor
inc
call
push
or
aas
mov
xchg
cmp
mov
push
cmp
ret
mov
cdq
xchg
dec
je
cmp
daa
dec
test
test
or
add
xchg
mov
add
add
movs
shl
mov
adc
sub
iret
and
inc
inc
mov
jns
sbb
jae
ret
inc
pop
pop
mov
add
adc
inc
rcl
or
push
sub
fmul
ror
or
mov
ror
sub
data16
ss
mov
fisttp
cdq
push
sbb
out
jnp
outs
test
fwait
push
cmp
sbb
dec
mov
adc
cmp
loopne
out
xchg
and
add
leave
in
les
push
push
in
loopne
jo
sti
sbb
adc
mov
in
aaa
test
loopne
add
cwde
sar
lock
das
scas
in
ret
lds
add
test
jmp
mov
jno
push
pop
in
jne
add
dec
cmp
add
in
lods
mov
push
push
jo
movs
int3
add
pop
push
ret
addr16
push
test
ret
int3
mov
inc
out
sub
xchg
ret
ror
movs
cmps
cmps
adc
je
(bad)
test
inc
pop
mov
add
mov
or
retf
repnz
fadd
adc
pop
pop
mov
fdivr
inc
pop
jae
xor
mov
mov
out
lock
sar
sti
push
mov
pop
add
push
leave
mov
js
pop
sbb
(bad)
sub
sbb
scas
mov
xor
in
ret
ds
jge
jp
inc
mov
in
sbb
push
or
adc
bound
mov
std
lock
pop
jl
repnz
xor
nop
or
add
(bad)
push
jo
rcl
and
add
dec
leave
inc
aaa
imul
adc
xor
sbb
dec
or
pusha
add
in
inc
inc
daa
in
adc
and
or
mov
retf
or
loopne
dec
adc
les
xor
pushf
(bad)
mov
sub
(bad)
enter
push
jle
popw
(bad)
fcmovnu
(bad)
xchg
add
xor
cmc
out
sbb
mov
cmp
mov
push
int3
jb
push
or
mov
(bad)
sbb
sbb
mov
outs
dec
mov
repnz
stos
xor
push
dec
push
push
pop
sbb
jb
sbb
add
adc
test
mov
xlat
inc
or
jns
int3
add
pushf
imul
je
ficomp
and
es
jg
mov
movs
(bad)
mov
call
sub
add
push
push
sbb
mov
xor
add
mov
int
movs
inc
mov
sbb
push
scas
mov
sbb
and
cmp
lods
mov
aas
push
dec
add
push
les
xor
icebp
push
(bad)
imul
or
fs
les
aas
pop
pop
push
je
cmp
push
(bad)
and
cmp
fisub
mov
pop
mov
inc
mov
cmp
je
nop
pop
(bad)
jmp
sub
or
pop
test
pop
clc
add
pop
(bad)
xor
pop
ret
adc
or
pop
push
mov
dec
pop
aam
inc
cmp
adc
(bad)
jmp
jo
mov
jge
cmp
cmp
dec
mov
or
push
mov
mov
icebp
ffree
push
inc
pop
(bad)
std
adc
pushf
popf
pop
cmps
ret
xchg
fdivr
nop
add
fninit
pop
fisttp
push
adc
or
jmp
inc
cmp
push
sbb
and
adc
push
dec
cwde
mov
sbb
mov
or
scas
ins
les
test
(bad)
push
push
mov
ret
cmp
loopne
ja
cwde
cdq
cdq
add
add
and
jae
ins
xchg
push
inc
push
or
pop
sbb
dec
mov
push
and
cmp
xor
xor
mov
rol
jb
add
push
mov
push
dec
lahf
mov
mov
sub
jge
mov
pop
pop
pop
push
test
inc
ror
adc
mov
mov
or
lock
test
sbb
cmp
js
sub
fild
jle
rol
sbb
adc
call
push
in
repnz
push
jmp
push
and
call
adc
add
dec
dec
pop
fnstenv
add
and
mov
daa
or
sub
loope
push
mov
mov
mov
xor
and
ins
sbb
jo
dec
sub
aas
aaa
test
pop
add
jo
jge
in
push
movs
mov
mov
lods
mov
cs
or
fcomp
add
popf
ds
add
or
sub
xor
xor
dec
dec
sub
or
sbb
add
mov
call
jl
pop
jnp
push
push
in
lock
jle
and
xor
nop
ins
je
ror
jl
adc
push
adc
ins
stc
fcomi
xchg
fwait
push
mov
mov
xchg
and
pop
mov
cvttps2pi
xchg
lock
sub
test
add
arpl
adc
xor
shl
xor
bswap
and
inc
in
imul
gs
mov
ret
adc
jecxz
pop
mov
inc
inc
repz
or
cmp
ret
sbb
xchg
xor
rol
jg
les
movs
dec
popf
push
sbb
cwde
loope
jl
and
jl
push
cs
pop
sub
das
dec
aas
mov
push
sub
push
add
dec
imul
ror
ins
mov
adc
xchg
fdivr
adc
push
mov
inc
jle
dec
ror
addr16
sbb
pop
ss
mov
in
add
add
push
pop
sar
cmp
adc
call
pop
adc
and
test
xor
mov
test
push
mov
es
mov
es
call
inc
stos
mov
inc
pushf
inc
or
and
js
sbb
adc
push
mov
mov
and
popa
push
sti
push
sub
inc
sbb
mov
mov
lahf
jne
test
sahf
pop
inc
loopne
enter
sbb
test
ret
sub
push
mov
js
add
call
test
in
mov
jns
adc
inc
repnz
test
ja
sbb
ret
loop
and
dec
push
addr16
stos
shl
jecxz
call
les
mov
sub
pusha
push
inc
rcl
popf
lods
adc
or
push
pop
(bad)
cmp
sahf
push
pop
or
cmp
mov
adc
gs
aaa
mov
dec
cdq
enter
das
inc
bound
adc
out
ins
ret
xor
inc
push
inc
ss
add
push
mov
ins
jge
lea
xchg
cmc
push
sbb
adc
nop
push
lea
aam
test
cmc
or
lds
fsub
lea
scas
add
mov
cmp
jne
cmp
mov
dec
ret
xchg
aam
gs
mov
fucom
jg
cdq
xor
sbb
test
retf
vpsllq
std
icebp
adc
out
rcr
sti
jmp
rcr
in
loope
sub
outs
mov
ins
add
pop
push
inc
cs
add
je
jo
jecxz
aam
mov
jns
loopne
fdivr
out
or
mov
lods
inc
test
mov
xor
add
push
dec
fsub
add
sub
sbb
test
leave
ds
and
mov
in
adc
sub
mov
pop
loopne
adc
pop
retf
or
adc
xor
push
or
xchg
arpl
test
add
les
jae
and
add
test
int3
and
mov
dec
and
dec
cmp
mov
call
in
or
adc
jg
leave
sub
mov
push
sbb
adc
pop
popf
loope
shr
mov
aad
xchg
push
ins
movs
cmp
pop
lock
hlt
or
adc
dec
or
push
out
pop
push
sahf
(bad)
inc
leave
add
scas
jle
adc
xchg
mov
sbb
jmp
scas
stos
sub
out
sbb
lock
xor
clc
clc
push
add
sub
pop
cwde
cdq
push
adc
add
push
call
dec
and
int3
dec
xor
adc
mov
add
inc
in
mov
dec
ins
push
mov
jns
je
dec
aaa
sub
jmp
sub
lds
les
das
ret
shl
push
mov
cs
out
paddsb
mov
sahf
fdiv
or
rcr
push
lea
fdiv
mov
nop
mov
jo
fiadd
jg
stos
jmp
ret
jo
xor
push
sbb
stos
lock
(bad)
int
in
or
ficom
sub
sub
push
push
xchg
mov
hlt
ins
sub
dec
or
or
arpl
ret
out
loope
mov
scas
xchg
push
daa
test
mov
sti
and
adc
push
adc
inc
and
ret
outs
lahf
cmp
mov
imul
pop
or
fs
mov
sub
mov
test
or
xor
xchg
inc
xchg
cmp
dec
mul
pop
idiv
fwait
dec
cmp
sub
push
add
test
add
adc
lds
ret
or
add
or
xchg
push
pop
test
cmp
jb
sbb
add
loopne
test
sbb
hlt
sub
adc
xchg
sbb
push
xchg
or
fldcw
sub
pop
movs
cld
jbe
lds
nop
mov
pop
mov
fist
adc
test
or
test
add
scas
inc
lds
add
ret
pop
dec
and
movs
jl
adc
lods
cld
sbb
jl
add
xor
xchg
adc
aad
fs
add
sub
cmp
mov
test
sbb
clc
and
pop
scas
push
shl
neg
aam
inc
pop
push
(bad)
ins
cmp
in
sub
xchg
jne
aas
push
xchg
ret
and
mov
xchg
cmp
cmp
mov
ins
push
scas
mov
fist
jnp
inc
fsub
xor
and
adc
adc
inc
inc
or
test
nop
ss
sub
inc
push
jae
jnp
push
fwait
sbb
add
xor
sbb
int
je
int
(bad)
test
push
jbe
jl
cdq
in
jne
je
sbb
cmp
push
sub
sub
dec
test
pop
pop
add
mov
ror
sbb
and
(bad)
in
xchg
sbb
sbb
mov
clc
stos
cmp
xchg
mov
push
cmp
jno
ins
sbb
or
clc
push
nop
mov
shl
mov
iret
mov
fs
push
pushf
popf
adc
or
lea
jg
daa
gs
sub
cmp
sub
sbb
pop
cli
jmp
mov
mov
fadd
xor
pop
mov
mov
int3
adc
sub
push
jb
sbb
test
pop
movs
push
fstp
daa
ja
shr
or
aam
pop
(bad)
mov
lock
push
mov
push
push
sbb
adc
test
rcl
push
jns
sbb
(bad)
(bad)
dec
xlat
adc
cmps
add
scas
sbb
add
lea
sbb
je
jo
shl
sbb
sub
sub
nop
rol
rcr
mov
(bad)
xchg
lahf
enter
(bad)
movs
jo
test
xchg
xor
das
or
cmps
or
add
pop
retf
jb
add
sbb
sahf
in
inc
mov
test
push
push
lea
inc
cmp
jg
dec
add
inc
(bad)
cmp
mov
add
or
fdiv
fldcw
mov
aam
pop
add
jmp
add
jo
pop
xor
(bad)
shl
push
in
jo
xchg
jmp
(bad)
inc
mov
pop
push
jne
mov
push
movs
mov
aad
stos
dec
or
adc
push
dec
inc
(bad)
jg
sub
xor
sbb
and
push
or
bnd
ret
jae
js
xchg
cmp
call
in
push
mov
iret
leave
xor
adc
imul
jnp
sbb
movs
je
dec
fsub
mov
cld
dec
lea
xor
cmp
test
jmp
out
inc
fisttp
jb
inc
sbb
add
cwde
std
mov
xchg
inc
xchg
fs
ins
jo
js
push
push
cld
sub
iret
mov
test
gs
out
ins
push
out
in
xor
xchg
mov
jbe
add
and
shld
sub
and
and
loope
dec
cmp
xor
ret
xor
fs
dec
fs
mov
sub
dec
repz
push
rol
fcomp
sahf
push
and
inc
js
imul
clc
pop
add
data16
xchg
int
or
push
pop
inc
add
sub
add
loop
cmps
and
adc
fst
hlt
pop
(bad)
dec
cmp
leave
xor
push
or
sbb
nop
dec
cmp
(bad)
fiadd
add
cld
(bad)
jo
or
xchg
dec
sbb
jl
and
push
push
and
push
dec
(bad)
push
push
rcl
dec
cmc
lock
lods
bound
sbb
andps
push
push
adc
mov
adc
loopne
sbb
pop
(bad)
out
sub
fwait
cmp
inc
mov
jg
mov
mov
jge
test
hlt
push
lods
push
pushf
jmp
adc
cmp
jnp
pusha
push
dec
sub
xchg
pop
pop
xor
scas
xchg
out
dec
sbb
das
add
stc
adc
jmp
rol
aaa
cmc
lock
push
dec
dec
dec
adc
frstor
mov
sbb
dec
add
xor
push
or
sbb
popf
mov
mov
cdq
xchg
dec
sub
dec
pop
popa
add
shr
leave
xlat
sub
pop
adc
popa
sub
mov
pop
retf
add
adc
outs
retf
sub
clc
(bad)
shr
mov
sbb
fisttp
lea
mov
mov
jl
add
sbb
push
and
push
and
loope
mov
inc
repnz
jb
jp
inc
cmp
pushf
dec
and
pop
jb
pop
fadd
cmp
mov
inc
scas
cs
push
and
mov
xor
push
cmps
daa
(bad)
cld
mov
and
adc
and
clc
in
mov
ss
and
adc
cmp
adc
sbb
ficom
out
push
or
icebp
in
dec
sbb
mov
fld
cdq
sbb
jmp
lods
out
rol
cmp
jp
mov
dec
loop
nop
sbb
push
add
adc
cmps
add
cmp
push
pop
push
dec
js
mov
push
sbb
push
mov
jns
sub
mov
and
pusha
jne
push
xor
add
ror
shl
xlat
inc
call
mov
sub
loopne
leave
test
(bad)
stos
enter
dec
sbb
sbb
or
xchg
or
xor
or
in
sbb
mov
cmp
jno
cld
in
outs
fadd
outs
jle
jbe
push
jns
adc
in
mov
mov
rcr
fcmovne
test
sbb
int
push
mov
sbb
lea
adc
sbb
sub
and
rcl
test
sar
pop
dec
mov
call
(bad)
fcmovbe
xor
mov
xchg
hlt
loop
mov
and
mov
clc
dec
xor
mov
aad
(bad)
xchg
xor
sbb
add
pusha
mov
inc
add
add
inc
jmp
adc
push
sar
repnz
leave
push
ja
fwait
in
mov
(bad)
aam
jmp
add
into
xchg
jnp
aam
jne
push
ror
or
add
xchg
mov
ficom
or
dec
jo
sbb
retf
add
push
inc
in
and
mov
cmp
imul
pop
mov
mov
jle
adc
xor
sub
daa
out
xchg
icebp
imul
dec
and
mov
loopne
pop
mov
push
mov
add
sub
xchg
adc
mov
xchg
xor
lock
jl
add
inc
popa
add
lods
fimul
push
inc
cli
cli
or
jb
inc
adc
ins
out
mov
inc
and
loopne
add
jbe
ss
push
in
inc
fisub
test
in
push
inc
inc
in
in
dec
inc
cmp
mov
push
scas
inc
add
cdq
sbb
jns
js
cmc
mov
jae
loopne
test
or
std
mov
sub
sub
dec
or
pusha
mov
inc
add
and
xchg
dec
test
or
rep
fwait
je
mov
sub
addr16
movs
add
in
fbld
push
pusha
js
sbb
mov
mov
imul
mov
sbb
pop
and
call
stc
(bad)
(bad)
in
push
cld
sub
cmp
mov
fimul
test
push
and
pushf
or
and
imul
repz
jmp
in
sub
jne
jmp
sahf
push
aad
mov
jl
sar
inc
add
add
push
lods
or
ror
xor
mov
dec
lock
or
fbld
push
mov
or
sub
iret
mov
je
add
js
pop
rol
fadd
mov
test
xor
add
inc
in
popa
add
mov
and
shr
add
push
pop
ins
sbb
addr16
leave
mov
push
inc
mov
jne
push
test
mov
call
mov
std
dec
popf
retf
sbb
push
adc
push
sbb
daa
add
ror
daa
mov
push
or
mov
sbb
shr
fisub
ret
push
jno
dec
ins
fcomp
cmp
cwde
rol
int3
lods
or
xor
lock
xchg
or
cmp
cmp
repnz
ret
or
pop
fcmovb
pop
ins
movs
push
sbb
data16
test
xchg
aam
mov
rcl
pop
iret
ins
and
xor
call
push
cmp
cmps
or
xchg
adc
and
jmp
das
inc
adc
sbb
mov
pop
fwait
sar
shl
or
add
(bad)
or
mov
pop
lock
adc
mov
xchg
and
and
js
in
add
shl
add
pop
(bad)
push
add
(bad)
nop
movs
test
push
stos
adc
inc
popa
in
cmp
mov
ret
inc
dec
aad
sub
imul
cmp
imul
add
jne
mov
mov
adc
add
jp
adc
push
adc
xchg
ret
jmp
add
sbb
(bad)
mov
add
sub
add
fcomp
lods
adc
sbb
add
or
cdq
fcomp
fwait
xchg
push
push
dec
mov
pop
mov
fst
mov
inc
loopne
mov
(bad)
lock
or
mov
lea
push
pushf
iret
jns
pushf
sbb
dec
xchg
aaa
lock
xchg
mov
sar
sbb
test
mov
push
push
dec
aam
mov
or
(bad)
loop
jo
mov
mov
scas
mov
xor
pushf
jmp
loope
add
and
in
sbb
mov
icebp
clc
xor
loopne
sub
xor
std
pusha
pop
inc
dec
xchg
std
stos
sbb
clc
rcl
test
push
push
les
ret
ret
adc
std
mov
dec
cmp
add
push
and
ror
pop
ret
add
sbb
pop
push
inc
xchg
adc
lea
repnz
push
cmp
jl
mov
sbb
pop
sti
add
and
clc
shl
mov
inc
add
mov
adc
jmp
sub
es
mov
mov
aam
cmp
in
push
sbb
scas
loopne
xor
ins
sub
inc
dec
inc
pop
adc
inc
cld
cdq
movs
adc
leave
les
addr16
pop
push
xchg
loopne
or
cmp
cwde
hlt
icebp
mov
mov
movs
idiv
add
add
or
pusha
ss
sub
jne
inc
test
add
mov
or
adc
fs
adc
xor
mov
lea
add
ins
cmp
add
lock
lea
add
fldenv
fiadd
mov
mov
inc
xchg
adc
jl
int3
ret
inc
test
jns
test
push
sub
lods
add
mov
movs
add
sub
hlt
push
add
mov
ja
mov
sub
adc
adc
jnp
leave
je
sbb
xlat
xchg
dec
jmp
pop
xchg
cdq
ins
lods
sub
jo
mov
jno
push
aaa
mov
sbb
sbb
adc
or
daa
xor
(bad)
cmp
sub
repz
add
aas
inc
sbb
add
pop
and
add
jb
ret
aas
add
jle
dec
pop
addr16
call
rol
xchg
adc
rol
scas
lar
and
adc
jg
jmp
ins
push
mov
cmp
dec
adc
test
push
adc
xchg
cmp
inc
jb
lods
cmp
push
mov
xchg
mov
sub
jne
sbb
or
out
push
dec
mov
int
xchg
(bad)
mov
and
movlps
inc
call
xchg
jo
int3
mov
sub
inc
or
pop
mov
add
jge
adc
cmp
sbb
int3
lock
inc
mov
ins
into
dec
mov
add
xchg
test
std
pop
mov
push
mov
arpl
add
add
sbb
ja
mov
test
mov
lds
in
mov
mov
jle
fidiv
les
shl
inc
cs
loop
push
mov
cmp
xchg
xor
and
and
add
pop
pop
sub
xor
mov
add
(bad)
sub
(bad)
adc
ss
cmp
das
xor
outs
jecxz
scas
cmp
mov
push
mov
ror
push
sahf
inc
xor
je
push
loope
push
sub
push
cmc
pop
lock
mov
pop
adc
pusha
jb
loope
add
add
and
pop
cmp
out
add
fmul
xor
shl
outs
dec
pop
and
mov
mov
mov
sub
inc
clc
out
pushf
dec
xlat
xchg
push
test
push
ins
loope
sub
or
cdq
mov
pop
jmp
mov
(bad)
mov
arpl
add
xchg
or
outs
gs
sub
dec
add
mov
or
daa
fisttp
stos
push
ja
cwde
ins
or
push
inc
in
sbb
nop
sbb
mov
sbb
and
cli
mov
pop
movups
cmovne
sbb
cmp
rcl
and
or
sbb
or
and
test
and
inc
inc
inc
ret
xchg
jo
xor
test
and
lahf
ja
add
dec
and
aaa
and
popa
push
(bad)
mov
sbb
scas
test
pop
jle
xchg
pushf
and
jmp
pushf
push
inc
fld
dec
push
ud2
and
into
fidivr
xchg
jl
mov
add
or
mov
fadd
ror
lock
test
mov
mov
mov
or
push
sbb
add
in
pop
cwde
mov
test
cmp
jne
mov
push
int3
fadd
xor
les
adc
mov
add
js
push
xchg
adc
sub
pop
inc
inc
rcr
xchg
sbb
push
sbb
out
leave
shl
jb
movzx
(bad)
iret
inc
dec
ja
cmp
pop
lods
xor
pushf
dec
pop
sbb
sub
(bad)
fmul
add
sbb
jbe
es
cmp
add
mov
xor
ja
pop
hlt
int3
dec
ret
ret
or
pop
cmp
add
(bad)
aad
mov
adc
stc
sar
pop
push
leave
inc
jae
inc
add
test
or
inc
add
fdivr
and
das
or
je
or
(bad)
adc
or
clc
push
or
sub
sbb
or
in
in
pop
mov
sbb
or
movs
inc
sub
hlt
xlat
cmp
xchg
push
and
cmp
add
jl
adc
xchg
(bad)
fld
ds
add
cmp
or
mov
add
and
sub
push
or
adc
mov
adc
dec
iret
enter
add
iret
pop
xchg
in
sub
push
and
sbb
movs
mov
je
and
mov
jge
push
adc
or
adc
inc
(bad)
icebp
inc
cmp
call
inc
mov
popf
push
sbb
inc
popf
sbb
push
pusha
xchg
mov
push
js
retf
cmp
jl
pusha
pusha
cmp
xor
and
(bad)
loope
mov
dec
cmp
sbb
ins
cmp
jae
mov
and
sbb
inc
loopne
fwait
jp
retf
outs
push
xor
mov
mov
(bad)
lods
js
add
cmp
test
(bad)
in
and
out
xor
scas
mov
mov
shl
mov
loope
sbb
mov
or
call
push
add
sbb
cmp
add
and
jno
push
pushf
add
sbb
stc
popa
mov
add
aaa
ss
pop
pop
mov
out
mul
enter
dec
scas
in
dec
inc
in
scas
in
dec
inc
mov
shr
inc
adc
(bad)
lock
sub
sbb
push
sbb
cwde
xchg
in
test
inc
cmp
cmp
mov
mov
and
inc
cmp
es
adc
js
cmp
dec
jp
call
sbb
and
rcr
pop
cli
cmp
mov
lahf
sbb
jnp
sub
mov
mov
sub
add
mov
ret
cld
pop
inc
sbb
mov
stos
aad
pushf
jnp
xchg
inc
shl
enter
dec
push
ss
mov
xor
inc
sub
mov
and
pop
int
inc
push
mov
and
xor
test
je
and
jl
xchg
loop
jo
xor
push
repnz
xor
ror
or
test
jae
fcom
(bad)
sar
test
pop
inc
cmp
and
mov
push
adc
lock
add
pop
and
mov
xor
fwait
shl
push
sub
out
sbb
and
and
pusha
add
sub
iret
es
xor
cmp
push
dec
pusha
loop
pop
pop
xor
(bad)
jge
ror
and
push
imul
push
mov
iret
ds
xchg
mov
fwait
addr16
xchg
mov
push
test
ret
push
inc
outs
movs
aas
mov
cmp
xchg
xacquire
sahf
fdivr
mov
push
out
push
inc
dec
jnp
cmp
inc
push
js
lahf
lahf
and
cmp
cli
xor
add
(bad)
(bad)
aas
mov
and
adc
adc
adc
pop
sbb
adc
sbb
sbb
and
and
and
shr
leave
add
loopne
in
push
sbb
and
out
aaa
push
xchg
in
push
cmp
int3
lods
push
and
nop
out
sbb
push
lea
inc
inc
xor
iret
or
mov
and
jp
sahf
test
outs
adc
pop
push
mov
cdq
or
call
pop
or
daa
push
and
shl
or
adc
xchg
mov
(bad)
out
xor
add
aam
xchg
gs
inc
nop
or
call
xor
sub
mov
xchg
jb
push
push
mov
adc
aaa
movs
popa
les
jns
inc
js
add
sub
hlt
loope
fs
sbb
mov
xor
push
lea
test
adc
xchg
movs
add
inc
loope
and
xchg
shl
jle
xchg
lods
cwde
sbb
cmp
and
fldenv
mov
dec
mov
add
jne
dec
imul
jb
retf
hlt
push
inc
call
jle
jnp
fsub
and
enter
ret
outs
fst
mov
push
pop
jae
popaw
mov
dec
pop
ror
or
dec
mov
xor
out
in
or
je
pop
pop
rcr
pop
sbb
add
imul
shr
push
jns
push
out
push
sbb
jmp
loope
js
push
push
pop
sbb
jle
call
mov
loope
push
mov
xor
ret
(bad)
xchg
mov
mov
xor
jnp
xchg
cmc
pusha
add
inc
repnz
les
and
xor
add
add
cli
test
mov
dec
sub
pusha
xor
add
and
jecxz
mov
inc
adc
cld
loop
pop
pop
movs
pop
xchg
and
adc
es
mov
sub
mov
sub
sbb
js
push
xchg
and
or
(bad)
cli
lea
fsubr
adc
fisttp
dec
test
jmp
es
jle
in
mov
ror
in
jl
inc
pop
and
shl
mov
test
push
inc
mov
lea
and
push
dec
sbb
xor
addr16
sti
mov
adc
ss
rol
es
scas
cmp
and
aas
add
daa
and
cmp
test
push
mov
add
mov
nop
inc
fadd
xlat
add
fistp
inc
jle
and
movs
adc
sbb
lock
or
ins
fcomp
or
xor
test
sub
call
dec
clc
and
push
stc
sub
sbb
and
push
not
mov
loope
das
mov
repnz
xchg
test
repnz
push
cmp
in
jns
push
js
push
cld
push
and
gs
xchg
and
sti
jp
sbb
cmp
pop
inc
inc
lea
in
xchg
je
or
inc
outs
das
mov
jge
dec
push
in
movs
or
mov
adc
fadd
rcr
pop
or
dec
pop
aas
cmp
push
push
daa
cwde
pop
or
jmp
stos
dec
(bad)
mov
aam
xor
into
lds
movs
(bad)
test
xor
and
xor
ret
rol
inc
jo
pop
lock
adc
or
retf
loopne
les
pop
js
jne
mov
iret
push
hlt
mov
mov
ret
adc
mov
push
lea
adc
arpl
mov
xor
lods
js
mul
test
mov
xor
dec
movs
shl
add
and
ins
sahf
movs
dec
sbb
pop
xlat
mov
daa
das
dec
cmp
xor
dec
mov
dec
sbb
inc
inc
and
daa
clc
add
jbe
mov
call
into
lock
and
push
ret
cmp
scas
xchg
push
jo
das
jle
mov
icebp
jl
clc
push
push
cmp
test
push
push
push
fisub
pop
jmp
mov
lahf
fwait
sub
jne
scas
sub
push
movs
cmp
inc
sub
or
(bad)
sub
add
scas
pop
adc
test
cmp
(bad)
mov
push
inc
xchg
pusha
aas
fsubr
nop
retf
sbb
and
dec
or
add
mov
mov
ss
jne
(bad)
call
xchg
sub
test
shl
pop
dec
mov
fld1
inc
and
movs
(bad)
pushf
inc
add
cvtdq2ps
movs
mov
mov
xchg
inc
sub
icebp
add
add
inc
cmp
sbb
fnsave
shl
xchg
jecxz
and
rcr
add
retf
cmp
cld
mov
ret
int3
and
jle
fisub
or
jo
cli
push
jo
fs
retf
sbb
xchg
cmps
cmp
(bad)
xor
pop
mov
jns
loopne
scas
aam
call
xor
xchg
lahf
or
add
mov
fmul
aam
inc
mov
popa
push
mov
jle
mov
lea
mov
pop
dec
mov
adc
push
push
mov
dec
xor
dec
ret
inc
hlt
shl
sti
repz
ds
shl
rcl
push
dec
lods
sub
push
or
add
dec
jns
xchg
sbb
add
or
push
fisub
add
outs
mov
jge
jmp
ret
jle
ficom
push
jmp
aaa
lea
mov
mov
mov
push
sub
inc
aam
xor
dec
mov
xchg
stos
dec
and
popa
and
push
mov
adc
or
ins
push
mov
cmp
call
cmp
add
mov
add
sbb
js
jmp
inc
add
test
mov
loop
push
dec
pusha
dec
icebp
retf
clc
das
or
rol
jb
add
dec
inc
pop
mov
or
lahf
and
and
hlt
cmc
in
lock
mov
inc
nop
in
pop
fisub
aad
int3
mov
xor
cmp
test
mov
(bad)
into
movs
aaa
pop
mov
and
scas
or
call
push
ucomiss
lea
sbb
ret
xor
mov
xchg
cmps
sbb
push
push
test
inc
jle
push
inc
pop
lock
int
add
inc
inc
push
and
nop
push
mov
loopne
int3
mov
sub
sbb
push
(bad)
xchg
inc
adc
add
push
scas
jge
(bad)
or
stos
je
test
xor
add
(bad)
cmp
mov
std
xor
push
cmp
push
add
pusha
adc
xor
mov
xchg
adc
test
out
jmp
add
xor
jg
xchg
inc
or
in
jmp
fcom
add
add
inc
mov
aam
fucomip
and
inc
jae
sub
xor
and
mov
daa
add
mov
lea
xor
inc
mov
shl
xor
mov
or
mov
sub
loope
push
pop
ret
dec
sar
jp
mov
or
icebp
test
mov
cli
je
pop
test
push
push
or
sub
mov
or
cwde
mov
loope
mov
aaa
popa
add
sbb
pop
mov
mov
add
mov
pop
push
cmp
xchg
mov
mov
mov
movs
mov
sub
dec
inc
movs
push
mov
pop
add
std
gs
push
icebp
ret
mov
or
js
in
ret
jmp
mov
pop
mov
sbb
cli
xchg
add
mov
push
sar
xor
enter
jmp
ror
adc
lahf
or
cmp
xchg
outs
adc
cmp
bound
dec
js
push
sub
push
add
sub
sub
sbb
daa
add
pop
or
push
inc
jb
push
enter
mov
or
sub
push
sub
inc
inc
add
mov
daa
push
pop
hlt
mov
fdivrp
(bad)
(bad)
push
sub
add
cmp
in
mov
mov
mov
cmp
mov
mov
push
call
leavew
jge
bound
pop
movs
popf
mov
rcl
inc
or
cs
movs
sbb
mov
es
sar
(bad)
mov
dec
out
mov
popf
(bad)
mov
sti
lea
push
adc
push
cmp
call
or
and
push
add
in
lea
and
shl
popa
sbb
cmp
cmps
and
dec
test
push
add
imul
add
inc
int
push
(bad)
mov
cmp
pop
sub
jae
retf
ss
out
sbb
out
add
adc
mov
lock
popf
movs
ret
ins
mov
sbb
test
inc
mov
nop
adc
jo
adc
pop
fiadd
dec
push
add
clts
pop
and
or
inc
jmp
adc
pop
and
push
push
push
dec
rol
xor
add
lods
ret
sti
adc
inc
test
xor
lea
dec
outs
add
fst
add
mov
in
loope
stos
nop
in
test
mov
loop
mov
or
add
(bad)
enter
pop
sbb
std
aam
hlt
inc
adc
daa
mov
shl
jo
add
push
sub
ret
adc
dec
xchg
push
push
std
pop
and
push
push
xlat
fdiv
mov
xchg
sub
fcom
in
mov
call
and
xor
les
ins
int
push
popf
dec
pop
mov
push
add
lods
or
sub
jnp
xor
jp
shl
je
sbb
xor
push
ins
stos
inc
push
in
add
xchg
xor
add
jmp
and
xor
push
cmps
cli
lods
sbb
(bad)
push
mov
mov
add
push
jo
cli
xor
fild
fld
test
cwde
scas
pop
inc
sbb
(bad)
out
ins
mov
jb
fcom
push
jge
fisttp
jle
pusha
outs
add
add
or
adc
fnstcw
mov
fldz
push
fucomp
fnstsw
fstp
push
xor
les
mov
fisubr
inc
retf
add
and
cwde
cmps
mov
ins
mov
pop
je
push
sbb
shr
lods
fbld
jnp
cmp
sbb
add
mov
fstp
cmp
sub
imul
inc
dec
fmul
xor
inc
sbb
add
popa
or
jg
imul
enter
dec
inc
cmp
push
xlat
jnp
dec
xchg
mov
imul
mov
sbb
js
inc
add
ja
sahf
lods
sub
xchg
xchg
lea
cmc
test
(bad)
shr
cmp
mov
inc
inc
dec
fistp
dec
dec
dec
or
mov
add
add
sbb
iret
pop
mov
sub
xchg
xor
pop
call
sub
sbb
fstp
mov
ja
pop
mov
inc
mov
test
sub
clc
mov
and
xchg
scas
cmp
cld
sub
add
mov
jno
or
sbb
lahf
pusha
dec
pop
dec
push
sbb
cs
add
inc
push
push
pop
(bad)
adc
shl
cdq
iret
je
cmp
jecxz
mov
mov
inc
push
cmp
mov
in
sar
jbe
jle
sbb
mov
movs
cwde
pop
and
add
and
cmp
xor
test
inc
fcomip
pop
cmp
je
jae
adc
and
pop
sahf
movs
inc
xchg
lea
or
fdivr
bound
and
ret
lock
hlt
pop
push
cmp
aaa
push
mov
add
push
sub
and
aam
repnz
push
add
cmps
jecxz
stos
xlat
adc
push
imul
cmp
push
mov
push
jmp
lea
aam
cmp
and
push
adc
sbb
test
mov
div
mov
push
mov
int3
cmp
jb
cs
add
fnstsw
cdq
adc
sbb
into
sub
push
cmps
push
push
cmp
add
pop
push
jne
(bad)
adc
and
cmp
jecxz
lea
add
sub
xchg
or
lahf
and
mov
in
aaa
sbb
lahf
add
pop
or
mov
retf
or
rol
idiv
cmp
test
add
or
mov
add
push
in
push
xchg
mov
pop
inc
ins
mov
or
lds
sub
pusha
popa
push
ret
jo
mov
(bad)
push
call
or
cmp
push
imul
add
mov
xchg
or
add
clc
add
pop
lock
mov
inc
add
lods
sub
shr
mov
mov
adc
add
rol
nop
shr
movups
mov
sub
icebp
push
dec
sbb
push
les
mov
in
ins
push
add
fwait
adc
loopne
lods
mov
adc
cvtps2pd
adc
push
or
or
pop
push
movs
push
cwde
adc
inc
(bad)
jbe
pop
inc
call
xchg
js
dec
adc
mov
xlat
or
mov
xor
test
inc
popa
dec
jnp
nop
sub
sub
cmp
in
popa
mov
loope
and
push
dec
clc
popa
arpl
cmp
test
pop
sub
loopne
pop
leave
cmp
xor
sub
dec
clc
cmp
push
cwde
cmp
je
sbb
jmp
jns
(bad)
push
(bad)
push
push
push
cdq
cmp
add
and
sbb
push
test
fcomi
aaa
jne
nop
rol
xchg
sbb
(bad)
cdq
rcl
pop
xor
fisub
and
inc
add
call
pop
and
sub
dec
add
or
add
nop
adc
lea
dec
and
ret
mov
sbb
aad
imul
outs
mov
mov
cmp
test
adc
xchg
xchg
mov
pushf
and
sub
jg
push
mov
jne
das
fcom
nop
xor
(bad)
in
test
sti
or
sbb
mov
loopne
mov
adc
fnsave
out
and
cs
or
lds
out
inc
dec
(bad)
and
or
sub
jbe
cmps
sbb
cs
mov
fisubr
jmp
adc
dec
mov
push
push
adc
mov
nop
mov
hlt
lea
in
push
sub
add
popf
push
lock
xchg
test
xchg
das
inc
nop
mov
jl
xor
inc
(bad)
dec
shr
stc
imul
or
imul
jle
in
adc
das
es
xchg
push
(bad)
cmp
add
call
nop
popa
add
sub
adc
pusha
mov
mov
and
cmp
adc
pop
ret
inc
and
fsub
test
xchg
mov
pop
pop
xchg
cmp
mov
mov
pop
mov
push
in
push
aas
pop
out
ds
xlat
mov
add
fadd
je
add
add
push
pop
sub
add
(bad)
popf
dec
mov
mov
inc
inc
jecxz
push
ret
rol
addr16
push
loopne
lock
data16
pop
lock
pop
mov
mov
cmc
mov
xchg
stos
or
icebp
sub
gs
jl
out
retf
sbb
adc
dec
js
retf
retf
pop
add
or
lea
push
jne
pop
add
gs
sti
ins
sti
fnstcw
(bad)
fs
xor
jg
movs
push
dec
pop
data16
add
or
sub
push
push
loopne
(bad)
mov
add
mov
aad
leave
pop
and
sub
fcomp
inc
mov
dec
inc
iret
loopne
sbb
scas
adc
or
pop
mov
cmp
jae
dec
or
inc
pusha
add
xchg
xchg
ins
test
push
(bad)
aam
mov
jns
nop
add
add
add
push
inc
push
mov
stc
cs
repz
push
adc
sub
sbb
sbb
adc
test
inc
or
add
push
add
push
fdiv
and
pop
and
sbb
jb
adc
sbb
adc
xor
xor
add
cmp
mov
push
fwait
mov
enter
sbb
fst
inc
out
aas
adc
or
push
xchg
ret
mov
or
add
sbb
jl
inc
or
inc
loope
or
ret
lahf
inc
dec
mov
shl
add
sbb
add
lods
add
dec
push
out
xor
sbb
or
ret
mov
mov
mov
pop
xlat
pop
and
dec
test
lds
or
in
imul
adc
cmp
or
sbb
inc
test
data16
cmp
sbb
jns
imul
or
pop
xchg
or
dec
sub
or
add
mov
sub
shr
mov
dec
(bad)
ret
pop
int3
pop
sub
scas
push
sub
std
cmp
mov
test
push
adc
lahf
rol
sbb
lahf
pop
test
loop
inc
adc
sbb
mov
repz
push
push
cdq
dec
jmp
jnp
and
cmp
cld
inc
push
movs
push
ret
aas
mov
popa
sbb
push
adc
outs
xchg
jo
pop
sub
push
es
or
out
xchg
push
into
movs
arpl
pop
aam
fsubr
int
xchg
push
add
push
loopne
xor
mov
test
and
das
pushf
adc
call
or
and
jne
mov
repz
push
xchg
pop
add
push
fcom
rol
adc
dec
rol
sub
movs
xchg
test
mov
in
ins
loopne
fsub
mov
mov
movs
pop
xor
adc
xor
das
xchg
push
mov
ret
adc
ja
je
jle
cmp
ds
sub
or
push
cmp
push
pop
or
in
mov
sbb
imul
mov
popa
aaa
outs
mov
sti
ds
mov
mov
cmp
mov
out
nop
dec
rcr
test
icebp
fiadd
movs
int3
pop
lea
out
in
arpl
not
push
in
call
pop
js
xor
lods
(bad)
pop
aam
xchg
xchg
xor
push
dec
mov
xor
test
mov
push
xor
out
imul
inc
pop
adc
fchs
push
push
jo
sar
dec
xor
sub
and
inc
adc
pop
nop
and
in
push
pop
ret
or
rdmsr
mov
imul
mov
push
adc
aad
pop
dec
inc
jmp
lds
xchg
jmp
sbb
sub
lock
sbb
push
xchg
sbb
retf
imul
movs
lock
pop
cli
pop
mov
ret
mov
mov
push
les
sub
adc
repnz
xor
mov
push
shr
movs
repz
test
jmp
dec
sbb
scas
add
mov
push
pusha
mov
icebp
add
mov
add
sbb
out
mov
ret
test
mov
adc
fdiv
mov
aam
mov
loope
xor
inc
inc
outs
rcr
cmp
and
(bad)
pop
pop
cwde
dec
sub
out
fwait
les
push
and
add
(bad)
movs
cmp
push
push
(bad)
xlat
and
rcl
int3
cmps
adc
test
push
push
xor
repnz
cmp
xor
fwait
jb
leave
popf
adc
or
mov
inc
fmul
loopne
add
sbb
es
pushf
add
dec
mov
js
das
cmp
mov
or
movs
inc
xchg
mov
enter
inc
mov
mov
fcmovnbe
inc
inc
cmp
dec
inc
xor
xchg
mov
add
pop
adc
(bad)
and
sub
add
xchg
mov
rcl
retf
jp
rcr
add
push
mov
mov
fmul
and
xor
dec
and
add
pop
sub
sbb
or
aas
lods
sbb
xchg
sbb
sub
add
mov
nop
es
stos
imul
in
repnz
pop
and
cwde
addr16
add
inc
add
enter
add
and
mov
mov
daa
fs
pusha
rol
rcr
das
loopne
add
push
out
leave
shl
pop
hlt
xchg
push
idiv
dec
push
test
pop
mov
pop
aas
add
pop
or
mov
enter
mov
in
ins
or
xchg
mov
push
add
stc
mov
fs
mov
imul
mov
inc
mov
or
cmp
xlat
and
pop
fisub
(bad)
push
or
js
push
push
fwait
lock
pop
test
mov
sbb
dec
call
push
repnz
add
pop
and
and
or
imul
jbe
cmp
rol
jbe
cmp
push
inc
push
inc
dec
dec
sub
push
dec
mov
sub
call
adc
das
int3
add
inc
cmp
and
dec
or
mov
cwde
and
inc
adc
mov
rol
test
xor
add
(bad)
aad
cmc
jnp
push
mov
xchg
retf
adc
or
push
sub
dec
add
test
movs
or
dec
cmp
push
test
sbb
gs
mov
imul
push
ins
or
add
repnz
mov
lock
imul
add
or
add
add
loopne
xor
sub
sbb
add
pop
sub
add
adc
imul
push
sbb
jbe
add
sub
sub
ror
pop
or
mov
retf
dec
mov
push
xchg
pop
adc
mov
and
add
sbb
neg
pop
push
xchg
popa
jo
das
shl
ds
rol
rcl
mov
xlat
fst
xchg
and
mov
push
xchg
push
pop
imul
loop
mov
nop
bound
push
push
mov
aaa
mov
or
or
adc
(bad)
(bad)
pop
xchg
push
adc
mov
clc
shl
ret
pusha
fistp
adc
pop
xor
addr16
sbb
adc
test
lock
inc
adc
inc
xor
shr
push
jae
mov
scas
in
mov
mov
ins
xchg
inc
xor
nop
push
pusha
and
cwde
fadd
cmp
push
popa
or
mov
xor
jmp
pop
push
scas
adc
cmp
or
sbb
xchg
inc
mov
cmp
jne
dec
mov
inc
ja
adc
adc
add
and
rol
retf
cmp
test
jo
jae
jbe
mov
mov
add
sub
add
jge
mov
mov
cmp
inc
dec
mov
mov
pop
and
mov
add
aad
dec
call
sbb
mov
add
nop
test
add
cmp
xor
sbb
jno
dec
les
mov
xchg
ret
cmp
nop
xor
push
adc
sbb
push
mov
dec
icebp
dec
ds
push
jmp
mov
mov
loop
mov
inc
mov
jge
aaa
cmp
in
je
push
sbb
cs
aad
push
mov
mov
add
in
add
adc
push
(bad)
imul
(bad)
nop
adc
cmp
and
sub
pop
push
xor
pop
ja
cmp
push
jg
add
aam
and
mov
push
sbb
pop
addr16
xchg
sbb
rcl
dec
xor
and
xchg
xchg
daa
xchg
push
in
adc
mul
cdq
push
cld
sbb
rep
psubusw
jecxz
add
mov
xor
push
sub
pusha
pop
or
inc
adc
push
in
nop
push
cmp
sub
sub
shl
jne
sbb
mov
sti
loope
cli
push
mov
sub
ror
mov
jg
xchg
mov
sub
inc
aaa
xchg
inc
xor
aas
inc
cld
add
xor
push
jno
loope
add
xor
lds
enter
sub
pop
jno
inc
push
mov
pop
and
dec
jp
pop
xor
hlt
push
mov
mov
dec
ret
in
xor
xor
push
push
cmp
adc
cmp
mov
or
xor
add
mov
add
mov
cmp
push
inc
push
push
inc
leave
adc
dec
inc
inc
and
enter
or
mov
add
and
dec
or
inc
adc
xchg
dec
das
lea
adc
hlt
pop
and
gs
xchg
inc
push
ss
or
sub
dec
rcpps
and
inc
mov
xor
mov
nop
mov
cs
cmps
inc
push
or
sub
mov
nop
mov
ins
sub
push
imul
ret
cmp
sti
test
pop
mov
in
sub
pop
enter
imul
inc
pop
pusha
add
add
adc
jmp
sub
cmps
or
stos
imul
sub
pop
sbb
inc
jne
in
mov
dec
adc
arpl
or
mov
mov
inc
mov
xor
les
and
xchg
dec
mov
outs
mov
push
xor
sub
mov
nop
popa
jo
nop
sub
push
mov
cdq
inc
cmps
or
cmp
xor
or
leave
adc
adc
push
cmp
cmp
push
mov
loope
push
fidivr
adc
outs
lock
jmp
sbb
outs
sbb
gs
mov
add
dec
mov
nop
das
stc
xchg
das
push
mov
pop
mov
xchg
pop
mov
mov
and
scas
out
dec
or
inc
mov
inc
cld
mov
cmp
xchg
pushf
jecxz
dec
mov
add
jp
add
test
sbb
lods
sub
or
adc
int3
push
mov
sub
mov
mov
xor
dec
add
xchg
imul
push
mov
xor
mov
mov
repz
add
stc
and
lea
push
cmp
popf
movs
rcr
outs
or
mov
mov
sar
fimul
je
jl
mov
add
push
test
sbb
call
stos
dec
add
add
loopne
pop
movs
out
sub
fnstenv
add
fadd
xor
aam
dec
xor
adc
cmp
cmp
jle
push
mov
inc
dec
jno
jae
mov
cmps
pop
pusha
jmp
pop
pop
(bad)
in
mov
(bad)
cmp
fs
cmp
inc
(bad)
jb
cmp
or
in
sti
test
or
rol
cmp
jl
rol
lods
mov
dec
pop
add
lods
or
cwde
lahf
add
add
mov
das
inc
retf
leave
clc
sbb
adc
dec
push
mov
push
test
xchg
retf
jbe
jmp
mov
sbb
inc
fdivr
call
lds
add
cmp
popf
loopne
mov
mov
es
pop
mov
outs
xor
xor
pop
rcl
adc
fiadd
in
pop
push
push
sub
fwait
mov
sub
xchg
or
mov
shr
add
(bad)
push
xor
sub
dec
imul
in
add
xor
lds
out
adc
sbb
mov
jg
xor
out
sar
push
inc
mov
sub
std
pushf
outs
push
lea
rcl
data16
cmp
cmps
lock
cmp
mov
std
pop
push
ja
enter
xor
test
adc
xor
push
adc
push
daa
pop
loope
sub
(bad)
int
xchg
sbb
add
jmp
sbb
mov
and
or
add
inc
nop
push
xor
sbb
imul
xchg
inc
fidiv
shr
mov
push
mov
sub
ret
xlat
lods
add
mov
mov
xchg
mov
add
popf
inc
je
xchg
inc
call
dec
mov
jmp
adc
popa
shr
mov
mov
leave
stos
pop
push
jne
adc
mov
mov
inc
mov
test
sbb
cmp
pusha
les
(bad)
sub
inc
mov
test
shr
mov
mov
cwde
xchg
not
(bad)
(bad)
test
or
jecxz
xchg
cs
and
xor
dec
mov
pop
enter
pusha
and
nop
push
xchg
sbb
ins
std
cmp
mov
std
mov
movs
xlat
add
mov
and
sub
mov
in
push
xchg
cmp
add
call
or
inc
out
and
inc
sub
sbb
test
sti
or
jno
adc
sbb
jne
pop
push
add
pop
jnp
add
inc
aam
aam
fs
add
jb
in
pushf
mov
jno
sbb
pop
or
or
fs
pushf
test
push
add
push
lea
or
fdivr
mov
stos
mov
or
add
aaa
fld
sub
cdq
sbb
mov
inc
dec
ss
enter
std
sbb
fsub
xchg
jb
jo
and
lock
push
sbb
push
xor
xchg
sbb
or
pop
stos
adc
aas
xchg
mov
test
pop
test
loop
cmp
(bad)
in
rol
or
push
ss
sbb
xchg
add
push
(bad)
out
mov
shr
jle
pushf
sub
lock
or
sar
aas
cs
mov
or
sub
sub
mov
lods
jae
cmp
ret
movs
fiadd
add
xchg
xchg
mov
in
in
add
push
adc
mov
mov
mov
push
inc
add
adc
or
lods
push
and
add
cmp
ss
adc
imul
mov
jno
daa
les
and
jmp
adc
mov
sub
inc
dec
(bad)
xchg
(bad)
pop
mov
sbb
add
or
dec
sub
es
mov
mov
int3
mov
pusha
bndstx
sub
leave
mov
push
div
pop
leave
leave
enter
pop
mov
or
mov
cmp
pushf
pushf
sbb
sbb
push
div
mov
icebp
push
and
xor
sub
or
test
sbb
in
in
(bad)
in
xchg
in
sbb
sbb
cld
push
mov
xchg
cmps
xchg
jbe
inc
and
and
and
jl
aaa
in
dec
jb
daa
mov
and
mov
in
xor
les
xchg
lea
aas
outs
mov
push
shl
mov
mov
xchg
xchg
adc
es
and
or
cli
sub
inc
and
sub
jo
fisttp
test
jne
aam
jb
cwde
and
out
pop
lahf
xchg
adc
adc
ins
cli
dec
lea
imul
sub
aas
mov
imul
cwde
nop
mov
fld
dec
lahf
add
add
sbb
mov
pop
pop
pop
ins
xchg
or
mov
and
ror
pop
or
dec
and
add
lahf
jle
push
dec
pop
xchg
std
in
ins
test
or
sbb
jbe
aam
int
and
jmp
rcr
add
ret
jae
add
nop
jo
add
sub
or
pop
dec
jge
call
or
addr16
push
add
das
repnz
(bad)
aam
and
mov
adc
sar
aad
call
lea
lods
mov
lahf
push
mov
sbb
cmp
xor
sar
add
xchg
icebp
cli
leave
jge
aam
sbb
mov
inc
stos
ins
or
imul
mov
sbb
sub
cmp
add
sbb
xor
popf
sar
je
imul
inc
pop
ja
mov
shr
mov
sub
xchg
add
fcom
out
and
add
movs
xchg
lods
frstor
xchg
mov
sbb
aam
call
cs
test
xchg
jae
sbb
cmps
push
or
fs
push
lods
pop
dec
fnstcw
fisttp
adc
fld
fwait
das
xor
and
lahf
add
inc
sub
push
lahf
(bad)
in
adc
xor
add
adc
mov
adc
jl
popa
pusha
pop
pop
inc
sub
dec
cmp
sbb
or
push
aaa
jo
or
sbb
push
imul
add
add
movs
pop
ret
dec
adc
in
popf
or
xchg
(bad)
popf
add
fcomi
leave
jne
sbb
xchg
stos
popa
push
push
adc
dec
add
or
pop
call
adc
jl
lods
call
adc
adc
jmp
push
les
leave
or
mov
add
xchg
or
in
adc
lods
sub
xchg
(bad)
fs
pushf
add
jl
(bad)
inc
jb
mov
movs
aam
ret
mov
nop
mov
add
lods
test
dec
mov
push
push
push
push
adc
fisub
inc
pop
in
inc
les
sbb
ja
mov
push
and
sbb
jp
ja
(bad)
ins
mov
mov
loopne
inc
jbe
jbe
adc
cmp
add
xor
sbb
inc
loopne
dec
aas
push
hlt
rol
or
sbb
inc
add
mov
clc
je
test
add
dec
xor
cmp
adc
adc
and
into
or
and
xlat
mov
stos
push
ror
jmp
push
cmp
(bad)
mov
retf
mov
test
add
or
fwait
sbb
imul
cmps
inc
pushf
pushf
pop
dec
ret
js
push
mov
add
cld
jne
mov
push
cmp
sub
ret
rol
sti
ss
and
dec
push
mov
cmps
mov
push
cmp
xchg
and
outs
ret
add
jmp
push
sub
mov
das
or
push
(bad)
push
pop
inc
aas
fadd
and
pop
loop
movs
sub
sbb
inc
xor
adc
fs
push
enter
addr16
add
dec
xor
int
outs
and
dec
sub
add
inc
adc
push
dec
lahf
movs
test
sti
jo
das
add
test
je
add
lahf
xchg
cmp
ret
je
rcr
and
pop
push
xchg
inc
repnz
retf
loop
push
in
mov
sub
or
(bad)
or
xor
fsub
or
or
aam
xchg
addr16
mov
and
inc
cmp
mov
add
imul
push
cwde
retf
mov
push
mov
jb
sbb
mov
lock
hlt
xor
cmp
es
push
push
daa
dec
fcomp
dec
adc
into
add
shl
or
jmp
int
sbb
inc
loop
add
fs
(bad)
out
ins
bound
sub
xor
sbb
cmp
push
push
push
dec
push
or
jmp
add
sbb
mov
and
dec
popa
cmp
div
xchg
shr
sbb
push
stos
js
(bad)
push
sub
outs
pop
imul
lods
test
call
xchg
ror
xchg
inc
and
daa
xor
lahf
xchg
ret
xchg
add
sbb
add
add
xchg
push
lods
cmp
push
js
cmp
sub
xor
cwde
jo
ret
call
lahf
mov
loop
jno
add
arpl
pop
add
and
push
jne
pop
push
or
ret
inc
pop
push
mov
movs
pop
jo
in
sbb
sbb
sbb
mov
inc
lds
test
pushf
sbb
mov
cmp
lahf
add
call
mov
invd
iret
je
push
add
test
dec
adc
dec
jl
sub
or
lea
es
push
fyl2x
jo
push
xor
jmp
dec
sub
mov
xchg
add
inc
cmp
pop
xor
outs
gs
mov
mov
(bad)
setl
inc
push
fdiv
movs
lock
das
lahf
fcom
lea
dec
xchg
aad
or
push
add
xchg
cmp
fldcw
pop
sub
mov
je
(bad)
and
icebp
lea
shl
jne
(bad)
dec
inc
and
ret
cmp
xor
add
inc
xor
dec
xchg
rcl
and
lea
movs
push
cmps
xor
push
nop
(bad)
push
je
test
mov
add
cwde
outs
inc
loope
or
push
and
add
es
call
mov
and
es
mov
sub
push
xchg
in
sub
or
mov
stos
aad
les
pop
fsub
inc
push
or
test
dec
loop
inc
stos
les
mov
hlt
stos
xchg
pop
push
(bad)
out
ins
push
sbb
push
(bad)
sub
mov
in
or
mov
es
add
test
rcl
mov
loopne
or
gs
stos
sub
or
xor
cdq
or
jnp
pop
fdiv
mov
shr
fidiv
rol
sbb
inc
mov
dec
(bad)
into
adc
mov
dec
repz
loopne
(bad)
fcom
bound
rdmsr
ins
push
popa
sbb
or
inc
sub
xchg
aam
sbb
es
add
push
sub
call
adc
mov
xchg
lea
into
scas
(bad)
or
dec
rcr
push
xchg
add
add
daa
inc
xchg
add
jmp
stos
mov
mov
mov
je
mov
cmp
push
pushf
or
iret
test
int3
aad
adc
push
inc
js
lahf
lods
cmps
push
jle
or
mov
sbb
movs
fcom
int3
xchg
mov
vsqrtps
adc
pop
adc
sbb
jo
fsubr
adc
fcom
mov
push
add
cmc
hlt
cmp
jns
sbb
mov
addr16
or
rol
jns
dec
sahf
loopne
add
xor
je
mov
in
jns
aam
in
dec
sahf
inc
mov
mov
fimul
push
add
xor
ficomp
outs
jmp
mov
les
mov
xor
and
(bad)
imul
adc
out
call
mul
add
daa
add
dec
sbb
and
push
or
or
mov
in
dec
pop
mov
shr
pusha
mov
push
mov
add
nop
mov
movs
or
or
leave
pop
call
sbb
pop
xchg
ins
fisttp
cmp
ror
call
adc
rol
adc
hlt
ror
and
int
test
dec
add
daa
sub
jne
dec
scas
sbb
fsubr
leave
ja
push
cmp
add
loopne
pop
leave
sub
fs
push
push
and
push
add
push
add
xchg
add
push
sub
ret
pusha
xor
push
cmp
popf
mov
shl
pop
mov
outs
mov
and
push
jge
sbb
push
jb
add
adc
shl
dec
sub
adc
(bad)
in
mov
mov
movs
or
inc
loop
pusha
mov
popa
mov
pop
ret
inc
mov
scas
xchg
adc
in
cwde
sbb
rcl
aam
(bad)
aad
and
and
xchg
loope
add
popa
adc
ficom
cs
jmp
sbb
push
push
daa
mul
pop
lock
fwait
push
imul
jl
xchg
mov
inc
test
adc
addr16
sub
iret
lock
pop
mov
(bad)
movs
or
add
adc
inc
pop
cmp
sbb
lods
xchg
sub
jecxz
repnz
js
push
adc
hlt
xor
shl
or
xchg
add
std
xor
test
sbb
test
cs
enter
cmp
sbb
les
add
push
jge
sub
pop
leave
inc
xor
and
xchg
xor
movs
adc
add
fld
or
or
das
or
or
les
inc
mov
mov
loope
or
cmp
ja
nop
retf
out
mov
mov
fild
dec
jecxz
add
xchg
add
sub
dec
fcmovnb
push
push
lea
xchg
adc
push
push
fst
jp
add
push
xor
and
movs
add
rol
jo
xchg
mov
sub
test
mov
popa
int
lods
test
xor
add
test
cmpxchg
inc
sbb
add
xchg
in
pop
lock
not
mov
mov
pop
je
push
inc
stc
push
dec
das
or
ret
(bad)
mov
bound
outs
(bad)
hlt
and
mov
inc
sahf
sub
dec
lock
aam
dec
adc
dec
inc
nop
sbb
cmp
call
out
dec
add
add
mov
loopne
sbb
lods
and
nop
push
sub
adc
cmps
or
and
jge
mov
sub
ins
inc
lds
adc
outs
test
(bad)
popa
dec
test
cmp
(bad)
loope
repz
inc
mov
xchg
xchg
mov
add
adc
test
in
mov
fstp
xor
push
push
pop
ss
adc
mov
mov
ror
inc
cwde
xor
test
xor
fcom
aaa
push
mov
mov
pop
cdq
jo
pusha
dec
ret
sbb
movs
movs
loopne
dec
and
test
cld
movs
dec
pusha
aam
jne
and
sub
mul
sub
jg
inc
mov
add
push
or
fcomp
enter
xchg
mov
mov
jl
addr16
add
mov
cdq
mov
aas
add
add
dec
imul
cmp
sbb
push
inc
push
mov
inc
mov
pop
pop
fwait
or
inc
lock
mov
adc
pop
and
push
test
lahf
and
push
mov
neg
lods
jl
mov
cmps
call
(bad)
fcom
adc
mov
arpl
inc
or
pop
xchg
and
ret
jl
push
jecxz
movs
cmp
int
cdq
setbe
inc
movs
aam
mov
xor
mov
mov
test
xor
fdivr
mov
nop
sbb
sub
(bad)
cli
sar
call
arpl
jnp
loop
nop
cmp
retf
lock
js
rol
movs
add
inc
ins
ins
icebp
repnz
test
cmp
je
cmp
je
pop
(bad)
cmp
dec
adc
out
inc
or
wbinvd
inc
out
gs
leave
mov
xchg
shr
mov
nop
stos
sbb
mov
movs
lea
cmp
xchg
mov
or
faddp
jnp
inc
adc
mov
addr16
jbe
pushf
xor
repz
xchg
lods
aaa
or
pop
(bad)
dec
inc
add
xchg
enter
push
add
les
jg
rcl
cmp
push
add
shl
mov
cmp
aad
mov
test
mov
adc
sub
cmps
popa
fs
add
sti
loope
inc
je
xchg
rcr
or
lods
push
sti
ret
add
or
push
cmp
nop
dec
pop
or
cdq
cdq
pop
or
mov
pop
push
push
dec
imul
hlt
push
sar
add
pop
xchg
push
adc
repz
add
xor
into
aam
push
mov
or
or
dec
inc
repz
add
int3
pop
push
js
in
xor
fs
add
jle
mov
movs
loope
cmp
and
aas
sbb
ret
push
cmp
test
inc
lods
mov
call
add
repnz
xchg
aam
inc
add
inc
or
mov
inc
pop
adc
inc
and
sub
and
inc
and
(bad)
mov
add
adc
or
and
jne
add
rol
je
sbb
jnp
inc
inc
addr16
xchg
popa
and
push
pop
addr16
jno
in
push
jb
pop
fcmovb
xchg
xor
dec
test
test
xchg
(bad)
inc
add
or
or
add
push
or
test
xor
mov
adc
mov
sbb
fsub
into
and
push
xor
dec
call
jg
jo
int3
adc
cmp
sub
dec
push
add
(bad)
int3
fdiv
cmp
hlt
xchg
or
cmps
adc
(bad)
xchg
add
les
inc
add
mov
rol
daa
adc
and
inc
adc
xchg
adc
push
inc
adc
or
mov
mov
sub
jns
aam
xchg
xchg
push
rol
sub
sahf
ja
shl
sub
cmp
je
push
cmp
in
loope
add
xchg
xor
or
push
pop
lea
pop
imul
inc
push
mov
loopne
rol
ret
dec
add
dec
repz
mov
lahf
rol
sbb
xor
lea
push
push
or
call
cmps
fwait
call
mov
and
dec
jne
lahf
inc
imul
mov
inc
xchg
icebp
cmp
fist
cmp
push
hlt
push
inc
ret
fnsave
paddq
add
ret
sbb
cmps
sub
push
add
sbb
std
clc
mov
add
ret
cmps
ja
popa
ror
enter
lods
adc
mov
add
nop
or
iret
and
or
jmp
mov
sub
jns
test
loopne
push
adc
and
add
push
sub
add
push
fdivr
ret
test
xor
adc
adc
push
movs
es
lock
push
or
inc
sbb
xor
iret
iret
call
dec
adc
sub
sbb
cmps
mov
sub
sbb
push
bound
push
fwait
mov
call
lock
and
inc
push
loopne
sub
xchg
cwde
pusha
xchg
lahf
loopne
push
or
add
or
(bad)
lock
pop
push
and
or
loope
add
test
mov
ret
ins
sub
in
cmp
jb
and
add
jg
or
xchg
out
add
fsub
jmp
push
adc
loopne
loope
ds
pop
adc
aas
jns
test
xor
and
dec
or
adc
add
cmp
jmp
lea
test
mov
cmc
cmovo
bnd
mov
ret
outs
xor
inc
movs
outs
aad
push
les
xor
test
sar
ds
inc
or
mov
js
jo
leave
add
pop
mov
xchg
retf
sub
mov
and
sub
cmp
mov
xchg
xor
pusha
mov
sbb
or
add
xor
loopne
fld
rcl
or
cmp
jmp
ret
add
mov
ret
arpl
popa
popa
dec
popa
mov
call
xor
loop
test
lea
jne
cmp
je
jmp
sbb
adc
or
rol
loop
out
dec
adc
in
inc
addr16
inc
data16
add
cmp
je
imul
pop
rcr
addr16
int
imul
adc
fimul
popa
in
(bad)
jg
retf
adc
fdiv
cmp
addr16
inc
xor
inc
mov
jns
cmp
pop
fdiv
jmp
lea
jmp
lock
cmps
xor
sbb
push
jmp
in
mov
push
out
cmp
cmp
call
daa
clc
push
data16
cmp
retf
pop
test
inc
pusha
and
aas
cmp
jne
mov
ja
dec
fisub
add
push
or
int3
add
and
jmp
outs
push
push
dec
cs
or
and
jne
cdq
mov
sub
dec
add
dec
or
or
sub
(bad)
add
xor
test
adc
pop
push
mov
or
cdq
add
add
xlat
adc
loope
jmp
and
dec
inc
add
into
jne
pop
add
mov
and
dec
xchg
test
movs
mov
rcl
inc
push
enter
push
and
sar
sub
xor
adc
add
nop
push
add
push
xchg
ins
mov
rcr
rol
mov
xor
adc
cli
cs
mov
or
cmc
push
sub
mov
add
enter
test
dec
inc
pop
lods
inc
mov
mov
jb
lods
sub
sbb
add
push
mov
clc
push
mov
sub
test
je
push
fld
xor
pop
sbb
adc
xor
mov
or
push
sbb
push
mov
bound
push
sub
sub
sbb
or
or
in
add
imul
push
in
sbb
push
mov
imul
cli
add
out
ret
sbb
adc
mov
mov
push
hlt
cmp
inc
mov
push
or
and
add
pop
push
test
sbb
outs
mov
sbb
or
and
cmp
adc
das
pop
test
adc
iret
mov
mov
adc
sbb
mov
push
add
mov
clc
jo
aaa
mov
(bad)
test
retf
sbb
add
scas
ins
lods
(bad)
stos
xor
ss
adc
nop
lahf
dec
sub
cmp
mov
sub
xchg
add
ss
pop
pop
push
test
fcom
push
xchg
mov
xor
push
xchg
adc
add
mov
mov
or
mov
add
jg
add
jle
xchg
adc
adc
fiadd
mov
jbe
mov
add
or
in
xor
xchg
outs
wrmsr
cld
sub
xor
mov
pop
xchg
jmp
mov
xlat
dec
bnd
daa
(bad)
cmp
aaa
or
mov
ss
push
jnp
pop
and
aad
loope
(bad)
adc
cmps
mov
dec
ret
lods
cmps
push
xor
push
stos
sub
int
sti
add
pop
xor
fstp
nop
inc
sahf
leave
aas
or
(bad)
shr
movs
or
cs
mov
cmp
jmp
or
jns
push
(bad)
popa
push
pop
mov
inc
push
add
shl
cmp
mov
test
cmc
nop
nop
cld
xchg
mov
ror
xor
pop
push
mov
add
adc
or
mov
xchg
sub
pop
push
sub
dec
push
cwde
jns
adc
pop
dec
xchg
push
sub
sbb
push
ds
xchg
movs
adc
adc
inc
jb
sub
xor
push
mov
retf
bnd
mov
add
add
xchg
(bad)
lock
cmp
sub
xchg
shl
clc
mov
mov
or
fcom
jnp
(bad)
repz
sub
sub
xchg
mov
scas
cmp
cmp
adc
inc
shr
in
dec
xor
push
sbb
sub
mov
or
or
push
dec
adc
mov
and
push
sbb
mov
sbb
cmps
gs
sbb
and
sub
add
xchg
popf
sbb
mov
aaa
sub
inc
add
call
push
ffreep
and
popa
jge
dec
aam
xor
or
cli
dec
shl
cmp
jmp
loopne
fadd
scas
movs
test
sbb
dec
pop
xor
ret
pop
in
sub
(bad)
(bad)
jbe
cld
mov
dec
loopne
ins
dec
pop
loopne
(bad)
fisub
test
test
mov
(bad)
scas
pop
shr
mov
dec
(bad)
sub
scas
push
or
test
push
lods
pop
addr16
add
adc
lods
or
xor
sbb
jge
es
add
or
sbb
sub
adc
push
mov
sub
inc
mov
fnstsw
mov
sar
sub
mov
or
nop
push
movs
inc
in
jmp
cmp
adc
cmp
dec
add
jne
addr16
mov
dec
jb
lea
ins
cmps
lea
mov
shl
imul
es
jmp
in
add
in
leave
mov
and
repz
in
mov
fsubr
inc
ror
dec
add
test
mov
shr
shr
gs
dec
dec
test
inc
xor
outs
movs
jnp
and
inc
mov
adc
cmc
movs
int3
jl
mov
jp
add
add
xor
push
inc
cmp
fdiv
and
sub
xor
add
call
or
sub
fs
je
mov
jmp
dec
inc
dec
jne
push
cld
jb
jno
or
sub
ins
or
mov
in
jmp
xchg
fcom
or
leave
mov
inc
and
mov
in
add
push
inc
adc
shl
adc
retf
das
test
jne
rol
mul
push
jg
mov
inc
adc
add
mov
leave
push
bound
xchg
inc
push
cmp
cmp
das
cmp
pop
mov
lods
or
mov
adc
in
add
cmps
dec
add
pop
scas
sbb
outs
loopne
inc
cmp
push
jo
push
mov
mov
add
into
pop
push
mov
or
xor
adc
int
push
push
mov
mov
add
daa
sub
pusha
mov
mov
stos
repz
mov
enter
fsubr
shr
and
and
and
loopne
out
and
outs
push
push
add
push
pop
push
dec
outs
mov
stos
aas
add
mov
dec
and
ror
adc
mov
ins
push
add
arpl
add
repz
or
je
jl
cmp
das
imul
add
nop
pusha
xor
inc
add
pop
xlat
push
mov
lds
sub
call
inc
sub
xor
icebp
push
pusha
push
xchg
lods
cld
imul
push
sub
cmp
or
retf
enter
push
inc
inc
in
jae
mov
out
jbe
lock
or
sub
and
call
repnz
dec
out
jnp
test
repnz
or
push
push
push
lea
push
in
add
retf
cmps
or
mov
int3
and
lods
inc
jge
mov
dec
sbb
stc
push
cmp
jb
mov
sub
cmp
mov
mov
and
popa
pop
xor
ss
mov
xor
dec
or
scas
out
push
inc
jmp
or
sub
dec
jne
pop
xor
inc
jle
div
jmp
and
adc
xchg
mov
adc
xor
ret
cmp
mov
adc
hlt
add
mov
adc
es
or
push
push
add
sub
test
add
je
or
test
in
retf
js
add
adc
dec
adc
shl
add
dec
int
rcl
sbb
in
dec
mov
ss
psubsb
jmp
cs
cmp
shl
aam
(bad)
jne
mov
dec
jo
daa
and
mov
js
sub
jmp
sub
les
adc
add
cmp
inc
mov
xchg
es
lods
adc
mov
aam
pop
mov
jne
fld
fdivr
sub
cmp
sub
out
xor
push
cmp
jae
cli
cmp
popa
fcom
(bad)
cwde
je
push
cmp
jne
mov
add
mov
mov
fist
or
xor
mov
in
xor
sbb
jb
mov
push
aam
pop
movs
add
jo
fadd
xor
mov
je
pop
mov
xchg
lods
jl
in
inc
lods
xor
outs
clc
inc
mov
mov
mov
xor
repnz
push
mov
stos
push
or
push
cs
push
rol
call
lock
out
pop
sub
push
jbe
in
mov
cmc
mov
add
data16
std
xor
mov
push
pop
int3
ds
pop
and
pop
fcom
jo
cmp
add
ret
push
mov
cmc
push
pop
dec
pop
sub
ret
mov
je
int3
add
sbb
dec
or
xchg
inc
inc
leave
sub
sbb
pop
pop
(bad)
in
call
adc
or
leave
inc
sub
jmp
xor
mov
add
push
sub
cmp
mov
jmp
(bad)
cmp
push
or
and
fiadd
sub
loopne
push
loope
sbb
loopne
add
sub
sbb
shl
test
and
adc
es
jecxz
jecxz
call
xor
pop
sub
cmp
mov
mov
sub
add
lahf
inc
pusha
and
in
and
jg
jg
jecxz
cwde
inc
jae
cmc
add
mov
fsub
mov
sbb
push
jae
dec
xchg
and
sbb
xor
out
outs
sbb
fnsave
je
inc
and
adc
lahf
xchg
jno
test
jge
sub
ins
loopne
sub
sub
mov
jmp
mov
cdq
inc
movs
add
test
lods
xor
xor
fs
sbb
lea
sbb
xor
adc
push
pop
cld
add
movs
int3
jae
xor
pop
jne
sbb
ret
add
and
xor
(bad)
call
popf
cmps
dec
sub
adc
xor
cmp
scas
mov
pop
fisttp
sub
jecxz
pop
mov
sbb
push
jp
pop
mov
mov
jmp
xor
sub
mov
pop
push
or
out
pop
or
jg
and
retf
pop
aam
mov
sbb
out
push
call
rol
jnp
sbb
call
je
cmps
lea
arpl
ret
mov
sbb
mov
das
das
add
(bad)
mov
ret
push
or
mov
fsubr
test
and
nop
dec
xchg
cmp
pop
rol
fmul
dec
icebp
pop
add
mov
pop
sub
popf
mov
popa
pop
push
sbb
pusha
inc
test
inc
shr
xchg
imul
stc
movlps
pop
mov
sbb
shl
add
dec
jne
int3
aad
push
adc
push
sbb
or
jmp
inc
mov
js
sub
push
ins
and
inc
ret
shl
mov
(bad)
inc
ror
and
pop
mov
add
stos
inc
and
xchg
xchg
jo
jo
test
test
cmp
clc
jb
pop
stos
cmp
pop
ret
sbb
repz
aaa
lea
push
loope
push
jmp
mov
jmp
push
inc
adc
rol
lahf
add
add
and
(bad)
cmc
cmp
lods
lds
js
rol
mov
sar
test
popa
pop
in
leave
mov
add
mov
mov
push
(bad)
lock
jo
and
push
add
push
fst
xor
jmp
pop
mov
xchg
xor
dec
dec
pop
es
cmp
dec
nop
sub
xchg
and
xor
push
xchg
lock
les
sub
xchg
sti
xchg
and
jnp
jne
or
int
test
jb
mov
inc
push
aad
test
add
or
popf
sub
std
lock
lods
xchg
cmc
nop
mov
xchg
add
cmp
lock
mov
push
aaa
hlt
sbb
inc
mov
add
adc
sar
add
cwde
mov
push
add
push
jno
dec
gs
gs
push
sbb
push
push
test
and
mov
aas
sub
xchg
inc
mov
cmp
gs
retf
sbb
movs
xor
push
sbb
push
push
test
ins
xchg
inc
sub
and
jb
test
pushf
movs
push
push
test
mov
inc
sub
gs
retf
enter
xor
sbb
adc
in
aaa
in
jp
or
rcr
retf
pop
jge
add
or
mov
dec
in
cdq
int3
xor
pop
lahf
lahf
cwde
shl
sti
bound
dec
push
add
outs
inc
add
inc
add
or
sar
or
pop
dec
bound
mov
add
mov
mov
ss
js
shl
or
or
jo
push
or
and
add
mov
shl
loope
fild
cdq
rol
loop
or
lods
cmp
cli
inc
or
add
sub
fs
dec
jb
pop
inc
jmp
data16
mov
add
clc
push
adc
pop
and
push
stc
sub
add
test
(bad)
in
cwde
or
cmps
xchg
mov
lods
bound
lods
fcom
fimul
pop
sub
inc
mov
and
mov
xchg
mov
les
shl
data16
mov
test
pop
jns
enter
xor
adc
int
mov
jno
jo
mov
add
fisub
clc
(bad)
push
call
out
add
loope
jne
inc
je
aas
jns
or
in
jnp
push
into
ret
jb
je
mov
cwd
lods
test
xchg
jmp
xchg
retf
mov
xchg
(bad)
sub
movs
lock
pop
add
add
push
icebp
ins
stos
and
adc
add
xchg
clc
ss
xchg
ret
cmp
dec
mov
pop
pushf
xchg
inc
adc
and
mov
call
movs
je
je
mov
movs
and
daa
add
ins
dec
sbb
cmp
clc
sub
and
or
adc
lods
dec
retf
addr16
xor
sbb
loopne
dec
mov
sub
add
dec
mov
in
add
movs
pop
mov
stos
sbb
sub
rol
or
cmps
mov
add
pop
adc
sbb
inc
add
lea
test
cmp
test
mov
push
mov
and
and
leave
fnstcw
sub
mov
push
dec
test
ins
push
mov
es
(bad)
sub
xor
retf
add
push
cld
mov
movs
sahf
cwde
mov
rol
stc
and
add
adc
and
add
jmp
push
(bad)
adc
pop
pop
(bad)
add
cmp
in
push
lods
cmp
mov
push
jmp
loopne
pxor
and
cmp
out
xchg
xor
inc
call
mov
add
scas
mov
cs
mov
push
jl
push
xchg
dec
adc
cmp
leave
and
std
cmp
inc
lods
push
add
adc
sub
stos
adc
pcmpeqw
inc
inc
test
into
add
inc
lea
or
adc
pop
je
cmp
pop
ss
sbb
add
test
stc
xchg
and
rol
je
rol
pop
into
stos
cmp
lock
dec
or
cs
pop
pop
adc
add
jmp
adc
pop
sbb
or
cmp
pop
sub
imul
leave
inc
cs
repnz
jmp
add
mov
test
mov
adc
adc
fld
pop
adc
loopne
jl
in
leave
scas
inc
inc
retf
mov
outs
cmp
add
or
push
cmp
mov
hlt
retf
add
pop
inc
and
add
xor
jne
add
arpl
scas
and
xor
add
pushf
pushf
lea
cmp
add
jecxz
sub
dec
xchg
and
loope
ja
dec
dec
pop
inc
push
in
add
push
pop
pushf
mov
std
fcmovnu
shr
sbb
dec
(bad)
jo
(bad)
mov
mov
dec
add
(bad)
push
xor
je
outs
les
push
adc
xchg
mov
xor
adc
mov
inc
pop
pushf
jl
jmp
and
add
and
dec
adc
adc
daa
sub
cmp
inc
mov
dec
mov
repnz
adc
cmps
and
dec
push
jb
sbb
add
movs
add
push
sbb
loop
(bad)
or
pop
jmp
mov
cmp
dec
add
dec
xchg
inc
inc
push
sbb
xlat
xchg
push
mov
or
mov
sbb
mov
dec
jl
mov
jle
ja
add
in
sbb
out
pop
pop
pushf
mov
aam
leave
dec
and
jns
pop
push
and
dec
addr16
inc
push
retf
movs
xor
scas
push
xor
jb
and
mov
sti
jb
test
cmp
or
mov
pusha
xchg
movs
scas
push
pop
jge
and
mov
jle
push
popa
push
xor
jg
jno
sbb
xchg
rcl
or
adc
or
ds
loopne
lea
or
mov
or
dec
xchg
cmp
leave
sub
and
push
leave
jae
dec
add
imul
cmp
ss
add
jge
mov
pop
mov
adc
xor
cmp
test
dec
mov
in
(bad)
sub
add
and
mov
nop
mov
ss
jmp
mov
sahf
addr16
data16
enter
lahf
outs
push
and
push
pusha
call
add
push
mov
call
pop
arpl
sbb
add
add
pop
push
add
cmps
and
ss
pop
or
dec
xor
cli
cmp
push
mov
adc
push
push
fwait
ret
mov
inc
ja
lea
ret
sbb
dec
xlat
pop
dec
xchg
push
inc
adc
xchg
sbb
mov
jmp
inc
xor
sbb
mov
sub
pop
inc
sbb
mov
mov
aas
inc
or
and
dec
or
sub
mov
mov
rcr
push
cmp
sub
add
adc
pop
sbb
call
lea
in
sbb
dec
fdiv
xchg
push
loopne
sbb
cmp
and
xchg
xor
add
push
jb
enter
mov
nop
call
bound
inc
outs
add
in
pusha
inc
sahf
adc
loopne
clc
retf
rol
pop
jns
push
dec
jl
(bad)
call
pop
cmp
pop
and
or
mov
lock
sub
aam
xor
movs
push
cmp
test
push
test
loopne
sbb
add
aad
leave
dec
mov
add
in
or
movs
retf
int
add
xor
jb
(bad)
sub
mov
data16
mov
jl
jle
data16
mov
dec
jo
aam
mov
ss
cmp
jne
stos
rcr
jmp
js
xchg
retf
xor
pop
add
fild
xchg
adc
lea
sar
cmp
jl
adc
adc
sbb
lods
push
add
mov
sbb
pop
(bad)
fisttp
xchg
ret
sub
inc
dec
mov
xchg
ror
mov
jae
aaa
les
mov
xchg
mov
sub
sar
adc
push
sbb
and
push
aas
cli
jae
mov
sub
and
inc
ss
ins
dec
add
bound
and
mov
fsubr
sub
mov
push
cmp
gs
pop
in
cmp
out
pop
pop
shr
push
ror
pop
or
test
mov
push
mov
inc
sbb
push
dec
cdq
pop
inc
push
cmp
fs
and
jmp
lds
and
lahf
sbb
xor
call
fcmovnb
adc
push
out
mov
push
sahf
arpl
test
jnp
xor
pop
jbe
adc
sbb
mov
test
cwde
ins
mov
adc
dec
mov
push
push
sbb
leave
push
mov
jno
dec
inc
stos
dec
fbld
pop
rcl
pop
fs
or
pop
cmp
test
pop
add
add
or
or
paddusw
mov
jae
fimul
mov
sub
fadd
ror
ss
sbb
gs
neg
mov
(bad)
inc
sub
rol
repz
sbb
ret
adc
sbb
push
and
je
push
push
fbld
mov
add
popf
movs
add
jne
ins
cs
in
cmp
mov
sbb
cmp
rol
add
mov
je
xchg
or
fcmovnb
push
jo
sub
mov
adc
mov
sub
sbb
and
inc
test
mov
adc
aam
arpl
nop
mov
mov
lock
loopne
fisttp
xlat
adc
movs
add
dec
aad
in
popf
and
push
gs
push
je
or
inc
das
sub
push
ret
sbb
pop
les
(bad)
mov
sbb
push
sbb
mov
or
pop
rcl
xor
and
ss
push
or
xor
push
pop
enter
call
imul
adc
pop
dec
in
adc
cli
cwde
scas
pusha
push
add
jnp
cld
pop
jns
mov
nop
add
retf
sub
mov
sbb
mov
push
and
sub
inc
adc
clc
mov
sub
sub
outs
cmp
jmp
inc
enter
aas
and
jecxz
push
std
and
sub
inc
xor
mov
pop
dec
mov
ffreep
pop
add
in
cmp
je
dec
xchg
ins
inc
xor
(bad)
inc
jp
adc
aam
es
add
shr
retf
cmp
(bad)
rcl
leave
push
jne
xor
inc
or
(bad)
add
lahf
(bad)
mov
sub
or
and
(bad)
or
mov
in
and
cs
and
and
in
sbb
add
jl
adc
and
cwde
add
sbb
dec
gs
push
fbld
and
xchg
xchg
xchg
fwait
and
mov
xchg
xchg
and
and
sbb
add
or
bound
movs
popf
sbb
imul
js
adc
jae
jns
fbld
and
(bad)
out
push
enter
div
mov
iret
mov
lds
(bad)
adc
jo
jmp
js
lods
sub
or
push
sbb
inc
rcr
fidiv
and
push
(bad)
mov
sub
pushf
pop
jbe
movs
inc
leave
cmp
lahf
and
dec
add
add
pop
mov
pop
or
cmp
pusha
mov
jp
push
inc
cdq
pop
add
sbb
jmp
dec
movs
(bad)
popf
add
push
loopne
push
mov
push
jp
mov
pop
cmp
popa
push
add
sbb
xchg
xlat
pop
push
sbb
call
addr16
jo
adc
pop
or
inc
ins
dec
cdq
das
jg
or
and
nop
jnp
lock
pop
push
push
in
fsub
arpl
mov
cmp
add
cld
movs
les
sub
push
push
dec
fmul
stc
aas
mov
or
mov
mov
pop
add
(bad)
adc
inc
xchg
adc
pop
adc
int3
sub
mov
xchg
je
sub
sub
push
sub
sub
mov
aaa
mov
adc
pop
add
je
cmps
addr16
pop
or
inc
fimul
push
call
aam
call
fcmovne
add
ins
adc
dec
push
adc
jae
jmp
push
leave
shr
shl
jbe
mov
jb
pop
add
jno
push
jle
mov
out
ss
mov
cmp
jae
push
mov
lock
rcl
adc
pop
push
mov
push
scas
into
retf
jge
jle
or
mov
inc
add
add
push
push
adc
in
fs
iret
inc
xchg
adc
inc
sbb
adc
push
push
or
sub
scas
push
arpl
daa
imul
je
cmp
pop
fnsave
enter
mov
xor
sub
out
push
adc
dec
fdiv
pop
sbb
and
dec
mov
xchg
push
mov
ret
retf
push
arpl
dec
dec
hlt
test
add
push
mov
movs
adc
pop
sbb
cmp
pop
ficom
sbb
cmc
inc
adc
sbb
nop
gs
jmp
ja
mov
add
or
jl
push
mov
dec
push
(bad)
fimul
xchg
in
sbb
jle
dec
je
(bad)
lahf
je
mov
jbe
push
test
mov
jne
leave
or
add
lds
cmp
es
test
test
cwde
mul
xor
fdiv
sub
and
or
and
retf
dec
gs
mov
fist
cmp
jne
leave
xor
shr
push
out
lea
icebp
mov
jmp
add
cmp
or
rcr
mov
sbb
add
or
or
xor
xor
add
adc
dec
dec
add
std
mov
sbb
ret
and
and
xor
sub
pop
add
ins
sbb
sub
clc
dec
inc
add
jmp
sbb
popa
inc
pop
mov
mov
or
pop
es
enter
loope
pop
or
adc
pop
repz
and
mov
imul
inc
dec
or
add
add
mov
push
pop
and
test
push
xchg
or
push
xchg
push
shl
push
xor
jl
(bad)
xor
lock
lods
add
inc
idiv
sti
pop
mov
cmp
or
hlt
mov
test
inc
popa
cmps
lea
(bad)
sbb
add
mov
inc
movs
dec
(bad)
xor
cmps
call
jo
hlt
test
push
or
add
or
mov
dec
retf
shl
pop
inc
xchg
sub
and
push
ins
push
fadd
(bad)
jmp
add
jle
test
jmp
push
ret
xchg
aaa
cmps
dec
pushf
cmp
adc
into
inc
les
pop
dec
or
not
ror
jecxz
out
ins
popa
adc
loopne
mov
div
or
and
inc
cmp
scas
cmovp
outs
or
pop
add
fsincos
retf
jecxz
pop
push
cli
xchg
fwait
xchg
adc
in
ss
loop
push
inc
je
sbb
jne
enter
xor
mov
fwait
sub
push
cld
adc
pop
inc
xchg
ret
jo
les
les
inc
jo
add
jo
dec
push
fmul
pushf
out
push
hlt
(bad)
fdiv
std
mov
popf
pop
dec
shr
push
lock
adc
imul
or
push
stc
(bad)
adc
push
sti
ins
lods
xchg
scas
ret
adc
add
pushf
adc
push
enter
push
push
push
adc
push
fwait
imul
cmp
mov
add
and
test
adc
pop
add
ins
add
mov
mov
mov
and
add
push
sub
add
in
add
ds
int3
cdq
sub
add
sub
sub
dec
dec
add
lea
fnstcw
sbb
pusha
cmp
or
and
aam
les
add
shl
loopne
cdq
add
dec
ret
jl
pop
adc
jne
mov
pop
mov
mov
lods
dec
and
lea
mov
mov
push
pusha
jl
test
test
xor
(bad)
std
dec
adc
int3
add
fnstsw
pop
inc
pop
push
add
repz
leave
mov
stc
mov
inc
xor
inc
rol
sbb
jae
imul
pop
fstp
jo
ret
push
retf
test
(bad)
fst
adc
repnz
and
sbb
adc
je
ins
pop
sub
jne
jne
ret
fdivp
push
shr
add
lea
stos
ja
pop
pop
test
les
and
nop
sub
nop
and
and
test
sub
enter
sub
mov
or
mov
and
jno
push
or
pop
cmp
pushf
jg
repnz
shl
pop
and
add
add
or
xchg
xchg
sub
inc
inc
test
xchg
pop
adc
adc
xor
and
push
vsqrtps
or
sub
loope
or
leave
push
push
repnz
mov
pop
add
movs
nop
mov
pop
mov
xor
inc
ret
cmp
xchg
and
and
imul
inc
jb
add
mov
mov
adc
pop
stos
fs
adc
adc
pop
sub
pop
cmp
inc
and
sub
and
popa
pop
sub
leave
xchg
mov
sub
in
test
sub
sub
sub
sub
stc
dec
les
mov
mov
movs
rcr
popf
jmp
retf
adc
cmp
xchg
xchg
sub
(bad)
sub
mov
(bad)
or
les
mov
fdivr
adc
nop
push
or
test
push
and
inc
xchg
inc
sbb
add
test
and
lods
cli
inc
or
mov
loope
and
mov
mov
test
or
pushf
pop
mov
in
sbb
mov
or
cmp
sub
inc
sub
cs
adc
clc
xor
push
dec
js
sub
loope
or
mov
mov
and
adc
popf
pop
push
mov
mov
lea
mov
out
add
sbb
dec
cmp
je
pop
pop
mov
sbb
jmp
pop
xchg
sub
xchg
jg
(bad)
ins
or
stos
xchg
aas
push
adc
and
adc
les
mov
xchg
ins
mov
mov
add
mov
dec
(bad)
push
dec
stc
add
xor
push
mov
pop
ins
inc
add
movs
adc
sbb
push
es
retf
pop
jg
inc
sub
mov
add
loope
sbb
push
dec
retf
js
sti
jne
out
and
xor
xchg
or
jbe
xor
or
psubsw
fisub
xchg
sbb
aas
stc
or
and
adc
add
fdiv
mov
add
adc
sbb
xor
jb
nop
mov
or
pop
test
or
fst
push
dec
or
sar
mov
pop
cmp
inc
sbb
push
or
sbb
mov
xchg
mov
xchg
dec
push
movs
lahf
adc
xor
adc
test
and
pop
fs
ret
mov
push
mov
mov
mov
leave
ret
pop
rol
fild
mov
or
in
pop
or
mov
add
push
sub
pop
mov
inc
xlat
sub
cmp
push
dec
mov
bound
push
mov
pop
dec
sub
lea
fld
sahf
ja
ror
cmp
inc
cmp
js
or
aad
xchg
jns
jg
pop
push
jns
int3
inc
or
imul
or
jmp
xchg
xor
into
pop
xchg
xor
jmp
mov
rol
cmp
jbe
mov
cli
das
jbe
sub
mov
push
adc
pop
pop
outs
push
mov
test
rol
jb
rcr
push
sbb
cdq
push
and
and
mov
lock
mov
cmps
dec
cmp
xlat
(bad)
mov
cmp
ror
dec
xchg
(bad)
pop
inc
movs
outs
or
(bad)
mov
stc
rcr
cmp
iret
repz
sbb
jge
dec
push
dec
xor
repz
repz
pop
enter
push
or
lods
mov
cmp
lea
dec
repz
mov
jne
push
ss
push
cli
mov
or
aad
js
lea
iret
and
inc
sub
popf
rol
inc
sbb
push
push
aad
je
(bad)
jno
popa
mov
xchg
nop
test
and
adc
mov
jb
mov
test
push
mov
movs
jb
mov
cvttps2pi
push
enter
jl
dec
leave
sub
add
int
dec
repnz
int
sub
pop
sub
push
test
adc
xor
mov
pop
ret
jo
xchg
dec
xchg
inc
mov
adc
cdq
nop
repnz
test
ret
rcl
dec
mov
ins
xor
mov
dec
test
loop
pop
xor
add
push
inc
(bad)
adc
and
mov
lods
push
ror
jnp
or
ret
and
xor
mov
jl
adc
push
adc
cmps
sbb
mov
add
sbb
push
adc
xor
mov
rol
sbb
jb
mov
inc
jo
adc
repz
dec
shl
(bad)
test
enter
fbld
cmp
and
and
and
(bad)
push
enter
pop
dec
push
xor
and
shl
ss
fsub
and
add
add
sbb
cmps
fs
and
and
loopne
xchg
pop
add
xor
inc
push
(bad)
and
and
inc
es
and
and
shl
sub
sub
leave
nop
sub
push
lahf
or
dec
test
push
retf
xchg
xor
lock
adc
push
cmc
psubusb
inc
cdq
fmul
or
loope
jmp
jbe
add
pop
or
outs
push
nop
mov
es
and
or
popa
test
push
(bad)
inc
or
inc
and
rcl
clc
adc
sar
xor
iret
mov
mov
xchg
and
mov
or
inc
rcl
dec
movs
push
out
xor
adc
fs
inc
sbb
mov
adc
inc
jecxz
xor
ja
lods
adc
and
loope
test
inc
jnp
addr16
adc
test
and
inc
nop
jbe
mov
lods
xlat
dec
adc
call
mov
test
push
inc
jns
movups
sbb
lea
pop
xchg
nop
mov
(bad)
pop
jne
(bad)
adc
ret
outs
sub
cmps
dec
or
pop
test
in
pop
sub
jg
cmc
push
sbb
push
sbb
mov
ret
aad
mov
pop
in
mov
mov
je
add
test
pop
or
mov
and
xchg
adc
shl
shl
in
je
push
mov
pop
adc
sub
push
xchg
enter
lods
mov
sar
sbb
addr16
iret
mov
aad
lods
jmp
call
mov
adc
mov
(bad)
out
sub
xchg
jg
xchg
icebp
adc
rcr
pop
adc
push
popa
xchg
pop
add
xor
ss
push
aad
inc
xor
add
scas
pop
adc
mov
push
and
mov
cmp
jo
dec
add
or
add
mov
push
add
out
inc
mov
pushf
pop
fld
adc
enter
enter
mov
sbb
xchg
add
or
hlt
add
loopne
mov
jae
add
jle
adc
inc
retf
add
call
xor
inc
dec
loop
inc
sbb
mov
push
sbb
add
dec
push
dec
sub
xchg
cld
add
or
cs
sbb
aas
dec
and
test
or
or
inc
or
xchg
jb
add
sub
push
cmp
imul
fistp
inc
enter
adc
adc
sbb
push
dec
cmp
aam
push
mov
cmp
cmp
inc
add
js
rcr
stos
and
jl
enter
mov
pop
inc
cmp
sbb
adc
mov
push
dec
loope
mov
cmps
dec
adc
lahf
dec
clc
lahf
inc
movs
xchg
sub
cdq
sub
dec
sub
mov
clc
pop
or
scas
movs
add
add
dec
adc
mov
or
push
pop
xchg
mov
scas
or
or
add
or
enter
or
push
or
lock
adc
dec
push
in
add
mov
mov
cmp
lahf
push
xchg
pop
dec
jge
sub
sub
push
in
test
mov
pop
dec
cmps
mov
sbb
call
bound
imul
fimul
test
push
fisub
xchg
(bad)
daa
add
(bad)
or
adc
xor
icebp
inc
jbe
(bad)
fbld
cmp
shl
cmp
pop
enter
sbb
retf
dec
jne
out
and
cmp
inc
sbb
or
or
leave
je
fwait
std
pop
push
movs
push
push
add
loopne
je
out
inc
test
and
inc
push
pop
sahf
popa
jecxz
mov
dec
aaa
mov
add
jo
add
scas
inc
in
cmp
dec
aam
cmp
inc
mov
or
ds
xchg
sbb
aas
xor
jno
lock
mov
test
mov
lock
int
das
add
add
pop
and
or
movs
inc
jg
or
jb
mov
cmps
push
in
ja
cwde
loopne
cwde
xor
push
and
mov
mov
push
daa
cwde
jb
pop
out
push
mov
and
stos
or
pop
pop
scas
shl
jo
lock
push
or
mov
push
js
push
rcr
jl
fisttp
jg
xchg
mov
ins
add
repnz
enter
cdq
add
mov
arpl
or
adc
mov
push
or
or
push
or
ret
aas
mov
retf
enter
xor
clc
or
rcr
inc
sbb
xor
inc
mov
setns
push
sbb
fwait
dec
mov
lea
test
or
adc
and
(bad)
jmp
lahf
rol
sbb
adc
mov
aad
out
std
mov
jae
int
repz
xchg
fmulp
es
mov
jno
push
loopne
push
mov
pushf
mov
test
jge
sub
xor
jne
pop
sub
and
shr
pop
push
or
mov
jmp
out
jl
mov
jle
and
add
xchg
sub
mov
add
pop
pop
or
mov
dec
sub
and
nop
dec
jo
ins
xor
daa
and
push
aad
(bad)
sub
retf
outs
sub
cmp
jl
and
cwde
add
jl
xchg
fimul
push
ror
xchg
dec
mov
push
adc
aas
sbb
xchg
test
data16
add
hlt
jle
pushf
sbb
and
mov
mov
inc
cmp
or
mov
sub
add
xchg
(bad)
popa
add
adc
(bad)
fild
ss
pop
lods
or
es
push
push
ret
xchg
sub
push
sub
xchg
retf
mov
je
xchg
pop
xor
sbb
das
add
sbb
pop
aaa
test
jmp
packssdw
in
mov
sbb
imul
(bad)
and
mov
pop
pop
jmp
mov
cli
dec
lea
in
aam
lea
or
test
es
push
mov
sbb
push
adc
stos
adc
inc
mov
rcr
push
inc
loop
add
mov
push
sub
push
dec
scas
add
(bad)
shl
ret
xor
jno
mov
push
sbb
test
repnz
retf
shl
sub
sub
sbb
sbb
cdq
inc
mov
push
mov
cmp
fstp
xchg
cmp
cld
inc
das
jmp
leave
shr
fwait
xchg
sub
cmp
or
add
mov
adc
into
push
mov
(bad)
inc
daa
mov
jmp
test
pop
ss
fadd
inc
xor
(bad)
and
mov
add
iret
pop
in
test
(bad)
daa
je
push
test
add
rcr
xor
scas
or
aad
push
jmp
adc
push
or
adc
add
sbb
fstp
push
jg
bswap
nop
scas
sub
sbb
ret
inc
mov
and
pusha
adc
add
xor
pop
adc
or
or
shl
ins
je
add
pop
jb
and
add
push
mov
jmp
nop
stos
push
dec
fmul
loopne
fs
mov
inc
ds
test
add
call
sahf
cmp
std
pop
das
or
adc
lahf
ret
mov
mov
mov
sbb
aas
add
adc
in
pop
fwait
dec
push
dec
dec
and
cmp
mov
push
sub
inc
cmp
sub
call
xchg
cmps
xlat
lea
call
or
cdq
dec
or
xlat
and
pop
mov
sub
add
mov
rol
pop
push
mov
jmp
call
or
fild
loopne
loopne
add
add
loopne
retf
ret
add
and
dec
mov
das
or
or
sbb
pop
mov
mov
cmp
add
frstor
jo
in
mov
shl
and
adc
aaa
dec
(bad)
mov
stos
mov
add
pusha
pop
je
adc
sbb
ss
mov
or
sar
inc
stc
sub
sbb
jbe
ror
test
popf
sbb
adc
jb
and
pop
iret
mov
aas
push
pop
add
stos
push
push
pop
or
dec
(bad)
call
sub
adc
mov
mov
shl
sub
xor
arpl
add
xchg
adc
mov
out
rol
ds
sahf
cld
retf
and
cli
outs
push
outs
or
jae
cmp
sub
sbb
jmp
data16
mov
pushf
(bad)
fs
hlt
jl
scas
rol
adc
fadd
jo
dec
lahf
mov
outs
inc
inc
ror
and
xabort
mov
mov
loopne
cmp
dec
push
xchg
jo
fisub
mov
sbb
cld
sbb
mov
in
adc
lea
in
push
shl
fisub
or
xor
or
fistp
ss
cmp
shl
push
scas
fmul
push
mov
adc
cmp
out
dec
fbstp
lods
sub
cmp
push
mov
dec
stc
lods
dec
or
popa
push
and
ret
and
iret
mov
push
mov
dec
sub
out
fisttp
arpl
aas
jecxz
jmp
sbb
fisub
sbb
fmul
mov
popaw
and
sbb
addr16
pop
(bad)
mov
cwde
dec
fist
pop
xchg
push
or
add
push
icebp
jno
fist
sub
push
test
daa
pop
retf
xchg
shr
mov
popa
push
int3
push
add
pop
out
add
dec
jp
ins
setg
mov
dec
pop
xchg
and
gs
test
cmp
add
ror
iret
into
fmul
xchg
loopne
and
push
es
shl
add
cmps
inc
ins
inc
mov
mov
(bad)
sub
sbb
daa
adc
xchg
loope
inc
arpl
iret
in
pop
jl
cmp
call
pop
xchg
or
or
push
add
leave
push
lock
adc
sub
or
xor
ret
mov
dec
dec
in
or
inc
popa
lock
sub
and
cmps
rol
mov
mov
pop
mov
cmp
fs
adc
mov
add
stos
imul
add
and
pop
das
sbb
cmp
pushf
(bad)
xor
fist
sbb
jl
int3
and
xchg
sub
jbe
pop
shr
in
adc
cmp
dec
sbb
and
adc
mov
aam
aam
inc
sub
inc
xchg
sbb
and
adc
or
or
loope
pop
shl
repz
push
enter
loope
and
and
retf
shl
or
xchg
push
adc
and
inc
mov
dec
or
clc
je
mov
cli
ss
jmp
int
ror
jns
mov
push
mov
push
ror
or
add
mov
sbb
xchg
shl
lods
add
push
inc
retf
push
std
inc
mov
cmp
jae
call
rcl
and
jb
mov
loop
mov
cs
add
adc
push
ja
mov
shl
push
repnz
sub
add
jb
ins
dec
xor
scas
lock
(bad)
mov
or
xor
adc
imul
cmp
shr
pop
pusha
clc
shufps
add
xchg
sbb
pop
mov
mov
mul
lea
push
aaa
fsub
adc
sub
(bad)
and
aas
pop
push
push
mov
adc
xchg
sbb
add
lock
test
pop
push
or
sti
cmps
movs
nop
or
sar
push
adc
or
and
mov
movs
adc
jnp
cmps
cmps
mov
or
mov
iret
push
shl
mov
adc
aad
pop
fidiv
mov
jo
test
adc
js
adc
repz
or
shr
fdiv
adc
cmp
or
pop
sbb
or
(bad)
ins
mov
icebp
dec
jmp
stc
outs
sbb
arpl
jno
test
mov
sti
imul
les
or
loop
jbe
loope
push
sbb
jnp
imul
fwait
push
stc
xor
(bad)
jg
sbb
add
ret
push
push
adc
fwait
mov
mov
or
shr
iret
js
jecxz
add
outs
jp
jno
ret
xor
dec
dec
jns
push
lea
test
pop
ins
lods
cdq
jp
aaa
lea
rol
or
xor
in
popf
les
jo
(bad)
movs
add
inc
inc
je
cmps
sub
or
jmp
and
fdivr
sub
jge
and
fwait
sahf
sub
lods
xor
ds
mov
retf
sbb
movs
xchg
test
inc
arpl
push
push
add
and
sar
add
xor
cld
mov
push
add
cmp
add
test
dec
ja
iret
pop
add
popa
cmp
sbb
jg
sti
inc
lea
xchg
loop
loopne
pop
sbb
and
adc
jp
inc
mov
arpl
les
xor
adc
ins
jmp
sbb
or
xor
and
adc
push
(bad)
hlt
fld
adc
ret
stc
jge
or
je
js
cwde
inc
and
inc
mov
out
fwait
dec
jecxz
add
dec
int3
mov
cdq
xor
mov
mov
xchg
leave
lea
jno
rcr
dec
pusha
das
rcl
inc
xchg
sbb
and
mov
or
out
cmp
jae
add
cmp
or
add
cdq
in
es
cmp
lock
or
das
mov
hlt
mov
dec
push
sbb
std
cmps
lock
inc
cmps
cwde
jb
(bad)
neg
(bad)
jae
lea
xchg
xor
mov
movs
add
aam
imul
fiadd
pop
push
cmc
int3
cli
push
ins
jmp
xor
aaa
inc
ins
pusha
jo
sar
(bad)
xor
addr16
xchg
cmp
push
mov
adc
(bad)
lods
hlt
mov
cmp
popf
jnp
xchg
push
push
jbe
loop
mov
sub
int
mov
jo
imul
fnstsw
cli
xor
mov
add
xchg
sub
leave
test
jo
test
adc
or
data16
add
xchg
pop
dec
adc
push
sbb
test
lock
jmp
push
lods
and
jo
in
xchg
hlt
dec
mov
js
push
rep
jns
push
push
mov
and
jmp
enter
inc
imul
dec
push
and
xchg
ror
cli
pusha
or
fistp
mov
jb
push
push
cld
adc
inc
sub
js
loopne
shr
jo
aam
adc
ret
in
aam
fld
inc
in
test
nop
pop
adc
push
in
inc
fsubr
or
sub
or
inc
in
and
dec
push
dec
inc
or
aaa
and
popa
sbb
xor
xor
adc
popa
or
mov
or
in
out
fwait
xchg
or
add
and
retf
mov
mov
push
int
cmp
mov
jo
or
gs
or
dec
retf
fmul
inc
in
xor
adc
cmps
pop
(bad)
and
mov
or
inc
or
and
pop
mov
scas
pop
ret
fcomp
mov
inc
or
cmp
imul
test
fdivr
mov
push
jo
jmp
sar
add
jne
cmp
jne
(bad)
cmc
cmp
sub
mov
xchg
mov
pop
push
mov
sbb
daa
and
mov
jbe
test
and
adc
call
add
in
pop
ja
add
mov
push
adc
mov
or
add
pop
add
in
test
pop
pop
cli
cmp
sub
dec
jb
nop
mov
cld
lea
cmps
jns
pop
add
xchg
cld
mov
jl
inc
adc
add
add
sub
mov
dec
xchg
into
dec
dec
and
pop
sub
imul
sbb
xchg
cdq
dec
sbb
les
(bad)
and
jae
jb
cmp
sbb
test
add
dec
jne
aaa
test
jmp
daa
imul
or
lock
cmp
nop
cmp
sti
jmp
jns
or
push
push
bnd
inc
or
mov
sub
ds
pop
lods
lea
jmp
lods
mov
mov
leave
add
(bad)
and
rol
mov
cdq
ror
test
add
test
fwait
iret
inc
jmp
mov
ret
or
or
rcl
and
sbb
sub
sub
scas
push
adc
add
ret
mov
hlt
mov
ss
or
mov
leave
and
pop
xlat
cmps
popf
push
adc
rcr
es
ret
pop
shl
scas
and
sbb
and
ds
adc
xchg
push
pop
sbb
push
dec
push
(bad)
ins
cmp
loope
sbb
cmp
hlt
jae
nop
imul
call
inc
add
jb
std
ds
cmp
wrmsr
je
push
mov
push
and
rcl
inc
out
mov
fld
xor
mov
sub
push
pushw
mov
mov
sbb
push
cmp
fisubr
stos
icebp
mov
sub
push
adc
inc
out
sbb
pop
or
rol
in
inc
push
mov
pop
lea
and
cmps
pusha
gs
shr
adc
mov
dec
inc
call
and
and
pusha
mov
mov
mov
push
sub
xchg
xor
inc
pop
jmp
out
or
retf
jg
fs
enter
jne
mov
dec
stos
push
jo
js
hlt
sti
shr
push
test
push
test
inc
jge
jl
dec
xchg
sub
xor
cwde
enter
push
and
lahf
or
imul
cmp
arpl
sub
xor
sbb
and
or
add
lahf
xor
faddp
movs
adc
sbb
pop
adc
out
push
pop
add
popa
mov
adc
mov
nop
ret
pop
pusha
sub
mov
pop
(bad)
movs
(bad)
jmp
add
or
or
cmp
lea
jne
fiadd
add
adc
shl
jne
add
mov
adc
cmp
icebp
hlt
les
stc
clc
mov
sbb
or
aam
inc
lods
fwait
xor
push
mov
mov
mov
pop
and
(bad)
test
push
mov
mov
cs
retf
mov
mov
cmp
jge
lea
fst
out
aam
aad
cli
push
push
hlt
ins
xchg
jbe
inc
cmp
or
lea
or
mov
inc
(bad)
mov
jno
or
inc
inc
mov
ret
adc
enter
in
sbb
rol
adc
adc
pop
push
inc
lahf
ja
ret
xor
inc
mov
(bad)
ficom
js
dec
js
pop
xor
sti
sahf
pop
cmps
add
daa
mov
xor
push
aaa
and
cmp
cld
cmp
imul
dec
sbb
ss
and
out
cmp
sub
daa
int3
pop
subps
dec
cmp
and
push
aam
sbb
outs
fs
pushf
xchg
mov
call
and
jnp
mov
inc
push
fdivr
mov
and
stos
loopne
and
int
mov
sub
mov
push
sbb
movs
loopne
adc
addr16
inc
int3
or
ins
inc
add
cmp
or
sub
lods
movzx
push
push
hlt
std
inc
inc
mov
fiadd
or
or
xchg
iret
jb
mov
sbb
out
fsub
add
dec
sbb
jp
fiadd
push
push
add
test
ret
pop
push
add
push
add
xor
cmp
jge
adc
mov
icebp
and
pop
jl
mov
pop
int3
sar
repz
jb
icebp
pop
ret
adc
aam
mov
imul
adc
sbb
push
enter
or
or
aas
pop
xchg
bound
(bad)
jl
fcomp
fldenv
sbb
mov
add
lahf
cmp
or
sub
or
movs
or
push
pop
pop
cmp
push
push
and
push
sbb
loop
ret
and
push
test
test
sub
push
push
mov
sbb
ds
jne
inc
add
test
sbb
das
ficom
mov
sub
and
add
ret
adc
mov
jmp
push
je
sbb
loopne
jg
int3
xchg
push
loope
and
outs
ret
push
inc
fadd
push
clc
mov
pop
xor
adc
rcr
lea
ds
jg
add
je
mov
or
out
push
sbb
push
pusha
adc
aas
adc
call
sub
mov
ds
fmul
mul
seto
ss
mov
cmp
add
push
in
sbb
out
fstp
leave
xchg
jge
je
imul
fsubrp
pop
fsubr
jge
push
adc
adc
push
xchg
push
add
mov
shr
adc
stos
or
rcl
sbb
sbb
push
and
rol
icebp
cld
daa
icebp
adc
add
loop
push
sbb
xor
setge
test
mov
movs
nop
inc
pop
aas
mov
add
pusha
in
push
mov
sbb
adc
int3
push
add
retf
xor
xor
jg
xchg
push
mov
sbb
inc
and
sar
lods
and
ffreep
aas
call
lahf
add
push
push
dec
sbb
cli
idiv
ja
mov
add
sbb
cmp
fdivr
xchg
cmp
jl
enter
int
inc
xor
dec
xor
xor
xchg
jb
sbb
xor
push
inc
aad
clc
xor
fisub
jne
dec
movs
push
adc
inc
or
pop
movs
push
xchg
mov
sbb
add
pop
mov
mov
jmp
inc
sub
cmps
test
push
or
aas
shl
mov
xor
push
or
push
lea
in
inc
fwait
add
iret
push
sub
jecxz
dec
add
cmp
call
mov
in
cmps
fsubr
scas
aam
movs
ror
pop
jb
pushf
add
sub
and
add
je
mov
ss
mov
aaa
pop
arpl
add
or
fnop
jg
shl
mov
jg
dec
sub
add
add
xchg
dec
push
add
int
xor
rol
adc
leave
add
loopne
add
dec
pushf
in
dec
adc
mov
cwde
add
cmp
nop
push
sahf
inc
fadd
seto
add
add
cmp
sub
nop
or
add
repz
cmp
test
add
or
ins
cli
hlt
shl
jne
std
lds
sbb
mov
cmps
inc
test
pusha
stos
ins
add
add
scas
mov
les
not
xor
gs
pop
or
mov
fs
ficom
arpl
adc
add
shl
add
fs
mov
neg
outs
aam
ret
enter
mov
xor
cmp
push
mov
and
jmp
aam
retf
stos
mov
adc
and
xchg
popf
sbb
jg
mov
(bad)
es
add
push
jge
popa
mov
jne
(bad)
mov
repnz
cld
inc
nop
push
and
popf
push
xor
arpl
mul
mov
ja
(bad)
pop
inc
movs
bound
sbb
rol
mov
cmp
mov
cwde
push
mov
icebp
sub
movs
icebp
push
dec
adc
mov
sahf
add
mov
push
pop
paddsb
pusha
fmul
and
push
add
pop
dec
mov
xchg
ret
or
push
adc
inc
lods
adc
pusha
mov
xor
add
jle
and
cmp
movs
jne
loop
push
(bad)
loopne
pop
or
cli
icebp
adc
jmp
sub
add
sbb
add
add
fimul
pop
ret
add
add
push
movs
jecxz
loopne
ret
sub
ror
clc
sti
pop
enter
inc
pop
push
in
inc
mov
pushf
add
add
push
inc
test
lods
in
imul
add
pop
popa
nop
add
and
fisub
inc
iret
jbe
xchg
cmp
cmp
jmp
outs
adc
or
mov
test
dec
mov
or
mov
mov
mov
out
in
push
mov
push
repnz
sti
lea
mov
push
mov
mov
sub
cmc
lea
add
or
aad
es
mov
inc
xchg
pop
aaa
movs
loopne
cwde
les
jmp
pop
lea
cmp
int3
retf
mov
ret
mov
add
xchg
and
fbstp
cs
adc
fiadd
test
xchg
test
fadd
xor
iret
push
and
push
mov
ja
push
call
adc
das
cmp
(bad)
jns
lea
push
rcr
in
ret
aas
jbe
in
pop
pop
and
sbb
imul
rcl
cmp
push
rcr
inc
mov
daa
mov
push
jae
adc
push
ds
sub
loope
outs
xor
sbb
jo
jbe
in
sub
movs
jns
mov
mov
sub
call
into
ror
push
adc
(bad)
retf
sub
or
fsubr
lock
ret
or
mov
mov
sub
pop
inc
cmp
ja
mov
or
adc
cmp
push
and
es
fadd
shr
inc
enter
push
sbb
adc
mov
xchg
in
stos
sbb
mov
add
bnd
call
push
mov
jle
inc
outs
jle
(bad)
test
sub
in
adc
sbb
add
jle
jecxz
or
jmp
sub
jmp
sub
outs
into
and
add
cmps
cmc
dec
cmp
mov
loopne
lds
cmp
sub
fimul
add
fdiv
scas
aas
push
push
push
pop
xor
dec
mov
mov
into
sbb
outs
jnp
add
sbb
ins
push
lods
push
cmp
rcr
push
add
ror
jg
dec
jae
add
adc
jbe
jo
xor
pop
adc
in
addr16
cmp
adc
push
push
ret
cmp
pusha
add
in
clc
cmp
lahf
sub
push
sbb
jo
inc
je
cdq
popf
sub
or
xchg
add
je
pop
loope
hlt
test
call
inc
push
sbb
loop
jne
sub
push
mov
mov
or
push
and
push
movs
shl
leave
pop
inc
push
and
push
xchg
sub
push
adc
sub
not
loope
xor
or
or
jmp
rcr
cdq
dec
leave
popf
ror
or
(bad)
fmul
mov
repz
fsub
in
add
pop
mov
jb
push
int3
jg
adc
test
cmp
mov
cwde
pop
xchg
push
jne
adc
data16
jg
xchg
test
push
add
stos
and
es
in
ins
adc
add
xchg
sub
inc
sbb
cmp
mov
lea
aam
push
(bad)
adc
sub
mov
cmp
pop
dec
stos
xchg
mov
xchg
adc
add
or
xor
sbb
imul
clc
push
push
fdivr
dec
dec
mov
ds
in
dec
out
(bad)
jmp
xchg
js
and
aam
je
pop
xor
ins
pusha
inc
iret
add
inc
or
add
mov
add
sub
es
mov
enter
(bad)
(bad)
cmp
fldl2e
jne
outs
outs
test
imul
mov
pushf
frstor
adc
imul
je
cmps
inc
sub
add
test
jmp
int
add
lods
in
sbb
mov
mov
add
dec
jb
mov
fs
into
add
and
lea
cwde
pop
jecxz
ins
icebp
and
push
cld
test
dec
sbb
add
mov
das
out
adc
shl
nop
add
push
out
pop
ret
or
arpl
dec
loope
adc
adc
mov
sub
rcr
inc
pop
mov
mov
adc
fwait
xchg
mov
push
or
daa
inc
clc
hlt
and
pop
mov
xor
or
pop
nop
adc
outs
sub
popa
xchg
xor
push
mov
aas
shl
push
fidiv
xchg
ror
pop
xor
dec
dec
and
push
sbb
ret
sub
jmp
push
inc
add
adc
movs
pop
(bad)
scas
adc
fistp
or
imul
xchg
dec
push
push
in
adc
xor
push
aaa
push
adc
sbb
pusha
gs
sbb
sub
retf
pop
push
xor
mov
pop
ja
nop
pop
or
shl
sub
xor
push
jne
(bad)
xor
or
pop
sub
pop
push
jne
mov
mov
push
dec
popf
add
mov
test
and
test
nop
push
cmp
mov
lea
mov
push
sbb
and
pop
cmp
and
xchg
fbld
add
jno
jl
cmp
gs
test
xlat
stc
sub
cwde
xchg
js
inc
add
lock
call
sbb
push
inc
cmc
data16
sub
add
mov
and
mov
xchg
es
out
push
push
jnp
sub
sub
push
data16
pop
mov
sbb
jmp
(bad)
mov
dec
mov
movs
call
test
sub
out
popa
add
xor
lods
jl
xor
jl
loopne
movs
mov
sub
ror
dec
xchg
pop
mov
push
jno
test
cld
push
add
push
pusha
and
inc
sub
adc
xor
into
fs
sub
xchg
cmp
mov
and
and
and
xchg
adc
push
ret
sub
jo
add
jne
adc
pusha
sbb
sub
push
mov
movs
push
mov
loope
ins
add
movs
add
pop
cmp
ins
add
je
(bad)
jecxz
add
test
repnz
das
adc
jl
sub
scas
fidiv
inc
ret
adc
push
inc
fmul
jae
(bad)
sub
and
push
lods
es
mov
jne
mov
pop
cmp
mov
push
enter
push
pop
pop
push
cli
les
cld
push
inc
add
rcr
jl
adc
push
add
and
mov
adc
push
test
add
das
mov
sub
(bad)
pop
jecxz
shr
add
shl
popa
and
push
ds
ror
movs
adc
je
mov
and
sbb
mov
xchg
nop
(bad)
mov
fidiv
dec
cwde
daa
outs
sti
adc
mov
cmps
movs
or
retf
and
jmp
xor
add
repz
in
sbb
cmp
jb
push
mov
xchg
push
push
je
ja
push
or
sub
test
add
adc
adc
push
mov
jmp
push
mov
dec
push
mov
and
jo
and
mov
xor
ins
inc
(bad)
loopne
xchg
ja
push
and
sub
(bad)
je
push
mov
add
pop
jb
mov
outs
add
inc
ss
adc
pop
push
mov
adc
test
jns
cmp
test
js
add
daa
inc
jl
cmps
ss
outs
pusha
jbe
add
fistp
test
sti
gs
or
mov
push
je
xchg
int
mov
pop
fs
and
ret
bound
retf
mov
pusha
add
jecxz
iret
rol
int3
addr16
je
or
mov
ja
jbe
ror
imul
arpl
and
dec
xor
xor
dec
push
push
sbb
jo
mov
push
push
aas
xor
sub
fdivp
and
adc
or
rcr
sbb
pop
aam
sbb
inc
sub
and
adc
cmp
int3
lock
dec
jmp
fwait
push
push
mov
fsub
mov
sub
ret
sbb
mov
rep
cmp
mov
sbb
rcl
leave
jp
adc
adc
xchg
ror
shl
pop
ja
xor
sub
sub
cs
pop
ret
nop
sbb
push
stc
mov
mov
fadd
dec
dec
mov
push
out
rcl
movs
adc
dec
xor
popf
push
pop
add
adc
pusha
jg
jns
fst
std
push
push
dec
add
inc
test
or
cmp
jb
mov
dec
xor
mov
lods
adc
mov
cmp
push
mov
sbb
lods
add
hlt
xor
and
fidiv
lea
cmp
inc
mov
les
push
movs
js
aas
push
xchg
jne
adc
or
or
leave
add
shl
dec
inc
test
push
icebp
fiadd
xchg
nop
cmp
xchg
sbb
inc
and
in
jg
add
jp
push
enter
shl
xor
fcomp
or
pop
push
ss
lds
mov
lds
(bad)
jne
cmps
shl
add
and
retf
mov
xlat
inc
pop
aas
sbb
mov
inc
(bad)
aaa
adc
dec
lods
mov
add
or
sub
popa
nop
cmps
sbb
sti
sub
test
fst
sbb
mov
adc
mov
fwait
inc
adc
pop
out
jmp
mov
jbe
(bad)
push
push
push
loopne
shr
mov
sbb
sbb
adc
enter
icebp
mov
inc
pop
jmp
imul
and
and
and
xor
xchg
xor
enter
lock
popf
cwde
sbb
or
pushf
test
les
mov
mov
rcl
sar
xchg
test
test
imul
or
(bad)
stc
mov
cwde
cwde
in
nop
mov
adc
xor
cwde
sbb
sbb
iret
adc
and
ret
imul
in
stc
cmp
inc
push
push
xchg
adc
dec
push
add
les
aaa
add
jns
adc
xor
add
lea
pop
jl
les
daa
or
sub
xchg
xchg
xchg
test
aam
ficom
test
xchg
add
pop
out
pop
and
xchg
and
ins
inc
adc
dec
les
mov
sub
test
jne
xor
and
unpcklps
inc
test
mov
pusha
push
xchg
jb
cwde
and
test
fst
test
dec
mov
add
sub
jp
cmp
leave
(bad)
push
je
xchg
shr
es
push
sbb
test
or
mov
dec
je
cli
loop
xchg
js
push
mov
cmp
lods
call
push
mov
mov
dec
enter
ins
inc
mov
test
int3
mov
and
mov
xchg
rcl
adc
dec
in
pop
adc
in
fwait
push
xor
jns
stos
nop
movs
push
arpl
(bad)
jo
dec
jg
adc
cmp
cli
add
mov
scas
clc
push
lods
xor
ror
pushf
out
xchg
fidivr
xorps
cmp
sub
ss
add
in
out
xor
das
jl
and
pop
adc
mov
inc
rol
pop
lods
sub
in
sti
and
test
ds
sahf
in
mov
outs
(bad)
cwde
pusha
xchg
sub
xor
inc
mov
jge
clc
pop
cmp
pop
mov
jle
aaa
pop
inc
jmp
cmp
icebp
sub
push
outs
popf
mov
shl
or
fidiv
push
stos
test
fimul
clc
push
dec
pusha
fisub
dec
cs
cmp
je
fisubr
sar
add
xor
leave
cmp
push
call
fistp
jne
push
xor
test
push
or
pop
ins
adc
(bad)
mov
inc
neg
add
mov
jmp
mov
jmp
call
sbb
mov
cmp
jmp
out
inc
push
jo
mov
xor
pop
mov
lods
movs
add
add
ret
cmps
(bad)
ret
lods
cmp
or
jl
pushf
ret
aas
cmp
cmp
and
retf
cmp
je
mov
pop
mov
mov
cmp
dec
mov
jne
jbe
ret
sub
ds
inc
dec
mov
aam
inc
(bad)
cmp
jne
nop
fisubr
icebp
cmp
shl
retf
pop
rcl
pop
or
test
outs
xchg
add
jge
push
add
ss
sar
stc
jne
mov
outs
int
sbb
test
push
inc
cs
mov
fistp
or
mov
fild
inc
cmp
fs
inc
cmp
mov
xchg
inc
clc
cmp
or
or
push
mov
outs
pop
std
mov
stc
add
stc
mov
stos
ds
rcr
add
lods
pop
sub
out
cli
add
or
or
jle
push
mov
push
dec
jne
(bad)
cmp
jmp
imul
jle
pop
inc
or
(bad)
sub
xor
in
inc
pusha
mov
lods
mov
lock
mov
stos
jmp
or
mov
add
push
fwait
add
jle
jbe
mov
push
cmp
pop
cmp
pushw
mov
or
or
or
out
xchg
add
inc
(bad)
cmps
test
mov
mov
shl
ret
(bad)
mov
cmp
fisttp
add
push
and
js
jnp
jne
jae
inc
loop
and
jns
cmp
adc
mov
repnz
mov
ret
mov
cmps
mov
sub
push
and
add
je
shl
cdq
das
inc
or
icebp
loope
adc
cmp
mov
or
rcr
adc
or
test
push
sub
push
pop
sbb
add
inc
add
(bad)
cmps
push
sub
or
cmp
int3
cmp
mov
je
add
or
rcr
mov
add
inc
adc
and
xor
mov
or
push
xor
addr16
dec
mov
push
push
inc
xchg
leave
xor
dec
dec
aas
lahf
enter
fadd
push
or
enter
inc
add
call
add
dec
mov
bound
cdq
xor
dec
pop
hlt
in
mov
ss
lea
mov
pop
js
sub
sub
ins
push
sbb
and
pushf
xchg
push
sbb
or
stos
iret
shl
mov
cwde
inc
clc
mov
mov
ins
or
inc
hlt
mov
cmp
ret
lods
ss
fcmove
rcl
ret
sbb
add
cmps
std
or
push
stos
push
sbb
or
ror
fdivr
jle
or
and
pop
lahf
hlt
push
test
(bad)
adc
jb
pop
nop
xor
sar
add
add
adc
pop
mov
mov
stos
cmp
dec
sub
pusha
in
push
loopne
cmp
and
lods
inc
mov
lods
lods
rol
(bad)
and
and
add
xchg
test
enter
ins
adc
jne
push
or
sub
inc
and
pop
rcr
pop
lds
ins
add
or
aas
nop
sbb
ret
dec
sbb
int3
lahf
es
or
or
outs
add
rcl
lock
add
jne
pop
ret
fild
lea
loopne
js
push
push
xlat
shl
je
mov
add
mov
je
xor
nop
pusha
lods
push
clc
sbb
int3
cmps
mov
mov
push
inc
sub
inc
mov
dec
mov
adc
stos
adc
mov
jp
sub
add
or
retf
jmp
retf
adc
add
mov
xor
pusha
jo
push
mov
dec
push
lds
mov
and
popf
adc
jns
add
test
sbb
cdq
movs
leave
ror
push
mov
add
and
test
mov
xchg
push
aas
lea
cmp
cmp
pop
push
hlt
lods
push
lea
lods
xor
dec
es
pop
pop
or
mov
pop
or
sar
sub
push
dec
pop
sbb
popa
jl
push
push
imul
in
xchg
je
inc
ror
inc
lods
xchg
lods
inc
cdq
push
push
shl
int
mov
sbb
sbb
push
in
cwde
sbb
mov
shl
dec
push
push
das
je
(bad)
sub
jmp
xor
rcr
scas
rep
xor
movs
sub
jmp
shl
sbb
cli
loop
rol
push
xor
lods
push
adc
lea
sbb
add
js
test
add
cmp
and
add
mov
add
enter
pop
mov
and
stos
iret
push
or
rcl
adc
mov
cdq
pop
mov
pusha
repnz
dec
pusha
sbb
pusha
lock
add
js
jmp
ret
jns
dec
sbb
push
sub
sbb
iret
and
imul
lock
mov
call
sub
jmp
push
sub
mul
push
and
push
retf
fwait
nop
sahf
jmp
or
lahf
inc
enter
mov
inc
sub
out
arpl
(bad)
aam
add
cmps
lods
sub
call
push
sar
dec
jbe
cmp
dec
(bad)
arpl
sub
sub
mov
xchg
jnp
movs
adc
push
test
pop
daa
pop
shr
inc
xor
into
push
or
cmp
mov
ds
mov
push
and
cdq
adc
aad
sbb
cmp
add
jp
sub
test
mov
pop
call
or
sbb
mov
lock
mov
addr16
js
dec
and
pop
fidiv
dec
rep
xor
xor
or
jg
sahf
clc
mov
pop
push
data16
mov
sbb
or
or
inc
nop
and
cli
call
fild
and
stos
(bad)
call
xchg
push
iret
xchg
cmp
xor
shl
cld
leave
or
push
dec
mov
add
mov
shl
push
pop
movs
mov
(bad)
or
xchg
(bad)
imul
je
mov
mov
or
mov
sti
into
add
nop
nop
sbb
retf
in
(bad)
int3
rcl
in
mov
in
sbb
xchg
retf
lock
cld
outs
and
dec
pop
mov
rcr
test
mov
mov
xchg
xchg
sbb
adc
cmp
dec
jnp
adc
sub
inc
sbb
inc
mov
loope
add
lahf
or
mov
xchg
(bad)
cmps
lahf
add
push
jp
in
shr
or
xchg
inc
sub
je
nop
out
call
cmps
cmp
inc
inc
dec
xor
xor
and
ins
out
pop
pop
sbb
adc
inc
mov
sbb
movs
call
jnp
sbb
add
mov
and
add
and
push
les
jo
mov
icebp
dec
adc
mov
test
push
mov
int3
imul
jo
sbb
pop
xchg
out
inc
cmp
push
loop
cmp
inc
add
stos
pop
pop
sbb
jo
sbb
pop
inc
or
mov
aam
es
fadd
popa
xchg
sbb
mov
in
call
or
jp
mov
inc
imul
ret
sbb
jne
dec
fmul
push
dec
push
push
dec
mulps
and
rcl
sub
ret
mov
dec
jbe
or
sbb
dec
or
cmp
or
adc
sbb
jge
push
xor
dec
mov
push
push
ror
push
xchg
xor
dec
ins
add
jb
add
sub
xor
or
xor
mov
out
pop
ret
outs
and
fadd
test
lock
push
sbb
pusha
dec
pop
sbb
pop
xchg
test
push
mov
dec
movs
dec
pop
icebp
and
pop
dec
mov
pusha
inc
inc
out
in
push
sub
sbb
push
xor
or
ret
and
pop
fadd
je
leave
ins
cmp
fist
adc
daa
push
js
cmp
sbb
push
addr16
jno
or
aaa
enter
pop
xchg
adc
inc
je
push
je
imul
push
dec
jo
xchg
or
call
nop
xchg
js
js
fs
mov
cdq
xor
mov
xchg
lock
dec
add
sub
and
pusha
and
mov
arpl
popa
inc
and
jmp
adc
inc
and
js
dec
jge
(bad)
push
jnp
aad
ds
stc
mov
mov
dec
clc
cdq
test
int3
dec
mov
add
out
test
push
sbb
push
sbb
cmp
leave
mov
xor
inc
pop
movs
sbb
inc
or
lock
retf
and
test
fsubr
data16
lods
sub
inc
xchg
int3
push
add
or
mov
mov
xor
add
mov
es
in
(bad)
(bad)
mov
shl
push
lahf
in
mov
pop
fsub
repz
inc
ficom
mov
lods
imul
dec
dec
test
fs
and
inc
push
repnz
jne
icebp
fiadd
les
or
and
push
test
mov
lds
xor
dec
dec
xchg
jae
icebp
pop
dec
movs
sahf
les
push
inc
call
add
sub
fiadd
cmp
xchg
adc
xlat
xor
bound
gs
xor
repz
and
sbb
sbb
fnstenv
xlat
inc
imul
adc
pop
rcl
pop
les
mov
mov
stos
lea
emms
push
add
outs
pop
mov
sub
dec
ja
icebp
mov
sbb
daa
cwde
clc
dec
jne
cmp
mov
push
inc
push
push
jmp
xor
rol
test
and
pop
mov
xor
stos
rcl
cmp
(bad)
aad
jne
mov
xlat
pop
xor
fild
sbb
inc
addr16
add
dec
add
cmp
in
lea
cmp
ins
scas
leave
xchg
pop
fxch
mov
dec
pop
push
push
push
dec
ja
enter
mov
repnz
rcl
fdiv
cmp
push
loopne
leave
les
pop
xchg
dec
cmp
fisub
dec
es
inc
push
call
push
das
push
jns
add
dec
push
and
es
push
outs
sbb
stc
fldcw
mov
dec
sub
dec
loopne
and
push
into
fcom
mov
ret
push
mov
fstp
sub
iret
iret
imul
and
jno
imul
popa
in
dec
push
mov
pusha
add
xchg
shl
add
and
mov
add
or
push
pop
test
mov
push
and
js
push
aam
jmp
sbb
push
jo
sbb
inc
pop
ret
fimul
mov
sub
sbb
sbb
sub
xchg
int3
mov
and
xor
lock
ins
ins
dec
jecxz
cmp
mov
dec
js
(bad)
jl
add
shl
sbb
add
popa
in
mov
test
push
xor
xchg
or
add
(bad)
js
fimul
std
shr
ja
call
sbb
pop
cmc
in
jg
add
js
push
jmp
push
ins
dec
ins
jne
rol
push
pop
jmp
sbb
fiadd
push
and
jbe
adc
jle
jne
jo
pusha
push
sub
add
sbb
ror
pusha
push
push
push
adc
cmc
cmp
mov
adc
cmp
and
(bad)
pop
or
and
mov
inc
inc
push
call
push
test
pusha
sub
push
sahf
push
or
add
test
inc
push
sub
mov
dec
test
rcl
cmp
pop
dec
mov
fist
mov
inc
push
gs
pop
and
ds
inc
rcl
jae
pop
inc
ret
jne
int3
sub
pop
push
push
jae
mov
ja
stos
cmp
rcl
and
cmp
and
mov
imul
add
sbb
in
lock
das
jne
push
sbb
adc
inc
or
xor
call
sbb
sub
js
add
cwde
shl
push
or
test
mov
jne
adc
sbb
ret
xchg
pop
dec
jle
or
sub
xchg
stc
dec
push
xor
sbb
jg
adc
in
pop
js
mov
dec
pop
pop
scas
jle
adc
sbb
mov
sbb
adc
adc
ret
mov
call
and
push
fiadd
mov
jmp
cld
or
push
xchg
ins
push
jl
add
cmp
pusha
mov
or
adc
rcl
sbb
and
adc
sub
pop
inc
rcl
add
mov
adc
mov
push
cmp
add
adc
mov
jo
push
cmp
or
add
imul
lea
add
xchg
pop
push
dec
in
int
sbb
sub
mov
push
out
or
test
xor
test
cmp
gs
and
cmp
push
xor
pop
add
retf
popf
push
adc
xlat
mov
jmp
sbb
mov
movs
mov
sbb
and
cmp
dec
shl
jmp
push
cmp
jecxz
imul
sar
xor
das
je
adc
add
(bad)
and
sub
xchg
and
or
jmp
inc
sbb
fcom
xchg
and
sti
cld
inc
or
lods
ds
je
dec
jne
adc
aas
or
mov
jno
inc
inc
pop
ret
sub
cmp
push
fistp
adc
popf
xor
mov
sbb
test
aaa
xchg
fnstenv
enter
outs
mov
mov
and
fwait
stos
cmp
in
(bad)
xchg
jbe
adc
jbe
idiv
or
idiv
dec
xor
pop
xor
xor
pop
adc
and
mov
pop
adc
scas
sub
fiadd
mov
pop
mov
mov
xor
pop
or
pop
xor
mov
in
mov
sub
sub
sub
mov
outs
xchg
xor
push
mov
lea
push
movs
popf
xchg
jne
xchg
retf
(bad)
fcomp
loopne
xor
jge
mov
dec
mov
mov
(bad)
mov
dec
test
push
hlt
mov
mov
inc
jo
loop
fiadd
dec
xor
xor
outs
inc
xchg
ja
add
pushf
nop
mov
out
dec
add
push
enter
or
sub
dec
ret
cmp
jo
fwait
inc
pop
sbb
nop
push
cwde
retf
fild
or
xor
sub
lods
adc
shr
pusha
leave
call
adc
jle
inc
or
fadd
shl
push
sub
jo
ss
add
push
pop
aad
or
sub
dec
xor
add
xchg
cmp
and
jns
test
(bad)
clc
cwde
lods
inc
sar
add
stos
xchg
iret
movs
and
(bad)
mov
call
dec
test
push
jo
jo
dec
xor
(bad)
mov
aaa
pop
mov
xchg
cmp
or
xchg
push
fdiv
or
popa
cmp
mov
xchg
inc
call
jne
mov
pop
push
ret
sbb
retf
inc
mov
push
adc
popa
dec
lods
xor
je
mov
ins
mov
mov
jmp
lods
dec
cmps
xchg
aad
ins
dec
adc
add
scas
call
xor
cmp
jle
mov
adc
xchg
cmp
inc
sar
mov
ficom
add
out
mov
xchg
dec
xchg
cmp
fucom
push
xchg
adc
test
or
or
push
into
inc
call
(bad)
mov
jo
pop
stos
mov
fisttp
call
xlat
add
fwait
jp
dec
and
mov
mov
xchg
shl
cld
and
les
popf
add
bnd
or
mov
or
add
lahf
push
or
sbb
mov
jge
std
adc
xchg
pop
lods
lea
pop
adc
cmp
or
popa
gs
imul
xor
dec
and
js
in
lea
sar
mov
sbb
sub
nop
int3
mov
xchg
cmp
sub
pop
xor
ret
shr
out
mov
shl
adc
xor
sbb
(bad)
xchg
aam
xor
cmps
shl
ficomp
mov
mov
dec
mov
dec
ret
es
push
xchg
sahf
popf
dec
imul
sub
movs
adc
and
(bad)
es
adc
aas
push
movs
push
stos
add
movs
ret
or
or
ss
jb
fstp
stc
lea
mov
ins
loop
push
mov
loop
mov
or
or
dec
shl
je
add
in
jne
rcl
cmc
mov
movs
mov
inc
jne
fld
add
daa
push
or
dec
mov
leave
lahf
out
lods
loopne
hlt
lds
xchg
shr
(bad)
imul
dec
cwde
or
mov
fs
aad
das
mov
sub
xchg
pop
jmp
jae
xor
dec
and
xor
dec
push
jle
push
mov
or
fwait
pop
pop
sbb
cmp
mov
mov
lods
das
inc
lahf
mov
(bad)
lds
popa
ins
adc
and
pop
ins
int3
add
popf
imul
(bad)
nop
daa
cwde
ror
leave
push
ins
and
cmp
popa
mov
xor
cdq
push
or
das
dec
imul
imul
jmp
inc
dec
push
jmp
inc
(bad)
pop
xor
fnstenv
pop
add
and
inc
sbb
add
mov
pop
adc
pop
cmp
sub
jne
and
sbb
fisttp
sbb
adc
(bad)
repnz
sbb
or
cmp
jge
gs
adc
push
inc
inc
rcl
mov
mov
or
push
dec
inc
dec
jge
aam
jne
mov
fbld
add
std
dec
add
jae
inc
push
ja
clc
in
lods
inc
or
out
add
ret
or
add
sub
rol
imul
jbe
popa
add
push
push
mov
rcr
inc
ds
inc
inc
mov
inc
add
rcr
out
test
bnd
add
mov
add
jecxz
dec
dec
push
cmp
and
adc
or
xlat
imul
and
mov
add
and
je
xor
aas
jmp
pop
and
jge
iret
out
outs
or
retf
or
mov
frstor
cdq
sbb
or
inc
add
push
xchg
les
popf
shl
leave
push
fstp
aam
pop
sub
or
mov
fistp
dec
cmp
push
ja
hlt
int
xchg
test
fisttp
cmp
jns
or
xchg
dec
gs
mov
cmc
(bad)
sbb
sbb
xchg
sbb
cmovb
movs
push
shr
lahf
mov
and
int
or
adc
test
imul
sub
test
adc
adc
jnp
or
rol
enter
test
ret
call
nop
add
jne
dec
sub
cld
pop
adc
int3
push
and
mov
jnp
call
hlt
and
and
jo
adc
pop
sub
dec
jecxz
xlat
push
aaa
js
adc
loop
xchg
adc
mov
cli
xor
pushf
and
stc
sbb
inc
clc
outs
push
or
jmp
pusha
mov
fst
mov
mov
gs
mov
jle
mov
mov
cmp
les
out
int3
cmp
inc
into
(bad)
scas
jo
mov
clc
mov
and
sbb
push
add
rol
and
mov
sub
xlat
mov
adc
xor
and
push
(bad)
rcr
enter
sub
cmpps
and
nop
xchg
add
dec
sbb
dec
xor
pop
push
inc
jo
cmp
xor
in
test
pop
xchg
sub
xchg
stos
in
daa
jo
adc
test
movs
mov
jb
push
jb
add
adc
in
and
adc
aas
and
(bad)
inc
add
cmp
sub
retf
gs
or
es
movs
dec
loopne
xchg
sub
(bad)
ret
adc
mov
xchg
xor
inc
xlat
and
and
das
lea
push
lods
retf
pop
or
scas
pushf
and
and
jp
mov
jo
outs
dec
and
sbb
jmp
ret
or
xchg
sub
xor
lds
aaa
sub
rol
jnp
jmp
cmp
(bad)
xor
sbb
ins
inc
pushf
ror
adc
cmp
rol
add
gs
cmp
enter
ret
jg
(bad)
adc
push
cmp
loope
cmp
in
loope
or
dec
mov
mov
test
loope
in
pop
hlt
(bad)
aam
lea
iret
cmp
jl
lock
adc
(bad)
mov
lea
and
dec
sub
push
push
stos
inc
pop
adc
push
es
mov
dec
mov
or
je
or
add
call
or
adc
in
or
cmp
mov
xor
push
mov
dec
nop
mov
mov
mov
sbb
xlat
rol
mov
sbb
(bad)
rcl
add
pushf
pop
clc
xor
fiadd
push
mov
mov
adc
ja
call
outs
add
dec
jl
retf
or
jl
push
rcl
aad
inc
push
sub
ins
mov
shl
xchg
push
or
mov
mov
pop
mov
rcl
jp
add
ins
mov
test
sub
xor
or
xor
aam
jg
jmp
mov
add
cs
loope
call
outs
or
add
sub
movs
push
out
jp
and
jge
test
mov
inc
pop
push
lods
fiadd
ror
push
and
sub
jbe
cmp
adc
mov
jmp
mov
cmp
jno
or
sub
mov
fisubr
clc
sahf
mov
jecxz
xlat
ret
dec
push
gs
cwde
pop
adc
add
jge
les
push
or
xor
pop
pushf
rcl
push
push
sub
push
fst
dec
and
cmps
push
or
push
aam
or
or
popa
lock
push
inc
push
mov
cdq
and
cld
(bad)
xchg
jp
xchg
adc
cli
adc
pop
mov
add
sub
popf
dec
cmps
fwait
jl
push
mov
or
xor
push
cmps
or
js
mov
sbb
and
jge
std
lea
or
jmp
scas
jb
jnp
sbb
mov
sbb
push
stc
in
jmp
cmp
mov
sub
dec
sub
mov
push
mov
mov
dec
(bad)
sbb
push
aam
stos
adc
lea
or
mov
adc
loope
xchg
or
test
sub
es
mov
and
cs
sub
or
cld
pop
sub
pop
inc
pop
cld
push
shl
push
push
pop
add
adc
mov
test
jnp
int3
dec
je
or
push
xor
movs
jmp
mov
(bad)
fs
test
fs
jecxz
test
or
sbb
mov
cwde
pop
cs
mov
(bad)
enter
in
mov
jmp
hlt
clc
cld
or
call
mov
add
popa
and
jl
cmps
add
pop
mov
ret
and
mov
or
mov
(bad)
rcr
dec
xchg
ds
inc
in
push
leave
push
aam
adc
gs
mov
inc
leave
nop
xor
repnz
add
mov
push
xchg
daa
cdq
jnp
imul
adc
jae
(bad)
sub
push
push
repnz
inc
mov
stos
sub
jbe
pop
sbb
mov
int3
(bad)
rcl
xchg
mov
pop
add
pop
lods
ja
mov
xchg
sbb
cli
das
and
pop
push
ror
js
or
or
enter
xchg
arpl
popa
adc
xor
mov
adc
enter
sbb
and
dec
js
xchg
and
fld
adc
ret
dec
sbb
inc
fwait
pop
les
scas
inc
or
add
lea
xchg
lods
sbb
(bad)
push
leave
in
aaa
xchg
or
les
adc
in
shl
mov
and
add
mov
in
enter
in
sbb
hlt
mov
or
movs
or
hlt
sub
call
imul
sub
in
or
xor
dec
push
push
push
in
adc
stc
scas
xor
test
imul
dec
and
inc
int3
jae
and
cmp
int3
pop
add
and
test
add
inc
adc
lods
cmp
pop
rol
jne
mov
cmp
push
sahf
les
sub
jle
sbb
cmp
(bad)
add
lods
cmps
nop
loopne
or
lock
cli
(bad)
mov
add
dec
jl
fsubr
dec
adc
push
and
add
jle
push
sub
mov
in
mov
and
add
in
adc
sti
xor
pop
shr
mov
std
mov
movs
xor
mov
push
mov
imul
jne
lock
imul
inc
mov
addr16
shr
int
in
movs
mov
or
popa
or
sbb
pop
inc
js
movs
push
xlat
mov
cwde
pop
lds
sbb
pop
push
in
ds
add
cmp
je
xor
cwde
data16
daa
and
test
ja
loope
jmp
fwait
cmc
add
test
inc
dec
xchg
adc
push
mov
test
je
icebp
sub
mov
pop
fbld
inc
call
inc
in
push
xchg
push
clc
jo
push
mov
arpl
xchg
mov
mov
and
pop
cdq
js
xor
call
or
mov
add
push
mov
jecxz
std
cmc
in
push
or
adc
jnp
xor
add
lea
xor
in
sbb
lods
cmps
scas
pusha
xchg
jmp
out
lea
inc
mov
cmp
nop
mov
xor
dec
callw
cmp
into
call
ins
inc
add
aad
add
pop
sub
js
int3
(bad)
hlt
or
(bad)
cli
nop
out
adc
sbb
push
pop
addr16
(bad)
adc
add
add
inc
lods
add
adc
and
adc
(bad)
fs
xchg
push
ror
int
or
pop
inc
or
or
imul
xor
shl
int3
loope
lods
jns
adc
push
cmp
adc
add
add
in
aas
pusha
mov
outs
ret
fs
sub
(bad)
adc
ret
pop
inc
sbb
enter
test
jecxz
int3
in
aas
jne
mov
push
lods
pop
sar
fsubr
mov
mov
in
or
aam
test
push
push
push
test
jo
or
imul
iret
rol
mov
fucomip
ss
mov
icebp
pop
sbb
push
dec
aam
js
aad
push
rol
int
sbb
mov
daa
pusha
ficom
inc
mov
xchg
fild
sbb
fmul
pavgw
fs
jne
push
js
fs
dec
sbb
les
gs
and
fimul
cwde
js
and
ds
jge
pop
fld
xor
mov
popf
lods
test
jnp
(bad)
(bad)
jl
cwde
mov
movs
push
pop
mov
sub
add
jo
push
dec
(bad)
xor
iret
mov
test
adc
pop
mov
ror
sub
cmp
addr16
or
adc
inc
mov
loop
test
inc
dec
pushf
imul
cwde
call
and
adc
sbb
mov
cld
sbb
rcl
cmp
adc
and
jge
shl
xor
push
xchg
mov
jmp
rol
(bad)
sub
nop
sub
rol
or
push
stos
sub
mov
mov
out
stos
sbb
(bad)
aam
xchg
pop
or
xchg
mov
cmps
bound
gs
xor
dec
and
xchg
and
jl
stc
cmp
jle
or
sub
or
mov
(bad)
push
mov
dec
xlat
les
lods
nop
test
mov
pop
ss
dec
sbb
xor
xor
movs
mov
pop
sub
enter
shr
xor
cwde
and
xor
jle
aad
inc
stos
lods
jle
(bad)
popf
sub
mov
inc
push
movs
pop
push
pop
ds
push
mov
and
pop
js
retw
rol
std
(bad)
jle
sub
sti
js
dec
push
jo
pushf
add
mov
dec
sub
adc
rcr
sub
call
sub
sbb
push
lea
add
xor
(bad)
ds
xchg
shl
push
inc
(bad)
xor
mov
clc
fwait
or
mov
pushf
pushf
xor
je
xor
adc
sub
adc
movs
or
js
rcr
mov
jb
and
cmp
mov
pop
pop
shr
adc
dec
jg
add
adc
or
dec
push
sbb
push
mov
(bad)
mov
pop
mov
pop
ins
add
ja
cdq
fist
mov
mov
inc
bound
adc
leave
jg
xchg
lods
pop
bound
je
pushf
(bad)
jne
mov
dec
add
mov
push
sub
inc
int
in
leave
inc
arpl
and
(bad)
push
xlat
jnp
outs
cmp
cmps
xor
add
je
scas
xchg
jo
add
pusha
in
lea
jo
aad
mov
jo
cdq
jo
pop
add
or
xchg
loopne
sbb
lods
add
mov
push
(bad)
xchg
test
push
push
push
adc
push
(bad)
mov
ja
loop
xor
(bad)
or
icebp
adc
mov
adc
and
push
nop
or
retf
les
mov
xchg
or
adc
pop
add
frstor
or
add
mov
ins
xor
add
add
jmp
adc
ins
test
xor
std
mov
sub
loop
add
loopne
adc
inc
or
sbb
pop
mov
push
inc
mov
push
fwait
cmps
mov
add
dec
lock
es
mov
mov
dec
(bad)
xlat
sbb
call
cmps
and
sub
push
cmc
test
lea
ror
in
push
inc
sbb
movs
push
aas
fist
xchg
pushf
sbb
sbb
and
sbb
push
adc
dec
fild
sbb
aas
sbb
add
sbb
cdq
sbb
nop
dec
sbb
stc
add
and
sbb
push
sbb
sbb
call
sbb
xchg
fwait
dec
sbb
add
xchg
xchg
xchg
sbb
sbb
arpl
in
mov
jl
or
cmp
xor
fucomip
movs
popf
jmp
retf
adc
pop
dec
out
aas
sbb
add
push
shl
or
jl
imul
adc
test
stos
or
or
sub
add
fisubr
cdq
sbb
popa
add
inc
xchg
adc
ss
jnp
movs
push
enter
sbb
sbb
test
mov
inc
xchg
sbb
add
adc
cmp
adc
sub
shl
adc
jmp
pop
and
repnz
rcl
rcl
test
repnz
test
enter
cwde
push
push
cwde
push
test
lea
jae
iret
xchg
push
test
dec
jb
loop
mov
mov
adc
pop
mov
(bad)
sub
push
sub
shl
(bad)
push
pop
dec
mov
xchg
fbstp
sbb
xor
les
shld
mov
loopne
mov
fsubr
sub
add
pop
add
movs
sbb
or
xchg
dec
in
or
shl
jns
int
(bad)
fld
sub
sbb
into
mov
jb
xchg
lahf
fstp
add
and
push
fist
cmp
jl
add
popf
popf
cmc
mov
cmp
pop
xchg
cmp
stc
or
retf
xor
iret
sub
stos
hlt
cwde
add
inc
mov
fcmovnb
mov
dec
adc
adc
nop
or
push
add
xor
jp
mov
jno
(bad)
popf
aas
or
xor
repz
push
sbb
div
push
mov
sub
pop
inc
adc
and
outs
push
add
add
cmp
adc
add
sbb
pop
jb
imul
lea
or
add
push
push
sbb
cmp
mov
aad
inc
repnz
repnz
cwde
push
push
rcl
sbb
mov
mov
sub
jmp
mov
pop
daa
push
scas
sti
cmp
or
pop
adc
xchg
bound
push
push
add
out
pop
retf
or
gs
cs
push
adc
or
sbb
jge
mov
and
sub
push
scas
jns
mov
je
dec
pop
adc
in
xchg
cld
adc
es
sub
out
shr
add
mov
ret
or
push
call
inc
lds
add
hlt
jne
ret
xchg
int3
xor
test
imul
jle
dec
xchg
cmp
mov
and
stos
sbb
inc
sar
clc
mov
push
or
push
test
xor
push
nop
hlt
in
test
cdq
xor
or
push
pushf
pop
enter
mov
pop
sar
dec
jb
dec
sub
add
add
dec
xchg
sbb
in
fs
movs
cmp
xchg
in
sbb
pop
sbb
add
push
sub
sub
pop
sbb
fs
scas
and
sbb
in
sbb
in
sbb
stos
sar
repnz
xor
shr
cmp
clc
sbb
jmp
inc
dec
inc
sbb
test
pop
dec
scas
mov
movs
(bad)
xor
xor
fldenv
loopne
push
push
cmp
adc
ins
add
cdq
ins
test
imul
sbb
lods
(bad)
jnp
xor
adc
movs
pusha
xor
xchg
stos
and
test
push
pusha
out
clc
push
xlat
lds
sub
dec
or
ss
pop
add
mov
and
push
(bad)
jnp
cmc
pusha
push
push
jns
adc
js
and
xor
outs
sbb
lahf
test
inc
xchg
push
jge
add
mov
and
add
inc
(bad)
xor
cmc
or
sub
sub
mov
add
cmps
mov
pop
and
fistp
sbb
adc
dec
lahf
shr
dec
adc
clc
rcl
nop
fcmovb
jbe
fdivp
jb
sub
(bad)
push
mov
scas
push
push
in
arpl
mov
sbb
pop
aaa
push
mov
push
sbb
sub
cmp
xor
jb
adc
push
rcl
dec
dec
fdivr
jb
inc
loop
add
dec
sar
sahf
adc
pusha
push
seto
add
add
div
icebp
dec
cwde
cli
inc
imul
or
ins
mov
push
cmp
shl
mov
mov
xchg
push
shl
inc
pop
push
lock
jno
mov
pushf
xor
dec
mov
js
mov
rol
or
shl
hlt
mov
or
popa
arpl
add
inc
scas
mov
cmp
and
outs
inc
push
clc
and
xchg
cmp
rol
mov
test
adc
pusha
je
jo
pusha
xor
and
xlat
xor
mov
sbb
push
adc
or
imul
mov
add
add
jmp
mov
cmp
sbb
popf
sbb
mov
mov
adc
mov
adc
(bad)
leave
or
das
mov
enter
mov
gs
jg
mov
add
sub
add
or
dec
dec
pop
aam
inc
add
test
outs
mov
pop
test
pop
push
pop
adc
mov
dec
mov
call
ret
fdiv
punpcklbw
push
adc
mov
add
dec
jg
and
sub
xchg
(bad)
loop
adc
push
mov
mov
adc
int
pop
add
aam
jns
leave
add
cwde
pop
and
jne
lahf
adc
inc
lods
nop
enter
add
cmp
and
js
sbb
mov
(bad)
cmp
nop
and
xor
push
push
xchg
call
add
and
sbb
lods
sub
add
jno
fistp
test
fsubr
pushf
mov
fild
and
int
mov
test
in
fiadd
stc
xchg
ja
ss
mov
fnstenv
xchg
test
push
add
xor
lock
and
cmp
faddp
xchg
xor
push
jne
add
add
enter
push
add
add
dec
adc
add
mov
ret
lahf
stos
pop
or
shl
hlt
pop
les
adc
adc
xor
loop
mov
pop
push
retf
lea
push
shr
stc
sbb
sti
je
or
add
jmp
xor
(bad)
and
cmps
or
sub
jl
lea
adc
(bad)
xlat
add
gs
jo
inc
push
inc
xor
cmp
out
cmp
enter
cmp
sbb
ins
add
sbb
ror
in
enter
mov
jo
(bad)
mov
mov
or
xor
jp
jle
inc
cmp
mov
into
pop
retf
inc
in
add
and
in
add
outs
nop
int3
out
cmp
mov
pusha
push
sub
push
fist
or
mov
sbb
mov
and
fs
sbb
mov
dec
imul
aad
pop
dec
xor
push
sahf
outs
add
push
sub
inc
inc
(bad)
shl
sub
xchg
ret
inc
pusha
add
ficomp
xchg
or
mov
push
aam
pop
pushf
rol
mov
xor
push
ret
(bad)
add
sub
or
pop
sbb
call
je
xor
jmp
lahf
push
cmp
jle
xchg
xchg
fs
fcom
ins
jl
push
mov
sub
or
fisubr
inc
mov
es
inc
xchg
jmp
or
sub
xor
pop
dec
aas
addr16
sub
xchg
add
pusha
adc
cmps
mov
fimul
repz
sub
dec
push
push
cmp
cld
repz
add
add
sbb
cmps
ror
and
addr16
out
add
call
push
dec
cmp
mov
nop
in
jmp
movs
push
adc
ror
je
das
bound
or
mov
inc
jbe
xchg
mov
ds
rcr
xor
cmp
cmps
push
inc
je
cmp
pop
shl
add
pop
ds
adc
jne
cmps
(bad)
out
mov
inc
in
xor
pop
aad
daa
jmp
cmps
adc
les
movs
mov
(bad)
pop
xor
mov
dec
(bad)
xor
cmps
push
cmp
mov
dec
and
sub
or
enter
push
out
dec
jbe
enter
jge
cmps
mov
mov
mov
xor
jb
retf
add
jne
pop
push
inc
add
(bad)
dec
pop
ret
mov
jae
lea
or
or
mov
add
shr
cmps
lods
add
les
xor
clc
out
out
popa
mov
jne
outs
pusha
int3
cld
jb
out
inc
loope
call
xchg
pop
xchg
push
push
sub
jge
adc
or
test
adc
jg
mov
popf
in
push
or
add
push
ins
cmp
sar
mov
sbb
pop
and
iret
push
repnz
pop
mov
dec
or
adc
jp
inc
std
jle
push
loopne
xchg
cld
lea
cmp
pop
lds
movs
loopne
sub
ret
es
and
dec
mov
add
inc
sub
sbb
and
aas
enter
add
fadd
push
push
jb
jo
test
adc
mov
or
rcr
sub
push
dec
mov
lea
push
shl
push
adc
xchg
jl
cdq
movs
dec
jo
sub
movhps
cmp
mov
dec
mov
adc
(bad)
leave
sub
sahf
xlat
and
add
add
mov
je
sub
dec
fidivr
cmp
pop
jb
ror
lea
add
je
or
adc
dec
pop
add
movs
movs
jbe
(bad)
fild
jle
mov
nop
add
and
mov
xchg
and
into
mov
daa
add
or
movs
push
add
ret
(bad)
js
add
cld
sub
gs
rol
imul
fist
push
and
pop
add
aaa
dec
mov
lahf
ds
xchg
mov
inc
(bad)
push
push
xchg
inc
add
push
push
add
ror
or
add
dec
dec
mov
pop
mov
gs
sbb
sub
(bad)
loope
call
add
or
das
or
adc
call
inc
shr
jmp
pop
sbb
xchg
loop
das
inc
retf
cmps
test
fld
mov
pusha
ret
hlt
sbb
out
fadd
mov
pop
sub
in
add
add
aam
jno
inc
sub
pop
sub
and
pop
cmp
in
and
daa
cmp
xor
inc
dec
das
add
fadd
or
sbb
pusha
and
push
dec
ins
loopne
icebp
movs
outs
xchg
dec
nop
add
lock
jnp
adc
imul
sub
fst
fcom
add
shl
ins
mov
inc
aaa
inc
mov
push
push
mov
je
or
test
xchg
outs
pusha
shr
add
adc
jo
push
inc
sub
int3
sub
cmps
sub
cmp
jp
add
add
mov
nop
add
mov
jecxz
scas
call
sahf
push
(bad)
fiadd
push
add
xchg
push
fdiv
ss
push
xchg
nop
mov
jne
stos
lods
jg
fninit
arpl
out
sub
sub
in
push
call
xchg
push
movs
inc
dec
mov
or
clc
sbb
retf
or
mov
inc
xor
xchg
jo
push
ins
loop
enter
sub
xor
mov
je
xchg
test
js
mov
test
retf
gs
into
dec
lods
in
sbb
mov
push
mov
mov
push
lea
pop
add
add
aam
sbb
(bad)
sbb
stos
aam
add
dec
sbb
inc
test
push
retf
(bad)
pop
nop
add
push
or
push
jns
inc
push
add
test
dec
loop
inc
xlat
clc
push
cwde
inc
cmps
or
enter
jae
ror
xchg
xor
daa
inc
cli
inc
dec
hlt
or
icebp
pop
or
cmp
xchg
push
lahf
mov
cmp
pop
inc
push
icebp
xor
aas
mov
shl
dec
mov
or
and
pop
sub
popf
fcomi
fmul
aad
outs
xor
sbb
jle
inc
adc
(bad)
inc
cmp
pop
dec
sub
jmp
scas
add
sub
xchg
xchg
xor
ror
enter
mov
jmp
inc
cmp
(bad)
sub
rol
dec
nop
iret
repz
movs
(bad)
add
or
adc
push
add
daa
pop
rcl
gs
cmp
cld
dec
into
mov
inc
rol
cmp
jge
cmp
test
dec
xor
pop
pusha
fneni(8087
xlat
xchg
ss
dec
in
pusha
mov
ftst
xor
and
sti
(bad)
in
fimul
xchg
jo
sbb
push
in
lahf
jle
in
inc
xlat
fstp
sub
mov
in
jmp
jmp
cmp
or
inc
pusha
(bad)
rcr
call
mov
jnp
cmp
jmp
push
dec
add
or
inc
sar
push
push
xchg
cmp
push
ds
dec
pop
or
lea
add
and
call
mov
rcl
push
and
or
sub
xchg
add
shl
mov
mov
push
imul
adc
adc
loope
mov
sbb
mov
sbb
(bad)
and
add
div
aas
mov
inc
arpl
sbb
(bad)
push
dec
or
stos
inc
pop
dec
push
pop
pop
mov
loopne
fmul
and
dec
xor
and
push
push
xlat
lahf
sub
jns
int3
push
or
dec
cmp
push
pop
xor
in
push
sub
mov
lea
xchg
push
dec
vpunpckhdq
popf
imul
in
retf
push
(bad)
mul
or
sahf
imul
xor
add
xor
dec
push
cmp
lods
lods
jmp
jne
rcr
leave
sti
je
fdiv
ret
mov
cwde
fnsave
fwait
mov
xlat
fsubr
adc
leave
cmp
pop
fwait
addr16
(bad)
retf
enter
push
cmp
lahf
dec
add
push
jo
mov
xor
push
mov
in
cmc
sub
jne
into
pop
lea
mov
cmps
mov
add
dec
sti
mov
push
cmp
and
cmp
cs
cli
jb
dec
ror
scas
pusha
popa
pop
call
push
wbinvd
jecxz
aaa
pop
(bad)
fadd
push
movs
sub
pop
inc
xchg
mov
xlat
pop
or
mov
dec
shl
mov
xor
and
xchg
push
pop
cs
add
repnz
das
push
arpl
fadd
mov
push
or
inc
test
xor
paddq
hlt
or
pop
push
inc
retf
push
int3
mov
or
pop
adc
enter
jne
xor
mov
add
loopne
sahf
mov
or
inc
rcr
repnz
lock
js
imul
sbb
cmp
cli
mov
add
cmp
sti
scas
cmp
rol
pusha
pusha
cli
xchg
faddp
ss
rol
or
in
sub
aam
xchg
push
or
loop
mov
add
jns
pop
jle
push
dec
add
inc
stos
push
(bad)
ror
and
sub
xchg
cmp
jno
jle
js
(bad)
jmp
add
leave
je
adc
les
cmps
mov
outs
lock
and
push
in
lock
jge
call
add
or
and
xchg
ins
or
and
jo
mov
scas
xchg
rol
je
or
xchg
jmp
dec
enter
test
pop
xchg
in
call
ret
push
jp
jecxz
pop
add
dec
(bad)
jl
add
jp
jns
aas
xor
fidivr
iret
push
mov
(bad)
push
pop
adc
xchg
test
ret
push
and
mov
not
js
add
(bad)
dec
jbe
adc
sbb
ja
je
dec
cli
or
sbb
inc
push
bound
dec
and
or
(bad)
xchg
out
pop
add
je
ss
push
test
rcr
add
sbb
dec
invd
outs
jmp
push
js
repnz
mov
js
shr
mov
fbld
dec
pop
inc
aad
and
add
adc
inc
adc
cmp
push
and
sahf
movs
shl
add
adc
inc
xlat
add
adc
adc
add
jl
(bad)
dec
(bad)
stc
add
inc
and
cmp
aam
mov
pop
sbb
rol
xlat
das
pop
enter
mov
and
and
jmp
in
xlat
(bad)
(bad)
imul
xchg
dec
shl
push
popf
popf
je
shl
pushf
adc
xor
dec
hlt
in
(bad)
xor
sub
hlt
(bad)
js
fs
mov
movs
loope
shl
fs
push
cwde
dec
in
hlt
sub
inc
xor
or
mov
aas
or
fnstenv
dec
aas
js
and
inc
les
(bad)
xchg
dec
movs
sub
aam
test
aam
dec
in
sbb
enter
xor
push
dec
gs
aam
std
mul
mov
jns
das
mov
inc
sub
cmp
ret
cmp
nop
in
xor
or
xchg
ds
cs
cmp
int3
mov
mov
ret
lea
jne
push
push
in
fs
inc
clc
inc
pop
xor
adc
shl
sub
ret
call
or
xor
add
mov
test
push
or
or
xchg
clc
clc
in
fwait
in
cdq
daa
in
lock
out
daa
jmp
je
in
mov
dec
enter
leave
or
lds
sub
push
add
lock
repnz
push
sub
adc
(bad)
(bad)
sub
or
movs
dec
das
push
adc
dec
call
fs
xchg
hlt
xchg
mov
rcr
aas
or
sub
inc
push
xor
sub
frstor
je
pop
xchg
in
dec
or
add
shl
xor
fisttp
in
and
and
adc
mov
pop
inc
mov
ret
xlat
adc
pop
mov
shl
(bad)
or
leave
xor
(bad)
daa
add
dec
inc
cld
les
mov
sub
add
xchg
rol
mov
inc
xor
push
dec
rol
xchg
xchg
mov
shr
test
sub
xchg
dec
outs
les
in
adc
ret
mov
shl
jne
xchg
mov
pop
je
test
inc
(bad)
jge
sbb
mov
inc
cmp
adc
jno
fcom
cmp
xchg
xchg
jecxz
add
push
fwait
mov
xor
add
add
std
loopne
mov
popf
rcr
or
mov
xchg
retf
push
nop
add
test
push
into
pushf
mov
into
adc
or
add
stos
cmp
push
fadd
push
mov
in
repz
sbb
inc
and
cmp
cmp
or
adc
xor
and
mov
mov
lods
adc
sub
jb
cmp
je
arpl
mov
stos
out
and
lods
popa
sbb
das
sub
jne
add
cmps
and
or
xchg
or
test
push
pop
adc
mov
and
mov
and
push
mov
inc
sbb
dec
inc
inc
nop
vucomiss
mov
push
inc
mov
pop
cmp
add
dec
inc
inc
sub
arpl
pop
loop
dec
add
adc
mov
xchg
sbb
movs
mov
adc
pop
adc
inc
add
pop
je
lea
sub
sub
pop
inc
cld
xlat
sub
test
push
and
in
inc
push
pop
xchg
add
add
cld
repz
sub
dec
jl
retf
sbb
cmp
inc
ror
outs
nop
pushf
ret
inc
mov
shr
inc
dec
dec
adc
stc
cwde
retf
xchg
or
and
sub
lea
add
mov
pusha
rcl
xchg
jo
imul
add
or
or
and
pop
pusha
push
cmps
mov
je
lahf
sub
cmp
jecxz
xor
retf
cmp
sub
xor
dec
pusha
mov
fwait
in
pusha
in
add
imul
dec
add
or
xchg
stc
xor
pop
enter
call
adc
xchg
icebp
and
jle
out
inc
les
add
pop
mov
les
xor
pop
push
loopne
icebp
sub
add
popa
imul
test
fmul
cld
or
popf
lods
or
ret
jmp
or
sub
dec
scas
retf
mov
ss
dec
add
dec
push
pop
cmp
sbb
jno
dec
retf
sub
mov
mov
or
adc
or
dec
jg
mov
into
lahf
or
mov
add
lods
in
and
jae
inc
adc
sub
jl
push
mov
inc
fdiv
adc
arpl
mov
dec
out
push
push
data16
jecxz
add
stos
outs
add
xor
and
imul
xchg
out
int3
pop
sbb
lods
adc
ins
xor
stos
and
jbe
sti
jnp
fsubr
ret
rol
xchg
jne
movs
rcr
(bad)
into
inc
pusha
fimul
imul
pushf
jl
adc
stc
and
dec
push
ds
dec
jmp
inc
cmc
pop
jmp
cmp
test
fadd
out
cmp
push
nop
daa
add
adc
movs
(bad)
sbb
test
sar
mov
cmp
add
inc
push
mov
dec
inc
mov
fs
pop
ret
add
xor
pop
cmp
adc
fisttp
sbb
mov
sub
dec
loopne
adc
mov
dec
cmps
jg
neg
or
cmp
js
and
and
and
jl
cdq
ret
xchg
mov
sbb
mov
pop
dec
cs
inc
inc
les
imul
push
mov
sub
dec
push
pusha
inc
sbb
enter
fbld
fadd
ret
push
nop
movs
pop
dec
cmp
cwde
sbb
sub
xchg
xor
lods
das
ret
std
mov
popa
fs
xchg
push
dec
push
push
push
or
or
adc
mov
and
xor
sbb
imul
inc
add
add
aaa
xor
sub
je
lea
lahf
dec
push
adc
rcr
popf
cli
pcmpgtb
push
dec
ins
adc
je
mov
dec
sbb
loope
xchg
xor
in
push
aam
pop
lds
dec
push
mov
jle
jg
push
fs
pusha
push
enter
push
js
repnz
push
push
test
and
imul
or
sbb
jl
imul
popa
add
push
(bad)
retf
adc
sbb
ins
ret
sbb
jo
js
test
ja
adc
es
cmp
in
push
dec
push
and
loop
mov
or
pop
in
sbb
je
fwait
inc
jmp
adc
mov
mov
adc
mov
inc
inc
dec
cmp
xor
js
jmp
lock
icebp
cmp
arpl
sbb
or
push
imul
jl
fcom
cmp
clc
adc
je
test
push
and
xchg
inc
xor
inc
sub
pop
push
add
into
sbb
or
pop
into
and
jo
pop
sub
or
pop
pop
adc
test
pop
cmp
int3
hlt
push
push
or
call
cdq
pop
call
je
add
or
jae
(bad)
sub
mov
sub
mov
lods
mov
(bad)
jnp
rcl
sub
not
add
enter
pop
dec
loopne
int3
cmp
and
aas
jge
arpl
push
int3
xor
stc
add
aam
ret
mov
or
push
ins
outs
sbb
push
pop
inc
sbb
mov
dec
nop
pop
rol
push
push
test
pusha
fld
adc
jge
pop
cs
pop
test
add
adc
pop
sub
fisttp
shl
adc
test
js
les
adc
push
dec
ret
fcom
movs
pusha
daa
add
pusha
(bad)
and
(bad)
xchg
cwde
xor
or
jbe
mov
jp
mov
inc
or
or
add
out
cmp
xchg
neg
es
test
mov
ins
lea
sbb
push
jg
add
or
dec
xchg
push
ret
vmread
data16
pusha
inc
push
out
sahf
xor
(bad)
mov
rol
loopne
mov
imul
cmp
js
js
and
lea
pop
add
inc
mov
jmp
jbe
js
into
xchg
xor
and
sbb
test
inc
ror
(bad)
dec
mov
test
fwait
clc
pushf
sbb
inc
mov
jl
mov
ins
or
rcr
jo
mov
mov
sbb
es
mov
cs
push
xor
push
and
ret
push
pop
mov
das
in
cmc
add
sbb
sub
push
sbb
or
dec
adc
mov
paddb
fiadd
xor
daa
or
mov
add
and
call
push
fcomi
or
push
mov
sub
xor
add
gs
add
xchg
xchg
ds
shl
xor
mov
enter
ret
add
adc
jmp
rol
and
push
rcl
push
fld
sub
jmp
fdivr
push
add
and
push
inc
push
add
repnz
lods
add
js
rol
enter
xor
cdq
popf
and
push
cmp
inc
in
nop
cmp
pop
test
mov
xchg
and
jmp
jl
jl
inc
or
add
es
ins
or
sbb
adc
jnp
mov
sbb
push
lea
and
add
push
nop
sub
shl
or
pop
or
movs
push
clc
dec
xchg
pop
aas
cmp
lods
jne
xchg
pop
and
pop
dec
stc
or
xchg
dec
inc
cmp
sub
iret
sub
shl
or
push
adc
cld
shl
test
ds
sub
lea
imul
adc
and
and
mov
xor
inc
xchg
xchg
xor
inc
lods
pop
fcom
aam
movs
adc
sbb
and
mov
dec
xchg
lahf
(bad)
push
call
or
dec
daa
pop
cmp
jae
lods
in
or
lock
std
inc
mov
into
jg
ins
and
mov
cmp
adc
sub
fwait
retf
add
add
push
xchg
rcl
adc
retf
cmp
mov
dec
pop
mov
sub
movs
push
xlat
push
shl
push
je
add
and
in
ja
and
jo
cmc
inc
mov
mov
add
push
push
bound
cmp
sbb
push
push
xor
mov
mov
add
xor
cld
fisttp
push
push
lock
jne
test
add
add
ins
jns
pop
rcl
dec
inc
fstp
stos
push
ds
sbb
push
inc
or
inc
call
sbb
sbb
mov
in
mov
enter
inc
into
jp
rcl
cld
aaa
xor
jl
icebp
push
mov
mov
cli
push
push
data16
sub
add
jbe
adc
push
sbb
xchg
lods
(bad)
pop
inc
mov
js
ss
mov
rcr
sub
or
cld
imul
cdq
idiv
add
add
pusha
mov
xchg
shr
inc
mov
jo
retf
leave
mov
jbe
enter
ja
sbb
(bad)
and
(bad)
add
add
push
or
pop
xchg
fstp
and
add
mov
add
lahf
nop
fwait
xor
jge
mov
add
pop
sar
mov
dec
push
gs
mov
dec
cwde
jg
xchg
pop
cmp
mov
ins
dec
sub
mov
ret
sub
and
sub
outs
sbb
retf
xchg
(bad)
sub
adc
ins
or
int3
into
jmp
fdivr
add
dec
pusha
movs
add
push
bound
lds
lods
enter
mov
jae
arpl
dec
fiadd
dec
ins
or
das
das
add
add
mov
fstp
loopne
inc
test
xor
cmp
mov
mov
push
pop
fcom
leave
mov
repnz
pop
scas
jl
neg
jb
in
mov
cmp
jge
xchg
lock
xchg
and
iret
push
add
dec
pushf
test
xchg
push
push
push
test
ror
cmp
jl
mov
movs
add
mov
ins
cmp
mov
cmp
push
mov
js
mov
add
mov
dec
ror
nop
ja
pop
jne
aas
pcmpgtb
imul
push
inc
mov
out
sub
dec
scas
cmp
mov
stos
nop
cmp
out
cmp
aaa
xchg
and
ret
sub
mov
mov
or
adc
jo
pop
xor
arpl
dec
enter
and
neg
sbb
and
xchg
inc
mov
push
xor
mov
gs
mov
cmp
and
add
aaa
adc
dec
adc
mulps
loope
test
push
mov
pusha
or
or
jb
leave
pop
mov
sub
shr
mov
add
push
add
cmp
cmp
jo
add
jmp
je
xchg
xchg
push
and
push
fist
dec
cmp
stos
repz
mov
lahf
push
xor
add
sar
aam
je
fs
ret
add
loop
inc
add
mov
mov
movs
xchg
lock
fs
test
sbb
adc
inc
bound
sbb
push
jg
stc
push
inc
in
adc
sub
or
xor
push
sub
pusha
ins
or
out
retf
test
or
add
es
inc
dec
or
jns
test
in
test
lahf
int3
mov
push
ror
xchg
push
mov
test
or
dec
lahf
push
fwait
pop
xchg
sub
ds
leave
inc
add
dec
xchg
adc
pushf
mov
xchg
js
mov
adc
pop
fmul
inc
and
mov
mov
cdq
or
jmp
push
inc
xlat
push
lahf
cmp
push
scas
sbb
jb
xchg
shl
sub
mov
and
xor
mov
push
mov
inc
lahf
or
or
lahf
pop
cmp
adc
inc
nop
pushf
dec
and
add
add
xchg
lahf
mov
add
cmp
int
ret
lahf
and
retf
out
sub
adc
adc
int3
ins
sbb
jl
mov
xor
jno
sahf
adc
movs
test
push
sub
sahf
les
or
add
or
or
xchg
cmp
dec
jo
adc
sbb
mov
sub
jno
xchg
ja
push
xchg
data16
popa
adc
dec
and
push
ret
shr
add
add
and
push
push
dec
sbb
ins
inc
adc
pusha
ins
add
push
xor
xchg
mov
sub
ror
dec
or
dec
sti
out
or
jno
enter
push
js
(bad)
adc
pop
cmp
mov
adc
add
ror
mov
dec
cmp
xor
mov
rcr
jmp
idiv
push
call
jo
add
xlat
push
sub
pusha
loopne
cs
pop
dec
sbb
fwait
or
cmps
pop
or
or
cmp
or
gs
sahf
ds
ss
and
mov
fbstp
fisubr
mov
pop
sub
ins
mov
ror
sub
xchg
cmc
js
sbb
fldenv
mov
jnp
int3
stc
inc
arpl
adc
sbb
push
aaa
mov
or
pop
repnz
test
pop
mov
mov
js
nop
jae
stos
in
xor
mov
xchg
out
repnz
les
loopne
mov
pop
push
adc
mov
mov
fisttp
sub
ret
(bad)
pusha
xor
mov
mov
jb
inc
mov
mov
mov
loop
push
mov
cmps
push
js
or
daa
lea
xchg
sahf
mov
push
js
imul
mov
inc
dec
xchg
mov
and
jg
fst
sbb
cmp
or
pop
not
ret
pusha
stos
cmp
loop
rcr
xor
(bad)
xor
outs
mov
int
es
test
inc
dec
xchg
sbb
sbb
xor
(bad)
fistp
cmp
aad
mov
or
adc
std
popf
cld
or
loop
xchg
adc
dec
and
sti
dec
sbb
fcom
lock
mov
pop
adc
pop
jae
rcr
ror
je
fild
add
adc
add
add
nop
pop
add
fisub
sbb
and
fsub
leave
in
sbb
and
pushf
les
je
sbb
leave
dec
movs
dec
pop
loopne
into
sti
mov
or
cmp
iret
pop
cmp
jge
lock
repz
lahf
add
je
jmp
scas
sub
mov
sbb
mov
xchg
pop
mov
add
inc
test
mov
xchg
(bad)
ror
jmp
jae
and
mov
cmp
gs
or
xlat
jle
ficom
rcr
sbb
cmp
sbb
(bad)
sbb
mov
mov
or
stos
jo
push
cmp
xor
pop
push
adc
aam
dec
daa
mov
adc
das
xor
mov
loop
add
and
sub
push
sbb
ret
mov
dec
cmc
inc
sbb
add
add
push
mov
clc
xlat
xchg
cmp
mov
xchg
add
sbb
pop
and
lea
mov
dec
(bad)
dec
mov
inc
js
sbb
ins
cmp
rcr
clc
dec
pop
or
ins
cs
rcr
je
sub
into
sbb
jle
pop
cmp
je
jo
shl
fucomi
jl
aam
dec
mov
test
adc
sar
in
les
fcom
sar
cmp
sbb
mov
cs
jmp
es
out
repnz
dec
pushf
or
add
movs
mov
xor
or
xor
mov
sub
lea
sub
(bad)
mov
add
dec
adc
mov
jmp
push
je
push
or
mov
push
ins
push
cli
and
xor
call
pop
cdq
jp
(bad)
mov
dec
xchg
sub
or
clc
mov
mov
cmp
cmps
add
rcr
cmp
cmp
mov
test
cdq
int
add
inc
pop
jbe
fdiv
push
les
fnstenv
rcr
and
mov
sbb
add
inc
mov
dec
mov
pop
dec
push
jo
enter
int3
push
test
in
jo
mov
(bad)
sub
mov
out
or
mov
cmp
sti
dec
lea
and
popf
push
std
hlt
rcl
inc
mov
or
adc
sbb
lods
aas
lea
test
stc
mov
ret
lahf
push
xchg
or
pop
shl
scas
dec
es
push
sahf
mov
jns
push
and
repnz
inc
adc
test
xchg
retf
sar
cli
inc
jb
pop
mov
or
rcl
test
add
sti
inc
enter
cli
cli
imul
cwde
pop
push
enter
aam
inc
cld
(bad)
cmp
or
cld
push
je
cmp
sbb
adc
fs
mov
or
mov
shl
js
lods
mov
lea
(bad)
les
sub
mov
xor
test
mov
pop
hlt
xchg
retf
fcomp
cld
hlt
popa
shl
and
dec
mov
sub
jmp
(bad)
xor
sub
xor
push
inc
sbb
push
call
fcom
loopne
mov
(bad)
xchg
retf
lock
xchg
push
cs
aam
cld
fadd
mov
in
or
lock
sbb
leave
enter
cmps
sbb
cdq
sbb
and
fcom
sti
sub
add
cli
or
sbb
mov
cld
dec
leave
in
cld
aam
sbb
add
adc
adc
cld
push
inc
or
push
or
xor
lock
push
inc
sub
cmp
mov
push
test
enter
or
xchg
or
rol
mov
push
inc
sahf
test
xchg
cmps
imul
data16
xor
sub
jecxz
scas
and
in
sar
sub
adc
pop
inc
adc
mov
inc
adc
mov
jnp
inc
sbb
mov
mov
pusha
cmp
push
sbb
in
sbb
mov
call
inc
enter
add
push
sub
movs
pop
jbe
ss
ja
dec
test
push
ror
ret
push
push
adc
or
cmp
jae
fcmovb
(bad)
cmp
pushf
adc
adc
(bad)
mov
ret
dec
and
xchg
(bad)
fcom
pop
xchg
push
xchg
out
and
retf
shr
js
mov
inc
retf
cmp
adc
adc
pop
sub
jle
mov
push
push
xchg
mov
adc
inc
into
pop
dec
add
push
adc
push
pop
pop
into
cmp
clc
addr16
dec
pop
enter
mov
les
stos
sahf
mov
mov
adc
ds
xchg
cli
push
push
or
xor
adc
int3
popf
int
xchg
pop
enter
jnp
mov
lock
sub
and
sbb
dec
push
jmp
sub
ret
into
dec
test
add
or
jmp
xchg
adc
retf
cmp
push
xchg
adc
add
add
xchg
adc
sub
scas
fst
inc
adc
in
jle
sbb
push
jns
sbb
sbb
and
cmps
xchg
btc
xchg
adc
sbb
in
sub
mov
rcr
add
xchg
inc
nop
xchg
retf
inc
mov
jae
fs
and
into
movs
popf
xchg
xchg
dec
push
xchg
pop
sar
mov
push
pop
cli
add
push
and
pop
cmp
ins
enter
pop
test
xchg
push
and
adc
jl
js
inc
push
mov
adc
adc
sub
int
mov
mov
add
xchg
pushf
je
mov
xchg
enter
cwde
sar
es
aam
add
add
lods
popa
pusha
rol
icebp
xor
lahf
add
loopne
add
or
adc
mov
add
stos
sar
push
xor
sar
enter
mov
sub
sub
mov
sbb
nop
(bad)
or
xchg
jno
jmp
and
add
ins
sbb
jl
mov
enter
sbb
and
xor
cmp
ret
js
sbb
add
sbb
mov
mov
xchg
and
fcmovnbe
out
mov
cmc
adc
in
imul
mov
add
push
or
sub
xchg
sub
cmc
sbb
adc
mov
dec
sbb
and
int3
shl
pop
xchg
or
mov
add
loope
sub
repnz
dec
cmp
test
mov
mov
mov
cwde
lea
ss
add
or
or
and
mov
fimul
adc
sahf
ins
jb
add
mov
mov
int
pop
mov
xchg
dec
mov
mov
dec
test
cs
ins
nop
mov
sub
add
inc
add
pop
mov
push
adc
xchg
mov
jnp
add
pusha
ds
js
mov
ds
(bad)
sub
scas
push
hlt
mul
pop
add
cmp
push
pusha
sub
jne
cmp
dec
lea
cmps
lods
mov
jae
add
push
fcomp
cld
sub
or
mov
adc
add
or
pop
jp
jl
inc
shl
hlt
inc
xlat
jle
stos
xchg
lds
xchg
xchg
lock
ds
in
mov
sbb
jb
test
lods
pop
inc
in
push
sbb
xor
icebp
les
lods
in
in
push
mov
xchg
mov
and
xor
mov
or
add
or
dec
sub
adc
sub
push
sbb
mov
and
sub
fist
dec
imul
push
mov
xor
sub
retf
test
cli
push
or
and
dec
rol
fs
push
pop
or
xchg
and
or
ret
adc
pop
fistp
or
pop
mov
add
fst
mov
push
outs
arpl
outs
arpl
or
xchg
ins
xor
loope
mov
mov
dec
xor
or
mov
mov
dec
sub
and
pop
push
pusha
mov
ds
adc
pop
inc
xchg
fwait
push
push
xchg
add
and
test
and
sbb
pop
and
jne
ins
xor
add
cmp
call
mov
outs
sbb
gs
sbb
jge
and
add
cmp
mov
add
add
push
fstp
je
shl
jne
or
cld
add
into
mov
dec
fcomi
rol
addr16
retf
push
pop
(bad)
int
xchg
mov
lea
ror
adc
push
push
(bad)
adc
imul
or
lock
dec
and
call
fdiv
(bad)
in
nop
fisttp
rcl
retf
sub
push
xchg
or
jmp
mov
push
jae
sbb
lock
out
add
rcr
inc
std
dec
push
push
in
inc
push
je
fist
pop
adc
retf
or
dec
sbb
inc
test
xor
out
push
fcom
ret
jmp
mov
lods
or
es
fadd
xchg
adc
js
add
push
sbb
ins
push
push
lahf
sub
movs
stc
and
idiv
fwait
push
and
(bad)
shl
push
mov
mov
dec
mov
xchg
loop
adc
jne
inc
ds
shl
push
push
xchg
add
push
and
mov
mov
pop
clc
pop
ficom
xchg
adc
mov
cmp
pop
shr
sub
movs
repnz
pop
push
push
imul
add
cli
test
cmp
test
out
fadd
add
dec
dec
dec
imul
inc
sbb
or
fbstp
sub
inc
les
push
adc
retf
push
inc
rol
ret
add
sbb
jmp
popf
dec
push
jmp
dec
or
jge
push
jmp
mov
movs
pushf
dec
pop
int
ds
inc
add
ret
je
cmps
mov
pop
mov
sub
push
add
xor
xor
dec
dec
ins
add
js
ja
or
or
mov
fs
dec
mov
imul
inc
mov
mov
cmp
ret
and
push
arpl
test
dec
int3
push
jne
jno
sar
push
pusha
add
add
add
mov
fs
mov
xor
fisttp
(bad)
dec
sbb
enter
aam
inc
push
or
ret
dec
std
scas
repz
push
and
adc
mov
inc
push
push
sbb
or
int
or
fcmovb
and
mov
imul
inc
loope
fnstcw
adc
mov
push
xchg
cmp
or
sbb
and
add
add
sbb
cdq
js
dec
hlt
push
and
out
xor
dec
pop
sbb
cmp
add
sahf
ret
cwde
fnstcw
(bad)
not
pop
pop
add
or
ret
lock
dec
int
(bad)
js
inc
mov
dec
push
adc
retf
ror
sbb
bound
test
arpl
and
or
push
add
retf
inc
or
pop
adc
ins
cmp
mov
adc
add
or
push
dec
lock
mov
test
ins
sub
dec
cmc
pusha
retf
push
or
lods
mov
or
or
(bad)
or
(bad)
and
and
int
retf
les
mov
xchg
and
xchg
inc
sub
or
jmp
push
lods
adc
or
adc
int3
push
adc
or
femms
adc
sbb
push
xor
ror
pusha
mov
push
mov
sbb
mov
pop
fadd
adc
xchg
lea
sub
js
adc
adc
xchg
mov
dec
xor
sbb
sub
daa
imul
adc
and
and
xor
and
sbb
(bad)
adc
lock
xchg
xchg
ret
stos
dec
and
xor
xlat
rcl
add
adc
loop
mov
sbb
fwait
aas
es
data16
jle
in
add
inc
jb
lock
call
lock
retf
xor
call
xchg
in
lock
xor
add
nop
push
in
sbb
gs
xor
hlt
inc
fsubr
dec
movs
xor
dec
xchg
xor
call
inc
and
inc
inc
test
enter
in
in
in
retf
and
and
loopne
push
sbb
stos
add
and
fwait
inc
test
fs
daa
dec
cs
sbb
loopne
xchg
dec
dec
gs
loopne
sbb
xchg
push
pop
mov
(bad)
call
add
sar
call
cmps
push
or
mov
cmp
shl
sbb
dec
cld
aam
pop
mov
or
push
aas
idiv
push
add
call
cmp
dec
adc
or
jnp
push
mov
add
xor
pop
and
popf
mov
mov
movs
movs
iret
adc
and
and
or
mov
daa
jmp
inc
mov
adc
test
push
and
xchg
cmp
inc
adc
and
xor
inc
mov
test
mov
push
fimul
mov
dec
inc
arpl
fs
xor
test
xor
cld
push
jl
dec
call
dec
js
dec
mov
ins
xor
fdiv
adc
or
hlt
or
arpl
les
sub
xor
mov
xchg
or
(bad)
stos
call
xchg
fs
jmp
fimul
pop
mov
mov
jno
loopne
push
les
add
add
ret
fimul
int
push
dec
and
cmp
xor
je
cdq
pop
xor
xchg
icebp
or
call
dec
add
arpl
push
cmp
popa
add
pop
mov
ins
movs
rol
mov
adc
mov
jne
cmp
dec
cmp
xor
sub
movs
jns
and
cmp
push
cmp
mov
dec
add
fld
xor
dec
xchg
pop
mov
mov
cs
gs
push
add
std
lock
fimul
ret
inc
and
mov
cmp
dec
mov
rol
dec
mov
dec
mov
push
xor
xchg
and
cmp
inc
movs
jbe
push
sbb
imul
test
pusha
das
add
jmp
xor
cld
aam
pop
xor
push
es
inc
cwde
es
inc
cwde
scas
jmp
or
mov
lds
pusha
inc
inc
dec
inc
sub
inc
xchg
adc
ss
push
repnz
and
sub
test
std
jg
fadd
sbb
sub
rol
cld
mov
or
xchg
push
inc
fcom
xchg
sub
fistp
or
in
nop
std
add
fild
push
loopne
test
mov
mov
dec
mov
inc
mov
lods
xor
shl
and
mov
jmp
hlt
mov
ss
or
ret
(bad)
sub
rol
mov
shl
lahf
test
dec
push
and
sub
mov
dec
add
push
js
adc
in
dec
pop
lea
std
cmp
inc
shr
mov
xchg
je
xor
addr16
pop
lea
sbb
cmp
or
fmul
test
les
enter
cmp
or
push
cld
inc
adc
call
jmp
test
loope
iret
mov
xchg
arpl
std
not
movs
add
retf
add
inc
add
or
mov
push
jbe
rcl
and
and
cmp
dec
mov
add
adc
adc
dec
stc
lods
cmp
(bad)
cmp
pop
fs
mov
sub
dec
mov
test
movs
int
repnz
xchg
cmp
sub
lods
dec
lock
sahf
popa
or
add
int3
ss
into
inc
dec
and
dec
cmc
rcl
cmc
sub
mov
add
mov
popa
dec
xchg
jmp
pop
jae
pop
push
sar
add
adc
fsubr
fwait
sbb
dec
jb
cmp
sbb
int
mov
jmp
and
in
xor
and
fdivr
xchg
stc
loop
leave
ins
dec
in
sbb
ret
mov
sub
sbb
cmps
sub
pop
cld
mov
sbb
aaa
and
inc
ins
xchg
add
stc
add
inc
sub
mov
adc
mov
pop
adc
rol
pop
pop
clc
jl
pop
pop
fisubr
xchg
cld
loopne
pop
inc
add
ror
js
and
stos
sub
cdq
sub
xchg
xchg
je
dec
dec
xchg
adc
inc
dec
push
sbb
jns
push
add
fcom
shl
pop
rcl
mov
fcom
mov
shl
sbb
mov
pop
(bad)
imul
je
push
je
repnz
retf
cld
sbb
mov
lea
or
nop
inc
or
adc
stc
call
add
popf
lea
lea
fwait
xor
dec
ror
mov
sub
add
mov
add
adc
adc
mov
ret
mov
mov
and
rcr
and
or
pop
pusha
and
cld
ret
xor
inc
das
add
std
or
adc
inc
shr
inc
add
hlt
cld
xor
pusha
push
sub
std
mov
fwait
or
cmp
arpl
and
mov
fwait
popa
mov
data16
and
cli
and
sbb
cld
sbb
std
test
push
cmp
lahf
into
push
adc
cmp
and
cdq
nop
dec
mov
add
mov
cmp
stos
push
push
repz
xchg
scas
xchg
xchg
ror
xchg
mov
jns
pop
ret
xchg
popf
mov
stos
push
mov
idiv
inc
ret
pop
add
enter
xchg
cs
sub
or
pusha
or
das
xchg
pop
scas
iret
pop
pop
jg
sub
xlat
mov
cmc
inc
jl
mov
(bad)
les
xor
leave
clc
mov
cld
adc
inc
jno
retf
push
inc
sub
pushf
cld
and
pop
test
cmps
jae
adc
or
data16
call
or
inc
mov
(bad)
popa
cmp
mov
pop
xchg
sbb
mov
dec
pop
adc
pop
add
loopne
mov
cmps
test
cwde
dec
adc
dec
dec
enter
cmp
jl
add
push
add
jl
out
mov
push
(bad)
or
iret
push
in
add
pop
pop
cmps
sub
ins
push
fstp
sbb
mov
lahf
push
mov
sub
adc
lds
ret
aad
sbb
imul
xchg
cmp
inc
push
pop
test
loop
mov
fs
add
lock
inc
jb
adc
je
out
cmp
or
retf
adc
lea
pop
ins
inc
cmps
test
dec
fs
scas
sbb
dec
sahf
retf
mov
adc
rol
sbb
(bad)
add
push
leave
cmp
rcl
sbb
inc
outs
pop
stc
or
push
xchg
je
or
add
aad
daa
(bad)
adc
add
popa
popa
stos
arpl
jl
sbb
mov
xchg
sub
lea
je
test
mov
xchg
adc
inc
scas
jb
sti
xchg
and
ret
shr
cmc
xor
jle
lea
mov
inc
push
xchg
pop
cs
and
nop
ror
xchg
pop
enter
add
ds
adc
jmp
push
add
xchg
je
ret
mov
jae
mov
add
jne
test
mov
xor
xor
xor
adc
jmp
dec
js
dec
xor
ins
inc
lea
loop
mov
adc
sbb
or
das
jae
dec
jae
mov
pop
adc
(bad)
xor
push
mov
je
push
pop
and
mov
jae
test
mov
add
inc
out
test
and
push
sbb
mov
or
stos
arpl
push
jp
lea
jb
push
ins
push
push
inc
mov
jns
mov
xor
movntps
add
sbb
xor
cmp
bound
or
adc
imul
xor
mov
js
outs
mov
push
mov
(bad)
rcl
sub
add
mov
cmp
xor
lahf
xchg
xor
or
adc
in
mov
adc
sbb
push
mov
and
in
ins
and
add
xchg
movs
dec
jmp
jmp
je
pop
xchg
xor
les
test
dec
mov
inc
sar
mov
push
fisubr
cwde
mov
add
jle
scas
or
xor
pop
dec
mov
pcmpeqw
js
jne
pop
je
mov
in
cmp
mov
fmul
mov
mov
ins
lea
cmp
sbb
xchg
cmp
call
inc
pop
sub
adc
addr16
ins
repnz
adc
adc
jl
dec
xor
add
in
sbb
pop
popf
es
in
sub
rcl
shl
(bad)
sub
lea
dec
out
ret
push
out
push
js
and
mov
cmp
enter
or
pop
std
shr
pop
cmp
ja
popa
ins
and
ins
mov
xor
or
xor
lea
or
push
pop
sbb
and
cmp
push
and
arpl
or
mov
adc
xchg
sub
cdq
pop
test
movs
(bad)
push
mov
and
scas
inc
mov
and
sbb
je
add
inc
in
xor
pop
xor
gs
mov
push
xchg
xchg
cmp
xchg
pop
mov
cmp
push
adc
ja
test
sbb
mov
xor
sahf
in
test
dec
push
mov
push
add
xor
sub
push
inc
retf
adc
mov
jmp
mov
ja
imul
dec
push
sbb
popf
aad
or
loopne
jl
daa
add
adc
dec
mov
aaa
sub
cmps
xchg
sub
lods
jae
(bad)
out
loopne
mov
lahf
or
push
xor
add
mov
mov
pop
mov
movs
lock
aas
jge
test
cmps
(bad)
aas
add
out
movs
sbb
add
mov
push
fild
pop
pop
rcr
mov
addr16
jge
add
and
pop
mov
sbb
add
jg
adc
xchg
aam
push
pushf
xchg
dec
sub
or
mov
add
test
ret
mov
mov
and
lods
mov
and
clc
sbb
mov
sbb
dec
sbb
adc
or
and
cmp
test
test
or
lods
xor
sub
xchg
icebp
popa
pop
pop
cmp
mov
fdiv
adc
aas
rol
cs
jb
inc
or
mov
inc
scas
push
rcr
cmp
xor
adc
push
add
(bad)
out
lods
test
xchg
out
test
mov
rcr
jl
cmps
xor
and
mov
mov
mov
or
or
sub
xchg
sbb
or
pusha
sub
movs
fdiv
mov
mov
or
cwde
popf
test
mov
out
lea
xchg
jmp
push
sub
out
mov
nop
mov
add
mov
push
mov
shld
inc
sbb
je
cmp
cmp
rcr
std
xor
add
cs
pop
and
fs
or
pop
xchg
loop
dec
enter
mov
test
cmp
cdq
mov
jb
adc
add
std
movs
test
fs
push
popf
iret
xchg
cwde
shr
adc
lock
pop
out
or
pop
dec
inc
bound
fild
add
push
jge
mov
lods
and
xor
popa
sbb
mov
cdq
mov
add
cmp
adc
ret
xchg
mov
pop
(bad)
call
shl
ds
fist
sub
imul
and
lea
inc
jmp
add
and
jbe
jg
nop
sbb
dec
fild
test
mov
add
cmp
mov
sbb
jo
call
mov
mov
jb
sbb
shl
dec
sub
jl
pop
inc
inc
mov
xchg
mov
mov
xor
sub
shr
cmp
inc
es
or
pushf
or
mov
fistp
xchg
iret
repz
mov
cs
or
xchg
mov
mov
or
pop
iret
or
adc
pop
and
aaa
mov
(bad)
dec
sbb
fld
mov
and
popa
ins
into
or
popf
add
jmp
lock
nop
push
jp
adc
test
sbb
sub
cmp
and
mov
or
add
xchg
jmp
leave
mov
mul
dec
retf
mov
ja
mov
mov
inc
and
mov
dec
jp
pusha
inc
adc
push
enter
cmps
add
fidivr
dec
or
lock
sub
cld
adc
sbb
xor
call
mov
lods
sbb
dec
clc
popa
xchg
and
outs
mov
add
and
adc
add
mov
out
dec
and
dec
adc
push
add
es
int
mov
loop
frstor
cld
rcl
and
shl
out
sub
mov
sbb
lods
cmps
int3
sub
push
mov
dec
and
jle
inc
xchg
call
cmp
mov
ja
lods
or
repz
cmps
repz
add
mov
and
fiadd
out
mov
mov
clc
ins
fbstp
and
dec
and
imul
jp
pop
xor
je
movs
jp
xchg
cmc
push
loopne
adc
jne
inc
lahf
add
pop
add
sbb
jne
xchg
mov
xor
or
xchg
bound
cli
lea
or
stos
add
xchg
ror
(bad)
pusha
dec
imul
dec
ror
pop
stc
pop
pop
dec
pop
dec
or
pushf
data16
mov
mov
call
xchg
inc
lea
push
xchg
and
test
xor
fidivr
or
push
adc
sbb
fisub
inc
adc
push
jns
add
sub
adc
mov
or
cmp
in
add
fld
sbb
or
xchg
add
xor
mov
xchg
jb
(bad)
xchg
sbb
popf
pushf
sub
xlat
xchg
sbb
call
clc
pusha
pop
cmp
dec
fmul
mov
inc
xor
mov
fiadd
imul
adc
je
mov
int3
sub
mov
sub
pop
shr
popa
add
inc
push
dec
adc
and
jmp
sbb
push
xor
rcl
mov
imul
mov
mov
xor
xor
enter
pop
dec
jne
aas
cmp
mov
xchg
ja
or
mov
adc
pusha
gs
xor
xchg
or
ret
fldcw
cwde
inc
sub
mov
push
xchg
rol
adc
stc
hlt
pop
lock
push
jo
or
pop
push
and
sbb
je
pop
add
call
adc
or
jno
mov
mov
mov
xchg
push
inc
ds
test
mov
jb
pop
fstp
out
mov
ja
adc
and
mov
adc
push
adc
xchg
inc
mov
sub
rcl
jmp
mov
and
inc
mov
in
sub
and
dec
mov
cs
jl
push
call
mov
mov
sub
push
adc
sub
out
or
dec
push
push
shl
ret
xor
(bad)
je
lods
or
call
iret
xor
xchg
test
fcomp
imul
add
adc
mov
jmp
xchg
add
movs
or
xor
popa
repnz
in
mov
push
es
dec
inc
int
jmp
call
ds
addr16
xchg
or
cmp
or
mov
lahf
cwde
pop
xchg
inc
pop
sbb
inc
lea
pop
js
jge
mov
mov
mov
shl
sub
cmp
sar
setle
push
xchg
xor
push
push
push
add
pop
pop
mov
mov
nop
shr
dec
test
and
pop
enter
jbe
ret
popa
fsub
bound
data16
les
lea
aam
or
out
push
push
or
or
adc
jns
inc
out
addr16
sbb
inc
in
(bad)
int
nop
sub
xor
xor
mov
fdiv
sbb
ds
dec
enter
sbb
or
rdtsc
lods
test
xor
inc
jne
pop
add
lea
or
je
or
inc
icebp
iret
je
xor
push
cmp
fadd
adc
dec
cwde
inc
stos
imul
outs
cwde
cmp
push
push
add
cmp
xchg
add
xchg
xchg
sbb
push
rcr
fcom
xor
mov
int3
pushf
pushf
inc
jbe
mov
push
adc
dec
shr
adc
pop
or
sub
sbb
nop
test
aas
gs
add
pop
out
or
ror
or
popa
xor
or
fsubr
lahf
cmp
fisttp
xchg
and
push
pop
movs
jnp
les
adc
adc
adc
ror
push
or
jns
xchg
jne
cmp
add
mov
fcmovnb
jbe
adc
dec
lock
or
pop
xchg
je
sbb
and
leave
add
push
sub
inc
adc
retf
(bad)
pusha
inc
add
push
and
test
sbb
(bad)
shl
inc
mov
pusha
mov
push
push
xor
nop
mov
call
test
cli
clc
arpl
push
jmp
test
push
pop
push
(bad)
pop
inc
sub
loopne
(bad)
retf
nop
shl
mov
add
pop
xchg
dec
js
mov
push
je
push
les
pop
mov
fcom
add
cmp
bound
(bad)
test
or
sets
into
dec
add
mov
pop
mov
push
adc
pop
pop
js
pop
js
test
outs
out
movs
or
das
ss
jo
(bad)
mov
test
or
sub
lahf
mov
push
push
push
nop
pop
push
mov
je
jmp
adc
dec
dec
mov
push
adc
xchg
inc
sbb
mov
and
sbb
xchg
mov
aas
je
push
fmul
mov
mov
jge
mov
ins
adc
mov
sbb
dec
or
clc
jge
(bad)
push
leave
add
jno
mov
(bad)
je
mov
pop
push
adc
cmc
pusha
stos
int3
push
dec
or
arpl
add
aas
cmovns
in
mov
push
or
and
mov
add
push
cmp
cmps
jbe
mov
jecxz
add
pop
inc
cld
call
or
pop
leave
xor
or
and
ret
pop
or
xchg
sbb
pop
pop
call
loopne
mov
fcom
ss
add
xor
mov
and
jge
repnz
pop
and
cmp
jmp
(bad)
jmp
or
sbb
ret
popa
xor
dec
dec
sub
push
jmp
adc
lea
movs
add
inc
popf
adc
das
jle
add
lea
add
add
add
sahf
sub
fwait
je
xchg
lds
adc
or
movs
add
push
sbb
rol
out
inc
xchg
adc
xor
add
in
fcomp
and
hlt
pop
xor
or
add
fadd
mov
inc
call
cmp
or
popa
adc
pop
dec
icebp
jo
push
xchg
cmp
bound
sbb
lea
rcr
call
cli
mov
out
pop
pop
mov
add
xor
inc
jg
in
cmp
and
cs
or
xchg
je
xchg
pop
sbb
adc
xchg
xchg
test
xor
pusha
stc
int
bound
dec
pop
or
retf
mov
aam
push
leave
in
mov
add
les
mov
add
lock
jne
lock
mov
mov
lds
xchg
inc
test
inc
pop
cmps
inc
test
xor
call
mov
mov
mov
js
fdivr
into
psubusb
rol
call
push
or
pop
inc
add
loope
xchg
add
cdq
in
push
popf
add
aas
mov
cmps
fidiv
xchg
push
pop
push
xor
mov
mov
bound
sbb
rol
sbb
add
out
pop
xchg
icebp
mov
add
sub
jno
inc
or
fwait
lahf
int
jo
jo
test
or
jp
xchg
adc
xchg
stos
aam
dec
push
cmp
add
inc
push
push
push
into
adc
(bad)
dec
rol
lock
fs
add
sub
bound
cmovb
dec
loopne
pop
push
push
in
jle
shl
or
or
push
sub
push
push
pop
push
cmps
mov
or
add
gs
push
adc
add
pop
adc
add
jae
xchg
test
add
pop
push
nop
jle
push
imul
inc
xchg
or
add
mov
popf
sub
sub
dec
add
sbb
dec
sub
push
das
and
aad
adc
dec
dec
fiadd
jo
or
dec
jmp
add
mov
xor
jno
jmp
xor
mov
push
test
fldenv
imul
call
pusha
daa
cld
je
add
add
in
mov
or
ud2
push
cmp
xlat
aas
leave
repz
or
call
(bad)
fmul
push
pop
cmpunordps
push
sbb
(bad)
call
jmp
jne
inc
loop
inc
push
je
add
sbb
int
add
call
retf
add
nop
add
mov
xchg
jl
push
out
inc
ins
inc
dec
enter
xor
rcl
sub
dec
add
inc
push
xor
lock
xchg
iret
adc
dec
enter
adc
mov
mov
int3
sub
or
ror
out
push
mov
cs
sahf
aam
aam
stos
sbb
dec
mov
enter
cmps
push
mov
pop
and
dec
outs
mov
mov
or
js
push
sbb
cld
add
adc
sub
xchg
nop
xor
push
enter
add
int
cli
(bad)
sar
popf
popf
and
add
setbe
and
adc
in
mov
xor
dec
push
fcomp
or
iret
inc
sub
and
and
jg
mov
das
data16
lods
sub
or
fs
mov
jo
cmp
sub
add
enter
loopne
push
pop
jb
jbe
pop
xor
add
mov
ret
movs
jne
cmp
imul
lea
aaa
int3
pop
or
cdq
inc
mov
jl
adc
mov
ins
rol
mov
mov
push
ret
and
jnp
xchg
aaa
in
cli
daa
inc
dec
adc
mov
sub
pop
shl
push
add
movs
mov
inc
jl
int
cli
ins
das
sub
bound
push
jne
xchg
mov
imul
adc
sub
adc
icebp
xchg
lea
les
sub
sbb
sbb
not
xor
xchg
and
iret
and
and
add
call
jo
movs
sbb
jmp
and
push
aas
and
and
int3
ds
jnp
and
int3
push
inc
adc
imul
pop
add
rol
or
lods
cmp
shl
dec
jb
cmc
enter
rcl
inc
rcl
rol
jle
imul
cmp
jne
cmp
xchg
rcl
mov
mov
aaa
inc
fadd
sti
push
jp
or
pop
dec
push
mov
cmp
(bad)
in
push
scas
retf
mov
add
jge
sbb
popf
xchg
or
pop
inc
ds
dec
lds
jmp
dec
movs
sbb
sbb
inc
jns
inc
arpl
sub
add
push
rcl
pop
add
mov
sub
test
movs
nop
ja
leave
nop
dec
mov
add
inc
inc
test
test
loopne
fst
jl
mov
mov
test
into
push
xor
lea
add
mov
push
dec
mov
jnp
les
ins
leave
imul
test
(bad)
cmps
or
gs
mov
fimul
sbb
jne
push
and
jne
(bad)
fst
add
add
nop
retf
add
push
mov
pop
and
shl
loope
popf
enter
inc
lods
wbinvd
shr
in
stos
add
call
icebp
xor
bnd
or
adc
les
retf
jne
pop
push
xchg
ins
scas
into
in
fnstenv
fidivr
push
inc
xor
sbb
add
js
adc
fistp
mov
pop
mov
cmp
cmp
mov
iret
pop
enter
xor
imul
and
and
mov
xchg
add
dec
and
test
add
mov
movs
add
lock
test
inc
adc
xchg
and
dec
pop
sbb
pusha
push
mov
add
dec
rcr
jno
add
(bad)
(bad)
test
add
ds
retf
add
inc
mov
ret
lea
popa
inc
es
hlt
add
daa
sub
adc
inc
std
xchg
mov
jno
xchg
mov
lock
hlt
xor
popf
call
inc
(bad)
es
or
ss
pop
outs
cdq
sbb
ret
mov
hlt
sub
mov
dec
jmp
outs
popa
push
mov
shl
les
jecxz
adc
xchg
cmc
fsub
push
and
dec
add
fld
or
mov
mov
and
inc
add
adc
sbb
nop
addr16
mov
or
add
xchg
mov
and
ins
mov
cmp
jl
add
aaa
mov
test
push
pusha
xchg
mov
jle
push
ins
aam
(bad)
mov
mov
mov
push
or
gs
aad
add
or
sub
shr
test
pop
and
dec
dec
push
mov
xchg
mov
mov
fadd
mov
push
push
js
pop
mov
pop
mov
xchg
push
adc
mov
mov
sub
push
shl
imul
xchg
add
push
adc
fisubr
add
inc
sub
adc
mov
mov
jbe
lock
shr
adc
and
adc
ret
jno
xor
sub
dec
push
xor
pop
mov
sub
and
movs
test
lods
retf
push
mov
sub
ss
pusha
sub
icebp
add
sbb
rcl
and
in
test
popa
pop
pop
(bad)
and
sbb
dec
mov
inc
sub
mov
mov
add
and
adc
movs
push
inc
ins
mov
inc
repnz
push
add
shr
add
mov
into
and
jp
add
add
inc
(bad)
loopne
xor
sub
push
mov
nop
pop
jp
in
(bad)
jle
adc
add
cmp
sub
xor
xchg
xchg
add
hlt
dec
jns
adc
add
test
ins
sub
add
mov
pop
add
das
jns
or
iret
dec
mov
xor
add
imul
add
adc
and
mov
sbb
push
mov
jne
test
sub
clc
sub
pop
movs
or
sbb
add
xchg
outs
pop
(bad)
mov
aas
xor
inc
mov
fld
popf
ss
mov
mov
pop
fsubr
loopne
je
test
jge
mov
scas
stos
rcr
mov
cmc
ss
push
(bad)
int3
(bad)
lods
es
adc
mov
inc
and
push
add
mov
or
nop
aas
lds
(bad)
sbb
or
fistp
retf
jne
sub
push
out
xor
push
mov
jbe
cmp
int3
mov
add
sbb
cmp
inc
fsubr
dec
in
(bad)
xor
sub
or
rcr
in
enter
push
fistp
scas
add
sub
enter
pop
mov
in
lods
inc
leave
je
mov
mov
jge
mov
add
or
adc
sub
int3
cmp
sbb
lods
shl
sub
inc
in
icebp
nop
xchg
pushf
into
sub
jl
add
pop
shl
add
dec
pop
inc
lock
retf
adc
inc
jecxz
jg
ins
lods
sbb
cmp
jbe
call
add
aam
test
cmp
adc
sbb
cwde
or
dec
bound
imul
fnstenv
add
out
cmp
and
ins
dec
dec
mov
mov
sbb
add
mov
data16
nop
xor
mov
nop
out
fnstsw
aam
add
dec
jb
adc
outs
inc
and
inc
ret
push
push
pop
mov
push
pop
push
mov
jge
jne
pop
shr
outs
push
pop
lahf
call
fs
cmp
jle
jb
cmps
push
fisubr
fld
mov
ret
sbb
mov
or
dec
inc
outs
add
or
sbb
adc
mov
sbb
rol
add
mov
add
inc
in
jo
mov
cmp
xor
ret
dec
jns
js
imul
jb
xchg
dec
and
mov
xchg
mov
shl
lea
xor
lds
sbb
lea
mov
mov
test
movs
push
jecxz
ins
mov
inc
fiadd
scas
sub
jne
pushf
fs
int3
(bad)
cmps
dec
mov
dec
movlps
test
and
cli
xlat
sbb
push
sbb
dec
(bad)
sub
shrd
test
int
std
or
dec
(bad)
out
test
mov
hlt
push
add
push
mov
sbb
jne
push
mov
int3
inc
lea
sahf
mov
cmp
lods
loop
jnp
jnp
jg
lock
mov
imul
mov
pop
rep
sub
shl
mov
daa
nop
pop
cmp
xor
dec
and
mov
dec
sub
aad
push
ret
jg
test
enter
sub
mov
stos
cmp
je
rcl
and
and
(bad)
stc
and
xchg
fiadd
test
pop
imul
jne
add
xchg
mov
push
(bad)
rcr
fcom
adc
dec
fisttp
test
sub
xor
mov
sbb
sub
imul
dec
les
push
xor
and
pop
repnz
mov
aam
add
retf
int3
int3
or
push
mov
dec
and
and
lods
retf
and
aas
xor
adc
adc
cdq
sar
ret
mov
add
leave
jecxz
lods
imul
add
fcom
jbe
add
cli
inc
stos
adc
cmp
adc
jno
psrld
xchg
sbb
pop
cwde
cli
outs
jne
xchg
pusha
or
adc
inc
pop
inc
adc
stos
xor
(bad)
(bad)
(bad)
aas
sysenter
xchg
pop
fild
mov
enter
and
xor
and
push
ret
or
loopne
adc
stos
pop
dec
xor
push
pop
dec
ret
inc
js
lds
cs
aaa
jne
call
mov
mov
into
sbb
push
pusha
or
bound
cmp
shr
or
sbb
push
mov
xor
sub
jno
mov
or
and
inc
add
nop
jo
dec
add
adc
jns
xlat
push
fistp
out
in
cmps
or
mov
pop
mov
mov
inc
inc
in
push
cmp
inc
jg
pop
fwait
aam
add
cmp
or
mov
dec
ret
mov
and
sbb
jo
pop
push
mov
rcl
loopne
imul
adc
mov
cli
cli
cmp
cli
or
clc
inc
push
push
rcl
and
push
enter
sbb
adc
adc
inc
imul
inc
and
pop
or
mov
inc
inc
in
inc
push
ret
and
sbb
mov
mov
ins
xor
es
sub
push
or
or
sbb
mov
hlt
push
sub
inc
dec
lods
add
adc
push
sbb
add
inc
xchg
out
jg
mov
jg
and
inc
and
leave
or
xchg
in
scas
adc
xor
add
sub
es
std
adc
nop
lea
nop
and
push
and
push
retf
and
and
enter
push
xor
and
and
dec
and
push
and
and
xchg
and
inc
inc
dec
outs
push
leave
ins
and
pop
inc
and
arpl
jnp
mov
inc
and
pop
and
popf
dec
dec
enter
retf
adc
cmp
xchg
or
and
and
fidiv
and
ins
(bad)
xchg
loopne
imul
fmulp
push
rcl
jg
adc
pop
xor
jg
fldenv
nop
out
stos
or
sbb
cwde
inc
xchg
ja
mov
sub
add
adc
je
ret
pop
mov
frstor
fwait
pop
add
and
and
cmps
and
dec
lahf
and
jb
and
dec
or
xchg
call
xchg
or
(bad)
jge
adc
add
sub
cmp
pop
test
les
sahf
test
add
sbb
or
(bad)
and
xchg
int3
add
cld
add
push
inc
push
xor
test
sbb
les
aad
pop
mov
push
mov
and
inc
jne
xchg
mov
cmp
jb
loop
sub
imul
loope
pop
test
imul
push
or
stos
cmp
lods
and
jmp
inc
add
dec
cdq
adc
dec
jmp
aad
push
enter
gs
sbb
xor
test
sbb
xchg
pop
push
push
aad
xor
outs
mov
je
sahf
fwait
movs
outs
xor
and
int3
ror
dec
loope
leave
add
and
scas
and
jb
ret
inc
iret
xor
push
rcr
dec
test
and
rcl
add
add
rcr
and
xor
xchg
mov
xor
das
and
sub
imul
aad
push
push
or
push
(bad)
enter
lahf
rol
pusha
jb
jge
movs
push
je
or
push
push
je
or
or
push
sbb
push
adc
cmp
inc
add
js
and
fs
and
inc
cmps
and
push
es
push
shr
and
pop
and
cmp
xchg
and
adc
adc
dec
adc
and
push
inc
je
cwde
adc
push
rcl
jb
in
mov
mov
xor
lods
inc
push
add
dec
push
and
in
and
in
and
bound
and
addr16
mov
sub
and
call
add
xor
inc
enter
pop
and
test
push
sub
add
cwde
ror
lea
test
push
sahf
add
scas
mov
cmp
add
push
xchg
mov
pop
add
ror
int3
int3
or
add
xchg
cmp
and
add
popa
cld
add
cmp
mov
pop
test
ror
sar
icebp
rcl
xchg
or
ins
cmp
inc
les
ror
lea
mov
adc
xchg
loopne
add
shr
mov
out
test
cmp
mov
inc
scas
xchg
retf
jge
xchg
add
(bad)
or
push
(bad)
push
adc
aas
push
xchg
loopne
push
sbb
popa
add
rol
into
adc
push
sub
into
cwde
and
pop
(bad)
mov
mov
xchg
inc
in
adc
sahf
ja
or
loopne
mov
pop
in
test
jl
hlt
ins
pop
clc
rcr
inc
adc
retf
cmps
ins
push
push
js
call
add
adc
cmp
pop
arpl
aas
inc
ret
pop
ret
ins
and
sbb
xchg
bound
jae
imul
mov
mov
mov
or
lahf
mov
mov
xchg
inc
jb
out
or
pop
dec
repz
add
adc
dec
adc
add
pop
lahf
add
dec
sbb
call
and
dec
adc
dec
test
push
fimul
and
add
and
inc
loope
sbb
lea
leave
fwait
rcr
push
push
stos
sub
jmp
lea
js
popf
or
fidivr
or
sbb
and
sub
jo
dec
pop
lods
mov
(bad)
push
test
(bad)
sbb
sbb
mov
popa
push
push
or
lods
test
xchg
sbb
inc
dec
and
inc
cmps
xor
mov
push
xor
add
movs
add
test
loopne
mov
dec
fcomi
and
retf
inc
loope
(bad)
add
pusha
mov
dec
ret
es
stos
add
mov
xor
mov
pop
add
push
inc
shl
pop
sub
push
inc
inc
jle
and
xchg
(bad)
dec
jge
loop
imul
and
dec
mov
aas
or
mov
adc
fld
push
test
lods
or
mov
loop
dec
dec
jns
pop
and
adc
adc
lds
daa
jecxz
adc
cmp
dec
add
dec
fild
push
dec
add
cmovo
mov
or
in
pop
stos
adc
fld
xor
mov
jp
sbb
inc
or
imul
movs
or
es
xor
jmp
inc
adc
jmp
pop
push
out
(bad)
mov
pop
dec
mov
inc
fcmovnb
inc
enter
push
pop
sub
inc
jg
mov
dec
push
sub
mov
bound
test
add
cs
push
jo
sub
cmp
add
push
dec
adc
cmp
add
pop
pop
shr
add
inc
test
xor
jl
dec
adc
push
sbb
mov
mov
ja
jmp
push
dec
lea
pop
sar
add
add
leave
arpl
mov
add
cmp
je
mov
out
jge
mov
ret
or
arpl
mov
leave
aam
inc
push
adc
movs
dec
add
js
adc
dec
les
rol
in
sub
adc
inc
retf
push
and
jmp
lahf
or
add
or
lea
xchg
setno
(bad)
adc
cld
adc
push
fnsave
out
(bad)
movs
xchg
xchg
in
cmp
out
and
mov
sub
sbb
xchg
cmp
sbb
in
pop
test
jns
mov
xchg
add
jmp
jno
push
mov
imul
sub
popa
loop
and
dec
jo
aad
ss
adc
or
pop
mov
sub
and
dec
sub
in
cmps
sbb
fst
and
mov
or
popf
push
sub
add
push
(bad)
je
ins
and
inc
je
fld
mov
dec
push
iret
adc
add
add
sub
pop
add
int3
xor
iret
ret
jo
push
dec
call
test
rol
dec
xor
sub
sbb
add
xchg
fs
push
(bad)
sub
sbb
mov
nop
xchg
fstp
mov
arpl
add
call
imul
pop
adc
movs
inc
dec
mov
pop
mov
cmps
lods
pop
cs
push
pusha
sub
daa
push
loope
mov
pop
int
xchg
push
mov
sub
xor
jb
push
adc
dec
ins
fisttp
dec
and
cmp
and
jne
repz
fs
push
dec
fistp
pop
or
and
adc
pusha
pop
mov
adc
imul
iret
sbb
popa
push
adc
das
jo
les
into
jle
call
push
jnp
push
inc
les
cwde
add
outs
pop
les
sbb
or
add
or
cmc
clc
test
shl
pop
sbb
cwde
cmp
cld
xchg
sbb
dec
push
push
push
rcl
or
shl
mov
xchg
jne
xor
mov
das
push
mov
imul
lock
push
sbb
popa
mov
push
movs
and
xor
pop
mov
mov
jg
push
retf
push
mov
sbb
cmp
push
pop
dec
call
push
adc
das
bound
lods
xor
push
pop
mov
(bad)
pop
jne
push
(bad)
popf
inc
movs
adc
push
jle
(bad)
bound
push
fs
mov
pop
dec
dec
data16
push
scas
dec
inc
pop
test
adc
outs
je
push
push
cmps
or
pusha
clc
fs
cmp
add
push
cmp
je
mov
pushf
push
(bad)
or
mov
sub
add
hlt
mov
lea
inc
sub
push
push
sar
or
inc
pop
iret
push
mov
or
add
inc
sub
lds
inc
mov
repz
cld
push
stos
or
push
and
xor
dec
dec
xchg
loope
fsub
clc
xchg
add
dec
invd
cmp
push
push
jl
inc
js
add
sub
imul
inc
ret
push
pop
mov
dec
ins
push
xchg
ins
sbb
mov
xor
das
push
adc
or
nop
and
jno
adc
cmp
sbb
out
lahf
pusha
push
popa
aam
sub
call
inc
push
cmc
push
push
adc
inc
mov
and
sbb
arpl
adc
(bad)
ins
adc
mov
inc
inc
cmp
sub
or
push
mov
lods
or
into
jge
and
jmp
push
aaa
mov
push
inc
and
pop
jg
dec
mov
or
mov
and
pop
adc
xor
sub
cmp
mov
xchg
inc
add
dec
arpl
jmp
in
mov
fdiv
ja
cmp
push
mov
mov
and
lds
pop
add
and
clc
in
outs
add
adc
jle
(bad)
cmp
xrelease
dec
and
(bad)
jbe
push
movs
aam
icebp
sub
dec
cmp
add
jge
pop
add
ret
jmp
lods
push
cmps
xor
sbb
push
mov
pop
mov
mov
push
inc
inc
mov
jno
mov
fdivr
fidivr
add
xor
sub
in
cmp
add
push
mov
sub
push
push
fdiv
aam
jo
in
jl
and
mov
mov
pop
push
fild
enter
inc
sbb
pop
sub
hlt
adc
sbb
adc
push
lds
cmp
xor
jg
or
jo
add
adc
ror
cmp
jb
pop
add
push
or
push
test
adc
add
test
jg
push
or
pushf
push
loope
shl
nop
sahf
cmp
mov
sub
nop
daa
dec
fist
adc
imul
(bad)
lea
or
sub
sbb
xchg
adc
aad
inc
xor
aaa
adc
mov
adc
sub
in
push
ins
icebp
cmp
sub
loope
push
fist
ja
push
je
add
pushf
cld
mov
push
mov
dec
dec
imul
jp
shl
adc
xchg
rol
outs
sub
pop
jmp
in
lahf
add
pop
cmc
cmp
jae
inc
mov
clc
xchg
ds
repnz
outs
mov
sahf
xor
lahf
fistp
arpl
lea
sub
xchg
fist
fidiv
push
cmps
popa
or
mov
fnstenv
movzx
sbb
leave
push
in
into
loope
pop
ret
cmp
ins
push
fild
outs
inc
and
add
xor
loop
rcl
and
test
loope
out
jecxz
push
xor
sub
ins
adc
clc
xchg
xor
adc
fs
test
fisub
jg
jg
add
mov
pop
adc
out
and
cli
loope
sbb
push
fcom
call
lds
js
and
sbb
pop
dec
dec
or
and
push
sar
imul
push
mov
push
rcr
pop
mov
ins
(bad)
(bad)
pop
mov
sbb
(bad)
jmp
push
test
mov
cli
mov
mov
mov
cmp
not
test
das
mov
jnp
nop
icebp
xchg
fsub
inc
movs
(bad)
add
nop
call
aad
pop
mov
cmps
push
loopne
nop
les
push
lds
out
div
pop
push
inc
mov
xor
repnz
add
inc
pop
xor
movs
and
stc
imul
pop
fisttp
je
xor
das
lea
shr
inc
dec
sbb
fadd
or
loope
(bad)
imul
daa
adc
popf
mov
jb
xchg
mov
jge
clc
cmps
in
cmp
in
or
sbb
mov
in
test
shr
mov
dec
(bad)
mov
shr
xor
test
pop
sbb
inc
xlat
push
jecxz
add
cmp
jbe
inc
inc
mov
pop
cmps
rol
(bad)
adc
jne
adc
lock
fnstcw
fistp
aad
or
ins
or
xor
leave
mov
int
or
and
shr
ds
stos
push
push
dec
push
je
enter
stos
xlat
loope
pop
mov
dec
adc
adc
jle
retf
push
sub
inc
adc
push
daa
pop
pop
xchg
inc
call
mov
cwde
push
adc
cmp
sub
add
mov
dec
add
jge
mov
pusha
cmc
cmp
xchg
push
inc
push
inc
dec
pop
inc
js
cmps
add
mov
or
outs
and
pop
xchg
sub
movlps
add
lods
add
in
mul
pushf
sub
shr
xor
mov
test
add
aaa
dec
inc
pop
stos
data16
xchg
xor
das
fs
add
shl
mov
cmp
push
loopne
add
add
iret
inc
sbb
push
js
or
sub
add
push
ins
cwde
daa
add
add
je
pop
bound
lahf
jmp
fild
or
sub
outs
js
cld
or
adc
xchg
mov
rcl
hlt
(bad)
scas
aaa
lods
add
xor
sbb
adc
movs
pop
pushf
sbb
xchg
mov
push
xchg
jnp
inc
arpl
jmp
cmp
adc
or
(bad)
ins
ja
call
stc
stos
pop
push
test
push
mov
mov
mov
or
daa
add
xor
add
fimul
and
xchg
ds
mov
(bad)
out
and
push
xchg
add
dec
fistp
bound
fstp
dec
cmc
lds
test
cwde
jmp
pop
shl
pop
mov
add
push
popa
push
je
push
sbb
mov
pop
dec
jae
mov
lea
and
test
popa
imul
and
push
and
cmp
sbb
jno
add
pushf
pop
push
scas
nop
pusha
or
mov
mov
stos
lahf
popf
push
and
retf
cmp
lods
push
xchg
cmp
sub
pop
inc
sub
and
ret
sahf
rcr
pusha
loop
push
mov
mov
bound
sbb
sub
rol
pop
cwde
mov
jo
mov
mov
add
leave
inc
or
mov
inc
pusha
les
sbb
xchg
popf
call
dec
scas
or
and
push
and
jge
xor
mov
xor
pop
adc
or
rcr
lock
stos
cmp
xchg
enter
adc
lock
test
jns
pop
nop
push
pop
add
fucomi
lds
inc
add
aaa
add
lock
outs
add
jne
retf
mov
cmps
pop
or
or
int3
mov
sti
add
cmps
cdq
pop
jl
or
mov
in
adc
add
in
test
adc
dec
adc
mov
add
push
cmp
test
cmps
mov
shl
mov
cmp
in
enter
fs
and
push
bnd
lea
bound
pop
mov
sbb
push
imul
pop
add
and
clc
dec
inc
or
mov
add
and
or
xchg
outs
pop
lahf
xchg
push
add
cmps
push
test
pusha
dec
lods
in
pop
ret
xor
sbb
push
ret
popa
or
fcom
mov
daa
mov
mov
rol
mov
dec
rcr
imul
jl
(bad)
aad
mov
out
sbb
add
cmps
outs
ret
icebp
pop
pop
push
xchg
ret
pop
mov
push
dec
dec
rol
cmp
mov
jns
push
fisttp
or
stos
inc
mov
inc
or
icebp
js
or
lahf
mov
push
sbb
add
xor
jg
nop
add
push
mov
adc
jmp
xor
and
push
or
jmp
sbb
rol
jmp
sbb
mov
add
pop
fld
xor
lds
sub
inc
adc
push
pop
xor
dec
ins
xor
(bad)
sti
mov
and
or
(bad)
cli
lds
inc
repnz
pop
sbb
test
mov
sub
pop
add
xchg
popf
and
or
add
enter
test
icebp
sub
xchg
sub
mov
dec
push
lods
scas
sub
aas
lock
sub
out
push
push
pop
dec
or
cmps
pop
push
push
jp
pop
dec
or
adc
push
pushf
xor
adc
test
adc
pop
add
cld
cmp
jne
dec
mov
lds
sbb
dec
inc
loopne
cmp
mov
dec
dec
in
inc
or
add
inc
cli
aaa
push
popf
movs
outs
mov
inc
pop
adc
mov
xchg
cmps
hlt
sbb
and
rep
adc
push
dec
aas
sbb
imul
fwait
cmps
adc
mov
in
ror
ins
adc
sbb
ror
test
fidiv
push
and
inc
ret
int3
(bad)
aaa
addr16
lods
add
sbb
push
cmp
xchg
ds
adc
dec
mov
test
mov
and
add
push
push
jmp
adc
mov
call
test
sbb
sub
add
xor
dec
push
push
in
mov
sub
xor
mov
in
pop
in
push
pushf
mov
ret
dec
jbe
cmp
ins
dec
dec
xchg
dec
dec
xchg
push
dec
mov
mov
rol
test
dec
or
and
hlt
loopne
sub
push
sub
lods
mov
mov
and
fldcw
test
add
inc
adc
lods
rol
or
dec
push
push
add
or
out
push
test
push
and
add
inc
ror
sub
popa
mov
or
push
sbb
fisttp
or
fistp
out
pop
and
outs
sbb
sub
pop
xchg
push
stos
push
cwde
xchg
xor
aas
jno
aad
add
add
adc
xchg
cmp
xchg
imul
pop
pop
cld
mov
push
enter
mov
in
leave
and
and
call
in
add
sbb
ror
xor
cmp
inc
or
clc
xor
imul
add
or
dec
and
or
shr
mov
ror
sub
dec
dec
cs
pop
jecxz
pop
test
arpl
retf
xor
retf
xchg
sub
or
fimul
popa
mov
loope
sbb
bound
jp
daa
or
or
fistp
and
inc
xor
les
arpl
inc
jb
ror
repz
push
jo
jno
(bad)
dec
ret
mov
je
clc
call
sub
popa
pop
leave
jne
jne
test
int3
xor
inc
pop
add
stos
xchg
add
fcom
bound
mov
fadd
cli
inc
push
int
add
mov
push
mov
add
and
sub
rcl
add
mov
dec
inc
inc
sbb
sub
fidiv
imul
push
int3
inc
jge
add
push
dec
loope
add
push
add
movs
add
mov
jg
or
jb
jne
icebp
sub
les
mov
pop
push
push
daa
add
adc
push
pop
or
add
xchg
push
sub
adc
mov
fs
mov
sahf
popf
cmps
mov
jmp
and
sub
push
and
xor
scas
pop
sbb
sub
xor
inc
or
add
or
sti
cmp
out
dec
outs
fisub
cmp
add
imul
pusha
test
bound
mov
xor
or
xchg
xchg
push
ja
sub
xchg
mov
inc
and
sub
test
xchg
sbb
call
js
jle
je
inc
push
xor
sub
push
push
dec
adc
popa
js
xor
jbe
sti
or
pop
inc
pop
es
(bad)
imul
sub
lods
or
push
(bad)
adc
xor
and
je
pop
inc
sub
lock
sub
jle
sbb
sub
stos
int
and
imul
pop
sbb
dec
mov
or
push
cmp
inc
add
push
or
add
sub
xchg
and
push
add
cmps
jb
inc
repz
sbb
(bad)
enter
dec
mov
ret
rol
ds
or
scas
loopne
dec
inc
inc
(bad)
aam
pop
cmps
sub
add
adc
or
xor
push
inc
movs
pop
and
lods
or
daa
mov
(bad)
mov
mov
and
dec
fmul
les
add
mov
fiadd
add
pop
pop
sub
push
pop
es
sbb
(bad)
rcr
or
lods
push
dec
in
mov
mov
lahf
pop
and
xchg
mov
xchg
adc
push
ret
adc
add
or
aas
or
or
add
retf
ret
fcom
nop
mov
stos
fild
popf
or
pop
pop
pop
and
nop
inc
push
cmp
sub
cmp
sub
and
sub
and
es
add
jg
mov
dec
adc
dec
push
(bad)
xchg
mov
loopne
and
mov
sub
jno
rcl
adc
fcomp
inc
mov
dec
in
push
out
inc
add
add
push
push
fs
sahf
pop
fild
and
sub
dec
push
inc
cmps
sub
dec
mov
sub
inc
leave
inc
jb
sub
enter
mov
mov
sub
movs
jb
sub
sub
cmp
sub
xor
sub
jae
and
adc
mov
fistp
mov
xor
add
out
test
add
pushf
xchg
or
mov
or
push
inc
and
cwde
xchg
iret
inc
add
inc
sbb
sbb
jae
out
mov
push
gs
mov
fstp
add
push
dec
mov
xchg
add
cmp
sub
sub
fs
sub
sub
in
ret
sub
cmp
inc
pop
ins
adc
cs
scas
push
jmp
push
and
pop
repz
sbb
adc
dec
test
sub
scas
inc
xchg
add
sub
sub
jmp
mov
sub
in
in
sub
sub
and
sub
sub
sub
sub
pop
and
sub
nop
xchg
sub
daa
in
cmps
inc
add
pop
sub
aam
pop
jno
add
call
dec
push
and
xor
fisubr
rol
mov
add
mov
shl
or
add
adc
add
fld
bound
adc
or
cmp
cmp
add
or
stos
fild
ss
std
push
xor
push
in
add
sub
xchg
mov
stc
or
sub
pop
cdq
in
pop
sub
sub
mov
jo
dec
dec
sub
push
add
inc
adc
jb
push
and
sub
pop
add
sub
sub
sub
xor
sub
push
add
xchg
pushw
and
or
xchg
sbb
popa
sbb
add
sahf
add
xchg
dec
sub
sub
push
xor
cmp
rol
xor
retf
pop
das
or
loop
dec
inc
sbb
sbb
push
in
push
add
cmp
add
sbb
add
loopne
pusha
stc
sub
dec
add
jle
xchg
fistp
cmp
push
jno
add
xor
test
add
mov
inc
push
push
cmps
test
xchg
adc
(bad)
mov
push
dec
sbb
aaa
adc
and
push
je
push
push
push
scas
pop
(bad)
or
push
pusha
and
pushf
push
push
adc
jmp
xchg
dec
mov
cld
inc
sbb
xor
fwait
test
pop
jnp
sub
pop
sbb
test
aas
stos
cld
sbb
pcmpgtb
xchg
xlat
add
fsubr
adc
aad
xor
add
and
pop
dec
add
mov
sbb
enter
add
sbb
mov
ret
(bad)
popf
mov
pop
and
dec
adc
jo
and
test
or
shl
jg
adc
sub
cmp
and
cmp
inc
call
mov
int3
call
xor
dec
push
inc
and
enter
push
inc
push
fadd
lods
sub
cmp
add
mov
jnp
inc
push
push
adc
adc
push
pop
test
dec
sub
xchg
das
out
adc
xchg
into
cmp
mov
ret
or
inc
aas
dec
aas
jo
loopne
push
push
jmp
js
sbb
add
inc
adc
pop
mov
push
inc
mov
adc
pusha
adc
sub
inc
hlt
fdivr
add
mov
xchg
inc
dec
loop
push
mov
pop
xchg
add
dec
sbb
ins
add
jno
shl
fisubr
stos
pop
dec
jmp
adc
pop
in
dec
je
adc
add
push
sbb
in
pop
into
ins
pop
ds
iret
ja
mov
pop
sub
sbb
push
push
ja
ins
and
xor
add
inc
sbb
push
iret
rcr
fcomi
popa
add
push
or
call
xor
lock
ja
add
mov
icebp
jmp
lods
or
jle
out
movzx
push
push
push
adc
push
adc
push
push
lods
jl
nop
rol
inc
push
adc
lea
cmp
scas
ins
push
and
pusha
(bad)
fsub
mov
(bad)
daa
sub
rcr
jmp
dec
mov
cmpxchg
xor
add
dec
retf
into
xchg
push
sub
mov
fs
test
ss
adc
and
add
and
test
mov
cmp
pop
and
shr
add
sub
add
jg
(bad)
out
cmp
fcomp
(bad)
xchg
sbb
add
adc
sbb
inc
cli
jmp
push
pop
sub
inc
mov
pop
je
inc
add
pop
ret
cmp
pop
int3
outs
add
sub
and
mov
push
clc
push
push
xchg
mov
inc
push
xchg
js
dec
out
xlat
pusha
push
xor
cmp
cld
pop
dec
xchg
fs
(bad)
neg
push
cmp
mov
(bad)
sbb
add
pop
lock
xor
adc
add
mov
jo
xchg
add
lahf
xchg
bound
mov
cmp
aad
fisub
mov
jae
movs
je
test
add
push
pop
or
dec
mov
adc
mov
dec
add
fwait
mov
fisubr
popw
inc
mov
lea
jge
pop
mov
add
sub
mov
daa
xor
jae
shl
dec
ret
enter
cmp
or
push
add
nop
sbb
sub
movs
pop
aam
(bad)
xor
pop
dec
add
sahf
and
add
and
jecxz
(bad)
mov
in
es
sub
cwde
and
push
or
inc
push
dec
neg
add
xor
pop
sbb
inc
sub
pop
jecxz
not
pop
add
dec
adc
loopne
neg
pushf
fwait
jo
xor
mov
ret
cld
push
sub
add
inc
xchg
mov
inc
push
mov
mov
push
sbb
test
daa
int3
push
xor
fld
ss
mov
addr16
ins
arpl
pop
sub
xor
or
nop
test
ds
jg
adc
dec
repnz
jb
inc
cmp
out
outs
sbb
sbb
cmp
out
ins
push
pusha
or
call
add
pop
xor
mov
add
xchg
and
mov
mov
fcomp
push
ja
data16
cmp
inc
pushf
pop
push
sbb
push
dec
dec
push
dec
add
xchg
(bad)
mov
adc
mov
jg
mov
out
jmp
int3
jmp
and
mov
push
sub
lea
mov
add
lahf
sub
inc
rcr
push
je
aam
add
cmc
push
push
aam
xor
pop
cmp
dec
xor
or
into
add
and
aas
inc
push
ret
adc
push
fs
cwde
mov
push
mov
sti
cli
xor
xor
or
fsub
test
loopne
or
or
jae
loop
jl
sub
pop
sbb
sbb
sub
dec
mov
jg
cmp
(bad)
jb
fdivr
jb
fdivr
imul
mov
mov
or
jp
sub
and
jecxz
cdq
sbb
mov
pop
inc
push
retf
dec
in
daa
fadd
inc
enter
loopne
ja
shl
fist
sub
pusha
retf
mov
fnstcw
cmp
(bad)
ror
ds
or
mov
enter
sbb
lods
popa
xchg
mov
adc
adc
dec
push
aaa
mov
push
sbb
(bad)
cmp
jb
pop
and
cmp
push
pop
aaa
pushf
mov
push
and
add
sbb
cdq
add
cmp
je
cmp
ret
push
cmp
(bad)
or
cmp
pop
adc
jecxz
loopne
cmps
movs
(bad)
push
xor
pop
mov
stos
loope
mov
mov
sbb
ret
or
pop
out
pop
sub
lea
je
fdivr
loopne
or
xor
inc
dec
or
and
jne
add
cs
add
xchg
pop
add
sub
adc
das
sbb
enter
sbb
hlt
pushf
jl
icebp
fcomip
inc
loopne
sar
dec
xchg
loopne
daa
add
outs
(bad)
sub
push
nop
loopne
lock
add
pop
mov
sub
data16
outs
ror
movs
or
dec
test
sbb
les
mov
in
lock
add
cmp
mov
dec
pop
(bad)
imul
out
and
dec
test
or
cdq
inc
jle
jns
adc
add
xor
shr
sbb
call
cld
jno
das
pop
inc
pop
push
pop
mov
xchg
adc
sahf
push
push
mov
sub
lea
mov
inc
popf
mov
aas
dec
cmp
cmc
push
fdivr
invlpg
test
xor
push
and
je
jp
push
test
pop
push
sbb
sub
xchg
add
enter
inc
dec
popa
out
or
jl
pop
fistp
loopne
das
adc
or
pop
jmp
mov
sub
inc
je
dec
bound
add
inc
cmp
fdivr
sbb
sub
or
inc
pop
loopne
push
cmp
jge
or
sahf
or
lea
xchg
add
and
or
or
add
inc
xchg
or
ds
pop
outs
outs
sub
mov
push
xor
dec
je
mov
add
jg
add
(bad)
add
test
xchg
push
xchg
sar
(bad)
hlt
or
or
pop
sbb
repz
mov
out
mov
push
js
cmp
sti
add
sub
jle
jmp
push
mov
mov
test
mov
adc
inc
pop
ins
aas
jbe
jno
xchg
or
and
sub
popa
add
(bad)
ret
or
repnz
aas
and
xchg
mov
popa
dec
aad
jle
or
xchg
and
sbb
jg
rcr
ja
jae
and
jp
clc
inc
addr16
mov
sbb
adc
ror
cdq
inc
sub
and
sar
add
push
mov
inc
rcr
mov
jb
xor
(bad)
cmp
out
jbe
add
xchg
push
pop
sbb
sbb
fsubr
inc
jbe
dec
pop
dec
or
movs
adc
sar
cmps
test
or
mov
lods
inc
retf
or
nop
imul
push
mov
cmp
and
or
hlt
mov
stc
push
or
movs
or
pop
cmps
add
cmp
inc
push
push
or
xor
es
arpl
add
and
and
and
in
rdtsc
(bad)
add
popa
dec
sub
or
or
mov
cmp
pusha
dec
sbb
mov
adc
fadd
pop
or
and
jmp
call
cmp
dec
fiadd
add
pop
xor
xor
sbb
add
popa
lahf
add
cmp
dec
aaa
pop
inc
pusha
xchg
movs
or
dec
xor
dec
out
cmc
nop
sbb
mov
jg
or
inc
push
pavgb
xchg
dec
pop
movs
and
arpl
cmp
jbe
push
sbb
fsub
push
sbb
retf
xor
push
jo
and
adc
jle
jo
cmp
frstor
pop
das
push
cmp
sbb
inc
les
add
pop
sti
sbb
push
jle
adc
push
push
dec
movs
jg
mov
ja
jae
add
ret
xchg
jne
ror
out
fistp
and
jle
inc
sub
(bad)
pop
cmps
and
xchg
push
mov
fadd
inc
sbb
mov
mov
push
sbb
fs
inc
mov
xor
adc
rcr
les
cmp
idiv
test
shr
iret
mov
adc
and
dec
pop
nop
mov
lods
movs
or
call
and
cld
int3
jno
pushf
sub
scas
fwait
in
clc
sub
push
inc
dec
sbb
test
dec
cwde
dec
jb
ds
lods
mov
call
or
nop
xor
or
mov
je
dec
in
mov
js
xchg
outs
and
push
push
mov
mov
mov
jmp
(bad)
push
pop
ins
pop
(bad)
gs
nop
sub
pop
or
mov
dec
aaa
pusha
lahf
xor
mov
push
inc
lahf
stos
mov
add
adc
mov
sbb
sbb
mov
xor
mov
mov
aaa
cdq
dec
mov
stc
das
push
ficom
add
mov
clc
(bad)
in
jmp
imul
push
sub
(bad)
jns
and
call
push
inc
adc
sahf
cmp
sbb
mov
push
mov
xchg
mov
mov
daa
pop
sub
ror
(bad)
(bad)
sub
popa
and
retf
or
cmp
pop
inc
xor
adc
or
push
jp
xor
xchg
shl
cmps
xchg
push
lea
push
inc
test
arpl
or
sub
xor
mov
jo
jmp
mov
add
pusha
or
pop
je
add
nop
jg
xlat
pusha
xchg
lahf
xor
rol
mov
imul
fdivrp
and
push
sbb
aam
rcl
dec
sbb
sar
push
push
add
sbb
add
mov
dec
test
xor
adc
fs
add
inc
sbb
imul
mov
mov
es
jmp
movs
inc
jp
push
or
or
aam
es
add
dec
add
cdq
xor
mov
cmps
or
sub
inc
and
mov
out
mov
push
jl
push
std
add
adc
loopne
std
pop
pop
push
fstp
fnstenv
jle
dec
and
cmp
rol
or
imul
xchg
add
jp
and
(bad)
push
daa
adc
ins
xchg
sysret
test
add
xchg
sbb
push
mov
ret
push
add
adc
inc
int
aam
test
dec
les
cwde
loopne
mov
add
and
inc
or
sub
xchg
pop
jmp
push
dec
xor
stc
test
popf
std
adc
fwait
mov
jns
or
neg
add
push
fcomp
xlat
sar
aaa
and
ror
les
cmps
xor
out
jmp
jecxz
aad
jl
iret
cli
ja
mov
sbb
mov
jo
stc
call
jbe
sbb
sub
or
push
or
cld
idiv
cs
test
mov
jae
pusha
push
in
cmp
xchg
adc
inc
dec
sbb
adc
cmp
pop
mov
jne
push
lds
xchg
cld
jmp
fcom
add
lods
xchg
push
sub
enter
cld
dec
and
jg
lds
push
fcomip
and
pusha
dec
adc
test
cs
mov
xchg
mov
fcomp
pop
and
in
pop
clc
sub
push
dec
mov
jl
inc
sub
jo
mov
rcl
dec
adc
mov
sbb
cwde
in
pop
inc
add
or
sub
inc
cmp
and
sub
(bad)
(bad)
pop
add
push
dec
loopne
push
lods
call
sahf
inc
cs
xchg
xchg
ins
dec
in
ins
dec
adc
cmps
fstp
jo
dec
leave
pop
lock
rcr
adc
cld
imul
mov
wbinvd
(bad)
lock
inc
ins
ret
ret
ret
mov
add
rcr
dec
xor
movs
loop
bound
dec
imul
push
push
sbb
in
test
mov
dec
pop
out
push
pusha
pop
pusha
or
les
or
nop
dec
pop
loopne
jno
adc
je
inc
sbb
and
add
fiadd
loop
adc
rol
mov
test
xchg
ror
repz
pop
lods
dec
add
imul
xchg
rcl
inc
jl
aam
push
push
iret
push
mov
jl
xor
or
pop
or
(bad)
push
add
push
adc
mov
xor
and
dec
adc
inc
icebp
pop
sub
sbb
push
ins
fimul
pop
cs
dec
and
sbb
pop
jmp
das
xor
mov
push
je
push
mov
pop
add
je
dec
ins
mov
outs
jmp
pusha
icebp
cs
sti
xchg
cmc
or
(bad)
es
pop
jmp
cmp
in
aam
xor
rcl
out
clc
add
add
push
push
add
(bad)
or
pop
rcl
and
scas
or
jmp
sub
mov
push
adc
fld
das
nop
inc
cmp
xor
push
jo
popf
inc
test
adc
and
pop
xor
jp
ja
cmps
cmp
inc
xor
cmp
mov
xchg
xor
sahf
mov
outs
popf
pop
sbb
sbb
push
popf
inc
xchg
dec
add
test
and
cmp
jno
loop
xchg
jmp
call
out
jmp
xor
or
sbb
(bad)
std
and
fiadd
pop
fldcw
pop
xchg
cmps
push
pop
dec
lods
jo
mov
pop
mov
test
shr
inc
mov
icebp
js
aam
pop
ret
shr
call
mov
std
lods
cmp
mov
stos
dec
push
clc
mov
(bad)
in
pop
int3
mov
jae
rcr
ds
adc
leave
je
add
add
or
adc
push
pop
and
xor
sbb
ins
cmp
dec
or
test
push
add
and
xor
fadd
or
in
loopne
sub
fmul
jmp
dec
sbb
push
ror
inc
push
xor
mov
sub
adc
pop
push
jo
ffreep
dec
pop
push
ja
inc
mov
adc
push
imul
jl
push
sub
xchg
push
popa
pop
cmp
mov
pop
sbb
add
xchg
inc
jno
inc
push
push
icebp
add
sub
and
inc
add
push
cmp
sbb
sbb
xchg
or
(bad)
mov
rol
cmp
sbb
ins
mov
jno
adc
stc
mov
pop
and
or
daa
xor
xchg
xor
adc
loopne
ins
xor
push
xor
fild
(bad)
pop
add
jle
adc
add
arpl
iret
inc
add
imul
fisttp
xor
jae
jns
mov
mov
add
mov
push
dec
pop
fidivr
or
test
push
(bad)
dec
adc
and
and
mov
fidivr
dec
sub
(bad)
mov
mov
addr16
bound
mov
fbld
adc
cmp
loopne
add
popa
xor
mov
push
nop
call
in
enter
lds
imul
dec
xor
sub
jg
fidiv
ja
jle
js
sub
pop
ins
mov
dec
iret
imul
jnp
mov
(bad)
test
xor
js
loop
int
mov
lds
retf
sub
or
add
mov
mov
mov
dec
inc
push
pop
pop
or
add
xchg
mov
cmp
(bad)
in
xor
pop
movs
ss
shl
cmp
mov
mov
add
inc
imul
jmp
jmp
jo
jmp
inc
mov
cmp
dec
jge
(bad)
cmp
jb
call
out
push
cmp
cmp
adc
mov
cmp
push
xchg
inc
(bad)
iret
retf
and
pop
iret
dec
mov
rcl
pop
xchg
push
in
push
(bad)
nop
nop
dec
out
dec
sub
cs
ret
cdq
add
push
movs
mov
dec
shl
sub
imul
add
leave
and
mov
cmp
stos
add
push
mov
je
scas
fadd
inc
mov
ja
mov
sub
mov
and
mov
cmps
inc
mov
dec
popa
mov
push
jle
jnp
dec
lock
test
iret
or
daa
hlt
sahf
add
adc
xor
test
mov
add
sbb
dec
movs
mov
pop
sub
xrelease
xchg
sub
fmul
mov
sar
mov
mov
and
sbb
out
lods
mov
ins
lea
popa
add
(bad)
frstor
cmp
aaa
push
movs
xchg
mov
adc
xor
mov
xchg
test
mov
sub
xor
or
add
push
push
dec
add
rol
shl
call
add
sbb
retf
pop
pop
jp
clc
fsubr
jle
(bad)
cld
adc
mov
sbb
stos
pop
cmps
mov
pop
pop
rcr
test
adc
pop
pop
xchg
scas
(bad)
fcomp
inc
push
jbe
pop
pusha
fs
mov
outs
je
adc
outs
cwde
(bad)
and
mov
inc
pop
outs
lods
xchg
sahf
dec
sub
pop
pusha
push
loope
pop
test
pop
sahf
push
pop
das
mov
mov
pop
pushf
xchg
ficom
mov
lea
jg
dec
fadd
xchg
mov
das
fsubr
pop
inc
mov
adc
sbb
test
add
sbb
adc
and
jne
test
or
add
push
cs
and
clc
cmp
jmp
dec
mov
or
js
push
mov
out
mov
mov
jge
clc
movzx
jmp
or
push
jnp
pop
(bad)
iret
pop
mov
icebp
sub
movs
and
cdq
xor
xor
adc
and
stc
and
adc
popf
jmp
(bad)
push
cwde
mov
fwait
lods
xchg
ss
mov
pusha
pop
fisttp
ret
call
and
adc
jne
pop
pop
shl
fild
jmp
and
or
mov
dec
(bad)
(bad)
xchg
pop
nop
adc
dec
xchg
cmp
push
jae
add
dec
movs
aad
or
adc
cwde
lahf
push
popa
test
dec
call
pop
inc
or
mov
xlat
push
inc
or
inc
and
popf
mov
adc
pop
cmps
or
shl
out
call
imul
pop
jecxz
or
or
aas
and
fsub
test
cmp
inc
cdq
adc
or
sub
lea
stc
push
fs
mov
dec
lods
mov
pop
nop
jns
jns
jae
sbb
jne
or
mov
dec
and
call
xchg
pop
cld
mov
xchg
adc
add
in
xchg
or
push
mov
enter
mov
jmp
mov
sbb
mov
adc
test
mov
pop
nop
cmps
dec
add
pop
gs
es
mov
mov
push
push
inc
push
inc
fidivr
adc
adc
add
inc
dec
pop
xor
jmp
jmp
add
push
cmp
lea
add
pop
push
cmps
or
add
jmp
leave
ins
leave
dec
aas
jl
sbb
enter
mov
pop
add
pop
les
mov
cmc
jbe
cmps
adc
pop
push
jne
(bad)
cmps
cmps
pop
mov
es
lods
sbb
add
and
into
add
jmp
lea
push
(bad)
int3
add
sbb
add
dec
outs
push
push
call
sub
mov
mov
jmp
add
and
je
gs
adc
or
fisub
or
xor
fisubr
fistp
dec
xor
inc
sub
mov
xor
rcl
xchg
loopne
or
repnz
out
cld
pop
retf
push
push
js
int
adc
leave
pop
inc
pop
and
popf
add
fadd
or
shl
jns
mov
jle
repnz
sub
in
push
push
hlt
enter
ror
aad
ins
sub
fild
jg
push
jmp
dec
add
aam
dec
adc
rol
cmp
popa
shl
in
mov
add
popf
fdivr
push
push
rol
iret
lds
sub
(bad)
retf
into
and
or
sub
aas
push
push
push
rol
icebp
xchg
addr16
or
add
ins
sub
adc
xor
xor
mov
pop
fisttp
and
xor
xor
jle
adc
or
mov
or
es
mov
xor
mov
call
test
loopne
cmps
rol
lea
psrld
jg
inc
push
cmp
(bad)
push
movs
mov
push
pop
scas
mov
cmp
fidivr
cmp
xchg
and
sub
inc
adc
pop
xor
jbe
or
push
push
mov
push
(bad)
xor
sbb
push
dec
pop
xor
ins
jne
fist
adc
push
gs
pop
sbb
fs
and
pop
mov
inc
test
es
cmp
push
imul
int
xchg
adc
xchg
jmp
mov
push
cmp
dec
pop
mov
and
or
push
das
push
lods
mov
mov
or
push
push
inc
inc
outs
popf
jl
inc
add
mov
adc
push
enter
es
sub
movs
sbb
call
cdq
inc
je
retf
add
loopne
jl
mov
imul
cmps
sbb
iret
outs
sbb
mov
enter
fdiv
push
and
and
inc
xchg
jne
mov
sbb
in
ds
int
pop
pop
and
montmul
cmps
xchg
sar
popa
inc
iret
lahf
sub
rcpps
push
mov
push
inc
xor
cmp
sbb
xchg
mov
add
mov
shr
sbb
push
(bad)
mov
cli
cmp
std
mov
cmp
test
inc
sub
mov
add
sub
frstor
inc
jmp
and
sub
or
adc
ret
sbb
add
push
adc
push
out
mov
je
push
fimul
pop
test
dec
jb
sub
mov
sub
mov
hlt
mov
dec
(bad)
repnz
lods
test
add
mov
mov
add
retf
loopne
xor
je
add
cmps
shl
cmp
(bad)
fld
mov
or
int3
or
test
sbb
mov
mov
dec
push
cmp
push
add
xor
push
lea
(bad)
push
cli
jp
push
sbb
sub
pop
and
mov
ror
lds
pop
ret
pop
pop
mov
jnp
mov
and
fnstcw
enter
xchg
sub
mov
rcr
mov
inc
sub
pop
pop
xor
lock
inc
mul
xchg
rol
push
mov
shl
inc
hlt
add
or
cmc
rcr
xchg
sub
inc
gs
adc
inc
xor
push
xchg
(bad)
test
mov
dec
cmp
xchg
add
adc
mov
pusha
xchg
mov
jmp
ret
pop
outs
or
sbb
lea
jge
cs
lds
jl
outs
push
shr
inc
adc
jo
inc
sbb
sub
sub
jecxz
or
imul
lea
push
stc
add
or
jmp
and
sub
fiadd
push
jp
inc
stos
jne
test
and
cmp
add
pop
pop
arpl
or
call
inc
mov
or
(bad)
inc
dec
je
cmps
sbb
or
call
add
adc
push
xchg
test
js
adc
adc
jecxz
push
movhps
adc
or
icebp
retf
push
sbb
clc
ret
aam
fs
sahf
fsubr
push
adc
add
fld
or
outs
in
pop
xor
clc
xchg
mov
popa
sub
or
repnz
sbb
sub
sbb
test
test
cmp
sub
mov
jp
(bad)
xchg
mov
ret
js
add
pop
and
or
mov
cmp
cmp
adc
cmc
push
nop
jmp
sbb
jb
cmps
rcr
sldt
inc
add
sbb
push
ror
xchg
sub
loope
dec
daa
xor
test
cmp
sbb
imul
cmp
xchg
out
add
inc
mov
mov
cmp
cs
mov
lahf
push
inc
fcomp
jb
mov
lahf
mov
cmp
jg
inc
call
sbb
adc
aas
adc
mov
adc
les
dec
dec
rdtsc
inc
mov
retf
mov
mov
inc
push
push
shl
or
test
cli
dec
nop
sub
adc
mov
sar
adc
les
cmp
call
push
rol
popf
xchg
xchg
test
xchg
mov
xor
adc
adc
xchg
dec
or
or
cmps
push
pop
je
dec
enter
jno
mov
cmps
ins
(bad)
mov
ja
out
das
adc
lock
push
sub
inc
pop
inc
std
pusha
adc
add
and
mov
xchg
sub
jge
dec
or
jo
or
and
mov
inc
pop
pop
and
push
ds
cmp
pop
mov
cmp
retf
dec
push
push
xor
and
inc
cmp
ds
or
adc
xor
adc
pop
add
push
mov
and
arpl
mov
enter
jo
mov
pusha
popa
push
push
js
aad
je
dec
or
iret
adc
inc
dec
call
dec
xor
jnp
(bad)
push
aaa
push
and
movs
add
mov
bound
cmp
(bad)
or
sbb
jnp
inc
or
mov
ss
leave
push
pop
js
ins
jmp
mov
mov
push
mov
mov
push
xor
push
pop
mov
mov
mov
mov
rol
(bad)
pop
push
mov
scas
lahf
add
add
adc
add
movs
xor
(bad)
push
loopne
or
mov
mov
sahf
dec
and
xor
add
stc
push
add
and
sbb
dec
xsaves
or
test
push
cdq
inc
cs
push
xor
and
xchg
nop
or
js
movhps
adc
test
mov
mov
dec
scas
nop
or
les
xchg
mov
dec
inc
shl
fidiv
mov
cmp
push
cmp
inc
in
dec
xor
jl
inc
sbb
aam
mov
add
add
sub
mov
gs
pop
popa
test
jle
call
xchg
loop
mov
mov
dec
je
repz
and
push
pop
add
jb
sbb
mov
shl
call
mov
cld
sti
mov
sti
pop
ucomiss
sbb
pop
add
repnz
cmp
ins
mov
jmp
in
lahf
ja
ds
add
mov
movs
push
ja
pop
or
push
sbb
push
sbb
sub
data16
pop
sbb
cmp
or
imul
sub
es
arpl
push
data16
jmp
add
push
push
xor
jnp
mov
cdq
add
hlt
adc
std
sub
or
or
movs
aam
and
add
mov
mov
cmp
je
sbb
push
shl
and
add
sbb
ins
inc
sbb
les
sub
and
adc
push
and
pop
std
lds
sub
mov
inc
mov
cmp
xchg
adc
and
pusha
sub
xlat
jbe
stc
or
jmp
push
enter
dec
or
add
cmc
add
and
je
sub
bound
add
sub
xor
(bad)
sbb
and
call
or
pop
mov
into
mov
mov
xchg
ret
jo
adc
and
jne
mov
jmp
mov
or
push
dec
cmp
inc
enter
ja
fadd
xchg
or
push
dec
xor
dec
fdivr
add
sbb
xor
aaa
lods
rol
mov
xor
sbb
shl
or
mov
pop
je
imul
cmp
cmp
add
leave
or
or
push
mov
or
rol
je
dec
sub
mov
xchg
mov
test
test
add
cdq
sub
add
pop
mov
cmp
lahf
sahf
mov
test
pop
jg
js
push
jns
dec
fs
sti
fbld
adc
aaa
loop
(bad)
add
cmp
push
les
pusha
pop
repz
call
out
xchg
sbb
les
pop
inc
or
shl
int3
mov
mov
shl
inc
bound
and
push
jo
dec
add
push
cmps
in
sub
or
inc
add
dec
and
mov
aam
aam
and
outs
jg
clc
and
xor
inc
nop
rol
push
mov
push
test
ret
jecxz
add
dec
call
mov
fnstcw
cmp
sbb
dec
ja
mov
and
pop
repnz
add
pop
jno
repnz
add
dec
inc
add
lods
cmp
sbb
xchg
and
pop
jo
lea
repz
jnp
adc
sbb
lea
test
pop
mov
push
stos
cmp
pop
imul
les
push
sub
inc
ret
add
add
test
mov
mov
imul
fbld
or
dec
cmp
jo
leave
in
ins
dec
inc
dec
leave
in
mov
adc
mov
xor
sub
dec
sbb
cdq
fistp
push
pop
jg
fsubr
push
test
mov
xor
or
push
stos
inc
push
jg
pop
cmps
and
shr
push
jge
and
sbb
add
cs
retf
movs
or
sbb
and
sbb
pop
or
cmp
push
das
pop
xchg
cmp
nop
mov
sbb
xchg
xchg
ja
jno
or
pop
pusha
pop
dec
(bad)
sub
repnz
push
sub
retf
in
mov
mov
jl
pushf
mov
mov
add
pop
test
loopne
call
mov
pop
sbb
adc
sub
add
sub
stos
push
or
push
fistp
cmps
mov
je
iret
test
push
out
mov
test
inc
or
iret
lea
mov
sub
jmp
(bad)
pop
jmp
adc
xchg
pop
cs
mov
sbb
pop
pop
shl
sbb
push
sbb
jb
jmp
push
(bad)
nop
fs
(bad)
mov
jmp
mov
(bad)
pushf
pop
mov
movs
dec
mov
xchg
pop
loopne
sbb
add
mov
fwait
xchg
imul
adc
or
add
jno
(bad)
in
mov
adc
mov
pop
popa
sti
or
mov
out
cmp
pop
call
or
push
xchg
xchg
sar
jbe
not
or
adc
jmp
pop
jb
mov
mov
jle
push
das
and
xchg
(bad)
pop
sbb
sti
mov
push
fwait
mov
adc
cmp
js
adc
and
add
shl
js
out
sbb
push
ss
mov
xlat
mov
mov
dec
or
add
fldenv
or
cmp
xor
popf
add
push
and
cmp
and
into
call
cmps
pushf
test
add
cdq
xor
cmp
xor
lahf
das
inc
fistp
or
sbb
and
push
and
pop
dec
xchg
pop
push
push
mov
cwde
adc
fabs
fld
xchg
fldz
fucompp
inc
aaa
cld
adc
push
jle
std
out
out
inc
jmp
inc
jne
fstp
jmp
fstp
jmp
test
mov
fild
cmps
push
push
fsubr
jge
fnstcw
repz
pop
test
ins
hlt
fistp
pop
ss
mov
cmp
fmulp
loope
sti
and
or
idiv
add
dec
pop
jmp
and
jmp
push
push
pop
and
jmp
sub
jmp
cmp
inc
aam
xor
arpl
jp
push
fs
fiadd
inc
mov
xor
pop
call
add
cmc
clc
xchg
fistp
test
mov
xor
cli
or
mov
sbb
cmp
int3
add
xor
xor
jb
xor
jg
bound
in
push
push
stc
sub
jns
repnz
push
xor
mov
movs
mov
sahf
ror
push
dec
cld
push
or
adc
push
scas
dec
jl
ins
cmp
lods
mov
fcom
push
xor
or
xor
fistp
rcl
or
xor
and
dec
gs
inc
ficom
nop
xlat
fstp
js
adc
jle
ret
pop
inc
lea
sbb
imul
adc
pop
adc
nop
or
mov
mov
pop
inc
fs
or
dec
or
inc
clc
dec
add
addr16
jmp
cli
add
pop
sti
inc
cs
and
test
mov
jl
mov
mov
call
ds
aas
int
sub
pop
enter
lea
dec
loope
sub
mov
cmp
fst
add
dec
xchg
or
and
aaa
les
mov
sub
push
cs
and
and
lock
mov
pop
in
psrlq
mov
sub
std
repnz
out
jne
ret
lods
xchg
xor
fisttp
and
jmp
cmps
lods
lock
mov
push
lock
sbb
pop
inc
icebp
xor
fild
je
mov
in
mov
sbb
mov
nop
or
test
and
(bad)
push
pop
je
sbb
sbb
adc
stos
pop
jg
add
push
fcomp
sbb
add
and
fadd
inc
push
or
daa
sbb
jl
push
cmp
adc
out
dec
pop
fwait
push
and
movs
mov
jae
movs
or
loop
lahf
js
adc
and
push
cmp
add
adc
ret
sub
jne
dec
mov
cs
xor
push
aaa
cmps
pop
pusha
fs
add
or
and
xor
fisub
xor
add
push
(bad)
mov
xor
faddp
sbb
cmp
cwde
sub
shr
adc
sar
test
jo
int
sar
fmul
sbb
outs
mov
(bad)
cmp
sbb
lea
imul
fcom
push
fdivr
or
into
clc
xchg
push
push
adc
adc
icebp
inc
inc
clc
adc
jl
cmp
sti
rol
push
test
sbb
push
and
and
cld
cwde
jns
mov
sbb
call
add
aas
cmp
xor
push
imul
mov
sbb
adc
xchg
lods
(bad)
or
or
xor
das
or
test
or
jge
mov
sbb
or
push
inc
mov
cmps
popa
cmp
mov
mov
dec
jmp
movs
add
mov
ret
loopne
cmp
xchg
mov
sbb
xor
push
sub
pop
add
jb
aas
inc
dec
int3
jb
add
in
neg
arpl
cmp
retf
test
into
xor
scas
les
loop
dec
movs
adc
xor
sti
xchg
cmps
fidivr
mov
(bad)
mov
xchg
and
test
push
push
lea
sub
loopne
push
shl
lds
adc
xor
push
dec
cmps
dec
mov
into
push
loop
(bad)
into
xchg
les
adc
in
sub
push
pop
aas
and
mov
or
cmp
add
push
adc
sub
mov
xchg
xchg
pop
fcmovne
xor
mov
or
sbb
xor
add
add
sbb
cmp
cwde
sub
xchg
mov
or
xor
jmp
adc
inc
cmp
dec
icebp
out
push
mov
jg
mov
add
cmp
jmp
push
mov
or
cmps
push
jl
pop
jmp
add
in
dec
mov
xor
jp
mov
test
(bad)
sti
push
movs
sahf
jle
repnz
dec
mov
or
sub
adc
(bad)
sub
popa
cmp
push
jmp
stos
or
jae
sbb
inc
mov
lods
(bad)
mov
ins
adc
div
or
shl
cmp
push
cld
push
int
xor
add
loopne
mov
aad
jno
cmp
xlat
mov
or
mov
popf
pop
or
adc
inc
add
idiv
or
mov
cmp
pusha
sahf
pop
clc
fiadd
mov
add
fucomip
sub
xor
lods
lock
cmp
or
dec
adc
xor
aam
sbb
clc
mov
jb
rcl
jmp
jp
add
push
mov
mov
add
push
retf
xor
or
dec
(bad)
dec
adc
push
add
jnp
push
lea
jge
push
fisttp
xor
cmc
clc
pop
or
pop
ja
mov
inc
push
(bad)
mov
sbb
add
add
fwait
clc
pop
mov
retf
and
dec
jg
inc
retf
shr
push
push
pop
cmps
inc
cmps
jl
fsub
pop
push
inc
push
scas
shl
pop
cld
dec
imul
add
or
dec
add
add
inc
imul
push
push
clc
inc
sbb
xchg
sbb
(bad)
mov
fcomip
xchg
and
cdq
add
or
mov
sbb
adc
(bad)
les
loopne
mov
lods
mov
adc
and
stos
div
jl
test
pushf
push
mov
int
inc
shl
jno
hlt
sbb
stc
imul
mov
inc
mov
dec
push
jb
mov
xlat
ins
retf
jnp
mov
repnz
sub
mov
xchg
push
mul
cdq
int3
mov
mov
and
jno
je
ss
mov
adc
jecxz
fldenv
pushf
cmp
jne
mov
add
push
call
in
jo
add
cmp
aaa
rol
push
xor
repnz
add
dec
call
retf
sbb
xchg
sub
mov
and
mov
cmp
or
inc
jmp
jmp
mov
jmp
lahf
add
push
and
test
inc
out
inc
rol
mov
push
adc
mov
ja
jle
into
movs
mov
aad
cmp
jg
mov
inc
add
test
xor
add
jae
outs
cld
jl
cld
mov
cmps
or
jmp
test
xchg
inc
jns
aas
stos
ins
pop
lods
inc
mov
xor
je
add
and
test
adc
stos
add
add
jne
push
inc
inc
js
(bad)
mov
cmp
xor
test
dec
ret
mov
sahf
out
sbb
push
push
pop
add
add
sbb
push
add
xor
daa
cmp
rol
pop
or
mov
fcomp
push
sub
or
push
(bad)
sar
pop
jle
retf
cmc
loope
mov
not
dec
test
jle
or
imul
xchg
and
shr
xor
dec
sub
push
pop
sub
xor
jne
inc
adc
adc
or
sub
push
push
jo
test
push
jnp
sub
inc
sub
(bad)
sub
adc
sbb
mov
sbb
pusha
or
or
push
mov
add
push
adc
xchg
mov
or
mov
inc
adc
adc
mov
cmps
test
test
mov
add
push
stc
pop
sbb
and
pop
and
js
cmp
cs
sbb
jne
enter
scas
push
push
adc
or
pop
xor
sbb
loop
adc
xlat
push
push
adc
and
pop
aas
and
sbb
sub
sbb
add
test
or
adc
cmp
inc
call
ds
or
add
sub
mov
jmp
(bad)
or
push
or
imul
push
clc
push
out
mov
dec
leave
or
call
push
pusha
mov
sub
xor
dec
jbe
in
sbb
or
popa
retf
dec
leave
push
and
gs
add
sbb
adc
pusha
lods
mov
jmp
retf
shl
mov
cmp
and
adc
inc
adc
cmp
adc
pop
mov
mov
ror
(bad)
sub
add
and
nop
fadd
sub
xor
add
enter
(bad)
test
inc
mov
cld
outs
les
push
test
aaa
push
and
stos
shl
push
inc
fadd
or
inc
cs
xchg
ret
or
movs
jae
rol
dec
sbb
sbb
dec
retf
and
push
mov
call
inc
clc
sbb
adc
mov
inc
inc
out
xor
push
fnstsw
pop
push
fwait
stos
popf
rcr
sbb
jg
je
cmp
jne
dec
cs
inc
push
cdq
and
pop
or
add
test
dec
pop
mov
pop
icebp
or
mov
mov
pop
mov
lods
push
ret
div
dec
jne
icebp
out
(bad)
pusha
jmp
sub
sub
mov
sbb
xor
fld
xchg
fmul
push
pop
jne
lea
nop
imul
fisubr
and
cmp
push
mov
push
or
je
aas
je
add
sub
aaa
jp
xlat
or
push
jmp
sub
pop
xor
jne
add
mov
lea
push
sbb
aaa
jmp
or
sub
loopne
add
jmp
or
je
or
pusha
jge
adc
stos
or
or
ret
sbb
test
sub
mov
and
cmp
mov
call
ja
lods
dec
xchg
fld
popf
dec
popa
stc
and
jo
mov
jae
ins
jl
push
adc
xchg
dec
dec
adc
fwait
jg
fs
push
in
stos
push
or
fwait
push
add
pop
cli
or
scas
push
dec
add
shr
js
movs
mov
clc
mov
std
sbb
inc
out
scas
add
cmp
pop
test
cmp
icebp
test
ret
lock
jecxz
and
push
and
ret
jbe
pop
add
shr
sub
mov
xor
lea
jne
das
sahf
push
inc
pop
mov
jne
pop
jge
sbb
mov
loopne
and
hlt
js
in
jge
aas
hlt
add
fcomi
inc
and
push
mov
add
mov
dec
push
mov
out
mov
mov
in
mov
mov
mov
pop
test
sahf
add
es
repz
add
inc
mov
adc
push
fst
push
push
scas
pop
sbb
mov
(bad)
mov
cmp
add
mov
pop
or
add
or
fcomp
xor
push
inc
push
mov
jbe
or
jo
call
scas
cmp
jg
push
mov
std
xor
cmp
movsx
loopne
add
sbb
fs
daa
pop
nop
mov
in
sub
es
pop
xor
test
nop
repz
test
add
sbb
inc
mov
xchg
adc
or
sahf
sbb
retf
aaa
or
pusha
aas
cmp
push
loope
mov
cwde
movs
loopne
cmp
and
adc
mov
sub
sub
fidivr
ret
mov
loope
sbb
and
jp
cmc
cmp
into
mov
sub
push
adc
or
push
or
push
xchg
mov
mov
daa
jne
push
and
or
lock
lock
mov
jmp
cmp
jl
push
cmp
jg
ins
mov
xor
sub
cmp
xor
cmc
test
lea
js
in
nop
sbb
cmp
mov
or
lea
cwde
call
push
push
dec
call
adc
adc
stos
sbb
(bad)
or
lahf
dec
push
pop
mov
sbb
xor
sub
add
mov
lock
lahf
je
ins
xor
mov
ja
mov
sbb
mov
les
jg
jp
pop
call
or
push
mov
(bad)
jge
(bad)
mov
or
je
test
dec
ret
adc
dec
fidivr
adc
adc
adc
add
add
or
popa
pop
adc
push
mov
(bad)
or
imul
push
(bad)
dec
jl
xchg
aad
mov
jne
xchg
test
cmps
cmp
(bad)
mov
inc
jne
xor
xchg
(bad)
fmul
or
lods
leave
mov
jle
lds
fild
push
dec
mov
rcl
dec
fdivr
mov
pop
cmp
(bad)
je
movzx
data16
push
out
loop
ss
and
mov
pop
ret
xchg
or
shl
mov
cli
aaa
mov
dec
or
pop
stc
shl
test
je
push
sub
fild
push
cmc
push
popa
dec
mov
test
rcl
push
push
push
jns
jmp
push
leave
sub
add
push
aaa
dec
pop
inc
sub
sub
jne
fchs
pop
(bad)
cli
sbb
cmp
je
imul
or
jne
push
push
jl
xor
fiadd
fnstenv
cmp
mov
out
push
adc
cmp
sbb
fist
enter
and
lea
sub
test
add
pop
add
add
in
ret
mov
and
jns
pop
enter
cmp
fld
add
sti
jmp
ins
sub
div
into
xchg
jmp
dec
xor
pop
jle
inc
jne
xchg
je
(bad)
ss
jge
mov
aad
xchg
add
sbb
pop
pop
sahf
push
pop
dec
dec
icebp
(bad)
jl
retf
and
int3
mov
les
mov
inc
test
mov
jne
adc
retf
ds
xor
ins
mov
inc
xchg
or
adc
or
pushf
or
in
adc
vandps
xchg
mov
ja
sbb
pusha
or
leave
and
push
mov
sbb
and
call
loope
mov
jg
push
xchg
xchg
push
mov
jno
ins
add
or
add
sbb
cmp
pop
outs
mov
cmp
cwde
dec
mov
mov
mov
ins
mov
mov
sub
fisubr
push
je
ret
adc
dec
rol
mov
xchg
ret
sub
jne
nop
cmp
loope
xchg
dec
out
mov
ret
inc
js
or
dec
adc
and
mov
cmc
xchg
jnp
push
sbb
outs
retf
movs
cmp
push
jge
fsub
test
dec
fiadd
iret
scas
sub
mov
jmp
mov
mov
call
adc
push
xchg
fild
and
adc
inc
rcl
or
mov
pusha
js
fcmovnbe
push
push
retf
pushf
or
scas
imul
mov
mov
and
jmp
mov
or
mov
add
or
es
dec
rol
loop
jns
jg
in
jge
cmps
mov
mov
xor
cmps
shl
adc
add
test
adc
push
jle
ret
mov
mov
inc
or
pop
verr
dec
push
mov
push
pop
add
push
mov
mov
cwde
sub
inc
shl
out
ret
xor
and
sahf
inc
xor
dec
cmp
pop
pop
(bad)
test
jae
(bad)
inc
clc
push
mov
pop
call
jg
and
mov
loope
pop
sahf
addr16
push
and
neg
retf
push
mov
pop
pop
add
jecxz
fimul
add
add
xor
(bad)
rcr
iret
sub
pop
data16
arpl
cmp
push
fmul
mov
sbb
dec
xchg
pop
or
jl
clc
cmp
and
adc
pop
ds
cmp
(bad)
mov
rol
in
cld
mov
es
ja
sbb
mov
adc
inc
xor
out
mov
cmps
shl
lock
fild
push
sub
cld
in
hlt
jb
ret
jge
mov
mov
fisttp
push
sbb
sub
cmps
inc
and
in
in
shr
adc
mov
inc
xor
stos
sub
aas
push
pop
inc
mov
aam
(bad)
enter
mov
jbe
mul
aam
adc
loopne
je
jmp
adc
xchg
ret
xchg
pop
pop
rol
mov
mov
inc
pop
dec
pop
enter
sbb
pop
ret
adc
sub
adc
dec
mov
inc
push
fcomp
inc
inc
imul
jo
pop
movs
dec
add
jne
xor
test
cmp
or
pop
adc
dec
pop
dec
imul
pusha
cwde
nop
in
es
xor
mov
xlat
loopne
addr16
cmp
pop
inc
mov
push
push
jbe
pop
dec
mov
mul
xchg
mov
pusha
xor
sbb
pop
jns
fldcw
adc
inc
jb
dec
mov
popa
lea
or
mov
mov
rcl
inc
shl
pop
cmp
loope
cmp
add
test
and
cwde
jb
(bad)
clc
jl
and
das
inc
add
cmp
shr
jle
or
pop
sub
rol
jbe
or
sbb
or
add
icebp
cmp
mov
popa
push
push
xor
add
movs
cmp
out
mov
loop
mov
test
cmp
jle
(bad)
mov
push
sbb
xchg
dec
pop
ret
sbb
pfrcpit1
(bad)
fsubr
mov
adc
cs
test
out
sbb
mov
inc
or
ins
stos
popf
and
inc
mov
movs
mov
fisubr
cwde
lock
jae
dec
sub
sub
lahf
pop
jo
test
mov
(bad)
add
inc
cmc
sub
cmc
pop
xor
popa
dec
fdivrp
mov
adc
sbb
pop
push
sahf
and
lea
push
arpl
imul
pusha
adc
jge
pop
mov
dec
in
cmp
jbe
test
and
pop
std
or
loop
aas
(bad)
sub
or
pop
movsx
rol
inc
add
popf
adc
cmp
push
in
lods
or
cs
in
mov
inc
inc
cld
(bad)
shl
mov
sub
mov
(bad)
pop
adc
cmps
aas
push
inc
jmp
pop
cmp
ja
dec
lods
dec
jg
pop
jmp
dec
add
(bad)
adc
dec
or
push
cli
mov
push
movs
add
cmp
add
pop
sub
adc
std
xor
add
rol
ret
aas
fmul
or
inc
out
xor
and
idiv
pop
inc
shr
adc
xchg
and
dec
add
or
or
sbb
jg
cmps
rol
push
loopne
je
mov
pop
mov
xor
dec
or
and
(bad)
idiv
adc
push
mov
inc
test
push
inc
mov
test
popa
cli
mov
fcomip
dec
xlat
ins
jle
add
pop
sahf
sbb
and
(bad)
popf
movs
adc
(bad)
mov
sub
xchg
pop
pop
xchg
or
scas
xor
or
push
or
daa
sahf
rol
hlt
mov
jo
test
jmp
cwde
mov
retf
mov
dec
sbb
inc
addr16
call
xor
clc
push
leave
sub
or
jl
jg
cmp
fcom
jmp
mov
xor
jl
(bad)
dec
(bad)
dec
repz
mov
inc
rol
fist
mov
mov
dec
sub
or
mov
jg
xchg
xor
loop
mov
push
push
sbb
ds
fnstcw
sub
add
fs
or
adc
jmp
cmp
jne
sub
lds
ja
cld
enter
jne
in
add
inc
push
sbb
jmp
push
popf
sub
push
xchg
dec
add
xchg
push
push
leave
pusha
inc
push
rol
loope
jecxz
add
icebp
loopne
xchg
rcl
or
jne
lods
adc
add
dec
jg
push
bnd
xor
push
jmp
cmp
dec
or
dec
add
das
jmp
inc
and
in
cmp
cmp
adc
loope
mov
cmp
icebp
fild
retf
fdivr
jg
mov
mov
or
and
push
aam
mov
mov
cmp
pop
push
clc
pusha
or
pop
fsubr
lea
adc
add
ror
sbb
adc
imul
inc
push
mov
mov
inc
cmp
mov
xor
addr16
ficom
fnstsw
cmps
push
push
add
ret
push
xor
pop
nop
xor
and
pop
sub
cmps
imul
xor
sub
or
push
push
inc
mov
mov
mov
imul
mov
scas
xchg
sar
add
outs
dec
test
lock
inc
sbb
dec
(bad)
push
call
sbb
xchg
and
inc
inc
push
and
or
push
push
and
add
scas
in
xchg
and
dec
scas
popf
ja
push
adc
inc
popa
jo
and
jae
in
adc
dec
jns
push
jp
jle
test
jge
cmp
jle
push
jne
pop
adc
mov
add
adc
fbstp
mov
and
add
adc
icebp
add
pushf
imul
lea
mov
dec
aam
mov
sbb
iret
inc
push
dec
test
add
pop
cmps
cmp
dec
popa
imul
cmp
cmc
retf
les
rcr
add
inc
div
movs
scas
in
sbb
cmp
push
(bad)
addr16
xor
pop
sub
push
leave
test
push
pushf
mov
bound
cmp
mov
add
mov
movs
pop
push
aaa
jne
sti
bound
push
dec
rcl
fs
jmp
pop
nop
int
fbstp
(bad)
dec
jl
adc
cmp
or
jo
push
or
pop
add
push
add
adc
call
push
push
int3
push
imul
push
retf
(bad)
add
rcl
xchg
sub
rcr
xchg
fst
add
test
ins
loop
cmp
push
xchg
or
xchg
int
repz
cli
push
cmp
dec
sub
sub
xchg
xchg
loope
dec
xor
ss
clc
dec
jecxz
std
mov
mov
inc
push
and
sbb
loope
push
pushf
jbe
jno
mov
adc
jl
cli
ins
jb
or
cmp
xchg
not
aas
pop
push
cwde
dec
andps
nop
inc
adc
mov
fiadd
and
into
inc
js
inc
cmps
sbb
jp
call
mov
ret
fist
sahf
push
xor
add
mov
pop
cmp
or
fimul
mov
mov
ja
cmp
mov
push
loopne
pushf
pop
xor
mov
inc
or
sbb
pop
jo
mov
cmps
cmp
(bad)
xor
jmp
mul
xchg
cmp
sbb
mov
adc
je
leave
jmp
out
mov
xor
or
add
mov
mov
movs
mov
inc
sbb
dec
rcr
(bad)
jp
jg
mov
movs
pop
cmp
jbe
xchg
movs
test
mov
cdq
sahf
fistp
je
jmp
xchg
repz
ror
fcomp
fcmovb
and
mov
pushf
sub
xchg
rol
mov
imul
int3
sbb
fdivp
ins
int
xor
int
addr16
mov
inc
fild
in
into
push
mov
aas
push
mov
pop
or
pop
sub
ret
sbb
test
push
std
iret
cmp
adc
push
add
in
push
aaa
add
jl
stos
adc
rcl
jp
xchg
js
and
inc
repz
sub
push
jne
jmp
add
push
mov
inc
cmp
jne
inc
inc
cmp
jb
lods
or
jo
je
inc
add
push
rcl
adc
mov
dec
push
mov
ds
fnstsw
add
cld
push
call
jle
push
(bad)
adc
push
xor
adc
dec
push
inc
cwde
loopne
or
rcl
ror
jne
loopne
aad
fimul
xchg
mov
adc
scas
movs
loopne
into
add
adc
push
(bad)
cmc
push
pop
inc
das
cmp
imul
clc
jb
sub
add
add
xor
add
js
cwde
jnp
or
lds
or
retf
and
and
(bad)
in
ss
call
es
adc
pop
mov
xchg
dec
lods
test
test
fcom
adc
cwde
inc
cmp
sar
dec
jecxz
jae
inc
adc
test
es
sub
push
ins
xor
jnp
in
inc
ret
repnz
mov
push
add
pushf
mov
test
and
lahf
pushf
jge
mov
fnsave
icebp
jbe
push
add
mov
adc
nop
jl
outs
pop
add
pop
test
mov
cmc
mov
xchg
and
loope
push
lds
jno
or
push
xor
call
inc
mov
nop
cmc
inc
lock
dec
jae
iret
push
test
sub
dec
dec
mov
cmps
aaa
sub
push
cmc
pop
neg
add
mov
lods
(bad)
loopne
into
or
sub
jbe
retf
or
inc
sbb
je
ret
je
inc
xor
mov
pop
and
xor
jmp
add
sahf
mov
icebp
in
cmp
repz
hlt
mov
mov
jbe
shl
add
push
in
dec
or
fisubr
push
pop
xor
xchg
jo
in
push
or
ror
adc
add
mov
test
or
outs
add
push
cmc
lds
adc
sub
fwait
sbb
bound
aaa
mov
sub
aad
push
xor
mov
or
pusha
inc
scas
movs
and
loop
dec
mov
pop
dec
mov
jp
xor
daa
enter
rol
dec
fwait
cmc
(bad)
pop
pop
pop
fcompp
cmp
rol
add
inc
add
inc
sbb
ins
(bad)
neg
in
jnp
dec
inc
cmp
xchg
inc
mov
pop
pop
mov
(bad)
mov
inc
mov
push
xor
(bad)
pop
shl
cwde
movs
test
push
out
mov
sbb
add
movs
add
mov
aaa
or
or
cmp
pushf
jg
sbb
shl
xor
and
sti
or
add
cmp
dec
xchg
rcr
adc
push
lahf
cmp
ja
daa
dec
cld
dec
inc
call
cld
adc
jae
xor
push
pop
mov
sar
inc
je
retw
pop
(bad)
push
xor
jo
stos
je
dec
sub
int3
or
mov
sub
mov
push
(bad)
pop
add
sub
or
add
push
pop
push
xor
cmp
xor
test
adc
xor
movs
jecxz
cs
mov
push
add
pop
or
sbb
fcmovnu
mov
ins
cmp
mov
das
jns
mov
push
mov
xor
dec
stos
pop
je
xor
pop
cmp
loop
inc
and
xchg
pop
shr
pop
mov
add
push
sbb
push
ja
test
sbb
or
pusha
stc
pop
mov
pop
and
pop
je
cmp
je
out
outs
mov
jl
es
je
cmp
je
dec
add
sbb
daa
cmp
and
je
cmp
and
out
mov
jge
adc
add
mov
jne
dec
shl
add
sub
xchg
cmp
mov
dec
jp
and
mov
or
je
jbe
movs
pop
xor
(bad)
adc
int
stos
push
adc
iret
mov
in
cmp
adc
(bad)
mov
sbb
mov
adc
les
xor
test
inc
dec
les
shl
dec
(bad)
imul
inc
sub
mov
inc
xor
sbb
int3
call
inc
loopne
cmp
or
mov
fcom
int
dec
aam
sar
repz
aam
jb
add
aam
add
or
rol
dec
pusha
mov
push
or
neg
sbb
sub
neg
sub
dec
sub
int3
les
fistp
jne
and
inc
lea
call
sar
xor
in
loopne
cli
push
nop
add
mov
(bad)
inc
leave
xor
cmp
sbb
movzx
or
push
fs
mov
xchg
outs
aas
mov
add
dec
outs
or
das
adc
test
sub
add
pop
mov
cmp
jg
or
adc
xor
add
cld
cmp
jge
js
add
inc
test
outs
sbb
sbb
xchg
and
fcomp
pop
lods
nop
pop
ret
shl
shl
or
outs
outs
adc
(bad)
je
inc
or
mov
inc
shr
push
sbb
pop
lock
fmul
fyl2xp1
outs
mov
test
dec
adc
push
or
ins
adc
pop
and
push
out
or
sahf
or
mov
dec
and
ja
inc
pushf
mov
mov
jae
cmp
into
pop
clc
iret
or
dec
sub
push
(bad)
push
sbb
inc
test
push
aam
hlt
mov
jge
pop
imul
ds
add
repnz
lods
(bad)
inc
stc
(bad)
jae
aad
push
or
and
movd
add
sbb
add
jmp
xor
add
or
cmp
rol
cmc
add
push
dec
and
jb
sub
imul
adc
mov
pop
shl
cmps
sub
adc
push
adc
xor
pop
or
(bad)
(bad)
stc
cmp
sbb
sbb
dec
jp
jecxz
xor
jne
xchg
(bad)
cmp
pop
add
fstp
adc
push
sbb
icebp
jo
adc
inc
mov
lods
add
add
pop
xchg
aas
push
mov
or
adc
or
inc
js
mov
mov
fs
pop
push
push
push
pop
dec
dec
xor
push
inc
sub
retf
inc
add
and
fs
dec
pusha
gs
aad
hlt
xchg
mov
push
sti
adc
hlt
push
psrlw
mov
add
inc
xor
dec
and
add
rol
add
xchg
cwde
cmp
adc
aam
popa
mov
jle
inc
sbb
xchg
dec
scas
js
test
xchg
retf
pop
jo
xor
mov
iret
inc
mov
or
sbb
ins
dec
sbb
inc
shl
sub
or
imul
jp
ret
xchg
jmp
stos
push
dec
and
leave
dec
xor
or
mov
mov
push
dec
dec
mov
(bad)
adc
mov
pop
xor
pop
cmp
adc
popa
mov
jmp
lea
or
ret
push
sbb
push
mov
cmps
jg
loope
cwde
xor
push
jo
mov
or
dec
ins
adc
ds
pushf
pusha
push
and
out
pop
lock
les
aaa
jmp
jmp
outs
mov
ret
mov
jmp
and
dec
(bad)
mov
adc
rol
mov
lods
sbb
fistp
les
add
mov
sub
pop
cld
cmp
dec
push
push
into
add
inc
adc
inc
adc
jne
xchg
push
mov
sub
push
pop
test
add
add
dec
adc
test
nop
mov
test
push
out
sbb
jle
lods
or
mov
mov
(bad)
cmp
lds
mov
xor
pop
(bad)
enter
cmp
scas
fsubr
mov
add
enter
shl
scas
mov
retf
dec
movzx
xor
xchg
cld
ror
enter
push
or
or
jmp
pusha
push
jnp
clc
sbb
adc
sti
adc
mov
xor
pop
ja
push
push
add
lea
xchg
mov
cmp
sbb
mov
fidivr
push
lock
sub
stos
xor
shl
aam
movs
not
rcl
mov
movs
rol
sub
nop
(bad)
and
pop
cmp
pop
setl
adc
adc
sbb
mov
shl
mov
and
sbb
mov
mov
dec
jno
and
mov
mov
or
int
hlt
pop
lea
fnstsw
mov
nop
add
and
aad
mov
mov
mov
dec
add
pop
lods
add
inc
scas
movs
add
or
inc
(bad)
iret
adc
inc
jbe
cmp
and
add
rcr
test
aam
daa
or
adc
jne
jne
pop
xor
dec
mov
jne
add
mov
push
ins
out
lods
cmp
jne
nop
test
cmp
mov
ror
aam
push
je
add
inc
rol
sub
inc
test
push
add
stos
and
cmp
push
sub
xor
ret
and
retf
add
sbb
add
push
loopne
call
mov
and
fstp
xchg
outs
pushf
loopne
repz
adc
jno
fsub
adc
fcomp
pusha
sbb
lods
or
add
dec
loope
inc
sbb
icebp
bound
stos
xor
rol
fs
leave
add
cwde
mov
push
lea
or
aas
jmp
loopne
jb
je
nop
rcl
mov
mov
inc
inc
cmp
mov
ret
jne
and
out
and
sar
sbb
mov
cwde
retf
pop
push
lock
dec
div
mov
adc
pop
or
sub
test
(bad)
out
aam
in
sub
je
mov
call
xor
jne
push
or
jmp
neg
sbb
and
lea
xor
push
adc
and
or
sub
mov
adc
retfw
mov
add
dec
or
jmp
inc
stos
test
adc
mov
mov
mov
lods
jmp
sub
pusha
and
(bad)
sbb
add
rcl
pop
add
push
call
cmp
mov
pop
lea
call
add
add
mov
cmps
xor
pcmpeqb
ja
aaa
adc
call
or
sbb
std
popa
push
(bad)
mov
adc
cmp
xor
test
pop
je
cmps
mov
sti
jmp
outs
test
xchg
or
retf
setle
ins
or
inc
cs
in
(bad)
into
scas
adc
aad
jbe
clc
mov
mov
lea
movs
daa
push
or
inc
test
into
jne
pop
mov
cmp
or
outs
dec
adc
dec
xchg
or
inc
mov
stc
movs
mov
pusha
sub
push
pop
or
mov
push
popf
mov
xlat
imul
push
add
jecxz
or
jp
mov
mov
adc
rol
push
pop
jno
xchg
ret
outs
push
sbb
push
or
push
push
test
mov
push
xchg
jne
mov
sahf
in
xor
lea
mov
mov
(bad)
neg
rol
jne
iret
and
mov
mov
or
pop
call
pop
(bad)
les
pop
or
pushf
push
inc
push
inc
pop
adc
cmp
jae
nop
or
int
icebp
mov
jne
das
add
pop
retf
lea
adc
(bad)
jo
push
syscall
std
sbb
sahf
inc
(bad)
xor
in
and
dec
scas
push
mov
sub
pop
movs
enter
loopne
cwde
fwait
(bad)
in
int3
and
add
enter
xor
mov
add
shl
in
dec
jne
pop
sbb
pop
jge
mov
mov
in
or
push
pop
lea
sub
jne
xor
or
shl
popa
and
inc
dec
popf
inc
mov
nop
rcr
stc
cmp
or
or
xchg
pop
mov
dec
or
sbb
ror
rol
mov
and
stos
dec
push
repnz
icebp
int3
sar
add
movs
cs
push
and
and
mov
es
sub
push
add
jo
bound
setl
pushf
push
daa
and
sub
aas
mov
and
les
sub
cdq
mov
iret
neg
es
dec
or
push
data16
pop
cli
adc
jl
sti
sub
mov
pop
shr
outs
or
movs
cmp
std
add
add
ret
adc
push
or
outs
sbb
and
push
lods
add
hlt
push
ins
lods
xchg
lods
gs
pop
sub
shl
and
ret
xor
mov
add
lds
in
add
cmps
adc
adc
sub
adc
and
cmc
jecxz
ins
ins
icebp
sub
adc
cmp
mov
je
repz
adc
add
shl
xor
les
mov
xor
add
push
xchg
aaa
push
pop
cmp
fisttp
inc
mov
jbe
add
and
cmp
pusha
movs
xor
dec
or
cdq
mov
jmp
jle
cmp
test
repz
cld
rcr
pop
mov
push
xor
sbb
stos
push
clc
repnz
lods
pop
ss
jns
not
add
imul
add
hlt
push
push
je
sbb
js
sbb
sbb
push
clc
add
push
mov
and
jp
cld
lds
xor
icebp
add
xchg
lock
adc
cdq
idiv
sub
inc
test
fiadd
add
lock
lea
arpl
neg
xor
popf
mov
xlat
daa
add
mov
mov
jmp
nop
(bad)
xor
aam
pop
jmp
dec
add
es
sbb
int
pop
cmp
cwde
repz
add
add
pop
cmps
sbb
adc
sub
adc
adc
shl
dec
jmp
mov
(bad)
dec
dec
or
push
ins
call
ret
or
xchg
jmp
adc
and
mov
(bad)
adc
sub
push
and
pusha
out
pop
pop
jmp
call
rol
jbe
push
sbb
ret
inc
or
inc
pop
je
jle
push
enter
jmp
jns
lock
adc
shr
adc
push
(bad)
and
jns
in
mov
mov
inc
bound
jne
(bad)
sbb
fiadd
jb
mov
(bad)
(bad)
(bad)
fiadd
jmp
lock
icebp
movs
dec
add
mov
lods
and
cwde
fwait
xchg
cdq
fcom
cmp
xchg
or
pop
sbb
push
lods
or
push
cmp
add
push
adc
adc
or
and
pusha
lahf
fadd
sub
aas
(bad)
aam
xor
dec
pusha
in
push
loopne
mov
sub
dec
shr
add
adc
xchg
push
nop
pop
push
aas
add
and
or
cwde
popf
or
or
and
inc
and
nop
nop
or
or
inc
mov
movs
push
xor
mov
imul
ret
nop
and
xor
or
pop
jb
mov
push
inc
repnz
adc
or
(bad)
stos
push
in
je
cmp
jne
rol
mov
mov
daa
stos
jns
retf
add
push
scas
dec
sbb
adc
std
jecxz
pop
mov
push
mov
pop
adc
sub
push
or
adc
sub
cmp
mov
sub
mov
pushf
xchg
rcr
test
test
gs
mov
push
mov
inc
movs
dec
fcom
in
enter
call
push
inc
rcl
xor
fdiv
leave
loopne
cld
fwait
(bad)
sti
pop
not
inc
and
jg
lahf
test
out
cmp
mov
xor
xchg
jmp
nop
mov
in
xlat
ds
leave
or
or
bound
ins
shr
sbb
or
or
jge
sti
cmp
jg
fwait
outs
movs
in
lahf
or
push
out
push
inc
add
sbb
dec
shl
mov
mov
jbe
fimul
pop
pop
movs
jmp
sbb
add
mov
rol
lea
adc
mov
mov
ret
adc
cmp
pop
sbb
add
arpl
push
push
push
push
and
cld
outs
fsub
fimul
mov
push
data16
push
adc
(bad)
into
inc
clc
lock
jns
push
sub
add
(bad)
iret
xchg
sub
neg
xchg
(bad)
es
adc
push
sub
fs
jo
pop
mov
add
lahf
inc
das
int
dec
cli
gs
add
xchg
mov
sbb
push
xchg
fidivr
pop
or
cmc
arpl
dec
pushf
adc
mov
xor
adc
inc
or
lahf
inc
imul
imul
dec
cmp
test
mov
lar
push
sub
ins
inc
hlt
dec
xor
mov
push
popa
and
pop
sbb
push
cli
loopne
add
cmp
and
sub
pop
(bad)
addr16
or
outs
inc
(bad)
and
or
add
push
push
adc
sbb
jle
shr
daa
jae
add
pop
mov
or
frstor
inc
imul
retf
and
push
and
sub
mov
adc
sbb
push
sar
mov
jae
add
pop
sub
sub
pop
mov
outs
test
sbb
sbb
jno
or
xchg
sbb
add
jg
leave
sbb
leave
int
(bad)
jbe
inc
in
sahf
add
cmp
jo
pop
sub
sbb
rcr
inc
and
lock
and
or
xor
sbb
mov
sbb
lea
push
adc
sub
shl
inc
popf
sbb
sub
(bad)
add
push
inc
int3
movlps
jg
pop
cmp
sahf
cmp
add
test
and
fwait
sbb
sub
add
in
dec
lds
cmp
test
test
lea
mov
jle
pop
and
(bad)
and
adc
cli
add
ss
mov
add
dec
cmp
je
and
or
mov
inc
add
push
add
pop
rol
adc
adc
sub
clc
or
and
loop
adc
xor
add
pop
or
inc
enter
add
repnz
or
cld
or
nop
pop
js
loopne
sub
pop
sub
pop
adc
cld
jns
cmp
cld
sub
or
aas
or
or
js
stos
nop
mov
js
sub
add
in
add
mov
sub
or
mov
or
test
jl
inc
push
nop
js
js
or
sbb
jl
cmp
push
mov
sysenter
mov
jne
pop
ds
push
add
add
dec
and
(bad)
jae
shl
adc
pop
sub
sbb
sbb
mov
dec
retf
daa
mov
add
add
add
push
mov
add
imul
or
int3
js
enter
or
int3
add
test
int3
jae
leave
test
pop
int3
jae
xchg
pushf
pop
js
xchg
in
stc
(bad)
fisttp
pop
or
in
nop
adc
add
pop
int3
xchg
sub
sbb
nop
js
js
or
push
nop
mov
or
leave
dec
push
stc
inc
or
leave
or
leave
add
iret
js
mov
js
mov
xor
add
fs
js
int3
push
xor
adc
pusha
mov
inc
mov
add
dec
inc
int
mov
add
call
cmp
push
or
sbb
lds
jmp
movs
dec
or
dec
and
dec
sar
in
sbb
cld
push
sbb
hlt
nop
or
lods
sbb
fsubp
push
rcl
mov
or
inc
sti
fcomp
aaa
mov
or
fst
fwait
push
cmp
enter
scas
ins
int3
int
frstor
xchg
push
add
inc
arpl
stos
inc
mov
fistp
pop
xchg
xor
sub
add
cmps
test
aam
add
xchg
cmp
nop
cli
aaa
pop
rol
adc
adc
data16
dec
or
nop
inc
xor
clc
int
ins
inc
xchg
dec
sbb
and
loopne
inc
xchg
test
cmp
out
xchg
mov
sub
pop
out
js
sbb
jl
push
sbb
push
push
push
push
dec
or
mov
mov
leave
inc
adc
aaa
aam
xor
imul
sbb
cmovle
jne
sbb
and
(bad)
test
cmp
or
mov
sbb
or
push
push
push
push
call
pusha
sub
sar
inc
aaa
adc
push
and
xor
add
rol
push
push
addr16
movs
xlat
mov
pop
add
xchg
sbb
jmp
push
add
or
stos
or
fs
(bad)
rol
xor
and
xchg
shl
inc
js
sbb
test
jnp
and
fadd
sub
jl
iret
(bad)
out
mov
or
movs
call
push
push
jecxz
dec
push
sbb
fmul
add
sahf
adc
clc
je
mov
and
jecxz
sub
out
call
add
fst
push
or
adc
ret
ret
in
inc
out
push
xor
lock
pop
scas
and
je
bound
or
sbb
shr
lahf
push
out
push
lds
popa
ja
push
xchg
jle
(bad)
sar
(bad)
and
xchg
mov
add
mov
nop
mov
mov
xor
mov
rcr
mov
sahf
pop
mov
pop
inc
jns
cmp
cmps
lods
add
addr16
adc
div
jmp
in
inc
outs
pop
je
das
sub
inc
pop
add
pop
mov
jmp
aaa
lahf
push
inc
mov
mov
push
cmp
ret
inc
sbb
xor
adc
xor
jge
mov
jo
and
mov
imul
or
pop
xor
cmp
jp
fmul
add
ret
dec
enter
add
xor
xor
push
inc
int3
jns
imul
jbe
inc
rcr
jg
mov
fsubr
push
dec
(bad)
add
mov
(bad)
repz
ja
cld
ret
adc
or
popa
loopne
jo
test
mul
pop
mov
js
dec
lea
in
sbb
xchg
add
in
sbb
mov
add
or
add
add
and
add
push
push
push
nop
call
lock
xchg
xor
sbb
adc
ins
ret
jne
push
pop
(bad)
mov
test
jmp
test
mov
js
sbb
xchg
pop
dec
sub
in
scas
and
inc
in
inc
rcl
pop
pusha
cmp
push
push
ins
cmps
in
ins
fisttp
cmp
jae
or
push
adc
mov
aas
mov
clc
fst
ss
(bad)
shl
jae
add
pop
js
adc
push
push
repz
pop
and
call
sbb
or
imul
loopne
sbb
fdiv
imul
data16
popa
nop
and
cld
or
daa
nop
mov
adc
add
dec
pop
inc
mov
push
dec
mov
pop
add
std
inc
les
or
jo
push
pushf
out
sti
add
xchg
(bad)
pop
pop
or
cmp
lods
cdq
bound
adc
inc
mov
jmp
cmp
pusha
and
lods
or
in
sub
dec
fisub
adc
adc
dec
add
add
repz
fisttp
cmp
jg
cmp
jl
add
sbb
push
pop
or
adc
pop
add
jl
outs
and
mov
rol
jb
cmp
adc
push
push
dec
(bad)
outs
dec
add
lahf
push
fistp
push
jne
out
inc
bound
shl
arpl
dec
or
mov
or
and
pop
push
push
or
idiv
pop
cs
lea
add
sub
push
ins
ret
push
mov
and
xor
jne
cmp
adc
pusha
inc
adc
test
add
jl
loopne
xor
lods
aam
in
(bad)
or
add
ret
jmp
hlt
or
imul
and
xchg
dec
xlat
and
push
enter
or
in
sbb
int3
push
inc
inc
cmp
test
add
jnp
cmp
cli
imul
mov
add
sbb
or
inc
bnd
sub
adc
jle
xor
clc
lock
cmps
test
or
pop
hlt
dec
jmp
add
cmc
imul
mov
jmp
push
cmp
sbb
or
sti
gs
(bad)
int3
jnp
in
jg
sbb
mov
sub
imul
cmp
sbb
rcr
inc
and
inc
add
js
pop
jg
jns
inc
loopne
loop
pop
fmul
jg
sub
sbb
call
jno
dec
jecxz
sub
push
sbb
xchg
add
xchg
inc
xor
push
out
int
sbb
xor
or
jl
inc
add
adc
les
mov
(bad)
stos
jne
push
mov
lea
ficom
jp
add
jl
xor
and
iret
jmp
inc
xor
sub
js
lock
xor
and
lds
test
and
pop
repnz
cs
jo
and
or
pop
or
adc
test
or
pop
sub
pop
aaa
adc
inc
adc
in
mov
inc
aas
sub
movs
sub
sub
rcl
cwde
mov
add
jnp
and
dec
push
dec
xchg
aad
jmp
push
fs
movs
fsub
xchg
sub
mov
pop
xchg
sub
adc
adc
fs
xor
clc
cmps
push
jne
bound
inc
push
sti
in
add
pop
add
mov
push
add
or
and
fst
sub
je
je
inc
inc
inc
(bad)
gs
xchg
lea
add
js
or
movs
dec
inc
rol
mov
inc
pop
movs
sub
cvtps2pd
dec
adc
push
adc
push
or
in
dec
dec
mov
push
arpl
mov
jno
int3
ret
ins
inc
adc
mov
add
xchg
or
ds
arpl
cmp
pop
fidivr
push
inc
inc
sbb
stc
inc
pop
xor
or
dec
ins
loope
loope
and
mov
scas
sbb
xor
dec
push
sub
push
xor
mov
adc
fisubr
cmp
or
push
clc
shl
je
xchg
cmp
mov
(bad)
scas
ror
movs
xor
pusha
clc
jg
add
sbb
retf
lea
add
dec
push
and
inc
push
test
dec
mov
xor
rol
div
lahf
adc
xchg
cmp
add
push
pop
push
cmp
cmp
add
cmp
xor
nop
cmp
mov
push
fsub
add
(bad)
neg
sbb
add
inc
xor
mov
or
and
push
jle
jbe
dec
push
dec
out
dec
sbb
mov
pop
push
out
cdq
pop
fs
or
xor
pushf
add
xor
push
mov
inc
pop
push
movs
inc
cs
dec
inc
mov
or
data16
jp
and
rcr
cmp
or
adc
push
push
jmp
sbb
push
and
adc
rcr
scas
dec
sbb
mov
(bad)
push
mov
je
sbb
imul
pusha
bound
jl
sub
sar
stos
push
stos
mov
sub
je
ja
cmp
adc
test
jno
xor
mov
cmc
test
sub
cwde
js
loop
adc
add
cmp
and
int
jl
sub
jmp
or
adc
xchg
pop
mov
pop
sbb
adc
les
jmp
je
cmps
(bad)
sbb
push
and
push
pop
call
pop
shl
pop
cmp
sub
pop
aas
ja
xor
test
repnz
push
adc
mov
aas
and
and
or
adc
xor
or
push
xor
inc
outs
or
test
(bad)
mov
cmp
sbb
sub
or
cwde
inc
sub
mov
lea
call
gs
popa
aad
adc
or
aaa
xor
jne
pusha
adc
push
les
push
mov
cmp
rol
sub
add
mov
and
and
mov
or
jmp
(bad)
arpl
push
inc
xor
call
mov
and
pop
or
sub
rcl
inc
and
or
add
mov
cwde
mov
mov
dec
ret
cmp
pop
es
adc
jae
dec
fcomp
push
lea
pop
cmp
mov
leave
mul
pop
arpl
in
xchg
stc
sbb
jb
pop
jge
or
rcl
jno
and
adc
xchg
mov
(bad)
mov
push
jmp
enter
mov
or
dec
inc
sbb
push
je
lods
ret
das
mov
jne
mov
popa
dec
sub
pusha
jmp
add
stos
mov
xchg
inc
pop
jne
sub
mov
add
dec
clc
leave
fwait
or
mov
popa
or
lahf
bound
xchg
and
loop
sub
fcom
push
push
mov
mov
mov
inc
pop
enter
push
sbb
adc
mov
and
sbb
and
or
sar
jecxz
adc
addr16
(bad)
lds
pop
loope
lods
and
sub
mov
dec
or
jo
and
adc
cmp
adc
mov
out
xlat
mov
cmp
jge
pop
mov
cmp
arpl
adc
jge
sbb
mov
mov
je
mov
fsubr
addr16
jge
test
pop
and
push
enter
pop
rcr
push
aaa
xor
and
je
ins
ins
xor
mov
pop
repz
fwait
sub
pop
js
jne
sbb
arpl
xor
xchg
or
push
movs
add
les
pop
in
dec
inc
rcr
push
jb
jb
jae
or
jp
sbb
mov
xchg
xor
push
or
pusha
sbb
call
loopne
dec
je
jbe
and
and
sub
xchg
or
jmp
push
pop
test
push
push
or
inc
adc
adc
adc
dec
mov
pop
gs
ss
lock
and
xor
sub
push
cmps
popa
loop
or
dec
mov
mov
pop
outs
cmps
xor
adc
ins
nop
fcmovbe
inc
aaa
(bad)
sub
or
add
mov
add
xor
faddp
push
xor
loope
push
and
sub
xor
in
movs
jno
push
dec
and
call
add
push
jbe
and
mov
xor
sbb
pop
mov
adc
adc
xchg
rcl
je
adc
lea
push
outs
push
push
cld
adc
adc
adc
mov
movs
call
ret
dec
sub
mov
jl
ss
in
jns
scas
add
mov
rcl
movs
pop
jle
push
dec
fwait
add
dec
mov
cmp
adc
stc
or
int3
sub
pop
push
jne
gs
(bad)
out
ja
mov
jne
pop
movs
fcmovne
call
add
push
mov
cmp
sbb
call
or
jmp
inc
mov
xor
sbb
iret
nop
fcomp
clc
setl
fistp
adc
sub
sub
cmp
test
add
out
dec
sub
and
dec
add
dec
sahf
and
cli
mov
dec
sbb
pusha
add
push
jo
imul
mov
es
cmp
pop
sbb
adc
pop
inc
add
sbb
sbb
and
sbb
pop
repnz
xor
sbb
mov
sbb
or
push
and
jno
sbb
pop
in
adc
sbb
sbb
inc
inc
cs
sbb
add
sbb
inc
or
outs
and
dec
sbb
mov
inc
cmp
push
xchg
dec
rcr
push
and
xor
rcl
xchg
mov
lock
sub
lock
pop
sub
lea
adc
leave
adc
adc
cdq
ss
jg
sbb
leave
in
sbb
jle
xchg
aas
mov
or
pop
pop
push
cwde
dec
aam
pop
(bad)
dec
call
adc
dec
or
sbb
inc
push
adc
add
icebp
push
add
mov
add
cmp
out
mov
push
xchg
rcl
xor
push
(bad)
adc
test
stos
add
rol
mov
mov
cmp
dec
call
or
popf
movs
cld
cmp
add
xchg
xor
dec
inc
dec
out
dec
mov
test
fwait
push
add
mov
mov
xor
repz
adc
xchg
call
sub
jo
aas
pop
push
adc
sbb
lods
mov
xor
push
add
jo
cmp
pop
mov
jo
push
inc
cmp
rol
or
inc
cmp
xchg
or
jae
shl
scas
imul
out
(bad)
and
fidivr
sbb
or
and
or
lods
add
jb
mov
xchg
gs
call
and
or
cmp
imul
adc
push
ret
jge
in
movs
ret
cmps
and
and
jns
adc
mov
xor
pop
pop
inc
imul
cdq
mov
mov
je
xchg
dec
add
cld
push
add
push
sahf
jp
movs
pop
sub
mov
fistp
pop
ds
push
dec
movs
push
aam
lods
std
pop
add
pushf
push
add
add
pop
sub
pusha
(bad)
xor
inc
ror
push
or
or
push
pop
sub
adc
or
push
push
cmp
icebp
stos
(bad)
sub
sbb
push
xor
mov
adc
jbe
pop
out
js
pop
or
xchg
push
xor
xor
push
cmp
aaa
xchg
ja
push
and
mov
mov
rol
sub
or
xor
xor
jbe
jnp
je
or
jecxz
and
add
push
push
pop
sbb
mov
mov
jno
ret
and
dec
xor
pop
lods
inc
adc
and
pushf
fiadd
push
aad
xor
add
pop
or
add
adc
icebp
push
sub
pop
add
and
je
popa
and
adc
imul
and
inc
and
dec
xor
xchg
test
shr
or
sbb
adc
dec
mov
stos
iret
pop
xchg
addr16
cmp
lds
sub
aam
push
pop
push
aam
push
push
sub
mov
cmp
cmp
cmp
add
sub
dec
push
adc
add
lods
or
enter
mov
loopne
inc
mov
in
mov
loopne
retf
loopne
cmp
jb
cmp
int3
xor
push
jmp
xchg
movs
xchg
repnz
pop
cmp
jb
in
sbb
adc
dec
loop
inc
sub
mov
cdq
nop
adc
inc
xor
inc
mov
lds
inc
push
and
in
lds
inc
mov
nop
pop
jb
inc
add
test
inc
inc
adc
inc
cs
nop
adc
or
push
and
push
scas
dec
popa
pop
xor
or
mov
cmp
sbb
inc
js
scas
jno
pushf
test
repz
dec
dec
ins
(bad)
cmp
test
or
dec
in
adc
test
rcr
leave
adc
sbb
xchg
mov
shr
sub
and
ret
pop
push
sbb
popa
pop
fcom
enter
hlt
and
and
inc
push
dec
test
mov
cmp
cmp
je
pop
inc
push
dec
jns
jb
push
call
lods
adc
ss
je
xchg
loope
cmp
pop
test
push
mov
movzx
imul
push
ins
cmp
adc
jecxz
mov
pop
mov
push
push
arpl
mov
jg
sbb
jo
push
adc
mov
arpl
fisttp
or
sahf
icebp
lock
add
sbb
stos
dec
repz
push
enter
adc
sub
pop
data16
mov
add
loopne
cmp
ret
repz
sub
push
dec
ret
sub
inc
fsub
pop
sub
add
push
and
in
pop
add
inc
sbb
push
dec
mov
mov
add
xchg
or
push
imul
retf
xor
int
imul
sub
clc
mov
or
cmp
sbb
(bad)
add
sbb
test
or
mov
and
fcmovne
push
inc
xor
ins
push
push
adc
sub
jle
cdq
mov
(bad)
push
js
inc
or
repnz
inc
inc
(bad)
(bad)
retf
add
inc
sub
adc
leave
loope
stos
dec
test
out
dec
cdq
rcl
cmps
sub
jbe
retf
dec
mov
imul
pop
xor
mov
push
mov
lods
in
push
push
dec
call
mov
xor
ret
inc
cmp
jo
repz
test
xlat
pop
test
xor
mov
mov
jg
retf
rol
je
mov
and
add
int3
adc
or
push
fs
add
add
cdq
and
nop
mov
lods
das
in
xchg
leave
mov
xchg
stos
es
mov
adc
test
enter
add
jbe
mov
pop
hlt
fimul
gs
xor
and
xor
pop
mov
shr
lds
(bad)
push
adc
add
mov
js
xor
push
or
sbb
ja
mov
add
sbb
jg
ins
xor
inc
xchg
mov
xor
xchg
push
push
or
jmp
shr
fs
jge
jnp
ss
jmp
cmp
rcl
xchg
mov
outs
dec
lea
pop
lahf
push
add
aaa
adc
mov
push
push
push
dec
sbb
popa
jge
rcl
lock
loope
push
adc
inc
or
push
js
adc
fst
test
mov
adc
xor
and
mov
fisttp
rol
push
hlt
adc
stc
jmp
std
mov
dec
mov
push
mov
call
sbb
adc
mov
push
mov
xor
repnz
cwde
pop
nop
nop
push
in
fdivr
add
jl
jae
cmps
std
es
lods
pusha
je
jnp
cmp
fs
lahf
push
dec
inc
push
push
push
inc
cmps
in
sahf
inc
xor
and
xor
in
retf
and
add
jo
sub
ins
sbb
pop
pop
mov
dec
mov
cmc
mov
and
add
dec
cli
ins
pop
jle
in
push
call
test
dec
sbb
nop
aaa
add
leave
dec
mov
aas
mov
mov
inc
inc
mov
push
test
pusha
mov
les
shr
push
and
pop
and
adc
inc
sub
xchg
sub
and
ins
mov
pop
jns
push
jb
jnp
or
es
jo
lods
loopne
aas
jle
or
xchg
jne
cmp
in
dec
mov
cmps
push
sbb
push
xor
push
xchg
cs
or
sbb
add
xchg
or
cmp
pop
dec
sub
jecxz
fbstp
push
or
out
push
sahf
js
and
bound
arpl
jge
add
push
push
inc
fxch
lahf
loop
cdq
mov
adc
push
xor
movs
inc
or
call
and
mov
call
push
or
jbe
xor
in
pop
xor
ret
ret
rcl
fmul
cli
sbb
jb
retf
inc
add
jmp
and
adc
inc
and
mov
add
inc
adc
inc
push
inc
dec
sbb
pop
repz
mov
pusha
cmp
dec
sahf
je
and
sub
mov
jl
sub
rcl
ds
xor
fidiv
fidiv
and
sbb
cmp
xor
imul
pop
ret
pushf
lods
sti
add
mov
push
push
sbb
push
push
mov
daa
arpl
cmp
mov
fcomp
addr16
inc
das
adc
jno
pop
aam
stos
ss
jno
or
adc
jl
or
push
inc
imul
sbb
push
adc
or
pushw
sbb
enter
pusha
sbb
push
hlt
cmps
jo
cmp
cmp
jl
mov
mov
ficom
push
imul
adc
add
mov
not
pop
inc
sbb
cmp
add
pop
aam
cli
dec
add
pop
sub
xor
test
jg
adc
dec
fild
fcomp
dec
fsubr
clc
cmp
or
sub
je
cmp
xchg
(bad)
xor
mov
shr
dec
jb
mov
pop
shr
pop
retf
xor
add
enter
cmp
(bad)
mov
push
inc
push
push
pop
push
das
adc
fs
fisttp
and
(bad)
pusha
loop
mov
cmp
pop
lock
push
inc
push
and
fwait
sub
test
(bad)
push
inc
sub
jmp
sbb
sub
fdiv
xor
cmp
pop
mov
fistp
sbb
out
pop
loope
ja
out
pusha
xor
push
dec
push
pop
inc
sbb
xchg
mov
sub
sti
leave
push
xor
imul
sub
inc
(bad)
rcr
inc
cmp
pop
push
pop
cmp
mov
fcomp
enter
fdiv
add
test
pop
mov
imul
jmp
call
sub
shl
(bad)
cmp
fsubr
inc
neg
or
ds
gs
sub
inc
clc
shl
loopne
add
icebp
popa
movs
hlt
xchg
ror
mov
or
xchg
dec
fcomp
aam
test
cmp
adc
inc
or
push
retf
pop
loopne
fwait
sub
adc
clc
lea
cli
add
jle
pusha
or
adc
fimul
push
pop
inc
jmp
int3
mov
xor
adc
add
jmp
not
pop
sub
adc
and
call
loop
mov
mov
fst
inc
(bad)
cmc
mov
cli
loope
or
mov
ins
push
mov
push
jp
fst
jg
xchg
aas
mov
stc
mov
jne
ins
adc
outs
or
xor
jne
adc
(bad)
push
movs
and
push
cmps
sub
imul
mov
fwait
pop
jb
add
mov
xlat
xlat
sbb
add
push
out
push
(bad)
sub
pop
rcl
jb
div
jo
cmp
mov
addr16
xchg
inc
cmp
xchg
push
adc
or
push
cmp
mov
inc
fstp
fisub
(bad)
cwde
mov
push
cmp
fisttp
shl
pop
dec
dec
dec
push
push
clc
add
push
cmp
pop
or
push
call
test
adc
or
mov
dec
xchg
push
and
movs
dec
and
aas
mov
sar
cmps
xor
clc
test
clc
sbb
ret
jo
adc
cwde
sub
pop
and
gs
pop
loope
movs
add
jno
pop
hlt
pusha
sbb
xor
sub
outs
cmp
inc
jbe
pop
or
test
call
dec
and
dec
and
jl
das
push
cmp
inc
inc
mov
dec
aam
loopne
push
div
neg
pusha
push
jl
pop
iret
cdq
push
xchg
sub
or
loope
xor
pop
iret
clc
pop
cld
int
sbb
push
les
sbb
and
gs
or
es
cmp
xor
or
or
test
jno
mov
pop
jnp
mov
sub
pop
inc
add
lds
mov
push
retf
inc
call
pop
jno
push
inc
jg
shl
cmp
jne
mov
test
hlt
mov
or
rol
xchg
fld
mov
(bad)
dec
sub
stos
push
inc
dec
test
rcr
test
push
push
dec
dec
data16
jmp
(bad)
adc
(bad)
xchg
sub
cmp
aas
ror
jmp
pop
test
(bad)
enter
dec
fisttp
(bad)
inc
out
sbb
cmp
fild
pusha
fstp
ret
mov
adc
push
out
mov
jl
jl
ror
push
adc
or
sbb
adc
add
pusha
or
shl
rcl
popf
add
push
push
test
lods
(bad)
arpl
imul
add
cmp
sbb
jmp
or
pop
push
js
mov
lock
iret
inc
add
jnp
(bad)
xchg
sbb
(bad)
test
not
add
shl
ins
retf
mov
dec
cdq
lea
icebp
inc
cmp
fcomi
add
jae
push
mov
dec
jle
movs
mov
add
mov
mov
jge
push
dec
pcmpgtd
add
sub
add
test
add
mov
test
ds
mov
fcomp
or
push
inc
mov
mov
adc
xchg
sahf
sbb
out
adc
test
push
dec
cmp
pop
or
aaa
add
add
or
dec
xchg
leave
clc
push
and
or
mov
(bad)
mov
xchg
je
dec
test
adc
mov
mov
dec
rcr
inc
or
outs
rcl
jp
retf
ja
sbb
xor
nop
dec
clc
inc
rcr
sar
clc
add
imul
sub
sub
jb
pusha
xchg
xchg
push
scas
nop
cmp
fs
add
js
mov
sub
cmp
push
dec
cli
shr
sbb
shl
dec
stos
fwait
pusha
cmp
imul
icebp
mov
dec
push
add
outs
sub
xor
aas
mov
push
addr16
out
pop
(bad)
sbb
cmp
cmp
aaa
cwde
cs
xor
leave
repz
sub
pop
add
add
inc
lock
mov
add
fdivr
mov
inc
jne
push
fwait
add
into
fcom
inc
and
add
and
retf
inc
je
ret
data16
push
dec
pop
int3
inc
pop
xor
and
inc
and
and
add
cmp
enter
inc
enter
inc
inc
inc
scas
mov
mov
sbb
jns
mov
fs
or
inc
in
inc
(bad)
inc
fild
(bad)
cmp
outs
ret
add
fadd
or
inc
inc
xor
xor
xchg
dec
inc
inc
inc
and
arpl
inc
and
dec
inc
mov
inc
cmp
retf
inc
inc
inc
inc
leave
and
aaa
or
inc
inc
test
jbe
or
jmp
fs
and
fild
adc
mov
inc
inc
cwde
pop
and
add
xchg
or
fld
test
push
add
and
push
aam
sub
mov
sub
add
and
pop
sbb
pop
inc
dec
sub
(bad)
pop
adc
xor
add
and
es
adc
ror
in
adc
arpl
arpl
nop
pop
dec
pop
add
inc
or
inc
or
adc
fbld
loopne
pop
je
sahf
mov
ins
in
or
data16
inc
jo
nop
cmp
sub
cmp
push
cmp
cmp
sahf
lahf
stos
sub
push
push
xor
jnp
sti
jo
or
test
sub
mov
pop
cld
mov
inc
add
or
and
add
sbb
cdq
or
stc
sub
fisttp
push
push
pop
les
cli
rol
and
bound
outs
shl
push
imul
dec
rcr
mov
inc
pop
adc
push
cmc
add
jb
mov
cmp
jnp
mul
mov
add
cdq
(bad)
popf
and
lea
rol
mov
cmp
adc
sub
cmp
dec
dec
xchg
or
lock
adc
adc
push
sbb
data16
push
or
sbb
pop
push
push
ds
pop
xchg
imul
and
mov
xchg
popa
es
cmp
or
and
adc
and
push
or
xor
mov
repz
cdq
ret
sub
leave
push
xchg
leave
or
push
inc
jb
xlat
cld
add
push
or
pop
adc
das
pop
sbb
addr16
sbb
je
or
adc
call
inc
retf
add
xchg
adc
and
jo
and
dec
xchg
xor
cld
and
mov
and
shl
fwait
aaa
(bad)
shl
cmp
dec
cli
xor
daa
adc
mov
push
xchg
adc
mov
push
sub
or
xor
jmp
inc
call
sbb
sbb
pop
inc
jne
pop
xor
out
inc
sbb
jns
mov
jne
sbb
cwde
in
cmp
or
les
js
pop
xor
repnz
outs
int3
inc
or
test
data16
mov
jg
sbb
or
pop
test
xor
bound
push
jb
or
ror
cmps
mov
cmp
cmp
mov
or
mov
cmp
leave
adc
sbb
add
push
xor
sbb
stc
add
cmp
inc
push
nop
inc
call
inc
and
inc
jns
dec
leave
inc
inc
or
jb
and
ins
inc
adc
fcmove
dec
test
inc
inc
cmps
sub
inc
ja
inc
dec
pop
test
lock
push
dec
add
jo
xor
lock
xchg
ja
inc
inc
and
cld
xor
sub
or
sbb
pop
inc
leave
and
add
inc
and
pop
xor
inc
inc
int
dec
leave
mov
or
dec
jecxz
jmp
inc
dec
adc
push
jae
ds
add
aaa
xor
fs
push
adc
cwde
lods
cs
mov
jl
rcl
add
or
packuswb
inc
push
movs
push
arpl
add
nop
adc
in
movs
sbb
inc
push
ror
xchg
sbb
inc
xor
arpl
outs
enter
inc
js
inc
dec
fwait
cmp
sahf
cwde
pop
aas
test
or
inc
loopne
and
xchg
push
jb
add
or
retf
adc
or
mov
ja
(bad)
repnz
xchg
ret
inc
dec
mov
sbb
ss
inc
sbb
push
sahf
(bad)
inc
and
xor
push
adc
cmp
add
addr16
sub
dec
jne
add
ss
or
mov
xchg
fistp
jmp
adc
(bad)
dec
and
or
sbb
aaa
pop
mov
and
pop
pushf
push
mov
mov
inc
inc
sbb
push
add
sahf
push
sub
fidiv
inc
iret
adc
mov
popf
(bad)
ss
add
fcmovnb
ret
scas
rcl
mov
addr16
std
push
push
pop
adc
mov
pop
and
in
adc
adc
ror
sar
cmp
scas
add
int3
scas
cwde
pusha
sbb
mov
pushf
sbb
loop
outs
jl
push
dec
cmp
cmp
mov
and
or
loop
nop
es
xor
dec
xor
mov
movs
mov
pusha
push
mov
imul
mov
fist
push
cmp
in
add
inc
sub
push
clc
inc
add
sub
push
add
fst
jnp
add
pop
ret
dec
cmp
pushf
sub
mov
dec
cmp
and
push
push
fcom
add
xor
call
fsin
jne
dec
xchg
ret
mov
xor
int3
xchg
add
and
or
nop
inc
cmp
and
scas
sar
and
js
sti
cmp
sar
mov
adc
and
add
push
add
jnp
inc
leave
enter
jne
cmp
scas
ret
cmp
shl
sbb
mov
ins
(bad)
dec
mov
test
mov
imul
psraw
jmp
inc
inc
adc
lods
mov
add
cmp
and
rcr
sbb
push
je
xlat
jecxz
sbb
out
xor
sub
js
push
xchg
adc
jne
pushf
mov
xchg
push
xchg
enter
dec
mov
pop
adc
loopne
fsub
adc
push
rcr
sbb
add
shl
cmp
pop
(bad)
(bad)
popf
xor
adc
rol
mov
test
sbb
mov
jmp
ror
xor
mov
lea
and
push
push
test
and
mov
cdq
cmp
or
xchg
nop
retf
mov
xchg
adc
in
add
jp
mov
(bad)
cmps
ret
dec
sub
and
pop
(bad)
xchg
sbb
inc
fstp
dec
in
mov
adc
rcl
mov
mov
mov
sbb
pushf
inc
popf
test
add
push
adc
cli
jne
sti
js
cs
ror
mov
inc
inc
or
add
xchg
cmp
xchg
push
xor
fsub
cli
jl
or
pop
aad
gs
adc
cmp
dec
mov
(bad)
jnp
in
inc
pop
pop
lea
das
sbb
push
js
pushf
sub
ret
xchg
push
mov
fld
xor
add
add
jmp
(bad)
pusha
popf
xchg
pushf
xchg
pushf
push
mov
sahf
jbe
inc
enter
iret
adc
and
mov
enter
loope
inc
mov
jge
xor
pusha
sbb
adc
dec
fistp
and
lock
lea
dec
xor
inc
adc
mov
test
mov
cli
int3
mov
shl
ret
push
lds
push
shl
ret
and
and
pop
mov
in
sbb
sub
(bad)
jmp
or
cmp
inc
cmp
icebp
push
mov
je
or
dec
iret
push
mov
fwait
and
js
dec
aaa
lods
dec
jno
fcom
xchg
add
push
leave
xchg
jne
and
jecxz
ror
and
test
inc
mov
aam
adc
or
jecxz
add
adc
sahf
sti
add
fimul
das
pop
pop
sub
push
pop
jo
inc
popa
add
mov
dec
mov
or
add
popf
adc
stc
jns
push
test
sub
inc
lods
fnstenv
inc
push
mov
sub
js
imul
or
dec
push
push
inc
dec
aam
imul
push
add
cmp
sbb
hlt
int3
ret
std
cmps
add
pop
inc
push
movs
cmp
mov
push
(bad)
push
ins
inc
sub
mov
movs
jns
rcl
mov
and
push
sub
push
cmps
and
inc
jno
mov
jno
data16
mov
xor
or
movs
adc
sub
push
je
inc
xor
xor
cmp
sub
cmp
sub
or
nop
adc
or
and
sub
mov
cwde
daa
xor
mov
test
xchg
sbb
mov
mov
in
je
push
mov
fiadd
ret
aam
scas
aaa
and
mov
sbb
cmp
aam
lea
sub
hlt
int3
mov
rcl
adc
loopne
movs
dec
cmc
fimul
pop
push
lods
das
push
pop
pop
inc
inc
xlat
mov
and
pop
add
dec
dec
xor
call
and
shl
std
nop
jp
pop
or
setge
ss
xchg
hlt
or
shl
pop
jmp
cmp
jecxz
nop
loope
sub
test
dec
not
and
pop
movs
add
pushf
push
add
in
cmp
adc
shl
scas
lea
gs
xchg
mov
add
jge
push
sub
shl
and
in
jbe
into
push
sar
pop
hlt
pusha
adc
fsub
mov
add
into
push
mov
push
aas
or
dec
jno
test
pusha
or
adc
je
cmps
std
jb
push
(bad)
pusha
jbe
add
add
enter
sub
pop
add
mov
adc
or
mov
cwde
dec
sbb
shl
xchg
fst
jmp
iret
mov
popa
call
or
or
xor
and
ins
pop
inc
jmp
sbb
lea
shl
inc
push
stos
ins
(bad)
ds
fisttp
xchg
ret
inc
(bad)
(bad)
sub
test
ins
push
push
adc
sbb
jb
fisttp
xchg
inc
sub
or
add
mov
rcr
cli
mov
out
xor
sub
dec
xchg
arpl
ds
test
jmp
and
push
lea
pop
shr
or
jmp
jp
sbb
and
push
jo
xchg
cmp
cdq
cdq
push
push
inc
inc
jae
or
mov
pop
xor
jo
and
or
push
in
test
cmp
xchg
pop
push
sub
and
rol
and
or
inc
mov
pop
xchg
push
add
push
in
nop
imul
cli
mov
xor
adc
cmps
mov
sbb
lods
jmp
and
push
inc
push
or
enter
std
outs
les
cs
or
mov
push
mov
test
or
push
jne
shl
ret
jge
mov
mov
cwde
add
or
mov
idiv
sbb
add
adc
shr
pop
push
push
xchg
or
nop
mov
xchg
push
sbb
xchg
push
jb
add
imul
push
ror
aam
add
pop
fadd
fmul
cdq
pop
dec
jl
sti
jmp
fstp
sub
mov
sar
add
jb
test
add
push
jge
mov
sar
and
call
shr
push
mov
sar
pop
cmp
cmp
int3
pop
loopne
mov
shl
xchg
xor
fsub
xor
xor
dec
adc
adc
sbb
or
xor
inc
(bad)
in
pop
jmp
enter
adc
pop
add
mov
pushf
das
mov
or
mov
shl
pushw
pop
pushf
jl
cmp
push
fdiv
and
xchg
js
sti
xor
icebp
xchg
xchg
pusha
call
es
movs
loopne
fsub
sub
(bad)
sbb
add
daa
enter
int3
enter
loopne
jb
popa
pop
lds
xchg
rol
cmp
pop
or
test
push
dec
mov
and
adc
stos
je
jg
add
cmp
scas
popa
pop
mov
add
dec
repz
test
mov
ds
or
cwde
push
add
shl
push
sti
and
mov
sub
iret
xchg
and
(bad)
in
inc
mov
addr16
lea
jmp
mov
jae
push
jmp
mov
ficom
sub
push
mov
xchg
cmp
daa
adc
sbb
mov
loope
in
(bad)
lods
mov
xchg
xor
mov
cmp
and
push
or
inc
icebp
ss
mov
test
push
sub
xor
rol
pop
mov
push
repz
add
add
iret
movs
add
test
popf
ret
adc
mov
jp
stos
loopne
test
out
ret
cli
add
jo
mov
inc
push
jns
aas
cld
mov
add
adc
push
push
ret
sbb
dec
cmp
je
or
je
mov
pop
jl
mov
push
add
push
inc
mov
daa
mov
repnz
leave
call
cmp
sub
in
call
add
in
mov
jbe
sar
ret
jge
and
movs
shl
xchg
mov
adc
cld
mov
aaa
adc
pop
test
pop
repnz
repnz
cmp
lods
xchg
xchg
mov
pop
das
test
dec
xor
ror
loopne
popa
xor
mov
call
retf
leave
and
push
xor
and
fmul
push
ds
out
xchg
ins
lods
mov
pop
adc
jle
rcr
outs
pop
or
enter
push
fsubr
(bad)
push
inc
je
or
jl
dec
pop
aas
push
into
xor
push
sbb
pop
in
shr
out
aad
les
pop
pop
push
sti
jb
add
add
(bad)
xchg
rcr
test
dec
sbb
jns
lahf
fisttp
inc
adc
jle
inc
lea
sbb
adc
fsubr
add
cmp
pop
add
inc
push
push
cmp
pop
(bad)
or
and
fdivr
adc
jno
mov
jne
int3
mov
or
or
in
movs
sbb
pop
ret
mov
mov
nop
loope
cmp
jb
std
sar
jnp
(bad)
and
jae
stos
xchg
cmc
into
call
outs
sar
jmp
call
and
ds
mov
sub
mov
mov
cmp
jnp
jmp
adc
push
add
ss
psubusb
or
xchg
inc
scas
sar
cmp
sti
pop
clc
and
std
sub
cld
imul
push
hlt
es
mov
mov
lock
popf
xchg
cmp
adc
sar
jb
mov
adc
scas
push
or
arpl
mov
inc
add
mov
push
and
sar
and
inc
sub
das
inc
ror
cmp
add
inc
or
mov
mov
inc
jg
or
mov
inc
aas
mov
cmp
adc
aas
xchg
in
adc
pop
jmp
push
mov
loopne
cmp
sbb
call
sbb
js
out
xlat
shl
stc
push
shl
sbb
mov
sbb
fadd
pop
in
or
add
adc
push
pop
or
add
add
push
mov
and
das
imul
fnsave
ret
test
and
jne
jmp
or
inc
add
mov
dec
mov
test
push
push
call
cmp
and
lods
and
adc
or
lea
add
mov
push
xchg
retf
add
sbb
mov
push
jns
nop
inc
fisttp
fst
aas
mov
push
or
jns
dec
clc
in
ret
call
or
aad
in
movs
push
icebp
cmps
cwde
and
enter
jle
push
mov
push
sub
inc
lahf
push
imul
xchg
mov
ror
loop
sbb
pop
mov
fcmovnu
icebp
jmp
lahf
js
cmp
jg
inc
retf
ins
and
mov
mov
sbb
xor
add
xchg
xor
adc
mov
xchg
jbe
sub
jl
stc
sub
inc
add
push
stc
sbb
inc
test
mov
push
push
jge
or
or
sti
mov
in
ins
dec
adc
sbb
call
sar
mov
ror
mov
movs
inc
or
dec
mov
xchg
pop
jo
fiadd
mov
and
push
in
adc
mov
test
(bad)
push
ror
xor
test
sbb
xor
sbb
lock
pop
(bad)
scas
push
sbb
push
mov
fcom
mov
mov
push
cwde
and
push
leave
mov
adc
mov
sbb
mov
(bad)
lahf
push
adc
add
das
push
sahf
cmp
ja
dec
adc
jmp
push
push
inc
sbb
push
lods
xchg
dec
add
push
sysret
xor
inc
push
je
lea
pop
pop
jo
jge
movs
inc
cld
add
in
data16
test
xor
sbb
push
lahf
cmp
adc
nop
fadd
cmp
nop
cwde
mov
mov
inc
pusha
and
xchg
sbb
pop
out
cmp
jmp
mov
loope
sbb
clc
iret
sub
mov
jmp
nop
add
pop
jb
xchg
fbld
inc
or
cmp
test
gs
jnp
and
dec
dec
lods
sub
and
daa
dec
fwait
lock
jae
cmp
pop
push
and
or
push
xchg
mov
add
mov
add
adc
and
movs
jbe
and
rol
mov
dec
add
nop/reserved
outs
test
retf
sub
add
es
cld
sub
dec
loope
and
aaa
sbb
xchg
push
push
sbb
ror
mov
aam
addr16
outs
mov
clc
adc
and
rcl
data16
mov
dec
dec
clc
and
data16
in
xchg
mov
mov
cmp
dec
add
or
add
jmp
xor
test
jp
jae
push
cmp
xchg
or
mov
or
mov
jl
adc
push
dec
and
add
mov
inc
xchg
inc
shl
rol
bnd
adc
arpl
popa
and
or
sub
pop
add
fisttp
pusha
dec
shl
push
jbe
mov
sub
adc
xor
sub
or
xor
bound
sbb
arpl
jg
pop
sub
inc
mov
or
mov
sbb
cmp
bound
fild
pusha
mov
xor
push
js
test
popa
add
xor
or
loop
sub
sub
clc
sbb
stos
and
inc
dec
icebp
enter
rcl
or
clc
dec
push
sub
mov
iret
repz
pop
pusha
fs
mov
scas
dec
add
or
fnsave
lods
push
inc
or
mov
add
xlat
jmp
push
pushf
fidivr
mov
pusha
or
push
add
mov
mov
and
test
ss
sti
jg
repnz
sbb
data16
mov
bound
add
jp
outs
das
add
mov
xchg
mov
or
and
add
add
dec
sbb
add
in
push
and
icebp
push
cs
push
inc
add
retf
rol
add
sbb
jl
xlat
xchg
mov
sbb
stos
jae
ins
jmp
push
pop
rcr
cmp
sub
xor
ins
int
adc
and
sbb
cmps
jbe
or
sub
jmp
idiv
and
mov
dec
pop
repnz
xchg
test
(bad)
push
mov
inc
sbb
and
ror
shl
adc
sahf
pop
push
scas
push
sub
test
pusha
xchg
mov
mov
dec
sbb
adc
xchg
add
inc
jl
xor
xchg
pop
dec
jl
push
dec
js
push
cmp
ins
loope
xchg
add
lods
gs
mov
push
dec
jg
lea
jg
adc
pop
and
icebp
push
lds
xor
xchg
ja
pop
lahf
leave
sbb
mov
jecxz
gs
or
mov
and
sub
or
sub
rol
shl
test
dec
sbb
mov
push
bound
push
sbb
adc
inc
sbb
dec
les
mov
and
mov
aad
mov
ins
push
adc
or
hlt
xor
int
xchg
adc
pushf
lods
test
sub
fisttp
inc
imul
add
inc
shr
arpl
icebp
push
xchg
sub
dec
xor
jecxz
test
test
push
or
bound
jae
scas
mov
sub
pushf
sbb
cld
mov
call
jbe
and
push
mov
inc
movs
retf
movs
cmp
mov
pop
imul
ficomp
outs
sub
mov
push
cmps
popa
test
inc
pop
(bad)
loopne
add
and
enter
mov
sub
dec
ret
add
ret
jg
inc
add
lds
xor
xor
pop
pop
add
clc
sbb
scas
fisub
jne
fimul
shl
cmp
xor
fs
push
gs
aas
sbb
lahf
xchg
cmps
inc
mov
stos
push
mov
add
push
fnstsw
pop
add
mul
add
mov
adc
mov
add
dec
ss
lea
push
xor
test
pop
aas
sbb
xchg
mov
xchg
std
or
fiadd
add
test
cmp
cmovs
sub
cmp
jecxz
lods
loop
mov
loopne
scas
mov
mov
dec
lea
adc
dec
mov
or
(bad)
and
sahf
fld
fdiv
pop
sbb
pop
mov
stos
mov
jne
push
and
xor
mov
in
sub
jge
jne
pop
push
push
push
push
mov
add
bound
pop
int
loopne
stos
das
aad
push
mov
cmp
push
adc
(bad)
sbb
add
sysenter
test
add
sbb
push
sbb
arpl
sti
xchg
retf
xor
imul
add
xchg
cmps
cmps
add
dec
test
push
test
adc
or
rol
iret
sbb
(bad)
push
sub
cmp
cmp
rol
daa
sbb
or
sbb
jl
and
push
push
cmp
fidivr
and
inc
ins
dec
add
sub
jnp
das
out
pop
push
sbb
loopne
add
push
lds
in
or
add
fs
jecxz
fs
(bad)
cmp
fwait
push
ds
push
cmp
sub
mov
adc
mov
call
shr
enter
mov
(bad)
popa
mov
xor
shl
ss
mov
mov
mov
add
enter
add
enter
sbb
fst
push
push
cmp
or
test
jne
mov
add
stos
push
movs
push
adc
pop
and
or
xchg
adc
cmp
xchg
inc
test
mov
adc
mov
jl
xchg
enter
mov
mov
push
mov
add
shr
jb
jmp
sahf
push
push
or
or
inc
mov
adc
ins
mov
mov
fbld
sub
aad
enter
mov
mov
pop
xor
mov
icebp
cwde
sub
aam
cmp
imul
out
push
push
xor
jo
cmps
loope
dec
mov
jno
sbb
div
xor
jle
inc
stos
cmps
rol
mov
adc
jge
adc
adc
gs
mov
adc
not
jnp
xor
leave
adc
sbb
sub
inc
add
push
and
dec
mov
popf
dec
addr16
jmp
(bad)
dec
rcl
into
movs
or
sbb
sbb
or
fadd
bound
or
ret
daa
stos
pushf
stos
cmp
mov
test
push
int
xchg
daa
daa
ret
fwait
pop
jbe
cwde
inc
adc
orps
jp
add
add
cmp
jmp
jmp
cmp
jle
ficom
or
mov
jp
lock
int3
imul
push
rol
add
popf
mov
jmp
les
not
int3
mov
xchg
iret
inc
sub
pop
xchg
add
aas
out
cdq
in
clc
pop
leave
femms
in
add
push
add
(bad)
aas
cmp
repnz
add
pushf
sar
add
ja
or
sbb
(bad)
mov
mov
pop
xor
ret
jg
js
js
lea
sub
cmp
jno
and
pop
or
sbb
ss
ds
aaa
xor
loope
pop
adc
push
dec
es
add
mov
lea
(bad)
(bad)
sbb
dec
inc
or
or
js
inc
ins
xchg
out
ss
ja
pop
mov
pop
sub
ret
adc
adc
clc
add
adc
mov
or
inc
pop
dec
rol
push
fiadd
inc
test
xor
iret
fisubr
jle
jb
mov
sar
jecxz
push
(bad)
ins
shl
mov
ret
jmp
call
lahf
add
dec
xchg
jno
gs
and
dec
jecxz
sub
add
mov
xchg
lock
sbb
dec
js
loope
fstp
std
test
stc
or
pop
pop
pusha
test
cs
sub
add
outs
jns
sbb
fld
inc
mov
fisubr
(bad)
jne
xor
xlat
sbb
ja
test
push
lods
leave
push
mov
adc
cmp
add
jae
inc
retf
in
icebp
jmp
sub
mov
(bad)
cmp
mov
cmp
jne
push
add
jne
xchg
sbb
jp
jge
mov
xchg
mov
test
pop
inc
jl
jnp
rcr
mov
sub
mov
jmp
iret
sbb
push
pop
fistp
fidiv
and
test
in
push
and
gs
sub
sbb
out
test
mov
enter
jmp
lds
and
jmp
xor
jl
push
dec
sbb
and
(bad)
xchg
mov
lea
fmul
out
sub
cmp
loope
add
sub
mov
call
jle
inc
mov
retf
pop
jp
std
or
rcl
cmp
or
stc
and
mov
push
es
daa
adc
add
adc
mov
cmp
and
mov
cs
(bad)
add
es
in
or
mov
jne
sahf
pop
or
iret
pop
sbb
push
repnz
jo
dec
push
and
ss
hlt
ss
test
js
push
mov
and
ficomp
sub
mov
mov
mov
sub
or
mov
jle
mov
cmp
sbb
inc
std
into
jp
dec
inc
inc
mov
cmps
rcl
or
pop
rcl
adc
sub
cmp
and
movs
adc
mov
and
jns
out
and
push
andnps
add
sti
push
(bad)
movs
inc
mov
mov
scas
aaa
mov
fdivr
int3
rcl
add
xchg
sbb
loopne
cdq
jnp
xchg
sahf
inc
or
mov
cmp
fiadd
jne
dec
adc
(bad)
mov
xchg
sub
imul
add
sti
xor
add
adc
inc
js
inc
shr
sbb
cmp
jae
sub
int3
fs
pop
cmps
sub
hlt
sub
inc
or
xor
xchg
fstp
and
inc
dec
(bad)
add
or
clc
enter
cmp
or
push
scas
and
mov
and
pop
pop
clc
lods
fisttp
call
cmp
in
imul
pop
adc
out
shl
cmp
jo
and
in
and
in
cmp
or
int3
mov
sub
inc
push
imul
lock
jp
mov
mov
or
add
std
jmp
jbe
aas
fcmovnbe
jno
aas
inc
xor
jecxz
test
dec
(bad)
xor
add
std
jg
pop
jge
call
add
not
and
arpl
add
inc
pusha
and
in
stos
aas
je
nop
mov
aad
mov
or
push
adc
cld
mov
js
sub
cmp
sbb
sub
sbb
adc
inc
call
neg
mov
pcmpgtb
call
or
push
test
push
or
mov
sti
(bad)
xlat
mov
jl
rol
push
jnp
adc
mov
mov
adc
cdq
fs
or
cmp
xchg
dec
pop
je
lods
iret
repz
rol
stos
lahf
xchg
cmp
jle
push
inc
jle
inc
dec
add
push
push
push
cld
int3
sbb
aas
inc
fisttp
sbb
and
inc
shl
add
cs
push
add
lods
mov
aam
xchg
jle
and
mov
cmp
enter
push
jmp
cmp
ja
test
dec
or
movs
sub
dec
dec
jne
mov
mov
xlat
les
aaa
xor
iret
mov
fdivr
xchg
jnp
aaa
pop
mov
mov
xchg
mov
pusha
or
out
popa
hlt
push
adc
or
stc
ds
dec
or
jmp
dec
push
adc
xchg
movs
add
push
jp
add
and
jnp
mov
sbb
add
dec
pop
aaa
fimul
sbb
js
mov
sub
movs
scas
mov
and
lods
leave
std
ja
bound
pop
add
push
or
push
adc
test
mov
inc
faddp
sbb
pop
(bad)
or
jge
in
stc
sahf
clc
pop
adc
adc
and
arpl
call
or
push
sti
pop
lea
test
mov
ror
mov
test
dec
add
pushf
lods
sbb
xor
adc
nop
test
aas
push
data16
ss
mov
stos
or
mov
pop
cwde
sub
sub
sub
in
add
aas
push
sbb
neg
mov
inc
lahf
das
jecxz
adc
xlat
test
or
outs
jg
sub
xchg
sub
sbb
xor
inc
or
dec
rcr
add
add
sbb
jmp
cmp
retf
movs
(bad)
(bad)
mov
sbb
popa
stc
sahf
push
sbb
rcl
mov
add
call
sub
push
push
and
mov
xor
in
(bad)
jl
or
sbb
cs
sub
mov
mov
imul
push
fwait
je
jp
or
xor
xchg
push
push
icebp
outs
mov
dec
sbb
push
mov
inc
xor
mov
push
cmp
jle
add
mov
and
push
dec
jo
adc
mov
dec
xor
xchg
and
ins
(bad)
mov
leave
(bad)
xor
pop
repz
test
imul
es
adc
or
sti
es
ds
out
or
push
lds
sbb
rol
or
neg
(bad)
js
cmp
add
scas
or
call
fwait
in
cmp
fld
xchg
or
fild
add
mov
in
aad
push
call
adc
cmp
mov
aaa
inc
mov
mov
call
hlt
ficom
adc
mov
lods
lock
sub
inc
sbb
add
push
mov
push
mov
inc
(bad)
fdiv
mov
xor
sahf
int3
call
jg
in
cmp
jae
ins
push
add
daa
dec
jae
daa
pop
pop
or
dec
in
imul
mov
adc
and
(bad)
push
adc
pop
or
sar
sar
adc
sbb
mov
int3
shrd
test
sbb
ins
mov
and
(bad)
dec
popa
sar
sbb
cs
mov
dec
jp
dec
das
inc
dec
ss
inc
nop
xchg
mov
sar
xchg
lea
and
adc
mov
in
bound
in
xor
fsubr
shl
push
mov
adc
mov
and
or
into
add
inc
lods
dec
out
nop
enter
mov
outs
jae
rcr
into
inc
and
mov
out
daa
(bad)
lahf
aas
jmp
stc
fwait
in
js
pop
pop
adc
jne
jmp
outs
xor
mov
sub
fwait
sbb
cdq
mov
push
cmp
out
mov
retf
daa
adc
add
ins
imul
aas
or
call
dec
mov
pop
adc
add
adc
daa
pop
add
jbe
xor
call
jp
fdivr
rcr
popa
pop
fst
and
xchg
and
ret
pop
stos
and
cdq
or
call
xor
scas
adc
outs
xor
dec
es
cmps
push
pushf
(bad)
les
mov
dec
call
or
add
sti
fmul
mov
cmp
mov
cmp
retf
jnp
lahf
cli
push
shr
xor
pop
inc
shl
add
xchg
cs
jnp
dec
rol
iret
mov
into
inc
mov
fistp
inc
push
fld
loope
add
cmps
shr
mov
push
push
cwde
mov
sub
adc
int
xchg
scas
cmps
daa
lea
mov
xor
sar
mov
mov
mov
test
dec
sub
aaa
mov
jle
js
mov
or
jl
or
fadd
add
inc
push
xor
inc
sahf
faddp
nop
mov
inc
pop
out
mov
popa
add
jae
ins
enter
cld
push
push
pop
pop
test
je
arpl
adc
push
lahf
neg
or
or
shl
add
and
aas
cld
mov
cmp
push
arpl
les
mov
leave
ss
or
cmp
xor
les
or
jno
dec
call
jmp
ret
(bad)
or
fadd
jo
pop
inc
sahf
inc
test
dec
test
ja
in
fnstenv
adc
inc
dec
or
movs
add
xchg
shl
cmp
and
es
jno
xchg
cld
jo
arpl
mov
push
ror
sbb
dec
or
out
mov
pushf
xor
cmc
dec
sahf
out
adc
adc
mov
inc
push
inc
je
add
inc
inc
push
fs
add
xor
add
outs
mov
pusha
out
mov
js
sti
call
jae
cmp
rol
push
setp
inc
arpl
ja
je
push
je
bound
dec
jle
or
imul
je
jb
outs
ins
jmp
fisttp
aaa
mov
adc
and
add
mov
and
outs
arpl
sub
int
sbb
lods
leave
repz
adc
adc
out
and
dec
je
pop
pop
pop
int3
stos
inc
sub
das
cmp
in
and
or
test
int
enter
retf
mov
or
lea
cs
sub
data16
mov
jle
fcomp
push
ins
xchg
add
add
enter
add
push
pop
xor
sar
shl
or
xchg
nop
inc
shl
xchg
cmps
mov
adc
nop
xchg
sbb
and
sbb
ja
pop
sbb
xchg
ror
(bad)
and
gs
jne
pop
outs
cmps
lods
lea
jg
dec
or
mov
push
push
jle
cmp
push
rcr
xchg
sbb
inc
cld
mov
ds
push
pop
sti
jne
stc
cmp
shl
sbb
rcr
cmp
dec
jnp
fimul
dec
pop
push
pop
pop
fistp
sbb
sbb
dec
mov
addr16
pusha
popa
bound
mov
or
and
and
xchg
xchg
clc
sub
push
cmc
test
or
inc
add
add
pop
sbb
push
ror
or
(bad)
popa
add
inc
sbb
lds
punpckhwd
xor
add
or
lock
dec
cld
(bad)
in
add
int3
retf
add
hlt
fcomi
push
hlt
fiadd
sbb
sub
mov
ss
and
cmp
ins
fimul
hlt
shl
cmp
pop
inc
in
outs
or
gs
adc
pop
sti
sub
out
push
and
test
pop
pop
push
sbb
loop
pop
push
push
ja
iret
repz
cld
sub
stos
ja
and
and
or
loope
push
nop
mov
push
mov
sub
xchg
add
sbb
mov
adc
jecxz
add
cld
mov
cmps
mov
je
sub
test
mov
fnstenv
cmovae
pop
fcmovnb
push
cdq
retf
int3
mov
stos
add
add
nop
rcl
sub
jp
inc
shr
cli
xor
fs
idiv
push
jg
push
mov
jle
pop
jge
mov
pop
jg
mov
sahf
fldpi
push
push
jl
cmp
mov
mov
test
shl
xchg
mov
(bad)
mov
bound
cdq
fs
retf
ins
rcr
dec
fsubr
mov
fdivr
in
mov
mov
add
mov
(bad)
inc
pop
pop
xchg
sbb
sub
add
or
mov
xchg
xor
idiv
mov
mov
pop
mov
push
xchg
into
mov
jmp
add
and
jns
mov
sbb
je
adc
test
mov
add
adc
fistp
dec
addr16
dec
push
imul
push
jmp
pop
add
pop
sub
xor
add
pop
repnz
sbb
je
sar
or
mov
push
imul
or
or
add
inc
sub
mov
test
xor
aam
jne
add
clc
push
addr16
or
xchg
or
cdq
push
bound
pop
lods
push
or
sar
xor
not
add
in
aas
pusha
rcl
aad
sbb
test
cmp
add
mov
adc
fstp
sub
sbb
push
dec
or
add
mov
and
and
lea
imul
sbb
xchg
or
test
stos
add
js
test
jne
nop
add
pusha
xchg
pusha
idiv
and
jmp
scas
test
pop
sbb
or
sbb
jbe
jnp
pop
and
enter
lock
dec
dec
inc
xchg
adc
call
test
mov
and
cmp
repz
ins
inc
push
dec
dec
push
pop
leave
mov
repz
push
add
push
add
push
mov
push
add
retf
repnz
rep
mov
xchg
mov
pop
add
add
or
aas
inc
jmp
test
cmc
shr
xor
cld
adc
push
and
inc
lods
dec
or
pop
or
push
dec
rcl
dec
fistp
fisubr
fidiv
fnstenv
(bad)
fmul
fstp
js
pop
and
xchg
cmc
in
jmp
cs
sbb
out
inc
pop
xchg
repz
mov
fst
ja
jbe
(bad)
fcmovnu
cmp
retf
test
scas
pusha
cmp
add
jmp
mov
stc
or
or
nop
adc
stc
cmc
push
leave
iret
mov
cmp
clc
lock
cmp
and
push
leave
rcr
and
or
out
enter
push
mov
shr
pop
xchg
cmp
mov
pop
clc
fldcw
pop
clc
mov
(bad)
ja
out
push
pop
in
jmp
imul
out
sub
jmp
cmp
mov
cli
sub
cmp
cmp
or
or
push
scas
mov
adc
inc
mov
push
mov
adc
out
jns
jg
add
stc
mov
fistp
and
lea
popa
or
sbb
loope
shl
xchg
mov
dec
repz
lock
(bad)
push
jmp
dec
ss
adc
es
mov
cmp
stos
xchg
push
xor
ret
(bad)
and
pop
fmul
pop
jnp
mov
fs
ds
add
push
sub
add
(bad)
sbb
ror
je
push
jbe
cmps
loop
call
ins
mov
xchg
mov
fdiv
sbb
loopne
imul
aad
mov
aas
fsubp
add
ret
add
cli
adc
dec
add
loop
mov
add
inc
addr16
sbb
pop
in
cmp
or
add
mov
jecxz
push
push
pushf
popf
inc
mov
add
movs
cs
loope
lahf
push
shr
test
push
test
cli
mov
(bad)
rcr
xor
imul
add
mov
xor
test
sbb
jmp
loopne
cmp
pop
imul
jae
mov
mov
inc
mov
clc
adc
xor
or
sbb
jo
mov
add
cmp
push
jb
adc
and
scas
sbb
cmp
fcomp
cmp
(bad)
shr
cmp
adc
inc
mov
mov
or
push
jb
mov
mov
movs
mov
adc
mov
or
lds
push
pop
enter
sbb
cmp
and
push
lea
xor
xchg
clc
xchg
mov
cmps
cmp
and
sahf
xchg
in
inc
sub
test
xor
hlt
imul
sub
xchg
push
cdq
inc
fst
pop
sbb
sub
mov
inc
pushw
pop
mov
fs
mov
mov
cmp
not
add
sbb
call
pop
outs
inc
dec
sbb
mov
sub
daa
push
pcmpeqw
aam
and
and
xor
sar
clc
mov
xor
nop
jl
cmp
rcr
cmps
sub
jmp
pop
mov
mov
sar
test
test
popf
ret
mov
mov
xchg
pop
inc
xor
and
or
fdiv
and
mov
mov
fstp
and
movs
std
test
enter
pop
sar
mov
inc
push
ja
adc
rol
and
adc
add
or
add
push
cmp
or
test
sbb
and
mov
and
fsub
je
xchg
mov
and
cld
jmp
pop
sub
pop
or
ret
jae
pop
push
xchg
xchg
pushf
push
ret
je
popa
adc
or
push
push
pop
adc
mov
mov
pop
test
scas
sub
push
jmp
xor
adc
cmp
xlat
loope
xchg
jp
test
hlt
sar
(bad)
lock
scas
sub
add
popf
mov
lock
xchg
sub
inc
xor
mov
jl
sti
push
inc
inc
dec
jne
ins
ret
push
mov
test
mov
mov
ret
call
out
dec
je
sub
mov
popf
sub
jbe
enter
or
pusha
call
push
dec
push
jne
push
add
and
sub
fwait
mov
adc
push
inc
dec
adc
lock
test
inc
jae
call
dec
inc
mov
pop
aam
je
push
push
pop
fisubr
and
leave
adc
outs
or
(bad)
cli
lods
pop
addr16
jae
and
add
push
mov
not
or
push
dec
arpl
mov
xor
inc
addr16
push
or
imul
mov
or
in
dec
cmp
retf
setl
jo
adc
into
(bad)
cld
mov
ss
adc
adc
mov
dec
cmp
fld
dec
inc
jae
mov
into
mov
pusha
mov
arpl
mov
inc
imul
add
sbb
xchg
inc
in
or
ins
push
mov
je
inc
je
stc
and
push
pushf
inc
dec
dec
je
cmp
daa
pop
into
ficom
xor
cmp
ins
in
push
jp
popf
pop
int3
mov
inc
push
adc
sbb
scas
fdiv
add
int3
pop
ins
mov
mov
ins
mov
xor
inc
out
les
push
dec
sbb
jno
adc
mov
mov
lods
jg
test
fsubp
push
pop
pop
inc
in
test
mov
mov
mov
rcl
pop
nop
jge
mov
cmps
pushf
xlat
enter
fst
push
ror
dec
sub
adc
sbb
idiv
mov
sti
cmp
lock
dec
test
jb
and
jmp
(bad)
or
ins
sbb
mov
mov
pop
add
mov
ffree
or
adc
cmc
fcomp
pop
xchg
sub
or
jb
ins
das
add
push
mov
and
cmp
cmps
sahf
mov
adc
jae
cmps
rcr
inc
je
dec
fstp
add
cmp
mov
xchg
add
cmp
mov
jbe
inc
les
pop
sub
push
xchg
mov
pushf
sbb
ret
shl
clc
mov
ror
pop
hlt
cmp
push
inc
leave
xlat
sub
mov
mov
mov
sbb
dec
ins
adc
or
xchg
je
cmp
inc
ins
jle
jp
push
push
dec
iret
and
in
pop
xor
pop
xor
sbb
xchg
jbe
jbe
xchg
push
arpl
cmp
dec
sbb
das
add
jl
ret
pushf
push
sti
ds
cmp
jae
stos
jle
cli
inc
push
fdivp
and
out
or
inc
call
or
pop
mov
xor
scas
les
add
arpl
push
pop
inc
mov
sahf
out
push
pop
mov
push
cwde
inc
lahf
push
or
mov
loop
push
and
fldcw
lahf
sbb
jne
rcr
mov
in
and
ins
sahf
sub
xchg
push
inc
sub
(bad)
fdivr
xor
fisttp
ret
xor
lods
int3
test
jne
mov
mov
push
push
fdivr
(bad)
movs
sahf
nop
mov
fdivr
lods
out
mov
dec
fadd
add
sub
mov
push
jle
push
in
in
mov
sbb
(bad)
in
xor
or
and
xor
(bad)
jmp
jle
inc
sbb
clc
xor
pop
or
inc
je
in
daa
pop
push
mov
xor
cmp
push
cmp
xchg
inc
sub
test
jl
or
xchg
fstp
or
or
repnz
pop
dec
pushf
push
cwde
or
adc
fs
adc
es
xor
adc
pop
jbe
add
bound
adc
fmulp
loopne
adc
push
fs
ret
loopne
iret
in
dec
enter
iret
jecxz
dec
retf
imul
adc
add
jle
push
push
fnstsw
push
shl
ins
popf
fucom
dec
add
repnz
jo
fnstsw
dec
sub
loope
dec
iret
mov
loopne
adc
imul
out
fucom
push
ret
rcl
fucomi
ins
dec
js
data16
xor
shr
fdiv
sub
jmp
push
adc
dec
lds
cmc
ret
jmp
xchg
outs
adc
ret
jnp
mov
pop
clc
mov
xchg
jp
push
or
adc
enter
mov
and
or
xchg
int
or
arpl
mov
cmps
aaa
cmps
dec
(bad)
ss
jl
add
add
adc
arpl
push
jecxz
add
std
das
arpl
nop
test
test
push
(bad)
xor
dec
test
(bad)
cmp
icebp
pop
ficomp
loopne
jmp
push
or
hlt
outs
pop
or
dec
cmp
and
push
fcomp
cmps
xor
imul
imul
(bad)
add
mov
cmp
cmp
add
adc
pop
(bad)
mov
jne
ss
mov
sbb
push
enter
and
or
loope
cld
or
test
jle
icebp
jmp
dec
mov
or
cmp
aas
in
jp
fisttp
mov
cmp
or
pop
and
lock
mov
clc
ret
add
or
and
inc
pop
xchg
aam
and
jo
adc
ss
out
dec
sub
and
or
mov
(bad)
lock
lahf
xchg
and
add
std
loope
jne
mov
sahf
push
mov
xor
add
mov
inc
repz
arpl
cwde
add
rcl
jmp
add
into
je
clc
fucomip
pusha
sub
retf
cld
sub
mov
mov
or
cld
adc
iret
xor
mov
inc
sbb
and
mov
cmps
add
push
shr
jmp
jnp
dec
enter
and
push
jle
test
jns
mov
aas
mov
jl
cmp
jne
and
and
sbb
rol
cmp
cmp
jl
jmp
mov
mov
imul
call
pop
rol
lock
xchg
push
adc
pop
pop
inc
inc
or
fdivr
mov
inc
adc
push
int3
push
or
lods
sbb
fild
mov
fs
ret
dec
aas
inc
sub
rol
adc
popf
xchg
jmp
cmp
call
cli
pop
pushf
cli
popa
jl
push
mov
adc
inc
mov
fisubr
pop
sar
and
fwait
cli
jne
or
mov
cmc
xchg
sbb
push
mov
pop
in
or
stos
pop
aaa
jne
cmp
and
xlat
jo
ficom
test
mov
sbb
outs
add
add
xchg
out
push
add
add
push
push
shl
add
fdivr
or
pop
adc
add
mov
(bad)
fild
idiv
lea
fwait
lock
push
sar
ins
push
xor
dec
push
mov
popf
cli
nop
and
adc
arpl
pop
cmp
jecxz
lock
aas
fisubr
xor
pop
inc
outs
jnp
(bad)
jmp
pop
jge
pop
jnp
add
psubw
xchg
(bad)
adc
inc
inc
loope
add
adc
je
aas
add
jne
mov
pop
add
fidivr
jo
stc
ret
aas
test
or
jne
dec
mov
mov
(bad)
dec
jbe
push
or
push
mov
scas
mov
xor
cs
(bad)
add
inc
pop
adc
xor
xlat
and
inc
popa
pop
aas
lods
mov
cwde
and
aaa
pop
xchg
push
add
cmps
jl
cmp
add
sub
sub
or
pop
inc
loopne
push
mov
sub
movs
and
test
pop
jns
repnz
pushf
adc
jmp
dec
cmp
push
retf
dec
adc
mov
pop
inc
or
(bad)
adc
aas
es
pusha
(bad)
mov
push
test
loope
ret
dec
(bad)
int3
adc
push
push
mov
repnz
xor
xor
pusha
out
mov
es
xchg
(bad)
or
call
pop
fs
test
retf
fsub
push
adc
mov
or
mov
or
leave
aas
push
mov
add
loope
sar
push
dec
int3
mov
stc
or
aas
mov
xor
inc
push
test
add
or
imul
dec
mov
mov
hlt
push
rep
mov
call
and
js
push
(bad)
or
xchg
rcl
(bad)
in
xor
and
add
xchg
mov
mov
call
sub
cmc
arpl
dec
xlat
in
add
dec
adc
push
push
dec
test
leave
pop
lock
jmp
sbb
sahf
ins
js
sbb
xchg
inc
xor
addr16
rol
add
jg
mov
mov
call
push
popf
test
add
sbb
fisubr
or
push
stc
stos
movs
(bad)
push
cld
and
add
in
add
mov
loope
add
ret
mov
pop
cmp
aas
ja
or
ror
sbb
jo
add
cmp
xor
or
das
in
or
das
push
fist
ins
mov
scas
and
jmp
pop
inc
add
pop
or
scas
mov
pushf
gs
cdq
inc
nop
inc
sbb
dec
cmp
cmp
or
mov
cmp
sbb
sahf
adc
(bad)
call
lods
pop
mov
inc
dec
jne
ret
cmp
jne
cmp
iret
sbb
push
jmp
call
jne
mov
dec
movs
inc
cdq
popf
add
repnz
or
fcomp
scas
mov
cmp
sub
or
loope
imul
pusha
adc
mov
sub
sti
xor
add
shr
or
inc
dec
dec
(bad)
pop
push
adc
xor
test
lds
jmp
push
add
or
push
push
(bad)
(bad)
mov
out
repnz
mov
jb
cdq
xor
std
lahf
dec
or
jae
test
jg
(bad)
stc
popf
push
jmp
dec
dec
ins
mov
add
cmp
xchg
nop
popa
and
push
test
sub
inc
cmp
jbe
adc
pop
add
adc
cmp
pusha
cmps
sub
xchg
rol
ret
mov
shl
or
jae
(bad)
push
adc
mov
repnz
daa
mov
call
movs
jns
cmp
add
cs
jmp
jne
daa
outs
and
push
xor
int
repz
add
pop
add
xor
push
into
xor
mov
shl
ror
retf
icebp
adc
pop
or
lds
mov
or
data16
test
inc
cmp
sbb
inc
or
dec
pushf
mov
jg
enter
jnp
add
adc
xor
sub
inc
pop
inc
inc
lahf
ror
xchg
push
pop
movs
imul
loop
lds
out
sub
dec
pop
or
jl
sar
mov
dec
call
pop
js
pop
iret
shl
rcr
or
sub
shl
pusha
dec
or
lods
cs
xchg
pop
lods
neg
dec
movs
mov
cmp
ret
sahf
add
mov
xor
repz
or
and
shr
adc
adc
movs
movs
nop
pusha
js
mov
ja
cli
pop
vmovdqa
and
jmp
mov
popf
int3
cmp
lods
daa
stc
push
mov
adc
cli
mov
dec
fld
xor
add
push
mov
mov
jns
ror
jle
mov
sbb
out
jg
lods
lock
ud1
rol
pop
sti
pop
sbb
xor
les
iret
cmp
cmp
ret
pop
int3
mov
adc
add
xchg
or
or
xor
fmul
mov
outs
sti
lea
fwait
and
adc
test
add
pop
add
cmps
es
jns
xchg
inc
lods
and
jae
nop
(bad)
cld
push
push
dec
stc
pusha
int
xor
inc
std
jbe
pushf
mov
add
or
or
or
push
ret
popf
or
add
call
scas
mov
mov
push
cli
mov
pusha
inc
clc
xchg
xor
sti
retf
test
adc
mov
jb
xchg
cli
pop
lods
push
gs
clc
sbb
jo
mov
xor
adc
loopne
push
push
sub
inc
xor
iret
pop
sub
imul
xor
aam
pop
sub
cmp
mov
imul
mov
test
and
jg
cmp
ja
pop
push
repz
dec
test
icebp
call
jmp
and
pop
movs
daa
jl
or
sar
mov
xor
ror
add
adc
jle
sahf
nop
shl
jmp
add
or
cmp
or
or
js
aam
stc
pusha
pop
sbb
mov
inc
mov
sub
mov
sub
mov
mov
mov
mov
jmp
xlat
adc
ret
and
ja
mov
arpl
mov
repnz
adc
(bad)
pop
fsubr
push
aaa
mov
sub
rcl
imul
rol
sahf
jo
das
inc
or
mov
(bad)
das
fcomp
push
mov
mov
sub
add
hlt
into
adc
mov
in
pop
test
rcl
js
out
imul
test
xchg
hlt
fidiv
push
mov
pop
adc
fwait
ret
xchg
pop
and
push
or
add
leave
js
mov
push
ret
inc
mov
xchg
fld
test
xchg
and
rol
adc
movs
in
sbb
shl
fcom
mov
xor
gs
mov
add
int
pop
add
rol
pop
out
add
shl
cs
adc
jl
jno
aas
clc
(bad)
sub
stos
and
push
or
fild
push
add
stos
xchg
ja
iret
xor
jne
and
add
add
push
test
sub
push
push
clc
sbb
test
sbb
pop
mov
or
lahf
dec
xor
xchg
call
inc
add
jmp
je
rol
popa
jecxz
adc
mov
pop
xchg
mov
cdq
mov
xor
xor
sbb
add
arpl
js
es
(bad)
cmp
push
push
jne
add
sub
fld
pop
ins
push
push
push
adc
stos
push
cmps
repz
add
xor
test
cmp
into
fcomi
jbe
shl
int3
and
add
inc
loopne
adc
das
adc
(bad)
call
push
movs
scas
pop
jge
dec
hlt
jne
(bad)
call
xor
jo
retf
mov
inc
cld
daa
jne
pop
dec
mov
push
jb
mov
sbb
jb
in
ss
pop
ins
sbb
popa
aam
pushf
adc
je
fnstsw
aas
fcmovu
pushf
mov
retf
inc
push
or
add
shl
lahf
fistp
test
lahf
sti
mov
cs
push
mov
lods
rcl
inc
pop
lea
sub
pop
rcr
sub
mov
sub
jbe
adc
call
cmps
mov
add
arpl
fld
les
or
clc
enter
fcom
shl
add
cmp
ja
inc
jo
movs
pop
sbb
inc
je
popa
jne
cmp
ja
cmp
ja
jge
or
sbb
in
xchg
push
pop
sub
fcmovu
clc
add
shr
add
ins
xor
int3
cmp
or
inc
push
xchg
ret
mov
add
pop
sti
mov
adc
retf
and
add
std
mov
mov
cmc
inc
shl
push
dec
jmp
pop
sub
adc
call
mov
mov
in
ins
add
dec
push
(bad)
call
sar
mov
mov
ja
das
les
je
or
mov
add
sbb
add
adc
jmp
js
push
jle
mov
imul
mov
or
xchg
mov
sub
call
call
div
lods
and
outs
or
dec
sbb
je
mov
dec
jge
add
popa
hlt
adc
imul
mov
xchg
mov
cld
pop
mov
lods
gs
pop
dec
loope
push
jge
add
adc
ret
adc
out
add
push
xchg
inc
adc
pop
cmp
shr
shl
mov
push
push
and
mov
hlt
push
sub
call
and
mov
jnp
mov
mov
(bad)
push
cli
adc
add
outs
hlt
sbb
ffreep
xchg
jne
mov
mov
aaa
add
push
push
lahf
sub
sbb
outs
test
add
movhlps
inc
or
je
add
sub
jmp
je
inc
mov
ins
adc
inc
and
sub
jmp
dec
pop
leave
dec
adc
aam
inc
pusha
les
int
mov
push
es
or
mov
add
iret
cs
sub
and
sbb
xor
xchg
and
fistp
repz
je
shl
pop
jle
cwde
nop
mov
adc
xor
pop
cld
cmp
sub
xchg
xchg
popf
add
mov
or
xchg
push
movs
adc
sub
fadd
add
sbb
imul
push
mov
and
in
and
push
popa
hlt
cmps
lock
and
pop
(bad)
or
jge
inc
xchg
inc
mov
mov
iret
xlat
xchg
les
cld
std
push
push
inc
or
inc
popf
cmps
mov
stos
push
push
lods
call
sbb
mov
stos
div
addr16
push
addr16
xchg
jb
lds
lods
addr16
retf
sahf
push
mov
push
mov
and
or
cmp
pop
mov
push
and
inc
mov
inc
push
mov
xchg
xor
int3
sbb
mov
xchg
out
in
sbb
mov
call
call
dec
test
pop
fsub
add
cmp
fdivr
dec
mov
cmp
jbe
js
fadd
je
les
daa
leave
or
loop
int
dec
ffree
pushw
std
mov
hlt
sub
pop
jmp
loope
mov
loop
xor
xor
lea
or
jno
shl
pop
xor
inc
cmc
bound
push
xchg
push
aas
sbb
inc
push
inc
add
shl
pop
inc
push
sbb
dec
(bad)
sub
jmp
and
inc
loop
bound
jg
push
inc
adc
add
xchg
ds
clc
daa
mov
pop
or
icebp
sub
test
mov
test
adc
(bad)
cld
fmul
mov
jne
adc
mov
int3
mov
mov
or
rol
push
shl
mov
fiadd
or
pop
cmp
push
fs
adc
mov
repnz
xor
jae
mov
cmp
cmp
stc
sar
iret
jae
or
and
xor
movs
pusha
rol
out
sbb
inc
jmp
test
or
jmp
add
sub
lea
dec
xor
dec
ret
pop
sahf
clc
in
push
hlt
(bad)
fidivr
push
xor
xchg
or
aad
js
dec
add
xor
cdq
rol
mov
mov
fistp
in
push
sub
push
sub
inc
sbb
fild
clc
dec
mov
mov
mov
mov
lea
xchg
sbb
push
jbe
or
xchg
gs
iret
mov
mov
mov
shl
add
test
jno
sub
data16
mov
dec
xor
and
mov
cmp
mov
fwait
xchg
movs
dec
xchg
(bad)
repz
adc
add
jmp
mov
arpl
test
pop
mov
cmp
outs
clc
xchg
cmp
call
sub
mov
in
mov
sti
shl
test
adc
stc
ds
mov
push
pop
les
xlat
cmc
call
xor
jecxz
or
xlat
push
icebp
adc
or
aaa
xchg
ret
jmp
in
dec
iret
and
jne
(bad)
jno
into
ds
or
add
lock
sti
sbb
push
or
mov
(bad)
or
and
add
sti
(bad)
sti
cmp
ins
xor
cli
adc
push
adc
out
push
add
call
mov
jl
dec
cmp
or
test
mov
pop
aas
inc
jo
sbb
sub
xchg
pop
cmps
js
loopne
inc
pop
pop
mov
pop
add
xchg
test
ret
xchg
mov
and
sbb
pop
jns
popa
dec
jmp
cmp
and
inc
and
sbb
in
ins
retf
clc
cli
cmps
jne
lock
dec
jmp
or
imul
mov
cld
jmp
dec
sbb
rcr
mov
mov
in
mov
mov
fcom
or
aaa
and
pop
inc
aam
ret
adc
mov
inc
pop
nop
ins
or
add
or
push
inc
mov
and
(bad)
retf
jle
not
js
push
push
ins
mov
sti
mov
js
xlat
repnz
jl
pop
cmp
je
inc
cld
inc
dec
mov
(bad)
cmp
jbe
test
rdpmc
fild
mov
mov
add
test
mov
pushf
adc
icebp
clc
in
cmp
cdq
add
xchg
pusha
inc
sub
inc
push
adc
das
add
hlt
fmul
repnz
add
pop
js
xchg
scas
add
mov
scas
xlat
ins
mov
sbb
push
dec
(bad)
push
add
sbb
xchg
sub
loope
loopne
mov
fs
neg
das
add
nop
ja
nop
add
adc
push
pop
sbb
mov
aam
es
or
push
call
push
mov
stos
push
inc
fmul
cmp
or
xchg
pop
inc
pop
cld
or
adc
shl
jmp
sub
push
pop
test
cwde
inc
paddq
inc
retf
hlt
pop
adc
mov
cmp
jns
mov
sbb
xchg
(bad)
xchg
push
pop
jo
imul
lods
mov
enter
sti
ins
adc
bound
pop
hlt
test
jnp
shl
mov
mov
xchg
data16
mul
xchg
mov
mov
mov
clc
and
jmp
ss
add
xor
and
aam
aas
mov
cmps
ds
ja
jnp
push
sbb
push
dec
inc
nop
sub
dec
and
or
gs
cmp
mov
push
cli
xchg
lea
or
or
imul
and
adc
in
mov
xor
push
cli
aas
adc
in
jne
test
je
xchg
or
inc
inc
jge
es
test
aam
sbb
loop
out
iret
add
scas
je
push
inc
xor
mov
xchg
pop
xor
adc
or
mov
cmp
push
loopne
dec
hlt
aaa
push
add
(bad)
call
adc
and
or
xor
movs
and
inc
mov
mov
adc
stos
jns
and
jmp
in
push
out
jmp
int3
clc
fdivr
pop
ss
nop
lock
mov
sbb
or
cli
push
shl
out
jg
push
inc
xor
pop
mul
sub
ins
sub
and
push
push
jne
xor
hlt
xor
push
js
das
fcomp
popa
icebp
mov
stos
push
mov
cmp
lds
or
and
inc
or
mov
push
push
and
dec
dec
dec
add
ret
inc
cmps
js
add
ret
push
mov
dec
cvtps2pd
stos
leave
stos
icebp
clc
std
fdivr
std
arpl
add
xor
ss
loopne
mov
lods
cmp
jle
push
dec
xor
add
jmp
sbb
add
adc
cld
ins
aad
sub
stc
cmp
and
push
inc
or
or
lock
push
pop
dec
sbb
pop
test
imul
jbe
push
icebp
lock
inc
repnz
pusha
sbb
call
jbe
and
sub
lahf
sub
cmp
xor
mov
cmc
jae
mov
sbb
loope
mov
push
loope
leave
jmp
sub
repnz
fdiv
loop
cmc
xor
sub
idiv
xchg
xor
push
ret
sbb
jmp
sbb
sub
inc
pushf
add
pop
push
jmp
sbb
mov
adc
mov
ret
test
xchg
aam
pop
test
lea
xor
mov
push
fimul
lods
test
or
mov
and
add
clc
dec
add
push
dec
popa
dec
push
cmp
les
mov
popa
push
xor
adc
icebp
push
push
outs
jl
mov
lea
mov
mov
and
cmp
pop
imul
add
add
jmp
add
addr16
or
xor
test
and
repnz
ins
les
jb
xchg
jbe
das
fmul
mov
loopne
test
jecxz
inc
mov
xchg
adc
mov
sbb
push
push
pop
clc
xchg
test
mov
outs
adc
and
test
xor
mov
sahf
and
std
clc
and
push
cld
hlt
push
push
xor
xor
bound
bound
call
sbb
or
cmps
adc
enter
rol
add
sbb
pop
inc
fs
sub
dec
hlt
push
jge
test
xchg
inc
arpl
dec
add
sub
push
cmp
mov
clc
push
push
add
jmp
cmp
ds
mov
loopne
adc
push
test
xlat
add
mov
jle
or
stc
xor
lock
sub
sub
push
(bad)
(bad)
fsub
dec
dec
enter
jge
jne
(bad)
push
and
lock
inc
push
push
xor
aas
gs
add
adc
clc
stc
dec
sub
std
inc
icebp
test
into
add
push
leave
imul
test
or
mov
ins
inc
pop
dec
movs
add
pop
lock
push
icebp
test
dec
ret
repz
push
lock
aaa
sahf
imul
or
icebp
mov
bound
push
movs
lods
in
inc
movs
mov
cmp
inc
movs
imul
and
adc
xchg
mov
push
inc
mov
jmp
push
not
xor
jge
push
fst
daa
and
in
fcom
call
fcom
inc
xchg
pop
adc
cmp
scas
or
ins
add
add
sub
and
clc
xchg
fisub
add
lahf
dec
sub
mov
or
gs
xor
pop
scas
mov
pop
add
inc
mov
and
jecxz
push
mov
fisub
pavgb
sahf
mov
fdiv
cmp
ja
cmp
add
shl
popa
dec
cmp
in
stos
add
xor
add
mov
je
jecxz
mov
pop
push
loop
adc
mov
add
or
add
mov
int3
lock
ss
sub
inc
adc
repnz
fsub
xchg
das
das
pop
xchg
dec
dec
cld
jmp
inc
xor
leave
inc
leave
adc
and
or
movs
cmps
ins
cmp
add
test
cmp
pop
inc
movs
into
repz
lahf
pop
inc
cmp
jb
cmp
add
adc
mov
jno
add
push
push
stos
ror
pop
add
and
nop
aaa
mov
pop
add
enter
xor
mov
mov
xchg
mov
mov
and
clc
xchg
sub
jmp
push
jae
ja
pop
mov
push
or
call
mov
mov
mov
imul
sbb
add
push
push
sbb
jo
xchg
sbb
cli
or
sti
call
test
and
adc
hlt
add
sahf
dec
aam
jno
jl
sbb
out
lea
loopne
mov
loop
fmul
sbb
mov
dec
je
jg
adc
xchg
mov
adc
movs
xor
cs
jle
and
xlat
repz
aaa
mov
and
mov
repnz
jne
sub
push
inc
pop
aas
xchg
fadd
jnp
daa
add
mov
sahf
push
pusha
xchg
sbb
call
movs
add
sbb
int3
(bad)
push
xor
out
outs
add
mov
mov
dec
adc
enter
sbb
xor
jmp
push
mov
dec
ret
add
add
add
or
je
pop
sub
cmp
hlt
mov
aaa
inc
dec
rol
or
pop
ret
cli
cmp
push
dec
lods
jp
mov
scas
div
adc
(bad)
jl
pop
or
xor
fucomi
mov
or
sub
or
jo
cmp
cmp
stc
cmp
cmp
popa
jl
inc
dec
add
add
dec
mov
movs
or
cwde
jne
stos
add
mov
mov
outs
shl
inc
or
or
mov
inc
sub
push
pop
xchg
mov
or
xchg
adc
mov
ins
dec
ins
vprotq
shr
xchg
clc
push
fcmovb
or
lahf
in
sub
into
arpl
push
sbb
add
popa
mov
pop
cdq
test
test
cmp
test
ss
adc
dec
add
es
adc
jmp
pop
jp
ror
pop
call
mov
jne
jnp
sbb
push
sbb
pop
arpl
sbb
and
test
inc
dec
cmps
hlt
sub
mov
cmp
ret
loopne
pop
out
mov
call
in
xor
repz
inc
jbe
cmp
and
cwde
or
repnz
fcom
enter
out
xchg
enter
pop
pop
jmp
xor
inc
rol
in
pop
outs
dec
dec
aas
ret
enter
call
xor
or
call
jle
ror
imul
inc
gs
cmp
adc
shl
int3
push
icebp
shl
or
mov
add
js
loop
lods
clc
inc
jmp
test
xor
jns
xor
add
add
clc
inc
push
lods
in
adc
xchg
mov
or
jne
adc
add
push
dec
(bad)
jbe
aaa
cmp
mov
(bad)
aaa
dec
dec
popf
call
jl
scas
call
add
rol
test
enter
add
outs
cmp
adc
(bad)
in
add
cmp
push
test
test
inc
jecxz
and
sub
xchg
mov
pop
inc
add
cwde
xchg
sub
adc
in
add
(bad)
xchg
std
add
add
jbe
fistp
(bad)
jbe
and
pop
add
aaa
out
test
xchg
xchg
jo
jmp
call
add
mov
in
jne
inc
nop
lea
lea
xchg
inc
sbb
pop
cdq
xor
mov
lahf
jge
mov
add
mov
jb
add
adc
jl
ja
mov
push
cmovle
sub
dec
add
add
adc
mov
or
dec
ds
push
add
in
jecxz
mov
mov
fcmovnb
xchg
inc
jbe
push
ja
data16
xor
jmp
mov
out
inc
push
je
test
cmps
icebp
sbb
pop
dec
mov
and
into
pop
pop
adc
sbb
test
or
or
mov
cli
mov
and
push
movs
fnstsw
and
or
mov
pop
adc
add
mov
inc
pop
mov
pop
lds
rol
add
test
mov
mov
jbe
dec
mov
mov
dec
dec
shr
jo
mov
push
add
jge
(bad)
dec
and
inc
add
push
pop
xchg
mov
push
mov
ja
jmp
js
aad
sbb
push
push
push
xchg
sahf
add
loop
(bad)
push
jne
fisttp
jl
lock
fdivrp
add
and
ror
pop
adc
repnz
and
pop
pop
clc
clc
jmp
mov
jo
lea
shr
shr
add
imul
sbb
adc
xor
push
popf
shl
loop
out
fs
inc
cmp
add
ds
mov
add
in
not
cmps
test
add
lea
loope
jns
mov
icebp
jb
jl
or
(bad)
fsubr
bound
adc
jo
mov
movs
test
and
and
inc
xrelease
mov
cmp
sub
scas
jge
mov
mov
movhlps
and
shl
and
or
mov
mov
test
dec
mov
sbb
shl
cmp
lods
scas
xor
fsubr
xor
movs
sbb
dec
fdivr
add
cmp
and
int3
or
adc
pop
add
adc
ss
push
push
push
pusha
fadd
add
inc
jo
mov
je
(bad)
call
mov
out
rol
imul
push
jne
dec
push
cmp
dec
(bad)
loopne
adc
bound
mov
push
aas
aas
in
push
dec
call
sahf
xchg
cmps
shl
call
nop
out
add
and
rcr
xchg
pop
in
pop
imul
pop
sub
pop
mov
movs
inc
movs
adc
enter
rol
ds
or
jb
mov
jg
cli
mov
fsub
and
pop
adc
in
mov
xor
clc
cmp
clc
popf
xchg
retf
(bad)
push
pop
push
push
inc
or
fadd
dec
ret
lock
add
xlat
jae
push
cld
rcl
adc
adc
xchg
rol
sar
movs
loopne
or
lock
hlt
or
sub
inc
pop
iret
shr
sub
push
inc
adc
dec
inc
add
retf
call
add
pop
inc
ss
shr
add
inc
inc
dec
jne
sbb
pop
cwde
ss
test
(bad)
lock
mov
add
lsl
mov
xchg
dec
arpl
cli
cmp
and
sbb
dec
push
loopne
or
repnz
inc
inc
call
test
jo
jnp
push
jmp
dec
jp
sub
xchg
adc
xchg
jle
pushf
out
dec
fadd
(bad)
cdq
mov
enter
ins
or
mov
loope
add
pop
icebp
jge
popa
push
pusha
push
cs
inc
cmp
add
push
mov
lods
xor
jno
jo
or
cli
add
mov
push
sub
jb
lahf
mov
xchg
xor
fs
or
shl
(bad)
sbb
(bad)
in
push
sbb
ror
cs
add
mov
js
jno
sbb
jb
cwde
std
addps
in
jb
shl
mov
cwde
jl
shr
(bad)
mov
xor
push
sbb
add
xchg
cmp
call
clc
hlt
lock
(bad)
push
icebp
and
mov
loopne
sub
sbb
ins
cmp
clc
mov
int
rcl
add
or
loopne
adc
sahf
cmp
dec
(bad)
std
sub
sti
cmp
cmp
mov
cld
pop
pop
jmp
pop
pop
call
xchg
cmp
cdq
dec
adc
adc
inc
add
fist
adc
sub
sub
add
cmp
mov
shl
out
sti
scas
xor
inc
stos
dec
mov
ret
mov
xor
add
mov
scas
add
xchg
inc
push
outs
dec
loopne
inc
(bad)
jmp
cwde
dec
ret
ds
sbb
fucompp
mov
xchg
nop
ds
fidiv
rcl
jle
or
mov
mov
pusha
push
test
push
mov
dec
inc
je
add
fcomp
fs
xchg
mov
push
imul
push
imul
jno
lea
jo
enter
mov
mov
lds
cmp
das
jo
mov
inc
(bad)
bound
cmps
adc
push
push
scas
sbb
dec
jo
and
or
and
pop
ins
js
add
aaa
mov
mul
popf
mov
xor
stos
call
sbb
dec
add
mov
mov
sbb
addr16
mov
jnp
ja
(bad)
arpl
push
(bad)
adc
retf
repnz
pop
pop
jae
pop
and
retf
dec
mov
inc
js
xchg
nop
mov
mov
push
mul
aaa
or
sub
gs
aas
ins
aam
mov
mov
test
dec
dec
pop
push
mov
cdq
fisttp
push
mov
jb
(bad)
inc
sbb
add
stos
lods
(bad)
jmp
pop
pop
aad
(bad)
ror
push
ds
mov
sub
js
mov
add
sahf
sbb
ror
outs
pop
fld
inc
jmp
mov
pop
xor
lods
push
rcl
jno
retf
inc
jae
pop
int
lock
out
jecxz
sbb
push
adc
mov
(bad)
aad
xor
and
lds
inc
test
or
addr16
add
jmp
dec
sbb
push
cmp
and
cmp
pop
jo
ret
sbb
push
or
pop
adc
js
xchg
dec
fcom
mov
push
mov
xlat
and
aas
ss
in
setg
dec
sub
in
pop
(bad)
pop
cmp
jmp
ficomp
add
and
inc
mov
repz
imul
adc
add
and
sbb
jo
jg
rcl
sete
leave
ret
and
call
sub
jmp
rcl
jne
sub
rol
xor
jno
push
jo
xchg
or
cmp
lea
mov
pop
mov
sar
jmp
outs
ret
test
sbb
call
addr16
jbe
dec
test
adc
mov
sub
pop
xlat
mov
jmp
dec
xchg
sbb
das
sub
fimul
push
and
cdq
pop
daa
mov
ror
out
jns
mov
or
or
cli
add
setl
mov
bound
(bad)
repz
mov
push
pop
add
add
xor
test
test
xchg
or
mov
pop
icebp
push
inc
push
nop
scas
sbb
add
mov
or
or
mov
mov
jle
data16
fs
imul
xor
adc
out
aam
add
jo
push
or
or
jle
adc
adc
fisttp
dec
jp
or
sub
mov
(bad)
or
mov
mov
dec
ja
dec
fmul
mov
add
aas
or
mov
inc
add
push
mov
mov
shl
and
js
mov
xchg
retf
jmp
xor
int3
xor
in
sbb
inc
sbb
mov
pop
cmp
je
js
and
sbb
mov
inc
add
or
sbb
outs
sbb
repnz
sbb
js
sbb
dec
and
inc
xchg
sub
popa
mov
pop
enter
add
push
xor
mov
cmp
sbb
aad
mov
push
push
mov
sub
add
into
out
add
ja
call
lods
lods
rcl
mov
mov
adc
lods
dec
sub
jg
repnz
xor
push
(bad)
push
sbb
test
pop
push
rol
cld
jno
mov
pop
nop
fcmovnb
xor
xor
sbb
dec
shl
sbb
int3
mov
test
push
fimul
pop
jne
jmp
std
fistp
movs
fcom
cmp
and
call
cmp
pop
mov
jne
movs
push
loopne
or
pusha
cmp
jle
mov
mov
gs
cmp
push
rcl
mov
or
mov
or
imul
mov
xchg
jl
hlt
sbb
xchg
pop
mov
enter
jo
inc
add
mov
(bad)
fld
cmp
dec
push
push
push
mov
test
cmp
lock
es
sub
jne
(bad)
idiv
ds
dec
in
or
or
leave
add
and
push
fisttp
sub
sbb
xchg
push
mov
sti
sbb
inc
jl
push
mov
cmps
xchg
jp
cmp
cwde
pop
das
(bad)
stos
lds
rcr
mov
neg
add
sbb
jle
jb
pop
pop
or
push
xchg
and
xor
dec
jo
movs
fwait
jl
jb
pop
add
nop
retf
jg
add
push
sbb
gs
enter
daa
push
jle
mov
aam
adc
mov
xchg
dec
jne
mov
push
sub
push
pop
mov
(bad)
fiadd
addr16
pushf
xchg
jae
push
leave
mov
mov
or
dec
fiadd
movs
adc
push
dec
xor
jmp
test
push
or
add
int
inc
adc
cmp
outs
mov
jbe
jb
mov
rcr
jg
sbb
add
dec
inc
pop
test
clc
xchg
cwde
add
push
dec
ins
loope
sti
jnp
ror
sub
(bad)
mov
xchg
fisttp
lea
inc
retf
jmp
add
dec
jmp
mov
mov
into
mov
fcomp
sub
int3
push
ret
ret
push
sub
add
cs
inc
dec
loope
loopne
jecxz
push
jg
aaa
cmp
(bad)
xchg
and
pusha
jle
adc
fadd
xchg
inc
call
inc
lock
sub
push
push
jmp
push
adc
jge
and
lahf
push
fisttp
jg
jmp
cwde
lods
pop
xchg
xor
cmp
push
push
adc
pop
shr
add
mov
adc
pop
mov
xchg
xor
cmps
ins
and
push
push
lahf
enter
dec
pop
add
add
sbb
pop
mov
and
or
popa
cmc
xor
lock
add
adc
jl
mov
jle
sub
aaa
dec
sbb
cmp
adc
push
nop
dec
adc
push
mov
add
sbb
cmp
movs
and
inc
test
dec
fst
(bad)
xchg
or
mov
and
fstp
adc
bound
push
cmc
pop
mov
or
and
scas
pop
out
inc
pop
jnp
ins
or
sub
or
xchg
xchg
and
lds
scas
sbb
cmps
lock
cmp
sbb
jb
popa
outs
les
push
icebp
pop
add
inc
adc
adc
(bad)
jmp
dec
mov
or
cmp
add
out
shl
ja
cmp
or
push
and
push
cmp
sbb
or
mov
mov
int3
adc
scas
lahf
fidiv
scas
and
jecxz
cmp
popa
outs
inc
add
lods
sbb
jo
ja
jmp
push
js
and
sbb
pushf
push
and
jg
and
dec
add
sub
dec
push
push
or
pop
cmp
adc
inc
and
add
test
xchg
movs
mov
out
and
mov
rcl
add
or
push
out
es
xchg
aaa
add
(bad)
adc
rol
push
add
clc
jne
sbb
loope
popa
xor
mov
mov
mov
or
and
mov
lock
pop
movs
mov
push
jge
push
add
fwait
cld
ja
push
clc
mov
fdiv
sbb
cwde
leave
sub
pop
mov
ret
adc
push
add
pushf
cs
xchg
add
push
sub
inc
mov
jb
ret
mov
(bad)
jmp
test
stos
adc
inc
jae
inc
push
xor
mov
and
xchg
push
clc
inc
pop
fidivr
push
dec
sahf
cmp
loopne
inc
sub
pop
and
sub
mov
jae
jne
fldenv
enter
sub
les
popa
mov
shl
jne
mov
jecxz
push
clc
dec
test
iret
(bad)
in
jne
mov
movs
lock
cmps
or
xchg
dec
dec
cmc
jne
and
jae
mov
rcl
mov
lock
cmp
xor
pop
mov
lea
movs
lock
jo
je
adc
cmp
mov
dec
or
cmps
push
jp
jne
push
xchg
scas
mov
rcl
mov
and
mov
dec
mov
sbb
sbb
mov
fbld
mov
mov
sub
xor
pop
and
imul
add
je
sub
retf
push
and
inc
jg
adc
cmp
call
jo
popa
push
jmp
cmp
mov
sbb
dec
jb
movs
pop
rol
inc
cmps
data16
sub
leave
fcmovnu
jmp
enter
mov
bound
jo
jmp
mov
cmp
jl
and
xchg
pusha
js
cmps
std
dec
ror
and
sahf
xlat
ret
clc
mov
test
popa
fsub
pop
mov
add
jns
fdiv
sub
fstp
or
or
outs
outs
add
sub
call
ret
outs
test
retf
dec
inc
clc
sub
inc
mov
cmp
jl
in
push
mov
test
jne
jo
test
cmp
add
call
gs
ins
cmp
int
cli
js
jo
nop
shl
or
add
sub
ins
adc
pop
jo
out
mov
or
leave
push
imul
jmp
imul
mov
mov
or
sti
pop
into
sbb
imul
push
nop
mov
dec
xchg
lock
ret
fisttp
lahf
add
pop
loopne
shr
adc
loopne
jmp
cmp
imul
jmp
dec
add
(bad)
inc
sub
lods
push
push
add
dec
test
and
shl
in
add
call
js
and
(bad)
(bad)
jg
or
bound
cmp
cmc
or
xchg
(bad)
mov
cdq
inc
or
jecxz
jmp
call
std
xchg
cmp
cmp
jne
adc
aam
(bad)
leave
lods
xchg
sbb
(bad)
mov
imul
mov
cmp
adc
hlt
mov
mov
test
xchg
jl
jb
imul
movzx
add
jnp
int
cmp
sub
gs
cmp
xor
push
inc
fs
and
sub
jns
pop
pop
jne
pop
jge
cmp
das
add
lods
mov
sbb
xchg
out
enter
(bad)
push
scas
push
push
dec
jb
adc
and
mov
pop
es
mov
fucomip
lahf
xor
(bad)
sub
loop
pop
inc
mov
and
(bad)
add
adc
xor
xchg
fsubr
xchg
xor
outs
push
push
push
js
mov
jns
rcl
mov
scas
inc
adc
ins
adc
cmc
cmp
push
add
push
aam
add
setg
push
mov
nop
sbb
inc
scas
sbb
popa
imul
cmp
push
pop
inc
(bad)
sub
div
sub
dec
fbld
shl
adc
cld
rcpps
outs
or
mov
or
iret
repz
(bad)
ficom
loope
nop
add
jge
(bad)
inc
(bad)
sbb
mov
mov
cmovno
sub
rol
mov
inc
in
and
lods
or
push
es
test
xchg
ret
xor
je
xlat
sbb
pusha
push
aad
je
push
push
arpl
imul
cmp
adc
clc
test
out
pop
mov
adc
push
cmp
adc
cmp
adc
pop
add
sbb
or
lods
add
fs
push
mov
sbb
(bad)
add
lods
mov
dec
fadd
mov
mov
test
clc
dec
sbb
lock
mov
fild
push
sbb
ins
or
sbb
jge
arpl
jns
arpl
mov
out
push
sbb
int
adc
cdq
fs
push
adc
mov
ins
dec
jne
add
je
sbb
add
cmp
mov
lea
or
cmp
xor
call
inc
dec
pop
sub
push
mov
mov
mov
out
pop
adc
fdivr
cmp
jmp
push
sub
jbe
pop
mov
mov
xchg
sbb
test
(bad)
in
mov
jp
sar
sar
jb
and
call
rcl
push
mov
ror
mov
rcr
mov
mov
and
push
(bad)
jmp
sbb
lea
mov
inc
adc
or
jp
add
loop
ss
dec
ins
mov
pusha
pop
cmps
mov
adc
aaa
dec
stc
or
cli
mov
add
je
rcl
push
xor
daa
pop
xchg
push
push
nop
dec
mov
mov
xchg
xchg
les
sub
xor
push
shr
in
add
dec
sub
ins
imul
xchg
retf
pop
sbb
shl
push
or
jne
shr
dec
sub
jns
sbb
or
loope
inc
pop
jge
das
add
loopne
or
in
or
je
sub
pusha
outs
popf
js
es
retf
ins
js
imul
jmp
add
jecxz
(bad)
imul
and
mov
push
popa
pusha
mov
cmp
sbb
mov
(bad)
mov
sbb
sbb
dec
jne
and
pushf
mov
ret
test
sub
sahf
jecxz
loopne
mov
or
daa
add
div
sti
pop
sub
div
out
popf
test
out
jae
inc
pop
stos
mov
add
mov
inc
sar
jno
mov
sub
hlt
dec
pop
popa
pop
sbb
xor
mov
ret
push
inc
stos
or
mov
icebp
xor
loopne
xchg
rcr
shr
pop
or
or
cmp
jae
mov
or
mov
add
loop
ficomp
js
mov
or
sbb
arpl
outs
pop
mov
ins
sub
cmps
add
aas
ret
cmp
xchg
scas
add
xchg
cmc
cmp
sbb
mov
add
rcr
jne
add
inc
fmul
and
add
and
cmp
pusha
xlat
je
loop
or
dec
loopne
xor
mov
(bad)
dec
pop
add
sti
mov
adc
cmp
xchg
shl
daa
es
movs
and
sbb
test
adc
sbb
push
imul
adc
push
add
mov
adc
add
dec
dec
ror
repnz
jecxz
je
inc
js
adc
mov
or
and
inc
adc
sbb
mov
cmp
cmp
movs
loop
fcomp
mov
sahf
test
sbb
lock
push
add
cmp
cdq
sbb
push
call
or
cs
mov
push
inc
into
and
sbb
test
jbe
push
(bad)
push
loop
jnp
push
fiadd
mov
xchg
sbb
sahf
and
out
add
pop
je
pop
mov
jne
jl
add
or
cmp
rcr
jecxz
sti
jo
add
std
cmp
fcmovbe
inc
mov
push
fdiv
xor
ja
(bad)
je
lods
or
add
and
xor
add
lds
xor
xchg
in
add
dec
ds
inc
cs
push
div
push
dec
adc
dec
cmp
cmps
jnp
mov
sbb
and
cmp
and
popf
cmp
xchg
and
popf
sbb
add
push
fwait
jecxz
leave
jne
dec
lahf
inc
push
and
adc
and
(bad)
in
sub
or
scas
(bad)
xor
inc
cmc
push
push
sub
and
or
or
push
paddusb
ret
add
add
or
pop
(bad)
stos
mov
sub
sbb
out
inc
inc
pop
js
mov
or
rcr
ds
push
mov
or
jnp
fist
add
clc
mov
in
pushf
push
adc
addr16
call
aaa
and
mov
pop
icebp
std
popf
xchg
inc
or
adc
clc
or
outs
or
dec
aad
or
push
push
xor
adc
pop
pop
xchg
push
sbb
mov
dec
add
xchg
add
add
jmp
or
dec
xor
shr
add
lea
pop
sub
pop
add
daa
sub
sbb
inc
push
add
sub
mov
mov
loopne
jl
inc
lods
dec
xchg
xchg
popa
test
popa
movs
jb
push
add
xchg
pop
cmp
loop
cmp
pop
mov
bnd
add
add
sub
in
inc
or
loope
dec
pop
cld
in
or
dec
adc
cmp
sbb
jl
shl
inc
pop
push
or
mov
rcr
or
or
add
or
push
sub
cmp
fisttp
js
addr16
mov
and
add
xchg
loope
sub
or
and
jmp
add
(bad)
lods
adc
push
out
sbb
inc
inc
push
mov
inc
push
xchg
ret
out
mov
lock
mov
inc
(bad)
in
into
add
add
add
mov
hlt
add
and
rol
mov
jo
cmp
cwde
lods
or
or
xor
movs
push
retf
outs
loopne
rcr
out
push
ror
mov
inc
and
pop
pop
adc
sub
mov
cli
add
xchg
test
sar
test
fadd
fimul
mov
mov
fidivr
adc
jae
inc
adc
add
cmp
aas
adc
jb
jno
sub
jne
pop
sub
jge
es
addr16
mov
or
sub
cwde
aad
sub
push
mov
dec
mov
adc
xchg
or
xor
jg
adc
adc
pusha
cmp
push
aas
pop
add
fld
and
push
rol
sti
shl
addr16
pop
mov
int3
jl
imul
xor
dec
enter
sub
jae
adc
jb
xchg
aas
stos
movs
push
sahf
push
mov
mov
adc
mov
out
test
mov
cmp
call
mov
pop
call
std
or
push
pop
add
add
std
or
hlt
test
dec
mov
jne
jecxz
lds
adc
aaa
repnz
or
mov
repz
cld
stc
sti
clc
or
push
pusha
les
mov
leave
jne
push
and
mov
inc
je
fdivr
mov
bound
in
inc
xor
adc
ret
lahf
inc
push
inc
(bad)
out
lods
(bad)
data16
push
push
jne
neg
loopne
xchg
aad
jae
jmp
dec
inc
inc
push
jne
pop
in
jae
jno
ja
ds
pop
pop
cmp
push
mov
fwait
dec
and
cmp
mov
add
mov
aas
test
pop
fiadd
add
add
call
test
add
test
sbb
xor
sbb
adc
cmp
xchg
adc
push
and
push
(bad)
add
int
mov
dec
fmul
ret
sbb
and
adc
pop
rol
aaa
add
add
shr
in
stos
cdq
pop
shl
pop
adc
mov
fidivr
out
repz
cmp
loop
cmp
push
movs
sub
inc
jle
dec
std
or
sbb
add
mov
sub
and
dec
or
fidivr
add
xlat
adc
add
imul
xchg
push
ret
adc
sub
fldenv
cld
fstp
call
daa
xor
mov
addr16
xor
add
dec
into
sub
loopne
push
adc
lea
push
jno
and
jle
outs
movs
loope
pop
dec
pop
pop
adc
or
cmps
jns
cmps
cld
std
sti
cld
cli
icebp
push
pop
cli
push
out
sbb
or
div
jmp
xor
jg
jmp
and
and
std
cld
sti
xchg
out
cld
es
call
adc
or
mov
xchg
test
pop
or
aaa
push
add
sub
xchg
push
sbb
xor
push
aaa
nop
ror
(bad)
push
stos
xor
(bad)
cmp
pop
daa
xchg
or
or
add
jne
sahf
jbe
xor
pop
add
mov
xor
xchg
xchg
pop
sbb
enter
cld
sti
test
mov
sub
pop
dec
cli
test
aad
imul
movs
add
popf
or
test
cmp
sti
fucomp
dec
bound
mov
xchg
outs
sbb
nop
call
dec
cld
adc
or
inc
or
outs
or
jb
pop
and
(bad)
je
dec
lods
rcr
(bad)
sbb
popf
adc
dec
or
mov
push
jae
jbe
sub
adc
inc
xor
and
mov
sub
xor
pop
adc
test
repnz
in
mov
and
mov
push
jmp
in
and
cwde
in
add
push
adc
pop
dec
pop
bound
xchg
nop
xlat
and
loope
sahf
repz
test
mov
mov
(bad)
sub
cmp
jne
and
push
ret
jmp
cmp
jecxz
inc
aam
cmp
adc
pop
adc
adc
mov
pop
mov
repz
add
es
lea
rol
add
fwait
mov
mov
inc
inc
xor
mov
mov
pop
(bad)
push
sbb
popa
inc
mov
jbe
cmps
loopne
adc
sub
(bad)
cmp
inc
pop
or
xchg
mov
push
jmp
lds
scas
ficom
pop
mov
or
repnz
push
test
ja
jmp
mov
inc
loope
mov
ret
mov
xor
add
mov
push
sbb
int3
and
add
icebp
and
jb
aas
sbb
or
or
sbb
aam
call
sbb
xchg
mov
test
aam
loopne
outs
int
das
or
jne
jmp
lea
mov
cli
shr
je
dec
push
inc
or
pop
or
jmp
sti
ins
pop
mov
jmp
mov
mov
mov
inc
add
ins
push
cmp
adc
fprem
jp
clc
cdq
jle
and
es
cwde
call
xchg
pop
fisub
jo
lock
or
sub
add
fdiv
scas
add
jge
or
pop
mov
sub
push
dec
jl
shl
cmps
sub
movntq
add
add
test
or
lock
clc
dec
cmp
fwait
pop
jmp
out
adc
add
(bad)
fsubrp
rol
jmp
sub
loope
sti
add
sub
jne
jne
sub
mov
cli
out
push
loopne
cmc
pop
lods
add
mov
mov
scas
shl
mov
in
dec
adc
pop
xchg
cld
jle
jg
pop
out
inc
or
mov
imul
and
pop
mov
sbb
adc
div
sbb
and
stos
pop
mov
sahf
inc
inc
repz
popa
shr
push
jp
jecxz
cmp
sahf
or
test
pop
or
imul
mov
sub
cmp
xor
xchg
je
xlat
retf
jg
cmp
or
xor
test
add
fild
mov
dec
shl
adc
mov
sbb
loop
fimul
xchg
rcr
xchg
jne
fwait
lahf
les
mov
mov
adc
pop
mov
mov
fild
imul
mov
fisub
dec
and
ins
sub
pusha
gs
cmp
xor
adc
pop
mov
enter
add
call
and
(bad)
loopne
and
(bad)
rcr
push
push
inc
sbb
push
clc
jp
xchg
push
mov
mov
add
aas
aas
inc
and
jo
sar
and
frstor
icebp
imul
add
dec
xrelease
bndstx
enter
js
and
(bad)
push
push
inc
and
ret
push
clc
into
iret
mov
pop
adc
shr
iret
fwait
adc
jb
jge
sbb
or
jmp
loopne
or
ret
and
pcmpeqd
fs
add
je
sar
(bad)
mov
data16
mov
fbld
push
gs
push
mov
fistp
rcr
jo
stc
xor
lea
mov
and
dec
add
stos
and
mov
add
fwait
add
mov
sti
mov
sub
xor
mov
add
js
popf
dec
pop
lds
in
and
mov
xor
mov
mov
and
lock
mov
mov
inc
mov
mov
mov
ret
les
fisub
test
inc
push
xor
mov
sbb
xor
ret
popa
mov
mov
loope
js
mov
dec
(bad)
mov
push
adc
adc
add
scas
sbb
mov
loop
cld
xchg
sub
std
sbb
icebp
add
add
cwde
rcr
rol
or
sub
call
jo
cmp
mov
sti
push
mov
mov
cmp
mov
cmp
js
dec
mov
or
mov
xchg
add
jno
push
sbb
retf
sahf
mov
pop
popf
push
pop
push
das
cmp
ss
or
dec
test
in
mov
mov
mov
or
ror
inc
add
(bad)
mov
enter
jmp
pop
xchg
push
jmp
mov
popf
or
push
cmp
cmps
sbb
xor
push
repz
mov
add
enter
fwait
jns
outs
sub
add
outs
add
rcl
pusha
jne
clc
imul
hlt
pushf
in
xchg
out
lahf
add
cwde
xchg
dec
or
jle
into
add
jno
push
ss
mov
mov
inc
ss
or
retf
fild
add
or
and
inc
xchg
adc
jmp
sub
pop
or
xchg
and
xchg
cmp
sbb
call
loopne
mov
jae
out
pop
inc
cmp
out
jo
retf
xchg
movs
rol
(bad)
mov
and
or
mov
sbb
and
cmp
fild
xchg
add
ins
mov
out
sub
test
mov
dec
hlt
cmp
inc
and
dec
adc
test
xchg
inc
dec
lds
cs
sub
cmps
clc
imul
sub
retf
cmp
lds
or
je
ds
xchg
test
mov
nop
enter
ret
or
dec
fstp
inc
mov
ret
add
int
dec
enter
clc
iret
inc
jp
(bad)
jmp
call
inc
xor
inc
push
nop
clc
dec
dec
dec
or
imul
pop
add
rol
inc
mov
inc
jecxz
and
pusha
and
jne
mov
push
inc
adc
test
adc
inc
push
inc
and
cli
and
outs
sar
sub
mov
dec
inc
(bad)
fisttp
retf
mov
in
out
shr
fst
sbb
jbe
leave
xchg
pop
add
sbb
cwde
xchg
js
inc
retf
adc
add
das
loope
pushf
arpl
mov
cmp
cmps
mov
call
shr
xchg
das
clc
jae
mov
imul
fst
and
push
outs
pop
pushf
or
pop
icebp
push
sbb
and
iret
xchg
pop
mov
in
dec
out
xor
add
xchg
mov
mov
cmps
jmp
aas
dec
add
pushf
push
push
pop
das
mov
inc
js
ins
lahf
cmp
adc
mov
fcom
xor
scas
cwde
inc
add
add
loopne
and
push
sub
pop
pusha
inc
std
call
mov
sbb
xchg
arpl
sbb
jmp
add
cmp
jo
pushf
xchg
inc
adc
cld
je
stos
push
jp
les
inc
icebp
ret
cdq
jmp
cmp
repnz
shr
scas
cdq
fchs
ret
inc
in
mov
cmc
sub
retf
jbe
ret
jb
add
add
nop
sub
js
in
dec
test
lds
hlt
add
xchg
or
fstp
adc
adc
jg
nop
leave
sub
call
xchg
xlat
pop
iret
stc
(bad)
and
dec
out
popf
test
sahf
mov
adc
pushf
sbb
retf
and
rcr
cdq
sub
inc
push
fiadd
xor
xchg
add
add
nop
xchg
fisubr
jmp
add
xor
cmp
and
jbe
pop
push
push
ins
clc
push
popa
daa
fs
data16
ins
push
shl
pop
loop
hlt
pusha
pop
int
test
add
outs
pusha
and
mov
outs
sub
jle
mov
push
push
xchg
or
in
cli
add
(bad)
ja
adc
les
dec
xchg
add
lea
outs
pop
stos
add
mov
jno
push
retf
ins
jmp
mov
popa
jl
adc
in
ficom
adc
add
mov
js
int
(bad)
outs
xor
pop
jmp
adc
ins
add
nop
mov
add
add
repnz
adc
sbb
xchg
cmp
sub
lahf
add
jb
leave
bound
or
xor
nop
and
add
sub
repnz
arpl
adc
push
ins
or
xor
fst
adc
xor
pop
mov
mov
or
lock
and
dec
and
xchg
sub
mov
dec
bound
sti
add
retf
sbb
int3
inc
xchg
aaa
or
ins
or
add
iret
loope
retf
fld
or
mov
pop
sbb
loope
and
adc
push
loop
or
ret
jnp
inc
or
lods
out
mov
dec
pop
pop
add
xor
mov
or
ror
out
inc
mov
setle
lock
add
mov
add
mov
sbb
mov
mov
ror
mov
push
jl
imul
mov
ss
adc
leave
add
pop
add
fcmovnbe
sub
xor
adc
push
ins
scas
inc
ret
outs
dec
outs
jp
xor
pop
mov
add
test
add
adc
ror
js
call
sahf
xor
ret
mov
or
pop
add
ds
jmp
data16
jge
js
cmp
xor
(bad)
mov
pop
call
jmp
sbb
dec
leave
ficom
jne
and
sbb
add
and
xor
or
and
out
pop
jg
ret
dec
je
pushf
pop
mov
push
dec
loope
jb
sub
inc
add
sbb
xor
mov
adc
mov
test
jle
sbb
pop
xor
sbb
gs
mov
cld
dec
jne
xor
cdq
and
push
sbb
fwait
lea
push
sbb
out
outs
lahf
add
and
mov
jmp
cdq
add
bound
inc
xchg
and
outs
(bad)
dec
mov
stos
test
or
cmp
call
xchg
stc
mov
sub
jo
mov
jmp
pop
sbb
push
cmp
jl
mov
jmp
cs
test
push
sbb
lea
dec
add
sbb
or
ficom
or
sbb
inc
or
or
xchg
out
mov
sub
mov
ror
jb
push
daa
movs
add
call
sub
cmps
add
sbb
mov
mov
add
test
out
je
mov
add
pop
pop
pop
inc
outs
ins
add
sbb
data16
mov
push
loope
retf
repnz
loope
es
leave
mov
scas
add
fstp
lmsw
mov
mov
ror
xor
dec
dec
bound
fisttp
add
mov
jne
mov
shl
add
fdivr
xchg
and
fcomp
dec
add
mov
nop
xchg
dec
lahf
add
pop
outs
cmp
or
stc
push
shr
cmp
ret
jmp
add
jo
dec
popa
(bad)
test
add
dec
pop
sub
xor
in
jb
bswap
pop
dec
hlt
add
lds
scas
fistp
aam
add
or
outs
jecxz
add
push
jmp
lea
push
rol
mov
cmp
dec
int3
add
or
dec
mov
dec
dec
dec
jne
xor
pusha
das
ret
or
add
push
clc
fdivp
mov
add
out
pushf
or
out
adc
cmp
lods
(bad)
mov
sbb
pop
mov
add
push
data16
push
and
push
or
jge
(bad)
inc
mov
mov
cli
and
jl
or
dec
or
sub
sub
inc
push
jb
dec
pop
push
adc
add
adc
dec
sti
scas
dec
(bad)
jne
push
(bad)
push
(bad)
lock
sar
fiadd
add
mov
add
adc
(bad)
in
dec
xor
loop
lods
xchg
in
xor
outs
add
paddd
sbb
sti
repnz
fcom
pop
sti
jne
not
cld
jne
std
jne
xor
sbb
std
pop
cld
packssdw
adc
int
add
std
dec
repz
jb
cld
sti
sti
push
std
int3
shl
mov
imul
and
loope
pop
push
jo
ss
and
adc
adc
cmp
pop
adc
inc
dec
add
adc
add
mov
ret
sbb
(bad)
and
das
and
bound
and
dec
(bad)
mov
into
ret
rol
icebp
inc
aas
push
push
mov
cmp
push
sahf
bound
loope
push
add
inc
pop
xor
xchg
jp
dec
add
call
and
adc
mov
xor
and
or
mov
inc
adc
sbb
retf
push
or
mov
inc
daa
cmp
mov
push
pop
sbb
sbb
stc
imul
outs
ins
ret
and
icebp
sbb
push
sbb
pop
pop
popf
sub
int3
jge
push
or
(bad)
out
xor
adc
stc
push
xlat
shl
add
out
hlt
or
push
popf
sbb
adc
shl
mov
jp
xchg
push
inc
add
inc
fmul
ret
pop
pop
aaa
jne
ja
add
mov
mov
sbb
sbb
ja
pop
pop
test
dec
cmps
jb
push
push
sar
ds
adc
vmwrite
xchg
add
(bad)
add
and
mov
cmp
es
(bad)
cmp
add
scas
pop
pop
mov
mov
cli
arpl
or
mov
ret
popa
in
xor
imul
test
mov
sub
add
pushf
es
fiadd
jbe
xchg
sub
jno
in
jle
repnz
in
push
jl
and
push
test
push
fld
adc
(bad)
sbb
loopne
and
cdq
or
(bad)
not
stos
xchg
(bad)
pop
push
and
mov
in
xor
in
inc
or
or
jbe
pop
ret
das
pop
jmp
jp
pushf
cmp
mov
xlat
daa
or
push
or
mov
test
cmp
(bad)
xlat
xor
inc
inc
cmps
mov
cmp
pop
jo
mov
pop
ja
mov
inc
and
xor
sub
dec
and
mov
enter
sbb
enter
adc
lea
xor
adc
outs
sub
adc
repnz
push
mov
or
sub
inc
mov
add
xchg
aas
add
aas
xor
add
inc
xor
pop
imul
sub
push
xchg
(bad)
cmp
lea
and
sub
pushf
rol
mov
aad
push
mov
test
xor
fld1
xor
push
xchg
dec
jnp
and
adc
or
jae
pop
ret
mov
mov
in
fbstp
out
and
xor
imul
dec
inc
adc
movs
cmps
jo
lahf
mov
jl
push
xchg
pushf
test
xchg
push
dec
and
add
sub
mov
(bad)
pusha
je
scas
dec
xchg
rcl
cmp
xor
int3
push
pop
inc
ficomp
loopne
and
les
dec
push
push
and
xlat
sub
repnz
cmps
sub
add
inc
add
cmps
cmc
das
fidivr
jle
test
mov
or
push
jns
movs
ret
mov
sub
addr16
dec
pop
nop
dec
fdivr
js
or
dec
shl
sbb
pusha
push
out
test
aam
es
iret
and
inc
(bad)
cmp
jge
aas
cmp
pop
sbb
js
aas
dec
and
add
push
lea
sar
inc
dec
pop
cmp
inc
(bad)
mov
inc
lock
add
out
mov
(bad)
sbb
call
ins
das
and
cmp
add
push
or
xor
xchg
in
add
enter
jne
movs
in
or
or
arpl
mov
and
inc
pop
ret
dec
cmp
jae
enter
inc
cmp
pushf
and
xchg
or
sub
and
int3
push
and
adc
and
xor
pop
mov
les
mov
push
sub
push
pop
mov
adc
dec
rol
xor
xor
push
mov
xchg
das
adc
jl
and
or
xor
cli
fidiv
add
sbb
fs
add
jo
enter
mov
rcr
jmp
ror
ds
cld
pop
inc
iret
xchg
fs
inc
mov
push
inc
xor
clc
jno
or
cmp
add
dec
push
mov
add
mov
mov
mov
mov
dec
fwait
rcl
sbb
mov
mov
inc
sbb
nop
xchg
pusha
push
pop
adc
xor
or
inc
adc
inc
nop
sbb
stos
ins
mov
inc
jb
dec
cmp
sub
jo
add
fsub
call
clc
in
mov
(bad)
push
sbb
out
lds
lahf
sbb
dec
cwde
push
push
add
addr16
(bad)
jmp
sbb
sbb
fistp
add
mov
not
jne
adc
push
xchg
int3
sub
sub
pop
dec
repz
xor
mov
bound
bound
les
(bad)
cmovp
lods
inc
mov
dec
ret
xrelease
lods
mov
mov
push
jge
pop
popa
fbld
inc
dec
inc
push
loope
mov
in
jecxz
mov
inc
xor
stos
enter
(bad)
xor
cmp
jb
mov
aas
je
lea
and
fwait
sub
sbb
pop
adc
enter
add
mov
test
or
xor
out
cwde
sbb
mov
je
adc
xor
(bad)
pushf
cmp
and
mov
int3
and
xor
dec
scas
adc
inc
inc
xor
mov
xor
xchg
fdivrp
sahf
sbb
fild
and
sbb
fidiv
rcl
xor
test
ja
add
cwde
pop
xchg
sahf
xor
mov
lar
and
mov
mov
jno
pop
push
ins
push
mov
or
or
mov
inc
jg
jp
add
nop
xor
inc
add
movs
sub
ja
push
les
xor
mov
int3
rol
cmps
or
and
(bad)
jne
jmp
shl
sbb
and
jp
adc
or
dec
dec
movs
dec
xchg
out
xor
pop
(bad)
(bad)
jmp
or
sbb
imul
or
sub
or
dec
inc
test
mov
adc
pop
in
nop
or
xchg
push
fstp
je
iret
arpl
dec
sub
outs
cdq
pop
adc
mov
arpl
pop
dec
leave
inc
mov
mov
add
push
sub
add
push
cmp
push
(bad)
jnp
sub
sbb
or
shl
out
es
mov
cmc
cmps
loope
dec
xchg
inc
inc
dec
jmp
jmp
add
fs
mov
fcom
pop
cmp
push
push
aad
lods
push
enter
dec
aam
mov
jnp
jo
push
mov
and
cmp
sbb
lea
dec
popa
dec
add
sbb
aaa
test
int3
jecxz
add
or
sub
dec
sar
jo
xchg
fsub
mov
add
xor
dec
push
inc
inc
dec
lods
mov
(bad)
jb
push
retf
mov
push
add
xor
sub
nop
test
dec
(bad)
and
dec
adc
push
movs
and
aad
dec
and
in
sub
fldenv
aas
mov
ss
and
leave
ja
or
cmp
push
cmp
pop
loopne
or
add
mov
mov
dec
mov
add
mov
mov
mov
inc
sbb
sub
pusha
rol
pop
daa
fbld
mov
outs
adc
inc
push
mov
sbb
jnp
ins
xor
mov
test
out
ror
add
cmp
popa
in
adc
aas
sub
cmps
sbb
add
nop
xchg
arpl
movs
xor
xor
add
xor
or
inc
dec
cmc
inc
dec
jo
call
ins
sub
mov
(bad)
mov
cmps
mov
jle
xor
inc
or
add
movs
mov
jbe
jle
adc
retf
jle
retf
test
jg
test
shl
or
jmp
in
fisttp
mov
dec
inc
xchg
lods
gs
ins
push
pop
or
cmps
retf
iret
fmul
adc
push
push
imul
xlat
mov
into
sub
mov
fld
movs
push
or
icebp
and
add
pop
jmp
dec
adc
rcl
xchg
sbb
push
sbb
pop
inc
push
outs
sbb
adc
xor
push
pop
push
lea
add
cmp
jns
sub
pop
in
push
xor
imul
sbb
mov
mov
adc
pop
loopne
and
push
pop
cmc
sub
adc
jg
aam
ret
movs
pop
xchg
or
adc
push
sbb
pop
dec
stos
out
adc
mov
or
add
push
sub
dec
imul
dec
push
in
imul
pop
je
sbb
outs
pop
pop
iret
into
mov
ds
inc
jmp
push
lods
fild
cdq
cld
add
sub
and
mov
test
arpl
popf
test
mov
push
sub
dec
xchg
retf
in
mov
nop
jle
loopne
ret
dec
jmp
enter
fst
xlat
jae
adc
xlat
pop
adc
xlat
aas
and
pushf
sub
fcomp
sbb
xchg
push
and
lock
or
cmps
clc
inc
test
push
push
ds
mov
imul
xchg
shl
or
imul
fs
in
dec
jge
retf
pop
push
jno
push
scas
add
scas
cdq
push
and
or
mov
dec
les
dec
fs
pop
ror
push
and
xchg
mov
loop
shl
aam
xor
add
aaa
inc
push
push
bound
call
not
inc
push
add
rcl
adc
lock
lahf
mov
pop
inc
lahf
push
jo
dec
sbb
xlat
shr
jae
sub
cdq
std
mov
and
fist
xchg
add
pop
inc
jge
sub
ret
xchg
(bad)
xchg
xchg
jo
aas
cld
add
or
call
cld
add
xor
out
leave
dec
jne
retf
in
jo
pop
dec
arpl
call
pop
in
dec
xchg
pop
mov
in
or
retf
mov
das
jnp
add
push
mov
adc
pop
add
push
lock
cmpxchg
aam
cwde
aam
loopne
mov
jne
stos
sub
dec
imul
test
icebp
lahf
xchg
and
fisub
add
sbb
(bad)
push
mov
mov
cmp
pop
push
inc
inc
jbe
push
(bad)
aaa
stc
cld
push
push
jbe
dec
push
and
push
push
lahf
jbe
mov
iret
je
and
xchg
inc
push
test
push
and
adc
cmp
nop
inc
sub
ffreep
nop
aaa
inc
jbe
aas
inc
pusha
ret
es
ret
pop
push
add
fcomp
enter
push
pusha
xchg
ja
(bad)
jl
jb
and
movs
aas
and
adc
adc
add
mov
ins
push
lahf
pop
jle
inc
call
in
pop
mov
push
jb
enter
rol
push
ja
mov
add
and
or
inc
pop
pop
hlt
push
push
sub
repnz
or
push
pop
adc
mov
sahf
cmp
shr
imul
mov
sub
mov
and
inc
enter
push
retf
mov
jns
mov
add
push
iret
mov
das
xor
repnz
jg
adc
add
mov
mov
not
in
shl
es
mov
dec
rol
inc
add
adc
fwait
push
mov
clc
cmp
cmp
sbb
dec
dec
ins
data16
and
ds
cdq
cmps
ins
push
cdq
adc
mov
pop
fadd
sub
pop
cmp
imul
push
mov
jo
xchg
hlt
adc
shl
ins
xor
lock
mov
add
ror
inc
cmp
xchg
or
adc
fiadd
inc
pop
and
dec
icebp
mov
jl
sbb
jnp
and
push
jo
iret
(bad)
jle
add
into
sahf
jae
fisub
(bad)
dec
ss
sub
idiv
cmp
inc
cmp
dec
pushf
adc
test
jge
popw
dec
and
cmp
inc
push
mov
dec
pusha
jmp
lods
jns
outs
add
mov
xor
pop
or
xchg
cmps
fwait
xchg
mov
xor
cmp
inc
jns
push
jnp
inc
cmp
jne
add
dec
cmp
nop
das
ss
call
add
push
pop
pop
cmps
add
lahf
sub
inc
enter
retf
or
in
bound
outs
lock
add
cmp
add
and
cld
mov
mov
or
and
(bad)
mov
and
movs
cli
jg
push
add
cmp
mov
or
mov
loopne
cmp
loop
test
add
jp
jp
ret
inc
js
add
push
xor
adc
loop
cld
sub
add
shl
cdq
lock
and
ins
mov
or
or
sub
jae
leave
inc
shl
mov
cmp
push
or
clc
or
adc
aaa
in
xchg
and
cmp
fnstcw
aam
out
je
lds
cmps
je
lock
sbb
cmp
cwde
mov
pop
or
pop
xchg
enter
or
inc
leave
lea
or
stos
adc
sbb
or
in
in
fsubr
adc
pusha
and
sub
in
loopne
or
repnz
in
mov
std
daa
pop
imul
int
(bad)
fmul
jecxz
clc
cmp
inc
cmp
shr
aas
movs
add
or
xor
jae
mov
mov
div
pop
xchg
loope
push
jl
mov
mov
or
mov
pop
popf
mov
push
and
inc
cld
xor
add
lods
fidiv
mov
sub
pop
mov
(bad)
mov
je
xor
add
push
cmp
xor
or
dec
pusha
aaa
enter
push
pop
(bad)
xchg
and
imul
ret
daa
cdq
or
push
jl
stc
mov
or
add
add
jb
push
mov
fist
lahf
fistp
pop
jne
stos
inc
and
loope
dec
inc
fcomp
mov
cdq
inc
hlt
and
inc
out
pop
fdiv
xor
ds
mov
push
pop
movs
pop
dec
add
test
not
call
ins
arpl
addr16
dec
loope
xchg
iret
aam
sbb
mov
xor
sub
adc
cmp
std
js
ret
dec
and
push
inc
shr
add
ror
rcl
sar
mov
inc
dec
push
js
jb
inc
and
and
lods
and
push
pop
and
fbld
sbb
push
inc
fnstenv
mov
shr
push
add
mov
mov
add
xchg
adc
fisttp
neg
stc
push
cmp
je
or
sbb
loop
je
mov
(bad)
sub
sub
jmp
mov
outs
inc
mov
pop
inc
fs
jecxz
push
push
cmp
and
mov
mov
push
lock
imul
loope
inc
push
jge
mov
or
sbb
es
cdq
pop
gs
stos
fwait
and
je
loopne
popa
repz
xor
aas
fbld
push
out
gs
clc
clc
cld
outs
add
and
ds
xchg
in
cs
add
add
add
dec
push
test
pop
xchg
xchg
mov
ret
xchg
sbb
into
pusha
cmps
jo
rol
(bad)
aas
dec
or
mov
shr
sbb
xchg
loopne
test
push
sub
xor
pop
lods
inc
push
cmp
clc
out
sbb
shr
cld
sbb
jg
add
mov
xor
sub
sub
imul
inc
adc
add
sahf
shr
inc
inc
jle
jmp
inc
jmp
shl
or
or
mov
sti
inc
inc
or
popa
aam
jne
retf
mov
push
mov
add
sbb
dec
cs
pop
retf
add
jne
push
stos
mov
das
or
icebp
scas
sti
sbb
or
mov
adc
dec
sahf
adc
push
loop
add
test
jmp
retf
dec
xchg
cli
dec
aaa
mov
sbb
or
cld
lock
outs
mov
push
dec
add
inc
inc
cmp
add
movs
xor
push
or
inc
mov
out
xor
ss
call
cmp
mov
mov
jle
xor
sbb
addr16
mov
add
and
out
btc
adc
cmp
pop
inc
shl
aam
prefetcht0
push
clc
fs
and
ins
retf
push
rol
rcl
pop
cmps
mov
lahf
inc
popa
xor
rcl
cmps
leave
fld
aas
sub
push
ret
(bad)
rcr
lea
not
push
aad
or
push
les
pusha
jne
jae
jp
mov
or
ja
movs
dec
mov
shl
inc
sbb
sbb
jmp
lods
dec
loopne
push
(bad)
and
pop
jmp
cmc
cmp
add
adc
sbb
xor
or
push
adc
sbb
push
inc
sti
or
(bad)
inc
mov
jle
mov
jb
and
push
mov
ja
cmp
adc
mov
gs
or
and
mov
pop
mul
loop
xchg
xchg
mov
push
pop
sub
shl
push
jo
add
jb
inc
and
sbb
enter
test
hlt
pop
xchg
pop
je
cmp
mov
pop
push
sar
cmps
cmp
inc
jne
repnz
or
retf
test
dec
lahf
xor
push
sub
scas
inc
inc
and
fidiv
mov
inc
adc
and
fnstsw
inc
es
leave
cli
cmp
ins
or
add
retf
add
cli
xchg
push
shl
sbb
push
das
push
inc
add
fs
mov
outs
pop
xlat
xor
push
(bad)
outs
adc
cmp
inc
imul
out
rcl
inc
push
dec
out
int3
or
lods
leave
bnd
and
adc
jg
rol
(bad)
adc
push
inc
jl
inc
jg
aaa
sbb
stos
add
ss
and
jae
sahf
jne
jmp
call
cmps
pop
lock
push
stc
jo
inc
loopne
je
aad
xor
xor
fcomp
dec
xor
out
cmp
jne
sub
sar
lock
test
add
cmps
pop
(bad)
inc
sbb
dec
pop
jmp
sbb
xchg
mov
ins
sbb
inc
or
lea
mov
test
or
sub
pop
sub
out
jbe
jno
cmp
scas
fmul
pop
mov
lea
add
dec
ins
in
add
mov
jmp
xor
mov
les
pop
jg
ss
and
dec
js
cmc
push
cmc
js
je
fsubr
ficom
bound
push
add
cld
mov
adc
cmp
push
mov
(bad)
push
into
xor
xor
mov
xor
jne
mov
pop
inc
ins
ins
push
cmc
mov
mov
repz
mov
out
jmp
xor
pop
mov
jne
movs
add
shl
xchg
ins
clc
test
leave
ds
retf
imul
sub
mov
pop
sub
xor
add
xchg
pusha
rcl
cmp
inc
loopne
and
lods
or
pusha
inc
cmp
or
cmp
push
jecxz
sub
add
cmp
sub
mov
jmp
inc
mov
rcr
arpl
xchg
(bad)
jg
inc
rol
ja
push
jg
xchg
adc
or
js
lock
xor
iret
dec
jl
or
pop
dec
shl
inc
dec
xor
dec
fnstsw
clc
jmp
(bad)
jle
mov
sub
push
bndldx
cmp
arpl
clc
sub
cmp
out
mov
push
inc
inc
add
dec
lahf
pop
lea
mov
ret
aas
scas
push
add
or
clc
gs
stos
dec
cld
add
inc
sub
inc
inc
mov
popf
fadd
inc
dec
or
adc
or
ins
mov
mov
mov
sbb
retf
jae
add
loope
sar
(bad)
cmp
jbe
(bad)
xchg
ja
and
and
lock
fwait
out
inc
or
call
lods
or
ror
outs
loope
inc
fidiv
jmp
inc
or
push
fcomp
xchg
cmp
and
and
aam
dec
push
push
add
fsub
and
add
push
push
fs
cmps
cmp
add
or
or
jl
lea
add
push
jecxz
mov
adc
mov
push
rol
ret
inc
fimul
leave
and
push
xor
mov
pop
shl
dec
inc
ins
dec
mov
arpl
dec
jmp
jg
std
mov
add
dec
dec
mov
fcom
mov
shr
(bad)
scas
pop
add
ror
pushf
push
rcl
dec
je
(bad)
out
(bad)
in
dec
jmp
rcl
shl
(bad)
push
bound
pop
lea
sub
retf
pop
add
or
fiadd
test
cmp
jne
inc
push
sbb
push
out
jne
add
add
or
mov
arpl
xor
mov
mov
or
aam
shl
pop
call
jg
bound
xchg
in
jmp
mov
sub
pop
sar
add
dec
jl
sub
adc
pop
(bad)
loop
mov
sub
xor
push
pop
mov
or
(bad)
shl
loopne
loopne
sub
iret
push
sbb
adc
cmp
aam
into
adc
out
mov
dec
mov
je
shl
pop
add
into
mov
xor
mov
push
push
dec
sub
pop
jmp
dec
cmp
rol
dec
xchg
dec
add
and
sub
inc
arpl
mov
or
stos
dec
or
loop
mov
xchg
test
sbb
sub
cmp
test
sbb
and
xchg
mov
pop
jo
dec
popa
jne
aas
mov
fist
mov
jecxz
jnp
imul
cmp
call
or
mov
sbb
push
pusha
sub
cld
outs
fadd
les
mov
fucomip
mov
test
je
scas
jle
push
ret
test
sbb
mov
das
cmps
mov
js
dec
test
inc
add
mov
xor
repz
push
mov
pusha
movs
outs
outs
retf
test
inc
cmp
inc
push
and
sbb
mul
add
iret
pop
sar
cmp
movs
and
call
pushf
or
inc
pop
dec
mov
hlt
mov
fdiv
mov
add
aad
mov
inc
scas
icebp
add
out
inc
pop
inc
inc
int3
cmp
imul
arpl
lea
inc
cmp
adc
loope
sbb
loopne
mov
sbb
lahf
sub
dec
cs
sbb
push
adc
nop
adc
dec
adc
stos
lock
(bad)
fsubr
rcl
js
xor
or
adc
xchg
shr
add
cmp
mov
xchg
inc
je
push
arpl
aas
mov
or
xor
xchg
mov
les
call
adc
out
mov
pop
std
test
mov
jo
sti
cdq
cmp
dec
popa
test
xchg
pusha
and
push
inc
das
bound
pushf
cmps
les
mov
loopne
jg
and
dec
mov
sahf
adc
aam
dec
push
jo
pop
iret
leave
cmp
inc
in
ret
push
psubsw
mov
sub
mov
pushf
push
sbb
add
adc
test
jmp
mov
push
or
cmp
pop
xchg
and
jp
push
sbb
push
dec
pusha
test
test
(bad)
sbb
ins
ins
mov
xchg
outs
nop
pop
retf
(bad)
(bad)
(bad)
mov
dec
adc
adc
or
pop
dec
sbb
jb
cmp
ret
sbb
jle
(bad)
in
pop
mov
dec
mov
ret
mov
pop
pop
cmc
cmps
scas
mov
jge
add
xlat
cwde
cmp
or
add
mov
adc
mov
adc
or
outs
and
dec
daa
fadd
sub
adc
popa
mov
jns
cli
push
mov
adc
pop
imul
xor
mov
add
mov
paddsw
inc
push
cmps
(bad)
jg
and
aaa
stos
lea
push
lods
xor
sub
inc
add
xor
mov
jmp
iret
js
adc
fldcw
mov
pop
and
mov
ins
ss
retf
repz
jae
push
adc
cmp
push
sub
cmps
and
and
repz
xor
pop
pop
nop
sub
fld
sub
add
push
fild
cmp
cwde
ja
test
repnz
in
inc
or
fisttp
inc
cmp
or
sub
add
dec
les
test
push
fs
es
je
push
in
adc
outs
cmc
jge
mov
cmp
inc
mov
les
pop
xchg
push
pop
test
cmc
das
scas
cmp
cmp
(bad)
push
ror
(bad)
mov
sbb
dec
or
test
jge
add
inc
and
jae
xor
mov
cmp
int3
sub
inc
xor
push
movs
inc
or
mov
and
mov
mov
sbb
enter
add
adc
add
xor
shl
xchg
mov
(bad)
dec
rol
push
pop
xchg
call
add
je
pop
inc
add
outs
test
pop
pusha
and
mov
or
push
popa
jnp
ins
mov
or
xchg
ret
cmp
test
mov
jp
pop
add
pop
and
adc
inc
push
jae
scas
jp
add
push
int3
shr
rcl
adc
ror
inc
push
mov
faddp
and
sbb
add
jnp
sti
dec
dec
sub
call
fsubr
dec
loop
lods
inc
cmps
sbb
cli
nop
or
arpl
or
sbb
rol
cmc
ja
pop
sbb
arpl
or
nop
add
push
add
inc
adc
xchg
or
xor
and
jmp
dec
add
pushf
out
and
adc
sti
mov
jge
xor
jmp
fwait
scas
xor
cwde
add
ret
push
int3
add
imul
in
ret
adc
dec
lock
pop
dec
adc
or
sub
fdivr
xor
lea
cmc
push
mov
clc
and
push
out
push
or
push
cmps
test
shl
bound
and
sub
popa
dec
test
add
cmp
jmp
xchg
cs
jecxz
push
inc
cmp
add
out
jp
out
fwait
and
loope
inc
mov
pop
cmp
enter
fdiv
and
scas
cmp
cli
popf
and
jns
push
cmp
pop
inc
jne
es
mov
sar
fisttp
test
xor
in
mov
arpl
adc
mov
push
and
or
fld
jp
call
in
mov
mov
mov
ja
stc
add
push
fist
adc
test
dec
gs
sub
and
and
mov
adc
push
and
shr
pop
imul
aas
cdq
test
js
icebp
outs
and
or
jg
cmp
imul
xor
adc
in
adc
stos
pusha
clc
outs
movs
mov
sub
adc
mov
mov
lods
add
xchg
inc
xlat
lea
mov
cld
push
sbb
mov
je
cmp
icebp
inc
xor
pop
or
repnz
push
stos
dec
jne
push
es
xchg
in
or
js
or
pusha
xchg
sbb
xor
pop
mov
or
or
mov
(bad)
rol
mov
ins
ret
mov
ror
es
fsub
and
sar
add
and
jl
sub
inc
(bad)
es
cmc
int
enter
cmp
shr
xor
dec
std
cmp
cmp
enter
add
sub
add
mov
sar
jae
imul
pop
iret
cmps
jg
or
and
sub
(bad)
iret
jge
jmp
sub
bound
add
pusha
cmp
aam
mov
dec
mov
call
and
jp
and
xor
xor
push
pop
fld
push
push
fimul
lea
ror
inc
push
enter
sbb
cmp
mov
sti
sub
repz
lea
movs
call
sub
nop
xor
into
in
xchg
add
sbb
dec
pop
lahf
mov
sbb
pop
(bad)
and
add
xchg
cmp
xor
(bad)
pusha
inc
push
lea
sahf
or
jns
xor
sub
pop
rol
fsubr
cmp
add
inc
shr
fld
inc
xor
retf
add
add
add
sub
mov
add
lahf
pop
cmps
bound
pusha
rcl
cmp
jne
loope
fist
push
sar
add
push
mov
ja
sub
pop
dec
jmp
pop
or
mov
or
je
or
test
je
ja
or
cmp
and
stc
and
add
iret
mov
sub
mov
jnp
xor
adc
jb
bound
fiadd
add
and
cmp
dec
xor
inc
sbb
xor
lock
inc
and
dec
and
or
hlt
loopne
aaa
cmp
push
pop
and
movs
inc
(bad)
scas
jne
cmps
xchg
aaa
(bad)
mov
add
stos
add
jns
pop
adc
add
add
add
adc
lea
sbb
adc
add
mov
adc
xor
imul
enter
add
ror
and
inc
scas
add
and
repz
sbb
popa
pop
enter
into
dec
shl
mov
sbb
xor
and
les
outs
or
inc
xor
mov
inc
cmp
cmp
xor
sub
add
iret
mov
scas
push
sbb
mov
xchg
rcl
das
dec
mov
mul
jg
and
mov
pop
or
jecxz
push
jb
sar
iret
mov
out
ss
mov
adc
std
mov
inc
test
cmp
fiadd
jo
fsub
das
push
dec
int3
into
jae
push
push
mov
mov
shl
jae
ret
or
mov
pop
mov
test
(bad)
out
mov
pop
and
enter
xchg
adc
mov
pop
push
dec
inc
retf
cdq
dec
iret
jns
dec
popa
lock
sub
inc
lock
sbb
repnz
(bad)
fcmove
sbb
xchg
inc
pop
jo
add
int3
adc
dec
mov
sub
(bad)
mov
sbb
lods
pushf
(bad)
lock
es
dec
adc
and
add
imul
push
stos
adc
add
imul
dec
mov
sbb
daa
mov
inc
retf
rcr
icebp
test
pop
ficom
ds
or
dec
fdivr
rcl
xor
jns
push
dec
ror
sbb
into
xchg
cmps
shl
retf
frstor
cmp
mov
pop
je
mov
add
sub
iret
lock
or
sti
or
scas
add
mov
mov
aaa
dec
gs
mov
aam
mov
adc
fmul
sbb
cdq
call
or
ins
pushf
pop
leave
mov
push
add
adc
lods
inc
cmp
or
movs
lea
push
int3
push
in
push
out
les
mov
add
rol
loop
mov
add
dec
pop
out
clc
mov
(bad)
shl
sbb
cmps
and
xor
pop
mov
or
pop
in
or
and
pop
out
xchg
xchg
lock
loop
leave
(bad)
loopne
and
pop
cld
push
or
popa
jb
sub
mov
rcr
mov
and
pop
test
rcl
ret
shl
pop
inc
mov
inc
sti
sbb
pop
cwde
add
jbe
loopne
xchg
iret
push
dec
inc
jge
push
leave
or
mov
mov
inc
mov
repz
mov
lea
push
inc
xlat
add
jo
repz
cmps
imul
or
prefetch
or
icebp
mov
push
jmp
aad
cld
stos
test
inc
jne
mov
pushf
fwait
out
dec
or
ror
xchg
add
xchg
cmc
mov
cmc
fbstp
loop
adc
xor
xor
jbe
loope
outs
dec
cwde
add
xor
or
add
push
test
jb
xchg
cmc
or
dec
dec
add
movs
mov
cmps
and
cdq
dec
cmp
sub
mov
pop
cdq
add
shl
cmps
imul
xchg
adc
dec
push
(bad)
inc
and
cmp
imul
pop
mov
jnp
cmp
jle
jmp
sbb
pmulhuw
stos
test
mov
and
inc
add
fwait
loopne
add
dec
gs
xchg
mov
aas
movs
in
dec
call
sub
push
push
add
add
mov
mov
pop
push
mov
dec
jbe
movs
push
push
(bad)
cmp
pop
in
cmp
jnp
push
jns
add
or
addr16
or
aas
dec
repz
pusha
test
sub
inc
dec
stos
enter
inc
jmp
sub
enter
xchg
push
sub
xchg
sub
cmovs
inc
xlat
(bad)
sbb
nop
lods
ret
out
ficomp
push
mov
movs
popf
test
ret
inc
ins
add
push
xchg
rol
cmp
mov
loopne
in
inc
fild
adc
dec
mov
pop
pop
lock
je
inc
adc
mov
and
cmp
rcl
fisttp
daa
add
rcl
pop
je
(bad)
enter
cdq
and
push
movs
ret
add
pop
gs
fld
in
shr
dec
sti
inc
add
push
jbe
jo
test
jb
and
or
add
in
xor
xchg
jne
jp
or
fisttp
and
adc
iret
add
pop
inc
cmp
cmp
push
xor
adc
push
cs
dec
inc
xor
mov
or
pop
jl
inc
daa
mov
push
push
and
not
inc
add
cmp
rcl
push
push
or
sub
aas
mov
pop
call
adc
cs
inc
sbb
call
cmc
iret
adc
nop
mov
inc
pusha
add
in
dec
inc
outs
inc
lods
call
clc
pop
pusha
jmp
fld
fstp
dec
jns
mov
push
cld
xor
jp
out
xchg
dec
push
pop
push
outs
shl
dec
stc
inc
pop
xor
dec
(bad)
fadd
mov
mov
(bad)
in
adc
adc
sbb
inc
sub
mov
push
mov
rcl
aam
nop
out
retf
jecxz
or
ret
xchg
or
ror
inc
adc
cld
xchg
ret
adc
inc
inc
xor
push
fild
push
adc
jmp
cli
mov
sbb
dec
mov
arpl
mov
or
sbb
adc
lds
push
pop
xor
and
jbe
push
add
pusha
inc
sbb
sbb
inc
or
and
sbb
pop
clc
cmp
or
div
sub
fs
push
jbe
sub
add
movs
call
fcmovu
rcl
xchg
push
pushf
sub
add
mov
adc
pop
or
cmp
mov
add
or
lea
jae
mov
fmul
inc
mov
adc
(bad)
jmp
add
(bad)
jb
push
leave
cmp
into
call
ins
nop
pop
push
aam
jno
fdivr
add
push
sbb
cmp
loopne
cmp
out
adc
cs
lea
add
or
popf
mov
inc
lock
mov
dec
adc
in
outs
dec
sbb
push
push
addr16
pop
in
in
sbb
enter
je
push
inc
ja
stc
inc
push
es
cmps
popa
and
rcl
lods
pop
cmp
jmp
neg
lock
xchg
jo
test
sbb
pop
xchg
or
cmp
out
test
adc
hlt
sbb
loopne
pop
jle
shl
ds
je
sbb
imul
(bad)
es
sbb
push
lea
adc
sbb
es
std
mov
loopne
gs
test
jns
add
and
fiadd
out
arpl
cs
push
aaa
ja
sub
jns
shr
jb
mov
add
push
or
retf
jo
push
add
and
mov
sbb
mov
adc
cmp
inc
or
shl
pop
and
and
adc
push
or
and
in
pop
mov
(bad)
inc
pop
pusha
mov
mov
nop
jno
repz
inc
retf
push
xor
jmp
mov
jns
call
add
imul
and
ins
dec
and
adc
stos
push
movs
mov
fist
and
or
sbb
fnsave
inc
cmp
xchg
aas
iret
clc
and
fsubr
cmp
out
sbb
add
sub
cmps
imul
mov
inc
xchg
ror
out
je
js
pop
push
sub
dec
push
pusha
scas
push
and
cmp
xchg
das
(bad)
ret
leave
nop
scas
imul
xor
push
aad
loope
cmps
jg
adc
ror
xor
jp
jl
jo
je
dec
js
cmp
add
add
ret
jg
lods
xchg
mov
in
xchg
push
rcr
mov
sar
js
add
lea
inc
adc
movs
jno
or
xor
fsub
loope
cmp
sbb
sbb
mov
adc
les
mov
mov
jle
aas
(bad)
loop
push
sti
lock
sbb
jb
cmp
mul
sub
pop
cmp
adc
imul
scas
jecxz
add
not
add
mov
inc
xor
lock
adc
push
dec
push
push
inc
sub
call
fdivr
add
mov
inc
adc
pushf
and
aas
xchg
inc
jo
fld
shl
pop
loop
push
sbb
pop
leave
push
or
inc
inc
dec
fisttp
sub
mov
xchg
or
xchg
enter
pushf
mov
jmp
cmp
mov
ficomp
fsubr
lea
add
sbb
outs
adc
cmp
push
fstp
xchg
mov
xchg
xchg
dec
cmp
mov
add
xchg
cmps
jmp
fcmovnb
inc
mov
mov
xor
push
jo
cmp
and
lock
or
dec
push
adc
push
sbb
xchg
jg
lods
mov
xchg
loope
mov
rcl
mov
lds
push
sbb
dec
cmps
add
jmp
mov
xchg
sbb
(bad)
jp
adc
lea
scas
fcomp
rcl
jl
dec
call
imul
sub
aaa
xor
ret
and
lods
dec
adc
add
or
fmul
mov
pop
jmp
pop
or
popf
popf
test
dec
mov
add
outs
push
(bad)
leave
nop
push
iret
mov
mov
add
out
jmp
lock
psubb
push
push
pop
fimul
or
sbb
movs
test
fcmovnbe
and
cmovne
sbb
movs
jns
call
in
cli
pop
xchg
xorps
inc
pop
add
enter
out
shl
daa
add
mov
loopne
mov
test
push
and
cmp
inc
and
ret
in
push
sub
adc
repnz
xor
mov
repz
inc
call
cmp
aaa
xchg
ret
adc
and
add
rcr
outs
xor
and
ds
mov
ret
inc
xor
stos
(bad)
mov
sar
mov
inc
inc
dec
rcr
push
or
or
push
enter
cmps
cmps
imul
adc
in
add
inc
sub
push
movs
loopne
retf
mov
jge
add
or
xchg
lock
add
dec
rcr
lar
nop
ror
add
popf
inc
mov
push
adc
or
sub
sti
shl
add
loope
adc
daa
sbb
xchg
ins
iret
sub
jmp
inc
push
adc
ret
push
push
mov
stos
or
pop
fisttp
arpl
jecxz
test
inc
dec
adc
mov
adc
je
inc
adc
xchg
fcom
or
add
mov
adc
loopne
cmp
ss
add
dec
shr
push
lods
test
lea
call
(bad)
jo
shl
add
adc
rol
push
inc
sbb
mov
iret
dec
imul
jo
mov
out
lds
stos
sbb
cmp
sar
and
int
repnz
push
sub
and
movhps
mov
pop
mov
add
or
jmp
cmp
xor
out
nop
addr16
push
sub
add
sti
sub
pop
clc
and
xor
and
test
outs
sbb
jne
pop
cwde
loopne
or
es
add
or
cdq
inc
or
jb
add
inc
or
mov
int3
cmp
cwde
test
and
jae
nop
in
fbld
nop
push
enter
cld
fbstp
int3
sti
or
and
adc
inc
das
and
cmp
xor
adc
ret
sbb
adc
leave
add
nop
lods
fiadd
adc
pusha
icebp
push
loopne
movs
dec
dec
repnz
ins
and
cmp
xor
imul
stc
sbb
fisubr
inc
pop
imul
loopne
shr
dec
es
leave
add
adc
dec
and
adc
lds
sub
cmp
cmp
jne
adc
ja
push
sub
mov
inc
icebp
sub
icebp
push
loope
inc
push
loope
cmp
push
pop
xor
xchg
mov
add
mov
jne
retf
fadd
popf
repnz
in
inc
lock
test
movs
xor
adc
inc
sub
or
sbb
iret
mov
enter
add
sub
sub
popf
mov
shl
mov
(bad)
mov
xchg
cmp
inc
cmp
jae
sub
cmp
xchg
ss
or
cmp
in
lds
pop
sbb
or
and
sbb
in
add
nop
sbb
dec
rol
adc
adc
mul
add
repnz
sbb
sbb
push
sti
fs
or
movs
dec
sub
xor
and
jl
add
arpl
or
mov
les
lds
test
jge
add
xor
ss
xor
mov
inc
jbe
inc
ror
or
push
pop
pop
adc
fldenv
mov
loope
call
and
shl
mov
sahf
fcmovb
loope
adc
es
adc
jns
and
mov
or
div
pop
pop
cmp
adc
and
retf
add
xchg
pop
add
cmp
or
add
push
and
push
adc
mul
sub
add
bound
xor
or
push
std
clc
lds
xor
enter
test
mov
xchg
nop
jns
nop
mov
inc
mov
cs
movs
xchg
out
jo
pop
pop
test
push
xchg
push
mov
cmp
or
add
test
call
and
jo
and
daa
jnp
movs
pop
popa
mov
test
adc
cmp
test
or
imul
push
(bad)
ficomp
adc
cmp
ja
or
cmp
nop
mov
test
ins
push
mov
icebp
sub
imul
pop
inc
add
ins
mov
mov
jl
dec
shl
cwde
rcl
xor
jp
mov
daa
push
pop
fscale
mov
sbb
pop
mov
pop
loope
je
js
rcl
adc
outs
jmp
jp
je
stos
mov
or
push
cmp
and
iret
je
inc
add
push
dec
or
sub
push
inc
es
xor
sbb
test
add
pop
dec
cmps
add
or
mov
xlat
(bad)
adc
push
push
ins
push
retf
sbb
xchg
pusha
test
and
loopne
xchg
std
pop
jns
ficomp
je
dec
je
fs
rcl
cmps
stos
stos
das
push
inc
inc
retf
push
and
int3
push
xor
push
test
sub
sbb
ret
rcr
lods
cmps
push
lock
sub
pushf
push
js
sub
sub
js
hlt
mov
jecxz
sti
lock
push
jmp
stos
or
pop
popa
push
sbb
dec
out
je
jne
jnp
dec
repnz
daa
mov
mov
stos
fist
sbb
cs
or
jne
sbb
(bad)
cmc
mov
enter
stc
xor
or
sahf
mov
(bad)
xor
scas
push
mov
cmp
mov
addr16
dec
div
or
and
hlt
cwde
cmc
mov
adc
mov
test
in
cmp
pop
jbe
dec
clc
xlat
jg
enter
movs
jbe
push
jo
sbb
sbb
sti
retf
in
into
adc
sbb
clc
add
push
sbb
sbb
cmp
cmp
out
push
lock
gs
aam
ret
xchg
out
clc
imul
push
add
stc
ss
sbb
or
dec
and
push
sbb
fist
pop
jle
jns
std
mov
jle
cmp
inc
(bad)
xchg
add
xor
in
(bad)
add
and
cmc
dec
push
int3
popf
add
add
push
hlt
sbb
sbb
mov
loopne
or
or
loopne
xchg
gs
adc
push
xor
adc
mov
inc
mov
jbe
loope
dec
ds
loop
movs
shr
mov
adc
add
push
sub
jmp
sahf
or
mov
dec
dec
add
xor
jnp
dec
add
jns
sbb
add
or
stc
xor
nop
inc
test
push
test
test
sbb
rcl
fwait
cmc
push
shl
fs
jbe
repz
or
mov
inc
popf
pop
add
add
add
test
cmp
je
in
popa
pop
pop
inc
inc
sbb
or
or
pop
add
add
fwait
cmc
or
mov
jns
jmp
pop
adc
adc
(bad)
xchg
add
inc
cmp
add
inc
xor
sbb
push
je
adc
jmp
mov
add
mov
mov
and
icebp
jl
or
fcom
gs
pop
dec
addr16
push
mov
test
into
dec
jne
adc
add
push
imul
push
sub
cdq
inc
daa
pop
dec
sub
add
pop
inc
fcomp
imul
cwde
xchg
out
(bad)
enter
pusha
out
pusha
add
mov
inc
cwde
cmp
movs
in
lods
cmp
imul
sub
movs
mov
xlat
xor
push
aam
dec
mov
ss
dec
das
inc
inc
adc
pop
fist
cmp
xchg
add
icebp
mov
ins
lods
push
pop
mov
add
inc
lods
adc
push
xchg
ja
and
sbb
or
push
mov
sub
sbb
push
push
stos
xor
add
mov
lods
popa
dec
dec
in
inc
or
dec
pusha
in
mov
xor
add
or
jl
cmp
mov
in
pop
retf
xor
mov
fs
push
inc
jle
cmp
rol
fistp
shr
out
cmp
or
xor
sbb
outs
mov
cmp
movs
mov
pop
jbe
repz
inc
jne
or
outs
dec
and
movs
fdiv
and
pusha
inc
call
inc
arpl
xchg
cmp
into
daa
and
sub
pop
mov
dec
loopne
add
je
shl
inc
inc
xlat
add
or
or
lahf
cmp
(bad)
pusha
sbb
fwait
adc
cmp
cmp
jle
aad
jne
sar
dec
pop
retf
in
scas
add
ror
test
sbb
hlt
xor
ret
add
popa
int
inc
jg
inc
mov
movs
push
add
and
xor
sbb
pop
ins
jmp
mov
bound
sbb
ins
lahf
dec
add
sbb
sub
mov
dec
xor
and
enter
xor
out
and
inc
scas
cmps
mov
sub
mov
ss
adc
mov
cmc
push
inc
add
jbe
dec
sbb
fnstcw
xor
fidiv
inc
inc
call
shl
push
xchg
(bad)
mov
cwde
rcr
nop
ror
(bad)
fnstcw
cmp
mov
leave
sub
dec
dec
mov
vmwrite
aad
inc
das
jmp
xchg
icebp
add
mov
arpl
sbb
pop
pop
inc
pop
pop
cli
popf
adc
ret
cmp
or
dec
sub
stc
xor
sbb
(bad)
out
sbb
repz
sbb
in
sbb
and
jge
add
fwait
shl
cmp
shr
pop
jo
pop
pusha
es
ins
dec
mov
and
dec
mov
adc
or
ja
iret
jnp
int
add
out
push
jnp
(bad)
mov
add
push
int3
movs
ss
pop
cmp
dec
rol
or
dec
jl
(bad)
pslld
mov
mov
adc
inc
sub
mov
inc
fsubr
mov
gs
sti
test
mov
or
xor
movs
aaa
pusha
sbb
or
mov
bound
in
push
push
pushf
data16
scas
dec
mov
sbb
or
jmp
dec
and
mov
sti
add
mov
sub
inc
pop
and
sbb
shr
fs
js
js
sub
jae
sahf
imul
pop
div
leave
and
sub
leave
or
fiadd
add
mov
or
mov
pop
outs
mov
sbb
out
adc
inc
or
cld
pop
add
jle
leave
or
pop
push
or
jne
mov
add
(bad)
loop
sbb
js
fcom
sti
nop
pop
pop
cdq
fmul
push
jbe
pop
sbb
and
loopne
lods
call
adc
clc
enter
test
mov
cld
inc
jb
push
adc
jns
adc
push
jo
cmp
adc
adc
test
in
sbb
adc
fwait
or
adc
push
lds
xchg
aas
and
(bad)
in
dec
push
lods
and
in
cmp
mov
add
push
je
inc
icebp
and
ds
push
aam
mov
sub
dec
cmp
cdq
movs
sub
and
jl
cs
jne
retf
cmp
clc
in
xor
pop
push
call
pop
nop
pushf
cwde
sbb
inc
mov
inc
sbb
adc
push
pusha
cmp
adc
adc
mov
sbb
adc
loop
mov
fwait
xor
cmp
or
xchg
mov
rcl
mov
nop
sub
jne
cdq
adc
add
imul
inc
or
inc
and
cmp
imul
xlat
mov
and
test
mov
test
fidivr
adc
test
bound
mov
and
dec
pop
loopne
lds
popa
and
add
mov
or
push
add
out
xchg
icebp
nop
and
add
adc
push
or
dec
mov
shl
mov
sub
cmp
ja
rol
je
imul
ins
sub
jnp
add
jg
push
push
lock
dec
add
mov
pushf
dec
sbb
stc
add
pushf
call
mov
sbb
ins
fcom
xchg
mov
dec
add
pop
arpl
repz
sub
out
dec
ja
sbb
adc
inc
xor
movs
cs
outs
cmp
aas
enter
cmc
mov
lods
add
adc
fwait
push
or
xor
jne
jg
ss
and
test
call
fdiv
sbb
pop
cmp
cmp
ins
pop
mov
lods
pop
mov
call
inc
inc
es
icebp
inc
or
icebp
or
push
rcl
rcl
sub
mov
sub
add
push
cmp
mov
mov
and
sahf
js
data16
mov
jmp
push
push
sar
add
out
mov
outs
ins
lds
adc
dec
or
pop
fwait
push
xor
push
rcl
ds
or
test
and
push
int3
jg
or
(bad)
pop
xchg
mov
mov
push
fild
fstp
lods
shl
sbb
mov
inc
push
jecxz
lea
jle
push
mov
mov
call
mov
test
leave
enter
aam
xchg
inc
ret
cmp
mov
push
mov
and
pushf
imul
add
push
aad
lea
pop
aam
mov
out
outs
sub
add
adc
xchg
sub
inc
call
or
lock
add
or
das
push
and
push
sub
ret
adc
or
push
nop
xor
mov
out
jg
add
cmp
into
lea
add
cmp
sbb
sbb
pop
ret
scas
aam
mov
loop
outs
mov
movs
inc
aad
fcomp
mov
dec
adc
sbb
add
and
sbb
fs
inc
dec
call
dec
popf
jbe
dec
add
sub
or
ja
js
loope
lds
add
or
or
xor
jmp
jmp
dec
cmp
jl
imul
movs
pop
or
fiadd
or
and
jl
push
clc
cmp
jle
sbb
fild
iret
sbb
in
fst
xlat
(bad)
mov
or
pop
add
push
popf
sbb
sub
rol
or
pop
aam
pusha
inc
or
mov
in
add
dec
mov
sbb
mov
inc
adc
or
cmps
add
mov
sub
mov
inc
rcr
pop
fs
fldz
mov
adc
add
into
cwde
call
sub
push
lods
mov
push
pop
or
or
pop
sub
push
jbe
inc
call
frndint
test
and
and
pop
pop
es
push
push
mov
enter
dec
add
out
loopne
sbb
and
ja
adc
rcr
cmps
push
fcomp
xor
xchg
mov
push
out
pop
and
or
push
xor
pop
lock
cmp
adc
sub
jo
sbb
cld
les
push
pop
jmp
lea
dec
test
push
lock
xchg
dec
inc
jg
xor
les
sub
add
jle
sbb
adc
sbb
cmp
cmp
rcl
sub
jo
shl
nop
test
in
jbe
leave
(bad)
jns
add
sbb
adc
xchg
sub
(bad)
ja
add
scas
stos
aam
test
cmp
fstp
and
add
inc
jb
sbb
nop
push
lods
fucomip
push
stos
push
cmp
add
push
cmc
add
cmp
cld
add
and
push
sbb
mov
cmp
or
es
ficom
xchg
out
and
xor
cwde
int
pop
xor
or
ds
inc
mov
adc
push
jne
push
cmps
jno
ja
or
push
jg
dec
cmp
adc
add
pop
call
data16
enter
lods
and
inc
jno
jnp
ret
pop
pop
std
popf
xchg
and
jp
mov
jmp
push
rol
add
sbb
test
adc
mov
pop
aas
outs
push
push
out
jo
sub
mov
hlt
nop
rcl
jle
fmul
adc
push
dec
mov
and
test
cmp
mov
dec
xchg
mov
pop
cmp
loopne
mov
xchg
add
jmp
cmp
and
lods
inc
dec
das
test
jne
sub
cwde
inc
rcl
(bad)
movs
and
jb
jmp
dec
leave
mov
inc
mov
data16
jno
test
outs
gs
pop
pop
ja
xlat
sub
sbb
cwde
or
sti
or
mov
cmp
adc
jne
ret
xchg
jo
sti
sub
popf
ret
add
sub
pop
jge
or
dec
pop
(bad)
cwde
lods
inc
dec
sub
test
adc
ins
jmp
add
push
dec
jecxz
mov
inc
out
ins
sub
push
sbb
xor
ret
out
mov
mov
stos
es
adc
mov
add
clc
cmp
fbld
loop
call
or
movd
push
push
dec
stos
cmp
pop
sub
push
ins
dec
leave
jmp
cmp
mov
mov
lods
call
cs
mov
add
iret
push
mov
push
and
ror
mov
and
adc
add
jns
ins
fyl2x
fisubr
pop
sar
sbb
arpl
xor
add
test
xchg
enter
jg
outs
inc
es
sahf
jg
add
clc
arpl
test
mov
cmp
movs
imul
js
clc
adc
fcom
dec
mov
cwde
cmp
loope
xchg
and
xor
adc
sbb
ins
(bad)
lahf
ret
jmp
adc
cmps
adc
sbb
ins
inc
popf
jmp
cmp
pop
cmp
inc
jp
dec
imul
(bad)
mov
and
push
je
(bad)
je
fadd
stos
shl
and
jne
fsub
pop
add
adc
jp
and
fstp
mov
add
inc
fidivr
mul
ret
push
rcr
out
adc
and
mov
fcomip
mov
mov
xchg
adc
ja
je
cmp
je
das
mov
sub
ret
sub
je
cmps
test
idiv
sbb
mov
push
aaa
or
jbe
ins
mov
das
inc
push
add
xor
rcl
scas
jne
fidivr
into
lock
lods
adc
cmp
and
cmp
rcr
fcomp
shr
jp
lock
push
fistp
or
push
ror
and
sahf
ds
xchg
jns
adc
fiadd
or
and
add
sar
push
dec
cmp
in
out
jns
jo
cmp
xor
loop
inc
pop
test
adc
cmp
cmp
test
cmp
inc
pop
and
into
nop
pushf
stos
lods
sbb
mov
hlt
into
push
adc
xor
mov
and
nop
ret
ror
or
enter
into
ret
idiv
add
jmp
js
xor
(bad)
lahf
scas
retf
dec
add
inc
jb
xchg
add
(bad)
pop
pop
je
dec
fmul
jmp
in
cmp
cmp
cmp
mov
and
pop
xor
sti
ins
jns
ss
or
jae
mov
call
cmp
dec
push
outs
mov
call
ss
dec
sub
and
inc
sub
in
and
aas
clc
xor
popa
in
retf
in
lock
stos
xchg
push
test
or
lock
mov
and
fst
inc
push
ret
test
xor
je
add
add
stc
and
add
call
cwde
inc
sbb
pop
ret
lahf
test
pusha
sub
xor
pop
lea
xlat
fimul
push
or
mov
add
movs
adc
xchg
rol
popf
mov
push
or
or
aam
imul
push
inc
dec
or
repz
into
test
out
pop
mov
adc
cmp
adc
and
inc
and
dec
pop
xor
(bad)
cmp
call
and
mov
or
cld
cld
and
push
push
sbb
sbb
fistp
pusha
or
xchg
stos
jb
push
mov
leave
shl
fwait
add
jo
ret
lods
adc
mov
mov
sub
and
mov
pop
pop
and
sub
clc
xchg
sub
enter
or
sub
add
out
enter
adc
jns
inc
cmp
je
inc
add
int
push
sbb
jnp
inc
mov
mov
sbb
dec
and
int3
iret
or
rcl
cs
and
xchg
pop
sub
lods
pop
cmp
jle
sahf
stos
inc
clc
clc
xor
jmp
pop
inc
popa
aas
mov
icebp
inc
jb
clc
xor
shr
or
inc
aas
test
push
adc
bound
out
outs
xchg
shr
in
in
pop
imul
cmp
adc
inc
or
movs
in
in
inc
mov
pop
jecxz
lahf
rcr
scas
in
dec
inc
push
je
xchg
xchg
jns
lock
pushf
add
sub
adc
push
adc
sahf
xchg
or
jne
xchg
fdivr
lock
call
or
ret
inc
jg
inc
push
push
and
js
push
mov
outs
sar
and
or
adc
dec
mov
test
fs
out
jne
cmp
or
xor
dec
arpl
push
push
cmps
mov
mov
test
push
psllq
imul
xchg
add
adc
lods
dec
and
xchg
mov
or
adc
clc
sbb
add
push
inc
dec
nop
jb
sub
stos
rol
les
dec
shl
aad
dec
movs
push
fmul
push
imul
hlt
push
jns
push
out
ins
add
jmp
nop
add
and
mov
add
aam
in
popa
dec
sub
fs
and
add
jg
add
and
test
push
jmp
pop
dec
leave
push
test
dec
cld
push
add
sbb
ret
and
push
out
in
push
lahf
inc
and
lea
jno
dec
out
loopne
ret
sub
and
jne
xchg
mov
sbb
pop
rcl
shr
dec
in
fbld
test
dec
lock
mov
rol
cdq
xor
dec
ja
adc
add
push
add
pop
mov
adc
data16
sub
ins
jns
mov
fld1
jmp
xor
mov
and
sbb
add
pop
js
mov
loope
or
or
or
nop
dec
jmp
push
fadd
pop
sub
shr
mov
stc
mov
shl
clc
inc
mov
xor
add
fisubr
ins
cmp
shr
pop
repz
je
mov
ins
inc
xchg
mov
mov
rcl
pop
cs
add
out
adc
mov
adc
push
or
cmp
mov
xor
push
das
mov
jle
push
fbstp
push
adc
xor
pusha
or
int3
add
(bad)
outs
repnz
sar
adc
jnp
xchg
xor
idiv
push
mov
sbb
fucomip
daa
and
xor
push
cmp
xor
inc
arpl
xchg
and
jb
data16
fmul
lods
xchg
xor
xor
xchg
cmp
inc
sbb
cmp
sahf
jnp
mov
inc
dec
inc
inc
lods
push
inc
dec
aad
in
or
loop
jmp
adc
clc
test
mov
pusha
pop
xor
or
sete
es
push
xchg
hlt
xor
xor
mov
inc
aaa
xor
lods
mov
mov
push
into
sbb
das
xor
add
cmp
cmp
sbb
add
daa
retf
ficom
and
sbb
adc
or
push
jmp
pop
inc
sub
gs
push
wbinvd
add
mov
dec
or
cwde
add
push
mov
dec
jp
inc
mov
jp
push
ror
push
lods
ror
add
inc
xor
fbstp
mov
jnp
mov
and
out
fcom
sub
or
std
push
aas
lea
and
xchg
or
aas
inc
add
(bad)
adc
aaa
std
ins
push
jbe
xchg
lea
push
and
cmp
lock
bound
lock
jl
dec
sbb
add
out
imul
mov
add
inc
adc
dec
loope
in
adc
add
cmp
add
ins
add
lahf
jae
(bad)
sbb
or
xchg
stos
sbb
popa
sti
dec
aaa
cmps
dec
pop
add
aas
scas
fadd
pop
ror
push
ss
or
test
or
mov
std
rcl
sub
cmp
sbb
into
sar
test
pusha
inc
into
popf
jo
sbb
xchg
popa
mov
(bad)
pop
inc
sahf
mov
push
push
sahf
jbe
xlat
jmp
push
sub
ret
add
mov
int3
sub
xchg
jbe
mov
cdq
rcl
push
ret
loopne
mov
cmp
or
xchg
inc
and
pop
mov
test
push
add
mov
add
or
jp
pop
test
test
bound
adc
or
cld
fcomp
sti
pusha
in
mov
sbb
fcomp
retf
int3
in
imul
and
xchg
jmp
(bad)
adc
call
pop
fucompp
out
xlat
data16
jno
push
popa
fs
jae
rol
cmp
cmp
xlat
hlt
or
xchg
in
jns
outs
adc
pop
mov
jl
mov
daa
sbb
push
shl
cmp
mov
nop
mov
adc
imul
dec
push
or
jne
sub
data16
mov
rcl
xchg
test
repnz
sahf
movs
imul
pop
shl
sbb
pop
jbe
call
push
rcr
inc
add
xchg
test
xor
fdiv
icebp
mov
shl
add
sbb
in
mov
add
and
pop
and
and
adc
shl
inc
cmp
int
inc
or
adc
adc
jl
clc
jno
(bad)
xchg
mov
mov
adc
movs
fild
inc
scas
add
adc
mov
push
repnz
mov
or
add
mov
pop
cmp
fadd
push
adc
jl
adc
dec
adc
sbb
ja
aas
fwait
xchg
or
pop
dec
cmp
dec
adc
stos
cmp
inc
adc
cli
jp
xor
lahf
jno
sub
in
and
mov
cmc
not
mov
mov
xchg
sbb
adc
or
add
xlat
adc
add
pop
jae
jae
add
and
and
nop
add
fucomp
adc
retf
add
test
or
jmp
(bad)
xchg
xchg
inc
ficom
cmp
aas
(bad)
test
cmp
xchg
xadd
femms
adc
dec
push
xor
fs
icebp
push
test
mov
inc
(bad)
mov
or
dec
shl
bnd
and
setns
or
stos
push
push
movs
in
daa
push
pop
prefetcht1
adc
pop
enter
or
aad
stos
jb
imul
dec
enter
mov
pop
xchg
cli
cmps
or
jg
push
add
and
ds
leave
mov
push
in
repnz
nop
jns
add
retf
dec
sub
clc
mov
inc
jo
pop
adc
xor
add
(bad)
sbb
mov
jmp
xchg
nop
mov
retf
inc
push
xlat
mov
movs
dec
and
arpl
rcl
jno
or
and
imul
lods
or
clc
xchg
push
adc
inc
out
and
and
test
adc
sub
push
imul
lods
retf
or
(bad)
lock
arpl
or
mov
and
sbb
(bad)
retf
xor
or
adc
sub
bound
cmp
or
es
fwait
pop
sbb
adc
jb
mov
and
leave
mov
imul
adc
lds
push
sub
xchg
mov
pop
jg
cmps
add
pop
enter
or
cmp
rcr
xor
jns
nop
and
push
dec
push
push
aaa
leave
push
mov
add
bound
into
nop
je
sbb
cmp
or
je
int3
sbb
aaa
xchg
aaa
pop
sar
in
mov
adc
sbb
xchg
xchg
dec
sbb
xor
test
fld
add
push
and
(bad)
into
mov
dec
sub
and
adc
sbb
out
sub
scas
nop
or
outs
rcl
cs
rol
sub
sub
and
rcl
mov
and
jb
add
pop
std
cmp
enter
pop
leave
sbb
pop
cmps
and
nop
je
dec
and
leave
sbb
js
or
add
adc
rcl
pop
pop
in
push
mov
repnz
push
adc
xchg
xchg
or
mov
dec
mov
xor
das
repnz
mov
add
sbb
add
or
pop
mov
test
and
rol
sbb
stos
mov
outs
daa
jmp
push
push
test
adc
loope
aas
mov
xchg
pop
push
add
ins
add
add
retf
stos
jge
fisttp
es
add
sub
cmp
jmp
xor
add
pop
and
sub
and
enter
call
inc
jns
adc
ror
cmp
adc
push
cs
add
inc
mov
fs
dec
imul
push
bound
and
mov
or
xor
in
adc
add
add
and
(bad)
pop
and
mov
or
mov
imul
bound
jge
push
cmp
mov
xor
inc
add
stos
out
popa
clc
mov
dec
inc
gs
add
xchg
lods
pusha
call
mov
jne
inc
and
jne
mov
test
push
mov
pusha
and
push
push
mov
sahf
add
packuswb
stos
mov
xchg
inc
or
push
mov
jb
sar
mov
and
push
pop
and
test
xchg
add
call
and
mov
iret
inc
or
adc
dec
and
mov
xor
dec
adc
add
ret
js
jge
ins
fimul
pop
xor
push
shl
data16
mov
cmp
aad
rep
cmp
jle
sub
ss
out
(bad)
inc
sub
fs
inc
inc
push
push
xlat
fldcw
inc
outs
inc
add
rol
fwait
int
dec
add
shl
push
jbe
mov
jmp
xchg
jb
or
adc
sbb
sbb
sbb
repz
sbb
ds
mov
imul
repz
inc
ss
ja
stc
xchg
lods
nop
ins
inc
inc
cmp
pop
mov
adc
fwait
inc
ins
push
add
clc
clc
lds
fist
cmp
and
xor
fldcw
jecxz
scas
jnp
sbb
dec
movs
adc
pop
push
daa
push
in
and
nop
inc
push
cmp
js
push
cmp
or
pushf
lods
mov
inc
fsubr
hlt
jbe
inc
push
cld
jl
adc
nop
inc
push
cmp
sub
inc
push
cmp
dec
pop
ins
sbb
in
jo
loopne
je
js
enter
or
cwde
pushf
sub
jb
movs
jmp
or
jmp
in
xchg
outs
enter
jmp
fsubr
pop
push
(bad)
pop
mov
jmp
jge
jmp
sbb
cmp
sub
ss
das
cmp
sub
jmp
pop
jmp
jo
adc
or
xor
ds
sahf
jmp
sbb
icebp
push
(bad)
cmp
shl
cmp
add
push
adc
cmp
add
movs
outs
loop
add
ficom
ins
sbb
jle
aam
push
cmovg
cmp
repz
pop
sub
iret
xchg
lahf
test
iret
repz
frstpm(287
out
stc
jns
out
push
add
jns
out
xor
out
sahf
lods
mov
jno
jns
out
test
jns
out
fucomip
lock
push
add
cmp
repz
das
ss
repz
push
pop
pusha
aas
and
(bad)
cmp
xchg
or
or
xchg
push
pop
add
cmp
xchg
push
fild
xchg
pop
dec
movs
push
mov
add
icebp
mov
xchg
jo
test
test
mov
mov
adc
cmp
shl
dec
and
in
aas
(bad)
xor
adc
xor
inc
mov
test
aam
test
arpl
daa
sbb
mov
dec
sub
inc
inc
sar
cmc
movs
mov
out
jmp
fwait
pop
sbb
jno
sahf
das
add
(bad)
adc
es
xchg
fs
mov
lods
and
inc
mov
fld
lods
enter
jns
jne
push
adc
inc
ror
xchg
stos
xor
push
mul
add
aas
es
out
or
lea
inc
push
mov
sbb
cmp
mov
cs
jno
inc
xor
les
xchg
mov
popf
add
aaa
or
jge
sub
mov
fist
mov
loopne
add
mov
add
cmp
or
jo
ss
add
adc
xor
jne
push
aad
daa
fist
pop
lea
jne
pop
lahf
adc
enter
popf
add
cmp
adc
(bad)
int
jl
xor
and
mov
sub
aam
inc
adc
xchg
loop
push
cmp
ja
lods
push
or
stos
add
sbb
push
lods
mov
inc
imul
and
sub
scas
sbb
popf
or
aam
mov
aas
push
mov
push
pop
pop
sub
push
ret
and
stos
and
(bad)
fbld
stos
pop
jb
call
push
mov
mov
iret
cmp
xor
shl
push
add
int
mov
cmp
mov
daa
or
mov
sti
add
inc
dec
or
jle
mov
inc
shr
aas
sbb
inc
jne
or
adc
shl
push
cmc
fld
jecxz
push
pop
fisttp
pop
pop
icebp
xchg
jbe
or
pusha
inc
cwde
fcmovnu
sub
and
push
mov
sbb
lahf
(bad)
push
in
jl
pop
mov
jmp
into
mov
add
jmp
sub
shl
inc
dec
loopne
pop
xchg
xchg
ss
repnz
adc
cmp
add
mov
jle
adc
ret
sbb
fbld
inc
inc
sub
jg
sbb
mov
cmp
mov
inc
or
inc
fucom
jecxz
inc
int3
dec
clc
add
mov
sbb
mov
push
jbe
mov
inc
xor
mov
call
inc
cmp
jb
mov
push
arpl
mov
adc
push
mov
repz
movs
adc
loope
sbb
sub
jge
mov
mov
inc
lods
inc
push
call
adc
shl
test
sbb
dec
sbb
test
scas
test
cmp
inc
or
jne
jg
push
push
push
push
sbb
lods
add
push
and
or
mov
loop
or
sbb
add
adc
pop
clc
push
mov
shl
adc
mov
out
ret
pop
hlt
mov
pop
or
nop
add
xor
or
dec
mov
sbb
dec
adc
pop
adc
or
sbb
ror
loop
popf
test
xchg
test
push
(bad)
or
scas
mul
push
push
sbb
retf
add
or
pop
xor
dec
or
adc
mov
pop
ins
add
shl
mov
or
jmp
outs
(bad)
dec
and
inc
xchg
movs
push
mov
cdq
(bad)
dec
inc
rcl
aam
pusha
shr
dec
pop
mov
ja
cmp
imul
add
test
push
pop
dec
dec
xchg
pop
or
adc
add
cmp
mov
cmp
ret
add
div
sub
push
mov
or
cmp
shl
and
fist
add
add
add
xchg
jo
add
daa
inc
sahf
xchg
pop
push
push
push
and
sub
jo
dec
xor
shld
es
xchg
add
add
ins
add
test
in
and
mov
mov
and
and
push
mov
mov
or
(bad)
loopne
or
clc
add
in
add
add
and
xchg
or
js
leave
xchg
add
nop
sub
jbe
imul
jo
cmc
std
pop
and
js
sub
jl
add
pop
jns
loope
hlt
add
add
add
or
inc
or
(bad)
popa
sahf
and
and
nop/reserved
pop
leave
movs
imul
sub
rcr
mov
imul
daa
mov
aaa
cld
stos
xchg
pop
movs
xor
addr16
dec
push
pop
or
sub
pop
jbe
sub
icebp
mov
(bad)
popa
fild
add
or
pop
add
pusha
or
mov
sbb
popa
pop
cmp
pop
inc
xor
pop
jmp
xor
adc
inc
push
cmp
jo
js
cmp
nop
jl
test
mov
push
cwde
pushf
mov
movs
test
inc
push
cmp
mov
mov
mov
in
inc
int3
rcl
in
inc
push
fcomp
loopne
add
cmp
add
loope
out
test
lock
aad
jnp
jb
clc
xor
xchg
add
and
adc
sbb
enter
and
jb
and
sub
jb
and
and
das
xchg
dec
push
push
mov
adc
add
ins
add
pop
xchg
pop
and
pop
out
push
sar
push
pop
add
add
sbb
or
adc
pop
imul
test
xchg
pusha
sub
cmp
push
add
mov
mov
ins
xor
push
aam
fcomp
add
xor
jne
push
pmulhw
ins
ins
xor
data16
call
sub
and
mov
xchg
push
lock
ins
bound
or
mov
add
fcmovnb
adc
push
sbb
inc
push
inc
push
es
cwde
loopne
mov
out
test
pop
mov
div
call
mov
add
add
and
jle
dec
xor
adc
lock
dec
jne
push
inc
inc
test
cmp
out
imul
inc
daa
adc
sbb
mul
mov
or
ficom
inc
adc
dec
jo
jmp
add
sbb
pop
sar
cmp
cmp
push
inc
push
jmp
cmp
cmp
add
inc
hlt
push
add
or
mov
test
movs
jns
sbb
or
jg
sbb
pop
fdivr
fadd
dec
cmp
clc
ja
push
mov
sbb
inc
sbb
xor
movs
adc
push
push
data16
push
xor
mov
dec
inc
mov
ror
pop
out
push
les
js
add
(bad)
mov
inc
add
xor
js
push
loope
mov
xchg
ins
pop
(bad)
call
sub
xor
jmp
xchg
mov
addr16
xor
iret
clc
or
adc
daa
cmp
sub
(bad)
je
add
jns
int
mov
jns
cmp
cmp
xor
push
sbb
fist
outs
inc
jno
daa
and
nop
sbb
test
cmp
push
inc
shr
and
fadd
sub
mov
aam
sbb
push
sbb
idiv
sbb
enter
fld
xchg
(bad)
mov
pop
jp
mov
mov
shl
inc
pusha
adc
or
push
or
xlat
inc
and
xchg
pop
cmc
outs
fcmovnu
addr16
fnsave
push
fmulp
js
push
adc
cmps
push
and
jl
add
jle
inc
int3
ds
addr16
sub
lock
adc
data16
sbb
dec
add
dec
cmp
mov
scas
(bad)
pop
enter
adc
(bad)
sub
sbb
int
push
in
sub
rol
xchg
scas
mov
sub
(bad)
push
jns
adc
inc
lock
adc
pop
inc
mov
addr16
mov
adc
cs
mov
cmp
shl
mov
sub
add
mov
cmp
dec
and
pop
mov
jl
push
cmp
pop
jecxz
call
test
pop
scas
cmp
(bad)
jle
jne
fidivr
or
jmp
mov
cmp
xor
jmp
push
inc
sub
fdivr
ds
push
cmp
pop
mov
mov
popa
adc
mov
aaa
inc
loop
dec
(bad)
sub
imul
or
lea
cmp
jne
mov
mov
mov
sar
pushf
scas
inc
popfw
or
add
add
cmp
push
fcom
xchg
in
and
repz
pop
out
ss
dec
movs
in
inc
inc
fwait
push
adc
and
cli
js
cmp
jge
aas
cmp
mov
and
cwde
add
ss
xchg
(bad)
rol
sbb
inc
push
jne
in
and
retf
int3
ds
rol
scas
push
push
ins
sub
push
and
dec
mov
nop
xor
inc
cmps
cmp
test
push
inc
lea
fild
mov
push
in
adc
add
push
mov
mov
pop
rol
mov
ins
outs
push
adc
lods
adc
add
or
nop
or
cmp
add
stos
or
push
adc
sub
cli
ret
fdivr
dec
test
popa
mov
std
pop
lea
push
shr
bound
pop
in
cdq
xchg
add
nop
int3
int3
sub
add
rcr
nop
fdiv
xor
out
push
mov
sbb
(bad)
out
pop
cmp
aas
fs
call
sbb
xor
movs
sti
mov
packssdw
sbb
sbb
cmp
loopne
(bad)
aam
cli
movs
or
inc
mul
jmp
popa
bound
pop
icebp
or
ret
ss
pop
xlat
add
mov
ins
mov
sub
xor
les
push
in
adc
and
stos
popa
leave
ret
mov
push
popf
shl
shl
gs
je
mov
add
(bad)
js
or
jl
mov
and
jp
arpl
ret
lock
or
dec
jmp
dec
lea
je
mov
inc
aad
inc
inc
or
or
or
push
lock
or
das
mov
cli
xor
cli
or
test
and
xchg
fwait
push
inc
adc
loop
ret
lahf
mov
pop
dec
int
push
loop
or
fadd
test
push
sub
aas
call
(bad)
pusha
scas
mov
mov
push
inc
hlt
cwde
sub
sub
sbb
add
test
dec
add
outs
lods
pop
sahf
add
mov
xchg
ret
or
mov
sbb
adc
xlat
inc
xchg
mov
mov
xor
cdq
inc
loop
and
pop
and
mov
in
inc
lods
popa
jbe
repz
nop
xor
outs
xchg
popa
lods
dec
jmp
adc
nop
outs
push
jns
clc
cld
sub
dec
push
lds
cmps
test
scas
enter
(bad)
sbb
xchg
repnz
mov
clc
js
push
or
popf
into
mov
inc
rol
(bad)
pusha
adc
xchg
fist
pop
push
jle
pop
push
or
cmp
ret
or
adc
pshufw
leave
rcl
sub
into
lea
addr16
imul
mov
fdivr
test
std
jo
push
push
(bad)
xor
mov
inc
mov
or
loopne
rcr
test
test
inc
hlt
adc
pushf
and
mov
mov
in
mov
push
jb
jne
add
pop
test
jl
pop
sbb
fisubr
jmp
je
cmp
add
and
jge
sub
ficom
inc
and
ins
jnp
cmp
clc
nop
or
(bad)
mov
fsubr
sub
cmps
mov
aaa
mov
mov
pop
jmp
xor
or
xchg
nop
add
les
int3
(bad)
das
mov
add
fdivr
and
mov
adc
mov
or
std
xchg
cmp
xchg
push
jp
push
or
push
test
out
add
mov
adc
dec
hlt
dec
dec
push
jmp
xor
retf
fnstenv
int
jae
xchg
ret
mov
cmp
pop
push
pop
add
je
xchg
aad
retf
nop
and
arpl
lock
jecxz
jp
push
cmps
xor
push
(bad)
pop
in
jmp
mov
and
dec
inc
xchg
sub
jl
xor
leave
dec
sti
into
xor
or
inc
xor
setge
xor
(bad)
inc
or
rol
mov
shr
xor
(bad)
cmps
inc
cmp
pop
aad
je
adc
div
rcr
push
icebp
and
push
jecxz
sub
out
add
and
mov
addr16
imul
cmp
fmul
loopne
scas
jne
dec
shl
push
and
popa
shl
ds
xchg
jp
xor
rcl
adc
sti
enter
scas
ret
jg
push
push
jl
dec
and
pop
sub
inc
in
idiv
adc
mov
pop
dec
cmp
inc
and
or
dec
push
or
and
or
(bad)
jmp
mov
fmul
add
inc
pop
cdq
dec
data16
or
shr
sti
cmp
sbb
outs
test
imul
outs
pop
adc
or
js
popf
fwait
sub
rol
xchg
loop
ds
neg
outs
loope
es
sti
mov
push
push
xchg
push
data16
daa
adc
mov
retf
push
jo
xlat
xor
(bad)
loopne
sub
jne
adc
rcl
xor
cwde
adc
inc
pop
sub
adc
ins
add
mov
or
adc
pop
sbb
sbb
jo
(bad)
push
lods
cmp
fs
inc
shr
fcomi
cmp
add
jae
or
ja
pop
push
xor
or
pop
mov
outs
mov
rcl
mov
adc
xor
sahf
mov
out
jbe
push
inc
je
dec
je
and
out
pop
je
addr16
jno
adc
mov
(bad)
add
stos
pop
inc
or
sub
bound
add
sbb
push
pop
mov
add
dec
imul
push
std
(bad)
aam
add
dec
nop
ds
das
or
sti
pop
sub
dec
sub
add
sti
shl
pusha
sbb
mov
push
add
push
cmc
add
cs
mov
dec
rcl
cmp
int
cwde
mov
inc
cmp
sub
fsub
out
xor
inc
inc
push
sub
pop
push
xor
add
cmp
pop
and
mov
sbb
or
sbb
push
or
jle
add
mov
sub
mov
pop
sti
push
hlt
js
pusha
jp
or
aas
push
ins
cmp
and
mov
pop
(bad)
nop
xchg
(bad)
ja
lea
clc
out
add
imul
(bad)
add
fs
pop
scas
or
sub
lds
or
lea
add
cmp
inc
add
ins
sub
fwait
add
cld
or
add
mov
cmp
aad
xchg
push
dec
push
(bad)
cmp
shr
cmp
adc
add
mov
rcl
xchg
jge
push
fbld
in
inc
in
inc
sahf
adc
jne
add
add
sub
and
jne
pop
jne
push
and
add
das
nop
mov
jle
cmp
add
and
stc
jge
and
pop
cli
mov
mov
inc
ins
push
xor
jg
retf
imul
repz
in
dec
je
cmp
pop
mov
cmc
nop
rcr
sbb
mov
fs
add
int3
dec
or
cmp
popa
xchg
ret
lds
lock
nop
pop
and
call
into
add
inc
sub
ins
movs
fidiv
ss
nop
hlt
inc
inc
push
sahf
add
ret
clc
dec
sub
aad
jmp
clc
or
repz
out
add
sbb
mov
or
push
ja
and
cmps
sub
xchg
arpl
inc
dec
pop
inc
in
xchg
pop
adc
dec
shl
adc
jmp
adc
xor
and
sbb
add
dec
inc
daa
mov
or
push
inc
shr
mov
inc
xor
inc
xor
dec
mov
and
shl
mov
repnz
enter
movs
inc
jp
add
pushf
mov
jg
mov
xor
sub
push
mov
push
xchg
sar
lods
pusha
or
adc
sub
mov
ja
and
jnp
add
std
push
imul
pop
mov
or
xchg
dec
and
ficom
xchg
es
cmc
adc
pusha
icebp
inc
adc
repnz
or
jo
sub
mov
call
add
and
inc
pop
idiv
dec
inc
sbb
push
cmp
pop
jecxz
inc
je
adc
mov
push
add
jl
and
mov
and
push
out
cmp
shr
je
mov
js
cmp
shl
fst
addr16
pushf
jb
ficom
mov
mov
sbb
movs
je
mov
pushf
test
shr
jns
cmp
outs
sbb
add
fcmovb
(bad)
enter
mov
fs
push
rcr
mov
shl
mov
jne
jb
inc
push
xchg
or
push
rcl
lock
sub
inc
push
pop
cli
jle
test
dec
cmp
retf
leave
dec
dec
cs
push
cmp
call
sti
add
js
popa
push
jmp
cmp
mov
add
or
jp
sbb
jmp
sub
pop
cmc
jle
shr
mov
and
add
inc
and
xor
cmp
cmps
lea
jle
and
es
dec
sbb
ret
xchg
xor
ins
cmp
adc
mov
in
cmp
sbb
sub
push
push
lods
ins
cmp
sub
fdiv
ss
sub
xchg
mov
into
mov
adc
push
sub
and
sub
mov
add
mov
ret
add
lods
test
cmps
popf
jmp
mov
or
push
stc
scas
xor
jbe
outs
sub
or
ret
cld
dec
cmp
dec
add
sub
adc
adc
push
sub
pop
ins
inc
pop
jl
stos
andnps
add
shl
ds
loope
push
cmp
xor
into
rcr
(bad)
xor
pop
cmp
ins
sbb
dec
mov
aas
jne
adc
adc
retf
(bad)
mov
in
jne
ror
sbb
pop
out
in
xor
mov
xchg
outs
cs
ss
jo
adc
xchg
add
sar
sub
sbb
mov
dec
mov
loopne
mov
pop
add
shl
enter
sbb
rcl
mov
mov
cmp
mov
mov
cmp
dec
shl
out
lock
loop
mov
add
mov
hlt
and
and
pop
sbb
fst
xor
stc
rol
xor
dec
sbb
sbb
fist
jo
dec
js
push
fs
dec
cmp
jae
ret
dec
pushf
rol
ins
or
ja
popf
clc
add
mov
pop
jne
adc
mov
shr
pop
movs
add
add
lahf
and
cmp
outs
add
mov
push
sbb
mov
retf
pop
in
sbb
sti
cwde
in
js
pop
sbb
into
jg
push
stc
inc
push
and
js
jo
jno
das
and
fdivr
push
clc
push
adc
xlat
ja
or
jmp
jne
into
sar
add
fisub
add
jmp
movs
imul
movs
jno
sbb
test
mov
imul
cwde
mov
mov
fwait
xchg
add
or
jne
imul
lock
jmp
sbb
loop
pop
fcmovu
inc
(bad)
xor
rol
sbb
inc
ret
sbb
inc
sbb
add
scas
push
sbb
inc
in
jne
jg
push
inc
ja
repz
ror
fstcw
inc
sub
mov
lea
pusha
adc
cmp
adc
jge
pushf
ja
cmp
jne
out
sbb
adc
push
inc
sbb
fs
inc
xchg
cmp
sub
push
or
and
jg
ds
(bad)
jbe
cs
jmp
sbb
cdq
jb
jmp
and
sbb
cwde
in
push
sbb
add
jle
imul
nop
sub
xor
fistp
call
and
pusha
loopne
cmps
cmps
mov
jmp
shr
stos
inc
mov
jg
xchg
leave
je
pop
pop
cdq
(bad)
imul
stos
cmp
in
mov
cmp
lea
sahf
test
ins
pop
push
inc
add
adc
sbb
movs
mov
adc
sbb
xchg
sub
mov
loope
vmovntps
mov
cmp
pop
xor
dec
push
int
hlt
aas
jno
and
pop
sub
mov
rcr
mov
sub
sbb
rcr
xor
pop
and
push
fdivr
mov
ja
pop
inc
adc
and
movs
cmp
cmps
fldz
sbb
shr
adc
add
movs
into
test
add
sbb
xchg
push
(bad)
push
adc
js
movs
cmps
mov
pop
mov
xor
xor
dec
dec
push
std
push
dec
sub
shl
sbb
add
lds
jo
fidivr
fidiv
ret
ficomp
push
adc
push
adc
dec
xor
sbb
push
dec
inc
jne
push
jbe
sbb
aam
sub
xor
or
dec
mov
pop
xchg
popa
jl
pop
add
rcr
les
int
mov
jmp
mov
or
ficomp
sti
mov
and
sbb
and
add
and
fcom
add
icebp
jno
(bad)
mov
les
mov
push
jbe
mov
jge
neg
push
add
and
xor
mov
lahf
lods
or
mov
xchg
mov
mov
push
mov
push
adc
inc
adc
dec
adc
mov
sub
push
cs
setle
in
dec
or
pop
vmwrite
dec
xor
add
popa
loopne
loope
call
dec
mov
das
mov
scas
jge
push
adc
xchg
add
shl
or
sbb
cmp
fsub
mov
mul
inc
in
cli
and
lea
call
xchg
loope
adc
xchg
cmp
pop
fidivr
shl
sbb
add
adc
adc
in
adc
pusha
inc
retf
add
xchg
enter
and
cmp
jne
jmp
mov
mov
mov
sti
loopne
xchg
enter
sub
es
mov
mov
add
push
dec
ror
ds
mov
aam
xchg
lds
or
xchg
push
push
fisttp
arpl
mov
js
mov
xor
push
xchg
xor
xchg
mov
mov
retf
ret
outs
adc
not
std
mov
or
sbb
sbb
inc
sub
out
lahf
mov
iret
outs
sar
or
retf
xor
pop
mov
xchg
or
imul
pop
pop
movs
jg
add
mov
nop
popa
in
add
clc
cmp
jno
icebp
rol
dec
or
add
add
pushf
push
fnstenv
dec
je
or
xor
(bad)
in
push
push
retf
xchg
js
and
sbb
mov
cmps
call
mov
stos
imul
test
dec
test
sahf
ror
mov
shr
sbb
cmp
jg
push
mov
popa
adc
mov
imul
in
sbb
je
mov
gs
lods
fist
repz
dec
call
cmp
add
or
das
in
pop
xchg
add
retf
bound
fmul
pop
mov
cmp
lds
imul
and
popa
jne
movs
loopne
outs
and
or
ret
test
mov
mov
xor
out
das
cdq
mov
inc
(bad)
sbb
(bad)
mov
jl
retf
fnstsw
sub
js
pop
cmc
adc
out
cmc
adc
cmp
loopne
loop
sub
sub
adc
call
fiadd
push
enter
xor
or
pop
or
or
xor
sub
mov
mov
push
push
or
rol
xchg
or
xchg
mov
xchg
out
cmp
adc
les
jg
push
cmc
inc
ror
es
xlat
add
or
mov
cmp
cmp
add
push
or
jns
and
js
and
jae
mov
(bad)
lock
and
pop
stos
mov
jns
sbb
push
mov
fnstcw
test
dec
fucomi
jae
loopne
add
add
sbb
dec
or
add
test
stc
pop
sub
imul
push
add
pusha
push
adc
sti
inc
inc
test
mov
and
rol
sub
add
mov
fwait
pop
scas
xchg
and
sbb
inc
or
inc
int3
in
outs
sbb
sbb
add
mov
popa
cmp
stos
push
mov
and
dec
dec
push
cmp
sub
or
sub
xor
pop
cwde
inc
(bad)
clc
push
push
inc
out
enter
inc
cmp
xchg
(bad)
cmp
inc
dec
sbb
adc
add
arpl
cmp
rol
or
jl
adc
push
cmp
int3
popa
jmp
pop
pop
and
dec
or
pop
dec
inc
inc
xchg
ins
add
into
xor
xor
or
push
test
jbe
bound
mov
mov
sbb
fisub
and
sub
push
jnp
pop
xor
cmp
mov
pop
inc
adc
adc
(bad)
mov
and
mov
call
pop
mov
ret
int3
jno
add
add
push
or
push
xor
les
cmp
cmp
add
cmps
add
dec
mov
les
push
dec
and
ret
push
mov
add
xor
mov
pop
ds
mov
jle
inc
call
push
xor
neg
clc
scas
push
aad
fisubr
cmp
jge
and
inc
jbe
or
or
or
ret
pop
sahf
xor
mov
and
pop
push
out
pop
es
into
dec
and
lods
mov
scas
test
repnz
xchg
or
jge
push
xchg
or
mov
cwde
add
pop
adc
leave
xchg
jb
xchg
out
(bad)
pop
out
pop
pop
inc
pop
or
xor
inc
outs
cmp
push
or
pusha
(bad)
xchg
sbb
clc
jp
pop
ud2
dec
xchg
or
dec
push
push
and
mov
and
push
push
sub
fild
and
or
pop
push
xchg
rsqrtps
mov
or
adc
dec
dec
mov
cmp
jge
push
popa
push
xor
fistp
inc
and
jle
scas
mov
mov
xor
mov
(bad)
mov
inc
add
pop
sub
mov
xor
push
add
add
and
rol
ret
cmp
xchg
retf
add
mov
mov
add
(bad)
push
add
push
xor
xchg
ins
fbstp
and
scas
retf
push
pop
adc
mov
add
mov
add
add
mov
loop
adc
pop
jp
add
xlat
adc
js
test
adc
jbe
rcr
dec
cmp
sbb
cdq
daa
mov
call
dec
call
sbb
jbe
pop
push
adc
and
cmps
and
cmp
adc
xchg
push
pop
mov
mov
jae
ret
imul
push
into
mov
mov
enter
fadd
fdivp
jo
je
cmp
pop
mov
and
repnz
xchg
adc
fs
sbb
popf
retf
sbb
push
jae
fiadd
shl
jb
jns
push
mov
aad
xor
add
or
test
pop
cmp
xchg
inc
pop
adc
and
rol
xchg
popa
ret
arpl
outs
mov
shr
push
into
test
bts
xor
test
cmp
div
xchg
add
pop
ins
pop
or
cld
jecxz
or
pusha
sub
pop
repz
loop
pusha
push
xor
into
inc
mov
sbb
mov
mov
call
call
movs
mov
movzx
(bad)
dec
loopne
leave
add
jnp
sub
mov
sahf
or
xchg
push
cmp
fs
and
fiadd
in
dec
inc
sbb
loope
adc
cmc
cdq
or
jae
fidivr
out
adc
jae
and
add
aad
add
push
and
cli
stc
jmp
jbe
mov
out
dec
in
mov
xor
xchg
add
push
fs
jb
mov
adc
pusha
mov
call
loopne
pop
inc
xchg
sub
dec
and
dec
les
hlt
dec
into
add
scas
call
aad
lmsw
inc
pop
adc
xor
shl
dec
shl
add
js
leave
add
lea
push
push
sbb
sar
add
pop
jbe
in
pop
jne
test
push
dec
adc
or
sbb
add
sub
ret
push
ins
add
rcl
cmp
adc
inc
push
fsubr
shr
dec
add
or
xor
push
push
pop
push
or
mov
inc
mov
(bad)
je
dec
cwde
shr
addr16
rcl
push
push
fcmovbe
mov
xchg
jne
sub
sub
adc
dec
mov
mov
sbb
jb
rol
jno
loope
or
inc
cmp
pusha
arpl
adc
add
pop
and
add
or
icebp
push
or
sbb
and
push
nop
or
popa
repnz
scas
xor
fst
mov
stos
dec
sub
or
dec
sub
pop
dec
rcl
ds
and
add
js
js
or
and
loop
ror
cli
pop
or
xor
inc
and
push
jne
push
sbb
sbb
or
add
sar
add
scas
add
or
xchg
or
push
sbb
imul
mov
sub
push
xchg
add
lahf
pop
ja
add
inc
add
jmp
cmp
jge
inc
out
dec
add
dec
add
push
sbb
test
or
mov
add
scas
and
adc
inc
cmp
sub
shl
cmps
cs
mov
ret
jno
add
cmp
shl
mov
rcr
in
dec
imul
js
fmul
sahf
and
pop
(bad)
(bad)
retf
inc
mov
inc
retf
push
lock
in
or
inc
call
sub
xchg
adc
xor
sbb
or
push
repnz
adc
add
sbb
ret
mov
loopne
cmp
dec
outs
add
cmp
inc
pop
ja
adc
mov
mov
inc
jae
and
and
and
daa
sub
and
mov
pop
mov
jmp
xchg
dec
mov
clc
popf
add
cmp
jae
xchg
repnz
inc
mov
sbb
iret
cmc
in
imul
xchg
les
test
arpl
xchg
lock
inc
xor
ret
gs
jg
push
pop
add
xchg
retf
iret
cmp
mov
push
shl
lds
sub
mov
xlat
adc
add
ficom
jnp
push
shr
fist
dec
dec
and
mov
(bad)
call
xchg
sbb
and
adc
cmp
ja
push
mov
rcr
retf
div
fistp
adc
push
cld
inc
dec
mov
inc
ret
lock
enter
mov
hlt
mov
out
mov
vdivss
and
mov
and
ret
outs
xor
add
add
inc
dec
shr
mov
add
mov
not
bound
dec
pop
push
mov
fs
fbld
fdiv
mov
dec
(bad)
int3
scas
pop
mov
loop
(bad)
jmp
mov
inc
cs
mov
mov
pop
pop
cmps
into
xchg
out
or
mov
push
pop
lock
loope
test
xchg
imul
dec
cmp
in
mov
inc
jnp
shl
aas
jne
jmp
fdivr
sbb
outs
sti
jl
jo
jmp
(bad)
jb
and
xor
pop
aaa
or
add
adc
jae
mov
mov
adc
xor
push
push
xchg
sub
sub
pop
sub
sub
add
les
sti
cmp
jb
cmp
inc
add
daa
adc
into
push
cwde
dec
or
loopne
push
jmp
stos
inc
or
sub
call
es
adc
xor
dec
xchg
cs
mov
push
adc
add
cmps
adc
mov
pop
imul
rol
and
push
add
call
ins
mov
ror
fadd
in
add
fcom
sbb
mov
shl
xchg
jmp
(bad)
pop
jb
push
or
pusha
shr
inc
fldenv
and
(bad)
leave
and
jmp
or
xor
bound
stos
loopne
mov
sbb
cmp
sbb
cmp
cwde
sub
test
or
sbb
adc
out
test
sub
adc
or
dec
dec
adc
or
add
int3
cmp
cmp
js
add
(bad)
sub
dec
cmps
inc
mov
lds
push
adc
inc
inc
nop
(bad)
add
adc
push
iret
pop
enter
push
push
fs
adc
inc
add
movs
nop
mov
pop
mov
mov
mov
push
fist
loopne
js
icebp
sbb
outs
pop
inc
and
add
scas
inc
inc
cwde
sbb
push
out
in
adc
or
out
fs
sub
mov
sub
sbb
cmp
sub
fmul
push
(bad)
call
push
data16
sub
jmp
sbb
xor
cmp
or
jmp
test
call
pusha
fcmove
(bad)
mov
sbb
idiv
lods
dec
sub
jmp
adc
or
sub
or
adc
jns
inc
or
inc
add
rep
mov
xchg
les
sbb
pop
or
inc
sub
xor
syscall
xchg
loope
inc
adc
in
loopne
sub
sub
push
xchg
or
add
jecxz
loop
push
je
push
adc
jecxz
call
inc
mov
jb
and
imul
adc
mov
repnz
clc
cmp
je
pop
shr
clc
push
pushf
xlat
stos
sbb
adc
pop
xchg
cmp
nop
test
aas
fwait
inc
icebp
push
enter
pop
sbb
push
xchg
test
xchg
clc
sbb
pop
test
cs
aas
add
mov
push
es
cs
cmp
sbb
pop
push
bound
xor
pop
loope
inc
xor
adc
test
rol
jne
outs
aaa
fdivr
in
cmp
je
or
jl
cmp
std
add
je
jns
repnz
fcom
loopne
adc
push
dec
(bad)
push
retf
shr
rcr
cwde
out
pop
pop
adc
inc
pop
(bad)
dec
add
jb
cmp
xor
ret
push
cmp
mov
xchg
dec
cmp
lds
dec
sub
push
jp
push
xor
adc
sub
push
jne
dec
cmp
mov
(bad)
xchg
mov
loope
repz
sbb
ror
in
xchg
add
shr
push
jl
pop
out
jne
fwait
into
fsub
loopne
sub
mov
or
mov
(bad)
nop
add
xchg
aas
push
cwde
xchg
cdq
aaa
mov
out
ins
sahf
xor
data16
popf
dec
lods
(bad)
jmp
lahf
adc
jb
mov
iret
mov
cmps
sub
out
test
ret
test
repz
sub
jl
xchg
sbb
aam
mov
push
jbe
adc
ins
push
dec
and
inc
xor
or
add
add
pusha
add
popf
pop
les
sub
dec
lods
push
mov
call
shl
xor
fnstenv
or
sub
add
fstp
mov
push
or
mov
pop
lock
cmp
pushf
mov
or
js
sti
xchg
mov
fldcw
mov
lahf
cmp
jb
sbb
mov
sbb
and
out
ja
jns
xchg
mov
jne
and
scas
hlt
rcr
jbe
sub
sbb
mov
and
sbb
and
rcr
cmc
mov
mov
and
test
shl
inc
or
pop
mov
and
loopne
push
xchg
and
idiv
movs
cmc
fs
loop
or
mov
jb
or
dec
dec
xchg
or
pop
mov
or
xchg
(bad)
xchg
add
add
sar
loopne
jle
mov
lea
add
scas
push
cmp
sub
xor
shl
nop
adc
or
add
jle
and
jle
cmp
inc
(bad)
aaa
js
mov
test
sar
push
adc
xor
mov
bound
xchg
add
pop
add
icebp
call
add
jp
mov
nop
lods
and
jno
sbb
cld
mov
loopne
shr
mov
cmp
setg
cmp
xor
fldenv
add
adc
add
mov
test
push
push
ror
ins
cld
in
add
inc
sbb
inc
sub
push
das
pop
cld
jo
and
(bad)
loopne
dec
and
mov
je
cmp
mov
push
test
mov
stc
add
test
mov
adc
out
add
jne
adc
sbb
out
mov
mov
mov
call
dec
sub
push
rol
lea
mov
push
add
lahf
sbb
adc
mov
inc
test
cmp
push
imul
mov
cmps
(bad)
jge
cli
xchg
jmp
push
adc
outs
jnp
or
push
xchg
jg
push
jo
in
rol
les
mov
adc
jmp
ret
and
mov
std
jmp
pop
adc
mov
cmps
pop
cld
hlt
jne
shl
or
pop
repnz
ror
in
pop
hlt
repnz
xchg
add
les
add
mov
inc
scas
mov
push
push
jge
mov
fidivr
add
sbb
pop
mov
add
mov
mov
mov
enter
add
mov
pop
pop
mov
add
cmp
mov
add
fsubr
mov
mov
data16
outs
cmp
cwde
ins
adc
or
pop
lods
inc
adc
mov
pop
push
(bad)
dec
(bad)
xchg
mov
pop
cmp
inc
pop
inc
mov
jl
push
lock
imul
mov
sub
adc
xchg
mov
mov
xchg
or
div
xlat
inc
retf
jo
in
adc
push
pop
mov
xor
hlt
addr16
out
test
adc
mov
pop
mov
mov
xor
test
nop
mov
and
clc
dec
adc
bound
cmps
addr16
adc
mov
daa
add
test
pusha
sub
clc
data16
int
adc
mov
inc
inc
inc
adc
test
js
push
jle
wbinvd
or
loopne
setl
pop
nop
mov
lahf
push
cmp
xchg
jg
sbb
shr
test
add
or
repz
(bad)
adc
and
add
cmc
or
sbb
enter
adc
mov
repz
hlt
in
pop
add
sub
push
pop
xchg
mov
and
xor
adc
test
inc
lock
call
or
out
test
mov
pop
and
mov
jle
mov
in
cmps
pop
dec
adc
xchg
push
or
lock
xchg
jle
cmps
xor
adc
mov
xor
enter
call
add
xchg
xchg
mov
adc
adc
in
add
repnz
dec
adc
push
add
pushf
ficomp
mov
loop
in
add
mov
xchg
int3
sbb
cmp
and
inc
sahf
add
and
shl
adc
dec
cmp
sub
and
xchg
xchg
cmp
add
cmp
fwait
cmp
pop
dec
(bad)
stc
xchg
add
or
or
adc
icebp
sub
cmp
scas
pop
lahf
cmp
jge
nop
mov
dec
mov
push
cmc
xor
inc
int3
hlt
je
cmp
push
pop
add
jl
add
push
push
xor
sbb
xor
das
sbb
stos
mov
jmp
sahf
adc
or
outs
xchg
sbb
jne
dec
add
mov
inc
pop
inc
js
neg
push
jo
ss
das
add
mov
sub
aaa
popa
ins
pop
or
mov
push
mov
push
int3
mov
imul
sbb
add
inc
loopne
push
ss
inc
inc
cwde
sbb
add
sbb
fwait
fs
push
jbe
mov
add
ins
fmul
sti
inc
cs
(bad)
cmp
mov
js
or
inc
cwde
cmp
call
push
mov
js
jo
adc
jp
aaa
jae
mov
ret
push
inc
stos
or
clc
xor
test
add
add
es
mov
adc
pusha
xor
mov
xlat
mov
fsub
push
nop
shrd
adc
sbb
cwde
xor
mov
sbb
push
(bad)
mov
fsubr
adc
scas
stc
xor
ins
push
sar
add
sbb
sbb
xchg
cmp
push
inc
mov
add
nop
inc
push
adc
cmp
loop
jmp
sub
imul
or
or
adc
mov
xchg
mov
call
adc
cdq
shl
inc
pop
adc
shr
mov
and
mov
adc
enter
ja
in
sub
nop
jne
mov
(bad)
xor
loop
sbb
out
or
dec
cs
xchg
(bad)
shr
into
jg
shr
pop
sub
jne
stos
call
in
cs
jb
ror
push
adc
daa
cmp
mov
cmps
mov
or
or
push
or
or
and
fs
or
out
pop
dec
xchg
jle
ss
rol
ss
and
mov
je
mov
and
inc
fwait
adc
mov
sbb
and
js
mov
fisubr
mov
not
pop
inc
not
inc
pop
xchg
dec
or
sbb
xchg
mov
and
xor
inc
jmp
mov
fsub
inc
push
add
lea
pop
retf
hlt
mov
popf
mov
or
sub
dec
xor
mov
(bad)
mov
push
nop
sbb
fisubr
add
mov
or
cmp
xor
push
imul
fsub
in
aas
inc
add
and
aad
mov
mov
dec
push
adc
mov
push
pop
mov
mov
fsub
inc
push
and
mov
mov
fist
push
addr16
inc
dec
sbb
mov
paddb
xchg
jmp
(bad)
sub
mov
jle
outs
cmp
jmp
mov
cs
test
adc
add
pop
imul
mov
ja
xchg
inc
test
retf
or
hlt
or
and
sar
adc
xchg
push
dec
pop
ins
or
add
xchg
mov
mov
add
cdq
outs
test
sub
inc
lods
int3
dec
adc
lahf
push
loope
out
into
(bad)
and
rol
stc
mov
ja
dec
dec
mov
push
mov
and
loopne
test
xchg
push
pop
mov
rcl
cmp
pusha
adc
test
adc
push
mov
sar
shr
shl
inc
mov
mov
xchg
push
xor
data16
or
inc
test
jo
jp
add
xor
xchg
pop
mov
push
scas
or
xchg
mov
push
inc
or
dec
mov
out
xchg
mov
fisubr
or
pop
push
mov
mov
arpl
pop
mov
jae
xchg
cmp
jns
nop
add
xchg
mov
xor
iret
mov
mov
dec
sbb
mov
pop
fxch
dec
sbb
sbb
movs
aas
mov
imul
cs
cmp
outs
mov
ret
inc
outs
push
jbe
inc
mov
enter
daa
test
data16
pop
push
and
aas
inc
push
jg
fwait
aaa
and
fwait
loop
add
dec
aad
jo
ror
xor
mov
inc
std
pop
jmp
arpl
shr
or
push
jmp
out
dec
jb
add
call
(bad)
xchg
push
pop
rcr
and
cld
or
adc
inc
sub
lea
jle
ds
add
jb
push
mov
or
and
push
dec
jg
cwde
or
or
test
lods
repnz
pop
mov
mov
(bad)
and
dec
add
dec
loop
and
ss
sbb
adc
pop
mov
lds
add
mov
dec
sbb
lods
sbb
pop
lea
sub
ret
nop
inc
rcr
inc
and
xchg
xor
adc
adc
int
enter
repnz
int
rol
sub
and
loopne
lods
sbb
loope
push
add
in
push
movs
loopne
test
pop
adc
pushf
sbb
mov
sub
retf
repz
sbb
pusha
or
rol
add
clc
jmp
push
lods
and
add
icebp
mov
adc
pop
mov
sbb
cmp
sub
icebp
and
std
add
or
mov
pop
out
setl
mov
(bad)
rcr
mov
xor
(bad)
std
mov
mov
cmp
enter
jne
cdq
fiadd
mov
mul
inc
arpl
mov
or
push
adc
test
inc
fdiv
jecxz
bnd
rcl
mov
pop
adc
pushf
jl
dec
test
add
push
pop
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
push
wbinvd
xlat
adc
stos
adc
add
mov
cdq
mov
imul
data16
leave
out
lods
pop
pusha
push
and
pop
adc
bound
push
add
xor
(bad)
movs
je
adc
mov
lahf
test
je
and
inc
ins
test
xor
add
add
es
adc
loop
push
add
cmp
(bad)
cmp
xor
adc
and
mov
mov
daa
jno
out
mov
sti
or
pop
xchg
call
adc
jns
popf
lods
xlat
xchg
cmp
daa
xor
mul
xchg
bnd
add
fild
mov
sti
dec
es
es
sbb
pusha
out
jg
adc
xor
sub
sub
pushf
pop
add
sub
mov
or
inc
pop
dec
cs
dec
psubsb
cmc
and
or
sub
pop
mov
clc
jae
test
dec
fdivr
cs
dec
cmp
mov
adc
jmp
pop
inc
inc
lahf
pushf
or
ret
adc
sub
clc
add
or
addr16
add
frstor
xchg
call
lods
xor
dec
and
ror
loope
mov
jmp
(bad)
aas
inc
js
push
or
add
lea
xchg
push
sub
xor
mov
dec
sub
fdiv
enter
dec
xor
dec
fcom
rcr
es
loopne
pop
add
push
js
push
clc
push
mov
les
das
dec
test
mov
xor
es
xor
dec
add
and
cmp
add
rol
sub
mov
add
push
mov
mov
rol
or
retf
dec
ins
sub
cld
in
nop
xorps
mov
ja
inc
inc
lods
into
outs
push
adc
or
sub
mov
mov
cli
jae
and
iret
mov
cli
jnp
add
inc
push
dec
int
aaa
mov
xchg
jae
ds
(bad)
in
retf
or
add
jle
mov
(bad)
les
cmp
sbb
mov
jmp
mov
xchg
je
or
clc
jae
and
das
xor
inc
cmp
rcr
iret
js
add
adc
mov
rcl
sub
pop
cmp
jbe
mov
lahf
adc
into
sub
mov
leave
cli
ja
cmp
jbe
lock
push
sub
sbb
jbe
fsubr
shr
pop
mov
add
cmps
je
inc
cmp
inc
dec
mov
jne
push
shl
cmp
lea
dec
dec
sub
mov
in
dec
addr16
out
jae
sbb
mov
jp
dec
arpl
cmps
xchg
sbb
add
shr
inc
sub
or
mov
and
add
or
add
mov
or
fild
push
xchg
inc
xchg
outs
ret
ficomp
inc
mov
into
in
sub
add
mov
cmp
ror
mov
in
ja
mov
inc
jge
push
mov
aaa
sbb
cmp
(bad)
dec
push
mov
loop
cmp
mov
fsubr
sub
jmp
data16
cs
loop
sahf
ins
ss
loop
adc
shr
add
sahf
mov
movs
push
mov
push
pop
pop
jl
pop
add
adc
sub
nop
push
adc
mov
in
sub
gs
push
sub
add
pop
xchg
dec
enter
sbb
sub
cmps
mov
mov
sub
jp
adc
push
ret
or
mov
jge
jge
pop
cs
in
fcomp
xchg
pop
push
lahf
inc
test
mov
inc
dec
fmul
les
sbb
mov
cmp
pop
jl
mov
dec
sub
repnz
pushf
in
add
xchg
push
or
mov
add
and
mov
mov
retf
jbe
scas
fisttp
push
into
pop
or
data16
pop
mov
retf
ror
or
ror
mov
pcmpeqd
or
add
jl
ja
mov
stos
neg
dec
add
fdiv
sub
in
add
jmp
fld
movs
jb
cwde
inc
dec
adc
push
into
mov
or
lea
push
sub
daa
and
out
push
mov
imul
sbb
dec
je
inc
add
cmp
or
push
sub
inc
cdq
fst
mov
mov
(bad)
aas
pop
sti
xor
mov
add
sbb
mov
enter
jle
hlt
adc
push
mov
shl
popa
test
call
jecxz
push
add
add
cmp
pop
hlt
xchg
lods
movs
cli
push
adc
mov
sub
mov
loop
add
enter
or
(bad)
popa
ins
bound
sub
shl
mov
mov
ins
sahf
jecxz
data16
or
push
pusha
dec
mov
pop
pop
jo
js
lods
std
test
add
shl
xchg
xor
mov
in
inc
mov
jne
dec
jmp
lods
test
lods
mov
call
call
push
push
jmp
rol
adc
add
pop
lahf
inc
shl
and
mov
add
pop
pushf
sbb
test
imul
add
xor
sbb
jb
mov
xchg
xor
sub
clc
test
push
das
jg
push
mov
mov
mov
(bad)
das
or
shl
cmp
jae
push
fadd
stos
stos
ds
lock
and
jb
mov
xchg
mov
stos
add
div
mov
add
in
cmp
mov
cmps
sbb
fist
(bad)
outs
movs
push
mov
push
mov
in
dec
xor
pop
adc
test
nop
jge
mov
mov
shr
pop
test
adc
shl
(bad)
jle
inc
fsubr
mov
ds
push
mov
sub
xor
nop
add
movs
mov
rcl
pop
adc
imul
mov
cmp
ss
pop
int
mov
fcomp
fadd
pusha
int
push
(bad)
sub
adc
sbb
push
xor
jmp
in
icebp
xlat
movs
push
xor
jecxz
pop
and
adc
add
daa
mov
out
push
call
adc
and
in
push
or
push
cdq
rcl
nop
dec
inc
fsubr
sbb
jg
or
sub
fincstp
dec
test
add
jne
mov
retf
inc
jb
sub
pop
es
and
adc
adc
hlt
movmskps
cld
inc
xor
lds
ds
xchg
sub
fadd
sti
out
lods
mov
add
pop
xchg
dec
add
das
mov
cmp
xor
jb
call
cmc
(bad)
add
jg
xchg
xchg
push
pop
sub
inc
sub
xchg
nop
iret
xor
lock
xor
sar
pop
loope
sbb
stos
addr16
ret
inc
imul
push
dec
arpl
loop
scas
dec
or
pop
dec
pop
movs
adc
cli
mov
mov
dec
adc
or
dec
test
bound
xor
in
cs
push
popa
mov
in
out
inc
loopne
or
fsub
(bad)
pop
jmp
fwait
pop
adc
and
in
xchg
test
and
xchg
lock
in
in
cmp
ficom
rcr
arpl
sar
add
mov
sbb
stos
and
dec
sub
and
adc
(bad)
pushf
imul
cdq
or
ret
lock
mov
mov
lods
add
fimul
push
cmp
or
adc
cs
and
(bad)
and
or
jbe
mov
fs
inc
and
cs
adc
sub
push
sbb
dec
popf
xor
dec
add
pushf
add
jge
out
sub
aaa
imul
dec
clc
push
jmp
add
xlat
imul
cmps
fsub
bound
add
push
xchg
add
pop
dec
jg
dec
mov
push
push
push
mov
ja
pusha
int
inc
xchg
in
pop
cmp
mov
femms
mov
ss
add
mov
pop
pop
dec
xlat
in
(bad)
call
or
test
outs
mov
pop
inc
jne
xlat
inc
sbb
or
sahf
(bad)
imul
(bad)
test
mov
in
mov
and
or
lds
or
aas
dec
pop
mov
lock
enter
arpl
into
push
(bad)
mov
add
inc
jbe
ja
mov
add
add
xchg
movs
test
sbb
pop
jo
and
add
dec
inc
retf
addr16
js
dec
not
pusha
or
dec
or
std
sub
sub
movs
cs
push
mov
cmp
push
rol
enter
ss
fst
push
nop
psubusw
nop
or
je
push
lfs
shr
pop
mov
aaa
mov
inc
add
add
dec
mov
int3
mov
push
dec
add
add
nop
inc
add
add
mov
aaa
push
and
out
sahf
sbb
or
frndint
hlt
sahf
out
dec
inc
(bad)
in
call
sahf
out
lock
hlt
clc
fst
out
cld
cld
or
loope
dec
add
add
sbb
jmp
push
pop
fs
mov
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
pop
and
cld
or
std
(bad)
cld
out
fcmovnu
neg
inc
xchg
jle
fisttp
jnp
inc
(bad)
inc
fcom
push
cmp
xchg
rcr
add
add
out
add
aaa
adc
mov
dec
addr16
add
rol
fcom
out
les
mov
jns
mov
jns
out
sbb
sbb
out
sahf
out
adc
or
and
or
inc
sbb
push
hlt
fadd
(bad)
mov
add
pop
mov
daa
ja
inc
clc
ret
adc
or
push
mov
mov
sub
jae
xor
mov
inc
loope
and
test
cmp
dec
mov
push
mov
std
jne
(bad)
es
jne
dec
je
cmps
call
ins
or
cmp
jb
jmp
mov
out
pop
imul
(bad)
(bad)
jmp
retf
lahf
std
std
jmp
cld
cld
jmp
fild
adc
in
adc
or
and
js
jle
ret
push
adc
push
or
repnz
mov
arpl
add
jno
test
push
inc
das
sbb
test
push
(bad)
dec
jo
aas
lock
dec
ins
add
fisubr
(bad)
into
and
mov
shr
add
test
jne
add
add
rcl
push
or
xor
adc
inc
mov
pop
scas
dec
jle
ss
pop
push
movnti
sbb
imul
mov
out
in
add
in
lods
push
test
push
jne
outs
dec
jne
call
cmp
pop
inc
aaa
sub
jne
and
adc
ret
stos
outs
mov
mov
jmp
pop
ins
mul
ins
mov
out
mov
mov
mov
lock
xchg
sub
inc
test
sbb
test
test
adc
sub
sbb
sub
mov
and
loop
je
cmp
pusha
jo
sbb
(bad)
jmp
imul
ret
rcr
inc
mov
pop
mov
cmp
out
mov
pop
pop
mov
push
(bad)
cld
dec
and
jmp
add
test
jmp
pop
jmp
sbb
mov
pop
pop
in
add
cmp
sub
cmp
or
js
push
dec
pop
pop
mov
xor
mov
inc
into
sub
mov
data16
sbb
cmps
inc
fidiv
jmp
loopne
rol
loopne
stos
adc
stos
adc
cmc
cmc
mov
jl
dec
imul
or
add
dec
ret
in
push
sbb
sub
mov
call
mov
mov
jmp
dec
loopne
jg
jae
pop
mov
push
push
fstp
push
push
retf
adc
pusha
int3
xor
sub
clc
sbb
lock
push
dec
ret
(bad)
popa
sbb
fcomip
and
loopne
outs
push
push
out
iret
fimul
mov
add
clc
push
or
aad
xchg
dec
push
fist
add
jnp
cmp
shl
xor
push
jg
(bad)
or
or
call
test
lahf
jne
jmp
add
mov
lods
jmp
inc
or
or
and
sbb
or
and
jmp
fmul
rol
std
inc
add
movs
jecxz
cmp
jl
and
retf
pop
push
push
outs
hlt
daa
or
add
dec
mov
sub
(bad)
push
jb
inc
shl
xchg
scas
xchg
ds
and
fisttp
xor
mov
sbb
add
sub
adc
mov
dec
inc
out
inc
adc
(bad)
cmp
ins
push
xor
or
adc
cmp
and
or
adc
or
cdq
dec
jno
stos
pop
int3
dec
add
push
adc
fmul
loope
aad
mov
pop
adc
sub
lods
iret
es
mov
xchg
add
jg
dec
add
cmp
paddd
neg
ja
and
adc
sbb
cmp
ja
xchg
sub
push
clc
jbe
add
xchg
xchg
rol
popf
sbb
xlat
add
and
sbb
sbb
jno
pop
add
and
rol
lea
push
push
std
mov
test
add
push
and
movs
xor
bound
push
shr
cli
jbe
aas
mul
add
pop
cld
sub
sbb
add
mov
xlat
adc
mov
cld
(bad)
mov
xchg
lds
arpl
mov
push
neg
cld
jne
rcr
lods
jmp
xlat
mov
fwait
loope
inc
cmp
pop
sbb
sub
mov
or
dec
lods
xchg
aad
push
aaa
or
adc
dec
dec
js
into
pushf
test
adc
push
pop
adc
dec
pop
cmps
aas
cld
mov
adc
push
pop
aaa
test
or
call
mov
inc
sub
adc
and
xchg
push
sbb
xor
scas
push
(bad)
loope
cld
data16
dec
jne
jmp
in
jecxz
mov
push
push
xor
nop
call
cld
mov
adc
sub
test
dec
xchg
xor
push
push
add
mov
in
enter
and
and
(bad)
daa
dec
leave
adc
adc
outs
push
rol
push
jmp
inc
adc
imul
mov
add
aam
adc
mov
fs
cmp
cmp
enter
pop
cmp
cmp
ja
or
jo
out
lods
aad
jb
adc
sbb
mov
mov
inc
cmp
je
cld
push
aam
push
repz
loop
adc
mov
popf
imul
jbe
mov
out
mov
mov
clc
movs
loope
xor
jbe
js
add
aaa
in
test
and
pop
dec
adc
iret
xchg
mov
call
adc
push
sbb
add
mov
std
push
jne
push
jg
xchg
adc
dec
cmp
jg
scas
xchg
movs
push
inc
iret
jb
pop
pop
ret
jl
jg
mov
inc
xchg
jbe
test
pop
add
cwde
or
in
push
xor
adc
ror
test
and
(bad)
int
inc
das
xchg
cld
repz
clc
pop
cmp
jl
mov
add
loop
cld
and
cdq
sub
out
sbb
push
cwde
movs
or
adc
push
dec
test
int3
add
popf
ins
retf
test
cdq
sub
sbb
inc
sbb
arpl
mov
and
popf
cmp
into
aam
movs
je
popf
sbb
fcomp
inc
popa
dec
and
clc
mov
jae
hlt
stc
sbb
and
dec
and
pop
dec
cmp
cmp
push
jle
cmp
ja
test
jns
fidivr
mov
not
push
dec
sub
inc
add
sahf
test
nop
sub
fisub
data16
cdq
call
call
imul
jg
and
push
sbb
pop
cdq
pop
idiv
add
mov
adc
push
sbb
sbb
cdq
lahf
iret
ins
out
dec
jg
jl
out
lea
aaa
addr16
dec
dec
push
push
ret
add
jns
data16
dec
rcr
out
mov
adc
mov
int3
jns
sbb
sub
xchg
cmp
pop
or
mov
xchg
mov
add
sub
bound
or
mov
int3
inc
dec
cs
add
xchg
xchg
xor
and
or
sbb
pusha
aaa
jbe
(bad)
cdq
pop
idiv
add
mov
pusha
sub
cs
enter
adc
jbe
aaa
dec
push
push
xor
dec
bnd
cmp
jae
dec
(bad)
or
jae
mov
jbe
test
dec
aam
lds
sub
adc
sbb
adc
data16
ror
jg
popf
mov
popf
dec
sbb
jbe
aad
xchg
cmps
or
je
or
inc
dec
mov
push
push
xchg
add
sar
adc
add
jmp
shl
std
or
push
mov
xor
dec
repz
loope
and
pop
jmp
pop
mov
inc
dec
pop
jmp
add
jmp
sbb
xchg
or
jl
bound
pop
mov
add
icebp
xor
sub
jg
loope
push
pop
sub
je
dec
pop
sub
inc
ja
ret
ret
push
mov
ror
mov
rcr
les
adc
aaa
xchg
sub
cmp
dec
sbb
cmp
(bad)
jecxz
sar
lock
idiv
cmp
dec
jge
add
daa
adc
jp
or
mov
jmp
cmc
adc
sub
icebp
inc
and
mov
mov
data16
adc
add
add
or
ret
dec
adc
mov
jb
sbb
lods
call
push
mov
ds
dec
or
je
push
sub
add
sbb
add
ins
and
mov
out
push
scas
push
jmp
inc
fwait
push
or
mov
mov
retf
pop
add
ds
sub
add
call
dec
test
je
fldenv
mov
push
pop
push
jno
(bad)
pop
jns
xor
xchg
and
dec
inc
sti
and
push
ret
out
icebp
js
inc
jg
cmp
(bad)
js
xor
pop
add
fnsave
pop
adc
pop
mov
shr
inc
ja
cwde
pshufw
mov
add
dec
jne
gs
jmp
mov
popa
mov
in
or
jle
sbb
jnp
js
jmp
ret
in
pop
push
mov
pop
popf
mov
lea
push
fld
inc
cmp
jns
pop
add
adc
mov
enter
push
pushf
xchg
shl
loopne
iret
rcr
or
scas
add
popa
inc
push
(bad)
cdq
cmp
xchg
dec
mov
pusha
je
inc
or
adc
test
pusha
(bad)
lods
pop
push
movs
mov
cmps
mov
cmp
xchg
add
shr
mov
dec
adc
push
mov
out
fdivp
adc
or
repnz
adc
add
jmp
adc
push
es
push
lock
pop
push
inc
add
out
or
ror
pop
jg
push
add
push
nop
mov
inc
adc
or
movs
fld
scas
pop
jbe
aam
lea
loopne
inc
into
lock
xor
mov
xchg
out
xor
or
dec
add
fdivr
push
inc
adc
sti
sbb
cs
ins
sbb
pop
sahf
lea
add
xchg
pop
mov
mov
iret
inc
inc
and
je
cmp
fs
adc
gs
inc
cwde
xchg
jnp
data16
(bad)
test
push
pop
jb
sbb
inc
cmps
sbb
jbe
adc
lea
fisub
pop
sub
mov
mov
stos
pop
dec
sbb
enter
scas
mov
icebp
and
ficomp
out
add
or
mov
popa
adc
sbb
cmp
ffree
and
adc
fadd
sbb
mov
addr16
lock
xor
out
jmp
jle
test
(bad)
xchg
xor
push
jne
mov
or
mov
mov
jle
mov
mov
jne
mov
pop
xor
add
push
dec
or
sbb
sbb
in
rcl
mov
push
cmps
frstor
sub
sbb
pop
xor
jns
dec
sahf
push
sbb
mov
push
mov
add
sbb
jnp
pop
retf
or
adc
cmp
push
xchg
ret
pop
cmp
mov
or
jmp
cmp
dec
adc
call
lahf
(bad)
cs
icebp
or
mov
xor
add
pop
or
mov
fdivr
dec
jecxz
and
cmp
or
(bad)
out
cmp
aad
push
and
pop
jp
pop
or
and
cmp
xchg
fisub
call
add
outs
pop
push
aam
sbb
test
dec
push
(bad)
sar
jmp
sbb
mov
pop
sbb
test
xor
or
leave
nop
jns
and
push
lods
mov
xor
add
push
(bad)
mov
jo
test
or
lock
xor
mov
push
jmp
ficom
pushf
and
sbb
dec
test
(bad)
inc
out
cmp
lea
adc
inc
pop
cld
ja
or
or
outs
push
sub
(bad)
cdq
push
mov
int
movs
mov
dec
stos
xor
dec
clc
push
rol
sbb
and
ja
lahf
jmp
das
xchg
test
add
into
sti
icebp
mov
dec
push
test
cmc
and
call
stos
pop
cmp
ret
lods
mov
mov
pop
mov
xchg
cdq
popf
sub
shl
jecxz
in
pusha
xor
add
or
cwde
and
les
pushf
ds
clc
inc
xchg
mov
test
in
jmp
push
in
cmp
or
adc
add
and
iret
je
mov
and
test
or
jg
sub
outs
xchg
pop
xchg
test
aam
js
cmp
mov
jo
lock
pop
call
push
push
and
daa
ret
adc
sub
add
inc
ja
inc
or
loopne
cmps
inc
repz
nop
inc
push
xor
pop
div
jp
nop
inc
js
cmp
xchg
xchg
or
int
clc
test
jne
test
mov
arpl
add
cdq
inc
clc
pop
adc
test
sub
repnz
mov
push
jmp
xlat
sub
sub
cmp
jg
lea
or
pop
out
push
cmps
enter
dec
call
fld
fwait
pop
sbb
mov
and
mov
movs
sub
adc
bound
xor
adc
(bad)
pop
sbb
sub
mov
or
es
out
cmp
ds
and
and
or
out
push
push
mov
dec
sahf
cmp
ss
ror
lock
push
jo
call
(bad)
cmc
mov
out
sbb
inc
lods
pop
movs
mov
and
push
xchg
mov
or
(bad)
scas
cmps
ret
ins
(bad)
ret
and
loope
fcomip
mov
inc
jge
pop
cmp
inc
xor
mov
or
add
retf
cli
rcr
pop
lods
leave
int
sbb
mov
movs
shr
add
push
mov
push
inc
dec
hlt
xchg
inc
outs
mov
adc
pop
cmp
xor
mov
xor
fdivp
mov
cwde
cdq
and
outs
jo
mov
xchg
adc
mov
xor
ret
popa
jnp
sub
imul
dec
xchg
push
cmp
jb
add
fs
in
xchg
sbb
stc
push
mov
movs
mov
mov
loope
leave
fist
sub
push
or
inc
(bad)
xchg
xchg
retf
adc
adc
or
xchg
sbb
and
adc
rcl
imul
dec
jbe
push
dec
add
inc
jmp
push
call
lea
jno
xor
in
sub
stc
push
jo
rol
outs
and
das
and
jne
sub
fsubr
test
pop
ja
add
inc
dec
and
jo
je
push
or
sub
mov
mov
pop
ins
jecxz
data16
enter
add
out
jbe
pop
and
pop
sub
aam
outs
and
frstor
imul
sub
das
pop
inc
push
or
xchg
les
imul
jmp
(bad)
pop
inc
loop
out
nop
xor
push
rcl
inc
xor
in
(bad)
je
out
adc
pushf
ret
add
inc
ret
or
call
sbb
js
(bad)
xlat
xchg
pop
push
jo
fidiv
add
add
sti
add
into
mov
sub
jo
or
mov
mov
dec
jl
or
je
add
fstp
jne
mov
xchg
cmp
into
fs
pop
sbb
fnstenv
shl
shr
sbb
and
movntps
mov
or
cmp
ror
sti
xchg
push
jmp
mov
lods
pop
jnp
mov
pop
cmp
inc
sahf
out
test
test
adc
cmp
icebp
cld
pop
and
sbb
mov
mov
and
inc
adc
sub
dec
xchg
cmp
aam
or
loope
arpl
shl
lds
xchg
cmps
inc
in
xchg
movs
mov
push
call
sti
push
push
clc
scas
inc
sbb
or
cmp
loope
repnz
std
sti
pop
cmp
jle
add
lea
and
xor
cmp
cmp
add
mov
sbb
loopne
shr
lods
push
dec
push
loope
sbb
adc
cmps
es
push
fisttp
nop
sbb
push
pop
jmp
das
jle
ss
mov
push
cli
cld
pop
loope
sub
ins
push
js
cmp
and
or
xor
inc
loope
adc
adc
dec
adc
popa
or
xchg
jne
retf
push
adc
inc
shl
les
loope
loope
mov
fadd
adc
xchg
mov
ss
inc
dec
mov
sbb
dec
cwde
and
cmp
or
clc
les
push
jl
addr16
pop
push
imul
adc
cvtpi2ps
or
sub
or
or
mov
shr
aam
into
or
pop
cmp
and
add
cmp
ins
add
jle
jle
pusha
int3
cmp
pusha
mov
fnsave
into
push
xchg
push
xor
push
add
pushf
in
std
pop
jns
test
pop
push
(bad)
mov
xchg
and
jle
scas
adc
in
cdq
cwde
ins
push
inc
pop
jbe
add
mov
jae
jnp
inc
sbb
jl
loop
adc
or
test
pop
outs
xor
icebp
es
dec
add
fidiv
sub
test
repz
mov
sar
fld
inc
aas
dec
sbb
pop
test
les
rol
stc
push
pop
dec
pop
gs
adc
aam
sub
jl
xchg
adc
push
rcr
mov
mov
inc
jno
mov
jge
loop
and
jg
fst
or
push
das
fild
sbb
or
rcr
nop
push
mov
iret
inc
inc
cmp
clts
cmp
shl
movs
mov
stos
mov
and
dec
pop
adc
enter
std
stc
mov
cmp
xlat
adc
push
add
mov
push
mov
call
ror
ror
mov
jne
leave
adc
dec
xor
push
push
paddw
inc
enter
add
ret
ret
dec
nop
lock
dec
mov
mov
xchg
jle
or
mov
jne
sahf
inc
loopne
lds
cmp
je
push
call
or
jae
fmul
(bad)
add
pop
imul
jne
add
or
push
add
imul
sbb
xor
ss
(bad)
call
sbb
ja
retf
popa
pop
or
and
jge
push
push
js
imul
push
add
cmp
pusha
mov
ret
dec
mov
fadd
adc
inc
jae
jo
add
out
inc
ds
inc
or
sub
dec
xchg
inc
push
add
shl
add
add
pop
push
repnz
mov
add
xor
add
ret
dec
pusha
mov
arpl
test
push
pop
inc
mov
lea
xor
xor
or
hlt
ss
out
jne
or
xchg
cld
ret
das
add
mov
mov
push
push
out
sbb
mov
adc
rcl
sub
bound
push
add
dec
pop
jo
pop
xor
jp
xchg
test
add
sar
sbb
and
push
dec
sub
fiadd
aaa
mov
bound
sahf
mov
(bad)
push
adc
jge
and
ja
ins
pop
xlat
and
mov
push
jl
cwde
pop
out
jle
add
pop
push
lods
movs
mov
fisub
cmp
jne
loopne
out
cmp
sub
push
mov
push
pop
daa
dec
fs
add
inc
mov
add
sbb
add
inc
add
xchg
test
aaa
(bad)
mov
mov
mov
imul
adc
movs
dec
jle
sbb
out
jns
jnp
test
dec
dec
inc
jbe
mov
xlat
aas
pop
xchg
sub
jmp
sub
add
daa
or
iret
fbstp
fcom
mov
and
pop
xchg
das
shl
call
call
movs
cmp
in
cmp
xchg
mov
inc
stos
pusha
ds
push
add
int3
adc
enter
iret
es
and
shr
(bad)
in
sub
push
push
sqrtps
dec
add
sub
(bad)
(bad)
sti
pop
or
dec
popa
(bad)
add
stos
and
push
jecxz
sub
lock
ret
bound
or
and
jnp
push
arpl
dec
add
adc
inc
push
imul
in
push
dec
sub
cmp
push
cmp
mov
mov
mov
push
mov
jno
cmp
or
cmp
inc
mov
add
(bad)
cwde
xchg
lods
fcom
es
adc
fimul
inc
mov
add
sbb
movs
fucomp
pusha
add
xchg
mov
add
cmp
sbb
or
mov
scas
scas
lea
mov
in
push
mov
push
inc
or
inc
add
cmp
(bad)
jge
out
(bad)
and
mov
lds
int
lahf
mov
jb
jbe
sbb
adc
sbb
imul
jbe
jg
jo
or
lahf
outs
ficom
mov
jmp
mov
sub
movs
idiv
in
not
cld
lock
mov
xor
out
rcl
cmps
shrd
das
push
and
loope
dec
jle
jnp
push
inc
and
shl
call
mov
loope
pop
iret
shr
mov
daa
or
or
dec
dec
add
out
mov
cdq
dec
mov
and
(bad)
or
stos
inc
sar
jns
arpl
getsec
or
dec
sub
cld
push
adc
xor
int3
jae
add
bnd
dec
push
push
sub
xchg
nop
(bad)
xor
mov
mov
adc
rcl
dec
in
scas
jecxz
xchg
js
inc
adc
sub
pop
sbb
clc
dec
clc
and
add
or
add
or
push
js
dec
lahf
cmps
dec
cmp
ror
ins
cmp
jo
mov
push
add
ss
icebp
jle
pop
jl
iret
cmp
xchg
or
sub
xchg
aaa
popa
cmp
inc
mov
dec
or
(bad)
jbe
test
or
xchg
jmp
imul
push
ror
out
mov
jmp
inc
sahf
in
je
sti
daa
sub
inc
or
jns
je
xchg
test
int
les
mov
jmp
std
and
pop
lea
cs
adc
inc
retf
pcmpeqb
mov
jo
inc
pusha
xor
jle
adc
rcr
xor
xor
xor
xor
mov
ja
clc
aam
inc
push
push
add
pushf
outs
jmp
adc
adc
std
inc
sbb
push
push
mov
jmp
ss
xchg
and
shl
push
add
add
push
repnz
cmp
push
sbb
xlat
retf
or
imul
hlt
jb
and
ss
xchg
mov
aad
sub
jmp
movs
cmp
gs
vmovsldup
adc
(bad)
cmp
sbb
ret
ret
mov
lahf
sbb
sub
pop
leave
or
lock
jo
cld
dec
or
jge
and
mov
mov
sbb
imul
in
(bad)
ins
mov
mov
push
pop
cmps
jmp
mov
pop
mov
ins
jmp
xchg
inc
mov
inc
add
test
test
(bad)
test
nop
mov
dec
jo
or
add
repz
rcl
mov
or
aaa
xor
pop
cli
in
(bad)
xor
lods
sbb
jmp
imul
pop
pop
cli
sbb
inc
cmp
in
data16
adc
inc
pushf
fwait
or
cmps
cmp
iret
xor
loopne
push
test
or
test
ins
fwait
xchg
pop
xchg
adc
jno
mov
jle
cmp
ins
hlt
adc
inc
jmp
mov
adc
sbb
push
lock
imul
push
test
ret
call
idiv
call
(bad)
ret
or
je
sub
je
test
add
inc
adc
loopne
xor
or
adc
sbb
je
arpl
(bad)
out
(bad)
jne
pop
ret
push
in
or
retf
mov
std
stc
xor
xor
inc
add
loope
loopne
dec
cld
jae
xor
pop
and
jmp
cmps
adc
sub
iret
or
jmp
pop
jp
or
pop
or
cld
ja
cmp
adc
sbb
pushf
std
sbb
(bad)
je
adc
js
cli
adc
jns
retf
adc
fnstenv
cwde
inc
push
sub
adc
sbb
xor
adc
(bad)
jge
clc
gs
mov
mov
stos
pop
dec
loop
push
or
(bad)
add
mov
inc
xor
push
cmp
inc
lods
add
mov
pop
inc
jge
jbe
and
dec
mov
jne
add
or
mov
adc
push
scas
pop
xor
and
push
jbe
mov
inc
push
jne
clc
movs
inc
addr16
cmp
jne
cs
(bad)
push
cmp
pushf
mov
jp
inc
inc
in
pop
addr16
pop
leave
leave
sbb
add
mov
mov
gs
fcmovne
rol
add
xchg
cwde
add
das
cld
adc
(bad)
mov
jp
fistp
cmp
rcr
or
adc
cdq
loopne
stos
sub
repnz
fwait
xchg
(bad)
add
neg
sub
sar
scas
mov
cmp
je
jns
add
aas
test
jp
jmp
adc
push
pop
adc
jne
leave
into
xchg
mov
push
ja
add
mov
push
inc
mov
inc
je
xchg
push
es
es
stc
add
mov
cli
or
sbb
adc
cmp
jb
or
fild
sbb
add
add
inc
cmp
jb
scas
mov
test
lahf
or
sub
retf
add
push
add
adc
repz
jg
mov
jb
pop
jl
je
add
xchg
jb
sbb
call
push
xor
ds
fldz
iret
arpl
add
mov
dec
and
add
adc
xchg
mov
loopne
mov
push
ja
fwait
dec
and
or
ss
rcl
mov
clc
push
add
shl
retf
add
add
inc
push
aaa
push
fst
or
lea
out
jne
retf
(bad)
push
and
adc
cmp
cmp
je
sbb
jns
daa
movs
xchg
and
fadd
jns
push
cld
aam
xchg
pop
fwait
outs
or
jp
rcr
cld
ins
jne
popa
mov
xor
iret
pop
dec
cmp
and
dec
add
inc
push
push
outs
jecxz
in
sub
and
xchg
fsubr
retf
pop
cmp
add
and
loop
dec
mov
test
push
push
jns
lock
(bad)
or
add
add
inc
test
xrelease
push
and
(bad)
and
mov
pop
retf
inc
add
jp
add
xor
sub
imul
mov
cmp
movs
xor
xor
add
or
mov
fld
mov
hlt
out
rcl
nop
mov
ret
adc
and
add
or
aas
adc
xchg
pop
bts
jmp
out
xlat
sbb
mov
xor
(bad)
mov
nop
mov
bound
add
pop
and
icebp
mov
imul
sub
sub
mov
cmp
adc
(bad)
adc
into
dec
or
lock
pop
and
and
lock
or
jmp
xor
push
jbe
xor
and
push
pop
inc
sbb
mov
jno
pop
repz
fnstenv
inc
mov
jp
sub
test
jb
and
in
mov
bound
bound
in
or
in
cmp
add
not
jbe
inc
cli
je
mov
push
stos
pop
movs
fucomp
je
in
dec
add
in
mov
inc
addr16
push
adc
jno
sub
adc
gs
hlt
xor
mov
push
xchg
in
and
std
push
mov
je
test
(bad)
repz
jge
jecxz
sub
jecxz
sbb
cld
scas
cs
dec
lock
cmps
add
pop
das
add
mov
inc
pop
inc
addr16
outs
and
and
mov
jne
or
or
ret
dec
test
or
jnp
push
sar
leave
shl
scas
stos
imul
pop
les
sbb
dec
dec
mov
lock
dec
jle
outs
cmps
rcr
dec
je
das
cmp
je
sti
pop
pop
rcr
repz
ja
cli
pop
adc
div
sub
add
dec
mov
in
sub
or
mov
pop
ret
pop
cdq
and
fnstenv
inc
pusha
push
pop
push
repnz
outs
int3
adc
sub
jmp
add
ja
inc
add
mov
or
popf
pop
les
hlt
and
adc
icebp
ins
cmps
cs
fsub
jmp
inc
movs
sbb
sbb
fsubr
push
cmp
add
xchg
test
and
sub
sbb
sbb
test
sub
pop
adc
push
dec
inc
or
jmp
outs
and
jmp
inc
add
iret
jmp
xchg
je
in
das
or
sub
xchg
clc
outs
sbb
mov
enter
ins
add
xchg
push
mov
loopne
pop
xor
push
(bad)
sbb
mov
test
xchg
ins
rol
add
movs
add
fwait
sbb
add
or
cmps
mov
nop
cld
imul
shl
dec
call
mov
imul
adc
mov
mov
idiv
mov
or
out
dec
xchg
inc
mov
test
je
jbe
test
scas
adc
mov
call
sbb
or
test
mov
jno
and
cmps
stc
push
psubq
jns
pop
pop
adc
retf
pop
adc
mov
fbld
add
dec
or
cs
and
or
int3
add
out
add
pop
jnp
cmc
and
inc
les
mov
and
or
adc
rol
xchg
sbb
jl
outs
push
adc
or
add
mov
mov
in
inc
push
pop
xchg
mov
rcl
ins
lods
rcr
sahf
mov
loope
imul
cmp
mov
outs
cld
outs
sbb
push
and
fwait
movs
sub
or
ror
mov
enter
shl
or
retf
fstp
push
mov
stos
mov
dec
jmp
add
mov
cmc
push
mov
pop
pop
push
cs
lods
push
loopne
movs
xlat
push
xchg
jbe
or
mov
add
jmp
or
cdq
add
pop
push
bound
mov
mov
dec
test
fs
or
jae
inc
mov
frstor
shl
pop
arpl
xchg
push
movs
cmp
fs
in
or
dec
hlt
rcl
imul
adc
movs
fst
inc
add
pop
mov
mov
fs
mov
or
jb
cld
xchg
mov
loope
or
push
into
fisubr
adc
or
add
dec
out
sbb
add
scas
jbe
jbe
jbe
js
adc
loop
adc
(bad)
sbb
jo
xchg
hlt
pop
inc
mov
lods
and
cmc
push
xchg
js
mov
cmps
mov
and
shl
call
cmp
and
cmp
pop
mov
push
mov
ret
out
jnp
ja
cli
push
popf
sahf
enter
iret
jmp
and
fild
cmp
loopne
sbb
enter
sub
cmp
mov
xor
inc
imul
mov
cmp
jmp
jge
call
std
data16
xor
std
dec
aas
xor
jmp
jmp
mov
or
ret
repnz
test
js
popf
or
and
aas
test
sbb
push
sbb
cld
push
jo
sub
mov
fidivr
add
loope
ror
mov
jmp
adc
xor
es
mov
imul
add
cmp
jge
cmp
jle
aas
pop
or
xor
outs
icebp
xchg
inc
mov
sbb
cmp
arpl
mov
jge
xchg
xor
push
shl
jno
push
xlat
cwde
push
adc
out
sbb
mov
ss
rol
xor
jp
arpl
add
xchg
iret
jle
dec
test
jg
adc
dec
add
mov
dec
or
call
ret
shl
jmp
shr
jl
sbb
int
call
mov
icebp
xor
pop
hlt
fadd
in
test
movs
mov
sub
or
push
cmp
or
sub
pusha
in
push
inc
jle
lahf
cmp
fs
add
ins
cmp
fimul
sbb
popa
sbb
add
xor
test
shl
aam
(bad)
rcl
out
mov
adc
xor
enter
or
ror
sar
push
xchg
push
movs
pushf
jmp
jl
jo
stos
inc
call
call
push
fsub
clc
in
cmps
mov
or
jns
in
or
and
inc
pop
nop
push
jo
xchg
in
inc
jmp
or
or
repz
or
push
sbb
sub
xor
repz
jmp
mov
ins
push
je
pusha
movs
sahf
test
or
adc
popf
push
loope
out
inc
pop
ffree
pop
pop
push
retf
or
das
adc
test
in
scas
dec
or
push
sbb
cmp
jne
pop
add
mov
cmp
and
push
push
sub
mov
into
add
cmp
call
inc
out
add
daa
cmp
aas
push
and
pop
dec
in
je
fcom
adc
iret
mov
daa
js
fnstenv
aam
inc
cmp
(bad)
and
dec
ret
aad
test
dec
and
lods
mov
xor
outs
jbe
or
test
mov
jns
dec
stos
or
cmp
je
mov
js
jns
inc
dec
add
aas
cmps
mov
retf
loop
cld
add
jne
push
push
jmp
and
sbb
outs
or
mov
xor
and
push
lahf
outs
adc
pop
lea
mov
push
jno
jp
in
xchg
scas
and
mov
and
sub
fnstcw
push
ins
cmp
or
adc
popf
cmp
or
clc
inc
cmp
clc
inc
pop
jmp
jb
and
jecxz
pop
sbb
cmp
dec
adc
es
sahf
test
pop
inc
mov
hlt
sub
aam
adc
loopne
dec
add
(bad)
test
mov
enter
mov
add
adc
add
in
add
sub
adc
add
add
add
add
enter
or
push
add
add
or
or
xchg
mov
pop
and
pop
pop
and
or
shl
into
adc
push
sti
jne
cmp
repnz
adc
jae
or
mov
and
push
mov
xor
sbb
cs
arpl
xchg
add
mov
xchg
push
and
xor
mov
mov
xor
push
movs
test
jmp
imul
in
mov
adc
inc
ins
into
mov
mov
and
neg
mov
loope
inc
loope
inc
cld
test
xchg
rol
daa
xor
add
xchg
jb
cli
fldcw
push
add
add
(bad)
jle
cmp
je
pop
out
mov
xchg
movs
xchg
daa
mov
add
push
or
jle
dec
cmp
sar
fiadd
xchg
xchg
or
mov
iret
push
add
or
and
push
mov
dec
inc
js
push
int3
fcomp
loop
cs
push
inc
outs
jbe
out
sbb
push
push
repnz
movs
push
fs
add
inc
adc
in
lea
ret
sub
les
into
adc
push
pop
jg
pop
add
and
call
push
aam
adc
adc
inc
xor
cmp
push
loopne
retf
add
mov
je
fsubr
cmp
ss
popf
cs
or
jle
adc
rol
mov
xchg
fiadd
andnps
sbb
mov
mov
xchg
call
add
mov
pop
inc
les
cs
and
pushf
mov
and
xchg
add
and
call
adc
(bad)
les
int3
enter
mov
xor
call
jmp
sbb
push
in
ror
pushf
fsubr
inc
jmp
xchg
retf
and
push
mov
and
int3
xor
jns
test
cwde
sub
jmp
call
push
pusha
cmps
inc
add
or
sub
mul
xor
add
daa
js
sbb
pop
push
mov
xchg
pop
sbb
sub
sub
xchg
lock
mov
add
adc
dec
clc
xchg
ret
jp
(bad)
pop
xchg
aas
jne
xchg
or
inc
pop
fwait
rcl
movs
xor
add
mov
xor
cmp
add
je
ds
in
adc
ja
push
adc
push
pop
dec
aaa
fcom
add
sbb
xchg
clc
xchg
and
fisub
ja
push
push
jle
rol
add
bound
dec
sar
xchg
xor
or
mov
iret
icebp
push
pop
scas
nop
cmp
sub
adc
dec
es
cmps
and
ss
jle
jo
inc
push
dec
push
sbb
mov
inc
add
sub
mov
inc
and
adc
js
ss
pop
hlt
(bad)
jge
dec
xor
mov
lods
mov
loop
mov
aaa
cld
add
adc
adc
xchg
adc
ret
push
ins
shl
pop
pop
enter
shl
sbb
or
jp
push
jne
jo
aaa
push
(bad)
jle
add
cmp
in
pusha
add
shl
mov
cmp
jb
cmp
jbe
and
add
push
call
jp
cmp
jbe
add
push
lock
push
mov
(bad)
add
sbb
pop
enter
mov
clc
xor
inc
sbb
and
data16
lock
dec
test
(bad)
jmp
and
cmp
pusha
test
jmp
cmps
sub
sub
xor
add
xchg
and
test
jg
mov
scas
xchg
data16
enter
test
nop
and
ret
(bad)
jns
xor
or
(bad)
dec
ins
sub
mov
cmp
xor
add
cdq
adc
sbb
pop
jl
mov
fld
mov
add
sub
sub
xchg
out
mov
sub
pushf
call
daa
jns
add
sub
in
add
add
push
scas
push
mov
je
inc
scas
in
xchg
add
mov
repnz
test
push
cmp
push
repnz
gs
pop
xchg
out
add
sub
or
or
and
add
or
or
or
cs
in
add
or
or
pop
and
or
xor
push
push
push
retf
add
xor
adc
pop
adc
inc
adc
cmp
enter
int
push
xor
pop
enter
adc
mov
adc
adc
adc
push
adc
xor
inc
pop
pop
ja
cs
and
sbb
xchg
leave
mov
add
cmp
push
repnz
sbb
sbb
sbb
push
sbb
je
push
sbb
jns
xchg
mov
ja
sbb
sub
test
repnz
nop
mov
retf
jo
or
repnz
outs
pop
add
pop
xchg
scas
or
cdq
cmp
mov
out
std
in
push
in
imul
and
xlat
in
in
and
out
mov
out
sub
fmulp
dec
call
adc
pop
or
(bad)
mov
cmp
leave
xor
cmp
mov
add
or
in
in
push
imul
addr16
fsubrp
cmp
mov
cmp
mov
or
and
in
je
lock
dec
icebp
icebp
xchg
cmp
push
das
repnz
and
enter
in
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmps
div
mov
or
popa
neg
gs
scas
add
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outs
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shl
mov
leave
repz
in
std
sbb
(bad)
(bad)
jo
sub
jmp
push
imul
ffreep
sub
sub
pop
cmp
inc
call
xchg
push
repnz
xor
push
in
scas
and
or
sti
pop
ins
nop
and
out
xchg
scas
dec
pop
push
(bad)
call
or
dec
stos
or
jmp
leave
or
or
add
xchg
pop
jmp
dec
in
cli
out
out
out
xchg
mov
lock
cmp
(bad)
cli
or
aas
repz
inc
scas
and
xchg
push
sub
stc
(bad)
rcl
imul
mov
xchg
clc
cmp
pop
push
cdq
jb
push
stc
sub
sbb
enter
sti
sti
xchg
or
repnz
fdivrp
cmp
jmp
mov
cmp
ja
or
inc
push
popf
pushf
and
int3
test
loop
loop
sub
shl
loope
in
repnz
clc
and
inc
dec
add
out
jns
inc
out
fdiv
out
and
loope
neg
pop
or
inc
test
inc
repnz
idiv
inc
mov
pop
test
xchg
in
aad
into
mul
scas
test
or
ins
repnz
pop
push
retf
or
loope
stos
and
mul
out
div
push
ja
push
nop
jo
dec
loope
jns
push
mov
push
stos
xchg
cmp
call
das
test
adc
cmc
loope
cmc
add
push
and
hlt
or
xlat
inc
mov
pop
and
call
jne
push
jo
adc
add
cmp
sti
mov
loope
loope
scas
xchg
stos
(bad)
jp
movnti
cmp
mov
in
pop
retf
or
pop
repz
setb
aam
mov
call
jmp
pop
mov
pop
pop
dec
(bad)
repz
in
xchg
adc
pop
mov
pop
pop
(bad)
repnz
repnz
in
ror
movs
sbb
mov
mov
adc
repnz
and
aam
call
pop
xchg
icebp
mov
inc
mov
push
icebp
cwde
icebp
or
jne
stc
mov
dec
icebp
xor
cmovno
or
out
lock
mov
call
add
mov
or
push
ret
aaa
(bad)
push
sub
ffreep
push
inc
shr
add
in
stos
or
push
in
sahf
add
mov
adc
mov
js
add
in
bound
jne
stc
xor
inc
sti
dec
add
movs
xchg
dec
add
call
ja
out
out
imul
out
push
aas
push
inc
rol
push
cmp
js
ss
repz
xor
lock
ret
mov
inc
lods
cmp
int
repz
loop
mov
popf
cmp
pop
sub
push
jns
int
inc
cmps
inc
(bad)
cmp
sub
pop
outs
lods
clc
inc
fidiv
pop
mov
dec
add
push
dec
inc
ins
or
adc
adc
and
push
jp
push
or
sbb
enter
add
bound
pop
cmp
test
es
stmxcsr
jo
(bad)
sahf
and
sbb
jo
cmp
shl
out
mov
and
clc
jg
lahf
adc
jmp
inc
jle
in
add
movapd
cdq
inc
push
fadd
enter
cmp
lock
add
shl
mov
dec
push
and
lahf
mov
or
push
ror
push
repz
add
cmp
ins
mov
(bad)
or
icebp
push
push
hlt
ficomp
sbb
push
je
(bad)
adc
adc
sahf
popa
fistp
add
push
sub
clc
and
or
jl
fchs
ret
in
jns
xor
out
add
mov
(bad)
sub
mov
mov
adc
fs
adc
jge
lods
push
mov
or
mov
lahf
sbb
jmp
or
sti
out
adc
xor
mov
adc
add
mov
or
xor
std
push
nop
outs
jecxz
test
jmp
push
mov
xor
xor
and
mov
fild
jbe
or
add
and
xor
call
mov
cmps
mov
rol
scas
adc
xor
mov
xchg
cwde
dec
push
inc
(bad)
out
ret
xchg
xor
cmps
or
sub
adc
scas
jmp
mov
(bad)
sbb
cmp
jl
push
pop
mov
pusha
push
xchg
clc
add
pop
xchg
or
pop
shl
popa
imul
add
mov
jl
jns
push
xor
rol
jl
xchg
jmp
xor
ins
jae
push
xlat
mov
cli
out
and
mov
div
dec
dec
and
mov
dec
or
fimul
rcr
(bad)
and
aad
or
(bad)
test
push
mov
les
pop
mov
fidiv
arpl
dec
jecxz
jb
cmp
or
or
rcl
call
retf
movs
push
cmp
pop
stc
loopne
addr16
pop
push
mov
ss
xor
and
and
aam
xchg
out
mov
sub
inc
call
sbb
je
mov
minps
test
jne
push
sbb
sbb
adc
fsqrt
xor
sub
push
loope
or
movs
mov
(bad)
shl
inc
and
jne
push
sbb
cmps
loopne
retf
enter
add
mov
add
jmp
and
or
gs
int3
rol
adc
cwde
(bad)
ror
push
hlt
dec
pop
stc
sbb
push
xchg
or
mov
mov
mov
and
and
fcom
pop
xchg
(bad)
push
jbe
inc
aam
xchg
add
in
push
test
jns
push
push
pop
je
inc
mov
leave
push
lea
mov
push
xor
mov
sub
and
call
rcl
sbb
xor
pusha
jmp
adc
cli
neg
neg
into
retf
xchg
inc
mov
repnz
sbb
popf
xor
push
jp
xchg
and
push
rcr
cdq
scas
adc
xor
jmp
(bad)
inc
test
(bad)
jmp
lock
hlt
(bad)
cmp
out
shl
cmp
pusha
xlat
mov
pop
cmp
add
dec
push
shr
sbb
pop
pop
fisub
nop
adc
(bad)
xchg
inc
xor
or
or
sbb
push
xor
push
jl
repnz
xchg
(bad)
push
jmp
mov
aaa
fbstp
jl
jg
iret
es
xchg
ja
push
in
fmul
sti
add
inc
lea
cld
out
mov
lea
push
(bad)
jp
sub
xchg
(bad)
mov
js
sbb
jo
es
add
rcl
out
mov
outs
and
lea
push
ins
and
ins
aaa
ins
aam
sar
je
popa
fisub
hlt
inc
dec
loopne
mov
and
inc
mov
mov
mov
loopne
sub
jne
sbb
add
mov
fcom
add
daa
inc
add
outs
and
ret
xor
jns
or
and
sbb
cli
mov
dec
cmps
and
add
adc
cdq
cs
int3
adc
imul
pop
popa
ds
pusha
adc
inc
add
or
fimul
sbb
jl
(bad)
test
aad
sub
test
or
in
xchg
cmp
push
mov
jo
cdq
adc
test
lock
cmp
mov
or
icebp
call
push
dec
call
sar
xor
jmp
mov
pop
and
cmp
test
add
mov
mov
arpl
or
in
jne
movd
adc
movhps
pop
and
mov
sbb
jle
mov
mov
dec
clc
test
and
add
pop
in
inc
(bad)
adc
mov
ror
sub
pop
add
pop
(bad)
adc
adc
sub
inc
add
or
movs
je
or
popf
lock
loopne
add
lea
pusha
add
and
sar
cmp
xor
push
or
push
lea
jae
jo
mov
add
mov
sar
and
adc
push
ja
dec
dec
push
jge
adc
adc
cmc
mov
xor
jmp
out
test
popf
push
mov
and
push
nop
mov
or
sbb
out
rol
jns
adc
fiadd
rcl
add
ins
lahf
jns
push
add
xchg
sub
push
fild
sbb
pushf
adc
pop
inc
mov
shr
lods
jno
sbb
cmps
cmp
jns
lock
daa
mov
cmps
mov
xor
mov
cmp
or
inc
inc
fisttp
cld
cmp
inc
and
inc
push
mov
out
cmps
sub
std
add
lea
adc
cld
lock
mov
jo
pop
adc
ja
xor
push
push
or
clc
stc
inc
(bad)
popa
pop
pop
stos
cmp
and
ret
ja
into
arpl
add
inc
xor
mov
leave
jb
shl
push
xor
xor
push
mov
icebp
inc
add
test
jl
mov
xchg
sahf
cs
lock
dec
cs
jnp
mov
sbb
aas
adc
sub
sub
repnz
rol
and
mov
mov
enter
sti
mov
ret
rol
dec
sbb
inc
pop
mov
mov
loopne
lock
outs
mov
out
inc
mov
adc
jmp
push
push
js
dec
sbb
dec
sub
(bad)
jne
lea
mov
test
and
retf
add
les
mov
push
mov
aas
shl
jmp
bound
adc
lea
test
hlt
add
lahf
add
out
or
jbe
cmc
ret
and
push
js
adc
mov
fidivr
mul
pop
inc
dec
ror
adc
pop
fidivr
ss
push
sbb
cmp
inc
xor
inc
rcl
jg
and
add
les
sbb
ret
imul
ja
cmp
pop
inc
add
loope
add
mov
sbb
mov
inc
jne
push
aam
adc
push
jns
and
cs
add
mul
pop
push
add
(bad)
ficom
add
retf
adc
sbb
(bad)
mov
push
pushf
pop
(bad)
shr
jo
add
cs
xlat
add
sub
ret
test
gs
and
loope
sub
fs
(bad)
int3
scas
or
adc
sub
outs
mov
(bad)
cmp
sub
lahf
jo
add
and
in
add
(bad)
sbb
push
outs
sub
xchg
inc
cli
sti
jb
fidiv
jbe
add
ja
pop
rcl
pop
aaa
mov
clc
ja
cmp
pop
popa
and
out
cmp
inc
sbb
mov
inc
xchg
add
xor
fiadd
sbb
adc
je
fidiv
mov
(bad)
jmp
retf
push
and
xor
sub
and
or
cli
add
test
mov
ds
xchg
fs
pushf
and
xchg
xchg
push
jne
adc
hlt
xchg
pop
inc
ret
loope
dec
add
out
xchg
test
test
imul
pop
mov
enter
test
and
retf
leave
fcomp
rcr
sub
mov
and
sbb
pop
addr16
(bad)
xor
or
add
or
or
push
inc
push
xchg
lods
sub
add
lods
retf
lea
cmp
dec
sbb
cmp
inc
imul
and
(bad)
shr
jb
adc
jne
ja
pop
dec
adc
mov
ret
hlt
imul
or
je
mov
lock
push
clc
adc
ret
test
dec
xlat
add
je
adc
movs
or
sar
jecxz
mov
ins
push
lea
loopne
call
xlat
sub
inc
call
test
push
pop
and
lock
jae
xor
push
inc
push
fcom
add
sub
adc
sub
nop
test
call
lods
xchg
(bad)
pop
or
mov
xor
pop
(bad)
ror
fild
dec
xchg
xchg
or
std
push
(bad)
and
mov
add
inc
jg
mov
enter
int3
into
mov
or
leave
cmp
js
jmp
cmp
push
lea
push
xchg
and
hlt
sub
or
je
and
cmp
pusha
mov
mov
int
in
ins
or
pop
sub
mov
sub
icebp
and
rcr
pop
rcl
loop
mov
dec
cmps
ds
test
mov
dec
or
push
nop
sbb
sub
in
mov
lods
call
add
cld
rcl
and
xchg
aas
icebp
mov
push
fcmovnb
adc
cmp
mov
mov
jg
or
mov
stc
or
enter
pusha
ins
clc
ror
icebp
call
clc
add
push
add
ins
in
xlat
adc
xchg
out
sbb
out
jmp
or
and
daa
xlat
cmp
or
adc
xchg
pop
shr
sti
mov
inc
add
mov
mov
pop
out
push
imul
(bad)
loopne
jb
inc
xchg
fst
adc
pop
add
jecxz
pop
jmp
ltr
jmp
pop
in
sbb
add
and
fisubr
mov
xchg
scas
mov
mov
jmp
add
loope
hlt
sbb
sti
aam
mov
push
add
dec
mov
shl
sbb
push
ins
and
sahf
rcr
mov
inc
fdiv
mov
mov
sub
mov
cmp
outs
sbb
adc
jmp
inc
loopne
test
ins
loopne
por
pop
fwait
pop
ins
outs
test
jmp
arpl
jae
pop
sub
je
dec
das
inc
cs
loope
gs
inc
and
dec
add
sub
dec
pop
out
sbb
pop
sbb
outs
addr16
pop
or
add
xor
js
sub
rcl
cmp
mov
cmp
pop
dec
push
pop
jl
mul
jmp
cwde
jmp
in
adc
js
ins
push
push
js
and
pop
sub
loop
rcl
(bad)
(bad)
test
stc
push
xor
test
stos
push
or
push
dec
mov
repz
push
and
out
lea
int
inc
dec
sub
ret
adc
movs
sub
std
cld
stos
or
sub
dec
js
inc
jmp
js
pusha
ss
mov
jl
rcr
push
mov
clc
dec
stos
mov
repnz
add
les
xor
imul
lds
pop
call
call
mov
fsubr
movs
or
adc
sub
adc
mov
test
jne
push
mov
sbb
shl
rol
xchg
out
ror
setbe
mov
jp
pushf
push
imul
xor
jecxz
lds
mov
inc
inc
test
int
cmp
nop
test
sub
xchg
push
xor
ins
adc
pop
and
jg
pop
push
jbe
je
popf
ins
ds
movq
push
dec
adc
push
and
jg
jl
lahf
out
push
dec
and
push
jg
outs
inc
or
jl
idiv
jbe
jle
xor
jg
jg
or
jg
lea
mov
and
je
pop
aam
pop
pop
ffreep
xor
xchg
mov
lea
inc
out
mov
sbb
shr
push
mov
xor
add
enter
mov
inc
push
xchg
sbb
in
mov
pop
mov
mov
mov
push
mov
or
dec
test
mov
push
loop
or
lahf
into
sbb
mov
xor
and
or
sbb
mov
out
mov
adc
or
add
ins
cmp
sbb
out
push
and
(bad)
add
shl
mov
add
fwait
mov
stos
add
pop
clc
pop
sub
mov
out
movs
mov
sbb
mov
sub
xor
les
mov
sbb
test
add
dec
das
inc
loop
out
mov
popa
hlt
add
add
shl
hlt
mov
lahf
push
jno
shl
lea
sbb
jle
inc
sub
icebp
adc
and
mov
ret
add
(bad)
mov
or
cld
ficom
push
push
cmp
sub
mov
cmp
jb
int
inc
cld
jo
add
pop
or
mov
mov
push
or
mov
xchg
out
push
jbe
and
push
xor
adc
push
xchg
jo
jmp
(bad)
hlt
fucomp
cmp
sub
mov
sbb
push
cmp
sti
sbb
sub
mov
enter
and
rcr
and
cld
popf
and
(bad)
jae
sub
adc
cwde
pop
inc
cmps
add
clc
mov
xor
jg
retf
icebp
enter
xchg
sbb
test
in
inc
or
xor
cmp
shl
pop
push
gs
or
mov
shr
rcr
push
nop
inc
add
or
data16
cs
sbb
popf
(bad)
push
mov
ret
mov
push
jecxz
mov
cld
stos
inc
or
cmp
std
jne
pop
pop
inc
in
clc
jmp
sub
and
shr
cmp
les
adc
and
lods
fld
lock
in
and
mov
cwde
push
mov
lea
jbe
add
mov
lods
in
push
mov
outs
lock
cmp
call
je
jmp
jecxz
pop
imul
sbb
push
xchg
jmp
push
add
(bad)
push
aas
ret
and
jp
inc
mov
int3
jae
cmp
jbe
lahf
and
fimul
push
sbb
mov
arpl
jns
inc
and
popa
jae
leave
xor
sub
lea
adc
daa
cmps
add
sub
mov
jmp
loopne
cmp
or
call
jmp
mov
shl
cmps
jge
call
(bad)
ss
pop
xor
ret
inc
mov
push
mov
movs
out
or
inc
pop
dec
mov
pop
dec
call
repz
icebp
inc
rcl
jge
mov
xchg
idiv
add
test
ins
lock
push
mov
mov
movs
jmp
xor
push
or
icebp
retf
jnp
cmps
cmp
sbb
sub
mov
pusha
loopne
mov
cdq
and
(bad)
lds
in
add
or
adc
adc
mov
inc
adc
mov
and
inc
and
jno
pop
lahf
sub
adc
sub
add
cmps
cmp
ins
jmp
mov
and
xchg
test
push
or
and
pusha
call
jge
dec
out
sti
jmp
test
sub
inc
jmp
xor
or
mov
mov
jmp
mov
fldcw
and
ins
adc
jno
daa
jmp
imul
and
pop
and
and
or
adc
xor
in
push
and
pop
mov
add
jge
xchg
xchg
sbb
and
lea
loopne
or
cmp
arpl
aaa
cmp
sub
ret
adc
mov
aam
movs
mov
add
xor
mov
pop
mov
and
ins
mov
add
psraw
call
or
pop
sbb
sahf
xchg
mov
xor
enter
movs
inc
mov
int
cmp
dec
sbb
mov
inc
cdq
inc
loopne
xchg
test
push
xchg
mov
pushf
mov
or
push
jmp
jle
jg
pop
push
push
mov
cmp
jl
mov
sbb
sub
xchg
inc
and
loope
xchg
loope
je
or
pop
or
push
mov
cdq
pusha
or
(bad)
cdq
cmp
das
add
pop
or
pop
push
or
push
test
movs
pop
add
stos
gs
fdiv
in
in
push
nop
jb
sbb
jo
lods
xchg
or
(bad)
or
test
(bad)
ins
push
and
clc
rcl
outs
jmp
mov
daa
push
add
ret
ins
add
fild
mov
test
add
mov
ds
aad
xor
out
inc
xchg
in
test
mov
enter
lods
or
push
repnz
or
lods
inc
xchg
das
retf
push
fstp
ror
mov
dec
xchg
mov
xor
pop
adc
mov
mov
dec
fiadd
mov
or
loopne
into
dec
add
stc
jg
inc
lods
rcr
outs
fisttp
cmp
xchg
test
addr16
push
bound
out
xor
sub
outs
lock
or
ret
retf
adc
clc
dec
mov
ins
lods
push
or
cdq
dec
and
xchg
cmp
jns
adc
mov
inc
dec
add
inc
clc
mov
dec
jno
outs
dec
xor
shr
or
dec
mov
jo
mov
and
and
and
rcl
sbb
jb
pop
jb
inc
inc
mov
and
dec
pop
cmp
inc
sbb
adc
push
mov
or
nop
pop
cmc
push
jo
add
ins
and
inc
jmp
cmps
adc
out
dec
test
or
(bad)
gs
inc
test
add
or
loop
mov
push
and
and
pop
test
nop
jg
pusha
outs
inc
adc
and
cmps
fimul
sbb
pop
cmp
xlat
jmp
push
inc
imul
mov
or
ja
test
test
jbe
popf
add
movs
sbb
test
lods
ja
test
xchg
daa
mov
push
inc
cld
mov
adc
mov
adc
jmp
ja
cdq
pop
xor
dec
call
sti
out
push
sub
or
pop
and
inc
xchg
add
in
cmp
loope
outs
xchg
xchg
mov
jae
mov
enter
push
pop
pop
sbb
fisubr
xchg
and
mov
and
popf
adc
or
inc
inc
xchg
retf
sbb
in
push
nop
rcl
leave
ja
inc
ret
jno
jmp
jecxz
add
inc
cli
cld
dec
sbb
sub
clc
mov
sbb
adc
and
arpl
mov
add
cmp
push
mov
dec
pusha
lock
cmp
ret
and
popf
shl
mov
lock
cdq
adc
or
les
(bad)
in
or
jno
and
add
xchg
sar
jmp
push
dec
or
jae
adc
jbe
push
inc
test
or
bound
push
push
(bad)
retf
xor
sbb
test
lock
pop
sahf
xchg
or
mov
adc
mov
adc
loop
xor
xchg
test
sub
push
mov
lahf
ret
sbb
sub
and
jns
dec
mov
inc
xchg
sbb
add
(bad)
jbe
jb
dec
push
push
xchg
cs
ret
mov
repz
xor
or
push
push
jno
xor
fnstsw
inc
or
jmp
cmps
mov
aas
dec
or
inc
or
cld
mov
pop
fld
pop
or
add
dec
daa
or
inc
ins
jle
ins
mov
out
or
xchg
inc
add
int3
push
sahf
sub
in
fiadd
retf
sub
aad
mov
fadd
add
ret
inc
cmp
lock
or
xor
mov
in
push
xor
mov
xchg
retf
in
enter
les
cmp
mov
and
cwde
sub
inc
arpl
fld
push
imul
loope
mov
ret
mov
mov
mov
pop
mov
pop
mov
scas
das
loop
vpunpckhwd
jne
inc
outs
or
mov
aas
xchg
mul
mov
cmp
mov
jge
nop
in
repnz
mov
test
fst
mov
lea
cmp
push
lods
push
xor
dec
add
sahf
mov
pop
ret
sbb
sbb
lods
mov
pop
imul
(bad)
mov
dec
or
prefetch
enter
jae
lock
cmp
push
je
or
je
or
fcom
cmp
push
pop
shl
fs
and
xor
sub
not
int3
leave
mov
adc
pop
fisttp
mov
popf
adc
loop
sub
imul
or
retf
and
adc
xor
jge
dec
es
in
imul
mov
push
or
add
ins
je
ja
(bad)
or
add
cmp
jne
inc
sub
xlat
scas
and
and
(bad)
jmp
mov
cmp
jne
cmp
jne
push
ja
jl
in
cmp
inc
xor
rol
rcr
test
or
push
outs
movs
test
cs
in
cmp
push
mov
and
test
push
jo
mov
pop
outs
xchg
cmp
lods
adc
pop
inc
in
test
cmp
push
clc
imul
ja
add
inc
je
jmp
pushf
lock
jle
mov
mov
push
out
xchg
jnp
test
push
data16
add
cmp
jne
xor
jo
js
lea
push
adc
loopne
jbe
jbe
test
push
or
sub
adc
and
(bad)
jle
outs
dec
jecxz
jl
and
outs
jg
in
mov
jmp
mov
pop
je
and
and
popa
pop
or
or
xchg
or
or
mov
dec
fisubr
adc
adc
es
push
sub
jno
mov
jg
cmps
add
adc
sub
lods
mov
(bad)
loopne
into
mov
adc
xchg
xor
sub
jg
repz
inc
mov
gs
jl
cmp
mov
adc
mov
or
ret
push
jae
je
fiadd
and
or
ins
add
xchg
mov
xor
test
pop
les
adc
jo
pop
gs
imul
(bad)
or
fadd
fisub
or
dec
cwde
jge
jecxz
inc
fisttp
shr
adc
and
test
add
aas
add
pop
repnz
jge
lea
xor
ret
mov
mov
call
lods
push
jle
jne
and
sub
pop
jle
dec
cmp
add
adc
mov
push
mov
mov
add
mov
popa
jo
pop
out
bound
imul
push
adc
jmp
dec
or
neg
sub
ret
mov
and
out
js
xchg
out
data16
popf
push
push
rcr
shl
cmp
cwde
retf
cmp
lods
lahf
bound
sbb
in
imul
pop
inc
popa
inc
jo
jae
outs
add
dec
or
mov
(bad)
cmc
pop
mov
add
(bad)
adc
retf
mov
mov
(bad)
movs
leave
iret
cs
adc
je
fucom
jnp
(bad)
pusha
lods
adc
add
sbb
sbb
arpl
into
xor
push
inc
or
ficom
add
ror
call
jae
cmp
test
adc
cmps
nop
fs
push
pop
mov
add
and
xchg
das
mov
or
jne
or
ret
movs
lea
mov
push
cmp
mov
cdq
adc
mov
icebp
or
cld
sbb
or
mov
xor
scas
stc
cmp
dec
jmp
lea
sub
inc
aad
jno
das
ficom
loop
jo
xor
xchg
or
add
add
or
dec
and
dec
or
ss
sti
cmp
fs
xchg
mov
push
rol
and
fisttp
xor
fistp
mov
sub
sbb
int3
jp
sub
mov
sub
inc
loopne
pop
mov
sbb
shl
push
push
add
test
push
sahf
xchg
or
cmp
sub
mov
movs
pop
adc
adc
sbb
sub
sbb
ret
mov
stos
cwde
or
sahf
add
into
in
sbb
or
cmp
and
imul
hlt
push
nop
data16
fimul
dec
ficomp
xor
and
(bad)
fsubrp
sbb
and
ror
xchg
or
mov
push
lods
adc
or
pop
mov
mov
xor
ins
pushf
jne
mov
jbe
loopne
test
add
inc
jg
js
sahf
out
ins
push
jbe
ja
jbe
int
es
repz
lods
mov
mov
bound
push
cmp
sub
rcl
dec
push
in
loope
pop
movs
jg
sub
mov
cmp
add
xchg
mov
mov
xor
xchg
popf
aam
jns
mov
xchg
clc
or
lock
jns
les
(bad)
icebp
jecxz
lea
test
push
cdq
repnz
xor
icebp
dec
cld
xor
adc
cdq
loopne
inc
inc
cmp
adc
pop
in
mov
cmp
add
lea
in
adc
rcl
sub
jmp
inc
jecxz
mov
adc
push
test
inc
inc
jmp
shl
and
push
add
dec
jns
adc
inc
push
pop
fcom
and
lea
mov
mov
lds
cmps
adc
retf
scas
and
jb
es
ds
push
dec
jl
(bad)
push
ror
and
xor
mov
pop
cld
add
call
push
into
lods
jne
icebp
or
cmp
pop
and
arpl
shl
sbb
pop
and
cmps
dec
ss
sbb
and
rcl
cmp
test
push
data16
cli
dec
pushf
mov
mov
xor
je
pop
jl
dec
fwait
fwait
push
sub
sbb
sbb
jl
outs
inc
pop
ror
inc
sar
add
stos
mov
mov
mov
pushaw
pop
jne
out
in
xchg
push
adc
add
clc
xchg
and
(bad)
test
push
test
or
adc
lea
sub
or
pop
mov
xchg
sbb
and
adc
imul
cs
jae
mov
mov
adc
pop
mov
je
in
pop
xchg
add
ds
push
pop
bound
cmps
jo
add
mov
push
lods
jl
cmp
pop
icebp
push
mov
or
push
sub
js
cmp
and
stc
test
jb
fnstenv
fmul
mov
das
xchg
retf
in
hlt
fdivr
or
mov
popf
jne
jmp
popf
mov
inc
dec
pop
(bad)
mov
nop
clc
enter
push
xor
pushf
xchg
out
shr
in
jg
adc
or
pop
add
mov
es
sti
cmp
inc
loopne
cmp
shr
and
pop
mov
push
aas
es
test
out
aam
or
scas
sar
jmp
xchg
adc
ret
enter
retf
in
fst
add
cmp
or
adc
nop
stc
inc
loopne
pop
xchg
mov
sbb
je
lods
shl
push
sahf
mov
mov
(bad)
sub
add
es
adc
and
hlt
stc
lods
xchg
mov
push
or
inc
dec
cmp
outs
mov
iret
clc
sti
loope
ins
jne
loope
movs
dec
pusha
sub
xlat
scas
sbb
pop
and
dec
sbb
add
sbb
mov
xor
pop
dec
sbb
push
test
cs
cs
and
jo
dec
adc
mov
mov
push
lea
cmp
fwait
xor
sahf
dec
hlt
das
add
sbb
jle
cwde
mul
int
and
lods
add
add
es
inc
movs
hlt
add
dec
hlt
(bad)
out
dec
cmps
sbb
adc
and
push
arpl
xor
adc
test
pop
das
mov
sti
mov
outs
movs
mov
in
(bad)
and
xor
jo
es
mov
mov
mov
loope
loop
ja
adc
mov
jne
inc
mov
ins
cmp
mov
mov
retf
cmc
pushf
sub
mov
add
test
ret
jne
mov
test
loopne
cmp
movs
in
pop
sub
test
loop
out
jmp
mov
mov
or
cld
sti
xor
das
jmp
call
mov
inc
(bad)
mov
dec
jmp
push
jmp
lock
sbb
jns
push
test
xchg
sbb
dec
fwait
mov
mov
clc
add
cmp
(bad)
mov
push
mov
ins
sub
movs
(bad)
ficomp
mov
shl
cmp
test
sti
call
jns
sti
nop
sbb
sbb
cmps
push
movs
stos
cli
lea
push
mov
mov
push
cmp
pop
add
xchg
iret
hlt
sti
hlt
sti
aaa
mov
mov
push
(bad)
sti
or
push
hlt
sti
nop
sti
xchg
loopne
movs
sbb
out
mov
leave
pop
xor
pop
xchg
pop
clc
sti
hlt
sti
rol
inc
mov
enter
sti
clc
sti
scas
je
jb
sti
mov
xchg
pop
xchg
jmp
imul
push
pop
push
inc
push
dec
mov
ins
shl
pop
data16
push
sub
adc
cmp
into
xor
cmp
daa
dec
loopne
dec
xchg
out
loopne
sbb
adc
in
push
mov
add
clc
sti
repnz
sbb
jnp
hlt
sti
imul
push
push
mov
out
pushf
adc
sbb
inc
repnz
mov
mov
popf
test
test
sti
pop
aas
in
mov
push
shl
lock
mov
xchg
add
xor
cmp
mov
es
mov
mov
jne
sub
mov
adc
pop
mov
push
call
dec
add
sub
cmp
add
push
cmp
mov
mov
cmp
or
in
or
and
dec
adc
or
inc
pop
xchg
xor
jmp
mov
sub
lahf
retf
pop
loope
xor
inc
das
adc
add
pusha
mov
xor
or
cmp
lahf
loop
aam
test
mov
or
add
rol
push
push
dec
stc
xor
jle
dec
xor
xchg
fst
add
mov
cs
jmp
jge
push
xchg
inc
mov
lock
mov
out
sti
xor
jb
gs
je
cld
mov
(bad)
sti
(bad)
sti
xchg
xor
ret
mov
or
push
push
mov
and
xor
test
shl
cmp
push
movs
add
clc
jns
ins
sahf
in
mov
xchg
arpl
mov
mov
adc
enter
loope
fsub
push
push
pop
cld
cmp
in
movs
les
push
retf
in
int3
mov
outs
fs
fadd
ins
jp
and
es
mov
ror
les
lock
pusha
les
cmp
je
mov
pop
and
or
ret
(bad)
js
pop
cmc
push
inc
push
stos
cmp
sub
pop
inc
dec
in
pop
mov
inc
inc
sbb
dec
mov
mov
adc
sbb
movs
fild
inc
or
enter
scas
xchg
inc
imul
cmp
call
sti
imul
add
sub
cwde
adc
sub
ds
push
push
dec
call
xor
hlt
rol
sub
sbb
cmp
jne
push
mov
pop
aas
jmp
adc
outs
jo
jmp
xchg
dec
stc
jb
dec
adc
inc
add
sbb
sbb
aam
sub
cmp
imul
mov
and
(bad)
xchg
stos
fst
cmc
ds
out
push
inc
add
popa
mov
or
push
jne
jmp
inc
adc
icebp
pop
imul
mov
push
or
xor
cwde
ret
mov
lds
mov
cmp
imul
stos
push
pop
inc
test
movs
sti
jo
jge
aas
sbb
dec
or
adc
enter
xor
sub
or
push
dec
pop
js
push
push
lock
in
icebp
xor
sbb
pushf
sub
adc
mov
data16
and
and
arpl
jnp
or
hlt
int
pop
adc
test
mov
int
sti
pop
lea
out
and
das
mov
add
scas
movs
dec
jmp
sbb
sub
lea
mov
pop
mov
sbb
push
ins
or
cmp
pop
and
adc
add
inc
xlat
imul
mov
xchg
fdiv
push
and
push
lea
jmp
add
adc
xor
movs
mov
cmp
jo
adc
jle
xor
lock
pop
jmp
cmc
xchg
sbb
xor
out
adc
add
push
leave
and
and
and
leave
call
popa
outs
inc
or
mov
or
or
or
xor
xlat
fsub
cwde
xor
jns
or
add
call
jmp
mov
or
punpcklbw
scas
idiv
add
add
push
out
add
inc
jne
movs
inc
shr
pop
cmp
add
mov
or
adc
cmp
dec
or
shl
inc
push
outs
cwde
cmc
mov
(bad)
sti
ss
mov
or
nop
push
sbb
push
mov
cmp
mov
and
push
jmp
pop
fld
sbb
push
push
push
push
mov
cmp
inc
cmp
mov
inc
inc
cmp
xor
pop
cmp
push
push
adc
push
sbb
jns
push
pushf
jmp
ins
pop
push
jg
shl
hlt
or
cwde
clc
imul
add
or
data16
hlt
scas
dec
outs
push
pop
jnp
mov
or
push
das
sbb
es
dec
aaa
enter
dec
add
jp
cld
push
cmp
and
ins
int
and
push
jle
jge
loopne
ins
mov
push
repnz
jle
adc
popf
jmp
or
out
xchg
ss
dec
or
int3
or
sbb
push
sbb
push
adc
push
shrd
adc
movs
jne
push
clc
outs
mov
lods
retf
and
idiv
sbb
cwde
dec
daa
aas
inc
add
adc
push
mov
cmp
jnp
adc
add
pop
mov
pop
push
fldcw
sbb
(bad)
sub
push
in
sbb
fs
call
pop
mov
fidiv
mov
push
imul
adc
sbb
xor
sbb
cmp
movs
fsubr
or
repz
mov
jmp
cmp
dec
cmp
and
sbb
cmc
dec
mov
sub
out
inc
add
push
jbe
jae
cmp
or
xchg
jp
gs
mov
jp
mov
ins
add
lea
inc
cmp
icebp
xchg
push
hlt
fisub
pop
sub
pop
sub
and
jo
jg
and
adc
mov
dec
ret
and
shr
sub
pop
enter
xchg
aas
push
mov
faddp
test
je
sub
retf
push
cmp
pop
sahf
lods
dec
int
shl
and
sub
pop
data16
push
shl
pop
jmp
inc
cmp
daa
push
and
pushf
or
nop
loop
jmp
rcr
or
mov
hlt
sub
test
ret
das
test
dec
and
add
xchg
push
daa
jge
inc
xchg
pushf
sbb
sub
frstor
pop
sbb
cmp
clc
ins
inc
adc
push
lahf
ret
aaa
jg
in
adc
mov
icebp
sub
es
push
xchg
pop
mov
add
push
loopne
or
cmp
js
mov
inc
mov
or
push
pop
test
aaa
ret
movs
push
or
adc
mov
inc
cwde
mov
loope
test
test
gs
cmp
sbb
add
adc
movs
inc
aaa
push
pop
ret
nop
call
mov
sub
jle
adc
or
or
test
adc
or
jb
inc
cs
adc
sar
or
stos
fs
dec
mov
cld
icebp
mov
mov
retf
cmp
xlat
cmp
inc
shl
push
xor
dec
test
pushf
(bad)
addr16
adc
cmp
and
pop
xchg
push
push
inc
lock
inc
mul
ret
icebp
jg
lods
sub
sub
pushf
test
and
pushf
(bad)
or
out
mov
adc
das
push
inc
or
sub
xor
pop
or
push
fs
imul
adc
sbb
cmps
(bad)
test
adc
adc
pusha
arpl
loopne
pop
fs
lahf
and
jp
jmp
ret
sbb
je
or
test
(bad)
jnp
int
adc
(bad)
arpl
mov
lea
xor
out
mov
push
mov
mov
js
dec
and
xchg
fucomi
ins
inc
xor
xor
out
imul
and
or
push
outs
je
outs
pop
sti
out
je
pop
jne
jmp
mov
push
rcr
or
ja
sub
and
adc
mov
sub
sub
dec
sub
sbb
adc
mov
out
add
cmp
push
imul
call
je
mov
cmp
adc
fnstenv
adc
and
sbb
push
or
icebp
xor
popa
mov
mov
inc
push
sub
xchg
pop
mov
jne
loop
dec
mov
shl
setl
(bad)
mov
inc
fisttp
call
push
dec
shl
adc
mov
imul
cmps
in
adc
or
xchg
retf
xchg
add
adc
push
jle
fs
or
mov
add
int3
loop
add
add
pop
pusha
mov
into
sub
jge
mov
push
add
sbb
xchg
data16
pop
sub
mov
jmp
sub
jne
bound
xor
int
and
jg
sub
mov
data16
aas
fisttp
mov
or
out
fcomp
mov
mov
add
and
sbb
repz
mov
cmp
mov
mov
rol
fsubr
dec
dec
ror
pop
les
or
ret
mov
sub
or
mov
push
pop
add
sbb
inc
push
dec
add
daa
std
add
and
inc
and
fmul
sahf
mov
(bad)
mov
or
push
ins
aaa
add
adc
pop
rol
jb
sbb
dec
pop
adc
or
jo
add
sbb
push
cmp
pop
mov
jns
loope
cmp
fimul
je
gs
mov
xchg
dec
fistp
ror
xchg
push
pop
clc
adc
imul
pushf
push
int3
adc
pop
nop
and
cmp
inc
or
sub
fwait
popa
sub
adc
push
pushf
ficom
shr
push
icebp
dec
jne
and
jl
or
push
adc
jne
push
sub
adc
dec
test
pop
pop
ret
fdiv
mov
add
fdiv
iret
test
cmp
mov
fdiv
push
fldenv
xor
pop
daa
xor
mov
stos
(bad)
and
jb
call
and
test
iret
ret
push
push
dec
push
aas
sub
adc
gs
cmp
add
mov
xor
mov
xchg
jo
mov
add
inc
dec
and
lock
cmp
cwde
add
cmp
stos
dec
icebp
or
push
cmp
add
lds
stc
pop
loopne
sub
mov
cmp
out
xchg
sbb
adc
inc
cmp
imul
mov
pop
je
inc
cmp
lock
mov
sar
pop
sub
jae
mov
imul
rcl
hlt
mov
shl
test
xor
or
inc
jbe
sub
or
jge
ror
adc
adc
sar
ret
test
je
icebp
dec
cdq
mov
mov
das
xchg
test
movs
lds
push
cwde
or
jecxz
mov
aad
les
cmp
dec
cmp
je
es
inc
push
adc
(bad)
sbb
push
lea
pushf
mov
addr16
xchg
push
mov
jp
push
pop
add
fistp
jmp
mov
popa
jg
add
js
jg
mov
sahf
sub
inc
or
jmp
cmp
dec
push
cs
arpl
inc
add
call
lea
cs
les
and
sbb
or
add
mov
test
add
outs
xor
imul
ficom
loop
xchg
shl
cmp
(bad)
lds
xor
dec
sbb
shl
mov
pop
fcom
fcom
dec
das
or
inc
xchg
cmp
pop
sub
add
push
movs
or
cs
fiadd
xor
mov
cmps
adc
or
and
adc
sbb
scas
and
fadd
add
ret
and
mov
iret
leave
test
cmp
(bad)
mul
outs
jmp
adc
cmp
daa
pop
shl
or
dec
add
adc
mov
stos
or
xchg
popf
lahf
pusha
inc
dec
jo
daa
dec
movs
pop
and
xchg
add
lods
and
sbb
aas
pop
rcr
add
mov
push
call
jmp
ds
dec
mov
jmp
cmp
mov
jo
push
cmps
push
nop
and
xchg
pop
loopne
(bad)
daa
js
fstp
leave
jno
sub
mov
cmp
sub
fadd
ds
cmp
mov
lds
in
push
lods
lock
cli
xor
inc
xor
ins
or
sbb
loope
icebp
jae
jbe
daa
add
imul
ja
jno
sub
xlat
and
mov
lods
jne
sub
add
imul
sub
jecxz
mov
and
ds
aam
mov
mov
or
mov
mov
(bad)
stos
in
and
and
bound
call
mov
and
inc
adc
add
fld
(bad)
ror
jle
or
scas
mov
mov
daa
stos
fmul
mov
add
sub
xchg
add
inc
js
punpckhdq
mov
sub
fsub
clc
cmp
jmp
fs
ins
adc
cmp
retf
xchg
sub
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
cmp
mov
mov
jbe
add
xor
pop
shl
pop
push
sbb
push
sub
dec
push
push
jo
daa
in
push
es
sbb
mov
mov
mov
add
add
push
add
jge
push
imul
xor
mov
mov
jmp
(bad)
ficom
dec
or
jmp
push
add
push
and
clc
mov
sbb
sub
mov
pop
push
shr
retf
dec
rcl
adc
inc
push
lea
jg
and
dec
mov
retf
xor
call
mov
push
stos
add
cmovo
cmp
fnstsw
push
inc
and
neg
icebp
sub
inc
push
pop
mov
je
dec
xor
push
jne
je
or
mov
push
add
test
xchg
and
mov
sti
lea
mov
addr16
cmp
dec
daa
rol
xor
in
nop
pusha
pusha
sbb
sbb
jmp
cmp
inc
aas
mov
push
cmps
mov
(bad)
mov
xchg
xchg
imul
mov
lds
mov
adc
sbb
mov
add
pop
or
leave
push
inc
xor
jmp
jb
in
repz
mov
data16
das
pop
or
mov
outs
dec
or
lea
popf
in
xchg
dec
addr16
clc
hlt
sub
les
mov
mov
imul
mov
cmp
sbb
or
fwait
mov
les
je
loopne
je
call
sti
in
int
cmp
jae
inc
ret
mov
pop
mov
and
sub
xor
rol
pop
lock
and
(bad)
or
xchg
leave
mov
retf
xchg
clc
fnstcw
loope
dec
xor
(bad)
je
into
adc
ret
add
push
jns
jecxz
xchg
mov
xor
sub
mov
push
mov
add
jmp
jle
adc
mov
dec
cwde
lea
xor
xchg
daa
pop
jb
scas
and
jne
(bad)
mov
loopne
icebp
mov
push
jb
inc
int3
fistp
ins
jne
or
(bad)
mov
mov
sub
mov
jg
add
cmp
(bad)
dec
sub
xor
movs
fdivr
push
cmp
xor
and
dec
dec
call
aaa
xchg
sbb
xor
pop
sahf
xchg
mov
pop
sub
shl
xchg
out
test
ret
aaa
jno
loop
pop
lea
sbb
sbb
mov
and
dec
leave
dec
in
push
mov
mov
inc
sub
popf
in
cld
mov
stc
(bad)
jle
gs
mov
cld
xchg
add
push
xchg
add
hlt
jo
add
add
sub
mov
adc
mov
add
dec
daa
jno
xchg
aas
sar
mov
add
nop
addr16
and
es
and
and
rol
in
es
js
add
in
pop
add
test
fwait
pop
adc
addr16
aaa
(bad)
mov
fimul
cld
and
xor
mov
jne
dec
and
jmp
js
lods
pop
outs
loop
loop
push
lea
cmp
fs
scas
clc
add
es
inc
mov
pop
jb
out
popf
in
popf
and
nop
pushf
jecxz
push
dec
sub
xor
fild
aad
fmul
inc
pop
push
or
xor
outs
ret
pop
dec
jnp
movs
jb
ror
pushf
into
lods
loopne
cdq
nop
inc
jl
dec
lods
call
rcl
dec
xchg
jmp
sbb
inc
push
stc
xor
bound
in
es
pop
pop
aaa
mov
add
jae
xchg
mov
nop
inc
cs
pop
push
dec
push
nop
(bad)
test
ror
dec
mov
sub
rol
cdq
and
and
dec
push
fcomp
loopne
nop
pop
enter
fmul
cdq
add
or
mov
in
in
aam
and
aam
push
jns
mov
mov
inc
dec
test
int
adc
test
mov
loope
sbb
(bad)
mov
dec
rcl
mov
pop
adc
cmc
or
adc
outs
and
ds
das
xchg
mov
push
mov
add
out
mov
sbb
les
(bad)
pop
inc
add
ret
sub
mov
and
clc
add
xchg
push
push
(bad)
adc
dec
push
lahf
aam
and
addr16
call
or
or
xor
xor
dec
push
adc
adc
jbe
nop
sbb
ss
push
push
cs
fwait
sub
and
and
push
nop
mov
xor
(bad)
sub
ins
dec
fisubr
sub
sbb
sbb
xor
ror
inc
cmp
xor
inc
ror
inc
dec
dec
dec
and
xchg
xor
push
dec
ror
xor
dec
int
xor
pop
dec
pusha
dec
or
xor
dec
push
cmp
xor
xor
ror
cmp
cmp
sbb
pop
pop
inc
sub
aas
jbe
xchg
retf
mov
inc
mov
nop
inc
xchg
inc
jb
xchg
inc
cwde
sub
mov
dec
xchg
xor
xor
push
cdq
in
mov
add
mov
sub
cmp
dec
mov
sub
xor
xor
ja
inc
cs
int3
mov
xor
and
mov
nop
pop
scas
fsubr
loopne
jb
xchg
sub
sub
cs
das
xchg
and
inc
scas
in
and
inc
clc
dec
mov
cld
sub
jb
add
dec
gs
mov
dec
or
jb
fimul
adc
out
dec
cs
sbb
push
cwde
imul
xor
repz
fistp
repnz
leave
cmp
popa
cmp
fist
mov
xor
retf
nop
cmp
inc
dec
cs
jb
inc
inc
in
xchg
out
dec
popa
inc
dec
sub
xchg
sub
mov
push
pop
pop
add
das
pop
and
scas
cmp
(bad)
pusha
xor
inc
inc
loop
fwait
cmp
(bad)
sub
mov
cmp
push
or
in
in
adc
xchg
xchg
fld
sbb
xchg
xchg
xchg
xchg
sub
xor
ss
push
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
mov
sub
test
leave
and
mov
xchg
cwde
pushf
es
dec
xor
es
rol
xor
shl
xchg
mov
dec
es
loopne
call
in
aam
daa
cdq
fs
hlt
clc
cld
add
sbb
leave
and
fidiv
adc
cdq
sbb
dec
es
fs
sub
cdq
fs
xor
cmp
cdq
or
inc
dec
dec
xor
inc
dec
mov
xor
and
pop
pop
pusha
push
pop
mov
push
mov
js
push
mov
and
jmp
sbb
fist
test
ret
js
add
push
fwait
sbb
fiadd
dec
test
popf
and
xchg
jle
sub
fdivr
inc
adc
repnz
and
in
push
cs
(bad)
sbb
cmp
dec
sbb
inc
xor
sub
adc
and
fild
pop
or
bound
dec
lahf
mov
mov
int3
sti
push
rep
fstp
mov
pop
mov
ror
mov
mov
retf
push
dec
dec
cld
sbb
push
pushf
ja
ficomp
movzx
inc
fld
sbb
cmps
mov
fmul
daa
or
adc
mov
jl
sub
adc
rcpps
psubd
or
retf
movs
jmp
add
jns
inc
adc
or
jmp
inc
retf
and
inc
lock
cmp
pop
or
popa
mov
call
(bad)
or
mov
xor
add
mov
cld
push
inc
ret
dec
rcl
add
adc
push
sbb
scas
cmps
jmp
sub
dec
or
jge
mov
or
scas
ret
sbb
jb
in
out
xchg
hlt
adc
clc
adc
mov
leave
cld
sbb
add
pop
cs
and
cmp
leave
in
retf
cmp
inc
sub
jb
sub
dec
xor
dec
cs
dec
xor
push
mov
sbb
pop
inc
das
test
loope
std
ja
inc
inc
rol
loopne
sbb
call
mov
rol
push
hlt
stos
cmp
or
mov
xchg
ss
mov
es
pop
add
mov
nop
mov
imul
and
and
sub
jbe
cmp
xor
mov
cdq
sub
push
mov
movs
push
sub
dec
push
cs
das
xchg
stos
and
cmp
mov
es
or
pop
dec
and
push
dec
push
mov
and
movs
test
mov
enter
and
mov
rcr
arpl
xchg
ins
or
dec
add
pop
fdiv
mov
xor
inc
mov
cmp
mov
hlt
sbb
sbb
mov
imul
mov
int3
xor
mov
adc
mov
test
push
and
cmp
mov
nop
fisubr
(bad)
push
sbb
retf
(bad)
sbb
adc
jl
push
into
mov
sti
fisub
sahf
jmp
xchg
sub
out
iret
add
push
mov
jp
adc
je
cmp
pusha
or
xor
lock
or
fbstp
int3
fst
add
pushf
xchg
sar
clc
or
mov
pop
ret
ret
mov
inc
xor
je
les
popa
ins
add
out
popa
sbb
sub
jecxz
loop
jno
jne
mov
scas
pop
jne
pop
sub
pcmpeqw
pop
imul
jmp
jp
or
sub
jbe
inc
mov
retf
or
jo
mov
ds
sbb
push
xor
sub
mov
out
test
xor
inc
push
push
cmp
arpl
xchg
xchg
jle
push
add
fdiv
and
jg
sar
lea
inc
ja
or
out
cdq
or
cmp
ds
movs
inc
add
sub
cmp
dec
dec
pop
ret
push
rcr
xchg
scas
popa
inc
dec
call
(bad)
and
mov
dec
cwde
sbb
enter
das
xor
and
ja
xchg
xchg
ret
cwde
movs
jae
fild
out
push
mov
push
dec
fwait
inc
daa
add
sbb
call
ret
icebp
jle
cmp
retf
ror
jmp
outs
ins
pop
inc
lahf
inc
cmp
ja
cmp
mov
or
mov
mov
je
rcl
sub
push
mov
mov
inc
mov
jl
pop
jle
and
test
popa
cmp
test
mov
inc
rcr
mov
pop
mov
xlat
cdq
rol
nop
mov
in
js
call
cmp
sbb
add
aam
lea
sub
sbb
(bad)
cmps
jmp
push
push
xchg
cwde
adc
mov
cmp
or
repz
ja
rol
dec
mov
inc
adc
xor
pop
push
push
(bad)
jb
or
xor
test
cmp
jmp
sub
dec
xor
popa
daa
push
(bad)
add
aad
mov
add
mov
mov
mov
adc
inc
sbb
push
data16
push
pusha
ins
jo
pop
or
fadd
ret
adc
nop
add
ss
and
lods
add
dec
adc
add
popa
aas
pop
shl
sub
push
(bad)
fisubr
jmp
cmp
(bad)
sbb
sbb
xchg
jb
sbb
jne
jno
xchg
dec
adc
or
lods
or
sub
fs
push
adc
and
mov
mov
or
rol
or
push
xor
xchg
sar
and
test
xor
cmp
outs
mov
shl
mov
inc
sbb
mov
push
into
pop
ds
xbegin
cwde
mov
sbb
push
sbb
pushf
ret
hlt
dec
and
movs
sub
retf
and
inc
cmps
push
and
mov
ins
xchg
cmp
xor
sbb
xor
repnz
rcr
sub
je
push
pop
xor
jp
sbb
mov
inc
xlat
dec
ins
mov
sbb
lock
fsub
pop
lock
in
and
xor
rcl
and
mov
ret
movs
pusha
pop
or
ucomiss
neg
mov
inc
dec
sbb
pop
inc
bnd
inc
ret
int
xchg
adc
loopne
add
mov
inc
add
paddd
into
cmp
dec
fdivr
fsubr
pop
dec
ins
inc
mov
je
mov
jl
aam
into
mov
(bad)
add
movs
popa
je
inc
addr16
push
mov
adc
(bad)
pushf
push
adc
add
pop
pop
push
add
(bad)
sti
shl
push
xchg
xchg
dec
fidivr
jo
push
add
cmp
sub
mov
mov
inc
ror
sbb
push
das
test
xchg
test
dec
mov
lods
(bad)
mov
and
or
retf
fiadd
push
ins
retf
mov
push
retf
mov
(bad)
in
dec
mov
sbb
inc
mov
sbb
or
loopne
ret
push
jo
lods
add
push
mov
push
mov
scas
outs
jp
into
call
push
xor
push
sbb
pop
sbb
xchg
retf
add
and
adc
and
pop
std
addr16
mov
cld
mov
push
mov
adc
test
push
adc
loope
clc
jmp
cmp
jmp
jg
xor
and
xor
dec
mov
pop
mov
outs
dec
sbb
adc
xchg
icebp
xchg
mov
mov
test
in
lahf
cmp
sahf
stc
fnstenv
add
retf
cwde
nop
sbb
pop
jmp
push
or
fadd
xor
arpl
and
nop
mov
ret
xor
gs
sub
adc
push
ret
inc
adc
xor
stos
push
mov
inc
popa
loopne
call
ret
leave
jne
cmp
iret
pop
(bad)
push
fisttp
rol
test
jl
iret
jns
dec
js
adc
pop
push
push
or
pop
push
clc
movs
test
sub
loop
and
xchg
and
movs
pushf
mov
mov
push
lock
psadbw
fidiv
sub
adc
add
jb
xor
mov
out
loopne
lock
add
pop
or
imul
xchg
enter
mov
xor
dec
dec
leave
lock
xchg
add
out
out
xchg
add
add
add
leave
daa
test
jns
iret
pop
scas
movs
call
pushf
dec
call
add
(bad)
push
or
xchg
add
out
push
repnz
inc
out
out
out
jns
cmp
out
out
fs
cmp
adc
cmp
aaa
or
lea
mov
xchg
mov
nop
mov
loopne
sbb
mov
dec
inc
es
cmps
inc
scas
movs
in
jno
in
cmp
in
add
in
movs
jb
sbb
and
add
xchg
addr16
sub
sbb
adc
or
inc
leave
add
movs
dec
bound
in
out
fmul
sub
retf
stc
mov
push
call
and
or
pop
sbb
xchg
nop
mov
dec
lods
loope
add
pusha
jp
lea
jb
pop
mov
test
leave
loope
pop
loop
mov
cmp
xor
stos
in
adc
cmp
jno
push
pop
inc
dec
in
jb
or
jb
cwde
xchg
or
or
cwde
and
mov
test
pushf
sub
nop
xchg
or
stos
add
mov
inc
inc
mov
fmul
and
or
or
add
das
fldcw
pop
fdivp
push
fsubr
frstor
arpl
sahf
out
enter
fisttp
cwde
dec
mov
ret
push
adc
or
inc
cmp
(bad)
mov
rcr
push
test
repz
lea
sahf
retf
(bad)
adc
mov
fisttp
cmp
fcmovnu
repz
jmp
std
push
push
in
xor
adc
invd
jbe
dec
and
cmps
test
adc
or
sub
mov
mov
mov
iret
pop
cmp
jns
in
pop
add
cmp
sahf
retf
jae
movs
lods
or
mov
xor
adc
retf
cmp
ret
call
dec
jl
inc
loopne
push
clc
xchg
mov
jmp
sar
nop
inc
aas
inc
add
mov
sar
dec
cld
xor
xlat
ins
ins
aaa
mov
push
push
and
add
xchg
mov
xor
ret
ret
test
leave
xor
mov
repz
inc
stos
mov
jo
rol
pop
cmp
or
test
push
cmp
lea
mov
lea
jo
nop
xor
in
call
sbb
ins
mov
dec
(bad)
add
xchg
or
mov
cmp
pop
xchg
push
mov
cmp
jne
dec
push
mov
ffreep
jmp
adc
mov
or
push
push
pop
pop
pop
pop
pop
inc
add
xchg
rcl
enter
test
or
mov
in
or
out
dec
mov
or
gs
sbb
shl
aad
cld
sbb
cmp
inc
push
push
data16
xchg
and
add
push
jae
je
sbb
jle
xor
cli
adc
(bad)
lea
or
outs
int3
mov
or
inc
ins
mov
sbb
je
pop
dec
sar
or
push
mov
stos
jo
sbb
dec
dec
and
push
add
sub
pop
jo
(bad)
push
loop
mov
cmp
pop
mov
inc
pop
pop
lock
cmp
icebp
mov
xor
out
sbb
push
sub
mov
dec
enter
movs
shl
adc
inc
add
pop
daa
or
mov
push
fcmovb
icebp
push
mov
add
or
add
div
sbb
push
imul
xchg
adc
xchg
movs
fimul
push
popa
jl
imul
cmp
jp
aam
and
shl
pop
(bad)
push
add
push
and
sub
push
pop
sub
movs
(bad)
jne
pop
test
push
sbb
fisttp
out
or
or
sbb
dec
and
cmp
inc
adc
cmp
or
pop
movsx
je
push
mov
div
pop
imul
es
mov
add
inc
lods
mov
sbb
inc
or
add
mov
or
xchg
inc
pop
xor
xor
push
clc
mov
and
shl
push
shr
test
and
xchg
ja
mov
out
add
mov
adc
adc
dec
or
xchg
jne
les
mov
(bad)
mov
int
adc
icebp
test
(bad)
cmc
mov
jbe
jne
ja
pop
ins
js
ss
push
in
dec
jne
pop
push
pop
push
pop
pop
pop
adc
dec
or
cmp
xchg
js
dec
lods
and
sbb
mov
push
test
add
sub
sbb
sbb
sbb
dec
push
jmp
push
xor
push
push
or
jno
sbb
or
and
(bad)
(bad)
pop
mov
hlt
mov
jl
js
je
xor
mov
mov
push
mov
pop
call
test
push
jl
dec
adc
add
(bad)
rcl
cmp
sub
inc
les
js
xor
rcl
and
fst
pop
sahf
dec
push
pop
loope
and
shl
and
ja
dec
div
push
loopne
sub
cwde
mov
sbb
jmp
dec
rcr
add
xchg
push
aam
jb
loop
or
rol
sbb
ds
dec
shl
xchg
or
icebp
adc
fcmovnu
mov
push
sub
push
push
sub
add
adc
push
xor
dec
pushf
je
mov
xchg
outs
js
je
fwait
ins
(bad)
fcom
in
movs
and
mov
inc
fiadd
or
jmp
mov
and
push
and
or
xchg
imul
push
add
nop
dec
in
sbb
add
or
pusha
fnsave
xchg
jmp
rcl
pop
gs
outs
out
push
ror
ins
adc
ins
ja
jno
add
lea
or
in
lea
repnz
adc
mov
(bad)
pop
or
add
sbb
sti
push
fadd
push
mov
bndldx
xchg
sbb
xchg
movs
add
(bad)
bound
into
pop
dec
sbb
rol
(bad)
sar
add
jmp
(bad)
jmp
dec
dec
add
inc
and
jns
or
xor
add
pop
imul
mov
jo
daa
call
jne
xor
stc
loop
dec
jmp
inc
pop
sbb
and
out
add
or
xchg
adc
and
add
pop
jl
dec
lock
add
test
js
inc
mov
sahf
push
cmp
adc
aam
fidivr
add
clc
jb
dec
push
or
mov
aaa
push
sbb
movsx
add
sub
push
ret
inc
jne
jmp
xchg
(bad)
adc
xor
and
sub
push
mov
push
and
add
inc
sub
pusha
sub
sub
sub
test
add
or
test
mov
jae
pop
and
xor
lahf
and
fcmovb
dec
in
pop
cmp
add
adc
aam
shl
push
adc
(bad)
jae
inc
xchg
pusha
nop
mov
jmp
mov
or
sub
lea
push
mov
test
sbb
pusha
loopne
adc
adc
rol
mov
push
mov
(bad)
call
stos
cmp
lahf
add
or
or
add
inc
call
mov
jb
sub
pop
and
xor
adc
and
(bad)
ret
dec
pushf
jae
pop
test
xor
jne
mov
mov
sbb
inc
test
push
or
dec
sub
sar
push
pop
adc
add
xor
inc
mul
ins
pop
fs
add
ret
add
add
add
cmovo
arpl
xor
daa
sub
fwait
lea
jne
xor
mov
jo
popa
(bad)
fist
out
(bad)
pop
outs
adc
cmp
mov
lods
nop
pop
cmc
ins
call
js
std
push
adc
and
cmp
je
cmp
fmul
cmp
push
add
jo
mov
sbb
mov
dec
ret
lock
movs
xor
ds
aaa
and
add
sub
les
gs
and
lods
mov
rol
fsub
or
outs
pop
add
sbb
dec
aam
pop
into
sbb
test
cmp
pop
and
xchg
xor
out
inc
push
pop
push
ret
and
movs
movs
pop
pop
test
xchg
pop
fwait
inc
jbe
xor
push
jbe
mov
enter
xor
and
inc
or
jp
push
adc
mov
lea
pop
add
inc
mov
adc
test
int
pop
cmp
dec
sbb
xlat
adc
xchg
adc
ret
push
push
inc
jmp
sub
or
lea
xchg
push
add
pop
test
push
push
sub
sbb
rcl
rcl
mov
inc
cmp
(bad)
je
or
jne
dec
jns
or
xchg
dec
(bad)
jns
test
je
pop
dec
addr16
add
adc
lock
or
aas
movs
adc
dec
mov
push
inc
cs
je
add
cmp
jo
int3
mov
and
and
or
inc
in
ffreep
shr
jmp
dec
popa
push
pop
jle
and
loope
pop
cmp
sbb
(bad)
xlat
test
lods
sbb
mov
or
adc
pop
dec
pusha
sbb
add
or
test
fld
mov
or
mov
sub
movs
inc
adc
cmp
popa
dec
test
adc
jo
inc
add
jnp
push
push
clc
int3
xor
out
xor
dec
pop
sub
and
and
jae
xchg
xchg
movs
(bad)
mov
jae
lea
or
cmpxchg
stos
xor
mov
lfs
or
mov
dec
pop
hlt
sbb
mov
inc
sbb
xor
icebp
loopne
(bad)
dec
lock
push
je
hlt
outs
pop
ret
clc
(bad)
push
sub
lea
and
retf
or
fcom
outs
xchg
out
adc
jbe
pop
hlt
cmps
inc
push
push
pop
push
int
rol
clc
aad
sti
jg
nop
out
sbb
cmp
aaa
mov
mov
lock
dec
lock
sbb
pop
loope
jg
mov
xor
xor
push
out
sbb
jb
push
push
pop
dec
out
push
or
add
icebp
shl
cld
add
mov
out
push
push
jge
mov
add
push
add
and
xor
and
nop
loopne
add
xor
aas
cmp
or
add
das
ror
and
into
sub
shl
mov
lds
add
xor
jb
clc
jmp
fbstp
pop
pop
dec
push
push
jnp
ss
or
or
add
test
mov
sbb
popa
neg
jp
cs
bound
xor
jns
push
mov
sbb
add
jno
sbb
adc
ud0
clc
sub
jl
aaa
and
add
sub
dec
and
mov
jno
mov
cwde
bound
pop
inc
jmp
jl
imul
push
dec
adc
adc
xor
ja
sub
mov
jne
jmp
jle
adc
push
pop
push
mov
mov
adc
jl
add
loope
pop
pop
div
sar
std
dec
mov
sub
push
push
push
add
pop
retf
mov
dec
out
mov
ret
or
mov
movs
xchg
shl
lahf
popa
sar
ret
dec
push
dec
pop
cmc
nop
jae
mov
sbb
xor
sbb
xchg
lods
mov
dec
mov
das
cli
mov
or
loopne
or
cli
push
pushf
lock
(bad)
paddq
pxor
pop
les
aam
mov
jg
jne
mov
xchg
aaa
dec
idiv
or
add
inc
adc
and
inc
push
pusha
jo
jle
inc
icebp
dec
jne
mov
aaa
retf
fstp
xchg
arpl
adc
div
mov
xchg
adc
push
test
sub
ret
mov
sbb
cli
pop
pop
adc
neg
sub
mov
bound
add
shr
add
and
jge
or
inc
jo
pop
sti
add
dec
sub
xchg
aam
push
mov
inc
imul
or
movs
add
adc
mov
inc
mov
push
test
hlt
adc
sbb
in
sub
fcom
mov
mov
loopne
pop
cmp
cmp
sub
nop
scas
mov
and
mov
adc
test
in
cmp
or
lods
jae
mov
sti
xor
or
add
mov
or
les
adc
adc
push
fisubr
xor
pop
loopne
jl
xor
sbb
ds
add
mov
jne
add
mov
loopne
add
cdq
and
jae
mov
sahf
mov
inc
add
push
in
ret
fwait
sub
iret
cmp
push
cmp
rcl
push
and
and
pop
inc
sbb
inc
xchg
cmp
je
push
push
sbb
shl
push
sub
add
dec
int
and
sub
add
stos
mov
jl
mov
push
adc
push
add
or
mov
shr
lock
pop
mov
push
xabort
dec
(bad)
jl
mov
ret
test
push
jo
inc
xor
jmp
xor
jne
std
add
cmp
jle
push
shr
dec
push
push
adc
mov
push
dec
jmp
push
adc
call
add
aas
mov
ror
dec
sub
ins
push
cmps
sbb
mov
adc
pop
jl
pop
pop
mov
leave
push
outs
fmul
and
mov
lods
add
adc
mov
call
mov
sub
add
je
enter
leave
js
push
or
xchg
and
add
or
shr
xor
shl
push
jle
mov
sbb
jb
out
adc
sbb
push
push
(bad)
mov
rcl
and
cmp
inc
(bad)
in
dec
mov
aam
cmp
dec
pushf
pop
adc
dec
and
imul
clc
scas
stos
push
sbb
sbb
jg
into
ins
test
jmp
jo
int3
dec
pusha
in
aam
add
mov
ja
addr16
loope
add
xchg
cs
adc
mov
out
lea
push
rcl
cmp
mov
mov
bound
int
fwait
and
jge
push
repnz
in
rcl
push
push
call
pop
or
call
mov
mov
push
or
dec
or
test
pop
add
add
adc
mov
ficom
inc
out
cmp
pop
mov
push
adc
push
and
dec
jp
or
ret
dec
or
mov
or
add
jg
cwde
dec
fidiv
test
je
(bad)
fsubr
or
stos
cdq
aam
adc
inc
adc
sbb
dec
cmp
mov
xor
jl
(bad)
pop
(bad)
cmp
pushf
cmp
add
popa
xchg
jbe
out
je
mov
sbb
pusha
inc
cmps
cmp
sbb
jge
mov
test
and
inc
mov
mov
jmp
ss
xlat
cs
shr
xchg
repnz
jno
call
adc
inc
sbb
adc
enter
clc
jne
xchg
push
cmps
out
pop
pop
or
adc
add
inc
adc
push
add
int3
pop
jmp
add
add
or
push
and
es
and
mov
mov
jne
inc
jo
arpl
les
fimul
and
rol
add
stos
add
dec
push
loope
inc
sbb
push
mov
jecxz
jmp
dec
mov
or
push
adc
push
xchg
pusha
dec
push
add
push
dec
and
(bad)
out
mov
and
and
inc
call
hlt
jae
popa
rol
xchg
sar
cmp
jl
push
inc
mov
cmp
pop
sahf
push
cmp
(bad)
das
adc
inc
jne
add
mov
and
mov
out
add
(bad)
xchg
adc
fild
inc
les
push
inc
or
xchg
mov
jmp
lahf
mov
or
pop
ins
adc
mov
test
mov
and
push
int
mov
xchg
mov
das
or
int
aad
adc
retf
mov
mov
stc
mov
or
mov
add
xchg
std
(bad)
hlt
jne
fadd
not
and
or
rol
aad
mov
stos
movs
push
out
and
jno
aam
jmp
stos
pop
jle
cmps
xchg
add
mov
pop
inc
mov
sbb
fadd
cmp
jne
js
add
scas
push
int3
call
or
sar
and
push
adc
jg
add
inc
sbb
add
punpcklwd
jmp
inc
je
loopne
cmp
sub
push
push
mov
sub
inc
mov
adc
push
daa
push
cmp
inc
pop
mov
and
xlat
cld
mov
in
and
jbe
ret
rcl
sbb
pop
cmp
fst
or
inc
jg
jmp
adc
push
pop
mov
fadd
and
and
and
in
(bad)
adc
cmp
mov
sub
pop
or
cmps
push
cmp
scas
gs
cmps
xchg
cmp
pop
pop
push
js
scas
or
or
sar
hlt
pop
cmp
scas
and
test
in
pop
xchg
gs
adc
sbb
xor
inc
xor
les
push
sti
ins
add
call
sub
pop
rol
aas
cmp
ficomp
(bad)
mov
bswap
adc
xlat
sahf
cli
es
and
add
inc
jl
add
or
inc
and
add
fs
pop
cmp
test
add
jge
push
mov
push
sbb
je
cmp
cmp
icebp
pop
xor
cmp
jbe
shr
cmc
fcom
inc
add
mov
push
and
and
pop
das
xor
cpuid
into
xchg
sub
lahf
add
push
scas
or
es
sbb
and
add
mov
sbb
or
fstp
pop
jmp
(bad)
dec
or
jmp
jge
jle
adc
sbb
mov
push
and
add
push
cmp
push
imul
xchg
add
shr
sbb
test
aam
adc
cmp
dec
in
sub
(bad)
fbld
add
test
or
inc
push
das
imul
out
mov
jne
adc
push
fsub
loopne
push
mov
fidiv
mov
ret
pop
xor
jo
push
jmp
ret
push
je
or
sbb
jmp
ja
sbb
jmp
pop
sbb
jmp
dec
sbb
ins
sub
addr16
rcl
fistp
sbb
pop
loope
xor
push
in
dec
fstp
loopne
add
or
imul
fistp
inc
pusha
cs
sbb
call
and
scas
sub
adc
add
or
xor
inc
adc
dec
fadd
gs
push
div
xchg
mov
les
mov
icebp
xor
mov
inc
or
aaa
sub
sub
push
adc
bound
call
rcr
mov
jmp
enter
xchg
pop
loop
xor
pusha
dec
inc
loope
lock
adc
pop
fld
les
or
sar
jmp
add
pop
fld
sub
dec
adc
je
pop
test
and
xor
jnp
dec
test
inc
push
pop
mov
or
mov
fldz
mov
mov
ret
sbb
mov
jne
fs
jle
pop
pop
push
in
rcl
push
and
out
scas
(bad)
mul
or
fsubr
pop
xchg
jno
adc
clc
lods
or
mov
mov
inc
dec
push
and
pop
sub
sbb
rcl
add
fst
and
adc
add
pop
mov
mov
call
into
movs
sbb
push
mov
fisub
mov
mov
fadd
jmp
xchg
inc
inc
pushf
or
loopne
push
pop
cmp
fadd
fwait
mov
jmp
add
es
push
mov
ss
push
or
stos
ss
icebp
push
inc
popw
sbb
jnp
enter
popf
add
arpl
fidivr
sbb
mov
jl
pusha
sahf
push
fcomp
imul
sbb
sbb
je
das
mov
and
push
(bad)
sbb
push
sub
dec
add
and
sbb
mov
retf
icebp
or
mov
rcr
push
push
lahf
sahf
ja
sbb
loope
adc
call
repz
mov
prefetch
or
pop
cmps
rcl
inc
ins
push
push
imul
mov
jmp
adc
sub
sbb
push
js
or
fst
fsubr
pop
fcomp
or
xchg
dec
push
push
mov
lock
mov
push
push
jl
jne
lea
xor
fimul
pop
and
repz
mov
cmp
add
cmp
(bad)
xor
add
push
sub
push
(bad)
or
pushf
(bad)
cmp
rol
(bad)
sub
jne
rcr
test
xor
mov
push
cmc
mov
adc
sub
mov
and
pop
jne
sub
out
mov
inc
or
test
and
xchg
ss
enter
inc
fistp
lods
aad
gs
daa
pop
out
fucomip
push
pop
adc
xor
jne
or
dec
pop
fdivr
mov
push
stos
mov
cmp
xor
shl
push
or
sub
push
or
mov
cmp
cmps
(bad)
and
xor
pop
cmc
or
pop
sti
rol
sbb
sub
movs
sub
push
push
js
sbb
cmps
inc
pop
jl
jb
pop
jmp
es
mov
(bad)
js
ret
xchg
fisttp
or
fadd
or
enter
lods
adc
push
and
mov
test
and
add
sbb
repnz
mov
adc
pop
and
lahf
fnstsw
not
xor
loope
xor
and
adc
jmp
mov
and
cmp
and
test
cli
dec
push
test
adc
or
add
fcmovbe
or
sbb
and
xor
lock
or
or
sub
inc
jmp
int3
clc
inc
std
int
and
std
or
jmp
inc
and
mov
dec
fisub
and
jecxz
sbb
lods
ret
fdivr
mov
xchg
xor
and
xor
adc
loopne
xor
sub
and
jge
aaa
jge
jbe
sti
xchg
call
fldcw
fstp
aas
pop
clc
sti
out
pusha
mov
pusha
loope
pop
sub
xor
sub
adc
push
rcl
pusha
fstp
(bad)
enter
add
fcom
ins
inc
in
daa
gs
add
pop
jns
dec
sti
add
add
test
or
clc
xor
mov
add
adc
je
outs
cmp
or
sub
and
mov
dec
out
pop
test
sbb
xchg
cld
dec
mov
sbb
jmp
push
and
inc
add
aaa
xor
adc
adc
inc
push
xor
sti
fstp
jmp
fisttp
dec
push
jo
jl
adc
call
hlt
arpl
cmp
inc
nop
pop
sub
cmps
push
adc
out
push
and
or
push
xor
pop
fld
shr
cmp
jecxz
inc
rcr
push
aaa
sbb
jp
sbb
sbb
pop
ret
js
dec
mov
in
das
stos
dec
jmp
sub
sub
jmp
cmp
mov
sub
push
sub
xchg
or
jmp
fldcw
movs
jns
add
adc
imul
inc
ret
add
pop
sbb
shl
shl
and
xchg
add
pop
in
stos
outs
add
loop
and
jge
aam
add
jmp
test
inc
test
inc
shl
cli
repnz
sbb
mov
out
iret
and
dec
rcl
ror
in
sbb
push
sbb
(bad)
loopne
jo
shl
mov
push
jle
scas
loop
mov
push
add
loopne
icebp
gs
std
mov
mov
adc
and
and
test
or
rol
push
push
add
mov
xchg
and
push
inc
and
cmps
adc
pop
pop
sbb
js
or
and
and
xchg
test
push
test
rol
mov
mov
lock
out
sbb
and
pop
or
fs
inc
in
nop
(bad)
cli
repnz
xor
and
add
cmp
mov
adc
sahf
icebp
push
ds
cs
fwait
xor
xchg
mov
ja
ret
fs
jno
ret
dec
pop
mov
imul
mov
mov
mov
inc
adc
inc
popa
xor
pusha
push
or
push
jno
push
out
gs
cmp
pop
and
push
mov
cmp
xor
and
push
or
jae
dec
mov
jbe
(bad)
push
das
adc
test
push
push
inc
(bad)
adc
addr16
push
mov
jne
cmp
jge
loopne
adc
mov
or
or
add
push
sbb
xor
xor
jecxz
movs
pop
push
jnp
(bad)
in
retf
push
push
mov
loop
add
xor
fnstenv
dec
bound
and
or
adc
push
jmp
rol
push
mov
or
sub
jle
dec
fistp
fwait
not
fwait
xor
ja
scas
adc
inc
adc
mov
xchg
call
sbb
sub
fldpi
xor
xchg
xchg
jbe
std
xchg
xor
je
sbb
aad
cmp
xchg
xchg
leave
sub
out
adc
push
and
add
bound
pop
test
mov
fstp
loop
cli
adc
fisttp
jecxz
push
call
inc
push
mov
daa
rcr
loop
sbb
dec
add
push
push
adc
or
push
cmps
sbb
dec
push
push
inc
pusha
jecxz
sub
test
sbb
jl
mov
mov
jb
sbb
daa
loopne
ror
lea
je
call
push
sub
cmps
test
sbb
adc
jno
cmp
fld
pop
scas
sub
aas
mov
lahf
and
or
adc
add
xchg
in
push
pop
or
daa
sbb
aas
push
add
fiadd
adc
fcomp
cmp
popa
sti
daa
xor
mov
mov
cmc
xchg
add
sbb
out
scas
shl
xor
sbb
mov
dec
xchg
and
add
xor
lods
xor
ror
aam
out
sbb
mov
push
daa
cmp
or
jmp
add
movs
push
in
inc
test
inc
add
inc
dec
test
dec
mov
popf
and
or
fimul
loop
jmp
push
call
add
push
push
adc
xor
test
data16
dec
in
push
mov
push
nop
stos
pop
(bad)
mov
inc
in
dec
shl
and
mov
mov
aaa
xchg
cmp
fstp
and
push
lods
push
icebp
(bad)
call
cmp
je
and
pushf
das
add
jmp
mov
cs
or
lea
ja
mov
and
dec
cmps
or
or
mov
cli
or
mov
ret
pop
jmp
aaa
je
pop
sbb
test
jl
jmp
jne
mov
jmp
ficom
lahf
adc
jmp
mov
stos
popf
sub
add
adc
mov
cmp
jle
call
sub
cmp
xor
pop
push
jmp
bound
or
test
jbe
pop
mov
leave
xchg
jae
test
dec
lock
mov
mov
mov
push
mov
ret
ins
sbb
clc
pop
jge
(bad)
mov
mov
nop
outs
div
nop
add
jne
push
gs
sbb
pop
or
push
mov
and
outs
mov
rcl
bound
repnz
sub
jne
jmp
dec
cwde
dec
pop
pop
lahf
inc
rcr
add
sub
cmp
addr16
movs
jbe
sub
mov
add
loopne
je
dec
imul
mov
lods
jge
pop
daa
or
push
mov
or
jbe
test
test
mov
inc
jmp
or
dec
or
mov
sub
jmp
repnz
adc
xor
adc
(bad)
jg
cmc
jecxz
mov
push
inc
jmp
cmp
cmps
shl
mov
jp
sub
into
dec
sub
and
hlt
mov
inc
test
or
dec
cmp
push
cwde
jge
test
call
sbb
xlat
test
jecxz
movs
(bad)
mov
adc
add
in
pusha
and
mov
jge
jle
in
xor
fst
jle
cmp
les
adc
clc
adc
mov
jbe
mov
jmp
push
dec
mov
sbb
sbb
inc
not
add
cmp
jb
jmp
add
add
mov
mov
add
hlt
or
mov
mov
push
adc
add
nop
call
jae
pop
sub
out
jle
std
mov
or
mov
mov
and
mov
inc
test
fisubr
jne
test
into
dec
adc
inc
or
pop
rol
and
hlt
int3
adc
adc
xchg
xchg
adc
push
cwde
call
test
push
pushf
sub
inc
xor
mov
outs
or
sub
add
movs
movzx
into
sub
xchg
push
retf
mov
shl
mov
inc
ja
fnstcw
pop
or
mov
add
sub
sub
aam
imul
test
jg
add
popa
mov
add
cmp
loop
rol
aam
inc
std
ja
mov
add
or
shr
pop
or
push
and
pop
pop
mov
bound
or
adc
inc
mov
adc
stos
dec
push
lods
or
(bad)
lock
sahf
push
fcom
ins
fadd
loopne
shr
adc
pop
pop
(bad)
mov
adc
sahf
dec
mov
shr
ins
mov
aam
sub
sbb
push
dec
fcom
xor
sub
mov
je
fwait
cmps
adc
sbb
add
loopne
popa
pusha
xchg
fiadd
push
out
jmp
imul
(bad)
mov
clc
xlat
jb
into
mov
mov
mov
sbb
and
dec
and
mov
or
daa
mov
add
jmp
lods
cmps
and
sar
imul
(bad)
cmc
xchg
add
jo
sub
call
imul
push
retf
das
push
cmp
push
sbb
loopne
sbb
movups
ins
lea
mov
les
fimul
inc
mov
(bad)
inc
xor
add
push
dec
fwait
xlat
jne
inc
clc
jo
ret
ss
repz
cmp
out
adc
mov
or
jmp
jle
cmp
push
add
loope
push
or
mov
lea
and
rol
dec
leave
imul
in
or
loope
add
test
lea
xor
cld
add
fild
int
cmp
dec
cmp
mov
(bad)
push
pop
add
popa
add
jle
and
leave
sar
mov
aas
or
test
rol
ja
sbb
(bad)
not
nop
sbb
das
mov
cmp
xor
push
(bad)
orps
push
sub
cdq
loop
pop
add
mov
add
pop
mov
jmp
inc
push
cmp
hlt
mov
mov
das
dec
xchg
cmp
loope
aas
in
popf
and
mov
push
sub
xchg
retf
out
rcr
mov
pop
ret
or
(bad)
jns
cmps
fsub
imul
inc
les
push
pop
adc
adc
pusha
sbb
lods
syscall
mov
sti
or
jnp
mov
dec
add
fsub
mov
adc
pop
call
es
call
jmp
xor
les
test
add
sbb
inc
outs
and
lods
jnp
dec
xor
sub
fsub
push
inc
mov
ja
clc
adc
cmp
xor
push
test
jmp
in
xchg
add
cmp
ins
mov
test
adc
ja
jno
add
icebp
xchg
xor
add
push
and
inc
xor
sub
inc
rol
fmul
sbb
mov
aas
mov
repz
push
jmp
sub
cs
int3
adc
pop
nop
dec
stos
sar
out
test
mov
fs
sbb
inc
and
sbb
cmp
mov
dec
sti
lods
fst
mov
inc
mov
sbb
sar
(bad)
dec
xor
lahf
mov
mov
mov
(bad)
scas
inc
xchg
retf
test
adc
fstp
mov
mov
jmp
push
inc
mov
push
push
mov
jo
aad
gs
xchg
and
pop
lahf
dec
add
jl
sahf
ret
ret
sub
cwde
pusha
mov
(bad)
les
add
or
push
push
jae
xchg
shl
in
pop
jns
lahf
or
add
jg
sbb
mov
movs
popa
sbb
and
mov
add
test
sub
and
mov
add
add
pop
jp
jp
(bad)
dec
jne
add
stc
mov
xchg
inc
call
shl
mov
push
ret
push
push
push
and
and
jmp
lods
or
add
mov
es
cmc
pop
fwait
mov
mov
mov
movs
push
mov
add
or
mov
sbb
retf
jmp
pop
mov
gs
and
adc
loopne
pop
sbb
jae
movs
cmp
sbb
cmp
js
adc
ja
dec
push
bound
lods
scas
sbb
cmp
mov
adc
xor
cwde
pushf
inc
jae
popf
hlt
cmp
push
and
sbb
add
enter
xor
dec
cmp
inc
push
add
lds
enter
repnz
cdq
or
lock
cmps
cmp
push
fs
test
jge
in
push
into
push
xor
adc
mov
nop
push
cmc
lods
je
les
jb
das
push
dec
mov
sub
mov
es
jecxz
mov
mov
add
dec
and
add
repnz
and
and
not
push
cdq
jmp
ror
xor
mov
add
dec
mov
pop
mov
sbb
mov
xchg
and
fcmovu
cmp
push
push
test
das
mov
dec
xchg
push
rcl
lods
add
jne
popa
inc
cmp
ror
add
addr16
sbb
cmps
adc
sbb
or
dec
add
sub
retf
dec
and
lahf
scas
dec
or
or
sbb
adc
fldenv
into
or
jp
lahf
int3
lahf
add
inc
mov
add
mov
scas
nop
or
adc
movs
daa
xor
jl
mov
(bad)
adc
xor
and
mov
and
nop
lods
lea
pop
mov
xchg
fdivr
js
cmp
repz
xor
je
mov
xor
push
push
mov
mov
pop
fdivr
sub
mov
or
jne
in
popf
and
add
inc
mov
xor
sbb
inc
loop
rcl
jmp
dec
sar
out
pusha
or
xchg
cld
popf
pop
adc
sub
dec
or
shl
xor
mov
popa
inc
cmp
jno
push
push
mov
or
pop
or
jbe
jmp
lods
and
cdq
fsubp
xor
jb
adc
ret
sub
cld
jne
dec
test
std
or
push
repnz
js
pop
xchg
add
retf
jmp
xchg
ss
lods
push
sbb
xchg
cmp
inc
shl
das
scas
test
add
ror
lock
and
loope
sbb
aad
xor
test
jmp
icebp
not
jmp
mov
pop
daa
xchg
inc
inc
lods
xchg
pusha
loop
sbb
mov
adc
inc
mov
aad
mov
fild
adc
lea
and
cmp
int
adc
jge
adc
movs
jmp
or
xchg
push
ficom
push
or
ins
add
dec
popa
xor
mov
aam
mov
sar
jnp
add
ins
jmp
push
adc
ret
sub
and
adc
add
jbe
mov
add
add
sub
std
push
dec
add
les
push
ja
jmp
cld
and
or
mov
mov
push
adc
mov
jge
pop
inc
sub
add
adc
pop
movs
xor
sar
jne
adc
test
mov
jbe
nop
retf
je
imul
mov
imul
fs
push
push
arpl
xor
mov
dec
pop
mov
popf
adc
mov
cli
add
and
sub
jle
shl
mov
xor
mov
adc
mov
dec
sbb
cli
lods
mov
adc
and
cmp
add
jne
in
in
adc
xor
push
daa
and
jp
jo
adc
inc
cmp
out
mov
movs
adc
je
sbb
leave
js
push
xchg
adc
mov
popf
push
test
dec
fiadd
fdiv
sub
out
add
xor
mov
cmp
je
push
inc
popf
movs
jl
or
dec
std
cmp
add
add
ins
adc
lods
inc
pusha
jle
mov
nop
sbb
jne
dec
inc
sbb
cdq
dec
cmp
(bad)
adc
xchg
test
mov
push
fldenv
xlat
aam
ins
adc
inc
and
jg
add
in
xchg
idiv
add
pop
xchg
xor
push
push
inc
push
test
add
nop
sub
jle
or
jle
imul
hlt
scas
cmp
push
mov
and
je
inc
cmp
loope
imul
jmp
add
js
iret
push
imul
cmp
int3
fisttp
xchg
popa
or
jns
aam
or
test
cmp
jne
(bad)
add
cmp
add
and
mov
lock
(bad)
retf
ret
xor
dec
xchg
test
mov
lods
push
std
dec
mov
pop
es
jl
xor
ret
push
mov
mov
addr16
pop
adc
cmp
and
pop
add
lods
jmp
popa
inc
mov
mov
out
js
in
sub
rcl
int3
je
jbe
(bad)
mov
and
jmp
leave
ret
bound
adc
ja
mov
xchg
call
popa
sbb
aas
ror
sbb
sbb
in
ins
inc
inc
adc
scas
xor
inc
(bad)
cmp
in
push
adc
mov
sbb
sub
shl
inc
push
jnp
addr16
test
push
and
cmp
jmp
imul
mov
test
xchg
enter
loope
dec
jns
fs
leave
xchg
add
ret
sub
pop
push
test
imul
add
adc
cmp
lods
test
das
nop
push
nop
popa
out
add
xchg
out
add
add
gs
xchg
mov
pop
or
add
inc
and
push
push
sub
std
cmc
mov
pop
and
mov
sbb
call
xchg
mov
xor
mov
rcr
lds
gs
in
movs
dec
rol
mov
add
adc
mov
xchg
jle
sbb
xchg
movs
repz
fdivr
fidiv
add
or
(bad)
sbb
push
lods
pop
push
push
jbe
sbb
xchg
xchg
mov
or
jmp
in
pop
ffreep
push
and
call
push
sbb
add
retf
fucomp
pop
jb
lods
jmp
mov
inc
test
cpuid
hlt
add
mov
(bad)
mov
outs
and
mov
mov
ror
sbb
dec
push
push
jl
icebp
int
mov
sub
and
jp
and
je
ret
shr
clc
mov
or
and
jle
xor
xor
push
fistp
sbb
cmp
xor
adc
add
gs
inc
les
adc
(bad)
adc
jne
cmp
js
add
add
sbb
sub
push
or
data16
pop
loopne
ror
repz
cmp
cmps
and
leave
out
lea
pop
aam
xchg
adc
sar
retf
xchg
or
ss
in
outs
or
gs
or
or
xchg
lock
mov
dec
pop
cli
mov
std
push
mov
cmp
pop
(bad)
mov
inc
inc
mov
mov
imul
fldz
call
ror
add
add
pop
sbb
lahf
fisttp
pusha
aam
push
push
ficom
xor
pop
test
xor
scas
add
adc
xchg
and
js
xor
test
pop
fwait
popa
xor
and
sbb
jle
or
call
xchg
adc
inc
ror
mov
jbe
or
add
cmp
sub
ret
push
pop
sbb
addr16
(bad)
xor
aam
fdivr
sub
pop
outs
rcr
push
repz
(bad)
push
add
add
mov
dec
or
mov
push
xchg
jecxz
or
mov
rol
out
(bad)
xor
add
lahf
push
and
ds
jnp
lea
dec
int
mov
pop
aam
sbb
das
sbb
push
neg
pop
sub
inc
ror
jl
mov
sahf
cs
cmps
cmp
aam
(bad)
data16
stos
mov
pop
push
test
mov
inc
fild
shl
sbb
int3
mov
scas
ret
add
sbb
push
xor
ret
dec
jmp
lahf
add
sbb
jmp
jmp
lock
rcl
fld
mov
xchg
fidivr
cmp
xor
cmp
push
bound
(bad)
mov
call
shr
xor
lea
lods
adc
fnstcw
mov
or
daa
and
push
js
adc
(bad)
cmp
xor
stos
cmp
jge
mov
cs
call
dec
inc
ret
fsub
or
mov
sbb
shl
adc
push
xchg
add
add
retf
dec
rcl
test
sbb
jo
dec
(bad)
cwde
or
inc
add
into
lods
jno
fdivr
and
cli
add
out
xor
xchg
add
sub
xor
and
add
mov
gs
(bad)
pop
mov
xchg
icebp
ret
dec
popa
addr16
mov
jo
mov
jo
mov
enter
push
popf
mov
loope
mov
lds
loope
loopne
lock
ret
daa
xor
or
jne
adc
mov
xor
xor
scas
cmp
add
(bad)
adc
out
jmp
inc
or
ret
xor
add
add
call
or
mov
popf
shr
ss
or
adc
push
cdq
jne
clc
push
sub
adc
sub
out
ss
sahf
mov
sbb
rol
or
nop
imul
ret
and
add
hlt
leave
cmp
shrd
sbb
adc
mov
inc
(bad)
jge
sbb
inc
add
lea
jmp
push
test
inc
and
xor
out
xor
sub
mov
ret
cmp
or
ror
inc
call
sub
or
push
mov
call
and
pop
sbb
push
sbb
push
and
loope
shr
jl
pop
sbb
js
jg
pushf
mul
imul
sub
(bad)
loop
gs
neg
mov
cmp
sar
inc
dec
jb
push
push
(bad)
mov
daa
dec
pop
sub
out
leave
rol
dec
inc
add
adc
push
lock
jg
mov
(bad)
sub
dec
inc
dec
pop
or
(bad)
dec
sahf
sbb
cld
mov
or
cmp
xchg
mov
add
scas
(bad)
dec
fnstsw
test
mov
test
cmp
retf
adc
fs
call
mov
jp
pop
push
outs
inc
and
sbb
push
sbb
rol
add
sub
fwait
adc
sti
(bad)
jns
neg
call
rcl
mov
mov
sub
lods
push
fld
aad
inc
lea
jle
pop
push
inc
mov
dec
push
mov
punpckhbw
or
and
fadd
into
mov
fisub
sbb
add
mov
cmp
aaa
inc
shr
enter
push
idiv
cmp
inc
daa
add
out
fsubr
dec
pusha
mov
add
test
sub
test
xchg
test
push
push
in
call
cmp
je
mov
loopne
jge
inc
rcr
or
inc
inc
cmp
into
sbb
sbb
mov
add
xor
test
clc
inc
data16
mov
movs
sbb
sub
ins
fs
inc
popa
je
inc
je
dec
xor
loop
xor
xchg
cld
ds
jmp
pop
and
mov
je
xchg
add
ror
xchg
sbb
mov
sub
xchg
cmp
adc
pop
cdq
cmp
sub
or
loop
pop
fiadd
mov
shl
dec
add
lods
sub
cld
pop
xor
sub
je
imul
(bad)
inc
int
hlt
jmp
or
jmp
test
outs
test
call
adc
imul
or
sbb
int3
add
dec
aad
dec
mov
add
rcr
dec
sub
popf
add
leave
not
inc
arpl
rol
push
dec
mov
jmp
jne
out
and
inc
(bad)
in
test
ds
mov
xor
jmp
icebp
push
or
or
or
mov
add
inc
popf
pop
sub
jne
inc
loopne
mov
and
lods
adc
xor
cmc
xor
and
sub
dec
cli
iret
mov
jge
hlt
and
jne
lock
sbb
add
adc
or
xor
fadd
push
push
imul
add
push
test
loop
adc
sbb
jecxz
mov
jg
push
mov
ins
or
aaa
loopne
scas
or
inc
je
and
push
lods
dec
inc
sub
in
or
add
cmps
inc
jmp
push
or
dec
jle
sub
xor
jmp
aas
and
mov
sub
mov
rol
xchg
(bad)
push
pop
test
addr16
repz
lods
outs
ror
dec
lock
stos
mov
pop
pop
or
sub
pop
push
dec
mov
push
sub
inc
mov
dec
loopne
rcr
dec
je
pop
loope
es
jb
dec
nop
in
push
add
mov
pop
pop
jns
dec
or
inc
lea
pop
dec
nop
mov
inc
ror
rol
or
or
shl
not
test
stos
adc
or
pop
repz
xor
jle
pop
clc
mov
out
mov
inc
fisttp
fdiv
dec
inc
cwde
enter
add
scas
or
inc
loopne
mov
cmp
xlat
jb
dec
cmp
out
cli
pop
icebp
nop
mov
dec
xchg
into
fcom
imul
cs
adc
pop
(bad)
adc
inc
or
inc
jl
stos
outs
fadd
inc
rcl
or
cmp
inc
stos
mov
or
dec
dec
loop
fwait
push
xchg
cmp
mov
or
dec
adc
loop
das
mov
aam
sub
js
retf
sub
sub
not
dec
pop
lock
popf
jb
mov
and
test
rcl
out
push
or
xchg
sbb
jne
shl
mov
jmp
rol
mov
cdq
sbb
sub
in
lock
cmps
and
mov
fs
pop
prefetch
or
cwde
pop
repnz
pop
dec
lea
and
test
lods
xlat
add
xor
adc
or
push
adc
mov
out
cwde
ror
rcr
dec
xor
test
fadd
out
jmp
push
scas
mov
add
repnz
inc
cwde
xor
iret
dec
jns
cmp
and
fmul
mov
mov
loopne
mov
push
add
or
addr16
jl
xor
cmp
or
ss
lods
and
and
add
lock
pusha
sahf
jne
call
cs
out
loopne
dec
mov
iret
and
in
int3
les
cmp
jge
xor
and
bound
or
rol
inc
xchg
or
cli
xchg
fnsetpm(287
or
push
and
clc
fdivr
pusha
adc
or
and
mov
xor
jno
stos
mov
push
std
push
std
and
xor
lock
mov
cmp
push
lahf
add
and
clc
in
rcl
in
in
je
add
pop
add
mov
and
rol
in
push
leave
test
jge
adc
xor
call
neg
inc
xchg
call
or
rcr
or
hlt
sub
xchg
repz
add
inc
clc
adc
mov
inc
leave
int3
xchg
call
xchg
mov
add
shr
retf
add
mov
fmul
loop
mov
mov
adc
pushf
pusha
jp
lods
sub
imul
je
inc
jl
in
sbb
cmp
lods
fiadd
pop
add
call
mov
ins
repnz
dec
fidivr
cmp
cli
adc
out
bound
inc
mov
xor
retf
clc
clc
push
lds
or
push
cmp
add
sub
cmp
cli
test
add
cmp
in
inc
es
and
xchg
aas
fwait
cmp
push
push
adc
inc
xchg
and
mov
sbb
sbb
adc
jmp
int3
gs
sbb
pop
enter
push
shl
out
adc
leave
into
dec
out
pushf
rcl
mov
aam
fmul
(bad)
call
push
or
test
call
push
sub
cmps
or
xchg
or
mov
adc
inc
lods
pop
test
or
dec
mov
dec
and
mov
push
jbe
dec
xchg
(bad)
mov
or
test
cmp
add
mov
lods
cs
inc
lahf
nop
push
jmp
rcl
or
lea
or
call
or
ret
ror
jb
add
retf
cld
gs
push
ret
dec
jmp
xchg
or
mov
lds
sub
mov
ror
fcom
and
xchg
mov
adc
ror
data16
mov
ins
push
enter
or
out
stos
push
or
aad
mov
jo
push
dec
aas
cmps
sub
outs
dec
cmp
hlt
ss
sub
push
or
or
lahf
xor
std
aad
in
push
sbb
jae
add
mov
test
or
jl
cmp
mov
inc
mov
adc
cmp
call
jl
inc
dec
(bad)
and
inc
cmp
mov
mov
fcom
pop
pop
data16
cmp
cwde
cdq
pop
ret
addr16
leave
jne
leave
cmc
fdiv
lock
pop
je
pop
push
add
leave
je
pop
and
lods
sbb
inc
mov
mov
dec
or
adc
in
pop
xor
lahf
idiv
int
add
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
or
loopne
or
jo
nop
or
adc
dec
jne
mov
add
fld
pop
inc
add
pop
sub
dec
mov
push
or
dec
dec
data16
ret
mov
push
sbb
movs
and
push
push
and
add
mov
adc
mov
jmp
jmp
sbb
add
call
jno
or
into
add
leave
push
test
sub
sbb
data16
dec
pop
add
inc
push
retf
mov
dec
shr
scas
es
and
or
rcl
add
or
int
mov
cli
fidivr
and
test
mov
jmp
adc
loope
mov
ss
adc
sbb
idiv
sahf
xor
pusha
inc
mov
push
inc
xchg
adc
popa
push
jne
mov
pop
(bad)
ds
or
jmp
adc
add
and
push
out
sub
mov
mov
cli
mov
xor
add
sub
ficom
shr
and
ret
cmp
add
mov
scas
int3
test
add
mov
jmp
or
or
jno
inc
inc
xchg
sbb
inc
jg
movs
rol
leave
add
not
in
je
mov
iret
leave
or
pop
cmp
ss
fdiv
or
in
hlt
shl
pop
loopne
bound
or
lock
dec
push
push
movs
movs
movs
xor
sahf
mov
xor
inc
loop
add
push
or
loopne
into
push
loop
add
mov
enter
and
cli
xchg
push
in
mov
inc
inc
add
sub
outs
dec
sbb
and
aam
push
cmp
call
ss
dec
jns
fist
fwait
push
imul
mov
or
jae
lods
ret
pop
retf
call
loope
shr
and
sub
adc
and
pop
not
cld
lock
or
or
adc
cmps
stos
push
nop
out
lea
test
dec
or
mov
adc
jne
xchg
inc
add
js
xchg
arpl
jns
pop
clc
ret
rol
je
fsubr
dec
or
and
movs
push
rcr
in
cmps
pop
cmps
(bad)
rcl
xchg
dec
cmp
or
push
(bad)
xor
push
test
push
cmps
sbb
mov
jecxz
and
or
push
lea
dec
inc
push
pushf
dec
jmp
or
inc
imul
xlat
push
or
sbb
enter
push
push
scas
lock
test
scas
fimul
mov
inc
push
not
xor
xchg
retf
xchg
and
push
dec
add
adc
cwde
xchg
ins
(bad)
loope
aaa
push
addr16
js
in
pop
fs
dec
push
std
jno
(bad)
or
iret
ret
adc
and
mov
push
push
xchg
push
and
popf
fcom
pusha
rcl
xor
and
or
lock
inc
adc
cmp
lea
or
mov
xor
outs
gs
sbb
mov
add
in
push
clc
xchg
push
or
add
cwde
and
ins
test
sbb
xor
pop
ret
sti
add
mov
pop
pop
stos
mov
push
mov
jno
call
enter
fs
ins
js
pop
adc
add
lock
dec
mov
pop
nop
jnp
push
mov
(bad)
mov
dec
sub
inc
pop
dec
es
fbstp
mov
cmp
jmp
outs
dec
sub
js
push
cmc
add
pop
push
call
adc
sbb
test
ins
sub
std
popa
add
cmps
and
ret
push
fimul
push
jecxz
xor
or
inc
test
dec
stos
in
mov
test
pop
sbb
adc
sub
les
add
mov
inc
cmp
push
out
adc
icebp
popa
sub
repnz
(bad)
mov
aas
pop
(bad)
fs
fdivr
sahf
fnstenv
sar
and
sub
xchg
mov
push
and
ss
mov
mov
and
rcr
aam
sti
aas
push
fisub
adc
cmp
add
and
push
aaa
hlt
xchg
or
iret
cdq
test
or
data16
xchg
shl
loop
add
mov
ret
outs
movs
into
add
xor
loop
add
mov
dec
inc
mov
imul
pop
mov
sub
push
jo
xor
lahf
js
push
call
cmp
dec
or
push
out
fstp
jo
push
and
loop
adc
push
push
push
push
or
mov
popf
and
pusha
fwait
xchg
and
ret
mov
imul
std
jg
or
lea
imul
lea
test
je
push
call
movsx
shl
push
add
idiv
aam
or
cmp
shl
(bad)
dec
adc
cmp
cwde
and
jnp
adc
sti
loopne
and
push
imul
mov
adc
dec
pop
in
les
lods
into
(bad)
jle
repnz
out
lock
xor
mov
leave
loop
or
imul
and
bound
inc
(bad)
xor
stos
and
add
xchg
mov
(bad)
ja
ss
cmp
xchg
lds
ret
jae
inc
test
test
fwait
loop
fs
inc
or
cmp
xchg
jne
adc
adc
enter
enter
adc
mov
push
lea
add
test
sbb
das
push
or
and
mov
adc
mov
retf
add
nop
xchg
mov
adc
cmp
mov
ror
and
ror
mov
cmp
bound
rol
shr
jmp
jmp
cmps
ror
mov
push
retf
aas
int
mov
mov
lock
or
les
jle
jp
test
pop
shr
or
mov
sti
jmp
xor
mov
aaa
adc
lock
daa
repnz
add
dec
cli
cli
inc
cli
test
mov
repnz
push
pop
iret
test
inc
in
push
cwde
nop
loopne
rol
or
jae
add
call
nop
inc
lahf
xor
fs
dec
or
push
xchg
xor
and
or
push
inc
push
div
jns
rol
lock
sbb
fmul
push
fdivr
stos
addr16
repnz
dec
pop
fsubr
loop
out
cmp
mov
jne
retf
mov
enter
(bad)
ins
in
sbb
adc
adc
inc
push
cmp
and
adc
inc
fsub
sub
inc
mov
enter
jge
xchg
pusha
call
jmp
test
push
lds
pusha
(bad)
mov
or
repnz
or
fcmovu
sbb
pop
fisttp
fadd
ins
test
cli
mov
aaa
mov
add
fdecstp
clc
adc
ffreep
adc
sbb
jp
fdiv
adc
not
fs
lock
or
and
or
jge
pop
and
add
inc
ret
inc
fldenv
(bad)
cmp
jne
jne
rol
in
rcr
cld
into
retf
int
pushf
pusha
mov
jge
add
sbb
or
sbb
dec
call
inc
add
sub
into
je
stos
jle
jle
push
pop
outs
call
sub
adc
cdq
and
or
mov
adc
in
push
retf
or
int3
push
inc
scas
xchg
sbb
rcr
imul
xor
(bad)
out
movhlps
jle
inc
imul
mov
imul
call
mov
fdiv
pop
add
inc
jecxz
push
and
in
jecxz
loopne
loopne
add
pop
fbld
in
pop
add
add
push
ret
sar
sub
test
enter
lea
inc
mov
sbb
lahf
push
mov
clc
rol
ins
cmps
gs
add
enter
pop
shr
sahf
mov
jae
add
cdq
mov
or
movs
out
and
test
arpl
lock
inc
jmp
jmp
aad
(bad)
idiv
add
inc
cmp
jae
or
mov
dec
cmp
test
mov
inc
dec
add
add
fadd
mov
mov
(bad)
fcmovb
mov
jp
jne
dec
mov
pop
push
or
jb
int
pushf
adc
in
xchg
add
cwde
mov
loop
add
push
mov
add
mov
jp
add
or
add
xchg
cmps
ror
add
add
add
sbb
mov
pushf
rcl
add
retf
mov
rcl
push
push
or
or
add
aaa
xor
add
ret
iret
shl
add
or
add
addr16
adc
sbb
adc
add
mov
enter
push
ret
or
xchg
xchg
or
xchg
adc
or
lea
add
pop
pop
sbb
pop
(bad)
mov
mov
iret
xor
sbb
test
and
rcr
pop
pop
mov
pop
cmpps
jb
ins
mov
inc
imul
adc
ss
pop
cld
fadd
movs
popf
loope
adc
retf
or
out
push
imul
push
or
inc
(bad)
xchg
add
(bad)
mov
xor
adc
call
shr
jnp
js
iret
mov
jne
cdq
ret
out
and
mov
ror
pop
dec
jge
out
mov
ret
or
inc
add
inc
enter
jne
dec
or
nop
clc
mov
sahf
xchg
or
test
sbb
cmp
scas
or
(bad)
adc
sub
mov
inc
xchg
shl
out
or
push
and
xor
pop
lock
jo
xor
sbb
ss
or
add
or
cdq
xchg
data16
add
retf
pusha
xor
pop
cmps
retf
je
and
sbb
inc
jg
daa
daa
iret
retf
into
into
into
mov
or
sub
mov
pop
nop
pop
sahf
lds
mov
mov
and
and
or
js
lods
aad
pop
gs
mov
sbb
inc
adc
dec
pop
call
sahf
lahf
pop
jns
xchg
xor
or
xchg
addr16
add
add
inc
mov
movs
add
test
and
call
inc
ret
jne
cmp
(bad)
sub
jmp
mov
mov
xchg
xchg
xchg
xchg
retf
xor
jo
out
dec
cmp
(bad)
pop
mov
sub
or
aaa
test
pop
fistp
xor
and
push
retf
es
outs
lea
pop
dec
stos
fild
jp
inc
std
mov
lahf
cli
jo
jl
popf
dec
hlt
push
xor
pop
(bad)
mov
inc
xor
adc
cmp
shl
enter
jge
or
sbb
cmp
pop
add
mov
aaa
push
lds
test
loope
movs
xchg
cmps
mov
or
sub
and
push
les
test
rol
cmp
or
xchg
add
adc
repz
mov
leave
push
push
enter
mov
jge
add
add
jg
sbb
icebp
xchg
test
aad
dec
adc
int3
inc
ss
ins
add
test
rcl
rcr
push
mov
pusha
(bad)
push
inc
mov
xor
jbe
add
pop
push
pusha
mov
jg
sub
sar
inc
dec
aam
pop
(bad)
rol
stos
add
js
push
jl
pusha
cmp
mov
xor
jl
rcl
sbb
mov
inc
ret
pop
and
pop
sbb
mov
push
sub
aaa
cmp
adc
inc
and
or
addr16
(bad)
test
call
cmp
clc
inc
sub
leave
scas
adc
inc
jb
dec
sbb
adc
icebp
push
shr
add
dec
fiadd
mov
and
js
push
jbe
ret
aam
ds
inc
sub
ret
mov
or
or
jle
push
jle
pop
enter
add
add
lock
and
pop
push
test
call
push
(bad)
adc
dec
outs
or
inc
enter
xchg
bound
loopne
pop
cmp
nop
jg
xor
sub
sbb
fxch
pop
sub
int
fst
jecxz
jb
inc
fild
inc
adc
push
sbb
int3
push
fwait
jg
push
jg
push
out
fld1
daa
rcl
pop
adc
pop
gs
fdivp
mov
jo
stos
sti
dec
fyl2x
dec
lods
rcl
outs
es
test
dec
pop
hlt
push
pop
dec
mov
sub
sub
xchg
push
outs
retf
dec
pop
aas
or
push
mov
add
inc
jmp
faddp
retf
dec
inc
lds
lock
pop
or
xor
cmp
mov
in
shl
pop
jne
adc
cld
inc
jne
jne
call
mov
push
dec
pop
fsave
pop
rcr
popa
mov
adc
ficom
mov
adc
jo
sbb
scas
in
fld
push
(bad)
pop
retf
or
ret
fbstp
je
mov
in
pop
mul
pop
das
push
rcl
dec
push
les
mov
in
ret
int
inc
mov
outs
jmp
cmps
(bad)
and
cmp
adc
fcmovnu
fld
(bad)
sub
leave
into
pushf
add
sbb
cld
pusha
mov
mov
in
fcmovnu
fwait
inc
inc
sub
fldenv
add
ret
ins
dec
ja
pop
xor
sub
icebp
in
clc
shr
add
jbe
leave
ret
aaa
rol
pop
cmps
je
pop
and
and
shr
sbb
hlt
push
mov
cmp
jmp
fstp
icebp
dec
je
jno
dec
shl
or
sub
sub
(bad)
call
test
cmps
pop
leave
fadd
ret
movs
cld
clc
xlat
add
and
adc
retf
lock
adc
push
add
js
sub
mov
mov
jnp
xor
add
mov
fwait
dec
xor
push
jmp
adc
xor
and
mov
or
pop
add
pop
xchg
retf
sub
sub
jbe
mov
ss
lea
(bad)
outs
mov
dec
push
stos
or
pusha
int3
inc
mov
data16
add
arpl
push
inc
or
out
add
mov
pop
xchg
dec
sbb
or
adc
cmps
retf
inc
adc
inc
adc
or
ja
test
sbb
inc
fisub
or
and
add
es
and
or
push
fcmovbe
repnz
add
jo
sbb
and
imul
call
jb
dec
inc
ret
retf
loopne
bnd
add
shr
fild
adc
enter
xor
in
mov
add
imul
(bad)
xor
sbb
dec
push
pop
addr16
xor
mov
ja
jae
addr16
lods
test
adc
dec
hlt
or
dec
fwait
mov
imul
push
push
dec
or
shl
jne
dec
adc
sbb
je
xchg
add
pop
fwait
inc
xchg
push
aaa
repz
jmp
ins
add
in
or
outs
push
jnp
aad
mov
sbb
add
nop
pop
cwde
lods
call
stos
sbb
into
fbstp
mov
add
shr
inc
or
adc
mov
call
lds
outs
push
test
fdivr
add
xchg
int3
lock
mov
ret
push
or
in
and
(bad)
inc
push
fsubr
mov
inc
sub
jne
fisub
mov
sbb
push
push
inc
sub
push
adc
pop
push
hlt
cld
xor
ret
jno
jbe
adc
jmp
and
add
and
mov
data16
xchg
jl
cmps
jle
lea
int3
je
cmp
imul
mov
and
jmp
cmp
pop
push
cli
sar
jne
test
and
ret
adc
push
sub
cs
or
pusha
rol
inc
inc
js
mov
leave
or
xchg
adc
cmp
adc
adc
push
icebp
movsd
pusha
sub
mov
cli
adc
cmc
outs
stos
test
inc
pop
cmp
aas
fucomi
fnstenv
loopne
adc
rcl
xor
push
jp
shr
jg
jmp
jbe
or
(bad)
rcr
add
add
outs
retf
lahf
idiv
out
dec
es
xor
cmp
push
and
fst
cmp
pop
(bad)
adc
ficom
bound
ss
lock
sahf
rol
pop
ret
add
add
adc
mov
sub
xchg
and
ss
adc
lds
out
jns
mov
fadd
push
int
shr
in
mov
mov
fwait
(bad)
and
push
(bad)
cld
sbb
sub
aam
out
(bad)
push
cmps
add
pop
repnz
and
cmp
aad
add
inc
fstp
inc
or
setle
out
mov
mov
or
dec
ja
sahf
(bad)
and
ret
rcr
out
sar
shr
imul
push
sbb
out
fisubr
sub
pop
lds
jo
out
adc
and
add
add
or
enter
lock
loope
or
fcom
icebp
pusha
pop
xlat
in
jmp
mov
add
cwde
jns
out
fs
in
ror
jg
pop
fdiv
(bad)
mov
(bad)
cli
add
fistp
dec
repz
(bad)
in
sub
cmp
mov
jmp
pop
lock
sahf
mul
int3
sar
clc
ret
fdiv
in
in
(bad)
adc
repz
jecxz
cmps
fidivr
mov
push
les
lds
ret
fcmovnb
push
sbb
mov
retf
out
js
adc
and
leave
fld
mov
fisub
cs
add
lahf
rol
xor
sar
push
mov
outs
fst
cli
out
fisttp
out
shl
out
repz
rcl
ret
inc
(bad)
fstp
sbb
xchg
pop
cmp
or
loopne
mov
cmp
hlt
stos
push
or
pop
mov
xchg
mov
cmp
push
add
outs
lods
jmp
mov
add
sub
jbe
scas
mov
jl
or
cld
xlat
sbb
add
daa
inc
clc
sar
or
jo
fiadd
inc
inc
and
pop
sar
inc
sub
les
rcl
je
jno
add
xor
ds
xchg
jl
or
bound
sub
xor
loope
fild
mov
(bad)
and
iret
add
pop
retf
adc
out
mov
out
pop
call
popa
pushf
addr16
push
leave
loopne
fmul
sahf
add
inc
js
icebp
ret
add
ss
stc
sahf
or
arpl
inc
jno
shl
add
xor
clc
scas
push
and
lea
mov
lock
or
aad
fst
xchg
les
mov
rcl
iret
jo
mov
jnp
inc
fdivp
add
mov
mov
inc
ret
jmp
sbb
or
mov
loop
mov
aas
gs
cmp
jne
(bad)
mov
or
faddp
add
jmp
or
lahf
movs
or
mov
les
movs
add
mov
jb
es
jae
int
retf
shl
loopne
rol
jmp
popa
pusha
jp
adc
ror
mov
pop
lahf
es
(bad)
ja
jb
pop
ja
adc
sbb
push
jl
adc
jge
outs
fdivr
rol
mov
push
adc
dec
loop
mov
fdivrp
inc
sub
push
mov
add
call
pusha
dec
bnd
mov
pusha
dec
sbb
push
cmp
mov
sub
lock
dec
aas
retf
shl
lods
neg
xor
clc
pop
and
add
lods
mov
fdivr
add
adc
outs
ror
mov
inc
xchg
test
test
push
mov
push
mul
adc
sbb
loop
(bad)
xchg
enter
pop
mov
adc
jg
pop
js
mov
and
lock
rcr
sbb
sbb
stos
(bad)
sbb
mov
inc
pop
mov
xchg
(bad)
std
scas
pop
leave
add
fidiv
adc
shr
mov
je
mov
jge
lds
jnp
xchg
cmps
iret
lds
loope
out
and
pop
sbb
sub
sub
lea
adc
out
out
add
pop
aam
enter
ror
inc
pop
pop
fwait
xor
lahf
test
arpl
jge
fild
rcl
in
jne
fxch
fyl2x
jmp
dec
loopne
mov
jmp
jae
fmulp
shl
popa
sub
ret
std
inc
loope
sub
dec
xchg
int3
lock
pushf
sub
aad
loope
scas
mov
aam
cmp
and
add
dec
shr
ret
fldln2
inc
in
fnsave
fwait
mov
inc
jne
push
ret
inc
popa
sub
or
cmp
pop
cwde
gs
imul
sbb
sub
xchg
loopne
adc
fadd
sub
in
in
jmp
or
cmp
or
push
lock
push
or
xchg
add
xor
scas
daa
ret
pushf
cli
fiadd
ficom
mov
fisttp
xchg
sahf
fsub
daa
jbe
lock
les
sbb
pop
adc
mov
cwde
push
pop
je
adc
mov
sbb
or
xchg
sbb
push
adc
data16
push
push
test
jmp
ret
mov
adc
popf
pop
lock
scas
mov
add
jmp
mov
popf
pop
xchg
clc
mov
mov
xor
or
pop
add
push
xchg
(bad)
shl
sar
rol
mov
and
xlat
sbb
push
xor
loope
mov
xchg
and
int
xchg
sbb
iret
cmp
adc
lods
icebp
in
std
rol
mov
mov
or
sub
in
or
pop
call
retf
js
adc
imul
xchg
fstp
or
imul
mov
fdiv
dec
fist
pop
jl
or
test
jnp
scas
cmp
push
pop
jo
adc
(bad)
loopne
ja
cmp
sbb
sub
clc
dec
in
jo
jmp
pop
dec
loopne
or
int
xchg
pop
add
(bad)
add
ins
or
call
adc
cmp
xchg
push
xor
fwait
loop
pusha
ror
sahf
sbb
fldenv
mov
mov
push
out
add
adc
adc
add
out
sub
adc
and
lds
xchg
inc
je
sub
push
inc
sub
add
ins
or
fld
les
jbe
or
xchg
adc
ret
push
outs
loopne
add
cmp
inc
or
jle
jp
adc
or
or
int3
add
adc
mov
push
mov
dec
je
xlat
pop
mov
jne
out
movs
inc
sbb
je
cmp
mov
mov
fadd
bound
mov
int3
test
sub
aam
repnz
sahf
in
xchg
pusha
mov
inc
aam
stos
add
test
jne
and
and
cdq
jbe
cmp
dec
clc
push
jl
add
inc
or
push
mov
add
mov
adc
adc
cmp
ret
xchg
jp
fcom
cli
and
cvtdq2ps
fmul
sahf
sub
xchg
fstp
(bad)
cmp
inc
cmp
mov
jne
es
or
test
inc
pusha
sbb
push
dec
popa
fsub
sub
std
pop
cmp
fcomp
sbb
cld
mov
rcl
pop
push
push
dec
adc
xlat
jb
pop
pop
mov
or
test
lock
call
ret
xchg
jne
and
or
frstor
ins
pop
sub
(bad)
adc
les
fwait
shl
push
dec
push
ss
sti
xlat
and
inc
add
and
imul
movs
and
add
cmp
push
mov
lods
xor
(bad)
(bad)
sub
adc
xchg
xchg
push
add
or
(bad)
cwde
push
or
fcomp
adc
adc
sub
jbe
or
and
stos
jge
test
rcr
sub
sub
adc
xchg
or
sbb
cmp
cmc
or
adc
adc
or
pop
add
or
jmp
xchg
or
add
ss
dec
sbb
test
leave
sbb
test
inc
cmp
rol
adc
call
mov
cli
int3
push
add
mov
add
adc
cld
pop
dec
lar
data16
int3
lock
mov
(bad)
es
xchg
arpl
sbb
pushf
pop
test
jbe
and
in
cld
pop
dec
or
rcr
fmul
or
les
aas
sbb
clc
ja
or
xchg
imul
adc
bound
in
lock
xchg
mov
sahf
lods
mov
cmp
and
fsub
add
jmp
lods
mov
adc
or
mov
pop
int3
dec
call
or
jl
daa
ss
jne
scas
in
or
push
cmp
sbb
adc
push
fcom
or
inc
or
and
dec
enter
pop
pop
data16
ins
mov
leave
and
dec
cmp
hlt
cdq
adc
int3
pop
or
dec
push
and
add
stos
arpl
mov
pop
xor
ss
sar
and
and
jne
cmp
dec
test
mov
mov
jg
mov
cmp
in
loopne
cmp
xlat
outs
in
call
or
push
sbb
pop
xor
daa
lock
dec
lock
mov
mov
sahf
fsubr
sub
push
mov
push
push
pop
mov
add
in
dec
dec
mov
dec
pop
dec
mov
lahf
adc
lahf
pop
cmp
call
push
imul
in
adc
mov
jae
in
cdq
ficomp
ins
cmp
add
in
sar
add
int3
(bad)
shl
lock
add
pushf
dec
mov
adc
dec
cmc
add
movs
mov
sub
add
sub
adc
enter
sub
sub
out
cld
outs
lahf
mov
hlt
jno
rcr
iret
pop
fadd
pop
adc
adc
mov
or
outs
cmp
cmp
imul
and
sahf
in
test
push
add
dec
sbb
sbb
xchg
or
ins
ror
ss
ror
mov
das
adc
loopne
sbb
adc
adc
mov
adc
fidiv
loopne
je
adc
dec
adc
or
push
scas
mov
sbb
aas
mov
adc
call
pop
in
mov
or
les
or
add
dec
(bad)
xor
sub
ficom
pusha
jmp
in
adc
scas
dec
dec
xchg
and
dec
and
(bad)
adc
dec
fist
movs
push
cwde
jmp
xchg
hlt
pop
mov
in
push
and
mov
inc
push
jo
jns
call
push
fisttp
add
lahf
outs
xor
pop
loopne
fmul
fdiv
xor
aam
data16
dec
dec
add
inc
ins
les
pop
das
stos
sbb
lds
pusha
imul
in
dec
mov
(bad)
call
inc
jb
jle
into
and
or
jne
(bad)
jmp
cli
add
in
jnp
sbb
clc
push
aas
aaa
pop
ds
js
add
add
test
sub
dec
push
push
inc
in
aas
mov
sbb
ss
xor
mov
push
xor
sbb
adc
and
out
sar
inc
adc
pop
or
sbb
mov
add
cs
xor
lock
nop
in
sub
pop
pusha
pop
pop
mov
adc
mov
cmp
push
dec
scas
pop
fadd
jo
jno
test
call
or
adc
cmps
lea
jle
or
inc
or
or
sbb
cmps
push
add
and
(bad)
jle
sbb
pop
push
lods
jge
fist
and
shl
dec
mov
pop
cmp
and
in
ror
in
mov
mov
sub
push
loop
sbb
lods
pop
unpckhps
sbb
test
sar
and
lock
in
xchg
in
pusha
mov
xchg
cld
ins
cmp
scas
pop
or
push
xor
pop
jno
push
ins
pop
fs
push
int3
pop
push
or
lds
adc
mov
push
lea
fnstsw
adc
mov
xor
push
and
daa
pop
push
rcr
pop
cmp
mov
cld
mov
fs
add
xchg
or
lahf
sub
inc
sar
mov
jg
and
inc
mov
jl
mov
fcomp
call
jno
push
fwait
mov
and
inc
adc
movs
pop
call
ret
in
fdivr
dec
push
and
ins
and
cmp
pop
inc
add
mov
fiadd
dec
sub
aam
mov
add
int3
pop
in
lock
pop
inc
fcom
jne
dec
es
adc
sbb
inc
add
pop
pop
ror
jns
test
sub
mov
jl
int3
cs
sbb
lods
mov
in
bound
xlat
aam
pop
and
aas
pop
and
cmps
pop
inc
dec
call
xor
push
sbb
imul
call
or
jb
jb
pop
fmul
adc
sub
in
and
pop
xchg
scas
adc
loope
xchg
and
rcl
lock
mov
sbb
lahf
les
push
sub
jne
pop
mov
xchg
pushf
jge
(bad)
pop
push
cld
or
sbb
or
xchg
lods
add
out
(bad)
and
test
sbb
in
aad
jl
es
xchg
push
aad
icebp
es
(bad)
sbb
inc
ret
and
sub
ret
or
cld
maxps
adc
inc
enter
add
sub
(bad)
jb
mov
dec
or
bound
cmps
nop
call
dec
repnz
adc
and
pusha
jl
ret
push
cwde
add
sbb
stos
fstp
aas
rcr
mov
push
fcomp
test
aam
dec
jb
les
xor
jns
lods
inc
and
jns
outs
rcl
ins
dec
mov
ss
push
lods
leave
or
(bad)
(bad)
xchg
lock
cmp
pop
out
hlt
ins
in
cwde
pop
aam
adc
mov
fwait
mov
push
adc
ins
sub
ins
aad
mov
or
sub
sub
push
pop
cmp
cs
sub
pop
add
fisub
sub
inc
mov
adc
sub
inc
in
cmp
push
push
pop
push
les
fild
jo
mov
sbb
xchg
pushf
pop
loopne
pop
fstp
adc
in
adc
stos
sar
jmp
mov
(bad)
jg
ins
push
push
sub
das
fcom
les
cwde
mov
mov
adc
push
int3
fidiv
movs
fild
nop
adc
mov
ja
jo
sar
dec
sub
sub
imul
(bad)
pusha
jb
ins
aas
fdiv
outs
or
aad
xor
jb
jmp
pop
cmps
xchg
xchg
inc
cdq
ror
daa
adc
cmp
rol
pop
xor
fild
loope
add
(bad)
dec
dec
inc
mov
push
mov
inc
or
pop
xor
lahf
mov
sbb
repz
add
push
lahf
ror
adc
fistp
mov
push
adc
add
jb
sub
hlt
jecxz
pop
nop
inc
adc
shl
jge
je
mov
aam
movs
out
and
inc
lods
bound
adc
adc
imul
jl
xchg
imul
in
gs
and
in
mov
mov
fbld
sbb
mov
lods
push
test
add
aaa
or
shr
and
ret
xor
pop
pop
sbb
adc
retf
xchg
sub
mov
push
(bad)
add
sub
ins
adc
mov
cld
ret
jae
mov
lods
cmp
lods
in
scas
push
sar
movs
push
in
mov
les
(bad)
mov
mov
jne
mov
ja
clc
sbb
or
fmul
in
pushf
pushf
sbb
add
pop
fldenv
mov
add
mov
repnz
shr
mov
bound
je
test
push
in
(bad)
cmp
cmp
push
add
retf
scas
ins
adc
sbb
ds
xor
cmp
push
out
bound
fimul
jne
cmp
lods
les
aas
cmp
lahf
sahf
loopne
inc
mov
cmp
mov
cmp
(bad)
xchg
sbb
sub
movs
push
stos
pop
aas
jg
adc
call
lahf
jno
inc
mov
scas
or
stos
lahf
cmp
jb
push
dec
sub
mov
cmp
jmp
ss
add
push
in
sbb
in
in
push
ud0
xor
ds
fbstp
inc
loopne
jnp
cmp
cwde
(bad)
je
and
ds
adc
or
xchg
imul
inc
pop
mov
sub
mov
jg
and
aad
mov
add
add
add
jae
fsub
push
mov
adc
stos
mov
adc
push
sbb
jno
inc
sbb
add
jg
or
and
rol
nop
out
in
mov
ret
cmp
aam
je
lahf
inc
mov
mov
fwait
jl
or
add
pop
shr
(bad)
add
inc
fs
pop
jb
cmp
sub
sbb
add
lea
das
pusha
dec
cdq
test
fs
neg
push
std
xor
xchg
add
test
xor
lock
mov
xchg
mov
mov
aas
outs
lock
pop
in
lock
dec
pop
push
pop
inc
cmp
dec
lods
add
cmps
inc
gs
inc
cld
and
dec
das
jg
add
mov
std
inc
fs
add
(bad)
fist
call
ins
cdq
outs
sbb
adc
inc
int3
mov
pusha
retf
and
cmp
test
inc
sub
pop
repnz
adc
call
fucomip
push
cmp
call
sbb
mov
sbb
icebp
inc
js
popa
imul
push
add
lods
or
gs
lahf
push
mov
movs
jge
dec
pop
jne
pop
call
add
sub
in
mov
cwde
push
lock
ins
lock
les
ins
js
mov
gs
shr
dec
xor
adc
int3
in
cmp
in
inc
xor
loopne
in
retf
mov
push
fs
sub
sub
(bad)
test
shl
inc
imul
mov
xor
xchg
sub
imul
xchg
add
sub
mov
sbb
sbb
push
pop
out
xor
sbb
pop
fstp
cmovg
mov
call
mov
xchg
jno
and
inc
movs
inc
in
adc
mov
push
xor
cmp
aas
in
les
shl
pop
outs
add
mov
sub
adc
push
xor
call
sbb
fcomp
pop
xchg
pop
in
push
cmp
outs
dec
ins
push
push
nop
mov
xchg
push
xchg
and
fs
sub
push
nop
loopne
sar
push
sub
sahf
sbb
test
cmps
mov
pop
dec
and
xor
pop
leave
mov
iret
hlt
pop
js
stos
add
test
movs
pop
aas
dec
dec
add
mov
sar
pop
pop
aam
mov
cld
fimul
xchg
out
enter
nop
pop
adc
xor
xchg
pop
push
jle
or
jnp
fs
loopne
jg
adc
inc
iret
dec
nop
pop
je
mov
jg
hlt
and
fisttp
mov
add
dec
lock
adc
sub
lods
mov
mov
test
sbb
add
dec
push
das
rcr
adc
jno
shl
push
dec
test
pushw
mov
outs
lods
push
mov
lahf
lahf
mov
xchg
fs
in
mov
adc
outs
jmp
dec
adc
shl
pop
rol
ja
pop
test
dec
pop
and
adc
stc
fisttp
xor
or
aas
call
push
rol
push
(bad)
outs
out
add
cld
jge
inc
xchg
outs
ins
mov
adc
sti
es
sbb
imul
dec
xchg
xchg
pop
inc
dec
(bad)
sub
and
movs
lods
fidiv
and
adc
adc
pop
lds
sti
(bad)
xor
pushf
movs
pop
fnstcw
sub
mov
or
sub
ins
sar
sti
adc
mov
dec
dec
xor
movs
or
nop
inc
imul
cmps
mov
int3
mov
jmp
jp
sbb
push
push
retf
jmp
es
pushf
push
and
xlat
push
mov
push
lods
fistp
push
adc
and
in
xor
adc
adc
in
xchg
sub
lods
int3
sahf
sub
cld
cwde
sbb
cs
fcmove
inc
sbb
mov
ins
add
fsub
add
xchg
xchg
das
or
jmp
sbb
ins
pop
and
stos
sbb
ret
sub
jmp
dec
xchg
inc
ficom
leave
xchg
rcl
xchg
pop
fs
jns
sbb
mov
and
pop
sbb
cld
jecxz
sbb
pop
movs
sub
push
clc
pop
fld
cmps
sub
push
mov
and
dec
sbb
hlt
(bad)
in
dec
lds
nop
inc
enter
pushf
les
inc
inc
mov
adc
fild
hlt
gs
aad
inc
enter
ffreep
es
add
test
imul
or
jne
inc
sub
out
inc
jle
xchg
adc
mov
push
sbb
cmp
das
aam
mov
fild
sbb
shr
mov
xchg
mov
dec
dec
push
(bad)
inc
fs
mov
xchg
pop
test
div
cmp
not
push
fcom
enter
mov
xchg
cmps
and
inc
jle
scas
cs
out
ror
mov
add
or
and
pop
sahf
mov
shl
xor
push
std
scas
iret
pop
adc
inc
push
add
movs
xchg
ficomp
(bad)
sar
sub
mov
adc
imul
mov
fucomip
push
aas
adc
lahf
xor
push
jg
test
aas
mov
ins
out
push
xchg
push
(bad)
iret
call
pop
xor
pop
sub
xor
sub
test
add
ret
mov
push
add
jb
nop
outs
aam
add
add
pop
int3
xchg
cs
adc
pop
inc
and
test
xlat
movs
sub
in
gs
jg
sub
lock
leave
xchg
add
dec
add
es
jg
adc
stc
pop
pushf
jg
dec
lds
sub
nop
in
inc
dec
mov
and
call
pop
movs
retf
push
cmps
int
xor
sub
jg
pop
xchg
loope
sub
jae
dec
jmp
daa
nop
popa
jecxz
pop
cwde
mov
and
sub
loope
iret
shl
pop
lds
pop
sub
retf
enter
sub
pop
pusha
jg
ror
sub
or
(bad)
not
add
outs
jg
in
fisttp
fild
aas
push
xchg
xchg
in
adc
in
add
or
push
xor
or
pop
cmp
(bad)
adc
mov
in
pop
xlat
cmps
cmp
or
in
in
adc
pop
mov
inc
jp
push
xor
sbb
xor
les
movs
shl
pop
jno
jle
mov
add
(bad)
lods
add
pusha
jg
dec
scas
imul
call
(bad)
cmp
sbb
dec
pop
stos
ret
out
adc
(bad)
dec
fidivr
cwde
mov
xor
mov
jecxz
sub
js
dec
cmps
dec
jl
movs
in
out
cmps
popf
mov
add
mov
ret
push
mov
nop
popa
xor
gs
sbb
and
(bad)
adc
repnz
inc
shl
out
pop
fisub
jo
and
pop
adc
fs
pusha
out
adc
xchg
dec
pusha
mov
or
mov
pop
cmp
fld
mov
popa
sbb
sbb
adc
fs
in
push
pop
and
jmp
xchg
and
mov
cmp
call
popa
shl
xchg
or
add
jne
std
in
mov
mov
sbb
jnp
xor
std
xor
xchg
fucom
movs
sbb
inc
push
enter
sbb
inc
push
xor
nop
(bad)
rol
sbb
push
lods
sbb
and
sbb
sbb
add
and
fild
add
mov
mov
xlat
nop
sbb
stos
dec
pop
mov
push
lea
add
mov
out
push
cmp
mov
pop
aam
fldenv
xchg
rcr
and
sub
fs
aad
std
dec
std
stos
test
lods
fs
lahf
dec
dec
mov
push
test
daa
lods
add
adc
sbb
fs
push
push
rol
adc
pop
shl
jmp
jbe
ror
retf
push
add
add
and
fdivr
sub
jo
ins
fistp
dec
lds
es
dec
int3
pop
fwait
enter
mov
das
xchg
pop
ffree
gs
pop
and
lods
outs
and
and
sub
lea
xor
add
pop
push
jb
scas
mov
rol
cmp
femms
cwde
rol
or
push
nop
add
iret
xchg
push
leave
leave
aam
addr16
loop
jb
mov
pop
ins
mov
mov
adc
fcomp
mov
mov
push
mov
and
popa
nop
nop
test
push
sbb
mov
mov
sbb
mov
add
ins
iret
push
aad
push
adc
stc
fcom
and
imul
in
push
push
pusha
jge
(bad)
dec
jge
push
or
bound
movs
adc
or
inc
add
imul
dec
outs
paddq
cmp
imul
shl
dec
mov
mov
repnz
push
xchg
nop
std
dec
cmps
or
pushf
or
push
ins
adc
repnz
retf
push
lahf
adc
or
jmp
add
nop
jae
out
or
lods
ret
xchg
add
inc
std
or
push
ret
mov
cmp
(bad)
clc
pop
push
or
xchg
sbb
mov
pushf
dec
push
add
les
xor
movs
in
pop
mov
sbb
ins
scas
jmp
sub
pop
popf
cld
ret
out
ror
xchg
pop
test
add
or
test
inc
mov
xor
dec
mov
xor
iret
in
in
inc
add
movs
ins
jne
scas
ins
xor
lahf
sbb
inc
and
in
(bad)
push
cdq
mov
out
adc
in
test
pop
jb
mov
inc
mov
je
mov
or
in
sub
sub
sbb
mov
add
xchg
movs
cdq
add
nop
mov
jecxz
jmp
pusha
xchg
inc
cmc
mov
popf
mov
cmp
int3
lea
les
inc
mov
adc
inc
dec
outs
jl
sbb
js
jle
out
sub
mov
pop
xchg
dec
or
or
je
push
(bad)
loop
dec
pusha
sub
dec
std
add
push
pop
cmp
and
test
sbb
outs
dec
nop
out
and
es
iret
outs
lods
add
jns
popa
jg
fcom
fcomp
shl
add
pop
nop
add
enter
xchg
shr
xor
xchg
mov
iret
in
(bad)
in
enter
imul
mov
or
adc
pushf
in
xor
(bad)
fdiv
inc
popa
sbb
pop
aam
bound
aas
mov
popa
cmp
enter
inc
pop
xor
pop
fnstsw
movs
lock
call
mov
push
sub
xchg
pop
popa
push
xor
fsubr
fs
imul
mov
rcr
inc
sbb
sub
jmp
pop
cmp
and
call
inc
adc
push
pop
pop
bound
push
or
je
push
rol
rcr
pop
sbb
outs
jecxz
je
mov
mov
mov
jecxz
add
and
popa
je
mov
je
es
xchg
inc
mov
pushf
test
sbb
add
push
rol
pop
add
pop
in
push
add
mov
push
add
mov
xor
jmp
push
test
fdiv
sub
xor
push
push
test
pop
push
add
es
fadd
inc
mov
int3
dec
mov
out
mov
push
les
scas
sub
jbe
mov
ror
jo
jecxz
lea
mov
add
in
sbb
pusha
inc
pushf
inc
xor
and
pop
les
pop
or
enter
fwait
pop
inc
call
arpl
lods
cmp
sub
lock
ins
daa
je
js
nop
sbb
cmp
leave
sti
inc
pushf
push
push
fst
mov
js
xchg
pop
aad
dec
mov
call
lea
pop
push
fs
imul
adc
add
add
add
jp
adc
dec
pop
movs
iret
sets
and
les
inc
cs
in
inc
adc
shl
vmwrite
xchg
fcmovnbe
bswap
fsubp
sbb
pop
fimul
les
(bad)
mov
aas
mov
xor
add
add
xor
inc
lods
mov
pop
adc
cmp
jo
adc
adc
push
movs
xchg
sub
sbb
call
jge
inc
scas
or
rcl
(bad)
or
pop
push
push
mov
fs
pop
jle
dec
adc
jle
fs
dec
mov
adc
je
mov
mov
ret
sbb
dec
push
imul
mov
ret
or
dec
or
(bad)
outs
cs
pop
sbb
lock
mov
xchg
cmps
dec
lock
cld
popf
in
push
in
sub
push
fdivr
(bad)
fdivr
(bad)
adc
xlat
and
jg
sub
lods
mov
and
aaa
iret
(bad)
enter
push
jg
(bad)
fsub
aas
mov
jg
das
test
test
mov
mov
std
mov
xor
(bad)
inc
push
cmp
pop
pop
add
mov
test
punpckhwd
leave
push
mov
mov
pop
adc
stos
fidivr
rcr
dec
(bad)
cmp
adc
inc
inc
and
cs
and
push
add
inc
and
jb
lock
sahf
mov
adc
loope
lods
pop
sar
jno
push
push
ret
es
sar
scas
inc
in
mov
add
lods
in
(bad)
push
(bad)
mov
sub
in
jl
and
adc
sti
sbb
adc
(bad)
rol
push
xchg
fild
pusha
iret
and
inc
mov
add
push
int3
leave
push
add
test
dec
dec
enter
inc
(bad)
cmp
fild
or
push
mov
nop
or
pop
test
xor
inc
call
inc
or
add
pop
rol
pop
or
xchg
push
push
in
push
push
in
mov
push
or
pop
(bad)
aas
call
sub
pop
aas
inc
xchg
push
leave
mov
inc
push
jl
sti
pop
data16
cdq
movs
sub
cmps
test
and
xchg
fisttp
xor
add
ins
cmp
and
and
test
sahf
cmp
imul
xchg
sub
inc
movs
adc
nop
sub
aam
xor
add
push
adc
or
pop
add
sub
popf
cmp
shl
inc
xacquire
es
nop
adc
inc
pop
(bad)
push
scas
movs
mov
xlat
add
lods
imul
lea
jecxz
leave
dec
inc
dec
imul
inc
xchg
push
xchg
mov
test
mov
sub
pop
or
sbb
pop
push
mov
or
add
mov
(bad)
icebp
mov
shl
xchg
xor
inc
xchg
jg
xadd
outs
and
dec
adc
adc
add
dec
scas
or
xchg
mov
add
in
mov
mov
push
stos
or
stos
jo
pusha
mov
pop
sub
call
inc
iret
test
jl
cmovge
mov
mov
xchg
and
adc
jl
or
push
jb
out
sub
ins
ret
test
mov
and
dec
and
dec
xchg
das
das
movs
lahf
ret
pop
fcom
in
in
sub
fwait
(bad)
push
sub
leave
and
inc
in
lock
ins
add
cmp
test
imul
pusha
repnz
test
es
fs
mov
inc
jb
mov
inc
movs
fisubr
sub
bound
mov
xlat
mov
mov
or
lahf
mov
adc
cmp
mov
call
fcomp
ja
and
scas
cld
adc
retf
mov
xchg
push
das
xchg
data16
and
sub
cmp
cmp
cmps
shl
mov
cmp
int
sbb
inc
add
dec
and
jb
or
push
nop
or
dec
fist
push
lods
int
adc
loope
dec
jb
xor
pushf
(bad)
fsub
jb
mov
enter
test
cmp
dec
enter
cmp
xchg
dec
enter
enter
cmp
cmp
enter
cmp
add
leave
lea
adc
dec
push
pusha
mov
retf
or
call
pop
mov
sbb
adc
pusha
lahf
test
add
sub
adc
dec
dec
pop
outs
dec
push
loopne
call
in
lahf
pop
jmp
push
aas
mov
test
repnz
inc
dec
adc
jg
fisttp
add
das
fcom
adc
(bad)
cmps
and
das
popa
jne
dec
stos
inc
mov
cmp
mov
aad
sub
and
sbb
int3
in
outs
xchg
dec
pop
mov
and
cwde
and
adc
fs
sub
xchg
mov
nop
add
jno
or
cmps
in
xchg
test
arpl
pushf
jb
inc
xor
int3
mov
mov
ss
xchg
std
ret
dec
imul
outs
outs
pop
mov
pop
ficom
xchg
mov
adc
sbb
cdq
movs
dec
mov
leave
and
es
leave
and
int3
enter
add
and
jo
or
xchg
clc
(bad)
mov
push
add
xchg
and
add
mov
xchg
push
fistp
test
(bad)
sub
xchg
pop
add
data16
xchg
rcr
push
adc
inc
dec
or
scas
adc
xchg
push
adc
lea
jmp
repz
call
add
retf
mov
movs
push
and
xchg
pop
sbb
hlt
popa
je
ret
pop
les
(bad)
call
jg
movs
jecxz
popa
sbb
fcom
adc
and
fmul
xchg
jecxz
mov
adc
int3
retf
push
test
arpl
add
dec
cmp
push
pop
enter
mov
pop
xchg
sbb
sub
movs
movs
scas
sbb
and
inc
push
push
test
xor
in
enter
and
xchg
push
clc
cli
enter
fisubr
sti
jno
cwde
jbe
adc
jbe
adc
adc
cli
ss
xchg
arpl
adc
in
inc
fsub
in
sti
mov
xor
test
enter
loopne
and
push
enter
cmp
mov
inc
push
pop
ins
mov
jo
and
mov
loope
inc
test
add
cwde
cmps
and
clc
lods
cmc
dec
rcr
(bad)
pop
adc
test
mov
push
or
push
aas
ins
xor
pop
pusha
xor
lock
cdq
cwde
outs
dec
rol
cwde
arpl
lods
stos
adc
pop
clc
pushf
loop
xchg
pop
cdq
and
rol
xchg
mov
xor
test
nop
xchg
cdq
pop
lods
mov
in
and
add
jmp
pop
call
mov
cmp
sub
xor
aad
sbb
in
call
std
jg
jmp
nop
dec
xchg
mov
int
mov
imul
lods
repz
sub
repnz
(bad)
push
cmp
inc
lods
mov
pop
loop
or
push
inc
xchg
add
je
scas
mov
fcom
jo
xor
mov
lahf
mov
loopne
mov
cmp
mov
inc
add
cdq
add
daa
fwait
or
in
scas
or
fwait
inc
sbb
and
or
inc
pop
retf
xor
mov
test
inc
and
shl
jmp
and
push
sub
dec
sub
mov
setl
xchg
and
mov
int
nop
inc
int
fistp
mov
in
mov
jo
add
cmovge
push
adc
(bad)
nop
jo
in
jno
jmp
movs
mov
dec
scas
jbe
inc
lea
push
push
in
fs
popf
cmp
sbb
and
sahf
jl
fs
push
xchg
push
jb
mov
stos
push
pop
sbb
cmp
or
dec
xor
cwde
xchg
sbb
add
mov
mov
mov
adc
push
pop
push
in
and
push
jmp
(bad)
adc
xor
or
mov
lahf
pavgb
loopne
add
inc
fstp
and
push
das
fisttp
and
lahf
(bad)
xlat
push
in
in
call
inc
push
es
call
aad
cdq
jbe
adc
fistp
sub
mov
or
inc
xor
call
(bad)
push
jg
or
xor
mov
lahf
xor
sub
test
sbb
outs
sub
mov
and
shl
fdivr
adc
in
adc
inc
ins
adc
xor
sub
jl
fnstsw
dec
bnd
pop
adc
lds
setg
shl
loopne
pop
pushf
mov
(bad)
std
aam
ins
jb
sbb
cmp
mov
xchg
cmps
and
ins
add
dec
sbb
out
scas
call
inc
xchg
add
daa
int
in
fsubr
push
mov
fadd
jae
ins
pop
and
not
sbb
dec
loopne
out
rcl
(bad)
inc
inc
or
and
aam
ins
les
sbb
nop
out
push
dec
retf
mov
or
cld
add
mov
mov
push
popa
mov
pop
dec
pop
rcl
jg
adc
add
fst
lods
or
pop
pop
sbb
ss
and
adc
nop
dec
xor
jl
stos
and
mov
cld
or
imul
mov
adc
push
push
in
std
ins
mov
inc
push
push
cmp
push
jmp
or
adc
sbb
add
adc
xchg
(bad)
repz
jle
sbb
ror
repnz
int3
mov
inc
test
xchg
imul
jno
pushf
dec
in
adc
out
test
jbe
sbb
mov
cwde
mov
push
nop
push
in
adc
pusha
jb
and
sub
push
push
loopne
cmps
cmp
and
push
adc
call
xchg
sbb
or
nop
popa
inc
add
inc
mov
add
ficom
xchg
inc
ds
aam
scas
not
and
call
loopne
icebp
cmp
mov
shr
cmps
clc
adc
cmps
dec
aas
test
nop
ftst
jb
pushf
cmp
sbb
and
sbb
add
dec
push
imul
sti
inc
cmps
xor
or
mov
and
mov
pop
das
mov
dec
pop
adc
aad
or
inc
les
jecxz
mov
add
int3
and
xor
test
scas
dec
(bad)
cmp
addr16
(bad)
mov
pop
test
or
sub
(bad)
xor
adc
sub
sbb
sub
mov
adc
adc
push
je
nop
adc
add
fwait
xor
(bad)
add
in
mov
dec
dec
and
sbb
fsub
sub
das
push
fadd
in
pop
test
dec
in
mov
jg
and
nop
stos
mov
cmp
pushf
imul
es
ss
fs
je
jl
cdq
fs
dec
test
test
pushf
push
cdq
fs
dec
inc
mov
dec
mov
xchg
dec
fwait
jbe
inc
push
imul
sub
sbb
add
idiv
add
nop
imul
and
iret
aam
movs
add
xor
in
pop
stos
push
mov
(bad)
rcr
in
sub
add
dec
dec
push
sbb
ins
call
cli
mov
cmp
xchg
sbb
retf
test
ins
inc
push
push
xchg
jl
mov
es
adc
rol
push
test
je
dec
cli
test
add
retf
cmp
sbb
add
mov
push
outs
add
(bad)
std
dec
xchg
daa
test
dec
xchg
adc
ds
or
xchg
outs
or
sub
in
xchg
aaa
pop
not
push
mov
and
add
mov
neg
adc
adc
add
fiadd
fnsave
cs
sbb
push
mov
mov
fst
aas
mov
cdq
nop
and
enter
sbb
pop
mov
or
or
dec
or
ficom
xchg
mov
ins
mov
(bad)
inc
lahf
mov
jns
add
aas
push
shr
or
mov
pop
outs
jge
push
and
and
push
inc
nop
push
or
and
jns
mov
mov
pop
add
cmp
pop
jo
ins
dec
push
dec
push
pop
xor
fbstp
xchg
xchg
add
fwait
fs
js
js
xor
es
mov
out
shl
lods
pusha
test
call
(bad)
sbb
dec
mov
mov
iret
dec
sub
jo
fidiv
fwait
loope
xlat
pop
shr
cmp
call
mov
push
sub
test
push
nop
aad
inc
retf
ret
sbb
loope
and
mov
adc
in
cmps
inc
xchg
pop
xchg
pusha
lds
mov
lock
sub
and
push
call
repnz
pop
mov
mov
jb
fbstp
and
inc
mov
cmp
mov
fadd
add
imul
sub
inc
add
(bad)
out
inc
je
and
sbb
add
and
jl
jmp
aas
adc
inc
enter
adc
mov
(bad)
or
jb
sub
clc
sti
nop
mov
and
or
lock
jne
sbb
and
cmp
pop
and
and
and
and
js
dec
mov
shl
cmps
add
pop
inc
jmp
adc
or
mov
(bad)
mov
imul
dec
fcomp
rcl
loope
jmp
sub
adc
scas
jnp
inc
adc
cmp
and
shl
in
sbb
pop
mov
daa
in
call
xchg
dec
mov
test
add
fidiv
fistp
or
cmp
repz
jg
mov
cmc
ss
int
mov
inc
ss
cmp
mov
lock
add
nop
mov
shl
add
out
loopne
adc
mov
cmp
adc
int
(bad)
aam
add
dec
mov
arpl
sub
or
popa
lods
stc
fdiv
mov
dec
cs
dec
dec
inc
inc
inc
pop
xor
cs
ins
pop
push
push
sti
(bad)
aas
nop
dec
push
sub
lahf
cmp
shl
aam
loope
repz
push
or
add
jns
and
ror
add
pop
or
aas
or
outs
(bad)
(bad)
(bad)
jnp
mov
add
adc
mov
rcl
xchg
adc
push
or
jmp
cmp
rcl
cmp
retf
pop
mov
add
into
pop
adc
jns
ret
loope
xchg
or
ds
repz
(bad)
jnp
push
int3
mov
add
out
pop
cli
mov
jl
or
mov
daa
int3
inc
je
push
aaa
mov
pusha
ret
mov
arpl
mov
aas
bound
and
outs
popa
mov
outs
outs
aaa
mov
in
push
addr16
popa
jb
gs
adc
jae
adc
jb
jb
jmp
mov
data16
and
cs
inc
outs
jo
jb
addr16
je
cmp
xor
xor
dec
gs
outs
sub
inc
popa
imul
jns
outs
(bad)
dec
sahf
imul
cwde
nop
and
sahf
sub
or
test
push
push
jge
xor
pop
push
fiadd
das
add
xchg
outs
out
jle
nop
or
das
pop
add
cld
outs
out
and
add
adc
add
add
jge
xor
pop
or
push
ins
fdivrp
fild
sub
or
adc
pop
push
jo
xor
sar
or
pusha
and
jns
repz
loopne
push
pop
sbb
jns
dec
push
adc
cmp
cmp
add
pop
adc
out
push
(bad)
jns
out
lock
adc
adc
out
sub
or
fs
add
jg
ja
inc
call
cwde
add
out
loopne
sahf
push
jl
fcomp
iret
repz
mov
cmp
repz
add
mov
and
les
bound
repz
movs
add
repz
pop
sbb
jp
aam
push
iret
repz
mov
mov
aas
iret
repz
add
or
xor
repz
ss
pcmpgtd
cmp
rep
push
xchg
repz
in
or
pushf
arpl
repz
fcomp
push
outs
sahf
out
out
mov
dec
cld
sub
(bad)
adc
sahf
jno
ret
xchg
out
sahf
mov
out
jns
pop
sbb
sahf
xchg
shr
mov
ret
sahf
mov
push
sahf
sub
mov
mov
push
sahf
out
jns
gs
out
test
pop
sbb
call
sahf
ins
sub
xchg
out
jns
push
adc
out
jns
jae
(bad)
arpl
xchg
out
sahf
cmps
add
jns
pop
sbb
sahf
xchg
(bad)
imul
or
cmp
mov
push
pop
sahf
xchg
out
ja
into
addr16
jns
out
scas
pop
xchg
sahf
xchg
out
pop
pop
sahf
jg
ja
cmp
outs
push
das
mov
jp
(bad)
push
dec
(bad)
inc
or
nop
or
cs
mov
cs
jmp
in
mov
mov
movs
nop
or
cs
or
cs
lods
in
in
cs
fnstsw
std
ret
nop
or
mov
mov
inc
cs
retf
stos
in
cs
fisttp
sti
nop
or
mov
xlat
mov
cs
or
iret
in
cs
out
lahf
cs
fistp
enter
push
out
add
dec
sbb
adc
add
adc
fisttp
lods
inc
ficomp
push
add
adc
or
sbb
push
inc
push
jle
test
sbb
pop
push
imul
add
rcl
xor
or
dec
ss
repnz
outs
mov
push
jae
xchg
fisubr
inc
data16
mov
dec
out
jle
(bad)
dec
or
jb
arpl
outs
addr16
and
rcr
push
popa
je
sub
fild
popa
ins
imul
and
and
mov
lods
cwde
bound
aas
mov
mov
mov
push
je
jb
das
fstp
fcomp
and
jae
jae
je
aaa
mov
inc
lock
pop
jo
popa
outs
lods
cmp
mov
and
enter
fs
outs
sub
xchg
jne
push
and
imul
and
mov
jns
bound
jae
add
ret
pop
fs
or
inc
sbb
(bad)
aas
xor
adc
int
into
arpl
sub
jne
(bad)
outs
imul
outs
and
(bad)
addr16
pop
sub
mov
mov
mov
adc
imul
inc
sbb
ins
mov
inc
cs
aas
add
add
inc
cs
add
jmp
adc
add
ins
(bad)
dec
or
out
iret
scas
dec
dec
outs
inc
push
pop
pop
or
dec
dec
dec
dec
or
or
xchg
push
pop
add
pop
out
outs
xchg
add
int3
sahf
out
sahf
sub
ins
in
sbb
jns
out
pop
fdivr
jl
jns
out
add
jns
and
jns
out
push
shl
mov
out
sahf
out
or
jns
sub
jns
out
pop
fidivr
mov
out
push
xchg
sahf
out
sahf
cmps
data16
xchg
jns
out
push
(bad)
ss
out
sahf
out
push
mov
sahf
out
sahf
cs
outs
out
push
sahf
jns
out
pop
fidivr
mov
out
add
jns
and
jns
out
push
shl
mov
out
sahf
out
or
jns
sub
jns
out
pop
fnstcw
mov
out
add
out
sahf
and
xchg
jns
out
push
aad
mov
out
sahf
out
or
out
sahf
sub
popf
jns
out
pop
fnstsw
out
std
adc
or
xchg
push
xchg
iret
repz
push
push
rcl
xor
cmp
repz
mov
jae
repz
repz
mov
dec
dec
retf
retf
sub
cmp
repz
stos
imul
cmp
repz
sbb
iret
pop
pop
fcmovnu
cmp
cmp
repz
mov
cmp
repz
pop
pop
xchg
inc
inc
mov
repz
cmps
addr16
cmp
repz
pop
xchg
xchg
iret
repz
push
push
xlat
xlat
aaa
aaa
cmp
repz
mov
ja
repz
repz
repz
dec
dec
iret
iret
das
das
cmp
repz
scas
outs
outs
out
repz
repz
pop
pop
lahf
lahf
iret
repz
pop
pop
(bad)
aas
aas
cmp
repz
mov
pop
scas
repz
inc
push
and
jns
out
push
xor
sahf
out
sahf
dec
sub
pop
cmp
out
js
inc
and
out
jns
out
push
xor
add
jns
inc
ret
and
pop
repnz
push
or
jns
out
add
or
sahf
out
sahf
add
or
push
push
jns
out
push
push
add
or
jns
out
add
out
sahf
add
or
pop
pop
adc
mov
sub
or
mov
or
or
sub
pushf
cmp
lea
add
test
jb
sbb
pop
pop
lods
adc
jecxz
jb
xchg
mov
add
pop
jb
jb
adc
push
pop
push
leave
inc
jb
sbb
test
add
les
cmp
repz
adc
repz
repz
sub
cmp
repz
inc
push
pusha
jo
mov
pop
loopne
mov
ins
pusha
out
push
fisttp
sbb
outs
scas
pusha
lahf
sar
(bad)
(bad)
jmp
add
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
(bad)
call
fisttp
movs
mov
aad
mov
rcl
mov
sub
(bad)
(bad)
call
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
(bad)
inc
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
(bad)
(bad)
dec
outs
cmp
imul
addr16
add
aam
dec
std
test
(bad)
push
mov
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
(bad)
(bad)
cmp
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
(bad)
jmp
add
or
or
and
or
adc
stos
sbb
(bad)
(bad)
jmp
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
and
aam
call
xor
mov
push
loope
(bad)
(bad)
(bad)
mov
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
(bad)
(bad)
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
fistp
ficom
gs
aam
pop
popa
mov
into
pop
cmp
(bad)
push
jmp
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
(bad)
(bad)
(bad)
dec
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
jmp
and
and
test
or
mov
popa
into
push
stc
ficomp
(bad)
(bad)
call
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
mov
call
mov
cmp
(bad)
(bad)
call
jmp
fild
push
fdiv
or
test
fs
ds
or
or
(bad)
dec
push
in
dec
xchg
daa
scas
or
sahf
pop
jge
xchg
(bad)
shl
add
(bad)
adc
(bad)
inc
push
imul
xor
sbb
push
imul
aam
loopne
call
nop
pop
jp
adc
dec
frstor
fistp
mov
mov
aad
(bad)
(bad)
dec
(bad)
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
(bad)
(bad)
(bad)
push
mov
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
(bad)
(bad)
(bad)
mov
popa
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
(bad)
(bad)
(bad)
jmp
add
lds
or
sub
mov
cmps
call
ret
shl
sbb
scas
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
(bad)
jmp
mov
loop
sub
or
mov
xchg
or
(bad)
(bad)
push
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
idiv
jg
jmp
ja
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
jmp
(bad)
clc
sar
imul
push
js
or
push
add
mov
(bad)
(bad)
inc
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
(bad)
(bad)
(bad)
fdiv
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
mov
add
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
sub
mov
or
sbb
add
sub
sbb
clc
ss
push
sub
(bad)
jmp
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
(bad)
(bad)
jmp
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
mov
(bad)
jmp
adc
mov
xlat
mov
sbb
test
cmp
jmp
(bad)
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
(bad)
(bad)
(bad)
call
and
cmps
popa
ja
mov
out
repz
gs
fisubr
fbld
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
add
or
mov
cwde
sub
and
pop
nop
sti
mov
(bad)
(bad)
(bad)
jg
fisubr
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
(bad)
call
jmp
(bad)
sbb
adc
push
lea
fnstcw
mov
(bad)
jmp
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
jg
pop
retf
mov
mov
lea
push
cwde
xlat
ficom
test
add
sar
loope
xchg
retf
les
jb
out
imul
push
inc
lahf
test
mov
adc
push
sbb
adc
inc
and
cmps
imul
inc
out
and
cmp
dec
mov
jg
(bad)
dec
xor
mov
lods
out
sar
mov
adc
stos
inc
clc
(bad)
jmp
leave
jmp
sti
push
jns
das
mov
(bad)
(bad)
inc
sbb
sbb
repnz
dec
push
jo
gs
out
jle
(bad)
(bad)
(bad)
(bad)
push
out
mov
xchg
rcl
cmp
mov
js
mov
test
jmp
xchg
sbb
cli
mov
mov
scas
adc
(bad)
(bad)
call
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
(bad)
(bad)
(bad)
call
ss
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
or
(bad)
dec
adc
pushf
sub
add
adc
cwde
mov
ror
xchg
bound
sbb
(bad)
inc
hlt
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
jmp
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
(bad)
inc
in
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
(bad)
(bad)
(bad)
call
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
(bad)
cmp
inc
lods
(bad)
loope
int3
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
dec
jo
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
(bad)
(bad)
(bad)
inc
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
(bad)
(bad)
(bad)
call
push
jns
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
(bad)
(bad)
call
fldenv
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
icebp
mov
adc
jns
movs
dec
mov
(bad)
call
xchg
movs
daa
sub
repnz
in
and
out
mov
(bad)
(bad)
(bad)
cld
shl
es
xchg
aas
mov
adc
out
sar
(bad)
(bad)
call
imul
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
(bad)
jg
xchg
push
push
add
test
pop
mov
mov
ret
movs
hlt
retf
push
mov
inc
push
dec
add
(bad)
sti
mov
test
or
stc
sbb
xchg
fmul
or
mov
inc
leave
in
push
ja
pop
(bad)
(bad)
(bad)
jmp
sbb
das
sbb
fild
sbb
repnz
adc
(bad)
(bad)
call
pop
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
(bad)
(bad)
(bad)
mov
out
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
add
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
jg
(bad)
fsub
leave
pop
sub
and
mov
and
mov
(bad)
(bad)
(bad)
js
pop
fidivr
sub
ds
sbb
sub
call
das
ror
jo
out
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
(bad)
(bad)
(bad)
call
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
std
pop
dec
(bad)
jnp
cs
fdivrp
cmp
nop
es
xchg
push
mov
loop
in
ja
xor
cmp
push
repz
ins
arpl
sub
shr
aam
cmps
gs
fs
add
lea
addr16
xlat
dec
pop
mov
outs
jns
(bad)
call
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
movs
(bad)
inc
and
inc
inc
xor
inc
jae
cmovo
out
inc
sbb
clc
push
push
xor
mov
mov
mov
clc
push
mov
adc
push
fcomip
(bad)
call
jle
push
call
push
and
in
pop
mov
movs
pop
lock
add
sub
(bad)
(bad)
call
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
(bad)
(bad)
(bad)
jmp
xor
in
or
es
mov
out
push
sahf
mov
in
in
das
call
add
ss
jmp
pop
imul
fcom
cld
sahf
ins
xchg
(bad)
test
(bad)
(bad)
jmp
sbb
sbb
sti
inc
les
clc
dec
jmp
(bad)
jg
movs
es
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
(bad)
push
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
(bad)
(bad)
(bad)
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
(bad)
(bad)
call
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
pop
(bad)
jmp
ret
xchg
ret
mov
call
dec
retf
lahf
lds
inc
jmp
pop
inc
int3
inc
ins
xchg
sbb
ror
mov
add
inc
fcom
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
(bad)
(bad)
(bad)
jmp
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
(bad)
(bad)
mov
repz
dec
mov
or
(bad)
in
popf
or
(bad)
fild
xchg
mov
(bad)
mov
push
pop
and
(bad)
(bad)
push
fadd
arpl
pop
xchg
shl
test
into
(bad)
(bad)
(bad)
inc
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
call
movs
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
(bad)
(bad)
(bad)
jmp
xor
mov
mov
cmovns
push
dec
adc
(bad)
push
push
mov
mov
fidivr
pop
pop
mov
jmp
ret
(bad)
jmp
mov
out
scas
mov
push
xchg
bound
pop
imul
xor
push
push
cli
jg
fs
outs
add
(bad)
mov
xor
(bad)
(bad)
push
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
(bad)
(bad)
(bad)
dec
jb
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
(bad)
(bad)
(bad)
jmp
(bad)
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
sub
dec
xchg
xchg
loopne
fstp
(bad)
jg
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
sub
les
test
and
loop
outs
dec
jg
or
(bad)
jge
aad
sar
call
dec
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
(bad)
(bad)
out
cli
adc
call
fwait
pop
aas
test
mov
sbb
mov
jbe
push
(bad)
(bad)
(bad)
dec
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
mov
jle
push
das
retf
jnp
dec
ja
prefetchw
or
jae
mov
cmc
mov
outs
inc
nop
call
cld
pop
out
sbb
ficom
(bad)
(bad)
(bad)
jmp
mov
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
(bad)
out
clc
mul
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
fwait
(bad)
(bad)
(bad)
mov
fist
inc
addr16
fwait
push
add
in
mov
dec
jmp
fist
inc
arpl
cmp
(bad)
call
pop
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
(bad)
(bad)
mov
add
and
push
cdq
scas
xlat
loopne
retf
xor
mov
dec
(bad)
pop
in
pop
shl
push
mov
inc
aad
in
jmp
bound
inc
xchg
out
xor
cmp
(bad)
dec
in
sub
push
in
cmp
pop
cmp
outs
xor
or
xchg
(bad)
cmps
cmp
adc
add
dec
dec
cmc
scas
repz
xor
mov
call
dec
leave
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
(bad)
jmp
icebp
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
(bad)
(bad)
(bad)
dec
mov
fld
push
jmp
xor
(bad)
and
push
mov
cmps
mov
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
(bad)
(bad)
(bad)
(bad)
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
(bad)
(bad)
push
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
(bad)
mov
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
(bad)
(bad)
inc
imul
ss
test
(bad)
cs
mov
call
mov
(bad)
in
push
loope
into
cs
out
add
add
pop
std
pop
(bad)
(bad)
(bad)
(bad)
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
(bad)
push
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
ret
(bad)
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
(bad)
push
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
jmp
ret
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
(bad)
(bad)
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
(bad)
(bad)
(bad)
(bad)
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
fs
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
and
(bad)
mov
ins
cwde
push
imul
mov
(bad)
(bad)
call
inc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
(bad)
(bad)
jmp
add
ror
aam
ror
mov
xor
mov
ins
fstp
(bad)
jmp
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
mov
(bad)
(bad)
(bad)
cmp
xlat
push
cmp
hlt
mov
mov
and
mov
movs
movaps
mov
dec
dec
mov
or
and
outs
jl
pop
push
(bad)
(bad)
(bad)
call
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
in
mov
leave
les
and
(bad)
(bad)
call
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
(bad)
(bad)
(bad)
(bad)
inc
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
jmp
mov
mov
sbb
mov
jl
sti
aam
gs
mov
(bad)
call
dec
test
into
mov
mov
movs
inc
cmp
(bad)
(bad)
(bad)
call
les
(bad)
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
(bad)
dec
dec
pop
fisttp
jno
daa
add
mov
or
xchg
mov
and
mov
(bad)
jmp
mov
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cmp
(bad)
jmp
mov
xor
mov
mov
add
stos
(bad)
(bad)
call
popf
shl
add
es
jecxz
or
xchg
cmp
push
jp
pop
test
push
iret
or
add
mov
setae
mov
(bad)
(bad)
push
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
(bad)
(bad)
(bad)
(bad)
jp
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
inc
cld
outs
push
fadd
les
repnz
sar
addr16
mov
fisttp
add
push
sub
scas
or
dec
add
add
jmp
mov
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
(bad)
(bad)
(bad)
(bad)
mov
lds
or
sub
add
xlat
jmp
sub
sahf
(bad)
(bad)
(bad)
dec
fwait
fs
arpl
es
mov
or
ss
jb
addr16
(bad)
inc
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
(bad)
fcomip
fsubr
mov
fcmovnu
and
aam
inc
push
fiadd
int
mov
es
outs
mov
loope
mov
ja
pop
out
punpckhdq
push
cmp
adc
or
(bad)
(bad)
jmp
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
xchg
mov
mov
cmps
(bad)
(bad)
(bad)
jmp
popa
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
sahf
lds
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
cld
call
ss
push
ficom
and
addr16
jp
les
mov
outs
cmc
(bad)
jmp
outs
sub
or
mov
sub
sbb
xor
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
enter
(bad)
(bad)
dec
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
(bad)
(bad)
call
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
pop
fwait
add
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
(bad)
(bad)
jmp
cmps
mov
and
call
shl
ret
fiadd
gs
(bad)
(bad)
(bad)
jg
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
(bad)
scas
cli
inc
repz
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
cld
(bad)
call
lahf
mov
mov
cmp
out
cmp
call
pusha
cmps
mov
dec
push
lds
jge
fisubr
cmp
jns
add
jmp
dec
sub
(bad)
xchg
adc
mov
cmp
lds
and
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
cld
or
mov
pop
pusha
inc
jg
xchg
xchg
push
xchg
(bad)
ror
test
(bad)
(bad)
(bad)
cli
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
push
push
cmp
std
imul
and
add
jmp
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
xchg
(bad)
(bad)
(bad)
push
stos
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
jmp
sub
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
(bad)
(bad)
(bad)
call
xchg
jl
retf
mov
cli
call
js
cmps
cmp
sbb
or
(bad)
(bad)
push
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
sar
(bad)
jmp
fdiv
adc
out
movs
add
test
mov
push
call
cwde
pop
ins
(bad)
adc
ss
daa
mov
fnstsw
ja
(bad)
mov
nop
xchg
mov
rcr
hlt
lds
std
jmp
cli
(bad)
out
hlt
push
out
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
push
scas
xchg
loop
jg
nop
cld
arpl
lods
mov
(bad)
(bad)
push
in
test
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
(bad)
(bad)
(bad)
jmp
cdq
mov
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
(bad)
(bad)
jmp
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
add
(bad)
mov
scas
xchg
adc
lea
or
mov
pop
inc
sbb
(bad)
(bad)
push
les
push
push
test
cwde
inc
jle
test
ror
cmp
(bad)
call
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
(bad)
jg
call
jle
jnp
sub
sub
xchg
mov
xchg
push
mov
call
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
gs
(bad)
dec
(bad)
mov
sbb
mov
daa
repnz
mov
mov
or
(bad)
(bad)
out
and
loope
or
mov
jle
shl
imul
adc
cmp
ja
fsub
push
jle
hlt
out
push
or
test
(bad)
mov
adc
xor
ret
jmp
aam
add
pop
lods
test
push
retf
ret
lea
dec
push
test
adc
(bad)
(bad)
call
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
jmp
call
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
(bad)
(bad)
call
lock
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
(bad)
(bad)
(bad)
call
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
inc
ss
test
test
xchg
aad
xor
imul
adc
frstor
in
mov
call
(bad)
cmps
daa
aam
es
dec
dec
and
cdq
and
and
adc
sub
sub
mov
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
push
(bad)
shl
div
pop
scas
jb
xor
jbe
dec
(bad)
(bad)
mov
jne
fwait
inc
jle
fdivr
dec
mov
jge
or
jl
bound
out
cli
(bad)
(bad)
jns
je
js
push
xchg
jp
mov
std
ins
mov
xchg
cli
xchg
fisub
nop
jmp
out
clc
call
add
cmp
arpl
popa
sub
jmp
rcl
xlat
aam
fs
mov
dec
xlat
retf
and
mov
pop
outs
pop
dec
dec
fs
arpl
dec
sbb
(bad)
(bad)
(bad)
dec
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
(bad)
(bad)
push
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
(bad)
mov
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
sbb
pop
outs
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
jmp
mov
out
fldcw
jp
add
out
in
paddsb
(bad)
(bad)
jmp
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
(bad)
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
repnz
xor
add
lock
inc
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
(bad)
(bad)
(bad)
(bad)
ds
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
jmp
movs
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
clc
(bad)
(bad)
call
inc
dec
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
jmp
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
(bad)
(bad)
inc
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
jecxz
(bad)
mov
lods
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
aam
(bad)
call
mov
pop
mov
mov
sbb
mov
or
mov
push
mov
sbb
call
test
cmps
arpl
aad
or
test
mov
into
stos
movs
outs
(bad)
(bad)
(bad)
(bad)
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
(bad)
(bad)
(bad)
inc
clc
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
(bad)
(bad)
dec
mov
mov
mov
punpckldq
xlat
and
adc
test
xchg
pushf
jg
(bad)
push
mov
sbb
cmp
xor
(bad)
mov
or
aaa
std
(bad)
dec
(bad)
bound
xor
xlat
cmp
or
jg
dec
outs
mov
dec
(bad)
mov
fucom
fbstp
pop
arpl
(bad)
(bad)
(bad)
call
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outs
(bad)
dec
es
lods
jg
sub
mov
xchg
rcr
mov
(bad)
(bad)
(bad)
(bad)
jmp
lods
or
leave
mov
mov
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
(bad)
(bad)
push
loop
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
add
fmul
jo
dec
xchg
lahf
les
and
sub
sahf
push
dec
jg
outs
test
or
(bad)
(bad)
(bad)
inc
sbb
and
lds
sub
mov
inc
and
(bad)
xchg
test
(bad)
(bad)
(bad)
(bad)
call
cmp
xor
not
adc
iret
push
retf
mov
ret
dec
(bad)
(bad)
jmp
pop
mov
pop
mov
test
fistp
ret
imul
dec
das
push
ret
ja
imul
setl
(bad)
sub
mov
cwde
cmc
(bad)
(bad)
(bad)
(bad)
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
call
xlat
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
(bad)
(bad)
(bad)
(bad)
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
(bad)
(bad)
inc
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
cli
(bad)
(bad)
push
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
jmp
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
cmp
pop
lock
pop
inc
pop
mov
in
sbb
bound
and
inc
sbb
jmp
out
mov
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
outs
(bad)
jmp
or
cmp
movs
add
sub
scas
cmc
(bad)
(bad)
jmp
test
and
mov
mov
sbb
ror
sar
add
jmp
movs
not
cmp
and
dec
imul
cmc
xlat
jle
adc
jmp
(bad)
mov
ret
push
jp
jmp
ss
fnop
add
arpl
and
stc
popa
call
fwait
pop
mov
mov
ss
dec
call
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
(bad)
(bad)
inc
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
call
xchg
mov
inc
sub
inc
call
inc
xchg
(bad)
inc
push
xor
es
jmp
fdiv
inc
mov
bound
(bad)
(bad)
(bad)
call
fist
cs
push
es
mov
cld
mov
adc
push
ja
dec
into
shr
mov
(bad)
(bad)
(bad)
jmp
xchg
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
(bad)
(bad)
jg
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adc
retf
imul
mov
jle
cmp
cdq
in
(bad)
(bad)
(bad)
jg
mov
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
dec
sbb
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
popa
xchg
fiadd
jo
cmp
ins
and
jb
daa
bound
inc
add
data16
gs
sbb
mov
aaa
imul
mov
call
cld
inc
popa
jb
or
push
mov
(bad)
(bad)
cld
lock
lea
push
enter
inc
repnz
imul
add
add
sub
or
sub
(bad)
pop
mov
push
mov
mov
(bad)
jae
mov
sbb
cmp
adc
cmp
cmp
adc
push
les
cmp
dec
add
xchg
pop
mov
or
adc
mov
popa
push
shr
fld
mov
add
push
add
add
mov
mov
and
xor
inc
add
out
sahf
out
ffreep
push
add
sbb
sbb
jns
sbb
inc
aaa
push
jns
(bad)
mov
dec
repnz
inc
aas
gs
gs
ds
cs
sbb
lods
sub
jo
ins
or
int
aas
scas
inc
pop
push
dec
dec
inc
cmovle
dec
xor
ja
dec
dec
dec
inc
push
inc
push
pop
inc
push
pop
push
inc
push
pop
xlat
test
dec
dec
dec
inc
push
inc
inc
adc
nop
mov
add
adc
mov
sub
sahf
and
cmps
lock
mov
call
ss
or
adc
(bad)
mov
daa
sub
sub
sub
cs
ds
(bad)
(bad)
jg
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
loopne
movs
push
sbb
pop
pop
cmp
popa
bound
shr
ins
ins
(bad)
push
ins
jp
jno
je
jbe
js
jp
jl
jle
add
sub
add
inc
push
lock
test
fsub
mov
and
sub
dec
push
and
adc
nop
sub
test
or
fadd
in
add
in
and
push
add
add
mov
and
add
add
fucompp
inc
adc
ins
adc
fdiv
add
pop
push
adc
shr
push
mov
and
or
test
(bad)
(bad)
(bad)
dec
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
(bad)
dec
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
(bad)
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
jno
loop
mov
cmp
or
movs
fsub
in
add
add
pfacc
mov
sgdtd
mov
push
imul
sub
push
push
cmp
dec
outs
je
nop
arpl
enter
add
jnp
sub
outs
jb
push
xor
dec
test
and
(bad)
mov
aas
punpcklbw
inc
sub
and
js
int
fidivr
je
mov
ins
cmps
arpl
jb
add
add
add
repnz
cmp
jae
add
push
jo
retf
and
jns
in
repnz
add
das
das
and
push
pop
mov
inc
(bad)
gs
test
jbe
dec
dec
(bad)
out
sbb
push
push
jo
dec
fucomi
out
std
cmps
jne
addr16
jae
add
ins
out
sar
div
imul
scas
popa
push
mov
mov
popa
out
sbb
outs
popa
and
adc
pop
inc
das
pop
mov
sub
iret
mov
ins
in
jns
out
out
sbb
sahf
jne
arpl
xlat
mov
pop
inc
jae
push
fimul
js
fs
sub
imul
fsubp
outs
inc
addr16
ds
fdiv
mov
neg
iret
mov
icebp
pop
arpl
(bad)
jg
dec
cmp
cmp
cmp
fs
dec
and
jns
mov
xlat
mov
push
das
das
adc
dec
push
inc
mov
gs
ins
bound
jne
(bad)
pop
dec
arpl
adc
cmps
popa
sub
jne
inc
jne
(bad)
mov
outs
xchg
inc
jo
imul
bound
push
inc
popa
outs
adc
std
popa
je
jb
popa
daa
inc
pop
adc
jae
fbstp
fs
sbb
dec
outs
outs
and
jae
mov
jbe
sub
out
aas
scas
inc
jnp
shr
push
dec
or
jb
adc
fdiv
mov
fild
gs
xchg
jl
cmps
jne
inc
inc
xlat
jmp
sub
out
ja
fnsave
shr
xor
push
add
in
mov
adc
xchg
jmp
push
pop
sbb
xor
push
push
cmp
and
or
pusha
push
js
js
popf
mov
or
fpatan
hlt
enter
xchg
jo
sbb
pop
and
dec
mov
push
add
ss
call
jmp
(bad)
inc
inc
inc
aas
add
aaa
movs
test
sub
dec
pop
je
scas
and
mov
fwait
aaa
dec
jecxz
arpl
daa
scas
ins
push
push
sbb
sub
out
jmp
and
popa
imul
xchg
aas
imul
ds
jp
ror
frstpm(287
jge
adc
gs
shl
push
outs
jmp
dec
ja
aaa
jo
mov
jnp
or
ins
sub
push
imul
jo
ja
cmp
jecxz
popf
(bad)
aas
inc
push
data16
pop
mov
dec
sub
xchg
into
jg
cmp
inc
sub
(bad)
jb
inc
lock
sti
arpl
lahf
cmp
pusha
sbb
outs
inc
xlat
fimul
or
jno
add
daa
mov
push
jno
fbstp
outs
bound
loope
aas
adc
sbb
js
lds
jbe
mov
fcom
fist
ins
mov
iret
xor
fbld
inc
mov
retf
xor
xor
fidivr
sub
adc
cs
(bad)
js
shl
enter
and
cmp
aam
(bad)
or
ds
push
cs
sahf
aaa
jg
ret
and
lods
shr
dec
fs
adc
jne
jbe
jb
push
shl
xchg
pop
adc
jg
cmp
mov
pop
stos
and
das
mov
sbb
jg
mov
fild
push
fsubr
aas
or
pusha
or
arpl
loope
aaa
xchg
push
mov
and
mov
ds
or
sbb
pop
imul
rol
popf
ret
push
(bad)
mov
push
cmps
outs
inc
sub
das
jae
jb
mov
cmp
fisttp
ins
pop
je
test
scas
cmp
mov
mov
mov
rol
xor
out
mov
mov
jo
adc
mov
push
or
pop
mov
and
or
retf
xchg
and
sub
movs
rcl
mov
jo
sub
mov
retf
xchg
das
inc
adc
mov
sbb
jb
mov
mov
and
mov
jns
inc
jp
icebp
je
xchg
cld
push
cmp
js
imul
mul
sub
sub
pushf
aaa
xor
xchg
outs
cmp
ucomiss
add
jnp
lock
addr16
ins
idiv
mov
fwait
ja
outs
ret
sbb
cmp
push
fwait
cmp
arpl
push
pop
lahf
ins
mov
xchg
jp
xchg
jo
sbb
mov
int
xor
je
mov
xchg
mov
sbb
sbb
xchg
test
xchg
dec
dec
sahf
fisttp
pop
sbb
dec
sahf
lea
mov
nop
xchg
xchg
xchg
dec
repnz
xchg
mov
mov
and
sahf
or
out
push
push
sbb
or
sbb
imul
sbb
je
and
(bad)
fisub
outs
inc
jae
jne
push
pop
dec
popa
pop
popa
dec
arpl
aaa
or
and
scas
xor
mov
movs
cmp
sub
push
and
jp
ja
jp
ins
in
sub
adc
or
sti
jge
ss
ins
daa
addr16
mov
fxam
addr16
outs
arpl
jge
mov
cdq
inc
popa
ins
gs
add
pop
add
jae
imul
sub
xchg
dec
xchg
in
or
test
jp
ins
mov
mov
or
jne
shr
nop
lea
and
xlat
xchg
not
pop
popa
imul
cmp
popa
pop
or
adc
stc
xlat
inc
ins
outs
fs
test
sti
xor
outs
pop
cs
jae
and
addr16
popa
mov
and
and
test
daa
sub
jne
loopne
movs
fstp
mov
adc
pop
jnp
adc
sbb
and
push
lods
pop
call
ins
mov
je
jo
je
sar
xchg
out
gs
test
jo
jbe
dec
outs
imul
sbb
xor
xlat
and
jae
daa
mov
js
dec
imul
out
push
imul
dec
jp
fidiv
cmp
push
pop
adc
push
lods
jb
push
data16
popa
mov
jb
cwde
xor
pop
xchg
fmul
add
imul
pop
sub
push
pop
add
leave
xor
popa
mov
cmp
push
(bad)
pop
push
cmp
imul
fisubr
sub
sbb
pop
popa
push
fisub
or
or
xchg
lods
mov
je
xor
sub
out
test
(bad)
arpl
xchg
sbb
stos
mov
mov
lods
daa
mov
dec
push
cdq
repnz
fist
dec
mov
call
jmp
into
fsubr
inc
lock
std
daa
mov
ja
call
push
xadd
xchg
push
cwde
dec
dec
inc
mov
mov
dec
push
jns
push
test
jl
dec
push
push
push
pop
inc
aas
sub
(bad)
sbb
mov
popf
or
dec
test
mov
imul
dec
movs
pop
push
call
repnz
dec
(bad)
inc
push
inc
test
inc
sbb
push
stc
cmps
push
stos
clc
inc
inc
inc
in
jnp
push
call
pop
cmp
jle
mov
dec
push
jo
scas
dec
dec
push
push
push
inc
inc
inc
push
xor
cmps
test
dec
or
push
imul
fadd
push
call
test
dec
or
sub
dec
pop
dec
dec
inc
push
call
adc
lahf
cmps
rcl
pop
test
sub
fsubr
imul
jns
xchg
mov
push
mov
dec
dec
lods
inc
pop
inc
scas
loop
push
movs
xchg
jl
pop
(bad)
dec
dec
je
dec
pshufw
outs
jg
(bad)
in
dec
or
dec
das
xor
inc
inc
dec
fsubp
sub
push
sbb
clc
sbb
out
push
push
dec
(bad)
test
psubusb
sti
(bad)
out
ror
or
sbb
adc
add
or
adc
sbb
xchg
out
push
add
dec
lahf
dec
mov
fdivr
push
add
adc
xchg
inc
add
pusha
xor
adc
mov
pop
mov
push
inc
pop
pop
push
push
and
pop
mov
sub
jb
pop
sbb
or
js
jo
add
mov
or
cmc
arpl
push
push
inc
sub
fmul
xor
dec
js
xchg
inc
dec
add
adc
inc
jmp
aaa
movs
push
fmul
mov
add
loopne
inc
xchg
fild
idiv
sar
retf
jno
icebp
pusha
inc
mov
or
ret
movs
add
xor
add
add
data16
(bad)
mov
aas
cmp
gs
xor
fcom
jae
ins
outs
addr16
fwait
mov
sahf
ja
pop
outs
adc
inc
rcr
pop
cmp
jo
repz
push
xor
jb
fcmovu
cmp
push
add
bound
push
jae
fcomp
in
jb
xor
icebp
aaa
js
adc
adc
dec
ins
ins
fld
les
jns
jmp
sbb
(bad)
jno
in
inc
imul
pop
outs
iret
rcr
sub
add
ss
mov
sub
jmp
mov
pop
inc
and
sbb
cwde
inc
(bad)
xchg
adc
movs
push
aaa
lods
push
jl
ins
sub
cli
jb
cmps
adc
pusha
outs
imul
jne
je
fiadd
adc
gs
xor
inc
push
imul
mov
inc
bnd
and
and
jae
daa
test
adc
ds
gs
shl
lods
push
dec
sbb
fcomp
pop
add
call
inc
fimul
pop
inc
cli
ror
jo
cdq
rol
pop
es
(bad)
loopne
adc
pop
and
out
add
lock
retf
sysexit
or
inc
je
loopne
and
jne
push
adc
or
jle
dec
mov
(bad)
sbb
mov
mov
fisubr
data16
xor
push
lds
sahf
xchg
sub
out
and
shl
or
or
cmps
test
adc
push
fcmovnb
inc
pop
loop
mov
xchg
xlat
add
cdq
loopne
mov
inc
js
sub
and
inc
push
xchg
xchg
pusha
sbb
popa
rcr
sub
outs
cmp
inc
nop
or
es
popf
adc
jne
out
sub
xchg
xor
pop
aaa
mov
add
ret
inc
sub
mov
sbb
int
inc
outs
dec
bound
jbe
cmp
xchg
popa
data16
ss
stc
pusha
fsubr
push
mov
cmp
dec
(bad)
xchg
ins
inc
jns
daa
pop
and
int3
ins
push
or
push
dec
mov
cmp
pop
push
out
and
push
push
push
rcl
jb
cmp
popa
addr16
sbb
jns
mov
jne
ja
pusha
inc
push
shr
jbe
(bad)
push
push
lahf
loope
pop
popf
fs
and
jbe
push
add
pop
dec
pushw
pop
pop
inc
adc
inc
cmp
push
and
push
and
inc
es
dec
jne
mov
lock
push
addr16
xchg
pop
pop
pop
push
push
mov
dec
loope
or
cmp
add
pusha
ins
call
in
jbe
sub
pushf
add
ret
jbe
fwait
and
xchg
inc
shr
push
push
push
dec
test
dec
push
into
fs
aam
cmp
xchg
(bad)
fild
dec
jge
add
push
movs
shl
bound
mov
fs
push
sbb
xor
das
gs
jmp
jg
test
mov
or
add
pop
das
or
mov
xchg
daa
xchg
mov
rcr
jmp
popw
pop
cmp
out
scas
stc
cmp
add
ds
sub
mov
jl
push
addr16
jle
jns
add
push
add
sub
mov
jne
sub
xchg
xchg
scas
rcl
mov
cmp
or
cmp
scas
push
sub
out
pop
call
push
jb
(bad)
cdq
push
in
imul
push
gs
shl
or
mov
inc
(bad)
sahf
stc
dec
popaw
sbb
je
imul
fs
jo
sub
fcom
mov
sub
out
iret
mov
sbb
repz
out
mov
fimul
(bad)
shr
enter
out
ficom
mov
mov
mov
cmp
fnstcw
push
mov
aaa
inc
push
cwde
xchg
jns
push
and
nop
push
mov
test
push
cmp
jl
loope
jns
out
add
js
jo
jns
out
push
out
sahf
pop
push
push
dec
dec
inc
jns
out
cmp
sbb
repz
mov
hlt
loopne
mov
iret
pusha
inc
sbb
mov
sahf
mov
pop
jns
out
dec
sub
adc
repz
mov
call
out
ss
and
mov
rcl
jg
cmp
sbb
or
int3
inc
gs
push
icebp
push
mov
fist
pop
cs
ja
lahf
push
dec
jb
dec
outs
mov
push
mov
ss
clc
inc
sbb
cmp
jo
pop
(bad)
loope
add
push
inc
outs
js
push
add
push
xchg
sub
push
sub
add
in
call
pushf
and
enter
xor
push
dec
inc
dec
cmovns
add
div
push
sub
mov
add
cld
mov
repz
test
mov
nop
inc
nop
es
lahf
inc
mov
push
xchg
dec
adc
mov
enter
xchg
mov
outs
jno
xor
jmp
pop
iret
dec
mov
aas
and
or
add
dec
pop
and
push
pop
xor
in
add
fld
inc
pop
push
inc
mov
shr
ror
inc
jb
retf
je
mov
push
les
daa
push
outs
jo
cmp
dec
and
sub
js
jbe
add
or
dec
popa
jns
jecxz
outs
ficomp
popa
fnstsw
pop
mov
fs
or
pop
sub
adc
in
add
add
or
add
add
add
gs
(bad)
bound
bound
and
dec
add
add
push
stos
test
inc
cwde
imul
push
or
inc
dec
or
adc
ins
xlat
fdivr
cmp
adc
push
inc
push
cmp
imul
pop
je
cmp
ins
sahf
jp
add
adc
repz
adc
add
ds
rcr
int3
(bad)
repz
push
lsl
add
xor
or
cmp
lea
cmp
add
jae
pop
popf
xchg
lock
or
ss
inc
cwde
xchg
movq
pushf
sbb
xor
addr16
jae
test
inc
scas
pop
je
pushf
cmps
inc
xchg
aas
or
add
ds
das
aaa
outs
bound
inc
stc
ret
(bad)
jmp
pusha
loopne
nop
push
shl
mov
lock
(bad)
(bad)
jg
enter
call
cmp
inc
les
fs
xchg
push
aam
mov
hlt
or
(bad)
(bad)
dec
in
sbb
pop
fdivr
jl
add
(bad)
adc
jb
or
(bad)
(bad)
dec
push
sbb
jp
push
xchg
cmps
data16
xchg
push
(bad)
ss
test
(bad)
(bad)
dec
outs
out
push
sahf
pop
fidivr
mov
inc
shl
popa
loope
xchg
push
shl
mov
icebp
or
(bad)
(bad)
dec
imul
cmp
inc
lds
xchg
push
aad
mov
cmc
(bad)
mov
sub
popf
pop
fnstsw
(bad)
(bad)
(bad)
inc
arpl
adc
jae
or
imul
fwait
pop
fstp
mov
(bad)
(bad)
inc
addr16
xchg
push
xlat
aaa
mov
test
scas
outs
out
pop
lahf
pop
fistp
mov
ss
inc
xor
shl
pusha
mov
push
jo
lock
test
adc
xchg
aam
movs
in
je
hlt
or
enter
fsubr
push
(bad)
(bad)
cmp
clc
or
mov
sbb
pushf
fsubr
lods
in
cmp
mov
rcl
xchg
shl
popa
mov
push
jno
icebp
add
push
xchg
aad
movs
in
jne
cmc
or
leave
sbb
fldcw
imul
stc
or
pop
popf
(bad)
jge
std
add
ret
xchg
shl
bound
push
jb
repnz
inc
xchg
push
push
xchg
(bad)
data16
out
jbe
test
mov
sbb
fisubr
push
jmp
mov
into
push
pop
sahf
fisubr
outs
scas
out
ds
inc
inc
add
push
xchg
shl
arpl
push
jae
repz
inc
xchg
pop
push
xchg
xlat
daa
cmps
out
ja
test
pop
fld
imul
cmp
sti
nop
pop
lahf
fild
outs
scas
out
aas
jg
(bad)
push
and
xor
pusha
jo
nop
mov
lock
and
inc
(bad)
(bad)
(bad)
call
jno
xchg
mov
icebp
add
and
inc
push
bound
xchg
mov
repnz
and
inc
(bad)
(bad)
(bad)
call
jae
xchg
mov
repz
and
inc
push
fs
xchg
movs
mov
aam
hlt
add
(bad)
(bad)
(bad)
call
jne
xchg
movs
mov
aad
cmc
push
push
es
push
data16
xchg
cmps
mov
(bad)
out
pop
pop
daa
aaa
inc
(bad)
(bad)
(bad)
call
ja
xchg
cmps
mov
xlat
out
or
sub
dec
pop
push
mov
or
sub
dec
sub
(bad)
call
jns
cdq
test
stc
or
sub
dec
jle
(bad)
(bad)
dec
(bad)
cli
or
sub
dec
pop
imul
stos
mov
or
sub
dec
pop
ins
jl
(bad)
(bad)
dec
in
cld
or
pop
ins
jge
popf
lods
mov
push
push
cs
pop
outs
jle
(bad)
(bad)
dec
fsubrp
dec
pop
das
aas
dec
pop
outs
jg
lahf
scas
mov
and
adc
ja
rol
ins
inc
inc
jl
add
jg
cmp
adc
les
inc
out
push
jp
dec
sub
es
cli
shr
fild
or
sahf
jmp
pop
inc
jp
test
mov
pop
scas
mov
or
push
jbe
cs
push
xor
lods
push
mov
jae
not
sbb
sub
ret
fnstcw
or
cmp
cmp
repnz
in
pop
in
(bad)
cli
inc
js
cmp
add
mov
aaa
(bad)
xchg
inc
cld
call
cmp
repz
outs
(bad)
(bad)
in
mov
fsubr
cmp
jle
xor
imul
std
mov
(bad)
std
push
shl
out
mov
push
xor
int
cdq
and
ins
pop
mov
shl
push
mov
ror
add
inc
not
sbb
cmp
add
repz
add
sahf
repnz
ret
adc
sub
arpl
adc
loopne
sub
das
xchg
add
or
add
call
cld
outs
add
add
add
add
jge
movs
add
add
add
sar
add
add
add
add
mov
add
add
add
in
(bad)
(bad)
(bad)
inc
mov
pop
xchg
pop
fld
sub
jp
retf
or
enter
jns
aad
(bad)
(bad)
dec
xor
xchg
or
or
mov
or
int3
push
cmp
scas
mov
xchg
adc
adc
adc
adc
mov
adc
mov
push
mov
inc
pop
rcl
data16
sbb
sbb
push
sbb
sbb
sbb
call
icebp
pop
mov
and
and
and
and
jmp
mov
jnp
(bad)
(bad)
jmp
inc
sub
jecxz
mov
mov
adc
xor
imul
xor
and
cmp
cmp
cmp
inc
adc
inc
and
inc
(bad)
(bad)
mov
cld
inc
jl
xchg
dec
mov
iret
dec
lock
adc
dec
popa
push
mov
push
jmp
push
sbb
push
xchg
pop
(bad)
pop
cmp
pop
or
pusha
sahf
popa
in
bound
fs
gs
(bad)
jmp
imul
ins
and
lea
jno
jae
je
jbe
ja
(bad)
jg
jg
jp
jl
jge
jg
call
test
xchg
push
(bad)
(bad)
(bad)
(bad)
(bad)
out
mov
xchg
xchg
xchg
call
jns
cmp
mov
push
stos
and
scas
outs
jnp
push
mov
mov
mov
sar
(bad)
(bad)
inc
movs
les
xchg
int3
xchg
into
cdq
shl
(bad)
int3
fsub
(bad)
fcom
fild
loope
pop
sbb
jmp
jno
xchg
out
jmp
dec
lock
adc
stc
je
jnp
ret
xchg
test
or
movs
sbb
fild
pop
sbb
cwde
fild
loope
retf
cs
xor
xor
jmp
mov
inc
xor
cmp
cmp
lea
inc
icebp
inc
sbb
(bad)
(bad)
inc
inc
pop
inc
jb
xchg
dec
lahf
dec
movs
dec
cmps
dec
movs
dec
lahf
dec
xchg
push
mov
push
gs
dec
push
(bad)
(bad)
call
mov
xlat
push
mov
mov
pop
ss
pop
pop
xlat
pop
movs
pop
outs
pop
cmp
pop
add
(bad)
inc
pusha
xchg
bound
arpl
arpl
lods
popaw
addr16
(bad)
(bad)
jg
sub
push
imul
fldcw
sub
outs
jne
sbb
jo
jno
jno
jb
jae
(bad)
(bad)
(bad)
fnstenv
je
jne
jne
jbe
jbe
ja
js
js
jns
jns
jp
jp
jnp
jl
jl
pop
clc
jmp
jle
jle
jg
jg
test
(bad)
(bad)
inc
sbb
and
stos
test
test
xchg
xchg
mov
mov
(bad)
out
clc
mov
xor
mov
lahf
mov
lea
dec
(bad)
(bad)
dec
push
xchg
(bad)
xchg
cmp
xchg
xchg
or
xchg
rcl
and
(bad)
jmp
xchg
add
dec
cdq
mov
call
inc
pushf
mov
sbb
call
ret
lahf
xchg
lahf
sti
lahf
arpl
cdq
mov
retf
mov
sti
(bad)
(bad)
(bad)
jmp
daa
movs
mov
mov
pop
cmps
jns
(bad)
(bad)
test
test
(bad)
(bad)
jmp
aas
stos
sahf
stos
cld
stos
pop
lods
mov
lods
shr
jmp
(bad)
(bad)
(bad)
jmp
adc
and
xor
cmp
xchg
mov
mov
mov
push
(bad)
push
cmps
mov
mov
mov
mov
mov
(bad)
inc
mov
pop
mov
pop
mov
add
mov
test
sti
mov
dec
mov
inc
mov
cmp
rol
(bad)
(bad)
jmp
ret
addr16
mov
pop
les
cmps
(bad)
test
lds
add
(bad)
(bad)
(bad)
(bad)
call
mov
enter
leave
mov
xlat
leave
and
jo
mov
retf
mov
(bad)
in
retf
cmp
test
ror
sbb
data16
int
int
into
xchg
into
fmul
es
jo
mov
sar
jg
lods
cwde
enter
sar
rcl
(bad)
(bad)
(bad)
call
jno
mov
aam
aam
aam
aad
aad
aad
aad
(bad)
test
retf
(bad)
adc
pop
xlat
lahf
(bad)
(bad)
(bad)
call
in
sub
jb
mov
(bad)
ficomp
lahf
(bad)
fisubr
fld
mov
idiv
(bad)
(bad)
(bad)
fstp
sbb
fmul
fisttp
xchg
fst
fstp
ficomp
fsubp
fisub
fild
lods
fcomip
fbstp
out
adc
mov
loope
loope
loop
(bad)
(bad)
(bad)
jmp
mov
retf
loop
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
in
in
in
out
(bad)
(bad)
(bad)
jmp
popf
out
out
out
out
out
out
call
fucomp
sbb
jmp
pop
(bad)
(bad)
(bad)
(bad)
jmp
push
jmp
jmp
jmp
in
dec
in
mov
int3
in
or
dec
in
xchg
(bad)
in
add
inc
add
(bad)
(bad)
out
jle
mov
out
je
mov
out
out
sub
push
lock
(bad)
(bad)
jg
icebp
cwde
icebp
aad
adc
dec
repnz
(bad)
repnz
aas
repz
mov
repnz
push
cmps
hlt
loope
mov
push
sbb
cmc
iret
cmc
or
inc
test
imul
mul
neg
clc
push
(bad)
(bad)
(bad)
(bad)
clc
nop
clc
retf
clc
add
stc
mov
in
stc
daa
cli
popa
cli
fwait
cli
aam
push
sti
dec
sti
cmp
(bad)
(bad)
(bad)
sti
sub
cld
frndint
adc
dec
std
test
mov
(bad)
data16
lahf
(bad)
xlat
(bad)
adc
dec
inc
(bad)
mov
xor
inc
inc
cmp
xor
das
cs
daa
daa
cmps
mov
and
and
and
and
pop
pop
push
sbb
in
call
daa
daa
xchg
adc
pop
xor
adc
cmovl
push
jb
or
nop
or
jb
jb
or
dec
nop
pop
adc
sub
and
sar
call
sub
aas
pop
pop
jl
sub
cmp
and
inc
clc
enter
imul
sub
les
pop
shl
rol
mov
call
jnp
xor
inc
inc
inc
xor
inc
inc
sub
(bad)
inc
sub
sub
inc
inc
inc
cmp
inc
jge
jnp
ds
mov
retf
mov
daa
add
inc
mov
sub
aas
sbb
or
mov
rol
dec
fsubr
sub
nop
push
mov
mov
jb
fstp
mov
iret
or
push
outs
add
dec
popa
push
jno
sbb
mov
push
xor
out
rcr
mov
outs
jp
aaa
push
repz
fs
xchg
push
loop
mov
mov
cmp
or
push
dec
rcl
ja
pop
adc
(bad)
xor
xor
adc
xor
adc
dec
(bad)
or
xor
cmp
add
sbb
in
xor
pop
mov
sbb
addr16
xor
add
bound
ror
(bad)
cs
dec
sti
sub
(bad)
sub
js
xor
ror
repnz
sub
xchg
retf
inc
push
ja
(bad)
push
lea
sub
xor
sbb
in
fdiv
inc
stos
or
stos
mov
inc
mov
pop
jns
dec
mov
push
sbb
add
push
inc
push
fcom
ret
pop
ins
aaa
mov
test
push
(bad)
sub
ja
push
cmp
out
push
mov
adc
sar
sbb
mov
mov
and
push
jb
not
dec
arpl
mov
jnp
mov
pop
jnp
xchg
daa
scas
add
scas
xor
pop
xchg
inc
add
mov
sbb
ins
xchg
cmp
jb
mov
jne
mov
inc
jb
pop
ins
xor
lods
xchg
push
loop
sub
test
sub
(bad)
mov
fcomp
push
(bad)
push
dec
pop
aad
stos
pop
sbb
outs
lods
movs
arpl
pop
bound
sti
pop
mov
dec
pop
jae
adc
push
fld
shr
jl
jne
add
jne
or
jnp
or
xchg
adc
rcl
addr16
or
push
ins
adc
mov
test
neg
mov
stos
ja
mov
ins
fbld
push
fidivr
fstp
bound
pop
dec
and
jp
add
pop
ins
mov
add
fs
dec
daa
out
das
outs
iret
pop
push
jp
shr
pop
shr
sti
out
mov
push
ins
xchg
dec
add
adc
add
stc
adc
pop
jns
jns
pop
ja
add
push
loopne
enter
pop
ins
cmps
rol
out
and
loopne
and
push
and
cs
mov
(bad)
and
push
pop
mov
mov
jae
popa
in
push
ret
add
ret
cmp
cs
dec
push
push
mov
add
fist
out
outs
cld
je
push
and
mov
call
mov
mov
lea
int
sbb
das
sub
out
cmp
or
popw
arpl
inc
ror
dec
lahf
fcomp
pop
das
bnd
sub
ins
imul
xor
cld
rcl
jns
popa
jb
(bad)
ins
outs
outs
je
pusha
bound
jo
nop
inc
ds
cmps
push
imul
xor
add
push
and
ret
inc
add
and
mov
int
push
mov
rcl
xchg
ror
retf
mov
mov
add
add
rol
add
push
out
mov
imul
pcmpeqd
call
inc
push
push
mov
int
fstp
pop
xor
and
cmps
mov
push
jle
mov
push
cmps
push
neg
mov
lock
ja
iret
inc
pop
mov
pop
inc
ror
add
cmp
outs
popa
fs
inc
push
inc
ins
cwde
sub
sbb
push
ror
xlat
add
aaa
popa
adc
add
cs
test
push
mov
inc
daa
(bad)
outs
lods
bound
imul
pop
imul
sub
arpl
mov
retf
push
push
pop
imul
jo
mov
push
gs
call
ss
cmps
je
jno
dec
loope
outs
loope
inc
adc
ret
ret
dec
mov
sahf
jmp
add
xor
fcom
out
and
aas
mov
cmp
xor
sbb
pop
adc
adc
bndstx
mov
dec
pop
or
mov
outs
rol
(bad)
jmp
pop
aaa
and
das
fist
mov
push
dec
ins
xchg
mov
jg
jb
ds
adc
push
xor
not
fdiv
jns
adc
popa
ja
inc
add
sbb
mov
xlat
add
aas
pop
lock
add
lods
pusha
xor
(bad)
push
or
pop
or
mov
pushf
jb
imul
test
cli
sbb
jae
and
pushf
sbb
mov
inc
hlt
popa
mov
push
sbb
ret
mov
mov
cs
xchg
xchg
lds
dec
gs
inc
xor
xor
jnp
xor
popa
jbe
test
aam
int
pop
inc
cmps
sub
jb
push
aaa
mov
push
inc
mov
not
mov
adc
jg
mov
cmps
std
pushf
test
pop
arpl
ins
aas
ja
pusha
mov
mov
mov
and
jbe
pushf
jb
adc
call
and
outs
push
ss
add
push
mov
sysret
jns
not
(bad)
lock
mov
xchg
add
inc
sahf
mov
inc
push
jo
push
ret
mov
push
mov
push
call
fild
sahf
fwait
inc
pushf
mov
nop
(bad)
xchg
shl
sub
xor
xchg
mov
nop
ins
mov
shl
shr
or
mov
pop
add
sub
(bad)
rol
adc
pop
ja
pop
test
inc
inc
push
dec
dec
dec
retf
dec
push
das
push
inc
push
dec
dec
dec
inc
dec
inc
dec
inc
(bad)
idiv
mov
and
and
cmp
ret
je
cmps
add
inc
and
and
imul
push
jo
aaa
push
push
push
scas
je
dec
mov
inc
add
inc
lock
cmp
fist
inc
outs
ins
sub
mov
pop
aas
jae
rcr
fwait
mov
aas
pop
aas
retf
inc
pusha
sbb
mov
push
adc
and
pop
inc
xor
iret
gs
jae
out
btc
pop
sbb
push
mov
adc
call
fwait
cld
imul
dec
(bad)
adc
add
push
push
shl
addr16
or
mov
aad
sar
clc
addr16
push
rcr
or
sbb
dec
pusha
jb
jb
mov
inc
loop
inc
ins
jo
popa
xchg
data16
into
pop
adc
and
mov
loopne
pop
jae
(bad)
jo
push
pop
xor
pop
xor
ror
(bad)
add
jae
and
sbb
aaa
call
and
sbb
into
xchg
stos
mov
dec
jecxz
xor
scas
mov
inc
int3
mov
mov
push
test
inc
imul
popa
adc
pushf
outs
out
je
pop
enter
out
xor
xor
pop
xor
ss
shl
retf
jne
add
cmp
pop
cmp
pop
sub
push
mov
pop
jo
pop
test
outs
js
pop
rcl
xor
add
dec
and
jge
inc
jmp
xchg
sub
arpl
pop
mov
add
fwait
pop
xchg
ins
or
pop
ss
call
pop
and
shr
loop
test
push
cmps
or
fsubr
jo
mov
loope
scas
push
es
lds
sar
imul
aad
xchg
das
jae
push
push
sbb
mov
sbb
jnp
xor
pop
sub
xchg
jbe
pop
aad
adc
mov
sbb
push
adc
cmp
or
pop
ja
or
icebp
pop
push
pop
sbb
pop
gs
mov
push
fadd
aas
bound
adc
jo
dec
jg
sub
nop
in
jg
xchg
xchg
in
dec
and
mov
cmp
ds
arpl
push
in
inc
jle
dec
mov
call
ror
std
retf
aaa
add
bound
and
sbb
dec
add
sbb
(bad)
test
popa
fdivr
mov
jb
ja
push
pop
ins
jns
int
mov
lahf
daa
mov
push
not
daa
jne
xchg
mov
sub
div
(bad)
fsubr
jae
out
fstp
mov
(bad)
das
cwde
inc
sti
inc
test
ins
sbb
mov
or
arpl
das
push
mov
bound
xlat
pop
ins
push
add
jg
das
cmp
adc
inc
and
daa
pop
ss
sbb
inc
pop
push
and
das
je
ins
popa
jns
pop
outs
xchg
add
mov
movq
mov
shl
pop
jns
xor
dec
pop
out
ins
das
icebp
and
ins
fld
add
push
imul
cs
add
push
push
dec
push
push
inc
push
inc
xchg
in
add
dec
sbb
jecxz
inc
inc
xor
sahf
test
push
adc
ins
mov
cmp
fs
push
inc
xor
pop
imul
jns
jne
mov
cmp
xor
sbb
jg
cdq
pop
or
cli
or
add
mov
popa
sbb
and
pop
es
rsqrtps
ja
(bad)
(bad)
aas
imul
enter
test
cld
pop
adc
add
xchg
pop
pop
mov
out
adc
and
add
loopne
test
jns
ins
mov
push
daa
sub
es
pop
not
cmps
and
aaa
(bad)
mov
add
pop
nop
fild
push
nop
fistp
or
push
and
push
pop
ror
fidivr
lock
inc
push
push
pusha
cmps
lods
addr16
mov
jo
jmp
mov
mov
cmp
push
push
es
call
add
jno
std
nop
sbb
and
test
js
ja
sub
cmp
pop
or
push
xor
xchg
dec
inc
dec
inc
(bad)
rol
xchg
push
fisubr
gs
cs
(bad)
dec
loopne
aaa
cmp
add
add
sub
xor
test
inc
fidivr
out
lds
jl
jo
mov
iret
xchg
js
lock
xor
pop
das
inc
push
and
(bad)
loopne
out
xchg
xor
dec
mov
push
pop
sub
mov
dec
iret
or
gs
out
dec
gs
popa
mov
loopne
mov
mov
mov
cld
mov
inc
ins
xchg
ins
pop
jnp
xor
mov
xor
sub
sub
cmp
mov
inc
inc
xor
mov
inc
aaa
xor
fld
js
ds
arpl
int3
jmp
repz
je
mov
aaa
or
out
(bad)
mov
popa
sub
inc
and
lods
out
lea
pop
cmp
add
lock
sar
xor
inc
ss
inc
lock
lock
cmp
aaa
ss
mov
cmp
inc
xor
add
popf
push
sub
dec
iret
pop
ja
lock
pop
pop
jb
push
retf
js
inc
popa
and
or
sbb
and
sbb
test
xor
mov
push
push
push
mov
arpl
push
dec
pop
jmp
inc
(bad)
ins
bswap
and
mov
scas
push
movs
scas
in
rcr
out
cmp
push
mov
inc
test
sbb
xchg
pop
or
xchg
gs
sub
bound
loopne
ins
push
dec
push
push
push
mov
cmp
ins
pop
imul
dec
jbe
aas
push
pop
xchg
and
mov
lock
mov
adc
inc
jmp
lds
cmc
pop
dec
sbb
lahf
push
or
repnz
and
sbb
adc
jle
mov
pop
outs
outs
xchg
add
sub
sub
inc
test
cli
xchg
sbb
push
dec
inc
push
sub
jmp
inc
or
xchg
or
ins
adc
pop
or
push
mov
mov
rol
sub
and
dec
popa
out
and
mov
push
push
pop
push
add
dec
rol
sbb
imul
inc
mov
pusha
dec
mov
loop
adc
mov
jle
dec
repnz
add
mov
es
adc
mov
and
ds
ds
test
das
das
inc
lods
pop
gs
inc
and
iret
cvtps2pi
sar
add
bswap
inc
(bad)
mov
mov
push
push
sbb
stc
mov
arpl
push
cmp
loopne
inc
shl
daa
mov
dec
test
js
push
inc
xchg
or
arpl
shr
mov
add
xor
sbb
test
rol
push
or
adc
mov
add
add
and
js
mov
imul
ins
sbb
jae
out
add
dec
jg
lock
ja
inc
ss
mov
mov
gs
mov
ficom
xchg
aad
push
imul
cdq
mov
push
imul
pusha
adc
dec
add
inc
cmp
dec
mov
pushf
ja
ret
mov
or
dec
xlat
mov
add
xor
dec
iret
fwait
lahf
xor
jno
outs
ins
lahf
push
inc
and
ins
mov
popa
xor
xlat
jb
fist
mov
ins
mov
pop
jmp
jmp
enter
inc
jp
cmp
mov
push
dec
sub
lahf
inc
aas
mov
mov
outs
push
inc
xchg
arpl
mov
jnp
addr16
aas
push
mov
cmp
dec
xchg
inc
pop
loop
dec
jg
ds
ins
lds
(bad)
xor
test
lock
dec
rol
xor
mov
(bad)
scas
pop
or
push
mov
sbb
pusha
add
daa
pop
aas
jno
pop
pop
stos
mov
push
data16
jle
push
pop
addr16
dec
xlat
jne
fidiv
or
dec
xchg
cmp
arpl
ins
imul
fbld
sar
arpl
fild
mov
dec
pop
pop
xchg
add
sub
add
cs
jae
inc
pop
inc
jbe
mov
sti
inc
xor
xor
mov
fwait
(bad)
addr16
mov
(bad)
pop
rcl
add
call
mov
or
addr16
and
xchg
daa
push
pop
mov
xchg
cmp
mov
ret
(bad)
mov
ja
add
mov
ins
jg
mov
rol
ja
mov
cmp
dec
sti
push
pop
add
push
inc
sbb
xchg
adc
inc
fisttp
sbb
inc
mov
scas
push
jmp
lods
or
mov
xchg
pop
mov
sub
loope
mov
daa
ja
mov
sbb
mov
adc
fs
stos
lock
retf
sub
cmp
out
xchg
iret
inc
xchg
or
push
mov
mov
dec
ins
call
add
daa
pop
pop
adc
mov
sub
arpl
lock
es
bndldx
pop
sbb
imul
add
adc
xor
out
push
sbb
push
into
(bad)
js
pop
pop
sahf
mul
jae
ret
inc
jle
pop
stos
sub
xlat
imul
add
add
inc
ret
mov
push
stos
sub
loope
mov
push
add
scas
sti
outs
sub
sub
jns
lahf
(bad)
mov
inc
sbb
inc
add
fimul
lds
add
and
jnp
push
pop
inc
xor
cwde
adc
scas
push
ror
mov
cmp
mov
stos
shr
xchg
test
shl
add
ja
pop
pop
or
daa
dec
inc
ins
sub
inc
and
mov
mov
and
mov
jg
mov
ret
cmp
(bad)
sti
iret
(bad)
icebp
loopne
push
ja
iret
call
add
scas
jmp
inc
inc
je
add
push
mov
js
push
jns
or
push
mov
mov
sub
mov
push
addr16
pop
xor
mov
dec
add
sbb
test
adc
adc
cmp
sub
mov
arpl
xor
cmp
es
xchg
je
bound
inc
mov
sub
xor
jecxz
mov
outs
out
push
add
dec
sub
push
jge
cmp
outs
addr16
shl
movs
(bad)
adc
data16
jmp
inc
cwde
out
inc
scas
push
push
lods
and
outs
mov
and
cmps
imul
pop
ins
outs
xchg
addr16
jns
inc
push
ins
test
sub
xchg
lock
and
add
xor
push
mov
fcomp
push
mov
jb
cmp
xor
lock
push
xlat
sbb
add
xor
inc
bound
dec
in
leave
daa
mov
ror
push
inc
outs
inc
inc
inc
dec
dec
das
dec
dec
inc
bt
push
inc
cmp
shr
xlat
outs
bound
cmp
push
cmps
pop
adc
jo
ficom
xlat
pop
add
mov
pop
sbb
push
in
and
push
mov
inc
call
mov
ret
xchg
jo
sub
sbb
jecxz
push
inc
test
push
push
dec
outs
shr
jbe
fist
push
outs
xor
(bad)
mov
cmps
pop
aas
xor
and
out
inc
push
test
clc
mov
mov
in
sbb
addr16
das
ja
mov
inc
ins
(bad)
adc
adc
aam
cmps
pop
psraw
shl
sub
jnp
push
push
jne
add
jmp
dec
ins
les
imul
aad
push
mov
jle
cmp
jae
aam
add
stos
jbe
ins
addr16
pop
xor
adc
inc
dec
or
sub
add
(bad)
fld
fs
jbe
push
mov
mov
cmp
aaa
or
jae
fadd
jle
pop
cmp
xor
repz
inc
cmp
sub
sar
sub
xchg
lahf
(bad)
mov
jae
add
push
mov
jo
iret
add
fs
fbstp
pop
and
movs
push
xor
fwait
scas
aad
add
cmps
and
shr
inc
mov
mov
or
push
xchg
imul
int
xchg
aas
es
outs
cmp
inc
mov
out
fild
xlat
jo
inc
fwait
sub
cmps
rol
scas
arpl
(bad)
arpl
ins
add
xor
sub
add
retf
mov
mov
imul
test
lods
daa
xor
jnp
xchg
jo
adc
add
ret
not
sbb
popa
adc
jmp
int
pusha
fimul
and
fistp
add
ins
xor
and
add
loop
dec
add
ja
(bad)
dec
aaa
mov
jmp
fdiv
mov
daa
add
mov
imul
add
inc
data16
or
dec
jl
test
scas
aas
push
push
xchg
xchg
bound
scas
xor
ret
ror
inc
inc
ja
psraw
dec
xchg
dec
lods
ja
inc
inc
dec
add
mov
or
push
push
dec
dec
dec
repz
adc
mov
pop
or
mov
es
pop
jb
dec
add
push
mov
lods
test
adc
add
pop
retf
xlat
mov
out
fs
mov
add
add
jae
add
mov
call
sbb
stos
mov
aaa
dec
popa
test
ja
cmp
fbld
mov
pop
scas
scas
or
mov
and
xchg
jae
mov
stos
dec
ins
xor
das
or
push
loop
push
mov
add
mov
mov
scas
and
inc
(bad)
or
daa
and
and
mov
jae
inc
arpl
addr16
push
test
mov
dec
inc
loope
adc
call
sbb
dec
jmp
(bad)
test
or
inc
cmps
test
jmp
fs
jmp
mov
push
mov
adc
push
or
inc
cmp
cmp
inc
push
dec
xchg
pop
push
aas
mov
push
jg
push
test
(bad)
ret
pop
add
aaa
mov
push
or
push
lods
pusha
mov
jmp
pop
pop
(bad)
push
push
ins
mov
pxor
inc
aas
xor
push
add
inc
or
out
push
push
adc
jp
bound
push
inc
jbe
mov
push
(bad)
dec
aas
xchg
bound
fmul
inc
and
jecxz
vpaddd
cmps
mov
push
pop
daa
or
into
mov
xchg
mov
ret
push
sub
push
ins
pop
ret
(bad)
das
stos
and
(bad)
scas
add
jnp
adc
mov
cmps
cmp
push
push
out
xor
inc
rol
loopne
dec
test
or
adc
cmp
out
dec
add
lahf
inc
dec
lods
sbb
popf
dec
inc
iret
and
cs
jle
jecxz
inc
push
sub
and
push
iret
dec
js
xor
inc
addr16
ins
inc
test
scas
das
imul
sbb
or
imul
inc
out
out
call
cmp
cmp
sub
or
(bad)
mov
sbb
dec
push
sub
arpl
arpl
dec
push
pop
aas
pop
shl
repz
sub
pop
mov
ret
iret
loop
fstp
dec
pop
xchg
push
fist
jae
ja
fstp
ins
aaa
div
adc
(bad)
into
(bad)
pop
adc
xchg
xchg
sub
and
aaa
and
cmp
adc
ja
add
lahf
cmps
pop
sub
mov
jecxz
xor
cmps
sub
ja
ins
stos
dec
xchg
aaa
stos
and
ror
daa
mov
add
add
push
ror
fdiv
add
ja
pop
mov
sub
jnp
jno
cmps
pop
add
daa
push
out
inc
les
aad
xchg
dec
arpl
hlt
ret
das
push
inc
inc
test
add
ds
cmp
inc
push
pop
jnp
dec
push
inc
dec
inc
dec
dec
inc
sub
in
jge
pop
inc
pop
aaa
pop
cmp
xor
mov
xor
fdiv
dec
stos
jg
pop
sbb
or
aas
jmp
jg
sti
addr16
sbb
dec
movs
icebp
loope
cmp
jl
fdivrp
inc
sahf
and
inc
bound
inc
mov
add
jecxz
sub
lods
add
xchg
jmp
inc
fadd
jecxz
fild
es
jne
xchg
arpl
mov
(bad)
(bad)
mov
es
imul
psrlq
adc
daa
sub
pop
jmp
das
rcl
and
push
sbb
sub
push
lods
bound
ins
imul
outs
test
xor
mov
pop
or
lods
mov
sub
inc
dec
div
inc
dec
cmps
outs
daa
push
inc
inc
adc
into
pop
les
test
pop
sar
mov
sub
sbb
mov
jnp
(bad)
pusha
ret
mov
push
push
cmps
pop
xchg
scas
push
daa
pop
lahf
(bad)
pop
adc
push
or
mov
cs
xchg
iret
dec
adc
push
and
push
pop
and
(bad)
outs
cwde
add
(bad)
stos
div
adc
js
push
fild
inc
fwait
dec
stos
nop
push
mov
cmps
inc
loope
aas
xor
je
xchg
mov
(bad)
sbb
imul
(bad)
les
pop
mov
add
iret
sbb
push
fild
jae
mov
add
and
fwait
jg
sub
ret
push
and
bound
scas
sub
(bad)
mov
je
add
dec
push
add
dec
xchg
lods
sbb
push
outs
ret
je
or
stos
das
fild
xor
fild
stc
inc
jae
xchg
push
bndstx
mov
inc
dec
inc
push
inc
push
push
cli
cmps
inc
pop
dec
inc
dec
cs
xchg
(bad)
das
inc
(bad)
ins
sbb
inc
add
sbb
inc
mov
dec
jae
outs
arpl
punpcklwd
mov
add
add
sti
or
jecxz
and
inc
mov
and
sbb
mov
sub
add
mov
jae
cmps
rol
loop
push
fild
scas
inc
lods
imul
(bad)
xlat
add
imul
and
stos
mov
add
mov
pop
and
pop
pop
pop
rcl
push
pop
xchg
das
in
sbb
add
test
das
pop
jae
fcom
push
push
mov
jg
daa
inc
mov
fsubrp
fiadd
jmp
outs
pop
pop
sub
push
dec
inc
and
or
pop
and
arpl
mov
xchg
loop
xchg
push
jmp
mov
xchg
cwde
pop
dec
and
adc
aaa
pop
sub
pop
pop
ins
push
and
dec
sbb
push
xchg
push
mov
mov
(bad)
pusha
adc
push
daa
jnp
stos
and
fwait
mov
hlt
rcl
xchg
inc
pop
jnp
jecxz
data16
adc
inc
mov
mov
dec
pop
pusha
or
stos
ins
mov
mov
out
out
add
inc
movs
imul
dec
or
popa
cmp
fild
imul
mov
or
jne
fwait
sub
jo
repz
outs
pusha
adc
sub
add
xchg
fimul
shr
adc
imul
ja
lods
add
fisubr
movs
ja
mov
data16
add
fstp
outs
and
jnp
imul
ins
xchg
mov
pop
jle
cmp
fbstp
add
ds
or
cmp
xchg
dec
xlat
call
jne
cmps
xchg
iret
ins
imul
mov
push
push
call
ins
cmp
xor
leave
leave
jae
push
xor
xor
fxch
leave
xor
xor
cmp
cmp
xor
ss
ins
je
add
jne
adc
sub
jo
push
push
loope
dec
sbb
bound
inc
push
ds
jo
add
sub
jns
and
cmp
mov
jecxz
and
daa
and
packsswb
arpl
jae
sub
xchg
add
in
mov
push
and
add
and
fwait
int
mov
es
dec
loopne
mov
fwait
out
out
cmp
data16
add
cs
push
sahf
shl
ins
outs
retf
jle
and
loope
or
or
fld
outs
pop
das
or
or
xor
sub
cmp
ins
mov
add
push
jmp
out
loopne
in
push
out
shl
add
sar
icebp
repnz
adc
and
xor
and
pop
push
sahf
cmp
iret
push
cs
shr
imul
adc
inc
or
and
jg
inc
aaa
add
push
or
push
mov
sub
imul
sub
and
xchg
mov
pop
test
inc
push
ret
jp
xchg
mov
inc
cmp
inc
add
push
outs
enter
daa
dec
add
sbb
sub
jns
push
xlat
mov
xor
xlat
pop
push
push
xchg
mov
mov
shl
cmp
iret
cmc
mov
push
pusha
jns
and
arpl
cmps
push
imul
pusha
or
outs
pop
inc
xlat
stos
xor
or
addr16
lods
push
xchg
xlat
scas
(bad)
out
mov
fidiv
icebp
int
loopne
stos
inc
pop
pusha
pop
and
fld
xchg
and
mul
add
lds
add
cmp
mov
das
pop
out
cs
(bad)
aam
mov
les
scas
jbe
or
adc
xchg
add
sub
inc
das
add
mov
dec
nop
out
movs
adc
lods
ja
add
aas
pop
xor
jmp
shl
or
push
adc
pop
jmp
out
stos
pop
mov
mov
aad
test
sti
dec
aas
mov
mov
pop
jo
xchg
xor
dec
mov
mov
add
cmp
(bad)
pop
inc
scas
jb
mov
adc
add
xchg
xor
add
pop
add
enter
xchg
stos
imul
mov
cs
fnstsw
imul
xlat
lahf
outs
lea
push
hlt
and
inc
(bad)
sub
dec
sbb
ins
mov
outs
or
push
or
mov
repz
and
ins
xor
sub
ror
inc
mov
jle
pop
out
hlt
push
call
jns
cmp
add
cld
call
fadd
mov
push
push
sbb
jb
pushf
add
add
and
jo
fs
xchg
and
hlt
cmp
cmp
ins
xor
xchg
cmp
pop
or
inc
inc
div
xlat
sub
or
add
rol
int3
fidivr
or
xlat
jne
popa
mov
aaa
pop
outs
jle
les
inc
xchg
pop
or
fwait
add
test
ss
push
mov
cwde
push
mov
or
shl
ss
clc
les
push
bound
into
or
movq
outs
mov
and
bound
lock
push
mov
ss
lock
jbe
mov
lahf
aas
dec
lock
(bad)
and
aas
and
clc
cmovp
aas
rcl
pusha
loope
dec
cs
leave
in
push
dec
(bad)
dec
push
int
aad
out
aaa
pop
push
or
daa
inc
sti
cld
outs
repnz
data16
je
outs
dec
fwait
retf
gs
outs
nop
pop
jnp
dec
xchg
jp
inc
outs
ins
imul
jg
jo
popa
jae
jb
cwde
add
mov
das
outs
call
jo
and
mov
lahf
lock
cmp
mov
mov
lods
and
mov
jo
dec
sub
adc
shl
pushf
loop
ss
mov
inc
pop
jno
pop
mov
dec
inc
repz
pop
dec
popa
imul
pop
shl
pop
jle
daa
imul
sar
fldenv
stc
add
ja
jbe
dec
or
bound
cmps
aam
dec
dec
repnz
aam
test
mov
adc
popa
and
adc
or
add
fild
cwde
dec
aaa
scas
aad
cmps
fidiv
push
dec
mov
(bad)
aad
mov
nop
and
fadd
push
dec
call
inc
popa
inc
xchg
cmc
mov
popa
js
push
fild
push
ins
dec
ss
sbb
add
xchg
into
(bad)
je
inc
push
loope
or
nop
rol
bswap
dec
mov
jl
fnstenv
jecxz
out
pusha
fistp
mul
nop
scas
in
dec
cmc
je
repnz
dec
in
ud1
outs
dec
dec
mov
les
mov
fmul
push
jmp
(bad)
mov
pop
push
push
fisub
cmps
push
mov
mov
pop
push
adc
xchg
or
loopne
fwait
ret
loopne
push
mov
seto
xchg
pop
(bad)
xchg
push
je
test
xor
push
pop
pop
outs
dec
rcl
and
push
sub
test
adc
adc
js
xchg
xchg
sbb
push
xchg
sub
fbstp
xor
add
imul
cmp
inc
pop
pop
test
and
add
jmp
das
jmp
inc
stos
and
js
jnp
mov
push
retf
pop
inc
inc
repnz
rcr
dec
inc
dec
dec
inc
dec
push
cs
dec
pop
outs
daa
push
dec
das
inc
or
push
push
inc
inc
dec
daa
pcmpgtd
mov
cmp
daa
pop
cmps
mov
inc
push
sub
fadd
das
leave
push
mov
sbb
scas
xor
adc
ins
cli
push
push
repz
dec
and
push
and
lahf
inc
dec
or
(bad)
mov
push
add
ins
push
add
or
call
ret
push
inc
mov
nop
test
adc
fimul
shl
jmp
not
das
inc
push
inc
pop
push
jb
push
push
bound
pop
adc
sub
add
adc
and
ins
sub
outs
mov
and
outs
xchg
jno
pusha
mov
mov
aam
xor
pop
out
dec
jle
je
(bad)
shr
sahf
das
sub
or
stos
pop
jnp
bound
push
ins
or
(bad)
sub
xchg
mov
call
push
imul
pop
xor
xlat
mov
push
mov
jg
xchg
shr
xor
ret
dec
das
repnz
bound
pop
lods
add
xchg
cmps
add
shl
or
imul
and
xchg
fcomi
ins
add
xor
push
xor
xlat
ins
cmp
outs
xor
cli
retf
ins
mov
iret
pop
out
and
int
mov
cs
fdivp
es
push
inc
and
push
rcl
repz
inc
add
mov
out
sahf
add
inc
jo
loopne
and
xchg
inc
and
push
or
pop
shr
aaa
pop
dec
or
jne
jae
jmp
dec
loope
add
sub
push
or
push
dec
outs
gs
jbe
test
jne
ds
shl
je
nop
inc
loopne
loope
aas
inc
inc
mov
mov
sti
mul
js
xor
adc
fnstenv
dec
inc
push
in
rol
shl
push
mov
fwait
test
and
cwde
adc
pop
loopne
jb
das
outs
inc
inc
push
cmovge
mov
stos
outs
sub
fs
jno
out
or
add
in
fdivr
cmp
push
push
jo
in
iret
dec
imul
aaa
push
rcl
(bad)
pop
push
jg
add
lods
adc
push
rcr
fldenv
cmp
mov
je
cmps
inc
popa
imul
in
outs
and
mov
pop
push
out
or
pop
imul
ins
cs
loopne
pusha
xor
inc
push
push
jmp
fnstcw
xchg
loopne
push
(bad)
inc
cmp
cmp
aam
pop
mov
gs
lock
fild
dec
mov
push
pop
push
push
arpl
jecxz
inc
mov
sbb
bound
pop
mov
(bad)
outs
into
or
inc
and
and
mov
js
sahf
fucomp
imul
or
mov
sbb
mov
jmp
pop
div
fstp
sub
inc
sub
push
std
xor
and
or
ficom
mov
sbb
std
push
ins
les
js
xor
js
ja
inc
and
and
mov
imul
ds
jp
xor
mov
das
push
dec
pop
inc
xor
xchg
add
add
scas
xchg
add
and
push
je
sar
pop
xchg
arpl
outs
ja
lods
pop
and
dec
lods
je
jae
sbb
xor
adc
dec
rcr
sub
mov
popa
jp
adc
and
(bad)
mov
or
fild
fsub
add
es
cmp
fs
jne
lea
push
js
imul
inc
loope
dec
in
pop
jne
pop
int
pop
popa
jo
push
and
sub
inc
lock
cwde
imul
jl
cmps
and
or
add
push
add
add
mov
movs
and
cmp
pop
lea
dec
ja
inc
mov
add
dec
aaa
shl
xor
push
movs
add
inc
test
sub
sub
aas
xchg
sbb
and
xchg
adc
add
cmp
or
or
sahf
imul
push
sub
sub
ror
or
js
inc
push
nop
je
pop
(bad)
mov
or
inc
pop
inc
mov
xchg
add
mov
pop
mov
or
mov
iret
repz
xchg
inc
push
pusha
jo
nop
cmp
repz
mov
shl
jns
addr16
add
and
out
sahf
out
push
pusha
adc
mov
iret
xchg
add
inc
lock
rep
cwde
xor
inc
cdq
jl
imul
es
mov
add
mov
repz
shl
jmp
dec
pop
ss
cmp
mov
lock
movs
dec
ins
sahf
int
mov
adc
sub
add
in
sbb
rcr
hlt
cmc
add
stc
shl
dec
popf
cmp
pusha
sub
lock
cmc
inc
pop
arpl
inc
clc
cs
pop
popa
pop
inc
and
xchg
add
shr
repnz
or
nop
ins
aaa
push
xor
stos
dec
push
sbb
cmps
test
mov
dec
(bad)
jle
fwait
addr16
xchg
push
std
inc
mov
out
cmp
call
(bad)
(bad)
rcl
ja
jo
data16
push
shl
aad
fcom
fimul
in
push
clc
mov
out
mov
shl
sbb
in
sub
xlat
or
dec
xchg
pop
jbe
adc
repz
rcr
inc
das
cmp
mov
mov
push
push
ret
sbb
in
adc
add
aaa
sub
or
nop
or
or
pop
ja
push
es
cmps
vmread
pusha
sbb
sub
out
xchg
cmps
lock
repnz
test
or
aas
and
mov
arpl
les
dec
test
(bad)
das
xlat
mov
dec
addr16
add
add
jcxz
sbb
pop
inc
ins
inc
push
and
test
pop
dec
fmul
xchg
inc
or
add
cmp
aas
lar
mov
mov
cs
ja
retf
rol
sbb
ror
push
push
add
add
dec
jg
dec
lods
dec
push
(bad)
movs
add
loop
popa
popf
aam
neg
inc
rol
xor
mov
mov
mov
(bad)
inc
js
lods
adc
pop
outs
movs
xchg
mov
out
fbld
pop
sti
and
stc
adc
pop
out
xchg
and
sbb
lock
push
mov
mov
or
shl
cs
dec
aam
nop
push
outs
in
rol
bound
mov
mov
xchg
pop
movs
jp
loopne
xchg
jne
inc
pop
push
into
sbb
in
inc
les
sub
lea
adc
xor
push
les
rol
xchg
cdq
fisub
sbb
in
pop
lahf
push
xchg
adc
mov
aaa
aaa
push
icebp
inc
ret
dec
pop
mov
add
fisttp
dec
add
pop
dec
loop
sub
and
int
and
add
int3
ss
add
call
ds
js
ds
mov
jmp
stos
daa
pop
mov
xlat
push
outs
scas
inc
xchg
aaa
add
xor
aas
ss
or
and
pop
add
(bad)
and
and
scas
pop
scas
and
das
fbstp
in
(bad)
nop
adc
stos
push
cmps
sbb
adc
cs
xor
adc
add
and
pop
xchg
call
sbb
or
mov
mov
adc
sbb
das
dec
jae
ins
adc
xchg
imul
xor
popf
inc
jns
sbb
popw
adc
pop
sub
sbb
popa
jmp
popa
mov
xchg
pop
add
jae
movs
loop
or
or
mov
sbb
jle
jbe
adc
ss
loope
cmp
cld
and
jo
adc
and
pop
push
xchg
push
sbb
mov
push
pop
dec
inc
inc
jecxz
sbb
jne
cs
dec
fbld
inc
bound
shl
xor
add
fnstenv
sub
dec
dec
cmp
cmp
fs
push
bound
cmp
(bad)
cmp
fs
jmp
ja
or
pop
mov
sbb
cmp
mov
shl
and
add
jmp
cmp
pusha
imul
dec
add
leave
arpl
enter
inc
in
xchg
and
sbb
lds
neg
dec
fs
ret
xlat
pop
cmp
dec
or
inc
push
sub
outs
jo
mov
xchg
loopne
fs
mov
push
push
fld
nop
dec
dec
inc
push
aaa
mov
sar
ja
xchg
call
retf
xchg
imul
rol
out
imul
mov
push
mov
sbb
add
sub
push
imul
push
ret
rol
aaa
mov
nop
push
nop
ss
das
test
imul
fcom
popf
sbb
pop
add
push
and
test
cmp
gs
jl
aad
adc
ins
dec
popa
jg
inc
jo
and
push
movs
jbe
mov
icebp
lahf
push
jl
aam
sbb
jmp
les
add
adc
mov
fdivr
pop
cmp
inc
dec
inc
repnz
aaa
push
dec
push
inc
sub
and
xor
push
add
mov
ret
das
sub
rol
xor
dec
mov
or
xchg
inc
out
xor
ss
jns
imul
or
pop
add
cmp
shr
into
jae
or
mov
dec
add
bound
scas
fst
jne
test
addr16
or
ins
add
das
jns
push
mov
pusha
rcr
xor
xchg
xchg
jb
push
adc
pop
sbb
jmp
cmps
(bad)
pop
ror
ja
mov
adc
leave
push
lds
or
outs
sbb
xor
adc
dec
fist
pop
dec
fxch
push
lds
daa
ja
rol
in
or
inc
add
dec
dec
and
iret
mov
mul
clc
push
bound
mov
sbb
outs
pop
dec
stos
int
dec
inc
dec
and
xor
lods
js
sbb
dec
(bad)
es
(bad)
jg
adc
cmp
mov
aaa
int3
cmp
out
push
xchg
pushf
mov
xor
mov
adc
xor
cmp
mov
and
mov
dec
dec
inc
cmp
add
mov
sbb
mov
shl
inc
or
jo
push
jp
adc
and
ror
sub
bnd
gs
adc
push
outs
(bad)
lahf
dec
or
pop
adc
adc
jbe
dec
push
call
xor
mov
daa
fisubr
sub
jae
adc
dec
aaa
out
add
dec
pop
ret
scas
das
imul
loop
ins
mov
out
dec
dec
jl
push
sbb
mov
add
stc
mul
sbb
int
out
and
sbb
dec
cmp
dec
dec
lods
lea
lods
lea
mov
or
push
fld
rol
sub
js
add
push
imul
pop
jno
adc
ja
test
pop
rol
arpl
and
lods
xchg
mov
aas
sub
mov
outs
xor
xchg
mov
ins
push
enter
dec
scas
add
cmp
mov
inc
pop
jecxz
xchg
ss
shr
stos
cmp
(bad)
pop
fdiv
stc
sub
pop
mov
std
bound
xchg
daa
push
mov
ds
xor
sbb
arpl
ds
xor
xor
pop
call
mov
jo
or
out
lock
fcomp
lds
pusha
pop
stc
pop
and
mov
ror
popa
ins
push
out
les
aaa
sbb
cdq
inc
loope
pop
mov
icebp
or
imul
pop
(bad)
int
push
mov
push
or
mov
pop
push
hlt
dec
pushf
adc
sub
sbb
aad
push
popa
inc
jne
pop
test
jge
sub
inc
xor
mov
mov
cmp
jo
lahf
in
loopne
pop
xchg
imul
aaa
or
pusha
aaa
test
shl
mov
mov
push
jne
ror
mov
mov
jae
jmp
jae
xor
ins
sbb
mov
mov
daa
xchg
inc
push
pusha
or
jmp
cmovs
push
mov
sub
and
outs
add
fsub
xchg
inc
test
jae
sub
mov
dec
adc
pop
mov
pop
xchg
sub
shl
iret
stc
mov
in
and
and
cmps
mov
ins
push
sbb
adc
sbb
ins
xchg
and
dec
sbb
xchg
mov
jge
xchg
les
mov
adc
jg
int3
or
pop
and
jg
inc
addr16
pop
or
into
sub
bound
pop
push
aas
sub
(bad)
mov
(bad)
imul
mov
mov
outs
or
test
cmp
imul
dec
add
mov
lea
test
pop
sbb
xchg
rcr
(bad)
push
test
mov
cmp
sbb
jns
rcl
pushf
push
outs
xor
jo
jl
outs
and
cmp
data16
cmp
pusha
sub
inc
cmp
ds
cmp
push
imul
add
xor
push
(bad)
mov
mov
inc
pop
and
or
add
aas
sub
xchg
jbe
daa
mov
mov
jb
add
pop
xor
sbb
sar
xchg
fild
xor
sahf
mov
and
repz
repnz
fwait
ins
xchg
test
xchg
push
mov
push
adc
or
ins
push
or
adc
xor
jle
xchg
push
enter
push
call
int
add
adc
loopne
push
xchg
pop
mov
jnp
outs
scas
sahf
sahf
idiv
dec
cwde
cwde
les
xchg
push
jle
outs
jae
cmps
leave
lock
ror
mov
xchg
push
pop
fistp
jo
push
mov
xor
fs
or
pop
fimul
fs
dec
adc
popa
jno
pop
adc
cmp
(bad)
or
jno
mov
sbb
cmp
out
xchg
mov
xor
push
or
je
and
cmp
mov
and
add
pop
loope
push
inc
sub
xchg
stc
cmp
mov
mov
fmul
sub
fs
gs
smsw
dec
repnz
(bad)
push
imul
inc
outs
arpl
jnp
popa
inc
pcmpgtb
sub
mov
sbb
ins
mov
lea
push
push
cmp
in
adc
cmps
jg
dec
sti
ins
cs
and
xor
adc
sbb
inc
pop
add
shl
push
ins
adc
imul
dec
xor
mov
cwde
mov
pop
cmps
inc
jae
outs
ins
jne
retf
add
ss
add
clc
lock
push
inc
je
bound
(bad)
aam
in
inc
inc
ret
xchg
jmp
loopne
int3
lods
pop
inc
inc
frstor
les
aaa
xor
push
mov
int3
js
es
std
and
cmp
ins
cdq
add
jmp
pop
xchg
mov
sbb
jae
xchg
lock
jb
adc
and
fs
into
and
gs
sahf
adc
sub
dec
jne
in
popa
jecxz
retf
pop
push
push
into
outs
ds
arpl
xor
sbb
adc
pop
mov
(bad)
outs
dec
fdiv
mov
out
push
xor
adc
arpl
adc
ins
sub
out
sub
out
push
jmp
arpl
xchg
(bad)
xchg
ins
and
cmp
iret
shr
push
and
mov
dec
jne
push
xchg
adc
xchg
mov
pushf
add
xor
scas
enter
sub
fmul
sbb
aas
in
cmc
xor
dec
push
mov
pop
push
sub
imul
shr
retf
sbb
adc
adc
push
(bad)
dec
pop
xor
mov
pop
sbb
xchg
sbb
shl
mov
mov
cmp
dec
daa
jnp
hlt
add
fild
es
inc
push
repz
cmps
sub
xor
add
std
aas
loopne
icebp
push
in
sbb
out
aaa
lock
cmp
outs
pop
loopne
data16
add
mov
cmc
imul
and
add
and
dec
or
(bad)
inc
outs
inc
iret
mov
test
repnz
pop
dec
enter
retf
or
or
lock
xor
inc
arpl
push
inc
arpl
shl
xor
jp
push
sar
push
sar
sub
add
verw
in
enter
inc
rol
int3
out
(bad)
in
leave
inc
xchg
push
add
shl
outs
in
jb
scas
xadd
pop
or
jbe
jns
fsubr
movs
(bad)
pop
cmp
inc
push
cmp
push
inc
fucomp
lods
jo
dec
dec
pop
inc
and
jmp
add
push
mov
pop
ret
add
cmp
(bad)
dec
pop
and
call
dec
inc
lods
xchg
and
mov
pmuludq
inc
shr
mov
addr16
das
and
int
pushf
sldt
loop
scas
ror
mov
pop
add
into
inc
sahf
fcomp
out
leave
verw
ror
fimul
das
sbb
retf
into
fimul
scas
in
xchg
in
pusha
fimul
fcomp
inc
sub
mov
or
loop
pop
mov
aas
cdq
fsubr
daa
sub
mov
dec
mul
outs
loopne
jb
cmp
add
mov
sahf
pop
ror
divps
xor
(bad)
leave
pop
or
fcmovne
xchg
mov
pop
inc
mov
daa
daa
daa
mov
pop
outs
pop
dec
xor
and
jmp
dec
in
cmp
loopne
loopne
mov
(bad)
jae
bound
dec
dec
push
inc
xor
(bad)
fdivr
add
shl
aas
ret
std
xchg
div
fld
sahf
sub
and
adc
fs
aas
dec
(bad)
mov
bound
mov
xlat
pop
xchg
dec
pop
mov
jo
cmp
jg
je
cdq
cmp
pop
arpl
(bad)
retf
or
(bad)
mov
sbb
xchg
xchg
pop
dec
pop
test
aas
inc
pop
adc
push
clc
dec
and
gs
scas
aas
test
xor
jnp
stos
in
and
inc
rcl
(bad)
mov
inc
call
(bad)
jg
loope
jb
aas
pop
mov
ror
xlat
mov
aas
push
add
lds
push
xor
(bad)
fadd
aas
dec
je
stos
mov
inc
scas
daa
jp
ret
sti
int
(bad)
aas
mov
gs
mov
push
jbe
(bad)
fwait
and
ret
dec
push
(bad)
jg
jg
nop
fs
rol
push
lds
js
movs
pop
(bad)
aas
clc
out
pop
jmp
faddp
cli
pop
dec
enter
mov
rcr
push
mov
aas
adc
push
(bad)
cld
push
ror
sub
xor
retf
xchg
mov
scas
adc
or
(bad)
aas
in
loop
mov
adc
stc
dec
int
sub
mov
sub
aas
repnz
jle
jecxz
mov
data16
mov
repz
call
ss
js
aas
add
or
icebp
cmp
mov
into
adc
div
fistp
inc
nop
ja
lods
mov
xchg
aas
ds
stc
push
sar
pop
aam
call
lods
push
fistp
ds
cmc
idiv
sbb
xchg
mov
fdivp
jecxz
rcl
dec
pop
fistp
pop
inc
test
aam
ins
cld
sti
dec
mov
sbb
add
mov
pop
adc
pop
sub
mov
cmp
add
out
pop
jge
cmp
xchg
jle
(bad)
aas
les
and
mov
jecxz
mov
loop
nop
jle
and
xor
jg
jno
repz
fld
shl
scas
mov
mov
fdivr
jbe
retf
add
jl
movs
pop
cmp
call
sahf
rcr
fnstcw
addr16
not
sti
repz
mov
test
(bad)
mov
or
jg
sti
int
fimul
dec
jle
mov
mov
nop
xor
in
iret
jmp
sar
daa
gs
fstp
pusha
pop
sahf
or
dec
js
jle
push
and
(bad)
(bad)
cld
iret
or
outs
mov
inc
inc
xor
int
loope
sbb
mov
and
jne
xchg
push
in
sbb
aaa
fistp
sar
loop
stos
mov
sub
loop
lock
aas
sti
fwait
outs
(bad)
loope
mov
or
add
shl
sub
jnp
outs
jle
je
xor
fist
pop
mov
cmps
mov
popf
imul
test
dec
out
pop
daa
(bad)
jle
sbb
sub
and
into
js
mov
fmulp
push
fdivr
out
push
shl
movs
push
adc
push
pop
inc
xor
pop
out
mov
push
call
rcl
sbb
retf
fwait
mov
arpl
pop
push
and
sti
fwait
outs
(bad)
push
pop
add
mov
jno
add
outs
jg
jg
and
push
movs
sub
mov
adc
xor
inc
push
sub
sahf
xor
mov
cmc
add
mov
ds
push
adc
fist
mov
call
cld
std
cmp
and
push
cmp
jg
sti
push
ds
and
(bad)
iret
and
jl
push
mov
dec
outs
es
add
inc
aaa
out
mov
hlt
xor
inc
or
and
inc
out
retf
(bad)
mov
pop
sub
push
call
dec
jmp
xor
xchg
(bad)
(bad)
mov
sti
sti
nop
ror
aas
sahf
ja
cdq
imul
out
xor
sbb
pop
lahf
(bad)
in
iret
push
aam
inc
scas
dec
shr
cmp
pusha
sbb
jns
call
aaa
fistp
aam
call
pop
push
in
popf
sar
(bad)
imul
inc
push
jg
jo
clc
adc
sbb
lock
or
repz
mov
cmp
xor
xchg
mov
or
repz
mov
jle
ins
inc
(bad)
shl
mov
shl
jg
test
(bad)
aas
cmp
sti
sar
lods
sub
fimul
js
sub
inc
jle
mov
sbb
(bad)
push
enter
sahf
mov
iret
mov
jbe
cmp
xchg
call
cld
push
cmps
outs
ss
ins
(bad)
push
lods
int
or
(bad)
mov
std
inc
int3
mov
int
add
pop
cld
retf
mov
nop
test
(bad)
sti
fwait
aas
cmp
es
pop
jmp
mov
mov
std
(bad)
bound
inc
loop
jge
mov
arpl
ds
or
outs
(bad)
mov
mov
and
movs
or
inc
push
jg
(bad)
out
mov
out
(bad)
push
ins
cmp
ds
mov
pusha
xor
mov
and
lahf
xor
lods
arpl
mov
aaa
or
and
and
or
mov
mov
pop
and
push
inc
push
loopne
push
stc
ret
ss
ret
cmp
add
sub
cmp
dec
xor
cmp
sar
mov
(bad)
mov
in
sar
fimul
push
pop
or
jle
movs
mov
xor
push
out
xchg
xchg
or
cld
mov
(bad)
(bad)
aas
pop
in
js
mov
sbb
cli
mov
mov
stos
(bad)
(bad)
mov
imul
xlat
cdq
mov
daa
aaa
sahf
mov
(bad)
(bad)
stc
add
clc
out
dec
xchg
stos
cmp
mov
retf
add
stos
xor
clc
or
inc
(bad)
mov
dec
pop
adc
inc
jmp
mov
fstp
jecxz
cmp
inc
mov
mov
sbb
(bad)
fist
fdivr
test
mov
int3
scas
jmp
(bad)
hlt
mov
mov
outs
icebp
jmp
cmp
cmp
mov
xlat
jl
data16
add
js
(bad)
std
mov
mov
xor
push
and
jg
mov
inc
inc
sub
lahf
(bad)
jg
movs
dec
and
or
xor
repnz
push
(bad)
out
mov
inc
push
jp
jge
xchg
mov
icebp
add
or
aas
sub
(bad)
cld
jecxz
mov
lock
pop
sub
mov
jg
lock
sub
js
les
ja
int
mov
fidivr
out
bswap
leave
leave
leave
(bad)
std
cld
sti
leave
leave
leave
leave
cli
stc
clc
test
cmc
hlt
repz
leave
leave
leave
repnz
lock
leave
leave
leave
leave
out
in
in
jmp
leave
leave
leave
jmp
leave
out
in
leave
leave
leave
leave
loop
loopne
leave
leave
leave
leave
(bad)
(bad)
leave
leave
leave
leave
fcmovu
fcom
enter
(bad)
aad
shl
in
in
rcl
ror
in
in
into
int
retf
in
in
retf
(bad)
in
in
mov
ret
jns
in
ret
adc
ror
outs
cmp
add
push
daa
daa
daa
daa
push
push
push
or
or
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
pop
pop
pop
push
daa
daa
daa
daa
push
push
push
add
add
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
dec
mov
repz
aas
cmp
aas
push
popa
xor
or
and
std
fisttp
xor
sbb
push
or
call
cmp
mov
mov
xchg
inc
(bad)
(bad)
mov
aas
(bad)
sub
xor
leave
cwde
push
aas
sub
lods
(bad)
jg
sub
jp
adc
push
aas
mov
fisttp
rcl
push
aas
sub
(bad)
(bad)
in
adc
xchg
mov
inc
sahf
jo
mov
aam
(bad)
hlt
inc
es
jmp
pop
aas
jg
fild
loopne
or
fild
inc
sahf
clc
cld
push
(bad)
jmp
mul
sbb
mov
and
cli
lahf
push
nop
pop
dec
pusha
xor
aas
(bad)
jmp
aas
xor
lock
dec
gs
xor
repz
push
dec
cwde
mov
inc
div
sbb
pushf
xor
pop
sub
(bad)
cld
mov
dec
mov
mov
imul
mov
out
(bad)
adc
aas
test
sub
xchg
in
int3
mov
(bad)
(bad)
stc
call
jns
stc
ins
aas
ds
jl
cmp
aad
imul
adc
mov
jmp
(bad)
jg
in
outs
jo
jp
add
or
jno
adc
cmc
out
(bad)
out
push
inc
inc
pusha
loope
xchg
jge
pop
add
pop
test
(bad)
jg
aas
mov
fld
push
fstp
push
jae
mov
mov
(bad)
in
(bad)
es
lock
(bad)
push
in
shl
mov
pop
push
enter
pop
in
xor
xor
or
and
jbe
out
adc
test
aas
dec
cmp
xor
inc
pop
dec
jle
sbb
stos
ja
call
aas
jno
inc
or
js
xor
or
fist
jg
out
rcr
aas
lds
mov
cmp
adc
and
sub
int
call
xchg
mov
jp
mov
rol
ss
jnp
rcr
dec
inc
or
ja
xor
mov
dec
mov
mov
sub
loopne
jge
nop
sahf
and
cld
jmp
aas
jl
les
pop
sbb
mov
(bad)
jmp
popw
inc
fiadd
pushf
pop
mov
nop
xchg
xor
jg
neg
retf
cmp
push
cmp
(bad)
je
push
int3
lea
dec
(bad)
stc
fwait
aas
push
xor
push
and
mov
cmp
js
sub
ret
and
shl
popf
in
sub
call
mov
inc
sbb
lahf
mov
mov
mov
or
int
std
int
jmp
inc
push
fadd
sbb
pop
and
fistp
idiv
cmp
out
mov
hlt
neg
(bad)
std
jg
repnz
test
cli
repnz
clc
aad
dec
push
clc
rcr
adc
mov
out
daa
cmp
jle
iret
mov
call
aam
test
and
iret
(bad)
push
xor
aam
inc
retf
in
ret
inc
fsub
lahf
(bad)
jg
(bad)
repnz
inc
sbb
fiadd
aas
daa
stos
xor
imul
int
mov
fwait
sbb
fwait
mov
retf
mov
mov
inc
iret
push
gs
(bad)
(bad)
stc
mov
inc
loopne
shl
jne
sar
aam
cld
dec
mov
cdq
mov
mov
xchg
rcl
cmp
push
inc
in
retf
dec
pop
lock
shl
je
push
daa
movs
jno
and
pop
rol
(bad)
cld
dec
cmp
dec
fs
sub
pop
dec
(bad)
stc
jmp
int
mov
mov
jno
jle
(bad)
aaa
jg
out
test
fdiv
mov
add
call
jb
jne
cs
loope
sub
lea
jbe
dec
jmp
outs
(bad)
mov
enter
jo
call
mov
cld
stc
test
xor
jp
outs
out
fucom
or
(bad)
jns
inc
push
jo
add
psubq
xchg
or
dec
mov
and
jmp
sbb
outs
mov
adc
or
mov
or
mov
push
or
scas
cld
out
add
jne
or
rcl
mov
(bad)
mov
loop
xor
scas
cwde
shr
dec
mov
repnz
push
push
es
(bad)
cld
int
sbb
cdq
dec
call
mov
dec
mov
dec
(bad)
aas
cmp
test
mov
or
lock
stos
push
and
dec
popa
cmp
fldcw
sbb
(bad)
(bad)
sub
cmp
rol
dec
push
dec
mov
jge
sbb
in
and
or
or
mov
es
xor
jnp
push
mov
aaa
(bad)
cld
popf
mov
adc
cmp
pop
loop
gs
inc
fistp
idiv
ror
pop
mov
push
scas
xor
push
ret
mov
sbb
inc
jg
call
push
inc
stos
fnstenv
mov
xor
clc
(bad)
jnp
bound
cmps
mov
push
mov
sbb
repz
(bad)
aas
(bad)
(bad)
jle
pop
mov
popa
mov
sahf
jb
rcl
push
xchg
pusha
mov
movs
mov
jo
into
mov
(bad)
jbe
jmp
jbe
mov
aad
mov
mov
push
mov
mov
aas
cmc
xor
mov
imul
and
dec
hlt
pop
jle
pop
mov
sub
pop
sbb
xor
dec
inc
jmp
(bad)
call
push
mov
mov
mov
dec
cdq
ins
popf
pop
hlt
xchg
std
nop
inc
imul
or
push
or
ins
call
inc
push
dec
push
iret
(bad)
aas
(bad)
mov
mov
mov
into
xor
repz
pop
fmul
jp
fadd
inc
push
sbb
xor
and
(bad)
fistp
(bad)
adc
sar
cmc
or
push
mov
inc
mov
lea
xchg
xor
out
aas
inc
fldenv
mov
mov
(bad)
js
cmp
jne
jmp
adc
mov
in
jle
cmp
lahf
scas
lea
ds
dec
sub
cmp
pop
adc
adc
mov
cmp
xchg
dec
mov
sub
cld
aad
pop
aas
inc
inc
adc
mov
lea
push
inc
add
inc
(bad)
daa
inc
ds
cmp
cmp
aaa
ss
leave
in
in
xor
xor
daa
mov
fld
pop
sub
popf
fmul
pop
daa
outs
and
jb
cmp
outs
sbb
sbb
sbb
outs
pop
mov
xchg
fist
pop
adc
adc
fmul
daa
nop
cmp
push
outs
add
add
add
call
in
ss
adc
pop
cli
stc
cmp
cmp
clc
xor
rep
in
jbe
repnz
out
in
xchg
fcmovne
in
in
outs
jmp
pop
call
out
in
pop
loop
cmp
ficomp
(bad)
in
jb
fldcw
(bad)
pop
aad
fcmovne
in
shr
rcr
iret
dec
outs
daa
mov
outs
int3
retf
pop
leave
enter
dec
(bad)
outs
(bad)
ret
jb
shr
pop
mov
mov
mov
daa
mov
mov
outs
mov
pop
scas
mov
outs
lods
stos
pop
stos
in
jb
test
cmps
movs
pop
movs
fcmovne
in
in
mov
outs
daa
mov
popf
fwait
outs
call
dec
xchg
outs
xchg
xchg
pop
xchg
gs
cmp
inc
pushf
pushf
popf
mov
add
pushf
sahf
popf
popf
pushf
cmp
cmp
cdq
aas
jbe
jb
cwde
cwde
xchg
xchg
outs
in
in
in
xchg
xchg
xchg
aas
leave
leave
leave
leave
xchg
xchg
xchg
nop
xchg
xchg
xchg
fist
daa
daa
daa
mov
aas
mov
outs
daa
mov
mov
xchg
xchg
pushf
add
cmp
add
jge
jl
leave
leave
in
in
jp
jns
xchg
fcmovne
leave
js
jbe
jbe
mov
xchg
jne
je
jae
outs
daa
daa
daa
jno
jo
outs
fmul
dec
outs
outs
ins
aas
ins
mov
imul
jb
cmp
imul
jb
gs
in
in
in
bound
aas
leave
leave
leave
leave
pusha
pop
pop
pop
xchg
xchg
xchg
fistp
pop
pop
pop
daa
daa
daa
mov
aas
pop
pop
pop
push
dec
dec
outs
daa
push
outs
push
push
push
pushf
pushf
fmul
aas
push
push
push
cmp
mov
push
dec
jb
jb
dec
aas
dec
dec
dec
in
jbe
dec
dec
outs
dec
dec
in
or
in
ud0
(bad)
cld
outs
push
rcr
ds
jmp
inc
cmp
ds
dec
fdiv
sar
push
mov
add
lds
xchg
call
ds
(bad)
pop
dec
dec
sbb
out
(bad)
push
mov
es
jg
add
fstp
mov
ds
sub
sar
inc
fadd
std
es
stc
dec
(bad)
(bad)
fistp
add
cmp
popf
mov
add
ds
jns
mov
jne
xor
or
arpl
push
inc
icebp
ds
call
push
test
mov
pop
shl
or
or
mov
jg
dec
inc
hlt
xchg
mov
retf
sti
inc
pusha
or
cmc
bound
inc
(bad)
mov
add
mov
mov
ds
loope
into
fmul
xchg
push
int3
push
add
ds
mov
inc
adc
pushf
es
call
cld
ds
or
mov
retf
(bad)
mov
xchg
jb
inc
pop
or
sar
and
xor
aas
stos
int3
cmp
iret
pop
push
(bad)
or
add
mov
mov
(bad)
adc
add
lea
and
jg
std
out
xadd
inc
mov
call
xlat
aaa
stc
jae
(bad)
fst
inc
add
jno
ins
loope
ins
sub
adc
retf
call
and
fs
add
and
call
adc
ins
cld
loop
or
pop
and
aas
xor
cdq
or
(bad)
mov
shl
jb
hlt
sti
in
cmp
sub
or
sub
dec
addr16
mov
(bad)
sbb
jle
mov
pop
jb
add
repnz
sub
aas
fcomi
jae
shr
inc
sub
rcl
std
(bad)
std
jmp
mov
aad
test
pop
and
or
out
jo
pusha
jno
inc
and
cld
bnd
not
pop
xor
mov
das
(bad)
out
in
mov
aam
inc
push
aas
iret
jmp
pop
test
int
dec
aas
daa
push
lock
fisubr
shl
ret
inc
mov
sti
push
inc
adc
shr
cmp
fist
nop
sti
int
mov
sahf
imul
adc
dec
xchg
mov
adc
push
adc
push
and
aaa
sbb
mov
cmp
popa
sbb
adc
or
mov
outs
scas
cld
int
pusha
out
pop
add
xchg
push
rol
jg
cld
cld
jg
mov
rcr
and
aas
aam
adc
repnz
jmp
cld
mul
sub
add
and
rcr
mov
pop
fwait
sub
mov
aas
jl
aaa
pop
and
das
ret
and
pop
mov
sbb
popa
inc
dec
sbb
ds
xor
aaa
ja
int
adc
sahf
sub
pop
cmps
sub
cld
mov
dec
adc
add
aas
mov
xor
in
ja
push
xor
mov
cld
sub
inc
out
mov
adc
dec
out
jmp
cmp
adc
aas
and
(bad)
add
mov
push
(bad)
sub
pop
jl
ds
xor
lods
adc
div
int
sbb
sbb
inc
int
jg
xor
push
lock
aas
jmp
xchg
add
clc
cmp
cmps
test
out
aaa
outs
mov
pop
jnp
jle
dec
pop
push
cmp
(bad)
movs
sbb
fnstcw
inc
pop
(bad)
loop
mov
outs
rep
fbld
cmp
sbb
int3
jnp
and
loope
mov
(bad)
(bad)
std
or
pop
iret
rcr
movs
jmp
add
inc
jo
int
mov
scas
and
dec
out
sar
stos
out
cmc
or
sub
scas
mov
and
mov
jne
and
cmp
inc
or
retf
stc
es
dec
loopne
cmc
outs
mov
repz
dec
sbb
aaa
mov
jmp
fcmove
pop
test
pop
stc
fwait
sub
dec
lock
add
dec
into
dec
push
push
aas
repnz
push
dec
loop
mov
push
mov
inc
scas
inc
outs
scas
cld
mov
aas
sub
inc
jle
pusha
dec
and
loope
jg
in
mov
inc
rcl
cmp
std
out
call
and
jmp
ror
sub
dec
mov
cld
aas
mov
xor
shr
cwde
ds
scas
cld
fcmove
and
xor
lods
mov
adc
cld
div
lock
nop
and
xor
and
mov
and
jae
outs
ja
or
push
push
repz
adc
out
inc
cs
jg
mov
jne
inc
cmp
ss
mov
push
fld
xor
mov
stos
cmps
push
mov
or
aas
mov
and
push
sti
jns
and
cmp
mov
pop
js
jns
inc
cmp
popf
jmp
rcr
in
jecxz
pop
aaa
add
faddp
pop
xor
(bad)
fdiv
adc
jle
int3
inc
sub
cmp
and
sahf
daa
pushf
xchg
loope
fisttp
push
test
pop
or
js
dec
jge
add
dec
adc
test
fwait
sub
mov
aaa
pop
inc
fcomp
popf
loopne
sub
aas
push
lods
popf
retf
aas
shr
fadd
push
xchg
xor
sbb
dec
pusha
(bad)
out
fistp
push
cmp
loope
fsubr
repnz
push
mov
mov
dec
call
jmp
jnp
cmp
cmp
cmp
movs
push
ja
dec
mov
sahf
dec
dec
mov
fstp
add
cld
int
mov
inc
repnz
or
cmp
cmp
xchg
push
shl
fs
push
add
in
ja
aas
jle
dec
jl
or
xor
push
les
fisttp
jle
test
pop
repz
ret
dec
pop
push
pop
mov
sbb
test
pop
mov
enter
adc
cld
jg
outs
or
pop
adc
mov
movs
retf
aaa
push
(bad)
dec
rcr
push
mov
ins
mov
mov
mov
sub
aam
lds
push
movs
shl
aam
sti
repnz
pop
mov
(bad)
jl
das
push
mov
fs
out
jmp
xor
call
adc
sbb
jmp
xor
xor
sahf
xlat
lahf
jno
sbb
push
test
jae
fsubr
add
out
and
aas
adc
sub
repnz
mov
stos
ja
pop
push
xor
and
es
out
(bad)
out
adc
dec
xchg
pushf
cmp
inc
rcr
mov
inc
test
in
out
aas
jg
(bad)
xor
jne
inc
retf
adc
fcomp
fwait
lahf
jg
mov
clc
mov
xchg
mov
out
(bad)
pop
js
call
mov
pop
ret
sbb
mov
in
aad
mov
scas
pop
mov
dec
sub
fwait
jg
adc
pop
cmp
dec
and
push
push
(bad)
out
pop
loopne
movs
nop
xchg
sub
or
out
cld
int
call
mov
jl
sbb
sbb
inc
jae
outs
scas
inc
loop
dec
and
test
pop
cmp
loop
stc
fwait
sub
sysexit
xlat
icebp
adc
jecxz
loope
cli
mov
fistp
(bad)
stc
and
jmp
fist
mov
stc
sub
shr
out
(bad)
jae
outs
scas
xchg
in
push
push
adc
je
and
dec
in
mov
push
ret
test
mov
ret
mov
test
push
stos
cmp
jl
xor
fwait
sub
int3
out
inc
shr
add
adc
call
mov
sbb
xor
mov
outs
int
jmp
scas
cld
int
aas
es
cli
mov
cs
inc
cld
jae
dec
jae
xchg
mov
or
add
aad
(bad)
fwait
push
jg
fimul
dec
dec
jg
push
mov
xor
sub
out
(bad)
pop
xlat
lahf
cmps
and
cs
inc
sti
mov
jge
mov
push
retf
lahf
(bad)
or
xor
iret
stc
aas
sub
lahf
or
jge
mov
jge
mov
fstp
push
inc
and
or
cmp
jle
in
(bad)
or
xchg
ffreep
scas
xchg
dec
cld
fdivr
or
lock
aaa
pop
call
lods
xor
pop
rcr
mov
fistp
(bad)
rcr
add
pop
adc
pop
inc
xor
loopne
or
add
push
jg
xchg
lahf
push
push
or
mov
xchg
dec
loopne
dec
mov
(bad)
mov
clc
fwait
sub
clc
mov
std
mov
aas
push
xor
in
mov
pop
in
or
mov
out
push
div
push
inc
js
lock
xlat
shr
aaa
ja
shl
pop
js
sbb
pop
cmp
jg
popf
(bad)
xchg
mov
sbb
call
fisttp
xor
jmp
mov
push
shl
jmp
mov
sti
sbb
inc
sbb
dec
pop
loopne
lahf
cli
int
mov
(bad)
xor
xchg
push
scas
movs
fdivr
ja
lahf
inc
xchg
add
fmul
cmp
(bad)
out
fisttp
dec
xchg
fld
shl
pop
out
aas
adc
ds
call
out
fild
mov
lods
jbe
cmps
out
jg
retf
in
jmp
inc
lock
push
inc
clc
pop
push
sub
mov
lock
push
inc
fiadd
pop
or
add
(bad)
mov
inc
mov
or
dec
repnz
push
or
xchg
mov
pop
adc
(bad)
cli
add
int
pop
hlt
xchg
repz
and
imul
outs
scas
cld
mov
pop
fdiv
sub
stc
xchg
pop
shl
stos
call
(bad)
mov
adc
sbb
jg
mov
xor
aas
push
push
push
test
or
test
add
push
std
mov
push
push
inc
loopne
pop
inc
out
mov
mov
cmp
in
or
adc
add
enter
scas
cld
(bad)
std
push
inc
push
mov
mov
test
(bad)
stc
out
outs
pop
(bad)
mov
inc
call
sbb
xchg
xchg
mov
(bad)
in
and
jg
mov
(bad)
repz
repz
or
fstp
push
mov
xlat
push
dec
push
sub
sbb
retf
sub
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
aas
inc
xchg
cmp
(bad)
jg
mov
repz
fldl2t
pop
cmp
repnz
shr
jns
daa
pop
sbb
push
in
inc
push
pop
pop
test
aas
stc
jg
aaa
idiv
cmp
xor
jg
mov
or
sub
pop
(bad)
pop
jo
jg
mov
pop
and
aam
ror
call
call
idiv
in
mov
jo
aaa
clc
jmp
ins
cmp
(bad)
sti
fnstsw
adc
xor
mov
out
dec
jmp
(bad)
jg
mov
lock
jmp
mov
xor
xor
cld
mov
mov
shr
pop
sti
jmp
mov
jg
inc
cmp
xor
jmp
mov
xor
inc
cld
jg
mov
std
movs
pop
inc
stos
sahf
cmp
pusha
movs
cmp
jle
fwait
retf
mov
cmp
mov
mov
or
(bad)
scas
cmp
mov
test
fistp
mov
cmp
ss
(bad)
call
mov
out
push
fild
repnz
push
cmp
(bad)
mov
fisubr
loope
fs
jmp
(bad)
inc
adc
shl
outs
jle
fistp
mov
pop
push
aas
pop
(bad)
jmp
(bad)
jmp
mov
add
mov
les
out
push
fs
cmps
ret
adc
scas
(bad)
jns
arpl
add
inc
cs
mov
mov
cmp
mov
cmp
xor
stc
dec
call
nop
jno
test
call
ja
sbb
out
aaa
call
shl
movs
loop
lea
neg
sub
(bad)
(bad)
jmp
cmp
loop
xchg
mov
xchg
test
cmp
repz
retf
repz
sbb
xchg
cmp
mov
ins
pop
mov
popa
fmul
cmps
cwde
int
outs
(bad)
cmp
inc
jb
xchg
int3
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
(bad)
mov
daa
pop
cmp
sbb
(bad)
scas
data16
jnp
dec
(bad)
in
fwait
imul
push
(bad)
push
aas
cmp
xchg
mov
mov
mov
mov
mov
(bad)
out
call
das
xchg
pop
mov
stos
out
stc
(bad)
in
(bad)
mov
jnp
jge
mov
xlat
mov
jmp
aaa
(bad)
mov
and
xchg
mov
pop
mov
dec
pop
mov
pop
add
cld
jmp
test
mov
xchg
mov
xchg
cmp
mov
fwait
inc
sahf
cmp
frndint
and
mov
(bad)
mov
cmp
mov
lock
adc
xchg
fdivr
dec
pop
push
in
movs
xchg
std
jmp
call
bound
jp
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
out
(bad)
mov
mov
fnstsw
inc
imul
inc
cdq
xor
and
jge
aas
mov
dec
call
sahf
push
adc
scas
call
(bad)
sar
mov
or
or
in
test
call
fist
nop
cmp
das
ds
aad
bswap
jno
adc
push
or
push
repz
in
xor
push
xor
dec
cld
jo
push
jl
sbb
mov
(bad)
call
sar
movs
pop
test
daa
xchg
cmp
aaa
(bad)
mov
lds
inc
dec
pop
out
pop
mov
jno
jmp
jmp
ins
scas
mov
sahf
mov
(bad)
loop
popa
(bad)
ss
mov
sub
aaa
clc
push
fistp
xor
dec
cmps
(bad)
mov
ficomp
lods
add
cli
push
cld
(bad)
(bad)
push
stc
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
fwait
(bad)
fistp
mov
sub
jp
dec
cmp
add
jg
sbb
mov
xchg
pushf
cmp
cmp
mov
xchg
bound
jmp
rcl
lock
(bad)
retf
cdq
cmp
sub
aad
mov
loop
in
scas
xchg
inc
jge
or
fdiv
js
mov
cmps
sub
(bad)
(bad)
jmp
jbe
stc
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
or
sub
ficomp
setb
movs
push
(bad)
aas
(bad)
mov
out
pushf
push
mov
inc
outs
xchg
sbb
cmp
(bad)
xchg
aam
stc
dec
adc
loope
cmp
dec
fld
stos
inc
inc
add
(bad)
(bad)
cmp
inc
pop
mov
leave
push
mov
dec
cmp
dec
and
out
call
xor
cmps
push
or
jbe
loope
idiv
inc
ficom
inc
loop
push
(bad)
idiv
mov
and
xchg
mov
jle
and
int3
xor
inc
xor
popf
jne
(bad)
and
xor
xchg
dec
dec
mov
mov
push
and
cmp
cmp
sahf
mov
push
fs
xor
mov
rcr
or
addr16
mov
das
aaa
(bad)
mov
mov
stos
mov
cmp
push
stc
jge
test
jl
(bad)
jmp
je
in
call
cdq
jp
xchg
add
cmp
gs
fldcw
inc
push
jmp
shr
push
pop
and
jmp
aas
pop
fimul
sub
or
add
jae
mov
call
test
rcl
push
ror
cmp
dec
iret
ss
(bad)
push
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
cld
jmp
cdq
mov
sbb
(bad)
and
inc
sti
int
mov
call
mov
push
clc
(bad)
lahf
mov
(bad)
mov
outs
(bad)
jg
mov
repz
cmp
mov
es
xchg
jmp
mov
fild
stos
jecxz
xor
jo
sub
xchg
jle
(bad)
jmp
mov
(bad)
call
aas
and
in
int
aaa
aaa
call
jle
add
push
enter
cmp
movs
xchg
jl
jbe
push
dec
mov
cld
neg
lahf
cmp
test
jl
sbb
mov
dec
jmp
call
nop
lock
bnd
inc
jl
cmp
(bad)
jg
out
arpl
pop
outs
dec
out
retf
cmp
in
jnp
or
aad
pop
(bad)
fistp
dec
pop
mov
fwait
xor
stos
fdivr
xor
mov
jg
call
fld
popf
mov
sahf
jns
arpl
retf
fwait
int
outs
(bad)
cmp
std
jns
imul
cli
nop
cmp
repz
mov
retf
(bad)
mov
lahf
call
int
xchg
cmp
mov
sub
push
push
(bad)
(bad)
sti
aas
and
or
mov
mov
xor
bound
(bad)
in
lea
ds
mov
mov
jbe
cmp
push
push
dec
push
mov
sub
cld
sahf
mov
push
int3
(bad)
inc
cmp
xlat
pop
ret
pushf
imul
std
pushf
push
popf
test
mov
fnstsw
in
adc
stos
inc
push
or
and
inc
fwait
cmp
rcl
icebp
push
(bad)
mov
dec
mov
xchg
ins
pop
dec
mov
nop
out
(bad)
jmp
fsub
mov
dec
jmp
cmp
ret
pop
push
or
jb
adc
sti
jmp
pop
dec
sub
jp
inc
aaa
fidivr
das
clc
int
outs
push
ja
popf
jno
dec
popf
mov
sbb
aaa
pop
xlat
add
repz
fld
ds
or
jecxz
pop
call
push
xchg
mov
out
jmp
jg
mov
imul
mov
repz
ret
js
ficom
xor
cld
pop
dec
sbb
movs
sub
(bad)
push
fistp
and
out
push
push
(bad)
int3
(bad)
jg
jmp
cmp
dec
(bad)
sti
push
jp
lea
and
xchg
cmp
nop
movs
mov
pusha
outs
xchg
sub
sub
(bad)
mov
mov
xchg
pushf
mov
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
push
sub
or
cmp
inc
outs
pop
jbe
mov
cdq
cmp
(bad)
(bad)
adc
pushf
lods
std
jnp
xor
popf
mov
shl
jmp
cmp
jno
sub
shl
jns
xchg
je
bound
test
sub
pop
clc
inc
rdtsc
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
js
test
popa
pop
push
retf
mov
bound
cmps
inc
bound
jmp
adc
(bad)
clc
call
adc
fmul
jb
jmp
jno
or
stc
xor
ss
or
sbb
xchg
std
jecxz
gs
rep
outs
pop
add
or
xchg
mov
pusha
xchg
xchg
xor
xchg
and
or
mov
dec
lock
add
pop
add
sbb
jg
pop
ds
push
out
xchg
fcomp
ror
pop
add
mov
dec
add
pushaw
cmp
(bad)
call
movs
push
inc
push
mov
mov
push
scas
push
into
or
push
dec
cmp
xor
xor
pop
inc
inc
ror
mov
mov
shr
jo
bound
int
sub
push
mov
movs
popa
fwait
lock
mov
sbb
ja
fstp
cmp
lock
or
mov
dec
out
pusha
jbe
outs
push
or
jmp
inc
add
mov
not
pushf
movs
test
lahf
loopne
nop
or
les
adc
sbb
lock
adc
loopne
nop
in
test
dec
xchg
mov
cmp
xchg
mov
pop
push
sahf
cdq
inc
pop
enter
js
cwde
sahf
or
lea
(bad)
int
(bad)
loope
mov
and
loope
outs
adc
repz
mov
ins
push
je
(bad)
pop
out
inc
push
cs
movs
mov
rcl
movs
jne
repnz
out
lock
and
cmp
sub
push
outs
cmp
xchg
dec
pop
dec
adc
mov
inc
ja
aaa
or
(bad)
xchg
das
imul
or
(bad)
mov
les
aas
(bad)
and
test
or
push
es
jae
ins
aas
(bad)
push
daa
xchg
hlt
daa
pushf
mov
repz
call
or
xchg
mov
add
rol
mov
outs
fidivr
ja
dec
jo
test
fbld
outs
xor
push
scas
or
push
mov
mov
pusha
dec
push
movs
push
loopne
sar
test
xor
dec
adc
(bad)
or
dec
rol
mov
jnp
sar
pop
aaa
ret
and
fsub
outs
add
enter
cmp
outs
cmc
cmp
mov
int3
push
inc
push
call
fs
cmp
test
add
xor
add
add
add
ud2
ss
jg
add
cbw
xchg
pop
and
fild
leave
jnp
mov
sub
push
and
xchg
and
add
scas
inc
add
idiv
mov
or
jl
mov
cmp
div
loopne
xchg
cmp
in
les
cld
inc
ret
or
mov
inc
dec
xor
xor
inc
and
mov
or
jae
add
mov
scas
outs
or
mov
mov
push
call
mov
inc
movq
inc
lock
dec
mov
sub
mov
add
push
cmp
aas
(bad)
mov
adc
mov
pop
nop
xchg
ja
hlt
mov
lea
pop
adc
cdq
pusha
arpl
lds
push
adc
(bad)
clc
cmp
mov
out
push
xchg
repnz
pop
sub
lds
adc
inc
mov
pushf
inc
es
movs
aas
(bad)
mov
xchg
js
out
in
hlt
adc
(bad)
nop
inc
dec
add
and
data16
(bad)
xor
sub
xchg
mov
enter
ins
je
dec
xor
and
and
inc
lock
inc
es
fdivr
pop
jnp
pusha
jae
cmp
or
pushf
add
js
pop
leave
add
dec
adc
stc
pop
cmps
(bad)
push
add
out
inc
xor
and
aas
stc
mov
out
xlat
pop
sahf
out
inc
int3
push
enter
mov
outs
outs
pop
div
in
outs
sub
out
nop
add
clc
fmul
and
and
and
clc
movs
enter
cmp
add
push
enter
ja
shr
in
rol
jmp
call
shl
cmps
jle
leave
push
xor
mov
add
cmps
out
(bad)
(bad)
lock
xlat
leave
mov
push
loopne
inc
rcl
(bad)
addr16
adc
or
retf
repnz
(bad)
test
xor
jo
cdq
pusha
arpl
(bad)
pop
ss
mov
mov
lock
fdivp
push
rcr
push
pop
pushf
cmove
add
fwait
add
retf
push
inc
sub
dec
retf
xor
inc
xchg
enter
pop
retf
js
adc
dec
mov
mov
retf
enter
hlt
mov
scas
push
xor
gs
add
mov
ins
push
(bad)
int3
daa
add
mov
inc
push
mov
int
xchg
push
js
fwait
dec
jb
xchg
xchg
xor
mov
loopne
and
ins
outs
mov
mov
int3
lock
push
cmp
aad
out
pop
xchg
xor
loopne
outs
int
mov
loopne
int
pop
add
ins
in
popf
cwde
pop
int
push
jl
pop
jae
adc
cmp
int
into
cmp
int3
add
pushf
and
call
clc
outs
dec
outs
into
and
into
xor
mov
dec
add
shl
mov
jl
mov
sahf
div
iret
test
movs
push
in
push
pop
xchg
sub
add
adc
ins
sar
(bad)
pop
in
les
add
jbe
dec
xor
outs
in
and
cwde
das
iret
je
nop
cmps
add
adc
addr16
pusha
nop
xchg
(bad)
cmp
xsavec
dec
inc
pop
and
cld
add
shl
pop
xchg
fld
ror
push
cmp
pop
daa
pop
enter
ror
cmc
adc
das
jl
shr
add
add
shr
shl
addr16
push
lock
sar
je
add
fs
inc
out
cmp
dec
push
stos
pop
loopne
daa
dec
lock
(bad)
iret
ror
push
rcl
mov
aam
ret
ja
dec
rcl
xor
sar
ja
adc
pop
sar
ss
inc
test
ss
add
push
iret
add
js
out
mov
sar
push
cwde
push
fcomp
pop
add
add
es
xchg
ud2
mul
ror
jg
out
inc
mov
add
ror
push
add
add
hlt
add
add
add
add
test
mov
aas
aaa
mov
je
pop
xchg
ja
push
cmp
add
pop
in
mov
daa
das
xchg
adc
aad
dec
das
aad
and
ja
call
das
les
les
cmps
les
cmps
cmp
cmp
fs
dec
cs
enter
adc
xor
pop
jle
ret
inc
dec
and
push
dec
js
jg
popf
nop
adc
push
aad
ja
in
lds
push
and
mov
xor
outs
daa
mov
(bad)
and
pop
(bad)
mov
pushf
push
and
xchg
aad
xor
sub
adc
push
(bad)
fadd
jns
xchg
sbb
inc
fdiv
cmp
pop
add
push
in
dec
lahf
or
loopne
fsub
ss
ss
cmp
xlat
loopne
rcr
out
test
into
pop
dec
sbb
jnp
adc
add
(bad)
popf
cmp
add
lods
adc
xchg
xlat
sub
push
nop
loopne
lock
dec
ds
add
enter
fdiv
push
cmp
hlt
add
add
and
outs
nop
aaa
fcom
fsubr
cmp
sbb
nop
loopne
lock
pop
adc
out
xor
xor
pop
in
out
add
dec
fldenv
hlt
pop
stos
pop
xlat
daa
outs
fstp
push
(bad)
daa
mov
push
add
call
inc
inc
hlt
dec
and
or
jo
out
sar
fcmove
ss
nop
adc
or
fidivr
jno
out
xor
push
lods
in
(bad)
mov
add
pop
sub
xchg
xchg
add
push
repnz
aas
add
jb
call
and
outs
add
add
add
js
arpl
jnp
(bad)
(bad)
adc
das
fstp
rcl
fsub
enter
das
fdiv
fidivr
(bad)
sahf
out
in
je
mov
cmp
adc
mov
rol
aaa
pusha
mov
inc
iret
add
clc
das
fdivr
popf
nop
aam
in
fadd
add
(bad)
icebp
test
mov
inc
xchg
add
jl
and
jo
add
daa
mov
push
mov
das
outs
add
adc
nop
push
xor
and
mov
aas
das
call
and
fs
mov
ficom
es
shr
outs
daa
das
fmulp
and
loopne
push
fbld
(bad)
and
fdivrp
or
xchg
daa
in
sbb
sub
inc
das
adc
inc
push
or
dec
sar
daa
in
sbb
and
ja
xlat
ffreep
jnp
call
add
loopne
pushf
in
mov
loope
loopne
jb
cmp
dec
xor
xlat
(bad)
and
push
xor
(bad)
or
dec
loopne
loopne
jg
shl
pusha
mov
ja
xlat
and
test
xlat
mov
mov
daa
xlat
loope
push
loop
in
addr16
xlat
loop
loope
and
nop
sub
inc
aaa
loop
sbb
or
loope
push
pusha
loop
push
dec
rol
nop
adc
out
loope
fsubr
dec
add
cwde
mov
call
clc
jecxz
dec
push
or
push
je
inc
sub
jecxz
enter
pop
xor
cmp
pop
adc
pop
add
mov
jecxz
fcom
inc
iret
in
pop
pop
outs
xchg
invd
aam
daa
jns
in
invd
nop
int
pop
aam
in
in
out
in
push
jo
movaps
sub
rcl
in
xchg
push
fst
(bad)
mov
daa
pop
mov
add
jnp
(bad)
int3
aas
mov
fwait
xor
add
jo
push
pop
push
(bad)
in
pop
test
jnp
in
push
pop
inc
inc
xchg
jno
push
dec
mov
xor
iret
xchg
pop
scas
pop
dec
sahf
mov
pushf
movs
(bad)
lock
shl
scas
in
inc
pop
add
add
repz
or
inc
push
mov
retf
and
(bad)
mov
xchg
mov
fcomp
mov
rol
mov
add
iret
in
(bad)
cmc
sbb
nop
in
cmps
out
push
out
sub
jg
rcr
and
outs
cmp
movntq
in
pop
in
popf
adc
dec
mov
cwde
cmova
mov
repnz
in
fsub
int
push
adc
call
call
jl
xchg
enter
call
pop
repnz
jl
lock
sahf
adc
adc
add
aam
xor
fstp
push
jmp
fsubrp
adc
and
nop
out
js
pusha
in
mov
sahf
or
cwde
pushf
lods
mov
cwde
pushf
mov
nop
out
call
jb
pop
mov
adc
xor
jmp
loopne
xchg
adc
jns
in
nop
pushf
adc
test
sub
jb
jae
fsubr
sub
xchg
sbb
xlat
mov
jmp
xchg
push
or
inc
dec
jmp
je
and
je
add
or
daa
mov
or
mov
hlt
xlat
pop
add
call
iret
cmp
fwait
and
sub
cmp
dec
nop
test
sub
or
mov
rcl
or
iret
out
sahf
pusha
rcl
adc
sub
outs
inc
xor
push
or
xlat
mov
jnp
jnp
daa
mov
ins
aas
not
mov
(bad)
movs
(bad)
sahf
or
lods
mov
cdq
movs
xor
(bad)
pushf
xor
addr16
sbb
hlt
push
out
cwde
mov
or
dec
lods
nop
js
out
mov
jbe
aaa
lds
rol
out
rol
ins
push
jl
mov
adc
ja
add
cmps
jnp
sbb
iret
and
or
push
out
js
iret
pushf
or
jg
add
enter
out
sbb
adc
ja
sub
inc
xchg
sub
or
and
xchg
pop
out
enter
pop
rcl
out
daa
pop
sbb
mov
addr16
loopne
call
not
(bad)
fdiv
sbb
iret
cmp
lock
cmp
adc
jno
adc
add
bound
outs
cld
add
js
cmps
pop
adc
dec
mov
ja
mov
mov
and
test
clc
movs
or
(bad)
lods
rcr
imul
imul
pop
jg
push
push
pusha
out
dec
jg
iret
mov
ja
ins
test
cmp
and
inc
xor
pop
sar
add
adc
mov
fiadd
inc
lahf
add
and
push
fs
jns
in
inc
les
mov
and
mov
lods
sbb
div
hlt
push
repz
popf
nop
or
push
add
imul
inc
pusha
dec
inc
ja
pushf
ja
iret
les
rol
push
hlt
cmp
lahf
mov
call
enter
call
test
and
sbb
ins
shr
hlt
xor
ds
rep
mov
test
das
push
inc
imul
sti
cmp
repz
sahf
or
inc
popa
mov
stc
sbb
repz
repz
out
sahf
out
mov
iret
repz
clc
sub
sahf
out
or
cmp
sar
and
mov
sar
movs
fisub
cmps
stc
cmp
xor
jns
jns
and
jge
ja
call
js
fld
(bad)
test
sar
sar
dec
js
call
and
repz
repz
jns
out
lods
inc
and
div
scas
pop
mov
or
iret
mov
cld
ds
repz
out
add
iret
mov
pop
push
movs
fist
mov
lahf
out
cmp
fdiv
jns
push
jo
fst
mov
repz
out
movs
adc
jns
iret
loope
mov
outs
cwde
out
xor
enter
ror
mov
xor
leave
lock
xchg
push
mov
push
cmp
mov
out
rol
mov
ja
out
rol
push
pop
mov
repz
or
sahf
out
out
and
pop
mov
repz
sub
shl
jns
out
ret
loope
ret
out
cmp
inc
js
fsub
les
jns
dec
scas
loope
(bad)
cmps
stc
lahf
out
ds
push
and
push
imul
mov
lock
cmp
repz
jb
loop
retf
sar
pop
mov
call
push
test
and
pusha
xor
out
pushf
shr
iret
pop
jns
iret
repz
cld
sub
cmps
repz
out
sub
push
mov
pop
rcr
push
jnp
adc
cmps
push
cmps
stc
cmp
cwde
sar
cmp
js
repz
ret
rcl
aad
pusha
mov
ds
(bad)
outs
cwde
enter
sar
push
xor
out
imul
ds
repz
clc
xor
test
xor
out
jmp
(bad)
sahf
ja
out
fdiv
cmp
pushw
test
mov
ffreep
test
push
out
ds
test
mov
add
dec
cmp
call
rcr
inc
imul
add
sub
sahf
out
dec
and
pop
mov
out
sub
es
mov
push
jmp
cmp
out
nop
enter
imul
repz
in
pop
xchg
lahf
ja
out
(bad)
pop
out
(bad)
push
fmul
lock
mov
fidivr
hlt
into
push
shr
cmc
cmps
stc
cmp
push
push
out
sar
enter
mov
cmps
clc
out
ds
cmp
nop
stc
inc
stc
jbe
cwde
int
stc
cmp
push
cli
mov
sti
xchg
sbb
dec
js
cmp
sub
bound
repz
xor
push
sbb
(bad)
loopne
dec
repz
add
add
mov
ds
shr
xor
add
int
imul
push
xor
out
pop
mov
xor
out
mov
or
int
stc
add
push
mov
mov
push
outs
or
push
sahf
push
imul
iret
mov
adc
sahf
out
into
adc
repnz
adc
lock
sar
pusha
cwde
lock
int
imul
xor
out
call
pop
push
leave
sti
inc
sbb
repz
jnp
push
sbb
mov
jle
cs
jl
push
push
inc
push
outs
pop
add
imul
lds
jg
mov
push
and
push
clc
jne
xlat
and
sar
pop
movaps
push
clc
jns
out
jl
sub
xor
jae
imul
sub
cmp
out
cmp
xchg
out
sbb
mov
clc
int3
xor
xor
out
repz
fdiv
xor
push
rcr
sahf
out
xor
sbb
cs
int3
call
fcom
ss
clc
div
xor
jl
repz
idiv
inc
cmp
daa
cmp
test
lahf
out
cmp
adc
push
sub
imul
xor
aas
dec
inc
mov
repz
push
inc
jb
fdiv
inc
shr
jne
call
push
not
cmp
jne
add
jo
(bad)
and
stc
push
std
push
push
add
adc
or
xchg
mov
ins
or
mov
mov
pop
or
adc
xor
sub
outs
shr
fst
pushf
(bad)
push
xor
cmp
inc
inc
sub
cld
leave
jae
inc
aaa
inc
push
lods
je
add
adc
daa
(bad)
and
mov
ror
pop
ds
sbb
sbb
mov
pop
push
test
aas
xor
rol
out
fadd
and
xor
xchg
fnstcw
aaa
or
xchg
cld
inc
in
adc
push
nop
add
sbb
or
add
mov
push
in
dec
popa
outs
xchg
xchg
inc
push
xchg
pop
pusha
dec
sar
dec
pop
jo
or
adc
push
in
push
adc
pop
popa
dec
and
or
or
dec
imul
cmp
scas
popf
outs
fist
jmp
xchg
fbstp
inc
cwde
push
pop
ds
jge
pushf
dec
sar
jmp
jns
ds
inc
mov
ins
dec
jp
lds
inc
add
test
rcl
cmovge
mov
add
lar
loopne
pop
jl
mov
loope
ds
dec
mov
cli
push
add
(bad)
dec
or
jno
jne
stc
ja
test
std
sub
lsl
and
sbb
loope
inc
xchg
and
rcr
sub
pop
out
sbb
jmp
inc
mov
sbb
mov
sub
scas
ds
ds
or
mov
pop
xlat
dec
addr16
dec
outs
aaa
dec
add
mov
(bad)
in
es
pusha
add
mov
addr16
stc
push
stc
jb
scas
in
add
sbb
or
inc
add
jo
aaa
and
cmp
pop
jne
pop
aam
xchg
xchg
fist
or
outs
nop
clc
aam
pushf
pushf
test
fsubr
cdq
outs
in
ror
or
inc
push
mov
pushf
bound
sbb
cmp
addr16
sub
fwait
das
aaa
mov
jg
push
ins
add
adc
push
mov
pop
loop
and
enter
scas
jbe
inc
push
loopne
cld
xlat
dec
les
enter
sbb
push
in
pop
xor
add
and
pop
add
adc
mov
add
xor
push
aaa
xchg
mov
xlat
add
xchg
mov
aaa
loopne
dec
and
push
or
(bad)
adc
inc
jo
xchg
dec
cs
in
jbe
test
leave
dec
aaa
jb
add
out
add
pop
lock
nop
xchg
mov
xchg
and
in
mov
ins
sbb
les
pop
sar
pop
or
scas
add
inc
in
ss
adc
in
push
pop
or
mov
popa
xor
sub
jmp
mov
lar
daa
in
dec
cs
xchg
fdivr
add
or
movs
rcl
add
mov
xchg
lock
xchg
and
rol
enter
pop
and
mov
arpl
mov
pop
ficom
or
or
daa
pusha
scas
jb
xchg
pushf
les
cwde
sub
adc
sub
mov
cmp
inc
mov
cmp
outs
or
or
jo
mov
cmp
add
mov
cwde
pushf
pop
and
push
or
enter
xchg
cmp
clc
pushf
mov
cmp
xchg
push
mov
movs
daa
les
sbb
pop
xchg
pop
cld
cmp
in
cmp
outs
daa
movaps
dec
scas
mov
cmp
mov
aaa
xchg
xchg
enter
dec
es
push
pop
leave
and
push
and
or
pop
leave
nop
mov
adc
and
push
lea
push
sbb
and
mov
add
lahf
test
xchg
pushf
adc
push
daa
call
leave
and
xchg
jo
popa
xchg
pop
rcl
aam
dec
and
das
adc
xchg
xchg
sbb
and
jmp
gs
sar
pop
leave
dec
add
nop
xchg
xchg
mov
ja
movs
and
ss
fist
cmp
or
adc
mov
cmp
cwde
dec
in
sbb
mov
in
and
mov
(bad)
sar
jb
mov
adc
pushf
mov
dec
adc
daa
inc
scas
icebp
jae
jb
xchg
mov
sub
adc
jnp
jb
loope
aam
addr16
pusha
xchg
ss
dec
adc
add
daa
pop
dec
aaa
addr16
sti
in
shl
leave
inc
mov
sbb
data16
neg
not
inc
mov
push
cmp
fwait
adc
loopne
sbb
sbb
dec
adc
pop
adc
call
aam
ins
fnsave
loope
fld
pop
movs
lahf
hlt
cmps
xor
inc
fwait
movs
shr
mov
jnp
ins
fidiv
push
shl
pushf
add
and
leave
clc
inc
sbb
in
add
xchg
outs
in
jae
jle
mov
mov
out
mov
inc
push
push
fld
loopne
add
cld
call
loopne
add
mov
lock
test
outs
sbb
sub
dec
popf
mov
or
popf
mov
and
xchg
jo
mov
push
ror
add
(bad)
pop
or
es
pusha
xchg
sbb
daa
sbb
popw
adc
daa
sub
loopne
ins
sbb
daa
mov
movs
sbb
or
mov
loopne
(bad)
sahf
and
inc
jb
sahf
sub
mov
int3
sahf
sub
out
sahf
mov
xadd
lods
dec
add
in
and
sbb
sbb
daa
lock
dec
and
lock
add
mov
dec
jb
sbb
sbb
sbb
pop
es
pop
lahf
push
cmp
call
das
lahf
ss
pop
push
js
add
dec
leave
inc
mov
arpl
in
leave
rcr
add
jmp
repnz
sbb
lea
add
ja
fs
add
mov
mov
mov
ror
dec
cmps
shl
pop
mov
push
and
and
call
mov
nop
popa
push
mov
add
xchg
push
mov
mov
dec
outs
iret
cwde
mov
in
or
mov
jb
push
mov
pop
jb
mov
xchg
outs
mov
add
fstp
in
pushf
pushf
enter
add
out
mov
or
frstor
xchg
inc
xchg
push
je
pop
and
scas
jbe
(bad)
in
fiadd
and
push
je
enter
sbb
fldl2e
and
and
sub
movs
into
sar
loop
xchg
and
daa
nop
cmovs
movs
movs
or
enter
cdq
movs
push
cld
pusha
pop
leave
dec
outs
mov
cwde
sub
and
and
movs
enter
mov
cmp
test
mov
mov
movs
movs
and
inc
cmp
mov
in
in
das
movs
movs
movs
pop
and
in
xchg
push
enter
pop
movs
movs
movs
test
mov
add
jb
sbb
test
add
mov
and
mov
je
mov
cmps
mov
jl
or
jo
pop
adc
daa
cwde
aaa
cmps
in
and
shl
cdq
sbb
dec
aaa
mov
pop
pop
leave
and
cmp
ret
and
leave
sub
add
xor
and
cmp
retf
retf
retf
retf
test
test
test
test
and
retf
test
test
es
dec
dec
dec
pop
cmps
nop
fwait
test
dec
les
push
jmp
jmp
fstp
daa
pop
mov
push
addps
or
push
add
push
daa
dec
daa
js
or
or
rol
mov
mov
shr
dec
mov
outs
mov
pop
scas
dec
daa
fwait
cmp
stos
adc
mov
jns
loopne
gs
aaa
sub
mov
outs
movaps
dec
leave
arpl
daa
jns
inc
sub
jns
jns
stos
xchg
cmps
or
jns
mov
fs
pop
ror
pop
shl
in
jbe
adc
sbb
and
leave
leave
inc
dec
sub
xchg
dec
faddp
out
data16
xchg
dec
dec
mov
dec
cs
pop
out
xor
shl
in
add
add
cmp
in
add
sub
pop
in
ss
push
clc
daa
cmp
pusha
popf
pusha
daa
daa
jno
(bad)
xchg
or
in
inc
mov
fistp
jbe
jo
test
mov
fild
enter
push
and
fild
or
mov
xchg
dec
sbb
fsubr
mov
xchg
xchg
cwde
shr
xlat
pop
sub
bound
cdq
inc
outs
daa
cmp
js
jb
daa
mov
dec
test
dec
jb
sbb
or
sub
stos
imul
or
mov
addr16
lahf
sbb
xchg
mov
in
inc
xor
xchg
scas
and
lods
inc
mov
addr16
mov
aaa
das
add
aaa
sbb
add
das
xor
add
iret
add
or
pop
daa
mov
lock
imul
les
scas
pushf
fld
push
pusha
in
push
mov
xlat
jg
push
adc
rol
sbb
xor
popw
jb
scas
xor
add
jl
dec
or
sbb
rcr
fadd
jecxz
adc
xor
cmps
mov
outs
and
in
add
and
dec
pop
sub
in
xor
daa
pop
mov
mov
dec
das
sbb
dec
movs
(bad)
into
mov
nop
and
pop
leave
rol
(bad)
jmp
mov
jbe
push
jb
out
xor
pusha
daa
leave
pop
adc
mov
mov
dec
xor
xor
daa
loopne
dec
push
cwde
lahf
mov
sbb
and
pop
mov
mov
add
popf
xchg
xor
ret
or
mov
adc
mov
jbe
mov
dec
dec
jb
add
call
xor
div
push
call
mov
dec
inc
inc
mov
ja
xchg
mov
sbb
xchg
xchg
mov
mov
add
add
mov
pop
and
mov
add
xor
xor
and
leave
add
dec
and
mov
push
mov
mov
(bad)
imul
cdq
mov
push
mov
shrd
cmp
ss
sbb
movs
leave
dec
aaa
repnz
or
push
ja
xchg
pcmpeqb
pop
inc
pop
push
in
mov
call
mov
vmread
add
inc
sahf
int3
das
xchg
sahf
add
out
add
or
mov
in
jo
pop
xor
adc
and
mov
(bad)
xchg
dec
inc
sub
rol
mov
inc
or
push
or
sbb
jb
adc
add
add
inc
push
dec
pop
pop
or
jb
enter
or
mov
or
into
jb
enter
adc
adc
adc
cdq
sbb
push
adc
mov
jnp
adc
cmp
or
push
or
or
inc
mov
ds
cmp
mov
dec
cmps
call
mov
mov
mov
leave
pop
enter
(bad)
cmp
xchg
daa
mov
push
aam
cmp
hlt
inc
or
adc
jo
in
pushf
ret
xor
cmp
and
sub
dec
dec
jb
cmp
rol
loopne
jbe
leave
cmp
add
sub
in
cs
lock
cmp
dec
scas
in
sbb
jb
mov
mov
cmp
push
nop
in
mov
push
sar
ror
dec
push
and
test
lea
cmp
scas
fsub
cld
pop
fs
inc
push
mov
in
jmp
js
das
add
mov
dec
push
add
add
daa
test
mov
mov
adc
mov
sub
push
daa
cmp
push
add
pop
sbb
push
into
xchg
add
movs
cmps
in
adc
push
jmp
dec
ds
outs
psrlw
aas
xchg
je
xor
imul
pop
push
push
mov
pushf
pop
nop
cwde
enter
pop
out
mov
aaa
(bad)
mov
leave
mov
cld
test
scas
mov
mov
mov
retf
push
xchg
or
dec
dec
scas
ror
loope
inc
dec
dec
out
std
mov
push
daa
fisttp
shl
shr
push
divps
inc
mov
addr16
push
js
or
or
inc
movs
outs
mov
mov
in
in
dec
pop
dec
add
lar
adc
pop
mov
mov
mov
repnz
loop
inc
inc
pusha
daa
xchg
jl
aad
xlat
push
mov
in
fadd
daa
call
outs
mov
xor
mov
leave
mov
fs
push
iret
mov
test
mov
rcr
jecxz
xchg
xchg
retf
out
add
push
in
and
shl
xor
sub
mov
pop
add
iret
jb
je
rcr
ror
sbb
add
rcl
adc
inc
or
push
mov
dec
in
loopne
inc
cmp
pop
pop
jo
mov
mov
mov
out
jmp
jb
in
test
add
or
add
ins
jb
xlat
ret
pusha
rol
leave
call
push
addr16
inc
xchg
pushf
pop
mov
mov
cmp
push
das
ret
push
retf
inc
shl
ret
add
add
inc
xor
arpl
ror
and
dec
pop
mov
push
and
fstp
push
enter
test
imul
inc
sahf
pushf
mov
add
push
jb
xchg
mov
or
clc
das
mov
adc
push
cld
sub
ja
dec
fimul
mov
mov
nop
sti
in
inc
cmps
(bad)
add
adc
xchg
add
xchg
mov
jbe
arpl
dec
or
jb
inc
repnz
inc
shl
leave
inc
lock
in
mov
pusha
daa
ret
hlt
pop
(bad)
test
dec
and
in
push
enter
mov
and
mov
leave
cmp
mov
lea
enter
mov
dec
adc
leave
add
or
adc
jmp
mov
les
in
in
leave
mov
in
shr
(bad)
dec
add
in
adc
pushf
mov
call
dec
dec
xchg
jl
out
cmps
push
packuswb
pusha
imul
fistp
push
clc
inc
jb
mov
dec
and
and
pusha
addr16
add
mov
lahf
retf
fwait
inc
xchg
ror
mov
loopne
jnp
ror
fild
(bad)
add
(bad)
mov
add
int3
pop
add
daa
sub
in
or
int3
jo
dec
mov
add
enter
pushf
add
cmps
pop
cmp
in
push
or
mov
rcr
or
jb
cmovg
enter
push
sub
mov
push
shl
push
push
movs
or
rcr
outs
mov
into
push
adc
enter
add
add
add
aas
push
dec
pop
pop
or
in
xchg
and
or
or
sbb
jb
or
leave
adc
xchg
and
adc
adc
adc
jb
iret
add
adc
mov
inc
mov
sbb
pop
sbb
adc
ret
or
push
add
inc
cmp
aam
iret
push
sbb
inc
jb
leave
loopne
push
leave
enter
(bad)
rcl
fwait
mov
mov
jb
je
rcl
rcl
jg
xchg
and
rol
ror
rcl
mov
out
ja
repnz
dec
push
aaa
add
inc
push
mov
mov
mov
iret
mov
pushf
setle
test
popf
pop
and
call
sub
(bad)
mov
daa
shl
push
cmp
inc
ja
les
mov
mov
mov
test
call
call
push
aaa
aad
leave
shl
push
call
inc
xchg
and
push
pop
add
jno
xor
enter
add
and
imul
and
(bad)
jmp
xchg
and
aam
aam
aam
in
inc
jb
and
mov
and
addr16
mov
xchg
mov
(bad)
iret
nop
lock
cmps
xchg
(bad)
add
aad
or
push
les
jns
dec
lahf
pop
mov
enter
or
sub
push
lods
dec
es
fild
sahf
xor
push
cwde
mov
pop
mov
add
pop
jb
in
aas
mov
and
out
(bad)
push
xor
fwait
mov
(bad)
xor
cmp
test
push
dec
dec
rol
scas
pop
test
push
mov
jmp
(bad)
repz
retf
retf
retf
xlat
add
or
push
xlat
and
retf
retf
retf
xlat
sub
aaa
xlat
inc
xlat
push
retf
retf
retf
retf
xlat
popa
xlat
outs
xlat
jge
mov
retf
retf
retf
xlat
fwait
xlat
stos
xlat
mov
retf
retf
xlat
(bad)
xlat
jecxz
repnz
in
pop
jns
pop
pop
fcomp
ins
sbb
fs
inc
pop
inc
and
inc
jbe
xchg
jl
outs
xlat
pop
or
inc
jmp
jbe
and
push
daa
jo
(bad)
and
bswap
addr16
inc
push
push
psubusb
pop
(bad)
and
pop
(bad)
pop
movs
mov
cmp
in
mov
xchg
mov
mov
(bad)
out
shr
dec
fisub
cld
push
pop
and
mov
mov
mov
mov
ret
jg
sbb
adc
popa
movntq
sbb
mov
or
xchg
pop
pop
lock
sbb
xchg
and
in
cmp
movs
or
rcr
jbe
je
test
(bad)
in
jbe
mov
sub
add
arpl
fsub
arpl
mov
pop
ror
fld
mov
repnz
dec
pop
call
or
xchg
mov
pop
adc
mov
mov
push
xchg
popf
dec
scas
cmp
fisub
and
cmp
push
inc
add
in
xchg
add
add
inc
mov
jle
mov
xchg
or
stos
pop
mov
ror
mov
and
in
fisttp
bndldx
pop
and
xor
cmp
inc
mov
mov
sbb
inc
cmp
enter
movs
addr16
xchg
(bad)
das
cdq
call
loopne
adc
aaa
mov
push
das
loopne
sub
pop
and
fs
fbstp
pushf
pop
mov
pop
test
out
fsub
add
xchg
and
out
add
add
add
sbb
jb
clts
sbb
sub
xor
mov
push
or
cmp
enter
push
mov
cdq
adc
inc
mov
adc
in
enter
adc
sbb
sbb
sbb
das
xor
xchg
and
inc
sbb
sbb
fst
jl
mov
mov
jb
and
es
shl
fisubr
in
sub
repnz
sub
or
push
sub
sub
xor
inc
das
dec
xor
jb
enter
xor
test
inc
mov
xor
dec
es
retf
jecxz
pop
pop
leave
arpl
in
push
sbb
rcr
cmp
add
clc
fbld
mov
push
dec
daa
scas
pop
jmp
fmul
jo
cwde
pop
loopne
test
xchg
(bad)
and
sub
iret
cld
ja
fisubr
push
nop
dec
cs
dec
fs
and
adc
out
leave
inc
shl
or
sbb
shl
out
dec
and
pop
push
or
jmp
mov
in
push
pop
inc
shl
shr
nop
cwde
mov
test
xchg
ror
in
lock
jb
lods
hlt
xchg
xchg
outs
xor
test
mov
add
xor
enter
add
add
inc
xor
loopne
xchg
push
cld
mov
jmp
cs
outs
rcl
cs
dec
mov
mov
mov
pop
sti
inc
dec
cmp
imul
ins
mov
das
push
cmp
cmovbe
in
leave
enter
addr16
in
in
jge
xchg
aas
sahf
or
inc
outs
test
out
or
aam
shl
pop
mov
enter
(bad)
jmp
jb
in
add
jmp
or
and
sbb
pop
sbb
and
sub
repz
push
or
push
jns
or
or
daa
sti
cwde
mov
push
jmp
data16
push
jmp
pop
and
hlt
dec
adc
movs
loopne
jmp
test
in
(bad)
addr16
outs
xchg
mov
scas
push
xchg
dec
cs
nop
mov
cs
in
adc
mov
and
adc
inc
xor
pop
add
fidiv
addr16
shr
mov
jae
out
(bad)
out
push
adc
pushf
pushf
sbb
sbb
and
add
movs
sbb
jg
or
out
or
push
pop
daa
out
sbb
add
jo
pop
sbb
ins
pop
mov
ror
inc
dec
sahf
mov
add
out
imul
dec
dec
outs
pxor
dec
push
popa
jmp
ja
mov
faddp
and
inc
jg
enter
dec
rcr
add
mov
dec
jne
lock
in
fst
sub
add
aas
push
dec
pop
imul
mov
or
push
mov
add
lock
shl
mov
setg
outs
ins
or
aaa
jb
xchg
je
enter
jb
pop
cld
nop
fwait
(bad)
xor
repnz
add
sub
aas
push
jo
repnz
cmp
or
in
enter
add
jns
jb
or
add
das
inc
mov
dec
or
or
leave
enter
adc
js
in
leave
in
adc
mov
xor
jb
pop
test
adc
call
mov
(bad)
fsub
call
lock
push
add
call
outs
adc
mov
(bad)
addr16
add
in
out
jb
inc
pop
mov
push
(bad)
repz
inc
sub
nop
add
cmp
dec
lea
xchg
repz
loope
in
add
xor
jb
hlt
xor
mov
das
hlt
inc
in
in
dec
cmp
pop
jbe
add
ss
dec
xlat
mov
jae
mov
mov
fs
enter
loopne
call
lock
cmc
add
cmc
or
dec
inc
sahf
adc
and
sub
xchg
xchg
daa
xor
cmp
repnz
dec
push
adc
pusha
push
jns
jo
push
push
cmc
mov
jbe
dec
mov
dec
jb
xchg
loopne
not
je
repnz
mov
push
aam
leave
fld
iret
test
jne
ja
fmul
sbb
loopne
(bad)
mul
js
movs
fwait
dec
ja
mov
xchg
sbb
mov
dec
dec
retf
add
(bad)
loope
in
retf
leave
leave
xchg
add
add
pop
cmp
jb
clc
add
or
sub
sbb
or
scas
push
jbe
ret
cwde
dec
clc
(bad)
clc
fst
jo
js
pop
mov
fst
mov
je
mov
daa
outs
mov
loopne
daa
daa
daa
call
xchg
push
add
ja
stc
xor
cmp
cmovbe
inc
daa
ins
aam
ja
aas
outs
or
cdq
cmps
mov
or
dec
retf
(bad)
ja
and
xchg
cmc
or
cli
xor
adc
(bad)
out
cli
dec
js
ja
jns
mov
mov
popa
mov
add
cwde
(bad)
pushf
pop
xchg
add
pop
aas
mov
in
nop
mov
or
or
inc
xchg
in
psubd
div
and
sti
or
push
aas
dec
inc
mov
and
xor
jb
sbb
dec
pop
jbe
jb
pop
pop
packuswb
jb
dec
add
cmp
and
mov
xchg
nop
pop
mov
mov
in
xor
call
cmp
icebp
add
push
jo
dec
repz
ret
jae
xchg
out
dec
push
outs
jns
pop
xor
leave
or
and
jae
movups
fcom
cmp
dec
sahf
adc
sbb
jns
xchg
clc
sbb
es
and
sub
pop
fsub
fmul
loopne
xchg
popa
cwde
xchg
pop
adc
xchg
adc
into
mov
out
(bad)
sbb
add
add
dec
call
and
in
and
xor
pop
jg
cld
pop
jne
rcl
mov
cld
nop
cld
cwde
cld
mov
nop
test
nop
jl
or
jnp
daa
and
or
mov
jmp
(bad)
or
push
cmp
in
pop
pop
mov
sub
into
mov
or
(bad)
pop
or
pop
(bad)
mov
push
daa
movzx
or
daa
call
(bad)
std
mov
xchg
std
ror
fadd
dec
pop
pop
jge
jg
mov
mov
mov
fistp
push
clc
and
leave
inc
mov
and
imul
lahf
cmp
mov
repz
add
sub
rcr
push
push
out
inc
mov
jmp
mov
outs
pop
imul
add
adc
and
pop
mov
enter
scas
add
mov
lds
enter
mov
scas
push
sbb
mov
repnz
xor
add
dec
dec
add
dec
or
dec
enter
or
pop
push
push
in
mul
nop
fwait
add
cmps
enter
repnz
jmp
jns
jnp
or
add
adc
repnz
mov
scas
or
xor
js
xor
push
add
mov
cmps
fadd
popa
movs
xor
push
sar
xchg
and
jb
and
sub
xor
jb
enter
add
add
dec
aaa
push
iret
or
es
mov
push
call
stos
add
mov
in
data16
add
cmp
movzx
and
fisttp
and
stc
sbb
or
pop
dec
ins
or
shl
in
dec
fimul
loopne
push
aam
push
mov
sbb
ins
pop
pop
femms
dec
add
(bad)
aas
inc
xor
mov
pop
inc
(bad)
enter
test
mov
mov
aas
xchg
add
leave
loopne
lock
ins
cmp
push
sub
sub
daa
xor
ror
dec
iret
test
cmps
and
mov
fwait
add
aas
test
test
fild
adc
and
mov
sbb
and
daa
pop
push
pop
in
dec
cmp
cs
add
mov
xchg
lahf
stos
or
mov
mov
ror
pop
shr
pop
pop
push
push
pop
sbb
in
in
ja
pop
pusha
mul
and
jl
add
es
in
push
test
mov
dec
mov
or
cmp
add
call
add
loopne
inc
jb
jmp
sub
xor
sub
aas
push
push
jae
add
or
test
dec
(bad)
mov
mov
fld
psubb
repnz
or
invd
adc
jns
bnd
pop
sub
xor
or
retf
pop
sbb
das
or
dec
mov
and
and
data16
and
test
shr
das
xor
call
or
call
or
cmp
inc
add
retf
xchg
add
add
dec
cs
xchg
or
mov
rcr
cmps
mov
push
lahf
push
cmp
fs
add
sub
add
aas
aas
add
dec
or
or
or
xchg
(bad)
mov
mov
pushf
pushf
pushf
adc
mov
ret
into
pushf
pushf
pushf
pushf
ftst
out
out
inc
mov
in
enter
sbb
cs
jns
repnz
push
adc
sbb
adc
cwde
leave
retf
retf
or
cmp
and
in
push
clc
add
add
dec
outs
daa
mov
pop
sbb
cvttps2pi
popf
push
jmp
push
jo
inc
mov
push
mov
sahf
mov
sbb
fld
or
and
inc
das
prefetchwt1
dec
or
adc
ja
mov
scas
mov
mov
dec
into
add
in
push
xor
out
test
in
xor
cmp
inc
cs
jb
enter
add
add
jo
lahf
sar
jecxz
add
adc
adc
imul
add
dec
dec
scas
xchg
xor
fisttp
scas
out
mov
leave
push
lock
adc
mov
jnp
or
pop
push
add
add
popf
xor
aas
dec
out
mov
dec
mov
nop
dec
dec
dec
dec
cwde
mov
mov
data16
out
adc
or
xor
sbb
das
je
mov
pop
adc
enter
clc
and
invd
jb
enter
add
add
sbb
sub
xor
cmp
inc
or
cmp
cmp
mov
mov
data16
adc
rol
add
add
loopne
dec
(bad)
or
scas
(bad)
mov
adc
ss
fs
add
bound
cmp
pop
pop
js
or
cdq
movs
or
scas
or
daa
daa
pop
adc
adc
(bad)
icebp
in
leave
xchg
cld
push
pop
adc
jb
sbb
sbb
sbb
sbb
dec
dec
sbb
adc
daa
dec
dec
inc
push
pop
push
mov
xchg
retf
data16
ss
pop
stos
add
push
sbb
inc
xchg
lods
pop
mov
pop
pop
mov
dec
pop
xchg
add
mov
ja
inc
(bad)
fisttp
or
mov
shrd
mov
xchg
and
or
fcomp
jecxz
enter
out
or
sbb
inc
repnz
inc
mov
sbb
jo
enter
das
sbb
in
leave
in
mov
das
rol
dec
aaa
repnz
push
loop
or
cdq
sbb
nop
in
xchg
ins
push
push
add
add
jb
pop
mov
xchg
pop
or
test
xchg
or
pop
pop
leave
xchg
ins
sbb
mov
addr16
pusha
mov
int3
mov
stos
xchg
add
and
pop
mov
xor
xor
mov
sbb
and
mov
xchg
aas
mov
bnd
push
add
mov
add
and
dec
or
in
xchg
or
or
pushf
loopne
or
lahf
leave
adc
adc
adc
cmp
push
sbb
add
jb
xor
cmp
inc
add
mov
or
enter
or
mov
xchg
push
lahf
rsm
push
or
or
adc
adc
ror
sbb
repnz
xchg
sbb
sbb
sbb
sbb
or
pop
cs
push
mov
imul
sbb
jmp
movs
xchg
and
rol
fmul
xchg
adc
call
dec
dec
jb
push
es
xor
mov
push
addr16
sub
iret
enter
ja
movs
loopne
inc
add
pop
adc
sbb
push
push
sbb
jb
dec
add
pop
add
daa
daa
inc
mov
jo
add
adc
es
add
or
pop
cmps
cmp
jbe
fisttp
lahf
mov
shr
jmp
xchg
(bad)
xlat
pop
loop
fucomip
or
gs
adc
inc
mov
add
add
xchg
fst
pop
outs
jb
in
fnstcw
das
test
lea
xchg
or
bnd
mov
shl
push
sahf
dec
adc
inc
mov
add
add
xchg
add
xor
nop
cwde
mov
push
leave
fs
retf
leave
inc
rcr
pop
xor
push
iret
and
int3
jo
pushf
sbb
xchg
mov
push
jns
mov
enter
and
xchg
and
xchg
mov
xor
cmp
mov
pop
dec
inc
xchg
mov
xchg
mov
movs
jb
push
popf
or
push
cdq
dec
xchg
and
add
adc
add
dec
(bad)
mov
pop
daa
es
dec
mov
out
and
and
lds
push
add
or
jo
pop
aam
dec
sbb
mov
leave
mov
add
xor
daa
daa
adc
mov
xchg
je
cmp
mov
popf
pop
mov
pop
rol
mov
sar
in
mov
lahf
add
add
or
test
cwde
lahf
jg
repnz
pop
xchg
push
inc
push
add
jnp
sahf
pop
add
sbb
xchg
or
mov
call
imul
push
sub
xchg
xchg
xchg
xchg
inc
dec
push
bound
js
mov
in
leave
enter
test
daa
mov
mov
loopne
daa
xchg
xchg
push
addr16
inc
sub
mov
and
sub
sbb
push
cvtdq2ps
sub
jno
jb
dec
mov
ss
cmp
jmp
sub
jnp
shr
fsub
mov
cmova
mov
add
sub
outs
sub
(bad)
or
xchg
sub
sub
pusha
add
add
push
xchg
xchg
mov
pand
enter
add
fs
fiadd
out
out
out
pop
xchg
xchg
addr16
or
ror
das
or
push
ja
fisubr
pusha
packssdw
add
add
mov
add
mov
outs
xchg
add
or
ror
or
jns
xchg
mov
or
mov
xor
cmp
bnd
das
jg
mov
xchg
add
mov
push
stos
pop
mov
dec
ror
outs
daa
and
xlat
psrad
adc
movs
pop
inc
mov
or
sub
add
addr16
fisubr
dec
add
add
leave
leave
leave
xchg
pop
imul
add
enter
imul
or
in
setno
cdq
adc
mov
inc
dec
dec
dec
or
enter
mov
xor
leave
rcl
pop
fisub
loop
mov
loop
jmp
ss
pop
push
daa
dec
inc
cmp
mov
add
mov
fadd
addr16
repnz
paddw
das
or
in
enter
pop
push
or
sub
xor
cmovp
push
dec
sub
cmps
in
sti
call
in
mov
xor
add
in
push
cmp
fidiv
jb
xor
push
and
(bad)
fwait
cmps
push
jmp
fld
ror
je
bnd
pop
jecxz
jmp
ret
mov
add
stos
add
frstor
pop
fsub
and
xor
test
or
jb
imul
mov
jns
add
lods
push
mov
sahf
int3
sahf
mov
or
xlat
cld
sahf
int3
sahf
loop
pop
in
clc
push
rdmsr
add
adc
xor
dec
add
xchg
xchg
out
xchg
inc
mov
sub
xchg
shl
xor
xor
das
sbb
pop
call
dec
fisubr
fldenv
and
out
psllw
cld
xor
mov
xchg
pop
adc
sbb
jb
sbb
xor
ds
cmovns
leave
in
jbe
fbld
mov
leave
mov
fcmovne
leave
or
stos
cmp
pmulhuw
push
jg
rol
(bad)
in
fs
add
rcr
pavgb
push
jb
jmp
mov
add
and
pop
and
sahf
cmp
pop
push
cmp
adc
sub
xchg
pop
xchg
lock
nop
push
fwait
sbb
sbb
add
xchg
and
aad
loopne
jmp
fnstenv
add
(bad)
(bad)
das
jnp
mov
or
(bad)
call
ja
loop
add
pop
or
add
jg
in
adc
cmps
lods
cmps
movhps
push
shl
adc
push
lods
or
mov
push
jo
inc
pop
xchg
pop
nop
fild
lods
mov
scas
outs
and
fidiv
pushf
and
in
push
push
push
xchg
mov
ret
cmp
retf
data16
adc
daa
ins
mov
imul
aas
mov
dec
repz
dec
mov
add
adc
or
push
daa
vmwrite
or
pusha
imul
add
sbb
push
repz
add
pop
out
int
pop
sbb
ins
dec
push
pop
sahf
div
xchg
inc
add
outs
aaa
ins
jnp
out
imul
add
mov
push
sub
cmp
repz
mov
mov
pop
sahf
push
dec
push
jns
out
xor
push
cmps
pusha
out
sahf
out
add
pushf
dec
pop
sbb
xor
mov
mov
(bad)
inc
or
push
daa
or
pop
jmp
inc
push
or
inc
add
fild
sub
inc
aas
ret
inc
mov
outs
pop
aas
xor
add
add
push
test
mov
or
pushf
and
int
jb
dec
push
push
jbe
aas
stc
xchg
test
mov
in
(bad)
mov
xor
push
cs
or
jb
and
call
xor
imul
jne
ja
mov
sar
inc
pop
movs
and
inc
dec
push
push
or
mov
xchg
lds
fs
adc
cmp
inc
aam
lock
imul
sbb
push
pcmpgtb
pop
pop
xchg
inc
xor
or
push
imul
push
outs
push
sahf
adc
shl
jo
popa
dec
inc
jle
dec
ins
pmulhw
xchg
jnp
push
cwde
and
aas
xchg
and
call
adc
rep
(bad)
push
sbb
scas
or
jmp
fmul
aaa
or
in
jbe
scas
adc
iret
leave
in
in
adc
and
fcmovne
inc
push
addr16
das
push
xorps
mov
ins
das
ins
push
and
sbb
push
pop
cmp
(bad)
or
in
jns
pop
xchg
sub
in
movs
fbld
fdiv
sbb
les
in
stos
movups
enter
adc
inc
in
inc
add
add
xor
fwait
clc
adc
sub
hlt
xchg
cs
sahf
pmullw
push
fistp
adc
jg
pop
in
fild
sbb
ds
test
add
xor
xchg
and
enter
sbb
inc
and
or
mov
pop
mov
xchg
outs
mov
add
movs
add
cmp
pop
stc
enter
pop
movs
sbb
mov
fisub
add
cdq
cmovo
push
mov
sbb
in
call
mov
push
add
mov
xor
inc
mov
rcr
fsubp
stc
jb
jle
mov
xchg
cmc
das
popf
inc
push
inc
iret
repz
cmp
xor
sub
sahf
int
cmp
adc
pushf
cld
hlt
ss
mov
call
mov
jns
hlt
lock
call
in
fsub
push
aam
cmp
cmp
pop
pushf
mov
repz
repz
mov
aas
iret
ins
pop
dec
or
iret
repz
push
inc
push
cmp
sub
sbb
addr16
add
hlt
in
jns
out
mov
iret
jnp
out
js
push
iret
repz
dec
inc
cmp
ficom
call
sahf
out
aam
mov
mov
jns
out
js
cmp
rcr
sar
(bad)
pop
add
fs
pop
arpl
ins
outs
add
push
inc
or
push
mov
sbb
xor
scas
f2xm1
icebp
das
push
sub
outs
dec
xchg
mov
inc
push
(bad)
add
jbe
or
fidiv
cs
add
and
mov
in
ins
pop
lahf
sbb
cwde
jae
ins
sub
mov
add
push
add
fiadd
inc
or
cmp
inc
dec
jmp
jg
arpl
(bad)
sbb
xchg
mov
adc
das
sbb
cwde
adc
jb
nop
and
setno
inc
mov
add
enter
paddusb
fmul
in
or
mov
push
js
adc
pop
push
into
punpcklbw
pop
push
push
pop
cmp
enter
and
cmp
jmp
es
adc
scas
mov
adc
ja
jnp
out
cmp
mov
cwde
mov
sahf
out
cmp
adc
mov
repz
repz
test
repz
je
pop
dec
cmp
mov
fnstcw
mov
loopne
push
mov
sahf
out
mov
ins
pop
inc
push
jns
daa
iret
inc
sub
(bad)
cld
push
call
int3
mov
cmp
repz
xchg
mov
call
xor
iret
fwait
imul
cmp
xchg
sbb
repz
repnz
mov
sahf
cmps
push
das
dec
ins
mov
scas
aas
inc
or
je
aam
sub
add
xchg
cdq
mov
push
mov
sbb
push
xchg
aaa
and
jg
add
enter
xchg
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
(bad)
(bad)
(bad)
dec
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
(bad)
(bad)
call
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
fistp
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
pop
add
(bad)
jmp
aam
imul
loope
jp
iret
inc
(bad)
(bad)
(bad)
mov
scas
mov
or
add
cmps
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
(bad)
(bad)
(bad)
(bad)
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
jge
int3
add
sti
aas
jno
or
mov
pop
(bad)
(bad)
(bad)
jmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
fwait
fs
jmp
mov
ins
scas
add
out
mov
(bad)
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
(bad)
(bad)
(bad)
call
inc
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
(bad)
jmp
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
(bad)
call
daa
jmp
mov
inc
sar
(bad)
(bad)
(bad)
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
outs
std
xlat
cmp
mov
sbb
add
mov
(bad)
(bad)
(bad)
push
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
(bad)
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
(bad)
call
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
adc
enter
fcomp
inc
cmp
pop
sub
push
jns
not
pop
pop
dec
popa
pusha
and
add
bound
dec
pop
push
(bad)
fdiv
jnp
mov
mov
rcr
adc
call
xor
xchg
ja
adc
sbb
or
femms
out
mov
ficom
push
push
and
dec
xchg
pop
in
add
sbb
push
rcl
inc
sbb
add
pop
sub
(bad)
inc
push
adc
or
push
or
push
jp
repz
repz
cwde
jl
addr16
push
cmp
add
in
add
(bad)
pop
mov
fldenv
cmp
pop
sahf
and
and
mov
push
push
daa
inc
push
es
mov
dec
fdivp
push
mov
push
test
cmp
jnp
ds
mov
push
add
fiadd
cmp
mov
hlt
call
dec
and
iret
repz
loopne
out
lock
sub
cmp
xchg
ja
mov
pop
mov
or
or
adc
and
lods
fwait
scas
repnz
scas
fwait
sub
and
cmps
pop
rcl
and
cmps
loopne
pop
retf
dec
and
sub
dec
ficom
jg
mov
push
jo
addr16
xchg
push
cmps
cmp
aaa
dec
add
xor
idiv
(bad)
lahf
add
mov
(bad)
pop
or
(bad)
jg
jne
mov
inc
sub
inc
inc
or
add
add
adc
add
(bad)
dec
data16
adc
int
sbb
ja
fld
sub
add
(bad)
(bad)
(bad)
fistp
ffreep
hlt
pop
push
out
cdq
mov
(bad)
xchg
inc
pop
inc
test
out
push
inc
sbb
(bad)
(bad)
(bad)
fidivr
pop
mov
jmp
cli
dec
jmp
popf
nop
and
(bad)
and
jl
mov
(bad)
dec
adc
scas
sti
popa
outs
ss
cmp
aaa
shl
aas
or
(bad)
(bad)
(bad)
jmp
adc
jg
clc
xor
js
ror
loop
dec
mov
xchg
jp
fwait
stos
inc
lods
(bad)
(bad)
(bad)
(bad)
cld
out
daa
xchg
sub
lock
add
into
xchg
dec
call
inc
adc
loopne
mov
mov
(bad)
(bad)
jmp
and
push
(bad)
xchg
out
cmp
jbe
data16
test
mov
sub
cmp
repnz
(bad)
(bad)
dec
scas
xchg
pop
and
mov
dec
loope
cs
inc
xor
adc
mov
in
sar
push
push
push
jo
aas
sets
mov
mov
jl
outs
push
shl
xor
lods
add
jl
cmp
xlat
cmp
js
mov
stc
cmps
stc
out
jge
push
push
push
xchg
enter
add
cmps
stc
cmps
fadd
out
mov
mov
mov
add
pop
and
aad
out
add
jne
dec
or
pop
add
cmp
xlat
mov
lock
cld
out
je
inc
popf
nop
push
cwde
add
jb
pushf
ds
(bad)
mov
inc
push
pusha
inc
mov
or
inc
sar
or
adc
sbb
xor
je
cmp
aaa
push
mov
inc
adc
test
mov
jnp
pop
adc
sub
pusha
ror
scas
push
inc
adc
jmp
repz
lock
jmp
adc
adc
add
add
add
push
adc
xor
inc
inc
inc
sbb
inc
fcom
push
aaa
push
cmp
pusha
iret
jl
aad
xchg
das
dec
outs
fs
add
add
or
inc
sti
jo
inc
push
dec
iret
inc
adc
lods
idiv
aaa
aas
inc
popf
cwde
rcl
dec
inc
push
and
pop
push
inc
or
push
outs
outs
push
jge
pop
adc
(bad)
call
and
mov
and
inc
inc
inc
add
push
xlat
fistp
imul
cwde
sub
inc
add
cmp
hlt
sub
loopne
out
daa
add
add
xor
aaa
push
aaa
fmul
fimul
push
outs
adc
inc
sar
dec
adc
ins
add
mov
fcmovbe
inc
loopne
aaa
push
imul
je
push
adc
xchg
pusha
adc
jo
push
inc
fild
aaa
sbb
inc
je
inc
push
xchg
and
cmps
push
js
pop
mov
pushf
adc
push
mov
add
jbe
dec
push
mov
sti
inc
xchg
adc
inc
stos
dec
outs
test
loope
and
cli
bound
jo
ret
ret
xchg
jo
push
popa
and
pop
inc
pop
mov
or
inc
outs
jb
inc
lds
dec
out
jmp
out
push
test
fild
push
xchg
(bad)
test
mov
aad
cmp
pusha
(bad)
shl
and
sbb
xor
lods
push
ja
inc
mov
add
pusha
or
add
push
add
jle
adc
pmaddwd
xchg
cli
pop
inc
mov
or
and
mov
sbb
pusha
add
ins
and
not
or
inc
pop
out
lds
inc
mov
out
sub
icebp
push
jge
lds
(bad)
out
xchg
jmp
inc
mov
shl
add
inc
out
inc
push
ret
push
jg
inc
ins
cwde
dec
lods
imul
inc
pop
inc
das
pop
push
(bad)
or
pop
leave
sbb
add
scas
pop
pop
cmps
outs
loope
push
xor
outs
popa
adc
lahf
xchg
mov
cs
dec
add
pop
outs
sbb
add
sub
and
(bad)
jb
inc
or
push
sub
pop
pop
sub
icebp
mov
inc
aaa
xor
mov
push
jne
pop
inc
add
push
not
outs
dec
cmps
rol
mov
aas
push
js
mov
xlat
aaa
fcomi
pusha
adc
add
push
push
mov
inc
xchg
lea
(bad)
xchg
scas
ss
movs
jg
inc
cmc
mov
adc
sub
jno
pop
push
mov
push
fisttp
add
or
(bad)
mov
rol
popa
or
mov
inc
push
fistp
inc
jmp
xchg
pop
add
mov
and
repz
dec
and
inc
imul
daa
inc
xchg
ficom
lahf
add
pmullw
dec
or
arpl
push
mov
adc
pop
push
lods
ins
xchg
fist
dec
add
pop
inc
cmc
and
adc
push
jno
sbb
xor
mov
test
loop
stos
mov
stos
movs
lahf
fst
or
mul
shr
scas
push
mov
(bad)
pop
jnp
inc
sub
mov
out
inc
adc
sbb
push
mov
and
fild
ins
xchg
add
inc
adc
or
push
fist
pop
jg
push
add
add
adc
sub
rcr
popa
mov
push
lds
out
jmp
imul
lods
or
gs
aas
rol
and
jge
push
add
cmp
xor
xor
and
lahf
inc
dec
push
ret
inc
push
mov
and
xor
xchg
push
pop
sub
inc
add
sbb
cmp
or
add
aam
jg
(bad)
dec
rol
inc
pop
arpl
sar
test
xor
pop
and
ret
dec
xchg
je
xchg
inc
jmp
dec
push
ins
sub
(bad)
xor
jo
cmp
gs
imul
xchg
or
push
add
jne
pop
adc
pop
je
rol
daa
cmp
adc
pop
outs
pop
daa
jo
push
mov
popf
rol
inc
imul
add
add
add
sahf
mov
sub
(bad)
inc
xchg
div
or
inc
mov
rcr
mov
xchg
jle
push
cmp
dec
push
jae
inc
(bad)
mov
(bad)
scas
or
jae
or
add
mov
add
sub
aaa
xor
sub
mov
fistp
and
retf
outs
js
push
mov
sub
xor
sbb
dec
das
jl
aad
jge
adc
mov
add
cwde
sub
or
mov
push
push
inc
or
push
add
dec
adc
aaa
and
inc
inc
mov
loope
xchg
jo
mov
dec
inc
xor
and
loopne
out
push
ins
int3
xchg
aas
das
xor
aas
add
in
pop
lahf
ja
add
ins
gs
add
fiadd
shl
lahf
mov
sbb
jae
aas
js
or
arpl
mov
mov
mov
popa
js
adc
mov
add
(bad)
fadd
aas
lahf
xchg
push
push
xlat
xchg
sahf
jns
mov
outs
cld
pop
and
or
sub
mov
inc
repz
cmps
fldenv
ins
out
add
icebp
pop
mov
test
mov
pop
aas
pop
iret
repz
jno
test
cdq
mov
cmp
repz
aad
jmp
int
bound
adc
and
das
cmp
push
popa
jns
out
imul
xchg
loopne
sahf
out
cmps
mov
lds
popf
daa
(bad)
iret
push
jmp
iret
repz
xor
iret
repz
inc
dec
pop
bound
iret
repz
mov
repz
(bad)
rol
push
inc
push
pop
lahf
and
adc
enter
nop
inc
add
add
xor
inc
or
mov
inc
jae
push
inc
push
rcl
and
pop
push
or
fimul
push
push
cmp
sbb
pop
outs
push
push
aaa
mov
mov
push
mov
inc
dec
or
inc
(bad)
bound
push
movs
sub
outs
inc
push
or
push
adc
or
jnp
push
adc
pop
jp
jg
cdq
and
call
mov
outs
in
daa
nop
sbb
cmp
imul
mov
sbb
add
sti
mov
xor
call
pop
pop
mov
fstp
add
(bad)
jmp
add
xchg
rcr
rcl
lock
ss
sbb
(bad)
(bad)
ficomp
popa
xor
inc
xor
(bad)
and
aam
inc
ror
dec
push
inc
mov
dec
or
(bad)
(bad)
(bad)
cmp
jge
jg
shl
dec
outs
movs
std
pop
std
adc
adc
adc
loope
pushf
inc
nop
(bad)
(bad)
(bad)
call
es
or
sti
ja
add
ja
lock
push
push
in
mov
(bad)
(bad)
jmp
dec
mov
int3
out
loope
popf
(bad)
iret
loopne
jg
sbb
and
dec
xor
inc
mov
jmp
jmp
call
mov
xor
xor
lds
dec
xchg
pop
add
sub
adc
push
xchg
mov
push
aam
push
and
cmc
(bad)
inc
and
test
cmp
bound
mov
daa
scas
(bad)
(bad)
(bad)
out
repnz
js
ror
popa
cmp
dec
mov
lahf
push
or
retf
mov
(bad)
(bad)
(bad)
mov
xchg
push
jb
pop
mov
mov
test
mov
add
(bad)
(bad)
(bad)
push
sahf
int3
ret
or
cmp
shl
jne
push
div
mov
test
pop
in
aaa
retf
mov
stc
pop
inc
(bad)
(bad)
(bad)
push
scas
out
std
lea
loope
xor
jl
push
pop
out
mov
clc
addr16
sti
(bad)
jmp
mov
std
(bad)
(bad)
xchg
idiv
cmps
clc
mov
test
fldenv
inc
(bad)
(bad)
(bad)
(bad)
stc
adc
jmp
das
cmp
imul
dec
sub
push
mov
leave
jb
jmp
push
adc
push
cmps
(bad)
adc
mov
cdq
push
jp
adc
pusha
adc
mov
cmps
mov
(bad)
(bad)
(bad)
(bad)
std
shl
lahf
sar
out
pushf
ficomp
jle
dec
das
test
push
popf
scas
xchg
cli
call
jge
arpl
jmp
(bad)
fidivr
enter
out
test
or
retf
cld
inc
ss
inc
cmp
push
mov
cmc
sbb
dec
shr
jmp
(bad)
(bad)
(bad)
dec
adc
retf
sar
add
sub
scas
add
lods
inc
cli
ins
jg
add
(bad)
(bad)
(bad)
jmp
inc
int
into
and
js
cmps
mov
out
(bad)
call
hlt
(bad)
jmp
aad
mov
lods
pop
stos
rcr
xchg
dec
(bad)
(bad)
call
jg
stc
sub
repnz
fidiv
out
dec
lods
call
(bad)
(bad)
(bad)
jmp
ror
mov
mov
and
pop
rcr
out
pop
call
fwait
sbb
sar
(bad)
jmp
rcr
popa
fist
xchg
fidivr
xchg
xchg
xchg
jae
adc
aad
bound
(bad)
(bad)
(bad)
call
cmp
ds
fmulp
repz
scas
mov
or
rcl
rcl
(bad)
(bad)
cli
mov
mov
sub
aad
jns
mov
inc
(bad)
cmp
mov
lahf
stc
inc
test
xchg
(bad)
(bad)
(bad)
jmp
out
scas
jle
es
and
mov
inc
cmp
xchg
stos
mov
call
jecxz
dec
movs
hlt
das
mov
cli
stos
mov
cwde
inc
idiv
(bad)
(bad)
jmp
inc
jmp
das
or
jecxz
xchg
aas
cli
sub
xor
cwde
ins
aam
add
jae
mov
das
cli
push
mov
shr
mov
idiv
sub
(bad)
(bad)
push
retf
pop
pop
inc
sbb
jno
int3
(bad)
mov
cwde
test
mov
xchg
dec
pop
xchg
push
pxor
loopne
(bad)
fcomi
sub
out
popa
adc
add
scas
test
arpl
loope
sbb
es
movs
xchg
(bad)
(bad)
mov
call
dec
leave
or
stc
les
(bad)
mov
push
bswap
push
push
test
xor
or
jg
mov
push
(bad)
(bad)
(bad)
call
xor
hlt
dec
xchg
or
mov
inc
jmp
mov
(bad)
dec
add
cmps
cs
aam
aam
(bad)
inc
rcl
jbe
ret
mov
xor
mov
cli
or
test
cld
xchg
jb
hlt
call
(bad)
(bad)
dec
sub
sub
dec
lods
mov
outs
dec
mov
jp
hlt
ja
mov
(bad)
(bad)
jg
or
inc
dec
scas
xor
cwde
fiadd
push
lods
sbb
lods
adc
ja
(bad)
fsub
jbe
frstor
les
xchg
cmp
(bad)
lock
push
cdq
pop
aam
popf
or
(bad)
dec
xor
add
or
(bad)
cmp
aad
(bad)
(bad)
(bad)
(bad)
out
push
inc
push
mov
mov
xchg
std
(bad)
pop
stos
das
xor
sti
loopne
inc
std
(bad)
(bad)
(bad)
jmp
pmullw
leave
mov
push
jns
adc
popa
xchg
adc
loope
int3
inc
daa
fadd
add
call
int3
adc
cli
jmp
cmps
mov
add
shl
sub
cmps
xchg
inc
xor
sbb
stc
(bad)
(bad)
(bad)
call
jae
or
xchg
xor
imul
mov
movs
daa
call
ds
ror
(bad)
(bad)
jmp
test
stc
jge
fs
pop
mov
adc
adc
jmp
dec
cld
(bad)
(bad)
(bad)
fild
fiadd
lock
dec
push
jmp
leave
push
mov
bound
pop
jno
call
xchg
xchg
cmp
int
fwait
fwait
or
aas
iret
(bad)
xor
(bad)
(bad)
mov
fmul
jne
mov
sti
mov
sbb
inc
outs
ja
add
add
(bad)
fcomip
cmc
icebp
cmp
(bad)
push
mov
mov
push
(bad)
out
ret
(bad)
jmp
ret
xor
pop
add
leave
jns
push
dec
inc
lahf
in
ds
adc
add
jp
call
mov
push
inc
fisttp
ss
ret
sbb
jno
sub
rol
(bad)
(bad)
mov
es
mov
mov
or
sbb
inc
or
jmp
push
(bad)
(bad)
(bad)
push
jmp
int3
call
dec
imul
call
dec
jno
and
sub
(bad)
(bad)
(bad)
out
push
jns
leave
push
inc
mov
mov
jns
je
cmp
fisttp
fcmovnb
pop
push
jge
adc
(bad)
jmp
pop
iret
aad
add
mov
xchg
jbe
(bad)
call
lahf
pop
dec
js
or
fwait
jns
leave
adc
jo
push
(bad)
(bad)
inc
pop
loopne
dec
add
pop
addr16
push
sbb
cmp
sub
fs
(bad)
(bad)
(bad)
(bad)
aas
stos
xchg
pop
dec
arpl
mov
jmp
aaa
or
xlat
mov
mov
js
mov
aaa
add
inc
call
cs
std
int
pop
imul
sahf
sahf
jmp
es
(bad)
(bad)
(bad)
jp
adc
addr16
mov
cli
push
cmp
mov
sub
sub
or
(bad)
(bad)
(bad)
jmp
adc
sbb
mov
and
cli
add
cdq
jp
and
sbb
bound
mov
(bad)
inc
movs
stos
and
(bad)
std
aas
fcmovu
out
mov
adc
ss
je
mov
imul
(bad)
(bad)
(bad)
call
ret
stc
mov
jae
sbb
sbb
arpl
mov
leave
outs
xchg
cmp
(bad)
(bad)
(bad)
dec
or
(bad)
adc
jmp
sahf
pop
xor
fwait
push
stos
fwait
ret
aas
mov
(bad)
(bad)
(bad)
(bad)
mov
and
or
lahf
add
fs
adc
stos
push
mov
cmps
call
inc
sbb
adc
ins
adc
lods
ret
ret
or
(bad)
(bad)
call
in
pop
and
add
ins
cmp
lahf
push
fs
inc
rcl
lea
adc
xchg
cmp
mov
popa
test
jo
jmp
add
push
pop
clc
cli
mov
lock
mov
xchg
sub
dec
repz
in
(bad)
(bad)
call
lods
push
movs
cvtps2pi
ins
in
sbb
xchg
popa
sbb
(bad)
push
stos
lods
(bad)
dec
or
ficom
pop
cdq
and
lods
sbb
adc
call
daa
(bad)
(bad)
jb
imul
dec
push
push
aas
inc
inc
cmp
inc
(bad)
(bad)
inc
test
ror
mov
sub
ss
arpl
(bad)
(bad)
jg
(bad)
mov
(bad)
or
hlt
inc
adc
retf
jmp
adc
jmp
mov
xchg
cwde
xor
(bad)
(bad)
(bad)
jg
lea
pop
mov
cmps
inc
mov
inc
xchg
sahf
popa
push
popa
xlat
adc
out
in
leave
cdq
(bad)
(bad)
(bad)
inc
push
(bad)
fs
fisttp
push
xor
push
xor
mov
jl
(bad)
(bad)
call
adc
xchg
(bad)
xor
and
and
mov
xlat
dec
xor
sub
(bad)
(bad)
jmp
(bad)
mov
jl
jb
adc
xchg
cmp
cli
inc
mov
repnz
mov
pushf
sbb
(bad)
(bad)
inc
xor
rol
std
push
push
sbb
repnz
sbb
or
imul
mov
movs
retf
push
inc
adc
pop
push
aaa
ins
cdq
mov
mov
lods
loope
jl
(bad)
(bad)
push
rol
xor
and
sbb
rcl
clc
loopne
loope
(bad)
(bad)
(bad)
mov
test
push
ret
push
pop
pusha
pop
or
add
lea
mov
(bad)
(bad)
(bad)
push
sub
cmps
xchg
cwde
cmp
repz
lds
(bad)
leave
out
aaa
mov
fisubr
add
(bad)
call
dec
or
mov
pop
popa
pop
(bad)
(bad)
(bad)
cmp
xor
(bad)
and
xor
xor
inc
pop
aam
(bad)
(bad)
(bad)
dec
pop
add
adc
je
popa
into
push
jne
sbb
mov
pop
mov
sbb
inc
aam
outs
clc
(bad)
dec
add
sub
xor
retf
jnp
cli
pop
inc
jl
(bad)
(bad)
dec
ret
into
daa
pop
and
mov
or
mov
loope
neg
jecxz
cld
jmp
cmp
jo
out
push
push
add
mov
mov
mov
cmps
js
shl
lahf
dec
xor
pushf
jae
pop
adc
xor
add
out
outs
inc
inc
test
jbe
and
lds
push
jmp
lock
(bad)
dec
fstp
inc
and
add
(bad)
js
push
sub
ss
(bad)
dec
push
push
jl
popa
add
pop
std
aam
fild
push
push
mov
rcr
(bad)
(bad)
(bad)
dec
movs
std
mov
inc
pushf
sbb
pushf
adc
pop
pop
fadd
int3
ret
inc
(bad)
inc
cld
gs
clc
adc
daa
mov
call
ins
adc
(bad)
(bad)
(bad)
call
sti
(bad)
cmp
mov
test
sbb
pop
mov
daa
cs
mov
push
(bad)
(bad)
call
cmp
mov
or
mov
mov
cmp
xchg
pop
mov
push
cld
(bad)
clc
and
dec
(bad)
(bad)
(bad)
call
pop
sbb
retf
xchg
add
jno
stc
clc
aas
xor
out
ret
aad
outs
add
dec
nop
xchg
test
repz
xor
lea
(bad)
nop
adc
(bad)
call
stos
mov
mov
dec
rcr
xchg
add
fwait
push
lods
inc
(bad)
fcomip
(bad)
mov
fdivr
mov
in
popf
xchg
lahf
retf
shl
push
iret
out
(bad)
(bad)
(bad)
fsubp
test
jae
lods
test
fist
add
aad
(bad)
(bad)
mov
lods
push
sub
repnz
and
in
sbb
(bad)
(bad)
(bad)
fbstp
repz
sub
sbb
dec
add
jecxz
mov
push
fcmovb
sbb
jae
jl
jns
cwde
and
hlt
sbb
cwde
inc
pushf
pop
repz
(bad)
(bad)
(bad)
out
in
cmps
mov
pop
inc
jo
gs
sbb
inc
cmp
push
mov
fist
jl
dec
push
pop
mov
push
scas
test
add
adc
loop
repnz
or
fs
addr16
mov
sbb
cmc
mov
push
inc
scas
add
stos
data16
ret
xchg
xor
add
cmps
cmp
leave
sub
mov
and
cmp
lds
sahf
cmps
xor
enter
mov
xor
pop
clc
adc
push
rol
das
cs
sbb
and
(bad)
jmp
push
test
out
shl
push
fmul
ret
(bad)
(bad)
adc
lods
add
daa
movs
(bad)
(bad)
fcomip
mov
neg
mov
xchg
xor
and
mov
xchg
sbb
ja
(bad)
push
adc
outs
inc
pop
into
(bad)
jnp
shl
scas
out
out
ud0
push
loopne
scas
mov
or
jnp
xor
(bad)
loop
in
(bad)
(bad)
dec
cmps
mov
shl
adc
pusha
xlat
pop
inc
or
adc
popf
call
push
frstor
xchg
loope
add
dec
lds
test
daa
adc
scas
mov
out
cli
jmp
movs
sbb
or
not
sub
pop
pop
dec
lods
and
(bad)
(bad)
dec
jno
dec
cmp
inc
xchg
shr
push
lds
cmps
push
das
and
add
div
or
in
adc
pop
dec
test
dec
sahf
ss
dec
fwait
cli
pop
loop
dec
push
jge
(bad)
(bad)
call
xlat
aas
cmp
xchg
xor
pop
rcr
cwde
aam
mov
out
pop
lock
ror
aam
(bad)
add
jo
push
out
ins
push
xor
cmp
(bad)
(bad)
push
pop
push
ins
xchg
add
push
(bad)
repz
mov
jg
scas
leave
popf
pop
(bad)
ficomp
add
stc
and
(bad)
inc
adc
mov
push
dec
jmp
bound
out
mov
(bad)
(bad)
(bad)
(bad)
cld
pop
xchg
xchg
jmp
clc
test
neg
push
sub
dec
or
(bad)
(bad)
call
fwait
add
sub
sbb
(bad)
outs
push
mov
outs
push
add
fucom
(bad)
jbe
(bad)
(bad)
jmp
imul
loop
nop
jecxz
mov
rcl
retf
hlt
push
xor
(bad)
(bad)
jg
call
jno
mov
add
mov
push
mov
sub
fs
(bad)
fidiv
adc
push
ds
push
push
sub
(bad)
(bad)
sbb
dec
sub
jmp
or
dec
adc
ds
jmp
(bad)
(bad)
mov
push
pop
or
adc
addr16
(bad)
(bad)
(bad)
fisub
mov
push
mov
mov
mov
jo
fdivr
fcom
or
add
add
xor
xchg
(bad)
(bad)
(bad)
dec
clc
arpl
out
out
jecxz
fimul
cmps
add
push
repnz
in
out
sahf
adc
dec
push
jne
gs
xchg
xchg
popf
push
cdq
adc
mov
and
and
(bad)
dec
and
arpl
and
inc
xchg
sub
(bad)
and
push
xlat
(bad)
(bad)
(bad)
push
push
outs
add
out
mov
add
sbb
push
dec
das
cld
jbe
mov
sar
stos
(bad)
(bad)
(bad)
call
loop
sbb
push
inc
popa
push
add
aam
and
retf
pop
stc
xchg
push
std
(bad)
(bad)
jmp
popa
loopne
fadd
jne
jle
jle
push
jno
mov
add
inc
mov
(bad)
push
push
add
jmp
jl
sub
cs
(bad)
(bad)
(bad)
(bad)
call
pop
cmp
mov
pop
shl
pop
xor
cdq
sub
push
(bad)
(bad)
(bad)
jmp
repnz
add
scas
sub
sbb
(bad)
ins
cld
sbb
pushf
jp
and
jmp
(bad)
jmp
sahf
out
dec
leave
pop
sbb
cld
adc
cmp
scas
jo
lods
sub
popa
mov
mov
(bad)
(bad)
(bad)
jmp
test
cmp
inc
in
icebp
mov
push
mov
ret
push
or
lea
add
(bad)
call
xor
rcl
repz
pop
outs
fld
(bad)
(bad)
push
mov
push
sbb
fmul
dec
test
mov
cmp
cmp
xchg
xchg
or
inc
clc
jmp
push
test
stos
mov
mul
pusha
mov
call
ds
imul
(bad)
stos
cmp
mov
xchg
scas
loope
pop
cmc
push
cld
sbb
stos
cmp
js
lock
adc
call
enter
xchg
sub
dec
jge
stos
xor
into
dec
scas
not
into
(bad)
(bad)
(bad)
dec
adc
cmps
dec
inc
ror
adc
or
mov
xor
mov
rcl
(bad)
(bad)
(bad)
dec
shl
gs
iret
mov
add
retf
mov
jp
push
mov
ins
(bad)
(bad)
(bad)
push
rcr
les
xor
mov
(bad)
adc
push
xor
jne
sbb
popa
sbb
jg
std
dec
or
pusha
ret
and
xchg
xchg
cmp
pop
cli
mov
mov
push
clc
push
js
fisub
cmps
cmp
scas
lock
mov
pop
dec
fwait
jmp
daa
jl
add
leave
jmp
or
fild
xchg
add
fwait
add
push
pop
lock
mov
mov
ins
cld
ret
xor
ss
popf
call
sar
(bad)
jmp
ret
inc
mov
dec
xor
pop
sub
in
lock
jp
call
das
cmp
pop
pop
(bad)
xchg
and
icebp
call
fld
adc
add
(bad)
jg
or
push
mov
iret
jg
sub
sub
lds
popa
imul
xchg
jbe
add
sbb
and
iret
xchg
adc
aad
addr16
add
adc
push
jmp
fsubr
jp
mov
mov
popf
stos
adc
sbb
(bad)
jmp
mov
jge
jmp
in
(bad)
in
jb
push
mov
adc
adc
jg
(bad)
(bad)
(bad)
in
adc
and
push
(bad)
(bad)
repz
ds
stos
into
xchg
inc
xchg
call
mov
add
call
call
int
les
stc
(bad)
aaa
inc
mov
(bad)
ret
inc
je
dec
mov
(bad)
(bad)
call
xor
pop
iret
sbb
sbb
jbe
jle
aam
adc
xlat
sbb
cmps
(bad)
(bad)
(bad)
push
lods
adc
pop
sbb
inc
and
sub
add
test
arpl
adc
(bad)
jmp
add
div
or
pushf
push
xchg
xchg
enter
push
ja
or
jg
std
(bad)
(bad)
call
jmp
arpl
mov
add
mov
dec
add
cmp
jecxz
inc
cmp
fsub
int
(bad)
(bad)
(bad)
dec
push
(bad)
and
int
adc
xor
rcl
jg
push
jmp
int3
cmp
(bad)
(bad)
call
rcl
pop
retf
adc
sbb
push
cs
adc
dec
fcmovu
mov
inc
rcr
and
xlat
xor
jl
std
jo
cmp
push
les
gs
sub
add
pop
add
mov
(bad)
sbb
out
lods
cmp
or
pop
jo
cmp
(bad)
(bad)
(bad)
cmp
loop
jmp
repz
mov
gs
adc
dec
mov
(bad)
(bad)
(bad)
call
jmp
sbb
cmp
mov
loope
cs
test
out
stos
(bad)
call
je
popa
mov
cli
cs
scas
sub
ins
in
cwde
inc
test
cmps
cmp
jne
pushf
pop
sar
sub
jo
cmp
mov
mov
repnz
xchg
adc
cli
ins
(bad)
(bad)
jmp
xchg
enter
sub
pop
dec
jg
xor
or
and
add
retf
(bad)
ins
or
and
cmps
push
cmps
push
jge
push
jmp
shl
mov
cmc
lahf
pop
scas
ror
mov
(bad)
(bad)
call
retf
inc
sub
or
call
loope
and
movs
scas
inc
mov
mov
mov
dec
sbb
inc
cmp
jnp
add
dec
bound
movs
ds
adc
mov
inc
jle
repz
add
nop
test
pop
xor
mov
retf
add
jae
(bad)
js
(bad)
(bad)
(bad)
mov
int3
loop
fldcw
pusha
std
inc
shl
mov
dec
(bad)
(bad)
(bad)
jmp
sar
dec
pop
adc
shl
es
push
xor
push
dec
(bad)
(bad)
(bad)
dec
mov
xchg
sub
push
sbb
dec
xor
fwait
mov
fs
(bad)
(bad)
(bad)
call
scas
mov
add
cmp
test
dec
and
sub
(bad)
(bad)
(bad)
jmp
lods
test
mov
and
xchg
sub
int
(bad)
scas
mov
inc
lods
jb
mov
arpl
sbb
ins
test
pop
in
jg
fisttp
rcl
(bad)
(bad)
jmp
in
push
mov
sbb
je
mov
adc
dec
ror
cli
aad
jbe
loopne
sar
pop
cld
jmp
imul
shl
rcl
out
inc
push
xor
or
call
fisttp
push
sti
sub
ficom
mov
cli
sbb
sbb
mov
mov
sbb
adc
call
cmp
cmp
or
adc
or
movs
adc
cmp
aas
adc
(bad)
(bad)
(bad)
cld
out
(bad)
xchg
sti
mov
and
sub
in
dec
mov
adc
mov
mov
and
(bad)
call
pop
xchg
dec
pushf
jmp
adc
add
push
mov
xchg
xor
inc
cmp
and
push
push
aaa
out
inc
xor
dec
sub
sar
(bad)
(bad)
(bad)
out
rcl
xchg
sbb
shl
or
(bad)
out
and
mov
and
inc
es
ds
add
iret
mov
ins
sbb
dec
dec
and
and
pop
bound
mov
inc
fmul
mov
int
dec
mov
(bad)
(bad)
(bad)
(bad)
jl
push
out
cmp
dec
add
adc
cmp
ret
les
mov
out
stos
addr16
and
mov
arpl
sub
push
jp
fcom
mov
jnp
fist
out
cli
mov
jmp
cmp
scas
hlt
arpl
in
xor
sbb
mov
jmp
xchg
loop
lods
cmp
shr
fsub
push
xor
in
jecxz
in
shl
(bad)
jecxz
push
cmp
mov
sti
call
mov
sbb
sbb
repnz
cs
(bad)
(bad)
call
into
push
jnp
leave
lds
cmc
push
and
add
out
jg
adc
jg
inc
push
inc
or
(bad)
shl
mov
and
bnd
lahf
adc
sub
dec
mov
jb
mov
imul
in
out
xlat
lods
and
call
adc
jns
or
ds
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
xchg
dec
cwde
pusha
and
fimul
in
xor
mov
sbb
add
jle
test
add
jge
sbb
mov
xchg
xchg
scas
jg
jg
repnz
arpl
das
retf
xchg
pop
jmp
in
mov
arpl
outs
mov
jmp
js
sub
mov
mov
pop
add
out
add
mov
xor
pop
shl
(bad)
(bad)
push
add
push
dec
sub
mov
mov
jns
je
xchg
loopne
xchg
mov
(bad)
call
and
push
push
arpl
push
pop
mov
rcl
mov
repz
dec
loope
mov
jg
call
adc
imul
mov
mov
dec
ret
bnd
push
(bad)
call
jle
out
cmps
xchg
push
xchg
call
or
idiv
push
fdivr
xchg
lea
xlat
(bad)
(bad)
(bad)
(bad)
jl
cld
loopne
loopne
out
out
pop
inc
or
cwde
push
inc
sar
xchg
fdivr
dec
push
cmp
and
and
ins
out
and
push
lahf
mov
push
(bad)
(bad)
(bad)
push
inc
mov
cmc
add
ins
mov
aam
add
mov
xlat
xchg
dec
(bad)
(bad)
(bad)
jmp
lods
add
mov
cwde
and
scas
add
scas
fnstcw
add
xchg
mov
(bad)
(bad)
(bad)
jmp
loope
fcompp
lods
mov
loope
data16
or
xchg
mov
outs
mov
leave
or
mov
jl
(bad)
mov
outs
pop
dec
jle
imul
cmp
in
push
and
push
or
push
sbb
js
adc
pushf
cmc
mov
jmp
jmp
xor
out
dec
dec
loopne
pop
jmp
mov
out
repnz
(bad)
(bad)
(bad)
jmp
mov
jb
sub
loop
outs
xchg
or
mov
cmp
addr16
addr16
stos
(bad)
(bad)
push
adc
cmps
les
int
push
xchg
into
add
(bad)
(bad)
call
mov
cwde
dec
icebp
js
mov
jmp
fstp
popa
jae
enter
pop
sub
(bad)
dec
pop
mov
adc
and
pop
sti
test
and
sbb
dec
test
add
(bad)
(bad)
out
scas
jg
aam
jle
out
sbb
nop
neg
and
lea
shl
sahf
jae
xchg
call
dec
rol
cmp
addr16
outs
cli
dec
ret
(bad)
jmp
mov
in
cmp
jno
jnp
jae
popa
adc
mov
push
(bad)
fistp
push
std
(bad)
in
xchg
js
int
jnp
outs
jnp
mov
inc
repnz
repz
jg
add
xchg
or
xchg
clc
cs
nop
inc
xor
sub
add
cmp
or
or
(bad)
mov
test
push
xchg
push
sbb
mov
ret
ror
rol
lds
inc
shr
fldcw
add
or
fisub
cld
(bad)
jg
and
lods
inc
jns
int
pusha
hlt
dec
imul
loope
into
sub
or
enter
xor
repnz
or
fsubr
adc
in
fidiv
push
movs
daa
fsub
daa
adc
jmp
sar
jge
jmp
das
pop
pop
pusha
movs
adc
xor
movs
ret
(bad)
(bad)
(bad)
push
or
inc
test
push
mov
inc
loop
sub
sub
outs
movs
(bad)
adc
(bad)
(bad)
dec
cmp
add
push
dec
xor
ja
pop
add
arpl
das
cli
(bad)
dec
pop
dec
ins
dec
or
rol
push
adc
and
addr16
(bad)
(bad)
call
leave
out
lock
xchg
call
xor
test
icebp
cld
out
cli
add
adc
jmp
outs
and
sub
sub
lods
sbb
(bad)
mov
mov
pop
cmp
or
aad
push
js
(bad)
dec
scas
aaa
cld
cmp
add
adc
add
jge
cld
cmp
(bad)
(bad)
(bad)
push
cmps
xchg
dec
loop
dec
ins
dec
inc
push
jb
rcl
or
sahf
sbb
push
jecxz
(bad)
(bad)
(bad)
push
sbb
add
inc
pop
mov
pop
pushf
mov
and
xchg
nop
(bad)
ds
pushf
jmp
jmp
xlat
retf
dec
jbe
aad
inc
shr
and
xchg
xchg
je
mov
data16
(bad)
(bad)
mov
inc
xor
pop
xchg
test
inc
aad
mov
mov
(bad)
(bad)
push
push
jns
repnz
inc
stos
out
jmp
mov
xor
lea
out
mov
xchg
sub
lea
jnp
(bad)
(bad)
(bad)
dec
sbb
test
call
sbb
and
push
and
jle
inc
ins
mov
xchg
push
add
push
fist
jb
or
into
push
xchg
cmps
jo
cmp
sub
(bad)
jmp
out
adc
jmp
push
je
dec
cmps
test
mov
sub
rol
call
dec
adc
adc
mov
jmp
ss
cmps
dec
sbb
mov
mov
ret
mov
push
cwde
popa
mov
push
hlt
jg
xlat
add
dec
scas
(bad)
(bad)
(bad)
jmp
sub
aaa
cli
pusha
ret
int3
pop
jae
and
sbb
jle
in
cmp
or
push
adc
mov
pop
adc
sbb
cmp
(bad)
out
(bad)
(bad)
(bad)
jmp
(bad)
mov
ret
dec
xchg
rcr
inc
retf
sahf
dec
jmp
(bad)
stos
push
daa
es
(bad)
fnsave
(bad)
(bad)
dec
fisttp
shr
repnz
daa
nop
or
and
jmp
mov
arpl
mov
es
popa
sahf
fs
mov
inc
jecxz
push
(bad)
fucomip
inc
loop
(bad)
pop
pop
lds
add
ret
stc
test
and
(bad)
(bad)
(bad)
inc
or
or
out
push
jbe
mov
and
test
fsubr
bound
(bad)
(bad)
out
clc
movs
sbb
shl
push
jae
lods
add
and
fadd
pop
es
(bad)
(bad)
call
and
mov
inc
pusha
xor
mov
add
daa
or
and
loop
out
ficom
dec
sbb
das
scas
and
cmp
mov
inc
add
jge
stos
cdq
daa
sub
push
les
adc
icebp
(bad)
dec
stc
popf
cmps
lea
sbb
dec
sub
es
(bad)
(bad)
dec
mov
xchg
sbb
pop
aaa
hlt
push
pop
sub
in
pop
adc
movs
jl
les
clc
(bad)
(bad)
inc
sub
sbb
xchg
cwde
pop
repnz
mov
mov
(bad)
inc
(bad)
mov
in
jl
sbb
add
loop
jmp
jge
pop
rcr
mov
in
jbe
sub
or
mov
xchg
loope
xchg
(bad)
(bad)
(bad)
jmp
imul
cs
xor
mov
dec
adc
mov
(bad)
(bad)
push
mov
(bad)
and
add
xchg
xchg
cld
pushf
data16
mov
sti
jl
cdq
xor
dec
scas
cwde
and
xor
xchg
(bad)
movs
ja
push
mov
adc
mov
or
(bad)
xor
jmp
jg
loopne
iret
fstp
push
imul
hlt
pop
hlt
(bad)
data16
mov
cmps
sub
movs
std
js
ds
push
push
(bad)
loope
in
fdivr
rol
pushf
cmp
stos
pop
adc
test
xchg
loop
adc
mov
fs
jle
add
xchg
inc
jmp
dec
or
loopne
add
push
fisub
in
lea
jmp
lock
dec
(bad)
(bad)
(bad)
dec
sbb
sub
cmps
adc
mov
aam
add
stos
xor
mov
push
retf
pop
mov
sbb
xchg
push
add
(bad)
aas
hlt
pushf
cmc
pop
ins
jno
or
fidiv
cs
(bad)
(bad)
(bad)
jmp
into
pop
dec
hlt
push
repnz
mov
scas
xlat
ret
ds
mov
mov
arpl
add
(bad)
sahf
jecxz
push
sub
mov
sbb
adc
push
ds
cmp
pusha
or
fs
ins
mov
add
xor
in
sahf
mov
sbb
or
(bad)
(bad)
(bad)
push
sub
push
xor
iret
dec
scas
mov
dec
sti
fmul
xor
fcomip
jg
jne
xor
xor
inc
sub
into
ss
(bad)
(bad)
(bad)
cmp
xor
nop
adc
mov
not
mov
mov
in
sahf
leave
movs
movs
push
add
(bad)
jmp
shl
cmps
test
xor
dec
(bad)
data16
or
(bad)
(bad)
(bad)
fdivrp
movs
stos
add
pop
mov
jmp
push
rep
fmul
cmp
loope
sub
dec
cli
popa
ss
and
cld
push
test
(bad)
(bad)
mov
sbb
mov
jge
out
ja
in
sbb
cli
ud1
push
or
jns
sub
ret
mov
aam
outs
aas
mov
sub
mov
push
dec
jns
add
xchg
or
xchg
jae
imul
add
loope
dec
lea
(bad)
outs
cmps
fimul
in
pop
mov
adc
mov
call
sub
mov
xchg
sbb
inc
add
and
xlat
or
pushf
inc
cwde
mov
dec
cdq
pusha
inc
xlat
dec
(bad)
fistp
inc
sti
stos
fidiv
adc
lods
sub
(bad)
jg
jmp
push
das
xchg
cmp
cmp
hlt
js
(bad)
(bad)
(bad)
call
push
gs
xchg
dec
test
mov
jae
mov
cmp
addr16
add
ror
pop
(bad)
(bad)
call
pop
shl
jo
fucomip
sub
push
sar
(bad)
call
sbb
fwait
add
and
mov
inc
aas
push
popf
mov
dec
mov
(bad)
push
movs
jg
out
mov
in
pop
mov
jne
mov
lods
loopne
js
adc
(bad)
(bad)
push
pushf
aad
in
or
cld
pop
(bad)
clc
or
ja
js
out
call
(bad)
(bad)
(bad)
mov
jecxz
pop
cld
inc
int3
sbb
or
mov
shl
ins
sti
jo
mov
(bad)
(bad)
(bad)
cmp
and
pop
in
jns
js
cld
ds
or
push
adc
jecxz
div
push
(bad)
(bad)
(bad)
(bad)
imul
mov
inc
daa
jle
mov
stos
sbb
mov
(bad)
mov
inc
(bad)
(bad)
mov
inc
movs
mov
stos
cmp
fidivr
cmp
sub
sbb
(bad)
(bad)
inc
loop
or
addr16
mov
out
pop
lds
xchg
out
pop
sub
push
(bad)
call
sub
in
bound
push
pop
loope
lahf
cmp
scas
xchg
and
push
nop
(bad)
(bad)
(bad)
jmp
add
lock
scas
jo
lahf
cwde
fnstenv
stos
or
add
ds
xor
lods
mov
(bad)
(bad)
(bad)
dec
sub
call
push
repz
out
pop
pusha
mov
or
es
(bad)
(bad)
dec
add
push
adc
pop
ret
lds
rol
sub
adc
jb
mov
call
in
retf
xchg
stc
mov
adc
and
out
call
mov
sub
push
pop
sbb
mov
xlat
aas
pop
daa
fwait
mov
add
pop
inc
or
sub
jo
fisub
call
call
mov
mov
jnp
or
cmps
(bad)
push
jge
stc
mov
(bad)
cli
jae
loopne
aaa
aas
sbb
sbb
push
lock
sbb
inc
jns
xor
mov
and
dec
aad
ja
cmp
xchg
outs
stos
retf
or
sahf
stos
sbb
scas
or
xchg
mov
adc
dec
push
aam
dec
test
ret
or
loope
cs
aaa
arpl
shl
push
dec
jp
test
jmp
(bad)
jo
xchg
pusha
sub
mov
ins
dec
hlt
xor
in
(bad)
(bad)
(bad)
(bad)
out
xchg
aam
inc
daa
inc
xor
fsubrp
(bad)
fimul
lods
shl
sbb
sub
(bad)
inc
dec
adc
or
dec
dec
mov
stos
fadd
outs
add
(bad)
(bad)
fcomip
mov
imul
hlt
jbe
dec
or
cmp
(bad)
(bad)
jmp
enter
outs
(bad)
int3
xchg
add
out
movs
lea
call
and
xor
jnp
add
dec
into
mov
adc
dec
sub
call
and
in
mov
add
jnp
aam
loopne
aas
mov
(bad)
(bad)
jmp
nop
sbb
dec
jg
xor
in
hlt
pop
rcl
call
push
mov
(bad)
(bad)
jmp
push
mov
inc
xchg
mov
jnp
cli
jl
push
fcomip
mov
ins
add
mov
cmp
push
dec
test
and
push
fdivr
(bad)
(bad)
(bad)
inc
repnz
pusha
jno
or
cdq
adc
dec
mov
cmp
sbb
xor
mov
(bad)
(bad)
call
pop
dec
aaa
sahf
sbb
xor
mov
inc
dec
push
jb
fnclex
push
and
or
mov
and
jl
pop
mov
dec
(bad)
inc
mov
xchg
int3
je
ror
arpl
(bad)
fcmovbe
xchg
sar
xrelease
loopne
mov
push
(bad)
(bad)
(bad)
call
xor
xchg
xchg
(bad)
mov
(bad)
es
ins
mov
call
jno
retf
jg
(bad)
inc
push
mov
or
adc
add
sub
push
adc
fwait
(bad)
(bad)
(bad)
mov
test
mov
dec
call
mov
push
add
(bad)
(bad)
(bad)
inc
cmp
add
test
fwait
(bad)
cmp
pop
mov
lods
lods
mov
(bad)
(bad)
call
add
clc
xor
or
pop
call
pushf
adc
sar
(bad)
jg
lods
imul
stc
lahf
pop
movs
nop
cli
mov
xor
clc
pushf
jecxz
push
mov
(bad)
dec
mov
(bad)
sar
test
jnp
inc
adc
inc
adc
ins
jno
inc
(bad)
cmp
jmp
cmps
scas
mov
ins
ret
inc
sbb
xchg
and
(bad)
lock
lock
pop
gs
shr
into
(bad)
enter
sbb
xor
call
sbb
stc
mov
add
push
cmp
jbe
sbb
(bad)
(bad)
(bad)
push
pop
xor
push
pop
dec
push
fimul
and
cmovs
call
(bad)
jmp
(bad)
jl
mov
or
(bad)
jmp
int
and
sbb
(bad)
call
or
out
xlat
pop
cmp
pop
cmp
std
pop
pop
mov
(bad)
jmp
int3
imul
xchg
test
pop
retf
adc
jp
(bad)
(bad)
inc
adc
and
mov
test
mov
icebp
push
das
hlt
in
and
cld
repnz
jmp
and
test
adc
mov
and
aam
push
(bad)
out
push
lods
inc
(bad)
xchg
ret
call
(bad)
xchg
pop
inc
jb
imul
inc
sbb
rcr
mov
mov
cmp
ins
jecxz
(bad)
call
or
mov
xchg
aad
xor
(bad)
in
in
xor
inc
into
inc
(bad)
(bad)
(bad)
(bad)
mov
and
or
inc
inc
mov
bound
hlt
dec
mov
inc
add
out
cli
vpsrad
(bad)
inc
mov
pushf
jno
jmp
retf
(bad)
bswap
call
and
jge
cld
dec
pusha
test
jmp
pusha
sbb
cmp
and
push
jb
stc
inc
call
pop
push
in
or
std
fsub
ficomp
(bad)
call
inc
cmc
mov
scas
pusha
outs
hlt
adc
sti
inc
xchg
fcmovne
outs
int3
sbb
jno
mov
(bad)
(bad)
(bad)
push
call
pop
out
push
push
int3
mov
mov
shl
cmps
cmp
xor
(bad)
jg
mov
nop
ret
outs
ss
and
pcmpeqd
sub
test
les
jg
jmp
outs
(bad)
cmp
mov
adc
data16
in
(bad)
(bad)
(bad)
inc
cmc
or
mov
xor
mov
sbb
mov
(bad)
(bad)
inc
jmp
xor
call
add
add
jge
neg
adc
cli
enter
(bad)
dec
adc
jne
retf
dec
mov
(bad)
mov
cmc
(bad)
das
fdivr
mov
jbe
stos
fcmove
enter
sbb
and
(bad)
(bad)
(bad)
mov
sbb
mov
jle
popa
neg
xchg
aaa
loope
mov
pop
gs
movs
xchg
(bad)
(bad)
mov
xchg
mov
shr
adc
loop
inc
mov
pop
cdq
push
(bad)
mov
or
je
out
dec
mov
loop
movs
enter
icebp
add
(bad)
(bad)
dec
inc
sbb
mov
mov
jge
xchg
mov
mov
fs
(bad)
(bad)
(bad)
inc
adc
nop
scas
cs
stc
lods
push
js
mov
repnz
aas
push
jecxz
int
dec
mov
inc
cld
jmp
retf
xor
ja
fidivr
loope
mov
pusha
in
jne
dec
clc
adc
cmps
daa
cwde
clc
push
cmp
or
sbb
sbb
jnp
cmps
(bad)
(bad)
(bad)
dec
addr16
repnz
cmp
mov
inc
(bad)
fsub
(bad)
(bad)
(bad)
inc
lea
into
(bad)
mov
(bad)
dec
shl
in
mov
lock
jmp
dec
ficom
pop
fisttp
int
(bad)
ror
scas
out
and
(bad)
jmp
std
addr16
dec
jecxz
pop
popf
add
mov
out
fdivp
stos
sub
jmp
ret
adc
es
dec
mov
ins
add
mov
mov
fst
(bad)
jmp
cmp
xchg
xor
mov
mov
shr
or
xchg
mov
test
dec
(bad)
pop
add
sbb
sahf
pop
cli
(bad)
jmp
xor
adc
pop
ret
pop
inc
fmul
mov
pusha
sbb
(bad)
(bad)
(bad)
push
scas
cdq
jb
call
push
out
fmulp
mov
xchg
inc
mov
mov
out
adc
(bad)
(bad)
(bad)
cld
hlt
mov
adc
xchg
shl
movs
xor
dec
(bad)
shr
fcomp
cdq
pop
(bad)
(bad)
(bad)
jmp
add
mov
xchg
inc
fcomip
pop
xchg
push
cmp
sub
enter
sub
(bad)
(bad)
jmp
in
je
pusha
mov
cwde
addr16
in
clc
dec
xor
sbb
lea
popa
and
shr
pop
(bad)
aas
pandn
push
inc
push
cdq
out
hlt
jge
xchg
push
cmp
xor
(bad)
jmp
fwait
mov
daa
push
sub
fisub
and
(bad)
fisttp
in
loope
adc
or
inc
push
call
(bad)
(bad)
(bad)
dec
enter
ss
push
int3
mov
add
inc
lds
ss
jecxz
(bad)
(bad)
(bad)
out
xchg
int
call
mov
dec
or
lahf
shr
retf
cmovbe
adc
(bad)
(bad)
call
ss
cmc
sbb
inc
test
pop
jle
ficomp
dec
adc
hlt
out
adc
(bad)
jmp
scas
adc
pusha
mov
(bad)
movs
adc
scas
mov
jmp
clc
cmp
je
(bad)
(bad)
push
cmp
scas
push
lods
add
or
sub
sbb
(bad)
jmp
add
dec
inc
in
(bad)
(bad)
(bad)
(bad)
daa
dec
pop
dec
and
cmp
retf
and
fwait
mov
dec
in
aam
std
(bad)
call
pop
inc
or
cli
cmps
jb
imul
idiv
sub
dec
pop
pop
(bad)
push
repnz
jmp
sub
dec
cld
and
dec
mov
jle
and
clc
mov
jo
aas
out
mov
sub
aaa
out
mov
std
(bad)
dec
jg
(bad)
(bad)
jmp
mov
(bad)
jle
or
xchg
cmps
test
jmp
fcmovu
mov
clc
jmp
movs
popf
inc
adc
jb
sub
push
jne
adc
adc
dec
cmp
sti
cmps
cli
xor
or
(bad)
adc
mov
and
(bad)
(bad)
jmp
test
jecxz
mov
std
cmp
scas
repnz
inc
mov
(bad)
scas
push
push
call
loopne
inc
mov
(bad)
mov
jmp
or
scas
aaa
adc
(bad)
(bad)
inc
dec
xor
or
and
push
cdq
rcl
leave
fisttp
std
adc
out
(bad)
(bad)
push
fiadd
popa
pop
sub
call
and
or
loope
out
aaa
retf
mov
lods
es
(bad)
(bad)
call
fst
adc
and
aas
mov
add
mov
dec
and
and
cli
jg
xchg
ja
imul
xchg
sti
ins
jo
sbb
icebp
(bad)
dec
mov
ficomp
mov
(bad)
cmp
and
jmp
clc
mov
push
or
xchg
inc
cmp
(bad)
cs
xor
lock
xchg
mov
(bad)
dec
xchg
adc
cld
call
jns
add
jecxz
imul
cld
lahf
(bad)
(bad)
(bad)
call
mov
retf
mov
loopne
leave
nop
mov
jecxz
in
out
imul
cmp
repnz
jno
aam
je
(bad)
(bad)
call
pop
jecxz
lods
leave
sub
jmp
call
pop
and
cmp
jne
and
(bad)
(bad)
jmp
and
mov
call
pop
mov
pop
int3
mov
jnp
stos
add
jmp
xor
inc
aam
inc
sahf
enter
data16
mov
xor
cmp
ja
pop
iret
sub
inc
imul
leave
retf
mov
mov
lods
xor
mov
sub
mov
mov
push
lock
test
mov
adc
jmp
les
jmp
sub
mov
sbb
mov
ja
scas
xlat
mov
xor
(bad)
jmp
push
mov
bound
in
sti
mov
ja
dec
stos
mov
and
stc
movs
lahf
pop
popf
cli
dec
lods
ja
out
or
cmps
out
sbb
and
icebp
outs
repnz
or
pop
les
hlt
in
retf
sub
pop
dec
pop
or
inc
dec
lods
cmovno
xchg
call
unpcklps
pop
scas
mov
(bad)
(bad)
(bad)
push
arpl
xlat
push
add
fbstp
aaa
push
jae
inc
test
in
jno
push
in
cld
scas
cmp
(bad)
(bad)
dec
(bad)
fcom
dec
jbe
or
(bad)
dec
pusha
lods
fmul
xor
cli
scas
clc
in
fwait
mov
inc
dec
ja
fst
mov
mov
aaa
pop
xor
nop
clc
inc
fs
pop
xor
pop
std
(bad)
(bad)
call
js
scas
test
icebp
fidivr
fbstp
aam
ins
xor
dec
mov
push
add
add
(bad)
call
push
repz
push
movs
xlat
shl
xor
mov
sub
(bad)
jg
je
and
fisubr
mov
in
mov
jmp
mov
rcl
sub
adc
pop
(bad)
mov
cli
mov
or
push
dec
iret
sahf
outs
dec
(bad)
std
(bad)
(bad)
dec
fdivrp
pushf
cmp
sbb
mov
push
rcl
ret
fdivr
dec
or
(bad)
push
ficomp
adc
cwde
push
fistp
jno
aaa
out
cld
iret
mov
mov
iret
das
xor
(bad)
dec
test
pop
mov
jns
aad
in
sar
jmp
push
mov
mov
retf
imul
mul
jno
jo
(bad)
(bad)
(bad)
dec
xor
je
xor
in
push
xlat
aad
push
mov
iret
sub
lods
jmp
call
out
sub
push
push
call
(bad)
(bad)
(bad)
mov
ss
and
push
jle
push
cmp
es
inc
repz
fbstp
test
out
clc
(bad)
aas
cmp
std
inc
inc
sub
outs
sub
sahf
dec
hlt
retf
lahf
(bad)
lods
pop
mov
and
cmp
cli
xor
cli
(bad)
(bad)
call
imul
add
jnp
xchg
int3
ret
jbe
(bad)
cmps
xor
out
mov
push
loope
pusha
and
sar
dec
and
inc
jmp
int3
test
test
inc
or
mov
(bad)
(bad)
pusha
test
inc
jp
cmp
sub
in
(bad)
(bad)
push
das
cwde
sub
scas
mov
arpl
xchg
sub
call
scas
mov
inc
xchg
inc
fcom
pop
stos
and
mov
ins
dec
repnz
clc
mov
adc
or
call
cmp
les
cmp
or
ret
(bad)
(bad)
(bad)
call
ret
int3
ja
pop
pop
aas
add
hlt
jb
sbb
pop
aam
dec
push
xor
or
mov
(bad)
(bad)
call
std
and
nop
repz
dec
mov
mov
jg
(bad)
(bad)
(bad)
push
aaa
leave
add
(bad)
(bad)
inc
fdiv
jne
jnp
xor
cwde
rcl
pop
lock
dec
(bad)
(bad)
(bad)
inc
pop
cmp
mov
xor
ins
push
mov
push
(bad)
int
xor
pop
data16
or
push
cld
inc
cmp
sub
jnp
loop
add
xor
rcr
mov
test
mov
jge
repnz
jnp
inc
ja
addr16
xor
xchg
mov
scas
hlt
cmc
loope
add
sbb
mov
test
pushf
cmp
sbb
sub
xchg
imul
movs
ss
push
add
dec
lea
(bad)
(bad)
(bad)
push
fbld
or
ds
mov
xchg
call
hlt
jmp
xchg
sbb
pusha
mov
pop
jp
mov
test
add
out
mov
fadd
ret
das
jne
in
mov
jle
inc
into
add
or
outs
outs
add
in
mov
or
jg
lods
(bad)
in
or
(bad)
(bad)
call
pop
scas
mov
call
fldenv
movs
jle
xor
lea
jb
retf
(bad)
dec
cwde
dec
jg
aaa
and
scas
imul
int3
mov
mov
cld
ret
mov
les
mov
ds
pusha
adc
cdq
aas
pop
add
jmp
(bad)
jne
sbb
push
inc
dec
jmp
push
(bad)
jbe
sbb
out
(bad)
(bad)
(bad)
dec
xor
push
cdq
mov
mov
fadd
in
xor
(bad)
adc
outs
push
test
repnz
fild
ins
in
into
mov
fdiv
(bad)
(bad)
(bad)
push
cmp
imul
movs
clc
sbb
pop
jnp
xor
pop
and
push
xchg
sti
sub
jmp
sbb
sub
in
pop
jp
fst
enter
xchg
das
cli
mov
leave
stc
sub
aas
iret
in
into
sti
jge
ror
mov
cli
cmp
or
dec
fndisi(8087
call
xchg
push
sub
mov
mov
xor
mov
pop
jae
push
fcomp
jo
fs
mov
jmp
push
jecxz
fild
jne
push
scas
mov
fst
icebp
mov
mov
lods
mov
scas
add
pusha
mov
cld
or
inc
fstp
mov
lods
fst
push
popa
jmp
in
sub
lods
call
add
cmp
adc
and
ins
je
and
jmp
(bad)
push
mov
adc
mov
loop
(bad)
jecxz
ins
out
ins
mov
inc
scas
cli
(bad)
jmp
xchg
cmp
retf
scas
loop
mov
out
stc
xor
lock
clc
fidiv
fsub
fs
ret
retf
inc
adc
call
adc
test
std
cmp
ds
fsub
or
inc
hlt
sti
sbb
cmp
add
fcmovnbe
jmp
mov
(bad)
(bad)
(bad)
(bad)
cmp
sbb
arpl
and
or
shl
mov
(bad)
sbb
int
sub
(bad)
(bad)
push
or
push
sub
ret
bswap
(bad)
lds
inc
mov
(bad)
(bad)
(bad)
push
mov
ror
imul
and
xor
jle
test
jmp
outs
xor
dec
test
sbb
ds
jno
int
scas
outs
lea
lea
mov
mov
mov
loopne
nop
rcl
adc
dec
fwait
jnp
or
outs
les
sti
pop
xchg
jb
(bad)
(bad)
jg
int
icebp
pop
das
ficom
adc
test
push
movs
cmp
fcomp
js
in
fdiv
jmp
ret
gs
movs
cmp
add
rol
sub
xor
xor
jns
outs
mov
jno
and
cld
fld
inc
in
xor
lods
retf
mov
pop
mov
add
jge
xchg
and
fistp
cli
aam
call
call
loopne
es
inc
mov
(bad)
jmp
nop
mov
les
jmp
ret
popf
mov
ror
fisubr
add
inc
movs
lock
rcl
jp
call
(bad)
fdivr
ss
std
dec
xchg
movs
push
sbb
aad
call
cld
jmp
add
xor
mov
inc
inc
sti
ror
sbb
cmp
cs
cmp
push
scas
pop
xchg
lea
cmp
bound
mov
push
jle
cmp
(bad)
call
add
inc
xchg
enter
and
shl
pop
loopne
mov
ss
sti
mov
or
out
call
fidivr
push
je
push
xchg
sbb
(bad)
(bad)
dec
retf
add
rcl
fbstp
cmps
lock
sub
adc
xor
add
xchg
stos
mov
(bad)
(bad)
(bad)
push
call
test
dec
sahf
add
out
cmp
dec
push
out
sbb
pop
push
jns
test
xchg
sbb
push
sar
jmp
sti
test
adc
in
inc
push
dec
dec
push
and
push
(bad)
(bad)
(bad)
jg
mov
je
sar
and
mov
jbe
sar
dec
mov
stc
dec
cld
in
(bad)
(bad)
(bad)
inc
xchg
or
jae
ins
add
pop
push
cdq
push
mov
cmp
in
xor
mov
(bad)
jle
ror
mov
outs
pop
sbb
mov
popa
retf
lea
cmps
pop
adc
(bad)
push
pop
jo
aas
mov
cmc
inc
shr
push
jmp
pop
pop
(bad)
mov
(bad)
(bad)
sti
aad
inc
push
or
xchg
cmc
fist
cmp
push
cmps
xor
mov
outs
fistp
fadd
popa
out
lahf
lahf
push
sub
repz
jmp
fstp
nop
loopne
clc
sti
sbb
sub
xchg
xchg
dec
inc
(bad)
(bad)
push
lods
(bad)
je
xchg
push
out
mov
rol
mov
or
xor
in
jmp
pop
or
cmps
jno
push
mov
das
jne
and
cmp
dec
in
push
ss
or
(bad)
(bad)
(bad)
(bad)
aas
sub
into
mul
xor
hlt
pop
lock
lea
sbb
sahf
push
pop
mov
mov
mov
stos
sub
add
sub
sub
ret
mov
mov
imul
stc
mov
lods
pop
hlt
(bad)
(bad)
jge
inc
call
ret
push
(bad)
jnp
out
sub
mov
(bad)
(bad)
(bad)
inc
std
nop
push
adc
mov
cld
mov
test
popa
pop
aad
pop
mov
dec
(bad)
(bad)
(bad)
(bad)
cmp
mov
lods
push
xor
inc
sahf
arpl
mov
je
pusha
or
fisttp
mov
(bad)
(bad)
(bad)
push
retf
xor
mov
and
push
pop
(bad)
into
inc
fild
data16
sbb
in
cmp
daa
lahf
(bad)
(bad)
(bad)
push
xchg
fldcw
fisub
scas
sbb
retf
cmp
enter
mov
jecxz
fst
or
inc
in
inc
sbb
adc
or
mov
adc
mov
imul
xchg
mul
push
xchg
pop
jg
call
inc
cmp
fadd
jne
aad
call
aam
pop
loopne
(bad)
in
dec
mov
cmc
retf
leave
or
es
mov
dec
xlat
jno
(bad)
(bad)
call
sub
shl
movs
imul
and
(bad)
call
out
(bad)
push
xchg
ja
mov
pop
arpl
(bad)
ret
outs
movs
mov
pop
mov
retf
jnp
xchg
mov
movq
sbb
(bad)
adc
ins
dec
push
(bad)
call
adc
xor
inc
lock
clc
retf
mov
stc
adc
sar
(bad)
out
clc
cmps
mov
int3
mov
mov
scas
std
jmp
xor
dec
(bad)
(bad)
(bad)
call
aam
les
loop
push
test
out
enter
lahf
test
push
jmp
test
dec
cmp
fcom
xor
test
mov
call
cld
(bad)
cmp
sbb
clc
jnp
fcom
lods
cmp
cmp
fsub
in
lea
test
(bad)
(bad)
dec
pushf
lds
fimul
xor
jle
dec
xchg
adc
mov
mov
mov
pop
(bad)
mov
or
jmp
push
test
mov
inc
or
inc
js
pushf
cli
xchg
ret
pop
fwait
cli
adc
(bad)
(bad)
(bad)
mov
sti
adc
addr16
mov
xor
sbb
sbb
popf
or
out
(bad)
(bad)
jmp
add
addr16
mov
xor
xor
cmp
(bad)
(bad)
(bad)
push
inc
mov
mov
add
pop
sub
sub
push
popf
retf
rcr
jmp
rol
push
fstp
xchg
jne
and
dec
mov
mov
(bad)
dec
cli
inc
mov
in
mov
mov
dec
(bad)
(bad)
(bad)
mov
push
jbe
enter
pusha
sahf
mov
cmp
and
stos
sbb
jnp
mov
(bad)
(bad)
(bad)
cmp
mov
adc
cli
out
cld
dec
push
ror
iret
jl
pop
jmp
fwait
dec
(bad)
and
clc
jmp
out
gs
jp
sar
fwait
mov
mov
inc
dec
add
js
hlt
dec
cmp
jecxz
(bad)
(bad)
(bad)
(bad)
cli
cmp
dec
dec
lea
les
phsubsw
lock
push
dec
mov
mov
push
pop
jmp
cwde
das
ficom
pop
ret
add
js
lock
sbb
(bad)
(bad)
call
sub
xor
push
(bad)
daa
in
gs
push
mov
mov
push
sbb
xor
popf
(bad)
mov
xor
(bad)
(bad)
call
jecxz
push
fwait
xor
add
mov
xchg
sub
sub
shl
(bad)
(bad)
(bad)
aaa
mov
sbb
frndint
test
sar
(bad)
push
shl
repz
(bad)
pop
repnz
scas
mov
dec
mov
cmc
loopne
addr16
lods
xor
(bad)
(bad)
jmp
pop
inc
mov
mov
dec
mov
mov
daa
sbb
mov
jg
pop
int
out
(bad)
(bad)
(bad)
inc
int
jmp
in
jecxz
mov
push
ret
sub
js
add
mov
xor
dec
(bad)
lahf
int
or
fidivr
push
enter
mov
push
enter
call
or
jecxz
(bad)
or
fdivr
(bad)
inc
(bad)
push
jle
sahf
push
cmp
cmp
mov
std
iret
retf
mov
int3
add
dec
mov
test
xchg
pushf
clc
pushf
je
addr16
xchg
(bad)
(bad)
(bad)
jmp
in
scas
shr
daa
pop
cmp
xchg
ja
adc
ins
clc
in
ficomp
(bad)
(bad)
(bad)
call
std
sub
out
dec
mov
cmp
mov
jb
out
in
enter
push
xchg
(bad)
aaa
xchg
and
mov
sub
or
(bad)
sti
mov
call
shl
iret
push
mov
je
push
(bad)
mov
test
in
cmp
ja
or
in
mov
je
(bad)
fistp
enter
push
push
(bad)
call
add
mov
ret
je
into
ins
in
je
adc
scas
repnz
dec
jmp
(bad)
pop
out
retf
(bad)
sub
and
adc
mov
repnz
(bad)
(bad)
push
mov
and
mov
xchg
loop
cmp
inc
(bad)
(bad)
(bad)
inc
fst
mov
in
jmp
xlat
push
fsub
pop
adc
dec
psllw
add
(bad)
(bad)
call
inc
jb
or
or
jge
pusha
out
stos
jbe
sub
out
or
ins
xor
cmp
(bad)
(bad)
dec
test
not
dec
iret
or
jno
mov
cdq
sbb
xor
ficomp
(bad)
(bad)
(bad)
push
arpl
popf
sbb
push
mov
mov
mov
test
and
dec
cmp
push
mov
gs
cmp
cwde
push
dec
leave
stos
lods
arpl
(bad)
(bad)
(bad)
call
out
push
pop
cli
inc
loope
xchg
dec
(bad)
cli
mov
arpl
jno
jge
(bad)
(bad)
dec
test
add
jg
sbb
adc
test
lahf
and
(bad)
jmp
cs
cld
sbb
jmp
call
rcl
int3
inc
cli
add
sbb
push
mov
xor
(bad)
(bad)
(bad)
call
pop
fs
(bad)
out
pop
mov
frstor
je
pop
mov
or
mov
adc
(bad)
(bad)
(bad)
mov
(bad)
fisub
fnsave
es
xchg
(bad)
lea
fisub
(bad)
jmp
xor
push
shr
or
scas
fisttp
mov
add
(bad)
(bad)
(bad)
jmp
jecxz
cmp
adc
sbb
arpl
and
sbb
ss
not
jge
(bad)
jmp
sbb
data16
fcomp
adc
shl
out
das
fsincos
nop
ss
pop
cli
adc
jmp
mov
test
in
xor
add
ja
lock
fld
xlat
push
mov
mov
test
adc
sub
(bad)
(bad)
(bad)
js
rcr
push
rol
lods
adc
sub
and
enter
aas
and
dec
test
(bad)
(bad)
inc
outs
(bad)
push
adc
xor
dec
sub
ins
int3
(bad)
(bad)
(bad)
(bad)
jmp
ret
push
xor
sub
loop
loopne
push
sbb
lock
mov
rcr
(bad)
(bad)
jmp
or
repnz
jns
ja
fistp
pop
lock
bound
cmp
xchg
pusha
mov
cli
pop
sbb
adc
(bad)
call
jne
xchg
sbb
ins
dec
pop
push
xor
fnstenv
xchg
out
std
pushf
xor
jp
sub
(bad)
(bad)
call
dec
push
arpl
jno
push
pop
out
ret
ret
out
js
fwait
dec
lock
loope
in
sti
(bad)
(bad)
(bad)
dec
movs
xor
mov
inc
repz
mov
dec
out
jnp
(bad)
cmp
xchg
xchg
and
(bad)
dec
(bad)
sbb
sub
xor
out
scas
mov
sahf
mov
(bad)
jmp
and
test
jnp
pop
sar
xor
cmp
push
(bad)
(bad)
(bad)
call
cmp
sub
and
jne
mov
xor
outs
dec
iret
sti
cwde
push
mov
adc
xor
into
fwait
jmp
call
push
call
inc
fadd
(bad)
loope
mov
sbb
int
aas
pop
sub
push
xchg
pop
jp
jo
push
jb
jle
xlat
dec
push
(bad)
outs
jmp
ret
int3
js
nop
ret
ss
ds
xchg
lods
(bad)
jmp
aas
jle
les
jg
shr
div
push
(bad)
out
mov
inc
xchg
imul
movs
jo
or
sub
mov
dec
pop
std
(bad)
call
fdivp
or
ret
xchg
add
jb
mov
xor
fcom
xor
clc
jg
jmp
(bad)
push
cmp
push
xchg
adc
mov
and
shl
(bad)
out
je
dec
cmps
pushf
sbb
inc
and
fstp
add
out
iret
push
mov
(bad)
(bad)
(bad)
call
out
test
and
es
add
gs
sub
sbb
aad
dec
or
(bad)
(bad)
jnp
mov
shl
adc
cdq
int
push
cmc
(bad)
dec
std
push
xor
dec
push
sub
(bad)
push
fisubr
loop
(bad)
inc
nop
mov
pop
daa
test
sub
dec
inc
fs
mov
pop
cmp
and
pop
xor
or
mov
in
adc
fcmove
cmp
pop
hlt
(bad)
call
lods
inc
fwait
inc
jmp
fdivr
movs
pop
pop
repz
lock
push
add
(bad)
(bad)
jmp
stos
push
jmp
dec
pop
pop
xchg
lods
pop
sbb
sub
test
jle
xchg
push
(bad)
(bad)
(bad)
dec
std
ret
inc
add
push
outs
and
pushw
sti
shl
into
bound
test
out
leave
loop
cmp
jnp
fmul
jl
sub
fidivr
xchg
push
push
push
mov
jb
lahf
(bad)
(bad)
(bad)
call
xchg
xchg
adc
push
movs
aad
repnz
jecxz
test
mov
sub
push
clc
cs
mov
into
cmp
clc
adc
fcomip
outs
into
call
xchg
cs
inc
lahf
push
out
addr16
inc
fisttp
fimul
popf
out
leave
cmp
cli
(bad)
(bad)
inc
xchg
xor
shl
(bad)
cmps
pop
es
aam
fsub
xor
sti
das
clc
dec
scas
shl
pinsrw
mov
das
lahf
cmp
pop
std
push
cmp
enter
xor
xchg
push
sbb
lock
inc
cdq
hlt
xchg
pop
mov
imul
push
inc
js
(bad)
(bad)
call
pop
jle
mov
and
ss
adc
call
xchg
in
movs
call
int
inc
push
outs
imul
(bad)
sbb
int
call
dec
imul
(bad)
inc
fistp
mov
mov
sbb
aas
dec
mov
pushf
xchg
push
jbe
xor
std
(bad)
(bad)
call
lods
outs
xchg
scas
add
xchg
mov
mov
rcr
pop
inc
aam
lods
nop
mov
and
aaa
pop
add
xor
and
inc
imul
jmp
push
fdivr
into
push
xchg
cs
sar
loopne
inc
dec
add
inc
inc
lahf
push
dec
cld
retf
push
(bad)
(bad)
(bad)
call
xchg
fwait
dec
mov
aad
rcl
jns
mov
jns
int3
pop
(bad)
in
xor
(bad)
(bad)
cld
jmp
in
or
fdivr
fist
loop
dec
sbb
loope
sar
test
pop
aad
sub
inc
mov
mov
pusha
inc
clc
addr16
or
dec
sbb
loopne
outs
ret
(bad)
(bad)
call
fnsave
loop
mov
lldt
popa
scas
fstp
nop
push
jp
cmp
adc
jmp
(bad)
pop
xor
xchg
in
jo
adc
div
xchg
add
mov
nop
fdiv
cmp
adc
add
or
mov
cdq
lahf
sub
mov
sbb
outs
pop
enter
and
fcmovnb
loope
inc
(bad)
call
test
adc
mov
aad
inc
loopne
sbb
call
mov
(bad)
mov
icebp
mov
dec
push
aam
pushf
movs
out
pop
sub
jb
sahf
das
and
fdivrp
(bad)
mov
jbe
in
sbb
in
cmp
mov
mov
out
(bad)
(bad)
(bad)
push
(bad)
aas
or
in
(bad)
and
imul
dec
cld
jg
enter
cmc
add
jo
adc
ins
xchg
(bad)
inc
push
adc
jg
mov
cs
jmp
xor
idiv
retf
repnz
test
mov
add
(bad)
dec
cmp
into
shr
sub
and
pop
sbb
loopne
(bad)
fcomip
mov
test
mov
loopne
cmp
xor
inc
mov
(bad)
(bad)
(bad)
jmp
mov
lock
mov
cmp
sbb
or
mov
lods
(bad)
(bad)
(bad)
inc
outs
pop
ins
adc
mov
ror
sbb
add
out
mov
push
mov
data16
imul
(bad)
arpl
dec
ins
leave
(bad)
(bad)
(bad)
call
shl
adc
mov
imul
adc
xchg
outs
adc
inc
scas
cmp
mov
cld
xor
mov
leave
stc
or
int3
pusha
jge
sub
dec
xchg
(bad)
(bad)
(bad)
jmp
aas
adc
leave
mov
aad
arpl
scas
ret
and
mov
in
sar
lahf
ds
pop
pop
lock
test
xor
dec
scas
dec
add
(bad)
(bad)
(bad)
push
outs
lahf
sar
out
xor
dec
inc
shr
out
adc
sub
add
(bad)
call
sbb
pop
mov
mov
sub
push
pop
lods
push
inc
(bad)
out
mov
jnp
daa
push
sahf
test
imul
push
stc
jb
mov
repnz
and
jmp
movq
sub
jno
retf
push
(bad)
(bad)
(bad)
dec
mul
cmp
mov
std
pop
pop
mov
xchg
mov
ds
int
fiadd
and
jle
retf
dec
add
loop
mov
iret
sub
aaa
ja
sar
lock
push
pop
call
inc
(bad)
(bad)
(bad)
call
ins
(bad)
mov
fisubr
popa
cmp
pop
imul
fsub
jns
outs
cli
(bad)
inc
pop
ins
cwde
jmp
xchg
adc
jmp
inc
(bad)
(bad)
(bad)
dec
ret
movs
jne
test
inc
dec
ds
in
mov
(bad)
sbb
jb
cmp
or
mov
jb
jmp
cmp
fstp
stos
daa
scas
mov
icebp
in
stos
inc
mov
mov
out
movs
push
imul
xor
push
hlt
retf
fimul
(bad)
jmp
scas
iret
and
jmp
mov
mov
mov
xor
not
dec
inc
xchg
inc
push
mov
mov
mov
(bad)
(bad)
jmp
stc
lea
mov
out
mov
sbb
jle
cld
dec
lock
out
or
js
xor
lods
cs
test
cwde
jmp
dec
(bad)
(bad)
jbe
pop
inc
cld
das
inc
jecxz
(bad)
movs
cmp
and
shl
mov
jns
(bad)
(bad)
inc
stos
das
pop
les
sbb
leave
sbb
mov
movs
aam
mov
jnp
(bad)
(bad)
(bad)
cmp
dec
xchg
push
or
push
cmp
sub
push
ror
pop
scas
popf
mov
rcl
(bad)
dec
pop
stos
stos
(bad)
hlt
popf
cmp
mov
xor
pusha
lods
mov
fild
xchg
dec
lock
call
lahf
and
aad
sub
xor
dec
scas
inc
pop
data16
ror
(bad)
call
mov
mov
or
mov
add
pop
(bad)
push
aas
(bad)
xchg
dec
imul
sub
xor
int3
mov
sub
push
dec
idiv
repz
in
retf
repz
xor
push
outs
jns
call
dec
mov
pop
cmc
mov
cld
jmp
jmp
retf
jbe
imul
repz
stos
(bad)
call
add
dec
sbb
scas
inc
add
push
lods
cmp
or
call
cmp
into
iret
cdq
or
or
ss
pop
cdq
xor
mov
xor
xchg
adc
adc
mov
jno
imul
mov
loope
push
aad
(bad)
(bad)
aas
push
dec
push
sbb
pushf
icebp
sub
fadd
adc
xchg
call
movs
mov
ja
lods
cmp
jl
je
mov
bound
(bad)
(bad)
(bad)
jmp
add
mov
shr
push
lea
xor
gs
imul
(bad)
(bad)
(bad)
(bad)
jmp
lds
jbe
jae
jecxz
jne
jb
pop
repnz
mov
mov
je
(bad)
(bad)
jmp
pop
int3
cmp
stos
mul
mov
daa
cmps
jo
jbe
fnstsw
scas
(bad)
(bad)
(bad)
call
mov
gs
or
mov
and
fild
add
add
call
pushf
or
mov
aaa
jnp
sti
test
(bad)
jmp
xchg
dec
xor
adc
pop
fisubr
stos
push
loope
fwait
mov
lds
clc
(bad)
jmp
jg
mov
mov
in
add
mov
fs
fistp
cmps
popf
inc
fadd
(bad)
jg
dec
idiv
pmaxsw
adc
mov
(bad)
(bad)
(bad)
call
or
xchg
xor
aaa
cmp
push
add
pop
mov
sti
and
(bad)
(bad)
call
fs
call
inc
fwait
mov
(bad)
xor
(bad)
mov
fdivr
push
daa
retf
cmc
pushf
push
repz
xchg
sbb
pop
cld
dec
rcl
or
loop
out
dec
cmp
and
fisttp
mov
lods
(bad)
(bad)
(bad)
call
add
fisubr
jge
loope
pushf
std
mov
ret
fstp
xchg
xor
sar
(bad)
(bad)
call
adc
jle
scas
hlt
(bad)
xchg
dec
sbb
cmp
scas
scas
cmp
es
pop
daa
push
cmp
(bad)
(bad)
jmp
in
adc
sub
dec
pop
daa
jg
dec
or
or
sbb
ds
(bad)
(bad)
push
stc
fild
or
sbb
or
rcr
(bad)
imul
es
jl
loopne
inc
out
aaa
fdivr
and
add
xor
(bad)
mov
lds
sbb
cmps
in
mov
dec
rcl
in
imul
xlat
(bad)
push
mov
lahf
push
sbb
cwde
in
pop
arpl
in
loope
fstp
sub
(bad)
(bad)
call
out
xor
cdq
(bad)
and
adc
xchg
out
mov
sar
(bad)
(bad)
jmp
adc
in
dec
pusha
jnp
in
int
mov
(bad)
retf
and
jae
shr
jle
pop
icebp
mov
retf
jae
ss
dec
mov
dec
push
(bad)
(bad)
(bad)
dec
test
ret
fdivr
xor
jns
sbb
dec
xor
outs
mov
mov
push
push
add
push
rol
int
add
(bad)
(bad)
cmp
jns
jns
cmp
sbb
nop
gs
(bad)
(bad)
jmp
xor
aas
pop
fs
mov
int3
xchg
or
outs
popf
jne
sbb
ja
lods
xchg
cmp
dec
sbb
stc
out
leave
jns
xor
xchg
push
cmp
(bad)
call
fs
fcmovnu
pusha
jbe
test
add
jl
add
and
sub
aaa
mov
cld
push
mov
xor
out
(bad)
(bad)
(bad)
jg
lahf
mov
hlt
ret
movs
or
aaa
inc
ins
push
cmp
pop
rcl
pop
jecxz
xor
sub
outs
mov
int3
push
mov
adc
cmp
push
jmp
cdq
dec
stos
outs
clc
add
adc
dec
in
sub
stos
(bad)
rcr
(bad)
(bad)
(bad)
(bad)
jmp
repnz
push
fnstenv
inc
mul
xor
pop
fnsave
ins
xchg
jbe
xchg
(bad)
(bad)
dec
ret
arpl
sti
sub
pop
stc
cmps
and
popf
adc
(bad)
(bad)
(bad)
jmp
pop
mov
push
outs
xor
shr
nop
xlat
and
mov
ficomp
ins
mov
(bad)
(bad)
(bad)
call
test
data16
xchg
or
pop
ficom
(bad)
mov
(bad)
dec
adc
stc
(bad)
(bad)
(bad)
inc
mov
fidiv
cmp
add
push
xchg
dec
jne
add
mov
(bad)
(bad)
push
adc
push
mov
and
call
add
or
loopne
(bad)
jmp
jge
ret
mov
aas
cmc
inc
outs
jp
xchg
out
in
fmul
pop
repnz
jo
les
sub
dec
pop
push
xchg
mov
(bad)
(bad)
inc
fs
js
and
push
sbb
and
jmp
pop
sbb
shl
push
xchg
pop
dec
iret
icebp
(bad)
(bad)
call
mov
push
jno
jbe
push
dec
sar
xor
daa
cli
xor
ficomp
xchg
out
(bad)
cmp
fild
sbb
call
xchg
fst
repz
stos
pop
scas
(bad)
int3
ja
fwait
inc
loop
dec
pop
xor
xchg
push
idiv
(bad)
xor
ss
pop
lock
sub
jge
jmp
and
sbb
rol
ins
scas
mov
(bad)
(bad)
aas
fsubr
push
loope
repz
mov
xchg
or
call
(bad)
mov
push
push
imul
inc
loop
addr16
out
add
inc
xor
push
mov
aad
imul
mov
dec
fsub
sub
xchg
dec
cmps
retf
sub
ss
sub
clc
retf
(bad)
dec
mov
sub
pop
and
cmps
outs
stos
jmp
scas
fld
cmps
in
adc
mov
cmps
bound
push
arpl
or
call
cmps
movs
mov
mov
(bad)
push
movs
push
sbb
ss
lock
jmp
cdq
xor
cmc
mov
xchg
mov
jmp
cmps
adc
jnp
(bad)
xchg
mov
mov
rol
inc
and
call
add
and
or
mov
(bad)
mov
test
ud0
(bad)
jmp
cmp
movs
pushf
das
mov
lods
fild
aad
pop
cdq
mov
add
push
repz
(bad)
(bad)
(bad)
(bad)
cli
data16
mov
xchg
mov
push
push
sahf
mov
out
add
inc
scas
movs
(bad)
ror
jmp
cmps
mov
(bad)
jmp
mov
sbb
std
inc
adc
aaa
ins
ins
fwait
sbb
sar
mov
cld
(bad)
inc
(bad)
and
stos
ja
pop
setae
pop
in
dec
int3
(bad)
dec
add
jne
dec
std
pushf
mov
std
(bad)
dec
ret
test
and
cmp
mov
(bad)
dec
inc
adc
(bad)
(bad)
(bad)
dec
lods
mov
xor
js
inc
les
jmp
add
(bad)
shl
sbb
jo
stos
mov
pop
add
jl
lock
cli
aas
call
inc
sub
movs
enter
cmps
call
iret
push
adc
sub
mov
fld
pop
fdiv
sub
outs
cli
(bad)
jmp
je
xchg
adc
sbb
fisttp
(bad)
(bad)
(bad)
call
sub
pop
xor
mov
call
jl
xchg
ds
jmp
btc
ins
pusha
sbb
dec
scas
enter
shl
popa
out
fdivr
(bad)
out
pop
pop
sti
loopne
cmp
fwait
mov
xor
push
sar
hlt
mov
inc
inc
mov
push
int3
push
rcl
pop
sar
(bad)
(bad)
dec
out
mov
lods
push
mov
fwait
ret
xor
repnz
(bad)
(bad)
(bad)
call
adc
add
mov
icebp
push
lea
arpl
loop
ja
mov
call
(bad)
(bad)
dec
aas
mov
aam
push
mov
add
(bad)
out
push
bswap
adc
cli
(bad)
call
in
cdq
or
enter
xor
fild
pop
cld
inc
jbe
jne
retf
lods
and
inc
xchg
push
cwde
sahf
in
mov
dec
sbb
(bad)
(bad)
(bad)
mov
inc
jle
jle
sub
xchg
push
aam
xor
jecxz
adc
(bad)
pop
ja
out
(bad)
(bad)
(bad)
dec
outs
xchg
aaa
retf
cmc
mov
xchg
sub
xchg
mov
mov
jge
or
(bad)
push
(bad)
cmp
mov
mov
icebp
lds
or
test
ss
jmp
mov
push
jl
int
add
(bad)
mov
ds
icebp
adc
pop
inc
mov
mov
mov
dec
shl
nop
jp
arpl
adc
mov
ins
jg
mov
dec
fs
(bad)
ja
call
lahf
mov
push
sub
jle
lock
std
or
sbb
jbe
jmp
js
xchg
inc
loopne
(bad)
xor
fadd
jnp
data16
and
call
(bad)
(bad)
push
dec
fst
retf
cmp
ins
inc
aas
cmp
test
ins
das
int3
adc
(bad)
(bad)
fistp
es
(bad)
ficom
jne
in
fnstcw
dec
xor
add
or
xchg
cli
dec
sub
cmp
cmps
push
(bad)
in
enter
cdq
pusha
icebp
(bad)
(bad)
(bad)
inc
scas
inc
arpl
jmp
stos
sbb
or
cmp
rcl
push
adc
lods
movs
xlat
sar
(bad)
(bad)
call
scas
xor
inc
retf
cdq
test
ins
out
adc
cmp
(bad)
movs
js
(bad)
(bad)
push
inc
int
scas
out
cmc
(bad)
jo
aam
jbe
pop
stos
ss
jae
clc
js
stc
out
xchg
int3
icebp
jg
(bad)
push
dec
or
xchg
fwait
jecxz
mov
ins
push
dec
jnp
dec
push
repnz
call
out
(bad)
(bad)
(bad)
call
scas
or
not
test
mov
lods
shl
cmp
inc
loopne
or
(bad)
(bad)
mov
outs
mov
xor
sub
loope
dec
int
adc
push
popf
sbb
mov
ja
retf
neg
aad
or
cli
jp
hlt
jg
(bad)
(bad)
out
popf
jg
(bad)
nop
pop
arpl
xchg
dec
push
cli
inc
fwait
(bad)
jb
pop
fld
(bad)
jg
es
test
jne
clc
xchg
jb
mov
(bad)
(bad)
dec
inc
std
lock
fimul
mov
adc
mov
pop
into
mov
inc
neg
lods
(bad)
(bad)
(bad)
(bad)
jle
dec
and
inc
xor
aas
adc
test
mov
xchg
punpckhbw
les
(bad)
(bad)
(bad)
(bad)
mov
xchg
push
fdiv
xchg
or
(bad)
xlat
push
sub
fisub
mov
(bad)
(bad)
(bad)
dec
mov
jo
fs
shl
jb
repz
mov
xlat
int
add
and
sahf
rol
(bad)
(bad)
(bad)
(bad)
jg
test
push
dec
(bad)
jnp
add
push
in
es
sti
jnp
outs
loope
popf
fisub
call
fwait
jmp
(bad)
(bad)
(bad)
out
js
xor
repz
mov
fistp
cs
xchg
push
mov
nop
fsubr
stos
std
inc
std
(bad)
jmp
stc
clc
xchg
jns
adc
sbb
xchg
and
xor
(bad)
(bad)
(bad)
or
mov
xor
movs
(bad)
fucomi
aad
pusha
cdq
add
outs
mov
(bad)
(bad)
(bad)
out
mov
repnz
sub
mov
mov
inc
sub
jo
cmps
cld
pop
das
jmp
(bad)
(bad)
(bad)
push
inc
stos
mov
outs
test
(bad)
jne
fsubrp
lds
push
mov
dec
(bad)
iret
lods
xchg
inc
fcmovb
(bad)
jmp
add
push
mov
cld
push
xchg
sbb
es
push
cdq
dec
inc
and
(bad)
cmp
scas
loope
cmp
imul
jae
(bad)
(bad)
(bad)
dec
jbe
mov
out
ds
int
pop
xor
push
imul
cmp
(bad)
call
mov
lods
shr
das
rcl
push
inc
(bad)
jmp
(bad)
out
clc
xlat
sbb
pop
scas
push
xchg
cli
(bad)
inc
fdivr
xor
pop
test
out
jns
jecxz
bound
mov
cdq
in
clc
mov
sub
(bad)
jmp
imul
mov
(bad)
cwde
fcom
ins
cmp
loop
js
add
(bad)
(bad)
jg
(bad)
sub
ficomp
adc
lds
adc
and
pop
push
int
aam
mov
lahf
(bad)
call
dec
or
out
lds
pop
out
call
jl
pop
jmp
dec
iret
sahf
div
cmp
std
fistp
xchg
cwde
xor
imul
test
jmp
jp
push
xchg
inc
mov
ins
std
inc
out
ror
fs
dec
repz
xchg
jne
pop
loopne
stos
cmp
cmp
mov
cld
jl
mov
push
movs
cmp
out
sub
mov
les
cs
(bad)
std
loop
(bad)
(bad)
(bad)
inc
add
pop
mov
adc
cmc
push
dec
icebp
sar
mov
and
cmps
(bad)
(bad)
(bad)
(bad)
fdiv
push
or
ss
movs
mov
sar
jb
adc
pop
xchg
jo
pop
xchg
hlt
xchg
inc
aaa
cmps
inc
mov
mov
xor
call
push
adc
popa
jno
fist
enter
in
shl
cdq
sbb
std
imul
and
xor
xchg
push
cmps
aas
pop
xchg
xor
adc
jmp
inc
dec
mov
dec
lahf
call
push
mov
inc
popa
sub
(bad)
(bad)
jmp
or
mov
imul
jecxz
fwait
push
in
rcl
pop
adc
mov
sub
call
cld
jo
pop
pop
(bad)
sti
imul
call
mov
jmp
or
jg
sub
fs
(bad)
(bad)
(bad)
call
adc
add
add
push
cmp
fmul
or
jmp
scas
pop
jo
pop
int
or
push
test
adc
sub
sub
test
popf
dec
enter
cmp
imul
and
imul
push
cmp
cmp
test
mov
(bad)
push
retf
popf
and
or
sub
or
jp
shl
dec
(bad)
(bad)
(bad)
push
pop
loopne
call
sub
and
fnsave
xchg
inc
inc
loopne
fucomi
test
pop
sbb
mov
cdq
mov
dec
(bad)
(bad)
(bad)
(bad)
(bad)
mov
in
outs
or
lods
cs
lahf
mov
xchg
xor
dec
ins
or
jmp
dec
dec
jnp
mov
iret
mov
(bad)
hlt
xchg
xor
out
call
mov
and
and
(bad)
out
inc
int
nop
xchg
and
sbb
inc
add
mov
pavgw
mov
jo
pop
(bad)
(bad)
(bad)
jmp
rol
sar
xor
fistp
div
faddp
fwait
cmp
sbb
jns
(bad)
(bad)
(bad)
(bad)
in
repnz
cld
xchg
mov
adc
xchg
adc
pop
ja
sti
sbb
js
(bad)
(bad)
call
xchg
xor
int
aas
dec
mov
lods
(bad)
adc
sti
push
imul
call
das
dec
cmps
push
xor
xchg
ficomp
cdq
cmp
into
or
ins
std
(bad)
(bad)
jge
repz
sbb
sar
call
add
fucom
inc
gs
aaa
pop
jp
cmp
scas
cli
mov
sbb
push
ja
push
sbb
sub
jecxz
into
out
das
cmp
sahf
and
(bad)
(bad)
(bad)
inc
xor
sbb
in
cmp
mov
xor
xchg
add
popa
(bad)
(bad)
(bad)
jmp
adc
mov
xor
rcr
stc
hlt
stos
fldenv
test
adc
or
(bad)
push
jmp
sub
jnp
or
jb
inc
fisttp
mov
pop
cmp
pop
inc
std
cli
(bad)
(bad)
(bad)
call
pop
outs
xchg
jno
jae
cmp
cmps
pop
ret
leave
lods
sub
push
test
mov
sub
js
mov
jae
cmp
jle
ret
xor
(bad)
(bad)
(bad)
jmp
nop
jg
jno
sub
in
out
sbb
pop
and
aad
arpl
fxch
lds
fucomi
aad
(bad)
(bad)
dec
ins
push
pushf
adc
and
mov
pop
and
adc
sub
loop
mov
fbstp
stos
ds
push
sahf
pushf
add
lea
or
(bad)
(bad)
(bad)
ds
push
push
sub
inc
inc
sub
cli
sub
mov
inc
fs
sti
push
sar
(bad)
(bad)
call
jmp
cmps
ja
sbb
les
in
dec
push
lods
push
shr
mov
jnp
ret
push
std
fnstenv
(bad)
(bad)
mov
mov
add
inc
add
sbb
(bad)
mov
(bad)
xor
add
loope
lahf
mov
push
pop
dec
(bad)
(bad)
out
clc
cmps
add
out
sbb
sbb
inc
sub
cmps
repnz
call
int
repz
cli
sahf
fs
xchg
lock
cmp
jo
push
pusha
(bad)
(bad)
(bad)
push
imul
dec
pop
mov
push
mov
push
mov
nop
std
xor
jl
jmp
pop
int
imul
stos
and
inc
inc
test
mov
(bad)
call
mov
jge
adc
cmp
xor
aas
repnz
aad
(bad)
xlat
(bad)
(bad)
(bad)
call
ud2
in
out
mov
or
in
or
and
std
(bad)
jmp
cmp
and
dec
scas
call
(bad)
mov
jle
cmp
(bad)
jmp
clc
fidivr
not
mov
mov
test
cdq
sub
inc
dec
adc
dec
jge
mov
pop
cli
ret
add
test
arpl
mov
cld
(bad)
(bad)
(bad)
inc
xchg
pushf
out
adc
fist
adc
add
dec
pop
or
outs
sar
(bad)
call
scas
mov
test
push
pop
lock
dec
outs
aam
mov
(bad)
(bad)
(bad)
jmp
in
dec
push
dec
and
pop
jnp
int
iret
stc
add
les
loop
aas
adc
test
fs
(bad)
(bad)
call
mov
sub
jge
ror
jnp
jo
icebp
aas
inc
inc
fstp
aam
(bad)
(bad)
(bad)
call
dec
mov
stos
mov
xchg
adc
and
scas
(bad)
dec
inc
nop
int
retf
(bad)
(bad)
(bad)
jmp
xchg
dec
ins
pop
mov
dec
sub
cmp
js
add
(bad)
sbb
imul
cmp
int
aam
mov
and
ret
xor
lods
xlat
jge
xlat
iret
pop
(bad)
jle
xchg
or
or
jg
(bad)
(bad)
dec
jg
push
push
xor
scas
imul
jmp
mov
out
push
bound
mov
(bad)
(bad)
jmp
out
dec
mov
jnp
ins
dec
cli
les
jp
xchg
hlt
pop
dec
xchg
cld
out
mov
repnz
(bad)
inc
popa
sar
in
popf
add
fs
dec
pusha
popa
cmps
mov
(bad)
(bad)
(bad)
call
mov
dec
jb
std
scas
int
loope
cdq
mul
jne
aad
iret
mov
mov
call
jb
(bad)
jge
sub
sub
jmp
and
and
jmp
(bad)
(bad)
mov
popa
in
ret
add
sbb
gs
(bad)
(bad)
jmp
adc
and
push
sbb
jb
ds
xchg
iret
xchg
test
(bad)
cmc
xchg
das
neg
das
clc
jmp
add
push
push
movs
int3
fidiv
repnz
mov
xor
or
(bad)
(bad)
(bad)
call
xchg
adc
stc
jne
and
test
push
fimul
cld
in
dec
cld
bnd
lahf
or
or
dec
sbb
int
push
js
and
ds
and
cmp
(bad)
and
jecxz
cwde
daa
cmc
mov
jmp
inc
outs
rol
and
mov
fld
in
dec
mov
push
imul
pop
and
fwait
hlt
pop
pop
movs
jae
xor
jle
mov
fwait
or
(bad)
jno
mov
(bad)
(bad)
jmp
mov
xor
stos
cmc
pop
and
adc
fsubp
xchg
pop
(bad)
jmp
hlt
xor
xor
add
or
sysret
cwde
xchg
mov
fcomp
(bad)
(bad)
jmp
xchg
loope
inc
xchg
cmp
inc
sub
mov
ins
daa
fisubr
mov
and
std
ds
ja
xchg
dec
and
fisub
xor
shl
imul
(bad)
adc
adc
mov
in
scas
bound
scas
stos
mov
jg
add
popa
inc
int
addr16
fisub
ins
test
(bad)
(bad)
(bad)
inc
xchg
sti
outs
call
out
adc
(bad)
or
xchg
addr16
sbb
xchg
adc
xor
mov
(bad)
aad
imul
jbe
cmp
pop
cmp
jmp
repz
not
pop
push
(bad)
jge
inc
scas
fs
and
add
or
popf
push
adc
call
mov
test
gs
jae
adc
dec
jmp
push
inc
mov
add
mov
fcom
push
xor
push
mov
dec
(bad)
mov
or
(bad)
(bad)
jmp
popf
dec
mov
pop
inc
sbb
push
dec
xor
jmp
(bad)
(bad)
call
jnp
mov
add
cmp
add
adc
dec
adc
test
sub
shl
xor
fucomip
pop
mov
rcr
ret
sti
dec
xchg
pop
mov
call
dec
jno
sub
cmp
mov
push
(bad)
jbe
cld
pop
add
jl
and
jmp
arpl
adc
(bad)
(bad)
push
in
fwait
repz
push
out
outs
shl
add
shl
(bad)
hlt
test
hlt
sbb
(bad)
(bad)
call
adc
repz
inc
bound
inc
jge
pop
mov
jp
shr
(bad)
jmp
push
mov
js
(bad)
loop
rcl
out
(bad)
test
cmp
dec
xor
fsub
jg
or
xchg
inc
mov
jmp
xchg
adc
sub
(bad)
jmp
(bad)
out
aam
jb
mov
lahf
gs
ins
sti
cmc
retf
pop
inc
(bad)
(bad)
(bad)
jmp
fsubr
xchg
lds
(bad)
push
cmp
shl
jmp
lds
(bad)
(bad)
(bad)
dec
push
fcomip
xchg
(bad)
stos
loope
sbb
js
xchg
dec
sahf
repz
aad
xchg
cmp
(bad)
(bad)
inc
jno
fisttp
and
mov
pop
sbb
pop
mov
mov
jmp
or
sti
or
inc
jne
retf
ins
xor
mov
mov
sub
cmp
or
push
mov
pop
shl
(bad)
test
es
xor
xchg
(bad)
dec
lock
mov
shl
adc
(bad)
loop
hlt
dec
or
xchg
xor
(bad)
push
into
mov
lods
sti
and
fs
nop
cmp
int3
jmp
ja
ja
mov
and
in
(bad)
(bad)
call
sti
sub
jp
mov
std
icebp
sbb
mov
adc
push
or
mov
repnz
add
sbb
test
sar
mov
mov
call
rcr
fadd
daa
xor
in
jns
popf
fwait
(bad)
(bad)
mov
stc
inc
mov
sbb
sti
aas
js
lods
lods
and
aam
(bad)
(bad)
inc
sbb
inc
ins
adc
sysexit
mov
sub
pop
dec
fcomp
jecxz
inc
jg
(bad)
(bad)
(bad)
jmp
and
add
in
mov
aam
retf
(bad)
in
repz
nop
aam
add
jg
adc
and
sar
xor
mov
aam
dec
xchg
(bad)
ret
mov
jne
(bad)
(bad)
(bad)
mov
xchg
mov
shl
and
sbb
pop
cmc
fcomp
xchg
(bad)
(bad)
(bad)
call
push
push
xor
(bad)
fisttp
cwde
ret
popa
mov
and
sub
mov
sti
(bad)
jmp
mov
movs
test
call
fdivr
jg
out
push
jge
jmp
jle
call
push
ret
dec
loopne
scas
(bad)
(bad)
aad
(bad)
(bad)
mov
lea
xor
xor
pop
pop
mov
lea
call
call
inc
and
cmc
jmp
rep
cmps
pop
cmps
lea
ja
sub
cld
outs
loop
jmp
neg
out
cmp
stos
lahf
dec
push
(bad)
xlat
iret
or
rcl
push
addr16
mov
dec
inc
sub
loop
cwde
xor
mov
add
push
sub
sub
dec
mov
(bad)
(bad)
jmp
mov
xchg
popa
nop
dec
xchg
(bad)
scas
imul
mov
mov
ror
loope
ror
(bad)
call
rol
pop
lods
test
adc
out
std
mov
xchg
and
xchg
scas
mov
fcom
addr16
(bad)
(bad)
(bad)
dec
stos
xor
rcr
hlt
cld
mov
loop
xor
ja
call
mov
push
dec
pusha
daa
mov
inc
js
pop
imul
adc
cmp
dec
sbb
(bad)
inc
jecxz
clc
push
sub
cmp
dec
sub
sub
nop
mov
(bad)
and
pop
pop
into
jmp
mov
popf
ret
pop
or
adc
jae
cli
ss
jg
adc
push
push
jmp
pop
(bad)
aam
lock
jmp
pop
out
fsubr
outs
rcr
mov
inc
adc
loop
scas
cdq
out
call
call
jo
scas
cmc
mov
mov
mov
std
jmp
(bad)
(bad)
call
mov
jg
cmp
inc
std
aam
jmp
aam
xchg
fidiv
(bad)
(bad)
dec
fldcw
adc
imul
adc
stos
pusha
ja
cmc
pop
jmp
hlt
(bad)
push
call
ret
mov
pusha
(bad)
jns
(bad)
icebp
push
cmps
(bad)
xchg
leave
imul
movs
test
lea
imul
pop
xlat
(bad)
(bad)
jg
dec
cmp
xchg
and
inc
lods
adc
scas
adc
cmps
pop
push
(bad)
dec
mov
out
jns
inc
ret
ss
in
dec
mov
fisubr
cmp
(bad)
(bad)
call
inc
inc
or
pop
(bad)
jge
lods
retf
and
jge
adc
mov
lahf
mov
(bad)
inc
cmp
sbb
rcl
mov
ds
(bad)
hlt
adc
into
mov
(bad)
(bad)
fucomi
std
sub
dec
pop
icebp
or
and
cmp
sub
inc
and
or
popf
lods
xor
and
(bad)
(bad)
call
push
dec
jl
icebp
mov
jg
(bad)
stc
xchg
push
leave
dec
and
(bad)
sub
inc
sbb
in
jb
inc
movs
sbb
icebp
xchg
dec
das
dec
jp
cld
test
aas
fstp
mov
mov
(bad)
jmp
repz
sbb
test
adc
dec
xchg
jno
(bad)
(bad)
mov
cmp
jmp
push
(bad)
mov
test
nop
fwait
(bad)
(bad)
inc
arpl
out
mul
push
movs
ffree
jge
mov
sub
sar
cmp
add
movs
push
sbb
mov
iret
xchg
xchg
dec
inc
lods
fcmovnu
dec
jmp
das
dec
out
bound
push
in
ret
add
das
push
adc
lods
push
jmp
shr
add
das
lds
sub
out
mov
aaa
mov
jmp
xchg
out
add
int3
jmp
stos
or
adc
jg
(bad)
inc
in
add
mov
mov
pop
sbb
sysenter
add
retf
xor
(bad)
(bad)
(bad)
dec
adc
sbb
lods
cs
jns
adc
aaa
popa
jmp
add
hlt
jge
jo
inc
fldcw
adc
loop
sub
retf
stos
inc
loopne
repz
fld
pop
mov
daa
cmc
cdq
sti
push
iret
sub
out
fwait
ret
mov
sub
bnd
add
cli
call
std
add
cs
xchg
jbe
mov
mov
scas
fimul
(bad)
(bad)
jmp
clc
dec
sub
xor
call
mov
xor
iret
sbb
(bad)
xor
adc
mov
ror
iret
or
sub
jle
xchg
push
test
mov
int
(bad)
(bad)
(bad)
push
stos
sbb
adc
push
shl
out
inc
jle
lahf
pop
or
(bad)
dec
jl
xchg
aad
lods
xchg
xchg
sbb
loopne
enter
push
xor
jecxz
mov
add
push
test
fnstenv
(bad)
(bad)
call
daa
or
test
push
repz
add
mov
inc
mov
add
xchg
fnstcw
jecxz
(bad)
(bad)
(bad)
mov
xor
add
pop
push
jl
pop
fcomp
sar
(bad)
inc
and
and
popa
dec
imul
loopne
(bad)
fcmovnbe
retf
aaa
scas
loopne
ss
jmp
sbb
std
pop
inc
std
inc
sbb
pop
pop
cmps
cmp
mov
add
(bad)
dec
mov
sub
and
jo
test
addr16
movs
cmc
(bad)
push
fimul
ins
test
rol
jne
push
aaa
(bad)
(bad)
call
or
(bad)
cdq
movs
pusha
pop
sbb
das
loope
loop
(bad)
(bad)
mov
push
jno
stos
movs
jns
lea
loope
(bad)
retf
lods
inc
pop
hlt
xor
jge
(bad)
(bad)
call
mov
sub
popa
dec
fwait
mov
stos
pop
int3
mov
pop
shl
sub
mov
je
dec
(bad)
or
mov
movs
mov
or
and
push
das
mov
rcr
ins
leave
lods
pop
loope
mov
add
(bad)
fst
and
ins
xchg
rcr
or
fstp
push
(bad)
jo
retf
cmc
(bad)
(bad)
dec
dec
bound
xchg
jmp
push
js
xchg
(bad)
(bad)
(bad)
call
push
lods
nop
dec
jle
out
cli
push
pop
cs
dec
pop
sub
aas
jns
(bad)
(bad)
call
mov
fs
dec
call
pop
stc
clc
out
(bad)
mov
inc
(bad)
(bad)
(bad)
call
call
cwde
xor
mov
and
sub
cmc
(bad)
(bad)
(bad)
jmp
adc
pop
jp
push
add
mov
hlt
cmp
cmc
shl
jp
inc
(bad)
(bad)
(bad)
(bad)
stc
mov
cmp
in
inc
clc
je
sub
shl
cmc
(bad)
adc
cli
pop
mov
in
(bad)
(bad)
push
push
cmp
mov
add
cmp
mov
mov
mov
and
cmp
cmp
aas
sub
dec
fucomip
mov
lahf
mov
adc
or
mov
mov
pop
cld
pop
call
pop
leave
icebp
lahf
cmps
hlt
sahf
xor
xchg
sub
nop
mov
pop
jmp
cmc
(bad)
mov
dec
mov
mov
cmc
sub
mov
data16
xor
push
std
(bad)
inc
sub
and
rcr
popf
or
lds
mov
(bad)
(bad)
dec
outs
and
out
pop
add
icebp
cmps
add
(bad)
(bad)
(bad)
(bad)
out
in
xchg
(bad)
fpatan
into
(bad)
addr16
(bad)
hlt
push
mov
add
cmps
adc
scas
cli
mov
push
lods
inc
scas
(bad)
data16
sub
inc
push
popf
cmp
inc
retf
adc
push
dec
popa
(bad)
(bad)
(bad)
cmp
jmp
jns
call
push
jg
mov
cmp
push
je
fadd
mov
adc
in
mov
sbb
inc
push
(bad)
inc
sar
call
enter
(bad)
(bad)
(bad)
fistp
ins
imul
mul
aaa
in
arpl
adc
jae
jnp
xchg
mov
(bad)
(bad)
inc
gs
jo
enter
sar
in
call
add
int
lods
enter
jmp
fwait
push
dec
neg
xchg
scas
cmp
push
cmp
call
pop
or
iret
das
(bad)
(bad)
(bad)
dec
shl
and
mov
out
aad
push
test
and
lods
pop
pop
into
mov
les
(bad)
(bad)
jmp
jne
int3
test
jne
mov
ret
aad
and
cmp
outs
fisub
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
dec
out
daa
imul
or
dec
cmps
xchg
adc
inc
inc
imul
push
inc
inc
scas
ins
aam
push
mov
xchg
inc
and
mov
xchg
xor
mov
add
mov
arpl
inc
mov
cmc
dec
mov
mov
xor
clc
inc
cmp
sbb
dec
push
idiv
ins
push
jbe
jb
dec
inc
cmp
rcr
sbb
mov
call
shl
fldenv
gs
mov
adc
pop
jo
or
(bad)
(bad)
(bad)
call
or
inc
xor
xchg
cdq
clc
repnz
scas
and
and
popf
and
xchg
fnstsw
(bad)
push
arpl
mov
addr16
mov
add
lahf
mov
test
fsub
jp
test
(bad)
(bad)
call
sub
mov
loop
repnz
rol
rcr
ror
xchg
jne
push
(bad)
(bad)
(bad)
(bad)
mov
in
nop
or
repnz
or
gs
repz
pushf
imul
sub
call
retf
push
call
sub
popf
jle
(bad)
(bad)
dec
sbb
add
push
pop
jbe
pop
xchg
and
les
cmp
loop
pop
mov
(bad)
(bad)
call
lahf
mov
add
mov
nop
inc
mov
in
shr
jbe
(bad)
(bad)
push
ret
out
pop
and
(bad)
jg
push
lods
sub
sbb
jno
pcmpeqd
sub
(bad)
(bad)
(bad)
mov
call
popf
or
sub
stos
mov
sar
aad
jo
psraw
(bad)
call
(bad)
jne
push
add
and
stos
pop
and
aaa
adc
jnp
call
sub
push
test
out
aas
sub
add
and
xchg
inc
test
imul
and
call
ficomp
mov
mov
call
jge
pop
pop
xchg
inc
mov
inc
xchg
xor
call
sub
mov
xchg
scas
(bad)
(bad)
(bad)
inc
psllq
adc
dec
fmul
movs
cld
mov
add
or
aas
and
(bad)
call
dec
xor
cmps
out
pop
xor
push
xor
call
and
jne
inc
cmp
pop
cmc
(bad)
push
mov
mov
mov
sti
cwde
fmulp
shl
jno
dec
pop
(bad)
(bad)
(bad)
jmp
add
push
cmps
mov
stos
popa
push
dec
dec
test
fsubrp
in
push
jge
repz
rol
ss
(bad)
(bad)
inc
push
repz
fisttp
push
dec
push
xor
sbb
rol
push
sub
dec
enter
dec
(bad)
cld
ins
(bad)
imul
pop
dec
int3
shl
data16
dec
enter
fist
push
or
push
inc
and
xchg
mov
push
(bad)
(bad)
(bad)
jmp
push
out
es
adc
cmc
js
call
inc
jne
dec
nop
jg
fcomp
dec
or
aad
ja
xor
xor
call
sti
mov
dec
in
add
push
xchg
shr
inc
adc
cmc
stc
dec
push
sahf
es
pop
sbb
dec
push
inc
call
cmps
lock
mov
xor
push
sbb
std
dec
or
jmp
xchg
in
sahf
arpl
imul
push
std
call
jge
lods
sti
mov
mov
stos
repz
(bad)
(bad)
(bad)
(bad)
aas
inc
mov
mov
add
add
sbb
sbb
xor
or
mov
(bad)
inc
mov
neg
xchg
lock
inc
and
gs
jl
or
out
aaa
mov
retf
loope
cmp
push
mov
(bad)
add
sbb
add
(bad)
dec
add
fild
xchg
add
add
inc
xor
sahf
adc
cmp
aam
push
ds
nop
push
jl
cmps
add
and
push
loopne
cs
sub
push
push
xor
dec
or
(bad)
jg
or
add
add
push
pop
into
outs
or
dec
mov
push
sbb
mov
push
jo
in
into
test
(bad)
(bad)
(bad)
mov
xchg
bts
sar
fld
ret
cmp
jb
stos
(bad)
dec
xchg
jge
mov
sar
mov
push
dec
fisttp
(bad)
call
add
lods
int3
fld
(bad)
(bad)
(bad)
jmp
push
or
out
out
or
jge
fnsave
adc
pop
adc
jno
leave
add
inc
cli
shl
pop
xlat
add
inc
jae
imul
(bad)
sar
(bad)
(bad)
cmp
mov
cmp
pop
stos
add
push
fidivr
aad
sub
rcr
cmp
test
(bad)
mov
pop
sbb
inc
push
pop
fmul
push
icebp
jnp
add
mov
cmp
sub
das
clc
mov
dec
shl
into
sbb
fdiv
repz
imul
jg
dec
add
dec
add
out
rcr
mov
(bad)
(bad)
push
xor
ret
cmp
loope
pop
cmp
xchg
bound
push
ret
(bad)
cld
adc
xor
mov
stos
movs
rcl
xrelease
in
or
dec
clc
ins
xor
pop
and
sub
mov
(bad)
(bad)
jmp
pop
je
ror
and
pusha
jo
cwde
mov
pop
push
sub
dec
adc
(bad)
(bad)
(bad)
out
xchg
shl
lods
es
jb
and
jo
das
dec
stos
push
dec
xchg
shl
dec
xchg
nop
xchg
xchg
xchg
xchg
xchg
call
sub
or
(bad)
(bad)
(bad)
jmp
sbb
shl
movs
(bad)
dec
leave
sub
mov
jmp
and
or
es
cli
test
cwde
mov
sub
xor
movs
adc
sub
or
aaa
or
call
cmps
outs
jmp
push
sbb
cmp
sbb
add
pop
ror
sub
mov
imul
xchg
inc
push
jp
dec
mov
(bad)
call
xsave
retf
int3
test
pop
jecxz
lea
test
loop
jo
xchg
push
(bad)
(bad)
(bad)
call
stos
jno
push
cs
(bad)
mov
xchg
jmp
or
sub
outs
imul
(bad)
dec
or
mov
add
or
xor
cmp
jae
sbb
daa
in
(bad)
(bad)
(bad)
jmp
push
cld
jge
sbb
and
xchg
fdivr
(bad)
cmp
dec
sbb
mov
inc
lds
imul
in
xchg
jb
int
aas
cmp
fdiv
scas
ds
(bad)
(bad)
jmp
jns
rcr
mov
aaa
int3
pop
mov
xchg
add
adc
js
ret
(bad)
call
test
xchg
ja
inc
ins
xor
mov
jecxz
mov
aaa
cmp
(bad)
(bad)
inc
mov
mov
mov
es
pusha
or
pop
(bad)
(bad)
(bad)
call
(bad)
fcmovnb
arpl
hlt
push
dec
jmp
mov
xchg
movs
mov
bound
(bad)
cmp
jle
iret
out
imul
movs
int
lahf
aam
neg
xchg
pop
cmp
sub
add
mov
dec
mov
cld
push
movs
push
jo
hlt
(bad)
(bad)
mov
mov
das
adc
xchg
add
loope
(bad)
mov
xlat
lock
xchg
imul
je
iret
aas
(bad)
cmp
neg
movs
inc
(bad)
(bad)
(bad)
fisttp
and
je
ret
cmp
jle
bound
xor
es
or
inc
or
xchg
inc
aaa
jecxz
(bad)
(bad)
js
sbb
push
shl
lods
cmp
add
push
and
inc
(bad)
push
sbb
cwde
add
call
add
fwait
pop
cld
fidiv
push
(bad)
inc
cld
and
add
lds
lock
loope
sub
(bad)
aaa
or
push
into
je
(bad)
repz
pop
fsubr
fs
fldl2t
enter
(bad)
(bad)
fucomp
outs
jle
popa
ret
jae
cmp
fisttp
mov
lods
push
jmp
dec
mov
xlat
sahf
out
sub
mov
sub
repnz
out
icebp
jmp
push
pop
pop
lods
add
(bad)
(bad)
fdivr
sub
lds
jno
pop
les
sbb
outs
retf
dec
inc
gs
adc
adc
pop
sbb
lock
dec
leave
push
int3
(bad)
mov
popf
(bad)
sti
jae
enter
sbb
pop
ficom
(bad)
inc
mov
mov
inc
inc
in
(bad)
shl
xor
shl
adc
cmp
call
jb
shl
pop
xchg
xchg
retf
push
stc
sbb
push
sbb
(bad)
dec
mov
cmp
dec
jnp
xchg
outs
enter
jns
cmp
mov
pop
gs
mov
xchg
dec
jmp
bound
push
mov
mov
stos
inc
fsub
xor
sub
sub
outs
addr16
mov
mov
std
(bad)
(bad)
jmp
es
sub
sub
loop
xor
dec
and
lds
mov
movs
outs
xchg
push
push
add
(bad)
(bad)
(bad)
mov
hlt
fisttp
jle
xor
out
outs
fist
cwde
push
add
xor
(bad)
(bad)
(bad)
jmp
scas
sti
addr16
push
outs
inc
ins
mov
sub
mov
fild
xchg
ds
jl
jg
(bad)
inc
mov
mov
mov
dec
fstp
repnz
idiv
ror
call
mov
bound
jmp
int3
stc
mov
mov
cmp
loope
or
(bad)
dec
or
(bad)
jmp
test
xchg
sbb
lds
(bad)
(bad)
jmp
nop
outs
clc
xchg
mov
ucomiss
ret
std
sahf
pop
mov
jmp
nop
inc
add
cwde
xor
xor
shr
fidivr
test
sar
(bad)
push
pop
adc
pop
add
mov
stos
jne
xchg
cmp
xchg
mov
das
push
mov
sbb
cmp
sahf
sub
lock
jmp
mov
jle
es
iret
mov
inc
cli
inc
add
cmp
mov
(bad)
(bad)
push
xchg
or
hlt
jo
into
int
(bad)
in
mov
(bad)
mov
push
daa
repz
mov
(bad)
mov
or
dec
xchg
lea
(bad)
fild
jp
pop
out
push
jmp
push
xor
icebp
inc
sub
clc
sub
xor
or
clc
xchg
fwait
not
mov
pop
(bad)
(bad)
call
pop
mov
test
rol
mov
aas
mov
jnp
sbb
(bad)
(bad)
(bad)
(bad)
mov
mul
push
not
data16
cli
mov
iret
fst
stc
(bad)
(bad)
(bad)
push
xor
cmp
lock
inc
jecxz
adc
xor
pop
push
xor
scas
push
(bad)
(bad)
cmp
mov
loopne
dec
sub
mov
rol
ret
push
jns
cmp
push
cld
sbb
(bad)
push
nop
pop
sahf
dec
xor
popf
sub
jae
data16
push
cs
test
stc
leave
cdq
jge
dec
cmp
pop
ss
ret
mov
bnd
std
repz
mov
and
das
xchg
jo
lock
cld
(bad)
dec
jns
imul
retf
jp
adc
cs
pop
test
daa
(bad)
fwait
pusha
loope
jg
mov
loop
mov
(bad)
(bad)
(bad)
push
push
adc
jl
dec
out
mov
jmp
cwde
mov
call
inc
adc
ror
movs
jo
(bad)
(bad)
jmp
push
jnp
mov
push
enter
jg
lahf
dec
dec
pop
scas
mov
addr16
dec
jmp
pop
sbb
mov
retf
sub
loope
scas
dec
ds
or
les
(bad)
cmps
mov
push
ror
cmp
imul
mov
mov
xor
push
lods
mov
in
jmp
das
cmp
add
jmp
retf
test
sbb
inc
mov
in
push
out
adc
(bad)
call
pushf
cmp
cli
sar
xor
aam
dec
jge
xchg
mov
(bad)
jmp
mov
dec
jnp
adc
stos
jmp
hlt
jle
add
or
jle
fmul
(bad)
dec
and
xchg
pop
fcomp
mov
fsub
add
int
sub
(bad)
(bad)
(bad)
jmp
es
jne
and
outs
pop
push
mov
(bad)
dec
jbe
jge
ss
gs
sub
jb
stc
push
(bad)
(bad)
(bad)
out
test
cld
and
mov
or
inc
add
imul
iret
cld
(bad)
(bad)
push
call
ror
sub
inc
ror
loop
and
arpl
cmp
in
mov
aaa
mov
lea
(bad)
(bad)
push
cmps
arpl
add
mov
fld
ss
cmps
add
inc
stc
(bad)
(bad)
(bad)
inc
dec
mov
cmc
call
(bad)
in
jno
mov
out
cmp
lock
xor
data16
push
and
(bad)
push
cmp
sti
mov
outs
fdiv
xor
pop
hlt
(bad)
(bad)
(bad)
push
loope
adc
and
inc
add
mov
mov
cwde
adc
inc
test
fcomip
fbstp
int
sbb
fcmovnb
add
mov
imul
imul
push
imul
aam
in
jmp
push
or
(bad)
(bad)
mov
push
outs
mov
stc
dec
dec
sti
cwde
inc
out
add
mov
mov
imul
(bad)
mov
in
mov
xchg
sbb
jns
adc
mov
fwait
jae
(bad)
jmp
or
and
adc
ret
dec
mov
xor
ins
sbb
cld
mov
sbb
jmp
pop
icebp
fwait
jb
xor
and
(bad)
cdq
int3
pop
(bad)
or
das
mov
loop
xor
(bad)
ror
cmp
add
and
xlat
hlt
sbb
rol
pop
mov
(bad)
(bad)
(bad)
(bad)
js
mov
test
mov
xlat
adc
mov
xchg
dec
call
(bad)
(bad)
call
mov
jp
lahf
push
sahf
(bad)
mov
cmp
sbb
nop
xchg
das
lods
pop
dec
icebp
inc
pop
mov
xchg
ret
adc
xchg
inc
pusha
xchg
aam
fimul
push
aas
sbb
cmp
xor
cmp
call
mov
xor
int
lods
pop
pop
push
inc
push
shl
(bad)
(bad)
call
fbstp
adc
dec
in
out
add
sahf
je
lahf
pop
sahf
or
rol
(bad)
(bad)
(bad)
push
(bad)
cmp
xor
gs
cdq
stos
cmp
sbb
mov
cmps
pop
(bad)
(bad)
(bad)
jmp
xchg
outs
cs
das
retf
int3
xchg
add
mov
out
add
gs
sbb
(bad)
jg
fsubr
sbb
popf
pop
maxps
test
pop
je
fsubr
inc
xchg
sub
mov
(bad)
(bad)
call
sbb
sub
ss
dec
sub
out
cmps
push
mov
(bad)
(bad)
(bad)
fmul
dec
je
(bad)
aam
pop
leave
or
and
stc
sub
mov
(bad)
jno
call
test
in
scas
adc
leave
xchg
and
mov
xor
push
fstp
pop
cmp
test
inc
lock
push
std
push
or
inc
call
dec
mov
mov
xchg
cmp
mov
and
mov
push
(bad)
enter
adc
dec
je
icebp
(bad)
(bad)
jmp
data16
hlt
imul
inc
repz
das
cmps
mov
out
aam
(bad)
call
mov
sbb
std
fcom
call
neg
fstp
jg
or
sbb
imul
je
loop
inc
mov
xor
dec
add
(bad)
(bad)
call
or
in
push
mov
xchg
lock
dec
sbb
push
out
sbb
call
adc
test
(bad)
(bad)
jmp
fsub
ret
sar
(bad)
and
jb
and
(bad)
sti
xchg
loopne
jl
stos
mov
xchg
popa
gs
jmp
std
push
adc
push
pop
pop
out
cmp
rcl
mov
movs
popa
int3
(bad)
(bad)
(bad)
jmp
dec
pop
add
int
rol
pop
mov
xchg
mov
or
cdq
enter
das
(bad)
(bad)
(bad)
mov
ror
adc
jp
hlt
cwde
push
jl
mov
mov
jle
xchg
jnp
test
dec
div
(bad)
call
retf
rcl
ins
jmp
test
and
add
xor
push
movs
test
jmp
call
push
push
xor
fs
hlt
mov
jge
je
cmp
(bad)
jmp
into
dec
mov
hlt
in
cmp
(bad)
jbe
sbb
xchg
fs
inc
ds
popa
aaa
mov
out
push
int
aad
push
(bad)
(bad)
mov
push
std
icebp
lods
(bad)
pop
fist
and
cmps
nop
jne
xchg
pushf
bound
(bad)
(bad)
mov
adc
add
push
add
sub
jg
ins
mov
imul
arpl
jae
cmp
pop
sub
sbb
mov
movs
(bad)
(bad)
(bad)
call
adc
mov
icebp
push
in
shl
(bad)
scas
test
adc
jmp
ret
aad
(bad)
(bad)
(bad)
dec
(bad)
mov
fdiv
fistp
mov
movs
adc
mov
add
fs
pusha
xchg
outs
clc
jmp
xor
mov
fld
or
imul
add
das
rcl
add
push
dec
loope
ds
fs
pop
mov
test
(bad)
(bad)
(bad)
(bad)
call
enter
stos
sbb
push
mov
(bad)
mov
pop
mov
cmc
or
(bad)
(bad)
(bad)
call
sub
fld
xchg
jmp
enter
inc
in
call
call
clc
pop
pop
std
adc
add
outs
shr
loopne
and
xchg
sbb
push
(bad)
(bad)
(bad)
inc
das
mov
mov
neg
inc
in
loopne
mov
(bad)
push
jo
movs
sub
lock
(bad)
(bad)
in
les
(bad)
clc
retf
or
ss
push
jb
xchg
daa
cli
(bad)
dec
repz
test
movs
js
xchg
mov
mov
call
pop
fs
movs
or
(bad)
(bad)
jmp
or
push
mov
mov
stos
xchg
imul
cmp
xchg
(bad)
in
(bad)
call
cmps
loopne
add
or
hlt
out
adc
mov
and
cld
sbb
sbb
cmp
(bad)
(bad)
(bad)
call
movs
in
sbb
test
lods
cmc
xor
lods
adc
clc
mov
call
jmp
xchg
aaa
outs
sbb
scas
inc
jmp
xchg
add
retf
rcr
(bad)
(bad)
in
or
es
mov
xchg
cdq
xchg
push
jns
mov
inc
sbb
call
sbb
jl
xchg
push
arpl
mov
push
ins
ret
cmp
test
jmp
dec
jbe
mov
iret
ficom
out
push
stc
mov
sbb
(bad)
(bad)
(bad)
call
cmc
jmp
xchg
std
xchg
mov
test
push
sub
mov
push
lock
dec
ins
cmps
out
ss
jb
push
mov
imul
sbb
sub
(bad)
call
push
cdq
jl
and
mov
movs
mov
in
cli
test
test
sub
or
sbb
mov
test
cmps
jmp
(bad)
test
les
xor
xor
pushfw
(bad)
les
mov
push
fnstenv
jmp
mov
dec
inc
inc
dec
jno
xor
(bad)
(bad)
(bad)
push
push
icebp
mov
inc
inc
mov
fsubp
jbe
xchg
adc
cld
in
call
pop
cmps
adc
(bad)
(bad)
(bad)
push
shl
stos
aas
sbb
push
dec
push
ret
adc
adc
das
xchg
loope
imul
jg
or
jecxz
dec
js
cld
adc
loopne
add
cmp
movs
push
sbb
stos
(bad)
dec
push
xor
jo
mov
pop
adc
pop
pop
cmp
(bad)
(bad)
(bad)
fistp
(bad)
scas
adc
sub
dec
retf
mov
or
xchg
fcomp
rcr
adc
jmp
and
cld
pop
cmp
pop
or
dec
or
cmp
mov
imul
fnstenv
(bad)
xchg
and
jmp
and
xor
(bad)
(bad)
(bad)
jg
cmps
fimul
scas
inc
sbb
shl
les
push
jnp
mov
inc
call
or
(bad)
(bad)
mov
sub
rol
inc
jmp
push
adc
mov
sub
jae
mov
cmp
scas
or
add
lods
(bad)
(bad)
(bad)
fild
lea
jne
stc
xor
out
adc
sub
ret
movs
es
jmp
add
xor
(bad)
enter
cwde
push
or
xchg
push
push
or
cmp
mov
(bad)
(bad)
(bad)
push
cld
pop
sbb
nop
push
scas
mov
push
xor
cli
xchg
xor
xor
xchg
repz
inc
(bad)
(bad)
mov
add
mov
test
cmp
xchg
data16
pop
(bad)
pop
loope
mov
(bad)
jmp
and
dec
scas
and
adc
mov
mov
dec
push
(bad)
inc
(bad)
(bad)
(bad)
jmp
movs
mov
addr16
leave
inc
mov
data16
and
fistp
call
pop
push
ret
aam
jle
shr
fmul
sub
rol
lahf
xchg
xchg
fwait
pusha
ja
sbb
clc
call
jns
gs
ror
inc
pop
pop
test
mov
sbb
(bad)
inc
shl
push
les
jecxz
xchg
cmp
fld
mov
ss
adc
mov
mov
mov
mov
xor
mov
xchg
inc
aas
mov
(bad)
call
(bad)
mov
mov
add
push
js
mov
jmp
scas
stos
and
push
shl
imul
sub
add
mov
push
popf
(bad)
(bad)
(bad)
jmp
mov
enter
xor
addr16
fadd
mov
enter
xor
dec
in
pop
clc
(bad)
fucomi
and
popa
and
push
ret
(bad)
dec
test
and
test
std
ror
push
es
sbb
mov
mov
cmp
bound
clc
ins
shl
in
ror
aam
inc
pop
test
sub
jmp
shl
stc
or
das
sbb
pop
push
aaa
and
stos
loopne
jmp
fnstenv
xchg
mov
int
(bad)
call
push
std
fndisi(8087
aam
lods
into
retf
loopne
les
xchg
push
dec
push
add
mov
les
xchg
stos
loope
aaa
stos
push
pop
cld
xor
(bad)
(bad)
push
add
bound
stc
xchg
(bad)
mov
adc
rol
ins
or
(bad)
(bad)
jg
xor
aam
inc
(bad)
jl
js
fwait
jnp
push
popa
sbb
add
(bad)
(bad)
(bad)
call
js
lock
adc
xlat
(bad)
out
aas
out
inc
das
cmp
sub
sub
(bad)
(bad)
jg
enter
push
shl
dec
jl
out
pop
int3
lock
aas
cmp
jp
shl
pop
aas
pop
(bad)
(bad)
cmp
lock
mov
in
push
cmp
inc
std
es
inc
push
jle
xchg
out
adc
out
seto
(bad)
(bad)
(bad)
(bad)
test
rcr
pusha
hlt
jae
retf
xchg
cld
jp
gs
jmp
jmp
adc
enter
xchg
int
dec
add
add
(bad)
jmp
cld
or
mov
mov
out
inc
fcom
add
and
int
adc
sbb
in
sti
inc
aas
mov
xlat
push
call
fnstenv
retf
and
mov
pop
pop
pop
ror
xor
jge
mov
mov
add
inc
pushf
mov
sub
jmp
pop
cld
xchg
mov
xor
adc
or
addr16
lock
adc
jne
mov
fnstsw
mov
(bad)
(bad)
(bad)
inc
iret
jmp
dec
fsubr
loop
cmps
clc
jl
add
mov
(bad)
sub
jb
movs
lea
push
cld
(bad)
call
pop
pop
push
in
sub
cmp
retf
out
je
jmp
call
lods
stos
xchg
ret
mov
ja
add
jmp
jbe
sbb
cmps
push
add
(bad)
(bad)
push
mov
dec
scas
ss
(bad)
(bad)
(bad)
jmp
mov
das
(bad)
cdq
and
repz
adc
xchg
ss
and
(bad)
jmp
push
mov
push
imul
lahf
push
xchg
sbb
jmp
dec
(bad)
(bad)
(bad)
push
push
rcr
mov
push
aad
ds
cwde
mov
pop
xor
mov
(bad)
jmp
jecxz
cs
aam
out
mov
cmp
test
inc
les
popf
sar
jmp
inc
test
mov
inc
dec
out
cmps
sub
lahf
aad
dec
add
(bad)
sti
ret
push
adc
mov
push
(bad)
(bad)
call
in
icebp
pushf
popf
mov
mov
shr
sbb
cmp
cmp
(bad)
inc
xchg
pop
mov
icebp
or
push
out
fwait
adc
aam
(bad)
dec
dec
mov
mov
ins
mov
add
push
(bad)
dec
fwait
mov
(bad)
jmp
jmp
mov
std
test
mov
sbb
(bad)
(bad)
inc
ret
mov
call
je
xchg
cli
loope
jecxz
sub
cmps
out
scas
scas
ret
(bad)
jmp
jle
sub
mov
enter
cmp
add
loope
cdq
push
(bad)
(bad)
jg
or
imul
fcmovnb
pop
xor
mov
lahf
shl
mov
(bad)
(bad)
jmp
mov
hlt
jo
adc
sbb
and
loop
inc
test
cmp
(bad)
push
inc
push
add
lods
dec
cmps
sbb
mov
or
cmps
mov
add
push
fdivrp
cmp
jmp
sbb
enter
adc
ret
jno
add
adc
(bad)
inc
inc
rcr
fisub
or
int3
push
jmp
je
stos
cmp
pop
xor
xchg
aaa
xchg
stos
cmp
fisub
sbb
(bad)
rcr
aad
add
(bad)
(bad)
(bad)
(bad)
call
jmp
aam
bound
sbb
jns
inc
scas
xlat
mov
stos
fwait
(bad)
pusha
cwde
and
pop
jge
mov
adc
push
outs
lahf
ss
shl
stos
adc
clc
arpl
jbe
movs
jl
xor
(bad)
(bad)
jmp
xor
sbb
mov
mov
imul
movs
cmps
mov
lea
call
loopne
push
pop
movsx
cmp
enter
xchg
inc
sbb
mov
(bad)
rcl
ror
dec
test
dec
outs
icebp
fs
mov
(bad)
(bad)
(bad)
dec
rol
js
pop
rcr
imul
aas
in
mov
jl
add
sbb
call
(bad)
jmp
cmp
cmp
cmp
in
inc
inc
(bad)
lods
aaa
ffree
(bad)
call
inc
mov
fild
popa
adc
dec
inc
fst
(bad)
(bad)
jmp
xchg
inc
outs
jle
aam
cmps
stos
dec
dec
loopne
popf
xchg
mov
mov
sbb
push
int
dec
cdq
(bad)
(bad)
(bad)
push
inc
xchg
enter
repz
cmp
xchg
or
push
lods
fidiv
push
lods
ins
nop
ud0
(bad)
inc
sar
pop
add
imul
jle
retf
stos
stos
xor
dec
outs
(bad)
fcmovne
into
adc
pop
xor
nop
cdq
mov
data16
popa
push
or
pop
out
and
pushf
int3
mov
mov
(bad)
(bad)
(bad)
clc
fld
(bad)
mov
inc
dec
pop
sbb
mov
imul
add
es
repz
xchg
dec
xchg
fistp
call
or
fstp
ss
call
cdq
add
(bad)
(bad)
(bad)
dec
leave
mov
xor
test
and
or
jne
cli
sbb
add
(bad)
call
dec
push
inc
xor
xor
(bad)
(bad)
(bad)
aas
(bad)
mov
add
fadd
add
mov
adc
mul
rol
into
add
js
loopne
xchg
xor
inc
xlat
mov
add
pop
ror
in
and
pop
push
mul
(bad)
mov
(bad)
jg
pop
ins
add
add
cmp
mov
in
add
dec
adc
neg
inc
xor
xor
in
pop
rol
call
sbb
cmp
mov
(bad)
call
or
push
rol
icebp
outs
cwde
cmps
push
pop
push
neg
xor
xchg
(bad)
(bad)
dec
dec
push
cmp
cmp
xor
(bad)
cmp
inc
mov
je
mov
mov
(bad)
(bad)
(bad)
(bad)
cld
call
into
ins
push
cmp
sar
pop
mov
add
nop
xor
call
movs
shl
dec
fscale
cmp
cli
iret
dec
pushf
iret
pushf
lds
xchg
jmp
(bad)
out
pop
aas
les
cmps
xchg
cmp
xlat
stos
sbb
cmc
inc
movs
fwait
cmp
repnz
jge
clc
dec
jb
pop
les
out
rcl
shl
add
ret
or
bswap
xchg
retf
sar
jl
fiadd
add
cmp
lock
rcl
leave
or
jmp
dec
hlt
or
xchg
jnp
in
sbb
call
ret
(bad)
neg
dec
ss
movs
psrld
(bad)
nop
mov
dec
fist
or
hlt
(bad)
jmp
or
outs
sub
fs
add
jnp
hlt
jge
or
xchg
or
sbb
adc
aaa
jle
mov
ror
mov
sti
sar
(bad)
jmp
jne
arpl
es
and
cmp
jns
mov
fistp
mov
adc
add
cmp
hlt
icebp
paddsb
movs
cmc
std
xchg
lods
cwde
sbb
(bad)
jmp
lods
in
outs
rcl
jmp
xchg
push
xchg
test
aam
aad
mov
(bad)
(bad)
(bad)
(bad)
rcr
jg
add
adc
inc
sbb
enter
js
fld
mov
stc
(bad)
(bad)
(bad)
jmp
icebp
sbb
dec
cmc
icebp
fcmovnbe
repz
pusha
(bad)
std
rcl
sti
dec
data16
lock
(bad)
jmp
rol
inc
add
sub
mul
jg
cmp
in
into
add
in
(bad)
(bad)
(bad)
(bad)
ds
fcomp
cld
shl
(bad)
mov
rcr
xor
xor
cwde
sbb
sub
(bad)
(bad)
(bad)
push
fistp
call
fadd
push
fist
adc
push
mov
call
mov
sub
shl
cmp
lds
mov
scas
add
call
repnz
cmps
stos
(bad)
dec
sub
xor
mov
push
(bad)
push
stc
add
inc
out
adc
scas
ficom
push
cmp
adc
add
sub
dec
(bad)
(bad)
call
cld
xlat
jg
retf
jo
cli
lods
ret
lock
sar
pushf
inc
mov
lea
sbb
jns
mov
imul
hlt
test
in
fstp
inc
nop
scas
(bad)
pop
sti
ficom
in
add
(bad)
inc
jne
xchg
jp
sub
imul
retf
in
sbb
mov
fisub
push
pop
jge
test
retf
or
push
mov
xor
and
imul
mov
test
adc
sub
(bad)
call
std
fst
and
lea
mov
and
out
enter
pop
fucom
jecxz
mov
(bad)
fcomip
push
stos
scas
jecxz
icebp
call
adc
dec
mov
ds
aam
retf
pop
mov
call
add
pop
cmp
aas
mov
and
mov
clc
mov
stos
cld
fadd
and
xchg
mov
std
jmp
sbb
test
fiadd
loopne
pop
jo
or
fnsave
out
and
in
cmps
in
in
in
enter
jg
lea
(bad)
hlt
jae
mov
cmp
mov
jge
aaa
cdq
(bad)
(bad)
(bad)
(bad)
jnp
scas
out
pop
shl
cmp
mov
jg
jb
les
xor
xor
repz
push
in
out
clc
jg
pop
fidiv
ss
push
retf
fdivr
mov
data16
xlat
(bad)
(bad)
mov
jge
push
push
inc
cmp
sbb
dec
jle
mov
jg
sbb
int3
dec
das
ror
inc
and
pop
sub
mov
call
inc
push
and
shl
cmc
jo
out
stos
mov
clc
rol
and
jg
inc
and
outs
int
cmc
mov
mov
bound
dec
sbb
retf
push
xchg
pop
lods
das
inc
lock
ja
loop
or
cmc
imul
jmp
repnz
mov
ins
sti
mov
loopne
jmp
in
sar
dec
sti
push
call
push
mov
lds
loopne
(bad)
(bad)
(bad)
call
push
popa
sub
fsub
jo
ret
xchg
jno
cmps
mov
mov
(bad)
(bad)
(bad)
(bad)
fcom
repz
dec
out
mov
mov
(bad)
xchg
push
cmp
xchg
(bad)
cmp
xchg
enter
(bad)
jmp
push
js
mov
test
or
sub
cmp
into
pop
mov
jle
push
push
add
mov
sbb
in
rcr
add
or
jmp
sti
pushf
cs
mul
cmps
mov
or
rcl
(bad)
(bad)
call
xchg
jecxz
fs
test
mov
cld
cmc
mov
stos
cmp
dec
imul
fdiv
jp
xchg
hlt
adc
xchg
add
lahf
fldenv
(bad)
(bad)
inc
je
dec
xchg
shr
jecxz
fisubr
ins
test
cmp
into
(bad)
(bad)
jmp
sahf
push
dec
retf
and
jb
retf
(bad)
pop
push
sbb
(bad)
(bad)
(bad)
(bad)
stc
or
mov
xlat
jb
cmp
in
out
and
xchg
addr16
mov
(bad)
cld
or
sub
shl
out
out
push
fs
and
leave
repnz
out
loope
stc
xchg
movups
(bad)
(bad)
(bad)
(bad)
std
adc
in
inc
jne
jo
and
jge
(bad)
and
ret
xchg
out
test
jae
(bad)
(bad)
jmp
(bad)
sub
push
repnz
mov
jge
nop
int3
shr
lods
sbb
xchg
xor
(bad)
(bad)
jmp
data16
mov
out
loope
(bad)
std
test
daa
cmps
push
push
lock
call
mov
mov
push
sub
fcmove
ds
adc
(bad)
(bad)
jmp
xor
inc
cmp
(bad)
bound
(bad)
push
mov
or
ror
fs
(bad)
mov
pusha
out
dec
scas
jmp
sub
mov
mov
call
fnstsw
arpl
pop
cs
gs
sub
ret
jle
call
(bad)
(bad)
(bad)
inc
pop
dec
or
loope
mov
outs
xor
jl
or
(bad)
and
inc
cmp
dec
dec
in
push
adc
or
repz
cwde
(bad)
sub
bnd
(bad)
cmp
inc
sub
cmps
mov
or
inc
xor
(bad)
push
mov
clc
(bad)
inc
int3
cmp
sub
imul
in
cmp
icebp
call
sub
out
sbb
(bad)
loopne
mov
out
lock
fist
repnz
cmp
xchg
inc
mov
push
or
xor
pop
sbb
mov
cmps
repz
jmp
pop
inc
out
xlat
(bad)
dec
cmp
xchg
mov
jmp
stos
in
call
enter
(bad)
cmp
or
or
mov
cmp
mov
mov
dec
pop
mov
neg
(bad)
(bad)
(bad)
call
push
lahf
or
add
fild
inc
ja
mov
jle
push
cmc
jle
(bad)
(bad)
dec
push
pushf
(bad)
lods
inc
sar
fld
adc
dec
xor
clc
(bad)
(bad)
jg
mov
pop
xor
pop
xchg
sbb
lods
(bad)
sti
mov
and
shl
or
add
(bad)
inc
mov
dec
jge
push
adc
pop
xchg
mov
sbb
mov
movs
into
jno
out
xchg
mov
out
in
or
cli
(bad)
mov
sub
add
add
outs
int
jbe
hlt
mov
add
call
mov
push
sub
add
mov
jmp
cld
mov
(bad)
sahf
fisub
pop
int
repnz
mov
(bad)
(bad)
out
cli
aad
pop
aam
pop
cmp
or
dec
clc
push
mov
and
push
push
mov
aam
jne
pop
std
sti
jmp
enter
loope
(bad)
(bad)
dec
(bad)
mov
sub
out
stos
arpl
sbb
call
fisub
outs
iret
(bad)
(bad)
(bad)
(bad)
jmp
popf
ss
out
inc
jge
jmp
scas
(bad)
jnp
add
and
rol
xlat
(bad)
push
mov
jp
data16
lahf
adc
loopne
jle
repnz
(bad)
mov
push
mov
xlat
xor
xchg
lds
mov
in
sbb
daa
jbe
movs
sub
sar
arpl
jp
mov
in
push
popf
xchg
inc
(bad)
loope
retf
bnd
psrlw
dec
jmp
imul
into
imul
mov
movs
push
push
ss
mov
add
cmps
(bad)
mov
ins
lahf
jl
jbe
mov
jl
stc
fdivr
(bad)
call
call
mov
jle
je
inc
mov
std
xor
sbb
cld
mov
(bad)
mov
adc
rol
mov
jmp
mov
and
pop
jle
and
cmp
stc
mov
(bad)
(bad)
(bad)
jmp
mov
dec
imul
test
aad
sar
pop
das
jo
jo
adc
mov
(bad)
(bad)
jmp
out
cdq
loopne
fst
jae
xor
sub
rol
push
mov
(bad)
(bad)
jmp
call
sbb
out
jmp
dec
les
(bad)
and
mov
(bad)
(bad)
jmp
jle
xor
in
cmp
mov
sbb
pushf
cld
push
bound
(bad)
push
add
cmp
ins
inc
outs
ss
mov
or
pop
icebp
stos
mov
mov
inc
sub
sbb
addr16
lea
inc
outs
xchg
cmp
add
movs
xor
(bad)
(bad)
call
xor
mov
pop
push
cmp
loop
push
lods
mov
int
push
scas
test
push
xchg
in
fisub
(bad)
fld
mov
cmc
(bad)
call
fwait
jmp
pop
cli
ret
int3
push
sub
mov
pop
push
stos
test
imul
xchg
retf
dec
in
icebp
repnz
xchg
loopne
fdivr
(bad)
(bad)
call
xor
push
pop
adc
fild
ret
cmp
mov
sar
(bad)
call
jp
sbb
dec
data16
jnp
(bad)
sahf
cmp
ss
lds
int
fcom
xchg
in
jg
sub
push
mov
push
inc
cmp
or
cmp
not
cli
(bad)
jmp
pop
sahf
cmc
adc
popf
jae
ss
cli
ror
hlt
icebp
pop
cli
(bad)
pop
dec
loopne
(bad)
(bad)
(bad)
call
(bad)
stos
push
fcomp
ins
pop
fisttp
iret
sbb
cs
iret
mov
xor
fcmovnbe
push
mov
jmp
es
xchg
test
icebp
or
hlt
cwde
xor
jp
pop
outs
mov
icebp
clc
cli
cdq
(bad)
rol
cmp
std
in
jae
dec
cld
(bad)
push
push
cs
sbb
shr
in
retf
add
loopne
mov
mov
cmc
mov
mov
cli
mov
loop
mov
stc
sbb
inc
sbb
sahf
push
add
xchg
(bad)
(bad)
(bad)
dec
into
dec
ret
xchg
fld
int3
test
lods
mov
xchg
mov
out
std
xor
nop
lock
sar
jmp
sub
test
ja
jmp
add
(bad)
(bad)
(bad)
call
jnp
or
adc
push
add
cdq
iret
xchg
and
xor
mov
mov
jp
repz
cmp
nop
mov
push
(bad)
cmp
arpl
shl
sahf
inc
adc
and
fidiv
mov
push
cmp
pop
mov
fidivr
dec
popa
test
cmp
mov
(bad)
(bad)
(bad)
jg
mov
adc
xchg
dec
xor
jg
les
cdq
and
fwait
mov
sbb
mov
inc
jp
xchg
fwait
push
cld
push
mov
aam
aas
push
sub
sub
shl
and
sar
paddb
jae
add
cmp
jno
lods
mov
jmp
clc
(bad)
cld
or
jae
sub
int
cwde
add
sar
loope
fs
push
in
pxor
(bad)
(bad)
mov
out
pop
mov
mov
xchg
(bad)
mov
fisub
sub
push
sub
(bad)
jb
mov
ret
push
cld
data16
xchg
(bad)
(bad)
inc
pop
aas
add
inc
adc
in
retf
mov
enter
cli
jbe
cli
(bad)
push
popf
and
mov
shr
ins
jle
pushf
sbb
std
and
xlat
je
js
sub
fidivr
xchg
xchg
cmp
xor
int
dec
mov
cdq
pop
mov
dec
jns
mov
inc
pop
das
jecxz
ins
mov
push
sar
sub
and
imul
stc
fisttp
mov
(bad)
jmp
or
push
fistp
adc
scas
pop
ins
pop
mov
or
cli
sbb
adc
(bad)
(bad)
inc
cmp
addr16
(bad)
ins
pop
pop
xchg
pextrw
mov
pop
mov
inc
jns
sbb
pop
das
cli
(bad)
dec
sahf
xchg
lea
inc
mov
xor
std
jnp
adc
ror
stos
dec
mov
pop
mov
(bad)
neg
push
jecxz
rol
xchg
cdq
fld
xor
dec
lock
call
nop
sub
test
(bad)
adc
xor
add
lods
ja
mov
out
push
cmp
ins
fdiv
cld
lahf
mov
std
out
pop
xchg
inc
jl
xchg
bound
push
mov
cmp
push
cmp
arpl
push
and
(bad)
(bad)
(bad)
fcmovnu
mov
fs
add
or
xchg
jecxz
leave
mov
cld
cmp
(bad)
(bad)
jg
inc
xlat
sbb
(bad)
stos
inc
(bad)
xor
add
in
sub
pop
mov
sub
pop
sti
(bad)
(bad)
call
push
jb
fcomp
add
retf
(bad)
xchg
std
lock
mov
mov
push
jmp
mov
(bad)
(bad)
jg
push
jl
scas
mov
sbb
fpatan
lea
push
(bad)
sub
test
ins
pop
mov
pop
repnz
xor
push
mov
cli
push
lea
stos
cld
pop
(bad)
add
or
(bad)
out
clc
push
rcr
ror
in
xchg
mov
aam
or
(bad)
(bad)
(bad)
push
inc
pop
fnstenv
xor
lea
sbb
aas
stos
push
sbb
xchg
leave
jp
pop
hlt
(bad)
(bad)
jmp
xchg
pop
inc
aas
cmp
sbb
nop
out
movs
pop
pop
icebp
ins
inc
push
loope
sbb
cwde
loopne
cmp
jne
lahf
sbb
jle
daa
inc
ret
or
mov
mov
stc
(bad)
jg
adc
cwde
call
jno
arpl
inc
mov
les
cmp
das
or
(bad)
(bad)
push
cwde
sub
jmp
cdq
mov
pop
test
mov
pop
lds
mov
or
inc
movs
ds
sub
call
cdq
add
push
sbb
pusha
inc
daa
cmps
sbb
(bad)
or
test
in
xchg
xor
bound
push
pop
out
(bad)
stc
neg
push
test
jecxz
adc
out
ror
pop
in
test
cmp
cwde
(bad)
(bad)
(bad)
jmp
or
leave
mov
jmp
cdq
aas
or
rol
sub
jmp
adc
jmp
mov
dec
or
mov
repz
mov
imul
lahf
(bad)
call
push
xor
addr16
dec
punpckhbw
mov
push
mov
(bad)
dec
adc
and
mov
mov
fiadd
mul
adc
ss
(bad)
jmp
sub
(bad)
adc
mov
fldcw
in
(bad)
mov
ins
(bad)
(bad)
(bad)
call
rol
mov
and
and
fcmovnu
jecxz
idiv
xchg
cdq
in
add
(bad)
(bad)
call
adc
xlat
out
add
adc
mov
jle
(bad)
(bad)
cdq
call
(bad)
(bad)
sub
push
mov
cli
retf
push
or
sub
adc
or
enter
lods
jmp
add
int3
or
aas
lock
jmp
fmul
clc
mov
adc
gs
fsubp
dec
mov
cld
push
cmp
pop
push
(bad)
(bad)
(bad)
cmp
xchg
dec
mov
sti
mov
int
iret
jle
les
(bad)
call
push
jg
jae
popa
mov
pop
scas
in
sbb
adc
pop
out
out
add
sub
pop
jbe
(bad)
(bad)
(bad)
jmp
popf
aam
push
popf
(bad)
pop
push
xor
loop
pop
out
fadd
and
(bad)
(bad)
push
retf
mov
sbb
outs
push
in
retf
mov
and
jmp
call
ss
inc
jp
popa
aaa
outs
cmp
js
or
pop
int
mov
mov
ja
inc
sahf
jns
xchg
icebp
cmc
lock
sbb
mov
xchg
test
push
out
pushf
cmp
mov
dec
mov
(bad)
call
jnp
loopne
inc
jecxz
fst
(bad)
(bad)
(bad)
(bad)
ficom
clc
data16
xchg
push
jae
add
xor
pop
push
add
ja
popa
jns
cmp
call
fwait
cli
mov
sub
push
mov
aam
mov
adc
add
lock
sub
int3
pop
fadd
xlat
stos
arpl
sbb
mov
(bad)
(bad)
(bad)
inc
nop
or
mov
movs
add
(bad)
and
fisub
ds
dec
mov
shl
push
(bad)
(bad)
cmp
jl
lea
(bad)
cmp
cmc
aam
in
aad
adc
adc
ss
(bad)
(bad)
(bad)
out
cmps
dec
xor
pop
repnz
aas
mov
and
mov
mov
sbb
call
into
in
je
out
or
int3
pop
(bad)
popa
popa
scas
xor
push
fld
out
(bad)
(bad)
call
sub
lahf
adc
cmp
movs
jmp
xchg
pop
mov
mov
lods
xchg
in
push
mov
sub
xor
push
retf
repz
movs
pop
xchg
sbb
xor
adc
(bad)
cmp
mov
arpl
ds
pop
mov
mov
pop
in
ret
pop
shl
(bad)
(bad)
(bad)
call
inc
or
inc
pop
mov
mov
and
push
retf
popa
add
pop
jb
jb
(bad)
(bad)
(bad)
call
nop
dec
out
dec
faddp
xor
inc
pushf
add
in
ja
dec
call
jmp
(bad)
(bad)
(bad)
inc
mov
mov
push
cmc
lahf
add
movs
dec
les
pushf
sbb
mov
(bad)
(bad)
fbld
sbb
push
test
xor
mov
shl
xchg
(bad)
and
sub
mov
or
adc
mov
cld
sbb
xchg
(bad)
jns
pop
aas
cwde
or
popa
xor
or
(bad)
mov
stos
sub
inc
push
cmps
shr
pop
jnp
lods
jl
(bad)
sti
(bad)
(bad)
(bad)
call
sbb
jge
dec
jl
jecxz
aas
or
push
popf
lea
mov
sbb
mov
movs
out
mov
inc
push
xor
shl
arpl
jp
ror
ja
mov
inc
outs
loopne
sub
aam
mov
loope
loop
xlat
aam
xchg
ss
ins
jmp
xchg
es
xor
adc
and
movs
sub
mov
jge
(bad)
(bad)
(bad)
dec
push
aaa
cs
sti
out
rcr
fwait
into
mov
jnp
mov
(bad)
jmp
dec
dec
xchg
push
fmulp
push
dec
or
cmp
and
pop
or
call
(bad)
(bad)
dec
loope
adc
loope
cmc
leave
mov
mov
mov
and
sub
inc
adc
jl
(bad)
in
push
ficom
sbb
mov
(bad)
dec
inc
pop
sbb
(bad)
push
in
ret
push
xor
mov
sbb
enter
lods
aas
sbb
into
cmps
dec
stc
out
and
fwait
(bad)
and
push
inc
inc
mov
(bad)
inc
cli
in
cmc
cmps
icebp
inc
or
nop
paddusb
xchg
push
inc
pop
daa
pop
add
mov
into
loop
cmps
cmc
jp
div
loope
xor
cmp
push
mov
(bad)
jmp
ror
les
mov
cmp
mov
xor
xchg
repnz
and
cdq
adc
push
scas
(bad)
lea
xchg
push
test
inc
loop
xchg
push
sub
scas
icebp
dec
mov
aas
inc
fadd
xchg
mov
mov
mov
(bad)
(bad)
(bad)
inc
pop
pop
jl
dec
push
pop
cli
pop
icebp
int
sbb
je
and
ja
outs
jecxz
sbb
je
into
mov
xchg
js
adc
sti
(bad)
pop
repz
sahf
mov
inc
and
and
pusha
inc
or
clc
(bad)
(bad)
(bad)
call
sbb
in
dec
int
sub
jmp
push
stc
add
xor
sub
sub
rol
neg
(bad)
jg
add
mov
xchg
push
call
mov
(bad)
inc
(bad)
pop
leave
push
mov
dec
sbb
mov
pop
mov
jb
jg
xchg
mov
(bad)
(bad)
jg
dec
add
test
clc
mov
xchg
pause
outs
jmp
popa
fcomip
(bad)
sub
mul
in
cmp
(bad)
push
(bad)
(bad)
(bad)
(bad)
sti
and
dec
icebp
cmp
mov
call
xor
push
std
inc
sub
(bad)
(bad)
(bad)
call
rcr
mov
dec
sbb
inc
mov
or
inc
(bad)
xchg
leave
jge
ins
cmp
or
push
xor
imul
jmp
outs
xchg
nop
sbb
call
jns
lea
jnp
or
adc
(bad)
(bad)
(bad)
push
(bad)
scas
pusha
mov
stc
cmp
lock
jmp
sbb
inc
(bad)
(bad)
(bad)
jmp
sbb
mov
dec
iret
retf
aas
je
or
arpl
mov
into
rol
pop
xor
jge
(bad)
mov
sahf
(bad)
(bad)
(bad)
call
add
sub
cmc
dec
out
cwde
pop
mov
dec
stos
sti
fimul
inc
repnz
xchg
(bad)
jg
dec
in
shl
sub
imul
jecxz
mov
aas
and
std
mov
(bad)
(bad)
jmp
test
mov
ja
push
mov
sbb
std
adc
pop
mov
into
out
inc
add
xchg
jge
mov
pop
scas
push
add
repnz
in
push
pushf
stos
adc
jmp
ja
xor
fwait
add
push
pop
or
ja
push
pop
fs
sub
adc
add
int
(bad)
(bad)
push
xor
scas
jb
pop
cdq
jg
or
jge
cmp
(bad)
call
push
fisttp
movs
in
loop
int
aas
es
test
into
or
loope
popa
or
push
cld
push
out
pop
pop
outs
mov
imul
mov
lods
dec
ins
mov
jge
(bad)
(bad)
push
call
or
(bad)
or
add
xor
(bad)
sbb
sub
(bad)
(bad)
(bad)
cmp
ror
cli
dec
not
cmp
mov
test
xchg
jg
push
xchg
dec
mov
or
test
or
inc
icebp
daa
fdivr
mov
mov
aaa
mov
cmp
out
add
xor
stos
add
sbb
inc
ror
jmp
ins
into
call
xchg
jno
cmp
jle
scas
push
xchg
jbe
loopne
out
mov
repz
(bad)
jmp
addr16
sub
pop
pop
fs
jae
scas
push
out
fdivr
mov
(bad)
(bad)
(bad)
mov
mov
repnz
mov
test
les
cmp
ins
push
or
(bad)
call
popf
loope
jg
arpl
fimul
(bad)
leave
jmp
sbb
mov
inc
jmp
push
fdivr
nop
xlat
xchg
pop
lods
cmp
cmp
jmp
stc
and
aaa
lods
pop
push
inc
or
xchg
loop
(bad)
(bad)
inc
push
push
jnp
pop
add
aam
ins
inc
pop
enter
add
mov
cld
retf
rol
cmovle
ret
(bad)
(bad)
jg
dec
popa
clc
aad
shl
(bad)
inc
pop
adc
jno
mov
sub
hlt
dec
jmp
xchg
jg
dec
pop
loopne
inc
out
in
add
in
fbstp
lock
loop
jmp
inc
and
push
(bad)
(bad)
(bad)
call
adc
(bad)
test
pop
fiadd
or
(bad)
adc
lods
or
fdivr
(bad)
mov
arpl
mov
and
ja
push
cmp
mov
(bad)
and
sbb
out
or
rcr
movs
jmp
ss
scas
(bad)
xor
sbb
pop
lea
mov
push
push
cld
(bad)
mov
pusha
(bad)
mov
push
ret
push
add
in
rol
sbb
scas
jp
fwait
cmp
hlt
inc
cmp
dec
xor
stc
fadd
pusha
jg
jmp
mov
rcl
out
mov
adc
mov
(bad)
(bad)
(bad)
mov
loopne
mov
mov
mov
jnp
and
nop
mov
push
jl
outs
adc
(bad)
(bad)
call
shr
xor
hlt
adc
(bad)
sti
jbe
adc
aam
xlat
popa
dec
int
out
jmp
loope
push
fucom
mov
rcl
mov
cmp
clc
fwait
cmc
cs
call
(bad)
(bad)
(bad)
dec
(bad)
mov
mul
inc
cmp
movs
jge
mov
test
aas
adc
(bad)
(bad)
call
stos
mov
out
mov
push
mov
in
ret
mov
out
mov
sar
(bad)
(bad)
(bad)
fild
cmp
jl
add
inc
out
in
imul
cmp
stos
xor
push
dec
mov
adc
xchg
hlt
add
aam
adc
icebp
sub
inc
or
inc
(bad)
sti
sub
sbb
cmp
xlat
mov
loop
cmp
out
iret
mov
mov
jle
mov
xor
and
mov
push
and
add
pop
pop
adc
ds
push
cli
push
(bad)
(bad)
fild
dec
jbe
push
repz
nop
sbb
mov
(bad)
call
adc
jo
(bad)
ror
aas
inc
lods
test
in
(bad)
(bad)
(bad)
jmp
adc
jae
stos
lock
cdq
call
mov
add
fs
loope
xor
mov
imul
adc
pop
scas
call
stos
xchg
and
(bad)
push
cmp
push
fnstsw
pop
adc
imul
aas
leave
cs
(bad)
push
call
cld
xchg
enter
or
mov
(bad)
in
cmps
dec
popa
scas
(bad)
jg
lock
jecxz
jle
sbb
call
es
(bad)
es
(bad)
(bad)
call
pop
mov
jp
in
mov
sub
adc
(bad)
xor
lahf
ja
(bad)
(bad)
(bad)
jmp
sbb
lds
movs
out
addr16
out
push
stc
into
add
push
cmp
mov
sar
cmps
mov
and
mov
cmp
fst
stos
lods
mov
cmp
cmps
jecxz
ds
push
ins
mov
fcomp
xor
inc
ins
(bad)
(bad)
(bad)
dec
xlat
sahf
sti
aam
cmp
mov
cmp
jnp
xchg
jg
jno
repnz
(bad)
fwait
ds
mov
(bad)
(bad)
push
dec
lds
out
dec
arpl
cmp
jp
mov
aaa
lds
sbb
(bad)
(bad)
inc
out
cmp
and
stos
out
cmc
adc
fisttp
nop
(bad)
imul
push
aad
adc
leave
out
xor
fld
lods
pop
ins
rcr
xchg
and
into
(bad)
call
ds
jne
xchg
call
adc
lock
(bad)
inc
das
ins
loop
inc
cmp
push
popa
push
fbld
or
jb
push
sbb
(bad)
push
mov
and
xchg
inc
mov
in
iret
cmp
pop
xchg
mov
fadd
out
xor
cmp
mov
cdq
cmp
shl
(bad)
and
push
inc
(bad)
inc
xchg
fldcw
add
stos
xor
xor
(bad)
movs
lds
adc
rcr
or
(bad)
(bad)
push
stos
and
bswap
pop
sub
(bad)
aam
pushf
outs
fs
jmp
das
(bad)
mov
mov
xlat
retf
or
cmc
(bad)
(bad)
(bad)
call
xor
sub
(bad)
out
xchg
arpl
retf
sbb
dec
call
mov
(bad)
(bad)
inc
imul
or
bound
push
cmp
jg
loopne
jmp
cmps
add
test
mov
adc
jecxz
jp
imul
sbb
ins
inc
das
arpl
inc
and
cmp
je
fcom
(bad)
call
mov
cmp
adc
jl
(bad)
mov
jno
jmp
(bad)
jg
dec
test
mov
or
in
xor
sbb
sub
cmp
jmp
lock
sub
imul
iret
xchg
outs
adc
(bad)
call
jae
aam
sbb
fsubr
or
out
fstp
inc
pop
mov
add
push
and
xor
(bad)
(bad)
call
(bad)
push
sbb
mov
into
adc
sbb
js
bound
popf
push
xchg
jb
cwde
jle
loopne
in
imul
fst
push
jmp
dec
lods
aas
sub
fs
popa
repnz
enter
mov
repnz
xor
jmp
inc
jp
and
or
imul
mov
cmps
mov
push
xchg
jnp
pop
mov
jle
add
in
fisttp
(bad)
(bad)
jmp
call
js
mov
adc
scas
sub
outs
sar
cmp
add
cmp
mov
cmps
xchg
adc
ficomp
sahf
loop
(bad)
jg
jge
mov
adc
mov
arpl
and
cmp
add
adc
nop
in
mov
mov
lahf
ins
pushf
dec
stos
js
jle
mov
cmps
inc
shl
push
out
out
ret
jl
and
add
xchg
fsub
(bad)
(bad)
call
jb
test
dec
jnp
and
repz
sti
ret
(bad)
jae
lahf
outs
pop
lahf
and
cli
(bad)
dec
pop
aaa
movs
dec
dec
ror
or
mov
popa
sbb
sub
(bad)
push
jmp
pop
mov
jmp
imul
pop
adc
iret
cwde
je
dec
mov
jl
ret
shl
(bad)
(bad)
(bad)
call
stos
scas
jne
out
sahf
add
je
hlt
out
mov
push
(bad)
inc
shr
ror
enter
rcl
pop
lea
jns
fcomp
(bad)
(bad)
jg
cmp
sbb
sub
and
ror
cmp
inc
jne
out
dec
xor
inc
outs
jmp
movs
loopne
aam
inc
jecxz
adc
dec
xchg
out
cmp
sbb
(bad)
(bad)
dec
xor
dec
test
aam
pushf
push
ja
mov
shl
(bad)
(bad)
(bad)
call
sub
or
ins
push
scas
pop
(bad)
mov
into
push
push
jp
sbb
(bad)
adc
(bad)
dec
mov
stc
inc
imul
dec
inc
sub
sub
(bad)
or
shl
cwde
es
dec
das
jmp
(bad)
(bad)
(bad)
mov
add
xchg
jns
aad
push
push
and
adc
add
jmp
sar
(bad)
(bad)
call
fisttp
inc
sbb
sub
adc
adc
mov
neg
mov
cmp
test
jecxz
ds
bound
inc
hlt
rcl
jecxz
xor
adc
test
or
retf
(bad)
fbld
adc
std
xor
out
or
test
jmp
clc
or
cmp
arpl
push
movs
fild
sahf
jnp
leave
shr
int3
out
stc
fld
add
mov
sar
not
fwait
adc
addr16
leave
loopne
mov
(bad)
(bad)
jmp
xchg
mov
sar
cmps
or
pop
sahf
sbb
stos
cmp
ret
aaa
cmc
and
push
(bad)
(bad)
(bad)
(bad)
jmp
push
ja
or
mov
fst
xchg
push
ins
out
sub
(bad)
mov
mov
add
jae
pop
je
out
jne
xor
push
adc
or
or
out
mov
addr16
sub
sbb
idiv
(bad)
mov
jecxz
fldcw
xchg
nop
mov
js
xchg
xchg
ins
test
(bad)
(bad)
dec
sar
cmps
jecxz
fcom
in
and
imul
lahf
cli
les
mov
mov
stos
(bad)
inc
push
jb
push
cmp
or
loopne
adc
(bad)
(bad)
jmp
sahf
sub
les
mov
adc
mov
cmp
(bad)
jg
cmps
xor
xchg
cwde
add
pop
shr
fsubr
ins
inc
je
cmc
jg
jmp
jo
xchg
push
inc
mov
mov
sub
mov
ss
(bad)
(bad)
fbld
out
push
or
or
inc
ds
shl
jecxz
loopne
xchg
repz
sub
(bad)
(bad)
(bad)
inc
arpl
push
sub
ror
xor
mov
inc
xchg
xor
adc
sub
(bad)
loope
movs
xor
sar
das
xor
es
xchg
xor
ins
push
ror
mov
int
(bad)
(bad)
(bad)
jg
enter
mov
movs
stos
test
adc
cwde
or
xlat
test
xchg
out
xlat
(bad)
(bad)
(bad)
jmp
adc
lods
(bad)
into
mov
fcomp
or
jmp
(bad)
(bad)
fcomip
jp
mov
mov
aam
rol
pop
inc
jae
rcr
pop
mov
cmc
(bad)
jmp
int3
mov
xchg
ds
fisttp
push
ins
dec
loop
call
push
inc
scas
add
int
test
(bad)
pop
pop
mov
cmp
(bad)
(bad)
inc
cs
sbb
out
add
popf
mov
or
cmp
mov
test
gs
mov
sbb
xchg
bound
mov
aaa
cld
xchg
(bad)
out
xor
cli
iret
jg
in
pusha
pusha
mov
adc
cmps
(bad)
(bad)
(bad)
call
stos
pop
ret
movs
add
ror
movs
movs
dec
out
pop
xchg
je
imul
aas
jg
cld
cmps
(bad)
(bad)
(bad)
jmp
lods
imul
jg
repnz
or
mov
outs
hlt
or
pop
cmp
sub
fisttp
jge
lods
dec
mov
push
call
lds
jge
lds
xchg
xchg
not
call
or
xchg
popf
jae
pop
mov
fist
push
lahf
minps
adc
cmps
icebp
(bad)
(bad)
call
int
xchg
or
push
jmp
push
push
xor
dec
cmp
sub
push
xor
cmp
(bad)
(bad)
(bad)
jp
aas
push
xor
dec
(bad)
pop
or
das
dec
test
ret
xchg
and
mov
loopne
fstp
or
cdq
lds
jp
push
ss
ja
(bad)
out
add
mov
retf
jcxz
jno
out
mov
jmp
push
push
cld
jne
(bad)
cmps
adc
stos
fwait
pop
imul
sub
push
outs
(bad)
call
inc
addr16
cmp
imul
dec
dec
xor
jg
shr
inc
es
dec
imul
nop
xor
pmaxub
xor
dec
imul
jae
(bad)
(bad)
(bad)
aas
sub
jae
popa
test
lea
push
xchg
mov
jmp
addr16
cwde
push
fst
mov
sub
scas
jmp
jmp
dec
mov
add
frndint
adc
inc
out
(bad)
(bad)
(bad)
jmp
pushf
mov
xchg
jae
test
adc
jge
lds
loopne
(bad)
(bad)
(bad)
jmp
mov
out
scas
test
(bad)
iret
aas
mov
shl
(bad)
std
out
dec
sub
test
repnz
(bad)
(bad)
push
push
ret
test
sub
xor
outs
(bad)
xchg
xchg
mov
xchg
data16
(bad)
std
xor
scas
or
inc
sbb
xor
cmp
stos
(bad)
(bad)
(bad)
in
inc
ficomp
scas
xor
dec
bound
xchg
jge
retf
lahf
mov
call
mov
or
mov
leavew
popa
shl
mov
test
int
pop
dec
jnp
xchg
jge
push
jmp
xchg
pop
mov
(bad)
in
add
mov
fnstsw
push
xor
jo
or
aam
cmp
int
sub
jmp
and
add
fwait
shr
cs
(bad)
(bad)
(bad)
inc
movs
mov
fcmovbe
sbb
rcl
jns
aaa
push
or
xchg
(bad)
or
jno
psubusw
(bad)
inc
add
shl
inc
add
movs
adc
popf
jl
(bad)
(bad)
(bad)
jmp
jmp
sbb
arpl
cdq
test
jno
sub
test
dec
mov
push
(bad)
(bad)
(bad)
dec
cmp
call
jbe
(bad)
daa
jnp
mov
pop
into
mov
sub
aad
(bad)
xor
adc
ret
dec
push
scas
test
xchg
mov
test
push
iret
call
jmp
sbb
push
adc
ins
cmps
jecxz
xchg
(bad)
aam
retf
xchg
xor
scas
and
sbb
cmps
jmp
clc
jmp
fistp
stos
lahf
out
and
mov
cmp
xor
hlt
(bad)
call
mov
loope
jo
ficomp
lahf
lock
jnp
and
push
xor
push
(bad)
(bad)
(bad)
inc
mov
enter
mov
les
jl
pop
dec
push
mov
or
(bad)
in
fdiv
stos
aam
inc
sub
sub
add
sub
mov
movs
adc
mov
inc
dec
xor
pop
(bad)
test
dec
sahf
test
inc
mov
mov
call
pop
pop
jo
jno
outs
jbe
retf
idiv
jns
(bad)
mov
(bad)
(bad)
mov
dec
mov
mov
mov
ror
(bad)
(bad)
(bad)
jmp
add
pop
inc
cmp
xor
sahf
push
sbb
dec
push
mov
inc
and
and
leave
or
mov
jl
mov
sbb
js
mov
(bad)
(bad)
dec
jl
das
cld
push
fidiv
jge
xor
adc
mov
sti
pusha
icebp
inc
imul
loop
(bad)
call
jmp
push
pop
push
and
mov
jnp
mov
fistp
(bad)
mov
in
cmp
cmp
mov
jl
stos
(bad)
loope
sbb
(bad)
(bad)
jmp
iret
lock
mov
lods
pop
mov
pop
and
xor
xchg
movs
std
jmp
ror
mov
sub
xchg
mov
(bad)
jg
push
test
lods
lea
add
xor
arpl
pushf
inc
outs
xabort
stos
fstp
(bad)
call
clc
jecxz
adc
pop
pop
inc
add
es
adc
(bad)
(bad)
(bad)
(bad)
jl
imul
sub
cmp
jp
pop
adc
shl
and
pop
mov
ss
mov
add
mov
fdiv
push
mov
push
hlt
mov
(bad)
mov
popf
into
xchg
pusha
xchg
sbb
push
inc
dec
xchg
sub
push
loopne
sbb
retf
sub
cmp
rep
ror
dec
(bad)
xor
aaa
call
mov
inc
inc
clc
pop
inc
ror
les
(bad)
(bad)
jmp
mov
cld
pusha
iret
fwait
scas
mov
adc
sub
fisubr
sub
push
ret
sub
xor
or
das
cmc
(bad)
jp
xchg
data16
jmp
call
adc
(bad)
je
mov
imul
mov
movs
sub
cwde
mov
mov
push
jns
add
test
xchg
ror
loopne
dec
add
fadd
int3
out
cli
jo
stos
pop
pop
stos
(bad)
(bad)
(bad)
stc
jmp
in
push
push
pop
mov
scas
cmp
lock
(bad)
(bad)
(bad)
(bad)
jp
(bad)
push
xchg
dec
and
dec
gs
aas
pop
aas
cmp
jae
leave
dec
movs
jmp
mov
push
retf
icebp
(bad)
mov
lods
dec
cmpxchg
add
(bad)
(bad)
call
dec
sti
cmp
cmp
ret
sub
aaa
lahf
mov
jo
(bad)
(bad)
(bad)
call
popf
sahf
popf
fisttp
shl
nop
cld
jg
cmp
ret
dec
cli
xor
outs
inc
lock
mov
mov
(bad)
(bad)
jmp
icebp
push
pusha
mov
nop
loop
jle
ret
cmps
(bad)
repz
add
bound
dec
(bad)
(bad)
(bad)
mov
xor
pusha
imul
inc
pop
in
dec
inc
daa
dec
and
adc
dec
add
fldenv
mov
cmp
int3
das
jmp
cmp
xlat
inc
jo
jae
adc
or
cmps
outs
sbb
sbb
pop
cmc
call
dec
scas
ins
fwait
mov
std
push
(bad)
out
xor
call
(bad)
out
mov
mov
fwait
(bad)
mov
pop
cmp
clc
(bad)
(bad)
(bad)
(bad)
mov
stc
push
movs
ins
cmp
jecxz
jns
xor
out
ja
test
jg
pusha
(bad)
(bad)
(bad)
(bad)
jp
push
icebp
mov
pop
xor
mov
xor
inc
(bad)
dec
(bad)
call
movs
xchg
jp
dec
(bad)
jmp
popa
sub
sar
test
xchg
pop
retf
cmp
outs
jb
stc
cmp
(bad)
(bad)
jp
jle
retf
lock
out
or
pop
fwait
jle
ins
fdiv
inc
xor
nop
jge
cli
js
lods
int3
mov
dec
popa
mulps
push
stos
imul
sar
cmp
aas
cmp
aad
ja
jmp
xor
add
xor
in
ret
mov
sbb
cmp
(bad)
(bad)
(bad)
inc
dec
sbb
adc
inc
icebp
jae
leave
mov
fdiv
cmc
jmp
pop
(bad)
(bad)
shr
(bad)
push
cld
push
mov
jmp
sbb
inc
push
pop
jne
sbb
fnstsw
cdq
mov
dec
loop
(bad)
cmp
add
jb
in
add
(bad)
in
inc
lods
adc
mov
shl
rcr
xchg
push
ins
jmp
push
lods
push
jg
(bad)
(bad)
inc
repnz
fld
mov
or
push
rcl
jmp
addr16
(bad)
(bad)
inc
scas
mov
popf
xchg
movs
in
jge
cmps
mov
mov
cmps
sbb
lds
mov
inc
mov
into
test
inc
cli
pop
call
xor
inc
xlat
push
(bad)
(bad)
(bad)
dec
repnz
sbb
and
pop
mov
xchg
ins
inc
sti
nop
add
add
fcom
(bad)
(bad)
dec
lahf
xchg
repz
mov
lahf
mov
pop
hlt
jg
jb
outs
test
(bad)
dec
aaa
les
xlat
mov
mov
xlat
in
jmp
sti
push
push
and
fsubr
push
add
aam
xlat
lods
mov
(bad)
(bad)
(bad)
mov
add
sub
stos
cli
cmp
and
xchg
fnstenv
(bad)
(bad)
(bad)
(bad)
jg
sbb
aad
frstor
loopne
daa
xchg
cld
ret
scas
add
mov
cmp
(bad)
cmp
aam
repz
sbb
xor
cdq
xchg
dec
inc
add
(bad)
(bad)
fcomip
mov
cmp
xchg
inc
push
mov
inc
xlat
imul
mov
and
lea
mov
mov
pop
gs
push
dec
fnstsw
mov
pop
hlt
(bad)
aas
or
out
cmp
fist
frstor
std
mov
(bad)
(bad)
call
icebp
imul
ds
pushf
cmp
into
add
cmc
fistp
ret
xor
retf
das
cli
(bad)
inc
test
fidiv
jne
mov
call
or
push
push
pop
repnz
imul
inc
loopne
rcl
lods
icebp
inc
jb
clc
jecxz
(bad)
(bad)
inc
xchg
mov
popf
push
(bad)
jo
outs
xchg
push
and
push
pop
jge
mov
rol
test
push
aad
fidiv
scas
fcomp
es
ror
test
ins
pushf
mov
int3
jne
(bad)
(bad)
jmp
cmc
fsub
in
pusha
add
(bad)
in
repz
pop
jbe
dec
and
fld
retf
push
inc
stc
or
std
add
or
clc
cmp
pop
ins
mov
(bad)
(bad)
(bad)
jmp
push
push
jno
jmp
cs
pop
out
push
inc
jp
sub
dec
cmc
(bad)
inc
cmc
mov
fimul
cmp
jmp
mov
enter
cmp
jle
pop
pop
sbb
dec
loopne
adc
sti
loopne
test
add
adc
mov
jnp
(bad)
(bad)
dec
push
sbb
lods
sbb
loopne
sbb
mov
or
iret
mov
dec
ja
(bad)
outs
and
inc
xchg
pop
in
bound
jb
mov
cdq
or
stos
es
and
pop
jg
adc
call
add
adc
sub
push
jo
mov
add
inc
add
in
fidivr
ss
ret
adc
(bad)
(bad)
inc
retf
mov
xchg
jno
mov
out
mov
cwde
jns
adc
fiadd
push
std
xor
pop
pop
outs
out
sub
adc
adc
adc
xchg
lods
sahf
nop
dec
neg
(bad)
(bad)
dec
int3
call
cli
and
neg
scas
jg
fmul
ret
xor
hlt
lods
sub
(bad)
inc
mov
loopne
mov
imul
jns
mov
scas
std
(bad)
(bad)
push
lds
cmc
pop
or
jo
dec
in
test
fimul
sub
into
cmp
mov
or
jg
sub
(bad)
in
dec
dec
out
clc
mov
mov
jecxz
loopne
mov
fdiv
mov
jno
adc
and
(bad)
(bad)
(bad)
(bad)
mov
fst
outs
scas
xchg
sbb
mov
outs
and
jno
jp
push
and
xor
add
outs
cli
(bad)
call
pop
rcl
jmp
movs
pusha
sahf
mov
lods
add
call
mov
xor
adc
inc
int3
sbb
(bad)
(bad)
jg
cmp
retf
sub
ja
movs
sub
xor
arpl
cmp
xor
xor
(bad)
(bad)
call
rcr
mov
sub
adc
in
dec
inc
loop
and
dec
mov
out
cmps
loope
shl
mov
xchg
push
jo
call
cmps
jge
pop
(bad)
mov
je
jbe
call
bound
mov
pop
sub
jb
mov
dec
sar
(bad)
(bad)
dec
fs
dec
xchg
clc
cmps
pop
scas
dec
aad
je
sar
je
shr
ror
xchg
(bad)
call
pop
scas
xchg
nop
test
call
clc
sub
dec
cli
mov
or
shl
mov
xor
push
test
mov
adc
ret
(bad)
(bad)
(bad)
jmp
mov
popa
jmp
jle
arpl
jne
mov
(bad)
(bad)
call
imul
add
cwde
out
cld
xor
push
es
das
scas
mov
pop
and
xchg
ins
loopne
push
aad
adc
xor
hlt
(bad)
sub
dec
scas
push
mov
mov
push
dec
leave
hlt
iret
repnz
or
(bad)
(bad)
jmp
dec
jbe
xchg
mov
pop
std
enter
xlat
loope
(bad)
cld
push
in
jbe
xchg
fsubr
stc
addr16
in
jecxz
(bad)
dec
hlt
mov
push
inc
popa
repz
inc
mov
mov
xlat
and
bound
(bad)
(bad)
(bad)
mov
jp
lods
test
pushw
out
cmps
andps
sbb
sbb
cs
mov
lock
mov
(bad)
dec
ins
cs
mov
cmp
(bad)
(bad)
js
ret
jmp
adc
add
shr
push
push
push
cmps
sub
(bad)
mov
sbb
ins
dec
cmp
mov
sbb
call
mov
push
repnz
lds
mov
call
ror
adc
lock
(bad)
(bad)
push
dec
mov
mov
cmp
pop
inc
das
into
or
enter
jle
scas
nop
xor
sbb
(bad)
(bad)
(bad)
(bad)
call
mov
repz
ror
push
inc
xor
cld
lahf
mov
sar
mov
(bad)
(bad)
in
(bad)
mov
loop
clc
adc
ret
push
neg
ins
adc
addr16
loopne
mov
inc
loop
(bad)
(bad)
jmp
sub
lahf
and
push
pusha
aas
loopne
frstor
fstp
mov
mov
add
arpl
sub
lods
dec
retf
adc
add
loopne
xchg
nop
dec
xchg
push
inc
fimul
lock
sub
lock
jmp
jmp
dec
xor
ror
call
stc
push
xor
add
dec
fidivr
dec
mov
push
jmp
out
imul
shl
push
(bad)
(bad)
(bad)
dec
xlat
out
sub
add
ret
repz
jg
out
cmc
in
hlt
int
(bad)
(bad)
(bad)
jp
retf
or
mov
cmps
out
xor
xor
sbb
adc
jbe
cli
(bad)
(bad)
(bad)
jmp
arpl
jae
mov
lods
dec
inc
jg
sub
cmp
imul
arpl
add
imul
dec
mov
adc
or
stos
movs
or
or
cmp
test
cld
add
adc
push
cwde
cli
mov
ds
call
mov
imul
lods
jg
(bad)
pop
pop
jnp
sbb
push
ds
mov
dec
sar
cmps
sub
iret
add
loopne
or
pop
in
add
or
jnp
scas
mov
in
pop
push
fst
out
push
jo
(bad)
mov
jbe
mov
pminub
jg
jg
mov
dec
enter
test
mov
ja
or
jmp
jae
xor
xor
add
call
enter
js
push
jns
inc
test
(bad)
cli
jno
add
xchg
ror
push
mov
push
jg
mov
pop
mov
(bad)
call
sub
push
lahf
enter
leave
add
jns
cwde
jp
dec
jbe
jl
push
mov
(bad)
(bad)
(bad)
push
popf
cmc
mov
dec
(bad)
in
xchg
lods
lock
pusha
pop
cmp
sbb
adc
mov
mov
gs
cmp
sbb
(bad)
(bad)
(bad)
dec
mov
stc
in
sti
inc
adc
(bad)
jp
movs
xchg
repnz
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
jb
leave
or
(bad)
hlt
mov
idiv
cld
int3
jnp
xor
sahf
ja
xor
fwait
inc
cdq
mov
(bad)
(bad)
(bad)
jg
les
lahf
sbb
xor
sub
sub
mov
mov
mov
fsub
and
(bad)
(bad)
call
(bad)
(bad)
mov
xchg
sbb
shr
(bad)
mov
std
(bad)
mov
dec
repz
ret
jno
pop
add
(bad)
(bad)
jg
lahf
mov
aaa
mov
and
stos
push
sbb
rcl
dec
or
jmp
lahf
(bad)
call
cld
lock
mov
call
xor
push
ja
shl
push
pop
xor
(bad)
(bad)
(bad)
jmp
icebp
out
(bad)
push
jl
mov
lock
push
aaa
pop
scas
push
dec
lds
(bad)
cdq
in
fcom
dec
jmp
pop
inc
nop
sahf
sub
jo
jp
jne
icebp
xchg
cli
dec
lock
(bad)
call
test
push
mov
in
call
shr
xchg
(bad)
(bad)
call
ror
out
xchg
mov
fisub
xor
(bad)
cli
sbb
test
add
in
xlat
mov
es
mov
int3
in
sub
pop
cld
xor
ins
movzx
inc
inc
or
(bad)
inc
or
push
repnz
mov
test
push
or
sbb
mov
inc
push
add
js
inc
or
pop
lock
(bad)
(bad)
(bad)
inc
xchg
fld
and
mov
xchg
(bad)
fnstcw
enter
xor
(bad)
(bad)
push
out
(bad)
and
mov
jbe
pop
pop
jo
loope
pop
call
dec
int
hlt
(bad)
(bad)
(bad)
call
mov
mov
stos
loope
jnp
or
pop
inc
lods
sbb
mov
aam
mov
call
imul
aad
xchg
add
pop
cdq
aam
inc
jl
cmp
adc
adc
int
mov
cdq
movs
lds
pop
push
xor
inc
xor
xor
add
mov
adc
cmp
lods
or
fistp
out
xor
cli
(bad)
(bad)
(bad)
jmp
js
or
push
push
sbb
ret
sbb
ja
sti
ret
bound
ret
shl
mov
push
inc
mov
sbb
mov
push
jge
jbe
dec
lods
push
or
inc
clc
cmc
(bad)
(bad)
(bad)
(bad)
call
mov
jnp
push
xchg
pop
aas
shr
fsubr
call
dec
stos
lock
xchg
push
mov
xchg
pop
cmp
mov
mov
xor
push
jge
fcomip
(bad)
(bad)
jmp
outs
(bad)
stos
std
mov
enter
popf
adc
mov
(bad)
(bad)
(bad)
cli
inc
inc
and
sbb
jbe
xchg
inc
pop
push
and
xlat
ja
(bad)
mov
call
jae
inc
in
rol
pop
push
sub
out
(bad)
xchg
vpor
dec
fild
inc
fcomp
mov
dec
test
and
mov
mov
(bad)
mov
mov
int
inc
test
pusha
fcom
fidivr
cmc
(bad)
jae
(bad)
(bad)
call
mov
mov
imul
xchg
das
cmps
and
outs
fdiv
jmp
call
std
call
mov
cli
test
jne
push
cmps
xchg
jmp
jmp
icebp
lea
xor
inc
out
hlt
lods
(bad)
(bad)
(bad)
call
mov
jne
fild
fldenv
sub
(bad)
pop
inc
retf
stos
jmp
add
(bad)
(bad)
push
daa
cmp
div
pusha
mov
pop
sbb
lahf
xlat
loope
sub
(bad)
inc
cmp
jno
push
js
dec
xor
ret
lods
(bad)
in
mov
(bad)
(bad)
call
les
jg
push
aam
mov
(bad)
addr16
cmp
dec
int3
and
(bad)
jmp
push
loopne
xchg
cwde
les
shl
and
in
stc
outs
(bad)
call
inc
or
retf
sbb
rol
in
xchg
lahf
cmp
(bad)
call
adc
mov
mov
cwde
mov
je
pop
mov
iret
or
je
shr
(bad)
jecxz
jmp
jmp
inc
dec
and
add
ficom
push
push
xchg
push
and
(bad)
call
test
push
fsin
or
xchg
xchg
adc
mov
mov
pop
lock
shl
out
ss
dec
out
jecxz
dec
cmp
idiv
retf
(bad)
(bad)
jg
push
mov
loop
sub
fstp
mov
mov
out
sub
cmp
ss
in
ins
jns
jno
(bad)
or
stos
cmp
jmp
scas
push
cmp
mov
aaa
int3
jo
jge
pop
imul
fidiv
mov
outs
xchg
(bad)
adc
or
(bad)
pop
daa
call
pop
rol
cdq
xor
dec
xchg
leave
mov
fadd
out
pusha
jbe
outs
push
and
(bad)
(bad)
call
(bad)
push
das
xlat
es
movs
xchg
push
push
xchg
bound
sub
and
pop
(bad)
(bad)
(bad)
call
push
scas
jbe
mov
xchg
out
call
push
pop
es
(bad)
(bad)
cmp
fadd
sub
lock
mov
push
sbb
(bad)
jmp
lds
dec
daa
inc
jg
push
gs
(bad)
(bad)
(bad)
fisttp
jno
mov
ins
push
jne
test
mov
sbb
pop
in
pop
cld
(bad)
dec
pop
mov
ins
and
clc
jle
sub
icebp
mov
out
std
scas
inc
out
clc
(bad)
jmp
movs
cli
xor
aam
jns
adc
cmps
aam
cmp
add
(bad)
(bad)
jmp
(bad)
aad
je
inc
in
mov
mov
(bad)
loopne
jae
inc
cmp
dec
(bad)
(bad)
jmp
cli
mov
cli
stos
and
lods
mov
push
inc
or
add
jg
(bad)
sti
dec
adc
mov
xchg
cmp
lock
adc
or
xchg
(bad)
(bad)
inc
cmp
hlt
icebp
pop
cld
sbb
dec
mov
and
add
fcomp
add
sar
(bad)
call
repnz
jnp
push
retf
sbb
ret
repnz
mov
push
(bad)
sti
(bad)
(bad)
(bad)
jmp
jle
pop
loopne
jae
data16
shl
repz
loopne
aaa
shl
xchg
inc
push
lods
mov
cli
jg
(bad)
stos
leave
adc
mov
outs
sbb
push
fdiv
and
ins
jg
cmp
mov
fbld
ds
cli
out
jmp
arpl
sub
int
call
dec
in
test
pop
inc
leave
push
in
mov
arpl
cmp
push
sbb
mov
xchg
lock
cmps
mov
in
jns
push
outs
loope
sbb
je
xchg
add
std
jmp
xor
jo
loopne
pop
es
push
dec
dec
(bad)
cmp
inc
cmp
scas
mov
(bad)
(bad)
(bad)
inc
and
push
hlt
xlat
and
arpl
or
cdq
movs
rcl
add
jmp
(bad)
addr16
pop
add
jbe
lahf
jp
fcomip
cmp
xchg
repnz
popa
xchg
ds
mov
cdq
clc
outs
fistp
dec
pop
mov
(bad)
(bad)
(bad)
(bad)
je
jge
push
mov
mov
mov
aam
(bad)
stos
inc
jg
jns
(bad)
(bad)
(bad)
push
ror
hlt
add
fidiv
ins
cmp
inc
pop
dec
ror
cmps
add
pop
xlat
mov
inc
rcl
(bad)
(bad)
(bad)
inc
xchg
xlat
mov
cld
xchg
mov
inc
pop
xor
or
bound
(bad)
(bad)
jp
loopne
and
ins
xchg
add
xor
int3
int3
fsubr
sbb
into
pop
add
mov
adc
cmp
(bad)
cwde
add
xor
cmp
adc
clc
dec
call
jmp
mov
int
xor
(bad)
fisubr
cmp
cwde
outs
rcl
popf
(bad)
hlt
sahf
loope
(bad)
cmps
dec
(bad)
(bad)
fbld
sub
repnz
adc
sbb
int3
cdq
outs
mov
pop
and
xchg
jbe
clc
jbe
outs
movs
cmp
xlat
(bad)
(bad)
jmp
imul
push
xchg
das
or
lahf
jg
(bad)
(bad)
jmp
ja
push
lahf
arpl
mov
loopne
xchg
and
adc
movs
test
test
(bad)
call
adc
add
push
mul
and
mov
mov
jne
mov
(bad)
out
mov
jbe
dec
data16
jl
mov
cdq
bound
int3
mov
(bad)
jmp
in
call
jae
cmp
cmp
aaa
xchg
mov
(bad)
(bad)
call
jecxz
iret
push
sub
inc
cmp
jno
mov
mov
xchg
ja
sub
adc
jmp
clc
lds
stos
sub
(bad)
punpckldq
ins
pop
adc
sub
sar
mov
pusha
mov
std
mov
jae
add
jbe
(bad)
(bad)
jmp
cld
inc
xchg
in
sub
or
dec
mov
popf
or
mov
dec
mov
sub
sub
std
cmps
aas
push
or
loop
inc
pushf
inc
(bad)
(bad)
(bad)
inc
(bad)
imul
ret
xchg
push
sbb
int3
mov
xchg
jl
aaa
cmp
(bad)
clc
scas
push
jo
push
xor
mul
sub
popa
cdq
sti
fdivr
(bad)
(bad)
call
les
cwde
cld
loop
pusha
pop
shr
sbb
jae
(bad)
dec
(bad)
(bad)
(bad)
jmp
inc
cld
lods
mov
adc
into
iret
mov
pop
sub
ror
inc
xor
or
(bad)
(bad)
push
stos
test
xor
icebp
cmp
dec
test
out
adc
mov
mov
jmp
ins
loopne
mov
mov
iret
scas
test
cmps
jmp
cld
fwait
xchg
gs
push
repnz
iret
mov
outs
(bad)
(bad)
(bad)
push
push
fdivr
aam
stos
stc
das
cli
sar
push
adc
psrld
(bad)
(bad)
(bad)
jmp
stc
jp
mov
push
mov
xchg
jle
sbb
aaa
lahf
call
xchg
lock
ror
sar
loopne
mov
cmp
mov
jg
retw
pop
mov
leave
cmp
jp
loopne
jl
push
push
lds
jo
lea
(bad)
in
(bad)
(bad)
cld
scas
(bad)
sub
ds
int3
adc
stos
jbe
mov
cmp
scas
mov
mov
(bad)
jmp
out
retf
ror
cmps
rol
dec
xchg
mov
adc
cwde
xchg
adc
(bad)
(bad)
inc
add
mov
stos
lahf
pop
jle
sbb
pop
dec
sbb
out
(bad)
(bad)
(bad)
cmp
outs
pop
(bad)
(bad)
fucom
pop
sti
jno
jno
pop
sub
(bad)
sbb
adc
arpl
jb
(bad)
(bad)
(bad)
inc
xchg
les
jle
cmp
or
test
mov
mov
cs
jae
test
(bad)
jmp
lods
or
push
pop
xor
push
stc
cmp
push
pop
adc
xchg
lahf
pop
pop
nop
cmps
bound
add
jne
in
or
inc
jecxz
inc
(bad)
(bad)
(bad)
(bad)
jg
jecxz
dec
fdivr
sar
dec
jmp
cli
stc
mov
push
lods
test
cmp
inc
cmp
daa
cmp
mov
hlt
mov
sbb
retf
sub
cmp
out
add
adc
xchg
push
scas
cmp
(bad)
push
imul
mov
jmp
mov
setg
lods
dec
cmp
mov
sbb
(bad)
in
jo
xchg
pop
test
mov
je
sti
daa
in
xchg
leave
add
sbb
mov
out
aas
xchg
sub
call
push
push
je
out
pop
push
add
(bad)
cld
push
jnp
cmp
xor
jno
ret
das
xchg
(bad)
(bad)
dec
stos
push
ja
gs
int
mov
cs
rcr
inc
js
pop
retf
pop
xchg
cmp
jmp
push
es
fisubr
stos
pop
out
call
inc
(bad)
pop
xor
add
(bad)
(bad)
jmp
mov
jbe
push
mov
mov
aas
xchg
push
(bad)
push
in
sbb
push
(bad)
(bad)
(bad)
jmp
cmp
jg
jge
ss
dec
cli
jl
pop
push
push
fadd
xchg
(bad)
(bad)
(bad)
(bad)
cmp
clc
arpl
stos
stc
cli
xchg
mov
xchg
jmp
sahf
or
push
mov
jg
popf
adc
jmp
jns
or
std
mov
das
xor
inc
jae
inc
pop
mov
jle
add
xchg
cmp
iret
xor
and
(bad)
(bad)
dec
adc
pop
adc
jo
jl
add
mov
jns
and
cmp
push
dec
pop
(bad)
dec
lock
loopne
push
mov
jb
neg
xchg
(bad)
jmp
clc
out
xchg
mov
test
rcl
jb
in
and
jmp
(bad)
(bad)
dec
pop
aam
js
add
rcr
push
test
shl
loop
jp
js
mov
sar
push
mov
xchg
ret
out
pushf
repz
sbb
fwait
(bad)
(bad)
(bad)
(bad)
jg
sbb
mul
inc
cmp
sub
pop
sbb
sbb
jb
pop
xchg
mov
imul
cmp
test
cs
jge
sti
pop
inc
bound
(bad)
dec
mov
sahf
gs
and
stc
xor
push
and
rol
mov
(bad)
(bad)
jmp
mov
fwait
inc
int
sar
adc
scas
call
xlat
outs
add
(bad)
iret
out
aas
retf
or
jno
cmps
(bad)
(bad)
jmp
lds
movs
imul
das
pop
adc
sbb
cli
cwde
cmp
mov
jg
mov
lods
or
ret
adc
idiv
(bad)
(bad)
(bad)
(bad)
cmp
mov
xor
jnp
sti
pop
add
cmps
jb
test
jne
mov
call
mov
add
push
push
jbe
icebp
arpl
xor
cmc
add
lea
inc
xor
sub
fxch
dec
jb
lods
dec
inc
mul
mov
inc
popf
in
mov
cmp
addr16
out
nop
add
pop
ja
lahf
push
(bad)
jmp
sub
ret
adc
rol
jmp
(bad)
(bad)
inc
cmc
mov
mov
sbb
pushf
push
popa
cmps
mov
daa
add
out
(bad)
(bad)
dec
inc
sbb
push
rol
push
popa
sar
aas
lahf
jno
jnp
popf
dec
mov
mov
and
cmp
fld
call
inc
stos
cmc
aad
sub
xchg
pop
je
mov
into
mov
cli
icebp
cmp
(bad)
inc
jle
in
out
mov
in
lods
retf
or
xchg
addr16
hlt
mov
adc
dec
dec
fidivr
outs
and
dec
cmp
sbb
or
xchg
xadd
test
bound
in
(bad)
call
scas
push
mov
jge
js
mov
push
mov
adc
(bad)
(bad)
mov
and
or
mov
ficomp
into
jle
ja
jno
(bad)
(bad)
(bad)
fsubr
pop
rcr
outs
ins
in
jp
jmp
dec
out
test
mov
(bad)
(bad)
inc
mov
int
iret
mov
sbb
daa
jnp
pop
aas
xchg
mov
lods
outs
ins
(bad)
(bad)
(bad)
in
adc
sub
fcmove
out
mov
test
inc
or
(bad)
(bad)
push
sti
into
mov
mov
das
or
call
xchg
sbb
add
clc
pop
(bad)
dec
shl
xchg
xchg
test
sahf
adc
pop
lods
adc
in
mov
inc
xchg
pop
mov
movs
in
fidiv
add
mov
loop
call
scas
mov
pop
mov
addr16
repz
test
cmps
inc
jbe
adc
mov
xor
cmps
(bad)
pusha
repz
jl
je
xor
or
rcr
in
(bad)
(bad)
call
add
rol
fadd
test
adc
mov
dec
fimul
stos
(bad)
scas
cli
scas
ficom
test
lahf
in
jns
popa
daa
popa
mov
nop
dec
outs
clc
(bad)
inc
cs
lods
aas
pop
jg
loop
and
dec
in
adc
inc
scas
inc
div
sub
mov
push
xor
xchg
mov
(bad)
(bad)
(bad)
jmp
push
cmc
inc
and
test
icebp
jns
imul
arpl
pop
and
ja
xor
iret
scas
mov
pop
sub
mov
adc
adc
lea
jle
jae
(bad)
(bad)
(bad)
jl
fist
neg
test
mov
out
stc
mov
test
or
clc
pushf
(bad)
or
sbb
pop
repnz
(bad)
jmp
mov
sti
xor
add
adc
sbb
add
push
popa
(bad)
xchg
cmp
inc
das
mov
dec
mov
shl
mov
in
shr
pop
test
inc
pop
lahf
or
fbld
jbe
lds
cmp
iret
adc
push
push
pop
fbstp
cli
(bad)
(bad)
call
fldcw
inc
inc
repz
dec
lock
jns
lahf
mov
(bad)
call
(bad)
(bad)
(bad)
out
sbb
rcr
ds
enter
jge
jns
call
icebp
cmp
lock
mov
(bad)
(bad)
jmp
test
movs
aaa
pop
mov
int
sbb
clc
xchg
inc
mov
mov
inc
add
cmp
xchg
in
ds
pop
and
sub
nop
icebp
aaa
pop
jg
sub
pop
pop
(bad)
jmp
shr
fwait
dec
mov
pop
call
aad
arpl
(bad)
(bad)
jmp
retf
mov
mov
movs
iret
xchg
sti
inc
out
out
call
mov
(bad)
jmp
in
inc
xchg
fdiv
out
mov
push
leave
push
sub
in
mov
(bad)
(bad)
jmp
xor
ins
xor
jne
inc
loop
mov
sub
inc
jno
push
jle
retf
add
(bad)
(bad)
(bad)
in
scas
movs
dec
call
es
retf
or
pop
cmp
fcomp
add
sahf
mov
(bad)
in
mov
jge
scas
rcl
or
fldcw
mov
repnz
(bad)
mov
mov
cmc
scas
mov
retf
jp
rsm
xchg
push
(bad)
pop
adc
(bad)
(bad)
fidivr
xchg
jge
cmp
mov
out
jge
push
mov
mov
jno
in
push
jg
adc
inc
mov
(bad)
(bad)
mov
inc
fisttp
bound
ret
mov
out
mov
shl
add
push
dec
(bad)
call
xor
imul
das
in
push
(bad)
(bad)
(bad)
(bad)
cmp
jno
scas
std
dec
iret
cmp
dec
sbb
into
call
mov
dec
scas
in
dec
mov
fstp
lods
hlt
dec
sbb
mov
aaa
cld
and
adc
jno
add
adc
test
gs
(bad)
jg
ds
popf
adc
or
cmp
retf
enter
sbb
out
data16
push
or
xchg
jmp
icebp
xlat
pop
jo
jnp
nop
xor
js
jmp
(bad)
(bad)
(bad)
jmp
push
mov
out
imul
adc
out
sbb
dec
inc
(bad)
jae
lea
std
(bad)
jmp
nop
fwait
aas
es
xchg
rol
mov
dec
ds
sbb
mov
(bad)
(bad)
push
jmp
mov
fdivrp
mov
cld
leave
mov
leave
pop
test
pusha
das
shl
add
mov
jbe
ret
ss
(bad)
(bad)
(bad)
jg
into
adc
mov
xor
mov
retf
fmul
xchg
(bad)
(bad)
(bad)
(bad)
jmp
lahf
xchg
hlt
jae
out
mov
pusha
mov
dec
xchg
sbb
into
add
int
jecxz
pop
mov
in
adc
push
xchg
std
std
cmp
call
jl
js
pop
dec
mov
and
scas
das
repnz
cmp
jg
dec
push
xchg
not
fisttp
jl
mov
jecxz
cld
(bad)
call
hlt
leave
jp
repz
cmp
mov
cmps
jmp
push
outs
mov
call
out
ds
dec
fisub
call
(bad)
mov
cmp
pop
xadd
(bad)
jg
pop
mov
mov
mov
loop
ins
imul
(bad)
cmp
ret
in
das
leave
sar
xlat
pop
in
fcom
mov
imul
push
add
arpl
(bad)
fwait
jmp
jmp
scas
icebp
repnz
out
pop
jl
(bad)
(bad)
(bad)
out
out
push
mov
mov
retfw
rcl
mov
stos
sbb
add
call
ret
add
fwait
sbb
pop
jmp
mov
repz
xor
mov
pop
leave
inc
dec
pop
push
cmp
inc
fadd
ss
fdivr
add
leave
stos
jecxz
or
mul
popf
loope
fld
mov
(bad)
push
test
cmp
das
jo
lea
(bad)
(bad)
jg
out
mov
or
cmp
scas
mov
hlt
push
out
jo
adc
and
shr
mov
fld
clc
push
outs
dec
(bad)
stos
inc
or
sbb
cmp
das
dec
mov
pop
hlt
inc
nop
stc
in
jmp
arpl
pop
mov
dec
loopne
pop
push
(bad)
jmp
cli
add
popa
jb
dec
repnz
gs
sub
sti
fwait
enter
xchg
test
outs
test
cmps
and
lock
test
aad
pop
xchg
cmp
inc
jae
adc
xor
mov
std
sub
cmp
cmc
stc
das
jb
sahf
rol
mov
sub
adc
jmp
fsub
arpl
ss
pop
mov
dec
xor
(bad)
call
sub
push
fstp
mov
fucomip
(bad)
push
jecxz
cmc
cmp
dec
in
push
ins
dec
adc
int3
cmp
xchg
xlat
dec
pop
jecxz
(bad)
call
call
add
cwde
loope
ret
and
retf
pusha
test
ins
shr
fisttp
movs
jmp
jl
stos
test
add
jmp
mov
mov
xchg
fldcw
cwde
add
hlt
(bad)
and
(bad)
(bad)
(bad)
inc
pop
add
nop
in
push
jno
add
dec
sbb
inc
fldcw
cld
loopne
push
(bad)
inc
jbe
jns
xchg
lahf
add
movs
add
mul
pop
imul
(bad)
(bad)
jmp
adc
cmps
out
push
outs
push
and
sbb
loope
mov
inc
retf
into
fs
sbb
xchg
jge
cmp
jmp
cld
sub
(bad)
out
call
call
or
xor
lock
(bad)
jle
clc
call
into
push
in
scas
leave
inc
data16
cmc
(bad)
(bad)
jmp
add
sub
enter
xchg
mov
std
pop
les
xchg
test
mov
add
push
test
mov
les
cld
aaa
jl
sti
int
popf
rol
adc
shr
sub
jb
pop
jnp
shl
call
and
and
or
das
or
inc
cmp
xor
sti
int
lods
lods
sub
xchg
dec
std
(bad)
fst
pusha
dec
sbb
es
into
cmp
and
adc
fdecstp
clc
mov
retf
push
push
(bad)
(bad)
(bad)
(bad)
fist
or
jns
ret
xchg
loope
test
in
retf
push
fst
lock
(bad)
(bad)
jmp
mov
mov
inc
push
mov
mov
xchg
jne
jle
iret
mov
sub
shr
lods
(bad)
(bad)
(bad)
push
jge
dec
or
cld
pop
cdq
scas
xchg
push
push
pop
lahf
out
shl
addr16
rcr
repz
(bad)
(bad)
(bad)
dec
popa
mov
add
mov
mov
xchg
scas
mov
das
xor
lea
sar
pop
std
retf
jb
in
mov
xchg
xchg
push
pop
loopne
ins
ret
fwait
cmc
pop
iret
fs
gs
sti
(bad)
ficom
jmp
movs
lods
outs
clc
stos
test
rcl
pop
push
jno
lods
out
adc
call
mov
push
popa
pop
ret
lds
retf
test
std
xor
pop
add
call
dec
daa
mov
aad
pop
add
jl
in
pop
stos
rcl
pop
call
dec
add
push
jg
(bad)
(bad)
out
or
mov
pop
xor
push
jmp
dec
jbe
movs
mov
jmp
push
dec
push
push
mov
popf
xor
pop
int3
cld
ja
pop
and
pop
push
pop
lds
outs
stc
jnp
fcomip
(bad)
call
jp
cwde
add
mov
jb
cdq
cmc
inc
push
mov
cmp
(bad)
(bad)
(bad)
inc
cmps
sbb
into
pop
cwde
fadd
cmp
shl
sbb
stos
arpl
sub
(bad)
(bad)
call
jae
xchg
and
fwait
pop
out
xchg
out
dec
xlat
mov
cmc
cmp
pop
(bad)
(bad)
(bad)
(bad)
ds
ret
and
cld
xor
outs
jmp
xchg
dec
jae
jno
shl
(bad)
(bad)
(bad)
jmp
mov
xchg
out
(bad)
cmp
jbe
cmp
std
lods
into
dec
add
gs
xor
ja
retf
fs
shr
pop
xchg
jne
movs
ret
in
(bad)
(bad)
(bad)
call
push
aaa
retf
mov
call
sbb
and
or
(bad)
(bad)
push
sar
push
fstp
sbb
push
mov
mov
pop
test
mov
or
and
(bad)
(bad)
frndint
push
in
fwait
ret
jle
or
xchg
hlt
jbe
sbb
inc
mov
cld
inc
jb
in
(bad)
(bad)
inc
fwait
xor
neg
cli
test
xchg
cdq
fcomp
ja
mov
inc
cmp
jmp
mov
sbb
sbb
mov
(bad)
(bad)
jmp
jecxz
push
arpl
push
push
mov
push
mov
mov
adc
inc
ja
ins
push
(bad)
(bad)
cmc
popa
gs
retf
stos
sub
(bad)
inc
lds
sub
and
push
enter
scas
mov
or
or
not
push
or
inc
iret
push
(bad)
push
jg
(bad)
call
int
in
xchg
dec
adc
push
mov
fistp
out
test
jmp
outs
(bad)
(bad)
jmp
pop
adc
inc
mov
sub
or
cmc
jp
repnz
inc
fild
add
retf
idiv
mov
cdq
xor
test
or
cmp
adc
cld
pop
lock
inc
mov
xchg
pop
pusha
retf
push
fisttp
inc
movs
(bad)
mov
idiv
ja
clc
mov
stos
jo
sbb
pop
lea
adc
(bad)
mov
push
mov
pop
pop
mov
jle
fdiv
adc
jecxz
jmp
sahf
mov
test
xor
(bad)
mov
xor
push
inc
imul
and
and
retf
and
jg
mov
(bad)
dec
mov
sbb
mov
rol
mov
mov
jl
pop
cld
jmp
movs
inc
movs
fimul
lea
pop
test
xor
enter
(bad)
(bad)
(bad)
(bad)
mov
push
sbb
add
xor
in
mov
push
mul
(bad)
(bad)
jmp
jle
add
stc
or
adc
popa
push
and
pop
arpl
sub
and
sahf
inc
(bad)
(bad)
call
and
and
jp
test
push
lock
addr16
loop
movs
(bad)
(bad)
(bad)
dec
pop
repz
xor
pop
scas
sbb
ret
(bad)
adc
pop
call
and
or
pop
cmp
repnz
jmp
xchg
cmp
out
xchg
jge
fisttp
(bad)
(bad)
(bad)
call
or
fs
dec
dec
fldenv
push
push
into
push
mov
push
jle
mov
enter
and
pushf
cmp
(bad)
call
sub
in
arpl
mov
movs
adc
jnp
and
hlt
in
push
mov
push
jmp
stos
pop
bound
mov
xor
mov
lods
iret
cli
jle
(bad)
(bad)
(bad)
push
popf
gs
add
scas
sub
fwait
dec
jp
sti
mov
mov
iret
push
cdq
push
adc
retf
(bad)
(bad)
(bad)
push
push
popa
ret
and
in
scas
sub
pop
mov
xor
inc
mov
sub
inc
inc
adc
mov
xchg
jbe
(bad)
(bad)
(bad)
fisttp
adc
add
cmp
jb
lods
in
loope
in
dec
dec
test
(bad)
mov
hlt
push
push
mov
not
sub
xchg
cli
and
fs
(bad)
mov
push
out
push
inc
xchg
cmp
cmp
jg
mov
xor
(bad)
(bad)
call
jl
pop
cld
outs
mov
adc
test
jo
push
sub
cmp
(bad)
(bad)
(bad)
fist
sbb
scas
cwde
jne
call
sbb
jb
or
cmp
cmp
(bad)
(bad)
(bad)
(bad)
sti
adc
hlt
dec
aam
inc
lea
mov
jmp
mov
test
(bad)
(bad)
(bad)
dec
in
push
or
sub
pop
jmp
stc
cld
adc
jmp
mov
leave
nop
aad
(bad)
(bad)
(bad)
(bad)
fisubr
dec
and
ret
push
out
(bad)
push
cli
ins
clc
scas
lds
mov
(bad)
(bad)
(bad)
call
or
jnp
sbb
jg
dec
fsubr
mov
scas
int
push
cld
push
scas
aam
lahf
sub
xchg
sbb
aas
int3
sbb
imul
cmp
xor
mov
and
(bad)
(bad)
jg
inc
xchg
lods
jae
dec
and
(bad)
xor
jmp
sar
fstp
(bad)
jmp
or
pop
cmp
jns
frstor
push
ins
rol
mov
clc
(bad)
(bad)
inc
push
retf
fcomi
push
or
in
xor
push
mov
xchg
cmp
jns
(bad)
inc
clc
ds
xor
add
sub
sub
adc
(bad)
call
or
loopne
(bad)
fsub
test
jns
aam
into
cmp
iret
fucom
(bad)
(bad)
(bad)
call
jmp
outs
xchg
and
push
dec
retf
mov
dec
xor
xor
(bad)
(bad)
mov
nop
ds
or
mov
or
adc
lahf
scas
adc
aam
inc
and
sub
and
cli
dec
(bad)
fist
push
sar
adc
mov
jmp
and
and
and
push
inc
lods
jo
mov
(bad)
fwait
pop
div
cmp
lods
mul
mov
(bad)
(bad)
fbstp
xlat
stc
adc
(bad)
mov
jne
out
mov
psrld
aaa
jl
and
je
add
popa
mov
lds
cli
(bad)
call
cmp
sub
mov
iret
fs
in
sub
jecxz
es
out
sti
sub
(bad)
and
fidiv
push
test
mov
popa
(bad)
(bad)
dec
push
cmps
jne
or
push
or
mov
add
stc
cs
(bad)
(bad)
(bad)
dec
retf
cmp
pop
jb
call
call
inc
or
(bad)
mov
vcomiss
push
outs
xchg
cmp
add
cmp
jmp
cmp
add
pop
ins
jb
lods
pop
sbb
push
xchg
jle
push
iret
and
fcomip
adc
cli
in
mov
lods
mov
jno
mov
gs
push
sbb
call
(bad)
(bad)
(bad)
call
call
mov
iret
outs
outs
push
aam
jbe
xor
mov
loop
pusha
cmps
shl
push
xchg
lods
cld
sbb
addr16
adc
mov
cmp
mov
mov
push
scas
mov
add
(bad)
(bad)
(bad)
push
in
out
mov
pop
mov
and
or
sub
push
push
fst
add
call
pop
mov
test
adc
shl
std
and
add
cmps
test
(bad)
call
push
shl
inc
rcl
ror
add
call
fbstp
inc
or
pop
ja
icebp
jns
repnz
cdq
scas
mov
je
push
cli
(bad)
(bad)
jg
cmovne
add
mov
mov
sbb
in
test
push
dec
out
sbb
(bad)
(bad)
out
push
call
mov
and
jg
dec
mov
sub
xchg
xor
std
les
ins
cmp
movs
rcl
sub
shl
mov
push
loope
pop
(bad)
(bad)
(bad)
call
and
or
fprem
and
and
pop
imul
mov
pop
movs
(bad)
fcomip
push
and
pushf
loop
fs
mov
and
jmp
es
mov
mov
test
fwait
sti
enter
adc
dec
mov
rol
lods
(bad)
imul
test
clc
(bad)
(bad)
call
jmp
stc
and
or
or
lea
cmp
xor
repnz
aam
stos
mov
ins
jl
mov
push
idiv
or
lahf
sub
enter
fcomp
pop
enter
clc
lahf
dec
sbb
(bad)
fwait
cmp
scas
call
jmp
or
mov
(bad)
(bad)
popf
and
repnz
rcl
call
adc
jne
sub
jne
(bad)
(bad)
inc
mov
dec
pop
icebp
mov
xchg
jge
(bad)
(bad)
(bad)
jg
fs
or
mov
sbb
adc
jns
cmp
arpl
dec
aad
(bad)
(bad)
call
adc
pushf
popa
push
scas
cmp
push
mov
xor
xchg
rcr
(bad)
call
pusha
xlat
pop
out
and
adc
cmc
repz
sahf
inc
pop
mov
dec
push
sti
aaa
cld
mov
jge
movs
aas
aas
rcl
fbld
xchg
xchg
xchg
stos
loopne
jg
pushf
or
cmp
push
jecxz
aam
fs
(bad)
mov
sbb
jae
cmp
enter
js
cmp
(bad)
(bad)
(bad)
call
data16
retf
push
inc
jge
pop
mov
scas
js
in
stc
aam
test
loop
jecxz
ss
(bad)
dec
xchg
or
mov
or
sub
lods
adc
cmp
(bad)
or
(bad)
jmp
and
mov
dec
test
mov
js
fs
movs
xchg
(bad)
(bad)
(bad)
call
adc
inc
jbe
(bad)
es
bswap
sub
iret
and
pop
repnz
clc
pusha
sub
aaa
mov
add
add
push
jg
or
(bad)
jmp
push
ss
xchg
cmp
add
mov
mov
xor
ins
fdivr
(bad)
jmp
xchg
(bad)
jb
loope
mov
mov
test
inc
test
inc
fcmove
outs
sbb
xlat
xchg
leave
(bad)
jecxz
(bad)
push
call
lahf
jle
ret
not
fadd
out
not
and
hlt
adc
popf
and
mov
fdiv
push
loop
adc
aad
jmp
(bad)
fcomip
(bad)
sti
out
xchg
in
mov
adc
pop
xchg
jecxz
movs
sti
lds
lahf
dec
dec
inc
or
mov
adc
int
std
adc
jge
jnp
pop
mov
xchg
xchg
aas
sbb
sbb
cmps
inc
push
sbb
das
jg
jg
xchg
test
fistp
or
shl
int3
adc
mov
pop
fsub
inc
pop
xchg
leave
(bad)
jmp
pop
fbstp
mov
or
add
cmp
(bad)
call
int3
inc
jmp
or
(bad)
(bad)
(bad)
cmp
test
jmp
pop
or
loope
lods
adc
cli
push
add
(bad)
(bad)
(bad)
call
sbb
mov
sub
ins
pop
out
push
and
pop
(bad)
push
(bad)
(bad)
(bad)
(bad)
mov
or
test
ins
in
(bad)
mov
retf
cld
ss
sub
(bad)
out
(bad)
(bad)
dec
or
in
xchg
inc
test
mov
mov
mov
in
xchg
cmp
loop
mov
jmp
adc
addr16
jle
fisttp
pop
fstp
xchg
pop
int3
push
enter
out
(bad)
fisttp
int3
adc
xlat
imul
fs
adc
dec
icebp
mov
pop
xor
int
(bad)
(bad)
(bad)
(bad)
dec
ja
jo
adc
sbb
sbb
popf
push
pop
stc
mov
mov
(bad)
(bad)
dec
adc
mul
outs
pop
jp
add
mov
scas
test
jg
inc
pop
cld
cmps
gs
(bad)
call
fsub
xor
or
out
test
ret
xlat
jge
pop
cmp
je
dec
fld
(bad)
(bad)
(bad)
dec
fadd
jmp
(bad)
fucom
adc
sub
nop
out
cmp
cld
mov
pushf
(bad)
(bad)
(bad)
call
scas
(bad)
jecxz
ja
ror
das
inc
add
jae
repnz
fistp
(bad)
(bad)
(bad)
push
int3
or
add
es
js
sbb
sub
cmp
push
les
sub
mov
(bad)
(bad)
out
sahf
or
std
test
sub
xchg
sbb
mov
sub
push
icebp
push
or
mov
or
or
add
cs
cli
call
xor
(bad)
es
(bad)
(bad)
(bad)
push
test
fdiv
or
mov
mov
xchg
add
jmp
shl
fdivr
(bad)
(bad)
jmp
jae
mov
js
dec
ja
in
fucomi
sub
mov
sub
rcr
dec
mov
(bad)
(bad)
(bad)
in
cld
mov
mov
pop
sbb
shr
mov
pushf
adc
int3
in
cmp
xor
and
mov
(bad)
(bad)
(bad)
(bad)
jns
in
outs
fs
in
shl
cmp
js
out
adc
loopne
and
sub
into
(bad)
(bad)
(bad)
jmp
fcomip
ins
xchg
mov
pop
push
cmp
popf
inc
adc
dec
pop
lods
jnp
inc
addr16
xor
out
lods
scas
cli
aaa
push
fnstenv
jo
mov
in
push
mov
(bad)
jmp
mov
scas
ins
stc
js
xor
mov
xor
xor
mov
repz
jo
push
fdivr
sub
mov
push
jle
stc
dec
push
mov
lahf
nop
icebp
das
adc
inc
inc
mov
cld
mov
pop
fnstsw
outs
jl
push
loope
(bad)
(bad)
inc
or
cmp
jmp
xor
ja
push
mov
in
jecxz
xor
aaa
cld
(bad)
aas
neg
or
mov
push
sti
and
mov
xchg
repz
sti
adc
and
dec
loop
fmul
inc
inc
aas
and
jle
mov
xchg
push
(bad)
(bad)
(bad)
jmp
test
mov
adc
fs
and
daa
icebp
es
sub
(bad)
(bad)
jmp
test
xchg
sbb
jbe
popf
es
and
xchg
jl
jl
mov
and
push
leave
adc
dec
add
or
popa
ss
dec
in
iret
daa
add
add
popf
xor
es
cwde
mov
pop
test
xor
test
and
adc
std
rcl
(bad)
(bad)
jmp
hlt
mov
dec
jecxz
retf
and
adc
push
mov
push
cdq
loop
or
dec
xor
xchg
sub
in
adc
and
outs
scas
xchg
arpl
dec
test
cmp
(bad)
mov
jmp
ret
loope
mov
pop
nop
mov
sub
sbb
(bad)
(bad)
jmp
lahf
inc
adc
jb
pop
jl
push
jne
fcomp
ins
sbb
stos
xchg
clc
aaa
lahf
loopne
sub
xor
pop
jl
push
call
jmp
gs
stc
mov
repz
cld
cmovl
pushf
xchg
sub
shr
aad
dec
add
and
dec
jmp
sbb
xchg
repnz
inc
lds
(bad)
inc
cld
lock
push
inc
aas
test
mov
popa
aas
dec
adc
cs
sub
cli
(bad)
(bad)
jmp
das
fld
imul
sub
xor
(bad)
jne
aas
jecxz
aad
mov
push
cdq
xor
das
loop
adc
mov
(bad)
(bad)
mov
mov
dec
in
mov
test
iret
xchg
addr16
je
in
cdq
mov
call
test
je
sbb
sbb
fstp
inc
frstor
ds
mov
(bad)
call
pop
js
sub
popf
add
les
sahf
pusha
aad
jmp
movs
dec
pop
push
lods
sbb
call
test
adc
sbb
cmp
xchg
mov
(bad)
(bad)
jmp
cmps
jmp
test
popw
lods
jmp
cld
inc
popa
fsub
jno
(bad)
jmp
dec
(bad)
(bad)
arpl
sbb
adc
xchg
mov
enter
(bad)
push
cdq
nop
int
mov
cmp
popf
iret
dec
dec
out
movs
hlt
sbb
fistp
(bad)
(bad)
(bad)
call
popf
xor
fucompp
int
in
hlt
(bad)
mov
xchg
mov
lahf
push
push
push
fnsave
lods
pop
(bad)
(bad)
(bad)
push
lds
pop
mov
push
xor
push
(bad)
mov
repnz
aaa
cdq
cli
sub
dec
push
push
dec
movs
pop
cmp
and
dec
push
mov
ror
cdq
mov
mov
nop
outs
int
xchg
inc
fdiv
jnp
mov
or
mov
or
clc
mov
jmp
xchg
push
enter
jno
mov
loop
(bad)
call
sub
cmps
ret
(bad)
jle
test
push
and
(bad)
(bad)
(bad)
(bad)
out
pop
fwait
pop
cld
mov
iret
pop
xchg
cmp
push
mov
std
jmp
in
lock
(bad)
jg
iret
stc
iret
(bad)
cmp
fisubr
xlat
cwde
xchg
mov
pusha
(bad)
out
clc
fistp
pop
stc
jg
retf
(bad)
mov
sar
mov
outs
test
mov
push
fldln2
aas
pop
repnz
call
jmp
mov
out
(bad)
(bad)
jmp
repnz
int
fwait
(bad)
mov
push
lea
out
jmp
mov
aam
ja
mov
jmp
call
mov
cmp
sti
sahf
in
lahf
mov
clc
in
cmp
retf
imul
(bad)
(bad)
(bad)
(bad)
inc
jg
dec
pop
aad
loop
jno
mov
sti
outs
cmp
ja
jae
jb
jmp
mov
dec
call
fnstsw
sti
scas
lahf
scas
inc
out
addr16
inc
int3
or
or
(bad)
(bad)
call
(bad)
mov
ss
add
and
dec
pop
sub
call
xchg
jp
movs
shr
(bad)
push
inc
push
pop
ficom
ins
or
cmp
mov
pop
or
les
fnsave
or
repz
push
pop
xchg
outs
clc
out
mov
inc
fsub
and
outs
je
pusha
(bad)
cwde
adc
cmp
ins
adc
dec
cmps
dec
nop
cdq
(bad)
(bad)
(bad)
inc
aaa
inc
or
data16
adc
nop
adc
jae
xor
stos
in
(bad)
(bad)
(bad)
dec
and
test
fbld
aad
push
ret
inc
pop
push
ss
add
xor
loop
sub
and
and
mov
mov
inc
mov
in
(bad)
(bad)
(bad)
jmp
cmps
fnstenv
sbb
sti
sbb
imul
fwait
mov
call
(bad)
(bad)
call
xor
adc
dec
imul
inc
test
ret
sub
loopne
in
(bad)
(bad)
jg
xor
push
adc
add
popa
push
or
int3
pop
inc
mov
(bad)
jmp
fs
ret
cmps
(bad)
fld
cmp
test
ss
xchg
dec
mov
(bad)
(bad)
(bad)
push
adc
or
adc
or
call
sahf
or
call
arpl
mov
fnstenv
jmp
pandn
pop
jg
lock
cmps
mov
retf
fst
call
mov
cld
jmp
int
pop
xlat
sub
cwde
jbe
(bad)
(bad)
(bad)
inc
jmp
call
lods
push
(bad)
mov
mov
cdq
aam
xchg
fdiv
jmp
mov
push
scas
mov
pop
shl
cmc
jbe
pop
fnstsw
(bad)
(bad)
(bad)
call
and
mov
jmp
pop
rol
shr
cld
jae
pop
pop
jecxz
loope
dec
dec
push
cwde
and
or
xchg
ins
sub
mov
(bad)
mov
(bad)
(bad)
(bad)
call
leave
pushf
jb
mov
cmps
je
out
jmp
lea
sub
add
(bad)
clc
inc
loope
pop
js
loopne
and
dec
xlat
jl
jbe
or
aad
ret
test
sar
sbb
mov
adc
out
xchg
mov
nop
and
xor
pop
pop
xor
ficom
jae
(bad)
fild
adc
sbb
cmp
jp
or
cmps
in
mov
cli
test
xor
mov
iret
push
sub
pop
shl
inc
mov
mov
jb
push
cs
mov
cmps
cmp
test
adc
(bad)
mov
dec
or
je
and
dec
test
je
mov
out
or
push
pushf
(bad)
(bad)
(bad)
jmp
sahf
movs
pop
xor
sub
push
add
sbb
sub
into
(bad)
call
outs
out
pop
adc
dec
ror
and
push
push
in
mov
inc
adc
test
(bad)
(bad)
(bad)
call
mov
(bad)
(bad)
xor
imul
and
movs
mov
mov
and
(bad)
(bad)
(bad)
call
out
lahf
or
popf
xchg
repz
jbe
int
xchg
lds
add
cmp
(bad)
(bad)
inc
push
sbb
cmp
fwait
jbe
xchg
mov
mov
pop
or
cmps
mov
adc
pop
loopne
inc
mov
bnd
sub
jp
fcos
(bad)
(bad)
call
movs
into
enter
cmp
movups
pushf
push
maskmovq
test
adc
mov
in
jmp
bound
mov
sub
enter
ins
sbb
(bad)
push
adc
nop
ins
sub
add
shr
jp
add
push
inc
jl
and
(bad)
(bad)
call
and
xor
pop
add
test
sbb
arpl
push
xor
(bad)
(bad)
push
fs
jl
jns
push
mov
sbb
stos
repz
test
fstp
call
inc
mov
mov
xor
xor
repnz
fstp
mov
hlt
(bad)
call
mov
das
mov
cmp
ins
push
std
lea
jge
mov
and
sbb
(bad)
jmp
or
dec
pop
into
push
lahf
outs
lea
ja
mov
lea
leave
(bad)
(bad)
(bad)
push
push
lock
sub
popa
dec
fs
push
lea
xor
mov
mov
idiv
(bad)
push
(bad)
rcl
enter
mov
cld
pop
push
adc
enter
xor
(bad)
call
sti
jnp
loope
rol
call
cmp
ret
xor
(bad)
(bad)
or
fidiv
xor
sbb
and
dec
pop
fcomp
ret
xchg
inc
ret
mov
cvtps2pd
mov
jmp
mov
or
push
pop
xor
gs
lea
mov
fimul
cmp
call
jp
mov
push
add
push
out
cmp
(bad)
call
cld
jg
mov
or
test
pop
add
xchg
loope
bound
pop
in
jbe
lock
outs
clc
push
ja
movs
stos
inc
xchg
cdq
aad
dec
int3
ss
mov
or
adc
sbb
cs
test
std
mov
push
test
push
inc
push
fisttp
adc
inc
stos
and
or
scas
test
stos
fcom
aad
pop
int3
mov
xchg
(bad)
(bad)
(bad)
dec
rcl
int
sbb
sub
xchg
inc
adc
push
and
retf
xchg
popf
xor
mov
imul
aam
jle
test
inc
call
outs
xor
push
(bad)
(bad)
(bad)
push
mov
mov
inc
pushf
adc
addr16
and
arpl
mov
add
pop
xchg
test
(bad)
(bad)
(bad)
jmp
rcr
jge
jnp
mov
in
mov
jns
addr16
pushf
cmp
test
xchg
mov
daa
push
(bad)
(bad)
push
mov
ss
xor
sub
(bad)
(bad)
(bad)
jg
mov
push
add
cmp
scas
push
pop
mov
pop
xchg
lods
fldcw
push
add
jmp
jns
popf
outs
inc
ja
pop
out
int
cli
mov
add
std
(bad)
dec
fs
bound
add
xchg
xor
cmp
or
inc
pushf
loop
(bad)
jmp
push
nop
leave
frstor
arpl
jnp
pop
sub
sbb
and
mov
cmp
jp
js
sub
outs
(bad)
(bad)
(bad)
jmp
bound
mov
scas
lea
mov
sbb
aam
(bad)
pop
cs
(bad)
(bad)
(bad)
push
into
sbb
nop
inc
or
push
push
mov
jo
jmp
(bad)
(bad)
jns
push
pop
loope
in
mov
push
adc
out
daa
sbb
ret
jmp
push
dec
es
pop
das
adc
ror
js
(bad)
(bad)
call
jb
leave
mov
or
xchg
lds
and
movs
out
xchg
popf
leave
test
loope
pop
hlt
inc
xor
adc
pop
mov
js
adc
or
inc
or
(bad)
dec
es
add
jno
sub
shl
jnp
jecxz
(bad)
mov
push
les
mov
call
xor
or
dec
clc
(bad)
(bad)
call
fwait
push
adc
jle
and
aaa
inc
mov
daa
pop
inc
pusha
ins
inc
ds
(bad)
in
das
inc
xchg
pop
test
jp
not
jmp
inc
xchg
loop
cmp
cwde
inc
xor
(bad)
(bad)
jmp
aam
lods
sub
ins
dec
cld
add
add
xor
push
aam
push
mov
aas
loopne
outs
(bad)
(bad)
jmp
dec
imul
ret
test
mov
dec
loop
cmp
inc
mov
jmp
xor
repz
(bad)
jmp
data16
xchg
or
ja
aam
jmp
stc
sub
or
(bad)
(bad)
inc
xchg
or
std
mov
mov
scas
push
stos
movs
sub
dec
cwde
xchg
fld
(bad)
push
call
es
sub
test
sub
mov
push
add
bound
stc
cmp
jb
mov
sbb
push
and
push
or
or
cmps
push
mul
or
(bad)
(bad)
(bad)
call
les
mov
cmp
movs
out
and
arpl
call
inc
popf
and
or
(bad)
(bad)
jmp
mov
jmp
loop
mov
in
loopne
es
sbb
hlt
(bad)
jmp
repz
push
imul
cmc
lds
stc
(bad)
std
adc
xchg
hlt
adc
ins
retf
jno
add
inc
ja
test
mov
(bad)
jmp
call
jle
inc
dec
xlat
popf
mov
test
jmp
das
clc
pop
push
xor
sub
and
sub
push
ficom
test
xchg
cmp
(bad)
push
add
sub
mov
sti
pop
add
rcl
repz
and
push
int
(bad)
(bad)
(bad)
(bad)
fld
pop
jne
rcr
dec
jg
pop
aad
add
hlt
ret
jmp
clc
aam
popa
je
je
pushf
call
jg
xchg
add
popa
pop
or
mov
add
(bad)
(bad)
(bad)
inc
jmp
jle
mov
sub
jmp
push
push
sbb
hlt
pusha
test
xchg
xchg
(bad)
(bad)
jmp
arpl
sub
les
inc
in
adc
int3
sub
xor
fwait
dec
ficom
dec
popa
loopne
bound
adc
pop
loopne
cmp
jmp
dec
call
retf
fmul
jmp
sbb
int3
pop
mov
jbe
cmp
cmps
out
mov
adc
stc
les
in
sub
ror
xor
inc
add
cmc
or
in
sbb
mov
or
aam
rol
jb
test
(bad)
(bad)
(bad)
(bad)
jmp
fimul
xchg
dec
repz
lods
lds
push
popf
push
ja
pop
and
or
pushf
dec
dec
xor
out
clc
call
fldenv
jno
jle
sub
mov
cdq
jne
jmp
(bad)
sub
xchg
jbe
or
js
xor
pop
cmps
(bad)
push
sub
(bad)
push
les
mov
enter
(bad)
fnsave
xor
(bad)
loop
add
sbb
(bad)
(bad)
dec
sbb
out
push
adc
mov
shr
pop
add
neg
(bad)
(bad)
(bad)
jmp
cdq
mov
movs
mov
pop
jbe
repnz
es
inc
std
popf
lods
cmp
in
test
pop
jmp
(bad)
(bad)
cmp
fwait
js
dec
push
fadd
or
push
ds
mov
ins
jle
(bad)
dec
dec
hlt
jge
and
and
push
dec
jb
or
es
(bad)
(bad)
call
xor
push
cmp
(bad)
or
mov
inc
jo
fs
icebp
sub
jmp
aaa
add
(bad)
(bad)
(bad)
fist
push
and
cmp
ins
leave
loope
shl
dec
xchg
ss
es
xlat
sti
(bad)
jg
leave
dec
dec
add
sbb
rcl
inc
xchg
test
ds
jmp
(bad)
out
enter
and
sub
jecxz
bound
sub
dec
dec
(bad)
mov
and
mov
mov
les
adc
out
(bad)
push
sbb
leave
stos
nop
add
xchg
push
mov
mov
cs
push
test
in
push
push
jge
lods
stos
psllw
dec
jle
jmp
out
push
pusha
js
sub
cmp
push
popf
push
ins
mov
inc
pop
adc
(bad)
(bad)
jmp
cs
loope
(bad)
xchg
xchg
or
loop
push
and
lahf
repz
inc
and
pop
icebp
(bad)
jmp
jno
pop
call
jp
inc
out
arpl
xor
out
outs
call
add
(bad)
xor
mov
shl
push
mov
mov
sar
inc
and
push
aam
mov
inc
(bad)
pop
es
mov
jmp
xor
push
mov
inc
adc
adc
sub
xchg
rcr
cmps
sbb
mov
or
mov
or
call
(bad)
rcr
pushf
imul
cmps
xchg
and
cs
sub
(bad)
(bad)
(bad)
call
or
push
dec
retf
movs
call
sbb
cmc
mov
je
(bad)
xor
(bad)
(bad)
(bad)
call
lods
in
(bad)
sahf
(bad)
popa
out
cmc
push
mov
pop
jmp
pop
call
mov
xchg
sbb
xor
jecxz
mov
out
scas
and
(bad)
dec
addps
lods
sahf
pusha
nop
stc
xchg
inc
dec
sbb
adc
addr16
xor
(bad)
(bad)
jmp
sbb
cmp
nop
inc
add
scas
mov
xlat
xor
aam
fiadd
aaa
jge
add
fs
and
xor
add
xchg
or
xor
(bad)
(bad)
call
imul
mov
cmp
nop
or
mov
(bad)
(bad)
(bad)
jmp
push
shl
adc
or
scas
jge
(bad)
sub
(bad)
cmc
mov
mov
std
(bad)
call
mov
lds
pop
shl
mov
retf
push
xchg
inc
xor
ja
(bad)
(bad)
call
lock
pop
mov
out
rcl
aad
xor
adc
inc
add
mov
test
dec
lock
sahf
fs
and
in
jmp
pushf
push
mov
xchg
pop
pop
cmp
(bad)
call
adc
and
jae
xchg
nop
imul
or
jb
dec
js
stos
retf
int3
leave
cdq
jae
push
inc
dec
loop
rol
movs
cld
(bad)
(bad)
(bad)
call
push
push
and
or
in
and
clc
(bad)
in
cmp
sbb
jp
(bad)
call
outs
stos
push
int
addr16
sub
into
pop
jne
jecxz
inc
or
xchg
addr16
inc
data16
int3
test
ins
call
movs
xchg
cmc
xor
aam
jecxz
dec
jnp
dec
(bad)
mov
and
in
mov
sbb
push
pop
es
int3
imul
clc
add
(bad)
(bad)
(bad)
(bad)
mov
add
mov
adc
popf
(bad)
adc
(bad)
clc
cli
dec
data16
lock
add
ret
jnp
(bad)
(bad)
(bad)
inc
out
pushf
cmp
mov
movs
pop
rcr
mov
aam
ror
or
(bad)
call
rcl
cmp
popf
out
mov
push
inc
inc
cmp
and
cld
xor
test
outs
ja
(bad)
(bad)
(bad)
call
imul
int3
and
aas
jmp
fild
adc
(bad)
(bad)
dec
or
lahf
shl
and
mov
fild
ficom
sub
scas
fcomp
jno
jmp
xchg
inc
and
test
loopne
push
jg
fdivr
(bad)
cmp
adc
ins
rcr
jns
push
sub
sub
and
mov
(bad)
fcomip
call
xor
lea
adc
sbb
sub
fcomip
fild
test
dec
dec
lock
dec
test
xor
(bad)
(bad)
(bad)
(bad)
in
cs
bswap
out
in
jmp
sub
test
mov
sub
sub
jg
push
xor
jge
adc
cmp
sub
cld
sbb
dec
push
ja
(bad)
(bad)
dec
cmp
or
push
jle
inc
pop
arpl
pop
imul
xor
(bad)
call
icebp
xor
dec
aaa
cmps
jl
ret
in
fs
xchg
inc
in
les
pop
loopne
pop
pop
add
sub
addr16
add
ins
sub
fild
stc
mov
inc
xor
pop
pop
adc
lods
fnstenv
(bad)
call
jmp
push
push
loop
mov
cmp
hlt
sub
pop
add
mov
loop
push
not
scas
and
fwait
or
pop
push
(bad)
(bad)
jg
mov
loopne
aad
dec
adc
hlt
xchg
fnstenv
jae
js
adc
jg
mov
fninit
outs
xchg
jmp
jo
jno
outs
dec
sub
call
loopne
sbb
cmp
retf
stc
repnz
das
ins
xchg
mov
mov
dec
std
inc
sti
mov
lock
les
push
cmp
xor
enter
test
(bad)
(bad)
call
xor
mov
daa
dec
(bad)
push
test
add
(bad)
mov
sahf
or
push
movs
sub
jnp
adc
outs
outs
(bad)
jmp
nop
mul
scas
sub
stos
jnp
cmp
and
xchg
pop
dec
fcomp
fwait
outs
mov
inc
into
test
dec
sub
call
enter
xchg
pop
pop
fild
push
dec
cwde
les
and
lock
js
(bad)
(bad)
(bad)
call
fs
fst
dec
pop
movs
xchg
in
xchg
jmp
jge
outs
cli
or
or
xor
jmp
push
retf
(bad)
shl
dec
ss
arpl
(bad)
(bad)
(bad)
(bad)
sti
enter
pop
jp
mov
jl
cmp
jl
shl
out
xor
dec
mov
clc
(bad)
mov
inc
in
scas
out
sub
js
std
repz
test
mov
into
jnp
push
dec
jl
mov
cmps
cmp
jbe
push
jmp
jno
(bad)
(bad)
(bad)
(bad)
fnstsw
dec
and
jnp
clc
xor
stc
fldenv
fidiv
or
inc
clc
pop
jae
add
(bad)
(bad)
push
mov
mov
je
mov
push
imul
pop
mov
in
(bad)
(bad)
push
(bad)
mov
mov
ss
in
lds
mov
jbe
fadd
(bad)
(bad)
(bad)
call
jmp
enter
scas
pop
sahf
sbb
mov
imul
sbb
fisttp
dec
dec
rol
cmp
rcr
scas
es
clc
mov
bound
outs
xchg
pop
lds
(bad)
cld
and
lock
xor
int3
push
inc
jnp
out
xor
add
jmp
sti
(bad)
dec
jo
xchg
sub
movs
push
add
rcl
pop
mov
lock
(bad)
push
ds
(bad)
(bad)
jg
fdivp
and
push
(bad)
jns
int
(bad)
ds
dec
and
or
or
imul
mov
pushf
pushf
mov
and
cmp
(bad)
(bad)
call
in
loopne
ins
test
xchg
les
jb
mov
jno
mov
or
(bad)
jmp
out
fwait
(bad)
fdivr
loop
mov
cmps
sub
xchg
jecxz
cmp
dec
lea
js
sub
int
adc
int
mov
dec
mov
aaa
sub
pop
fld
out
(bad)
(bad)
(bad)
call
lahf
or
adc
js
xor
mov
sbb
mov
retf
ret
(bad)
(bad)
call
repnz
xor
cmps
fisub
sahf
xor
add
xchg
cmp
sub
(bad)
mov
mov
sub
call
mov
(bad)
inc
inc
cs
or
gs
out
cld
mov
out
or
out
(bad)
(bad)
jg
ret
repnz
dec
iret
out
test
ss
js
mov
test
pop
(bad)
(bad)
(bad)
jmp
xor
stos
xor
fs
clc
mov
ss
mov
(bad)
(bad)
dec
add
sbb
dec
mov
cmc
adc
mov
call
loope
pop
dec
pop
data16
mov
xor
cwde
imul
and
mov
fadd
clc
xchg
add
data16
(bad)
fbstp
je
xor
xchg
mov
sbb
repnz
(bad)
(bad)
(bad)
in
cmp
stos
inc
jle
cs
call
js
xchg
sub
dec
ret
(bad)
(bad)
call
ss
mov
dec
pop
fimul
imul
iret
adc
jecxz
das
clc
jmp
push
jp
add
pop
or
fst
mov
idiv
push
sub
lods
dec
jns
js
mov
pop
sbb
stc
js
sar
xor
jbe
adc
sti
push
stc
loopne
push
ret
adc
jbe
test
jmp
sub
pusha
into
loope
test
mov
(bad)
dec
sbb
xchg
data16
sahf
and
mov
sub
popf
lahf
ret
loope
loope
shl
dec
or
fadd
xchg
push
push
pop
fidiv
mov
jmp
lahf
aam
add
inc
fistp
add
push
add
push
sbb
test
nop
and
pop
sub
mov
jb
jg
test
outs
pusha
dec
sahf
mov
in
xor
popf
xor
(bad)
(bad)
dec
bound
mov
ret
jbe
and
data16
sbb
dec
(bad)
fild
cwde
xor
mov
inc
adc
(bad)
(bad)
(bad)
call
xor
or
pushf
shl
adc
or
pop
push
movs
and
stos
xor
(bad)
(bad)
(bad)
in
bnd
xchg
dec
pop
jo
imul
sub
push
sbb
mov
mov
hlt
jecxz
rol
sub
pop
push
test
fs
stc
inc
mov
(bad)
push
xchg
xor
int
jno
aaa
cld
add
add
adc
cwde
rol
push
popa
mov
adc
mov
inc
inc
xchg
mov
cmps
mov
lahf
call
push
push
fsub
(bad)
dec
jnp
mov
inc
aad
adc
mov
adc
ret
addr16
jg
mov
or
(bad)
xor
cmove
arpl
mov
xchg
cmp
jle
idiv
call
es
ret
push
jnp
add
ds
into
int3
lods
retf
mov
(bad)
mov
bound
mov
dec
cdq
sbb
push
jns
cmc
ja
aam
sbb
(bad)
(bad)
fist
fsubr
out
not
push
lods
inc
sahf
lds
in
dec
in
(bad)
and
imul
mov
imul
test
push
jge
aaa
cld
(bad)
jmp
pop
outs
xchg
push
fisttp
ins
out
jmp
fiadd
test
jmp
and
movs
mov
inc
idiv
ret
mov
pusha
aas
fistp
mov
push
fadd
aam
push
jmp
fsub
mov
in
imul
test
(bad)
call
mov
mov
push
mov
push
sbb
sbb
es
push
push
push
mov
ficom
loope
mov
cld
stos
aam
and
clc
mov
and
ret
pop
mov
(bad)
cmp
dec
xchg
mov
inc
ins
std
out
xor
mov
(bad)
(bad)
fistp
xchg
mov
push
add
and
fisttp
xchg
stos
jae
(bad)
mov
add
pop
shl
mov
jp
sahf
or
out
jne
(bad)
call
jmp
retf
movs
xchg
ror
push
ss
pop
add
dec
clc
xor
(bad)
(bad)
jmp
dec
aaa
dec
mov
out
pop
fldcw
(bad)
ror
js
out
movs
jo
add
sbb
scas
or
mov
sbb
in
(bad)
(bad)
(bad)
(bad)
and
loopne
cmp
int3
dec
push
cmp
xor
leave
out
clc
in
(bad)
mov
arpl
loopne
(bad)
mov
xchg
and
mov
add
(bad)
(bad)
inc
int3
shl
push
mov
add
sbb
mov
(bad)
(bad)
(bad)
push
js
and
jo
sbb
int
rcl
movs
je
bound
inc
aaa
retf
jmp
imul
sbb
stos
cmp
pushf
pop
cli
cmp
jge
(bad)
fcomip
inc
aas
mov
loop
lock
push
or
nop
rcr
jmp
inc
daa
in
(bad)
mov
cmp
retfw
ins
(bad)
arpl
push
inc
jmp
inc
aas
xor
lds
and
daa
inc
out
adc
test
jb
push
cmp
mov
sbb
push
adc
mov
jl
push
(bad)
jg
or
cmp
mov
cli
pop
push
(bad)
sbb
mov
leave
cwde
or
jmp
sub
scas
xor
lock
mov
mov
pop
xor
sbb
xchg
enter
fnsave
cmps
pusha
jmp
mov
cmp
popa
cmp
pusha
(bad)
(bad)
(bad)
inc
inc
sub
sbb
jae
inc
shl
jp
and
dec
movs
mov
(bad)
ins
or
or
xchg
mov
push
mov
ror
push
enter
xchg
inc
sti
xor
(bad)
(bad)
dec
mov
call
push
sub
mov
mov
mov
clc
(bad)
mov
fwait
mov
test
lock
retf
call
(bad)
inc
enter
stc
pop
adc
sub
sbb
lahf
cs
inc
div
iret
fidivr
inc
jno
rcr
(bad)
push
(bad)
repz
mov
mov
loopne
and
(bad)
push
add
data16
push
(bad)
ror
mov
call
retf
call
cmp
pop
jmp
and
(bad)
(bad)
(bad)
dec
ss
push
xchg
popf
pusha
dec
nop
and
inc
loop
sub
lds
addr16
xchg
xor
(bad)
jmp
adc
int3
and
xchg
xchg
sub
movs
test
(bad)
(bad)
(bad)
push
or
xchg
and
sbb
scas
jl
cdq
sub
pop
lock
lock
jnp
(bad)
(bad)
call
not
xchg
mov
cmp
je
repz
movs
add
retf
shr
jmp
(bad)
dec
out
(bad)
call
stc
(bad)
les
push
cmp
jge
fucomip
pop
add
(bad)
(bad)
push
mov
adc
mov
lock
or
in
push
sub
popa
push
(bad)
(bad)
dec
inc
push
cmps
test
fimul
jmp
and
xor
fldcw
(bad)
mov
pop
int3
shr
push
popf
mov
(bad)
push
push
fcomi
dec
call
std
adc
out
int
mov
adc
jp
xor
(bad)
call
shl
shr
out
mov
(bad)
xchg
out
and
mov
jmp
(bad)
inc
out
dec
dec
push
mov
xor
adc
mov
leave
mov
adc
push
sbb
(bad)
(bad)
(bad)
(bad)
ficomp
jl
mul
add
mov
aas
imul
push
push
jb
(bad)
(bad)
(bad)
stc
test
ror
adc
mov
mov
or
push
mov
mov
sub
(bad)
(bad)
(bad)
inc
inc
imul
int
pop
lock
leave
add
popf
ins
inc
inc
aam
lock
(bad)
(bad)
(bad)
(bad)
mov
rol
adc
out
xor
push
adc
rcr
cld
mov
(bad)
call
call
or
pushf
push
in
cmp
mov
(bad)
jmp
jl
in
rol
cmps
cld
sti
adc
retf
cs
jns
stos
(bad)
dec
mov
imul
mov
xchg
fcmovbe
addr16
psubusb
sub
iret
and
lock
ja
cmp
dec
sbb
into
or
retf
(bad)
(bad)
(bad)
jmp
push
jns
shl
xchg
inc
mov
pop
mov
test
(bad)
(bad)
(bad)
jmp
gs
hlt
repz
ret
sbb
addr16
inc
pop
pop
iret
push
aad
scas
mov
add
sub
call
(bad)
(bad)
(bad)
call
add
cmp
sub
and
or
inc
cmps
jbe
mov
popf
stc
add
(bad)
(bad)
jg
pcmpeqb
ret
out
sub
cwde
push
inc
or
call
cdq
cmp
es
xchg
and
mov
cmp
sub
daa
xchg
dec
sbb
(bad)
cli
call
xchg
pop
nop
sbb
mov
xchg
and
and
adc
(bad)
(bad)
jmp
mov
push
push
(bad)
out
push
outs
fsub
xchg
aam
adc
jmp
fwait
and
inc
sti
fistp
dec
mov
inc
adc
sub
lods
mov
add
push
enter
repz
js
out
fist
(bad)
(bad)
call
xor
mov
ss
(bad)
jmp
std
jl
(bad)
(bad)
jmp
xor
repz
bound
inc
jb
mov
jp
shl
inc
jmp
push
ja
push
leave
push
(bad)
out
cmps
icebp
push
jle
cmp
rol
inc
and
(bad)
xchg
mov
and
stos
data16
adc
mov
movs
xor
xchg
ficom
cmps
inc
add
(bad)
(bad)
call
mov
xchg
(bad)
xchg
cs
xor
(bad)
aad
xchg
pop
je
je
cmp
dec
dec
sub
(bad)
(bad)
jmp
push
sub
xchg
add
lods
dec
scas
jp
cmp
jg
dec
rcr
and
push
or
es
nop
xlat
in
bound
stos
pop
add
(bad)
sub
jmp
jbe
daa
jnp
jp
(bad)
cmc
loop
sbb
std
mov
cwde
xchg
es
arpl
stos
cld
aad
psubq
cmc
(bad)
inc
inc
daa
ss
ficom
out
jg
out
aad
or
outs
cli
(bad)
(bad)
mov
faddp
sbb
push
and
xor
jle
push
lods
cmp
jp
(bad)
(bad)
jmp
popf
cmps
mov
lock
sub
add
js
sahf
(bad)
repnz
(bad)
(bad)
dec
fcmovnu
sbb
retf
(bad)
xlat
clc
hlt
enter
xchg
icebp
out
cmp
fsubr
(bad)
(bad)
(bad)
call
popf
div
sahf
sti
movs
mul
std
cld
jno
jnp
jg
cmps
and
sbb
lods
xchg
pop
adc
ret
lahf
sub
movs
test
call
dec
and
stos
loopne
mov
xchg
xchg
pop
psubw
arpl
(bad)
pop
out
in
pop
ret
es
pop
arpl
cmp
jno
pop
mov
cmp
push
xor
xchg
dec
or
push
add
loopne
in
adc
dec
sbb
js
(bad)
(bad)
(bad)
call
imul
push
jge
dec
sbb
sar
mov
lea
push
push
jnp
jo
jmp
shr
or
gs
sar
jmp
sbb
clc
add
(bad)
dec
mov
xchg
cmps
cdq
fwait
rcr
in
hlt
stc
stos
sbb
sub
mov
jmp
pop
clc
cld
sub
pop
cmps
or
(bad)
(bad)
(bad)
mov
(bad)
imul
pop
push
(bad)
pop
mov
(bad)
leave
std
or
stos
fcom
das
clc
(bad)
(bad)
push
pop
add
xor
aad
pop
sub
push
sub
xor
push
jge
add
add
push
mov
mov
pop
mov
test
push
cmp
shl
(bad)
mov
xchg
xchg
xchg
mov
shl
aaa
add
cmps
(bad)
mov
dec
(bad)
(bad)
(bad)
inc
xor
ja
or
fsubr
in
das
test
jg
cmp
dec
and
add
(bad)
(bad)
(bad)
dec
sti
pop
adc
inc
sbb
les
sub
and
(bad)
jecxz
mov
lods
pop
clc
(bad)
call
movs
retf
outs
(bad)
cmp
jae
fs
or
cmps
jmp
jecxz
aam
jmp
cwde
pop
das
fsub
jne
popa
push
lds
push
or
inc
dec
fst
icebp
or
sbb
mov
sbb
aaa
sahf
mov
lods
adc
mov
xchg
and
aad
std
(bad)
(bad)
push
sbb
dec
push
cmps
jae
cmp
ds
(bad)
or
imul
aaa
adc
pop
ins
and
lods
lea
xor
(bad)
(bad)
(bad)
inc
dec
jb
outs
push
aad
(bad)
je
aaa
sbb
outs
inc
and
(bad)
(bad)
out
clc
pop
sbb
into
inc
call
sub
int
out
cmc
outs
pop
dec
xchg
xlat
addr16
outs
clc
(bad)
pop
sbb
mov
pop
adc
loop
dec
imul
(bad)
(bad)
in
xchg
sbb
ds
pop
ds
(bad)
cmp
push
fldenv
ss
xor
push
dec
(bad)
outs
and
outs
dec
lds
(bad)
xor
into
push
xor
xor
(bad)
(bad)
in
push
mov
pushf
mov
jmp
fdiv
retf
out
jnp
push
jo
out
hlt
pop
not
jecxz
leave
ja
mov
mov
(bad)
(bad)
inc
xchg
jns
ja
xchg
ja
ret
(bad)
fstp
cmp
pop
and
lahf
inc
inc
or
add
data16
jl
les
sti
mov
lock
pushf
outs
addr16
(bad)
in
mov
(bad)
mov
lahf
jmp
cmc
fbld
cmp
sar
sti
cmps
(bad)
(bad)
(bad)
std
out
(bad)
loop
pop
push
(bad)
mov
loop
jnp
pop
pop
enter
jl
lock
jmp
push
pop
push
sbb
jbe
in
xor
imul
addr16
mov
mov
pusha
fstp
arpl
sti
popf
(bad)
(bad)
call
fdiv
mov
cdq
iret
xchg
in
loop
(bad)
jg
pop
push
out
mov
in
jge
sbb
cli
in
jg
daa
fidivr
(bad)
mov
icebp
jg
(bad)
bnd
(bad)
mov
dec
cmp
out
cmp
aas
aad
(bad)
(bad)
mov
jl
fiadd
idiv
pop
jge
sbb
std
pop
pop
call
call
dec
lea
repz
icebp
sub
repnz
ss
ja
std
cmp
(bad)
(bad)
(bad)
(bad)
dec
cmp
jnp
icebp
dec
std
out
sbb
ret
pop
sti
scas
sbb
in
clc
retf
std
into
cmc
(bad)
mov
int3
jge
dec
daa
mul
dec
imul
loop
into
icebp
clc
fwait
scas
jmp
fnstsw
mov
test
cmp
(bad)
(bad)
dec
fs
fisubr
clc
lahf
or
dec
cmps
jmp
(bad)
(bad)
(bad)
fbstp
std
call
fmul
cld
scas
es
loope
fucomi
dec
fwait
pop
push
lea
out
clc
fistp
jle
jmp
lods
lds
mov
hlt
adc
call
(bad)
stc
cmp
out
shl
jecxz
pushf
pop
aas
in
hlt
nop
icebp
hlt
pop
dec
sbb
clc
jge
sub
sub
ss
sbb
scas
jnp
arpl
mov
ret
jmp
xchg
sbb
stos
mov
mov
cmp
lods
(bad)
sahf
stos
(bad)
(bad)
jg
mov
sub
pushf
dec
mov
movs
js
(bad)
xor
daa
sti
jge
mov
jmp
mov
jmp
leave
in
jno
std
mov
fsubp
or
(bad)
cli
dec
aad
(bad)
(bad)
(bad)
jmp
(bad)
popa
aam
shl
and
jo
mov
inc
add
adc
int3
push
add
pop
and
jg
cmc
adc
and
or
pop
cld
jmp
inc
scas
push
fidivr
call
push
push
ror
dec
mov
int3
cwde
fsubr
cmp
cmp
leave
and
daa
xor
add
sbb
repz
call
(bad)
jns
cli
psubb
dec
cwde
adc
test
add
mov
pop
push
and
(bad)
(bad)
(bad)
out
pop
mov
mov
xchg
popf
adc
test
xchg
add
mov
das
cmps
dec
cli
dec
and
push
inc
cmp
cdq
aaa
bound
test
outs
cmp
mov
and
outs
lss
les
cwde
bound
mov
dec
sbb
push
(bad)
xor
mov
fdivr
(bad)
(bad)
(bad)
jns
scas
rsm
rcr
or
sahf
call
(bad)
jge
shl
pop
sub
pop
loopne
pop
(bad)
(bad)
inc
(bad)
nop
dec
xchg
pusha
pop
dec
aaa
leavew
xor
ins
ret
jno
jl
int
ds
or
(bad)
(bad)
(bad)
fistp
jmp
lea
xchg
push
inc
outs
push
mov
pop
cld
fcomip
call
cmp
call
fdivr
mov
or
xlat
mov
clc
inc
and
addr16
push
push
fsubp
ret
dec
jp
sbb
test
(bad)
(bad)
call
xchg
es
push
rcl
xchg
add
and
jo
retf
nop
or
xor
xchg
(bad)
dec
mov
dec
jp
dec
sbb
mov
(bad)
(bad)
push
dec
inc
call
scas
jnp
mov
mov
sbb
retf
out
ins
mov
dec
ret
mov
add
stc
pop
(bad)
call
bound
mov
lock
pop
xchg
pusha
int
cmc
les
and
jg
jmp
and
jbe
outs
or
test
(bad)
jg
(bad)
not
xor
inc
mov
dec
sbb
sub
mov
jmp
test
push
aaa
cld
(bad)
inc
out
and
sub
aam
inc
or
mov
push
clc
(bad)
(bad)
jmp
pop
pushf
movs
mov
movs
dec
retf
ds
idiv
sub
mov
push
push
retf
fs
rol
(bad)
(bad)
out
jl
push
jno
mov
dec
mov
jo
and
sbb
adc
iret
movs
dec
dec
jg
mov
adc
jae
aad
shl
(bad)
(bad)
(bad)
call
push
or
cs
rcr
or
cwde
movs
or
orps
inc
xchg
mov
jg
xchg
pushf
and
movs
popa
xchg
sti
sub
test
ja
cmp
push
(bad)
adc
test
(bad)
(bad)
call
inc
lea
mov
shl
scas
mov
inc
movs
outs
pop
and
cli
imul
(bad)
jmp
rcl
nop
xchg
xor
into
js
push
std
loope
call
(bad)
(bad)
jmp
movs
test
xchg
out
mov
dec
ret
call
push
pushf
mov
repnz
cli
cmp
push
stos
sub
xchg
jmp
add
fst
ss
stos
jg
inc
std
arpl
mov
jle
test
es
add
(bad)
(bad)
dec
sbb
(bad)
or
jg
loope
call
cs
mov
pushf
pop
(bad)
(bad)
(bad)
jmp
and
jle
xchg
das
nop
xor
jp
pop
adc
inc
jmp
aad
dec
ret
imul
test
push
adc
push
xlat
(bad)
(bad)
(bad)
dec
dec
cld
ret
lahf
jp
and
arpl
jmp
jmp
scas
mov
(bad)
call
fadd
imul
(bad)
xchg
adc
pop
mov
sub
fild
mov
(bad)
(bad)
inc
jge
xchg
mov
dec
loopne
xchg
pop
sub
cld
jo
scas
mov
imul
add
(bad)
(bad)
call
ins
cmp
or
and
jnp
and
ins
jmp
pop
icebp
mov
add
rcl
cmc
cld
mov
lahf
mov
popf
(bad)
(bad)
(bad)
call
ret
or
test
jp
(bad)
jg
test
call
test
mov
inc
mov
push
fld
movs
sbb
mov
inc
mov
cmp
(bad)
(bad)
call
pop
aad
dec
loop
mov
hlt
pop
cdq
mov
arpl
or
push
gs
(bad)
jg
jmp
(bad)
clc
xchg
or
shl
icebp
fiadd
(bad)
int
out
(bad)
(bad)
(bad)
dec
mov
loop
and
xchg
push
sub
or
cmp
jne
jns
ss
(bad)
(bad)
(bad)
push
fld
cli
or
push
test
pop
inc
test
mov
hlt
cdq
sub
mov
stc
sub
(bad)
(bad)
call
sub
xor
inc
and
pop
sahf
cs
enter
inc
push
in
or
(bad)
(bad)
jmp
retf
pop
mov
and
mov
push
ds
out
sub
dec
in
call
retf
(bad)
(bad)
(bad)
call
lahf
mov
pushf
pop
inc
xor
scas
add
add
cmp
out
ins
cs
(bad)
(bad)
call
ja
adc
mov
push
mov
lods
adc
scas
cmp
xchg
call
(bad)
fdivr
jno
in
test
xlat
sbb
jns
sbb
xlat
shr
ins
sub
cli
inc
out
or
aaa
pop
in
sub
mov
sbb
xchg
lea
mov
or
cmps
(bad)
(bad)
dec
pop
mov
retf
test
stc
jmp
and
(bad)
jmp
and
dec
stos
test
ffree
out
sbb
cmp
bound
aas
imul
mov
out
lea
jae
sub
and
shl
std
repz
fprem
fstp
pop
or
js
(bad)
fcomip
mov
and
in
fmul
xchg
mov
icebp
push
jbe
imul
adc
inc
mov
test
push
dec
enter
jmp
daa
xor
in
adc
dec
(bad)
clc
std
push
repz
(bad)
outs
test
xor
aad
jmp
(bad)
fs
je
(bad)
imul
(bad)
push
adc
sub
shrd
outs
loop
cmps
dec
push
pop
ss
call
popf
(bad)
(bad)
(bad)
cmp
and
leave
out
or
or
xchg
or
ret
fcomp
(bad)
(bad)
out
outs
aad
pop
test
dec
and
or
gs
ret
xor
cmp
push
(bad)
(bad)
(bad)
dec
aad
out
mov
fstp
cmps
jle
sub
retf
xchg
std
pop
pop
loopne
pop
cmc
(bad)
jl
out
ja
jp
jmp
pushf
push
fiadd
dec
je
retf
push
ret
and
mov
inc
mov
push
push
or
dec
repnz
inc
lock
icebp
popa
push
mov
jb
and
jecxz
(bad)
push
stos
cli
jg
or
jbe
sbb
mov
sbb
sbb
push
adc
dec
test
sbb
xchg
inc
push
pop
pop
js
retf
dec
cmp
and
dec
test
out
out
mov
in
and
dec
sahf
gs
(bad)
in
(bad)
dec
sti
xchg
pop
adc
add
push
mov
mov
or
les
xlat
mov
inc
adc
adc
js
sbb
and
push
stos
enter
cmp
(bad)
(bad)
push
push
push
or
test
xchg
adc
push
out
std
adc
(bad)
out
mov
inc
das
mov
stc
adc
daa
daa
test
daa
jl
pop
mov
fisttp
add
mov
scas
retf
cmp
mov
push
pop
push
mov
fnstcw
xchg
ror
mov
jg
and
int3
sbb
movs
(bad)
(bad)
(bad)
jmp
mov
mov
in
pop
jmp
xor
lock
mov
shr
loope
dec
icebp
movs
jmp
cs
(bad)
(bad)
call
lahf
lods
cmp
xor
cli
cmps
add
outs
out
mov
pushf
and
adc
mov
cwde
sti
rol
(bad)
fcmovbe
sub
neg
or
mov
add
add
(bad)
dec
std
mov
dec
(bad)
or
(bad)
call
sbb
mov
lods
add
fld
outs
rol
adc
(bad)
dec
(bad)
cmps
pop
hlt
aad
rol
retf
retf
inc
dec
sbb
outs
out
js
jmp
dec
(bad)
sahf
inc
push
(bad)
(bad)
jg
fsubr
push
in
(bad)
fcom
cmp
aaa
nop
in
push
jb
(bad)
(bad)
(bad)
jmp
pop
mov
cli
fs
in
jle
(bad)
(bad)
(bad)
(bad)
stc
mov
clc
xor
(bad)
xor
js
sti
and
rcr
cld
xor
cmps
popf
adc
call
fwait
xor
arpl
add
add
add
hlt
in
add
or
mov
pop
loop
xor
aad
jmp
jmp
retf
imul
fs
(bad)
jmp
cmp
lahf
and
scas
mov
std
das
dec
das
jns
rol
jge
fcom
or
fs
jb
jle
jbe
(bad)
(bad)
(bad)
mov
das
stc
bound
jmp
shr
dec
repnz
pusha
pop
outs
aaa
jge
dec
(bad)
jmp
pop
adc
jbe
or
push
jge
aaa
cmp
call
mov
push
mov
xor
or
cmps
hlt
(bad)
dec
mov
inc
cmps
mov
jl
inc
in
call
(bad)
fild
mov
fstp
test
dec
js
fidiv
jmp
(bad)
mov
dec
add
mov
cmp
jb
jp
aas
fdiv
pop
sbb
jg
loop
leave
jle
(bad)
(bad)
dec
fld
cmps
jmp
cmps
retf
or
aas
dec
sti
jle
or
pop
fistp
sbb
sub
(bad)
fsubr
jg
je
adc
loop
call
jae
inc
xchg
aam
or
sub
add
push
dec
inc
cmp
in
mov
push
loopne
retf
das
fsub
mov
add
pop
sar
in
ins
add
jmp
add
xchg
popa
pop
or
(bad)
(bad)
call
inc
adc
and
mov
es
sbb
sti
pop
test
xor
lock
add
jbe
nop
and
aam
(bad)
(bad)
(bad)
(bad)
js
push
add
std
push
xlat
je
or
cmp
jge
jl
test
sar
sbb
jg
(bad)
inc
stos
add
test
pop
imul
inc
sbb
cmp
mov
sbb
adc
(bad)
(bad)
push
pop
clc
dec
xchg
mov
sbb
stc
scas
sub
in
pop
fcom
jmp
mov
add
lods
cwde
or
(bad)
(bad)
(bad)
(bad)
jmp
ds
push
lds
sub
pop
pop
out
jae
aaa
daa
scas
mov
xor
and
(bad)
(bad)
(bad)
dec
adc
jb
data16
fidiv
outs
movs
imul
xchg
sbb
cli
in
mov
(bad)
(bad)
inc
mov
pop
cmp
or
jne
daa
add
sub
test
pop
jecxz
outs
clc
call
outs
fadd
sti
sub
mov
retf
jb
(bad)
jg
cmp
cmp
jl
mov
lods
xlat
xor
clc
arpl
adc
clc
inc
jnp
test
mov
(bad)
jmp
js
bound
in
ror
sahf
movs
lahf
cmps
xor
xlat
inc
daa
or
(bad)
loopne
loope
(bad)
(bad)
jmp
dec
sbb
fist
and
pop
ret
test
shr
cld
mov
and
out
cmc
sub
pop
or
idiv
jo
fiadd
cld
jl
pop
dec
add
sub
icebp
cmp
pop
fmul
in
mov
or
iret
sbb
cli
fst
cwde
div
(bad)
(bad)
(bad)
call
popa
fdiv
je
movs
adc
arpl
cs
jo
mul
mov
les
stos
call
in
and
jne
push
sbb
sbb
fwait
(bad)
out
daa
aaa
pop
dec
in
sar
jno
(bad)
mov
cdq
sbb
and
cmp
ror
es
rcr
sub
nop
loop
dec
scas
adc
mov
out
sub
hlt
imul
(bad)
(bad)
push
lock
jecxz
push
cs
(bad)
(bad)
push
push
sbb
std
(bad)
(bad)
dec
sti
inc
(bad)
fisttp
retf
movs
loope
cli
mov
ror
std
mov
sbb
(bad)
push
aam
les
add
mov
mov
loope
je
dec
shl
lods
push
push
jmp
call
or
xor
xor
add
inc
(bad)
(bad)
(bad)
dec
imul
out
cmps
call
sbb
and
jae
or
pusha
and
(bad)
push
sub
pusha
ins
sbb
xchg
out
icebp
lea
pop
mov
sub
ret
cwde
and
xor
mov
jecxz
xchg
aam
retf
push
inc
or
retf
(bad)
(bad)
(bad)
inc
outs
adc
adc
sub
(bad)
sbb
mov
xchg
test
xor
jl
and
icebp
outs
loope
cmp
push
mov
lods
jle
mov
(bad)
(bad)
(bad)
jg
mov
pop
imul
jo
pop
sbb
fnsave
fadd
sbb
repnz
push
cwde
xchg
std
aaa
outs
mov
mov
(bad)
xor
jmp
popa
push
mov
mov
add
mov
mov
call
mov
mov
popf
ins
loop
push
stc
sub
movs
int
mul
cs
xor
push
test
jp
sbb
das
push
xor
xchg
push
pop
test
inc
shl
sbb
xchg
inc
(bad)
xchg
adc
(bad)
call
outs
sub
cmps
lods
jb
nop
or
cmps
xchg
sbb
inc
enter
fwait
xchg
fcomp
fisttp
enter
cmps
sub
fstp
pop
dec
(bad)
call
ficom
xor
cmp
push
out
sar
repz
js
sub
inc
dec
int
iret
cs
push
jmp
jecxz
lds
pop
xor
cli
in
xchg
ins
cmp
cmc
(bad)
fisub
jmp
(bad)
(bad)
dec
jbe
xor
jecxz
shl
out
jge
arpl
(bad)
imul
mov
jnp
ror
add
jmp
fs
pop
retf
mov
mov
inc
adc
(bad)
(bad)
jmp
(bad)
pop
popf
jo
mov
cld
addr16
dec
(bad)
jg
rcl
and
movs
push
jg
loop
ss
push
sbb
(bad)
sar
jmp
jbe
inc
pushf
sbb
jmp
(bad)
mov
xchg
sub
cmp
cmp
ja
lahf
fisttp
cmc
adc
imul
in
out
sub
cmc
lahf
imul
aam
les
sbb
ss
test
dec
dec
outs
jb
ss
(bad)
in
xor
(bad)
(bad)
(bad)
(bad)
cmp
in
out
cmps
push
jns
sbb
cmp
sti
loop
(bad)
retf
xchg
clc
xchg
mov
(bad)
(bad)
(bad)
dec
push
cmp
imul
inc
xor
sub
dec
adc
jg
cdq
out
outs
sub
jmp
mov
cmp
fwait
das
fstp
dec
xchg
(bad)
ret
(bad)
jmp
rol
cli
jl
stc
cli
mov
xchg
sbb
lahf
pop
mov
(bad)
ja
ror
scas
mov
add
(bad)
xchg
cmp
in
sub
(bad)
(bad)
(bad)
(bad)
std
pop
mov
inc
inc
test
inc
js
push
inc
std
dec
(bad)
push
stos
stos
ins
(bad)
(bad)
fbld
retf
dec
inc
inc
jecxz
mov
ret
mov
sbb
aam
adc
hlt
mov
dec
out
mov
(bad)
inc
test
enter
fwait
mov
or
or
(bad)
push
jmp
sub
pop
push
pop
movs
add
test
fiadd
xchg
cmps
(bad)
(bad)
(bad)
mov
pop
add
fldenv
pop
or
int
inc
push
jb
loopne
ret
in
(bad)
(bad)
(bad)
call
test
mul
dec
inc
loopne
jae
cld
dec
aad
int
dec
lahf
or
leave
xor
(bad)
jmp
ins
adc
cmp
cmp
loope
cmp
popf
pop
xchg
jae
clc
(bad)
(bad)
push
mov
pop
sbb
adc
xor
jno
fwait
or
lea
(bad)
dec
(bad)
(bad)
jmp
xor
in
sbb
dec
inc
fwait
hlt
js
push
hlt
fwait
jne
(bad)
(bad)
call
out
push
adc
sar
dec
out
imul
mov
push
(bad)
(bad)
jg
and
fild
(bad)
push
cwde
mov
int3
mov
cmc
mov
mov
les
js
mov
(bad)
(bad)
dec
adc
gs
int
jp
pop
popa
push
iret
movs
loop
xchg
(bad)
imul
icebp
push
data16
xor
sub
cmps
xchg
and
push
test
pop
sub
pop
mov
mov
mov
nop
and
cli
data16
jg
call
in
sub
pop
(bad)
push
outs
inc
or
fs
fadd
mov
mov
(bad)
(bad)
call
xchg
pop
icebp
call
fcmove
sbb
sbb
pop
ins
outs
repz
cmp
(bad)
(bad)
jns
push
fidiv
push
int3
fsub
out
inc
fmulp
loope
adc
push
xchg
(bad)
(bad)
(bad)
call
fdivr
add
(bad)
cmp
fnstcw
dec
pop
ficom
pusha
iret
pop
(bad)
(bad)
(bad)
jmp
aad
popf
imul
(bad)
and
pop
sub
push
mov
jnp
lahf
(bad)
mov
cld
xor
dec
pop
sub
lock
mov
(bad)
fnstcw
(bad)
(bad)
(bad)
call
pop
pop
(bad)
mov
pop
inc
int
shl
es
loop
je
sub
dec
jno
rol
cmp
(bad)
(bad)
inc
push
in
movs
push
and
jle
cmp
inc
ficom
retf
test
jg
es
add
(bad)
dec
cmp
(bad)
pop
test
push
std
add
add
call
ds
push
div
jge
(bad)
(bad)
(bad)
dec
(bad)
mov
push
push
stos
enter
fld
movsx
inc
inc
or
sti
jmp
push
or
and
outs
pop
iret
inc
adc
ja
(bad)
(bad)
jmp
bound
push
hlt
and
jbe
ins
jg
stc
dec
dec
loopne
sahf
add
or
(bad)
(bad)
in
push
dec
retf
mov
jnp
xor
pushf
loope
popf
mov
mov
(bad)
(bad)
push
arpl
add
and
push
ror
movs
aam
cmc
lods
cs
sub
or
test
inc
sub
jecxz
(bad)
(bad)
(bad)
dec
std
mov
xchg
jmp
mov
cs
fcomp
(bad)
inc
aam
cmps
cld
mov
in
sub
jae
cld
(bad)
(bad)
dec
sbb
shl
xlat
jg
mov
in
fnstsw
jmp
mov
dec
(bad)
(bad)
push
add
fild
mov
call
dec
push
mov
xor
(bad)
(bad)
(bad)
dec
sbb
fbstp
sbb
movs
jb
dec
mov
dec
not
sub
sbb
dec
inc
sbb
scas
xor
xchg
addr16
sbb
outs
cld
(bad)
(bad)
(bad)
mov
mov
jle
inc
out
test
shr
fcmove
stos
ds
dec
mov
cld
(bad)
call
ror
push
sub
frstor
clc
xor
test
(bad)
(bad)
(bad)
inc
inc
rcr
push
and
mov
imul
scas
fist
fs
mov
(bad)
push
add
xchg
shl
adc
div
jne
int3
sub
arpl
(bad)
mov
cmps
sbb
fdiv
pop
pop
pusha
or
lea
dec
or
(bad)
call
out
dec
jns
lds
cmp
lock
pushf
es
and
mov
add
dec
jns
fld
pop
pop
std
scas
cmp
mov
call
ror
jmp
jmp
xchg
(bad)
movs
or
jmp
pop
fcomp
fwait
int
(bad)
rcl
(bad)
(bad)
ins
cmps
push
ror
(bad)
(bad)
mov
sub
(bad)
jmp
ret
(bad)
mov
sar
das
clc
(bad)
jmp
ret
inc
xchg
xchg
icebp
inc
jns
mov
test
je
(bad)
(bad)
(bad)
mov
sub
xchg
ret
ds
cmp
test
inc
scas
pop
popf
mov
(bad)
dec
scas
xor
jmp
lods
dec
(bad)
retf
xlat
out
enter
call
out
es
mov
icebp
add
pop
into
shl
sbb
popa
repz
(bad)
(bad)
jmp
sbb
mov
pushf
mov
cli
ror
jmp
sbb
mov
js
or
push
jmp
push
adc
sbb
fst
out
xor
mov
adc
pop
(bad)
(bad)
jmp
xchg
ror
stc
sbb
xchg
lahf
call
cmps
fnsave
jp
cmc
(bad)
push
sbb
shr
ja
or
(bad)
adc
jl
mov
sub
lods
dec
stos
push
sub
clc
push
sub
mov
jmp
or
(bad)
(bad)
(bad)
push
mov
and
mov
int
push
cld
in
fiadd
xor
sets
sahf
mov
push
ja
clc
call
sti
add
jecxz
js
iret
sbb
cmps
cmps
cmp
lock
(bad)
jmp
sbb
sbb
push
cwde
pop
daa
ficomp
push
ss
push
call
pop
(bad)
add
push
or
out
icebp
imul
icebp
xor
(bad)
inc
xchg
push
iret
retf
jge
mov
sbb
jg
in
(bad)
inc
jp
aam
js
push
sub
pop
push
addr16
inc
pop
(bad)
xlat
mov
lods
out
retf
and
ror
out
in
cmp
push
mov
in
and
and
mov
dec
repz
cmc
(bad)
(bad)
(bad)
dec
mov
pop
cmp
daa
leave
mov
hlt
xchg
jl
and
ds
(bad)
push
mov
sub
xchg
dec
push
stc
cmp
call
(bad)
cmp
mov
leave
in
jae
(bad)
pop
scas
aas
fild
ss
loope
in
cmps
in
mov
(bad)
dec
dec
(bad)
xlat
jno
fcmovnb
sbb
pop
repz
jle
jbe
sbb
call
(bad)
mov
std
push
mov
sti
and
xor
xchg
or
aaa
outs
jmp
sbb
or
je
(bad)
sahf
push
daa
pop
(bad)
stos
mov
mov
call
hlt
ds
xchg
sti
mov
xor
call
sub
(bad)
dec
call
aam
xchg
(bad)
repz
je
(bad)
(bad)
(bad)
inc
je
ja
call
sbb
cmps
cmps
jnp
xor
int
cmp
bound
push
add
mov
add
and
add
xchg
fisttp
call
rol
(bad)
jb
test
pop
add
mov
or
push
adc
jg
mov
nop
adc
pop
cmp
mov
sub
mov
pop
ret
push
(bad)
(bad)
mov
pop
iret
mov
jne
xlat
outs
out
mov
out
mov
ret
(bad)
(bad)
(bad)
(bad)
call
xchg
push
stos
mov
loop
sub
jmp
xor
in
fld
std
(bad)
(bad)
inc
sti
loope
sahf
fs
fcom
adc
or
rol
jno
sub
(bad)
call
or
push
xchg
pop
sahf
aas
xchg
mov
sub
jno
js
push
push
(bad)
(bad)
jmp
bound
stc
es
add
xlat
rcr
jo
pushf
cwde
std
popf
(bad)
(bad)
jmp
and
les
push
push
xchg
test
arpl
cwde
mov
icebp
mov
adc
inc
add
ror
call
stos
adc
(bad)
(bad)
push
cld
clc
call
daa
sub
push
xchg
xchg
rol
scas
popa
xchg
iret
xchg
mov
inc
and
dec
(bad)
jp
push
ja
out
xchg
or
dec
jmp
adc
ret
in
cli
arpl
call
retf
(bad)
outs
arpl
fbld
(bad)
(bad)
jmp
pop
dec
xchg
add
or
jb
rol
sahf
les
enter
lea
or
dec
mov
ret
popf
or
test
sbb
push
cld
ds
data16
cmps
or
and
sub
(bad)
fbld
push
xchg
push
stos
movs
stc
pop
mov
mov
jp
add
(bad)
call
fisubr
mov
das
push
ds
mov
inc
retf
(bad)
(bad)
(bad)
mov
mov
cmp
not
fidivr
xor
xchg
pop
sahf
dec
xchg
push
mov
mov
cmp
mov
pop
rcl
or
cdq
hlt
mov
lods
xchg
(bad)
jne
in
(bad)
(bad)
jmp
sbb
jbe
push
(bad)
gs
xchg
cmp
xor
ret
add
mov
sti
repnz
inc
add
cs
clc
jbe
icebp
retf
ja
or
sub
lea
je
imul
or
xchg
and
in
mov
jns
adc
rcr
(bad)
sub
loop
(bad)
(bad)
(bad)
call
out
pusha
out
push
cmc
dec
push
mov
out
xlat
arpl
stos
stc
aam
xor
test
popf
sti
pop
int3
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
outs
repnz
push
or
call
add
mov
shr
(bad)
aas
cmp
and
cmp
rcl
into
add
cmp
sub
add
(bad)
fbstp
mov
jb
add
ins
ss
inc
jno
inc
sbb
mov
(bad)
push
and
push
or
(bad)
adc
jae
ret
sbb
test
pop
dec
dec
or
es
add
(bad)
jmp
rcr
cmp
sub
jecxz
sub
lea
imul
push
inc
or
push
aad
xchg
jae
daa
mov
pop
add
idiv
(bad)
inc
int3
int
jnp
xor
jns
out
mov
test
out
xor
jmp
fidivr
adc
jg
jg
jp
stc
out
not
pushf
fisub
dec
dec
test
and
mov
popa
push
ror
sbb
(bad)
call
jbe
inc
call
mov
push
xor
dec
loopne
xor
cmps
push
and
(bad)
(bad)
jmp
push
ror
fiadd
xchg
or
jge
aas
hlt
leave
jg
dec
inc
add
call
call
push
pop
cmc
in
jmp
ss
adc
(bad)
repz
mov
(bad)
jmp
scas
int
cs
mov
aad
pop
jmp
pop
sub
mov
inc
xor
mov
(bad)
(bad)
(bad)
call
shl
jns
jb
and
loop
in
jnp
jne
jg
push
fdivr
scas
cmp
cmp
jmp
sbb
(bad)
(bad)
(bad)
jg
shr
(bad)
sbb
push
cwde
arpl
sub
xchg
mov
pop
cmp
cli
mov
(bad)
(bad)
push
jo
mov
aam
arpl
add
(bad)
pop
jbe
xchg
daa
lods
aad
stos
jp
(bad)
(bad)
(bad)
inc
daa
mov
mov
ins
xchg
dec
push
push
push
push
jbe
stc
mov
sbb
mov
jno
out
and
(bad)
(bad)
mov
aaa
aas
pusha
push
(bad)
fistp
sbb
jmp
and
(bad)
sub
pop
cdq
push
out
cwde
jnp
ret
jp
fstp
retf
gs
in
xor
retf
lahf
out
(bad)
(bad)
(bad)
jmp
mov
pop
push
adc
scas
dec
jmp
stos
ins
mov
lds
cmp
push
mov
push
daa
jne
sub
sahf
nop
outs
mov
sbb
aas
inc
xchg
out
mov
and
add
call
hlt
fwait
daa
rcl
gs
mov
loope
(bad)
(bad)
(bad)
jmp
jmp
nop
sahf
pop
xor
cmp
or
pop
mov
(bad)
jg
(bad)
(bad)
cmp
push
idiv
mov
jge
mov
mov
shl
adc
(bad)
(bad)
(bad)
dec
fadd
xchg
or
in
daa
sub
pop
stos
fisttp
inc
(bad)
(bad)
(bad)
jmp
or
xchg
mov
pop
mov
ret
sub
xchg
mov
push
inc
repz
push
ja
jge
arpl
adc
repz
inc
cli
inc
std
icebp
push
arpl
pop
mov
arpl
movs
test
out
inc
add
mov
inc
cwde
out
ins
mov
addr16
out
push
ficom
and
dec
mov
sahf
sbb
xchg
push
loopne
(bad)
(bad)
push
or
mov
jl
sahf
imul
mov
retf
jae
(bad)
stc
push
dec
add
cs
xchg
gs
cdq
xor
mov
stc
jmp
or
mov
aad
sbb
(bad)
(bad)
(bad)
mov
movs
mov
push
or
mov
pushf
in
xchg
iret
gs
jb
(bad)
(bad)
call
jbe
gs
mov
pop
scas
add
call
fcom
dec
dec
dec
mov
(bad)
(bad)
(bad)
inc
out
cs
mov
or
call
cmps
test
test
in
neg
(bad)
(bad)
cmp
adc
sti
fisttp
adc
mov
ins
(bad)
(bad)
(bad)
jmp
es
push
mov
imul
lods
inc
sub
stc
ins
retf
fld
xchg
stos
fldcw
inc
mov
xor
sbb
cwde
pop
push
aaa
sub
out
movs
cli
sbb
(bad)
push
ins
jecxz
pop
imul
pop
jle
movs
mov
arpl
out
dec
mov
pop
movs
int3
daa
(bad)
(bad)
(bad)
jmp
iret
fidiv
scas
test
jne
mov
sub
test
stc
std
xchg
hlt
out
fimul
push
fwait
pusha
(bad)
(bad)
call
dec
adc
ins
xor
pop
ror
dec
jle
pop
outs
add
(bad)
inc
movs
pop
jb
out
xchg
(bad)
mov
push
stos
dec
rcl
xor
(bad)
call
enter
jecxz
sbb
loope
fldenv
and
ins
pop
stc
mov
scas
es
daa
pop
test
xchg
or
nop
adc
aad
jp
and
js
dec
and
or
jne
bound
xchg
movs
mov
ds
enter
bnd
inc
mov
pop
mov
out
in
or
stos
bound
cmp
dec
or
scas
mov
push
test
mov
retf
push
sbb
inc
(bad)
call
push
sub
sub
jmp
xchg
jo
jmp
dec
lea
(bad)
(bad)
cld
pop
sub
fadd
xchg
lahf
mov
lahf
dec
adc
push
inc
sub
cmp
mov
mov
mov
cli
nop
ds
sub
loopne
or
(bad)
(bad)
jmp
les
xor
push
mov
aam
jne
stos
leave
jbe
ja
ins
ret
push
jno
pop
(bad)
call
test
cmp
inc
test
push
out
stos
loope
push
sbb
mov
and
call
fnstsw
ret
xor
and
dec
popa
add
jbe
or
(bad)
(bad)
jmp
(bad)
or
rcl
inc
ins
mov
cdq
inc
in
push
shl
sbb
fisubr
dec
imul
cli
add
mov
add
push
shl
push
sbb
jmp
mov
push
pop
aam
fild
pop
or
clc
add
div
packssdw
or
idiv
dec
add
(bad)
out
mov
jmp
sub
std
fidiv
in
mov
dec
and
pop
and
xor
pop
xor
ret
je
mov
(bad)
jmp
cmp
mov
xor
call
jne
(bad)
aad
shl
fidivr
mov
(bad)
push
movs
jmp
and
daa
dec
jl
push
mov
aam
dec
loopne
lods
stos
es
(bad)
(bad)
(bad)
call
xchg
test
xor
mov
add
dec
dec
sub
cld
push
xor
test
xor
lods
mov
cld
jmp
push
(bad)
in
ss
push
ret
lods
test
(bad)
jg
add
add
fnsave
inc
cmp
out
or
(bad)
jmp
push
mov
jmp
stc
jne
pop
push
loopne
leave
pop
ret
std
test
add
mov
leave
inc
xchg
lahf
mov
fdiv
cmps
xor
into
retf
xor
mov
dec
mov
xor
xor
(bad)
(bad)
(bad)
jmp
jbe
cmps
retf
pop
xchg
shr
sub
mov
pop
std
jo
sub
and
xor
(bad)
dec
lods
or
sub
sahf
mov
mov
push
(bad)
(bad)
(bad)
jmp
cwde
sbb
inc
lds
cdq
popf
push
mov
cmp
addr16
adc
lahf
mov
mov
push
jns
or
sahf
mov
(bad)
(bad)
(bad)
push
cwde
mov
movs
fsub
scas
mov
inc
lea
(bad)
jg
(bad)
and
sbb
mov
scas
nop
aam
call
mov
adc
or
int3
hlt
(bad)
call
fld
jbe
sub
ss
push
lock
pop
scas
push
or
(bad)
(bad)
(bad)
fistp
or
js
pop
lock
mov
push
adc
pushf
jp
add
xchg
and
push
push
inc
xchg
add
int
cmp
and
jmp
xchg
push
push
pop
(bad)
(bad)
(bad)
call
les
or
scas
out
fisttp
sbb
loopne
(bad)
push
into
sti
test
pop
aaa
ss
cwde
mov
(bad)
(bad)
(bad)
(bad)
push
jo
imul
jns
test
test
test
and
xor
(bad)
(bad)
mov
data16
jmp
lea
dec
mov
xor
sbb
or
call
test
pop
cli
sub
xor
and
sub
dec
xor
push
adc
fbstp
push
(bad)
ds
iret
jge
mov
and
sbb
(bad)
(bad)
call
mov
adc
sar
stos
movs
or
mov
add
mov
dec
nop
(bad)
dec
sub
sbb
fs
add
(bad)
mov
add
add
fcomp
and
sub
(bad)
(bad)
(bad)
(bad)
in
cs
shl
xor
test
sub
sub
(bad)
xchg
add
adc
jge
call
loope
jbe
bound
dec
imul
mov
inc
lods
movs
adc
(bad)
(bad)
push
xor
push
ja
gs
mov
ja
inc
addr16
xor
mov
call
push
dec
jle
nop
adc
ror
push
xchg
add
mov
xor
call
dec
or
dec
mov
out
add
(bad)
(bad)
inc
rcl
int
fs
push
xor
xor
scas
movs
mov
rol
ins
adc
(bad)
(bad)
(bad)
jmp
xlat
rcl
jmp
ss
ins
dec
fcmovu
jle
push
popf
inc
sahf
mov
pop
push
rcr
(bad)
jmp
cmp
pop
push
aam
sub
in
add
cmps
pop
and
(bad)
push
es
call
inc
scas
dec
sub
test
dec
(bad)
push
lea
nop
mov
dec
dec
ins
mov
xor
sbb
inc
xchg
add
pop
cdq
cmp
(bad)
(bad)
(bad)
(bad)
jle
xor
jbe
jne
ds
and
dec
and
sbb
shr
pop
fsubr
jg
(bad)
(bad)
(bad)
call
rcr
loopne
lods
movs
cmps
mov
aam
cli
data16
dec
test
sbb
(bad)
(bad)
dec
pop
shl
and
fldcw
cmps
sbb
fcom
adc
inc
dec
push
mov
repnz
stos
xchg
out
(bad)
mov
mov
es
or
ror
sar
(bad)
mov
shr
mov
cmp
push
push
push
outs
int3
je
dec
cs
push
cli
(bad)
(bad)
(bad)
xchg
movs
push
xor
fst
inc
loop
aaa
loope
sub
mov
push
mov
dec
xchg
retf
int3
loope
xchg
xchg
(bad)
push
mov
mov
inc
dec
or
mov
or
mov
(bad)
mov
call
mov
jmp
sbb
sbb
jl
js
dec
push
pop
inc
sbb
pop
xor
adc
imul
mov
call
arpl
or
mov
ds
iret
jp
cld
or
movs
sub
(bad)
(bad)
jmp
pushf
retf
test
rcl
out
hlt
mov
loop
fsubr
pop
adc
jg
sahf
(bad)
mov
xlat
nop
cwde
jmp
lods
push
push
pop
xor
scas
call
mov
(bad)
(bad)
(bad)
dec
stc
cmp
bound
jmp
xchg
(bad)
jmp
repnz
out
xchg
sbb
ret
data16
(bad)
(bad)
jmp
mov
je
and
gs
popf
fadd
mov
ror
jae
sub
jnp
(bad)
(bad)
(bad)
jmp
data16
stc
scas
mov
inc
sub
ret
enter
mov
dec
and
add
adc
scas
push
dec
ins
or
or
rol
dec
and
out
pusha
sub
and
je
clc
sub
and
sbb
(bad)
(bad)
jmp
outs
ds
pop
lock
out
add
scas
push
jnp
cmp
ror
inc
iret
mov
or
(bad)
(bad)
push
or
jnp
movs
jns
sahf
fs
jge
cld
sub
adc
dec
(bad)
lock
(bad)
pop
(bad)
(bad)
(bad)
jmp
jno
jmp
add
into
push
pop
dec
sbb
outs
ret
aaa
mov
leave
jo
cmps
mov
(bad)
(bad)
sub
jecxz
cmps
aam
fisub
adc
mov
or
mov
(bad)
in
pop
das
jl
(bad)
(bad)
jmp
(bad)
std
sbb
and
jns
jmp
or
out
outs
xchg
mov
sub
dec
aaa
(bad)
mov
pop
jle
movs
or
cmps
push
repz
jns
mov
call
push
inc
or
scas
in
inc
sub
out
pop
inc
(bad)
(bad)
(bad)
inc
bound
lock
sbb
fnstenv
rcl
and
call
(bad)
(bad)
jmp
out
(bad)
dec
xchg
clc
add
or
je
sbb
test
adc
pop
retf
jmp
mov
not
push
dec
sbb
pop
shl
clc
(bad)
push
cmp
gs
retf
add
stc
ret
shl
fwait
adc
xchg
icebp
(bad)
mov
xor
sub
outs
push
ret
add
(bad)
in
in
jns
(bad)
jmp
mov
shl
rol
fwait
mov
lahf
mov
or
loope
(bad)
sub
vpxor
arpl
xchg
mov
mov
lods
mov
or
arpl
nop
scas
mov
stos
out
push
add
(bad)
(bad)
(bad)
fadd
scas
jne
fsub
rcl
lahf
inc
(bad)
hlt
ret
div
das
mov
xchg
jne
call
push
btr
cmp
add
test
dec
ins
(bad)
mov
mov
adc
rol
xchg
(bad)
(bad)
(bad)
dec
sub
cmp
je
or
sbb
push
adc
je
(bad)
(bad)
(bad)
(bad)
jmp
xchg
or
imul
pop
out
add
pop
lock
jmp
push
mov
mov
aam
dec
mov
retf
aas
cmps
retf
and
jb
(bad)
jg
sub
jnp
push
sbb
(bad)
or
fxch
xchg
add
mov
adc
sub
cmps
push
lods
cmp
iret
enter
mov
mov
add
jbe
cld
rcr
mov
(bad)
mov
jnp
sub
jns
jg
jmp
dec
and
(bad)
fmul
clc
test
in
xchg
(bad)
std
scas
int
fcom
cmps
rcr
and
movs
and
pop
inc
fcmovnb
out
loop
outs
call
loop
test
or
pop
xchg
xchg
jns
int3
aaa
cld
adc
(bad)
(bad)
(bad)
jg
xor
ret
jl
mov
dec
idiv
out
cld
retf
jnp
cld
addr16
cmps
jle
sub
(bad)
(bad)
call
xchg
mov
pop
fwait
jp
je
and
and
push
cld
or
mov
sbb
scas
adc
sbb
push
(bad)
hlt
add
push
lock
inc
sbb
call
lock
(bad)
in
push
jge
inc
mov
and
sub
arpl
lds
movs
mov
ret
dec
inc
sar
mov
div
adc
outs
adc
xor
(bad)
out
sbb
xchg
add
cs
cli
icebp
add
std
bound
shr
outs
clc
(bad)
dec
or
stos
stc
jno
dec
call
fsubrp
sti
(bad)
xchg
(bad)
(bad)
(bad)
(bad)
cmp
jmp
addr16
jg
je
mov
xchg
fucomip
pop
xchg
jnp
sbb
add
mov
or
mov
out
(bad)
daa
push
(bad)
(bad)
jmp
js
(bad)
mov
or
cmp
arpl
fdiv
scas
cld
(bad)
(bad)
mov
mov
push
mov
or
adc
jmp
sti
sahf
std
pop
(bad)
(bad)
(bad)
push
mov
jnp
ss
movs
cmp
jmp
adc
push
or
fimul
xchg
(bad)
push
xchg
xchg
xchg
cmp
mov
cmps
popa
mov
ficomp
fld
scas
and
jnp
jmp
dec
mov
jle
jl
sbb
outs
and
cmps
push
dec
in
sar
inc
sub
ret
call
into
icebp
dec
dec
push
push
or
adc
xchg
push
fdiv
(bad)
push
dec
mov
inc
dec
lahf
adc
outs
leave
xchg
mov
nop
mov
(bad)
(bad)
(bad)
out
sub
mov
sahf
dec
mov
aaa
mov
dec
cmp
xchg
std
data16
and
outs
sbb
(bad)
jmp
mov
xor
sti
sbb
cwde
aaa
sbb
mov
lods
xchg
(bad)
(bad)
dec
aam
dec
xchg
pop
add
lea
mov
xchg
(bad)
jmp
rol
test
xor
pop
test
retf
cmc
jae
(bad)
(bad)
(bad)
jmp
int3
cwde
pushf
xor
jno
fild
repnz
cmps
or
jmp
push
or
fdiv
cmps
mov
cmp
pop
push
(bad)
mov
push
mov
dec
(bad)
fcomip
push
adc
push
mov
imul
test
push
les
(bad)
(bad)
jmp
loop
aam
pop
(bad)
mov
shl
dec
mov
xchg
xor
jg
jmp
pop
stos
ss
rcr
mov
xor
xchg
call
stos
mov
cmp
call
or
int3
out
(bad)
(bad)
push
cli
sbb
cmps
scas
(bad)
call
xor
call
jge
cs
inc
mov
push
shl
fild
mov
loop
ds
(bad)
(bad)
jg
pop
dec
jb
push
iret
inc
pushf
adc
mov
mov
cmp
pusha
daa
test
cmp
(bad)
call
mov
mov
inc
lods
repz
dec
mov
adc
mov
mov
ds
(bad)
(bad)
dec
jmp
or
rol
jle
adc
add
scas
lds
repz
add
(bad)
inc
push
(bad)
(bad)
(bad)
call
ins
movs
fisubr
mov
call
imul
cmp
outs
jmp
(bad)
mov
imul
xlat
out
push
pop
fnstcw
idiv
lds
push
pop
cld
sbb
scas
xchg
or
mov
mov
inc
cmc
and
xchg
movs
pop
das
sar
mov
mov
xchg
push
dec
push
dec
or
push
push
jmp
or
(bad)
call
mov
jg
inc
cmc
xchg
pop
popa
daa
xchg
sub
mov
(bad)
(bad)
(bad)
std
cmc
in
data16
jns
pop
mov
adc
inc
in
es
xor
rol
push
in
mov
ret
aas
dec
(bad)
jmp
and
jecxz
push
stos
fbld
xchg
xlat
adc
daa
dec
pop
(bad)
(bad)
(bad)
(bad)
call
sub
pop
loopne
scas
jp
mov
push
jo
cmp
push
scas
movs
dec
lahf
add
(bad)
(bad)
(bad)
(bad)
js
push
xchg
sbb
dec
pop
ins
test
call
pop
inc
jns
cmp
push
mov
pop
or
in
popf
jbe
xchg
mov
mov
cdq
pushf
mov
jl
(bad)
dec
pop
inc
xor
mov
(bad)
inc
das
lods
xor
jbe
imul
dec
shl
sub
inc
and
push
dec
ss
(bad)
(bad)
(bad)
fistp
sbb
lea
sbb
arpl
scas
in
jno
fnstenv
fsubr
(bad)
mov
cmp
jg
push
xchg
int3
mov
jl
js
sti
dec
sub
mov
cmp
call
(bad)
movs
push
lahf
fadd
xchg
in
mov
mov
mov
jecxz
or
(bad)
(bad)
(bad)
jmp
push
fstp
shr
or
in
sub
(bad)
sbb
outs
mov
push
and
aad
popf
scas
jb
mov
imul
in
sbb
sbb
nop
imul
cdq
icebp
jmp
(bad)
(bad)
call
add
push
aam
stos
mov
out
xchg
jb
ror
pusha
stos
push
jle
sbb
fcomip
mov
clc
inc
inc
arpl
push
xor
cmp
add
cld
inc
mov
sub
pusha
pop
adc
mov
pop
and
imul
retf
push
mov
add
adc
sti
inc
(bad)
(bad)
call
call
add
mov
sahf
sti
test
inc
inc
dec
shr
jmp
cmps
push
or
adc
xchg
ret
mov
jg
mov
int3
and
and
idiv
sbb
call
daa
dec
push
fsubr
and
aaa
dec
mov
pop
mov
dec
xor
rcr
jb
lods
je
jae
(bad)
(bad)
(bad)
mov
ror
call
js
push
cmp
xchg
out
cmp
cmp
mov
(bad)
jg
jmp
and
or
ds
xor
mov
(bad)
(bad)
(bad)
js
xor
(bad)
pusha
pop
in
fcmovu
and
loopne
neg
int3
in
jmp
sub
mov
inc
scas
dec
hlt
test
lock
fmul
daa
push
scas
sbb
(bad)
(bad)
jmp
pop
jns
jae
cmc
jns
mov
inc
ror
or
push
xor
(bad)
(bad)
jmp
dec
mov
sar
mov
push
push
(bad)
xor
jne
xchg
add
or
rcr
sbb
imul
dec
repnz
or
(bad)
jmp
jb
jns
rol
lahf
loope
shr
in
into
das
push
into
ins
out
(bad)
jns
jp
(bad)
(bad)
(bad)
(bad)
jp
mov
or
mov
fstp
inc
and
jne
push
push
cs
add
push
loopne
mov
xchg
ins
pop
int
push
std
(bad)
(bad)
fst
out
inc
push
mov
jae
je
push
dec
stos
dec
out
cmp
xchg
loopne
cmc
(bad)
jmp
mov
sub
stos
inc
mov
inc
pop
(bad)
(bad)
(bad)
jg
popa
push
pop
test
sub
fcom
mov
pop
push
push
jge
jbe
aaa
cld
fldenv
mov
cs
(bad)
(bad)
inc
and
mov
(bad)
call
push
pop
test
js
adc
mov
adc
xchg
(bad)
(bad)
(bad)
jmp
out
add
test
push
fnstsw
xor
shl
aad
daa
pushf
call
push
or
push
cli
or
mov
xchg
(bad)
out
inc
xchg
outs
or
das
lock
(bad)
fisttp
or
je
mov
pop
add
cmp
(bad)
push
or
pop
sbb
imul
cli
xor
cmp
(bad)
(bad)
(bad)
inc
sub
les
push
in
push
cvtdq2ps
imul
inc
retf
push
stos
cmc
sar
(bad)
(bad)
call
scas
or
push
push
pop
fldenv
loopne
push
sub
cdq
xor
mov
mov
xchg
and
(bad)
mov
jmp
daa
pop
jg
pop
cmc
adc
push
pop
jae
pop
(bad)
(bad)
(bad)
(bad)
fsub
or
mov
fcmovbe
gs
aaa
ret
add
push
xor
sahf
(bad)
push
std
dec
in
in
jmp
pop
arpl
mov
and
adc
jg
push
xchg
out
wrmsr
daa
adc
mov
(bad)
sbb
shr
daa
(bad)
js
(bad)
(bad)
call
lea
jno
xchg
add
ffree
sub
sbb
fcomip
jmp
movs
cmc
inc
jl
or
cli
and
ins
scas
pop
xor
shl
scas
xor
in
xor
sub
jbe
clc
push
ficom
ds
pop
fisub
push
ret
mov
sbb
mov
sbb
jmp
es
mov
cmp
cmc
in
(bad)
inc
xor
fwait
into
lahf
jle
loope
jecxz
popf
fmul
(bad)
(bad)
(bad)
jmp
mov
jg
cmp
stc
in
xor
adc
imul
(bad)
(bad)
(bad)
call
aaa
(bad)
sub
dec
jle
pop
arpl
es
stos
jbe
fwait
(bad)
(bad)
dec
dec
stc
adc
jnp
push
xchg
(bad)
add
popa
popf
cmp
jmp
(bad)
(bad)
(bad)
cmp
enter
or
ins
mov
push
dec
push
sub
mov
dec
call
(bad)
call
xchg
xchg
fs
mov
fidivr
mov
mov
mov
pop
adc
loope
(bad)
movs
jge
out
cld
cwde
in
xor
dec
cmc
(bad)
int
add
popa
call
adc
jl
jecxz
pop
mov
mov
cmc
mov
jmp
cmps
xor
mov
jg
or
adc
jmp
ins
fisttp
or
aaa
(bad)
(bad)
(bad)
push
push
dec
sub
xchg
add
sbb
adc
sti
movs
mov
xchg
dec
cdq
push
xchg
mov
(bad)
jmp
dec
mov
test
cmp
aam
xor
int
imul
cmp
mov
shr
mul
mov
cmps
cmp
(bad)
fbld
jg
sbb
(bad)
outs
in
test
imul
xchg
pop
sub
jno
aas
(bad)
jmp
add
adc
pop
xchg
mov
in
imul
(bad)
lds
push
imul
jmp
xor
fs
adc
ins
gs
and
push
shl
jg
jmp
xchg
sbb
rcr
(bad)
call
(bad)
push
xchg
je
(bad)
leave
and
addr16
lahf
in
dec
sti
or
stc
ficomp
mov
xchg
and
cs
inc
int3
jge
push
shr
and
or
call
jo
dec
push
retf
ins
xchg
div
push
je
mov
int
sahf
addr16
jge
dec
aam
clc
(bad)
(bad)
dec
std
out
or
imul
push
inc
(bad)
sahf
fdivr
(bad)
sbb
push
inc
and
outs
push
and
xchg
jbe
mov
popf
(bad)
(bad)
jg
and
pusha
jbe
ins
cmp
pop
dec
and
sbb
(bad)
(bad)
(bad)
in
outs
test
and
push
aad
popa
dec
pop
(bad)
scas
cld
jo
int3
enter
dec
das
ins
dec
sbb
(bad)
call
sub
sub
cmp
cmp
mov
mov
mov
jecxz
sbb
push
sub
out
(bad)
(bad)
call
jnp
stc
(bad)
sbb
out
sub
dec
jl
adc
mov
fadd
ret
cwde
pop
shld
mov
xchg
jmp
inc
shr
inc
out
stos
xor
outs
les
lods
cdq
leave
(bad)
(bad)
(bad)
call
rcl
push
mov
pop
mov
pusha
fild
dec
adc
dec
(bad)
(bad)
(bad)
jmp
push
(bad)
cmp
repnz
and
mov
fimul
neg
inc
dec
mov
mov
(bad)
out
test
iret
jp
jle
pop
(bad)
popa
stos
aad
ins
pop
push
dec
(bad)
jmp
dec
push
or
aas
add
mov
dec
pop
fwait
jo
(bad)
imul
shl
(bad)
mov
pop
jbe
stos
loopne
rcl
and
cmp
jmp
push
jae
jmp
push
cdq
pop
js
sbb
outs
pop
dec
or
mov
or
ins
rol
es
gs
(bad)
mov
rcl
cmps
sbb
or
ins
xchg
xor
adc
(bad)
inc
out
push
popa
jns
sub
xor
rcl
(bad)
(bad)
inc
cmc
sub
inc
ja
xor
mov
add
push
fmul
(bad)
(bad)
(bad)
inc
dec
cdq
pop
sbb
mov
push
sbb
pusha
scas
ds
(bad)
shl
(bad)
aas
outs
movs
hlt
(bad)
out
in
jb
sub
in
test
or
dec
sub
(bad)
(bad)
push
mov
das
scas
jge
loopne
(bad)
in
mov
call
xchg
mov
mov
cmps
mov
popf
fistp
das
or
rcr
test
jg
dec
movs
pop
xchg
add
aad
and
popa
outs
dec
imul
mov
inc
ds
and
movs
cmp
loopne
sub
(bad)
(bad)
(bad)
push
loopne
addr16
stc
aad
xor
stos
fs
adc
in
daa
pop
inc
(bad)
aad
mov
push
xor
(bad)
call
call
pop
fsub
cmp
mov
jne
push
and
add
or
inc
lods
adc
mov
ins
ds
cmps
add
add
(bad)
(bad)
(bad)
call
mov
cmps
pop
push
sub
push
and
xor
lock
dec
loopne
(bad)
(bad)
(bad)
cmp
or
test
inc
aad
(bad)
fiadd
es
fstp
rol
(bad)
push
adc
push
pop
push
sub
leave
mov
ds
div
cli
ror
jmp
(bad)
(bad)
(bad)
mov
retf
cli
dec
mov
ret
aad
repz
jmp
or
xchg
pop
aas
sahf
(bad)
(bad)
call
scas
in
fdivr
push
and
mov
outs
push
cmps
cmc
inc
jecxz
pushf
ret
jo
(bad)
(bad)
call
dec
fs
cdq
ds
mov
std
cmp
xor
jg
inc
mov
sub
ins
mov
jno
lds
pop
(bad)
(bad)
(bad)
call
stos
mov
cmps
popf
icebp
mov
sti
inc
add
xchg
inc
loope
(bad)
(bad)
dec
sti
sti
cmp
inc
fadd
in
pusha
push
push
(bad)
sub
(bad)
jmp
adc
xor
addr16
xor
in
jmp
inc
and
cwde
es
(bad)
(bad)
jmp
push
mov
and
cli
pop
inc
cmc
and
or
js
or
(bad)
inc
call
(bad)
icebp
jmp
push
sbb
(bad)
(bad)
mov
ins
xor
pop
xchg
ror
icebp
lods
movs
add
dec
int3
ds
sar
sbb
jbe
ss
jnp
xchg
push
mov
ja
xor
(bad)
fisttp
outs
and
inc
loop
(bad)
lock
sub
and
add
inc
pop
retf
add
cmp
(bad)
aad
jns
repnz
and
add
es
pushf
in
ins
jecxz
mov
repz
(bad)
(bad)
call
shr
inc
mov
std
mov
sbb
scas
mov
mov
(bad)
(bad)
jmp
jae
xchg
cli
mov
xor
mov
pop
mov
shl
push
add
pop
pop
cmp
(bad)
(bad)
push
std
fcom
xchg
out
into
push
test
dec
and
mov
sar
pop
hlt
(bad)
dec
cmp
(bad)
sti
stos
and
ss
hlt
je
sub
xor
xor
(bad)
jmp
stos
cwde
nop
sub
xchg
ret
cmp
cli
arpl
jb
ret
mov
mov
(bad)
(bad)
jge
nop
mov
adc
mov
add
stos
je
clc
mov
bound
(bad)
(bad)
jmp
jo
push
retf
outs
mov
mov
mov
test
(bad)
(bad)
(bad)
push
pop
xchg
bound
inc
push
stos
test
out
loopne
loopne
add
adc
push
xchg
pop
(bad)
(bad)
(bad)
jmp
sar
jno
dec
xchg
push
push
inc
aaa
xlat
ins
adc
add
mov
fwait
cmps
mov
mov
xchg
lock
or
(bad)
(bad)
call
inc
(bad)
sar
outs
inc
push
aam
std
loop
pushf
adc
sub
mov
ficomp
inc
rol
pop
daa
sub
sub
sbb
in
dec
iret
inc
mov
xchg
add
xor
push
inc
cs
leave
das
(bad)
xchg
(bad)
std
dec
mov
(bad)
(bad)
inc
mov
add
jl
lds
ror
push
sbb
and
cmps
jmp
dec
das
stos
(bad)
(bad)
(bad)
jmp
sbb
cmps
(bad)
or
pop
adc
(bad)
add
adc
dec
in
(bad)
ficom
(bad)
dec
mov
inc
mov
jno
mov
out
loop
out
dec
add
outs
(bad)
dec
and
mov
or
jl
inc
fbld
imul
mov
iret
pop
xchg
sbb
push
sar
test
int3
in
cmp
stos
popf
fnstenv
jmp
aaa
add
cmp
rcr
cmp
loope
rcr
inc
cmp
loop
and
jmp
shl
sbb
(bad)
push
cmc
push
jo
cmp
fisub
fmul
(bad)
call
mov
pop
cs
push
ja
inc
aaa
es
jae
or
ss
pop
xor
sub
out
outs
cwde
add
adc
ins
sbb
mov
pop
mov
lods
mov
cld
fisttp
(bad)
fisttp
popf
aad
or
ins
and
(bad)
(bad)
(bad)
(bad)
jg
add
daa
jb
and
push
jae
loop
imul
cld
inc
mov
clc
daa
jle
mov
sahf
push
adc
cld
ds
cmp
mov
jmp
or
(bad)
int
xchg
(bad)
mov
fs
dec
cmps
es
fiadd
rcl
xor
cmp
call
push
sub
xchg
cli
jno
(bad)
fisttp
cmp
jmp
ss
ds
int3
(bad)
(bad)
(bad)
(bad)
js
jp
push
inc
mov
push
xchg
pop
xor
mov
inc
fstp
and
inc
mov
test
gs
mov
pop
push
cmps
pop
mov
sub
cld
test
(bad)
dec
jge
(bad)
xor
sub
and
mov
lods
vcvtdq2ps
fnstsw
rol
int
jne
lea
cwde
fisttp
sub
cmp
add
ss
(bad)
(bad)
(bad)
inc
(bad)
in
call
inc
mov
jae
outs
fimul
scas
push
(bad)
cli
test
(bad)
(bad)
cmp
sub
ds
addr16
and
loope
idiv
push
xchg
sub
(bad)
(bad)
push
outs
add
loope
retf
(bad)
adc
(bad)
jmp
outs
mov
and
jbe
(bad)
(bad)
(bad)
jmp
cld
mov
dec
sbb
pop
add
xchg
gs
call
mov
add
pushf
(bad)
(bad)
(bad)
push
dec
int3
jo
cmp
pop
retf
sub
push
jbe
push
rcr
or
or
test
(bad)
(bad)
jmp
mov
push
mov
shl
mov
js
les
(bad)
(bad)
jmp
test
dec
shr
clc
adc
sbb
dec
lea
xor
push
stos
xor
lds
or
ja
sub
xchg
(bad)
(bad)
call
inc
fadd
scas
int3
movs
ja
xor
jo
pop
repnz
add
cmc
(bad)
(bad)
(bad)
(bad)
adc
ret
fcom
(bad)
adc
stos
(bad)
icebp
mov
call
popf
(bad)
(bad)
(bad)
(bad)
jle
lahf
dec
or
sub
inc
xor
ds
pop
jae
mov
bound
inc
fld
fs
leave
(bad)
(bad)
(bad)
call
sub
jmp
jmp
inc
fsub
xchg
cmp
cli
mov
(bad)
push
repz
pop
and
lods
jne
cld
into
pop
jp
out
in
(bad)
jmp
enter
xor
icebp
(bad)
cmc
push
enter
push
les
or
mov
ja
pop
dec
mov
addr16
int
xor
jge
jle
jg
cld
dec
mov
ds
dec
sub
scas
cmc
push
(bad)
es
ins
sub
(bad)
(bad)
push
clc
xor
imul
xor
add
xor
dec
inc
test
(bad)
(bad)
call
imul
pusha
pop
pop
js
mov
int3
repz
mov
cmc
push
(bad)
(bad)
mov
add
out
cmp
mov
and
jns
inc
loop
scas
inc
fistp
(bad)
sbb
add
xor
sahf
inc
push
aad
xchg
mov
js
push
ds
out
mov
pop
ret
pop
test
fstp
pop
(bad)
(bad)
(bad)
push
or
xchg
mov
mov
jp
xor
jmp
mov
pop
sti
cmp
fwait
(bad)
dec
popa
int3
test
psubusb
cwde
dec
cmp
pop
sub
sti
and
jg
call
dec
sub
bswap
dec
sbb
mov
imul
(bad)
(bad)
dec
and
inc
xor
xor
(bad)
push
dec
stc
imul
jae
mov
(bad)
push
jle
fadd
in
mov
pop
in
inc
mov
and
das
fdiv
ror
mov
(bad)
(bad)
(bad)
(bad)
jp
std
sbb
push
ror
sbb
sar
xchg
xor
push
sbb
jg
jg
(bad)
inc
inc
add
jno
std
inc
adc
std
and
retf
push
or
(bad)
(bad)
cli
sti
push
sbb
ins
inc
push
ret
nop
mov
(bad)
(bad)
(bad)
fsubr
xchg
repnz
dec
pop
cdq
and
inc
inc
cmp
inc
lock
fimul
jae
mov
inc
jne
and
aad
cld
pop
mov
stos
cs
xchg
test
xchg
(bad)
call
xor
shl
sub
call
add
inc
push
pusha
push
imul
(bad)
push
xchg
loopne
lds
jae
aad
out
je
(bad)
xchg
cmp
inc
mov
dec
ins
std
xchg
push
out
adc
xchg
cdq
adc
push
or
scas
sahf
addr16
pop
jecxz
es
push
sbb
(bad)
(bad)
jg
adc
or
inc
pop
mov
inc
cmp
or
mov
mov
sar
scas
gs
lods
jl
cld
loopne
mov
popa
dec
sbb
lahf
push
clc
mov
cmp
stos
jmp
and
dec
jb
jb
mov
call
mov
fild
push
fwait
dec
jnp
mov
push
and
in
aaa
fs
loop
out
cs
jg
movs
int3
inc
test
mov
push
sub
inc
(bad)
(bad)
(bad)
dec
xchg
dec
add
xor
and
mov
sub
in
nop
in
push
fwait
inc
inc
pop
bound
inc
int
sbb
(bad)
call
jmp
mov
sub
(bad)
jb
adc
mov
ss
retf
call
mov
loopne
push
sub
imul
(bad)
(bad)
dec
sub
sub
fisub
dec
test
cmp
(bad)
cli
and
mov
ins
cmp
xor
mov
adc
(bad)
dec
fwait
xor
ror
scas
xchg
into
xor
ja
or
and
popf
adc
bound
repnz
inc
jmp
add
popf
xchg
iret
in
sahf
and
mov
into
adc
ins
inc
xchg
pop
add
jg
fs
add
inc
sbb
push
push
int3
pop
pop
adc
in
fs
(bad)
(bad)
call
xor
pop
sbb
adc
cmp
mov
sbb
xchg
cmp
(bad)
dec
cmp
rcl
fwait
jp
jg
call
test
test
neg
mov
repz
imul
hlt
(bad)
in
xchg
sti
mov
shr
dec
dec
repz
jmp
lods
sti
(bad)
(bad)
(bad)
out
repnz
dec
lock
lock
pop
cli
mov
mov
std
das
das
mov
int
cmp
imul
test
cmc
xlat
cmp
lds
and
icebp
mov
dec
add
sub
sbb
dec
mov
les
out
jg
rol
mov
in
loopne
clc
ins
pop
jmp
(bad)
push
mov
fistp
int3
(bad)
call
retf
es
adc
adc
(bad)
(bad)
(bad)
(bad)
mov
retf
pop
stos
mov
jne
sub
retf
dec
inc
push
sbb
or
ret
(bad)
sub
int3
into
xchg
sub
(bad)
(bad)
dec
sti
sub
aas
ja
test
sub
mov
fild
push
lds
jp
xor
(bad)
(bad)
(bad)
push
push
mov
adc
xchg
xchg
jecxz
es
bound
mov
mov
push
mov
sar
(bad)
fisttp
nop
mov
imul
pop
call
cld
(bad)
jmp
dec
xor
mov
xchg
call
adc
push
jmp
clc
inc
fsubp
xor
test
outs
xor
push
aad
stos
sub
sbb
(bad)
jmp
loope
cmp
retf
and
mov
dec
jo
das
push
scas
ins
or
test
dec
loop
inc
aaa
jle
(bad)
(bad)
(bad)
mov
or
cmp
sub
sub
pop
dec
mov
sub
add
add
(bad)
(bad)
call
jno
movs
into
jl
dec
xchg
jb
icebp
sbb
cmp
jg
adc
enter
out
(bad)
(bad)
dec
mov
pop
push
adc
cmp
cmp
inc
jno
pop
adc
sub
adc
call
mov
mov
fadd
cmps
lahf
test
outs
call
outs
(bad)
push
cmps
mov
stos
bound
inc
inc
fisubr
mov
ins
add
cld
cmp
(bad)
(bad)
(bad)
inc
cwde
int
cmps
arpl
(bad)
and
and
jge
repnz
cmp
pusha
or
pop
hlt
mov
call
jnp
xor
pop
jp
or
add
inc
cmps
and
and
(bad)
sub
push
mov
dec
loopne
fisubr
mov
xor
call
xor
adc
sbb
mov
(bad)
(bad)
call
cmps
fdiv
cmp
in
inc
je
sbb
pop
cmps
pop
ja
inc
sbb
clc
(bad)
cld
sub
aad
sub
or
xchg
add
ror
retf
daa
retf
push
mov
(bad)
(bad)
inc
fucom
add
(bad)
popf
jns
in
sbb
push
adc
(bad)
(bad)
jmp
scas
mov
sti
xor
xor
jns
xor
jmp
mov
(bad)
mov
jnp
and
(bad)
(bad)
(bad)
jmp
jb
retf
hlt
test
or
nop
add
int
and
adc
jl
mov
test
mov
(bad)
js
or
mov
add
sub
call
stos
ja
xchg
(bad)
rcl
cmc
xchg
inc
adc
js
sbb
jmp
icebp
ret
pop
scas
pop
pop
cdq
mov
shr
jl
pop
into
bound
jl
imul
(bad)
sbb
(bad)
jmp
cmp
adc
das
test
jge
retf
sub
or
or
jmp
dec
sti
enter
mov
dec
push
dec
mov
in
fcmovnbe
repz
jl
cli
add
stos
jl
sbb
lods
push
xor
adc
js
fdivr
pushf
cld
mov
adc
push
sbb
mov
pop
or
bound
dec
arpl
and
adc
cmp
(bad)
(bad)
call
sub
loope
mov
inc
xchg
pop
pop
or
(bad)
cwde
cs
xor
aad
sub
mov
dec
jmp
daa
or
sub
mov
mov
sar
rcr
sub
and
(bad)
dec
jle
fs
clc
mov
sbb
jmp
out
jecxz
hlt
mov
scas
loop
cdq
in
ds
push
popa
xlat
xchg
sar
(bad)
call
enter
jno
cli
add
pop
add
fdivr
mov
clc
shr
(bad)
(bad)
inc
outs
mov
pop
mov
or
or
(bad)
(bad)
(bad)
mov
cs
sbb
shl
dec
and
or
(bad)
stos
adc
(bad)
(bad)
jmp
or
and
xchg
xor
or
add
mov
mov
push
ficom
nop
imul
(bad)
(bad)
call
fild
out
xor
push
loope
scas
int
mov
mov
(bad)
jg
movs
inc
inc
rcr
loopne
arpl
push
mov
rcr
jg
mov
cmp
sar
pop
pop
jmp
(bad)
repnz
nop
test
adc
(bad)
jmp
retf
and
call
cmp
ins
ins
sub
add
dec
jae
mov
jg
add
jno
test
pop
pop
inc
call
pop
fcos
(bad)
jg
imul
push
sar
(bad)
aas
adc
ss
data16
retf
nop
xchg
jne
stos
(bad)
push
inc
adc
jo
loopne
adc
out
jns
mov
xchg
jmp
xor
ins
repnz
fst
add
out
add
mov
ja
adc
add
mov
fcomip
(bad)
(bad)
out
jne
mov
and
inc
adc
(bad)
mov
adc
jmp
cmp
fldenv
retf
jl
(bad)
(bad)
(bad)
push
xchg
shl
lea
jmp
xor
xor
cmps
xchg
dec
add
bound
shl
es
(bad)
(bad)
inc
repz
mul
add
int3
xchg
jle
dec
cmps
push
leave
xchg
jno
ret
mov
sar
xchg
(bad)
jo
add
rol
(bad)
mov
(bad)
(bad)
jg
fld
cmp
cld
jmp
push
or
mov
mov
(bad)
dec
jae
sub
in
xchg
push
pusha
xchg
ins
cs
push
push
mov
(bad)
cmp
std
call
(bad)
call
lahf
dec
push
mov
cld
inc
xchg
stos
retf
lods
mov
xor
push
pop
adc
inc
push
mov
into
imul
push
data16
mov
and
jne
pop
add
mov
je
add
mov
lock
push
dec
stos
mov
arpl
xor
(bad)
in
ss
inc
lods
gs
mov
es
loopne
jmp
imul
mov
jecxz
scas
setae
cs
ret
leave
popf
cwde
or
fcomip
or
adc
mov
add
(bad)
(bad)
(bad)
jl
es
push
mov
sbb
sbb
dec
clc
ins
in
xor
(bad)
inc
retf
sub
daa
lods
and
rol
repz
pop
cs
(bad)
call
dec
and
push
popf
dec
rcr
and
mov
test
cmp
xchg
cmp
push
jl
or
cdq
mov
rcr
ins
xchg
fistp
dec
dec
push
pop
psubusw
add
push
lock
push
test
mov
dec
inc
(bad)
enter
push
test
fs
movs
push
push
enter
rcl
(bad)
jmp
and
adc
pop
cli
sti
and
jb
hlt
mov
inc
mov
adc
or
mov
sar
(bad)
(bad)
jmp
jno
stc
adc
pusha
cmp
adc
dec
add
xor
jno
out
das
fwait
inc
test
(bad)
jmp
or
movs
fmul
hlt
in
and
or
or
mov
mov
adc
adc
cmp
fdiv
sti
movs
add
ret
mov
fdivrp
and
pop
or
cmps
jne
pusha
loopne
ja
(bad)
(bad)
(bad)
mov
popa
(bad)
test
mov
lds
sti
movs
pop
mov
mul
(bad)
(bad)
(bad)
(bad)
jp
movs
and
(bad)
push
xchg
xlat
xor
retf
outs
sub
pusha
icebp
adc
dec
in
(bad)
(bad)
(bad)
inc
out
scas
mov
and
(bad)
lods
cmps
or
in
les
fisttp
push
adc
inc
maskmovq
test
dec
sbb
in
xchg
test
ror
xchg
aad
and
(bad)
dec
test
inc
adc
stc
mov
and
mov
fisubr
push
out
xchg
ja
mov
(bad)
jmp
popf
out
mov
or
mov
mov
pop
repnz
pop
lahf
outs
mov
(bad)
(bad)
dec
push
cmp
arpl
pop
aaa
fsubr
push
mov
ja
mov
jbe
pop
dec
(bad)
(bad)
push
xlat
pop
sbb
sbb
or
xor
mov
(bad)
(bad)
jmp
scas
sar
mov
std
lods
and
movs
mov
in
adc
sbb
test
or
jno
sbb
fistp
jns
mov
push
sbb
sti
(bad)
(bad)
inc
sub
mov
cmp
inc
(bad)
stc
sub
inc
int3
xchg
repz
(bad)
(bad)
(bad)
mov
and
or
and
push
push
fsub
xor
dec
retf
push
movs
scas
and
retf
dec
(bad)
(bad)
(bad)
shl
mov
je
outs
leave
dec
pop
aas
scas
sbb
fdiv
dec
jmp
push
sub
repz
push
xor
sbb
out
data16
inc
std
sub
pop
mov
fwait
sub
mov
in
mov
imul
outs
push
dec
cmp
(bad)
call
inc
add
dec
or
push
js
dec
test
sbb
sub
jg
(bad)
(bad)
fsub
scas
inc
ss
mov
sbb
push
mov
jmp
cmps
xchg
cli
(bad)
(bad)
fsubr
push
xchg
push
inc
inc
out
out
cld
arpl
mov
call
call
mov
sbb
aad
movs
dec
lds
dec
mov
push
clc
ss
add
(bad)
inc
add
sahf
sbb
cmp
dec
add
xchg
out
retf
(bad)
(bad)
(bad)
(bad)
mov
test
inc
movaps
dec
xchg
js
and
outs
dec
ins
fcom
pop
(bad)
(bad)
inc
push
ss
lock
ret
xor
jns
jne
or
call
(bad)
stc
fisttp
mov
(bad)
xor
adc
into
popf
and
(bad)
(bad)
call
cmp
(bad)
clc
or
fsub
jmp
add
xor
(bad)
(bad)
jmp
cmp
in
sub
retf
add
mov
es
repz
cmp
ficomp
lock
(bad)
inc
sub
mov
fst
sbb
adc
loope
sbb
mov
jg
or
shl
or
cli
mov
popa
lods
push
(bad)
push
mov
(bad)
jmp
push
pop
jmp
xchg
les
test
aas
aad
mov
mov
fwait
inc
sub
(bad)
fcomip
adc
mov
push
bound
fadd
xor
cs
(bad)
(bad)
(bad)
inc
cmp
push
or
push
adc
lods
cmp
(bad)
loopne
adc
push
sub
loop
icebp
in
out
and
(bad)
jmp
jle
test
mov
inc
lds
(bad)
pop
in
lea
and
mov
lods
push
mov
daa
(bad)
(bad)
(bad)
(bad)
out
pop
enter
mov
pusha
fldenv
popf
adc
mov
pop
push
and
or
xchg
(bad)
(bad)
(bad)
inc
dec
adc
mov
jbe
fstp
fisttp
cwde
xor
test
inc
jg
and
sbb
cdq
push
pop
icebp
and
dec
add
(bad)
jg
loop
movs
ret
jmp
cmps
dec
into
pop
out
mov
adc
iret
jbe
test
pop
nop
or
mov
sbb
movs
dec
sahf
movs
sbb
mov
outs
loop
push
aaa
(bad)
(bad)
(bad)
(bad)
jns
mov
test
lock
jnp
pop
outs
sbb
cmc
ds
iret
push
call
cwde
pop
repnz
pop
or
ret
mov
into
aaa
jnp
mov
inc
pop
repnz
push
jge
(bad)
(bad)
call
movs
pop
imul
test
in
mov
gs
mov
push
inc
mov
push
xchg
(bad)
mov
cld
iret
fwait
push
aam
jnp
push
xor
movs
xchg
xchg
(bad)
fsubr
mov
xchg
cmc
mov
call
jecxz
out
mov
mov
push
add
jno
movs
mov
fwait
sbb
mov
push
fidiv
sub
and
loope
hlt
dec
push
lods
outs
mov
jg
dec
stc
mov
mov
out
in
jl
cdq
pop
dec
fldenv
lea
jmp
call
pop
add
pop
call
ja
push
clc
hlt
mov
out
jmp
inc
sbb
lock
dec
fldcw
cld
sub
test
fwait
loopne
ret
mov
out
addr16
adc
(bad)
push
sbb
xchg
sbb
xor
pusha
xchg
cmp
ins
cmps
mov
(bad)
repz
(bad)
(bad)
call
mov
inc
jp
xchg
or
add
les
jnp
sbb
fstp
das
push
lds
mov
pop
push
jle
(bad)
(bad)
push
fdivr
dec
arpl
mov
xchg
inc
add
cmp
sub
lock
inc
mov
sub
movs
xchg
and
inc
(bad)
(bad)
(bad)
call
and
xchg
popf
sbb
mov
jae
sti
loop
bound
mov
dec
adc
push
jp
clc
stc
inc
adc
ins
sub
mov
mov
cmc
mov
js
(bad)
(bad)
(bad)
jmp
ror
push
xchg
and
adc
push
xor
lea
lods
test
lahf
fs
retf
mov
(bad)
(bad)
push
div
fucomp
adc
and
sbb
push
sbb
or
fisttp
(bad)
(bad)
push
jmp
outs
xor
mov
mov
adc
mov
jmp
movs
add
xchg
sub
ss
adc
mov
xchg
mov
adc
push
(bad)
fcomip
push
stos
stc
cmps
rcl
dec
pop
in
mov
jno
jne
jae
in
(bad)
dec
lock
aas
ja
outs
test
aas
or
aad
sub
(bad)
jmp
inc
jmp
cld
pop
test
or
and
outs
push
scas
push
mov
sar
leave
je
out
(bad)
(bad)
(bad)
dec
loope
jg
div
test
xor
cmp
jo
out
xchg
ret
mov
mov
test
std
(bad)
(bad)
inc
mov
inc
mov
mov
fistp
call
inc
hlt
xor
(bad)
(bad)
push
add
or
mov
stc
sub
out
loopne
call
mov
jmp
xlat
mul
jmp
sbb
or
es
fcmovu
mov
and
(bad)
push
or
(bad)
(bad)
(bad)
(bad)
sbb
out
sbb
shl
push
sahf
outs
in
not
lods
fdecstp
sti
sub
(bad)
rcl
mov
or
jp
add
push
jle
add
mov
in
movs
sbb
cld
(bad)
(bad)
push
push
cmp
popf
mov
inc
pop
xchg
fcomip
mov
and
(bad)
(bad)
push
xlat
stc
jle
out
popf
arpl
lea
pop
push
setbe
fs
xor
sub
(bad)
cmps
mov
ja
bound
sbb
and
in
pop
popa
pop
(bad)
mov
and
mov
fcmovne
daa
test
rcl
sub
(bad)
(bad)
call
jbe
lahf
xchg
dec
add
xchg
xor
jnp
dec
div
mov
jecxz
pop
addr16
(bad)
cld
lods
repz
outs
push
cmp
lahf
push
mov
sbb
pop
jle
sbb
jl
test
inc
fsub
in
mov
adc
fs
push
cld
cdq
repnz
rol
push
xchg
cmp
xchg
call
(bad)
(bad)
(bad)
jmp
pop
inc
ds
test
arpl
aaa
mov
add
cmps
jle
xor
call
loop
mov
aad
adc
xchg
nop
stc
push
or
xor
scas
pushf
push
jmp
clc
mov
xchg
fdivr
or
ja
rol
(bad)
inc
adc
in
push
jne
push
xchg
jno
out
movs
jl
(bad)
rcr
mov
(bad)
pusha
in
outs
mov
or
and
cmps
or
fst
in
or
je
bound
add
(bad)
(bad)
(bad)
dec
pop
sbb
adc
xor
mov
push
call
jbe
sbb
add
shl
fwait
dec
cld
jmp
jl
loop
sub
bound
pop
(bad)
(bad)
(bad)
call
mov
aas
push
dec
xchg
aaa
mov
cmc
or
pop
hlt
stos
outs
fild
fld
int
jno
(bad)
(bad)
jmp
mov
jge
or
stos
iret
iret
fistp
(bad)
(bad)
mov
cmc
(bad)
mov
pusha
add
iret
fs
xchg
out
jno
sbb
(bad)
(bad)
(bad)
push
loope
jb
call
cmp
mov
jmp
add
(bad)
jmp
imul
sub
retf
ss
push
cmps
and
(bad)
jmp
in
or
enter
sub
lods
add
pop
sbb
or
xchg
in
xlat
jg
and
out
fisub
je
rcl
imul
sbb
xchg
gs
(bad)
loope
fcomp
mov
repz
push
jge
retf
jg
(bad)
jmp
jbe
or
mov
rol
fs
loop
add
pop
jg
(bad)
dec
cs
sbb
xor
inc
jecxz
loop
adc
mov
(bad)
(bad)
inc
pusha
push
jecxz
adc
out
or
(bad)
ret
inc
mov
push
call
jmp
push
and
inc
(bad)
nop
imul
mov
js
add
call
jmp
ds
or
inc
and
or
pop
mov
push
das
popf
stc
(bad)
(bad)
(bad)
jmp
aas
or
add
into
test
xor
retf
mov
ss
cld
call
inc
stc
sub
adc
arpl
test
push
jo
and
inc
pop
sbb
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
imul
mov
cmp
sbb
xor
push
sub
ret
sbb
push
jge
movs
fidivr
mov
jae
sub
xor
repz
fdivr
das
clc
push
add
pop
fadd
jae
fs
repnz
mov
(bad)
call
mov
pusha
mov
jp
mov
scas
lods
fiadd
mov
mov
mov
xchg
fsub
xchg
mov
pop
sub
cmp
mov
sub
sbb
pop
test
es
xchg
test
adc
scas
inc
call
aad
xor
dec
lahf
jno
fnop
dec
sbb
sub
(bad)
popa
pop
mov
out
mov
pop
push
(bad)
(bad)
(bad)
jg
lock
jns
sbb
(bad)
xor
jmp
movs
xor
or
(bad)
(bad)
jmp
scas
ins
test
rcr
pop
neg
loop
gs
rcl
cmp
dec
cmp
xor
cs
cdq
mov
mov
call
add
loop
ds
(bad)
(bad)
(bad)
jmp
int3
xchg
mov
push
(bad)
pop
push
cmp
and
sub
bound
dec
(bad)
(bad)
call
and
ret
mov
nop
xor
cli
sub
cs
popf
and
(bad)
(bad)
inc
test
ret
sbb
cmp
cmp
sub
adc
or
popa
std
dec
add
stc
mul
sar
cs
clc
add
xchg
inc
ret
dec
mul
add
pop
mov
test
(bad)
(bad)
fcomip
and
push
adc
push
push
repz
push
and
and
cdq
idiv
(bad)
call
pop
jbe
std
scas
sub
mov
or
mov
stos
push
cmp
int3
push
sub
dec
push
inc
jle
xchg
jnp
out
hlt
xor
fwait
pop
test
xor
lods
lods
leave
push
in
sar
call
mov
push
(bad)
shl
in
fstp
mov
and
pop
mov
repz
aam
fld
jmp
retf
xor
aaa
add
ja
test
lods
xchg
xchg
daa
adc
and
(bad)
(bad)
jmp
add
daa
xchg
iret
shr
in
int3
mov
sub
lahf
(bad)
(bad)
(bad)
(bad)
jl
ins
std
rol
dec
jno
call
jle
push
mov
cdq
jnp
jns
xor
(bad)
(bad)
(bad)
call
cmp
out
cmp
lock
inc
jp
lods
data16
jg
inc
std
sahf
xlat
(bad)
jge
aad
sbb
jae
xchg
add
(bad)
mov
es
dec
jnp
shl
dec
lea
add
push
test
(bad)
(bad)
jmp
dec
pop
inc
imul
mov
mov
jmp
push
lahf
fcmovnu
mov
lods
cmp
ins
mov
neg
adc
and
adc
cld
jmp
test
idiv
(bad)
imul
ret
dec
jb
lahf
ds
(bad)
(bad)
(bad)
call
mov
add
(bad)
xor
and
std
pop
xchg
ja
pop
add
(bad)
(bad)
(bad)
call
adc
or
stc
inc
out
inc
xlat
xchg
scas
das
out
dec
lea
scas
inc
(bad)
cs
sub
(bad)
dec
lock
mov
je
lds
jecxz
mov
xchg
mov
(bad)
(bad)
neg
mov
mov
loope
pop
jo
sbb
cld
(bad)
pop
sbb
fsubr
dec
sbb
call
mov
fs
into
shl
es
sub
xchg
out
mov
cmp
(bad)
(bad)
call
outs
sbb
inc
fprem
outs
sbb
loope
aaa
xchg
or
mov
or
es
sar
call
cld
jp
mov
(bad)
std
cmp
sub
dec
les
push
xchg
repz
adc
(bad)
(bad)
(bad)
(bad)
mov
fistp
jmp
mov
arpl
push
or
call
loopne
jo
dec
pop
mov
cs
inc
mov
sbb
mov
mov
dec
in
les
jb
cmp
xor
(bad)
sbb
cmc
outs
dec
pop
loopne
adc
test
add
bound
test
or
and
or
mov
xchg
popf
addr16
aam
(bad)
push
ret
les
in
scas
and
movs
icebp
out
push
pop
mov
sub
add
mov
dec
push
add
push
sbb
pop
or
jp
(bad)
(bad)
(bad)
(bad)
dec
out
mov
push
gs
add
jmp
outs
(bad)
pop
sub
aaa
cld
in
clc
add
sub
pop
mov
cmp
pop
nop
fdivr
(bad)
jg
jno
into
pop
xor
or
or
sahf
lds
mov
(bad)
(bad)
(bad)
push
mov
popa
sub
cmp
hlt
jg
imul
jge
or
jmp
mov
daa
dec
mov
aas
out
into
ret
repnz
xor
pop
pop
std
cs
jg
push
sahf
xor
inc
jge
or
out
sub
inc
xchg
(bad)
adc
mov
sub
(bad)
(bad)
(bad)
jg
mov
out
pusha
nop
xor
or
push
add
pop
scas
inc
sub
dec
stos
outs
push
push
jmp
in
mov
mov
lock
mov
call
sbb
sub
dec
sbb
rcr
pop
sub
adc
(bad)
jg
push
pushw
sbb
sar
mov
ret
sub
lahf
pop
sub
pop
inc
icebp
xchg
aas
sar
(bad)
fidivr
aam
mov
loop
fsubr
fstp
and
(bad)
jg
push
mov
ds
lods
mov
mov
ds
clc
jge
outs
shl
cmp
add
fcomip
push
push
inc
retf
push
xor
das
fs
xchg
int3
call
add
and
(bad)
(bad)
(bad)
(bad)
cli
jo
je
or
sbb
dec
or
jg
dec
scas
lahf
mov
ds
pop
push
inc
(bad)
jmp
lea
leave
fcomi
mov
(bad)
mov
pop
add
imul
fimul
ss
sbb
stos
mov
dec
mov
std
push
sbb
int3
into
dec
out
cmps
repz
mov
out
cli
or
inc
pop
inc
inc
inc
mov
imul
les
add
fiadd
lods
call
jbe
(bad)
inc
das
or
mov
repz
mov
mov
inc
mov
inc
xlat
mov
out
xchg
popa
ss
mov
loopne
cmp
mov
(bad)
mov
push
imul
mov
dec
sbb
mov
sahf
mov
jo
aam
mov
jne
and
cmc
std
(bad)
jmp
loop
push
bound
cmp
dec
push
mov
js
or
js
(bad)
(bad)
call
mov
fcmovnb
push
pop
out
fyl2xp1
push
arpl
shl
mov
sahf
sbb
inc
out
xchg
fisub
loope
aaa
icebp
loopne
mov
shl
ja
retf
inc
arpl
push
out
popa
mov
inc
sub
dec
jo
adc
cmp
jle
icebp
mov
push
aas
or
add
(bad)
repz
xchg
push
dec
mov
sar
mov
dec
mov
into
mov
into
mov
popf
popa
jge
or
jp
or
mov
repnz
(bad)
call
outs
test
sub
fnstenv
out
out
mov
jle
cmp
inc
sub
push
(bad)
loopne
(bad)
dec
push
ss
outs
sub
icebp
xchg
mov
add
scas
sahf
loope
push
cmc
movs
outs
add
push
ins
call
jg
leave
int3
jo
shr
cmp
ret
in
sti
jg
mov
inc
test
dec
or
test
add
(bad)
push
add
in
or
rcl
mov
(bad)
fild
jmp
rcl
(bad)
bound
imul
(bad)
(bad)
call
cmp
out
jmp
out
out
mov
lods
push
or
xchg
pop
out
(bad)
repz
mov
(bad)
(bad)
(bad)
push
aam
jmp
lahf
dec
add
or
test
ret
mov
mov
js
(bad)
(bad)
call
ds
mov
inc
fadd
cmp
sub
ins
in
cli
(bad)
inc
pop
and
(bad)
sbb
repz
mov
add
(bad)
jmp
push
lahf
enter
scas
pop
sbb
clc
(bad)
call
cmp
add
jnp
xchg
loopne
scas
movnti
jmp
cmp
test
retf
repnz
jg
dec
out
aad
and
and
push
lock
jb
(bad)
jl
scas
cli
(bad)
inc
pusha
xor
shl
push
retf
xor
mov
mov
js
(bad)
jmp
sbb
and
rol
mov
in
mov
imul
repnz
mov
cmps
mov
dec
retf
dec
jl
mov
outs
(bad)
(bad)
(bad)
call
xchg
mov
sub
int
mov
jle
popa
pop
test
pop
in
pushf
mov
mov
push
cmp
cmps
pop
cmps
rcl
mov
in
cmp
in
sub
lds
icebp
and
pop
in
jle
shl
pusha
movs
sar
(bad)
(bad)
(bad)
or
mov
in
bound
ret
imul
gs
(bad)
(bad)
inc
sub
xor
ins
idiv
out
test
mov
sahf
inc
or
ret
(bad)
jmp
push
cmps
nop
in
js
out
pop
sbb
ins
(bad)
(bad)
(bad)
mov
fdiv
pop
add
mov
push
jnp
pop
sub
mov
(bad)
(bad)
(bad)
fistp
std
ret
pop
pop
fimul
xchg
adc
inc
shr
popa
xor
mov
pop
push
jecxz
test
loopne
(bad)
cmp
sbb
lea
xlat
leave
adc
mov
into
dec
repz
mov
pop
add
aas
mov
add
mov
ja
leave
scas
add
int
int3
cld
call
xchg
add
in
iret
clc
cs
fidivr
clc
push
inc
jmp
jmp
in
or
jmp
cmp
jo
mov
clc
rol
fdiv
mov
mov
jno
test
ins
lock
(bad)
(bad)
(bad)
inc
je
mov
sbb
in
mov
sub
cmp
cmp
test
inc
test
inc
sub
(bad)
push
push
add
mov
clc
rol
icebp
push
push
frstpm(287
ret
call
lock
cld
pop
addr16
imul
cmp
dec
loope
or
fmul
mov
fdivr
jg
inc
dec
cmp
sar
or
fucomi
test
popa
out
in
sar
hlt
push
inc
pop
lock
mov
adc
jno
das
adc
xchg
cmps
push
fadd
cs
mov
and
je
cli
mov
lahf
stos
add
jp
jno
pop
clc
cmp
dec
push
(bad)
cmp
aas
jbe
xchg
push
add
mov
pushf
xor
(bad)
mov
cmps
adc
ins
sbb
jle
push
jl
xchg
gs
mov
sub
(bad)
ds
stos
fsub
arpl
jno
call
clc
shl
frstor
fcomip
sub
or
aaa
std
inc
daa
stos
and
and
add
lahf
cmp
or
clc
adc
or
jl
cmc
pushf
cvtps2pi
xor
push
fisub
and
xchg
ins
int
sar
dec
push
sbb
call
dec
xor
xlat
add
xchg
xor
mov
push
pop
nop
pop
in
btr
adc
inc
push
into
sti
and
inc
sbb
stc
push
stos
mov
sbb
nop
ror
addr16
(bad)
(bad)
dec
xor
sub
jmp
adc
mov
out
pop
sub
dec
es
jae
inc
test
sub
pop
mov
call
jnp
mov
dec
imul
mov
xor
cld
jae
cld
sbb
out
(bad)
(bad)
(bad)
call
scas
push
cmp
xchg
push
jecxz
inc
add
push
mul
sbb
sbb
(bad)
(bad)
mov
or
fstp
push
retf
add
iret
inc
std
aam
adc
xchg
jbe
outs
test
(bad)
loop
aad
push
(bad)
pop
stc
movs
out
scas
fld
dec
jl
fs
(bad)
(bad)
jmp
jo
sbb
xor
push
ins
test
hlt
fcom
jp
aaa
and
cmp
sbb
cld
jno
or
dec
(bad)
(bad)
inc
dec
dec
cmc
mov
xchg
or
paddd
shr
add
xchg
jecxz
pusha
bound
test
push
(bad)
mov
push
fstp
mov
ficomp
add
lea
dec
int3
jmp
rcr
(bad)
(bad)
(bad)
dec
sbb
lods
xchg
jl
cld
jne
cmp
ss
fadd
stos
(bad)
(bad)
push
xchg
pop
pop
loope
and
push
mov
test
movs
pop
js
fidivr
(bad)
jmp
push
fimul
ds
(bad)
xor
sub
shr
imul
sbb
(bad)
inc
inc
pop
add
dec
inc
test
fnstsw
xchg
mov
sub
(bad)
in
call
jo
bound
pop
lods
rcl
lock
inc
pop
add
fild
push
or
pop
ins
or
mov
pop
repz
jne
(bad)
(bad)
dec
jnp
cmp
retf
mov
xor
je
cmp
(bad)
mov
inc
aam
outs
into
adc
neg
ret
mov
xchg
push
push
mov
or
(bad)
(bad)
mov
iret
shl
pop
mov
pop
in
lock
dec
jnp
sbb
(bad)
jg
jg
sub
retf
cmp
mov
and
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
out
fadd
fwait
inc
lea
cmp
clc
xchg
jge
cdq
xchg
test
sar
mov
pop
or
add
xor
mov
mov
pop
(bad)
(bad)
(bad)
push
fsub
inc
and
pop
scas
push
cmp
mov
xor
nop
mov
movs
cli
(bad)
mov
int3
test
ins
pop
ins
sbb
xchg
cdq
jmp
(bad)
jmp
fild
jb
inc
xor
loopne
cmps
ins
sub
cli
(bad)
mov
add
cmc
and
sbb
in
sbb
mov
sbb
fist
or
mov
mov
cmp
jge
xchg
enter
jmp
aam
push
(bad)
(bad)
std
mov
pushf
jno
(bad)
fimul
jns
fs
js
pop
test
out
xchg
dec
push
pop
loopne
inc
add
sub
aam
(bad)
cmp
stos
jmp
daa
xor
(bad)
dec
shr
adc
adc
imul
cli
lahf
ins
push
pushf
lahf
sbb
lahf
sub
(bad)
(bad)
jmp
leave
pushf
jmp
dec
ret
gs
or
lock
(bad)
(bad)
sbb
jmp
(bad)
(bad)
call
xor
and
xchg
cli
in
sti
sbb
pop
movs
(bad)
(bad)
call
mov
imul
jmp
fstp
sahf
mov
dec
cmps
xchg
ins
jecxz
inc
retf
call
pop
xor
fsubrp
(bad)
jmp
mov
sbb
sbb
mov
lds
aam
mov
dec
sbb
icebp
(bad)
(bad)
jmp
sete
or
mov
mov
jae
xor
sbb
add
call
add
aaa
shl
aaa
cs
mov
push
std
(bad)
inc
xchg
and
and
pop
lods
xchg
mov
vhaddps
arpl
xchg
(bad)
(bad)
(bad)
(bad)
ds
addr16
into
cmp
inc
clc
inc
scas
mov
pop
sti
popf
cmp
stos
inc
rol
cmps
cli
xor
jmp
fldenv
in
mov
popf
adc
out
dec
cwde
idiv
inc
(bad)
(bad)
(bad)
jmp
jbe
add
fwait
test
sbb
xlat
inc
mov
cmp
fld
jp
xor
aam
call
adc
imul
jnp
sbb
shr
xor
mov
aad
iret
mov
lods
mov
sub
test
cmc
test
push
cmp
inc
clc
rcl
(bad)
call
dec
add
movs
mov
ds
sub
inc
loopne
cld
gs
(bad)
(bad)
jg
movs
mov
sbb
dec
cwde
loope
in
adc
pop
add
cld
dec
imul
out
call
loope
push
rcr
pop
pop
push
into
loope
inc
and
icebp
jo
call
adc
(bad)
call
dec
xor
adc
xchg
adc
sbb
xchg
test
or
test
lock
(bad)
(bad)
jmp
fdiv
scas
cli
cmp
mov
xchg
inc
mov
outs
repnz
jno
(bad)
(bad)
(bad)
sti
and
(bad)
cdq
dec
jne
call
pop
(bad)
ins
push
clc
and
add
jnp
(bad)
jmp
xchg
fist
ins
aaa
xchg
sbb
xchg
out
or
call
dec
sub
xchg
jmp
inc
dec
inc
push
and
(bad)
(bad)
inc
mov
popa
cdq
addr16
ins
cli
inc
(bad)
mov
xchg
imul
stos
jg
dec
sub
popf
daa
inc
adc
mov
clc
cmp
fs
(bad)
(bad)
inc
mov
popa
lods
add
mov
pop
rol
xchg
cmp
shl
sbb
daa
mov
cld
jmp
xor
jecxz
rol
push
dec
sbb
cmp
push
pop
scas
in
xchg
clc
dec
popa
das
arpl
ret
gs
test
outs
std
(bad)
(bad)
inc
sbb
mov
fst
leave
pop
les
mov
ja
sub
aas
adc
sbb
push
sub
fisttp
test
jno
repz
lock
sub
bound
sub
mov
and
aaa
sub
sar
xor
inc
inc
inc
bound
outs
mov
xor
movs
pop
and
mov
(bad)
jg
dec
mov
jae
sbb
or
movs
mov
mov
and
jmp
aaa
cld
cmp
lock
jns
pop
test
xchg
push
push
addr16
into
inc
adc
leave
sub
shl
or
inc
rcr
pop
xchg
push
mov
or
mov
inc
xchg
adc
fist
in
push
outs
scas
test
mov
xchg
ja
jg
add
outs
fsincos
lods
leave
loop
xchg
loopne
and
call
outs
(bad)
or
sbb
sahf
mov
pop
pop
in
mov
mov
mov
mov
sar
nop
mov
(bad)
mov
adc
push
inc
das
je
data16
mov
jl
dec
pop
(bad)
(bad)
(bad)
push
nop
sub
retf
sbb
enter
sar
lds
sub
cmps
adc
add
jnp
(bad)
(bad)
dec
mov
push
lods
add
jnp
mov
daa
or
(bad)
(bad)
dec
push
daa
xsha256
cmps
push
xchg
jge
push
pop
cs
jl
vmwrite
addr16
mov
aas
mov
push
jb
inc
shl
mov
ss
repnz
movs
mov
add
pop
jg
dec
stos
push
(bad)
inc
out
repz
pop
and
sub
inc
mov
ficomp
(bad)
(bad)
(bad)
push
jl
es
and
fstp
cmp
fist
pop
xor
dec
push
inc
ins
mov
(bad)
push
cld
mov
or
xor
add
out
and
or
push
outs
push
pop
adc
adc
jmp
clc
mov
dec
xor
mov
(bad)
mov
mov
retf
pusha
popa
mov
sbb
jg
(bad)
cdq
(bad)
xchg
(bad)
ss
cmp
das
aas
imul
sub
cmp
int
add
pop
mul
popa
pop
cmp
out
cld
mov
(bad)
(bad)
jmp
sbb
cmps
rcr
mov
xor
xor
dec
(bad)
stos
cld
repz
push
or
(bad)
call
cs
mov
cmc
sbb
mov
mov
xchg
mov
pop
cld
add
xor
xor
movs
inc
xor
addr16
or
cmps
cld
std
xchg
cdq
adc
xor
ins
mov
and
(bad)
push
retf
js
jecxz
stos
add
cmp
data16
mov
or
push
pop
pusha
out
cs
cld
(bad)
inc
add
add
clc
(bad)
pop
jno
gs
jb
mov
push
pushf
jae
jo
push
(bad)
dec
jmp
retf
sub
adc
pop
je
sbb
ins
jmp
inc
aam
das
mov
mov
pop
clc
(bad)
mov
lods
cdq
xor
add
in
lahf
js
ja
out
adc
jmp
retf
retf
hlt
mov
push
popf
mov
pop
xor
movs
add
scas
mov
jge
icebp
mov
cli
mov
mov
scas
pop
hlt
std
dec
popa
sar
mov
repz
unpckhps
pop
int3
xchg
outs
mov
loop
xor
add
mov
imul
lds
call
leave
or
mov
not
push
jg
xor
mov
clc
push
pusha
fisub
mov
lods
add
mov
sub
fwait
mov
mov
ret
(bad)
(bad)
(bad)
call
cmp
jo
mov
inc
xor
add
mov
ins
mov
adc
fs
fnsetpm(287
(bad)
scas
or
(bad)
push
(bad)
jo
(bad)
(bad)
jg
sub
push
ds
dec
movs
add
lea
jge
or
inc
sub
je
out
inc
push
or
jg
jmp
je
mov
pinsrw
aad
jmp
mov
and
fist
fist
mov
stos
outs
pop
call
std
(bad)
dec
xlat
movs
adc
push
call
ja
mov
dec
ins
cmp
lods
sub
call
test
push
test
xchg
lods
sahf
mov
xor
fs
or
cmc
(bad)
jmp
mov
das
fdiv
add
rcl
push
pop
xchg
xor
(bad)
inc
push
(bad)
dec
es
mov
(bad)
js
addr16
rol
outs
sbb
(bad)
(bad)
push
and
in
stos
std
sub
out
idiv
or
ret
out
mov
(bad)
call
mov
mov
lods
(bad)
out
mov
cwde
pop
(bad)
imul
data16
add
mov
aaa
cs
aam
lods
cmc
cmc
pop
(bad)
(bad)
(bad)
push
ret
or
or
and
cmps
push
push
jl
xchg
(bad)
(bad)
(bad)
push
mov
int3
(bad)
loop
call
aad
outs
daa
fldcw
mov
cwde
int
(bad)
(bad)
push
pop
push
call
pop
dec
test
adc
cdq
and
pop
mov
sbb
inc
and
mov
and
(bad)
adc
sahf
sbb
or
xchg
cld
(bad)
fsub
xlat
fisttp
xchg
ins
push
icebp
jne
sub
mov
xlat
jmp
aaa
in
adc
(bad)
(bad)
(bad)
call
out
sub
js
(bad)
mov
jns
jnp
fbstp
jge
jecxz
movs
push
std
push
jecxz
push
pop
sbb
pop
inc
out
jp
in
jecxz
jle
dec
outs
fnstsw
mov
(bad)
mov
jmp
out
gs
retf
das
mov
repz
fs
xor
inc
push
test
mov
(bad)
lds
ins
xchg
adc
inc
inc
fistp
and
mov
test
shl
xchg
popa
cld
nop
mov
inc
mov
out
std
ds
std
or
jmp
fimul
loop
icebp
fdiv
inc
inc
(bad)
cdq
jno
and
add
idiv
retf
repnz
js
xchg
nop
ins
retf
(bad)
(bad)
(bad)
call
out
xor
xor
xchg
retf
jge
adc
jmp
sti
adc
mov
ds
(bad)
(bad)
(bad)
cmp
mov
xchg
inc
sbb
inc
push
rcr
int
mov
(bad)
jmp
xlat
or
mov
adc
mov
les
pushf
xor
cli
call
dec
xor
mov
fadd
push
(bad)
(bad)
(bad)
jmp
(bad)
push
scas
sbb
ins
and
adc
outs
addr16
mov
sub
mov
add
(bad)
call
or
xchg
loope
(bad)
mov
and
or
bound
fadd
call
pop
mov
lods
loopne
jg
xchg
pop
(bad)
pop
test
add
outs
iret
sub
sub
dec
aas
xor
cmp
jle
cmp
pop
adc
mov
or
jb
retf
jmp
sbb
(bad)
(bad)
inc
jae
loop
mov
xor
xchg
or
lea
movs
fcom
out
(bad)
(bad)
call
pop
jae
push
hlt
pushf
mov
jg
and
pop
aad
push
pop
loopne
pop
imul
xor
(bad)
(bad)
dec
out
stc
cmp
and
jb
push
ret
repz
mov
arpl
mov
rol
test
xor
(bad)
mov
mov
inc
add
inc
mov
mov
sti
arpl
mov
adc
dec
dec
mov
lods
mov
int3
mov
retf
adc
xor
sar
fst
xor
bound
sub
(bad)
cmp
jo
sbb
arpl
mov
icebp
dec
add
call
or
aam
loop
call
jns
push
daa
push
dec
add
inc
ja
aas
jg
dec
mov
fsubr
xchg
leave
daa
mov
or
dec
loop
mov
fs
in
jno
mov
je
(bad)
(bad)
(bad)
push
lahf
xchg
or
jmp
in
scas
cld
outs
xlat
push
inc
in
cmp
arpl
dec
imul
jmp
dec
adc
out
in
dec
(bad)
mov
cmp
fs
jo
fwait
ja
pop
pop
std
(bad)
out
clc
dec
fiadd
ss
ins
movs
cld
test
push
inc
fmul
stos
(bad)
push
mov
(bad)
mov
stc
push
fidivr
stc
leave
outs
pop
arpl
hlt
dec
jo
mov
inc
xor
stc
stos
test
push
mov
ss
fisttp
jmp
aas
add
(bad)
cmp
repz
(bad)
imul
sbb
mov
stos
dec
add
and
and
jl
push
sub
inc
mov
je
jbe
lea
pop
lds
nop
(bad)
(bad)
(bad)
inc
jnp
imul
pop
mov
or
push
daa
in
pop
pop
cmps
and
jle
lock
mov
ficomp
mov
retf
push
mov
adc
sbb
(bad)
(bad)
(bad)
call
pusha
add
and
ror
sub
stos
ins
mov
jnp
sti
popf
pop
icebp
out
retf
(bad)
(bad)
(bad)
inc
loope
es
add
(bad)
cmp
adc
stc
jb
not
or
hlt
(bad)
(bad)
(bad)
jmp
pop
push
cs
or
pop
or
outs
div
scas
into
jg
(bad)
jmp
xchg
jns
test
sbb
aam
mov
lods
dec
adc
add
(bad)
call
(bad)
jbe
xchg
or
mov
scas
retf
arpl
(bad)
(bad)
(bad)
fistp
xchg
std
adc
adc
jle
inc
xchg
mov
pop
cmp
(bad)
(bad)
(bad)
clc
mov
shr
shr
int
dec
aaa
xor
xchg
push
push
jnp
add
lahf
repnz
xchg
xor
(bad)
(bad)
dec
(bad)
pop
jge
mov
es
test
cmps
popf
push
cmp
dec
or
fldcw
cwde
cmps
push
sbb
cmp
or
aaa
lods
mov
(bad)
out
inc
mov
iret
jae
ins
push
push
push
mov
push
inc
pop
mov
icebp
imul
(bad)
(bad)
(bad)
dec
in
std
push
and
pop
dec
sub
dec
retf
cmp
pop
inc
int3
add
mov
sub
cmps
stc
inc
(bad)
(bad)
(bad)
inc
mov
xor
sub
and
fild
cmp
fdivrp
cmc
pop
or
sbb
fcomip
call
loopne
mov
pop
inc
loopne
enter
test
pop
sti
cmp
inc
add
or
cmc
sbb
call
jmp
std
jg
test
xor
pusha
inc
inc
ret
arpl
adc
jmp
jns
mov
and
test
mov
cdq
addr16
inc
or
(bad)
(bad)
(bad)
call
lods
les
and
fwait
cmp
jle
(bad)
mov
pop
bnd
call
push
mov
sub
imul
mov
add
mov
iret
std
lahf
les
mov
adc
mov
(bad)
(bad)
in
popf
data16
nop
pop
sub
and
cmps
aad
ret
in
enter
je
pushf
(bad)
(bad)
(bad)
dec
cmps
cmp
test
fcmovb
out
aaa
pop
add
mov
(bad)
xchg
and
adc
(bad)
(bad)
jmp
mov
(bad)
and
aad
leave
mov
add
jmp
mov
(bad)
dec
pop
or
cmp
(bad)
lea
xor
ror
mov
add
adc
or
mov
dec
xor
sub
and
call
(bad)
cmp
scas
dec
jp
imul
adc
clc
(bad)
(bad)
call
and
outs
adc
jne
or
sbb
invd
adc
push
in
das
std
lods
inc
scas
mov
in
push
xor
faddp
inc
in
sub
(bad)
push
js
mov
shr
int3
lahf
imul
bound
jno
jmp
or
dec
sub
(bad)
jmp
push
dec
inc
sub
adc
aas
and
pop
jg
iret
es
(bad)
dec
test
add
int
and
add
js
inc
shl
int3
out
xor
mov
(bad)
call
inc
cdq
ret
fadd
fcom
push
es
data16
mov
je
cmps
inc
gs
jmp
adc
stos
pop
push
push
or
nop
xor
fst
sbb
push
(bad)
lods
rcl
es
add
or
and
sub
fstp
pop
or
fstp
inc
into
inc
sbb
jns
std
in
call
(bad)
jmp
mov
mov
call
adc
adc
xchg
(bad)
(bad)
dec
cmp
xchg
das
mov
or
xchg
pop
inc
test
fchs
cmps
cmp
and
pusha
outs
out
cmc
imul
dec
leave
ficom
dec
fadd
cmps
lock
xchg
(bad)
(bad)
mov
adc
or
pop
xor
(bad)
(bad)
(bad)
mov
adc
pop
push
cmps
or
ret
inc
push
xchg
sub
mov
and
out
jmp
pop
xchg
cmps
fst
cmp
sbb
jp
inc
jne
scas
nop
xor
cdq
fcomi
(bad)
(bad)
(bad)
inc
inc
out
xor
popf
push
cs
mov
ficom
(bad)
stos
inc
xor
(bad)
(bad)
(bad)
jmp
inc
std
or
cmovge
xchg
movs
mov
hlt
jno
jl
stos
in
mov
dec
xchg
xchg
(bad)
(bad)
fcomip
(bad)
sti
fistp
mov
adc
mov
cmp
jecxz
pop
out
jmp
push
inc
stos
mov
pop
dec
mov
jmp
(bad)
jmp
mov
push
adc
dec
and
stc
adc
sub
pop
mov
(bad)
(bad)
call
mov
push
or
out
and
inc
(bad)
fwait
jnp
shl
mov
(bad)
push
sub
jnp
pop
sbb
jmp
jg
into
push
mov
movs
push
sahf
inc
into
cmps
inc
adc
jmp
jnp
stc
aaa
ja
call
adc
and
cwde
aam
and
or
cmps
dec
stos
(bad)
dec
fdivr
mov
movs
repnz
push
in
inc
rol
add
aam
(bad)
(bad)
(bad)
clc
sub
inc
cmp
xchg
call
ss
cmps
mov
sub
pop
mov
movaps
(bad)
(bad)
call
stos
(bad)
aad
inc
std
dec
jbe
sbb
pop
xchg
jg
enter
retf
pop
aaa
mov
fcom
(bad)
(bad)
push
push
inc
xchg
push
inc
mov
mov
ds
push
out
sub
dec
mov
cdq
ins
stos
jb
div
aam
mov
xchg
out
call
xchg
in
cmp
push
call
xchg
(bad)
out
and
inc
test
mov
(bad)
enter
xor
movs
pop
xor
(bad)
in
call
inc
xchg
test
js
loop
pusha
pop
(bad)
(bad)
fist
lods
xchg
cmp
push
adc
jmp
and
mov
cmp
(bad)
(bad)
call
ss
sub
fidivr
adc
sbb
jae
ret
inc
js
loopne
ins
(bad)
(bad)
inc
jmp
movs
push
push
out
jp
out
xchg
in
fld
sub
ffreep
xor
nop
push
shl
lahf
mov
pop
in
mov
push
jae
loopne
jle
mov
xor
inc
lock
push
mov
hlt
push
pop
mov
ror
dec
jmp
jmp
push
mov
sbb
pop
inc
and
(bad)
(bad)
(bad)
fnstcw
jecxz
std
adc
stos
mov
iret
shl
mov
push
jmp
(bad)
(bad)
sbb
xchg
and
inc
cmc
js
adc
cmp
shl
jbe
out
inc
mov
loop
inc
aas
popf
clc
out
mov
(bad)
(bad)
mov
mov
jno
pusha
jecxz
fnstcw
jbe
pop
out
cmc
les
(bad)
(bad)
(bad)
call
loop
inc
aad
(bad)
into
out
aad
jmp
mov
push
icebp
repz
sar
popa
ret
jmp
sahf
jecxz
and
or
sahf
fsubr
xchg
sub
mov
inc
mov
bound
into
adc
call
in
mov
jg
jmp
es
fst
aas
ret
xor
(bad)
(bad)
(bad)
jmp
pop
outs
mov
pop
lock
pop
out
push
xor
lods
push
fwait
jle
aaa
mov
test
(bad)
(bad)
(bad)
fdivr
add
mov
jge
data16
nop
out
fcmovnbe
pop
mov
retf
sbb
xor
rol
sbb
(bad)
(bad)
jmp
enter
adc
cmp
mov
jb
sub
and
push
shl
(bad)
(bad)
call
in
jb
and
cmps
push
push
mov
mov
test
sub
ins
cmp
jg
movs
mov
sbb
xchg
leave
jo
(bad)
mov
clc
dec
xor
push
jp
and
jne
adc
jns
int3
mov
push
std
pop
cli
xchg
and
clc
sbb
sub
dec
arpl
xchg
adc
dec
push
add
mov
xchg
push
addr16
sub
cs
repz
aam
in
xlat
adc
xor
(bad)
mov
push
lahf
push
xchg
or
sbb
add
imul
inc
and
std
dec
lock
jecxz
dec
mov
retf
add
sbb
dec
(bad)
lea
xchg
adc
push
add
idiv
cmp
(bad)
cmp
and
mov
popf
xchg
in
daa
jmp
sbb
or
mov
fld
dec
pusha
or
shl
shl
cmp
(bad)
(bad)
cmp
mov
sub
push
out
cmp
push
iret
cmc
test
mov
cld
jmp
jae
cmc
pop
into
ins
fs
cwde
lods
push
popf
pop
inc
xor
fwait
pop
lock
inc
lods
mov
adc
and
pop
ins
(bad)
(bad)
(bad)
dec
xchg
ja
ds
jecxz
pop
jmp
imul
jg
pop
or
push
inc
into
stos
mov
loopne
js
mov
inc
sbb
jnp
loop
push
or
jmp
(bad)
jbe
imul
add
ret
add
sub
gs
and
xchg
cmp
cmp
cmps
icebp
inc
and
and
(bad)
(bad)
cmp
dec
fdivr
and
jbe
lods
jnp
sub
jl
add
data16
(bad)
(bad)
call
mul
retf
mov
or
push
and
jle
sahf
push
or
(bad)
(bad)
call
jb
les
inc
cmp
cmp
(bad)
cld
pushf
fcomp
lds
cmp
inc
and
inc
jg
pop
loopne
cmp
pop
out
add
mov
and
dec
inc
jl
push
jecxz
dec
(bad)
add
add
leave
movs
imul
(bad)
(bad)
(bad)
fsubr
cmp
mov
clc
jb
in
clc
imul
jmp
sbb
xlat
sti
xchg
adc
stos
cld
(bad)
(bad)
(bad)
aas
pushf
sti
push
jne
std
mov
mov
movs
out
and
xchg
pop
fs
inc
inc
jecxz
and
dec
dec
jp
mov
data16
repz
call
(bad)
(bad)
inc
inc
sbb
sub
cmp
dec
fld
sahf
mov
out
push
dec
sbb
sahf
xor
int3
(bad)
out
clc
(bad)
fidivr
out
push
mov
rcr
js
push
or
pusha
in
aam
xchg
das
into
cli
(bad)
(bad)
(bad)
(bad)
out
mul
sbb
cmp
das
mov
and
stc
push
push
dec
push
cdq
cmp
(bad)
(bad)
dec
lea
aam
call
lods
ret
cdq
sbb
xor
mov
(bad)
push
jnp
ss
call
pop
cdq
mov
loop
sar
call
xchg
lea
jo
(bad)
(bad)
call
je
xchg
jecxz
xchg
out
repnz
lods
setno
push
dec
movs
mov
push
sbb
sar
popa
in
or
mov
scas
cmp
cwde
dec
sti
(bad)
(bad)
jmp
sub
jnp
push
push
sar
adc
not
aas
mov
pusha
pushf
push
jg
imul
push
sti
dec
movs
test
stos
or
in
bound
movs
ret
mov
mov
ret
mov
push
cmp
and
jmp
mov
stos
popf
stc
jp
adc
push
dec
xchg
mov
dec
lock
scas
movs
and
inc
les
mov
rol
leave
mov
adc
pop
fwait
sti
xchg
or
mov
push
(bad)
std
movs
test
jno
inc
inc
retf
cmp
dec
call
and
cmp
(bad)
(bad)
(bad)
jg
adc
dec
ins
popa
out
repz
aaa
jl
inc
sar
mov
sub
(bad)
(bad)
(bad)
add
or
cmp
ficomp
cwde
rcr
stc
lds
push
jge
(bad)
sahf
push
dec
add
(bad)
inc
add
neg
xchg
or
jp
push
cmp
inc
rcl
pop
xor
call
xor
push
(bad)
dec
mov
jmp
mov
push
mov
clc
xor
add
fsub
inc
pop
push
dec
sbb
xor
pop
pop
pop
push
pop
dec
jmp
gs
call
dec
std
sub
out
jmp
push
mov
loopne
mov
and
call
aaa
les
out
inc
pushf
sbb
pop
dec
js
jne
xchg
frstor
ret
ins
sbb
(bad)
(bad)
jmp
fcmovne
fsub
dec
cdq
lods
adc
jg
mov
jno
cdq
call
and
add
(bad)
dec
mov
iret
cmp
sub
and
xlat
xchg
mov
(bad)
out
sbb
inc
sbb
sub
fcos
(bad)
(bad)
int
sti
cmp
call
sbb
mov
adc
dec
ret
movs
xchg
(bad)
(bad)
(bad)
(bad)
mov
stos
mov
xchg
pop
sbb
push
aas
call
add
scas
out
push
inc
or
mov
(bad)
dec
ficom
test
push
pop
lods
je
push
jp
repnz
mov
xor
je
cmc
(bad)
dec
stos
int3
pop
pusha
jg
jg
jl
shr
push
and
dec
ins
dec
add
xor
(bad)
fwait
(bad)
hlt
inc
stos
sbb
fst
sbb
js
add
inc
in
add
(bad)
(bad)
call
jecxz
pop
ins
loope
xor
inc
or
pop
add
daa
repnz
mov
pop
ins
add
jmp
scas
inc
outs
aad
mov
pusha
sar
(bad)
call
ss
sub
(bad)
mov
pop
mov
add
imul
push
inc
mov
push
sahf
xor
out
(bad)
mov
jno
pop
loopne
call
cli
mov
cld
clc
jae
jo
push
xor
stos
repnz
sub
sbb
pushf
adc
fiadd
fistp
(bad)
(bad)
(bad)
ds
mov
test
aam
leave
stos
dec
imul
xchg
push
jmp
cmps
(bad)
(bad)
(bad)
fucom
bound
mov
lods
retf
and
bound
and
mov
inc
cwde
fsubrp
jns
(bad)
mov
dec
ja
adc
pop
(bad)
(bad)
mov
outs
jge
or
sub
out
mov
lods
jbe
hlt
xchg
stos
push
mov
in
and
enter
pop
mov
(bad)
jle
mov
movs
mov
jo
mov
neg
sub
mov
arpl
(bad)
(bad)
push
cmp
(bad)
cmp
mov
add
(bad)
fstp
mov
repz
pop
repz
push
(bad)
lock
fdivrp
dec
xor
(bad)
(bad)
inc
(bad)
call
(bad)
lahf
ja
shl
push
fmul
popa
loope
loope
(bad)
(bad)
(bad)
(bad)
call
cdq
out
push
sbb
cmps
jmp
inc
call
xchg
dec
ret
cmps
mov
sar
std
mov
mov
stos
xchg
fcomp
(bad)
(bad)
push
dec
cmp
mov
jmp
fsubr
(bad)
fcomp
push
pop
sub
jmp
mov
mov
unpckhps
arpl
mov
lock
sbb
inc
(bad)
jmp
cli
cmc
out
pushf
dec
aad
icebp
or
je
call
std
push
(bad)
or
pop
inc
rol
mov
add
push
mov
jne
jmp
inc
xor
adc
xchg
push
aad
ret
add
add
(bad)
(bad)
(bad)
(bad)
fcom
clc
pop
push
jo
ret
and
aam
xchg
mov
cli
je
rol
(bad)
push
and
daa
mov
inc
movs
ficomp
stos
popf
nop
sub
aad
bound
fcom
(bad)
(bad)
(bad)
(bad)
in
pop
nop
jge
clc
vcvttps2dq
mov
outs
xor
test
leave
scas
pop
fdivrp
cmps
jg
(bad)
dec
ins
out
rcl
pop
shl
inc
cmp
push
jbe
push
sbb
jmp
push
sub
jge
lea
mov
pop
xchg
aam
scas
dec
call
mov
mov
mov
jb
(bad)
repz
adc
mov
(bad)
(bad)
(bad)
jmp
adc
push
jo
mov
xchg
sub
xchg
push
icebp
in
(bad)
(bad)
(bad)
inc
retf
(bad)
pop
scas
inc
test
adc
inc
add
sti
sub
sub
shr
std
(bad)
jg
mov
mov
mov
sub
ja
inc
mov
gs
(bad)
xor
das
(bad)
mov
mov
(bad)
(bad)
dec
test
sbb
push
jge
js
push
and
pop
test
xlat
or
xchg
xor
or
pop
inc
pop
mov
push
ficom
or
(bad)
(bad)
jmp
push
div
je
xor
das
pop
or
cs
sbb
loopne
ficomp
(bad)
popa
sub
(bad)
jmp
clc
mov
lahf
gs
or
ret
lock
add
dec
cmp
mov
jmp
scas
sub
inc
les
cwde
xchg
sub
rol
mov
stos
es
(bad)
(bad)
(bad)
call
mov
push
push
in
mov
push
sub
push
jle
pop
loopne
xchg
sub
outs
idiv
sbb
das
xchg
mov
lock
sbb
iret
ficom
or
(bad)
lock
cs
(bad)
(bad)
(bad)
mov
cwde
jnp
mov
call
ins
add
in
mov
mov
test
(bad)
(bad)
(bad)
call
ror
pop
out
jg
ds
lahf
in
aad
fidivr
xlat
mov
mov
pop
dec
jbe
iret
fucomi
pop
leave
pop
push
pop
xchg
in
cmp
inc
ret
(bad)
(bad)
(bad)
(bad)
mov
enter
xchg
out
mov
push
ds
outs
dec
fwait
push
fisub
std
cmp
(bad)
(bad)
jmp
push
repz
pushf
mov
xchg
mov
jo
sbb
jmp
or
test
ret
dec
jae
xlat
loope
mov
lock
push
jb
call
pop
jae
push
mov
int3
xchg
cmp
jns
(bad)
push
into
js
add
call
xchg
rol
adc
(bad)
bound
and
arpl
ret
icebp
lds
jbe
cdq
push
inc
sub
in
daa
imul
(bad)
call
(bad)
sti
shl
loopne
add
sub
cmp
mov
mov
mov
mov
add
(bad)
jmp
addr16
xor
xchg
data16
ja
popf
or
push
inc
js
mov
and
or
addr16
cmps
nop
fisub
(bad)
(bad)
dec
hlt
scas
aaa
test
fs
iret
jle
push
js
ret
and
lock
mov
(bad)
(bad)
jmp
aaa
mov
mov
in
cmps
repnz
mov
scas
fwait
aaa
mov
fwait
scas
jo
dec
cmp
push
js
int
outs
add
ins
cdq
jle
repnz
mov
jg
or
dec
ficomp
inc
shr
mov
out
(bad)
(bad)
(bad)
call
pop
outs
stos
faddp
rol
mov
(bad)
cld
bound
dec
xor
jl
inc
mov
movs
pop
cmp
(bad)
mov
out
push
ror
inc
and
dec
sahf
pop
retf
xchg
cdq
pop
(bad)
(bad)
fcomip
adc
mov
je
push
cld
and
or
jnp
pop
sub
(bad)
(bad)
call
adc
push
push
inc
stos
xor
data16
cli
sti
ret
add
sub
sub
jmp
(bad)
cmp
jne
clc
pop
cld
adc
sar
cmps
sar
push
sbb
(bad)
(bad)
(bad)
(bad)
out
int
mov
adc
cmps
out
mov
and
retf
inc
mov
jg
add
out
jo
inc
push
inc
xor
fsub
add
shl
(bad)
call
sbb
pop
sbb
xor
ss
inc
adc
mov
in
jno
fimul
(bad)
pop
std
cmps
xor
enter
mov
or
(bad)
mov
fldcw
cmps
xchg
aad
dec
movs
rcl
dec
bound
(bad)
(bad)
(bad)
push
retf
lahf
test
mov
lea
adc
add
in
push
mov
add
sar
jmp
aaa
push
bound
push
mov
pusha
rcr
lds
(bad)
(bad)
dec
iret
push
lds
rol
ins
cmps
aaa
adc
out
push
enter
cmc
xchg
mov
jg
aas
mov
ss
nop
test
into
pop
mov
(bad)
(bad)
push
jge
inc
pop
and
pop
or
mov
mov
sbb
ret
cmps
data16
(bad)
(bad)
jmp
pop
(bad)
xchg
jmp
sbb
stc
add
pop
cmp
jae
cmp
shl
(bad)
(bad)
dec
call
inc
mov
push
pavgw
(bad)
sbb
dec
je
(bad)
(bad)
call
dec
shr
sahf
push
movs
or
jg
dec
pop
(bad)
lds
push
call
std
or
pop
mov
cmps
push
test
scas
sar
add
lock
inc
lds
pop
cmp
jnp
das
enter
test
jmp
adc
jmp
fcmovnb
ja
and
jecxz
imul
pcmpgtd
dec
mov
dec
pop
nop
cwde
push
inc
mov
lods
pop
jg
popa
test
add
leave
pop
(bad)
(bad)
inc
add
rcl
mov
inc
cmc
mov
add
lahf
push
inc
clc
and
(bad)
(bad)
(bad)
jmp
inc
jg
or
std
mov
mov
aad
arpl
dec
call
adc
call
retf
call
add
sar
(bad)
stc
xchg
mov
xchg
push
adc
mov
in
mov
(bad)
(bad)
(bad)
(bad)
inc
or
lock
xlat
ss
push
(bad)
scas
sbb
dec
jp
lea
lahf
adc
(bad)
(bad)
(bad)
jmp
cwde
sub
push
mov
jp
(bad)
push
xchg
pop
and
mov
(bad)
and
(bad)
(bad)
jmp
lods
test
adc
cmp
paddusw
mov
push
dec
xor
(bad)
(bad)
(bad)
jmp
jns
sub
sbb
je
fnstenv
test
and
inc
fs
jb
jge
(bad)
(bad)
inc
test
mov
lods
lods
sub
mov
lock
rcl
aad
sahf
mov
xchg
xchg
out
out
das
scas
in
sub
fistp
int
or
add
add
dec
xchg
test
daa
mov
and
jle
test
xchg
mov
(bad)
call
or
sub
repz
cmp
data16
jle
stc
call
call
js
cmp
test
or
hlt
mov
pop
sar
dec
inc
in
mov
aas
lahf
cmp
loopne
(bad)
mov
iret
in
addr16
data16
jg
retf
mov
(bad)
jmp
sar
xor
cmps
push
sub
cmp
int3
add
(bad)
call
sub
pop
loope
push
sub
xchg
hlt
(bad)
jg
xchg
stos
call
clc
out
mov
xor
aam
sub
mov
or
call
or
clc
add
loope
idiv
outs
push
(bad)
(bad)
inc
mov
out
fiadd
cmps
mov
popf
cmp
jmp
(bad)
(bad)
call
inc
jmp
push
lea
or
js
icebp
iret
repz
pop
xchg
sub
mov
ud0
sbb
call
icebp
sub
loop
aad
mov
mov
in
xchg
xchg
fiadd
mov
(bad)
jmp
das
scas
pop
mov
ins
out
adc
jns
xlat
xchg
jl
ins
xlat
aad
adc
test
stos
mov
(bad)
(bad)
push
popa
fcom
repnz
lods
(bad)
xor
enter
cmp
dec
inc
popa
gs
not
mov
push
mov
retf
adc
popf
sub
inc
aam
jns
sbb
test
push
cmp
fcos
(bad)
(bad)
call
cmc
or
mov
inc
lds
cmp
out
push
mov
cld
mov
(bad)
(bad)
(bad)
jmp
das
pop
pop
adc
pusha
fwait
mov
mov
jle
js
xchg
and
(bad)
push
std
fsubp
push
and
aam
aad
sbb
inc
cmps
xlat
scas
push
ds
aaa
mov
outs
es
inc
or
aad
cs
(bad)
(bad)
(bad)
mov
add
loope
jecxz
fs
aas
push
jae
xor
(bad)
(bad)
(bad)
(bad)
jl
push
push
pop
inc
lea
and
movs
push
or
leave
push
and
aad
(bad)
(bad)
(bad)
call
push
sti
in
cli
das
jmp
loop
mov
pop
pop
add
xchg
dec
adc
sbb
sbb
scas
ds
push
inc
lock
shl
dec
stos
mov
and
lods
or
(bad)
(bad)
dec
clc
int3
aaa
sub
mov
mov
xchg
jmp
xor
pushf
pop
xor
pop
dec
loope
jae
(bad)
(bad)
(bad)
(bad)
fld
push
jmp
stos
hlt
leave
jecxz
jns
mov
pop
jns
dec
out
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
loope
sub
dec
int3
mov
sub
adc
dec
cmp
mov
mov
xor
pop
adc
jnp
jbe
cli
aam
mov
nop
sub
outs
shl
fcomp
out
(bad)
(bad)
inc
repnz
out
mov
or
mov
repz
jp
loope
dec
cmp
mov
cmp
(bad)
(bad)
(bad)
clc
hlt
retf
jge
push
xchg
pop
scas
push
(bad)
aas
push
mov
mov
sub
imul
xor
mov
out
mov
ss
imul
jbe
fs
ror
add
xor
sbb
jl
int3
cmp
scas
and
shl
ja
and
fstp
mov
mov
or
push
movs
add
test
(bad)
jg
sti
jns
pop
xor
in
sar
je
mov
lds
inc
mov
int3
mov
inc
int3
push
aaa
ins
test
(bad)
jmp
mov
inc
push
cmp
xchg
push
imul
mov
idiv
(bad)
(bad)
jmp
dec
repz
mov
inc
dec
fiadd
jae
xor
out
daa
loopne
clc
fwait
int3
sar
(bad)
(bad)
push
ret
pop
inc
push
push
test
mov
mov
jmp
xchg
out
add
(bad)
(bad)
(bad)
js
xor
retf
(bad)
cmp
icebp
jmp
push
icebp
inc
out
repnz
cmp
(bad)
(bad)
jg
ror
inc
rcr
es
cmp
movs
push
pop
mov
(bad)
call
movs
xor
pop
outs
rcr
xchg
sar
(bad)
(bad)
(bad)
mov
jnp
lahf
lods
add
xchg
sti
pop
jge
nop
add
and
sahf
mov
stos
push
jecxz
call
call
retf
dec
loopne
jnp
adc
ds
push
outs
mov
aam
jg
in
cmc
pop
mov
hlt
push
mov
int3
jl
cmovb
pop
dec
(bad)
add
call
xor
cmp
data16
out
(bad)
call
les
(bad)
xchg
es
mov
jecxz
(bad)
(bad)
jmp
pop
push
in
js
mov
fist
fs
add
and
popf
(bad)
out
cmp
(bad)
(bad)
mov
push
inc
mov
mov
push
pop
xchg
add
popa
adc
(bad)
jmp
mov
sub
repz
pop
adc
mov
(bad)
call
cmp
pop
std
dec
mov
push
ret
jns
mov
jmp
fst
push
xor
sti
idiv
jmp
ins
mov
loopne
mov
mov
sbb
ins
mov
inc
aaa
inc
daa
mov
inc
cmc
mov
xor
ds
pop
mov
mov
cld
dec
dec
fisttp
(bad)
jmp
mov
test
arpl
mov
int3
xor
call
js
pop
dec
std
call
push
inc
lods
xchg
cmps
aam
rol
iret
pop
call
outs
mov
jae
mov
sbb
push
shr
call
mov
(bad)
dec
jns
pop
cmp
add
or
add
fwait
(bad)
das
nop
dec
jbe
sbb
jne
push
or
ror
hlt
(bad)
inc
sti
push
pusha
retf
fsub
sbb
inc
mov
jecxz
or
xchg
jmp
es
adc
mov
pop
aas
data16
lds
(bad)
(bad)
mov
cs
push
mov
test
jmp
jmp
rcr
dec
loop
stos
cmps
jb
pop
cmp
inc
lods
dec
sahf
jge
push
adc
adc
(bad)
(bad)
dec
and
ja
mov
mov
inc
int3
popa
aam
push
push
mov
pop
mov
loope
sar
inc
cwde
add
mov
xchg
sar
ins
std
ds
(bad)
(bad)
push
adc
enter
ret
or
bound
rcr
jg
in
sbb
add
mov
mov
aaa
cld
das
jno
inc
and
sub
jmp
(bad)
mov
push
pop
outs
cmps
mov
iret
arpl
repnz
sub
push
in
mov
fwait
xor
fwait
or
cli
pop
jp
es
adc
push
cdq
mov
mov
sub
int
hlt
mov
sub
(bad)
mov
lahf
dec
inc
test
pop
je
cmc
mov
(bad)
call
aam
pop
movs
mov
inc
xchg
xchg
inc
pop
fadd
es
or
pop
fsub
aad
call
aaa
pop
(bad)
xchg
call
test
pop
movs
pop
shl
adc
(bad)
dec
(bad)
mov
xlat
dec
adc
loop
pop
fcomip
(bad)
loop
lea
or
(bad)
jg
and
pop
clc
cli
xor
push
jge
xchg
movs
retf
ret
aam
(bad)
(bad)
push
xchg
or
pop
mov
xchg
aas
jnp
mov
add
adc
push
jb
aam
popf
sub
fcomp
xor
(bad)
(bad)
inc
cmc
enter
fild
in
xor
aam
pop
(bad)
movs
push
xlat
mov
mov
icebp
fcomip
jmp
stc
sub
cmp
pop
repnz
add
pusha
xchg
fidivr
push
cmps
mov
fbstp
jmp
(bad)
fistp
fsubp
sahf
sti
ins
sbb
jle
push
retf
cli
dec
push
and
(bad)
(bad)
dec
sbb
movs
adc
scas
jne
js
mov
addr16
dec
retf
sub
aaa
dec
cld
(bad)
(bad)
jg
imul
mov
sbb
xchg
sub
inc
xor
sub
ret
(bad)
push
loopne
test
(bad)
data16
push
jnp
(bad)
mov
(bad)
xchg
mov
or
mov
xor
out
dec
loope
push
sub
(bad)
(bad)
(bad)
push
cmp
shl
mov
jg
sbb
rol
(bad)
(bad)
(bad)
jmp
mov
mov
idiv
inc
push
std
or
inc
mov
jnp
call
xchg
cli
dec
jmp
movs
adc
ret
push
daa
cmps
mov
psubb
jmp
loop
rcr
xchg
loopne
push
and
xor
leave
out
retf
jg
jmp
cmp
mov
outs
nop
movs
pop
mov
jge
aas
push
arpl
loope
adc
ret
(bad)
jmp
sub
cmp
pop
cmps
aas
ins
fdiv
add
clc
dec
mov
xchg
sub
in
pop
and
imul
push
scas
clc
(bad)
dec
in
dec
dec
push
fisttp
mov
pop
push
mov
inc
add
xor
les
jmp
sbb
push
call
dec
lea
pop
mov
cs
(bad)
(bad)
(bad)
mov
sub
jp
mov
mov
pop
repz
mov
cmp
repz
cmp
hlt
test
inc
rcl
repz
arpl
xchg
or
dec
aam
push
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
pop
add
gs
pop
mov
dec
test
je
(bad)
(bad)
(bad)
jmp
xchg
dec
pop
push
push
jmp
mov
loop
fdiv
es
inc
cmp
(bad)
(bad)
(bad)
call
sbb
repz
xor
mov
push
out
loopne
lds
cmp
dec
ins
mov
adc
(bad)
(bad)
mov
push
lds
daa
cwde
mov
call
inc
(bad)
mov
dec
mov
retf
test
test
mov
out
jge
(bad)
call
cmp
xchg
outs
popa
in
fistp
dec
lods
and
cmp
and
sti
jno
mov
pushf
pop
bound
jle
xor
mov
retf
mov
mov
add
(bad)
outs
imul
inc
jns
xchg
xor
and
ficom
bound
mov
(bad)
call
lock
jmp
std
mov
imul
mov
movs
scas
div
std
mov
leave
mov
call
mov
outs
xor
jmp
and
neg
(bad)
clc
std
pop
hlt
mov
loopne
pop
add
push
loope
data16
dec
aad
dec
inc
pop
add
mov
jns
ret
adc
inc
mov
(bad)
jmp
dec
or
push
dec
lock
dec
adc
inc
call
addr16
clc
sub
xchg
(bad)
fld
gs
test
pop
retf
mov
xor
xchg
xchg
sub
xchg
cmp
movs
outs
pop
sti
loopne
clc
(bad)
dec
out
cli
repz
or
pop
call
push
push
cli
cmps
or
scas
cmps
(bad)
(bad)
(bad)
(bad)
mov
imul
mov
out
test
shl
push
sar
adc
jge
push
repnz
test
sbb
out
std
scas
sbb
shr
adc
xchg
call
inc
stos
mov
add
lods
or
xchg
shr
inc
jge
fwait
pusha
enter
int3
pop
push
(bad)
(bad)
mov
sahf
shl
push
repz
test
bound
repz
(bad)
dec
es
test
das
ja
out
jg
jmp
aad
adc
jp
cmps
inc
pop
cmc
(bad)
(bad)
jmp
jle
call
ds
mov
cmp
cmp
shl
sar
add
push
sbb
jno
data16
push
in
fcmovb
sbb
(bad)
(bad)
(bad)
dec
mov
loop
lods
scas
jp
sub
sbb
retf
or
inc
or
pop
icebp
call
into
int
iret
mov
ret
xor
jb
fucomip
ja
pusha
pop
loopne
je
lods
ins
push
daa
iret
sub
xor
xchg
push
and
cdq
pop
cmc
mov
add
jmp
dec
mov
sub
loope
sar
loope
xor
mov
dec
mov
jecxz
shl
(bad)
(bad)
(bad)
dec
cmp
fiadd
pop
test
rcr
cmp
ss
cmp
(bad)
dec
out
mov
stc
cmp
mov
push
sub
fdivr
shl
push
or
and
mov
pop
sbb
pop
lds
cwde
dec
out
add
lea
test
outs
(bad)
call
or
cmp
outs
stc
pop
inc
mov
or
add
ins
xchg
inc
adc
mov
push
mov
dec
mov
sbb
cmp
jo
dec
cld
(bad)
jmp
or
data16
cdq
fist
(bad)
call
aam
lods
iret
cdq
mov
and
das
mov
inc
cmps
push
push
dec
mov
mov
mov
(bad)
(bad)
(bad)
dec
(bad)
xchg
je
lahf
js
add
ds
sub
pop
pop
mov
cmp
mov
fistp
pop
(bad)
mov
sar
test
or
push
push
add
std
(bad)
jl
ror
out
sar
daa
clc
(bad)
cmp
xchg
scas
in
xchg
push
jg
iret
int3
adc
adc
(bad)
(bad)
inc
icebp
mov
jecxz
sahf
xor
push
push
xor
jns
in
mul
mov
push
xchg
dec
out
cmp
repnz
mul
scas
cmp
out
jmp
(bad)
(bad)
dec
jo
dec
push
fisttp
sub
mov
pop
retf
sar
pop
xor
out
push
out
mov
jmp
(bad)
aam
push
push
ins
dec
lods
cmp
cmp
sbb
xor
xor
jo
sub
pushf
sub
add
mov
and
mov
mov
push
mov
call
dec
rcl
jae
xor
jns
xchg
loop
repnz
scas
scas
into
jno
xor
(bad)
mov
push
mov
inc
push
and
push
aad
imul
call
stc
arpl
mov
adc
jbe
xchg
or
mov
inc
out
imul
mov
int
loop
jp
add
clc
(bad)
push
out
fucompp
sbb
shl
cmp
add
dec
movs
ficom
cdq
add
pop
mov
imul
mov
int3
lahf
push
mov
sbb
(bad)
(bad)
call
shl
cdq
push
lods
bound
cmc
push
dec
test
mov
add
call
fisttp
add
ror
or
mov
leave
adc
ja
(bad)
(bad)
(bad)
dec
bnd
jns
xchg
enter
mul
daa
into
jae
mov
sbb
or
(bad)
(bad)
(bad)
inc
in
inc
lds
repnz
scas
pusha
neg
dec
sahf
rcl
mov
stc
push
icebp
out
stos
jmp
or
mov
mov
adc
jle
sti
lahf
inc
data16
inc
pop
adc
adc
add
(bad)
(bad)
call
cmp
dec
sar
out
mov
arpl
lahf
mov
out
clc
call
cld
(bad)
push
dec
push
adc
add
add
lea
dec
mov
mov
adc
shl
pop
xor
fld
mov
pop
push
mov
movs
inc
pop
jecxz
add
sbb
(bad)
enter
cmp
(bad)
pop
(bad)
movs
(bad)
(bad)
(bad)
jmp
sahf
dec
pop
aad
stc
adc
mov
jg
test
psrlw
shl
cli
arpl
(bad)
call
add
pop
mov
jns
cli
and
retf
dec
or
mov
push
bound
cmps
js
xchg
sbb
mov
lds
(bad)
(bad)
call
cwde
ja
repz
mov
push
cmp
fmul
aam
clc
test
into
lock
(bad)
call
or
ins
leave
pop
pop
pusha
add
dec
data16
in
ret
dec
sub
mov
push
mov
inc
enter
mov
(bad)
add
(bad)
(bad)
(bad)
call
push
ins
sbb
lahf
xchg
bound
add
sbb
push
cdq
leave
fidivr
pop
add
or
mov
gs
ret
iret
aad
push
mov
lods
adc
(bad)
(bad)
call
les
xchg
test
scas
xlat
jmp
inc
sbb
jg
dec
mov
stos
mov
sbb
hlt
mov
mov
push
push
int3
ins
test
scas
clc
cmps
daa
push
gs
(bad)
(bad)
call
lahf
mov
xchg
jnp
ficom
jmp
jg
sti
add
mov
popa
push
pop
ds
pop
cmps
(bad)
(bad)
jmp
rcl
pop
out
pop
dec
mov
push
sahf
mov
in
mov
cmp
es
sbb
cmps
jmp
jmp
call
retf
mov
mov
mov
dec
hlt
push
(bad)
aaa
(bad)
(bad)
(bad)
call
sub
push
add
lods
fbld
jne
xchg
dec
js
pop
inc
pop
xor
push
mov
call
fadd
jp
inc
scas
popf
adc
std
outs
push
fwait
shr
xor
jbe
cmp
jae
das
sbb
loopne
jmp
test
xor
(bad)
mov
ds
std
mov
mov
pushf
hlt
fwait
pop
cmp
(bad)
inc
ins
inc
pusha
push
cli
sbb
aaa
lds
and
retf
mov
push
(bad)
jle
shr
nop
cmp
pop
cmc
rcr
adc
inc
dec
add
adc
cli
cwde
mov
add
shr
(bad)
pop
icebp
sub
loop
inc
data16
scas
pop
jmp
stos
cmps
pusha
rcr
(bad)
(bad)
(bad)
jnp
adc
jae
jecxz
cwde
xor
or
push
adc
push
std
adc
out
sbb
shr
test
(bad)
(bad)
call
inc
jno
xchg
xor
dec
adc
xchg
cwde
adc
(bad)
inc
add
je
out
xlat
rol
outs
sbb
pop
lds
dec
jns
ins
retf
sti
arpl
adc
pushf
(bad)
(bad)
jg
xchg
sbb
bound
mov
sbb
(bad)
jle
push
pop
mov
(bad)
(bad)
(bad)
jg
retf
les
or
inc
pop
sbb
in
and
add
pop
jnp
jns
(bad)
sbb
cmp
fstp
jl
ds
lods
pop
mov
xchg
push
push
aas
(bad)
(bad)
dec
dec
movs
adc
es
repz
jge
jmp
sbb
sbb
pusha
mov
enter
adc
rcr
pop
or
popa
fs
pop
ret
cmp
push
add
ins
sub
xor
addr16
dec
sti
sahf
mov
(bad)
(bad)
jg
enter
xchg
jg
cwde
adc
in
mov
inc
mov
call
retf
rcr
push
out
aad
bound
inc
repz
enter
in
(bad)
jmp
in
call
pop
addr16
test
ret
sub
(bad)
movs
dec
jp
inc
jbe
lods
cmps
jmp
sbb
(bad)
fsubrp
jmp
mov
mov
jmp
fild
inc
test
cdq
out
sub
test
ins
xor
xor
sub
sub
mov
xor
and
ins
cmp
jecxz
test
hlt
data16
(bad)
(bad)
mov
push
xor
xchg
mov
pop
jae
jno
jl
push
pop
adc
pop
(bad)
(bad)
(bad)
(bad)
jge
call
push
sahf
pop
cmp
or
sbb
ss
or
sbb
adc
std
(bad)
push
loopne
and
cmps
mov
sub
and
(bad)
(bad)
dec
fsub
inc
rcl
out
(bad)
retf
pop
push
add
xchg
aad
clc
(bad)
(bad)
(bad)
std
retf
into
push
push
je
adc
pop
(bad)
xor
or
in
jbe
cmp
jmp
adc
add
xor
(bad)
dec
cmps
adc
jg
push
pop
gs
imul
dec
jp
xchg
(bad)
test
movs
jno
lahf
sbb
add
pop
push
inc
push
dec
mov
dec
or
(bad)
(bad)
(bad)
call
add
stos
push
scas
pop
shr
add
add
mov
retf
les
(bad)
push
jno
push
dec
jmp
lock
call
js
mov
aam
(bad)
mov
out
stc
scas
icebp
sbb
(bad)
(bad)
call
add
cdq
into
add
lahf
int3
mov
dec
out
call
(bad)
pushf
repz
pop
xlat
mov
(bad)
(bad)
(bad)
jmp
bound
fmul
jecxz
xchg
in
cmp
loope
cmp
mov
(bad)
(bad)
(bad)
(bad)
jmp
clc
jnp
mov
mov
add
mov
loop
lods
repz
(bad)
(bad)
fidiv
and
sbb
and
loope
ja
cdq
shl
sub
gs
iret
in
(bad)
(bad)
push
cli
lea
or
(bad)
int
ror
loopne
mov
fmul
or
sbb
xchg
(bad)
cld
jmp
pop
out
das
pop
dec
mov
sbb
inc
push
cmp
dec
pop
adc
(bad)
(bad)
mov
push
bound
(bad)
scas
mov
(bad)
and
adc
leave
fld
adc
cdq
(bad)
(bad)
(bad)
call
add
jae
fisttp
xchg
adc
or
sub
fxtract
call
loopne
sbb
adc
mov
fs
xchg
adc
push
push
fiadd
test
push
push
mov
aam
aaa
inc
idiv
inc
sar
jmp
sub
repnz
sti
int
clc
sbb
sti
xor
(bad)
int
jmp
push
push
enter
pop
clc
icebp
gs
push
pop
and
fld
jmp
cmps
cmp
adc
movs
sbb
or
sar
(bad)
jl
inc
add
jae
xchg
adc
adc
sti
icebp
popa
dec
mov
scas
pop
or
sbb
jge
mov
cs
cld
(bad)
push
imul
shl
repnz
out
add
shl
(bad)
dec
sbb
jae
xor
jle
cs
mov
popa
popa
jge
jnp
fisubr
inc
jl
(bad)
(bad)
jmp
push
lods
test
retf
mov
xchg
scas
and
lds
jmp
fxam
test
cmps
xchg
std
push
pop
stc
and
adc
movs
mov
jmp
enter
and
add
iret
in
fild
cld
(bad)
(bad)
(bad)
call
dec
and
inc
jnp
dec
outs
dec
cmp
sti
mov
sub
mov
cmc
or
js
(bad)
call
mov
fcomp
push
adc
add
int
mov
aaa
xchg
clc
repz
call
in
pop
fs
inc
sbb
iret
add
ds
(bad)
(bad)
jmp
push
pop
xor
neg
(bad)
clc
out
sub
fdivr
stos
or
jmp
cmp
aad
inc
gs
cld
sub
in
cwde
test
(bad)
push
frstor
inc
fldcw
inc
shr
jmp
xlat
inc
jmp
fwait
in
ja
pop
mov
ins
inc
pop
(bad)
jmp
ret
dec
or
(bad)
jnp
imul
and
jmp
lea
loop
jnp
(bad)
dec
xchg
fs
dec
push
and
test
cmps
out
aad
inc
pushf
or
mov
ret
mov
cmp
sbb
retf
mov
(bad)
mov
jl
mov
(bad)
and
(bad)
(bad)
jmp
xor
cmp
test
(bad)
or
mov
nop
call
xchg
inc
imul
push
add
outs
cli
cwde
scas
cmp
mov
fdiv
xchg
(bad)
(bad)
(bad)
mov
add
jb
dec
push
inc
add
xchg
and
cmc
dec
and
fcomp
sbb
jg
(bad)
cmp
dec
mov
or
imul
ss
jp
mov
(bad)
(bad)
(bad)
(bad)
jle
les
fimul
(bad)
arpl
mov
pop
and
cmp
sbb
call
gs
(bad)
inc
dec
mov
dec
mov
jb
test
dec
inc
loopne
fs
xchg
mov
mov
lahf
xor
mov
push
popf
enter
inc
pop
jb
ds
pop
mov
leave
push
jmp
jl
ror
push
mov
dec
jmp
popa
in
jae
loopne
mov
cli
inc
outs
jmp
mov
sub
jmp
pop
addr16
sbb
ds
cli
stos
mov
(bad)
test
xchg
jns
add
jmp
adc
sbb
scas
adc
jg
cmp
ins
xlat
add
adc
(bad)
pop
add
dec
cmp
add
cmp
cmp
scas
retf
cmps
aas
and
cmp
(bad)
(bad)
dec
fwait
rcl
mov
sbb
jae
fild
outs
cmp
inc
mov
into
push
ds
(bad)
(bad)
dec
jecxz
xchg
iret
inc
lods
inc
sbb
mov
movs
fcom
lahf
iret
cmp
cld
cmp
mov
(bad)
(bad)
(bad)
jmp
mov
and
imul
mov
mov
mov
arpl
(bad)
(bad)
(bad)
cmp
pop
xchg
call
adc
out
mov
in
pop
cmp
push
xor
(bad)
(bad)
(bad)
(bad)
cli
dec
int
int3
mov
jmp
xor
adc
or
add
(bad)
into
lods
pop
loop
rcr
call
ds
mov
mov
out
ins
and
sbb
xchg
jae
push
inc
lock
jg
mov
ss
push
ss
push
cli
pop
push
sbb
ins
dec
inc
xor
add
and
jbe
inc
xchg
jmp
mov
(bad)
(bad)
dec
jno
sub
jae
fisttp
sti
out
in
retf
mov
jg
(bad)
call
push
and
mov
pusha
imul
mov
sub
je
mov
std
and
scas
aaa
mov
sub
repnz
or
jp
jl
mov
jl
ja
dec
dec
xlat
xchg
add
sbb
inc
ds
(bad)
(bad)
(bad)
(bad)
cmp
sub
adc
xor
shl
adc
xor
loop
or
push
xchg
add
mov
ins
add
(bad)
(bad)
call
push
clc
adc
fsubp
cmp
gs
sub
mov
xlat
dec
and
clc
(bad)
(bad)
mov
icebp
fstp
add
cdq
inc
mov
pop
fnstsw
stc
dec
ins
mov
adc
or
ret
push
ret
retf
xchg
inc
cdq
dec
sbb
imul
and
jle
(bad)
mov
sub
push
pop
xor
ds
inc
xor
xor
pop
(bad)
(bad)
(bad)
(bad)
call
and
xor
das
mov
fwait
retf
mov
jmp
clc
fwait
and
call
(bad)
cmp
fwait
push
mov
mov
sahf
mov
cmps
cwde
xchg
repnz
ret
(bad)
(bad)
call
dec
stos
mov
repnz
lahf
scas
gs
in
rol
pop
jb
inc
cld
cli
cmp
sub
xchg
stos
sub
sub
clc
jp
cmp
fldenv
into
push
xor
(bad)
mov
loope
scas
dec
dec
sub
dec
call
dec
lods
(bad)
(bad)
(bad)
dec
push
and
or
test
jae
mul
daa
mov
scas
pop
sbb
xlat
(bad)
call
fidivr
jne
cmps
sbb
sbb
push
leave
mov
push
xchg
fdiv
mov
mov
jle
(bad)
(bad)
(bad)
push
icebp
xchg
pop
or
inc
aam
dec
jmp
popa
push
jmp
and
in
pop
push
push
cld
(bad)
(bad)
(bad)
call
je
mov
xchg
mov
xchg
popf
mov
sbb
push
in
daa
or
loopne
jp
(bad)
(bad)
push
sbb
je
arpl
out
rol
stos
jbe
or
inc
or
push
mov
inc
sbb
sub
(bad)
jmp
mov
aad
xchg
push
jbe
cmp
fld
in
push
lods
pop
in
push
(bad)
(bad)
(bad)
dec
aam
push
mov
inc
cmp
out
xchg
cmps
(bad)
movs
adc
cmp
jg
dec
jae
nop
mov
cmps
stos
sbb
call
rcl
clc
(bad)
inc
xchg
add
pop
inc
dec
inc
mov
or
inc
mul
(bad)
call
std
test
pop
ja
popf
jb
std
sbb
push
in
jecxz
sub
push
mov
icebp
(bad)
jmp
mov
push
push
das
lods
mov
dec
sub
iret
mov
(bad)
cmp
imul
enter
or
stc
jae
loop
mov
jmp
sbb
(bad)
(bad)
dec
movs
scas
mov
in
cs
shr
loopne
add
push
xor
std
inc
mov
shl
adc
retf
call
mov
xor
sub
pop
bound
mov
or
push
sub
fild
js
adc
xchg
in
mov
mov
clc
and
jae
mov
cmp
fs
test
mov
push
ja
(bad)
(bad)
ficomp
sahf
xchg
test
add
outs
fcomp
push
or
outs
mov
out
clc
inc
sbb
ds
enter
mov
jg
pop
jmp
hlt
mov
add
(bad)
cmps
dec
lods
jg
cmp
movs
ja
(bad)
push
adc
pusha
add
mov
dec
xchg
outs
jns
pushf
clc
(bad)
(bad)
inc
aam
aaa
add
or
retf
fdivr
or
xchg
mov
xchg
int
mov
outs
adc
jne
xchg
xchg
cdq
shl
cmps
push
cmps
add
(bad)
(bad)
(bad)
call
dec
mov
jl
mov
cmp
push
pop
sub
outs
xor
push
stos
(bad)
jnp
loop
jmp
jmp
sti
pop
cmp
or
loop
cdq
rol
(bad)
dec
sub
adc
call
xor
jns
add
mov
sub
dec
int3
and
cmp
lods
or
sub
jmp
push
lahf
mov
into
mov
(bad)
(bad)
call
mov
pop
inc
cmp
xlat
push
shl
lahf
sub
add
(bad)
(bad)
jmp
imul
inc
call
mov
daa
jb
sub
lock
dec
es
mov
cmp
ret
mov
mov
pop
mov
pop
cld
ins
iret
lock
mov
add
xchg
ret
(bad)
(bad)
jmp
xchg
inc
jp
clc
fcmovbe
out
push
repnz
adc
repz
clc
or
and
clc
mov
mov
xchg
mov
test
call
cmps
mov
adc
(bad)
push
std
push
ss
jmp
xchg
mov
jnp
fnstcw
shr
test
aam
movs
inc
push
and
das
sar
xchg
fwait
sti
jne
fcmovne
and
retf
sub
imul
test
sub
xor
mov
or
inc
jnp
test
sbb
mov
jo
popa
mov
(bad)
jmp
pushf
fild
xor
test
cwde
push
xchg
loope
out
jmp
fimul
and
jmp
jnp
gs
scas
ss
dec
sub
mov
hlt
(bad)
inc
adc
dec
sbb
fdivrp
pop
xchg
push
cld
(bad)
pop
inc
sar
xlat
xchg
stos
dec
mov
leave
mov
frstor
inc
addr16
jg
(bad)
cmp
ret
loopne
mov
pushf
repnz
repnz
mov
test
aam
aam
push
lods
hlt
je
xchg
not
cli
(bad)
(bad)
(bad)
mov
jo
aam
xchg
jg
dec
out
mov
movs
mov
fdiv
retf
xchg
fstp
enter
arpl
xor
iret
sbb
inc
test
or
(bad)
(bad)
cmp
xchg
sub
xchg
div
sub
in
xchg
aaa
mov
pop
(bad)
mov
add
mov
inc
sub
popf
cld
pop
mov
std
jo
sbb
(bad)
test
(bad)
(bad)
dec
call
loope
inc
xchg
je
aam
sbb
sar
inc
mov
jne
icebp
in
arpl
icebp
movs
pusha
jmp
push
mov
pop
mov
int
pop
cs
mov
gs
(bad)
dec
jne
push
stc
je
xor
call
cmps
sub
into
imul
call
daa
rcl
enter
sbb
daa
sub
out
jae
cmp
das
xchg
call
push
pop
mov
data16
sbb
dec
or
scas
add
and
jg
(bad)
in
fld
lods
jo
fs
push
retf
mov
ins
or
jmp
(bad)
(bad)
(bad)
push
or
sub
add
ins
adc
js
ret
jl
test
xchg
mov
(bad)
(bad)
dec
imul
test
xchg
sbb
cmps
sub
mov
and
(bad)
dec
ror
(bad)
mul
push
outs
ins
(bad)
cs
lea
(bad)
(bad)
call
cld
jne
sbb
mov
out
add
jle
(bad)
hlt
shl
mov
jmp
inc
data16
xchg
and
cmps
test
jecxz
and
fsubr
(bad)
(bad)
(bad)
(bad)
out
mov
mul
ins
sahf
les
or
pop
xor
pop
dec
cli
ins
or
iret
mov
pop
int
dec
sbb
(bad)
(bad)
(bad)
dec
popf
adc
dec
shr
inc
scas
or
inc
dec
push
dec
sub
cli
cmp
(bad)
dec
mov
adc
test
fstp
iret
jl
imul
xchg
inc
fild
fwait
pop
(bad)
inc
xlat
inc
aad
inc
ins
push
pop
mov
jb
cli
pop
outs
sub
jg
(bad)
mov
push
lahf
xor
xchg
rcr
mov
pop
xchg
fs
mov
mov
add
(bad)
(bad)
mov
outs
in
dec
hlt
nop
sub
into
std
cmp
lods
sub
stos
pop
aas
cld
and
mov
hlt
mov
popa
rol
mov
cli
ret
push
push
mov
rcl
addr16
pop
push
ret
fdivr
(bad)
(bad)
call
call
jmp
in
adc
mov
call
(bad)
jmp
push
scas
clc
sub
fst
jp
mov
fsubr
mov
jbe
test
add
add
sbb
in
or
ror
aaa
into
jg
add
pop
dec
(bad)
std
sbb
mov
lahf
pusha
imul
outs
dec
out
outs
sub
xor
hlt
test
push
std
mov
mov
sub
sub
dec
(bad)
jg
dec
imul
int3
sti
popa
add
(bad)
(bad)
(bad)
dec
jl
lock
jp
inc
in
lds
js
fidiv
fistp
mov
push
push
mov
sub
push
cli
mov
gs
inc
in
mov
(bad)
(bad)
jg
stos
ins
cld
into
out
mov
int3
and
dec
jae
push
adc
not
fdivp
fld
add
fadd
leave
mov
bound
mov
lds
inc
ja
push
sbb
hlt
push
sub
stc
jo
dec
data16
dec
retf
fwait
jmp
jge
push
das
repz
jmp
(bad)
call
iret
js
cdq
loopne
repnz
and
loop
jnp
fdiv
xchg
jg
mov
retf
pop
out
jge
mov
aaa
sbb
dec
ss
mov
mov
adc
sbb
(bad)
(bad)
(bad)
jmp
adc
test
jmp
shr
sub
mul
mov
jmp
call
test
stc
push
or
dec
add
jb
inc
dec
test
(bad)
sar
nop
and
shr
or
cmps
call
fstp
mov
imul
pop
std
call
sub
out
lods
cmps
push
mov
cmps
xchg
sub
push
push
adc
les
pop
mov
nop
inc
(bad)
in
mov
nop
inc
retf
dec
mov
mov
(bad)
(bad)
(bad)
call
mov
scas
push
jo
add
cmp
pop
cdq
sar
loop
mov
idiv
xchg
xor
(bad)
jmp
cdq
sti
rcl
sub
(bad)
fdivr
mov
call
call
call
inc
and
sti
scas
fprem1
iret
sti
mov
popf
or
(bad)
(bad)
fdivr
mov
ins
cli
ficom
mov
into
pop
aad
ret
sahf
ja
stos
(bad)
(bad)
call
lock
cld
xchg
cs
aas
xchg
push
add
stos
inc
cmp
jl
(bad)
(bad)
(bad)
call
or
ret
ins
scas
adc
sub
mov
leave
out
push
test
lds
(bad)
(bad)
call
leave
fidiv
dec
xlat
sbb
scas
cmp
mov
stc
jmp
or
(bad)
(bad)
out
jl
pop
into
push
ficomp
ret
push
ftst
xchg
inc
jle
(bad)
out
ss
xor
sbb
loopne
stc
movs
lods
push
pop
imul
(bad)
(bad)
call
(bad)
mov
cmp
push
outs
sahf
pop
sub
xchg
dec
les
xchg
fistp
std
push
xchg
cwde
pop
fs
int3
jmp
mov
pop
jnp
adc
int
hlt
mov
push
xchg
leave
dec
jae
sti
sbb
out
adc
ror
inc
retf
test
test
fdivr
div
pop
arpl
jae
add
mov
xchg
call
ins
or
nop
fdiv
aam
clc
sbb
mov
sbb
inc
or
pusha
sbb
mov
rcl
(bad)
(bad)
call
sti
add
rcr
ficomp
mov
icebp
xor
dec
imul
ficom
mov
in
xchg
sub
cdq
mov
sbb
sub
jge
(bad)
ds
(bad)
sti
and
jl
xor
cwde
(bad)
(bad)
(bad)
jg
pusha
cdq
pop
in
jns
xchg
data16
xor
mov
movs
adc
and
add
sbb
lods
(bad)
(bad)
(bad)
(bad)
cmp
mov
cwde
(bad)
or
fsub
or
sbb
int3
jb
dec
outs
push
(bad)
fcomip
xchg
adc
in
and
cmps
mov
mov
jg
dec
jno
dec
gs
mov
xchg
push
pop
inc
enter
mov
push
rcr
pop
add
sub
(bad)
(bad)
push
mov
ss
lahf
or
jns
mov
test
retf
xor
sub
inc
cwde
jle
(bad)
(bad)
inc
pop
shr
data16
dec
jmp
fsubr
pop
les
stc
mov
(bad)
(bad)
mov
data16
fucomip
das
add
dec
lods
fmul
adc
mov
mov
sub
(bad)
dec
aam
jg
pop
mov
cli
adc
mov
mov
add
ret
sbb
push
jmp
cwde
xchg
gs
pop
dec
out
sub
(bad)
dec
sti
stos
retf
jbe
icebp
shr
pop
fidiv
stc
xor
pop
in
sahf
mov
hlt
mov
xchg
dec
mov
and
push
ret
add
jbe
push
fwait
push
(bad)
(bad)
(bad)
(bad)
jmp
jo
jmp
mov
data16
mov
fimul
add
(bad)
out
cli
fucomip
or
sub
xchg
lods
pop
scas
mov
mov
mov
popf
add
add
cmps
xchg
loope
adc
(bad)
std
or
add
pop
jmp
adc
cmc
pop
(bad)
(bad)
(bad)
dec
mov
cmps
sbb
fistp
or
call
cld
das
shl
jns
add
loop
ja
outs
cli
fbld
push
xchg
mov
xchg
dec
imul
xor
xchg
(bad)
(bad)
(bad)
push
dec
clc
adc
test
pop
sub
movaps
(bad)
lahf
push
paddusb
scas
data16
icebp
push
clc
jns
mov
sub
sub
inc
adc
hlt
mov
cli
or
(bad)
(bad)
(bad)
dec
xor
push
dec
cdq
jl
lea
dec
int
adc
mov
(bad)
push
fstp
sahf
inc
hlt
adc
cli
out
fucomip
ret
add
sub
gs
(bad)
jmp
popf
out
test
rol
mov
cdq
out
int3
xchg
or
sub
push
push
jmp
leave
ret
fwait
movs
sahf
fnstcw
jmp
mov
dec
mov
sub
das
jnp
push
push
test
(bad)
(bad)
call
loop
fcomp
or
out
les
repnz
xchg
(bad)
fst
dec
sub
sahf
fstp
mov
dec
adc
(bad)
jmp
idiv
lea
pop
jecxz
and
(bad)
jb
mov
(bad)
call
loope
jb
std
cld
dec
ret
mov
push
icebp
test
jbe
(bad)
jmp
stos
adc
bound
dec
fild
sub
lock
(bad)
call
bound
dec
jg
fs
lock
jg
fdivr
mov
add
cmp
btr
cmp
pop
dec
xor
jnp
test
addr16
ret
add
(bad)
(bad)
call
xor
fstp
int3
leave
xor
xchg
ret
ret
retf
jmp
loop
(bad)
(bad)
(bad)
jge
jo
jae
sub
mov
(bad)
mov
pop
fsub
imul
(bad)
(bad)
out
out
dec
dec
leave
inc
(bad)
fnstcw
xor
xor
inc
sahf
out
mov
std
(bad)
call
stos
dec
(bad)
call
lock
and
pop
test
mov
(bad)
jg
mov
or
(bad)
push
out
(bad)
daa
stos
call
push
cld
in
inc
stc
push
test
sub
mov
cli
test
dec
shl
jg
(bad)
push
adc
dec
jl
jno
hlt
ror
and
outs
js
xor
neg
std
inc
shr
retf
test
mov
add
loopne
xchg
ins
mov
stc
sub
push
fwait
mov
(bad)
(bad)
mov
mov
cmp
std
leave
in
fucomip
push
jecxz
mov
out
scas
or
popa
fwait
sar
fcomip
fbld
adc
lds
scas
fbld
retf
imul
jl
adc
mov
mov
in
pop
dec
push
cld
call
dec
adc
ret
jp
and
adc
(bad)
(bad)
(bad)
jmp
iret
call
hlt
ret
je
push
dec
fcmovnu
repz
and
cdq
sub
push
call
sbb
jbe
test
sbb
and
(bad)
(bad)
dec
cdq
inc
xor
iret
inc
jp
(bad)
pop
or
xchg
mov
idiv
mov
push
(bad)
(bad)
jmp
iret
aaa
and
or
rol
rcr
shr
in
cmps
mov
(bad)
call
sbb
aad
mov
inc
cmp
into
add
ins
push
fistp
(bad)
call
pop
js
mov
data16
dec
pop
cmp
fadd
lea
test
and
mov
frstor
cmp
(bad)
(bad)
call
push
or
and
hlt
adc
sbb
inc
dec
shr
mov
stc
sbb
push
retf
cmp
sub
sbb
sti
pusha
scas
mov
jg
(bad)
leave
mov
icebp
in
fwait
out
push
(bad)
and
push
(bad)
jmp
sar
call
(bad)
push
ss
test
inc
dec
call
inc
inc
cli
test
sbb
lds
mov
(bad)
mov
ja
pop
pop
add
mov
inc
xchg
jmp
call
rcl
imul
lods
mov
outs
test
cmc
jo
or
or
lods
mov
pop
xchg
(bad)
(bad)
dec
xchg
sbb
xlat
add
cld
and
push
jle
cld
shr
push
inc
jg
call
call
adc
inc
xchg
jle
lods
and
ss
xchg
or
addr16
enter
(bad)
call
jne
outs
test
(bad)
or
push
rcr
(bad)
adc
cdq
shl
xchg
frstpm(287
sub
(bad)
(bad)
push
(bad)
ficom
adc
jmp
shr
cmp
mov
loope
(bad)
call
cld
mov
cmps
sar
test
inc
jl
sbb
(bad)
(bad)
(bad)
jmp
push
xor
cmc
clc
in
or
in
imul
ficom
sbb
lock
ret
cli
inc
cmc
dec
push
sub
cmc
jge
add
int
adc
mov
pushf
std
mov
push
imul
pop
cwde
sub
adc
pop
(bad)
fild
push
xchg
mov
mov
ins
sub
(bad)
(bad)
jg
cmc
dec
out
cmp
fild
hlt
mul
jnp
clc
sbb
adc
cli
aam
(bad)
(bad)
(bad)
mov
loope
dec
mov
or
sub
dec
aad
rcl
lar
(bad)
(bad)
inc
dec
jp
jp
fcomip
mov
cmps
add
lods
push
aas
dec
lock
in
icebp
(bad)
jmp
test
push
cwde
cwde
inc
jmp
mov
(bad)
(bad)
dec
js
aam
stos
test
xor
lea
push
out
inc
mov
das
clc
sbb
cmp
xor
fcom
(bad)
pop
cs
(bad)
mov
ins
mov
pop
mov
mov
ror
push
xchg
adc
outs
clc
dec
aam
push
adc
push
pop
call
pop
mov
ror
retf
jb
add
in
sub
sbb
(bad)
(bad)
call
mov
mov
dec
cmp
mov
push
mov
lods
inc
add
out
cdq
dec
inc
out
add
hlt
(bad)
inc
add
adc
pop
movs
xor
in
xor
neg
je
inc
pusha
ss
fdivrp
(bad)
(bad)
dec
rcl
sbb
push
xlat
retf
xchg
ret
pop
inc
mov
pop
je
mov
pop
das
(bad)
(bad)
(bad)
dec
ds
jb
mov
daa
dec
jae
es
mov
daa
cld
in
cmp
mov
sub
sar
and
sbb
or
in
mov
mov
rcr
cmp
outs
cli
dec
out
or
out
and
(bad)
ds
dec
sub
cmps
push
sbb
ja
clc
call
neg
ror
pop
adc
cmps
mov
mov
int
(bad)
(bad)
jmp
jle
jb
addr16
pop
dec
mov
xor
test
pop
jnp
dec
xor
jmp
icebp
(bad)
mov
lods
or
fsub
popa
das
mov
pop
loopne
fbld
sbb
aas
pop
or
inc
ret
mov
inc
mov
dec
shl
aas
jl
ins
inc
xor
and
out
fidiv
sar
dec
inc
xchg
xor
or
lods
aad
fbld
test
not
xchg
cmp
inc
add
data16
(bad)
jnp
push
add
loop
pop
mov
(bad)
mov
push
icebp
cmp
mov
fs
jbe
(bad)
test
add
test
lock
push
cmc
cmp
popf
jmp
dec
sub
sbb
aam
dec
movs
ss
cmps
pop
(bad)
(bad)
(bad)
(bad)
dec
cmp
cmps
dec
daa
(bad)
mov
(bad)
push
lea
or
(bad)
call
(bad)
(bad)
jmp
inc
mov
mov
je
jle
int
cwde
mov
sub
inc
jno
daa
sub
nop
cmp
jecxz
dec
mov
adc
mov
dec
outs
shr
(bad)
cmp
and
and
outs
in
adc
mov
aad
xchg
sub
mov
shr
and
xchg
inc
or
mov
(bad)
fbstp
cmc
mov
xchg
jecxz
(bad)
call
sub
enter
mov
(bad)
inc
jb
test
(bad)
or
cdq
xlat
dec
in
(bad)
(bad)
out
ss
push
aam
in
mov
gs
adc
mov
inc
xchg
xor
cmp
hlt
retf
aas
push
mov
jmp
push
mov
call
cli
jge
sub
adc
jmp
mov
dec
jmp
(bad)
(bad)
(bad)
dec
or
push
int
mov
in
xchg
stc
dec
shl
fs
icebp
pop
adc
mov
stc
sub
(bad)
(bad)
jmp
pop
bswap
adc
stc
pop
gs
sbb
sbb
push
mov
pop
mov
fdiv
mov
(bad)
(bad)
dec
mov
loop
int3
out
or
lds
mov
sar
cmp
hlt
jg
sub
cmp
cmp
(bad)
call
cmc
lods
and
dec
dec
hlt
out
mov
cmp
pushf
jae
pop
pop
neg
int3
(bad)
(bad)
(bad)
dec
cmps
iret
aad
in
sbb
lock
adc
inc
jg
pop
inc
jns
jmp
pop
cmps
(bad)
(bad)
(bad)
(bad)
fnstsw
pushf
retf
ficom
mov
scas
leave
dec
and
out
sbb
std
and
dec
out
pop
jmp
jecxz
popf
jge
fidivr
(bad)
jp
pusha
mov
mov
ja
dec
std
mov
rcr
(bad)
fisub
jecxz
call
mov
inc
xor
mov
mov
(bad)
fisttp
mov
or
add
mov
sub
xor
out
(bad)
(bad)
(bad)
call
and
ret
jae
cmp
repz
inc
adc
push
push
dec
int3
pop
jno
add
xchg
add
es
lods
or
(bad)
stos
add
hlt
(bad)
(bad)
dec
fldz
pop
dec
pop
push
xchg
shl
jl
mov
iret
or
jle
dec
adc
iret
(bad)
call
pop
mov
mov
(bad)
(bad)
(bad)
dec
pushf
enter
popa
lahf
popa
cmp
push
sbb
(bad)
popf
rcl
push
fisubr
xor
(bad)
(bad)
(bad)
ficomp
loope
gs
dec
xchg
scas
scas
dec
mov
out
dec
into
cwde
add
xchg
inc
out
(bad)
(bad)
inc
movs
mov
jb
xchg
mov
sub
jmp
jmp
(bad)
(bad)
push
xchg
mov
inc
cmp
out
inc
in
dec
mov
arpl
rdmsr
lock
inc
jne
inc
outs
cmp
push
imul
mov
mov
icebp
jge
(bad)
(bad)
(bad)
jmp
xchg
pop
inc
call
fnstcw
mov
push
test
loope
or
ret
(bad)
(bad)
call
or
add
dec
sub
push
aad
push
mov
cmp
movs
sub
daa
dec
pushf
mov
packuswb
mov
in
into
ror
xor
lahf
call
push
adc
mov
(bad)
(bad)
(bad)
(bad)
call
fisttp
dec
dec
loop
mov
xlat
mov
mov
mov
mov
outs
mov
xor
dec
shl
push
cld
(bad)
dec
rcl
stc
push
mov
sbb
retf
fidiv
xchg
or
and
mov
(bad)
fistp
mov
fdiv
(bad)
mov
pusha
mov
addr16
jbe
pop
push
adc
jle
mov
pop
lock
sti
inc
sbb
sbb
inc
push
out
jbe
add
ja
cmp
mov
jmp
je
div
sti
pop
mov
add
fwait
pop
pop
jbe
cmp
idiv
rcr
pop
aas
mul
sbb
mov
cmp
push
out
(bad)
in
sar
(bad)
(bad)
push
pop
lds
pop
rol
cli
pop
add
ins
mov
push
xlat
xchg
icebp
imul
inc
stc
test
mov
mov
jne
imul
in
test
(bad)
jmp
popf
ss
inc
dec
retf
mov
mov
(bad)
(bad)
stc
(bad)
ja
sahf
imul
in
in
into
sbb
mov
rcr
iret
and
cmps
jb
loop
push
sbb
sbb
(bad)
repnz
(bad)
(bad)
inc
imul
cmp
pop
out
mov
pop
pushf
dec
mov
inc
hlt
dec
add
in
sahf
or
adc
add
or
xchg
xchg
sub
(bad)
(bad)
(bad)
out
(bad)
cmp
mov
cld
and
retf
mov
jl
or
repz
inc
mov
or
push
mov
or
jnp
inc
call
(bad)
jmp
inc
xchg
cld
shr
dec
jb
out
push
cmps
ja
cmp
(bad)
(bad)
inc
int
xchg
mov
in
cs
xor
and
adc
stos
and
lock
(bad)
(bad)
(bad)
call
sub
stc
cmps
fistp
add
mov
jg
xor
les
std
push
les
(bad)
(bad)
(bad)
call
push
mov
mov
mov
add
pop
push
xor
inc
mov
(bad)
(bad)
(bad)
call
or
stc
scas
mov
pop
fst
push
cmp
push
xchg
gs
jp
test
(bad)
call
aas
lds
xchg
mov
ja
mov
jl
push
mov
and
std
pop
not
in
loopne
(bad)
(bad)
call
xchg
jb
out
jmp
xchg
inc
mov
xchg
es
sahf
sbb
jmp
frstor
cmp
pop
cmp
xchg
inc
dec
(bad)
(bad)
mov
jae
jb
sub
or
and
jp
sub
jmp
clc
call
inc
aaa
adc
push
and
inc
das
test
popf
out
(bad)
jmp
(bad)
mov
cmp
jmp
add
icebp
cs
pop
call
(bad)
push
int3
pusha
mov
xor
(bad)
mov
dec
cs
rcr
outs
xchg
icebp
repnz
neg
(bad)
je
lods
cmps
sub
in
jmp
sbb
push
outs
xchg
pop
cmps
movs
mov
and
fidiv
add
jg
hlt
inc
jle
out
dec
neg
xchg
cs
fcomip
(bad)
jmp
add
ins
pop
stos
push
ret
ins
or
daa
fisubr
cwde
push
push
(bad)
(bad)
(bad)
call
push
dec
adc
mov
and
fiadd
loop
dec
pop
cmp
repz
jbe
out
fnstsw
mov
fsub
xchg
jmp
in
(bad)
inc
push
inc
jnp
call
lea
into
daa
shl
push
pop
pop
jbe
mov
xor
ret
cmps
ret
lods
inc
mov
(bad)
(bad)
mov
jecxz
packssdw
xchg
js
and
jle
jno
imul
cwde
jecxz
add
and
xchg
into
fwait
add
hlt
bound
adc
ret
jno
dec
adc
mov
loop
inc
xor
loop
cmp
xor
hlt
ss
(bad)
(bad)
(bad)
jmp
(bad)
mov
retf
adc
add
enter
mov
shl
loope
push
not
inc
test
das
ds
lods
add
or
jmp
pop
pop
inc
xor
gs
call
push
out
dec
fbstp
push
jne
and
iret
and
dec
cli
je
adc
xchg
repnz
xor
(bad)
(bad)
jmp
(bad)
out
lock
cdq
call
repnz
imul
cld
pop
std
mov
mov
or
shl
cmp
mov
or
sbb
add
sub
daa
push
fs
imul
dec
movs
ret
ja
jbe
dec
popf
not
sub
stc
out
pop
lods
xor
test
(bad)
(bad)
dec
bound
aam
mov
shr
ffreep
popf
inc
xchg
repz
cmp
test
mov
fnstcw
(bad)
(bad)
(bad)
(bad)
jmp
add
cmp
je
sbb
in
cmp
inc
stc
std
test
mov
dec
pop
sbb
sub
(bad)
(bad)
jmp
(bad)
xchg
stos
add
mov
sub
(bad)
dec
out
pop
in
sbb
sub
(bad)
(bad)
call
sbb
sti
jmp
scas
int3
(bad)
mov
leave
xchg
(bad)
outs
pop
(bad)
(bad)
dec
jo
pop
sbb
inc
fld
not
push
frstor
inc
xchg
pop
in
mov
mov
aad
push
out
jae
dec
loope
dec
stos
jmp
mov
fadd
dec
cli
mov
(bad)
js
pop
(bad)
pop
cmp
test
es
push
jmp
push
and
jo
out
sbb
cmp
mov
jmp
scas
adc
test
popa
jl
aad
adc
or
aad
mov
je
das
int
cmp
call
(bad)
repnz
xchg
cdq
lods
aam
mov
mov
mov
ja
pushf
and
and
cmp
pusha
cdq
popa
jmp
jnp
movs
inc
pop
add
(bad)
(bad)
call
adc
or
aam
and
pop
call
sbb
sbb
or
xor
sub
sbb
mov
add
dec
int
pop
xchg
jecxz
mov
into
cmp
dec
or
add
loope
(bad)
call
out
fadd
(bad)
sahf
js
iret
addr16
mov
ret
cli
push
sar
(bad)
(bad)
mov
dec
sahf
sbb
enter
mov
push
or
ja
sti
les
(bad)
sub
(bad)
inc
xchg
icebp
jmp
dec
push
mov
or
sbb
cmps
push
jl
rcl
ins
test
mov
daa
xor
and
neg
sbb
adc
or
jg
call
pop
js
fsub
cmp
xchg
(bad)
(bad)
(bad)
dec
push
aas
test
push
dec
fcomp
pop
sahf
mov
test
xor
(bad)
push
call
rol
cmp
adc
push
jmp
push
mov
mov
pop
stos
fidivr
repnz
jg
(bad)
push
pop
icebp
pop
push
inc
(bad)
(bad)
(bad)
(bad)
jmp
cmp
es
mov
stc
pop
iret
inc
ss
(bad)
mov
mov
(bad)
(bad)
push
outs
xor
call
sub
and
retf
ds
mov
xchg
shl
pop
out
gs
outs
mov
push
sar
cmp
int3
sub
push
les
push
jmp
(bad)
call
lock
cmps
sub
sub
fnstsw
test
inc
imul
call
fidivr
repnz
stos
mov
ret
xor
fs
dec
mov
sahf
(bad)
(bad)
(bad)
jmp
sub
mov
rcl
jmp
sar
call
lods
das
mov
(bad)
(bad)
(bad)
mov
cmc
rcl
(bad)
aaa
mov
idiv
(bad)
inc
adc
stc
jb
inc
xor
adc
cli
jp
ss
inc
js
mov
retf
ja
int
aam
int
mov
push
push
jnp
in
rcl
shl
icebp
dec
xchg
pop
mov
(bad)
fild
and
dec
adc
int3
sbb
int3
inc
sub
xlat
test
pop
or
(bad)
(bad)
(bad)
jg
into
mov
movs
adc
jnp
(bad)
cmp
call
(bad)
cmp
jg
(bad)
(bad)
call
add
or
in
or
xor
gs
or
cs
push
out
ja
pop
clc
outs
cli
(bad)
(bad)
jg
pop
inc
loope
inc
pop
sub
sub
pop
sbb
ds
sub
std
pop
(bad)
(bad)
mov
in
aas
(bad)
dec
pop
and
sbb
(bad)
xlat
and
(bad)
or
in
push
outs
jecxz
les
jmp
push
(bad)
(bad)
(bad)
push
and
add
maxps
fs
pop
aad
and
push
xor
inc
test
cmp
add
into
(bad)
mov
int3
sbb
cli
int
mov
call
(bad)
(bad)
dec
add
cmp
mov
movs
push
cmp
and
xchg
dec
cmp
mov
fst
push
and
xor
mov
out
in
push
adc
pop
ins
(bad)
(bad)
(bad)
mov
cdq
xchg
or
fstp
cmp
call
jl
clc
fbld
(bad)
(bad)
fistp
push
aam
or
test
add
(bad)
cmp
(bad)
inc
push
aas
mov
dec
in
or
cmps
xor
(bad)
(bad)
jmp
mov
scas
(bad)
mov
jbe
sbb
jae
scas
sbb
cmc
in
sbb
cmp
adc
pop
ret
pop
and
aam
push
dec
out
sub
sti
or
mul
(bad)
(bad)
(bad)
dec
fisttp
loopne
movs
jmp
pop
xchg
pushf
cmp
xor
add
(bad)
in
jmp
scas
cmp
dec
sbb
iret
out
adc
rcr
popf
pop
mov
ins
jecxz
shl
loopne
inc
xlat
push
out
mov
add
jge
aas
sub
iret
pop
sbb
rol
aaa
std
fdivr
in
bswap
test
jmp
mov
in
push
push
sbb
inc
xchg
(bad)
jmp
pop
fldcw
xor
sub
mov
aaa
scas
fldenv
pop
dec
sbb
sbb
(bad)
jg
(bad)
mov
(bad)
mov
add
jmp
pop
xchg
lahf
ror
cmps
pop
xlat
test
inc
add
xor
call
(bad)
jmp
fist
loop
jg
pop
sbb
and
popf
test
ss
inc
cmp
(bad)
fild
daa
les
jp
push
movs
int
cdq
push
out
mov
pop
repnz
jmp
popf
xchg
pop
dec
lds
rol
ins
das
mov
add
test
outs
pop
xchg
(bad)
(bad)
(bad)
inc
fcmovnu
fdiv
adc
cld
pop
or
xchg
push
outs
jno
clc
dec
popa
outs
stos
loop
ins
ret
(bad)
(bad)
dec
fisub
push
test
cmp
cmp
push
dec
xor
lahf
sub
mov
(bad)
(bad)
call
lds
es
pop
jmp
loop
dec
bound
mov
xlat
adc
mov
retf
lock
mov
int3
push
jg
cmps
push
xor
cli
cmp
jno
cs
(bad)
(bad)
jmp
stos
xor
pop
packssdw
mov
sbb
sbb
sub
js
or
jmp
(bad)
dec
pop
(bad)
(bad)
push
call
dec
dec
(bad)
es
mov
in
sub
fdivrp
cmp
ror
mov
cmp
ret
(bad)
call
retf
test
icebp
adc
(bad)
das
inc
addr16
das
lds
mov
mov
xor
(bad)
(bad)
(bad)
jmp
mov
dec
mov
xor
and
iret
or
lds
or
jae
adc
(bad)
inc
xlat
dec
push
mov
aas
fsubrp
(bad)
mov
pop
(bad)
cli
jle
jb
mov
pusha
(bad)
(bad)
(bad)
dec
add
inc
xchg
cs
jns
jae
or
ins
mov
pop
test
frstor
cmp
jnp
(bad)
(bad)
(bad)
dec
add
xchg
std
(bad)
iret
sub
xchg
fmul
cmp
pusha
cmps
sbb
(bad)
(bad)
(bad)
call
mov
jg
jae
inc
rcl
aaa
mov
cvtps2pd
div
adc
imul
je
dec
cli
jmp
or
cs
xor
out
(bad)
pushf
dec
push
(bad)
(bad)
(bad)
(bad)
dec
pop
ret
ret
retf
mov
pop
mov
lock
sbb
lds
mov
xor
(bad)
(bad)
(bad)
cmp
sbb
sahf
jnp
aas
movs
outs
add
xchg
(bad)
outs
pop
popa
and
jo
pop
xchg
sub
(bad)
call
push
repnz
mov
hlt
and
adc
mov
bswap
icebp
mov
std
add
push
inc
pop
aaa
pop
add
nop
out
(bad)
jo
push
nop
stos
out
(bad)
(bad)
(bad)
dec
cmp
sti
sub
data16
add
rcl
xor
cs
(bad)
(bad)
(bad)
inc
and
ret
retf
and
inc
push
jnp
inc
push
sub
out
iret
push
js
hlt
icebp
(bad)
(bad)
push
and
xchg
and
jl
fadd
popf
in
jo
not
(bad)
push
cmps
push
call
pop
push
add
or
adc
xchg
pop
je
int3
das
cmc
push
xor
aas
pusha
add
in
dec
(bad)
(bad)
(bad)
dec
pop
loope
cmp
dec
and
aad
xchg
call
xchg
ins
jns
aad
mov
cmc
(bad)
inc
call
push
movups
jno
cmp
dec
and
call
loope
jge
cmp
rcl
stc
mov
mov
jbe
fyl2xp1
pop
(bad)
(bad)
(bad)
push
bound
pop
(bad)
rol
push
lds
sbb
repz
aas
xor
jnp
call
pop
and
xchg
out
mov
mov
aas
pop
(bad)
(bad)
(bad)
(bad)
cmp
xchg
mov
ret
mov
pop
(bad)
ins
nop
sub
ss
sub
(bad)
(bad)
in
mov
stos
call
repnz
dec
jne
sti
push
push
cmps
mov
pop
sbb
clc
jp
sbb
(bad)
push
imul
mov
or
jno
js
js
cmp
js
(bad)
(bad)
mov
rcl
inc
jmp
sar
cs
lahf
loope
push
lock
push
jle
test
sub
fdivr
dec
(bad)
in
(bad)
out
inc
bound
pop
(bad)
dec
and
adc
push
aaa
xchg
sar
xchg
add
sub
cmp
pusha
jg
(bad)
jmp
jl
cld
scas
sbb
xor
out
dec
(bad)
push
fild
(bad)
fild
xchg
outs
inc
sub
pusha
and
gs
cmp
jne
xchg
sub
inc
mov
jecxz
push
dec
sbb
xchg
xchg
mov
mov
jg
scas
stc
(bad)
(bad)
call
push
(bad)
in
test
mov
cld
popa
jecxz
push
push
ror
repz
daa
shl
dec
(bad)
(bad)
(bad)
push
and
rcr
scas
xchg
xchg
jp
daa
fnstcw
cmp
shl
call
pop
stc
out
hlt
xchg
inc
out
jg
dec
arpl
mov
(bad)
(bad)
jmp
push
call
mov
add
mov
jnp
lea
push
(bad)
jmp
cdq
stos
out
cli
pop
iret
inc
nop
jo
dec
jle
pop
int3
jge
std
jg
sbb
xchg
mov
ins
fcomp
sbb
cmp
adc
dec
std
call
adc
int3
xchg
loopne
mov
(bad)
(bad)
jg
jns
xor
sbb
jecxz
mov
add
pop
jbe
out
sahf
add
inc
daa
pop
(bad)
(bad)
(bad)
jmp
and
push
movs
or
movs
retf
loop
jno
jne
sbb
cwde
push
adc
(bad)
(bad)
(bad)
call
mul
lds
cmp
and
cmp
cmp
jne
(bad)
(bad)
(bad)
dec
jmp
xchg
ret
push
xlat
pop
xchg
xor
call
mov
sbb
mov
sar
call
call
and
(bad)
(bad)
inc
(bad)
iret
cli
add
cs
outs
outs
cmp
aas
clc
cmp
aas
ror
not
adc
pop
mov
cmp
ja
cli
pop
sub
cmp
arpl
xchg
shr
xchg
jg
(bad)
(bad)
call
adc
pop
das
mov
jns
add
sub
imul
(bad)
mov
cmp
sub
outs
stos
pusha
loopne
jb
add
pop
inc
fld
icebp
dec
push
adc
pop
sar
das
sbb
cmp
cmp
mov
xor
in
fidiv
xor
push
lock
sbb
sbb
pop
jmp
mov
(bad)
dec
rcr
cwde
icebp
aam
(bad)
fidivr
hlt
mov
ss
dec
out
add
(bad)
(bad)
mov
pusha
jbe
dec
out
es
ret
repnz
pop
shl
jp
fdivr
sbb
(bad)
(bad)
jp
cli
push
xchg
(bad)
arpl
cwde
jmp
cmp
gs
xchg
pop
sbb
imul
(bad)
(bad)
dec
sahf
gs
loopne
and
add
pop
fcmovnbe
mov
xchg
retf
push
(bad)
(bad)
(bad)
mov
push
out
pop
sub
xor
ss
jno
mov
xchg
adc
sub
int
pop
imul
or
sti
mov
aad
pop
mov
cmp
jae
mov
ret
mov
add
popa
push
call
add
jl
loope
imul
mov
(bad)
cmp
pop
pop
pop
fwait
sbb
cmp
mov
scas
in
xchg
loope
add
xlat
test
(bad)
jmp
pop
std
jns
dec
push
jmp
mov
in
clc
daa
mov
push
sbb
pop
sbb
and
div
pop
pop
add
mov
repnz
(bad)
cmp
rol
xor
(bad)
(bad)
(bad)
push
sbb
lahf
call
iret
fistp
test
jecxz
sbb
lods
es
adc
test
aas
test
sti
test
cmp
add
cmp
(bad)
(bad)
(bad)
inc
aam
iret
push
repnz
mov
repz
outs
test
enter
jmp
adc
or
(bad)
dec
push
or
or
jns
xor
or
mov
adc
sub
(bad)
jmp
pushf
(bad)
jnp
retf
pop
inc
(bad)
(bad)
(bad)
call
cmp
mov
or
ret
inc
or
out
add
dec
dec
je
(bad)
(bad)
(bad)
inc
inc
jne
ins
sahf
jmp
mov
pop
pop
or
or
jmp
push
(bad)
(bad)
(bad)
dec
cmc
jmp
add
aas
imul
outs
mov
push
stos
pop
scas
loope
(bad)
(bad)
call
mov
adc
xchg
idiv
push
push
mov
jbe
mov
push
push
scas
sbb
mov
fdivp
aad
mov
or
push
(bad)
mov
mov
stos
int
push
aad
push
push
push
mov
movs
scas
rcr
movs
call
hlt
je
shr
inc
pop
gs
sub
jmp
call
jbe
jecxz
jecxz
xchg
adc
pusha
push
leave
sub
scas
retf
xchg
mov
mov
(bad)
(bad)
jmp
fdiv
mov
movs
jg
rol
jl
mov
cmp
(bad)
xchg
aaa
out
int
or
sbb
(bad)
mov
(bad)
dec
fwait
jp
sbb
out
pop
imul
je
iret
jo
cmps
push
jns
mov
(bad)
(bad)
(bad)
push
mov
push
in
(bad)
(bad)
out
mov
into
mov
jo
jbe
cmp
mov
int3
push
adc
rcr
mov
jns
hlt
shl
sub
cs
adc
iret
cmc
cmp
(bad)
(bad)
call
inc
iret
fld
adc
vmread
shl
icebp
pop
iret
mov
clc
or
clc
(bad)
call
outs
inc
in
add
ficomp
cmc
retf
adc
(bad)
(bad)
(bad)
(bad)
jge
cmp
mov
fwait
xlat
lods
clc
jns
xchg
pop
bound
or
cli
ds
(bad)
(bad)
(bad)
call
in
lock
pop
sbb
cmps
cs
xchg
sbb
mov
(bad)
(bad)
mov
jne
jmp
sbb
sub
jne
jmp
data16
call
push
ins
pop
retf
jnp
je
jmp
inc
sbb
push
adc
fadd
pop
adc
adc
or
cmc
gs
call
jmp
or
pop
jb
and
jle
add
(bad)
(bad)
cmp
aad
jp
retf
adc
mov
sbb
ficomp
ins
fisttp
out
ds
dec
in
xchg
(bad)
fwait
push
fstp
and
mov
pop
outs
out
pop
fldenv
xchg
in
(bad)
(bad)
(bad)
call
(bad)
jo
xlat
mov
jg
test
jmp
in
mov
repnz
xchg
cmc
sbb
sub
lock
pop
loop
dec
push
(bad)
cmc
neg
(bad)
cmp
adc
in
mov
sub
movs
mov
inc
mov
not
dec
xchg
das
(bad)
(bad)
(bad)
mov
not
or
push
int3
pusha
fcomi
push
sbb
sbb
or
icebp
cmp
xchg
les
pop
pop
xor
retf
jmp
hlt
data16
into
test
(bad)
jmp
lock
fs
cmp
test
adc
mov
pop
adc
dec
data16
pushf
jmp
in
das
sub
(bad)
(bad)
fsubr
enter
xor
mov
add
pop
xchg
jmp
jno
outs
dec
xchg
(bad)
(bad)
(bad)
call
add
xchg
ret
out
inc
call
ret
pop
adc
not
(bad)
(bad)
call
cmp
adc
fiadd
sti
inc
pop
out
enter
sub
jecxz
fmul
push
xchg
mov
jecxz
push
jg
cmp
xor
add
movs
cmp
add
xchg
(bad)
or
fild
ret
xor
mov
inc
in
mov
sar
stos
or
pop
shr
pop
or
pop
inc
pop
or
push
adc
pop
(bad)
(bad)
(bad)
(bad)
fsubr
dec
sbb
sbb
jno
fs
int3
in
mov
shl
adc
push
enter
or
xchg
pop
ss
mov
xor
shl
(bad)
(bad)
(bad)
call
lods
or
(bad)
adc
adc
stos
pushf
mov
adc
and
mov
cli
movs
pop
inc
(bad)
jmp
xchg
mov
or
addr16
(bad)
(bad)
(bad)
jl
jle
mov
dec
cmp
mov
fstp
test
scas
(bad)
enter
mov
add
xchg
adc
mov
in
xor
popf
pop
(bad)
(bad)
fcomip
inc
push
pop
aas
mov
ins
dec
fld
neg
mov
(bad)
call
jns
sub
leave
cwde
test
(bad)
lock
in
push
inc
mov
clc
imul
(bad)
(bad)
(bad)
(bad)
out
mov
(bad)
cs
adc
repnz
jmp
(bad)
jp
inc
inc
mov
xor
or
pop
(bad)
clc
(bad)
jnp
dec
add
mov
add
lods
in
jnp
xlat
dec
sbb
daa
inc
iret
movs
add
inc
sub
sub
std
adc
ins
jae
add
jb
xor
xchg
cdq
sbb
(bad)
cmp
cdq
lods
push
dec
adc
nop
sbb
adc
mov
sub
movs
ja
nop
movs
int3
retf
fcom
(bad)
call
xchg
sub
sub
dec
mov
scas
sar
icebp
(bad)
cmp
sbb
lahf
(bad)
arpl
push
ficomp
in
lds
arpl
fdivr
(bad)
(bad)
jmp
pop
stos
scas
and
stc
cld
inc
paddw
xor
xchg
test
jg
(bad)
(bad)
call
test
call
xor
dec
cmp
add
dec
sbb
and
(bad)
(bad)
(bad)
call
out
mov
popf
test
cmp
and
fimul
pusha
mov
(bad)
inc
push
(bad)
jp
test
jge
xchg
lods
mov
prefetcht0
inc
inc
aas
fild
icebp
inc
pop
mov
scas
inc
jbe
push
cmps
test
loop
xchg
sub
in
test
mov
lea
xchg
popa
in
mov
sar
jmp
dec
xchg
or
(bad)
adc
mov
adc
xor
gs
xlat
lds
popf
(bad)
(bad)
(bad)
dec
in
adc
(bad)
xor
adc
stos
cmc
xlat
add
adc
and
xchg
scas
cdq
(bad)
jg
outs
jo
and
ds
xlat
push
fld
or
sbb
(bad)
inc
imul
xor
inc
movs
mov
push
pop
ret
imul
sub
test
movs
push
sub
imul
ds
cwde
fdivr
(bad)
call
or
push
iret
cs
dec
dec
stos
cli
in
jmp
lea
(bad)
jmp
test
push
jp
mov
jge
pusha
rcl
sbb
push
fldcw
mov
retf
or
(bad)
(bad)
jmp
pop
push
(bad)
mov
pop
push
inc
push
inc
clc
(bad)
clc
rcr
fcomp
pop
inc
aaa
mov
(bad)
(bad)
call
loop
and
sub
or
mov
xor
test
inc
inc
or
stos
fsubr
sub
clc
or
pop
lock
(bad)
(bad)
inc
stos
cmps
(bad)
icebp
jne
lds
aas
mov
or
xor
cmp
(bad)
(bad)
jmp
es
ficomp
push
aas
mov
lds
stos
push
ins
sbb
inc
inc
add
inc
mov
jmp
in
outs
or
lea
mov
mov
and
mov
cli
call
xor
sub
test
lods
jnp
pop
(bad)
(bad)
(bad)
dec
xor
adc
and
loope
pushf
test
lds
sub
fild
ins
pushf
push
dec
movs
jecxz
jmp
(bad)
(bad)
(bad)
call
dec
shr
xchg
shl
push
ins
jge
mov
inc
daa
(bad)
fadd
sar
(bad)
(bad)
jmp
push
(bad)
in
sub
mov
or
push
and
add
mov
jns
push
cmc
lea
clc
sbb
(bad)
(bad)
jmp
pop
pop
fmul
add
(bad)
xchg
push
add
adc
out
xor
ins
and
cmp
push
(bad)
icebp
nop
sub
xor
shr
mov
pop
jmp
pop
and
xchg
div
idiv
(bad)
test
lods
pusha
cmc
xchg
imul
mov
aas
xor
pop
ins
sbb
adc
sar
sbb
sub
jmp
sbb
loope
ftst
pop
test
adc
cmp
push
fldlg2
sbb
ss
lea
xchg
mov
ret
mov
scas
xchg
hlt
call
or
add
mov
mov
add
(bad)
(bad)
(bad)
js
push
shl
pop
mov
sti
push
dec
(bad)
mov
add
mov
mov
(bad)
inc
pusha
outs
sbb
xor
jo
mov
pop
in
xlat
jg
pop
jecxz
xlat
inc
or
clc
(bad)
jmp
jne
adc
push
inc
push
add
pop
push
mov
inc
test
push
xchg
push
and
scas
imul
push
cmps
mov
sti
je
or
dec
(bad)
jmp
push
inc
xor
dec
ret
jo
scas
mov
stos
lods
add
inc
pop
fcmovnu
test
pop
test
(bad)
js
inc
jmp
inc
adc
(bad)
inc
cmps
sub
inc
test
xchg
mov
push
sbb
pop
das
clc
(bad)
call
mov
stos
sub
rcl
cdq
je
mov
and
and
loop
pop
(bad)
(bad)
dec
(bad)
pop
add
add
push
or
xor
test
mov
(bad)
(bad)
(bad)
cmp
ret
arpl
lock
or
(bad)
(bad)
dec
loope
pusha
mov
mov
jne
inc
out
adc
pop
add
gs
std
mov
clc
adc
les
mov
leave
fadd
lock
xor
sti
jle
call
add
in
(bad)
(bad)
call
mov
cmp
or
sub
or
inc
scas
loop
mov
sbb
outs
test
std
(bad)
(bad)
(bad)
xor
adc
cld
loopne
(bad)
cmp
out
fild
mov
jge
ja
aam
(bad)
push
rcl
pop
pusha
stos
jmp
or
dec
repnz
push
or
push
dec
jecxz
bound
and
dec
xlat
jnp
sbb
dec
add
adc
and
(bad)
cmp
nop
fbstp
cli
dec
mov
pop
sub
cld
jnp
sub
jmp
push
ins
cli
jns
not
scas
cli
inc
cmp
dec
pusha
mov
mov
in
pusha
or
xchg
(bad)
fmul
in
pusha
outs
sar
clc
dec
and
dec
cdq
add
or
push
adc
neg
loop
lea
add
fld
out
ud2
mov
(bad)
(bad)
jmp
push
fadd
xchg
and
jnp
(bad)
js
add
sub
fcomi
jmp
(bad)
call
dec
add
(bad)
hlt
push
pop
fld
push
mov
jmp
(bad)
(bad)
fild
test
fistp
sub
and
lahf
std
mul
lahf
loope
add
int
leave
std
(bad)
(bad)
inc
imul
or
pop
jmp
sar
or
and
jg
sar
imul
(bad)
(bad)
mov
cld
bound
(bad)
inc
pop
call
imul
call
pop
cld
sub
jg
loope
jg
sub
fs
fucom
sbb
and
scas
xor
fs
inc
imul
(bad)
sub
sti
popa
data16
nop
data16
std
inc
xor
adc
(bad)
loope
jmp
dec
fdivr
xchg
add
mov
add
add
push
test
add
dec
or
fst
lds
fmul
cmp
call
or
xchg
inc
addr16
(bad)
fadd
sbb
jmp
mov
dec
cld
inc
xchg
je
nop
inc
mov
stc
fwait
(bad)
push
adc
cmc
dec
and
add
pop
push
mov
es
jae
pop
bound
push
(bad)
(bad)
inc
lock
inc
jg
dec
dec
and
sub
jle
xchg
rcl
or
test
stos
cs
pop
aam
int
push
dec
push
dec
and
jle
inc
sub
mov
or
(bad)
(bad)
dec
ins
and
(bad)
fsubrp
(bad)
les
mov
sub
xchg
adc
bound
test
out
pop
je
xchg
daa
cwde
daa
jbe
mov
dec
nop
xchg
xor
add
mov
adc
(bad)
jmp
dec
sub
mov
ja
pop
add
or
mov
cli
add
pusha
add
mov
xchg
xchg
jecxz
inc
sub
mov
ins
cmp
add
dec
dec
pushf
fs
or
adc
pop
inc
sub
inc
cli
jns
out
imul
sub
into
cmp
(bad)
call
adc
adc
sub
test
mov
add
(bad)
mov
dec
inc
sbb
add
cmp
pop
mov
add
div
or
jmp
cmps
and
ja
mov
imul
adc
cmp
stos
xchg
xor
mov
cmps
dec
dec
aaa
push
jl
sar
mov
(bad)
mov
imul
(bad)
(bad)
(bad)
call
fnstsw
std
push
jnp
sahf
inc
pop
je
stos
fstp
fs
or
out
mov
jno
mov
add
pushf
mov
(bad)
(bad)
jnp
jns
daa
ret
mov
adc
and
test
ret
add
jbe
stc
aam
and
jmp
in
xchg
jb
dec
xlat
jo
rcr
(bad)
jmp
ins
scas
(bad)
jmp
stos
mov
call
dec
jno
mov
test
mov
cmc
mov
adc
mov
sub
(bad)
mov
aam
fs
data16
xor
mov
(bad)
(bad)
(bad)
inc
adc
dec
jl
cmp
sub
loopne
ja
jb
and
dec
xchg
mov
ins
mov
push
loopne
fdiv
xchg
sbb
pop
adc
in
jl
mov
inc
imul
add
cmps
xor
mov
xchg
xchg
dec
movs
mov
mov
mov
(bad)
push
push
das
push
dec
inc
jecxz
cmc
mov
and
or
mov
(bad)
(bad)
jg
mov
push
mov
mov
adc
mov
jmp
pop
mov
ror
cmp
imul
cdq
xchg
(bad)
(bad)
(bad)
(bad)
fcom
push
inc
repnz
clc
mov
xchg
shl
imul
add
inc
fst
xchg
mov
icebp
dec
mov
lock
push
movhlps
out
fdiv
repnz
cld
pop
(bad)
dec
add
imul
bnd
je
out
inc
mov
pop
outs
std
dec
(bad)
push
std
dec
nop
in
fs
dec
nop
dec
xor
mov
fdivr
jg
call
cli
dec
sub
jae
xchg
in
neg
mov
add
mov
aas
(bad)
ins
(bad)
hlt
inc
test
xor
ja
es
inc
sub
aas
cmps
int
popf
(bad)
cld
dec
fmulp
aaa
in
fstp
xor
push
es
(bad)
call
add
ret
mov
jmp
mov
or
pop
(bad)
(bad)
(bad)
dec
retf
or
retf
mov
xchg
fs
pusha
shr
mov
daa
(bad)
(bad)
(bad)
inc
nop
outs
inc
sub
fidiv
bound
mov
ja
or
sub
das
xor
sbb
pushf
sub
xor
and
int
scas
pop
inc
pop
mov
mov
sbb
xchg
sar
adc
cmp
pop
icebp
inc
shl
aaa
popf
sub
sub
dec
imul
fidiv
shr
sar
inc
daa
cmp
pusha
cmp
inc
pop
cmc
dec
(bad)
mov
ins
mov
jmp
stos
jne
adc
inc
pusha
or
mov
mov
cs
xor
push
(bad)
(bad)
(bad)
jmp
pushf
jmp
pop
xor
pop
mov
loop
xor
leave
lahf
pop
fistp
mov
mov
push
mov
push
test
(bad)
push
sub
pushf
nop
lea
icebp
inc
dec
or
(bad)
(bad)
call
add
xchg
mov
loopne
pop
inc
shl
pop
or
cdq
jecxz
aaa
or
inc
push
mov
jmp
adc
adc
(bad)
(bad)
push
je
adc
add
clc
or
(bad)
jle
xor
inc
cmp
call
js
add
push
in
add
jae
add
cmp
sbb
xchg
sahf
sub
ret
test
xor
lods
out
daa
lods
adc
jmp
sub
mul
ret
jge
ds
ret
icebp
pop
fadd
push
jae
jae
adc
sti
stos
inc
jmp
(bad)
or
push
call
or
add
push
xor
adc
mov
(bad)
(bad)
mov
or
iret
cmps
add
daa
xchg
inc
popa
mov
mov
mov
or
(bad)
(bad)
(bad)
jmp
ds
push
cmovs
cmp
mov
pop
stos
adc
jl
xchg
mov
add
fsubr
(bad)
(bad)
(bad)
call
(bad)
or
xlat
scas
add
inc
and
imul
fisubr
sub
mov
sahf
mov
sbb
popf
push
shr
push
test
mov
(bad)
inc
pop
ins
mov
std
loopne
push
jmp
push
(bad)
std
push
call
mov
jnp
jp
and
sti
pop
xchg
sub
jecxz
mov
fisubr
cli
sbb
(bad)
(bad)
jmp
or
inc
shr
sub
mov
push
sti
jmp
push
sbb
fwait
(bad)
(bad)
call
cmp
shl
ja
or
jecxz
pop
jmp
icebp
cmps
fisubr
ja
call
fbld
fwait
popa
cmps
(bad)
cli
stos
in
jno
ficomp
popf
mov
push
(bad)
(bad)
(bad)
inc
xchg
jecxz
inc
lds
jge
mov
(bad)
mov
sub
imul
xor
ins
sar
pop
push
in
out
pop
in
scas
sahf
stc
(bad)
(bad)
jg
je
shl
(bad)
std
dec
jne
es
add
(bad)
xor
retf
(bad)
(bad)
cmp
xchg
or
cdq
mov
movs
mov
ins
and
and
and
or
dec
clc
xchg
(bad)
(bad)
(bad)
push
test
bound
jg
inc
mov
ins
mov
aam
retf
lock
mov
enter
mov
rol
cmp
movsx
cmp
mov
(bad)
mov
fstp
xor
daa
mov
sbb
adc
jle
sbb
lock
pop
jns
test
dec
(bad)
(bad)
(bad)
(bad)
mov
mov
jmp
push
ja
iret
ficomp
or
ja
cwde
fwait
(bad)
(bad)
(bad)
call
jmp
push
rol
stc
pop
pop
in
fucomip
int3
push
int3
cli
xchg
nop
xor
add
dec
mov
(bad)
loope
xchg
jo
retf
push
xchg
daa
sbb
lods
loopne
std
xor
push
mov
or
fwait
cmp
(bad)
(bad)
(bad)
call
ins
cmp
mov
xchg
sub
(bad)
aaa
mov
dec
lods
mov
jbe
(bad)
(bad)
dec
xchg
test
push
loopne
pop
(bad)
cmp
aaa
pop
enter
loopne
ds
sub
pop
add
jns
jg
(bad)
mov
jge
xchg
and
shl
sbb
or
sar
jl
sbb
popa
loope
repnz
(bad)
(bad)
dec
mov
push
dec
mov
cmp
ficom
xor
pop
ret
pop
mov
cmp
scas
(bad)
(bad)
(bad)
call
and
dec
ja
pop
mov
jmp
aad
sub
push
stos
(bad)
push
sub
(bad)
(bad)
call
xchg
push
push
rcl
test
lods
js
repnz
lock
pop
mov
call
loop
retf
cmp
sub
sub
mov
xchg
cs
mov
inc
aaa
je
mov
mov
fcmovu
mov
cmp
aaa
loopne
dec
js
pop
out
inc
sub
mov
inc
movs
int3
inc
and
sbb
add
(bad)
test
push
ret
inc
lods
adc
inc
sub
dec
adc
inc
into
sub
stos
mov
cmps
call
leave
push
cwde
sbb
pop
nop
ror
inc
mov
mov
or
loopne
cs
(bad)
(bad)
inc
fild
jle
iret
add
into
into
out
adc
rol
movs
repz
(bad)
in
out
out
aam
push
pop
push
test
iret
xchg
xor
adc
mov
imul
sub
leave
call
arpl
mov
mov
ins
stos
loop
(bad)
(bad)
jmp
mov
jecxz
adc
jbe
push
rcl
jmp
mov
(bad)
fnstenv
shl
mov
xchg
out
ins
xchg
push
mov
sub
(bad)
(bad)
cmp
cmp
in
or
add
xchg
cmp
jp
mov
dec
jmp
sub
arpl
inc
mov
sub
std
outs
(bad)
(bad)
(bad)
(bad)
push
sbb
pop
jne
dec
jns
cmp
lods
mov
pop
xor
rcr
pop
int3
mov
(bad)
cld
add
mov
add
add
xor
(bad)
jg
leave
inc
pushf
cs
iret
sbb
test
test
add
(bad)
inc
and
push
and
sub
xor
(bad)
and
add
pop
jbe
dec
in
aad
clc
(bad)
call
dec
ds
aam
icebp
jno
xchg
cli
outs
sub
je
je
(bad)
(bad)
dec
add
stc
(bad)
(bad)
sar
jp
in
test
retf
retf
into
iret
iret
xchg
adc
(bad)
fwait
(bad)
daa
fisub
(bad)
(bad)
(bad)
jmp
outs
and
lock
(bad)
cld
xchg
push
jg
sti
shr
std
xlat
xlat
div
ret
dec
(bad)
jnp
into
in
pushf
jno
xor
xor
adc
jmp
pop
and
in
dec
jge
call
pop
pop
scas
add
aad
add
mov
loopne
(bad)
fld
shl
adc
add
inc
clc
dec
lahf
out
add
shr
jbe
dec
dec
(bad)
xor
add
aad
cmps
cwde
push
fcomp
cmp
mov
cmp
inc
and
(bad)
dec
lods
loope
add
outs
xchg
push
lds
shl
add
(bad)
(bad)
(bad)
inc
test
pop
test
adc
jg
mov
test
xor
push
(bad)
(bad)
aas
ss
cmp
push
jae
sar
in
int
shl
arpl
pop
pop
xor
repnz
sbb
push
call
data16
jne
dec
(bad)
cmp
cli
je
das
or
(bad)
(bad)
push
fwait
cmp
jns
xor
lock
les
mov
aad
jmp
xor
(bad)
push
sbb
cmp
pop
add
cmp
cmps
(bad)
sub
(bad)
cmps
dec
arpl
test
(bad)
(bad)
(bad)
call
xchg
xor
int
cmp
sub
lds
mov
jg
fs
mov
call
das
imul
sbb
xchg
push
xlat
pop
leave
rcl
movs
stos
jno
jge
jno
(bad)
pushf
hlt
std
(bad)
(bad)
jmp
loope
jg
push
xor
enter
imul
mov
xchg
mov
stos
dec
out
mov
gs
cmp
movs
sahf
cmp
out
(bad)
(bad)
call
xor
jno
mov
pop
or
scas
pop
cmp
fwait
inc
jnp
movs
fcomp
push
imul
xor
sar
add
xor
js
fs
(bad)
(bad)
fcomip
js
push
jge
cmc
jns
in
lods
in
cmp
dec
mov
jns
jbe
out
cmps
and
fcomip
sub
test
iret
jge
pop
mov
jae
(bad)
(bad)
(bad)
jmp
ret
pop
cmp
mov
outs
inc
xchg
imul
mov
push
cwde
xchg
inc
fcom
mov
(bad)
(bad)
call
jae
mov
rcr
inc
pop
loopne
push
in
mov
xor
xor
push
icebp
sbb
in
jg
ins
ds
pop
das
das
xchg
movs
push
jne
repz
jl
nop
popf
gs
(bad)
(bad)
(bad)
(bad)
mov
in
retf
jg
int3
lds
mov
sti
pop
add
call
dec
gs
(bad)
(bad)
call
das
int
shr
jle
push
imul
xchg
lods
iret
inc
jae
jge
adc
movs
mov
mov
push
bound
jmp
aam
jae
call
pop
wbinvd
jp
sbb
mov
sbb
out
pushf
aad
stos
jns
add
out
call
fninit
jl
sub
cmc
mov
jmp
call
or
iret
cmp
fcmovne
cmc
ret
fucomi
jmp
xchg
mov
cmp
add
sti
add
cmp
ficom
pop
adc
sub
test
mov
fnstenv
lahf
jmp
add
inc
jecxz
retf
sub
scas
(bad)
inc
in
jo
arpl
inc
aas
call
aas
lahf
(bad)
add
xor
call
lahf
push
adc
push
dec
jge
lahf
(bad)
mov
lds
ror
adc
retf
stc
add
neg
sub
or
xor
mov
(bad)
call
ret
movs
or
int3
sbb
inc
arpl
pop
in
ret
(bad)
jmp
aas
and
rol
mov
cmp
iret
add
jle
cwde
and
(bad)
(bad)
outs
or
les
xor
sahf
sub
out
icebp
mov
lods
aas
(bad)
(bad)
(bad)
(bad)
fmul
sbb
fwait
sar
mov
cmp
loopne
gs
cmp
or
mov
sub
sbb
mov
pop
pop
ja
add
jp
pop
outs
(bad)
call
jb
dec
sbb
xor
fsubr
mov
mov
test
(bad)
(bad)
in
cmp
cld
fidivr
in
xchg
into
jb
int
aaa
std
mov
inc
mov
(bad)
jg
dec
ja
or
push
mov
(bad)
mov
(bad)
(bad)
(bad)
push
adc
inc
pop
enter
cli
loope
xor
xchg
fmul
cwde
scas
push
fimul
mov
call
(bad)
dec
dec
lds
xor
xor
jmp
and
jge
(bad)
(bad)
(bad)
(bad)
ds
nop
pop
out
cmps
mov
neg
xchg
dec
inc
pop
call
jmp
idiv
(bad)
(bad)
call
nop
push
mov
pop
test
inc
call
stos
mov
xchg
ins
vminss
js
pop
out
fist
pushf
jb
mov
xchg
dec
and
add
cs
imul
sbb
in
js
sbb
(bad)
(bad)
(bad)
std
jle
cmps
jl
mov
inc
mov
jne
in
dec
jl
imul
cmp
(bad)
(bad)
inc
(bad)
rol
fist
mov
popa
push
and
jecxz
rcr
xchg
mov
mov
aam
jl
push
push
xor
(bad)
(bad)
(bad)
push
inc
retf
push
pop
cmps
push
or
call
mov
movs
mov
(bad)
(bad)
push
add
int3
jnp
push
mov
xchg
arpl
fimul
in
lds
sahf
(bad)
(bad)
(bad)
mov
retf
jno
scas
mov
in
aas
shl
pop
push
mov
int3
mov
push
pop
test
sub
add
addr16
lock
jno
mov
lods
(bad)
xor
push
sub
icebp
add
mov
daa
mov
cmp
xor
iret
sbb
pop
pusha
popa
dec
stc
push
outs
ja
xchg
imul
mov
dec
xchg
ss
sbb
loope
ja
xchg
xor
in
jmp
ds
inc
or
push
adc
lods
lods
je
push
mov
pushf
cmc
daa
aam
test
sub
mov
std
(bad)
push
sahf
mov
xor
shl
push
mov
jle
jge
lods
or
int3
dec
(bad)
ret
das
clc
call
imul
shl
mov
xchg
fdivr
out
nop
cmps
(bad)
jmp
mov
jge
inc
fldlg2
nop
dec
mov
sbb
aam
sbb
inc
fs
or
mov
mov
and
rol
inc
cmps
add
scas
arpl
xchg
dec
aad
aad
(bad)
call
xor
mov
xor
push
addr16
xor
lahf
int3
stc
jg
repnz
mov
sub
in
sub
adc
ins
addr16
outs
stos
push
or
jl
push
jge
(bad)
(bad)
dec
sar
adc
add
ja
nop
adc
(bad)
lock
jmp
push
cmp
(bad)
cmp
push
ds
dec
sub
adc
and
xchg
and
dec
es
adc
push
(bad)
jmp
rcl
or
outs
jno
mov
dec
fidivr
(bad)
(bad)
(bad)
cli
mov
shr
int3
lds
shl
fisub
in
repz
sub
mov
jne
add
dec
scas
push
cmp
jne
int
aad
cld
xchg
(bad)
fild
xor
gs
test
sub
sbb
(bad)
cmps
fisttp
rcl
mov
out
add
lock
xchg
xor
(bad)
(bad)
push
fs
push
push
(bad)
ins
int3
xchg
call
mov
push
dec
xor
popa
mov
(bad)
jmp
mov
sar
test
rcl
into
mov
jbe
cmp
xchg
stos
shr
mov
jo
sub
mov
ja
jbe
mov
adc
outs
(bad)
(bad)
(bad)
(bad)
cmp
adc
adc
push
and
jmp
or
lahf
je
scas
xchg
fcmovbe
cmp
(bad)
dec
shr
popf
sub
pop
jecxz
pop
rcr
popa
cli
(bad)
adc
fs
(bad)
(bad)
(bad)
push
out
sub
(bad)
lahf
push
adc
out
in
std
je
mov
mov
mov
out
xchg
(bad)
(bad)
(bad)
inc
daa
out
ins
mov
jg
push
(bad)
xchg
data16
jns
lods
inc
mov
push
cmps
push
xchg
(bad)
(bad)
jge
or
fstp
mov
rcl
push
sub
(bad)
(bad)
(bad)
inc
cmp
rcl
sub
hlt
xor
cmp
movs
mov
inc
push
popf
(bad)
std
ja
cli
and
shl
sbb
ja
icebp
jge
out
adc
(bad)
jg
pop
pop
dec
xor
vdivss
jno
push
test
mov
mov
mov
(bad)
(bad)
dec
add
lea
or
cli
daa
cmps
sub
daa
dec
push
cld
ins
stos
int3
or
dec
call
(bad)
(bad)
(bad)
jmp
cmc
pop
mov
enter
pop
cmps
ja
loop
or
test
push
(bad)
(bad)
(bad)
(bad)
in
sti
mov
push
int3
or
pop
adc
ins
push
outs
dec
jb
adc
pop
setno
out
mov
data16
data16
(bad)
fisub
xor
pop
mov
or
add
or
cmp
in
repnz
ins
daa
mov
mov
dec
push
sar
push
dec
sub
int3
mov
mov
into
jmp
inc
pop
mov
(bad)
jmp
shr
stos
mov
das
and
repz
inc
sahf
mov
push
or
push
and
push
mov
cmp
dec
push
in
rcr
add
sbb
in
push
into
or
in
jp
(bad)
(bad)
(bad)
cmp
push
mov
add
xlat
mov
in
movs
cmp
cs
inc
and
jmp
inc
sbb
dec
sub
mov
jg
stos
hlt
movs
inc
(bad)
or
xor
(bad)
clc
mov
sbb
xchg
ret
in
ss
pop
add
gs
test
adc
xor
push
call
fistp
call
xor
inc
out
je
add
mov
sahf
cdq
aaa
xchg
xchg
push
in
dec
dec
loop
adc
dec
mov
mov
(bad)
dec
push
pushf
push
movs
inc
(bad)
(bad)
dec
bt
jae
daa
fwait
and
pop
sub
hlt
dec
cmp
mov
(bad)
(bad)
jmp
movs
pop
adc
clc
mov
add
xchg
jge
ret
popf
mov
dec
cmp
scas
xchg
xchg
or
iret
jne
fsubr
add
(bad)
sub
icebp
add
cmp
movs
mov
xchg
pop
sti
or
jle
(bad)
(bad)
dec
xlat
xchg
fwait
or
lds
dec
fcmovnu
adc
(bad)
dec
jns
fwait
or
pop
dec
pop
les
outs
sbb
(bad)
(bad)
(bad)
call
(bad)
adc
js
scas
dec
mov
jg
mov
jno
pcmpeqb
fild
xchg
mov
(bad)
jmp
fcomp
js
aas
or
adc
dec
sub
jno
jbe
adc
clc
xor
jmp
or
pop
mov
xor
xchg
lods
add
(bad)
push
daa
lods
xchg
imul
pushf
ret
cmp
jl
add
jge
sbb
in
nop
(bad)
(bad)
(bad)
jg
fnstenv
adc
sar
mov
pop
xchg
dec
jnp
adc
cmp
inc
lahf
lea
out
cli
pop
mov
(bad)
mov
call
xchg
(bad)
cmps
jno
cmp
(bad)
call
in
popa
(bad)
ss
fcmovnb
pop
fld
fdivr
retf
hlt
clc
adc
fs
xchg
(bad)
(bad)
(bad)
jmp
shl
ror
sbb
xor
(bad)
es
xchg
paddd
pop
pop
mov
inc
(bad)
(bad)
(bad)
push
repnz
imul
xchg
inc
and
lahf
mov
jo
out
jbe
mov
ss
stc
or
(bad)
(bad)
inc
jae
adc
sub
xor
or
add
scas
ficom
out
in
out
xchg
(bad)
jg
jb
ss
ins
ffreep
or
inc
lahf
cmc
call
adc
(bad)
call
sti
mov
and
xlat
pop
mov
push
mov
mov
and
cmp
fiadd
popa
movs
push
or
stos
cmps
shl
sti
jmp
sbb
ss
inc
fdiv
(bad)
out
cld
jge
inc
cli
aad
jmp
jmp
mov
mov
inc
dec
push
(bad)
jmp
or
xchg
daa
xor
in
fs
mov
push
cdq
call
dec
fs
inc
stos
mul
lds
sub
es
lods
sbb
mov
out
push
dec
(bad)
(bad)
(bad)
fistp
jb
dec
mov
pop
shl
xor
mov
and
add
inc
in
adc
ud0
repnz
int
pop
(bad)
frstor
enter
jmp
shl
scas
jmp
pop
loopne
js
rol
outs
repnz
call
mov
aaa
mov
sub
push
mov
xchg
add
js
push
nop
hlt
(bad)
jg
in
stos
xor
les
loop
int
mov
(bad)
(bad)
jmp
bound
lods
xor
mov
je
aam
faddp
push
jno
dec
popa
repz
(bad)
(bad)
(bad)
jmp
(bad)
into
push
mov
repz
cmps
iret
xchg
sub
adc
pop
inc
pushf
dec
(bad)
(bad)
(bad)
jmp
call
and
push
jo
je
das
pop
out
pusha
pop
add
(bad)
(bad)
(bad)
(bad)
jnp
pop
push
add
nop
lahf
loope
aad
in
jl
rol
adc
sub
(bad)
(bad)
(bad)
(bad)
jmp
aad
into
inc
aas
xchg
popa
enter
pop
cmp
pop
repz
add
shl
scas
lock
jmp
cli
fsubp
cwde
jne
outs
mov
outs
movs
repz
pop
mov
sahf
mov
xchg
(bad)
mov
xchg
(bad)
(bad)
(bad)
(bad)
out
enter
ins
and
and
test
mov
aam
test
xchg
xchg
add
(bad)
dec
jp
xchg
mov
inc
and
pop
stos
sbb
jbe
jmp
sub
inc
mov
ror
push
clc
push
inc
loop
dec
jl
dec
push
in
fwait
cli
movs
push
inc
fisttp
add
mov
(bad)
(bad)
(bad)
call
push
ja
ret
inc
push
xchg
pop
inc
in
mov
jl
and
push
add
dec
jnp
in
mov
ds
std
sbb
xchg
pop
cmp
cmp
sub
les
repnz
and
jecxz
jecxz
(bad)
cmc
call
lock
fidiv
xchg
test
cmp
xlat
lea
sar
(bad)
dec
outs
jle
sub
(bad)
jb
pop
pushf
sbb
(bad)
adc
movs
shl
pop
jne
sub
(bad)
inc
stc
adc
popf
arpl
dec
retfw
mov
push
ffree
aad
sbb
dec
addr16
clc
(bad)
(bad)
call
loope
cmp
hlt
ja
lods
in
add
add
iret
aas
jmp
clc
inc
dec
(bad)
(bad)
mov
and
mul
pop
fstp
loope
out
(bad)
imul
(bad)
(bad)
(bad)
jmp
cmp
push
cmp
push
das
push
sbb
sub
test
xchg
or
retf
cs
nop
push
sahf
dec
test
xor
movs
mov
jp
(bad)
sub
(bad)
adc
fnsave
cld
(bad)
(bad)
jmp
pusha
push
rcr
mov
rcl
test
stos
iret
sahf
(bad)
fs
(bad)
call
pop
jne
xchg
(bad)
xchg
jns
jbe
lods
cmp
sub
in
stc
push
rol
mov
icebp
(bad)
jmp
dec
(bad)
iret
sbb
mov
(bad)
xchg
sbb
jmp
adc
sub
retf
cmp
test
pop
cmc
pop
sbb
mov
mov
pop
cmp
(bad)
(bad)
push
lods
rcr
daa
mov
idiv
clc
xor
in
stos
dec
fs
mov
mov
(bad)
jmp
sbb
cmp
ror
dec
fdivr
hlt
ds
clc
push
pusha
neg
sbb
and
xor
inc
or
add
adc
jbe
jmp
or
add
sbb
inc
jg
jmp
pop
leave
dec
loope
(bad)
jmp
jnp
mov
mov
nop
shr
repnz
add
stos
push
pop
adc
mov
(bad)
(bad)
jmp
enter
cmc
popa
mov
(bad)
retf
xor
rol
dec
lea
jge
xchg
sbb
fcom
or
push
dec
ret
adc
div
les
pushf
addr16
cmp
xor
call
aaa
fwait
push
sub
inc
imul
stos
xchg
out
xor
push
push
repnz
push
push
jmp
fiadd
push
shr
jbe
ror
(bad)
(bad)
jmp
das
mov
popf
imul
imul
inc
retf
(bad)
out
push
mov
mov
jbe
mov
int
ins
inc
cmp
(bad)
(bad)
(bad)
mov
mov
gs
dec
int
push
cmp
es
hlt
cmp
add
movs
dec
pop
push
fwait
hlt
xchg
das
inc
push
cld
(bad)
jmp
and
jno
lds
xor
mov
mov
(bad)
call
xchg
fwait
mov
test
xor
jmp
mov
(bad)
call
shl
xor
jnp
and
inc
loope
mov
jo
(bad)
(bad)
(bad)
jns
sub
mov
les
test
sub
int3
std
push
jl
jno
lock
fdivr
xchg
imul
enter
mov
xchg
pop
and
(bad)
(bad)
call
push
sahf
imul
les
pop
xchg
inc
je
sbb
jmp
adc
(bad)
clc
outs
xor
test
mov
test
(bad)
mov
movs
xchg
movs
imul
stc
in
dec
xor
dec
ja
test
or
or
push
xchg
xchg
in
cdq
ss
imul
and
mov
cmp
or
(bad)
call
loopne
retf
xlat
into
adc
sbb
pop
int3
cmps
xlat
ror
cld
dec
xor
ins
cmps
(bad)
fild
std
lock
jmp
dec
fsub
nop
hlt
jb
(bad)
push
retf
ds
mov
xchg
call
mov
lds
mov
mov
pusha
in
scas
mov
test
(bad)
jmp
jo
stc
imul
test
cmp
mov
pop
es
xchg
cli
and
mov
sti
rcl
dec
push
ins
or
dec
outs
pop
xor
mov
(bad)
(bad)
push
pushf
pop
bound
cs
jp
jae
shl
leave
sub
lea
add
push
inc
call
xor
in
sub
bound
ffreep
outs
bound
mov
ror
xlat
test
movs
adc
clc
inc
(bad)
(bad)
(bad)
call
mov
int
add
(bad)
jecxz
pop
mov
sbb
mov
les
mov
(bad)
mov
pop
add
jle
mov
sub
pop
out
ins
or
(bad)
dec
iret
pop
or
dec
inc
mov
mov
sar
test
std
dec
(bad)
(bad)
mov
add
pop
and
fdiv
hlt
xchg
imul
(bad)
push
and
(bad)
mov
mov
ins
xchg
int
je
sar
sub
fwait
mov
and
(bad)
(bad)
inc
aad
jns
mov
pop
ret
xchg
(bad)
dec
xor
lods
enter
test
pop
xor
retf
call
dec
and
sbb
out
adc
mov
gs
or
rcr
push
mov
test
rol
or
xchg
jbe
(bad)
(bad)
jmp
cmp
xor
test
push
into
sub
mov
pushf
pop
adc
mov
(bad)
(bad)
(bad)
clc
add
jo
xor
mov
lock
popf
or
outs
mov
mov
in
sub
stos
popa
stc
mov
mov
dec
(bad)
jecxz
or
jmp
jmp
push
cwde
bound
inc
cmc
fwait
(bad)
mov
(bad)
mov
sbb
cdq
repnz
sar
fs
mov
stos
pop
lods
add
(bad)
dec
jecxz
push
push
mov
push
sub
ins
cs
(bad)
(bad)
(bad)
jmp
mov
(bad)
fisub
xchg
stos
loopne
in
mov
mov
fcom
loope
jl
(bad)
(bad)
(bad)
(bad)
fistp
lock
xchg
sub
out
adc
mov
stos
mov
pop
loop
add
xchg
std
jge
ja
sbb
leave
push
sub
adc
and
mov
outs
imul
cmps
int3
inc
ret
(bad)
dec
popa
jo
aad
adc
push
outs
lahf
jge
fwait
xchg
mov
sbb
lea
fsub
mov
shl
ja
(bad)
(bad)
(bad)
fdivr
mov
adc
mov
fndisi(8087
jl
cmc
dec
sbb
and
repnz
jnp
mov
dec
dec
xchg
mov
cmp
ins
sbb
loope
add
jmp
ret
out
(bad)
(bad)
(bad)
call
inc
pop
cmc
mov
and
into
(bad)
jne
push
ficomp
mov
mov
ret
(bad)
jg
mov
mov
mov
dec
in
iret
test
clc
call
(bad)
(bad)
jg
inc
jo
aam
sub
adc
dec
push
jmp
jge
cli
mov
pop
js
inc
es
(bad)
(bad)
call
mov
add
popa
cld
lods
sub
push
cmp
and
pop
(bad)
(bad)
(bad)
call
retf
cwde
aam
loope
sub
repnz
ror
jo
clc
(bad)
scas
(bad)
cli
into
push
push
jle
sbb
(bad)
(bad)
dec
inc
(bad)
(bad)
cmp
xchg
cmp
daa
(bad)
adc
clc
mov
add
mov
in
call
push
(bad)
mov
mov
inc
and
and
sar
inc
retf
mov
pop
push
fidivr
(bad)
call
mov
loopne
pop
xchg
mov
inc
mov
stos
dec
sahf
ja
or
mov
(bad)
(bad)
(bad)
call
mov
inc
xor
test
shl
ins
add
out
sbb
inc
cwde
jmp
(bad)
dec
xchg
mov
xor
pop
sahf
cli
leave
imul
sbb
mov
mov
push
(bad)
jg
jbe
push
mov
push
adc
cld
pop
dec
xchg
rol
inc
mov
xchg
xchg
inc
sub
add
push
and
(bad)
jmp
lock
jp
stc
sbb
jo
rcl
(bad)
(bad)
mov
ja
or
xor
mov
cmp
cmps
or
(bad)
(bad)
call
adc
loopne
mov
fld
outs
retf
sub
dec
xchg
push
(bad)
(bad)
call
fadd
jo
mov
mov
push
adc
aad
ins
test
push
std
scas
cli
pop
iret
and
ret
(bad)
sbb
mov
pop
push
dec
gs
(bad)
(bad)
jmp
inc
gs
add
push
push
div
ds
imul
out
(bad)
(bad)
(bad)
dec
add
inc
aaa
and
outs
xchg
out
inc
mov
push
push
in
nop
xor
jmp
xlat
jnp
xlat
sub
popa
mov
div
outs
dec
test
mov
pop
scas
retf
popa
je
lods
inc
cmp
push
(bad)
and
jne
cwde
je
jle
call
jmp
mov
mov
fdivr
movs
repnz
fstp
or
ins
mov
neg
(bad)
mov
aaa
mov
jge
les
clc
(bad)
mov
mov
test
sbb
cmp
xchg
add
(bad)
(bad)
(bad)
jmp
jb
dec
pop
arpl
adc
cld
push
movs
cli
add
inc
sub
jg
(bad)
jmp
pop
dec
hlt
adc
cld
dec
int
bound
mov
jecxz
aas
inc
xor
adc
out
stc
jnp
fld
data16
(bad)
(bad)
call
(bad)
fdivr
ret
ficom
cmps
sub
das
popa
loope
xor
xor
sub
jl
jg
(bad)
call
pop
retf
lods
xchg
ins
(bad)
fdivr
sub
sti
cld
in
frstor
(bad)
mov
xchg
outs
inc
int
mov
not
(bad)
(bad)
(bad)
jmp
jne
cmc
ret
xor
and
fsubp
cli
cdq
std
cdq
mov
dec
lea
repz
(bad)
(bad)
call
mov
fldz
xchg
mov
(bad)
lea
hlt
add
sar
or
and
(bad)
(bad)
(bad)
call
jmp
jae
or
fdivr
inc
mov
cli
pop
mov
mov
and
or
push
fidivr
pop
ffree
out
sbb
or
or
cmps
pop
jmp
mov
(bad)
(bad)
(bad)
jnp
out
adc
fsubr
xchg
dec
ins
popf
loopne
loop
cwde
aad
pop
or
inc
sti
xchg
mov
pop
imul
fs
loopne
inc
fcomip
(bad)
jmp
push
stos
sub
mov
sbb
dec
xchg
dec
pushf
aas
inc
sar
(bad)
out
lock
aaa
retf
leave
iret
inc
outs
mov
loop
inc
outs
iret
mov
push
aad
mov
sahf
mov
(bad)
call
(bad)
retf
mov
outs
movs
mov
ret
outs
lock
iret
or
(bad)
push
adc
call
int
xchg
aad
push
push
pop
or
push
pop
mov
adc
cmp
pop
fdivrp
(bad)
(bad)
jmp
push
aad
add
ja
jge
ret
cmp
popf
xor
mov
sti
push
retf
(bad)
(bad)
jmp
push
push
es
mov
loope
inc
cmp
add
shl
clc
(bad)
(bad)
mov
loop
sub
xor
xor
stos
div
and
push
mov
mov
dec
daa
(bad)
inc
cmp
xor
loope
fimul
xlat
mov
jmp
dec
enter
fwait
mov
int3
mov
jae
push
(bad)
and
loopne
iret
mov
xor
mov
std
xchg
fwait
ret
les
outs
mov
popf
mov
repnz
call
xor
aas
jnp
fdivr
lea
stc
loop
(bad)
(bad)
jmp
sbb
ja
fisttp
dec
je
add
mov
fsub
ret
and
(bad)
(bad)
jmp
sub
shr
aam
in
not
aaa
scas
out
movs
outs
inc
ret
mov
mov
mov
fwait
sbb
mov
sub
xchg
add
int3
sub
retf
je
inc
inc
add
pop
inc
pop
cmps
mov
ins
or
(bad)
(bad)
(bad)
cmp
sbb
ins
ror
xchg
fdiv
jp
push
or
or
add
(bad)
jg
lods
popa
mov
ins
dec
mov
retf
jle
lock
inc
add
outs
mov
dec
mov
xor
mov
test
retf
mov
shr
mov
or
scas
mov
mov
pop
ins
dec
lahf
or
pop
loopne
mov
gs
push
jl
inc
mov
jmp
xchg
push
fistp
bound
pop
mov
(bad)
(bad)
(bad)
dec
fcom
mov
ss
push
call
xchg
cmp
mov
xchg
sar
(bad)
(bad)
call
or
dec
inc
add
sar
lahf
call
in
and
dec
cmp
xchg
call
(bad)
jmp
add
jg
mov
sbb
scas
stos
sbb
aaa
jns
aaa
aad
(bad)
jmp
jecxz
push
mov
into
xor
sub
fs
push
pop
leave
daa
xchg
adc
jg
mov
mov
fsub
adc
cwde
outs
push
fs
add
jmp
push
call
dec
mov
in
outs
rol
ins
sbb
shl
fistp
jmp
mov
nop
inc
xchg
mov
jecxz
jb
dec
stc
mov
sub
xlat
push
es
in
js
mov
mov
in
(bad)
not
(bad)
(bad)
call
lods
cmp
cmp
and
jge
xchg
push
xchg
or
std
into
outs
pop
in
cmp
inc
(bad)
push
cld
jno
call
push
lahf
inc
pop
sub
sub
jp
stos
mov
(bad)
jl
cdq
fidiv
int
add
dec
push
scas
pop
call
push
jbe
sub
push
in
out
mov
inc
mov
clc
jns
cmp
sbb
(bad)
fbld
mov
out
jecxz
mov
mov
pusha
pop
lods
(bad)
(bad)
(bad)
(bad)
fisttp
mov
fsubr
mov
xor
sahf
push
in
dec
xchg
call
ja
call
cmp
out
jge
add
les
mov
fsub
and
ror
retf
nop
and
(bad)
mul
test
aaa
std
pop
icebp
jle
mov
inc
dec
sahf
pop
repnz
cmps
cmps
mov
arpl
scas
jmp
(bad)
dec
fist
push
push
ds
pop
xchg
cmc
jmp
ror
mov
test
js
repnz
push
mov
push
(bad)
xor
ror
shr
mov
retf
mov
imul
ja
push
sti
mov
lods
(bad)
sub
loopne
retf
xchg
sti
les
jge
clc
mov
add
push
cmp
xor
mov
jbe
dec
in
adc
(bad)
(bad)
(bad)
mov
scas
xor
cli
push
out
push
stos
mov
rcl
xor
mov
pop
fnstsw
or
mov
inc
sbb
pop
mov
aam
push
mov
adc
or
(bad)
push
(bad)
mov
pop
pop
ror
xchg
loop
and
or
pusha
sti
cmp
(bad)
push
icebp
jmp
push
cmp
shr
js
jl
outs
mov
lods
mov
and
and
add
(bad)
test
ins
in
fwait
outs
pop
mov
addr16
pop
jp
sub
mov
(bad)
call
scas
gs
cli
jmp
mov
fptan
push
shr
mov
(bad)
(bad)
(bad)
inc
hlt
ins
retf
cmp
rcr
add
push
stos
xor
es
jns
call
jne
movsx
(bad)
jmp
scas
movs
pop
or
out
cmp
popf
sbb
out
not
(bad)
(bad)
(bad)
jmp
or
in
lahf
xchg
adc
fidivr
cwde
cmp
mov
push
pop
popf
hlt
imul
popa
adc
(bad)
jg
mov
adc
iret
jae
mov
jl
xchg
div
or
ins
outs
dec
(bad)
cmp
int3
fwait
jmp
hlt
(bad)
jno
and
(bad)
(bad)
mov
not
icebp
xchg
aaa
int3
shl
test
pop
inc
je
xor
push
out
fadd
(bad)
out
outs
cmp
shr
dec
mov
sbb
outs
adc
cld
mov
(bad)
jne
jnp
out
jp
scas
fld
push
(bad)
jmp
daa
fldcw
mov
pop
data16
xchg
bound
mov
jno
add
(bad)
(bad)
(bad)
jp
cdq
xchg
jmp
ret
mov
mov
mov
xor
adc
mov
out
and
hlt
bound
pop
push
sbb
ins
dec
(bad)
mov
icebp
(bad)
(bad)
jmp
pop
jb
xor
adc
aaa
or
cld
je
jne
test
dec
sub
les
rcl
movs
inc
dec
push
movs
loope
ret
cmp
push
mov
push
retf
xor
(bad)
ja
aad
bound
(bad)
jmp
out
out
inc
jp
out
iret
and
mov
dec
sbb
lods
cld
js
bound
jb
scas
push
mov
fistp
dec
inc
add
mov
cmp
mov
push
cld
add
(bad)
pop
add
mov
into
aaa
call
(bad)
mov
push
inc
sbb
dec
push
out
(bad)
add
scas
jnp
jg
jg
arpl
icebp
cld
test
in
mov
xor
sbb
loop
stos
stos
mov
fcom
inc
les
xchg
mov
clc
rcl
mov
hlt
xchg
out
xor
ss
arpl
xchg
inc
enter
sahf
pushf
stos
(bad)
call
cmc
add
add
cmp
jae
iret
push
mov
movs
pop
and
jg
sbb
jg
xchg
pop
inc
(bad)
jg
lahf
jmp
inc
jle
sbb
mov
dec
cs
add
mov
adc
sbb
jo
int3
xor
ins
fst
ret
and
sub
pop
adc
adc
inc
inc
add
push
dec
push
(bad)
(bad)
jg
push
adc
push
jne
add
pop
dec
sub
and
add
rcl
sbb
dec
add
(bad)
(bad)
call
or
adc
push
in
or
in
ins
or
sbb
lahf
mov
aaa
mov
inc
mov
pop
jbe
outs
cmp
push
cli
push
mov
test
repz
fild
test
push
jg
(bad)
(bad)
call
cld
movzx
test
nop
xchg
jmp
add
push
push
movs
dec
mov
scas
pop
icebp
inc
jge
rcr
inc
call
cli
(bad)
call
inc
repnz
mov
ffreep
inc
mov
scas
xchg
or
push
in
xor
(bad)
(bad)
push
rcr
jecxz
stos
pop
jne
xchg
mov
and
icebp
int
mov
dec
and
mov
ds
in
icebp
sub
jb
bound
or
bound
(bad)
(bad)
jp
jle
inc
cmp
lods
in
sub
je
ret
aam
(bad)
push
pop
jge
(bad)
(bad)
(bad)
jmp
mov
in
inc
imul
jnp
dec
inc
xchg
mov
fs
pop
(bad)
(bad)
(bad)
(bad)
mov
and
icebp
scas
add
aas
retf
jnp
add
nop
shl
cld
lahf
int
xor
jno
daa
lods
cmp
scas
in
(bad)
mov
xor
call
inc
mov
cmps
xchg
(bad)
loopne
pop
inc
loope
into
clc
rol
sub
(bad)
jg
(bad)
aaa
in
call
fstp
adc
inc
sub
inc
inc
aas
xchg
push
cmp
(bad)
push
jmp
fsubr
jnp
mov
ja
shl
inc
xor
jmp
jae
clc
icebp
ret
sub
fxch
fs
out
push
ins
push
or
jg
test
gs
lock
pop
arpl
iret
out
loope
(bad)
arpl
mov
jp
jmp
sbb
cmp
pop
sbb
aam
mov
(bad)
push
add
cmp
dec
mov
aas
and
jae
mov
sub
inc
sbb
(bad)
(bad)
(bad)
jmp
out
test
xor
adc
popf
add
mov
or
mov
outs
out
dec
shl
std
(bad)
clc
cli
pop
cmp
fidivr
inc
mov
pop
mov
push
mov
stos
pop
push
cli
inc
(bad)
jp
repz
ret
(bad)
pop
xchg
(bad)
(bad)
out
jnp
xor
or
in
repz
mov
cs
js
aad
xchg
(bad)
(bad)
call
(bad)
jo
leave
mov
sbb
scas
ja
pop
ss
mov
icebp
stos
das
dec
inc
inc
cmc
mov
cli
fisub
ins
xchg
shl
xor
out
in
arpl
push
out
mov
mov
add
sbb
lea
in
sbb
(bad)
mov
mov
bound
mul
outs
leave
lock
mov
mov
(bad)
(bad)
(bad)
dec
scas
outs
bound
fdiv
icebp
xor
jnp
int3
ins
ds
iret
jge
push
inc
dec
out
(bad)
(bad)
(bad)
push
jecxz
inc
lods
das
add
mov
and
aad
movs
xchg
sbb
cmp
loope
addr16
cmp
dec
mov
enter
mov
lds
loop
sub
(bad)
(bad)
call
aad
adc
ins
inc
and
inc
in
pop
adc
mov
pop
mov
(bad)
mov
aad
mov
icebp
inc
push
cmps
popf
cld
pop
ds
clc
inc
push
leave
xchg
push
push
(bad)
(bad)
dec
or
test
pop
in
jl
dec
pop
(bad)
out
inc
xchg
aam
popf
imul
(bad)
(bad)
(bad)
jmp
repz
imul
and
mov
js
jbe
mov
call
retf
cmp
pop
push
out
inc
add
hlt
push
nop
add
shr
sub
enter
(bad)
mov
(bad)
sbb
inc
(bad)
std
stos
fist
fcomp
das
jp
(bad)
(bad)
fbld
sbb
div
cmp
lock
xchg
mov
(bad)
(bad)
(bad)
(bad)
cmp
sub
out
adc
stos
div
xchg
or
xchg
ja
cmps
mov
jg
aam
cmp
test
jne
or
jo
mov
xor
jp
gs
fiadd
inc
sahf
(bad)
aam
cmp
fsubr
jns
jle
popf
pop
test
ins
pushf
stc
rol
icebp
sti
lods
loop
cwde
lahf
xchg
mov
or
imul
stos
out
cmps
pop
bound
(bad)
(bad)
(bad)
(bad)
stc
outs
add
pop
aas
push
cmp
add
sbb
dec
cmc
mov
(bad)
jmp
mov
(bad)
aad
(bad)
dec
xor
or
mov
inc
cmp
clc
jmp
sbb
call
(bad)
jg
cmp
popf
call
cdq
shl
add
pop
xchg
pop
(bad)
(bad)
call
mov
lea
mov
pop
mov
cmp
ins
mov
pop
mov
push
cmp
dec
stc
stos
jl
fdiv
sub
(bad)
call
ds
dec
popa
mov
mov
mov
sbb
icebp
jecxz
add
jmp
xchg
movs
push
in
and
(bad)
jg
sbb
xchg
jae
pop
aam
call
mov
dec
shl
ja
pusha
imul
jmp
mov
cmp
add
popf
pop
mov
ffreep
fs
(bad)
jmp
(bad)
rcl
retf
call
outs
rcr
imul
pusha
(bad)
(bad)
(bad)
push
jecxz
pop
(bad)
imul
in
call
add
jle
mov
enter
or
outs
xor
mov
dec
(bad)
(bad)
cmps
out
or
stc
cmp
cmps
mov
leave
xchg
pop
in
out
ins
dec
push
cli
xor
pop
xchg
loope
add
(bad)
mov
sbb
ss
jg
pop
mov
sub
push
pop
sbb
in
cdq
inc
bnd
jb
leave
imul
cld
(bad)
(bad)
push
stc
adc
mov
icebp
mov
fwait
push
enter
aaa
cmps
fwait
cmps
test
sub
sub
jg
add
pop
pop
xlat
nop
xlat
popw
push
xchg
cwde
imul
(bad)
(bad)
std
fmul
cli
leave
scas
movs
aad
pushf
pop
pushf
in
cmps
and
push
in
int
in
pop
push
xchg
aaa
xor
pop
inc
cli
in
xchg
loopne
pop
mov
popa
(bad)
jmp
rcl
(bad)
(bad)
(bad)
push
icebp
mov
xchg
dec
xchg
das
pop
cmp
push
mov
xor
and
(bad)
(bad)
(bad)
jmp
or
test
stos
dec
bound
cmp
daa
loopne
push
mov
das
mov
jmp
pop
xor
aaa
cmp
ins
or
stc
cmp
bound
dec
or
inc
pusha
jb
pop
lahf
add
(bad)
(bad)
(bad)
call
jb
mov
dec
sti
stos
imul
mov
iret
cmp
sub
xor
push
push
mov
lock
jae
mov
adc
add
nop
loop
inc
and
pop
xor
xor
(bad)
(bad)
(bad)
(bad)
in
push
(bad)
mov
int
push
(bad)
push
cwde
pop
mov
icebp
test
mov
(bad)
(bad)
jmp
icebp
jg
sub
rol
mov
xchg
out
stc
push
and
iret
mov
(bad)
dec
xor
ins
les
inc
cmps
(bad)
mul
cmc
test
std
push
out
adc
jne
dec
xchg
push
int
mov
(bad)
(bad)
(bad)
(bad)
inc
sbb
out
cmp
add
push
loope
xor
in
push
push
test
stos
or
jecxz
jle
nop
or
nop
adc
xchg
ins
jb
mov
ja
mov
sub
adc
dec
push
stc
mov
in
enter
mov
(bad)
dec
pop
out
scas
mov
iret
push
fst
aaa
shl
push
inc
clc
ins
movs
adc
int
mov
(bad)
call
jo
fsub
pop
test
jne
cmp
fst
push
xor
mov
aas
jne
mov
cwde
aaa
shr
xchg
or
jg
push
add
xchg
sbb
pop
imul
and
call
push
sbb
inc
fwait
aas
scas
jmp
ins
test
(bad)
in
(bad)
push
fdiv
xlat
dec
or
shl
jne
push
mov
dec
inc
jle
push
test
mov
(bad)
lock
in
mov
fild
jnp
pop
scas
push
cmp
sahf
(bad)
std
(bad)
(bad)
inc
inc
ins
loopne
jae
mov
inc
jo
leave
and
sub
fwait
inc
jns
daa
xchg
stos
popa
sub
(bad)
(bad)
call
fs
jbe
jecxz
push
imul
push
pop
fld
outs
sbb
rol
xchg
(bad)
(bad)
(bad)
(bad)
clc
sbb
adc
fisub
les
push
dec
sbb
add
push
jno
(bad)
xor
push
in
popa
pop
xchg
lock
pushf
popf
mov
data16
or
cmps
cwde
jno
mov
dec
cmp
(bad)
(bad)
call
xchg
(bad)
aaa
retf
dec
mov
rcr
xchg
pop
std
dec
cdq
push
das
popa
retf
(bad)
push
sti
(bad)
jmp
div
adc
mov
or
xchg
fist
das
sub
fstp
jns
xor
cs
mov
lock
pop
ins
clc
sahf
pop
and
push
lea
ret
cmps
fsub
mov
aaa
xchg
(bad)
(bad)
inc
and
lds
inc
pop
push
xchg
fmul
mov
push
add
push
lea
lea
and
dec
fcomip
(bad)
push
(bad)
adc
call
idiv
iret
addr16
loopne
cli
and
mov
(bad)
call
mov
sbb
gs
mov
mov
cld
dec
jl
outs
and
xchg
repnz
and
xlat
pop
sbb
(bad)
(bad)
call
fcomp
mov
rcr
das
daa
cmp
dec
cdq
xor
out
cli
sahf
jnp
fisttp
jo
sar
jmp
addr16
add
jo
mov
mov
jnp
mov
lods
mov
int
cmp
mov
dec
aam
leave
sub
or
cmps
push
mov
or
call
into
in
loop
mov
outs
jb
sar
ret
(bad)
push
xor
adc
bnd
mov
mov
jno
jecxz
mov
push
jle
push
mov
(bad)
mov
cld
mov
mov
sub
shl
in
jmp
cmp
(bad)
(bad)
(bad)
jmp
sti
lock
dec
popf
clc
jb
into
pushf
cmp
cmp
les
jp
(bad)
push
mov
shl
add
popf
jmp
dec
stos
add
mov
dec
test
(bad)
push
mov
dec
mov
sar
(bad)
(bad)
cmp
repnz
mov
xchg
add
mov
(bad)
(bad)
inc
imul
push
cli
(bad)
test
mov
mov
jmp
jbe
jmp
pop
in
(bad)
movq
jmp
push
xor
(bad)
jmp
dec
(bad)
clc
xlat
dec
lahf
pop
lock
clc
(bad)
fisttp
(bad)
imul
adc
jl
call
pusha
mov
mov
(bad)
(bad)
call
fsubr
or
push
inc
sub
pop
and
pushf
push
xchg
ja
sbb
(bad)
(bad)
(bad)
(bad)
jle
push
jecxz
mov
test
push
ss
push
cmps
mov
ret
mov
push
(bad)
(bad)
(bad)
(bad)
call
inc
out
push
test
and
mov
or
cwde
retf
adc
add
jb
xor
(bad)
(bad)
(bad)
inc
sbb
jnp
mov
mov
mov
int
add
popf
popf
enter
inc
jmp
dec
aam
(bad)
(bad)
mov
scas
ins
xor
adc
adc
in
add
stos
ins
or
shr
inc
fld
sub
call
ds
mov
cmp
in
cmp
jbe
(bad)
cli
sbb
int
sbb
frstpm(287
jecxz
cmc
fild
jmp
ja
int3
test
add
jns
cmp
push
xchg
xor
adc
div
(bad)
xor
push
das
ds
outs
xor
into
imul
or
inc
fdivr
adc
mov
or
call
jbe
mov
inc
ret
(bad)
sti
mov
sub
loope
(bad)
(bad)
call
jp
dec
dec
into
jbe
dec
call
xchg
add
xchg
push
loop
pop
stos
push
dec
loopne
(bad)
call
jmp
add
js
shr
pop
das
in
mov
outs
add
scas
(bad)
(bad)
mov
aaa
push
test
into
call
nop
pop
xchg
jle
scas
dec
cld
(bad)
push
je
mov
ret
les
cmps
pop
add
push
mov
popa
pop
loop
mov
data16
fimul
lock
mov
call
mov
test
jbe
push
cmp
dec
(bad)
mov
xchg
stc
mov
jbe
(bad)
push
test
aas
add
xor
jbe
adc
mov
(bad)
jmp
add
xor
pop
dec
xor
or
imul
hlt
xlat
mov
lock
out
push
cmp
and
sub
pop
(bad)
jnp
cmp
fistp
xchg
xor
pop
(bad)
jmp
aad
call
pop
xchg
adc
popa
or
push
fisub
pushf
xchg
lods
push
pop
int3
outs
ss
(bad)
(bad)
inc
dec
fucomp
ret
lods
rol
dec
push
cs
loopne
cmp
and
ret
dec
inc
imul
call
jge
out
pushf
mov
mov
adc
aad
and
push
jge
es
xchg
aad
repnz
lahf
adc
sbb
pop
pusha
(bad)
(bad)
(bad)
jmp
add
repnz
in
lahf
adc
pop
xchg
pop
sub
xor
test
mov
sar
(bad)
push
cmc
neg
cmps
pop
dec
gs
idiv
stos
cli
mov
cmp
(bad)
or
scas
clc
(bad)
dec
and
pop
mov
pop
add
and
pop
enter
push
(bad)
(bad)
(bad)
dec
cmp
shl
pop
lods
retf
(bad)
test
popf
adc
sbb
int
nop
pop
std
push
shl
add
call
adc
sar
push
aas
ins
adc
pop
fdivr
xchg
leave
pop
sbb
jmp
mov
push
retf
xlat
data16
inc
mov
dec
mov
pop
repnz
push
dec
adc
or
jbe
mov
test
cmp
sbb
sbb
add
and
cwde
inc
or
mov
hlt
push
popf
push
jno
lock
adc
test
shr
scas
pop
push
fidivr
add
cmp
mov
ja
(bad)
(bad)
dec
ja
retf
jp
add
enter
cmp
out
xchg
fidivr
adc
(bad)
sbb
sub
in
adc
mov
ror
(bad)
(bad)
jmp
or
cmp
mov
or
data16
mov
adc
call
nop
(bad)
(bad)
jg
ja
push
dec
xchg
test
popf
iret
cmp
lock
icebp
fild
(bad)
(bad)
call
test
mul
mov
in
sbb
retf
pop
les
and
dec
clc
dec
sub
jbe
test
psrlq
xchg
add
(bad)
(bad)
(bad)
imul
(bad)
fyl2x
xor
(bad)
stc
xor
lea
jne
out
(bad)
(bad)
(bad)
jg
add
(bad)
fdivp
mov
in
sbb
adc
test
mov
sbb
loop
in
movs
(bad)
inc
pop
repz
sbb
mul
pusha
pop
inc
xchg
scas
xor
lods
mov
(bad)
jmp
sub
les
mov
ss
test
bound
and
sub
add
mov
add
(bad)
dec
dec
mov
pop
mov
sub
adc
adc
inc
fs
jl
cld
(bad)
(bad)
push
push
cdq
inc
test
or
xchg
cmp
cmc
fst
sub
adc
es
(bad)
ss
or
aad
(bad)
jmp
shl
(bad)
push
retf
loopne
mov
in
lods
(bad)
(bad)
(bad)
call
popf
clc
sub
xor
fmul
xchg
jne
pop
sub
push
push
xchg
hlt
push
fdivr
sbb
(bad)
add
dec
rol
(bad)
call
pop
or
call
jns
pop
lds
loope
scas
xor
je
cmp
(bad)
(bad)
jl
lods
sbb
cwde
jnp
xchg
hlt
sahf
and
ret
sbb
repz
and
inc
scas
addr16
(bad)
(bad)
(bad)
(bad)
cmp
mov
and
lea
sbb
sub
push
adc
imul
sbb
mov
fnstenv
dec
aad
dec
fwait
and
mov
jb
js
sbb
and
call
add
mov
je
out
cmps
mov
icebp
pop
adc
(bad)
(bad)
out
and
inc
arpl
sti
test
jp
neg
sbb
dec
stos
dec
(bad)
push
or
mov
mov
ret
add
in
retf
fs
retf
add
mov
mov
and
mov
fisubr
(bad)
(bad)
jmp
loop
sub
push
inc
mov
mov
std
mov
out
addr16
(bad)
(bad)
mov
test
daa
iret
daa
xlat
es
push
sbb
inc
aam
sbb
movs
mov
add
es
mov
retf
loop
sbb
dec
rol
(bad)
(bad)
mov
push
lods
lds
mov
push
mov
fdiv
pushf
push
lods
cli
(bad)
(bad)
call
je
push
jb
paddw
stos
sub
test
outs
retw
popa
adc
(bad)
and
inc
push
test
leave
popf
sbb
das
rcr
das
push
ins
mov
(bad)
inc
xor
sbb
adc
call
cmp
pop
enter
adc
mov
outs
(bad)
sbb
cld
lock
mov
pushf
push
add
cld
in
mov
pop
neg
imul
movs
ss
jo
cmp
mov
addr16
test
xor
in
out
cli
(bad)
jmp
int
imul
dec
fsub
and
lods
jbe
pushf
pop
sbb
push
(bad)
ret
mov
jecxz
dec
stos
clc
inc
jp
(bad)
(bad)
inc
jl
les
fdiv
sahf
ret
test
loope
mov
sbb
pop
or
and
(bad)
jmp
loop
test
xor
jmp
aaa
mov
jl
jbe
je
dec
mov
sbb
arpl
dec
lock
sti
jecxz
mov
sbb
(bad)
mov
in
push
ins
mov
jmp
pop
dec
pop
lds
fwait
adc
es
(bad)
(bad)
inc
jg
mov
scas
push
dec
push
or
mov
mov
jge
mov
sbb
(bad)
call
pop
dec
dec
int
pop
jecxz
and
sbb
scas
repz
xchg
jle
test
repz
(bad)
(bad)
jg
jle
mov
mov
out
jns
pop
rcr
pop
pop
cmp
sbb
imul
iret
call
adc
sbb
pop
fild
inc
int
aaa
std
dec
xlat
test
(bad)
fwait
aaa
jge
add
push
mov
clc
(bad)
call
mov
gs
mov
sbb
stc
xlat
mov
jp
retf
(bad)
call
das
inc
in
lea
mov
loop
inc
mov
in
mov
mov
dec
ins
sahf
mov
mov
scas
mov
inc
mov
pop
addr16
mov
xlat
(bad)
jbe
mov
stc
push
dec
mov
(bad)
adc
(bad)
(bad)
(bad)
jg
call
popa
xor
cmps
ror
xchg
lahf
mov
ret
and
(bad)
jg
dec
sub
cmc
mov
push
push
mov
lods
fbld
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
std
jb
xchg
and
pushf
inc
adc
shr
repz
sbb
mov
(bad)
(bad)
(bad)
(bad)
cmp
pop
sti
call
xchg
jp
lea
iret
std
push
nop
sub
(bad)
(bad)
(bad)
(bad)
fiadd
and
bound
xlat
sahf
mov
lea
push
xor
jbe
inc
nop
nop
fs
fbstp
jge
inc
push
cmp
repz
clc
dec
push
(bad)
(bad)
call
inc
pop
pop
jecxz
xchg
mov
movs
sbb
and
in
stos
xor
fwait
mov
cdq
mov
add
out
push
jl
xchg
(bad)
pop
rol
(bad)
(bad)
push
xchg
call
pop
mov
sbb
movs
jbe
jg
out
inc
adc
(bad)
(bad)
(bad)
jmp
xchg
jmp
ror
sahf
outs
das
scas
fdiv
std
mov
stos
ins
cld
or
(bad)
dec
xor
mov
adc
fcmovbe
(bad)
out
push
mov
cmps
aaa
inc
sbb
retf
aaa
(bad)
(bad)
call
ret
sbb
push
std
cmp
adc
xchg
push
nop
pop
pop
popf
xchg
rcl
bound
(bad)
(bad)
(bad)
js
scas
mov
push
popf
int
push
stc
inc
movs
add
out
popa
jne
sbb
in
out
test
(bad)
(bad)
push
xor
or
imul
bound
retf
fisttp
enter
call
jb
test
out
fcom
popf
push
cmp
and
inc
(bad)
(bad)
(bad)
call
push
retf
stos
int
xchg
push
mov
xchg
out
xor
push
movs
adc
(bad)
inc
ds
ficom
mul
jl
imul
cmp
test
(bad)
(bad)
(bad)
std
and
xor
adc
jb
jecxz
mov
jbe
pop
ins
sub
xor
sar
mov
int
rcl
mov
(bad)
(bad)
push
and
mov
rcl
adc
push
outs
xchg
popa
push
int
cmp
pop
scas
ret
hlt
sar
(bad)
(bad)
(bad)
(bad)
fst
xchg
outs
xlat
xor
(bad)
jmp
inc
mov
sar
inc
repnz
int
pop
(bad)
jmp
xchg
ins
push
inc
inc
dec
mov
push
stos
mov
add
pop
cli
call
pop
xor
outs
jmp
mov
call
jmp
ret
aas
(bad)
jmp
cs
(bad)
call
rcl
sub
adc
das
adc
sub
mov
(bad)
(bad)
(bad)
mov
mov
jbe
adc
retf
or
lock
in
or
lds
(bad)
(bad)
call
daa
xchg
fwait
sar
int3
or
xchg
jmp
ret
movs
sub
jne
xor
mov
sbb
out
mov
jecxz
jmp
xchg
ret
mov
dec
mov
fild
dec
push
pushf
cmp
xor
out
jne
pop
mov
jmp
pushf
xchg
test
test
(bad)
inc
nop
test
adc
sub
outs
idiv
daa
das
(bad)
(bad)
(bad)
inc
sar
xchg
xchg
mov
jle
jp
mov
or
ins
push
(bad)
jg
(bad)
(bad)
(bad)
outs
test
fwait
in
mov
sti
pop
dec
scas
add
mov
inc
or
(bad)
(bad)
(bad)
out
push
ror
and
sbb
retf
xchg
pop
aam
loope
push
stos
ret
jbe
jns
add
in
xchg
(bad)
(bad)
dec
mov
mov
sub
pop
mov
(bad)
pop
jg
(bad)
call
xlat
shl
pop
push
stc
adc
lock
fadd
jmp
push
cmc
scas
movs
mov
mov
rol
inc
jne
xor
js
pop
out
popa
mov
push
dec
inc
rcl
sar
push
and
or
imul
(bad)
call
sbb
xlat
jmp
push
movs
aaa
xor
cs
retf
loop
inc
repnz
call
pop
add
clc
cld
and
aas
mov
push
lods
imul
scas
retf
dec
cli
jmp
aam
sub
(bad)
mov
fisttp
ret
sub
add
(bad)
jmp
int3
mov
mov
xor
shl
repz
ret
xchg
xor
in
scas
outs
lds
and
aaa
mov
mov
and
adc
(bad)
(bad)
call
inc
cmps
cmp
fwait
outs
cmc
mov
push
icebp
mov
mov
fadd
pop
(bad)
(bad)
(bad)
(bad)
mov
out
mov
call
jmp
xchg
dec
daa
jae
jne
(bad)
call
(bad)
(bad)
(bad)
call
mov
icebp
adc
sub
or
mov
push
sar
(bad)
(bad)
(bad)
jmp
mov
jns
aas
movs
mov
sub
retf
das
adc
pop
fnstsw
enter
(bad)
(bad)
jmp
adc
repz
xor
push
jnp
shl
(bad)
(bad)
inc
cdq
imul
hlt
pop
dec
repnz
mov
sub
push
mov
jp
pop
add
out
or
scas
mov
push
movs
lahf
dec
movs
mov
jbe
lahf
addr16
and
in
and
loop
pop
aaa
fist
(bad)
(bad)
call
shr
test
leave
cmp
mov
ror
cmp
int3
sbb
sar
call
add
aad
adc
mov
push
sbb
fucomip
movs
adc
or
(bad)
(bad)
jg
xchg
pop
xor
stos
lods
or
push
or
lahf
sub
pop
and
ins
mov
call
iret
jnp
ins
scas
or
push
mov
xchg
cmps
out
inc
retf
sub
clc
(bad)
call
je
add
ins
lock
pop
mov
pop
or
movs
mov
bound
mov
stos
sub
xchg
mov
dec
dec
lods
pop
or
shr
das
add
mov
pop
jae
and
inc
cld
aam
xchg
sub
cmp
and
jmp
pop
push
sbb
sub
adc
scas
icebp
mov
xor
inc
pop
add
inc
cmp
lahf
out
jl
sti
mov
inc
and
cs
(bad)
(bad)
jmp
dec
and
std
scas
xor
fs
loop
neg
and
mov
(bad)
jmp
mov
aam
stc
pop
ficom
arpl
dec
pmulhw
xchg
ins
lahf
adc
sub
inc
in
sbb
xchg
add
in
retf
sub
mov
cmps
jo
xchg
or
xchg
push
push
xchg
push
imul
loopne
(bad)
(bad)
(bad)
dec
adc
out
aas
dec
pop
test
pop
mov
cmp
inc
and
(bad)
(bad)
(bad)
jnp
adc
stos
test
mov
adc
xchg
out
imul
shl
cli
in
sub
test
imul
mov
arpl
pop
sub
mov
(bad)
jg
call
pop
outs
adc
fwait
and
dec
adc
adc
add
xchg
das
mov
jnp
das
cli
call
leave
rcr
loop
adc
leave
jmp
adc
pop
pushf
(bad)
(bad)
(bad)
call
mov
aad
fwait
cmps
call
mov
mov
xchg
xor
and
(bad)
(bad)
inc
jns
sub
fidivr
sbb
add
push
mov
clc
hlt
add
pushf
call
push
stc
jge
out
inc
mov
xor
out
and
pop
mov
pop
stc
iret
(bad)
(bad)
(bad)
jmp
push
push
ins
mov
icebp
ret
imul
das
or
(bad)
(bad)
dec
fsubp
test
cmp
jnp
(bad)
cs
dec
pop
mov
out
fs
out
(bad)
(bad)
jmp
adc
pop
cmp
and
xchg
les
fsub
out
call
loopne
cmp
enter
mov
or
sar
jmp
sar
sbb
aaa
out
test
les
mov
xor
jb
sub
aaa
mov
(bad)
call
ds
push
out
(bad)
fsubr
add
(bad)
(bad)
xor
sbb
xchg
(bad)
(bad)
jmp
aam
jp
js
pop
sbb
cs
adc
fisttp
jb
add
retf
(bad)
int3
mov
test
(bad)
jmp
loop
data16
or
rcr
stos
mov
push
(bad)
(bad)
out
dec
mov
jmp
jb
repz
adc
or
(bad)
(bad)
call
lock
rep
mov
inc
and
adc
jle
popa
and
pop
push
nop
pop
pop
cmp
fsubr
push
mov
adc
(bad)
jmp
outs
push
cdq
fist
int3
or
shl
xchg
retf
(bad)
xchg
or
(bad)
(bad)
(bad)
push
out
pop
cs
out
pop
jp
jmp
mov
pop
sbb
dec
or
ins
es
(bad)
(bad)
(bad)
(bad)
out
push
pop
mov
push
adc
mov
inc
mov
out
jno
ds
mov
adc
sub
test
and
bound
mov
fwait
pusha
lock
mov
test
mov
sti
(bad)
call
adc
out
xchg
cdq
sub
call
jp
jbe
js
(bad)
(bad)
(bad)
jg
push
xlat
inc
push
ins
ret
or
cmp
pop
adc
pop
(bad)
pop
call
sbb
leave
clc
fadd
(bad)
(bad)
inc
sub
movs
inc
ss
test
push
stos
push
inc
in
cmp
jno
lea
test
fstp
cmps
repz
call
cmp
xchg
dec
(bad)
cld
cli
sbb
add
xor
popa
repnz
mov
icebp
imul
jge
mov
mov
jbe
movs
clc
cmp
jmp
pushf
fdivrp
mov
mov
mov
aaa
out
popf
repnz
xor
test
and
mov
movs
pop
pushf
jmp
sbb
iret
(bad)
mov
not
loopne
lds
pushf
jnp
adc
fldcw
mov
repz
fs
jns
fadd
mov
loop
pop
mov
(bad)
(bad)
(bad)
call
(bad)
loopne
jp
loope
mov
sub
pop
dec
or
xor
push
sub
gs
(bad)
(bad)
(bad)
fnstenv
retf
inc
(bad)
das
in
mov
je
shl
bound
jg
jae
arpl
and
add
pop
fs
jecxz
sub
pop
fwait
inc
sub
imul
(bad)
(bad)
inc
pusha
(bad)
in
inc
outs
repz
pop
push
mov
jae
jg
dec
pop
in
or
mov
or
mov
call
scas
arpl
push
test
movs
sub
mov
loope
shr
add
xchg
dec
xor
push
(bad)
jmp
mov
in
ins
(bad)
(bad)
(bad)
inc
(bad)
in
xor
scas
test
pop
xor
pop
stos
shl
mul
in
loope
sbb
and
(bad)
aaa
std
out
mov
stos
dec
inc
adc
lds
std
xchg
push
jno
add
mov
xlat
aas
(bad)
xor
hlt
push
shr
(bad)
jg
div
xor
retf
cmps
ret
jge
pop
jne
jae
clc
lock
(bad)
xchg
mov
inc
retf
jmp
cmp
mov
adc
mov
xchg
xlat
xchg
jns
jmp
pop
pop
sahf
cmp
xchg
adc
loopne
ficomp
in
stc
sti
cmp
(bad)
(bad)
jmp
lea
xlat
xor
movs
push
inc
in
inc
ins
cdq
cmp
or
stos
movq
(bad)
dec
add
xchg
loope
push
loopne
into
in
inc
or
xor
enter
sub
(bad)
(bad)
jmp
aaa
jne
aad
ins
mov
mov
xor
cmp
mov
cmp
(bad)
cmps
aaa
std
(bad)
call
xchg
cmp
pop
xchg
or
mov
inc
xchg
in
jnp
int
sub
outs
mov
(bad)
inc
stos
fnstenv
(bad)
rcl
shl
xchg
cmps
sub
(bad)
(bad)
jmp
out
sub
call
test
mov
inc
data16
(bad)
(bad)
dec
xchg
push
xchg
pop
int
loope
shr
in
inc
pop
sub
icebp
cmps
sub
(bad)
inc
mov
stos
sbb
dec
adc
dec
loop
aam
(bad)
(bad)
call
push
xor
dec
push
ror
dec
pop
ins
dec
xor
jp
mov
or
lahf
das
je
gs
inc
popf
inc
cmp
pop
movs
jo
dec
push
outs
jnp
pushf
rol
jmp
rol
ficom
ss
add
dec
imul
jmp
fs
(bad)
inc
cwde
add
mov
test
into
and
push
cld
mov
std
inc
xor
out
jge
jae
and
xchg
adc
(bad)
(bad)
(bad)
jmp
inc
call
cmps
out
enter
data16
or
test
js
mov
ins
outs
sub
(bad)
(bad)
(bad)
jmp
test
ja
(bad)
and
dec
shr
cmp
in
fs
add
push
inc
fcmovnbe
ss
sbb
(bad)
(bad)
(bad)
dec
mov
and
xchg
xor
aas
mov
loop
add
into
mov
dec
push
xchg
(bad)
call
sbb
pop
mov
cmp
add
out
cdq
push
fs
(bad)
(bad)
call
sbb
cwde
fdivr
leave
lods
out
popa
xor
mov
push
sti
and
(bad)
(bad)
mov
adc
jnp
mov
mov
sahf
fcomp
js
add
std
movs
lahf
mov
push
test
jmp
inc
mov
adc
mov
fstp
xchg
dec
ficom
cmp
cli
dec
(bad)
(bad)
mov
out
loope
in
in
icebp
xor
dec
mov
fdiv
add
loope
jmp
dec
push
dec
sbb
mov
das
cmp
aam
lods
(bad)
sbb
or
mov
enter
xor
mov
imul
and
push
xor
pop
fld
ret
(bad)
(bad)
jmp
nop
mov
pop
pslld
outs
aas
lea
in
adc
shl
or
sub
lock
add
rcr
ins
and
xchg
out
movs
push
pop
leave
mov
outs
mov
dec
aam
pushf
loop
inc
les
adc
scas
mov
mov
jne
adc
push
mov
es
jne
pop
(bad)
jmp
adc
out
lea
cmps
sub
adc
mov
sub
push
(bad)
cwde
(bad)
(bad)
(bad)
dec
sub
mov
mov
mov
mov
adc
adc
adc
pop
stos
cmps
ins
test
(bad)
inc
rcl
andps
adc
in
hlt
inc
xor
std
xchg
cli
fistp
and
ds
inc
inc
push
dec
(bad)
mov
(bad)
dec
jbe
jno
scas
popf
cmp
and
inc
add
rcl
push
clc
(bad)
(bad)
dec
das
cmc
xchg
adc
enter
xchg
pop
loop
jae
(bad)
pusha
jmp
(bad)
(bad)
out
int3
lea
jbe
loop
hlt
jnp
fstp
adc
or
pop
(bad)
pop
push
fnstcw
add
sbb
xor
aad
and
adc
xchg
dec
cmp
cmp
test
mov
push
jns
shr
mov
(bad)
(bad)
(bad)
call
(bad)
loope
sub
arpl
je
(bad)
popa
push
test
add
jbe
(bad)
mov
(bad)
push
sar
jg
outs
pop
addr16
xlat
jle
adc
inc
and
out
jnp
mov
(bad)
(bad)
call
movs
ss
(bad)
mov
mov
jno
xor
and
iret
ret
mov
or
js
sbb
(bad)
mov
fs
dec
addr16
cli
(bad)
(bad)
call
jno
jg
push
pop
push
sub
scas
out
jne
loopne
bound
(bad)
jmp
mov
or
mov
sahf
dec
iret
adc
scas
(bad)
(bad)
jmp
stc
xchg
cmc
(bad)
(bad)
call
xchg
in
(bad)
adc
xor
inc
mov
pop
or
pop
sub
cmp
std
cs
inc
(bad)
(bad)
(bad)
dec
inc
lock
push
adc
mov
daa
ins
sar
retf
sbb
icebp
sar
sub
cld
(bad)
(bad)
mov
push
dec
test
scas
push
stos
scas
lahf
iret
es
xor
sbb
add
(bad)
inc
int
or
sub
retf
sbb
fst
pushf
add
push
mov
push
(bad)
(bad)
call
cs
inc
cmp
xchg
jl
jl
pop
mov
(bad)
mov
les
movs
ins
mov
fdiv
out
bnd
jecxz
sub
mov
hlt
(bad)
das
(bad)
xor
loopne
ss
sbb
ret
mov
(bad)
push
std
and
xor
ror
fwait
sahf
push
fadd
push
repz
std
jnp
sub
(bad)
(bad)
inc
out
loopne
jne
push
inc
out
jns
(bad)
cwde
fstp
add
dec
jmp
jmp
push
jmp
cs
call
or
out
push
popa
jg
push
inc
adc
(bad)
(bad)
dec
inc
lock
js
sub
xor
add
pop
push
mov
jg
mov
sahf
inc
push
call
call
stos
push
sub
outs
(bad)
(bad)
(bad)
inc
mov
jne
dec
or
or
xchg
imul
sbb
pop
(bad)
(bad)
(bad)
(bad)
clc
lods
cmp
loop
stos
aam
fsub
leave
jp
(bad)
(bad)
fcmovnbe
lds
add
outs
push
(bad)
(bad)
(bad)
jmp
pop
or
and
cmp
das
in
cmc
(bad)
in
pop
sahf
sub
xor
xlat
fcmovu
aaa
and
clc
fcomip
add
out
xchg
sub
movs
(bad)
rol
lods
ins
xor
imul
mov
js
push
mov
ja
jae
and
cs
pop
add
test
clc
(bad)
(bad)
call
pop
cmc
sub
mov
sub
daa
shr
mov
aaa
sbb
or
(bad)
inc
mov
push
jg
push
shr
cli
fcmovbe
sbb
add
xor
jg
pop
mov
jmp
mov
stos
(bad)
(bad)
(bad)
jmp
ret
lock
mov
out
dec
leave
bound
ins
clc
mov
adc
(bad)
(bad)
(bad)
push
ret
je
clc
cmp
mov
dec
or
shl
xor
call
push
cld
mov
mov
das
cli
push
lock
pop
movs
or
nop
shr
(bad)
jmp
loopne
push
mov
or
inc
jb
outs
push
pop
add
bound
(bad)
(bad)
(bad)
call
adc
movs
fbld
addr16
pop
inc
js
lods
pop
lds
mov
mov
jmp
xor
push
sbb
jb
jl
aaa
mov
(bad)
(bad)
call
jmp
pop
mov
mov
cmp
imul
mov
out
fidivr
adc
push
aad
jl
data16
mov
cmc
call
jmp
sbb
mov
test
add
fist
mov
jg
inc
std
and
pop
push
ins
sbb
es
sbb
(bad)
sbb
or
test
or
cmps
aaa
xchg
pop
push
inc
jo
fcomp
inc
(bad)
adc
outs
clc
inc
shl
shr
xor
jge
mov
outs
jmp
cld
xchg
sbb
adc
pop
popa
push
mov
iret
and
dec
icebp
jp
sahf
xchg
in
cli
push
dec
or
add
(bad)
(bad)
mov
cwde
or
stos
gs
adc
and
clc
xchg
stos
icebp
(bad)
(bad)
call
cdq
icebp
xchg
adc
mov
fsubr
mov
fstp
sti
xor
nop
(bad)
(bad)
(bad)
(bad)
cmp
jno
adc
shl
xchg
jnp
cmc
out
cmp
ret
repz
(bad)
(bad)
(bad)
mov
cmp
mov
sti
inc
mov
mov
and
movs
and
repz
rol
call
dec
inc
scas
sahf
das
(bad)
(bad)
(bad)
fcomip
stos
mov
das
es
js
and
in
enter
xor
inc
imul
(bad)
(bad)
dec
xor
js
mov
test
push
xchg
mov
in
mov
in
daa
lahf
shl
loopne
(bad)
(bad)
(bad)
(bad)
ficom
mov
xor
retf
(bad)
push
es
inc
(bad)
(bad)
(bad)
(bad)
mov
test
leave
dec
sbb
mov
jmp
mov
(bad)
(bad)
(bad)
dec
movs
out
pushf
test
cmp
mov
xchg
ror
cmp
adc
or
add
scas
cmps
sar
(bad)
(bad)
jg
xchg
std
pusha
out
je
and
gs
mov
fwait
sar
stos
shr
mov
out
sub
jecxz
call
push
jle
adc
addr16
sub
mov
inc
inc
push
jmp
pop
shr
fadd
and
inc
es
cdq
and
call
inc
mov
mov
icebp
inc
lock
ror
into
jno
jg
xchg
push
jg
(bad)
(bad)
dec
fld
les
adc
lods
push
or
mov
jg
mov
aas
dec
daa
cmp
mov
push
push
(bad)
(bad)
(bad)
call
pushf
lea
iret
js
mov
out
fdiv
ds
xor
mov
mov
retf
(bad)
(bad)
(bad)
jmp
movs
or
repz
pop
test
addr16
stos
arpl
aad
sub
icebp
aam
cmp
adc
and
call
mov
out
adc
std
(bad)
jmp
jg
mov
mov
stos
pop
xchg
mov
in
sub
xchg
(bad)
dec
cs
rcr
ds
inc
les
mov
ins
add
addr16
(bad)
(bad)
inc
out
retf
push
jp
xor
call
xchg
lds
or
enter
sub
mul
fldcw
mov
(bad)
(bad)
jmp
dec
inc
data16
out
outs
in
ret
sub
(bad)
adc
sbb
adc
int3
push
loop
inc
pop
lock
call
push
mov
ja
push
mov
sahf
jmp
push
adc
aad
out
cmp
add
(bad)
(bad)
cmp
cmc
cmps
mov
xchg
(bad)
mov
xchg
hlt
push
cmc
ja
jmp
cli
push
mov
movs
xchg
in
jne
or
mov
adc
(bad)
(bad)
inc
out
mov
jo
pop
cmp
and
(bad)
(bad)
fstp
loope
int
ins
into
cmp
jl
es
lods
sbb
mov
(bad)
jmp
jae
dec
pushf
in
stc
sub
cld
sub
out
xor
cmp
jmp
pop
or
pop
test
pop
dec
mov
mov
sbb
inc
inc
js
popf
clc
pop
stos
mov
icebp
sbb
(bad)
mov
icebp
bound
vpsllq
jl
mov
movs
xor
stos
rcl
jg
adc
lahf
and
mov
xor
(bad)
in
mov
xchg
jbe
xor
out
inc
sahf
jp
or
mov
out
(bad)
call
jo
adc
fs
cmp
adc
xchg
push
cmps
fld
ficomp
(bad)
call
and
or
adc
adc
fs
push
retf
or
(bad)
ja
inc
jmp
mov
dec
int
xor
gs
push
(bad)
sub
push
(bad)
pop
cmp
jnp
push
add
jmp
xchg
cmc
mov
jae
jg
(bad)
das
dec
mov
div
jb
xor
inc
sbb
xlat
(bad)
call
cmp
add
ror
shl
mov
pop
cld
jmp
push
add
iret
or
push
shl
(bad)
(bad)
(bad)
inc
cwde
ret
jno
cmp
xchg
mov
mov
dec
adc
mov
fdiv
dec
sub
and
or
jae
pop
jmp
imul
sub
jmp
inc
add
stos
stos
call
mov
ffreep
(bad)
xchg
xchg
mov
cld
sub
jmp
xor
cmp
loope
outs
lock
jg
and
cmps
stos
inc
or
xchg
clc
pop
dec
stos
push
test
(bad)
push
mov
pop
div
lahf
push
int3
sbb
stos
add
out
jp
mov
jg
dec
mov
lods
test
in
jbe
jbe
mov
push
jmp
jge
ja
sbb
retf
rol
push
jnp
adc
mov
cmp
(bad)
popf
sbb
loop
cmp
pop
inc
sbb
adc
sti
jmp
(bad)
jmp
clc
repz
adc
retf
add
dec
or
test
fidiv
(bad)
(bad)
(bad)
jmp
popa
push
out
sbb
inc
pop
fwait
fwait
and
test
pop
or
adc
jge
lahf
cwde
push
ins
sahf
(bad)
(bad)
(bad)
dec
ja
jecxz
jle
div
cmc
fwait
cmp
test
mov
cmp
(bad)
fadd
fcmovnu
mov
pushf
int
xor
push
cwde
sbb
xor
shl
stos
(bad)
(bad)
(bad)
call
mov
mov
call
dec
fnstcw
and
xchg
test
mov
push
push
lods
(bad)
(bad)
(bad)
(bad)
ds
push
das
add
push
bound
shl
dec
cmp
adc
mov
add
std
cmps
mov
std
(bad)
mov
icebp
in
repnz
sub
out
or
iret
fisttp
cli
(bad)
dec
or
sbb
sub
pop
mov
and
jmp
(bad)
mov
les
inc
push
lahf
or
add
(bad)
(bad)
mov
mov
pushf
jo
cld
pop
sub
ins
or
xlat
pop
fdivrp
cmp
cmps
inc
jl
neg
add
sub
xor
mov
sub
call
xchg
xchg
call
(bad)
jmp
scas
orps
out
out
retf
loopne
push
into
es
rol
imul
xchg
lock
dec
push
xor
or
or
pop
cli
(bad)
(bad)
dec
std
push
sub
jmp
cmc
loopne
sub
mov
jge
outs
(bad)
(bad)
jmp
ins
cwde
std
and
(bad)
mov
cmp
je
sbb
sti
mov
cld
adc
sub
mov
(bad)
aaa
adc
xchg
call
jmp
or
fsub
mov
out
ss
aad
(bad)
pusha
add
or
pop
icebp
fistp
jo
push
add
lock
xchg
xchg
mov
cmp
out
jle
out
movs
dec
xor
in
sub
fcom
and
(bad)
mov
mov
mov
mov
fadd
dec
sbb
out
jp
pop
jmp
fcom
(bad)
(bad)
push
dec
or
cmovns
imul
mov
out
xchg
sar
adc
aaa
pushf
cmp
cdq
(bad)
(bad)
fbstp
ja
ins
xor
sbb
daa
stc
cmp
ret
test
dec
adc
push
sub
sub
mov
clc
(bad)
call
mov
push
jnp
sbb
(bad)
mov
sub
cs
pusha
cmp
(bad)
(bad)
jmp
add
cmp
or
push
loope
scas
iret
test
push
adc
scas
jecxz
inc
(bad)
(bad)
push
(bad)
mov
lods
ret
inc
mov
cli
aas
jg
iret
pop
inc
int3
cmp
mov
pop
imul
sbb
sub
js
in
aad
adc
and
mov
(bad)
push
cdq
sbb
sub
or
es
shr
(bad)
inc
mov
sbb
jecxz
cmps
pop
jmp
mov
fxch
push
add
(bad)
(bad)
(bad)
inc
and
mov
adc
add
add
lock
loope
xor
clc
push
ret
(bad)
jmp
je
or
jno
mov
sub
(bad)
call
cli
call
add
sbb
adc
or
js
jmp
(bad)
(bad)
(bad)
dec
aam
fiadd
jo
out
jo
xchg
add
and
test
dec
adc
xchg
lods
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
or
scas
movs
push
pop
jo
adc
pop
xchg
or
jmp
lock
(bad)
dec
into
mov
out
cld
mov
repnz
fst
(bad)
(bad)
mov
js
and
fwait
push
push
cmc
jno
loop
pusha
ss
(bad)
(bad)
(bad)
jmp
jecxz
retf
jns
fadd
ret
fisub
icebp
add
js
fcmovnbe
pop
fcomip
(bad)
dec
jl
in
(bad)
imul
sub
ficom
clc
jbe
jge
xchg
test
(bad)
(bad)
mov
xor
xchg
cmc
ja
fcmovnbe
leave
or
das
mov
cmp
(bad)
(bad)
jmp
mov
scas
inc
stos
xchg
sub
sbb
jp
jns
movs
inc
xor
ss
(bad)
(bad)
(bad)
inc
stos
mov
js
pop
jmp
popf
cld
push
shr
lods
fstp
aas
or
inc
dec
loop
jbe
dec
lea
pop
cdq
jmp
adc
mov
es
jbe
test
call
ficom
bound
push
sbb
outs
popa
inc
(bad)
dec
lock
add
pusha
retf
and
(bad)
test
fisubr
push
jmp
ja
or
(bad)
(bad)
dec
cmp
les
jmp
addr16
jno
and
iret
mov
dec
call
(bad)
xchg
mov
xchg
movs
push
enter
lahf
mov
push
mov
call
fdivp
sbb
xor
jle
add
and
xor
mov
shl
call
addr16
fnsave
jb
pop
and
imul
inc
nop
sbb
sbb
ja
jmp
aaa
dec
es
xchg
in
push
pop
mov
inc
ret
xchg
pusha
sub
test
cmp
popf
stc
mov
std
fcomp
(bad)
(bad)
jmp
mov
jle
shl
std
test
or
fld
pop
(bad)
(bad)
jmp
add
add
movs
ja
lock
sub
xor
in
bound
sbb
and
push
out
dec
dec
cmp
lods
jmp
aad
add
popf
mov
mov
(bad)
jmp
sbb
push
in
jmp
addr16
aam
mov
sti
call
jle
push
inc
ja
outs
pop
mov
fisub
test
(bad)
(bad)
clc
sub
aad
jo
pop
add
mov
mov
dec
iret
(bad)
or
(bad)
(bad)
jg
call
mov
aad
pushf
pop
out
sub
xchg
and
mov
call
dec
pop
xchg
popa
stc
dec
jmp
inc
dec
retf
enter
jb
or
ret
(bad)
call
push
(bad)
(bad)
rol
inc
outs
jb
xchg
sbb
call
inc
daa
mov
push
push
pop
(bad)
jmp
je
adc
les
add
loope
(bad)
(bad)
dec
xchg
and
mov
cmp
fisubr
adc
push
pop
xchg
pop
stos
inc
test
neg
or
inc
push
sti
push
mov
cmp
out
jno
(bad)
(bad)
inc
add
std
jbe
dec
inc
popf
ins
test
push
or
jnp
mov
mov
addr16
sahf
cmp
dec
repnz
arpl
int
pop
mov
mov
mov
and
push
xchg
call
cli
stos
je
mov
in
inc
cli
sbb
int3
in
push
(bad)
(bad)
(bad)
(bad)
in
dec
ds
mov
int
jns
mov
jl
ret
pop
jmp
(bad)
ret
xchg
sub
(bad)
(bad)
call
test
cmp
sbb
dec
push
inc
out
sbb
inc
or
out
lahf
sbb
enter
and
and
xlat
fimul
pop
or
ficom
test
(bad)
(bad)
jmp
stc
ss
mov
movs
out
test
in
cmps
test
ins
cmps
ins
aaa
push
retf
jp
and
(bad)
dec
xchg
adc
pop
fld
adc
neg
inc
out
sbb
test
aam
jl
xor
imul
call
aaa
mov
stc
xchg
inc
rol
adc
into
aaa
into
mov
int3
xor
add
out
push
pop
dec
scas
adc
mov
or
(bad)
sub
es
loop
and
(bad)
(bad)
(bad)
inc
sbb
pop
sar
push
ins
jg
and
mov
inc
sub
jae
stos
(bad)
(bad)
(bad)
fild
xchg
dec
fucomip
inc
lea
ja
mov
(bad)
and
inc
(bad)
(bad)
(bad)
jmp
cmps
popa
bound
idiv
jbe
mov
(bad)
aas
sbb
xchg
(bad)
(bad)
(bad)
stc
nop
push
scas
cdq
sbb
fisub
push
jmp
stos
dec
fwait
dec
pop
xchg
inc
pop
dec
jl
dec
xlat
fsub
push
jmp
fcmovnb
jnp
iret
pop
iret
sbb
(bad)
(bad)
(bad)
call
mov
scas
mov
push
mov
dec
inc
fsub
fstp
lods
out
sar
(bad)
(bad)
call
dec
pop
pop
dec
out
cdq
(bad)
js
push
pop
adc
test
fwait
xchg
lock
lock
sti
imul
push
(bad)
(bad)
(bad)
mov
gs
jp
stos
inc
mov
into
mov
or
out
lds
add
sbb
(bad)
inc
sub
ror
or
das
push
loope
xchg
sbb
push
push
rcr
int3
mov
pop
adc
clc
(bad)
push
stos
std
outs
mov
xchg
and
inc
mov
gs
(bad)
(bad)
inc
stc
and
shl
mov
(bad)
jae
cdq
cmp
mul
(bad)
(bad)
(bad)
(bad)
js
pop
aam
(bad)
mov
push
mov
scas
test
ret
pop
sbb
bound
mov
xchg
push
dec
stos
adc
jecxz
dec
mov
(bad)
(bad)
(bad)
dec
sub
retf
sbb
repz
add
jg
inc
jge
add
mov
pop
xor
ja
(bad)
out
cli
xchg
sub
and
push
out
sub
dec
and
xchg
cld
pop
jns
fidivr
mov
pop
add
sub
(bad)
repz
addr16
(bad)
(bad)
push
cli
sub
mov
clc
sbb
adc
mov
sahf
mov
cwde
ss
(bad)
(bad)
(bad)
jmp
and
jo
sbb
sbb
xchg
push
add
cmp
out
pop
out
popa
addr16
and
(bad)
in
push
mov
sub
outs
prefetch
or
(bad)
jmp
mov
fnstenv
int
jl
out
inc
pop
xor
imul
test
mul
jae
retf
rol
(bad)
(bad)
jmp
mov
fs
mov
xor
cmp
and
cli
push
cmp
popa
inc
sbb
faddp
push
cs
pushf
jmp
pop
(bad)
(bad)
(bad)
jmp
xor
sub
leave
jecxz
cwde
cli
loopne
jne
dec
outs
test
mov
daa
in
cli
(bad)
(bad)
jmp
xor
and
hlt
mov
cmp
xor
dec
in
pop
ds
ret
movs
lods
pop
sbb
std
mov
shr
(bad)
(bad)
fwait
loop
sub
test
inc
adc
cmp
(bad)
jl
inc
jmp
mov
sub
add
mov
call
(bad)
call
pusha
mov
xor
mov
dec
test
(bad)
(bad)
(bad)
jmp
jg
sub
mov
loope
sbb
mov
ins
test
cs
inc
in
mov
in
(bad)
call
push
arpl
adc
aad
cwde
adc
push
(bad)
shl
mov
outs
retf
mov
xchg
xchg
mov
add
inc
sti
push
ins
lds
or
shl
ud0
inc
ret
xor
movs
mov
leave
retf
and
gs
jl
(bad)
(bad)
(bad)
dec
sub
xchg
xchg
nop
mov
std
jmp
out
cmps
outs
jno
pop
mov
sahf
(bad)
jmp
sub
sub
jl
xchg
ss
push
xchg
fstp
out
out
sub
test
aam
or
int3
stos
mov
(bad)
stc
mov
xor
jg
je
in
(bad)
iret
and
(bad)
call
jo
pop
into
loope
xor
cmp
pushf
lock
mov
call
sbb
(bad)
cmp
pop
or
mov
xchg
popf
sub
aad
call
push
shl
push
mov
xor
je
or
mov
xor
(bad)
dec
pop
pop
dec
sar
clc
dec
push
adc
mov
outs
fisub
fwait
xor
(bad)
(bad)
dec
xchg
or
pop
loopne
sbb
loopne
push
or
ret
adc
clc
sbb
pop
sbb
outs
or
call
clc
(bad)
(bad)
jg
icebp
mov
cli
out
push
ror
mov
out
(bad)
test
pop
lahf
(bad)
(bad)
jmp
test
movs
mov
mov
xchg
popf
adc
mov
jge
sbb
mov
or
cmp
clc
(bad)
jmp
int
sbb
lds
sbb
aad
in
(bad)
mov
bound
jne
cs
push
dec
fwait
mov
cmps
xchg
loopne
icebp
or
in
xchg
add
push
ret
push
and
dec
push
jno
adc
sub
ins
shr
call
cmp
jle
scas
daa
sbb
arpl
mov
push
clc
jmp
adc
out
xchg
repnz
or
dec
(bad)
(bad)
(bad)
(bad)
mov
pushf
mov
data16
sub
jmp
adc
mov
adc
add
stos
clc
push
add
ja
pushf
push
nop
xlat
mov
sub
mov
or
call
movs
nop
cmp
lods
sbb
mov
(bad)
jmp
xor
fdivrp
out
mov
xlat
iret
es
(bad)
mov
pop
popf
mov
xor
sbb
rol
movs
mov
lods
add
call
shl
dec
(bad)
les
(bad)
(bad)
(bad)
fucomip
xchg
frstor
xor
clc
inc
int
stos
adc
add
mov
lods
(bad)
inc
movs
push
int
jg
sub
repnz
mov
ins
icebp
mul
js
pop
bound
mov
(bad)
(bad)
jmp
jge
mov
mov
cld
cwde
(bad)
pusha
int3
ret
push
(bad)
lods
loope
stos
(bad)
(bad)
(bad)
push
push
inc
cmps
cli
lahf
(bad)
frstor
dec
int
mov
adc
aad
sbb
push
(bad)
(bad)
(bad)
push
mov
(bad)
arpl
movs
imul
pop
or
shr
enter
sbb
add
push
cwde
fcmovnu
and
daa
xchg
mov
(bad)
(bad)
call
aas
popf
ror
cmp
inc
and
loop
ror
fs
(bad)
(bad)
(bad)
inc
shr
mov
out
jecxz
jl
sub
xlat
(bad)
sahf
fstp
les
and
(bad)
jns
jg
sub
enter
push
or
push
jle
inc
push
test
and
(bad)
test
add
xor
in
lds
(bad)
neg
cmp
aas
dec
pop
mov
stc
popf
adc
mov
sti
sub
sbb
sbb
mov
push
movs
aam
loope
outs
je
cmp
jmp
mov
adc
repz
mov
(bad)
call
push
inc
lea
cmp
sbb
xor
push
cmp
les
push
sahf
mov
out
scas
in
(bad)
(bad)
enter
jo
push
add
cmc
mov
jno
sub
push
sar
inc
inc
out
pusha
sub
xchg
inc
rol
adc
das
xchg
ins
lock
pop
push
mov
int3
xchg
and
shl
leave
pop
inc
fs
or
push
push
and
inc
push
mov
les
pusha
rcl
xlat
pushf
xchg
retf
dec
stos
mov
push
jecxz
call
jb
add
cmp
xchg
xor
out
aam
repnz
sub
push
(bad)
(bad)
(bad)
call
scas
and
push
(bad)
fucomi
push
pop
push
ss
nop
push
call
xor
iret
cmps
mov
aam
fmul
mov
es
fs
pusha
lds
fwait
sti
aad
sbb
sbb
mov
movs
lods
push
inc
clc
or
xchg
out
sbb
push
es
jg
sub
scas
adc
out
lahf
jnp
jecxz
sub
jg
(bad)
jmp
jno
icebp
inc
push
pop
xor
or
push
adc
(bad)
(bad)
push
xor
sbb
inc
ss
xchg
xlat
mov
inc
imul
test
fild
pop
push
int3
xor
push
xchg
sub
(bad)
push
test
lods
std
neg
sahf
mov
inc
cwde
jnp
pop
dec
mov
je
ror
(bad)
jmp
mov
(bad)
mov
xor
aaa
das
test
lar
out
sub
(bad)
dec
icebp
adc
lahf
dec
push
sub
mov
outs
cmp
cmc
push
pop
xor
(bad)
(bad)
jmp
xor
cdq
scas
dec
imul
dec
or
and
push
add
inc
call
push
clc
jge
xlat
xchg
in
add
adc
inc
xchg
(bad)
(bad)
inc
sahf
les
out
sub
sub
jmp
sbb
(bad)
(bad)
dec
pop
push
cmp
(bad)
xlat
xor
pop
dec
mov
sub
jne
dec
push
cdq
daa
aaa
mov
(bad)
mov
or
xchg
pop
pop
cld
pop
jo
(bad)
push
xchg
sub
or
mov
out
jae
add
aad
inc
stos
add
rcr
cmps
push
jle
imul
mov
inc
addr16
nop
push
push
mov
xchg
(bad)
call
xor
inc
dec
jnp
(bad)
sbb
popf
aas
jmp
repz
mov
(bad)
std
pop
jae
push
push
fsubr
nop
hlt
pop
rcr
imul
repnz
movs
dec
pusha
(bad)
push
(bad)
mov
retf
jle
pop
xchg
test
imul
jg
adc
mov
(bad)
out
sbb
sub
in
jl
(bad)
js
mov
retf
js
(bad)
(bad)
(bad)
jmp
jl
outs
push
jmp
add
ret
rcr
lods
jmp
jmp
(bad)
mov
pushw
and
div
sbb
pop
pop
(bad)
jmp
ror
inc
inc
clc
and
mov
call
xchg
(bad)
push
fcom
jo
ins
loop
sbb
test
xchg
mov
loope
bound
nop
xor
lods
sub
cdq
and
cmps
lahf
mov
fcomip
push
xchg
bound
push
aas
inc
sahf
lock
mov
call
daa
(bad)
(bad)
(bad)
(bad)
jg
aad
jns
stos
ja
ja
popa
sti
jnp
fwait
arpl
in
enter
imul
push
or
(bad)
(bad)
jmp
ja
pop
or
sar
sub
test
in
mov
push
jmp
outs
sub
sbb
dec
sub
mov
mov
mov
sar
(bad)
(bad)
inc
sub
mov
jmp
inc
les
jmp
movs
cli
scas
std
inc
sbb
(bad)
(bad)
(bad)
push
jnp
js
jbe
sub
sahf
shl
in
sbb
out
int
retf
cmp
inc
jne
(bad)
(bad)
call
pop
mov
cmps
fiadd
sbb
(bad)
pop
test
dec
gs
mov
push
and
in
ret
xchg
inc
dec
mov
dec
lock
fimul
cmp
push
sbb
push
and
(bad)
(bad)
(bad)
out
fyl2xp1
fwait
cmp
fnstenv
push
ror
jp
jnp
out
movs
scas
pusha
iret
cmp
(bad)
inc
mov
and
add
mov
and
pop
repnz
pop
dec
aas
in
sahf
js
stc
into
in
cmp
cld
(bad)
(bad)
jmp
inc
and
cs
xchg
push
sub
or
or
ss
stos
ret
xchg
lock
(bad)
push
ds
dec
add
adc
or
(bad)
(bad)
dec
mov
data16
jecxz
pop
sub
mov
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aam
es
dec
imul
dec
mov
loop
icebp
out
cmp
ins
jo
adc
(bad)
(bad)
(bad)
dec
repz
push
ins
sahf
jns
or
lea
push
pop
dec
dec
mov
movs
(bad)
(bad)
(bad)
jmp
outs
jae
shl
adc
(bad)
mov
lods
mov
outs
sbb
mov
retf
in
pop
mov
mov
nop
bound
loopne
adc
in
jmp
lahf
repz
and
push
fstp
data16
(bad)
(bad)
frstor
mov
push
mov
jmp
push
mov
adc
call
in
out
aaa
outs
pop
add
xor
call
xchg
enter
fdiv
(bad)
(bad)
(bad)
jmp
scas
call
pop
fbld
mov
xor
mov
push
vpaddsw
(bad)
(bad)
jmp
in
clc
cmp
es
into
loope
mov
in
shl
cmp
mov
sar
adc
push
xchg
retf
popa
xor
dec
lock
aaa
jge
cmc
jo
enter
(bad)
pop
add
sub
(bad)
(bad)
jg
sahf
bnd
ret
and
test
mov
mov
jno
fcomip
(bad)
jmp
sar
cmps
jne
jle
inc
mov
es
fsub
mov
scas
xor
int
dec
sbb
and
jmp
(bad)
(bad)
(bad)
dec
pop
adc
dec
add
mov
int
sbb
into
push
xchg
cld
xor
or
ja
fdivr
fcomip
jmp
sub
loop
lods
test
pop
jle
jle
(bad)
(bad)
(bad)
push
int3
jbe
mov
and
dec
push
push
ja
sbb
add
cli
pop
js
jl
std
(bad)
(bad)
fist
or
(bad)
jl
les
adc
pop
pop
cmc
or
stos
mov
mov
js
lock
jmp
scas
dec
pop
add
movs
test
or
inc
dec
push
mov
in
sbb
(bad)
call
stos
retf
mov
mov
xor
(bad)
(bad)
(bad)
(bad)
aas
es
dec
mov
push
inc
outs
aaa
sub
repnz
or
cmps
mov
ss
lahf
std
xor
cmps
add
iret
add
pop
neg
add
xchg
push
fwait
call
cld
scas
bound
fucomip
mov
push
loopne
dec
jmp
inc
(bad)
jmp
fistp
cwde
or
push
xchg
mov
mov
push
adc
call
mov
inc
les
mov
loop
mov
(bad)
(bad)
fucomip
cwde
and
pop
lea
push
sbb
jmp
dec
lods
(bad)
sbb
jno
ror
pushf
inc
jo
(bad)
(bad)
jg
jmp
sub
jecxz
ds
into
xor
adc
daa
dec
pop
dec
cmp
adc
call
in
add
xchg
xchg
jo
std
repz
aaa
clc
inc
cld
cmp
(bad)
call
bound
lahf
call
sar
sar
cs
(bad)
(bad)
(bad)
std
xor
sub
nop
aad
and
loope
mov
lock
int3
(bad)
adc
rol
jmp
xor
loop
and
push
(bad)
fidiv
sbb
mov
(bad)
dec
push
(bad)
loop
and
(bad)
bswap
std
pop
push
sti
pop
jno
loop
repz
(bad)
jg
call
leave
movs
int3
enter
(bad)
inc
iret
out
mov
(bad)
adc
in
loop
(bad)
mov
or
int
iret
sub
scas
cmps
mov
jle
sub
push
push
cld
jle
rcl
ror
jae
cmp
dec
cmp
dec
add
iret
lods
ins
mov
(bad)
fcomip
inc
andps
test
cmovno
jae
mov
cli
ror
push
jmp
sbb
daa
aaa
inc
xor
push
mov
xchg
and
pop
and
add
dec
jmp
das
mov
iret
jge
add
(bad)
(bad)
(bad)
inc
pop
mov
lahf
mov
pop
in
push
cld
and
lods
js
adc
jmp
cli
dec
inc
or
pop
outs
push
fistp
adc
stc
stos
or
cmp
xchg
(bad)
pop
sbb
(bad)
(bad)
mov
push
cmp
add
pop
xor
loopne
push
ja
bswap
mov
call
fs
loopne
(bad)
data16
shl
(bad)
(bad)
call
mov
mov
xchg
pop
mov
pushf
or
mov
xchg
push
and
add
imul
jmp
ds
div
jle
iret
jno
dec
dec
dec
cmp
or
sbb
cwde
hlt
sti
mov
push
jns
rcr
nop
pop
pop
adc
popa
scas
and
mov
imul
sub
retf
push
xor
xor
inc
mov
aas
mov
or
(bad)
fild
adc
or
cwde
mov
imul
and
int3
leave
inc
inc
aas
sub
adc
lock
cdq
retf
ins
dec
dec
mov
outs
adc
(bad)
(bad)
(bad)
push
cwde
dec
dec
retf
std
test
dec
mov
xor
aad
adc
mov
int
pop
or
call
xchg
jge
jp
push
je
mov
mov
mov
push
(bad)
jmp
jae
out
and
jnp
jmp
(bad)
mov
mov
stos
dec
push
and
mov
xlat
mov
fst
fidivr
call
mov
adc
xchg
stc
jge
ss
in
inc
inc
dec
(bad)
push
lock
(bad)
(bad)
fcomp
inc
stc
xchg
ja
pop
mov
cdq
inc
ja
pop
outs
hlt
std
(bad)
(bad)
mov
jle
ret
add
dec
mov
ins
adc
inc
ja
lods
pop
and
(bad)
rcr
or
or
ds
xor
aam
dec
mov
ja
test
mov
cmps
pop
pop
loope
inc
cmp
sbb
sbb
(bad)
dec
(bad)
cmp
mov
jmp
stos
je
outs
mov
lods
jo
dec
jae
scas
stos
push
loopne
cli
(bad)
(bad)
test
frstor
pop
add
les
jb
repz
pop
(bad)
fild
dec
mov
push
loopne
(bad)
mov
(bad)
push
jl
fiadd
mov
cmps
and
push
adc
(bad)
(bad)
mov
mov
dec
cmp
inc
ds
xor
and
sbb
clc
call
dec
pop
jg
loop
push
dec
xor
sbb
(bad)
push
cwde
dec
pop
push
out
sti
aas
or
jno
mov
ss
data16
sbb
pop
test
mov
(bad)
fisttp
add
(bad)
mul
inc
xchg
mov
rcl
sbb
(bad)
(bad)
jmp
sub
sub
js
push
mov
hlt
fs
pushw
pop
imul
xor
cmps
(bad)
scas
test
(bad)
(bad)
(bad)
dec
into
out
inc
outs
repz
ret
popa
aaa
xchg
ss
in
(bad)
mov
test
paddq
xor
or
(bad)
(bad)
jmp
cmp
cwde
and
dec
loope
fcomp
pmullw
ja
pop
dec
sub
add
jg
cmps
cmp
dec
cmp
jmp
xchg
mov
and
and
inc
movs
sub
(bad)
(bad)
(bad)
push
out
jg
push
mov
scas
in
rol
inc
mov
or
stos
jge
xchg
call
jo
ins
fcomi
xchg
push
add
idiv
ja
push
into
inc
or
mov
repz
jmp
xchg
sahf
jp
lods
and
mov
in
jb
jmp
push
mov
or
xchg
push
shr
ja
or
retf
(bad)
(bad)
jl
xchg
mov
(bad)
mov
push
add
mov
retf
(bad)
(bad)
(bad)
mov
cmps
sbb
push
popf
adc
pop
or
out
lahf
inc
sbb
cmp
jp
mov
inc
xchg
jp
mul
and
pop
into
xor
and
add
(bad)
push
mov
xchg
aas
std
(bad)
pop
test
cmp
ja
fbstp
daa
jb
push
shr
test
repnz
and
shl
inc
leave
mov
dec
cli
dec
push
call
mov
mov
outs
sbb
mov
(bad)
(bad)
push
lock
or
jg
xchg
add
out
sbb
dec
or
and
repnz
rol
push
ins
je
push
dec
pop
movs
je
clc
(bad)
jo
fs
(bad)
(bad)
jg
repz
fs
mov
stos
push
in
arpl
ins
xor
jbe
int
xchg
cmp
rcl
call
ins
outs
mov
fdiv
in
dec
mov
pop
arpl
call
mov
push
mov
sahf
mov
mov
call
lock
aaa
push
push
sub
sbb
or
cmovno
add
sub
jecxz
nop
(bad)
fcomip
aaa
inc
jo
inc
cmp
pop
hlt
(bad)
loopne
inc
out
adc
push
mov
(bad)
(bad)
(bad)
mov
retf
or
jae
xor
cli
dec
into
sar
xor
sbb
cli
call
dec
jge
mov
std
sub
or
sar
(bad)
std
push
pushf
stos
std
push
loope
jmp
scas
popf
pop
shl
ficom
cmps
(bad)
sub
bound
cld
(bad)
push
sub
icebp
call
test
clc
pusha
(bad)
out
mov
sbb
and
(bad)
stc
in
dec
loopne
mov
cmp
nop
cmp
dec
pop
cdq
mov
cli
cmps
inc
xchg
imul
add
and
test
(bad)
cld
(bad)
(bad)
dec
inc
stos
add
jo
dec
jl
adc
pop
xchg
daa
push
mov
fistp
adc
(bad)
(bad)
cmp
pop
(bad)
or
pop
add
or
cmp
inc
mov
mov
and
jl
add
add
add
fcmove
jne
(bad)
(bad)
push
xor
xor
shl
push
jp
xor
xor
dec
repnz
(bad)
(bad)
dec
mov
push
sti
cmp
pop
inc
(bad)
mov
(bad)
fild
pop
sbb
push
pop
(bad)
(bad)
call
(bad)
fild
mov
pop
dec
dec
cli
pop
cmp
fistp
retf
cs
xchg
pop
add
ret
adc
aaa
xor
mov
inc
mov
mov
fdiv
(bad)
(bad)
jmp
enter
push
(bad)
hlt
in
js
call
repz
jne
xlat
(bad)
inc
cmps
or
mov
ret
loop
(bad)
shl
inc
shr
pop
and
call
shr
cdq
les
aas
mov
clc
mov
adc
xor
xchg
out
xchg
in
cwde
stos
ja
shl
sub
jmp
aas
repnz
out
lea
add
xchg
ret
(bad)
fimul
jae
xor
inc
mov
(bad)
call
or
xchg
adc
bound
dec
pop
outs
cmp
xchg
inc
inc
add
or
cmp
ficom
js
lea
(bad)
(bad)
(bad)
call
iret
mov
aad
popa
ret
sbb
out
mov
lods
pop
push
or
jp
imul
(bad)
call
pop
jp
push
and
and
jb
sub
out
and
mov
inc
sar
mov
xor
and
add
(bad)
(bad)
(bad)
mov
cs
push
je
push
pop
out
xchg
lds
dec
adc
jecxz
push
mov
jo
(bad)
inc
arpl
jb
(bad)
cmp
cmc
(bad)
push
into
test
sub
inc
lods
(bad)
(bad)
(bad)
call
inc
retf
push
dec
push
and
jle
xor
cmps
sbb
leave
hlt
das
add
fcomp
xor
fisttp
jecxz
rcr
add
es
mov
sub
sbb
xor
(bad)
(bad)
(bad)
call
retf
add
dec
pop
jne
push
and
jle
fwait
jl
bound
jae
mov
icebp
cdq
aam
inc
dec
jp
dec
xchg
jp
sahf
addr16
sbb
and
push
xchg
in
scas
xchg
adc
leave
cmp
adc
jp
loopne
sti
(bad)
jmp
xor
push
fmul
mov
sbb
dec
out
hlt
sbb
(bad)
inc
mov
adc
cwd
inc
loope
cld
mov
(bad)
(bad)
inc
out
mov
xor
and
leave
lock
shr
nop
imul
xlat
sbb
mov
fcomp
nop
mov
push
mov
mov
pop
push
dec
fwait
iret
aad
std
(bad)
(bad)
aas
enter
mov
imul
sbb
sbb
mov
fild
pop
cmp
retf
icebp
in
sbb
int
(bad)
(bad)
jmp
sbb
jne
pop
mov
test
xor
push
push
mov
in
repnz
ds
gs
popa
mov
in
(bad)
(bad)
mov
cmps
fldcw
jmp
cld
(bad)
dec
dec
ss
xor
push
(bad)
(bad)
(bad)
(bad)
out
popa
and
or
out
aaa
push
mov
adc
xchg
out
jns
clc
push
pop
pop
mov
(bad)
jmp
rcl
ret
nop
sub
push
sub
cmp
cmps
cmp
aaa
sbb
sub
(bad)
(bad)
(bad)
dec
shr
dec
stos
(bad)
inc
leave
retf
mov
sti
and
clc
xor
(bad)
(bad)
call
fidivr
icebp
mov
sub
popa
dec
jb
sbb
pop
sti
dec
repz
(bad)
(bad)
(bad)
jmp
cmp
cwde
fsub
xchg
jbe
sub
adc
call
fs
push
lock
jmp
add
xchg
mov
pop
adc
mov
xchg
repnz
clc
ret
enter
rol
jl
xchg
inc
sar
push
dec
push
sbb
daa
adc
std
(bad)
push
adc
pop
push
stos
xchg
in
(bad)
jbe
fisubr
jo
pop
(bad)
jg
lea
loop
aaa
xchg
fiadd
pop
lds
out
pop
stos
cmc
mov
(bad)
(bad)
(bad)
dec
int
inc
clc
aaa
popa
in
fadd
adc
int
mov
mov
loop
scas
mov
push
imul
(bad)
rcr
sub
dec
(bad)
inc
or
add
lods
push
adc
adc
popa
retf
(bad)
jmp
pop
iret
mov
sbb
mov
cmp
bswap
mov
xchg
or
jmp
sbb
rcl
mov
cmp
fsubr
jge
dec
push
pop
jne
mov
push
movs
pop
add
lods
retf
xchg
lock
rcr
out
dec
mov
mov
in
and
push
call
xchg
(bad)
jg
and
push
not
outs
in
aad
add
mov
sub
mov
mov
xchg
inc
sub
(bad)
push
push
mov
push
inc
cwde
mov
inc
or
in
pusha
pop
push
ins
sahf
jae
lock
jmp
faddp
jae
sub
mov
inc
iret
lahf
repz
(bad)
loop
in
fwait
inc
es
das
xchg
sub
lds
pop
call
jle
imul
(bad)
inc
mov
rcl
jno
ja
push
lock
test
push
data16
inc
fisttp
cmps
icebp
(bad)
(bad)
cmp
cs
lahf
and
int3
xchg
clc
in
mov
(bad)
jmp
imul
popa
sar
fsubr
ss
push
aas
scas
sbb
stc
addr16
add
cmc
(bad)
push
sub
mov
retf
and
mov
movs
jp
stos
cmp
(bad)
(bad)
jmp
fdivr
jecxz
push
icebp
mov
push
cmp
pop
fst
sub
sub
(bad)
(bad)
(bad)
inc
les
mov
jle
dec
retf
jbe
cmp
aas
sbb
idiv
pusha
jne
cmps
jg
sar
or
scas
icebp
xor
add
fwait
mov
mov
rol
cmps
sti
call
or
frstor
imul
aad
push
pop
xor
mov
jae
xor
(bad)
ds
imul
outs
test
nop
and
mov
stc
add
(bad)
(bad)
(bad)
inc
ret
(bad)
pusha
push
stc
mov
mov
pop
push
pop
ror
mov
mov
adc
(bad)
(bad)
(bad)
jmp
jae
mov
cwde
xchg
gs
add
out
movs
and
xlat
sub
mov
(bad)
repz
in
addr16
inc
dec
sbb
dec
nop
in
jne
fcompp
mov
call
(bad)
(bad)
call
mov
(bad)
aam
push
test
mov
sub
aas
xchg
dec
sub
xchg
xchg
add
mov
es
mov
retf
inc
push
pcmpeqb
inc
fwait
mov
fisub
(bad)
mov
sbb
mov
repnz
adc
jmp
retf
not
adc
xchg
and
ret
(bad)
out
cli
in
mov
sub
icebp
inc
dec
jl
add
int
jbe
(bad)
(bad)
jg
loop
sbb
mov
or
and
mov
fnsave
lods
xchg
ds
leave
xchg
mov
es
jg
(bad)
(bad)
cld
rcr
(bad)
(bad)
std
push
lods
jp
aad
jecxz
add
cs
sub
into
xor
xchg
dec
(bad)
(bad)
(bad)
call
dec
loope
jne
test
and
mov
mul
lods
shl
mov
test
scas
inc
dec
inc
lods
mov
cmp
sbb
fadd
das
dec
mov
icebp
fwait
(bad)
(bad)
(bad)
jmp
stos
dec
cmp
shr
stos
rcl
stos
jmp
ficomp
xchg
mov
fisub
jns
push
lds
imul
shr
jbe
push
lahf
adc
out
mov
pop
inc
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
sub
iret
push
and
pop
push
mov
(bad)
(bad)
(bad)
push
out
xchg
shr
pop
xchg
movs
dec
retf
mov
jno
movs
int
mov
mov
(bad)
(bad)
(bad)
(bad)
jg
pop
scas
test
shr
xor
arpl
and
std
pop
out
mov
push
or
(bad)
(bad)
dec
fild
jbe
xor
inc
sbb
jo
dec
daa
cdq
(bad)
pushf
pushf
(bad)
mov
mov
fmul
icebp
(bad)
push
jl
adc
(bad)
xor
cdq
int3
jp
add
les
cwde
jle
mov
xor
sub
int
mov
mov
and
call
and
mov
imul
bound
lock
(bad)
jg
jmp
ds
cmps
mov
ret
lods
rol
idiv
cmp
(bad)
(bad)
inc
mov
xor
add
dec
xor
addr16
jp
out
je
(bad)
(bad)
(bad)
inc
xchg
add
ins
inc
mov
jmp
sbb
bnd
sub
jb
xchg
repz
cmps
mov
(bad)
(bad)
(bad)
jmp
adc
sub
xchg
nop
jmp
inc
gs
(bad)
in
mov
mov
es
cmp
(bad)
(bad)
(bad)
call
mov
retf
imul
add
imul
cmps
(bad)
(bad)
dec
pop
mov
adc
out
xlat
mov
pop
adc
jl
sub
adc
lea
(bad)
(bad)
jg
and
lahf
adc
xchg
push
cmp
movs
int3
sti
fld
loop
mov
test
aaa
cmp
dec
hlt
xchg
mov
dec
dec
xchg
stos
(bad)
(bad)
mov
xor
xchg
enter
shl
daa
aaa
push
div
mov
jmp
shr
in
adc
enter
pmaxub
xor
inc
(bad)
(bad)
(bad)
(bad)
in
dec
(bad)
mov
inc
repnz
sub
(bad)
dec
xlat
xchg
jns
test
lods
(bad)
int
clc
(bad)
(bad)
(bad)
call
aas
mov
mov
out
(bad)
loope
or
inc
mov
pushf
push
sub
sbb
fld
(bad)
(bad)
mov
std
xor
mov
in
inc
xor
loopne
mov
(bad)
call
out
xor
scas
pop
out
mov
int
ror
scas
call
aad
cli
pop
fwait
(bad)
(bad)
(bad)
call
cmc
xor
lds
call
dec
fadd
inc
pop
ins
mov
dec
inc
xchg
jmp
test
ds
sbb
dec
sbb
mov
dec
clc
dec
daa
pop
cmp
call
mov
inc
shl
xor
pop
add
dec
sbb
mov
(bad)
(bad)
push
xchg
sbb
mov
inc
lahf
xlat
das
mov
scas
cs
push
aas
(bad)
mov
aad
dec
into
fsubr
adc
retf
test
stos
xchg
(bad)
(bad)
(bad)
call
bound
pop
std
rcl
cmp
pop
push
jmp
xchg
inc
loope
outs
mov
call
pop
mov
add
mov
movs
pop
(bad)
mov
daa
outs
and
clc
mov
fist
jg
dec
loope
fimul
jnp
(bad)
sahf
mov
enter
pop
jge
mov
mov
xchg
(bad)
(bad)
push
ds
jns
ins
scas
jmp
push
xchg
lahf
cmp
xchg
repnz
gs
pop
(bad)
(bad)
(bad)
inc
or
pop
jne
xchg
retf
and
sbb
cdq
sbb
pop
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
mov
enter
cdq
and
pop
cmovg
call
sbb
dec
xchg
loope
mov
mov
bound
aas
cmc
or
std
scas
push
movs
imul
sbb
push
cmp
adc
adc
mov
ss
mov
add
ret
push
std
das
push
pop
sbb
or
int3
add
add
push
test
xchg
in
mov
scas
js
gs
shr
lods
push
fsubr
mov
cmp
ficomp
adc
pop
adc
sbb
sti
mov
ja
mov
inc
sub
cmp
(bad)
jmp
sub
int3
iret
dec
push
aad
pop
push
retf
mov
inc
mov
dec
ins
sar
(bad)
(bad)
(bad)
aas
and
(bad)
sbb
jecxz
jle
mov
ficom
xor
jmp
cdq
mov
(bad)
(bad)
inc
(bad)
sbb
icebp
imul
icebp
mov
in
push
jp
sar
jmp
dec
or
jmp
popa
sbb
in
adc
call
shl
sti
or
inc
mov
pop
popa
or
mov
push
lahf
in
and
cdq
(bad)
(bad)
call
mov
test
out
mov
mov
jno
and
fwait
xlat
sbb
or
(bad)
(bad)
jmp
lods
mov
sub
fwait
jg
sub
sbb
cli
push
xor
mov
pop
mov
(bad)
(bad)
inc
dec
repz
fwait
enter
mov
cmps
or
popf
ficomp
cmps
mov
xchg
(bad)
dec
or
shr
mov
mov
dec
(bad)
(bad)
(bad)
inc
pop
jns
out
adc
or
scas
xchg
in
arpl
push
xor
and
(bad)
(bad)
(bad)
(bad)
cld
shr
push
(bad)
add
fwait
cmp
xor
cli
call
xor
jnp
scas
jg
or
cwde
inc
adc
popa
movs
(bad)
(bad)
(bad)
(bad)
call
mov
pusha
(bad)
std
stos
and
sbb
xchg
xor
pop
call
push
add
je
xor
mov
gs
aas
mov
push
retf
psubb
(bad)
nop
dec
(bad)
jg
and
lock
dec
(bad)
dec
adc
xlat
cwde
jmp
or
cli
jmp
out
inc
fcom
lahf
push
ret
dec
add
fisttp
call
mov
(bad)
(bad)
inc
pop
mov
adc
into
add
imul
lahf
and
in
dec
(bad)
(bad)
(bad)
jmp
inc
cmp
cmp
fcomp
inc
das
xchg
cmp
in
cld
dec
fimul
mov
or
(bad)
(bad)
fmul
loopne
arpl
mov
inc
xchg
push
ins
push
mov
xor
in
cdq
sbb
ret
out
sub
je
das
cld
loop
pop
mov
push
mov
mov
cdq
xchg
es
adc
fs
(bad)
jg
and
mov
stos
fisttp
jns
(bad)
(bad)
dec
int3
aad
jecxz
or
and
loopne
jnp
xchg
arpl
jbe
mov
xchg
aad
(bad)
mov
(bad)
(bad)
jmp
movs
pop
pop
inc
test
scas
xor
mov
add
xchg
push
rol
or
(bad)
(bad)
(bad)
mov
add
int3
and
test
fist
test
xor
paddusw
sbb
inc
(bad)
jmp
lds
or
fadd
push
cmp
mov
dec
(bad)
(bad)
(bad)
push
sbb
pop
or
(bad)
ds
or
loope
leave
xlat
repnz
lods
call
into
mov
inc
scas
out
xlat
mov
inc
cmp
cmp
adc
mov
(bad)
(bad)
(bad)
(bad)
fstp
mov
mov
sbb
xchg
scas
and
pop
mov
movs
outs
adc
mov
cmp
call
jnp
into
or
add
sub
pop
mov
jo
(bad)
(bad)
(bad)
(bad)
dec
dec
cs
data16
popf
sbb
push
add
xchg
cmp
jbe
mov
jmp
inc
mov
pop
dec
imul
sbb
lods
loop
push
(bad)
lock
adc
(bad)
(bad)
jmp
sbb
popa
test
iret
mov
std
popa
mov
and
sub
mov
cmp
dec
stos
mov
sbb
mov
mov
inc
push
retf
mov
call
jl
fmul
fld
push
jecxz
addr16
in
add
(bad)
push
loopne
aas
std
mov
int3
dec
dec
mov
call
mov
(bad)
jmp
rcr
xchg
movs
jle
pop
xor
pop
rcl
xor
mov
dec
(bad)
cli
je
pop
mov
arpl
pushf
sbb
in
push
jg
sub
pop
push
cld
(bad)
inc
mov
ret
arpl
sub
test
test
test
(bad)
jecxz
lods
popa
lds
fucomi
loopne
xor
mov
test
pop
cmc
(bad)
out
stos
mov
pop
fs
pop
jl
scas
jmp
pop
fwait
gs
dec
test
sbb
aas
adc
(bad)
(bad)
(bad)
(bad)
(bad)
fucompp
push
adc
dec
xchg
mov
mov
inc
mov
sbb
sub
xchg
repnz
clc
(bad)
call
out
sti
nop
mov
mov
out
popa
jmp
(bad)
mov
fwait
daa
mov
idiv
sub
(bad)
call
pop
sahf
mov
sar
int
or
retf
mov
cmp
inc
push
cld
push
xor
jg
into
add
lods
jmp
jl
and
(bad)
(bad)
jg
add
shr
into
dec
lods
mov
mov
jecxz
add
(bad)
(bad)
(bad)
call
(bad)
lock
pop
or
arpl
std
ror
adc
mov
call
(bad)
jmp
mov
xchg
out
pop
mov
xor
mov
sar
jmp
inc
xchg
std
add
jbe
adc
xchg
fadd
sub
push
pushf
jle
dec
(bad)
(bad)
(bad)
jmp
adc
add
mov
mov
jae
fs
pop
mov
mov
pop
cmc
mov
pop
xlat
lods
pop
push
fdiv
ds
outs
retf
sbb
test
(bad)
(bad)
jmp
call
ins
sbb
push
stos
pushf
sar
adc
jp
cmp
leave
(bad)
(bad)
(bad)
dec
ficomp
inc
add
inc
lds
aas
outs
sbb
or
xchg
xor
lods
hlt
shr
clc
rcl
mov
inc
xchg
sub
pop
xor
daa
ds
retf
(bad)
not
loopne
jecxz
jmp
sub
sbb
call
sti
pop
inc
jmp
mov
push
or
in
out
repz
push
in
mov
and
(bad)
(bad)
inc
xor
movs
lods
pusha
inc
mov
cmp
sub
mov
mov
push
popf
clc
(bad)
(bad)
(bad)
(bad)
mov
jmp
or
ja
pop
dec
dec
test
rcl
mov
fsubr
icebp
shl
cdq
xchg
bound
mov
call
lock
and
cmp
xlat
popa
jne
push
dec
clc
or
arpl
ja
call
xor
push
not
fs
std
add
xchg
inc
sbb
mov
push
lea
idiv
push
in
dec
repz
and
cmc
test
jb
sub
mov
jmp
dec
ficom
stc
jecxz
(bad)
or
loope
dec
dec
pop
sbb
in
in
mov
aaa
nop
mov
sahf
mov
adc
jg
sub
sbb
movs
mov
jae
nop
cli
(bad)
stc
sub
mov
mov
cmp
mov
inc
push
mov
cmp
xchg
out
outs
jbe
popf
gs
mov
(bad)
call
fwait
retf
cld
and
inc
rcl
dec
leave
cmp
xchg
ja
pop
in
lock
(bad)
mov
lods
push
shl
pop
jns
or
sub
dec
xor
dec
(bad)
(bad)
(bad)
call
xchg
adc
adc
jecxz
dec
push
sbb
jmp
push
push
jnp
jnp
dec
lahf
inc
cmp
(bad)
(bad)
(bad)
call
fstp
inc
dec
and
cs
cli
pop
movs
outs
aam
add
int
xchg
sub
inc
xchg
(bad)
inc
mov
mov
jecxz
aas
imul
data16
inc
leave
(bad)
(bad)
(bad)
jmp
or
cmps
pop
pop
fwait
iret
test
movs
jg
mov
in
idiv
mov
(bad)
(bad)
call
inc
je
icebp
stos
ror
xchg
jno
pop
movs
cmp
jnp
inc
xchg
cmp
jmp
(bad)
stc
shr
(bad)
(bad)
(bad)
call
push
sub
sub
sub
ss
push
mov
shrd
int
add
in
fnstcw
xor
(bad)
(bad)
call
jb
inc
lods
inc
imul
js
stc
(bad)
out
cmp
ret
call
(bad)
(bad)
(bad)
frstor
cli
push
aaa
int3
push
dec
mov
jns
xor
adc
mov
push
sbb
ss
and
mov
into
mov
jbe
mov
mov
imul
pop
cmp
jmp
mov
sub
lock
hlt
stc
adc
mov
fadd
or
mov
xchg
xchg
or
and
icebp
sub
mov
inc
pop
xor
call
call
cdq
cmp
(bad)
(bad)
(bad)
(bad)
jmp
push
push
cmc
loopne
into
loopne
leave
add
call
inc
sti
popf
sti
mov
xchg
cwde
push
test
(bad)
(bad)
(bad)
(bad)
pop
xchg
int
ss
ss
mov
mov
xor
fcomp
stos
fdiv
add
stos
imul
stc
mov
and
(bad)
push
test
cmovns
enter
inc
cli
shl
addr16
xor
out
sahf
mov
imul
push
(bad)
(bad)
(bad)
jmp
push
push
mov
push
ror
cs
int3
jbe
sub
arpl
push
or
(bad)
push
cmp
mov
adc
dec
addr16
arpl
adc
dec
lds
add
xchg
lock
mov
(bad)
call
push
out
sar
dec
aaa
pop
frstor
movs
mov
(bad)
fidiv
jg
or
pop
sub
stc
jle
cli
(bad)
(bad)
mov
ror
shr
fimul
cli
jnp
and
pop
sub
add
out
(bad)
jmp
pop
xor
std
aad
add
outs
call
cmp
push
lock
cmp
xchg
mov
sub
fcomp
(bad)
(bad)
(bad)
jmp
inc
push
cmps
aaa
(bad)
xor
dec
mov
fisubr
adc
test
mov
outs
and
sar
ds
sbb
jmp
(bad)
(bad)
ins
iret
dec
daa
or
sar
mov
mov
retf
(bad)
(bad)
(bad)
jmp
cmp
xchg
mov
sbb
(bad)
and
push
lahf
or
jle
push
call
in
pushf
adc
ror
js
jecxz
call
(bad)
movs
(bad)
jmp
rcl
xchg
push
gs
nop
aam
mov
sub
sti
mov
pop
std
(bad)
jge
and
sub
mov
loopne
adc
cli
rol
cli
pop
test
out
add
popa
mov
lds
cmp
cmp
or
and
push
cli
mov
loope
cmp
ret
push
inc
fisttp
(bad)
call
xchg
or
fsub
push
dec
out
lds
outs
xor
push
cmps
mov
cmp
push
inc
retf
imul
or
dec
es
jge
mov
(bad)
mov
mov
lea
movs
or
test
fbstp
sbb
(bad)
(bad)
jmp
or
in
sub
push
mov
xchg
(bad)
add
adc
clc
scas
and
push
test
inc
and
out
dec
out
adc
cld
(bad)
(bad)
inc
and
ins
xchg
pop
ror
adc
mov
shr
jmp
ja
adc
(bad)
cmps
(bad)
sub
in
jp
rcl
add
xor
(bad)
(bad)
mov
xor
pop
fisub
jg
pop
jp
pusha
jge
adc
(bad)
(bad)
push
xor
pop
in
jb
test
das
push
push
mov
dec
(bad)
(bad)
mov
mov
dec
mov
pop
nop
pushf
les
(bad)
jmp
jl
pop
sbb
lds
sub
xor
pop
push
push
stos
mov
(bad)
jg
test
xor
xchg
mov
(bad)
popa
retf
out
into
adc
xchg
int3
xchg
ins
jmp
jle
rcl
ret
(bad)
(bad)
fucom
push
sbb
pop
movs
jb
or
(bad)
cdq
pop
rol
push
add
(bad)
(bad)
jmp
fnstcw
js
mov
ror
shl
mov
scas
cwde
je
fs
inc
or
(bad)
(bad)
(bad)
cli
outs
xchg
movs
call
pop
repz
cmp
xchg
int3
(bad)
js
aad
fistp
xchg
call
jmp
adc
gs
push
mov
jnp
adc
sub
cs
dec
mov
idiv
xor
mov
jg
stc
pop
ds
push
(bad)
jmp
aam
call
cmps
(bad)
dec
push
push
cmps
in
mov
(bad)
(bad)
(bad)
mov
push
jmp
pop
pop
cmp
cdq
mov
sbb
and
xchg
test
into
(bad)
(bad)
push
sahf
fdivrp
sub
cmp
cmp
xor
xor
inc
ins
(bad)
mul
retf
lock
cmp
outs
in
jmp
mov
push
fsubr
xchg
mov
and
mov
(bad)
(bad)
push
xchg
pop
mov
popa
sbb
dec
cmps
es
fcmovnu
hlt
xchg
dec
jnp
xchg
mov
cmp
icebp
call
(bad)
(bad)
call
pushf
mov
dec
mov
push
adc
mov
or
jle
pop
cld
(bad)
dec
das
(bad)
dec
dec
mov
adc
dec
inc
jg
enter
(bad)
(bad)
call
test
pop
cli
ror
loopne
adc
push
(bad)
push
in
push
xor
dec
(bad)
(bad)
(bad)
mov
mov
jle
in
cs
mov
push
and
jp
cmp
mov
imul
pop
fmul
and
repnz
and
mov
mov
cmp
(bad)
(bad)
(bad)
jo
push
and
or
add
pop
scas
inc
in
pop
mov
int3
jg
and
ds
and
mov
icebp
(bad)
push
pop
fistp
movs
mov
xchg
push
xchg
jae
sahf
aas
idiv
(bad)
out
mov
cs
aas
ds
imul
mov
cmp
xor
(bad)
(bad)
push
adc
test
sub
xor
ret
imul
push
outs
fsin
stc
lods
enter
(bad)
(bad)
cmp
push
sbb
retf
test
jl
mov
adc
sar
(bad)
(bad)
(bad)
jmp
sahf
mov
dec
push
jne
and
mov
push
xor
rcr
cmp
jnp
push
in
push
jg
inc
cld
cli
xchg
sbb
bound
js
pop
jle
(bad)
(bad)
(bad)
jmp
sub
pop
dec
and
jg
jge
cld
and
inc
pop
cs
adc
pusha
(bad)
(bad)
(bad)
call
xlat
jmp
dec
ret
fld
cmps
push
xor
lods
aaa
fistp
shl
les
leave
mov
(bad)
(bad)
(bad)
mov
or
in
pop
pop
cmp
(bad)
leave
outs
and
jns
sbb
std
sbb
pop
inc
push
repnz
std
inc
add
pop
mov
lea
push
cmp
(bad)
(bad)
jmp
inc
push
inc
mov
rcl
or
fwait
jmp
das
imul
in
mov
(bad)
(bad)
(bad)
cmp
bound
sbb
ds
lahf
push
and
out
pop
hlt
ss
cmp
repz
rol
(bad)
(bad)
jmp
and
xchg
lods
xchg
and
or
xor
fstp
call
fwait
(bad)
(bad)
cld
lds
js
out
mov
ins
cmp
(bad)
fild
cli
stos
add
out
popa
mov
std
sbb
mov
fst
(bad)
inc
push
std
(bad)
xor
jb
cmc
push
mov
pusha
mov
aas
sbb
aaa
cmp
xchg
mov
xchg
cld
xchg
arpl
(bad)
(bad)
(bad)
ficomp
pop
(bad)
retf
mov
xchg
dec
loope
cld
jp
and
cmp
inc
push
mov
ja
rcr
je
and
inc
mov
fcomip
out
idiv
not
daa
add
ja
add
and
dec
adc
or
(bad)
(bad)
jmp
hlt
icebp
jno
add
jge
cli
cmp
sbb
gs
dec
retf
ret
cmp
aam
jb
fdivr
outs
clc
call
sti
dec
cmp
xchg
sub
dec
push
sbb
mov
add
repz
outs
stos
ret
cmp
jo
(bad)
and
cs
ret
test
pop
inc
xchg
retf
rcr
push
retf
(bad)
(bad)
(bad)
jmp
sub
xor
call
(bad)
mov
fmul
jmp
mov
mov
pop
nop
inc
stc
mov
(bad)
call
into
mov
ins
pop
retf
or
dec
fst
mov
aaa
fdivr
mov
cmc
mov
(bad)
call
js
loope
fcomp
imul
idiv
or
pop
and
dec
(bad)
(bad)
(bad)
jmp
aad
nop
add
and
dec
sahf
int3
sbb
(bad)
int
cmp
sbb
mov
call
cmp
jae
and
push
jl
push
fsub
mov
mov
add
test
mov
add
fadd
sbb
mov
(bad)
(bad)
(bad)
call
stos
or
fst
add
shr
js
out
sti
ret
call
cs
icebp
stos
idiv
call
fldl2e
jmp
push
adc
pop
sti
sbb
(bad)
mov
addr16
jbe
or
(bad)
mov
lods
pop
sub
in
in
sub
push
cmps
ja
adc
repz
popf
mov
bnd
pop
movs
movs
pop
and
ret
sub
mul
xor
xor
xchg
pop
or
sub
ffree
jmp
retf
repz
popf
rcl
adc
push
push
cmp
push
mov
daa
mov
aas
dec
adc
inc
xchg
pop
mov
xor
and
outs
call
dec
in
aaa
inc
dec
push
(bad)
dec
sahf
pop
test
(bad)
(bad)
mov
lods
and
sbb
xchg
add
inc
add
data16
(bad)
dec
and
std
xchg
sbb
jno
and
xlat
mov
icebp
in
ins
push
xor
inc
mov
jl
icebp
push
gs
(bad)
call
jp
retf
adc
sbb
mov
sbb
scas
rcl
mov
(bad)
(bad)
(bad)
call
and
into
mov
push
int3
mov
xchg
or
ror
pop
mov
in
(bad)
dec
(bad)
mov
lock
xor
neg
arpl
dec
movs
rcl
loopne
jmp
clc
xor
fisttp
add
jns
fsub
xchg
fwait
mov
cmps
jp
adc
(bad)
jmp
into
inc
jae
data16
xchg
mov
jg
mov
push
dec
addr16
cmc
push
cmp
(bad)
(bad)
call
mov
push
mov
pushf
xor
in
out
mov
les
mov
ja
ins
lods
jp
pop
rcl
inc
clc
(bad)
ins
sbb
xchg
pop
fimul
dec
push
ja
xchg
cmps
stos
pop
jae
bound
mov
outs
jmp
(bad)
(bad)
dec
inc
inc
xchg
ror
and
adc
call
mov
mov
push
out
in
sub
(bad)
(bad)
(bad)
push
cmps
cmp
clc
bound
inc
(bad)
xor
pop
pop
xor
adc
test
mov
clc
(bad)
jmp
iret
jge
aaa
out
cmps
test
jmp
sbb
into
loopne
or
jmp
xlat
pop
pop
jg
lea
adc
sbb
fbld
fdivr
inc
mov
jmp
gs
pop
xor
(bad)
call
xchg
(bad)
mov
cld
(bad)
sub
retf
mov
scas
es
or
xchg
ret
call
add
and
cli
retf
outs
or
cwde
loope
pop
std
jno
ud0
scas
(bad)
mov
int3
sbb
dec
fwait
jns
lea
(bad)
clc
out
arpl
xchg
or
in
pop
out
fsubr
mov
aam
cmp
(bad)
(bad)
cmp
lds
stos
loope
je
cmps
lods
mov
cmc
pop
lock
sti
(bad)
jmp
in
ins
jno
xlat
or
into
mov
and
in
inc
dec
xor
mov
(bad)
jmp
inc
lods
dec
lods
stos
retf
rcl
das
stc
inc
shl
mov
pop
fadd
(bad)
dec
add
xor
rol
je
movs
adc
sar
(bad)
jg
xchg
cmp
sub
test
cmps
xor
bound
mov
inc
bound
inc
(bad)
cmc
out
xchg
dec
scas
pop
push
jae
mov
adc
(bad)
(bad)
(bad)
call
inc
xor
lock
ds
xor
sbb
loopne
icebp
xchg
popa
jecxz
xor
(bad)
call
test
push
or
js
jb
clc
sub
pop
mov
sbb
or
test
xchg
scas
das
xlat
pushf
or
hlt
inc
sbb
sbb
(bad)
jmp
ds
jp
hlt
pop
add
test
gs
sti
and
add
inc
mov
enter
cmp
push
test
(bad)
(bad)
(bad)
call
jbe
outs
cmp
pop
mov
and
retf
addr16
mov
arpl
aaa
shr
sub
mov
xchg
or
sub
sub
(bad)
(bad)
jg
or
mov
outs
inc
mov
retf
lahf
in
(bad)
pushf
dec
retf
in
adc
(bad)
call
or
xlat
jmp
fs
sahf
addr16
pop
cs
inc
pop
loope
xor
aam
xchg
cld
(bad)
(bad)
(bad)
push
pop
xchg
stos
aad
ret
mov
stos
repz
mov
mov
ret
jne
xchg
jg
(bad)
(bad)
push
or
pushf
mov
nop
jl
push
es
ins
push
mov
inc
mov
mov
(bad)
(bad)
dec
mov
cmc
push
mov
mov
test
out
dec
iret
mov
jbe
add
icebp
or
inc
fwait
push
add
mov
mov
(bad)
jmp
out
and
pop
call
inc
cld
or
pop
out
inc
dec
test
les
(bad)
push
call
dec
out
xor
arpl
nop
adc
inc
pop
fcmovne
mov
ss
(bad)
(bad)
jmp
call
mov
ret
shl
jg
inc
inc
into
lea
mov
or
jg
dec
das
enter
pop
and
push
leave
dec
inc
enter
(bad)
jns
into
or
push
xor
dec
inc
fwait
mov
push
lock
add
xchg
call
ret
ret
inc
repz
fistp
icebp
ja
mov
je
shl
(bad)
fild
and
int
xchg
pop
test
(bad)
mov
push
and
(bad)
(bad)
fisubr
xchg
cmp
pop
pop
mov
jle
loope
pop
xchg
(bad)
leave
add
out
sbb
mov
jmp
jmp
js
inc
pop
js
jae
jb
push
js
mov
(bad)
(bad)
(bad)
push
ins
dec
mov
int3
addr16
cmp
xchg
int3
fsubr
or
xchg
cli
cli
test
lock
call
into
push
cld
mov
sub
inc
fnsave
sbb
push
or
xor
(bad)
jmp
push
fwait
ins
xchg
jmp
dec
int3
cmp
add
ins
outs
ffree
xchg
dec
test
fsub
(bad)
mov
in
bound
jno
mov
in
pop
mov
sbb
icebp
adc
adc
jno
(bad)
out
cli
fld
lods
mov
ins
mov
(bad)
mov
dec
mov
jge
adc
mov
hlt
es
dec
in
rol
repz
es
inc
fcomip
(bad)
call
sub
pop
shl
movs
neg
mov
(bad)
call
adc
retf
leave
js
lods
sbb
jmp
ficom
test
(bad)
cmps
mov
fs
mov
(bad)
cmp
test
or
mov
inc
cmps
clc
sbb
daa
xor
lods
cmp
mov
cli
dec
mov
mov
push
imul
aaa
cld
(bad)
(bad)
aas
test
fwait
ja
loope
xchg
cmps
mov
adc
sub
push
push
xchg
cmp
(bad)
jns
outs
jle
add
icebp
xor
push
scas
push
or
(bad)
mov
sbb
or
or
sub
aas
xchg
loopne
mov
lds
xlat
ret
fcomip
pop
es
add
or
ds
jle
pop
cld
adc
call
hlt
ds
add
inc
cmp
mov
mov
stos
mov
(bad)
(bad)
jg
or
sub
imul
in
push
mov
movs
cld
rcl
mov
(bad)
(bad)
(bad)
aas
cmp
scas
lods
cmp
sahf
jecxz
xor
mov
pusha
cmp
jg
sahf
(bad)
movs
(bad)
(bad)
(bad)
push
mov
ja
mov
and
(bad)
mov
out
pop
dec
cmp
adc
adc
cmp
pop
(bad)
jmp
in
shl
(bad)
mov
cmp
xchg
push
(bad)
(bad)
(bad)
(bad)
out
cli
push
xchg
cmp
xchg
ret
dec
xor
adc
xchg
xor
and
(bad)
jmp
aam
gs
mov
add
xor
mov
adc
cmp
(bad)
(bad)
(bad)
fsubr
imul
sbb
dec
mov
xor
repz
jl
ja
add
in
dec
inc
dec
pop
jmp
(bad)
ins
mov
in
mov
jmp
(bad)
inc
pusha
add
sub
in
fdivr
mov
call
cli
fwait
(bad)
jp
movs
xor
outs
cmp
mov
inc
(bad)
mov
dec
and
lods
test
(bad)
in
push
push
int
rcr
pop
(bad)
(bad)
inc
loope
add
sub
aad
xchg
jmp
dec
nop
ud0
jmp
pop
out
xlat
dec
xor
dec
pop
jmp
fwait
xchg
mov
loop
in
sub
je
(bad)
(bad)
inc
retf
mov
xchg
add
cmc
mov
rcr
jle
ja
adc
test
inc
arpl
int
and
jno
sbb
fcomp
stc
fstp
mov
clc
mov
retf
clc
xchg
xchg
ficom
ja
repz
jno
inc
rol
or
and
sub
fild
add
sbb
adc
(bad)
call
xor
inc
(bad)
cmp
and
lea
pop
push
es
sub
ja
jp
push
add
out
and
inc
jmp
mov
(bad)
popa
lods
je
adc
push
sub
iret
push
sbb
(bad)
push
(bad)
(bad)
(bad)
jmp
inc
je
mov
mov
(bad)
into
icebp
mov
aad
push
std
xor
(bad)
jmp
or
mov
test
xor
pop
loopne
push
push
fucomp
mov
stos
lods
xchg
xchg
scas
lods
xor
or
je
movs
pop
icebp
inc
ins
add
jmp
inc
inc
lods
cs
xchg
or
arpl
daa
fwait
sahf
in
setl
inc
jbe
fadd
int
sub
cmp
sbb
loop
in
adc
adc
jg
(bad)
jmp
mov
hlt
adc
cmp
repnz
retf
push
jmp
lods
jne
lahf
push
jmp
mov
stos
je
push
sti
lock
fisttp
(bad)
jmp
pop
pushf
jmp
mov
pop
int3
into
sbb
or
mov
inc
repz
ja
loopne
(bad)
inc
pop
in
ret
dec
stc
outs
ror
retf
mov
jnp
push
scas
pop
inc
test
pop
mov
(bad)
call
sbb
jno
inc
sub
(bad)
mov
and
xor
arpl
ss
idiv
jmp
sbb
outs
mov
mov
mov
add
rcr
cwde
mov
mov
dec
stc
cdq
arpl
and
inc
pop
(bad)
(bad)
jg
cmps
ret
icebp
dec
mov
dec
xchg
xchg
nop
loop
xlat
jg
loopne
xchg
(bad)
call
repnz
add
in
cdq
pop
retf
out
and
clc
call
jnp
pop
(bad)
(bad)
dec
sar
pop
dec
and
mov
sbb
push
js
sub
jg
mov
cwde
lods
adc
vpsubsb
outs
clc
(bad)
(bad)
(bad)
(bad)
jmp
xchg
add
clc
xchg
stos
enter
dec
pop
ins
ins
jl
ds
shr
mov
inc
push
cmp
(bad)
(bad)
jmp
cmp
mov
test
xor
sbb
cwde
xchg
dec
cmp
sub
xchg
fmulp
mov
(bad)
call
fmul
in
(bad)
mov
pop
cld
(bad)
mov
adc
push
or
sbb
mov
jns
test
xchg
pusha
shr
dec
fwait
dec
cld
dec
sbb
imul
adc
test
sbb
(bad)
(bad)
mov
outs
inc
push
outs
pop
dec
mov
push
fcom
mov
imul
cmps
cwde
rol
mov
sbb
pop
and
(bad)
ss
(bad)
out
clc
ins
daa
jg
pop
dec
mov
mov
aaa
movs
les
push
cwde
push
cld
(bad)
jg
(bad)
pusha
or
xor
call
pop
aad
mov
lock
push
adc
(bad)
inc
sub
out
dec
dec
mov
mov
pop
jnp
out
icebp
and
or
imul
(bad)
(bad)
(bad)
jge
cmps
pop
push
leave
cmp
stos
add
jbe
jns
push
test
and
mov
(bad)
jmp
in
out
faddp
repnz
mov
imul
mov
loop
pop
or
mov
pop
or
loope
sbb
icebp
fbld
ins
(bad)
xor
mov
aad
(bad)
(bad)
call
sub
stc
mov
jo
mov
xor
popf
pop
or
adc
pop
cmps
mov
sub
dec
cmps
sar
xor
mov
imul
loop
fnstcw
(bad)
(bad)
(bad)
jmp
cli
and
xor
bound
ror
or
mov
fstp
ret
data16
sbb
mov
stos
push
xchg
sub
mov
lock
test
loopne
cs
mov
sub
(bad)
(bad)
(bad)
(bad)
jmp
adc
imul
jmp
dec
movs
fnclex
xor
or
cmp
mov
std
(bad)
dec
cmp
out
inc
mov
test
aad
in
xchg
movs
xor
(bad)
(bad)
(bad)
(bad)
cmp
stos
movs
test
xor
or
popa
add
dec
mov
frstor
test
clc
add
xor
lfs
mov
cwde
xchg
sub
(bad)
(bad)
jg
mov
and
les
mov
push
inc
and
mov
jns
daa
inc
out
xchg
aam
addr16
shl
mov
call
mov
pop
or
or
gs
(bad)
(bad)
jmp
jbe
jns
cmovb
leave
sub
xchg
mov
push
push
mov
cld
ds
mov
add
enter
into
sti
cmp
rcl
cmp
push
rcr
js
pop
mov
je
neg
stc
ds
sub
movs
mov
jns
mov
jbe
mov
mov
jmp
xchg
dec
repz
jg
sub
sbb
dec
mov
popf
pop
and
data16
(bad)
jmp
jns
mov
jb
inc
mov
pop
adc
mov
cmc
jo
cmps
adc
jecxz
xor
dec
jo
(bad)
jmp
daa
jb
xlat
fs
xor
je
(bad)
(bad)
(bad)
jmp
jo
cmps
(bad)
mov
xor
mov
or
call
sti
jmp
pop
mov
(bad)
sub
pop
mov
xchg
loopne
mov
inc
or
out
imul
dec
cli
xchg
mov
sub
je
push
jns
jae
jno
loope
inc
mov
or
cmps
add
cwde
inc
mov
call
js
xchg
jg
dec
adc
daa
and
xor
mov
adc
mov
and
sti
(bad)
push
and
xchg
push
mov
pop
fdivrp
(bad)
(bad)
dec
test
mov
xor
add
add
pop
lods
or
les
(bad)
(bad)
jmp
mov
mov
popa
test
jae
test
mov
mov
mov
inc
mov
int3
fwait
sbb
or
mov
scas
rcl
push
(bad)
(bad)
(bad)
(bad)
jp
out
test
jo
xlat
add
leave
dec
adc
int3
mov
cmc
icebp
es
(bad)
(bad)
(bad)
cli
ins
pop
jno
call
mov
outs
pop
jo
movs
inc
call
xchg
sub
outs
and
daa
inc
stc
outs
(bad)
(bad)
or
or
icebp
mov
and
xor
lock
inc
jmp
(bad)
cld
xor
jmp
(bad)
push
dec
or
int3
pop
aas
sbb
jo
xchg
popf
jecxz
mov
xchg
or
(bad)
(bad)
jmp
call
outs
push
dec
jo
adc
or
add
pop
ins
mov
(bad)
(bad)
out
clc
int
ins
pop
or
(bad)
push
loope
inc
loop
(bad)
icebp
ins
inc
xchg
jbe
push
(bad)
(bad)
(bad)
call
jecxz
add
pop
jge
adc
fild
sub
jl
pop
fsub
sub
(bad)
cmp
inc
movs
aas
in
inc
or
(bad)
mov
repnz
cmps
jo
pop
cmp
int3
cld
mov
lds
or
(bad)
imul
cmps
and
inc
dec
mov
ja
mov
sub
dec
into
push
mov
(bad)
(bad)
(bad)
dec
push
test
lods
jno
cmp
ret
dec
sti
jle
pop
dec
mov
push
xlat
jne
cld
mov
dec
cmp
lock
push
cmp
repz
mov
ins
(bad)
pop
mov
loope
rcl
cs
daa
cmp
push
xor
(bad)
data16
jle
test
or
imul
push
fdiv
mov
push
arpl
mov
in
sar
xchg
sar
jmp
xor
btr
jl
xchg
xchg
push
push
inc
dec
lds
(bad)
stc
or
jmp
and
push
es
jbe
add
mov
xchg
or
ror
(bad)
(bad)
(bad)
dec
scas
pop
adc
or
mov
mov
push
(bad)
ror
rol
(bad)
(bad)
(bad)
jge
sbb
aas
pop
xor
sbb
mov
loopne
test
(bad)
cmps
addr16
(bad)
into
out
iret
mov
inc
dec
jnp
push
adc
jmp
inc
jnp
pop
sbb
adc
ret
(bad)
add
in
leave
adc
fisubr
(bad)
call
shl
shr
lods
(bad)
cmps
repnz
mov
inc
xchg
fwait
ins
nop
pop
dec
ins
jp
movs
or
fsub
push
cld
(bad)
jbe
push
test
popf
neg
jecxz
jg
mov
xor
jmp
pop
jl
call
icebp
in
movs
outs
clc
sbb
dec
frstor
pusha
xchg
xchg
push
aad
(bad)
faddp
sbb
or
add
add
push
cli
dec
push
xchg
fs
sti
sub
cmps
add
loop
(bad)
jg
imul
dec
psubusb
call
jmp
or
(bad)
(bad)
jg
jp
or
sub
xor
addr16
add
sbb
push
mov
popf
outs
mov
or
cmp
popf
fsub
pop
jmp
fdivr
xchg
(bad)
(bad)
call
nop
add
(bad)
mov
imul
(bad)
mov
and
adc
loope
movs
fsubr
and
inc
jecxz
mov
cmp
dec
dec
xchg
ja
out
leave
jle
mov
sti
adc
dec
call
or
push
mov
(bad)
add
leave
jp
mov
loopne
loope
pop
fsub
xchg
sub
mov
fdivrp
adc
and
inc
les
mov
adc
idiv
in
rcl
or
retf
jmp
inc
mov
sbb
xor
fadd
hlt
in
adc
(bad)
call
movs
shr
xchg
mov
mov
repz
inc
pop
dec
xchg
jne
pusha
jmp
loope
test
jl
jmp
out
cmp
inc
out
inc
adc
push
pop
leave
ins
and
mov
rol
aad
cmp
adc
(bad)
(bad)
(bad)
(bad)
jmp
cmps
pop
xor
test
(bad)
cmps
arpl
and
icebp
sbb
fwait
cmp
or
xchg
or
dec
sub
push
xchg
and
inc
ret
ins
or
in
jo
pop
(bad)
(bad)
(bad)
dec
and
mov
cmp
mov
mov
sub
aas
xchg
dec
jns
or
(bad)
arpl
pop
outs
xor
pushf
xchg
add
xor
xor
ret
js
mov
stc
mov
leave
dec
lahf
movs
add
shl
cmp
xchg
push
(bad)
jmp
sbb
js
xor
cld
jne
xchg
xlat
in
or
jo
(bad)
call
pop
(bad)
int3
int
repnz
sbb
inc
mov
cmp
pop
jl
std
dec
or
push
(bad)
arpl
jg
mov
loope
or
outs
outs
push
push
dec
xor
push
mov
sar
or
mov
es
xchg
mov
pop
call
sbb
loope
adc
test
(bad)
dec
add
out
pop
shl
jl
data16
fwait
xchg
dec
push
leave
test
mov
test
inc
jmp
xchg
popa
cmp
(bad)
clc
inc
cmp
out
(bad)
inc
inc
sbb
enter
push
cmp
out
idiv
iret
stos
(bad)
(bad)
(bad)
jmp
cmp
cmp
sub
clc
pop
test
shl
mov
and
xor
adc
(bad)
in
mov
cli
(bad)
and
and
in
xor
(bad)
(bad)
mov
cmp
sti
adc
ror
sahf
cmp
mov
nop
cmp
jle
(bad)
(bad)
call
lahf
cmc
cmp
loope
xor
imul
loope
loopne
sub
outs
ret
add
(bad)
call
or
mov
loopne
pop
jle
jle
(bad)
das
mov
cmp
ins
xchg
neg
outs
inc
pop
fs
jae
pop
mov
fsubr
clc
(bad)
(bad)
jmp
push
fdivr
in
scas
mov
sbb
out
lds
loope
inc
loopne
sub
sub
test
mov
xchg
inc
pushf
mov
(bad)
int3
dec
jecxz
jecxz
xchg
cli
cmc
jle
jo
xchg
cmp
call
ret
or
pop
mov
dec
fldz
inc
hlt
jns
cs
jl
and
lods
(bad)
(bad)
aas
mov
rep
push
and
leave
fstp
add
push
xor
(bad)
jmp
push
push
into
lds
rcr
jnp
xchg
add
icebp
sbb
sbb
(bad)
mov
(bad)
(bad)
jnp
jbe
push
stc
es
dec
iret
mov
adc
lock
sub
xor
xor
ret
adc
add
retf
out
mov
dec
add
loop
push
mov
int3
(bad)
call
sti
cdq
into
int3
sbb
push
adc
mov
(bad)
(bad)
inc
add
push
out
scas
dec
sbb
and
and
sar
sub
retf
xchg
inc
(bad)
(bad)
(bad)
dec
add
sbb
add
cmp
xchg
(bad)
repnz
xchg
jmp
xor
sub
pusha
ret
in
jmp
and
mov
repz
cs
sub
cmp
aam
and
popf
ins
jo
xchg
add
mov
lea
mov
(bad)
(bad)
dec
sbb
test
sub
sbb
stos
in
push
arpl
(bad)
mov
or
xor
ins
or
cmp
sahf
iret
jle
sub
xor
out
not
(bad)
(bad)
(bad)
mov
dec
inc
out
repz
test
cmp
pop
xlat
sub
inc
gs
pop
jg
inc
std
pop
das
ins
fidiv
mov
fsub
pop
dec
leave
jecxz
(bad)
loop
mov
push
inc
ds
inc
pop
push
sar
sub
dec
mov
mov
xor
mov
mov
cmp
xor
and
arpl
inc
cmp
xor
js
pop
loop
fdiv
jl
fdivr
inc
lods
in
pop
jecxz
ss
popa
lea
jmp
push
push
jae
dec
mov
test
push
data16
mov
mov
and
pop
aas
dec
or
(bad)
(bad)
pop
das
out
mov
sbb
pop
pushf
stc
mov
push
sub
imul
fcom
(bad)
sar
call
cli
iret
nop
sub
jmp
sbb
adc
repz
das
nop
cmc
mov
popf
xchg
out
loope
or
(bad)
mov
xor
(bad)
jg
in
dec
jecxz
push
in
(bad)
shl
jae
into
mov
add
jmp
and
shr
ret
pop
ds
in
jbe
loopne
dec
mov
sub
repnz
dec
jecxz
xor
clc
adc
(bad)
call
hlt
dec
fadd
mul
scas
(bad)
push
pusha
mov
jb
jp
push
cmps
inc
pop
or
(bad)
(bad)
(bad)
(bad)
js
in
adc
test
test
rcr
cdq
mov
pop
mov
stos
xchg
mov
(bad)
(bad)
(bad)
in
outs
stos
jb
mov
retf
mov
dec
sbb
test
les
fs
(bad)
(bad)
(bad)
(bad)
cmp
sbb
adc
push
(bad)
mov
loop
cmp
xlat
jbe
jle
(bad)
(bad)
(bad)
jmp
mov
add
cmps
ins
or
das
ja
retf
call
test
test
push
xor
loope
lock
pop
mov
and
fiadd
xor
data16
lds
sbb
sub
add
xchg
sbb
(bad)
out
cli
or
mov
mov
in
stos
ror
inc
data16
(bad)
(bad)
mov
retf
stos
int3
or
sub
inc
cld
dec
jle
or
push
(bad)
inc
test
jle
mov
push
push
(bad)
lea
std
adc
xchg
(bad)
(bad)
(bad)
dec
push
push
jmp
or
add
push
xchg
repz
mov
push
sub
jmp
cmps
mov
(bad)
jmp
je
jbe
mov
les
stos
pop
sbb
stc
or
cmp
lock
inc
(bad)
(bad)
(bad)
push
sbb
push
sahf
sub
movs
std
mov
stc
cdq
mov
hlt
xor
mov
lods
(bad)
(bad)
(bad)
mov
fimul
inc
lds
pop
inc
mov
mov
ins
icebp
cmp
stos
sub
es
mov
adc
inc
shr
stos
cmp
add
in
call
mov
mov
mov
mov
hlt
dec
mov
and
mov
je
mov
popf
jge
pop
loopne
jmp
cli
inc
push
pusha
mov
push
mov
(bad)
mov
xlat
push
and
mov
cmp
fild
and
cld
stc
into
mov
sti
pop
or
das
sub
sbb
aad
into
or
test
pop
lods
adc
shl
and
inc
stc
mov
push
sub
xor
pop
and
or
pop
and
stc
or
fwait
add
(bad)
inc
dec
jmp
repnz
sub
cmp
sbb
push
and
(bad)
(bad)
(bad)
dec
sahf
pop
mov
ins
in
(bad)
cmp
cmp
inc
adc
call
add
(bad)
(bad)
(bad)
(bad)
jmp
cmps
jmp
push
mov
pop
pop
in
addr16
or
xchg
fwait
out
(bad)
(bad)
dec
xchg
xor
push
test
lods
vhsubps
daa
push
mov
push
arpl
sub
xlat
jmp
ror
push
sub
push
test
push
cmp
mov
(bad)
(bad)
(bad)
jg
push
pop
sub
jge
mov
or
aad
or
add
test
mov
(bad)
(bad)
(bad)
call
in
test
pop
stos
in
push
std
aam
mov
push
dec
ins
mov
push
and
enter
(bad)
(bad)
call
cmp
mov
mov
mov
xchg
xor
or
dec
nop
outs
cli
cmp
jae
leave
loopne
or
pop
sub
mov
ds
push
scas
dec
movs
mov
dec
jns
fisubr
pop
or
enter
lods
loope
(bad)
(bad)
(bad)
call
repz
lea
mov
or
push
and
xlat
pop
cwde
xor
cld
mov
rcl
jns
call
loope
or
(bad)
imul
xchg
call
mov
xlat
test
call
int
dec
sbb
dec
or
and
(bad)
call
outs
adc
push
pusha
and
lods
mov
mov
test
(bad)
(bad)
mov
push
pop
pop
stos
pushf
into
mov
sbb
xchg
mov
pop
loopne
inc
in
xlat
(bad)
jg
call
inc
mov
dec
movs
jmp
ret
push
loope
adc
xchg
test
fcom
or
loope
mov
popf
shl
movs
into
push
lahf
push
mov
inc
hlt
inc
scas
dec
or
(bad)
aam
(bad)
(bad)
(bad)
fcomip
mov
lahf
jo
in
xor
repnz
in
ds
jns
adc
(bad)
(bad)
jmp
popf
sbb
adc
scas
in
scas
aad
sub
or
ret
push
arpl
push
jmp
cdq
data16
or
push
into
sub
mov
dec
nop
xchg
repnz
ss
cmp
(bad)
(bad)
ds
jnp
cmp
fsubr
and
and
retf
nop
dec
addr16
add
icebp
cmp
(bad)
(bad)
push
cwde
adc
dec
arpl
pop
push
mov
jae
data16
jmp
cmp
adc
stc
push
and
pop
mov
push
and
cmp
and
push
test
xor
xchg
lds
mov
mov
(bad)
mov
jmp
inc
xor
es
jmp
aam
cs
xchg
ret
daa
inc
icebp
dec
inc
nop
(bad)
cwde
jecxz
jo
push
mov
fwait
(bad)
call
es
xchg
lods
add
cmp
pop
cli
xchg
push
in
cli
icebp
aaa
adc
repz
mov
push
in
mov
and
(bad)
(bad)
fld
and
shl
inc
mov
shr
movs
or
mov
(bad)
(bad)
jmp
cmp
add
jle
out
frstor
jns
ret
scas
fidivr
jmp
aad
int3
(bad)
(bad)
(bad)
(bad)
fidiv
vmread
xchg
adc
inc
push
je
and
adc
jl
jecxz
scas
cwde
ret
dec
(bad)
(bad)
out
xor
aad
cmps
fs
sbb
cld
(bad)
mov
xchg
jmp
sub
pop
cmp
mov
scas
xchg
pushf
mov
int3
inc
pop
clc
outs
cmp
call
push
push
xchg
(bad)
call
in
mov
xchg
mov
pushf
adc
lahf
mov
cmp
pop
cwde
pop
repnz
xchg
or
push
js
stc
outs
xor
call
mov
add
and
aad
leave
inc
in
(bad)
dec
shl
dec
hlt
sbb
sub
push
icebp
(bad)
jmp
gs
xchg
in
adc
sub
sub
je
mov
(bad)
call
push
sbb
into
push
pop
mov
inc
dec
sahf
fidiv
ja
mov
sbb
push
sti
hlt
pop
(bad)
call
inc
out
sbb
sub
jo
jmp
jmp
adc
push
add
sub
add
call
in
test
xor
(bad)
cmp
pusha
(bad)
into
iret
cmp
xchg
shl
sub
stos
sti
sti
shr
dec
xlat
(bad)
(bad)
(bad)
inc
pop
jp
or
pop
popf
(bad)
cs
inc
jg
pusha
ins
cmp
jp
pop
jmp
or
sub
(bad)
(bad)
(bad)
jmp
in
(bad)
test
fndisi(8087
push
shl
addr16
cmc
ret
sbb
int3
or
add
sti
dec
xor
lods
mov
cmp
dec
add
jo
iret
mov
(bad)
ret
xchg
(bad)
(bad)
inc
or
jmp
lea
push
dec
push
mov
and
(bad)
(bad)
push
repnz
mov
or
dec
lea
mov
dec
clc
xchg
ins
fistp
es
jmp
xor
(bad)
(bad)
mov
cmp
imul
cld
popa
test
in
mov
cmp
mov
inc
or
xchg
aaa
popf
(bad)
xchg
pop
adc
shl
and
dec
(bad)
(bad)
jg
xlat
std
pop
imul
fisttp
cmc
pop
sbb
mov
movs
mov
lock
cmc
(bad)
fcomip
(bad)
in
retf
xchg
hlt
and
test
or
sti
add
sbb
in
jge
(bad)
jmp
sub
mov
out
inc
dec
cmps
sub
pop
mov
ja
xchg
test
lods
mov
sti
scas
mov
mov
(bad)
(bad)
(bad)
jmp
test
push
retf
stos
fwait
retf
mov
es
cs
in
sahf
mov
in
repz
(bad)
(bad)
jmp
mov
outs
jo
jge
pop
push
out
call
push
xchg
add
inc
retf
loopne
push
push
ds
(bad)
(bad)
(bad)
aas
jbe
sbb
push
sbb
jno
xchg
std
cmp
or
jmp
mov
push
(bad)
(bad)
call
sbb
sub
(bad)
fdiv
std
sbb
inc
adc
(bad)
(bad)
mov
mov
int3
and
addr16
ss
icebp
add
dec
movs
(bad)
mov
jmp
sbb
dec
push
scas
mov
movs
not
imul
sbb
fdivr
(bad)
jmp
adc
add
push
gs
fbstp
cmp
sbb
adc
arpl
mov
outs
xchg
cli
call
pop
lods
cmp
inc
and
or
(bad)
call
mov
cmps
dec
imul
or
sbb
jne
cld
sbb
sahf
es
jae
pop
add
shl
mov
movs
inc
push
(bad)
(bad)
(bad)
(bad)
mov
in
cmps
or
repnz
mov
add
and
inc
adc
(bad)
(bad)
(bad)
push
push
mov
test
dec
movs
nop
inc
add
test
out
xor
(bad)
(bad)
jmp
add
jae
imul
jnp
push
out
call
out
dec
sar
ja
cs
push
movs
or
into
dec
jg
std
jno
ss
xchg
(bad)
(bad)
jmp
stc
shr
(bad)
and
mov
jo
nop
mov
in
popa
test
sar
(bad)
(bad)
jmp
repnz
cmp
jbe
in
fmul
lods
jnp
cmp
movs
jp
in
js
test
push
(bad)
(bad)
(bad)
push
sbb
aas
outs
shr
aas
(bad)
xchg
in
lods
xlat
mov
ret
cmps
pop
out
repnz
jge
pop
pusha
mov
push
mov
mov
(bad)
(bad)
call
pushf
ror
data16
(bad)
mov
jmp
push
sub
(bad)
mov
jmp
adc
jmp
aas
sbb
in
rol
sar
stos
adc
adc
mov
iret
ret
sbb
or
push
(bad)
dec
add
lods
or
pop
stos
inc
mov
icebp
mov
fsub
ins
jp
add
and
mov
(bad)
(bad)
(bad)
inc
les
mov
mov
rcr
inc
cld
clc
cmp
adc
(bad)
mov
sbb
dec
(bad)
(bad)
push
and
cdq
sbb
cli
(bad)
lds
(bad)
(bad)
jmp
lock
jb
push
jnp
rol
xchg
stos
push
xchg
call
in
loope
call
dec
jg
scas
mov
push
add
(bad)
(bad)
(bad)
jmp
out
or
imul
jae
mov
(bad)
jle
adc
aaa
loope
dec
loopne
(bad)
(bad)
call
jge
cs
sub
jge
sub
dec
test
into
fdivr
and
cld
(bad)
(bad)
call
or
aam
nop
stc
and
jns
mov
rcl
(bad)
fiadd
pop
pushf
cwde
call
(bad)
push
add
call
jecxz
(bad)
(bad)
(bad)
mov
xchg
clc
adc
rcl
scas
gs
cmp
or
ret
fidiv
retf
jmp
(bad)
jmp
cmp
pop
jp
or
jp
mov
enter
scas
(bad)
(bad)
call
dec
fisttp
into
mov
push
icebp
imul
mov
sub
pushf
cmp
adc
fcomip
in
in
div
ss
ret
dec
rcr
int
in
(bad)
jg
mov
and
(bad)
cmp
aas
pop
mov
inc
push
dec
(bad)
(bad)
(bad)
in
mov
push
jno
cmp
movzx
pop
cmp
adc
xchg
xchg
test
(bad)
(bad)
(bad)
call
or
scas
or
or
xor
xchg
es
push
mov
aad
(bad)
(bad)
(bad)
call
mov
lods
xchg
jmp
add
sbb
inc
inc
retf
mov
out
mov
cs
dec
cs
sti
inc
sub
or
(bad)
scas
mov
(bad)
cli
(bad)
je
push
mov
shr
(bad)
(bad)
(bad)
dec
mov
dec
sti
mov
mov
cmp
mov
xor
xor
cli
mov
inc
inc
add
adc
repnz
or
pop
xchg
(bad)
jg
lock
mov
xor
jp
into
fiadd
adc
ret
(bad)
(bad)
(bad)
dec
movs
ds
sub
sub
inc
(bad)
add
test
repz
shr
add
cli
(bad)
(bad)
push
pop
cmp
mov
jbe
sub
push
sub
cwde
sti
or
das
ss
ret
test
sbb
adc
or
cld
(bad)
(bad)
push
scas
xchg
jo
adc
stc
dec
pop
and
push
sub
cmp
(bad)
jmp
jns
(bad)
pop
test
mov
mov
xchg
sbb
xchg
adc
or
outs
cli
mov
push
xchg
push
xor
mov
jns
(bad)
fild
jg
inc
or
cmp
das
rcl
xor
inc
mov
(bad)
(bad)
(bad)
dec
jg
dec
lock
xchg
test
sub
fisttp
add
xchg
push
dec
and
cli
(bad)
call
fidivr
shr
iret
movs
arpl
push
inc
jne
mov
shl
call
push
movs
inc
lds
pop
test
mov
fsub
adc
aas
vmulss
clc
(bad)
(bad)
(bad)
cmp
pop
sub
rol
sub
rcl
cs
fist
jb
mov
(bad)
jmp
sbb
push
shr
jle
ins
pop
out
mov
(bad)
(bad)
fcomip
out
inc
arpl
xchg
ror
stc
or
and
fwait
out
sub
(bad)
(bad)
(bad)
inc
mov
arpl
cmps
popf
(bad)
jmp
sub
xlat
cmp
mov
nop
mov
rol
pop
movs
dec
dec
xor
iret
jb
cdq
mov
call
mov
xorps
scas
jp
mov
inc
dec
jno
mov
ins
imul
sub
ret
out
mov
or
mov
and
retf
or
pop
and
sub
(bad)
(bad)
(bad)
jmp
push
sub
jnp
ret
test
lods
jb
sub
(bad)
mov
ja
cmp
call
in
mov
shl
(bad)
and
mov
jne
mov
(bad)
call
cli
cmp
(bad)
push
leave
loop
push
pop
mov
adc
xor
aad
rcr
sub
mov
inc
aaa
fmul
adc
and
(bad)
cmp
ret
test
or
mov
ror
mov
cmp
call
push
std
mov
std
jle
ins
aad
mov
(bad)
push
stos
dec
(bad)
icebp
pop
add
or
les
mov
(bad)
and
dec
adc
test
pop
cmc
jmp
repz
into
les
and
leave
mov
mov
lods
push
push
mov
ins
and
pop
push
scas
xchg
lock
adc
(bad)
js
int
aad
pop
mov
cs
xchg
push
add
in
inc
jmp
jmp
loope
lods
mov
jecxz
mov
pop
jl
adc
add
cmp
(bad)
(bad)
(bad)
dec
lahf
retf
dec
adc
mov
je
sbb
mov
mov
inc
out
fisttp
jns
xchg
mov
xor
jmp
stos
js
lahf
jl
jmp
cmp
(bad)
jmp
or
mov
les
sub
mov
fcomp
inc
dec
ins
inc
cmp
push
hlt
stos
mov
ins
fst
inc
sbb
pop
lods
out
inc
clc
jmp
dec
push
and
adc
addr16
jo
mov
call
dec
std
fisubr
ins
sub
aaa
jb
movs
pop
and
(bad)
(bad)
call
and
outs
stos
in
or
popa
or
mov
push
(bad)
(bad)
(bad)
ds
mov
push
mov
movs
jg
xchg
and
or
push
mov
and
jg
jmp
inc
div
sbb
retf
xor
sbb
stc
rcr
jne
(bad)
fidivr
outs
and
cmp
stc
movs
xchg
sysexit
ret
or
push
popf
pusha
push
imul
adc
loopne
jae
je
clc
inc
add
pop
enter
int
(bad)
jg
(bad)
jp
fsub
add
mov
cld
mov
xchg
call
test
arpl
stos
sahf
jmp
xchg
add
(bad)
(bad)
(bad)
jl
mov
ret
jp
jmp
or
sbb
lahf
jge
xchg
icebp
and
and
(bad)
jmp
mov
adc
add
not
mov
xchg
mov
(bad)
call
scas
push
sbb
out
movs
pop
add
(bad)
jno
movs
sbb
fsub
pop
data16
mov
ss
mov
scas
xor
cli
xor
call
add
or
aaa
or
mov
cld
jmp
aas
leave
add
pushf
imul
add
adc
(bad)
(bad)
(bad)
inc
adc
call
jge
xor
outs
mov
xor
(bad)
scas
(bad)
sbb
(bad)
jg
mov
mov
jno
or
je
stos
jae
push
cmc
shl
std
test
(bad)
clc
mov
cmp
mov
xchg
sbb
mov
aas
adc
(bad)
(bad)
(bad)
rcr
push
repnz
rcl
out
inc
inc
js
and
pop
xchg
mov
mov
iret
in
add
pop
icebp
lods
shl
loope
retf
or
es
in
mov
pusha
(bad)
(bad)
(bad)
call
and
mov
pop
test
in
jae
fld
stc
popa
dec
mov
cld
pop
sti
nop
dec
cmp
inc
cs
dec
mov
mov
adc
repz
aam
jmp
dec
jmp
pop
shl
daa
scas
add
mov
and
pop
(bad)
(bad)
(bad)
(bad)
(bad)
ds
cmp
ins
inc
push
repnz
call
pop
(bad)
adc
je
and
and
pop
icebp
cmp
sub
mov
cmp
dec
cdq
xchg
daa
xchg
jp
jb
loopne
icebp
(bad)
(bad)
jmp
cmps
fiadd
jecxz
jp
out
push
sti
test
cmp
mov
loop
sub
cld
rcr
jg
nop
jmp
or
das
jg
call
inc
mov
addr16
mov
(bad)
(bad)
(bad)
inc
inc
jmp
xor
outs
inc
mov
mov
aas
and
xchg
pop
jo
fistp
mov
mov
jo
(bad)
cmc
hlt
and
xor
dec
jnp
(bad)
(bad)
mov
mov
jp
fcmovne
cs
pop
dec
(bad)
in
shl
call
cli
(bad)
dec
sahf
test
xchg
popa
ret
sbb
out
add
push
popf
fbld
(bad)
(bad)
(bad)
(bad)
stc
cdq
push
pop
inc
or
mov
outs
imul
cs
das
imul
mov
(bad)
(bad)
(bad)
mov
mov
ja
push
(bad)
mov
aad
cs
jbe
(bad)
test
pushf
(bad)
push
or
sub
cmp
mov
and
inc
test
sti
inc
sub
and
movlhps
push
adc
(bad)
(bad)
adc
call
retf
movs
data16
into
mov
or
sbb
xchg
xor
stos
adc
pop
cmp
jbe
scas
(bad)
(bad)
(bad)
mov
pop
pushf
stos
cmp
xchg
adc
cmps
loopne
mov
test
xchg
xor
fwait
in
int
call
xor
clc
(bad)
icebp
adc
loopne
cmps
jmp
ja
lahf
call
and
jge
clc
xchg
out
xchg
push
mov
(bad)
(bad)
(bad)
call
imul
xor
jno
in
inc
aas
imul
pop
(bad)
(bad)
(bad)
call
test
sbb
stos
push
mov
pop
dec
clc
in
xchg
inc
pop
scas
mov
inc
add
dec
mov
retf
cmps
scas
movs
fist
mov
and
nop
out
mov
mov
(bad)
stos
popa
sbb
inc
mov
(bad)
mov
inc
push
cmp
mov
jb
neg
pop
in
sub
dec
enter
fdiv
(bad)
fcom
outs
in
div
(bad)
sub
(bad)
jmp
mov
inc
xlat
push
xor
and
or
pop
(bad)
inc
inc
dec
test
stos
dec
xchg
(bad)
int3
(bad)
(bad)
(bad)
(bad)
(bad)
push
lds
mov
adc
loop
inc
bound
hlt
mov
mov
(bad)
(bad)
call
push
add
(bad)
pop
pop
and
in
jmp
es
pop
adc
cwde
call
push
iret
dec
dec
retf
xchg
fnsave
or
leave
mov
fisubr
loop
inc
add
data16
xchg
mov
pop
es
(bad)
(bad)
(bad)
fbld
test
mov
xchg
fstp
xchg
cmp
xor
xlat
(bad)
(bad)
(bad)
(bad)
mov
aaa
retf
out
data16
adc
test
and
pop
adc
mov
(bad)
(bad)
(bad)
push
push
jbe
pushf
push
sub
cld
jnp
push
fcomp
push
retf
aas
mov
je
and
dec
add
scas
outs
cli
fucom
adc
clc
jp
fmul
jmp
lods
push
push
neg
bound
xchg
dec
pop
lods
xchg
lahf
stos
in
movs
cmp
and
jecxz
(bad)
inc
ss
sti
xchg
clc
lods
pop
mov
aam
fs
fimul
(bad)
(bad)
jmp
push
push
mov
jle
fisub
aas
push
dec
mov
(bad)
sahf
test
add
(bad)
cmp
shl
gs
ds
(bad)
call
pop
mov
loop
popa
pop
fcmovu
mov
call
mov
call
inc
into
push
mov
xchg
adc
dec
jp
and
push
(bad)
or
and
movs
pop
mov
(bad)
push
fisub
jne
inc
sar
scas
gs
lahf
mov
ror
(bad)
(bad)
(bad)
fild
jle
xor
push
repnz
xchg
shl
sahf
jmp
frstor
xchg
cmp
mov
or
mov
(bad)
jg
call
ss
int3
cli
lahf
inc
adc
cli
pushf
inc
add
cmp
mov
repnz
(bad)
(bad)
out
cmp
adc
jb
xor
lock
jle
or
pop
inc
push
inc
sbb
cs
pusha
(bad)
(bad)
(bad)
jmp
or
idiv
(bad)
jg
jecxz
(bad)
push
push
and
in
pop
rcr
jmp
mov
(bad)
(bad)
(bad)
dec
xor
data16
repz
push
sbb
not
mov
retf
jge
sub
mov
(bad)
(bad)
inc
and
movs
jp
pop
ja
fwait
cli
mov
sbb
dec
inc
scas
mov
jbe
(bad)
(bad)
(bad)
dec
inc
dec
(bad)
or
std
rcr
xchg
stos
mov
cmps
or
nop
xchg
popf
cmp
xor
fld
(bad)
(bad)
dec
inc
aam
inc
adc
lds
sbb
aaa
inc
inc
arpl
(bad)
(bad)
(bad)
cdq
fsub
fcmovnbe
(bad)
fsubr
pop
clc
mov
push
jmp
out
jmp
(bad)
aas
inc
jmp
xchg
mov
bound
das
push
cs
add
cmp
call
popf
add
fst
out
push
(bad)
jo
aam
call
pushf
cmp
(bad)
(bad)
dec
push
and
adc
jnp
or
push
leave
sbb
add
inc
(bad)
(bad)
(bad)
dec
hlt
ss
ins
cmp
pop
lods
mov
sub
fadd
ins
add
sahf
in
sbb
jmp
dec
dec
in
pusha
dec
jmp
hlt
sbb
and
or
mov
xchg
(bad)
(bad)
push
dec
jnp
push
pop
or
mov
mov
ss
xor
fxch
mov
mov
pop
fnstenv
cmps
lock
(bad)
je
stc
jae
js
xchg
test
scas
cmps
cmp
adc
int3
dec
jmp
dec
add
xchg
popa
bnd
sub
aad
dec
(bad)
(bad)
(bad)
inc
inc
das
imul
ja
mov
ss
outs
xchg
pop
inc
int3
jp
outs
test
lahf
(bad)
push
pop
mov
mov
xchg
or
mov
fwait
xchg
(bad)
mov
push
(bad)
dec
ds
xchg
cmp
retf
loopne
sar
jp
movs
(bad)
(bad)
mov
leave
sti
mov
rol
stc
je
pop
pushf
jmp
(bad)
mov
mov
rol
xchg
clc
mov
test
xor
(bad)
jg
sti
lods
mov
push
movs
fiadd
push
cmp
mov
fistp
daa
mov
sbb
out
push
and
dec
(bad)
inc
icebp
cld
inc
fs
arpl
(bad)
cmp
stos
data16
test
add
(bad)
(bad)
jmp
dec
ins
outs
cmp
(bad)
pop
aad
aas
(bad)
mov
test
(bad)
aam
out
push
mov
jmp
sub
cmp
pop
sar
pop
mov
(bad)
(bad)
mov
xchg
jg
fcmovb
mov
dec
shl
adc
fsubr
pop
adc
xchg
imul
or
mov
cmp
adc
jg
call
(bad)
push
(bad)
shr
jno
or
mov
icebp
sbb
cld
loop
adc
popf
cmp
mov
mov
aaa
or
(bad)
(bad)
dec
or
cmp
loope
cmps
mov
adc
cmp
push
out
sbb
gs
sbb
and
jp
cmc
sbb
dec
rol
(bad)
(bad)
(bad)
dec
cmp
ss
jae
in
sbb
jae
xor
lds
ror
cmp
or
(bad)
(bad)
(bad)
jmp
retf
cmp
div
sub
call
mov
adc
mov
sti
xor
xor
fidivr
(bad)
(bad)
push
pop
lods
xchg
or
push
mov
add
or
or
jnp
fdiv
into
mov
(bad)
(bad)
(bad)
dec
test
mov
push
fstp
pop
sahf
cmp
xchg
ret
retf
push
int3
jbe
sbb
(bad)
dec
pop
sub
sti
push
jns
pop
scas
aas
stos
(bad)
jp
(bad)
(bad)
(bad)
call
or
jbe
adc
mov
adc
mov
mov
movs
or
lock
test
inc
das
push
mov
(bad)
dec
lods
cmps
xchg
scas
xlat
stc
push
xchg
lahf
jle
adc
pop
add
sub
xor
jg
shl
(bad)
jmp
or
pop
push
imul
scas
dec
arpl
int
inc
(bad)
(bad)
(bad)
jmp
and
call
imul
test
js
push
lods
icebp
inc
push
cmps
dec
or
std
(bad)
jmp
rol
in
and
test
and
dec
sbb
std
mov
call
jbe
pusha
mov
test
lods
pop
cmp
ja
sbb
(bad)
jmp
(bad)
(bad)
jmp
pop
push
(bad)
loopne
test
clc
and
fnstenv
mov
inc
mov
(bad)
in
and
mov
mov
movs
es
ins
loope
push
jg
fbld
push
dec
mov
dec
test
xor
cmp
dec
add
mov
loopne
push
out
jbe
(bad)
(bad)
(bad)
push
test
cmp
sbb
mov
dec
push
adc
jb
repz
sbb
(bad)
(bad)
push
push
(bad)
xchg
(bad)
lahf
push
push
dec
in
neg
mov
cmp
add
add
(bad)
inc
add
push
and
mov
out
sub
(bad)
scas
mov
dec
jns
cmps
mov
fs
add
adc
cmp
inc
jg
out
xchg
jnp
aaa
mov
dec
cmps
mov
test
xchg
cmps
jl
lock
(bad)
(bad)
(bad)
cli
cmps
cmps
ss
mov
mov
aaa
lods
(bad)
sub
(bad)
jle
push
jecxz
cmp
mov
leave
(bad)
(bad)
(bad)
call
lds
fimul
not
and
rol
call
sub
rcl
repnz
inc
outs
sbb
bound
out
(bad)
(bad)
(bad)
(bad)
(bad)
stc
inc
push
(bad)
sub
cmps
aas
sub
bound
ja
xchg
jnp
shr
(bad)
dec
aad
pop
xchg
xor
add
lock
jg
pop
and
retw
xor
(bad)
jg
ins
pushf
jb
xor
cmp
jne
(bad)
push
add
test
jb
push
mov
std
(bad)
(bad)
(bad)
jmp
retf
push
aam
xchg
rcl
jne
xor
jge
leave
(bad)
(bad)
dec
mov
enter
lods
mov
dec
adc
sti
jo
fistp
(bad)
jb
mov
(bad)
push
fcompp
mov
gs
fwait
mov
imul
lods
add
(bad)
(bad)
(bad)
call
jmp
mov
scas
out
outs
imul
(bad)
icebp
leave
and
clc
icebp
(bad)
(bad)
(bad)
(bad)
jmp
dec
xor
jns
js
ret
stos
sbb
xchg
or
(bad)
(bad)
push
fidivr
sbb
cmp
sbb
mov
mov
arpl
xor
jmp
pop
mov
jmp
ins
jbe
(bad)
push
(bad)
push
in
mov
xor
int
call
jo
push
test
or
mov
mov
fsubr
or
(bad)
loop
pop
retf
push
sub
std
(bad)
dec
mov
imul
int
scas
lods
push
movs
(bad)
jg
fwait
lock
jp
sbb
pop
or
test
sbb
pusha
push
pop
or
cmp
dec
clc
or
retf
imul
(bad)
call
iret
call
loopne
imul
pop
mov
pop
arpl
xchg
mov
adc
scas
clc
(bad)
cmp
mov
(bad)
dec
nop
(bad)
(bad)
mov
into
adc
xor
pop
pop
(bad)
(bad)
(bad)
push
test
sbb
cmc
ja
psubw
adc
cli
aam
adc
scas
pop
sub
dec
cmp
pop
add
fnstcw
mov
sbb
xchg
push
(bad)
(bad)
call
call
add
push
es
push
sub
aaa
std
pop
movs
lds
ror
dec
pop
add
xor
lock
(bad)
jmp
loopne
xchg
imul
sbb
aas
or
pop
push
(bad)
pop
jno
(bad)
icebp
(bad)
(bad)
fist
pop
xor
mov
in
xor
mov
call
pop
in
in
jecxz
jle
dec
dec
es
lahf
jo
inc
add
mov
or
sbb
inc
std
xchg
xchg
xlat
push
sbb
int3
sub
mov
js
cmp
cld
(bad)
(bad)
jmp
xor
or
add
pop
mov
push
sub
std
and
mov
test
jge
and
jae
fcmovu
sar
test
clc
in
xchg
ror
push
rol
or
(bad)
jmp
ins
mov
sub
repnz
(bad)
inc
add
dec
jg
retf
mov
call
leave
loop
mov
fwait
mov
lock
(bad)
(bad)
(bad)
(bad)
call
pushf
mov
shl
out
push
cmp
xor
mov
in
test
push
mov
jp
icebp
or
jmp
out
sbb
mov
jns
mov
mov
and
mov
fnstcw
fwait
lds
sahf
jg
(bad)
fcomip
cmp
cs
js
ret
mov
clc
lods
call
push
movs
pop
pop
sbb
(bad)
(bad)
(bad)
std
out
xchg
test
retf
inc
cli
movs
xor
mov
mov
dec
xor
call
mov
sub
jo
sbb
scas
push
adc
jg
(bad)
push
fistp
mov
cli
test
shl
jecxz
push
add
(bad)
(bad)
(bad)
push
add
addr16
sti
nop
inc
jg
loop
cli
cdq
aaa
(bad)
sahf
mov
stos
or
xchg
mov
addr16
pop
mov
ror
out
jg
hlt
dec
aad
sub
cmp
ror
dec
sub
jno
pushf
inc
hlt
jnp
stos
inc
lock
and
mov
or
call
dec
pop
adc
scas
sbb
or
xchg
loope
and
aas
aas
mov
sub
rcl
(bad)
(bad)
(bad)
call
and
add
pop
inc
mov
mov
pop
xchg
jmp
xchg
adc
xchg
inc
push
(bad)
(bad)
(bad)
push
addr16
inc
stos
push
stos
inc
cld
in
sti
lahf
test
int
je
xor
repnz
xor
inc
or
or
daa
push
sub
dec
test
ins
push
out
aad
mov
repz
pop
ud0
(bad)
call
mov
cli
fiadd
enter
lock
shr
inc
jmp
cmp
push
pop
pop
(bad)
(bad)
out
cli
hlt
es
pop
mov
xchg
fdivr
js
cmp
mov
(bad)
(bad)
call
push
xor
pop
push
or
loope
cmps
cdq
out
stc
pop
cmps
jno
inc
jbe
pop
shl
pop
fwait
pushf
cld
(bad)
(bad)
push
mov
mov
or
in
adc
mov
xchg
mov
repz
in
(bad)
jg
inc
add
sbb
repz
xchg
stos
(bad)
(bad)
(bad)
call
pop
pop
jb
into
(bad)
cmp
jne
scas
pop
bswap
vmread
jle
xor
dec
ds
mov
shr
add
sbb
sub
ins
add
sti
repnz
retf
call
mov
(bad)
(bad)
push
mov
push
pop
mov
lea
or
stc
mov
pop
dec
ret
push
sbb
sbb
je
sahf
in
dec
rol
icebp
je
pop
call
mov
mov
call
pushf
pop
stc
cmp
in
rcr
mov
mov
stos
in
test
xlat
dec
mov
inc
fcomip
(bad)
push
pop
pop
fwait
dec
scas
mov
xor
lea
sbb
sbb
(bad)
(bad)
(bad)
(bad)
clc
test
sub
test
push
test
sub
std
arpl
nop
xchg
ror
xor
test
(bad)
(bad)
jmp
xor
fild
add
lock
xchg
sbb
fst
and
inc
(bad)
push
stc
call
jp
call
jge
call
call
mov
mov
(bad)
rcl
(bad)
add
pop
fild
push
dec
pusha
pusha
add
mov
lods
xor
mov
sbb
xchg
sub
(bad)
(bad)
call
retf
jb
leave
mov
jmp
dec
call
push
leave
lods
movs
jmp
scas
adc
(bad)
(bad)
dec
or
xor
sti
push
pop
jg
sbb
and
stc
add
sub
ja
pop
rol
(bad)
(bad)
dec
loope
loop
std
jg
stc
mov
sbb
popf
or
adc
shl
xchg
adc
pop
and
(bad)
(bad)
dec
inc
or
cwde
pop
add
jb
sub
mov
icebp
dec
aaa
pop
sub
cmps
gs
dec
(bad)
mov
mov
or
cmps
iret
xor
push
dec
mov
adc
popf
jno
cmp
push
outs
xor
(bad)
(bad)
push
xchg
cmp
mov
mov
xchg
push
stc
test
fisubr
aas
add
(bad)
push
push
xchg
xchg
cdq
div
jg
cmps
cmps
lods
ret
push
fs
mov
sbb
stos
out
in
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
loopne
push
sub
aad
cmp
out
inc
fldenv
movs
mov
mov
(bad)
dec
sbb
leave
jae
dec
scas
fadd
cli
call
cmp
mov
pop
(bad)
dec
inc
mov
dec
fisub
push
push
mov
adc
jmp
mov
in
pop
inc
xor
jmp
scas
hlt
jl
outs
xor
mov
jmp
movs
cmp
in
mov
mov
inc
loopne
or
or
hlt
(bad)
(bad)
jmp
daa
adc
les
jge
sub
lods
sbb
inc
(bad)
jmp
mov
iret
gs
jae
mov
lods
bnd
and
xchg
(bad)
(bad)
push
(bad)
repnz
mov
mov
(bad)
(bad)
(bad)
jmp
ret
push
xchg
xchg
test
in
fsubrp
inc
dec
push
mov
movs
fimul
cmp
les
fsubr
xor
js
arpl
xor
(bad)
(bad)
(bad)
(bad)
jmp
cdq
inc
fist
shl
inc
nop
stc
mov
movs
and
jp
and
(bad)
mov
mov
pop
lds
xchg
daa
(bad)
pop
mov
sub
mov
sbb
ja
les
xchg
add
iret
xchg
(bad)
out
clc
(bad)
aas
arpl
mov
sbb
and
ret
push
push
pop
in
das
mov
sub
push
mov
push
(bad)
int3
sti
int3
xor
sub
push
ins
jmp
(bad)
mov
xor
popa
pusha
cmps
ficom
repz
xchg
(bad)
(bad)
call
jg
mov
pusha
mov
lods
rcr
mov
(bad)
(bad)
loop
(bad)
clc
ficom
jecxz
dec
sub
scas
dec
jmp
mov
xchg
dec
shl
and
hlt
addr16
mov
jl
pop
push
(bad)
fnsave
jl
cmp
daa
cdq
ret
iret
sub
test
(bad)
(bad)
push
scas
leave
(bad)
jmp
sub
xor
fistp
mov
lock
push
xchg
push
xchg
sub
pusha
les
in
call
mov
(bad)
out
push
test
jg
fldcw
xchg
fwait
cld
mov
pushf
hlt
xchg
pop
(bad)
das
push
sub
(bad)
(bad)
dec
cs
sbb
mov
loope
je
or
and
push
mov
xor
mov
test
mov
nop
(bad)
(bad)
(bad)
jmp
into
repnz
ror
mov
test
inc
in
lahf
adc
xchg
icebp
and
(bad)
(bad)
(bad)
jmp
cmps
pop
mov
push
adc
mov
call
jecxz
cmps
mov
hlt
push
push
pop
ret
and
lds
ds
push
fnstenv
sahf
push
push
fucomp
ror
sub
test
fidivr
sti
daa
loopne
xor
inc
loope
clc
add
fisub
cmp
(bad)
(bad)
inc
add
inc
adc
jmp
retf
test
mov
lods
movs
xchg
retf
xchg
pushf
sub
xchg
and
add
std
test
add
(bad)
out
in
jg
stos
int
push
fs
(bad)
call
mov
int3
sub
mov
pop
lock
sbb
test
jle
mov
jmp
inc
ret
xchg
aam
lock
repz
or
xor
data16
call
sub
cmp
jle
rcl
in
sbb
in
daa
or
out
out
and
mov
xchg
aam
std
(bad)
(bad)
call
pusha
fwait
adc
and
pop
arpl
ins
fidivr
dec
xchg
imul
mov
xchg
pusha
in
scas
jns
add
dec
lock
jnp
mov
inc
jp
and
in
(bad)
(bad)
inc
faddp
pop
mov
sbb
jp
jne
lea
int
aas
push
mov
mov
inc
jecxz
and
add
call
repz
aaa
int
xchg
vcvtdq2pd
call
(bad)
call
popa
xchg
fmul
imul
pusha
pop
sbb
add
ds
sbb
call
into
jns
call
pop
xor
pop
push
sbb
mov
pushf
push
adc
dec
xchg
push
shl
dec
aam
(bad)
(bad)
(bad)
jmp
dec
lods
loope
dec
out
stos
cmp
push
mov
bound
mov
sbb
mov
(bad)
ins
or
pushf
(bad)
jmp
cdq
lea
sbb
sub
lahf
icebp
aam
pusha
daa
in
xor
cs
jl
fadd
jmp
cwde
mov
into
mov
daa
sub
pop
das
jg
and
sbb
sub
sar
jp
push
scas
adc
std
(bad)
call
aam
popa
mov
fstp
and
dec
leave
fmul
xchg
(bad)
(bad)
jg
fadd
inc
push
cmp
push
(bad)
xor
push
sti
dec
aas
add
aam
call
mov
xor
arpl
mov
xor
inc
jmp
test
pop
xchg
xlat
call
(bad)
dec
lock
dec
and
ss
pop
cmc
movs
push
aas
call
outs
jmp
std
idiv
call
mov
(bad)
mov
stos
leave
(bad)
aam
inc
les
mov
or
mov
pop
or
loop
lea
sub
popf
cmp
cmp
imul
mov
pop
neg
add
jge
(bad)
call
nop
lods
shr
(bad)
and
mov
sub
sahf
jne
mov
xchg
fwait
mov
inc
dec
xor
sub
popa
push
loope
mov
mov
outs
(bad)
(bad)
cmp
jmp
xor
mov
test
ss
fcmovbe
pop
dec
push
(bad)
inc
dec
lods
jno
dec
rcl
push
jle
sub
out
xor
mul
xor
mov
rcl
adc
(bad)
(bad)
inc
push
aaa
push
jg
push
cmp
inc
mov
jg
mov
outs
call
mov
movs
inc
inc
fwait
jo
(bad)
push
leavew
mov
(bad)
cmp
std
out
jbe
jns
adc
jmp
loope
scas
mov
push
jecxz
in
sbb
in
fwait
icebp
aaa
cmp
inc
ins
sub
jb
ds
(bad)
mov
(bad)
mov
mov
hlt
cmp
mov
loopne
into
pop
in
(bad)
(bad)
(bad)
clc
dec
call
rcl
sub
push
fnstenv
xchg
call
ret
(bad)
(bad)
call
shr
bound
out
adc
popa
mov
dec
jp
push
jmp
mov
jg
rcr
jmp
inc
inc
push
lock
adc
mov
(bad)
(bad)
mov
dec
cmp
xchg
dec
push
call
jp
sub
mov
jp
cmc
dec
fld
dec
stc
or
add
cmp
jg
inc
outs
clc
push
pop
mov
jne
jno
out
subps
jno
xchg
aaa
pop
(bad)
call
adc
push
mov
(bad)
inc
in
xor
inc
adc
dec
xchg
mov
scas
dec
test
lods
movs
mov
scas
pop
mov
(bad)
mov
mov
fwait
stc
mov
fmul
imul
jb
hlt
jb
test
dec
mov
cmp
or
ss
(bad)
(bad)
mov
into
add
mov
dec
pop
es
iret
sbb
xchg
dec
sub
(bad)
(bad)
dec
jb
out
js
add
(bad)
or
jnp
aas
mul
lea
(bad)
(bad)
inc
bsf
xor
lea
push
mov
cmp
pop
bnd
ret
(bad)
(bad)
(bad)
call
and
lahf
pop
or
cmps
cmc
xchg
sahf
mov
cmps
cmovle
jg
xchg
inc
cmp
xor
xchg
aad
ret
push
jb
(bad)
(bad)
(bad)
jmp
aad
adc
dec
xor
aad
leave
cmps
out
add
popf
bound
bound
or
idiv
(bad)
push
scas
push
xlat
mov
push
jmp
popf
mov
sub
outs
int3
jnp
scas
pop
outs
mov
ror
pop
dec
pop
xor
cmp
(bad)
inc
gs
call
cmp
out
cmps
inc
adc
cmc
pushf
test
mov
pop
jbe
(bad)
(bad)
(bad)
dec
imul
int
je
jnp
inc
push
daa
and
xor
jmp
retf
scas
ja
ins
stc
fist
(bad)
inc
pop
cmp
mov
sbb
adc
loop
sub
pop
movs
sbb
add
(bad)
(bad)
out
cmp
scas
mov
sub
dec
dec
adc
lds
cmp
sbb
(bad)
dec
inc
mov
arpl
ins
(bad)
scas
and
(bad)
(bad)
(bad)
jmp
scas
pop
loopne
imul
xor
sub
fisubr
cmp
or
mov
push
xor
cli
add
dec
loop
xor
mov
iret
cmp
(bad)
jmp
pop
sub
pop
lea
(bad)
lahf
jmp
sbb
js
jb
or
in
mov
add
(bad)
lea
dec
into
ficom
xor
push
adc
and
ins
ss
iret
cwde
idiv
cmc
stos
movs
sbb
inc
fidiv
add
adc
les
xor
scas
(bad)
(bad)
(bad)
(bad)
dec
movs
pop
mov
je
call
pop
jns
in
ins
xor
out
in
neg
popa
dec
(bad)
(bad)
jle
cmps
xor
xor
fdivr
(bad)
and
nop
dec
push
push
icebp
inc
inc
test
(bad)
(bad)
(bad)
(bad)
xchg
jbe
mov
mov
loop
test
jmp
cmps
sub
add
cld
adc
add
mov
in
hlt
dec
fdivr
(bad)
(bad)
(bad)
sti
(bad)
jle
mov
mov
sub
push
aaa
jo
pusha
test
jg
dec
pusha
repnz
inc
fbstp
pusha
cli
xchg
or
and
stos
(bad)
dec
xor
jne
test
cmp
arpl
add
jg
(bad)
in
cs
inc
jae
in
nop
jle
adc
(bad)
(bad)
mov
and
cmp
imul
mov
jecxz
or
(bad)
push
in
je
(bad)
(bad)
jg
bound
push
mov
(bad)
mov
jnp
fwait
mov
mov
in
nop
push
std
(bad)
(bad)
jmp
test
xchg
(bad)
iret
lahf
jo
mov
pop
fimul
jnp
cmp
das
cli
pop
(bad)
jmp
sub
fs
lods
aas
mov
(bad)
(bad)
call
jg
mov
int3
loopne
pushf
data16
adc
adc
in
lods
or
cmps
sbb
pop
shr
aad
and
cmp
fstp
clc
mov
fwait
test
xor
pusha
mov
fs
add
std
(bad)
jmp
sar
retf
or
mov
icebp
ja
dec
iret
aam
xor
mov
add
pusha
or
add
clc
call
test
cmp
test
shr
cmp
push
(bad)
(bad)
jmp
ja
xchg
dec
push
push
fcmovnu
xor
jmp
test
(bad)
jmp
cs
jns
push
fild
push
cld
push
arpl
fistp
test
icebp
(bad)
mov
push
rol
and
aad
xor
div
and
movs
ror
xor
(bad)
(bad)
dec
cmc
icebp
movs
stc
and
jmp
leave
ret
pop
test
das
(bad)
(bad)
call
dec
or
jne
mov
ins
je
rcr
xchg
xor
fld
(bad)
in
jmp
fs
sbb
pop
enter
adc
mov
cmps
pop
cwde
call
repnz
(bad)
(bad)
push
imul
paddb
sub
div
mov
call
je
mov
pushf
push
(bad)
repnz
hlt
(bad)
call
add
or
ins
push
mov
mov
(bad)
(bad)
cmp
jns
aam
call
jg
inc
or
(bad)
(bad)
(bad)
jmp
sub
xchg
cmc
sbb
push
adc
xchg
neg
mov
sbb
(bad)
mov
(bad)
mov
dec
inc
dec
push
in
sti
jg
imul
jp
xchg
cli
ret
shl
dec
(bad)
push
xchg
imul
cmps
les
call
jmp
push
dec
mov
ins
mov
cmps
sbb
dec
pop
call
push
es
and
rcr
(bad)
push
adc
sub
mov
push
mov
lea
fsub
ret
imul
inc
xor
sub
leave
das
inc
lea
jbe
sbb
jb
or
cs
push
retf
ret
jmp
or
fdivr
dec
add
data16
ret
dec
loope
mov
(bad)
call
xlat
inc
aaa
cli
mov
daa
into
adc
dec
(bad)
sub
jne
fadd
pop
push
ins
ins
sub
fcom
(bad)
movs
push
add
inc
mov
sbb
int
xchg
xor
(bad)
push
nop
inc
mov
in
inc
inc
test
mov
mov
std
mov
xor
xchg
ret
jecxz
std
mov
ds
push
popa
cmp
pop
pop
jp
jns
adc
sub
jg
xor
hlt
mul
mov
add
mov
lea
and
pop
imul
int
sar
push
ss
inc
call
(bad)
(bad)
call
sbb
lds
sub
imul
mov
dec
mov
cld
jg
(bad)
jmp
push
repnz
(bad)
neg
inc
mov
jle
(bad)
(bad)
(bad)
mov
je
jg
sti
out
push
sar
sti
fs
add
icebp
(bad)
call
nop
push
das
fsub
push
add
cdq
div
jge
fist
mov
aas
xor
out
sahf
push
push
jg
mov
aad
sub
cli
gs
mov
add
pusha
in
jl
mov
int
push
call
call
inc
xor
call
ins
fimul
into
cmp
jno
sub
hlt
mov
xchg
pop
mov
outs
lods
jnp
mov
sbb
push
mov
jns
pop
enter
push
push
jo
inc
addr16
(bad)
(bad)
inc
imul
mov
fst
mov
adc
jle
loop
ficom
jmp
ds
outs
popf
xor
and
jae
in
(bad)
pop
sar
(bad)
inc
mov
pushf
xchg
pop
mov
repnz
jo
adc
ror
(bad)
xor
(bad)
(bad)
jmp
push
push
inc
mov
or
jp
sbb
cmp
or
and
(bad)
cmp
retf
(bad)
lahf
call
inc
xchg
scas
mov
(bad)
scas
es
inc
test
jne
ins
xchg
int3
call
scas
fucomip
(bad)
dec
xor
jnp
jns
pop
mov
jg
adc
lds
sub
mov
(bad)
cmp
nop
adc
xchg
std
jle
jnp
(bad)
and
(bad)
(bad)
jg
fnstcw
adc
lahf
pop
js
pop
add
clc
jo
das
shl
sbb
call
push
mov
xor
adc
push
imul
inc
(bad)
pop
fld
dec
(bad)
scas
jle
dec
pop
sub
xlat
(bad)
(bad)
(bad)
jmp
mov
pop
and
mov
into
jns
je
outs
xchg
mov
pop
pop
jecxz
movs
(bad)
(bad)
jg
push
jbe
or
test
jno
ins
mov
hlt
inc
lods
pop
jnp
cmc
jnp
jno
xor
call
cmp
sub
jnp
popa
cs
cwde
rcr
dec
(bad)
(bad)
(bad)
(bad)
mov
pop
and
mov
cmc
ins
mov
cmp
ds
test
jecxz
lahf
push
xchg
(bad)
cmp
jg
sahf
add
add
cmp
xchg
sbb
add
pop
jmp
mov
outs
jmp
jg
pop
lahf
(bad)
(bad)
(bad)
inc
daa
arpl
out
inc
je
call
mov
and
fwait
sub
sub
repnz
jb
(bad)
(bad)
(bad)
jmp
push
arpl
pop
xor
pop
cmp
add
cwde
push
xlat
in
shl
xchg
adc
push
jmp
skinit
aas
add
push
and
xor
in
lock
sub
add
push
mov
(bad)
(bad)
jg
jecxz
mov
mov
ret
leave
jno
out
mov
loope
lock
mov
(bad)
(bad)
(bad)
jmp
ret
mov
mov
sti
in
sbb
and
sbb
or
imul
cs
mov
arpl
repnz
push
and
rcr
mov
out
cli
jg
mov
pop
sbb
push
int3
push
call
xor
rcr
or
pusha
jmp
cmp
dec
(bad)
int
add
pop
shl
or
jbe
or
sar
xor
aad
fdivr
in
call
(bad)
jmp
mov
sbb
rcr
push
out
jne
or
cmp
jmp
setns
(bad)
(bad)
(bad)
call
cld
stos
aas
scas
push
push
push
adc
stos
inc
nop
xchg
scas
ss
mov
addr16
imul
add
or
jmp
sar
call
in
shl
arpl
add
(bad)
mov
adc
add
pop
add
call
in
loope
outs
jle
mov
jmp
(bad)
(bad)
dec
xchg
popa
cwde
jne
inc
not
push
clc
jl
cmps
inc
dec
push
jno
in
jb
nop
push
ror
sbb
inc
sbb
shl
jb
sub
push
inc
or
inc
(bad)
(bad)
(bad)
jmp
xchg
iret
je
add
rcl
jmp
jp
jae
mov
in
std
fwait
(bad)
(bad)
call
mov
mov
(bad)
out
add
in
cs
inc
xor
(bad)
(bad)
push
ds
dec
xchg
xor
test
ds
or
xchg
sub
inc
mov
adc
icebp
jmp
inc
rcl
fwait
movs
pop
mov
xor
imul
sub
mov
scas
jbe
push
jg
in
scas
xchg
pop
mov
cmp
and
mov
(bad)
cli
push
or
(bad)
lock
fadd
(bad)
test
cmp
dec
adc
pop
dec
mov
jmp
ins
sub
dec
jge
aaa
out
mov
cmp
or
leave
ss
mov
xor
(bad)
dec
inc
enter
loopne
cwde
leave
add
xor
lock
cmp
outs
push
adc
fldz
sub
sbb
and
scas
sub
retf
mov
(bad)
inc
xor
(bad)
call
xchg
push
(bad)
mov
in
mov
call
jo
dec
inc
aas
mov
cmp
fldenv
(bad)
mov
das
cli
(bad)
inc
das
pop
ss
inc
cmps
mov
mov
mov
xchg
push
retf
call
add
or
les
mov
pop
sbb
mov
jg
ffree
ret
je
(bad)
(bad)
(bad)
(bad)
mov
aam
(bad)
jno
ds
mov
cmp
das
mov
add
mov
(bad)
(bad)
(bad)
mov
mov
mov
jnp
rcl
push
mov
push
imul
(bad)
(bad)
jmp
cmps
fdivp
(bad)
or
cmps
das
rcl
(bad)
mov
mov
pop
dec
xchg
loopne
pop
jle
lods
out
xchg
(bad)
(bad)
(bad)
js
push
xor
xchg
adc
cmp
cs
loop
inc
mov
pushf
fidivr
call
(bad)
popa
or
push
mov
out
inc
out
adc
jg
cs
ins
or
dec
xchg
into
add
dec
or
jmp
push
inc
fld
(bad)
dec
leavew
rcl
enter
(bad)
(bad)
call
ins
out
test
mov
inc
mov
xor
lea
and
add
js
cmp
sbb
push
mov
pushf
(bad)
sbb
xor
adc
ret
xchg
out
cs
pop
cmp
pop
push
mov
add
dec
loop
idiv
xchg
in
ins
sub
test
out
xchg
(bad)
cs
js
ja
gs
push
repnz
and
call
pop
push
(bad)
mov
outs
rol
sar
(bad)
mov
cmps
imul
sub
sti
loop
xchg
adc
fcomip
out
mov
aam
mov
fs
jno
pop
mov
lods
pop
pop
pop
(bad)
(bad)
(bad)
call
sbb
lahf
enter
xchg
cmp
retf
or
iret
mov
aam
add
(bad)
call
xor
pop
ret
add
out
or
add
xor
mov
jnp
mov
(bad)
jmp
adc
jmp
icebp
sub
inc
outs
xchg
xor
(bad)
push
xor
jmp
dec
sar
mov
sub
inc
leave
inc
stos
pop
(bad)
(bad)
call
retf
loope
dec
inc
fild
mov
ins
adc
(bad)
lods
clc
inc
dec
jl
add
sbb
(bad)
(bad)
dec
sbb
lods
aaa
or
cmps
iret
pop
inc
pop
lea
mov
mov
jo
xor
sar
(bad)
(bad)
dec
fild
mov
loop
sub
xor
mov
iret
rcl
lea
pushf
jmp
call
add
xchg
pop
and
leave
mov
sbb
sbb
xor
(bad)
jmp
mov
pushf
jbe
pop
call
(bad)
cmp
mov
inc
sub
adc
movs
xor
sub
inc
stc
ds
pop
into
ret
ret
call
std
test
dec
xchg
outs
inc
mov
sbb
xchg
mov
aam
xor
movs
mov
sub
pop
clc
(bad)
inc
mov
mov
add
inc
fst
fcmovnb
push
imul
scas
lods
xchg
addr16
adc
and
movs
retf
fwait
movs
fwait
lock
ja
inc
es
(bad)
lock
(bad)
out
in
jp
scas
push
in
jns
(bad)
shr
jmp
jge
adc
sub
or
retf
ins
dec
xchg
xor
push
add
and
shr
fst
pop
(bad)
(bad)
call
not
ins
arpl
jae
adc
loope
(bad)
addr16
lock
shr
push
outs
ret
mov
dec
aad
arpl
sub
int
pushf
ret
imul
lahf
retf
jne
adc
inc
jmp
lods
(bad)
cs
dec
mov
mov
pop
mov
ja
(bad)
jg
adc
push
jo
loop
mov
add
push
xor
jg
cli
jb
mov
add
int
adc
push
(bad)
outs
outs
out
mov
std
(bad)
(bad)
jns
pop
ja
dec
cmps
pop
movd
iret
sbb
jne
leave
push
ins
fsubr
jo
aam
(bad)
push
mov
sub
and
mov
fstp
(bad)
push
out
shl
add
jmp
push
and
sbb
push
pop
ss
mov
add
(bad)
jg
sahf
mov
sahf
stos
mov
mov
mov
mov
(bad)
sti
cwde
pop
push
jmp
call
cmp
xchg
nop
call
pop
je
adc
pop
icebp
ja
xchg
shl
nop
mov
xchg
rcl
das
xor
cmc
cmp
sbb
aaa
std
push
iret
adc
ins
in
or
push
cmp
iret
in
xchg
loopne
shl
(bad)
mov
xchg
fdiv
hlt
adc
pop
jbe
or
imul
xor
cs
(bad)
jg
test
lods
xchg
fs
and
jmp
(bad)
(bad)
(bad)
inc
cli
add
xlat
cmp
idiv
pop
add
int3
fcmovnb
mov
xor
inc
mov
push
jb
js
std
mov
imul
int
adc
push
sbb
push
lock
mov
fld
mov
sub
(bad)
out
cmps
inc
(bad)
add
push
adc
mov
cmp
push
icebp
lahf
mov
(bad)
(bad)
(bad)
dec
inc
pop
call
sbb
jne
hlt
jnp
jnp
pop
neg
or
dec
mov
jmp
pop
mov
and
mov
rol
dec
(bad)
(bad)
call
fcom
sbb
fs
lock
sbb
push
mov
(bad)
das
xchg
inc
xor
adc
xor
aas
pop
out
sahf
pop
inc
lods
(bad)
mov
cmp
aaa
or
(bad)
out
sbb
test
push
sub
hlt
(bad)
inc
scas
xchg
sub
jo
mov
mov
mov
in
(bad)
(bad)
(bad)
inc
inc
push
stos
ins
ins
jne
inc
pop
jmp
mov
pop
ret
out
cdq
and
(bad)
dec
lock
jb
es
jp
push
sahf
mov
pop
push
xlat
pop
xor
xor
call
cli
mov
adc
int
and
mov
add
push
cwde
push
cmp
ja
dec
xchg
and
inc
dec
pop
stos
push
sbb
sbb
gs
sub
add
mov
cmp
push
sbb
xchg
cmp
mov
call
xlat
mov
and
out
rcl
xor
movs
call
(bad)
call
fisttp
push
sub
jecxz
fidivr
xchg
add
call
not
in
(bad)
(bad)
call
sbb
fst
xor
sub
mov
lds
out
xchg
(bad)
(bad)
(bad)
(bad)
mov
scas
cmp
pop
jle
jae
out
imul
(bad)
sub
mov
sub
cmp
(bad)
(bad)
call
mov
xlat
jne
fisub
out
dec
and
mul
adc
dec
pop
icebp
mov
sar
sbb
inc
ficom
or
jne
fxch
and
enter
mov
and
adc
outs
cmp
or
mov
sar
call
int
(bad)
loopne
scas
or
sub
movs
push
cmp
xor
movs
lods
sub
enter
lds
fs
popa
add
ror
pop
pop
(bad)
(bad)
(bad)
mov
jmp
dec
jmp
call
cld
dec
aam
mov
ja
les
or
mov
mov
(bad)
call
xchg
jp
icebp
and
outs
das
in
cmp
(bad)
cmc
mov
and
(bad)
(bad)
call
push
sub
enter
call
mov
xchg
loope
call
(bad)
dec
inc
add
xchg
int3
lock
cmp
mov
and
in
mov
push
mov
(bad)
jmp
push
das
(bad)
adc
sub
push
test
jmp
sub
mov
push
sbb
add
sbb
(bad)
mov
pop
scas
cs
icebp
ss
xchg
and
jae
daa
jne
jg
adc
xor
xchg
pop
sbb
dec
adc
out
imul
add
xchg
dec
push
dec
repnz
or
mov
mov
(bad)
mov
(bad)
(bad)
cmp
push
and
and
inc
clc
sahf
(bad)
(bad)
(bad)
jmp
jmp
push
mov
dec
pop
pop
cmp
test
xor
push
cs
cmps
movs
popa
call
push
mov
dec
mov
stc
pop
push
dec
inc
into
adc
or
push
sbb
pop
xlat
mov
(bad)
into
xchg
mov
scas
repnz
or
cmps
sub
(bad)
adc
(bad)
call
mov
in
push
movs
adc
sub
adc
push
mov
sub
das
int
mov
mov
mov
sbb
jg
adc
retf
or
push
(bad)
pop
ds
pop
push
sahf
fs
lods
jmp
push
dec
test
(bad)
(bad)
(bad)
cmp
cwde
outs
mov
das
popa
jbe
mov
jl
jne
loop
dec
push
xor
addr16
nop
sub
mov
int
retf
lahf
pushf
aad
adc
push
cs
push
jmp
(bad)
(bad)
(bad)
jmp
lods
popa
cmp
aam
fbstp
mov
iret
popf
dec
mov
arpl
and
jmp
dec
cmp
sbb
stc
mov
adc
sbb
shl
cs
ficomp
clc
cmp
dec
mov
jmp
lds
stos
pop
and
out
mov
inc
sub
aaa
packssdw
(bad)
push
jmp
rep
enter
arpl
ins
sahf
je
adc
ret
int3
add
(bad)
(bad)
fisttp
mov
out
pop
cmp
mov
cmp
rol
inc
in
pop
sahf
bswap
mov
(bad)
(bad)
inc
xchg
mov
bound
xor
pop
add
gs
push
mov
adc
cmp
call
adc
cmp
cmp
add
cwde
je
in
pop
pop
lds
add
push
jge
(bad)
(bad)
dec
sub
lea
imul
xor
mov
xchg
std
inc
pop
out
and
mov
leave
repnz
push
xchg
test
stos
xor
dec
aas
push
jmp
push
sbb
(bad)
(bad)
(bad)
in
cmc
addr16
dec
lahf
(bad)
shr
add
xchg
mov
lock
sub
popa
push
and
add
fcom
mov
and
mov
push
js
fnsave
(bad)
(bad)
inc
and
sub
xchg
dec
out
jae
mov
rcr
(bad)
jno
(bad)
leave
(bad)
(bad)
mov
into
cmp
jmp
sahf
jae
xchg
rcr
dec
dec
ja
xchg
xchg
add
(bad)
(bad)
inc
or
sub
test
push
mov
or
fisub
sbb
jo
movs
or
push
clc
sbb
xor
or
mov
pop
aaa
inc
pop
ss
adc
mov
rol
arpl
imul
mov
ret
adc
cmp
inc
cmp
inc
pop
jae
adc
add
ja
jbe
lods
push
mov
ret
jbe
dec
push
into
mov
xor
jp
addr16
(bad)
(bad)
(bad)
call
js
sbb
fnstsw
and
dec
out
shr
fild
mov
jne
cmps
xchg
dec
(bad)
aam
call
js
hlt
fwait
and
pop
(bad)
(bad)
ds
xor
jmp
mov
popa
push
fadd
bound
(bad)
(bad)
(bad)
inc
mov
adc
movs
push
in
jp
dec
mov
xchg
sbb
and
addr16
in
(bad)
(bad)
jg
mov
ss
cmp
sbb
or
pop
or
or
dec
xchg
popa
(bad)
(bad)
(bad)
jmp
pop
fisttp
mov
dec
adc
loop
mov
bnd
int3
sub
jo
(bad)
(bad)
call
sbb
fist
jp
mov
sbb
hlt
add
inc
not
pop
sbb
cmp
iret
cmp
(bad)
(bad)
call
jmp
retf
ds
shl
loopne
jl
mov
mov
fbstp
lock
or
stos
jmp
add
mov
fimul
inc
and
lock
(bad)
(bad)
jg
sbb
dec
cmp
mov
inc
mov
mov
sub
pop
mov
(bad)
push
dec
clc
(bad)
dec
sbb
das
push
xchg
cs
call
xchg
mov
iret
mov
popf
andps
outs
jb
ds
cmp
dec
or
and
dec
xor
xchg
lahf
inc
dec
dec
jo
jp
call
xchg
repz
pop
add
(bad)
adc
sbb
hlt
pop
xor
test
mov
std
mov
lock
mov
out
mov
cmp
adc
je
enter
imul
xchg
mov
push
inc
pop
sar
jge
xor
cmps
xchg
dec
sub
mov
retf
add
or
mov
hlt
ror
jb
lods
jge
test
add
out
and
cmp
repnz
pop
mov
pop
jl
leave
(bad)
fist
mov
mov
mov
xor
adc
pop
xor
(bad)
(bad)
(bad)
push
mov
sbb
add
aam
call
push
sahf
cld
mov
aad
ja
jmp
jp
jl
ja
jmp
stos
out
mov
inc
repz
sbb
mov
jg
outs
or
xchg
or
adc
and
or
pop
mov
rol
(bad)
(bad)
mov
fimul
push
or
sbb
push
xchg
retf
xchg
inc
jo
(bad)
(bad)
dec
xor
xchg
lahf
or
mov
cmps
xchg
retf
pop
xchg
mov
fcomip
inc
push
pop
pop
xchg
sbb
sbb
iret
rcr
or
loope
inc
scas
xchg
or
les
stos
out
adc
sti
adc
std
push
jns
push
stos
cmp
popf
ret
jge
enter
mov
adc
sub
add
mov
(bad)
jmp
pop
xchg
inc
mov
pop
fwait
ins
and
retf
pop
repnz
mov
out
mov
push
(bad)
(bad)
push
mov
cwde
jne
inc
jge
inc
call
in
pushf
add
dec
in
inc
push
mov
add
xchg
mov
into
jbe
stc
mov
and
jmp
jmp
(bad)
dec
ja
jge
out
sbb
aad
pop
sbb
and
pop
pop
into
popf
(bad)
lock
jnp
pop
clc
call
in
adc
cmc
mov
data16
(bad)
(bad)
(bad)
jmp
stos
or
and
psadbw
inc
outs
ror
push
jecxz
retf
scas
sub
daa
jg
pop
mov
(bad)
(bad)
(bad)
jmp
xchg
and
out
fnsave
push
and
jbe
test
and
add
jmp
shr
daa
adc
sub
and
adc
dec
pusha
in
pop
push
adc
aam
xchg
call
or
push
xchg
lahf
loopne
fwait
sbb
stos
(bad)
(bad)
(bad)
jmp
xor
adc
cli
imul
movaps
push
sar
fwait
clc
jecxz
xor
ss
sub
push
not
outs
dec
push
cmp
loop
sahf
ss
push
mov
sahf
mov
xor
push
gs
bnd
push
jg
add
in
adc
retf
sbb
ins
adc
push
xor
and
pop
pop
arpl
xor
mov
loopne
cld
inc
add
out
cli
loope
fwait
(bad)
push
loope
inc
mov
jmp
icebp
call
mov
loopne
retf
es
xor
dec
rcr
mov
(bad)
pop
in
adc
nop
out
sub
cmp
xor
call
scas
push
imul
test
(bad)
call
loopne
pop
xor
into
cmps
cmp
xor
pop
jns
mov
and
(bad)
(bad)
(bad)
dec
stos
mov
jno
push
aad
fiadd
mov
nop
xor
mov
aad
call
push
jae
jl
push
rcl
lods
pop
push
sbb
push
retf
(bad)
mov
mov
pop
push
cld
outs
movs
das
mov
es
pop
hlt
inc
inc
push
out
jl
adc
push
mov
dec
outs
clc
not
cmc
add
dec
(bad)
mov
adc
dec
jp
or
add
add
cmp
push
mov
push
iret
aam
ret
xchg
xor
cmp
mov
sub
push
out
nop
sub
mov
clc
je
stos
aad
(bad)
jnp
pop
sbb
or
hlt
movs
mov
pusha
push
(bad)
pop
aaa
sti
dec
(bad)
(bad)
(bad)
push
call
in
inc
xchg
sbb
ficom
cmp
fwait
jne
sub
push
jmp
jecxz
push
xchg
(bad)
(bad)
(bad)
call
pop
mov
out
enter
gs
out
mov
out
sbb
fwait
and
xchg
xor
fwait
pusha
push
jecxz
(bad)
and
std
mov
(bad)
(bad)
(bad)
push
dec
cmc
cmp
fisttp
sub
xor
into
adc
add
dec
jge
jmp
mov
clc
(bad)
(bad)
stc
int3
pop
dec
outs
inc
loope
mov
jbe
sub
cmc
xchg
sti
dec
test
(bad)
(bad)
inc
sbb
xchg
adc
call
push
iret
dec
add
test
mov
jp
lods
add
and
mov
neg
inc
mov
or
cmp
test
sbb
jbe
ja
pop
icebp
(bad)
call
in
mov
out
or
mov
in
xor
cli
xor
cld
call
or
pop
mov
fs
mov
add
imul
pop
push
movs
xchg
(bad)
mov
(bad)
imul
xor
or
pop
ins
(bad)
(bad)
(bad)
call
repz
sbb
je
retf
stos
bound
jae
aas
and
repnz
mov
cmp
inc
(bad)
fild
jne
jg
cmc
neg
adc
retf
int
(bad)
(bad)
call
mov
outs
mov
out
add
push
add
clc
in
xchg
jmp
xchg
jbe
movs
pop
les
mov
push
sub
add
and
addr16
sbb
(bad)
(bad)
(bad)
out
retf
jl
xchg
mov
push
ja
sbb
cmp
les
xchg
(bad)
(bad)
(bad)
jmp
setae
aas
arpl
pusha
jle
mov
js
in
les
dec
add
pop
adc
push
xor
mov
mov
es
rcr
pop
pop
dec
(bad)
cmp
gs
retf
jmp
xor
pusha
adc
(bad)
(bad)
(bad)
jmp
cmp
es
fstp
aad
add
aam
xchg
xchg
les
or
jg
push
icebp
push
in
test
mov
adc
push
popf
xchg
aad
and
sub
arpl
std
(bad)
(bad)
jmp
mov
pop
lods
and
stos
and
bound
mov
in
adc
push
mov
stos
mov
or
adc
mov
push
mov
fst
or
push
(bad)
(bad)
dec
sub
xchg
sub
inc
adc
stc
out
stc
sti
jbe
pushf
jg
jmp
out
pop
imul
mov
fucomp
fbstp
jnp
add
mov
xchg
loope
ret
push
(bad)
xor
pop
jg
cs
addr16
(bad)
(bad)
(bad)
jmp
lahf
popf
sbb
repz
pop
fld
sub
jae
push
mov
(bad)
(bad)
(bad)
call
mov
lods
loopne
call
call
push
jl
in
test
jg
or
loop
sub
push
sub
cmps
xchg
sti
xchg
cmc
jae
(bad)
inc
inc
cdq
repnz
stc
popf
inc
sti
scas
cmp
out
inc
add
jge
mov
push
imul
ds
ss
xchg
out
aam
mov
ins
sub
jno
fiadd
(bad)
(bad)
mov
not
xchg
mov
ss
adc
cmp
loopne
imul
push
(bad)
mov
dec
sbb
mov
jge
fmul
push
sub
mov
fbstp
das
std
sahf
lahf
add
and
mov
adc
out
lahf
xlat
mov
jle
xchg
rcl
ficomp
lods
sbb
sahf
enter
jbe
cmps
sub
jmp
sar
inc
leave
pusha
push
imul
std
fmulp
mov
(bad)
(bad)
(bad)
push
cli
ds
pop
jnp
fucomp
xor
neg
xchg
movs
fisubr
cmps
mov
sbb
sti
repz
repnz
sub
sub
(bad)
out
mov
sub
addr16
xchg
(bad)
(bad)
(bad)
call
inc
push
(bad)
hlt
icebp
aad
mov
pusha
and
push
fnsave
std
or
scas
cli
jmp
mov
jl
mov
(bad)
enter
jmp
mov
lock
into
shl
std
add
in
xor
dec
ins
pop
xchg
push
loopne
add
add
scas
add
xor
and
shr
lahf
inc
stos
jmp
mov
sti
mov
or
mov
(bad)
call
imul
mov
adc
adc
xchg
cs
and
and
bound
and
inc
push
mov
dec
xchg
lea
and
mov
(bad)
(bad)
call
ret
imul
or
inc
movs
lea
imul
xchg
cmp
(bad)
(bad)
(bad)
jmp
inc
inc
vcmpss
sbb
xchg
mov
movs
and
mov
xor
jmp
icebp
loope
mov
ins
das
cmp
sbb
test
mov
test
repnz
jg
repnz
dec
xor
stc
fwait
hlt
jecxz
div
stos
dec
aad
inc
cmp
mov
(bad)
call
stos
retf
rcr
repnz
es
test
(bad)
lahf
stc
sub
cld
(bad)
(bad)
jmp
js
jle
xlat
or
dec
lock
(bad)
data16
cmp
out
(bad)
mov
shl
push
(bad)
dec
hlt
into
repz
mov
push
mov
mov
js
cmp
fsub
or
stc
mov
(bad)
(bad)
(bad)
jmp
clc
shr
xor
ins
and
mov
mov
mov
pop
daa
sub
jp
aam
(bad)
(bad)
jmp
xor
idiv
mov
int3
aas
lods
rcr
aam
scas
pop
scas
stc
inc
mov
fldenv
ja
aam
clc
(bad)
(bad)
mov
fisttp
popf
ret
pop
jecxz
xor
lahf
push
mov
(bad)
jmp
retf
lods
repz
pop
leave
in
jg
aas
jle
mov
ins
(bad)
(bad)
mov
dec
repz
pop
sti
sub
aad
mov
neg
(bad)
(bad)
call
and
pop
adc
popf
push
pusha
idiv
fadd
pop
mov
mov
pop
ins
iret
jecxz
sar
(bad)
mov
mov
push
cmps
(bad)
(bad)
mov
(bad)
(bad)
dec
ins
mov
push
in
mov
ja
inc
mov
(bad)
mov
shl
fdivr
daa
iret
mov
inc
mov
in
outs
push
(bad)
mov
push
aas
gs
xchg
les
pop
ja
repz
pop
daa
leave
mov
cld
(bad)
(bad)
fdiv
jmp
pop
into
(bad)
repnz
xor
sbb
add
outs
mov
cmps
(bad)
clc
(bad)
fwait
xchg
ror
jae
and
mov
jp
repnz
fldenv
retf
jnp
std
(bad)
mov
xchg
add
sbb
outs
fs
add
das
cmp
cmp
adc
and
addr16
(bad)
(bad)
(bad)
jp
fcmovu
sub
in
dec
jecxz
das
test
add
jge
or
pop
les
std
add
(bad)
(bad)
(bad)
jmp
mov
shl
mov
sbb
jmp
lods
sbb
mov
mov
inc
inc
cld
scas
lahf
lods
shl
loop
dec
pop
fistp
hlt
adc
nop
aas
dec
outs
ins
(bad)
(bad)
xchg
outs
cmps
(bad)
call
(bad)
cmps
bound
or
dec
(bad)
(bad)
(bad)
fist
and
jle
lock
pop
mov
aaa
pop
mov
add
mul
and
clc
jmp
inc
pop
ficomp
inc
pushf
xlat
jmp
pop
dec
pushf
out
out
(bad)
inc
clc
mov
(bad)
mov
dec
pop
inc
lahf
inc
test
cmp
xchg
mov
inc
mov
lds
jae
dec
test
cld
into
outs
jg
call
out
pop
lahf
arpl
ret
out
jle
pop
inc
cwde
jle
cmp
(bad)
call
in
cli
sbb
sar
pop
popa
mov
jmp
iret
cmp
fistp
lock
push
cld
sub
inc
das
ret
mov
outs
mul
in
(bad)
jg
dec
out
mov
xchg
std
jl
fidivr
xlat
dec
fldl2t
push
call
push
dec
aad
scas
adc
inc
sti
mov
sbb
(bad)
jmp
mov
fsub
test
jo
dec
push
arpl
mov
mov
(bad)
inc
jnp
push
out
shl
in
das
test
push
mov
mov
ret
shl
mov
add
dec
add
sbb
(bad)
push
cmp
mov
fstp
popa
push
imul
pop
lods
mov
clc
call
pop
sub
add
inc
ss
pop
cwde
inc
dec
cmp
and
outs
loope
imul
aad
sub
fnsave
int3
fwait
lea
adc
mov
fld
sbb
retf
xchg
jb
dec
mov
pop
outs
dec
jne
fwait
aas
or
loop
repz
outs
pop
push
push
stc
das
add
add
add
xchg
out
(bad)
push
lock
int3
dec
sub
cdq
aaa
mov
sar
sub
in
xchg
or
mov
add
or
imul
test
push
sub
add
and
sub
lods
in
dec
adc
call
test
rcl
mov
xchg
stos
push
sub
pusha
and
clc
pop
gs
pop
sub
push
or
(bad)
dec
sub
sbb
sub
push
test
ret
fs
retf
(bad)
outs
cli
inc
loop
xchg
sub
xchg
dec
mov
dec
pusha
outs
dec
and
inc
jg
push
push
cmc
call
push
in
stos
aam
(bad)
(bad)
(bad)
(bad)
mov
sub
ret
inc
imul
fstp
outs
ins
push
stos
adc
cwde
clc
mov
ss
ror
js
dec
cmp
sar
pop
les
xor
mov
mov
cmp
xchg
inc
cmps
fisttp
lahf
adc
(bad)
jg
lea
push
and
push
cli
mov
cmps
add
fidiv
mov
sar
dec
dec
mov
movs
push
or
out
nop
or
sub
push
int
push
pop
mov
mov
es
test
sar
jmp
lds
arpl
call
dec
xchg
cmp
push
or
mov
es
push
test
sub
lods
clc
(bad)
jg
adc
in
push
and
movs
push
pushf
aaa
mov
mov
adc
jmp
pop
push
imul
jb
inc
mov
(bad)
(bad)
out
out
fwait
inc
pop
imul
fsubr
lods
pop
sbb
mov
jnp
(bad)
(bad)
(bad)
inc
leave
stos
pop
adc
inc
(bad)
jmp
dec
and
push
xchg
in
adc
mov
mov
es
sub
inc
sar
jg
mov
push
mov
(bad)
movs
xor
xor
shl
dec
pop
pushw
mov
mov
popa
and
push
fsub
pop
lods
and
(bad)
(bad)
mov
add
dec
push
cmps
pusha
movs
fcom
pop
outs
mov
sbb
add
push
sub
stos
scas
and
adc
loopne
lods
lock
xchg
ins
adc
or
(bad)
(bad)
(bad)
inc
cmp
mov
dec
int3
(bad)
adc
mov
add
or
ins
cmps
push
pop
bnd
pop
clc
adc
cli
fiadd
mov
(bad)
(bad)
(bad)
jmp
xor
or
fnstenv
mov
or
mov
(bad)
(bad)
call
mov
mov
pusha
push
das
mov
xchg
mov
ror
jb
jmp
(bad)
(bad)
(bad)
call
xchg
sub
xor
or
(bad)
fwait
call
xlat
cmp
inc
xor
push
mov
(bad)
(bad)
call
ficom
(bad)
sub
jnp
pop
fst
stos
out
gs
(bad)
call
and
cmp
(bad)
jg
xchg
or
jp
das
call
stos
inc
jns
xchg
xchg
cli
aaa
fsub
inc
sbb
cwde
pop
fild
sti
mov
ret
pop
rol
inc
(bad)
(bad)
(bad)
dec
js
cs
mov
pop
dec
xchg
popa
sub
add
(bad)
(bad)
ficom
ret
jge
adc
jb
cmovne
loopne
inc
js
xchg
cmc
loopne
lock
pop
outs
adc
adc
(bad)
sti
mov
dec
adc
xor
das
mov
inc
jae
dec
add
clc
or
push
cdq
es
(bad)
(bad)
(bad)
call
push
cmps
sub
inc
and
es
xor
ja
pop
movs
outs
adc
pop
mov
cli
pop
hlt
inc
inc
frstor
ror
inc
adc
or
push
adc
inc
in
cwde
dec
(bad)
out
jp
rol
jecxz
inc
pop
(bad)
(bad)
(bad)
call
cmp
mov
test
push
cdq
test
jmp
sbb
(bad)
call
retf
inc
cmc
push
push
or
(bad)
outs
jle
adc
push
add
daa
leave
std
cmps
(bad)
dec
rol
push
fwait
fwait
dec
or
adc
xchg
fwait
jae
ins
mov
push
xor
enter
(bad)
cld
(bad)
(bad)
(bad)
cli
ror
inc
add
dec
xor
push
or
sbb
into
mov
ja
dec
or
mov
xor
jns
mov
leave
adc
(bad)
(bad)
(bad)
inc
jg
jae
fidiv
and
mov
jns
mov
lods
(bad)
(bad)
(bad)
call
gs
pusha
fstp
pop
mov
add
aas
and
neg
fsubr
cmp
sbb
xchg
rcl
rcr
inc
(bad)
mov
iret
(bad)
jb
sbb
dec
xchg
cwde
sbb
add
pushf
into
pusha
(bad)
call
fwait
and
and
movs
or
cmp
sbb
dec
(bad)
(bad)
(bad)
dec
rol
movs
add
xchg
retf
clc
inc
jmp
pusha
mov
cli
xor
pop
push
and
dec
enter
sbb
ins
sbb
loope
or
jo
mov
cmp
sub
test
add
icebp
xor
test
inc
call
cmp
and
mov
outs
sub
mov
add
push
fs
out
inc
ins
sbb
pop
mov
(bad)
(bad)
push
xor
and
push
adc
call
lea
jno
add
pop
mov
pop
test
in
pusha
jne
sub
int3
adc
and
dec
mov
dec
sub
fcomp
push
cmp
cmp
add
adc
fstp
mov
lock
(bad)
(bad)
(bad)
jg
and
and
fcmovne
xchg
adc
mov
dec
ret
cmp
adc
stos
cwde
jecxz
inc
(bad)
(bad)
(bad)
fbstp
mov
or
test
sbb
scas
data16
ret
or
ret
(bad)
push
jp
(bad)
inc
stos
jmp
push
cmp
scas
push
sub
sub
adc
stos
std
inc
jg
cmp
mov
sbb
stos
xor
or
inc
jbe
sbb
adc
enter
xchg
adc
pop
std
(bad)
dec
scas
mov
adc
test
js
les
and
std
cmp
(bad)
dec
clc
ds
or
fwait
call
adc
dec
inc
sbb
call
mov
jg
jge
fisub
mov
or
ins
test
(bad)
(bad)
(bad)
call
mov
stc
push
lea
jge
cmp
jnp
icebp
stos
mov
shl
pusha
mov
aad
sub
test
call
push
or
jecxz
adc
(bad)
(bad)
(bad)
dec
pop
mov
lock
mov
in
mov
sbb
push
inc
gs
mov
cmp
in
loop
loope
jecxz
ja
(bad)
(bad)
inc
jmp
jns
push
or
pop
jbe
test
sub
loope
aas
iret
test
(bad)
jmp
mov
inc
hlt
loope
cmp
hlt
outs
fwait
jns
and
jmp
out
pop
cmp
mov
mov
jb
js
test
mov
pop
add
jg
int
sbb
dec
push
jb
jp
xor
(bad)
jmp
mov
mov
js
fistp
ret
ret
inc
push
aam
sub
xchg
mov
xchg
cmp
jno
sub
jg
icebp
pop
cwde
jnp
repnz
cli
stos
lahf
inc
lea
cmp
retf
(bad)
(bad)
(bad)
dec
mov
xor
fisttp
adc
shl
movs
aam
(bad)
(bad)
dec
test
xchg
nop
inc
jne
adc
inc
jno
sbb
jmp
outs
sar
push
call
lods
pop
mov
sub
sbb
push
std
sub
mov
pop
fnstsw
jmp
adc
hlt
jmp
test
push
je
nop
xor
sbb
adc
adc
inc
and
in
add
jae
cs
aad
fwait
jg
sbb
shr
repnz
addr16
outs
arpl
pop
stc
xor
and
sar
fs
pop
sub
adc
and
add
sub
test
pop
add
xor
and
test
add
(bad)
(bad)
out
in
ds
add
adc
adc
dec
add
or
sub
add
push
mov
push
leave
fs
dec
dec
inc
pop
pop
adc
add
add
push
sub
inc
add
and
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
pop
mov
add
sub
retf
gs
rcl
cwde
retf
nop
repnz
inc
ins
jne
push
xor
gs
mov
js
sbb
or
test
xor
add
xor
cmp
pop
push
imul
xor
ret
arpl
popa
cmp
xor
pop
push
shl
je
push
inc
mov
push
out
cmp
inc
lea
adc
push
ins
sbb
add
xchg
sub
pusha
sbb
popf
test
(bad)
sahf
mov
pop
adc
pushw
in
shl
dec
imul
adc
in
inc
imul
sbb
movs
pop
push
add
test
pop
dec
gs
inc
lea
and
cmp
test
or
shl
out
popa
mov
fucomp
ins
outs
jbe
push
mov
push
jo
add
dec
and
mov
push
outs
jo
rol
sub
inc
addr16
xor
ret
jecxz
sbb
pop
jmp
inc
das
(bad)
push
fsubr
sbb
daa
mov
je
push
inc
cmp
xchg
cmp
jmp
dec
test
shr
or
daa
retf
sahf
sub
push
pop
push
mov
inc
xchg
movs
mov
(bad)
mov
cmc
sub
cmp
cmp
inc
enter
js
ins
loopne
fs
jno
dec
outs
mov
in
mov
xor
push
stc
mov
xchg
dec
xor
pop
dec
push
outs
inc
dec
imul
fsub
outs
inc
xor
test
xor
popa
mov
sub
not
xchg
pop
sbb
aas
inc
into
push
bound
jbe
shr
mov
mov
fs
imul
and
and
jmp
movs
xchg
popf
cmp
inc
int
sub
loopne
ret
inc
sub
fs
xor
test
pop
sub
push
xor
push
or
sub
add
cwde
xlat
jbe
sbb
pop
push
outs
ins
sbb
lds
mov
dec
mov
aam
pushf
or
dec
or
pop
xchg
shl
xor
mov
cdq
rcr
inc
je
daa
mov
call
jne
xchg
aaa
push
loop
sub
mov
xor
mov
mov
retf
push
mov
jae
and
dec
sbb
pop
push
rcl
fisubr
add
push
xor
inc
xchg
mov
cwde
cmc
mov
ret
inc
inc
mov
cmp
mov
ja
jecxz
pushf
dec
loopne
fsubr
push
outs
je
retf
push
mov
cmp
xchg
outs
adc
aas
add
lds
xor
stos
imul
ret
and
adc
loop
ins
dec
sub
outs
sub
arpl
das
popa
scas
add
sbb
movs
dec
daa
pop
sbb
inc
xchg
xchg
je
and
cmp
add
(bad)
cmc
cwde
jmp
(bad)
jge
inc
dec
inc
outs
dec
and
aam
xchg
ss
psubsw
nop
dec
push
sub
fnstcw
fdiv
dec
in
enter
push
dec
push
xchg
dec
sub
push
adc
xor
fidiv
jecxz
dec
dec
scas
loopne
test
out
outs
push
sbb
jnp
mov
je
xchg
cmp
sbb
xchg
push
cmp
adc
add
stos
cmp
es
(bad)
out
bound
addr16
add
inc
je
div
push
dec
inc
dec
adc
imul
pop
add
into
jne
movs
inc
adc
(bad)
dec
sbb
and
aaa
dec
or
das
push
daa
cmp
ins
retf
pushf
mov
xor
push
jmp
test
sbb
rol
mov
clc
add
dec
gs
push
fwait
xchg
fst
pop
sub
cmp
das
xlat
and
jno
cmp
xchg
scas
add
push
and
push
enter
add
rcr
jo
inc
mov
sbb
fisubr
and
fwait
ret
icebp
repz
push
retf
or
jb
dec
retf
xor
movs
ds
inc
xor
mov
push
addr16
fsubp
arpl
ins
mov
push
leave
mov
inc
gs
mov
mov
ins
push
or
lock
dec
sub
adc
rcl
inc
outs
js
adc
inc
adc
ins
stos
out
addr16
fisttp
gs
inc
sub
cmova
jb
mov
inc
add
inc
xor
pop
out
lods
les
jnp
pop
adc
test
sbb
sbb
je
aaa
cmp
inc
lahf
push
push
es
loope
add
and
fs
add
mov
inc
pushf
inc
mov
sbb
mov
push
loope
inc
jmp
push
movs
retf
mov
je
xchg
or
lock
loope
movs
rcl
data16
clc
xchg
dec
mov
lahf
mov
loope
push
mov
out
ins
rol
cmp
mov
outs
push
popa
jae
pop
mov
xor
pop
jecxz
mov
and
sub
aas
(bad)
mov
ins
dec
outs
dec
or
mov
jmp
daa
into
imul
sbb
push
sub
mov
mov
mov
add
add
and
rcl
sbb
jo
ret
dec
inc
cmp
sub
xor
not
adc
sub
xor
sbb
push
loop
mov
call
cmp
sbb
push
sub
jbe
xchg
pop
aaa
inc
pop
mov
out
ret
cmp
sbb
inc
jne
es
je
in
jmp
je
push
xchg
(bad)
push
lds
add
push
mov
push
jae
das
mov
sbb
pop
popa
and
lods
xor
jb
pop
lock
or
iret
add
sar
outs
test
gs
cwde
add
add
push
dec
and
loop
mov
dec
pop
pop
or
or
xchg
ins
repz
and
jg
in
xor
dec
daa
dec
and
pop
stos
ins
test
cmps
daa
cmp
sti
nop
sub
int
add
pushf
fwait
add
mov
push
pop
or
ret
pop
push
push
inc
jo
sbb
and
adc
rcl
sbb
outs
cmps
sbb
mov
rcl
ins
sub
ins
inc
and
sub
add
add
sub
retf
jo
sbb
push
fstp
sar
cmp
xor
mov
ret
fist
test
mov
jl
xchg
pop
sbb
pop
inc
leave
mov
mov
(bad)
enter
lea
xchg
pushf
lods
in
push
jne
add
cmps
repz
movs
cmp
cmp
cmp
sti
and
ins
das
ror
adc
push
mov
inc
cmp
pop
stos
add
push
mov
in
push
(bad)
fcom
into
or
or
pop
sub
cmps
inc
cmp
lods
cmp
adc
adc
pop
rcr
push
pop
aas
adc
and
xchg
xchg
sbb
sbb
jmp
ins
test
pop
outs
push
call
and
rcl
ins
pop
add
push
mov
addr16
fdecstp
popf
adc
adc
aas
inc
outs
cmp
stos
and
dec
add
push
sub
fs
dec
rcr
lock
lds
shl
jns
aam
sbb
jg
je
mov
push
or
sbb
dec
dec
imul
xchg
ret
xor
push
or
enter
pop
and
jbe
jno
push
mov
cld
inc
outs
inc
dec
mov
(bad)
out
inc
cli
sub
sbb
pop
jl
mov
inc
clc
aaa
in
xlat
test
imul
inc
push
jb
push
sub
aam
loopne
inc
add
test
push
jmp
fisubr
mov
call
jns
dec
je
jo
add
add
and
(bad)
ss
xchg
xchg
xchg
out
and
pop
inc
mov
js
je
cmp
call
add
shl
gs
shl
or
bnd
xor
or
add
or
push
jg
or
pop
ud2
add
pop
and
lock
xchg
add
sbb
sub
mov
(bad)
(bad)
cmp
push
adc
lock
adc
or
lock
add
outs
pop
movs
adc
add
mov
adc
or
mov
loopne
adc
sub
lock
add
jne
ja
(bad)
pop
add
pop
add
lock
add
push
add
lock
xor
jae
lock
(bad)
(bad)
call
add
stos
cmps
xchg
or
adc
push
sbb
movs
add
or
adc
xor
lock
add
pop
or
mov
pop
in
jg
aad
inc
lock
push
and
sbb
xlat
(bad)
jmp
adc
lock
add
lock
push
jnp
or
push
xlat
xor
xchg
and
pop
sub
or
sub
rcr
pop
shr
push
invd
adc
or
or
in
stc
ud2
push
pop
movups
(bad)
int3
outs
push
push
sbb
pop
or
jb
pop
mov
adc
push
inc
or
pop
pop
add
aas
push
mov
and
invd
dec
invd
ret
outs
fwait
std
push
add
add
and
cmp
scas
fs
add
mov
inc
lock
test
pop
sub
mov
(bad)
jg
mov
and
mov
and
test
sub
lock
add
syscall
retf
sbb
dec
repz
adc
fiadd
or
sbb
add
aam
push
sub
aad
add
das
add
lods
clc
cmps
push
lea
xor
js
add
cld
sti
xchg
scas
add
sbb
and
clc
mov
sub
jnp
or
add
sahf
push
fdiv
cmp
(bad)
mov
jo
and
jo
and
daa
xor
adc
add
cmp
sbb
cs
and
adc
sbb
fmul
mov
add
adc
pop
adc
cs
and
std
or
add
imul
cmp
push
stos
mov
out
(bad)
ficom
dec
add
or
push
or
add
(bad)
inc
adc
das
and
xor
or
add
and
pop
inc
daa
push
cmp
or
inc
or
and
dec
(bad)
inc
movhps
xor
dec
xor
dec
clc
clc
or
push
inc
lock
add
stos
fadd
or
cs
fwait
add
push
or
and
or
add
or
ins
pop
push
dec
xor
cld
or
jo
add
cmp
xor
push
pop
pop
data16
cmp
lock
ss
in
mov
adc
jmp
dec
sbb
and
push
push
cmp
cmps
inc
adc
dec
lock
push
push
jb
xor
adc
or
jbe
dec
push
rol
(bad)
out
adc
adc
adc
xchg
ins
sbb
xchg
cmp
push
sub
inc
sub
xor
xchg
push
(bad)
(bad)
or
push
lods
pop
add
inc
sub
fild
lock
mov
add
add
shr
ficomp
or
adc
mov
and
add
push
sbb
(bad)
(bad)
pop
ret
push
or
adc
push
xor
jno
das
cmovge
loope
lods
jmp
and
sbb
je
mov
mov
mov
or
imul
unpcklps
push
movaps
sbb
js
mov
cmp
adc
xchg
(bad)
jno
adc
retf
dec
es
es
(bad)
jmp
pop
inc
add
inc
aaa
sub
dec
pop
xchg
dec
or
jl
das
cmp
sti
mov
or
push
imul
jmp
fdivp
jg
adc
sub
inc
adc
adc
aas
add
jmp
xor
adc
rcl
sbb
push
sbb
pop
xor
or
aaa
adc
sbb
or
adc
adc
inc
sub
and
ret
mov
and
push
add
xchg
adc
outs
push
adc
adc
ds
inc
dec
das
adc
adc
sub
xchg
push
test
add
loopne
fsub
rol
or
pop
and
or
ds
sub
cmp
add
sbb
fsub
cmp
push
das
clc
aaa
adc
movsx
or
or
push
movs
and
pop
pop
aaa
aad
ror
add
and
xor
xchg
das
adc
ds
or
sbb
add
lahf
or
call
les
add
add
es
adc
call
adc
xor
cmp
and
inc
cmp
add
pop
push
push
jl
push
inc
mov
add
inc
jo
(bad)
jno
mov
movs
iret
inc
call
adc
aad
add
lock
dec
jmp
add
jae
push
push
and
daa
in
mov
and
and
mov
dec
loopne
sub
sub
sbb
push
push
sub
out
mov
ror
mov
jns
lock
or
ja
sti
div
or
adc
(bad)
mov
xor
add
outs
movs
lock
push
mov
in
outs
push
pop
add
inc
or
or
rdtsc
or
cmp
sub
sub
mov
mov
fsub
lock
add
add
push
sbb
jle
inc
sbb
push
xchg
sbb
mov
loope
pop
or
or
adc
es
fcmovnbe
pop
imul
push
dec
sbb
cld
sbb
out
cmp
jl
adc
into
jmp
lock
lock
cld
add
or
sbb
add
adc
psadbw
mov
scas
int
dec
and
outs
or
(bad)
out
or
xor
aas
pop
pop
ja
ins
sub
(bad)
cmps
dec
pop
or
jg
inc
inc
push
jp
pop
dec
bound
or
or
sbb
mov
dec
inc
adc
sbb
sbb
(bad)
or
cmp
daa
pop
xor
mov
fsubrp
adc
getsec
sub
daa
inc
or
jnp
sub
adc
sub
pop
and
mov
es
or
sbb
pop
push
ror
or
ins
fcom
and
push
sub
ss
ds
icebp
add
ds
pop
or
outs
push
sub
cs
daa
lock
mov
inc
and
scas
dec
jmp
(bad)
push
cmp
inc
adc
shl
pop
ss
fs
and
lods
add
add
lock
xor
jbe
sub
cmp
sbb
push
adc
or
(bad)
fist
mov
and
jp
das
inc
and
nop
cmp
push
mov
jg
test
cmp
sbb
or
inc
cmps
mov
push
add
aas
pushf
add
add
outs
(bad)
faddp
push
scas
adc
and
fidivr
add
and
or
(bad)
mov
inc
lock
pop
punpcklbw
lods
(bad)
inc
cmc
push
or
adc
outs
push
lods
lock
xor
movups
xchg
hlt
xor
dec
add
xchg
adc
addr16
inc
popf
and
cmp
inc
mov
pop
pushf
adc
and
sub
push
dec
sub
fist
int
sub
test
mov
cvttps2pi
(bad)
jmp
push
ucomiss
sbb
sub
das
adc
adc
inc
push
bndstx
dec
seto
or
(bad)
cmp
arpl
dec
or
xor
inc
adc
or
sbb
cmp
aaa
push
adc
es
fbstp
ins
fst
xor
add
sbb
push
pop
mov
sbb
push
or
xor
xor
mov
sti
cmp
stc
sub
inc
pop
notrack
pop
cwde
lock
sbb
ins
add
adc
and
push
push
pop
jmp
adc
or
xchg
adc
and
sbb
sbb
push
and
clc
dec
add
sbb
daa
jo
adc
pop
lds
adc
adc
daa
int3
call
sub
mov
adc
adc
clc
daa
adc
push
dec
lock
pop
ja
adc
sti
mov
mov
or
push
push
jno
sbb
(bad)
ficomp
mov
xor
add
adc
or
xchg
push
call
icebp
jb
push
movlps
adc
loopne
inc
lock
add
lock
jbe
inc
pop
pop
adc
adc
or
ja
nop
movs
adc
call
or
daa
add
adc
out
cmp
inc
mov
jg
jmp
or
push
daa
xor
jno
adc
mov
add
das
push
xchg
xor
sub
(bad)
mov
dec
inc
sub
outs
lods
push
lock
dec
shr
push
or
or
or
xor
pop
xor
adc
aas
fcom
inc
sbb
xchg
in
sbb
call
sbb
xor
sbb
or
das
mov
sbb
arpl
or
sub
stos
sbb
xor
daa
or
sbb
inc
mov
jo
je
push
push
sysenter
lock
fdivr
or
cdq
sub
test
adc
and
loopne
pop
fisubr
sbb
inc
ret
scas
inc
inc
push
test
sub
adc
(bad)
jg
cmp
and
adc
and
add
dec
adc
jp
and
rcr
or
push
call
sbb
mov
pusha
sbb
adc
push
pop
fcomp
dec
(bad)
sbb
pop
add
lea
or
or
jmp
cmp
data16
daa
add
xlat
lea
iret
cmp
pop
imul
xor
pop
push
and
xor
xor
sbb
cmp
jno
add
or
jmp
or
add
or
das
and
sbb
or
add
jp
mov
or
mov
fimul
es
jg
(bad)
mov
adc
xor
cs
and
sub
out
and
push
sbb
aaa
pop
inc
and
adc
cmp
jmp
sub
sub
pop
adc
ja
xchg
or
leave
cmps
sbb
or
inc
adc
sub
shr
sbb
ret
pop
xor
mov
pop
fadd
sbb
push
lock
fimul
mov
inc
or
xor
movs
xchg
das
push
addr16
inc
jmp
mov
lock
and
and
inc
push
or
lock
jecxz
push
sub
sub
mov
sbb
add
addr16
or
hlt
adc
add
(bad)
add
ret
test
fisttp
jmp
pop
fdiv
add
daa
test
or
push
or
(bad)
push
in
es
cmp
daa
adc
(bad)
lock
pop
or
sbb
add
adc
mov
or
cmp
in
(bad)
inc
sub
xor
imul
or
mov
cmp
dec
(bad)
pop
xor
mov
test
or
and
push
out
sbb
mov
outs
and
mov
mov
cmp
adc
mov
cmp
push
sbb
pop
ja
clc
icebp
outs
cld
inc
adc
adc
push
cwde
scas
or
pop
or
jg
dec
adc
inc
lock
mov
cmps
sbb
pop
add
add
cli
mov
or
sub
cmp
pop
dec
adc
sbb
dec
pop
outs
inc
dec
xchg
add
in
scas
adc
sbb
cmp
dec
inc
adc
sub
sub
add
push
jl
mov
mov
inc
pop
push
mov
std
ja
or
sbb
push
add
inc
rdpmc
cs
fsub
aad
or
sbb
sbb
and
(bad)
pop
cs
out
js
adc
sub
pop
add
shl
daa
adc
mov
cs
xor
lock
dec
dec
add
ror
push
xor
lock
add
adc
add
pop
jge
xchg
xchg
pop
cmp
mov
cmps
fadd
or
outs
stos
fistp
outs
sbb
or
mov
sub
sbb
mov
push
adc
sub
sub
xor
icebp
(bad)
jmp
adc
push
sbb
adc
adc
adc
fisubr
cmp
ja
mov
ficomp
jb
mov
sahf
or
(bad)
adc
pop
jl
push
mov
pop
mov
push
mov
and
or
ins
adc
or
aaa
push
or
in
add
mov
enter
lock
and
push
rol
mov
sbb
movups
out
mov
std
mov
push
adc
push
ins
int3
adc
sbb
nop
pxor
mov
sbb
dec
push
adc
or
or
mov
adc
repnz
push
mov
test
push
inc
daa
lock
add
mov
mov
sbb
or
aas
adc
or
imul
or
fstp
xchg
pop
pop
push
add
jg
and
lock
psraw
inc
or
cs
rol
outs
aaa
inc
push
cmp
add
mov
mov
lods
lock
lock
add
add
adc
mov
(bad)
xor
inc
das
pop
pop
pop
mov
or
and
jle
fs
mov
outs
jg
pop
adc
cmp
pop
xor
push
bound
pop
push
adc
and
cmp
jo
adc
pusha
pop
lock
sar
or
sbb
enter
and
add
or
sub
mov
sbb
fcom
add
sub
mov
or
ds
data16
jno
or
adc
inc
xor
adc
movs
aaa
lea
je
inc
push
and
push
jp
ret
and
add
mov
and
inc
xor
mov
aas
dec
lahf
mov
adc
dec
inc
nop
jmp
jmp
int
jmp
popf
jae
push
cmp
push
adc
or
cmp
inc
cmp
sbb
nop
adc
sbb
push
cdq
pop
and
gs
cld
inc
and
push
sub
sbb
sub
push
pop
inc
dec
sbb
jae
js
mov
sbb
push
cmp
mov
adc
daa
pop
lock
add
add
sbb
adc
push
cwde
pop
lock
add
sbb
fcomip
ja
mov
push
cmp
mov
movhps
sbb
push
pop
maxps
das
mov
adc
or
or
fstp
or
sub
das
or
pop
xchg
pop
mov
mov
mov
or
les
rcl
sbb
xlat
jg
sub
xor
add
lock
adc
ins
ss
rcr
orps
add
push
and
bound
xor
jo
add
jo
dec
cmps
aaa
call
fwait
or
or
lock
call
adc
lock
lea
lock
and
(bad)
mov
xor
daa
dec
push
sub
out
add
into
adc
std
ficomp
rol
or
add
xchg
or
add
add
and
jno
lock
cdq
mov
add
jae
push
adc
push
jg
pusha
push
mul
lock
dec
adc
mov
adc
bound
push
sub
sbb
ja
sbb
pop
dec
in
push
das
sbb
inc
or
adc
pop
jle
sbb
cmp
fbstp
inc
lahf
mov
inc
pop
sbb
(bad)
(bad)
jmp
(bad)
sbb
add
push
pmaxub
pushf
and
inc
add
rol
and
sub
adc
adc
adc
push
adc
or
adc
and
(bad)
pop
adc
adc
pop
mov
ss
outs
in
es
(bad)
inc
sub
and
push
or
or
data16
cmps
aaa
test
popw
es
pop
bound
xor
or
or
pop
adc
cmp
cmp
test
add
(bad)
sub
add
sahf
push
add
mov
or
(bad)
pop
adc
and
or
rol
inc
add
in
add
or
push
jp
push
cmp
jg
add
inc
sbb
adc
and
cmp
jmp
sbb
movups
jne
adc
jl
mov
es
pop
and
ja
and
or
jno
test
pop
std
cmp
sbb
xor
xor
xor
inc
xor
out
pop
adc
or
rcr
xor
enter
call
pop
push
pop
sub
dec
mov
push
add
lods
xchg
inc
mov
inc
cmp
adc
aas
adc
outs
inc
or
jecxz
cmp
adc
inc
pop
inc
retf
test
js
outs
in
jmp
pop
push
add
gs
sbb
pop
push
adc
dec
daa
sbb
dec
xor
icebp
call
popf
xor
(bad)
(bad)
and
xchg
pop
pop
or
jmp
add
(bad)
pop
and
or
push
sbb
sub
in
fs
cmp
mov
xor
das
sar
int3
repz
pop
or
pop
cwde
cs
cmps
sbb
cmp
cmp
sub
and
jg
dec
adc
dec
pop
or
cs
sub
push
mov
inc
push
sbb
sbb
and
push
std
pop
jmp
adc
sbb
pop
sbb
jle
jecxz
sub
or
retf
or
or
sub
pop
sbb
cwde
fld
adc
(bad)
push
sbb
add
add
push
pop
fs
push
(bad)
pusha
sbb
sub
lds
rcl
in
and
dec
aam
idiv
ret
and
cmp
and
or
jp
lods
or
cmp
(bad)
adc
stos
inc
sbb
mov
adc
adc
add
push
adc
jge
sub
dec
sbb
aas
sbb
or
sbb
or
call
cmp
adc
or
cvtps2pi
or
aaa
sub
jo
push
dec
jmp
jmp
or
or
or
or
arpl
call
ficom
sbb
sbb
pop
mov
add
add
ret
(bad)
(bad)
mov
or
inc
cmovs
pop
and
adc
sub
adc
fsubr
sbb
or
adc
xchg
pop
add
add
scas
jge
push
dec
pusha
inc
and
and
inc
movs
jle
cmp
retw
out
xchg
ins
rcpps
adc
nop
pop
mov
sub
sub
dec
push
mov
scas
jp
rcr
sbb
or
adc
fs
cmp
cld
mov
sbb
inc
mov
ja
add
sbb
or
cmp
pop
sub
push
or
inc
pop
pop
push
and
mov
lods
or
xor
cwde
mov
or
and
add
jno
mov
push
imul
das
add
adc
or
adc
bound
or
xchg
push
sti
das
clc
adc
sbb
popa
cmp
add
add
and
popf
fcomp
enter
push
out
imul
pusha
movs
add
adc
daa
lock
(bad)
mov
adc
pop
das
and
and
and
dec
sbb
adc
sub
push
stos
in
sbb
adc
xor
sbb
cs
cmp
cli
jg
mov
inc
xor
dec
jbe
xor
add
sbb
and
sbb
sbb
pop
lock
into
repz
inc
or
sub
add
pop
inc
pop
adc
add
ucomiss
sti
add
(bad)
cmp
rcr
and
inc
fnstsw
dec
mov
and
shl
retf
adc
adc
adc
dec
fbstp
sbb
dec
bound
mov
and
adc
dec
das
cli
test
cmp
adc
push
adc
push
out
push
sbb
pop
(bad)
movs
enter
es
push
or
add
inc
fwait
je
push
push
adc
lock
dec
int
pop
adc
inc
add
les
add
jbe
push
xor
mov
sbb
pop
loop
sub
inc
sysenter
and
sub
sub
push
mov
sub
dec
jp
pop
add
sbb
sbb
clc
push
mov
rdtsc
and
jp
stos
aam
dec
mov
add
test
pop
mov
fimul
je
inc
pop
ret
or
add
or
int3
fisub
add
loopne
add
jle
lock
add
aas
adc
push
push
or
pop
xor
push
cmp
xor
add
xor
mov
xchg
aas
pusha
pop
pop
and
out
call
mov
mov
push
adc
inc
stos
popa
and
or
into
out
shr
add
jo
xchg
adc
loope
and
add
std
mov
and
jae
jnp
sbb
inc
adc
and
push
shr
pop
sbb
sbb
outs
add
aam
add
adc
jmp
das
adc
jg
mov
addr16
sub
inc
cmp
or
daa
call
or
sbb
fs
inc
leave
popa
adc
adc
xor
sbb
mov
adc
pop
rcr
or
add
mov
adc
outs
fdivr
ret
js
push
and
lea
in
adc
push
scas
or
push
loop
xlat
lock
or
sub
cld
or
dec
push
xor
add
or
data16
mov
push
pop
sub
inc
add
mov
mov
scas
push
lock
sbb
test
mov
or
xor
call
sub
sbb
sub
push
push
mov
je
(bad)
mov
je
in
and
inc
xor
test
push
not
inc
mov
test
pminub
call
cmc
into
adc
and
stos
and
mov
or
cmp
pop
adc
outs
pop
sbb
or
lock
add
adc
sub
adc
mov
ja
pop
add
sbb
pop
sbb
mov
das
(bad)
and
js
push
pop
sbb
push
imul
adc
pop
or
adc
cld
push
and
adc
(bad)
(bad)
(bad)
(bad)
mov
ss
and
sbb
adc
outs
push
xor
sub
pusha
pop
adc
cmp
adc
pop
pusha
push
pop
pop
inc
adc
pop
add
and
pop
push
inc
and
or
inc
push
movq
or
adc
or
adc
mov
lock
lock
sub
aad
and
mov
(bad)
call
movhps
or
movs
inc
dec
inc
xor
jae
push
cmp
aas
or
adc
push
add
cmp
sub
(bad)
call
es
fisub
xchg
sbb
xor
lea
adc
sub
or
(bad)
outs
mov
and
lods
ds
or
sbb
or
cmp
or
out
adc
cmp
adc
pop
or
and
push
or
and
not
loop
fbstp
pop
bound
and
and
and
push
mov
or
inc
push
dec
and
rcr
sbb
pop
or
pop
call
sub
jo
aaa
push
ja
sbb
fiadd
mov
daa
mov
loopne
adc
inc
lds
and
xor
push
cmp
(bad)
jno
sar
lock
add
push
push
shl
xor
pop
pop
sbb
(bad)
dec
lock
and
or
das
push
cmp
and
pop
adc
or
cmp
add
in
sub
push
or
sbb
arpl
sbb
adc
out
clc
pop
sub
mov
adc
adc
(bad)
pop
mov
cmp
xchg
xor
push
out
clc
push
adc
push
push
adc
ins
ret
jbe
xlat
jmp
cmp
ds
sbb
imul
sbb
pushf
aaa
dec
sbb
or
add
lods
pop
xchg
push
sahf
push
cwde
sahf
les
bound
mov
mov
dec
sub
add
hlt
add
dec
inc
inc
ja
push
push
push
sbb
addr16
clc
xchg
cli
add
add
xchg
(bad)
jmp
push
add
mov
add
(bad)
(bad)
mov
and
call
jnp
sub
or
popa
add
adc
xor
dec
or
xchg
mov
fcomp
dec
xor
push
call
fs
adc
push
add
outs
ror
pushf
push
mov
lock
lock
add
xor
ds
dec
or
push
push
mov
shl
pop
push
and
and
adc
push
add
pop
pop
dec
push
adc
iret
or
add
ja
or
adc
lock
push
cmp
daa
ss
pop
pop
pop
push
pminsw
inc
push
adc
xor
inc
adc
inc
pop
adc
cs
sbb
outs
adc
cld
dec
sbb
or
and
adc
pop
and
or
push
and
cmps
pop
inc
outs
ss
sub
xor
or
daa
mov
mov
adc
popa
or
pop
add
lock
lock
call
sbb
jbe
and
sub
sbb
rol
cld
push
add
popa
fimul
xchg
push
jo
or
push
xor
jp
in
pop
cmc
jnp
or
sub
hlt
sbb
jl
aas
outs
cld
cmp
or
and
inc
mov
mov
and
pop
add
mov
fcomip
ret
jle
or
ins
add
xor
push
neg
sub
cld
and
dec
mov
and
jo
adc
pop
sub
push
or
jg
repz
push
push
and
sub
stc
mov
xor
mov
psadbw
mov
and
andps
sub
retf
push
into
shr
mov
fisub
adc
or
adc
mov
push
cmp
pushf
adc
lock
or
adc
add
pop
add
adc
jg
dec
or
ret
push
adc
jo
push
out
pop
adc
xchg
daa
popa
adc
aam
sbb
and
pop
push
scas
cli
inc
adc
aaa
or
outs
mov
xor
mov
xor
xor
mov
xor
xor
xor
pop
sbb
ds
pop
fwait
punpcklbw
dec
or
adc
mov
xchg
es
fisttp
mov
test
sub
pop
push
fdivr
dec
call
adc
cmovo
xor
jbe
sub
sbb
mov
lock
mov
inc
dec
push
inc
push
pop
pop
sbb
clc
adc
and
jbe
push
or
mov
push
rol
pop
in
mov
add
mov
(bad)
fild
inc
sbb
iret
adc
aaa
jae
adc
mov
sbb
or
movsx
adc
adc
inc
or
pop
ret
push
sbb
int
and
je
or
call
pop
or
add
add
pop
inc
xor
mov
dec
jo
std
adc
pop
mov
pop
adc
sbb
cs
inc
pop
fisttp
adc
dec
sbb
pusha
cmps
inc
sbb
inc
cmp
sub
or
and
sbb
es
xor
imul
pop
outs
movs
inc
mov
adc
push
sbb
push
or
cmp
push
and
in
add
or
sbb
or
add
cdq
mov
xor
or
mov
jmp
mov
jae
stos
ja
lock
cmp
and
in
add
fcomip
adc
sbb
enter
push
dec
xor
or
or
icebp
js
nop
sub
repnz
or
adc
sar
ret
push
adc
lock
mov
pop
outs
aam
sbb
jmp
push
or
sbb
idiv
and
sub
sub
sbb
loop
cmp
pop
push
xor
jmp
sbb
aaa
sbb
jnp
mov
stos
icebp
pop
sbb
add
sbb
pop
les
pop
cs
sysexit
sbb
xor
(bad)
(bad)
fisttp
xor
fcomp
xor
push
mov
aaa
inc
imul
sub
dec
xor
sbb
and
ficomp
sbb
(bad)
jmp
popa
sbb
push
jecxz
retf
or
or
push
and
mov
dec
lock
jle
or
adc
in
or
adc
out
or
inc
mov
lock
add
or
xchg
jmp
lock
add
jnp
mov
jno
cmp
lock
add
sbb
and
lock
rol
pop
scas
add
cmc
mov
int
lock
mov
fld
mov
sbb
and
pop
movaps
sub
pop
xor
or
test
push
int3
add
popf
movhps
lock
inc
setnp
stos
cli
arpl
mov
jmp
and
imul
xchg
jno
sbb
setp
xchg
and
jno
xchg
dec
xor
sbb
jns
shr
sbb
adc
xor
mov
xor
cmovl
pop
cmp
ja
rol
les
mov
sar
movs
adc
sub
jmp
lock
add
cs
mov
lock
jg
das
sbb
lds
pusha
adc
inc
cmp
push
out
sub
inc
jo
jmp
push
imul
daa
add
mov
pusha
xchg
push
sbb
xchg
hlt
int3
or
std
aaa
jge
dec
inc
fs
clc
add
adc
pop
add
xor
call
enter
inc
pop
adc
cmps
or
mov
mov
push
scas
mov
inc
dec
pop
push
inc
ss
cmc
push
and
mov
adc
pop
fdivr
pop
cld
sbb
adc
push
jbe
divps
pop
mov
(bad)
sahf
cmp
test
cmovp
dec
inc
je
jg
pop
jle
les
mov
add
xchg
cmp
mov
mov
sbb
xchg
xchg
dec
mov
ss
add
rcl
enter
xchg
fmul
sub
(bad)
xlat
add
sub
addr16
mov
cmp
and
adc
and
sbb
fisubr
daa
jle
xor
or
aad
addr16
sbb
xor
cwde
imul
inc
das
inc
sbb
cdq
cmovbe
ss
jo
or
mov
es
push
push
jo
cpuid
mov
pushf
dec
add
ins
(bad)
fisttp
out
or
adc
popa
and
outs
(bad)
out
mov
push
push
adc
adc
xor
sbb
or
movs
xchg
push
lods
mov
sub
or
lock
push
lock
(bad)
fisttp
push
pop
pop
aas
cmp
xchg
mov
adc
jns
pushf
lock
scas
std
(bad)
fbstp
addr16
inc
xor
daa
xchg
out
into
(bad)
cmp
xchg
pop
and
jg
std
data16
inc
and
or
cmp
je
pushf
adc
jg
cmp
jmp
mov
pop
popa
add
ret
push
call
push
xor
in
scas
unpcklps
loopne
pop
mov
pop
repnz
mov
or
stos
xor
or
sub
or
add
push
adc
jnp
push
sub
mov
xor
(bad)
outs
aaa
push
sbb
push
push
pop
adc
pop
or
adc
adc
mov
pusha
inc
ss
push
or
add
aam
mov
push
push
push
sbb
adc
and
mov
adc
cs
(bad)
dec
push
cmp
and
or
and
icebp
add
add
pop
outs
(bad)
push
or
stos
jmp
into
pop
add
stos
sti
push
add
pusha
fs
add
jmp
push
mov
mov
aam
cmovp
lock
lock
add
lock
push
cmp
jle
dec
dec
inc
je
or
popf
push
pop
cld
jg
shl
mov
lock
add
mov
fdivr
hlt
out
stos
or
add
or
outs
fidiv
or
and
out
(bad)
inc
lock
pop
push
or
jo
or
and
ja
adc
and
data16
sbb
dec
adc
push
adc
xor
inc
add
pop
add
std
pushf
pop
dec
push
or
pop
sub
sub
mov
or
and
in
xchg
xor
js
test
push
pop
inc
dec
inc
add
out
mov
or
xchg
or
mov
sbb
(bad)
call
push
mov
dec
add
sub
jmp
push
and
push
or
adc
cmp
pop
or
enter
pop
inc
push
push
jo
aaa
or
mov
sub
adc
pop
lock
(bad)
in
mov
xor
add
or
scas
jmp
adc
and
or
inc
push
push
lea
sbb
xor
sbb
add
dec
xor
mov
sti
jg
dec
cdq
sar
jb
jne
jae
js
push
es
fistp
mov
sub
repnz
mov
cmp
jae
lds
push
dec
adc
pop
sub
dec
daa
js
xchg
mov
jmp
adc
cli
push
adc
and
or
lock
mov
pop
jo
or
dec
cmp
dec
sbb
dec
lock
add
or
dec
cld
inc
jle
or
or
adc
push
fimul
sbb
inc
and
push
cmp
jne
adc
add
sub
mov
adc
int3
clc
adc
cwde
dec
or
and
fimul
(bad)
imul
push
push
mov
or
call
jo
dec
outs
pop
(bad)
(bad)
outs
add
adc
aam
sbb
test
(bad)
sub
adc
dec
dec
push
ret
cs
popf
cdq
mov
sahf
xor
retf
push
repz
call
and
sub
jp
or
or
push
ss
or
and
sbb
or
loopne
add
push
mov
dec
add
(bad)
sbb
and
mov
mov
mov
sbb
push
loopne
adc
add
cld
in
fcom
popa
pop
add
pop
fistp
sub
sbb
sbb
push
outs
int
sbb
jo
inc
pop
dec
add
mov
imul
sbb
sbb
adc
xlat
data16
xor
scas
mov
adc
sbb
or
retf
pop
loopne
cmp
or
push
gs
sbb
adc
or
retf
int3
test
sbb
sar
outs
and
sbb
or
inc
cmp
xor
inc
jmp
pop
and
add
sar
cmp
jge
pop
popa
clc
jmp
dec
pop
or
pop
push
push
and
sbb
and
push
and
(bad)
mov
adc
ins
cmp
inc
and
mov
inc
dec
or
repz
or
packssdw
cdq
out
jb
sbb
lock
shr
dec
not
add
cmp
adc
outs
loope
ret
and
cmp
sub
push
push
xor
test
mov
mov
ja
aad
mov
add
jmp
or
aaa
mov
pop
fadd
cmp
es
push
inc
inc
sbb
and
inc
fcomip
xor
and
rol
pop
sub
jmp
add
lock
and
shl
xor
push
sub
das
stos
ins
cmp
ror
popa
xor
ja
imul
scas
push
push
and
sub
push
sub
add
add
inc
add
lea
jle
outs
jo
ins
dec
mov
jl
or
and
daa
or
cmps
ret
fisubr
jno
pop
mov
scas
sahf
sub
outs
add
shl
push
inc
pop
popf
sar
or
data16
ja
or
outs
fs
lock
mov
add
push
sub
or
nop
add
add
pusha
or
sbb
inc
in
and
and
fsubr
or
mov
mov
call
lock
add
adc
adc
xchg
and
mov
adc
call
loope
push
mov
sbb
hlt
or
add
in
jo
mov
adc
outs
fwait
mov
pushf
sysenter
add
pop
cmp
pop
popa
ret
add
lock
rcl
adc
cmp
sahf
or
inc
mov
mov
push
and
sub
mov
arpl
jmp
pusha
pusha
into
push
or
or
cmp
or
or
outs
inc
jmp
and
adc
or
and
inc
sub
or
push
jo
aas
pop
mov
cmp
inc
scas
sub
xchg
inc
sbb
addr16
mov
(bad)
out
outs
add
arpl
data16
les
sbb
xor
daa
or
sub
movs
in
xchg
scas
aas
sub
sbb
ins
aaa
sti
into
push
sub
xor
add
pop
fnstsw
mov
cmp
and
sub
sub
xor
sbb
push
fdivr
dec
and
pop
inc
sub
aas
dec
ins
inc
dec
dec
(bad)
(bad)
(bad)
das
sub
sub
cmp
aaa
and
cmp
inc
xor
xor
cmp
pop
ins
fistp
daa
into
cmp
add
adc
aaa
dec
mov
sub
and
inc
sub
xor
cmp
cmp
xor
xor
inc
sti
pop
xor
jb
push
inc
data16
daa
xor
das
mov
xor
inc
aaa
and
jl
and
(bad)
inc
ss
cmp
inc
adc
dec
push
sub
inc
aas
add
cmp
ins
sub
inc
dec
fimul
cmp
idiv
daa
ins
cmp
cmp
cmp
ds
xor
cmp
rcl
xor
cmp
inc
push
inc
cwde
mov
inc
rol
aaa
xor
xor
inc
cmp
cmp
adc
inc
push
es
sub
add
push
inc
das
sub
push
xor
cmp
add
xor
or
push
xor
ds
or
mov
add
outs
cs
dec
daa
inc
and
ds
jg
(bad)
inc
push
cmp
aaa
das
xor
dec
scas
jb
daa
pusha
xor
cmp
test
(bad)
push
scas
pop
inc
dec
ins
aam
xor
cmp
dec
imul
jno
test
aaa
jecxz
scas
dec
mov
mov
lock
dec
pop
push
inc
cs
inc
sub
inc
pop
pop
push
lods
push
inc
push
(bad)
dec
les
das
inc
push
test
push
jne
mov
dec
lea
xchg
call
jl
xchg
nop
mov
lock
bound
pop
mov
xchg
mov
adc
pop
dec
pop
dec
das
(bad)
(bad)
call
push
aam
sub
and
push
dec
dec
jb
dec
imul
test
call
ficom
cmp
xor
xchg
mov
fstp
dec
shl
hlt
scas
clc
inc
bound
pusha
test
es
add
pop
or
or
add
imul
not
nop
lahf
pop
or
pop
pop
add
and
int3
xchg
repz
or
loopne
and
or
or
cld
adc
sbb
and
test
scas
(bad)
xor
add
or
xor
xor
or
or
cmp
pop
out
add
icebp
adc
sbb
lock
jbe
mov
arpl
mov
in
popa
add
inc
xor
in
test
jno
or
call
or
and
in
add
sbb
mov
push
ret
out
in
adc
or
xor
mov
mov
sbb
xor
and
(bad)
(bad)
les
es
mov
inc
pop
mov
adc
pop
mov
add
leave
push
sbb
inc
rcl
in
stos
or
mov
and
cmps
mov
sub
jbe
xchg
push
jno
test
or
loope
test
clc
add
mov
sbb
inc
and
je
or
xor
nop
cmp
jno
push
jo
lock
push
(bad)
sub
pop
lock
add
xchg
aas
les
adc
sbb
adc
sbb
pop
sbb
dec
cmp
pop
fldenv
sbb
add
adc
xchg
(bad)
div
xor
sar
adc
fnstenv
ins
sub
or
ins
or
leave
pop
pop
shr
push
lds
push
int
adc
push
or
or
pusha
aad
lds
(bad)
outs
pop
dec
add
push
add
pop
push
(bad)
daa
jnp
pop
mov
mov
or
mov
cmp
jae
adc
stos
mov
test
xor
lock
or
fiadd
or
and
sbb
add
or
pop
adc
cmpxchg
rcr
pop
mov
adc
or
adc
xchg
jp
(bad)
fmulp
out
or
add
sti
(bad)
or
dec
add
dec
jbe
push
fbld
xor
sub
cmp
ins
jnp
mov
push
sbb
cmp
push
mov
mov
aas
inc
and
xor
mov
fidivr
or
or
inc
xor
adc
adc
sub
sti
add
(bad)
gs
dec
push
inc
pop
lea
or
or
or
pop
repz
add
mov
sahf
fwait
movs
arpl
or
addr16
xchg
mov
pop
add
dec
mov
pop
xchg
das
cmp
(bad)
push
aad
pop
add
sub
add
sbb
arpl
inc
mov
add
jecxz
ins
imul
movs
or
pop
push
mov
xchg
lahf
inc
inc
ficomp
mov
jns
mov
xchg
retf
push
mov
xor
or
mov
rcr
dec
mov
adc
aaa
stc
mov
das
not
mov
ficomp
imul
or
mov
inc
push
stos
mov
pop
push
pop
push
bound
mov
cmps
aaa
add
inc
mov
pop
push
xchg
adc
push
mov
adc
popf
ss
ret
inc
adc
and
xchg
cmp
bound
inc
sub
xor
jecxz
push
mov
mov
dec
sbb
sub
sbb
or
xlat
xchg
and
sbb
sub
cmp
push
lods
daa
add
push
ins
jge
xor
(bad)
adc
jns
cmp
sbb
xor
add
adc
adc
scas
xor
mov
jnp
pop
push
adc
or
fwait
mov
pop
mov
adc
pop
push
imul
test
sbb
test
mov
fwait
ins
mov
out
das
popa
mov
mov
stc
mov
mov
and
mov
fist
or
sti
shrd
test
lahf
mov
imul
cdq
fstp
adc
pop
cmp
push
mov
sbb
and
in
add
shl
inc
mov
jno
(bad)
mov
mov
push
mov
sub
cwde
or
mov
and
xchg
adc
adc
es
mov
add
(bad)
imul
test
inc
add
outs
ret
add
rcr
sbb
and
sbb
cmps
add
pushf
(bad)
xor
adc
idiv
pop
lock
lock
add
sbb
add
sub
fisttp
dec
jo
adc
push
inc
and
add
jle
in
pop
sub
sbb
xor
nop
mov
bound
je
adc
sbb
xchg
add
outs
iret
out
jle
inc
xor
mov
cmp
jo
xor
cmp
fcomip
lods
mov
or
xor
inc
and
and
inc
jno
mov
pop
mov
add
and
and
add
inc
sub
sub
je
push
leave
xor
cmp
imul
add
mov
cmc
neg
jae
add
pop
add
loopne
cmp
inc
and
or
cmp
sub
sbb
mul
add
adc
aas
push
pop
nop
mov
loop
pop
dec
mov
adc
std
ins
add
add
lahf
sub
sub
add
cwde
loop
shr
data16
mov
xchg
lahf
clc
enter
dec
mov
push
or
pusha
pop
cs
xor
or
mov
cs
outs
sbb
jle
test
cs
fisub
sub
dec
jnp
ja
rcr
mov
add
adc
mov
sbb
ror
add
inc
dec
fidiv
(bad)
into
xchg
xor
scas
and
add
dec
inc
add
add
add
push
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
in
add
dec
add
add
