outs
(bad)
(bad)
dec
pop
push
call
pop
ret
push
mov
mov
test
je
call
mov
xchg
fsincos
inc
and
mov
mov
and
add
mov
xor
mov
add
or
dec
and
adc
mov
add
adc
ret
push
or
rol
jnp
fcomip
jmp
mov
inc
or
push
push
add
pop
pop
adc
push
sbb
or
jle
imul
in
dec
loopne
push
mov
and
addr16
jl
push
mov
and
mov
mov
call
jnp
gs
add
loopne
inc
js
add
fbld
dec
fimul
lods
or
fwait
idiv
mov
pop
cmp
ja
mov
ret
add
and
cmp
(bad)
push
lea
jmp
add
add
test
jne
ret
imul
or
loope
pop
add
aaa
mov
inc
lock
inc
sbb
push
neg
sbb
and
mov
clc
mov
mov
push
dec
push
loope
js
adc
and
fdiv
mov
and
fbld
and
jns
pusha
xchg
in
add
jns
adc
or
mov
bound
inc
or
sbb
xor
pop
sub
push
jb
add
shl
or
or
sub
dec
or
fimul
xchg
ror
call
or
fcomi
in
sbb
jecxz
jnp
pop
mov
jmp
push
cmp
sete
rol
push
push
js
cmp
jne
sub
punpckldq
push
mov
jge
cmp
pop
sbb
outs
push
add
sub
or
push
cmp
stc
lock
shl
lock
pop
ss
and
and
test
in
sti
cld
mov
lea
jl
outs
pop
mov
sub
into
or
adc
adc
pop
mov
ins
pop
mov
shl
push
lea
lea
lock
push
fmul
pop
pop
pop
mov
inc
or
call
cmp
test
into
mov
lods
mov
icebp
mov
adc
cdq
fucomi
push
xor
es
add
jo
cmp
ret
jne
push
cmp
push
push
js
idiv
jno
inc
pop
test
movs
ret
sbb
push
mov
add
mov
jbe
add
pop
push
or
xchg
iret
mov
aaa
jl
and
das
ins
dec
mov
push
jne
add
ds
pop
sub
xor
add
mov
jge
test
mov
inc
cli
sub
out
ror
inc
inc
push
fwait
mov
pop
pop
or
pop
test
icebp
(bad)
jg
add
fild
pop
cld
push
outs
pop
ins
mov
fwait
(bad)
fimul
add
or
sbb
adc
mov
mov
push
mov
mov
mov
jmp
test
mov
loope
and
add
in
inc
add
or
ficom
rcr
or
sbb
mov
inc
or
addr16
mov
mov
cs
pushf
inc
sbb
mov
adc
(bad)
(bad)
(bad)
mov
sar
jge
pusha
cmovs
xor
inc
and
xchg
and
cld
jp
xchg
lea
in
(bad)
mov
and
pop
cmps
imul
sbb
dec
in
dec
and
sub
aad
and
add
dec
bound
lods
in
jne
mov
in
js
inc
add
repnz
(bad)
xor
sbb
lea
dec
lock
rol
cwde
sbb
test
jbe
scas
push
sbb
push
sub
adc
cld
or
repnz
pop
sub
push
inc
mov
and
test
jmp
pop
call
sbb
sub
sbb
push
ret
pop
mov
or
ret
in
lods
lock
adc
jle
icebp
or
add
mov
lea
sub
or
sbb
add
sub
idiv
and
add
xor
sub
or
pop
test
(bad)
mov
fidiv
cmp
(bad)
cmp
mov
jbe
lea
mov
xor
push
sbb
(bad)
(bad)
fwait
xor
shl
hlt
ins
jmp
inc
cmp
shr
xor
addr16
pop
mov
and
ins
dec
cmp
adc
dec
test
popf
ds
jge
add
cmp
jbe
shl
lock
fs
cmp
je
inc
out
jle
mov
inc
cmp
jb
jmp
xor
popa
dec
adc
out
pop
sub
lock
adc
(bad)
out
sbb
arpl
imul
pop
xor
in
push
jb
call
mov
and
adc
and
xor
ins
ins
xchg
pop
test
loopne
xor
dec
mov
inc
add
aad
or
or
cmp
add
sub
add
or
outs
ja
cmp
shr
fs
fmul
or
jmp
push
shl
push
idiv
jmp
xchg
lea
neg
push
mov
push
push
add
and
(bad)
fdivr
fcomp
mov
jb
mov
cmp
jbe
shl
fwait
ret
sbb
loopne
out
push
ins
fucomi
int
pop
into
push
mov
lahf
jns
bound
clc
sbb
adc
sbb
and
sub
push
pushf
push
jmp
loop
ins
outs
cmps
cld
sub
push
and
adc
leave
cmp
add
ficom
or
or
sbb
or
sbb
sbb
mov
add
sub
icebp
inc
mov
mov
jne
(bad)
pop
jmp
xor
add
add
je
lock
call
cmp
(bad)
cmps
aam
or
loopne
mov
add
repz
xchg
jns
sbb
push
and
xchg
js
retf
jmp
and
add
mov
test
xchg
mov
mov
xor
inc
push
push
inc
fistp
mov
cdq
mov
ficom
lock
popa
aad
das
jp
cmps
pop
sete
pop
pop
pop
adc
imul
cdq
add
test
rol
rol
or
(bad)
xchg
call
or
jmp
test
lea
push
mov
jne
adc
lods
shl
(bad)
adc
(bad)
xor
pop
movs
pop
je
scas
fs
push
fimul
mov
bound
sbb
lods
(bad)
stos
out
stos
add
xor
xor
ja
les
mov
push
xchg
adc
cdq
icebp
mov
sub
mov
cmp
test
(bad)
sbb
ins
sti
dec
stos
xor
add
push
mov
push
sbb
imul
addr16
outs
nop
(bad)
sbb
add
rcr
add
adc
fldcw
or
mov
mov
sub
scas
jb
sbb
xchg
add
iret
mov
cmp
push
adc
mov
mov
outs
adc
sbb
dec
adc
jg
sbb
lea
cmp
ret
push
push
jb
inc
adc
adc
int3
push
sub
pushf
adc
cwde
cmp
iret
int3
outs
xlat
(bad)
push
fiadd
push
sbb
inc
cmp
loope
sub
add
clc
mov
enter
add
pop
cmp
jb
jo
add
or
jmp
or
push
imul
into
sub
add
fsub
loopne
popa
push
je
or
and
leave
stos
pop
(bad)
pop
push
add
xor
cdq
test
add
aad
repnz
xadd
xchg
mov
mov
sub
sbb
jno
pop
cs
mov
add
mov
test
dec
retf
adc
je
push
cmp
push
dec
pop
icebp
push
fstp
inc
mov
cmps
push
jecxz
pushf
clc
and
mov
mov
leave
mov
xchg
js
imul
enter
push
add
dec
or
aam
loope
xchg
(bad)
fadd
(bad)
xchg
out
aam
jl
in
mov
xchg
test
(bad)
push
and
jns
lea
sub
push
add
dec
jo
bound
imul
sub
lock
jbe
push
mov
enter
mov
aam
xor
loope
lea
sar
sar
add
push
or
clc
or
add
push
sbb
and
repnz
movs
movs
mov
cmp
test
call
in
pop
lahf
push
inc
xor
enter
and
pop
dec
adc
mov
push
sbb
mov
or
addr16
mov
cmps
pop
(bad)
mov
mov
jl
nop
out
mov
xor
push
out
(bad)
enter
repnz
ds
aam
(bad)
fadd
fsubr
add
push
adc
xchg
outs
xor
in
cmps
xchg
cmp
cmp
call
add
jle
out
in
jae
push
mov
fsub
jo
xchg
jecxz
inc
inc
div
inc
jg
add
inc
fdivr
push
adc
pop
call
arpl
dec
push
or
adc
push
cld
and
adc
loopne
push
fwait
xchg
aas
inc
ds
mov
pop
push
xor
clc
call
jmp
push
sub
push
mov
shl
repz
les
dec
or
sbb
xchg
add
mov
clc
xchg
aaa
cmps
ins
test
mov
pop
outs
push
inc
and
and
push
push
sub
mov
xor
inc
leave
xor
and
lea
cmp
jbe
aas
es
leave
out
add
jo
xor
pop
in
mov
adc
or
mov
push
sbb
push
in
loopne
or
adc
sub
fwait
sub
imul
add
imul
in
sub
fsub
pop
repnz
enter
aam
mov
aam
sbb
pusha
add
jne
imul
xor
push
sbb
pusha
cmps
(bad)
cmp
push
push
cmps
jo
movs
jb
adc
add
and
stos
pop
ja
das
sbb
fist
inc
pop
cmp
mov
push
mov
fs
leave
rcl
jb
inc
fldcw
cmp
fwait
inc
cs
imul
out
mov
movs
fs
dec
add
push
and
dec
in
fs
fild
inc
cmp
or
out
dec
pushf
mov
sub
pop
imul
or
imul
or
xchg
cmp
add
and
adc
dec
add
and
enter
inc
ficom
cld
sub
xor
push
sbb
pop
sbb
hlt
and
sbb
rcl
xchg
jns
imul
push
add
inc
sbb
mov
mov
data16
adc
cmp
(bad)
push
jno
loope
and
dec
pop
jne
adc
ins
add
aas
daa
fadd
cmp
jb
inc
pop
pop
add
xor
cmp
mov
cmp
dec
icebp
inc
add
in
push
or
adc
pop
add
mov
or
enter
or
je
xchg
or
or
mov
cmp
sbb
mov
sbb
inc
push
push
mov
call
mov
and
cmp
mov
add
int3
adc
test
mov
sar
ret
mov
pusha
imul
pop
add
call
push
frstor
xchg
sbb
(bad)
cld
and
shl
pop
in
(bad)
inc
ja
add
sub
mov
cmp
ja
mov
push
enter
(bad)
xchg
add
add
je
pop
xor
xlat
movs
jb
adc
jae
inc
adc
pop
mov
loop
mov
jle
add
lods
rol
xor
pop
fimul
fmul
mov
(bad)
jl
fild
or
sub
xchg
cmps
sub
ret
ds
inc
sbb
inc
and
xchg
sbb
test
inc
or
and
jp
cmps
jge
adc
int3
add
adc
mov
fiadd
mov
call
pop
lods
test
lea
aaa
inc
mov
adc
imul
sub
or
(bad)
jmp
xor
add
jo
sbb
xor
scas
or
and
pop
jne
push
add
ins
adc
fld
ss
int3
mov
repnz
enter
pushf
loope
sub
cmp
jae
xlat
mov
xor
and
fdivr
lea
push
jle
mov
out
sbb
sbb
test
ins
add
pushf
in
add
je
lds
adc
bound
inc
scas
jmp
mov
das
in
nop
cmps
and
repnz
enter
sub
cmp
mov
and
and
test
mov
xor
mov
mov
add
pop
enter
mov
add
push
inc
dec
and
jae
mov
adc
call
test
mov
sub
ins
and
imul
inc
in
cmp
sti
pop
mov
sub
in
mov
adc
(bad)
jbe
push
imul
inc
call
add
push
xchg
jl
jae
add
and
push
pop
clc
xlat
les
test
or
(bad)
dec
gs
dec
mov
xor
daa
dec
enter
or
ret
or
push
cwde
pop
retf
push
add
or
and
stc
aas
push
mov
push
jbe
scas
push
jle
rcl
mov
mov
mov
add
add
inc
pop
and
dec
fcom
mov
push
dec
jns
les
ds
mov
or
ins
test
cmp
add
push
fdiv
fadd
jg
add
inc
nop
clc
sub
push
lea
push
int
inc
ja
cld
add
xor
xor
or
sub
mov
pusha
cld
push
push
add
lea
in
fbstp
call
mov
mov
jmp
lds
add
mov
xchg
loop
rcl
adc
sar
cmp
scas
or
jge
pop
loope
add
or
jmp
icebp
pop
push
test
icebp
xchg
ret
add
sub
scas
data16
pop
lods
dec
and
lea
cmp
ja
cmp
repnz
lea
or
and
call
jmp
push
dec
add
pop
call
pop
add
add
fsub
add
dec
push
dec
enter
xor
push
dec
add
idiv
sar
cmp
and
jge
inc
mov
ds
and
out
adc
jo
outs
push
pushf
cmp
cmp
pusha
add
adc
xchg
ja
mov
ins
cwde
rcl
lods
push
and
fild
add
loope
sti
add
mov
add
mov
neg
sbb
and
push
mov
sbb
inc
rcr
sbb
test
jne
(bad)
inc
and
cld
ss
cmp
mov
je
cmp
or
cmp
dec
mov
or
into
lea
push
lds
mov
pop
adc
mov
in
push
mov
mov
mov
cmp
pop
mov
(bad)
dec
outs
repz
add
dec
call
push
lods
imul
push
dec
loopne
in
mov
jl
sbb
or
je
test
mov
div
dec
or
add
out
dec
jnp
call
add
inc
je
push
cdq
add
and
mov
fs
mov
adc
pop
cmp
ja
pop
test
cdq
div
cmp
dec
pop
push
jnp
push
nop
jnp
push
adc
fcomp
out
sbb
sub
fwait
lods
pusha
adc
pop
push
mov
daa
inc
push
int
adc
fs
sub
xchg
or
fadd
(bad)
or
adc
adc
or
adc
test
sti
mov
sbb
inc
inc
jl
push
icebp
cwde
cmp
ret
enter
push
add
rol
cmp
fimul
mov
pop
pop
mov
or
mov
movs
or
ret
xlat
xor
xchg
push
(bad)
push
add
mov
jbe
jg
sub
sbb
or
cmp
add
fsub
jae
ret
lea
mov
je
xor
jb
sub
or
test
pop
sti
xor
adc
jae
jmp
xlat
push
jae
xor
and
js
pusha
outs
and
fld
mov
bound
push
ret
push
xchg
mov
xchg
test
test
sub
add
mov
jno
cdq
movs
fs
push
ins
mov
push
bound
jae
pop
pop
sub
rcl
pop
movs
(bad)
cmp
mov
sub
mov
icebp
mov
cmp
inc
iret
int
cwde
mov
xchg
dec
dec
add
mov
jmp
mov
inc
and
inc
in
dec
repz
or
aaa
repz
mov
sbb
sbb
push
sbb
ret
mov
or
lahf
fstp
add
mov
(bad)
and
mov
cmp
inc
ins
test
mov
adc
jns
cdq
div
push
sti
adc
or
clc
jmp
rcl
aaa
out
adc
jge
ss
(bad)
jnp
mov
push
lock
cmps
pusha
dec
sub
arpl
mov
mov
(bad)
dec
leave
enter
push
leave
ret
jnp
imul
and
fs
xchg
and
adc
hlt
xor
aaa
pop
and
sbb
test
mov
mov
adc
pop
je
lods
xchg
call
xchg
ficomp
popa
xchg
pop
xchg
mov
enter
ja
xor
inc
pop
and
idiv
xchg
pop
lea
add
adc
jo
ja
ror
add
sub
and
push
xchg
ror
cmp
sub
das
(bad)
mov
or
js
sbb
js
add
ret
mov
hlt
adc
xor
xor
or
daa
stos
sbb
push
dec
mov
mov
and
lea
ja
aas
xor
or
push
add
and
push
and
or
mov
adc
js
inc
and
sbb
ja
push
outs
outs
jecxz
sbb
stc
pcmpeqb
add
mov
inc
inc
sub
push
shr
(bad)
push
sub
and
test
or
push
adc
cmp
jne
adc
call
cmp
in
test
mov
js
mov
push
int3
les
inc
xor
inc
popa
xchg
aas
cmp
or
or
push
push
inc
inc
push
pop
fs
stos
cli
add
inc
jne
dec
push
add
push
or
loopne
pop
pusha
push
outs
jbe
add
xor
inc
cmp
inc
cwde
ins
pop
xor
cwde
popa
cmp
add
push
mov
ins
push
push
inc
jl
push
jne
push
sub
push
mov
es
jmp
push
jne
jo
inc
cmp
pop
jno
and
or
push
and
xchg
inc
ds
or
ret
add
jb
add
adc
add
loop
add
add
or
ds
add
punpckhbw
sbb
(bad)
or
push
cs
or
pushf
outs
xchg
(bad)
gs
mov
add
mov
mov
or
je
les
push
adc
push
push
dec
stos
cmp
movs
jne
pop
xor
scas
mov
push
ficom
pop
xchg
pop
push
jbe
dec
mov
mov
push
push
add
pop
fild
(bad)
(bad)
test
cmp
jne
pop
push
fisubr
test
pushf
mov
dec
pushf
add
inc
pop
mov
pop
lea
dec
les
repnz
sub
stos
and
inc
mov
adc
push
mov
popa
and
adc
push
push
les
sub
bound
pop
sbb
dec
add
jb
xor
sub
pop
inc
dec
jo
cmp
loopne
push
or
daa
icebp
mov
in
mov
loope
push
add
cmp
je
pop
test
xor
adc
push
mov
pop
sub
pusha
into
adc
in
inc
clc
mov
mov
aad
ds
pop
add
push
sbb
mov
jbe
push
cmp
jne
push
call
loopne
lods
jno
std
in
in
fsubr
push
in
jo
bound
sar
ins
ins
jle
das
ret
nop
pop
push
and
cmps
jns
or
push
arpl
add
sub
push
xchg
dec
add
and
add
inc
add
mov
add
test
jmp
inc
or
pop
ins
mov
sub
xor
adc
shr
push
jne
jo
jp
imul
retf
je
test
pop
mov
shl
push
adc
mov
lahf
ins
push
dec
adc
adc
pop
push
mov
mov
or
sub
sub
cmps
dec
or
loopne
sbb
push
push
push
push
int
xchg
pushf
push
sub
gs
aaa
and
xor
adc
fs
mul
daa
int
pop
imul
pop
mov
add
ins
jne
fistp
shr
mov
push
arpl
movs
sub
add
dec
push
or
js
je
and
dec
iret
shl
sbb
or
popa
mov
shl
jmp
iret
ret
and
leave
sub
sbb
adc
call
cmp
mov
cmp
je
push
popa
jmp
pop
jb
push
sub
cmp
sbb
daa
fidivr
mov
cmp
or
mov
sbb
push
adc
pop
shr
push
cmp
push
cmps
push
sbb
shl
fild
and
lods
push
mov
xchg
stos
jo
jne
popf
call
dec
push
nop
or
lock
jge
and
es
ror
and
loop
xchg
or
add
neg
or
jl
popa
dec
inc
adc
repnz
dec
jo
imul
pop
cvttps2pi
inc
cs
sub
ja
pop
xor
jne
imul
add
(bad)
nop
or
fcomp
mov
setns
adc
sbb
adc
add
cmp
inc
data16
nop
cmps
mov
inc
sbb
adc
bnd
push
clc
test
stos
pop
fldenv
js
popa
movs
xchg
or
and
sbb
lahf
es
sbb
or
and
cmp
or
push
pop
call
mov
int
add
and
movs
push
inc
movs
das
repnz
das
mov
push
mov
sub
dec
mov
dec
xchg
sub
jl
shr
clc
dec
std
ror
mov
mov
mov
fiadd
xor
xor
cmp
sbb
inc
sbb
int
fnstcw
dec
xor
add
xchg
add
push
pop
and
cmps
jns
add
or
pop
sub
sbb
fisub
push
pop
push
inc
inc
pop
sub
call
add
mov
xor
adc
push
pop
push
inc
or
adc
push
dec
or
mov
adc
add
adc
push
pusha
push
or
dec
(bad)
inc
mov
fwait
mov
scas
retf
movs
jge
push
jo
not
inc
xor
test
or
or
ins
mov
shl
ja
pushw
int3
xor
dec
jb
push
push
mov
adc
data16
push
int
cmp
je
cli
mov
das
pop
xor
into
mov
and
add
cld
push
xchg
cmp
push
adc
neg
cmp
int
add
ins
adc
adc
xchg
sbb
xor
add
repnz
xor
or
les
adc
add
daa
xor
dec
or
mov
shl
push
int3
mov
xor
push
pop
mov
sbb
inc
mov
adc
or
xchg
mov
push
lea
sub
xchg
dec
mov
les
adc
ins
aad
adc
and
sbb
rcr
enter
add
dec
dec
push
dec
push
push
fdiv
add
push
and
pop
sub
ins
cmp
and
adc
push
mov
and
push
sub
les
and
enter
cmp
xchg
mov
mov
xchg
mov
xor
pusha
lods
mov
jmp
inc
add
and
std
mov
and
mov
rol
cmc
ror
pusha
add
imul
rcr
stc
iret
or
xor
adc
loop
and
xchg
pop
fdivr
les
hlt
int3
xchg
pop
sub
jb
scas
add
inc
fiadd
mov
ret
jbe
mov
add
push
push
add
xor
jp
aaa
inc
mov
push
mov
push
shr
aad
movs
iret
rcl
mov
dec
jno
push
inc
adc
enter
ret
or
sub
xchg
xor
movs
sub
dec
pop
cs
lock
into
or
dec
pop
rol
in
sub
push
push
xor
call
or
enter
inc
or
add
dec
and
pop
sub
test
mov
dec
xchg
mov
and
or
je
sbb
pop
in
pop
sbb
cmp
or
inc
xor
loopne
scas
jo
inc
inc
xchg
mov
mov
pop
sub
enter
popf
loopne
xchg
cmp
cli
pop
or
xor
in
arpl
or
loop
sbb
inc
ret
mov
sub
push
in
scas
iret
push
loopne
xor
call
retf
dec
aam
aas
dec
jp
jmp
xlat
jmp
fdivr
cmps
cdq
xchg
test
scas
inc
push
(bad)
push
mov
push
outs
imul
jmp
inc
out
mov
lock
sbb
cmp
test
xchg
stos
lahf
arpl
sub
lods
mov
push
xor
movs
movs
and
imul
rcl
jle
je
or
or
mov
fld
jecxz
inc
adc
out
xchg
xor
dec
ds
dec
cmp
or
cmp
enter
leave
or
sub
sysret
push
push
adc
jo
xchg
inc
movs
adc
cmp
addr16
call
or
in
mov
xchg
or
or
loope
rcl
pop
and
in
dec
fsubr
sbb
cmp
push
xor
mov
jnp
test
dec
mov
(bad)
out
add
fsubr
hlt
adc
stos
test
mov
sbb
enter
mov
(bad)
jg
movs
psubusw
add
or
test
push
in
ss
rcr
and
int3
add
jns
cwde
shl
xor
adc
ds
js
pop
mov
lock
fild
scas
push
call
adc
jo
xor
in
call
inc
sbb
test
ret
mov
add
cmp
mov
fdiv
push
call
jl
cmp
loopne
sbb
jp
pop
sahf
scas
inc
cwde
cmps
dec
cwde
push
shl
and
outs
(bad)
(bad)
call
imul
jl
daa
dec
in
and
lahf
and
stos
movs
and
imul
cld
icebp
mov
xor
pushf
(bad)
aad
iret
jecxz
fwait
clc
daa
icebp
pop
test
pop
pop
leave
ret
or
inc
in
xchg
xchg
(bad)
add
or
jmp
pop
add
ja
dec
jge
or
mov
cmp
jae
pop
mov
dec
in
mov
and
xor
inc
mov
imul
jge
mov
ins
nop
xchg
stos
rcl
add
and
mov
cmp
vmovupd
mov
rcl
pop
fmul
adc
or
xchg
sbb
shl
push
fs
or
or
sub
push
enter
loopne
mov
add
or
add
and
test
call
rol
cmp
ss
ss
adc
popa
inc
sub
push
push
enter
repnz
push
adc
ins
add
adc
mov
(bad)
clc
add
daa
nop
xchg
sub
xchg
xor
mov
or
sbb
push
jge
mov
or
adc
or
jns
xor
or
pop
and
add
xchg
adc
(bad)
lock
enter
push
or
rcr
sub
mov
shl
cmp
jb
daa
lea
adc
or
loope
imul
mov
push
test
repz
lods
mov
cmp
jae
rcr
enter
adc
dec
lock
outs
push
mov
ror
xchg
or
push
jo
cmp
lea
push
add
xor
(bad)
push
(bad)
adc
sub
(bad)
jp
or
out
movs
push
stc
sahf
jmp
sbb
dec
xor
cmp
pop
pop
(bad)
dec
dec
out
call
or
and
popa
es
mov
aaa
sbb
mov
aaa
sti
mov
mov
sbb
shr
in
push
push
cmp
or
sub
push
je
mov
push
push
or
add
sub
dec
push
daa
jmp
push
add
cdq
pop
cmc
pop
push
xor
pop
cmp
hlt
out
add
cli
call
add
inc
aas
nop
and
mov
lock
(bad)
idiv
jae
dec
movzx
lea
jne
sbb
or
sub
or
int
and
inc
adc
inc
pop
add
or
pushf
add
or
adc
shr
addr16
push
xor
adc
arpl
add
or
mov
jnp
mov
mov
mov
adc
cli
neg
and
inc
mov
das
xor
ds
jmp
(bad)
ret
(bad)
inc
or
cmp
jg
push
push
scas
cmp
xadd
dec
ror
lahf
dec
pop
imul
add
call
adc
push
add
int
xor
adc
(bad)
adc
std
in
or
inc
jne
sub
sar
inc
and
lea
rcr
pop
pop
and
xor
pop
in
push
sbb
leave
and
push
repz
adc
je
das
pop
lock
cmp
jle
call
cmp
hlt
mov
and
lods
xchg
jbe
lds
addr16
inc
push
add
je
mov
sti
push
pop
add
cmp
es
adc
jmp
(bad)
pop
xor
pop
pop
add
add
mov
jne
add
imul
mov
aam
push
mov
call
repnz
in
pop
out
adc
mov
je
pop
mov
dec
call
rol
dec
mov
mov
push
setne
out
inc
mov
cmp
add
inc
or
add
push
dec
aaa
shl
rol
test
fs
mov
pop
mov
jae
stos
mov
lock
add
add
mov
cmp
fdiv
pop
cwde
ror
lea
std
dec
cmp
push
jne
xchg
mov
mov
or
add
jmp
mov
or
enter
add
add
fidivr
add
call
add
xchg
sub
xor
repz
add
adc
push
lock
mov
retf
das
outs
cmp
or
call
push
pmaxub
cmp
or
or
jmp
dec
xor
mov
push
cli
sub
shl
je
mov
sub
dec
clc
(bad)
es
pusha
loopne
int3
mov
mov
cmp
jge
mov
lea
push
pop
adc
add
fiadd
mov
aad
clc
ret
pop
leave
sbb
mov
and
call
jl
mov
xor
lods
pop
add
xor
push
ins
mov
jle
je
push
ss
push
pop
out
lods
push
sti
fwait
cmp
int
fcomp
lea
push
cmps
adc
cmp
aaa
push
xchg
pop
pop
mov
push
sbb
mov
pop
sub
loope
fisub
jno
push
loop
adc
lea
lods
enter
sbb
ret
xlat
sbb
mov
jge
icebp
or
add
adc
in
xor
mov
ins
add
xor
jg
pop
jno
xor
test
mov
add
out
push
and
lock
pop
jne
xchg
call
or
cmps
push
fmul
jmp
mov
lock
movs
fstp
int
xchg
aad
adc
icebp
loopne
jle
clc
add
or
jle
mov
in
sbb
mov
mov
int3
add
and
(bad)
push
inc
jbe
sbb
lea
mov
ja
ja
loope
sbb
push
adc
inc
movs
loope
jp
out
push
ins
iret
adc
movs
rol
add
add
cmc
mov
cmp
pop
jmp
add
in
fwait
pop
mov
and
or
inc
cmp
(bad)
ret
add
inc
imul
gs
adc
sbb
add
pop
or
mov
xchg
pop
inc
sahf
call
ins
push
sbb
es
mov
xor
mov
rcl
into
inc
xchg
add
push
adc
cmps
mov
mov
cmp
add
dec
and
bound
add
add
test
popa
sbb
push
imul
adc
adc
pop
pusha
test
cld
loopne
dec
fadd
dec
or
sub
or
jge
pop
fmul
xor
bound
inc
cmp
and
sub
jecxz
xor
jne
push
mov
dec
ds
or
add
mov
loopne
mov
or
add
mov
lods
push
jo
int3
(bad)
xor
leave
add
(bad)
jne
add
adc
adc
mov
cli
movs
add
and
cld
xchg
nop
into
xchg
mov
push
popa
xor
jno
lock
and
ret
mov
imul
jae
xor
enter
test
push
mov
inc
in
(bad)
fcom
xchg
jae
sub
in
push
lock
shl
pop
dec
push
iret
xchg
call
mov
xor
cmp
movs
sub
nop
pop
rcr
mov
adc
mov
mov
movs
mov
sbb
add
add
shr
dec
cdq
xchg
hlt
fdivr
xor
xor
and
pop
dec
ror
lods
pop
xor
jle
and
inc
call
dec
xchg
jno
add
movs
pop
nop
lahf
pushf
inc
jge
dec
xor
add
add
mov
movs
mov
stos
test
inc
pop
mov
sbb
sub
add
cmps
outs
daa
inc
jecxz
int
push
push
xor
push
js
imul
mov
mov
add
fs
or
loopne
or
pop
push
mov
push
and
gs
jmp
mov
or
retf
add
cmp
push
(bad)
push
jp
inc
or
xchg
sub
or
or
sbb
mov
data16
jne
in
push
cmp
jae
push
and
sti
or
or
inc
cmp
add
adc
(bad)
loope
add
inc
fcom
xchg
les
mov
sub
lea
push
or
lods
jbe
xchg
push
js
cmp
fild
lea
and
pop
fcmovu
add
push
pop
pop
push
pop
mov
cmp
fnstenv
sub
jmp
cmps
out
cmp
or
jl
imul
mov
sahf
inc
js
sub
sar
loope
aam
idiv
neg
ja
lea
push
adc
fidivr
cdq
rol
jmp
push
push
xchg
add
repz
arpl
sbb
outs
idiv
je
push
movzx
push
push
mov
push
push
add
push
push
(bad)
call
jmp
mov
pop
adc
clc
cwde
out
stos
inc
lock
xchg
in
popa
out
sub
push
in
mov
mov
call
jp
mov
adc
dec
add
xchg
mov
invd
cld
dec
data16
or
call
ins
cmp
xor
cmps
adc
ret
or
cmp
arpl
fwait
push
ins
fcmovnu
xor
add
ret
add
inc
sub
scas
in
dec
add
push
imul
inc
fs
(bad)
loope
push
lock
xchg
jnp
clc
push
lock
push
mov
rol
mov
xor
imul
push
loopne
cmp
test
sub
mov
jo
add
mov
sub
loop
test
clc
test
pop
mov
or
push
mov
xor
loopne
mov
shr
mov
or
int3
cmp
sbb
mov
mov
rcl
mov
loopne
sub
test
jne
sub
(bad)
pop
push
stc
icebp
inc
frstpm(287
in
test
stos
pop
add
push
arpl
ret
xchg
retf
xor
xor
jl
fcom
add
mov
mov
mov
movs
push
and
fcomi
pushf
in
and
ret
pop
ds
in
rol
inc
sub
pop
test
and
aas
mov
call
cld
mov
lods
adc
adc
mov
les
and
(bad)
adc
and
add
fsubr
inc
call
or
retf
popf
mov
and
inc
pop
dec
loopne
xchg
ins
xor
mov
sub
jns
sub
xor
fild
pop
cld
or
adc
outs
or
jmp
pop
movs
mov
sar
jbe
xchg
add
push
xor
mov
jg
mov
mov
sbb
mov
lods
les
fs
pop
sar
xor
fiadd
loop
jmp
dec
xor
add
repnz
or
inc
scas
mov
cmps
movs
aam
mov
jb
pop
fmul
or
pop
enter
push
leave
leave
adc
xor
daa
dec
loopne
aam
xchg
sbb
fisttp
xor
aas
sub
add
leave
nop
daa
in
mov
and
sbb
cmps
mov
ss
cmp
push
pop
adc
mov
sbb
aam
dec
add
jmp
dec
or
in
loopne
sub
lods
sub
and
push
or
push
dec
in
pop
mov
dec
popa
loope
pusha
adc
push
clc
mov
pop
or
int3
xor
add
adc
jns
in
mov
mov
call
je
cmps
sbb
adc
cmp
inc
mov
into
inc
add
adc
dec
icebp
hlt
into
clc
retf
add
dec
mov
xor
pop
outs
inc
inc
or
rcl
(bad)
ror
mov
adc
clc
or
(bad)
je
sub
inc
pusha
dec
rcr
addr16
mov
add
dec
enter
pop
sub
add
jmp
xchg
jne
xchg
mov
xchg
add
add
rcr
shl
(bad)
rcl
add
fidivr
mov
shr
leave
cmp
jne
adc
std
int3
dec
sbb
cmp
stos
push
test
lods
add
mov
cld
test
push
add
add
movs
mov
jbe
imul
adc
jne
into
adc
sub
sub
popw
neg
ss
jnp
dec
hlt
std
ret
shl
je
lock
push
fld
pop
add
xchg
cmp
ss
ja
or
inc
push
or
test
jbe
jp
xlat
xchg
jl
test
loopne
jno
cld
dec
sbb
stc
test
inc
dec
std
add
ins
mov
xchg
and
inc
cld
dec
cmp
jge
xor
or
cmp
(bad)
jmp
mov
repnz
adc
dec
cmp
mov
sti
in
mov
ja
and
xchg
jp
sbb
add
(bad)
inc
add
lea
iret
or
cmp
xchg
or
push
dec
mov
pop
daa
xchg
int
jmp
enter
xor
movzx
inc
data16
adc
and
add
inc
rol
pop
mov
or
mov
and
stos
lea
add
jno
out
xor
mov
mov
clc
adc
inc
cmp
mov
fisttp
mov
cmp
mov
pop
retf
sahf
jmp
fstp
fld
fcom
adc
jl
adc
jbe
ins
adc
jae
data16
inc
mov
fs
shl
out
push
mov
add
sub
push
or
adc
push
jbe
cmp
jne
sbb
jp
push
add
add
xchg
cld
inc
pop
sbb
sbb
movs
ins
or
xchg
sub
sar
shl
cmp
sbb
mov
loop
fwait
add
push
scas
dec
outs
mov
add
add
inc
out
jno
add
xchg
sar
pop
adc
fdivr
into
je
mov
inc
cmp
hlt
sti
ja
sbb
dec
xor
jmp
push
pusha
or
jle
dec
add
cmp
je
je
jmp
sar
loop
nop
shl
or
push
rcl
xor
sbb
push
mov
sub
xchg
add
je
loope
push
push
popf
lods
pushf
sub
pop
arpl
mov
mov
pusha
sub
dec
mov
or
dec
add
xlat
sbb
and
xor
nop
jbe
pop
mov
jp
test
cmp
adc
jns
add
jl
inc
inc
in
inc
dec
cmp
call
dec
xchg
jbe
iret
or
dec
(bad)
loopne
push
or
pushf
in
inc
add
imul
or
xor
or
xchg
in
outs
adc
xor
div
mov
push
rcl
pusha
sub
jecxz
into
pop
inc
add
gs
int3
push
xchg
dec
push
sti
mov
arpl
sbb
stc
pushf
jp
jge
lea
dec
(bad)
jns
test
adc
push
add
iret
fwait
mov
push
adc
push
and
out
mov
dec
loope
dec
scas
jns
and
out
cld
popa
sbb
outs
xor
je
ins
cwde
inc
or
add
adc
or
add
lahf
pushf
and
add
xlat
(bad)
mov
std
or
push
dec
add
xor
mov
and
mov
loop
mov
inc
mov
mov
mov
push
mov
out
dec
pop
push
mov
jmp
jge
mov
adc
sahf
mov
movs
fbstp
inc
loopne
push
jbe
jmp
push
js
inc
sub
push
std
add
popf
ins
lock
inc
and
imul
(bad)
mov
ja
cmp
and
mov
sbb
dec
jmp
cmp
jl
ss
ds
jmp
ror
add
add
test
or
cs
mov
add
mov
push
xchg
(bad)
mov
push
and
rcr
loop
es
xor
int
pushf
enter
loopne
or
jg
adc
into
and
pushf
mov
(bad)
add
adc
(bad)
mov
mov
jmp
mov
mov
push
pop
push
xor
lods
sbb
fxch
inc
popf
cld
aaa
nop
outs
jmp
fisttp
ret
sbb
push
inc
add
popf
dec
rol
inc
xor
xor
xor
ret
pop
js
sub
inc
and
fistp
pop
aad
retf
mov
mov
nop
lock
cld
adc
mov
jb
and
retf
and
push
cmp
je
or
sub
loopne
mov
xchg
scas
test
mov
sbb
clc
cld
and
shl
cwde
add
mov
sbb
test
imul
ret
mov
pop
xor
add
in
push
ret
sbb
scas
lea
test
xor
jns
aam
or
aam
xchg
pop
add
js
jns
pop
fisubr
lods
aam
add
popa
icebp
push
inc
popf
fnstsw
movs
and
rcr
inc
mov
loopne
mov
sbb
mov
sti
sbb
push
sub
jns
adc
and
fnstsw
aad
add
and
xor
pop
iret
xchg
pop
and
and
dec
mov
lods
sahf
(bad)
pop
iret
push
xchg
cmps
lds
add
mov
push
popa
add
add
les
mov
or
add
loopne
imul
mov
sbb
mov
movs
je
or
dec
ins
sub
shl
mov
xchg
cmp
or
mov
or
std
or
call
pop
repnz
jb
add
cmp
jne
add
in
or
or
mov
or
xchg
fisttp
or
pop
repnz
push
dec
inc
(bad)
cmps
jae
mov
mov
(bad)
loope
sbb
nop
xchg
dec
push
or
fdiv
mov
adc
lahf
adc
inc
mov
in
ss
mov
lock
ret
add
jno
das
call
stos
sub
sete
scas
test
in
inc
jle
xchg
loopne
aaa
cmp
xor
ror
cmp
int3
mov
push
add
pop
int
mov
or
pop
les
ret
les
call
in
ins
sbb
cmp
lock
xlat
mov
add
sbb
or
add
cwde
push
repz
dec
loopne
std
and
xor
xor
fsub
mov
lds
das
movs
jae
sbb
dec
push
dec
or
dec
add
and
les
dec
repnz
mov
sti
adc
sbb
inc
cmp
xchg
mov
inc
nop
dec
jae
das
loopne
xor
add
sbb
or
push
and
push
lea
dec
mov
sub
adc
outs
xor
mov
inc
or
pop
and
ins
fwait
popa
mov
mov
movs
mov
cs
inc
jb
stos
push
cld
pop
out
xor
fisub
dec
xor
mov
shl
add
sub
cli
hlt
dec
cmp
jl
push
sub
push
std
add
jns
mov
lods
cmp
mov
cmp
call
jo
shl
pusha
xlat
in
js
ins
rcr
fadd
inc
cmp
shr
jo
cmp
pop
push
fild
cmp
jbe
push
or
mov
mov
push
sbb
push
sub
mov
scas
or
jne
in
sbb
cmp
pop
or
dec
push
or
pop
and
jne
push
xor
push
or
test
ror
das
popa
mov
pop
dec
into
sbb
cmp
pop
mov
jp
xchg
and
test
test
hlt
push
push
cld
or
and
push
icebp
jge
sbb
daa
cli
cmp
cld
ins
jne
xchg
mov
sbb
push
xchg
ds
jno
sbb
outs
fs
jmp
mov
mov
repnz
mov
fbld
xor
mov
xor
stos
cmp
sub
push
sub
push
nop
sub
push
push
jb
and
add
lock
push
test
jo
mov
icebp
xchg
imul
sbb
adc
scas
(bad)
xlat
ror
ror
add
push
lock
nop
jbe
cdq
pop
add
adc
jl
adc
mov
inc
add
ror
movs
ret
lea
dec
push
xchg
mov
xchg
fwait
jmp
js
jae
inc
mov
cmp
call
imul
inc
mov
ud1
pop
cmp
mov
or
leave
xchg
sub
fsubr
adc
sti
cwde
aas
or
test
mov
or
out
push
adc
mov
scas
cmovne
or
pop
xchg
test
(bad)
adc
lea
(bad)
sbb
and
cmp
ins
loopne
and
cmp
cmp
dec
ins
push
dec
xchg
pop
and
sbb
add
in
cdq
in
ins
sbb
repnz
push
jb
pop
and
pop
and
and
nop
or
and
leave
xchg
sub
inc
leave
add
or
and
enter
nop
dec
outs
push
sub
cmps
inc
cs
xor
lock
dec
xor
lea
xchg
mov
xor
mov
xchg
nop
xor
cs
xor
push
pop
leave
or
ss
inc
es
retf
or
dec
enter
loopne
jns
or
jbe
cmp
lods
add
pop
or
cmp
pushf
cwde
cmp
and
test
ds
aas
push
inc
xchg
sbb
pop
inc
add
leave
add
inc
enter
inc
add
jb
inc
inc
mov
addr16
dec
inc
mov
or
cs
mov
cs
add
dec
mov
add
add
dec
push
push
in
mov
add
xchg
and
push
and
pop
leave
push
fwait
pop
pop
lods
pop
push
sub
pop
cld
inc
sub
push
rcl
icebp
pop
pop
lahf
mov
gs
pusha
lods
pop
jb
add
push
test
call
arpl
add
fs
dec
cmps
inc
scas
lods
addr16
dec
imul
in
ins
or
fwait
leave
xchg
sub
fs
push
xor
bound
push
mov
jb
jae
or
mov
pusha
ja
jmp
adc
inc
or
sbb
repz
fs
mov
and
mov
cmp
and
jmp
jo
add
cmp
push
sbb
inc
sub
and
leave
push
inc
xchg
pop
or
into
or
jbe
test
adc
mov
push
or
xchg
(bad)
push
pop
xor
push
test
mov
rol
or
cmp
rol
jo
in
enter
adc
repz
lods
ins
ja
push
pop
mov
(bad)
int
pop
sbb
pop
lods
pop
lock
jne
mov
mov
movs
movs
fwait
int
fistp
mov
dec
jecxz
in
mov
ins
ss
out
out
call
jmpw
mov
in
and
imul
movs
mov
cs
lahf
push
scas
push
(bad)
pop
jb
clc
inc
inc
push
pmuludq
shr
jo
test
or
and
int3
call
mov
int3
add
dec
repz
push
push
wbinvd
in
add
(bad)
les
push
jmp
push
mov
loopne
addr16
push
sub
fadd
jge
imul
cwde
mov
(bad)
cmp
mov
mov
dec
push
add
cmp
mov
es
and
add
and
loopne
rol
add
add
sbb
jae
mov
or
push
mov
adc
adc
rol
pop
frstor
mov
pop
cmp
ins
add
call
inc
test
pusha
dec
jb
jb
cmp
push
inc
js
or
pop
adc
cmp
inc
mov
int3
dec
or
jmp
cmp
adc
dec
movlps
add
adc
mov
or
pop
ror
jo
mov
std
outs
pop
hlt
xchg
(bad)
jmp
adc
jne
push
jmp
adc
add
pop
jmp
lods
outs
sar
adc
lahf
mov
sub
or
dec
push
fcmovb
add
fs
je
mov
or
repz
inc
outs
adc
mov
out
push
rol
mov
cmp
push
xor
aas
out
into
aaa
add
mov
push
movzx
or
clc
idiv
jmp
repnz
retf
cs
push
adc
add
aaa
mov
dec
adc
out
cdq
call
mov
pop
xchg
pusha
je
cmp
sbb
jmp
test
fcomp
add
dec
je
cwde
or
or
adc
add
outs
or
sbb
pop
pop
pop
xchg
adc
add
repnz
mov
add
pop
and
sbb
jns
push
dec
push
int3
je
xor
pusha
je
hlt
sbb
push
icebp
inc
sub
or
add
inc
sbb
inc
push
adc
dec
stos
stc
pop
mov
xor
sbb
or
cmc
les
pop
cmp
push
xor
inc
pop
cmp
cmp
mov
xor
aaa
xchg
add
push
out
pop
cmps
daa
cmc
jne
push
xadd
shl
push
push
daa
(bad)
jl
add
push
mov
add
jo
add
push
dec
lods
in
sar
mov
pop
neg
sbb
and
add
dec
js
mov
adc
sub
int3
sub
repz
jno
push
popa
and
or
and
or
loope
mov
and
les
push
cmp
data16
jmp
mov
ret
and
dec
das
and
jecxz
cli
movnti
or
add
xor
jbe
cmps
and
je
lock
jl
add
mov
adc
fild
pop
je
push
pop
mov
repz
mov
(bad)
fstp
leave
cmp
sbb
js
adc
outs
test
mov
xchg
pop
inc
or
jno
out
out
jle
pop
inc
(bad)
push
sar
mov
lods
lods
mov
add
jecxz
loop
cmp
in
inc
inc
mov
adc
call
lods
mov
adc
push
bound
push
mov
outs
inc
jmp
shr
add
or
push
jb
cli
pop
jne
popa
sbb
jmp
test
loope
or
dec
sub
sbb
xchg
scas
pop
push
sub
push
pop
je
arpl
je
add
dec
and
push
cmp
les
adc
mov
cmp
shr
fsubr
add
jmp
cmp
cld
sbb
sub
les
and
sub
aas
jb
and
mov
lds
inc
xchg
xchg
mov
xchg
sahf
mov
lods
add
mov
sbb
icebp
cmp
popf
(bad)
fsubr
rcl
loopne
test
call
ret
test
call
jo
sub
inc
lea
push
add
jne
sub
jo
div
push
dec
or
cmp
cs
inc
jmp
cmps
add
pusha
jb
js
scas
fisub
mov
(bad)
cmp
adc
imul
mov
or
out
clc
ss
inc
sbb
data16
or
loopne
mov
xchg
test
add
inc
inc
fsub
and
in
add
ja
lea
mov
mov
adc
lds
xchg
push
or
jmp
add
out
ss
or
icebp
inc
pop
sbb
mov
dec
pop
loopne
out
or
pop
je
mov
ret
and
inc
sub
adc
mov
mov
pop
sbb
pop
ds
loop
mov
add
jne
fisttp
sub
mov
sar
lea
leave
lea
mov
clc
jne
mov
push
xchg
sti
sbb
jne
les
xor
sbb
fstp
hlt
add
les
loop
in
lock
test
and
(bad)
push
(bad)
loopne
mov
fist
call
pop
fmul
jmp
add
inc
and
cmp
pop
push
xchg
push
js
cvtps2pi
and
adc
cs
ja
fdivr
push
jne
and
(bad)
pop
ja
out
xchg
scas
jo
scas
cld
aad
xchg
xchg
sbb
push
adc
add
or
xchg
sub
inc
mov
xor
shrd
pop
fdiv
sbb
sbb
push
enter
xlat
push
push
fld
js
mov
and
pop
fdiv
add
loopne
sti
shl
loopne
fwait
jmp
mov
adc
cmp
cmp
je
mov
mov
mov
add
dec
repz
retf
dec
ror
div
cmp
jae
(bad)
jne
and
mov
adc
data16
jns
and
stos
push
leave
push
pop
jge
push
dec
test
dec
pop
push
lods
out
jnp
push
sbb
push
pop
and
xchg
mov
dec
scas
je
add
cmp
adc
cs
pushw
popa
hlt
push
jno
pop
push
sub
js
test
test
sbb
cmp
cmp
mov
and
pop
adc
cmps
jno
mov
add
sbb
cdq
adc
loopne
adc
and
mov
xchg
loopne
fcmove
push
sbb
adc
fld
adc
xor
pop
push
adc
ja
push
shl
and
mov
cmp
out
jbe
xchg
outs
mov
ret
adc
leave
mov
nop
push
jne
test
add
sbb
jbe
imul
sti
popa
cmp
in
xor
imul
ja
xor
push
or
cmp
loop
adc
test
adc
add
add
int3
and
jmp
pop
in
inc
cli
les
inc
fdiv
cdq
cmps
cld
sbb
pushf
inc
xchg
pop
push
mov
loopne
pop
shr
je
push
jg
sahf
add
and
in
add
add
hlt
jae
or
xchg
addr16
or
adc
push
dec
bound
adc
mov
pusha
lock
mov
mov
add
retf
test
fwait
test
in
pop
xlat
push
pushf
retf
inc
imul
aam
add
xchg
push
bound
sbb
push
clc
fmul
push
enter
jo
add
and
ror
out
mov
xchg
adc
aaa
push
add
xor
mov
adc
and
adc
rcl
sub
mov
xchg
movs
mov
int
jmp
xor
mov
xchg
in
and
aaa
push
(bad)
sbb
mov
clc
jp
imul
jae
sbb
add
push
fld
test
scas
xor
sbb
shr
xchg
jae
dec
sbb
mov
xchg
mov
hlt
jmp
fst
nop
in
fiadd
add
int
enter
sbb
or
mov
xor
pop
sub
push
mov
sbb
stos
pop
mov
in
push
in
push
in
test
dec
sahf
inc
in
cdq
inc
or
sub
add
pushf
mov
adc
dec
jmp
retf
shl
xlat
or
or
cmps
or
dec
xchg
cmps
nop
pop
lea
icebp
or
and
jne
imul
push
pushf
nop
(bad)
in
add
and
and
sbb
stc
and
push
push
mul
pop
mov
aam
shl
xchg
loopne
inc
mov
ins
in
(bad)
lods
mov
scas
and
gs
inc
cmp
pop
xor
inc
mov
fcom
push
mov
pop
ins
ror
rcl
jno
adc
or
cmp
sub
adc
leave
fadd
sbb
test
lods
cmp
(bad)
sbb
mov
push
xchg
add
mov
jle
mov
movs
dec
xchg
pop
dec
mov
movs
ins
mov
xchg
push
in
enter
mov
retf
sub
shl
pop
lock
cli
xchg
jge
add
mov
mov
xor
jmp
jl
jb
adc
fmul
inc
das
and
cwde
sbb
icebp
mov
es
xchg
gs
adc
aam
fcom
pop
mov
test
int
pop
cs
fneni(8087
cmp
nop
out
mov
or
xchg
out
xchg
rol
xchg
xor
pop
sahf
adc
cmovp
add
mov
sbb
mov
push
jne
push
mov
(bad)
and
in
movs
sub
xchg
xchg
adc
pop
push
imul
push
imul
cmps
or
daa
adc
bt
sbb
mov
leave
inc
dec
push
bound
movs
fst
pop
fldenv
loop
jne
mov
cmp
xor
ins
or
inc
dec
in
or
adc
add
ror
pop
scas
addr16
loopne
sbb
test
in
stos
and
mov
push
mov
add
cmp
cmp
adc
fs
adc
test
xor
xor
jp
fsubp
pusha
sub
mov
fnstsw
sahf
loopne
mov
add
in
jl
pop
and
jnp
jp
retf
pop
int3
xor
nop
cmp
jg
xor
dec
aaa
mov
jmp
xchg
sbb
push
sub
sar
jmp
push
adc
cmp
add
pop
push
out
push
add
cdq
add
popf
outs
imul
stos
cmc
cld
push
pusha
sub
or
cmp
inc
inc
lock
sti
push
movs
push
push
ja
mov
(bad)
je
push
dec
mov
mov
cld
es
in
lahf
or
lock
mov
sbb
ret
mov
(bad)
stos
inc
mov
lahf
rcl
mov
lea
sub
pop
jp
data16
mov
cmc
gs
mov
or
mov
adc
pop
and
psadbw
(bad)
push
sar
sar
xchg
mov
jbe
inc
sbb
(bad)
iret
add
paddb
(bad)
mov
jb
sbb
jp
mov
push
hlt
adc
push
push
int3
call
jmp
gs
adc
imul
adc
adc
lock
xor
(bad)
pop
nop
cli
jle
xchg
pop
jge
and
push
shl
adc
sbb
pop
aaa
lea
out
add
or
xchg
jne
lock
mov
jne
push
push
std
pop
mov
ja
ficom
mov
pop
pop
jmp
inc
mov
and
xchg
in
imul
lods
(bad)
mov
scas
jne
jb
test
out
enter
cmp
mov
ja
mov
push
dec
push
xor
ror
add
lahf
dec
sub
(bad)
fld
mov
add
sub
and
inc
add
mov
fs
pop
addr16
cmps
loop
mov
sbb
data16
mov
das
popf
shr
retf
xchg
jno
popf
sbb
stos
push
lea
mov
mov
xchg
mov
loopne
test
and
retf
xor
pop
clc
mov
cmp
fbstp
and
loopne
loopne
loopne
pop
fdiv
mov
or
push
add
xchg
dec
hlt
daa
in
hlt
test
mov
pcmpgtd
push
aas
inc
cs
mov
add
int
push
lea
int3
push
jns
inc
add
mov
xor
cmp
in
lods
pusha
add
bound
sbb
and
ds
das
call
cs
loop
retf
mov
jl
adc
lds
add
test
xor
lods
add
fs
jp
sub
push
push
js
daa
push
push
or
fmul
add
xchg
bound
sub
sub
sub
pop
nop
test
dec
add
cmp
sub
jbe
inc
jge
xor
xchg
stos
out
mov
dec
in
sub
push
add
call
inc
add
or
lods
mov
fiadd
ss
push
mov
add
push
push
push
cmp
add
clc
push
pop
pop
sub
mov
push
sub
test
clc
and
enter
icebp
push
lock
push
lds
pop
mov
jge
add
shl
mov
scas
push
adc
inc
xor
dec
xchg
pop
mov
jo
and
add
jp
push
dec
imul
lods
sti
mov
push
adc
push
stos
mov
pop
inc
mov
xchg
cmp
xlat
test
fidivr
pusha
jle
xchg
imul
add
push
rol
enter
cmp
ret
sub
shr
or
call
mov
push
js
sub
dec
or
loopne
sub
in
imul
sbb
loopne
shl
cdq
inc
outs
inc
sti
pop
pop
cmp
cmc
and
mov
xchg
out
cmp
in
ror
pop
add
jno
mov
xchg
lods
mov
jo
xchg
add
sbb
inc
call
sbb
lods
mov
adc
or
push
mov
movs
push
adc
push
sub
test
stos
jo
xchg
mov
push
jns
les
pop
push
pop
cwde
sbb
aas
or
mov
xor
mov
call
or
pop
pop
mov
push
mov
rcl
outs
push
lods
push
xor
test
stos
enter
mov
sbb
mov
push
and
dec
inc
mov
sbb
mov
dec
dec
clc
push
in
mov
xor
push
mov
xchg
push
fmul
add
sub
inc
movs
bound
je
push
sub
pop
fdivr
push
xor
enter
add
push
xor
add
add
cmp
shl
jg
add
and
push
xchg
stc
loopne
xchg
ret
add
add
(bad)
std
mov
add
enter
or
add
(bad)
sar
push
hlt
jg
mov
jb
adc
fiadd
push
sub
mov
test
in
icebp
jge
fdivr
push
push
add
ror
sahf
jge
cmp
and
xor
adc
add
push
jmp
mov
add
or
cmp
mov
sub
repz
cmp
jno
frstor
mov
push
push
push
pop
(bad)
sti
or
adc
sti
push
test
mov
mov
dec
xchg
data16
add
sbb
mov
push
or
popf
add
push
dec
in
push
sub
pop
cwde
push
jb
sbb
or
sub
sbb
mov
psubsb
mov
dec
pop
add
ja
popf
adc
movs
cmp
jge
push
xor
in
sti
popa
add
push
sub
sub
fwait
rcl
adc
mov
in
cmp
and
(bad)
ins
or
ror
(bad)
(bad)
xlat
jle
xor
(bad)
add
sbb
bound
dec
push
dec
inc
imul
in
cmps
pop
adc
loopne
aas
daa
cmp
shr
xor
into
or
mov
test
cmp
(bad)
jno
movs
adc
test
mov
add
push
stc
in
dec
pop
pop
push
in
cld
push
sar
call
sub
stc
cmp
jbe
sub
sub
adc
pop
cmps
loope
inc
ror
cmp
mov
sti
lock
sub
lea
lea
and
in
daa
pop
lds
mov
call
es
movs
add
mov
out
push
ins
or
jb
fwait
dec
lock
jmp
sbb
jge
stos
mov
mov
fmul
in
add
sbb
call
leave
retf
and
out
add
mov
enter
loopne
or
push
sub
push
sar
icebp
or
jmp
lods
iret
imul
push
(bad)
sub
pop
punpckldq
xchg
cmp
aaa
cmc
sub
push
xchg
add
dec
push
pop
lahf
test
xor
add
fmul
and
push
xchg
and
sub
or
stos
aaa
mov
shr
or
xor
push
xor
test
xchg
movs
sbb
pop
push
xchg
adc
ss
cmp
and
jb
mov
jle
sbb
ficom
sbb
lock
cmp
jle
inc
add
add
push
fs
adc
jne
ins
jg
xor
jmp
lods
mov
lea
push
pop
leave
add
or
fcomp
xor
and
add
mov
and
and
retf
or
lods
loop
fild
push
cmps
sbb
lea
in
retf
jle
enter
in
or
push
jno
jmp
dec
jns
aam
jb
push
pop
inc
cmp
or
or
mov
mov
adc
add
adc
sub
adc
add
adc
ret
jg
mov
mov
rol
int3
xchg
push
xchg
inc
or
add
rol
scas
cwde
add
add
xlat
fxch
sub
pop
xchg
and
jmp
pop
or
iret
scas
adc
add
mov
test
adc
call
das
outs
lods
sbb
leave
mov
aas
imul
scas
add
push
cmp
push
(bad)
fcmovne
test
imul
xor
pop
ja
jmp
or
push
shl
popa
rcr
or
jns
push
jmp
inc
das
in
mov
pusha
jecxz
dec
push
shr
xchg
add
(bad)
xor
fsubr
dec
sahf
dec
cwde
adc
cs
int3
mov
add
scas
or
ins
and
mov
dec
sbb
lods
in
mov
(bad)
mov
inc
enter
cmp
gs
shr
adc
mov
movs
fisubr
inc
int
add
mov
fincstp
popf
cld
add
push
jmp
or
jecxz
inc
stos
xchg
add
mov
push
mov
push
inc
fdivr
or
and
adc
pop
mov
pop
lods
xor
adc
pop
into
adc
aaa
pop
or
push
hlt
imul
pop
and
mov
inc
shr
dec
jo
enter
pop
xchg
test
mov
sub
sar
jecxz
cwde
lock
cmp
pusha
aam
pop
push
or
popf
inc
or
in
xor
adc
add
inc
inc
xchg
scas
cmp
je
(bad)
cmp
lds
xor
adc
mov
push
(bad)
int
jmp
arpl
jne
dec
pusha
adc
xchg
cmp
add
fistp
mov
or
jle
xchg
or
jge
push
push
push
outs
fadd
popf
dec
dec
enter
std
aam
mov
inc
icebp
add
or
dec
inc
add
or
mov
xor
lea
cmp
jbe
or
sete
inc
adc
mov
lock
shl
leave
xlat
(bad)
out
fnstenv
push
js
pusha
or
inc
out
push
cmp
push
sbb
js
cld
or
cmp
test
cmp
xor
add
sbb
sti
(bad)
int3
iret
jmp
push
adc
nop
test
adc
test
mov
aaa
jno
xchg
sub
push
es
add
push
dec
fsub
add
mov
or
add
push
retf
es
inc
loopne
and
out
jle
call
sti
mov
sub
push
dec
or
aad
shr
mov
or
mov
(bad)
jbe
js
jbe
mov
cwde
test
jne
fisubr
not
shr
cmp
jne
adc
cmp
jne
cmp
cmp
loopne
mov
mov
sar
and
inc
cmp
adc
jp
jb
loopne
loopne
int
push
inc
push
push
dec
mov
push
adc
and
(bad)
fs
cmp
cmp
xchg
out
mov
cmp
add
lock
mov
addr16
pop
fdivr
rcr
test
push
push
jg
retf
rcl
es
stc
cmp
mov
mov
aas
sbb
mov
or
sub
pop
ret
fbstp
push
push
adc
xor
or
pop
leave
xor
mov
aas
mov
adc
inc
or
sub
jo
pop
dec
in
mul
pop
xchg
shl
repnz
sub
daa
pusha
or
pop
or
arpl
inc
mov
rol
cld
lahf
push
dec
hlt
push
jno
xor
and
push
call
push
(bad)
xchg
ret
ret
jg
push
mov
xchg
adc
(bad)
adc
fst
or
ja
not
test
clc
es
cdq
mov
lock
gs
add
(bad)
add
xchg
xchg
mov
test
cmps
or
add
xor
loope
lods
xor
fs
mov
inc
pop
push
push
jb
jo
loop
push
fcmovbe
mov
cmp
aad
mov
ret
ds
jae
unpckhps
sbb
pop
je
xor
in
mov
int3
call
mov
fs
xor
sbb
call
pop
cmp
adc
dec
fdiv
xor
jno
xchg
xor
xchg
call
pop
jne
jne
add
lods
call
mov
push
push
cmp
(bad)
(bad)
in
inc
inc
loopne
adc
call
inc
sub
daa
or
add
movs
or
sti
push
repz
mov
fsub
push
xchg
mov
rol
pop
dec
je
retf
dec
imul
adc
je
rcl
retf
push
mov
pusha
pusha
sub
push
push
dec
push
push
stc
mov
xchg
inc
xor
mov
je
jne
mov
add
jge
inc
push
aaa
pop
cmc
sub
push
adc
jle
stos
add
sub
adc
ds
push
int3
mov
push
adc
jle
push
ins
cmp
call
or
pop
cmp
je
mov
push
xor
lods
xchg
pop
nop
andnps
clc
dec
cmc
mov
jo
pop
paddb
add
sub
daa
pop
mov
add
push
jb
test
pop
popa
fsubp
mov
push
inc
outs
shl
(bad)
imul
mov
sub
mov
add
xor
je
cmp
enter
push
neg
aam
inc
add
xor
inc
pop
imul
xchg
rol
jne
adc
outs
and
pop
cmp
mov
push
ror
sbb
div
mov
or
push
add
or
inc
add
add
cmp
or
pop
or
sbb
dec
sbb
sbb
add
lock
mov
pusha
adc
ins
push
pop
adc
sbb
adc
enter
adc
call
or
xor
inc
arpl
adc
aad
std
push
ja
in
or
or
leave
sbb
leave
ret
jo
or
je
mul
clc
sbb
push
xchg
cmc
pop
or
aad
enter
add
fimul
inc
lds
jns
jae
(bad)
sub
cdq
repz
push
stos
add
lods
imul
adc
ffree
popf
inc
outs
jae
sub
sbb
mov
adc
push
or
add
xor
add
or
je
push
cmp
xor
outs
shl
mov
or
aaa
and
push
neg
adc
cmp
retf
cmp
aad
sbb
(bad)
adc
sar
aas
mov
jb
es
mov
add
cmp
inc
mov
ret
rcl
add
out
je
aaa
xchg
test
cmps
shr
sub
and
mov
add
mov
std
jmp
pop
cmp
inc
enter
cmp
jb
add
clc
cmp
(bad)
adc
neg
sub
cmps
test
mov
out
fsubr
jno
dec
fwait
mov
or
test
dec
cdq
call
pop
fbstp
fiadd
test
inc
in
je
nop
fst
add
push
push
fild
(bad)
stos
dec
cmp
jns
sbb
or
inc
add
ja
mov
mov
sbb
xlat
xchg
xor
lods
xchg
sub
inc
pop
les
jb
xor
and
cmp
sub
cmp
sbb
lods
je
cmp
and
push
lea
push
int
add
fstp
adc
cs
sbb
fidiv
ret
push
add
jle
jae
dec
fsubr
sbb
(bad)
xchg
jae
pop
xchg
cdq
inc
or
data16
stc
adc
push
jmp
jg
mov
ficomp
adc
add
add
push
push
inc
ja
std
sub
push
add
push
jmp
sub
add
add
mov
bound
mov
in
mov
push
jmp
lods
jne
nop
pop
inc
and
in
(bad)
call
shl
add
repz
cmp
jae
push
pop
sub
cmp
cmp
or
inc
add
fild
inc
xor
push
sbb
mov
pop
sbb
dec
popa
mov
je
fisubr
dec
jbe
cmp
inc
xor
or
mov
cmp
push
test
(bad)
inc
loopne
lods
adc
mov
sbb
sub
lea
in
mov
push
ret
or
test
ficom
push
fs
mov
mov
lock
psubq
mov
sub
andnps
xor
push
push
mov
mov
mov
jo
dec
lock
jno
dec
sbb
ret
ins
and
add
add
cmp
and
(bad)
mov
mov
and
pop
test
call
add
clc
fwait
mov
(bad)
mov
dec
add
mov
movs
jle
jbe
dec
arpl
popf
test
pop
pop
or
sub
pop
sub
in
mov
movs
cmp
lods
jbe
push
inc
pusha
(bad)
rcr
call
fisttp
loopne
jmp
mov
add
adc
add
adc
(bad)
jbe
aas
jae
inc
xchg
or
mov
jo
test
shl
repnz
fidivr
xlat
xchg
rol
fiadd
cld
test
out
loop
jmp
push
shr
jmp
inc
adc
fnstenv
cs
cmp
aaa
mov
or
fistp
add
or
cdq
push
sub
into
jle
jmp
adc
out
or
loopne
aaa
cmc
jg
mov
pushf
retf
adc
or
jbe
fbld
push
xchg
push
mov
cmps
inc
xchg
sub
jge
fadd
dec
movs
call
pushf
inc
inc
retf
mov
hlt
sub
push
push
(bad)
loop
jmp
push
jbe
add
sub
lods
loope
in
or
cmp
mov
pop
daa
int3
movs
out
push
xchg
inc
inc
stos
pop
mov
mov
jl
push
adc
push
mov
dec
jmp
xchg
or
pop
popa
inc
mov
bound
stos
out
mov
push
(bad)
retf
dec
add
xchg
and
mov
rcr
rol
sbb
pop
lahf
test
in
nop
call
and
pop
inc
loope
xchg
sbb
mov
scas
add
js
push
jnp
inc
inc
or
jno
adc
jmp
push
bound
sub
(bad)
jne
jno
add
icebp
mov
les
pop
mov
movs
jmp
cmp
mov
ret
stos
jle
cmp
jne
pop
adc
jle
loop
clc
xlat
jb
mov
stos
test
jp
pop
test
dec
adc
rol
adc
inc
std
sub
xor
jmp
mov
lock
cmp
ins
sbb
jo
adc
outs
loop
loop
call
daa
neg
addr16
aaa
in
add
sbb
add
push
adc
dec
adc
push
add
adc
adc
fstp
pop
sbb
add
lock
or
adc
inc
inc
or
or
push
mov
pop
sub
adc
xor
xchg
adc
pop
data16
push
xor
inc
sbb
je
rcr
dec
call
sti
mov
scas
movs
jmp
rcl
mov
pop
mov
push
iret
adc
loope
add
cwde
jbe
cmp
inc
cmp
inc
push
add
mov
add
add
call
mov
cmp
or
bound
and
cmp
mov
sbb
xor
adc
and
pusha
shl
jo
mov
addr16
ds
xor
adc
outs
scas
inc
push
out
mov
adc
sbb
pop
rcr
test
dec
adc
rcr
push
(bad)
imul
data16
pop
je
pop
pop
aaa
and
sbb
lock
xor
sbb
in
hlt
hlt
add
idiv
call
daa
pushf
mov
inc
call
retf
fisttp
loope
push
(bad)
ficomp
xchg
(bad)
xor
loopne
clc
std
jo
xchg
add
loop
adc
rol
cmp
and
adc
add
push
mov
push
int3
popa
mov
inc
or
cmp
xor
in
je
fs
fnstcw
adc
mov
sbb
push
jg
cmp
cmc
mov
mov
and
sub
aaa
or
push
push
ror
out
jp
xor
popa
sub
xchg
ins
int
adc
cmp
and
mov
fsubr
mov
cmp
call
neg
jno
sub
push
sbb
add
lea
fimul
and
int3
rcl
adc
mov
ds
push
fcom
or
jbe
out
outs
dec
aam
or
xor
push
push
push
add
push
cmp
dec
adc
test
mov
cmp
icebp
sar
cmp
inc
push
mov
pop
outs
inc
pop
jmp
mov
push
mov
push
mov
cmp
dec
clc
jb
adc
sub
mov
loope
pop
dec
mov
mov
pop
inc
jle
add
cdq
test
fwait
aas
push
mov
into
aaa
ret
std
mov
sub
xchg
push
out
lea
aad
jb
inc
jmp
rcl
scas
into
sub
or
push
adc
adc
or
mov
cli
outs
imul
cmp
lea
add
adc
nop
inc
xchg
lahf
iret
dec
mov
adc
das
daa
fadd
add
push
xchg
out
adc
pop
or
add
inc
sahf
add
lock
cmp
daa
inc
xchg
out
add
inc
sbb
nop
push
push
fsub
nop
cmp
leave
sbb
imul
cmp
sub
nop
sbb
adc
loopne
add
ror
sub
fsubr
push
je
fsubr
pop
in
xor
sub
add
pop
pop
pop
mov
sub
xchg
mov
xor
jmp
add
call
or
test
inc
and
xchg
fst
icebp
in
pushf
or
nop
dec
mov
imul
dec
es
inc
jg
or
push
mov
dec
into
fwait
dec
mov
inc
add
cmps
ret
pop
dec
in
jne
in
jp
cdq
test
dec
movaps
jge
adc
adc
sub
adc
add
add
xor
out
neg
aaa
out
and
inc
xchg
push
and
mov
enter
rcl
xchg
icebp
pop
jl
cmp
add
pop
cmp
in
lock
sbb
dec
nop
and
cwde
int
sbb
add
repz
pop
inc
sub
fwait
or
mov
repz
mov
inc
fnstsw
mov
sbb
sbb
push
mov
and
sub
xchg
(bad)
and
aas
mov
daa
lock
xor
push
das
and
jmp
jne
test
loop
or
xchg
inc
or
repz
sbb
cwde
out
or
out
push
shr
call
(bad)
sbb
jo
push
or
adc
push
inc
cmps
push
test
push
iret
or
test
test
movs
setno
or
jmp
mov
dec
push
clc
(bad)
shl
leave
mov
out
ror
push
adc
ja
int
cld
ret
adc
mov
ss
or
cld
add
adc
adc
sbb
sub
stos
dec
fcom
push
add
(bad)
hlt
add
push
xor
dec
out
push
aas
stc
(bad)
clc
sbb
sbb
ss
fmul
outs
mov
sti
cs
or
jbe
aaa
je
imul
cmp
xor
sahf
out
cmp
cmps
and
cli
mov
and
mov
cmp
ret
dec
sbb
mov
test
je
mov
sub
push
or
sbb
loop
retf
mov
pusha
mov
xchg
addr16
pop
jne
cwde
pop
shr
inc
mov
clc
dec
clc
add
cmp
cmc
dec
loopne
and
dec
bound
xchg
push
pushf
sar
adc
pusha
xor
test
je
mov
xrelease
mov
pop
hlt
jb
and
adc
sub
and
(bad)
jmp
push
cmp
arpl
ds
pop
jge
jmp
data16
mov
sub
sahf
adc
test
retf
outs
in
inc
push
sub
repnz
sbb
jnp
js
lods
bnd
loop
and
loopne
push
daa
push
inc
cmp
dec
cmp
push
mul
mov
fld1
push
call
cs
call
inc
jg
in
sbb
adc
repz
fcom
push
jecxz
sbb
push
push
sbb
popf
jle
repnz
jle
ror
nop
call
mov
and
das
jb
jnp
and
push
push
and
inc
stos
test
ror
push
sbb
push
mov
cmp
sbb
and
enter
cmp
jmp
cmp
jae
inc
mov
mov
inc
inc
inc
jmp
es
jp
inc
hlt
jb
mov
and
aaa
hlt
(bad)
adc
clc
sub
push
out
sbb
lods
fwait
or
cmp
(bad)
bound
adc
adc
es
inc
stc
cmp
xlat
cli
jb
push
fsub
leave
lahf
xor
into
push
add
in
movs
ins
cdq
jne
inc
xchg
and
(bad)
inc
rcl
jne
mov
sbb
sbb
or
push
aaa
xor
adc
jmp
dec
sbb
add
fmul
pop
rep
and
sar
sub
or
adc
jp
ins
aaa
cmp
or
(bad)
cli
pop
mov
add
cmp
adc
pop
cmp
(bad)
test
adc
sbb
mov
sbb
imul
fidiv
lea
outs
and
rcr
jle
dec
mov
push
xor
add
jno
add
addr16
cmc
sar
mov
add
jne
or
adc
setb
cmp
addr16
cmp
or
stc
in
mov
cmp
(bad)
in
mov
movs
hlt
pop
push
aam
push
clc
jb
pop
adc
jbe
xor
push
out
mov
stos
test
add
pusha
(bad)
jmp
dec
push
adc
dec
mov
add
mov
or
out
add
sbb
add
or
push
sub
daa
mov
mov
jae
int
mov
and
test
xchg
push
mov
xchg
fbld
data16
cmp
jbe
sub
sbb
clc
mov
or
sar
cmp
lahf
push
je
push
jmp
dec
(bad)
sti
loop
or
or
dec
or
arpl
add
dec
inc
rol
mov
dec
sub
js
push
xchg
push
push
sbb
psrlq
lock
adc
shr
sbb
mov
stc
mov
or
push
push
daa
or
ret
int3
hlt
add
fdivr
fsubr
dec
call
add
ins
xor
xchg
pop
fwait
or
mov
dec
nop
pushf
push
push
push
fadd
and
sbb
add
push
stc
adc
and
out
fdivr
pushf
ret
(bad)
or
mov
and
scas
or
loopne
or
(bad)
sub
or
and
lahf
data16
sbb
pushf
leave
and
mov
std
sbb
adc
adc
dec
and
inc
sub
daa
inc
adc
lock
clc
xchg
push
movs
sar
sahf
imul
add
popa
and
out
fdiv
fcom
jbe
add
add
daa
or
or
dec
dec
jne
adc
inc
je
push
popf
jb
enter
lock
dec
enter
popf
rol
jmp
out
test
mov
xor
dec
xchg
mov
test
inc
daa
inc
mov
bnd
mov
es
sub
call
mov
(bad)
aaa
(bad)
mov
cmp
jne
inc
rcl
fimul
pop
(bad)
mov
pop
ret
mov
xchg
adc
ror
cdq
pushf
mov
mov
call
ss
(bad)
fcomp
nop
sbb
in
movs
sub
adc
adc
dec
call
retf
inc
push
xor
in
mov
jle
and
jo
lock
adc
mov
inc
pop
mov
push
push
push
and
je
adc
dec
mov
pop
sbb
push
sbb
daa
mov
shl
xchg
sub
inc
mov
and
xor
add
(bad)
js
push
adc
pop
sub
idiv
jo
dec
mov
das
add
outs
je
cmp
xor
adc
pop
jl
pop
les
sub
data16
inc
mov
mov
add
mov
and
pop
sti
adc
jmp
xchg
mov
(bad)
push
push
sbb
loop
mov
add
ins
and
add
pop
inc
and
lods
adc
dec
jge
call
lock
loop
push
shl
push
push
(bad)
ins
lods
add
movs
add
xor
add
adc
sub
aad
sub
xlat
jno
je
test
jge
shl
test
inc
sub
dec
mov
pop
cwde
loopne
jno
stos
dec
sbb
lods
pop
cmps
mov
sub
lds
aad
cwde
mov
sbb
dec
add
push
mov
inc
jge
and
push
call
and
and
std
lods
add
stc
add
call
enter
mov
push
add
adc
jmp
jno
daa
cmp
pop
mov
jne
dec
ret
push
or
iret
add
test
loop
clc
push
ja
stc
jbe
add
cmps
and
push
push
aaa
sar
xor
sahf
or
jb
add
nop
sbb
adc
mov
pop
jmp
jns
sbb
pop
outs
ret
fsub
fistp
fnstenv
mov
cwde
pop
mov
xchg
ret
mov
or
push
add
and
fdiv
inc
sub
fidiv
dec
outs
pop
loopne
icebp
movzx
or
push
add
hlt
shl
or
adc
fsub
dec
rcl
adc
jecxz
sbb
sub
test
icebp
and
xor
push
mov
inc
sub
cmps
adc
xor
add
and
inc
loop
stc
cmp
dec
les
add
test
inc
mov
stos
add
bound
mov
je
ins
lds
dec
jbe
lock
pop
test
inc
es
imul
dec
inc
add
add
lods
pop
dec
cmp
cmp
jbe
pop
ins
aas
mov
imul
add
xor
jne
push
sub
retf
das
icebp
mov
add
push
outs
sbb
ret
adc
lods
or
and
and
sub
mov
pop
ja
ror
cmp
jle
sbb
push
addr16
test
mov
not
outs
dec
clc
ja
nop
movs
idiv
lock
push
ins
add
xchg
inc
mov
and
dec
mov
add
aad
or
movs
or
mov
inc
xchg
and
mov
jecxz
jo
nop
add
add
pop
pop
cmc
pop
pop
mov
adc
adc
xchg
push
mov
push
sub
inc
arpl
nop
push
dec
(bad)
cmp
jne
ins
dec
cmp
in
retf
xchg
add
inc
or
sahf
mov
sub
sbb
pop
xadd
and
dec
or
add
je
adc
pop
add
jmp
cmp
cdq
cdq
mov
push
test
ja
in
or
movs
push
add
jno
fs
leave
pop
mov
rol
adc
outs
jg
and
in
add
adc
pop
js
arpl
shl
out
add
in
xor
call
inc
xchg
and
add
or
xchg
fwait
test
loope
inc
cmp
pop
cmps
scas
adc
idiv
push
sub
push
and
into
fs
jmp
dec
sub
arpl
inc
(bad)
fld
mov
cmp
add
add
lock
mov
mov
shl
fcom
jle
jno
not
push
xor
cmps
jo
pop
arpl
push
jmp
lods
add
jnp
ret
std
xchg
add
mov
or
gs
dec
(bad)
aaa
jbe
lea
sbb
sub
push
ins
ror
xor
jp
add
stos
outs
add
xchg
xor
loope
aam
rol
sbb
mov
lea
push
mov
scas
adc
popa
out
dec
pusha
xchg
fcom
adc
xchg
inc
add
movs
add
sub
dec
dec
call
mov
xchg
enter
xor
xlat
sub
jnp
add
add
add
cmps
cmp
or
mov
dec
pop
mov
test
aas
adc
mov
jnp
pop
sub
inc
push
sbb
mov
dec
push
mov
lea
cmp
sub
jne
or
mov
std
sbb
xor
inc
stos
add
mov
or
pop
icebp
inc
jbe
inc
out
push
out
mov
adc
lock
sbb
inc
dec
sub
push
jmp
and
inc
jl
or
mov
popa
jl
jae
shr
jp
ja
xor
jle
or
je
lahf
jge
jae
je
pop
je
sub
sar
add
ret
cdq
push
inc
repnz
rcr
mov
pusha
adc
or
lods
lods
(bad)
xor
push
fst
xchg
ret
adc
jbe
and
add
push
ss
or
dec
dec
mov
cmp
or
shl
xchg
pop
xchg
add
adc
cmp
mov
cmps
cld
add
cmp
jmp
mov
mov
cmp
in
rcr
mov
loopne
cmp
inc
je
or
pop
pushf
dec
add
imul
pop
cmp
sub
pop
add
ja
fsubr
enter
push
dec
repnz
adc
add
je
imul
jne
push
push
pop
test
dec
in
xor
push
sahf
cmp
sub
push
loopne
into
xchg
lahf
cmps
or
mov
add
adc
push
into
rcl
add
popf
push
shr
push
jbe
out
add
fmul
push
add
fadd
jne
outs
pop
mov
add
push
push
fimul
int3
es
cmp
aam
sub
in
dec
add
add
add
and
mov
mov
cmps
ins
test
call
push
clc
inc
fsub
cmp
loop
(bad)
fxch
push
rcl
je
cli
bound
in
xchg
in
sub
mov
pop
call
add
lock
and
lock
dec
ss
ins
jno
retf
add
and
or
movs
cmps
mul
dec
jp
loop
sbb
xor
xchg
sbb
add
add
popa
loop
stos
test
xlat
nop
sbb
or
dec
int
sub
add
pop
dec
jnp
clc
sti
push
cmp
jb
imul
imul
cdq
fs
call
dec
es
xor
movs
xchg
arpl
xchg
dec
fwait
cmp
in
aaa
repnz
fstp
les
fwait
and
push
mov
pop
jne
clc
pop
arpl
adc
xor
inc
dec
arpl
fs
cmps
call
mov
mov
dec
sar
mov
js
pop
pop
hlt
dec
and
nop
stos
fild
mov
loopne
cld
pop
push
into
inc
hlt
cmp
jb
sub
je
adc
pop
push
sbb
pushf
shl
sbb
xchg
inc
add
fistp
gs
aam
add
stos
(bad)
mov
int3
push
or
fdiv
lock
fmul
jns
lock
push
push
pop
dec
daa
lock
pop
xlat
jg
cmp
out
inc
sub
sbb
mov
and
aas
xor
cmc
mov
cmp
add
test
les
cs
mov
call
adc
and
cmp
call
in
adc
test
add
jecxz
push
push
push
out
inc
mov
call
xchg
add
xor
sbb
in
call
push
lea
adc
repz
ins
das
sbb
pop
call
jmp
and
or
fisubr
jb
pop
aam
pop
(bad)
cli
mov
inc
jecxz
pop
jo
cmps
imul
test
loope
adc
jne
jl
mov
push
jno
ins
ret
iret
mov
mov
fcomi
sub
xchg
and
(bad)
dec
cmps
das
sub
cmp
mov
pop
std
mov
enter
mov
loope
push
add
push
push
and
out
scas
cmc
dec
pushf
jmp
cs
sbb
inc
and
or
xchg
pushf
mov
int
retf
js
fdivr
sti
push
bound
push
jno
leave
dec
and
in
lahf
leave
or
mov
in
xor
in
daa
adc
jmp
fistp
inc
mov
pop
push
stos
cs
or
int3
retf
push
push
sbb
shl
xor
das
add
ss
mov
enter
cmp
fdiv
bound
pop
fldenv
shl
sub
add
enter
sub
mov
push
inc
cwde
lods
push
add
inc
lea
and
adc
mov
je
xchg
mov
mov
rcr
psrad
xlat
xor
inc
mov
aas
mov
(bad)
push
mov
mov
cmp
jnp
fcomp
pop
jno
les
mov
in
adc
adc
cmp
lea
cli
inc
xor
les
mov
jne
dec
sbb
or
adc
sbb
lods
(bad)
data16
xlat
mov
or
inc
adc
sbb
movs
ss
push
cmps
xor
xchg
sub
adc
mov
lods
mov
push
xor
pop
icebp
scas
mov
jo
adc
aas
push
in
adc
or
jl
or
ret
push
ins
clc
mov
push
sbb
arpl
lds
sbb
fist
sysenter
inc
add
or
and
in
push
and
xor
hlt
inc
lods
or
fsubp
mov
xlat
jge
mov
mov
inc
or
jne
xor
or
sbb
cmc
add
fist
pushf
sbb
mov
stos
or
cmp
pushf
pop
xchg
das
test
adc
push
and
push
pop
cmp
test
outs
sub
mov
out
sahf
push
sahf
imul
nop
cmp
nop
or
es
or
mov
add
sahf
xor
sbb
aaa
push
inc
mov
mov
add
mov
or
add
mov
xchg
iret
mov
lods
iret
imul
add
push
jmp
sbb
mov
or
jecxz
(bad)
ja
mov
jl
mov
loop
retf
in
shr
or
data16
(bad)
mov
dec
inc
cld
mov
in
cmp
cmp
or
push
adc
stos
sar
data16
mov
daa
shl
add
(bad)
mov
push
mov
adc
popf
and
or
mov
and
test
and
sbb
jecxz
sub
and
dec
leave
cmp
and
icebp
fdiv
sbb
pop
push
jmp
or
jmp
add
inc
push
pusha
scas
xchg
add
mov
add
adc
jae
xchg
sahf
or
sub
retf
pusha
test
or
(bad)
adc
push
(bad)
fs
dec
pusha
push
aad
add
adc
cmc
and
mov
cmp
retf
inc
loop
lock
push
inc
lea
dec
idiv
std
or
sub
(bad)
cs
adc
loopne
pop
iret
pop
leave
xchg
daa
test
jbe
push
arpl
shr
xor
sbb
les
add
jns
mov
dec
movs
ficom
push
leave
pop
adc
add
mov
or
(bad)
jns
sbb
cmp
jmp
add
mov
adc
cmp
and
jmp
mov
push
push
xchg
adc
leave
add
mov
push
(bad)
mov
cmp
inc
scas
lea
mov
push
cmp
ret
push
jecxz
es
inc
int3
inc
outs
sbb
ja
mov
pop
pop
sub
rol
imul
push
mov
push
add
cmp
das
les
cdq
shr
scas
js
or
adc
xchg
pop
jmp
fs
test
mov
inc
mov
xor
test
mov
es
push
mov
(bad)
adc
adc
leave
cmp
test
or
retf
repz
or
dec
hlt
add
push
jg
aas
pop
sbb
int
test
jmp
mov
sub
mov
push
xchg
outs
dec
mov
push
adc
hlt
dec
dec
jnp
(bad)
add
push
call
or
xchg
or
dec
cmp
out
or
je
push
or
aaa
inc
xchg
mov
aad
(bad)
hlt
fsubr
out
adc
loope
movs
xor
push
xchg
je
dec
mov
adc
test
sahf
ss
mov
dec
sahf
scas
dec
push
push
jb
dec
mov
pushf
adc
call
adc
test
pop
cwde
adc
jle
xor
je
or
push
mov
and
adc
or
adc
int
adc
pop
imul
add
mov
inc
shl
sbb
inc
outs
ret
lock
fmul
xchg
fwait
xchg
dec
mov
je
add
cmp
cmp
mov
or
sbb
rcl
mov
xchg
sar
sbb
adc
mov
mov
and
sbb
cs
jo
call
shr
ja
sbb
sub
pop
call
push
adc
lea
add
ja
or
or
mov
loopne
push
mov
dec
add
ret
bound
mov
or
jmp
ins
bound
je
push
aam
out
jae
add
and
mov
add
mov
mov
ficomp
add
int3
mov
scas
les
xchg
add
or
out
dec
sub
pop
adc
mov
xchg
inc
out
setne
and
call
mov
daa
jmp
sbb
or
ret
and
mov
jne
lahf
aam
pop
add
test
xchg
inc
mov
cmp
push
sub
test
lods
mov
movs
imul
or
add
add
test
in
add
sub
(bad)
std
push
jg
sub
pop
add
mov
cmp
sub
fstp
fadd
cmp
push
push
ja
nop
cmps
test
add
out
jmp
mov
mov
or
and
js
sub
push
adc
or
or
add
and
push
mov
sub
lea
mov
add
add
inc
nop
add
jbe
xor
add
mov
push
daa
push
cmp
push
mov
cmp
cmp
ja
movs
mov
add
mov
adc
mov
push
pop
or
sbb
mov
jne
enter
or
inc
inc
movs
add
cmp
mov
out
push
mov
lods
fsubr
and
out
sbb
mov
outs
test
lea
pop
out
pop
push
or
gs
sbb
ins
inc
jb
adc
test
or
xchg
mov
inc
xor
mov
add
push
xchg
push
add
push
or
pop
adc
or
rcr
push
sub
loopne
shl
mov
push
fdiv
call
push
and
mov
int
div
je
mov
mov
xor
fdiv
sbb
xchg
push
adc
mov
in
dec
xchg
into
pop
push
nop
push
dec
sbb
sbb
cmp
sbb
ds
push
push
push
(bad)
fdivr
fcmovnbe
sbb
test
shr
movs
in
sbb
mov
push
mov
outs
data16
fild
std
nop
mul
sub
and
pop
popf
lea
call
sub
sbb
inc
je
sub
(bad)
sub
cs
push
mov
xchg
jmp
cwde
add
pop
dec
mov
xor
jle
and
add
(bad)
int3
cmp
dec
clc
inc
xchg
fcomp
and
lods
and
mov
imul
sub
and
sub
add
dec
fs
mov
shr
or
call
loop
shl
adc
jp
cli
jb
cwde
adc
and
(bad)
cmp
mov
imul
(bad)
les
push
call
ror
imul
dec
or
jmp
add
push
js
cmp
mov
cmp
push
sub
inc
repnz
adc
test
sub
sub
popf
fldenv
mov
scas
hlt
rcr
jmp
push
add
in
add
dec
jns
jno
inc
rcr
js
push
daa
cmc
mov
jo
mov
call
cmps
pop
jl
nop
aas
fld1
push
adc
add
add
or
ss
push
push
jns
inc
inc
or
jo
mov
nop
xor
loopne
cli
or
jle
add
mov
movs
(bad)
pusha
jmp
pop
ficom
cmp
pusha
pop
xor
ins
dec
retf
repnz
push
xor
cmps
cmp
add
movs
mov
add
jb
mov
mov
add
xchg
ret
mov
hlt
cmp
or
and
je
mov
xchg
inc
lods
lahf
mov
mov
mov
loopne
out
je
sar
push
push
add
lds
jmp
sub
sub
pop
mov
sub
xor
or
add
and
cmp
or
cmps
xor
add
pusha
fs
push
sbb
lea
fs
mov
ds
imul
loop
xchg
pushf
mov
add
or
mov
jno
or
imul
cmp
scas
fwait
out
adc
jg
xor
sbb
and
fldz
fstp
mov
aaa
int
je
jl
mov
xchg
dec
test
xor
dec
xchg
pusha
test
dec
adc
and
add
jb
fmul
push
in
jle
push
mov
mov
push
mov
cmp
or
push
cmp
es
xchg
adc
inc
call
and
adc
lahf
inc
cmc
mov
ret
mov
push
gs
lock
fsubr
and
cmps
push
xor
adc
pop
jmp
jl
push
test
(bad)
push
or
adc
cld
in
ds
jmp
inc
jne
neg
or
mov
sahf
movs
fnstenv
pop
xlat
mov
lock
jo
dec
adc
ret
push
fwait
aas
jb
aad
aad
pop
sar
cmp
sub
add
or
xlat
out
mov
(bad)
pop
mov
loop
je
inc
test
adc
jge
sbb
jne
sbb
pop
xchg
lea
mov
test
je
push
xlat
sbb
sub
sub
mov
add
pop
sbb
repz
pop
mov
imul
mov
xchg
or
adc
push
fadd
and
sbb
sbb
mov
fisttp
or
clc
add
dec
sbb
retf
and
sbb
nop
sub
mov
add
add
das
cld
push
rcr
call
pusha
or
pop
jnp
xor
int
add
fmul
jns
and
jne
xor
leave
adc
sbb
and
int
in
add
or
jns
mov
push
shl
sbb
movs
add
add
pop
dec
sbb
push
sbb
sbb
dec
sbb
stc
xor
push
sbb
or
loopne
shr
sbb
pusha
sbb
and
dec
shl
cmp
xor
jmp
lea
mov
jnp
movs
add
xchg
xor
sbb
cmp
push
dec
or
mul
cmp
or
not
mov
ds
xchg
cmp
pop
push
and
adc
xor
xchg
(bad)
xor
sub
fcomp
or
rcr
pusha
jo
xchg
int3
push
jmp
psubusb
sub
cdq
mov
mov
mov
inc
jle
mov
scas
pop
sub
cld
pop
xchg
ror
cli
add
mov
dec
loope
xor
int
push
stc
or
push
add
rol
sbb
cdq
sbb
mov
xor
adc
ret
add
imul
mov
push
js
lods
mov
add
cmp
fadd
ds
ret
test
loope
jmp
inc
mov
cdq
pop
mov
jmp
add
in
pusha
cmp
rol
and
mov
fdiv
inc
sbb
adc
mov
(bad)
dec
sub
je
push
sub
mov
ds
and
push
jae
xchg
aam
in
mov
sbb
out
lea
adc
mov
call
in
enter
or
mov
test
sub
mov
xchg
rcl
sub
je
add
adc
je
dec
cmp
xchg
jle
rol
enter
xor
xor
js
and
cdq
or
(bad)
pusha
inc
and
inc
push
jmp
cmp
cmp
mov
mul
add
shl
cmp
cmps
or
imul
xchg
ret
test
out
pusha
adc
adc
mov
add
xor
add
jb
sub
adc
or
adc
inc
and
lods
jmp
inc
cmp
push
dec
in
fnop
shl
les
xor
pop
clc
adc
push
jb
adc
popa
inc
cmovs
mov
pushf
xor
adc
push
jb
inc
nop
cdq
inc
inc
push
push
xchg
or
jo
inc
push
in
xchg
test
adc
dec
rcl
imul
inc
jb
inc
mov
adc
push
loope
push
ror
dec
ret
data16
or
push
(bad)
fadd
dec
and
push
sub
mov
fcomp
fcomp
sub
pop
loopne
push
call
mov
and
dec
dec
je
and
ja
in
or
(bad)
in
ins
(bad)
mov
or
test
loope
adc
inc
xor
call
test
mov
sub
or
outs
sbb
add
leave
pop
rol
sbb
or
scas
sbb
pop
push
cmp
mov
dec
cmps
(bad)
mov
loopne
adc
adc
adc
pop
mov
adc
pop
mov
fist
mov
and
mov
mov
sbb
push
mov
not
push
test
inc
enter
ret
inc
jl
pop
test
and
and
dec
(bad)
fst
mov
add
nop
shl
cmp
mov
push
add
add
pop
mov
add
and
loop
adc
mov
or
aad
pop
mov
push
mov
bound
in
sbb
sbb
sbb
or
enter
repnz
jl
mov
push
jb
adc
call
adc
jmp
jle
std
dec
in
jbe
inc
ret
popf
popf
xor
and
or
movs
inc
and
stos
rol
mov
pop
sbb
mov
in
add
mov
add
push
push
add
je
add
(bad)
xlat
adc
xchg
add
pop
cld
ret
mov
inc
xchg
jge
(bad)
je
dec
je
cmp
or
mov
dec
mov
ret
stc
pop
shl
mov
adc
and
add
movs
test
push
mov
mov
or
mov
fs
xchg
xor
cmc
inc
jno
mov
mov
xor
add
out
xchg
sar
xchg
mov
pop
xchg
jo
pop
gs
jge
mov
or
sti
movs
push
rcl
cli
and
push
push
cmps
cmp
xchg
clc
in
mov
dec
jmp
and
movs
cmps
sub
aam
cmc
shl
sbb
mov
sub
je
ds
or
pop
sub
ds
dec
mov
mov
mov
in
ror
lods
retf
movs
pop
nop
or
shr
pusha
loop
jg
adc
cmp
xchg
or
jmp
or
jne
cmp
out
in
in
or
in
nop
in
or
jb
leave
and
jns
in
lar
call
call
movs
jb
mov
inc
add
popa
fs
sub
retf
cs
dec
sbb
xchg
xor
cmp
(bad)
in
adc
pop
in
dec
jne
das
push
clc
jl
and
sub
scas
mov
mov
mov
hlt
nop
push
and
dec
sbb
sub
adc
add
and
je
add
add
push
dec
sub
repnz
pop
ret
cs
fs
inc
rcl
fdivr
xchg
mov
cwde
xor
aam
adc
sar
jne
inc
aam
cmp
(bad)
jmp
mov
push
ror
mov
cmp
out
ret
push
and
add
loope
in
fwait
int3
nop
movs
jb
loopne
fsubr
or
cmp
and
dec
dec
dec
(bad)
pusha
and
or
jne
ret
or
xchg
retf
fist
jno
or
or
mov
arpl
xchg
cmp
ins
mov
pop
pusha
test
pop
mov
push
loope
jnp
add
retf
sbb
data16
movups
sbb
packssdw
call
sub
fistp
pop
sbb
rcl
mov
cs
dec
sbb
xchg
retf
jne
pop
or
les
imul
or
mov
mov
and
push
mov
sub
and
push
sbb
cmps
les
rcl
sub
or
cli
or
mov
std
movs
test
and
add
mov
dec
xchg
mov
jbe
mov
ds
push
retf
unpckhps
popf
cwde
movs
pop
mov
mov
adc
and
sub
xchg
mov
scas
jmp
cmp
push
test
nop
xchg
and
shl
cwde
mov
xchg
mov
ror
pop
daa
push
cmp
aas
les
stos
xchg
and
pop
sbb
leave
jbe
jmp
js
add
mov
cmc
aam
pop
add
sbb
repnz
add
rol
dec
xor
push
add
pop
adc
int3
add
and
in
or
adc
adc
or
movs
fstp
push
or
adc
or
inc
adc
xchg
ror
stos
into
dec
setno
mov
or
or
sbb
adc
push
rcl
xor
jg
adc
mov
xchg
add
push
xchg
xchg
cmp
add
fidivr
mov
les
sub
adc
push
and
push
push
aaa
xchg
mov
cs
jns
add
leave
xchg
js
mov
rol
enter
mov
shr
sbb
aaa
or
scas
mov
enter
dec
lock
push
adc
xchg
mov
xor
mov
cmp
popa
ret
aaa
mov
retf
nop
pop
cmp
nop
aam
fmul
push
ja
test
pushf
pop
jnp
movs
add
test
and
les
mov
or
rcl
dec
mov
and
sbb
pop
(bad)
rol
sub
and
mov
rcl
adc
adc
xchg
cmp
push
arpl
hlt
mov
stos
mov
adc
mov
add
jg
aam
mov
lods
push
xor
and
adc
pushf
mov
rep
mov
sbb
jge
add
cmps
adc
mov
int
mov
test
test
fbstp
sbb
cmp
shl
or
dec
push
mov
imul
stc
stc
rol
or
sub
jecxz
cmp
nop
add
sbb
xchg
test
xor
mov
lock
push
pop
ins
test
jbe
adc
or
ror
xor
mov
xchg
aad
add
jns
jmp
lds
adc
arpl
das
ja
sub
call
int3
aam
leave
jp
shl
in
cmp
(bad)
mov
mov
sub
and
cmp
mov
cmps
loopne
add
sbb
jne
push
inc
sub
(bad)
out
add
loopne
das
sub
jb
aad
mov
and
xor
adc
add
fidivr
mov
test
aas
add
inc
pop
(bad)
pushf
fmul
lea
add
mul
fdivrp
cmp
push
pop
cmc
stc
add
(bad)
or
dec
jge
fnstcw
cmp
ins
mov
mov
jbe
push
test
and
lds
adc
out
or
inc
push
sbb
sbb
xchg
es
popf
rcl
nop
shl
inc
movs
add
or
add
xor
pusha
outs
fldz
fcom
fnstsw
test
je
fstp
fld1
sbb
loopne
repz
push
sub
sbb
jmp
cmp
xchg
test
xor
xor
test
push
xchg
rcr
inc
jmp
repnz
inc
rcr
push
lock
push
jnp
push
push
call
mov
movs
dec
add
sahf
adc
test
(bad)
fidivr
sbb
jmp
xor
and
push
jb
ins
js
je
sbb
and
xor
inc
(bad)
js
stos
rol
imul
pop
or
je
dec
push
push
push
dec
mov
in
nop
daa
add
add
mov
push
or
les
xchg
pusha
(bad)
and
add
call
dec
sub
clc
aas
movs
xchg
sbb
pop
and
xchg
stos
ds
(bad)
dec
pop
pop
pop
js
lea
push
shl
and
add
ret
les
test
or
push
mov
dec
imul
aam
js
push
sub
sub
jp
pop
ret
int
add
push
add
mov
div
add
xchg
cmp
add
stos
test
clc
add
push
push
push
adc
xchg
daa
out
add
jecxz
ins
popf
add
cdq
idiv
xor
das
jns
mov
enter
cld
scas
das
arpl
dec
cmp
rcl
das
es
je
enter
dec
xor
loope
jge
dec
or
add
rcl
hlt
sbb
jmp
leave
mov
mov
add
int
jnp
pop
aaa
shl
dec
sti
add
jbe
push
clc
inc
jmp
add
sbb
sub
add
add
adc
cmp
add
push
sahf
jo
or
inc
push
pop
dec
mov
push
mov
adc
mov
(bad)
xlat
adc
fst
or
add
jbe
add
mul
in
mov
dec
mov
add
sbb
or
push
dec
fwait
push
call
stos
jo
stos
das
retf
icebp
cld
aas
dec
mov
add
in
(bad)
dec
mov
iret
add
in
adc
inc
mov
popf
adc
add
ror
dec
cli
js
cmp
imul
xchg
inc
fcomp
popa
fadd
add
cdq
push
sar
add
inc
adc
aam
mov
and
and
shr
jmp
stos
mov
inc
inc
sbb
add
push
rcr
cmp
loop
icebp
mov
jmp
dec
push
push
jge
stos
sub
lods
jge
cmps
enter
loopne
iret
push
pop
cmp
clc
add
aaa
ret
ins
mov
adc
sbb
inc
xor
inc
add
mov
jmp
xchg
pushf
loopne
xlat
or
loop
or
pusha
ficomp
adc
cmp
repnz
pushf
or
fs
add
pop
jb
sub
or
pusha
lds
adc
inc
(bad)
lods
call
jne
shl
gs
mov
pop
sub
push
icebp
stc
out
lock
push
push
inc
push
fsubr
dec
and
adc
push
jne
dec
push
retf
adc
pusha
pop
sbb
cmc
popa
jle
fs
add
adc
sbb
and
pop
mov
inc
test
retf
mov
ror
jo
js
or
nop
add
adc
cli
pop
mov
sar
sbb
pop
pop
cmp
fdivr
inc
and
or
dec
add
sbb
inc
jl
add
fnstsw
mov
js
and
ins
clc
je
out
es
inc
jl
pop
(bad)
xchg
fwait
push
xor
add
xchg
mov
je
xchg
push
jp
jp
jo
and
ja
(bad)
mov
or
inc
or
adc
cmp
sbb
ret
push
mov
fld
fsub
jmp
shl
ret
sbb
cmc
pop
in
fwait
xlat
sub
push
jnp
xor
inc
cmp
dec
(bad)
and
addr16
add
test
lods
stc
inc
or
adc
lea
dec
clc
jge
fcom
(bad)
mov
cmp
mov
icebp
movs
xchg
xor
xchg
pop
dec
inc
retf
adc
xchg
pop
dec
mov
pop
ror
xor
inc
and
or
or
popa
call
dec
ret
push
mov
push
dec
je
sar
cli
push
push
call
push
and
add
ss
xchg
push
jg
xor
and
aam
add
xchg
(bad)
(bad)
pop
mov
inc
in
xchg
xchg
es
add
sahf
or
inc
clc
retf
enter
dec
loope
daa
mov
sbb
(bad)
mov
imul
push
test
sub
xor
inc
mov
cmps
loopne
adc
arpl
mov
fst
xor
(bad)
shl
adc
imul
or
enter
inc
add
mov
mov
or
hlt
cmp
fucompp
cmps
leave
dec
pop
or
ins
xor
xchg
pop
and
enter
pop
dec
mov
and
jns
sbb
mov
js
add
push
dec
xor
push
adc
test
ins
jmp
(bad)
jmp
lea
push
push
pop
xor
push
daa
add
mov
xchg
dec
mov
ds
outs
and
xor
and
mov
add
jl
cmps
push
push
repnz
outs
adc
or
xor
ins
cmp
mov
push
and
cs
aam
xor
jg
fs
retf
mov
jmp
scas
push
js
test
adc
mov
push
xchg
cli
mov
and
bound
jle
je
xchg
adc
push
rol
adc
mov
outs
sahf
sti
xchg
or
add
enter
js
or
sbb
shl
add
inc
add
xor
xchg
out
cmp
jnp
push
out
(bad)
or
add
pop
jge
sbb
cmps
iret
jmp
or
jo
inc
test
jno
adc
add
add
outs
test
iret
xor
dec
mov
gs
fcom
dec
sbb
call
(bad)
fadd
sub
and
jbe
or
loopne
push
jb
jo
jae
jo
add
mov
sub
int
enter
test
mov
jmp
adc
enter
in
jecxz
int3
pop
enter
stc
cmp
sbb
jno
and
push
iret
and
or
aam
inc
inc
mov
sub
cmp
sbb
lods
pop
fsubr
push
adc
sbb
out
mov
or
or
dec
jl
jmp
outs
sbb
daa
cwde
or
and
pop
mov
inc
and
leave
in
inc
jge
mov
aad
or
hlt
jmp
(bad)
loop
les
mov
mov
loop
xchg
icebp
cmp
jae
fwait
lea
mov
mov
add
push
and
nop
xchg
push
mov
pop
int
add
enter
das
leave
inc
push
sbb
add
mov
js
icebp
ins
xor
in
mov
dec
lds
in
mov
pop
leave
sub
mov
adc
mov
test
push
mov
js
inc
call
dec
call
cmc
inc
ds
push
mov
cmps
cmp
adc
retf
shl
adc
inc
mov
push
push
push
inc
and
or
inc
and
test
popw
push
jo
jmp
rcl
or
xchg
xor
scas
sbb
push
xchg
mov
push
push
and
fldz
push
fst
idiv
adc
sahf
inc
or
iret
bound
into
aaa
cmp
and
add
inc
xchg
and
adc
cmps
and
retf
dec
repnz
sub
sub
add
sub
mov
inc
sub
fidiv
stos
inc
lds
jmp
xchg
and
pop
sub
and
and
sahf
retf
jo
jb
cmp
jo
clc
pop
xchg
dec
xor
mov
pop
and
mov
repnz
sbb
rcl
add
test
push
jp
out
je
aam
lea
mov
scas
adc
mov
sub
mov
lea
cmp
ds
pop
add
push
jno
mov
shl
push
lea
not
add
mov
imul
xchg
dec
pusha
enter
movs
outs
test
outs
repz
jle
cli
push
mov
js
jge
je
cmp
and
ss
jecxz
bound
test
adc
in
jo
adc
adc
add
shl
jne
test
dec
xchg
and
mov
push
xor
loopne
pop
stc
pop
pop
adc
enter
sti
outs
pop
mov
xchg
jne
push
push
test
popa
in
adc
push
stos
push
sub
dec
fild
data16
mov
bound
jge
add
or
ins
mov
dec
lods
es
xor
inc
pusha
push
inc
push
(bad)
push
in
adc
cmp
ja
and
ror
cwde
xor
or
fs
aaa
push
cmp
leave
das
adc
add
xchg
test
xor
jmp
mov
rol
jne
pop
adc
vminps
xor
push
mov
inc
jl
es
or
int
adc
rcl
dec
sar
ret
dec
ins
popa
call
(bad)
xchg
call
push
sub
ss
push
out
adc
loopne
or
push
mov
cmp
sbb
sti
cmp
mov
inc
add
popa
mov
pop
push
jne
or
inc
gs
push
or
pop
and
cmp
push
pop
push
outs
rol
sub
dec
sub
and
sbb
mov
leave
inc
cli
addr16
loope
and
xor
(bad)
dec
mov
int3
lea
sar
es
jg
popa
and
jle
or
int
mov
xor
xchg
and
lds
ror
sub
push
loopne
sbb
retf
dec
loopne
ror
(bad)
and
es
adc
push
push
cmp
test
xchg
call
xor
and
mov
cmp
aaa
das
test
ret
das
ins
jae
lods
test
push
jmp
and
cmps
mov
inc
in
push
les
test
xchg
mov
imul
shl
scas
inc
sbb
add
addr16
std
pusha
and
jbe
ficom
cmp
call
sub
push
sub
(bad)
inc
and
xor
mov
in
frstor
sti
in
jbe
push
stos
mov
loopne
frstor
stc
repz
paddusw
dec
jmp
icebp
je
outs
stos
mov
xor
rcl
add
std
push
push
push
in
jmp
push
sub
adc
(bad)
ins
and
jno
adc
push
retf
iret
adc
ins
out
ret
icebp
pop
cmp
fwait
repnz
(bad)
call
stc
retf
pop
dec
mov
loopne
mov
jge
add
mov
mov
or
les
icebp
pop
fist
sub
cwde
and
add
add
shl
push
push
das
ss
ror
add
push
in
dec
addr16
fwait
xor
and
pop
push
das
jbe
pop
pop
in
ja
mov
sahf
xor
pop
inc
mov
movs
and
sahf
adc
sbb
push
add
adc
pusha
sbb
push
adc
cmp
push
scas
sbb
or
pop
shr
lahf
inc
cmps
mov
push
add
sbb
je
push
adc
icebp
lea
jmp
xlat
sbb
adc
or
clc
addr16
mov
or
and
mov
rcr
push
jmp
push
(bad)
push
and
jo
xchg
or
pop
fsub
nop
or
scas
xchg
and
js
xor
sub
push
jge
add
js
idiv
xchg
inc
std
and
sti
(bad)
in
test
xor
jne
mov
or
inc
lods
cld
or
xor
ret
in
maxps
adc
pushf
cld
and
fcomp
add
and
pop
pusha
inc
shl
retf
push
push
stos
cmp
mov
lods
inc
mov
ja
xchg
dec
stos
mov
push
pop
cli
(bad)
sbb
pop
dec
xchg
mov
and
mov
push
jmp
inc
mov
shl
lea
push
neg
shl
jnp
outs
add
std
push
sub
and
hlt
mov
push
cmp
fdivr
and
mov
jnp
cmp
fisttp
test
ja
add
mov
ja
mov
mov
adc
outs
out
dec
dec
ins
jo
ds
push
fisub
jne
push
cmp
test
test
add
call
jbe
cli
adc
inc
add
aas
icebp
mov
jne
jne
sbb
or
mov
or
lods
frstor
jmp
xchg
(bad)
jne
test
lods
or
cmps
push
push
gs
jb
xchg
fcomp
scas
jl
loope
outs
enter
jo
push
add
fsub
add
pop
icebp
jecxz
fild
shl
sbb
mov
test
mov
aas
nop
or
sub
add
add
pushf
dec
push
aam
ror
(bad)
pop
dec
les
sbb
nop
rol
or
push
test
xor
adc
push
mov
(bad)
les
in
and
pop
push
and
sbb
and
pop
add
loopne
add
jno
popa
dec
(bad)
add
adc
mov
xchg
xor
mov
repnz
add
add
and
cmp
push
add
bound
jge
jb
or
cmp
repnz
mov
scas
add
lock
mov
retf
sbb
inc
enter
fmul
adc
xchg
adc
and
movs
test
das
(bad)
mov
rcl
inc
pop
push
jp
inc
jmp
lea
jl
add
add
ja
push
push
or
push
daa
or
pop
mov
jl
cli
pop
scas
inc
mov
ins
test
repz
inc
loopne
lods
clc
adc
xchg
in
mov
fmul
mov
scas
rcr
pop
jb
cmp
inc
dec
ror
and
and
cmps
add
pop
shl
cdq
cmp
cmp
mov
jb
add
inc
adc
int3
adc
out
pop
fld
inc
leave
or
test
test
scas
nop
mov
test
sub
scas
inc
push
and
int3
aam
and
nop
and
xor
adc
fld
or
push
add
int
in
enter
mov
add
nop
add
inc
enter
fcom
cmp
adc
mov
xchg
data16
setge
ret
pop
icebp
mov
mov
leave
test
jb
inc
leave
mov
ficom
add
int
fidivr
sub
add
sahf
js
add
and
ja
enter
sub
add
test
iret
mov
ret
aam
jnp
push
nop
(bad)
or
dec
xor
and
or
xchg
pusha
daa
loopne
test
ret
sub
cmp
sub
xor
pop
add
dec
repnz
cwde
in
sub
inc
sub
jecxz
cmp
fs
into
and
xchg
call
pop
into
cwde
fild
cmp
in
dec
fcomp
fist
and
test
xchg
into
adc
mov
add
nop
push
adc
sbb
fs
and
add
lock
fs
inc
jb
loopne
into
mov
fs
retf
xchg
(bad)
inc
cs
out
pop
test
inc
xchg
xchg
dec
iret
and
pop
loop
and
add
jb
inc
pop
loop
imul
iret
mov
and
test
add
xchg
or
adc
pop
or
and
or
xchg
pop
sbb
cdq
and
inc
jbe
nop
sub
adc
cmps
nop
sub
add
push
pop
or
in
dec
or
xchg
pop
xor
sbb
and
sbb
and
cmps
nop
and
add
outs
adc
mov
in
adc
adc
enter
xor
and
sbb
mov
jns
enter
push
xchg
adc
sub
inc
enter
sbb
push
xchg
mov
jecxz
repnz
arpl
lock
repnz
nop
jecxz
or
lahf
pop
lahf
mov
inc
pop
adc
cmovb
adc
xchg
jecxz
jns
nop
jbe
mov
dec
inc
push
add
mov
icebp
and
mov
test
in
loopne
dec
adc
push
dec
in
pop
ret
fsubr
cmps
push
in
push
pop
sub
xchg
add
push
inc
push
loopne
sbb
jmp
pop
loopne
inc
push
or
retf
fsub
sbb
rol
scas
das
nop
add
jo
nop
or
nop
cdq
je
or
sahf
mov
js
cmps
adc
adc
sub
jns
pop
scas
js
es
gs
outs
(bad)
pop
sbb
lahf
fwait
arpl
xchg
rol
pushf
je
dec
fsub
push
bound
push
and
sahf
inc
sbb
push
jae
adc
test
sbb
jle
fist
shl
mov
xchg
cmps
adc
jnp
sbb
test
sbb
xchg
bound
jmp
aam
dec
xchg
(bad)
add
and
sub
pop
enter
push
xor
xchg
lods
and
and
jmp
fcom
sub
inc
mov
aas
sub
mov
pop
adc
cwde
les
aaa
push
or
jmp
cmp
ja
jmp
or
dec
xor
adc
mov
ss
out
push
jmp
push
out
mov
mov
into
or
add
add
int
cmp
or
adc
iret
pusha
in
lahf
neg
dec
mov
(bad)
mov
fld
loope
in
mov
jmp
clc
(bad)
fdivr
outs
in
mov
sbb
out
das
mov
push
je
mov
(bad)
inc
push
cmp
mov
add
or
je
adc
xchg
xor
pop
mov
and
fs
inc
add
add
xor
sub
jle
add
jb
stc
sahf
out
sbb
je
push
add
dec
xchg
pop
out
or
je
imul
push
dec
shl
or
or
or
pop
jns
repnz
out
xchg
(bad)
cmp
inc
rol
mov
(bad)
or
push
fisubr
popf
lds
ins
jmp
cmps
int
(bad)
push
adc
outs
inc
add
and
push
jb
adc
pop
push
adc
adc
push
or
or
adc
or
jb
adc
jb
pop
or
outs
fiadd
rol
or
mov
xchg
test
ins
jmp
nop
add
rcr
in
add
mov
bound
popf
inc
jecxz
stos
jecxz
popf
inc
outs
stos
jecxz
stos
popf
inc
outs
popf
bound
popf
inc
jecxz
stos
jecxz
popf
inc
jb
jecxz
stos
popf
inc
jae
bound
popf
inc
in
stos
jecxz
popf
inc
jbe
xor
mov
jno
inc
js
inc
sub
jp
push
loope
cli
mov
jg
adc
mov
inc
push
(bad)
or
jae
sbb
fsubr
jmp
add
jmp
nop
xor
inc
push
dec
jmp
mov
xor
xchg
pushf
and
jmp
cwde
jmp
invd
jae
ins
and
call
xchg
jmp
jb
or
mov
scas
add
dec
mov
mov
push
enter
mov
xchg
sbb
push
fdivrp
jmp
pushf
and
dec
(bad)
loope
mov
mov
inc
jbe
push
or
or
and
dec
dec
shr
jmp
pop
and
(bad)
or
nop
in
sub
(bad)
sub
lock
sbb
mov
(bad)
sbb
pop
shl
mov
nop
and
inc
jo
mov
daa
jns
shr
or
enter
mov
les
in
xchg
out
add
mov
mov
or
pop
mov
stc
daa
mov
rcl
mov
mov
pop
imul
fstp
enterw
and
ins
xchg
stos
mov
jmp
pop
ror
and
adc
mov
add
in
out
mov
adc
sub
dec
and
lahf
and
inc
push
sbb
and
aam
inc
or
or
cmps
das
inc
pop
inc
dec
test
inc
push
and
fdiv
mov
add
scas
fdiv
lock
mov
or
test
fadd
lds
push
sbb
shl
cmp
aam
repnz
xchg
pushf
add
scas
js
shl
sbb
dec
adc
bound
push
xlat
scas
mov
push
ffree
repnz
aam
jns
and
repz
mov
call
test
loopne
and
stc
or
adc
enter
lock
and
lock
hlt
add
cmp
mov
rcl
rol
in
inc
hlt
test
adc
test
and
test
aad
cmc
in
xchg
mov
pop
test
ret
cmc
mov
pushf
and
setb
sbb
fs
test
lahf
inc
mov
das
fadd
pop
dec
push
jne
push
test
xor
(bad)
aam
dec
add
test
pop
fsubr
jne
call
adc
sbb
mov
inc
imul
nop
fld
mov
call
and
dec
push
je
or
cmp
sub
imul
sub
or
pop
or
or
xchg
call
in
stos
cmp
xchg
and
add
mov
or
or
cdq
xchg
xchg
sub
xchg
xchg
sub
or
or
add
push
add
sub
mov
fadd
sbb
ret
syscall
xchg
mov
xchg
int3
jo
adc
push
dec
leave
inc
enter
adc
xchg
or
or
or
adc
or
or
or
sbb
movs
sub
cdq
xchg
push
push
or
xchg
adc
test
leave
enter
sbb
or
test
jnp
pop
scas
ins
pop
movs
mov
dec
sbb
adc
mov
test
test
sbb
jp
pop
clc
mov
jbe
cmp
pushf
sub
(bad)
mov
inc
pusha
leave
xchg
adc
mov
add
mov
dec
dec
test
push
mov
loope
in
sbb
xor
mov
movs
lods
shr
push
nop
or
sub
push
and
jb
retf
int3
push
inc
enter
lea
and
inc
inc
adc
add
fcomp
cdq
nop
or
mov
les
jecxz
out
les
inc
mov
out
inc
mov
jmp
push
push
mov
adc
pop
scas
call
mov
jb
cld
add
fs
repz
test
into
mov
ror
(bad)
in
push
fwait
push
xchg
or
add
add
out
or
add
inc
and
or
add
add
sub
and
or
inc
push
sbb
or
and
cdq
xchg
or
and
push
je
bound
xchg
inc
enter
add
and
in
mov
adc
add
cmp
lods
scas
mov
das
aas
stos
in
loop
xor
jnp
in
xchg
inc
and
inc
cmps
nop
inc
dec
in
pushf
inc
push
jno
push
add
xor
add
push
sbb
cmp
pop
adc
test
nop
or
dec
cmps
or
mov
out
ins
ins
add
and
add
js
jl
pop
jo
mul
xchg
sub
add
add
or
add
fs
popf
cdq
xchg
or
nop
out
add
cmps
cmp
cdq
inc
lods
mov
add
add
cmps
mov
pop
mov
mov
and
pop
mov
push
or
inc
shr
fadd
mov
loopne
cdq
sub
adc
adc
push
enter
dec
inc
pop
and
sub
pop
enter
jmp
sbb
dec
and
div
add
test
sti
add
adc
stc
add
add
add
and
add
add
add
add
pop
in
push
mov
rcr
inc
orps
jo
sbb
jo
push
sbb
xchg
pop
add
push
push
das
cld
jmp
xchg
pop
dec
ret
jb
ror
fdivr
xchg
add
jno
shl
dec
sub
adc
int3
sbb
sub
outs
push
aaa
bound
sub
shl
fimul
push
and
xor
(bad)
mov
loope
add
mov
inc
out
lods
mov
inc
pushf
iret
test
fs
test
test
ror
fst
xchg
jg
mov
sahf
paddsb
cmp
mov
or
and
and
or
fs
mov
xor
in
mov
push
in
in
enter
mov
or
xchg
sub
rcr
mov
ins
sub
dec
jle
adc
into
inc
je
inc
dec
mov
mov
mov
daa
pop
xor
or
and
or
adc
or
imul
xchg
in
xor
loopne
add
pop
add
dec
inc
add
or
add
jo
push
inc
jmp
mov
mov
nop
dec
add
dec
jecxz
jge
or
imul
jnp
sar
mov
retf
div
push
inc
xchg
add
in
add
cmps
or
xchg
push
and
mov
fs
jle
pop
pop
pop
cmps
stos
popa
pusha
mov
add
inc
pushf
sbb
sbb
iret
ss
ret
cld
inc
mov
lea
dec
or
fs
loope
rol
xor
xor
push
mov
dec
fdiv
stc
es
or
add
lods
cmp
jns
in
add
cmp
test
je
push
jl
stos
(bad)
xchg
mov
pop
cmp
push
push
(bad)
mov
push
mov
or
in
push
push
jns
aad
or
add
shr
adc
clc
pop
cmp
jmp
mov
sbb
and
loopne
(bad)
std
in
stos
mov
jbe
shr
xor
stc
mov
or
xor
dec
and
add
lods
adc
pop
push
or
add
test
xor
loop
pop
pop
dec
xor
add
adc
or
or
or
int3
xchg
movs
jmp
add
popa
rcl
add
fs
mov
or
and
imul
hlt
adc
nop
xchg
stos
mov
mov
push
es
dec
pop
or
cmp
pop
js
push
jne
sbb
or
mul
push
adc
int3
(bad)
jecxz
add
sahf
add
shl
adc
dec
stos
test
outs
rol
jb
movs
xor
jns
dec
adc
jne
jb
or
inc
and
dec
fsubr
xchg
(bad)
and
push
cmp
test
stc
shl
rol
(bad)
lods
out
in
loopne
std
inc
test
test
pop
dec
mov
xor
inc
sub
bound
loopne
test
scas
aam
sub
and
movs
dec
sbb
ins
das
arpl
hlt
or
adc
add
dec
cmc
pop
pop
push
or
pop
xor
fcom
push
clc
sub
or
mov
add
imul
adc
or
and
outs
add
and
push
fsubr
add
mov
fwait
loopne
sub
sahf
jmp
mov
je
lock
add
rcl
pop
mov
stos
push
call
adc
xlat
popa
popf
mov
idiv
inc
ins
jns
dec
cmp
(bad)
or
xchg
sbb
mov
dec
mov
int3
mov
add
js
add
je
rol
sub
psubb
in
and
sbb
inc
xchg
push
adc
out
stos
fs
nop
dec
jae
stc
scas
add
mov
dec
adc
inc
pop
or
or
push
mov
push
dec
sahf
js
cmp
mov
imul
popa
fnstcw
cmc
(bad)
je
mov
(bad)
sub
and
dec
jg
mov
dec
sbb
inc
cmp
jne
call
xor
dec
push
data16
fwait
popa
out
adc
or
xchg
into
das
jno
mov
and
dec
push
fs
(bad)
sbb
and
or
movs
sbb
stos
sub
sub
sbb
push
cmp
inc
inc
inc
jmp
mov
in
cld
push
and
loope
jnp
cmps
or
xchg
fdiv
fsub
inc
or
ins
stc
das
daa
xor
out
(bad)
and
jnp
retf
or
stc
ds
inc
sbb
loopne
out
dec
mov
mov
or
add
add
inc
rcl
test
push
jae
adc
int
push
in
leave
out
add
jmp
shl
mov
enter
daa
mov
jmp
outs
dec
push
dec
dec
sub
cli
movs
add
cmps
pop
sbb
sbb
fcomp
dec
sub
mov
sbb
add
in
xchg
dec
bound
mov
mov
clc
outs
inc
add
adc
sub
xchg
jb
push
f2xm1
add
sar
mov
xchg
(bad)
dec
push
pop
mov
pop
cmp
mov
jbe
out
aad
push
clc
push
add
lock
cmp
mov
leave
push
ror
pop
add
xchg
push
xor
pop
cmp
pop
jmp
and
or
push
jb
test
repnz
movs
jmp
sub
imul
mov
imul
shr
push
jl
xchg
adc
cmp
cmp
movs
push
aam
movs
mov
push
dec
mov
and
sbb
and
(bad)
jmp
daa
push
jne
jle
div
push
pushf
sub
mov
or
mov
jmp
push
scas
sbb
adc
jmp
in
cli
inc
bnd
nop
shr
mov
jecxz
pusha
fdiv
sbb
dec
repz
dec
loopne
inc
in
pop
fs
sbb
sbb
(bad)
jo
fidivr
dec
or
imul
add
popf
cmp
push
jne
shl
jmp
add
mov
loope
mov
ret
dec
inc
shl
or
daa
popf
nop
jle
cld
push
add
mov
mov
loopne
leave
xor
xchg
loopne
add
lods
sahf
mov
test
mov
sbb
out
in
and
push
push
and
idiv
push
popf
xor
std
outs
in
cmps
outs
(bad)
mov
and
pop
cmp
mov
jb
jge
cli
jmp
and
pop
pop
lock
add
or
and
sbb
fs
pop
scas
adc
bound
inc
loopne
out
rol
xor
sbb
inc
adc
cmps
fld
pusha
push
in
std
add
push
pop
ins
js
cmp
mov
fsub
ret
cmps
sub
pushf
push
inc
test
xor
dec
sbb
mov
add
jae
mov
xor
sub
pop
fsubr
mov
cmp
nop
lds
xor
sub
sbb
and
in
call
sbb
fsubr
and
icebp
add
js
pop
jae
or
push
mov
pop
loopne
push
add
nop
sub
or
mov
mov
cmps
pop
jo
fbld
pop
xor
dec
shl
or
adc
xchg
dec
jo
push
add
ja
in
mov
rol
dec
test
rcl
into
stos
(bad)
shl
les
stos
ror
mov
push
dec
cmp
jae
cli
mov
mov
pop
cmps
mov
ret
xchg
add
sub
mov
nop
push
sub
nop
push
add
cmp
pop
sub
loope
lea
iret
xor
fnstenv
cmp
inc
sub
xor
cmp
stos
in
mov
xor
movs
or
daa
sbb
adc
mov
pop
mov
int3
addr16
imul
adc
mov
ret
in
jae
(bad)
add
lea
sub
cmp
rcl
je
xor
fs
xlat
inc
stos
imul
mov
mov
pop
and
ins
inc
arpl
cmps
shl
shl
shl
jne
(bad)
js
dec
cld
add
and
add
push
movs
jbe
shl
sbb
dec
shl
mov
enter
out
adc
add
mov
rcr
xor
movs
xor
mov
add
or
mov
cwde
adc
mov
hlt
add
in
mov
mov
repz
fsub
test
movs
sbb
sbb
mov
jne
push
or
leave
xor
push
inc
push
or
rcr
fld
add
movs
repnz
push
sar
and
sbb
pop
push
push
jno
repnz
xchg
cmp
add
mov
fwait
and
test
push
and
rcr
pop
clc
add
inc
add
js
(bad)
fistp
mov
ret
push
shr
lds
ss
fdivr
mov
iret
dec
(bad)
or
dec
mov
aas
retf
rcl
pop
je
je
inc
addr16
rcr
adc
xchg
add
add
stc
hlt
mov
xchg
push
adc
xor
or
es
jo
icebp
fisubr
fnstcw
push
dec
mov
and
cmps
jle
jne
push
mov
sti
rcl
mov
test
pusha
int
loop
test
pop
inc
dec
sub
xor
inc
push
loopne
jb
push
stos
pop
push
add
push
or
scas
mov
jne
jp
aad
les
aam
shr
sahf
and
push
push
push
rcl
sub
xchg
adc
and
push
jmp
xor
test
xchg
fxch
and
add
or
hlt
fidivr
push
outs
add
push
sub
cmp
add
xor
sbb
push
fs
into
cdq
ffree
add
inc
push
(bad)
(bad)
sub
cmp
jle
movs
hlt
push
sbb
cmp
or
add
sub
lahf
into
jmp
jae
pop
icebp
push
imul
cmp
inc
sti
out
sub
das
and
xor
sbb
mov
adc
push
pop
shr
pop
xor
pop
ins
inc
mov
mov
adc
rol
repnz
stos
mov
jmp
inc
xor
test
cmp
sbb
fdiv
xor
sub
ror
mov
add
push
xchg
shr
xor
cmps
and
add
push
push
sbb
mov
or
push
iret
das
xchg
(bad)
sub
push
ficom
cmp
sbb
in
ror
pop
aas
xchg
mov
loop
adc
in
daa
fmul
scas
stc
lea
fwait
ins
js
arpl
inc
mov
jmp
mov
inc
push
test
dec
inc
ds
sub
data16
out
inc
and
or
in
dec
aad
pop
jmp
push
je
pushf
mov
sbb
add
(bad)
or
push
jnp
test
jo
shr
xchg
pop
adc
jne
mov
inc
fiadd
cmp
add
jne
and
sub
test
pusha
xchg
dec
and
(bad)
rcl
hlt
pop
dec
fldz
push
fld
fcom
dec
(bad)
and
sbb
fldcw
add
fstp
push
pop
pop
bound
inc
fxch
fcomp
inc
jp
bound
fincstp
mov
ja
add
push
push
imul
ins
jmp
fstp
push
or
inc
or
test
in
jge
inc
push
push
mov
div
cmp
jae
les
add
lds
mov
sbb
cmp
outs
inc
clc
add
dec
or
shl
jp
push
fistp
dec
mov
and
push
or
in
fisubr
push
pop
inc
cmp
jne
push
push
sub
add
push
push
jns
adc
pusha
push
lods
adc
push
pop
pop
in
fs
inc
sbb
aam
dec
and
pop
ret
fimul
or
cwde
pop
push
xor
and
call
pop
pop
add
test
mov
je
repz
or
jmp
and
jecxz
dec
and
test
fadd
adc
mov
and
mov
popw
jb
pop
jge
push
cmp
adc
adc
mov
add
fisttp
mov
or
xchg
ror
or
and
push
cli
push
pop
rol
retfw
jge
add
in
push
inc
add
push
mov
sbb
fdivr
ror
mov
adc
pop
cmp
push
or
mov
and
sub
(bad)
cmps
data16
dec
popa
sub
bnd
add
push
xlat
in
test
fstp
pop
sbb
mov
dec
(bad)
fild
call
inc
enter
sbb
mov
mov
cmc
xor
and
mov
sub
pop
push
push
push
mov
adc
movs
inc
inc
mov
dec
fidivr
inc
cs
xchg
or
test
es
and
pop
sti
retf
xchg
inc
rcl
xor
cld
push
and
push
mov
and
gs
push
loop
pop
sub
imul
hlt
cmp
mov
out
movs
ins
shr
mov
es
jne
call
call
repnz
pop
sbb
cmps
or
and
aam
les
or
call
fdivr
jne
add
dec
pop
xlat
test
or
mov
movs
push
loopne
jns
popa
test
sub
push
push
bnd
sbb
sbb
jmp
rcl
inc
and
or
add
out
fnstsw
outs
adc
sahf
pop
enter
pop
das
mov
fdiv
or
dec
(bad)
aam
sbb
rol
add
xchg
mov
fst
mov
ins
inc
or
mov
ja
adc
push
jl
add
mov
sahf
(bad)
(bad)
nop
pushf
ret
test
lds
inc
imul
das
adc
mov
fsub
mov
(bad)
je
cmp
and
pop
bnd
fiadd
in
add
out
out
repz
(bad)
mov
pop
cmp
xor
push
ror
mov
or
adc
sar
daa
call
test
arpl
or
mov
inc
xchg
mov
leave
mov
rcl
movs
jg
cwde
fdiv
push
ficomp
push
push
cmp
and
cmp
pop
dec
jae
jge
je
mov
push
aad
add
push
mov
push
aad
inc
mov
test
test
adc
cmc
sub
(bad)
out
xor
sbb
adc
aad
scas
movs
les
add
je
leave
mov
aam
add
add
dec
in
push
repnz
push
and
gs
dec
xchg
in
inc
jo
fwait
add
pushf
xor
das
sub
xchg
xor
add
add
push
push
lea
mov
mov
mov
mov
adc
fisttp
sbb
xor
mov
cmp
fdiv
jle
xchg
mov
xchg
xor
test
aaa
mov
int3
mov
inc
ins
pop
adc
jge
jb
xor
in
cmp
jp
xor
jae
push
push
mov
fstp
sub
jmp
push
pop
retf
call
ds
push
imul
pusha
sti
mov
shr
push
push
inc
shr
lea
or
mov
or
loope
data16
mov
bound
push
lea
lock
lock
and
push
iret
push
push
jmp
xlat
adc
push
jmp
ss
aad
and
ror
sbb
(bad)
adc
enter
cmp
sbb
or
and
inc
daa
xor
and
push
jo
push
in
mov
pop
data16
aaa
lahf
popf
mov
jg
mov
out
cmp
or
push
add
test
aaa
lea
or
cs
xchg
in
arpl
or
mov
sahf
or
sub
cmps
mov
add
lock
mov
add
push
jb
popa
mov
mov
int
test
mov
sbb
or
pop
xchg
lea
mov
xchg
push
inc
out
nop
loopne
xchg
inc
cmp
jge
cmp
and
inc
push
and
enter
jno
sbb
jns
adc
clc
mov
bound
and
ret
(bad)
sub
scas
add
test
and
lock
hlt
pop
cmp
out
test
sbb
iret
xor
push
adc
inc
adc
ror
adc
nop
xor
jnp
add
loope
jge
xchg
add
fcomp
(bad)
mov
sbb
loopne
adc
pop
and
inc
in
pop
les
dec
or
(bad)
adc
xchg
mov
sbb
pop
outs
xchg
jne
push
mov
or
cmp
push
push
test
jge
mov
call
stos
xchg
adc
les
dec
cwde
jle
sbb
or
lods
adc
jbe
xor
mov
pop
mov
sub
sub
call
out
and
rol
nop
push
or
ret
inc
(bad)
xchg
popf
enter
inc
adc
pop
add
push
stos
test
fisttp
test
jp
pop
hlt
mov
sbb
push
cmp
popf
pop
adc
and
addr16
cmp
xchg
push
sbb
xor
out
inc
push
sbb
jnp
or
jle
aad
fdiv
jge
fwait
mov
cdq
jbe
adc
mov
xor
test
dec
add
xor
jmp
cmp
nop
push
inc
ffreep
in
or
gs
jmp
adc
nop
jo
cli
iret
xor
inc
adc
mov
add
lahf
add
pop
adc
add
out
adc
imul
or
mov
add
push
jnp
(bad)
call
cs
jle
xchg
xchg
or
andps
ror
fsub
cmps
add
jae
xor
popa
adc
dec
mov
mov
cmc
jmp
cmc
js
repnz
inc
mov
xchg
push
push
fstp
stc
add
sub
test
fistp
test
pop
mov
aad
push
sub
inc
ja
in
push
pop
inc
aas
push
xor
pop
and
int3
ins
bsf
fs
cmp
repnz
cmp
inc
mov
push
div
sar
jne
jne
push
push
pop
xchg
pop
inc
xchg
xor
jbe
jecxz
pusha
fimul
mov
jmp
movs
pushf
cs
xchg
pusha
sub
pop
or
add
mov
int3
aad
jne
sub
pushf
mov
jle
xchg
daa
sbb
fsubr
sub
push
in
js
shl
lds
aam
jo
fcomp
adc
sbb
dec
ins
add
cmp
pop
xchg
dec
add
addr16
js
sbb
adc
shl
(bad)
into
add
fwait
sub
(bad)
mov
neg
mov
dec
dec
fimul
xchg
sub
inc
adc
xchg
jbe
jo
daa
(bad)
push
push
mov
pushf
pop
add
sub
int
mov
sbb
out
ret
jmp
or
push
or
pop
xchg
xchg
push
enter
mov
dec
das
or
pushf
je
push
and
jne
xchg
pop
add
imul
dec
push
xchg
enter
or
inc
fisttp
dec
stos
icebp
movs
jns
push
pmuludq
add
aas
sub
dec
dec
pop
add
rol
or
mov
(bad)
sub
mov
jo
dec
inc
xchg
dec
shr
jo
ret
or
vmread
xchg
(bad)
sbb
dec
push
lea
adc
mov
ss
jmp
stc
add
cmp
jge
nop
push
or
xor
cmp
adc
dec
popf
imul
outs
mov
jb
jno
dec
and
xor
jmp
mov
adc
bound
mov
adc
adc
pop
divps
stc
ja
adc
jnp
cmp
sbb
push
stos
movs
mov
shr
movs
test
test
daa
cmp
scas
jecxz
mov
add
or
xor
sbb
loop
push
lds
mov
test
call
add
jmp
test
adc
ret
outs
loope
rcr
push
xchg
aas
and
les
pop
mov
push
and
jb
add
or
cld
mov
mov
push
add
test
gs
shl
or
push
movs
dec
or
(bad)
jmp
and
push
(bad)
pop
movs
xchg
dec
jnp
mov
pop
les
cmps
lea
movs
test
call
or
mov
(bad)
mov
xor
cmp
ds
sub
and
dec
add
call
mov
cld
pop
push
cmp
jne
test
or
pop
pop
xchg
adc
mov
test
nop
lock
push
inc
jns
push
test
cmp
pop
jmp
and
or
jp
inc
push
outs
pop
movs
or
adc
div
shr
leave
sub
fld
xor
mov
neg
adc
bound
jl
sbb
push
cwde
std
pop
push
pop
mov
mov
dec
jmp
sbb
jp
adc
inc
pop
stos
push
(bad)
mov
mov
jb
sti
lock
es
lea
jnp
mov
or
rcr
adc
iret
in
mov
sub
pop
cdq
repz
xor
lock
sub
cmp
mov
adc
xchg
mov
js
cmc
or
or
pop
int3
push
xchg
xor
xor
add
cs
add
repz
or
fs
loope
dec
cs
add
sub
test
enter
inc
sbb
and
ficom
sbb
xlat
mov
movs
push
adc
add
mov
inc
fs
pop
push
push
push
dec
push
in
or
cld
mov
cmp
sbb
fdiv
mov
ret
jl
or
or
pop
fsubr
jo
push
aam
mov
inc
mov
or
ja
sbb
pcmpeqw
or
imul
push
pop
inc
jb
jg
lods
in
loopne
sbb
inc
push
mov
ret
inc
movs
jmp
test
ins
add
mov
rcl
inc
jecxz
inc
add
push
dec
fadd
push
add
jae
clc
arpl
adc
pop
inc
push
pop
jle
rcl
push
mov
xchg
push
(bad)
fcomp
add
sbb
sbb
cdq
or
push
mov
ins
xor
jl
mov
lock
jb
scas
test
push
sbb
push
mov
mov
in
and
inc
jo
fcom
or
sbb
xchg
js
or
xchg
retf
sbb
int
push
repnz
sbb
pop
rcl
lods
mov
dec
movs
dec
fwait
mov
jecxz
je
mov
in
je
xor
jo
fs
and
cmp
outs
test
(bad)
es
ds
push
push
xchg
push
in
or
pop
adc
sub
and
mov
and
fldcw
out
or
xchg
mov
sbb
mov
fs
push
aas
pop
push
add
loopne
jecxz
inc
sahf
mov
mov
jp
pop
mov
ficom
mov
mov
pusha
aam
add
push
sbb
jmp
fld
cmp
or
and
les
mov
and
cld
cdq
and
or
add
cmp
call
sub
mov
inc
das
enter
sub
jmp
xchg
enter
sub
lea
mov
mov
mov
test
inc
iretw
or
jo
sub
int3
lods
imul
in
lea
das
jns
add
ins
mov
mov
inc
(bad)
jecxz
pop
push
test
jne
xor
dec
mov
push
clc
les
es
cmp
xor
xor
push
les
xchg
cmp
mov
aaa
and
cmp
cmp
cmps
ret
sub
in
(bad)
push
dec
mov
sbb
aaa
cmp
mov
(bad)
les
dec
xor
cdq
push
fiadd
pop
js
sub
mov
leave
push
dec
add
mov
pop
fisttp
int3
mov
jle
test
xchg
pushf
mov
jl
lea
(bad)
inc
shr
call
sub
movs
cmp
jae
add
xchg
les
das
inc
aas
mov
adc
dec
test
out
pop
inc
outs
or
lock
ja
sbb
es
inc
imul
fcmovnu
ror
ret
fadd
pop
iret
or
or
inc
mov
push
inc
cmps
push
dec
add
sub
dec
jnp
or
lea
push
out
cmp
jne
xor
loope
outs
or
inc
and
ins
out
add
test
xor
push
sub
mov
icebp
jmp
lock
adc
fadd
daa
xchg
push
push
mov
les
dec
pop
add
mov
xlat
sub
add
xor
sbb
mov
enter
inc
repnz
lea
push
add
clc
stos
sbb
dec
xchg
mov
(bad)
mov
inc
imul
jge
add
pop
cmp
xchg
pusha
mov
jnp
and
cmp
and
pop
xor
fld
push
xor
ror
loop
inc
mov
inc
mov
ret
add
lea
xor
xor
mov
mov
mov
push
cmp
fdiv
jo
xor
cdq
dec
dec
sbb
enter
or
shl
sub
jne
cmp
jbe
mov
daa
test
mov
dec
jl
repnz
pusha
leave
mov
daa
cmp
popf
inc
and
ja
or
inc
dec
cmp
fldcw
add
pop
and
fcomp
out
and
mov
cmp
push
xchg
mov
xchg
jbe
ins
ret
jno
push
nop
mov
sub
pop
jp
enter
dec
outs
dec
ficom
add
dec
arpl
xchg
in
es
ja
xor
sbb
and
xor
js
push
inc
and
and
jmp
add
jp
add
add
scas
or
cmp
ror
rcr
movs
sbb
adc
test
xor
addr16
xchg
pop
sub
sbb
cli
and
lea
add
ins
nop
xchg
ret
outs
lods
add
pop
pop
sub
jnp
mov
in
movs
add
movs
aam
and
movs
jmp
sti
outs
jo
dec
add
cld
std
xor
lock
adc
dec
mov
inc
lea
add
add
clc
in
fld
push
pop
inc
jmp
and
push
jecxz
add
rep
enter
and
push
and
in
int3
xchg
sbb
out
or
mov
(bad)
sbb
gs
sbb
xchg
mov
cmp
jne
shl
jbe
cmc
in
push
and
mul
and
cmp
add
add
(bad)
xchg
push
inc
enter
or
push
jae
call
inc
cmp
or
ss
daa
and
mov
addr16
je
xchg
sbb
cmps
jbe
test
push
jmp
inc
xchg
xor
add
je
outs
inc
add
mov
add
and
push
in
fistp
adc
or
stc
and
adc
adc
xchg
lods
and
add
popa
add
adc
push
sbb
mov
aam
adc
ret
jo
jecxz
jmp
stos
xchg
pusha
call
mov
ins
and
xor
xor
in
mov
sub
stos
and
and
xchg
inc
add
das
push
mov
inc
add
loopne
loopne
or
aas
push
xor
lea
mov
div
mov
(bad)
fst
jmp
add
cmp
inc
div
cmp
lock
cld
mov
mov
pusha
add
mov
sti
pop
mov
cmp
jbe
inc
jp
pop
mov
mov
inc
scas
cmp
jmp
dec
lods
ror
pop
or
cmp
(bad)
int3
add
mov
sub
scas
inc
loopne
and
fnstsw
(bad)
push
xor
mov
ja
lods
cmps
lods
movs
or
push
aad
je
test
repz
dec
push
jo
fstp
push
sbb
adc
pop
pop
pop
mov
pop
movs
pusha
xchg
jge
or
xlat
and
push
adc
clc
sub
push
mov
ss
and
ds
int3
dec
and
mov
in
jne
sbb
mov
xor
xor
enter
push
(bad)
aad
test
or
push
inc
jmp
xchg
in
xchg
mov
and
inc
or
imul
inc
xor
out
add
pop
or
jns
fist
popa
pop
jbe
rcl
push
sti
inc
shl
pusha
lea
not
and
fs
fwait
gs
nop
cmp
xor
mov
push
and
rcr
aam
dec
jmp
sub
jnp
ret
jecxz
in
jno
add
daa
ja
jmp
imul
lea
pop
cmp
sub
arpl
mov
push
fcom
sub
xchg
xchg
cmp
and
ja
push
or
rol
jle
pop
and
lea
sbb
jbe
jle
dec
jmp
ss
jmp
pop
xlat
mov
(bad)
mov
adc
(bad)
fistp
adc
sbb
mov
dec
adc
fild
add
or
inc
add
jmp
(bad)
adc
mov
in
push
pop
idiv
inc
icebp
sub
xchg
mov
aad
add
lock
fld
cmp
sbb
mov
jmp
or
or
push
int3
jns
inc
or
fcmovnbe
push
ror
(bad)
call
xor
rol
and
push
or
mov
pusha
cmp
xor
je
popf
movs
pop
inc
pop
pop
sbb
mov
jmp
shl
xor
fsub
inc
loop
sbb
pop
fimul
dec
add
aaa
xchg
stc
inc
call
add
add
stc
jecxz
rcl
add
push
pop
call
add
sub
out
xor
rcr
test
cwde
jbe
dec
xor
mov
and
mov
in
pop
jo
or
sub
and
ins
shl
call
mov
call
mov
sub
test
or
js
jnp
sub
or
mov
dec
and
sub
xchg
jmp
pop
fld
adc
icebp
stos
outs
xor
imul
js
add
cmp
aam
xchg
cwde
stos
dec
jb
mov
inc
and
aad
sub
pop
ja
test
addr16
pop
int3
mov
inc
or
cmp
adc
sti
inc
jb
mov
pop
jbe
enter
or
pop
jge
test
scas
lods
test
je
sub
inc
and
rcl
sbb
cs
mov
aam
fld
rol
sti
xchg
dec
mov
adc
enter
das
jo
or
dec
clc
bswap
cld
repz
xchg
shr
enter
shl
clc
add
dec
hlt
jne
ret
pop
and
test
ret
shl
push
and
pop
das
lock
call
cmp
cmp
ins
adc
adc
cdq
outs
add
es
into
sub
leave
aad
cdq
lods
jo
add
imul
mov
lds
vpshlq
lock
xchg
sbb
(bad)
and
sub
mov
mov
push
push
into
or
fisttp
add
loopne
ins
fld
cmp
push
shl
xor
mov
or
pusha
lock
and
daa
add
sti
add
and
inc
shl
cmp
or
adc
pop
sub
add
pop
dec
mov
data16
push
xor
rcr
xchg
adc
(bad)
fdivr
jne
add
pop
sub
pusha
out
xor
inc
das
and
js
or
mov
xor
mov
push
repz
xlat
shr
push
mov
bnd
sub
dec
push
clc
cwde
dec
and
and
and
ret
push
mov
lea
add
ds
add
adc
or
pop
in
sub
ins
xlat
enter
out
xchg
sub
movs
ror
ins
jmp
int
adc
sub
shr
and
adc
and
ret
or
xchg
and
outs
pop
repz
xor
and
aad
mov
rcr
jb
fisubr
cmp
mov
xchg
in
mov
push
push
mov
cmp
jl
das
(bad)
xchg
sbb
jmp
sti
jb
pop
mov
xor
or
mov
ret
fs
xor
sahf
retf
retf
(bad)
push
sub
ss
mov
or
push
std
mov
push
jg
sub
mov
lahf
cs
push
mov
sbb
pop
mov
jmp
outs
inc
(bad)
outs
or
out
xchg
pop
jb
jbe
dec
hlt
and
xchg
les
xchg
pushf
ret
push
into
das
fidiv
sbb
mov
jmp
mov
das
pop
xlat
mov
repnz
test
(bad)
fcom
dec
xor
inc
mov
sub
sbb
mov
(bad)
and
adc
push
fcom
add
sub
pop
add
mov
xor
in
add
es
xchg
mov
ss
mov
vmovntps
push
and
cdq
jg
pop
cmp
(bad)
xor
dec
xor
adc
sub
shr
int
(bad)
jmp
scas
mov
adc
push
adc
int
inc
push
jge
cwde
xchg
or
es
cmp
push
xlat
and
adc
fdivr
inc
out
cmps
call
ficom
cmp
xchg
sbb
push
hlt
xor
adc
sub
aas
xor
xor
mov
cmp
je
lods
push
fdiv
mov
add
sub
sub
call
pushf
dec
daa
xchg
add
push
scas
xchg
dec
mov
xor
shr
call
or
sub
out
sbb
cli
imul
or
adc
or
add
add
mov
mov
jge
inc
push
mov
push
out
and
cmps
mov
mov
pop
je
mov
pusha
jmp
(bad)
sahf
add
cmp
jb
add
mov
enter
push
movs
xchg
jnp
pushf
adc
push
stc
dec
ds
rcr
loopne
push
out
icebp
xor
jecxz
pop
daa
push
fdivr
xor
jb
pop
sbb
scas
jae
mov
jae
add
fwait
add
pop
add
pushf
lea
add
in
sub
inc
in
xor
mov
lea
or
inc
cmp
imul
jg
ror
push
adc
popa
or
or
jle
xchg
or
xor
adc
pop
pop
inc
mov
loope
popa
jno
rcr
sub
sub
ds
xor
jbe
dec
pop
xor
push
mov
pop
sub
sbb
sti
push
adc
jg
and
sbb
mov
sub
push
add
and
mov
mov
adc
sub
sahf
push
fidiv
xor
pop
cmp
cmp
mov
cld
push
push
js
xchg
movs
fdivrp
or
mov
je
sbb
mov
sar
add
dec
push
push
push
mov
and
jne
or
xor
xor
sbb
adc
cwde
js
inc
mov
add
or
es
jae
ret
nop
or
add
pushf
inc
pop
or
xor
sar
call
js
and
add
add
rol
mov
add
mov
out
add
shr
stos
sub
(bad)
xor
inc
add
stos
add
stc
mov
dec
adc
into
rol
add
push
lea
outs
cmps
mov
ret
xor
in
or
sub
add
add
pop
aaa
ffree
dec
(bad)
ins
jp
mov
add
jecxz
(bad)
retf
cmp
mov
aam
aaa
fnstenv
adc
scas
add
push
js
mov
mov
ret
jmp
cmp
out
adc
mov
push
mov
loopne
nop
jo
je
mov
movs
repnz
sahf
aaa
clc
call
jp
jne
xchg
add
fucomi
lahf
push
lods
ja
mov
or
sti
jge
push
adc
scas
dec
add
movs
sbb
jns
push
fisubr
add
inc
not
inc
add
lods
inc
call
hlt
in
lahf
and
loope
aam
(bad)
jne
jb
pop
pop
xchg
jecxz
sbb
push
push
loope
xor
mov
imul
xchg
mov
mov
mov
mov
shl
fisttp
add
jns
or
add
jmp
stos
sbb
push
add
ds
jno
pop
mov
cmp
dec
sbb
data16
lock
das
je
subps
inc
cmps
and
add
sub
pusha
jb
das
add
inc
inc
sub
lock
enter
(bad)
push
ins
or
push
adc
shl
sahf
push
loopne
lods
add
les
adc
inc
clc
and
push
adc
dec
popa
cli
bnd
fadd
enter
push
call
mov
fs
(bad)
and
push
jnp
xchg
in
je
dec
pop
pushf
mov
or
pop
adc
jp
mov
fsubr
inc
or
loopne
rcr
outs
ror
and
dec
je
add
adc
push
push
sahf
jge
or
jmp
adc
xchg
out
xchg
pop
cmp
(bad)
js
xlat
call
or
test
call
or
(bad)
dec
sub
or
add
int
mov
and
je
or
jo
cwde
push
inc
pusha
(bad)
in
cmp
push
pusha
cmp
and
inc
inc
dec
dec
xor
repnz
xor
imul
jl
mov
jmp
sbb
test
popf
pop
adc
fisttp
jns
add
or
or
mov
mov
aaa
mov
sbb
add
shl
mov
lea
popa
mov
push
popa
add
or
sbb
cli
push
rcr
dec
fs
(bad)
imul
lock
das
es
enter
or
mov
or
add
stos
shl
aam
or
movs
jg
add
add
int3
pop
das
jne
test
inc
sbb
mov
inc
jmp
or
cmps
into
or
dec
sub
add
lock
popa
and
shl
leave
or
xor
adc
xor
push
jmp
or
sub
add
xchg
push
add
and
push
adc
mov
push
and
retf
stos
jbe
mov
push
scas
push
adc
outs
adc
mov
test
das
or
push
aad
mov
xchg
cmp
sub
adc
arpl
lods
loope
mov
or
inc
jmp
inc
stos
add
push
mov
nop
pop
inc
pusha
xchg
fistp
adc
in
mov
cmp
out
cs
pusha
mov
aas
adc
leave
or
pop
enter
inc
adc
or
or
test
xor
loopne
push
push
pop
ss
mov
fimul
mov
jo
cmp
jns
adc
sub
cdq
out
adc
add
adc
sub
and
aas
loopne
push
pop
dec
jae
sbb
add
in
pusha
inc
push
in
sbb
(bad)
scas
sbb
sub
(bad)
and
sbb
and
gs
fld
int3
or
and
cdq
call
inc
pusha
scas
cmp
lods
test
and
enter
or
sbb
xor
stc
push
jb
xchg
dec
jmp
stos
add
lock
push
fucom
cmp
add
test
lea
aas
daa
nop
sub
xor
pop
xchg
and
xor
jmp
test
mov
jmp
sbb
cmp
xor
xor
movs
cmp
lock
add
iret
pop
in
inc
or
aaa
cmp
jbe
push
arpl
pop
jne
push
pop
push
pusha
ret
inc
push
mov
pop
xchg
pusha
ret
pop
dec
jmp
test
test
mov
call
(bad)
movs
lods
jg
ret
mov
je
dec
mov
scas
es
jne
dec
jns
aaa
pop
bound
pop
and
lds
inc
mov
cmp
dec
jmp
add
mov
add
jne
inc
jg
add
in
add
sbb
movs
nop
push
jge
and
jmp
jb
push
xchg
mov
cmp
mov
rcl
pop
cmp
inc
cmp
aas
xchg
pop
add
jmp
in
popf
retf
clc
loop
xor
fidivr
in
(bad)
push
sub
ret
xchg
movs
adc
in
inc
mov
add
sub
cmps
adc
pop
cmps
xchg
pop
pop
or
test
mov
add
inc
jecxz
push
cmp
fadd
adc
and
cmc
xor
sbb
je
stos
inc
sbb
jl
dec
sahf
pop
hlt
adc
cs
add
test
or
jb
aam
push
(bad)
sub
dec
ret
inc
xchg
mov
pop
test
pop
mov
inc
daa
cmps
lahf
mov
iret
test
ret
sbb
mov
ds
aas
in
cmp
fmul
sub
pop
fsubr
sub
push
sub
loopne
pop
xchg
repnz
int
jg
xor
(bad)
lsl
mov
adc
cmp
xor
adc
adc
lods
dec
lea
mov
cmc
adc
arpl
cmp
add
cdq
add
movs
add
sub
pop
sahf
xor
jg
adc
push
(bad)
jo
and
cld
aas
int3
and
mov
daa
dec
inc
sbb
(bad)
fsubr
pop
adc
stos
inc
cmp
test
scas
loopne
pushf
je
push
adc
xchg
cwde
mov
das
sbb
retf
or
or
pusha
inc
aam
sub
(bad)
pop
push
lahf
inc
lods
loopne
sbb
ja
sbb
fs
jne
or
and
inc
dec
lea
xor
mov
push
xchg
inc
and
xor
shl
adc
mov
mov
jge
je
mov
or
push
sub
clc
xlat
cmp
stos
add
enter
push
mov
sbb
mov
(bad)
jmp
dec
dec
je
inc
pusha
enter
mov
push
push
test
add
jnp
jmp
xchg
inc
add
gs
ins
add
push
out
xor
jne
cmps
into
test
add
xlat
push
mov
push
outs
mov
adc
cwde
aam
sub
and
call
cmp
jmp
cwde
sub
push
push
sub
cmp
cmp
into
les
push
xchg
out
sub
sub
retf
mov
jl
pop
pop
mov
mov
cli
sar
hlt
or
adc
stos
adc
fsubr
mov
je
add
push
inc
sbb
xchg
jo
pop
outs
les
(bad)
push
dec
add
or
sbb
shl
inc
or
push
jmp
loope
xlat
pushf
in
push
pop
fadd
inc
mov
jns
add
fsubr
les
or
pop
repnz
les
dec
and
jno
dec
xor
push
adc
add
pop
mov
stc
jmp
popf
call
ret
(bad)
(bad)
mov
int3
sub
fcom
enter
and
inc
enter
imul
mov
add
pop
imul
in
hlt
inc
ret
xlat
jl
adc
cmp
add
sbb
xor
or
les
pop
sub
cwde
div
mov
jmp
aad
add
add
aam
cmp
fs
in
mov
add
ror
ror
test
out
push
ret
add
add
push
or
or
ins
sbb
pop
imul
dec
aaa
adc
retf
rcr
outs
and
lock
lahf
adc
dec
or
rol
push
lods
inc
ror
lods
xor
test
lods
addr16
add
adc
scas
dec
dec
dec
in
push
stos
and
push
xor
mov
jmp
mov
js
iret
sbb
inc
inc
and
repnz
fs
mov
adc
pushf
(bad)
mulps
shl
adc
xlat
bound
sub
into
je
mov
ins
ins
int3
push
and
test
cs
rcr
add
mov
fs
push
mov
leave
mov
shl
and
push
inc
dec
loopne
xor
cwde
cmp
inc
add
outs
loopne
inc
repnz
data16
and
add
rcr
push
aaa
(bad)
sbb
nop
test
mov
adc
sub
or
lods
bound
stc
cmp
xchg
sub
xor
sbb
and
ja
or
push
stos
pop
test
mov
jecxz
xchg
outs
and
dec
sbb
ror
scas
and
retf
dec
je
add
movs
xchg
out
adc
or
iret
adc
nop
sbb
mov
daa
iret
mov
adc
pop
outs
mov
ror
movs
xchg
xor
cmp
push
jne
add
in
jne
test
cmc
mov
inc
push
mov
inc
sbb
ins
push
mov
nop
mov
push
lock
in
xchg
in
adc
jmp
int
aam
(bad)
sbb
sub
dec
jmp
fld
lods
dec
sub
mov
xor
dec
mov
sbb
test
cwde
fadd
add
jo
xlat
fcom
and
rcl
sub
test
sub
xchg
mov
xchg
jmp
cs
and
push
mov
fstp
xchg
out
in
mov
jmp
xor
inc
adc
push
pop
pop
pop
add
and
mov
repz
adc
(bad)
fmul
jp
and
pop
mov
cmps
std
add
or
xlat
inc
sahf
push
mov
add
out
pop
call
or
jle
loope
arpl
popa
sahf
(bad)
dec
jns
lods
push
add
inc
ss
mov
xlat
inc
lock
sbb
mov
xor
(bad)
and
inc
or
jns
adc
push
sub
push
out
mov
jge
add
lock
(bad)
ret
je
bnd
imul
lods
and
and
add
movs
out
enter
and
std
sub
je
in
or
xor
mov
xor
sbb
add
mov
mov
push
cmp
xor
add
(bad)
rcl
push
pop
je
jne
(bad)
addr16
sub
fstp
mov
pop
cmp
test
add
test
adc
inc
push
mov
cli
jno
nop
jg
pop
dec
push
add
add
adc
rol
pop
nop
pushf
jns
xchg
test
sub
xor
inc
add
das
lds
sti
jno
les
mov
cs
push
das
dec
adc
push
scas
mov
adc
sub
push
mov
jae
and
add
sub
xlat
lock
data16
push
sbb
add
iret
sub
ins
je
or
mov
or
xchg
or
outs
or
add
stos
mov
lods
in
ins
sbb
ror
stos
pop
or
jo
jg
add
push
push
pop
add
pop
dec
aam
and
push
jmp
xor
fbstp
push
or
(bad)
vpsrlw
dec
mov
sbb
rcl
jns
pop
add
inc
and
or
cmp
add
add
xor
movs
dec
mov
pop
jle
xchg
mov
pusha
ds
xchg
add
movs
inc
or
inc
add
add
call
mov
adc
xor
ud2
adc
xchg
mov
mov
and
jl
or
dec
popa
lds
mov
out
xchg
pushf
mov
icebp
jns
xor
pusha
and
adc
jns
sub
add
sub
add
test
adc
mov
jno
inc
(bad)
mov
repnz
push
and
loopne
add
pusha
or
cmps
retf
push
mov
sbb
aaa
mov
push
adc
add
pop
pop
or
lods
(bad)
mov
pusha
shr
mov
push
jno
(bad)
fdivrp
icebp
popa
inc
pusha
int
inc
loopne
fcomp
dec
or
mov
fadd
lock
ret
jns
js
add
lods
in
push
sbb
push
jns
sbb
push
sbb
push
(bad)
xlat
adc
scas
dec
cdq
cmp
shl
repz
mov
popa
div
add
or
jl
jle
inc
sbb
xor
or
adc
imul
mov
inc
cmp
repnz
sti
loope
inc
mov
ins
inc
lods
adc
jne
xlat
sub
sub
push
adc
add
mov
inc
add
inc
(bad)
cmp
jbe
dec
xor
or
push
ja
add
lea
ror
mov
xor
shl
dec
rcl
cmp
xchg
cmp
int
pop
add
adc
xor
push
sub
jne
add
rcr
loop
xor
mov
jo
adc
frstor
xchg
adc
ins
outs
add
pusha
fbld
mov
dec
xchg
inc
aad
xor
push
push
sti
ror
ror
pusha
cmp
loopne
add
mov
lds
leave
sbb
test
loope
add
xchg
mov
adc
out
jge
fs
test
scas
hlt
and
xadd
xor
pop
ror
test
data16
push
push
or
enter
ss
repnz
ins
mov
out
push
sub
test
push
aaa
add
and
push
cmp
sub
inc
in
mov
and
(bad)
call
pusha
aaa
fnsave
push
or
movs
pop
jg
or
and
add
and
outs
call
jae
clc
or
pushf
inc
movs
into
mov
xor
shl
sahf
int3
stos
add
cli
das
sub
repz
sbb
loope
or
add
inc
seta
cwde
add
je
pusha
rol
xor
adc
movs
sahf
mov
lods
dec
loope
push
push
ret
mov
cmp
dec
popa
xor
call
lock
bound
and
jmp
jmp
push
aad
leave
add
pop
ror
js
arpl
fs
push
xchg
jne
or
scas
push
jecxz
mov
pop
int
arpl
jl
xor
add
fmul
loopne
test
dec
sbb
dec
inc
lock
sbb
sub
xchg
leave
sbb
inc
lea
test
dec
leave
ds
mov
push
cmp
test
clc
mov
mov
add
leave
pop
rcr
push
xor
aaa
pop
xchg
or
add
rep
push
add
cbw
add
add
push
jmp
add
or
and
push
jmp
enter
mov
(bad)
or
push
dec
dec
fadd
fisttp
adc
(bad)
rol
cld
pushf
or
inc
inc
dec
or
adc
mov
sbb
cmp
in
and
dec
inc
push
sbb
ret
dec
mov
je
nop
aas
les
inc
pusha
and
inc
dec
imul
mov
mov
add
gs
and
push
push
call
mov
sbb
mov
push
pop
mov
rep
lods
add
fisub
fsubr
lods
add
lea
lods
jne
aad
clc
or
push
ds
push
push
test
shr
mov
add
cmp
jle
mov
fidivr
cmps
mov
and
or
std
cmp
movs
adc
xchg
mov
arpl
mov
cmp
aam
add
mov
hlt
mov
pusha
mov
retf
cwde
push
pushf
mov
jmp
push
mov
jnp
mov
mov
cmp
xchg
ins
test
jge
and
pop
jl
lea
pushf
adc
test
mov
or
add
adc
inc
add
clc
enter
xchg
test
add
lods
lock
clc
add
push
movs
inc
nop
pop
shl
or
sub
or
push
fld
jb
dec
and
pop
add
in
(bad)
fdiv
inc
out
adc
jmp
push
and
inc
lea
xor
cmp
adc
cmp
sbb
mov
adc
stos
and
inc
xchg
clc
sub
sbb
or
test
(bad)
inc
leave
add
xor
pushf
outs
jp
pop
dec
rcl
jns
dec
jo
add
xor
ret
xchg
inc
sub
les
adc
push
dec
add
and
sbb
jmp
js
sbb
xor
test
and
or
add
iret
sti
clc
push
or
fwait
push
jnp
repnz
jbe
jg
mov
fwait
ins
or
cmp
rol
jg
or
push
(bad)
jle
and
imul
shl
or
inc
cmp
test
test
aas
movzx
xchg
fstp
add
xchg
adc
(bad)
repnz
ja
jne
ucomiss
popa
lahf
cs
or
call
xchg
adc
(bad)
jge
icebp
je
add
jge
add
jo
leave
and
add
inc
sub
jmp
mov
in
push
mov
pop
jo
or
pop
jl
fnstenv
pop
adc
icebp
inc
daa
nop
or
cmp
popf
shl
push
pop
or
sub
je
push
pusha
add
xor
pop
mov
int3
(bad)
cmp
je
pushf
sbb
push
scas
lahf
sbb
sbb
(bad)
call
sub
scas
sbb
xchg
enter
sbb
mov
je
nop
shl
gs
out
aaa
push
add
mov
enter
mov
dec
imul
inc
clc
jmp
push
arpl
push
add
mov
(bad)
mov
jecxz
jg
xor
mov
push
mov
jb
sbb
fcmovnbe
push
mov
xor
(bad)
fcomp
adc
push
adc
xchg
loop
ror
push
cmp
xchg
lock
pop
inc
pop
xor
or
or
std
sub
push
adc
inc
push
pop
sub
jae
in
sub
ins
hlt
daa
or
aaa
push
mov
jo
cmps
or
nop
pushf
mov
xor
or
popa
jo
xor
js
cmp
dec
dec
call
lock
mov
xor
out
jnp
adc
mov
sbb
call
mov
test
push
loopne
jmp
sub
popf
mov
add
adc
jne
push
cmp
xchg
push
push
xor
and
cs
fistp
pop
or
or
push
pop
jmp
in
int3
repnz
push
pop
pop
xchg
add
and
in
jne
adc
push
cmp
and
mov
dec
pop
daa
repnz
les
pop
dec
loope
test
in
or
inc
ins
or
mov
cmp
popf
rol
lds
sub
leave
sbb
mov
push
enter
xor
ret
xor
sub
adc
mov
jmp
movs
push
cwde
or
jns
call
lock
jae
jmp
mov
adc
aam
rcl
fmul
push
adc
mov
push
push
add
jmp
adc
dec
mov
in
in
ins
shl
pop
cmp
sbb
inc
or
and
sar
out
inc
sbb
or
add
adc
push
jne
or
pop
lds
test
and
inc
jmp
mov
fldenv
fnstsw
cmp
daa
addr16
mov
dec
pop
sbb
xor
jecxz
xchg
out
add
jge
ret
neg
sub
aas
arpl
cmp
and
mov
shl
pop
ret
dec
cdq
loop
inc
pop
xchg
mov
sub
jns
adc
mov
je
mov
pop
xor
in
stc
fs
pusha
pop
push
mov
pop
jle
inc
in
and
gs
cmp
mov
push
out
dec
push
add
(bad)
or
iret
dec
jle
pop
stc
jnp
push
sbb
add
push
mov
sbb
xor
mov
rcr
push
call
in
or
or
adc
icebp
or
nop
pop
loop
outs
test
call
push
cmp
in
mov
or
ret
add
int3
xor
fstp
xchg
dec
mov
cmp
(bad)
in
cmps
adc
adc
push
xor
dec
ss
mov
add
(bad)
xor
aad
add
add
sub
dec
sub
mov
mov
in
addr16
push
rcl
push
stos
and
in
or
or
scas
fdivr
xlat
or
mov
xchg
push
enter
ss
in
add
xchg
xor
jns
(bad)
in
loope
push
les
cmp
and
mov
cmp
ret
ss
and
xor
and
nop
test
jle
sub
jb
clc
or
xor
add
mov
repnz
loope
xor
inc
lds
xor
daa
scas
xor
inc
jnp
out
pop
(bad)
inc
fs
loope
and
sbb
ja
mov
cli
push
cdq
and
mov
pushf
sub
mov
es
and
push
lahf
test
or
xor
add
je
js
xor
mov
ret
imul
xchg
xor
sbb
mov
or
les
ror
push
push
xchg
jl
loope
dec
mov
adc
or
inc
mov
fdiv
stos
or
mov
xor
sbb
ror
jno
add
pop
stc
test
aas
inc
cld
inc
loopne
dec
or
push
lea
push
push
imul
xchg
retf
xchg
sub
pop
adc
ret
test
das
jb
out
adc
adc
fcom
pop
push
(bad)
int
lods
ins
dec
retf
mov
pop
xchg
mov
iret
iret
add
push
mov
and
sbb
ret
lea
adc
sbb
dec
pop
inc
add
icebp
push
cs
dec
inc
mov
lods
xor
mov
xor
iret
(bad)
js
dec
xor
or
push
rol
cmp
xchg
sub
shr
pop
in
stos
movs
iret
cmp
std
dec
imul
jmp
ss
retf
pop
cwde
pushf
mov
movs
test
mov
nop
and
push
in
xchg
jmp
(bad)
mov
push
inc
jge
adc
leave
(bad)
xchg
sbb
sbb
das
movs
mov
push
push
sbb
stc
cmp
stc
jmp
sahf
fnstcw
add
or
sub
mov
std
scas
out
loope
in
stc
dec
mov
test
clc
and
and
push
mov
imul
jmp
jb
or
cs
inc
jno
and
pop
repnz
add
or
sbb
add
adc
push
les
sbb
jle
adc
inc
mov
mov
jmp
xor
jp
xor
add
cmp
repnz
cmp
retf
inc
mov
popa
xor
fimul
inc
and
lock
lock
loop
mov
adc
movs
mov
pop
cmp
cmp
or
mov
push
jl
lock
in
inc
div
cmp
sub
nop
cmp
xchg
fwait
repnz
jmp
in
icebp
add
xlat
fwait
push
jle
jg
cwde
in
lock
push
inc
(bad)
lds
adc
jecxz
cmps
sti
aas
fsub
adc
pop
cmps
in
push
in
faddp
add
push
xchg
push
sbb
in
pop
sbb
repz
test
mov
or
xor
jae
dec
jae
(bad)
or
jmp
sub
and
add
lds
push
jns
or
in
(bad)
das
cmp
in
and
push
jle
adc
push
dec
pop
adc
add
jns
or
or
bound
loop
int
pop
pop
mov
aam
fwait
aam
in
test
cmp
je
jl
add
stos
sub
mov
mov
lock
or
mov
out
xchg
adc
sbb
and
sbb
test
pop
pop
mov
test
inc
and
fwait
daa
rol
mov
cdq
and
ret
ror
cmp
xor
iret
and
and
retf
imul
fisttp
push
mov
adc
data16
call
(bad)
stc
dec
xchg
or
add
int3
cmc
stos
and
inc
inc
push
inc
rcr
inc
cmp
mov
xchg
jg
push
sub
inc
or
sbb
jl
(bad)
jo
pop
mov
scas
or
loopne
aas
call
or
jg
mov
mov
cmp
or
ja
push
jle
mov
lods
and
rol
shl
lock
adc
bound
add
les
out
sub
ins
or
add
and
test
xor
stc
or
or
inc
mov
push
fs
add
add
in
inc
push
sub
xor
or
pop
adc
vmovups
(bad)
mov
test
in
js
(bad)
sbb
and
inc
mov
and
xchg
ret
ins
cli
cmc
fsub
push
xchg
popa
int3
fs
enter
add
mov
pop
or
push
push
js
and
jle
jne
in
xchg
add
or
mov
jge
sbb
fstp
push
mov
out
xor
sbb
add
lea
pushf
sbb
mov
cmp
cmps
iret
or
or
dec
cmps
add
mov
mov
add
mov
pushf
pushf
jmp
push
mov
fstp
cmps
xchg
dec
test
push
leave
test
shl
rcr
jne
mov
out
pop
cmp
add
inc
popa
(bad)
adc
repnz
sar
add
mov
in
push
jmp
cmp
and
and
sar
ins
cmp
in
xchg
jbe
jmp
mov
pop
push
mov
push
and
test
xor
push
cmp
mov
ret
inc
lods
pop
xor
pop
pop
adc
push
imul
sbb
adc
stos
mov
jmp
xor
ret
inc
pushf
fs
and
and
sub
sub
fsub
lods
and
xor
inc
stos
movs
in
jne
cs
mov
sub
or
mov
xchg
add
out
cmp
push
rcr
sti
adc
mov
sub
inc
add
sub
jo
stc
fs
add
pop
cmp
mov
test
(bad)
push
pop
jns
xor
fdiv
xchg
mov
sub
xchg
ins
daa
lods
retf
xor
push
cmp
adc
(bad)
ret
mov
out
add
or
or
sti
xchg
gs
push
or
adc
mov
adc
push
mov
nop
daa
dec
jge
sbb
jne
outs
mov
adc
mov
xor
xchg
push
cwde
pop
adc
and
mov
out
jae
pop
fwait
sbb
loop
jo
push
lods
pop
push
lock
sahf
imul
adc
ins
ror
jae
jo
push
xlat
test
push
inc
popf
mov
je
rol
dec
pushf
in
and
add
mov
xor
pusha
wbinvd
sub
mov
inc
movs
retf
adc
xor
mov
inc
mov
movs
jae
je
cmp
lahf
xchg
nop
out
dec
push
adc
movs
fiadd
mov
or
mov
xchg
les
lahf
out
das
sbb
je
push
push
add
je
xor
push
ja
mov
and
sbb
(bad)
nop
pushf
je
lods
dec
movs
mov
loopne
sbb
cmp
loop
cli
gs
cmps
adc
inc
add
xor
jmp
or
fisttp
cmps
rcl
leave
mov
cmps
lea
dec
out
push
lock
mov
adc
adc
adc
sbb
test
sbb
in
pusha
not
push
xlat
push
aas
call
inc
or
push
in
mov
and
loopne
fstp
xchg
or
lock
cmp
nop
and
stos
nop
sub
popa
xchg
dec
jp
test
inc
sbb
pop
pop
les
lahf
mov
and
cmp
mov
or
lods
xchg
les
or
pop
dec
fcom
in
sub
aam
push
loopne
sbb
adc
jbe
jbe
xor
mov
js
sub
pop
add
xor
dec
cli
cdq
fs
mov
add
add
idiv
cld
dec
cmp
cmps
jne
ins
dec
jl
adc
xchg
or
sar
(bad)
pop
sub
retf
outs
push
inc
cmp
dec
out
and
cmc
jns
jle
push
pop
mov
fistp
shl
push
xor
push
add
push
imul
fs
pusha
jo
adc
xor
and
dec
movs
jmp
movs
add
mov
cld
adc
jecxz
shl
lahf
fwait
pop
xchg
jno
or
in
jmp
push
imul
gs
leave
push
add
add
pop
shl
aas
xchg
add
imul
cmp
or
ror
cwde
jbe
jge
je
add
jo
cwde
cwde
shl
add
call
(bad)
dec
cmc
mov
xchg
int
add
cmp
inc
data16
fstp
adc
fld
imul
hlt
push
fisub
sti
adc
jb
jo
aad
and
adc
clc
sbb
and
and
rcr
repnz
xchg
sub
pop
add
and
loopne
dec
in
imul
sbb
jp
lea
dec
sbb
out
pusha
mov
adc
adc
inc
mov
dec
adc
mov
pop
jp
or
je
pop
je
mov
push
daa
sub
ins
fnstcw
push
push
arpl
mov
xor
mov
pop
inc
push
sbb
leave
mov
ret
arpl
inc
movs
jmp
mov
jns
pop
add
lods
mov
scas
add
mov
test
popf
je
ret
sar
mov
in
cmp
or
push
inc
in
mov
pop
sahf
adc
xchg
movs
test
mov
push
addr16
add
add
arpl
das
mov
mov
xor
sub
scas
dec
lods
movs
js
ret
in
mov
dec
(bad)
cld
popf
ds
jge
jmp
je
or
xchg
sbb
add
pop
add
pop
jne
inc
fdiv
loope
xchg
lea
ret
push
cmp
pop
adc
add
mov
adc
mov
leave
push
push
test
ins
dec
push
push
or
mov
push
fiadd
sub
out
pop
retf
imul
cs
sbb
call
inc
add
pop
inc
jnp
ss
call
or
lahf
in
pop
jbe
pop
xor
cmc
or
add
aas
xchg
mov
js
mov
outs
and
push
test
lea
ret
(bad)
xchg
pushf
(bad)
mov
test
cmp
es
cwde
xor
jno
ror
or
cmp
(bad)
lock
mov
ins
push
mov
xor
add
scas
cli
aam
inc
jle
inc
push
shr
cli
add
scas
loop
sti
lock
out
cs
push
add
push
cmp
je
scas
rol
adc
sbb
out
shr
push
(bad)
sbb
push
sub
xchg
push
test
sbb
mov
adc
push
retf
rcr
xor
div
in
sbb
popa
(bad)
test
(bad)
hlt
je
add
sbb
or
adc
xchg
sbb
arpl
sub
(bad)
or
xor
mov
in
cmp
ins
sbb
add
psadbw
xor
mov
add
cmp
(bad)
loopne
dec
jg
movsx
mov
xchg
jge
add
mov
lea
jg
sbb
or
imul
cmp
rcl
lds
js
add
sbb
jge
jne
inc
fnstcw
arpl
xchg
scas
cdq
adc
inc
je
jae
sbb
hlt
clc
das
push
je
dec
mov
inc
mov
dec
inc
jmp
ins
pusha
movs
jne
and
std
dec
sar
pop
lahf
mov
(bad)
imul
sub
cmp
xchg
lea
je
in
adc
sbb
jne
add
aaa
or
xor
int3
mov
mov
inc
test
aas
jmp
mov
jnp
add
sbb
or
xlat
add
ins
inc
push
cmp
enter
and
cwde
sub
mov
mov
adc
in
mov
les
add
nop
dec
push
and
loopne
mov
cmp
adc
push
and
or
mov
inc
add
pop
jno
adc
or
cmps
test
fist
add
mov
add
aas
sbb
inc
or
push
stos
ror
push
ror
adc
jle
ja
xor
jl
push
shr
cwde
je
cmp
je
xchg
pop
sub
push
aas
mov
xor
mov
rol
rcr
pusha
nop
fucomip
lock
loop
add
mov
daa
sbb
dec
cmp
push
pop
sub
and
loop
mov
stos
(bad)
cmp
jp
or
mov
add
ret
rcl
xchg
inc
stos
loope
jecxz
pop
mov
dec
jne
cmp
shr
icebp
pop
pop
jmp
ss
sbb
cdq
push
xchg
or
xchg
sbb
loop
leave
mov
add
and
iret
add
push
jl
mov
mov
into
(bad)
mov
rol
out
stc
xor
cmps
dec
lods
jecxz
mov
stos
xchg
les
jo
pusha
or
inc
or
pop
popf
cwde
(bad)
out
popa
jmp
adc
jbe
push
or
cmp
mov
test
mov
cmp
mov
call
cmp
cmp
jae
mov
mov
mov
test
(bad)
test
xor
inc
cmc
fadd
test
jbe
jl
pop
(bad)
mov
int
add
dec
retf
sub
xor
ins
cmps
sub
pop
sub
ins
inc
and
push
les
mov
clc
sub
cmp
add
sbb
mov
ret
cmp
dec
dec
jle
shr
push
loop
inc
ds
and
sub
add
stos
mov
dec
daa
in
add
push
or
enter
jne
lods
in
cmps
shl
adc
adc
jmp
ror
cmp
rol
mov
adc
loopne
push
(bad)
dec
ret
test
add
jmp
mov
and
and
sub
push
push
dec
mov
add
mov
and
loop
jb
cs
ret
ins
xchg
stos
and
jmp
movs
push
icebp
les
xchg
jbe
pop
retf
or
adc
jnp
hlt
jo
xchg
adc
sbb
ret
mov
sti
fnsave
push
mov
mov
stos
jnp
jbe
sub
push
jo
rol
aas
or
or
inc
pop
fisubr
push
push
in
fcomip
fistp
mov
inc
pop
push
xor
and
sbb
inc
cld
xchg
iret
out
gs
jno
inc
xchg
neg
loop
rcr
xor
movs
mov
out
and
ds
mov
jo
sub
add
sbb
cmp
enter
adc
hlt
inc
adc
adc
adc
sbb
adc
pop
pop
shl
push
iret
outs
in
adc
xchg
jo
push
push
adc
adc
or
xchg
xchg
mov
mov
adc
test
js
add
xchg
and
and
jne
pop
jg
outs
sbb
add
and
ja
lea
push
mov
pop
(bad)
xchg
xor
pop
cmp
jbe
push
aaa
(bad)
test
sbb
adc
frstor
dec
frstor
push
push
xor
not
and
inc
hlt
je
pop
mov
jmp
or
or
nop
and
(bad)
cmp
jae
stos
push
push
clc
mov
mov
les
mov
inc
pop
or
jge
mov
and
or
and
lahf
test
xor
pop
scas
xchg
lahf
mov
int3
push
call
js
jl
je
sbb
lock
stos
lods
enter
xor
sbb
sbb
rol
sahf
dec
push
and
push
pop
(bad)
adc
test
mul
je
mov
mov
mov
call
xor
inc
lea
mov
sbb
cmp
pop
push
(bad)
sub
pushf
pop
test
pushf
inc
dec
cmp
dec
fst
add
loopne
push
sub
push
(bad)
adc
stos
fwait
add
cmp
add
out
stos
or
mov
add
jo
cmp
inc
dec
jle
push
or
cmp
cmp
int3
add
cmp
pop
xchg
inc
pushf
or
int3
out
xor
enter
sub
add
xor
inc
test
dec
jle
outs
mov
ret
mov
jl
sbb
stos
enter
mov
adc
lods
call
popa
les
and
je
or
sahf
adc
je
jb
adc
mov
pop
ret
pop
mov
sub
daa
in
push
mov
addr16
int3
add
mov
or
retf
inc
lock
std
push
dec
adc
or
mov
xrelease
lods
cmps
imul
or
xor
dec
fs
inc
jo
lods
cmc
mov
imul
adc
push
cmp
sbb
call
add
and
and
fwait
fwait
ja
aam
sbb
and
pop
and
aad
add
or
sbb
in
and
sub
in
xchg
cs
mov
jge
aam
fldpi
adc
cli
add
dec
add
cmp
jge
adc
push
mov
pop
ja
push
fs
sub
mov
in
js
and
shr
sbb
cli
setg
push
(bad)
loop
mov
push
add
lds
sbb
clc
dec
jo
jbe
jne
stos
sbb
push
and
ss
pop
popf
jnp
aam
pop
xor
push
nop
xor
adc
pop
mov
arpl
push
and
jnp
xchg
sub
test
ror
repnz
in
xchg
sahf
pop
adc
sub
xchg
sub
fld
jno
jbe
mov
add
jb
mov
cld
sub
je
mov
dec
sub
sub
push
(bad)
sbb
pop
hlt
and
not
push
inc
sub
dec
ret
shl
and
shl
add
dec
pop
dec
push
xchg
jo
test
cmp
dec
or
sbb
adc
cmp
adc
mov
adc
fld
cmps
into
sbb
pop
or
dec
mov
stos
add
adc
mov
jo
pop
adc
pminub
inc
push
mov
ja
adc
das
scas
push
call
push
pop
add
(bad)
jmp
jmp
sbb
mov
pusha
adc
cld
or
adc
xchg
adc
mov
shl
fisub
les
mov
and
cmp
sub
popa
or
cmp
jnp
ror
popa
sub
adc
xor
add
push
adc
add
adc
push
rol
jmp
fnsetpm(287
mov
test
jne
and
or
dec
je
adc
dec
pushf
mov
shl
sub
sub
cmp
adc
cmp
inc
sbb
dec
inc
int
cmp
rol
or
xor
stos
mov
aas
sbb
sbb
xor
sbb
adc
cmp
jns
pop
adc
dec
inc
jg
mov
addr16
ret
add
sub
lods
xor
push
push
xchg
add
mov
ja
sbb
rcl
adc
into
and
repnz
sub
loop
push
int
test
scas
add
clc
retf
(bad)
jmp
mov
dec
push
push
fadd
mov
in
mov
push
push
lock
xchg
add
or
and
test
fisub
add
add
add
stos
pop
nop
(bad)
aam
int
in
xchg
and
mov
scas
lahf
jbe
cmp
add
imul
sbb
push
xchg
cs
shl
sub
add
sub
push
rol
sbb
cmp
or
mov
into
xor
mov
adc
inc
mov
add
mov
jb
dec
and
je
int
shr
inc
add
retf
dec
dec
cs
adc
lds
sbb
and
retf
jmp
lea
push
sar
(bad)
and
push
inc
or
loopne
sar
cmc
or
or
push
or
gs
(bad)
ds
mov
add
jge
loope
and
jle
or
add
mov
dec
xor
or
imul
mov
or
in
aaa
mov
add
addr16
adc
shr
sub
push
lea
fcom
jl
shr
or
pop
adc
ins
add
push
outs
movs
adc
in
out
add
and
xor
inc
dec
or
dec
pop
ror
retf
push
add
dec
mov
lsl
sbb
xor
in
sbb
leave
pop
or
sub
pop
not
sar
sbb
cwde
sbb
dec
inc
xchg
mov
xor
cmp
cmps
test
cs
mov
popf
aam
push
lock
adc
dec
cmp
xor
jecxz
jle
sub
ins
aam
dec
inc
cmp
xchg
or
push
sub
clc
sbb
add
dec
dec
pop
sbb
loop
push
scas
hlt
dec
inc
add
add
cmp
sti
shl
inc
push
ja
adc
in
pusha
fld
fisttp
mov
jae
jmp
inc
dec
jno
push
lock
fisttp
or
pusha
cs
mov
pop
pop
loop
dec
or
push
push
push
jg
sub
mov
dec
sub
repnz
and
push
or
push
dec
inc
jb
lea
popa
dec
fs
inc
lea
push
pop
push
lea
add
loope
ins
push
sbb
mov
sub
inc
fdiv
lds
push
jae
or
out
dec
lods
sbb
out
adc
pop
add
cmp
adc
jmp
stc
adc
adc
pop
cmp
xchg
mov
lock
(bad)
jbe
sbb
or
pop
sbb
call
ja
sbb
pop
(bad)
out
xor
bnd
fbstp
enter
hlt
and
lods
pop
jb
cmp
and
sbb
dec
les
mov
popa
outs
mov
xor
push
add
cs
cs
mov
ins
fist
sub
push
mov
inc
dec
dec
jle
push
or
cmps
mov
lods
add
sahf
out
loop
int3
into
adc
add
shl
add
ds
das
inc
pop
add
push
enter
inc
mov
outs
pop
out
jae
jg
pop
mov
ret
sub
pop
add
cld
mov
add
sub
cmc
mov
and
and
inc
in
ds
in
pop
push
pop
ins
cmp
dec
sub
cmp
into
mov
sbb
enter
push
daa
add
cmp
lea
xor
nop
out
mov
mov
sbb
retf
lods
rcr
dec
jmp
sub
push
mov
push
movs
inc
pop
push
(bad)
loopne
push
iret
loopne
pushf
adc
dec
push
or
aas
cmp
mov
jge
sbb
jnp
jb
push
push
pop
push
or
cdq
pop
call
sbb
ret
push
test
push
(bad)
push
mov
ja
mov
mov
dec
ss
push
call
arpl
push
and
add
jne
div
loop
out
shr
mov
jbe
mov
xchg
add
call
test
jne
popf
rol
inc
inc
or
jl
(bad)
int3
retf
fcom
push
cmp
adc
data16
sub
or
add
movs
jge
pop
dec
inc
stc
enter
loopne
hlt
push
nop
or
inc
dec
faddp
xor
stos
rcr
daa
mov
leave
or
add
cmp
adc
or
mov
sbb
inc
jecxz
dec
fsubr
(bad)
adc
jbe
dec
adc
and
cmp
pop
das
add
add
(bad)
ja
pop
mov
jl
lock
fst
scas
in
dec
aas
test
add
test
and
das
jne
dec
sub
inc
add
adc
add
retf
enter
sbb
cmp
and
icebp
or
jae
sub
push
lahf
xchg
add
or
xor
inc
outs
ins
adc
in
mov
popf
out
(bad)
push
mov
cmp
sub
mov
cmp
aaa
sub
cwde
sub
fistp
sub
push
and
shr
or
rol
xor
push
sbb
fcom
add
clc
dec
adc
test
not
or
js
mov
pop
rcl
sub
je
popf
jns
adc
adc
(bad)
jbe
mov
mov
jne
xchg
inc
add
mov
imul
in
mov
clc
aam
test
and
test
xchg
push
add
push
inc
add
add
add
push
cs
(bad)
pop
outs
inc
jb
adc
push
push
enter
lods
dec
jmp
xor
and
xchg
inc
and
sbb
clc
ss
or
sbb
dec
adc
or
pushf
xlat
pop
mov
xchg
jmp
adc
jb
das
sbb
or
inc
mov
inc
cmp
je
mov
dec
aad
push
das
aam
paddsb
xchg
out
jmp
sbb
mov
lock
add
jl
add
xchg
sub
adc
popa
xor
xor
jno
aad
adc
je
mov
push
or
add
sub
add
xchg
aas
sbb
(bad)
mov
pusha
xadd
mov
mov
cmp
scas
sbb
sbb
es
xor
mov
mov
sub
dec
xor
add
lods
lods
add
sub
test
push
je
inc
sub
xchg
mov
ret
(bad)
push
clc
push
and
cmp
lds
inc
rcl
cmc
push
inc
add
and
xor
jle
xchg
push
or
(bad)
sub
sbb
dec
xor
sar
mov
add
push
mov
and
adc
mov
arpl
sub
int
cmps
and
stc
ret
ret
clc
dec
repz
lds
ds
(bad)
leave
repz
mov
es
out
fcom
ins
ss
int3
mov
sar
ins
rcl
pushf
out
in
inc
sar
outs
push
fwait
lods
sbb
rol
jg
js
clc
imul
sar
dec
mov
sbb
arpl
jle
rcl
sbb
mov
inc
outs
cdq
jecxz
pop
pop
pop
mov
daa
add
jg
imul
add
lock
jge
fld
popa
aas
mov
aaa
mov
lahf
mov
loop
adc
mov
push
push
sti
js
pop
fs
adc
rol
or
add
lea
mov
jle
push
dec
and
fsubr
enter
xor
in
inc
fmul
pop
dec
cmp
adc
mov
dec
and
fs
call
pop
cs
fadd
push
add
lfs
inc
fs
jb
xor
fwait
movs
in
and
fsub
adc
mov
or
dec
adc
sub
add
cmp
nop
adc
movs
(bad)
test
neg
ins
add
cli
add
mov
pusha
enter
loopne
ja
enter
enter
aaa
adc
sub
cli
jae
and
add
test
fld
iret
ds
and
add
cli
jnp
mov
loopne
cdq
add
loop
or
xchg
jae
push
loopne
retf
mov
movs
loopne
add
add
push
ret
push
or
test
cmp
imul
cmp
out
add
mov
jmp
jb
je
xchg
add
pcmpeqb
mov
not
cli
iret
inc
sahf
pusha
pusha
bound
cs
int
fldcw
xor
(bad)
sbb
out
scas
cmp
mov
or
sub
mov
enter
ret
mov
xacquire
aas
(bad)
cli
inc
add
dec
fcomp
jb
scas
jge
mov
or
add
dec
mov
jne
jmp
mov
pop
pop
inc
stc
in
dec
push
sub
shl
adc
mov
pop
mov
cmp
fcomp
fwait
xor
enter
adc
rcr
(bad)
ss
lea
mov
stos
stos
add
loop
jmp
add
shr
mov
adc
or
in
mov
in
cmp
jne
mov
mov
cs
jbe
mov
mov
sub
jg
push
call
mov
push
dec
ror
fs
mov
stc
add
(bad)
(bad)
ja
sbb
test
outs
jmp
adc
fidivr
cwde
jae
cmp
sbb
sbb
mov
imul
or
jmp
shr
mov
sub
sbb
or
or
inc
pushf
cmp
popa
mov
add
adc
xchg
call
mov
sub
loope
xor
call
or
ret
mov
test
test
adc
test
xor
sbb
sub
xchg
sbb
push
inc
fisttp
sub
mov
fcmovne
push
mov
movs
adc
loope
push
shl
add
add
push
add
out
fst
mov
mov
jmp
pop
push
xor
out
dec
add
inc
inc
dec
xor
push
pop
out
loopne
aam
ins
mov
jmp
sbb
mov
mov
xchg
test
mov
jae
clc
fld
push
stos
sub
or
data16
mov
mov
sub
mov
add
and
pop
and
mov
(bad)
imul
fisub
push
call
in
jg
aam
ds
adc
pop
mov
mov
cli
xor
adc
nop
push
push
and
pop
inc
add
sub
js
sub
push
push
test
mov
push
rol
sbb
je
inc
mov
and
fcom
(bad)
in
jo
sbb
jmp
rcl
adc
sbb
mov
xor
je
push
mov
sbb
pop
cmp
lea
push
jb
xchg
je
mov
sub
dec
je
les
jmp
xor
jmp
inc
shl
mov
lds
add
cwde
into
mov
sbb
mov
or
sbb
les
mov
xor
and
call
in
xchg
and
and
add
ss
cli
push
sbb
adc
inc
push
mov
cmps
and
pop
mov
sub
mov
scas
jne
scas
mov
jge
mov
clc
and
and
ret
sbb
lea
movs
cwde
mov
adc
mov
lock
pusha
xchg
mov
call
(bad)
in
inc
add
movs
add
lea
lea
aad
iret
push
in
cmp
fwait
mov
pop
test
call
ret
cs
and
or
(bad)
retf
nop
jmp
or
movs
mov
(bad)
(bad)
xchg
add
jne
in
fwait
push
adc
aas
(bad)
ret
adc
in
int3
inc
mov
push
xor
xor
(bad)
pusha
adc
xchg
push
push
or
mov
ror
fsubr
push
jle
lea
and
push
test
sbb
push
fcomp
nop
sub
inc
inc
fadd
ret
adc
sahf
(bad)
xor
and
push
nop
cmp
add
shr
or
pusha
adc
jae
inc
add
scas
push
adc
or
(bad)
mov
add
or
movs
sub
rcl
mov
test
pop
(bad)
mov
xor
movs
inc
mov
mov
inc
push
pop
cmp
jmp
sahf
into
xor
je
mov
lds
mov
shl
fcom
mov
or
out
sbb
mov
add
jne
js
mov
xchg
das
add
popf
xchg
push
sub
mov
adc
sub
dec
lock
dec
loope
mov
adc
cs
cli
lds
(bad)
jle
sub
mov
cmp
mov
or
mov
lahf
cmp
(bad)
fld
jecxz
add
push
mov
cmp
fimul
pop
add
stc
lar
add
cmp
cmp
cmp
cmp
or
or
cmp
cmp
shl
mov
dec
jne
mov
xchg
pushf
xor
add
inc
xor
cmc
mov
mul
data16
or
mov
inc
cs
pop
imul
mov
call
ret
xor
loop
js
not
xchg
and
clc
test
je
enter
and
inc
(bad)
jmp
xchg
jo
inc
dec
jne
push
push
inc
jb
(bad)
je
fadd
imul
and
outs
or
(bad)
adc
sahf
jmp
popf
jo
or
sbb
mov
jo
daa
adc
and
sbb
outs
nop
sub
and
mov
sti
or
pop
fcom
adc
xchg
dec
adc
stc
add
sub
mov
or
cld
out
lock
bsr
add
push
mov
add
pop
add
mov
out
cmp
fdiv
adc
cmp
inc
inc
ret
pop
jne
pop
pop
pop
xor
hlt
sub
nop
adc
pusha
mov
das
mov
jp
cli
or
lods
int
cld
icebp
inc
cld
test
fsub
pusha
inc
sbb
or
jmp
jge
xor
add
pop
jns
mov
mov
cwde
outs
je
inc
pop
push
inc
pop
shl
ret
push
add
add
pop
adc
rdtsc
push
xor
nop
neg
push
push
xor
jmp
sbb
les
movs
or
push
out
and
mov
sar
push
pushf
xchg
(bad)
pop
inc
in
popf
rcr
dec
pop
aad
in
cmp
retf
lods
pusha
sbb
jns
fcom
pusha
or
adc
sbb
mov
push
xchg
es
out
pusha
ror
adc
mov
bound
inc
cmp
loopne
push
or
or
jmp
mov
inc
jl
push
pop
and
add
xlat
add
dec
wbinvd
cmp
cmp
cwde
cmp
mov
adc
mov
or
sub
mov
push
dec
mov
inc
xchg
lock
or
and
ins
mov
add
cmp
inc
dec
les
lods
fimul
lock
into
aam
test
movs
sbb
pop
sub
jmp
pusha
inc
add
cmp
jg
push
mov
inc
dec
inc
mov
call
jnp
(bad)
mov
pop
test
sbb
jmp
cmp
jne
add
ficom
lds
push
(bad)
es
int3
adc
inc
ja
rol
dec
(bad)
es
enter
cmp
adc
(bad)
xchg
inc
push
mov
adc
dec
daa
inc
cmp
out
sub
mov
and
js
inc
sub
adc
mov
mov
adc
ds
inc
push
(bad)
pop
mov
and
cmp
mov
jmp
mov
icebp
pusha
sbb
pop
jmp
xchg
jle
jnp
jno
enter
jl
add
xchg
mov
jne
outs
fucomp
test
cmc
jg
pop
push
xchg
call
mov
jmp
xor
leave
dec
aad
cmp
mov
outs
inc
pop
into
jge
mov
inc
or
sub
xlat
adc
retf
adc
adc
dec
push
push
mov
cmp
inc
rcl
test
sahf
push
cs
loopne
push
pusha
aam
inc
add
lahf
fist
inc
mov
adc
add
add
mov
jne
call
movs
lock
inc
xor
cmp
dec
rol
pop
mov
shr
xor
pop
rol
icebp
add
xor
dec
ret
inc
dec
aad
test
mov
das
xor
(bad)
xchg
neg
adc
mov
ret
push
sahf
adc
mov
mov
scas
movs
adc
cmp
(bad)
mov
cld
xor
cmp
je
rol
jb
pop
(bad)
pop
imul
xchg
mov
es
sub
fcom
stos
jle
mov
bound
je
push
add
mov
push
cmp
mov
push
nop
das
mov
fisub
and
mov
push
cdq
inc
sbb
push
sub
mov
mov
cmp
mov
or
ds
xlat
and
cmc
jne
push
icebp
xor
mov
loope
pop
sti
adc
xor
pop
sbb
inc
arpl
xor
mov
dec
cmp
dec
mov
cmp
sub
out
sub
mov
mov
aam
xlat
xchg
cmp
(bad)
pop
mov
in
ror
add
mov
push
pushf
imul
push
push
cmp
inc
inc
inc
pop
mov
test
or
adc
je
sbb
outs
adc
es
cmp
movs
inc
jo
iret
push
sbb
addr16
nop
and
pop
push
ins
pop
inc
jne
mov
(bad)
adc
mov
push
es
adc
bnd
lea
cmps
(bad)
jp
sub
pop
xchg
mov
mov
or
mov
xchg
retf
in
lods
clc
hlt
lock
mov
loopne
cs
retf
(bad)
aam
int3
retf
mov
ins
pop
test
fs
add
add
(bad)
pop
test
jmp
push
popa
fisttp
pop
pop
xchg
push
popf
sub
mov
loope
jmp
daa
add
sahf
mov
fld
or
lock
fwait
lods
movs
cmp
fld
out
lds
mov
or
test
lea
int3
and
mov
push
mov
lock
or
into
test
mov
inc
and
mov
xlat
adc
or
les
sbb
jge
push
and
or
jb
jbe
xor
ret
add
fwait
shl
mov
sahf
xor
push
cmp
pushf
sub
lock
test
add
mov
mov
ins
lock
pop
xor
sahf
enter
adc
inc
int3
push
inc
rcr
and
mov
mov
lods
push
aam
pop
xchg
enter
inc
or
pusha
fmul
mov
xor
pushf
enter
push
fistp
out
adc
xor
inc
add
mov
jmp
push
and
ret
repnz
pop
shl
xor
xor
inc
jo
bound
retf
ficom
mov
xor
push
add
out
das
leave
pop
sbb
cld
arpl
and
fidivr
or
shl
retf
mov
jmp
dec
add
sub
add
mov
cli
jge
mov
jle
inc
sahf
pushf
jp
fcom
retf
mov
xor
ja
cmp
jbe
lock
mov
sub
adc
jae
xchg
enter
bound
test
das
push
nop
push
mov
lods
xchg
xor
cmp
cdq
loope
inc
and
xor
pop
test
xor
(bad)
icebp
mov
data16
popa
jbe
push
jl
pop
cs
cmp
dec
mov
push
mov
or
loopne
mov
xchg
popf
cdq
loope
adc
(bad)
call
retf
in
dec
jo
adc
jnp
loopne
or
in
or
ret
jmp
call
lea
sub
rol
xchg
and
or
mov
gs
or
mov
inc
xchg
rol
add
xlat
(bad)
aam
push
lock
jmp
clc
jo
les
sub
and
sbb
jo
jecxz
out
and
in
pop
jns
leave
loope
mov
or
ror
xchg
or
add
pop
xor
dec
inc
mov
mov
xor
ja
push
sub
xor
stos
adc
adc
mov
(bad)
mov
xor
std
loopne
xchg
pushf
mov
mov
adc
std
jne
cmp
jns
or
mov
push
mov
push
cmp
add
push
lock
(bad)
or
push
fbstp
(bad)
pop
jne
cmp
sub
hlt
inc
mov
lahf
sub
cmp
mov
je
add
test
pop
pop
pop
mov
or
(bad)
call
sub
sub
test
add
cmp
out
mov
inc
sub
sbb
dec
xor
aaa
jmp
inc
stos
inc
sbb
fisub
ds
test
push
add
(bad)
and
xchg
push
adc
push
(bad)
repz
push
jne
jmp
loopne
pop
push
jmp
or
(bad)
mov
and
lea
stos
and
inc
movs
(bad)
stos
pop
mov
je
not
pop
sbb
add
push
dec
out
cdq
add
leave
xchg
inc
loopne
jl
or
cmp
je
inc
adc
inc
sub
dec
jae
add
fs
add
add
mov
clc
push
adc
xor
inc
cmps
mov
jmp
mov
mov
mov
inc
inc
cmp
inc
adc
sub
xor
dec
(bad)
sub
and
icebp
jmp
rcl
adc
call
and
push
inc
aam
dec
fwait
and
inc
cld
ret
or
push
push
enter
popf
popa
inc
push
push
(bad)
mov
inc
push
jmp
jbe
test
cmp
xor
retf
inc
mov
mov
or
push
xor
sub
pop
add
rol
mov
aad
enter
inc
mov
or
xor
or
pop
pop
test
leave
cmp
push
lods
mov
sbb
test
pop
(bad)
pop
cld
sub
sub
ret
lock
mov
out
adc
mov
push
int3
add
pop
add
aad
sbb
loopne
sub
mov
or
ficom
cmp
das
add
jbe
lock
inc
xor
sub
repnz
jbe
mov
add
push
div
loop
in
push
pusha
cmp
xor
ss
arpl
xchg
es
or
push
inc
stos
mov
pop
and
popa
int
jae
dec
outs
jmp
inc
adc
dec
adc
stos
push
dec
js
stos
add
cmp
sub
pop
test
call
and
and
sbb
or
or
mov
and
idiv
and
je
add
sbb
mov
shr
adc
push
mov
fisttp
or
(bad)
fnsave
cmp
(bad)
add
push
adc
mov
test
xor
and
hlt
lock
pop
mov
jo
ja
loopne
rcl
cmp
mov
jmp
mov
js
(bad)
ja
call
inc
repnz
mov
dec
punpckhwd
xchg
jmp
push
dec
or
ficomp
test
shr
shl
jne
rol
mov
sbb
out
cmps
mov
or
or
push
jl
add
jnp
leave
rdmsr
cmp
add
sbb
add
(bad)
sbb
mov
push
cdq
ror
fisttp
dec
add
mov
test
adc
rol
adc
or
adc
into
les
add
push
ds
loop
jecxz
xor
push
sub
xor
ja
rcr
rol
jns
xchg
ficomp
nop
scas
and
je
push
test
inc
xchg
in
pop
mov
sbb
in
fstp
fnstsw
push
lea
mov
shl
enter
add
fmulp
jb
jo
cs
ins
pop
xchg
nop
mov
ret
sub
push
inc
aam
xor
pop
fstp
ror
sub
(bad)
hlt
ds
jge
cs
push
pop
and
pop
pshufw
vmptrst
aam
sbb
push
push
sar
xor
sub
mov
xor
dec
pop
inc
mov
xor
ins
pop
jbe
dec
inc
fsub
jb
loopne
or
push
dec
(bad)
dec
jl
and
repnz
jp
xchg
xchg
sub
ror
lock
add
xor
pop
cmps
and
ret
loopne
adc
mov
dec
shl
dec
dec
loopne
out
add
ins
movs
and
push
gs
aas
jmp
pusha
mov
cmp
mov
xchg
xchg
cmp
add
mov
sub
mov
ins
mov
ficomp
jo
jmp
push
add
lods
rcr
aam
xor
sub
sbb
push
stos
test
adc
and
jmp
sar
dec
sub
xor
pop
div
cdq
sti
scas
nop
adc
jae
arpl
scas
push
imul
mov
fistp
pusha
(bad)
loopne
pop
adc
test
es
push
add
inc
ficom
cmp
in
jp
test
test
push
push
and
cmps
sti
xchg
push
mov
push
mov
test
lods
scas
pop
sbb
add
loopne
fcomp
cdq
loopne
inc
xlat
push
js
xor
mov
lahf
into
push
mov
add
xchg
scas
pusha
loope
(bad)
jbe
adc
mov
sahf
or
jo
dec
xor
ret
out
test
cmovs
mov
push
dec
mov
mov
sbb
xchg
and
or
rep
jmp
popa
and
add
retf
das
shl
add
enter
stc
ds
aam
mov
call
push
and
neg
or
mov
mov
or
scas
adc
pop
mov
sub
int3
xchg
dec
add
mov
dec
inc
add
add
mov
cwde
push
cmp
popa
push
mov
in
inc
(bad)
sahf
out
sahf
in
call
sahf
out
lock
hlt
clc
clc
fstp
lea
clc
fnop
cmp
jmp
and
lods
sbb
mov
ret
nop
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
(bad)
cld
out
pusha
cld
neg
adc
inc
jno
lea
xchg
daa
stc
sub
fld
nop
je
cwde
push
shl
jl
dec
mov
mov
add
test
add
nop
dec
dec
addr16
cmps
pop
add
jmp
mov
or
push
and
jns
jns
xor
inc
push
cld
aaa
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
xor
jns
add
jo
mov
jnp
js
mov
push
push
add
pop
(bad)
sub
dec
daa
ja
or
mov
add
adc
imul
inc
jle
neg
neg
sbb
mov
mov
ss
cmp
push
jne
dec
push
jg
jnp
push
adc
sar
into
jl
loopne
xor
jmp
(bad)
jmp
or
jne
lock
pop
push
mov
shl
cmp
push
pop
dec
js
mov
cwde
stos
dec
jne
fsub
sbb
pop
ret
and
into
mov
mov
fisubr
cmp
adc
stc
pop
jns
retf
stos
enter
mov
mov
mov
fadd
int3
out
and
mov
into
rol
pop
loopne
or
pop
shl
fnclex
arpl
sub
or
fs
cvttsd2si
int3
pop
shr
aaa
adc
add
cmp
pop
data16
push
clc
jg
xchg
fbstp
and
fld
fldcw
rcl
ins
dec
xor
push
cmp
dec
shl
test
jns
fstp
icebp
adc
rcl
adc
mov
test
fiadd
adc
ret
mov
sbb
mov
xor
sbb
cmp
inc
imul
pop
cmp
fadd
inc
push
sbb
dec
mov
mov
add
pop
push
jmp
test
or
idiv
mov
retf
je
rep
mov
dec
inc
cdq
cmp
rcr
xchg
mov
mov
add
sbb
out
push
push
test
test
je
lock
mov
jge
or
pop
sbb
push
dec
mov
add
data16
test
or
and
adc
mov
les
bound
inc
enter
mov
test
inc
cmp
cmp
or
add
es
cmc
ja
dec
rcr
jp
int
shl
cmp
pop
push
jl
lock
push
or
sbb
and
pop
lock
jmp
push
mov
js
jge
cmp
je
xor
aaa
pop
cmp
mov
push
es
or
fcmove
cmp
add
cmp
jne
lods
push
call
sub
mov
xor
dec
call
add
inc
xor
jo
shl
pop
and
add
das
xlat
ins
xor
xchg
sub
add
push
nop
pop
iret
xchg
or
test
je
sbb
jmp
add
in
or
test
or
push
lock
imul
leave
dec
ret
cmc
sub
jne
xor
adc
inc
(bad)
lahf
fs
or
inc
adc
adc
icebp
push
out
(bad)
add
sbb
jne
and
in
frstor
push
sbb
mov
movs
mov
jne
ins
mov
sbb
add
imul
or
call
jo
je
add
cli
or
(bad)
aam
mov
add
repz
mov
icebp
leave
cmp
adc
into
fidiv
pop
push
shr
add
bound
adc
std
mov
xchg
xchg
pop
ins
push
or
jg
jo
jne
movzx
popa
or
les
sub
ja
and
pop
dec
imul
sub
inc
inc
inc
inc
test
xor
data16
add
ja
jmp
jb
lock
fldcw
imul
mov
cmp
sub
shl
int
and
pop
lea
dec
dec
sub
jno
test
loope
pop
popf
add
jmp
fs
fstp
dec
add
pop
xor
sub
push
into
sbb
ret
sub
rol
lods
push
inc
push
xor
add
dec
jmp
ret
inc
mov
loope
pop
je
pop
jbe
adc
je
pop
or
push
mov
sub
adc
adc
adc
je
mov
clc
out
sbb
shr
fidiv
retf
aas
cmp
lock
and
pop
cmp
or
pop
stc
dec
ins
call
fbstp
lods
sub
cmp
dec
sub
xchg
jb
cmp
shl
loopne
(bad)
mov
inc
inc
data16
dec
jne
xor
mov
jle
adc
pop
mov
mov
adc
pop
shl
aaa
push
add
jb
test
pop
pop
mov
(bad)
fadd
mov
mov
push
ret
test
mov
cld
push
push
mov
pop
addr16
pusha
jbe
or
ins
ss
loope
rcr
pop
not
mov
push
fld
xor
adc
stos
cdq
in
test
clc
inc
push
inc
adc
pop
xchg
xor
or
and
add
or
add
sub
or
add
int3
push
dec
inc
nop
add
mov
mov
sahf
pop
jmp
repnz
jae
movs
pop
fwait
cld
ja
jae
in
or
ins
mov
std
das
daa
test
inc
inc
sbb
mov
or
xchg
xchg
mov
xchg
lods
test
sub
mov
mov
data16
mov
lea
gs
dec
loopne
pop
lea
mov
sbb
dec
or
push
sub
add
gs
sub
cwde
push
in
ficom
or
and
mov
ror
leave
sbb
inc
shl
movs
fnstsw
mov
mov
sbb
mov
sbb
or
xor
(bad)
adc
mov
test
sbb
in
push
and
and
imul
lods
inc
pop
add
and
jb
out
xor
jl
fimul
mov
std
ret
and
dec
cmp
pop
jae
push
sbb
mov
das
xchg
jbe
(bad)
jb
push
ret
inc
jno
and
fild
sub
sub
sti
cmp
clc
xchg
ja
sub
mov
or
sub
shr
add
jge
add
and
sub
push
scas
push
inc
dec
idiv
sbb
sbb
add
adc
sbb
enter
clc
cld
push
mov
sbb
adc
pop
dec
push
xchg
and
hlt
jmp
data16
ror
clc
pop
push
jne
cmp
je
fbstp
inc
dec
sub
pop
sub
dec
pop
rol
xor
dec
or
cwde
bound
or
(bad)
shl
xor
dec
add
aam
out
and
jmp
dec
(bad)
psubd
mov
pusha
inc
cmp
sub
xchg
popa
cmps
or
jmp
popw
mov
sub
lods
push
les
add
aam
add
pop
push
adc
data16
jb
adc
adc
or
jl
sub
dec
je
inc
mov
scas
stos
test
push
push
lds
ror
ror
sbb
dec
or
jo
xor
sub
cmc
or
retf
mov
fiadd
ins
sub
outs
pop
and
addr16
jl
mulps
icebp
adc
and
or
(bad)
add
jo
out
inc
or
jl
cli
xchg
clc
and
or
dec
call
dec
in
lods
add
mov
pop
or
mov
cmps
jge
dec
push
daa
dec
or
dec
out
leave
mov
stos
pop
jb
push
mov
mov
or
and
les
jb
rcl
out
stos
enter
push
pop
cmp
push
rol
xchg
movs
je
mov
jl
sahf
mov
pop
mov
cmp
cmp
loopne
stc
lock
inc
fdiv
loopne
inc
dec
inc
mov
inc
inc
pop
sub
outs
adc
push
push
scas
dec
and
(bad)
dec
xor
pop
and
pop
jmp
stos
aaa
test
sub
cld
sbb
dec
pop
mov
int3
push
xlat
movs
or
adc
ja
xor
shr
push
pop
xor
jmp
movs
fld
repz
adc
or
int3
int3
movs
adc
push
shl
mov
mov
iret
or
je
sub
mov
ror
adc
sbb
je
movs
cmp
imul
inc
inc
or
in
(bad)
add
jecxz
cld
or
cmp
adc
test
in
or
cmp
lock
or
push
out
pushaw
xor
xor
mov
iret
sub
lahf
add
add
xchg
cwde
(bad)
repnz
xchg
jbe
push
xor
or
nop
push
jmp
movs
mov
inc
pop
jno
nop
push
push
inc
xchg
bsf
mov
jb
js
jbe
pop
and
and
addr16
jns
xor
lods
push
gs
dec
cmp
call
fnstsw
xchg
push
fwait
jo
dec
imul
and
jg
or
sub
stc
or
je
test
fxch
fyl2x
adc
jno
mov
shl
adc
sar
pop
not
jmp
test
sbb
push
and
jg
vpsubusb
sub
and
(bad)
int3
out
idiv
sbb
mov
arpl
inc
or
jle
pop
dec
jo
mov
dec
adc
jo
cmc
mov
push
adc
in
(bad)
or
add
dec
rcr
ins
loopne
or
xor
lods
fadd
loopne
dec
daa
cld
in
mov
js
imul
add
test
or
or
dec
aad
jbe
lods
push
in
add
push
adc
jmp
add
cmp
(bad)
push
ficomp
cmp
es
mov
dec
aaa
dec
sbb
retf
xor
inc
dec
mov
fisub
push
add
or
sbb
pop
sahf
in
stc
jmp
les
jmp
pop
add
div
int3
dec
loope
dec
cmp
cmp
ret
jo
into
dec
pop
jne
ret
fisub
dec
xor
mov
sbb
sub
mov
push
jbe
(bad)
ja
cmp
movs
and
pusha
push
mov
inc
pusha
sub
mov
mov
pop
lock
inc
aaa
ja
or
pop
or
dec
mov
push
jo
cmc
and
push
add
cmp
add
inc
adc
rol
pop
jle
and
push
inc
jg
push
mov
enter
jbe
sub
inc
dec
sar
add
mov
pop
mov
mov
and
sbb
popa
jbe
test
nop
out
or
cmp
and
dec
repz
mov
jge
mov
sub
mov
or
aaa
xchg
mov
pop
mov
and
enter
pop
pop
sbb
sbb
jle
test
pop
dec
jno
ret
and
int3
push
cmp
stos
push
or
out
jbe
cmp
xor
mov
mov
adc
xchg
int3
in
dec
jmp
cmp
mov
adc
jns
gs
pop
cmps
mov
adc
adc
pop
ret
push
jl
ret
or
or
adc
icebp
fistp
ss
mov
mov
inc
inc
cmp
xor
ja
gs
dec
cmp
outs
out
jns
mov
push
ret
jne
dec
ja
or
mov
pop
inc
jle
cmc
add
xor
sub
or
dec
test
(bad)
jno
jmp
add
ins
jns
daa
mov
mov
(bad)
je
jg
push
and
in
dec
jne
and
inc
and
add
xlat
jmp
ror
inc
in
add
ret
imul
mov
cwde
pop
ss
sub
imul
in
or
fs
mov
out
lahf
mov
(bad)
(bad)
(bad)
jle
push
add
xor
xor
mov
rol
mov
xor
sar
cmp
les
out
faddp
ins
ins
jbe
sbb
dec
arpl
mov
jnp
add
pop
(bad)
jmp
imul
add
xchg
enter
sub
add
dec
aas
test
adc
fcom
sub
sub
push
add
push
aas
add
xchg
and
xchg
(bad)
or
jbe
(bad)
adc
enter
sub
mov
hlt
jp
ret
gs
or
adc
jp
js
pop
mov
push
test
add
add
pop
or
sub
add
arpl
xchg
loopne
xor
lock
clc
in
mov
add
cmp
je
test
inc
adc
ss
or
xor
inc
mov
test
das
cmp
jne
repz
test
sbb
xor
xor
inc
repnz
jne
or
jmp
pop
fstp
aaa
cmps
loopne
push
leave
pop
jbe
sbb
mov
xor
outs
jo
pusha
cdq
mov
add
popa
inc
sub
add
test
cmp
out
add
stc
cmp
in
adc
jnp
and
sub
(bad)
pop
push
adc
sub
aam
add
sub
idiv
xor
xor
and
scas
sub
les
jl
sti
push
jbe
cmp
ret
movs
sub
dec
lock
add
fild
aam
stos
pop
clc
push
or
cmp
xchg
push
aad
adc
or
push
movs
sub
add
inc
call
mov
ja
add
fnstenv
cmp
jmp
xor
movsx
in
(bad)
jge
inc
xchg
fs
int3
inc
sbb
or
popa
aam
jg
mov
test
sbb
cmps
xchg
jmp
jmp
cmps
bound
or
add
adc
push
lods
push
jbe
inc
(bad)
jmp
inc
push
cwde
push
mov
adc
shl
dec
fldenv
or
or
inc
or
hlt
movs
sbb
lock
fcom
scas
ss
add
jmp
adc
add
sub
cli
inc
cwde
push
lock
jl
or
sbb
dec
push
gs
rcl
mov
sbb
daa
inc
push
mov
rol
adc
jge
cmp
ret
or
adc
retf
jle
push
add
ret
cmp
and
or
adc
add
pop
dec
nop
jl
or
push
push
lods
xchg
loop
pusha
sub
push
or
pushf
push
pop
or
pop
enter
inc
mov
mov
cmp
es
push
sbb
xchg
pop
and
movs
sbb
movs
nop
cmps
movs
sbb
fwait
or
out
fimul
push
jns
mov
(bad)
enter
into
fdivr
inc
sbb
inc
xor
repz
inc
pop
nop
push
push
js
mov
mov
pop
and
inc
sbb
sahf
out
mov
or
sbb
add
ficomp
pop
push
push
test
push
lahf
rcl
enter
xchg
adc
cld
mul
mov
fs
test
adc
sbb
jmp
aaa
movs
xor
or
dec
call
mov
push
jle
fcomp
and
add
cdq
enter
mov
add
pop
loopne
loopne
inc
fimul
and
sbb
(bad)
cmp
mov
mov
daa
jecxz
cmps
mov
xor
mov
mov
push
rol
mov
pop
repnz
inc
pop
jmp
dec
sbb
add
sti
test
jo
sub
add
cs
les
add
push
sub
push
in
push
sbb
cdq
inc
push
and
or
add
outs
inc
push
mov
clc
jmp
dec
stc
push
add
sub
clc
or
hlt
or
jno
(bad)
mov
push
dec
mov
jo
ja
test
jge
sub
push
jmp
mov
inc
call
loope
jo
fsubp
push
(bad)
js
nop
hlt
ss
out
arpl
sti
data16
adc
add
iret
test
je
sub
pop
ins
inc
sbb
ret
shl
push
adc
xor
pusha
div
retf
cmp
icebp
mov
inc
iret
xor
add
loope
xchg
ffree
dec
jne
and
or
out
(bad)
shl
cmp
ss
sar
cmp
je
test
je
jb
adc
fadd
aam
xchg
pop
addr16
mov
or
rol
test
push
sub
mov
sub
xchg
mov
sar
push
push
cld
inc
loopne
or
jl
or
push
push
mov
xor
inc
outs
jle
retf
pop
inc
inc
jno
sbb
inc
scas
(bad)
add
in
adc
fs
inc
out
add
(bad)
push
sbb
add
fnstsw
jmp
adc
jne
sub
fmul
xlat
cs
adc
(bad)
aaa
call
test
sub
call
and
pop
cmp
je
cmp
and
test
fdiv
pop
jne
pusha
rcr
jl
add
add
lds
mov
jl
retf
inc
adc
dec
test
je
retf
sub
jmp
mul
pushf
jecxz
rol
je
mov
sub
cmp
imul
add
pusha
jae
retf
push
add
bound
push
jb
sahf
mov
mov
add
xchg
add
jne
movs
dec
test
jne
sbb
and
icebp
pop
test
adc
dec
mov
fldenv
or
test
mov
bound
test
and
loop
in
jno
cld
pop
ja
les
jne
jbe
or
mov
or
ds
adc
pop
bound
jnp
(bad)
xor
add
mov
add
ret
xchg
xor
repnz
push
mov
gs
and
ret
loop
and
jmp
aaa
ret
outs
push
cmp
cmp
mov
inc
dec
jne
push
mov
dec
and
jb
retf
sbb
mov
sbb
jmp
add
jge
mov
cmp
bound
retf
or
pop
repnz
jae
loopne
push
mov
or
dec
sub
shl
mov
dec
addr16
out
add
add
adc
dec
add
add
call
pop
and
adc
push
imul
dec
sub
ret
adc
std
and
xchg
inc
cld
pop
retf
inc
and
add
clc
mov
push
lea
loopne
pop
inc
add
xor
fwait
add
loope
add
stos
leave
lock
sub
fistp
push
ds
and
inc
xor
test
mov
adc
mov
jnp
mov
inc
or
and
fcmovnu
add
pop
push
sub
inc
hlt
gs
mov
imul
mov
add
clc
outs
test
push
cld
je
lea
je
stos
mov
pop
xchg
ror
xlat
inc
arpl
cmp
pop
sar
add
push
adc
mov
jne
cmp
or
sbb
or
ret
(bad)
adc
cmp
sub
cmp
adc
and
jae
pusha
add
dec
push
es
jne
scas
or
sub
push
push
mov
cmp
mov
test
pop
jo
xor
cmp
test
int3
jmp
(bad)
shl
retf
mov
mov
push
add
popf
cmp
xor
inc
mov
push
or
mov
call
mov
push
outs
adc
idiv
and
pop
or
push
sbb
or
push
jecxz
das
or
enter
in
add
je
cmp
xchg
shl
xchg
fld
mov
mov
movs
xchg
shr
sbb
test
add
jg
mov
(bad)
scas
ds
movsx
sbb
imul
gs
popf
shr
ins
jle
cmp
jl
shl
dec
or
add
xor
mov
mov
push
ds
cmp
into
add
icebp
imul
inc
sbb
add
sub
mov
or
jmp
call
pop
xor
inc
lock
inc
add
push
aas
add
jne
mov
or
mov
cmp
cmps
push
and
and
js
cmp
cld
jnp
mov
retf
jecxz
push
jp
mov
test
sub
push
push
(bad)
ror
xchg
pushf
and
or
or
fimul
or
ret
sub
sub
aaa
add
inc
sub
xor
mov
nop
rcl
or
jno
imul
aas
add
or
sbb
dec
dec
mov
jo
jle
mov
fiadd
in
arpl
xor
push
push
inc
sbb
lods
jbe
mov
dec
sbb
push
sbb
(bad)
fsubr
scas
add
adc
clc
cmp
jl
or
mov
cli
jecxz
xchg
inc
call
adc
cmp
loopne
mov
push
jne
and
(bad)
and
rol
and
loopne
push
fdivr
add
xor
xor
fsubr
inc
pop
mov
mov
mov
loope
fdivr
je
sub
and
sbb
push
inc
fucom
leave
(bad)
in
(bad)
inc
pop
push
nop
bound
cmp
mov
dec
or
bound
mov
inc
adc
div
dec
mov
jle
jbe
cmp
push
mov
mov
loopne
lahf
aam
add
outs
pusha
in
push
add
(bad)
aam
or
popa
sbb
cmps
jmp
sbb
sbb
das
and
aam
push
pushf
rol
repz
cmp
adc
fwait
push
cmp
hlt
pop
cmp
int3
push
push
inc
ja
mov
(bad)
push
cs
outs
in
add
mov
dec
movs
shl
cmps
add
dec
mov
inc
or
sub
push
or
dec
push
pop
or
retf
test
mov
jle
jb
add
addr16
mov
in
outs
cwde
outs
ja
rcr
arpl
and
pop
fcomp
fcmove
sti
sub
jmp
std
mov
retf
adc
test
inc
jb
pop
je
(bad)
ret
aaa
pop
push
or
jo
ret
mov
shr
pushf
cmp
mov
ja
popa
xchg
je
mov
fadd
mov
add
sub
inc
adc
pop
mov
sub
shr
dec
lea
sub
pop
stos
loope
push
xor
sahf
pop
call
or
pop
lea
sub
cmp
lea
ins
ins
add
push
push
shl
adc
jmp
fcom
jmp
xor
xor
icebp
gs
ins
je
bound
pop
and
(bad)
sbb
sub
add
cdq
jle
add
push
and
mov
aaa
aas
push
jmp
mov
mov
hlt
inc
pushf
push
pop
dec
or
sbb
sub
push
les
sub
(bad)
pop
adc
or
fdiv
jle
fidivr
in
aas
sbb
lods
adc
pop
je
pop
(bad)
scas
and
xchg
scas
mov
or
ins
aaa
into
add
add
stc
or
adc
nop
test
jb
fdivr
(bad)
div
jae
push
cmp
jl
sahf
add
call
inc
shl
pushf
test
outs
je
pop
lock
jne
clc
cld
mov
xor
fist
jl
xor
mov
jb
mov
add
nop
mov
sub
mov
or
fisttp
inc
push
mov
or
sub
stos
ins
lods
scas
mov
retf
add
data16
out
mov
dec
xchg
push
adc
retf
adc
sbb
adc
add
mov
mov
mov
or
test
pop
fcomi
jne
frstor
fcmovnbe
mov
ss
rcl
xchg
mov
add
dec
xor
fisttp
mov
test
pop
pop
jle
xchg
jecxz
xor
int3
pop
repz
les
call
mov
jl
lahf
xchg
mov
paddq
das
jno
mov
hlt
(bad)
push
mov
sbb
enter
jg
add
xchg
jbe
and
aas
jg
ins
bound
out
(bad)
push
idiv
ss
das
loopne
cmp
pop
daa
test
jl
dec
call
xor
pop
and
jle
push
xor
call
sbb
ret
add
inc
jg
dec
mov
call
jmp
pop
hlt
popa
jne
repz
out
js
add
or
or
pop
pop
stos
nop
add
mov
ins
pop
dec
sub
clc
retf
and
or
std
jb
test
pop
xchg
das
cmp
setns
add
sub
cmp
or
shr
or
inc
and
outs
add
sub
pusha
adc
lock
or
add
inc
retf
stos
pop
gs
mov
or
lods
adc
or
les
mov
or
arpl
or
mov
je
cwde
pop
mov
adc
xlat
je
cmp
loopne
cli
es
adc
shl
test
xlat
daa
xchg
test
fsub
cmps
and
adc
pop
jne
lods
push
jmp
inc
iret
dec
mov
(bad)
sbb
loop
cmp
loopne
call
sub
cmp
pusha
push
sbb
or
mov
ficom
sbb
imul
jmp
das
xor
add
imul
shr
cdq
jp
pop
mov
xchg
xchg
jnp
out
dec
and
pop
push
add
inc
xor
add
cmp
sbb
inc
xchg
mov
sbb
jae
sub
push
mov
nop
sbb
xlat
cld
shl
xor
mov
mov
fistp
sub
data16
cmp
sub
out
scas
mov
sbb
inc
adc
or
ins
push
fsubrp
pop
jnp
aaa
or
push
push
loop
mov
xchg
cmp
lods
mov
cwde
xor
sar
sbb
in
and
and
mov
movs
sti
add
or
push
cld
push
jo
jle
sahf
mov
add
and
sar
adc
pop
xor
test
pop
ins
and
push
call
pop
mov
dec
mov
push
push
movs
clc
loope
pusha
dec
inc
call
cmp
and
idiv
push
pop
mov
les
popa
xchg
loope
movs
push
jmp
das
xor
popf
mov
push
jnp
lahf
ret
mov
mov
xor
add
movs
dec
xor
dec
rol
jmp
rcr
add
nop
sub
cmp
nop
add
inc
dec
pop
cmp
cmp
push
mov
push
adc
ret
repnz
(bad)
jno
mov
and
(bad)
pop
iret
ins
and
imul
cmp
movs
adc
cwde
dec
jne
mov
mov
es
dec
cmc
mov
js
add
pop
pop
pop
pusha
cld
lock
or
cmp
cmps
stos
fwait
mul
adc
mov
pop
rcr
outs
and
add
pop
out
pop
ret
inc
aaa
cdq
mov
push
pop
push
fwait
mov
or
add
in
out
jns
jae
scas
sbb
add
gs
inc
cmps
outs
dec
mov
push
xlat
(bad)
shl
or
popf
and
add
cmc
push
inc
mov
jmp
ja
int3
idiv
xor
and
fwait
popf
adc
or
inc
mov
es
dec
cmp
pusha
leave
ret
aas
ins
gs
or
stos
jmp
dec
pop
xor
xchg
inc
xchg
dec
xor
ret
pop
iret
pop
pop
sbb
movs
inc
out
imul
js
push
inc
mov
push
xchg
sbb
ds
adc
add
jl
push
nop
and
push
xchg
sub
adc
movs
fcomp
loop
inc
xchg
retf
xor
adc
jmp
inc
push
mov
add
sbb
ss
ins
and
jmp
add
and
fstp
es
jmp
jne
mov
add
pop
pop
or
clc
cmps
jno
mov
retf
and
adc
sbb
retf
out
iret
cmp
inc
or
out
retf
retf
add
add
pop
(bad)
mov
xor
mov
test
int3
sar
out
inc
pushf
add
sar
sar
fcomip
(bad)
mov
in
fdivr
int
cmp
jo
xchg
sar
lea
test
shl
movs
xchg
es
add
jmp
push
sbb
in
pop
jge
mov
inc
or
adc
push
clc
dec
add
jmp
adc
jmp
fs
sub
int3
lds
cdq
fisubr
lods
es
addr16
scas
sub
and
inc
popa
out
push
lea
enter
mov
inc
shr
jecxz
mov
sub
jge
test
cmps
jb
dec
mov
sti
and
cmp
or
out
dec
mov
or
xor
pop
and
push
daa
mul
add
and
or
mov
shr
xchg
xor
enter
mov
jecxz
add
add
dec
inc
mov
jb
or
inc
xor
dec
pop
jmp
nop
pop
ror
jmp
rol
cmp
sbb
and
jne
or
cmp
and
or
inc
inc
aam
test
sub
add
push
xor
ror
fst
nop
sbb
shr
add
xchg
into
fild
(bad)
sbb
movs
cmp
add
bnd
into
mov
dec
add
mov
das
jle
loop
push
test
cmp
fs
inc
loope
mov
push
lea
push
dec
aas
bound
or
adc
and
shr
lods
das
or
and
icebp
and
xor
mov
stos
or
adc
or
pop
(bad)
(bad)
cmp
inc
jl
fisttp
retf
iret
or
push
push
aas
out
jo
cmc
jne
xor
push
mov
pop
jne
arpl
mov
sbb
pop
or
jl
xor
cmp
test
outs
push
ins
jmp
icebp
add
nop
push
or
pop
adc
mov
inc
inc
or
dec
sub
inc
in
scas
push
lea
mov
push
xor
sub
sub
dec
inc
sbb
xchg
add
in
mov
add
pop
fsubr
inc
dec
and
mov
or
jmp
or
or
jmp
lahf
xor
call
fdiv
mov
sahf
dec
mov
sub
push
inc
jb
lods
movs
sub
shr
jmp
mov
lods
cmps
(bad)
sub
cld
ror
mov
imul
lahf
fisttp
ror
test
xchg
jne
push
xor
mov
cmp
cmp
test
or
cmp
jbe
push
mov
sar
pop
idiv
dec
mov
test
test
data16
lea
cmp
dec
not
and
dec
jne
add
sbb
out
arpl
dec
dec
loopne
pushf
mov
pop
shl
dec
pop
adc
mov
stos
cld
add
pop
and
push
shr
ins
shr
out
xlat
sub
pop
clc
and
pop
hlt
(bad)
mov
jne
and
sbb
add
sti
add
pushf
dec
pop
cmp
jbe
cmp
mov
clc
imul
and
cmp
sub
pop
xor
sbb
mov
cld
shr
not
and
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
gs
inc
xor
int3
pop
add
and
xor
add
push
pop
xchg
mov
cmp
ror
sub
out
pop
dec
or
adc
mov
ud0
mov
inc
mov
xor
clc
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
mov
not
(bad)
ret
cmp
test
shl
sbb
adc
fadd
cmp
and
inc
gs
mov
push
lsl
scas
jp
push
call
aas
or
mov
push
or
std
cmp
sub
dec
inc
adc
fwait
and
jns
dec
into
add
and
mov
gs
jo
mov
shl
mov
adc
push
leave
cmp
jp
mov
sub
js
in
pop
rol
lea
lahf
jle
dec
daa
(bad)
adc
add
push
pushf
ins
or
or
mov
cmp
outs
mov
inc
jb
call
adc
push
lahf
cwd
into
fnstsw
jmp
cmc
imul
push
inc
stos
pop
ret
je
push
and
sbb
mov
adc
mul
cwde
or
or
sbb
pop
hlt
fiadd
sbb
pop
sar
and
inc
xchg
jno
stos
jl
dec
mov
mov
rol
movs
cli
inc
clc
pop
mov
add
dec
jne
add
sti
add
adc
jns
push
mov
xor
lea
add
inc
ret
sbb
shl
inc
dec
clc
inc
nop
sub
adc
sub
push
out
out
cld
lock
push
add
sub
sbb
jo
jl
pop
int3
clc
add
add
jb
adc
neg
dec
aaa
fs
inc
mov
inc
inc
fwait
clc
(bad)
mov
in
test
push
mov
mov
js
shl
inc
addr16
and
dec
inc
es
or
imul
sub
pop
shr
and
mov
dec
cmp
sbb
pop
and
jle
sbb
add
jne
mov
push
(bad)
cmp
in
sar
xchg
fdivrp
test
dec
add
push
mov
pop
inc
adc
ror
cmp
xbegin
push
mov
shl
neg
add
mov
(bad)
sub
xor
jg
jns
sub
push
cmp
mov
in
imul
adc
add
aas
mov
cld
aad
sbb
(bad)
ret
dec
push
xor
adc
jle
sbb
dec
shl
pop
push
pop
adc
pop
sbb
iret
mov
pop
add
and
and
cmp
test
push
add
stos
mov
xor
out
cld
fnstenv
xor
lock
js
lahf
xchg
xor
outs
in
push
loopne
mov
mov
inc
dec
ins
pop
xor
shr
inc
inc
int3
scas
xor
movs
pop
not
es
add
xor
and
clc
lock
cmp
(bad)
sbb
xchg
into
je
fisttp
cdq
fadd
(bad)
add
shl
dec
in
add
rcl
add
loope
xchg
sbb
or
mov
mov
and
stc
mov
push
push
cs
repz
push
bswap
mov
out
cmp
(bad)
or
push
xor
jns
dec
lea
sbb
inc
dec
adc
mov
outs
and
sub
mov
pop
and
xor
cmp
std
rcl
and
jge
je
out
dec
cmp
pop
inc
jmp
call
out
xor
cmps
inc
or
jecxz
push
mov
and
dec
add
and
dec
xlat
mov
adc
fadd
(bad)
sub
call
sbb
ds
fnstenv
jmp
leave
fucomi
mov
jb
jb
mov
rcr
or
arpl
cmps
(bad)
lods
icebp
int3
xor
sub
mov
test
or
push
sub
pop
xchg
fadd
mov
pop
cmp
mov
mov
cli
dec
push
adc
inc
mov
add
pusha
ret
mov
dec
pop
iret
jne
ins
xchg
mov
dec
push
(bad)
dec
jp
push
xchg
jmp
out
out
dec
mov
jno
mov
adc
loopne
leavew
inc
test
inc
push
adc
or
js
inc
jle
je
inc
cmp
dec
pop
cmp
dec
push
and
iret
dec
aaa
push
js
mov
loop
and
inc
(bad)
fild
dec
jne
call
jp
or
sub
dec
mov
mov
pop
dec
bound
dec
push
and
jo
inc
clc
into
sub
inc
sub
jns
jp
dec
rcl
push
dec
je
cmp
or
pop
das
or
popa
fwait
xchg
or
ret
lock
cmp
or
dec
sar
inc
or
xchg
mov
push
mov
or
cmps
jmp
in
pop
in
add
sbb
add
stos
sti
and
jmp
jns
ror
daa
jl
jne
cmp
pop
bound
mov
and
pop
jb
push
lds
xor
mov
pop
push
sub
pop
xor
cmp
pop
push
dec
nop
xchg
out
or
xor
pop
xchg
push
add
push
add
jb
xor
add
cmc
jecxz
stos
dec
cmp
aas
adc
fst
outs
cmp
mov
mov
push
ret
ins
and
and
adc
mov
push
js
pop
mov
and
mov
pushf
xchg
inc
ins
jo
dec
test
icebp
int
enter
outs
push
cwde
dec
outs
int
push
jnp
ret
mov
arpl
sub
inc
xor
mov
or
cmps
cmp
(bad)
out
cmp
adc
jo
dec
retf
cmp
ror
jmp
sub
jne
or
int
pop
dec
mov
shl
fisubr
inc
add
cmp
std
sub
je
mov
jbe
fmul
xchg
(bad)
les
clc
pop
mov
pop
pop
push
jo
test
or
cmp
xchg
mov
stos
call
mov
mov
jae
cwde
aad
cmp
mov
inc
jo
not
aad
push
add
mov
enter
test
mov
add
mov
adc
xchg
xchg
inc
imul
add
ins
in
or
icebp
ss
fisttp
pop
fsubr
push
mov
push
(bad)
mov
adc
mov
xlat
les
aaa
div
sahf
jns
or
mov
fwait
cmp
and
leave
rcr
add
add
push
imul
ds
or
mov
or
mov
jmp
xchg
dec
sub
xor
push
mov
jecxz
push
mov
(bad)
js
bound
cmp
and
or
add
les
xchg
jo
scas
mov
and
lds
ss
xor
enter
cmp
pop
or
xchg
push
push
mov
pop
test
addr16
or
adc
inc
loop
mov
pop
cmc
std
sub
push
cmp
push
mov
aam
dec
xchg
pop
ins
rcr
cmp
jbe
sbb
jno
add
push
mov
mov
enter
fidivr
call
or
dec
pushf
dec
push
push
add
ds
fisubr
mov
push
or
dec
popa
ja
in
mov
cmp
add
add
mov
fisub
cdq
cdq
test
sub
push
out
loope
mov
je
pop
add
in
pop
jne
jecxz
call
rol
pop
outs
(bad)
push
add
inc
mul
shr
lea
push
adc
or
or
jg
ret
add
pop
cmp
dec
sub
ret
push
jne
mov
test
inc
and
cmp
push
ins
mov
adc
movs
inc
add
icebp
hlt
add
jne
mov
lds
xlat
and
add
hlt
fiadd
push
xchg
mov
fsub
cwde
in
sahf
jp
push
adc
out
mov
retf
(bad)
es
aam
adc
cmp
jle
mov
push
shl
enter
or
retf
daa
jns
sub
adc
mov
xor
add
push
pop
pop
adc
sar
inc
stc
daa
cld
cmp
dec
inc
and
sbb
mov
cmp
dec
jmp
jmp
push
mov
add
xchg
add
movs
pop
cwde
mov
add
or
rcr
mov
xchg
test
(bad)
rcl
xor
or
nop
outs
cmps
aas
inc
inc
hlt
test
jl
and
sub
push
test
pushf
cmps
test
lahf
mov
ficomp
jbe
test
push
inc
cmps
sar
test
sub
or
inc
cmps
lahf
test
mov
aam
shr
push
adc
add
jmp
sub
test
sub
dec
cmp
in
jle
push
(bad)
dec
call
je
adc
sbb
xchg
je
arpl
out
loopne
cld
arpl
add
jmp
mov
xor
jo
dec
xchg
lock
inc
add
xor
or
add
jb
dec
jmp
xchg
jmp
pop
pop
pop
enter
imul
inc
push
out
popf
adc
aaa
mov
dec
add
or
or
pop
push
fwait
ret
nop
mov
into
popa
push
xchg
mov
and
jbe
or
inc
div
dec
jg
pop
pop
lods
inc
xor
dec
mov
je
and
add
jmp
add
jmp
mov
(bad)
clc
vhsubps
iret
imul
cmp
sahf
sub
aas
fwait
dec
xchg
shr
icebp
add
adc
adc
hlt
neg
adc
scas
clc
push
sub
cmp
or
mov
adc
(bad)
loopne
mov
shl
aad
dec
les
int
popa
ins
jmp
jne
cmp
sub
je
mov
test
movs
lods
push
test
sbb
or
iret
shl
call
(bad)
sub
sar
lea
rcl
mov
lods
pusha
addr16
jnp
jg
jne
pop
movs
adc
call
sti
bound
push
mov
xor
test
push
mov
add
mov
cs
pop
call
pop
inc
jl
adc
and
ja
lock
push
in
rsm
add
sub
pusha
shl
mov
pop
add
fld
ja
pop
inc
imul
mov
jo
shr
ins
mov
add
adc
add
pop
(bad)
sub
cmp
push
jns
add
retf
mov
pop
or
cli
push
and
mov
or
cld
cmp
push
cmp
neg
dec
adc
sbb
push
shr
retf
fs
sub
sbb
loopne
mov
ret
add
ins
dec
je
or
loopne
call
cmp
sub
sti
dec
dec
inc
inc
cmp
and
sub
jne
adc
addr16
ss
mov
adc
lds
xor
sahf
ins
pop
lds
fs
in
imul
dec
rep
div
js
pushf
cmps
shl
pop
fisubr
pop
adc
adc
test
mov
mov
out
sbb
js
mov
shl
ret
imul
(bad)
jb
push
jmp
push
pop
loope
test
pop
sahf
inc
je
xchg
cwde
test
cmp
or
ret
push
and
mov
aam
sub
jmp
popa
mov
or
faddp
cmp
fcmovbe
pop
inc
push
pop
dec
mov
xor
jne
sbb
jmp
and
or
adc
cmps
bound
cmp
mov
mov
mov
sub
fldcw
add
mov
sar
cmp
push
pop
mov
fs
popa
sahf
outs
lahf
and
lock
mov
out
jl
cmps
pusha
pop
xchg
repz
push
add
cmp
or
mov
fucom
rcr
xchg
movs
ja
pusha
scas
into
mov
mov
lock
aaa
dec
lock
mov
xchg
inc
fldenv
hlt
jo
fsubr
pop
jmp
adc
mov
adc
inc
pusha
popf
aaa
push
outs
lods
outs
jne
sub
or
jg
das
push
mov
loop
aaa
out
repnz
scas
cmp
pop
fdiv
pop
int3
data16
ror
mov
cmc
ror
fld1
cli
jns
pop
clc
pop
mov
pushf
jno
test
push
mov
xor
push
addr16
xor
cmp
jle
(bad)
outs
ret
hlt
push
scas
loopne
sub
outs
pop
cmp
shl
mov
push
inc
lods
je
fdivr
jae
mov
pop
(bad)
mov
push
inc
cmp
adc
xchg
xchg
xchg
scas
push
ror
sbb
add
les
(bad)
out
sti
rol
mov
fdiv
jae
dec
loopne
push
mov
jl
xchg
sub
mov
inc
push
push
mov
(bad)
xor
sub
and
je
std
test
cld
jae
aas
jp
pop
cdq
mov
add
adc
xor
inc
leave
mov
add
push
jne
push
enter
loopne
add
scas
in
adc
cs
hlt
push
inc
imul
js
sbb
cdq
jmp
sub
sub
shl
sar
aaa
cmc
jecxz
or
jg
jl
jae
push
les
es
add
fisubr
rcl
call
or
sbb
push
das
adc
pop
sub
pextrw
inc
mov
or
mov
push
les
in
inc
jb
dec
int3
cmp
push
xor
and
mov
adc
push
cmc
sub
shl
cmp
clc
mov
jl
sbb
lea
cmc
and
fadd
dec
lods
pop
adc
add
into
and
test
xor
xor
and
inc
inc
mov
hlt
sub
or
pop
addr16
mov
xchg
dec
cmp
xchg
sub
mov
push
sti
add
into
(bad)
pusha
mov
adc
jne
and
adc
les
add
shr
fadd
and
fimul
cmp
ficomp
push
shr
enter
sub
sub
mov
push
push
xor
pop
add
clc
and
sar
xor
mov
cmc
scas
shl
push
add
dec
nop
inc
push
inc
frstor
rcl
pop
cmp
mov
sbb
(bad)
int
cwde
add
push
adc
xchg
loopne
int3
ss
in
adc
push
jl
je
inc
sbb
and
or
mov
mov
push
dec
mov
aam
or
or
shl
test
ror
pusha
inc
dec
sbb
neg
push
ficom
add
push
pusha
scas
jmp
icebp
sub
and
mov
pop
ds
inc
shr
stc
mov
outs
push
push
dec
adc
push
and
sti
stc
jl
jg
push
dec
and
push
jg
outs
inc
or
mov
jbe
jle
xor
jg
jp
clc
out
ja
jg
lea
jbe
or
mov
test
call
pop
js
mov
div
push
or
add
(bad)
shr
cli
push
or
mov
inc
dec
pop
ds
sbb
push
repnz
out
add
dec
xor
(bad)
lods
das
push
je
sahf
mov
adc
mov
sar
in
add
nop
lock
in
lock
rep
add
retf
jmp
nop
xor
mov
ja
pop
mov
jp
add
sbb
out
push
push
ret
mov
sbb
xchg
mov
outs
pop
repnz
hlt
mov
and
mov
and
push
add
mov
inc
jmp
inc
movzx
(bad)
inc
fsubr
sbb
inc
inc
(bad)
aam
mov
mov
xor
xchg
inc
hlt
adc
mov
clc
push
or
cmp
pop
popa
mov
xor
push
adc
imul
adc
inc
das
je
in
mov
jmp
cmp
je
or
pop
sub
or
dec
sub
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
inc
mov
sbb
test
and
adc
dec
stos
push
pop
lock
xor
sub
mov
out
adc
adc
or
pop
push
mov
lds
xor
or
outs
dec
mov
jmp
ja
inc
je
add
push
xchg
hlt
push
adc
dec
scas
imul
pop
enter
jmp
(bad)
dec
out
adc
ret
sub
mov
or
jmp
or
dec
clc
push
test
and
or
ja
adc
mov
sahf
pop
push
loop
dec
setg
and
mov
xchg
cmp
push
clc
add
mov
dec
dec
mov
cmp
mov
pop
call
sub
jle
and
call
rol
add
add
lods
or
add
add
movs
sbb
add
add
or
xor
popa
(bad)
mov
fisttp
sbb
test
mov
mov
jge
shl
sub
jns
neg
fdivrp
cmp
jl
cdq
push
pop
idiv
add
mov
push
or
add
test
shr
fs
push
sbb
sbb
xor
inc
and
mov
or
in
and
dec
xor
jl
inc
push
mov
jge
dec
jp
push
mov
sbb
cmps
dec
daa
outs
mov
jbe
cli
in
cli
(bad)
push
pop
call
sub
adc
sub
repz
lods
loopne
outs
mov
push
push
cs
xor
pop
call
mov
jmp
adc
mov
xor
push
mov
adc
or
mov
in
add
and
pop
add
inc
mov
cmp
retf
or
fnsave
xchg
stc
out
stc
fucomp
in
push
or
jge
sbb
add
sbb
je
pop
add
rcr
add
pop
adc
and
sbb
retf
push
stos
and
nop
xor
dec
jl
add
ret
xchg
ficom
pop
add
gs
js
push
sbb
daa
call
and
cwde
or
or
push
cmp
xor
mov
hlt
pop
mov
enter
js
test
in
jl
add
mov
sub
ret
scas
(bad)
dec
and
add
mov
push
sti
icebp
scas
jo
out
or
je
dec
sbb
movs
fsub
mov
fistp
and
inc
sub
daa
xor
or
fisubr
fnsave
pop
cmp
loope
mov
out
cmp
and
hlt
jmp
out
bound
xor
inc
cmp
sbb
adc
jb
xchg
or
mov
add
ja
push
xchg
adc
clc
push
sub
add
sbb
dec
sbb
call
adc
les
push
cld
into
clc
in
add
xchg
push
imul
or
cld
add
dec
shrd
push
pop
inc
xchg
and
push
in
imul
sbb
test
cwde
or
cld
inc
or
xor
xor
out
mov
retf
sub
dec
pop
sub
or
rcr
mov
push
test
dec
or
inc
mov
popa
mov
xor
adc
xchg
or
ror
pop
and
scas
push
pop
mov
sar
jg
dec
in
push
sub
or
cld
mov
shl
fidivr
ror
mov
call
sbb
xor
add
(bad)
movs
jp
add
sub
jne
sub
lock
jg
mov
dec
scas
jl
fiadd
pop
dec
pop
or
pushf
or
jns
nop
sbb
dec
sub
call
jae
push
add
dec
rol
sub
mov
push
xchg
mov
cmp
sbb
and
fadd
data16
mov
jbe
and
xchg
or
xor
pop
shr
xchg
lods
add
adc
xchg
test
in
xchg
enter
jge
mov
ins
xor
pop
or
popaw
adc
xchg
pop
sub
or
les
sahf
add
xchg
sbb
push
cmp
jne
je
add
cmp
bound
add
xchg
xchg
add
repz
mov
push
push
cmps
push
mov
dec
sub
retf
jbe
repnz
adc
pusha
dec
inc
rol
ss
add
lds
sub
adc
push
mov
push
jmp
ins
cmp
pushf
ror
fwait
cs
cld
jl
rcl
clc
xchg
test
pop
(bad)
das
shl
into
mov
scas
pop
ret
sbb
gs
ds
mov
imul
gs
or
pop
data16
cmp
mov
dec
mov
popa
je
inc
je
dec
lods
in
in
mov
sahf
jmp
adc
mov
cmp
sbb
sub
mov
sbb
daa
push
(bad)
sbb
and
ins
nop
ds
sub
jb
push
lods
add
or
rcr
add
mov
adc
fld
clc
sbb
jle
lock
dec
adc
fmul
ins
push
pop
clc
f2xm1
and
data16
ror
fst
sbb
jne
leave
cmps
stc
adc
adc
sbb
xor
push
inc
aaa
or
out
js
rcr
mov
or
sub
push
pusha
jo
or
rcl
xchg
or
push
inc
test
mov
(bad)
adc
sub
add
xchg
jbe
pop
or
aaa
push
inc
inc
sti
outs
inc
add
ret
clc
iret
lock
push
lock
mov
neg
pushf
mov
daa
nop
shl
lock
adc
xor
rcl
inc
or
sbb
adc
dec
cmp
data16
mov
add
test
jbe
add
ins
add
movs
adc
js
add
call
(bad)
pop
sbb
pop
dec
and
or
test
sub
mov
out
imul
data16
movs
and
mov
pop
mov
xchg
pop
cmp
into
frstor
test
pop
es
cmps
adc
lock
outs
add
add
pop
inc
pop
jl
aad
sbb
int3
cmps
jb
push
mov
pop
mov
fldpi
leave
jl
rol
stc
add
sub
dec
cmp
xor
loope
push
ja
enter
in
pop
inc
xchg
and
and
mov
pop
adc
mov
cmp
(bad)
shr
inc
sti
lea
pusha
aad
popa
sub
imul
inc
pop
imul
and
idiv
jp
xchg
imul
mov
add
pop
sbb
(bad)
jge
loopne
mov
cmps
in
pop
aas
add
pusha
mov
dec
int3
frstor
mov
ret
sbb
scas
retf
dec
loope
jmp
mov
mov
(bad)
mov
jl
push
pop
inc
clc
shl
ds
mov
inc
mov
or
adc
add
mov
cmp
inc
js
clc
into
pop
or
sub
adc
sti
addr16
std
dec
push
push
loope
add
jmp
rol
push
out
or
or
mov
jnp
in
jge
cmp
mov
mov
mov
adc
add
(bad)
or
jnp
ror
arpl
add
pmuludq
add
lock
inc
jne
push
push
fsub
and
jne
push
cmp
inc
cmp
push
pop
loop
jno
add
adc
and
adc
dec
addr16
add
addr16
add
movs
into
dec
add
adc
out
nop
add
cmp
add
imul
gs
add
sti
push
stos
add
push
add
retf
xlat
dec
jge
sub
adc
cmps
jmp
lock
push
call
fs
leave
jecxz
(bad)
pop
jb
aas
push
nop
les
push
pusha
bound
ja
fs
mov
mov
xchg
inc
popf
xor
hlt
dec
or
jns
call
jmp
xor
je
push
les
or
sub
je
push
add
and
repz
popa
push
mov
(bad)
mov
jmp
mov
adc
push
mov
xchg
cmp
xchg
es
into
cmp
sbb
sub
ret
stc
call
and
test
les
sbb
or
test
cmp
int3
mov
(bad)
aas
retf
clc
cmp
cmp
ret
cmps
xchg
scas
sbb
dec
shr
cmp
mov
(bad)
fucomi
outs
push
add
inc
add
mov
or
and
ins
lock
je
push
push
je
das
mov
or
jl
or
jge
ret
add
(bad)
inc
jo
jne
adc
mov
add
cmp
xor
and
sbb
or
jmp
adc
and
mov
sbb
fimul
or
pop
sub
out
ins
and
jp
jg
mov
xor
lods
lock
lods
dec
gs
jno
(bad)
imul
cs
repz
add
inc
xlat
or
or
add
retf
sub
adc
and
xchg
ss
push
sahf
adc
sahf
es
cmp
ss
std
sub
sbb
mov
mov
mov
adc
mov
rol
push
cmp
adc
and
mov
movs
mov
fimul
sbb
add
loope
jge
inc
or
mov
push
sbb
sbb
inc
sar
leave
sbb
adc
lea
stos
mov
add
loop
ins
push
jo
ret
inc
pusha
ret
outs
sbb
inc
jmp
jmp
add
inc
or
push
lods
or
imul
inc
lea
sbb
out
xchg
loopne
int
cmp
add
pop
xlat
sbb
or
jae
xor
push
mov
inc
adc
add
mov
pop
and
cmc
fs
add
bound
(bad)
cmc
adc
push
aad
pop
push
inc
mov
jb
fs
mov
mov
xchg
xor
mov
in
push
jnp
(bad)
je
xchg
cli
adc
bnd
lea
lea
or
xor
mov
int3
push
inc
fwait
mov
cli
popa
sbb
jmp
fs
sub
cmp
jg
xchg
jnp
inc
les
mov
inc
popa
mov
enter
(bad)
dec
jecxz
push
mov
push
pop
inc
mov
scas
mov
(bad)
jmp
push
mov
loop
mov
jl
nop
es
call
pop
inc
xchg
test
shr
sahf
aas
rol
shl
push
sub
jae
push
loope
cmp
mov
inc
clc
sub
jbe
sub
js
movs
push
je
dec
jne
pop
mov
sbb
cmps
sbb
or
call
and
aas
lock
pop
dec
and
sbb
imul
call
(bad)
sub
mov
mov
inc
dec
jne
(bad)
div
lea
add
pop
mov
ds
es
dec
repnz
push
adc
cwde
or
loopne
test
jp
sub
adc
cld
sbb
jl
hlt
mov
or
pop
mov
test
inc
sub
and
mov
add
dec
xchg
or
je
and
inc
aaa
add
neg
out
cwde
enter
push
out
adc
jle
add
les
sub
fadd
push
pop
cmp
ins
push
add
inc
add
dec
ss
(bad)
test
mov
dec
push
sbb
cmps
jmp
and
je
sub
cmps
push
and
icebp
loopne
fimul
mov
or
sbb
sub
push
sub
ror
adc
or
push
ror
rcpps
push
and
and
lock
xchg
mov
iret
jb
mov
mov
aas
pushf
sbb
add
or
cmps
popa
clc
mov
push
inc
jo
jg
inc
jmp
ja
jmp
and
push
dec
add
pop
in
mov
(bad)
fnsave
rcl
jmp
test
(bad)
push
push
dec
pop
out
jnp
inc
push
sbb
dec
jmp
and
add
xor
sbb
sbb
add
pop
imul
addr16
xor
jmp
pop
rol
outs
push
std
jne
inc
adc
fcmovnbe
ret
xchg
cld
das
add
push
imul
loope
inc
or
lea
rol
push
div
mov
mov
pop
js
arpl
sbb
test
add
les
hlt
add
cmp
ficom
dec
push
inc
mov
add
inc
sbb
(bad)
wbinvd
inc
sbb
push
call
ss
jbe
cld
arpl
add
jo
out
mov
test
jne
rcl
rcr
inc
inc
leave
out
ja
out
lea
xor
or
or
jmp
cs
adc
out
ds
jl
jg
loopne
adc
add
scas
push
cmps
hlt
jmp
mov
mov
mov
add
mov
xor
(bad)
mov
in
push
hlt
out
adc
(bad)
(bad)
out
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
sbb
cmp
add
mov
jle
xor
jo
lods
fnstsw
push
mov
inc
dec
jne
pop
test
movs
add
sub
mov
xor
rep
nop
dec
and
xchg
ret
neg
adc
mov
outs
ins
xor
dec
shl
clc
push
imul
imul
xchg
sub
or
pusha
test
and
pop
(bad)
int3
dec
jno
cmp
stos
sub
jecxz
cld
(bad)
out
push
retf
in
push
dec
iret
push
dec
or
fwait
jmp
int3
dec
bound
in
add
push
or
rcr
fld
jl
or
inc
or
inc
ins
xchg
mov
xchg
dec
clc
inc
inc
xor
jmp
outs
sti
pop
jl
cmp
dec
sbb
add
inc
xor
jns
sub
add
sbb
lock
ss
std
out
jmp
adc
pop
add
sbb
es
dec
aad
pushf
and
jmp
sbb
or
cmp
add
mov
ss
loopne
std
ds
jmp
push
(bad)
mov
lods
pop
mov
pop
xchg
out
push
je
cmp
imul
push
pop
cmp
jne
lock
push
push
imul
adc
dec
retf
pop
xchg
mov
jnp
mov
inc
inc
sbb
sub
lods
or
(bad)
and
adc
sbb
mov
adc
adc
test
jne
dec
adc
push
push
jg
mov
aam
push
pop
cmp
cmp
or
cmp
and
outs
adc
push
sub
ds
jne
xchg
bound
push
aad
mul
sub
push
sbb
or
mov
dec
inc
(bad)
and
pop
push
pop
cmp
das
cmp
cmp
pop
ret
adc
fdiv
sbb
push
into
cdq
or
je
sbb
sbb
push
xchg
pusha
adc
add
push
push
aaa
xor
sub
(bad)
push
xchg
imul
mov
push
lds
(bad)
shl
pop
cs
jmp
or
mov
push
in
and
inc
jo
rol
sub
or
xor
sub
mov
sub
rol
add
enter
test
call
daa
loope
inc
rcl
or
inc
dec
in
ficom
sub
test
dec
adc
and
pusha
fisub
mov
shr
mov
cmp
sub
mov
ss
pop
mov
je
xchg
and
inc
add
mov
and
cmc
and
push
jae
add
dec
call
pop
clc
pop
or
inc
hlt
hlt
repnz
cmp
mov
lahf
cmp
test
js
loop
daa
cmp
add
push
test
xor
or
sub
test
jp
lock
xor
push
sbb
movs
and
push
out
pusha
inc
pop
mov
sub
es
mov
pop
fist
xor
ret
cmp
(bad)
jae
loopne
cmp
or
jne
ins
outs
adc
jp
push
push
cmp
pop
and
mov
add
lea
mov
js
mov
xchg
adc
xor
or
lods
sbb
dec
dec
mov
inc
or
xor
add
dec
adc
push
sbb
hlt
mov
sbb
repnz
jb
sub
push
sti
jb
mov
mov
cmp
jb
mov
xor
xchg
inc
leave
sub
rol
push
xor
ins
cmp
lahf
mov
inc
and
call
movs
adc
cmp
and
aas
scas
mov
dec
or
icebp
cmp
sbb
pop
dec
mov
mov
sub
pop
mov
fwait
sub
cmp
mov
add
jb
push
mov
dec
pushf
ret
xchg
add
or
test
mov
cld
lahf
mov
lods
and
sti
add
shr
and
shl
add
test
and
push
ss
inc
jmp
mov
push
stc
cmp
jge
imul
pop
sbb
stc
out
cmp
xor
sbb
jl
loop
add
lea
jo
jne
test
and
sti
push
pop
or
retf
cmp
lea
sub
xchg
push
cmps
jb
cmp
jbe
or
sbb
jmp
leave
push
popa
mov
popa
sbb
push
inc
pusha
sub
add
ins
cmp
movq
jno
fbstp
adc
adc
push
sub
and
add
xor
jo
aam
(bad)
add
sub
sub
add
cmc
sub
imul
(bad)
pop
enter
data16
push
pop
pop
sar
in
into
and
nop
pop
ret
pop
(bad)
jle
cli
aas
mov
sbb
clc
push
mov
sub
pop
xchg
mov
test
push
repnz
pop
mov
xor
and
mov
imul
pusha
lds
push
xlat
pop
imul
ret
dec
jl
out
fcmovne
ja
xchg
ret
ret
imul
adc
push
movs
sub
fldcw
sbb
or
movs
adc
adc
fldcw
xor
clc
(bad)
add
mov
mov
outs
fdiv
xor
repz
(bad)
repz
and
sti
addr16
add
jle
or
leave
faddp
sub
(bad)
fmulp
or
adc
mov
rcl
not
mov
add
xchg
aam
stc
or
stc
push
mov
push
mov
lods
gs
(bad)
push
sub
xchg
jb
ja
jae
cmp
cmp
(bad)
jb
mov
and
fdivr
adc
mov
rcl
or
add
add
loope
sub
sbb
(bad)
cmp
int3
jae
cmps
cmp
adc
push
add
rcr
fmul
mov
ja
mov
cmc
ja
cmp
sbb
inc
fld
enter
ja
mov
inc
ret
sar
test
and
mov
and
(bad)
sti
add
pop
pop
dec
in
jne
shr
or
jle
in
fldl2e
pushf
cwde
jne
fld1
ret
mov
not
push
or
inc
sbb
std
pop
add
pop
add
or
das
pushf
jne
fscale
xchg
jl
dec
inc
data16
jbe
or
pop
mov
jg
out
add
aad
loope
lahf
cmp
fsub
pushf
cdq
pop
jmp
imul
mov
inc
jne
dec
or
inc
dec
ret
or
jne
ja
or
pop
in
cmp
scas
inc
mov
ror
in
mov
push
fldz
pop
push
xchg
shr
xchg
xor
lock
cmp
jmp
pop
ja
or
sbb
push
rcpps
push
push
xchg
add
lea
cmp
adc
call
xchg
cmp
add
mov
fisttp
daa
outs
fbstp
jbe
lock
fdivr
loopne
jne
push
fmul
out
cwde
daa
fidiv
ret
sub
or
or
clc
mov
je
adc
or
or
mov
data16
push
je
mov
push
add
push
fnstenv
pop
mov
mov
sub
gs
or
cmp
ja
mov
fst
mov
jmp
jnp
sbb
frstor
add
bound
js
sub
imul
add
jno
adc
cmp
mov
jne
mov
out
mov
push
(bad)
je
push
xor
and
dec
(bad)
fldl2t
mov
cmp
mov
mov
jne
mov
inc
out
ret
outs
or
lods
sub
(bad)
and
cmp
inc
jmp
mov
mov
das
and
add
clc
enter
adc
fstp
cmp
sbb
push
xor
ss
xchg
or
lock
iret
aas
int
push
adc
mov
jbe
cmps
jbe
cmp
mov
mov
jnp
push
mov
lea
sbb
pop
mov
ss
loope
push
push
or
or
inc
mov
ja
lods
pop
adc
jbe
pop
add
hlt
push
adc
jl
push
mov
jne
or
mov
and
shld
add
cli
push
neg
ins
push
loopne
pop
dec
mov
sub
cmp
sub
jle
cmps
add
aad
int
or
pushf
pop
or
xor
mov
pop
loopne
les
and
(bad)
call
dec
mov
(bad)
out
xor
hlt
rep
(bad)
push
les
mov
pop
(bad)
lods
xor
cld
add
std
jl
xchg
jb
rol
pop
sub
sub
shl
add
mov
sbb
dec
inc
sar
rcr
push
adc
ret
fcmovne
daa
lock
push
ds
pusha
daa
dec
neg
in
inc
cld
outs
repnz
test
test
sub
sub
mov
mov
loope
retf
xor
enter
jl
ror
adc
mov
adc
(bad)
call
cmp
ret
sub
je
mov
jnp
dec
jmp
je
dec
pop
rcl
or
out
add
xor
mov
ja
pop
addr16
jns
mov
addr16
or
dec
push
leave
jp
mov
xchg
dec
rcl
inc
jo
sbb
jns
(bad)
jae
and
pop
icebp
adc
daa
or
pop
mov
push
cmps
sahf
cmp
call
cdq
iret
add
dec
rcr
aas
jmp
mov
pop
fiadd
mov
xchg
pop
dec
stos
or
ror
dec
xchg
shl
sar
rol
mov
and
xlat
fdivrp
add
adc
and
cwd
imul
cmp
shl
fisub
lods
icebp
in
std
rol
mov
mov
or
fcomp
in
or
pop
call
loop
fadd
adc
idiv
fldz
ret
or
bound
test
xor
pop
neg
pusha
(bad)
lock
add
or
cmp
shr
adc
jo
mov
add
xor
fldenv
sbb
sub
mov
pop
or
and
lock
ret
or
test
(bad)
retf
adc
sbb
ds
ret
test
fwait
test
pop
and
pop
inc
add
sub
sbb
(bad)
and
arpl
jg
sub
xlat
je
sbb
or
sahf
loope
repz
jge
push
or
and
sub
add
test
or
jge
add
ret
pop
mov
pop
ret
aas
lock
cmp
adc
pushf
pop
loope
inc
fist
push
cmp
stos
jmp
daa
je
xchg
arpl
sub
fcmovne
sub
(bad)
cli
sbb
aad
fmul
(bad)
jo
cmp
mov
or
enter
push
inc
xor
push
add
xchg
jg
movs
push
icebp
(bad)
loopne
inc
mov
sbb
or
data16
or
or
push
in
inc
mov
pcmpgtb
push
(bad)
retf
xchg
pop
fld
outs
jge
ins
or
fs
jecxz
push
mov
xchg
js
push
pop
call
in
je
mov
imul
fmul
fwait
or
xor
mov
rcl
retf
push
mov
jnp
outs
add
push
aaa
inc
inc
sbb
cmps
(bad)
loop
or
jne
lods
(bad)
js
dec
push
push
push
push
sub
daa
daa
aaa
sbb
fcmovnbe
dec
fidivr
xor
pop
jne
(bad)
sub
shl
test
or
movs
jno
push
jne
arpl
adc
and
ins
fdiv
push
push
jne
out
add
cmp
add
cmp
adc
sbb
mul
jno
jbe
lea
xchg
jle
(bad)
sbb
ja
adc
lea
cmp
or
div
jp
mov
les
mov
test
movs
lock
add
fidiv
sub
loopne
push
outs
fbld
in
jb
ja
pusha
call
xchg
xor
rol
add
jbe
xor
test
or
ret
push
mov
aas
push
cld
cmps
dec
sub
test
push
js
or
push
or
sub
or
(bad)
push
sbb
cmp
push
call
xlat
retf
pop
push
sub
push
cmp
lods
hlt
pop
or
ret
imul
add
fnstcw
sbb
push
aam
sbb
jp
ins
sbb
(bad)
xchg
jg
enter
lea
push
and
sti
in
inc
in
cs
adc
cmp
pop
stc
push
movs
adc
cmp
mov
inc
loopne
out
fcomp
mov
sub
retf
push
mov
addr16
repz
and
cmp
jl
adc
or
and
or
mov
lds
push
inc
pop
jge
test
pop
cmp
ret
jmp
push
pop
in
mov
sub
popa
fdiv
sbb
pop
jmp
fsubr
push
ja
sub
scas
adc
stc
mov
cmp
mov
test
adc
add
adc
icebp
dec
cmps
aad
in
push
cmp
ds
cmp
push
cmp
out
dec
nop
ror
mov
jne
push
adc
stc
sti
retf
mov
das
xchg
add
jmp
push
or
in
pop
inc
bound
arpl
pop
cmp
cmps
sbb
popa
inc
or
mov
inc
test
repz
and
lods
leave
sahf
add
push
inc
push
sbb
add
outs
sub
and
retf
adc
fdivrp
mov
inc
cmp
cld
das
push
push
pop
test
shl
pop
je
push
push
fstp
push
add
shl
cmp
jp
test
sbb
and
add
pop
xor
push
cli
repz
adc
sub
add
cmp
mov
retf
je
retf
rcl
outs
pop
sub
mov
fdivr
ret
data16
mov
call
cmp
pop
mov
mov
mov
sbb
popa
push
inc
xchg
adc
mov
loope
scas
inc
xor
(bad)
test
mov
outs
mov
jne
cmp
or
jne
xchg
add
inc
or
mov
fdivr
cs
pop
cwde
jmp
gs
out
adc
jecxz
rol
in
xor
je
mov
test
inc
pop
je
fst
mov
int
push
sar
pop
sahf
cmp
add
and
std
push
inc
jbe
dec
stc
add
pusha
mov
int
add
cli
ins
inc
or
je
jbe
adc
cmp
lock
je
leave
or
add
into
inc
add
std
push
inc
dec
test
cmp
sub
or
arpl
(bad)
aam
ficom
cwde
sbb
cmc
fwait
das
test
mov
popa
xor
cmp
xor
jnp
pop
cmp
mov
inc
sub
cld
les
hlt
add
cmp
stc
push
dec
je
and
add
pop
loopne
push
aas
jnp
mov
jge
(bad)
push
push
or
call
mov
push
pop
js
add
ret
sbb
push
cmp
(bad)
xchg
pop
jne
call
stos
sbb
adc
cmp
pop
or
push
inc
js
lds
lods
ins
xor
in
leave
or
scas
cli
or
mov
cmp
cs
add
adc
jne
jecxz
mov
or
ds
push
push
ret
push
push
adc
clc
je
cmp
fisubr
test
cmp
and
mov
add
sub
inc
fwait
and
(bad)
sar
adc
pop
ss
jmp
sub
or
and
push
or
push
cdq
mov
sti
or
lock
(bad)
iret
fisttp
aas
add
test
ins
and
mov
and
sub
push
pop
push
push
push
je
mov
pop
adc
pop
push
xor
add
or
add
pop
aam
(bad)
add
jl
ins
push
or
or
or
push
mov
or
or
shr
shr
xchg
std
or
add
cmp
push
je
call
movs
lock
pop
clc
jl
repnz
or
loopne
or
add
adc
lea
adc
lock
or
add
sub
(bad)
inc
cmp
adc
cmp
nop
fsubr
adc
mov
push
mov
inc
ror
or
mov
cmp
xor
and
sub
add
outs
push
pusha
mov
xchg
test
lea
inc
or
mov
jb
push
and
push
add
inc
add
jb
xchg
xor
(bad)
pop
retf
mov
push
mov
mov
lods
sub
call
stos
aas
push
ins
pop
aam
aaa
xor
ds
mov
jne
lock
add
or
mov
fchs
je
and
bound
jl
je
or
retf
sahf
sbb
imul
adc
add
add
mov
into
ret
je
mov
inc
add
test
inc
mov
cmp
loopne
test
inc
jmp
mov
aaa
xchg
adc
mov
or
adc
lock
sbb
push
and
rcr
dec
lock
cmps
stos
pop
inc
hlt
xor
xor
jmp
call
mov
adc
lock
xor
push
shl
call
xchg
rcl
and
repnz
hlt
cld
mov
push
sub
cmp
sub
daa
mov
jg
push
mov
ds
outs
jecxz
fld
mov
cld
push
loopne
pop
add
mov
add
sar
mov
ror
add
repz
mov
fiadd
(bad)
es
fnstenv
sbb
and
push
jo
(bad)
test
(bad)
pop
outs
sub
out
sub
inc
add
add
inc
mov
dec
add
test
push
inc
push
mov
loop
push
jno
adc
stos
add
test
pop
sbb
ds
add
push
scas
jbe
xchg
mov
inc
stos
jl
popf
lock
fmulp
cmp
rol
loopne
push
mov
push
or
lock
push
dec
add
ficom
scas
push
xor
loopne
aam
add
call
inc
lock
in
mov
in
add
mov
into
jp
adc
push
cmp
jo
cld
bound
add
fadd
push
mov
pop
in
jbe
dec
pop
adc
cld
frstor
inc
mov
jge
add
mov
mov
lahf
add
xor
pusha
and
and
inc
jecxz
inc
xchg
retf
lock
cmp
out
jle
or
push
xor
out
and
inc
inc
ret
adc
mov
or
neg
pop
and
into
test
xchg
mov
or
loope
push
data16
aas
je
mov
cmp
xchg
nop
lods
iret
sbb
or
xor
movs
sub
in
jb
mov
(bad)
int
jne
(bad)
or
mov
jmp
fisttp
push
mov
mov
adc
cli
or
rol
dec
mov
push
in
mov
adc
cmp
sbb
rol
sub
mov
rcl
retf
rol
mov
and
outs
jb
popa
dec
dec
rol
add
and
xor
and
bound
pop
mov
adc
mov
add
inc
or
mov
mov
adc
mov
and
or
outs
sub
xor
add
test
pop
dec
jo
mov
xchg
movs
add
push
xlat
ds
or
add
and
mov
push
add
data16
and
push
in
add
mov
cmp
std
mov
je
xchg
mov
adc
imul
nop
mov
lods
pop
std
je
add
push
jg
jmp
xor
js
inc
mov
and
cld
cdq
sahf
or
mov
xchg
sbb
xor
sbb
pop
xchg
sub
out
sub
(bad)
jmp
lods
clc
add
addr16
and
sub
(bad)
jmp
adc
pushf
cmp
xor
dec
sbb
mov
cwde
add
pop
or
aaa
nop
xor
add
(bad)
fstp
add
test
loopne
inc
(bad)
in
push
push
jmp
popa
xchg
div
or
ficom
lods
and
cmps
sbb
pop
movs
shr
retf
xor
femms
(bad)
and
pop
push
xor
mov
mov
or
ret
push
xor
(bad)
push
in
add
loopne
sbb
adc
fiadd
sub
arpl
jb
test
add
dec
fadd
lock
js
je
jbe
dec
push
popa
je
cmp
je
cmp
mov
push
mov
add
mov
jp
add
or
jns
div
mov
(bad)
shl
daa
jp
mov
mov
dec
sub
mov
stos
cmp
das
push
dec
je
das
and
cli
loopne
mov
std
fadd
xchg
or
mov
test
mov
and
dec
lock
xchg
sub
(bad)
test
cld
cld
or
and
retf
dec
fidiv
ret
jb
pop
and
push
out
jle
pop
lods
or
or
dec
movs
mov
jne
and
or
and
adc
les
pop
shl
cmps
pop
sub
jnp
int
das
ret
mov
pusha
in
adc
scas
les
or
ins
mov
add
lods
or
add
mov
cmp
add
es
push
push
inc
sbb
push
xor
adc
sbb
dec
cmc
cmp
xlat
and
mov
mov
pop
and
push
in
sbb
or
daa
mov
mov
mov
xor
cmp
test
xchg
es
cmps
adc
test
loopne
loop
jnp
icebp
jne
and
sbb
mov
nop
shl
cwde
aas
mov
cmp
or
add
push
sbb
jle
and
sbb
(bad)
movs
movd
leave
call
dec
ins
add
mov
pop
or
push
jle
mov
lods
and
and
push
dec
and
xchg
add
and
push
push
inc
or
inc
jg
test
cld
and
(bad)
aas
dec
jl
mov
mov
fwait
idiv
loope
mov
aas
or
cmp
aam
(bad)
fisttp
dec
inc
mov
dec
movs
cli
push
jecxz
and
inc
das
hlt
hlt
lods
mov
fcmovb
mov
dec
cmp
add
retf
iret
dec
cmp
dec
out
add
push
enter
or
push
mov
sub
mov
(bad)
cmps
mov
jno
xchg
lds
inc
jnp
xchg
cmps
xor
cmp
push
adc
push
(bad)
hlt
cmp
je
mov
loopne
cdq
or
mov
or
test
xchg
pusha
pop
xor
push
add
jmp
adc
jo
pop
mov
sub
and
std
or
xchg
test
adc
jnp
inc
inc
cdq
das
jb
ret
lock
add
cmp
jmp
inc
mov
in
in
repnz
add
addr16
jl
ins
push
xchg
xchg
pop
mov
sahf
mov
jmp
pop
add
xor
in
retf
jle
mov
ja
enter
stc
paddb
sti
je
mov
movs
mov
fcomp
fld
mov
(bad)
and
loopne
push
inc
and
mov
cmp
lock
pop
xchg
add
cmp
adc
daa
js
adc
test
and
sbb
push
loopne
aad
fdivr
adc
mov
xlat
and
inc
add
sbb
test
push
lds
or
push
js
popa
js
pop
jb
test
test
test
push
into
in
lea
push
push
pmulhuw
fwait
pop
jmp
dec
xlat
adc
(bad)
clc
mov
mov
ss
sbb
mov
lods
ja
loope
mov
leave
sub
sbb
adc
or
push
in
cmps
lock
dec
push
sub
and
cs
and
or
test
test
cmp
test
inc
add
pop
sbb
lahf
xor
in
add
adc
push
push
and
jg
xchg
scas
pushf
call
adc
push
push
and
(bad)
push
into
test
or
mov
xor
or
test
out
cmp
sub
test
mov
jl
sbb
pop
inc
mov
sub
adc
adc
mov
push
sbb
cdq
in
xor
mov
mov
jns
pop
les
loope
cmps
sbb
(bad)
sar
xchg
push
push
mov
outs
stos
jle
adc
(bad)
stos
inc
jl
or
push
push
pop
pop
mov
sbb
sub
inc
mov
push
push
add
jecxz
xor
push
and
mov
rol
in
sbb
fild
or
jg
mul
fisttp
dec
das
inc
mov
xor
and
fcom
inc
jl
push
jg
rcr
outs
sub
mov
xor
or
push
and
add
xor
cmp
push
ret
dec
test
or
outs
and
test
cld
sbb
repz
cmp
jg
sbb
cmps
or
ficom
push
add
(bad)
inc
clc
retf
mov
imul
mov
mov
add
xchg
mov
and
mov
inc
or
dec
and
or
mov
je
add
and
sbb
lea
lock
in
sub
(bad)
mov
out
or
mov
and
or
xor
ret
fisttp
lods
push
push
inc
cmps
je
or
xchg
jno
je
adc
mov
pop
cmp
and
out
sub
or
cmps
mov
neg
adc
(bad)
out
adc
and
add
and
jle
add
outs
mov
je
fld
ins
repz
adc
push
add
sbb
fidiv
and
add
and
inc
or
pop
ret
nop
imul
enter
pusha
hlt
jbe
ret
dec
nop
lahf
aaa
dec
mov
cmp
pop
cmp
or
cmp
sbb
fadd
shl
jnp
dec
push
loopne
fild
mov
cwde
add
jbe
fld
or
mov
jmp
(bad)
shl
call
ror
out
push
lahf
adc
(bad)
in
popa
sub
push
std
add
mov
je
push
sbb
pop
push
dec
push
in
add
imul
xchg
add
fcomp
cmc
xchg
loope
jl
mov
sub
mov
push
aam
cmp
lea
sar
or
into
sbb
cmp
mov
pop
or
shl
mov
out
ret
or
pop
or
shl
outs
pop
mov
pop
imul
push
scas
inc
jmp
push
jecxz
out
mov
mov
cmps
sar
jo
cmc
push
call
push
sub
or
and
jmp
mov
cmp
sbb
sbb
scas
push
cmp
add
jns
or
mov
icebp
sbb
iret
repz
dec
push
mov
test
sub
inc
sub
(bad)
and
inc
inc
mov
rol
inc
pop
and
dec
pop
dec
ret
fs
push
pop
ds
das
mov
push
push
pop
mov
pop
mov
sbb
mov
retf
imul
fld
xchg
rcl
adc
scas
imul
mov
or
sub
add
add
jno
cmp
pop
pop
xchg
int
(bad)
aas
push
add
loop
sar
xor
push
jle
ins
cmps
or
(bad)
sbb
ja
fld
mov
jno
repnz
or
mov
leave
inc
and
lahf
push
cmps
pusha
xchg
into
xchg
and
repz
dec
push
into
and
cwde
sub
add
loope
stc
sbb
inc
xchg
add
bound
fadd
and
test
inc
or
or
inc
and
mov
add
add
or
test
add
inc
xor
pop
xor
or
ficomp
mov
mov
xchg
jmp
test
jl
push
or
push
xchg
add
das
loopne
stos
adc
dec
jmp
and
loop
inc
mov
inc
aad
adc
popa
ins
cwde
pusha
inc
sbb
mov
dec
std
lock
mov
ins
push
or
pop
push
ror
pop
int3
fdivr
push
pop
pop
es
js
leave
in
outs
jnp
les
ret
imul
add
and
inc
inc
jmp
in
or
sub
inc
cld
add
mov
xor
mov
cmp
fld
mov
jbe
xor
and
call
mov
dec
or
and
dec
sbb
pusha
pop
ficom
fsub
jmp
loopne
dec
fs
add
inc
add
xor
daa
add
and
cwde
xlat
popa
loope
or
mov
fdivrp
add
push
(bad)
cdq
sub
jo
push
jle
in
adc
push
xlat
mov
in
ins
sub
out
jne
loope
or
inc
adc
rol
clc
dec
add
xor
jl
es
add
mov
pop
lahf
cmp
test
je
and
or
or
inc
leave
add
mov
and
mov
add
(bad)
ss
es
es
loop
xor
(bad)
pop
push
in
test
movs
call
sub
pop
xor
je
stc
ins
adc
cmp
push
sbb
mov
push
aam
mov
mov
(bad)
imul
mov
and
inc
push
(bad)
and
das
xlat
fidiv
ret
bound
sti
pop
inc
push
ja
push
push
fild
movups
cmovnp
adc
adc
(bad)
jb
loope
sbb
mov
push
adc
lock
loopne
add
pop
inc
jae
xchg
xor
and
shl
add
mov
or
and
push
rcpps
test
jp
mov
push
js
mov
xor
xor
push
cmp
sub
sub
push
sub
arpl
lea
or
inc
and
shr
test
pop
sub
mov
push
cmps
add
leave
mov
dec
imul
dec
fistp
ret
push
or
push
lods
mov
and
cmp
retf
das
inc
es
add
inc
lock
cmp
ss
push
mov
sti
or
nop
cmp
push
inc
cmp
jne
cmp
daa
and
dec
pop
(bad)
push
push
adc
je
push
aad
mov
shl
loop
fwait
or
pop
adc
das
xor
loopne
add
push
jo
(bad)
or
jmp
shr
test
sbb
add
adc
mov
hlt
or
outs
test
outs
out
fisubr
or
in
popf
adc
fsubrp
pop
or
or
movs
and
sbb
dec
cdq
jne
aad
adc
call
lock
lea
inc
adc
movs
dec
sbb
lock
das
mov
mov
push
dec
mov
imul
adc
or
sbb
sar
adc
cmp
sar
mov
ja
add
push
cld
loopne
push
clc
loopne
and
shr
or
adc
jmp
les
shl
mov
(bad)
fidiv
mov
xor
push
inc
or
jecxz
dec
jmp
(bad)
cdq
shr
cdq
mov
ss
call
movs
jmp
inc
enter
mov
or
loop
sbb
add
add
cmp
ins
jmp
mov
jp
outs
cs
sub
add
fadd
sub
sub
dec
jbe
(bad)
adc
loopne
xchg
jne
cmps
std
cmp
das
jmp
cli
popa
mov
mov
mov
add
cmp
pop
icebp
mov
xor
mov
jo
add
push
or
fiadd
movs
test
ret
sub
pop
in
cmp
nop
and
mov
jb
add
push
and
add
cmp
and
inc
mov
mov
cmp
aad
sub
cmp
cmp
je
cmp
fistp
lock
cmp
mul
add
jp
and
inc
push
pop
jle
(bad)
out
cmp
cmp
cmp
jb
jbe
test
inc
inc
mov
add
inc
sbb
xchg
sar
cmp
pop
and
call
sbb
sub
add
pop
jne
pcmpeqw
cmp
cs
popa
sub
add
and
pop
sbb
lea
call
push
cld
or
push
loopne
loop
fadd
inc
mov
mov
inc
jne
shl
sar
shl
adc
cs
shr
jnp
aas
lods
and
mov
jge
mov
mov
pop
dec
inc
mov
jl
cmp
jae
dec
adc
neg
adc
push
jecxz
add
sbb
mov
and
adc
lods
mov
or
fdiv
outs
or
fld
dec
xchg
pop
(bad)
inc
stc
push
push
imul
(bad)
sar
dec
js
and
arpl
into
or
xchg
call
test
dec
dec
scas
dec
(bad)
or
std
es
cld
inc
or
cwde
out
or
stc
jmp
xlat
sub
(bad)
lock
sub
xor
pop
xor
ret
mov
push
mov
jne
dec
sar
and
add
adc
call
icebp
bound
lds
cwde
or
jmp
inc
je
push
bound
push
jl
and
sbb
dec
loopne
adc
dec
jne
push
jmp
push
lds
(bad)
aam
cmp
push
sub
mov
fstp
mov
pop
add
pop
bound
daa
adc
adc
inc
mov
dec
adc
push
jmp
sbb
pop
jb
lock
push
test
icebp
mov
inc
inc
jnp
inc
stos
mov
test
xchg
push
ja
push
mov
inc
ja
shr
rcr
movd
pop
mov
call
ins
and
std
scas
jle
cmp
push
push
lods
ret
or
jmp
sub
and
(bad)
enter
xchg
or
jecxz
add
add
inc
or
mov
xor
sbb
cmp
and
pop
shl
pop
outs
mov
and
fld
sbb
cld
push
adc
stc
or
inc
mov
pusha
adc
daa
je
cmp
adc
mov
in
dec
or
or
loopne
ret
ds
fadd
mov
cmp
mov
cmps
mov
push
sub
mov
push
pop
pop
add
sub
rol
jge
rcr
arpl
mov
add
sbb
push
dec
test
xlat
xor
cdq
push
test
jne
rcr
test
out
fldcw
adc
movs
daa
pop
add
xchg
stos
adc
pop
lods
cmps
scas
sbb
adc
mov
leave
mov
cmp
xchg
mov
push
xchg
test
mov
js
loop
jne
xor
and
mov
dec
add
rol
inc
xor
cdq
inc
cmp
pop
push
sub
ins
jecxz
push
add
or
inc
or
in
clc
push
fstp
jmp
adc
mov
cmp
jg
mov
je
and
ret
hlt
xor
clc
adc
pop
lds
xabort
mov
cmp
ret
push
inc
ins
or
int3
or
jne
mov
inc
or
mov
out
sar
cdq
jmp
push
and
ins
hlt
add
sbb
das
xor
dec
dec
in
xor
ja
and
ret
pop
sbb
inc
mov
adc
or
mov
out
push
add
jne
out
call
ss
mov
add
push
cmps
lock
jo
inc
and
mov
pop
or
pop
xor
ins
cmps
mov
mov
(bad)
mov
adc
(bad)
jo
scas
lock
ror
je
cli
int3
rcl
je
pop
cmc
jmp
dec
shl
adc
sbb
jo
mov
mov
repnz
imul
aas
popa
aam
jmp
in
jmp
in
dec
sbb
nop
aas
dec
stos
adc
loopne
inc
xor
jne
inc
inc
ret
push
out
inc
push
dec
sti
xchg
cmovne
test
adc
pop
cmp
cs
push
xor
pop
push
lods
push
or
mov
rcl
xchg
stos
inc
mov
mov
push
jmp
ds
or
movs
arpl
push
mov
js
stos
inc
(bad)
call
xchg
call
inc
mov
mov
lock
xchg
mov
pusha
or
jns
sub
mov
lea
imul
jmp
push
push
fdivr
dec
jne
dec
sub
mov
or
mov
jmp
inc
shl
mov
inc
add
sbb
push
jo
adc
enter
adc
fiadd
pop
mov
mov
and
inc
inc
cmps
and
push
dec
and
outs
cld
ror
jge
out
jo
or
cld
in
push
xor
(bad)
out
push
rcl
in
pop
mov
jmp
add
push
push
fmul
fdivr
cmps
ins
sti
dec
push
das
in
jne
loope
fadd
fistp
jo
inc
cwde
push
mov
inc
push
retf
xchg
ja
popf
jne
movs
adc
cmp
push
and
fist
fwait
or
shr
or
jge
mov
hlt
and
lock
adc
mov
and
mov
adc
adc
jg
xor
add
daa
imul
pusha
es
push
dec
imul
or
(bad)
dec
pusha
(bad)
jge
cli
add
movs
push
pop
push
ja
and
in
mov
in
xchg
stc
fild
lods
pusha
mov
jmp
loopne
scas
arpl
xchg
sbb
loope
daa
jb
adc
and
sub
fcom
(bad)
sub
inc
mov
or
in
mov
jne
dec
ret
ret
mov
data16
jmp
and
and
pop
pop
in
inc
xlat
and
or
jno
sub
pusha
mov
adc
jne
adc
xor
mov
jno
sbb
inc
jne
push
lahf
add
jae
dec
and
mov
or
jmp
cmp
int3
jo
sbb
xchg
sub
jne
add
add
aas
in
jne
adc
push
shl
add
loope
out
mov
in
shl
or
cdq
xchg
xchg
push
mov
inc
js
cli
jl
(bad)
push
xchg
push
movs
sub
add
cmp
jne
cli
hlt
mov
imul
inc
ficomp
mov
aam
mov
push
dec
cwde
pop
mov
ja
aam
adc
sub
sahf
dec
pop
dec
fisubr
xchg
mov
cs
push
push
cs
lods
test
movs
ret
inc
xchg
xchg
pop
and
es
pop
mov
aad
pop
mov
push
fcomp
(bad)
dec
sar
or
clc
sbb
jle
pop
dec
inc
(bad)
push
icebp
imul
rcr
arpl
shl
push
je
cld
or
jmp
call
pop
cmp
xor
push
leave
or
lahf
imul
push
add
mov
push
ret
imul
push
push
loopne
not
push
loope
jnp
inc
jle
movs
loope
dec
jl
or
sbb
dec
scas
sbb
je
sub
or
and
dec
int3
aam
imul
mov
push
adc
mov
or
jo
sbb
mov
xor
adc
fs
adc
xor
test
or
push
dec
test
push
push
addr16
arpl
jle
xor
and
add
mov
mov
retf
mov
imul
mov
outs
add
jge
daa
mov
shr
and
jl
sbb
es
and
dec
aad
mov
pop
cmps
pusha
pop
adc
mov
mov
pop
call
imul
cmps
sti
cmp
mov
push
loopne
xor
cdq
inc
mov
pushf
cld
sub
ds
mov
call
fdiv
xchg
arpl
cmps
mov
in
popf
push
call
pushf
push
stc
pop
adc
mov
and
inc
push
je
jne
mov
dec
in
hlt
sub
jns
in
add
xchg
cmp
pop
stos
enter
mov
in
sub
shr
test
shr
pop
cs
cmps
sbb
dec
daa
xchg
inc
pushf
in
cmps
stos
jo
cdq
xchg
pop
mov
adc
leave
nop
sbb
std
xchg
xchg
sub
clc
add
imul
inc
mov
add
xor
mov
fs
mov
fbld
jle
pop
cmp
xor
sbb
iret
cmp
adc
jle
sbb
jg
cmp
mov
icebp
inc
mov
sar
enter
jge
inc
ja
inc
xchg
je
ds
cmp
adc
pop
nop
fwait
push
push
ror
cmp
iret
push
pop
adc
in
cmp
jne
in
or
jae
sbb
dec
mov
jl
cmps
mov
cli
add
add
gs
je
push
std
cs
xchg
fs
stc
pop
add
xor
jne
(bad)
ret
xchg
in
jle
arpl
mov
daa
lods
push
fwait
lock
sbb
adc
fidiv
cmp
jp
pop
sub
add
imul
jmp
mov
ja
mov
jnp
dec
into
inc
inc
shr
inc
stc
cmp
je
xchg
movs
data16
popa
adc
mov
cdq
jns
mov
cs
add
(bad)
jmp
dec
imul
adc
cmovae
repnz
or
fstp
movs
aas
inc
push
jle
aam
lds
inc
jne
ja
jo
mov
cmp
add
cmp
cmp
bound
je
rcr
loopne
mov
int3
das
(bad)
es
mov
push
pop
lods
lods
add
scas
jmp
in
shr
mov
dec
jne
mov
adc
inc
cmps
sub
mov
push
clc
xor
clc
xor
ror
ja
pushf
nop
push
arpl
shl
push
dec
cmp
ins
xor
cmp
lahf
aas
and
pop
popa
dec
xor
pop
nop
cmps
push
mov
data16
add
sub
or
inc
fcmovb
jnp
daa
pop
pop
sub
pop
ins
rcl
adc
addr16
imul
ret
mov
ins
ror
ror
mov
mov
test
ret
jecxz
cmp
push
jl
stc
fisub
and
pop
movs
jae
je
pop
jbe
test
mov
in
retf
inc
jle
or
sbb
dec
jmp
and
js
jp
mov
mov
popa
inc
sbb
adc
mov
sbb
dec
dec
leave
or
popf
sbb
enter
int
in
adc
test
inc
adc
mov
mov
scas
movs
sbb
pop
dec
cmp
jmp
and
fcom
and
sbb
add
or
mov
inc
push
mov
fcom
mov
sbb
mov
cmp
add
jno
sbb
cwde
test
inc
fisttp
movs
outs
jle
outs
(bad)
iret
jmp
pop
mov
test
fld
jge
dec
pop
xchg
add
or
push
fidiv
sbb
jl
or
adc
pop
push
or
cmp
mov
(bad)
mov
sbb
jl
or
mov
add
mov
cmp
mov
add
test
cwde
push
imul
jmp
push
push
js
jl
clc
dec
xchg
mov
lock
ret
call
cmp
loop
push
xor
sbb
or
cld
clc
out
ins
inc
push
pop
movs
jmp
(bad)
out
push
push
mov
xchg
js
add
or
mov
jne
inc
inc
dec
xor
add
aaa
sub
sbb
adc
sub
call
lea
pop
inc
mov
mov
inc
push
inc
enter
inc
je
das
xor
in
pop
mov
(bad)
jmp
aaa
inc
cmp
fcomp
ror
push
mov
lock
mov
push
lock
mov
cwde
test
dec
and
jmp
push
outs
sub
push
pop
clc
mov
inc
es
jle
call
or
(bad)
repz
fwait
xchg
mov
xchg
jno
sbb
push
inc
and
dec
xchg
jmp
shr
fstp
pop
in
push
aas
sub
call
addr16
jb
ret
add
pop
jno
dec
or
mov
rdpmc
fcomi
rol
retf
enter
push
inc
push
lods
cmps
push
loope
fist
pop
fld
ja
pop
push
je
add
adc
mov
dec
pop
gs
jmp
push
jno
sbb
add
adc
sub
adc
xor
xchg
inc
jnp
sbb
aaa
xchg
movs
retf
test
(bad)
and
dec
mov
sbb
sbb
cdq
adc
popf
sub
fcomp
sbb
and
fcom
and
retf
add
adc
pop
cmp
inc
stc
jmp
dec
xor
add
test
push
xchg
lock
sbb
mov
mov
xchg
xor
pusha
or
aas
dec
fsubr
push
stos
push
aas
(bad)
and
sub
pop
cmp
inc
cmps
cmp
sbb
(bad)
xchg
(bad)
retf
std
adc
mov
push
js
sbb
xor
mov
mov
push
inc
rcr
mov
cmp
lock
sahf
mov
mov
(bad)
jbe
push
add
rcr
fcmovnu
adc
and
shr
pop
sbb
outs
(bad)
push
clc
aas
sbb
mov
mov
sbb
(bad)
and
dec
mov
sub
hlt
or
shl
dec
out
ror
js
push
fdivr
pusha
or
adc
cdq
mov
pop
dec
mov
mov
loop
add
pop
call
jae
mov
cmps
fist
stos
adc
jns
mov
(bad)
pop
lods
and
lods
push
or
mov
les
or
in
push
push
test
pop
std
dec
dec
push
adc
fcomp
add
cmp
pop
xor
inc
fsub
in
dec
dec
ret
int3
xor
shl
fwait
cmps
imul
shl
(bad)
int3
in
mov
ror
dec
je
xor
add
out
jne
pop
add
push
lds
push
les
int3
leave
jae
fwait
cmp
mov
add
pop
in
mov
(bad)
je
lea
xor
push
xor
enter
popf
pop
repnz
and
xchg
and
cmp
and
fsubr
sub
lds
mov
add
lds
imul
(bad)
sbb
int
mov
pop
jmp
aaa
mov
lods
test
jns
(bad)
div
mov
xchg
jge
(bad)
push
adc
test
je
js
and
pxor
and
out
pop
xchg
adc
inc
fs
cmp
dec
int3
jecxz
and
add
xor
mov
icebp
push
mov
nop
inc
sbb
pop
inc
xchg
out
movs
pushf
jmp
xchg
bound
adc
shl
je
sub
daa
(bad)
inc
xchg
scas
pop
rcl
xchg
xchg
cmp
cmp
inc
cmps
adc
data16
adc
les
aam
(bad)
je
test
stos
jmp
mov
pop
sub
and
rep
push
mov
add
rcr
mov
and
xchg
push
push
test
and
mov
and
shr
das
loopne
dec
adc
mov
lods
pop
mov
push
add
jo
fst
shl
push
addr16
cmp
sbb
xchg
jbe
fcom
jnp
push
mov
jecxz
pop
sbb
cmp
jne
imul
call
inc
mov
jne
jmp
sbb
xor
jge
or
mov
sub
pushf
(bad)
sub
mov
inc
push
test
and
pop
or
sub
ror
xor
jmp
pop
push
adc
leave
push
sub
sets
jecxz
mov
jmp
adc
iret
and
iret
add
xor
mov
adc
mov
ret
mov
dec
ror
sub
je
fcomp
test
adc
shl
jge
mov
sbb
rol
add
ret
add
sub
mov
xchg
arpl
jnp
mov
add
je
cs
dec
mov
sub
arpl
cmp
dec
test
cmps
push
inc
mov
add
call
fidiv
mov
add
ret
add
ins
imul
inc
xor
mov
and
xor
jne
dec
and
pushf
mov
fwait
pusha
pop
inc
xlat
add
mov
jge
or
sub
mul
or
or
nop
or
push
jge
push
xchg
in
or
dec
bound
mov
cmp
and
stos
shr
test
xor
adc
nop
ins
and
sbb
ins
dec
pusha
loopne
pop
cmp
pop
fnstsw
jp
in
ret
(bad)
push
je
and
or
and
lock
lock
xlat
sub
cdq
call
scas
dec
gs
cmp
jae
and
out
jnp
dec
aas
dec
pop
jecxz
loopne
jmp
lahf
ins
push
mov
or
clc
cld
sti
sub
je
out
or
arpl
repz
fst
paddq
xchg
hlt
sbb
imul
cmp
and
lods
lock
(bad)
pusha
adc
add
shl
ror
xchg
jb
add
cmp
loopne
or
(bad)
push
jmp
out
push
or
mov
sub
or
aaa
or
dec
inc
and
jle
xor
mov
push
pop
ror
mov
push
dec
test
daa
mov
and
pop
(bad)
jne
hlt
popa
lock
cmp
mov
leave
loope
adc
and
jl
cmp
mov
lods
inc
rcr
jl
lock
in
test
push
mov
jg
fsubr
(bad)
out
(bad)
cmp
fadd
aam
cmp
ror
mov
xchg
pop
in
inc
push
ins
movs
lock
mov
sbb
(bad)
aaa
ds
cmp
inc
mov
xor
sub
ret
xchg
push
dec
pop
or
clc
in
and
push
je
mov
div
loop
xor
mov
push
data16
popf
(bad)
sar
push
or
inc
jg
jns
call
inc
pop
jne
cmp
jne
ror
lahf
push
ins
mov
and
ins
jnp
xor
mov
rcl
scas
cmp
jp
lea
sub
bound
sahf
xor
aam
mov
cdq
or
cmp
xor
loopne
outs
sub
push
push
push
pusha
adc
cmp
and
jecxz
xor
push
xchg
jb
pop
sub
popa
and
xchg
outs
scas
sub
(bad)
ss
outs
push
fcmovu
or
jle
pop
je
cmp
pop
dec
jmp
inc
cmp
dec
jne
jnp
mov
cmp
dec
add
jmp
rcl
popa
xchg
gs
pop
int3
int3
jbe
cmp
cli
bound
in
add
stos
hlt
popf
inc
sti
and
scas
pop
cdq
out
dec
xlat
das
je
xor
dec
je
movs
and
retf
cmc
xchg
(bad)
lea
ds
mov
sbb
inc
test
push
je
cmp
and
retf
ret
add
push
cli
pop
fstp
call
sub
sbb
(bad)
mov
inc
lods
cwde
or
cmps
(bad)
fdiv
xchg
mov
and
sbb
je
leave
sar
iret
and
clc
pop
les
aad
ins
push
adc
sub
or
mov
call
fld
mov
xchg
pop
sub
call
mov
ins
addr16
xor
mov
sbb
add
call
aas
add
sbb
movs
cmp
dec
sbb
inc
xor
sbb
xor
cmp
and
xor
push
sete
adc
es
outs
in
shl
rcr
pop
loope
mov
inc
pusha
xor
inc
sub
(bad)
(bad)
scas
(bad)
(bad)
and
add
sub
es
mov
ret
out
dec
je
push
(bad)
loopne
mov
add
in
addr16
push
cmp
cdq
mov
stos
mov
int3
inc
les
idiv
sbb
stc
fimul
sbb
or
xlat
fwait
les
or
mov
inc
adc
or
lahf
cmp
dec
pop
pop
mov
sub
pop
jo
ror
pop
shl
hlt
sbb
jo
or
mov
mov
mov
mov
nop
lods
push
push
inc
int
movs
les
fild
sub
out
retf
lods
cmp
ins
sbb
in
test
mov
(bad)
adc
loope
inc
cmp
stc
loope
sbb
jns
push
jle
sbb
dec
je
popf
and
and
jmp
inc
jecxz
jmp
jne
inc
mov
cmp
mov
sbb
add
xorps
pop
xchg
mov
pop
or
or
inc
test
xchg
push
adc
pusha
imul
pop
lods
in
jmp
addr16
add
adc
imul
add
xor
jne
rol
push
pop
inc
retf
add
mov
ffree
rcl
push
cmp
cld
adc
jmp
test
push
jns
jnp
and
fisub
test
jo
test
xchg
adc
sti
or
adc
mov
xor
mov
rol
xor
sub
pop
mov
mov
xor
add
sbb
nop
loop
inc
cwde
and
cmp
mov
push
je
fwait
lock
call
sbb
out
jo
add
int3
shl
sub
or
and
adc
cmp
jns
fnstcw
dec
lock
shl
pop
fwait
push
add
push
mov
and
or
int
cmp
mov
xor
jge
shr
inc
mov
fdiv
rol
clc
in
or
jbe
push
and
mov
inc
jnp
cmp
int3
inc
push
jmp
jno
sub
clc
bnd
sbb
aas
add
mov
mov
push
shl
or
movs
test
xchg
pop
retf
adc
inc
adc
test
push
jmp
add
bound
popa
lea
push
fsubr
or
pop
xor
dec
(bad)
fnstcw
xchg
jo
pop
push
push
(bad)
mov
xchg
xor
and
inc
or
cmc
sub
scas
sbb
push
sub
popf
test
jno
imul
in
push
cmp
mov
xor
js
fnsave
fsubp
xchg
mov
call
xor
xchg
xchg
or
movs
cmc
aad
lea
adc
loope
inc
and
ret
sbb
sbb
sub
sub
mov
push
mov
(bad)
loope
push
std
aam
clc
dec
or
retf
inc
je
sub
adc
fwait
lds
and
out
push
stos
or
jb
sbb
ret
mov
dec
xor
pop
add
push
adc
(bad)
mov
sub
nop
jae
repnz
ror
pop
or
dec
adc
and
sar
mov
dec
in
cmp
call
hlt
cmp
pop
lods
add
ss
add
mov
or
cmovnp
push
and
cmp
xchg
rcl
cs
push
add
dec
test
cmp
and
xor
inc
fs
add
push
enter
aas
jmp
push
(bad)
pop
jl
ret
or
pop
dec
cmp
aad
test
cwde
adc
inc
in
adc
cs
cwde
daa
jecxz
push
jne
push
outs
xor
in
in
(bad)
adc
out
xchg
push
xor
or
add
cmps
dec
xor
das
push
dec
jae
jmp
(bad)
je
cmc
cmp
xor
adc
cs
xchg
fst
inc
je
and
or
xor
(bad)
jmp
sbb
loopne
in
or
(bad)
dec
aad
fwait
or
out
sub
mov
mov
pop
sub
or
mov
imul
adc
pop
sbb
push
mov
sub
xchg
aas
test
inc
aaa
or
xor
or
fs
dec
mov
add
cli
add
fsub
add
mov
jb
fcom
test
xchg
inc
add
cs
clc
xor
js
jae
fwait
and
push
mov
dec
js
lods
adc
pop
cmp
jg
test
add
cmp
mov
jg
cmp
add
dec
jne
and
push
cmps
push
mov
test
or
add
fnsave
cmp
dec
xor
mov
and
mov
imul
sbb
cmp
or
aas
je
(bad)
adc
das
inc
repz
or
inc
pop
xchg
por
sub
xor
xchg
sbb
sub
scas
sbb
inc
xchg
mov
add
mov
xor
push
cmp
aad
lea
fstp
pop
cwde
mov
enter
test
sub
retf
test
cmps
mov
sub
mov
pop
retf
push
pop
mov
mov
(bad)
imul
in
mov
dec
ins
retf
cmp
movs
inc
sub
shl
add
pop
inc
fsub
retf
or
fcom
push
push
sbb
ret
pusha
into
pusha
ret
cmp
or
dec
dec
addr16
mov
rcl
enter
or
push
cmp
adc
les
lds
jb
and
in
jmp
leave
sbb
shl
pop
add
sbb
sbb
mov
push
adc
jg
mov
ret
mov
jns
cmp
inc
xchg
clc
push
loopne
add
jp
in
xchg
mov
cmp
push
mov
sub
(bad)
(bad)
mov
jmp
cmp
push
je
cwde
inc
lods
pop
fldenv
scas
je
jmp
mov
mov
and
or
add
jo
push
xchg
mov
cmp
jne
fisubr
dec
adc
in
leave
jp
dec
mov
adc
add
add
nop
push
dec
pusha
or
idiv
inc
sbb
inc
test
aaa
sub
sti
mov
adc
mov
and
jp
push
or
jbe
inc
adc
idiv
push
loope
pop
mov
sbb
push
call
es
xor
and
ins
test
pop
mov
xor
sub
and
push
adc
fs
aam
loop
push
cmc
jge
in
leave
jecxz
sar
icebp
xor
dec
sbb
push
or
and
pop
adc
pop
add
cmp
test
out
cmp
test
pop
cwde
mov
jae
test
daa
mov
retf
xor
test
mov
add
pop
or
(bad)
push
sub
lds
adc
cs
das
mov
in
or
add
scas
cmp
xor
add
inc
push
push
add
add
loopne
and
sub
rol
xchg
dec
bound
sub
push
lock
dec
pop
test
add
cmp
add
sbb
mov
dec
imul
xor
(bad)
or
sysenter
aaa
xor
mov
fdivr
mov
push
hlt
fimul
jle
mov
and
std
xor
or
ins
sbb
add
mov
or
or
outs
cdq
enter
pusha
ret
jne
dec
sbb
sbb
add
out
pop
or
adc
add
inc
ins
out
xchg
and
sub
dec
xor
push
and
iret
mov
scas
cmps
shl
fucom
xlat
jmp
loopne
mov
or
leave
cmp
imul
lods
adc
push
push
adc
loopne
and
and
adc
jg
and
je
add
mov
fs
mov
nop
sbb
ins
int3
icebp
mov
xor
mov
or
ret
sbb
add
add
les
push
and
mov
imul
icebp
xchg
mov
aaa
add
jno
rcl
popa
jne
icebp
fcom
pop
jmp
push
retf
dec
inc
mov
sbb
popa
pop
ss
xor
mov
mov
mov
push
adc
dec
imul
enter
ins
mov
clc
xor
js
or
lods
pop
fisub
scas
inc
cmps
mov
add
call
sbb
adc
loopne
dec
mov
jbe
test
call
jg
xor
cwde
sbb
aam
cs
jnp
jg
outs
movs
jmp
xor
cmc
and
adc
mov
inc
daa
jl
fdiv
or
sar
push
xchg
mov
xchg
(bad)
dec
push
lock
and
fwait
inc
dec
ret
es
inc
loop
mov
lods
add
xlat
push
mov
js
jne
mov
dec
mov
push
pusha
adc
pop
add
cmp
push
je
lods
data16
sti
dec
mov
xchg
mov
cmps
xor
imul
jbe
jo
shl
pushf
mov
push
dec
push
test
ret
retf
xor
ins
ret
pop
xchg
sbb
leave
add
(bad)
jbe
lds
push
scas
push
and
push
pushf
pop
ins
call
shl
xor
pop
sub
je
push
popf
ds
pop
lds
hlt
dec
mov
jmp
lea
inc
add
int
jno
and
mov
and
js
dec
rcl
or
push
fadd
es
in
gs
sbb
add
pop
jmp
mov
push
add
cmp
adc
add
add
push
ror
(bad)
jmp
push
adc
push
sbb
jmp
neg
add
xor
lea
test
call
mov
das
xor
jge
jmp
pusha
push
jmp
sub
inc
test
inc
stos
cli
dec
sub
or
push
cmp
or
mov
nop
jbe
adc
push
dec
jle
mov
sbb
inc
mov
jle
mov
cmp
fcom
out
sub
leave
inc
xor
(bad)
mov
jg
lock
jl
cmp
jl
xor
add
mov
add
push
nop
xor
test
inc
xchg
adc
test
adc
sbb
jge
inc
(bad)
sbb
push
jo
sbb
mov
arpl
add
(bad)
enter
fst
adc
jg
push
shl
sbb
push
add
mov
loopne
sub
and
adc
push
data16
dec
dec
add
shr
mov
dec
adc
iret
lock
enter
shl
test
or
lock
mov
pop
mov
fld
rol
jmp
or
add
add
ret
add
je
mov
jne
xchg
pop
loope
(bad)
sub
adc
gs
add
lahf
add
out
sub
ret
je
push
sti
pop
push
pop
outs
mov
or
imul
inc
shr
lock
dec
sbb
bound
lds
int
adc
pop
lock
push
dec
xchg
or
xchg
jbe
push
bound
test
cdq
sbb
dec
xor
sbb
movs
jnp
xchg
adc
sbb
pop
dec
dec
jns
cmps
adc
and
sbb
jo
adc
shl
lods
rcl
jmp
sbb
add
imul
loopne
cld
inc
push
idiv
and
not
cld
lock
push
je
imul
clc
sub
cmps
(bad)
push
sbb
test
sbb
(bad)
dec
ins
inc
adc
je
pop
shl
sub
adc
push
jl
adc
std
call
mov
jmp
cmp
xchg
ds
adc
test
sub
or
cmc
jmp
mov
nop
call
enter
and
call
mov
leave
xchg
(bad)
pop
cmp
xchg
test
mov
xor
sbb
dec
mov
or
call
rol
xor
sbb
pop
sti
adc
in
xchg
pop
inc
and
dec
and
fs
add
jne
dec
sbb
sbb
enter
mov
xchg
push
jbe
jecxz
ret
xchg
inc
or
inc
rcl
push
sbb
jne
rol
nop
ds
nop
shl
mov
repz
inc
inc
adc
ret
popa
stc
mov
into
jbe
push
imul
adc
or
sub
xchg
or
dec
sbb
daa
scas
rol
inc
mov
xor
popa
and
rcr
rol
pop
adc
test
inc
cmp
sbb
ret
sbb
add
mov
add
add
pop
int
push
out
es
add
cmp
add
jmp
inc
outs
add
add
popa
add
add
out
dec
and
xor
push
cmp
xchg
loop
push
add
rcr
jns
stos
or
movs
and
popa
lea
pop
jae
aam
adc
lock
(bad)
ffree
out
cmps
pop
and
leave
icebp
sbb
(bad)
nop
out
add
daa
in
inc
in
(bad)
leave
std
inc
or
adc
adc
inc
fadd
loopne
cmp
jbe
xchg
test
add
data16
(bad)
retf
add
cdq
call
fidivr
push
mov
push
or
sahf
or
and
cmp
adc
jo
push
push
jne
sbb
mov
sahf
je
push
adc
clc
and
lea
add
xor
cmp
ins
mov
mov
xor
mov
xchg
js
mov
add
sbb
push
jge
add
inc
ret
push
or
and
in
or
pop
cmp
je
mov
push
inc
lock
shl
sar
push
lock
xchg
call
lock
and
mov
mov
and
inc
and
cmps
outs
pop
inc
push
data16
data16
cmp
(bad)
js
mov
out
xchg
push
jle
push
add
or
test
xlat
out
or
lock
es
pop
int
les
xlat
repnz
inc
out
sbb
mov
or
pop
retf
push
sbb
jge
mov
loope
(bad)
jle
cmp
jl
es
adc
and
pop
nop
inc
add
mov
pop
jno
gs
add
xlat
cmp
and
pop
imul
xor
adc
je
daa
mov
push
mov
ret
dec
dec
ret
push
imul
inc
xor
dec
aam
sbb
xchg
push
adc
sbb
std
in
xchg
adc
fist
mov
pop
cmp
cmc
cmp
jb
adc
loope
cmp
bound
push
inc
inc
jae
mov
jmp
push
cmp
jno
jmp
xor
jnp
pop
or
je
ins
xlat
dec
(bad)
lock
or
(bad)
mov
sub
rcr
mov
sbb
mov
ja
test
or
and
ret
call
shl
shl
push
sbb
mov
push
jae
adc
je
push
jmp
movntps
jo
in
add
loopne
pushf
dec
js
and
lds
add
cmp
jl
jno
mov
cli
pop
ja
shr
lods
in
mov
dec
or
test
shl
sbb
movs
and
pop
and
xchg
push
push
pop
ja
dec
xchg
sbb
loopne
mov
mov
sahf
nop
dec
inc
mov
cmp
bound
jo
jle
mov
sbb
push
in
dec
cs
dec
xchg
push
adc
and
jne
mov
sbb
add
out
inc
mov
mov
pop
enter
enter
dec
mov
sub
ins
inc
sub
test
aad
test
adc
call
je
or
or
push
clc
fcmovnb
sbb
pop
xchg
into
lock
ins
jne
enter
adc
adc
inc
mov
pop
jg
xor
dec
mov
popa
xor
and
xor
inc
aaa
retf
shr
jmp
sbb
repnz
sahf
outs
adc
js
jo
retf
pop
repz
shl
cld
test
push
(bad)
clc
sub
(bad)
int3
nop
ret
rcl
sbb
sahf
xlat
pop
outs
inc
push
or
fadd
sub
mov
add
adc
cld
pusha
and
sbb
xlat
mov
ds
into
add
int3
pop
push
xchg
or
in
xor
mov
ret
mov
sub
js
call
mov
and
cld
add
push
pusha
cmp
adc
in
cmp
xlat
stos
mov
mov
sub
imul
jmp
adc
xlat
adc
adc
sub
xor
imul
push
imul
test
sbb
lds
je
inc
cli
sahf
add
int3
push
nop
je
mov
mov
mov
mov
loopne
pusha
jns
(bad)
call
fdivr
movs
sub
push
push
mov
shl
push
or
icebp
imul
leave
je
in
test
popa
push
in
(bad)
pop
sbb
adc
jb
rdmsr
in
or
cwde
retf
push
sbb
arpl
add
and
inc
xor
jecxz
add
and
mov
add
xchg
jno
xor
add
loop
or
dec
(bad)
push
add
ins
dec
hlt
std
pop
inc
cmp
fimul
cld
inc
or
js
fdivr
dec
inc
into
jmp
cmp
loop
or
rcr
pop
cmp
fadd
xchg
fsubr
pop
je
pop
imul
add
pop
add
or
or
dec
cld
mov
movsx
das
xchg
xor
call
inc
mov
pop
in
jecxz
enter
inc
push
test
push
inc
and
pop
data16
and
fstp
mov
in
mov
(bad)
add
adc
cmp
inc
xor
pop
mov
pop
leave
clc
xchg
xor
mov
sub
(bad)
lods
inc
les
add
lods
shr
jo
or
pop
je
or
jno
dec
in
inc
inc
adc
and
xchg
adc
and
dec
mov
test
test
jae
adc
js
adc
xchg
out
stc
call
in
call
call
test
inc
inc
dec
mov
ds
adc
stos
retf
dec
mov
sub
sbb
or
inc
mov
(bad)
fdiv
sub
mov
sar
nop
jl
add
shl
or
sub
add
dec
mov
ror
enter
or
bound
push
ficom
mov
add
sbb
je
ds
in
and
adc
aad
push
fcom
pop
lds
sub
outs
dec
data16
cmps
mov
dec
inc
nop
push
aas
and
inc
ret
add
sbb
or
add
add
pop
jg
push
dec
mov
lds
pop
mov
pop
div
push
mov
pushf
sbb
inc
shl
jge
(bad)
(bad)
fisttp
test
fcom
add
ror
shr
or
mov
jl
mov
aam
(bad)
lock
imul
inc
add
adc
idiv
dec
push
mov
add
add
dec
add
or
adc
add
aam
inc
mov
jmp
inc
dec
fcomp
or
jno
je
sub
mov
(bad)
call
and
mov
add
cmp
xor
cmp
fdiv
mov
inc
pop
inc
mov
xadd
or
sar
add
add
ret
mov
xchg
ds
je
add
leave
push
call
dec
adc
mov
fcom
add
add
les
inc
adc
cmp
fs
push
sub
pusha
inc
fadd
sub
lods
mov
mov
and
adc
fwait
jge
add
mov
movs
and
test
jg
je
lods
das
push
xacquire
je
sti
inc
cmp
test
xchg
lock
adc
mov
sbb
fimul
(bad)
fs
pusha
pop
mov
add
test
mov
sub
test
js
add
mov
fs
cs
fld
adc
into
xor
clc
add
je
or
retf
xchg
add
cmp
jmp
hlt
add
mov
outs
sti
scas
bound
push
pusha
inc
jmp
or
mov
lock
pop
and
inc
test
sub
adc
mov
dec
jae
or
pop
push
call
cmp
and
stc
pop
ret
jmp
ins
dec
(bad)
clc
or
add
sub
and
gs
push
mov
pop
pop
mov
or
xchg
leave
add
stc
mov
dec
std
and
or
push
and
fst
bnd
add
jns
int3
pop
outs
and
imul
or
test
push
push
inc
or
mov
sahf
pop
int
inc
in
retf
iret
add
jmp
shl
mov
add
mov
xor
daa
and
and
or
or
cdq
xchg
add
cmp
add
or
and
add
add
or
sbb
pop
add
pop
mov
int3
and
mov
add
into
(bad)
clc
mov
sbb
xchg
add
lock
pop
cmc
sbb
adc
stos
movs
call
mov
pop
mov
inc
test
mov
pop
mov
xchg
sub
or
xor
mov
xor
inc
ins
sub
sbb
call
sub
and
inc
enter
xlat
or
je
push
fimul
sbb
cmp
xchg
xchg
add
ss
pop
sbb
xor
imul
ret
cmp
pop
ins
jns
cmps
lds
add
mov
lock
push
ja
xlat
inc
movs
inc
sub
sub
aam
fucomip
mov
add
mov
sbb
pop
leave
(bad)
loopne
push
jl
or
imul
jmp
shl
cmp
gs
sub
pop
mov
cmp
dec
sub
add
add
in
add
in
jmp
xor
and
xor
inc
fnsave
push
ss
adc
sub
inc
loope
and
or
cmp
push
sbb
std
add
je
cmp
and
aam
test
xchg
dec
test
sbb
dec
push
pop
icebp
pop
or
push
pop
ins
push
ins
(bad)
adc
into
adc
jg
movs
xor
push
and
js
in
xchg
loopne
sbb
add
pusha
test
sub
sub
mov
std
add
aaa
ror
mov
add
ror
xchg
jno
jmp
mov
xor
dec
loopne
hlt
outs
fmul
mov
data16
cmp
fucomp
pop
dec
inc
inc
inc
inc
jmp
and
or
rol
pop
sbb
clc
add
adc
shl
cli
jne
xchg
adc
js
fst
sahf
and
rcl
xor
mov
sub
test
add
repnz
mov
loope
cmp
cmp
or
xor
xor
mov
aas
stos
xchg
or
inc
dec
push
push
popf
or
inc
outs
shl
enter
xchg
or
add
jmp
sbb
add
or
sbb
pop
or
cwde
xchg
data16
daa
and
lds
inc
cmp
scas
loop
push
add
les
or
dec
bound
fadd
fiadd
repnz
pop
and
lea
popf
adc
push
and
dec
and
pop
add
or
les
cdq
or
add
cmp
ror
or
jbe
cmp
adc
ss
in
and
sub
loop
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
ins
jo
rcr
jb
js
leave
and
jns
sbb
mov
dec
xor
leave
cwde
pushf
mov
and
imul
rcl
aad
cmp
mov
ss
sub
or
xor
shl
jg
pop
or
xor
movs
dec
adc
cmp
pusha
inc
call
movs
adc
rcl
call
lahf
push
out
add
cli
dec
imul
(bad)
ja
xor
push
stos
add
jmp
les
cs
mov
xor
imul
imul
retf
add
arpl
push
jb
lea
test
jge
mov
and
push
cmp
jne
mov
push
cmp
jne
jge
fwait
cmps
(bad)
es
jne
call
cmp
fst
pop
or
cmp
ret
movzx
push
dec
(bad)
jmp
adc
jno
lahf
out
jmp
std
std
jmp
cld
iret
into
add
jp
jmp
fimul
sar
adc
inc
inc
or
cli
or
mov
sbb
push
sub
jmp
pop
pop
inc
ds
mov
adc
add
mov
sbb
jo
inc
add
(bad)
sub
add
mov
xchg
enter
push
inc
add
and
ds
sub
inc
rol
xchg
pusha
jle
or
sub
push
dec
adc
test
pop
dec
(bad)
and
or
loope
ret
push
sbb
push
pop
pop
adc
je
icebp
popw
cdq
sahf
xchg
xor
mov
push
sub
mov
jmp
sub
aas
add
lea
dec
fdivr
push
je
sahf
adc
jp
clc
fild
(bad)
or
pop
sbb
rcl
push
es
mov
xor
push
inc
push
cmp
js
loop
sub
and
mov
pop
dec
sub
fbstp
mov
je
cmp
jg
and
add
xor
jge
and
cdq
jmp
fist
test
push
add
test
popf
adc
or
movs
cmps
jae
hlt
push
clc
cmp
jle
pop
lea
mov
mov
jg
sbb
add
mul
sbb
pop
add
bnd
xchg
mov
es
fs
data16
cwde
dec
cmp
jo
inc
movs
and
xor
sar
ret
(bad)
in
push
loope
and
mov
dec
es
call
mov
pop
or
outs
and
mov
add
cli
sti
cld
sub
imul
xor
ins
jl
(bad)
cmps
aaa
mov
ret
inc
add
mov
pop
loopne
(bad)
je
pop
jno
retf
sbb
add
not
pop
adc
xchg
xchg
sbb
neg
sbb
mov
je
dec
sbb
add
jmp
mov
adc
jecxz
and
pop
loopne
fld
and
add
push
mov
inc
cli
sbb
add
(bad)
in
ja
push
leave
pop
mov
rcl
data16
push
dec
out
fisttp
retf
sbb
int3
sub
das
add
stos
xor
jmp
je
add
and
sbb
pop
jmp
sahf
call
xchg
ins
jmp
jae
lahf
cld
cmp
pop
xchg
mov
add
in
sahf
jmp
rcr
or
imul
pop
sub
adc
retf
xchg
lock
pop
in
mov
fadd
cmp
cs
int3
enter
mov
repnz
xchg
fst
add
shl
push
neg
jne
das
and
inc
cmp
lock
cmp
iret
repz
call
iret
repz
pop
or
out
add
loopne
leave
adc
dec
test
es
add
es
and
es
test
or
retf
sbb
dec
sub
sub
clc
mov
xor
adc
and
xchg
loopne
arpl
inc
or
and
xchg
mov
mov
mov
cmp
jg
sysenter
push
push
fcom
cmps
adc
fcmovu
fldcw
aaa
mov
add
pop
sbb
addr16
mov
xor
xlat
or
mov
and
mov
aaa
dec
cmp
xchg
fcompp
daa
shr
jb
or
fcomp
fstp
inc
pop
sub
fs
movs
cmc
lods
sub
fcomp
and
mov
div
cmp
sub
push
out
pop
push
mov
adc
and
dec
and
bound
cmp
jne
push
pop
or
test
sub
mov
jmp
mov
add
mov
jecxz
dec
sbb
xor
adc
inc
add
shl
push
test
stc
ret
shr
cmp
pushf
rcr
ja
je
cmp
dec
les
sub
add
mov
stos
and
sub
fdiv
mov
leave
cmovb
sub
cmps
loopne
pushf
test
sub
add
jne
(bad)
adc
ss
and
stos
adc
sub
jnp
inc
fwait
adc
leave
adc
aam
fist
add
es
out
inc
stc
or
or
and
jo
fild
mov
sub
push
int
fdivr
adc
sub
and
ja
cmp
hlt
pop
cmp
out
xchg
inc
data16
or
(bad)
pop
sbb
jnp
ins
or
ret
lea
pop
xor
les
lahf
(bad)
pop
retf
mov
out
cmp
mov
mov
jge
mov
imul
pop
jb
inc
retf
xchg
fnsetpm(287
inc
retf
lds
fst
(bad)
jge
pop
mov
das
xchg
or
add
int3
leave
ins
jb
retf
cmp
ins
adc
(bad)
jge
lods
pop
(bad)
xor
inc
inc
int3
int3
in
cmp
mov
bound
rcl
ins
out
xor
and
int
fwait
sbb
into
int
or
dec
xor
mov
jge
imul
jb
inc
adc
into
mov
into
cmp
sub
mov
dec
pop
out
xor
outs
push
cmp
adc
push
mov
jg
or
loopne
cmp
or
dec
and
pop
pushf
adc
jae
or
outs
sub
xor
test
xchg
or
cmp
xchg
fisttp
fisttp
int3
in
or
fmul
movzx
add
mov
inc
add
add
jl
add
and
scas
in
add
sbb
adc
dec
clc
push
xchg
sub
push
push
sub
or
mov
or
or
or
ins
es
int3
cmp
dec
mov
es
cs
sbb
ret
in
stos
test
pop
adc
ja
sbb
das
sar
xor
ja
push
enter
or
mov
sub
mov
dec
or
mov
or
sub
mov
es
retf
mov
push
adc
jb
loopne
fstp
jmp
dec
pop
sahf
sti
shl
aaa
es
xor
xor
mov
cmp
sub
(bad)
inc
aas
jbe
add
cmp
aaa
adc
and
fabs
or
mov
int3
sub
add
add
fmul
out
pop
add
jns
push
sbb
sub
les
xor
je
inc
jge
adc
or
fisubr
push
push
fnsave
xchg
rcl
add
lods
pusha
cdq
or
push
shl
xor
inc
sbb
xor
and
scas
(bad)
(bad)
je
shl
or
xor
xor
xor
jbe
test
and
(bad)
int
inc
xor
mov
ret
or
jns
out
add
cmp
call
div
and
dec
add
(bad)
mov
and
sbb
fsubrp
and
js
and
hlt
or
adc
adc
cmc
sbb
cmc
cmp
jns
imul
add
cli
and
or
and
add
iret
in
jmp
in
test
test
mov
mov
sub
dec
push
inc
inc
fwait
jbe
and
sbb
push
mov
dec
jne
dec
push
mov
jmp
push
push
adc
sbb
test
dec
or
mov
fsubr
push
push
dec
outs
movups
jmp
out
mov
sbb
(bad)
jmp
dec
fwait
lea
outs
dec
mov
loopne
ret
xchg
push
repnz
in
sbb
or
xchg
ins
out
sbb
mov
(bad)
out
sbb
lods
jo
cmp
adc
nop
call
scas
sbb
loope
sbb
mov
mov
int3
add
adc
pop
mov
xor
outs
test
pop
call
ret
mov
pusha
push
sbb
in
repz
inc
push
jae
sub
dec
lock
std
xchg
sub
push
jb
mov
jo
jb
mov
out
lock
mov
jb
daa
fadd
pop
jae
xchg
dec
or
or
lea
or
push
enter
jle
pushf
cs
imul
test
jnp
push
push
jb
es
push
rcl
ficom
test
mov
rcl
jb
sldt
enter
ss
adc
(bad)
loopne
jmp
jmp
mov
sbb
fcomp
inc
push
mov
add
mov
mov
push
test
xor
cmp
dec
dec
inc
xor
sbb
mov
inc
mov
sbb
data16
outs
pop
mov
cmps
int3
mov
pusha
or
inc
ret
std
pop
jno
mov
jo
sbb
mov
pop
push
ret
rcr
jne
std
adc
mov
loopne
scas
fst
jno
sub
test
sub
icebp
out
or
sub
adc
push
rcl
imul
jae
add
inc
pop
adc
fadd
in
jb
loopne
sbb
and
push
and
enter
cmp
or
sub
sar
cmp
mov
sbb
ja
mov
add
or
jne
xor
repnz
test
fs
and
inc
pop
enter
inc
or
jmp
shl
and
sub
pop
clc
hlt
push
in
xor
cmp
ins
mov
lea
xchg
rcr
ds
pushw
or
fbld
or
push
inc
cs
pop
inc
bound
pushf
or
inc
test
add
push
adc
xchg
cmp
and
ins
xchg
in
mov
(bad)
js
push
add
push
push
sbb
(bad)
stc
sub
sbb
fisubr
lock
pop
or
mov
add
fistp
adc
ret
sbb
ror
lahf
adc
sbb
sbb
push
dec
aas
icebp
ret
adc
aaa
js
mov
push
cmp
leave
jmp
scas
or
lea
push
adc
or
pop
adc
add
push
sbb
js
add
jo
ss
data16
cmp
and
xchg
inc
out
test
and
add
push
xchg
jp
sbb
popa
add
(bad)
jns
pop
sub
xchg
inc
inc
or
scas
adc
adc
jge
cmp
sbb
inc
es
das
sbb
push
popf
clc
cmp
mov
arpl
cwde
mov
push
arpl
sbb
and
sahf
out
and
outs
rol
inc
ret
push
push
ins
ins
call
inc
mov
mov
stos
(bad)
popf
ret
aas
or
push
mov
mov
xlat
dec
mov
fstp
rol
push
jnp
ins
clc
sti
fcom
shl
mov
jl
dec
jae
popa
xchg
fiadd
ja
je
dec
rcl
aas
mov
cmp
xchg
and
lock
sbb
shl
xchg
push
and
loop
or
loopne
addr16
and
dec
mov
cmp
pop
xchg
ss
shl
call
add
nop
add
or
inc
or
(bad)
vaddsubpd
sbb
add
ret
lock
lock
mov
loop
pop
pop
mov
es
dec
and
ss
(bad)
adc
call
pop
sbb
aaa
adc
jle
cmp
xchg
pusha
ss
das
cmp
repnz
je
sub
ds
add
push
fld
in
ds
mov
(bad)
fadd
jle
sbb
push
popf
pop
jg
int3
dec
test
test
fnstsw
jp
or
cmp
dec
jmp
xchg
adc
push
sbb
dec
pop
add
push
sbb
adc
sub
std
inc
je
inc
push
dec
sub
sbb
fild
push
push
and
test
cli
add
loop
adc
aaa
lods
add
sub
jge
xor
leave
or
sub
fmul
inc
mov
pop
and
or
loope
in
dec
push
(bad)
push
lods
imul
mov
push
rol
push
loopne
add
add
pop
add
mov
daa
jp
pop
test
jne
adc
test
jl
xlat
inc
addr16
loopne
stos
movs
stos
pop
pop
and
pop
and
hlt
nop
xor
xor
sub
dec
jo
push
add
dec
add
mov
add
push
jg
adc
sbb
add
inc
rcl
fisttp
call
fwait
callw
pop
xlat
inc
dec
aam
sar
loop
rol
push
(bad)
add
outs
mov
cdq
ins
pop
and
imul
sti
mov
out
mov
inc
loopne
cwde
or
sub
inc
jbe
cmps
and
add
mov
test
mov
jmp
cmp
xor
cmp
add
(bad)
inc
jb
inc
jae
dec
and
ret
push
mov
add
and
shl
xor
jge
pop
sbb
sub
rep
pop
add
cld
loopne
mov
sub
dec
add
fmul
inc
inc
add
mov
cvttps2pi
aam
inc
xchg
xor
cmp
mov
movs
xor
ret
mov
call
mov
push
cld
not
pop
jne
pop
(bad)
pop
popf
je
mov
rcl
dec
and
or
add
int3
and
lock
push
and
push
in
and
ret
or
pop
sub
sar
int
lock
fs
aam
mov
int3
jge
popa
pop
xor
mov
adc
and
hlt
test
iret
push
or
mov
clc
sub
push
lea
xor
add
cli
invd
add
and
pop
push
push
sbb
adc
sbb
pop
and
xor
inc
lock
dec
and
mov
jecxz
push
jmp
mov
cmp
mov
jl
adc
lahf
or
sbb
ja
inc
mov
gs
push
add
push
into
out
inc
push
dec
mov
hlt
es
push
out
and
rol
addr16
cld
mov
movs
sbb
pop
jge
std
pusha
fs
stos
pop
scas
shl
xor
mov
inc
cli
adc
and
(bad)
add
mov
xor
ftst
int3
loop
adc
or
loope
add
sub
inc
test
inc
pop
add
cld
add
pop
add
cmp
clc
retf
lods
add
clc
push
and
leave
or
inc
test
or
add
add
add
xor
jl
jb
cmps
mov
or
test
add
lods
mov
cwde
or
xor
mov
(bad)
add
outs
mov
add
mov
or
mov
sti
ja
or
jmp
xor
stc
jg
bound
test
add
(bad)
(bad)
jmp
ja
retf
frstor
mov
adc
fiadd
mov
add
push
jmp
push
mov
push
je
sbb
into
jmp
jmp
popf
mov
iret
adc
jmp
cmps
mov
inc
dec
or
lods
cmp
sub
add
push
imul
jle
jle
cmp
push
xor
or
push
lods
or
lss
stos
jbe
lds
aaa
add
int3
retfw
fs
jne
pop
mov
add
sbb
jl
sbb
call
pushw
adc
(bad)
jge
sar
cmp
test
ret
mov
mov
jae
imul
sbb
xchg
mov
lock
xchg
outs
repnz
arpl
pop
mov
cs
or
sub
(bad)
ins
aas
call
dec
cwde
adc
pop
pop
jno
jg
inc
jnp
stos
mov
xor
jbe
in
mov
mov
stos
sub
mov
mov
call
jecxz
xor
mov
xor
loopne
sbb
ss
sbb
loope
dec
mov
add
test
mov
jmp
stos
inc
cmp
jmp
test
inc
sbb
adc
cli
and
ins
fild
mov
stc
push
adc
jg
jbe
dec
adc
jecxz
mov
jmp
push
int3
into
and
pusha
xor
pop
xor
dec
mov
dec
pusha
or
loop
jne
mov
and
dec
add
push
shl
jge
xor
aam
fadd
dec
adc
jmp
out
sub
cmp
cmp
fild
mov
adc
push
add
dec
lods
int3
and
(bad)
in
jge
jle
enter
xor
(bad)
jmp
xchg
ret
sub
outs
(bad)
lods
sar
add
xchg
or
sbb
imul
pop
pop
ins
xchg
adc
movshdup
push
xor
push
pop
mov
sub
mov
xor
pop
adc
call
outs
add
dec
dec
ret
shl
xchg
or
pop
mov
and
and
push
lea
pop
push
call
dec
addr16
and
adc
(bad)
std
mov
call
fwait
enter
(bad)
xchg
int3
inc
xor
cmp
rcr
les
and
inc
pusha
retf
push
or
and
or
dec
add
adc
adc
mov
cmp
xchg
dec
or
and
mov
dec
dec
test
fmul
push
fcomp
jle
or
sub
fnstenv
mov
fwait
add
mov
scas
retf
sbb
cmp
leave
xor
movs
(bad)
arpl
movs
xchg
leave
les
pushf
pop
push
xchg
cmp
cwde
sbb
jecxz
mov
xor
cmp
adc
gs
jmp
ins
pop
lock
or
cs
jmp
jge
xchg
sar
retf
dec
adc
inc
mov
neg
repnz
and
mov
sbb
fcom
ins
mov
pop
shl
fnstcw
lods
adc
sahf
dec
mov
aam
add
sbb
aad
call
cli
mov
dec
dec
add
mov
adc
js
clc
(bad)
add
fiadd
fiadd
pop
fiadd
cld
fisub
call
push
in
adc
or
(bad)
jecxz
mov
xor
sbb
pushf
mul
cdq
inc
(bad)
leave
or
(bad)
sub
clc
push
and
mov
retf
into
xchg
into
nop
adc
jmp
mov
add
adc
cdq
call
sbb
jl
jbe
retf
mov
push
xor
mov
xchg
fild
pshufb
xchg
inc
lods
std
or
test
inc
mov
(bad)
inc
inc
xchg
mov
mov
arpl
jge
fimul
push
xor
stos
sahf
out
cmp
not
cmp
sub
jns
pop
leave
and
or
cmovo
jge
mov
pop
clc
mov
out
and
and
push
jle
iret
repz
ror
push
rcl
rcl
aad
iret
repz
xlat
fcomp
(bad)
jle
push
ins
fstp
mov
fst
mov
xchg
add
and
push
add
cs
sub
xchg
ds
cmp
enter
fwait
or
push
add
push
add
cmps
mov
push
xor
mov
sahf
movs
mov
add
clc
mov
retf
test
in
xor
sub
adc
(bad)
es
dec
or
les
push
dec
ins
iret
outs
jne
sbb
push
push
rol
or
sti
or
jmp
push
rol
push
cmps
push
sbb
std
mov
imul
xabort
adc
lea
adc
lea
sar
imul
int
fs
jmp
add
jmp
(bad)
mov
cld
scas
mov
cmc
movs
call
and
and
sti
add
add
jns
inc
fidivr
xor
adc
aam
adc
in
fs
jecxz
add
jns
into
aas
rcl
and
test
xor
stos
add
ins
pop
retf
aas
xor
jae
add
lock
adc
xchg
mov
js
add
addr16
push
add
inc
imul
dec
and
adc
or
or
gs
add
dec
inc
(bad)
inc
ss
xor
movs
adc
clc
cmp
or
add
jp
add
mov
pop
lea
test
or
data16
cmp
lods
data16
movs
add
mov
pop
push
push
in
sub
js
pop
pop
imul
sub
mov
pop
(bad)
jnp
mov
jg
inc
inc
loopne
mov
push
clc
jg
add
jmp
clc
or
adc
stos
cmp
mov
cli
jb
out
adc
or
add
mov
jle
or
sub
mov
not
sub
push
lock
add
out
mov
fucomi
mov
mov
adc
mov
mov
or
mov
pop
jle
lock
movs
jb
div
cli
cli
imul
repnz
or
push
adc
loopne
fdiv
and
ror
sbb
jmp
xor
into
fs
or
add
adc
gs
imul
and
lods
sbb
mov
mov
jne
mov
out
into
loopne
and
leave
inc
cmp
ror
clc
test
cmps
ror
mov
cmc
pop
sbb
jmp
push
imul
dec
push
sub
jmp
sahf
adc
or
jle
je
xor
mov
pop
shl
or
mov
sub
cmp
cmps
fidivr
(bad)
pop
mov
lock
int
inc
lods
jg
mov
cmp
jle
mov
repnz
imul
jl
mov
pop
or
ret
icebp
jmp
fcomp
clc
lahf
test
in
sub
or
dec
(bad)
sbb
ror
test
sbb
pop
xor
xchg
mov
jne
jo
(bad)
sbb
pop
(bad)
dec
sbb
or
outs
addr16
xor
inc
daa
mov
inc
xor
dec
rol
stc
mov
loopne
and
in
addr16
jg
test
and
mov
or
mov
jae
dec
adc
adc
daa
and
xchg
pop
mov
jno
inc
add
lahf
inc
add
xchg
pushf
clc
cmovne
es
pop
push
pop
sub
fs
fdivr
cli
or
sub
xchg
push
or
call
lods
mov
ss
inc
addr16
neg
and
lods
jle
inc
ins
push
loopne
fcom
call
or
imul
adc
xchg
retf
lea
xor
(bad)
rol
(bad)
mov
into
je
(bad)
in
xchg
loopne
add
or
push
retf
lock
fisub
or
sub
adc
shr
or
call
add
push
aaa
mov
and
imul
lock
jmp
lods
add
lea
cmp
out
shl
sub
dec
int3
dec
test
loop
scas
arpl
test
dec
neg
nop
sbb
enter
push
sbb
pop
test
dec
dec
cmp
jge
out
push
mov
cmp
inc
add
dec
cmp
jmp
bound
inc
push
inc
sub
adc
mov
add
test
inc
xor
xor
pop
xor
push
jno
icebp
scas
or
mov
inc
ret
and
add
dec
inc
push
nop
push
add
and
xor
movs
cmp
add
add
pop
imul
ret
loope
cmc
cmp
adc
xor
clc
add
mov
enter
sbb
cld
pusha
adc
add
or
mov
or
rcr
pop
jne
movs
add
call
pop
je
adc
sbb
adc
xchg
cmc
adc
fisub
ret
sbb
outs
xchg
dec
retf
xchg
adc
or
jae
ret
mov
pop
(bad)
mov
mov
pop
and
cmp
xor
into
pusha
rcr
inc
and
sub
ror
pop
pop
sub
inc
jnp
ret
cvtpi2ps
inc
or
mov
hlt
xchg
in
pop
mov
add
retf
or
adc
and
xchg
retf
loopne
lahf
push
or
mov
and
mov
xor
or
and
aad
or
mov
add
jp
push
sbb
adc
mov
mov
add
and
push
shl
and
cld
inc
cmp
fdiv
ret
jne
push
add
cmps
push
cmp
mov
cmp
and
xchg
adc
addr16
or
jae
adc
or
push
dec
scas
jnp
sub
fdiv
and
retf
push
mov
jecxz
add
mov
hlt
sbb
add
daa
add
neg
xchg
sar
push
pop
or
or
in
cmp
add
or
adc
mov
push
pusha
into
mov
mov
pusha
adc
pop
fmul
int
push
dec
sbb
cmp
into
mov
mov
sub
icebp
push
out
push
pop
mov
pop
xor
jno
loope
jl
or
add
add
and
push
pop
mov
lods
pop
xchg
lea
xor
pop
jg
sbb
add
mov
mov
inc
in
retf
sbb
shl
into
xlat
(bad)
daa
daa
add
retf
aad
ds
push
shl
fwait
sbb
test
add
push
(bad)
and
nop
and
sbb
test
nop
inc
add
push
daa
dec
adc
pop
sbb
ins
test
mov
xor
outs
push
cmp
ret
in
or
inc
cdq
je
retf
xchg
das
inc
mov
push
dec
gs
ret
das
adc
aam
xor
or
call
add
mov
and
bound
inc
or
inc
je
lahf
ret
iret
mov
xchg
mov
xchg
gs
es
dec
xor
mov
test
fstp
pop
retf
imul
xor
cli
pop
out
sub
sbb
js
loopne
enter
adc
jo
aam
cmc
and
xor
dec
dec
cwde
or
mov
dec
retf
adc
loope
xchg
inc
jnp
or
movs
jb
shr
or
xchg
ss
sti
js
jg
test
ja
loopne
mov
pop
inc
nop
mov
in
ficom
popf
and
add
mov
mov
cmp
jg
jl
jae
push
stos
adc
stos
cmps
icebp
sbb
and
dec
cdq
pop
push
add
push
jae
jne
mov
add
jle
pop
pop
gs
loop
call
int
call
cwde
fdivr
cmps
xlat
and
dec
sar
fidiv
in
int3
in
inc
adc
pop
or
or
and
popa
mov
or
test
imul
mov
iret
and
(bad)
mov
outs
je
js
pop
cdq
push
dec
and
mov
xlat
jp
mov
rcl
adc
outs
sbb
push
add
mov
rcl
(bad)
js
mov
dec
das
and
pop
repz
push
imul
mov
fimul
repnz
fs
jbe
dec
(bad)
mov
add
ss
(bad)
mov
cmp
cld
test
cmp
adc
ds
jmp
mov
push
inc
push
cmp
inc
fdivrp
add
and
sbb
jns
sub
add
or
dec
lock
out
mov
sbb
test
or
sub
adc
ins
adc
outs
push
ja
dec
in
test
push
lock
adc
shr
cmp
jno
or
outs
in
jne
mov
add
ret
push
sub
call
out
jb
add
dec
pop
dec
(bad)
data16
inc
test
je
or
and
jl
or
mov
dec
pop
inc
jae
sbb
sbb
cmp
pop
adc
push
int
nop
inc
mov
jl
push
xor
pop
or
jne
jmp
pop
or
ins
dec
inc
sub
inc
add
imul
inc
je
and
pop
push
sahf
push
xchg
popa
pop
imul
or
retf
add
sub
push
push
xor
pop
push
xlat
pop
add
adc
mov
ror
clc
adc
jmp
inc
push
hlt
mov
ret
test
jmp
push
repz
dec
mov
push
inc
mov
popf
xor
inc
adc
jmp
test
sub
jb
dec
push
cmovo
retf
movs
call
movsx
ds
sub
add
fs
in
and
loopne
out
or
into
test
inc
sahf
sti
sbb
jge
push
add
mov
add
add
push
es
sub
ss
jne
add
sub
or
jg
inc
bound
xchg
push
cmps
mov
cmp
or
sub
add
mov
xor
jbe
stc
fdivr
jne
(bad)
loop
and
add
mov
repnz
add
ds
adc
je
pop
das
mov
inc
inc
inc
or
and
add
faddp
jp
out
add
data16
rol
arpl
jae
push
xchg
icebp
arpl
sub
add
pop
push
(bad)
scas
bound
scas
mov
repz
clc
adc
and
fwait
push
jmp
pop
pop
push
sbb
fst
addr16
sbb
push
push
cmps
mov
enter
add
or
xor
ins
and
in
jo
and
inc
jecxz
adc
push
jmp
cmc
mov
(bad)
std
dec
and
push
mov
push
or
pop
inc
mov
or
ins
loopne
sub
(bad)
(bad)
dec
xchg
push
push
or
and
sbb
sub
mov
and
pop
or
out
and
pop
sar
(bad)
push
cmp
xor
es
push
loop
or
shr
mov
hlt
and
inc
dec
out
adc
add
cdq
sbb
or
dec
and
ficom
rcr
or
add
cld
mov
ds
sti
mov
mov
jmp
nop
int3
les
es
repnz
sbb
lea
inc
cmp
xchg
lods
ret
shl
and
pop
sub
pop
push
fmul
jae
lds
xor
adc
fiadd
ins
sti
jne
imul
or
push
dec
sub
mov
bswap
fs
add
push
or
sbb
mov
test
shr
shr
lock
loopne
mov
sar
out
mov
sub
mov
and
inc
dec
xchg
xchg
mov
add
pop
dec
mov
sar
xor
sub
mov
adc
(bad)
adc
and
mov
dec
push
aad
cld
sbb
xor
(bad)
(bad)
sbb
and
pop
sbb
repnz
add
jne
sbb
xchg
lea
stos
shl
stos
sbb
jne
xchg
jl
cmp
fs
(bad)
jmp
leave
push
in
(bad)
or
add
call
adc
and
jmp
outs
cmp
lods
jmp
out
sbb
rcr
pop
scas
mov
(bad)
sbb
dec
lahf
mov
in
xor
test
add
clc
inc
pop
pushf
or
shl
sbb
push
jle
push
sub
cmp
dec
popa
sbb
cmp
push
adc
mov
add
mov
xchg
mov
(bad)
leave
mov
sbb
jae
mov
mov
pop
mov
and
and
shl
or
dec
aad
ret
or
mov
int3
push
and
push
(bad)
loopne
sub
push
pop
push
cli
out
or
push
nop
add
not
xchg
fwait
push
mov
aaa
push
sub
test
ins
cmps
aaa
push
xor
jp
jo
inc
add
or
lods
dec
push
dec
or
pop
and
aad
(bad)
ins
push
push
dec
cmc
rol
in
loopne
mov
dec
and
test
clc
jg
mov
loopne
lock
inc
jmp
mov
sbb
sub
inc
or
popf
push
ror
rcl
pop
push
push
cmovge
xchg
ret
mov
jno
inc
jns
and
cld
xchg
ror
sub
or
add
lock
je
clc
gs
out
call
cmp
pop
loopne
adc
daa
and
sar
jmp
inc
sub
add
adc
shr
pop
call
js
sbb
and
xor
or
adc
push
or
bound
dec
push
sub
add
in
rol
dec
xchg
add
addr16
retf
xor
mov
adc
setge
xor
dec
xor
adc
or
inc
outs
and
shr
add
or
mov
pop
es
sbb
lea
or
test
adc
lock
add
adc
test
stos
loopne
es
xor
aas
aad
xor
sub
mov
and
clc
inc
adc
lock
and
movs
pop
mov
jl
and
(bad)
popa
outs
scas
jecxz
jge
je
xchg
call
or
popa
sub
or
adc
cmc
pusha
xor
sub
pop
fbld
and
data16
lock
std
and
pop
adc
pusha
mov
pusha
loope
pop
sub
add
jecxz
dec
sub
adc
fnstsw
pusha
aam
je
pusha
(bad)
ins
and
retf
movs
sbb
sub
jl
cmp
inc
or
es
adc
sti
add
(bad)
daa
inc
in
out
or
fild
mov
(bad)
add
outs
pop
pop
ins
pop
je
or
add
dec
jne
sbb
add
jno
push
sbb
ja
sub
and
inc
test
cmp
and
sub
push
ficomp
sbb
(bad)
sbb
ret
adc
add
inc
fld
fstp
jmp
aam
fild
mov
gs
adc
and
xchg
or
adc
popa
xchg
orps
inc
jecxz
push
test
stc
adc
xor
add
xor
mov
inc
les
and
ret
lea
bound
sbb
sbb
xor
and
jmp
sub
sub
jmp
sub
push
push
or
xchg
xor
fldcw
inc
call
xchg
adc
in
add
(bad)
mov
pop
pop
jnp
or
pop
xor
gs
adc
pop
or
(bad)
mov
into
outs
jge
adc
ficom
mov
add
shl
lock
shl
add
sub
push
fsubr
idiv
out
dec
(bad)
in
push
enter
ud2
in
shr
sbb
xor
mov
int3
loopne
js
ss
mov
push
pop
pop
sub
out
gs
std
mov
push
adc
inc
(bad)
and
je
push
out
adc
add
xchg
xchg
xlat
mov
(bad)
out
jg
inc
ret
pop
and
cdq
or
fstsw
movsx
pop
inc
push
inc
fstcw
popf
and
(bad)
inc
inc
cmps
add
mov
fldcw
cwde
movs
daa
cwde
dec
sbb
mov
pop
ret
and
fld
push
add
je
dec
cdq
push
and
fiadd
dec
out
inc
xchg
je
icebp
fstp
sbb
fldpi
xor
or
sub
jo
loop
rcr
push
dec
sbb
push
scas
xor
ret
dec
frstor
dec
mov
mov
adc
add
push
dec
inc
popa
push
mov
jp
push
ret
aad
test
out
pop
js
cmps
gs
push
loopne
mov
rol
push
and
xchg
xchg
mov
mov
mov
mov
lock
inc
arpl
cmp
lea
cs
sbb
rcr
call
leave
or
pop
div
adc
retf
xor
mov
in
int3
mov
cmp
lods
push
dec
add
test
push
xchg
gs
loopne
sbb
fild
fild
je
inc
pop
test
push
mov
cld
push
mov
sub
adc
fstp
sbb
rcr
popf
cmp
or
dec
test
in
cmp
mov
dec
push
sub
jbe
fimul
es
mov
xor
cmp
jo
adc
inc
je
lea
xor
test
or
mov
out
adc
jbe
mov
(bad)
dec
xchg
ficomp
pusha
lock
es
shl
push
cli
in
xor
or
adc
iret
jo
sbb
mov
or
and
aad
jns
mov
xor
or
into
dec
stos
test
je
or
test
lea
sub
and
test
in
lods
fwait
dec
and
leave
je
imul
retf
loop
mov
mov
mov
mov
aad
(bad)
es
mov
je
jb
mov
cmp
jb
cmp
ja
add
cmp
adc
fs
inc
cmp
jne
cmp
xor
adc
inc
push
out
mov
(bad)
out
inc
pop
jmp
into
outs
and
inc
retf
mov
or
nop
sbb
pop
aad
iret
mov
outs
imul
mov
jbe
inc
mov
lock
cmp
mov
sub
inc
or
aam
in
pop
xor
xchg
or
nop
arpl
push
ret
fwait
in
movs
test
sbb
fs
sub
leave
or
addr16
loopne
movs
popa
xchg
add
call
ja
fucom
mov
sahf
add
pop
xchg
adc
mov
mov
pusha
ins
and
lock
mov
pop
or
iret
jb
and
mov
bound
inc
bound
fisub
push
xor
dec
sub
xor
and
cdq
xor
sub
dec
or
daa
sbb
dec
jmp
int3
or
ins
mov
pop
xchg
nop
mov
in
mov
inc
xor
fld
sub
cmp
or
xchg
xchg
test
mov
out
call
loopne
loopne
push
xchg
sbb
ret
nop
fxch
lock
ins
inc
cmp
jb
sahf
adc
js
(bad)
loopne
mov
repz
arpl
adc
pop
fnstenv
inc
sbb
pusha
ins
pop
stc
jo
inc
test
pushf
jo
jae
mov
sbb
loope
cmp
pop
and
mov
dec
ins
loop
jecxz
or
pop
sbb
stos
loope
pop
adc
dec
inc
sub
das
aad
adc
push
pop
mov
pop
jne
push
pushf
lock
sbb
dec
adc
inc
in
push
in
daa
push
adc
adc
fiadd
mov
or
leave
aam
in
lock
and
sbb
aad
ins
cdq
jbe
inc
je
pop
aaa
in
mov
push
and
das
ficom
xlat
pusha
prefetcht0
sub
call
cmp
out
cwde
out
add
xchg
xor
add
aam
mov
out
adc
and
gs
leave
aam
or
js
dec
leave
or
push
dec
push
popa
sub
mov
test
pop
je
sub
mov
add
xchg
arpl
aad
adc
and
repnz
push
leave
inc
retf
out
dec
dec
adc
bound
hlt
sbb
mov
pop
inc
fild
int3
sbb
enter
push
je
jo
imul
sub
push
scas
mov
fs
dec
push
or
pop
lahf
mov
or
popf
mov
or
jbe
or
dec
xor
in
leave
and
inc
in
add
add
dec
xor
add
pop
or
leave
add
out
and
mov
ror
add
xchg
sub
imul
mov
push
push
fs
inc
ficomp
mov
repz
das
cdq
pop
nop
push
js
xor
es
test
or
cmps
nop
push
xchg
sbb
ret
sub
dec
pop
cs
and
imul
mov
push
sbb
inc
adc
lds
jge
jne
pop
sub
adc
call
imul
pop
enter
inc
mov
iret
mov
ss
aad
in
or
inc
xor
pop
ins
in
jo
or
in
les
mov
nop
icebp
aam
jne
test
rcr
cwde
push
fcomp
xchg
test
in
popf
sub
repnz
inc
mov
fmul
shl
es
cwde
popa
hlt
bnd
jnp
jl
test
pushf
sub
sub
test
add
fisub
cmp
mov
lock
add
cs
jbe
sbb
mov
les
lock
ins
mov
sub
(bad)
jns
ins
jmp
pop
xor
ss
mov
and
inc
outs
loopne
popf
and
fdiv
sti
or
ins
arpl
lahf
(bad)
rcr
ja
pop
mov
or
test
dec
push
add
call
(bad)
fcom
push
mov
test
xchg
inc
cmps
arpl
movs
iret
mov
ror
mov
shl
push
sbb
inc
lds
fwait
(bad)
cwde
xor
dec
mov
dec
cmp
outs
fnstenv
bound
adc
sub
in
cmp
sub
call
sahf
push
cmp
call
loope
dec
mov
mov
jmp
mov
in
cld
in
jmp
paddusb
mov
ret
or
xchg
das
inc
mov
(bad)
or
inc
in
xchg
cld
rcr
sbb
out
pop
enter
loopne
or
imul
inc
pop
repnz
cmp
in
and
and
inc
adc
add
movs
dec
mov
push
cmp
inc
mov
add
jl
aam
jb
cmps
sub
sbb
push
(bad)
pusha
ja
cld
mov
loopne
add
ss
je
movs
jmp
cwde
lock
pushf
enter
adc
jne
mov
xor
sti
pop
jbe
das
ret
aam
pop
gs
lea
(bad)
push
ret
mov
push
sub
cwde
fcmovne
push
fwait
inc
xchg
add
or
mov
push
mov
lock
sub
pop
sbb
xor
inc
pop
xchg
lea
adc
call
nop
in
and
(bad)
sbb
aad
inc
mov
imul
push
in
inc
pop
ins
dec
into
popa
jle
xchg
inc
add
push
ror
xor
ror
in
arpl
js
cmp
or
or
inc
dec
sub
adc
test
inc
adc
xchg
sti
or
test
mov
mov
push
or
xchg
dec
ins
xor
pop
mov
loop
lods
das
mov
aas
lea
test
sub
dec
mov
push
xchg
pop
or
inc
inc
xor
inc
shl
adc
pop
sbb
cmps
dec
pop
dec
call
mov
aas
ror
add
pusha
test
pushf
cld
lock
inc
or
pusha
mov
mov
xor
adc
pop
xorps
adc
rol
or
xchg
jo
dec
popa
lock
in
or
ret
jo
or
push
lock
imul
inc
call
adc
es
test
inc
add
test
mov
dec
sbb
lods
adc
daa
xchg
out
loopne
jb
push
pop
loopne
cmovl
sbb
fwait
sub
sbb
xor
fs
(bad)
fisttp
fdivr
loopne
xor
test
lods
sbb
retf
aam
les
rcl
ror
nop
mov
mov
leave
adc
jle
test
aas
mov
pop
out
outs
daa
mov
add
and
leave
je
adc
or
cmp
aam
cdq
fdiv
push
aad
loopne
aam
or
sub
add
push
das
jnp
fs
leave
(bad)
(bad)
loopne
bnd
adc
cmp
and
mov
nop
test
lods
js
fcmovu
lea
mov
aam
es
and
ss
addr16
jne
fcomp
inc
and
lock
cmc
push
push
xchg
je
xlat
cmp
mov
push
sub
pop
and
xor
cdq
fs
xchg
fidiv
das
int3
loope
jbe
in
and
bound
or
shl
jge
lock
mov
or
pop
or
and
push
movs
and
int3
(bad)
in
loop
adc
lea
std
adc
fadd
test
pushf
jnp
push
dec
pop
adc
ja
push
mov
mov
jne
mov
(bad)
ficom
in
int
dec
dec
in
sub
cmp
lock
dec
mov
out
ficom
xor
in
and
pop
adc
dec
inc
nop
mov
pop
in
and
dec
aas
cwde
dec
xor
fdiv
call
inc
scas
int
and
xchg
sub
stc
je
int3
jae
and
les
sbb
jp
outs
inc
sub
adc
inc
dec
pop
test
addr16
xchg
pushf
sub
ins
lock
or
mov
jl
sbb
dec
sub
dec
test
loopne
or
aas
jno
cmc
(bad)
nop
imul
leave
mov
enter
hlt
xor
push
and
sbb
in
pop
pop
and
xor
movs
xor
sub
or
inc
dec
add
pop
mov
fimul
out
mov
dec
or
repnz
popf
cmp
cmp
fst
inc
cmc
jg
dec
adc
cmps
inc
inc
fmul
inc
push
jl
loop
xchg
jl
cmp
and
jmp
and
test
push
cdq
pusha
and
pop
sub
lea
push
dec
or
sbb
or
and
inc
inc
sbb
xor
add
add
inc
outs
adc
push
or
mov
pop
out
inc
es
add
or
fs
stos
xchg
ss
xor
imul
sbb
jnp
movaps
push
adc
outs
vcmpss
adc
cmp
daa
aas
nop
pop
xchg
cmp
add
xchg
dec
pop
jb
enter
mov
loop
sub
cmps
sbb
scas
mov
pop
jno
jno
jae
sub
les
ret
mov
out
inc
or
mov
xor
stos
cld
and
jmp
jecxz
mov
pop
adc
arpl
push
push
mov
xchg
mov
shl
mov
sbb
test
stos
or
sub
pop
mov
adc
push
shl
sub
test
and
xor
in
mov
fwait
movs
lock
loopne
inc
or
add
sbb
mov
les
push
inc
jg
ja
arpl
pop
push
mov
cmps
lds
sbb
xchg
dec
xor
test
js
pop
jb
mov
add
push
shl
add
push
test
das
mov
xchg
aas
mov
xchg
cwde
les
inc
movs
nop
fcom
pushf
xor
in
pop
inc
dec
and
jg
ins
xor
test
pop
or
rcr
mov
and
jmp
cmps
call
dec
or
das
pop
fcomp
adc
aas
btr
sub
aam
xchg
xchg
popa
xchg
jg
push
nop
add
inc
xchg
mov
in
pop
repz
jb
ret
aaa
or
mov
repnz
xor
mov
int
pusha
fist
lods
stc
imul
retf
inc
std
sbb
pop
not
cmp
push
fdiv
es
(bad)
out
adc
leave
or
sub
adc
add
inc
inc
pop
sub
jge
dec
xchg
push
push
xor
aas
inc
jecxz
mov
or
sub
pop
jns
ret
sbb
jo
and
stc
aas
or
mov
adc
jne
ja
pop
in
pusha
stos
mov
fsub
adc
mov
ror
dec
push
enter
lea
sbb
adc
xchg
or
or
sbb
into
mov
mov
cwde
cmp
movs
enter
and
scas
dec
push
pop
mov
mov
inc
ss
in
inc
jb
rcl
jmp
mov
call
aad
dec
rcr
xor
cmp
in
dec
pop
jmp
push
pop
jb
ins
adc
adc
jns
mov
fcmovne
and
push
jnp
sbb
jae
xchg
xchg
pop
jo
cmp
movs
jmp
sbb
or
inc
sub
jmp
mov
leave
jae
loopne
jb
inc
aam
(bad)
aam
xchg
sbb
std
js
cmp
loopne
aam
sbb
mov
call
adc
mov
cmp
pop
test
jnp
lods
(bad)
mov
das
xor
jb
jno
int3
sub
popa
jb
ja
nop
or
test
sub
sti
cmp
rol
sti
cmps
inc
sbb
cdq
movs
int3
or
aaa
xor
pop
jne
enter
pop
repnz
push
sar
int3
push
push
add
mov
xchg
stos
inc
jno
pop
push
aas
fadd
lds
sub
fwait
jbe
das
ror
mov
add
ret
daa
repz
ins
movs
bswap
mov
inc
mov
cmps
sbb
and
inc
loopne
or
xchg
xor
dec
push
test
push
cs
sbb
sbb
sbb
int3
jo
mov
rol
enter
inc
fisttp
imul
xor
inc
fdiv
inc
and
adc
mov
ret
jmp
xchg
retf
adc
cmp
adc
sub
test
mov
and
adc
shl
inc
sbb
bound
jmp
inc
cmps
nop
test
or
and
cmp
sbb
xor
lods
retf
movs
push
xchg
ins
jo
js
mov
inc
add
push
adc
iret
dec
add
adc
sbb
inc
jb
jns
call
xchg
dec
and
add
imul
test
mov
mov
inc
dec
test
es
sbb
nop
fadd
aam
push
pushf
bound
push
adc
test
dec
mov
add
inc
dec
mov
and
pusha
xor
in
add
adc
mov
inc
push
xor
and
dec
push
nop
sub
or
cmps
push
push
or
push
and
arpl
fstp
mov
enter
push
xor
test
push
fsubr
jbe
pop
hlt
imul
cdq
inc
mov
jns
push
xchg
add
push
or
xor
push
add
sbb
or
push
pop
xor
mov
jl
sbb
cmp
and
jge
cld
mov
mov
jno
adc
in
cmp
mov
sbb
xchg
pop
in
imul
mov
inc
pop
leave
pushf
pop
mov
add
pop
ret
lock
and
lock
cmp
sbb
pop
mov
pop
cmp
inc
int3
sbb
sub
or
xchg
cmps
and
mov
fwait
cmp
nop
push
ins
cld
xor
jno
inc
add
repz
pusha
in
cmp
xor
nop
and
push
inc
jne
cmps
sbb
in
bound
ret
int3
test
mov
loope
cmp
mov
bound
loopne
fmul
in
xchg
mov
test
arpl
lea
xor
das
dec
gs
push
sbb
add
push
xchg
push
retf
push
jb
push
aam
das
popa
imul
ins
(bad)
(bad)
das
push
(bad)
xor
fcomp
enter
addr16
test
movs
rcr
xchg
mov
outs
jmp
nop
or
in
addr16
fs
in
unpcklps
mov
and
cmps
jo
push
ins
outs
jns
aaa
outs
and
inc
inc
imul
or
lock
push
rol
cs
in
push
jge
push
imul
fmul
mov
xor
adc
cmp
jne
mov
and
js
pop
sbb
jne
add
bound
ja
jp
(bad)
ins
pushf
ins
and
add
xchg
ins
jno
imul
nop
(bad)
or
push
push
xor
pop
xlat
lea
fcom
add
in
or
pop
out
(bad)
fmul
ins
jns
and
ins
enter
push
xor
sbb
dec
jae
aam
sti
xor
pop
rcr
or
fcomp
and
or
jb
and
fldenv
xchg
mov
mov
dec
popa
fneni(8087
add
gs
ins
nop
push
xor
push
aad
(bad)
(bad)
in
ins
outs
sbb
(bad)
nop
out
pop
loopne
ins
into
inc
add
outs
in
in
arpl
push
mov
add
sub
in
test
int3
pop
pop
jb
stos
push
scas
sub
outs
aam
mov
out
sbb
sub
int3
enter
(bad)
enter
inc
int3
enter
sub
add
test
inc
cdq
dec
jnp
xor
jno
jge
or
ins
fwait
dec
add
mov
mov
cmp
cmp
mov
iret
dec
push
sub
and
or
mov
jo
adc
mov
shl
mov
mov
aaa
lahf
add
cmc
adc
mov
inc
or
stc
sbb
enter
enter
sbb
rcr
loopne
mov
imul
es
in
fcomp
fcomp
add
nop
dec
fcomp
nop
add
nop
fcomp
fdivr
nop
add
fcomp
fadd
cmps
or
fist
mov
push
call
test
pop
ficomp
or
dec
les
and
inc
or
pop
das
ins
fcmovnu
loopne
das
dec
scas
mov
inc
push
push
clc
mov
mov
jl
push
push
mov
add
out
popa
pop
imul
cmp
adc
inc
mov
or
jmp
mov
pop
sub
popf
cld
cdq
inc
add
inc
dec
leave
cmc
test
and
push
mov
in
jno
and
movs
dec
push
jb
and
mov
les
shl
ja
and
inc
ja
jp
push
loope
and
adc
imul
mov
pop
int3
push
shl
in
or
mov
push
outs
or
dec
sub
sub
loopne
push
js
dec
adc
call
and
fsub
fs
imul
and
jnp
(bad)
jmp
xchg
je
add
or
fisttp
jns
jnp
lea
xlat
(bad)
pop
sub
xchg
fimul
lods
adc
xchg
pusha
mov
punpckldq
aad
cdq
loopne
mov
mov
loopne
jg
push
mov
lahf
jmp
mov
pop
popa
add
call
iret
(bad)
mov
pop
dec
imul
movs
jge
mov
add
aaa
or
mov
mov
loopne
or
mov
in
sub
add
je
jne
outs
ins
adc
dec
call
pop
in
lds
cmp
push
fdivr
fcomp
adc
mov
jge
psubusb
mov
sub
test
mov
or
push
mov
add
shr
popa
mov
test
rcl
aam
or
(bad)
outs
out
sbb
add
sbb
add
mov
test
popa
aam
jns
ror
add
jns
or
and
in
adc
mov
jno
inc
test
sub
(bad)
fld
or
imul
or
xchg
call
xor
test
push
test
jbe
cwde
int3
dec
lock
cmp
mov
ins
test
add
jle
pop
fwait
mov
ds
xor
sub
mov
stc
xchg
pop
jne
imul
sbb
pop
adc
pop
test
test
pop
mov
in
jl
push
jecxz
xchg
sti
sbb
jmp
shl
xchg
scas
push
hlt
adc
adc
shl
test
mov
clc
inc
shl
fld
cmp
pop
nop
dec
cmps
jbe
ins
and
clc
in
mov
mov
xchg
mov
(bad)
popf
aam
jbe
mov
pusha
and
mov
lods
adc
mov
jb
add
adc
(bad)
lods
inc
sub
movs
ret
(bad)
imul
movs
movs
adc
jae
mov
sbb
cmps
in
das
mov
xchg
dec
ins
add
cmp
mov
sbb
push
scas
popa
xchg
and
ja
dec
adc
and
in
adc
sbb
pop
mov
and
std
jae
sbb
and
dec
cmp
shl
ins
dec
sar
inc
pop
dec
dec
in
inc
and
sbb
sub
mov
and
mov
push
mov
popa
cmp
push
sub
lds
xor
fidiv
pop
sbb
push
mov
mov
xchg
xor
jns
push
xchg
push
add
mov
nop
push
nop
push
es
xchg
cmc
inc
xchg
enter
xchg
xchg
mov
add
or
(bad)
and
push
fadd
inc
pop
mov
sbb
adc
cmps
sbb
xor
sbb
xchg
mov
stc
das
call
test
scas
shl
in
or
popa
and
xchg
lods
das
inc
mov
aad
hlt
xchg
sbb
popf
bound
int3
xchg
pop
leave
adc
add
add
inc
inc
xor
popa
test
inc
add
js
and
nop
daa
add
xor
mov
push
imul
call
lods
ret
xchg
push
and
mov
and
loope
std
xchg
addr16
aam
push
and
xchg
cwde
pop
movs
push
mov
lds
in
stos
cmp
pop
shl
test
or
push
xor
mov
add
add
lds
and
arpl
shl
inc
das
sbb
test
xchg
cmp
test
pusha
and
(bad)
mov
movs
test
pop
aad
movs
xor
mov
scas
adc
fwait
inc
bound
and
xchg
sub
push
call
and
fwait
cmp
jl
inc
lods
sbb
popa
add
(bad)
fdivr
mov
adc
inc
(bad)
pushf
sar
sbb
xor
aad
test
xchg
rcl
jae
enter
popf
cmp
xlat
les
cmps
gs
add
add
retf
shl
test
popf
mov
sub
int
nop
in
gs
add
xchg
xchg
xor
sbb
add
jo
sbb
xor
std
movs
xchg
add
push
jb
add
push
nop
loopne
jo
in
jns
shl
out
and
add
cmp
add
add
cmc
push
bound
stos
add
xor
pushf
add
mov
pop
nop
ror
sub
movs
or
lods
add
lahf
jmp
aam
dec
das
mov
mov
inc
xor
or
aam
sbb
das
sub
sar
mov
mov
ror
and
dec
sti
icebp
push
pop
hlt
cmp
mov
dec
adc
mov
mov
dec
or
shl
shl
push
push
adc
pop
repnz
movs
punpckhbw
jge
cmp
cmp
jmp
mov
sub
or
mov
lahf
sub
pop
xor
cmp
stc
mov
jmp
mov
adc
add
lea
add
cld
adc
add
iret
mov
pop
fwait
in
(bad)
add
pop
push
mov
adc
(bad)
or
inc
nop
inc
aas
lods
dec
mov
inc
sbb
dec
jg
(bad)
jae
jns
cmp
or
popa
je
outs
jnp
mov
outs
sbb
das
inc
jb
outs
jb
inc
outs
fs
addr16
lahf
and
sub
push
(bad)
(bad)
std
and
arpl
dec
and
je
and
jbe
cmps
dec
int
(bad)
fistp
popa
gs
outs
je
jae
bound
jae
sbb
mov
push
in
mov
and
sbb
jb
outs
addr16
jo
ins
imul
and
daa
jo
bound
enter
imul
je
arpl
push
sahf
mov
in
arpl
outs
enter
outs
mov
push
ds
cwde
popa
ins
and
xor
xor
xor
jbe
mov
or
mov
sbb
sub
xchg
ins
daa
xor
scas
sahf
fsubr
or
sbb
inc
add
mov
push
xchg
adc
xor
push
idiv
inc
dec
adc
add
popf
push
pop
arpl
jae
dec
mov
ins
pop
pcmpeqd
cmp
std
push
sub
fisttp
arpl
dec
inc
adc
add
sub
fs
jnp
clc
mul
imul
(bad)
out
(bad)
sbb
jl
cwde
push
mov
jae
jne
neg
push
in
inc
jle
data16
jo
pop
scas
mov
mov
jb
cmp
mov
pusha
push
mov
outs
mov
jb
xor
sub
xor
sub
imul
ins
addr16
add
jns
outs
push
cli
mov
popa
ins
imul
push
sub
xchg
and
ds
jne
add
fcmovnbe
movlhps
lock
dec
jae
imul
mov
and
add
lock
ins
cdq
adc
xchg
and
add
sbb
sbb
and
rcl
imul
push
mov
adc
cmp
xchg
mov
cmp
inc
mov
sub
loopne
repz
je
push
sahf
cmp
mov
ret
mov
addr16
dec
mov
jns
(bad)
inc
ffree
in
inc
inc
inc
mov
cmp
mov
ins
add
mov
sbb
sub
pusha
pop
pop
mov
or
cmp
add
cs
jae
(bad)
mov
push
or
ins
jg
push
mov
inc
sub
jg
inc
add
lods
mov
inc
aam
lea
aaa
add
and
or
jmp
ins
pusha
adc
dec
iret
pusha
jnp
jbe
fisttp
ja
adc
lea
test
sub
pop
jnp
bound
push
imul
lds
mov
add
js
mov
movs
dec
adc
push
ins
aad
pop
mov
js
add
cmovns
outs
test
add
std
fidivr
fs
jae
je
jb
and
outs
add
mov
out
add
cmps
push
fs
pop
mov
addr16
mov
jp
scas
xor
adc
sbb
and
test
sbb
push
push
mov
sbb
inc
imul
jb
adc
push
jb
imul
popa
stc
adc
lods
xchg
inc
push
popa
and
cwde
test
stos
add
cmp
es
outs
push
push
out
jo
arpl
bound
lock
arpl
imul
mov
xchg
jmp
xchg
and
movs
sbb
xchg
jl
es
sbb
cmp
or
imul
fbstp
jp
mov
mov
mov
sub
stos
dec
aas
pop
or
jle
xchg
imul
js
rcl
jo
je
stos
sub
pop
leave
add
pop
jae
or
jnp
mov
jnp
call
lods
sub
jmp
and
test
outs
out
je
and
or
inc
push
in
mov
dec
pop
pop
in
in
cmp
stos
mov
jae
xchg
arpl
pop
arpl
push
test
xor
mov
jae
es
push
push
sti
faddp
sub
fwait
jb
not
push
ins
jo
scas
je
neg
test
iret
sbb
outs
pusha
in
push
jp
ins
out
push
gs
scas
aaa
adc
stos
push
lods
jbe
je
jo
dec
mov
rol
add
push
pop
scas
and
retf
movs
rcpps
mov
ss
fstp
je
js
mov
bound
inc
fwait
dec
sbb
sti
push
cmp
adc
adc
movs
mov
pop
push
sbb
and
inc
mov
pop
adc
xor
ins
stc
and
mov
jo
outs
fs
test
or
xlat
gs
loopne
je
in
not
ds
ins
pop
jae
push
xor
fld
adc
or
stos
and
popa
outs
xchg
add
outs
mov
push
gs
shr
aad
outs
ins
sbb
jne
ficomp
ds
sbb
jae
jb
add
cmp
test
xor
push
icebp
movs
mov
shl
push
(bad)
cmc
arpl
mov
push
jb
push
mov
jecxz
sub
in
dec
push
fisttp
pop
int3
mov
pshufw
loopne
push
into
cmps
push
iret
repz
xchg
mov
jns
cmps
fimul
nop
lahf
ds
out
xor
mov
and
xor
xchg
aas
scas
mov
cli
push
out
or
ds
das
pop
test
sahf
fmul
cld
dec
stos
out
or
inc
ffreep
mov
daa
imul
pshufw
jae
imul
fs
and
out
xor
and
push
rcl
bnd
xor
xchg
rol
xlat
stos
add
ins
push
ss
jmp
scas
imul
inc
inc
jbe
adc
imul
and
mov
je
test
ja
dec
add
cmp
test
mov
jb
inc
mov
cmp
dec
scas
adc
ret
jae
addr16
stos
ins
adc
(bad)
jg
jae
ds
mov
pop
mov
pop
add
push
ror
fiadd
xor
aaa
add
js
xchg
push
cmp
shl
sbb
xor
xor
xor
neg
inc
pop
xor
xor
fidiv
out
push
jge
sub
pop
mov
push
cmps
cmp
pop
xor
cmp
sub
jge
inc
push
inc
jecxz
and
jbe
mov
mov
sbb
shl
je
outs
fs
and
jne
jns
ja
test
iret
jae
aam
dec
jb
sub
in
fmul
out
pop
mov
das
dec
rol
aam
push
xor
je
xor
scas
pop
add
icebp
pop
bound
daa
sub
cmc
call
popa
out
nop
call
mov
or
arpl
pop
adc
and
xlat
faddp
ins
dec
arpl
bound
pop
imul
fs
dec
inc
mov
inc
js
sub
test
push
lock
push
cmp
dec
dec
push
lock
push
sahf
jo
inc
dec
and
mov
pop
sti
push
and
(bad)
add
rcr
jo
dec
loopne
adc
jb
ja
xchg
js
xchg
outs
push
fild
cmp
or
xchg
arpl
mov
and
cmp
dec
popf
push
les
mov
push
sbb
pop
push
imul
pop
aaa
ds
scas
pop
inc
mov
adc
adc
inc
out
outs
mov
jb
call
mov
aaa
scas
mov
test
sub
aas
mov
inc
pop
mov
cmp
add
popf
sbb
jno
cmp
outs
sbb
paddq
mov
fwait
mov
rcl
ds
inc
pop
and
cmp
or
fs
jb
call
dec
pop
loope
fcom
jb
inc
add
cmp
sub
nop
inc
in
dec
int3
ins
ror
and
jo
jne
sti
adc
je
outs
mov
or
inc
jmp
jne
test
hlt
dec
stos
into
daa
test
fs
inc
pop
or
pop
xor
shl
pop
pusha
popa
add
sub
push
ja
inc
sub
inc
mov
mov
fwait
mov
fnstenv
jg
test
sbb
jne
aas
movs
jg
inc
inc
inc
popa
imul
xor
mov
loope
je
push
fs
imul
dec
inc
mov
add
sub
sub
pop
push
lds
inc
add
push
aad
fwait
int
imul
xor
bound
push
dec
inc
je
jmpw
jmp
(bad)
push
scas
aaa
inc
mov
mov
or
ja
xor
lock
mov
aaa
jmp
sub
pop
cmp
data16
ds
xor
fucomip
rcl
fsubr
loope
not
fbld
add
xchg
lods
inc
dec
xchg
jnp
xor
inc
push
lock
mov
fsub
(bad)
sub
arpl
popf
pop
lahf
and
imul
xchg
ss
ret
sub
push
mov
adc
call
add
mov
jb
inc
sti
xchg
push
movs
rcr
(bad)
jnp
dec
data16
inc
pop
sbb
xchg
push
inc
and
inc
je
dec
push
push
inc
push
push
or
dec
dec
dec
inc
dec
push
or
or
dec
addr16
dec
adc
adc
pop
add
je
jmp
push
push
inc
sbb
ds
sbb
xchg
mov
xor
dec
add
push
mov
inc
xlat
mov
ins
push
cmps
lahf
xor
dec
or
and
mov
mov
jo
sub
imul
xchg
add
xor
xor
outs
sbb
cmp
push
jnp
and
pop
or
sub
dec
dec
inc
pop
add
cmps
push
and
cs
stos
inc
pop
inc
push
push
arpl
inc
add
fnstsw
push
sbb
cmp
jne
loope
aaa
(bad)
cmp
inc
cmp
out
jge
out
xor
push
xor
xor
cmp
sbb
ja
sub
pop
aaa
jbe
inc
xor
fwait
add
add
ret
(bad)
jns
jmp
pushw
jg
add
add
xor
adc
adc
or
jmp
mov
fisttp
test
jae
mov
push
inc
outs
rcl
imul
push
dec
fiadd
push
xor
push
sub
inc
cli
or
outs
or
ins
sbb
mov
hlt
mov
or
fwait
cmp
jne
add
pop
bound
retf
mov
js
cmps
xor
and
dec
xchg
out
stc
mov
pop
push
cs
cld
stos
sbb
inc
or
inc
jne
outs
sbb
ins
pop
jns
sub
rcl
inc
push
aaa
add
mov
fisttp
cmp
cmp
shl
arpl
or
icebp
gs
push
scas
aas
dec
or
dec
push
and
push
jmp
sahf
faddp
(bad)
push
inc
push
push
out
push
push
pop
pop
fiadd
sbb
sbb
push
jne
je
scas
pop
daa
adc
daa
pop
mov
ffree
cmp
xchg
or
shr
call
pop
inc
mov
xchg
fmul
dec
idiv
push
sbb
fwait
clc
mov
ins
xchg
or
dec
sub
or
scas
mov
in
cwde
and
add
iret
jb
sub
inc
addr16
add
outs
mov
shr
(bad)
(bad)
call
xor
adc
dec
bound
xchg
inc
jno
ja
and
lahf
aaa
(bad)
jae
(bad)
(bad)
(bad)
jmp
dec
xchg
xchg
dec
les
int
popa
mov
mov
pop
les
jmp
mov
and
xchg
pop
lods
bound
jo
jmp
push
pop
loope
ret
mov
(bad)
(bad)
(bad)
jmp
repnz
sub
push
xchg
push
call
popa
sub
or
arpl
xchg
add
inc
pop
adc
sub
cmp
dec
jae
or
clc
and
mov
in
jg
sub
cmp
xor
cmp
nop
mov
dec
dec
int
add
mov
test
push
in
ja
adc
outs
lock
daa
mov
dec
jp
ja
gs
shl
inc
data16
pop
ins
cmp
jbe
sub
cmpps
arpl
push
cmps
xlat
dec
es
arpl
imul
xchg
(bad)
add
shr
adc
pop
ret
jno
and
icebp
das
ret
sub
xor
sub
and
outs
js
or
data16
sbb
nop
enter
loope
sbb
or
fs
dec
pop
push
outs
cmp
test
sahf
outs
xor
push
jmp
je
test
xor
or
mov
and
push
xor
add
(bad)
je
lock
jbe
inc
pop
adc
dec
pop
add
mov
fwait
sub
add
push
fild
or
jecxz
push
inc
ins
mov
idiv
(bad)
ss
dec
push
xlat
pusha
or
push
pop
sbb
out
xor
repz
and
repz
xchg
ss
int
add
pop
or
fld
adc
adc
sbb
and
sub
fwait
int
iret
xor
inc
mov
mov
adc
(bad)
mov
fldcw
inc
popa
xchg
sbb
sub
int
mov
add
or
adc
mov
xor
pop
add
ss
int
add
dec
str
fld
cwde
or
and
das
call
je
xchg
ins
push
(bad)
test
jmp
lea
ins
dec
popa
jo
shr
mov
and
xchg
rol
dec
push
(bad)
add
jo
sub
ins
xchg
out
cli
call
jae
pusha
push
sbb
adc
mov
sub
inc
and
push
or
gs
in
inc
or
pusha
push
adc
popa
xchg
jo
xchg
push
cmp
lods
xor
xor
inc
add
adc
add
sub
sub
je
mov
adc
aas
outs
and
pop
mov
outs
cs
sub
dec
jae
push
test
push
cmp
ret
or
pop
hlt
and
lods
dec
repnz
push
and
push
ret
sub
sub
add
cli
nop
cmp
inc
jl
jae
adc
aad
out
jecxz
or
jmp
dec
gs
sub
or
sbb
push
aas
pop
push
adc
rcr
lods
pop
add
inc
mov
lds
dec
mov
adc
xchg
test
fisubr
icebp
(bad)
sub
les
stos
adc
and
sub
mov
jo
gs
out
push
test
test
fbstp
and
push
inc
or
shl
jecxz
sbb
movs
(bad)
outs
dec
xor
dec
inc
sbb
pop
outs
and
push
ins
loop
jo
rcr
inc
sub
and
icebp
sub
push
je
bound
dec
push
mov
sti
jmp
or
dec
jae
mov
jmp
adc
imul
inc
and
(bad)
call
mov
mov
push
jg
out
mov
outs
add
ficom
xchg
cmps
add
dec
jae
push
(bad)
pop
lahf
push
sbb
test
inc
jae
stos
sbb
(bad)
fild
imul
gs
pavgb
lods
or
add
lods
loopne
push
mov
cmp
rcl
stos
(bad)
xchg
(bad)
sub
(bad)
and
or
je
retf
add
faddp
ficom
bound
mov
in
ja
scas
mov
(bad)
ins
mov
adc
cmp
sub
lahf
lahf
push
lods
fisub
lahf
ret
push
test
rol
out
inc
imul
adc
push
adc
add
test
add
dec
mov
scas
(bad)
dec
inc
xchg
mov
mov
xor
ins
test
pushf
xchg
fwait
jp
push
mov
neg
xchg
fistp
lods
adc
mov
arpl
mov
xchg
inc
data16
push
dec
lahf
dec
or
dec
outs
aam
out
inc
jbe
dec
outs
xor
and
movs
inc
and
ss
push
inc
mov
and
mov
out
inc
mov
sub
fiadd
movs
or
dec
nop
push
les
ins
jmp
add
cli
fucomip
gs
pop
mov
ja
add
fs
or
daa
fbld
cmp
or
ja
dec
jne
sbb
mov
mov
ins
ins
out
fs
imul
mov
mov
jbe
add
adc
inc
xor
in
mov
bound
xor
mov
sub
pop
sti
xor
ss
ss
jae
or
xchg
add
mov
adc
or
xor
sub
in
js
mov
ss
std
js
cmps
pop
jae
jb
xchg
push
(bad)
mov
jnp
fild
mov
push
push
sbb
pop
dec
jmp
jb
aaa
mov
popa
in
inc
push
dec
sbb
adc
repz
and
jle
adc
and
outs
mov
cs
neg
inc
pop
jnp
jnp
lods
add
pop
lahf
and
sub
adc
iret
scas
sub
not
mov
push
add
push
push
inc
sar
inc
cmp
sub
add
sbb
sub
dec
add
mov
add
data16
jae
mov
inc
mov
imul
xor
cs
mov
and
inc
add
push
shl
xor
cmp
pop
dec
(bad)
sub
and
add
mov
and
cli
add
pop
pop
ins
pop
or
mov
pop
mov
push
and
fbstp
mov
ret
addr16
dec
jne
gs
add
mov
dec
dec
dec
push
push
inc
dec
inc
inc
dec
push
push
ins
push
scas
mov
loop
imul
call
stos
jbe
jge
test
push
popa
push
mov
shl
mov
or
fsub
mov
push
add
mov
and
test
call
mov
fs
cmp
pop
aad
dec
neg
adc
cvttps2pi
dec
sub
add
push
pop
mov
jmp
mov
dec
bound
shl
das
lods
mov
rcr
add
xchg
sbb
mov
pop
xchg
ja
addr16
test
into
push
inc
mov
add
je
mov
shl
out
xor
test
mov
push
dec
add
adc
mov
dec
cs
add
mov
dec
dec
and
xor
push
push
dec
call
mov
dec
fild
push
push
ja
inc
adc
lgdtd
jae
pop
or
add
jecxz
jg
cmp
jo
jno
jg
pop
xor
or
inc
jo
inc
jl
jmp
outs
pop
inc
mov
mov
cmp
dec
inc
sbb
imul
jmp
popa
pop
btr
or
sbb
sbb
and
xchg
arpl
mov
ja
shr
int
sbb
movs
adc
out
and
jg
movs
arpl
adc
inc
rcl
sub
push
popa
push
push
cmc
inc
dec
lods
dec
jmp
dec
(bad)
sysenter
cmps
hlt
inc
add
dec
dec
push
xor
sub
addr16
xchg
sub
pop
and
jne
pop
mov
jns
repnz
inc
push
push
ret
cs
xor
es
pop
xor
adc
rcl
cld
cdq
cmp
ins
(bad)
inc
xchg
sti
cmp
dec
mov
jmp
pop
pop
xchg
xchg
repz
stos
and
std
add
push
lods
ror
mov
adc
jp
test
dec
inc
(bad)
in
rcl
or
push
mov
push
cmps
mov
popf
shl
inc
cli
and
cmp
ss
cmp
into
fidiv
ss
cmp
fstp
or
inc
push
xor
fs
mov
jbe
jge
and
out
push
mov
movs
jb
cmp
sbb
das
inc
sub
pop
jl
dec
mul
inc
inc
add
outs
imul
adc
adc
or
push
xor
xchg
aas
rol
cmp
mov
jg
test
sub
mov
or
inc
xchg
dec
jecxz
inc
pop
and
push
or
repnz
jl
inc
imul
add
arpl
push
sbb
test
pushf
mov
arpl
dec
lods
sar
sub
fild
jmp
push
xchg
int
in
xor
cs
fild
movs
stos
inc
push
imul
aaa
inc
mov
push
fcomp
mov
mov
in
xchg
aaa
loopne
cwde
pop
(bad)
and
out
loopne
add
scas
bound
pop
movs
add
jo
out
pop
pop
push
shl
sbb
jecxz
or
cli
dec
or
mov
fucomp
scas
ins
fild
movs
push
rcl
fild
(bad)
lahf
add
gs
sbb
jne
xor
inc
or
out
dec
inc
and
jae
pop
pop
ret
out
shr
out
lahf
js
stos
or
fidivr
and
aas
stos
lea
rcl
xchg
add
push
add
jnp
(bad)
sbb
popa
jne
add
imul
mov
adc
scas
outs
mov
push
addr16
ja
inc
and
push
jbe
add
ror
push
daa
pop
and
(bad)
gs
mov
mov
mov
dec
das
(bad)
(bad)
or
pop
cmp
pop
jb
out
add
rol
sbb
sub
sub
jg
and
test
xchg
je
call
and
stc
pop
sti
jbe
scas
inc
sbb
inc
add
out
fwait
push
push
push
das
jmp
inc
xlat
adc
jp
dec
into
or
xor
pop
add
out
adc
cmp
outs
arpl
inc
inc
lods
cwde
jge
stos
mov
arpl
les
fcmovnu
inc
dec
push
dec
inc
push
fcmovnu
push
mov
imul
xlat
jl
push
aam
cmps
repnz
push
pop
push
and
and
imul
jl
(bad)
popa
jo
jae
cmp
ds
je
test
ja
xor
jp
push
or
fwait
and
imul
sbb
call
sbb
jb
gs
fstp
gs
push
lods
iret
inc
fwait
out
mov
bound
test
jb
push
mov
mov
xor
lods
push
add
xor
stos
sbb
xchg
inc
mov
ds
pop
pop
sub
stos
add
xchg
and
sbb
xor
push
(bad)
dec
push
dec
adc
xchg
popa
in
sbb
mov
rol
psignb
sub
fdivr
ja
leave
add
lods
call
xor
es
shr
adc
adc
or
sbb
inc
inc
jp
inc
rol
imul
inc
dec
jg
sub
loop
sbb
pop
ja
scas
rcl
add
das
sub
ucomiss
je
push
lea
add
push
inc
mov
xchg
nop
jge
or
push
gs
or
shl
and
jl
inc
dec
push
mov
inc
pop
sbb
add
inc
inc
mov
dec
outs
jbe
mov
mov
add
jecxz
push
outs
jae
and
xor
scas
sub
loopne
icebp
lahf
data16
retf
outs
inc
ins
imul
test
or
and
(bad)
repnz
add
jo
mov
sbb
inc
ins
addr16
xchg
ds
sub
dec
dec
push
dec
jo
popa
inc
or
mov
rol
xchg
mov
jmp
dec
imul
loopne
dec
inc
or
mov
lea
cmp
imul
sbb
push
lea
xor
mov
xchg
ss
rcl
xchg
push
push
fldenv
xor
ror
and
arpl
outs
lahf
mov
sahf
mov
and
outs
sti
(bad)
push
inc
push
add
data16
cmp
mov
cmp
iret
xor
pusha
jo
pop
lds
mov
lahf
and
mov
scas
dec
cs
les
mov
or
outs
push
add
gs
inc
das
add
push
add
or
sbb
inc
les
dec
ss
mov
pop
push
sbb
xchg
pop
lds
add
adc
xlat
das
cs
mov
adc
inc
lahf
ret
and
add
daa
push
adc
mov
out
cli
pop
pop
or
dec
jbe
dec
inc
push
dec
inc
aaa
xor
dec
ins
mov
xlat
adc
aas
xor
imul
je
sbb
sbb
fld
sub
fadd
push
out
mov
rcl
add
stos
add
sub
jno
scas
in
fsubr
add
xchg
sahf
or
mov
dec
imul
mov
je
outs
mov
(bad)
jmp
ret
outs
inc
pop
adc
xor
call
out
popa
rcr
xchg
sbb
inc
mov
pop
leave
arpl
mov
xchg
cs
push
push
stos
jo
out
or
mov
jns
lds
loope
outs
jne
mov
mov
retf
pop
sub
xchg
daa
pushf
adc
lods
out
inc
or
add
pop
ror
outs
jno
add
aas
(bad)
lods
adc
adc
movs
fimul
add
shl
xor
jo
ret
icebp
nop
rcl
js
mov
sbb
inc
test
xor
into
lods
pop
clc
adc
and
sub
sbb
ins
jne
xor
icebp
outs
call
ss
in
mov
ds
xchg
leave
sbb
inc
sahf
or
mov
pop
rol
push
inc
pusha
adc
add
push
adc
stos
mov
mov
rcl
pop
pop
cmp
mov
jnp
sahf
xchg
jle
sbb
mov
push
or
arpl
add
or
test
imul
cwde
pop
sub
add
inc
mov
add
rol
out
sub
sub
(bad)
or
ins
add
xlat
(bad)
adc
mov
fist
push
add
fbld
or
stos
xchg
and
sub
iret
test
shl
popa
sbb
sbb
mov
mov
and
jg
jnp
mov
and
daa
cs
xchg
mov
shl
push
aas
call
jne
ss
and
push
add
ficomp
movs
arpl
ins
test
stos
jecxz
dec
aas
push
jge
pusha
sub
inc
aaa
outs
or
fwait
or
add
aas
inc
scas
sub
sbb
loope
pusha
inc
or
rcl
sub
inc
mov
je
ret
adc
ds
les
mov
pop
fstp
popf
dec
les
cmp
call
pop
ins
mov
cmova
and
cmp
pop
add
pop
out
inc
sbb
(bad)
cs
gs
rol
xor
ja
add
or
ds
pop
inc
outs
(bad)
mov
push
imul
js
inc
js
sbb
inc
mul
je
push
inc
add
push
push
xchg
jg
push
movs
adc
mov
dec
mov
stos
and
(bad)
lds
shl
add
pop
sti
xor
dec
pop
pop
stos
ins
sub
ja
popf
cdq
mov
adc
push
in
mov
or
jbe
loop
call
gs
push
push
inc
ja
lods
test
stos
inc
aas
sar
cmp
dec
pop
jnp
xor
sbb
test
push
pop
rcl
psubq
imul
fimul
(bad)
cmps
(bad)
outs
js
and
scas
mov
or
push
jb
push
push
inc
xchg
adc
call
addr16
rcl
adc
or
adc
mov
mov
fld
or
mov
and
arpl
mov
cmps
lea
ja
sbb
push
push
mul
xlat
bound
xchg
push
xor
stos
sub
test
inc
xchg
repz
xor
pop
dec
push
mov
jnp
ss
or
push
aaa
aas
lock
cmp
pusha
ins
aam
push
and
dec
and
dec
cmp
(bad)
push
dec
pop
mov
pop
xor
in
lock
jb
arpl
inc
add
idiv
dec
cs
add
popf
ret
add
push
add
xor
add
jnp
pop
stos
add
mov
imul
arpl
popa
mov
push
rol
jnp
jp
push
adc
xor
sbb
pop
cmp
cmp
sub
daa
cmp
or
add
jl
dec
dec
popa
cmp
icebp
sub
or
add
xor
jecxz
call
data16
pop
and
lock
inc
push
push
mov
lahf
scas
dec
imul
int
adc
pop
pop
pop
fwait
in
shr
jbe
pop
push
and
sbb
and
inc
aaa
and
cs
pop
mov
adc
jp
jno
outs
into
aas
or
inc
inc
dec
mov
or
sub
adc
xchg
add
sahf
push
pop
mov
(bad)
sbb
or
imul
adc
add
jno
je
and
pop
outs
sahf
(bad)
(bad)
pop
mov
inc
popa
pop
inc
and
add
jo
pop
push
or
mov
shl
leave
(bad)
jno
js
push
gs
aad
sub
lahf
mov
rol
popa
das
(bad)
mov
push
arpl
mov
xchg
inc
out
test
add
inc
jne
mov
inc
mov
and
in
jmp
cmp
inc
js
cmp
jne
sub
imul
adc
out
sbb
push
mov
xor
mov
add
fadd
es
jno
rol
mov
rcl
outs
loopne
(bad)
pusha
call
push
dec
add
add
ret
das
ins
adc
outs
or
inc
outs
outs
jb
rcl
and
mov
ins
sub
inc
and
mov
or
shl
and
test
lock
mulps
imul
test
adc
sbb
imul
test
(bad)
mov
shr
jno
retf
mov
mov
sub
bound
(bad)
or
and
xor
ins
sbb
push
lods
xor
cmp
test
or
add
mov
pop
daa
jbe
xor
sbb
movs
cmp
lods
mov
sub
xlat
xor
sub
jne
addr16
pop
scas
outs
dec
outs
inc
mov
push
jo
ins
outs
xor
and
jno
adc
scas
jnp
jo
adc
imul
pop
js
shr
push
cdq
xchg
or
mov
sar
xchg
push
ja
imul
stos
sbb
mov
sub
(bad)
aam
repnz
aas
cmc
(bad)
sub
cwde
test
adc
add
and
pop
xor
jae
sub
rcr
inc
arpl
xor
and
xchg
xor
and
push
sbb
test
addr16
iret
xchg
push
retf
push
xchg
imul
and
es
push
scas
shr
and
ja
xor
ss
int
cmps
ja
ret
pushf
jnp
jns
fwait
jb
fldcw
aas
jp
jbe
iret
test
jle
es
add
inc
add
cwde
dec
mov
push
sbb
sbb
adc
dec
and
inc
ins
pop
push
cmp
mov
xchg
and
pusha
arpl
call
mov
iret
or
fnstsw
mov
add
jg
push
pop
adc
adc
mov
mov
ins
lea
inc
test
test
pop
aad
aaa
loopne
cmp
into
jle
or
pop
jl
mov
pop
mov
push
sbb
into
ins
inc
das
pusha
ret
sbb
push
pop
inc
xor
das
pusha
inc
sbb
lods
cmc
jecxz
popf
test
jns
mov
or
jmp
out
outs
rol
mov
adc
paddq
inc
dec
imul
shr
add
test
and
dec
or
popa
mov
cmp
mov
fbstp
sbb
xor
push
dec
pop
adc
pop
test
mov
stos
adc
imul
iret
inc
out
push
sbb
sub
arpl
pop
sbb
stos
unpckhps
add
(bad)
cmc
dec
mov
xor
popf
sub
and
lods
ficom
push
push
and
push
sbb
adc
test
cmc
bound
push
test
popf
xor
xchg
pusha
dec
adc
dec
stos
add
scas
inc
add
sub
push
mov
mov
pop
push
xor
mov
dec
adc
adc
or
pusha
movs
fistp
xor
and
add
in
hlt
pop
pop
add
pushf
mov
ins
lahf
inc
add
push
imul
out
push
jmp
outs
out
push
and
mov
ins
push
sub
push
mov
aas
mov
mov
(bad)
pop
jmp
int
stos
adc
push
stos
or
push
jmp
xor
mov
push
imul
sbb
aam
and
jle
out
sub
mov
mov
xchg
inc
(bad)
push
push
imul
shr
push
push
mov
mov
inc
pusha
lods
adc
xor
push
mov
mov
mov
test
out
adc
adc
mov
movs
adc
sbb
out
lea
dec
push
das
and
pop
retf
cmps
mov
mov
or
lea
adc
lahf
test
daa
jmp
retf
int
(bad)
add
and
adc
mov
mov
sub
inc
lahf
pop
pop
and
xchg
add
add
mov
adc
push
inc
pop
push
iret
fiadd
push
adc
addr16
add
inc
(bad)
dec
movs
aad
inc
pop
inc
adc
adc
pop
xchg
sbb
pminub
or
xchg
add
inc
push
shr
add
clts
jge
inc
(bad)
(bad)
int3
inc
add
(bad)
int
fwait
int
pop
(bad)
sub
das
and
pop
mov
xor
cmp
mov
mov
jns
lds
sub
pop
and
mov
xor
imul
cmp
aaa
push
mov
div
(bad)
call
cld
mov
aas
mov
mov
sub
ror
mov
lea
stos
shr
imul
inc
mov
push
sar
jne
push
push
xchg
push
loope
cmp
jne
inc
or
sbb
iret
inc
push
xor
(bad)
xchg
inc
and
mov
push
push
sub
sub
aad
push
daa
jg
mov
push
push
call
inc
sub
sub
movs
mov
dec
inc
lahf
xchg
mov
inc
and
mov
push
cmp
mov
lahf
lahf
in
sbb
mov
mov
sbb
adc
or
shl
push
jb
mov
adc
ret
dec
add
and
sbb
scas
sub
or
add
mov
fsubr
cmp
ss
add
xchg
push
pusha
pop
sub
arpl
std
and
jnp
add
ins
gs
xchg
pop
dec
or
pop
mov
int
cmp
mov
mov
mov
dec
or
inc
test
aam
add
push
push
adc
iret
inc
and
aam
ror
dec
mov
or
or
pop
int3
jne
mov
mov
adc
neg
and
inc
not
in
mov
mov
mov
push
mov
test
cmp
mov
push
fistp
add
mov
dec
repnz
aaa
inc
mov
dec
add
imul
frstor
popa
adc
dec
cmp
loope
or
addr16
add
sub
push
mov
jne
inc
shr
mov
scas
xchg
(bad)
push
loop
push
xchg
or
dec
add
mov
inc
inc
(bad)
and
frstor
daa
inc
mov
sbb
inc
sbb
dec
push
ins
push
inc
dec
(bad)
in
or
sahf
out
xor
push
adc
and
sar
fmul
daa
popa
xor
les
rcl
sub
jns
jnp
mov
shr
data16
add
mov
push
sbb
inc
sbb
inc
add
dec
dec
add
adc
adc
jae
inc
add
ja
add
sbb
enter
pop
inc
cmp
sbb
mov
or
mov
sar
movs
mov
xor
mov
fbld
xor
push
xchg
or
push
mov
inc
cmp
mov
jo
mov
std
xchg
sbb
add
dec
push
inc
sub
sub
add
out
mov
jo
data16
xor
outs
mov
fisubr
inc
aaa
add
mov
test
adc
rol
rcl
cmp
and
bound
adc
sub
data16
or
adc
or
fild
iret
daa
mov
inc
ret
mov
cmp
pop
mov
in
or
es
bound
imul
gs
mov
inc
mov
add
(bad)
inc
ins
es
outs
pop
or
and
inc
movs
icebp
retf
pop
xor
movs
xchg
inc
xor
xchg
adc
jne
or
add
add
or
mov
aad
mov
dec
mov
sbb
addr16
pop
pop
sub
mov
das
pop
mov
inc
inc
mov
and
pop
rol
leave
mov
inc
inc
retf
mov
add
push
dec
xchg
lea
jmp
fs
jo
or
xchg
outs
mov
inc
stos
pop
scas
into
jecxz
push
pop
je
pop
push
pop
dec
test
dec
adc
sub
add
push
xlat
push
mov
jnp
add
lods
jge
neg
rcr
sub
dec
imul
jle
stos
ins
pop
stos
lods
adc
outs
mov
sub
adc
(bad)
ror
arpl
push
adc
ins
lods
sub
xchg
fwait
push
shl
imul
retf
mov
fisub
rcr
add
daa
add
iret
xor
and
and
adc
js
bound
xchg
aas
stos
xchg
loopne
jo
ins
arpl
lds
xor
movq
inc
or
cmp
aas
dec
or
push
inc
fstp
xchg
push
fld
push
pop
ffreep
inc
and
aad
adc
aam
xchg
ja
gs
push
test
add
push
inc
and
xor
dec
sub
add
ret
cmp
rcl
mov
inc
and
aam
sub
test
inc
dec
jae
jl
(bad)
xchg
scas
ja
sbb
xchg
sub
xor
sub
scas
jle
movs
lea
shl
pop
lds
test
cmp
iret
push
das
mov
test
out
in
ficom
jle
std
add
pop
jne
ss
ins
inc
dec
jecxz
dec
shl
add
sbb
jo
adc
fs
ja
xor
test
pop
fbld
pop
pusha
inc
cmp
scas
je
inc
lods
imul
and
xchg
sahf
jno
out
(bad)
lds
pop
arpl
and
outs
jecxz
ss
mov
sbb
fild
ret
jo
mov
mov
daa
aas
pcmpgtw
push
adc
sub
cld
jg
aaa
test
inc
push
push
inc
push
inc
pop
icebp
pop
inc
outs
ins
fmul
push
inc
inc
pop
dec
or
fisttp
cmp
pop
push
push
inc
push
pop
icebp
adc
mov
imul
test
jge
sbb
jae
mov
fist
dec
mov
(bad)
sub
push
pop
mov
or
(bad)
fist
inc
aas
mov
mov
inc
and
ja
stos
fs
call
pop
xchg
(bad)
cs
sbb
cmp
adc
ins
daa
js
adc
dec
inc
lahf
mov
add
sbb
scas
(bad)
ret
ret
ins
outs
inc
mov
push
mov
scas
and
repz
xchg
mov
adc
pop
out
cmp
mov
test
mov
popa
daa
jcxz
and
adc
(bad)
out
icebp
or
mov
pusha
cs
mov
gs
ret
xchg
jnp
add
sub
and
add
and
fild
dec
loopne
cmp
xor
xor
push
into
ins
xor
mov
dec
mov
test
es
call
call
add
jge
push
cmp
int3
or
data16
lahf
(bad)
outs
sub
clc
xchg
pop
push
loope
nop
imul
nop
idiv
and
mov
popa
xor
mov
(bad)
pop
aam
fnstcw
enter
pop
xchg
pop
clc
mov
add
addr16
aaa
jae
mov
mov
ins
mov
ins
fs
pop
inc
mov
jnp
out
pop
push
cmps
push
not
cld
or
jne
jns
sbb
sub
mov
rep
pop
cmp
cmp
cmp
pop
jl
or
mov
push
xchg
ja
test
or
jb
cmovnp
arpl
pop
adc
push
push
sub
push
xchg
ins
retf
dec
mov
jae
and
cmps
xor
mov
ja
adc
div
hlt
sub
xor
and
dec
mov
daa
adc
ds
xor
imul
fcomp
cs
or
int
adc
push
ds
aas
in
out
dec
and
rol
dec
popa
jb
xchg
jle
xor
outs
push
mov
inc
adc
inc
jae
fs
xchg
aas
pop
sub
push
sub
mov
jg
data16
sbb
add
dec
je
mov
or
imul
arpl
sub
scas
in
(bad)
and
inc
add
fild
cmc
or
test
cmp
test
into
pop
popa
ins
fst
shl
jo
ja
add
sub
dec
ins
xchg
adc
aam
xlat
bound
jae
cs
mov
loope
dec
and
sbb
rsqrtps
mov
mov
mov
mov
jns
pop
xor
and
js
test
ror
mov
retf
cmc
mov
xor
mov
ror
loopne
or
cmp
inc
xchg
arpl
adc
aas
pop
aas
and
inc
adc
mov
gs
jo
stos
sbb
add
xchg
mov
scas
outs
ins
jbe
jne
sub
test
aam
ror
fistp
pop
dec
dec
mov
aad
data16
xor
test
add
push
jne
cld
dec
pop
aaa
sub
dec
cmp
lahf
ds
pusha
mov
popf
pop
xor
imul
mov
push
pushf
push
mov
add
pop
pop
xchg
fst
adc
pcmpgtb
add
push
push
in
lods
push
adc
mov
daa
les
pop
mov
lds
and
clc
xchg
mov
xchg
shr
or
xchg
jns
(bad)
iret
adc
mov
loope
inc
test
shl
shr
sbb
add
(bad)
cmp
inc
(bad)
or
test
mov
add
and
and
movs
ins
mov
clc
(bad)
ja
mov
mov
les
data16
adc
les
cli
aad
sbb
pop
je
icebp
ret
add
sub
inc
(bad)
icebp
ins
push
rol
outs
cmp
fist
ret
add
arpl
mov
psubb
mov
jnp
push
scas
xchg
fcom
adc
jns
outs
or
bound
jne
jnp
sub
push
add
add
arpl
or
mov
jmp
inc
sub
xchg
xor
fs
or
or
test
call
mov
arpl
nop
and
pop
(bad)
lods
push
psraw
mov
stc
and
mov
es
outs
sbb
fiadd
and
fiadd
movs
xchg
je
jne
mov
cmc
pop
(bad)
nop
inc
enter
pop
mov
and
or
add
pop
mov
sub
adc
xchg
push
lods
pop
mov
push
and
loope
loope
ins
or
ins
bsf
loope
mov
fidivr
push
je
xchg
mov
push
test
es
jae
test
and
sub
(bad)
sub
or
test
adc
lea
dec
retf
lds
xchg
adc
fbld
mov
(bad)
ins
sbb
inc
test
ja
lds
imul
xor
daa
shld
aaa
and
scas
repz
jbe
ins
lods
push
mov
mov
add
xchg
outs
je
or
sub
aaa
arpl
cmp
or
inc
adc
push
lock
sbb
fcmovnu
dec
int3
mov
cmp
std
scas
pusha
int3
fisttp
dec
popa
shl
popf
ret
push
stos
push
stos
jge
das
das
and
push
ret
jns
shr
push
movs
inc
(bad)
fisttp
mov
mov
mov
push
ins
mov
fist
sub
jbe
loop
iret
add
pop
pop
pop
adc
inc
cs
into
push
rcr
ds
sahf
aaa
leave
add
cs
xchg
or
test
ins
pop
fs
sub
mov
fisubr
add
dec
(bad)
mov
fmul
jb
adc
fwait
push
adc
push
shl
adc
mov
icebp
or
inc
and
mov
call
xchg
sbb
push
rcl
punpckhwd
in
xor
inc
and
imul
mov
popf
inc
mov
add
mov
xchg
pop
sub
xchg
xor
lds
xor
and
mov
sbb
pop
push
fs
scas
loopne
jg
jg
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
inc
mov
sbb
jg
pop
jmp
push
xor
fnstenv
popf
mul
aad
xor
xor
pushf
and
inc
int3
sub
or
cmps
pop
push
inc
push
dec
stos
movs
outs
mov
mov
push
push
push
inc
push
push
inc
push
fwait
lock
bound
xchg
mov
outs
inc
fsubr
ins
add
dec
pop
push
lock
adc
dec
dec
inc
push
dec
dec
inc
and
push
das
mov
movs
pop
xor
gs
push
jmp
sub
les
ins
fs
call
dec
dec
popa
xchg
gs
mov
mov
les
addr16
jns
dec
and
dec
or
push
adc
sbb
jg
test
and
inc
dec
les
aam
add
and
aas
mov
dec
dec
dec
dec
dec
dec
dec
inc
xor
pop
call
icebp
pop
pop
popa
bound
data16
push
ins
ins
outs
outs
jo
jb
test
jbe
js
jp
sub
not
inc
aas
or
cmp
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
or
sbb
and
and
es
sub
sub
sub
cs
add
pusha
add
test
xchg
push
(bad)
inc
inc
or
imul
popa
add
inc
jo
sub
or
sub
xchg
push
popa
aad
mov
or
test
fidiv
push
aas
(bad)
push
adc
sub
aas
rol
xor
jne
or
pop
adc
xor
loopne
push
shr
popa
mov
push
aas
sub
out
xchg
dec
mov
je
push
xchg
mov
das
dec
movs
gs
xor
and
imul
jecxz
das
sub
mov
dec
dec
stos
jl
ret
clc
xchg
out
push
dec
aad
inc
jo
xchg
add
mov
push
loopne
sbb
jp
push
pop
ret
xchg
cmp
jb
jl
or
cmps
xor
sbb
xor
jbe
adc
or
outs
inc
or
ins
xor
add
bound
cmp
mov
sbb
lahf
jg
and
push
outs
inc
dec
jmp
mov
pusha
mov
inc
push
mov
adc
je
(bad)
das
or
push
lods
adc
inc
and
shr
sub
mov
jb
inc
push
ja
push
sub
imul
pop
dec
jno
in
pushw
mov
mov
scas
out
cmc
or
xor
pop
pusha
pop
mov
push
push
adc
adc
ficom
pop
pop
push
jo
xor
repz
adc
or
pusha
and
xlat
pop
cmp
loopne
push
pop
sbb
jns
aas
nop
add
pop
cmp
cmp
add
pop
adc
out
push
(bad)
jns
out
lock
adc
adc
out
sub
or
fs
add
jg
ja
inc
call
cwde
add
out
loopne
sahf
push
jl
fcomp
iret
repz
mov
cmp
repz
add
mov
and
les
bound
repz
movs
add
repz
pop
sbb
jp
aam
push
iret
repz
mov
mov
aas
iret
repz
add
or
xor
repz
ss
pcmpgtd
cmp
rep
push
xchg
repz
in
or
pushf
arpl
repz
fcomp
push
outs
sahf
out
out
mov
dec
cld
sub
(bad)
adc
sahf
jno
ret
xchg
out
sahf
mov
out
jns
pop
sbb
sahf
xchg
shr
mov
in
cmp
mov
push
adc
sbb
retf
out
gs
sahf
xchg
out
jmp
cmp
fisubr
jns
out
mov
sahf
xchg
out
push
adc
jae
sahf
out
jns
arpl
cmps
add
inc
out
sbb
jnp
(bad)
sahf
out
sahf
imul
or
jns
push
pop
ja
sahf
xchg
out
into
addr16
scas
cmp
out
xchg
pop
jns
xchg
out
sahf
jg
ficomp
iret
cmp
das
mov
dec
or
rcl
xchg
mov
mov
inc
cs
leave
test
jmp
inc
cs
nop
lds
mov
cs
or
int
inc
cs
in
popf
cs
fnstsw
dec
ret
mov
jecxz
shl
mov
in
cs
stos
jmp
in
fstp
sti
(bad)
mov
out
or
in
cs
test
cs
lahf
(bad)
cs
mov
adc
push
out
add
adc
int
sbb
inc
ficomp
and
fisttp
add
adc
cmp
mov
add
add
test
pusha
call
xor
or
add
repnz
dec
int
lods
outs
mov
dec
sub
xor
dec
out
push
mov
add
dec
arpl
sub
adc
pop
jae
sbb
fidivr
xchg
icebp
mov
pop
out
fs
and
lods
jbe
dec
bound
aas
in
sbb
push
das
fld
stc
mov
and
je
imul
and
lahf
push
or
std
push
and
imul
mov
sbb
or
cld
shr
loop
aas
xor
aad
mul
push
popf
shl
mov
bound
imul
pop
dec
mov
aaa
data16
cwde
div
mov
in
add
(bad)
inc
(bad)
ins
bound
jb
enter
jnp
push
in
arpl
pop
mov
add
sbb
clc
and
nop
dec
push
cwde
jmp
xor
aaa
dec
shl
outs
fisubr
gs
mov
inc
sbb
les
cld
dec
push
jns
sbb
hlt
lock
loopne
aam
fcomp
aaa
pop
cmp
or
(bad)
test
test
jb
addr16
xor
xor
data16
and
call
daa
dec
sahf
bound
jp
cs
inc
iret
add
or
sbb
movs
xor
sub
push
inc
add
mov
retf
mov
leave
test
adc
mov
leave
leave
adc
add
pop
or
jb
and
test
sbb
inc
push
stos
or
fadd
mov
test
(bad)
push
sub
(bad)
cmp
fcmovnb
out
(bad)
push
add
sbb
cmp
repz
sbb
inc
add
popa
push
out
mov
les
(bad)
hlt
push
(bad)
(bad)
(bad)
push
xchg
fs
xor
fdivr
jmp
rcl
mov
(bad)
(bad)
inc
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
call
aam
mov
imul
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
jmp
psubd
or
outs
cmp
imul
addr16
(bad)
push
dec
adc
add
std
test
movs
cli
test
xor
cli
(bad)
(bad)
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
dec
fisubr
adc
push
popa
sar
and
mov
(bad)
(bad)
(bad)
call
movs
mov
sub
mov
(bad)
and
or
adc
(bad)
(bad)
(bad)
jmp
sub
fdiv
jno
add
aad
mov
mov
push
jmp
aam
call
xor
and
test
xchg
sbb
push
test
(bad)
jg
cmp
fs
add
hlt
push
imul
fdivr
(bad)
fcomip
xor
dec
sbb
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
call
mov
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
sti
jmp
pop
mov
aam
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
jg
shl
jmp
outs
xor
mov
sar
add
in
add
cld
(bad)
(bad)
call
or
cmp
add
daa
adc
or
and
test
(bad)
inc
cs
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
(bad)
(bad)
(bad)
call
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
(bad)
(bad)
(bad)
cmp
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
(bad)
(bad)
dec
iret
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
push
(bad)
test
ss
sbb
push
jbe
aam
loopne
ror
int3
(bad)
(bad)
(bad)
dec
outs
fistp
mov
mov
aad
mov
call
xchg
shl
push
(bad)
(bad)
(bad)
push
fisttp
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
(bad)
(bad)
(bad)
(bad)
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
xchg
hlt
jmp
push
int3
add
mov
(bad)
(bad)
jmp
add
lds
or
sub
mov
cmps
call
ret
shl
sbb
scas
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
(bad)
jmp
mov
loop
sub
or
mov
xchg
or
(bad)
(bad)
push
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
not
ja
outs
ja
mov
out
cli
jo
(bad)
push
mov
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
jmp
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
imul
jmp
dec
push
scas
fcomp
fldenv
fild
(bad)
(bad)
(bad)
jg
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
mov
add
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
sar
outs
sub
mov
or
sbb
add
sub
push
sbb
and
ret
push
sub
hlt
ja
xchg
call
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
call
push
adc
dec
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
(bad)
(bad)
(bad)
call
test
sbb
add
call
out
ins
ins
(bad)
fistp
inc
(bad)
(bad)
(bad)
call
sahf
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
(bad)
(bad)
ret
gs
fisubr
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
jmp
cmp
repz
fbstp
push
jo
add
dec
mov
xchg
sbb
xor
pop
jg
pusha
cld
nop
sti
mov
jns
test
(bad)
(bad)
(bad)
(bad)
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
call
mov
lea
fnstcw
mov
dec
hlt
mov
icebp
(bad)
call
adc
add
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
jg
ins
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
inc
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
(bad)
fidiv
and
inc
and
inc
out
and
cmp
dec
mov
mov
sbb
int3
cmps
xor
mov
lods
out
sar
mov
(bad)
(bad)
(bad)
jg
lahf
ins
mov
xchg
adc
jle
push
jns
das
mov
and
je
(bad)
(bad)
call
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
(bad)
(bad)
call
retf
int3
cli
mov
js
mov
test
cwde
cmp
test
(bad)
(bad)
(bad)
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ins
rol
ss
push
out
mov
mov
movs
test
jno
mov
(bad)
(bad)
(bad)
call
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
dec
rcl
bound
xchg
push
(bad)
push
hlt
out
les
ret
xchg
fdecstp
jmp
lea
inc
xor
scas
clc
jmp
retf
jo
outs
sbb
sub
loope
fisub
lds
push
(bad)
(bad)
(bad)
(bad)
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
(bad)
(bad)
(bad)
push
(bad)
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
inc
(bad)
(bad)
jmp
push
jae
xor
mov
jo
cmc
shr
add
mov
arpl
lods
ud0
cmp
out
ror
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
mov
test
(bad)
(bad)
inc
and
pop
ins
cmp
les
adc
sub
dec
add
sar
push
or
(bad)
call
lds
sbb
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
(bad)
(bad)
(bad)
call
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
(bad)
in
repz
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
jg
outs
add
sub
adc
jns
movs
dec
mov
call
cld
jmp
mov
shr
(bad)
in
and
out
mov
rcl
cld
(bad)
jmp
es
xchg
aas
mov
adc
out
sar
mov
(bad)
(bad)
jmp
fdiv
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
outs
cli
jmp
add
test
pop
mov
mov
ret
dec
or
push
push
dec
add
(bad)
in
call
test
or
stc
sbb
sub
(bad)
(bad)
(bad)
mov
sbb
leave
in
push
ja
pop
sub
das
sbb
fild
(bad)
(bad)
jmp
enter
call
mov
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
(bad)
(bad)
(bad)
jp
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
(bad)
(bad)
(bad)
inc
cmp
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
inc
call
xor
(bad)
mov
fsub
leave
pop
sub
and
(bad)
(bad)
(bad)
jnp
mov
and
mov
sub
fidivr
sub
ds
sbb
sub
ret
jbe
sub
enter
mov
call
pop
cmp
xor
(bad)
(bad)
(bad)
push
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
ja
(bad)
(bad)
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
fdivrp
jmp
cmc
cmp
nop
es
xchg
pop
in
ja
add
push
(bad)
(bad)
fcomip
or
bound
stos
sub
shr
aam
cmps
gs
fs
(bad)
jmp
imul
dec
pop
mov
outs
jns
(bad)
(bad)
(bad)
jg
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
(bad)
inc
inc
jae
cmovo
out
inc
sbb
push
xor
mov
(bad)
(bad)
(bad)
push
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
(bad)
(bad)
jg
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
(bad)
(bad)
(bad)
dec
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
loopne
(bad)
call
pusha
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
call
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
(bad)
mov
repz
repnz
inc
icebp
xchg
(bad)
(bad)
(bad)
inc
hlt
mov
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
jno
mov
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
(bad)
(bad)
(bad)
jmp
shr
out
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
pop
cld
(bad)
call
ret
xchg
ret
mov
call
dec
retf
lahf
lds
jmp
add
adc
inc
int3
inc
ins
xchg
sbb
ror
(bad)
call
mov
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
(bad)
(bad)
(bad)
push
jmp
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
dec
xor
xor
dec
mov
or
(bad)
in
popf
or
outs
adc
(bad)
mov
push
pop
cmp
(bad)
jmp
mov
adc
fadd
arpl
pop
xchg
shl
test
call
or
outs
movs
stos
jl
jmp
dec
adc
scas
(bad)
(bad)
(bad)
call
lods
outs
lods
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
(bad)
(bad)
jmp
dec
mov
mov
pop
dec
adc
mov
mov
fidivr
inc
pop
(bad)
ficomp
mov
xlat
addr16
stos
push
mov
mov
push
xchg
bound
pop
imul
(bad)
call
or
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
(bad)
(bad)
(bad)
call
arpl
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
es
into
int
jg
xchg
cmp
sahf
(bad)
(bad)
(bad)
call
sbb
inc
(bad)
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
sar
(bad)
(bad)
inc
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
dec
std
push
in
jecxz
pop
push
or
mov
outs
jg
(bad)
les
and
loop
outs
dec
jg
or
(bad)
jge
jg
or
mov
rcr
(bad)
lds
xchg
lahf
mov
(bad)
jmp
sbb
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
(bad)
(bad)
(bad)
call
mov
jbe
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
test
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetchw
or
(bad)
jmp
jae
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
(bad)
inc
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
dec
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
jmp
xchg
dec
pop
fwait
push
add
in
mov
dec
leave
xor
(bad)
fist
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
(bad)
dec
cwde
call
scas
push
out
aaa
push
clc
inc
add
and
inc
scas
xlat
hlt
mov
xor
mov
in
pop
sar
(bad)
mov
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
(bad)
call
push
nop
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
(bad)
(bad)
(bad)
in
loope
mov
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
(bad)
jmp
dec
leave
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
(bad)
out
jp
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
jg
icebp
jmp
mov
xor
mov
stc
(bad)
(bad)
(bad)
(bad)
jmp
add
push
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
push
int
adc
inc
adc
cmp
jbe
xor
fcom
add
(bad)
scas
iret
(bad)
(bad)
(bad)
push
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
jmp
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
inc
or
lock
imul
ss
test
(bad)
cs
mov
push
adc
mov
loope
into
cs
out
add
add
call
neg
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
(bad)
(bad)
(bad)
call
ret
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
(bad)
(bad)
push
mov
jle
cmp
pushf
in
adc
add
sbb
(bad)
(bad)
dec
ret
ds
outs
sub
mov
add
xchg
out
mov
dec
or
(bad)
(bad)
(bad)
call
dec
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
(bad)
jmp
xor
cdq
or
pop
ins
les
jo
(bad)
(bad)
(bad)
push
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
(bad)
(bad)
(bad)
(bad)
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
(bad)
call
std
in
hlt
aam
push
sub
push
imul
mov
in
adc
(bad)
(bad)
inc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
mov
ror
aam
ror
mov
xor
scas
push
cwde
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
es
call
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
and
mov
(bad)
(bad)
mov
add
or
mov
(bad)
(bad)
push
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
out
aad
sub
test
lahf
mov
xor
leave
(bad)
(bad)
cmp
or
sbb
or
sub
(bad)
jmp
arpl
imul
ins
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
jl
fstp
(bad)
fisubr
repz
aam
gs
mov
test
into
mov
(bad)
push
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
addr16
(bad)
(bad)
inc
pusha
mov
jae
add
pop
fisttp
jno
daa
add
mov
enter
or
xchg
mov
(bad)
jmp
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
clc
(bad)
dec
cmp
mov
and
mov
loop
mov
call
inc
cmp
(bad)
adc
jecxz
or
xchg
cmp
(bad)
(bad)
jp
pop
test
push
iret
or
add
mov
setae
mov
push
imul
push
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
jmp
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
dec
lock
dec
fcomip
push
sar
addr16
mov
fisttp
ss
xchg
dec
or
sbb
dec
push
clc
jmp
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
inc
cmp
sub
add
xlat
jmp
sub
sahf
mov
(bad)
(bad)
(bad)
fisubr
mov
arpl
es
mov
or
ss
jb
test
call
or
xchg
mov
jp
jnp
sub
push
mov
fsubr
mov
fcmovnu
and
aam
inc
sbb
fnsave
outs
cmp
ja
sbb
hlt
(bad)
(bad)
jmp
dec
push
pushw
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
cmp
mov
loop
xlat
or
inc
jl
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
(bad)
dec
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
(bad)
(bad)
call
mov
xchg
xor
mov
add
push
ficom
and
sbb
jmp
popa
dec
mov
mov
xchg
mov
mov
mov
sub
sbb
xor
ss
call
std
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
enter
sar
(bad)
(bad)
inc
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
(bad)
(bad)
(bad)
(bad)
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
(bad)
inc
test
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
(bad)
(bad)
call
inc
and
call
shl
ret
fiadd
gs
scas
(bad)
(bad)
(bad)
jmp
outs
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
(bad)
mov
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
pop
cmp
jmp
sti
push
test
jns
mov
cmp
jns
push
dec
(bad)
(bad)
call
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
(bad)
(bad)
(bad)
(bad)
mov
cmp
lds
or
xchg
into
pop
int3
add
inc
xlat
dec
xor
cld
xor
cli
bound
(bad)
(bad)
call
adc
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
(bad)
(bad)
(bad)
(bad)
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
and
gs
imul
and
add
fcomip
(bad)
call
and
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
(bad)
(bad)
(bad)
dec
stos
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
rcl
mov
mov
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
dec
retf
mov
cli
call
js
cmps
cmp
sbb
or
(bad)
call
scas
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
(bad)
(bad)
(bad)
fdiv
adc
out
movs
add
test
mov
push
ja
cwde
(bad)
out
clc
call
(bad)
adc
ss
daa
mov
fnstsw
xor
sar
call
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
pop
aaa
je
(bad)
mov
test
xor
imul
jo
adc
dec
clc
pop
sbb
inc
sub
data16
loope
lds
jp
dec
rep
mov
in
test
xchg
sub
in
scas
(bad)
jg
sub
repz
cmp
call
imul
pop
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
mov
shl
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
add
xlat
std
(bad)
call
dec
mov
and
popf
mov
inc
mov
and
sbb
ins
(bad)
(bad)
(bad)
mov
sub
push
test
cwde
inc
jle
test
ror
cmp
hlt
(bad)
(bad)
(bad)
call
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
dec
sub
sub
xchg
mov
xchg
push
mov
cld
(bad)
(bad)
push
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
gs
(bad)
push
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
pop
call
and
loope
or
mov
jle
shl
imul
loop
inc
out
cmp
ja
fsub
push
jle
hlt
out
push
or
test
mov
mov
aas
int3
xor
ret
add
outs
add
pop
lods
test
push
retf
ret
lea
dec
push
test
adc
(bad)
(bad)
(bad)
call
cmp
or
out
loope
sbb
fs
xchg
push
or
(bad)
(bad)
jg
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
(bad)
(bad)
jmp
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
(bad)
(bad)
(bad)
jp
dec
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
jmp
frstor
in
mov
cmps
daa
aam
es
dec
(bad)
(bad)
(bad)
dec
daa
jnp
out
and
and
adc
sub
pusha
inc
sub
or
jno
(bad)
(bad)
(bad)
push
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
xor
(bad)
(bad)
call
push
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
xlat
(bad)
jmp
add
retf
retf
mov
xchg
cli
fdivrp
call
jbe
nop
jmp
ja
pop
push
repz
(bad)
(bad)
jg
arpl
popa
sub
push
cmps
xlat
aam
fs
mov
loopne
dec
dec
adc
dec
dec
fs
(bad)
inc
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
(bad)
(bad)
(bad)
dec
inc
and
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
(bad)
(bad)
(bad)
mov
or
ror
adc
push
mov
cmp
pop
and
pop
data16
(bad)
(bad)
(bad)
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
jg
out
clc
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
jp
add
out
es
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
adc
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
(bad)
(bad)
push
add
dec
bnd
lock
adc
or
cmc
retf
sub
test
(bad)
(bad)
(bad)
(bad)
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
(bad)
(bad)
call
imul
test
fdiv
shl
add
mov
jo
shl
pop
(bad)
(bad)
(bad)
inc
pop
(bad)
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
(bad)
jg
dec
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
call
sbb
add
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
push
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
(bad)
call
xor
jge
mov
pop
mov
mov
(bad)
(bad)
jmp
sbb
mov
or
mov
push
mov
sbb
call
test
cmps
arpl
aad
or
test
mov
into
stos
movs
outs
(bad)
(bad)
(bad)
(bad)
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
(bad)
(bad)
(bad)
inc
clc
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
(bad)
(bad)
dec
mov
mov
mov
punpckldq
xlat
and
adc
test
xchg
pushf
xchg
mov
fimul
cmp
xor
(bad)
(bad)
(bad)
mov
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
aaa
jl
jge
dec
mov
loopne
xlat
add
mov
mov
loopne
ja
pop
arpl
movs
xor
(bad)
(bad)
(bad)
cli
cli
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
dec
movs
mov
xchg
rcr
mov
(bad)
and
xor
(bad)
(bad)
jmp
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
(bad)
(bad)
(bad)
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
mov
mov
pop
and
sub
sahf
push
dec
dec
outs
test
or
rcr
lahf
ror
and
(bad)
(bad)
push
lds
sub
mov
inc
and
(bad)
xchg
test
call
cmp
(bad)
(bad)
aas
pop
xor
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
dec
call
mov
test
fistp
ret
imul
ret
ja
imul
(bad)
jg
or
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
(bad)
(bad)
call
aaa
sbb
mov
inc
sub
mov
cmp
jg
sar
(bad)
call
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
(bad)
(bad)
(bad)
push
push
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
(bad)
(bad)
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
out
cli
(bad)
jmp
imul
cwde
and
push
aaa
out
push
add
inc
clc
inc
daa
popf
and
lock
jmp
inc
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
(bad)
cmp
pop
pop
mov
in
sbb
bound
and
inc
sbb
jmp
sub
sahf
(bad)
jg
call
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
cmp
shr
ins
mov
cld
sbb
dec
sub
scas
cmc
test
and
(bad)
(bad)
(bad)
dec
sub
sbb
ror
sar
add
push
movs
not
scas
clc
dec
sub
jns
and
dec
imul
cmc
xlat
jle
out
ror
cs
(bad)
jmp
or
aaa
push
add
arpl
add
fwait
jmp
(bad)
stc
popa
call
rcr
mov
ss
mov
call
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
and
(bad)
data16
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
hlt
(bad)
mov
cmp
jbe
out
push
into
icebp
mov
inc
(bad)
call
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
inc
mov
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
(bad)
(bad)
(bad)
call
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
(bad)
(bad)
(bad)
aas
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
(bad)
(bad)
(bad)
dec
test
cmp
es
jl
mov
pop
sbb
mov
repz
(bad)
(bad)
call
in
test
adc
ja
mov
ret
add
cmp
cdq
in
(bad)
jg
cld
or
pushw
cmps
fidiv
sub
fisubr
sar
(bad)
(bad)
inc
xchg
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
and
jmp
jp
mov
push
icebp
pop
jbe
arpl
fild
call
jo
add
sahf
out
and
mov
sar
xor
sbb
repz
adc
mov
ror
xchg
ret
je
push
or
cmp
rcl
cmp
sar
lea
and
jnp
pusha
stos
mov
aaa
jne
push
pop
cmp
inc
imul
jae
cmps
sahf
pusha
imul
not
shl
push
jo
fisttp
loope
and
push
push
dec
sub
jp
leave
and
popa
sbb
mov
jne
je
add
xchg
sti
sub
xchg
hlt
or
dec
imul
add
cmps
hlt
pop
arpl
jno
std
or
pop
xlat
pop
and
inc
add
sbb
ficomp
test
push
xchg
ds
imul
sub
cdq
daa
push
jl
pusha
aaa
repnz
(bad)
out
dec
dec
inc
mov
out
dec
pop
dec
inc
push
dec
inc
dec
inc
push
icebp
les
dec
pop
gs
inc
ins
jae
or
pop
pushf
xchg
mov
inc
xchg
ja
out
adc
and
push
xor
int
inc
js
dec
fs
in
ins
jae
xchg
in
test
cmps
push
dec
pop
push
es
jbe
jg
mov
inc
sbb
and
add
pop
lea
xor
xor
inc
outs
push
push
and
and
xor
ret
adc
sbb
or
fcmovnbe
int
and
mov
and
ins
jns
or
dec
add
imul
outs
shl
sahf
fmul
mov
or
adc
xor
or
jne
dec
mov
sbb
daa
mov
push
xchg
add
jne
push
pop
dec
imul
or
fs
sahf
add
mov
in
and
je
sbb
add
in
ds
(bad)
sub
mov
rcr
sub
fcom
imul
sub
mov
arpl
push
dec
jo
dec
shl
fild
add
inc
xchg
mov
dec
add
mov
jmp
mov
sbb
pop
dec
in
and
ret
pusha
popa
pop
xor
push
and
sar
je
xchg
add
xor
shl
sbb
cwde
cmp
add
cmps
sub
outs
outs
ss
je
xor
jo
cli
jbe
nop
out
pop
movs
inc
xchg
push
mov
mov
and
mov
and
loopne
lds
das
(bad)
push
pop
xlat
outs
push
fs
in
add
push
cmp
xor
inc
cmp
ins
outs
inc
jmp
inc
in
or
sbb
imul
pop
or
call
leave
popa
pop
sub
sbb
fnstsw
adc
stos
popa
in
xor
(bad)
sub
or
ins
lea
add
pop
push
nop
jne
jae
xor
adc
sub
rcl
pop
data16
mov
mov
arpl
dec
jge
push
xchg
(bad)
in
pop
add
cmp
inc
scas
fsubr
loop
xchg
fisub
retf
sbb
aas
and
xor
sub
sbb
inc
cmps
ins
mov
fidiv
adc
dec
sti
idiv
adc
clc
addr16
outs
pop
and
push
pop
addr16
sahf
push
push
pop
push
and
add
jmp
repz
pusha
adc
add
inc
cmp
jecxz
mov
add
xchg
add
xor
sar
inc
push
mov
and
dec
jae
push
aam
add
popa
adc
imul
xchg
xor
add
inc
daa
add
not
outs
sub
dec
push
aas
outs
adc
ss
and
and
test
adc
icebp
mov
fistp
pop
xor
mov
jmp
jl
dec
in
fcmovb
jle
jae
or
dec
xchg
sub
sldt
jb
outs
dec
add
inc
wrmsr
cmp
pop
stc
paddd
push
inc
add
cli
inc
xchg
lock
inc
call
mov
not
movs
push
add
aas
sub
es
push
dec
stc
stc
movs
aas
jnp
(bad)
fistp
add
add
mov
(bad)
mov
ds
push
ror
mov
popa
enter
out
popa
dec
mul
enter
inc
xchg
pop
cmps
call
pop
mov
cmp
rcr
cmp
rcl
xor
jecxz
jmp
cli
jmp
outs
push
mov
rol
adc
jnp
lock
lds
jg
(bad)
fistp
push
bound
test
cmp
jb
push
adc
mov
(bad)
cmp
retf
outs
jmp
mov
imul
call
aam
stc
(bad)
(bad)
inc
cmps
inc
inc
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
push
(bad)
mov
sub
cmp
jl
gs
imul
or
test
cmc
popf
sahf
mov
or
xor
cmp
add
cmps
test
mov
mov
jne
(bad)
(bad)
dec
cmp
mov
or
push
add
dec
clc
rcr
fisttp
mov
cmp
jge
jg
call
int3
mov
mov
aaa
cmps
jno
pop
mov
shl
xor
cmps
dec
jmp
dec
sub
and
dec
cmps
fiadd
mov
stc
(bad)
jmp
mul
or
add
adc
cmp
mov
or
add
push
jmp
sar
mov
xchg
nop
jbe
daa
sub
aad
mov
or
sub
cmps
sub
jbe
stc
pop
out
shl
popf
push
sub
fwait
(bad)
push
sbb
daa
mov
inc
outs
or
loope
nop
cmp
push
outs
(bad)
jg
dec
fld
stos
xor
xor
outs
out
mov
cdq
(bad)
je
fild
mov
and
fmul
xchg
cld
data16
cmp
and
pushw
jno
mov
cmp
sahf
jle
call
xchg
sbb
mov
stos
or
mov
cmc
sub
pop
in
call
cmps
pop
mov
popa
sahf
enter
stc
(bad)
in
push
jmp
push
xchg
mov
jae
mov
loope
(bad)
push
jmp
bound
ss
addr16
mov
adc
dec
cdq
mov
enter
call
pop
xchg
cmp
xchg
inc
fldcw
jmp
(bad)
neg
repz
xor
cmp
ja
cdq
scas
icebp
cmp
push
pushf
mov
std
jmp
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
lahf
cmp
into
xchg
sub
dec
(bad)
cld
scas
jno
nop
lock
cs
in
jnp
or
push
fist
cwde
mov
pop
and
push
mov
jae
test
cmp
(bad)
(bad)
mov
sahf
xchg
retf
xchg
ja
mov
call
(bad)
jmp
cmp
adc
or
scas
add
mov
bnd
jmp
jg
fstp
xlat
push
ror
int3
mov
scas
xor
push
test
dec
(bad)
call
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
imul
icebp
adc
fsub
mov
cdq
fbstp
or
jnp
pop
dec
sub
xchg
cmps
pop
cmp
movs
sti
fcomp
pop
push
(bad)
mov
aad
pop
mov
test
jae
cwde
cmp
fwait
jnp
mov
cld
pop
ror
idiv
mov
outs
(bad)
mov
or
fst
push
or
stos
inc
(bad)
dec
(bad)
mov
pop
popa
out
sbb
out
test
xor
inc
outs
pop
jbe
ltr
int
dec
cmp
sahf
add
pop
das
xor
out
cmp
pusha
sti
mov
aas
rol
mov
pop
adc
push
retf
add
fldenv
rol
repnz
(bad)
psubb
or
jg
cmp
movs
and
xor
xchg
push
repz
inc
mov
mov
pushf
fdiv
inc
(bad)
(bad)
jg
outs
(bad)
sti
call
or
aas
adc
and
iret
mov
lds
mov
(bad)
out
add
aas
push
jp
cwde
cdq
cdq
leave
aas
sbb
loopne
jns
adc
out
invd
xchg
out
test
fs
pop
enter
jb
repnz
cs
lods
jmp
nop
or
repnz
in
jmp
test
call
lods
bound
pop
xor
das
shl
mov
pop
jb
add
out
nop
or
dec
enter
mov
test
push
out
cs
es
inc
and
in
adc
jecxz
and
xor
and
and
loop
or
mov
and
loope
pop
enter
enter
sbb
test
loopne
inc
cs
cmps
test
inc
cs
inc
and
pop
dec
add
cmp
test
(bad)
(bad)
scas
(bad)
sahf
dec
jle
daa
leave
fidivr
js
fwait
jp
aas
xlat
out
daa
fldcw
and
out
fwait
cmp
cmps
aas
shl
test
pop
inc
adc
xor
(bad)
jg
bound
push
xchg
fwait
pop
inc
mov
rcl
rol
inc
cmp
pusha
add
aas
inc
push
push
cmp
ror
ins
xchg
mov
dec
(bad)
jmp
jns
ds
jo
and
(bad)
aas
inc
cmp
adc
sahf
xlat
rcr
js
and
mov
jmp
nop
sahf
sub
dec
les
mov
sub
neg
sar
std
jmp
(bad)
aas
in
(bad)
xlat
push
(bad)
push
push
push
or
outs
(bad)
jg
rol
add
call
pop
addr16
aas
rcl
push
mov
dec
push
retf
sub
jmp
aaa
call
push
mov
inc
out
ds
(bad)
(bad)
jmp
imul
into
aas
sbb
xchg
and
xor
outs
fdiv
and
iret
pop
outs
mov
jmp
or
out
xor
sahf
cwde
retf
scas
sbb
dec
jmp
aas
mov
or
sbb
js
sti
sub
test
push
loop
push
ret
adc
and
dec
mov
aas
add
outs
les
pop
pushf
ret
aam
(bad)
int
or
adc
fwait
outs
(bad)
aas
mov
push
lock
les
mov
(bad)
mov
test
aas
sbb
mov
das
jb
or
add
cmp
aas
shl
sub
xor
mov
inc
addr16
sub
int
pop
jle
mov
cwde
fdivr
push
das
push
pop
data16
pusha
add
add
fyl2xp1
fwait
outs
mov
out
push
push
pop
inc
repnz
aaa
(bad)
mov
cdq
fidivr
adc
adc
fstp
(bad)
mov
mov
push
sbb
sahf
int
push
fwait
xchg
outs
mov
(bad)
mov
jle
xchg
fdivr
(bad)
adc
nop
push
fnstsw
(bad)
cmove
sub
(bad)
sti
fwait
outs
push
shl
stos
aam
sbb
sub
js
shl
mov
push
xchg
in
inc
mov
ins
movups
aas
fdiv
aaa
popf
ja
sub
das
(bad)
neg
ins
(bad)
push
adc
movs
and
mov
cwde
dec
ins
sub
push
fadd
push
jb
mov
outs
mov
cmp
xchg
pushf
mov
dec
jmp
loope
out
sub
adc
mov
shl
test
cwde
cmp
popf
push
addr16
jmp
rep
addr16
stos
cmp
mov
loop
jnp
dec
outs
push
(bad)
in
lahf
cld
cmp
push
sahf
ja
jns
xor
sbb
stc
sub
in
mov
popa
cmp
xor
pop
jecxz
repz
cli
lock
fwait
jg
test
dec
push
mov
inc
sbb
int3
in
inc
xchg
mov
mov
fist
call
push
test
int
sub
sbb
aas
test
push
mov
fwait
mov
push
lods
retf
aad
sub
xor
call
(bad)
fs
xchg
test
adc
xor
shl
les
aas
leave
mov
push
sbb
xchg
ins
sahf
fwait
mov
shr
add
pop
push
stos
cli
arpl
jp
aad
and
(bad)
std
out
sub
inc
fimul
add
ret
add
fimul
leave
ds
mov
mov
jae
push
push
inc
sub
add
dec
js
push
test
jp
jp
add
xchg
mov
dec
popa
mov
aaa
add
out
mov
arpl
and
and
push
xchg
daa
ja
and
iret
daa
daa
sub
mov
sub
in
mov
dec
popf
and
jae
mov
addr16
cmp
aas
push
inc
or
arpl
or
cdq
pop
xchg
outs
shr
ins
pusha
inc
jbe
(bad)
push
push
xor
loope
test
sahf
dec
dec
mov
ins
loopne
inc
jecxz
pop
or
and
or
fisub
dec
dec
lahf
sbb
(bad)
outs
xchg
pushf
add
pop
pop
pop
push
data16
push
cmp
pusha
add
sbb
call
adc
test
or
mov
data16
xchg
outs
or
push
cmp
xchg
fild
push
jne
repnz
inc
stos
cmp
cmp
fild
or
je
lods
popf
adc
add
add
pusha
test
inc
outs
fisub
sub
in
xchg
jo
popa
shr
xchg
pop
mov
rcl
jne
adc
jns
pusha
push
or
fsubr
test
mov
sub
aaa
daa
xchg
mov
in
mov
daa
popw
pop
cmp
adc
ds
and
iret
repz
sub
es
out
xor
jae
push
jle
sub
sub
adc
cmps
cmp
cdq
cmps
das
sub
sub
or
sub
push
pop
lea
inc
dec
dec
and
cmp
and
add
xchg
ja
je
sahf
push
ins
push
push
jb
imul
adc
xor
add
js
in
cld
ds
aam
popa
out
xchg
lahf
aam
mov
mov
icebp
or
jo
out
sub
mov
mov
add
mov
cli
cmp
repz
int3
shl
ds
push
enter
sahf
test
lods
mov
mov
cwde
xchg
xchg
nop
mov
jl
je
ins
jns
out
push
out
sahf
out
push
dec
dec
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
out
sahf
out
adc
add
repz
clc
(bad)
in
in
shl
pusha
inc
inc
and
repz
out
fmul
iret
repz
sub
or
sahf
cmps
stc
call
test
jns
out
pusha
cmp
in
iret
repz
enter
sub
jge
xchg
mov
add
push
into
stc
sahf
xlat
fimul
xchg
mov
rol
loop
push
jmp
mov
mov
loopne
push
xchg
push
sub
hlt
and
aas
loope
stos
dec
daa
ja
jge
call
into
inc
cmps
sub
adc
cmc
cmp
fisubr
inc
lods
mov
xchg
xchg
adc
pop
pop
ins
mov
arpl
jo
jae
mov
mov
sbb
aas
fidivr
sub
jo
mov
aad
das
repnz
jo
sub
and
mov
mul
das
popa
cwde
jns
add
loopne
jb
and
test
dec
aad
in
mov
data16
daa
or
js
inc
add
xchg
mov
rcl
sbb
fbld
dec
and
imul
pop
sub
and
adc
pop
and
push
aam
cmp
dec
aaa
push
sub
lods
sub
mov
xchg
adc
or
lea
in
mov
mov
pop
lea
ins
stos
daa
popa
cmps
lock
stos
test
into
sub
test
xchg
push
(bad)
pop
cdq
repnz
adc
jnp
push
jge
adc
cmp
out
frstor
jbe
ins
dec
inc
lods
mov
daa
addr16
inc
mov
addr16
or
fild
mov
dec
dec
dec
push
dec
outs
inc
test
push
xor
int3
pop
mov
add
pop
push
adc
aas
push
sub
xor
pop
cdq
mov
daa
mov
dec
cmp
sub
jmp
adc
idiv
mul
imul
movs
xor
inc
addr16
xor
push
push
push
ins
and
jmp
jo
pop
lea
xor
bound
fild
add
add
add
test
mov
adc
or
iret
inc
sti
sub
cmp
inc
pop
js
push
mov
outs
(bad)
ret
xor
push
pop
js
imul
jo
ja
outs
add
sub
dec
add
xchg
add
mov
adc
add
dec
push
or
add
mov
mov
dec
cmp
add
add
shr
lods
popf
cs
add
rol
mov
aaa
add
pop
ins
add
and
popf
add
add
add
mov
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
inc
add
ret
push
lds
stos
dec
aas
clc
pop
add
dec
dec
cmp
cmp
ficom
and
adc
scas
imul
push
or
mov
cmp
outs
jbe
dec
cwde
xchg
call
mov
jl
jne
jne
dec
jne
xchg
outs
pop
ret
pop
inc
and
dec
dec
jg
imul
bound
out
ficomp
adc
into
cmp
xchg
xchg
sub
inc
into
xor
aas
jae
mov
jae
push
gs
fstp
adc
outs
and
(bad)
into
cmp
ja
pop
dec
inc
aas
test
sub
pop
loopne
scas
or
out
add
sbb
jg
(bad)
cld
sti
or
dec
jno
icebp
pusha
inc
mov
clc
ret
movs
add
mov
cli
inc
jae
mov
ds
ins
outs
fs
out
xor
cli
jne
popa
dec
push
or
dec
stc
gs
xor
pusha
das
imul
add
xor
push
dec
inc
dec
add
dec
dec
inc
add
or
add
fsubr
clc
jo
jo
push
adc
daa
push
xchg
loope
(bad)
test
pop
sub
and
cmp
mov
lds
ss
jmp
add
retf
pop
clc
bound
jns
mov
mov
data16
(bad)
or
test
push
fild
add
fs
sbb
(bad)
jno
xlat
xor
iret
shl
pop
aaa
paddq
outs
cmps
hlt
rsqrtps
push
and
or
call
jl
aam
fld
into
push
push
inc
push
mov
dec
stos
mov
push
inc
test
add
sti
retf
lea
push
mov
pop
push
pop
push
mov
dec
mov
inc
enter
test
add
and
xor
jae
sbb
or
ja
xor
or
cwde
cs
dec
inc
or
adc
sbb
xor
pop
ins
jb
jo
jo
fwait
inc
shl
shr
mov
pop
cmp
push
add
inc
aas
add
inc
addr16
in
(bad)
pop
xor
inc
mov
pushf
pop
addr16
in
cmp
daa
add
leave
jae
add
and
mov
fsub
add
pop
and
mov
or
adc
inc
iret
and
jns
neg
xor
lahf
rol
lahf
packssdw
hlt
mov
je
jl
hlt
pop
sar
lods
mov
les
shr
hlt
add
nop
or
mov
repnz
push
outs
ins
sbb
xchg
pushf
icebp
inc
cs
loopne
or
xchg
int
fld
int3
mov
mov
ror
xchg
xor
ffreep
icebp
sbb
lahf
mov
xchg
addr16
ja
call
push
pop
mov
fistp
enter
jl
enter
sbb
or
mov
inc
es
ja
enter
mov
jb
pop
mov
nop
pop
mov
movs
mov
mov
fsubr
pop
bnd
sub
movs
cmps
push
mov
(bad)
lahf
pop
cmp
dec
push
stc
(bad)
push
enter
jl
jns
in
xchg
pushf
jl
cs
test
or
in
and
adc
add
cmps
sub
aam
xor
mov
pop
pop
es
daa
iret
ins
je
aam
mov
movs
mov
or
in
xor
jl
in
fs
cld
add
pop
jb
mov
dec
jae
ds
inc
test
stc
(bad)
push
enter
enter
hlt
jl
inc
mov
inc
dec
enter
dec
bnd
in
test
push
pop
leave
jae
lock
in
int3
adc
out
and
jge
cmp
xchg
inc
out
pop
repnz
in
outs
xchg
sbb
jmp
rol
cmps
sbb
loopne
mov
ins
lahf
push
mov
mov
int3
push
loopne
push
add
pop
jb
inc
mov
fs
and
test
mov
jo
test
and
stos
lock
loop
and
aam
(bad)
jns
or
sbb
icebp
pop
dec
mov
stos
add
fisubr
shl
xchg
pop
stos
aas
ins
stos
adc
sub
sub
out
cmps
js
stos
test
push
enter
(bad)
mov
test
mov
or
lods
mov
jns
in
call
(bad)
add
call
out
call
adc
and
mov
lods
out
push
hlt
mov
pop
or
out
loop
and
sub
out
cmp
movs
jbe
lods
scas
call
push
sahf
out
add
das
out
pop
pop
outs
inc
jg
cmp
mov
mov
pop
fistp
push
int3
daa
add
shl
pop
cld
or
pop
and
cld
dec
or
mov
pop
push
push
lock
push
inc
sahf
(bad)
ja
cwde
cwde
shr
out
mov
stc
popa
ins
ja
in
in
scas
daa
in
xor
outs
inc
ss
sub
cmp
fadd
outs
xchg
lahf
out
sahf
and
test
and
outs
cmp
pop
mov
inc
addr16
cs
fdivr
pop
call
jl
mov
outs
adc
out
dec
js
mov
inc
push
mov
jge
push
mov
dec
aaa
sar
ja
cwde
fnstenv
mov
ds
jae
add
repnz
fsub
mov
int3
loopne
adc
pusha
cwde
sub
xor
enter
cld
mov
out
jns
fsub
push
mov
addr16
cmp
sbb
(bad)
lods
dec
test
mov
fwait
nop
adc
mov
data16
dec
es
mov
xor
inc
mov
xor
push
popa
aaa
and
and
jne
or
mov
test
mov
mov
or
and
addr16
fsub
sub
xor
int3
(bad)
push
jae
(bad)
addr16
in
pushf
cmp
bnd
in
call
lods
enter
mov
jae
adc
pop
add
or
inc
enter
hlt
call
imul
pop
mov
inc
iret
add
stos
dec
outs
daa
xchg
mov
in
nop
mov
mov
or
mov
add
out
dec
add
push
push
ja
(bad)
lahf
lock
cmps
or
add
ror
dec
mov
je
mov
mov
jg
push
push
ror
cmps
and
xor
mov
sar
push
pop
mov
ja
lock
or
outs
xor
mov
iret
outs
das
pop
sub
push
les
xchg
jg
push
sbb
cmps
and
or
push
outs
mov
int
push
mov
mov
mov
outs
or
enter
mov
stos
outs
dec
outs
add
mov
mov
cmp
jbe
cmps
and
ja
dec
enter
js
mov
xchg
mov
daa
inc
ja
lds
les
jmp
in
rol
fwait
pop
jb
or
adc
nop
adc
mov
lods
and
and
repnz
je
push
(bad)
iret
test
mov
(bad)
fcmovne
inc
(bad)
mov
ins
inc
dec
fwait
pop
or
adc
loopne
out
pop
cld
or
inc
mov
push
pop
or
sbb
fistp
dec
cmp
fwait
pushf
push
lods
mov
cs
lahf
mov
inc
sahf
or
cld
fs
mov
sub
sahf
imul
dec
mov
(bad)
dec
outs
xchg
clc
js
and
clc
ss
pop
js
in
daa
mov
aam
fsub
aas
add
mov
test
mov
sbb
sub
add
test
daa
in
or
int3
in
mov
push
add
pop
call
jnp
mov
xchg
call
push
mov
xchg
jl
cld
or
inc
es
inc
cmp
adc
push
mov
lods
sub
enter
xchg
mov
and
test
inc
xor
mov
test
push
jmp
mul
aas
xor
add
fmul
out
xor
xor
in
pop
pop
push
xchg
test
enter
cmp
jl
out
lahf
or
call
inc
dec
add
fdivr
es
pop
rcr
xor
inc
scas
pop
mov
pop
pop
xchg
in
sbb
data16
neg
mov
enter
mov
call
stc
adc
js
lock
rcr
dec
and
push
scas
ins
shl
xchg
jns
movs
scas
pushf
lods
les
add
adc
pushf
in
loopne
jo
(bad)
hlt
daa
add
add
rcr
jns
das
in
out
daa
fs
push
call
adc
dec
ss
rcl
stc
(bad)
outs
xchg
jl
mov
lods
dec
jl
cmp
fcomp
sahf
in
clc
cwde
xchg
fsub
xchg
test
xchg
cmp
sti
push
dec
ret
add
jns
mov
lahf
call
sahf
mov
nop
js
jmp
test
adc
adc
mov
ret
sub
cmp
inc
adc
mov
dec
jo
ret
xchg
pop
pop
shl
push
nop
ret
(bad)
jo
lds
nop
jmp
sub
es
ret
scas
rcr
in
mov
in
sahf
mov
test
sub
dec
les
and
(bad)
dec
pop
xor
mov
pushf
les
enter
shr
inc
ss
(bad)
jg
jmp
outs
fcomp
hlt
scas
pop
add
and
and
enter
xor
dec
lds
dec
js
daa
addr16
mov
mov
mov
rcl
jne
addr16
lock
nop
stos
fisttp
lahf
sar
fstp
sub
and
(bad)
xor
cmp
inc
pop
aad
aas
mov
(bad)
cdq
nop
dec
popa
jmp
mov
and
movs
(bad)
cmp
lahf
fwait
sbb
pop
fs
scas
in
fcmovu
cmps
add
mov
inc
add
nop
mov
or
enter
mov
cmp
mov
mov
dec
aam
repnz
in
mov
cs
dec
ds
cld
in
add
hlt
inc
adc
es
fisttp
pop
cs
out
pop
dec
daa
xchg
fld
mov
cmp
sbb
dec
nop
enter
and
in
loopne
lock
jne
jge
add
cmps
push
add
loopne
xor
(bad)
fild
leave
xchg
pop
add
dec
jl
daa
leave
jae
xlat
call
add
iret
test
rol
lock
nop
pop
pop
jb
aam
and
fs
pushf
xor
dec
retf
dec
imul
(bad)
in
in
pop
imul
inc
pop
xor
dec
or
retf
retf
adc
dec
mov
icebp
retf
push
xor
mov
fwait
cmp
lahf
ja
adc
dec
dec
fs
pop
je
pop
leave
jae
mov
nop
out
push
xlat
mov
in
push
call
or
sub
pushf
sbb
xor
sub
lods
sub
lods
cmp
lahf
mov
push
pop
and
mov
int3
push
pop
outs
mov
aam
add
jae
cmps
mov
les
repz
sub
inc
cli
push
cmp
daa
mov
jg
push
in
int
cmp
pop
add
cs
scas
ins
adc
sub
or
push
call
lock
in
sahf
adc
jae
ss
xor
dec
into
(bad)
adc
sub
in
aaa
and
jl
mov
movs
into
pop
add
jl
dec
repz
mov
aam
or
add
test
mov
sub
or
(bad)
stc
pusha
ins
ja
or
daa
shr
add
push
xchg
daa
aas
pop
pusha
ins
jne
dec
and
test
iret
iret
mov
repnz
js
fwait
adc
adc
and
xor
mov
ja
int3
xchg
scas
pop
jnp
daa
addr16
adc
mov
fs
nop
cmp
mov
ror
mov
fstp
rcl
rcr
pop
dec
and
sub
outs
dec
idiv
daa
addr16
push
fs
sub
push
aas
add
sub
mov
out
nop
test
les
enter
xchg
fnstcw
rol
hlt
mov
dec
adc
push
push
pusha
lahf
mov
add
sub
xor
fwait
hlt
nop
shl
jns
hlt
outs
test
shl
rcr
add
neg
enter
adc
jmp
ins
mov
sti
push
sub
xchg
inc
jmp
nop
out
xchg
or
pop
ins
xor
add
cmp
and
mov
and
enter
add
adc
push
pop
and
aaa
pop
mov
push
jmp
data16
jb
mov
adc
add
xlat
adc
sahf
popf
shl
xchg
push
sahf
out
cmp
out
xchg
arpl
dec
push
cmps
stc
cmp
stos
into
icebp
adc
(bad)
iret
repz
in
mov
add
jns
lea
push
dec
repz
xchg
jp
lahf
cmps
stc
cmp
dec
xchg
shl
xchg
call
sub
mov
xchg
pop
dec
jne
call
inc
xchg
repz
out
sbb
jns
out
cwde
dec
jae
or
push
stos
add
cmp
and
retf
stc
cmp
adc
repz
adc
inc
stos
adc
imul
out
push
js
(bad)
in
stc
cmp
repz
movs
iret
cmp
cmps
jmp
cmps
push
mov
int
imul
jmp
stos
(bad)
xor
stc
cmp
add
call
enter
xor
out
lods
iret
repnz
iret
repz
and
out
mov
pusha
jnp
iret
repz
out
mov
cmp
call
add
out
inc
popa
jl
mov
xor
out
repz
mov
bound
test
or
daa
lahf
out
sahf
dec
js
mov
xor
fiadd
cdq
fild
mov
out
ds
jno
sbb
xor
cmc
push
mov
lahf
out
call
mov
ss
dec
mov
ds
repz
or
inc
sar
cmp
xor
out
shr
call
dec
lds
repz
out
call
iret
repz
imul
out
ds
lods
xor
out
enter
enter
iret
repz
push
test
out
ds
fdivrp
adc
das
dec
iret
repz
mov
aam
lahf
out
call
retf
out
out
jbe
int3
push
dec
gs
repz
mov
jmp
repz
jno
sub
inc
jns
out
pop
jp
mov
stc
cmp
out
add
data16
repz
cmps
cmc
and
arpl
iret
(bad)
adc
sar
mov
pop
cmp
repz
xchg
scas
shr
jns
cmps
stc
or
and
pop
je
jns
out
stos
(bad)
aad
jns
dec
push
sub
inc
mov
cmps
stc
cmp
outs
xchg
mov
fadd
out
sahf
pusha
cmp
iret
repz
nop
into
pop
fisubr
call
(bad)
fsub
fucom
jns
fisttp
fnstsw
push
jnp
out
(bad)
fisubr
sub
push
and
test
cmp
repz
sbb
cmp
jns
out
mov
hlt
ins
ds
repz
in
loop
out
call
data16
fldenv
mov
retf
cmp
ins
mov
dec
lods
fistp
iret
sar
mov
out
xor
jns
idiv
std
daa
lock
popa
xchg
stc
cmp
out
push
icebp
imul
lahf
cmps
das
pop
dec
repz
out
call
scas
iret
repz
sar
sbb
test
dec
div
out
cmp
xlat
adc
jns
jns
xor
aad
repz
and
jno
jmp
sti
push
jge
out
push
mov
cld
data16
jl
cs
fisttp
inc
cmps
hlt
mov
jmp
iret
repz
push
mov
sbb
out
xchg
mov
push
inc
and
inc
outs
outs
aaa
sbb
adc
inc
rcr
push
adc
inc
add
ds
sbb
adc
and
jl
adc
inc
daa
mov
add
pop
into
repz
push
add
mov
xchg
mov
jae
cmp
ja
pushf
mov
pop
mov
lahf
fst
add
cs
cmovae
xchg
dec
dec
cs
ins
inc
repnz
mov
inc
jb
fcmovne
(bad)
pushf
in
jb
and
xor
lods
nop
out
push
mov
sbb
ja
xchg
inc
sbb
inc
add
call
mov
push
inc
pop
xchg
scas
mov
ja
dec
fcom
daa
movs
mov
pop
jb
add
jbe
rcr
xchg
push
setp
dec
das
sub
addr16
xor
loopne
and
in
and
xor
and
add
mov
push
fistp
xchg
(bad)
pop
fisubr
repz
popa
(bad)
or
add
daa
iret
leave
leave
or
pop
and
xchg
push
add
cmps
inc
iret
adc
cmps
inc
push
(bad)
daa
mov
dec
sbb
and
or
jbe
ss
jno
and
jecxz
xchg
pop
loopne
mov
pusha
clc
push
out
loope
mov
daa
cmp
push
mov
loopne
adc
lahf
xchg
mov
das
out
out
xchg
mov
adc
cmp
cmps
loopne
jbe
ss
adc
and
loope
test
dec
loope
pushf
dec
and
jmp
repz
or
leave
in
in
push
mov
or
adc
leave
leave
leave
inc
dec
sbb
lock
cmp
sub
bnd
fistp
xchg
inc
push
or
pop
in
cmps
in
sub
nop
loop
in
jb
loop
mov
mov
nop
xchg
and
mov
inc
xor
sahf
cmps
fiadd
leave
add
(bad)
sti
jns
fucomi
add
add
rcr
je
add
sub
rdtsc
mov
jns
mov
cmp
pushf
dec
push
pop
popa
pushf
pushf
pushf
pushf
imul
pushf
mov
cmp
fninit
outs
daa
iret
jae
sbb
test
dec
dec
mov
jnp
loopne
out
aaa
cmp
xchg
mov
in
pop
push
pusha
loopne
mov
add
inc
sahf
fs
lods
in
in
mov
dec
fimul
pop
jp
setnp
ret
mov
in
xchg
xlat
push
jmp
mov
push
enter
sub
mov
cdq
jle
mov
in
inc
and
inc
outs
inc
dec
das
mov
push
add
mov
mov
mov
daa
iret
jae
scas
xchg
or
cmp
(bad)
addr16
daa
iret
repz
ja
jg
dec
sahf
out
push
adc
push
pop
adc
or
mul
inc
xor
fisub
xchg
sbb
mov
inc
or
rcr
dec
mov
clc
mov
outs
emms
iret
jb
rcr
out
call
pusha
out
out
pop
mov
fistp
sahf
pushf
out
jmp
dec
and
paddb
out
inc
inc
mov
add
adc
cwde
pop
and
fucomip
xlat
add
dec
inc
out
adc
adc
shl
sbb
and
sub
cmp
dec
sahf
push
inc
dec
push
add
in
in
jnp
pop
jno
out
arpl
push
loope
jo
adc
fucomip
xchg
jns
aad
addr16
(bad)
fisub
(bad)
mov
test
inc
(bad)
mov
lea
mov
inc
jmp
lea
das
push
clc
call
dec
inc
(bad)
pop
adc
call
inc
add
jmp
addr16
scas
in
cmc
inc
jmp
pusha
inc
dec
enter
scas
push
sub
lea
fadd
xchg
and
jp
fsub
cwde
dec
mov
rcr
inc
scas
cs
mov
(bad)
mov
cvtpi2ps
inc
dec
int3
sahf
pushf
pushf
push
pop
bound
xchg
not
push
call
mov
mov
in
jbe
pslld
shl
repnz
(bad)
add
jae
add
push
fadd
jo
in
dec
mov
dec
add
in
cmps
dec
xchg
aas
test
xor
dec
sub
jo
add
push
cs
pop
mov
call
mov
cmp
aaa
mov
(bad)
in
xchg
and
(bad)
(bad)
(bad)
loope
lea
jb
(bad)
test
pop
sbb
xchg
xchg
xchg
xchg
sub
cmp
xchg
xchg
xchg
dec
push
pop
arpl
jne
test
xchg
mov
xchg
mov
ret
retf
xchg
xchg
xchg
xchg
(bad)
fsubp
icebp
leave
leave
enter
xchg
or
leave
leave
leave
leave
sbb
das
aaa
mov
xchg
aas
pop
into
repnz
mov
pop
add
ins
out
mov
jb
(bad)
movs
nop
jae
nop
out
ja
out
nop
xchg
sub
iret
push
pop
aam
nop
xchg
sub
sub
in
cmp
in
pop
enter
out
jg
adc
dec
out
fsubp
pop
inc
add
fmul
cmp
movs
out
in
(bad)
mov
push
adc
push
xchg
push
movhps
dec
dec
sahf
out
push
cs
xor
scas
dec
stos
pop
in
ror
dec
or
lock
enter
lock
lock
ja
ret
imul
iret
add
out
outs
pop
or
je
mov
in
(bad)
push
aad
pop
pop
push
icebp
inc
icebp
mov
pop
push
cmovb
mov
in
in
pop
pop
adc
pop
cmp
pop
sbb
pop
fld
pop
das
aaa
mov
pop
adc
xchg
iret
or
icebp
shl
sahf
aaa
jb
xchg
pop
pop
xchg
pop
push
add
xor
das
ja
and
in
repnz
repnz
rol
popa
push
add
add
pop
push
sbb
push
imul
mov
js
jb
cmp
repnz
and
dec
sbb
loopne
jge
pushf
pushf
pushf
test
sub
ins
arpl
pop
repz
cdq
dec
ror
add
cmp
fcomp
loopne
and
loopne
hlt
in
mov
xchg
or
push
add
mov
jb
dec
adc
mov
push
dec
mov
hlt
inc
cmp
cmp
dec
push
pop
pop
push
repnz
data16
lock
jb
and
leave
leave
leave
leave
mov
enter
fsubr
and
or
js
or
jb
xchg
pushf
mov
aam
fidiv
fsub
paddsb
sahf
out
push
hlt
pop
cld
jb
mov
inc
test
cmp
push
and
xor
inc
idiv
cmp
inc
inc
xchg
xor
in
rcl
gs
mov
iret
in
and
xchg
pushf
pop
mov
adc
addr16
pushf
dec
jmp
inc
pop
sub
xchg
ja
fmulp
inc
bnd
popa
xchg
aad
cmp
jno
cs
mul
scas
je
retf
out
movs
add
clc
nop
xchg
pop
enter
xchg
mov
and
lds
out
add
xor
dec
je
shr
iret
inc
iret
pop
mov
xchg
ds
dec
pop
push
leave
inc
jb
xchg
sub
scas
popf
fcmovne
leave
mov
jbe
dec
loop
(bad)
repnz
push
cwde
inc
dec
ja
fimul
pop
and
add
xchg
xlat
jb
pop
in
stc
test
out
push
arpl
fwait
inc
into
icebp
adc
pop
cld
stc
mov
and
js
cwde
pop
sahf
cwde
push
cli
inc
shr
scas
pop
xchg
cli
repz
int3
xlat
push
add
dec
cmp
iret
add
cmc
dec
mov
rol
mov
cdq
enter
sub
inc
mov
xlat
dec
jnp
sahf
out
cmp
xlat
or
jl
(bad)
lds
test
jmp
aas
iret
jae
xor
and
mov
or
repz
sti
pop
pop
inc
cld
sbb
add
or
out
lds
outs
pop
das
int
xlat
xlat
fisttp
stc
or
(bad)
fcomp
and
jl
les
pop
sbb
sbb
out
call
adc
idiv
repz
std
enter
or
cld
cld
fild
pop
pop
call
je
add
jg
jbe
cmp
or
pushf
cmp
fisttp
push
or
mov
cmp
pushf
or
dec
adc
(bad)
pop
xor
push
js
aas
inc
pop
clc
std
daa
pop
xor
shr
jmp
daa
daa
daa
jmp
sti
add
movlps
push
cwde
inc
ss
out
fwait
in
in
mov
push
ret
(bad)
jp
mov
push
ja
pop
jp
pop
addr16
(bad)
lahf
outs
pop
inc
pop
daa
add
pop
and
push
icebp
daa
push
enter
enter
pop
and
test
inc
rcr
adc
push
adc
sub
mov
movs
xchg
mov
fs
push
cmp
fwait
mov
sbb
mov
or
in
lock
pop
push
leave
inc
mov
dec
mov
fs
add
leave
and
mov
leave
rol
dec
or
sbb
cwde
in
push
inc
repnz
(bad)
cmp
pop
lods
push
xchg
lock
adc
xlat
xchg
loopne
mov
daa
test
mov
outs
mov
hlt
pop
lar
bnd
pop
cld
or
leave
pop
add
das
popf
xchg
pop
aaa
popf
aas
popf
add
cmp
lahf
test
xchg
cdq
xchg
and
or
add
ja
mov
das
pushf
es
xchg
push
dec
bound
out
out
sub
cs
jp
in
mov
or
jbe
out
or
repnz
pusha
and
mov
mov
mov
add
and
and
int
pushf
pushf
pushf
pushf
fucom
in
in
or
add
push
enter
dec
xchg
cmp
jb
xchg
adc
add
pop
add
lahf
ins
inc
inc
dec
hlt
(bad)
out
pop
add
jl
pushf
cmp
pushf
je
pop
pop
lsl
popa
shr
iret
or
das
(bad)
scas
test
add
xchg
jl
dec
adc
test
mov
push
ja
xlat
mov
pop
push
xchg
dec
push
lahf
pusha
add
jb
sahf
movs
sahf
lods
fwait
inc
call
xchg
pop
xchg
mov
mov
jae
ins
mov
pmulhw
prefetchw
or
and
push
cmc
addr16
loopne
repnz
and
repnz
lahf
inc
inc
aas
jns
mov
push
mov
(bad)
icebp
in
and
repnz
jg
lahf
mov
mov
aas
(bad)
push
pop
into
(bad)
icebp
stos
hlt
xlat
jbe
not
inc
setno
add
cmp
cmp
in
sbb
and
sub
add
dec
push
jmp
test
push
mov
(bad)
and
or
xor
pop
jmp
jbe
or
hlt
iret
mov
sub
pop
movs
in
push
mov
or
and
fmul
daa
pop
outs
ja
jg
repnz
and
(bad)
push
mov
leave
inc
mov
mov
mov
retf
jl
aas
add
inc
daa
ja
fnstsw
and
lods
outs
push
sbb
aas
in
iret
cmc
jnp
sahf
fmul
std
add
pushf
cmp
leave
adc
mov
leave
repz
dec
in
repnz
push
pop
pcmpgtw
jne
mov
daa
iret
mov
adc
fsubr
movs
pop
lods
mov
repnz
bswap
push
sbb
jbe
pmulhw
cmc
int
dec
and
mov
mov
and
cmp
xchg
xchg
dec
jae
sub
push
call
jb
jb
lea
shl
mov
or
mov
lock
fnstsw
jmp
in
std
inc
jmp
adc
loopne
mov
dec
iret
leave
ins
sar
movs
andnps
dec
outs
xchg
push
jmp
xor
push
jmp
jae
push
jmp
movs
pop
movs
bswap
ss
movs
bsf
out
popa
jmp
(bad)
movs
movs
movs
es
push
pushf
fmul
cmp
dec
movs
cmp
movs
movs
outs
movs
sub
leave
leave
movs
movs
movs
jae
popf
out
dec
setne
daa
iret
mov
add
ror
enter
dec
fisub
es
push
or
iret
jae
cmp
or
adc
sbb
daa
daa
daa
and
xor
(bad)
xchg
xlat
jno
jns
cmp
xchg
add
jns
leave
repz
mov
ret
ror
fcmove
rep
daa
loop
jmp
sar
add
dec
out
cmps
inc
push
cmps
push
add
add
dec
ins
sub
xchg
daa
pop
(bad)
mov
mov
pop
and
test
pop
test
mov
and
inc
push
add
daa
adc
push
adc
repz
push
add
daa
daa
iret
add
js
aaa
pop
lds
mov
sub
mov
(bad)
out
ret
dec
dec
retf
(bad)
mov
repnz
repnz
int3
fiadd
das
add
jns
leave
adc
push
or
or
sub
xor
or
out
ficom
cmp
inc
adc
out
in
adc
pop
push
push
bound
jb
dec
or
shl
mov
in
rsm
mov
mov
ret
and
leave
xchg
jns
fisub
dec
loop
sar
pop
rol
add
adc
sbb
pop
scas
push
out
daa
and
or
adc
dec
dec
dec
sahf
add
xor
inc
dec
dec
dec
dec
test
dec
push
jns
dec
dec
pop
pusha
push
out
adc
adc
icebp
in
nop
stos
pop
cwde
dec
adc
mov
mov
adc
not
xchg
dec
repnz
stos
jo
dec
mov
add
into
int3
mov
sub
(bad)
shl
sub
stos
lahf
call
fbld
imul
cmc
std
fs
neg
push
stc
cwde
adc
inc
jle
xor
pushf
(bad)
out
cmp
cmovno
fistp
mov
push
sbb
xchg
or
repnz
sar
enter
mov
test
mov
push
shr
call
clc
ja
and
dec
lods
in
hlt
push
xor
jns
add
add
lods
or
repz
push
adc
sbb
and
iret
repz
sub
xor
rcr
(bad)
iret
movs
mov
jmp
jb
pop
push
lock
mov
pop
cmp
scas
inc
loopne
dec
aad
inc
dec
push
call
inc
push
daa
test
les
loope
js
or
repnz
mov
iret
or
jecxz
jmp
pop
rep
in
inc
push
mov
jg
add
inc
aas
push
xlat
in
xchg
call
jnp
xchg
cmp
fild
xor
fcmovb
jbe
push
fist
and
xchg
dec
movs
or
leave
shl
cld
mov
and
xchg
mov
xchg
js
popf
in
mov
add
dec
ds
call
in
mov
dec
and
or
(bad)
xor
push
leave
xor
xchg
scas
push
xchg
xor
nop
xchg
dec
scas
cwde
test
xor
call
pop
add
sbb
jmp
(bad)
dec
sbb
pop
in
aad
nop
pop
sbb
xchg
mov
ja
jb
mov
push
lfs
aas
ja
add
iret
sti
das
fdivr
ds
push
(bad)
mov
stc
icebp
aad
cmp
xor
add
cmp
sbb
das
in
cdq
fs
sbb
sbb
pop
mov
mov
leave
push
xor
sbb
push
push
add
scas
cmp
pusha
jo
pop
sti
and
inc
iret
loopne
jmp
pop
daa
push
repnz
pop
push
mov
(bad)
test
hlt
repnz
mov
pop
pop
cs
js
mov
push
sbb
push
out
in
sbb
test
sub
in
push
mov
and
daa
inc
dec
shl
mov
inc
and
add
leave
mov
and
je
nop
scas
mov
xchg
pop
enter
jns
pop
mul
and
and
and
and
xchg
dec
js
cwde
pop
jb
pop
retf
sub
pushf
lock
loope
dec
jb
and
and
dec
es
(bad)
call
cmps
cmp
cmp
and
fsub
pop
sbb
add
mov
outs
call
pop
pop
cmp
sbb
jmp
add
inc
pop
mov
daa
xchg
xchg
je
mov
xchg
out
sub
mov
scas
mov
int3
and
and
and
jae
xchg
or
dec
and
xor
and
adc
xchg
scas
movs
and
je
aaa
leave
inc
mov
inc
cmps
sbb
or
xlat
and
xchg
push
jo
push
sbb
push
es
mov
imul
addr16
xchg
out
rcl
fs
and
mov
cmp
stos
nop
repnz
idiv
fnstcw
test
jnp
repnz
jbe
add
cmp
daa
iret
add
or
and
das
fadd
mov
push
inc
or
xor
das
xor
add
popf
mov
push
dec
pop
mov
cwde
nop
es
mov
in
mov
add
jg
cli
mov
daa
aas
mov
and
add
addr16
and
sub
push
and
nop
and
sub
sub
mov
mov
stos
(bad)
inc
cs
add
fist
mov
cs
mov
and
inc
inc
ds
fisttp
sub
lock
into
test
out
sahf
push
add
lock
xchg
cmp
push
push
clc
call
es
push
xlat
xor
movs
cmp
pop
xchg
adc
pop
jo
pop
or
xchg
pushf
xchg
iret
mov
and
pusha
and
pop
jo
loopne
pop
js
mov
mov
nop
das
cwde
pop
(bad)
and
daa
inc
pusha
sub
jns
cmp
or
mov
int
addr16
pop
pmaxsw
adc
retf
in
in
mov
lock
or
shr
inc
cmps
clc
das
or
and
ds
sub
sub
mov
sbb
add
stc
loopne
dec
mov
mov
cmp
inc
or
mov
in
sub
leave
leave
xor
mov
mov
outs
daa
pop
imul
xor
dec
mov
pop
mov
inc
push
enter
and
scas
mov
mov
inc
sub
xor
add
sub
mov
mov
sbb
sti
pop
mov
and
mov
sub
idiv
sbb
movs
adc
in
add
je
mov
mov
pop
in
inc
mov
cmps
in
xor
sub
jb
pop
enter
nop
out
jb
sbb
add
cs
fs
mov
mov
push
mov
inc
inc
test
pmulhuw
cs
mov
pop
paddq
bnd
sbb
das
mov
enter
das
xor
cmp
mov
je
je
jae
xchg
pushf
push
movs
lods
pushf
pushf
fsubr
mov
mov
repz
aam
fsub
movzx
hlt
cld
(bad)
sahf
out
call
cmp
cmp
and
pop
sub
in
jae
xor
sbb
inc
mov
test
mov
jl
sahf
push
xor
pushf
xor
xchg
pushf
inc
ja
dec
sahf
pop
mov
xchg
call
stos
das
mov
jbe
jns
mov
ror
out
in
(bad)
jmp
cli
add
daa
sbb
aaa
jb
cmp
pop
sbb
xchg
xlat
dec
dec
sbb
pop
nop
jp
gs
mov
dec
leave
cmovno
ins
and
mov
popf
mov
ins
pushf
lods
aaa
imul
cdq
sbb
fisttp
pop
xor
xor
add
loope
sub
add
push
mov
jo
mov
movs
push
jb
pop
aas
add
iret
mov
inc
push
adc
jae
repnz
adc
repnz
or
inc
mov
mov
cmp
popa
push
jbe
mov
ja
push
push
lea
iret
leave
repz
or
repz
or
int3
or
out
push
fimul
loop
icebp
sub
repnz
dec
(bad)
push
pop
fdiv
and
cmp
and
in
xor
cs
pop
mov
xchg
adc
and
sub
or
or
or
pop
movd
jns
out
jbe
jle
xchg
mov
sahf
mov
push
mov
mov
pop
sbb
ror
fsub
dec
push
loop
push
loopne
loopne
adc
(bad)
xor
jns
xor
jns
fisttp
add
ins
ja
cmp
inc
in
or
push
in
mov
mov
mov
push
aad
(bad)
jp
fsubr
push
dec
pushf
jmp
cmps
sbb
fs
sub
mov
out
lods
leave
or
mov
mov
dec
push
and
xchg
dec
pushf
in
pushf
pushf
pushf
pop
fsub
call
pushf
lock
xchg
sbb
leave
sbb
fs
sub
inc
mov
adc
sbb
and
sub
mov
pop
push
push
fs
in
in
in
dec
push
pop
es
data16
pop
push
call
inc
push
jns
cmp
cmp
call
outs
pop
inc
setno
cdq
push
add
cmp
leave
mov
cmp
leave
mov
or
out
leave
rcr
or
jbe
psubsw
adc
stc
cmp
add
jg
rcr
adc
jle
shl
sub
xor
leave
repz
cmp
dec
inc
ror
test
cmp
xchg
iret
or
or
adc
rol
mov
xchg
rcr
push
pop
int3
std
pop
adc
mov
in
sub
hlt
jbe
jb
(bad)
into
(bad)
setno
pop
rol
pop
xchg
js
add
or
add
leave
repz
or
and
or
sahf
out
sub
bnd
dec
ret
add
cmps
les
mov
or
aam
adc
into
jo
mov
jae
add
stc
pop
leave
call
leave
dec
cmp
fs
mov
in
out
pop
ror
out
in
adc
aam
push
and
fwait
adc
in
or
out
pop
pop
adc
sbb
push
add
out
sahf
dec
add
jmp
or
outs
or
leave
cmp
push
jbe
add
xor
ret
pop
shl
add
lods
cmp
scas
in
and
cmp
mov
in
in
aam
cmc
fwait
enter
les
(bad)
ffreep
outs
lods
fwait
pop
xor
scas
cmc
aas
add
or
fldenv
les
fidiv
and
bound
add
xchg
sub
les
add
sahf
out
or
mov
stos
or
mov
rcr
jns
adc
les
jmp
jns
lds
ja
sahf
out
pop
sub
jae
je
xor
in
aas
test
cmp
hlt
add
bswap
ds
mov
or
fdivr
push
xor
scas
push
aas
das
and
add
cmp
rol
call
add
push
mov
jg
imul
nop
inc
in
hlt
aas
add
inc
dec
mov
lds
inc
pop
leave
enter
pop
rcl
movs
xchg
jl
nop
mov
das
outs
dec
sahf
pop
xor
cld
or
daa
cmp
inc
push
inc
stc
pop
and
fs
jb
mov
mov
pop
std
scas
hlt
cmp
adc
push
jae
dec
jb
dec
inc
pop
ins
leave
push
jb
lods
movs
in
jb
mov
add
test
inc
leave
stos
fs
push
inc
in
jb
fs
jbe
in
test
jno
cmp
fbstp
add
cmp
inc
dec
inc
push
in
push
test
jns
add
mov
xchg
(bad)
mov
scas
inc
ja
mov
movs
leave
push
jb
scas
imul
inc
jb
in
cld
or
cmp
test
push
inc
leave
push
xor
jb
pushf
lods
or
in
test
xchg
push
leave
inc
push
inc
in
xor
inc
pop
push
test
and
mov
jl
paddsb
push
and
test
adc
cld
push
add
inc
xchg
mov
scas
ins
inc
inc
jge
xchg
dec
and
xchg
pop
and
cld
dec
and
pop
or
sbb
sbb
xchg
pushf
dec
push
dec
fs
stc
pop
and
xor
lods
mov
push
mov
adc
sub
sti
sub
mov
and
sbb
sahf
or
dec
das
pop
push
js
or
cs
das
mov
cdq
leave
movs
push
push
inc
bnd
cmp
leave
leave
leave
leave
fsub
call
leave
clc
add
(bad)
push
retf
retf
repz
and
push
or
push
add
repnz
dec
xchg
dec
inc
retf
out
and
dec
lahf
movs
dec
pop
enter
or
mov
loope
pushf
xchg
and
or
sar
les
nop
int
loope
aas
add
push
ret
mov
dec
sbb
and
daa
mov
pop
add
(bad)
adc
push
jnp
test
cmps
fmul
jb
dec
push
inc
into
jno
retf
push
inc
retf
dec
retf
push
test
outs
call
xchg
inc
and
sub
dec
and
mov
push
das
cdq
dec
clc
or
cmps
fimul
xchg
scas
push
dec
push
enter
jo
cs
dec
sub
dec
dec
enter
add
xchg
dec
cli
pop
je
leave
stos
sub
cmp
mov
in
scas
push
cdq
test
xchg
xchg
dec
xchg
movs
stos
dec
cs
mov
call
dec
inc
dec
push
dec
repnz
inc
bnd
mov
dec
in
add
pushf
dec
or
int3
and
in
int3
sahf
int3
test
ret
add
push
fwait
dec
mov
outs
scas
inc
jb
leave
fs
leave
and
int3
cmps
xchg
pop
leave
fdivr
adc
inc
jb
and
push
xor
leave
and
jl
xchg
pop
leave
mov
sahf
les
xchg
xchg
dec
aam
cmp
nop
push
xchg
cmp
pop
cmp
clc
lahf
mov
in
je
mov
cwde
mov
and
repnz
int
repnz
int
int
int
int
cmp
repnz
repnz
or
or
jns
out
into
or
or
pushf
dec
push
or
js
pusha
push
adc
xchg
xchg
jo
adc
xchg
dec
mov
scas
mov
pop
and
adc
and
and
or
daa
xchg
dec
and
xor
push
xchg
rcl
cmp
stos
jbe
scas
sbb
push
push
xor
inc
jb
leave
jo
nop
in
test
fsub
xor
hlt
call
push
jb
enter
and
das
iret
cmp
sbb
cmp
inc
push
add
add
pop
mov
mov
or
mov
dec
mov
inc
(bad)
iret
ror
(bad)
mov
jae
call
cmp
enter
rcr
shl
shl
inc
mov
shl
rol
dec
jbe
enter
shl
ins
shl
dec
cs
or
dec
dec
dec
dec
mov
dec
dec
dec
leave
aam
jmp
test
out
push
adc
sbb
leave
(bad)
js
adc
pop
add
ror
pop
pop
or
cmp
jb
sbb
inc
cmovnp
add
shl
dec
mov
leave
enter
and
iret
repz
jle
xchg
mov
repnz
xchg
sahf
jb
add
iret
mov
and
dec
push
mov
scas
mov
rcl
jae
in
test
and
jb
pop
sbb
pop
jb
push
jb
mov
call
lahf
rcr
xchg
dec
mov
aad
push
shr
es
and
pop
test
dec
cs
leave
cmps
xlat
xchg
in
xchg
ror
ror
aaa
outs
push
(bad)
jle
cmp
sbb
push
daa
sbb
leave
leave
leave
add
loope
push
je
leave
test
cmp
push
xor
pop
push
sub
scas
in
in
and
and
xchg
jmp
mov
lds
mov
daa
xchg
pop
and
push
daa
xchg
pop
dec
(bad)
aaa
inc
pop
push
repnz
pop
push
pop
fs
add
pushf
pop
pushf
in
rcr
mov
pop
fcomp
jbe
mov
fldcw
and
pop
inc
pop
mov
enter
in
cmp
adc
loopne
xchg
push
leave
out
into
leave
sub
and
jb
pusha
dec
pusha
xor
scas
in
xchg
test
scas
xchg
mov
call
enter
popa
inc
popa
push
popa
and
int3
mov
leave
leave
cwde
test
enter
addr16
popa
loopne
pop
and
lock
inc
(bad)
fimul
or
fs
push
bound
adc
xchg
fmul
jns
(bad)
lock
mov
pop
cs
test
sahf
pushf
inc
dec
aad
inc
call
sbb
arpl
jo
cmp
mov
lsl
mov
fld
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
fabs
jmp
xchg
stc
add
or
add
loopne
sbb
(bad)
aas
in
pop
add
jg
push
loope
pushf
pop
push
inc
sbb
or
in
mov
outs
out
mov
mov
add
jno
fist
jo
shr
xchg
loopne
and
addr16
lahf
imul
xor
push
lahf
cmp
leave
cs
jo
(bad)
adc
and
sbb
sub
mov
mov
repz
in
sub
outs
(bad)
sysret
hlt
push
jmp
xlat
jg
push
or
jae
mov
and
seto
les
(bad)
xor
loope
and
cwde
lods
inc
lahf
mov
aad
mov
mov
push
jmp
xchg
jb
mov
dec
or
lods
daa
xchg
leave
inc
pop
pop
push
xor
xlat
add
mov
ds
push
xchg
and
loope
inc
aaa
mov
xchg
in
stc
leave
add
js
lods
xlat
sub
mov
stc
sbb
push
out
push
lock
ror
add
mov
in
mov
out
cmove
addr16
push
ror
iret
jmp
loopne
jmp
js
imul
add
cs
push
call
clc
mov
sbb
imul
call
dec
xor
imul
imul
cld
aaa
or
das
jne
dec
enter
fdiv
outs
mov
test
fadd
lock
in
inc
mul
or
in
jno
ins
push
xor
mov
cs
aas
loop
jmp
aas
add
and
bsf
mov
in
jns
push
and
cdq
imul
dec
jb
sbb
imul
and
test
mov
mov
leave
sub
jae
mov
add
add
and
call
inc
sub
dec
or
enter
pop
ins
inc
fimul
cmc
dec
pop
dec
fidivr
push
ins
ins
jo
jns
iret
mov
add
nop
aam
out
inc
das
das
xchg
ja
ins
or
adc
mov
aas
push
movs
icebp
adc
inc
aas
loope
nop
inc
je
mov
pop
sbb
pop
xor
dec
add
retf
retf
cs
fstp
xchg
(bad)
leave
push
pop
ror
in
leave
leave
fabs
cli
add
add
in
or
sbb
out
shl
xor
pop
xlat
and
xor
outs
nop
outs
mov
dec
fistp
mov
es
cmp
adc
inc
cmovge
push
mov
xchg
out
pop
daa
into
leave
in
add
cmp
sub
fadd
and
inc
outs
cli
fadd
fld
lods
fsub
addr16
and
call
and
fwait
iret
mov
in
outs
mov
repnz
pop
push
and
fnsave
fstp
dec
sub
fnsave
fsub
mov
pop
and
inc
sahf
dec
in
shl
pop
add
jecxz
in
dec
ja
sbb
add
mov
push
cmovg
or
enter
sbb
jns
outs
pop
(bad)
sahf
movzx
add
sbb
jmp
dec
mov
addr16
aas
xor
dec
bswap
jae
jb
jae
adc
adc
das
aad
fnstsw
leave
repz
in
push
push
cmc
mov
sbb
jmp
jp
repnz
ffreep
jno
daa
xor
xor
fimul
hlt
jno
push
cmp
add
sahf
ja
inc
inc
test
and
outs
fild
repnz
mov
xchg
mov
push
pop
cmp
repz
or
iret
repz
or
minps
jl
mov
inc
xchg
pop
cs
xlat
in
push
stc
mov
inc
dec
pusha
jae
jae
sbb
mov
xchg
sahf
xchg
out
out
xor
cmp
sahf
xchg
out
es
mov
movs
ret
mov
add
inc
mov
or
loopne
loopne
enter
loopne
loopne
loopne
sbb
jb
loopne
loopne
loopne
mov
xchg
loopne
(bad)
iret
jae
mov
out
repnz
(bad)
into
pop
(bad)
jae
dec
sahf
push
fimul
or
leave
out
neg
in
in
add
adc
cmp
dec
retf
repz
pop
pop
daa
pusha
dec
sahf
aaa
adc
jo
jb
jne
js
or
nop
adc
iret
jae
xor
sahf
push
test
mov
mov
rcr
cmp
jbe
pushf
je
xor
fsub
scas
popf
cmp
mov
lock
cmp
loop
inc
lss
adc
or
ja
iretw
or
punpcklbw
adc
leave
push
jne
mov
mov
pop
retf
stos
sub
xor
inc
mov
(bad)
repnz
mov
in
add
in
jbe
jecxz
test
mov
iret
ins
ret
push
jecxz
mov
xchg
pop
test
ja
mov
pop
and
fimul
movs
jecxz
(bad)
das
adc
and
xor
cmp
call
stos
mov
inc
mov
fsubp
daa
mov
inc
in
addr16
mov
sets
mov
retf
mov
mov
pop
leave
arpl
push
cmp
gs
das
fnsetpm(287
shl
movs
js
and
cld
js
in
mov
in
pop
das
add
test
inc
seta
push
adc
ja
push
cmps
nop
in
cmp
dec
inc
jg
add
push
mov
enter
cmps
enter
addr16
mov
jns
scas
js
push
cmp
add
out
leave
adc
cmp
mov
push
jnp
mov
je
pop
cwde
jp
repz
xchg
arpl
jae
jnp
cmps
cmp
add
dec
and
jecxz
in
fs
or
fistp
ja
jo
rcr
mov
in
add
jnp
in
and
inc
mov
iret
sbb
prefetch
or
adc
mov
lea
out
jb
jb
xchg
jno
xor
cdq
mov
test
jb
jb
rcr
loope
repnz
adc
adc
stc
das
leave
leave
ins
test
dec
or
adc
repz
leave
and
sbb
sbb
fcmovne
cmp
dec
dec
push
mulps
and
jns
outs
xchg
out
or
mov
jb
out
mov
leave
(bad)
jmp
stc
mov
enter
leave
leave
sub
inc
xchg
fwait
adc
dec
daa
divps
sub
(bad)
xchg
xchg
mov
out
call
xchg
call
test
mov
cwde
enter
and
syscall
jmp
or
outs
mov
xor
jmp
daa
daa
mov
imul
daa
daa
daa
xchg
cdq
mov
daa
mov
ror
shl
cs
xlat
add
cmp
dec
sbb
hlt
cmp
cs
sbb
nop
pop
popa
and
inc
or
jmp
in
pusha
push
in
js
cdq
mov
out
jns
mov
mov
leave
sar
fstp
mov
stc
add
xchg
fst
sub
lahf
xor
in
ss
cmp
inc
jmp
dec
push
setae
bound
mov
xchg
xchg
jp
mov
daa
daa
mov
push
daa
ret
jle
adc
mov
mov
in
pop
cmc
jmp
in
inc
enter
add
push
loope
cmp
call
sbb
ja
pop
inc
mov
scas
enter
inc
popa
mov
adc
ja
cmp
inc
and
or
adc
aaa
leave
xchg
in
xor
aam
add
test
and
mov
push
dec
inc
jmp
sbb
pop
pop
adc
dec
cs
gs
mov
add
call
push
(bad)
fimul
mov
out
test
in
xchg
xchg
(bad)
in
and
sub
aad
xchg
in
xlat
add
dec
adc
repnz
es
clc
test
mov
imul
pop
(bad)
aas
add
jl
leave
aam
jmp
es
pushf
call
je
das
dec
shl
add
xchg
push
shl
dec
pop
mov
jmp
outs
pop
out
dec
adc
xchg
fisub
xchg
xchg
mov
ins
pcmpeqb
in
in
jl
dec
push
fmulp
in
in
fs
cmp
(bad)
push
not
add
inc
pop
and
pop
leave
sbb
in
rcl
fsub
mov
call
mov
out
pop
or
add
scas
mov
addr16
add
imul
sub
mov
fadd
jns
out
add
data16
mov
outs
fisttp
setns
or
mov
mov
mov
mov
add
fnsave
cmps
dec
sub
sahf
je
in
cmc
out
pop
jmp
xlat
les
mov
push
imul
xor
jg
lock
inc
ret
loopne
jg
addr16
xlat
mov
pop
in
(bad)
test
mov
push
ja
jns
leave
add
add
dec
cs
lods
nop
imul
mov
sar
icebp
cmp
(bad)
(bad)
add
pushf
jl
cmp
das
pop
popa
sub
out
daa
daa
pop
test
in
inc
dec
mov
aas
lds
or
enter
aaa
add
repnz
rcr
dec
addr16
jmp
push
scas
sbb
mov
lods
jne
and
or
xchg
cmp
leave
repz
movs
push
lods
mov
leave
repz
mov
das
lds
xchg
out
outs
jg
paddusw
or
sahf
in
in
cmc
(bad)
std
mov
or
add
dec
adc
xchg
mov
pop
sub
xor
cmp
sbb
fild
add
mov
les
mov
in
dec
in
in
xchg
push
jns
inc
fnsave
retf
sbb
xchg
add
fs
outs
pop
pop
ins
pcmpeqb
jg
xor
fwait
pop
repz
out
dec
jl
add
mov
leave
not
pop
push
pop
jle
mov
mov
enter
mov
clc
daa
cmp
inc
nop
addr16
add
cdq
nop
adc
inc
push
jmp
je
in
mov
lds
loop
addr16
cs
xchg
(bad)
js
popf
fmul
xchg
lahf
fbld
push
enter
(bad)
(bad)
pop
enter
nop
inc
pop
pushf
push
mov
shl
dec
push
mov
xchg
in
cmc
paddw
add
sbb
jb
add
and
push
dec
xor
push
jb
adc
and
and
xchg
mov
cmps
test
pop
push
xchg
pushf
sub
xor
or
dec
and
enter
mov
xor
cmc
aas
mov
ss
xchg
cmc
mov
dec
(bad)
adc
adc
test
xchg
fcmove
loop
aaa
xchg
int
nop
pop
add
xchg
xchg
fisubr
seto
adc
or
(bad)
mov
enter
xchg
cmp
inc
not
sub
cmp
mov
aaa
div
mov
out
sbb
mov
xchg
inc
iret
js
dec
push
adc
cwde
pushf
fsub
(bad)
xchg
outs
jne
iret
pop
into
jne
xchg
xchg
(bad)
fsubp
dec
dec
inc
or
fisttp
push
adc
ficomp
les
icebp
xchg
(bad)
lock
sub
inc
prefetcht1
not
div
mov
imul
rdpmc
outs
cmp
cmp
push
out
data16
in
mov
xchg
push
loope
and
add
mov
aas
mov
jbe
mov
lar
pop
or
out
add
xchg
adc
and
xor
cmp
xlat
xchg
mov
push
neg
iret
ins
ja
pushf
and
scas
inc
addr16
enter
xlat
aas
xchg
sub
inc
push
xchg
call
loopne
leave
inc
rcl
out
out
ret
leave
movs
lods
xlat
mov
xlat
and
ror
outs
xchg
dec
xchg
and
adc
cli
add
jae
ja
or
sub
dec
leave
add
in
enter
pop
pop
int3
xchg
scas
nop
out
dec
lods
(bad)
enter
adc
(bad)
cld
(bad)
in
and
push
stc
fild
sete
pushf
xchg
daa
adc
adc
mul
jns
or
out
lock
sahf
add
add
mov
pop
ds
inc
cli
xchg
mov
xchg
push
int3
sahf
xchg
push
mov
mov
inc
repnz
rcl
dec
loopne
in
push
sti
iret
push
sti
push
pop
push
sti
in
test
cmps
push
js
pop
loopne
jns
daa
pop
inc
dec
sqrtps
enter
pop
popa
ja
sti
dec
es
iret
add
cmp
movs
xchg
lods
push
xchg
xchg
mov
and
xchg
pop
out
adc
fild
out
inc
adc
inc
cmp
cmps
inc
addr16
mov
mov
xor
cmp
cmp
call
(bad)
pop
fwait
bsr
in
jb
int
aad
xchg
or
add
in
das
cmc
pop
sub
call
sub
dec
lods
std
iret
cmovno
daa
iret
jae
add
das
popa
std
daa
adc
imul
fisttp
outs
shrd
mov
das
int
add
psubb
inc
repnz
add
jb
push
and
push
imul
cmp
xchg
iret
and
test
dec
xchg
dec
loope
(bad)
inc
push
pop
addr16
out
fcmovne
leave
inc
xchg
pushf
movs
ja
mov
sahf
add
pop
dec
dec
fisubr
sahf
mov
cs
fmul
std
or
inc
adc
leave
sbb
wrmsr
cmp
xlat
popf
and
jle
add
daa
mov
ja
call
add
(bad)
daa
mov
lds
aaa
xlat
movs
adc
inc
push
adc
add
cli
or
mov
pop
push
cmp
out
inc
push
add
push
pop
sub
jns
outs
daa
daa
or
add
cs
dec
xlat
cmp
jbe
out
fcomp
paddq
je
add
in
sbb
mov
aas
xor
out
aas
jp
sbb
jb
xor
sub
inc
add
dec
cmps
sub
jbe
or
test
push
xor
test
mov
cmp
fst
test
enter
repz
cmc
ret
cmps
les
xchg
dec
shl
test
leave
mov
in
add
xor
sti
cmps
nop
or
ss
(bad)
and
mov
bound
add
push
fild
jmp
(bad)
mov
push
pop
test
or
fimul
sbb
adc
dec
mov
adc
xor
xchg
inc
outs
inc
cmc
es
jmp
inc
fsubr
jo
fadd
push
sbb
sub
mov
mov
sbb
aas
hlt
sub
sub
es
(bad)
fld
inc
add
sub
cmp
js
cmps
and
cmps
in
aas
pop
mov
xor
adc
wbinvd
xchg
sti
xor
lock
mov
and
and
(bad)
jo
je
in
cmp
push
cmp
dec
cmp
cmp
daa
fimul
outs
test
or
jb
jbe
jb
fldenv
jge
mov
inc
push
jg
sub
ds
mov
call
dec
enter
in
dec
or
sub
imul
shl
in
pop
std
xchg
add
(bad)
and
add
add
in
outs
xchg
jg
or
pop
add
(bad)
push
jo
call
aas
jnp
icebp
inc
inc
inc
inc
(bad)
fld
pop
stc
push
fwait
add
add
pop
jmp
stc
pop
ja
mov
popa
rol
pop
mov
shr
dec
mov
into
arpl
jnp
ins
ss
bound
addr16
loope
dec
popa
call
jle
jge
imul
sub
xor
jns
jae
out
imul
push
dec
dec
fidivr
out
inc
pop
icebp
arpl
cmp
adc
jns
not
inc
sub
xchg
xchg
sti
xor
int
js
jno
jg
xchg
ja
jge
cmp
push
int3
push
push
cmp
scas
je
adc
rol
cmp
out
(bad)
ret
repz
repz
ins
jge
mov
stc
cmp
shl
cld
or
and
inc
arpl
retf
out
fucomip
add
adc
repz
repz
pop
imul
cmps
mov
fcomi
add
out
call
jo
out
jo
pushf
lods
push
ror
push
add
retf
add
dec
add
sub
das
add
gs
sbb
dec
mov
and
and
and
ds
add
repnz
ins
stos
add
jb
push
jl
cdq
gs
mov
cld
outs
sbb
jne
ins
jns
cmc
mov
add
add
add
add
add
cmps
mov
add
or
mov
bound
push
test
stos
ins
in
inc
sub
aas
aaa
inc
(bad)
xor
and
dec
fsubr
dec
outs
xchg
add
or
sub
add
add
and
mov
daa
sbb
or
mov
sub
inc
dec
jae
mov
daa
(bad)
dec
stos
sbb
and
or
push
test
int
or
jb
pusha
int3
and
lea
in
inc
jbe
bound
and
retf
rcl
xor
inc
push
mov
mov
sbb
pop
sbb
cmps
jg
mov
test
xchg
das
add
sub
xor
pop
ds
dec
xchg
lea
jnp
xchg
jo
leave
sub
lahf
add
xor
cmp
xor
mov
xor
loop
sub
xor
fisubr
jnp
sub
mov
xchg
and
sbb
retf
aaa
push
imul
aaa
inc
inc
push
adc
xor
xor
(bad)
push
fwait
sub
cmp
inc
inc
inc
xor
xor
inc
aaa
cmp
inc
lahf
xchg
aad
inc
xchg
out
push
ror
cs
inc
push
dec
into
mov
xor
out
sbb
bound
sub
xor
mov
xchg
sar
mov
pop
sub
jnp
dec
dec
add
mov
mov
push
jae
add
and
dec
add
mov
sbb
mov
dec
outs
je
or
add
ins
call
mov
or
adc
add
scas
and
and
mov
ins
xor
lea
aas
and
dec
test
or
cmc
inc
xchg
sub
pop
cmp
add
and
or
pop
sbb
dec
mov
mov
add
neg
dec
jne
js
inc
inc
add
and
or
mov
adc
pop
mov
mov
xchg
jns
mov
outs
arpl
frstor
jmp
(bad)
nop
sub
out
sub
aam
ja
sub
les
aaa
jns
inc
push
jae
mov
dec
ins
xchg
and
xchg
dec
sbb
mov
imul
fst
push
fmul
call
xchg
pop
or
mov
sbb
test
add
sub
inc
dec
fisttp
inc
mov
rcr
inc
jmp
inc
adc
add
aas
fsubr
cs
sbb
mov
xchg
movs
sub
xlat
pop
adc
adc
fbld
jne
dec
ins
sbb
mov
imul
ret
or
rcr
inc
jb
push
imul
jo
pop
nop
(bad)
iret
lods
outs
mov
fbstp
push
loopne
xchg
jnp
push
in
pop
aaa
fwait
outs
movs
inc
adc
pop
pop
adc
or
aaa
ins
cdq
pop
gs
adc
xchg
scas
outs
xor
mov
pop
pusha
les
ins
adc
and
sub
cmp
popa
mov
inc
push
out
ins
mov
inc
addr16
outs
fsub
cmps
les
inc
cmps
add
cmp
aaa
mov
inc
cmp
pop
push
xchg
scas
mov
adc
rol
and
and
push
fadd
pop
ret
push
inc
out
or
adc
inc
mov
sub
stc
out
sub
ins
popa
lahf
inc
sbb
sbb
pop
aad
popa
ss
adc
push
adc
out
pop
out
test
push
popa
push
add
inc
adc
and
in
adc
mov
jns
sahf
call
pop
pop
mov
sub
in
bound
pop
add
inc
ds
pop
xchg
pop
in
in
add
add
sbb
repz
push
loop
add
mov
adc
or
pop
mov
pop
enter
or
jb
pop
jb
pop
or
add
or
enter
mov
pop
lds
mov
imul
pop
cmp
inc
ds
add
or
es
daa
pop
fadd
mov
pop
ds
push
aas
or
adc
fist
mov
lds
sbb
lahf
dec
mov
mov
pop
add
add
lds
jbe
lahf
and
or
pop
sbb
outs
pop
push
pop
fisubr
pop
jne
iret
jae
out
and
inc
inc
sub
pop
enter
add
(bad)
cmc
sahf
add
test
or
pop
mov
xchg
sbb
mov
mov
mov
test
inc
imul
imul
es
cdq
bswap
pop
and
jecxz
push
loopne
add
inc
cmp
daa
jl
inc
and
inc
and
out
and
mov
and
cmc
inc
xchg
mov
inc
add
push
aaa
daa
test
cmps
(bad)
push
leave
push
mov
push
lahf
jecxz
bound
and
aas
lds
and
adc
inc
dec
imul
shl
inc
xchg
iret
out
xchg
test
js
ins
mov
bound
mov
lea
jg
mov
add
pusha
stos
aaa
jns
jl
add
and
xor
mov
fs
je
das
stos
pusha
dec
rcl
push
mov
adc
retf
arpl
int
pop
test
outs
push
ja
popf
test
sbb
test
xlat
js
adc
ss
rcr
mov
or
ja
clc
adc
adc
xchg
and
repz
push
(bad)
daa
cmp
test
pusha
ja
cmps
push
adc
jle
es
sub
push
add
cwde
pop
stos
pusha
cmp
comiss
add
pop
cmp
fisubr
mov
pop
nop
jg
mov
jns
push
add
add
pop
mov
mov
addr16
push
pop
xchg
adc
fbstp
cmps
les
mov
mov
scas
add
push
adc
push
pop
xlat
movs
sub
mov
aad
or
(bad)
out
out
inc
and
sbb
add
or
sbb
pop
xchg
cdq
jne
outs
push
out
xchg
inc
jg
sbb
xchg
pop
pop
add
push
or
scas
dec
jo
add
or
ins
adc
cmp
add
sbb
mov
pusha
jo
stos
aaa
lods
add
inc
(bad)
adc
push
or
sbb
int
int
shr
(bad)
add
inc
jmp
(bad)
jne
xor
das
ror
fld
mov
aas
data16
imul
repz
pop
push
jl
cmps
ins
test
xor
dec
and
movs
add
popa
inc
mov
inc
imul
inc
movq
js
xor
into
and
repnz
inc
add
adc
shl
mov
retf
je
pop
xchg
cmp
adc
add
sbb
adc
jne
jae
sbb
cdq
xor
xor
pop
(bad)
(bad)
add
pop
add
aas
inc
in
ins
and
rcl
inc
mov
adc
je
jle
dec
inc
js
mov
jl
out
or
iret
repz
les
xchg
adc
ds
repz
sbb
in
jns
out
sbb
sahf
out
push
sub
enter
cmp
mov
iret
push
call
pusha
add
dec
cld
daa
adc
mov
jbe
iret
ins
dec
push
(bad)
sbb
or
xchg
fcmovne
leave
or
or
or
or
daa
popf
fsubr
adc
and
pop
inc
inc
push
addr16
das
outs
mov
in
push
xorps
ins
xchg
out
push
push
and
jb
fild
or
iret
add
sub
mov
sbb
aas
xlat
sbb
data16
daa
add
jns
add
daa
out
wbinvd
inc
add
mov
mov
sgdtd
add
ins
lds
add
adc
cmp
and
inc
sub
add
add
je
cmp
adc
inc
add
es
ret
push
pusha
cmp
push
ds
cmps
fisttp
mov
cld
inc
jle
sub
and
fisub
xchg
pop
stc
call
iret
mov
in
call
ja
jle
adc
push
ficomp
mov
cmps
in
fidiv
rcr
fsubp
stc
jb
jle
call
inc
pop
inc
inc
lods
and
push
add
cmp
imul
call
pushf
mov
out
jle
push
xlat
dec
rcl
push
add
in
xchg
out
or
mov
jns
in
add
aam
xchg
xchg
or
test
(bad)
adc
fsub
jno
or
data16
div
inc
or
sbb
xchg
std
mov
add
imul
or
adc
sti
rol
jo
rcr
test
or
push
jno
test
sub
cmps
or
sbb
xchg
add
jp
push
mov
ins
or
pop
mov
mov
mov
mov
mov
ja
cmp
mov
jmp
cwde
push
push
sahf
dec
dec
inc
repz
repz
cmp
xor
out
cmp
and
add
popf
sahf
out
sahf
lock
call
sahf
out
fcom
ror
enter
out
les
mov
mov
cwde
push
nop
mov
jns
out
pop
pop
push
dec
xor
sbb
cmps
(bad)
test
cmps
and
jnp
jg
shl
add
xchg
aas
xchg
mov
sbb
sub
aas
mov
pop
xchg
(bad)
ret
aas
inc
(bad)
call
cdq
sbb
xor
jns
out
push
outs
jne
add
xchg
scas
mov
dec
repz
into
jmp
iret
repz
pop
bound
repz
ret
add
out
sahf
cmps
push
cmp
sahf
out
sahf
xchg
cmp
repz
or
sub
dec
repz
repz
outs
sbb
into
shr
repnz
repz
repz
ds
jb
xchg
mov
mov
loop
push
mov
cld
fimul
xchg
dec
push
jle
inc
inc
adc
jb
mov
add
pop
enter
sbb
jo
psllw
imul
shl
pusha
push
sahf
mov
push
cmp
cmp
repz
pop
js
mov
idiv
iret
repz
xor
add
cmp
fwait
cmp
pop
ja
mov
imul
add
dec
sub
lahf
ins
xchg
add
clc
call
sahf
xlat
aad
lea
lahf
xchg
sbb
sahf
out
add
or
call
adc
and
push
into
repz
cld
sahf
or
repz
cmps
dec
ds
cmp
jnp
adc
les
ror
in
sahf
fmul
aam
pop
sbb
jnp
out
int3
sbb
push
iret
repz
push
mov
in
lahf
xchg
push
and
sahf
mov
jle
ja
adc
pop
add
adc
inc
sahf
pop
test
add
enter
jl
xchg
or
ret
mov
adc
pop
in
adc
sbb
call
mov
mov
ret
inc
and
sahf
mov
sub
inc
(bad)
(bad)
(bad)
call
pop
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
add
dec
pop
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
jmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
(bad)
(bad)
(bad)
jmp
inc
or
add
cmps
xchg
cmp
xor
dec
cmps
(bad)
(bad)
(bad)
jmp
pop
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
(bad)
(bad)
(bad)
(bad)
xchg
clc
repz
mov
sub
fwait
xchg
and
and
sar
jno
or
mov
fisttp
clc
aas
pop
fs
dec
lea
(bad)
(bad)
call
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
(bad)
(bad)
(bad)
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
(bad)
(bad)
(bad)
(bad)
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
test
movs
jmp
jg
sub
jge
mov
inc
rcr
push
ds
(bad)
(bad)
(bad)
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
fnsave
nop
sbb
add
(bad)
mov
inc
inc
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
add
movs
and
mov
cmps
push
lahf
inc
pop
mov
sub
(bad)
(bad)
(bad)
dec
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
cli
(bad)
inc
gs
std
or
pop
ficomp
frstor
mov
push
jnp
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
or
add
inc
add
outs
and
push
gs
adc
or
push
sbb
pop
jo
fs
adc
dec
outs
ja
mov
and
push
inc
data16
gs
adc
cwde
imul
ja
sbb
push
popa
jae
xchg
push
dec
or
or
add
cmp
mov
and
xor
push
and
ja
sbb
and
mov
test
push
mov
popa
pop
arpl
cmp
inc
imul
dec
inc
js
sti
mov
add
imul
mov
movs
push
outs
pop
jg
sub
mov
sar
push
imul
cdq
jg
fs
inc
or
aam
popa
imul
push
inc
jge
cmp
int
jo
imul
int3
enter
push
aas
out
fs
hlt
aaa
adc
sbb
movs
mov
sbb
sbb
xchg
mov
mov
inc
push
push
add
cmp
push
std
mov
in
push
or
inc
jo
lods
mov
sub
sbb
mov
dec
sbb
outs
retf
dec
add
lock
outs
adc
cdq
xor
cmp
pop
cs
cli
xor
and
or
push
mov
adc
shr
(bad)
push
inc
push
inc
gs
pop
sbb
cmc
add
fldcw
or
mov
adc
repnz
es
push
outs
push
imul
popf
jbe
(bad)
cmp
cli
push
inc
(bad)
xchg
dec
stos
sub
ret
ins
repz
jmp
sub
pop
mov
ins
xchg
ins
test
fidiv
adc
cs
sub
pop
inc
dec
inc
xchg
push
ror
adc
cmc
or
les
fs
popa
mov
mov
jne
sub
and
jae
mov
leave
aam
je
cmp
sbb
cmc
cmp
add
xchg
inc
test
sbb
mov
(bad)
jno
movs
aam
jno
inc
nop
pop
jo
push
sub
push
inc
gs
xchg
pop
rol
xor
inc
xlat
adc
fimul
push
movs
adc
xor
push
test
mov
mov
aas
jg
pop
jae
add
mov
mov
inc
in
gs
inc
push
iret
fwait
push
popa
jmp
xchg
fadd
pop
push
xchg
ins
or
pop
sbb
and
xor
push
push
jecxz
and
iret
inc
inc
and
ds
jecxz
push
aam
rol
mov
inc
jb
xchg
dec
push
dec
dec
inc
dec
dec
xor
push
jns
adc
les
sbb
test
mov
jl
cmp
dec
adc
inc
daa
or
push
mov
sub
in
mov
gs
loop
test
push
shr
or
ret
jge
adc
mov
sbb
ficom
sub
scas
adc
mov
adc
push
jae
das
pop
hlt
jo
or
push
xlat
inc
cmps
inc
enter
leave
sbb
cmp
sub
addr16
repz
jae
adc
gs
shl
(bad)
or
es
cmc
leave
movs
bound
inc
pop
push
inc
mov
or
inc
mov
inc
call
pop
dec
add
(bad)
sahf
aas
sub
xchg
xor
push
inc
out
mov
push
sbb
aam
sub
cmp
cmp
stos
cmp
popa
sub
inc
fidiv
loop
sub
popf
push
lahf
push
mov
pop
push
jnp
rol
push
daa
aad
dec
repz
push
inc
ret
pop
jne
add
pop
aam
xor
sub
mov
arpl
inc
ret
dec
push
sbb
mov
adc
sbb
sbb
int3
xor
cmp
fsub
lds
ss
frstor
pop
jo
mov
sub
add
jbe
sub
push
mov
cli
daa
nop
mov
add
hlt
mov
bound
xor
or
loope
and
and
ja
push
js
mov
es
xchg
js
sbb
sar
arpl
xor
inc
add
je
fs
fidiv
sbb
das
and
gs
inc
push
or
mov
xlat
call
push
or
adc
xor
xchg
fmulp
cmps
jecxz
pop
sbb
add
inc
pop
jmp
pop
fist
stos
add
cmps
sbb
lea
sbb
lods
push
call
adc
push
cmp
icebp
xchg
mov
addr16
xchg
cmps
and
loopne
push
mov
pushf
inc
fldenv
xchg
imul
jne
add
pop
dec
jb
and
mov
or
enter
push
cmp
and
lods
movs
ins
cmp
pushw
and
sub
sbb
or
push
add
nop
or
dec
add
sbb
push
or
add
shl
sbb
xor
or
mov
inc
ins
nop
mov
add
pop
pusha
push
popa
out
push
jo
mov
sahf
pop
mov
ja
enterw
je
push
in
push
pop
or
sti
mov
(bad)
jl
imul
pop
sbb
nop
gs
ret
sbb
lods
retf
adc
xor
xor
or
adc
inc
imul
rol
xor
retf
and
inc
sub
scas
ins
mov
iret
inc
pop
xchg
jbe
mov
xor
ja
repz
mov
jae
das
or
push
or
sub
lea
add
les
ja
dec
dec
add
add
or
fistp
daa
pop
adc
je
pop
adc
adc
inc
pop
add
fst
jmp
or
sub
pop
repz
add
add
add
or
nop
cli
cs
push
mov
mov
fiadd
add
idiv
or
data16
jo
sbb
mov
sub
push
cwde
inc
mov
pop
add
cs
mov
add
pop
add
mov
push
cwde
cs
popa
lods
ins
adc
adc
clgi
repnz
dec
adc
loopne
cld
mov
jae
arpl
push
movs
ss
out
or
inc
xchg
add
adc
or
dec
inc
ss
xor
dec
cmp
add
push
dec
inc
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
repz
add
aam
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
adc
add
sub
sbb
add
push
add
add
add
js
add
mov
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
pop
or
test
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
mov
add
fadd
add
add
add
sub
add
push
add
xor
add
js
add
mov
pop
add
enter
std
pop
add
lock
cmp
add
sbb
add
inc
add
add
add
sbb
add
or
push
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
enter
xor
add
sbb
add
add
cld
das
or
movs
add
add
add
add
add
add
xor
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
or
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
cmp
add
add
add
pop
add
add
add
add
sbb
add
cmp
add
add
add
add
add
add
add
add
add
add
or
add
add
add
ds
and
add
aam
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
or
sbb
add
add
add
add
add
add
or
add
inc
or
ret
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
jae
add
add
add
add
add
add
add
jae
add
add
add
add
ja
ja
ja
jae
mov
add
emms
ja
ja
sti
jae
mov
add
vmread
jae
mov
mov
js
ja
ja
jae
mov
ja
add
add
js
ja
ja
jae
mov
add
emms
ja
ja
sti
jae
mov
add
emms
ja
ja
sti
jae
ja
ja
add
add
js
mov
mov
add
js
ja
ja
jae
ja
ja
add
add
js
ja
ja
jae
ja
ja
add
add
ja
ja
ja
jae
ja
ja
add
add
ja
ja
ja
jae
ja
ja
add
add
js
mov
mov
add
js
ja
ja
jae
ja
ja
add
add
js
ja
jnp
mov
ja
add
emms
ja
jnp
mov
ja
add
add
ja
ja
mov
ja
ja
add
vmread
(bad)
mov
add
add
js
jnp
mov
ja
mov
add
vmread
ja
mov
add
emms
ja
mov
sti
mov
add
(bad)
(bad)
sti
mov
sti
mov
add
add
sti
mov
sti
mov
add
int3
int3
sti
mov
sti
mov
add
int3
int3
sti
mov
mov
add
bswap
int3
iret
mov
mov
add
bswap
int3
iret
mov
mov
add
bswap
int3
int3
sti
mov
int3
int3
int3
add
add
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
add
ud0
lock
add
add
(bad)
cld
aas
jmp
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
(bad)
clc
pop
jmp
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
or
or
ret
sti
jp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
ret
sti
jp
or
or
or
or
or
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
jp
mov
out
out
out
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
jp
mov
out
out
out
or
or
or
or
out
in
in
in
in
in
in
in
in
in
ret
sti
jp
jp
mov
in
in
out
or
or
or
or
out
in
in
out
out
out
out
out
out
out
ret
sti
jp
jp
mov
out
out
out
or
or
or
or
out
in
in
out
out
out
out
out
out
out
ret
sti
jp
jp
mov
out
out
out
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
jp
mov
out
out
out
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
in
in
in
in
in
in
in
in
in
ret
sti
jp
in
in
in
in
in
in
in
in
in
out
or
or
or
or
out
in
in
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
in
in
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
out
out
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
in
in
in
in
in
in
in
in
in
ret
sti
jp
in
in
in
in
in
in
in
in
in
out
or
or
or
or
out
in
in
out
out
out
out
out
out
out
ret
sti
jp
out
out
out
out
out
out
out
out
out
out
or
or
or
or
out
in
in
out
out
out
out
out
out
jp
sti
sti
push
push
out
out
out
out
out
out
out
out
out
or
or
or
or
out
out
out
out
out
out
out
jp
cmp
sti
sti
cmp
push
out
out
out
out
out
out
out
or
or
or
or
out
out
out
out
out
out
jp
sti
sti
sti
sti
sti
sti
sti
cmp
out
out
out
out
out
out
or
or
or
or
out
in
in
in
in
jp
sti
sti
jp
ret
ret
ret
mov
in
in
in
in
out
or
or
or
or
out
in
in
out
out
jp
sti
jp
out
out
out
out
ret
mov
out
out
out
out
or
or
or
or
out
in
in
out
ret
mov
out
out
out
out
out
ret
mov
out
out
out
or
or
or
or
out
out
out
out
ret
mov
out
out
out
out
out
out
ret
sti
cmp
out
out
out
or
or
or
or
(bad)
(bad)
(bad)
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sti
cmp
(bad)
(bad)
dec
or
or
or
dec
or
or
mov
or
or
or
ret
sti
cmp
or
or
or
or
or
inc
mov
push
mov
mov
mov
or
or
or
mov
sti
jp
mov
ret
jp
cmp
out
out
(bad)
or
or
or
or
mov
mov
mov
sti
cmp
out
out
out
(bad)
or
or
or
or
mov
mov
push
jp
jp
sti
cmp
out
out
out
(bad)
or
or
or
or
mov
ret
mov
sti
sti
sti
sti
cmp
mov
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
or
or
or
or
or
or
or
or
ret
ret
ret
ret
ret
ret
or
or
or
or
or
or
or
cld
aas
jmp
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
(bad)
clc
pop
call
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
push
or
or
or
or
out
or
or
or
push
jp
sti
or
or
or
out
out
out
out
out
sti
push
jp
out
out
out
or
or
out
out
out
out
out
sti
push
jp
sti
out
out
or
or
out
out
out
out
out
sti
push
out
out
out
out
out
or
or
out
out
out
out
out
sti
push
out
out
out
out
out
or
or
out
out
out
out
out
sti
push
out
out
out
out
out
or
or
out
out
out
out
out
sti
push
out
out
out
out
out
or
or
out
out
out
out
sti
sti
sti
push
out
out
out
out
or
or
out
out
out
sti
sti
sti
call
or
(bad)
out
out
call
push
out
out
or
or
mov
mov
or
or
mov
mov
or
or
mov
(bad)
sti
sti
push
mov
(bad)
(bad)
call
sti
(bad)
(bad)
(bad)
out
or
or
or
or
or
or
or
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
js
or
sub
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
pop
add
or
ja
jnp
mov
add
ja
jnp
mov
ja
mov
ja
emms
ja
mov
ja
emms
ja
mov
ja
emms
ja
mov
ja
emms
ja
mov
ja
mov
emms
sti
mov
mov
sti
int3
int3
sti
int3
add
int3
sti
int3
int3
mov
(bad)
mov
ud0
sti
mov
add
(bad)
inc
add
(bad)
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
loopne
or
add
(bad)
inc
add
add
add
add
or
add
add
add
mov
add
add
jb
outs
add
jns
and
popa
add
je
push
add
jp
popa
add
add
outs
add
add
add
add
and
push
add
add
add
add
add
add
add
add
xor
push
add
add
add
inc
add
add
push
popa
add
xor
push
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
push
str
add
push
add
(bad)
(bad)
(bad)
(bad)
inc
add
imul
add
add
add
add
push
add
(bad)
(bad)
(bad)
(bad)
inc
add
jae
ja
outs
add
add
add
add
add
inc
add
add
add
add
retf
add
add
add
xchg
add
add
inc
add
jo
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
xor
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
inc
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
jb
dec
add
fadd
add
(bad)
inc
add
add
push
pop
add
add
js
fiadd
add
(bad)
inc
add
or
add
(bad)
inc
add
add
add
dec
add
nop
or
add
add
add
add
popa
add
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
push
pop
add
mov
or
add
inc
add
add
push
adc
pop
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
xor
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
inc
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
jb
dec
add
fadd
add
(bad)
inc
add
add
push
pop
add
add
js
fiadd
add
(bad)
inc
add
or
add
(bad)
inc
add
add
add
add
retf
add
add
add
xchg
add
add
inc
add
jo
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
xor
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
inc
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
jb
dec
add
fadd
add
(bad)
inc
add
add
add
add
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
push
add
push
pop
add
add
js
fiadd
add
(bad)
inc
add
fwait
or
add
(bad)
inc
add
add
add
add
retf
add
add
add
mov
add
add
popa
add
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
push
pop
add
add
add
(bad)
inc
add
add
push
pop
add
add
add
(bad)
inc
add
add
push
adc
pop
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
xor
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
mov
fs
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
pop
add
repnz
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
mov
dec
add
fadd
add
(bad)
inc
add
add
push
pop
add
add
js
fiadd
add
(bad)
inc
add
popf
or
add
(bad)
inc
add
add
add
add
retf
add
add
add
jmp
add
popa
add
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
jns
jae
push
add
bound
inc
add
outs
add
add
ins
add
add
add
push
adc
pop
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
xor
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
aad
dec
add
fadd
add
(bad)
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
mov
adc
adc
add
pop
add
(bad)
inc
add
add
add
add
add
inc
add
add
add
pop
add
(bad)
inc
add
add
add
add
add
and
add
add
add
icebp
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
add
add
repnz
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
lock
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
lock
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
mov
(bad)
inc
add
add
add
add
retf
add
add
add
jmp
add
popa
add
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
jns
jae
push
add
bound
inc
add
outs
add
add
ins
add
add
add
push
adc
pop
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
aad
dec
add
fadd
add
(bad)
inc
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
mov
adc
push
ret
add
add
inc
add
add
add
pop
add
(bad)
inc
add
add
add
add
add
and
add
add
add
lock
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
add
icebp
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
lock
repnz
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
mov
adc
add
add
inc
add
add
add
add
add
and
add
add
add
lock
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
and
add
lock
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
add
(bad)
inc
add
add
add
add
enter
add
add
add
add
add
add
popa
add
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
pop
add
push
add
xchg
add
add
pop
add
(bad)
inc
add
add
push
pop
add
add
add
add
add
(bad)
inc
add
add
push
pop
add
push
add
add
inc
add
add
push
pop
add
add
add
(bad)
inc
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
push
push
add
add
add
add
add
(bad)
inc
add
add
push
push
add
add
add
add
add
(bad)
inc
add
add
push
push
add
add
add
add
add
(bad)
inc
add
add
push
push
add
add
add
add
add
(bad)
inc
add
add
push
push
add
clc
add
push
or
add
inc
add
add
push
push
add
clc
add
pop
or
add
inc
add
add
push
push
add
clc
add
or
add
(bad)
inc
add
add
push
push
add
clc
add
or
add
(bad)
inc
add
add
push
push
add
add
or
add
inc
add
add
push
push
add
add
or
add
inc
add
add
push
push
add
add
inc
add
add
push
push
add
add
add
push
or
add
inc
add
add
push
adc
pop
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
loop
dec
add
fadd
add
(bad)
inc
add
call
dec
add
nop
pop
add
add
add
xchg
add
add
inc
add
jo
je
imul
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
push
add
pop
add
(bad)
inc
add
add
outs
add
add
push
adc
sbb
dec
add
add
pop
add
(bad)
inc
add
add
outs
add
add
add
add
add
and
add
add
add
add
pop
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
add
or
push
ret
add
or
fild
add
push
add
arpl
push
add
je
xor
xor
push
add
add
add
push
adc
jb
dec
add
fadd
add
(bad)
inc
add
and
push
pop
add
add
add
and
add
(bad)
inc
add
add
xor
or
add
add
push
add
add
inc
add
add
xor
add
add
dec
cmps
or
inc
dec
xor
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
push
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
mov
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
rcl
rol
add
add
add
(bad)
(bad)
(bad)
(bad)
call
rcl
dec
dec
dec
dec
dec
dec
mov
mov
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
mov
(bad)
(bad)
(bad)
(bad)
push
dec
dec
dec
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
add
push
(bad)
(bad)
(bad)
jmp
add
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
jmp
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
mov
add
jl
jl
(bad)
(bad)
mov
add
mov
add
mov
(bad)
(bad)
(bad)
inc
add
add
add
rol
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
jmp
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
lock
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
mov
jl
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
dec
dec
dec
(bad)
(bad)
jmp
loope
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
add
mov
(bad)
(bad)
(bad)
jmp
add
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
(bad)
(bad)
(bad)
(bad)
jmp
add
dec
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
mov
add
mov
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
cmps
(bad)
(bad)
push
add
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
add
add
push
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
rcl
dec
dec
dec
jl
jl
(bad)
(bad)
(bad)
(bad)
jmp
push
lock
(bad)
push
lock
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
push
(bad)
push
add
add
mov
(bad)
call
rcl
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
dec
dec
dec
dec
dec
dec
mov
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
dec
dec
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
dec
dec
dec
push
loope
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
(bad)
(bad)
push
add
mov
add
jl
jl
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
jmp
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
mov
add
mov
(bad)
(bad)
(bad)
jmp
push
jmp
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
jmp
dec
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
mov
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
call
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
lock
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
lock
dec
dec
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
lock
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
rcl
(bad)
(bad)
call
rcl
add
add
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
jmp
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
mov
jl
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
add
mov
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
add
call
call
fcos
(bad)
(bad)
(bad)
(bad)
push
add
mov
add
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
push
lock
(bad)
push
lock
add
push
jl
(bad)
fcos
(bad)
(bad)
jmp
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
mov
mov
mov
(bad)
(bad)
(bad)
mov
add
mov
add
mov
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
lock
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
add
add
(bad)
(bad)
inc
add
add
add
(bad)
jmp
loope
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loope
loope
jmp
add
add
add
push
fcos
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
call
add
add
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
lock
(bad)
push
lock
add
push
(bad)
push
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
mov
push
add
add
push
mov
(bad)
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
cmps
cmps
cmps
push
add
push
cmps
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
cmps
cmps
dec
dec
dec
dec
dec
dec
cmps
cmps
cmps
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
cmps
cmps
add
cmps
cmps
cmps
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
dec
dec
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jl
push
call
loope
loope
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
rcl
mov
mov
dec
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
dec
call
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
cmps
cmps
cmps
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fnstcw
mov
push
add
add
add
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
jl
jl
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
add
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
dec
dec
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
dec
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
dec
dec
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
jl
jl
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
cmps
cmps
cmps
dec
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
cmps
cmps
(bad)
(bad)
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
fld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
dec
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
call
rcl
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
dec
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
add
jl
jl
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
call
add
push
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
dec
dec
dec
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
push
add
add
mov
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
push
lock
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
jmp
loope
add
mov
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
mov
push
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
add
add
jl
jl
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
dec
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
mov
mov
mov
loope
loope
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
mov
mov
(bad)
fabs
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
push
mov
mov
loope
loope
loope
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
loope
loope
mov
mov
dec
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
loope
(bad)
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
loope
(bad)
mov
mov
mov
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
push
cmps
cmps
mov
(bad)
loope
loope
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
add
add
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
mov
mov
loope
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
mov
mov
loope
loope
loope
(bad)
(bad)
jmp
push
add
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
push
lock
loope
(bad)
mov
mov
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
loope
loope
mov
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
rcl
sar
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
call
add
add
add
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
jmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
dec
lock
add
dec
dec
dec
mov
mov
(bad)
fabs
loope
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
dec
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
dec
dec
add
(bad)
(bad)
(bad)
(bad)
jl
jl
add
cmps
cmps
cmps
(bad)
(bad)
inc
add
dec
dec
dec
mov
mov
(bad)
fabs
loope
lock
(bad)
(bad)
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
dec
dec
dec
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
dec
jl
jl
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
dec
dec
dec
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
loope
loope
rcl
mov
mov
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
jl
jl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
shl
jl
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
cmps
cmps
cmps
push
jl
jl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
mov
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
jl
jl
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
mov
call
mov
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jl
add
add
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
dec
dec
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
push
add
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
add
dec
dec
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
cmps
cmps
cmps
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmps
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
mov
cmps
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
call
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
rcr
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jl
push
call
loope
loope
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
rcl
mov
call
add
jl
jl
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
dec
dec
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
cmps
cmps
add
cmps
cmps
cmps
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
cmps
cmps
dec
dec
dec
dec
dec
dec
cmps
cmps
cmps
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
cmps
cmps
cmps
push
add
push
cmps
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
mov
mov
push
add
add
push
mov
(bad)
loope
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
mov
add
add
add
add
add
adc
add
adc
add
and
add
add
add
add
add
add
and
adc
add
add
call
add
and
add
add
add
add
adc
add
add
add
add
add
adc
adc
add
add
sub
add
add
add
and
or
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
xor
or
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
dec
add
imul
push
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
and
dec
add
je
add
data16
arpl
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
jb
popa
add
jo
add
js
add
add
or
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
sub
arpl
sub
and
dec
add
imul
push
add
add
cmp
or
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
ins
add
popa
add
jo
add
js
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
dec
add
imul
push
add
and
inc
add
je
imul
add
je
add
add
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
jne
imul
dec
add
data16
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
and
xor
xor
add
add
add
add
add
add
add
and
add
push
add
outs
add
add
je
inc
add
imul
popa
add
push
add
add
add
add
xor
xor
xor
inc
add
add
add
cmp
xor
aaa
add
xor
xor
add
xor
inc
add
add
add
add
inc
add
add
add
push
daa
add
add
arpl
je
imul
inc
add
imul
jnp
cmp
xor
cmp
add
add
add
add
add
add
add
add
add
add
arpl
xor
xor
sub
add
add
bound
xor
xor
xor
xor
xor
add
add
add
xor
or
add
push
add
popa
add
add
popa
add
add
add
add
inc
add
add
jb
jns
jo
je
outs
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
mov
mov
ins
and
jb
imul
xor
and
arpl
imul
sub
and
popa
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
fs
jb
jo
imul
jb
popa
jo
ins
imul
and
arpl
jo
imul
gs
fs
jb
jo
imul
and
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
das
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
jae
gs
bound
add
pop
inc
or
or
or
gs
or
sub
add
or
xor
add
add
inc
or
mov
add
or
xchg
inc
or
dec
inc
or
mov
inc
or
lods
inc
or
mov
inc
or
fiadd
add
inc
or
test
add
add
add
or
add
add
adc
add
add
add
inc
or
add
add
and
or
add
add
ss
or
add
add
dec
inc
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
dec
xor
cs
ins
add
imul
ins
ins
add
push
push
push
inc
push
dec
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
push
gs
ins
outs
jae
dec
gs
add
inc
imul
imul
add
pop
inc
gs
push
popa
jb
outs
je
inc
js
add
gs
ins
inc
js
arpl
gs
js
add
add
je
inc
add
dec
and
add
add
gs
int3
add
add
(bad)
pop
push
inc
jbe
stc
cmp
jmp
mov
in
sub
cld
dec
pop
rcr
push
xlat
xchg
xchg
(bad)
and
adc
push
or
add
cmp
(bad)
test
sar
inc
xchg
inc
mov
dec
and
les
daa
imul
mov
cmp
clc
inc
add
mov
push
mov
pop
in
out
jnp
idiv
sti
jbe
sbb
add
ss
xchg
xor
cmp
dec
repz
xchg
lds
js
call
sub
sub
es
jl
sar
arpl
xor
(bad)
sub
outs
sbb
dec
sub
xor
xor
sar
loope
pop
movs
mov
xchg
xchg
add
pop
cmp
shr
out
fstp
or
xor
loope
cmp
out
jb
clc
rcl
mov
jb
retf
mov
cmps
jo
xchg
add
adc
mov
int3
sub
in
jecxz
pop
inc
pop
mov
and
push
or
or
retf
out
das
sub
and
jecxz
dec
xchg
pop
loope
pushf
nop
in
aas
ss
retf
dec
lahf
jmp
sub
jle
ds
gs
loope
sbb
das
lods
mov
loop
mov
aam
push
push
sub
out
shl
push
in
sub
or
push
push
iret
scas
stc
and
push
cmp
lock
cmp
mov
rcl
xchg
adc
out
dec
(bad)
sbb
dec
dec
xchg
xchg
inc
call
movs
rol
pop
sub
xchg
inc
add
xchg
fdivr
das
repz
(bad)
mov
sub
popa
test
ret
dec
into
scas
pop
imul
and
mov
jmp
js
scas
xchg
mov
dec
int3
pop
mov
jg
retf
sbb
mov
popf
(bad)
(bad)
mov
push
(bad)
xlat
out
cld
and
imul
shl
imul
jg
popa
pop
xor
data16
daa
ror
mov
adc
pop
ss
clc
xchg
ret
push
inc
sub
xchg
bound
ficom
add
or
in
xchg
fdiv
mov
cmps
lock
push
mov
pop
mov
adc
fs
mov
sbb
movs
lea
pop
jo
mov
add
adc
push
iret
jo
lods
call
cmp
cmp
sbb
ret
adc
loopne
(bad)
mov
sub
dec
ficom
and
cdq
mov
sti
pop
jb
push
stos
sbb
jae
fs
mov
(bad)
and
or
cmc
in
fidivr
idiv
sbb
sbb
mov
int3
xchg
out
jae
sbb
retf
mov
test
push
mov
jbe
adc
cmp
adc
add
call
int3
inc
in
faddp
inc
mov
mov
lock
sbb
outs
sub
cmp
sub
inc
(bad)
xlat
and
icebp
jp
sub
cdq
or
dec
retf
fcom
cdq
xor
cmp
das
inc
ja
xchg
les
inc
mov
in
pop
jo
jmp
inc
sbb
mov
out
loope
or
cld
cmp
into
add
sub
push
jmp
xchg
jbe
lds
ins
inc
das
jae
arpl
or
and
aam
xchg
adc
rcl
je
add
sub
dec
fst
jle
pop
test
ror
xchg
dec
inc
aas
sbb
and
xchg
add
out
fcomip
xchg
mov
jo
ss
xor
sbb
jns
jp
xchg
adc
jle
test
enter
add
rol
aad
dec
int3
out
rol
mov
(bad)
mov
jns
xchg
fisttp
(bad)
std
mov
leave
cld
pop
xchg
adc
arpl
jo
xbegin
cwde
inc
cmp
icebp
xchg
adc
pop
adc
jns
popa
in
cld
sti
std
sti
sbb
or
cs
or
mov
add
aam
and
mov
pop
xchg
shr
stos
add
pop
mov
and
loopne
mov
call
mov
xchg
xabort
int3
sbb
scas
cmp
mov
idiv
dec
push
xor
pushf
and
lahf
adc
cmp
xchg
dec
mov
pushf
lods
mul
outs
inc
xor
jne
cli
mov
xchg
shl
add
cdq
add
add
imul
cmp
fwait
retf
jmp
std
test
(bad)
mov
mov
jle
fwait
lahf
xor
and
jmp
test
sti
mov
rcl
stos
cmp
popa
sar
push
daa
dec
cld
pop
dec
jno
retf
mov
bound
cmps
movs
bound
loope
or
adc
mov
jmp
lahf
xor
jae
mov
xchg
aas
(bad)
sbb
cwde
loop
add
and
or
xchg
mov
sbb
and
mov
mov
jge
mov
cmp
in
xchg
jecxz
shl
cwde
xchg
fstp
or
jae
jb
add
inc
push
inc
mov
jb
loope
mov
inc
and
adc
fcom
(bad)
and
push
imul
xchg
push
xchg
xchg
pusha
cmp
js
in
icebp
jno
dec
aas
lds
jmp
out
and
std
scas
test
mov
xchg
(bad)
cmps
(bad)
shl
pop
jmp
inc
xchg
(bad)
cmps
out
neg
sar
mov
and
in
or
loopne
enter
jge
int3
mov
mov
and
fnsave
imul
mov
dec
xchg
mov
jg
push
shl
in
call
sahf
or
or
xchg
sbb
cmp
inc
adc
mov
aas
jmp
mov
emms
sub
cmps
xchg
ins
inc
pop
mov
and
sbb
and
mov
cmp
and
adc
jmp
rol
jnp
and
es
xchg
push
push
mov
adc
xchg
push
cmp
loopne
pop
cwde
int
jl
js
adc
sbb
ss
jmp
data16
rol
mov
repz
xchg
cmps
and
fist
dec
mov
push
loop
in
sbb
ja
xchg
jnp
push
idiv
sbb
xor
mov
xchg
xchg
xor
imul
add
xor
ja
sub
xchg
es
rcl
inc
aad
stos
cmp
add
mov
shr
pop
mov
xchg
es
and
out
fimul
sub
fs
cmp
push
aaa
xor
jne
inc
fsub
jmp
imul
mov
jle
inc
sti
dec
adc
mov
push
mov
mov
test
fist
jbe
xchg
mov
cmp
cmp
mov
xchg
cli
int3
hlt
and
cmp
loopne
pop
(bad)
sti
sbb
mov
pushf
loopne
push
lods
stc
pop
sub
jp
cmc
movs
and
(bad)
mov
pop
xchg
retf
add
mov
push
adc
out
aam
add
jb
jmp
jmp
push
mov
lahf
jp
xchg
enter
cld
arpl
loope
les
outs
mov
into
mov
je
iret
jno
setge
loop
or
mov
adc
xor
loope
je
lock
pop
and
lock
pop
(bad)
icebp
xchg
ins
dec
bnd
jbe
test
inc
movs
push
pop
xchg
int
xchg
sub
movs
cmp
and
lds
mov
data16
cmp
enter
mov
mov
clc
rol
daa
bound
or
mov
out
push
mov
or
pop
and
or
loope
adc
ret
mov
les
mov
push
repz
out
dec
(bad)
ins
dec
(bad)
cmp
arpl
sbb
push
test
jl
xchg
push
test
retf
jmp
push
sti
xchg
xchg
jl
ja
movs
cmc
jne
pop
fild
adc
loop
jne
push
pop
addr16
cmp
cld
cmps
jmp
movs
lods
lods
sub
test
mov
xor
xchg
dec
or
ret
cmps
xor
adc
loopne
add
dec
xchg
mov
dec
mov
push
push
(bad)
lods
std
adc
retf
retf
pushf
xchg
sub
mov
pop
push
cmp
sti
pop
retf
mov
or
in
or
fstp
inc
sahf
add
and
xchg
add
mov
dec
ins
mov
imul
dec
jbe
nop
hlt
sbb
xchg
test
mov
dec
dec
pop
dec
dec
bound
gs
jecxz
or
lods
mov
out
mov
inc
lahf
mov
mov
and
in
cs
xchg
rcl
push
inc
cmp
dec
mov
loope
cmp
dec
jo
ret
pusha
outs
add
(bad)
or
inc
lock
jmp
mov
dec
loope
mov
inc
mov
xor
mov
sub
shr
dec
or
scas
movs
pusha
out
cmp
mov
sbb
jns
sbb
push
cmps
xchg
mov
jmp
pop
imul
daa
iret
int
rcl
jne
ficom
mov
mov
mov
out
sub
dec
mov
fist
gs
adc
retf
rcr
sbb
mov
xchg
icebp
(bad)
jbe
jmp
das
add
movs
loopne
or
cld
xchg
mov
xchg
jmp
fwait
mov
arpl
dec
cmp
mov
out
dec
std
cmp
and
int
push
sub
imul
dec
push
lahf
push
mov
mov
neg
and
add
mov
and
mov
or
jmp
sub
(bad)
movs
cmp
cmp
shl
and
push
inc
dec
in
movs
inc
sbb
sbb
xor
jmp
pop
into
out
imul
mov
sub
fwait
jbe
cmp
inc
or
push
dec
push
add
and
or
push
xchg
movs
scas
sbb
bound
aas
mov
shl
aad
call
push
sub
sbb
jge
mov
cs
out
inc
inc
jecxz
sbb
sub
into
repnz
jbe
iret
out
or
jl
pop
scas
pop
pusha
iret
mov
lds
jle
add
adc
ds
aas
mov
cmc
(bad)
std
mov
clc
cmp
es
and
inc
daa
dec
and
or
mov
out
rol
cmp
call
jmp
add
retf
inc
inc
je
aas
std
test
out
jne
push
ss
repz
(bad)
push
jae
jge
(bad)
adc
cli
and
mov
outs
js
aaa
cmp
xchg
or
or
sti
lods
jmp
mov
jge
or
or
xor
sub
aad
sbb
inc
jbe
stos
add
xlat
shl
jb
(bad)
add
outs
in
addr16
mov
push
(bad)
int
dec
jmp
push
push
push
retf
pop
shr
mov
iret
dec
mov
stc
inc
in
cdq
stos
enter
bound
das
dec
and
dec
in
call
retf
xchg
outs
mov
test
imul
jg
jge
pop
push
pop
sub
lods
inc
movs
test
xor
adc
mov
int3
(bad)
int3
in
jle
jle
mov
adc
push
jmp
int
imul
enter
jmp
adc
sub
addr16
xor
inc
fwait
xchg
add
sbb
sar
int
int3
xabort
addr16
push
dec
shl
and
or
and
ret
in
cmp
pop
mov
aad
mov
mov
push
sbb
xor
bound
call
xchg
into
mov
fidiv
ret
cmp
mov
mov
sub
push
pop
inc
mov
pop
jo
and
cmc
xor
das
xlat
cmps
mov
cli
nop
mov
in
mov
mov
fist
jbe
cwde
xchg
cwde
xor
and
push
and
retf
push
cld
xchg
(bad)
xchg
sbb
jne
nop
mov
inc
dec
aam
nop
push
inc
or
bound
lea
loopne
es
push
sbb
pushf
inc
stc
mov
fiadd
inc
rol
adc
inc
lahf
fsubr
lods
cli
sub
pop
jne
nop
outs
cmc
mov
mov
stc
loop
pop
scas
iret
test
add
aas
fcom
scas
add
ins
push
mov
or
mov
addr16
or
enter
pop
js
(bad)
pop
mov
fwait
jb
mov
mov
out
push
pause
mov
mov
xchg
mov
xor
int3
push
aaa
sub
jmp
jp
std
cmps
pop
gs
mov
adc
mov
gs
call
and
scas
lea
xchg
jne
mov
fcmovb
add
in
mov
add
inc
in
cmp
je
pop
mov
rcr
cmp
sbb
mov
mov
xlat
movs
outs
outs
sub
push
ficomp
call
ret
lds
mov
mov
loope
jb
in
daa
rol
sub
mov
mov
imul
pshufw
mov
outs
xchg
outs
pop
cmp
pop
fcmovnu
xor
and
jecxz
in
daa
xchg
pop
pop
and
je
cmp
pop
push
xlat
pop
int3
dec
mov
ja
aad
aas
jmp
sahf
adc
xlat
push
jmp
jb
in
aas
mov
in
movs
lds
repz
aas
xchg
repz
or
jmp
repnz
mov
pop
lods
cs
aaa
repnz
in
adc
dec
cmp
std
push
jecxz
pushf
call
inc
cmp
paddusb
mov
mov
std
stos
push
rol
jg
scas
int
(bad)
in
movs
loop
xor
sbb
jbe
mov
dec
mov
cmps
inc
fnsave
sbb
test
test
sub
sbb
mov
ficomp
lea
loope
hlt
sbb
jecxz
data16
push
popa
popa
jle
ret
vpminub
das
add
sub
mov
rcr
sub
mov
add
add
mov
inc
jns
xchg
les
fistp
ins
cmp
dec
hlt
jl
lods
pop
rcl
jle
mov
shl
popa
in
cmp
fiadd
cs
mov
test
pop
shr
mov
xchg
xor
xlat
sbb
lahf
(bad)
cmp
inc
adc
fistp
test
inc
test
jmp
or
xor
and
lods
mov
cmc
es
das
sub
loop
mov
ja
lods
add
or
mov
xor
cmp
and
pusha
jb
xor
repnz
mov
clc
sar
mov
and
aad
adc
xor
dec
push
out
jbe
dec
mov
xor
xchg
inc
add
sbb
lock
xor
ret
jnp
mov
jbe
lock
sub
jbe
outs
fnstcw
xchg
data16
xor
std
loop
cld
lahf
mov
pop
jne
or
mov
mov
inc
stc
adc
leave
push
ror
dec
and
fist
retf
ins
outs
leave
jp
xchg
cmc
in
es
xor
clc
cs
push
data16
das
jg
sti
outs
jns
je
xchg
adc
cmps
scas
push
jge
push
movs
loop
test
jb
push
or
cmc
jnp
pop
inc
jns
mov
iret
mov
sar
iret
and
imul
mov
outs
mov
cld
add
data16
ret
repnz
aad
int
sbb
add
push
pop
call
sub
or
xor
pop
cmps
cmp
aaa
icebp
sub
mov
sub
jmp
cmps
cmp
or
mov
push
out
call
mov
push
out
mov
push
inc
xor
gs
mov
push
mov
xlat
test
addr16
push
in
add
(bad)
retf
push
mov
xlat
mov
or
das
int
lods
push
inc
add
cs
sar
lahf
jo
jmp
pop
frstor
cmovs
xchg
push
mov
cmp
jne
mov
sub
xchg
cmps
and
in
xchg
push
ins
daa
push
jne
out
inc
push
mov
cs
(bad)
aaa
or
gs
fld
mov
push
aam
pop
xchg
je
inc
adc
sbb
dec
mov
mov
and
fs
xchg
mov
rcl
pop
push
sub
pop
mov
inc
sub
adc
add
fisubr
ja
and
mov
cwde
pop
inc
or
mov
push
mov
push
fwait
outs
sahf
push
dec
inc
push
repz
out
and
aas
retf
jnp
cmp
shl
or
push
call
bound
shl
xor
das
jg
push
out
fist
mov
push
inc
cmp
out
jb
mov
dec
mov
push
add
adc
cwde
mov
mov
inc
stc
shr
test
ror
int
in
sbb
in
mov
inc
sbb
xlat
xor
aam
ins
int
in
xchg
xchg
and
sar
jmp
push
jb
mov
push
inc
fidiv
pop
pop
mov
inc
in
lds
push
stc
jno
push
stc
adc
arpl
dec
ja
mov
xlat
xchg
lods
pop
jecxz
outs
mul
cmps
cld
rcl
cmp
arpl
or
lods
outs
std
leave
cmp
stos
sub
jb
xchg
inc
push
or
jl
int
pop
mov
ja
cmp
stos
add
aad
sub
(bad)
sahf
push
mov
out
xchg
test
ret
xchg
(bad)
push
mov
out
mov
sub
adc
sbb
cmp
jno
push
mov
aam
ror
scas
push
xchg
inc
and
dec
rcl
inc
sub
mov
sub
(bad)
mov
add
cli
retf
test
inc
mov
cmps
xchg
mov
cwde
lods
add
stos
jle
repz
(bad)
xlat
repz
jnp
js
shr
jmp
add
push
add
push
mov
cs
aas
scas
scas
mov
fsubr
addr16
fldenv
mov
cmp
loop
mov
shl
pop
lods
push
aaa
retf
ret
sbb
dec
adc
pop
aad
call
in
push
mov
(bad)
out
loopne
add
out
je
mov
pushf
sub
cs
mov
(bad)
sub
nop
mov
std
mov
scas
and
dec
aam
in
in
cmp
adc
and
loop
xchg
push
jge
in
xchg
lahf
in
xchg
das
or
repnz
or
jle
popf
int3
out
pop
int3
jl
push
jmp
xchg
stos
aad
in
outs
sub
jmp
inc
std
pop
cmc
pop
div
int
loopne
mov
retf
repnz
(bad)
mov
cwde
cdq
stos
xchg
sub
out
jecxz
and
xchg
lods
sbb
mov
mov
cmc
jmp
movs
dec
dec
movs
lds
in
inc
mov
sti
lea
mov
jmp
pop
mov
mov
inc
xor
jg
(bad)
jmp
mov
inc
enter
push
mov
push
aam
mov
(bad)
out
cmp
mov
dec
jmp
and
pop
push
jg
das
sbb
jo
(bad)
mov
inc
test
inc
jge
mov
aaa
dec
fsubr
mov
dec
retf
dec
sahf
imul
into
out
ror
movs
gs
xchg
jg
jecxz
rcr
or
or
into
pop
shl
mov
and
outs
mov
fs
int3
repnz
add
lock
cli
or
popf
test
mov
pop
test
cdq
fucomip
aam
dec
leave
or
ret
call
arpl
mov
movs
out
leave
add
sub
xchg
fwait
adc
fs
jmp
mov
dec
pop
add
cmp
test
fisub
stos
cmp
inc
or
mov
lock
xchg
mul
(bad)
push
int3
out
pop
inc
sbb
cmp
gs
xchg
jle
dec
mov
cmp
daa
and
mov
test
push
fcomi
inc
ja
push
lahf
inc
jge
int
fimul
int
ret
ds
sub
out
fstp
jecxz
push
les
adc
popf
ins
sar
add
add
jnp
sbb
test
or
addr16
call
cmp
data16
pop
imul
fs
(bad)
jmp
inc
add
cli
iret
xchg
xchg
push
loopne
inc
push
nop
outs
aad
(bad)
pop
jmp
sbb
call
pop
scas
pop
mov
cmps
push
mov
lods
xlat
jns
test
mov
ja
mov
mov
into
mov
vmaxss
fadd
pop
and
call
and
mov
and
xchg
jp
popf
aaa
cmp
mov
out
stc
(bad)
cmp
fadd
lods
push
aad
dec
push
xlat
les
ins
retf
cmc
mov
dec
dec
(bad)
test
dec
xchg
movs
pop
jno
es
pop
jae
dec
xchg
adc
mov
fnstsw
sub
push
fst
cmp
jno
jno
ja
mov
dec
dec
repnz
loop
pop
mov
fidivr
ror
pop
pop
stos
repnz
sbb
and
mov
mov
push
stos
stos
jl
dec
ds
loopne
leave
jns
dec
test
arpl
repz
movs
sub
sub
shr
sbb
dec
fs
pop
inc
stc
in
inc
push
dec
push
out
jmp
(bad)
push
dec
imul
add
push
xchg
fdiv
call
sbb
and
nop
sub
xlat
push
inc
adc
in
in
and
shl
pop
fidiv
jecxz
pop
cmps
jns
and
xlat
dec
inc
out
scas
sub
lea
inc
test
test
std
(bad)
sbb
mov
shl
gs
loopne
mov
cwde
cmp
push
xchg
aaa
mov
dec
fs
xchg
in
inc
aas
fmul
(bad)
push
aam
sub
outs
jmp
jge
mov
(bad)
xchg
sbb
dec
push
cmp
xchg
push
jecxz
xor
sbb
cmp
or
retf
repnz
ins
cmp
cdq
ret
cmps
cwde
sub
ret
jl
outs
ud1
outs
xchg
sti
fcom
hlt
inc
push
jecxz
scas
outs
clc
add
and
scas
dec
add
movs
repnz
mov
xchg
push
imul
sbb
push
dec
dec
jle
leave
and
mov
in
sbb
sbb
out
push
dec
out
fs
push
push
ss
int
out
dec
jl
test
xchg
out
mov
sbb
mov
mov
jmp
das
or
mov
push
and
mov
jmp
mov
arpl
retf
(bad)
jns
cmp
mov
inc
sbb
pop
shl
sub
cli
(bad)
jo
fwait
test
aad
jns
imul
pop
push
mov
adc
pop
xchg
jae
push
xchg
jb
adc
pop
lea
clc
test
fwait
(bad)
out
jge
ffreep
xchg
sbb
movs
loope
aaa
mov
push
push
repz
pop
add
(bad)
les
mov
mov
in
ficom
inc
adc
dec
sub
repnz
inc
out
dec
fdiv
sub
popa
push
adc
dec
loopne
stc
add
jle
ins
mov
(bad)
mov
pop
sub
mov
pusha
push
sub
rol
mov
push
loope
sub
push
cmps
add
clc
push
mov
inc
pop
fiadd
aaa
adc
mov
mov
mov
mov
jnp
sti
and
sbb
outs
mov
pop
jb
repz
xchg
push
adc
mov
stos
dec
mov
jb
sub
xchg
sub
adc
scas
mov
stos
ds
pop
dec
js
or
push
xor
push
mov
in
call
mov
dec
test
bound
and
and
std
fcmovu
cld
fwait
sti
push
adc
daa
lds
push
stos
jno
and
hlt
and
and
dec
jb
add
dec
add
or
mov
xchg
mov
push
pop
fsub
add
lods
cmp
mov
pop
into
xor
dec
xor
in
dec
outs
sub
sub
movs
repz
and
sti
(bad)
scas
lea
sub
xchg
cmp
addr16
dec
sub
xor
dec
or
push
xchg
push
repnz
push
movs
dec
and
(bad)
mov
inc
adc
dec
gs
daa
js
outs
rcr
sbb
push
dec
and
dec
cmp
test
shl
xchg
push
adc
popf
into
xor
scas
ret
loop
push
out
or
and
mov
in
mov
pop
inc
(bad)
fst
adc
xchg
add
test
ds
leave
add
add
add
xor
inc
xor
push
inc
xor
ins
fbstp
mov
adc
pop
cdq
pop
cmp
sbb
bound
jecxz
xor
fs
popf
cmp
fmul
aam
jne
sbb
or
xor
inc
mov
push
(bad)
or
xor
push
and
pop
and
loop
fwait
test
xchg
pop
add
xchg
test
adc
lds
dec
adc
pushf
and
retf
imul
hlt
mov
cld
mov
nop
and
test
icebp
std
dec
xchg
lahf
movs
push
retf
xchg
aad
fisub
jecxz
sub
push
mov
inc
out
mov
sub
mov
pusha
mov
leave
push
fs
cmp
jno
cmps
jbe
ficom
push
push
sub
xor
adc
(bad)
cmp
jecxz
or
movs
aam
and
(bad)
mov
pop
or
pop
sbb
repz
sbb
addr16
jnp
(bad)
out
loope
inc
mov
pop
mov
shl
add
not
ret
mov
cwde
or
pop
rcl
stos
dec
push
dec
scas
xchg
pusha
push
push
test
push
loope
adc
push
lods
pusha
xchg
cs
xchg
je
div
cmp
xchg
xchg
mov
dec
cld
mov
retf
stos
test
cmps
mov
cmp
retf
xchg
push
repnz
nop
test
inc
sbb
fwait
xchg
pop
push
xchg
retf
push
xchg
adc
jns
mov
leave
je
fs
ror
adc
push
scas
clc
mov
cwde
aam
mov
pushf
std
adc
scas
scas
or
icebp
add
popa
mov
jne
test
das
dec
test
mov
stos
push
cmp
inc
gs
jno
or
sti
jl
call
shl
repz
pop
jns
iret
inc
loop
xchg
stos
mov
jl
sub
sub
cmp
call
mov
push
mov
shr
dec
lock
jbe
pop
xor
aas
pop
lea
daa
stos
jle
loopne
out
jo
test
cli
pusha
stos
mov
xchg
fsubr
adc
adc
into
jg
cld
jge
adc
ja
cmp
lock
neg
pop
sar
pushf
inc
jle
and
mov
test
icebp
and
or
xchg
or
jo
adc
sahf
cdq
cli
lea
aam
inc
daa
(bad)
ficomp
mov
lds
mov
jno
xchg
out
mov
retf
push
mov
cmc
xchg
mov
inc
mov
sub
pop
mov
push
je
jp
xor
xchg
sub
cmps
popf
cmp
mov
pop
fs
push
mov
aas
cld
into
and
cmp
cmp
pop
das
sbb
loop
sub
test
mov
jmp
jb
adc
add
and
fld
sar
das
lods
push
jo
mov
mov
xchg
jl
push
sub
pop
pop
jge
cmp
push
out
(bad)
ret
cdq
ror
mov
inc
ficom
fisub
or
sub
frstor
dec
jl
loope
arpl
pop
xor
test
shr
xchg
lea
and
shl
nop
pop
retf
push
push
popf
xchg
push
mov
in
cmp
push
adc
pop
adc
inc
ss
int3
or
mov
stos
shld
(bad)
sbb
cwd
imul
dec
sbb
sbb
int3
or
imul
sbb
xor
enter
mov
push
addr16
lods
sbb
nop
add
aam
imul
mov
lods
inc
mov
xchg
test
out
aaa
popf
mov
xchg
mov
pop
sti
sbb
test
inc
sub
cdq
adc
or
dec
add
popa
inc
pop
fadd
xchg
push
jne
pop
test
inc
test
ret
loop
or
and
push
adc
shr
cmc
test
xchg
push
mov
xchg
and
xor
and
push
int3
enter
push
(bad)
dec
dec
mov
mov
stos
jle
push
outs
(bad)
sub
mov
or
outs
call
pop
outs
into
mov
loope
xchg
mov
(bad)
jne
imul
xchg
lahf
mov
cmps
pop
pop
sahf
int
jl
fs
cwde
inc
test
leave
add
or
xchg
retf
xchg
retf
mov
cmps
xchg
int3
rcl
jae
into
je
mov
cmps
xchg
into
repnz
movs
add
repz
rcl
das
inc
ds
(bad)
dec
xchg
in
jae
or
mov
mov
and
nop
movs
mov
xchg
aad
xor
push
loopne
lahf
ret
ret
sub
inc
inc
out
xor
jae
jno
xor
jg
jecxz
popa
push
fmul
stos
in
sub
stos
xor
cs
je
pop
jecxz
scas
push
inc
(bad)
cmp
loop
(bad)
jmp
(bad)
jb
mov
test
fsub
nop
lds
shr
jp
sub
(bad)
mov
mov
cli
mov
ja
stos
xchg
sbb
add
adc
aaa
jp
cmp
retf
dec
dec
movs
mov
mov
sub
mov
or
jmp
mov
ret
aam
call
popa
push
xor
or
fld
adc
mov
leave
mov
or
xor
leave
inc
cwde
nop
mov
mov
dec
test
add
scas
push
test
fdiv
sar
inc
je
dec
ja
dec
sub
movs
ss
xor
mov
push
and
inc
call
push
aam
push
sbb
(bad)
cmp
test
shl
out
mov
mov
stc
(bad)
call
pop
dec
fs
mov
repz
jmp
push
jle
mov
(bad)
pop
jl
push
adc
push
daa
mov
jmp
sub
sahf
xchg
fnstcw
push
das
jmp
sti
fwait
jb
arpl
lods
jno
scas
loope
pop
dec
cld
repz
mov
jmp
ins
jnp
or
and
jae
psrad
adc
mov
imul
dec
test
and
mov
ins
mov
ret
push
scas
cmps
mov
div
jbe
fisubr
shl
cmp
push
mov
pop
mov
shr
(bad)
fisub
(bad)
push
arpl
movs
push
imul
into
fsubr
sbb
stos
pushf
jne
pushf
fsubrp
fistp
mov
mov
pop
jmp
daa
mov
xor
add
push
sbb
pop
or
popa
sar
or
sbb
pop
add
mov
aad
xchg
div
cmp
dec
les
sbb
mov
push
xchg
or
jae
jno
in
jp
xchg
js
je
add
imul
mov
pop
push
xchg
and
retf
adc
das
outs
test
dec
dec
sub
stos
nop
push
aaa
inc
push
xchg
ds
out
shl
mov
arpl
mov
stos
sub
stos
in
ret
fild
je
dec
lahf
sub
add
fld
mov
mov
out
stc
outs
mov
imul
fwait
mov
push
mov
sub
icebp
std
jmp
lds
data16
jmp
or
sub
mov
mov
and
mov
mov
sbb
xchg
sar
aas
je
fcom
mov
dec
pop
call
sbb
push
inc
mov
cld
nop
sbb
dec
push
daa
mov
adc
dec
shl
xor
push
retf
mov
mov
push
sbb
rol
dec
add
mov
or
xor
xchg
cmps
or
mov
lods
dec
mov
hlt
in
sahf
data16
xor
mov
pop
sar
mov
push
scas
enter
mov
mov
popa
clc
inc
clc
cmp
enter
in
mov
aam
mov
retf
mov
xchg
popa
out
aam
cdq
or
add
test
pop
bound
mov
cwde
cmp
sbb
in
mov
sbb
jb
in
sahf
mov
jae
adc
push
fidiv
cld
xor
inc
fs
std
push
xchg
mov
xchg
hlt
fucomp
and
fstp
sahf
mov
inc
inc
adc
cmps
or
sbb
pop
(bad)
cli
scas
outs
ins
jl
inc
das
xchg
call
pushf
push
add
mov
arpl
inc
xchg
or
xor
mov
pusha
pop
(bad)
es
cmps
fsubrp
add
fcomp
ror
(bad)
jp
ins
sbb
mov
inc
mov
ss
mov
in
in
jg
cmp
cmps
in
out
jb
test
arpl
jbe
enter
sbb
pusha
ja
data16
mov
sub
rcl
in
jmp
bound
rcl
mul
jnp
call
inc
mov
push
pop
daa
dec
in
sub
jmp
call
(bad)
aam
and
jmp
xor
and
(bad)
xor
(bad)
mov
shl
push
out
jl
and
es
popa
enter
mov
retf
(bad)
fistp
dec
ins
lahf
js
add
pop
outs
je
add
pushf
test
test
lods
push
xchg
jmp
outs
mov
inc
shl
cli
in
jo
pop
imul
sti
jp
mov
int3
add
mov
lahf
inc
adc
fmul
ds
enter
mov
rol
imul
adc
pop
inc
cmp
xchg
mov
inc
fld
test
jo
or
mov
inc
mov
(bad)
nop
iret
or
movs
test
mov
rcr
sbb
into
addr16
pop
cwde
xor
cwde
icebp
aad
(bad)
out
add
in
jmp
std
call
cld
(bad)
fidiv
into
mov
rcr
pushf
test
data16
mov
lods
mov
cmp
stc
imul
out
push
jne
jnp
sbb
xlat
jge
jne
aam
add
mov
adc
and
adc
mov
pop
cmc
fldenv
cmp
inc
mov
jb
adc
leave
in
dec
or
repnz
pop
stc
jge
mov
pop
dec
outs
fstp
aad
fild
aad
(bad)
data16
out
cmc
xor
scas
mov
sti
pop
mov
push
(bad)
scas
inc
outs
pop
je
mov
pop
bound
test
ret
cld
jae
push
mov
pop
push
mov
pushf
cmc
jae
jo
aaa
jge
adc
test
fucom
inc
les
cmps
enter
pop
xchg
cmp
dec
jmp
push
arpl
adc
pop
mov
xchg
cmc
push
in
scas
pop
cli
pushf
stos
jne
add
jp
movs
imul
cwde
sbb
sbb
into
call
push
lahf
jmp
stos
rcl
jp
or
cmps
cmps
inc
xor
shl
cmp
inc
xchg
cmp
out
jb
inc
add
ret
ret
aad
jecxz
cmp
pop
xchg
jl
enter
test
retf
movs
or
rol
cdq
test
into
cwde
retf
cmp
cmp
ret
push
add
dec
cmp
adc
mov
xlat
push
sbb
dec
mov
gs
fmul
test
xchg
call
push
adc
pop
mov
clc
fimul
daa
cli
xor
gs
(bad)
mov
(bad)
fnstsw
loopne
xor
fild
icebp
mov
fwait
int3
and
mov
cwde
arpl
mov
add
call
test
push
in
push
jmp
cmp
popf
into
call
mov
lahf
lea
add
ret
jnp
cmp
push
loopne
inc
jnp
jo
mov
mov
push
mov
cmp
mov
call
(bad)
xor
in
inc
mov
cs
jge
jo
pop
ret
aaa
cmp
cmc
hlt
addr16
mov
xchg
xchg
popa
push
outs
rcr
outs
addr16
das
cs
dec
mov
out
fxch
mov
xor
sub
sub
xlat
call
mov
xchg
je
inc
fdivr
cmp
adc
arpl
test
and
outs
and
cmp
iret
push
push
jle
enter
into
popa
iret
lahf
push
(bad)
fstp
jmp
sbb
jmp
push
loope
push
fisttp
mov
cmp
idiv
xor
cld
(bad)
adc
lock
je
mov
jmp
fld
sbb
add
jl
in
imul
dec
int
push
inc
xor
inc
jnp
sub
fisttp
aam
mov
sub
mov
pop
aam
push
mov
add
ret
pop
lds
dec
rol
scas
es
pop
out
jp
std
std
mov
and
sbb
mov
mov
push
mov
pop
push
(bad)
fnstcw
aam
ficomp
outs
std
(bad)
imul
loopne
pop
loopne
aas
cmp
(bad)
movs
jae
shr
icebp
in
(bad)
mov
shl
fwait
lea
(bad)
and
mov
inc
xor
push
lea
test
push
jg
stos
cmp
cdq
jle
push
in
push
adc
stc
mov
dec
cmp
cli
icebp
int
(bad)
(bad)
js
mov
or
mov
xor
lahf
std
mov
adc
mov
out
mov
sar
add
outs
jno
and
inc
dec
inc
or
inc
mov
fmul
pop
aas
xchg
clc
dec
mov
cmp
aam
imul
ror
mov
pop
xchg
or
leave
div
ins
sub
(bad)
ficomp
div
inc
icebp
into
loopne
ins
inc
xchg
test
out
call
fnstsw
xlat
ror
mov
fiadd
or
xor
mov
loopne
jecxz
adc
fimul
mov
mov
enter
icebp
cld
dec
push
xlat
mov
into
dec
push
and
xor
shl
into
fnsetpm(287
mov
sar
sbb
fcomip
lods
ss
jns
mov
xor
sbb
mov
nop
(bad)
sub
jns
pop
das
xor
sub
cmc
or
scas
cmps
fcmovne
inc
lds
js
mov
fistp
aam
aas
xor
sub
out
(bad)
push
mov
lods
shl
dec
out
inc
loop
or
xor
or
es
lea
ins
mov
cli
fucomi
hlt
xchg
jns
sbb
add
mov
int3
aas
int
jle
scas
jl
push
movs
inc
iret
jle
ds
icebp
cmps
add
jle
lock
jo
cmp
pop
xchg
idiv
pop
mov
shl
pop
add
xor
and
xor
sub
fstp
sti
leave
push
pop
mov
pop
popf
inc
push
imul
pop
pop
ret
add
or
fld
pop
fisttp
pop
cmps
inc
fs
dec
cmp
pusha
and
mov
(bad)
jp
jae
cmp
jnp
sub
cmp
aaa
pop
pop
jbe
ss
aaa
repz
and
xor
dec
mov
(bad)
outs
add
ins
lock
sahf
scas
add
jmp
stc
sti
cmps
inc
test
ja
mov
mov
sub
xlat
jp
outs
cmp
aad
aas
pop
sbb
sbb
sbb
mov
dec
popf
push
dec
ja
mov
pushf
(bad)
jbe
cli
addr16
mov
add
in
ret
cmp
cmp
(bad)
fldenv
into
inc
scas
ret
movs
xor
scas
jnp
stos
sbb
xchg
in
mov
mov
mov
shl
jne
mov
iret
leave
adc
rcr
mov
pop
das
cmp
xor
std
ins
inc
mov
cmp
cdq
xor
call
pop
lahf
pop
mov
push
lock
rcr
push
in
mov
shl
in
add
retf
jbe
cmc
shl
mov
loopne
stos
in
xchg
pop
into
mov
movs
xchg
jg
adc
dec
outs
aad
call
lea
xor
jne
bswap
mov
mov
push
je
and
pop
adc
cmp
xor
mov
cmps
iret
sahf
push
jle
jno
xchg
fs
(bad)
xor
outs
or
jl
mov
hlt
movs
shr
sbb
or
stc
pop
movs
xor
and
arpl
pop
mov
cli
inc
xchg
and
or
std
cwde
mov
mov
jo
ficomp
add
or
or
pop
clc
loop
bound
sti
cmp
mov
out
rcl
or
push
leave
jne
btc
aaa
int3
sahf
sbb
ds
mov
mov
jle
mov
arpl
enter
adc
test
or
pop
mov
mov
sbb
add
not
scas
jae
jg
dec
xchg
xchg
fucomp
ret
dec
add
leave
mov
jge
adc
jbe
cmps
(bad)
repnz
xor
rcr
test
ins
jae
jl
shl
cmc
dec
movs
jno
test
lea
inc
xchg
lahf
rcr
mov
out
ret
sub
cmp
mov
add
clc
cli
inc
(bad)
pop
jmp
fstp
xchg
(bad)
mov
(bad)
leave
int3
push
and
mov
fs
out
sahf
ins
daa
imul
aam
and
adc
loopne
mov
popa
pop
and
cli
icebp
push
std
jae
popa
iret
add
xchg
sub
xchg
les
and
pop
les
into
in
ret
cmp
js
push
mov
adc
inc
xchg
pop
push
mov
lea
mov
fwait
stc
pop
in
and
jl
int3
lahf
lods
retf
push
into
test
inc
xchg
mov
popa
outs
outs
out
in
in
lods
jbe
lods
or
fidivr
jbe
in
mov
stos
fsub
push
mov
ret
pop
xchg
pop
clc
je
xor
push
test
in
call
push
cmc
fnstsw
enter
stos
sub
inc
in
popa
std
cmps
xor
mov
scas
cmp
mov
icebp
pusha
dec
and
mov
loop
and
xchg
aaa
sub
xchg
jp
gs
pop
jnp
hlt
in
fwait
jg
aas
lods
or
mov
into
arpl
xchg
or
and
xchg
aam
dec
inc
cs
inc
clc
test
lahf
or
jo
sub
out
xor
clc
xchg
and
(bad)
cmp
test
and
xor
adc
xchg
mov
pop
lods
mov
xlat
out
je
push
and
outs
dec
mov
xor
xor
jno
sbb
xor
jnp
mov
cmp
mov
popw
repz
cmps
shl
(bad)
out
jno
pop
out
push
popf
jp
imul
ror
jle
outs
cmps
je
push
cmp
stc
into
imul
mov
inc
xor
push
out
pop
dec
cli
iret
rol
mov
movs
jge
xchg
rol
div
pop
push
pop
dec
clc
and
xchg
aad
test
pop
into
movs
cmps
fucom
add
dec
dec
repnz
xchg
movs
and
xor
and
pop
xchg
mov
mov
je
ret
call
leave
gs
jno
pop
lock
jnp
cmp
jo
pop
call
loopne
loope
stos
aad
jne
jbe
cmps
sub
sub
jmp
mov
dec
mov
iret
cmp
lds
jnp
jge
retf
test
and
push
sub
xchg
add
xchg
data16
inc
cmp
and
add
jl
ss
test
cmc
xor
cmc
and
push
sbb
inc
mov
cld
add
push
xlat
sub
xor
cmp
sbb
dec
xor
sahf
retf
in
push
and
retf
cwde
ss
sub
out
push
or
popa
jmp
arpl
inc
mov
rol
xchg
mov
ret
repz
sub
call
(bad)
fdiv
cld
ss
add
mov
(bad)
enter
cld
jb
je
inc
pop
xor
mov
cwde
ja
cmp
das
popa
bound
mov
inc
pcmpgtd
mov
mov
(bad)
fst
shr
ins
clc
dec
or
int3
aad
jae
shl
iret
inc
mov
imul
add
and
xor
std
xchg
jl
jae
fild
jp
sbb
and
or
ret
lock
jmp
jl
popf
neg
shl
push
lds
and
in
inc
sbb
je
mov
sbb
dec
xor
sbb
hlt
adc
cwde
in
push
jmp
mov
fcomp
or
pop
add
pushf
dec
arpl
add
stos
fucomi
mov
movs
dec
jmp
std
jmp
jp
mov
test
mov
popf
out
mov
sbb
jg
imul
or
xchg
sub
mov
jge
cmp
mov
loope
push
push
test
push
add
hlt
sub
cmp
aad
(bad)
cld
test
push
test
push
imul
add
push
cwde
ins
(bad)
jb
xchg
imul
pushf
push
rcr
in
cmp
outs
adc
aad
test
(bad)
dec
jno
add
out
sar
lods
jg
movs
test
jmp
out
sbb
mov
adc
retf
in
mov
daa
jmp
push
iret
imul
(bad)
sub
inc
fs
jmp
stos
not
push
jmp
into
add
ror
sbb
into
sahf
xchg
and
xchg
sbb
adc
enter
test
adc
mov
cmp
mov
cmc
mov
stos
pop
test
retf
fs
imul
fcom
sbb
sbb
lods
push
(bad)
ins
add
push
jae
lods
iret
ror
push
push
pop
gs
hlt
add
mov
popa
icebp
rol
lea
sbb
fnsave
sbb
shl
enter
outs
xchg
xor
sbb
and
stos
mov
les
cmp
dec
fisub
loope
movs
test
adc
adc
push
sbb
jae
hlt
sbb
mov
fiadd
mov
mov
or
dec
fbld
popa
cmp
pop
out
enter
std
xchg
push
pop
fcmovu
dec
xchg
jge
addr16
dec
adc
cdq
test
fisubr
bnd
xchg
div
nop
(bad)
(bad)
mov
loope
cmp
hlt
test
cs
ja
or
sub
enter
fs
cwde
in
inc
pop
es
xchg
fisttp
and
lock
std
adc
inc
mov
mov
adc
pusha
sub
push
cmp
dec
rol
mov
jmp
xchg
(bad)
iret
imul
out
jb
push
sub
inc
add
rol
(bad)
cmp
mov
inc
std
inc
mov
addr16
ins
cmps
daa
dec
pop
cwde
pop
jmp
add
mov
xchg
jmp
and
lea
bound
movs
retf
repnz
xor
repz
stos
xor
or
movs
pop
lahf
cmp
imul
and
arpl
pop
or
jae
xchg
fdivr
lds
mov
test
sub
push
in
out
fcomi
sub
xchg
movs
aas
jnp
cmp
or
pusha
pusha
in
adc
push
repz
pop
adc
pop
stc
pop
xor
sub
aam
aaa
xlat
mov
pop
dec
inc
add
jl
test
sub
mov
mov
lock
sbb
fsub
xchg
inc
or
inc
push
jge
xor
lahf
shl
inc
dec
fld
cmps
inc
xlat
aad
outs
pop
mov
aam
mov
and
mov
shl
push
ficom
icebp
daa
fsubr
fs
outs
mov
aad
mov
pop
push
pop
dec
inc
enter
pop
lods
cmps
ret
imul
mov
mov
jnp
inc
sbb
xlat
sbb
xchg
ja
call
icebp
mov
fstp
push
pushf
mov
out
push
pusha
or
adc
mov
aas
jo
jp
dec
inc
mov
xchg
cmps
sub
pop
xor
call
cwde
or
pop
dec
xor
mov
and
mul
inc
adc
mov
nop
shr
fnsave
cmps
jae
pop
jno
arpl
pop
(bad)
vpaddusb
movs
inc
arpl
sub
mov
pop
mov
push
sub
push
sbb
imul
sar
adc
and
xchg
inc
fmul
test
mov
sub
cmp
jle
dec
ret
sub
shl
xchg
test
cmp
clc
sub
mov
cmp
cmp
imul
repnz
mov
fwait
push
ss
push
sub
sbb
out
mov
jb
imul
test
xlat
repnz
and
mov
aad
je
inc
enter
jp
in
and
xor
push
pop
mov
js
into
jb
mov
arpl
sti
xor
pop
outs
pop
call
repz
inc
pop
aas
int
or
adc
inc
shr
das
mov
test
pusha
imul
mov
dec
adc
imul
(bad)
scas
mov
mov
inc
xchg
div
fst
gs
fdiv
in
cmps
dec
addr16
je
dec
sbb
jmp
add
div
mov
add
sti
mov
fldcw
fiadd
inc
not
dec
mov
mov
push
arpl
xlat
mov
xchg
cmp
shl
clc
retf
dec
cmp
mov
or
dec
ja
sbb
loop
pop
scas
jle
xchg
xchg
inc
jbe
leave
enter
xor
cmp
mov
shr
loop
sub
or
jmp
mov
(bad)
loopne
push
jmp
sub
call
(bad)
dec
call
sbb
(bad)
push
xchg
adc
loop
dec
add
push
test
test
and
lds
fcmovbe
in
add
push
sub
mov
adc
es
push
jnp
push
scas
scas
je
push
jb
cs
test
adc
or
mov
aad
adc
das
adc
ja
fsub
adc
dec
cdq
movs
xor
push
cs
mov
jb
fst
mov
cmc
gs
xor
in
shl
inc
shrd
movs
mov
and
jmp
pop
sbb
test
jge
loope
shr
lahf
div
lea
pop
les
adc
jmp
cmp
xor
popa
mov
test
fidivr
push
mov
cwde
push
iret
js
pop
daa
movs
pop
and
pop
push
jmp
out
bound
scas
mov
and
icebp
icebp
and
add
out
test
scas
ja
loopne
pop
cmc
inc
mov
fild
call
add
push
sub
in
leave
jae
ret
pop
jmp
jecxz
mov
cmc
xchg
push
pop
push
(bad)
outs
ret
xchg
push
mov
clc
fisubr
jl
inc
mov
fdivr
and
pop
and
dec
retf
jmp
push
in
mov
lds
or
test
test
inc
inc
xchg
jge
lock
(bad)
sbb
jo
ret
mov
cmp
jmp
bound
adc
mov
adc
mov
bound
(bad)
or
es
or
xchg
cwde
sub
popa
push
pusha
scas
xchg
sub
retf
sahf
nop
sub
jns
adc
sbb
adc
xchg
inc
addr16
out
sub
sar
mov
ss
popa
xor
xor
push
sbb
iret
xor
xchg
mov
or
shl
cwde
mov
std
add
sbb
add
adc
and
sbb
push
xchg
aad
mov
cmp
cmps
mov
adc
pop
bound
mov
test
lods
xor
adc
mov
cdq
cmp
std
in
pop
jp
pop
cmc
pause
retf
dec
dec
add
(bad)
leave
loop
rol
loopne
jae
pop
mov
jbe
inc
popf
std
dec
outs
inc
push
popa
mov
iret
cmps
cdq
mov
stc
sub
pop
mov
adc
inc
aas
dec
ret
fisub
(bad)
lea
repz
and
pop
pop
sub
movs
xchg
add
xchg
mov
push
out
and
xchg
pop
mov
jl
xchg
or
mov
aad
cs
add
lods
adc
dec
in
pusha
nop
clc
inc
mov
shr
add
aam
or
aaa
sub
dec
cs
fwait
xchg
push
ds
mov
sahf
ja
sbb
jo
adc
adc
push
and
pushf
mov
push
int3
cmp
cmp
test
xchg
jbe
adc
adc
mov
aaa
test
or
mov
aas
adc
pop
sub
sub
shl
int3
or
ins
push
and
sbb
cdq
pop
dec
xor
es
cmps
fld
shl
fcom
popf
xor
pop
test
repnz
data16
mov
bound
dec
cdq
adc
aas
adc
outs
mov
sbb
sub
stos
int3
pop
(bad)
clc
clc
mov
inc
and
add
sbb
cmp
das
or
arpl
mov
adc
daa
mov
or
call
enter
loop
mov
fadd
add
push
int3
mov
call
xor
add
jle
pop
sub
into
jo
out
retf
nop
xor
fiadd
cwde
call
ret
dec
stos
add
add
aaa
mul
push
es
mov
or
ds
or
inc
das
cmps
sbb
(bad)
add
push
daa
cmp
repnz
inc
inc
pop
(bad)
xchg
lock
shr
or
ficomp
sbb
adc
movs
lods
pop
icebp
mov
(bad)
xchg
outs
xor
push
jns
push
jno
xor
and
pop
push
pop
cs
adc
add
repz
call
test
popa
rcl
inc
mov
test
or
inc
imul
adc
push
adc
adc
mov
pop
pushf
je
mov
lods
ins
cmp
cdq
jno
dec
ret
bound
les
dec
es
cli
lock
lods
adc
jp
adc
pop
pop
(bad)
adc
fldcw
jge
push
shl
enter
(bad)
rol
aas
jmp
adc
jge
popa
pusha
arpl
(bad)
fld
add
cmc
test
or
repnz
stos
push
pop
scas
pop
fsub
fcmovu
div
mov
ins
ficom
imul
repz
cmp
inc
call
bound
lahf
cld
(bad)
shl
into
sub
and
in
into
xchg
ret
rcl
mov
adc
(bad)
loope
pop
sub
adc
and
lahf
or
out
repz
fwait
sbb
sub
daa
sbb
xor
or
mov
mov
dec
mov
sub
push
mov
add
rcr
mov
pop
loope
cmp
mov
or
into
sub
aaa
mov
movs
xor
or
xchg
add
inc
add
les
out
push
scas
adc
mov
enter
pop
push
rcl
jo
cmp
xchg
outs
dec
adc
inc
iret
out
aad
movs
mov
mov
mov
inc
xchg
hlt
ret
jno
std
jmp
push
(bad)
sub
mov
cli
call
mov
and
pop
adc
lods
shr
lea
in
scas
or
xor
jns
cmps
and
push
shl
jle
mov
dec
add
sub
mul
out
popa
pop
jmp
outs
adc
ss
aaa
pop
pop
dec
cmp
fistp
or
scas
ret
push
fmul
fld
imul
push
aam
and
xchg
dec
(bad)
mov
pop
shl
retf
retf
cld
cmps
inc
mov
aad
mov
xlat
inc
stos
jnp
test
jb
cmp
in
mov
xchg
pushf
retf
ror
pop
les
js
bound
push
jl
push
aaa
popf
loope
or
pop
lods
xor
mov
loopne
fld
addr16
mov
sub
push
xor
dec
inc
arpl
and
stos
cdq
cld
aas
push
sbb
scas
push
vpshuflw
mov
and
add
push
mov
mov
out
dec
shr
sahf
outs
xor
dec
jp
cwde
mov
arpl
mov
pop
gs
aad
pusha
push
(bad)
mov
cld
sbb
aaa
jns
pop
push
jnp
lock
lock
das
test
loopne
xor
retf
stos
jecxz
loop
repnz
xchg
js
inc
xor
mov
pop
jno
cmps
inc
dec
push
mov
pop
fwait
ins
mov
sub
movs
push
jp
add
and
fmul
pop
mov
retf
inc
add
mov
push
inc
cmps
mov
int3
add
call
fninit
jmp
pop
sbb
ins
test
loop
in
and
adc
sbb
frstor
push
push
lods
enter
popa
aad
mov
and
jg
or
adc
cs
pushf
inc
and
jecxz
mov
enter
push
in
xchg
out
stc
mov
imul
out
xchg
imul
test
sub
mov
leave
jbe
jmp
mov
arpl
(bad)
mov
in
xchg
fs
mov
jmp
retf
or
jbe
and
fstp
push
movs
test
mov
retf
pop
adc
xchg
mov
ja
xor
movs
das
or
mov
shl
sub
lds
pop
and
push
gs
pop
mov
nop
and
test
sti
imul
outs
pushf
inc
jg
hlt
xchg
jmp
jb
mov
dec
add
dec
or
das
inc
add
xlat
jns
pop
mov
in
loope
les
pop
outs
inc
aaa
mov
add
icebp
sti
pop
jecxz
ss
lods
mov
retf
dec
lds
xchg
(bad)
push
xor
js
jae
mov
xor
test
mov
add
test
jb
cmp
dec
pop
or
mov
xchg
and
lock
sbb
mov
jns
lock
jo
bound
popf
les
fld
imul
loope
adc
fwait
xchg
sbb
xor
mov
enter
(bad)
repnz
rcr
addr16
inc
jg
test
lods
ss
mov
(bad)
adc
mov
in
stos
or
les
into
cmp
les
inc
mov
sbb
je
mov
xchg
mov
xor
mov
dec
loop
mov
adc
cmp
and
adc
jmp
(bad)
dec
out
jns
jnp
iret
push
cwde
rcr
or
pop
xchg
addr16
xlat
sbb
movs
ss
lahf
xor
adc
sub
mov
shr
nop
out
out
xchg
xor
push
cmps
outs
es
cld
les
add
and
rcl
fimul
and
sti
mov
jmp
add
dec
cmp
adc
(bad)
jecxz
push
jg
and
movs
or
les
sub
mov
mov
push
mov
mov
and
push
loope
popa
mov
je
add
sbb
outs
int
and
in
fs
in
int3
lahf
xchg
ret
mov
mulps
add
pop
mov
adc
loopne
retf
retf
inc
and
pop
xor
adc
pop
sbb
mov
addr16
pop
adc
ja
or
enter
imul
ja
sub
adc
mul
pop
mov
call
jb
cmp
cmp
ja
ffreep
sbb
pop
lods
lock
mov
in
cmp
jb
ror
nop
xchg
xlat
ret
in
cld
mov
adc
(bad)
cwde
test
dec
lea
mov
in
adc
jp
fstp
and
pop
or
lods
std
mov
xor
xlat
mov
pop
jns
js
popf
movs
add
or
aam
pop
nop
addr16
fsubrp
add
scas
adc
fiadd
(bad)
ds
xchg
lahf
cmp
and
pop
sbb
mov
test
test
sub
bound
imul
sbb
fs
in
add
xchg
pop
daa
xchg
(bad)
fisttp
mov
daa
ficom
cmp
fldenv
bound
inc
fcomp
ror
push
(bad)
or
sub
mov
sub
int3
mov
or
xor
and
xor
pop
repnz
push
mov
inc
inc
imul
sahf
leave
pop
adc
or
jnp
jne
adc
fisub
jne
rcr
sahf
push
jp
scas
in
add
and
or
adc
jge
jnp
inc
cwde
sti
sbb
popa
push
xor
popf
inc
icebp
or
xchg
and
adc
sbb
pop
and
in
mov
imul
pop
fmul
xchg
pop
repz
sub
arpl
out
fistp
fmul
lock
mov
cld
fisttp
aas
mov
xor
add
push
inc
cmp
add
xor
cmp
repz
lods
or
pop
hlt
mov
ret
add
mov
test
jmp
lock
data16
inc
and
(bad)
mov
cmp
aaa
pop
js
in
cmp
call
mov
mov
push
mov
jns
jnp
movs
imul
sub
mov
inc
stc
in
neg
addr16
(bad)
push
sub
add
lds
imul
pop
pop
stos
pop
dec
dec
add
and
dec
mov
mov
int3
ret
jns
fsubp
jns
out
xchg
xchg
mov
mov
sbb
ins
lods
aad
xor
xchg
mov
stc
sub
retf
mov
jbe
xchg
repnz
sub
in
icebp
add
sbb
push
mov
jns
lods
movs
sub
adc
or
push
dec
outs
xor
or
fptan
lock
mov
inc
into
mov
shr
mov
cld
int
aaa
outs
fsubr
mov
mov
xor
and
pushf
test
jbe
sub
call
ja
ins
mov
(bad)
retf
fnstcw
in
mov
icebp
adc
pusha
or
cmc
cwde
pop
mov
adc
jecxz
mov
or
jae
and
cmps
iret
(bad)
mov
sar
pop
inc
xor
sub
repz
mov
fisttp
stos
sahf
not
xor
jne
pop
jmp
jp
fdiv
push
and
jnp
paddsb
sbb
push
and
cs
dec
rcr
push
sub
retf
iret
gs
push
push
add
mov
pushf
mov
test
out
outs
cwde
out
dec
lods
sbb
test
aas
xchg
in
sub
in
pop
push
dec
mov
popa
jns
sub
das
mov
js
push
xor
(bad)
iret
dec
or
in
lock
dec
ins
loop
cwde
das
dec
lea
xor
mov
fisttp
popa
cwde
pop
cmp
mov
jle
sbb
in
dec
ins
mov
mov
shl
mov
movs
shr
xchg
dec
repnz
lahf
aad
adc
test
jg
cmp
pushf
pop
int
arpl
jno
sub
loop
jle
popa
in
arpl
jo
push
jns
hlt
xchg
pop
loope
push
xor
xor
fucomi
xchg
int3
out
retf
ins
movs
add
nop
aam
mov
lds
mov
fdivr
retf
cmps
in
std
mov
xchg
xchg
mov
adc
ins
mov
cmp
mov
bnd
mov
cld
push
and
jb
pop
inc
pop
mov
popa
mov
lods
fldenv
and
xchg
mov
stc
jae
(bad)
pop
imul
lock
pop
push
outs
popa
rcl
lds
test
ja
push
into
xor
pop
in
jns
pop
loope
fadd
jge
mov
neg
or
mov
out
inc
xor
mov
mov
mov
push
jmp
sub
iret
repnz
pop
jmp
mov
fidiv
fidivr
scas
mov
int
mov
lods
rol
in
in
mov
or
pop
out
xor
cld
dec
idiv
hlt
leave
daa
loop
stos
cmp
cli
pop
or
leave
mov
dec
push
push
inc
pop
fst
push
(bad)
jmp
aam
dec
inc
xchg
xchg
ja
dec
sbb
pusha
cmp
sahf
dec
or
retf
xchg
ret
fcomp
adc
push
mov
(bad)
shl
pushf
std
mov
out
mov
fistp
jns
int3
pop
push
jg
test
sub
mov
xor
repnz
fldenv
imul
cmp
leave
pop
loope
jns
push
je
inc
outs
out
inc
out
repnz
dec
mov
scas
mov
xor
mov
jge
repz
pop
adc
call
inc
nop
shl
ds
das
push
or
or
xchg
movs
shl
jbe
stc
outs
jae
sub
inc
repnz
xchg
pop
ficomp
push
mov
fcom
popf
fsubr
loopne
jo
xchg
enter
mov
fcmovu
test
mov
jbe
sub
and
arpl
clc
add
iret
or
(bad)
pop
cmp
sbb
pop
mov
stc
(bad)
ror
loope
cmp
call
rcr
or
add
pop
push
fdivr
cs
out
jmp
xchg
imul
pop
ficom
out
xlat
ss
push
repnz
sti
mov
mul
aaa
(bad)
mov
dec
les
test
fsubr
test
movs
mov
mov
cs
call
fnstcw
mov
out
and
bound
adc
and
push
sbb
popa
mov
mov
repnz
mov
nop
xlat
mov
xor
push
dec
mov
adc
inc
jl
pop
cmp
cmp
or
mov
imul
mov
loop
mov
inc
mov
outs
jae
(bad)
arpl
repnz
into
imul
nop
push
sub
test
pop
sbb
ret
test
rol
mov
aam
(bad)
int3
add
xor
ror
mov
push
and
dec
xchg
and
add
adc
fnstsw
and
and
and
sti
out
das
leave
nop
jg
data16
add
sub
mov
inc
into
stos
add
xchg
cmp
inc
xchg
(bad)
std
cmp
cmp
push
dec
ins
xchg
scas
dec
cmp
fldlg2
mov
fs
into
add
retf
cmps
xor
(bad)
rcr
xor
xchg
int
aad
fs
inc
ins
add
sbb
test
sahf
sbb
pop
xor
in
jecxz
sbb
fwait
sbb
xor
sub
mov
xor
sub
add
ds
jbe
dec
fbld
jnp
jno
inc
sar
outs
ss
dec
fistp
mov
xor
push
aas
test
xor
clc
add
jb
push
lods
mov
mov
mov
xor
push
test
add
xchg
cmp
pop
xchg
lahf
sbb
push
rcl
popf
sbb
or
push
in
das
sbb
mov
dec
cmp
popa
mov
sub
test
xchg
xchg
test
cmps
mov
sbb
or
(bad)
fldz
in
lock
out
in
lock
icebp
int3
lock
cmp
in
mov
pop
repz
and
jns
in
lock
iret
mov
popa
jb
js
pop
cmp
xlat
mov
jae
js
in
and
xchg
pop
loop
mov
js
in
and
xchg
pop
loop
mov
js
in
and
test
pop
adc
mov
inc
clc
in
and
test
pop
adc
mov
inc
enter
xor
test
pop
adc
mov
inc
enter
xor
test
pop
xchg
popa
mov
fs
in
and
xchg
pop
xchg
and
and
xchg
pop
xchg
and
and
xchg
pop
xchg
and
and
test
pop
push
loope
xchg
push
clc
in
and
test
pop
push
and
and
test
pop
push
loope
xchg
push
enter
xor
test
pop
shl
xchg
je
in
and
xchg
pop
shl
mov
je
in
and
xchg
pop
shl
mov
je
in
and
xchg
pop
shl
mov
test
cmp
jo
(bad)
add
fs
loopne
data16
pop
jo
pushf
int3
mov
add
cmp
test
scas
sar
jp
data16
cmp
out
icebp
mov
mov
test
mov
rol
add
jae
jge
sbb
imul
repz
mov
fwait
ins
cld
sbb
or
push
(bad)
stos
loopne
sbb
jne
(bad)
sub
ret
mov
sbb
in
add
adc
jb
nop
add
enter
outs
sbb
test
test
pop
xchg
and
add
or
lds
jl
bound
mov
stos
lock
mov
inc
ja
into
push
push
in
inc
push
test
movs
push
into
add
mov
mov
jp
add
mov
cmp
jle
xchg
mov
lods
arpl
or
inc
xchg
and
dec
into
ss
call
adc
mov
xchg
retf
shl
shl
mov
ror
cdq
dec
fs
add
sar
dec
pop
pop
or
and
fbstp
lods
inc
lahf
push
and
adc
push
xchg
aas
sbb
(bad)
mov
test
xchg
shr
std
cmc
lahf
div
dec
in
mov
inc
(bad)
movs
in
xor
jno
jo
push
cs
sahf
and
pop
xor
mov
adc
popa
sbb
enter
jmp
cmp
es
pop
push
in
call
shl
loopne
ja
pop
and
pop
mov
mov
in
adc
and
ret
xchg
sub
mov
xchg
dec
int3
jl
test
dec
jb
pop
sbb
add
int3
lods
fldcw
lds
and
and
dec
inc
jmp
cwde
add
inc
(bad)
fdiv
call
dec
cwde
mov
xchg
cli
bnd
mov
xor
cmp
pop
mov
not
ret
mov
inc
repnz
inc
push
mov
xchg
sbb
dec
mov
jecxz
pop
xchg
ins
sbb
jno
add
or
push
jno
pop
xchg
xchg
adc
adc
into
mov
adc
sbb
add
push
mov
jno
lock
push
push
jle
mov
add
outs
push
lods
inc
sbb
sbb
jnp
out
in
mov
push
or
push
sti
xchg
ret
dec
pop
cwde
inc
mov
loopne
dec
cwde
enter
inc
(bad)
hlt
aad
(bad)
cld
clc
jl
bnd
out
lahf
cmps
jl
sar
jl
xchg
mov
fcomp
jge
push
or
faddp
test
mov
es
pop
or
daa
bound
(bad)
movs
arpl
adc
mov
xchg
cld
test
repz
jmp
fdivrp
adc
cld
sbb
pop
inc
dec
pop
test
repz
nop
or
bswap
cwde
movs
(bad)
push
or
mov
dec
dec
jnp
stos
ins
(bad)
dec
mov
add
push
xor
jae
bswap
dec
aad
addr16
call
mov
int
pusha
call
pop
enter
js
mov
imul
sub
leave
xor
mov
call
pusha
mov
adc
push
popf
or
mov
xlat
add
push
adc
das
or
jecxz
int3
pop
mov
xchg
push
sub
mov
pop
adc
cmps
ret
(bad)
clc
hlt
xor
clc
aad
js
(bad)
(bad)
ja
or
mov
xor
int
pop
test
cdq
imul
dec
xor
jg
and
dec
jbe
rol
sub
es
add
mov
gs
cmp
arpl
dec
retf
movs
or
sub
in
dec
call
loope
dec
mov
push
out
dec
fsubr
aaa
lock
jnp
push
les
push
(bad)
out
ret
xchg
push
shl
push
in
iret
enter
cmp
ins
cwde
fcom
mov
push
fcomp
or
mov
push
fsub
pmuludq
pop
or
out
shl
mov
xor
and
mov
mov
add
sar
sahf
in
or
dec
aad
je
rcr
or
adc
les
pop
sub
stc
jbe
adc
add
mov
js
pop
jge
pop
(bad)
fdiv
sar
imul
cmps
loopne
xchg
mov
int3
push
xchg
xchg
push
lods
ds
outs
xlat
push
jl
xor
stc
add
adc
mov
pushf
fwait
(bad)
sbb
jo
(bad)
enter
enter
idiv
add
push
outs
push
sbb
cmps
inc
cmp
cmp
dec
out
mov
pushf
(bad)
int3
adc
cmps
sub
xor
sub
sbb
xor
fmul
fwait
xchg
push
fcomp
mov
(bad)
pop
pop
cmp
inc
ss
enter
jle
ds
adc
xchg
inc
sbb
xor
lock
xchg
push
mov
inc
lods
dec
out
out
inc
mov
xchg
cdq
sti
jb
retf
(bad)
push
xchg
adc
xor
pop
mov
push
push
fild
push
jl
adc
rcl
sub
lods
mov
js
adc
call
inc
inc
inc
sbb
enter
and
adc
fst
sbb
int3
sbb
es
push
jmp
fwait
dec
bound
xchg
sbb
push
and
neg
test
outs
jne
mov
imul
pop
or
js
cwde
cwde
xlat
cli
int3
sahf
or
sar
repz
jbe
ror
daa
mov
inc
retf
bound
mov
(bad)
loop
jp
xor
dec
push
dec
lods
cmp
movs
push
stos
enter
sub
pop
mov
test
ficomp
push
dec
mov
mov
fist
fcomp
bnd
cs
cmc
jmp
movs
sub
stos
inc
popf
hlt
fwait
add
enter
outs
jge
in
int3
or
test
mov
int3
test
repnz
popa
push
cmp
push
in
mov
or
rcl
sub
adc
mov
cwde
add
sbb
cs
mov
ret
xchg
shr
adc
jp
sub
or
jb
push
jl
lds
movs
mov
xor
inc
xor
xor
ret
and
sbb
popa
dec
inc
mov
das
mov
leave
ins
fnstcw
push
mov
dec
adc
mov
fcom
xchg
xchg
mov
mov
push
xchg
push
es
test
cs
cld
jo
out
cmps
push
push
hlt
imul
fwait
jmp
or
dec
xor
cmc
xlat
in
clc
mov
nop
mov
mov
cmp
ins
pop
ja
and
jno
fstp
enter
inc
mov
js
push
fmul
sub
dec
xor
mov
enter
sbb
ins
into
js
sub
addr16
outs
pop
movsx
cmp
push
inc
mov
ss
sub
or
loope
je
lock
jp
inc
sbb
dec
out
sub
pop
cmp
lds
and
jno
inc
jmp
or
pop
cmp
int
je
xor
js
push
lods
adc
jo
(bad)
sbb
(bad)
cli
xor
pop
loope
jmp
fsub
jbe
retf
sub
js
lea
adc
arpl
cs
es
out
pop
xchg
xor
pushf
xor
(bad)
cli
dec
loopne
test
fimul
ins
gs
sub
in
xchg
rcl
and
ret
outs
and
fdivr
bound
sbb
mov
int3
xor
clc
xlat
pop
cmp
loopne
mov
std
inc
(bad)
cs
and
mov
loopne
add
push
xchg
lods
xor
mov
imul
sub
mov
(bad)
das
cmp
(bad)
movs
call
in
cld
mov
mov
(bad)
sbb
fiadd
movs
or
dec
aam
pop
lock
push
cmp
enter
jge
add
(bad)
cmp
scas
out
push
mov
adc
scas
aaa
xor
fnsave
add
(bad)
mov
cmp
mov
clc
mov
adc
sbb
(bad)
sbb
arpl
int
es
sti
retf
and
out
or
jmp
in
xchg
lock
jae
add
jo
push
xchg
mov
das
jge
out
jno
and
dec
scas
stos
push
test
push
mov
push
aam
fdivr
mov
xchg
(bad)
sbb
jne
into
add
aad
jnp
dec
lahf
lods
out
cs
(bad)
data16
cmp
jmp
aaa
jp
cmp
gs
xor
fistp
xlat
jne
cs
pop
push
sub
sbb
icebp
cmp
aad
rcr
aaa
pop
jl
sahf
jmp
mov
repnz
push
ins
neg
scas
jae
sbb
not
xor
jne
pop
jmp
test
or
inc
stos
xchg
mov
inc
leave
push
jne
rcl
push
jge
(bad)
cld
adc
mov
push
push
push
push
mov
jg
xor
mov
mov
call
lods
aad
out
leave
lahf
xchg
repnz
mov
sub
dec
pop
sbb
or
cs
test
jne
inc
sbb
test
jmp
stc
test
add
outs
ficom
jp
fistp
or
mov
pop
imul
lods
or
cmp
push
mov
cmp
jmp
jnp
jbe
loopne
fdivr
retf
imul
sbb
repnz
cmp
sub
jle
ror
sub
in
push
xor
cmp
mov
add
add
lock
cmps
loope
mov
xchg
rcl
rol
mov
mov
mov
inc
mov
into
clc
inc
or
add
repnz
out
sub
inc
cmp
popf
add
std
cmp
adc
push
xchg
lods
fcomp
in
jmp
iret
jnp
pop
push
fs
sub
scas
in
js
call
jle
sahf
mov
sahf
dec
addr16
div
pusha
cmp
cmp
xor
into
fcmovnbe
mov
test
jmp
xchg
add
imul
mov
add
ror
pop
setae
std
(bad)
cld
pop
add
xchg
add
add
popa
push
jb
jmp
or
pop
outs
in
dec
dec
sbb
mov
rol
std
mov
pusha
mov
jbe
inc
and
out
mov
jl
sahf
popf
bound
add
aad
pop
dec
(bad)
mov
jb
dec
es
mov
rol
jl
inc
cdq
in
mov
test
and
pop
call
rcr
out
xchg
xor
gs
mov
push
sahf
adc
inc
sub
dec
nop
call
(bad)
or
dec
xor
or
cmp
adc
sbb
cmp
or
sahf
mov
lods
out
push
mov
(bad)
xlat
fbstp
or
sahf
inc
cs
inc
stos
imul
stos
cs
ficom
sbb
repz
loop
dec
daa
add
xor
sub
and
push
les
arpl
ret
(bad)
popa
adc
xchg
pusha
xchg
aas
cmc
call
addr16
mov
loop
mov
sbb
adc
add
pop
pop
std
or
out
mov
or
enter
push
push
mov
dec
dec
int
in
or
push
movs
sbb
lea
push
push
mov
inc
add
fsubr
jl
leave
(bad)
clc
sub
push
xor
jns
pop
cmp
push
sbb
bound
imul
dec
stos
aaa
mov
fld
jmp
pop
std
inc
scas
movs
mov
arpl
ins
aaa
nop
mov
and
stos
arpl
xchg
icebp
call
dec
jmp
sbb
or
push
push
daa
inc
arpl
cmps
jb
movs
adc
test
icebp
mov
xchg
pop
push
(bad)
add
push
add
jo
les
iret
push
xchg
popa
test
add
sbb
push
jns
jp
rcr
mov
dec
test
or
dec
sar
call
lods
cmp
or
repz
ins
lock
or
and
in
push
aad
stos
jno
jbe
jp
hlt
hlt
out
inc
sahf
mov
mov
adc
jle
jae
fidivr
repnz
mov
cmps
ds
pop
or
mov
int
push
push
lea
jl
jg
adc
mov
in
loop
and
push
das
push
cmps
in
jne
rol
and
enter
and
rcr
jb
cli
mov
pop
adc
cdq
xor
call
cli
pop
sub
pop
push
cs
rcl
imul
and
pop
test
rol
call
mov
fisubr
loope
and
test
shl
dec
aaa
sbb
pushf
sub
ffree
mov
adc
dec
inc
ja
pop
aaa
es
sbb
jmp
xor
fimul
cmp
fcmovnu
dec
mov
push
and
adc
adc
mov
retf
sbb
cmps
xor
into
pop
lods
push
cs
dec
add
xor
xor
dec
and
fcmovbe
pushf
jp
cld
sub
and
mov
mov
fisubr
push
mov
adc
sub
call
fiadd
sbb
enter
push
or
mov
jp
mov
dec
push
cmp
xor
(bad)
fadd
lock
shl
dec
(bad)
cld
aam
cdq
mov
das
adc
adc
dec
adc
(bad)
cmp
loopne
inc
enter
out
out
test
je
lods
inc
stos
push
out
and
jns
pushf
fistp
or
sub
scas
lods
cmp
dec
imul
call
push
fbstp
jmp
jne
fwait
ins
into
hlt
mov
fidiv
fld
push
aam
push
cmp
push
push
iret
pop
xor
aam
outs
inc
fistp
push
push
mov
sbb
adc
mov
jne
rcr
ins
repz
(bad)
stc
add
push
icebp
push
mov
push
arpl
lea
ret
jno
xchg
xor
idiv
sar
sbb
push
xchg
push
aam
dec
or
or
sub
dec
pop
ins
add
in
clc
ds
lods
sbb
sbb
cdq
xchg
jmp
dec
push
imul
movs
mov
(bad)
call
mov
sub
je
fisttp
mov
jl
push
ss
cmp
outs
fwait
lods
rcl
daa
clc
jp
mov
xchg
sbb
mov
mov
jmp
shl
movs
mov
out
or
mov
movs
or
pop
je
lods
aas
sub
and
jp
xchg
jmp
or
dec
mov
popf
or
pop
sbb
cmp
shl
push
jno
or
stos
cwde
mov
adc
test
jle
and
jl
add
fistp
push
sar
cmp
fs
or
stos
sub
mov
scas
mov
xchg
aad
das
retf
lods
cs
or
pop
call
mov
push
shr
into
mov
call
outs
mov
lahf
in
cmp
imul
inc
jl
sbb
mov
pusha
or
cmp
pop
and
lock
mov
adc
adc
and
or
jmp
sahf
fiadd
mov
imul
gs
inc
add
repz
jmp
inc
mov
xor
adc
imul
out
sub
pop
int
jne
in
mov
out
loopne
mov
shr
pushf
cmp
xchg
inc
mov
add
ins
imul
ins
ins
pop
(bad)
mov
and
(bad)
mov
or
push
cmp
test
int3
lahf
imul
mov
sub
ja
mov
dec
inc
outs
inc
fwait
dec
mov
mov
jne
push
shr
mov
out
call
fiadd
int3
lods
jmp
cmp
push
(bad)
int
sub
mov
sar
loopne
shl
or
shl
lahf
jnp
fidivr
cli
ret
push
push
mov
push
leave
mov
inc
call
mov
ss
inc
pop
push
jnp
pusha
out
jne
and
out
mov
(bad)
xchg
clc
mov
xchg
fwait
stos
ins
push
mov
imul
or
shl
pop
mov
mov
shl
shr
inc
das
pop
mov
or
cmp
stos
and
cmp
pop
jae
jae
addr16
cld
std
jl
cli
mov
daa
mov
xor
std
mov
mov
ja
loope
xor
loopne
mov
or
in
fs
jmp
dec
xchg
and
pop
out
mov
mov
adc
cmps
aam
dec
imul
out
xchg
mov
fild
jb
push
std
dec
and
jb
push
into
arpl
push
div
or
fist
pusha
lea
aaa
es
jecxz
shl
push
aam
xchg
retf
shl
rcl
lods
jnp
sbb
add
push
pop
icebp
imul
and
sar
adc
repz
jns
mov
sbb
gs
lahf
xor
(bad)
xchg
push
add
scas
mov
call
jmp
mov
lods
pop
or
(bad)
rcl
jno
enter
adc
mov
push
mov
cmp
je
enter
stc
mov
enter
cmps
(bad)
scas
out
push
iret
pop
xlat
repz
xor
fild
ret
lds
mov
mov
push
pop
cmp
loop
idiv
xchg
sub
pop
pop
stc
stos
pop
pop
scas
imul
fnstsw
sar
adc
fild
adc
or
adc
cmp
adc
dec
push
out
fsub
and
ja
fistp
jns
xchg
loope
(bad)
jmp
inc
sub
xor
xlat
repz
cmc
fcom
adc
jae
jmp
ja
sar
inc
add
stos
fisub
ret
repz
dec
xor
inc
clc
and
aam
or
inc
test
lock
shl
adc
in
in
pop
jge
loope
cmp
xor
fisubr
fistp
dec
imul
jge
test
adc
add
movs
or
pop
imul
ret
pop
sub
popf
sar
push
sar
push
pop
xchg
jo
sbb
cmps
fwait
daa
pop
inc
enter
adc
cmp
jne
pop
cmc
pop
hlt
mov
jl
pop
mov
inc
stc
pop
inc
push
jl
and
jbe
dec
cmp
sti
ret
clc
sti
and
jmp
test
cwde
and
dec
push
mov
cmp
sub
cmp
je
rol
mov
xchg
scas
mov
retf
popa
ror
(bad)
mov
(bad)
(bad)
jecxz
int
shl
xchg
cmps
push
test
out
mov
jle
jbe
cmp
ss
jmp
push
sar
jns
iret
das
xchg
sbb
int
je
in
push
push
mov
clc
pop
xchg
sub
ins
in
lahf
xchg
sub
fsqrt
ss
retf
aaa
jmp
sub
fstp
inc
popa
jle
jge
xchg
sub
mov
mov
add
mov
dec
jne
(bad)
inc
pop
jge
jbe
pop
sbb
daa
rcl
arpl
cs
addr16
sbb
lahf
push
ds
add
mov
stc
arpl
cmp
rol
add
test
cmp
xlat
in
mov
ja
add
loopne
push
lock
jg
mov
mov
std
into
mov
lods
ja
sbb
dec
cmp
in
pop
das
imul
ins
ror
jae
mov
loopne
sub
cmp
test
sbb
xchg
daa
call
(bad)
mov
je
daa
cwde
(bad)
and
jmp
jae
xchg
inc
cmps
jl
xchg
mov
jl
mov
cmp
adc
test
jp
lock
and
jbe
(bad)
sbb
shr
ret
xchg
inc
jmp
mov
dec
and
sbb
std
into
pop
adc
mov
xchg
cs
fmul
jne
sbb
jecxz
jge
mov
jae
leave
cmp
mov
xchg
xchg
jae
ret
bound
je
out
fcmovne
outs
xlat
leave
out
movs
ds
in
jns
push
mov
xlat
and
scas
ss
imul
jecxz
xchg
aaa
xchg
sbb
popa
pop
pop
add
jmp
ja
loopne
out
xchg
push
pop
push
sub
mov
shl
mov
cdq
mov
sahf
mov
xor
dec
std
mov
push
xchg
int
dec
mov
adc
xor
aad
inc
cmp
adc
call
xor
aaa
iretw
call
(bad)
cmps
jmp
sbb
gs
les
arpl
icebp
out
rcl
repnz
outs
and
inc
pop
iret
ins
and
jno
cmc
push
pop
mov
mov
cmp
leave
jle
adc
hlt
pop
fidiv
jecxz
push
dec
imul
pushf
adc
loope
fdivrp
cli
xchg
ss
jmp
xlat
cmp
retf
push
mov
jne
fucom
push
cmp
pushf
stos
cmp
leave
jp
test
pusha
lds
sbb
jg
ss
in
mov
mov
pusha
or
and
pop
paddd
jecxz
sbb
xchg
xor
mov
and
syscall
cmp
add
adc
mov
mov
fcomp
adc
or
fbld
pop
sbb
cmps
mov
jnp
rol
push
jg
mov
gs
popf
test
js
or
add
pop
sbb
or
inc
mov
je
add
pop
jnp
pop
aas
jp
daa
scas
push
sub
pushf
mov
cmp
adc
in
mov
pop
js
mov
pop
test
int
cmp
jns
loopne
repz
inc
cmp
jle
jne
loope
out
jle
repz
popa
or
jno
push
ror
jb
jl
mov
loopne
rep
popa
mov
(bad)
mov
and
sbb
mov
and
or
xor
pop
in
jge
out
nop
les
arpl
sub
pop
pusha
adc
xchg
dec
xor
pop
xor
out
loopne
das
jo
out
ret
hlt
out
sub
scas
push
and
or
cwde
xor
lds
and
stos
pop
jle
and
sub
push
push
push
sbb
lahf
imul
xor
mov
push
sar
in
dec
movs
sti
fmul
adc
cmp
cmp
mov
loopne
daa
sub
jle
xchg
jg
jmp
(bad)
hlt
inc
popa
inc
jne
adc
js
shl
hlt
sbb
shl
push
aas
cmp
movs
imul
repnz
and
in
stos
pop
scas
rol
inc
lahf
xchg
cmc
(bad)
(bad)
in
xor
fmul
or
loopne
outs
push
pop
sbb
stos
test
adc
push
dec
inc
or
lahf
push
xchg
mov
pop
pop
mov
mov
mov
sub
test
fsubr
mov
add
dec
dec
dec
(bad)
sbb
dec
dec
jae
popa
shl
out
or
jg
pop
add
add
pop
dec
jo
stc
mov
inc
lock
int
push
pop
mov
lods
fdiv
mov
mov
in
rol
aas
and
stc
pop
push
retf
stc
inc
inc
(bad)
js
in
pop
outs
outs
sbb
jp
pop
add
push
mov
lods
sar
dec
mov
iret
fisttp
call
ja
push
xor
loope
push
mov
jle
jnp
add
or
mov
or
mov
jo
xor
arpl
mov
inc
xchg
jl
fcomip
cld
enter
inc
jb
xchg
aaa
arpl
or
pop
sti
xchg
sub
cli
mov
push
(bad)
fmul
inc
sub
jmp
push
mov
loop
bound
xor
fwait
jmp
push
js
and
daa
jns
mov
out
in
dec
es
fisub
fxch
into
leave
shl
scas
sbb
outs
ins
outs
in
lea
jne
rcr
cwde
dec
dec
lock
sub
cmp
pop
sti
inc
ret
xchg
aad
test
in
push
and
and
std
daa
les
shl
fs
ret
dec
ret
push
jnp
dec
rcr
iret
mov
sub
sub
std
retf
leave
cmp
mov
pop
popf
(bad)
xchg
fadd
jg
sub
(bad)
arpl
sbb
add
cmp
les
leave
sbb
jge
in
xchg
pop
js
cmp
imul
sub
jl
into
and
fsubrp
push
mul
mov
xor
adc
or
and
into
popa
and
and
mov
pushf
or
in
movs
jmp
retf
xor
hlt
or
mov
into
cmp
jl
push
call
inc
add
mov
stos
aad
mov
jle
shr
dec
repnz
movs
pop
icebp
or
call
das
int3
dec
call
mov
popf
(bad)
adc
push
dec
fwait
inc
clc
adc
aas
adc
mov
push
dec
mov
dec
cmovle
shl
dec
dec
call
call
pop
aam
popa
or
cmps
movs
or
clc
or
loop
cmps
ss
fld
fist
or
cmc
loopne
pop
cmp
inc
add
jnp
test
jnp
jle
cmp
movq
push
sub
mov
sbb
daa
std
push
lahf
mov
adc
push
mov
imul
sbb
call
xchg
xchg
ret
mov
or
retf
sbb
mov
dec
call
pop
iret
lahf
jns
pop
repnz
dec
fst
hlt
sbb
into
cmp
or
mov
cmp
sbb
add
mov
or
leave
in
in
inc
je
dec
jne
pop
jo
retf
pop
xor
scas
mov
jae
pop
push
(bad)
cli
addr16
cmp
mov
push
mov
test
fwait
gs
test
jb
jle
mov
inc
mov
ss
ins
stos
imul
xor
loopne
bound
push
xchg
dec
(bad)
mov
ret
inc
xchg
adc
jmp
pushf
mov
jp
ds
out
jle
sbb
aaa
sti
adc
sub
and
push
mov
lods
mov
bound
into
iret
leave
out
inc
clc
jge
pop
push
and
repz
xchg
stos
inc
adc
not
(bad)
mov
jae
fidivr
mov
and
or
or
lods
sbb
shl
movs
test
stos
idiv
std
inc
cmp
or
dec
js
out
hlt
mov
sbb
xchg
pop
push
enter
mov
arpl
(bad)
push
sbb
mov
ins
jbe
pop
shl
pop
mov
mov
push
test
pop
aad
jbe
rcr
mov
in
push
hlt
add
fbstp
bound
repz
imul
icebp
push
add
jmp
cld
(bad)
test
push
cmc
imul
push
dec
push
fstp
iret
sahf
stos
add
and
pop
mov
cdq
xor
cmps
nop
cmps
dec
pop
jg
adc
xchg
mov
imul
xor
dec
and
mov
add
or
jmp
fisttp
cmovl
repnz
mov
pop
fdivrp
cdq
cld
clc
(bad)
jg
icebp
mov
repz
in
aas
mov
push
call
xchg
mov
dec
arpl
xchg
or
leave
enter
lahf
sbb
sbb
repz
sub
jmp
fild
sbb
repnz
sub
inc
push
nop
jmp
stos
push
rcr
push
jmp
pop
or
and
mov
out
lock
pusha
cmp
push
xchg
mov
(bad)
mov
mov
adc
sub
retf
push
jmp
xor
cmp
pusha
adc
mov
fidivr
in
jmp
jge
jge
stos
push
test
mov
jns
in
mov
cmps
push
mov
sub
mov
imul
jae
(bad)
sub
inc
cdq
mov
xchg
rcr
int
mov
and
jge
test
imul
in
fisttp
fwait
inc
lea
movs
sbb
fnsave
sbb
aaa
test
int
inc
outs
xchg
sub
cdq
and
outs
pop
xchg
push
push
pop
push
push
aad
jle
sar
cld
lock
ins
mov
jb
repnz
add
stos
dec
jo
pop
adc
and
xor
shl
sub
imul
out
or
jbe
mov
add
(bad)
pop
shl
jmp
cmp
xchg
cwde
ja
mov
mov
test
test
in
jne
and
inc
xor
pop
push
sub
stc
cli
inc
outs
xchg
into
and
fstp
sub
adc
mov
in
cmps
mov
adc
mov
mov
das
in
jo
mov
cmp
aam
inc
test
mov
aam
mov
sub
cmp
dec
ficomp
rcr
(bad)
mov
out
push
mov
fisttp
xchg
ds
jmp
cmp
xchg
(bad)
xchg
test
rcl
fisttp
adc
fisubr
or
leave
call
and
test
mov
push
rcl
and
int
movs
out
and
lods
xlat
(bad)
aad
movs
je
sahf
xlat
repnz
movs
push
pop
aas
jp
imul
in
(bad)
xchg
inc
lods
hlt
cli
jns
dec
fdiv
repnz
cdq
int3
sub
mov
pop
inc
lahf
jp
jmp
(bad)
fisubr
cmp
jmp
ss
movs
mov
xchg
cdq
idiv
fistp
stos
das
dec
aas
cmp
sahf
push
cmps
fidivr
ins
or
cmp
sub
jg
and
mov
mov
jne
pop
or
push
popf
das
imul
clc
out
outs
(bad)
jmp
mov
cld
jmp
(bad)
std
out
sti
pop
fist
shr
outs
(bad)
mov
repnz
outs
xor
movs
jo
cwde
fcomip
cmps
inc
add
outs
retf
movs
cs
pop
mov
lea
ficom
outs
neg
sbb
fst
dec
mov
shl
push
ficom
icebp
daa
fdiv
sub
(bad)
js
das
in
cmp
cli
nop
adc
pop
test
adc
sti
dec
inc
adc
push
pop
lock
fs
iret
or
clc
pop
in
(bad)
ins
xlat
cmp
mov
xchg
lea
cmp
jbe
arpl
imul
aas
mov
push
shl
inc
mov
aaa
std
adc
sub
shrd
sahf
mov
retf
js
arpl
mov
mov
or
xor
xchg
jns
into
movs
jae
fstp
sub
sti
pushf
sbb
mov
dec
out
or
sub
xchg
inc
arpl
mov
je
pop
lods
adc
sub
mov
add
pop
and
add
(bad)
in
and
dec
push
rcl
cmps
arpl
xor
pop
mov
div
pop
adc
mov
aad
adc
or
pop
cli
mov
jl
add
fnstenv
push
and
pushf
jo
rcr
rcl
ja
xor
fldcw
das
aad
dec
ret
push
jnp
mov
xchg
stos
call
test
or
sub
test
push
dec
mov
adc
fadd
push
push
sti
mov
sbb
adc
cmp
imul
stos
inc
cwde
mov
imul
js
data16
mov
xchg
or
mov
sub
push
add
fwait
add
push
cdq
mov
xchg
dec
sti
pop
xor
mov
ins
clc
outs
dec
cmps
mov
fs
xchg
or
jne
sub
aad
mov
stos
dec
addr16
rol
push
xchg
iret
in
iret
push
scas
or
icebp
inc
daa
ins
std
and
push
dec
(bad)
in
cmps
fdivp
xchg
dec
add
sub
scas
add
rcr
pop
add
sbb
loop
imul
xchg
xchg
out
(bad)
pop
movs
addr16
jp
jp
mov
scas
xlat
mov
fwait
mov
jae
bound
rol
(bad)
gs
jnp
and
jmp
jnp
leavew
cdq
or
daa
aam
movs
sar
pop
xchg
(bad)
pop
stc
icebp
in
aaa
jg
sar
(bad)
inc
gs
sub
xchg
add
pushf
fcom
or
xchg
mov
add
mov
xchg
jmp
push
or
inc
xchg
repz
jge
xor
aaa
mov
aam
popa
sub
loope
mov
push
std
(bad)
ja
jle
push
or
cmps
imul
and
xor
mov
inc
lods
pushf
daa
push
test
sti
fst
mov
cmp
imul
sub
jnp
push
and
push
cmp
jge
mov
lea
mov
mov
jle
cmp
call
in
push
call
sar
jb
dec
inc
and
push
daa
addr16
mov
aas
jmp
bound
xor
xchg
push
neg
rol
vpavgw
push
and
jg
mov
(bad)
fwait
arpl
loopne
mov
pop
(bad)
pop
les
sbb
daa
imul
clc
mov
inc
fs
cmps
fwait
jns
std
ds
mov
std
retf
test
pop
cmc
inc
mov
fld
mov
add
fcmovnu
xchg
aad
in
lods
in
fimul
loop
cmp
jne
das
or
mov
xchg
mov
dec
fstp
inc
pop
cld
add
aaa
sar
push
movs
push
nop
int3
not
jl
jmp
cmp
ret
sub
sub
inc
add
pop
xchg
jne
aam
mov
ins
and
inc
mov
jmp
inc
inc
xchg
retf
and
push
add
or
lds
push
inc
mov
fidiv
pusha
pop
inc
xor
out
xchg
cmp
mov
push
imul
adc
xchg
or
push
imul
je
cwde
sahf
mov
js
jp
test
mov
pushf
aam
xchg
fadd
pop
les
std
mov
sahf
aam
gs
call
lods
fstp
push
shl
(bad)
es
cmp
xchg
aad
push
repnz
sbb
scas
adc
leave
sub
mov
cmp
outs
push
idiv
dec
pop
pop
test
sbb
ss
jecxz
stos
out
cmovb
push
dec
lea
or
rol
movs
mov
out
aam
in
fs
je
mov
or
stos
mov
cmp
cwde
xchg
mov
ror
inc
aam
cli
jle
gs
dec
pop
push
push
mov
sbb
xor
fstp
in
(bad)
cmc
sub
push
pop
(bad)
daa
test
jo
jbe
push
adc
aad
adc
aad
pop
rcl
fstp
adc
cwde
mov
adc
jmp
ja
add
scas
das
hlt
inc
mov
imul
clc
lock
pop
fidivr
test
xor
pop
aam
xchg
xor
xchg
add
dec
push
inc
mul
or
popa
outs
repz
pop
popa
mov
pop
rol
jl
lods
inc
shl
aas
or
pop
js
adc
and
xor
ins
mov
daa
and
add
adc
or
push
xor
adc
cmps
inc
mov
mov
retf
push
stos
out
test
cs
ins
xchg
pop
es
pop
scas
xchg
mov
pop
cs
jb
push
mov
pop
pop
lock
daa
movs
cmp
hlt
pusha
xchg
sub
and
or
xor
mov
cld
pop
dec
shl
call
and
and
(bad)
arpl
test
mov
mov
jp
daa
and
pop
daa
or
mov
mov
repz
movs
pop
(bad)
xlat
rcl
out
loope
repnz
pop
jns
cmp
sbb
jns
popf
pop
sbb
pop
pop
inc
xchg
sbb
test
and
jne
jns
cmp
or
jae
in
adc
cmp
xchg
sbb
cmp
jnp
js
push
add
sub
lock
pop
jmp
data16
sub
and
ror
scas
loop
push
scas
aad
in
add
mov
adc
jnp
cwde
xlat
mov
dec
mov
adc
mov
push
push
lods
nop
push
movs
clc
mov
sub
jmp
(bad)
in
xlat
test
adc
adc
mov
adc
xor
test
bound
sbb
(bad)
(bad)
jmp
sahf
fs
mov
call
xchg
retf
lea
mov
and
in
in
or
push
loopne
cdq
mov
dec
fldcw
test
dec
jecxz
pop
stos
jbe
aam
leave
and
pusha
push
jp
fs
mov
ret
mov
cmp
sub
das
push
jmp
in
xor
dec
pop
pop
fisttp
dec
jne
pusha
(bad)
aad
les
mov
cmp
dec
icebp
cwde
loop
adc
or
inc
popf
sub
ret
xor
xchg
movs
shl
mov
iret
dec
out
xchg
test
(bad)
daa
(bad)
push
xor
xchg
sbb
or
add
or
and
and
push
adc
into
sbb
sbb
mov
aam
pop
rcl
add
adc
pop
pop
add
popa
je
xchg
push
and
mov
push
aam
sti
loop
push
xchg
loop
and
lods
pop
cmp
mov
cmp
dec
mov
adc
pop
fistp
test
ja
add
lods
in
or
push
inc
mov
outs
mov
jg
or
(bad)
shl
cmp
fpatan
or
mov
xchg
xchg
retf
repnz
movs
cmp
dec
inc
xor
ja
cmp
jg
shl
fsub
or
les
retf
data16
and
fwait
(bad)
repnz
xor
add
add
inc
sahf
(bad)
jo
scas
ja
imul
les
sub
xor
xlat
pop
or
imul
jecxz
(bad)
loop
jo
or
gs
mov
sbb
mov
or
and
adc
imul
(bad)
xor
popf
bound
or
mov
jns
dec
mov
lods
or
inc
gs
ss
nop
dec
or
out
inc
and
out
stc
aas
arpl
leave
add
cmp
xor
jle
fsub
xchg
aas
jo
test
dec
sub
popa
dec
push
sbb
push
inc
arpl
jb
popa
fcom
and
mov
mov
jl
sbb
jae
ins
mov
lock
mov
daa
xchg
inc
mov
cmp
lods
and
dec
fdivr
dec
call
push
mov
push
iret
ins
hlt
and
sbb
out
sbb
je
push
mov
cdq
in
sbb
in
mov
enter
div
lods
sbb
xor
jmp
mov
or
xchg
ins
cmp
arpl
mov
jge
push
push
mov
dec
into
dec
cs
pop
ins
(bad)
xor
pop
scas
jb
icebp
dec
pop
xchg
ret
lea
das
(bad)
jae
add
mov
add
sti
xor
push
cmc
ror
out
popa
mov
sub
and
(bad)
push
pop
test
lock
push
sbb
sbb
int
mov
pop
inc
inc
xchg
fsub
loope
bound
push
pop
push
mov
popf
mov
mov
fbstp
sti
sahf
int3
mov
xchg
(bad)
hlt
and
jne
iret
lock
mov
mov
test
xchg
cmp
cmp
iret
inc
sbb
push
mov
jg
or
sar
xchg
(bad)
push
sahf
inc
iret
mov
(bad)
loop
(bad)
mov
mov
in
sub
inc
scas
add
xor
(bad)
retf
pop
mov
jp
jmp
lahf
outs
cdq
retf
jno
mov
stos
test
inc
int3
cmc
pop
and
popa
dec
sub
imul
sti
into
push
jl
lds
sub
call
ret
mov
es
out
ret
mov
(bad)
(bad)
out
pop
loopne
push
cmp
and
inc
push
les
stos
lahf
mov
xor
(bad)
pop
lock
scas
inc
daa
or
ret
cmp
movs
je
out
(bad)
fsub
mov
out
loopne
das
cmp
pop
sbb
es
jl
jge
lahf
sub
pop
mov
inc
ror
or
xor
pop
je
nop
dec
ds
push
jnp
repz
in
pop
scas
aaa
int3
(bad)
sbb
cmp
sub
nop
repnz
int
lock
push
dec
fs
dec
cmps
mov
mov
arpl
(bad)
loope
ja
cmp
in
inc
sub
cld
inc
enter
or
push
sub
mov
retf
popa
sbb
add
shl
inc
sbb
pop
js
fistp
fs
mov
jns
jno
inc
jecxz
call
retf
lds
(bad)
pop
fucomi
pop
mov
leave
scas
push
inc
xchg
(bad)
loop
gs
loopne
inc
adc
sbb
pushf
inc
addr16
cmp
push
in
sbb
mov
push
into
std
cmps
lea
cmp
xchg
dec
sub
(bad)
adc
mov
push
or
jg
fnstenv
or
call
add
fst
lods
outs
(bad)
and
test
clc
arpl
loope
imul
imul
xchg
shl
add
xchg
sar
fsubr
iret
xchg
data16
js
jecxz
push
fldpi
xchg
add
aad
xchg
sbb
gs
call
ins
inc
lock
mov
jnp
ret
fisttp
mov
xor
and
inc
pop
or
pop
push
adc
push
icebp
jp
adc
adc
jle
ss
push
xor
int
aaa
jecxz
(bad)
mov
in
popf
adc
jae
inc
mov
xchg
out
inc
fucomp
int
aas
xor
in
scas
icebp
mov
mov
dec
inc
mov
(bad)
and
cmp
movs
sub
es
adc
jb
fiadd
loop
pusha
adc
xor
dec
cs
rcr
ins
xor
add
popa
push
mov
ds
ret
ret
js
(bad)
jne
rcl
(bad)
sub
jno
jmp
jecxz
pop
mov
enter
mov
jnp
(bad)
ja
add
xor
ret
sahf
imul
loope
iret
cmps
or
(bad)
mov
cwde
pop
jge
xlat
sbb
push
fld
popa
sbb
inc
aam
sub
in
jns
inc
arpl
mov
mov
adc
test
cmp
sbb
fwait
jmp
inc
data16
pop
jecxz
fild
test
movs
aaa
ficomp
inc
push
dec
sbb
loope
add
daa
jbe
sub
adc
inc
out
jle
cmps
add
(bad)
dec
xor
xchg
xchg
pop
push
pop
mov
outs
fxch
mov
mov
iret
jg
push
in
js
ss
outs
sub
mov
lock
imul
jb
ret
pop
icebp
pop
push
repz
in
jge
js
aad
call
nop
(bad)
mov
mov
push
or
in
pop
and
sub
ret
add
dec
dec
pushw
adc
push
scas
movs
or
scas
mov
stos
aam
ror
inc
movs
push
mov
pushf
push
mov
or
push
mov
and
jae
std
clc
es
imul
fistp
mov
pop
imul
aaa
adc
adc
mov
xor
add
cwde
ss
ins
cld
or
jmp
xlat
pop
lahf
cmp
outs
ret
pop
jmp
jnp
mov
jo
xchg
(bad)
fild
sub
push
loope
cld
cmc
ret
out
adc
cmp
pop
(bad)
sub
jl
loope
xor
idiv
or
cmpps
ret
add
pop
mov
jne
ret
dec
shl
adc
(bad)
fist
jl
test
sbb
and
stc
sbb
or
jo
sbb
xor
inc
call
inc
test
out
sbb
(bad)
xor
dec
sub
ror
jbe
jmp
daa
daa
xor
sahf
sbb
fldcw
lds
mov
sub
aaa
cmps
js
movs
or
je
stos
aad
add
ins
jb
fucom
out
fyl2x
jge
ret
pop
sbb
rcl
clc
aam
mov
and
mov
fbstp
xor
imul
ss
sti
neg
in
mov
jno
scas
xor
mov
jle
jl
addr16
sbb
xchg
icebp
jmp
xor
jae
xchg
inc
cmp
dec
stc
fwait
mov
popf
inc
out
int
xor
lahf
pop
clc
dec
test
lock
arpl
cmp
out
mov
xor
pop
add
ins
aam
push
in
fsubr
ins
fidiv
stos
xchg
cli
test
push
scas
lds
pop
cdq
or
sbb
aaa
(bad)
adc
xor
pop
lods
ror
mov
xor
fwait
out
jne
cmps
pop
push
gs
jno
mov
outs
cmp
add
pop
jmp
inc
adc
dec
ins
int3
xlat
shl
dec
xor
call
sbb
mov
cld
cmp
mov
and
daa
in
sbb
ins
test
loop
mov
jb
into
sub
and
loope
popa
sub
adc
mov
add
push
dec
ret
jg
xor
add
repz
inc
and
jmp
cmps
aas
ret
add
inc
cmp
xchg
lahf
mov
add
fadd
pop
push
jle
sar
div
add
stos
adc
mov
sub
test
js
add
pop
jmp
sbb
dec
cmc
mov
ins
repz
fs
fwait
adc
add
sub
sbb
das
mov
repnz
xor
mov
jl
repnz
or
xchg
(bad)
daa
sub
loope
aad
add
cmp
test
not
pop
adc
ret
dec
lock
test
dec
adc
xor
xchg
or
das
xor
test
arpl
sub
repz
mov
pusha
adc
loop
or
ds
cmp
les
add
nop
test
sar
jae
push
push
push
or
xchg
inc
ins
ja
push
sbb
xchg
adc
ret
popa
mov
loope
cmp
out
xor
push
mov
das
or
inc
js
shl
sub
jbe
cmp
pusha
aas
mov
arpl
sti
lods
addr16
(bad)
pop
cmc
inc
sbb
jnp
bound
rcl
popw
test
ja
cli
inc
and
neg
and
loope
cmps
cli
shr
test
dec
cmps
xor
loop
scas
hlt
xor
je
icebp
shl
cdq
call
test
adc
push
adc
into
or
xor
shl
xchg
and
xchg
dec
int
sbb
jae
mov
pop
ss
mov
dec
ret
scas
fwait
popa
or
mov
mov
and
jp
or
mov
or
ret
div
test
jg
xchg
call
or
adc
test
aaa
ret
adc
inc
xlat
gs
pop
popa
dec
(bad)
mov
xor
das
and
sti
ficomp
inc
inc
mov
ret
(bad)
pop
(bad)
and
pop
(bad)
and
jge
das
cwde
or
dec
hlt
test
pop
not
sbb
rol
pop
cld
dec
test
push
popa
cwde
bound
or
jp
retf
sbb
(bad)
in
jo
icebp
xchg
and
jecxz
aad
loope
inc
clc
fidivr
lahf
jo
sbb
jecxz
cmp
ret
popa
cmp
sbb
mov
push
out
nop
xchg
fucom
jle
(bad)
(bad)
sbb
and
retf
fistp
aas
cmp
pmuludq
mov
jl
pop
and
out
pop
push
popa
rol
jle
adc
jmp
ret
jle
test
xor
add
and
dec
hlt
or
(bad)
(bad)
ss
and
data16
(bad)
out
or
not
fisttp
repnz
cwde
dec
hlt
cli
jne
mov
arpl
jp
cli
or
fmul
icebp
or
data16
xchg
jnp
sti
inc
xor
out
movaps
std
popa
add
imul
push
and
mov
in
in
ud1
nop
mulps
or
pop
mov
into
aas
xlat
pop
loop
fist
(bad)
ficomp
pop
adc
in
iret
aad
xchg
pusha
(bad)
ja
dec
and
and
mov
and
sti
test
fimul
xor
hlt
ja
inc
or
add
dec
jg
or
adc
mov
or
adc
mov
(bad)
sbb
mov
iret
inc
inc
inc
jg
cdq
arpl
or
xchg
in
es
xchg
iret
stc
push
adc
inc
es
fmul
popa
jnp
mov
idiv
out
daa
mov
std
dec
adc
ret
test
mov
add
cwde
out
in
add
add
xchg
sbb
cmp
sbb
sti
jmp
out
jp
add
cld
daa
(bad)
cmp
push
(bad)
mov
(bad)
mov
repnz
xor
(bad)
and
xor
mov
in
rcl
jl
pop
or
fisubr
sbb
mov
mov
sbb
xor
adc
rcl
rol
loope
lahf
inc
inc
add
imul
shl
cmp
xchg
xor
outs
push
(bad)
loop
outs
or
and
or
leave
sar
and
mov
xchg
psadbw
sar
mov
in
and
jmp
call
std
call
inc
mov
test
pop
lea
pop
or
and
lahf
jge
add
or
aas
mov
test
retf
ret
mov
sti
mov
xchg
fwait
std
bound
mov
xor
adc
mov
pop
dec
inc
call
adc
call
jge
sub
inc
jl
das
mov
pop
arpl
ret
bound
ret
mov
sar
out
and
loope
stos
aas
cmp
repnz
loop
inc
jl
sbb
inc
xor
dec
outs
sbb
sar
cmp
mov
sti
test
in
pop
pop
pop
pop
sub
adc
mov
aas
out
icebp
cmp
daa
mov
adc
adc
push
jb
pop
movs
add
sub
nop
xchg
and
add
push
cwde
sub
xchg
in
and
cld
or
lds
lock
adc
mov
clc
mov
xor
mov
shr
pop
mov
and
push
mov
loope
or
cmpps
shr
sub
mov
lods
inc
cwde
test
inc
sbb
xchg
adc
push
xor
or
and
inc
test
push
or
mov
out
and
fwait
xlat
add
dec
pop
add
ret
push
test
mov
or
jne
mov
push
jo
dec
fisubr
mov
pop
inc
pop
dec
stc
fwait
sub
xchg
or
jmp
and
add
mov
and
xchg
out
mov
adc
fdivr
sti
scas
add
mov
or
enter
sub
add
pop
mov
add
mov
sbb
mov
xchg
push
sub
dec
or
jmp
push
mov
pop
jge
rol
div
sub
adc
sbb
or
push
mov
outs
sub
mov
outs
inc
pop
xchg
popa
test
loope
aam
sbb
ins
inc
pop
xor
popa
addr16
adc
pop
loope
aam
bound
ins
inc
mov
inc
js
call
or
jl
xchg
adc
mov
loope
test
retf
daa
ret
lods
mov
popa
int3
push
sub
test
dec
sub
inc
clc
mov
or
inc
js
fimul
ja
std
push
lock
out
inc
clc
ins
mov
mov
(bad)
out
fsubr
sti
push
sar
scas
das
push
sub
or
push
popa
pop
test
data16
test
ret
mov
inc
js
popa
or
ror
leave
cmps
and
fstp
xlat
lds
ins
jecxz
jecxz
cmps
into
mov
dec
mov
or
mov
ins
loopne
stos
fdivr
(bad)
pop
(bad)
mov
fwait
les
mov
ret
ja
inc
stos
push
shr
sti
dec
sub
mov
push
jmp
(bad)
mov
mov
mov
sbb
pop
jbe
mov
xchg
ins
call
ins
cmp
fld
inc
daa
xchg
xchg
push
pop
popa
sahf
hlt
shr
pop
lods
push
pop
mov
cmp
push
(bad)
or
cld
inc
and
push
aam
mov
fldcw
and
mov
loope
fmul
fld
pop
inc
dec
cwde
sub
mov
retf
mov
mov
pop
sub
(bad)
pop
loopne
in
retf
ss
sub
adc
das
pop
jp
ffree
jbe
cmp
or
xchg
xchg
fwait
(bad)
push
ins
arpl
ss
fist
pop
pop
push
add
fcomp
mov
cmp
jae
aad
mov
cmc
daa
hlt
cs
jg
mov
hlt
(bad)
jge
mov
fcomp
jle
sti
retf
out
xchg
sbb
sahf
push
jmp
inc
xor
jns
idiv
mov
cmp
ret
jecxz
push
mov
adc
jae
adc
sub
push
xor
in
fnstenv
mov
cld
add
retf
inc
test
es
lahf
fs
mov
fdivr
jge
pop
mov
sbb
mov
int
pop
inc
(bad)
mov
clc
xchg
jle
xor
pop
scas
scas
mov
sbb
mov
ja
es
es
adc
sbb
pop
aaa
jecxz
push
sbb
fcomi
cmp
clc
mov
xchg
sti
jl
js
mov
ror
repz
sbb
cmp
jno
inc
cmp
dec
iret
inc
pushf
in
leave
je
push
and
idiv
stos
out
push
add
lods
dec
data16
(bad)
mov
dec
mov
mov
mov
icebp
and
stos
loop
jbe
(bad)
mov
fcomp
das
mov
outs
mov
rcl
xchg
js
sbb
js
pop
fs
mov
pop
mov
dec
sbb
mov
int3
inc
xchg
sbb
dec
pop
sbb
inc
es
leave
lods
jbe
xchg
mov
mov
xchg
sahf
pop
cmc
mov
(bad)
cmp
dec
xor
loop
mov
lock
test
les
test
(bad)
cld
lods
nop
jl
psrad
jmp
xchg
cdq
test
push
push
or
js
mov
adc
or
sahf
and
dec
adc
push
and
or
xlat
or
lods
or
fisttp
inc
sar
xor
fst
cmp
repnz
(bad)
push
or
xor
mov
jg
xchg
test
cmp
(bad)
fidiv
sbb
cld
stos
popf
mov
std
xchg
xchg
push
push
repz
scas
cdq
mov
ret
repz
cld
push
mov
xchg
and
push
sahf
xchg
and
cmp
xchg
int3
stos
xchg
ja
(bad)
leave
popa
mov
sub
ret
imul
and
jmp
mov
lea
dec
fld
pop
or
sbb
jge
nop
loopne
imul
shl
push
or
pop
and
xor
pop
or
clts
mul
fisttp
mov
aaa
stos
jns
jae
inc
xlat
into
push
dec
pop
jecxz
lock
jl
(bad)
repz
xchg
fsubp
mov
adc
xchg
push
(bad)
mov
(bad)
jnp
clc
cmp
mov
retf
ficom
repz
jmp
test
jb
add
inc
cs
loope
es
cmp
(bad)
movlhps
mov
fisub
jg
adc
jg
adc
dec
and
jecxz
sar
and
inc
or
iret
or
inc
lock
xor
xor
jae
loopne
(bad)
push
ret
jns
xor
xchg
cmc
xor
push
in
push
shr
xor
aam
arpl
push
mov
cld
mov
vmread
data16
lods
cmp
mov
adc
aaa
(bad)
pop
cmp
mov
push
jmp
mov
in
imul
add
fdivr
icebp
mov
pop
cmp
lahf
and
repnz
std
lock
xlat
test
sbb
(bad)
fisttp
ja
xor
xor
sbb
add
pop
xlat
popa
imul
pop
mov
sub
mov
mov
jb
out
int
fwait
pop
pushf
repz
out
lods
div
into
pop
inc
test
or
es
dec
fidiv
loope
shl
cmp
xor
popf
(bad)
popa
ret
ret
test
(bad)
fidivr
loope
ret
xchg
out
mov
mov
xchg
sbb
dec
pop
imul
push
(bad)
(bad)
sbb
retf
stos
jge
rcr
ins
pop
mov
repz
out
stos
inc
dec
ins
push
push
sbb
pop
push
jle
pop
adc
xchg
aad
scas
cli
inc
cmp
cwde
aad
mov
outs
and
pop
outs
outs
mov
out
fwait
std
adc
ds
sub
shl
rcl
loope
mov
outs
or
cs
pop
and
lea
or
sbb
adc
sbb
adc
ds
sub
push
call
jmp
mov
or
and
cmp
push
hlt
mov
hlt
inc
fld
inc
mov
jmp
je
jmp
xor
shl
xchg
scas
rcr
fs
mov
es
lods
jne
xor
inc
jge
sahf
out
imul
shl
and
mov
sbb
dec
jecxz
xchg
mov
std
lods
pop
je
fwait
icebp
sub
fnstcw
movs
jo
jae
test
pop
push
sub
dec
loope
shl
mov
xchg
lea
cs
ss
mov
loopne
push
ret
inc
or
mov
ret
sub
test
push
loopne
bound
stos
mov
push
out
mov
mov
jbe
gs
aad
jmp
icebp
inc
mov
test
dec
scas
xor
in
fnstcw
xor
xchg
jge
jg
jl
aas
cmp
add
iret
pop
not
ja
jge
sahf
in
adc
mov
xor
mov
out
fcom
and
das
jg
jae
fwait
mov
push
jge
add
in
out
sbb
inc
add
xchg
lods
fimul
lods
(bad)
pop
lea
pop
imul
sbb
test
pop
rol
jae
aad
lahf
sub
sub
push
call
inc
sar
fld
jmp
mov
jae
sar
or
in
push
cmp
mov
push
rcr
jno
fadd
xor
ss
mov
out
mov
cwde
out
loope
xchg
clc
dec
(bad)
arpl
out
call
icebp
outs
fucomip
test
addr16
xor
mov
add
and
xchg
je
icebp
out
sbb
daa
cmps
bound
repz
or
mov
or
adc
cmp
dec
cmp
push
xchg
jo
aad
loope
lock
sbb
inc
call
mov
into
pop
xor
mov
cmp
push
sub
jo
mov
ret
inc
push
jl
and
push
inc
fwait
jb
dec
push
and
xchg
imul
add
std
pushf
outs
imul
dec
std
xchg
mov
sub
cmps
xchg
std
add
and
out
imul
cmps
idiv
out
sti
fimul
push
lea
retf
and
test
(bad)
or
ficomp
and
lea
call
pop
mov
cmp
pop
inc
mov
arpl
retf
sub
cmp
movs
jp
mov
pop
inc
cmp
xchg
ins
fs
mov
xor
xor
jl
mov
cmps
mov
repz
cmc
xor
inc
lds
add
div
cmps
push
addr16
cmc
(bad)
fild
adc
pop
retf
(bad)
jecxz
out
pop
lock
pop
xor
mov
scas
dec
pop
outs
push
xor
push
mov
xchg
xchg
and
mov
(bad)
cmc
or
mov
cmp
sbb
call
cmc
in
mov
adc
xor
cmp
pop
clc
(bad)
pop
mov
xchg
jmp
or
dec
push
sahf
fcomp
mov
(bad)
mov
test
pop
dec
xchg
mov
mov
and
loop
leave
ret
and
adc
and
lock
fidivr
loope
int3
jno
into
shr
adc
std
lods
icebp
rcr
les
mov
mov
ins
add
leave
jp
mov
les
rcl
and
(bad)
ss
stos
add
cli
test
jbe
inc
lds
fadd
aas
or
fist
sub
jne
sbb
lds
inc
in
lahf
cmp
out
into
jnp
clc
in
sbb
clc
cmp
dec
lock
loope
shl
loopne
dec
adc
or
sbb
out
sahf
adc
out
sub
lahf
(bad)
push
add
pop
push
add
mov
adc
xchg
pop
jl
sbb
clc
pop
xor
movs
mov
xchg
lea
sub
xchg
jle
mov
cmps
inc
dec
(bad)
rcl
xchg
push
ds
pop
ja
pushf
xor
(bad)
call
cmp
mov
adc
ins
std
add
test
xor
pop
ins
repz
sahf
in
mov
popf
ins
dec
pop
and
xlat
xchg
imul
int
call
shl
mov
fcmovnbe
jge
mul
sahf
mov
retf
lds
cs
sub
scas
adc
dec
mov
dec
push
mov
xor
dec
out
add
xchg
inc
adc
out
or
das
popf
adc
ficomp
add
pop
ins
mov
ret
adc
jle
mov
dec
es
adc
fnstenv
fst
mov
pusha
and
xor
jmp
dec
(bad)
jns
cmp
and
jne
shl
sti
cdq
jp
jmp
fdiv
inc
mov
loope
iret
jne
jle
out
fst
fimul
inc
dec
cmps
mov
iret
loopne
lea
cmp
push
jecxz
arpl
xlat
rcr
cwde
retf
sbb
dec
pop
cmc
std
retf
sbb
jge
jo
dec
jmp
loope
push
sub
sbb
push
loope
mov
retf
sub
mov
test
test
jg
stos
cmp
imul
sbb
adc
inc
lods
mov
call
dec
adc
pop
jmp
xor
stos
aam
dec
stc
outs
xchg
cli
lods
mov
mov
lds
push
xor
ret
push
fisub
push
adc
retf
aas
cld
data16
xchg
sbb
add
push
imul
sbb
scas
(bad)
sbb
and
imul
push
popa
sbb
dec
es
and
pop
mov
mov
or
inc
push
pushf
pop
fisubr
mul
sub
pop
pop
out
xchg
mov
mov
(bad)
(bad)
jg
mov
gs
fild
std
jecxz
out
push
int
adc
fs
or
cmc
dec
adc
mov
popa
call
cwde
sub
xor
(bad)
cwde
lods
xor
leave
push
arpl
mov
xor
cmps
data16
dec
retf
fs
sub
dec
push
(bad)
mov
imul
popa
iret
enter
in
(bad)
mov
dec
loope
enter
out
mov
dec
stc
popf
in
lods
sbb
push
xchg
xchg
dec
cmp
jp
call
xchg
das
iret
mov
div
pop
jmp
outs
and
cwde
jae
arpl
add
xchg
shl
mov
sbb
jbe
mov
je
jno
scas
push
or
jo
jno
aam
pop
jo
icebp
cmp
inc
aad
lds
mov
out
nop
jo
cmps
or
mov
mov
sbb
rol
jecxz
mov
pop
push
test
fdivrp
(bad)
mov
daa
cli
je
loop
cmps
lahf
cmp
dec
xchg
xchg
ja
stc
mov
imul
add
and
jb
cld
mov
push
mov
sbb
dec
push
in
(bad)
push
fild
adc
dec
mov
push
fiadd
push
rol
jo
mov
pop
outs
fwait
loopne
ret
es
ins
mov
cs
add
ja
add
neg
add
pminub
sti
ins
mov
xor
jp
pop
ret
sub
retf
mov
sar
pop
sbb
imul
pusha
add
clc
addr16
add
or
add
jne
movs
or
sub
popf
xor
sub
repnz
xor
scas
je
stc
fnstenv
cmp
xor
stos
jmp
mov
sbb
lds
out
ffreep
lds
cdq
push
cs
dec
mov
mov
mov
(bad)
sbb
arpl
data16
sbb
cmp
cmp
cmps
jae
ds
xchg
out
cmp
daa
inc
xor
jo
repnz
mov
xor
cmp
push
pushf
pop
popa
jbe
cmps
lock
xchg
sub
into
int3
adc
pop
or
add
ret
sbb
add
into
ins
sar
pop
or
lahf
inc
push
lods
mov
(bad)
fmul
push
mov
cmp
stc
clc
scas
adc
shl
jbe
and
stos
in
push
push
loop
push
mov
inc
imul
pop
lods
cs
jg
test
add
inc
or
aas
pop
neg
mov
add
inc
add
outs
xor
enter
fwait
cs
mov
loop
addr16
fbstp
gs
mov
adc
addr16
popf
stc
pop
inc
(bad)
gs
inc
(bad)
xor
sub
inc
dec
xchg
shl
xchg
shl
xchg
shl
xchg
mov
sub
jg
into
lods
retf
mov
mov
ds
add
fld
push
xchg
sub
js
and
lock
pop
jmp
or
sbb
(bad)
retf
mov
sbb
(bad)
xchg
sbb
int
adc
and
add
push
enter
pop
and
dec
ins
mov
mov
sbb
dec
mov
sub
push
les
imul
cmp
xchg
push
test
mov
shl
xchg
cmp
mov
in
sub
jge
inc
sti
dec
pop
in
jo
ficomp
hlt
aas
mov
call
sbb
pop
int
adc
loope
jp
pop
xlat
jae
push
sti
xor
scas
sub
xor
js
aaa
jb
das
dec
pusha
push
out
dec
cmp
mov
or
(bad)
out
sahf
lea
rol
cmps
stos
popf
pop
icebp
push
int3
ins
mov
cmp
ins
into
adc
fdiv
jo
jo
mov
loope
xlat
jb
into
aad
loope
add
jnp
dec
adc
data16
movs
mov
cwde
and
mov
mov
cmps
mov
shl
nop
mov
cmp
rcl
and
push
fwait
mov
cwde
mov
(bad)
cmp
in
xchg
loope
jae
(bad)
lahf
xchg
call
mov
dec
icebp
nop
addr16
lea
mov
fcom
sbb
xor
jp
mov
rol
cli
pop
cmp
jns
pop
stc
ret
sub
cmp
xchg
add
mov
icebp
fimul
jg
pop
mov
fcom
cdq
daa
xor
out
lea
retf
pop
leave
adc
lahf
into
push
cmp
jl
pop
pushf
das
xor
lahf
das
adc
mov
sar
mov
sar
in
mov
jmp
add
adc
sbb
arpl
pop
js
fidiv
mov
xor
outs
ins
pushf
out
push
push
sub
(bad)
popa
dec
gs
jne
inc
push
fcomp
fs
stc
fidiv
into
pop
lods
inc
push
fwait
jo
lods
mov
in
dec
pop
movzx
(bad)
jb
push
ret
(bad)
jae
jne
repz
xchg
lea
cld
jns
cmc
hlt
add
dec
dec
mov
pop
cdq
test
in
and
add
pushf
adc
(bad)
gs
enter
cwde
inc
pushf
adc
mov
xchg
jle
loop
mov
cmc
addr16
adc
mov
pop
daa
push
faddp
cmc
jnp
mov
or
jp
inc
mov
xlat
sti
add
retf
adc
dec
das
xchg
mov
sub
adc
mov
sub
mov
inc
loope
cmps
or
pop
fiadd
scas
push
or
mov
stos
dec
pop
mov
test
repz
mov
ss
popa
jmp
xchg
or
iret
fdivr
mov
hlt
inc
cmc
mov
sqrtps
pop
jmp
daa
(bad)
cld
ror
enter
out
repnz
pop
and
movs
int
dec
xor
sbb
(bad)
cmc
xor
sub
dec
test
out
mov
push
fdiv
jmp
cmp
jg
or
mov
fisttp
test
sti
mov
and
lock
inc
inc
rcr
adc
pop
and
jl
dec
sub
push
xchg
inc
mov
outs
push
jle
test
sub
dec
jnp
push
jmp
fild
adc
in
lods
scas
ror
mov
iret
in
mov
mov
aaa
test
call
cld
jl
pop
push
add
pop
mov
movs
add
inc
jo
popf
sub
or
push
mov
cmps
or
sub
xor
push
mov
jae
pop
icebp
in
cmp
add
mov
popf
dec
outs
loopne
pop
inc
and
add
test
test
es
repnz
cs
dec
hlt
and
cwde
mov
cmp
and
cdq
inc
das
imul
dec
pop
int
das
mov
(bad)
cmp
(bad)
sub
lods
cmps
retf
cld
xor
push
or
cmp
(bad)
(bad)
push
loopne
jmp
dec
cld
cwde
push
ror
push
sub
pop
push
pop
fwait
push
cmp
arpl
dec
and
jne
jp
push
inc
gs
adc
lahf
mov
js
leave
int
dec
xor
mov
jbe
cmp
jbe
jg
inc
lds
cmp
ret
xchg
lods
mov
fst
sbb
mov
mov
xchg
jecxz
adc
test
adc
not
call
sbb
jnp
cmp
sar
popf
push
sub
or
iret
mov
aad
outs
pop
rcr
mov
inc
jmp
fimul
cmp
mov
push
fwait
aam
in
mov
in
jge
push
push
stos
xor
es
out
add
mov
add
xor
mov
pop
pusha
(bad)
mov
cdq
(bad)
aam
fs
jge
mov
ret
xchg
push
icebp
mov
adc
movs
test
(bad)
adc
fsubr
call
fisubr
pop
push
les
fisub
push
retf
push
pop
outs
push
adc
cmp
daa
sub
int3
adc
mov
add
xchg
loopne
cmp
fidivr
in
rcl
loopne
ja
ds
jno
push
ins
loope
push
cmps
cmp
test
sbb
xchg
pop
jge
push
pushf
mov
aaa
and
(bad)
adc
jg
mov
das
cmp
pop
ins
jmp
ja
or
daa
mov
lods
sub
pushf
adc
(bad)
push
cmp
or
das
(bad)
ja
out
mov
fstp
pop
lahf
int3
push
pop
pusha
out
and
frstor
and
sahf
jne
and
retf
iret
(bad)
in
push
cli
and
push
jb
jecxz
fld
fs
hlt
jmp
test
popf
pushf
or
xchg
mov
lahf
push
mov
rcl
in
xchg
cmp
sti
pop
hlt
test
xchg
neg
adc
push
ret
mov
scas
pop
and
bound
jl
inc
mov
pop
call
sbb
jns
mov
cmc
aad
push
frstor
out
outs
or
fnsave
mov
jmp
sbb
loope
mov
dec
aas
mov
jmp
mov
pop
test
jmp
jge
mov
cmps
adc
sub
cwde
fsubp
jmp
rcr
daa
xchg
cmp
cs
xor
inc
lds
fnsave
sbb
sbb
cmps
dec
push
mov
mov
call
pop
cmp
jg
test
cli
les
lahf
mov
(bad)
mov
fisubr
cdq
(bad)
fcom
call
movaps
cmp
inc
mov
addr16
pop
jg
xchg
push
retf
push
dec
push
push
pop
mov
sahf
push
sbb
sub
pop
fisttp
imul
in
cmp
xor
int
aam
leave
cmp
inc
mov
pop
pop
scas
fwait
sbb
mov
xor
push
sub
iret
mov
and
jns
ins
sbb
lods
xchg
in
test
ins
jns
jb
movs
in
mov
xchg
fsincos
xor
xchg
loopne
sub
dec
mov
in
leave
mov
sbb
dec
icebp
jnp
mov
and
stos
bound
leave
sbb
enter
repnz
push
les
rcl
mov
sahf
xor
xchg
ret
das
daa
jmp
sub
retf
xchg
loopne
retf
or
push
in
inc
out
aas
jo
out
(bad)
iret
push
in
leave
call
daa
js
inc
and
and
fdivr
in
aad
ins
fsubr
cmps
into
push
dec
pop
mov
popa
dec
cmpps
nop
cli
mov
lods
loopne
jg
dec
jbe
in
frstor
dec
outs
fs
mov
mov
lea
adc
jmp
cvtdq2ps
xor
inc
jmp
call
mov
repz
fild
out
pop
push
out
or
and
mov
std
dec
mov
aad
mov
and
xlat
mov
pop
xchg
jno
pop
in
jp
retf
dec
fild
fwait
push
movs
icebp
jle
(bad)
jae
push
aas
popf
fsubp
in
mov
sbb
jmp
xchg
das
call
leave
fsubr
jae
ss
cwde
retf
aas
mov
dec
ficom
les
fisubr
and
push
ins
xchg
jb
loop
leave
(bad)
out
pop
mov
sbb
imul
mov
mov
pop
sub
dec
loop
stos
ficom
fcmovne
(bad)
addr16
aaa
out
xor
jns
lahf
jb
outs
mov
test
dec
mov
jne
mov
jbe
leave
mov
push
jl
xchg
popf
scas
cmc
sti
ja
pop
fwait
mov
ss
outs
repz
inc
retf
push
jg
aaa
lds
ja
in
cld
mov
jae
mov
rcr
aad
jnp
test
fild
test
retf
bnd
or
mov
(bad)
or
sbb
sbb
jle
cmp
neg
mov
(bad)
scas
dec
mov
pop
pop
sub
inc
mov
inc
lods
std
stos
movs
(bad)
in
addps
(bad)
(bad)
(bad)
gs
in
ja
and
(bad)
jmp
mov
test
imul
loopne
push
mov
cmp
hlt
scas
in
std
jmp
sti
ins
retf
(bad)
jg
jmp
mov
mov
out
mov
inc
push
jne
mov
stc
in
sti
xor
push
das
mov
lahf
lds
jl
(bad)
jg
jnp
push
cli
and
jmp
mov
mov
add
iret
lods
cli
aaa
mov
jno
sub
cmp
sahf
stc
clc
iret
jg
data16
aas
movs
cmp
bnd
mov
cdq
ins
stc
jmp
pop
leave
sub
movs
loop
popf
xlat
mov
imul
mov
add
jnp
pop
popf
sub
jg
pop
(bad)
retf
les
dec
mov
pop
inc
repnz
rcl
pop
xchg
cmp
scas
scas
in
clc
fsubrp
clc
shl
ins
jmp
jbe
lds
fisttp
cmp
pop
(bad)
mov
push
dec
cld
test
pop
jnp
dec
xchg
fdiv
or
(bad)
iret
mov
mov
mov
sub
mov
pop
sub
cld
call
imul
pushf
(bad)
iret
fist
mov
rol
mov
sti
clc
sbb
addr16
dec
xor
mov
stc
repz
lods
daa
pop
push
sub
mov
push
aaa
dec
int
test
mov
xor
and
mov
es
inc
in
jmp
dec
aaa
in
out
rcr
mov
arpl
and
imul
mov
jne
xchg
fild
mul
push
inc
cmp
outs
and
xchg
push
pushf
clc
adc
into
mov
sub
dec
dec
mov
sar
add
call
iret
repnz
(bad)
outs
lock
(bad)
and
dec
in
popa
or
sar
sti
jne
std
(bad)
mov
xor
inc
mov
scas
lahf
fcmovbe
lea
ror
scas
ins
fld
xchg
cld
xlat
out
lods
dec
pop
jmp
jbe
rcr
mov
dec
mov
movs
sub
and
stos
xchg
test
imul
jae
mov
cmp
pop
add
mov
out
pop
outs
lds
test
cmp
outs
in
add
sub
icebp
out
push
sub
push
shr
add
aad
mov
mov
xchg
cmp
mov
retf
stos
push
mov
dec
sti
fsubr
pop
imul
inc
aam
cld
and
mov
into
into
cmc
cmc
dec
ficom
call
test
xor
mov
ficomp
mov
pop
(bad)
cld
push
int3
loope
pushf
sub
(bad)
stc
jmp
dec
call
mov
mov
repnz
cmp
pop
mov
push
xor
div
pop
es
mov
ins
sahf
push
jge
out
push
call
ins
push
cmp
cmp
mov
cdq
retf
xchg
push
leave
mov
out
in
rcr
stos
(bad)
jnp
sub
movs
jmp
sar
fwait
xchg
jmp
mov
pop
outs
out
jl
mul
and
inc
jmp
fcomp
push
mov
pop
cmp
dec
dec
sar
dec
xchg
cmp
inc
or
dec
mov
jg
cmps
cmps
mov
jge
les
stc
clc
stc
jecxz
mov
sub
aam
shl
(bad)
int
and
mov
cmp
das
ja
xchg
jae
cmp
push
jb
mov
scas
mov
pop
push
fs
hlt
(bad)
xchg
pushf
fsub
stos
inc
mov
cwde
and
inc
mov
bound
data16
push
test
cmc
jbe
imul
mov
sub
cdq
retf
(bad)
stc
dec
pop
popf
and
push
jmp
inc
mov
dec
jecxz
aas
push
jnp
(bad)
push
dec
or
mov
(bad)
addr16
mov
repnz
mov
cmp
(bad)
inc
(bad)
mov
sub
outs
fsub
ffree
dec
fisub
lahf
pop
cs
jecxz
stos
pop
pop
std
mov
push
mov
xchg
inc
jmp
or
mov
into
mov
cmp
dec
sub
mov
jne
movs
(bad)
dec
int
test
fimul
inc
add
cli
cdq
je
and
lea
mov
sub
fst
push
xchg
adc
inc
stos
pushf
mov
repz
mov
cmc
retf
scas
mov
jmp
fcomip
jl
fs
xchg
fwait
mul
cld
jmp
push
jno
sti
xchg
repz
(bad)
xor
pop
cmp
outs
sub
add
sbb
xchg
call
daa
adc
sub
jb
je
adc
and
cmp
fdiv
dec
out
je
bound
xchg
or
cld
mov
jmp
mov
pop
js
or
shl
std
das
cmp
ins
stc
fcmovnb
inc
sub
jb
xchg
mov
jne
xchg
sti
(bad)
inc
jnp
fadd
in
xchg
sbb
addr16
mov
fcomp
and
and
sbb
xchg
sub
dec
mov
mov
dec
sub
pop
jne
cmps
mov
fidivr
dec
sub
pop
call
ud1
popf
xchg
cs
xchg
fwait
lds
loop
data16
push
aaa
jg
dec
loop
shl
aas
mov
jle
sbb
lahf
pop
arpl
bound
or
aas
(bad)
or
std
pop
jg
push
jmp
xchg
pop
popf
xchg
push
cmp
jle
ins
or
jmp
retf
je
call
cld
cli
stc
jns
cmps
das
mov
fcomp
cmp
xchg
mov
out
fist
and
int
stos
enter
jne
stos
enter
jmp
push
daa
xchg
mov
fst
out
adc
jne
jecxz
jne
scas
pop
fs
jno
enter
inc
xchg
or
xor
lahf
push
or
push
neg
jecxz
sbb
mov
shl
iret
jg
dec
jl
and
dec
hlt
mov
push
movzx
scas
leave
xlat
bound
aaa
(bad)
jmp
jb
mov
daa
rcr
out
ins
or
pop
cld
arpl
cmps
into
fmul
xchg
sbb
out
mul
jne
mov
addr16
mov
xchg
jmp
push
rcr
push
sub
test
inc
out
and
sbb
sbb
(bad)
sub
jae
xchg
addr16
icebp
inc
push
hlt
dec
sub
out
lea
pop
inc
pop
repz
sbb
jbe
fdivr
loop
leave
mov
pushf
das
jnp
into
push
outs
out
jno
mov
iret
dec
(bad)
or
scas
jno
das
dec
mov
in
(bad)
sti
mov
bnd
sbb
pop
pop
call
jns
adc
pmuludq
lea
ja
hlt
adc
retf
out
inc
adc
loop
fnstsw
pop
push
and
(bad)
lock
sti
jle
call
or
pop
in
fist
fstp
add
jl
out
out
sbb
mov
fs
out
ins
enter
or
pusha
cld
fild
lods
shl
jg
out
call
(bad)
fsub
neg
and
or
push
push
sub
push
xor
in
push
loopne
and
ins
add
ret
mov
int3
js
dec
jmp
icebp
in
push
jb
sub
pop
int3
bound
pop
sub
aaa
add
mov
jae
in
lock
cmp
mov
adc
xor
adc
xchg
add
xchg
mov
inc
ja
js
call
cmp
adc
cmp
xchg
pop
jmp
aaa
inc
ja
mov
cmp
mov
je
xlat
cs
scas
(bad)
mov
jmp
xchg
outs
sbb
adc
(bad)
cmp
push
(bad)
mov
retf
daa
xor
cmc
aas
or
mov
ret
push
call
mov
jg
pop
mov
push
ss
in
xor
fistp
mov
xchg
push
jbe
inc
div
xor
lea
mov
imul
les
pop
jecxz
shl
xchg
xchg
inc
mov
sub
fcmovne
pop
(bad)
out
push
sbb
enter
inc
ja
sti
out
inc
out
fnstsw
imul
dec
shl
adc
push
int3
cwde
add
push
mov
or
mov
sub
inc
mov
or
fwait
jmp
push
and
les
add
mov
adc
cmp
xor
and
xor
and
mov
es
jg
mov
in
jae
stos
mov
xchg
out
scas
mov
cmp
fdivp
jnp
push
inc
cdq
mov
jp
aaa
mov
jno
pop
mov
rcr
sbb
retf
fild
pop
and
rcl
std
add
dec
add
inc
pop
ins
aad
and
and
scas
test
mov
movs
mov
jne
fdiv
scas
pushf
sbb
xchg
cwde
sbb
adc
pop
pop
mov
je
dec
jmp
xchg
repz
mov
adc
ret
call
push
xor
pusha
jg
rcl
jmp
int
aad
sti
push
add
jb
test
dec
mov
push
pushf
jle
fild
lods
jns
jne
mov
jecxz
push
retf
sub
(bad)
int3
jle
pop
mov
mov
mov
xor
mov
dec
test
loope
or
cmps
in
in
pushf
nop
popa
fild
sar
adc
xor
and
neg
popf
sub
push
pop
(bad)
sti
cs
pop
xor
call
push
scas
xchg
aaa
fiadd
push
dec
push
mov
repnz
xchg
xor
cmp
test
xor
ror
mov
xchg
mov
xor
fsub
ds
jge
jbe
in
mov
leave
jg
adc
nop
pop
int3
cmp
popa
icebp
fwait
cmp
frstor
scas
rcl
and
mov
fist
arpl
out
nop
pop
movs
xchg
scas
test
bound
cld
dec
out
hlt
jmp
jns
dec
ds
clc
cmp
mul
aad
add
lods
inc
pop
jno
add
jbe
icebp
jmp
lea
mov
loope
cmps
xor
mov
inc
pop
test
ldmxcsr
(bad)
push
shl
adc
mov
(bad)
cmc
sbb
push
hlt
sahf
mov
push
sahf
js
hlt
rcl
sub
jmp
repnz
xor
cmps
xor
pop
and
hlt
and
add
das
les
in
cmp
mov
out
xor
xchg
(bad)
cmp
daa
jnp
inc
xor
lods
push
mov
cwde
outs
pop
or
push
sub
push
out
call
xor
lods
jns
pushf
pop
mov
test
pushf
jns
jnp
fcom
ret
pop
mov
loop
retf
mov
jmp
call
jl
mov
xchg
or
or
dec
inc
inc
push
je
add
push
adc
cmps
cmp
mov
out
mov
ins
div
fstp
inc
adc
xor
aam
xor
sub
push
mul
fcmovu
dec
fdivr
xchg
mov
std
retf
(bad)
or
xor
mov
(bad)
jp
stc
add
stos
cmc
(bad)
je
shl
xchg
xlat
leave
push
adc
xchg
out
cmp
pop
out
test
scas
jl
repz
out
jmp
mov
and
mov
out
jg
inc
je
mov
pop
adc
inc
inc
inc
lea
lock
stos
fiadd
mov
sbb
fs
fidiv
sub
pop
in
push
and
jl
mov
mov
ficomp
sbb
pop
sub
add
or
in
sub
xor
dec
pushf
jle
leave
mov
push
jne
mov
jb
into
xor
int3
adc
out
mov
rcl
push
es
jno
popa
lock
xor
lahf
mov
sub
pop
dec
jns
fsub
sbb
stc
and
mov
pop
lds
xchg
xchg
or
sbb
sbb
test
scas
lods
(bad)
out
imul
shr
mov
mov
std
lea
int3
lods
cmc
scas
inc
push
(bad)
mov
clc
mov
cmps
enter
sub
scas
xchg
sahf
rcl
imul
push
push
dec
outs
in
outs
mov
sub
mov
cmp
push
mov
mov
xchg
pusha
cmp
xor
fcmovnbe
scas
cwde
nop
pop
shr
aas
shr
or
das
movs
inc
out
cmp
test
xor
test
mov
push
ja
adc
dec
cwde
and
in
push
push
fst
push
mov
imul
sbb
icebp
js
xchg
cli
sahf
mov
add
or
scas
xchg
fiadd
mov
pop
fild
and
and
lea
sub
je
pop
lock
jnp
sbb
dec
pop
rcr
and
jge
loope
in
or
inc
imul
imul
xchg
sub
jle
pop
or
add
imul
jp
sub
mov
mov
xor
cmp
leave
push
lods
inc
push
call
add
jecxz
scas
push
sub
mov
mov
dec
push
int3
jne
lods
push
ror
sar
gs
xchg
sub
bound
xchg
add
add
stos
jmp
push
repnz
and
xor
test
dec
push
xlat
test
mov
arpl
sbb
scas
test
shl
mov
fwait
push
push
push
or
jb
fisttp
out
push
mov
mov
push
les
cli
push
in
or
push
aam
ror
in
mov
dec
push
adc
inc
mov
adc
(bad)
icebp
aad
scas
mov
int
xchg
jmp
out
iret
clc
dec
jmp
repz
mov
push
div
pop
ret
mov
cs
pop
inc
fs
sub
lahf
jnp
ret
std
sub
dec
test
rcr
in
push
ja
cmc
pop
pop
lahf
(bad)
ja
scas
cmp
and
pop
fcomp
pop
repz
dec
jp
pop
addr16
pop
mov
in
mov
xchg
popa
mov
dec
mov
dec
mov
or
fistp
out
ret
(bad)
ret
mov
ins
ins
pop
xchg
push
(bad)
push
movs
mov
pop
(bad)
adc
pop
(bad)
arpl
inc
fst
outs
stos
sbb
xlat
jge
xchg
mul
dec
sti
dec
pop
clc
mov
pop
sbb
xchg
lds
adc
sbb
inc
jl
pop
or
pop
cwde
sub
inc
cmp
retf
add
adc
pop
inc
mov
mov
sub
dec
pushf
test
sbb
cmc
in
mov
push
std
cmp
mov
daa
push
aam
sub
loop
pop
sub
imul
jae
das
cmp
ins
push
mov
ins
std
das
lds
jo
test
out
bnd
stc
jecxz
dec
inc
gs
(bad)
mov
pop
sbb
jmp
lods
adc
jg
mov
jns
stc
jg
popf
push
imul
aas
pop
arpl
movs
jl
idiv
outs
or
sbb
and
icebp
cmp
movs
leave
pop
lods
cmp
lods
push
daa
movs
out
shl
and
imul
add
repz
popa
sub
xor
mov
inc
loope
test
mov
data16
jbe
xchg
imul
arpl
cdq
mov
int3
pop
cmps
pop
adc
out
(bad)
in
imul
retf
aad
push
xchg
fsubr
sar
fdivr
or
jg
cmc
iret
out
(bad)
aad
fstp
loope
clc
cli
aas
jecxz
clc
aas
pop
ret
aad
ret
xlat
jno
pop
hlt
or
xorps
mov
test
outs
loope
mov
sbb
adc
(bad)
push
jo
cmp
mov
or
ins
jns
push
rcr
jmp
ret
push
cdq
or
adc
push
mov
pop
out
xor
scas
push
adc
not
jnp
dec
jp
out
mov
mov
mov
in
sbb
inc
sub
jno
repz
in
xchg
xchg
xchg
mov
sub
adc
jb
scas
adc
cmp
pop
pop
adc
enter
mov
frstpm(287
clc
in
push
pop
or
inc
rcr
push
lds
fwait
dec
loope
int
ja
fstp
pop
retf
push
and
mov
out
out
and
inc
or
push
mul
call
push
and
or
xchg
push
dec
jg
and
pop
mov
loope
inc
fs
xor
int
and
test
loope
arpl
sbb
(bad)
sub
mov
inc
xchg
pop
xor
out
retf
jbe
or
pop
mov
out
and
test
loope
sub
sub
pop
adc
push
inc
sbb
xor
mov
jle
pop
or
mov
xor
dec
jl
jle
movs
stos
outs
sbb
loop
xor
stc
cmp
push
pop
pop
(bad)
imul
mov
sub
loop
cmp
rol
mov
or
xchg
movs
or
mov
pusha
pop
xor
xchg
sub
enter
push
int3
push
outs
repz
mov
xchg
pop
aad
inc
imul
imul
gs
and
iret
(bad)
xchg
sar
leave
out
std
push
or
xor
inc
mov
pop
sub
sbb
std
and
mov
(bad)
test
push
jno
jno
(bad)
jge
out
dec
xor
cli
shr
outs
das
fsubr
cdq
jmp
fisub
pop
add
mov
ret
mov
mov
out
(bad)
stos
pushf
push
xchg
outs
adc
inc
int
in
enter
sub
mov
mov
and
mov
jnp
pop
ret
pusha
adc
and
push
out
mov
test
es
add
sub
(bad)
call
jbe
or
fcmovnu
mov
repnz
sbb
xchg
pop
cmp
out
jecxz
mov
push
mov
inc
jno
inc
xchg
mov
pop
xlat
xchg
leavew
cmps
cmc
mov
pop
cmp
add
jp
pop
sbb
out
dec
out
popf
cmp
mov
fbld
push
lahf
xchg
(bad)
loopne
jne
cmp
cmp
cmps
into
jle
stos
repz
jnp
aad
pop
stos
test
sbb
les
push
jno
sub
jmp
jns
dec
lahf
jae
sub
test
cmp
cmps
jl
inc
test
and
xchg
les
xlat
loope
sbb
dec
stc
outs
lds
div
sub
mov
aam
xor
mov
mov
mov
aas
xchg
or
gs
repz
rcr
cmp
mov
xor
ror
and
out
mov
cmovg
je
jp
fisttp
imul
enter
xchg
cmp
ins
mov
call
push
jb
xchg
or
lods
aaa
mov
sar
lahf
push
mov
sub
cmp
xor
loope
cmp
jo
dec
fdiv
mov
test
push
retf
(bad)
cld
stos
cmp
fld
dec
mov
jne
cmps
aam
das
xchg
sub
add
push
(bad)
out
inc
inc
loope
popf
in
sub
dec
repz
fwait
xlat
aaa
xor
les
adc
mov
inc
mov
into
inc
sub
aas
imul
ja
in
add
inc
mov
sub
cmp
ret
ins
stos
test
pusha
popa
or
sbb
or
mov
ins
mov
mov
adc
shl
sar
dec
push
cs
sti
fcmovnu
jo
push
push
xchg
ja
mov
aaa
ins
xchg
xchg
hlt
mov
mov
mov
sub
xchg
xchg
push
cmp
call
jne
mov
fadd
sub
pop
pushf
dec
in
(bad)
and
fs
cmp
test
cmps
stc
dec
jns
and
das
cmp
mov
push
fs
nop
mov
push
push
pop
pop
lds
mov
(bad)
out
shl
jp
jle
mov
int3
cmp
inc
jecxz
(bad)
test
lea
hlt
ins
pop
mov
out
and
mov
inc
test
stos
xchg
and
pop
xor
adc
cmp
mov
sbb
scas
xchg
adc
jno
stos
loope
dec
enter
jne
and
outs
or
push
out
mov
or
push
sbb
mov
test
cs
jecxz
loop
lahf
push
adc
pop
iret
sbb
or
je
shl
div
cdq
cmp
jmp
repz
in
mov
inc
and
(bad)
scas
fild
mov
xor
cmps
int
icebp
mov
pop
int
cmp
(bad)
mov
or
mov
out
pop
scas
cmp
(bad)
mov
sbb
js
mov
popf
daa
jo
mov
shl
popa
add
mov
hlt
in
stc
jge
or
hlt
fs
jno
cdq
push
sar
dec
mov
and
mov
dec
pop
pop
sub
sti
add
(bad)
jmp
pop
bnd
push
mov
fcomp
les
jle
loop
mov
add
(bad)
adc
push
gs
adc
stos
xchg
mov
sbb
fild
jmp
mov
cmp
push
rcr
inc
mov
scas
jp
jno
stos
inc
cmp
ins
sbb
mov
jno
xchg
lds
mov
mov
cmp
fcmove
fimul
mov
sar
dec
popa
sub
add
mov
iret
sub
jne
adc
es
cmps
int
test
sub
pop
or
jne
lods
or
cmp
mov
mov
mov
ins
jnp
jno
mov
mov
xchg
jg
push
movs
imul
popf
ret
mov
or
or
mov
adc
imul
push
jmp
jecxz
int3
jo
rcr
ds
mov
mov
mov
mov
js
out
jae
ret
hlt
cmc
pop
lahf
mov
jbe
lock
dec
fsubr
imul
xchg
aam
test
mov
fnstsw
xchg
pop
fcomip
jp
pop
sbb
pop
ja
stos
int
xchg
(bad)
cmp
pop
ins
pushf
arpl
and
mov
iret
lods
outs
xchg
jp
jp
sti
cmp
cmp
push
ror
mov
lods
mov
mov
mov
mov
call
sti
pop
lock
nop
mov
cmp
pop
(bad)
aas
(bad)
mov
popf
clc
mov
cdq
leave
mov
xor
mov
fs
test
(bad)
dec
sbb
(bad)
stc
stos
cli
cmp
mov
ins
call
cmp
cli
adc
jmp
mov
test
out
inc
stos
ds
loope
cmp
imul
mov
ss
mov
or
jo
sahf
hlt
cmp
jnp
add
mov
(bad)
sub
loop
loopne
cld
movs
sti
push
pop
add
cmps
sahf
shl
inc
sub
ror
jge
dec
jno
or
or
in
(bad)
rcl
das
mov
push
pop
loop
adc
jg
mov
mov
sahf
and
mov
mov
inc
mov
jno
bound
scas
fldenv
mov
fdivr
xor
push
mov
dec
nop
les
xor
cs
dec
pop
shl
hlt
aam
pop
hlt
or
loope
paddq
cmp
xor
aaa
sub
test
out
dec
mov
lds
rcr
xchg
lock
fild
pop
push
adc
test
inc
xor
push
fild
push
mov
jo
call
add
nop
retf
cmc
push
int
movs
mov
mov
or
fiadd
rcr
jmp
pop
sbb
sub
jl
push
push
push
jno
ja
scas
jle
div
test
stc
xor
pop
adc
adc
or
mov
xchg
dec
std
retf
inc
mov
in
adc
push
or
cmp
scas
idiv
lea
push
inc
popf
push
(bad)
mov
sub
call
repnz
mov
xchg
loopne
fwait
imul
js
push
in
(bad)
(bad)
out
jp
movs
scas
dec
pop
ins
sub
lds
cmp
xchg
pop
jb
or
jge
out
dec
test
ret
call
pop
push
cmp
xchg
push
or
(bad)
pop
push
xor
(bad)
imul
mov
push
stos
jnp
outs
aaa
lahf
sub
and
jae
shl
dec
aas
sti
shr
push
jmp
out
aam
mov
arpl
jbe
cmc
fcompp
mov
imul
les
sar
pop
ins
jecxz
iret
mov
movs
cmp
push
mov
jns
xor
cmp
xchg
(bad)
sahf
out
in
mov
sar
jle
xlat
stos
daa
test
push
ret
test
pushf
sbb
jl
ret
data16
popf
adc
mov
mov
enter
fwait
cmp
cwde
lods
push
mov
xlat
gs
cmps
pusha
jnp
jecxz
cdq
mov
pushf
fist
pushf
jns
sti
mov
mov
or
pop
jl
dec
mov
hlt
adc
fxch
ficom
jp
jp
mov
push
mov
pop
adc
lods
xor
cmps
mov
fldcw
add
dec
fcmovb
pop
lea
sbb
pop
out
(bad)
sub
sahf
push
push
adc
xchg
cmp
rcl
repz
fldenv
rcl
ss
or
(bad)
mov
pop
push
lock
mov
(bad)
dec
xchg
push
test
into
fmul
xor
jno
call
push
and
imul
dec
xor
loop
jo
scas
jg
cmp
les
mov
push
and
mov
xor
sbb
mov
mov
adc
ss
xchg
retf
call
vminss
lods
xlat
dec
call
fcomp
pop
cmp
js
and
mov
(bad)
sub
jge
jge
adc
mov
lds
push
inc
mov
push
shr
dec
inc
mov
pop
rol
enter
sbb
add
ret
mov
test
cld
sbb
ret
mov
push
mov
iret
cli
and
shr
cld
lds
mov
das
(bad)
xor
xchg
mov
mov
std
sbb
dec
fmul
test
xor
cwde
ins
push
xchg
adc
mov
call
adc
adc
jne
outs
(bad)
dec
adc
mov
cmp
xor
mov
jmp
out
in
test
mov
ins
mov
cmp
mov
mov
mov
sahf
cmp
sub
push
popf
xor
cmp
loop
repz
jb
cld
ins
call
add
enter
sub
dec
outs
xlat
xor
retf
(bad)
ss
test
push
repz
vhsubps
ficomp
(bad)
popf
push
rcr
popf
retf
imul
mov
mov
cmp
add
lds
push
mov
sub
addr16
shl
bound
into
loop
sub
imul
and
cmp
xchg
or
cmp
out
mov
pop
into
push
mov
push
out
jns
cmp
jecxz
pop
jg
jae
xor
ins
mov
(bad)
in
or
pop
and
xor
push
int
test
ss
dec
push
mov
xor
or
ja
loop
(bad)
mov
idiv
test
aas
xor
(bad)
shl
mov
(bad)
mov
jne
push
xor
sar
sar
xchg
xchg
ins
dec
xchg
fld
cmp
push
addr16
call
fwait
test
in
hlt
mov
push
pop
addr16
retf
mov
adc
repnz
aad
cmp
xchg
and
xor
les
push
mov
icebp
daa
pop
xchg
dec
mov
(bad)
jae
gs
(bad)
bnd
and
jecxz
movs
data16
or
jle
push
sahf
mov
pop
mov
aaa
xor
dec
jg
fsub
fs
les
push
mov
push
jbe
jae
pop
sbb
sbb
mov
mov
sub
push
fstp
and
jnp
shl
and
jnp
bound
aaa
shl
sbb
mov
pop
aad
xchg
mov
xchg
out
jns
shl
stos
or
pop
(bad)
lds
sub
xor
dec
mov
adc
pop
(bad)
mov
xchg
into
pop
cmps
xor
(bad)
xchg
pushf
fldcw
xor
cmp
cmp
retf
std
sti
sub
sar
cdq
loop
cmp
imul
scas
or
cld
xor
jle
push
lea
push
xor
mov
in
call
mov
fwait
popf
mov
ficom
jae
lds
jne
xchg
mov
aam
fdivrp
pop
imul
in
push
sbb
ds
xchg
xlat
mov
push
(bad)
sbb
xchg
std
int3
jne
imul
test
(bad)
shl
out
(bad)
cmp
sti
std
out
fwait
mov
int3
push
aam
ss
test
sahf
in
mov
mov
test
push
jg
lods
scas
shr
or
retf
cmp
(bad)
daa
sti
push
mov
(bad)
leave
out
push
pop
loopne
cmp
xor
mov
mul
xchg
inc
jae
mov
addr16
cmc
fs
xchg
(bad)
jmp
xor
jl
add
push
add
inc
push
mov
loopne
jle
(bad)
push
pushf
leave
cmp
lock
mov
xchg
jmp
xchg
popf
add
mov
push
fwait
jge
pushf
pop
fistp
cmc
out
out
lahf
sub
jmp
cld
inc
cmp
push
mov
fisub
sub
ds
xor
outs
inc
jae
lods
ja
jmp
or
adc
(bad)
cli
xchg
mov
test
jle
inc
lahf
xchg
xor
dec
mov
sahf
jo
fisubr
jb
aad
call
jle
in
dec
fisttp
int3
(bad)
sub
push
fwait
cmp
mov
or
stos
clc
fsub
jne
in
sbb
mov
sbb
aaa
push
fs
lds
fwait
lea
fs
inc
dec
int
jmp
loopne
ins
pop
cmps
mov
sbb
pop
fsubp
jb
hlt
push
sbb
fidiv
(bad)
inc
das
cmp
retf
xor
or
dec
jmp
adc
xchg
call
gs
dec
push
sbb
jnp
cld
sbb
(bad)
shl
cmp
fstp
xchg
push
jg
pop
pop
imul
iret
mov
pop
dec
mov
mov
cmc
pop
retf
sbb
ss
iret
idiv
sub
push
ins
jmp
push
stos
aad
ficomp
xor
outs
fwait
mov
push
test
mov
imul
outs
jle
aas
xchg
mov
pop
or
jns
jae
jnp
xchg
in
sti
sbb
jl
out
mov
dec
scas
mul
mov
jecxz
call
jle
imul
out
pop
and
adc
push
(bad)
jne
idiv
cdq
outs
and
outs
cli
fwait
enter
dec
fdivr
not
xor
call
loope
out
mov
fild
cld
mov
cmc
fcmovne
mov
fimul
xchg
(bad)
sbb
int3
mov
out
or
jo
xchg
mov
cli
in
jne
repz
std
mov
out
pop
mov
cmp
adc
out
cmc
xor
adc
or
mov
xchg
pop
push
sub
shl
je
xchg
ins
outs
js
mov
sub
lds
mov
lods
or
mov
lahf
loop
cs
or
sub
cmp
mov
arpl
mov
adc
or
cmp
or
loope
xchg
jmp
(bad)
cs
shl
lods
movs
inc
aas
aad
mov
mov
and
outs
ins
xchg
push
data16
(bad)
in
fild
push
shl
sbb
inc
mov
pop
xor
hlt
dec
cmp
out
test
jbe
(bad)
out
test
mov
sbb
ins
pushf
sub
jmp
aas
mov
mov
cmc
addr16
jne
out
mov
mov
(bad)
xor
loop
jne
pop
jo
call
loopne
aad
scas
mov
scas
push
mov
mov
aad
mov
pop
jno
stos
jl
xlat
stos
adc
mov
jo
jp
cmp
lahf
hlt
ficomp
pop
mov
pop
pop
mov
push
push
or
aad
jp
rcl
mov
aam
push
push
adc
push
push
push
mov
sub
push
pusha
les
rcl
stos
popf
pop
jge
or
mov
ja
lds
mov
xchg
xchg
sbb
adc
mov
xor
retf
mov
in
(bad)
std
mov
nop
push
push
test
sbb
pop
push
outs
aaa
cmc
cmp
sbb
pop
mov
test
enter
adc
mov
adc
pop
ficom
cmp
dec
mov
mov
add
xor
mov
pop
mov
xor
ficomp
jbe
popf
adc
mov
pop
stc
and
scas
js
inc
xor
gs
icebp
fistp
cmc
sti
mov
xor
scas
xchg
jg
cmc
imul
pop
mov
std
cli
pop
scas
xor
lods
pop
push
test
pop
and
sbb
sub
cmps
pop
(bad)
fdivrp
pop
sbb
mov
daa
xchg
stos
aas
sub
fdiv
push
ret
cmp
(bad)
sub
(bad)
pushf
push
ret
mov
cmp
sbb
sbb
imul
add
xlat
shr
push
icebp
data16
push
stos
add
push
adc
pop
mov
(bad)
lock
cdq
cmps
rcr
ds
(bad)
jmp
retf
inc
dec
mov
push
repnz
iret
adc
imul
push
pop
or
add
std
mov
xor
mov
xor
push
mov
sbb
ins
stc
sub
aad
int3
jmp
inc
pushf
cmp
out
inc
jnp
retf
jge
jno
es
shr
dec
xchg
mov
adc
loopne
fwait
icebp
(bad)
js
lds
mov
mov
and
sub
popf
mov
jmp
pop
retf
mov
dec
pop
cmp
xchg
outs
jne
ins
sub
push
in
fs
js
sbb
movs
test
xchg
loop
jno
jne
mov
retf
jns
sub
stc
leave
sub
jp
int
fild
leave
fld
ds
dec
cli
xor
les
dec
mov
movs
gs
je
(bad)
iret
jne
(bad)
rcr
(bad)
push
mov
aam
xchg
test
aam
inc
inc
fst
test
mov
test
stc
jle
outs
push
or
ss
mov
into
pop
ficom
add
mov
out
and
pop
cmc
mov
and
popf
xor
sub
test
inc
push
jmp
in
cmps
push
lahf
push
enter
(bad)
dec
stos
gs
ss
enter
adc
fs
in
xor
lods
mov
sbb
xchg
xchg
xchg
cmp
repz
ret
adc
push
out
test
mov
cld
ds
(bad)
and
das
sub
mov
repnz
adc
lea
xor
rcr
enter
mov
and
pop
xor
mov
aam
sar
jge
inc
push
je
pop
xor
push
sbb
push
inc
xchg
xor
xor
(bad)
lahf
or
sub
or
or
test
in
push
sbb
sub
(bad)
jp
stc
ja
xchg
xchg
je
push
mov
or
mov
(bad)
add
jg
in
pushf
push
stos
mov
clc
out
cmps
push
(bad)
push
lds
test
(bad)
jl
or
sbb
jp
in
mov
stc
test
out
xchg
out
xchg
lahf
lahf
mov
dec
rol
sub
jnp
neg
inc
mov
add
addr16
daa
sti
add
mov
pushf
xchg
das
stc
aaa
rcr
shl
outs
jmp
push
lods
mov
cmps
and
cli
fisub
and
dec
jmp
pop
in
jno
cli
imul
pop
or
push
movs
arpl
push
mov
xchg
movs
cdq
mov
data16
test
loop
push
jbe
ficomp
leave
mov
xchg
enter
loopne
out
les
push
mov
pmaxub
push
cmp
enter
scas
dec
xor
aad
es
push
xor
test
sub
(bad)
xchg
cld
jle
jno
jl
push
outs
cmps
or
xchg
jle
into
cmp
mov
inc
xor
inc
stc
sub
pop
inc
jge
outs
pop
aad
stos
dec
(bad)
lock
mov
shl
arpl
ds
and
fcmove
(bad)
cdq
inc
xchg
sbb
sub
adc
lea
lods
adc
aam
mov
xor
pop
repnz
add
imul
adc
daa
js
push
in
lahf
mov
enter
push
pop
mov
stc
fimul
push
mov
pusha
int
rcr
add
leave
add
ret
jmp
xchg
xor
mov
in
(bad)
jmp
sbb
bound
add
push
cmp
push
add
inc
cmp
mov
jo
stos
(bad)
push
add
pop
pop
mov
in
sar
or
cmps
push
xor
sub
sbb
stos
inc
ja
add
pop
mov
inc
mov
mov
sti
ins
in
outs
(bad)
cs
or
pop
mov
arpl
test
movs
sub
cmp
and
inc
jnp
adc
cmp
jo
pop
adc
rol
rcl
mov
sbb
imul
ret
std
repz
xchg
pop
sub
enter
fld
mov
push
and
jge
les
or
mov
aaa
into
inc
mov
or
rcr
adc
or
jecxz
retf
pop
mov
(bad)
ins
clc
ror
mov
pop
xchg
fwait
jnp
mov
pop
(bad)
in
movs
xor
sub
cld
aad
sti
(bad)
mov
repz
pusha
pop
and
neg
std
cmc
cmc
aaa
lods
jne
stc
fnstenv
in
mov
push
imul
jne
retf
xchg
nop
push
pop
test
cmps
test
dec
jbe
jmp
adc
jnp
inc
add
xchg
dec
mov
std
sub
fs
mov
xchg
xor
dec
imul
in
daa
xor
out
sbb
(bad)
or
daa
jnp
out
xor
out
mov
xchg
dec
cli
and
leave
jle
dec
mov
sbb
cmp
loop
inc
xor
push
push
mov
and
adc
xchg
loop
jno
lahf
jmp
jecxz
inc
fcmovbe
ds
ja
sbb
jae
stc
adc
pop
push
outs
push
pop
mov
(bad)
call
popf
adc
and
sbb
lahf
ret
aad
loope
jg
cmps
jno
outs
cld
xor
hlt
fwait
aas
lea
jge
pop
out
hlt
xchg
cli
loope
jg
aas
fsubr
mov
ret
sbb
ret
push
hlt
(bad)
sbb
clc
(bad)
sti
jecxz
push
jnp
out
lock
nop
inc
mov
icebp
(bad)
sbb
jbe
lea
sub
jg
cmp
sbb
inc
xor
xor
cld
jecxz
mov
fisub
cmp
pop
ret
mov
dec
pop
test
sub
jnp
push
jmp
push
dec
pop
pop
mov
adc
inc
cmp
push
mov
movs
jae
sti
cli
(bad)
sahf
in
jo
fmul
mov
les
sbb
mov
or
loop
mov
jnp
sti
sbb
lock
sahf
neg
pop
outs
sub
mov
pop
ja
into
and
jecxz
pop
ja
(bad)
loopne
shl
lahf
lds
repz
iret
(bad)
jne
mov
jo
pop
jo
scas
cmp
or
lahf
(bad)
jne
clc
aas
loopne
jae
cmp
sahf
test
cmp
push
js
jnp
lods
and
test
push
xor
mov
leave
hlt
retf
and
and
jns
push
xchg
push
cmp
push
ret
jg
xor
pop
fsubr
dec
out
push
pushf
mov
in
dec
cmps
mov
mov
jae
lea
stos
(bad)
shl
dec
call
cmp
jle
jmp
gs
mov
cmp
mov
mov
fld
imul
ins
inc
shl
lock
aad
pop
inc
adc
pop
ja
(bad)
cmc
push
jb
inc
and
shl
out
outs
sahf
sbb
dec
cmp
setge
daa
sbb
ftst
fcmovu
xor
ds
mov
(bad)
pop
(bad)
fld
or
mov
mov
inc
bound
(bad)
push
loopne
jne
das
rcr
popa
mov
pop
jmp
(bad)
int3
(bad)
jne
fdiv
daa
jnp
repz
jl
into
inc
adc
out
xchg
inc
sar
pop
xor
(bad)
and
inc
ret
ror
(bad)
jp
xchg
adc
xor
call
into
jno
out
inc
aad
in
pusha
fs
and
sub
mov
mov
hlt
stos
jge
inc
mov
pop
stos
das
ret
fwait
pop
popa
hlt
stos
leave
shr
(bad)
cmp
std
call
adc
adc
push
mov
jp
inc
mov
jmp
xor
pop
outs
or
call
pop
std
cmp
dec
inc
xor
jb
sbb
pop
movs
imul
push
dec
gs
jns
retf
adc
shl
push
mov
fcomp
xchg
loop
sbb
push
ret
mov
jns
or
movhps
out
jp
jmp
in
add
ds
jbe
sti
inc
loopne
mov
addr16
ja
(bad)
pop
mov
pop
mov
pop
pop
dec
pop
mov
or
mov
cmp
ja
sub
into
movs
jo
or
test
ror
test
add
jmp
jns
xchg
mov
mov
mov
gs
add
mov
push
dec
aad
mov
lahf
push
aad
repnz
cdq
jmp
loope
mov
(bad)
xchg
sbb
adc
mov
cmp
pop
sub
pop
push
mov
add
jl
push
(bad)
or
out
rcr
retf
xor
lods
unpckhps
pop
mov
popa
les
push
jge
lods
push
test
test
or
sbb
popa
pushf
jmp
lods
xchg
jp
mov
je
fwait
add
out
push
sbb
sar
(bad)
sar
mov
and
push
sub
aad
sub
stos
jp
lods
pop
push
daa
stos
pop
jne
mov
sbb
imul
pop
lea
jae
mov
rol
pop
adc
xchg
mov
mov
xlat
enter
and
jmp
sub
ins
mov
mov
stos
push
mov
mov
enter
push
inc
mov
inc
out
push
or
jns
stos
jl
inc
pop
mov
(bad)
push
dec
push
fld
jo
lods
xor
cmp
mov
hlt
cmc
jo
nop
daa
bound
dec
imul
test
pop
push
fidivr
mov
popa
mov
(bad)
mov
lods
sbb
movq
jecxz
mov
jns
int
outs
push
or
aad
in
sbb
inc
in
pop
fcom
jmp
and
jp
out
fisttp
clc
cmc
popf
pop
sahf
jnp
mov
outs
push
cmp
jb
xchg
jae
sbb
fistp
pop
adc
inc
xchg
in
out
or
out
cmp
movs
fdivr
test
jp
inc
arpl
and
in
push
mov
lea
sbb
pushf
adc
dec
mov
cmp
loopne
lea
xor
and
nop
mov
dec
mov
mov
arpl
(bad)
cmc
lahf
jnp
mov
adc
stc
and
gs
add
jo
test
addr16
mov
ins
cld
jl
mov
pop
mov
mov
rcr
mov
and
mov
jp
daa
out
pop
lahf
pop
fidivr
scas
cmc
test
sub
jl
sub
or
push
pop
pop
scas
call
in
ror
push
sti
push
or
retf
mov
add
mov
movs
jae
into
mov
fwait
xor
out
neg
nop
rcr
out
sbb
mov
sub
dec
xchg
fstp
mov
xchg
fbld
jp
stos
xor
or
adc
cmps
xchg
fdiv
pop
imul
jo
ds
pop
ret
inc
ja
cmp
xchg
arpl
dec
jnp
sti
into
push
xchg
push
lods
rcl
sbb
aam
das
xchg
(bad)
or
push
int3
lods
and
pusha
out
(bad)
std
inc
xlat
xchg
mov
add
iret
lahf
lods
in
in
into
push
dec
adc
popf
dec
mov
js
xchg
push
jmp
shl
addr16
fnstsw
sti
pxor
test
fwait
test
cs
or
arpl
mov
cmp
lds
cs
stos
std
mov
mov
out
sbb
jle
jae
jg
xlat
fcom
jge
in
addr16
xor
or
into
sahf
mov
xchg
scas
lods
mov
cld
or
stos
(bad)
(bad)
jmp
call
pop
push
(bad)
jmp
jno
inc
cs
fsubr
scas
and
ror
add
or
rcr
and
pop
mov
mov
je
loop
push
push
xor
jbe
xor
dec
cmp
mov
jno
jae
inc
fdivr
xor
adc
mov
cli
sbb
mov
fcomp
xor
mov
pop
xchg
xchg
adc
lds
add
dec
ret
retf
pop
mov
mov
aam
dec
adc
xchg
js
scas
add
add
lds
lods
pop
jns
mov
cmp
in
sub
pop
jg
sub
in
aas
fld
addr16
pop
imul
pop
and
and
icebp
in
cmp
push
sub
push
(bad)
retf
adc
sbb
xlat
iret
adc
or
xor
mov
add
jns
sbb
leave
xchg
(bad)
retf
int3
into
push
mov
dec
mov
pop
ficom
in
std
(bad)
mov
sti
cwde
cs
scas
xchg
xchg
xchg
xchg
(bad)
lods
shl
(bad)
ss
(bad)
mov
stos
dec
ss
(bad)
pop
jg
pop
xchg
fadd
mov
imul
mov
mov
and
sub
in
and
mov
sbb
rcr
lahf
mov
add
jnp
pop
dec
jge
loopne
jp
shr
aad
mov
out
icebp
repnz
ret
fcomip
lock
cmp
jg
jmp
vcmpsd
in
dec
adc
or
add
call
int3
dec
mov
stos
adc
ret
push
out
les
sub
mov
ret
or
xor
dec
(bad)
in
mov
inc
dec
xor
imul
scas
mov
popaw
pop
into
mov
movs
dec
lahf
arpl
pop
adc
int
mov
cmp
jle
gs
ret
jns
out
sbb
jb
jns
pusha
push
jnp
fwait
jae
cmp
pushf
pop
(bad)
xchg
cmp
cmps
fcomp
xchg
dec
int3
std
stos
fidivr
sub
mov
mov
clc
(bad)
mov
inc
pop
jmp
dec
mov
js
jae
popa
add
(bad)
jmp
mov
out
(bad)
jge
int
mov
les
les
mov
adc
xchg
pop
sub
test
mov
mov
neg
lods
movs
and
enter
hlt
jmp
fsubr
test
inc
popa
ds
mov
or
mov
fldenv
mov
or
rol
lods
pop
xor
pop
or
jns
data16
xor
cmc
push
xchg
rcr
stos
or
out
mov
sub
fdiv
adc
les
sub
inc
das
cld
ja
les
push
jns
out
inc
arpl
fldenv
fisttp
fidivr
in
icebp
jo
xchg
sub
mov
mov
les
lods
inc
or
sbb
sahf
daa
movs
stc
xchg
call
mov
mov
sbb
sbb
xor
push
dec
sub
pop
(bad)
cmc
mov
adc
and
loop
push
or
mov
jae
or
or
or
push
xchg
mov
mov
xor
and
add
scas
les
mov
stos
movs
cwde
mov
fnsave
shl
dec
mov
addr16
add
sbb
xor
(bad)
pop
mov
inc
xchg
(bad)
xor
mov
inc
pushf
push
pop
xchg
rcr
test
dec
sahf
mov
cmp
movs
pop
sub
mov
sahf
add
jmp
push
out
js
mov
sbb
sub
pop
scas
jmp
cmp
add
int
scas
or
cmp
fild
ds
stos
push
lods
sbb
imul
imul
mov
loop
rcr
jg
jge
cmc
fisubr
jmp
cmp
into
cmp
cli
mov
cdq
xchg
mov
ds
adc
cdq
retf
(bad)
movs
xchg
inc
xchg
hlt
jb
retf
xchg
dec
lds
cmp
mov
xor
shl
push
(bad)
std
in
push
sub
jno
ss
push
sbb
mov
hlt
sub
(bad)
mov
call
(bad)
dec
jae
mov
clc
cmp
sub
xlat
jl
jge
(bad)
jns
pop
pop
cmp
jge
stos
out
shl
jl
loopne
mov
mov
fsubr
enter
shl
mov
push
into
xor
adc
mov
pop
retf
clc
fmul
gs
cmp
sub
push
cmp
sub
in
push
mov
aas
mov
sbb
pop
sub
cmp
or
push
arpl
jmp
out
call
es
pop
dec
sub
test
pop
jp
and
stos
call
div
ins
dec
pop
pop
repnz
icebp
mov
rcl
jmp
cwde
lods
es
and
xor
dec
pop
push
loope
stc
call
add
test
loopne
js
js
call
fwait
or
cmp
loopne
or
mov
sub
sub
and
sbb
adc
push
mov
sahf
cmp
test
aad
add
mov
retf
int3
fst
xlat
cld
inc
lods
(bad)
fsubr
sub
cmp
out
sub
pushw
scas
in
into
jne
xor
adc
or
adc
outs
sti
sub
aaa
pop
sub
pop
out
(bad)
popa
mov
mov
sub
in
gs
mov
int
xchg
loopne
lock
repz
repz
cmp
jb
cmp
sbb
call
fnsave
cmc
or
and
cmp
std
mov
push
push
mov
cmp
mov
cmp
daa
mov
into
std
jbe
(bad)
cwde
push
jp
mov
mov
imul
dec
xchg
lahf
ins
xchg
(bad)
sub
inc
jmp
lock
mov
inc
fnsave
les
outs
mov
dec
push
div
push
scas
cmp
or
gs
mov
arpl
inc
scas
inc
push
adc
mov
mov
(bad)
js
pop
pop
push
cmp
stos
fstp
sti
leave
push
push
addr16
or
pop
mov
sbb
ret
dec
jecxz
imul
lods
jbe
(bad)
fucomi
fucom
mov
(bad)
xor
icebp
in
out
(bad)
arpl
repz
pop
push
xlat
shr
scas
shr
or
(bad)
inc
lock
mov
or
jl
dec
sub
adc
jmp
js
popf
or
lock
adc
mov
xchg
jnp
adc
mov
sti
test
out
shl
shl
adc
xor
imul
in
cld
pop
lods
xor
frstor
mov
push
(bad)
ret
jecxz
sub
les
jmp
push
mov
retf
arpl
jle
mov
jmp
add
sbb
or
mov
mov
lahf
dec
mov
push
jmp
mov
sub
inc
popf
mov
mov
cmp
dec
in
jb
pusha
mov
in
mov
fiadd
mov
cmp
ins
shl
cmp
shl
jnp
sbb
into
cwde
lds
push
jns
cwde
addr16
add
and
mov
popa
loope
jmp
mov
inc
push
mul
mov
xor
std
ins
das
fmul
imul
mov
xlat
xchg
mov
cmc
repz
sar
push
stos
mov
es
lds
stos
pop
test
cdq
in
aam
pusha
mov
aaa
jbe
mov
xor
and
idiv
inc
inc
es
lods
push
movs
js
mov
pop
shl
mov
loop
jmp
int3
mov
mov
jge
push
bound
ins
cmp
es
in
jb
adc
xchg
mov
xor
dec
mov
dec
push
repnz
mov
gs
stos
mov
pop
shl
out
inc
inc
push
cmp
cmp
mov
push
(bad)
and
jb
adc
loop
jmp
and
mov
adc
aad
mov
jmp
dec
xchg
cld
cmp
dec
fdiv
(bad)
pusha
pop
xchg
(bad)
xchg
mov
mov
(bad)
cs
pop
(bad)
repnz
mov
mov
mov
retf
stos
sahf
inc
out
outs
adc
pop
jecxz
push
addr16
adc
xor
je
cmp
adc
(bad)
(bad)
sub
inc
fwait
xor
repz
out
out
jne
into
test
or
mov
imul
jnp
mov
mov
sti
imul
inc
xor
out
jnp
mov
xor
push
add
ins
sub
xchg
cmp
outs
pop
cmp
adc
into
and
inc
cmp
les
mov
shl
leave
jp
mov
inc
fdivr
cld
push
push
movs
adc
sub
mov
pusha
je
(bad)
stos
(bad)
mov
jecxz
in
je
sbb
inc
cmp
cdq
in
and
push
push
fdivp
mov
mov
xchg
jae
sub
lea
in
sub
jns
or
and
mov
dec
push
xchg
aam
cmp
cmp
gs
ins
pusha
into
inc
stos
cmps
popf
xchg
addr16
ss
sti
int3
or
test
pop
push
lea
cmp
xchg
inc
(bad)
outs
cmp
jecxz
cmp
add
retf
movs
xor
fisub
mov
pusha
rcr
inc
or
fld
sbb
mov
xchg
xchg
jns
push
ins
adc
dec
push
xor
sub
inc
sub
mov
movs
sub
inc
ds
es
stos
jns
call
and
ret
or
mov
retf
mov
cmp
scas
mov
cld
add
int
pop
pop
sub
retf
retf
sbb
and
sbb
in
out
aam
ret
stc
aaa
cdq
add
jg
ss
std
lods
cmps
push
aaa
mov
mov
jmp
xlat
es
into
leave
aad
out
sbb
int3
repz
(bad)
icebp
(bad)
xlat
(bad)
call
sti
fsub
cmps
cmp
lods
out
cmc
retf
sub
mov
rcl
call
repz
repz
mov
in
xor
retf
es
adc
sbb
jne
inc
and
std
cdq
xlat
pop
repnz
test
pop
fsub
mov
cmc
(bad)
and
pushf
pop
jge
jnp
mov
push
gs
sub
jb
pushf
xchg
cmp
daa
jl
and
sbb
cmp
(bad)
mov
js
clc
cs
das
ret
xchg
mov
lock
and
loope
popa
lods
aas
popf
lock
out
fldenv
fiadd
lock
out
aad
mov
push
lds
scas
(bad)
hlt
push
(bad)
jnp
out
xor
push
mov
and
xchg
xchg
lea
aaa
xchg
scas
int3
arpl
cmp
sti
jo
push
push
mov
xor
clc
xchg
in
je
dec
or
xchg
test
adc
(bad)
(bad)
mov
pop
les
jb
cmp
sub
out
jae
inc
inc
jge
jl
jmp
sub
dec
add
mul
addr16
and
cmps
push
lods
(bad)
push
mov
jmp
adc
aas
test
inc
out
mov
stos
pop
subps
mov
sbb
imul
sbb
push
inc
push
inc
mov
movs
shl
retf
test
sbb
cmp
push
test
xchg
pop
outs
jecxz
pushf
or
xchg
mov
jne
(bad)
mov
aad
sbb
cmps
jno
and
aaa
dec
cmp
adc
in
and
(bad)
hlt
retf
stc
sub
xchg
enter
add
pushf
xor
dec
cmps
jnp
xchg
pop
sub
mov
leave
push
icebp
sti
in
idiv
xchg
inc
sub
mov
adc
mov
jmp
push
retf
sub
retf
out
jb
and
dec
xor
mov
(bad)
leave
push
ja
pop
popa
aam
sbb
sub
mul
sbb
aaa
fstp
in
in
cld
cld
imul
push
aas
mov
scas
pop
fisubr
xor
ss
fild
mov
cmc
in
popf
ret
popf
mov
xchg
and
push
(bad)
aam
aam
mov
sub
clc
or
inc
inc
dec
ins
xor
dec
mov
iret
inc
xchg
xchg
xor
movs
pushf
sbb
cld
jecxz
xor
mov
mul
cld
cmp
cli
mov
xchg
call
add
jo
ins
std
inc
ja
mov
cdq
sbb
movs
cli
fstp
mov
cmp
retf
icebp
jge
cmp
sti
xor
fist
mov
mov
cdq
(bad)
and
mov
mov
leave
loop
cli
and
mov
test
imul
jecxz
xchg
(bad)
sti
xor
push
mov
ins
xor
mov
or
fwait
xchg
and
in
int
mov
fsubrp
movs
mov
jge
sub
pop
mov
outs
inc
ins
out
(bad)
sbb
fstp
inc
(bad)
test
inc
ins
outs
fnstenv
(bad)
div
mov
cmp
mov
popa
sub
(bad)
cdq
lock
mov
scas
test
mov
fidivr
ret
test
test
sub
sub
test
jnp
movs
push
inc
sbb
ror
ret
test
adc
push
scas
mov
ret
shr
push
sub
rcl
div
sbb
shl
xchg
mov
jmp
scas
xchg
push
pusha
xor
sub
mov
cmc
pushf
push
adc
sub
arpl
imul
xor
movs
cmp
adc
push
das
inc
out
jo
inc
and
out
sbb
xor
sub
inc
dec
sub
sti
iret
jl
aam
ins
and
dec
inc
aas
jns
sub
or
mov
pop
aas
jle
mov
stc
push
out
fstp
sbb
push
pop
sahf
in
mov
mov
mov
out
or
ret
push
(bad)
in
out
mov
retf
repz
sub
pop
mov
shl
jp
xchg
pop
pusha
or
fst
sub
(bad)
dec
mov
popf
dec
xor
pop
mov
stos
int3
mov
xchg
cmp
mov
out
pop
mov
adc
stos
inc
jge
popa
adc
enter
fwait
pop
xor
jb
lods
dec
cmps
ja
sbb
dec
sub
sbb
call
xchg
call
add
inc
cmp
(bad)
jno
mov
push
imul
sbb
mov
outs
lods
sbb
scas
fmul
pop
cld
fisttp
xchg
add
mov
ja
mov
mov
inc
lds
pop
retf
loop
xchg
mov
out
imul
out
pop
and
in
fist
pop
outs
push
mov
scas
mov
cld
and
adc
jno
lods
rcl
fwait
push
loope
jnp
ins
mov
scas
mov
fcomp
jb
scas
mov
cmp
scas
mov
out
mov
fadd
or
into
jo
xchg
bound
jp
jno
fucomi
test
jmp
out
jge
mov
adc
aaa
pop
lods
fisubr
add
push
push
mov
push
push
or
test
fs
xchg
cli
push
inc
inc
xor
cmc
inc
pop
or
adc
retf
adc
or
ins
xchg
cmp
inc
and
or
sub
xchg
pop
jnp
adc
ret
mov
mov
aas
inc
sbb
pushf
fadd
cmps
add
imul
push
(bad)
xchg
mov
retf
cmps
mov
fimul
jmp
call
sub
jp
(bad)
and
inc
xor
adc
jns
mov
adc
pop
adc
pop
fdivr
or
cs
add
mov
ret
push
or
je
sbb
xor
xor
sub
es
xor
xchg
jecxz
div
xchg
adc
inc
pop
dec
in
cwde
sbb
sti
xor
sub
ja
pop
or
and
jecxz
outs
mov
push
test
int3
xchg
imul
inc
addr16
pop
movs
mov
pop
and
nop
aad
call
mov
into
add
in
inc
dec
das
dec
aad
xor
cmp
xor
mov
fprem1
fadd
out
clc
xlat
leave
jecxz
in
xchg
inc
rcr
push
inc
test
inc
mov
push
retf
loopne
cli
arpl
sub
aam
scas
cld
jp
cmps
jge
xor
(bad)
mov
scas
inc
into
(bad)
xchg
test
mov
mov
ret
fsubr
dec
pop
jb
xor
outs
jb
mov
jmp
pop
out
inc
mov
pop
cmp
sbb
cmps
mov
ins
jge
rcl
sub
fdiv
dec
out
mov
test
push
sub
popf
sub
sbb
fist
and
dec
jo
sahf
fnsave
jle
mov
mov
adc
or
mov
cmps
ret
dec
hlt
dec
mov
call
and
fnstenv
cmps
inc
inc
push
call
and
adc
dec
push
sub
mov
push
sbb
xchg
add
sub
outs
ds
add
je
push
inc
retf
mov
mov
jo
cmp
cli
in
inc
inc
jnp
gs
xor
mov
pop
(bad)
in
in
test
push
sub
sub
in
mov
inc
por
sti
out
mov
dec
jp
and
push
popa
mov
jg
mov
stos
int
mov
stos
cwde
pop
or
adc
in
cmp
cmp
dec
mov
mov
jns
gs
sub
lock
fwait
dec
gs
xchg
scas
jo
cs
pop
sub
mov
mov
dec
dec
inc
jecxz
and
in
js
mov
push
xchg
rcr
pushf
int
or
aas
and
sub
or
push
and
cmp
inc
(bad)
pop
not
push
mov
enter
inc
adc
mov
sub
cmps
pop
jns
xor
xchg
mov
in
jne
pop
xchg
mov
cmp
cwde
add
sbb
jg
mov
lahf
sub
mov
push
xor
in
pop
scas
stc
stc
push
popf
and
pop
push
jg
mov
sahf
add
jle
add
(bad)
fdivr
test
ss
cmc
repnz
pusha
mov
mov
and
out
pop
inc
stos
ds
mov
mov
push
lods
jmp
test
out
adc
lods
sbb
pop
adc
push
imul
inc
stos
jle
cmp
sbb
fstp
xchg
push
push
xor
pop
sbb
mov
xchg
push
(bad)
in
fimul
push
jmp
pop
dec
ror
je
push
out
xlat
bnd
(bad)
ror
mov
jmp
push
fwait
or
mov
and
xor
pop
push
(bad)
sbb
imul
repz
aas
cdq
mov
sar
inc
hlt
push
dec
test
jmp
adc
mov
mov
sar
xor
fisttp
pop
(bad)
pop
dec
retf
cmp
dec
sbb
fild
xor
fadd
shl
sub
mov
mov
in
mov
leave
mov
addr16
inc
mov
inc
jl
es
jo
clc
pop
sti
jne
add
jbe
inc
mov
push
fisttp
leave
sbb
bound
pushf
repz
adc
mov
in
push
out
mov
sbb
inc
cmc
xor
mov
mov
jecxz
sub
out
pop
jle
cmp
jecxz
out
scas
adc
cwde
mov
lods
xor
call
out
data16
mov
mov
cwde
scas
mov
(bad)
pop
stos
cmps
pop
pusha
mov
hlt
jns
xlat
je
adc
jmp
jecxz
jbe
test
xor
cwde
fsub
out
movs
cmc
inc
fst
mov
mov
or
stos
sbb
loope
or
les
push
pop
and
popa
add
mov
xchg
shr
(bad)
mov
add
imul
push
icebp
pop
mov
aaa
ret
cwde
stos
jecxz
jne
inc
ds
(bad)
(bad)
loop
imul
pop
sbb
imul
scas
mov
xor
push
fs
sti
fsub
enter
lods
dec
push
mov
push
imul
push
mov
addr16
jae
rep
xchg
je
pop
arpl
(bad)
push
into
push
push
mov
xor
sub
mov
or
(bad)
push
rol
addr16
xchg
sub
ficom
cli
jl
cld
into
stc
cmp
in
mov
mov
mov
idiv
ja
data16
dec
pop
clc
js
(bad)
clc
fidiv
pop
mov
or
or
addr16
adc
pop
js
sbb
adc
adc
ins
mov
add
mov
or
mul
xchg
outs
xchg
ficomp
sbb
mov
mov
dec
loop
lahf
movs
fsubr
cli
popf
cmp
aaa
jns
sub
rol
test
mov
jbe
mov
mov
icebp
sahf
cld
push
inc
or
or
inc
pop
popa
lahf
sti
jae
sub
mov
into
retf
push
cs
or
sbb
or
into
fcomip
mov
(bad)
int3
mov
sub
push
add
lods
sub
es
jo
push
pop
imul
add
mov
in
push
jmp
call
clc
mov
pop
sbb
jns
pop
repz
xor
out
dec
xor
sbb
jecxz
div
sub
sbb
inc
mov
mov
out
hlt
test
add
stos
xchg
cdq
(bad)
pushf
icebp
sub
mov
gs
push
jmp
mov
add
add
aaa
test
jo
pop
mov
out
mov
mov
mov
fisub
dec
jg
mov
(bad)
mov
push
adc
mov
sub
jae
and
call
stos
ret
mov
lea
sbb
inc
js
push
mov
inc
dec
into
adc
cdq
stos
mov
sub
push
lock
out
retf
aad
mov
push
fiadd
adc
(bad)
maskmovq
fmul
sub
sahf
push
pop
out
popf
leave
pop
sbb
test
in
stc
mov
(bad)
or
sahf
mov
ja
adc
fld
pop
pop
lahf
and
cmp
xchg
pusha
sahf
in
pop
aad
fidiv
ja
mov
out
out
pop
push
jnp
add
(bad)
cmp
and
gs
mov
sahf
mov
xor
cli
js
mov
jp
mov
xchg
pop
cmps
push
ret
pop
mov
cmp
mov
pop
in
imul
jb
(bad)
mov
mov
inc
fwait
(bad)
lahf
enter
xor
pushf
pop
and
in
mov
and
in
lea
mov
dec
xchg
mov
fistp
mov
scas
and
in
loope
and
ins
clc
jg
sub
hlt
sub
hlt
sub
hlt
mov
jp
adc
adc
sahf
dec
imul
ins
jb
mov
xchg
xchg
add
fsubr
pop
mov
stos
push
sbb
mov
jo
test
cs
(bad)
out
in
push
xchg
sbb
or
dec
xchg
xchg
pop
fcmove
adc
enter
cmp
jp
sbb
add
inc
jne
sbb
jle
push
jecxz
jne
cmp
jg
stc
pusha
fld
pushf
push
xchg
sub
ss
setnp
popf
mov
push
out
push
out
push
nop
in
lods
hlt
dec
fcom
aas
sbb
mov
lds
inc
and
jno
or
dec
fsubr
(bad)
mov
mul
sar
ds
push
or
add
mov
(bad)
enter
sbb
lea
mov
jbe
mov
push
js
stos
ja
pop
icebp
fcmove
scas
adc
mov
inc
icebp
(bad)
xlat
adc
xlat
pop
mov
std
adc
fimul
cmp
inc
mov
pop
sti
clc
lahf
adc
mov
not
scas
lods
cmp
pop
adc
js
leave
mov
neg
cmc
sub
mov
or
mov
push
cli
ret
mov
ror
pop
cmp
dec
je
dec
mul
jecxz
cmp
cmp
(bad)
rol
maxps
mov
mov
pop
int
xchg
mov
jle
mov
cmp
xor
cmp
cmc
push
push
(bad)
sar
into
rol
gs
mov
inc
(bad)
dec
xor
hlt
call
sbb
sbb
and
movs
mov
(bad)
cmps
pop
push
sbb
stos
ret
scas
cmp
mov
xor
sub
adc
hlt
lds
gs
mov
adc
cmps
xchg
loope
fwait
adc
cmp
mov
xlat
push
les
push
sub
cli
lods
xchg
pusha
inc
sub
pop
shl
pop
das
loopne
cld
in
movs
pop
shl
dec
das
loopne
jl
mov
shl
mov
jno
jl
das
loopne
ins
cli
je
loopne
fdivr
das
push
shl
in
pop
shl
dec
das
loopne
lods
cmp
sahf
stc
pop
das
loopne
int3
mov
xchg
jge
pop
push
or
mov
sub
pop
imul
pop
aam
das
mov
loope
jno
cld
jne
mov
jmp
inc
and
sub
rcl
mov
ss
or
inc
xor
pop
popaw
cmps
push
arpl
cli
jne
mov
test
and
fild
push
in
xchg
add
arpl
fdivr
test
in
mov
push
xor
pop
pmaxub
(bad)
test
pop
push
faddp
mov
mov
iret
mov
dec
popf
mov
out
xchg
cdq
idiv
in
jno
adc
clc
ds
rcl
xchg
sbb
dec
cmc
(bad)
jno
jecxz
ds
inc
mov
in
or
sahf
test
xor
pop
sub
and
cmp
sbb
xor
sbb
retf
lods
mov
push
xor
add
pop
cmc
enter
stos
xchg
scas
and
mov
cmps
repz
in
inc
pusha
aad
enter
xor
jnp
loopne
es
pop
sar
xor
sub
xchg
cmp
mov
rol
ret
jmp
lods
xor
jl
mov
mov
xlat
cmp
mov
sub
mov
and
push
ins
add
ret
adc
(bad)
lahf
cs
xor
xor
xor
push
ds
xchg
xor
rcr
out
scas
mov
mov
test
mov
in
xor
mov
dec
ds
pop
jmp
xor
cmp
and
fild
sbb
sub
xchg
sbb
jbe
clc
ds
aas
stos
int
pop
pop
push
mov
jecxz
xchg
mov
pop
pop
int
(bad)
int3
xor
cmp
pop
push
lods
test
push
shl
das
inc
xor
xor
pop
or
adc
(bad)
aad
mov
out
push
popf
leave
push
xor
lock
call
movs
lds
shr
popf
imul
fdivr
gs
and
cmp
lods
hlt
(bad)
pop
jmp
loope
xchg
mov
repz
jmp
ds
jl
daa
out
pushf
jmp
inc
aas
xlat
mov
cmps
mov
les
mov
lods
mov
jecxz
sub
jg
jns
imul
jmp
gs
adc
dec
shl
mov
and
sub
in
aas
xor
xchg
lock
out
and
test
xor
dec
dec
js
mov
pop
jg
mov
xor
pop
adc
or
adc
sahf
mov
ja
aad
jb
fisubr
aaa
arpl
add
pushf
mov
in
scas
mov
adc
ss
loopne
mov
cmps
shl
pop
mov
retf
(bad)
mov
jnp
sahf
inc
pushf
jp
and
addr16
or
inc
js
mov
stc
ins
mov
loop
retf
dec
scas
ss
push
mov
js
jb
dec
push
stos
mov
mov
leave
jge
mov
jne
repz
xlat
into
add
jns
mov
jl
fwait
sbb
in
xor
out
icebp
outs
shl
jb
jge
cli
mov
cmp
pushf
pop
ins
imul
out
cmps
repz
into
iret
or
(bad)
imul
pop
mov
ret
imul
lods
dec
rcr
ret
std
pop
icebp
and
sbb
or
sti
xchg
dec
push
jns
mov
jge
popf
jnp
mov
xchg
cmps
or
scas
int
arpl
hlt
int3
mov
into
fscale
mov
xchg
rcr
mov
std
pop
mov
loop
shl
pop
jmp
in
out
aad
(bad)
cmp
imul
xchg
mov
add
add
push
sub
cmp
jb
mov
xor
iret
pop
out
pop
xor
std
ins
mov
in
int3
iret
ins
mov
add
pop
or
lods
idiv
imul
dec
sub
fisub
and
in
push
mov
push
fdiv
pop
movs
mov
daa
mov
movs
mov
dec
ins
das
shl
ss
sahf
loopne
aaa
mov
sbb
aas
push
mov
stos
add
pusha
inc
fnstsw
dec
or
mov
adc
push
adc
test
xor
and
xchg
mov
xchg
inc
cwde
and
out
and
jne
push
jg
ja
cmp
mov
sub
shr
mov
push
bound
push
in
test
mov
and
ret
sub
loopne
int
dec
fst
sti
pop
add
(bad)
push
xor
stos
test
shl
push
daa
xor
jnp
movs
inc
ins
rol
pop
sub
addr16
clc
mov
sub
pop
cli
pop
cmp
sbb
cwde
sub
mov
std
cmp
icebp
dec
in
mov
sub
aad
push
mov
int
sahf
dec
push
dec
sbb
mov
ror
jge
idiv
sbb
jmp
mov
dec
push
xor
pop
in
inc
jne
inc
(bad)
adc
sub
pop
jbe
and
in
in
(bad)
imul
rcl
jmp
push
cmp
popa
jp
int
mov
enter
inc
push
loope
jle
cmp
(bad)
sub
data16
cdq
mov
aaa
stc
lods
imul
test
outs
sbb
xor
xlat
push
xor
push
jmp
jl
ds
adc
sbb
pop
mov
lea
adc
pop
and
sbb
push
sbb
enter
inc
mov
cmp
sub
or
push
mov
mov
pop
or
inc
in
fist
mov
cmp
cdq
lea
mov
inc
mov
and
jg
popf
stos
scas
call
mov
mov
push
push
jmp
das
mov
imul
jl
mov
jbe
cmp
xchg
inc
mov
push
repz
adc
icebp
ja
cli
or
mov
sti
hlt
int3
ja
pop
out
xchg
mov
stos
gs
in
xchg
out
pop
mov
jns
push
dec
arpl
dec
push
shr
or
ja
mov
(bad)
(bad)
jmp
pusha
cmc
adc
lods
clc
cmp
je
ja
outs
mov
mov
cli
cli
or
movs
stos
xchg
and
stc
pop
dec
dec
xchg
ins
cmc
aad
adc
push
addr16
(bad)
lock
pop
push
mov
adc
mov
jg
cmp
call
or
arpl
call
push
and
push
call
jno
push
xor
cdq
test
jns
adc
xor
stos
inc
inc
jae
mov
mov
add
and
sub
xchg
lock
jecxz
pop
push
mov
aam
sub
mov
pop
aam
jg
mov
jns
mov
sbb
icebp
mov
fwait
jl
es
lods
xor
and
cdq
mov
pop
push
je
iret
sub
movs
fs
xchg
pop
imul
test
fdivr
adc
xchg
mov
fwait
in
jbe
xchg
jns
fidiv
movs
test
cmps
repnz
je
in
add
aam
pop
popa
inc
leave
pushf
push
mov
into
mov
mov
and
test
out
bound
jb
push
pop
icebp
int
jne
in
ret
js
fucomi
lock
push
sub
xor
cmc
rcr
das
scas
gs
lea
pop
(bad)
and
into
shr
shl
gs
ss
lods
jno
inc
lods
leave
fsubr
repnz
mov
sub
not
xchg
xchg
jmp
or
jecxz
jmp
or
int
lahf
js
shr
dec
pop
dec
cld
mov
in
mov
lea
fnstcw
push
or
xchg
jecxz
dec
inc
fisttp
cwde
test
call
jge
jmp
push
mov
stos
lock
(bad)
cwde
neg
mov
sbb
ficomp
xchg
pop
or
les
icebp
jo
bound
push
data16
rol
adc
adc
retf
sub
push
aas
retf
push
cmp
mov
pop
scas
mov
repz
inc
cs
fsubr
sqrtps
pop
fs
or
xchg
ins
push
mov
es
push
(bad)
mov
sub
push
aas
xchg
jmp
ins
mov
(bad)
(bad)
ds
mov
pop
fsubr
in
arpl
cmp
imul
fist
mov
gs
enter
xor
aaa
mov
mov
xchg
jo
push
retf
push
mov
(bad)
les
mov
(bad)
lock
cmps
fnstsw
xchg
cmc
sahf
sar
dec
out
sub
or
inc
nop
and
icebp
int
neg
ins
in
dec
add
add
push
mov
push
cmc
push
push
(bad)
xor
ret
scas
aad
repz
sbb
lds
int3
or
dec
retf
nop
add
inc
outs
xchg
cmp
(bad)
push
mov
dec
push
cmp
sbb
push
inc
sbb
ins
jmp
ss
xor
mov
cmp
add
fimul
cdq
add
es
sub
adc
mov
ins
push
lea
adc
push
cwde
idiv
push
in
jo
inc
(bad)
cmc
cwde
(bad)
cmc
jmp
es
pop
in
xchg
ja
rcl
xchg
cmps
or
cmc
mov
mov
pop
aad
jle
add
mov
and
(bad)
fcomp
stos
and
(bad)
push
mov
cmp
xlat
push
xor
mov
adc
xor
xor
(bad)
jle
pusha
les
loopne
stos
inc
push
lahf
pop
pop
xchg
dec
sub
loop
pop
retf
ds
push
push
ins
jecxz
out
enter
popf
mov
pop
jmp
in
fst
xchg
inc
jmp
xchg
mov
leave
retf
xor
sbb
or
xchg
dec
push
mov
int
lahf
and
inc
xor
das
mov
stos
pop
jge
(bad)
stos
push
dec
adc
lahf
cmp
push
inc
pop
fmul
xor
mov
sbb
stos
mov
pop
lea
pusha
lods
pushf
mov
test
inc
inc
ret
nop
xchg
jo
dec
fs
jg
xor
data16
and
(bad)
xor
test
ret
nop
mov
into
push
enter
xor
inc
es
xchg
mov
fwait
or
aas
lds
pop
lahf
sub
fsubrp
mov
mov
push
fisub
aam
cmp
mov
(bad)
addr16
xor
ja
mov
sub
cs
nop
and
cmp
and
mov
add
lds
or
adc
call
push
pop
and
stos
push
clc
adc
pop
(bad)
sbb
jge
dec
or
jmp
and
cmp
push
or
sbb
jnp
cmp
arpl
loopne
ins
in
xchg
fimul
stos
lods
cmp
leave
sbb
cmc
aam
retf
xor
ins
xchg
(bad)
jle
pop
aam
dec
push
out
adc
es
dec
and
out
dec
sbb
ret
cmp
mov
cmp
rcr
div
dec
shr
mov
imul
cwde
mov
jmp
out
ficomp
xlat
aam
test
adc
jl
jl
nop
(bad)
xor
dec
in
xchg
enter
loope
jne
out
jns
xlat
sub
je
jo
jb
cmp
mov
jmp
aad
retf
xchg
jle
inc
(bad)
popa
outs
loop
aaa
outs
jp
jecxz
and
jp
mov
adc
push
mov
lds
mov
out
in
ins
sub
les
das
ret
push
push
xchg
add
jo
pop
lahf
and
dec
cmps
xchg
fistp
test
jmp
cmp
call
cmp
arpl
mov
loope
mov
(bad)
fs
mov
push
cwde
fwait
ret
cdq
ds
and
xor
in
lds
fwait
dec
nop
cs
pop
pop
jp
adc
push
or
lods
popf
mov
out
pop
xchg
test
mov
cmc
sar
repz
test
pop
xchg
ficom
and
pop
and
pop
mov
sub
ds
sub
xor
jmp
out
xchg
loop
fimul
outs
jg
(bad)
lods
imul
into
push
popa
inc
sub
jge
mov
mov
sbb
retf
sub
push
out
(bad)
mov
daa
scas
adc
mov
xchg
mov
xlat
mov
mov
ss
xchg
movs
mov
push
pop
cmp
xchg
call
mov
mov
dec
mov
jmp
into
(bad)
mov
fimul
push
fstp
push
or
pop
jmp
ins
ror
mov
adc
aam
loope
bound
dec
lods
adc
div
pusha
scas
fst
dec
in
movs
cdq
jmp
mov
loope
dec
add
sub
mov
out
and
sbb
(bad)
adc
ja
jne
retf
and
retf
xlat
lock
sub
sub
mov
jecxz
mov
shr
mov
in
fs
int3
sub
jmp
xchg
xchg
scas
mov
mov
int
jae
loop
lods
loop
pop
int3
xor
sbb
jns
dec
mov
xor
add
xor
call
and
xor
jns
sub
mov
loope
lds
jle
(bad)
pop
shl
vmptrld
hlt
hlt
mov
jmp
jmp
push
adc
mov
pushf
sub
xchg
test
add
mov
jp
je
hlt
cmp
cmp
mov
fwait
movs
stos
push
adc
and
(bad)
jno
and
push
into
shl
jp
sub
mov
imul
movs
les
pop
or
push
jne
adc
leave
push
xchg
das
add
cmp
retf
cmp
push
adc
jecxz
loop
mov
mov
bound
xchg
mov
mov
pop
sub
cmp
push
sbb
mov
or
ret
inc
mov
jge
retf
xor
or
int3
outs
sub
push
push
lods
hlt
scas
or
rcr
push
sub
pop
lods
cmps
clc
cmc
mov
inc
lock
push
and
std
mov
xchg
mov
cmp
xor
out
jmp
das
jne
jno
cmp
push
or
inc
mov
gs
mov
jle
jecxz
jo
push
adc
add
neg
aas
jp
adc
or
inc
pop
in
fwait
add
ds
xor
cmp
jae
sbb
jnp
xchg
xchg
retf
xchg
shl
mov
ds
or
in
jo
or
add
movs
shld
push
dec
test
in
jne
jno
std
dec
inc
pop
add
cwde
adc
fstp
(bad)
mov
xchg
jno
popa
adc
gs
pop
pusha
push
or
retf
adc
add
sub
arpl
sbb
hlt
add
xor
loopne
and
jg
fld
sahf
pop
loope
and
inc
pushf
add
loope
movs
inc
sbb
push
jp
sahf
mov
and
test
mov
idiv
loop
mov
lahf
daa
jle
sub
mov
imul
push
jmp
mov
sbb
jb
sub
aas
fadd
sub
lahf
mov
out
mov
jmp
test
jbe
jno
mov
sbb
xchg
lock
(bad)
mov
aad
sub
push
in
scas
jne
aaa
loopne
fisttp
sbb
call
test
inc
sub
movs
fistp
lea
pop
cmc
das
inc
test
daa
shr
inc
sub
or
test
loop
stos
aam
or
lds
les
cdq
or
mov
or
inc
inc
mov
xlat
cmp
push
push
inc
cmp
pop
jmp
and
in
or
push
inc
mov
in
xor
div
adc
enter
inc
mov
lds
cmps
push
ins
cwde
jnp
lods
add
jae
fstp
fnstenv
xor
jne
inc
icebp
sti
in
shl
fmul
dec
or
sbb
fs
sub
jge
(bad)
(bad)
iret
mov
inc
sbb
cmp
mov
cmp
cmp
jp
enter
add
and
add
repz
add
mov
pop
mov
cli
mov
or
outs
pop
dec
mov
push
and
mov
xor
mov
in
movs
and
mov
dec
mov
(bad)
in
int3
es
outs
pop
outs
inc
push
xor
mov
out
iret
stos
fnsave
dec
mov
jecxz
inc
adc
clc
pop
dec
mov
(bad)
sahf
es
or
ins
mov
cmps
inc
fmul
pop
jae
add
sbb
and
std
cmp
inc
retf
movs
mov
jl
mov
mov
sbb
or
cmp
or
in
aad
dec
adc
je
ret
leave
pop
pop
les
stc
sbb
repnz
push
daa
out
js
nop
jecxz
push
sub
sub
jp
sub
jbe
bound
push
enter
out
arpl
jp
xlat
cmp
cmp
push
rcl
push
jne
in
sahf
sbb
stos
pop
movs
dec
cdq
xchg
sub
popa
sbb
push
jnp
cs
push
mov
jmp
lds
jno
sub
(bad)
xlat
clc
scas
imul
in
lahf
je
push
xchg
jp
shl
in
xchg
out
out
repz
sbb
cld
fcmovne
lahf
jnp
adc
mov
jno
pop
ins
pop
mov
hlt
fsub
repz
jmp
push
fs
fs
jl
push
ror
(bad)
jge
fs
pop
in
jecxz
xchg
xor
lods
push
jp
lds
mov
ret
popf
dec
outs
gs
in
mov
es
ja
dec
push
add
ret
or
dec
cmps
lock
(bad)
loopne
mov
loop
int3
test
outs
mov
mov
mov
mov
pop
jb
and
(bad)
mul
add
dec
rcr
pop
(bad)
retf
add
stc
mov
arpl
pushf
jbe
jno
ja
popf
fcmovu
jg
lahf
xor
mov
jne
mov
dec
ins
clc
out
add
stos
ror
sub
ja
pop
rep
mov
loopne
into
mov
scas
shl
ret
xor
pop
xor
or
jo
sbb
loopne
imul
mov
xor
push
lahf
aad
imul
push
pop
mov
jo
mov
xchg
fcomp
cmps
jmp
add
push
popf
jmp
cmc
hlt
loop
scas
outs
cmc
add
add
cmp
faddp
iret
cmp
nop
iret
cmp
lahf
rcr
pop
cmp
pop
jno
mov
out
jmp
cli
stos
sbb
cmp
sub
cmp
cmp
sub
es
sub
lock
sub
imul
dec
(bad)
loopne
jp
push
(bad)
mov
cmps
push
mov
push
cmp
push
pop
mov
pop
dec
in
out
mov
test
sub
pop
jg
dec
out
addr16
jo
ret
push
icebp
pop
pop
stos
(bad)
div
jmp
into
retf
fcomp
in
fwait
jecxz
xchg
sti
in
mov
das
push
popf
jne
jnp
out
cmp
pop
iret
loop
cli
pop
push
out
aad
pushf
pop
mov
jo
cmp
inc
push
out
pop
push
out
int3
cmp
scas
in
pushf
pop
movntq
in
leave
xchg
into
inc
sub
scas
jmp
jno
lods
imul
into
scas
neg
jle
pop
fmul
xchg
add
dec
fisttp
push
loope
cmps
pusha
mov
loopne
shl
pop
mov
xor
adc
mov
cs
lea
mov
fidiv
movs
lods
push
cld
cmp
loop
(bad)
mov
daa
mov
jbe
sub
mov
and
pop
in
mov
fadd
jnp
pop
dec
sbb
add
(bad)
mov
mov
jb
cmps
(bad)
dec
push
cld
xlat
mov
cli
fcmovnbe
xlat
in
leave
sbb
or
lahf
sar
lds
mov
xchg
cmp
xchg
bound
mov
sbb
rol
mov
leave
mov
dec
(bad)
jmp
fcomip
sti
xchg
ror
xor
jl
aaa
sub
aaa
mov
push
fadd
clc
cmps
mov
ja
ret
jbe
mov
js
mov
stos
push
push
mov
shl
cmp
push
add
inc
push
fdiv
repnz
pop
and
not
push
mov
xchg
push
test
mov
arpl
dec
inc
jmp
xor
cmp
stos
repz
mov
(bad)
icebp
scas
scas
arpl
xchg
push
sub
movs
sub
cmp
call
push
dec
xchg
pop
fstp
adc
mov
push
pop
inc
xor
ror
sub
mov
push
aad
test
popa
aam
div
mov
cwde
add
inc
xor
fisub
cld
pop
inc
xchg
aad
adc
cdq
xchg
sub
push
jns
sbb
cs
lods
repnz
mov
jge
callw
sbb
lods
retf
mov
jge
sub
jne
jbe
sbb
xchg
xor
scas
jbe
push
mov
xor
imul
or
adc
jb
jne
call
jp
lds
xchg
mov
(bad)
addr16
pop
mov
mov
xchg
cmp
mov
stos
and
rcl
aas
ret
iret
cmp
fucom
rcl
and
mov
pop
mov
(bad)
mov
stos
jnp
mov
scas
add
lds
icebp
inc
je
(bad)
jl
mov
xchg
mov
ror
inc
push
push
arpl
jno
and
fwait
xchg
xchg
mov
push
into
loope
fld
jmp
scas
repnz
xchg
rcr
pop
ins
mov
pop
lahf
jb
(bad)
cmp
jne
out
shr
xor
int3
js
cmps
push
adc
mov
push
retf
das
cmps
sub
ficomp
adc
xor
ja
xchg
dec
imul
(bad)
jle
sbb
cld
ret
lods
sbb
inc
adc
js
cmps
into
jle
stos
shr
jp
mov
(bad)
lods
mov
outs
stos
js
sub
jl
xlat
push
std
dec
pop
jp
push
add
outs
pop
push
retf
jne
das
inc
inc
mov
mov
jns
test
cld
loope
or
(bad)
xor
jae
in
inc
mov
add
push
in
fnstenv
and
pop
adc
xchg
mov
mov
add
inc
nop
xor
ins
pop
push
scas
dec
ret
out
push
mov
push
jl
or
pop
in
xchg
int
mov
xchg
call
test
aas
mov
xor
jge
push
rcr
inc
cld
hlt
dec
and
enter
cld
mov
adc
or
shl
imul
das
push
retf
inc
pop
fld
into
push
xchg
loope
jae
adc
sahf
stc
or
adc
call
inc
int
jmp
pop
stc
inc
popf
xor
fdiv
xchg
cmp
or
mov
cmps
mov
cmp
stc
dec
push
jbe
scas
ds
popa
repz
mov
lds
out
in
ins
mov
mov
imul
add
sbb
mov
sbb
adc
sbb
and
popf
fstp
test
jbe
stos
cmp
cmp
cmps
sub
ss
add
push
lock
add
pop
push
mov
xor
loop
push
repnz
xchg
push
int3
lock
inc
push
stc
lahf
mul
out
test
imul
mov
and
imul
aam
aad
clc
push
mov
sub
adc
pop
loope
jle
mov
call
push
leave
fs
cdq
lock
jo
jae
jge
fwait
cmps
add
push
cmp
mov
es
inc
js
lds
cmps
fstp
pop
jecxz
(bad)
enter
btr
(bad)
outs
xchg
mov
les
ja
push
lahf
icebp
fwait
call
rol
sub
pop
(bad)
sub
daa
xor
xlat
dec
fdivr
popf
fild
repz
pushf
ja
rcl
daa
sbb
stos
xchg
mov
mov
and
enter
push
cmc
sbb
mov
dec
stos
cmp
mov
add
adc
retf
and
jno
and
xor
inc
in
jmp
mov
fadd
and
retf
cwde
cld
fistp
push
adc
popa
sub
inc
les
fstp
and
sahf
outs
mov
popa
jne
neg
shr
rep
or
daa
into
sbb
cmp
rcr
rdmsr
jmp
push
jl
cmp
jecxz
mov
xlat
fiadd
clc
cld
aaa
cld
adc
call
push
jl
cmp
lahf
dec
jmp
lock
scas
jo
pop
or
cmp
cmp
loope
stc
push
and
or
pop
xlat
add
les
retf
jmp
push
fs
aad
cmp
xor
add
add
dec
sti
push
or
dec
xor
scas
popa
lea
int3
out
xchg
sub
push
sbb
neg
pushf
jbe
aad
jmp
jnp
mov
call
pop
out
xor
adc
(bad)
and
or
fst
retf
jns
cmp
cmp
xor
sbb
mov
jae
lds
(bad)
enter
push
or
push
mov
outs
xor
xchg
push
outs
aas
jne
sub
cmp
ret
sub
sbb
mov
cwde
dec
mov
sub
daa
lea
jns
shl
call
pop
xlat
loop
pop
inc
outs
xchg
addr16
movs
or
cmps
enter
pop
inc
fnsave
jmp
(bad)
jns
jae
retf
mov
jbe
xlat
shl
stos
(bad)
jecxz
js
or
mov
inc
and
pop
leave
push
test
and
xor
cmps
(bad)
in
call
iret
je
imul
dec
push
(bad)
push
idiv
inc
fmul
cli
sub
inc
dec
retw
fist
fidiv
(bad)
out
cld
loope
std
mov
xchg
adc
inc
mov
lds
and
cmps
xor
mov
mov
push
aaa
push
repz
jno
jle
push
cld
push
xor
push
inc
vstmxcsr
jno
stos
push
popf
pop
and
loop
cmp
repz
fldenv
shr
xchg
jge
pop
data16
push
test
test
fadd
imul
jmp
push
out
inc
pop
lods
sub
inc
sbb
cmp
pop
push
adc
je
cwde
and
push
pop
in
push
lds
outs
(bad)
out
pop
jmp
fidiv
dec
cmc
paddusb
xchg
cmp
push
repz
sbb
mov
jl
mov
sti
leave
xchg
in
xchg
outs
inc
out
inc
into
js
scas
shl
xchg
push
xlat
push
lods
fdivr
out
xchg
cmc
addr16
dec
repz
mov
pop
(bad)
iret
lahf
add
into
xor
push
xchg
shl
mov
ins
pushf
leave
stc
push
jge
out
popf
sub
fnstcw
cmc
fdivr
sar
mov
xchg
inc
sbb
mov
mov
push
xchg
popa
mov
out
push
in
clc
pop
mov
out
sti
pop
mov
xlat
fisttp
mov
pop
mov
add
pop
mov
jl
mov
leave
sti
add
aaa
cwde
retf
(bad)
mul
mov
test
sub
out
fistp
push
jae
cmp
push
pop
stos
int3
fimul
iret
daa
inc
sub
sar
movs
cld
(bad)
xchg
int3
and
and
imul
push
mov
mov
push
in
lods
scas
lods
push
adc
retf
je
cmc
pushf
and
in
dec
jle
xchg
push
sub
cmc
mov
xor
jbe
xchg
jns
pop
mov
jno
mov
sub
scas
fptan
rol
inc
xchg
and
jle
mov
je
mov
and
mov
fsubr
jne
jp
pop
lea
push
fdiv
lea
or
fsin
xor
loopne
push
sub
push
aam
adc
adc
(bad)
push
leave
daa
lods
aad
xchg
ss
xchg
jnp
dec
aad
je
mov
test
lea
mov
xor
fdivr
inc
not
sub
xchg
sbb
xor
lods
cmp
xchg
mov
adc
mov
call
sub
loope
cmp
ds
into
add
test
push
addr16
fucomip
in
pop
mov
jmp
or
dec
jae
loopne
push
mov
sub
mov
icebp
xchg
mov
call
out
fdiv
pop
cs
adc
(bad)
mov
sar
aad
fiadd
adc
dec
fcom
(bad)
adc
xor
stos
xchg
jle
add
jnp
dec
jnp
aaa
and
fidivr
xchg
sub
das
call
cmp
fisttp
xchg
jmp
mov
xor
movs
mov
imul
sub
cmp
push
push
pop
pop
das
call
dec
outs
cmp
test
push
push
sti
push
sub
pop
pusha
push
or
push
jecxz
xor
ins
mov
imul
vmread
push
test
mov
mov
call
xor
mov
aam
mov
adc
dec
mov
retf
xchg
inc
push
ror
retf
sub
add
add
jo
jecxz
adc
aaa
jmp
test
mov
push
push
stos
mov
jp
fldenv
ud1
cld
fild
(bad)
adc
jb
in
mov
mov
mov
jge
ins
jmp
outs
mov
push
fcmovbe
addr16
ins
jmp
fild
cli
scas
out
mov
mov
shl
(bad)
pop
jge
ins
jmp
cpuid
ins
jge
es
ins
inc
fstp
(bad)
lds
mov
jecxz
enter
fld
imul
mov
cmp
push
out
stos
pop
mov
jns
adc
scas
pop
xchg
repnz
div
es
jns
jnp
push
pushf
(bad)
pop
(bad)
adc
loop
push
lds
adc
vpmullw
jnp
and
mov
push
pushf
or
in
pop
jno
jl
push
pushf
repnz
jno
mov
out
(bad)
dec
(bad)
push
inc
pop
hlt
loope
cdq
mov
jnp
mov
jmp
mov
push
lods
xchg
fisubr
rol
mov
jno
jecxz
pop
(bad)
sti
lock
cmp
movs
cdq
ror
into
pop
test
dec
mov
retf
ds
mov
fst
inc
lds
sti
(bad)
popa
cmc
inc
popf
or
cmp
fld
fdivrp
loope
loop
mov
stc
rcr
out
jbe
push
fnsave
fsubp
call
push
mul
jg
mov
arpl
imul
jnp
jbe
mov
or
mov
cmc
in
inc
push
xchg
inc
xor
cmps
(bad)
in
mov
dec
jne
xchg
sub
mov
jnp
xchg
and
rcr
adc
inc
lahf
fdiv
div
fs
je
lahf
jg
ror
iret
std
ja
out
jge
inc
push
fld
out
cdq
imul
es
out
mov
mov
das
push
jbe
mov
idiv
sti
adc
mov
cmps
jmp
jmp
scas
pop
xor
add
movs
push
push
inc
out
jmp
or
out
mov
pop
inc
test
icebp
es
and
sbb
adc
ret
sbb
xor
push
push
fnsave
(bad)
scas
aas
icebp
loopne
mov
cmps
or
loop
pop
sti
sbb
popf
and
test
cmp
mov
jmp
inc
push
cmp
mov
cmp
iret
add
mov
mov
jno
retf
retf
in
sub
or
lods
movs
call
add
xchg
fcmovnbe
xor
out
call
cmp
xor
fistp
cmp
iret
loopne
pop
shl
js
aas
shl
clc
aam
shl
mov
jp
cmps
popf
push
cmps
jno
retf
push
je
xchg
xchg
xchg
std
and
frstor
xchg
(bad)
(bad)
push
mov
adc
mov
ins
xchg
jp
call
ret
mov
xor
pop
fxch
icebp
hlt
lock
test
stos
push
cmps
or
pop
movs
sub
xchg
shr
imul
outs
jne
sbb
popf
mov
jecxz
shl
dec
jp
xor
sub
popa
lods
mov
shl
mov
mov
stc
call
jmp
pusha
pop
dec
pop
pushf
loop
popa
sbb
sti
mov
mov
ret
inc
dec
and
and
jns
cmp
js
inc
popa
cmp
icebp
lock
xor
hlt
sbb
arpl
and
mov
pop
out
adc
jne
sub
push
sahf
aam
cld
jp
lds
xor
or
pop
scas
push
push
in
ins
xor
out
cmps
xchg
mov
cmps
push
out
mov
or
inc
cmp
xchg
adc
iret
scas
mov
neg
jo
repnz
mov
arpl
mov
mov
stos
pop
mov
into
push
jne
hlt
(bad)
mov
pop
or
shr
jns
pop
and
cmp
es
add
int
cmp
sahf
push
sub
mov
xor
(bad)
sti
pop
cs
jmp
mov
xchg
push
rol
leave
push
lds
jmp
xchg
retf
pushf
or
fstp
lods
pop
jl
mov
adc
out
push
pushf
mov
repnz
int
push
iret
fcomp
inc
jg
push
aas
shl
std
xchg
push
xchg
push
inc
pop
push
jnp
inc
call
ins
(bad)
sahf
mov
jmp
mov
cmp
sub
push
mov
leave
add
arpl
loop
jns
xchg
sbb
mov
addr16
jne
fld
jb
icebp
into
(bad)
jg
ds
push
mov
sub
ds
imul
push
fsubr
jp
mov
mov
adc
addr16
movs
mov
push
ins
mov
sbb
ins
popa
(bad)
and
gs
sub
xor
cwde
iret
stos
mov
imul
call
pop
adc
lods
jo
sub
push
dec
or
out
mov
lock
mov
into
lods
mov
xchg
and
call
mov
mul
xor
sub
sub
or
daa
and
sub
pop
cmp
jp
pop
in
and
cmc
jne
imul
mov
and
(bad)
movs
aad
mov
pop
and
inc
jmp
test
mov
movs
enter
dec
shl
xchg
xchg
jbe
adc
ret
fadd
dec
cwde
ins
mov
test
daa
mov
inc
out
cmp
jmp
in
mov
xchg
xlat
in
dec
xor
push
push
push
mov
inc
std
sbb
dec
mov
push
cmp
pop
mov
push
cmc
xchg
inc
mov
(bad)
dec
enter
(bad)
jp
dec
imul
inc
test
or
stos
lods
aam
enter
xchg
xchg
test
mov
call
cmp
pop
adc
jns
jle
mov
leave
arpl
push
stos
stc
jp
cmp
mov
icebp
jp
call
stos
xlat
imul
mov
imul
call
out
repz
pop
(bad)
loopne
popf
mov
idiv
sbb
xor
adc
inc
push
add
push
push
mov
xor
idiv
sub
mov
xchg
jnp
xchg
mov
inc
mov
pop
push
fucomip
cld
push
mov
mov
mov
jmp
outs
imul
fsub
jno
fwait
jg
lods
or
mov
out
lods
sbb
fiadd
lods
stc
pusha
sbb
movq
test
xor
jne
push
xchg
rol
jecxz
sub
xchg
pop
aad
shl
aad
pop
movs
ret
fisttp
add
inc
cdq
imul
pushf
jnp
and
out
mov
jg
mov
cli
fcmovnb
jecxz
je
movs
adc
(bad)
out
mov
xor
int3
call
(bad)
ds
xor
push
aaa
cmps
mov
add
lods
in
cmp
sbb
push
adc
adc
lods
adc
xor
adc
inc
pmovmskb
cmps
mov
ret
inc
xchg
js
push
aam
push
or
mov
cmp
arpl
sub
dec
movs
push
js
pop
mov
std
lods
cdq
sbb
ss
push
gs
pushf
lods
inc
shl
test
cmp
je
das
and
mov
dec
mov
adc
adc
mov
pop
push
mov
(bad)
lahf
mov
pop
lahf
adc
pop
xchg
dec
int
dec
ins
jbe
lds
cmc
pop
(bad)
clc
out
sbb
ds
ins
jge
rcl
pusha
lods
or
sub
sti
(bad)
jns
and
mov
loopne
xchg
sbb
sbb
test
mov
dec
xchg
dec
mov
xor
sbb
outs
pusha
mov
mov
scas
mov
pop
int3
jae
sub
jl
and
mov
sub
fst
push
jbe
sbb
cmps
jbe
int
cdq
cmp
test
lods
shl
sbb
retf
push
clc
cmp
or
add
adc
xchg
and
in
lahf
test
mov
and
fstp
test
push
dec
push
mov
jmp
out
sub
xchg
jb
xchg
aam
push
push
push
mov
daa
fbld
sahf
mov
mov
outs
cdq
dec
sub
mov
jmp
lea
sub
sbb
xor
loop
icebp
mov
cmp
xor
sbb
retf
push
mov
test
repz
jp
sbb
nop
push
dec
(bad)
cmp
ret
jp
int
mov
hlt
test
call
(bad)
jnp
inc
xchg
aas
scas
push
sbb
ret
les
or
shl
aaa
sub
mov
sub
(bad)
push
pop
sub
push
or
and
rcl
lods
or
mov
lods
inc
ss
cmp
mov
popf
mov
jp
sbb
pop
out
lea
jmp
ret
test
bound
xor
mov
adc
sbb
inc
mov
test
out
(bad)
int3
sbb
clc
sbb
push
push
movs
push
jae
lods
pushf
xchg
xor
es
and
inc
mov
xlat
js
cld
(bad)
mov
popa
(bad)
addr16
in
cmps
xor
daa
gs
sbb
fild
jg
mov
iret
int
(bad)
adc
jne
shl
mov
aaa
pop
repz
outs
ss
(bad)
in
mov
mov
push
mov
pop
xchg
mov
inc
fldcw
fidiv
test
and
int3
fs
and
retf
cmp
inc
notrack
adc
push
mov
pop
push
cmp
addr16
repnz
movs
add
push
test
adc
std
(bad)
gs
cmp
push
mov
jnp
mov
pop
jmp
(bad)
jns
test
sti
js
mov
push
jmp
inc
mov
cld
dec
je
mov
cmp
xchg
shr
test
cmp
mov
clc
inc
cli
and
es
movs
into
call
cmp
scas
aad
scas
mov
call
addr16
out
pop
pop
cmp
into
aad
icebp
pop
jl
jo
jmp
adc
cdq
(bad)
dec
out
mov
mov
(bad)
jns
loope
sub
repz
cld
dec
ror
mov
psubb
loope
dec
call
test
icebp
jg
fdiv
pop
jb
or
sub
jne
movs
xchg
mov
movs
js
cmp
add
repz
mov
pop
sub
sahf
push
retf
rcl
lahf
sbb
pop
call
push
test
dec
test
fstp
std
in
push
push
dec
pop
(bad)
dec
mov
iret
push
xor
dec
arpl
cs
test
ja
bound
into
fadd
inc
mov
out
imul
dec
rcl
sbb
mov
adc
xlat
inc
scas
push
xchg
ret
or
hlt
push
js
rol
fsub
push
push
push
jge
movs
call
xor
add
adc
adc
sbb
xchg
les
adc
inc
es
test
push
mov
(bad)
neg
stos
cwde
sub
adc
sahf
in
(bad)
test
pop
lds
jnp
xor
pop
push
or
push
sbb
mov
dec
jecxz
mov
out
test
xor
jno
ficom
push
pop
mov
lahf
push
repz
sar
sbb
daa
test
fisubr
cmp
sub
out
lods
mov
hlt
and
push
cmp
mov
push
scas
push
dec
xor
out
int3
ds
scas
out
mov
rcr
mov
movs
xor
cmp
aad
fwait
lods
js
stc
scas
jle
jnp
dec
pop
stc
mov
pop
stos
test
jnp
jecxz
mov
jnp
add
mov
cli
jecxz
cmp
pop
pop
jno
sub
out
or
pushf
mov
xlat
(bad)
cmp
retf
pusha
sbb
xor
and
iret
xchg
push
xor
out
adc
jbe
push
pop
sub
ficom
dec
cmp
and
add
xchg
jmp
mov
or
out
jge
xor
(bad)
aam
dec
xor
hlt
loope
jno
dec
xchg
mov
popa
ds
or
in
arpl
lahf
ins
popa
mov
mov
sub
mov
xor
mov
aam
aam
repz
stc
sub
ret
and
jge
sbb
push
imul
push
xchg
lea
mov
pop
dec
repz
mov
jge
mov
push
stc
and
pop
aaa
inc
in
and
cmp
movs
movs
sub
dec
in
rcr
jo
mov
lahf
dec
std
add
mov
xlat
enter
xchg
movs
movs
inc
cs
sub
or
pop
pop
xchg
mov
cmc
in
cmps
mov
stos
sub
imul
test
lahf
outs
rcr
cmp
push
les
lods
xchg
push
fs
scas
jle
sbb
leave
std
push
dec
and
jmp
bound
pop
lock
or
fsub
xchg
push
mov
xchg
pop
mov
fs
jle
mov
and
repnz
xchg
fldcw
jl
rcl
test
jne
movs
jge
push
pop
or
into
mov
ins
jbe
jo
jne
cmp
pushf
aas
cmp
dec
jo
push
(bad)
into
jp
pop
in
pushf
sbb
xchg
sti
(bad)
xchg
push
cmp
mov
xor
stos
sub
mov
mov
jns
out
dec
cmps
jbe
shl
or
pop
popf
mov
scas
scas
pop
pop
jecxz
pop
fnsave
je
call
enter
mov
cmp
mov
pop
cmp
das
fdiv
sar
sahf
pop
inc
call
(bad)
call
xor
and
arpl
imul
inc
jne
out
jmp
(bad)
cmc
movnti
cli
test
loopne
test
jge
jl
pop
mov
retf
sar
out
mov
pop
popf
stos
jecxz
hlt
jo
sti
xchg
pop
cld
mov
lods
mov
lods
xlat
sub
sub
aaa
push
jle
pushf
cmp
cmc
or
cmp
and
mov
dec
push
mov
or
imul
inc
pop
stc
je
ins
push
xor
out
adc
push
iret
mov
sub
ret
jae
adc
scas
icebp
clc
pop
mov
scas
lds
or
jae
xor
push
jmp
data16
outs
cmps
arpl
or
xchg
jno
not
cmp
pop
(bad)
scas
push
dec
cwde
(bad)
and
cwde
jmp
cmp
sar
test
out
test
adc
out
mov
xor
pushf
mov
xor
push
cmp
mov
pop
or
stos
jns
push
sbb
bound
xor
inc
push
xor
shl
cwde
xchg
in
test
adc
inc
dec
jmp
lods
movs
mov
push
loope
movs
outs
mov
pop
(bad)
sti
call
xchg
inc
jmp
push
pop
movntq
or
loopne
div
mov
test
xor
push
pushf
(bad)
and
adc
sbb
mov
push
shl
scas
jecxz
sub
sbb
stc
xchg
dec
test
shl
sbb
in
xchg
mov
dec
adc
(bad)
mov
dec
push
mov
pop
pushf
pop
ret
jnp
or
data16
pop
mov
fidivr
aas
lds
rcr
int
sub
sub
add
stc
icebp
loopne
ds
mov
test
mov
div
pop
pop
retf
lods
call
push
bound
mov
fwait
pop
clc
popf
push
cmp
shr
dec
pop
cmp
cmp
sbb
rcl
sbb
jno
pop
jmp
das
movs
pop
(bad)
mov
push
enter
push
mov
mov
lock
mov
dec
dec
or
out
ins
pop
aas
add
in
das
jle
mov
in
out
std
dec
(bad)
cli
out
out
push
jo
iret
mov
push
sar
in
jns
lods
shl
mov
mov
mov
inc
dec
loope
clc
jmp
pop
nop
xor
pop
jmp
mov
mov
mov
pop
adc
popf
mov
mov
push
pop
test
adc
addr16
add
test
jbe
xchg
jae
mov
inc
out
add
jge
push
mov
movs
sbb
xchg
and
in
test
mov
push
xor
call
sub
out
arpl
das
fist
mov
(bad)
sti
lea
jecxz
call
jmp
or
sbb
js
clc
rol
adc
fisubr
clc
inc
les
inc
sbb
(bad)
push
mov
out
ins
xchg
dec
aad
ds
bound
ins
mov
mov
(bad)
call
sbb
in
aas
das
xor
xor
pushf
(bad)
or
or
sbb
mov
int3
mov
or
retf
or
outs
xor
movs
mov
rol
fisttp
aam
jae
mov
sbb
daa
mov
call
xor
push
cwde
in
loop
test
xchg
jae
fidivr
outs
int
fcmovbe
lea
test
jbe
dec
adc
retf
loope
ret
fstp
test
ror
icebp
call
xlat
jo
cmps
xchg
(bad)
jmp
dec
mov
out
adc
push
sbb
out
data16
jecxz
jno
retf
push
je
or
pop
out
sub
xchg
fnsave
cli
cli
fild
xor
push
out
push
and
mov
sub
out
sbb
lods
pop
jecxz
sub
xor
(bad)
pop
xor
push
jge
pop
sub
out
scas
loope
push
pusha
push
push
in
sbb
fmulp
adc
pop
xchg
jnp
ret
bound
je
jb
push
fwait
dec
xor
and
xchg
push
add
push
lea
repz
pusha
or
push
ror
push
adc
xor
xor
je
fisttp
bound
jl
mov
mov
adc
push
nop
pop
aam
(bad)
push
das
fld
ret
jge
iret
push
and
sbb
mov
add
jbe
test
out
call
xor
(bad)
pushf
fidivr
mov
mov
cmp
ror
mov
jne
ja
test
dec
es
cmp
sub
dec
ja
arpl
(bad)
adc
jbe
retf
pop
mov
je
xor
jge
bound
les
mov
fbld
add
stos
out
out
push
and
ficom
mov
xor
or
xor
mov
shl
js
pusha
push
inc
cmps
in
cld
sbb
pop
ins
inc
xor
or
test
int3
into
push
fmul
stos
pop
fsub
jle
mov
stos
adc
push
or
add
lods
stos
lds
test
adc
repnz
sub
js
leave
repnz
(bad)
shr
jnp
call
mov
shl
xor
jns
and
push
hlt
int3
xor
out
pop
jmp
pop
out
add
cmps
cmp
push
arpl
fidiv
cmp
inc
clc
adc
sti
adc
pop
xchg
push
fdivr
imul
leave
outs
sub
data16
in
mov
dec
push
in
jnp
mov
call
in
ror
mov
inc
add
xchg
jb
shr
sub
push
not
int3
jge
test
aaa
sti
stc
jmp
neg
js
cld
xor
out
out
aas
pop
loopne
mov
cwde
fldcw
pop
push
or
sbb
dec
or
imul
scas
fidivr
icebp
or
fistp
push
sub
bound
dec
mov
push
(bad)
mov
mov
pop
rol
adc
retf
push
mov
jns
xchg
icebp
mov
mov
popf
(bad)
cld
jb
sbb
cdq
outs
lahf
mov
push
out
and
pusha
aas
jmp
pop
jnp
or
sti
and
cmp
div
enter
repz
sub
(bad)
mov
and
mov
dec
mov
fsubr
int
aad
cmp
sahf
dec
out
gs
cmc
mov
xlat
rcl
clc
in
xlat
cmp
xchg
ss
fst
not
repz
ins
imul
mov
pop
dec
mov
lea
call
es
adc
cld
test
dec
pop
lock
fs
div
popa
int3
dec
call
sahf
xchg
inc
mov
push
stos
iret
pop
pop
(bad)
lods
ds
jle
jne
pop
sti
jge
icebp
cs
iret
retf
repz
out
(bad)
xlat
in
pop
repz
out
xor
pop
cmp
cli
fst
mov
xlat
ficomp
ja
sub
mov
pop
push
fstp
sbb
out
hlt
or
add
das
icebp
lds
aas
leave
in
aad
inc
scas
imul
mov
out
pusha
push
call
fisttp
nop
sbb
sub
push
into
dec
jle
cld
cmp
aas
xchg
lods
mov
mov
imul
sub
rcl
stc
fs
add
in
outs
sub
mov
out
pop
jmp
in
inc
push
sbb
bound
inc
scas
push
or
fistp
icebp
bound
jns
daa
es
cdq
lds
shl
inc
out
inc
mov
enter
sub
test
jmp
retf
(bad)
cmp
cmp
std
cmp
sti
div
push
mov
jnp
jmp
mov
lods
sbb
jae
push
mov
or
aam
cmp
sub
dec
in
sub
xor
setae
xchg
test
pusha
push
movs
cdq
stc
inc
shr
adc
xor
push
xchg
iret
xchg
pop
sbb
adc
fistp
lahf
rcr
clc
or
je
out
sub
repz
and
adc
test
test
sbb
pop
push
sub
jbe
mov
jle
push
sub
cwde
xchg
xor
outs
sti
push
sbb
push
ror
mov
sar
xor
(bad)
iret
sti
fs
cmp
adc
int
xchg
mov
xor
in
scas
ins
jno
pop
xor
mov
in
xor
or
fs
push
cmps
scas
push
dec
pop
popa
dec
jns
fidiv
push
adc
xchg
mov
fimul
shl
sbb
cmp
ror
fnstenv
mov
inc
adc
mov
in
xor
scas
test
fisubr
rcr
dec
call
mov
(bad)
adc
sbb
jmp
xchg
add
repz
jl
or
rcr
mov
mov
popf
popf
into
ins
into
mov
popf
out
pop
pushf
xlat
popf
lahf
mov
out
scas
fmul
out
xchg
jnp
outs
out
stos
sti
pop
icebp
mov
sbb
test
stc
shl
push
sub
out
xlat
into
cs
mov
addr16
int
fucomi
jbe
add
sti
or
mul
xor
loope
clc
cmp
(bad)
in
fsubr
jl
nop
sub
or
jbe
push
mov
outs
pop
in
cmp
shl
pop
ss
fwait
jae
jnp
jge
or
ret
std
nop
xchg
add
mov
(bad)
cmp
sub
scas
ss
in
add
shl
pop
into
xchg
pushf
push
pop
ja
dec
mov
addr16
cmc
pop
pushf
mov
aas
in
jmp
call
pop
cmp
xor
xchg
push
leave
call
neg
dec
mov
pop
mov
lods
or
scas
mov
push
cmovne
outs
pop
mov
loopne
or
mov
or
pop
sbb
(bad)
adc
rcl
jmp
dec
out
jge
mov
out
xor
push
pop
jae
data16
mov
adc
imul
ins
push
lea
sbb
and
pusha
fsave
sub
popa
test
jmp
cmps
cmp
(bad)
popa
loope
jmp
rcl
mov
mov
add
mov
test
cli
cmp
in
das
out
xchg
adc
dec
pop
ret
outs
ins
(bad)
out
lods
retf
jg
or
retf
cmp
fnsave
jg
out
add
inc
loopne
ss
xor
fimul
movs
(bad)
jnp
jmp
jmp
pop
jg
scas
add
jl
lds
int
bnd
sbb
jae
xor
mov
mov
call
mov
inc
push
pop
mov
xchg
jmp
dec
mov
in
add
mov
sbb
push
iret
inc
add
dec
addr16
sar
fsubr
popf
out
out
inc
xor
std
jg
mov
loopne
cmps
and
push
xlat
and
je
iret
call
not
jb
mov
mov
fsub
xchg
mov
int
test
jmp
(bad)
pop
or
into
mov
gs
jo
repnz
fmul
jmp
addr16
xor
push
daa
es
test
mov
aas
fwait
das
fadd
loop
leave
cmp
out
enter
fimul
loop
ficom
xchg
bnd
and
test
jmp
loope
leave
int3
push
mov
shl
push
sbb
(bad)
mov
(bad)
fwait
jg
cmp
rol
stos
and
sub
test
(bad)
add
(bad)
out
cmp
xchg
fnstsw
jae
rol
jnp
iret
stos
out
stos
(bad)
lahf
das
fbstp
xor
jmp
jmp
fsub
in
int
test
lahf
pop
mov
cmp
pop
adc
jecxz
add
ret
mov
into
hlt
lods
xor
scas
call
outs
into
cmp
data16
ds
jno
jmp
sbb
loop
adc
imul
adc
sahf
jp
sbb
out
jns
iret
ins
pop
pop
pusha
push
jmp
loop
out
inc
mov
in
xchg
add
in
fs
or
adc
sub
mov
mov
xor
fdivrp
add
sahf
jmp
sub
sub
sti
mov
test
mov
mov
cmp
loope
test
xchg
test
fidiv
jns
arpl
xor
jg
mov
retf
jno
in
mov
inc
mov
jmp
inc
stc
neg
shl
inc
or
sbb
mov
scas
mov
lods
sbb
enter
pop
sbb
icebp
inc
mov
xchg
fs
das
inc
push
cmps
xlat
lock
sbb
sbb
sub
out
lock
pop
sbb
bound
lahf
xchg
rcl
stos
cwde
(bad)
in
test
ret
mov
mov
mov
adc
mov
call
cmp
lock
sub
sub
stos
sbb
ins
push
push
fild
jmp
in
inc
int
cmp
ret
sti
shl
xchg
lea
push
push
(bad)
push
dec
xchg
repz
cmc
mov
fnstsw
push
push
push
adc
mov
push
inc
lods
dec
mov
out
sahf
movs
dec
mov
sahf
xchg
push
mov
pop
add
mov
cmps
das
mov
adc
xchg
jae
daa
mov
xor
rcr
aas
push
and
mov
dec
jmp
and
adc
call
in
adc
dec
stos
fadd
popa
push
ret
inc
scas
mov
jo
inc
mov
pushf
sub
xor
adc
jbe
adc
xchg
das
adc
movs
cmp
xlat
popf
loope
push
cmp
movs
cwde
jb
mov
mov
pop
bound
xor
and
jns
dec
cmp
(bad)
es
inc
test
adc
xchg
call
loope
stos
fimul
into
imul
sbb
out
retf
test
(bad)
hlt
lahf
inc
mov
lods
mov
scas
mov
pop
push
xor
sub
ja
pop
pop
nop
fmul
addr16
adc
adc
out
outs
ret
ins
cmp
jp
mov
test
pushf
pop
mov
mov
es
lahf
xchg
mov
and
mov
push
lods
ror
call
stos
repz
mov
push
test
cli
cmp
xchg
pop
(bad)
test
pop
sub
sub
mov
sub
sub
mov
rcr
mov
stc
or
sbb
fstp
or
push
(bad)
and
xor
add
jmp
jecxz
repnz
jmp
mov
dec
push
sbb
add
scas
imul
add
pop
pushf
test
mov
mov
mov
xchg
add
out
mov
pop
sbb
jle
adc
adc
fimul
xchg
sub
lahf
sbb
xor
(bad)
addr16
(bad)
jecxz
out
hlt
jno
scas
cld
test
jle
int3
cli
jae
enter
call
pop
xchg
(bad)
ds
cmps
lock
lahf
outs
mov
mov
cli
jecxz
sub
fwait
jg
jmp
out
fild
inc
je
mov
pop
mul
fwait
ds
call
jno
cmps
mov
shl
or
xchg
pop
mov
mov
pop
icebp
jmp
rol
and
mov
icebp
jmp
xchg
push
inc
ss
call
cmps
sbb
ins
lock
bound
rcr
fsub
pop
(bad)
adc
cld
sbb
cmove
scas
mov
adc
cmp
dec
lods
lock
adc
jl
sbb
mov
iret
dec
and
test
mov
inc
pushf
mov
mov
adc
adc
ins
lods
lods
or
loope
xchg
ror
sti
iret
cs
(bad)
(bad)
pop
mov
jle
loope
inc
(bad)
out
mov
clc
fadd
outs
push
dec
out
in
mov
(bad)
loop
cmps
sbb
jo
(bad)
xor
or
pop
pop
jecxz
stos
dec
nop
fs
adc
test
pusha
and
mov
pop
push
sbb
add
popa
shl
add
in
in
mov
stos
sub
jbe
in
xlat
adc
mov
es
daa
sub
sub
je
jl
popf
ins
mov
inc
ja
cmp
xchg
mov
ins
sub
mov
jmp
cmp
bound
data16
dec
or
jb
mov
imul
inc
dec
jmp
ret
jle
jbe
mov
jl
mov
mov
retf
std
jnp
mov
and
(bad)
int3
xor
(bad)
sbb
aas
xchg
xor
movs
vpaddq
hlt
pop
scas
pop
pushf
(bad)
loop
movs
repz
pop
nop
arpl
out
mov
xor
xlat
push
xchg
mov
(bad)
push
stos
pop
push
xor
retf
sub
imul
sub
cld
jmp
add
mov
push
pop
sub
push
dec
sbb
cmps
(bad)
xchg
ja
and
cli
and
imul
cmps
pop
dec
pop
inc
adc
fmul
xlat
cmps
and
aas
int
mov
lods
inc
pop
mov
adc
adc
jl
xor
aam
or
aaa
fisubr
push
adc
mov
arpl
mov
es
out
dec
in
out
mov
sti
sahf
popa
mov
call
jns
leave
sbb
scas
iret
sub
xor
jge
sbb
sub
cli
push
test
cmp
scas
pop
data16
int
aam
inc
push
int3
mov
fs
push
push
sbb
popa
mov
popf
into
sbb
add
or
nop
mov
popa
push
je
in
dec
jno
mov
mov
cmp
dec
or
ss
mov
fcom
in
push
inc
push
loopne
xchg
push
mov
pop
cdq
ins
ins
adc
mov
push
aad
cmps
ficom
add
int3
mov
jmp
xchg
in
dec
lds
sub
mov
mov
adc
in
push
sbb
and
sub
int3
cs
lds
mov
(bad)
or
pop
(bad)
push
add
out
mov
ja
ds
mov
cmps
xor
sar
mov
mov
test
xchg
push
mov
or
stos
xchg
xchg
retfw
cmp
cmps
repz
lahf
rcr
push
adc
xchg
cwde
mov
cmp
pop
push
stc
mov
ins
into
push
mov
sbb
aaa
int3
xlat
addr16
je
sub
lahf
ret
sti
push
push
in
mov
mov
sbb
aad
mov
fild
ret
jmp
sti
mov
jns
ret
out
test
cmp
mov
xlat
sbb
aaa
add
jmp
aas
pop
mov
pop
xor
test
cld
and
pop
mov
(bad)
cld
sbb
out
jle
sahf
loope
mov
and
mov
xchg
cli
sub
into
jo
icebp
je
adc
fnsave
inc
mov
cdq
loop
mov
mov
enter
in
js
imul
inc
xchg
or
xchg
call
inc
jo
lock
cmp
or
pop
loop
sub
jp
lds
adc
mov
jmp
xchg
mov
lds
mov
mov
jmp
movs
mov
call
aas
jmp
jecxz
aad
sar
cwde
push
push
js
out
out
push
sub
cmps
inc
cdq
loope
mov
xchg
or
mov
scas
fsub
sbb
mov
xor
dec
test
mov
cmp
scas
outs
xchg
sahf
xor
js
shr
add
fldpi
dec
xor
pop
adc
fs
cmp
jae
arpl
fidivr
ucomiss
lea
push
or
lods
add
pushf
nop
sub
bound
sub
sbb
loopne
mov
shr
push
adc
enter
sub
(bad)
or
pop
test
sub
and
sbb
fcom
pop
mov
add
in
loope
sbb
pop
inc
inc
test
pop
mov
and
inc
test
scas
dec
imul
adc
imul
xor
push
xchg
ins
cmp
cs
jge
sahf
jmp
cmp
call
fisubr
repz
je
and
into
or
jecxz
inc
mov
retf
ins
int
int
sub
pop
stos
(bad)
sbb
mov
push
jne
cli
add
jbe
pop
sub
cmp
shl
jno
bound
pop
dec
mov
dec
jb
xchg
sub
jno
mov
jg
sbb
test
cmps
xor
imul
test
ins
adc
data16
inc
ins
in
adc
xor
push
or
sub
into
bound
ss
push
mov
in
push
lea
fstp
sbb
add
data16
jmp
sub
jmp
mov
mov
xor
out
fmul
outs
ds
cmp
pxor
in
sbb
push
ds
pop
hlt
enter
movs
pop
push
lock
mov
sar
in
push
sub
mov
pop
(bad)
pop
xor
aad
adc
mov
repnz
stos
push
fucomp
test
aas
mov
mov
pop
pop
or
pop
dec
cli
add
loop
sub
pop
jb
mov
das
ins
dec
and
pop
adc
jno
lahf
ret
fiadd
in
fidivr
mov
mov
ins
sub
(bad)
cmps
adc
fidiv
iret
es
mov
push
sahf
inc
mov
movs
int
push
jge
ins
inc
mov
sahf
inc
mov
push
out
mov
mov
lahf
dec
mov
add
adc
mov
mov
cs
mov
ja
(bad)
stc
push
pop
xchg
jl
mov
pop
push
test
jnp
mov
leave
mov
cmp
mov
mov
imul
mov
mov
xor
pusha
sbb
sar
or
xchg
mov
stos
lahf
inc
or
js
xchg
lods
and
jae
pusha
aas
and
ins
dec
popa
shr
mov
js
jnp
jnp
cmp
jno
repnz
call
(bad)
cli
int
mov
sti
ds
cld
jbe
xchg
mul
pop
mov
xchg
sahf
cmp
pop
cdq
movs
xor
push
outs
and
push
or
inc
pop
inc
bound
sbb
pop
push
(bad)
mov
data16
adc
lea
or
xchg
mov
(bad)
mov
pop
gs
movs
push
or
adc
in
pop
sub
out
add
fstp
xor
call
pop
mov
push
mov
and
mov
mov
clc
mov
loope
shr
imul
xlat
scas
pop
mov
mov
(bad)
(bad)
sahf
xor
sahf
jo
mov
pushfw
cmova
mov
cld
in
mov
cli
icebp
fmul
test
adc
sahf
fstp
out
sub
push
fisubr
dec
out
data16
pop
jge
inc
mov
imul
mov
shl
sub
and
(bad)
cmp
xor
js
addr16
push
pop
or
jnp
gs
mov
test
xchg
pop
idiv
cmp
inc
push
jne
ss
cmp
test
movs
mov
lea
xchg
ret
inc
or
sbb
fild
aas
pusha
mov
push
clc
jge
push
arpl
mov
(bad)
test
call
icebp
test
add
pop
mov
(bad)
jbe
cmp
ja
loop
test
mov
add
cmp
sbb
fdivr
ror
mov
das
mov
outs
mov
mov
std
repnz
lods
jg
int
push
push
test
or
stc
sar
mov
inc
scas
jg
mul
xchg
jg
cld
mov
retf
cli
pop
fdivr
aas
xchg
dec
jmp
mov
mov
jns
jecxz
sub
dec
cmp
mov
and
popf
jo
(bad)
in
and
jmp
mov
mov
xor
sub
in
push
test
fimul
in
sub
xchg
(bad)
pop
inc
clc
in
cmp
das
jg
and
repnz
and
scas
mov
xchg
sbb
shl
stos
and
pop
popa
push
cmp
rcl
cmps
jbe
sbb
in
jecxz
imul
imul
mov
jnp
and
lods
sbb
lods
push
xchg
(bad)
or
jmp
push
ficom
popa
jbe
into
sub
dec
inc
les
in
dec
xor
or
adc
ins
pushf
adc
fld
daa
addr16
aaa
cli
jge
jo
push
ret
int3
and
lea
mov
ds
mov
shl
or
(bad)
pop
inc
sahf
and
jecxz
lahf
out
cmp
cdq
jecxz
mov
pop
out
(bad)
scas
mov
aam
and
jge
jl
inc
mov
mov
in
mov
outs
aas
les
mov
rcl
or
jnp
dec
jecxz
mov
fiadd
cmp
jmp
mov
stc
adc
(bad)
ret
pop
arpl
or
push
xchg
int3
xchg
inc
ror
jge
and
jmp
fmul
sbb
sub
aad
mov
loopne
retf
push
or
xor
or
push
xchg
movs
and
in
addr16
sub
test
mov
mov
xchg
ins
xor
jp
fs
push
push
lock
lods
(bad)
jno
sbb
sub
imul
fwait
inc
push
pop
sbb
movs
out
dec
inc
cmc
mov
scas
mov
test
mov
fidiv
std
dec
(bad)
fist
sub
mov
bound
out
and
imul
pusha
push
sub
in
cwde
push
sub
movs
inc
and
jae
pop
lods
jp
repz
iret
mov
into
scas
pushf
xlat
popf
or
inc
int
mov
xlat
out
sar
adc
cmp
sbb
aad
push
sub
jle
nop
test
movd
or
cmc
fdiv
add
iret
mov
pop
hlt
ret
retf
das
sub
add
mov
call
shl
dec
cmps
jp
mov
cs
lea
fldenv
aaa
pusha
pop
xchg
push
cmp
daa
push
adc
xchg
out
xlat
lock
mov
mov
cmp
sbb
sti
xor
repnz
jmp
repz
xor
pushf
add
adc
adc
imul
shl
adc
popf
test
pop
movs
hlt
xchg
and
mov
cwde
test
sbb
aaa
xor
mov
ret
into
dec
mov
inc
adc
pop
sub
xor
adc
push
add
xchg
es
data16
cs
mov
pop
daa
jns
repz
fsub
xor
and
lds
out
repnz
fxch
shl
sbb
call
adc
sahf
push
mov
popaw
fimul
fld
pop
inc
mov
xchg
push
sahf
sar
pop
out
movs
sti
cs
mov
call
retf
jge
sbb
into
pop
or
cwde
int
or
rcr
aam
xchg
aas
daa
popa
sbb
and
sti
call
(bad)
mov
jmp
retf
out
sub
imul
imul
ins
dec
pop
jb
les
or
inc
mov
inc
or
mov
ins
loopne
push
rol
lock
lock
stos
jl
mov
cmc
mov
mov
outs
in
test
cli
rcr
retf
add
pushf
inc
jecxz
mov
cmp
cli
enter
shl
mov
adc
and
sbb
adc
in
inc
mov
inc
aas
dec
js
(bad)
stos
or
and
cli
and
adc
mov
(bad)
adc
adc
pop
inc
js
mov
in
cmc
test
outs
xor
or
(bad)
rcr
inc
add
shr
loop
mov
jl
mov
and
inc
mul
jge
mov
lea
inc
rol
je
mov
xor
dec
xchg
imul
mov
in
cmc
repnz
hlt
mov
jecxz
shl
lods
shl
and
stos
icebp
movs
nop
nop
retf
sbb
(bad)
jb
mov
stos
adc
neg
jle
fnsave
push
pop
lea
inc
dec
fild
idiv
cli
xchg
lock
int
pusha
hlt
mov
loopne
sbb
adc
div
adc
mov
scas
and
add
dec
mov
lea
mov
fmulp
cwde
jp
in
mov
cmc
adc
(bad)
xchg
dec
adc
jg
imul
lea
mov
repnz
adc
jnp
mov
sahf
retf
popf
add
leave
inc
nop
push
push
mov
push
jns
std
mov
pop
out
ins
mov
pop
neg
call
sbb
push
nop
inc
xchg
or
sub
sub
mov
jmp
enter
xor
mov
sub
ret
mov
arpl
jmp
xchg
repz
cmps
mov
mov
cli
xchg
ins
mov
pop
popf
(bad)
or
imul
adc
mov
push
push
cmp
retf
fidivr
pushf
aam
xchg
sbb
mov
imul
sub
xor
and
cmp
leave
adc
ss
jg
lods
inc
repnz
inc
dec
push
(bad)
addr16
(bad)
clc
jmp
sub
push
mov
cmps
loop
sub
ja
imul
aad
jne
aam
test
fwait
cmp
ret
into
pop
and
je
ret
ins
ss
enter
jno
iret
in
shr
stos
lds
or
xor
sub
ret
pop
xchg
mov
outs
mov
xor
fwait
inc
jno
fdivr
sahf
not
push
pop
leave
push
idiv
(bad)
inc
mov
retf
popa
dec
push
xor
cmp
inc
xor
loop
inc
mov
data16
stos
rcr
aas
mov
stos
shl
cmc
gs
adc
and
cmc
out
jns
push
popf
mov
cwde
stos
aam
lods
inc
adc
mov
rcl
test
bound
scas
mov
lods
adc
mov
pop
pop
mov
inc
dec
jbe
not
pop
push
adc
(bad)
std
out
and
mov
js
and
scas
int
(bad)
sti
mul
aas
mov
and
xlat
addr16
lahf
lahf
mov
inc
push
scas
pop
xor
iret
and
sub
call
adc
cmps
push
add
or
js
dec
cmp
ror
leave
popf
adc
repnz
or
cmp
loopne
ficom
push
pop
pop
pop
and
dec
std
int
outs
and
js
push
or
ds
jmp
adc
mov
outs
adc
out
test
scas
clc
push
loope
jmp
and
adc
loop
dec
jg
test
mov
pop
inc
mov
cmp
das
mov
stos
out
es
das
push
cld
adc
(bad)
mov
retf
sub
inc
cli
mov
jecxz
std
and
ret
jmp
jb
loop
aam
clc
fild
sub
inc
dec
sahf
fisubr
std
pop
in
adc
xor
aad
xchg
xchg
mov
inc
xor
arpl
test
jge
mov
nop
jno
shr
mov
mov
mov
daa
dec
mov
fcomp
test
pop
fwait
inc
rcl
pop
stos
jno
fistp
sub
adc
(bad)
or
ins
call
pop
jp
imul
imul
leave
cmp
movs
cmp
pop
mov
int
mov
arpl
fimul
cwde
test
push
jp
jp
dec
xor
xchg
(bad)
js
and
xchg
and
mov
or
dec
mov
arpl
and
dec
lods
movs
das
addr16
lea
les
mov
sub
pop
mov
cmps
ins
pop
aas
outs
sub
push
fincstp
mov
outs
sbb
cdq
fcomp
or
cmp
inc
pop
arpl
dec
arpl
cmp
mov
imul
jmp
sti
jg
mov
fxch
xlat
pop
mov
ret
lock
in
fwait
ss
mov
push
dec
lods
es
or
out
cmp
sub
xchg
out
movs
jbe
and
shl
leave
mov
js
aam
mov
fstp
cli
xor
(bad)
repz
in
arpl
inc
and
mov
or
xor
pop
div
or
jne
imul
lahf
mov
ret
or
or
je
xchg
push
int3
jecxz
and
lods
sub
out
pop
test
xor
or
mov
imul
mov
jnp
and
es
sbb
mov
pop
inc
push
xchg
xor
dec
dec
in
xor
movs
enter
mov
push
pop
dec
push
scas
nop
or
ja
(bad)
xor
jbe
cs
dec
xor
mov
movs
adc
ret
cmpxchg
imul
movlps
loope
pop
add
cdq
jb
test
inc
pusha
sahf
push
and
and
sub
lods
push
cmps
pushf
inc
loop
int3
imul
pop
pop
jmp
push
fidivr
test
fcmovu
add
out
cmp
jae
cmp
mov
xlat
cmp
push
jecxz
xchg
shr
cmp
(bad)
dec
pop
mov
loope
sub
push
push
push
aaa
jmp
xor
repnz
scas
fbstp
test
aaa
fidivr
scas
fidiv
cmc
daa
adc
in
loope
aaa
cdq
push
jnp
jns
mov
retf
fwait
mov
inc
mov
jne
int
scas
mov
push
or
sbb
mov
ficom
ret
fs
movs
nop
add
ds
int
mov
dec
jne
jbe
outs
xor
pop
js
cwde
sub
out
test
jle
cwde
pop
adc
jne
sbb
(bad)
jae
repz
mov
(bad)
rcl
inc
sub
mov
jecxz
jbe
js
lea
in
xor
jmp
enter
dec
(bad)
mov
add
shl
cmc
pop
pop
lock
lods
cmc
fiadd
xchg
scas
dec
cwde
call
sbb
mov
cld
push
or
in
outs
repnz
fwait
add
xchg
cmps
mov
loope
shl
lahf
inc
mov
dec
inc
push
cld
jecxz
mov
mov
(bad)
jnp
fisub
or
lahf
call
mov
or
sub
ret
push
push
aaa
mov
jae
dec
imul
cmc
xchg
sub
in
and
(bad)
pop
cmp
in
push
cld
mov
xlat
jnp
in
iret
inc
dec
stos
sbb
adc
and
leave
nop
push
push
ja
push
push
lock
cmps
fisubr
ins
gs
inc
cmp
xchg
jno
mov
(bad)
(bad)
sbb
xchg
cmp
aam
mov
jp
mov
in
test
add
out
pushf
push
cmps
xchg
test
mov
inc
rcl
pushf
jns
xchg
xchg
cli
sbb
ds
(bad)
xchg
mov
in
xor
mov
lds
rcl
(bad)
fs
mov
push
pop
jne
sbb
push
fwait
into
jns
je
jns
cmps
pop
xchg
mov
aad
jne
sub
das
mov
jne
lahf
or
fsubrp
mov
xor
mov
(bad)
test
int
sub
pop
retf
and
xchg
dec
mov
dec
cld
out
loop
push
sub
push
mov
mov
pop
ret
ja
inc
ret
aaa
ret
hlt
jge
shr
dec
mov
scas
mov
cmps
mov
les
cwde
xchg
iret
js
sbb
pop
sub
add
(bad)
bound
or
add
cmp
std
ins
and
xlat
mov
jge
jb
es
pop
jo
icebp
repnz
cs
cmp
sbb
push
xor
in
inc
rcl
cwde
sbb
and
ret
fsub
(bad)
mov
arpl
adc
xchg
adc
clc
pop
cli
cmp
inc
mov
neg
movs
mov
imul
outs
pop
or
das
daa
sub
jl
pusha
mov
mov
pop
fwait
jne
push
clc
neg
jmp
jns
(bad)
in
add
cmp
cmp
lock
loopne
gs
pop
scas
sti
enter
jge
cdq
ins
scas
int
dec
ss
in
xlat
pop
mov
popf
rol
pop
jo
and
and
(bad)
mov
gs
push
lds
icebp
cmps
pop
mov
jae
adc
or
pop
jg
jp
stos
sbb
shr
sub
mov
out
or
mov
loope
les
jns
std
cmp
fwait
in
cmp
ret
jmp
popa
pop
cmp
pop
sahf
(bad)
pop
inc
push
(bad)
(bad)
or
repnz
cmp
pop
cmp
xchg
ror
xlat
js
and
cmps
or
jge
jmp
icebp
fidiv
stos
push
mov
adc
inc
sbb
inc
(bad)
unpckhps
mov
jle
cmc
sub
nop
js
das
cld
test
test
adc
jmp
push
std
sbb
jp
std
pushf
clc
cmp
std
add
psrad
int3
jnp
cmc
test
shl
out
clc
sbb
jg
push
stc
pop
xor
rcl
mov
mov
mov
add
push
mov
arpl
cld
xor
or
bound
pop
jns
pop
(bad)
or
neg
sbb
sbb
out
inc
ficomp
lds
and
pop
mov
cmp
fdiv
les
sbb
daa
jbe
scas
push
inc
pop
and
jno
cmp
(bad)
icebp
sub
test
or
cmp
jo
push
scas
or
inc
pushf
outs
pop
fisubr
or
pop
jbe
pushf
inc
jo
and
add
jmp
jne
or
push
sbb
xor
repnz
xor
out
arpl
int3
sahf
fisub
xchg
adc
pop
mul
pop
(bad)
push
out
nop
cmp
scas
call
push
in
jns
mov
jns
rcr
cmp
xchg
(bad)
outs
jmp
cwde
jmp
mov
pop
aam
and
mov
fst
into
(bad)
out
les
push
pop
adc
pop
or
iret
iret
cmp
xchg
test
adc
lods
push
xchg
push
jns
adc
dec
sbb
sbb
dec
adc
sar
or
pop
pop
sbb
sbb
mov
xor
stos
jp
arpl
lea
pushf
sub
pop
out
mov
cmp
scas
aad
cmp
fsub
das
mov
cmp
cmp
ret
fst
fs
out
push
xor
jae
cmps
pop
cmp
arpl
cdq
xchg
shl
enter
jae
popa
cmc
scas
xchg
dec
pop
int3
arpl
inc
sub
adc
into
ins
add
push
push
adc
test
and
adc
scas
adc
test
mov
neg
jle
push
pop
adc
xor
hlt
inc
rcl
(bad)
pop
pushf
and
dec
or
jnp
imul
cmp
push
xchg
lods
lds
xor
stos
jmp
push
test
das
test
xchg
add
mov
cmp
xor
xor
fwait
sub
(bad)
cmp
scas
rcl
stos
jg
lahf
xor
data16
inc
js
clc
(bad)
mov
daa
lods
cdq
xchg
push
sbb
bound
fdivr
or
test
cli
jns
es
jecxz
jae
push
dec
inc
aad
mov
mov
sub
inc
out
sahf
icebp
fstp
iret
mov
mov
loope
retf
aas
pop
jmp
xchg
stos
sbb
cmp
arpl
sub
mov
int3
xor
les
jmp
and
scas
inc
pop
(bad)
(bad)
dec
jmp
xchg
cmc
xor
(bad)
mov
ins
lods
cmp
xchg
dec
cmp
jp
daa
pop
sub
stc
popf
mov
pop
jp
add
dec
xchg
and
mov
int3
jne
jbe
popf
jmp
fcom
cld
cs
fiadd
pop
aas
popa
in
mov
(bad)
sub
mov
mov
ror
retf
icebp
push
cmp
popf
sbb
out
(bad)
(bad)
test
and
sbb
imul
into
push
sub
stos
xlat
push
(bad)
into
iret
adc
outs
xchg
test
and
sub
shl
and
mov
aad
push
pop
or
pop
xor
loopne
mov
jno
cdq
xchg
push
jmp
sbb
push
mov
xchg
adc
fist
movs
sub
cmp
(bad)
or
mov
xor
cwde
xchg
xchg
aaa
mov
ja
out
mov
in
mov
sbb
push
out
lods
test
jle
nop
or
push
mov
push
dec
mov
nop
inc
sub
sub
jle
shl
inc
in
leave
je
call
pop
push
sub
movs
xor
jecxz
xchg
jle
xchg
fcmovne
loopne
es
xor
daa
lock
jp
dec
sbb
push
jns
mov
lods
(bad)
aaa
lds
inc
lock
xor
push
add
adc
dec
(bad)
pop
shr
cmc
(bad)
pop
in
enter
retf
lock
ret
sub
imul
inc
ror
imul
scas
out
loopne
bound
(bad)
mov
dec
mov
jno
imul
pmaxsw
fdivr
push
sub
mul
mov
fiadd
dec
aas
jne
mov
cli
imul
and
inc
jo
add
ds
loopne
push
ins
loop
sti
cmp
pop
xchg
xor
loope
scas
xchg
dec
int3
adc
mov
mov
push
push
jns
mov
adc
mov
fwait
out
jp
push
jp
push
sub
dec
retf
int
int3
sbb
jne
jae
mov
stc
(bad)
outs
xchg
dec
dec
mov
jmp
fucomi
cmc
push
fidivr
out
jne
sti
mov
mov
jmp
into
xor
or
mov
iret
cmp
outs
mov
hlt
add
hlt
cmp
push
dec
lahf
sti
repz
enter
scas
jbe
popf
adc
xor
fist
int
ins
into
mov
mov
in
mov
out
jecxz
div
mov
fnstsw
lea
jne
fisttp
jae
cmp
sub
mov
cmp
mov
aam
test
ret
shr
push
mov
mov
pop
xor
dec
jae
loopne
mov
jbe
jmp
mov
ins
int3
jo
fwait
sbb
dec
sub
sar
loope
imul
int
int
jg
in
(bad)
dec
push
sub
in
ja
push
imul
shl
(bad)
pop
repnz
and
lock
jecxz
(bad)
scas
mov
outs
shr
add
outs
(bad)
fisttp
sub
scas
mov
test
out
lods
cli
popa
popa
mov
sbb
jae
push
loopne
lea
shl
cmp
or
mov
ja
and
dec
aas
cmc
pop
jb
push
fdiv
mov
xor
stos
out
fsub
jno
add
(bad)
fadd
dec
(bad)
ss
mov
inc
mov
pop
aad
hlt
sbb
push
add
std
adc
jmp
xchg
add
push
addr16
cld
xchg
es
repz
mov
loope
test
psllq
sub
dec
enter
aam
pop
inc
xlat
push
cmp
cmp
imul
mov
mov
popa
mov
mov
ret
mov
inc
xor
and
std
mov
(bad)
and
movs
sahf
stos
mov
cli
push
iret
pop
popf
test
mov
js
jno
pop
push
dec
gs
mov
jae
and
sub
cmp
jo
gs
add
pop
sahf
and
sbb
fwait
and
cmp
rcl
mov
dec
push
and
mov
stos
inc
aas
loopne
retf
in
jg
dec
bound
push
das
rcl
dec
xor
js
xchg
push
(bad)
in
push
les
and
sahf
mov
sbb
jecxz
fisttp
(bad)
mov
mov
lods
sbb
mov
pushf
ins
xor
in
cmp
cmp
fidivr
mov
retf
cwde
xor
cli
mov
or
cmp
sbb
sub
stc
test
rcr
aam
jne
jg
xor
jp
cmps
xor
leave
aas
mov
(bad)
or
mov
sbb
xchg
jo
fs
push
(bad)
stos
mov
push
mov
or
cwde
and
xor
cmc
lds
inc
(bad)
dec
pop
jnp
sbb
and
push
into
fsubrp
inc
or
out
sbb
int3
ror
daa
and
aad
adc
cdq
push
jne
hlt
jp
cmp
sbb
mov
repz
xor
cmp
ds
and
mov
mov
dec
in
add
addr16
mov
xchg
cwde
jecxz
lods
(bad)
inc
idiv
retf
repnz
mov
mov
in
sub
lds
retf
push
cwde
mov
lods
xchg
ja
jmp
lahf
and
das
out
xor
jns
in
sub
mov
int3
dec
fwait
(bad)
cmp
inc
mov
mov
and
push
test
pop
lahf
(bad)
dec
mov
lods
push
pop
mov
jbe
dec
jae
cmps
dec
ror
in
pop
cmc
loopne
adc
dec
div
rcl
adc
sub
jns
adc
jnp
mov
jecxz
imul
icebp
(bad)
lea
xchg
imul
xor
sbb
dec
in
mov
in
call
cmp
ret
adc
mov
add
jno
daa
push
lahf
dec
bound
push
imul
cmp
fcmovb
dec
and
stc
loop
xchg
push
shr
jmp
push
enter
adc
popf
push
jnp
cmp
test
fcomp
mov
enter
xor
push
ins
lahf
lods
(bad)
in
cdq
int3
cmp
out
fcomip
ins
leave
inc
fdivr
add
push
cmps
xor
dec
mov
sbb
jae
rol
cdq
pusha
push
inc
lahf
lds
jle
push
fcomp
xchg
nop
int
aas
imul
stos
in
or
fiadd
mov
lock
dec
ss
fidivr
(bad)
scas
(bad)
cmp
xchg
xchg
and
mov
inc
inc
hlt
add
fnstsw
shl
lods
xchg
pop
push
outs
inc
sbb
out
and
fsub
xor
add
cmp
lods
fwait
lock
inc
xchg
div
mov
pushf
out
mov
xchg
into
add
mov
dec
mov
fiadd
outs
cdq
aaa
push
in
sbb
mov
div
jg
mov
aaa
mov
out
jo
pop
and
xor
repz
cmps
iret
daa
ds
call
mov
retf
fld
add
mov
dec
inc
gs
xchg
adc
cmc
jg
jecxz
push
arpl
sbb
scas
lock
dec
jmp
cmps
xchg
cld
jge
cld
jecxz
xchg
pop
pop
div
add
and
lahf
push
test
cld
ins
repz
scas
sub
cmp
or
in
out
das
loope
sub
pop
jle
into
xrelease
pop
jbe
das
sti
mov
retf
cmps
xchg
pop
xor
sbb
mov
jnp
sub
jnp
push
pop
jne
mov
inc
out
out
fimul
dec
stos
cli
inc
sahf
and
dec
loope
push
cmc
cdq
idiv
(bad)
mov
aam
daa
test
jg
test
lods
jmp
daa
mov
scas
(bad)
and
sub
xlat
jbe
or
mul
bound
std
loop
les
pop
mov
std
test
cmp
loope
test
std
sbb
mov
retf
outs
xchg
pop
fisub
lahf
cdq
gs
popf
cmp
xchg
mov
add
mov
out
adc
dec
lea
mov
mov
(bad)
in
hlt
loope
retf
nop
fcmove
cs
outs
aaa
mov
push
test
xor
test
push
aad
add
mov
mov
hlt
push
or
call
inc
mov
retf
jb
pop
cmp
(bad)
iret
fistp
fcomp
sub
call
into
out
es
mov
pop
in
dec
dec
jae
mov
xor
pop
cs
jno
loop
rol
mov
lods
push
jne
popf
out
mov
je
gs
jns
rol
or
aas
mov
mov
outs
aam
adc
mov
adc
(bad)
xchg
push
(bad)
jns
ss
idiv
sar
pop
push
and
dec
sahf
iret
jl
jbe
or
cmp
dec
fldcw
lods
adc
adc
dec
std
or
mov
or
in
push
and
mov
pop
arpl
and
rcr
jbe
add
sub
mov
xchg
je
and
dec
sbb
mov
xchg
rol
jo
cmps
add
scas
xchg
sahf
out
dec
out
and
xchg
fwait
inc
inc
mov
fwait
mov
in
sti
lahf
xchg
(bad)
loope
mov
ins
adc
lock
adc
jl
cmp
mov
aad
jmp
test
mov
and
sub
sbb
inc
pop
std
outs
mov
jmp
dec
cmp
adc
scas
test
cmp
ret
fstp
retf
xchg
jl
xor
jnp
sbb
push
push
fst
xor
jne
mov
and
mov
mov
pop
mov
sbb
loopne
cmp
and
into
mov
sub
or
add
scas
test
call
mov
dec
pop
inc
pop
mov
(bad)
scas
and
scas
pop
lods
cmp
push
sahf
movs
or
dec
(bad)
rcr
mov
jns
cli
lea
cmc
or
push
and
fcmovu
test
or
mov
xchg
xchg
pop
cmp
aas
aad
mov
mov
adc
and
popa
mov
cwde
cmp
add
(bad)
sahf
je
cmp
test
add
pop
fist
mov
cmps
es
fidivr
push
add
int3
dec
jo
jge
pop
jmp
xor
scas
mov
pop
hlt
int
fadd
xchg
mov
jp
out
sub
jmp
je
xchg
call
mov
pop
sub
icebp
imul
addr16
ins
or
cwde
lds
outs
pop
stos
or
mov
pusha
cld
mov
push
mov
int
jecxz
sar
jecxz
imul
int3
mov
pop
lahf
sbb
cmp
adc
push
lods
inc
xor
push
xor
adc
cld
pop
repnz
mov
imul
push
iret
mov
mov
mov
sbb
ins
stos
stos
and
mov
cwde
pop
add
cmp
sub
mov
or
loop
gs
(bad)
stc
je
cmp
push
outs
jnp
div
js
jmp
jae
xor
std
(bad)
mov
into
mov
js
fiadd
movs
cmp
ss
popf
pop
inc
jbe
jae
enter
rcr
(bad)
ss
pop
add
dec
rcl
arpl
popf
popa
dec
jbe
pop
inc
pop
mov
or
lods
ret
jns
push
data16
and
(bad)
loope
aad
adc
(bad)
das
xor
mov
mov
arpl
mov
or
cmp
jns
in
dec
popf
mov
cwde
sbb
(bad)
jge
mov
stos
mov
mov
mov
inc
es
mov
cld
and
mov
and
jns
adc
je
add
or
pop
mov
sar
shl
out
push
ds
pop
and
ss
(bad)
imul
mov
sar
adc
xchg
jns
repz
addr16
out
inc
psraw
arpl
inc
jge
adc
repz
call
mov
fst
cmp
test
xor
rol
call
mov
sub
clc
aaa
mov
cmp
or
gs
(bad)
jl
adc
lods
mov
cmp
retf
popf
call
in
lds
fwait
outs
fiadd
dec
sti
or
mov
iret
(bad)
int3
cmp
pop
clc
test
fs
aad
xchg
shl
or
daa
pop
and
in
nop
cmp
std
inc
mov
out
inc
mov
fisttp
loop
in
cmps
dec
icebp
test
sub
ror
sub
(bad)
outs
adc
mov
scas
jge
and
jmp
lea
sub
out
jl
and
bsr
loop
scas
push
movs
clc
mov
push
cmp
mov
jg
mov
mov
mov
stos
sub
ins
call
(bad)
jmp
out
pop
xor
inc
pop
cmp
push
mov
es
sbb
jp
and
pop
inc
pushf
out
pop
mov
sbb
dec
out
adc
adc
jge
jge
fisub
mov
inc
or
(bad)
ins
xchg
push
jl
popa
jmp
popa
mov
sbb
enter
stc
loop
(bad)
pop
jne
mov
retf
mov
mov
in
les
mov
xchg
push
jne
and
push
push
push
leave
jae
sub
cmp
clc
in
in
imul
jno
pop
mov
cmp
nop
or
stc
shl
mov
test
arpl
or
arpl
nop
cmp
adc
or
fbstp
aam
mov
and
adc
in
jmp
xlat
arpl
in
cld
retf
pop
mov
addr16
fnsave
mov
add
dec
pop
cmp
xchg
jle
jecxz
into
arpl
repz
fcomp
stc
scas
pop
pop
jbe
ret
cmc
sti
cmp
pop
sbb
pop
adc
push
xchg
inc
ss
call
mov
sub
arpl
rcr
out
push
out
icebp
mov
dec
stos
jnp
shl
push
lods
mov
mov
out
push
(bad)
in
out
lea
dec
in
or
lods
test
call
mov
iret
or
mov
adc
jae
jmp
sub
mov
fistp
push
inc
imul
fisub
and
dec
clc
dec
out
mov
pushf
inc
inc
mov
or
cmp
dec
xchg
pop
pop
retf
ret
loopne
gs
pop
cmp
pop
repnz
cwde
les
mov
inc
jle
mov
xor
out
loopne
(bad)
leave
mov
and
fisubr
mov
aad
xchg
jmp
mov
aaa
(bad)
popf
jbe
pop
dec
cmc
loopne
mov
dec
jns
jbe
stos
jmp
xchg
and
in
fisubr
outs
std
das
out
dec
fsubr
pop
outs
jne
ret
jle
adc
pop
test
cmp
ja
(bad)
xor
jmp
jnp
popf
fcmovne
stos
rcl
retf
aaa
dec
pop
jne
pop
ret
cmps
fwait
jno
and
in
xchg
in
loopne
add
arpl
je
neg
shl
or
out
jbe
sub
jmp
fist
data16
dec
sub
xchg
call
pop
outs
call
sub
mov
(bad)
jmp
pop
push
retf
(bad)
je
mov
adc
ja
sbb
and
in
aam
mov
mov
dec
jnp
(bad)
cdq
mov
in
fcmovne
bound
sub
xchg
pop
pop
cmp
xor
lahf
dec
mov
mov
xor
pop
xor
inc
pop
sbb
ins
mov
stos
jnp
cdq
mov
arpl
lods
daa
lods
sbb
xlat
out
(bad)
mov
out
rol
sub
lods
(bad)
mov
hlt
lods
or
jo
stos
xor
ins
push
rcl
fs
cwde
inc
mov
cmp
mov
fld
or
fnsave
pop
fwait
in
je
es
out
bound
cld
xchg
shl
xlat
mov
out
jne
popf
lods
mov
mov
nop
cmp
les
sahf
mov
ins
adc
add
ret
push
jbe
(bad)
mov
gs
icebp
fisttp
int
imul
push
fcomp
xchg
fwait
dec
sub
rcl
xchg
mov
aas
rol
ror
adc
mov
push
imul
hlt
push
sbb
mov
jne
daa
pop
movs
push
jl
or
test
jmp
movs
rol
loop
sub
mov
push
mov
std
adc
icebp
setae
adc
adc
dec
hlt
aaa
mov
std
jns
or
jae
mov
adc
daa
or
push
imul
dec
pusha
xor
repz
dec
ret
retf
fist
dec
pop
test
aad
sub
mov
hlt
(bad)
fcomp
mov
sub
sub
mov
fcomp
sar
fistp
push
(bad)
in
scas
fsub
fdivr
lock
push
dec
xor
xchg
in
aas
ret
sti
outs
xchg
mov
inc
mov
outs
mov
retf
addr16
or
out
cs
adc
popa
aad
mov
(bad)
mov
and
ror
mov
daa
in
ret
ret
mov
jecxz
or
sbb
jb
dec
xor
jmp
pop
xchg
fisubr
mov
fisubr
sti
rol
pop
sbb
aad
cmp
push
inc
mov
and
pop
addr16
dec
(bad)
pushf
dec
mov
cmps
arpl
sub
add
je
or
xor
movs
lods
sbb
ret
adc
dec
cld
jnp
fcom
dec
shl
mov
icebp
push
jecxz
jns
adc
mov
pop
retf
sbb
jge
pushf
(bad)
jg
add
ds
cli
xor
(bad)
call
inc
fistp
test
hlt
in
leave
cmp
push
pop
dec
(bad)
rcr
inc
leave
cmp
sbb
xchg
push
daa
jmp
std
loope
sbb
inc
cmp
(bad)
shl
lods
mov
jp
jecxz
sbb
mov
cli
inc
sub
test
out
xor
call
mov
test
cmc
fsubr
or
cmp
sub
push
dec
sub
int3
stc
and
enter
(bad)
push
xor
jb
sub
shl
jl
sahf
ficom
mov
(bad)
shl
mov
cmps
jno
jp
popf
cld
mov
in
mov
leave
cmc
jmp
pop
xor
add
pop
mov
inc
sbb
sbb
sahf
mov
xchg
pop
ret
arpl
fnsave
cdq
mov
out
mov
iret
push
lods
mov
add
in
out
repz
push
repz
push
add
pop
push
sbb
xchg
pop
cmp
jge
mov
fisub
push
ret
ins
jns
popf
ins
mov
pop
mov
mov
inc
push
clc
adc
(bad)
(bad)
jl
jno
adc
test
fidiv
shl
call
sub
shl
fisubr
pop
addr16
mov
(bad)
add
jnp
cmps
and
dec
mov
dec
dec
push
loop
mov
inc
fisub
out
inc
movs
and
ret
push
call
mov
(bad)
into
pop
sti
jnp
push
mov
mov
xor
xor
mov
nop
aad
int
ins
imul
cmp
xlat
sti
pushf
rcr
shr
inc
enter
push
mov
fs
inc
jg
pop
neg
sub
ret
sub
push
imul
scas
jbe
add
ret
push
cmp
outs
xlat
imul
pop
jne
cmp
xchg
push
push
ja
pop
jne
sbb
(bad)
nop
push
mov
pop
mov
jbe
dec
push
frstor
jecxz
stos
mov
push
fstp
(bad)
xchg
push
xchg
(bad)
adc
jne
adc
push
test
inc
mov
lds
inc
pop
adc
mov
rcr
loopne
jg
inc
out
(bad)
cmp
out
mov
mov
retf
call
xchg
mov
dec
xor
mov
ss
out
push
xor
lods
out
in
push
sub
push
fsubr
(bad)
fld
in
mov
sub
mov
mov
jne
sub
mov
sti
imul
xor
outs
mov
xor
ins
das
fwait
mov
mov
jns
xchg
cdq
std
in
push
inc
es
test
test
push
jae
shl
hlt
sbb
loope
and
cdq
bswap
mov
xor
and
or
dec
fs
pop
sub
movs
outs
mov
jo
(bad)
pop
cld
sbb
mov
scas
repnz
jne
sub
lods
xchg
push
fs
in
repnz
mov
xchg
ret
mov
add
pop
in
dec
push
jnp
or
out
call
push
out
repnz
std
xor
cmps
push
jno
data16
or
mov
retf
je
(bad)
loopne
addr16
js
imul
fucom
jbe
mov
jae
bound
jmp
ja
mov
adc
mov
ins
mov
jmp
in
(bad)
mov
mov
dec
sub
jmp
sbb
ficomp
lock
arpl
push
test
fnstcw
retf
inc
pop
in
into
sbb
imul
ficom
sbb
jb
push
je
xor
mov
inc
jmp
sub
(bad)
jo
push
stos
and
sbb
mov
bound
rcl
into
inc
pop
sub
xor
cmp
fdivr
mov
mov
pop
xchg
add
mov
scas
xchg
mov
dec
xchg
das
shl
dec
imul
lods
push
movs
adc
cmp
imul
dec
push
rcl
cmp
jg
mov
daa
mov
int3
or
adc
popf
mov
mov
aas
repnz
in
fnstenv
lock
mov
out
xchg
test
mov
sub
mov
loopne
and
imul
nop
test
aad
enter
std
or
pop
ja
pop
mov
lahf
dec
xchg
loop
dec
and
icebp
in
xchg
enter
dec
fs
jmp
aas
leave
outs
sub
mov
adc
lods
xchg
arpl
add
mov
stos
out
cmp
cs
popa
je
adc
and
mul
movs
fsubr
jae
xchg
mov
test
mov
mov
mov
lock
mul
(bad)
mov
ret
push
jecxz
iret
push
sbb
js
popa
pop
jge
fiadd
jne
stos
pxor
dec
popa
in
stos
mov
xor
xchg
test
ds
sub
dec
outs
paddsw
add
(bad)
xlat
xchg
add
ret
loope
push
repnz
or
mov
call
fisub
push
cwde
dec
js
ins
inc
(bad)
in
test
xlat
xchg
(bad)
hlt
test
xor
add
shr
sar
xchg
fcmovnb
shr
lock
fiadd
shl
push
mov
sub
or
add
xchg
fistp
jbe
mov
dec
mov
cs
pop
imul
pusha
dec
or
push
jg
enter
pop
mov
and
mov
cli
dec
sub
(bad)
(bad)
jne
daa
in
mov
mov
or
cmp
fwait
mov
(bad)
jno
jg
(bad)
std
and
daa
inc
jo
daa
iret
aaa
retf
cdq
mov
iret
stos
rcl
pop
icebp
sti
adc
adc
mov
popf
ds
push
ds
stos
jl
lahf
dec
push
xor
or
pop
fcomi
sbb
pop
inc
popf
stos
(bad)
cmp
and
loop
cmc
scas
jmp
cmc
shl
lods
jmp
lahf
dec
jmp
fs
cli
arpl
jg
sub
jmp
dec
mov
sar
scas
iret
jae
pop
iret
cmp
jl
inc
jmp
dec
jecxz
cmp
out
sbb
mov
(bad)
icebp
xchg
pop
cmc
inc
sub
enter
push
repnz
cmp
mov
(bad)
push
stos
mov
icebp
mov
jo
pop
cmp
inc
(bad)
stc
pop
mov
fcmovu
lock
pop
jecxz
or
mov
pop
out
mov
lods
out
jne
xchg
test
add
lds
pop
jno
mov
xor
push
dec
int3
mov
push
inc
pop
xchg
adc
mov
call
mov
jnp
ficom
and
push
ds
push
iret
lea
pop
ins
outs
pushf
dec
stos
ins
out
mov
mov
leave
dec
mov
fidivr
test
inc
or
sub
ins
jg
xchg
push
fcmovnb
imul
ins
jg
lods
mov
addr16
jl
lods
mov
push
and
clc
xchg
sub
push
or
push
in
cmps
jl
test
(bad)
iret
dec
push
pop
movs
hlt
outs
mov
add
aaa
mov
jge
xchg
inc
jecxz
adc
adc
mov
test
mov
rol
inc
sub
sbb
inc
das
mov
ror
fld
jp
ret
pop
retf
mov
std
mov
xlat
inc
jge
inc
mov
sub
clc
xchg
mov
dec
mov
dec
xchg
dec
inc
mov
int
inc
cli
inc
fnstsw
retf
jns
stos
neg
dec
lds
jo
in
jecxz
pop
sbb
test
jbe
out
cs
rol
xchg
push
pop
jle
push
mov
cmps
xchg
push
cld
(bad)
js
mov
mov
scas
ror
iret
mov
pop
imul
je
adc
loop
div
out
out
daa
sbb
imul
into
in
mov
sbb
mov
stos
retf
sub
push
scas
mov
pop
xor
popa
in
jo
or
dec
push
add
in
jmp
imul
loop
push
jo
jno
sti
inc
jp
xor
mov
dec
in
sbb
or
jae
test
std
out
adc
mov
ret
push
enter
pop
test
sub
pop
loope
xor
cmps
cld
stos
dec
jnp
aas
jae
inc
(bad)
xchg
pop
mov
shl
xlat
sub
cmp
sub
gs
xchg
leave
jge
daa
mov
adc
xchg
dec
mov
inc
sub
scas
jle
aad
mov
aad
mov
aad
inc
add
pop
fdiv
cmp
aaa
ins
mov
ss
mov
xchg
cwde
jne
pop
dec
xor
xchg
retf
ds
or
xor
or
loop
xlat
retf
ds
xchg
scas
neg
push
imul
dec
dec
daa
pop
addr16
fmul
out
dec
push
push
dec
mov
in
xchg
push
mov
in
sti
test
(bad)
cmc
leave
mov
cmps
retf
imul
(bad)
std
(bad)
adc
clc
lods
jmp
mov
stos
lods
push
pop
dec
sub
mov
mov
and
mov
mov
iret
je
cmps
mov
sbb
mov
jp
inc
pushf
jmp
xor
nop
neg
adc
push
push
addr16
jae
sar
lea
mov
enter
cdq
jb
jmp
push
push
shl
outs
push
retf
retf
int3
mov
mov
ret
mov
mov
mov
xchg
ss
arpl
(bad)
je
dec
jnp
pop
add
call
xor
loopne
xchg
adc
lods
push
inc
pushf
sub
mov
lock
mov
mov
xchg
inc
rcr
es
xchg
popf
data16
stc
add
mov
arpl
mov
or
sub
cmp
or
mov
dec
jle
aam
fisttp
loop
push
inc
mov
mov
(bad)
xchg
stos
rcr
in
gs
cli
jbe
repz
jmp
sub
mov
arpl
pop
sub
sub
sub
pop
cs
ror
adc
xchg
sti
inc
jecxz
mov
out
je
pop
not
pop
or
and
arpl
in
data16
aas
ds
int3
aad
cmp
and
nop
jmp
es
(bad)
sti
loope
scas
sub
and
movs
lahf
mov
je
jnp
test
sub
ja
fbstp
add
imul
jp
retf
fistp
cli
fldcw
leave
sar
mov
mov
adc
shl
hlt
cmc
fucomip
cwde
xor
nop
cs
or
mov
out
outs
in
jns
jmp
movs
push
sbb
push
hlt
xchg
das
ja
push
hlt
mov
pop
jl
mov
mov
xchg
rcl
sub
and
sub
push
movs
outs
mov
push
in
push
inc
push
sahf
cdq
dec
test
lods
out
stos
xor
add
xchg
das
and
inc
inc
push
es
inc
test
out
test
sub
mov
jnp
push
inc
in
fwait
jns
leave
ds
call
mov
xchg
ss
pop
push
outs
(bad)
pushf
sti
cdq
adc
cwde
ss
stos
iret
(bad)
ja
loope
jle
sti
int
nop
mov
es
jnp
mov
push
and
cmp
in
sub
mov
adc
test
clc
in
add
ins
push
ja
lock
fs
sub
jl
out
xor
imul
jmp
in
adc
sbb
repnz
and
xor
popf
and
ds
cdq
sub
arpl
ficom
test
adc
sub
mov
pop
adc
ja
rcr
aad
jbe
jp
inc
xchg
jb
add
inc
repz
jl
stos
jl
retf
mov
jg
push
lea
es
cli
mov
xchg
ja
push
aad
dec
mov
call
ret
jecxz
push
(bad)
adc
xor
sahf
push
stc
push
fstp
sahf
mov
fld
arpl
addr16
sub
sbb
mov
rcr
jl
mov
xchg
popa
and
mov
enter
arpl
mov
jne
add
sbb
sub
pop
jge
(bad)
das
xchg
jne
inc
mov
and
adc
mov
(bad)
push
pop
xor
xor
jb
aam
mov
cmc
cli
pop
dec
js
mov
ffreep
dec
data16
mov
fnstcw
cli
xchg
mov
jmp
fcmove
jge
xor
retf
fcmovbe
mov
bound
mov
sbb
mov
imul
ja
daa
movs
sbb
or
or
aad
cmps
call
jnp
jnp
mov
push
les
leave
test
ss
adc
inc
es
shr
xchg
push
call
inc
push
bound
popf
push
aam
(bad)
cdq
cmp
out
arpl
xchg
add
pop
jns
repz
pop
test
ins
xchg
test
mov
add
fs
int
pop
jecxz
dec
repnz
xchg
daa
pop
cli
fisttp
pop
xlat
(bad)
dec
sub
xor
popf
mov
xor
cmp
cmp
xchg
mov
int3
push
pop
pusha
in
fidivr
test
push
pop
retf
xor
xor
call
pop
popf
outs
cmps
retf
ins
in
dec
addr16
mov
or
pop
loop
xchg
sub
cli
adc
cs
mov
cli
psrlw
inc
push
loop
ins
jmp
inc
dec
ror
push
je
mov
retf
pop
loopne
sti
cmp
arpl
push
inc
(bad)
ret
iret
js
pop
xchg
sahf
sbb
ja
stos
pop
mov
leave
fwait
rcr
jge
adc
aam
call
pop
nop
mov
jmp
or
ret
jno
jp
popf
sub
mov
fmul
inc
adc
xor
int
ss
cmc
push
xchg
call
mov
mov
inc
int3
push
fcomi
inc
(bad)
mov
call
cmps
mov
call
xchg
outs
call
in
icebp
cmp
push
fdivr
mov
div
jmp
and
mov
mov
stos
jno
mov
ror
movs
dec
repz
(bad)
enter
cdq
aaa
push
and
pop
sti
dec
js
ja
xlat
loope
push
lahf
cmp
es
sub
or
inc
mov
xchg
and
dec
cmp
data16
jbe
retf
ret
mov
fadd
sar
cmp
shl
sahf
aaa
sbb
mov
mov
test
rcl
adc
into
outs
mov
fidivr
scas
mov
pop
cmc
mov
fcomp
into
fidivr
mov
xchg
mov
xchg
ret
mov
jecxz
pop
sbb
stos
ret
inc
test
pop
mov
aas
shl
sub
jp
pop
push
ss
loop
pop
mov
mov
in
mov
push
aad
repz
inc
jmp
aam
lahf
and
mul
test
loop
adc
cmp
jecxz
adc
shr
mov
and
mov
mov
sub
js
push
cmps
test
inc
xchg
into
ret
fs
jle
les
lock
fstp
xchg
cdq
mov
test
aas
test
mov
scas
cdq
les
jg
scas
cmp
adc
cmc
ret
dec
push
out
push
xchg
pusha
into
popf
sti
fwait
jle
iret
outs
int
jl
les
in
cdq
adc
scas
ds
ds
mov
(bad)
std
retf
(bad)
(bad)
call
gs
and
mov
and
mov
sti
mov
sti
mov
fcomp
fcom
ins
pop
push
xlat
pop
aad
cld
aad
out
and
out
loopne
lds
sahf
sbb
mov
and
mov
inc
mov
dec
mov
ins
out
dec
sub
cmp
mov
bound
jg
mov
mov
dec
dec
push
ins
out
or
bound
pop
ja
ins
out
outs
mov
test
mov
rcl
pop
loope
xchg
push
sub
mov
ret
xchg
push
pop
dec
xor
and
mov
or
xor
call
and
or
mov
jle
les
loop
sbb
sub
mov
mov
and
dec
cwde
mov
mov
and
inc
sub
mov
xlat
inc
mov
adc
les
or
or
mov
sbb
sbb
xor
mov
(bad)
aad
mov
jmp
xchg
push
call
icebp
adc
jne
or
lds
push
mov
popf
(bad)
shr
cmp
dec
xor
cmps
dec
loope
adc
es
lds
lds
daa
rol
ds
mov
into
xor
sbb
mov
jno
jbe
movs
adc
fisttp
mov
and
mov
out
adc
xchg
adc
mov
lods
xchg
outs
sub
and
xchg
mov
jp
mov
cmps
leave
mov
xchg
popa
popa
xor
or
mul
add
inc
fs
jge
sub
lahf
cli
mov
mov
hlt
aaa
jmp
xlat
sbb
shr
lods
adc
mov
call
aas
push
xor
and
push
push
sbb
jnp
jbe
adc
jo
mov
scas
xchg
push
dec
xor
sbb
cmps
adc
xchg
xchg
push
test
fbld
cmps
(bad)
jle
jecxz
sbb
ss
test
into
test
xor
push
push
test
mov
xchg
mov
push
dec
add
loope
ret
and
or
and
or
out
lahf
pop
xor
pop
int
out
push
fsubr
ret
sbb
adc
jae
repz
gs
jns
sbb
pusha
add
scas
mov
mul
jne
in
cli
idiv
out
sub
jmp
add
cmc
lods
add
stos
das
xor
xlat
clc
jge
sbb
lea
push
push
push
sbb
cmps
pop
lea
mov
cmc
fwait
in
fistp
add
pushf
js
ret
sbb
test
fbstp
add
fistp
ins
sub
pop
fadd
aad
mov
fidivr
push
lock
inc
dec
fdivr
inc
das
test
pop
push
mov
jne
imul
add
shr
pop
enter
out
inc
xor
mov
pop
cmps
jp
pop
mov
out
stos
or
sahf
mov
jg
lods
mov
cld
mov
dec
mov
dec
icebp
test
ins
dec
mov
(bad)
test
cmp
scas
sub
xchg
jb
sub
mov
arpl
mov
jg
pop
stos
push
in
sar
call
mov
mov
dec
xor
cmps
push
(bad)
dec
cmp
test
adc
inc
sbb
(bad)
push
pushf
fisttp
xor
fidiv
sub
movs
xchg
in
ins
xchg
dec
pushf
loope
in
pop
inc
and
ret
and
jo
push
clc
mov
mov
ins
push
adc
push
pop
cdq
jns
popf
je
out
jmp
clc
lods
fidivr
movs
push
(bad)
mov
cmc
cli
mov
mov
retf
in
jecxz
fild
pop
push
addr16
jo
sti
add
jo
fldcw
push
jg
iret
dec
lock
pop
mov
call
lock
push
adc
(bad)
and
sbb
xor
jnp
mov
xor
int
aaa
push
mov
inc
jp
hlt
cs
push
aad
jg
pop
pop
jl
pusha
es
inc
inc
add
lods
dec
add
adc
ret
shr
repnz
adc
mov
aam
sub
pop
clc
test
cli
rcl
outs
shl
out
sar
mov
mov
pop
lods
iret
inc
(bad)
sub
dec
jg
(bad)
mov
mov
sbb
lods
cld
push
iret
jge
jp
mov
lahf
scas
test
scas
jo
dec
cld
repnz
sti
in
sub
or
jle
scas
jo
xchg
out
or
not
mov
aad
repz
aas
pop
nop
push
das
stc
(bad)
ror
(bad)
xor
(bad)
jecxz
xchg
xchg
(bad)
clc
xchg
retf
enter
and
jno
sahf
cld
(bad)
cmps
repz
ds
and
icebp
shl
stc
(bad)
div
xchg
(bad)
js
(bad)
test
(bad)
arpl
xchg
aas
xchg
cli
mov
jns
push
fs
cmc
repnz
xor
inc
addr16
xor
adc
(bad)
fisttp
sti
jo
jmp
pop
fistp
cmp
rol
lock
js
jns
lea
pop
jo
cmp
pop
mov
out
fcmovnb
and
cdq
mov
jns
cmc
jmp
stc
add
mov
rcl
out
jbe
out
adc
jle
in
mov
lods
gs
xchg
stos
fsubr
repz
mov
(bad)
sahf
sbb
repz
xlat
cli
(bad)
out
imul
pop
cmp
std
mov
push
xchg
mov
imul
sbb
imul
dec
(bad)
fidiv
xchg
xchg
mov
xlat
sahf
mov
jle
cld
mov
aas
dec
(bad)
pop
out
in
pop
jo
stc
imul
jg
sbb
in
scas
pop
pusha
jg
sbb
imul
fcomp
out
js
out
ds
mov
cmp
sti
jnp
out
push
(bad)
out
cmc
ins
cld
dec
jle
fwait
jecxz
sbb
push
repz
xchg
js
jle
movs
loope
xor
outs
and
div
and
fcmovnbe
and
idiv
enter
ins
iret
aas
icebp
inc
mov
das
mov
pop
inc
idiv
xchg
cmp
cmp
out
pop
dec
idiv
xchg
das
xchg
cmp
sahf
(bad)
lods
and
jecxz
mov
mov
lds
out
scas
and
mov
je
into
int
in
push
sbb
arpl
xchg
test
xor
sub
jnp
sbb
xchg
ffree
jl
jno
rol
pop
fnsave
pop
fbld
or
shl
ins
sar
fisubr
movs
jnp
lahf
sar
dec
aaa
repz
gs
jmp
pop
shr
call
cmp
test
out
lea
shr
sbb
rcl
int3
call
rcl
mov
pusha
test
mov
fsub
stos
lods
ror
and
push
cdq
shr
and
mov
cmps
mov
dec
fwait
push
mul
in
cmp
out
and
(bad)
sbb
(bad)
in
sti
fidivr
lea
repz
xchg
dec
cmp
sbb
xchg
outs
mov
pusha
shl
xchg
dec
aam
mov
fs
jnp
fidiv
mul
iret
int
xchg
rol
test
inc
stos
push
push
enter
stos
imul
cs
into
xchg
outs
out
popf
test
push
(bad)
das
xor
(bad)
repz
mov
out
push
stos
dec
int
call
or
sahf
pop
jbe
ss
jne
pop
xchg
cwde
jnp
mov
rcl
shl
inc
adc
out
pusha
mov
int
stos
jmp
pop
sub
iret
jae
fimul
jmp
lea
cwde
lds
jmp
enter
shr
inc
retf
pop
sub
frstor
enter
mov
neg
sbb
cmp
push
jae
sbb
dec
jg
push
stos
or
cmp
sbb
mov
iret
jge
mov
hlt
loop
cmp
fisubr
punpcklbw
add
dec
push
sub
adc
mov
jo
pushf
push
aad
cmp
ret
retf
sub
pop
jp
scas
fidiv
pushf
pop
shl
retf
push
stos
mov
(bad)
(bad)
mov
mov
fisubr
mov
rcr
cmc
pop
inc
xchg
adc
mov
popf
ret
fs
push
test
or
inc
xchg
push
aam
push
(bad)
pop
jge
aaa
mov
jmp
add
adc
cmc
fidivr
adc
mov
dec
push
or
inc
jmp
sub
pop
js
aad
stos
je
lds
loopne
shr
js
pop
mov
cli
call
cdq
lods
or
and
or
pop
dec
push
inc
ret
xchg
leave
sub
jl
xor
leave
sub
lock
add
mov
xchg
push
lock
lea
icebp
adc
mov
xchg
in
int3
sub
in
sbb
jnp
out
cmp
shl
cmp
mov
sahf
adc
dec
loop
lock
or
or
sbb
and
xor
pop
mov
sub
mov
call
call
dec
sahf
push
mov
xchg
add
int3
stos
add
shr
cmp
shl
mul
dec
mov
(bad)
xor
sbb
or
jmp
int3
test
loopne
outs
mov
pop
pop
ret
dec
imul
or
stc
ins
pop
or
stos
jle
cmp
movs
jnp
push
inc
jecxz
bound
add
inc
into
retf
jo
dec
mov
lods
mov
pop
sub
mov
inc
adc
cmp
add
pop
jb
fs
mov
mov
or
mov
and
lods
fsubr
inc
pop
test
(bad)
ret
sbb
cli
mov
inc
out
jb
sbb
cmps
test
inc
mov
ret
ins
xor
out
mov
add
outs
shrd
add
mov
pop
xor
aas
std
popa
mov
jno
pop
ins
aas
shr
inc
sbb
daa
sub
cmp
loope
pcmpeqd
jo
or
ret
xchg
stos
fwait
mov
in
cdq
fldenv
sub
xchg
sub
cmp
sub
pop
fwait
pop
pop
or
sbb
ds
pop
xor
sbb
addr16
movs
ror
cmc
cmp
ins
inc
push
cld
jle
add
or
sbb
dec
cdq
mov
mov
jbe
mov
adc
leave
push
stc
pop
sbb
stos
xchg
nop
(bad)
in
ins
cmp
pop
ss
sub
imul
xchg
rcl
dec
fnstsw
(bad)
iret
(bad)
jb
test
mov
cmc
cmc
test
outs
pop
sub
jnp
scas
cdq
fldcw
cdq
mov
cli
btr
retf
mov
jae
in
test
xchg
lea
call
mov
pop
jecxz
cmps
pop
daa
imul
fwait
leave
sbb
repnz
clc
jmp
imul
lea
sub
ins
mov
outs
mov
mov
xor
lea
jb
pop
and
jge
lods
adc
jnp
mov
inc
jp
push
xchg
sub
dec
popa
shl
enter
shl
mov
xchg
loop
rcr
mov
jmp
xor
xor
les
ret
cmp
mov
cmp
push
pop
shl
adc
arpl
mov
ins
fwait
sub
dec
xlat
shr
inc
jnp
lds
cmp
or
and
fidiv
stos
retf
xchg
mov
mul
jmp
test
enter
in
aad
into
dec
push
xchg
je
ror
fstp
lods
pop
rol
repnz
fwait
push
fsubr
cmps
adc
test
sbb
adc
jbe
add
inc
jmp
inc
sub
cmp
dec
std
sub
xchg
(bad)
pop
lds
mov
test
jecxz
in
push
jnp
ins
in
sub
cmps
fwait
jecxz
movs
pop
popf
loope
leave
jp
fisttp
iret
rcr
jae
xchg
call
jns
jns
sbb
fbld
mov
clc
mov
aas
aas
inc
pop
or
inc
bts
sub
xchg
cmps
jno
mov
enter
adc
movs
fwait
mov
xor
adc
sub
xor
scas
push
fidiv
fwait
pusha
test
fdiv
scas
dec
mov
pop
imul
dec
jmp
fldenv
or
add
push
scas
stos
xchg
nop
arpl
pop
fcmovnb
sbb
jmp
xor
adc
or
pop
sbb
and
sbb
stos
or
mov
xchg
lahf
(bad)
movs
rep
cmp
pop
sbb
mov
xchg
out
aad
iret
ror
jg
mov
div
sbb
sti
cmp
fiadd
sub
test
add
and
pop
(bad)
stos
aas
and
fs
scas
enter
pop
inc
sub
cmp
pop
jns
repnz
aad
dec
mov
pop
imul
sar
xchg
xchg
mov
cmp
jnp
mov
mov
fmulp
xchg
mov
out
inc
aas
cdq
and
test
(bad)
cmp
add
fisttp
cmp
js
mov
wbinvd
push
out
mov
mov
scas
cli
or
es
xchg
jnp
lods
cs
scas
xchg
shr
rcr
jno
or
jne
pop
cmp
xlat
mov
mov
loope
xchg
dec
test
add
xor
repz
cmp
out
outs
cmp
xchg
(bad)
or
fcmovb
push
pop
mov
mov
jmp
cld
stos
pusha
mov
outs
pop
fldln2
hlt
sbb
pop
out
clc
xchg
repz
push
hlt
call
xchg
dec
push
jmp
std
xchg
mov
scas
mov
push
in
cmps
aas
pop
mov
xchg
mov
mov
mov
jecxz
jmp
cmc
xor
mov
dec
popa
or
jge
outs
shl
stos
inc
inc
ins
adc
addr16
enter
and
dec
pop
push
cli
pop
and
sub
les
sub
xor
sbb
jg
sub
leave
(bad)
mov
adc
test
push
mov
call
jecxz
rcr
lahf
out
add
test
mov
lahf
cli
gs
pop
add
sub
push
mov
xor
(bad)
daa
movs
lahf
dec
nop
mov
and
mov
mov
repz
xchg
push
cdq
aas
ss
sbb
push
adc
push
bound
mov
aam
mov
pop
mov
pop
jo
(bad)
mov
(bad)
stc
clc
aad
mov
jmp
imul
call
loope
dec
mov
xor
shl
xchg
mov
mov
jp
js
mov
cdq
mov
jbe
mov
sub
inc
test
or
pop
nop
(bad)
pop
jno
lea
jbe
dec
adc
mov
fwait
iret
(bad)
hlt
sbb
enter
das
cwde
jnp
mov
pop
daa
xlat
mov
test
mov
nop
mul
xor
retf
mov
dec
mov
xchg
or
sbb
adc
movs
cmp
inc
cmc
out
sbb
mov
mov
cmp
sub
sahf
sbb
sbb
mov
xchg
mov
mov
add
data16
rcr
jp
movs
arpl
lods
dec
xchg
in
sbb
dec
and
jbe
push
mov
retf
(bad)
sub
cmps
mov
fwait
aam
loope
jl
jno
add
push
push
ds
xchg
lds
jge
push
fldcw
mov
fcmovu
scas
dec
les
mov
inc
(bad)
pop
xlat
mov
ds
xchg
jne
or
jg
push
push
pop
mov
aaa
adc
movs
aas
pop
add
aad
cdq
dec
pop
icebp
push
imul
xchg
les
iret
sti
lds
push
jg
loop
jg
lds
cmps
scas
mov
adc
jl
or
inc
icebp
int3
retf
out
mov
push
cmp
dec
ja
cmp
loop
sub
iret
mov
sbb
daa
lds
fucomi
movs
js
jb
cmps
push
push
and
out
stos
xlat
rcr
xchg
mov
cmp
inc
inc
xlat
movs
popf
jae
xor
mov
arpl
cmps
retf
stos
stos
add
into
mov
mov
test
xor
mov
sub
or
push
dec
xor
int
xchg
les
cld
sub
fidivr
cli
sbb
ins
loop
push
jecxz
cmps
mov
cmp
push
shr
call
pop
imul
test
jno
dec
ins
dec
jnp
cmps
dec
xchg
jecxz
push
sahf
mov
xor
into
mov
push
xchg
inc
inc
fiadd
mov
cmps
mov
cmp
repz
sbb
sub
ret
xlat
cdq
xchg
mov
clc
and
lods
mov
fldlg2
outs
jmp
inc
xchg
xlat
push
pop
out
ins
popf
jno
sub
adc
push
dec
mov
mov
fs
neg
(bad)
loope
shl
cmps
mov
pop
shl
push
adc
je
scas
push
iret
cli
pop
cmp
inc
adc
aas
adc
lock
loopne
outs
pop
or
fs
lods
jne
xlat
cmp
sbb
jmp
clc
mov
outs
mov
lea
nop
(bad)
mov
pop
pop
dec
jmp
out
sar
mov
(bad)
mov
std
cmc
(bad)
mov
pop
jns
lods
jae
jnp
popf
fwait
jno
lods
jae
fisttp
fsubr
not
cmp
retf
jne
into
std
outs
popf
(bad)
ins
out
mov
cmp
jle
(bad)
dec
adc
xor
das
pop
mov
xor
mov
or
imul
outs
pop
and
pop
cmp
jno
sub
cmp
add
mov
js
pop
aas
sbb
js
aam
sub
outs
xor
push
inc
and
int3
jg
mov
mov
push
shl
enter
adc
clc
dec
cmp
adc
in
sbb
pop
xchg
cmp
dec
ds
jmp
add
mov
fcmovnbe
adc
add
lock
dec
sbb
mov
clc
jae
iret
cmp
mov
and
pop
iret
std
(bad)
cdq
add
iret
dec
shl
jmp
mov
cmp
(bad)
aas
fstp
call
mov
inc
jns
xor
mov
out
(bad)
fmul
in
mov
mov
out
cmp
fdivr
cmp
sbb
into
adc
out
mov
jnp
xor
sbb
(bad)
sub
sub
cdq
push
cmp
(bad)
retf
fxch
sub
arpl
in
dec
mov
pop
add
mov
in
push
fldenv
xor
jmp
movs
push
inc
mov
(bad)
sbb
push
in
ss
imul
out
cmp
stos
jae
mov
ins
sahf
xchg
push
adc
clc
jge
ins
cmp
and
stos
popf
xchg
pop
sub
ins
pop
push
(bad)
mov
mov
and
pop
and
outs
fld
mov
mov
mov
push
mov
pop
neg
js
rcr
repz
pop
mov
cld
jmp
dec
adc
push
lods
call
xor
cmps
mov
and
pop
dec
test
in
test
mov
mov
jno
or
mov
jl
cli
les
mov
mov
mov
cmp
lea
ret
arpl
out
bt
lahf
in
bound
push
and
xor
stos
sbb
inc
adc
data16
inc
push
sbb
mov
sub
iret
and
mov
xchg
aad
mov
mov
(bad)
cmp
pop
xor
sar
fadd
int
or
test
das
into
xor
xor
xor
jge
addr16
or
sti
or
lods
cli
xor
dec
inc
ds
and
mov
pop
fadd
cmp
add
js
adc
mov
js
neg
jp
and
or
ret
int3
lahf
jo
shl
aaa
xor
and
aaa
sbb
out
in
fdiv
out
in
sbb
push
repnz
xchg
(bad)
mov
pop
enter
xchg
cld
xchg
mov
fist
jge
retf
test
out
hlt
or
cwde
sub
leave
call
ds
mov
sbb
mov
test
dec
arpl
add
or
and
push
je
call
xor
dec
repnz
mov
and
cld
mov
pop
xlat
jbe
pop
hlt
sbb
in
in
clc
dec
push
test
(bad)
ja
(bad)
out
js
xor
mov
and
adc
cld
pop
xor
mov
mov
mov
repz
mov
out
mov
dec
push
(bad)
cmc
data16
inc
push
es
in
cmps
xchg
scas
stos
push
cs
xchg
pop
pop
into
fisttp
jnp
daa
push
(bad)
add
mov
push
and
jle
pop
and
sub
ins
and
sbb
pop
in
scas
sbb
out
pop
xor
inc
(bad)
push
test
hlt
stos
icebp
stc
adc
mov
adc
adc
dec
add
push
sub
rsm
push
or
cmp
mov
mov
inc
dec
int3
sub
lahf
test
pop
hlt
arpl
dec
scas
and
inc
sahf
push
pop
push
pop
push
xor
inc
xor
inc
mov
repz
cmp
jg
out
out
mov
adc
xchg
jmp
int3
add
rcr
daa
(bad)
sub
lock
pop
fmulp
dec
jp
sub
jne
xor
push
lahf
mov
jae
scas
adc
sti
and
rcr
sub
(bad)
xchg
fs
or
push
gs
lds
mov
push
dec
mul
xchg
imul
(bad)
rcr
push
dec
ss
std
adc
scas
fidiv
jle
je
cmps
inc
and
fisttp
clc
cmp
cmp
pushf
ret
mov
mov
out
ror
cmp
outs
call
xor
or
dec
nop
pop
push
fdiv
jmp
and
or
hlt
pop
mov
pop
lock
inc
iret
fstp
mov
mov
(bad)
xchg
sub
sbb
adc
in
inc
hlt
dec
jmp
int3
fs
push
adc
mov
jmp
(bad)
cmc
dec
adc
inc
push
push
mov
stos
inc
mov
neg
ret
rcl
icebp
push
in
loope
ins
loopne
mov
pop
xor
push
ret
pop
push
sbb
icebp
push
ss
mov
fidiv
jb
mov
nop
jg
push
lea
int
inc
fcom
jno
inc
cmps
add
enter
call
cmp
cld
xchg
adc
sub
push
mov
int3
mov
call
test
push
aas
jecxz
sub
push
mov
or
stos
xchg
inc
or
jne
js
cmp
pusha
out
mov
inc
test
mov
arpl
add
push
mov
mov
ret
push
lea
arpl
in
and
or
jnp
(bad)
sbb
dec
jl
jnp
mov
pop
mov
mov
idiv
pop
in
out
iret
mov
jge
jno
and
test
pop
jecxz
aaa
test
mov
aaa
arpl
and
inc
retf
jne
(bad)
mov
add
jle
adc
inc
jecxz
dec
fidiv
lock
stos
and
add
sbb
sbb
test
imul
sbb
in
xchg
arpl
mov
xor
dec
movs
mov
aaa
das
(bad)
cmps
push
mov
fwait
jo
dec
ins
lahf
mov
jle
push
ins
lods
loopne
mov
enter
hlt
inc
movs
int
imul
std
int
xlat
fwait
ins
(bad)
aas
neg
add
sbb
inc
in
sbb
or
imul
xchg
imul
in
and
dec
xor
mov
rcr
out
cmp
retf
in
jp
mov
jmp
push
ret
rcl
cmp
add
int
mov
jnp
cmp
std
stc
xchg
mov
mov
pop
jnp
mov
(bad)
scas
out
dec
pop
pop
ins
push
cmp
sbb
adc
int
push
jmp
pop
loopne
mov
sti
(bad)
pop
shr
ins
icebp
xchg
mov
stos
jge
jbe
adc
sahf
cmps
imul
cs
mov
movs
pop
fisubr
ins
(bad)
push
mov
jbe
or
int
dec
cmps
dec
jl
aad
fist
loop
xor
in
in
ss
mov
out
jnp
pop
mov
adc
push
fistp
fsubr
or
int
sti
sbb
lahf
xor
ret
jno
xor
mov
(bad)
loop
and
repnz
loop
(bad)
(bad)
div
dec
hlt
lods
mov
xchg
out
mov
js
jp
scas
pop
dec
mov
call
out
inc
jle
mov
fucom
inc
jl
jecxz
stos
mul
(bad)
arpl
outs
adc
int
mov
xlat
cs
cmp
into
gs
lods
mov
lahf
push
xor
cli
pop
mov
test
cmc
(bad)
sub
call
xor
clc
icebp
mov
mov
scas
sub
pop
cld
pop
lods
mov
outs
fimul
clc
(bad)
jbe
test
fldenv
stos
test
mov
loopne
push
pop
add
pusha
(bad)
retf
inc
sub
jl
pusha
mov
cs
fld
mov
rol
test
cmp
jmp
ss
repz
pop
jno
aas
daa
sbb
mov
out
jg
aaa
clc
enter
jb
arpl
mov
mov
imul
cmps
mov
xchg
out
and
adc
outs
pop
mov
sub
jl
xlat
adc
inc
not
imul
mov
inc
xchg
(bad)
jle
mov
jb
jns
and
adc
push
push
push
jbe
lock
mov
gs
sbb
xchg
mov
xor
pusha
push
retf
jp
xchg
jle
push
pop
aam
and
idiv
mov
hlt
jle
std
xor
jp
and
inc
out
xchg
loope
mov
outs
aas
and
call
dec
out
(bad)
(bad)
push
jmp
hlt
(bad)
clc
jnp
outs
lods
jl
adc
jo
loope
es
mov
mov
xor
mov
stc
cmp
jmp
movs
jo
jmp
xchg
(bad)
mov
pop
fsubp
sub
fisttp
and
mov
sahf
mov
xor
clc
les
fwait
xor
mov
pop
gs
push
stc
adc
mov
scas
sub
jl
and
mov
jmp
pop
ds
neg
aas
ret
loop
sub
int3
and
or
loopne
cmps
addr16
scas
cli
cs
and
adc
xor
popf
lods
jp
mov
add
ret
ins
pop
inc
test
inc
out
mov
push
test
xchg
ja
and
push
xor
arpl
pop
push
(bad)
sti
push
jbe
xchg
sar
mov
push
test
push
jp
push
dec
shr
jle
jnp
and
mov
int
mov
cmp
mov
retf
sbb
pop
mov
shl
loopne
mov
ds
xor
cmps
cmps
jb
call
jl
pop
xchg
jbe
into
out
pop
mov
add
or
jmp
test
lahf
fld
mov
into
repnz
pushf
mov
imul
or
dec
fstp
lahf
sub
pop
sahf
jle
push
call
sti
sub
stc
in
xchg
repnz
out
scas
call
inc
mov
jg
mov
and
sbb
push
daa
jle
mov
pop
imul
fistp
popf
fsincos
pop
fsubr
mov
inc
fidivr
or
(bad)
cmps
lock
sbb
mov
push
mov
lahf
test
xchg
fcomp
cdq
ss
jg
mov
int3
dec
(bad)
cli
(bad)
cmc
retf
mov
cli
test
sahf
mov
mov
cmp
sti
add
sbb
icebp
retf
cmps
push
push
mov
adc
shr
jge
arpl
nop
pop
pushf
mov
imul
xchg
add
jg
jl
cmp
stc
mov
dec
mov
fistp
xor
test
cmp
icebp
jge
stos
loope
sub
retf
and
repz
mov
add
cmc
jg
inc
test
push
add
ins
outs
push
movs
jp
lahf
sub
dec
inc
stos
mov
(bad)
dec
xchg
jmp
cmp
inc
xchg
jmp
cmp
inc
stos
dec
sub
shl
sbb
mov
(bad)
pushf
mov
cmp
js
cmp
cld
inc
push
or
pop
mov
mov
jo
js
(bad)
out
int3
sbb
and
mov
je
adc
mov
gs
call
mov
pop
loop
xchg
pop
fwait
lods
mov
sbb
ins
repz
(bad)
push
push
xchg
mov
jecxz
jb
mov
add
fmul
call
pop
orps
xchg
or
inc
adc
jnp
(bad)
movs
push
ins
cmp
or
pop
daa
in
cmp
mov
fdiv
enter
sbb
es
loop
dec
pop
inc
xorps
test
jbe
or
cli
or
or
xchg
xor
fcomp
out
les
mov
jecxz
jb
adc
push
inc
cmps
jge
jo
xor
mov
fldenv
sbb
or
sti
(bad)
mov
mov
add
inc
pop
mov
jns
daa
in
lods
adc
aaa
push
mov
retf
jmp
jg
jno
outs
out
je
mov
gs
test
aam
dec
xor
dec
outs
lahf
out
movs
dec
stos
popf
shl
jle
scas
call
(bad)
xlat
data16
or
or
imul
sub
bound
cmp
xchg
dec
imul
mov
jmp
jbe
dec
mov
test
mov
inc
pop
cmp
xchg
mov
int3
xor
scas
add
push
or
sub
mov
or
ret
cmps
scas
outs
xor
sahf
int3
and
js
(bad)
inc
lods
cli
pusha
mov
dec
adc
aaa
rcr
movs
stc
stos
loope
lods
repnz
or
push
test
push
cs
jg
jb
xchg
add
call
test
xchg
cmp
fcom
push
inc
cmp
mov
(bad)
mov
xor
and
mov
nop
jle
sbb
in
mov
shl
xchg
in
scas
xchg
and
cli
std
dec
pop
in
jecxz
int
mov
out
lods
(bad)
es
cwde
rcr
mov
xchg
dec
js
sbb
dec
push
cs
iret
leave
jne
sub
sahf
inc
sub
rcr
scas
cmps
dec
aam
outs
in
call
inc
div
(bad)
push
(bad)
dec
xadd
shr
jp
lds
ins
xchg
xchg
lds
cwde
fistp
je
mov
or
cmp
ja
mov
pop
lods
daa
mov
sbb
mov
sti
fst
jg
xlat
pop
cmp
jg
inc
sub
ret
inc
stc
cmp
lods
dec
frstor
test
jb
or
mov
cmp
mov
pop
lds
and
imul
les
and
or
xchg
sub
mov
ret
sub
pop
sbb
stc
push
jmp
je
div
sub
pushf
popf
pop
inc
btc
jbe
mov
push
or
and
jmp
inc
jl
addr16
and
cmp
mov
xchg
sub
clc
sub
adc
and
addr16
test
inc
sub
sahf
(bad)
xchg
icebp
jle
push
ins
les
pusha
and
push
mov
xor
cmp
scas
xchg
call
movs
pop
sub
push
sub
imul
xchg
cmps
jns
jo
dec
stc
jns
fnstenv
adc
dec
int3
dec
arpl
push
lds
sub
stos
adc
cmp
leave
push
hlt
add
xor
xlat
call
sub
cmp
pushf
mov
outs
fild
jp
sub
fnsave
(bad)
jae
pop
jle
or
xchg
stos
enter
stos
retf
test
jmp
jge
mov
mov
popf
mov
mov
test
fucomp
cld
fdivr
scas
repz
jnp
in
dec
out
aaa
test
(bad)
pop
loopne
mov
jge
shr
sbb
jnp
pop
push
jl
adc
imul
stos
fmul
mov
jecxz
fwait
jbe
push
(bad)
xchg
or
adc
adc
jl
sti
pop
scas
lock
cmp
ja
fimul
cmp
cmp
push
outs
jge
fnclex
ds
scas
les
xor
icebp
sbb
fwait
sub
outs
jnp
cdq
popf
xlat
inc
jo
mov
outs
jp
sub
arpl
adc
jg
loope
push
mov
push
(bad)
cmps
jmp
cdq
or
ins
pop
(bad)
shl
(bad)
mov
jns
cdq
fnsave
mov
push
and
test
mov
out
or
mov
mov
movs
ret
sub
jecxz
(bad)
ins
mov
xor
and
pusha
jge
inc
mov
ret
inc
popf
ds
sbb
mov
sub
mov
ins
popa
and
add
push
nop
lods
(bad)
cmp
stos
bound
jp
or
(bad)
jecxz
sub
pop
daa
sbb
hlt
push
clc
add
enter
outs
in
dec
rep
into
cwde
das
test
or
push
fwait
or
pop
adc
stos
add
das
je
sbb
sub
repnz
jl
addr16
mov
arpl
rcl
out
and
inc
mov
and
jne
(bad)
jno
cmc
in
push
xor
jnp
add
mov
xor
clc
imul
push
xchg
(bad)
mov
push
lods
rcl
jmp
stc
sti
mov
dec
pop
psllq
jo
jne
sbb
imul
xor
test
dec
or
xchg
pop
inc
push
sub
loopne
(bad)
fdivr
fild
fsub
dec
loop
dec
pop
scas
xlat
stos
jmp
inc
jg
jne
cmp
xchg
sub
pop
cmc
ss
adc
cdq
sub
scas
sbb
and
cmp
xor
repz
xchg
mov
mov
cmps
pop
mov
aaa
inc
mov
les
dec
mov
iret
ficom
mov
push
xlat
scas
das
jp
xchg
repnz
leave
cmp
dec
out
dec
into
out
out
ja
xor
adc
jno
(bad)
pushf
lds
fidivr
mov
iret
inc
mov
mov
xor
icebp
cwde
mov
dec
add
or
cmp
loop
push
loop
mov
jae
loope
xor
sub
in
mov
shl
push
adc
cs
xor
(bad)
iret
fprem
es
(bad)
push
movs
loop
les
xchg
stc
inc
loop
sbb
imul
mov
loop
push
jge
push
jnp
mov
int
dec
jo
outs
aad
lods
repnz
jecxz
daa
pop
mov
lock
and
jmp
and
fisubr
jecxz
push
sub
inc
gs
mov
fadd
jl
les
inc
scas
push
jmp
sbb
inc
stc
loopne
(bad)
jbe
lods
fcmovnb
ret
fcomp
popf
cmp
jge
pushf
sbb
cmps
jmp
fwait
pop
mov
(bad)
jns
mov
mov
lahf
jnp
cld
cmps
repz
into
adc
and
std
imul
pop
shl
(bad)
(bad)
out
mov
dec
jg
aas
js
fwait
xlat
add
ins
repz
sub
dec
pop
test
nop
daa
psrlw
test
ss
mov
mov
out
pop
pop
fdivr
jmp
add
mov
std
enter
rcr
data16
leave
aad
(bad)
imul
call
(bad)
jbe
mov
popa
jnp
movs
and
mov
push
ds
adc
hlt
mov
in
cmovno
shl
sahf
xor
mov
or
ret
ss
adc
pushf
inc
or
mov
xor
data16
dec
or
fdiv
popa
jnp
lock
cs
fstcw
aaa
mov
dec
and
int3
outs
dec
push
test
push
add
jbe
push
dec
movs
inc
out
ror
mov
lods
les
mov
pushf
mov
jmp
into
iret
inc
loope
imul
repz
nop
in
fst
cmp
movs
pop
loope
mov
pop
stos
pop
push
in
push
sub
ret
outs
test
xor
outs
sar
rcr
cwde
movs
cwde
push
mov
xchg
stc
and
cwde
mov
stos
push
xchg
pop
inc
sub
sub
sub
stc
sbb
add
jns
fcmovne
or
outs
cmp
adc
pop
retf
popa
test
shl
fisttp
imul
pop
xchg
mov
xchg
jne
adc
jbe
mov
mov
nop
sub
mov
jb
movs
fnstenv
xchg
jae
cmc
cmc
sub
or
pop
imul
fadd
loopne
call
dec
sub
sbb
pop
pop
ret
xor
ror
cmp
(bad)
lock
inc
inc
sti
push
jno
xor
imul
jns
or
push
sub
aam
jbe
pop
scas
xor
xchg
fs
hlt
adc
push
int3
jbe
arpl
jne
pop
stos
sbb
shl
xchg
add
push
aaa
sub
daa
dec
(bad)
push
rcr
cwde
or
je
imul
push
mov
ret
jmp
(bad)
mov
in
mov
dec
or
retf
clc
shl
cdq
repnz
lds
and
jp
inc
test
iret
jb
loopne
cmp
inc
jbe
push
fsub
das
and
aas
jnp
int3
jae
mov
test
std
push
pushf
sti
call
jge
mov
mov
out
xchg
lock
jl
cmc
enter
loop
jns
dec
jo
arpl
iret
sub
xor
mov
xor
lods
adc
add
inc
int
int
pop
mov
xchg
je
mov
mov
daa
test
push
addr16
je
aam
pop
aas
neg
out
mov
fs
ja
sub
jmp
(bad)
mov
icebp
dec
sub
shl
add
stos
mov
mov
jbe
jecxz
inc
dec
jp
mov
inc
xchg
mov
push
std
push
cmp
pop
ins
sti
push
das
push
popa
jle
cmp
mov
cmp
dec
push
aam
or
cmc
adc
aas
jmp
outs
cmps
call
(bad)
out
into
ficomp
out
jg
jo
fdiv
jp
(bad)
ins
clc
or
call
fbld
test
adc
lods
out
xor
inc
in
pop
stos
mov
addr16
cdq
push
jno
les
push
call
xchg
out
cmp
clc
fild
gs
(bad)
jae
imul
pop
cmps
call
xor
pop
or
sbb
sub
pop
fisubr
loopne
or
(bad)
popa
out
mov
(bad)
lods
cmps
fisubr
stos
aam
or
pop
daa
mov
ret
sub
xchg
add
sahf
push
out
jnp
stos
(bad)
pop
js
push
lea
sbb
addr16
jl
sub
xchg
jb
xor
clc
pusha
mov
bound
rsm
mov
in
cld
and
fdivrp
sbb
mov
bound
or
out
jmp
adc
mov
pop
pop
movs
mov
xor
jae
add
scas
test
or
ftst
inc
stos
cmc
int3
ror
in
pop
icebp
(bad)
shl
mov
mov
das
popf
sti
mov
jmp
int3
xor
lock
xchg
pop
or
pusha
jb
out
adc
mov
cmp
ret
fmul
xor
mov
(bad)
(bad)
iret
ins
add
pop
lea
js
cmps
mov
loope
iret
daa
push
js
inc
lods
jo
sub
ret
mov
ret
xchg
xor
es
js
inc
bound
loope
xchg
mov
lock
adc
loope
ror
jl
movs
lods
mov
mov
inc
mov
dec
stos
adc
mov
scas
jecxz
daa
ins
js
shr
sahf
xchg
loope
out
pop
xor
aad
push
mov
popf
mov
adc
outs
xchg
ret
mov
cmps
stos
sub
loopne
popf
int
div
jns
mov
mov
(bad)
(bad)
test
fimul
rol
or
pop
loop
and
in
into
ret
jmp
int3
sub
shl
outs
aaa
xbegin
test
cdq
mov
gs
mov
data16
pop
js
jmp
cdq
loop
xchg
div
mov
fld
jae
(bad)
xchg
sbb
iret
push
mov
adc
lea
pop
jge
inc
clc
popf
out
mov
lods
xor
xchg
aad
mul
cmp
icebp
inc
inc
push
call
mov
push
mov
test
scas
cmps
adc
mov
mov
push
inc
std
ins
in
movs
jnp
jmp
loop
jnp
sahf
cmps
retf
xor
std
mov
mov
rcl
aas
ja
mov
jmp
mov
mov
xor
xchg
shl
sub
mov
pusha
(bad)
adc
loopne
cmp
(bad)
jns
xchg
xchg
sbb
in
(bad)
retf
cli
sub
jmp
aas
repz
push
xchg
out
jno
call
pop
retf
adc
xchg
sub
test
jmp
push
xor
scas
mov
inc
mov
xlat
pop
neg
sub
push
cdq
and
dec
mov
dec
adc
adc
pop
xor
xor
iret
dec
pop
mov
syscall
out
out
(bad)
icebp
fmulp
and
repz
sub
ds
imul
push
pop
mov
popa
scas
inc
push
das
push
pushf
xor
fidiv
jl
lock
pop
mov
xor
or
pop
mov
leave
mov
test
pop
cmp
and
push
jl
sub
mov
push
mov
out
lods
sub
addr16
mov
in
mov
mov
jecxz
outs
out
pop
fsub
fcom
or
xor
xor
fbstp
push
mov
push
fs
aad
ins
fldenv
mov
push
repnz
pop
imul
push
pushf
lods
enter
into
push
lods
cld
in
in
inc
pop
lea
mov
rcl
call
mov
std
pop
jg
push
sbb
fcmovbe
fld
dec
clc
test
mov
push
xor
push
jecxz
adc
sub
into
or
iret
pop
scas
lahf
stos
aas
or
cwde
cdq
pop
(bad)
stc
icebp
out
mov
sbb
jp
jl
in
sti
iret
sub
sti
sbb
mov
pop
jmp
pop
and
jmp
pop
outs
cmp
je
aaa
fcos
dec
(bad)
pop
or
(bad)
lods
js
sub
cmp
adc
xchg
push
(bad)
jge
mov
cmps
sti
jo
and
cmp
cwde
dec
aam
push
dec
dec
jp
mov
mov
retf
adc
movs
icebp
adc
sbb
jo
mov
sub
std
shl
(bad)
loop
aas
shl
stos
out
push
add
pop
fs
adc
(bad)
sti
pusha
xor
pop
push
loop
cmp
pop
imul
jmp
xor
mov
pushf
pop
retf
(bad)
push
sbb
out
push
mov
out
out
pop
push
jne
add
outs
jp
mov
push
imul
jns
fiadd
sub
cld
jmp
mov
push
das
out
pop
dec
adc
xor
outs
pop
inc
cmp
add
fldcw
or
inc
cmp
rcr
ds
cmp
xor
xor
or
cmp
js
jb
or
jle
je
addr16
lock
rol
dec
mov
pop
mov
cmp
mov
jnp
inc
and
out
in
mov
pop
mov
imul
mov
test
pop
sub
jle
mov
mov
ins
stc
lea
jns
push
and
loopne
add
jmp
cmp
stos
pop
into
(bad)
pop
shr
cmc
mov
lahf
lds
jl
sar
scas
aad
jae
retf
push
out
mov
or
pop
retf
jo
or
jmp
je
stc
cmps
mul
fsubr
ss
lahf
add
push
push
pop
loop
in
(bad)
leave
xchg
xchg
(bad)
outs
cli
mov
dec
add
sub
into
fsubr
pop
mov
lods
xchg
lods
and
adc
std
clc
jb
inc
xchg
push
sbb
loopne
nop
add
xchg
daa
mov
pop
ret
out
loope
mov
mov
sub
retf
ds
in
pop
push
ror
imul
cmp
jb
dec
leave
mov
and
push
(bad)
jne
mov
popf
xchg
popf
ja
aas
jne
(bad)
jl
or
mov
jno
fmul
in
iret
pop
adc
push
sahf
cmps
das
hlt
fmul
arpl
or
add
fnsave
mov
mov
in
pop
mov
pop
not
lods
clc
enter
jnp
pop
jbe
pop
imul
ins
or
and
xor
or
enter
cmp
test
sbb
in
clc
aam
sub
xchg
mov
inc
xor
cmp
bound
loopne
jns
pushf
pop
sbb
mov
push
push
into
sbb
xor
mov
lock
push
shl
popf
xchg
sbb
jge
mov
sbb
and
ret
repz
ror
pop
push
test
dec
inc
retf
pop
loope
mov
stos
gs
rcl
jecxz
retf
add
xchg
mov
jns
call
icebp
leave
dec
out
jb
mov
jne
mov
mov
ss
into
test
cs
repnz
xchg
sti
mov
dec
retf
or
aas
movs
cdq
nop
repnz
in
mov
push
pop
ror
jns
sbb
in
mov
push
jle
pop
and
pop
cmp
sub
dec
pushf
nop
repnz
or
aas
and
jns
mov
dec
stc
dec
sbb
adc
push
aad
iret
cmps
jmp
mov
(bad)
arpl
mov
jae
ret
cs
mov
mov
push
xchg
cmp
mov
push
iret
loopne
test
loopne
pusha
mov
or
js
push
xchg
(bad)
div
out
push
push
add
loope
loopne
neg
jmp
lods
sub
(bad)
sbb
add
frstor
cmp
int
cs
xlat
cmp
retf
xor
popf
sbb
adc
out
pop
mov
in
lea
mov
and
pop
pop
inc
jp
dec
dec
cli
mov
jp
rol
into
rol
bound
dec
enter
pop
xchg
mov
jecxz
xlat
cli
inc
(bad)
push
hlt
jbe
jbe
adc
pushf
xlat
sub
sbb
arpl
xchg
ficom
mov
pop
xchg
mov
loopne
jb
sub
mov
sub
call
shl
lds
sub
mov
sahf
iret
outs
sub
fld
and
into
xor
cwde
(bad)
and
pop
test
jle
fcom
data16
int3
mov
push
int
push
adc
dec
xor
sub
push
aas
fdivp
add
pop
in
mov
or
aaa
out
les
jb
inc
into
mov
mov
fwait
xor
lds
outs
mov
das
add
je
shr
mov
popf
ret
rol
xor
es
fld
daa
xor
hlt
mov
xchg
jnp
xor
xor
jae
jg
cmp
mov
lahf
jbe
mov
cmp
xor
sub
mov
retf
mov
pop
xchg
ss
lahf
out
lods
lods
(bad)
cmc
rcl
test
ret
ret
mov
inc
into
add
sti
cmps
repz
js
inc
jns
jg
in
xchg
xchg
jle
pop
mov
mov
sub
mov
adc
inc
out
jmp
sub
icebp
repz
aas
pop
push
mov
jl
repnz
push
iret
mov
pop
or
pushf
cdq
movs
nop
mov
out
mov
add
mov
push
in
fimul
mov
(bad)
jge
cmp
rcr
cmps
test
pop
push
ror
adc
imul
movs
dec
das
cld
ins
sub
xor
(bad)
push
pop
pushf
xor
fild
repz
repz
imul
mul
add
jg
push
dec
mov
lods
jle
fisub
or
push
sub
sbb
jmp
popf
push
sbb
or
out
sub
xor
sbb
fisub
fucomp
lock
je
jg
adc
cmps
mov
push
mov
jbe
les
outs
inc
jp
jns
push
fidiv
xor
mov
and
sub
stos
mov
rcr
mov
xchg
ret
(bad)
test
fs
lahf
aad
jp
pop
cmps
out
jecxz
xchg
mov
aas
jmp
fmul
dec
pop
mov
inc
jl
loopne
push
ins
push
out
cs
mov
sbb
iret
out
cmp
mov
jae
vmovhps
xor
push
push
push
jns
cli
scas
es
lock
add
adc
xchg
retf
xor
test
cmp
sti
jmp
jmp
ja
cli
mov
lahf
(bad)
push
mov
(bad)
dec
xchg
or
cmp
mov
icebp
dec
ret
jbe
jbe
std
repz
ror
push
adc
loopne
or
dec
pop
cmp
xlat
adc
inc
int
and
outs
scas
es
repnz
adc
or
jg
popa
test
adc
pushf
xchg
add
xor
xchg
and
dec
adc
or
(bad)
das
mov
aam
movs
call
daa
mov
das
pop
(bad)
daa
push
push
jne
cmp
mov
mov
inc
cmc
add
dec
pop
or
retf
adc
fist
std
test
pop
mov
mov
aam
mov
neg
sub
mov
jb
adc
mov
out
sub
xor
xor
loope
jns
add
jmp
in
out
pop
mov
cmp
and
or
push
cmp
leave
jno
ja
repnz
adc
cmp
and
ins
xchg
shl
movs
inc
cmp
sbb
xor
inc
pop
loopne
mov
mov
lds
add
sub
ficomp
jno
and
call
imul
test
mov
cmp
cs
inc
ins
mov
jp
mov
xchg
lahf
push
or
xor
fcom
js
xor
sub
rcr
std
and
cs
inc
pop
inc
sbb
add
bound
mov
ins
xor
fisttp
or
push
fcomi
popa
push
test
sub
mov
jno
cmp
aaa
lds
aas
cmp
vphsubwd
pop
test
jle
sbb
jmp
mov
into
dec
add
ins
ret
not
mov
or
inc
gs
idiv
mov
dec
fwait
mov
jbe
jg
mov
test
jbe
sbb
and
les
add
retf
push
pop
ss
push
jo
and
xor
stc
push
call
lods
popa
in
nop
mov
xor
adc
push
dec
je
xchg
jno
mov
hlt
shl
adc
(bad)
cmp
ret
cdq
loop
stos
xchg
xor
outs
test
dec
add
dec
sbb
mov
fsubr
mov
sahf
sti
jbe
jp
push
cmovne
rcl
in
(bad)
pop
jmp
cmp
hlt
ss
mov
out
js
(bad)
jmp
in
movs
xchg
xor
inc
test
dec
pop
repz
jb
imul
sub
inc
in
dec
and
out
(bad)
sahf
sbb
retf
or
in
cmp
in
xor
add
aam
leave
mov
and
rcr
jmp
add
jno
jb
push
shr
stos
gs
jle
mov
cld
lock
fdivr
rcl
rcr
rol
out
jno
push
aaa
aas
adc
les
ja
sub
jp
in
test
mov
mov
sub
or
push
mov
icebp
pop
cmp
repz
loopne
sbb
cmp
outs
lods
and
test
pop
dec
fdiv
adc
jge
lea
mov
sub
xchg
xor
aas
fisttp
hlt
rcr
or
dec
push
fiadd
je
dec
ret
sti
sub
pop
test
add
pushf
(bad)
pop
adc
das
test
xchg
nop
push
pop
add
jle
xchg
push
inc
mov
mov
fstp
jle
ret
sar
add
ror
dec
jp
scas
ss
cwde
jne
sti
cmps
cwd
mov
packsswb
or
bound
adc
mov
out
fnstenv
ja
test
or
pop
cwde
cmc
fs
sub
pop
xchg
push
inc
push
push
mov
jp
movs
xor
xor
cdq
mov
(bad)
push
mov
(bad)
sub
cmp
pop
pop
pop
mov
mov
gs
mov
cmp
sub
movs
(bad)
push
pusha
leave
mov
push
mov
push
inc
ffreep
out
pop
icebp
sub
je
push
inc
mov
(bad)
sar
lods
pusha
stos
pop
std
scas
lahf
jbe
ins
cmp
sbb
imul
push
push
push
jg
stc
or
fsubr
outs
sahf
fistp
into
retf
dec
pop
arpl
ins
xor
out
lea
int
mov
mov
mov
dec
(bad)
cwde
xchg
xor
push
sub
push
sbb
loope
sbb
test
add
xor
dec
xor
sbb
icebp
mov
sti
in
push
mov
(bad)
cmp
pop
ret
dec
mov
minps
sbb
jns
inc
into
mov
icebp
pop
xlat
sub
push
mov
pop
mov
adc
(bad)
cmp
xor
adc
adc
fs
fistp
scas
rol
jl
push
shr
dec
dec
inc
(bad)
sub
in
push
fistp
retf
sbb
push
pop
pop
and
imul
pop
xchg
sbb
out
mov
lods
ficom
scas
cmp
pop
retf
dec
and
mov
aad
inc
jnp
adc
jp
pop
lahf
call
push
(bad)
sbb
xchg
cmp
push
enter
pop
pop
inc
icebp
mov
popa
pop
call
mov
xor
in
adc
mov
sti
cdq
popa
aad
hlt
pop
mov
pop
sar
arpl
sti
sbb
popf
cmp
cmp
or
push
xchg
mov
loop
inc
out
lahf
pop
call
mov
jecxz
shr
repz
out
xchg
jmp
fsubp
pop
ja
jge
adc
jbe
mov
scas
cdq
into
(bad)
pop
add
(bad)
cmp
cs
cmc
jnp
daa
or
ja
imul
in
add
aaa
adc
xchg
jge
inc
pushf
(bad)
ja
into
lds
sbb
jl
sbb
int3
mov
mov
fild
push
jae
jnp
jge
cmp
jecxz
shl
adc
test
or
adc
ret
cmp
ins
push
outs
or
test
or
std
mov
repnz
stos
(bad)
fld
aad
sbb
bound
aad
jl
mov
test
dec
in
sbb
and
adc
mov
sbb
stos
xchg
out
(bad)
fild
pop
jmp
stc
imul
sar
fcom
imul
pop
push
dec
rcr
clc
sti
sub
xor
div
adc
push
ficomp
jecxz
mov
jmp
(bad)
xor
jb
jecxz
push
adc
ror
lock
outs
popa
pushf
lods
push
xor
out
aam
inc
stos
pop
jo
jmp
jns
mov
add
fcomp
mov
lods
pop
jb
sbb
inc
outs
mov
pusha
xor
cmc
arpl
or
inc
retf
(bad)
cmps
mov
scas
test
sub
stc
sar
sub
cmp
jecxz
xchg
nop
sbb
fcmovnb
pop
gs
(bad)
push
iret
in
cmps
(bad)
or
mov
imul
push
push
jne
rcl
jge
lds
sbb
mov
js
adc
jg
loop
sbb
mov
dec
scas
dec
mov
inc
xor
sbb
lds
arpl
aaa
mov
out
les
std
jmp
xchg
or
mul
aam
test
inc
in
dec
pop
jg
aas
imul
cmp
mov
cmp
or
sbb
mov
add
or
lods
xchg
jnp
cli
ret
jmp
scas
popa
pop
xor
in
inc
pop
xchg
jae
fbstp
addr16
mov
in
sub
out
test
es
xchg
sub
fdiv
jmp
or
sti
fcmovnbe
mov
fstp
div
std
bswap
jg
std
cdq
call
cmp
into
sbb
aam
jo
test
mov
pop
xor
pop
push
sbb
(bad)
jno
xchg
aam
push
cmps
sti
clc
pop
mov
scas
(bad)
addr16
aas
clc
jg
pop
push
xlat
push
fcmovb
aas
std
or
pop
fcmovb
push
outs
mov
dec
arpl
dec
dec
stc
lods
fbld
mov
push
movs
std
cld
test
cmp
sar
mov
xchg
add
jnp
pop
xor
jl
jecxz
cmps
mov
in
sbb
div
push
out
mov
cmp
xchg
stc
test
iret
sbb
pusha
add
ins
neg
out
mov
scas
test
adc
and
retf
ja
ins
sbb
js
inc
lods
sub
mov
sbb
or
push
(bad)
jmp
aaa
scas
jnp
lods
cwde
mov
in
mov
jnp
mov
mov
dec
mov
(bad)
retf
push
push
cld
mov
xchg
cmp
push
sub
data16
aam
mov
aaa
mov
inc
xchg
inc
inc
jb
mov
daa
ins
or
xchg
pop
jecxz
jle
dec
test
sbb
jge
outs
out
sub
enter
dec
dec
in
pop
dec
stos
(bad)
jnp
push
dec
sbb
lds
movs
fld
arpl
jae
sar
dec
add
push
retf
dec
pop
jne
out
adc
mov
or
pop
fwait
rcl
aam
jge
aam
or
scas
jne
movs
xchg
outs
retf
and
aad
mov
test
rol
sbb
jae
arpl
jns
loope
das
out
adc
cmps
mov
mov
fnstenv
pop
mov
pusha
out
mov
dec
cli
fwait
sahf
jge
pop
lea
ret
imul
imul
popf
lds
sub
lods
loopne
mov
ret
xor
xor
jae
and
push
dec
xorps
adc
(bad)
cld
xchg
rep
into
aaa
popf
sbb
cmp
(bad)
xchg
mov
push
xor
test
pop
fist
sbb
mov
call
mov
out
dec
scas
in
fdiv
or
leave
imul
mov
lahf
inc
push
je
scas
pop
push
push
mov
adc
(bad)
jb
cmps
sub
mov
mov
int3
xchg
cmp
(bad)
in
sbb
add
jle
movs
add
add
out
ss
sub
call
xor
cs
outs
fwait
loop
test
loope
sbb
push
cwde
(bad)
int
sbb
icebp
ja
dec
in
loop
jg
or
pop
loopne
and
dec
push
push
shr
or
dec
inc
and
pusha
xchg
adc
in
shl
retf
adc
push
mov
xchg
xchg
jmp
sub
hlt
dec
cli
stc
mov
xor
adc
lds
iret
push
into
(bad)
adc
pop
(bad)
arpl
xor
cmp
retf
push
dec
mov
test
les
out
fidivr
sbb
inc
outs
ins
inc
test
dec
mov
cmp
xor
arpl
sub
pop
push
(bad)
jge
xchg
stos
xor
push
or
lahf
cwde
(bad)
sti
inc
ret
jne
inc
sbb
adc
sbb
rcr
(bad)
sbb
jmp
lock
rcr
inc
sbb
ins
rcl
cmp
and
push
psrlw
xchg
mov
call
scas
call
aam
xor
mov
mov
stc
jbe
fcompp
test
pusha
sar
dec
dec
xor
mov
fistp
mov
dec
pushf
in
fnstcw
push
out
in
fwait
daa
mov
loop
pop
pop
inc
test
jbe
jne
and
les
test
out
outs
and
out
adc
scas
cli
test
stos
dec
loope
mov
cld
push
ret
(bad)
nop
jo
cmp
or
cmp
mov
scas
jp
dec
(bad)
dec
in
and
inc
test
push
push
ds
xor
stos
pop
(bad)
repnz
mov
lahf
inc
test
mov
mov
mul
cmp
or
aaa
xchg
xor
adc
push
jnp
pop
jns
jp
sbb
jecxz
xchg
push
mov
mov
jb
inc
push
jnp
jae
(bad)
dec
outs
test
shr
and
mov
push
mov
test
pop
out
jmp
and
push
gs
popf
inc
out
mov
dec
jmp
das
xor
call
xor
stos
xlat
popa
adc
movs
sti
mov
clc
mov
shl
xor
fmul
pop
lods
fs
es
cmp
dec
mov
(bad)
in
jae
mov
test
lods
div
xchg
sub
les
and
mov
je
stos
xchg
pushf
xchg
jo
and
xchg
and
rol
jle
ins
fdivr
out
cwde
lds
movs
pushf
jnp
pop
fsubp
cmp
call
jp
and
mov
(bad)
sbb
fstp
(bad)
hlt
cmp
inc
leave
test
jns
mov
push
inc
push
sub
mov
outs
scas
bound
xchg
push
das
cwde
sahf
jecxz
dec
cmp
out
dec
and
jbe
ret
je
inc
loop
int3
xlat
cmps
aad
lds
mov
repz
cld
out
stos
sti
pop
mov
push
ja
and
popa
cmp
(bad)
adc
sbb
fucom
(bad)
stos
retf
xchg
gs
mov
jne
cmp
push
into
xchg
xchg
jle
or
inc
push
mov
inc
ins
cmp
mov
test
inc
adc
inc
(bad)
lods
sbb
or
and
int
mov
jle
sub
sbb
daa
retf
pop
int3
test
xor
xor
frstor
arpl
popa
mov
cmp
push
sbb
cdq
dec
dec
pop
fistp
ror
imul
pop
mov
push
cmp
aad
hlt
mov
aam
pop
out
call
dec
out
repnz
gs
into
adc
aaa
aaa
cmp
xchg
xor
lea
daa
sub
shr
xchg
adc
jo
(bad)
jmp
leave
adc
cmp
addr16
inc
(bad)
jns
test
out
out
addr16
movs
cmp
in
pushf
pop
xor
jae
fistp
xchg
addr16
lahf
xchg
sub
cwde
mov
jle
int
xchg
(bad)
fwait
loopne
jb
test
js
xor
add
mov
outs
fist
mov
stos
xor
jne
leave
fwait
sbb
pop
ss
dec
or
loop
inc
or
mov
or
dec
les
cwde
lods
call
lods
lea
aad
imul
and
repz
push
out
leave
lods
mov
jmp
or
cwde
out
leave
(bad)
js
xor
out
jle
data16
mov
int3
mov
pop
mov
mov
sbb
pop
rcr
test
mov
push
les
xor
jmp
mov
pop
jg
pushf
xlat
and
scas
xor
es
or
pop
imul
sub
(bad)
jne
xchg
stos
fmul
scas
div
mov
clc
xor
cdq
lock
out
adc
mov
jo
pop
aad
push
ret
jne
sar
out
or
sbb
iret
push
addr16
ret
xor
push
int3
push
jo
sbb
add
pop
fcomp
mov
popf
and
jp
pop
sub
cmp
cmp
ja
arpl
cmp
pop
out
test
ret
pop
int
int
(bad)
xchg
mov
popa
mov
lar
mov
pop
xor
sbb
(bad)
leave
ins
movs
adc
imul
mov
fldenv
ret
test
xor
imul
loope
inc
lods
std
data16
xchg
sub
cmp
sahf
mov
out
dec
ds
mov
jmp
mov
push
push
dec
repnz
std
mov
(bad)
cmc
jle
adc
dec
xchg
loopne
cmp
xchg
cwde
sbb
gs
adc
and
adc
cmp
jg
fsubp
pop
adc
cld
inc
inc
dec
cld
stc
shl
fnstsw
jl
jb
adc
xor
adc
or
sahf
xlat
std
test
leave
add
sar
jmp
push
mov
mov
push
jb
loope
mov
enter
push
(bad)
xchg
sub
dec
arpl
repz
(bad)
mov
je
xor
ror
(bad)
(bad)
ret
ja
lea
jg
jle
ret
xlat
mov
sub
inc
es
mov
pop
inc
dec
jl
into
jmp
mov
(bad)
jb
jo
arpl
push
fs
int3
mov
not
addr16
bswap
int3
push
and
(bad)
iret
lea
and
xor
gs
gs
call
cmp
inc
mov
xor
sti
out
adc
jl
add
in
pop
mov
jne
fisubr
jo
xchg
jp
push
cmp
out
cdq
js
call
das
loopne
not
lahf
inc
lock
sahf
es
mov
mov
jmp
dec
cmp
das
sahf
and
les
repz
les
icebp
dec
loop
scas
std
adc
mov
jecxz
adc
popf
jle
js
push
jle
cmp
jb
icebp
shl
not
paddw
outs
mov
sar
and
xor
inc
(bad)
dec
xchg
je
enter
leave
fdiv
jmp
adc
dec
daa
cdq
addr16
in
pop
cwde
push
mov
pop
(bad)
mov
out
inc
icebp
cmp
cmc
adc
aad
adc
aaa
adc
mov
pop
push
test
mov
in
cmp
fs
pop
stc
in
test
xlat
pop
and
stos
ret
xchg
aaa
jne
jo
adc
fidivr
jecxz
in
stos
adc
idiv
int
loop
stos
mov
out
mov
mov
add
daa
into
out
not
xlat
pop
retf
aam
dec
mov
inc
pop
into
cdq
push
(bad)
cli
push
sbb
mov
mov
nop
aas
retf
push
jge
stos
fiadd
stos
xor
leave
fisub
dec
std
retf
sub
pusha
bound
mov
xchg
jmp
jae
out
enter
xchg
pop
jno
js
iret
push
movs
jae
lds
fsub
jge
jno
sub
in
inc
icebp
js
mov
adc
fisttp
xchg
fucomip
(bad)
in
rcr
xor
movs
mov
jg
(bad)
sti
xchg
xchg
jno
psllq
in
sbb
repnz
sbb
fwait
loop
adc
(bad)
adc
fcomp
inc
push
into
mov
scas
out
mov
mov
xchg
jmp
mov
or
mov
mov
sub
ins
iret
xor
mov
scas
adc
out
xor
cld
cmp
inc
lods
mov
xchg
fbld
outs
(bad)
int
mov
cmp
or
cmp
enter
je
arpl
mov
mov
mov
sub
jecxz
je
outs
xor
ret
jmp
adc
jecxz
aad
dec
iret
pop
dec
pop
cdq
jmp
pusha
add
movs
and
mov
push
js
in
fs
add
outs
jle
lods
(bad)
test
cmp
adc
sbb
ret
pop
pushf
int
std
dec
mov
pop
jle
jmp
or
pop
addr16
jb
add
or
in
loop
mul
(bad)
loope
(bad)
fstp
xchg
es
js
mov
div
ins
dec
cmp
jae
cld
ror
fild
cdq
sub
fist
push
(bad)
mov
icebp
jnp
in
jle
in
dec
mov
adc
mov
xor
lahf
sub
sti
cmp
sub
dec
xor
jg
add
inc
loope
bound
gs
lods
inc
xchg
adc
push
xchg
pop
inc
in
mov
mov
jae
popa
outs
call
xchg
jmp
push
push
push
push
add
add
xor
fnstsw
out
sbb
daa
inc
movs
sbb
mov
mov
jae
stos
xchg
(bad)
mov
push
(bad)
ds
lods
sbb
outs
outs
mov
hlt
arpl
mov
out
mov
push
pop
push
dec
in
sar
rcl
mov
ins
in
cwde
sub
jle
mul
or
enter
sub
mov
leave
stc
out
cdq
ins
push
mov
cmp
sub
push
sub
and
xchg
push
cmc
shr
xchg
test
xchg
adc
cmp
pop
std
(bad)
pushf
sub
push
ret
fbld
sub
ins
push
dec
cmp
mov
mov
adc
mov
pop
test
inc
pop
fistp
arpl
jbe
sub
scas
push
in
sub
sar
add
jp
shl
cmc
gs
mov
div
mov
jns
add
xor
cmc
mov
shr
jmp
sahf
pusha
gs
das
xchg
or
jecxz
jecxz
enter
addr16
arpl
dec
popa
xlat
out
mov
outs
jmp
cmp
out
test
xor
repz
inc
rol
pop
mov
scas
daa
outs
ficom
mov
cmps
fnsave
icebp
stc
mov
push
out
mov
mov
mov
enter
pop
mov
out
cmp
cld
lods
adc
pop
loop
rcl
inc
jle
mov
sub
(bad)
dec
(bad)
jl
lods
sbb
push
xchg
(bad)
jmp
cmc
addr16
mov
jg
jmp
or
stos
ficom
(bad)
xlat
sar
dec
pop
es
jno
retf
add
cld
test
ja
pushf
daa
pop
and
test
aas
adc
ret
cmp
inc
and
imul
in
jecxz
test
sti
fisub
in
sar
es
pop
jg
in
sti
push
and
pop
jle
nop
rep
shl
push
pop
fild
xchg
mov
stos
sub
cwde
jp
movs
sbb
xchg
xchg
add
in
xchg
cwde
imul
test
not
mov
jnp
xchg
cli
cmp
jl
imul
(bad)
push
adc
sub
pop
pop
xor
sub
test
lods
sub
fwait
inc
jns
and
mov
scas
loope
jbe
push
push
lock
and
loop
xor
push
or
jno
xchg
retf
js
sbb
xchg
cdq
cmp
out
mov
shl
enter
leave
repnz
xchg
gs
inc
jo
push
fadd
out
xchg
inc
or
shr
scas
and
bound
adc
dec
aaa
pop
repnz
icebp
adc
in
jmp
or
sub
je
dec
xchg
sub
les
aam
xor
sbb
cmp
sub
pop
ret
in
cmp
lds
sub
push
cmp
cmc
movs
mov
push
inc
(bad)
mov
in
xor
jb
clc
loope
popa
test
mov
push
bound
push
mov
pushf
ja
ret
inc
stos
or
xchg
push
xchg
xor
adc
or
icebp
mov
outs
pop
pop
and
aad
pop
inc
inc
in
sub
fnstcw
scas
jp
xor
imul
les
push
mov
out
lods
dec
mov
mov
mov
in
int3
popa
test
fdiv
push
sbb
adc
iret
out
shl
out
addr16
scas
repz
jnp
and
leave
and
enter
out
daa
cmp
xor
jae
dec
push
pop
mov
les
outs
jnp
adc
repz
les
xor
cmp
dec
outs
xlat
sahf
ret
ins
push
out
fild
xor
hlt
jae
adc
punpckldq
sbb
in
add
scas
pusha
fsubr
cmp
jb
mov
mov
xchg
cdq
scas
xor
(bad)
dec
in
jnp
push
fdivr
push
xor
jge
retf
fidivr
adc
test
adc
fwait
sbb
jbe
pop
xor
je
mov
sub
out
dec
sbb
xlat
xor
stc
push
mov
ja
fsub
mov
test
inc
stc
cmc
push
pop
test
push
ret
or
jmp
repz
loop
jns
pop
movs
and
fdivr
push
push
(bad)
mov
out
jg
imul
addr16
xchg
pop
dec
pushw
pop
mov
mov
lods
xchg
mov
lahf
sbb
xchg
jp
shl
not
out
outs
stc
jmp
das
sub
out
fild
pop
dec
daa
mov
arpl
add
stc
mov
aam
ds
xor
mov
add
in
pop
je
xchg
shl
pop
pop
xor
sahf
into
test
shl
mov
push
int
mov
sbb
adc
xlat
dec
ret
xchg
repz
mov
xchg
repz
in
xchg
repz
cmps
adc
in
enter
jl
mov
int3
inc
xchg
repz
mov
xchg
jno
jecxz
xchg
jecxz
hlt
mov
enter
sbb
jno
aaa
bound
xor
xlat
das
sahf
cmp
stos
mov
pop
dec
outs
mov
mov
and
jns
jo
shr
test
fsubr
std
cmps
jp
fbld
js
jle
call
sub
adc
and
sub
jl
cmp
scas
lods
stos
fwait
dec
in
loop
pop
mov
cmp
inc
or
push
mov
aaa
mov
push
dec
in
stc
cmps
mov
loop
imul
push
pop
jno
xchg
rol
outs
and
jns
(bad)
cdq
mov
ds
jno
mov
cmp
test
push
dec
push
and
mov
cwde
rol
add
bound
out
inc
cmp
lds
mov
sub
arpl
int3
dec
mov
outs
hlt
out
std
mov
jl
mov
push
and
outs
sub
pop
push
jge
shl
ret
std
inc
and
inc
pop
jge
lods
inc
sub
pop
shr
adc
xchg
jno
sub
retf
call
popf
ret
and
imul
add
jmp
push
lock
dec
into
data16
jne
xor
shl
pop
ja
inc
pop
sub
sub
jnp
(bad)
jle
mov
xlat
dec
jge
fcomp
inc
mov
arpl
jmp
cmp
(bad)
mov
pop
call
stc
lods
stos
sahf
pop
push
mov
cmps
popf
cmp
pop
jo
mov
pushf
repz
es
mov
jmp
mov
dec
dec
out
push
or
lods
sbb
das
mov
leave
leave
or
bound
leave
xor
arpl
in
sub
push
movs
jo
xchg
hlt
popf
sub
and
pop
pushf
xor
sahf
sbb
cmps
stos
xchg
cmps
xchg
(bad)
xor
mov
xor
iret
fidivr
int3
cmp
cdq
inc
cmp
dec
std
test
into
enter
out
ins
sub
stos
int3
les
pop
aas
mov
mov
add
out
mov
jmp
push
adc
pop
stos
push
pop
ds
pop
mov
jl
xchg
out
pushf
mov
pop
pop
(bad)
gs
(bad)
repz
sub
pusha
test
xchg
jns
xor
pop
dec
sar
and
movs
call
adc
scas
je
mov
cld
cmps
lea
mul
(bad)
dec
test
xlat
pop
stos
xlat
inc
sub
int
rcr
or
je
mov
sub
lods
je
mov
ror
mov
mov
ss
jle
stc
outs
cmps
push
cmps
cdq
daa
pop
cld
imul
shl
dec
cwde
pop
add
inc
imul
inc
dec
sub
mov
sub
push
enter
jg
repnz
xor
cwde
aad
cmp
daa
pop
push
(bad)
int
fistp
sbb
lods
fidivr
push
icebp
pusha
jbe
loop
ins
push
mov
ret
cmp
and
sub
imul
push
and
out
cmp
jae
sub
xchg
sbb
aas
and
rcl
mov
mov
fwait
pop
xchg
mov
das
sub
jle
out
aad
mov
in
xchg
int3
int3
fisttp
push
mov
lods
imul
push
push
jae
xchg
sub
or
adc
inc
fwait
sbb
inc
cwde
and
call
sub
xchg
pop
cmps
mov
cmp
cwde
inc
mov
out
int3
hlt
cdq
pop
mov
stos
cmps
jb
imul
cmp
sub
pop
call
fimul
mov
and
mov
mov
bnd
test
in
mov
sbb
gs
arpl
ss
sbb
dec
repnz
push
inc
ror
jmp
(bad)
push
xor
mov
sbb
gs
inc
lahf
test
lods
outs
fild
ins
mul
sub
fwait
jns
mov
out
inc
sti
adc
mov
mov
cmc
inc
aaa
mov
add
out
shr
test
jb
aas
fstp
(bad)
jbe
push
pusha
mov
cmp
cmp
ss
aam
js
in
jne
cmp
cdq
inc
mov
sti
mov
jnp
xchg
lods
and
and
icebp
adc
jae
lods
mov
xchg
gs
mov
lds
call
jnp
pop
in
mov
dec
js
rcr
sbb
push
test
mov
scas
shl
iret
fs
mov
xchg
cli
xor
mov
arpl
data16
popa
jge
call
xor
pop
ret
popa
aad
cwde
push
icebp
mov
add
xchg
dec
aas
rcl
fs
mov
sub
gs
pushf
adc
jecxz
add
jns
cs
out
inc
or
mov
sahf
add
(bad)
test
lds
movs
mov
mov
mov
and
mov
mov
cmps
cli
mov
test
dec
dec
jl
aad
daa
mov
shl
and
push
lods
out
scas
std
out
sbb
add
jbe
mov
in
pop
mov
xlat
ss
push
sbb
inc
loop
enter
cmps
dec
pop
jne
or
sub
adc
push
das
add
dec
jmp
dec
jmp
jg
outs
rcl
jns
test
jmp
and
hlt
in
jae
cmp
and
cmp
std
xchg
les
dec
pop
clc
adc
cmps
repz
and
les
shl
mov
cmp
dec
ja
inc
fsubr
ins
lahf
es
je
loope
call
xlat
xor
call
and
mov
aad
and
fpatan
or
xor
fnstcw
je
pop
cdq
(bad)
fldcw
adc
pushf
lahf
das
jl
cmps
lock
and
push
fistp
imul
add
adc
movs
dec
gs
je
(bad)
test
loope
fcomp
lea
sub
adc
cld
mov
(bad)
push
inc
scas
and
xlat
sbb
pop
cmp
push
cmps
cmp
out
fcom
leave
mov
or
movs
hlt
sub
out
inc
mov
xlat
push
lods
scas
jmp
push
loopne
iret
jmp
pop
iret
lahf
shl
inc
je
rcl
test
xchg
mov
mov
xchg
imul
jmp
xchg
push
test
out
bnd
xor
fxch
jmp
xor
lock
iret
fsubr
addr16
aad
(bad)
icebp
dec
pusha
test
leave
mov
sub
imul
mov
loop
ss
mov
ds
aam
sbb
cmp
mov
xor
mov
(bad)
pop
fwait
call
adc
sbb
mov
jmp
mov
mov
arpl
mov
xor
adc
push
das
stos
fst
(bad)
repz
ror
ins
je
lahf
(bad)
pop
popf
aas
into
jg
fidiv
(bad)
cld
aam
test
mov
aaa
outs
sub
jmp
call
pop
jbe
ja
inc
shl
out
hlt
bound
stc
pop
inc
adc
adc
dec
addr16
mov
div
mov
ja
test
rcr
mov
mov
movs
inc
dec
ret
aaa
push
mov
mov
mov
cmp
clc
addr16
or
inc
mov
sbb
mov
sti
sbb
lock
pop
(bad)
pushf
mov
adc
push
das
scas
adc
cmp
in
mov
push
sbb
sar
ret
out
mov
sbb
arpl
push
cmp
retf
mov
dec
imul
stos
mov
push
iret
cmp
mov
in
adc
dec
dec
xchg
mov
and
repz
xor
mov
mov
js
xchg
div
pop
bound
adc
fisubr
out
and
outs
popf
or
pop
and
fnstcw
fstp
add
xchg
ins
in
xor
(bad)
cmp
cld
(bad)
repz
outs
cli
ret
cmp
repnz
push
push
and
fdivr
leave
mov
mov
into
mov
movs
push
(bad)
sbb
adc
loope
xchg
mov
dec
pop
cmp
add
mov
mov
enter
inc
ds
(bad)
xchg
sub
lods
data16
mov
in
es
lods
cld
xchg
jp
xchg
pop
ins
mov
mov
in
int3
movs
pop
stc
jmp
lock
adc
into
pushf
sub
repnz
test
mov
pop
mov
popf
adc
out
and
adc
cmp
stos
push
loopne
push
jae
or
aaa
leave
mov
fadd
cld
movs
fistp
jne
add
retf
stos
aam
push
in
jno
lock
mov
inc
out
fs
mov
hlt
loopne
in
(bad)
and
mov
push
or
outs
sub
dec
in
pusha
cwde
xor
sub
fwait
popa
pop
loopne
mov
or
cmp
cli
mov
int
pop
push
mov
or
mov
mov
lahf
lea
pop
fs
mov
cmp
das
les
(bad)
scas
cmc
pop
cdq
pop
ficomp
add
(bad)
mov
loop
mov
sub
outs
js
imul
addr16
in
addr16
push
push
push
mov
outs
scas
pusha
xchg
repz
xor
lar
push
add
lods
xlat
mov
cmps
sahf
mov
xlat
popa
sub
lock
(bad)
mov
xchg
call
fstp
arpl
fcomp
xor
xchg
cmp
aas
pop
or
push
retf
stos
loopne
mov
mov
cmc
pop
aaa
jmp
fld
mov
cdq
ss
jbe
sub
jb
stos
aad
rcl
std
cwde
mov
sahf
pop
inc
fmul
adc
ret
test
or
mov
scas
mov
test
out
dec
xor
addr16
jno
hlt
jno
loop
movs
sub
addr16
jnp
jge
retf
xor
repnz
mov
fadd
scas
jmp
pop
fmul
loop
test
mov
xchg
cmp
xchg
pop
push
mov
push
clc
mov
mov
add
popa
ins
xor
imul
call
mov
(bad)
test
cmp
cmp
pop
popf
mov
adc
jo
fimul
pop
mov
lea
lods
mov
clc
cmc
pusha
xchg
sbb
sub
fcmovbe
inc
fstp
cmc
pushf
mov
sub
in
scas
iret
mov
cmp
retf
test
jne
scas
jno
into
out
add
icebp
cmc
sub
adc
or
inc
inc
and
mov
jmp
inc
fs
cmp
scas
or
pop
cli
jl
or
je
cmp
retf
std
ret
and
add
stos
pop
mov
sub
sub
inc
pop
mov
mov
push
hlt
add
lahf
sbb
es
movs
xor
jecxz
mov
stos
mov
leave
dec
ja
aas
ja
mov
mov
mov
and
ret
cmp
daa
icebp
jmp
fidiv
popa
jbe
cmp
aad
adc
mov
xor
stos
call
push
jmp
mov
outs
mov
test
loop
mov
std
pop
repz
cmp
movs
mov
dec
ds
faddp
stc
fbstp
add
lods
sbb
stc
mov
mul
out
or
push
scas
push
ds
push
or
test
mov
nop
jp
mov
fdivr
(bad)
aad
clc
jecxz
pop
jg
(bad)
jl
cdq
daa
mov
idiv
and
hlt
shl
push
add
or
scas
pop
popa
push
hlt
scas
mov
aam
pop
mov
mov
dec
fst
clc
int3
xchg
jp
adc
pop
ja
add
sub
(bad)
scas
sbb
pop
jne
dec
cmp
jl
xor
ja
jle
icebp
xchg
(bad)
pop
fidiv
es
mov
fst
mov
sub
pop
dec
mov
push
push
mov
dec
sbb
push
cmp
cld
sti
push
aaa
inc
push
aas
lock
fwait
(bad)
sbb
popa
mov
adc
dec
push
call
sub
(bad)
push
test
mov
and
dec
(bad)
(bad)
dec
xchg
pop
and
pop
imul
iret
inc
jle
rol
jns
ret
fcom
(bad)
push
out
jle
(bad)
cmp
out
inc
and
pop
mov
push
in
adc
inc
sbb
out
das
mov
stos
ja
push
gs
out
cmc
out
mov
dec
push
scas
xchg
push
aaa
inc
scas
xor
add
aad
mov
jl
rol
sbb
xchg
pop
cli
dec
mov
push
sub
push
jae
js
test
addr16
ins
xor
out
mov
out
dec
mov
outs
into
ins
cmp
pop
sbb
outs
jne
xor
dec
mov
inc
sub
fadd
inc
scas
jmp
retf
mov
mov
xor
push
adc
in
or
pop
jmp
sub
jbe
aaa
cdq
outs
test
jecxz
xor
fadd
xchg
fist
test
push
push
mov
movs
rdpmc
inc
mov
clc
mov
ss
mov
in
xchg
and
out
mov
stos
mov
pushf
(bad)
(bad)
jae
test
fdivr
jmp
nop
cmps
cmp
inc
mov
das
jnp
cmp
(bad)
ficomp
fst
gs
dec
(bad)
cwde
in
dec
mov
mov
pop
cmp
add
sar
sahf
test
inc
lahf
lods
test
xchg
push
adc
icebp
cmp
pop
sub
push
dec
mov
mov
sub
es
inc
cmp
(bad)
and
lods
jecxz
cmps
pusha
sub
cmp
add
iret
xchg
pop
cwde
std
dec
test
popf
cmp
daa
add
ret
test
cdq
test
inc
aam
mov
test
or
adc
loop
shl
daa
xlat
push
nop
push
adc
mov
mov
sub
xor
dec
icebp
xor
test
cdq
jle
and
fmul
dec
mov
loope
aas
add
or
rcr
mov
jne
add
jnp
jbe
and
out
fcom
imul
dec
rcl
fist
fld
cmp
jmp
ja
in
es
cli
out
or
dec
lahf
outs
cmp
sbb
cmp
jmp
popf
jge
add
fcom
call
stos
jmp
xor
mov
in
xor
push
fnstsw
(bad)
mov
sbb
jmp
jne
ja
test
mov
add
xlat
xchg
cmc
scas
push
push
jbe
xlat
clflush
mov
sub
and
mov
fnstcw
sub
mov
adc
(bad)
stos
icebp
dec
movs
inc
stc
ins
adc
ds
cdq
inc
ficom
adc
out
mul
inc
or
jb
inc
rcr
daa
mov
sbb
and
sahf
fs
xchg
mul
rcr
daa
pop
pop
ds
out
aas
mov
inc
mov
lock
(bad)
shl
test
mov
sbb
and
push
and
out
push
jo
jmp
push
fst
out
popf
sbb
imul
cwde
or
test
adc
bound
es
enter
or
adc
fistp
adc
call
sar
sub
lods
cld
xchg
jnp
sbb
pop
cmps
add
mov
sub
ss
fnstenv
dec
enter
mov
xchg
lods
pop
push
jle
xchg
sub
sahf
inc
or
sahf
inc
(bad)
shr
bound
arpl
push
(bad)
pushf
rcr
push
movs
xor
mov
dec
mov
mov
pop
bound
call
mov
mov
mov
hlt
and
cmp
popf
and
adc
ret
inc
(bad)
mov
cli
and
sub
dec
rcr
mov
xchg
mov
push
scas
sbb
jo
mov
shr
frstor
push
mov
repz
movs
out
inc
inc
cmp
stc
mov
ins
inc
(bad)
cmps
xor
pop
push
(bad)
mov
ins
cmp
ret
in
mov
in
mov
daa
ret
push
and
and
sub
ror
test
nop
aaa
repz
mov
aaa
mov
jge
cld
outs
leave
popa
adc
mov
cmp
xlat
add
fsubr
jle
mov
popa
fistp
dec
(bad)
pop
sbb
daa
lds
adc
loop
movs
and
not
shl
jl
ficom
call
dec
clc
cmp
rcr
mov
and
pop
lahf
jg
add
lock
data16
ret
adc
(bad)
jg
clc
outs
add
jmp
push
cld
jp
mov
scas
outs
in
add
test
aas
pusha
lods
fidivr
mov
jns
push
rcr
mov
push
pop
ds
cmc
or
mov
sbb
pop
jge
mov
outs
add
jnp
jge
cmp
scas
iret
xchg
xor
or
sub
into
adc
lock
outs
(bad)
pop
shl
adc
pop
shr
jb
nop
ficom
mov
pop
xchg
fwait
pop
cld
dec
xchg
smsw
mov
mov
mov
dec
jae
adc
or
rcr
clc
lods
ficomp
jecxz
fisubr
jae
mov
aad
addr16
push
dec
add
lahf
shl
mov
aas
xor
mov
sub
xor
aaa
jae
xor
pop
cmp
jbe
mov
jo
jle
xor
arpl
stos
in
mov
ja
popa
push
xchg
mov
std
ins
loope
mov
out
fbstp
mov
inc
sub
sub
sub
mov
push
(bad)
jbe
dec
dec
mov
(bad)
mov
test
mov
push
cmp
mov
(bad)
(bad)
inc
xor
jb
(bad)
jb
jae
out
fiadd
adc
xchg
iret
iret
(bad)
cld
mov
jg
sub
jne
(bad)
pop
add
cmp
lods
or
jns
xchg
sbb
int
pcmpgtb
xor
(bad)
fadd
pop
sti
sahf
lahf
mov
jge
xor
cmp
jmp
xchg
sub
mov
cmp
push
cdq
cmps
inc
scas
mov
push
mov
mov
test
or
in
mov
jo
in
ins
sub
mov
stc
bound
ror
sar
inc
cmp
mov
loope
cdq
xor
fcom
jp
mov
or
ss
push
test
std
stc
test
out
jnp
popf
int
in
push
stc
in
cmp
mov
lods
sbb
(bad)
aad
cmp
adc
adc
sbb
dec
out
xor
mov
pop
(bad)
ins
and
call
loop
xchg
cmp
pop
or
lahf
test
ins
popa
iret
sbb
xor
jbe
out
sub
mov
in
pop
into
cs
fisub
sbb
fistp
lock
inc
lods
lahf
adc
xor
add
out
push
push
ins
mov
test
mov
enter
inc
(bad)
call
cmp
push
idiv
jo
gs
dec
jle
push
test
pop
push
lds
lea
in
xchg
clc
ds
push
sub
jmp
into
fst
scas
cmp
jno
mov
mov
dec
fstp
fbld
stc
vorps
out
ficomp
fxtract
add
std
test
jp
mov
(bad)
mov
ins
sbb
dec
xchg
pop
and
push
push
cmp
and
add
jnp
movs
and
ffree
cmp
jp
cmp
mov
mov
xchg
or
jae
rcr
daa
cmp
(bad)
clc
sub
xor
pop
jae
ss
mov
mov
popf
pop
in
retf
push
adc
in
add
mov
(bad)
mov
cmps
push
adc
xchg
sub
xchg
inc
(bad)
jmp
and
jp
jl
(bad)
test
or
push
mov
(bad)
push
outs
imul
sub
jle
dec
push
lock
rcl
xor
add
outs
pop
dec
push
lock
repnz
push
adc
in
cmc
adc
aas
mov
outs
mov
push
adc
out
mov
ret
dec
xor
outs
(bad)
cmp
data16
mov
ss
lock
adc
jnp
mov
add
jmp
out
sahf
out
and
cmps
adc
push
(bad)
out
sbb
pop
cwde
push
cmp
imul
pop
arpl
cmp
idiv
in
dec
outs
cmp
dec
mov
cmp
adc
rcr
imul
int
pop
bound
push
pop
jae
jo
out
dec
jno
pop
test
adc
cmp
xlat
loopne
adc
cmp
cmp
ret
test
mov
pusha
ja
mov
lea
fdivr
xchg
push
and
mov
sbb
push
inc
xchg
adc
cdq
pusha
and
dec
push
fist
xchg
xchg
jne
mov
gs
fstp
push
push
movs
jmp
mov
jb
call
inc
mov
push
cmp
mov
stos
pop
and
fs
push
and
(bad)
cmp
das
xor
aam
(bad)
(bad)
hlt
cmps
popf
fisub
xor
(bad)
xor
and
aad
retf
imul
pop
loope
sub
dec
test
into
shr
(bad)
sbb
jle
mov
outs
xchg
mov
push
shr
adc
fnstenv
cmc
test
mov
sbb
cmp
fild
xchg
xor
jnp
push
adc
popf
ror
push
icebp
mov
mov
in
inc
out
ins
call
cdq
push
cmp
int3
lock
stos
pushf
adc
and
mov
cmc
gs
jle
(bad)
fdiv
cld
lahf
mov
mov
fs
pusha
mov
(bad)
test
aad
nop
adc
jae
sub
push
ror
sti
aad
pusha
neg
mov
jge
xor
ins
inc
and
jae
in
push
outs
outs
(bad)
xchg
not
rcl
push
retf
fidivr
and
mov
mov
leave
sub
xor
ins
mov
mov
in
cmp
push
inc
data16
(bad)
sbb
jns
push
jbe
retf
mov
jbe
loop
mov
aam
out
int
(bad)
jp
div
pop
mov
int
add
ret
or
rcr
cmps
mov
cmp
inc
inc
dec
cmps
dec
cmp
div
xor
int3
xor
fidiv
ficom
popf
ins
mov
arpl
jmp
fimul
pop
sub
xchg
retf
aam
push
in
mov
aas
out
inc
adc
mov
inc
add
out
jno
mov
adc
mov
es
or
mov
jecxz
ja
xor
jmp
push
or
inc
and
shr
mov
cmp
push
mov
rcl
cmc
(bad)
loope
sar
or
(bad)
or
add
dec
push
jns
sbb
mov
shr
and
fwait
inc
scas
dec
and
in
xchg
cmp
mov
push
clc
fwait
inc
mov
fild
dec
push
sti
pop
cmp
xchg
addr16
daa
mov
out
mov
sbb
push
mov
add
mov
push
(bad)
push
mov
mov
cmp
mov
push
adc
push
xchg
mul
ss
and
inc
adc
leave
std
ds
clc
mov
idiv
int3
icebp
imul
jge
loop
dec
rcl
fnstcw
jno
and
cmp
rep
rcr
mov
lock
in
xchg
jecxz
jmp
xor
sbb
mov
push
mov
cld
clc
sbb
call
or
movs
scas
enter
mov
jb
retf
cmp
bound
in
lock
in
jae
push
jne
shl
inc
lods
mul
imul
mov
(bad)
leave
xchg
push
push
jecxz
fnstcw
addr16
or
xchg
pop
les
xchg
sub
push
ins
jge
mov
call
mov
or
dec
dec
push
nop
rcr
test
jmp
std
adc
xor
xor
in
stos
inc
out
adc
dec
scas
mov
imul
dec
inc
and
xor
push
dec
jno
mov
out
lods
jns
mov
inc
popa
scas
dec
daa
mov
xchg
xor
dec
test
push
push
ror
jo
push
push
(bad)
cmp
cmp
push
call
sub
push
lahf
nop
push
lods
(bad)
push
push
lahf
xor
scas
xchg
(bad)
sahf
jb
push
test
int3
mov
popf
xchg
outs
add
dec
jge
loope
sbb
lds
and
mov
test
and
lahf
push
push
into
cmp
in
icebp
dec
out
into
outs
mov
pop
fwait
xchg
xor
sahf
xchg
fidiv
mov
sub
int3
icebp
and
jae
loope
int
pop
in
jno
jae
inc
pop
stc
push
out
jae
retf
ror
mov
out
data16
ds
stos
push
pop
mov
cld
inc
addr16
aam
out
jnp
movs
lock
mov
jp
pop
out
retf
jne
fld
ja
add
std
mov
sub
out
cmp
mov
addr16
cmp
pop
xor
mov
repz
out
mov
ss
adc
mov
jle
dec
jle
hlt
add
or
lea
jle
fdivr
cld
out
sar
push
jge
hlt
(bad)
fdivr
jmp
fstp
aaa
ins
mov
icebp
movq
ret
test
pop
je
xchg
in
test
jae
mov
mov
jmp
dec
(bad)
mov
xchg
shl
mov
das
pop
loopne
dec
das
add
sbb
fimul
das
loopne
inc
mov
fcomp
(bad)
aaa
scas
jg
sbb
test
loope
ror
(bad)
div
lea
(bad)
jmp
clc
cmp
sbb
adc
push
sbb
test
dec
in
pop
ja
das
inc
jle
lahf
fbstp
aaa
sub
dec
(bad)
mov
loopne
mov
xor
jg
addr16
xchg
outs
ret
in
push
pop
mov
out
sbb
push
and
add
in
sbb
xchg
jmp
sbb
and
fimul
fdivr
pop
test
push
mov
pushf
iret
cs
xchg
xchg
inc
mov
xor
inc
scas
outs
inc
out
adc
gs
(bad)
pop
stos
retf
call
push
fmul
test
mov
in
mov
call
jo
test
enter
cwde
push
mov
mov
cmp
mov
mov
iret
addr16
aam
pushf
cmp
inc
scas
xor
mov
mov
mov
jp
shr
icebp
addr16
sub
xchg
add
scas
jno
std
xor
adc
push
jns
test
sahf
pop
aaa
push
mov
int3
bnd
addr16
pop
fdivr
push
cmp
cmp
inc
bnd
lods
dec
xchg
cs
jmp
lahf
push
mov
jno
push
pop
clc
scas
dec
lds
sbb
out
xchg
pop
iret
pop
and
jmp
dec
mov
pushf
loope
push
in
pop
adc
mov
rcr
(bad)
icebp
jae
sbb
pop
mov
add
jne
fld
(bad)
bound
jae
in
fwait
mov
push
cmp
mov
(bad)
pop
sub
(bad)
sbb
push
stc
jns
or
adc
lods
mov
sahf
push
repnz
sbb
stos
sub
sbb
fisub
loop
add
popa
push
push
pop
and
jns
sbb
retf
aam
in
xchg
mov
inc
mov
and
cmp
push
and
call
mov
add
mov
mov
cdq
push
push
pop
dec
bound
add
or
pop
mov
je
xchg
sbb
test
cmc
mov
push
scas
push
dec
test
xor
hlt
inc
test
mov
por
xchg
ins
jnp
adc
push
pop
inc
aaa
stos
adc
lahf
sar
lods
les
and
in
pop
add
mov
enter
(bad)
movs
arpl
ret
aas
out
nop
mov
mov
sub
test
sbb
dec
mov
inc
push
push
mov
mov
pop
shr
cs
sahf
adc
ret
outs
(bad)
pop
push
cmp
aas
loop
outs
gs
push
cmp
loop
loope
loop
or
sub
push
int3
mov
pop
and
xchg
xor
pop
das
mov
mov
push
lock
jmp
jg
mov
sub
mov
scas
jge
rcl
dec
pop
out
bound
xchg
lods
dec
jae
dec
int3
cmp
pop
lahf
and
xor
movs
movs
fild
cmp
pusha
cmps
inc
push
xor
movs
pop
int3
sbb
out
xchg
(bad)
xlat
repnz
stos
inc
stos
dec
xor
fistp
inc
out
mov
push
iret
inc
int
addr16
repnz
mov
jns
ja
adc
(bad)
lahf
int
out
xchg
sbb
inc
hlt
pop
test
mov
adc
push
aad
mov
into
sbb
fs
pop
and
lea
daa
loopne
push
push
sub
lea
inc
inc
xchg
aaa
dec
jne
push
lea
xchg
scas
pop
pop
lds
stc
dec
in
mov
mov
icebp
xor
inc
test
fcomp
leave
mov
cli
mov
imul
push
jle
lock
sub
mov
mov
rol
dec
in
cmc
test
cmc
shr
mov
mov
imul
lods
aas
icebp
std
xor
mov
outs
sti
call
(bad)
call
mov
mov
mov
cmp
in
int3
dec
push
mov
icebp
mov
stos
imul
neg
or
aaa
cmp
push
cmp
fwait
iret
push
aaa
aas
adc
leave
retf
outs
pop
cli
mov
out
int3
iret
das
cmp
jmp
sbb
jge
out
ss
mov
out
cmp
lahf
into
aas
cmp
imul
mov
jo
pop
mov
pop
fisttp
rcl
test
aad
mov
scas
push
mov
mov
cmp
stos
push
lods
jecxz
sti
icebp
pop
mov
scas
ins
fst
mov
add
pop
(bad)
mov
aas
mov
pop
or
jbe
(bad)
in
fdivr
cmp
cld
loope
push
clc
jg
push
push
clc
jg
stos
movs
lock
mov
aas
xchg
ret
jmp
inc
or
add
pop
mov
mov
jg
test
mov
mov
loope
out
mov
mov
loope
ret
loope
(bad)
pop
test
inc
(bad)
xchg
mov
hlt
test
hlt
cmc
es
xor
pop
and
pusha
and
cld
(bad)
cmp
imul
call
jmp
sub
ret
shl
(bad)
jno
pop
imul
cmp
mov
mov
push
lock
and
inc
and
cmps
cmp
mov
mov
push
ror
cwde
xchg
lods
xchg
mov
push
and
mov
sub
js
ror
jmp
dec
fisttp
in
ja
iret
mov
pushf
popa
xchg
rcr
aaa
les
mov
mov
dec
and
jb
pop
cmp
cmp
mov
adc
sti
xor
mov
mov
sbb
stos
jmp
(bad)
js
cmc
sub
pop
sub
sti
and
loop
lods
fisubr
jecxz
movs
retfw
mov
cmp
and
and
movs
and
add
push
fcmovu
and
push
mov
scas
test
push
ficomp
fst
out
pop
rol
push
xchg
aaa
sbb
inc
push
pop
into
test
addr16
ret
shl
cmp
xor
fwait
lea
ret
push
scas
adc
leave
mov
xchg
xchg
pushf
jecxz
jno
(bad)
xchg
out
push
dec
sub
sbb
adc
pop
mov
mov
loope
out
sahf
into
pop
dec
sub
jmp
jl
stos
movs
jle
mov
mov
xlat
mov
cmp
mov
mov
or
push
cdq
shl
in
fs
push
xchg
mov
mov
push
ficom
cmps
(bad)
xor
retf
pop
aaa
xchg
(bad)
and
xchg
mov
cs
jno
repz
adc
aad
push
push
xlat
push
mov
rcr
cdq
ficomp
push
adc
(bad)
pushf
pop
sub
xchg
movs
fdivr
addr16
inc
stos
movs
es
call
movs
sbb
cli
retf
mov
jl
mov
movs
lea
mov
cmc
inc
pop
xor
and
cmps
dec
mov
lea
dec
stos
push
lea
iret
push
bnd
push
mul
cdq
das
int
in
push
dec
mov
rcr
jnp
imul
repz
push
sub
xor
aad
mov
call
mov
xlat
(bad)
and
pop
lock
fstp
(bad)
in
ftst
push
aas
cld
inc
cmp
inc
je
add
pop
mov
out
mov
shl
fs
push
fdivr
ins
cmp
mov
jbe
test
(bad)
mov
push
movs
std
mov
xlat
mov
push
jle
js
imul
mov
adc
mov
adc
icebp
out
clc
fwait
jno
xchg
push
iret
jne
push
iret
cwde
cmp
fst
jns
arpl
mov
xchg
imul
rcr
stos
pop
lds
ss
pop
push
sar
inc
adc
cmps
sub
bound
cmp
into
mov
push
pop
sbb
mov
sub
and
xchg
lock
outs
outs
cs
xchg
sub
adc
mov
push
adc
cmp
pop
pop
out
sbb
dec
mov
fwait
test
sub
aas
mov
mov
lods
popf
push
aad
scas
stos
gs
addr16
pop
mov
jmp
jg
xchg
adc
jmp
inc
icebp
mov
push
mov
dec
out
out
retf
mov
cmps
repz
mov
add
jno
pusha
mov
call
(bad)
in
test
inc
dec
loope
adc
stc
xor
ss
jmp
lahf
push
sti
ds
pop
stos
add
(bad)
les
in
mov
dec
mov
ret
pop
mov
push
repz
jmp
ror
fiadd
in
push
add
sti
bound
in
out
jnp
sti
cmp
xor
cmc
(bad)
int3
lea
jecxz
xchg
push
xor
popa
rol
or
fist
fwait
mov
hlt
fs
xlat
arpl
pop
add
cmp
mov
cmp
push
sbb
call
hlt
das
out
and
int
test
jle
shr
or
cmp
out
inc
mov
hlt
scas
ss
lahf
jl
test
test
jl
push
jmp
cli
dec
movlps
std
jmp
jb
mov
out
dec
inc
jmp
xor
icebp
cmp
mov
(bad)
sbb
pop
pop
mov
jns
inc
jmp
stos
add
pop
xchg
(bad)
sub
sub
push
sar
jmp
scas
sbb
into
lock
xor
xor
(bad)
jo
je
mov
jl
adc
cmp
es
es
arpl
retf
out
cmp
cmp
mov
pop
mov
dec
out
inc
push
jge
cs
add
lods
lock
and
xchg
in
xor
scas
jns
pop
out
jmp
dec
sbb
or
outs
push
in
jl
hlt
sbb
stos
sbb
or
sbb
(bad)
and
jo
loop
and
(bad)
mov
test
dec
scas
mov
leave
daa
mov
out
mov
xchg
jnp
jecxz
ins
popa
das
mov
mov
imul
jns
xchg
cmp
(bad)
ds
into
push
out
mov
pushf
fsubp
mov
pushf
push
into
adc
push
ficom
js
jb
jle
push
jo
sub
cmps
sbb
test
in
imul
mov
mov
stc
aad
jp
xor
out
fstp
fistp
push
mov
and
mov
dec
daa
sub
push
add
jae
pop
test
jg
rol
aas
sahf
mov
jg
push
imul
mov
mov
sar
pop
add
imul
xchg
dec
or
test
ins
fadd
pop
ins
dec
aam
fadd
mov
lea
inc
cmps
retf
fsub
push
xor
js
adc
jnp
inc
or
or
and
sub
nop
pushf
dec
mov
shr
hlt
shl
mov
aaa
mov
mov
test
out
dec
lods
dec
cwde
cmp
xchg
hlt
and
arpl
push
or
int3
inc
xchg
hlt
arpl
mov
jns
and
shl
lods
and
cwde
jnp
xor
and
dec
fisubr
pusha
xor
inc
mov
add
outs
or
popa
dec
inc
mov
js
ret
sahf
push
mov
pop
(bad)
aas
mov
imul
or
jb
jb
mov
into
sub
mov
pop
cmp
stos
mov
hlt
int
sbb
jne
mov
in
(bad)
scas
mov
js
daa
outs
mov
fisttp
rol
mov
xchg
nop
add
xchg
adc
cmp
cmc
sbb
pop
stos
push
and
pusha
sti
arpl
xor
std
aas
or
cwde
hlt
cmp
pop
(bad)
dec
enter
test
fild
xchg
call
push
lods
jle
sbb
dec
jns
or
sbb
mov
adc
cmp
mov
ja
jge
push
cmp
dec
dec
mul
leave
mov
add
adc
mov
gs
sbb
sahf
(bad)
mov
mov
cs
pop
or
fstp
sahf
xor
push
ja
das
imul
in
xchg
adc
cmp
jmp
pop
ss
xchg
int3
mov
out
mov
int3
ds
jns
stos
sbb
jns
jnp
adc
js
pusha
xchg
gs
sbb
iret
call
in
mov
jo
sbb
lock
or
xchg
mov
(bad)
lock
or
movs
push
mov
jmp
adc
(bad)
stos
xlat
cmc
int
jp
xor
imul
xor
xor
sbb
xor
dec
mov
inc
in
daa
pusha
push
jb
neg
inc
pop
mov
outs
lahf
jbe
pop
mov
push
cmp
mov
clc
(bad)
jb
repnz
cli
les
outs
jbe
and
jb
cmp
sbb
push
sub
mov
scas
mov
out
rcl
mov
adc
xchg
jno
jmp
jmp
in
jbe
xor
mov
cmp
adc
jnp
loope
mov
sbb
xchg
mov
cmp
jae
sbb
jb
push
jbe
cmp
pushf
ficomp
jl
fiadd
daa
iret
fwait
daa
or
out
pusha
or
or
sub
popf
jge
cmc
out
cdq
cmp
out
dec
loop
jecxz
stos
fmul
mov
xchg
int3
test
sbb
scas
sub
test
inc
xchg
jnp
mov
jecxz
ja
or
jno
call
mov
xor
popa
(bad)
aad
pop
push
cdq
or
repz
xchg
mov
fiadd
hlt
int
mov
fimul
(bad)
sbb
adc
addr16
cwde
and
mov
imul
mov
inc
pop
retf
sti
sub
stos
jge
and
(bad)
clc
pop
push
movs
xor
aas
jp
and
(bad)
idiv
lea
ins
(bad)
jle
pop
cmp
dec
add
sub
fld
mov
and
xor
mov
adc
cmps
pop
cmc
mov
movs
jle
sbb
cld
push
out
jae
popa
mov
mov
and
mov
xor
shl
out
xchg
mov
lds
mov
mov
ret
pop
dec
lods
pop
retf
daa
js
cmp
lods
cmc
lea
stos
scas
cmc
in
retf
(bad)
arpl
imul
cs
jae
das
(bad)
stos
test
fdiv
jne
adc
sub
mov
mov
sbb
push
inc
adc
clc
sbb
jmp
xchg
fcmovnbe
mov
sub
and
pop
lock
ret
ror
push
in
fild
jo
mov
das
sbb
int3
ror
imul
or
imul
pop
adc
jne
jno
in
and
push
sub
nop
div
adc
retf
cmps
mov
lods
(bad)
xlat
sbb
loop
or
add
in
or
out
out
jnp
(bad)
sub
aad
cmp
push
or
xor
outs
loope
scas
ret
jnp
mov
stos
and
and
xor
cmc
in
sub
inc
inc
push
inc
popf
aad
push
and
lods
or
xor
ss
outs
fisubr
cmp
xchg
xchg
sub
and
and
cmp
movs
xchg
test
mov
sub
cmc
sbb
mov
out
lods
test
in
shr
sbb
mov
call
jmp
out
jo
cmp
out
mov
xchg
jae
and
push
(bad)
fcmovu
(bad)
xchg
ins
aas
(bad)
jmp
stc
push
cmp
pop
rcl
sub
sub
push
pop
mov
mov
retf
push
cdq
out
leave
push
cdq
push
test
pop
mov
jae
fidivr
loop
pushf
fstp
outs
jo
cmp
pop
cmp
xchg
pop
jmp
inc
fisttp
cmp
fnsave
fwait
aaa
sub
test
push
daa
pop
movs
pop
adc
push
sbb
ss
std
iret
mov
jle
jp
mov
fstp
outs
out
mov
paddq
lods
hlt
icebp
hlt
adc
sub
imul
jl
fs
outs
sbb
aad
mov
and
imul
dec
push
repnz
push
or
mov
pop
jae
inc
das
xor
xchg
mov
test
cmps
retf
in
stos
xchg
ret
loopne
pop
cmp
int
xchg
ret
fbld
xor
adc
add
or
(bad)
pop
mov
inc
das
jb
ds
add
jge
mov
cmp
ret
stos
jl
sub
loope
add
cmp
fwait
push
fs
rcr
and
loope
adc
enter
cmps
ja
and
jl
test
bound
xor
ret
push
icebp
retf
sub
clc
push
mov
inc
int3
cmps
mov
jne
jns
outs
pop
push
test
cmp
sub
inc
hlt
inc
aad
jne
std
(bad)
cmc
int3
sbb
(bad)
test
sbb
out
scas
shl
in
dec
test
stc
sub
jecxz
fldl2e
push
or
rcl
sbb
ss
jg
shr
out
xor
pop
and
or
pop
cmc
ficom
imul
stos
or
jbe
push
sub
push
retf
lods
out
xchg
dec
or
out
jl
(bad)
push
adc
call
in
mov
es
into
repz
ins
mov
scas
mul
ins
shl
sub
xchg
mov
into
les
or
add
fist
rol
pop
fldenv
fnstsw
pop
clc
xor
aad
xor
sub
inc
stos
sub
push
xor
push
xchg
cmc
(bad)
pop
jmp
sub
js
cdq
fidivr
jecxz
shl
or
mov
mov
ret
es
arpl
popw
pop
test
ud1
push
addr16
(bad)
out
adc
pop
cmp
imul
pop
cld
in
and
fldpi
shl
inc
repz
mov
pop
mov
cmps
jmp
(bad)
ss
out
sar
push
call
sub
aad
mov
outs
(bad)
call
out
or
fldcw
cmp
pop
call
fsub
mov
icebp
ror
add
outs
aas
jg
repnz
enter
or
cmp
lock
fucomip
js
dec
cld
push
cli
and
fiadd
ret
gs
and
cdq
mov
repz
mov
fst
mov
std
hlt
dec
les
inc
jg
adc
ret
pop
es
retf
les
inc
jg
xor
mov
repnz
test
cmp
sub
repnz
stos
jle
aam
cwde
jnp
shl
sar
mov
cmps
pop
fwait
nop
rcl
xor
mov
pop
pop
movs
xor
imul
imul
push
sub
adc
sub
push
push
jmp
or
pop
lds
push
and
stos
sbb
jmp
ror
(bad)
mov
scas
pop
sub
pop
xor
stos
sbb
jge
sbb
cld
in
daa
pop
(bad)
sub
xor
mov
scas
rol
xor
je
add
sbb
fcmovnbe
pop
stos
sub
ret
popf
ror
in
xchg
pop
cmp
out
and
sbb
and
and
mov
ja
xor
jmp
mov
out
dec
inc
mov
pushf
adc
out
lods
adc
cli
mov
inc
repnz
jmp
cmc
or
neg
js
pop
and
or
sub
std
mov
std
movs
jb
loop
jmp
hlt
add
inc
lock
jg
xchg
ret
test
cli
sub
iret
hlt
inc
mov
sahf
jnp
sahf
in
popf
jg
daa
sti
(bad)
inc
dec
test
rcl
fs
leave
jle
out
xchg
xchg
cmp
test
or
(bad)
jecxz
and
clc
push
cmp
bound
fld
mov
adc
adc
leave
retf
lds
mov
xchg
xor
call
inc
push
mov
push
pop
jmp
aas
out
or
and
jbe
and
rol
sbb
neg
cmps
in
int
mov
mov
mov
mov
push
scas
int
xor
cmc
fbstp
cld
mov
pop
cli
pusha
adc
xchg
xchg
scas
loop
int3
lea
imul
push
or
sahf
js
imul
sub
jmp
xor
pop
dec
push
loope
cld
fisttp
test
stos
aaa
sahf
pop
clc
scas
sbb
(bad)
cmp
mov
cmp
push
xchg
cs
mov
cmp
push
fxsave
jecxz
sbb
pop
stos
adc
sbb
mov
cmp
and
data16
test
sahf
das
repz
push
push
push
xchg
cmc
stos
retf
outs
cmp
push
pop
lds
shr
scas
scas
jecxz
aad
mov
xor
push
aam
shr
rcr
mov
lods
push
ficomp
mov
fs
sbb
in
repz
push
inc
outs
loope
jmp
mov
icebp
(bad)
dec
push
pop
push
push
jne
pop
rol
fucomip
pop
call
mov
xor
xchg
(bad)
dec
mov
mov
enter
cmps
mov
fdivr
mov
xchg
xor
ins
inc
inc
arpl
dec
(bad)
nop
nop
jnp
mov
pop
sub
and
(bad)
popf
jecxz
xchg
jne
xor
sbb
jmp
cld
mov
ds
jmp
stos
cmps
jmp
inc
fimul
ficomp
loope
je
push
mov
fwait
je
iret
(bad)
into
std
aas
repz
addr16
xchg
mov
das
(bad)
iret
xor
ss
adc
dec
imul
fwait
pop
adc
mov
mov
retf
add
pmullw
mov
popa
mov
cmp
rcr
add
add
cs
pop
idiv
mov
mov
or
stos
sbb
rcl
xchg
xlat
cdq
sbb
and
int3
push
shr
arpl
(bad)
hlt
enter
pop
gs
retf
lahf
movs
adc
mov
rol
fsub
les
dec
pop
adc
pop
lds
fld
dec
inc
mov
pop
aam
mov
or
test
icebp
(bad)
imul
ins
fsubr
jmp
arpl
sar
inc
dec
pop
stos
mov
das
cmc
mov
into
xchg
ret
fild
pop
ins
je
in
mov
lods
(bad)
pushf
in
or
sbb
sti
pop
stc
je
aam
lahf
jb
fbld
std
out
add
out
jb
pop
sub
popa
jns
stos
cmp
icebp
push
add
cmp
inc
pop
out
into
dec
ins
inc
cs
loope
xchg
jp
test
sbb
push
mov
ficomp
dec
mov
mov
mov
push
mov
mov
mov
push
cs
gs
loope
bound
fimul
(bad)
stc
jp
xchg
ins
retf
mov
xor
dec
(bad)
xor
jmp
push
sub
xchg
leave
aad
push
lds
ret
mov
ins
adc
dec
scas
repz
rol
iret
push
retf
aad
test
arpl
sahf
sub
icebp
push
cmp
mov
dec
sub
jp
or
xor
mov
sbb
call
(bad)
sahf
call
loopne
adc
inc
aad
mov
clc
push
jecxz
and
mov
xor
mov
mov
inc
leave
push
push
sbb
xchg
fwait
mov
dec
outs
cmp
sbb
or
in
(bad)
push
inc
ss
sub
nop
dec
(bad)
shr
std
xchg
push
repnz
nop
dec
(bad)
(bad)
imul
popa
enter
xor
in
sahf
cmp
inc
ret
nop
dec
push
cmc
or
aaa
jl
fsub
cli
jae
(bad)
es
xor
push
sub
mov
fwait
shl
les
cdq
pop
aad
inc
dec
xor
push
and
jmp
dec
dec
mov
pop
sar
ins
sbb
add
(bad)
mov
push
dec
or
jp
(bad)
mov
jns
adc
push
push
push
jbe
cmp
(bad)
popf
je
(bad)
jmp
jg
repnz
mov
ins
rcl
dec
aas
les
mov
rcl
js
add
cwde
or
leave
int
jae
and
mov
test
dec
(bad)
es
idiv
mov
push
movs
cmp
and
outs
inc
xor
add
popf
(bad)
out
out
ss
dec
adc
(bad)
xor
jg
mov
add
lods
or
ins
mov
ss
mov
(bad)
xchg
fsubr
cmc
cli
sbb
cmp
stc
or
xchg
cdq
sbb
xchg
retf
sbb
stos
adc
fwait
pop
push
mov
dec
mov
push
push
xor
xchg
sar
sub
stos
jbe
or
push
sar
test
imul
inc
mov
pmuludq
cmc
sub
sub
out
shl
jbe
push
out
dec
sbb
pop
test
lahf
push
repz
test
ja
cmc
add
or
pop
out
shl
cmp
cmp
pop
in
es
dec
addr16
cmc
jl
mov
scas
sub
pop
mov
or
js
and
cmps
(bad)
adc
xchg
or
shl
mov
or
enter
ins
sub
push
mov
fist
ret
sbb
fistp
bound
and
test
les
sub
xor
and
jmp
sbb
retf
aaa
lahf
aam
aam
rcl
aaa
mov
out
ror
nop
pop
dec
inc
xor
dec
push
bswap
mov
fcmovne
loope
stc
cmp
push
fbstp
cmp
popf
cmp
test
mov
pop
hlt
push
(bad)
test
cmp
sub
nop
mov
adc
mov
jns
mov
(bad)
in
mov
jge
mov
adc
adc
jne
add
and
xchg
sub
repnz
or
and
mov
adc
adc
add
outs
sub
int
push
pop
sub
jb
fwait
sbb
and
and
and
pop
ror
dec
jno
or
and
cmps
push
jg
jg
fistp
xor
cld
sub
cmp
jae
out
cmp
repz
loope
jmp
mov
repz
sub
or
call
mov
push
and
sbb
fimul
mov
dec
and
inc
jl
rol
cmps
inc
fdivr
cmp
pusha
out
mov
jp
xchg
push
jl
xchg
push
pop
(bad)
call
adc
jns
scas
pop
sub
or
not
or
sub
clc
mov
out
retf
call
lods
jle
out
mov
cmp
cmp
clc
sti
popf
lahf
sbb
in
ja
sub
test
jmp
addr16
push
push
and
or
cmp
adc
push
xchg
xchg
fdiv
fst
mul
xlat
sti
inc
into
das
inc
sbb
test
jg
repnz
or
lahf
add
pop
(bad)
mov
mov
fdiv
and
mov
lds
jecxz
lock
mov
sahf
cs
xchg
jmp
test
movs
ret
mov
adc
fcmovne
and
xchg
dec
pop
pop
inc
pop
jno
ds
ds
mov
mov
push
jne
lea
sbb
push
mov
mov
mov
test
(bad)
sbb
mov
cmp
(bad)
jb
test
sub
call
sub
shr
outs
and
or
dec
or
jp
out
movs
pop
adc
fwait
xor
out
jno
mov
cmc
xchg
inc
inc
out
loopne
cmp
mov
out
dec
(bad)
mov
pop
mov
sbb
push
xchg
xor
pop
lods
cmc
jns
xchg
mov
les
movs
shl
(bad)
fnstenv
xor
imul
cmp
jp
xor
pop
mov
fwait
movs
out
push
mov
bnd
mov
sti
stos
loop
add
test
or
cld
pop
test
inc
div
in
mov
(bad)
ds
jbe
idiv
sti
push
cli
rcl
in
fldlg2
(bad)
adc
inc
leave
icebp
dec
cli
mov
repz
pop
pop
fdivp
ret
lock
or
xor
fnstenv
inc
sti
rcl
arpl
lahf
lods
pop
sar
sbb
jmp
dec
cmps
push
sar
jae
(bad)
pop
fmul
push
(bad)
imul
imul
out
ss
scas
xchg
mov
imul
cmp
xchg
dec
pushf
inc
sbb
enter
(bad)
enter
and
mov
test
pushf
dec
sbb
in
cdq
movs
adc
cmp
xor
fiadd
xchg
mov
stc
jae
and
and
mov
dec
and
das
loope
pop
dec
in
ret
das
frstor
cmp
mov
and
mov
out
into
jae
call
xchg
popf
ret
test
mov
(bad)
into
add
movs
dec
pop
bound
mul
nop
sbb
xchg
mov
cs
jmp
mov
xchg
add
loop
mov
mov
xchg
cmp
movs
xchg
push
out
loope
or
and
mov
retf
loope
popa
inc
mov
outs
mov
les
inc
in
xor
stc
xchg
xchg
gs
out
test
xchg
jne
dec
xchg
shr
dec
pand
fldz
or
fistp
push
in
inc
xlat
pop
push
ror
jae
test
mov
sbb
fwait
jae
cmp
mov
sahf
fnstcw
scas
je
mov
jmp
sub
push
inc
xchg
inc
jecxz
xchg
sub
test
stc
fild
adc
sub
retf
sbb
mov
cmps
push
sbb
stos
adc
cmp
inc
lds
mov
mov
xchg
xor
push
xor
stos
arpl
fdivr
cs
mov
jp
data16
xchg
clc
xchg
push
(bad)
jnp
std
cli
xor
xchg
xor
cmp
div
outs
aam
leave
outs
xchg
out
pop
dec
(bad)
std
xlat
fistp
stc
loopne
loopne
shl
stos
sbb
ins
(bad)
jo
xchg
(bad)
fild
out
xchg
xchg
fist
hlt
push
popf
enter
scas
fs
out
hlt
adc
fcomp
movs
push
sub
adc
cmp
stos
sbb
lods
pop
push
fwait
ret
add
adc
lock
cmp
mov
cld
inc
neg
mov
mov
js
lds
fidiv
inc
push
arpl
out
jge
and
dec
lock
adc
xchg
mov
xor
arpl
and
es
adc
xor
jbe
out
xchg
cmps
cmp
ret
ins
adc
clc
in
(bad)
das
dec
cld
xor
ss
or
ja
pop
mov
sub
js
adc
cmp
sub
iret
test
push
js
push
data16
sub
mov
stc
push
out
ss
aad
iret
fmul
out
cmp
lods
retf
or
mov
cld
(bad)
movs
in
in
sub
mov
jp
cmp
enter
mov
(bad)
push
ds
cmp
mov
lea
loop
mov
and
pop
ins
shl
test
repz
jae
add
dec
retf
adc
pop
sub
jb
popf
xchg
jg
in
test
in
and
add
das
jae
addr16
adc
sbb
adc
cdq
lds
lods
mov
jo
cli
stc
sub
repnz
imul
add
dec
jnp
jb
mov
pusha
sbb
and
jmp
out
(bad)
js
adc
pop
push
mov
rcl
(bad)
(bad)
adc
out
add
retf
xor
fimul
call
jg
int
jmp
shl
sub
push
lahf
add
clc
xor
add
iret
pop
jae
mov
xchg
stos
cld
fs
sub
and
(bad)
adc
push
mov
comiss
pop
gs
sbb
sub
jae
icebp
sub
das
and
aas
das
daa
pop
in
aad
stos
mov
mov
lahf
scas
es
and
jle
icebp
sub
les
dec
into
inc
mov
rol
aaa
(bad)
fs
hlt
enter
sbb
popf
int3
ja
or
xchg
loopne
sub
test
cmp
imul
loop
cld
pop
mul
fiadd
clc
fwait
jmp
xlat
div
jmp
rcl
sub
ror
xchg
stos
je
pop
mov
sbb
jne
pop
movs
push
test
and
cmp
xor
lods
jnp
jnp
rcl
sbb
push
sbb
test
shl
in
xchg
pop
das
jnp
mov
icebp
cmp
sbb
in
xor
push
mov
pop
cmps
mov
adc
xor
fcomp
jbe
adc
pop
xchg
sahf
cmp
cmps
mov
aaa
scas
push
jbe
jno
inc
inc
gs
pop
call
xor
idiv
test
sbb
in
stos
cmp
les
xchg
idiv
ret
js
mov
(bad)
pop
mov
ficomp
or
jne
iret
sbb
imul
sbb
mov
sahf
imul
es
fisubr
sbb
fdivr
push
in
inc
in
shr
rol
sahf
push
cmp
addr16
dec
dec
sbb
adc
cmps
push
sbb
dec
fdivr
daa
mov
mov
inc
ds
(bad)
sub
add
push
push
pop
jmp
stc
pop
in
mov
mov
add
ins
jmp
sbb
adc
pop
ror
mov
mov
push
jbe
(bad)
lahf
cli
lds
push
and
icebp
jno
jp
fcmovnu
int3
fstp
das
xchg
inc
xor
xchg
jae
loope
pop
and
jb
xor
jp
enter
shl
stos
push
lds
cmc
enter
mov
mov
gs
mov
jns
push
mov
sub
movs
in
out
push
(bad)
pop
out
dec
retf
mov
jae
inc
mov
mov
push
push
loopne
sbb
mov
clc
mov
bound
add
cmp
and
or
mov
jge
mov
xchg
push
adc
xlat
daa
arpl
jne
xchg
int3
ins
inc
popf
push
inc
inc
and
fild
cs
idiv
xchg
push
mov
in
or
das
jnp
cli
xor
sub
pop
sbb
push
addr16
push
shl
retf
lods
(bad)
push
mov
mov
xchg
call
pusha
in
pop
ror
test
xchg
lods
ret
xor
(bad)
(bad)
jmp
jle
aad
sub
stos
addr16
ja
pusha
and
mov
bound
mov
scas
pop
call
cld
cmp
out
mov
mov
and
lods
rcr
(bad)
push
pusha
fcomp
pop
add
mov
cmp
pop
and
jb
pop
add
and
push
xchg
mov
nop
call
sbb
pop
adc
pop
stos
ds
icebp
div
fistp
mul
xchg
dec
fdiv
rcr
sti
call
fucomp
mov
dec
xchg
mov
iret
pop
push
sbb
mov
jecxz
fs
sbb
mov
fldcw
push
faddp
jmp
popw
nop
lahf
push
fnstenv
mov
jnp
icebp
shl
or
pop
pop
add
outs
scas
inc
data16
xor
fidivr
sub
inc
xor
lea
imul
xor
outs
shl
scas
cmp
mov
push
pop
mov
and
inc
pop
stos
mov
cli
mov
mov
(bad)
mov
(bad)
jge
repnz
fistp
test
cli
or
aaa
(bad)
call
jle
(bad)
push
iret
xor
sbb
(bad)
lock
jno
mov
enter
fmul
icebp
and
sbb
pop
xchg
aas
mov
ss
lahf
xor
dec
in
mov
jb
shl
stos
pushf
stc
cmp
fisttp
push
cli
xchg
pop
push
or
bound
stc
aam
rcl
aas
jne
repz
sbb
movs
outs
test
daa
mov
mov
jg
add
or
bound
(bad)
icebp
xlat
scas
xchg
lahf
cmp
fsubr
retf
adc
rcr
push
leave
pop
mov
inc
cli
cmps
clc
xchg
(bad)
xor
jge
jmp
push
or
mov
rcl
pop
movs
push
pop
bound
mov
movs
fs
outs
add
mov
inc
jo
enter
add
push
pop
(bad)
div
jo
and
addr16
out
xor
jp
arpl
ins
dec
push
enter
jecxz
nop
push
push
scas
test
cmps
retf
(bad)
jge
loop
pop
shl
jl
in
jo
out
or
xchg
push
mov
popa
dec
clc
sbb
clc
int
ret
aad
xlat
loop
pop
sti
es
fidiv
popa
cmps
mov
sar
lds
xor
in
adc
inc
jne
test
add
jne
out
xchg
jecxz
sbb
mov
movs
pop
call
js
sbb
int
out
int3
mov
retf
in
mov
xlat
neg
daa
dec
shl
hlt
sbb
rol
or
jmp
clc
in
mov
std
jb
or
add
sub
jge
dec
add
cmp
mov
repz
pop
stc
repnz
mov
(bad)
addr16
dec
inc
jns
or
mov
xor
cmp
cmp
ja
fisttp
jle
mov
pushf
sbb
pop
xlat
outs
fmul
in
and
mov
and
fldcw
cs
movs
add
ret
sbb
fmulp
cmp
cmc
sbb
sub
cmp
je
lahf
sbb
popf
loop
and
prefetchwt1
movs
push
lods
pop
dec
cli
les
xlat
xchg
ds
cmp
adc
and
fnstcw
cli
(bad)
loopne
shl
fdivp
(bad)
movs
dec
jl
cmps
arpl
mov
(bad)
dec
popa
jmp
mov
jle
pop
xchg
lods
test
and
adc
sti
xor
mov
fsubr
sbb
imul
jo
cmp
mov
sub
sub
push
cmc
push
sahf
aad
pop
scas
mov
push
ds
loope
loop
(bad)
sbb
fiadd
in
or
cs
call
xor
test
retf
mov
push
push
aaa
xchg
shl
(bad)
or
outs
pop
inc
dec
lea
push
and
in
retf
sbb
sub
aad
mov
adc
mov
cmp
dec
jmp
fcom
push
into
stc
jmp
outs
pop
xchg
mov
jp
ficomp
pop
movs
leave
sbb
push
add
scas
pusha
call
neg
mov
lds
popa
push
mov
mov
aam
mov
hlt
sub
test
test
ds
(bad)
sar
(bad)
jmp
popf
test
ja
jo
sbb
mov
add
in
sti
cmp
jbe
or
jp
fdiv
(bad)
scas
mov
jmp
or
in
or
cmp
int3
and
hlt
inc
daa
(bad)
sahf
into
xor
icebp
jbe
aad
pop
sahf
sbb
cmps
xchg
mov
push
dec
stc
mov
clc
push
sub
gs
aad
push
mov
es
sahf
push
loope
mov
xor
aad
loopne
inc
sub
sub
sbb
pop
mov
add
ret
xchg
xchg
call
jmp
cmovle
jecxz
xchg
mov
ror
and
cmp
aaa
push
fs
fwait
xor
fistp
xchg
repnz
mov
xor
xchg
movs
jno
pop
int
std
mov
sbb
dec
(bad)
sub
push
popa
mov
fsqrt
dec
mov
add
dec
cmp
mov
adc
out
ret
outs
inc
sub
jmp
scas
in
rep
js
mov
rcr
xchg
mov
cmp
into
out
xchg
(bad)
sbb
retf
neg
es
fld
sub
fnstcw
and
push
(bad)
fdivr
sbb
mov
daa
iret
mov
mov
hlt
push
mov
jnp
shr
std
jmp
test
imul
sbb
jb
dec
fisub
adc
jns
dec
sub
js
adc
xchg
or
jmp
arpl
cwde
pop
or
aad
jecxz
inc
jmp
nop
jnp
dec
bound
cs
sar
push
leave
adc
ins
inc
fnsave
jb
xlat
sbb
fcomp
pop
cmc
pusha
clc
push
enter
pop
xchg
add
mov
mov
nop
pop
sar
sar
sar
nop
cmps
(bad)
adc
pop
jle
cmps
mov
mov
add
inc
test
xchg
pminub
(bad)
jmp
jbe
shl
mov
repnz
(bad)
icebp
add
nop
xor
call
ins
cmps
or
das
and
jno
(bad)
mov
arpl
minps
xchg
enter
mov
push
dec
xor
imul
gs
push
clc
sti
inc
mov
ret
js
jle
mov
cwde
out
scas
mov
push
mov
mov
pusha
jmp
test
popa
addr16
sub
jae
shr
jg
jb
lahf
push
sub
gs
sub
mov
sbb
lahf
adc
(bad)
dec
js
pop
xchg
and
pop
or
iret
mov
lods
fdiv
std
jne
cmc
mov
shr
sub
das
shl
ins
push
mov
mov
xchg
cdq
cmp
fs
xor
cli
pop
ins
(bad)
ds
mov
imul
push
mov
xchg
push
gs
in
lock
popf
sub
jmp
(bad)
lahf
jo
cmp
movs
mov
les
mov
cmps
test
mov
int
sub
sahf
pop
push
jnp
int3
aaa
cmps
xchg
repnz
js
jne
retf
jne
xor
and
inc
or
lea
out
or
aas
jo
mov
inc
shl
mov
nop
lock
shr
and
pop
mov
xchg
cdq
pop
cmp
lods
daa
mov
mov
ins
call
pop
or
dec
push
mov
(bad)
sahf
dec
rep
dec
dec
stos
rol
aam
ret
dec
push
lds
in
in
mov
push
sbb
cmp
cdq
les
cli
stc
dec
pusha
mov
pop
aaa
jnp
ins
push
sub
int
lea
sbb
sub
imul
scas
mov
(bad)
pop
les
call
(bad)
ror
jno
in
mov
cmps
xchg
(bad)
fadd
xchg
mov
adc
mov
repnz
(bad)
aaa
or
add
cmp
iret
fs
mov
mov
mov
xor
add
mov
stos
xlat
aad
mov
pop
ds
and
fmul
lock
ror
into
add
sti
les
sub
pop
add
jg
cmps
mov
add
js
scas
mov
rol
loope
cmp
dec
inc
push
into
jle
(bad)
loopne
jb
cmp
xchg
dec
shl
jnp
ins
mov
jecxz
ret
fnsave
adc
into
aas
in
dec
adc
div
sbb
mov
retf
cmp
lods
pop
mov
in
mov
fisttp
popf
mov
jg
div
sub
jae
jl
clc
mov
fdiv
and
scas
jecxz
mov
mov
jnp
ror
fist
sub
ss
fsubr
mov
sahf
call
into
push
loopne
inc
mov
add
psllq
stos
sbb
in
shr
pop
mov
adc
mov
fistp
repnz
or
jl
(bad)
jmp
sub
inc
cmps
sbb
or
push
fisubr
lock
ret
and
cs
std
push
(bad)
push
ret
out
push
loope
mov
push
frstor
cs
in
xchg
rol
sub
sub
icebp
adc
pop
jno
mov
mov
cmp
ins
scas
ret
cli
mov
and
adc
(bad)
cmp
scas
mov
retf
call
cdq
das
pop
push
push
in
ds
jne
icebp
dec
lods
push
inc
repnz
cmp
test
push
push
test
pop
mov
lds
js
test
retf
mov
add
addr16
int
(bad)
pop
jg
ins
call
cmp
(bad)
mov
push
mov
xchg
movs
mov
sub
and
outs
daa
stos
jne
mov
adc
fisubr
cmp
or
stos
jae
repnz
fs
or
loop
movs
cmc
inc
repnz
push
inc
xor
arpl
gs
mov
loope
xor
xchg
xor
cs
sahf
shr
adc
sbb
xchg
pop
jb
(bad)
test
ror
sub
dec
jmp
std
retf
lds
inc
jp
xchg
push
inc
ds
sub
mov
neg
out
or
mov
aaa
fs
imul
lahf
cmp
sbb
xchg
xchg
sbb
icebp
repnz
repnz
sub
xchg
mov
add
jb
xchg
(bad)
ja
mov
dec
out
fld
(bad)
in
fs
inc
mov
xchg
les
xchg
dec
out
fidivr
repnz
jo
ss
into
(bad)
jae
mov
xchg
xchg
or
lahf
and
jb
mov
jb
inc
movs
cs
ins
xchg
dec
dec
mov
or
cld
stc
and
imul
xor
jl
push
push
mov
xor
pop
aam
iret
mov
out
fwait
sbb
fwait
shl
ja
sahf
ja
(bad)
pop
shr
(bad)
pop
mov
ja
mov
stc
(bad)
mov
jae
or
cmp
or
fcom
in
test
fmulp
into
sbb
xor
push
sbb
or
xor
mov
test
lahf
lock
dec
sbb
imul
fsub
dec
int3
mov
sub
ins
cmp
jbe
jmp
cmp
rcl
out
pop
mov
pop
test
dec
sub
sahf
mov
jl
outs
or
jge
inc
in
and
fwait
add
std
inc
pushf
xchg
or
sahf
into
mov
test
jb
sbb
fdiv
sub
sub
jl
std
outs
jo
test
cmps
pop
repz
sbb
out
aaa
cmps
push
ins
sbb
dec
in
push
sbb
in
lock
and
out
push
xchg
fbstp
add
fld
sub
int
mov
mov
mov
xor
xchg
or
cli
adc
jg
pop
mov
fcomip
test
jg
imul
ja
cmp
retf
jmp
dec
mov
mov
sub
and
and
dec
jb
sbb
push
xlat
xchg
cmp
mov
jmp
mov
sbb
mov
enter
mov
in
push
xchg
pop
lock
sbb
ficomp
out
in
jp
ja
or
imul
add
add
jmp
cmp
sub
cmp
or
pop
loopne
out
pushf
in
sub
pusha
pop
outs
pop
jg
inc
fimul
or
inc
popa
int
test
add
pop
xchg
cmp
out
xor
and
int3
jns
xchg
out
pushf
scas
ret
push
adc
pop
inc
or
test
inc
xchg
dec
enter
add
out
test
test
movs
or
add
or
icebp
iret
loop
dec
in
cs
aad
xlat
dec
lea
(bad)
mov
pop
test
push
dec
fldcw
imul
push
jnp
cmc
xor
inc
pop
inc
cmp
push
aas
leave
mov
sbb
xchg
mov
xchg
fidiv
int3
jno
jl
icebp
jns
jl
repz
sub
sub
pop
into
clc
cmps
lods
out
push
mov
cmp
dec
xor
xchg
mov
push
lds
ss
(bad)
jno
xchg
pop
mov
sti
fcmovnbe
iret
(bad)
mov
out
bound
stc
cmp
push
pop
out
icebp
push
hlt
cmp
cdq
sub
fistp
test
mov
mov
cli
aam
(bad)
sub
fisub
scas
pusha
xchg
dec
repz
ror
mov
in
into
adc
call
jge
ficom
mov
int
mov
in
(bad)
xchg
jmp
fld
packsswb
inc
jo
loop
mov
mov
jmp
bound
rcl
scas
adc
push
push
shr
push
rol
je
xor
lock
mov
xor
test
mov
jno
and
loop
out
fnstcw
sub
cmp
sar
mov
sub
pop
stos
jae
push
xchg
xor
lds
nop
bound
sbb
push
jo
stc
mov
jle
and
fadd
mov
xchg
xor
jnp
outs
retf
adc
adc
xor
out
in
int
pop
inc
outs
xchg
test
cmp
in
mov
shl
cli
sbb
adc
cld
xor
mov
cmp
adc
and
pop
aaa
sub
lods
movs
in
mov
adc
imul
xchg
or
push
ins
dec
sbb
scas
fcom
jge
inc
jmp
sub
jge
mov
inc
das
out
pusha
xlat
bound
mov
jne
les
xor
fbstp
pop
cmp
iret
or
mov
mov
mov
les
inc
je
xchg
cmp
je
nop
lahf
imul
xor
addr16
push
add
ror
push
scas
fimul
imul
cmp
ds
jp
cmp
test
call
imul
jmp
pushf
or
sbb
push
shl
std
mov
ds
out
dec
pop
into
pop
jnp
sti
jno
fstp
(bad)
fwait
push
shr
fld
sbb
loopne
clc
bound
imul
inc
lds
or
jg
in
sub
dec
sub
aaa
loopne
add
sub
xchg
ja
sbb
clc
retf
or
jae
popf
add
mov
repz
je
sti
fidivr
pop
cmp
in
xchg
into
jl
fisttp
mov
mov
div
jbe
repz
iret
mul
mov
push
in
cmp
push
sub
in
aas
push
cld
pop
jge
sti
sbb
push
mov
dec
jl
jae
and
movs
cmp
lods
test
and
xor
or
mov
scas
sbb
retf
scas
lods
xor
ficom
jns
aam
push
(bad)
sahf
xor
lds
dec
rep
imul
scas
ror
push
pop
mov
neg
daa
jge
sub
push
inc
xchg
dec
in
or
or
cmp
xchg
xchg
sbb
repnz
fs
pop
mov
arpl
loop
xor
movs
xchg
dec
jns
xor
stc
call
scas
movs
xchg
sar
int3
xor
scas
mov
pop
pop
popf
in
test
iret
adc
lods
test
mov
xor
mov
mov
jmp
fst
xchg
and
jmp
dec
in
out
pop
std
sbb
mov
stos
ins
lods
stos
inc
(bad)
push
js
mov
pushf
push
push
pop
adc
push
hlt
(bad)
in
dec
(bad)
cmp
iret
push
call
std
inc
es
loop
dec
movs
ds
and
jmp
test
cmp
idiv
adc
add
and
jno
sbb
dec
cmp
add
imul
pop
cwde
or
pop
or
vpcmov
mov
aad
or
lock
dec
jp
cmp
lods
jbe
or
mov
push
fsubr
ins
mov
ss
xchg
push
js
push
adc
sbb
aam
pop
imul
mov
iret
xchg
fimul
mov
jg
jg
mov
pop
mov
pop
cmp
cmp
or
jae
stc
mov
pop
mov
pop
push
xchg
into
jb
(bad)
pop
fadd
xchg
leave
lea
test
push
dec
xor
pop
cmp
(bad)
mov
jno
mov
retf
sbb
sar
aas
sti
fs
jns
mov
xor
jl
bound
fidiv
stc
sti
ins
ja
call
push
xchg
cld
lahf
sti
ds
add
lea
sbb
aam
std
js
neg
jcxz
pusha
push
cmp
mov
jmp
(bad)
cvttps2pi
jns
or
pop
xchg
clc
inc
inc
or
pop
sub
cwde
aam
enter
rcl
es
xchg
das
leave
into
scas
faddp
mov
aam
dec
mov
mov
mov
ins
popf
je
iret
(bad)
cmps
xchg
sbb
and
and
fcomp
dec
push
cmp
in
mov
pop
pushf
adc
jecxz
jle
mov
pop
imul
or
dec
(bad)
jl
lock
aaa
mov
pop
inc
push
mov
mov
(bad)
icebp
shr
cmc
aam
gs
idiv
nop
sahf
push
sbb
xchg
push
pop
add
mov
and
test
inc
gs
jp
push
gs
mov
inc
out
repnz
mov
dec
inc
scas
loope
pop
sub
mov
test
mov
jbe
cdq
mov
out
and
xchg
xchg
pop
out
icebp
push
push
push
std
dec
rcr
icebp
adc
arpl
jge
push
adc
dec
jnp
das
ins
lahf
pop
ja
pop
scas
mov
in
jecxz
call
repz
mov
in
mov
pop
cmps
fst
dec
rcl
adc
inc
ss
mov
mov
xchg
jg
mov
scas
fwait
mov
cmc
rcl
pop
ins
bnd
cs
enter
cmp
sub
jnp
call
mov
cmp
or
add
mov
push
sub
push
into
cmp
call
cli
mov
add
sub
fisttp
or
cmp
fist
ja
dec
ret
(bad)
(bad)
out
dec
xor
out
fbld
fsubr
and
in
jmp
adc
cmc
aas
adc
sti
cmp
jge
iret
into
sti
add
addr16
retf
lahf
sbb
out
test
pop
xlat
aaa
push
arpl
pop
outs
repz
mov
addr16
sub
jp
sub
rcl
lds
mov
sbb
sub
push
adc
dec
ds
dec
shl
add
mov
pop
icebp
jo
adc
cs
inc
mov
mov
add
sub
push
out
js
xor
mov
jb
pop
adc
push
rcl
stc
sub
je
aad
js
xchg
out
push
jecxz
outs
and
mov
shr
in
mov
dec
jecxz
dec
dec
popa
rep
and
mov
out
scas
and
mov
int3
sbb
or
pop
and
dec
out
add
push
cdq
xor
or
pushf
xchg
fld
pop
adc
stos
idiv
repz
aad
mov
(bad)
jp
js
mov
mov
in
inc
push
test
jmp
jae
mov
inc
in
movs
es
jp
fdivr
into
sbb
lds
push
aad
and
mov
out
sbb
jecxz
cmc
dec
jmp
lods
lea
test
out
mov
mov
pushf
out
pop
sub
into
fst
mov
out
fwait
and
imul
outs
scas
mov
stos
int
adc
cmc
adc
cmp
sub
cmp
sub
idiv
push
push
out
movs
scas
mov
(bad)
iret
out
jle
sbb
std
cli
mov
jmp
test
jge
std
lds
out
sti
cmc
inc
aas
ja
and
lds
enter
or
cdq
jge
mov
ja
cwde
nop
fldcw
leave
lahf
adc
jnp
inc
in
mov
cmp
xchg
nop
fldcw
inc
enter
and
sti
or
int3
jle
imul
(bad)
iret
adc
sti
dec
loope
mov
sub
cmp
dec
das
inc
scas
mov
cld
mov
jecxz
mov
xchg
sahf
lahf
test
inc
mov
and
add
pmaxub
in
inc
ret
xchg
(bad)
ins
xor
fiadd
cmp
repnz
ret
mov
ja
adc
fdiv
cld
sbb
mov
pop
pop
mov
mov
dec
enter
sub
addr16
xchg
into
inc
pusha
int
dec
mov
lods
sub
push
pop
mul
rcl
mov
cmp
jmp
pop
imul
mov
in
push
sti
mov
cmp
xchg
push
pop
out
sub
test
lods
pop
xor
dec
mov
mov
pop
adc
fst
dec
mov
aad
adc
inc
div
das
or
inc
push
ficomp
inc
xchg
inc
push
or
sbb
xchg
ret
mov
(bad)
(bad)
ficomp
jle
aaa
inc
xchg
rol
out
jg
cs
adc
inc
pop
mov
lahf
xor
leave
adc
shr
xchg
je
push
inc
xor
fcmove
icebp
int3
xchg
ja
pop
xor
gs
imul
popa
shr
inc
xchg
ins
int3
inc
arpl
cmp
enter
rol
mov
xor
inc
mov
fcmovnb
sbb
mov
push
(bad)
jno
popf
stos
fdivr
sahf
or
pop
icebp
data16
xchg
sbb
lods
test
jno
sbb
arpl
inc
mov
jbe
pop
aaa
dec
cmp
clc
mov
mov
shl
xchg
xchg
les
lea
xchg
jb
adc
dec
(bad)
push
mov
xchg
mov
loope
test
das
cld
cmpps
test
jmp
inc
cld
ret
xchg
imul
mov
xchg
ret
into
mov
loopne
aam
int
lods
fstp
mov
sbb
inc
sti
jo
adc
add
push
std
add
je
scas
adc
xchg
test
jge
push
xor
rcr
js
jl
and
sub
add
add
cmp
sbb
jae
cwde
cmp
popa
inc
shr
test
jle
mov
(bad)
jecxz
imul
nop
add
sub
mov
sahf
xadd
and
popa
sbb
clc
sub
or
xchg
cmp
xlat
add
sbb
cmp
push
fild
out
dec
out
test
(bad)
outs
mov
mov
xchg
das
fldl2e
inc
cmp
sbb
mov
jecxz
fmul
and
jae
push
or
pop
stos
sub
ins
xlat
mov
mov
mov
leave
loope
push
mov
sbb
mov
cmp
cs
out
outs
out
dec
int3
and
push
retf
mov
cmps
push
and
cmps
fwait
pop
xchg
xor
mov
cld
dec
jo
popf
or
cmp
stc
sbb
mov
sub
ss
rcl
jle
repz
fistp
mov
xchg
into
sub
scas
push
iret
mov
push
inc
jno
push
cld
or
or
iret
jnp
and
add
(bad)
adc
inc
xor
sahf
arpl
loopne
ja
jge
inc
xor
aas
jns
add
int3
cmp
scas
or
add
int3
jl
in
test
cdq
jge
add
out
aas
ja
add
out
push
lods
or
add
mov
sar
neg
fidivr
out
ja
lods
les
push
lds
loope
jbe
cmp
pop
sbb
cmps
xchg
add
pop
mov
(bad)
jae
adc
loope
xchg
out
data16
stc
xor
xchg
div
xlat
xchg
dec
dec
push
dec
imul
pop
mov
rol
inc
xchg
jp
outs
lahf
fist
or
dec
sub
addr16
mov
inc
cmp
repnz
xchg
mov
adc
les
(bad)
movs
pop
enter
jne
mov
movs
imul
inc
xor
inc
stc
je
xor
dec
aad
loope
pop
push
shr
push
rol
in
xchg
test
and
sar
sub
inc
pop
push
gs
jmp
test
stc
xor
push
fcmovbe
and
cmp
dec
pop
fstp
xor
xchg
adc
mov
sahf
(bad)
lock
or
(bad)
test
pop
out
xor
ja
sub
sti
call
(bad)
inc
fld
sub
clc
mov
mov
fstp
sahf
in
cs
fldenv
inc
fisub
ins
cs
cdq
dec
sub
pusha
sahf
sahf
stos
sub
popa
aas
mov
in
sub
mov
xor
and
and
nop
inc
iret
mov
jb
adc
jp
fstp
out
sbb
je
gs
jmp
(bad)
mov
out
stos
retf
stc
mov
sbb
in
xchg
fstp
sub
cmp
out
clc
cdq
xchg
lods
xor
rcl
mov
jae
cmp
xchg
lahf
jge
mov
push
icebp
cmc
ret
pop
inc
cld
cmc
mov
int
push
(bad)
push
aaa
sbb
pop
add
sti
aaa
enter
iret
ret
jle
or
in
pop
test
(bad)
xor
adc
loope
stos
rcr
push
dec
pop
shl
stos
test
xchg
xlat
adc
int
int3
cs
inc
push
mov
in
sub
sub
out
cmp
sub
xor
stos
jns
pushf
mov
jne
dec
movs
push
and
mov
scas
and
jecxz
es
data16
bnd
or
shl
das
mov
aas
(bad)
push
ja
mov
out
cwde
scas
fst
cmp
cmp
pushf
pop
cmp
repz
mov
ins
(bad)
cmps
cmc
xor
sub
dec
xor
fidiv
fnstenv
fidivr
(bad)
fs
aaa
fwait
jge
mov
aas
pop
loopne
xor
mov
test
push
sahf
outs
outs
mov
dec
xchg
fld
mov
mov
xor
lods
popf
loopne
sbb
arpl
repz
test
(bad)
(bad)
inc
mov
out
in
cld
add
int3
repz
jp
sbb
in
pop
pop
jmp
inc
pop
scas
cmp
test
xchg
ja
retf
ja
aas
and
ins
fcmovb
mov
icebp
ja
fisub
mov
idiv
cli
jne
sub
aaa
sbb
xor
or
inc
push
fstp
jae
stc
and
stos
rcl
mov
stos
fcmovnb
sub
cdq
sar
call
mov
jne
mov
int
jmp
outs
out
rep
sub
fsubp
(bad)
and
retf
dec
xor
xor
idiv
movs
lods
scas
out
fsubr
and
sub
inc
xchg
icebp
pusha
xor
enter
lods
pop
retf
inc
inc
addr16
(bad)
push
fisubr
xchg
and
dec
retf
dec
mov
inc
xor
push
mov
mov
outs
cs
jmp
(bad)
cs
arpl
fs
pop
jmp
fiadd
int3
sahf
jbe
pop
sub
into
movs
addr16
test
sub
scas
div
mov
and
in
mov
ins
stos
sub
xchg
or
jb
sbb
sahf
mov
mov
pop
push
cmp
jno
in
push
push
idiv
out
outs
fdiv
repz
sub
cwde
out
xor
mov
sub
data16
jno
mov
xor
in
sub
jne
cmc
ja
fisubr
sbb
enter
xchg
aas
mov
cli
aad
xor
xor
addr16
dec
daa
arpl
cmp
ds
jl
xor
icebp
int
mov
mov
ja
mov
lods
cmp
dec
mov
out
mov
imul
sahf
mov
dec
fwait
xchg
add
sti
cmp
repz
repnz
mov
jl
je
push
lahf
sbb
lock
pop
(bad)
jle
or
stc
mov
and
mov
setle
test
dec
repz
dec
mov
push
fstp
aas
mov
imul
lds
mov
adc
pop
scas
xchg
xchg
mov
push
add
neg
xor
jnp
pop
out
inc
out
test
je
add
(bad)
jo
adc
js
mov
(bad)
out
xchg
jbe
(bad)
xor
jno
rol
inc
pop
test
jl
cli
mov
dec
mov
pushf
mov
or
mov
xchg
inc
(bad)
cmp
in
mov
aas
aas
repnz
and
sub
call
push
(bad)
jb
mov
sti
push
ja
stc
stos
inc
dec
mov
lods
stos
idiv
xchg
mul
pop
js
fnstsw
jp
out
ins
mov
movs
(bad)
dec
xchg
xchg
xchg
cmp
cmps
xlat
aaa
cld
sbb
clc
jb
xor
jnp
ja
xchg
les
les
hlt
(bad)
pop
sub
lea
call
icebp
jmp
add
and
push
inc
jmp
xchg
push
pandn
aas
sar
mov
xchg
jl
inc
and
add
int
push
inc
ret
sub
cmp
das
pop
pushf
cwde
sub
mov
dec
mov
lods
(bad)
fdiv
sbb
pop
mov
pop
adc
ja
cmp
xor
jae
lds
cmps
out
(bad)
std
cmp
mov
aam
mov
int3
cmp
out
cmps
fisubr
push
cmp
or
jb
sbb
fcom
aas
cmc
(bad)
int3
push
cmp
xor
into
fiadd
aas
jg
push
sub
xor
lock
jae
jecxz
or
dec
daa
test
and
mov
xor
test
and
adc
fstp
mov
sbb
fiadd
fucomp
ins
loopne
push
ficomp
fist
(bad)
jmp
clc
sbb
scas
ror
sbb
sub
sbb
popf
fcom
aam
imul
push
or
push
test
aaa
test
mov
gs
loop
xchg
and
push
in
mov
pop
mov
movs
jmp
or
ja
sbb
out
cmp
xchg
cmps
std
add
pushf
test
cmp
aad
inc
sbb
int3
(bad)
push
and
je
xor
xchg
je
mov
aaa
mov
sbb
lock
push
cmps
adc
imul
outs
stc
mov
cld
dec
sub
movs
(bad)
arpl
fsub
push
xor
out
test
or
lods
fidiv
mov
cmps
pushf
push
test
not
or
jge
pop
push
fdivr
cmp
xchg
sub
sti
in
test
fld
push
and
data16
das
pushf
xor
lahf
(bad)
mov
jbe
data16
pushf
out
and
mov
xor
(bad)
push
push
push
mov
int
xor
or
jmp
jg
gs
(bad)
in
scas
outs
push
mov
in
and
stos
jecxz
test
int3
xor
sub
jmp
leave
sahf
jne
pop
jecxz
mov
aad
cld
add
pop
(bad)
pop
mov
lea
daa
sbb
repnz
stos
enter
aad
jbe
jmp
in
or
imul
sahf
push
neg
lods
mov
out
push
les
fstp
mov
jg
sti
lock
jecxz
clc
mov
cmp
daa
push
push
mov
cli
out
sbb
lea
pop
or
(bad)
jg
iret
xor
add
or
lea
jns
or
xchg
sbb
cmp
gs
adc
mov
in
cmps
ja
mov
mov
sub
jnp
stos
cmc
sbb
sbb
push
call
cmp
pop
cmp
mov
pop
and
pop
sbb
iret
mov
jns
call
psubsb
imul
fistp
dec
and
int
js
mov
sub
bound
cmp
cs
daa
scas
adc
mov
sahf
cmps
fmul
mov
push
jecxz
mov
bound
test
jo
dec
dec
fdiv
pop
sub
mov
imul
cmp
inc
fadd
jno
mov
clc
fwait
jg
(bad)
frstor
xor
pop
retf
mov
cmc
rcr
inc
(bad)
mov
aam
lods
sbb
lods
mov
test
stc
and
mov
stc
data16
popf
aas
mov
sbb
lahf
pop
jns
xor
sub
cmp
iret
das
xchg
dec
pop
out
adc
je
jmp
scas
pop
repz
sub
mov
in
fdivr
imul
ror
mov
js
add
xchg
cli
div
dec
mov
sbb
jne
pop
sub
mov
add
arpl
sahf
bound
retf
cmps
push
mov
sbb
mov
sub
repnz
test
jl
xchg
stos
ud0
pop
dec
stos
js
jno
fadd
mov
fwait
mov
pushf
mov
jo
inc
arpl
clc
push
sti
mov
mov
mov
(bad)
xchg
popf
pop
loop
mov
data16
mov
inc
stos
sub
shl
push
pop
daa
mov
mov
retf
cmps
and
pop
je
lds
test
cmps
loop
call
pop
mov
pop
stc
mov
or
outs
push
mov
int
das
or
cld
fadd
outs
ret
mov
push
cmp
cwde
test
(bad)
fs
inc
fidiv
xor
mov
pusha
out
jge
out
scas
jo
jnp
aam
or
int
cmp
cmp
pop
lods
in
mul
dec
push
jl
push
imul
popf
sub
sbb
call
dec
mov
push
pushf
adc
jns
movs
neg
sub
bound
mov
sub
mov
cmp
ror
or
das
fisubr
fcmovnbe
sar
lahf
cmp
push
iret
fisttp
push
cmc
sbb
push
stos
out
add
jg
shr
cdq
pushf
inc
stos
out
imul
jp
aaa
lea
cli
jmp
popf
push
iret
iret
dec
cmps
aad
jmp
retf
lods
sahf
(bad)
cmp
aad
(bad)
mov
lahf
(bad)
pushf
jecxz
mov
jnp
(bad)
lods
pop
cli
call
gs
pop
data16
xor
pushf
adc
in
mov
or
push
loop
nop
mov
scas
mov
movs
mul
jmp
jl
int
cmp
out
inc
push
std
pop
push
adc
in
(bad)
pop
xchg
into
mov
arpl
push
retf
int3
fidivr
cs
xlat
std
xlat
aaa
push
es
lock
call
sar
fidivr
jae
data16
test
and
retf
sahf
lods
mov
sbb
in
mov
sar
into
mov
xor
jp
sar
out
call
popa
ds
cmc
int
iret
pop
imul
hlt
data16
pop
inc
sub
mov
jg
xchg
cdq
imul
outs
cmps
sub
dec
mov
xor
scas
jns
cmps
and
ret
mov
add
pop
(bad)
repz
aam
js
pop
fcom
cmc
mov
mov
xchg
mov
dec
pop
leave
and
popa
movs
push
mov
dec
mov
lea
icebp
cmp
fs
push
pushf
(bad)
stos
fadd
mov
sbb
pop
pop
sub
xchg
sub
loopne
gs
sub
fsubr
(bad)
out
fsub
mov
imul
das
mov
(bad)
(bad)
outs
and
retf
les
push
jge
push
in
push
ss
test
xchg
xor
ret
mov
shr
je
mov
fsubr
mov
or
ret
xchg
iret
mov
int
fs
bound
push
into
cli
stc
(bad)
neg
jnp
pop
icebp
clc
pushf
cdq
sub
outs
inc
fiadd
repz
rcl
cmp
sahf
jae
dec
cmp
push
aad
cmps
dec
push
push
push
ins
xchg
test
mov
repnz
dec
retf
dec
jns
push
in
into
(bad)
jae
jmp
xor
jmp
addr16
cmp
xchg
and
cmp
inc
out
rcr
mov
fnstenv
inc
sbb
ss
jecxz
fst
push
std
seta
idiv
cs
xor
(bad)
sub
adc
mov
adc
xor
(bad)
jmp
scas
popf
push
lea
xchg
adc
loope
and
fdivr
scas
and
arpl
inc
or
cmp
sbb
mul
pop
mov
outs
cmp
(bad)
fstp
xlat
jno
out
cs
sbb
(bad)
loope
jle
mov
retf
pushf
mov
shr
mov
jmp
sahf
jecxz
mov
and
mov
inc
fistp
add
pop
dec
fcmovb
aas
loopne
(bad)
sbb
in
repnz
xor
sub
pop
cmps
xchg
test
push
jns
cmps
or
mov
stos
in
sbb
addr16
cwde
push
add
test
int3
add
lods
out
dec
sbb
imul
sar
jmp
js
jne
lahf
sbb
stos
jecxz
mov
jns
cmps
jno
nop
sbb
gs
cmp
cmps
jmp
adc
int
pusha
imul
std
xor
xor
and
fbstp
xchg
push
xor
adc
xor
add
sbb
(bad)
cmps
jg
in
xor
ins
sbb
push
push
xor
xor
sub
inc
movs
dec
adc
cs
out
pop
push
(bad)
out
ss
sbb
push
push
adc
test
sub
jecxz
dec
pop
jmp
pusha
and
in
inc
out
adc
xor
popf
or
in
stc
aam
mov
cli
and
outs
cmp
jbe
cmp
(bad)
data16
sti
imul
fwait
inc
in
xchg
jecxz
lods
dec
xchg
adc
(bad)
loop
pop
ins
stos
inc
(bad)
cmp
rcl
(bad)
or
es
fcomp
mov
lods
mov
mov
popa
inc
movs
jae
movs
push
xor
movs
jnp
ror
sahf
push
or
loopne
lea
pop
cmp
repnz
scas
xchg
dec
xor
sub
sar
loop
mov
mov
enter
push
(bad)
inc
das
push
mov
test
call
cmp
pop
mov
fs
enter
cli
push
out
imul
fnstsw
(bad)
idiv
inc
inc
mov
mov
test
data16
inc
mov
data16
sahf
mov
cmp
jl
arpl
jno
scas
jne
sub
cli
mov
(bad)
daa
ror
jle
test
jno
mov
push
adc
in
add
mov
cmc
repz
or
popa
xlat
pop
mov
xlat
int3
push
(bad)
sub
mov
pushw
icebp
outs
or
sub
lds
cdq
jecxz
aas
(bad)
std
sbb
push
and
xor
shl
mov
(bad)
mov
cs
in
outs
pop
pop
xlat
repnz
jmp
ins
mulps
scas
jne
into
mov
push
rol
mov
imul
mov
lahf
mov
imul
push
ins
dec
and
jno
(bad)
shl
(bad)
cmp
pushf
mov
sbb
mov
retf
and
and
int3
mov
repnz
ds
sub
or
lods
scas
dec
mov
leave
mov
call
out
and
xor
les
push
mov
call
jns
sub
push
push
aaa
call
into
inc
add
hlt
repnz
aas
adc
call
push
mov
or
lock
push
xchg
je
retf
scas
int3
pop
dec
xchg
push
xchg
(bad)
mov
mov
push
ficom
ja
fs
iret
sub
and
cmp
mov
mov
pop
jmp
sar
pop
(bad)
fdivr
push
stos
popa
add
xchg
mov
ja
es
and
sub
sbb
ins
nop
fld
or
neg
iret
push
cld
jmp
(bad)
ucomiss
scas
neg
xor
repz
cmp
cmps
jns
sbb
mov
test
sub
mov
add
dec
xor
fimul
js
sub
adc
lea
cmp
nop
or
push
or
mov
js
call
std
jae
call
test
call
in
stos
push
or
adc
mov
inc
jns
and
lods
hlt
mov
scas
test
aaa
lods
clc
(bad)
aad
data16
push
(bad)
push
pop
cli
or
fcomip
dec
lds
sbb
loopne
or
xor
jno
es
adc
arpl
pusha
into
mov
paddb
clc
in
adc
xchg
jbe
sub
ficomp
out
mov
ret
pop
mov
fdiv
and
out
stc
aas
idiv
xor
or
inc
out
ret
mov
mov
mov
xor
jecxz
cmps
adc
enter
sbb
jmp
inc
(bad)
aam
pop
(bad)
ja
mul
cmc
and
cmp
(bad)
imul
fld
ja
sahf
sub
int
aad
loopne
dec
idiv
jmp
inc
fnstcw
dec
fcom
loope
jl
test
inc
mov
xchg
fdivr
xchg
mov
push
add
or
xor
sub
outs
and
jmp
jae
iret
sti
sub
(bad)
mov
mov
jns
neg
cmps
rcr
ds
mov
fucomip
fnstenv
push
retf
retf
loope
sbb
aas
mov
gs
cld
in
ficom
fstp
xchg
test
sbb
push
inc
sub
mov
cld
shl
pop
adc
lea
cmp
add
mov
loope
jp
push
pop
pop
jmp
shr
mov
test
or
(bad)
cmps
es
mov
xlat
dec
dec
fcomp
jl
leave
push
adc
call
rcl
adc
jmp
addr16
lahf
and
ss
sbb
inc
aas
ins
lods
pop
push
xchg
dec
int3
out
add
sti
daa
mov
(bad)
clc
mov
lds
add
outs
sbb
mov
push
fwait
gs
xchg
loope
mov
repz
cmp
cmp
cmp
inc
cld
hlt
ror
out
xchg
cwde
jo
(bad)
dec
es
loop
inc
in
xchg
sbb
mov
call
lods
enter
stc
(bad)
push
mov
lahf
sar
push
jbe
cdq
popa
call
mov
out
jo
sti
mov
inc
pusha
cmp
or
js
out
pop
retf
mov
mul
(bad)
int3
mov
scas
or
cmp
jge
enter
bound
xchg
outs
ret
push
jl
add
pusha
cmp
push
xlat
in
xor
mov
cmp
call
test
sub
fistp
loop
or
stos
pop
lea
in
cmp
sti
in
fcmovu
mov
sub
adc
shr
pop
push
fwait
adc
inc
pop
push
(bad)
adc
sub
cmp
dec
pop
pop
mov
jns
pushf
ja
and
cmp
xor
retf
hlt
and
gs
popf
das
sbb
add
lahf
jae
dec
or
push
bound
mov
jb
lods
xlat
sub
mov
loope
fdivp
loop
mov
js
add
jno
in
fisubr
sahf
mov
cmp
fwait
cmp
(bad)
fucomi
pusha
mov
pop
cmp
mov
into
sub
or
cmp
sbb
in
inc
jae
or
mov
pop
loope
and
arpl
clc
xchg
adc
scas
nop
ss
sub
mov
neg
inc
push
mov
push
pop
push
xlat
movs
mov
pop
cld
xor
es
mov
push
push
sub
or
mov
daa
mov
in
ins
out
popf
loop
out
neg
adc
fld
push
xchg
aad
test
js
xor
or
pop
cwde
sbb
inc
adc
cmc
fisub
mov
lock
retf
shl
loope
rol
xchg
jb
sub
jle
sbb
push
jp
sti
daa
sar
jmp
inc
xor
scas
jle
or
mov
cmps
inc
pop
out
jmp
imul
push
gs
pop
cmps
mov
pop
fnstcw
sub
imul
aam
push
rol
pop
es
xlat
rcr
inc
mov
xor
loop
aaa
scas
xchg
cmp
sbb
cmc
mov
pushf
pop
cmc
shr
dec
lods
dec
mov
call
enter
shl
mov
arpl
repnz
(bad)
adc
(bad)
jg
es
div
ror
sbb
cli
xchg
iret
fstp
sbb
cmp
cmp
jmp
das
lods
mov
jmp
jg
push
xor
cmps
and
cmc
out
stc
leave
adc
pusha
mov
mov
mov
jmp
mov
scas
push
mov
jle
out
sbb
addr16
jns
sbb
and
mov
into
out
fadd
clc
sbb
jp
mov
push
sbb
or
daa
scas
pushf
fidiv
pop
shl
lock
mov
call
mov
out
nop
lahf
pop
cmp
xchg
add
clc
out
pushw
push
inc
cmp
out
xchg
dec
in
les
les
movs
adc
dec
sub
in
fwait
and
inc
sub
ins
jmp
push
mov
iret
jne
adc
mov
mov
outs
and
test
push
bound
retf
addr16
cdq
ja
lds
pop
lea
jno
push
jnp
push
fs
shr
add
xor
jns
push
pushf
in
xor
cmp
lahf
and
stos
(bad)
cmp
mov
sbb
jne
sub
imul
repz
sbb
add
add
mov
adc
les
mov
aad
adc
mov
(bad)
pop
jne
fnsave
inc
or
int
mov
pop
cmp
pop
mov
retf
mov
xor
aad
pop
idiv
repz
jle
pop
lahf
dec
mov
jne
and
movs
(bad)
es
pushf
jb
int3
test
mov
mov
cmp
dec
jbe
sub
dec
in
lods
pop
retf
aam
scas
and
clc
(bad)
sub
(bad)
(bad)
movs
adc
gs
sbb
sub
aam
cli
mov
cmp
sti
in
shl
push
xor
sbb
pop
inc
je
mov
movs
xchg
lock
ror
arpl
rcl
lods
xor
sub
icebp
test
test
(bad)
loope
mov
(bad)
mov
xchg
jg
in
mov
cmps
pushf
lods
adc
ss
mov
or
cli
lahf
test
mov
cwde
mov
xchg
cmp
stos
inc
dec
popa
icebp
push
cmp
in
cmp
out
and
add
cmp
mov
pop
test
frstor
cmp
addr16
mov
sbb
push
repz
ins
pop
rcr
dec
dec
aaa
cmp
dec
inc
xchg
cmps
cmps
pop
mov
stos
fdiv
fsubr
xchg
mov
int
dec
jno
xchg
sub
pop
pop
jno
lods
aas
mov
(bad)
test
xor
cmp
stos
lds
(bad)
mov
and
aad
push
out
clc
xor
dec
jno
or
repnz
sub
add
fwait
xchg
out
push
xchg
inc
mov
test
cmc
mov
cwde
inc
stos
mov
cmp
retf
call
xchg
retf
(bad)
xchg
inc
(bad)
fs
mov
jecxz
imul
loope
outs
or
(bad)
mov
in
mov
dec
test
ins
jo
sub
or
movs
pop
(bad)
not
sub
dec
call
jae
cmp
arpl
mov
cli
mov
xor
pop
jns
aad
adc
mov
pop
fisttp
lods
mov
cmc
push
mov
adc
lea
in
mov
pop
repnz
fs
in
js
xchg
stc
(bad)
mov
(bad)
and
mov
mov
push
imul
push
mov
fisubr
out
(bad)
sub
jl
stos
mov
xchg
jb
mov
imul
rep
in
pop
mov
fucomp
mov
cmp
shr
pop
lods
push
jne
add
mov
jae
jbe
leave
(bad)
sub
ret
mov
sub
pop
mov
pop
inc
and
mov
xor
test
ret
(bad)
test
xchg
imul
(bad)
mov
jns
test
inc
sbb
outs
enter
jbe
dec
xor
ret
xchg
sti
adc
hlt
aaa
push
gs
sub
cmc
ins
sub
scas
loopne
sbb
ficom
ffree
pop
dec
xchg
push
xchg
leave
mov
jo
out
dec
pop
xchg
or
mov
or
jmp
sub
out
cmps
jl
cli
xchg
jbe
push
mov
loope
pop
sub
pop
xor
inc
imul
push
(bad)
mov
ds
cdq
xor
es
aas
movs
cs
dec
xchg
push
pop
push
imul
inc
arpl
cdq
adc
xchg
(bad)
imul
fstp
inc
cmp
pop
in
cs
mov
or
ror
xor
pop
clc
dec
or
out
push
or
(bad)
jne
push
jae
dec
xchg
pop
ins
dec
jo
mov
and
jo
pop
cmp
fs
add
inc
fild
scas
aad
lds
push
aaa
lods
push
rcr
mov
xchg
mov
jnp
dec
(bad)
ins
add
dec
pop
test
mov
xor
jo
cs
pop
cmps
out
clc
xlat
popf
stos
test
sub
ret
and
imul
jae
jle
addr16
push
inc
push
das
(bad)
movs
pushf
dec
call
mov
or
aad
lea
mov
addr16
pop
sub
aaa
jne
jb
stos
cdq
pop
fnstcw
adc
fld
scas
std
pop
mov
mov
cmp
mov
sub
add
jns
sub
xchg
stos
lock
push
mov
pop
dec
xchg
fnstenv
nop
adc
inc
popf
xchg
fwait
test
dec
ficomp
pop
ret
std
fwait
lock
push
push
loopne
xor
push
adc
ja
jo
pop
mov
jmp
mov
xchg
movs
movs
xchg
push
aad
and
push
jle
into
dec
cs
shr
cld
popf
(bad)
fnsave
xchg
mov
aad
(bad)
(bad)
jmp
cmp
adc
xchg
mov
sahf
outs
mov
(bad)
popa
stc
inc
xlat
fsubr
je
fcomp
pushf
outs
call
mov
push
retf
repz
test
sub
jae
cwde
mov
push
jmp
int
cli
pop
mov
clc
cmp
jle
mov
pop
pusha
call
iret
push
cmp
mov
stc
push
cmps
mov
out
pop
lea
dec
inc
inc
push
xchg
shl
mov
cmp
xchg
jp
movs
lods
sbb
jae
call
inc
jae
sbb
mov
in
mov
loope
es
pop
mov
push
sub
inc
popf
test
sbb
idiv
mov
sahf
dec
mov
pop
jge
xchg
xor
in
xor
popa
dec
std
cld
in
out
jp
inc
or
inc
fnstcw
pop
xchg
in
cmp
jge
stos
mov
clc
imul
inc
add
enter
cmps
xlat
sbb
test
int3
sbb
mov
outs
adc
inc
stc
test
mov
dec
sar
push
fisubr
xchg
call
test
push
enter
push
push
inc
xchg
movs
jne
out
icebp
mov
addr16
mov
loop
data16
ins
xor
jae
cmc
sub
mov
fmul
pushf
jnp
(bad)
aam
sub
jnp
mov
shl
push
imul
mov
fisub
mov
inc
pop
sub
lock
cmps
jns
pop
(bad)
mov
(bad)
lds
pop
adc
aam
dec
frstor
push
push
into
dec
aad
dec
jne
sbb
jae
cmp
ror
push
movs
mov
xchg
test
mov
add
sbb
push
mov
pop
test
and
movs
sub
test
sub
cmp
test
stos
icebp
arpl
cmps
hlt
test
stos
sbb
test
mov
sbb
adc
inc
ins
or
and
cmps
sbb
mov
fnstenv
sbb
xor
cmp
push
aam
cmps
jle
ds
sti
mov
aam
aaa
mov
sbb
sub
cmp
pop
inc
iret
daa
sbb
pop
cmps
xor
mov
xor
imul
aad
enter
call
rcr
push
push
xlat
inc
clc
add
dec
adc
int
mov
lods
add
or
push
into
push
test
xchg
xchg
xlat
mov
fisubr
lea
scas
xchg
fbstp
mov
retf
out
in
outs
xor
fisttp
xor
js
push
cld
cmps
fistp
mov
push
aad
push
mov
or
xchg
push
lahf
mov
push
mov
push
sti
lahf
fnsave
xchg
mov
fwait
push
pushf
fincstp
les
clc
aam
aad
pusha
xchg
or
aaa
pop
mov
push
pop
or
jo
sbb
inc
inc
sbb
and
jmp
pushf
stos
into
inc
imul
mov
test
iret
xchg
push
jmp
pop
and
lods
ror
jg
call
sti
adc
dec
push
mov
jae
sub
dec
xchg
cmp
into
push
mov
cmp
sbb
add
mov
adc
sbb
mov
inc
cli
mov
fidiv
scas
inc
jg
fstp
shl
jb
jmp
jno
sub
fcomip
call
mov
cld
dec
mov
stos
loope
daa
cmps
aam
ds
mov
mov
push
mov
sub
in
out
rcr
mov
mov
ds
pop
dec
push
inc
sar
mov
enter
hlt
pop
mov
jle
inc
jmp
push
jo
cmc
gs
fnsave
pop
inc
push
cmps
adc
sbb
sub
dec
movs
push
out
retf
inc
aam
push
(bad)
ins
cdq
cdq
push
inc
addr16
pop
or
aas
cdq
ret
sub
jno
aad
test
sar
push
retf
test
jae
ja
add
ins
pop
scas
or
fcmovb
sbb
test
test
retf
push
inc
cmc
mov
dec
shl
(bad)
pop
lahf
ins
pop
outs
(bad)
mov
push
mov
dec
xor
sub
xchg
mov
sbb
xor
xchg
lods
jbe
lds
adc
(bad)
cmc
jae
es
mov
out
cmp
mov
std
sar
mov
sahf
jge
mov
fmulp
adc
std
jg
jns
push
xor
sar
aas
sti
fs
adc
jnp
arpl
(bad)
cld
jns
xchg
mov
loopne
mov
pop
(bad)
ss
test
enter
add
mov
xrelease
mov
add
test
std
jo
inc
test
(bad)
mov
mov
or
sbb
mov
ss
sbb
shl
mov
mov
pop
push
repz
mov
daa
push
ret
push
mov
and
popf
dec
sahf
fdiv
jno
imul
retf
sbb
stos
shl
lea
sub
mov
test
data16
inc
icebp
ja
enter
jb
xchg
pop
enter
jmp
add
jns
cmps
and
gs
xchg
fwait
iret
jmp
test
retf
(bad)
icebp
mov
fdiv
cmps
mov
(bad)
iret
out
jle
(bad)
je
scas
fcmovu
(bad)
fcomi
in
push
nop
scas
adc
cld
enter
jnp
mov
jecxz
cmp
jb
(bad)
cmp
cmp
pusha
in
and
fild
test
mul
xchg
add
shl
bound
and
out
sub
clc
dec
ret
fbld
or
stc
retf
inc
sub
lea
cs
mov
ja
mov
rcr
adc
jnp
lds
inc
in
imul
cmps
sbb
shl
adc
sub
in
mov
fdiv
bound
inc
and
cmp
frstor
adc
ret
(bad)
sbb
mov
jo
aam
out
mov
scas
sub
movs
adc
leave
jae
cdq
les
int
test
cmp
xor
mov
popf
shr
test
xchg
sub
mov
retf
sub
cmc
or
jne
cmps
jno
push
xchg
faddp
mov
je
adc
je
ds
xchg
repz
out
test
aad
mov
dec
add
lock
repnz
mov
push
loop
enter
inc
xchg
call
mov
fwait
into
fprem1
push
not
cmps
sub
mov
stc
push
nop
out
adc
adc
in
adc
add
fnsave
ror
shr
repnz
hlt
fs
rcl
into
aas
ins
in
imul
cdq
pop
cli
push
cmp
scas
add
mov
mov
jo
lock
xor
dec
jne
sbb
mov
and
sbb
xlat
jecxz
inc
cmp
push
mov
cmp
pop
xchg
cmc
les
ror
xlat
cli
dec
mov
(bad)
pop
mov
push
fstp
aas
stos
scas
lahf
stos
stos
xlat
pop
mov
xchg
outs
jmp
(bad)
das
mov
cmp
mov
sub
inc
jl
xchg
mov
lock
mov
jbe
sub
sub
cmp
jne
inc
mov
cs
aaa
aas
in
(bad)
pop
scas
cmps
icebp
loop
mov
iret
fchs
icebp
mov
and
cmp
cli
stos
dec
out
sub
inc
(bad)
xchg
cli
dec
je
xchg
in
dec
mov
jns
inc
push
adc
in
data16
push
pop
scas
imul
rcl
enter
sub
rcr
iret
fld
or
aas
xor
arpl
fisubr
fstp
xchg
mov
pop
mov
jne
(bad)
dec
mov
xor
sub
out
cmp
icebp
push
jb
pop
adc
dec
cmps
sub
push
or
pop
xchg
(bad)
iret
jecxz
sub
mov
test
cmp
inc
pop
cmp
jb
push
push
stc
int3
or
xchg
cmp
leave
mov
pop
into
int
and
aam
jne
xchg
mov
push
mov
pop
out
dec
addr16
test
leave
sbb
jle
imul
std
pop
loop
cmp
stos
and
xor
inc
hlt
shl
je
push
(bad)
jae
dec
je
retf
jne
mov
adc
gs
cwde
loopne
sbb
outs
xchg
imul
jne
push
push
in
retf
mov
pop
jecxz
mov
out
sub
or
in
in
mov
xor
adc
sar
mov
or
jmp
retf
xchg
pushf
cmps
cmps
in
cwde
aas
loop
data16
jo
jg
repz
and
mov
aad
aaa
icebp
jmp
ja
lods
mov
jecxz
fisttp
outs
popf
jmp
retf
xchg
lea
add
mov
cmp
cmp
loope
xor
dec
xchg
arpl
in
mov
retf
pop
sar
outs
int3
mov
xor
stos
arpl
sub
xchg
pop
pusha
in
mov
cmp
inc
xchg
dec
mov
cld
xchg
in
cdq
sub
xchg
inc
or
fwait
fs
fmulp
mov
cdq
call
pop
int
add
sub
inc
adc
loop
xchg
popf
(bad)
cmc
and
jmp
jg
dec
in
fstp
dec
sar
shl
xor
retf
jae
addr16
movs
dec
fcom
push
pusha
pop
mov
fwait
pushf
(bad)
sbb
cwde
pop
ja
rcr
xor
push
jecxz
popa
and
cmps
add
imul
jns
mov
ins
or
adc
inc
into
ret
xchg
push
addr16
addr16
mov
cmc
test
mov
push
xchg
push
dec
xchg
push
hlt
or
inc
in
fiadd
mov
jecxz
mov
fcom
mov
mov
jo
loopne
cmc
sub
adc
push
adc
repnz
arpl
in
sbb
data16
cmps
and
(bad)
fwait
mov
in
aam
mov
pop
in
adc
gs
pusha
add
jne
into
jae
mov
sti
popf
inc
or
adc
mov
ja
push
repz
popf
sbb
outs
xchg
loopne
cmp
jns
retf
ret
lods
aad
scas
mov
dec
repz
mov
das
mov
fiadd
cmp
pop
repz
scas
xchg
ret
sub
loop
dec
out
push
or
les
sub
shl
xchg
scas
jns
cmp
cmps
ror
jge
mov
xchg
xchg
jae
mul
(bad)
call
cld
in
bnd
mov
adc
xchg
cli
cdq
pop
dec
jl
sub
loopne
mov
mov
(bad)
xchg
xor
test
mov
es
jbe
icebp
mov
in
and
cli
aas
adc
cmp
adc
addr16
push
and
out
(bad)
iret
sahf
(bad)
pop
loop
pop
stc
cs
mov
jg
clc
fstp
jg
addr16
dec
js
clc
fld
rcl
mov
cld
in
cli
lahf
push
jmp
pop
leave
rcl
push
pop
pusha
push
nop
mov
rcl
jecxz
into
std
or
cmc
jecxz
xlat
pusha
pop
bound
cmp
cmps
pop
xchg
scas
in
push
ds
pop
ret
sahf
mov
sub
scas
call
sar
mov
sub
inc
das
(bad)
in
xchg
fadd
cs
jmp
dec
popa
repnz
iret
adc
pushf
outs
push
inc
pmulhuw
jmp
xor
mov
pop
shl
cmps
pushf
jo
ss
fwait
cmp
cmp
leave
sub
push
adc
(bad)
mov
jb
ret
mov
dec
rcr
mov
and
(bad)
jecxz
(bad)
mov
fs
in
sbb
push
sahf
outs
repnz
cmc
int3
push
mov
xchg
mov
push
jne
add
add
test
xchg
pushf
inc
call
cld
sti
mov
test
aaa
mov
test
movs
mov
push
lods
iret
jno
and
lods
inc
cmp
add
pushf
push
stc
xchg
jb
and
out
xchg
mov
rcr
jnp
int
jmp
mov
int
rcl
int3
cld
or
cmp
push
push
scas
mov
cmps
out
push
push
into
jns
dec
fild
xchg
inc
mov
imul
lods
jmp
xchg
scas
test
shr
xchg
pop
(bad)
fs
cmp
(bad)
loopne
xchg
pushf
mov
ficom
jp
jnp
push
scas
mov
pop
jl
push
mov
adc
xchg
xor
sti
sub
xchg
jae
push
jae
out
cmp
rcr
pop
pop
and
jo
add
jl
retf
jnp
jb
je
pop
and
dec
retf
stc
int
sbb
nop
rcl
or
fs
dec
jle
and
popa
int3
out
push
stc
outs
jmp
jp
dec
xor
in
xor
jnp
es
add
retf
jne
stc
and
push
(bad)
xchg
inc
adc
and
ror
pushf
push
jns
retf
imul
cmps
pop
lods
das
stos
xchg
sub
and
xchg
out
imul
and
js
cmp
sahf
arpl
pop
icebp
pop
shl
cmp
fadd
push
cli
aam
cmp
fld
mov
push
mov
ds
mov
div
mov
shr
sbb
xchg
shr
pop
lods
movs
sub
pop
imul
js
dec
fcmovb
pop
push
ret
inc
(bad)
xor
fwait
loop
int3
and
shr
adc
repz
push
push
sub
div
xchg
cli
sub
inc
icebp
jle
ins
push
xchg
mov
mov
dec
xchg
repz
out
and
cli
(bad)
hlt
mov
jp
rcr
push
retf
pushf
and
push
aad
jg
imul
sti
enter
sub
add
stc
sub
mov
cli
pop
(bad)
call
pushf
jecxz
loopne
mov
cmp
pop
not
pmullw
iret
lea
cmps
jnp
pop
cmp
and
mov
xchg
and
inc
neg
or
data16
jo
pop
js
cmp
mov
pop
inc
jbe
popf
pushf
mov
into
or
mov
cdq
les
adc
lock
sub
popf
gs
and
add
jns
es
jg
int
jb
xor
push
das
push
sahf
or
pop
xor
repz
add
js
and
jae
and
cdq
lock
sub
imul
(bad)
or
mov
xor
and
shr
mov
cmp
adc
xor
js
and
xlat
push
dec
mov
mov
push
ret
xor
and
cdq
inc
jecxz
rcl
enter
mov
xchg
lock
cmc
and
push
xchg
sahf
fwait
call
iret
xchg
xchg
mov
retf
stc
xor
(bad)
mov
mov
jae
test
inc
(bad)
into
inc
jns
cmp
mov
call
push
jl
int
ret
out
fisubr
mov
push
stos
adc
jge
sbb
int
fmul
jmp
lds
shr
pop
data16
cmp
mov
jb
adc
(bad)
test
mov
in
sbb
iret
aaa
jo
inc
pop
gs
jp
in
pop
xor
in
gs
ins
lock
sub
pop
test
pop
sub
inc
adc
mov
xchg
mov
sub
xor
jge
jge
test
xchg
fnsave
jne
clc
fist
imul
sbb
out
ds
daa
stos
loope
ins
cmps
jo
mov
(bad)
jno
jns
dec
inc
popa
out
std
lock
inc
adc
xchg
jle
enter
jp
xor
push
shr
jo
sar
outs
or
(bad)
dec
(bad)
cmc
movs
sbb
or
mov
test
sbb
loop
movs
(bad)
sbb
add
nop
or
mov
cmc
dec
and
xchg
(bad)
int3
cmp
repnz
ss
ret
sbb
sbb
pop
icebp
pop
fsubr
ins
mov
jb
int
mov
cdq
sbb
fsub
movs
arpl
cmp
repz
int
jno
adc
sub
lock
fwait
push
test
push
cmp
jo
call
pop
fsubr
cmp
adc
(bad)
ror
sbb
cwde
aaa
pop
std
ficom
out
pop
popf
jb
inc
fwait
jle
jo
add
iret
inc
pop
mov
cli
inc
and
stc
iret
(bad)
inc
leave
imul
jle
jmp
pop
in
xchg
lds
jmp
inc
jecxz
jnp
dec
cld
aaa
bound
fild
jecxz
jg
mov
cli
mov
mov
mov
in
sub
xchg
and
cmps
fist
and
arpl
aam
jmp
cmp
jl
call
cs
lods
xchg
les
fisttp
lods
cli
jno
lods
mov
jb
jecxz
pop
scas
and
retf
xor
jb
ret
mov
jp
stc
or
stc
jno
mov
ja
inc
mov
fcom
fcom
fcom
sar
push
(bad)
sbb
sbb
neg
cmp
cmp
inc
(bad)
jle
out
out
stc
sbb
pop
cmp
test
pop
or
enter
call
lock
ds
cmps
mov
cmc
(bad)
mov
(bad)
daa
test
pop
aam
mov
scas
or
jp
sti
adc
stos
idiv
jns
xor
fsubr
mov
mov
scas
xchg
jmp
pop
ret
dec
dec
inc
ins
jmp
call
les
push
mov
aad
popf
jl
push
mov
dec
stc
mov
inc
push
xchg
sbb
out
xchg
jno
scas
xlat
shl
dec
cmps
test
clc
push
pop
cmps
jo
inc
push
or
pop
pop
and
stos
lock
ror
ret
xchg
sbb
mov
loop
jbe
in
push
fdivr
add
jbe
adc
and
stos
leave
(bad)
jmp
fnstsw
sbb
pop
inc
(bad)
movs
add
retf
and
push
jb
and
mov
cmps
pop
out
leave
repz
cmp
xor
sub
push
fnstsw
lods
cld
xchg
sub
das
(bad)
movs
fnstcw
cmps
pop
pop
je
call
push
ds
sub
push
cmp
or
xor
sti
sbb
shl
push
cli
jbe
das
mov
push
sub
pop
lea
int
out
jmp
adc
mov
lahf
pop
lock
push
lock
lock
imul
mov
pop
mov
int
pop
clc
cli
cld
inc
neg
xchg
pop
(bad)
test
cmp
push
fisttp
sub
xor
lock
adc
shl
(bad)
cmp
call
fmul
cmp
std
xchg
cmp
iret
call
xchg
jmp
shl
adc
and
stc
xchg
int3
sbb
leave
or
or
aam
stos
push
pop
test
pop
leave
outs
out
bnd
xchg
lds
dec
stos
jmp
push
repnz
aad
mov
mov
inc
popf
js
mov
mov
pop
and
jb
mov
les
add
mov
and
movs
movs
xor
popf
es
outs
aas
popa
shr
das
jne
mov
mov
push
jno
cmp
inc
sbb
dec
lahf
inc
retf
fwait
cmp
daa
dec
lods
cli
jmp
out
pop
jae
mov
nop
scas
xchg
sahf
icebp
mov
mov
cmp
pop
xchg
mov
ss
dec
out
pop
pop
jae
(bad)
mov
dec
(bad)
in
repnz
fwait
mov
aad
adc
setle
mov
mov
scas
(bad)
std
mov
inc
les
icebp
loopne
dec
pushf
mov
iret
fidivr
adc
loopne
jmp
neg
mov
cmp
and
jl
icebp
adc
paddd
adc
and
jl
cmp
and
cmp
wbinvd
paddd
mov
ret
in
and
inc
outs
es
sbb
jno
sub
cmp
test
sub
xchg
mov
pop
lock
test
aas
sahf
push
pop
add
icebp
dec
xchg
jl
mov
push
jmp
mov
ss
jp
icebp
int3
sar
in
push
inc
fs
arpl
out
sbb
jnp
push
jl
movs
sbb
and
jne
icebp
shl
adc
pop
and
mov
cwde
out
pop
dec
in
dec
push
fs
(bad)
jae
jge
sar
stos
cmp
inc
mov
push
sub
add
jmp
loope
shr
out
loopne
xor
clc
arpl
stc
xchg
xor
cmp
dec
ror
jecxz
call
pop
xchg
loop
enter
movs
adc
cmps
sbb
dec
aad
sub
rol
stos
and
dec
fild
xchg
jae
les
mov
outs
inc
inc
int
lea
push
push
dec
and
or
jmp
shl
adc
and
and
add
imul
mov
jmp
pop
pop
sbb
mov
test
in
cwde
cmp
inc
cmp
sbb
mov
mov
add
enter
int3
add
inc
(bad)
and
mov
xchg
pop
push
hlt
fs
retf
jnp
jle
sub
inc
adc
pop
mov
enter
fild
pop
jmp
push
std
sbb
aad
cmp
push
or
aam
pop
pop
int
xchg
popaw
gs
xchg
pop
adc
fcmove
test
out
div
stc
mov
cld
out
pxor
jp
pop
mov
ficomp
(bad)
push
or
mov
cmc
or
jp
push
lock
adc
inc
jmp
jle
cli
inc
in
xchg
jle
out
scas
ins
pmaxsw
lahf
jb
mov
movs
dec
stos
test
mov
stc
jp
mov
sbb
das
pop
iret
cli
xchg
out
jg
inc
and
inc
int3
jge
adc
add
mov
and
mov
(bad)
fisub
add
fs
popf
scas
rol
adc
(bad)
js
xor
dec
and
inc
dec
mov
or
xor
pop
pop
in
sub
in
das
push
push
sbb
sahf
test
rol
ror
les
pop
xlat
outs
inc
push
mov
jnp
cli
div
outs
test
xor
gs
dec
arpl
dec
inc
add
mov
jecxz
sbb
mov
call
jmp
shr
ror
pop
mov
add
xlat
call
mov
mov
jl
mov
outs
mul
gs
jne
ffreep
mov
jno
repz
cmps
ja
sub
cld
cdq
(bad)
mov
push
icebp
cs
(bad)
push
cmp
in
sub
jp
xchg
in
pop
dec
or
loope
xor
sub
(bad)
xchg
out
in
das
adc
cmp
test
dec
mov
retf
sar
pushw
inc
pop
and
mov
lods
fsub
push
(bad)
mov
xor
mov
fild
aam
int3
push
aam
pop
movs
pop
(bad)
fst
call
fild
imul
aam
jnp
rcr
je
int3
cmp
jnp
(bad)
sti
mov
icebp
mov
fimul
or
pop
xchg
push
outs
cmps
popf
or
mov
lock
retf
mov
mov
add
aad
adc
(bad)
cmp
pop
ret
jp
popa
push
ret
daa
adc
aad
ds
jmp
mov
dec
fcom
outs
dec
es
jmp
sub
outs
aas
lea
test
push
jmp
je
movs
xor
xchg
and
dec
mov
mov
pop
inc
test
data16
jecxz
mov
sub
inc
jo
jecxz
or
push
or
cmp
ret
add
sar
scas
inc
mov
fdiv
mov
test
push
mov
fucomp
inc
hlt
xchg
cmp
test
mov
push
cmp
inc
pop
ja
(bad)
mov
mov
out
xchg
sub
cmp
mov
pop
xchg
scas
lea
or
sahf
cmp
mov
jns
sahf
test
sbb
xchg
dec
push
sbb
hlt
in
xor
aad
cdq
cmps
jl
jae
pop
popf
les
jno
sbb
jns
in
ins
jb
jo
pop
xor
xor
in
cmp
cmp
pop
and
push
push
jmp
push
mov
ret
(bad)
xchg
and
jmp
mov
in
bound
popa
in
push
sti
sub
int3
ficomp
bound
mov
dec
jp
push
fimul
mov
arpl
neg
sub
(bad)
xor
pop
sahf
jg
fsubr
pushf
add
pop
dec
pop
jp
and
push
std
cwde
icebp
(bad)
and
test
and
or
jl
in
test
cmp
shl
dec
test
iret
mov
mov
xor
adc
or
mov
imul
out
sub
lock
or
dec
mov
push
push
add
js
aad
into
out
cmp
ins
retf
adc
outs
push
retf
idiv
outs
out
call
outs
inc
xchg
(bad)
cmc
test
aam
fwait
ds
stc
xor
ins
xchg
pop
out
jne
or
sbb
mov
mov
sbb
mov
popa
sbb
dec
sub
adc
jae
ja
sbb
pop
mov
data16
ret
jecxz
sub
ret
mov
cmp
jno
mov
and
mov
pop
jno
mov
pop
add
test
and
mov
jnp
adc
cmp
in
or
xor
jns
push
stc
mov
(bad)
enter
xchg
ficom
ins
jmp
outs
mov
jo
(bad)
out
mov
mov
test
(bad)
push
xchg
jns
mov
dec
jge
in
sub
xor
xor
stc
mov
shr
pop
in
addr16
jns
in
sub
repz
mov
mov
movs
pop
xor
movs
pop
in
out
scas
repnz
stos
cld
in
je
push
cs
xor
bnd
pop
inc
int
xchg
mov
jnp
or
jne
adc
mov
mov
adc
fisub
cmps
sub
pop
pop
out
dec
fsubr
pop
repz
(bad)
jns
js
cdq
push
imul
les
sar
into
retf
pop
mov
add
jno
out
push
push
fsubr
jecxz
or
jecxz
mov
out
fcompp
lea
adc
lds
retf
call
mov
outs
retfw
inc
pop
sub
mov
pop
fs
int
fnsave
jo
call
inc
cwde
pop
icebp
jge
lock
cmp
xchg
rcl
in
ror
(bad)
dec
mov
int
mov
jecxz
sub
or
adc
(bad)
ss
out
sub
outs
sub
sbb
je
sub
pop
adc
xor
enter
addr16
fimul
add
push
std
sub
test
test
mov
and
jmp
addr16
int3
jl
retf
lods
xor
inc
jae
cmp
inc
jp
cmp
push
fbld
adc
addr16
inc
fadd
xchg
xchg
data16
sbb
dec
out
dec
pushf
in
sbb
pop
cwde
mov
int3
fsqrt
pop
push
out
sti
push
sbb
xchg
xchg
cld
add
out
test
mov
shr
and
inc
fwait
jbe
enter
adc
iret
pop
or
mov
pop
movs
mul
into
or
sar
out
mov
fcomp
sub
mov
shr
aas
ds
out
leave
mov
jge
test
jmp
push
mov
jmp
vpmacsdd
jmp
call
aam
sub
mov
xor
cmp
sbb
mov
mov
cmc
aas
push
cmc
dec
das
mov
sub
mov
push
or
sub
fidivr
sub
and
mov
jne
daa
xchg
rol
cmp
push
adc
jbe
std
jge
mov
pop
jmp
sbb
es
cmp
(bad)
repz
outs
ror
shl
scas
inc
cmps
mov
test
mov
mov
sbb
cdq
cmp
movs
lock
lea
ja
dec
mov
mov
pop
jb
lds
add
repz
dec
jg
jecxz
jecxz
xchg
or
test
inc
js
arpl
ret
rol
ds
add
mov
out
jl
fnstsw
fdivrp
(bad)
adc
(bad)
ficom
(bad)
movs
std
pop
jnp
xor
hlt
les
dec
es
mov
xchg
test
out
fdivrp
jo
fcmove
sbb
ja
in
imul
outs
pop
aas
bound
sar
(bad)
out
mov
xchg
sbb
jnp
mov
addr16
int
inc
popf
mov
mov
push
cmp
jo
jnp
push
cld
stos
test
pop
(bad)
fist
jl
or
pop
mov
setp
mov
xor
mov
dec
rol
cmp
test
and
jns
mov
inc
out
sub
sub
cs
mov
xchg
xchg
(bad)
call
mov
out
push
out
retf
neg
out
call
aaa
imul
in
sub
jmp
lock
ss
test
xchg
aaa
mov
dec
mov
(bad)
xor
scas
xor
(bad)
outs
test
or
mov
jae
lea
inc
dec
push
out
add
out
stos
ror
mov
sbb
or
jae
push
and
add
cmps
aad
xor
mov
jl
aas
mov
in
popa
out
xlat
icebp
cdq
test
adc
cs
cmc
cmp
ja
cmps
sar
mov
sub
mov
shr
mov
mov
ja
jb
dec
sub
mov
jge
test
loop
arpl
out
int
(bad)
movs
enter
gs
pop
popa
xchg
mov
add
and
out
sbb
imul
xlat
ss
call
out
inc
lds
popf
arpl
xor
fisubr
ds
mov
mov
inc
shr
push
cwde
call
cmp
call
jmp
mov
inc
sahf
int3
cmc
or
pop
das
sbb
xchg
mov
rcl
or
push
imul
repnz
into
fcmovnu
rcr
cmp
lods
in
fprem1
mov
int
pop
scas
aas
stc
inc
stc
sahf
mov
jmp
and
mov
xchg
push
dec
out
add
out
mov
cli
xchg
xchg
dec
jmp
lahf
mov
stos
sub
fsubr
pop
test
dec
pop
hlt
jo
dec
inc
getsec
iret
and
lock
xor
cmp
loope
mov
cmp
xchg
int
hlt
lock
or
ret
scas
pop
inc
call
jp
jno
mov
call
(bad)
sbb
cmp
push
push
inc
dec
es
inc
mov
test
xor
sbb
mov
jne
dec
daa
into
or
ds
sbb
mov
adc
or
dec
int3
icebp
xchg
xchg
sub
pop
call
sub
push
xchg
jae
cs
jl
pusha
popf
xchg
addr16
fst
addr16
jae
jl
jl
xchg
int3
in
fadd
and
imul
in
sbb
sub
das
and
test
test
mov
ds
jnp
mov
adc
scas
jnp
jnp
es
mov
sahf
daa
push
fcom
(bad)
sbb
popf
mov
xchg
ins
xor
stos
xor
(bad)
(bad)
stc
lahf
loope
push
xchg
sub
cdq
sbb
mov
sti
adc
jae
stos
push
lea
xor
or
fmul
sub
mov
mov
loope
mov
pop
retf
retf
pop
cmp
shr
lods
cld
out
das
scas
mov
fmul
imul
xor
push
lods
jo
int3
cmps
adc
fmul
inc
pop
loope
outs
movs
adc
adc
loope
das
movs
adc
or
pop
pop
bnd
and
cwde
out
retf
jb
cmps
fsubr
icebp
loope
push
neg
jae
pop
mov
fiadd
call
jns
cmc
loope
test
xchg
cmps
pop
(bad)
and
fwait
xor
sbb
sbb
xchg
xchg
pop
cmp
loopne
pop
jge
aad
fwait
dec
sub
xor
push
push
cli
xchg
push
xor
xchg
movs
in
ss
or
leave
ret
jmp
test
xchg
std
shl
ja
gs
mov
sbb
mov
xor
mov
jmp
mov
movs
and
out
sti
popf
movs
fadd
scas
and
test
xor
frstor
out
stos
sbb
bound
sbb
inc
jno
ja
mov
in
jp
pusha
push
out
mov
adc
ror
ins
dec
push
popf
sbb
mov
sub
rol
loop
inc
pop
out
push
ror
fcmovne
stos
pusha
repnz
pop
shl
or
movs
aad
jl
mov
cli
ins
mov
jbe
sbb
xchg
mov
pop
pop
mov
out
jne
fs
into
push
mov
dec
pop
lds
mov
fwait
xchg
fisub
xchg
sahf
gs
or
jno
(bad)
ficom
pop
clc
cli
mov
retf
popa
jbe
sub
rol
aam
xor
das
jg
pop
mov
std
aad
and
ficomp
ret
cmp
pop
jmp
fldcw
cli
lods
cld
mov
in
and
xchg
xor
pushf
jae
fcom
mov
xchg
xor
enter
xor
movs
add
jle
mov
lahf
mov
call
scas
es
xchg
scas
in
(bad)
(bad)
loop
not
call
outs
pop
shl
xchg
loopne
cmp
mov
push
adc
mov
rol
inc
cmp
(bad)
gs
sahf
fidiv
ss
dec
es
add
jmp
jecxz
bound
cmc
enter
fdivp
cld
and
repnz
call
(bad)
inc
imul
xor
and
(bad)
loope
fs
aaa
pusha
jb
les
sub
lahf
imul
push
jle
inc
or
push
cmp
jb
pop
xor
xchg
cmp
dec
stos
sbb
shl
gs
loop
mov
clc
mov
stos
iret
int3
inc
jno
std
jge
jb
cmp
gs
pop
or
mov
jg
push
(bad)
xor
jg
jecxz
sar
lea
mov
mov
jg
cld
fsubp
fcomp
cmp
xor
mov
jmp
push
hlt
fs
std
mov
test
pop
sub
(bad)
dec
adc
jp
test
mov
nop
in
sub
pop
popf
mov
inc
pop
pop
out
add
fwait
test
mov
mov
sbb
cmp
jmp
xchg
scas
mov
je
push
out
and
dec
lahf
mov
xchg
(bad)
jne
mov
daa
pop
sar
inc
sub
lock
and
ficom
add
mov
inc
test
xchg
xchg
scas
(bad)
out
das
inc
jmp
les
sbb
mov
scas
sbb
(bad)
push
imul
mov
ins
pop
dec
js
not
(bad)
lock
imul
outs
jl
(bad)
lock
push
xchg
adc
mov
(bad)
and
sahf
mov
in
aaa
ds
lock
out
adc
fdiv
and
mov
stc
add
dec
push
xor
sar
ss
enter
aad
and
cmp
jbe
pop
mov
in
mov
in
xchg
imul
repnz
mov
lods
fst
popf
jl
popa
or
sub
cmp
mov
out
aam
sbb
data16
xchg
inc
ror
fistp
pop
ins
arpl
jbe
mov
int
push
imul
movs
fiadd
mov
jmp
pop
movs
retf
mov
cld
addr16
jle
pop
cmp
ficom
retf
push
cmp
(bad)
pop
movs
sub
mov
cmp
adc
stc
lock
mov
stc
sbb
outs
fwait
repz
mov
sar
mov
call
push
xchg
addr16
cmp
sbb
xor
sbb
mov
in
xor
out
jnp
lds
hlt
cmp
ffree
addr16
mov
jno
sbb
clc
pop
pop
mov
movs
fmul
int
in
sbb
inc
das
outs
cdq
js
dec
pop
add
es
clc
out
out
mov
je
mov
imul
pop
mov
pop
dec
stos
(bad)
mov
loope
pop
mov
mov
push
lods
(bad)
cmp
push
fimul
(bad)
out
jbe
mov
cs
jmp
pop
mov
jne
lods
pop
adc
pop
mov
adc
dec
push
or
sti
mov
mov
outs
retf
(bad)
jno
out
ins
xlat
adc
sbb
push
jmp
xor
pop
rcl
sbb
stos
xor
mov
pop
test
mov
(bad)
jbe
jmp
rcr
or
xor
mov
pop
sbb
jmp
sbb
cmp
and
adc
mov
test
xor
out
jle
jnp
std
popw
pushf
shl
mov
in
cs
lods
js
push
sahf
out
es
jo
(bad)
cmps
mov
mov
pushf
sub
shr
cli
popf
xchg
sbb
sti
sub
sub
outs
sub
mov
in
adc
fcom
(bad)
popf
sahf
inc
cmp
popf
rcr
adc
jns
clc
sbb
adc
psrlq
push
mov
push
jne
sub
pop
pop
add
mov
sub
cmp
dec
mov
imul
or
cwde
or
xor
call
pop
fist
das
sbb
test
mov
xchg
cwde
into
jg
imul
jp
rcl
data16
jae
call
movs
shl
gs
sbb
std
imul
xchg
mov
and
lock
sbb
(bad)
jp
mov
aam
js
ins
push
sbb
shl
mov
ret
call
mov
(bad)
shl
pop
stos
shl
sahf
pop
iret
scas
mov
jnp
adc
hlt
sub
stos
xlat
jecxz
push
clc
mov
bound
(bad)
jmp
daa
xchg
xchg
jp
lahf
and
out
dec
in
jmp
(bad)
ja
mov
fisubr
mov
aas
lods
cmp
sub
stos
pushf
and
int
hlt
(bad)
dec
in
or
xlat
jae
pushf
shl
test
push
loope
xor
pop
sbb
and
jl
mov
pop
sub
loope
ficomp
fidivr
inc
out
scas
jl
stc
sti
loope
test
mov
popa
clc
in
jns
inc
xor
scas
lock
mov
mov
or
jmp
loope
fistp
aad
mov
sbb
mov
les
fnsave
(bad)
enter
paddd
std
repnz
retf
fstp
mov
add
sti
fdiv
push
sub
sub
mov
jmp
js
dec
fbstp
clc
cmp
push
fwait
ror
cdq
pop
push
pop
inc
pop
add
adc
jecxz
les
adc
rep
repz
mov
fisubr
repz
fild
push
lods
imul
in
adc
dec
(bad)
add
mov
loope
movs
psubb
dec
cdq
adc
nop
jo
cli
dec
scas
cmp
ficomp
(bad)
in
fcmovbe
push
and
ins
inc
sbb
out
jnp
push
mov
repnz
jmp
jne
mov
scas
test
fdivr
pop
(bad)
fidivr
aad
mov
mov
xchg
aas
xor
pop
mov
push
pop
adc
std
cmps
and
add
clc
push
sbb
push
or
ds
aam
adc
clc
push
jp
cmp
ss
cmp
push
dec
stos
inc
jp
pop
clc
das
sub
(bad)
push
test
sub
into
sbb
mov
dec
push
fadd
xchg
arpl
xor
loope
ins
push
out
pop
push
fsub
xchg
inc
xor
xor
and
dec
dec
call
(bad)
push
es
into
cmp
jae
mov
scas
ret
imul
mov
xor
outs
and
sti
inc
aas
mov
test
das
loope
mul
popa
(bad)
push
mov
push
adc
jae
in
std
pop
mov
xor
retf
jmp
cmp
push
scas
mov
ss
dec
iret
or
push
cld
in
bound
outs
push
loop
dec
sub
mov
shl
shr
mov
cdq
jmp
pop
jecxz
es
iret
loop
fimul
sbb
xchg
ds
aas
lods
test
loop
pop
push
loope
cmps
stos
pushf
retf
lea
iret
xor
call
pushf
jnp
in
sbb
jnp
out
sub
in
mov
movs
lods
pop
add
jae
fnstsw
mov
cld
fild
ss
and
loopne
in
idiv
faddp
sub
or
or
xor
sbb
addr16
data16
mov
and
cmp
mov
inc
out
imul
enter
pop
or
call
aaa
repz
outs
in
dec
mov
sar
retf
lods
shl
and
xchg
mov
adc
adc
(bad)
ret
xor
or
add
mov
(bad)
dec
xlat
ja
fsubrp
lds
mov
(bad)
stc
shr
(bad)
hlt
inc
int3
int
das
dec
in
push
push
push
adc
push
stos
pop
cmc
ins
idiv
push
int
jns
stc
imul
out
std
movs
in
mov
repz
xchg
push
cld
mov
call
ins
mov
pop
mov
rol
scas
cdq
push
cmp
jle
pop
fwait
cs
jl
in
sar
xor
ins
das
mov
pop
int
pop
adc
mov
mov
(bad)
adc
mul
mov
jne
bound
scas
sub
cs
jne
jo
call
and
jp
jmp
test
je
fmul
fisttp
jg
inc
les
sub
shl
aaa
mov
xchg
push
outs
ins
and
ins
adc
xor
sti
add
sub
nop
stos
mov
fdivrp
push
push
addr16
clc
mov
stos
add
lahf
ins
shl
inc
jl
or
xchg
inc
add
test
push
test
xchg
cdq
int3
les
movs
pop
add
test
outs
fld
scas
fst
jmp
inc
push
imul
inc
mov
fimul
jbe
mov
fcomip
pop
into
in
iret
cmp
loope
fidivr
xchg
cdq
div
jns
jnp
repz
iret
repz
pop
jmp
(bad)
loopne
sub
or
cmp
mov
xchg
mov
xor
retf
aaa
(bad)
clc
loope
mov
push
mov
xlat
pop
add
inc
out
test
data16
enter
mov
sub
sbb
or
dec
cmp
pop
and
xchg
not
jns
(bad)
ins
xchg
icebp
pop
adc
jmp
jmp
mov
or
mov
movs
ds
lods
nop
loope
fst
shl
sbb
sbb
(bad)
leave
cwde
jp
pop
call
mov
mov
fcomi
pop
mov
push
lods
dec
lods
push
pop
(bad)
in
je
lods
retf
pop
retf
notrack
sbb
sbb
pop
repz
icebp
stos
fnstenv
addr16
les
ja
retf
ins
or
imul
repnz
xchg
push
push
sub
mov
sub
fnstenvw
xchg
mov
adc
mov
cdq
xchg
lods
bound
out
fsubr
int
push
mov
mov
dec
inc
faddp
push
out
pop
imul
es
into
jp
sub
dec
es
and
push
mov
sub
mov
popf
adc
out
jmp
xor
mov
xchg
ret
lahf
lods
hlt
sub
sbb
sub
jmp
in
mov
sti
jmp
sbb
sub
jae
hlt
retf
repz
aad
jne
fwait
aas
mov
dec
add
inc
stos
pop
loop
and
popa
or
push
in
adc
pop
rcr
arpl
push
push
dec
(bad)
loopne
cs
sub
sub
jp
cmp
arpl
icebp
repz
or
push
in
push
mov
dec
jmp
mov
mov
inc
jne
out
movs
cmp
in
cwde
ds
(bad)
cmp
inc
jg
jle
sub
ret
xor
adc
mov
jno
lods
mov
and
jae
dec
cmp
ret
add
dec
add
mov
mov
dec
std
scas
jns
mov
jnp
jg
adc
leave
mov
jl
or
data16
mov
rcl
sub
inc
mov
mov
sub
and
pop
mov
imul
and
(bad)
icebp
mov
cwde
mov
lods
add
cmp
push
mov
xlat
jno
ja
sbb
and
scas
loop
cmp
inc
ins
lods
lock
jo
mov
mov
scas
push
fldenv
lods
frstor
mov
cmp
fmul
(bad)
cmp
hlt
xchg
outs
inc
push
je
or
sbb
sbb
inc
outs
inc
je
out
mov
mov
push
scas
pop
test
xchg
hlt
stos
stos
adc
movs
jg
test
jmp
je
lea
xchg
hlt
push
out
daa
push
xchg
nop
outs
jmp
jg
mov
push
aad
xchg
(bad)
xchg
lds
in
mov
(bad)
test
adc
inc
(bad)
lds
mov
cs
mov
and
in
sbb
bound
xor
aam
in
or
hlt
out
jl
das
icebp
(bad)
sub
loopne
test
int3
enter
mov
ja
fcmovu
lock
outs
lods
mov
ret
mov
sub
ja
neg
ja
neg
ja
idiv
pushf
adc
sub
shr
mov
(bad)
mov
imul
sbb
push
jne
pusha
sbb
pop
std
mov
test
sti
movs
add
add
or
retf
mov
mov
or
pop
test
std
mov
cmp
mov
pusha
and
fistp
aad
ret
jno
rcr
movs
call
pop
mov
jl
fcom
xchg
inc
int
jge
pop
gs
or
inc
test
jp
movs
pop
(bad)
mov
push
cdq
mov
mov
mov
jne
lea
or
adc
fwait
test
mov
repz
scas
not
adc
mov
ret
outs
push
loopne
jbe
push
imul
std
dec
dec
cmp
jecxz
jae
xlat
hlt
or
ja
mov
mov
fisubr
outs
adc
xchg
jmp
mov
repz
ja
enter
push
push
mov
mov
pop
xchg
test
jne
jp
ds
std
pop
dec
dec
push
jg
stos
and
shl
sbb
bound
f2xm1
dec
int3
xchg
ja
(bad)
sub
int3
mov
and
mov
nop
adc
sub
es
ds
or
mov
ror
xor
xor
pop
xchg
rcr
aas
mov
sbb
push
rcr
push
test
push
hlt
ja
lods
inc
or
ret
loope
and
xchg
fwait
retf
xor
push
xor
pop
stc
push
fcomp
add
inc
lods
mov
cmp
ffreep
push
mov
fadd
inc
loope
push
stos
mov
out
fld
aad
cmp
out
ficom
out
lods
mov
jne
aas
retf
fbstp
enter
mov
and
in
cwde
(bad)
js
pushf
lods
fmulp
sbb
add
jmp
inc
xchg
lahf
out
mov
rcr
enter
pop
sub
imul
pop
dec
mov
imul
arpl
adc
dec
addr16
pushf
mov
fstp
ins
cmp
pop
stos
lods
cmp
lods
jnp
mov
cmp
adc
iret
test
(bad)
gs
cmp
add
rol
inc
mov
sub
pop
aad
(bad)
mov
int3
inc
inc
inc
aad
mov
inc
call
daa
mov
inc
pop
inc
sbb
je
push
pop
push
mov
idiv
jb
loop
mov
scas
cmps
add
lock
and
jne
repnz
push
bound
dec
push
test
bound
sbb
jmp
push
mov
push
push
sbb
pop
popf
adc
xor
pop
stos
cs
xchg
gs
xchg
xchg
or
dec
rcl
push
out
ret
sti
cmp
mul
pop
ja
pop
(bad)
sub
inc
sub
sub
pop
mov
loop
and
mov
fst
pop
ret
arpl
or
inc
and
out
out
jns
push
inc
shl
test
scas
mov
push
clc
sub
push
cmp
jmp
sub
mov
xchg
stc
out
jp
shl
call
xchg
mov
loop
pop
jmp
arpl
repnz
shl
std
cmp
adc
pop
adc
icebp
sbb
loop
stos
aam
sub
jae
icebp
aad
jb
stos
aam
pop
stc
xor
loop
jmp
shr
mov
push
xchg
out
mov
pop
xor
cmp
sti
enter
cdq
repz
xor
sbb
jno
xchg
mul
dec
cmp
pusha
sub
or
(bad)
and
or
in
jno
daa
mov
mov
mov
scas
xor
xchg
fstp
call
sub
mov
xchg
pop
lds
mov
sub
test
sbb
lock
pop
hlt
lods
jmp
js
pop
jl
pmaxsw
push
cmp
and
and
stos
aaa
outs
outs
cli
loopne
jno
enter
mov
xchg
loop
jno
sbb
jecxz
pop
dec
cmp
pop
pop
pop
cmc
icebp
xchg
mov
xchg
lea
mov
xchg
inc
lods
cs
adc
scas
add
push
pop
cmp
jmp
into
movs
sub
movs
adc
or
mov
inc
or
jae
inc
pop
shl
(bad)
push
sub
dec
mov
shr
mov
in
pop
or
loop
push
push
dec
int3
mov
sub
push
in
cmp
push
cmp
or
cmp
mov
push
mov
xor
cmps
sub
imul
arpl
sub
xchg
inc
mov
sub
jae
sbb
mov
mov
sub
adc
fst
push
jno
arpl
or
fld
mov
sub
mov
jmp
or
jge
sbb
xchg
(bad)
push
jmp
or
mov
test
or
(bad)
push
push
and
xchg
cli
pop
xchg
fsub
lahf
sbb
dec
sbb
adc
jns
inc
dec
hlt
xchg
test
xlat
or
sbb
jp
(bad)
cld
ins
mov
cmc
out
xor
outs
dec
clc
xchg
imul
or
test
lods
call
call
call
inc
shr
mov
xchg
shl
gs
int3
xor
push
test
cmps
bound
stos
mov
leave
rcr
add
sbb
mov
test
jo
ror
dec
dec
xchg
pop
cdq
lea
push
addr16
sbb
xchg
retf
mov
(bad)
rol
push
sbb
cli
and
les
and
xor
sti
push
lahf
sbb
cmc
pop
loopne
rcr
pop
nop
sbb
ss
inc
inc
repz
fs
adc
test
inc
arpl
loope
test
mov
and
push
mov
pushf
xor
sbb
inc
hlt
loop
adc
mov
mov
adc
test
ja
sahf
adc
jg
xchg
inc
cld
xchg
repnz
cmp
jmp
dec
mov
mov
cmp
in
add
aam
cs
mov
ins
test
xchg
push
fidivr
idiv
push
mov
ins
and
cmp
(bad)
mov
lds
jnp
cmp
fs
dec
sar
(bad)
test
jmp
push
or
call
stos
push
inc
outs
cmp
sub
sahf
push
cmps
(bad)
push
sub
jno
sub
imul
sbb
pop
dec
pop
pop
or
xor
adc
pavgw
in
iret
push
mov
add
xlat
sbb
popf
sahf
or
xlat
adc
dec
mov
xor
mov
mov
inc
cli
(bad)
or
je
js
sbb
call
jl
out
ror
ret
add
test
sub
mov
inc
push
xchg
fidiv
sub
jne
jno
or
xchg
xor
(bad)
dec
(bad)
xchg
test
pop
(bad)
mov
inc
add
lods
jne
xchg
fist
aad
inc
in
dec
movs
les
push
jg
push
mov
cli
sub
adc
cmp
std
fdiv
aas
pop
xchg
mov
or
inc
aas
(bad)
adc
(bad)
retf
pop
mov
or
fst
repz
sti
lds
jnp
gs
ds
hlt
jns
ins
arpl
pop
mov
jmp
popf
pop
cmp
out
addr16
movs
in
and
dec
loop
push
clc
cmc
jp
fstp
inc
les
das
ds
test
loop
scas
inc
mov
push
ror
mov
pop
(bad)
xlat
push
dec
sahf
ja
aaa
imul
cmp
mov
scas
mov
hlt
in
imul
mov
pop
fbstp
fidiv
call
lods
pop
mov
les
call
adc
not
sahf
aad
jno
call
loop
sbb
cmc
jmp
arpl
xlat
aam
xor
stos
out
mov
jp
xor
jle
cld
add
jle
cmp
outs
rcr
and
xlat
ins
ret
fsubr
xlat
(bad)
jbe
in
xlat
fistp
xor
les
or
push
mov
xchg
jbe
mov
jg
mov
xchg
or
and
sbb
or
lds
push
jmp
(bad)
push
sub
push
mov
(bad)
(bad)
push
pop
xor
cwde
lds
shl
test
scas
mov
(bad)
jmp
inc
stos
outs
in
sbb
push
ss
imul
mov
pop
(bad)
jbe
jo
out
jne
mov
cmps
and
shl
(bad)
rcl
gs
test
jle
call
aad
dec
cmc
xlat
call
xchg
loop
cld
mov
stc
cmp
push
out
test
sbb
xchg
push
inc
icebp
inc
inc
xor
or
lods
pop
pop
xchg
push
lahf
fild
cmp
push
mov
retf
and
sub
xchg
xchg
mov
pop
ja
movs
sub
jnp
dec
dec
jg
mov
jmp
and
inc
out
mov
cmp
pop
hlt
mov
pushf
bound
xchg
mov
out
(bad)
(bad)
clc
sbb
ins
gs
push
cdq
and
jns
add
mov
jge
fisttp
lock
sub
jae
inc
repz
aam
fimul
fucomi
popa
fsubr
pop
sbb
data16
enter
dec
sbb
cwde
mov
sub
int
adc
mov
hlt
(bad)
movs
mov
and
mov
adc
imul
push
sbb
and
(bad)
cmps
xor
in
out
arpl
ja
or
adc
idiv
add
enter
(bad)
stc
aas
(bad)
enter
sbb
cmps
or
lea
and
clc
xor
mov
leave
or
mov
cmps
jge
push
adc
clc
adc
lock
pop
pop
in
pusha
mov
cs
jnp
add
and
shl
inc
mov
mov
dec
add
xchg
sub
lods
push
test
lahf
adc
inc
sub
(bad)
jl
ud2
sub
cmp
outs
cld
cmps
test
test
in
jnp
push
add
mov
aas
dec
push
(bad)
jns
mov
shl
enter
dec
push
(bad)
pop
mov
(bad)
pop
sub
xor
mov
int3
xor
adc
leave
ins
cli
cmp
xchg
push
inc
pop
pop
dec
std
pop
int
movs
lods
imul
lock
push
inc
sbb
cs
stos
enter
cli
clc
sti
outs
mov
icebp
or
wbinvd
mov
bound
mov
and
sti
push
rcl
fld
imul
push
pop
inc
push
pop
fisub
add
adc
cld
sub
cmp
enter
adc
or
(bad)
cs
ds
xchg
jmp
jbe
sub
xchg
pop
adc
or
cmps
cli
or
scas
inc
into
les
jns
ret
cs
cmp
jp
inc
cli
mov
nop
out
(bad)
sbb
lods
cmp
lods
aam
retf
test
inc
call
push
shl
enter
pop
test
pushf
xchg
ret
pop
xchg
push
pop
cmp
ins
jns
mov
popf
sub
dec
stos
mov
stc
mov
aam
out
lods
je
cmp
pushf
arpl
cmp
xchg
test
cmp
inc
neg
(bad)
imul
addr16
pushf
dec
xchg
(bad)
frstor
out
mov
fnstcw
dec
mov
push
sub
inc
ins
fcmovnu
(bad)
jno
xchg
fwait
ja
call
fwait
mov
sti
xchg
in
adc
ret
call
and
xchg
mov
aad
mov
xchg
mov
or
cmp
adc
sbb
sbb
sbb
xchg
mov
cmp
test
icebp
mov
call
push
out
jp
push
lods
push
and
pop
in
lahf
mov
push
arpl
ret
mov
dec
xchg
sub
xchg
sti
xchg
inc
aas
or
mov
mov
mov
jno
inc
in
push
std
push
test
mov
add
add
rcl
test
mov
sub
pop
pop
cmp
cdq
inc
(bad)
push
pop
pop
mov
dec
loop
mov
ja
jge
test
not
(bad)
test
sub
push
or
int
pop
out
sar
cmp
gs
shl
xchg
mov
pushf
lods
arpl
push
dec
xor
mov
pop
and
dec
fstp
aaa
cmp
into
jmp
jmp
test
mov
add
fwait
(bad)
fmul
pop
call
mov
mov
jmp
call
cmp
inc
and
mov
and
mov
mov
outs
call
mov
cmp
mov
mov
mov
call
jge
pop
jg
mov
pmuludq
retf
call
ds
scas
mov
call
hlt
xor
dec
cld
push
jge
arpl
out
sub
test
sahf
imul
mov
stos
je
sbb
xchg
xchg
fisttp
xchg
loopne
and
lahf
jp
jl
shr
std
push
sub
sub
test
pop
pop
test
fist
pop
aas
adc
(bad)
cmps
sbb
push
mov
(bad)
pop
add
ins
jle
mov
sub
loop
or
ja
add
in
sub
int3
mov
stos
lods
scas
jbe
push
fdivr
shr
xchg
xchg
repnz
push
in
push
xor
xor
jmp
sub
daa
jns
movs
pop
mov
aas
dec
jge
inc
std
mov
push
push
inc
mov
inc
mov
xchg
adc
xchg
ret
ds
gs
ins
sub
jge
jmp
lods
cmc
je
mov
cmp
jnp
loop
mov
jbe
push
push
pop
push
mov
ja
mov
jg
out
add
cmp
aam
retf
not
(bad)
ss
cdq
into
cld
adc
xor
mov
inc
xchg
(bad)
cmps
aas
sbb
mov
sbb
ja
aaa
or
aad
popf
xor
mov
fdiv
test
fnstsw
jl
les
sbb
or
xor
adc
and
hlt
and
mov
mov
pop
arpl
xchg
xchg
push
push
call
add
inc
xor
scas
adc
or
int
push
jno
les
mov
sbb
cdq
pop
(bad)
mov
add
(bad)
push
or
sbb
or
adc
adc
(bad)
adc
mov
mov
popf
aam
in
xchg
xchg
mov
mov
xchg
int
popa
mov
loop
stos
cmp
test
mov
adc
adc
in
rcl
and
mov
mov
fs
push
lods
jbe
pop
push
and
sbb
fs
push
mov
mov
jmp
push
aad
push
push
and
out
fisttp
ins
sub
jmp
mov
jg
sub
xchg
sub
add
mov
cmp
clc
cmc
cmp
sub
mov
je
pop
inc
inc
adc
stc
sbb
sar
sar
cdq
mov
dec
mov
sbb
sub
loop
jmp
addr16
cld
jbe
neg
rcl
dec
nop
cmp
sub
sbb
xchg
jns
jge
pop
test
lahf
add
retf
push
sahf
addr16
cmp
add
inc
std
xchg
inc
dec
nop
push
dec
mov
aaa
enter
jmp
mov
out
aas
inc
lods
mov
mov
rcl
dec
mov
mov
fs
inc
std
fisttp
adc
mov
test
push
in
sub
scas
cwde
push
fbld
push
out
ss
les
dec
mov
repz
sahf
int
xchg
adc
mov
adc
pop
pop
mov
jmp
out
and
xlat
stos
fisubr
mov
push
ja
cdq
das
cmp
pop
inc
sub
xchg
call
hlt
jecxz
mov
gs
inc
adc
sub
out
pop
add
jge
out
repnz
inc
mov
not
pop
icebp
rcr
imul
stos
out
daa
xchg
xchg
mov
adc
xor
js
lods
adc
in
xor
outs
mov
push
shl
in
push
int3
inc
shl
pushf
jb
hlt
in
test
stos
stos
xchg
loopne
jns
gs
lds
mov
mov
jmp
add
in
stc
cmp
stc
adc
or
jge
arpl
loop
inc
dec
jo
repnz
or
in
js
inc
or
push
add
enter
add
cdq
jmp
and
(bad)
xlat
out
xchg
jns
pushf
add
js
scas
add
sbb
in
outs
out
or
sbb
in
rol
fld
xor
ins
sbb
cli
dec
adc
lods
(bad)
mov
and
pop
sub
or
mov
cmp
push
jo
shl
movs
mov
inc
clc
sbb
cmp
call
mov
mov
fs
xor
adc
sar
aaa
scas
push
sbb
and
icebp
stos
fstp
cmc
ins
pop
mov
cld
lods
mov
pushf
xchg
stos
add
(bad)
bound
sub
out
and
push
stos
cmc
and
(bad)
ret
mov
push
arpl
xor
scas
adc
pop
push
mov
mov
imul
gs
jmp
mov
xor
out
push
nop
mov
stc
mov
das
shl
out
adc
add
mov
mov
xchg
xchg
pop
test
clc
mov
(bad)
fwait
cmc
lods
fbstp
fisub
aam
sub
or
repz
adc
pop
(bad)
stc
cdq
repz
scas
sbb
dec
pop
popf
pop
iret
jmp
jmp
pop
out
je
xor
jl
mov
daa
in
adc
cli
data16
aad
popf
sbb
xlat
call
pop
sti
pop
mov
or
pop
popf
jnp
pop
popf
das
pop
fnstcw
jg
outs
jne
pop
jo
fs
test
jmp
jae
jbe
cmc
out
cmp
fwait
push
out
mov
stos
pop
jb
mov
lahf
mov
cli
fsubrp
pop
imul
out
(bad)
sub
jmp
aad
dec
fistp
jl
inc
cld
jp
ficom
in
(bad)
push
in
or
xchg
ins
mov
jns
out
jge
push
jbe
mov
sub
inc
aas
mov
jecxz
das
dec
stc
inc
sub
jmp
sti
rcr
xchg
push
adc
or
ds
fsub
sub
pop
inc
cmp
pop
(bad)
xchg
loope
push
pop
repnz
mov
std
jmp
or
js
(bad)
ret
mov
jge
call
mov
cld
cmp
lds
into
aaa
arpl
sar
jmp
sti
clc
cli
xchg
enter
mov
add
jnp
bound
xchg
and
push
adc
xlat
cmp
pop
inc
mov
push
lock
in
sub
fnsave
add
xor
cmps
cmp
adc
mov
pop
cmc
sahf
push
leave
sub
and
bound
sahf
xchg
imul
out
add
lock
test
rcl
cmps
add
sub
dec
out
das
xor
fs
les
enter
cmp
mov
out
ss
dec
add
mov
push
jmp
or
sub
mov
cmp
outs
dec
xchg
pop
jbe
push
adc
push
pop
jae
test
and
les
dec
cwde
stc
push
(bad)
cmp
adc
jle
mov
xor
in
stc
mov
jo
xor
dec
xchg
(bad)
popa
pop
push
fs
rcr
and
cmps
mov
aad
mov
dec
xchg
rol
call
and
test
(bad)
call
cmps
enter
aam
mov
jne
sub
dec
mov
sbb
and
mov
imul
ror
mov
ins
sahf
jno
jns
loope
ret
call
pop
mov
gs
imul
into
pop
vpavgw
clc
jnp
out
stc
fdivr
nop
cmc
xlat
sbb
xor
lock
leave
outs
shl
aas
outs
inc
int
mov
cld
cwde
dec
sbb
mov
mov
cwde
dec
jno
pop
xchg
nop
mov
mov
sub
pop
sbb
out
sbb
pop
jl
cli
sub
jl
dec
mov
inc
retf
popa
(bad)
jle
mov
cli
jmp
mov
sti
movs
movs
jl
xchg
xor
mov
add
cmp
inc
ror
jbe
adc
pop
sub
jne
xchg
iret
pop
and
in
scas
nop
adc
push
aaa
fstp
das
inc
cmp
ins
and
push
xor
add
adc
stos
repnz
stos
jns
ins
inc
daa
loope
add
pushf
sbb
addr16
jmp
retf
push
cmp
adc
int
std
inc
fsubr
lods
iret
(bad)
fstp
repz
jb
into
rol
xchg
cmp
or
aas
pop
hlt
or
in
xchg
sti
movs
dec
stos
jo
mov
lock
mov
fs
cmp
imul
call
cli
sub
fdiv
push
mov
xchg
pop
out
dec
sub
sar
jns
mov
data16
lods
add
inc
mov
int3
sbb
(bad)
jmp
cdq
lahf
sub
and
sub
cmp
popa
ins
xor
popa
add
loop
or
sub
mov
mov
and
xor
rcr
jbe
or
popf
sbb
jmp
pop
adc
pusha
inc
cdq
sub
dec
mov
pop
or
or
retf
(bad)
xchg
ja
je
sbb
hlt
mov
pop
stc
cmc
stos
dec
sbb
ja
rcl
enter
xor
xor
sub
cmps
cld
js
imul
cmp
xor
or
push
mov
hlt
sti
cmps
repz
out
cmp
scas
stc
cmc
mov
jl
in
sbb
aaa
in
jg
loope
imul
popf
mov
inc
sbb
outs
das
ds
adc
aam
into
in
in
dec
jmp
ss
and
sahf
fidiv
xor
or
xlat
das
je
jbe
outs
(bad)
fnstsw
iret
sub
jmp
sbb
(bad)
and
sar
int
pop
clc
retf
fucomp
cld
dec
jmp
mov
sub
out
repz
lock
test
rcr
cmp
mov
rcr
cld
adc
lahf
pop
jnp
sar
pop
pop
cli
fisttp
push
iret
cmps
(bad)
das
ret
(bad)
(bad)
aam
in
leave
retf
mov
neg
(bad)
dec
mov
outs
sbb
sub
out
idiv
xchg
icebp
addr16
push
stos
push
mov
ja
xor
jecxz
test
jb
xor
cmps
lahf
ss
cmp
call
mov
pop
jo
(bad)
cmp
es
mov
jb
int3
ffree
nop
stc
ins
mov
(bad)
mov
ret
xor
inc
imul
mov
sbb
stos
mov
imul
xchg
repnz
es
push
into
imul
loop
add
dec
sti
and
bnd
lock
pop
bound
cmp
fidiv
mov
gs
and
cli
xor
ret
and
loopne
xor
ins
cmp
sbb
add
add
dec
jl
jecxz
scas
cmp
jecxz
fidiv
mov
fdivr
dec
mov
js
iret
xor
pusha
int3
sbb
sbb
push
jecxz
into
lods
(bad)
mov
cs
out
out
mov
jae
sbb
jnp
iret
cdq
and
pop
adc
or
inc
mov
xchg
jo
mov
inc
gs
rcl
and
ja
in
or
stos
out
daa
add
clc
xor
push
bound
fidivr
sbb
scas
and
movs
push
sub
es
(bad)
cld
rol
add
cs
dec
mov
loop
jnp
inc
int
pop
xchg
aaa
mov
dec
(bad)
stc
cmp
cmp
dec
xor
and
cdq
push
pop
cld
addr16
push
rcl
es
xor
push
mov
mov
out
jb
lock
sbb
push
xchg
fiadd
mov
dec
fsub
inc
inc
mov
imul
in
inc
lock
inc
in
popa
mov
enter
int3
mov
cwde
sub
loope
mov
cli
(bad)
add
dec
inc
push
je
sbb
push
and
dec
mov
cmp
imul
xor
mov
jecxz
and
fild
lods
jno
test
push
add
aas
cld
std
adc
out
arpl
iretw
(bad)
(bad)
shr
sub
jle
mov
(bad)
iret
pop
imul
jb
mov
cmps
jmp
push
cmp
sahf
jl
int3
arpl
fs
pop
mov
mov
pop
pop
imul
inc
pop
clc
jnp
inc
jmp
push
jne
stos
js
mov
sbb
cld
jl
xor
push
push
cmp
enter
cmp
pop
sbb
or
sbb
aas
inc
es
jmp
pop
jo
cmp
(bad)
mov
cmps
mov
fwait
xor
fs
pop
sbb
out
call
pop
(bad)
sbb
adc
and
ins
inc
cmp
pop
pop
adc
jns
(bad)
cli
popa
lods
iret
lock
pushf
and
xor
lods
enter
push
jecxz
int
fwait
adc
lahf
repz
aas
sbb
xor
sbb
popa
pop
sub
or
imul
sahf
mov
xchg
test
ja
push
push
and
aas
shr
test
push
cmp
jnp
xor
xchg
in
repnz
dec
jno
inc
stos
and
retf
xchg
push
lea
xchg
xchg
xlat
sub
pop
fisttp
push
jns
ins
repnz
int
mov
int3
jbe
loopne
sbb
addr16
aas
(bad)
mov
stos
lahf
loope
inc
test
sub
mov
pop
cmc
cwde
xchg
jae
leave
push
int
lods
repz
icebp
out
das
dec
jbe
aad
repz
or
cld
mov
and
popf
in
stos
popa
out
mov
pop
pop
(bad)
stc
ret
call
into
mov
cmps
test
pop
js
fs
mov
repz
dec
or
pushf
popf
mov
rcl
loop
lahf
sub
(bad)
mov
scas
jnp
cmps
mov
cmp
gs
cmc
(bad)
call
sar
movs
jbe
outs
mov
in
jp
mov
xchg
in
pusha
push
sbb
sar
push
sbb
cld
popf
loopne
xchg
in
cli
cld
jge
repz
hlt
lahf
add
pop
sbb
mov
mov
repnz
not
push
push
fdivr
clc
sub
fdivr
sub
fisttp
cmp
dec
pusha
pop
adc
cmp
popa
pop
dec
or
(bad)
int3
sar
push
movs
dec
xchg
mov
pop
daa
scas
mov
jge
loopne
dec
mov
addr16
mov
pop
(bad)
imul
push
out
fist
ins
enter
jmp
cmp
lock
push
mov
int
and
inc
mov
sar
xor
add
or
mov
or
push
xor
div
enter
xlat
ins
add
outs
cs
and
jmp
mov
jns
popf
lahf
mov
jg
or
pop
test
jmp
mov
loopne
inc
popf
cmc
stos
sti
pop
imul
mov
or
cld
jo
das
pop
int3
sub
ret
jp
rol
addr16
test
out
cmps
cmp
mov
inc
push
repz
lds
inc
fscale
enter
call
cmp
mov
inc
int3
mov
xor
jmp
jae
fs
cmp
add
lods
data16
retf
mov
xchg
jno
cmps
push
adc
and
push
push
js
icebp
aam
ja
(bad)
mov
adc
adc
push
mov
cmp
mov
add
cwde
int3
out
mov
ins
xchg
pop
jb
dec
push
sar
movntq
retf
stc
fsubr
push
sbb
loopne
rep
xchg
sti
push
adc
out
lods
xor
push
movs
pop
cmc
adc
lahf
ret
(bad)
sbb
stos
in
imul
push
mov
test
sti
or
xchg
scas
mov
dec
sti
and
push
and
pop
in
cwde
outs
lea
push
adc
push
and
mov
pop
lahf
mov
jp
stos
jno
retf
mov
push
fld
xchg
fild
ss
cmp
pushf
cmp
inc
inc
inc
jg
in
pop
xchg
pop
shr
pop
lds
mov
call
mov
mov
lock
nop
mov
or
call
cwde
aaa
jl
pop
or
mov
sysexit
sbb
lods
data16
inc
cld
mov
cmc
clc
mov
pop
sub
clc
inc
mov
cwde
and
(bad)
mov
xor
test
ins
in
jp
push
aad
xor
ret
(bad)
mov
sahf
sbb
xchg
push
clc
mov
imul
cld
jge
ja
cmc
mov
int
(bad)
fsub
retf
out
cmp
dec
mov
sbb
ja
jno
pop
movs
or
inc
out
fcom
lahf
(bad)
mov
pop
imul
jmp
or
lods
mov
repnz
stos
(bad)
jbe
daa
aas
push
inc
pop
pushf
inc
imul
not
gs
dec
es
lahf
or
jg
or
xlat
mov
mov
ss
ficomp
scas
ss
call
ins
mov
jbe
daa
xlat
xchg
mov
out
daa
out
xor
dec
cs
out
xor
pop
dec
and
mov
mov
jnp
dec
inc
out
cmc
icebp
es
aaa
ss
mov
ret
data16
mov
addr16
inc
into
jne
sub
pop
jmp
jb
sbb
and
cli
repnz
cmp
iret
mov
mov
mov
xchg
mov
rol
mov
push
fisttp
out
mov
in
mov
mov
cli
cmp
arpl
mov
imul
enter
loop
ja
jl
data16
cmp
cmps
jmp
pop
dec
pop
std
and
jecxz
imul
sub
ror
adc
mov
cmp
fst
mov
scas
ja
pop
leave
pop
sub
jge
jo
inc
test
retf
js
lods
mov
mov
mov
int3
loope
sahf
pop
sbb
push
cmp
movs
les
js
mov
dec
push
ret
push
movs
cmp
(bad)
mov
dec
jle
repz
mov
das
shl
aad
loope
sub
and
dec
adc
loop
cs
jne
pusha
mov
movs
fwait
stos
clc
cmp
pop
sub
push
pop
jge
(bad)
cmc
pusha
adc
jbe
adc
inc
sbb
sub
into
iret
es
cmp
sti
sbb
cmp
jg
ins
mov
push
xchg
sub
call
mul
xor
adc
call
je
mov
cmp
scas
xchg
dec
sub
sub
or
test
fstp
mov
cmp
inc
in
cli
mov
pop
push
mov
xor
aad
repz
hlt
pop
pusha
mov
mov
jmp
aad
aad
popf
or
mov
sub
sub
pop
lods
mov
repnz
sub
outs
jl
cmp
xor
retf
jne
pop
push
adc
push
cmp
sub
popa
iret
and
dec
add
add
stc
fwait
mov
sub
sub
ret
jne
xchg
push
jmp
imul
xchg
shr
aas
call
jmp
mov
jno
push
jne
in
shr
pushf
fsub
sub
pop
mov
jo
dec
sbb
sub
mov
add
mov
pop
push
xor
push
push
push
dec
retf
imul
dec
cdq
mov
repnz
push
cmps
jl
pushf
cmps
iret
iret
push
int3
adc
shr
les
and
outs
daa
in
pop
mov
fst
jmp
retf
in
das
lock
lods
jo
movs
into
xchg
into
cmp
xlat
in
int3
jne
jp
fbld
cmp
jecxz
cwde
shl
outs
clc
dec
fwait
stos
push
sub
cwde
out
ds
inc
int3
jns
jmp
mov
outs
ficom
iret
in
pusha
mov
out
fistp
push
data16
(bad)
ins
lds
pop
cdq
stc
jno
xor
dec
push
idiv
pop
outs
(bad)
lods
mov
rep
dec
test
mov
clc
sub
lock
dec
jge
int3
xchg
std
push
dec
pop
dec
lea
inc
mov
inc
dec
or
je
push
in
mov
cmp
out
add
add
jl
mov
inc
sbb
inc
xor
in
cmp
push
mov
or
(bad)
in
mov
mov
or
inc
sbb
adc
stos
sub
adc
mov
xchg
lods
fistp
push
pop
mov
pop
pop
lea
sub
fidiv
pop
imul
push
mov
push
pusha
out
in
fbld
dec
arpl
add
mov
cmc
and
xchg
out
mov
aas
xchg
mov
push
mov
xchg
aad
imul
mov
movs
sbb
in
fsubr
ss
ficom
sub
fistp
ins
stos
stc
sbb
and
push
mov
or
push
push
push
pop
ret
aas
daa
cld
and
sub
mov
iret
rol
xchg
jle
lea
xor
pop
add
cmps
pop
call
and
cmp
pop
cmp
inc
test
bound
push
push
lods
add
retf
cmc
jo
sar
or
test
add
mov
fisub
(bad)
enter
call
ret
repz
dec
mov
out
pop
cmp
or
scas
hlt
mov
mov
cmps
out
shr
fstp
fldenv
mov
sub
outs
push
fwait
xchg
and
xchg
jne
mov
(bad)
mov
ss
mov
scas
cmp
(bad)
sbb
cdq
test
sub
pop
jle
jnp
in
mov
sub
push
pop
xor
pop
ficom
ret
cld
(bad)
jns
popa
push
mov
or
ret
cld
cmp
adc
and
xor
lods
retf
adc
pushf
mov
dec
adc
pop
jb
bound
repz
and
cmp
adc
mov
inc
push
add
retf
add
inc
es
and
and
(bad)
popf
cmc
adc
stc
mov
out
sub
jno
mov
(bad)
shl
mov
in
sbb
(bad)
jno
ret
test
jmp
jb
inc
pop
retf
mov
mov
cli
js
add
ds
mov
inc
imul
adc
xor
jnp
dec
mov
fldlg2
cmp
and
jns
cli
pop
sub
fistp
mov
aaa
retf
popf
outs
mov
retf
or
es
mov
dec
(bad)
mov
scas
push
push
cmovnp
sub
aaa
jae
dec
sahf
ds
and
mov
add
mov
pop
retf
cmp
push
cmp
add
sbb
add
icebp
xchg
stos
(bad)
stc
mov
jp
xchg
sar
lods
mov
jp
or
cmps
into
nop
jmp
fadd
mov
stc
mov
mov
pop
mov
pop
mov
stos
pop
lods
push
sbb
loop
push
mov
aas
push
dec
mov
xchg
aam
loope
pop
mov
dec
(bad)
xor
and
push
cmp
iret
xchg
mov
es
push
mov
cmovne
mov
inc
ins
neg
mov
cwde
inc
and
std
ror
leave
rcl
ins
call
adc
mov
jnp
sub
adc
mov
jns
in
or
cs
in
iret
add
jmp
(bad)
ret
pop
leave
inc
leave
aad
xor
add
dec
aaa
pushf
lahf
sub
(bad)
cmp
out
mov
popf
dec
sar
int3
cmps
cmc
inc
jg
xchg
les
(bad)
retf
inc
lds
js
idiv
lea
out
(bad)
dec
scas
mov
fucom
outs
out
sti
push
and
mov
pop
pop
pusha
push
mov
into
aaa
imul
and
jne
scas
xchg
cmp
out
lods
fldenv
xchg
jnp
pop
mov
call
mov
cs
mov
rcr
inc
mov
mov
shr
push
imul
inc
jb
arpl
fld
pop
repz
xor
push
ds
cmps
push
dec
popf
pusha
jnp
mov
mov
jnp
and
mov
xchg
push
mov
xor
add
xor
jmp
mov
jmp
push
fnstcw
cmp
cli
ds
xchg
and
faddp
inc
push
imul
push
arpl
sbb
fistp
mov
mov
arpl
pop
bound
loop
icebp
lahf
push
inc
(bad)
mov
pop
push
cld
push
inc
mov
jmp
jb
jnp
cmp
addr16
and
push
std
cwde
pushf
or
lods
jo
jns
xchg
movs
cmps
sbb
push
fsubrp
js
mov
or
fiadd
mov
add
sar
pusha
cwd
aaa
inc
loopne
dec
movs
jp
dec
loopne
into
xchg
sub
pop
adc
sbb
mov
sti
dec
call
cmp
mov
mov
in
outs
mov
jge
mov
(bad)
sub
mov
fcomp
mov
retf
push
xchg
test
sub
xchg
inc
out
loopne
cmp
pop
repnz
(bad)
in
fnstsw
xchg
jo
mov
addr16
sub
fs
mov
xchg
push
in
cmps
shr
fnstsw
jp
mov
retf
push
mov
mov
jmp
jne
xlat
sbb
mov
mov
mov
(bad)
mov
mov
fstp
fld
arpl
jecxz
cld
xchg
cmc
ja
adc
int3
push
push
outs
repnz
pop
xor
and
push
(bad)
push
repz
xchg
push
loopne
pop
(bad)
mov
sub
xor
cmp
fst
cmps
test
fsub
test
fwait
popf
cld
sahf
repnz
sub
pop
out
push
aaa
adc
loopne
xchg
rcr
icebp
pop
dec
or
popa
cwde
(bad)
repnz
xchg
push
(bad)
or
es
lods
mov
jo
jb
js
jmp
and
pushf
add
push
std
sub
adc
pop
stos
imul
mov
inc
in
mov
cmp
sar
lods
scas
stos
mov
pop
(bad)
push
out
dec
es
int3
hlt
fldlg2
sub
pop
lock
outs
mov
loop
lock
ins
out
mov
jnp
mov
push
push
arpl
xchg
ins
cmps
int3
adc
jg
js
jnp
jg
jbe
pop
pop
jp
jl
mov
not
push
out
cmp
dec
pop
and
(bad)
pushf
rcl
psubd
push
call
ds
pop
hlt
sar
fmul
call
(bad)
jbe
pop
sub
ins
call
xor
mov
iret
(bad)
push
inc
lahf
lods
mov
ds
adc
ins
movs
xchg
cmp
in
out
inc
mov
xor
inc
movs
mov
inc
add
ss
or
sub
push
dec
(bad)
and
arpl
push
adc
fsubr
ins
mov
fs
retf
jp
push
push
fisub
sbb
xlat
adc
mov
pop
fs
bound
push
add
pop
(bad)
mov
xchg
jb
cmp
push
std
sbb
push
adc
add
xchg
cmp
dec
repz
stos
push
mov
into
push
scas
jb
test
test
jg
pop
stos
push
jns
lahf
out
adc
mov
jecxz
shl
dec
out
pop
xor
mov
loopne
retf
movs
adc
add
cdq
xchg
mov
mov
lock
mov
call
dec
rol
jmp
jge
movs
dec
xor
push
mov
mov
mov
sti
push
pop
mov
shl
jb
repz
leave
mov
test
out
cli
sub
and
stc
out
mov
xchg
mul
pop
xor
stos
bound
dec
mov
jg
cld
sub
lods
mov
sbb
push
in
imul
addr16
jbe
out
pop
nop
mov
pop
fbstp
cli
push
push
outs
loop
and
dec
fwait
or
sahf
mov
cli
and
inc
xchg
test
bound
scas
and
rcr
rcr
cmp
rcl
pop
(bad)
out
pusha
push
(bad)
retf
jns
leave
int
out
out
aaa
mov
ins
or
push
xchg
push
(bad)
loopne
sub
lahf
sub
xor
pop
or
pop
hlt
mul
hlt
leave
icebp
call
popf
cdq
sub
call
std
sbb
loope
addr16
mov
push
pop
es
mov
xor
cmp
jns
out
sbb
je
cmps
lahf
fsubr
dec
ins
fcmovnu
(bad)
pop
outs
inc
data16
fmul
in
jne
fisttp
mov
(bad)
push
jb
and
mov
push
fld
(bad)
push
iret
out
in
inc
ds
ss
clc
jmp
xor
xchg
lahf
movs
in
mov
cmp
dec
jns
xor
cld
cmps
sub
mov
sub
fwait
xor
and
push
fimul
xor
popa
outs
dec
xchg
mov
sub
out
out
mov
(bad)
js
ffreep
pusha
sti
pop
mov
and
out
test
mov
in
ins
mul
scas
fstp
repz
mov
das
push
sbb
inc
adc
and
push
mov
lahf
call
mov
mov
ss
gs
push
push
int
outs
mov
pop
fadd
neg
push
mov
push
push
outs
test
push
jmp
xor
(bad)
pop
(bad)
ret
aad
mov
or
add
xchg
(bad)
test
cmp
jb
cmps
xchg
pop
call
pop
sbb
daa
imul
push
in
mov
loope
repz
jmp
and
mov
adc
push
jp
fwait
mov
jg
stc
lahf
lods
adc
scas
mov
pop
adc
imul
add
inc
push
mov
mov
xchg
hlt
push
cmovs
adc
xor
xor
jbe
rol
mov
call
jmp
push
mov
xor
cmp
xor
dec
and
adc
retf
mov
dec
xchg
jnp
xchg
sbb
xchg
pop
lods
jbe
adc
loopne
fbstp
outs
test
cmp
ja
in
loop
ret
mov
imul
cwde
outs
pop
mov
ret
sti
or
xchg
(bad)
scas
std
dec
sti
mov
mov
(bad)
sub
adc
lahf
mov
mov
clc
xchg
mov
jp
xor
icebp
imul
mov
hlt
out
cs
test
(bad)
aaa
mov
jp
xchg
aas
sbb
int
sar
mov
mov
out
xlat
jmp
mov
ja
cli
imul
jle
xlat
jle
dec
out
xor
jl
push
in
and
and
pop
jge
jae
or
xor
xor
fldenv
lds
les
push
push
sub
mov
stc
sahf
xchg
sub
pop
sub
mov
scas
movs
cli
xchg
cmps
outs
mov
imul
jge
inc
or
lods
(bad)
iret
pop
mov
stos
mov
add
sub
cld
int
fsubr
(bad)
icebp
sub
mov
xor
mov
(bad)
xlat
and
ret
sub
push
inc
xchg
mov
into
add
add
add
shr
(bad)
push
dec
retf
cmp
repz
fnstcw
push
call
inc
push
retf
mov
stos
shl
adc
js
adc
lahf
call
pop
mov
popf
(bad)
cmps
pop
out
xor
popf
addr16
xchg
stos
mov
lods
add
xor
ins
xlat
mov
pop
call
dec
push
jge
dec
inc
loop
(bad)
xchg
out
dec
stc
jecxz
lea
loop
aam
pop
inc
popa
sub
sub
rcr
mov
mov
mov
cmc
jecxz
sub
aaa
pop
push
div
inc
xchg
inc
aad
inc
xor
xchg
sub
xchg
sbb
aaa
test
call
iret
and
ds
xchg
adc
cmp
xchg
xor
pop
and
addr16
in
inc
and
pavgb
push
mov
dec
(bad)
or
scas
push
xor
out
cmps
jge
pop
pop
(bad)
inc
aad
xchg
push
cld
mov
cs
lock
push
mov
xchg
sub
into
popa
(bad)
sbb
push
push
push
cmps
lds
ffreep
dec
sbb
pop
stc
push
dec
test
push
gs
push
imul
fild
cdq
jmp
push
fcmove
sbb
in
fwait
or
rcr
xchg
test
push
iret
mov
and
mov
adc
push
xchg
push
in
cwde
neg
sub
lock
ja
pop
jecxz
push
sub
mov
mov
fwait
sar
mov
push
addr16
jns
ins
inc
mov
pop
jge
xlat
aad
outs
ins
push
pop
es
adc
cmc
adc
jmp
movs
jp
in
inc
adc
mov
mov
and
fild
xchg
(bad)
jp
hlt
xor
call
lods
stos
pop
nop
mov
sbb
lods
clc
out
xor
push
inc
mov
mov
(bad)
into
repnz
pusha
pop
test
fldcw
xchg
call
sbb
icebp
push
cmp
pop
push
stos
data16
xor
scas
mov
sbb
push
out
fild
(bad)
pop
push
lahf
mov
aaa
lods
jae
clc
cmps
mov
pusha
mov
mov
cdq
shr
adc
push
fisttp
pop
pop
aam
mov
mov
aad
int3
push
icebp
std
icebp
jle
sbb
xchg
scas
pop
jg
icebp
in
add
fdivr
fsubr
scas
jne
push
mov
in
push
sub
aam
lahf
jle
xchg
inc
push
xor
loopne
(bad)
ins
pop
addr16
pusha
ins
cmc
and
in
rcl
push
pop
sti
rcr
stos
ja
cmps
sbb
mov
aaa
jmp
test
xchg
jmp
mov
or
push
in
mov
mov
nop
(bad)
shr
les
xlat
enter
pusha
addr16
pop
lahf
mov
jmp
sub
xchg
push
or
mov
aad
sahf
inc
pop
adc
test
retf
inc
ficomp
jle
stos
push
and
jecxz
mov
push
mov
(bad)
lods
inc
cmp
aad
(bad)
push
scas
imul
ret
or
test
mov
dec
pop
arpl
test
push
jmp
std
jp
cmp
cmps
jp
pop
enter
mov
pop
test
mov
cmps
jg
ret
or
iret
mov
jle
fwait
out
lods
int
and
push
or
test
test
or
mov
ins
(bad)
stos
dec
push
or
or
inc
jno
test
pop
lea
sub
test
bound
in
scas
cmps
lods
fdivrp
adc
cmc
out
pop
adc
inc
push
fimul
dec
in
(bad)
ficomp
dec
mov
(bad)
mov
jmp
sub
xchg
dec
cli
(bad)
jbe
cmp
ds
fiadd
cmp
lock
jecxz
stos
push
(bad)
lock
xor
fs
sub
cmp
ret
scas
lock
mov
jmp
sbb
jmp
pop
inc
cmp
or
retf
jbe
pusha
lock
arpl
in
xlat
adc
jo
cmps
xchg
push
or
int
xor
inc
jge
xchg
mov
mov
xchg
xor
cwde
stos
push
mov
pusha
(bad)
mov
scas
ret
cmps
or
pop
mov
mov
lock
fiadd
jmp
(bad)
popf
shl
mov
stc
addr16
add
jno
test
sti
dec
jbe
out
dec
jmp
dec
lds
jge
mov
cdq
retf
mov
cmps
pop
mov
int3
aaa
lock
pop
cli
cdq
(bad)
sbb
int3
imul
aas
fucomip
mov
outs
and
out
int3
(bad)
repz
xor
movs
or
jae
dec
lods
mov
fld
fs
sbb
xor
and
inc
data16
cmp
enter
outs
nop
cdq
clc
out
enter
aas
fs
push
mov
adc
ss
ss
ss
push
push
ja
bound
cdq
lahf
(bad)
aad
jp
dec
in
pop
jmp
sbb
data16
pop
fcomi
mov
cmovg
add
cmp
(bad)
mov
mov
or
scas
lds
cli
rcl
add
jp
call
test
jp
sub
call
jne
push
test
pop
or
std
shl
xchg
mov
push
cmp
in
xor
ds
(bad)
rcr
mov
jnp
loop
pop
cmps
xor
jg
sub
mov
adc
pop
frndint
mov
xchg
shr
fwait
clc
adc
or
lods
ja
aaa
mov
outs
stos
mov
imul
lea
push
hlt
(bad)
xchg
cld
add
push
fild
mov
stos
icebp
(bad)
ins
mov
mov
and
jb
imul
mov
inc
jnp
xchg
sub
jmp
(bad)
sbb
fwait
jle
xor
fnstenv
out
hlt
(bad)
cmp
adc
mov
scas
xor
jnp
xchg
inc
or
cs
fsubr
rol
pop
pop
pop
movs
or
xchg
pop
cmp
xchg
in
dec
pop
ins
hlt
jo
sub
lahf
push
mov
addr16
stos
xor
in
add
pushf
std
cld
bnd
mov
lods
fucom
repnz
cli
or
lds
mov
(bad)
inc
push
adc
xchg
or
dec
test
fcmovbe
outs
ret
mov
dec
pop
jns
adc
pop
hlt
inc
jl
retf
sbb
ins
retf
push
fs
imul
cli
lahf
ja
mov
test
cmps
pop
jecxz
fstp
or
fiadd
and
test
arpl
mov
xchg
dec
frstor
cmp
jno
shr
fstp
and
jmp
(bad)
jae
mov
push
out
pop
(bad)
loopne
push
pop
lods
mov
push
jne
loope
sti
sub
mov
movs
arpl
out
fsubr
sbb
mov
mov
popa
pop
jle
cmps
lods
mov
sti
mov
not
aad
mov
or
jge
loopne
hlt
push
nop
dec
mov
and
neg
dec
enter
mov
jg
cmp
scas
call
mov
mov
and
adc
stos
out
xchg
std
shl
icebp
cwde
out
aad
jmp
mov
or
adc
lock
int3
dec
and
aad
push
out
mov
mov
call
push
test
aad
mov
mov
push
or
push
loope
mov
lods
mov
call
fmulp
mov
call
jp
xor
aas
mov
mul
call
jb
pop
inc
aad
in
pop
call
hlt
push
push
jp
cmp
fild
repnz
xor
xor
sar
cmp
inc
int3
rcl
mov
les
rcl
mov
les
pop
inc
pop
lods
(bad)
and
lds
scas
outs
inc
pop
in
jmp
mov
hlt
lds
mov
das
(bad)
cld
sub
pusha
and
adc
inc
pop
in
movs
(bad)
rol
pop
mov
out
inc
pop
lods
lock
pusha
scas
cmp
loopne
not
push
inc
in
add
pop
icebp
test
xchg
xor
inc
cmp
sahf
shl
pop
test
xchg
aam
(bad)
test
fisubr
or
mov
ds
sbb
xchg
add
fs
mov
cmc
cli
loop
adc
cld
aas
push
das
mov
mov
mov
xchg
lock
pop
enter
aad
mov
adc
or
loop
inc
iret
in
rcr
mov
sub
push
push
(bad)
fnstsw
movs
out
dec
push
mov
jb
out
lea
lock
or
jmp
fisttp
out
sti
add
inc
fiadd
xchg
cmc
lds
xchg
mov
cmps
fisubr
dec
sbb
mov
cmp
mov
sbb
xchg
xor
cmps
push
cmc
sub
les
push
push
pop
addr16
xchg
jge
and
add
lahf
and
jmp
xor
std
leave
cs
sahf
xchg
jae
das
out
arpl
mov
mov
xor
(bad)
repz
dec
je
xlat
movs
int3
lock
ss
push
cmp
ss
mov
stos
xor
sub
pop
lahf
mov
adc
daa
jnp
mov
sbb
in
inc
pop
mov
cmp
push
and
sub
pop
add
sub
(bad)
mov
out
cdq
mov
xchg
mov
daa
mov
cs
psubd
mov
jg
cmp
enter
out
loopne
outs
mov
(bad)
fild
push
jg
shl
jns
(bad)
in
jnp
xor
imul
jp
jp
xor
cmp
pop
(bad)
out
xchg
fidiv
out
mov
mov
jns
arpl
daa
xchg
test
in
dec
movs
icebp
or
popa
mov
mov
aas
sbb
dec
imul
out
mov
pop
ja
cmp
in
fcom
lea
les
icebp
data16
fmul
jnp
push
xor
(bad)
adc
or
retf
rcr
and
mov
xchg
add
push
imul
fistp
int
inc
das
and
out
ss
leave
jle
mov
inc
add
pop
fidiv
push
or
cmp
out
int
jmp
push
push
fs
jp
jbe
sub
adc
(bad)
add
jl
cmc
and
push
retf
in
fwait
jae
outs
pop
stos
in
mov
fwait
std
mov
sub
fisub
fst
jle
das
retf
jns
idiv
xor
test
fistp
pop
repz
pop
inc
(bad)
jb
xchg
jecxz
inc
popf
push
sbb
test
pop
jmp
out
fisubr
sbb
lods
mov
mov
aad
cli
fist
imul
repnz
and
jb
ret
iret
ins
jle
mov
out
inc
aas
add
and
mov
imul
xchg
mov
xor
xchg
in
ret
mov
int3
pop
scas
lea
push
pop
scas
push
pop
ins
fadd
(bad)
(bad)
outs
jp
stos
ror
fistp
imul
or
daa
scas
mov
addr16
mov
mov
mov
repz
leave
retf
stc
and
mov
cmc
mov
ret
push
sub
push
scas
lahf
inc
mov
je
xchg
inc
in
(bad)
cs
push
stos
mov
xor
push
cmps
mov
xor
outs
arpl
mov
mov
jle
pop
lods
gs
sahf
mov
pop
pop
mov
cmps
or
aad
rcr
fcomp
xchg
sar
sub
adc
xor
mov
int3
fcomi
lock
or
push
xor
xor
clc
inc
adc
xor
inc
lahf
stc
jno
jae
mov
mov
rep
sbb
jae
jae
pop
aad
push
jns
out
out
nop
scas
in
dec
fmul
repnz
xchg
inc
inc
lea
xchg
dec
stos
push
clc
mov
sub
inc
sub
xchg
in
daa
and
jne
jo
pop
pop
mov
fnstsw
sbb
jl
xchg
jae
push
sar
or
push
test
cmc
push
in
fstp
fwait
js
push
mov
ss
dec
jmp
cmp
mov
(bad)
fisttp
pushf
cmc
cmp
mov
dec
push
mov
adc
mov
call
es
lahf
out
xlat
ja
push
cmp
imul
ss
mov
in
lock
and
loopne
bound
jp
cmp
stos
aaa
aam
fild
(bad)
sti
movs
test
jbe
fstp
xlat
(bad)
fisttp
arpl
stos
ror
ret
mov
adc
imul
outs
add
pop
imul
push
xlat
xchg
mov
pop
leave
cmc
or
sub
iret
sbb
and
pop
popa
lods
mov
cmp
push
fs
out
and
add
loopne
clc
add
popw
inc
fisubr
push
arpl
cli
je
int3
jmp
lahf
mov
sbb
push
inc
jl
adc
(bad)
inc
arpl
lds
fnsave
pop
mov
mov
mov
jecxz
mov
mov
push
pop
jno
mov
outs
lods
adc
out
inc
(bad)
xor
fnsave
stos
fwait
and
ins
mov
jl
pop
sbb
int
ins
jl
xor
je
repz
dec
and
xchg
jmp
jns
mov
out
maskmovq
test
repz
fs
loope
(bad)
jge
sbb
inc
out
ss
out
outs
scas
jg
mov
loop
test
mov
push
lahf
inc
mov
loope
and
icebp
xor
inc
or
mov
aad
inc
mov
in
cs
or
(bad)
inc
mov
hlt
adc
push
or
psrlw
int
and
(bad)
cmp
test
ficomp
mov
test
sbb
mov
ret
pop
(bad)
popf
sub
shl
cmps
arpl
jecxz
not
inc
out
ss
add
cwde
mov
sbb
lods
sbb
cs
dec
adc
mov
mov
jne
mov
adc
call
(bad)
cld
mov
mov
in
xor
popa
mov
push
lea
jle
dec
cmp
mov
stos
out
repnz
test
and
(bad)
test
inc
adc
push
call
cs
push
sub
xor
sbb
stos
(bad)
pop
leave
dec
lds
adc
or
nop
inc
cmp
xor
scas
arpl
nop
popa
jge
and
inc
add
and
(bad)
dec
in
shufps
push
shl
adc
add
push
sub
and
loopne
out
nop
push
std
adc
mov
lods
xor
xlat
test
call
mov
push
and
mov
mov
aaa
retf
cmc
mov
pop
neg
push
cmp
mov
hlt
sub
push
mov
int3
cld
scas
adc
arpl
cmp
sub
ds
es
je
ins
push
test
inc
fnstenv
pop
cwde
or
and
(bad)
push
mov
adc
push
test
dec
mov
outs
jbe
ficomp
cmps
aad
sar
mov
and
pop
mov
pop
and
pop
pop
lods
xor
rol
push
stos
mov
outs
int3
mov
pop
cdq
test
js
adc
sub
mov
sbb
imul
push
xor
xchg
xor
int
jnp
xchg
pop
int3
cmp
inc
pop
inc
jge
push
movs
jae
fs
xor
(bad)
fnstenv
mov
mov
fnstsw
inc
f2xm1
outs
scas
mov
xor
jb
and
pop
and
xlat
jns
stc
mov
out
fisub
sbb
push
cmp
test
inc
mov
retf
scas
sbb
xor
fisttp
(bad)
repz
paddw
and
mov
jge
adc
icebp
je
les
test
xor
mov
cmp
(bad)
sbb
popa
cmp
inc
in
mov
jge
sub
push
je
popf
mov
add
lods
pop
pop
push
add
daa
cmp
not
jmp
cmps
push
mov
xchg
rol
and
stos
adc
xchg
mov
pop
dec
(bad)
jno
mov
sbb
xchg
iret
xchg
xchg
leave
sbb
retf
add
xchg
add
mov
ja
popa
jnp
sbb
(bad)
dec
pusha
cmp
xor
aas
(bad)
hlt
xor
mov
dec
adc
(bad)
lds
mov
cmc
mov
and
outs
mov
mov
sub
mov
inc
retf
aaa
or
popf
in
into
loop
push
xlat
xor
in
icebp
sub
call
cmc
pop
cmp
ficomp
jmp
lock
je
adc
addr16
in
adc
jbe
or
lods
scas
adc
dec
pop
shr
in
sahf
adc
jns
test
mov
enter
jne
xchg
cmp
dec
pcmpeqw
sbb
xor
dec
pop
xchg
(bad)
push
mov
in
jge
test
(bad)
cmp
push
inc
xchg
ds
in
add
push
ins
xchg
push
dec
and
jo
cmps
(bad)
or
push
mov
push
mov
aas
adc
fadd
cmp
sbb
cmps
cld
sbb
mov
mov
out
mov
std
or
out
std
add
xlat
clc
xor
ret
not
fistp
out
cld
or
outs
js
xor
dec
js
sub
fsub
xor
mov
adc
push
sub
outs
cmove
pop
iret
push
stos
pop
sbb
ds
in
mov
imul
in
ficomp
aad
inc
and
clc
mov
adc
scas
mov
in
scas
and
push
add
push
les
push
inc
jnp
cmp
mov
idiv
or
inc
test
cli
add
fild
aad
cli
ds
neg
lods
cmp
sub
mov
ja
mov
mov
les
test
fisttp
outs
pop
clc
jmp
jmp
mov
pop
xchg
fadd
in
xor
shr
inc
(bad)
adc
mov
sub
adc
scas
mov
sbb
adc
jle
adc
test
push
inc
dec
dec
mov
cwde
xchg
sub
cmps
cmps
(bad)
repz
stos
scas
jnp
mov
mov
ds
xchg
add
mov
pop
push
test
int
adc
sbb
(bad)
in
xor
lds
neg
icebp
pop
adc
jns
ja
repnz
mov
int3
daa
cmp
es
dec
add
push
mov
add
cmc
aas
inc
std
cwde
xchg
jge
xchg
imul
sub
jne
stc
cmp
push
sti
loope
mov
mov
test
and
pop
addr16
stc
sbb
jne
sti
bound
clc
mov
mov
loop
mov
out
pop
fmul
mov
rcr
(bad)
and
lock
jae
scas
xchg
fwait
aaa
outs
xlat
arpl
dec
std
mov
mov
aaa
push
mov
jnp
jl
mov
and
fwait
dec
pusha
ret
add
out
iret
mov
stos
push
movsx
xchg
sbb
inc
mov
call
add
imul
pop
or
mov
xchg
fild
mov
test
loope
pop
scas
lock
das
lock
ret
mov
fs
out
into
movs
or
jmp
aaa
in
dec
pop
out
mov
mov
push
and
stos
jmp
inc
(bad)
js
jmp
or
bound
or
call
mov
mov
mov
jb
mov
xor
dec
sbb
jecxz
loopne
out
jp
cmp
(bad)
sub
cmc
cmps
xchg
mov
cmps
sbb
lahf
imul
int
repnz
faddp
(bad)
(bad)
outs
sbb
jmp
mov
pop
jmp
int
sahf
mov
jecxz
mov
dec
dec
ins
pushf
repz
sbb
cmc
xchg
push
ins
out
repnz
jno
pop
rcr
shl
jnp
cmp
jae
into
ds
sbb
jle
sahf
ret
cwde
fbld
shl
into
jg
out
sar
out
jecxz
mov
shl
std
sbb
cdq
xlat
shl
jmp
jg
cmp
xchg
push
loopne
inc
pop
(bad)
(bad)
sti
adc
stos
mov
(bad)
aam
push
jge
push
mov
movs
into
inc
pushf
bnd
retf
or
in
retf
pop
arpl
iret
add
sbb
les
add
call
cld
add
cli
fdiv
jae
xchg
jl
loopne
stos
stos
jle
pop
sub
inc
pop
icebp
js
jge
mov
out
pop
out
or
in
je
sbb
fbstp
lea
(bad)
call
mov
pop
sbb
pushf
mov
add
fst
leave
dec
sbb
fdivr
fnstsw
mov
cmc
and
push
jl
mov
fchs
ins
gs
gs
mov
test
iret
in
pop
jmp
xor
inc
xchg
out
xchg
cwde
aaa
stos
mov
fld
push
nop
ss
js
jne
xor
arpl
ds
imul
cmc
div
push
out
jmp
pop
inc
lods
loopne
fistp
iret
pop
lods
jb
cmp
gs
pop
mov
loop
xchg
nop
stc
pop
faddp
in
mov
mov
ja
mov
pop
ins
pushf
adc
outs
dec
add
in
mov
(bad)
dec
loope
stos
in
pop
gs
jmp
out
mov
pushf
popf
pop
mov
into
nop
test
push
arpl
push
in
mov
lds
xchg
cmc
mov
xchg
ins
retf
(bad)
xor
(bad)
jmp
and
xor
push
and
push
ins
out
das
and
mov
sub
outs
pop
cli
(bad)
test
int
lock
mul
xchg
mov
(bad)
lds
into
mov
mov
cld
ret
popa
and
or
in
push
lahf
stos
ins
vpunpckhqdq
icebp
adc
sub
sti
stos
sbb
icebp
xlat
mov
pop
out
in
aam
scas
mov
adc
scas
cmp
mov
fiadd
enter
adc
movs
clc
jbe
jb
out
shl
vaddsubps
clc
cmp
das
pop
mov
inc
pop
jecxz
shl
xor
movs
not
js
mov
cmp
pop
mov
cmp
(bad)
scas
test
ds
jo
sbb
push
sbb
int
adc
xchg
arpl
push
retf
fistp
cmp
ja
add
jp
out
cdq
xchg
and
hlt
mov
jne
ds
jbe
icebp
xchg
int
scas
mov
mov
adc
(bad)
pop
out
popa
mov
dec
push
jnp
fbld
dec
adc
cmps
xlat
or
scas
mov
out
mov
mov
push
jnp
aam
xor
jns
cmp
push
jle
jmp
imul
enter
dec
mov
out
cmp
in
loopne
lods
int3
pushf
add
cmp
popa
push
retf
pop
in
adc
leave
inc
push
push
out
lds
jge
aas
dec
mov
xor
sub
or
mov
mov
retf
and
sub
jb
xchg
sub
or
xchg
js
jle
lods
xchg
ins
and
das
jp
fisttp
pusha
jle
stos
data16
arpl
mov
imul
in
adc
jno
shl
add
shl
adc
cmp
cmp
push
gs
mov
mov
adc
cld
adc
sbb
xor
jae
aas
loop
(bad)
call
loop
inc
cmp
dec
or
add
jg
or
aas
push
stos
fcmovne
rcr
xchg
jecxz
push
imul
push
movs
pop
xchg
sahf
pop
sub
std
je
lods
mov
stos
pusha
iret
jecxz
adc
fimul
and
sbb
addr16
or
movs
dec
call
cmp
jg
jo
rcr
sbb
imul
and
push
mov
hlt
cld
cmp
inc
ins
(bad)
and
sub
call
call
jp
mov
mov
stos
xchg
out
(bad)
loope
add
pop
jno
mov
fmul
xor
das
inc
arpl
aaa
sar
sub
mov
jae
iret
add
push
mov
cmp
test
jge
cmps
mov
sub
lods
dec
retf
jnp
dec
mov
mov
and
inc
lahf
sub
push
icebp
movs
jno
int
int
cmp
int
xor
mov
sub
adc
xor
sahf
jnp
pop
mov
lods
xchg
and
fcomp
icebp
sub
js
push
(bad)
hlt
pop
dec
jle
dec
repz
adc
or
mov
inc
jne
movs
xor
inc
inc
mov
in
jmp
cmp
sbb
mov
arpl
(bad)
in
xor
sub
shl
nop
and
or
sbb
push
scas
jl
aad
mov
jp
lds
xchg
cmps
js
and
dec
test
mov
ja
(bad)
fimul
(bad)
(bad)
xchg
repz
mov
(bad)
(bad)
into
mov
cli
jge
arpl
mov
inc
shl
shl
adc
mov
cmp
pop
jne
or
pushf
push
adc
mov
repz
dec
fbld
mov
pop
adc
or
mov
and
cmc
push
adc
stc
mov
dec
mov
sbb
fbld
sbb
iret
cmp
enter
stc
inc
into
cmove
adc
pop
or
mov
repz
mov
(bad)
(bad)
fsub
dec
test
stc
(bad)
pop
mov
cmp
mov
cmp
ret
ja
sub
test
pop
pop
in
pop
lahf
adc
jp
and
stc
mov
sub
arpl
js
scas
pop
popf
add
sbb
mov
mov
jl
mov
xchg
loope
and
inc
clc
les
out
xor
mov
out
clc
ror
(bad)
adc
(bad)
call
mov
push
add
ficom
pop
out
sbb
sar
nop
sub
call
lock
sub
jmp
sub
aam
and
jl
aad
sar
cld
xor
add
popf
inc
pop
and
(bad)
and
sub
pop
add
cmps
cmp
aas
jle
or
outs
aam
pop
lahf
or
popa
int
mov
fisub
mov
repz
ds
lahf
(bad)
xor
dec
add
ds
xor
neg
mov
(bad)
mov
(bad)
call
adc
xor
icebp
inc
jne
rol
aas
aad
cmp
push
aaa
(bad)
mov
jecxz
pop
push
dec
push
jge
(bad)
lods
push
nop
cmp
sbb
pusha
pushf
sub
push
dec
repnz
(bad)
mov
jno
imul
jno
pushf
aad
(bad)
mov
xchg
push
mov
push
jbe
out
mov
into
add
sub
jmp
mov
test
rcr
lock
dec
and
sahf
ins
iret
sahf
xor
out
daa
fs
or
div
jg
fld
sub
mov
lock
mov
test
sahf
cmp
cmp
lea
xor
retf
test
stos
mov
outs
lea
jb
(bad)
xor
xchg
add
inc
sahf
mov
add
mov
pop
popf
xchg
push
imul
fbld
ins
pop
mov
jae
out
in
push
(bad)
in
imul
push
and
xchg
and
adc
mov
dec
rcl
sar
jae
stos
dec
arpl
inc
les
xor
push
dec
fadd
mov
shl
pop
(bad)
arpl
pop
mov
mov
fidivr
pop
jnp
(bad)
mov
aam
add
dec
and
outs
adc
inc
idiv
popf
dec
cdq
std
pop
inc
aas
jmp
dec
adc
cld
stc
std
loop
fnstenv
cld
fwait
add
xchg
imul
push
pop
sub
xor
pop
jne
dec
push
outs
pop
repz
ja
jae
cmp
cld
dec
enter
inc
in
mov
sti
movs
mov
mov
shl
out
stc
sbb
out
dec
mov
mov
and
call
in
cmps
(bad)
fwait
jne
fbstp
mov
(bad)
outs
js
xchg
mov
mov
repz
iret
lock
call
mov
ja
pop
sub
clc
iret
outs
dec
loopne
imul
xchg
adc
pop
cdq
cmc
mov
imul
fdivp
push
pop
cs
out
pop
cmp
and
lods
stc
mov
xchg
outs
je
pop
nop
push
(bad)
sahf
loope
add
jne
jo
pop
fist
imul
pop
dec
sbb
sub
xchg
loope
mov
jge
cmp
cmp
sub
out
mov
mov
outs
sbb
adc
jne
mov
push
(bad)
xchg
addr16
jp
(bad)
mov
into
shl
cdq
or
sti
nop
rcl
ficomp
sub
add
mov
movs
sub
mov
xchg
push
xchg
xchg
mov
pop
add
mul
mul
jecxz
adc
repz
repz
adc
lods
push
sub
mov
retf
cmc
dec
inc
mov
and
adc
lea
push
sbb
inc
push
mov
rcl
call
jmp
dec
xchg
xchg
cs
aas
push
aas
dec
dec
into
fimul
or
xor
pop
retf
sar
cmps
in
repz
test
jb
fdivr
cmp
ret
pusha
pushf
add
xchg
adc
push
pop
scas
loope
cli
jl
js
and
retf
test
cdq
sub
jmp
xchg
pushf
xchg
iret
arpl
test
cmp
jmp
mov
(bad)
hlt
ja
call
popa
fisub
and
pop
xor
mov
mov
or
aaa
retf
jecxz
jle
push
lahf
scas
daa
mov
retf
aad
push
adc
sbb
mov
bound
in
jae
dec
dec
data16
call
and
sub
or
inc
and
imul
aas
scas
pop
or
push
cmp
push
lods
add
icebp
jmp
loop
mov
or
fnclex
sbb
aad
call
test
inc
and
imul
dec
mov
push
jp
sub
mov
dec
adc
pusha
das
push
mov
jne
sbb
sti
jne
pop
test
sub
imul
jmp
pusha
pop
dec
pop
push
push
push
inc
adc
mov
and
cmp
addr16
fwait
outs
adc
or
xor
imul
mov
jecxz
movs
or
int
inc
ins
mov
push
mov
pop
sub
xor
or
imul
inc
or
(bad)
push
icebp
loopne
lods
cpuid
(bad)
dec
sbb
cwde
ror
pop
sbb
lods
fdiv
aad
xlat
push
sub
xor
test
das
scas
gs
jo
dec
pop
sub
(bad)
fadd
in
aaa
stos
xor
or
ret
into
jbe
push
psubd
lock
in
gs
mov
cld
xor
ja
test
push
jns
fild
dec
lods
dec
push
cdq
fidivr
pop
and
pop
in
in
in
ret
aas
jbe
cmp
cmp
pop
pushf
push
out
or
push
(bad)
mov
pop
pop
mov
stos
into
push
mov
fsubrp
fdiv
out
jnp
ss
mov
mov
pushf
mov
movs
sub
or
std
dec
test
lock
mov
test
test
mov
aam
js
xchg
sbb
ins
idiv
out
or
test
repnz
std
fmul
movs
xchg
adc
ret
sbb
xor
dec
pop
pop
mov
cmc
pop
adc
and
jg
sub
mov
pusha
outs
jns
lods
cmp
jmp
adc
ds
sbb
sub
push
mov
mov
test
sbb
xor
icebp
fwait
(bad)
stos
test
mov
rcl
mov
inc
jbe
push
in
test
stos
lods
mov
inc
addr16
clc
and
inc
stos
shr
mov
jbe
in
mov
hlt
dec
adc
out
das
repnz
dec
cdq
bound
push
dec
push
jle
test
ficomp
bound
add
das
ficomp
dec
mov
lea
xchg
movs
pushf
and
loop
mov
sub
in
pop
push
mov
add
in
lock
add
bound
sub
out
xchg
adc
add
or
aad
dec
cmc
and
xchg
sar
retf
mov
ins
rcr
adc
call
add
jl
pushf
sti
out
mov
push
stos
xor
(bad)
push
scas
push
repnz
aam
pop
or
mov
test
jb
(bad)
xor
(bad)
rcr
jmp
sub
lods
nop
mov
mov
mov
jae
add
xchg
movs
sub
movs
into
outs
mov
test
add
jbe
sub
fidiv
imul
fist
arpl
outs
and
jmp
or
fcmovne
pusha
clc
mov
cwde
out
jne
(bad)
enter
sbb
inc
sub
mov
push
stos
jb
aam
stos
loopne
shrd
mov
neg
mov
iret
movs
clc
mov
jecxz
test
ss
cmp
(bad)
sbb
xor
mov
xor
mov
cs
push
adc
in
pop
aam
xor
sbb
add
adc
cmp
fisttp
mov
sbb
jle
adc
push
xor
xchg
cmp
outs
pop
xor
xchg
loope
(bad)
clc
sbb
inc
jmp
fs
adc
mov
mov
pop
test
cmp
jg
and
xchg
mov
sbb
mov
int
mov
pop
xchg
pop
in
addr16
sub
and
mov
pop
xchg
pop
mov
mov
daa
je
cs
in
iret
popf
mov
das
js
jae
(bad)
inc
(bad)
outs
cmp
mov
mov
pop
jo
dec
pop
popa
les
sub
ds
sub
add
aam
push
add
push
jae
fsub
jg
mov
retf
les
mov
les
mov
test
cld
push
fucomi
idiv
xchg
sub
mov
jmp
call
xchg
push
stc
shl
push
dec
jg
pop
xchg
pop
aas
sub
xchg
mov
jmp
fs
out
inc
push
in
inc
and
push
ss
mov
pop
cld
dec
fs
scas
clc
xor
lods
rol
jg
cmp
or
in
fs
sti
jecxz
not
fsubr
hlt
add
mov
jns
pop
idiv
in
call
rol
lods
std
jle
inc
scas
mov
jnp
mov
xchg
push
stos
jp
gs
dec
sbb
stos
lods
adc
jl
jb
gs
call
xchg
sub
cmp
inc
adc
addr16
pop
mov
jnp
push
imul
ja
cwde
pop
mov
add
dec
retf
pushf
dec
lea
or
push
int
cmp
xchg
into
bound
adc
fstp
sub
add
fwait
ja
xor
cmp
je
stos
mov
sub
out
aaa
(bad)
mov
cmp
daa
mov
sub
cmp
jecxz
xchg
ficomp
popf
and
mov
cmps
jle
adc
in
mov
xchg
inc
in
inc
scas
adc
sbb
push
pop
test
jo
stos
xor
pop
mov
gs
or
mov
loope
push
pop
aas
fcomp
adc
fs
pop
jmp
push
pop
add
popa
cmc
shr
xor
mov
push
fistp
jmp
jb
test
xchg
ret
mov
ins
loopne
pushf
inc
jno
rol
adc
pop
cmp
inc
inc
push
pushf
shl
lds
add
and
aaa
aas
mov
ja
in
mov
mov
out
icebp
mov
(bad)
jl
cmp
cmp
out
sbb
mov
xor
lea
mov
pop
and
mov
mov
push
push
dec
ret
mov
retf
sbb
aaa
mov
addps
std
push
(bad)
fild
push
ficom
mov
aas
jno
into
lahf
xchg
(bad)
stos
adc
leave
fwait
jnp
or
jmp
mov
mov
xor
int3
xor
gs
les
xchg
aam
dec
retf
dec
rol
int
retf
fucomip
xchg
aad
pop
pusha
aad
add
imul
push
xchg
stos
cmp
ja
and
push
jmp
dec
pop
fdiv
ins
jne
(bad)
mov
je
cld
push
rcl
ss
pusha
fistp
add
stos
xor
fcom
adc
imul
cmp
xchg
aam
rcr
sbb
push
nop
mov
pop
inc
stos
retf
mov
xor
mov
xchg
clc
out
ds
jnp
cmp
fsubr
mov
call
(bad)
pop
ret
xor
les
cmp
jmp
fadd
cmps
xchg
scas
shl
enter
mov
stc
lods
in
cld
outs
adc
or
mov
test
jnp
ret
retf
dec
in
in
add
jg
adc
mov
and
imul
dec
xor
call
nop
(bad)
and
test
ss
popf
pop
shr
xor
mov
cld
test
addr16
ror
rcr
push
add
mov
dec
mov
sar
adc
cwde
gs
(bad)
clc
xchg
fst
sbb
fs
cmps
outs
imul
call
(bad)
cmp
mov
mov
xchg
mov
ret
rol
sbb
das
push
out
inc
int
cmp
arpl
sbb
mov
mov
(bad)
pop
lods
lahf
repnz
stos
inc
cmp
cmp
xor
cmp
mov
test
lds
and
aaa
xchg
or
stos
push
push
(bad)
bound
imul
jp
aam
ds
push
mov
push
adc
mov
jle
out
daa
or
mov
in
inc
hlt
into
mov
dec
out
(bad)
cld
cmc
fcomp
popf
in
xor
in
xor
push
add
rol
jmp
adc
bound
and
and
shl
call
shl
push
lods
popf
in
(bad)
in
pop
fstp
sub
jb
adc
pop
mov
jmp
or
push
mov
outs
pop
pop
hlt
fist
test
sbb
(bad)
clc
jle
(bad)
mov
adc
or
fidiv
add
xchg
jns
inc
mov
out
cdq
mov
pop
daa
mov
mov
jmp
mov
bound
popf
test
out
or
ficomp
pop
fwait
dec
pop
mov
out
xchg
rcr
jl
xor
jne
rcr
pushf
cmp
repnz
jl
lea
fstp
in
out
xor
inc
sub
push
pop
in
test
xchg
mov
xor
push
ss
mov
mov
ja
jmp
mov
and
lods
push
jl
pop
mov
call
std
xor
inc
test
clc
jae
int
sbb
clc
jmp
xchg
add
push
fs
add
std
mov
loope
arpl
mov
dec
fimul
xchg
cdq
sbb
adc
xchg
ret
ja
jae
out
and
push
enter
jmp
adc
into
mov
xor
push
push
mov
mov
xchg
or
xchg
cld
enter
jo
cmp
out
cmp
iret
push
fdiv
outs
sar
(bad)
fadd
neg
ror
mov
neg
repz
pop
loope
push
cmp
stos
fild
push
inc
xor
xlat
push
cmp
inc
jmp
fmul
retf
cwde
pop
cmp
push
cmp
jp
jno
shr
and
adc
add
mov
mov
fs
js
sti
mov
mov
ret
add
fstp
fistp
test
out
mov
outs
(bad)
imul
xor
jle
iret
mov
mov
stos
loope
mov
fmulp
fsubr
retf
sub
jno
(bad)
lds
dec
and
sub
cdq
push
lods
jbe
and
pop
sti
aam
lods
adc
fmul
idiv
sub
fninit
scas
jge
mov
icebp
repz
ss
xor
jmp
loopne
clc
mov
lea
loope
jae
and
test
(bad)
sbb
xchg
not
jno
cmp
add
inc
jl
adc
push
(bad)
fcom
pop
adc
jge
push
(bad)
xor
or
pop
mov
mul
stos
dec
push
stos
xchg
stos
sub
or
stc
clc
jp
xor
(bad)
loop
push
fidiv
sti
mov
sub
call
test
push
mov
push
pop
push
push
out
mov
loopne
jg
jns
mov
and
(bad)
lods
and
xchg
push
fbld
xchg
pop
into
mov
movs
imul
aam
inc
retf
mov
xchg
cmps
ins
fsub
mov
xchg
jmp
xor
pop
mov
mov
pop
fild
stc
loope
int3
xor
inc
jmp
pop
mov
mov
out
mov
xor
and
fs
jg
sbb
lods
lea
sbb
lods
das
fwait
(bad)
loopne
scas
or
push
enter
popf
pop
fucom
mov
hlt
(bad)
shl
xchg
inc
das
jp
pop
pop
dec
icebp
add
aam
gs
jb
neg
aad
adc
popf
lock
add
scas
aam
jmp
dec
xor
sub
jae
push
sahf
fadd
fsubp
cmp
jl
loopne
les
or
data16
fsub
cmps
pop
mov
and
pop
(bad)
xlat
dec
clc
pop
rcr
sbb
adc
retf
jmp
push
pop
pop
adc
gs
mov
inc
mov
cmp
mov
(bad)
mov
in
fmul
bound
sti
gs
ins
jecxz
lods
hlt
mov
stos
xlat
mov
stc
mov
(bad)
sub
sbb
add
in
not
stc
enter
dec
mov
icebp
xchg
aam
inc
jg
jp
mov
in
fnstcw
cmps
out
popf
sub
jp
inc
outs
fisubr
push
mov
test
ja
jmp
lods
dec
adc
mov
(bad)
aad
jg
and
xor
jb
cmp
push
xchg
sti
ror
loop
sub
xor
retf
pop
lods
dec
std
leave
dec
aas
sbb
movhps
sub
cmp
pop
cmp
sub
jb
mov
stc
jge
cmp
imul
and
dec
scas
jge
gs
jmp
inc
rcr
add
fbstp
not
xor
mov
shl
test
xchg
jnp
push
fprem
dec
data16
popa
and
addr16
fcom
enter
jnp
aam
pop
add
jle
ror
xor
mov
mov
sahf
jne
iret
out
mov
pop
sti
clc
lock
bound
inc
lahf
mov
loope
mov
cmps
dec
xchg
push
inc
imul
ret
xchg
sub
das
(bad)
aad
lods
sbb
in
push
ret
aad
mov
inc
xchg
pop
xchg
aam
xor
mov
inc
or
pop
je
lds
fs
xlat
add
or
add
in
ins
test
in
adc
iret
test
jge
sub
xchg
mov
inc
cmp
je
mov
(bad)
in
inc
jns
imul
out
stos
cs
aad
jge
sub
sub
push
fmul
fstp
or
inc
cmc
adc
mov
mov
xor
sub
jae
(bad)
xchg
xor
out
pop
daa
nop
pop
mov
pop
loope
pop
jp
xchg
xchg
jecxz
pop
or
lea
mov
jb
jnp
test
std
aaa
dec
ds
dec
scas
mov
cmc
jnp
inc
out
bound
dec
ds
adc
ret
push
jp
retf
add
inc
sub
mov
jge
xor
cmp
xchg
jmp
mov
lahf
out
mov
or
int3
xlat
call
cmp
sub
(bad)
repnz
pop
sub
xor
ins
sub
xor
cmp
dec
enter
test
push
xor
adc
nop
mov
(bad)
std
ret
(bad)
aam
in
mov
and
jnp
jb
pop
in
scas
jge
sub
out
sbb
pop
(bad)
pop
push
into
outs
pop
pop
loop
sub
mov
ja
mov
sahf
(bad)
fdivr
mov
cmps
fwait
movs
mov
fldenv
stos
lds
cld
ficomp
cs
sbb
iret
mov
int3
popf
adc
xchg
pop
ja
lods
xor
jecxz
enter
in
rcr
nop
pop
pop
fiadd
jb
xchg
cmc
and
ficomp
ror
lods
popf
xchg
inc
outs
in
stc
or
imul
outs
in
(bad)
cmp
(bad)
jbe
nop
pop
pop
pop
inc
outs
in
mov
jmp
test
and
fisubr
and
loop
jne
dec
les
mov
inc
sub
test
push
push
mov
icebp
fst
xor
add
popf
mov
and
rcr
add
cwde
repz
pop
mov
mov
(bad)
xchg
stc
imul
push
push
or
dec
in
retf
addr16
xor
(bad)
push
cmp
push
dec
or
or
retf
jae
mov
xor
dec
xchg
adc
scas
or
out
jp
pop
(bad)
and
jo
loope
test
bound
pop
iret
gs
sub
mov
add
ret
test
hlt
sub
or
ficom
jmp
js
addr16
fild
int3
retf
sbb
mov
jecxz
imul
shr
or
cwde
push
(bad)
(bad)
call
mov
pop
lahf
mov
fnsave
cdq
push
jne
fidivr
movs
arpl
mov
or
test
xchg
pop
fs
(bad)
(bad)
jnp
repz
sbb
idiv
in
retfw
xor
fimul
sub
or
inc
sbb
sub
imul
push
push
repz
fst
std
pop
sub
push
popa
adc
imul
jl
cmp
adc
outs
sub
das
lds
lock
adc
sahf
cmp
jnp
js
shr
push
push
arpl
gs
call
shl
and
cld
push
into
cmp
or
retf
inc
ds
aad
mov
mov
ror
jl
loopne
xlat
cld
add
mov
das
fadd
lea
(bad)
adc
cmp
in
imul
test
xchg
shr
sub
jnp
sar
in
movs
xchg
mov
retf
xchg
ret
xor
shl
aas
lods
or
les
lea
fcom
dec
push
dec
cmc
mov
push
sub
cmp
ret
sbb
jge
call
lods
cmp
xor
add
add
jle
dec
xor
fisttp
bound
pop
mov
mov
iret
or
push
or
push
cwde
mov
push
inc
mov
enter
ret
stc
mov
nop
jae
rep
imul
xchg
jno
pop
cmp
lea
popf
gs
push
inc
sbb
int
arpl
inc
xchg
jmp
mov
jl
lods
movs
mov
pop
jne
or
mov
stos
cmp
add
not
jmp
fcom
jge
mov
(bad)
mov
cli
pop
or
setbe
push
mov
call
popa
pop
xchg
(bad)
pop
jl
ja
stc
int3
mov
int
lods
mov
fwait
and
mov
xchg
je
xchg
popa
or
unpckhps
inc
sahf
and
mov
or
sub
lds
call
add
and
rcr
jno
pop
shl
stc
pop
int3
inc
inc
push
mov
sub
dec
push
test
fdiv
xchg
sar
in
fucomip
mov
sahf
in
and
leave
sub
push
std
inc
push
js
dec
das
ins
mov
in
loope
jl
out
sbb
test
xchg
add
retf
in
loop
jne
jno
sti
je
in
and
pop
shrd
or
jmp
sub
push
(bad)
and
sti
or
cs
add
pop
push
fldcw
popa
movs
inc
mov
fisubr
movs
cmp
xor
sbb
mov
jno
repz
add
lock
and
cmp
dec
add
repnz
mov
jge
lods
mov
xchg
sbb
out
mov
das
mov
jb
shr
push
jmp
inc
dec
es
cmp
das
inc
(bad)
mov
push
js
nop
rcl
add
stos
mov
scas
into
not
sti
pop
retf
adc
ds
xor
xchg
jae
xor
mov
jl
sahf
jne
ror
int3
pop
lock
adc
retf
push
scas
jle
jge
push
xchg
int
cld
out
pop
jmp
neg
mov
lds
call
jb
mov
imul
jne
sbb
lods
clc
push
pop
repnz
dec
les
xchg
dec
pop
xor
inc
es
cmc
enter
adc
es
pop
and
dec
out
clc
sub
je
xor
cmps
lods
and
leave
pop
pop
xchg
aaa
adc
das
jg
cdq
in
fisttp
and
ss
xor
lahf
dec
adc
mov
dec
jnp
int
enter
mov
mov
adc
not
push
ja
cmc
test
cmc
mov
push
mov
out
jg
out
xor
pop
cmp
stos
icebp
and
mov
test
fnstenv
das
iret
out
sbb
mov
xchg
leave
aam
push
test
popf
ss
lahf
not
mov
sbb
mov
sar
mov
jno
cwde
sub
arpl
jp
sbb
dec
push
rcl
out
mov
arpl
dec
cmps
dec
call
cmp
cmp
xchg
jmp
iret
jg
sar
mov
arpl
call
rcl
jbe
enter
or
bound
stos
pop
adc
dec
in
push
jle
cmp
xor
sbb
cmps
pop
popf
repnz
rcl
mov
push
xchg
ins
fild
repz
pop
into
mov
nop
outs
dec
push
adc
call
mov
(bad)
fdivr
xchg
or
xchg
mov
xor
xchg
ins
inc
pushf
or
in
push
stos
sbb
pop
mov
pop
js
pusha
mov
mov
jnp
mov
enter
push
push
push
push
ret
into
pop
repnz
add
fistp
sub
sbb
sahf
lods
jge
cwde
sub
es
adc
out
fimul
call
pop
(bad)
sub
dec
test
leave
imul
push
lods
movs
push
mov
xor
jbe
and
push
mov
je
pop
into
cmp
xchg
cmps
pushf
outs
stos
scas
es
popf
and
mov
mov
movs
scas
(bad)
xchg
push
hlt
adc
cmp
mov
fsubp
push
pop
push
sub
lods
js
mov
pop
clc
mov
xlat
adc
int3
pusha
mov
xor
pop
aam
jo
aad
cdq
loope
stos
cmp
mov
(bad)
rol
pop
adc
pop
xor
daa
cwde
in
scas
in
sub
cmp
dec
pushf
sbb
pop
and
dec
les
test
ins
rdpmc
sbb
mov
dec
ror
pop
ret
jb
cmps
pop
mov
test
aaa
fsubrp
or
jnp
mov
sub
push
inc
mov
out
mov
daa
jmp
popf
sti
fadd
ficomp
int3
mov
xor
shl
fidivr
push
out
outs
jne
push
lock
ss
rol
mov
mov
jns
cdq
test
fnstsw
(bad)
and
adc
into
inc
adc
jp
lock
fistp
pop
loop
cmp
cmp
pop
or
add
aas
test
mov
pop
mov
xor
jmp
xor
fsub
jae
stos
xor
cwde
xchg
sbb
push
dec
stos
in
pop
xchg
xchg
sub
xor
sti
pop
iret
nop
aad
mov
jl
popf
ins
gs
outs
push
lock
jae
or
jge
or
or
scas
aas
push
scas
lods
push
sbb
out
sbb
jno
jo
jle
push
hlt
fld
lods
cmp
cld
mov
outs
sbb
and
pop
mov
ins
and
cmp
out
das
retf
fwait
jmp
retf
pop
mov
cmps
dec
xor
mov
dec
pop
imul
push
xlat
inc
sbb
jbe
pop
xchg
mov
or
push
push
repz
mov
cmps
call
xchg
loop
push
xor
push
shl
jge
jecxz
cmp
mov
inc
ss
iret
fidivr
jns
xchg
outs
adc
push
ror
sub
jmp
fist
das
imul
movs
push
es
xchg
fs
leave
dec
cwde
dec
fiadd
push
mov
gs
gs
pop
mov
or
hlt
mov
ret
retf
pop
xchg
and
cs
stc
fstp
rcl
fidiv
fdiv
int3
jae
fstp
repz
mov
sahf
mov
fsubr
popf
and
stc
cmp
mov
cmp
push
lods
mov
inc
push
mov
mov
pop
scas
popf
adc
inc
into
retf
adc
mov
scas
jmp
cmc
and
scas
retf
sar
test
mov
dec
call
mov
xor
lods
mov
(bad)
test
xchg
ja
cli
hlt
dec
shr
aas
ret
push
mov
adc
xor
into
or
outs
cmp
fs
xor
inc
xlat
rcr
loope
inc
mov
(bad)
addr16
push
or
or
or
rol
loop
cmp
push
stos
sti
adc
cmp
sub
loop
iret
push
push
mov
mov
cdq
mov
xchg
add
cmps
sbb
ins
mov
push
sub
dec
push
cs
mov
inc
push
ins
out
sbb
enter
sub
pop
aam
sahf
add
sbb
or
arpl
push
ficom
adc
cmps
xor
popf
out
call
js
movs
aam
inc
scas
inc
mov
(bad)
add
out
popf
mov
pop
pop
imul
ret
mov
(bad)
rep
mov
mov
int3
aaa
inc
pop
in
sub
shr
rcr
mov
push
scas
shl
adc
in
cmc
aaa
dec
inc
call
add
fwait
scas
jl
jmp
fld
xchg
xchg
sbb
(bad)
std
inc
and
mov
dec
jo
jg
out
xor
dec
loopne
test
mov
mov
push
(bad)
adc
sub
(bad)
and
in
dec
mov
mov
jle
push
inc
push
mov
std
and
mov
mov
(bad)
pop
mov
ins
out
test
(bad)
hlt
dec
test
fidivr
mov
fidiv
jg
adc
daa
push
and
adc
xor
mov
jg
adc
fucomi
bound
mov
nop
mov
adc
icebp
jmp
push
daa
cdq
pop
mov
(bad)
adc
mov
push
ins
sbb
icebp
adc
and
pop
call
cmp
enter
or
mov
mov
xlat
mov
int3
sbb
xchg
pop
(bad)
leave
into
jmp
and
jmp
retf
pushf
sbb
or
jne
mov
popa
in
test
aaa
cmps
mov
aad
jnp
pop
les
adc
pop
fwait
xor
loope
jle
out
ret
shl
or
push
in
sub
adc
test
sub
ins
(bad)
jae
pop
arpl
fidiv
lds
fisub
xor
cmps
in
sub
mov
dec
ret
mov
sbb
(bad)
fwait
ins
(bad)
push
jl
mul
or
jbe
push
jne
not
mov
cmp
sub
mov
leave
pusha
fsubp
aaa
pushf
addr16
push
adc
jmp
jno
xor
sub
popf
jo
mov
dec
jbe
mov
push
mov
iret
out
add
aam
xchg
das
jo
add
xlat
outs
fstp
ins
xlat
ror
fwait
scas
xor
xor
xlat
das
adc
xchg
xor
mov
pop
or
mov
sti
loop
jo
movs
stc
push
loopne
inc
retf
imul
out
jb
pop
inc
sub
mov
shl
lods
shl
aam
mov
repz
mov
sti
icebp
adc
(bad)
fdiv
(bad)
movs
or
push
js
popa
in
out
ins
pushf
inc
mov
ds
mov
js
arpl
add
stos
cmp
ret
outs
cmp
in
ret
rol
push
clc
mov
jle
push
(bad)
pop
xor
xor
(bad)
mov
ja
mov
sbb
pop
xor
push
inc
aad
int
or
outs
cmp
scas
mov
pop
mov
xchg
mov
pushf
inc
rol
movs
fdivr
or
mov
in
cmp
jne
sbb
retf
mov
(bad)
sti
and
ret
and
movs
test
repz
rcl
jmp
pop
dec
add
nop
push
jl
inc
jmp
hlt
adc
cmps
in
aaa
call
ja
repnz
loopne
js
push
test
test
cwde
push
and
loope
inc
jns
popa
enter
idiv
frstor
add
mov
jge
jecxz
ins
adc
(bad)
cmc
popa
sbb
push
scas
imul
aad
fsub
mov
dec
add
pop
ss
jo
mov
jnp
cli
(bad)
mov
call
test
fdivr
inc
aaa
sub
jecxz
dec
inc
repz
outs
mov
push
mov
mov
(bad)
repz
je
pop
cmp
fnstsw
dec
inc
aaa
outs
fld
(bad)
dec
(bad)
adc
outs
hlt
jg
ror
icebp
mov
xrelease
mov
mov
idiv
aaa
push
and
imul
mov
jnp
lods
or
or
dec
js
and
outs
movs
cwde
push
push
repz
bound
fstp
sar
fisubr
icebp
add
test
pop
pop
jmp
sub
movs
push
movs
push
xchg
out
outs
adc
adc
movs
ss
pop
ins
push
inc
leave
(bad)
sar
jl
pop
mov
sub
sub
mov
inc
sar
push
fld
repz
movs
scas
pop
mov
in
or
sti
cmps
push
retf
mov
in
jmp
mov
imul
rcl
xchg
pop
dec
xchg
test
cmp
lods
mov
ins
ins
mov
lods
(bad)
fldcw
pop
or
push
jno
mov
arpl
(bad)
outs
sub
leave
out
push
push
test
lds
or
mov
mov
out
pop
mov
daa
dec
jmp
sub
mov
mov
xor
shr
cmc
dec
mov
sbb
dec
adc
mov
xchg
repnz
movs
cmps
call
sbb
add
inc
mov
sbb
test
mov
xchg
data16
outs
xchg
sbb
pop
call
push
sbb
ins
adc
cmps
les
std
adc
imul
clc
dec
mov
(bad)
repz
cs
test
shl
mov
aas
push
addr16
mov
ds
mov
js
pop
mov
dec
repz
repnz
xchg
sbb
scas
sub
scas
and
ror
push
xor
xor
push
mov
sub
cs
inc
scas
mov
cmp
scas
jnp
scas
cmp
dec
push
cmp
shr
cmp
mov
push
lahf
jmp
jge
xor
xchg
mov
cmp
jb
jl
stos
or
cmp
ret
outs
push
xor
aas
fwait
and
jbe
cld
sar
xchg
retf
icebp
leave
jb
adc
or
dec
retf
push
rol
push
and
es
out
(bad)
xlat
ret
xor
(bad)
movs
aam
and
mov
fdiv
icebp
sbb
lods
dec
sub
mov
cmp
imul
aad
ss
mov
xchg
std
cli
inc
cld
dec
(bad)
xor
rcl
add
mov
retf
cli
lock
into
stc
std
cmp
and
sub
jae
ror
out
and
or
(bad)
(bad)
aad
sar
mov
push
jle
in
inc
dec
xchg
cmp
rcl
sub
lahf
pushf
pop
iretw
ror
lea
sbb
call
test
sbb
stos
jmp
add
hlt
dec
push
pusha
lds
jmp
fdivr
jge
push
call
mov
cdq
loop
push
ror
leave
xor
push
cmp
test
sbb
push
xor
outs
sbb
inc
into
loopne
xchg
sahf
adc
leave
xor
cmps
(bad)
jge
adc
retf
pop
push
aad
mov
addr16
nop
push
(bad)
call
mov
ins
repz
fs
imul
pop
xchg
sbb
or
push
sub
mov
lds
push
and
ficom
xchg
pop
xor
mov
fisub
sahf
cwde
cs
test
xor
jmp
stos
push
sbb
cmp
fst
dec
test
mov
and
js
mov
daa
lock
dec
add
jnp
mov
jecxz
pop
xchg
sub
je
xchg
(bad)
fs
in
jl
xchg
loop
in
dec
pop
retf
xor
mov
dec
repz
sbb
or
mov
pop
cdq
pushf
mov
retf
jns
jmp
mov
retf
add
cs
xor
mov
mov
ror
retf
pop
mov
or
mov
data16
stos
sbb
test
dec
push
pop
fwait
shr
xor
mov
xor
jno
mov
movs
xchg
lea
mov
sti
cmp
push
pusha
clc
in
jae
int
xchg
dec
sbb
cmp
hlt
(bad)
jle
fstp
loop
cmp
dec
pusha
aam
pop
out
cmp
loop
mov
and
fnstsw
jbe
mov
out
ret
arpl
cmp
mov
ins
stc
rol
pop
inc
data16
xchg
mov
shl
pushw
mov
mov
(bad)
cwde
cdq
call
repz
jmp
adc
fnstcw
icebp
dec
js
xor
jl
sbb
pop
loop
arpl
scas
daa
test
push
jl
push
mov
jg
repz
aam
ins
fnstsw
stos
pop
out
jle
imul
xchg
(bad)
rcr
in
cmps
(bad)
cld
and
jbe
pop
and
pop
movs
(bad)
and
bound
and
jne
cmps
and
sub
fild
xchg
fcomp
xor
cmp
test
push
cld
pop
(bad)
rcr
and
xor
loopne
sbb
xlat
(bad)
int3
push
mul
adc
ret
out
jg
mov
inc
mov
xchg
ja
fiadd
inc
push
jae
pop
shr
out
and
stos
xchg
xor
cmc
or
arpl
sbb
jb
data16
xor
mov
sar
sar
or
dec
xor
or
pushf
cmps
sbb
and
mov
data16
scas
loope
iret
inc
aaa
(bad)
leave
xchg
out
cwde
sbb
not
sbb
cmp
lea
add
push
sub
outs
mov
lea
mov
enter
cmps
loopne
ja
pop
leave
cwde
xlat
and
in
pop
xor
mov
pop
mov
mov
iret
or
lds
fstp
or
mov
bound
push
mov
xchg
fiadd
std
mov
fwait
shl
pop
adc
scas
bound
addr16
sti
arpl
loope
cmc
data16
into
ins
mov
mov
mov
into
jmp
test
cld
std
mov
mov
imul
adc
fst
fdiv
ins
in
scas
cmp
test
in
push
loope
rol
inc
jl
fcmove
mov
loopne
fcomp
sbb
jo
cs
fiadd
hlt
push
popf
and
lea
pop
push
loope
cld
ins
push
out
adc
cmp
inc
xchg
retf
call
psrad
cmp
ins
es
jns
hlt
out
out
sbb
push
dec
dec
loopne
lock
inc
mov
mov
xchg
pop
jl
xchg
add
jo
test
xchg
sub
(bad)
jmp
popa
out
inc
push
add
call
mov
out
aad
xor
xchg
mov
test
test
xor
push
in
mov
xchg
inc
dec
and
addr16
into
dec
(bad)
push
xor
test
mov
jg
dec
hlt
(bad)
sti
xor
lods
cmp
pushf
lea
in
hlt
aad
mov
sbb
aam
mov
cmps
xor
pop
adc
pop
push
jo
out
mov
es
cmp
call
cmc
aaa
retf
ins
and
jl
test
fidivr
js
jle
xchg
stc
jge
(bad)
ret
jge
fadd
bound
mov
cs
push
outs
mov
or
adc
push
adc
fidivr
or
test
fbld
mov
sub
inc
fbld
fmul
(bad)
ins
movs
push
dec
pop
(bad)
out
call
pop
imul
jmp
out
das
push
cmps
pushf
icebp
jbe
xchg
cs
mov
jae
xchg
into
inc
xchg
mov
(bad)
rcr
mov
mov
aam
adc
cmps
mov
sub
dec
xchg
iret
adc
sub
js
cmp
shl
std
pop
jno
outs
clc
das
lods
cwde
add
aaa
mov
in
cmps
inc
data16
push
scas
inc
dec
in
inc
into
iret
ds
push
pusha
lds
cmp
out
xchg
cs
add
mov
ret
cwde
repnz
xor
fs
js
adc
lahf
lds
lods
pop
push
jno
xchg
cmp
mov
adc
out
sbb
xor
movs
sahf
sbb
xchg
lods
jbe
addr16
mov
jp
ret
and
push
out
fsubr
cld
pop
add
jle
call
int
out
mov
mov
pxor
push
repz
call
test
test
sahf
lahf
xor
mov
pop
iret
sub
pop
fisubr
iret
cmc
mov
outs
mov
or
ins
push
repnz
cli
in
ss
in
mov
pop
sti
xchg
mov
or
jle
or
push
repz
pusha
sub
mov
add
ja
daa
sub
retf
jno
push
bound
dec
pushf
pop
fcomip
in
push
sub
xor
sbb
jmp
mov
ret
mov
xor
es
and
jns
cmp
nop
mov
adc
fsubr
and
jb
jae
movs
popa
xor
sbb
test
jae
jle
dec
dec
sar
push
jb
dec
lahf
sbb
lock
push
sbb
clc
jbe
xor
and
fisub
pushf
or
cmp
mov
inc
xchg
adc
mov
lock
and
jnp
mov
cmp
mov
xlat
test
mov
cdq
out
push
push
lahf
or
fcom
mov
cmp
vcvtsi2ss
je
out
pop
adc
and
fwait
and
repnz
mov
test
inc
push
jge
or
repnz
mov
daa
enter
stos
sbb
cmp
push
fld
xchg
out
lea
repz
aaa
mov
fiadd
pop
fild
into
sbb
fild
and
dec
jmp
xchg
inc
out
aam
pop
add
sub
aad
pushf
inc
cmps
ror
cmp
retf
out
jo
jmp
xchg
repz
push
mov
addr16
addr16
mov
out
pop
cmp
mov
xchg
mov
pop
in
add
sbb
clc
cwde
lods
sbb
(bad)
daa
out
xchg
stos
jbe
fdivr
cmp
add
idiv
cmp
imul
js
faddp
jmp
cli
adc
jno
bound
and
xor
push
jne
lahf
pop
(bad)
xor
popa
ins
jle
pop
outs
arpl
es
mov
and
adc
xchg
mov
sub
jl
mov
xchg
mov
fcmovnb
sbb
mov
(bad)
popf
xor
jbe
xor
(bad)
shr
jmp
cld
lds
add
sbb
call
mov
cdq
push
dec
(bad)
xlat
rcr
shl
adc
sbb
add
mov
int
jp
loope
xlat
push
or
mov
test
les
mov
or
dec
add
loopne
inc
shl
pop
adc
mov
les
scas
out
outs
loop
jle
jecxz
stos
xchg
lock
jnp
xchg
xor
test
iret
dec
shl
mov
cmp
sbb
adc
sub
lods
inc
shl
inc
pop
sti
jle
outs
neg
ins
sbb
into
pop
mov
addr16
js
stc
inc
shr
dec
xchg
out
frstor
jp
mov
mov
rcr
enter
shr
loope
cmp
stc
jne
xor
scas
push
pop
(bad)
ss
jg
sub
je
loopne
pop
idiv
jnp
lahf
sar
movs
stos
sti
repnz
mov
das
fstp
adc
das
cmp
jmp
leave
add
lock
jnp
pop
sub
pusha
fmul
jge
cmps
sub
mov
call
dec
idiv
jns
mov
clc
fimul
enter
into
imul
xchg
out
or
vcomisd
sahf
loop
(bad)
push
fdivr
jmp
hlt
(bad)
adc
aas
jecxz
adc
(bad)
ficomp
xchg
loop
iret
inc
xchg
ds
iret
mov
std
out
outs
inc
arpl
cld
movs
retf
aas
mov
jle
stc
fwait
inc
arpl
cmp
jmp
pop
(bad)
fidiv
scas
pop
in
inc
js
pop
push
xchg
loop
add
pop
mov
daa
(bad)
std
mov
xchg
ret
fdiv
inc
jp
mov
pop
inc
jno
or
cdq
push
jg
neg
adc
jno
aam
and
jno
(bad)
cmp
add
imul
(bad)
and
aas
out
mov
push
sahf
test
(bad)
mov
jl
movs
clc
lea
fst
fidiv
xor
push
hlt
test
aad
in
adc
and
in
xlat
mov
out
pop
icebp
mov
fisttp
xchg
mov
outs
jge
sahf
pop
daa
addr16
jnp
in
outs
pop
xor
stos
clc
add
jb
(bad)
adc
mov
xchg
pop
jno
shr
adc
fcomp
in
mov
inc
mov
ja
jmp
mov
in
enter
out
jg
xchg
ret
add
outs
stos
and
jge
ss
(bad)
pushw
cdq
push
icebp
push
int
push
sahf
(bad)
(bad)
mov
(bad)
sub
xchg
imul
push
hlt
cmp
(bad)
js
jmp
repz
pop
xor
jecxz
stos
std
mov
rcr
je
cwde
daa
in
call
out
mov
mov
imul
xlat
int3
jbe
popf
mov
jmp
out
ficomp
movs
xchg
aad
and
inc
hlt
pop
out
daa
aad
cmp
ins
mov
pop
aad
adc
push
jecxz
mov
iret
xchg
mov
mov
pop
xchg
push
daa
sub
mov
xchg
mov
(bad)
call
pop
push
push
stos
fmul
mov
dec
retf
or
jp
mov
jb
jno
(bad)
(bad)
xchg
jnp
or
xchg
mov
jle
mov
in
xchg
into
inc
pop
es
pop
(bad)
mov
lods
jae
popf
jp
sbb
cmp
stc
pop
cmp
fldenv
mov
mov
hlt
mov
aas
pop
mov
out
mov
lds
jne
inc
push
lock
cld
pop
mov
(bad)
shr
clc
mov
std
ss
dec
int
call
mov
(bad)
int3
dec
cmp
cs
xchg
xor
xchg
clc
les
pop
ds
add
pop
sub
or
outs
fs
and
mov
dec
mov
mov
int
xor
xchg
into
mov
shr
cmp
jl
inc
vpaddsb
push
jmp
inc
gs
or
jg
mov
mov
inc
cmp
cmc
pushf
int
pushf
shl
(bad)
mov
xchg
cdq
xor
aam
sub
das
rcr
xchg
bound
push
int3
loop
mov
jnp
call
icebp
or
ja
cmc
mov
sbb
pop
test
jmp
lds
jne
not
(bad)
popa
mov
mov
dec
jp
cmp
das
sbb
retf
push
dec
adc
ret
xchg
pop
mov
xchg
dec
cmp
retf
xchg
xchg
and
pop
cli
rol
fldcw
mov
das
jmp
sbb
ffreep
cmp
xor
idiv
fnstsw
jbe
in
sub
ret
movs
cmp
and
fldenv
retf
add
adc
push
adc
fwait
cmps
out
aaa
push
sbb
jge
enter
and
cmp
or
cbw
arpl
inc
sti
jae
mov
mov
jae
mov
retf
jg
shl
addr16
cli
push
(bad)
pop
mov
mov
or
fisub
stc
sub
pop
ss
ss
adc
cs
rcl
retf
ds
sub
mov
rcr
push
idiv
inc
cmp
cld
in
cs
push
mov
jno
sbb
xchg
test
jns
jo
sbb
jmp
scas
jb
dec
repnz
push
test
jo
cmp
cmp
push
test
dec
sbb
inc
fistp
sbb
xchg
cdq
cmps
lea
in
outs
pop
lea
jnp
pop
lea
cmp
retf
dec
iret
sbb
sbb
inc
arpl
mov
addr16
imul
mov
sti
add
fcmovbe
jae
mov
push
mov
push
xor
ins
jmp
scas
cmovae
push
adc
rcl
mov
nop
out
xor
sub
push
retf
(bad)
pop
pop
dec
push
inc
and
adc
(bad)
in
arpl
inc
cmp
jmp
fmul
fist
imul
aad
test
cmps
cmp
int
loopne
jb
dec
clc
jle
aaa
hlt
adc
call
aam
sbb
jecxz
jb
jnp
sbb
cmp
and
lods
push
jae
je
mov
rcr
xchg
in
pushf
push
push
icebp
mov
lea
mov
mov
push
in
fmul
hlt
outs
jno
or
iret
in
jb
ins
repz
dec
adc
mov
icebp
neg
pusha
pop
stc
inc
jge
arpl
adc
pop
mov
mov
jecxz
adc
and
(bad)
mov
js
sbb
pop
(bad)
push
dec
sbb
addr16
gs
out
cdq
bound
sahf
push
xchg
popa
dec
cwde
pop
adc
rol
mov
icebp
cmp
cmp
mov
fild
adc
add
pop
ret
pop
aad
xor
cli
cs
arpl
in
inc
xor
or
cdq
jmp
push
mov
jne
jne
pop
and
fldcw
outs
clc
movs
cmp
sub
leave
or
(bad)
lahf
xchg
scas
mov
ret
imul
or
add
repnz
loope
popa
fbld
fs
inc
or
int3
and
arpl
aam
enter
ss
lods
aam
jg
or
jmp
lods
daa
scas
inc
mov
gs
test
div
add
fnsave
jo
aad
mov
scas
mov
dec
dec
cmp
lea
pop
(bad)
stc
pop
inc
cmp
push
loop
imul
cmp
in
iret
adc
(bad)
push
sar
mov
ror
sub
test
fs
je
pop
jae
xchg
mov
mov
mov
std
add
iret
sub
repz
call
xchg
fs
movs
or
scas
lea
imul
(bad)
ss
lods
call
fcmovne
xor
sub
outs
sbb
dec
sbb
mov
in
sbb
mov
mov
stc
xlat
cmp
sub
sub
cmps
pop
push
jmp
retf
lea
mov
imul
in
adc
cli
jns
add
outs
(bad)
cmp
cmp
test
arpl
scas
ja
pushf
(bad)
adc
jle
mov
push
out
pop
(bad)
into
mov
pop
repz
sti
out
pop
mov
sbb
push
cmp
jae
leave
mov
push
outs
pop
js
repz
jg
add
ds
mov
jle
jns
and
test
stc
and
popf
cmp
mov
outs
(bad)
ins
sub
fidiv
std
test
mov
fwait
mov
dec
out
xchg
and
int3
(bad)
xchg
out
(bad)
leave
pop
mov
mov
scas
int3
xchg
loopne
icebp
xchg
jno
neg
inc
leave
mov
sub
or
fadd
hlt
jo
lock
and
mov
cdq
js
bound
inc
inc
sahf
xlat
inc
repnz
fcomp
fstp
pop
mov
cmps
loopne
pop
loopne
pop
mov
outs
cmp
loop
sbb
popf
(bad)
icebp
mov
push
imul
call
std
(bad)
pcmpgtd
xchg
jp
adc
sub
pop
aas
or
ds
inc
sbb
lahf
fs
aad
push
jmp
aas
icebp
jle
dec
repnz
bound
ret
sub
jbe
mov
or
inc
pop
and
jmp
or
mov
cmc
dec
fdivr
loope
xor
dec
cmp
and
dec
jo
mov
push
inc
hlt
stos
pop
pop
mov
lahf
mov
ins
(bad)
jmp
les
mov
dec
sbb
repnz
cmp
jge
addr16
arpl
push
push
es
push
call
and
inc
scas
lahf
xchg
push
sahf
aaa
dec
jg
mov
fiadd
(bad)
imul
jo
inc
es
sub
repnz
hlt
(bad)
jmp
xor
cdq
adc
jle
sub
sub
popa
fstp
sub
jp
loop
call
or
loop
jecxz
scas
adc
mov
jbe
adc
inc
std
xchg
mov
add
popf
inc
mov
aas
jbe
or
fist
cmp
daa
repz
imul
imul
stc
pusha
hlt
enter
pop
ja
xor
dec
stos
pop
fidiv
sbb
bound
mov
vphsubdq
adc
pop
lahf
popa
jg
jge
xchg
push
ret
fld
pop
movs
int3
cmc
cmc
ins
jns
lods
(bad)
adc
jecxz
add
iret
mov
jl
dec
idiv
xlat
jbe
push
rcl
adc
in
xlat
mov
clc
inc
cmp
dec
mov
mov
fstp
and
(bad)
nop
pop
sbb
mov
mov
pusha
mov
jnp
pop
sbb
ins
lahf
into
call
shl
repz
cmps
jge
lea
(bad)
fisubr
faddp
call
and
repnz
cli
xchg
scas
aad
dec
sub
inc
mov
data16
sbb
inc
ds
jmp
aaa
sbb
cmp
mov
fild
loopne
inc
(bad)
pop
std
out
imul
ins
stos
enter
jecxz
xchg
outs
cmps
stc
ret
pop
aas
loopne
push
std
xor
push
cmps
sbb
jl
sbb
out
das
sbb
out
(bad)
cld
cli
sub
push
cmp
mov
xchg
icebp
inc
mov
pop
push
adc
in
mov
inc
(bad)
pop
inc
cld
nop
retf
cmps
adc
in
imul
les
fnstcw
adc
in
cmp
xchg
sahf
inc
cld
nop
div
dec
mov
repnz
gs
sub
shr
aam
add
cmp
mov
sbb
out
jecxz
fs
div
mov
add
mov
or
jmp
lods
xchg
and
clc
mov
fsubp
leave
push
xchg
jl
sbb
or
shr
mov
mov
adc
stos
and
xchg
dec
aad
(bad)
jl
sbb
adc
mov
pop
shr
scas
jle
out
adc
xchg
pop
sahf
fucomp
mov
xchg
jmp
stos
adc
imul
pop
sbb
mov
movs
test
retf
outs
xor
jg
jae
add
es
mov
xchg
pop
div
mov
into
dec
push
mov
mov
sbb
pop
cmp
gs
push
scas
xor
jecxz
xchg
shl
mov
ja
jae
xor
xchg
push
jecxz
and
enter
test
xor
cli
mov
inc
xchg
xor
dec
(bad)
adc
out
pop
(bad)
xor
aaa
mov
add
scas
fwait
sub
fld
mov
jb
movs
push
fild
xchg
jno
fsubr
dec
push
test
mov
mov
fidiv
dec
inc
and
adc
jmp
push
sti
jnp
fldcw
cmp
mov
(bad)
dec
inc
xor
xor
ds
push
inc
pushf
mov
or
cmp
jne
push
push
aaa
jb
aad
outs
stc
mov
outs
into
cs
xchg
daa
cmp
mov
shr
push
jg
cmc
sub
sub
fwait
imul
ror
cmp
mov
push
ret
dec
into
neg
scas
out
push
enter
xchg
mov
aad
jmp
mov
mov
arpl
sahf
dec
mov
or
or
out
cmp
outs
sub
add
cmp
jnp
loop
push
in
cmp
ins
cmps
pop
sbb
call
xchg
xor
movs
iret
enter
xchg
in
mov
mov
jl
sub
mov
pop
jmp
imul
sbb
shl
rcr
pop
mov
(bad)
push
out
inc
(bad)
outs
push
icebp
pop
sar
jb
xor
mov
adc
ficomp
bound
mov
push
repnz
sub
test
jb
mov
mov
sub
mov
jecxz
stos
stc
sbb
lea
mov
jae
mov
sbb
xchg
ins
cmp
dec
enter
stos
lods
popa
pop
and
or
inc
mov
scas
fidiv
xor
repz
scas
mov
outs
cmp
jp
bound
icebp
int
out
outs
inc
push
mov
in
in
daa
push
mov
movs
out
jnp
and
imul
fwait
mov
icebp
enter
out
daa
addr16
mov
pusha
inc
jno
cmc
mov
mov
in
into
jae
inc
clc
push
push
jbe
fs
mov
inc
les
push
into
inc
sub
xchg
adc
and
mov
sub
fs
pop
fiadd
inc
test
dec
ins
or
inc
adc
push
xchg
fld
cmps
loop
push
out
xchg
pop
mov
inc
test
sbb
sbb
daa
std
(bad)
mov
jg
jb
sub
retf
(bad)
pop
jmp
push
fsub
xchg
xlat
add
retf
jge
push
sub
call
or
add
mov
in
aad
rcr
pop
xlat
mov
push
stc
int
mov
fistp
out
test
mov
fimul
in
cdq
pop
pop
jmp
repz
cli
dec
and
pop
outs
pop
inc
dec
xlat
rcl
mov
jne
adc
push
pop
inc
dec
xlat
jge
or
fidiv
add
pop
div
and
and
adc
mov
(bad)
adc
imul
mov
mov
fisttp
xor
loope
test
pusha
push
mov
test
mov
retf
mov
push
and
test
lods
jns
xchg
lds
pop
inc
int3
(bad)
aad
pop
add
mov
sub
out
lods
pop
leave
sti
pop
pop
push
fisubr
push
mov
(bad)
mov
dec
sbb
jecxz
pop
xor
dec
pop
mov
push
out
(bad)
jge
or
push
sub
add
fs
push
sti
xchg
cld
fadd
ror
idiv
into
out
sbb
and
mov
mov
and
jns
xor
lock
movs
(bad)
or
mul
loope
aad
jge
arpl
xor
pop
or
push
xor
pop
sahf
cmps
xchg
fbstp
mov
lahf
xchg
xchg
xchg
rol
sti
sbb
leave
and
popf
(bad)
xlat
inc
sti
stc
jno
cmp
fcmove
add
jnp
into
mov
pop
cmps
mov
repz
in
sti
sub
arpl
jle
cmp
cld
int3
repnz
jno
push
sbb
dec
sbb
inc
(bad)
dec
push
jmp
rcr
in
ret
cmp
cwde
jne
ret
xor
(bad)
mov
(bad)
fisttp
mov
cmp
mov
mov
jbe
sub
dec
in
das
cmp
xchg
stos
xlat
in
pop
iret
sub
xor
sub
jmp
sbb
jl
jne
loopne
ror
dec
stos
pop
xor
push
les
call
add
cmp
push
xchg
in
jns
iret
pushf
loope
in
xchg
int3
lods
and
sbb
call
dec
push
xchg
repnz
or
jle
dec
fsub
scas
retf
jg
jno
pop
arpl
test
cmp
xor
jle
test
(bad)
lock
inc
mov
daa
adc
rcr
data16
ret
sbb
ss
mov
jl
and
lea
xabort
mov
imul
dec
(bad)
adc
push
sar
sub
mov
push
mov
movs
mov
sub
pop
push
or
(bad)
repnz
pop
or
xor
iret
pop
not
out
lods
push
int
popa
and
cmp
sub
gs
out
sub
imul
jno
adc
pushf
hlt
loop
call
xchg
mov
or
pop
and
sub
ficom
pop
xchg
in
add
in
push
stos
add
dec
xchg
push
call
dec
mov
nop
adc
out
xchg
cmp
(bad)
pop
xlat
loope
sbb
(bad)
fst
(bad)
sub
sbb
mov
inc
xor
movs
inc
xchg
test
into
xor
in
ins
in
push
jmp
xchg
xchg
xor
pop
inc
cmp
call
mov
xchg
pop
mov
mov
xchg
and
pop
neg
pop
mov
in
xor
xchg
int
mov
mov
jmp
mov
movs
into
jo
push
mov
ret
lds
jne
cmc
sub
int3
clc
adc
movs
repz
(bad)
test
leave
out
add
call
xchg
push
icebp
outs
addr16
(bad)
mov
and
pop
mov
and
outs
sti
push
jne
jecxz
jg
push
mov
(bad)
jp
mov
mov
pop
dec
xor
test
icebp
mov
lock
loope
data16
sbb
outs
pushf
cmp
jge
stos
mov
stos
cmp
push
mov
ins
fidiv
int
jae
and
cmp
mov
daa
mov
repnz
in
icebp
fcom
pop
into
ficomp
cmp
les
jns
aas
pop
add
mov
mov
sar
sbb
test
test
cs
or
test
(bad)
mov
mov
push
cmp
sti
add
pop
fidiv
mov
sbb
xor
and
(bad)
adc
fs
inc
enter
add
push
lods
push
add
std
das
stc
test
xor
sbb
jp
push
retf
xor
pop
xor
int
in
cmps
ins
out
mov
rol
pushf
mov
dec
jno
es
scas
push
jns
pop
pop
bound
mov
out
jmp
mov
retf
push
push
jmp
and
mov
xor
gs
scas
scas
push
fsubr
jnp
test
push
(bad)
adc
add
lock
push
jne
(bad)
fbld
test
les
push
(bad)
dec
adc
scas
xor
scas
jbe
sub
sti
jo
repnz
ins
(bad)
jae
test
pop
iret
pop
sub
cdq
adc
(bad)
xchg
and
xlat
xchg
or
into
fidivr
sub
das
mov
rcl
cmp
pushf
into
in
loop
shl
stc
xchg
mov
jge
add
add
push
das
stos
repz
push
cli
mov
dec
das
sahf
xchg
or
mov
inc
(bad)
ss
mov
ins
lahf
jnp
pop
pop
scas
pop
adc
lahf
retf
push
jb
out
push
enter
dec
inc
outs
fisttp
xor
(bad)
loop
push
(bad)
fist
mov
rcl
cdq
push
sub
imul
sbb
cmp
sub
cmps
ror
je
inc
(bad)
push
(bad)
jo
inc
leave
movs
push
xor
or
inc
mov
in
xchg
or
es
shl
mov
scas
sbb
test
dec
daa
add
or
cs
clc
mov
mov
je
add
mov
scas
pop
(bad)
pop
scas
sbb
scas
jge
mov
xchg
fiadd
in
lock
mov
mov
das
mov
ins
xlat
or
and
sbb
sbb
in
out
pop
mov
dec
(bad)
xor
into
inc
sbb
sar
dec
bound
inc
mov
fld
call
popf
push
xor
jmp
inc
mov
fdiv
pop
bnd
in
pop
jp
xor
lahf
cld
cmp
cmp
lods
and
(bad)
aas
inc
int3
into
pop
(bad)
sahf
cwde
popf
or
out
aaa
mov
(bad)
into
dec
int
mov
pop
xor
xor
xchg
mul
ds
xchg
inc
loopne
les
cmp
and
cdq
fs
pop
push
ja
cmp
sub
jmp
dec
lds
mov
cmpxchg
xor
and
(bad)
sti
cli
cdq
or
fdivp
jns
mov
retf
cmp
sub
leave
xor
adc
sub
sbb
xchg
test
in
lea
pop
stos
jns
mov
inc
xchg
jno
stos
xor
or
mov
fcmovnbe
scas
loop
lahf
mov
xchg
xchg
mov
lods
retf
push
cmps
out
sub
push
mov
mov
retf
and
movs
pop
mov
pop
test
mov
es
fucomi
std
out
sar
mov
sub
push
lea
(bad)
jbe
xor
pop
in
test
inc
jp
xchg
mov
xor
fdivr
and
jp
sub
aas
mov
lahf
push
clc
enter
iret
cdq
inc
pop
call
xor
pop
adc
pop
sbb
loope
inc
add
in
xchg
or
enter
sahf
xor
push
(bad)
pushf
adc
movs
bound
mov
inc
jae
inc
int
loop
call
jmp
sbb
or
push
cmp
jnp
add
je
push
sub
fs
imul
(bad)
pop
dec
outs
add
pop
push
sbb
icebp
fs
daa
inc
nop
xchg
xchg
sbb
add
ins
int
cmp
ret
inc
dec
mov
xchg
dec
inc
scas
push
cmp
xchg
shl
test
ds
cld
mov
ins
in
hlt
pushf
mov
enter
retf
fisub
dec
cs
rol
in
call
outs
test
outs
sbb
sub
xchg
cmovb
pushw
cs
jae
int3
imul
jecxz
inc
mov
or
ss
adc
(bad)
fldenv
dec
and
movs
outs
dec
sbb
cmp
jle
jle
mov
sbb
jnp
and
push
push
les
cdq
dec
inc
out
sbb
jbe
adc
pop
mov
xchg
inc
sar
retf
or
(bad)
mov
dec
xchg
adc
or
push
or
and
cld
push
retf
and
mov
and
sub
mov
out
fs
adc
and
dec
xor
out
or
push
pop
sbb
inc
cmp
lock
pop
or
xor
xchg
test
pusha
imul
test
push
xor
inc
aaa
loop
xchg
call
xchg
adc
shr
sbb
lea
pop
jmp
sub
cmp
loope
lock
int3
cmp
jae
push
mov
(bad)
ds
add
scas
cli
test
repz
sbb
jno
scas
(bad)
push
not
int3
jp
jecxz
pushf
fild
idiv
mov
daa
and
cmp
aas
repnz
shl
out
in
add
(bad)
pop
dec
mov
cmp
ror
test
sti
dec
mov
xor
fisubr
cmps
in
cli
loopne
or
js
int
in
aas
xchg
adc
sub
cmp
mov
(bad)
aad
pop
push
test
cmp
cmp
cwde
(bad)
fnstsw
cdq
pop
jns
and
mov
js
pop
mov
cmps
pop
xchg
inc
sti
and
pop
ja
test
mov
retf
sbb
lds
ss
dec
arpl
inc
jecxz
xor
mov
adc
movs
xchg
adc
cmp
fnstcw
imul
sbb
xor
jmp
hlt
mov
push
lods
pusha
pop
aad
bound
cmp
out
popf
fwait
pop
fild
pop
xchg
pop
mov
(bad)
inc
jmp
adc
ror
sub
and
in
inc
ja
enter
mov
dec
retf
ret
adc
(bad)
out
adc
jge
ins
int
lods
cmp
inc
rcr
mov
lods
(bad)
div
ins
jmp
mov
and
imul
in
call
scas
rcr
loope
nop
in
dec
ss
inc
and
push
or
test
mov
pop
ins
jl
push
imul
aam
jns
jno
cmp
or
sub
sub
(bad)
jge
aaa
mov
pop
repz
pop
outs
dec
adc
pop
mov
inc
fsub
stos
loopne
sub
adc
jmp
inc
sar
fist
ss
fisttp
test
mov
(bad)
push
or
mov
adc
bound
jecxz
rol
sbb
stc
fld
lock
jb
cmp
rcr
sbb
jge
pop
mov
inc
aam
icebp
push
or
xor
loop
dec
pop
xchg
jae
pop
(bad)
mov
imul
push
cmc
test
and
repz
jnp
ret
push
mov
popa
cmp
mov
mov
call
in
mov
cs
inc
pop
(bad)
cld
xchg
stos
cs
xchg
scas
push
fwait
inc
sar
enter
mov
mov
adc
icebp
dec
scas
(bad)
xchg
mov
stos
jecxz
pop
inc
and
sbb
jg
loopne
add
sbb
(bad)
mov
repz
data16
mov
adc
jg
and
in
mov
mov
sub
call
stc
mov
mov
jge
(bad)
cmc
cmp
(bad)
jle
(bad)
neg
mov
xor
in
(bad)
jg
(bad)
imul
mov
repz
pop
ret
mov
out
sub
add
test
push
sbb
jns
call
outs
out
add
repnz
retf
mov
fnsave
sub
sti
pop
(bad)
jns
repz
call
dec
jae
jne
cdq
xor
mov
adc
repz
sbb
mov
xor
push
outs
sbb
xchg
adc
faddp
jns
fnsave
mov
pop
ins
mov
retf
mov
mov
mov
sti
dec
(bad)
int3
jbe
imul
inc
pop
xchg
mov
jmp
add
pop
fsubp
dec
mov
dec
sub
jnp
mov
out
jae
(bad)
out
ss
(bad)
loopne
push
xchg
int3
aam
add
pusha
push
mov
dec
adc
or
jecxz
xor
mov
nop
pop
or
arpl
mov
push
aad
pop
hlt
jnp
xchg
lds
repnz
push
iret
lock
in
push
daa
out
loop
xchg
push
xchg
xor
cli
clc
or
popf
imul
test
out
fld
cmp
std
mov
sbb
push
dec
lods
mov
pop
cmc
scas
popf
(bad)
daa
xor
xor
mov
daa
cmp
xor
xchg
xchg
add
push
cs
cdq
daa
fstp
sbb
inc
xchg
imul
dec
test
outs
(bad)
push
cmps
jg
and
xchg
pop
push
aam
xor
sub
scas
lods
adc
cmps
mov
stc
enter
test
or
std
int3
shl
mov
jmp
shr
mov
test
(bad)
mov
pop
icebp
ret
mov
mov
out
or
shr
std
repnz
test
imul
jbe
and
ins
out
into
retf
mov
mov
mov
and
mov
aas
test
gs
dec
pop
pusha
push
retf
jg
jnp
retf
fs
jmp
jge
dec
push
cmps
outs
mov
enter
mov
psubusw
addr16
push
pop
pop
(bad)
inc
dec
mov
mov
dec
and
call
pop
shr
jae
mov
ja
fdivr
jo
mov
xchg
and
jae
pop
inc
repnz
cld
fld
ja
cmps
and
les
jmp
xchg
dec
push
cmp
inc
out
fnstcw
xchg
cmc
inc
cwde
push
in
push
jno
mov
test
xor
xchg
adc
popa
stc
jno
cdq
in
jge
jns
test
jmp
inc
(bad)
push
push
dec
adc
ret
(bad)
repz
and
fisubr
or
sub
in
push
dec
retf
sub
adc
(bad)
xchg
inc
add
or
push
int3
popa
test
outs
pusha
cmps
loopne
xor
stos
cdq
mov
dec
stc
dec
sub
aam
xor
(bad)
rol
shr
or
pop
cmc
xlat
retf
loopne
pop
loope
in
ins
and
in
fcomp
in
pop
int3
dec
repnz
scas
int3
les
mov
mov
sbb
repnz
jb
out
dec
mov
mov
fisubr
jmp
mov
sbb
xor
mov
pop
pop
jno
jae
loop
fs
xor
xchg
in
nop
ins
repz
repz
das
sbb
repz
test
jnp
out
outs
imul
cli
pop
retf
dec
xlat
(bad)
jns
and
lea
ror
pop
(bad)
xchg
or
stc
sbb
cmp
test
fs
push
and
out
stos
(bad)
or
mul
scas
lahf
mov
scas
cli
mov
das
in
mov
jecxz
es
ret
sbb
cmp
cmps
(bad)
fcomp
fld
addr16
fcomp
add
data16
ins
and
es
ins
out
test
push
jbe
data16
cmp
and
lds
cmp
fadd
fwait
mov
jae
fbstp
add
dec
pop
mov
retf
push
cmp
inc
inc
jmp
fimul
ret
pop
jno
cmp
test
mov
lods
(bad)
iret
inc
test
ficomp
stos
xchg
push
div
fnstenv
mov
call
jbe
and
scas
ret
rcr
iret
cld
adc
(bad)
jp
std
inc
mov
push
inc
cmp
xor
pop
ins
jbe
not
sub
out
scas
cmps
lods
nop
imul
xor
push
out
mov
dec
stos
sub
repnz
inc
and
xor
xchg
repz
cmc
loopne
repz
dec
dec
inc
push
aas
jmp
jae
mov
out
or
pop
jnp
pause
or
in
ins
sub
dec
daa
sbb
scas
lea
adc
mov
sub
add
rcr
xchg
nop
pop
inc
jl
(bad)
fild
hlt
(bad)
into
int
inc
in
stc
jae
pop
int3
mov
jae
jno
add
retf
pop
jo
pop
push
jecxz
jp
inc
ins
pop
lds
loope
out
sbb
xor
mov
ins
xor
sub
dec
push
sub
int3
mov
je
xor
sub
out
push
mov
sbb
loop
push
fisub
dec
fist
dec
outs
pop
dec
sub
pushf
cmp
jae
pop
cmp
sbb
push
stos
es
pop
(bad)
stos
cmp
cmps
dec
mov
adc
push
mov
sbb
xchg
loope
in
das
mov
mov
mov
lock
ss
sahf
test
fldenv
stos
xor
aad
clc
stos
test
cmp
pop
push
dec
cmp
jmp
mov
inc
repz
data16
push
push
jnp
and
jg
lods
bound
sub
mov
jmp
arpl
xchg
jns
push
jp
mov
adc
gs
rol
dec
pop
pushf
jge
retf
outs
xchg
scas
mov
cmp
mov
lods
ror
pushf
xor
mov
cld
lods
push
(bad)
push
mov
mov
cmp
cmp
jbe
imul
and
test
adc
scas
dec
sub
out
xchg
inc
jo
div
jge
scas
cwde
js
stos
sahf
popa
ins
xchg
enter
mov
mov
stos
push
dec
and
out
pop
neg
lods
lods
xor
lods
mov
ds
out
(bad)
and
jmp
(bad)
mov
mov
in
mov
out
shr
stos
cmp
adc
xor
jecxz
xor
movs
and
aam
cmc
mov
dec
shl
jle
(bad)
stc
(bad)
repz
mov
ror
fsubr
pop
arpl
cli
scas
xor
xor
ucomiss
sar
popf
pusha
mov
mov
into
sub
arpl
repz
sbb
dec
xlat
xchg
ja
shl
mov
mov
mov
cmps
push
lods
push
stos
daa
push
sbb
or
fsubr
push
push
int
pop
fist
dec
(bad)
fcomp
jae
add
in
mov
jmp
scas
lahf
out
int3
imul
jb
in
xchg
push
jno
fdiv
pop
add
dec
sar
mov
das
dec
iret
mov
in
test
dec
in
mov
dec
scas
xor
daa
jecxz
lods
xchg
push
jo
cmp
lods
add
sti
add
adc
scas
add
xchg
ja
inc
cmp
(bad)
sub
mov
cmp
push
test
push
in
(bad)
mov
xchg
inc
test
xchg
xchg
mov
pusha
and
cmps
das
xchg
sti
mov
jp
in
sete
fnstcw
arpl
inc
in
jne
and
arpl
push
pushf
xor
test
fxch
call
push
popa
mov
clc
mov
test
outs
in
mov
mov
repz
out
out
or
sar
mov
jecxz
popa
imul
aas
cmp
inc
cmp
shr
dec
cmc
imul
pop
sahf
(bad)
call
test
pusha
sahf
arpl
xchg
mov
cwde
xor
mov
mov
sub
cmp
sbb
loop
adc
push
add
sbb
pushf
or
push
jle
dec
sti
repz
xor
pushf
or
mov
fwait
ja
cdq
aaa
jns
jae
sub
fwait
sbb
call
scas
ja
setge
mov
stc
jb
out
fld
xor
add
xlat
sub
sub
stos
pusha
push
data16
std
sbb
push
xor
inc
mov
cmp
cmp
out
outs
sar
in
push
addr16
pop
jge
jmp
pop
add
cmc
cmp
enter
ret
dec
in
fidivr
cmp
xchg
out
add
cmc
retf
out
add
jne
mov
mov
push
xor
ret
cmp
xor
in
jb
je
mov
jns
mov
fistp
out
outs
mov
movs
pop
stc
dec
mov
in
adc
sbb
sub
mov
out
fisttp
stos
ret
retf
jbe
add
mov
(bad)
mov
retf
mov
jge
pop
stos
push
mov
mov
jno
jbe
in
inc
imul
xor
inc
test
push
xchg
sub
cmp
cld
aaa
jne
repz
enter
and
test
cmp
cmps
pop
jne
imul
jp
cmc
lods
test
and
xor
ror
mov
push
inc
ds
sub
dec
inc
and
or
ins
sar
mov
xor
sub
int
and
sbb
mov
jmp
out
dec
loop
mov
test
xchg
mov
es
add
inc
nop
jp
scas
jnp
addr16
dec
movs
and
test
std
cmc
adc
push
push
and
inc
pop
mov
cmp
push
jae
test
adc
mov
fwait
stos
loope
rcl
mov
mov
enter
movs
imul
mov
adc
inc
ins
dec
iret
test
sahf
hlt
ret
push
repnz
xchg
mov
fwait
shl
push
loope
or
daa
jmp
lods
repz
xchg
(bad)
stc
pop
mov
fwait
cmp
cmc
or
shl
leave
xlat
retf
in
mov
mov
mov
jecxz
or
push
int3
ficomp
fisttp
repz
int3
das
outs
(bad)
popa
jbe
cmp
out
das
inc
fbstp
jno
mov
push
inc
pop
sbb
jno
test
inc
sub
sbb
and
test
(bad)
inc
jge
dec
adc
jbe
push
mov
push
iret
xor
sti
dec
xchg
addr16
mov
jno
aad
clc
int
push
lods
repz
add
test
(bad)
pop
(bad)
jge
mov
dec
call
movs
pop
cmp
inc
leave
repz
ja
mov
adc
enter
jg
in
nop
test
mov
iret
mov
scas
in
inc
mov
dec
test
adc
pop
inc
out
and
sub
cmp
test
call
int3
call
sar
ret
inc
pop
cld
retf
push
pop
or
imul
push
add
mov
xchg
mov
or
jne
cmc
mov
dec
repz
xor
inc
mov
adc
pusha
cld
icebp
sbb
pop
enter
stc
test
enter
mov
jle
or
mov
lock
rcl
aam
lds
repz
pop
push
ds
repnz
out
jg
leave
dec
lock
out
fimul
cmp
push
pop
int3
imul
xchg
fist
pop
int
inc
xchg
ss
or
jnp
rol
iret
pushf
sbb
cmp
jmp
jecxz
adc
ja
mov
imul
scas
jecxz
aad
aam
and
and
dec
mov
out
inc
push
push
scas
mov
lods
inc
xchg
and
dec
jp
mov
pop
mov
mov
jno
pushf
mov
lods
or
aaa
sub
int
cmp
sbb
(bad)
out
cs
sbb
jb
scas
xor
mov
ja
pop
pop
(bad)
(bad)
outs
int
jo
push
std
pop
repnz
push
fsubr
hlt
pop
jmp
mov
cdq
cs
sub
fcomp
aad
mov
scas
cli
out
sub
and
mov
mov
inc
push
add
imul
je
das
cmps
dec
jmp
aas
push
retf
xchg
shr
jmp
(bad)
sti
fndisi(8087
mov
out
fist
mov
cmp
sti
(bad)
mov
out
scas
std
repz
retf
int
fidiv
adc
pop
push
push
pop
jmp
xchg
push
imul
scas
sti
push
(bad)
(bad)
sahf
imul
add
mov
imul
jns
pop
retf
mov
fadd
(bad)
ret
std
ss
inc
mov
or
fwait
push
ins
fcom
imul
fbld
jle
repz
pop
pop
(bad)
cmp
mov
mov
clc
inc
dec
dec
adc
das
mov
xor
aas
mov
out
les
cmp
call
mov
das
mov
mov
dec
jns
clc
inc
dec
aas
jne
pop
je
repz
je
jo
xchg
call
inc
fst
inc
into
dec
sbb
loop
mov
push
inc
dec
scas
scas
fcomip
enter
inc
sbb
add
ret
mov
ja
fstp
jns
sub
imul
mov
and
out
call
dec
pushf
pusha
dec
inc
xor
jle
ror
push
clc
daa
adc
outs
jg
mov
jecxz
sub
sti
dec
jmp
fdiv
call
mov
sahf
sbb
sub
fsubr
in
adc
xor
das
sbb
jnp
xchg
ins
and
adc
(bad)
fs
and
cmp
jecxz
xor
cmp
push
imul
push
sbb
es
cmps
cmp
sbb
adc
pop
aas
popf
test
pop
popa
sub
xchg
mov
sub
sbb
test
mov
or
stc
lds
test
jl
xlat
test
push
out
daa
test
or
adc
xchg
jns
adc
addr16
test
cmp
add
cmp
dec
or
mov
aas
adc
repz
retf
test
lods
jnp
adc
ret
adc
cwde
cmc
xchg
pop
or
mov
push
out
rcl
jl
ror
in
and
or
jne
arpl
pop
mov
ret
pop
sbb
cmp
pusha
arpl
add
out
call
xlat
(bad)
xchg
(bad)
in
aas
adc
sar
cld
and
mov
ds
jns
popa
retf
mov
xchg
push
mov
adc
shl
jmp
loop
xchg
dec
ficomp
mov
stc
(bad)
sbb
push
dec
test
into
jge
sti
cmps
xlat
mov
push
inc
mov
(bad)
mov
xchg
icebp
in
das
jb
xchg
sbb
lahf
sub
cli
aas
adc
jle
aam
mov
lahf
jle
sbb
mov
dec
cmp
or
out
rol
pusha
mov
(bad)
out
push
xor
mov
addr16
mov
push
xor
daa
jecxz
xor
cmc
and
cld
xor
xor
scas
repz
pusha
mov
sub
(bad)
pusha
mov
xchg
fistp
cmc
stc
ret
fsub
xchg
scas
movs
xchg
mov
out
mov
rcl
mov
cdq
xor
ficom
fmul
mov
dec
jp
xor
adc
(bad)
jecxz
stos
int
adc
pop
xor
or
loop
daa
out
pop
scas
cmps
test
pop
mov
movs
jnp
mov
fidiv
fild
std
fmul
push
mov
jle
jmp
shl
xrelease
das
mov
pop
hlt
mov
cmp
mov
mov
adc
inc
mov
js
test
fdivrp
mov
dec
sub
sub
push
test
test
test
pop
std
leave
push
jecxz
push
sbb
fdiv
pop
test
jg
loopne
sbb
stos
push
xchg
out
les
mov
repz
enter
mov
iret
mov
dec
stc
xchg
cdq
xchg
fld
sub
adc
addr16
scas
iret
or
xchg
lds
ret
xchg
xchg
jmp
pop
retf
mov
movs
pop
ret
mov
cmp
mov
adc
xchg
lds
push
cwde
sbb
mov
inc
cli
mov
rcl
cld
sub
pushf
sar
jb
inc
out
int
mov
mov
adc
fnstcw
imul
out
inc
int3
ret
imul
mov
(bad)
je
int3
pop
cmc
mov
adc
fimul
scas
sub
int
dec
mov
daa
fwait
push
mov
dec
jecxz
pop
stos
push
push
(bad)
(bad)
cmovge
addr16
dec
fmul
adc
ret
lock
sub
mov
cmp
push
cmp
ror
iret
lods
dec
icebp
fwait
dec
mov
and
lea
mov
movs
pop
jp
adc
movs
inc
sahf
(bad)
xchg
xchg
dec
loope
into
test
xor
jp
inc
and
push
dec
out
(bad)
ret
int3
adc
fist
jge
adc
js
ds
call
retf
ins
push
sbb
xchg
ss
cmps
jl
jp
and
int3
leave
mov
rdtsc
es
and
push
push
mov
iret
push
jmp
mov
arpl
addr16
cmp
push
cs
stos
cmp
cs
push
cmp
imul
push
and
jbe
add
sub
jmp
mov
cmp
ret
pusha
push
test
jmp
mov
mov
in
out
jo
dec
or
fimul
jmp
jbe
cmp
mov
nop
out
dec
stc
cdq
out
(bad)
mov
fist
or
cmp
and
mov
jg
cld
mov
or
pop
(bad)
lods
dec
out
addr16
movs
pop
icebp
int
stc
mov
sub
push
scas
imul
mov
jecxz
pushf
sar
jmp
test
out
adc
sahf
out
dec
dec
and
repz
xchg
iret
data16
jecxz
in
pushf
aas
xchg
lds
adc
jnp
xchg
in
daa
in
dec
inc
jnp
jle
sti
pop
jnp
div
fidiv
mov
mov
pop
sbb
adc
push
xlat
ret
sub
stos
rcl
add
loope
cmp
sub
xchg
aaa
ins
hlt
mov
or
adc
mov
stos
lock
or
jmp
das
push
ins
mov
cmps
test
inc
mov
sahf
dec
mov
mov
scas
lods
adc
out
imul
fidivr
jbe
xor
and
pusha
or
popf
ss
ins
pop
inc
je
mov
getsec
mov
es
and
ds
out
int3
(bad)
dec
es
jno
test
adc
or
and
jmp
addr16
mov
daa
cld
dec
ret
and
or
(bad)
cmp
les
hlt
xchg
jecxz
pop
out
lahf
jmp
ins
cmp
push
push
jl
push
(bad)
sub
cmc
xchg
inc
adc
xchg
rol
jne
xchg
and
sbb
pusha
xor
lahf
loopne
xchg
push
mov
push
mov
sub
(bad)
mov
repnz
mov
in
inc
pop
push
out
fidiv
es
scas
jbe
jae
hlt
mov
aam
leave
jmp
test
jno
jg
lods
test
adc
int
push
stc
ins
cdq
mov
jne
adc
imul
mov
mov
stos
repnz
mov
and
pop
mov
cmp
jns
pushf
(bad)
add
jbe
inc
push
lds
das
cmp
int
out
sub
ret
mov
sar
cmp
aaa
push
or
out
leave
sbb
sti
mov
adc
add
or
je
ja
jecxz
jle
test
(bad)
jns
mov
pop
xchg
xor
(bad)
pop
in
sti
xlat
test
pop
(bad)
shl
aad
xchg
adc
(bad)
(bad)
push
sar
sbb
sbb
(bad)
stc
ror
mov
cmps
jle
mov
or
lock
imul
push
cmp
outs
div
sub
(bad)
dec
ss
fiadd
mov
neg
lahf
jbe
data16
es
dec
mov
jl
ds
fistp
cmp
movs
jnp
xchg
xor
pushf
push
out
arpl
xchg
mov
ret
pop
in
inc
sbb
js
cwde
mov
ss
mov
imul
jp
fcomp
ficom
cmc
jl
out
xor
add
aas
(bad)
scas
push
fmul
jmp
mov
lea
imul
jnp
cmps
mov
stos
ds
or
fwait
lds
rep
jno
(bad)
pop
xchg
sbb
dec
lods
enter
jl
imul
sub
sub
sub
cmps
repnz
mov
xchg
bound
mov
pop
fs
ja
mov
jge
stos
in
test
pop
jmp
outs
fsubr
frstor
jmp
imul
mov
loop
adc
and
jns
cli
jl
push
mov
xor
ja
mov
lock
in
les
fmul
movs
mov
cmc
imul
popf
loop
dec
repz
sub
outs
mov
sub
fisttp
jbe
or
fstp
pushf
add
xchg
out
call
mov
les
mov
fild
adc
inc
lahf
and
stos
jl
push
cmp
in
lds
and
out
popf
out
jg
pop
jne
ja
in
mov
cmp
dec
xchg
fwait
pushf
outs
cmp
push
pop
(bad)
mov
jmp
sbb
out
jb
pop
mov
push
sub
jecxz
mov
pop
mov
pop
mov
lea
icebp
ds
jbe
push
sbb
repz
xlat
int
add
in
jbe
int
repz
fdivrp
(bad)
mov
scas
cld
dec
into
repnz
cmc
dec
fwait
neg
pop
out
int3
mov
xchg
push
ficom
ja
mov
imul
ja
mov
test
mov
cmp
pop
retf
lods
mov
(bad)
pushf
aaa
mov
int3
int
pop
jmp
jmp
jmp
stos
xchg
jo
fstp
pop
add
jge
scas
arpl
pop
call
adc
cs
xlat
cs
lahf
rcl
push
push
repz
into
sub
pop
jmp
stos
cdq
mov
out
cmp
inc
scas
movs
jno
cmp
ja
(bad)
repz
aas
xchg
fisub
cld
push
out
xlat
fmul
jl
loopne
outs
fadd
test
ins
xchg
cmp
mov
cmc
lock
mov
test
scas
jg
stc
rcl
jne
mov
fdivr
cmc
aaa
sbb
jp
inc
clc
mov
call
mov
movs
push
idiv
leave
imul
in
fstp
fild
daa
adc
push
fdivr
cmp
push
jae
popa
mov
cmp
ss
frstor
out
outs
loopne
ret
cld
cmps
mov
loop
cmp
or
fisubr
pop
jge
stos
cmc
cs
adc
les
jg
sbb
int3
sbb
mov
fidiv
pop
int3
cli
scas
fnsave
mov
call
xchg
jecxz
lock
sbb
sar
xchg
adc
les
movs
mov
enter
mov
push
rol
mov
inc
push
jbe
jae
daa
xor
cwde
xchg
xchg
adc
mov
cmps
mov
jne
test
sub
mov
adc
mov
pop
(bad)
stos
ret
je
or
jg
test
or
cmps
push
stc
mov
mov
dec
dec
sub
inc
jns
add
fadd
into
les
popf
rcl
movs
call
cmc
test
sbb
pop
loop
mov
mov
enter
(bad)
in
test
repz
movs
leave
sub
pop
pop
xor
jbe
mov
pop
cmp
sti
not
(bad)
dec
aad
pop
arpl
dec
inc
fdiv
dec
ret
jle
mov
clc
cld
add
pop
mov
daa
test
jo
dec
xchg
lea
int3
xchg
mov
int3
bound
outs
and
add
or
jmp
addr16
inc
cmc
int3
lock
jg
cs
lock
and
xor
pop
out
push
cld
in
outs
bound
pop
in
iret
test
js
pop
nop
mov
in
out
clc
div
in
and
push
xchg
out
xor
xor
sbb
out
add
mov
jae
cli
jns
jp
push
jecxz
jb
or
jmp
inc
in
inc
and
sbb
popa
xor
jmp
pop
jmp
outs
jcxz
movs
dec
call
xlat
adc
push
pop
jb
cwde
shr
stc
cmp
dec
inc
in
mov
lods
out
fdivr
jb
cwde
into
sub
inc
clc
push
mov
mov
sbb
inc
ss
in
jle
fisubr
imul
sbb
leave
mov
push
outs
jecxz
xchg
(bad)
add
dec
aad
xlat
ins
outs
jl
cmp
stos
xor
popa
not
das
cmc
xchg
dec
mov
pushf
or
push
jg
inc
repz
imul
ja
pop
inc
iret
js
jne
cmp
call
addr16
je
out
imul
sbb
std
cdq
or
inc
pop
mov
cmp
inc
(bad)
lods
mov
push
gs
hlt
add
adc
out
enter
mov
or
mov
xchg
xor
xchg
jo
push
xor
push
leave
cmp
or
call
pushf
sub
mov
inc
retf
ja
mov
movs
cwde
push
enter
shl
inc
sub
mov
cmp
call
jae
sbb
scas
jns
inc
shl
and
ficomp
leave
sub
jb
xor
add
aad
xchg
mov
mov
inc
dec
iret
lods
and
pop
fld
js
push
std
std
arpl
cmc
test
mov
scas
stc
arpl
pop
sbb
ds
or
jecxz
push
lds
call
mov
arpl
out
sbb
pushw
aam
je
xor
shr
push
ret
data16
addr16
or
jmp
(bad)
cmp
mov
mov
les
and
fucomp
mov
test
jo
js
xor
out
push
mov
jb
inc
and
and
(bad)
scas
ror
in
loop
mov
into
fwait
leave
cli
mov
call
mov
inc
dec
icebp
xor
add
dec
(bad)
dec
dec
push
and
inc
push
xchg
xor
sub
xchg
sbb
pop
imul
sbb
or
arpl
call
mov
mov
sub
pop
(bad)
inc
fcomp
pop
xchg
aas
(bad)
xchg
aas
movs
arpl
ins
(bad)
sub
and
and
(bad)
and
pop
iret
fsubr
inc
dec
mov
sub
in
sub
ret
cmp
and
fs
and
push
xchg
fnstenv
popa
pop
xchg
out
adc
xor
adc
jbe
dec
jbe
ficom
mov
xchg
popf
shl
jnp
data16
lds
scas
mov
jl
sub
stc
and
inc
scas
xor
push
stos
xchg
dec
push
fldenv
popf
xor
iret
inc
xchg
cmp
sti
les
lods
lahf
les
mov
cmps
pusha
stc
loope
cmp
jg
push
aad
cmps
aad
pop
fcomp
shl
data16
icebp
fmul
leave
cmp
mov
and
test
cmc
mov
js
sub
retf
mov
dec
repnz
into
sbb
fldcw
xchg
jb
aaa
test
push
xchg
push
(bad)
mov
sahf
jmp
xchg
test
jbe
push
fbld
(bad)
jb
data16
xchg
ret
aam
and
dec
(bad)
xchg
cmp
jno
sbb
fild
jg
test
push
fwait
(bad)
jecxz
adc
inc
xchg
icebp
fcom
mov
pop
jno
sub
movs
cs
jp
repz
cli
cmc
push
lods
xor
inc
out
aam
xor
(bad)
adc
push
xor
fwait
call
cmp
push
fsubrp
dec
ins
test
jecxz
out
mov
push
test
aaa
int
dec
scas
aam
push
fs
repz
daa
fstp
addr16
cld
pop
cld
jae
and
xlat
jle
xlat
sub
mov
mov
out
sti
jl
or
outs
outs
pop
dec
sbb
stc
test
std
repz
mov
mov
das
int
js
jnp
jae
sbb
(bad)
call
das
cmp
xor
add
and
in
scas
lods
in
pushf
xor
jns
scas
or
jb
call
das
sahf
fdivr
enter
outs
pop
icebp
out
into
mov
jns
ret
mov
das
and
in
das
je
fidiv
push
out
stos
je
fcmovbe
inc
std
loope
pop
push
fidiv
sub
pop
xchg
inc
sti
and
push
(bad)
xchg
mov
pop
mov
in
sti
fadd
fist
fdivr
es
fiadd
cdq
xchg
out
mov
movs
sti
jmp
hlt
test
pop
sbb
add
sub
fidiv
iret
addr16
ds
ins
stos
dec
jns
jb
and
ss
cwde
jge
cdq
fwait
das
dec
sbb
(bad)
push
test
arpl
xor
mov
xor
dec
sub
rcr
lea
cmp
cmps
or
call
sbb
stos
addr16
push
out
jne
sar
retf
ds
xor
lahf
ins
mov
sub
pushf
ins
repnz
inc
enter
scas
and
mov
das
push
outs
fldcw
into
imul
push
gs
stc
sbb
mov
xchg
sti
icebp
(bad)
mov
out
in
lahf
call
call
cld
scas
jmp
pop
shl
cmp
sub
retf
pop
adc
shl
fstp
xor
push
mov
xor
mov
iret
mov
lods
push
sar
repz
jecxz
scas
retf
retf
push
mov
sbb
push
inc
(bad)
mov
ficom
ja
cmp
lods
adc
sbb
and
(bad)
fnstenv
cmp
ins
fbstp
cli
push
sub
scas
je
push
or
div
(bad)
(bad)
vmaxsd
xor
faddp
(bad)
fimul
cdq
sbb
xrstor
imul
out
movs
cwde
add
pop
aaa
xchg
fld
xchg
icebp
xor
xchg
sub
lahf
out
mov
mov
repnz
or
icebp
cs
jmp
adc
push
out
daa
fisub
scas
push
icebp
jmp
mov
inc
inc
mov
pop
adc
xchg
loop
movs
inc
sub
pushf
push
push
mov
cmp
test
outs
xchg
iret
adc
xchg
fisub
imul
adc
(bad)
rcr
es
xchg
mov
ins
popa
xchg
(bad)
and
sti
xor
iret
lods
xchg
jecxz
jecxz
push
je
in
call
out
sub
cmp
stos
fsubr
mov
gs
jmp
in
add
shl
and
cmp
div
sbb
dec
jbe
int
jle
les
mov
je
shl
cdq
and
mov
fisub
mov
jl
cmp
or
push
cmp
je
jno
sti
jmp
mov
push
xor
std
or
mov
mov
inc
jmp
inc
jmp
lods
jbe
sub
pop
mov
idiv
ret
jns
bound
jo
push
sub
pop
push
fucomi
cmp
pop
mov
fdiv
or
pushf
ins
jecxz
cli
add
rol
ins
test
pop
(bad)
cmp
jnp
js
sbb
or
sar
or
jae
sbb
jg
sbb
push
shl
xor
jl
test
cwde
ja
cs
mov
mov
lea
cmp
mov
cmp
repnz
xchg
sti
pop
gs
dec
jae
inc
shr
xchg
mov
dec
and
pop
sub
fs
adc
hlt
idiv
retf
scas
mov
imul
xchg
addr16
outs
lods
xchg
outs
pop
pushf
ss
shr
dec
dec
sub
xor
ss
adc
xchg
loopne
jecxz
pushf
scas
mov
aad
in
mov
mov
jno
cmp
addr16
pop
push
jae
adc
sub
(bad)
jmp
cmc
pushf
neg
outs
pushf
outs
js
fmul
out
jmp
and
fwait
mov
mov
jl
ror
outs
mov
pop
sti
dec
mov
lock
mov
(bad)
xor
sub
pop
fwait
lock
mov
stos
clc
add
jmp
mov
iret
sbb
outs
fsub
cld
mov
mov
inc
sar
jns
ror
in
in
stos
mov
adc
mov
or
int
jae
rcl
les
dec
lock
jne
or
jg
lods
ja
arpl
scas
aas
jecxz
inc
or
cmp
and
stc
loope
loop
cmps
out
add
ficomp
jmp
iret
cli
push
jge
out
arpl
test
inc
ret
jmp
sub
push
inc
je
push
repnz
data16
int3
cmp
lock
push
sahf
sar
xor
pushf
nop
pop
dec
inc
int3
xchg
sbb
cli
xchg
ss
sar
or
push
inc
ins
sbb
cmp
jge
mov
cmps
js
aam
test
dec
fdivr
mov
popa
movs
push
jecxz
add
add
pusha
sub
jl
xlat
(bad)
(bad)
mov
ins
(bad)
jge
xchg
push
outs
shl
xlat
push
cmp
xchg
imul
out
mov
pop
stos
push
jb
mov
fistp
pop
push
mov
lahf
push
shl
jmp
push
shl
xor
push
fild
loop
out
or
fisubr
jae
push
(bad)
xchg
icebp
sub
jp
movs
(bad)
mov
push
retf
xchg
js
sbb
aaa
lods
in
gs
fsubr
movs
into
stc
das
bound
jl
dec
aaa
das
lds
jo
enter
btc
adc
imul
fdivr
xor
mov
mov
xchg
push
push
(bad)
xchg
outs
neg
or
(bad)
cmp
pop
push
lahf
fwait
push
leave
cmp
leave
push
mov
xor
ss
jl
arpl
icebp
imul
push
test
clc
mov
push
inc
mov
scas
and
dec
popf
ror
popf
mov
sub
inc
and
pop
jne
adc
mov
push
mov
shr
inc
mov
xchg
sub
push
loopne
and
inc
xor
sub
xor
cwde
icebp
sub
mov
mul
hlt
jle
jnp
fisub
xchg
retf
pop
inc
mov
jb
in
mov
fisttp
adc
fwait
jbe
push
lods
sbb
(bad)
mov
xchg
xchg
in
movs
mov
shr
lods
xchg
iret
(bad)
jle
jne
mov
outs
loope
pop
das
lods
xchg
jmp
outs
jbe
mov
sub
jmp
xchg
add
scas
movs
cmp
cmp
repnz
push
fsub
ja
jno
(bad)
dec
aas
jne
cmp
pushf
out
hlt
fwait
sub
mov
imul
pop
jle
jae
test
adc
cmp
push
lds
or
sub
arpl
mov
cwde
(bad)
jl
lds
jg
sbb
xor
fwait
dec
jno
push
repz
mov
(bad)
adc
pushf
fisttp
int3
push
lea
cld
pop
arpl
mov
iret
pusha
cld
xchg
add
sbb
clc
adc
cmp
in
fstp
xchg
mov
scas
inc
adc
push
pop
cmp
rol
mov
pop
in
push
cmp
mov
enter
xchg
ja
test
jg
pop
xlat
mov
cmps
into
jbe
out
lods
sub
inc
sti
push
mov
push
xchg
cmp
stos
lahf
xchg
ss
push
inc
cmps
mov
push
push
stos
sbb
xchg
in
fidivr
lock
jae
cmps
btc
in
sti
ret
mov
mov
push
mov
jnp
jmp
pop
not
cmp
xchg
loop
js
out
ret
(bad)
jmp
icebp
popf
loop
or
loope
xor
repnz
mov
mov
push
or
cmc
or
push
lea
int
inc
mov
sbb
(bad)
(bad)
inc
imul
pop
rcr
cmp
lods
xchg
test
inc
imul
push
rcr
fnstcw
push
rcr
stc
cld
inc
pop
and
aam
pop
dec
xchg
jecxz
or
or
push
mov
sbb
je
push
inc
cmp
sub
pop
xchg
cmp
mov
jge
xchg
sub
pop
dec
imul
push
xchg
lahf
outs
mov
cmp
repnz
jne
(bad)
out
in
inc
inc
scas
or
jecxz
repnz
dec
imul
cwde
xor
cmp
dec
out
xlat
and
jo
out
dec
or
jbe
outs
mov
aas
mov
sbb
push
lods
xor
lods
xchg
pop
xor
dec
fimul
cmc
stos
sbb
push
arpl
call
repnz
xor
lahf
dec
or
ins
jmp
fsubr
push
jnp
jns
(bad)
xor
fcmovnbe
pop
cwde
mov
jmp
inc
imul
loope
mov
fwait
sub
popf
mov
jb
ds
sar
pop
xor
pop
out
call
pop
lock
jns
sar
adc
js
cdq
test
jg
mov
dec
sub
and
mov
xor
movs
jmp
scas
test
sub
inc
cmp
adc
nop
icebp
or
scas
ja
enter
repnz
lahf
call
ins
popa
outs
pop
cmps
(bad)
lods
mov
div
cmps
mov
in
push
retf
cmc
(bad)
retf
popf
and
and
jnp
sti
ins
lods
fistp
stc
sub
cmps
mov
jmp
inc
jg
(bad)
cmp
inc
push
jmp
lods
mov
cmp
dec
sbb
and
fnstcw
aad
pop
leave
mov
fild
(bad)
fucom
lds
pop
push
ror
cld
bound
cmps
pop
dec
sub
shl
xchg
ins
mov
mov
mov
cmp
(bad)
rol
and
test
js
ret
loop
push
retf
inc
scas
push
leave
outs
(bad)
jp
pop
shr
jne
dec
dec
add
jnp
xor
and
jmp
shl
stos
test
jo
or
rcl
pop
icebp
lods
bound
clc
xlat
mov
mov
frstor
mov
inc
pop
mov
in
cmp
sub
in
fisubr
popf
sbb
adc
sub
mov
addr16
mov
mov
enter
aad
cmp
pop
(bad)
xlat
xor
jb
(bad)
cld
adc
pop
mov
xor
scas
jb
in
or
jbe
mov
add
mov
mov
pop
(bad)
fmul
pop
mov
push
neg
cmp
scas
jno
push
jo
pusha
movs
mov
cmp
jnp
scas
push
in
dec
push
aad
jae
lods
push
pop
pop
dec
stos
push
aad
pop
lods
cs
dec
stos
xchg
mov
push
stos
mov
mov
pop
dec
stos
aad
ficomp
xchg
push
lods
sub
aad
mov
push
lods
fisub
dec
stos
push
std
push
pop
mov
das
movs
push
imul
iret
call
movs
mov
cmc
and
popa
or
sbb
sub
fsubr
outs
pushf
movs
or
or
sbb
leave
aam
hlt
scas
daa
pop
les
(bad)
pusha
sub
cld
stos
retf
test
aas
js
cmc
clc
and
jecxz
aas
inc
cmp
icebp
aaa
pop
inc
cmp
(bad)
cmps
and
push
dec
push
jbe
dec
pop
xchg
movs
sahf
push
jb
cmps
mov
sahf
outs
jmp
cmp
mov
mov
cmc
mov
sub
jo
loop
add
ds
or
mov
mov
mov
push
repz
mov
ja
out
xor
sbb
lock
mov
adc
and
cmp
inc
out
imul
xor
ds
test
out
(bad)
cmps
xor
sub
int
(bad)
loop
cdq
bound
jp
pop
popf
(bad)
icebp
outs
data16
sbb
mov
xor
jnp
test
push
lds
jae
mov
ins
test
and
iret
push
xlat
cmp
jl
inc
jno
jb
dec
mov
or
push
shl
out
mov
xchg
dec
xchg
movs
mov
fs
pop
loop
jle
setne
fisub
jno
enter
(bad)
retf
arpl
call
cmps
fs
fidivr
pop
aas
cmp
push
es
js
push
dec
or
mov
int3
push
scas
inc
dec
mov
jbe
(bad)
push
movs
adc
cmp
out
dec
(bad)
in
das
in
test
xor
ror
adc
push
or
mov
iret
pop
cmc
sub
xlat
xlat
iret
or
(bad)
dec
scas
mov
aam
in
pop
xchg
sti
jne
xlat
mov
fsubr
arpl
(bad)
sbb
fisub
and
es
push
loopne
mov
int3
inc
int3
aaa
jmp
push
clc
push
movs
dec
fdivr
sub
adc
rcr
movs
(bad)
cmc
jecxz
in
xchg
add
inc
cmp
(bad)
cmp
int
icebp
xchg
push
test
sahf
adc
mov
fs
int
sbb
jbe
dec
enter
xchg
iret
jmp
pop
fisttp
lods
lea
mov
aam
mov
lds
sahf
loope
adc
outs
(bad)
or
xchg
js
lds
cmp
add
jne
pushf
push
scas
mov
out
pop
jge
loope
jmp
jmp
lock
icebp
and
(bad)
cmp
fisttp
retf
push
fnsave
cmc
imul
cmp
dec
imul
icebp
pop
mov
das
xor
adc
mov
add
fwait
mov
hlt
ds
(bad)
in
sar
iret
sub
cld
or
(bad)
sbb
pop
scas
add
jnp
jle
aad
ret
sub
mov
fwait
push
pop
mov
fimul
fimul
cmp
dec
pop
mov
mov
xor
test
add
fsubr
ds
fcomp
adc
lds
aas
mov
mov
or
loopne
xchg
leave
repz
aaa
mov
dec
mov
sub
(bad)
popf
cwde
cmp
test
push
sub
mov
push
jge
(bad)
xchg
out
add
int3
xchg
cmp
pop
cs
ja
les
xchg
gs
(bad)
xchg
repz
cmp
mov
push
xor
(bad)
into
jnp
aas
mov
sti
inc
scas
mov
adc
cwde
adc
test
jae
push
pusha
jb
mov
cmp
pop
dec
cmp
adc
push
push
fadd
push
loope
bound
in
jg
push
test
sbb
arpl
idiv
xor
xor
pop
sar
data16
cmp
(bad)
out
es
or
pop
push
stos
mov
sahf
popa
xchg
je
mov
jae
mov
dec
dec
fs
jmp
adc
mov
inc
fst
push
cdq
mov
add
cmp
seta
mov
sbb
cmp
xchg
xchg
and
rcl
daa
and
jmp
rol
adc
mov
aaa
adc
test
inc
bound
and
out
fwait
lahf
arpl
push
iret
jne
dec
mov
dec
shl
pop
(bad)
jl
gs
sti
push
outs
fild
scas
add
and
(bad)
mov
clc
ja
addr16
arpl
inc
lea
data16
or
fcmovnbe
pop
fdivr
mov
lock
jp
ret
shl
cs
or
jmp
icebp
jmp
pop
push
ret
cmp
cld
jne
retf
arpl
gs
sar
mov
(bad)
stc
dec
cdq
mov
test
imul
jb
mov
ret
mov
dec
in
movs
clc
adc
lds
ficom
mov
pop
fcomp
aas
(bad)
pop
cli
sub
pop
clc
jae
loop
addr16
mov
or
(bad)
mul
loope
outs
pop
cmps
cmps
pop
fdivr
mov
je
call
les
jmp
sub
push
cmp
and
inc
pusha
adc
icebp
xor
sbb
jne
(bad)
pop
movs
dec
sub
jmp
sub
sbb
loop
xchg
jg
ds
sbb
repnz
cmps
pop
popaw
xchg
sub
call
js
cmp
sub
ret
jmp
xor
jg
inc
sahf
xchg
pushf
push
ins
outs
push
sahf
lahf
es
sub
imul
sub
js
ret
xchg
mov
cmp
lahf
addr16
sbb
pop
dec
repz
pushf
pop
arpl
push
sbb
addr16
loopne
mov
xchg
je
cld
shl
or
stos
jmp
cmp
fdivp
ja
cs
push
cmp
fdivrp
div
fisttp
ret
cmp
outs
mov
outs
movs
jae
shl
pop
ds
popf
or
dec
out
or
daa
inc
out
(bad)
in
adc
mov
mov
std
int3
sbb
imul
(bad)
int3
xchg
sub
les
xchg
jbe
ds
jb
xchg
push
and
cmp
mov
std
loopne
or
push
lods
enter
retf
aam
mov
mov
dec
push
div
test
movs
jns
jmp
call
jge
jg
lods
call
loope
sub
js
(bad)
leavew
cmc
pop
inc
out
icebp
fiadd
les
add
call
stos
int3
repz
out
push
pop
cli
cmp
jg
test
or
mov
iret
icebp
sahf
xchg
scas
shl
in
arpl
retf
adc
mov
mov
xchg
int3
mov
xor
retf
mov
lea
movs
retf
jecxz
outs
lds
mov
jno
mul
mov
jle
ror
push
cmp
mov
movs
ror
pop
in
sar
cdq
push
test
neg
stc
outs
xchg
ret
push
adc
sbb
fdiv
(bad)
inc
lahf
dec
outs
sbb
adc
xchg
repz
sbb
retf
sar
sub
(bad)
mov
in
ds
out
ins
dec
cmp
cli
cmc
dec
sub
loope
xor
xchg
cmp
imul
mov
cld
out
int3
out
stos
xor
xchg
xor
les
cmps
jnp
dec
sub
sar
mov
push
inc
test
sahf
inc
mov
movs
popf
xor
and
into
cmps
test
mov
icebp
jg
mov
shl
mov
sub
cmp
cwde
jno
ds
add
inc
iret
xor
mov
(bad)
xlat
mov
stos
(bad)
sahf
sbb
sbb
sbb
ret
cli
rcr
xor
jge
add
jecxz
dec
in
jbe
std
lods
pop
sbb
dec
in
gs
fistp
mov
mov
popf
cdq
repnz
pop
adc
push
mov
xor
ja
stc
test
jo
test
in
aaa
pop
es
pop
push
fbld
jnp
add
mov
sub
(bad)
cmp
cdq
xchg
adc
sub
xchg
enter
in
je
scas
jmp
movs
or
jecxz
pop
mov
ins
cmps
dec
stos
dec
push
xchg
mov
(bad)
movs
xchg
test
cmp
xlat
ins
mov
icebp
pop
imul
(bad)
mov
call
iret
icebp
jmp
gs
nop
mov
sub
fisttp
cbw
xor
shl
imul
sub
loope
outs
packuswb
cmc
mov
pop
(bad)
aaa
pop
test
and
lds
adc
adc
add
and
or
xchg
dec
scas
pop
push
dec
icebp
pop
fbld
xor
jl
popa
int
sbb
mov
sti
xor
arpl
inc
stos
out
clc
ffreep
cmps
dec
movs
xchg
xlat
push
sub
mov
(bad)
je
je
jmp
adc
neg
(bad)
or
call
in
fild
cmp
cld
out
lods
mov
test
in
sub
test
sbb
pop
ficomp
dec
aam
jmp
lea
clc
call
jbe
in
push
arpl
mov
mov
std
mov
popf
addr16
push
popf
out
cmp
je
imul
pop
call
int3
jne
adc
add
adc
cs
inc
mov
out
(bad)
sti
in
mov
cmp
outs
push
scas
or
scas
gs
lods
fwait
pushf
pop
pop
(bad)
mov
or
scas
pop
mov
fwait
sbb
jno
jae
push
loope
movs
stc
mov
out
(bad)
jmp
push
outs
imul
(bad)
(bad)
jae
shl
call
cmp
in
fidivr
or
jl
(bad)
xchg
out
add
mov
sub
push
jg
cmps
push
sub
jge
mov
adc
fstp
jle
dec
cs
mov
movs
retf
xchg
jo
jnp
sahf
inc
scas
aam
(bad)
nop
xor
nop
sub
ret
idiv
add
cmp
fistp
popa
inc
je
test
xchg
jbe
sbb
loop
mov
call
addr16
cmps
(bad)
adc
mov
call
dec
imul
lods
dec
shl
cmps
push
push
lods
stos
push
pop
pusha
adc
inc
and
jae
ret
cwde
clc
sub
push
push
adc
pop
adc
out
stos
cmp
faddp
out
or
xor
out
mov
fs
dec
sub
jecxz
xchg
mov
hlt
(bad)
mov
mov
fwait
ins
fs
pushf
jne
iret
mov
ins
cwde
pop
out
pop
cmp
adc
jmp
fst
out
mov
sub
lods
stos
sar
mov
xor
push
xchg
sahf
int
mov
aam
cmc
mov
xor
daa
dec
daa
and
lea
push
cli
arpl
lea
mov
out
je
not
lea
les
or
adc
xor
adc
adc
dec
jno
imul
jmp
sbb
mov
js
fst
pop
xchg
or
stos
dec
pusha
outs
jmp
xchg
out
int3
add
jo
lds
sbb
cmps
or
stos
nop
rol
call
int3
les
mov
inc
call
adc
mov
ret
dec
adc
pop
mov
retf
xchg
mov
and
jl
lods
or
in
repz
div
ret
aaa
dec
dec
push
ret
sub
in
xor
cld
fxam
div
(bad)
gs
hlt
test
nop
jecxz
cdq
inc
hlt
jle
sbb
retf
mov
(bad)
in
or
adc
adc
cdq
cdq
push
mov
movs
loope
clc
xchg
(bad)
iret
pop
mov
mov
pop
or
ror
mov
xchg
gs
inc
xor
pushf
stc
clc
ds
xchg
xlat
sbb
stos
repz
test
and
cmp
push
cdq
add
retf
jmp
mov
lea
add
les
hlt
cmp
push
mov
ss
sbb
sub
jle
hlt
imul
jl
or
aaa
pop
dec
neg
idiv
sbb
cmc
mov
scas
clc
cmp
cwde
pushf
cld
icebp
loope
dec
(bad)
xchg
lea
sub
popa
xchg
stos
push
pop
jb
adc
or
jle
fcom
leave
iret
adc
jecxz
dec
ins
mov
iret
(bad)
das
bound
fiadd
mov
fisttp
mov
dec
cld
out
mov
pop
(bad)
retf
xchg
pop
cmc
bound
out
mov
cmp
je
int3
imul
repnz
dec
sbb
in
out
popa
inc
pop
out
mov
xchg
fdiv
pop
callw
jecxz
adc
(bad)
xchg
xchg
js
mov
(bad)
dec
sub
arpl
fld
mov
not
pop
nop
mov
adc
pushf
(bad)
out
bound
or
aad
test
sar
xor
jo
sbb
scas
cmps
lea
add
outs
push
inc
or
adc
or
iret
fisttp
test
popf
mov
leave
out
rol
pop
push
out
jge
cld
and
push
xor
mov
mov
or
adc
mov
push
fwait
addr16
into
mov
cmp
inc
pop
mov
mov
neg
out
xchg
adc
lahf
int3
add
mov
outs
call
xchg
pop
in
pop
mov
in
push
hlt
pop
xor
movs
test
jae
in
xor
sub
or
pop
push
push
dec
xor
cs
cmps
rcr
(bad)
mov
inc
push
xor
imul
and
pusha
fcmovnb
fisubr
sbb
icebp
inc
call
and
cmc
movs
push
adc
cmc
dec
xor
mov
enter
popf
jg
pop
ja
mov
sbb
ds
ret
test
pushf
sbb
cmp
out
in
push
jmp
push
xor
in
adc
add
das
push
(bad)
jmp
leave
inc
enter
and
jl
add
fs
xor
(bad)
leave
nop
arpl
call
daa
jno
mov
mov
stos
in
rol
xchg
jb
jnp
dec
inc
scas
push
test
scas
shl
popf
aad
subps
movs
pop
add
mov
adc
jle
xor
mov
xor
mov
test
(bad)
hlt
jae
mov
push
sti
and
out
loopne
jmp
in
mov
shl
lods
jbe
jo
in
mov
aad
into
jle
stos
out
lahf
mov
into
outs
pop
loop
cmp
jno
js
sub
neg
mov
ds
jno
loope
lock
scas
repz
mov
(bad)
jle
pop
pop
clc
icebp
nop
cmps
enter
add
call
mov
ss
leave
int
aas
add
popa
shr
jne
mov
js
mov
(bad)
pop
imul
jecxz
in
neg
dec
mov
ret
fst
(bad)
lods
fnstcw
scas
mov
cdq
mov
test
ja
enter
xlat
(bad)
mov
mov
and
or
aam
xor
stc
inc
sbb
push
sbb
imul
push
(bad)
cmp
cmp
jno
clc
test
xor
sbb
jecxz
push
addr16
push
or
lahf
(bad)
cld
jle
fcmovnu
mov
push
jecxz
loop
adc
cmp
out
icebp
repz
inc
div
shr
xchg
cmp
addr16
lds
fisub
(bad)
mov
fadd
fwait
hlt
cmc
imul
(bad)
in
push
mov
jnp
sbb
sub
imul
sti
daa
test
repnz
add
outs
sbb
cmp
lods
lods
or
mov
stos
(bad)
arpl
imul
and
adc
call
js
mov
dec
sbb
in
push
pop
(bad)
pop
pop
lds
sbb
add
in
inc
jge
jmp
movs
or
dec
enterw
fmul
pop
xor
call
pop
xchg
stos
pop
ficomp
in
lods
cmp
or
xchg
add
mov
cs
cmp
sbb
(bad)
(bad)
mov
shl
push
rcr
mov
jp
pop
int3
dec
cld
(bad)
xchg
mov
cs
dec
rcl
aam
addr16
pop
mov
jb
inc
sub
call
dec
mov
ins
movs
jge
lahf
mov
mov
inc
sahf
mov
ja
inc
ja
repz
cmps
jo
xor
les
jne
retf
aad
stos
inc
pop
bound
ds
call
mov
(bad)
mul
in
pop
add
ror
ds
sub
imul
mov
add
std
das
mov
mov
loopne
pop
mov
ins
jl
jp
jns
outs
aad
pop
out
xor
retf
fidiv
or
push
cmp
adc
jae
(bad)
pop
call
call
jg
ror
push
popf
sar
xchg
add
shl
bound
sti
push
pop
mov
lods
ja
cdq
jl
push
jmp
call
rcr
xchg
jmp
aaa
call
je
(bad)
fcmovu
in
pop
cli
scas
je
pop
jnp
imul
popf
int
neg
pop
je
(bad)
in
std
je
pop
fcmovb
jp
fstp
ret
jge
sbb
jl
shr
and
and
addr16
movs
jecxz
stc
jmp
popa
fdivr
sub
push
lahf
lods
fidivr
les
xchg
out
xor
inc
fistp
cmps
jge
push
in
jecxz
xor
cmp
push
pop
in
into
pop
idiv
in
clc
dec
mov
jbe
xchg
dec
sbb
adc
cmp
cld
pop
jns
and
dec
sub
ret
jno
pop
popa
js
into
or
lahf
mov
and
fild
int
dec
(bad)
mov
or
adc
xchg
and
xor
out
or
inc
ss
sbb
inc
popf
mov
ficomp
inc
test
cmps
jge
dec
cmp
out
outs
fcmovu
sub
sti
add
mov
mov
mov
jbe
mov
ret
iret
or
inc
pop
adc
xlat
jle
cmp
push
cs
std
sub
jl
inc
pop
cs
adc
and
push
ret
lods
(bad)
jmp
mov
inc
xor
inc
mov
out
or
psubsw
cli
call
cld
sbb
xlat
into
and
and
and
shl
push
cmp
jecxz
adc
xchg
xor
inc
mov
lea
push
scas
enter
imul
enter
fs
out
mov
mov
cli
sbb
inc
in
jnp
js
ror
lods
jb
into
xchg
cmp
jg
scas
add
aad
dec
jmp
mov
out
fsubr
mov
(bad)
div
pop
jae
repz
clc
rol
sub
adc
pop
mov
in
mov
jmp
scas
fsub
jnp
jge
jae
mov
inc
mov
imul
cmc
lock
aaa
sub
mov
add
jmp
stc
mov
inc
jns
out
jmp
test
xchg
into
call
aam
jl
sbb
or
outs
cld
sub
mov
mov
mov
iret
push
icebp
sbb
int
mov
icebp
sbb
jbe
aas
mov
dec
aad
frstor
jnp
loop
pop
aad
or
outs
cmp
dec
sbb
and
push
out
mov
dec
pop
fsubr
arpl
jp
mov
mov
push
jne
xor
dec
test
cmp
cld
aas
idiv
pop
jnp
add
push
mov
shl
cwde
xchg
fnsave
and
and
mov
sub
xor
pushf
pop
fisttp
adc
adc
jle
std
(bad)
jp
pushf
or
pop
push
adc
add
mov
inc
nop
and
les
mov
mov
outs
int3
jecxz
imul
mov
jle
inc
outs
mov
adc
mov
or
ins
cmp
pop
dec
mov
pop
stos
or
push
inc
cli
jb
sbb
or
mov
push
fs
leave
sar
repz
dec
lods
enter
mov
inc
iret
xor
adc
lea
xchg
test
mov
or
les
and
loope
outs
pop
shl
xchg
mov
iret
pop
mov
stos
xchg
popa
mov
and
(bad)
xlat
or
pop
pop
mov
fwait
add
mov
adc
cld
or
push
or
inc
push
icebp
stos
inc
adc
fiadd
mov
jle
xor
cld
adc
(bad)
sti
push
inc
xor
loope
adc
loop
mov
pop
icebp
adc
mov
jg
push
dec
lods
jnp
rol
cmps
pusha
cmps
adc
mov
jl
jb
pop
pushf
or
xchg
mov
popf
xor
lds
fs
push
sub
shl
test
out
leave
mov
movs
test
push
aas
imul
add
inc
imul
lods
cwde
push
inc
inc
push
gs
test
mov
mov
fild
mov
imul
cmp
leave
adc
(bad)
or
test
les
push
fbld
cld
pusha
and
cmps
push
popf
ss
mov
retf
adc
scas
mov
jne
sub
mov
je
cmp
fbld
imul
sbb
js
lahf
inc
mov
rcr
in
adc
das
push
out
push
mov
bound
js
push
lods
aam
dec
repz
mov
inc
loop
sub
mov
sub
sub
mov
cmp
dec
sbb
cmp
xchg
sbb
mov
stos
clc
xchg
es
push
ins
fld
in
sahf
jb
xor
es
lds
lea
outs
sbb
movs
ret
add
fild
push
adc
hlt
sbb
lock
lods
push
jmp
call
sub
mov
mov
jae
stos
sub
inc
jb
pop
sub
dec
cmp
pushf
lahf
pop
inc
loope
addr16
pop
pop
data16
repz
lods
aam
sbb
lock
jo
aaa
sub
rcl
int3
(bad)
push
fstp
dec
mov
les
gs
ret
js
test
sbb
ret
pop
popf
adc
in
cmp
cmp
pop
push
adc
or
sub
or
call
int
push
xlat
(bad)
icebp
mov
xor
out
in
neg
daa
push
nop
xor
pop
xchg
(bad)
ins
(bad)
mov
fsubr
ss
or
sub
pop
xchg
pop
aas
inc
repnz
inc
cmp
aad
jmp
fcom
sub
ss
leave
cdq
shl
out
bound
loopne
data16
outs
sar
out
mov
js
mov
sub
fwait
or
sahf
xor
stos
inc
das
popf
lea
mov
ss
or
xchg
mov
sahf
cmp
cmp
adc
sti
loope
in
and
and
cdq
xor
or
mov
xchg
gs
sti
sbb
clc
sbb
pop
stos
scas
push
out
ficom
inc
push
adc
out
or
arpl
inc
in
gs
adc
cwde
(bad)
jp
mov
sub
aaa
ds
aam
adc
push
xor
dec
pop
cmp
iret
jle
mov
adc
out
mov
into
or
mov
daa
cmp
ror
mov
test
aad
push
repnz
jle
ret
sub
push
mov
cli
and
fmul
icebp
inc
xchg
std
fnstcw
sar
inc
push
xor
fidivr
in
out
cmp
dec
mov
pop
sahf
mul
out
retf
in
jae
repnz
(bad)
lods
jae
jp
and
cmp
cmp
in
add
jo
imul
or
mov
push
mov
pop
sar
xor
das
aaa
cmp
jnp
or
(bad)
lahf
mov
mov
dec
arpl
mov
jmp
lea
int3
inc
cmp
out
jo
inc
out
mov
imul
inc
xor
test
inc
cld
mov
xor
push
jle
push
(bad)
retf
lock
ins
and
(bad)
daa
in
push
retf
sbb
fnstsw
outs
(bad)
cmc
stos
xchg
mov
sbb
(bad)
fadd
(bad)
imul
mov
pushf
and
mov
mov
or
shr
ds
aas
cmps
or
lea
scas
cmp
xchg
cdq
push
repnz
movs
sahf
dec
adc
std
into
xor
fild
out
mov
cmp
idiv
(bad)
sub
dec
cwde
sub
ins
pop
push
mov
xchg
jp
out
sbb
cmp
jmp
lahf
xor
sbb
aam
or
das
out
cmp
aad
push
xlat
sub
push
cmp
mov
ds
aaa
adc
mov
ins
inc
ins
push
push
inc
sbb
dec
adc
push
mov
or
adc
cmp
cld
lods
pop
es
arpl
and
in
inc
rcl
mov
(bad)
loopne
push
out
cmps
pop
cmp
push
ins
(bad)
shr
scas
(bad)
dec
push
js
inc
fadd
sub
jae
lods
shl
lods
aam
jne
and
test
mov
gs
push
mov
test
addr16
dec
sti
and
movs
sahf
mov
scas
dec
cmps
mov
in
inc
ins
aaa
jp
scas
xor
inc
repz
out
das
stos
out
leave
in
jae
xchg
mov
cdq
xchg
inc
jb
dec
(bad)
loop
xor
cmp
shr
js
(bad)
mov
shr
fsubr
inc
in
pop
add
stos
pop
(bad)
aam
cwde
mov
or
jns
cmp
mov
and
add
leave
cmp
xchg
jl
das
and
xchg
into
aad
outs
leave
ror
out
in
fxch
push
cmp
jp
std
jmp
leave
xchg
push
fstp
mov
jmp
mov
sub
leave
mov
push
sbb
jle
xchg
sub
(bad)
mov
pop
stc
in
cmp
cli
jnp
push
push
jae
sub
mov
sbb
mov
dec
ins
nop
in
cmps
mov
jle
jl
push
jb
outs
xlat
shl
stos
lahf
stos
push
jmp
mov
dec
cmps
ja
iret
rcl
lds
inc
sti
mov
cmp
int3
imul
jg
(bad)
cmp
lods
leave
xor
mov
inc
push
mov
icebp
fucomi
mov
sub
pop
push
cmp
xlat
xor
stc
push
jmp
outs
or
sbb
nop
fistp
adc
pop
mov
(bad)
xlat
lea
mov
fsubr
(bad)
xchg
or
fsub
imul
mov
push
mov
jns
(bad)
jp
div
arpl
push
xlat
cmps
outs
pusha
cmc
fidiv
mov
ins
pop
scas
fisttp
jge
jae
mov
xlat
stos
push
jmp
mov
out
movs
mov
out
mov
mov
jmp
popf
js
sti
push
mov
out
push
jg
scas
xchg
std
cmp
aaa
enter
aaa
mov
rcr
xchg
std
mov
xor
pop
inc
fldcw
stos
fild
inc
imul
or
jle
mov
xchg
nop
std
push
mov
mov
loopne
mov
sbb
(bad)
mov
mov
jno
hlt
cli
xchg
outs
rcl
mov
pop
mov
lahf
in
les
lds
sub
push
sub
jbe
inc
push
mov
loop
jbe
icebp
mov
mov
aas
sub
gs
iret
ja
mov
mov
xchg
and
(bad)
aad
stc
xchg
push
rol
xor
in
sbb
popa
arpl
punpckldq
push
sti
ror
scas
sbb
add
cmp
sbb
shr
xchg
lods
cmp
jns
sbb
enter
mov
jne
jg
sbb
call
jmp
test
dec
sbb
inc
sub
(bad)
ins
mov
xor
mov
pop
add
inc
test
and
push
and
(bad)
inc
mov
sahf
xlat
in
loope
lods
sub
sar
pusha
loope
add
jae
mov
push
jecxz
mov
sub
push
jno
inc
ins
xor
jne
push
jno
ret
add
push
inc
sub
jl
inc
mov
ss
sahf
sub
rcl
in
fistp
clc
xor
ins
fisttp
scas
mov
pop
and
(bad)
scas
movs
test
cmp
idiv
outs
mov
in
cmps
add
fnstsw
pop
push
mov
sti
retf
sub
test
mov
mov
mov
xchg
out
cmp
retf
sahf
retf
adc
scas
(bad)
fbstp
pushf
sbb
dec
test
xchg
jmp
call
jmp
sbb
adc
lods
in
mov
pop
rcr
std
int
jle
xor
mov
xchg
or
push
mov
imul
gs
jmp
in
mov
xchg
(bad)
mov
out
mov
dec
das
mov
mov
hlt
push
ds
pushf
mov
fld
enter
xor
pop
inc
and
(bad)
aas
adc
and
icebp
mov
push
data16
cwde
xchg
les
push
jo
lahf
cmps
js
dec
mov
loop
jae
push
lods
std
cmp
push
lahf
pop
adc
cli
mov
imul
sub
xlat
and
call
int3
call
daa
push
fnstsw
fnstcw
(bad)
dec
in
repnz
int3
mov
mov
lds
addr16
lahf
jle
shl
mov
jnp
pop
push
daa
fs
test
push
jnp
dec
mov
out
(bad)
push
in
out
pop
lds
pop
pop
ret
push
ins
jmp
dec
mov
std
sbb
iret
out
ret
push
in
dec
faddp
push
in
pop
jg
push
in
ja
rcl
pop
icebp
push
pop
icebp
aaa
cmp
mov
iret
std
sbb
xchg
xor
mov
or
dec
mov
js
jle
pushf
imul
mov
neg
(bad)
in
xor
out
mov
shl
push
push
mov
cmp
mov
xor
ficomp
xchg
icebp
fidiv
add
fwait
in
mov
adc
enter
repnz
mov
or
jmp
push
jae
retf
pop
movs
sbb
pop
and
adc
mov
test
out
cmp
jle
pop
push
lods
and
push
mov
call
(bad)
mov
out
stos
add
pop
cmps
xchg
sub
mov
xchg
xchg
xor
jl
hlt
lods
call
xlat
imul
loopne
push
lea
or
retf
cmp
inc
in
(bad)
loopne
daa
(bad)
cmp
push
cmp
loopne
and
adc
nop
xor
frstpm(287
mov
fimul
add
dec
jne
hlt
mov
and
jmp
cmp
sbb
jo
xlat
pop
(bad)
ss
pop
mov
rcr
mov
ja
mov
ret
icebp
adc
loopne
jmp
add
jne
sar
jg
in
lock
in
mov
mov
out
dec
mov
pop
es
sub
rcr
in
test
push
shl
ror
ss
add
loopne
sahf
int
and
sar
push
add
ret
xor
xchg
loop
and
and
shl
icebp
mov
mov
push
inc
bound
adc
sbb
inc
test
inc
or
xchg
icebp
arpl
out
mov
xchg
cmp
jge
hlt
mov
inc
bswap
aad
sub
mov
cdq
cmp
std
data16
pop
xor
fcom
fsubr
mov
iret
inc
daa
aam
or
std
jge
adc
push
dec
xchg
push
ret
test
push
push
test
xlat
out
pop
xor
out
mov
mov
(bad)
rcl
hlt
jnp
sub
jns
jbe
adc
aas
ins
mov
xchg
jge
push
fisub
push
cwde
imul
out
adc
cwde
jo
sbb
inc
scas
ja
fdiv
lock
popa
jecxz
adc
push
lds
adc
call
iret
stos
int3
les
and
call
cld
mov
inc
retf
in
adc
das
inc
cdq
scas
mov
pushf
adc
or
fsub
mov
pusha
stos
dec
pop
outs
jns
pop
call
xlat
jle
xchg
repz
push
sub
xor
loopne
sbb
in
bound
inc
add
loopne
aas
retf
inc
cmc
dec
int
jmp
mov
and
aaa
adc
mul
pop
retf
out
xor
hlt
and
dec
jmp
loop
adc
sub
inc
xor
push
lods
jns
mov
loopne
mov
add
inc
or
shl
push
sub
adc
ficom
fdiv
cmp
inc
jge
jmp
or
sti
and
fild
rcl
test
test
mov
out
xchg
cmc
scas
xchg
out
inc
mov
int
jo
lds
pop
shl
popa
fisub
scas
in
iret
cmp
cld
pop
sub
dec
shl
or
imul
add
mov
mov
jns
push
inc
jmp
in
lock
movs
mov
sar
(bad)
push
pop
fsub
dec
icebp
sub
outs
in
inc
out
jb
jecxz
adc
pop
jle
popf
retf
test
cdq
mov
dec
lds
sti
push
pop
std
out
in
outs
popa
cli
pop
add
xor
jmp
test
and
fild
xlat
jb
dec
cmps
test
add
push
repz
mov
mov
(bad)
jmp
mov
sbb
cs
fucom
cwde
cmp
sbb
jmp
mov
mov
cld
test
dec
int3
cmps
stos
inc
cmps
(bad)
jmp
out
stos
inc
sbb
inc
cmc
push
push
mov
into
jb
or
call
and
(bad)
aad
xor
push
call
js
push
int3
pop
shr
xor
jbe
fistp
test
std
sbb
(bad)
mov
push
push
or
or
stos
mov
ins
mov
movs
jecxz
imul
xchg
(bad)
jle
fwait
xchg
(bad)
jno
add
loope
dec
xor
lahf
clc
xor
pusha
cmp
fbstp
xor
dec
sub
cmp
mov
dec
(bad)
push
cmp
adc
aas
out
pop
lahf
xchg
mov
push
outs
repz
dec
and
out
or
or
loopne
and
push
jmp
xchg
jle
ss
movs
rol
pop
ds
movs
fdiv
ret
adc
sub
ds
push
gs
sar
leave
pop
movs
stos
dec
push
push
lods
rcl
mov
xchg
jle
jl
mov
mov
or
push
imul
push
icebp
movnti
jae
pushf
jae
in
test
and
mov
or
xor
xchg
pop
dec
dec
or
cmp
mov
sti
pop
mov
cmp
repnz
ret
lods
mov
sbb
gs
(bad)
(bad)
out
inc
int3
jl
mov
jnp
dec
fsub
adc
retf
adc
and
push
mov
pop
movs
call
jg
inc
add
mov
push
es
mov
icebp
repz
enter
or
xchg
mov
dec
out
cmp
mov
push
xchg
(bad)
cld
test
adc
adc
ins
nop
repnz
xor
scas
cmp
movs
jmp
pop
xchg
jb
(bad)
dec
cmp
ss
inc
fsub
jno
inc
push
hlt
movs
inc
mov
iret
pop
mov
imul
push
and
xor
in
stos
pop
cmc
repz
mov
scas
jl
xchg
mov
xchg
lods
mov
sar
rol
push
or
mov
jbe
add
loopne
adc
fild
hlt
add
cld
jbe
inc
xor
out
(bad)
in
jbe
ds
pop
ror
cmps
daa
jae
mov
js
ja
inc
or
sahf
pop
ret
and
mov
enter
cmc
idiv
lods
out
push
fidiv
xor
(bad)
fwait
(bad)
mov
sbb
push
into
pop
pop
jp
jmp
pop
das
fs
repz
cdq
cmp
xor
dec
cmc
(bad)
add
(bad)
not
jae
clc
cmc
mul
(bad)
cmp
or
cmps
add
sbb
sub
sti
pop
outs
fidivr
movs
das
mov
jno
and
mov
mov
adc
pop
inc
xor
jae
sub
cmp
cmp
stos
(bad)
push
inc
xchg
push
test
inc
sahf
dec
jo
adc
test
pop
(bad)
rcr
jns
cmp
or
pop
mov
repnz
pop
sub
mov
or
xlat
push
pop
out
ds
cld
jl
xor
add
lea
loope
out
ror
cld
in
ror
outs
xchg
leave
jae
or
leave
push
pop
mov
inc
mov
pop
sub
loop
mov
hlt
stos
ins
sub
fucomp
fisubr
imul
ret
pop
les
adc
mov
inc
shl
fcom
push
pushf
mov
icebp
lds
cs
jnp
cdq
sbb
inc
fld
fpatan
int
ss
sbb
sub
shr
or
loopne
iret
cmp
cmp
mov
pop
ins
movs
fdiv
add
xchg
jge
into
ret
(bad)
gs
pop
cmp
jge
shr
sbb
jge
mov
cmp
punpcklbw
push
or
pop
mov
imul
outs
stc
(bad)
xchg
cmc
fnsave
cmp
push
int3
hlt
jecxz
adc
push
shl
clc
fisttp
addr16
add
sahf
mov
loopne
pop
inc
add
or
loope
inc
add
xlat
pop
lock
mov
mov
dec
add
aas
push
adc
mov
inc
add
ret
(bad)
or
jae
and
fdiv
and
and
dec
test
into
mov
pop
arpl
and
dec
fucomp
out
jmp
pusha
mov
xchg
aas
(bad)
(bad)
or
js
pop
jnp
loope
pop
sti
aaa
xor
xchg
xor
mov
(bad)
sbb
push
inc
xor
jns
popa
popf
inc
sbb
sbb
jmp
push
mov
std
outs
mov
dec
inc
dec
or
dec
xchg
inc
(bad)
dec
icebp
shr
cmp
jg
mov
mov
frndint
or
push
rol
mov
add
dec
enter
mov
push
mov
add
mov
int
push
call
jnp
add
(bad)
not
and
sti
aam
ds
dec
jl
or
out
mov
push
inc
xchg
push
adc
std
jmp
out
xchg
jne
addr16
std
les
xor
imul
lods
dec
test
lock
cmp
in
mov
mov
xchg
out
pop
stc
sbb
xchg
out
adc
and
pop
xor
xchg
out
push
jns
mov
jmp
jns
es
cmp
sub
iret
jecxz
inc
in
(bad)
jmp
and
pushf
call
cmp
mov
iret
add
mov
jp
add
movs
pop
jnp
popf
and
ja
(bad)
icebp
jle
stos
inc
and
mov
push
pop
sbb
dec
mov
loop
sub
and
pop
adc
hlt
inc
or
sbb
cmp
adc
js
or
push
cwde
xor
lea
ins
ins
dec
js
movs
inc
push
jo
leave
fmul
adc
call
fisttp
(bad)
and
inc
lods
pop
mov
dec
cmp
loop
pop
and
movs
loop
bound
sub
mov
xor
fld
lods
jnp
lock
cmps
scas
xchg
dec
(bad)
mov
dec
stc
ja
xchg
hlt
cmp
popa
mov
cmp
jns
adc
minps
ins
sub
sbb
pop
(bad)
(bad)
or
aas
cwde
mov
push
movs
xchg
movs
jecxz
outs
xchg
in
(bad)
and
xor
cwde
mov
inc
dec
xor
sar
adc
sbb
fnsave
jge
mov
imul
jp
into
mov
rep
and
xchg
in
mov
mov
inc
int3
mov
jge
push
lea
pop
and
or
push
push
fcomip
cmc
nop
in
add
addr16
mov
jl
in
into
xor
pushf
inc
xchg
jb
jmp
out
xchg
push
push
cld
xchg
enter
arpl
mov
loopne
lods
jb
sti
mov
cmp
fild
iret
dec
mov
(bad)
xor
call
lea
outs
push
fild
mov
fwait
out
(bad)
sub
dec
not
xchg
(bad)
(bad)
mov
lods
inc
cmp
enter
out
(bad)
push
shl
xor
cmp
test
dec
out
cmp
sub
inc
prefetchwt1
push
bound
mov
xchg
cmp
push
xor
xor
ficomp
in
adc
push
and
xchg
ret
jae
mov
and
add
xor
(bad)
fisubr
(bad)
ja
pop
mov
imul
sub
pop
scas
pop
div
inc
xor
scas
cmp
push
sub
jnp
cmps
and
jae
sahf
out
stos
pop
pop
xchg
shr
mov
in
pop
in
imul
in
pop
fldcw
mov
fs
mov
in
bound
mov
mov
mov
mov
xor
xchg
scas
clc
push
std
cmps
inc
out
fistp
pop
out
cmps
fadd
sub
pushf
cmp
test
loop
xchg
adc
gs
jnp
pop
(bad)
xchg
ficom
out
push
out
jge
mul
std
and
mov
xchg
gs
ror
mov
pusha
stc
fld
fist
jecxz
popa
int3
int3
retf
sbb
ret
(bad)
(bad)
lods
ds
out
sbb
test
mov
mov
or
rcl
mov
xor
icebp
pop
add
or
loopne
pop
stos
cmp
je
adc
xchg
ret
dec
jo
dec
(bad)
fldenv
jle
out
cld
pushf
or
or
je
jno
xchg
pushf
push
ja
leave
aam
mov
ret
clc
xchg
mov
pop
test
int3
popf
sti
add
inc
js
cmp
fld
mov
(bad)
aam
scas
sbb
int
not
ret
or
mov
sets
cmc
xor
xor
icebp
fnstenv
push
xchg
sub
pop
popf
adc
out
in
cmp
cmp
movs
into
or
xlat
lahf
test
sbb
push
push
loopne
jp
jge
in
stc
je
push
sub
push
mov
jo
inc
xchg
dec
bound
repnz
inc
ja
ds
mov
test
icebp
fmul
out
mov
pop
xor
jmp
jb
pop
fidiv
dec
ret
xor
lds
test
sub
jno
fs
ror
lahf
nop
clc
int3
jl
mov
in
pop
sbb
cmc
dec
ins
xchg
mov
cwde
imul
mov
lods
mov
sbb
test
loopne
sbb
xor
add
daa
pop
cmp
je
shl
jmp
out
jecxz
vpsllw
ret
pop
mov
jl
or
mov
cmp
jl
sbb
cmps
pop
lea
mov
fidivr
je
xchg
es
pop
stos
inc
ds
xlat
jne
rcl
imul
bound
push
int3
and
jbe
in
jg
cld
push
fild
mov
jecxz
int
std
icebp
fcmovbe
mov
mov
aaa
mov
sbb
aad
(bad)
mov
ja
in
(bad)
cmp
mul
mov
push
in
rcr
mov
stos
cmc
popf
dec
xchg
aad
jne
mov
stos
das
inc
push
imul
pop
xlat
aaa
and
pop
rcl
and
mov
mov
pop
lods
xor
xor
pop
mov
jmp
dec
and
loopne
cmp
xchg
outs
in
add
push
pop
dec
scas
sub
das
jg
jae
lahf
imul
sahf
repz
int3
push
(bad)
mov
sub
mov
and
scas
add
and
retf
sub
imul
fs
jo
dec
mov
or
mov
push
in
sar
aaa
jecxz
jb
dec
enter
xor
jmp
nop
cvtpi2ps
repnz
ficomp
lods
mov
push
mov
sbb
pop
cmps
add
cmc
xor
and
bound
daa
lods
es
sti
mov
adc
repnz
xchg
adc
cmp
add
push
(bad)
jae
pop
fbld
mov
xchg
ret
cmp
pusha
or
push
mov
fnstenv
fisub
inc
xor
push
das
xchg
mov
mov
pop
les
jno
mov
(bad)
aam
std
adc
xor
or
sbb
repz
mov
dec
xchg
pop
fstp
fidivr
mov
lds
mov
jmp
lahf
ret
push
loope
push
mov
mov
cmp
xchg
xchg
push
xchg
push
add
ror
imul
in
in
dec
ds
psrad
xor
inc
fwait
adc
adc
xchg
(bad)
xchg
adc
adc
pop
int3
arpl
cli
hlt
pop
ins
mov
push
lock
push
jmp
xor
lock
pusha
cmp
push
push
ins
mov
in
pop
arpl
shl
fcomp
dec
mov
(bad)
outs
(bad)
retf
ret
dec
and
ror
pop
loope
add
adc
xor
out
std
jno
ror
mov
pop
mov
pop
jmp
(bad)
in
out
std
imul
mov
cs
(bad)
fwait
scas
or
push
mov
xchg
test
sti
repz
jns
mov
out
das
mov
les
adc
cli
xchg
cmps
dec
getsec
mov
jne
ret
dec
icebp
loope
push
aad
sbb
cmp
dec
out
test
lods
cmps
sbb
std
mov
repz
pop
pop
clc
mov
mov
sbb
pop
movs
jnp
outs
fstp
in
cs
jge
std
jns
mov
outs
sub
lahf
outs
sbb
xchg
(bad)
outs
das
movs
push
sub
sbb
aaa
mov
add
(bad)
fld
stc
ins
in
add
nop
daa
imul
out
addr16
inc
pop
(bad)
(bad)
add
(bad)
hlt
in
cdq
ror
dec
retf
retf
mov
pop
(bad)
stos
push
data16
mov
mov
ret
pop
dec
jle
inc
je
or
cmps
push
out
mov
in
call
cmp
cmp
mov
aam
jnp
aaa
mov
sbb
test
add
fld
inc
xor
std
cmps
ror
test
inc
jg
enter
test
sbb
aam
xlat
pop
nop
and
cmc
inc
loopne
sub
pop
mov
mov
idiv
sub
push
inc
add
int
jo
cmps
push
ds
imul
nop
mov
pop
cmp
cld
mov
sahf
(bad)
cmp
sub
xchg
push
dec
pop
jno
push
(bad)
jmp
xchg
fwait
inc
enter
xchg
jae
pop
cmp
pop
jge
movs
inc
jecxz
adc
sub
out
(bad)
into
push
sub
or
push
jns
xor
les
aam
sbb
add
mov
arpl
repz
ret
stc
sub
push
adc
add
fistp
adc
mov
ds
inc
and
imul
lahf
lods
mov
cmc
scas
ss
repz
fdivp
rol
xor
leave
mov
ja
mov
xor
imul
js
add
not
cli
jbe
les
sbb
les
inc
cwde
pop
repz
and
clc
in
mov
jbe
pop
addr16
lods
push
mov
(bad)
cmc
clc
xchg
push
(bad)
pop
inc
fist
fidivr
scas
mov
mov
(bad)
cli
mov
lahf
jne
pop
pop
js
adc
mov
leave
jecxz
cmp
push
sub
xor
xchg
xor
ja
and
push
(bad)
fs
inc
xchg
xchg
mov
adc
enter
inc
inc
dec
add
cdq
jnp
enter
xchg
xchg
fstp
mov
into
shr
mov
gs
add
in
xchg
scas
mov
dec
test
cdq
mov
fld
stos
mov
and
adc
fsubr
jmp
mov
jl
sbb
push
out
jecxz
aaa
sbb
jbe
xchg
jecxz
loope
dec
retf
or
iret
aaa
lea
sub
lds
mov
jne
aaa
push
xchg
loope
mov
dec
push
mov
(bad)
mov
sbb
(bad)
and
push
int
imul
sub
repnz
shl
imul
or
idiv
js
mov
iret
cmp
mov
push
fnsave
mov
mov
mov
pop
(bad)
fcos
mov
jmp
jns
jnp
dec
adc
jmp
add
cwde
pop
(bad)
repz
sbb
imul
cmp
pop
jmp
mov
(bad)
mov
xor
mov
push
adc
mov
xchg
mov
outs
pop
pop
out
jne
or
mov
xchg
xlat
inc
popf
daa
gs
lods
mov
loopne
aad
jno
ss
ror
scas
xchg
xchg
xlat
mov
mov
mov
lds
jae
jmp
dec
fild
test
je
inc
scas
xor
hlt
ret
pop
scas
stos
fistp
mov
pop
xchg
imul
inc
iret
mov
mov
fdivr
or
or
mov
iret
fmul
test
loop
out
pop
adc
jmp
and
mov
imul
std
(bad)
fld
inc
(bad)
std
(bad)
adc
mov
into
iret
jp
xchg
add
es
shr
dec
adc
pushf
add
mov
pop
mov
mov
cmc
add
adc
inc
call
sub
sti
gs
xchg
pop
repz
mov
les
inc
inc
movs
rcl
loope
xchg
lock
sti
lods
xchg
adc
jmp
in
aad
cmp
iret
mov
jbe
inc
movs
(bad)
sub
ja
pop
ja
(bad)
fisubr
loope
es
nop
es
xor
or
and
lea
push
in
call
js
or
out
cli
xchg
xor
imul
push
mov
dec
and
adc
les
shl
mov
sahf
lods
push
jp
push
in
adc
lahf
fist
not
sub
arpl
ret
lock
push
jno
fadd
jmp
or
mov
inc
scas
adc
daa
pop
mov
clc
adc
dec
out
pop
je
cmp
enter
push
mov
ds
out
cs
jle
mov
hlt
mov
adc
call
adc
pop
mov
inc
inc
cmps
inc
mov
push
stos
jo
fmul
aam
retf
frstor
push
call
pop
cmp
mov
mov
push
aad
test
mov
icebp
cmp
rcl
mov
push
in
imul
aad
mov
in
and
xchg
sbb
stos
loop
jp
mov
or
sub
xor
fist
cmc
ins
jnp
hlt
mov
mov
into
xchg
xor
retf
mov
test
jne
pop
jno
or
test
inc
test
out
popa
lods
mov
cmp
out
retf
or
test
cmp
xchg
fwait
cmp
dec
xor
(bad)
repnz
je
push
push
pop
cmc
jp
neg
jmp
push
out
sbb
(bad)
mov
push
(bad)
xor
inc
loope
cs
pop
xor
mov
mov
aaa
and
or
sub
in
loop
mul
xchg
push
aas
xlat
jbe
loop
mov
into
adc
lahf
cmp
fstp
cwde
fst
ss
int3
push
mov
sahf
stos
fwait
in
scas
jl
leave
in
lods
jbe
cmp
(bad)
(bad)
sbb
call
mov
pop
fsubr
mov
fist
pop
popa
ins
push
push
pushf
xchg
mov
jmp
mov
in
pop
jl
jmp
js
mov
jl
xor
in
inc
ds
cmp
mov
push
mov
cld
mov
neg
sub
out
mov
les
lods
movs
shl
dec
dec
(bad)
ds
pop
mov
popa
ja
and
repnz
sub
mov
cwde
dec
push
sbb
add
mov
pop
mov
jmp
or
mov
icebp
aaa
sbb
out
push
or
icebp
push
xor
dec
loope
fsubr
aad
push
or
out
jecxz
lods
sub
ret
mov
mov
out
and
xlat
mov
xchg
inc
sub
stc
movs
fisttp
pop
sbb
mov
cmp
jg
lds
es
icebp
jle
xlat
pop
fist
repz
outs
rcl
sbb
sahf
xor
imul
enter
pop
repz
jmp
popf
lds
jb
xchg
pushf
cdq
in
mov
cdq
gs
sub
repnz
pop
mov
out
add
(bad)
push
scas
call
xchg
jno
mov
pusha
mov
xor
inc
cs
pop
in
lds
das
cmps
nop
ror
out
icebp
gs
sub
jg
into
fistp
out
xchg
jo
mov
fidiv
jb
js
mov
cmp
call
inc
push
addr16
test
mov
push
push
repnz
push
pop
ret
fstp
sbb
out
outs
stos
and
fisubr
popa
push
lods
aad
cmp
pop
dec
xchg
rcr
or
jge
push
add
push
sub
push
sub
bnd
aad
sub
push
std
inc
mov
popa
and
jmp
lods
add
mov
xor
std
leave
jp
jmp
outs
(bad)
push
dec
ins
call
mov
(bad)
push
push
cmp
retf
ja
ja
cdq
jae
rol
enter
jae
sbb
in
mov
std
in
fsub
outs
push
mov
mov
out
imul
jne
sub
bound
adc
jle
dec
xor
jo
mov
loope
adc
loope
adc
xchg
aas
inc
cmp
in
cmp
jge
and
aam
add
sar
inc
or
or
jmp
sub
adc
stos
mov
dec
pop
mov
fwait
push
or
or
add
jmp
xor
inc
repz
ret
push
or
sbb
push
or
or
outs
push
sub
out
idiv
pop
push
sub
sub
or
(bad)
jle
push
or
pop
push
or
inc
aad
jne
xchg
push
std
jge
pop
fdiv
add
stos
add
fdiv
add
or
mov
sbb
fcmovnb
lods
add
punpcklbw
dec
jno
in
fld
inc
dec
les
scas
fisttp
sbb
jo
sub
adc
pop
fiadd
push
add
(bad)
stc
rcl
sti
mov
fs
cdq
cmp
not
dec
retf
dec
xchg
pusha
sub
jp
jae
stc
push
jbe
jle
push
sbb
xchg
js
aaa
ja
lahf
leave
dec
aad
call
mov
nop
or
test
xchg
push
into
cmp
and
imul
pop
test
jne
cmps
jg
cmp
inc
xchg
push
pop
adc
jo
dec
inc
test
jle
cmp
jmp
popa
cmp
cmp
ror
mov
loop
loop
sahf
pop
movs
test
sub
xchg
ja
xor
mov
xor
(bad)
cld
inc
jmp
or
mov
cmps
shl
test
ja
xchg
stos
and
test
push
retf
adc
or
mov
push
ret
les
xor
pusha
ja
lods
cmp
inc
jmp
cmp
xlat
dec
imul
adc
in
cmc
push
lds
dec
hlt
shr
das
cmp
int3
cwde
test
stos
mov
cld
dec
rcr
(bad)
bound
ret
dec
mov
loop
xor
std
sub
(bad)
call
push
jl
ja
int3
iret
sub
pop
mov
aas
lods
das
push
adc
sbb
mov
sub
dec
push
inc
pusha
iret
not
xchg
fadd
mov
popa
in
shl
int3
scas
mov
mov
push
mov
or
aad
sahf
adc
popf
sbb
adc
sub
inc
sub
mov
jl
mov
aaa
outs
out
ret
mov
aas
aaa
push
push
pop
sbb
rcr
push
repnz
mov
cld
xchg
xchg
pop
sbb
fsubr
push
pop
ror
test
add
jae
int
(bad)
fisubr
lods
mov
mov
and
repz
shl
or
out
mov
pop
enter
push
mov
ret
lock
cmp
test
out
sub
fldcw
jne
aaa
jg
icebp
sub
js
cwde
mov
dec
pop
out
jp
dec
jbe
ins
push
rcr
je
mov
fbld
je
ins
push
jp
xchg
xchg
repz
js
fisubr
outs
out
mov
(bad)
push
iret
cmps
mov
ins
mov
ins
mov
mov
stos
cmp
fdivr
dec
clc
cmc
neg
test
or
pop
mov
imul
cli
ins
retf
inc
cmps
popa
xchg
jae
sahf
ja
lods
rcr
(bad)
in
pop
out
mov
cmp
mov
mov
xchg
dec
sbb
out
ds
mov
(bad)
(bad)
out
lds
cmp
aas
cmp
fidiv
xor
mov
(bad)
not
jo
xchg
jp
pusha
mov
sub
test
dec
les
push
(bad)
jp
mov
mov
(bad)
mov
in
arpl
mov
fwait
aas
test
cwde
dec
rcr
in
push
mov
(bad)
shl
not
jns
movs
ret
mov
fimul
repz
jmp
fwait
mov
js
gs
or
jg
inc
xchg
pop
add
sahf
mov
push
push
call
and
mov
jno
test
pop
push
mov
fstp
and
bound
and
imul
ja
lods
lahf
je
cmp
pusha
(bad)
mov
sub
neg
aam
dec
js
xor
mov
and
test
push
cld
adc
call
sbb
and
dec
inc
jge
pushf
into
xor
adc
ret
xor
ret
jmp
lds
inc
mov
loop
popa
movs
lea
mov
dec
sub
retf
or
jnp
repz
pop
daa
ret
mov
adc
xor
xor
or
cmp
and
push
inc
mov
pop
add
iret
push
in
in
leave
aas
sbb
xor
pop
jns
cld
mov
xchg
or
adc
scas
xchg
or
test
dec
cwde
jbe
jge
fldcw
xor
neg
outs
jge
xor
jmp
pop
push
cmp
mov
shl
xor
mov
jg
xor
(bad)
jl
push
hlt
popf
movs
lods
int3
push
scas
inc
pop
pop
neg
stos
shr
xlat
scas
adc
loop
add
cdq
popa
dec
gs
clc
aad
inc
(bad)
js
xchg
test
icebp
and
aas
test
(bad)
faddp
les
fstp
inc
inc
std
int
and
aam
ins
inc
inc
mov
xor
nop
push
pop
repz
enter
sub
jmp
nop
cmp
push
xor
push
shl
cmp
jno
cmp
mov
cmc
ror
lahf
aas
xor
ret
pop
jb
int
mov
mov
jne
repnz
inc
stos
mov
or
jmp
popf
mov
mov
daa
jmp
or
add
outs
cmps
xchg
sbb
test
push
stc
out
mov
sbb
aas
sbb
mov
rol
jmp
xor
rol
cmp
push
test
in
sahf
pop
(bad)
push
je
pusha
(bad)
fcomp
pop
mov
in
cmp
ja
test
mov
sub
(bad)
and
dec
jge
pop
and
adc
mov
dec
mov
inc
pop
xor
test
xor
push
fwait
mov
sti
mov
enter
mov
pushf
not
call
xlat
lahf
inc
fs
sahf
inc
fs
adc
cdq
das
cmp
enter
and
adc
xchg
cdq
test
lahf
inc
fs
fbld
xor
int3
jmp
xor
push
inc
data16
icebp
test
add
out
jne
adc
ret
push
fcom
pop
jnp
out
loopne
inc
pop
push
cmp
dec
vlddqu
xchg
xor
ins
or
xchg
popa
gs
add
push
xchg
movs
popf
out
inc
enter
jnp
enter
int
mov
retf
ins
adc
mov
test
fcmovb
idiv
inc
xor
xchg
xchg
adc
pop
pop
pop
jns
movs
dec
mov
bound
dec
std
iret
imul
mov
dec
js
mov
loopne
mov
cmp
test
mul
shl
test
ss
mov
in
pop
in
repz
mov
xlat
adc
stos
mov
xchg
mov
mov
shl
push
add
outs
mov
mov
dec
jbe
lahf
xchg
(bad)
lock
push
retf
sub
data16
mov
jae
mov
adc
mov
mov
popa
mov
cmp
dec
stos
mov
mov
adc
add
imul
mov
not
jecxz
fld
lea
dec
mov
mov
call
pusha
pop
mov
bound
add
adc
cmps
mov
add
cmp
std
pop
push
xor
inc
scas
push
or
push
cmc
mov
nop
bnd
les
sbb
push
stc
xchg
fsubr
call
cmc
sub
mov
cmp
std
and
js
mov
sbb
sbb
push
lock
mov
scas
xchg
add
scas
scas
xchg
mov
adc
mov
in
int3
push
test
inc
xor
mov
sub
mov
je
or
lds
or
or
pusha
jae
adc
jb
inc
cmp
adc
and
pop
pop
and
mov
aad
xor
jp
pop
je
pop
mov
push
push
sbb
cwde
jnp
mov
cmp
inc
jecxz
shr
jb
ror
push
push
or
sub
cmp
or
fs
outs
lahf
jg
xchg
fisub
cmp
loope
sub
jns
xor
push
call
cmps
loop
into
sbb
mov
arpl
sar
repz
test
aas
jnp
(bad)
lods
pop
fisttp
mov
jl
push
mov
jae
cli
fld
fcmovnb
je
call
neg
mov
xor
mov
xchg
add
in
push
dec
lahf
mov
pop
mov
push
in
and
adc
repnz
fidivr
gs
xchg
nop
loope
test
mul
pop
mov
enterw
idiv
int3
movs
aad
mov
xchg
cmp
cmps
pop
es
add
jns
imul
mov
fadd
inc
shl
fcmovne
sbb
push
iret
mov
(bad)
jp
movs
ins
call
std
mov
and
clc
cs
add
rcr
or
add
and
jmp
pop
adc
pop
bound
dec
jecxz
and
cmp
dec
push
push
xor
push
mov
xor
push
sbb
mov
xor
jno
jmp
movs
mov
out
ror
movs
inc
mov
fsubrp
and
gs
add
stos
loope
dec
outs
xchg
inc
int3
inc
cwde
cli
scas
xchg
loop
cmp
(bad)
push
hlt
cmp
ret
sahf
dec
loop
das
jp
data16
push
inc
xchg
mov
fimul
inc
(bad)
aad
rol
ror
pop
ja
jp
mov
lea
xchg
loop
rol
scas
dec
js
loope
push
or
jbe
sti
xchg
icebp
inc
xor
mov
sub
call
add
sub
inc
jmp
pop
loope
cdq
ja
outs
mov
cmp
jle
loop
sub
push
int3
adc
xchg
mov
out
mov
inc
sbb
dec
dec
mov
mov
fs
pop
(bad)
push
lahf
pop
sar
push
pop
mov
and
adc
cdq
cwde
stos
ja
(bad)
dec
aad
pop
nop
mov
stos
mov
nop
mov
push
cmp
es
mov
inc
dec
jns
sbb
mov
pop
and
rol
fs
mov
imul
add
jge
daa
je
imul
push
arpl
mov
jno
sub
jmp
mov
or
and
test
out
cld
scas
in
or
add
(bad)
mov
cmp
xchg
cmc
cld
inc
jbe
pop
mov
ja
xchg
jne
mov
push
out
aas
les
jp
stos
stc
mov
ins
pop
cmps
ret
cmps
addr16
sbb
sbb
clc
int
add
fisub
jne
lods
das
ins
mov
pop
loope
stos
mov
mov
aam
ds
ja
mov
arpl
sbb
sbb
jae
ret
clc
adc
(bad)
aas
jge
(bad)
(bad)
fst
sbb
dec
out
loop
into
sbb
mov
mov
cmp
cmps
or
pop
push
cli
xor
pop
loopne
pop
inc
pop
enter
mov
or
loop
inc
cmp
mov
fisubr
xchg
(bad)
add
retf
aaa
pop
push
fsqrt
cld
xchg
add
into
sbb
in
imul
mov
jle
cwde
sub
cld
rcr
into
sbb
mov
je
mov
ins
cs
loope
shl
rcr
jmp
cwde
movs
push
(bad)
push
(bad)
cli
cmp
sbb
out
int3
push
cdq
in
jecxz
jnp
gs
arpl
pop
mov
adc
jno
lods
in
(bad)
pop
mov
pop
addr16
scas
loop
sti
ret
retf
fidivr
cdq
in
sbb
repz
mov
push
inc
cmps
psubsw
ret
or
or
popf
out
int3
sbb
imul
jae
aam
into
mov
mov
sbb
jns
cmp
push
push
test
fs
sbb
dec
mov
push
loope
ins
inc
dec
cmp
test
and
int3
repnz
out
lods
aam
sbb
call
pop
jle
sub
jmp
std
leave
bnd
push
cmp
push
aam
aas
xor
leave
fnsave
call
lahf
das
mov
and
pop
mov
mov
out
sahf
data16
retf
test
lahf
pop
pop
fdivr
outs
pop
mov
mov
sub
ret
mov
inc
jbe
xchg
es
jae
mov
lods
mov
sbb
dec
test
or
dec
fmul
test
cs
in
(bad)
cmps
push
ins
cld
push
rcr
jl
das
sbb
retf
pusha
add
sub
test
cmp
repz
cmp
scas
adc
ror
test
adc
stc
and
mov
ret
pop
cld
adc
ins
test
int3
repnz
in
mov
pop
std
jmp
idiv
stos
into
xor
push
out
jg
push
out
pop
jne
mov
xlat
jo
stc
imul
jmp
jl
push
popf
push
mul
stos
push
mov
div
inc
pop
inc
int3
aad
fcomi
aas
daa
retf
xchg
lods
push
xor
outs
sub
jnp
or
es
int
mov
mov
cdq
jnp
scas
cmp
icebp
(bad)
(bad)
jp
pop
sbb
pop
mul
pop
vmwrite
jno
out
mov
std
jmp
(bad)
ja
mov
jecxz
sbb
push
pop
(bad)
mov
loope
cmp
out
aas
out
jne
cmp
sbb
mov
ins
loop
mov
push
xor
test
add
add
xchg
xor
lods
sahf
xchg
add
push
ss
and
ins
sub
mov
sbb
ret
js
cwde
stos
in
repz
fwait
clc
(bad)
in
inc
aaa
fadd
repnz
aas
loope
ds
daa
sbb
inc
mov
mov
sti
or
nop
adc
sbb
xchg
jmp
inc
jne
(bad)
aaa
jo
jg
push
mov
test
mul
loope
pop
inc
push
cwde
leave
add
add
mov
pop
(bad)
sti
pop
xchg
sar
ror
or
paddq
pop
fld
jne
sbb
sub
(bad)
loopne
les
icebp
idiv
ja
loope
fsubp
mov
mov
sbb
fidivr
loope
adc
sar
ret
cmp
jecxz
test
jecxz
dec
jns
out
lahf
jno
add
les
std
es
mov
les
sti
es
mov
mov
loope
aaa
sub
adc
jg
in
and
mov
stc
cli
mov
shr
pop
cwde
repnz
lahf
add
scas
int
fwait
stos
xchg
out
loope
das
cmp
imul
call
pop
mov
jmp
into
imul
pop
test
test
fld
aam
mov
sub
daa
sub
xchg
ror
push
jle
push
jbe
in
fist
pushf
iret
sub
outs
jnp
mov
xor
and
pop
or
cdq
cmps
(bad)
loopne
jae
shl
out
js
ret
rcl
in
fild
mov
out
mul
cmp
loope
dec
jp
(bad)
mov
xchg
outs
loope
aas
lock
jmp
rcr
mov
jge
pop
cwde
add
sbb
mov
je
sar
pop
sti
(bad)
(bad)
pusha
test
adc
pop
out
mov
jle
fcom
jns
in
mov
sbb
or
add
inc
sub
cmp
push
popa
sub
jp
inc
int3
adc
add
cmp
out
push
in
mov
and
dec
jmp
sbb
or
fmul
jo
cmp
cli
pop
pushf
xor
jae
fstp
imul
sbb
stos
outs
jecxz
test
out
loopne
fptan
push
into
call
pop
pushf
xor
out
ja
addr16
push
mov
je
ins
cmp
jns
push
scas
cmp
push
addr16
and
add
shl
and
mov
outs
xor
jg
mov
cli
push
fs
mov
sub
cmps
cwde
cld
fwait
pop
mov
rol
fnstenv
dec
mov
idiv
jecxz
add
in
sbb
div
or
ret
repz
pop
icebp
jns
out
clc
cmp
jge
lahf
(bad)
sahf
div
jns
(bad)
jnp
cmp
loope
jl
das
clc
sbb
xchg
mov
stc
jns
mov
and
(bad)
mul
aaa
mov
cmp
xor
push
xchg
inc
test
sub
movs
dec
sbb
mov
xor
scas
xchg
mov
mov
movs
sbb
sti
and
or
std
cmps
dec
jmp
adc
xlat
out
jae
mov
pop
hlt
leave
xor
test
jbe
ficom
mov
mov
dec
dec
add
cmps
xchg
and
lahf
pushf
imul
or
jns
int
idiv
jae
xor
js
outs
test
mov
xchg
(bad)
cli
lock
sbb
std
jae
in
cmp
xor
and
xchg
js
call
loope
ins
push
jb
repnz
das
jl
push
cmp
xchg
jle
lods
jb
stos
enter
jg
mov
jmp
repz
aas
in
movs
enter
outs
call
movs
(bad)
not
sub
lods
sar
push
sbb
mov
xchg
loopne
fldenv
mov
popf
sub
jae
idiv
call
popa
scas
adc
dec
pop
sti
scas
out
ficomp
stc
ja
dec
ds
ret
sub
dec
(bad)
jmp
jnp
mov
add
and
jns
mov
hlt
(bad)
in
fadd
inc
cmp
jp
fst
mov
imul
addr16
jle
(bad)
mov
cld
and
sti
loop
fstp
in
out
dec
in
out
add
jae
test
push
mov
cmc
imul
addr16
mov
(bad)
lods
mov
rcr
push
pop
cmps
inc
(bad)
fucomp
cld
fs
sti
int3
je
mov
push
ret
dec
in
daa
sub
pop
ret
jg
xchg
ins
scas
dec
add
xchg
ins
dec
sub
pop
loope
scas
push
retf
addr16
add
ds
mov
pop
cmp
cld
fwait
neg
mov
pop
fldcw
mov
pop
out
cld
arpl
pop
out
sti
into
out
popf
lahf
ins
out
xchg
xchg
in
sbb
jecxz
sbb
cmp
icebp
(bad)
loope
dec
ja
mov
inc
mov
jae
loopne
bound
inc
add
popf
data16
pop
jp
pusha
push
ins
xor
xor
fbstp
into
fcomi
push
lock
sub
div
sub
cmps
sub
das
xchg
lahf
dec
and
es
(bad)
mov
pop
je
inc
addr16
addr16
stc
les
and
imul
push
xchg
je
xchg
std
hlt
movs
punpcklwd
cmp
xlat
aas
test
je
cmp
push
mov
cmp
shr
mov
add
lahf
loop
push
xlat
dec
jmp
movs
(bad)
popa
lds
xor
xlat
lds
das
in
xor
jae
sbb
call
cmc
cmp
push
stc
or
push
stc
cmc
add
hlt
outs
and
pop
push
(bad)
fs
xchg
movs
pop
xchg
(bad)
pop
mov
cmp
inc
(bad)
mov
test
cmps
mov
sub
es
push
fisttp
jns
cmps
ss
std
aam
xor
(bad)
rol
mov
stos
test
xor
inc
daa
rcr
jne
daa
nop
mov
mov
and
dec
cwde
sub
test
and
cs
sub
inc
fs
inc
lock
aas
hlt
push
mov
test
or
ret
sar
imul
pop
jle
nop
ret
sbb
xor
push
cs
test
out
and
adc
mov
adc
hlt
aas
test
mov
push
mov
cmp
or
jmp
into
jmp
(bad)
jecxz
jle
js
xlat
ret
dec
sar
or
scas
push
sahf
xor
mov
jo
push
add
iret
out
sahf
xor
cli
ret
cmps
add
cmp
add
enter
repnz
sbb
and
inc
pop
and
xchg
and
pop
cmp
fwait
sbb
shr
scas
out
dec
ins
mov
movs
mov
dec
mov
cmps
lods
push
cmp
push
mov
test
xchg
push
push
popf
mov
sbb
stos
xlat
cmp
or
pushf
fdivr
pop
add
and
div
mov
int
cld
(bad)
in
aam
dec
sub
xchg
cmps
add
repz
mov
pop
rcr
cwde
lods
sti
cmp
inc
repnz
and
sub
xchg
mov
mov
pop
into
sbb
leave
(bad)
in
jmp
lahf
in
call
stos
and
mov
xchg
sub
or
pop
je
adc
sbb
jo
cmp
fucomp
cmps
jae
push
xchg
sub
jns
retf
push
jg
xor
imul
fst
jmp
hlt
inc
loope
mov
adc
inc
aam
fmul
mov
dec
or
jnp
sbb
mov
or
out
xor
(bad)
adc
jb
push
sahf
mov
push
fidivr
adc
jo
mov
dec
cmp
sbb
push
jns
and
xchg
mov
(bad)
push
mov
jmp
(bad)
push
stc
cli
leave
cmp
aas
aas
sbb
mov
cmp
push
or
sub
and
das
lods
jae
or
jl
mov
pop
test
sub
jo
cwde
lods
jge
push
or
pop
fild
loope
movs
test
cwde
(bad)
aad
mov
push
in
jno
shr
mov
inc
inc
fs
stos
xlat
xor
sbb
icebp
mov
push
fst
out
inc
sti
jmp
cwde
xor
lahf
popa
and
ja
sar
nop
mov
lds
in
lea
sar
inc
(bad)
mov
scas
idiv
dec
mov
pop
mov
and
mov
iret
outs
jl
mov
or
or
leave
nop
pop
mov
popa
cld
add
daa
jns
adc
rol
and
or
(bad)
mov
and
mov
adc
jo
ins
push
push
test
push
xchg
xlat
and
inc
jg
enter
in
fxtract
pop
popa
iret
or
pop
test
out
cmp
xor
cwde
inc
sbb
popf
sbb
push
lods
popf
sbb
out
es
enter
iret
mov
cmp
out
in
lods
mov
ret
xor
movnti
mov
cmp
cmp
xchg
xchg
cld
lea
and
aaa
or
in
xchg
xchg
mov
dec
movnti
stc
test
sbb
leave
(bad)
or
loope
and
cmp
dec
sub
push
sub
jmp
jle
ror
aas
popa
iret
push
imul
mov
pop
dec
mov
bnd
int3
inc
iret
sub
movs
sahf
jb
mov
cmc
push
push
mov
mov
std
iret
push
dec
(bad)
(bad)
mov
std
std
loopne
in
out
out
pusha
jg
std
add
ja
(bad)
mov
out
sbb
jnp
jmp
div
ret
jb
mov
jge
push
mov
xlat
popf
test
mov
out
ret
(bad)
(bad)
call
das
cmp
sub
push
shr
mov
stos
addr16
jbe
jg
mov
xor
adc
adc
cs
sahf
sbb
sbb
aad
sahf
or
adc
loopne
adc
push
sub
imul
push
pop
jl
xor
data16
dec
popa
mov
sbb
jb
loope
xor
add
sub
xchg
mov
mov
inc
aas
mov
add
fisttp
push
jl
sub
sti
test
add
dec
mov
pop
arpl
sub
jno
pop
inc
and
ins
xor
mov
mov
mov
out
jne
(bad)
sub
inc
int
retf
(bad)
rol
outs
test
retf
pop
jns
in
xor
mov
and
jge
test
cmps
dec
test
cmps
mov
add
fs
mov
jns
ins
mov
mov
mov
cmp
out
or
fcmovnb
sbb
jnp
bound
dec
movs
mov
sub
test
push
stc
js
aad
inc
cld
dec
mov
mov
imul
adc
push
in
jne
out
jge
sahf
nop
push
setg
aam
fld
loope
push
cmc
iret
cmp
xor
inc
mov
and
push
xor
inc
dec
sahf
stos
inc
mov
pop
test
lock
or
dec
cwde
fbld
(bad)
fist
sbb
imul
ss
adc
inc
pop
sub
push
sub
cli
lods
lock
les
aad
outs
push
imul
out
mov
into
push
scas
shl
push
scas
or
stos
xchg
xor
pop
fsub
outs
jp
inc
add
(bad)
ret
push
pop
gs
jle
pop
pop
out
jo
loope
mov
(bad)
es
in
outs
fstp
sub
mov
nop
dec
inc
inc
(bad)
xor
out
xchg
jne
popf
or
mov
push
inc
scas
xchg
add
adc
lahf
jmp
pop
push
outs
or
inc
loop
dec
fnstenv
dec
cmp
add
(bad)
jnp
jmp
je
xor
add
dec
mov
pop
cmc
retf
mov
loopne
cmp
and
fist
cmps
mov
int
sub
shr
leave
in
mov
dec
scas
lahf
test
inc
mov
sub
sub
cdq
rcr
jno
ret
mov
dec
mov
jp
or
dec
mov
arpl
neg
fcmove
jmp
cmp
push
jo
cmp
and
lods
cmp
test
xor
into
scas
lds
cdq
inc
mov
arpl
sbb
scas
or
jnp
jle
lea
jnp
in
ins
cdq
and
in
dec
push
add
pop
sub
test
stos
adc
mov
scas
adc
jns
movs
fcom
inc
jbe
mov
push
pusha
inc
jae
les
loopne
sub
ja
ja
aas
lods
in
dec
rcr
inc
jge
inc
test
cld
outs
mov
test
xchg
mov
sbb
sub
sbb
xchg
or
lods
mov
cmp
test
or
call
push
sub
aad
sbb
pop
call
inc
in
ret
dec
icebp
jmp
jecxz
adc
out
pop
cmc
imul
add
test
dec
and
jp
jo
shr
stos
push
mov
test
imul
and
in
ret
pop
jmp
pop
pop
imul
inc
sub
pushf
mov
pop
dec
lock
js
add
pop
cmps
leave
push
popf
push
shl
cmp
outs
(bad)
loop
test
dec
cdq
pop
jbe
jae
int3
and
jg
fist
jne
repnz
out
mov
fstp
call
mov
mov
fcos
bound
add
aam
out
mov
push
out
(bad)
in
jg
mov
and
mov
(bad)
fcom
mov
xor
mov
(bad)
rol
outs
mov
fisubr
call
into
sub
ins
or
fnstsw
loope
cmp
xchg
pop
popa
fist
xor
pusha
call
pusha
xchg
out
cld
out
cwde
cmps
cmp
lahf
das
jns
gs
ja
push
mov
jg
jge
shl
xor
sub
repz
jge
cmp
retf
mov
arpl
mov
outs
ins
fprem
add
jno
rol
jae
retf
mov
into
mov
mov
inc
out
pop
jbe
sbb
pushf
pop
mov
lds
push
and
xlat
jo
sbb
pop
pop
fisttp
mov
int3
adc
leave
xchg
push
rcr
in
xchg
pushf
cmp
cmp
test
aam
jle
push
aad
sbb
xchg
sub
push
mov
dec
jp
out
pop
sub
dec
int3
add
pushf
or
mov
adc
cs
scas
xchg
sub
sbb
ficom
jno
mov
jae
inc
mov
mov
ds
inc
xor
pop
pop
ds
xor
mov
jmp
cmp
pop
outs
add
mov
je
ror
mov
das
ins
cmp
(bad)
cmp
call
jns
into
or
sub
pushf
adc
sub
add
cmp
int
mov
xchg
cdq
push
or
sbb
add
iret
or
xchg
xor
adc
cmp
lods
mov
xor
pop
pop
dec
pop
div
(bad)
xor
mov
jmp
jne
mov
repnz
jecxz
or
jae
mov
fstp
jne
pop
push
loopne
pop
outs
xor
(bad)
cmps
fxam
push
push
loope
cmp
jmp
pop
push
test
and
xchg
out
aad
hlt
ret
cmp
mov
data16
pushf
push
test
nop
jle
mov
sbb
mov
fcomp
(bad)
lods
outs
mov
imul
dec
pop
mov
sub
cmps
ror
cmc
in
hlt
inc
xchg
rcl
or
mov
cmp
xchg
lods
mov
xchg
mov
pop
mov
das
js
add
(bad)
mov
sbb
scas
daa
jg
dec
aaa
sbb
out
rcr
pop
sub
sbb
js
mov
test
mov
cmps
call
movs
xor
cmc
xchg
fsubr
aam
cld
les
dec
pop
dec
mov
stos
out
das
gs
rol
shl
retf
das
cmps
inc
icebp
xlat
xchg
pop
cmp
imul
stc
pop
(bad)
mov
sbb
sbb
lea
leave
cmp
inc
and
sub
hlt
xor
popf
call
aad
xchg
xor
xor
sub
sub
pop
mov
xor
push
jl
sbb
mov
cmp
repz
test
stos
retf
sar
std
shl
adc
jl
inc
sti
add
push
arpl
jmp
clc
fild
push
enter
or
and
xlat
stc
sbb
sub
popf
xchg
sti
add
sbb
push
dec
sbb
lods
fmulp
nop
mov
sbb
cmp
push
inc
jge
pop
shl
stos
stos
mov
aam
pop
add
lods
xchg
ja
pop
out
xor
pop
stos
or
rcl
or
(bad)
mov
mul
cmp
retf
aas
push
movs
cmc
cdq
xlat
retf
add
mov
ror
scas
loopne
sbb
xchg
cmp
cmp
outs
sti
ds
pop
stc
pop
(bad)
retf
push
enter
es
scas
std
ret
int
scas
arpl
in
imul
(bad)
das
cli
in
push
pop
sti
test
(bad)
stos
mov
inc
dec
(bad)
div
clc
imul
push
dec
sti
movs
out
xchg
xchg
(bad)
popa
ins
stc
fistp
mov
jmp
outs
pop
and
jmp
mov
sbb
pop
test
(bad)
push
ins
jns
(bad)
idiv
mov
jmp
push
(bad)
and
int
in
out
push
xchg
jmp
cmp
repnz
sbb
sar
jns
push
scas
mov
cmc
lods
icebp
enter
and
test
das
inc
push
cmc
test
sbb
test
fcmove
mov
sbb
pop
xor
scas
push
dec
loope
enter
inc
nop
and
adc
mov
inc
adc
movs
and
xor
les
lods
sbb
cmp
fidiv
daa
inc
cdq
mov
jbe
stos
inc
out
cmp
int3
test
push
cli
inc
pusha
sbb
in
adc
cdq
(bad)
scas
pop
in
sbb
cdq
out
sar
in
loope
jge
mov
gs
add
iret
sbb
mov
fbstp
pop
fnstenv
in
jnp
pop
xor
sub
jns
lods
lods
pop
in
inc
scas
pop
sub
stos
in
xor
popf
fisttp
push
or
(bad)
xchg
adc
pop
arpl
xor
ret
ret
(bad)
jns
icebp
test
mov
addr16
out
in
cmp
retf
inc
out
iret
or
call
xor
rcr
sub
call
js
stc
mov
dec
icebp
hlt
stos
xor
push
mov
scas
les
dec
mov
clc
jp
data16
imul
pop
int
pop
dec
pop
clc
sbb
sahf
test
sbb
adc
pop
xchg
push
loopne
pop
int
popf
mov
int
pop
sub
sti
popa
cmp
cwde
retf
jmp
mov
add
popa
retf
mov
cs
loop
jne
add
pop
arpl
movs
push
xor
sbb
mov
test
mov
jle
push
inc
ficomp
test
ds
mov
add
fstp
adc
inc
jns
xchg
fisttp
or
call
(bad)
fld
iret
fxtract
pop
or
push
jo
daa
ja
or
adc
cwde
imul
es
and
call
imul
inc
push
push
and
sti
ror
nop
cmps
stos
mov
fnstcw
ds
inc
fmul
cld
dec
mov
push
hlt
pop
ins
xchg
(bad)
pop
scas
sbb
sbb
scas
mov
cmp
(bad)
icebp
mov
jne
mov
imul
fst
out
jl
push
hlt
jle
rcr
xor
cdq
shr
shl
sahf
or
dec
push
jno
mov
mov
cmp
popa
retf
(bad)
call
das
push
outs
jecxz
mov
cli
dec
jge
cmp
jne
int
in
call
cld
mov
mov
lods
add
lods
lock
fimul
test
lods
adc
dec
mov
adc
add
and
ins
jl
enter
push
mov
lahf
inc
les
sub
inc
loop
hlt
call
pop
popf
cmp
jae
pop
clc
push
fsub
pop
ja
xchg
stos
in
retf
and
js
arpl
cmp
xchg
aaa
cmp
pop
out
sbb
in
mov
cmp
inc
outs
mov
push
mov
imul
lds
int3
mov
push
fcmovu
repnz
shl
xor
enter
or
inc
xor
les
jmp
push
dec
(bad)
and
dec
jnp
aad
popa
mov
loop
sub
int
dec
frstor
mov
cmp
and
adc
fld
and
sub
mov
in
mov
ror
das
and
xchg
idiv
ror
jl
call
into
fild
mov
pop
or
jmp
aas
cmp
pop
add
test
jae
xchg
loop
mov
xchg
sub
(bad)
mov
lock
int3
fyl2xp1
jg
fadd
dec
jnp
jne
xchg
xor
icebp
ss
loopne
cdq
enter
jno
jno
stc
xor
mov
loopne
test
xor
icebp
leave
in
ja
sbb
push
(bad)
cld
aad
push
mov
mov
outs
out
stos
jge
std
fs
and
sbb
ja
inc
cmps
not
jae
enter
add
out
mov
out
bswap
mov
fsub
jo
jae
popf
cmps
xor
xor
mov
sbb
push
inc
imul
cmp
in
ins
jecxz
pop
push
push
mov
adc
xor
popa
push
loopne
xchg
fild
sbb
adc
cmp
adc
fadd
shl
lahf
xlat
jp
stc
in
sbb
sub
stos
mov
ret
push
pop
or
ret
cmp
leave
pop
cmp
xchg
fs
in
aaa
mov
das
mov
out
fcom
mov
cdq
pop
xchg
cmp
ret
mov
call
and
and
out
and
popf
sub
dec
test
mov
xor
jmp
stc
(bad)
rcr
test
test
repnz
repnz
fcomp
add
mov
dec
pusha
int
xchg
gs
data16
cld
cmp
shl
pushf
imul
repz
enter
(bad)
mov
sub
(bad)
sub
imul
(bad)
lock
add
xchg
mov
inc
(bad)
jmp
test
jns
cld
dec
(bad)
loopne
adc
into
adc
test
and
jmp
jle
jge
es
lods
(bad)
rcr
sbb
push
cmp
sar
bound
xchg
jne
xor
fdiv
inc
sub
jmp
cld
jbe
ret
mov
push
fidivr
call
popa
out
out
jl
data16
push
xor
out
stos
das
push
fdivr
ret
int
add
stc
mov
jle
enter
push
repnz
cdq
shr
(bad)
pop
xchg
popa
out
push
repnz
mov
jmp
ins
aaa
xor
fisub
and
jl
mov
push
xchg
mov
sub
push
lods
cdq
lea
cli
cmp
shl
je
in
push
lods
mov
jae
sub
rcl
add
cwde
fadd
scas
repz
cmp
aaa
js
sbb
mov
hlt
js
out
loopne
pop
sbb
add
(bad)
pop
jbe
mov
cmps
add
jnp
adc
mov
sub
iret
dec
mov
push
inc
das
aam
mov
xor
lods
xchg
xor
sbb
js
mov
mov
leave
cmp
cwde
jg
and
nop
gs
sar
pop
(bad)
jbe
add
out
push
das
jae
inc
sub
bound
in
and
pop
jmp
aam
mov
repnz
repz
jle
sbb
xchg
pop
addr16
and
cld
push
sbb
push
xchg
mov
(bad)
mov
jp
add
nop
and
aas
das
push
inc
mov
fist
iret
xchg
cwde
mov
fmul
fst
out
sbb
jmp
sar
test
and
cmps
add
js
dec
scas
(bad)
jmp
mov
push
push
fsubr
aam
add
xlat
mov
sbb
xor
add
and
xchg
stos
cmp
out
(bad)
push
sub
jb
mov
mov
push
jmp
jb
div
not
push
inc
fs
sahf
dec
mov
popa
popf
dec
scas
push
test
and
std
enter
jg
sbb
int3
xchg
add
es
inc
test
mov
dec
sbb
xchg
xchg
xor
stc
in
ror
jecxz
into
inc
js
jo
push
or
jo
rcr
mov
cmp
dec
nop
mov
mov
mov
and
sahf
leave
mov
ss
test
pop
mov
xor
repz
mov
enter
push
rol
fist
add
jmp
mov
in
(bad)
stc
sub
push
fsub
cmc
ror
outs
pop
xor
imul
pushf
xchg
pop
jns
adc
fs
push
jb
xor
pusha
add
pushf
sahf
(bad)
fs
or
popa
mov
ror
fild
imul
pop
sub
rcl
fadd
repnz
inc
jo
inc
mov
cmps
shl
push
xchg
jp
xchg
push
jne
loop
mov
test
inc
add
scas
cwde
sub
sbb
je
loopne
arpl
cmp
sub
pop
sub
cld
xchg
in
lea
es
icebp
fld
jmp
in
pushf
push
std
(bad)
repz
adc
mov
pop
jno
fmul
jp
fsubrp
(bad)
dec
pop
push
in
movs
mov
mov
aad
jnp
cdq
mov
(bad)
aad
out
sbb
dec
sub
dec
addr16
xor
icebp
fisttp
xchg
pop
pop
mov
sbb
inc
pop
inc
outs
xchg
push
jg
enter
and
clc
hlt
call
xor
out
sbb
add
mov
pushf
cmc
pop
leave
ror
fwait
jmp
mov
xchg
push
mul
ret
jecxz
jp
mov
dec
js
and
ror
jne
jnp
push
cdq
jbe
mov
jo
add
xor
mov
mov
xor
aad
mov
fimul
scas
sbb
(bad)
mov
mov
popf
dec
xor
mov
sub
mov
iret
scas
sub
mov
cmp
cmc
in
loop
das
bound
rcr
sbb
loope
pop
sub
enter
inc
mov
inc
adc
and
scas
pusha
and
lds
jle
dec
sub
pextrw
pop
pop
test
outs
and
and
ja
sbb
repnz
jo
push
jno
retf
(bad)
(bad)
pop
cs
push
sbb
fdiv
dec
dec
jecxz
pop
scas
dec
test
enter
outs
dec
in
gs
sub
dec
jmp
xlat
lea
jl
mov
mov
dec
cmc
mov
(bad)
add
and
xor
jmp
push
lods
adc
pop
(bad)
jne
adc
mov
(bad)
pop
lea
cwde
(bad)
mov
adc
mov
mov
xchg
dec
pop
sbb
xchg
icebp
dec
add
mov
mov
sbb
gs
mov
inc
or
pop
adc
cmp
push
pushf
cmp
not
loope
mov
sbb
lods
sub
outs
je
pop
cmp
and
ins
cmps
int
daa
jmp
shr
neg
gs
fnsave
inc
xor
inc
lods
out
popa
mov
or
mov
xchg
push
inc
(bad)
cmp
xlat
pop
push
ror
jo
inc
lods
xchg
loop
xor
cmc
add
push
das
sbb
into
iret
into
jmp
dec
xchg
je
xor
test
aas
cmps
cmp
adc
sbb
sbb
shr
ds
push
mov
pop
fistp
mov
std
call
prefetchwt1
lods
mov
xchg
xchg
call
xchg
or
pop
sub
lds
jmp
lahf
out
dec
push
fst
and
cs
mov
sub
dec
xchg
pop
es
jmp
cmp
adc
mul
out
and
xor
mov
aad
cmp
adc
pop
and
sub
push
mov
ret
les
stos
push
call
sti
call
and
data16
jmp
enter
pop
dec
pop
mov
jo
and
popa
outs
scas
mov
xchg
mov
inc
stc
movs
cmp
jp
popf
mov
out
adc
pop
mov
in
scas
mov
cli
in
cmc
pop
pop
jns
jb
cdq
scas
std
jae
sahf
pop
mov
fisub
or
sbb
mov
xchg
sbb
sbb
pushf
xchg
mov
sub
mov
leave
jge
test
leave
aad
xchg
mov
je
push
mov
push
cmp
push
mov
cmps
push
push
outs
mov
outs
clc
jmp
and
push
sbb
xor
(bad)
imul
dec
bound
dec
and
lods
lods
xchg
mov
xor
data16
mov
jmp
in
out
popa
movs
push
mov
dec
pop
add
fild
push
cli
jae
dec
int3
lods
es
std
lahf
jp
fisttp
xor
call
js
out
push
pop
(bad)
in
dec
pcmpeqb
shl
sub
add
cwde
mov
mov
jb
jo
cmp
xor
icebp
add
dec
mov
and
jne
sub
or
fcomip
in
sbb
cwde
cmp
mov
aad
ins
addr16
push
ja
or
fstp
cmp
retf
(bad)
fild
sbb
jmp
push
call
shl
cmp
adc
div
pop
jo
inc
js
les
push
sahf
scas
mov
repnz
dec
jmp
cwde
rcl
pop
inc
sub
mov
aam
out
pushf
sti
ins
and
fiadd
mov
adc
jmp
(bad)
cmp
pop
xchg
(bad)
loop
jge
pop
inc
mov
movs
cmps
mov
imul
sar
and
test
in
int
iret
jbe
movs
inc
rcl
inc
xchg
push
sub
ss
jge
data16
mov
dec
push
or
mov
fcmovnbe
mov
ret
sbb
or
sar
cmc
and
imul
movs
sbb
jge
push
xor
sahf
rcr
int3
aad
out
sub
test
xlat
sbb
xchg
mov
stc
mov
fist
cmp
cmp
pop
dec
in
jns
mov
imul
pop
xchg
frstor
mov
mov
gs
(bad)
xchg
std
mov
iret
mov
scas
test
xchg
push
ss
jmp
mov
mov
daa
xor
clc
div
outs
pop
fnsave
dec
xchg
repz
fimul
xchg
data16
mov
pop
sbb
outs
jecxz
inc
shl
jne
lock
push
movs
jns
(bad)
xchg
or
iret
outs
pop
mov
iret
repnz
call
xlat
ins
pop
mov
das
push
jge
push
popa
pushf
into
repz
jecxz
sub
push
dec
popa
jp
retf
outs
pop
stc
adc
sbb
xor
lock
ins
pop
mov
push
mov
add
shl
push
btr
xchg
cmp
retf
in
ret
jl
imul
jl
pusha
jge
add
and
and
lahf
cmp
add
mov
mov
pop
leave
retf
test
or
or
sbb
int
xchg
mov
sti
and
aad
pop
dec
add
adc
icebp
stos
pop
xor
cdq
pop
or
jne
mov
add
retf
push
test
xchg
ds
push
in
test
stos
pop
dec
jle
cmp
jle
test
adc
cmp
fild
retf
fsub
jecxz
inc
xor
adc
call
inc
jl
dec
js
lea
sub
rol
ret
dec
and
iret
adc
rcr
xor
dec
pop
lds
addr16
ins
(bad)
jo
sbb
stos
fisub
sti
push
in
in
icebp
jae
sbb
pop
mov
test
ss
out
out
pop
adc
das
xchg
push
mov
int3
mov
mov
inc
xchg
jno
sahf
(bad)
jecxz
sbb
adc
xor
jmp
push
pop
stos
mov
lds
js
mov
int
jle
mov
push
inc
pop
ss
in
ret
push
loope
jne
test
ficom
or
ja
fild
cmp
jp
fdivr
mov
ins
pop
dec
cmp
mov
retf
jge
sbb
push
lock
popf
sbb
or
das
add
push
arpl
jecxz
jnp
mov
xor
fwait
(bad)
xchg
in
imul
rcr
xor
rol
sbb
pushw
das
cmp
in
cmp
test
add
out
ds
add
sbb
mov
arpl
jle
sbb
or
aas
sbb
es
mul
div
ret
xor
(bad)
xor
mov
cs
pop
push
lds
cmovl
mov
(bad)
aad
adc
push
enter
mov
js
dec
cmp
pusha
aad
mov
mov
pop
scas
jl
aam
fwait
in
addr16
add
mov
cmp
es
dec
das
add
scas
add
in
retf
shr
gs
xchg
sbb
lods
push
inc
mov
inc
pop
into
out
pop
stos
lock
jg
clc
hlt
pop
scas
sbb
xor
out
(bad)
bound
xchg
pop
and
fistp
mov
test
and
out
xchg
fucom
cmps
sub
mov
cmps
dec
js
call
movs
mov
mov
outs
jge
daa
aaa
(bad)
ds
cmp
mov
ins
cmp
js
mov
mov
(bad)
fcomp
mov
xor
retf
outs
pop
lock
mov
pop
addr16
retf
mov
outs
pop
xor
push
inc
das
sbb
xchg
outs
fistp
push
cmps
sub
or
neg
in
mov
popf
jb
jae
js
sub
test
out
xchg
in
mov
in
fistp
jbe
stos
adc
(bad)
jo
jmp
int
add
fwait
stc
addr16
xor
cmp
inc
sbb
popf
sub
jns
ja
inc
push
cmp
repnz
jns
imul
push
jns
pop
in
jnp
dec
jle
jmp
inc
outs
(bad)
adc
enter
cmp
imul
stc
mov
nop
inc
mov
daa
std
lahf
ret
dec
inc
(bad)
and
jmp
pusha
xor
jb
test
push
test
cmp
dec
sub
sbb
cmp
cmps
sbb
jecxz
mov
xor
sar
mov
adc
and
fidivr
(bad)
sub
mov
fwait
ror
xchg
test
inc
int
sbb
(bad)
xchg
mov
aad
adc
mov
cmps
in
dec
lahf
jle
hlt
loope
mov
call
xor
mov
jmp
push
stos
or
push
lds
int3
fisttp
jnp
ja
cwde
adc
jg
xor
js
loope
out
int
pop
jb
out
cmp
lock
jl
mov
lea
les
xchg
cmp
rol
retf
cmp
stc
not
pop
lods
addr16
(bad)
rcr
xor
mov
mov
adc
daa
pop
data16
xlat
mov
test
inc
pusha
call
cmc
mov
and
jle
mov
aam
aad
xor
(bad)
repz
dec
gs
int3
xchg
mov
int3
xchg
add
jb
leave
sub
push
fdiv
pop
xchg
pop
inc
adc
sub
test
jecxz
and
es
loop
pusha
sahf
cmps
inc
int3
xchg
lahf
out
or
lahf
push
clc
jbe
aad
push
pop
int
pop
pop
xor
inc
popf
mov
push
and
or
sar
sub
fs
cmps
sub
fdivr
and
cmc
inc
sbb
inc
enter
sub
ds
jmp
mov
pushf
pop
adc
pop
jmp
ficom
pop
lea
mov
lahf
push
push
mov
stos
aam
push
adc
cwde
scas
sub
pop
push
bound
cli
adc
loop
or
in
push
xor
out
cmp
fimul
stos
fwait
das
sub
pop
jmp
lds
and
inc
mov
sahf
fisubr
cld
imul
int3
mov
xor
mov
xchg
cmc
pusha
jb
push
shl
inc
leave
loope
dec
mov
jle
sbb
imul
sbb
cmp
(bad)
jb
dec
rcl
jo
mov
pushf
in
jmp
mov
rcr
ss
xchg
cmc
test
mov
in
fst
in
mov
cmp
pop
retf
jbe
inc
lahf
dec
es
pop
pop
mov
stos
test
aad
in
pop
in
test
cwde
inc
sub
ins
(bad)
std
inc
(bad)
jge
push
sti
and
sbb
push
cmp
mov
mov
int
adc
aad
jle
pop
stos
ret
mov
cmps
sub
push
push
xchg
(bad)
sti
pop
mov
fldenv
cmp
repnz
mov
and
test
mov
mov
lods
inc
xor
jge
xor
lods
loope
stc
sub
in
fnstenv
imul
out
pop
cmp
mov
adc
sbb
mov
cli
xchg
test
sbb
pop
xor
shr
sbb
test
push
loopne
cmc
fstp
mov
mov
cmps
mov
icebp
(bad)
fwait
cli
cwde
mov
mov
fdiv
lds
call
bound
add
int
sub
aas
cwde
jp
pusha
adc
push
add
inc
mov
pusha
ficomp
es
xrelease
jb
push
outs
mov
fbstp
push
inc
jge
xor
xchg
sbb
into
aad
adc
test
es
pop
add
pop
mov
icebp
push
in
push
stc
cmc
cmp
pop
mov
mov
loope
int3
aas
sahf
iret
rol
call
es
mov
popa
bound
push
imul
shr
pop
and
push
(bad)
dec
xor
mov
sahf
xchg
cmp
cmp
inc
pop
dec
push
nop
push
inc
imul
xor
scas
mov
xlat
jns
in
mov
std
fnstenv
nop
sub
mov
(bad)
(bad)
cdq
outs
pop
aad
scas
jl
dec
sub
daa
mov
xchg
addr16
xchg
add
addr16
int3
and
push
loopne
test
jnp
cmc
dec
sbb
ja
add
out
push
outs
push
cdq
push
pop
aad
mov
nop
repz
push
pop
pop
pop
lds
cmps
out
or
add
sti
int
push
dec
cmps
adc
mov
stc
or
out
leave
jl
sub
jnp
mov
cmps
sub
inc
stos
ret
(bad)
sub
popf
jp
xchg
mov
lea
(bad)
and
in
mov
pop
jo
shl
dec
mov
int
cmp
(bad)
out
repz
push
call
jg
pop
aad
add
cld
leave
aaa
cmps
dec
jmp
xchg
aam
test
and
jnp
leave
cli
fiadd
(bad)
ds
arpl
sub
cmp
shl
cmp
mov
dec
js
lahf
push
mov
mov
jmp
test
fs
in
in
jbe
sbb
popa
jg
sub
jl
sbb
add
push
xlat
cmps
bound
sub
imul
pop
int3
pop
lock
dec
xchg
cmp
jns
cmps
xchg
pop
cmp
(bad)
imul
call
(bad)
cmps
js
shl
lahf
push
jb
mov
imul
push
scas
leave
xor
repz
daa
test
cdq
retf
mov
mov
mov
test
jge
mov
jg
xchg
test
test
aam
mul
sub
jg
xchg
test
aam
inc
mov
inc
gs
add
test
cmp
jge
xchg
xchg
test
cmp
cmp
mov
loope
in
hlt
inc
jne
stos
hlt
push
into
jno
push
aaa
stc
sub
push
sar
or
inc
jle
dec
pop
sub
movs
jmp
stos
cmps
mov
cld
push
(bad)
xchg
mov
loop
add
fadd
inc
inc
ror
test
jmp
jo
cmovae
add
mov
sub
push
and
dec
popa
(bad)
or
xchg
ds
and
dec
(bad)
push
rcl
xchg
pushf
xchg
dec
dec
dec
and
push
leave
sub
dec
cmp
popf
xchg
repnz
xchg
mov
test
es
and
jo
lds
sub
sahf
dec
mov
jp
mov
leave
in
test
jbe
lea
cli
sar
jb
outs
outs
inc
dec
stc
scas
inc
addr16
xchg
push
jle
sbb
ja
mov
pop
(bad)
sbb
pop
cmp
pushf
repnz
inc
dec
jns
iret
nop
push
scas
std
add
inc
dec
mov
lahf
mov
mov
out
pushf
jb
push
cs
inc
mov
cs
and
xchg
cmp
adc
das
and
inc
ds
or
push
fs
das
icebp
enter
call
push
stc
call
(bad)
and
xchg
clc
jecxz
jg
loop
dec
cld
icebp
rol
sbb
adc
or
mov
in
xor
in
pop
and
nop
retf
jg
or
adc
repnz
add
add
enter
push
jns
stos
enter
and
enter
inc
dec
jmp
and
inc
push
stc
fdivr
and
addr16
out
out
nop
xor
outs
jmp
cld
and
rcr
push
and
fmul
xchg
fwait
dec
ins
jae
cmp
arpl
in
pop
mov
inc
repz
sbb
adc
mov
(bad)
inc
int
dec
loopne
mov
ins
gs
imul
cmp
adc
stc
xor
jle
push
and
adc
inc
test
mov
into
adc
ins
and
fnstenv
mov
xchg
ja
lea
inc
pop
(bad)
enter
stos
sub
jecxz
repnz
mov
push
mov
cmp
adc
pop
loop
dec
pop
jp
dec
pop
in
lods
adc
inc
xor
dec
enter
std
inc
sti
div
jle
xor
pop
sti
movs
mov
les
add
ja
jle
jecxz
fild
jb
sbb
arpl
loope
sbb
out
ja
int3
out
je
push
sub
hlt
xchg
(bad)
mov
ins
push
push
push
mov
xchg
and
dec
cld
mov
xchg
js
dec
shl
data16
pop
adc
jge
and
test
test
jno
(bad)
push
arpl
mov
pop
pop
cmp
dec
jecxz
mov
shl
or
xchg
test
mul
std
in
mov
and
sti
mov
inc
ret
mov
dec
or
or
les
sub
mov
dec
xchg
lock
push
xchg
jo
jle
and
or
call
adc
jle
test
mov
test
pushf
cmp
retf
cmp
push
or
inc
sub
(bad)
lock
or
sub
xchg
mov
sbb
stos
test
lea
push
ret
mov
push
ret
sbb
imul
pop
aaa
scas
cwde
pop
mov
stos
cmp
mov
das
repnz
inc
dec
les
cmp
loop
adc
jge
in
add
push
and
and
(bad)
rcl
push
jne
push
adc
mov
push
inc
cmp
repz
les
aam
pop
sub
clc
cmc
jno
adc
test
outs
or
jne
jo
or
mov
cmp
outs
or
mov
jnp
dec
mov
push
xor
cmp
inc
adc
scas
lahf
jmp
inc
jle
pop
pop
inc
and
lods
jl
mul
mov
movs
add
shr
push
test
int3
ficom
loopne
push
sub
test
(bad)
cmp
push
add
mul
jle
lahf
push
mov
xchg
icebp
xlat
jae
pop
mov
in
xchg
std
pop
push
jb
inc
iret
pop
adc
mov
xor
aas
out
push
aas
dec
outs
pushf
lahf
mov
pop
mov
iret
repz
xchg
(bad)
jp
mov
lea
dec
jnp
inc
addr16
and
adc
out
mov
cmp
push
xlat
push
test
cdq
xchg
popa
mov
ins
inc
popa
pop
or
loope
mov
and
call
add
test
lds
(bad)
pop
call
pushf
gs
inc
pop
ror
dec
push
shr
add
jp
sub
mov
mov
xlat
push
pop
dec
repnz
call
mul
sub
daa
push
inc
or
sub
and
jge
imul
push
movs
jge
inc
push
push
call
xchg
call
xor
pop
push
and
push
in
sbb
adc
sub
xor
cmp
jp
inc
pusha
in
xor
pop
push
adc
dec
cmc
sbb
enter
adc
jnp
loope
nop
scas
shl
or
mov
inc
push
(bad)
push
and
or
inc
(bad)
loope
push
mov
(bad)
repz
push
popf
(bad)
data16
std
nop
jge
frstor
mov
jge
mov
rol
cmps
iret
jo
cmp
rcl
dec
popf
repnz
in
mov
push
scas
call
das
lock
sbb
cmp
loope
(bad)
sahf
mov
sbb
ja
ja
shl
cld
mov
mov
dec
jne
jl
sbb
rcl
pusha
lea
sub
pusha
in
sub
shl
adc
and
inc
mov
adc
cmp
fiadd
jg
mov
imul
aad
push
mov
mov
nop
adc
adc
add
test
icebp
sub
or
add
mov
mov
pop
mov
pop
mov
rcl
mov
adc
dec
dec
add
xlat
movs
cwde
call
and
out
xlat
ror
mov
dec
mov
sub
iret
mov
imul
and
or
jmp
jmp
pop
or
bound
jnp
mov
cmp
lock
jecxz
mov
dec
imul
jecxz
inc
fadd
in
lods
dec
xchg
xor
shl
inc
(bad)
cld
adc
dec
pushf
push
fucomp
inc
(bad)
rol
lea
cmp
sub
adc
popa
pop
pusha
xchg
jle
jg
or
scas
inc
clc
and
jo
mov
cs
test
xchg
es
enter
mov
leave
pop
dec
fld
hlt
sub
(bad)
mov
imul
mov
xchg
fdivr
pop
repz
cmps
pop
pop
xchg
push
push
das
inc
push
(bad)
in
xlat
jmp
jmp
sub
imul
test
pop
out
in
mov
xlat
pop
imul
in
aam
call
cmp
jp
mov
test
mov
ror
scas
push
mov
cwde
mov
jmp
in
retf
cmc
cdq
mov
into
xor
dec
div
mov
mov
out
repnz
sub
mov
cs
aas
adc
cs
pushf
mov
xchg
mov
sbb
cs
lock
lea
xchg
jmp
cdq
add
pop
xchg
mov
cmp
sbb
or
jl
push
aaa
pushf
arpl
mov
xchg
adc
outs
jmp
(bad)
call
mov
fcom
jg
mov
lahf
outs
xchg
mov
lods
(bad)
cmp
iret
aaa
dec
lahf
sub
jg
mov
mov
lahf
out
push
jae
out
xchg
jg
stos
jae
(bad)
outs
xchg
retf
jle
es
jns
sbb
sub
rcl
mov
into
sub
mov
cld
xlat
sub
fild
iret
cmp
mov
test
stos
and
lods
mov
dec
popa
std
push
jl
xlat
sahf
mov
mov
sti
mov
enter
mov
jp
inc
mov
jp
pop
lock
push
out
xor
cld
scas
scas
daa
jl
ja
and
cmps
xchg
sbb
mov
mov
test
pop
fisub
push
jmp
jae
mov
adc
fistp
pop
call
push
loopne
xlat
jns
scas
jg
iret
(bad)
cmc
outs
icebp
cmp
jmp
or
loope
ja
jns
neg
mov
fild
pushf
(bad)
jmp
in
or
sbb
dec
pop
(bad)
jle
dec
pop
call
test
cmc
outs
les
add
cmp
mov
xor
fist
or
xor
adc
out
stos
into
stc
in
dec
or
or
jmp
sbb
(bad)
mov
not
ffree
cmp
jmp
call
push
mov
aam
lods
movs
popf
fsubr
ins
sub
jo
and
mov
(bad)
imul
push
mov
xlat
push
sbb
shr
outs
and
mov
xor
fcmovnu
call
xchg
ins
dec
nop
jo
cwde
mov
inc
ja
nop
icebp
pop
mov
sbb
xlat
jmp
call
sbb
xor
loope
int
fs
inc
add
mov
into
(bad)
retf
ss
jbe
or
cmc
outs
imul
xchg
add
xchg
ret
xor
gs
mov
mov
mov
cmps
push
jl
adc
pushf
lahf
out
inc
pop
iret
imul
jge
xor
push
mov
adc
mov
jno
xchg
fisub
out
sbb
jo
pop
dec
in
pop
in
ss
mov
jecxz
gs
out
mov
fwait
sti
sbb
dec
arpl
jnp
mov
inc
xor
push
adc
jmp
jge
mov
xor
sti
and
sub
push
sbb
ins
fsubr
xchg
mov
(bad)
repz
rcr
cmp
retf
ret
icebp
add
rol
inc
inc
adc
adc
cdq
xor
sub
pop
push
data16
in
dec
add
imul
aas
xchg
xchg
jg
sub
lods
pop
sub
ins
cmps
in
push
shr
cmc
jbe
pop
xlat
push
shl
lods
and
xchg
push
pop
mov
leave
and
fcomp
jbe
ds
sub
push
lahf
lds
or
fstp
movs
sbb
cmc
mov
(bad)
out
ja
test
xchg
sub
repnz
xor
lock
xor
xor
int
outs
jp
mov
sub
push
xor
cmp
pop
(bad)
rcr
push
pop
repz
fdiv
cmp
retf
fdivr
jns
mov
sub
fucom
lahf
jb
aam
or
popa
stos
and
jmp
sahf
jl
outs
push
sub
xchg
dec
jecxz
int3
lock
icebp
int3
jo
lea
fimul
js
fdivr
add
or
stos
lock
jo
inc
cmp
in
sahf
mov
test
js
js
sbb
or
push
int3
sar
or
or
pop
loope
popa
inc
mov
add
mov
sbb
sub
sub
cmp
or
pop
and
daa
(bad)
into
mov
idiv
mov
inc
cmp
cld
push
clc
ds
fninit
jae
ins
inc
in
icebp
or
rcr
icebp
leave
mov
dec
js
ja
push
cmp
adc
xchg
icebp
adc
in
pop
int3
fnstsw
add
mov
ja
jge
loope
movs
fistp
mov
sbb
pop
mov
cs
pop
sub
fild
mov
in
cli
cld
and
scas
out
mov
cli
fwait
loopne
fcom
cmp
(bad)
push
sar
xor
jge
js
sti
loopne
movs
aad
mov
out
mov
hlt
push
fadd
sar
cmc
mov
out
mov
cli
fild
lds
iret
data16
cli
mov
jo
cmp
rcr
ds
mov
jge
(bad)
fadd
pop
xor
and
inc
add
mov
push
js
cmp
lahf
outs
jle
mov
cmp
mov
test
mov
xchg
cmp
pop
hlt
shr
mov
stos
ret
test
imul
add
jmp
mov
fst
adc
push
or
mov
into
adc
or
xchg
outs
inc
add
outs
aaa
stc
cmp
mov
push
inc
(bad)
mov
add
and
cmp
xor
mov
sbb
jns
lods
rcr
sbb
(bad)
imul
jle
xor
test
mov
jmp
mov
popa
ss
or
cmp
loopne
cmps
loopne
into
xchg
mov
jg
fiadd
pop
fild
fisttp
mov
fwait
mov
imul
es
add
ja
dec
xchg
xchg
jae
dec
cmp
push
ret
inc
jmp
mov
sbb
jp
inc
pop
push
adc
xchg
popa
out
inc
adc
ret
adc
out
cmc
jnp
xlat
pop
sti
pushf
xchg
and
dec
xchg
pushf
mov
imul
idiv
std
popa
aas
push
arpl
sbb
push
sub
ja
(bad)
aad
sar
sub
call
in
xor
clc
lods
and
sub
jmp
jle
mov
mov
scas
push
push
lds
mov
cdq
js
(bad)
popf
loop
and
inc
call
leave
xchg
imul
inc
and
xchg
jle
dec
fdiv
mov
dec
xchg
not
dec
sub
push
mov
mov
mov
sbb
xchg
lahf
clc
jle
or
pushf
loope
dec
mov
arpl
pop
mov
lock
cdq
adc
rol
int3
add
fdiv
rcr
outs
icebp
int
test
and
push
lock
push
repz
(bad)
xchg
in
xchg
jecxz
or
idiv
rol
lea
in
sbb
mov
sbb
inc
jmp
mov
push
jb
jmp
int
sar
push
in
sahf
repz
mov
call
(bad)
mov
mov
pop
mov
mov
jae
pop
inc
stos
cli
xor
and
or
push
mov
retf
addr16
and
dec
call
pop
dec
mov
lods
add
in
sahf
push
mov
or
xor
or
jecxz
cmp
sahf
dec
clc
mov
ret
stos
addr16
daa
and
aam
es
fs
cmps
imul
pop
xchg
ror
push
dec
(bad)
mov
stos
jnp
dec
cmp
call
mov
lods
cmp
dec
jl
fmulp
xchg
pushf
dec
gs
xchg
retf
mov
mov
out
int3
imul
mov
push
ss
sti
push
add
imul
movs
iret
stos
or
adc
lods
xchg
dec
jnp
js
jge
mov
push
mov
(bad)
sbb
mov
sbb
xor
cmp
or
jae
mov
movs
sbb
xchg
xor
mov
pop
inc
and
jp
data16
cdq
xchg
in
out
inc
retf
fst
imul
push
mov
(bad)
xchg
push
cmp
push
and
inc
ret
test
jl
push
push
mov
dec
int
mov
pop
xor
and
cdq
scas
gs
pop
jl
xchg
pop
sahf
xchg
mov
sbb
mov
push
jge
icebp
scas
cmps
call
mov
ins
mov
test
xchg
xchg
ins
xchg
imul
lea
rcr
popa
jmp
mov
push
aam
mov
sub
imul
mov
ja
inc
daa
cmc
push
xor
mov
out
jp
pop
daa
ds
imul
bound
sbb
jmp
out
mov
(bad)
icebp
stos
inc
and
fild
cmp
icebp
arpl
lods
clc
outs
jg
lahf
int
scas
in
int3
cmp
bound
jno
lock
push
(bad)
mov
cwde
cmp
sbb
xchg
mov
(bad)
out
and
mov
test
sar
shl
scas
inc
(bad)
xor
xchg
sub
jno
mov
fild
jne
fstp
push
jae
push
push
shl
je
sti
out
inc
out
jg
ja
test
(bad)
adc
adc
(bad)
(bad)
jmp
jle
cmp
(bad)
jge
mov
fidivr
mov
(bad)
cld
mov
call
pop
add
mov
cdq
std
sti
aas
ffreep
mov
aam
es
lock
aad
sbb
pop
jns
xor
mov
xchg
inc
outs
loopne
xor
shr
xlat
push
enter
inc
jge
mov
mov
dec
pop
xchg
push
mov
xchg
adc
adc
test
xchg
stc
dec
loope
pushf
and
mov
dec
call
xor
sub
std
or
pop
jmp
or
in
mov
mov
rcr
mov
cmps
repz
aad
retf
fsub
adc
mov
or
addr16
cmp
dec
push
or
in
jo
aas
mov
fmul
sub
out
jns
sub
inc
ret
push
pop
imul
pop
sbb
or
or
xchg
sahf
aas
leave
sbb
xchg
int
gs
scas
imul
mov
pop
push
std
cmp
fmul
xor
sbb
bound
int
inc
jle
adc
add
out
adc
or
cmp
jmp
mov
outs
cmp
cmp
mov
sar
push
arpl
dec
(bad)
mov
jl
fs
cmp
mov
pop
or
lods
(bad)
out
data16
scas
imul
jecxz
ret
aam
(bad)
mov
popf
xor
pop
daa
inc
sub
mov
cli
jae
mov
ins
inc
push
adc
sub
sbb
mov
sub
mov
popf
retf
mov
cmp
cmps
mov
ins
ins
sbb
adc
inc
les
lea
sbb
push
mov
aas
jecxz
data16
mov
outs
icebp
jae
loope
sub
in
pop
pop
push
inc
inc
xor
sbb
(bad)
lock
cmp
into
inc
cli
mov
les
adc
pop
lods
or
js
xchg
loop
js
cdq
mov
push
sbb
jge
int3
fstp
dec
or
pop
add
ds
mov
imul
loop
stos
xchg
call
push
pop
push
dec
mov
stc
mov
mov
cmp
scas
(bad)
cmp
icebp
pop
sub
pop
add
pop
ror
mov
push
cmp
int3
pop
adc
repz
add
lods
clc
push
int3
popf
push
inc
sbb
fwait
adc
imul
mov
mov
xchg
jb
sar
jmp
in
pop
jge
jb
mov
jp
out
lea
int
add
lock
xlat
cmp
repnz
out
inc
aas
xor
fld
cmp
(bad)
in
ficom
das
xor
or
cmp
mov
fsubr
sbb
lock
mov
mov
(bad)
push
sub
fstp
inc
icebp
mov
fst
sub
cmc
lods
pop
mov
mov
(bad)
mov
xchg
inc
mov
ds
mov
pop
outs
daa
xor
push
into
int
lock
fmul
mov
add
cmps
ins
les
in
sbb
xchg
out
dec
mov
pop
xchg
aam
xchg
arpl
xor
mov
test
inc
mov
ss
sub
push
lahf
cli
push
int3
mov
push
fwait
aaa
arpl
jne
les
outs
test
pop
sbb
test
xchg
(bad)
sbb
arpl
out
or
push
bound
push
push
sbb
jl
ret
(bad)
cmp
mov
mov
lods
or
retf
pushf
xchg
lods
test
xor
sub
push
outs
out
xor
mov
sbb
neg
(bad)
and
int3
and
inc
add
mov
and
adc
div
add
inc
xchg
(bad)
adc
push
push
out
in
mov
(bad)
(bad)
adc
or
lods
push
xlat
addr16
(bad)
cmps
scas
addr16
cld
(bad)
(bad)
popa
retf
in
mov
cwde
daa
mov
lods
mov
jno
fstp
push
repz
scas
push
mov
mov
xchg
mov
(bad)
mov
mov
mov
jmp
(bad)
mov
std
and
arpl
mul
jl
retf
leave
(bad)
outs
pop
sub
inc
sti
push
and
push
mov
mov
dec
out
sub
frstor
push
ins
pop
dec
ds
mov
pop
sub
mov
mov
sub
add
pushf
cwde
mov
push
stc
push
cmp
outs
std
and
lock
xor
fdiv
sub
fdiv
mov
jp
mov
aas
cmp
jno
cmp
jnp
mov
fsub
lea
cmp
pop
jns
data16
arpl
pop
mov
xchg
adc
adc
pop
cdq
lods
test
popf
sbb
mov
ins
mov
or
jmp
jge
(bad)
mov
cmps
or
push
ins
mov
sbb
inc
sahf
ja
push
ins
mov
jge
dec
mov
cmps
adc
test
in
mov
pop
aas
mov
pop
mov
xchg
pop
push
data16
imul
inc
pop
jae
xor
inc
loopne
pop
cs
lods
sub
pop
push
dec
pop
xlat
into
push
mov
dec
mov
adc
jbe
push
and
adc
mov
or
xchg
ss
inc
sbb
lds
(bad)
imul
push
popa
add
enter
ds
loope
retf
xchg
in
cli
icebp
cmp
(bad)
pop
adc
pop
mov
sub
lock
jno
int
je
inc
mov
test
lods
aaa
push
add
and
push
dec
cli
mov
lds
test
cmp
adc
fnstcw
jmp
bound
loopne
mov
ret
push
push
sti
pop
jbe
push
scas
retf
mov
outs
in
ss
mov
out
pop
add
jmp
cmp
mov
jae
adc
ins
pop
aaa
inc
(bad)
(bad)
jmp
into
jno
leave
sbb
push
push
push
scas
cmp
out
add
mov
repnz
cmps
cmp
or
mov
in
sub
arpl
xchg
shr
lock
and
dec
je
mov
push
mov
push
js
push
add
push
ja
sub
push
xlat
push
aad
jo
mov
dec
sbb
mov
sbb
test
sti
lahf
sar
(bad)
mov
mov
aam
fadd
addr16
(bad)
les
push
cmps
mov
sbb
mov
push
adc
lods
in
mov
fsubr
sub
mov
sub
sub
mov
fimul
jp
xor
sbb
sbb
and
aaa
or
movs
xor
sub
aad
pusha
out
fsubr
call
iret
or
clc
pop
lock
dec
loop
mov
jle
test
(bad)
adc
or
loopne
push
add
not
add
inc
jno
mov
scas
mov
aad
pop
fldpi
stos
push
mov
pop
loop
or
pop
jle
nop
dec
mov
loopne
add
outs
lods
adc
cmps
mov
dec
xor
xchg
xchg
mov
nop
fsubrp
nop
xchg
sbb
jecxz
sub
stos
fsubr
push
cmp
pop
xchg
pushf
out
push
jmp
mov
and
jecxz
sbb
dec
push
pop
jno
sub
sbb
xchg
pop
les
xor
dec
sbb
nop
mov
fsubr
mov
sub
xor
mov
cs
test
cld
stos
push
or
(bad)
call
mov
adc
adc
and
out
idiv
mov
fistp
pusha
int3
push
movs
(bad)
jl
in
(bad)
cmp
loopne
jecxz
inc
mov
sti
(bad)
push
out
out
cmps
xchg
inc
mov
mov
stos
lods
jecxz
aam
pop
pop
pop
rcl
adc
mov
xchg
fidivr
pop
arpl
call
movs
sbb
(bad)
pop
dec
pop
aas
in
add
(bad)
sub
idiv
ins
lea
inc
jmp
call
pop
stos
call
jg
imul
or
xchg
loopne
jmp
lods
adc
pop
mov
xor
adc
inc
pushf
mov
mov
xchg
hlt
lds
es
mov
mov
mov
xor
jmp
push
ins
cmp
icebp
pop
xlat
fistp
lock
jle
and
out
adc
mov
mov
cli
test
(bad)
loop
add
shl
out
in
cli
in
and
stc
mov
(bad)
jbe
std
out
int
std
dec
fild
mov
ja
ss
mov
sbb
inc
pushf
int
mov
icebp
addr16
sbb
imul
pop
mov
or
and
leave
sahf
in
cwde
sub
xchg
adc
mov
iret
push
cwde
sub
sub
sub
pop
repnz
pusha
mov
out
mov
sub
dec
imul
es
int3
or
or
xchg
(bad)
xor
cld
mov
push
jmp
or
cmp
cmp
cmc
nop
cmps
stos
cmp
std
cmp
cmp
(bad)
cmp
cwde
push
add
sbb
test
outs
pop
inc
push
push
cmc
inc
jne
jle
adc
adc
fwait
push
arpl
sub
iret
(bad)
mov
push
sti
jle
bound
jns
dec
mov
mov
test
mov
mov
mov
cli
xor
fs
movs
test
push
icebp
out
or
iret
lods
lds
jae
jne
sub
aad
pop
cmp
pop
jns
into
xor
test
adc
mov
outs
mov
aas
mov
mov
mov
stc
(bad)
cli
adc
cmp
inc
test
ret
loope
mov
xchg
jo
xor
cmps
mov
jmp
sbb
lahf
inc
out
in
mov
stos
sbb
hlt
xchg
jp
dec
push
push
mov
and
cmp
jne
hlt
test
shl
das
sbb
and
js
xor
add
sub
cmp
mov
ds
pop
push
and
xor
stc
push
ds
test
aas
mov
mov
dec
xchg
xor
cmp
dec
sar
imul
gs
fidivr
dec
shl
adc
fsubr
clc
fdivr
mov
retf
push
and
jno
jle
mov
(bad)
cmp
je
in
fstp
call
out
cmp
out
fcom
push
xchg
out
enter
mov
shl
imul
push
adc
out
movs
sub
sub
push
repz
bound
pushf
pop
pusha
lahf
fisttp
jle
mov
popf
stos
(bad)
jne
pop
sub
xchg
and
sbb
imul
aas
hlt
fcmovu
fisttp
dec
mov
cli
xor
fsub
pop
dec
mov
jge
and
imul
mul
stc
in
xor
mov
mov
push
mov
fdivr
shr
retf
gs
jmp
call
jmp
dec
call
xor
test
jne
and
rcl
in
shl
sti
xor
movs
pop
imul
clc
xor
pop
jmp
mov
repz
std
movs
cmps
xchg
xchg
mov
imul
shr
mov
das
imul
(bad)
(bad)
(bad)
mov
jnp
cmp
jb
mov
das
daa
mov
pop
xchg
mov
adc
(bad)
pop
adc
lods
fld
hlt
mov
imul
and
mov
sar
jecxz
cmp
push
ret
adc
jp
pop
lahf
cmps
(bad)
cld
div
out
fwait
xchg
sbb
and
daa
icebp
clc
mov
outs
out
scas
fnsave
div
in
fcomip
cwde
enter
daa
jb
cwde
fistp
fdivrp
icebp
scas
(bad)
in
jno
push
(bad)
lds
fistp
sbb
xor
mov
dec
pop
lods
gs
fs
push
(bad)
scas
pop
inc
sub
daa
ja
mov
pop
push
out
arpl
sti
loope
jnp
sahf
lock
(bad)
mov
push
mul
adc
adc
pushf
jno
(bad)
cmp
iret
add
test
push
sar
adc
fs
jge
jns
cmp
stc
iret
mov
scas
push
daa
cmp
xchg
bound
punpcklbw
aaa
adc
mov
les
ja
aas
inc
or
dec
call
and
pop
jb
jns
aad
mov
push
jecxz
nop
popf
dec
dec
mov
sub
stos
pop
stos
pop
loope
pop
fidiv
mov
je
cli
xchg
shr
cmp
push
loop
jge
aam
ins
test
les
jnp
popf
cwde
daa
sbb
popf
shl
adc
xchg
enter
stc
(bad)
sub
pop
enter
cmp
push
loope
iret
add
pop
jge
jbe
sub
(bad)
ins
(bad)
(bad)
xor
retf
packssdw
cld
mov
xchg
stos
cmp
aam
retf
fmul
daa
push
xchg
outs
sbb
push
cmp
cmp
xchg
sbb
icebp
pop
pop
xchg
mov
leave
sub
jns
imul
mov
fisttp
jge
cmp
retf
into
push
ffree
push
pop
(bad)
mov
ror
outs
fidivr
cdq
xor
add
pop
inc
sbb
cmps
and
inc
call
mov
pop
cmp
sub
sub
je
ins
rol
sbb
sbb
jnp
int3
mov
mov
adc
mov
lods
in
pushf
lods
mov
enterw
nop
lds
mov
fsub
and
retf
sbb
mov
iret
xchg
xor
icebp
pop
cmp
push
out
sub
dec
or
out
cmp
cli
nop
aad
jns
retf
in
xchg
sti
dec
mov
jae
fidivr
addr16
pusha
push
nop
sub
push
push
retf
mov
fs
xor
and
pop
test
rcr
or
mov
xchg
push
ins
push
scas
pop
imul
ror
test
shr
sub
mov
int3
test
jmp
popf
in
fdiv
dec
cdq
gs
movs
popf
push
cmp
mov
aas
outs
test
xor
fsubr
(bad)
aam
xabort
mov
fs
in
outs
ret
fistp
clc
mov
repnz
inc
scas
clc
mov
mov
(bad)
in
jmp
nop
scas
call
fist
stc
mov
stos
pushf
dec
or
ror
div
mov
adc
repz
jle
stc
sbb
sahf
lahf
outs
adc
stc
hlt
push
(bad)
in
lods
sub
mov
int
jnp
pop
adc
sub
pusha
cmp
mov
pop
(bad)
pop
jmp
adc
icebp
and
repnz
mov
sahf
mov
jl
rep
cmp
cmp
mov
mov
fbstp
jecxz
xor
not
iret
pusha
mov
sahf
ins
idiv
sar
out
iret
neg
jmp
cwde
addr16
mov
in
xor
sub
daa
imul
or
ss
sbb
icebp
nop
pop
mov
lods
mov
push
mov
sub
jns
mov
xor
imul
mov
or
adc
add
xchg
fyl2x
pop
loope
rol
stos
jb
xchg
sbb
pushf
push
hlt
xor
mov
mov
out
mov
push
adc
xchg
xor
into
out
cmps
or
xchg
fcomp
add
in
jecxz
aam
dec
retf
xor
or
push
sbb
ret
imul
jl
xchg
jl
add
fnstcw
data16
mov
fldcw
loop
stc
sbb
pop
mov
mov
inc
mov
and
stos
inc
xchg
test
mov
push
gs
inc
loopne
xor
rcl
lds
jbe
jecxz
inc
aaa
adc
out
jne
inc
cmp
add
fcmove
out
ja
push
pop
retf
aad
inc
ror
(bad)
mov
popa
outs
jmp
mov
in
sub
sub
in
push
jecxz
jp
xor
fmul
movs
popf
out
shl
mov
adc
push
jmp
sub
push
push
adc
sub
pop
cmp
leave
jg
mov
dec
clc
inc
xchg
imul
mov
cmp
call
mov
xchg
pushf
xchg
stos
je
fisub
xchg
call
fisttp
xchg
lods
sbb
cmp
cmp
jp
jle
xchg
fisttp
sub
xor
xchg
mov
es
pop
sub
inc
rcl
leave
rcr
daa
sahf
dec
fcomp
dec
mul
pop
fwait
mov
cmp
ror
jle
sub
sbb
mov
jmp
clflush
daa
scas
dec
xlat
mov
jnp
mov
out
xchg
sti
jecxz
mov
int3
test
jg
std
push
jl
out
sbb
fbstp
sbb
enter
adc
mov
mov
nop
pop
dec
(bad)
push
cmp
frstor
sbb
mov
push
push
sub
test
or
icebp
ss
cmp
loope
pop
inc
mov
mov
cmp
nop
scas
mov
dec
cdq
push
les
pop
adc
in
mov
dec
iret
push
sbb
bnd
lea
fistp
je
mov
or
sub
jl
icebp
pop
mov
scas
or
retf
sbb
test
mov
sbb
jmp
lea
mov
in
mov
aaa
lods
icebp
sub
cmp
sub
sar
retf
sti
hlt
dec
push
hlt
fwait
(bad)
fist
popf
movs
sar
jnp
inc
inc
jle
std
cmps
aam
retf
inc
push
fidiv
pop
sub
(bad)
idiv
and
jns
mov
mov
outs
or
push
out
nop
mov
jns
inc
sub
(bad)
mov
cmp
gs
lea
div
dec
in
aas
retf
and
loop
ins
rcr
into
mov
jns
mov
mov
xchg
jbe
cmps
mov
or
repz
jae
dec
call
(bad)
xchg
aaa
in
mov
stos
cld
push
xchg
fprem
out
inc
mov
in
shl
in
mov
fcomip
ins
jbe
call
jmp
push
leave
pop
loop
mov
and
repnz
out
ret
mov
xlat
scas
loopne
out
pop
jne
jno
mov
cmp
dec
jecxz
das
arpl
(bad)
ins
push
mov
stos
cwde
rcr
xor
jmp
sar
(bad)
popf
cwde
sar
cld
cli
push
int3
imul
fidiv
xor
xor
cld
inc
int3
imul
pop
fild
cmps
dec
movs
fistp
mov
cmp
cmc
clc
inc
sub
xchg
or
cli
add
repnz
or
out
xor
pop
jmp
repz
inc
imul
sbb
adc
dec
sub
inc
jmp
and
aam
pusha
retf
xor
push
or
inc
adc
xchg
xor
cdq
mov
push
push
add
pop
mov
and
getsec
daa
dec
iret
lods
xchg
mov
or
int3
inc
jne
xor
push
dec
push
mov
pop
and
sbb
and
stc
scas
mov
fbld
ret
pop
or
cmp
enter
inc
pop
inc
(bad)
sar
sub
mov
add
cmp
fwait
mov
sbb
sub
xchg
ret
ins
cmps
movs
lods
aad
out
dec
jns
sbb
push
out
jb
cmps
xchg
mov
push
fst
xor
sub
pop
stos
pop
stos
into
xchg
stos
les
cmp
push
mul
(bad)
inc
xor
int3
cdq
sbb
jne
jne
cmp
out
mov
ss
pushf
and
retf
out
aad
and
pmaxsw
mov
popf
rcl
cdq
fst
(bad)
cmp
sub
arpl
and
popf
arpl
mov
mov
out
mul
stos
cmp
scas
jl
inc
mov
mov
lods
loop
inc
mov
es
mov
movs
dec
les
dec
jmp
mov
push
cmp
int3
imul
mov
mov
mov
cmp
xor
fld
pusha
(bad)
popa
jne
pop
pop
mov
pop
jnp
and
mov
stos
push
push
ins
lea
call
out
xchg
inc
stos
inc
ds
sahf
test
mov
mov
retf
lods
xchg
stc
mov
fsub
das
stc
pusha
loope
mov
pop
fldcw
push
pop
push
iret
push
inc
dec
xchg
xchg
xchg
push
jecxz
aas
push
movs
sub
iret
mov
or
xor
in
xchg
xor
cwde
mov
popa
cmp
int
adc
adc
test
dec
mov
adc
scas
xor
push
mov
movs
xor
in
int3
retf
outs
fwait
mov
out
es
js
int
pop
jno
fmul
aaa
fld
rcr
cmps
(bad)
pcmpeqd
pop
dec
push
sbb
aad
add
(bad)
in
push
fst
jg
dec
movs
dec
test
mov
lds
sub
ins
pop
sub
jae
rol
dec
xchg
sbb
retf
cs
push
sub
retf
(bad)
in
pop
inc
stos
cmp
adc
inc
sti
mov
fldcw
mov
push
(bad)
or
daa
inc
mov
xor
mov
pop
inc
mov
test
cmp
inc
xchg
jp
hlt
icebp
hlt
jae
mov
fistp
xor
pushw
pandn
xchg
mov
dec
sub
test
or
sar
cmps
pop
add
mov
sub
mov
mov
mul
mov
xor
cdq
shl
loope
mov
inc
shr
jnp
cmp
jb
nop
pop
cmps
jb
mov
or
sti
ins
lock
mov
cmp
inc
in
push
mov
sbb
loop
movs
(bad)
lods
sub
in
iret
dec
jnp
adc
cmp
mov
clc
stos
movs
jge
out
mov
movsx
mov
jnp
aas
outs
add
idiv
pop
mul
sub
mov
inc
xchg
dec
ss
pop
push
loopne
test
push
dec
add
not
mov
mov
(bad)
inc
sub
mov
imul
and
movs
cmp
add
out
and
jnp
xchg
mov
mov
lea
imul
loop
adc
ins
repnz
fisubr
loopne
xor
add
sbb
out
jmp
pop
sbb
dec
popa
jbe
push
cmp
inc
fld
(bad)
imul
mov
out
in
cwde
stc
mov
jo
shr
jae
push
xor
cmps
xor
rcl
into
mov
icebp
les
loop
push
retf
push
in
fwait
gs
mov
scas
retf
test
xor
push
stos
pushf
popa
ja
xor
addr16
loope
in
and
mov
fsub
jge
mov
xchg
inc
ins
and
sbb
push
jns
aas
lds
push
(bad)
and
mov
aad
inc
jnp
jmp
dec
xor
stos
mov
mov
ins
cmc
inc
jg
icebp
cli
ror
jl
sahf
(bad)
or
or
xchg
je
lea
lods
cmp
inc
ins
and
mov
inc
xchg
xor
adc
shl
mov
movs
jp
push
mov
xchg
rol
ja
mov
dec
mov
push
push
xchg
arpl
xchg
adc
sub
lods
stos
test
xlat
je
mov
es
(bad)
cmp
bound
retf
push
mov
out
imul
jmp
lods
or
inc
retf
movs
pop
pop
mov
add
adc
inc
repz
in
cmp
les
out
sar
dec
xchg
pmaxub
jbe
loop
fdecstp
jl
sub
adc
js
jp
xor
loope
inc
add
dec
and
xchg
fwait
xchg
jno
pop
pop
pop
ss
jmp
cdq
pop
dec
mov
ins
or
pop
mov
sar
mov
xor
xor
adc
loope
call
jmp
or
mov
rcr
inc
mov
out
pop
aaa
xor
scas
aam
addr16
jne
push
int3
nop
jae
jo
pop
popa
xor
mov
mov
jns
jbe
arpl
adc
jbe
cld
imul
lds
fsubr
cdq
enter
jmp
fisubr
pushf
retf
jmp
push
(bad)
loopne
jg
jp
sbb
iret
outs
adc
cs
cmp
push
scas
(bad)
fld
scas
push
fs
subps
repz
mov
cli
hlt
push
xchg
jge
mov
mov
in
jno
out
dec
movs
hlt
jbe
sbb
imul
xlat
jno
xchg
fcmovne
out
int3
in
js
xchg
adc
in
mov
mov
pop
pop
in
retf
int
shl
imul
xor
stc
out
pusha
mov
scas
out
pusha
mov
mov
pusha
mov
inc
ffreep
ins
in
retf
ffreep
ins
in
mov
ret
and
imul
ins
in
int
pusha
mov
fiadd
pop
sti
clc
and
imul
cld
int3
push
or
jmp
out
mov
pop
cli
dec
sbb
inc
dec
sbb
pop
in
and
mov
jo
lods
inc
xor
aas
cmc
call
hlt
xor
push
popf
mov
pop
sub
hlt
test
test
jp
mov
dec
mov
and
retf
mov
and
push
int3
fist
gs
aam
xchg
or
sub
adc
loopne
imul
and
scas
mov
retf
mov
push
jmp
cmpxchg
cmp
popf
(bad)
xchg
sar
xlat
or
jne
pop
inc
movs
js
jle
std
add
sti
jg
mov
and
cli
(bad)
jne
mov
cdq
lea
push
ja
and
jge
mov
sub
stos
or
xchg
loope
cmp
lahf
jno
and
mov
(bad)
jecxz
mov
xchg
dec
into
stos
fistp
mov
fild
stos
out
std
and
stos
pop
sbb
jbe
(bad)
cmps
ss
call
cmp
not
lods
inc
lahf
(bad)
push
sub
jmp
mov
inc
xchg
sub
in
ins
fild
(bad)
or
sub
or
pusha
mov
sbb
out
and
retf
cwde
cdq
sbb
mov
sub
xchg
xchg
ficom
in
lahf
add
xor
lods
gs
int
shr
out
cmp
bswap
aas
das
test
pop
sub
pop
fs
or
xor
ret
adc
faddp
in
fnstenv
fcmove
mov
pop
mov
ja
aad
mov
pop
lods
jecxz
dec
jbe
call
cmp
sahf
sbb
sub
les
mov
sub
mov
arpl
jo
stos
shr
xor
int
pop
pop
cmps
mov
xchg
stos
out
in
mov
pop
leave
cdq
inc
sbb
in
ins
xchg
inc
mov
inc
pmaddwd
div
out
adc
push
mov
xchg
jno
out
pop
inc
cmc
outs
scas
mov
mov
enter
adc
and
pop
cmp
lods
sbb
(bad)
xchg
(bad)
push
cmp
ret
repz
jcxz
out
adc
stc
mov
mov
ins
lods
bound
js
xor
iret
push
test
mov
lods
sbb
shr
sbb
xor
cmp
cs
xor
call
sub
test
mov
push
cli
fmul
pop
mov
pop
les
or
xor
aam
push
test
xchg
jne
rol
jo
movs
dec
sahf
pop
push
sahf
push
xchg
mov
div
cmc
aaa
xor
fimul
hlt
and
jbe
push
js
int3
mov
enter
sbb
sub
add
mov
pop
add
clc
lea
dec
sub
shrd
push
int
adc
(bad)
fs
xchg
scas
dec
outs
(bad)
mov
mov
fs
adc
xlat
mov
mov
cli
(bad)
cli
outs
xor
aam
pop
cdq
pop
adc
scas
push
(bad)
sar
jno
stos
lea
sub
scas
or
push
(bad)
out
xchg
cdq
mov
fistp
aaa
pop
daa
lods
push
mov
push
jns
retf
jecxz
cmp
cmp
xchg
mov
mov
arpl
jno
les
out
jnp
xlat
mov
xchg
cmp
pop
int3
and
enter
les
mov
retf
dec
jecxz
dec
fdivrp
(bad)
fstp
stc
out
xor
lods
cmps
sti
mov
(bad)
(bad)
push
push
cmp
jmp
mov
mov
or
adc
push
aad
jne
mov
sbb
cs
daa
cmp
rcr
add
shufps
push
mov
das
test
hlt
sbb
js
cs
popf
arpl
retf
loopne
adc
inc
push
adc
mov
or
mov
sbb
inc
lock
mov
adc
push
mov
(bad)
cmp
mov
sar
jb
mov
ret
push
mov
aas
loope
jmp
shl
jne
nop
mov
jge
xor
adc
mov
inc
inc
jae
dec
jne
xor
stos
xor
jnp
(bad)
call
mov
rcr
popf
out
push
scas
mov
push
cmps
leave
(bad)
sub
je
inc
icebp
mov
pushf
dec
mov
(bad)
or
sahf
push
ficomp
nop
(bad)
mov
mov
(bad)
push
movs
or
dec
sar
cmp
mov
aaa
and
jecxz
sbb
fcom
sti
sti
mov
cmc
adc
xchg
in
cmps
pop
xchg
ds
test
out
repz
scas
jmp
(bad)
push
xchg
push
xchg
push
push
and
mov
shr
pusha
add
or
lea
(bad)
outs
xchg
retf
mul
mov
je
mov
push
enter
cwde
push
ja
fdivr
jo
inc
lock
adc
sub
inc
push
cs
in
retf
div
mov
lds
mov
(bad)
aam
pop
(bad)
ja
dec
push
push
les
cmp
mov
jbe
inc
les
push
adc
cmp
hlt
(bad)
cmp
jmp
or
(bad)
sub
das
cld
(bad)
clc
pop
call
test
(bad)
out
int
loop
push
(bad)
jmp
mov
and
stos
movs
fdiv
adc
aaa
into
jge
cdq
push
dec
sbb
inc
sbb
clc
dec
adc
in
jmp
inc
cmp
sub
dec
mov
mov
(bad)
jg
ror
mov
das
xor
icebp
stc
inc
push
push
push
rcr
dec
push
retf
xor
cmp
popa
iret
jp
arpl
inc
pop
jg
mov
xor
sub
scas
mov
push
ror
push
inc
fs
and
test
dec
call
cmps
xor
push
cmp
sub
xor
lds
push
test
test
adc
sti
cmp
or
mov
test
cmp
pusha
inc
scas
es
cdq
aam
or
push
cmp
jmp
sbb
test
push
daa
push
ins
or
hlt
das
rcl
ret
push
xor
xor
xchg
or
xor
test
in
xchg
sub
inc
push
dec
aam
push
mov
pop
fwait
call
js
xchg
inc
push
cli
mov
mov
bnd
pop
gs
mov
and
rep
add
fiadd
mov
(bad)
sbb
add
push
pop
retf
out
xchg
in
or
(bad)
addr16
pusha
in
sbb
(bad)
push
loop
push
inc
clc
push
jno
inc
mov
mov
retf
(bad)
dec
das
dec
