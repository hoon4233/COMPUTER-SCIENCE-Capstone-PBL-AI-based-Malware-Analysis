mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
imul
test
or
dec
ins
imul
add
(bad)
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outs
jb
add
(bad)
stc
scas
call
mov
fcomip
iret
addr16
(bad)
call
je
sub
mov
int
sti
push
imul
pop
push
imul
pop
and
add
add
repz
jns
cmp
in
sti
jg
out
cmp
pop
push
dec
bound
arpl
adc
pop
fadd
sbb
push
push
jns
movs
ins
or
and
or
jb
popa
arpl
cmovle
add
pop
inc
add
inc
clc
jmp
adc
int3
jge
in
popf
mul
xchg
popf
movs
loopne
in
or
sbb
out
test
aas
or
fcom
inc
add
cmp
dec
adc
push
and
fs
jmp
cmp
cmp
js
cmp
cmp
js
add
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
add
cmp
inc
inc
cmp
fadd
pushf
mov
call
daa
and
fcomp
fdiv
xchg
xchg
xchg
xchg
fldcw
and
jl
xchg
and
les
mov
outs
push
sub
je
movzx
mov
ss
pop
ret
addr16
jbe
cmp
unpcklps
xlat
add
aad
sub
dec
and
ins
ja
outs
mov
and
imul
xor
xor
or
test
ins
add
imul
outs
jmp
out
gs
push
jle
push
push
je
popa
inc
inc
gs
ins
jg
dec
icebp
outs
jo
gs
cmpxchg
ret
mov
mov
(bad)
mov
add
inc
push
dec
add
inc
or
and
movs
imul
imul
push
call
fild
add
data16
sbb
cs
jp
add
sub
xor
mov
aas
inc
and
sub
nop
inc
dec
sub
xor
push
ficomp
cmp
bound
pop
cmp
icebp
call
jmp
retf
jns
fucomip
(bad)
mov
mov
jl
push
cmp
add
js
and
mov
data16
sub
ja
fdivr
dec
or
mov
add
nop
call
cmp
mov
adc
jmp
retf
add
std
mov
mov
and
pop
mov
mov
add
jmp
adc
(bad)
inc
sbb
and
add
xchg
mov
cmp
xor
mov
add
jnp
mov
or
sbb
mov
jnp
loopne
cmp
sbb
idiv
cld
add
or
adc
dec
add
cld
mov
cmp
dec
pop
mov
sti
push
and
sub
or
mov
pusha
push
mov
inc
push
and
inc
sub
pusha
push
xor
fild
and
je
rcl
or
enter
test
push
lods
mov
push
mov
dec
loop
mov
sar
add
(bad)
std
push
sub
mov
mov
sub
jl
ja
sbb
xor
mov
cmp
pop
(bad)
je
jmp
fld
add
stc
lds
jbe
hlt
test
push
xor
push
ret
call
push
push
mov
lea
mov
rol
push
xor
(bad)
mov
or
ja
sahf
pop
add
xchg
(bad)
mov
or
sbb
add
int
ret
movs
ret
pop
pop
pop
pop
(bad)
mov
fidivr
imul
xchg
js
or
cld
cmps
inc
push
inc
jl
mov
mov
ss
add
ja
enter
lea
inc
add
ds
mov
dec
test
gs
mov
sbb
sbb
inc
and
inc
sar
cmp
fidiv
inc
shl
mov
loopne
(bad)
dec
jle
je
(bad)
lods
pop
add
dec
ror
mov
cmp
ja
dec
mov
lods
std
retf
dec
aas
call
jo
ret
mov
lahf
movs
and
xchg
mov
clc
fsubr
je
mov
or
pop
xor
sbb
ins
mov
nop
je
ja
or
jg
loopne
ror
mov
das
jo
mov
push
xor
or
mov
adc
lea
mov
repnz
mov
jne
mov
test
btr
outs
push
jge
mov
or
ins
mov
mov
jnp
sub
lea
daa
jmp
and
sbb
mov
pop
sbb
hlt
idiv
pop
cmp
sub
sub
cmp
and
inc
sbb
out
and
jne
mov
jg
fbld
test
mov
mov
mov
xor
lea
push
or
imul
(bad)
shr
iret
mov
inc
jo
jge
jns
and
jp
jl
pop
or
les
sbb
jne
lea
test
int3
or
int3
dec
and
bsf
or
jmp
fwait
pop
outs
add
ror
push
bsf
mov
shl
xor
xchg
jmp
and
mov
jmp
mov
rcr
sub
shl
jge
and
cwde
fwait
inc
cmp
(bad)
mov
adc
push
or
pcmpeqd
lock
jns
jbe
dec
add
popa
scas
call
pop
cs
pusha
xchg
dec
or
(bad)
test
rcl
movs
enter
add
mov
jne
sub
clc
fs
mov
sub
call
or
pop
cbw
test
dec
imul
scas
pushf
outs
movs
adc
popf
and
push
loop
adc
cmp
jne
shl
push
mov
iret
jmp
nop
(bad)
imul
xchg
push
push
fwait
pop
pop
xchg
loop
in
jp
or
into
nop
pop
rcl
je
dec
inc
add
lock
mov
push
jmp
(bad)
pop
sub
test
jne
or
or
lahf
push
adc
inc
cld
or
cmp
inc
js
jo
scas
inc
pop
xor
mov
cmps
jno
adc
pop
hlt
mov
add
inc
lock
cmp
je
(bad)
fisubr
dec
clc
sub
sub
or
mov
sub
out
adc
add
shr
sbb
add
inc
cld
lsl
xchg
cli
mov
sub
jo
fcom
cli
mov
push
cmp
mov
sbb
lahf
mov
push
call
sbb
cli
cmp
pop
push
sbb
jb
jns
inc
push
in
adc
pop
mov
mov
mov
mov
jg
or
dec
or
push
mov
loop
rol
add
cmp
out
jbe
clc
xor
out
iret
mov
call
xchg
loope
push
popa
add
mov
push
cmc
(bad)
mov
add
jecxz
cmp
push
bound
rol
add
jb
xchg
push
mov
sub
adc
cmp
and
stos
mov
inc
xor
in
and
dec
in
mov
pop
das
or
or
mov
call
or
mov
int
dec
inc
add
or
adc
pop
dec
pop
fdiv
(bad)
clc
cwde
add
add
in
(bad)
mov
iret
jno
clc
imul
jo
mov
cs
popf
nop
lahf
add
mov
push
icebp
dec
cmp
add
add
ins
jnp
lock
cmp
rcr
dec
daa
mov
or
cmp
pop
mov
je
outs
or
fild
pop
mov
shr
add
xor
sub
pusha
and
ret
add
rol
xor
and
out
add
push
or
adc
lea
jl
icebp
xchg
pop
add
ins
sub
outs
adc
mov
push
dec
shl
(bad)
pop
mov
cmp
stc
dec
enter
mov
in
fsub
sbb
jmp
stos
and
push
xor
lods
shl
shr
xchg
jb
inc
push
inc
xor
jnp
je
jns
xchg
cmps
push
lea
aas
sti
lods
fsubp
cld
jge
leave
lea
or
mov
neg
(bad)
fst
add
js
or
sar
mov
iret
adc
pop
hlt
mov
fadd
ror
adc
std
test
jne
xor
cmps
xlat
je
mov
sbb
shl
mov
and
imul
je
cmp
jg
scas
test
inc
ret
and
adc
fdivr
dec
mov
cmp
jbe
mov
mov
sub
sbb
sbb
add
fmul
mov
loop
pop
xchg
mov
inc
pop
jo
mul
shl
push
mov
push
mov
cs
loop
push
outs
pop
mov
add
enter
mov
pusha
cmp
mov
inc
aas
wbinvd
shr
xchg
pop
enter
aaa
sbb
sbb
inc
add
add
nop
retf
add
add
movs
xor
mov
xchg
or
loope
adc
inc
add
icebp
mov
mov
mov
iret
out
ud0
push
les
push
mov
xor
mov
retf
mov
inc
in
in
enter
mov
add
add
cmp
jae
push
ss
push
fwait
jbe
mov
jnp
cmp
mov
mov
inc
lock
popa
jbe
sub
test
inc
clc
div
stc
jecxz
cld
or
je
add
je
and
sbb
clc
jge
dec
push
lea
inc
call
pop
dec
aas
xor
fcom
pop
lahf
outs
add
push
(bad)
push
mov
mov
push
jb
push
xor
mov
arpl
pop
add
rcr
pop
enter
push
jne
mov
fisubr
int
inc
setne
push
fidivr
sub
aas
dec
sbb
sbb
popf
leave
sbb
mov
and
mov
or
loopne
push
xor
rol
pushf
mov
mov
sub
fdivr
es
pop
mov
cmp
jne
mov
adc
mov
and
mov
or
jne
mov
or
addr16
xor
ins
(bad)
cld
mov
call
ficom
loopne
js
mov
add
dec
call
cli
in
adc
fistp
call
test
or
xchg
loop
sbb
dec
xor
and
push
push
ror
mov
add
adc
test
pop
mov
je
mov
push
repnz
or
cmp
mov
stos
inc
add
or
dec
add
mov
and
sub
loopne
jge
push
xor
cmp
jb
ficomp
jb
mov
and
dec
loopne
(bad)
aaa
push
mov
aas
les
mov
je
or
iret
add
in
movq
popa
sub
(bad)
inc
fiadd
add
js
inc
push
adc
in
xchg
add
pop
jb
nop
lahf
xchg
push
mov
js
les
push
dec
jne
data16
imul
fucom
add
test
and
nop
and
pop
inc
add
xchg
(bad)
jb
clc
push
test
sbb
push
adc
pop
cmp
fcom
or
or
xor
(bad)
std
xor
push
mov
lea
rcl
pop
jmp
mov
in
mov
pop
out
add
mov
and
fdivr
or
jne
(bad)
int3
loope
xchg
cmp
cmp
adc
jecxz
mov
dec
adc
jle
ds
xchg
arpl
mov
fnstenv
in
xchg
scas
mov
scas
aam
pop
xchg
sti
xor
imul
pop
es
test
call
std
(bad)
mov
out
pusha
mov
movs
mov
adc
inc
jb
cld
dec
xchg
shr
add
call
imul
lock
fwait
inc
lock
xlat
(bad)
mov
or
cs
repz
shr
daa
xchg
ss
shl
cmp
out
loopne
mov
inc
push
or
pop
inc
dec
adc
and
nop
out
in
add
or
push
ror
or
jo
xchg
test
jmp
mov
jmp
mov
sbb
push
and
xchg
mov
sub
mov
sbb
inc
xor
das
js
pop
dec
add
adc
inc
jmp
xor
adc
and
mov
mov
arpl
dec
add
sbb
cmp
fdiv
or
jb
inc
js
ja
daa
shr
dec
mov
ret
je
inc
pop
mov
or
imul
into
mov
push
loopne
push
sub
mov
jp
push
xor
push
cmp
and
gs
or
and
ins
outs
jb
add
scas
add
popa
imul
popa
jae
outs
arpl
mov
shr
push
and
bound
arpl
sbb
or
loopne
lods
or
cmp
outs
imul
outs
add
xchg
jp
mov
cdq
cmp
imul
addr16
outs
lahf
mov
(bad)
mov
push
xor
xor
mov
jmp
jne
repnz
out
add
fild
leave
add
clc
jbe
mov
cmc
lahf
gs
out
mov
add
cmp
jne
es
inc
fisttp
mov
cmps
push
mov
jge
jl
in
inc
clc
or
sbb
mov
xchg
xchg
add
add
pusha
ja
movs
fstp
add
pop
sub
call
jbe
ja
mov
shl
mov
pop
movs
pop
sti
shl
add
mov
(bad)
movs
fucomip
fbstp
loope
lea
add
shl
repz
push
dec
jae
mov
jmp
gs
or
sar
xlat
mov
xor
div
imul
js
and
pushw
data16
(bad)
jle
inc
popf
fs
inc
xor
add
jge
adc
loope
aam
pop
mov
mov
call
jne
inc
cmp
shl
pop
aas
es
jne
mov
jmp
mov
push
rcr
scas
mov
cmp
jne
mov
shl
ja
dec
adc
add
inc
or
leave
push
or
shl
dec
and
stos
sbb
mov
rol
dec
mov
jnp
outs
push
jns
fistp
fimul
and
cmp
lsl
jno
mov
mov
popa
mov
hlt
push
mov
repz
pop
jl
push
sbb
jl
mov
call
add
ret
mov
dec
call
cs
and
jbe
rcl
and
add
(bad)
mov
test
je
test
je
push
mov
inc
sub
jl
fadd
mov
inc
mov
xor
neg
bound
rcr
arpl
or
out
dec
pop
cwde
and
ffreep
mov
bndstx
mov
aas
add
in
or
sbb
pop
or
dec
loopne
push
(bad)
pop
ds
mov
sub
fcom
jecxz
sahf
or
xor
adc
jne
lahf
cwde
sbb
push
jmp
cmp
ja
movzx
add
cmp
pop
inc
sbb
mov
jmp
and
push
push
push
xor
pop
pop
adc
or
jne
mov
(bad)
mov
mov
mov
es
mov
sbb
sbb
inc
or
je
pop
jle
cmp
jg
sub
inc
fdivr
inc
cld
(bad)
cmp
jg
add
mov
inc
rep
jmp
mov
jmp
mov
sub
icebp
jmp
mov
ins
ret
pop
into
or
add
ror
add
(bad)
(bad)
cmp
je
cmp
ja
sub
jg
jmp
and
sub
jle
enter
push
nop
adc
ror
or
push
test
cmp
repz
mov
mov
mov
or
adc
fnstenv
sbb
pop
xchg
jl
pushf
lock
add
jle
or
shr
retf
adc
jbe
sub
jo
push
add
clc
sub
pop
inc
mov
pop
(bad)
fmul
mov
or
mov
mov
adc
xor
jmp
add
add
pop
cmp
aad
data16
add
ret
mov
ins
jno
fucomp
or
push
lock
or
jbe
and
cmp
add
rol
jmp
xor
mov
jmp
sub
ins
push
std
daa
clc
mov
sub
add
js
inc
out
inc
mov
out
mov
pop
neg
scas
(bad)
aad
inc
mov
mov
cs
jmp
jne
imul
adc
or
xor
add
sbb
iret
frstor
arpl
mov
jle
in
push
in
xor
push
push
mov
popf
stc
fimul
add
lea
sahf
pop
les
fucomi
in
fwait
fs
cmp
add
jmp
pop
pop
pop
pop
adc
je
mov
cmp
xor
clc
shl
dec
mov
(bad)
clc
std
scas
dec
pop
int3
fimul
push
push
scas
pop
arpl
std
jmp
cwde
rcl
cmp
std
mov
jnp
dec
sbb
clc
data16
cmp
cmp
dec
jmp
mov
add
mov
xor
mov
mov
lods
test
(bad)
std
pop
lock
cmp
ja
sub
mov
fldcw
nop
fnstcw
pop
push
push
fld
idiv
in
(bad)
fldl2e
fmulp
fld
frndint
fsubr
(bad)
lock
faddp
fscale
fstp
pop
ret
aas
pop
jb
idiv
fwait
sbb
cdq
push
jnp
icebp
daa
sub
mov
pop
cmc
ss
in
or
fstp
dec
or
psubusw
mov
fldcw
pop
inc
fsubr
mov
adc
lock
cmp
jbe
dec
add
jmp
rol
loop
pushw
add
stos
call
fwait
icebp
add
jmp
cmp
cmp
call
add
push
aas
je
pop
mov
push
fisttp
push
ins
aam
ins
out
mov
cmp
scas
jb
or
and
jne
fild
add
adc
sub
lahf
jmp
cmp
mov
rol
lock
mov
cmp
jbe
adc
or
sbb
xchg
div
test
xor
mov
mov
call
rol
xor
ret
jmp
pop
cmp
jne
dec
je
mov
mov
sbb
add
(bad)
fbstp
jmp
adc
add
mov
je
mov
shl
das
push
adc
add
adc
add
jne
add
jmp
pop
cmp
cmp
jne
shr
shl
ja
out
add
push
mov
shr
push
call
dec
dec
pop
cmp
fisttp
push
inc
ret
cmps
jns
int
out
mov
cmp
jne
dec
dec
dec
popf
aad
iret
and
mov
clc
lahf
adc
cli
and
mov
add
pop
pusha
push
add
add
adc
add
adc
fst
sar
sbb
add
neg
add
not
jl
ffree
jbe
sbb
dec
add
idiv
cmp
adc
les
jmp
iret
repz
push
sbb
push
adc
iret
repz
adc
or
mov
xchg
out
sti
push
or
ret
pop
fistp
ins
and
mov
push
inc
or
std
sti
and
add
je
and
out
out
js
pop
pop
je
xor
dec
and
(bad)
out
pop
inc
test
and
add
sub
or
cmp
outs
ret
ja
lea
push
add
push
outs
out
int
push
mov
sar
or
dec
js
pop
sub
jmp
mov
out
inc
inc
inc
jmp
mov
sbb
xchg
and
add
not
add
scas
leave
shl
stos
aad
inc
cmps
les
cwde
pop
xor
mov
jg
jmp
cmp
movs
push
push
cmp
(bad)
fisttp
push
inc
mov
dec
jne
pop
test
add
mov
mov
int3
stos
sub
fsub
rol
rcr
add
ror
and
xchg
add
add
mov
push
shl
ficom
lods
arpl
call
cmp
ja
dec
mov
or
idiv
out
adc
add
mov
sub
jne
and
mov
addr16
mov
jmp
stos
dec
mov
je
daa
pop
sbb
fadd
cmp
cmps
es
sub
sub
leave
jne
pop
out
jnp
push
not
inc
and
hlt
aaa
push
fbstp
or
je
jecxz
pop
lea
lea
ja
inc
pop
dec
fld
jb
mov
retf
sub
je
das
imul
add
popa
and
jmp
movs
xor
mov
xor
mov
cmps
stc
sbb
jmp
fstp
inc
mov
out
fld
fldz
les
jbe
pop
pop
xchg
jg
aas
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
(bad)
das
jg
stc
add
mov
and
jle
(bad)
es
test
out
sub
pop
iret
scas
cld
retf
add
leave
sbb
mov
iret
(bad)
cld
jbe
imul
cmp
mov
(bad)
mov
bound
aaa
jmp
fild
xlat
fadd
outs
xor
xchg
push
or
(bad)
mov
test
into
sbb
ror
mov
push
pop
test
enter
jg
(bad)
nop
mov
inc
jp
hlt
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
(bad)
(bad)
(bad)
inc
mov
mov
addr16
leave
repnz
bound
and
cld
gs
(bad)
inc
mov
sub
inc
aad
iret
dec
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
jg
dec
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
es
(bad)
(bad)
(bad)
mov
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
(bad)
(bad)
(bad)
call
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
(bad)
(bad)
(bad)
dec
cmps
scas
mov
pop
or
add
cmp
xor
in
cmp
call
mov
mov
mov
popa
mov
fsub
addr16
repz
mov
(bad)
call
sub
and
and
outs
bound
xor
jmp
add
sub
sar
retf
push
pop
or
inc
and
add
mov
inc
mov
sahf
test
or
hlt
movzx
ds
ret
pushw
xor
push
add
dec
test
mov
data16
and
mov
and
out
out
jecxz
rol
cli
and
push
clc
pop
aas
or
loop
push
pop
jecxz
push
dec
inc
push
push
inc
push
inc
pop
(bad)
(bad)
jg
sub
ins
jo
imul
push
dec
popa
jae
push
popa
ins
cmp
or
jecxz
inc
loopne
push
mov
mov
call
jo
xor
mov
inc
rep
jbe
add
out
(bad)
cld
dec
hlt
dec
cld
sbb
mov
and
xchg
sar
or
cmp
movs
cmp
sub
jo
sahf
das
and
and
outs
pop
cmp
or
pop
add
xchg
ret
add
and
ret
pop
and
fcom
fisttp
std
sub
sbb
mov
sbb
adc
sbb
outs
rcr
cmp
sar
les
mov
push
fs
xchg
sub
scas
cs
das
movs
xor
dec
dec
ret
mov
mov
or
push
cld
ret
mov
shr
rcl
rep
pop
xor
push
loope
rep
mov
mov
sub
pop
fadd
retf
cmp
je
jbe
pop
mov
or
fiadd
mov
mov
push
sbb
lock
pop
mov
xchg
sub
sub
inc
inc
fmul
les
pop
jmp
stc
(bad)
jae
inc
xlat
mov
pop
movzx
and
jmp
push
fmul
sub
sbb
ror
mov
cwde
scas
clc
push
(bad)
mov
mov
mov
clc
or
data16
sub
dec
xor
jle
rol
clc
mov
test
and
adc
call
lea
push
sbb
sub
ins
clc
mov
call
xchg
jns
cmp
xor
test
(bad)
sub
lock
mov
sar
div
cmp
jne
jb
cmp
jne
push
or
jne
loope
add
or
push
inc
inc
fdivr
and
and
add
or
les
xchg
outs
add
hlt
in
mov
or
shl
dec
jle
jne
mov
es
ret
dec
in
push
xchg
jmp
retf
test
test
sqrtps
scas
je
pop
in
neg
pop
add
sub
je
cld
pop
cs
xchg
add
ds
jecxz
pop
pop
jmp
into
mov
daa
fstp
fbstp
mov
pop
jne
das
mov
mov
out
les
ja
mov
pop
sbb
data16
sub
cmp
inc
push
jle
mov
mov
pop
mov
xchg
jnp
xor
sbb
pop
not
inc
int3
xchg
adc
mov
cmp
sbb
jg
jle
add
dec
jne
icebp
fucomi
sbb
add
sbb
and
push
out
dec
cmp
fisttp
mov
adc
push
add
mov
int3
test
push
push
inc
loopne
inc
sbb
sbb
enter
lea
or
repnz
sbb
jmp
rcr
sub
in
push
pop
add
lahf
push
push
push
loop
(bad)
mov
hlt
xor
lea
mov
mov
mov
mov
ret
inc
pushf
inc
or
or
call
or
scas
scas
jle
or
pop
or
add
call
daa
push
xor
inc
pop
push
xor
clc
xchg
xor
pop
aad
add
inc
in
repz
sbb
(bad)
sub
stos
push
enter
jg
lock
call
test
cli
sub
mov
call
add
aaa
scas
push
pusha
or
nop
ja
push
cmp
ficomp
fdiv
shr
add
add
rcr
pusha
or
xlat
pop
idiv
jne
push
push
and
sbb
jmp
jbe
(bad)
jmp
or
mov
rol
pop
addr16
jecxz
inc
xor
fsub
nop
fst
push
aas
loop
fdivr
or
adc
cli
or
add
jne
dec
pushf
cmp
aam
je
add
jnp
test
pop
mov
sub
loopne
test
(bad)
shl
out
cld
fstp
push
and
mov
cmp
cli
out
push
je
out
shr
sbb
jb
jbe
test
lea
push
push
pop
inc
cmp
pop
jbe
mov
xchg
cmp
in
jmp
adc
jne
jbe
adc
pop
popa
add
je
or
ret
push
movs
(bad)
out
rcr
push
cmp
or
mov
push
xor
push
sub
xchg
mov
das
out
lock
inc
add
push
add
test
xor
out
div
pop
aaa
mov
mov
sub
sbb
jns
or
je
dec
or
add
mov
cwde
popa
sbb
sbb
daa
rcr
pop
add
lds
clc
add
jmp
aas
repnz
pop
dec
fdivr
dec
fadd
mov
mov
movs
fcomip
sti
into
or
mov
jg
push
cmp
fisttp
dec
jne
je
xor
ja
mov
out
daa
cmp
lahf
adc
push
adc
adc
adc
add
push
(bad)
sbb
pop
adc
sub
dec
loopne
or
mov
mov
outs
(bad)
sbb
dec
gs
inc
lock
xor
sub
aaa
add
dec
(bad)
and
push
pop
in
push
call
std
lods
adc
inc
or
jecxz
and
jo
mov
push
dec
test
mov
fcom
in
inc
adc
out
push
aas
xchg
mov
cmps
loopne
pop
push
push
push
push
push
or
push
shl
repnz
mov
dec
adc
int3
sahf
sbb
or
pusha
add
inc
shl
mov
sbb
cmp
mov
jle
inc
sahf
test
adc
adc
jle
pusha
xchg
jae
mov
cmc
sbb
push
cld
pop
ins
jl
loop
xor
add
pusha
lock
rcl
jo
mov
ja
ja
fnstcw
add
je
cmp
push
clc
ja
into
sub
and
jmp
add
pop
mov
call
xor
push
cmp
cmp
lods
push
cs
adc
jmp
sub
cmp
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
fsub
jmp
mov
jmp
mov
jmp
mov
dec
mov
mov
push
sbb
pop
pop
and
mov
iret
out
adc
je
push
xchg
xchg
scas
push
mov
fwait
ds
icebp
push
outs
inc
sbb
mov
je
push
cli
test
fcomp
cmp
inc
push
mov
sub
not
mov
fld
bound
js
loop
fidiv
(bad)
scas
xor
fdiv
inc
or
enter
push
aas
(bad)
clc
mov
sbb
cmp
test
sti
fbstp
repnz
cmp
jne
and
push
(bad)
mov
sbb
jno
out
in
jo
fnstcw
test
jle
dec
mov
je
add
cmp
sub
(bad)
sub
jmp
add
ss
pop
rcl
cmp
or
and
inc
fst
and
sti
jle
jbe
fadd
add
addr16
cmp
jg
xor
sbb
xchg
add
sbb
push
fdiv
cmp
jmp
fs
adc
xor
xchg
in
jecxz
add
dec
pop
sbb
mov
add
or
pusha
sahf
dec
jne
pop
cmp
add
dec
jg
sbb
add
mov
xor
inc
ds
sub
push
add
lock
fisttp
mov
mov
mov
hlt
es
mov
add
xor
out
jo
adc
and
and
(bad)
dec
mov
fdiv
loopne
inc
cmp
xor
mov
fisttp
add
rol
mov
pop
sbb
adc
ja
add
mov
mov
cmps
shl
push
test
cmp
ror
rol
lock
cs
je
mov
scas
in
cmp
push
push
push
imul
xor
call
(bad)
xor
xchg
nop
pop
and
push
jb
push
dec
push
add
pop
loope
out
gs
sti
and
jnp
push
push
jnp
push
and
pop
outs
sbb
icebp
cmp
out
imul
adc
sbb
div
data16
ds
retf
push
sbb
scas
xor
xor
jnp
sahf
sbb
jg
call
add
adc
jne
je
ror
loopne
aaa
sub
add
pop
loope
hlt
adc
cmp
sbb
adc
sub
pusha
mov
adc
mov
cmp
(bad)
cmps
pop
(bad)
jmp
mov
call
in
xor
mov
push
rol
call
clc
dec
jl
lock
clc
adc
dec
mov
adc
mov
add
push
mov
dec
sbb
inc
jg
xor
cmp
add
sub
mov
pop
push
dec
push
les
jmp
stc
add
xchg
xchg
fild
push
jle
mov
shl
shl
repz
mov
sbb
retf
pop
lock
loopne
ror
adc
outs
sub
pusha
cdq
ret
and
adc
sub
cmps
cmp
mov
ins
cmp
inc
ins
sub
push
mov
enter
add
push
retf
test
loopne
push
adc
add
icebp
sti
clc
or
sbb
jg
das
(bad)
mov
test
pop
lea
cmp
push
rcr
loopne
jbe
dec
mov
data16
scas
jl
lea
mov
jge
(bad)
sar
mov
add
sbb
cmps
sbb
cs
fnstenv
sbb
add
cmp
lods
mov
push
mov
mov
xchg
mov
je
mov
or
je
add
jo
pop
or
jmp
inc
add
jmp
jae
pop
sub
and
pop
pop
or
je
push
addr16
in
add
mov
ja
mov
inc
xchg
ror
ficom
repnz
mov
sti
dec
test
pop
add
pop
pop
xor
fnsave
mov
cld
mov
adc
fnstcw
mov
inc
xlat
(bad)
and
pusha
and
test
xor
push
xchg
adc
push
push
add
loope
repnz
cld
add
cmp
sub
cmp
sub
mov
adc
xchg
aaa
mov
scas
adc
ret
xchg
or
rol
pop
cmp
(bad)
cmps
ja
sub
scas
ror
adc
inc
mov
mov
mov
cli
lds
push
sbb
outs
aad
enter
xor
jmp
mov
test
pop
mov
xor
xchg
xchg
adc
or
fimul
dec
in
inc
mov
dec
jmp
push
sub
add
out
data16
cmp
ins
dec
dec
jne
mov
mov
cld
jge
and
aaa
add
dec
jmp
sub
and
inc
pushf
sbb
jmp
dec
jne
sub
push
inc
mov
or
and
ret
aas
sbb
pop
lea
jmp
xchg
(bad)
cdq
jg
ror
xor
(bad)
loopne
sbb
imul
and
dec
inc
shl
push
cmp
add
cmp
and
lods
inc
or
mov
jo
jmp
aam
mov
cmps
push
clc
inc
aaa
mov
cmc
clc
pop
pop
add
add
push
cmp
jmp
push
(bad)
std
mov
adc
adc
test
shl
sbb
pop
aas
xor
push
shr
outs
(bad)
dec
jl
cmp
jge
sub
inc
sbb
popa
pop
jb
adc
fnstsw
adc
shr
in
jmp
and
pop
inc
dec
out
aas
js
push
std
sbb
xor
sub
jge
mov
push
lds
icebp
mov
retf
repnz
inc
xchg
cmp
movs
push
push
dec
addr16
pop
retf
or
cmps
cdq
mov
jg
mov
inc
dec
jge
cmp
adc
imul
xchg
gs
cmp
mov
mov
lea
out
sub
push
add
mov
push
mov
arpl
mov
add
add
sahf
dec
enter
cld
fdivr
ficomp
les
cmp
add
add
mov
fmul
push
neg
cmp
sub
nop
out
add
mov
xor
jb
or
dec
in
shl
jp
xor
and
xchg
sbb
dec
add
ret
in
mov
sub
les
and
fistp
xchg
xor
push
xor
jne
push
cdq
or
dec
push
add
daa
and
xor
mov
lods
das
rcr
pop
xor
jne
fidivr
call
sbb
jne
push
icebp
push
in
shl
mov
add
xchg
rcr
add
fidivr
scas
sbb
jecxz
stos
es
or
dec
xor
mov
jo
mov
arpl
pop
push
test
mov
icebp
pop
adc
inc
test
fistp
stos
data16
loop
pop
fmul
jns
push
out
loop
aas
or
fisttp
xor
iret
stos
push
push
das
and
pop
jo
pop
push
push
sub
idiv
cmp
push
call
jecxz
dec
xor
vmptrst
adc
jp
mov
mov
xchg
out
sbb
ins
daa
iret
in
stc
inc
jo
pop
pop
movs
jle
adc
and
mov
and
pushf
nop
add
js
into
or
dec
push
data16
out
aaa
enter
xor
jo
adc
pusha
punpcklwd
add
and
outs
add
add
jmp
cmps
add
push
push
xchg
dec
xchg
add
pop
xchg
dec
rol
push
mov
add
adc
ret
iret
iret
mov
mov
mov
sti
add
test
shl
dec
cmp
mov
call
(bad)
jo
or
ret
cmp
push
int3
add
add
out
mov
mov
xchg
jle
cmps
call
pusha
daa
cdq
inc
dec
std
and
sub
lock
jle
mov
add
xchg
adc
push
mov
gs
addr16
pusha
dec
sub
inc
lea
mov
sub
or
loop
cmp
jecxz
out
dec
popa
dec
xlat
dec
std
adc
cmp
and
je
cmp
test
(bad)
xor
je
cmp
retf
je
mov
ins
or
mov
fldpi
inc
adc
aad
cmps
and
out
jmp
push
mov
mov
jl
pop
cs
sub
dec
cs
adc
cmp
pop
jmp
cmp
cdq
dec
xchg
xor
inc
mov
jmp
push
inc
dec
cwde
jp
test
cld
dec
adc
pop
pop
stos
pop
jg
mov
cmp
loopne
pop
mov
and
repz
pop
jbe
test
mov
and
mov
int3
jg
in
and
mov
pop
mov
dec
xor
ja
inc
mov
outs
mov
push
dec
xor
repz
daa
in
add
inc
inc
add
or
sub
int
pop
sbb
cmp
push
pushf
icebp
jmp
dec
cs
xor
adc
sbb
enter
jle
adc
jmp
mov
repz
inc
push
sub
cmp
pop
outs
jp
add
aas
sbb
add
adc
cmp
inc
je
pop
dec
enter
xor
sbb
ret
sub
sbb
and
scas
sbb
mov
ror
inc
outs
cld
pop
pop
add
in
clc
push
cwde
sub
jle
ret
mov
retf
push
inc
add
jae
sub
mov
cmp
xor
or
je
popf
(bad)
jae
je
push
je
jo
xor
cmps
adc
mov
pop
or
xor
jecxz
inc
push
fstp
jmp
and
ins
lea
or
dec
mov
push
mov
out
push
or
pop
jmp
lods
sbb
add
sar
xor
mov
xor
cmp
adc
and
add
add
adc
loopne
fild
ror
sbb
pop
ror
aas
xlat
ins
and
mov
in
movs
push
test
jge
adc
enter
mov
and
dec
jne
sub
push
repnz
imul
jp
or
std
adc
data16
mov
cmp
cmp
or
ja
sti
pop
fild
aaa
inc
jmp
test
cmp
add
in
dec
into
pop
mov
daa
(bad)
pusha
cwde
loope
adc
in
pop
test
mov
push
fiadd
les
inc
hlt
adc
pop
test
dec
fist
test
jno
mov
or
cdq
in
into
sahf
add
(bad)
dec
cwde
pop
daa
push
xor
and
rol
mov
pop
xor
aam
pop
push
adc
push
inc
and
mul
sar
fild
xchg
fs
add
inc
adc
pop
pop
ret
sbb
addr16
inc
adc
(bad)
mov
(bad)
pop
xor
xor
sub
sbb
sar
(bad)
xor
xor
aad
inc
cld
sub
sbb
jne
ins
or
mov
jbe
repz
add
jmp
inc
mov
pop
mov
jne
push
rcl
rcr
ror
fisttp
mov
aaa
xor
rcl
and
push
push
jo
scas
clc
or
fdiv
dec
cli
sub
enter
cld
sbb
rol
or
popa
loope
and
gs
shr
in
(bad)
lock
ficom
inc
jo
push
or
cld
and
jl
mov
ror
inc
lods
inc
adc
cmp
(bad)
fsubr
not
fiadd
sub
inc
jmp
cmp
jne
mov
jne
loope
inc
and
sub
pop
je
sub
ins
fist
add
das
and
aaa
je
movzx
add
sub
jb
add
mov
push
jb
add
or
jmp
xor
sub
jmp
getsec
jmp
pushf
jb
das
push
or
mov
jb
jmp
jl
and
pop
sub
jbe
jmp
jg
mov
cdq
inc
cli
xor
mov
shld
cwde
test
push
test
push
add
cmps
ret
fcmovne
dec
cmp
cmp
test
pop
xor
call
loopne
add
ficom
xchg
add
cmp
jl
or
cmp
loopne
mov
or
and
jg
shl
add
xor
and
lock
and
gs
clc
and
jmp
in
je
sbb
setb
xchg
nop
ret
out
pushf
sar
je
dec
int
or
inc
movs
jmp
les
loop
or
leave
push
sahf
add
dec
ror
movs
call
aas
fs
adc
xchg
push
add
(bad)
mov
aas
xchg
adc
cmp
les
(bad)
pop
mov
xchg
sbb
div
(bad)
lods
call
out
push
movs
and
or
push
sbb
mov
imul
ret
sub
test
dec
mov
jmp
(bad)
in
idiv
cmp
je
and
popf
clc
jg
mov
cmp
jne
mov
cmp
jge
(bad)
sbb
pop
inc
inc
or
sub
ret
lock
jmp
lea
mov
scas
mov
icebp
jne
pop
jmp
dec
stos
xchg
adc
in
xchg
jge
or
push
in
test
loope
lahf
ret
jmp
repz
dec
push
dec
shl
xor
add
push
cmp
push
sub
lahf
loopne
adc
cmp
jle
jno
fs
xchg
ds
inc
int
sub
hlt
pminub
adc
fisttp
sbb
sar
lock
dec
jne
mov
add
mov
push
add
mov
scas
nop
cmp
fistp
push
fmul
push
(bad)
dec
test
jo
js
dec
rcl
lock
cmp
aam
outs
dec
loopne
scas
push
jmp
scas
iret
push
add
xor
popa
cmp
inc
mov
loopne
shr
xlat
cmp
jle
repnz
mov
ds
or
mov
jo
cdq
inc
or
mov
dec
adc
xor
xchg
lds
hlt
jb
cdq
xchg
adc
inc
jo
hlt
add
out
sbb
sbb
lock
push
xchg
mov
stc
ret
jmp
or
push
or
dec
rol
xchg
adc
mov
(bad)
xchg
or
xor
or
daa
ss
push
(bad)
scas
sbb
mov
dec
mov
ret
add
ja
in
push
sbb
cmps
jge
mov
adc
dec
push
push
push
mov
inc
jp
ror
movs
pop
pop
cwde
pop
aas
or
sbb
push
in
dec
push
cmp
(bad)
add
push
int3
inc
sbb
cmp
xchg
push
or
xchg
mov
jl
ins
jnp
jne
daa
loop
ret
push
mov
sub
mov
test
sub
push
mov
popa
xchg
xchg
xor
inc
or
les
movs
shl
add
and
jae
or
mov
or
ret
fistp
dec
dec
pop
shr
or
jne
(bad)
mov
lahf
ins
sub
xor
jmp
lods
cmp
jne
push
xor
mov
enter
jl
cmp
enter
fsubr
sti
lds
push
loopne
pop
imul
test
or
sar
sub
inc
push
jb
cmp
movs
jo
idiv
vmread
pop
sub
jno
jns
rol
push
mov
bound
and
ins
and
cmp
jne
mov
jbe
jnp
and
(bad)
push
jno
aad
xor
(bad)
push
inc
cmp
inc
or
addr16
imul
xor
mov
js
je
fnsave
fdivrp
fmul
push
add
lods
jg
mov
ins
fdiv
sub
dec
push
push
mov
loopne
add
stos
test
mov
xor
mov
gs
gs
xor
cs
ins
mov
addr16
mov
push
inc
and
loopne
out
mov
adc
mov
out
mov
int3
push
punpckhwd
aam
add
and
mov
lock
mov
popa
ret
mov
mov
or
or
fmul
mov
inc
stc
int
or
in
mov
iret
adc
add
adc
repnz
cwde
fadd
sti
call
push
lods
repz
push
loopne
sbb
mov
icebp
mov
data16
int3
or
mov
mov
push
sar
fcomp
sti
int3
hlt
sub
add
cmp
lock
cmp
jne
adc
jbe
or
inc
xor
sub
sbb
add
lods
shl
icebp
and
repz
mov
xchg
adc
add
pop
imul
test
ins
gs
adc
pushf
add
inc
cdq
push
and
push
inc
add
mov
xor
mov
mov
(bad)
(bad)
test
jle
lds
mov
mov
scas
cmp
mov
mov
pop
call
pop
adc
push
test
cmp
mov
dec
push
aad
ja
daa
jno
scas
add
push
cld
mov
daa
xor
inc
xor
xchg
xor
add
or
popa
pop
dec
xor
call
push
lahf
cmp
inc
ror
in
addr16
add
push
movs
pop
jbe
pop
jg
cmp
cmc
and
lahf
mov
pop
mov
js
push
push
cld
jne
cmc
fs
mov
jmp
add
mov
call
outs
es
sub
rol
push
adc
or
lock
fisttp
sbb
es
xor
push
push
mov
loopne
test
pop
sbb
test
mov
fnstenv
jbe
add
pop
cwde
inc
stc
push
call
mov
push
ficom
inc
sub
mov
mov
aam
sub
mov
add
inc
push
sbb
add
mov
xchg
jge
cmp
(bad)
or
add
sbb
cmp
cmp
push
add
loop
shl
leave
adc
pop
movzx
inc
cmp
ja
mov
inc
jmp
cmp
xor
pop
add
pop
cld
ja
fcmovb
jmp
or
mov
fwait
div
jecxz
sbb
and
retf
rcr
std
add
pusha
add
dec
pusha
sar
les
or
cmp
jb
je
outs
jbe
add
dec
mov
and
sbb
mov
dec
jbe
pop
add
pop
aam
add
jb
adc
xlat
pop
mov
hlt
sbb
xchg
vpaddusb
pop
push
pop
xchg
mov
dec
mov
xchg
mov
mov
xor
rol
adc
(bad)
outs
mov
and
adc
fiadd
or
mov
dec
mov
add
loope
or
mov
push
lea
imul
(bad)
jg
dec
cld
mov
ficom
or
inc
nop
loope
lahf
add
jne
adc
push
out
fiadd
or
mov
mov
mov
xor
aaa
stos
sbb
inc
or
adc
jne
cmp
mov
int
mov
in
fmul
pop
mov
jecxz
sbb
fisttp
mov
cmp
cld
je
test
and
imul
(bad)
retf
cwde
pavgb
sbb
nop
or
sbb
cs
or
aam
in
sbb
push
sahf
jb
lods
push
jbe
adc
dec
pop
ins
inc
jo
data16
or
mov
dec
pusha
add
xchg
add
push
jbe
ror
inc
ror
jns
pop
ins
inc
int3
inc
jo
in
cmovb
mov
jo
aaa
sbb
push
ins
pop
fdivr
mov
push
inc
shl
pop
pushf
lahf
fmul
xchg
xchg
adc
test
dec
cmp
sbb
cmp
cs
addr16
(bad)
or
cli
cmp
xchg
imul
dec
xlat
dec
sbb
adc
nop
ins
call
loop
mov
add
pop
outs
adc
xchg
retf
cmp
inc
xor
mov
(bad)
into
mov
pushf
pushf
cwde
xchg
push
push
shl
mov
hlt
sub
inc
cvtdq2ps
add
fnsave
cmp
push
push
loop
imul
add
mov
ror
fmul
dec
sti
ds
adc
jns
push
xor
add
mov
ret
push
mov
mov
push
xchg
popf
jnp
mov
and
fdiv
cmp
mov
sqrtps
fs
test
dec
lock
or
mov
mov
inc
jne
pop
(bad)
jle
shr
into
stos
push
jb
add
mov
cmp
jl
cmp
outs
dec
loop
jge
xchg
push
add
or
arpl
jl
out
jg
mov
adc
push
or
cmp
or
xor
(bad)
xchg
in
jnp
enter
repnz
or
pop
nop
push
sub
sar
jns
adc
add
repnz
or
jo
data16
outs
sahf
in
mov
xor
pop
in
outs
or
outs
fs
gs
push
or
jb
jns
cmps
std
adc
jae
bound
inc
push
xchg
call
inc
outs
arpl
inc
gs
jne
je
dec
outs
je
imul
adc
imul
arpl
or
adc
ret
or
jb
fs
out
mov
pop
xor
(bad)
outs
ins
bound
outs
js
cmp
mov
outs
ja
nop
mov
push
dec
ja
sbb
mov
push
je
dec
add
jl
add
dec
movups
sahf
pushf
pushf
or
cld
fdivrp
dec
dec
dec
dec
hlt
lock
call
in
(bad)
dec
dec
dec
dec
aam
int3
enter
dec
(bad)
sar
mov
test
dec
dec
dec
movs
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
ins
push
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
(bad)
daa
daa
daa
daa
hlt
lock
call
loopne
(bad)
ror
dec
dec
int3
enter
dec
dec
dec
mov
dec
dec
dec
lods
test
mov
pushf
cwde
xchg
nop
dec
dec
dec
dec
mov
dec
dec
jl
je
dec
dec
dec
dec
ins
push
dec
dec
pop
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
dec
dec
dec
dec
cmp
xor
dec
dec
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
fsub
daa
daa
and
or
add
daa
daa
daa
add
clc
pmuludq
aas
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
pushf
pushf
sar
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
pushf
pushf
pusha
pop
ins
setae
js
xchg
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
fcmovne
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
mov
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwde
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
jb
nop
sbb
adc
jb
jb
add
cld
ficom
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
nop
xchg
xchg
xchg
dec
dec
inc
inc
cmp
cmp
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
pushf
mov
fprem
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
xor
dec
mov
xchg
aam
add
mov
ins
and
neg
stos
or
adc
popf
je
out
and
adc
sbb
jecxz
mov
or
and
scas
int
outs
inc
cmps
jno
inc
int3
dec
pop
and
adc
xor
push
ja
pop
clc
or
data16
add
adc
sti
mov
push
mov
push
push
xor
neg
push
dec
xlat
and
inc
push
push
gs
or
mov
xor
inc
or
aas
inc
push
cmp
or
or
xchg
mov
mov
cmp
sub
gs
fsub
dec
push
push
dec
inc
inc
dec
add
add
pop
push
and
dec
out
(bad)
(bad)
push
inc
push
dec
pop
and
push
push
dec
push
push
pop
sub
mov
jge
push
inc
dec
pop
dec
dec
dec
inc
push
das
sbb
inc
into
idiv
add
adc
mov
les
loopne
leave
inc
cmp
or
rcl
mov
inc
push
mov
cmp
mov
mov
or
jb
jl
fisttp
sub
cmp
jb
and
lock
daa
popf
pop
ror
icebp
repnz
daa
daa
daa
hlt
cmc
div
daa
daa
daa
daa
clc
stc
cli
sti
daa
daa
daa
daa
cld
std
(bad)
jmp
daa
daa
daa
loopne
loop
daa
daa
daa
daa
in
out
daa
daa
daa
daa
call
daa
daa
daa
in
in
out
out
daa
daa
daa
daa
rcl
rcl
daa
daa
daa
daa
aam
(bad)
xlat
daa
daa
daa
daa
fcomp
fcmovu
daa
daa
daa
daa
(bad)
(bad)
daa
daa
daa
daa
rol
ret
daa
daa
daa
daa
(bad)
(bad)
daa
daa
daa
daa
enter
daa
daa
daa
daa
int3
int
iret
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
movs
movs
cmps
cmps
daa
daa
daa
daa
test
stos
stos
daa
daa
daa
daa
lods
lods
scas
scas
daa
daa
daa
daa
nop
xchg
xchg
xchg
sub
pop
add
xchg
cmp
mov
push
arpl
jmp
jmp
arpl
(bad)
mov
sbb
(bad)
(bad)
mov
ins
jae
cwde
bound
mov
add
call
dec
push
inc
inc
bound
je
cmp
inc
jmp
pop
das
aas
adc
(bad)
mov
jo
nop
cwde
stos
in
mov
dec
add
or
dec
jne
dec
data16
dec
and
outs
hlt
pop
inc
fstp
or
outs
mov
dec
sub
sbb
out
daa
pop
in
mov
movs
scas
movs
add
adc
add
mov
add
or
lods
and
push
sbb
scas
pop
call
daa
mov
jbe
jns
gs
push
and
leave
nop
mov
adc
in
jle
popa
outs
addr16
scas
or
sbb
dec
outs
jbe
daa
pop
in
stc
jb
ins
outs
ja
mov
add
movs
sahf
pop
mov
gs
shr
mov
data16
imul
fcomp
test
popa
dec
(bad)
ins
jle
or
mov
(bad)
adc
(bad)
(bad)
rcl
scas
pop
shl
andnps
cmp
addr16
and
popa
cwde
add
mov
mov
ins
and
shl
inc
fiadd
mov
push
scas
scas
inc
or
cmp
test
xor
xchg
xor
jl
pushf
add
inc
mov
xor
add
ins
popa
sbb
xchg
cmp
push
ins
jl
in
scas
add
push
inc
xor
and
and
nop
dec
mov
dec
mov
je
rcr
ss
inc
(bad)
mov
sub
(bad)
cmps
nop
mov
(bad)
cld
mov
js
push
sub
cmp
add
mov
or
ds
pushf
adc
pop
sub
mov
add
cmp
adc
cmp
inc
push
stos
push
ins
inc
adc
mov
and
adc
arpl
test
add
inc
cmp
xor
push
or
pushf
das
cmp
or
xor
and
xchg
int3
xor
clc
push
andps
ins
push
push
gs
outs
addr16
in
jbe
inc
or
(bad)
adc
in
in
sbb
iret
repz
or
int
repz
mov
xor
outs
aaa
aaa
xor
outs
dec
fistp
inc
inc
cmp
mov
xor
pop
add
inc
aaa
and
in
push
shl
push
adc
jb
popa
fs
je
mov
add
dec
mov
push
sub
or
js
or
enter
pop
aam
repz
mov
fnstsw
cmp
adc
mov
jnp
lock
sbb
push
loopne
sbb
ja
mov
inc
mov
loop
mov
jbe
adc
xor
dec
imul
lock
jne
es
mov
add
or
jmp
scas
add
lea
ret
adc
pop
retf
sub
add
pop
adc
dec
mov
mov
mov
std
jmp
pop
ret
(bad)
cmp
bound
fmul
aas
cld
push
push
or
dec
out
pop
movs
pop
out
mov
push
(bad)
jecxz
pop
rcpps
ficom
test
neg
pop
fxch
aam
shl
or
ret
xor
std
inc
cld
dec
mov
pop
out
xor
cmps
cmp
adc
or
inc
dec
inc
or
mov
cmp
or
add
adc
sub
and
or
popa
dec
xor
(bad)
rcl
test
cs
jle
ss
je
test
(bad)
out
(bad)
cld
cmp
jbe
jmp
or
sbb
ja
cmp
je
mov
and
or
pop
adc
mov
loopne
pushw
jg
cwde
push
mov
or
sub
sub
lock
sar
enter
inc
push
jl
cmp
mov
cmp
inc
adc
pop
add
imul
dec
jp
or
(bad)
scas
xchg
cmps
je
sbb
push
dec
or
push
cmp
xor
(bad)
fcmovnu
xor
sar
ret
or
inc
mov
cmp
jne
jge
add
push
and
cs
pop
mov
cmp
jne
or
sub
push
cmp
rol
aaa
sub
(bad)
push
jg
and
sbb
dec
std
add
or
pop
cmp
jne
mov
lock
push
inc
cld
neg
mov
jne
ret
push
mov
ret
mov
sub
retf
(bad)
neg
test
arpl
cmp
je
cmp
shr
lock
add
jp
add
cmp
or
sbb
and
fdiv
(bad)
popa
pop
cmp
je
mov
pop
movs
cmp
pop
jl
mov
pop
pop
xlat
or
lock
mov
lock
cld
cmp
jne
adc
mov
icebp
add
inc
inc
mov
add
imul
cmc
mov
int
inc
push
add
mov
gs
push
nop
push
mov
fs
jno
inc
inc
jmp
shl
cmp
ss
test
and
out
push
adc
lods
and
fmul
mov
jbe
push
push
adc
aas
(bad)
mov
cmp
cmp
cmc
mov
loope
cmp
jl
jl
jmp
jbe
adc
or
mov
pop
dec
sub
clc
jb
sub
inc
sbb
or
xchg
push
pop
arpl
cmp
mov
mov
lods
mov
push
imul
stos
fidiv
or
dec
idiv
fs
add
sub
jb
or
sub
add
or
inc
out
shr
jo
icebp
add
test
or
rcl
pop
push
shr
sub
enter
add
imul
cs
or
mov
push
or
dec
jne
jmp
test
movs
sub
adc
push
ficomp
or
pop
mov
xchg
sar
ret
mov
inc
dec
mov
ret
pop
add
push
scas
icebp
dec
fnstsw
cmp
push
pop
mov
xlat
(bad)
call
jmp
jbe
add
mov
sub
jmp
mov
call
push
mov
sub
xor
push
outs
cdq
add
iret
popa
sub
xor
and
push
push
or
cld
mov
neg
sub
add
mov
inc
loopne
mov
add
lea
fisubr
lock
fst
push
add
mov
daa
xchg
loopne
adc
fild
fistp
ret
pop
mov
ret
add
pop
add
ror
(bad)
in
fprem
(bad)
fdivr
mov
xor
add
add
push
sub
rcr
loope
fild
mov
ret
ffree
pop
add
ins
dec
aad
(bad)
add
or
and
cmp
or
ins
and
shl
xor
xor
fbstp
dec
(bad)
jb
ss
fadd
iret
add
loop
and
add
xchg
clc
ficomp
push
and
adc
adc
xor
adc
jo
test
cmp
pop
test
dec
enter
dec
test
test
inc
mov
aas
jne
push
sub
sub
pop
sti
cmp
test
xchg
and
std
cmp
jl
adc
out
inc
sar
add
or
add
pop
add
clc
dec
cmps
in
add
inc
test
dec
sub
mov
ds
cmc
sub
je
in
mov
cmc
mov
call
out
aas
data16
ss
and
sbb
adc
sbb
mov
mov
dec
hlt
jne
call
xchg
pop
adc
add
lea
or
aad
shl
fcomp
data16
lock
setne
jmp
cmp
dec
pop
movs
mov
pop
imul
mov
push
add
lock
xor
add
out
std
dec
fsub
in
sbb
ucomiss
dec
je
loope
(bad)
jne
and
jmp
and
(bad)
fimul
xchg
cmp
daa
and
jecxz
fild
fcom
inc
ja
mov
and
call
xor
push
adc
rol
test
push
mov
adc
aas
jo
push
pop
in
push
int3
push
push
jmp
jecxz
sbb
mov
(bad)
es
sbb
dec
push
sbb
push
pop
pop
adc
and
dec
(bad)
xchg
adc
(bad)
push
push
out
loope
sub
je
inc
cld
dec
add
pusha
jns
pop
push
cmps
xor
sub
sar
clc
dec
pop
sbb
rol
shl
cmp
je
add
(bad)
ds
das
mov
outs
clc
ror
dec
dec
sub
pop
push
(bad)
adc
out
lds
imul
and
lahf
(bad)
cmps
push
aaa
cli
movs
sar
nop
inc
push
into
jne
pushf
pushw
inc
push
pop
cmp
cdq
push
test
xchg
pop
mov
(bad)
imul
mov
push
fsub
cs
push
jg
mov
xchg
sub
btc
cs
ja
(bad)
push
add
push
into
out
mov
jmp
or
push
pop
call
cmps
pop
or
push
push
push
hlt
clc
cld
push
sbb
fs
ins
clc
outs
inc
xor
inc
scas
call
outs
and
xchg
mov
sbb
mov
jne
lock
outs
gs
adc
sbb
pushf
popa
pushf
out
rol
sbb
adc
in
xor
cmp
(bad)
sub
mov
into
ret
xor
lea
daa
pop
mov
movs
out
ret
push
sbb
mov
iret
mov
adc
mov
add
cs
jl
sti
ja
pop
ret
inc
pop
(bad)
push
push
mov
not
mov
dec
retf
sahf
aaa
xor
movs
mov
movs
loop
pop
push
push
pop
cmp
pop
add
int3
or
sub
popa
inc
fldenv
pop
aam
adc
xor
lods
cli
(bad)
retf
lahf
mov
aas
cmp
cmp
mov
or
or
test
jb
push
ficomp
add
cmp
jne
sbb
add
data16
repnz
add
jne
je
pop
jbe
and
jno
pop
jno
sub
pop
or
sub
cmps
mov
cmp
or
push
(bad)
mov
xor
xchg
cmc
pusha
call
rol
repz
mov
mov
dec
adc
and
(bad)
mov
cli
sbb
or
sub
add
fild
mov
or
shl
es
push
inc
push
lea
jg
or
xchg
sbb
dec
je
mov
mov
(bad)
(bad)
mul
sub
jbe
sbb
pop
fs
lods
pop
jl
cld
pop
adc
pop
mov
jne
lods
gs
enter
nop
retf
retf
xor
cmp
sbb
xchg
fisttp
push
and
retf
or
movs
adc
cmp
inc
or
mov
adc
and
fstp
clc
jnp
cmp
jbe
mov
add
(bad)
jnp
sbb
clc
les
fs
(bad)
mov
add
cmp
or
adc
aaa
or
add
pusha
sub
call
sub
push
ror
rol
xor
outs
call
mov
imul
cmp
adc
adc
or
jmp
push
pop
pop
or
aas
xchg
push
or
pusha
call
push
add
jbe
stos
jge
adc
mov
or
push
pop
js
xchg
mov
sub
xchg
cmp
lods
mov
adc
mov
mov
cmp
mov
fsubr
fimul
hlt
and
lods
jmp
mov
ins
cmp
sub
sub
mov
push
xchg
je
mov
or
test
out
or
retf
shr
mov
scas
movs
xchg
pop
mov
rep
sbb
or
sbb
or
pop
lea
jmp
sub
xor
fwait
xor
cmp
ja
imul
xchg
add
fadd
and
in
add
pop
mov
or
shl
and
dec
cmp
xor
or
sar
idiv
push
pop
pop
jne
lea
mov
push
add
and
sub
jge
(bad)
cmp
and
ja
das
pop
xor
pop
mov
cli
push
iret
cmp
push
test
mov
mov
sub
sub
cdq
rcr
cmps
sub
jne
and
dec
jmp
inc
je
out
imul
movs
fldcw
mov
pop
outs
adc
in
imul
push
push
cmp
jo
(bad)
jb
jno
cld
lahf
scas
xor
ret
sbb
add
mov
cdq
mov
mov
dec
xor
inc
inc
add
inc
xlat
and
and
jmp
mov
fisttp
or
cld
aas
and
jle
pushf
je
cld
call
pop
js
mov
sub
or
fdiv
pop
cmp
ja
or
xchg
xor
es
mov
jecxz
dec
mov
add
push
sbb
inc
cmps
leave
sub
out
jb
loopne
aaa
push
ins
mov
outs
mov
inc
je
mov
or
je
mov
out
mov
inc
je
mov
dec
je
dec
jl
adc
add
adc
cmp
jbe
mov
mov
adc
pop
inc
outs
inc
fdivr
icebp
or
inc
test
push
pop
fwait
mov
repnz
iret
dec
xchg
fadd
clc
xchg
ret
push
push
outs
pusha
xor
and
daa
lods
cs
jle
sbb
pop
push
out
and
enter
push
push
or
pop
sbb
dec
data16
ds
aam
push
stc
xchg
sar
jg
mov
popf
sbb
mov
sub
bound
ins
inc
sbb
xchg
xchg
(bad)
adc
mov
les
xor
xor
punpckhwd
popf
cmp
pop
jns
clc
dec
cld
lea
sti
cmp
mov
adc
inc
nop
mov
xchg
cs
jmp
add
loop
add
icebp
push
movs
push
inc
sub
mov
movs
mov
pop
movs
cmp
push
hlt
ins
enter
and
inc
sub
adc
or
jne
inc
xchg
jge
mov
neg
jmp
or
(bad)
scas
in
mov
stos
xchg
push
mov
jle
je
jmp
mov
inc
dec
js
or
ds
hlt
(bad)
jg
dec
mov
stos
cmp
jne
pop
pop
mov
push
push
push
fild
and
sti
mov
mov
cs
mov
repnz
jmp
cmp
pop
inc
pop
add
cmp
xor
xchg
jle
jmp
sbb
sbb
add
fiadd
xchg
push
or
mov
fwait
inc
jae
push
sub
je
cmp
lea
or
cs
hlt
xlat
fcom
mov
je
out
dec
pop
sti
add
or
mov
add
lea
mov
or
rol
fs
xchg
int
movs
xor
push
mov
or
lods
or
xor
jge
es
div
jo
ret
std
mov
aam
dec
push
push
dec
sbb
sbb
dec
stos
mov
je
mov
stos
neg
sbb
stos
jmp
jnp
jmp
mov
stos
loop
movlps
pop
pop
inc
int
pop
pop
clc
dec
mov
(bad)
frstor
or
mov
out
dec
sbb
add
jbe
sub
idiv
mov
mov
mov
xchg
mov
inc
push
cmp
adc
mov
iret
and
sti
stos
adc
dec
in
div
mov
inc
test
dec
je
dec
jne
sbb
xchg
in
stos
xor
aas
in
pusha
jmp
adc
sti
add
je
push
jne
pop
in
test
mov
or
repnz
ja
xor
mov
dec
lea
out
pop
jmp
inc
je
push
push
cmp
daa
adc
inc
(bad)
adc
sbb
inc
add
add
pop
inc
loop
push
loopne
cmp
sub
mov
and
mov
sti
mov
add
and
and
adc
and
sub
inc
sub
xor
sub
jnp
jnp
sbb
and
sub
sub
pushf
or
sub
sub
sub
cmps
call
jp
test
add
pop
or
lods
xor
nop
or
pop
and
inc
adc
xchg
xlat
inc
xor
adc
cmps
cwde
movs
in
inc
cmps
pushf
sub
push
js
cmps
scas
xchg
xlat
mov
and
call
adc
scas
or
dec
jae
xchg
xlat
or
cmp
cmp
into
xchg
into
sbb
push
add
xchg
mov
xchg
mov
clc
push
cmp
add
retf
mov
xchg
cmp
or
je
mov
mov
pop
jmp
xor
or
jmp
mov
leave
popf
rol
test
loope
dec
retw
shl
inc
addps
dec
shl
dec
fwait
jge
int3
inc
or
je
into
jne
adc
jle
dec
push
popa
jl
pop
xor
push
imul
xchg
dec
fwait
xchg
cmp
addr16
in
mov
cmp
mov
(bad)
outs
pop
mov
or
sbb
in
(bad)
frstor
and
adc
out
loop
mov
push
mov
inc
sbb
ret
xor
cmp
je
out
jmp
sub
inc
push
(bad)
xor
mov
out
sahf
and
xor
cs
cmp
je
pop
std
mov
cmp
cli
cmp
je
xchg
je
jo
cmp
xlat
jmp
inc
jmp
repnz
adc
jmp
cmp
jne
mov
cs
jmp
mov
jmp
loope
adc
sub
and
jne
retf
sti
jmp
aad
popf
scas
push
lock
test
les
fdivr
pushf
ret
push
add
jo
mov
sar
add
stos
mov
sub
mov
pop
shr
cli
call
jne
sahf
push
push
mov
out
sahf
out
push
sbb
rcr
js
fwait
das
jmp
ins
mov
cdq
aaa
(bad)
sub
and
cld
sub
or
jne
xor
in
inc
inc
adc
lods
pop
push
mov
cmp
scas
push
sbb
jmp
add
mov
mov
push
dec
jne
jge
inc
lock
inc
bound
inc
test
inc
cmp
dec
and
jle
sub
mov
and
mov
scas
or
stos
outs
test
mov
repnz
mov
mov
test
ror
mov
out
push
jmp
pop
dec
and
mov
daa
and
enter
mov
(bad)
stc
outs
ror
shl
cli
dec
popf
outs
nop
mov
or
add
and
nop
sahf
sub
sub
dec
xchg
rol
cmp
loopne
add
adc
add
je
in
cld
xor
out
mov
sbb
adc
outs
and
lock
or
inc
push
pusha
adc
add
add
mov
shr
cs
dec
mov
adc
clc
div
das
je
push
fabs
push
shl
je
frndint
sar
jl
fld
fstsw
fwait
mov
in
sbb
or
mov
call
call
or
add
inc
sub
out
call
lock
pop
je
xor
dec
jne
xor
stos
mov
add
jns
outs
movs
mov
loope
cmp
sti
idiv
fwait
je
cmp
jae
cmp
jb
mov
js
dec
xchg
clc
mov
jmp
data16
pusha
xor
lock
mov
dec
sbb
icebp
scas
jbe
push
not
call
cmp
jecxz
add
mov
repnz
or
inc
sub
or
je
neg
mov
fisubr
or
dec
das
pop
or
push
push
mov
jl
sbb
jae
dec
add
mov
fild
cli
mov
mov
mov
xlat
scas
inc
add
fwait
or
pop
imul
sub
mov
ja
std
jmp
jne
dec
jne
jmp
mov
add
stos
aas
and
jp
cmp
jmp
mov
or
push
into
cmp
div
pusha
sub
cwde
jmp
loop
iret
push
hlt
shl
push
push
retf
fstcw
and
lock
pop
js
fldz
jnp
sar
ds
add
mov
daa
inc
test
xchg
cmp
inc
imul
cmp
xchg
and
(bad)
clc
fidivr
push
sub
sub
sub
jbe
les
pop
mov
loopne
add
aas
jmp
fstp
fsub
or
test
mov
push
test
ins
mov
add
and
push
lods
mov
mov
clc
outs
mov
sub
add
jae
fimul
popf
adc
aaa
mov
idiv
dec
mov
push
push
inc
imul
sub
push
cmp
aaa
add
or
lea
mov
xchg
arpl
dec
rcr
push
pop
in
mov
addr16
add
or
scas
jecxz
adc
xor
ret
lea
jle
mov
pop
mov
outs
cmps
test
sar
sbb
push
(bad)
ucomiss
push
push
sahf
cld
mov
sbb
and
nop
push
mov
jl
adc
dec
repz
fimul
or
aad
in
sbb
adc
adc
bnd
mov
push
mov
xchg
mov
push
sbb
fwait
xchg
stos
jbe
addr16
fldenv
mov
data16
jmp
inc
jl
ds
adc
mov
or
mov
xor
push
adc
(bad)
je
in
add
jg
mov
or
cmp
jae
or
cmp
inc
jmp
sar
inc
push
jae
movzx
pop
imul
shr
pusha
push
ret
mov
dec
shr
add
or
add
xor
fstp
fwait
mov
sbb
retf
in
retf
movs
dec
fist
and
lahf
cmp
and
inc
adc
movs
add
loopne
and
mov
jg
ror
mov
mov
add
dec
(bad)
mov
jl
mov
(bad)
push
cmp
xor
and
sbb
int
call
pop
push
rol
fld
mov
mov
sbb
nop
add
pop
pop
test
sub
sar
mov
loop
std
add
les
push
and
dec
dec
mov
pop
enter
add
jle
in
daa
ja
and
jb
or
jb
sti
out
fld
pop
ins
je
push
adc
and
ror
add
inc
dec
cld
pop
pop
fdiv
sub
dec
mov
aas
cdq
idiv
imul
or
jbe
mov
ret
cli
add
repnz
ds
ds
add
pusha
adc
das
mov
or
inc
push
and
or
rcl
push
(bad)
pop
jns
add
pop
inc
adc
jne
mov
(bad)
or
es
dec
in
test
jg
add
or
sbb
jb
or
lods
ss
(bad)
in
cmps
xchg
icebp
add
cmp
adc
jo
loope
data16
jge
cs
clc
push
xchg
lods
mov
pop
mov
dec
cmp
imul
pop
inc
fs
fcom
movzx
add
pop
sbb
inc
cmp
xchg
xchg
sub
add
xchg
pop
cmp
or
ret
jbe
daa
push
jl
dec
cmp
(bad)
dec
cmp
fisubr
jb
adc
sbb
fisttp
ss
sbb
mov
add
inc
adc
mov
lahf
push
add
sbb
add
(bad)
xchg
dec
clc
xor
aaa
ds
push
fwait
add
jbe
dec
push
pop
lock
call
xor
push
or
adc
stos
mov
ret
mov
clc
movs
pop
xchg
loope
mov
push
and
or
xor
jae
lock
xchg
lods
and
or
sub
dec
mov
mov
jp
push
push
cmp
xchg
push
adc
je
adc
test
xchg
dec
int3
bound
mov
xchg
and
jg
adc
or
mov
or
add
fidivr
adc
lahf
inc
lea
mov
xor
icebp
pop
push
dec
test
pop
push
in
js
cs
push
adc
mov
add
push
in
push
or
test
mov
add
xchg
(bad)
xor
inc
inc
imul
sahf
jle
stos
mov
push
or
cmp
je
mov
retf
imul
sub
mov
cmp
jne
push
add
push
lea
in
out
sti
jbe
push
lock
repnz
mov
jo
test
outs
jecxz
mov
jge
call
mov
xchg
or
movs
in
adc
ud0
mov
mov
and
adc
out
mov
push
cld
push
sbb
xor
sub
fcom
scas
fist
dec
mov
lea
sub
or
int3
popf
mov
and
int3
cwde
je
or
cmp
mov
and
mov
mov
dec
rcl
mov
sbb
ins
cmp
sub
and
pop
nop
sbb
xor
add
or
dec
jmp
dec
adc
push
cmp
mov
mov
test
(bad)
inc
sbb
jb
push
shl
sub
loope
addr16
imul
inc
sub
xor
fs
fdivr
cmc
push
mov
test
mov
ret
aaa
mov
cmp
jne
lahf
sub
lds
add
inc
mov
vmwrite
pop
add
pop
sub
mov
adc
aam
pop
or
inc
fdiv
leave
cmp
ins
cmp
inc
mov
xor
push
sub
add
pop
inc
mov
add
loope
mov
mov
push
imul
pop
repnz
lods
lock
mov
jmp
mov
xchg
inc
adc
sti
push
out
sub
sub
jae
adc
test
jne
jge
dec
xchg
jnp
xor
pop
loop
cmp
jl
fmulp
cmp
xchg
rol
frstor
and
mov
push
prefetch
nop
jbe
dec
add
pop
or
or
push
jbe
or
mov
mov
cmp
test
repz
push
mov
ds
ds
push
mov
pop
shl
add
inc
inc
jl
mov
xchg
loopne
mov
inc
mov
mov
push
push
and
fcomp
inc
sahf
and
stos
dec
aam
sbb
jp
sbb
xor
(bad)
rol
fsubrp
sub
xor
pop
hlt
dec
je
add
jmp
out
aad
rol
and
les
mov
test
adc
lods
lds
and
pop
cs
aaa
xor
mov
add
mov
jl
add
adc
aaa
mov
mov
add
push
jmp
sub
je
push
outs
mov
jmp
push
jne
mov
mov
mov
add
sub
adc
add
mov
lods
daa
into
add
loopne
imul
inc
mov
test
inc
jmp
ret
(bad)
or
and
jmp
sbb
or
add
dec
outs
cmp
or
sbb
push
enter
add
dec
pop
test
xor
jns
retf
in
mov
jmp
push
and
jmp
jge
cmp
cmp
add
ror
cmp
add
stos
dec
jb
xchg
ja
(bad)
adc
and
mov
xchg
dec
rol
stos
imul
jb
push
cdq
mov
add
xor
sub
iret
pop
jae
bound
call
or
mov
adc
sbb
test
xchg
pop
imul
inc
sbb
jbe
and
cmp
cmp
push
or
mov
jp
pusha
jmp
pop
sbb
loop
lahf
lock
pop
sub
mov
test
push
jmp
or
loope
shr
(bad)
out
push
repz
aam
jecxz
xor
mov
scas
in
popf
lods
cmc
dec
das
push
dec
ror
adc
in
add
aam
push
cmc
adc
clc
xchg
mov
push
sub
jmp
js
sbb
mov
bound
or
sahf
xchg
sbb
jne
fdivr
mov
xor
je
mov
cmps
mov
ds
jae
adc
jg
and
sub
mov
jmp
or
mov
adc
pop
and
pop
pop
mov
adc
jle
xchg
mov
dec
cmp
rcr
xor
imul
retf
pop
mov
mov
fst
or
add
repz
xchg
test
dec
push
xor
push
(bad)
mov
repz
dec
cmps
retf
lock
and
ss
pop
dec
in
add
jge
nop
out
ja
(bad)
in
push
div
push
mov
mov
daa
xor
add
fldenv
dec
test
pop
jl
push
inc
push
(bad)
cmp
jne
add
mov
add
push
dec
imul
sar
notrack
sub
je
dec
mov
mov
push
jmp
mov
jmp
push
push
push
sahf
jbe
mov
inc
out
clc
jle
out
(bad)
scas
rol
mov
jge
jns
mov
pusha
jl
mov
mul
fadd
jnp
jl
pop
mov
mov
adc
adc
push
pop
push
lock
mov
mov
hlt
or
adc
ds
sub
or
cmp
sbb
sbb
push
(bad)
jmp
lods
jno
ss
jne
sar
add
mov
add
cmp
sbb
dec
mov
xor
sub
add
std
bsr
shl
js
add
ins
push
pusha
loop
div
popa
dec
cld
dec
(bad)
and
scas
fdiv
stos
imul
clc
pushf
ret
dec
loope
mov
addr16
or
cld
or
ret
push
ins
and
adc
pusha
sub
movs
adc
ja
addr16
pop
mov
popa
push
add
mov
dec
test
xchg
sub
adc
into
popa
cmps
mov
or
sbb
lods
mov
test
fwait
popf
aaa
pusha
cmp
push
ror
mov
fisttp
das
push
in
cmps
and
out
or
test
in
mov
or
repnz
jb
out
xchg
mov
jge
es
cmps
adc
jmp
call
lock
adc
cmp
out
cmp
js
push
mov
les
mov
cld
cmp
ja
fld
lds
rcl
pop
data16
jg
popf
jb
pusha
cmp
cmp
jle
xor
outs
and
fs
jne
mov
add
or
repz
popa
or
cmp
(bad)
xor
adc
dec
repnz
mov
stos
and
stc
jmp
jne
adc
sbb
ret
cmp
mov
(bad)
and
ficom
xchg
inc
mov
add
fsubr
push
jne
cmp
sbb
dec
not
add
or
and
retf
add
clc
jecxz
lea
mov
dec
pop
fldenv
(bad)
mov
sub
jne
repnz
or
mov
xchg
in
mov
mov
and
rol
inc
fcmove
inc
and
jp
and
add
mov
cwde
cmc
lock
lds
mov
mov
int
dec
add
push
or
or
int
and
ds
je
test
add
enter
xlat
push
cmp
push
(bad)
clc
loopne
test
push
pusha
mov
cmp
jmp
inc
(bad)
ja
jne
adc
jnp
sbb
push
sahf
fidivr
add
xchg
adc
inc
ror
or
cld
mov
adc
jns
(bad)
adc
test
test
popf
mov
push
or
inc
daa
adc
pop
call
jnp
mov
fdivr
inc
cmp
les
fcomp
xlat
ins
and
mov
pop
fsub
jle
pushf
mov
loope
les
adc
jle
jo
rol
jne
mov
jns
inc
jo
add
or
push
xor
ror
aaa
in
sub
mov
fcomp
or
jl
enter
jmp
sbb
outs
pusha
xchg
add
(bad)
cli
mov
push
pop
cmp
stos
xor
pusha
and
add
(bad)
mov
inc
or
xchg
and
mov
psllw
mov
(bad)
push
adc
test
inc
mov
mov
cmp
fprem
push
push
adc
sub
pop
xchg
sbb
sub
adc
pushf
or
mov
push
les
stos
lods
sbb
pop
loope
pop
inc
dec
push
add
imul
(bad)
or
pusha
or
sar
push
fiadd
jo
mov
ror
inc
inc
dec
or
jle
mov
mov
lock
test
mov
inc
push
fisubr
or
lods
pop
add
jmp
cmps
in
call
loope
out
or
dec
call
sbb
sub
call
(bad)
pop
pop
xchg
sar
lds
and
popa
adc
cmp
inc
fcmovbe
stc
mov
push
or
pusha
(bad)
and
sti
dec
mov
mov
cwde
inc
cmp
aas
lock
shl
cmp
(bad)
sub
xchg
lds
nop
lods
lea
lea
inc
sub
call
pop
pushf
movs
loope
(bad)
in
gs
mov
sti
and
je
mov
xchg
int3
add
add
or
div
bound
fsub
mov
xchg
sub
pusha
mov
into
call
(bad)
xor
jnp
inc
sub
addr16
mov
push
nop
shl
cld
ins
mov
xor
sti
push
mov
add
es
dec
loopne
or
aam
xor
fisub
daa
loopne
ret
bound
add
sbb
fucom
push
mov
push
cmp
hlt
and
fsubr
push
and
jmp
cmp
mov
xor
rdtsc
out
in
xchg
dec
mov
sbb
dec
or
lea
mov
xor
and
or
test
or
retf
les
test
rep
cli
pop
mov
and
inc
je
sub
je
lea
ss
push
push
add
shl
std
xor
jle
add
mov
sti
sbb
aad
mov
push
xlat
lock
mov
lock
add
jge
mov
bound
mov
rcl
dec
mov
in
mov
dec
add
pop
cmp
in
pop
add
jmp
mov
mov
add
add
push
ss
in
nop
js
or
in
pushf
inc
std
dec
jle
aad
and
adc
fbld
jae
and
pop
sub
and
mov
test
sub
in
(bad)
fild
or
add
test
xor
fstp
ins
in
mov
sbb
add
pop
out
test
test
dec
inc
pusha
lods
and
or
enter
jmp
or
popf
gs
inc
cmp
dec
mov
repnz
arpl
jl
dec
add
popf
and
jo
or
sub
rol
mov
sbb
fadd
call
add
push
cld
jl
sbb
test
adc
sub
push
aaa
lods
mov
sbb
lods
iret
in
cmp
and
mov
mul
ror
push
mov
sar
xchg
out
retf
mov
stc
jmp
or
xchg
mov
test
mov
add
push
or
lock
test
shr
rol
mov
xor
push
push
push
pminsw
dec
adc
inc
sub
out
mov
push
cld
hlt
xchg
cmp
pusha
int3
popa
hlt
aam
loope
cld
pusha
xor
aam
mov
pop
push
adc
loope
inc
lds
mov
inc
pop
inc
or
mov
aam
or
mov
xchg
pushf
sub
inc
jmp
(bad)
sbb
pop
cmp
fnstcw
add
mov
test
popa
pop
pusha
and
inc
jbe
fmul
cli
jmp
int3
in
shl
mov
sub
sub
(bad)
add
ja
push
test
jnp
adc
dec
inc
nop
pusha
mov
or
js
fsin
clc
and
xchg
push
test
mov
loope
dec
outs
cmp
ds
fldcw
shr
push
or
adc
movs
nop
sub
das
xor
push
movs
imul
push
loop
add
sti
push
jg
cmp
sbb
aas
repnz
and
xchg
test
add
sbb
pop
mov
hlt
or
mov
pmuludq
ins
(bad)
or
sub
sar
retf
(bad)
out
push
adc
jmp
loopne
popf
mov
sub
and
mov
jbe
fwait
mov
jmp
retf
into
mov
ret
xchg
loopne
pop
les
ins
enter
fcmovnu
sub
mov
push
(bad)
ret
sahf
in
inc
cs
in
or
jge
clc
cmps
in
ud1
mov
xchg
ja
xchg
mov
or
loopne
popa
jne
jnp
test
cmp
pusha
mov
ins
add
daa
lahf
aam
jle
call
xchg
xchg
push
sub
mov
mov
inc
(bad)
in
push
push
cmp
je
jmp
mov
je
jmp
xor
cmps
jge
jae
sbb
mov
add
call
or
or
shl
ret
aaa
lock
cmp
les
mov
push
nop
adc
pop
call
es
aaa
sbb
sub
cld
cmp
mov
mov
pop
cmp
xor
inc
jp
pop
sahf
inc
or
dec
add
add
pop
adc
mov
clc
sub
adc
cmp
pop
inc
xchg
fs
adc
rcl
adc
pusha
cmp
add
or
jmp
idiv
push
push
enter
adc
pop
mov
fdiv
call
lea
mul
and
outs
call
xchg
jge
mov
pushf
mov
jb
xchg
add
nop
adc
and
nop
adc
dec
scas
pop
frndint
aad
ret
jno
and
out
xor
adc
pop
gs
std
rol
mov
shr
inc
sbb
and
sbb
pop
fdivr
push
int3
pop
pop
adc
lods
and
xor
hlt
add
add
mov
adc
enter
adc
sbb
pop
push
push
jbe
enter
in
fdivp
lods
movs
daa
cmp
nop
cs
and
es
cmps
push
dec
pop
ss
xchg
and
add
dec
mov
mov
fsubrp
test
mov
jg
iret
dec
fmul
sub
xchg
fild
pusha
inc
stc
std
test
add
or
out
in
hlt
adc
fisubr
mov
adc
adc
inc
and
adc
arpl
mov
js
dec
xor
cmp
fmul
xor
stos
xchg
(bad)
dec
ins
dec
pushf
rol
pusha
hlt
mov
or
inc
jle
add
enter
clc
out
or
das
add
and
(bad)
mov
adc
sub
mov
mov
jge
jnp
mov
jl
pcmpeqw
cmp
cmps
jle
xlat
call
cld
ins
outs
loope
pusha
mov
std
clc
aam
push
loop
mov
adc
bound
jae
jmp
xchg
push
bound
sub
pop
jmp
add
mov
pop
dec
xor
jo
dec
mov
fnstenv
mov
inc
dec
push
and
lahf
jne
rcr
pop
js
pop
push
call
shl
pop
shl
pop
jo
imul
test
jl
lock
xor
sub
cmp
or
sub
and
push
leave
inc
xlat
mov
mov
jmp
bound
lea
mov
or
dec
and
mov
xchg
je
mov
loopne
adc
rol
fdiv
leave
cmp
daa
movs
rol
inc
bswap
in
cmp
mov
cmc
ret
sub
push
push
nop
mov
jg
adc
loopne
mov
cmp
enter
cmp
jl
retf
or
(bad)
adc
push
pop
ss
inc
inc
jge
mov
sub
aas
int
repnz
loope
adc
das
fisub
inc
scas
cmp
jge
mov
repz
and
xor
rcr
lahf
push
rcl
cli
xor
leave
add
add
inc
(bad)
cmp
jg
dec
pop
and
xchg
mov
add
sub
mul
jp
mov
pop
(bad)
and
add
mov
fadd
sar
test
add
or
loopne
add
stc
mov
adc
mov
adc
fild
mov
rol
and
in
sub
sar
neg
push
daa
outs
das
pop
movs
jns
or
rcl
mov
push
mov
jno
and
push
add
imul
inc
test
ret
push
outs
or
std
popf
in
das
loope
scas
mov
aam
sete
cmp
xor
gs
xchg
fimul
stc
aam
xchg
aas
mov
lds
inc
mov
and
push
loope
test
mov
out
js
and
outs
add
cmp
and
(bad)
pop
shl
jae
je
cmc
je
add
fisttp
xchg
sbb
sbb
lds
mov
adc
jmp
mov
adc
or
and
push
loopne
and
scas
mov
xchg
add
ja
jmp
cmp
xchg
cmps
jl
je
cmp
aad
nop
cmp
adc
cmps
ffreep
aad
push
cmps
sub
jmp
lock
inc
loope
add
push
push
push
sar
in
movs
pop
daa
aaa
ret
add
fcom
(bad)
mov
sub
cmp
jbe
nop
xor
scas
lods
pop
aas
xchg
or
adc
push
jbe
jge
pop
imul
das
and
sub
push
(bad)
mov
push
adc
mov
push
bnd
cld
adc
inc
inc
(bad)
jne
or
enter
add
push
dec
pusha
inc
mov
add
pop
aaa
pop
cs
cs
sub
jb
inc
mov
inc
and
ficomp
dec
jne
ret
or
or
imul
cmp
ss
mov
push
or
mov
aas
cmp
inc
add
add
or
add
les
push
inc
ins
test
sub
test
or
call
dec
rep
pop
cmp
inc
btr
mov
xor
cld
punpckhdq
test
and
jl
mov
sbb
cwde
pop
push
test
push
mov
xchg
dec
jne
push
sub
jmp
lahf
xchg
fwait
xchg
jbe
je
sub
rol
push
sub
add
adc
push
pusha
xchg
lods
push
lock
dec
aaa
mov
mov
pop
sti
cwde
mov
in
sub
call
push
call
(bad)
out
xchg
mov
and
xchg
push
sbb
adc
dec
out
ins
das
mov
shl
movs
dec
jb
mov
adc
pop
jo
ror
and
fcomp
mov
xor
sar
dec
push
sbb
sub
mov
mov
inc
xchg
sub
mov
nop
add
hlt
enter
or
and
add
nop
xchg
push
lods
sbb
shl
sbb
aas
ret
adc
stc
inc
cs
mov
clc
mov
push
fsubr
cld
push
mov
adc
in
popf
imul
test
sbb
movs
inc
jmp
mov
mov
cmp
das
pop
scas
ins
xlat
add
add
fs
pop
add
pop
jmp
rcl
jo
push
jno
add
and
or
fcomp
sbb
repnz
int3
pop
push
cmp
out
cmps
inc
sub
sti
lahf
out
lahf
push
adc
push
push
and
mov
(bad)
rcl
jmp
(bad)
iret
ror
cmps
aam
lea
cmp
mov
test
imul
jmp
add
mov
and
jecxz
inc
and
jmp
test
dec
dec
push
or
aam
push
stc
test
int3
push
shr
out
leave
imul
out
in
push
sbb
sbb
mov
mov
mov
out
mov
enter
out
cmp
cmp
dec
xor
and
outs
pop
pop
push
enter
out
mov
stos
pusha
sbb
fimul
aam
cld
mov
repnz
push
sub
into
out
lock
lock
sar
inc
or
les
lea
mov
mov
push
mov
es
out
cld
mov
cli
sbb
pop
(bad)
jge
add
cmp
lock
xchg
in
mov
mov
cdq
neg
push
jg
cmp
adc
sub
sub
call
jb
push
stos
les
sub
dec
test
mov
adc
(bad)
imul
movs
sub
loopne
mov
leave
loopne
fsubr
fdiv
adc
loopne
mov
add
sub
dec
adc
xchg
sbb
jecxz
fcomi
cmc
lock
mov
jecxz
push
(bad)
mov
or
push
push
push
outs
imul
add
mov
add
scas
add
push
scas
pop
push
or
fs
gs
outs
outs
test
and
(bad)
arpl
pop
dec
repnz
bound
inc
add
adc
cmc
bound
push
mov
test
in
add
js
cwde
mov
adc
and
ins
jl
mov
mov
ret
or
enter
inc
xor
lea
scas
cmp
push
pop
adc
mov
lea
dec
adc
cmp
inc
or
or
fldcw
hlt
xchg
push
es
test
or
sbb
adc
cmp
call
shr
or
add
test
cmp
int3
jp
ror
sahf
mov
rol
pop
dec
jmp
mov
shl
pop
enter
sub
enter
xor
cmp
xor
or
adc
jg
pop
dec
adc
lea
imul
jne
mov
sub
shl
sbb
and
add
cmp
retf
in
dec
retf
sbb
in
mov
lds
and
test
fisttp
iret
sbb
in
leave
pop
inc
arpl
aad
ret
xor
mov
in
sti
je
push
mov
dec
mov
mov
or
enter
jae
pop
adc
inc
test
mov
mov
push
test
add
or
dec
pop
push
sub
sub
pop
call
push
lea
(bad)
ss
sub
or
cmp
cmp
mov
ret
rol
ret
fadd
xchg
mov
hlt
imul
sub
sub
xchg
push
xchg
jnp
fst
mov
or
loop
pop
(bad)
mov
sbb
movs
inc
or
pop
or
sbb
imul
gs
jo
inc
js
mov
aas
sbb
add
jnp
icebp
scas
call
dec
ret
xchg
xchg
sbb
pop
push
xchg
inc
call
pusha
aam
(bad)
jmp
mov
icebp
inc
cmp
fisttp
(bad)
jne
or
cld
cmp
mov
clc
jle
sbb
dec
mov
xchg
push
cmps
jmp
inc
jmp
daa
out
jns
aam
clc
cli
in
push
loopne
(bad)
push
push
and
xchg
add
xchg
dec
dec
mov
sub
aaa
push
pop
call
dec
test
mov
inc
or
lahf
cmp
lea
add
ftst
mov
daa
mov
aam
pop
sar
add
or
lock
adc
fisttp
in
pop
sbb
inc
push
daa
lock
and
(bad)
sbb
jmp
push
jo
jg
aaa
mov
shr
push
xor
inc
adc
fdiv
adc
adc
sbb
xchg
inc
push
aas
lods
mov
mov
push
(bad)
out
jge
bound
aad
retf
xchg
push
pop
(bad)
mov
push
mov
adc
inc
shl
jmp
jb
(bad)
(bad)
fcom
xchg
pop
xchg
push
sbb
in
pop
test
(bad)
pop
adc
call
sbb
clc
cmp
inc
xchg
icebp
jecxz
and
add
add
in
call
ret
les
or
sbb
sbb
adc
int
retf
out
test
xor
xor
test
sbb
repnz
jge
sub
in
adc
add
inc
sbb
push
fiadd
inc
dec
cmp
outs
pusha
in
sbb
ret
mov
stos
add
pop
or
mov
mov
aas
pushf
or
inc
mov
jle
sub
and
inc
pop
cmp
out
jmp
sbb
cmp
inc
jecxz
xchg
outs
fistp
mov
xor
push
dec
mov
adc
pop
jg
int3
xchg
or
dec
or
dec
in
inc
loopne
ins
shl
ror
cmp
mov
adc
gs
dec
jmp
or
push
add
inc
or
add
push
mov
push
mov
cmps
ins
(bad)
stc
es
cmp
sub
adc
mov
aas
addr16
cmp
lock
jne
cmp
jne
sbb
xor
and
mov
inc
fistp
arpl
aaa
and
fnstcw
and
xchg
and
pop
and
or
inc
or
into
mov
(bad)
jmp
or
out
nop
and
call
or
pop
dec
xchg
adc
fs
inc
adc
add
in
stos
adc
loope
sbb
popf
inc
pop
js
fdivrp
sub
nop
sbb
and
(bad)
jns
fadd
iret
repz
out
inc
les
fdivr
xor
cmp
sti
or
repz
idiv
jo
cs
mov
pop
dec
ins
pop
fs
adc
jge
neg
push
pusha
adc
add
jne
jnp
jle
cmp
xor
push
jg
sahf
cmps
xor
mov
stc
mov
inc
in
sbb
cwde
jg
fmul
sbb
or
mov
adc
(bad)
xor
enter
mov
push
dec
cmp
enter
sub
cs
daa
iret
enter
pusha
sub
call
inc
(bad)
in
xor
xchg
enter
jbe
popf
mov
rcr
int3
jns
out
in
fmul
inc
jl
cs
sahf
fwait
cmp
pop
mov
xchg
out
out
inc
mov
sub
dec
lods
pop
cmps
test
pop
movs
out
in
cmp
mov
in
jmp
jg
inc
popf
cmp
out
nop
mov
xchg
xchg
out
in
fs
pusha
and
out
(bad)
push
cld
add
sbb
and
cmp
loopne
je
in
mov
cmp
in
in
mov
(bad)
test
adc
mov
or
or
sbb
enter
sub
dec
iret
and
mov
mov
dec
mov
test
fsub
dec
pusha
and
dec
pop
push
pushf
push
or
cmps
add
push
repnz
and
call
dec
pop
sub
push
sub
mov
adc
fs
mov
push
jge
cli
je
mov
sub
add
adc
test
out
fcomp
adc
dec
pusha
dec
outs
cdq
das
pop
or
pop
nop
cmp
dec
or
pusha
pop
inc
mov
cmp
fsub
lock
push
pop
push
jb
cmc
cdq
inc
or
xlat
inc
repnz
cmp
js
add
or
cmp
add
inc
enter
(bad)
xchg
in
fcomp
inc
add
dec
add
fcom
shl
clc
cmc
daa
stc
jl
lea
xchg
cmp
cmc
sbb
sbb
push
add
enter
cs
xlat
pusha
sub
mov
inc
(bad)
xor
adc
push
shl
dec
or
mov
add
jb
movs
lods
sub
add
pusha
nop
fild
sbb
retf
mov
jo
jecxz
and
inc
(bad)
adc
mov
rcr
cmp
mov
dec
jmp
int3
mov
nop
cmp
adc
add
nop
into
pusha
pop
pop
shl
in
mov
xlat
shl
dec
call
out
xor
movs
push
add
hlt
jae
aaa
push
push
in
add
call
and
repz
pop
mov
call
pushf
xor
leave
and
and
dec
cmp
mov
xor
inc
int3
dec
aam
xor
and
fcom
retf
and
in
sub
and
retf
and
cmp
in
xchg
retf
pop
movs
add
pusha
in
dec
repz
inc
adc
jl
in
dec
and
call
xor
inc
jo
xor
aam
je
add
xor
fs
je
dec
lea
jl
and
cli
into
jne
xlat
aam
adc
inc
push
stc
bnd
fsub
dec
add
outs
je
fs
pop
mov
dec
jne
inc
imul
ja
push
out
pop
outs
pop
stc
repnz
jb
pop
outs
jb
ins
jo
inc
jb
nop
and
out
ins
push
je
pop
push
cmp
cwde
inc
repnz
jns
cmp
jb
pop
inc
jae
pop
inc
jns
aaa
ret
(bad)
pop
outs
lahf
test
push
inc
sbb
fs
repnz
inc
into
mov
inc
add
and
popf
neg
mov
adc
ret
inc
mov
push
inc
aaa
les
sbb
and
mov
fld
imul
imul
adc
fwait
dec
xrelease
dec
imul
jnp
pusha
aas
or
adc
cs
in
xor
daa
sbb
fwait
sub
popaw
and
add
cmp
pop
pop
sbb
inc
sbb
inc
push
mov
jnp
push
inc
mov
pop
adc
(bad)
(bad)
or
pop
adc
ret
in
and
(bad)
in
lock
repz
dec
or
cdq
add
dec
or
nop
pop
mov
inc
jb
retf
lods
(bad)
lods
popa
div
inc
popa
adc
adc
outs
adc
or
pop
in
xchg
xchg
fs
je
je
and
sbb
outs
mov
(bad)
iret
fdiv
jmp
inc
jb
clc
iret
inc
or
inc
inc
or
fsubr
adc
ins
jo
(bad)
test
inc
jo
ds
jecxz
je
sub
adc
or
sti
inc
sub
cmps
loop
mov
push
fadd
fcom
or
stos
sbb
pop
sbb
sbb
lock
jne
ins
jg
repnz
jle
ds
ss
dec
cld
(bad)
xor
inc
call
inc
or
ret
mov
not
jmp
jno
and
retf
add
daa
mov
loopne
or
call
and
repz
push
jg
enter
inc
(bad)
bound
mov
add
adc
fild
push
fdivr
cmp
adc
nop
pop
or
jb
xchg
jb
sbb
aam
and
nop
add
adc
pandn
repnz
or
dec
adc
adc
cmp
or
cmp
add
and
or
pop
sub
enter
and
add
or
aas
dec
je
sbb
ret
fs
dec
lahf
push
nop
es
jbe
fld
cld
lock
enter
or
or
stc
pop
std
loopne
mov
sbb
ficomp
hlt
mov
xor
repnz
in
cwde
mul
push
repnz
lock
sub
in
mov
in
in
clc
call
sub
sbb
pop
or
hlt
and
nop
cmp
jmp
nop
out
rcr
xchg
loopne
(bad)
nop
ret
cmp
jp
add
fidiv
sbb
mov
or
imul
shl
call
je
sar
enter
loopne
call
jo
dec
fidiv
cmp
outs
and
(bad)
js
pushf
xchg
(bad)
mov
sub
rcr
je
inc
ret
jne
jmp
inc
add
jmp
mov
shr
add
push
and
cs
sahf
rol
adc
test
xor
xchg
push
cwde
mov
jns
xchg
dec
ja
mov
adc
jg
scas
rol
cmp
adc
icebp
add
push
and
out
add
mov
add
retf
adc
and
mov
lahf
ret
add
and
jecxz
cmp
addr16
nop
sti
inc
jnp
mov
add
or
dec
xor
jmp
jnp
xor
adc
or
xor
pop
in
pop
mov
inc
ror
call
or
inc
add
mov
push
add
pop
int3
sub
mov
test
inc
or
test
cmp
pop
les
add
rcl
and
sbb
popf
or
jl
inc
xor
lea
or
xchg
cmp
and
push
(bad)
repz
lea
push
fs
mov
push
add
pop
dec
inc
fsubr
imul
cmp
xor
shl
dec
repz
sar
jle
dec
jnp
clc
pop
sub
in
fsub
test
inc
cmp
fst
add
jne
push
cld
xor
out
enter
mov
adc
dec
(bad)
adc
or
cmps
aas
jmp
cmp
jne
sysenter
(bad)
shl
xlat
cmp
inc
sub
or
and
xor
je
fld
mov
pop
mov
dec
cld
fs
shl
mov
or
jne
xchg
xchg
add
aas
or
pop
jne
ret
aas
add
inc
loopne
clc
fimul
inc
inc
add
sar
jae
or
sbb
in
nop
add
cs
scas
in
loopne
ja
inc
inc
xchg
std
stc
push
push
sbb
sub
mov
sub
jb
mov
or
nop
cmps
dec
call
imul
mov
sub
pop
aad
enter
sub
sar
ds
sbb
movs
(bad)
cmps
enter
add
xor
adc
call
dec
repnz
call
jo
adc
add
loopne
in
movs
pop
mov
lock
add
mov
or
(bad)
imul
(bad)
adc
jmp
sub
push
and
sub
pop
test
jmp
dec
cmc
lock
cmp
je
bound
es
sbb
es
inc
add
or
or
int3
rol
clc
xor
xchg
ds
or
jmp
(bad)
xor
mov
inc
xor
pushf
and
sub
(bad)
mov
ror
push
sub
arpl
adc
adc
fdiv
outs
jmp
enter
ins
mov
dec
pushf
popf
jge
jb
movs
out
loop
(bad)
in
test
jmp
pop
and
sbb
jb
xchg
xor
pop
enter
xchg
push
sub
nop
movs
sub
leave
jge
jb
jl
(bad)
fld
dec
stc
push
or
push
push
mov
mov
adc
xor
ret
push
push
jbe
jae
push
push
mov
ret
or
rol
pushf
std
push
pop
int3
jmp
jbe
sbb
(bad)
lds
pushf
mov
ja
js
popa
sbb
es
aaa
std
fmul
in
sbb
or
mov
rol
cmp
jne
dec
xchg
mov
repz
xor
or
shr
in
or
ret
movs
ja
mov
mov
push
cmp
cmp
rep
mov
lahf
out
sbb
popa
pop
daa
iret
repz
cmps
stc
push
and
xor
or
push
sbb
sub
xor
pushf
dec
pushf
imul
ror
jl
add
imul
loopne
inc
call
enter
sub
and
xor
in
int
and
xchg
or
pushf
xor
fistp
test
sbb
nop
mov
pushf
in
dec
pop
cld
dec
fcom
test
jb
or
cmp
jp
in
jle
adc
push
mov
and
push
test
push
mov
or
inc
push
fwait
rol
or
jmp
(bad)
clc
or
sub
adc
inc
lds
mov
add
add
shl
arpl
add
aas
retf
es
push
iret
inc
push
inc
push
mov
dec
test
ds
push
mov
jecxz
pop
ret
fdivp
or
sti
(bad)
std
jg
sub
xor
pushf
sub
mov
sbb
mov
or
mov
add
mov
and
or
push
test
in
adc
or
ins
push
mov
push
adc
movs
pusha
loopne
or
dec
add
(bad)
aam
push
jmp
test
inc
cld
ret
jp
sub
push
shl
loopne
pusha
inc
xor
cli
stos
mov
xor
push
sbb
xor
dec
stos
mov
adc
add
mov
ret
stos
push
xor
mov
arpl
mov
pop
mov
jns
iret
clc
push
and
dec
outs
leave
div
nop
and
adc
sahf
out
mov
scas
mov
jmp
dec
sbb
data16
imul
sbb
mov
fnstenv
call
ret
sub
sbb
fdiv
test
(bad)
cmps
or
add
sbb
mov
push
xor
mov
test
jns
aaa
and
xor
ss
dec
add
mov
stos
adc
cwde
je
dec
je
jmp
shr
mov
mov
test
push
push
das
pop
lds
cwde
clc
inc
mov
addr16
and
and
jecxz
hlt
add
cmps
jge
cmps
daa
dec
jae
and
mov
sbb
mov
push
(bad)
or
cli
mov
dec
add
mov
fldcw
sub
inc
fstp
sub
stos
test
fwait
sbb
mov
pop
jmp
sbb
mov
adc
push
push
adc
mov
aaa
or
ins
push
mov
sbb
mov
dec
ret
xlat
mov
loope
push
pop
pop
mov
pop
or
fdiv
push
enter
mov
mov
and
pop
addr16
push
or
add
mov
stos
sbb
adc
sub
std
jmp
pop
or
pop
adc
push
and
mov
and
and
add
and
sbb
xchg
add
(bad)
xor
add
addr16
enter
jbe
pop
sub
sar
adc
call
ins
add
sbb
or
add
out
fidivr
cmp
inc
pop
arpl
jne
out
adc
add
jno
dec
mov
push
add
retf
and
add
and
enter
adc
out
sahf
and
adc
add
add
arpl
jns
imul
push
cs
push
pop
enter
not
mov
pushf
bound
and
push
jb
adc
rcl
fbld
mov
rep
push
daa
psubb
repz
push
xor
inc
dec
daa
pop
jb
scas
stos
pop
xchg
iret
adc
push
jns
mov
sbb
dec
adc
xchg
fdiv
mov
or
adc
sub
sbb
push
shl
mov
ror
sub
push
adc
and
add
mov
xor
aaa
pop
mov
les
pop
adc
mov
add
in
dec
arpl
or
stos
dec
(bad)
fdiv
sub
stos
sbb
adc
mov
fiadd
bound
dec
mov
ss
nop
pop
sar
push
hlt
jmp
dec
loopne
or
pop
not
fnsave
mov
pusha
ss
adc
sbb
inc
lock
nop
inc
sahf
inc
cmc
inc
sub
xor
es
movs
call
mov
dec
inc
call
les
scas
call
dec
inc
dec
xchg
pop
pop
or
adc
lods
push
(bad)
xor
popf
aaa
retf
add
bound
iret
repz
sub
push
mov
sahf
cmps
stc
push
sub
dec
in
push
jmp
popa
(bad)
pop
je
jns
out
fwait
scas
ret
and
push
adc
pushf
pop
sub
sbb
and
push
xor
adc
xor
arpl
sbb
or
sub
dec
pop
cmps
mov
daa
mov
mov
push
or
test
out
xor
mov
pop
adc
add
and
repz
test
(bad)
out
sub
fdiv
or
dec
fidiv
push
push
retf
repz
push
xchg
movs
mov
ins
stos
dec
xor
mov
pop
scas
das
fstp
bound
pop
or
mov
mov
mov
add
js
mov
pop
daa
rcl
mov
push
cmp
mov
jmp
loope
xor
jmp
retf
mov
push
cmp
pop
push
adc
ss
pop
cmp
xchg
in
test
xchg
mov
or
adc
dec
fs
mov
jno
push
cmp
push
push
mov
or
mov
or
xchg
inc
scas
inc
ja
mov
mov
push
xor
(bad)
out
movs
das
out
sub
pushf
mov
out
and
into
adc
add
inc
sub
dec
dec
cdq
fs
or
xchg
push
or
mov
lea
repz
mov
push
ja
repz
xchg
movs
mov
(bad)
sahf
out
or
adc
(bad)
pop
pop
sub
loope
pop
(bad)
jb
and
ss
inc
or
pop
jnp
xchg
sbb
mov
fld
push
xor
fdiv
mov
add
sub
or
mov
adc
sbb
mov
and
add
rcl
(bad)
jl
sbb
sbb
sbb
enter
pop
dec
sbb
pusha
pop
pop
add
cmp
jo
loop
xor
xor
inc
(bad)
jns
push
imul
cmps
sub
daa
rcr
push
test
cmp
and
cmps
push
int
sbb
fld
ret
frstor
xor
pop
loopne
pop
mov
sbb
jne
xchg
mov
sbb
sbb
mov
push
pop
inc
stos
call
add
ror
(bad)
inc
jmp
loopne
mov
dec
cmp
xor
and
pop
inc
jne
adc
jo
push
jb
sbb
adc
stos
sbb
jl
jmp
ja
pop
cld
aas
dec
lock
fstp
fwait
jmp
jecxz
sbb
add
adc
lods
frstor
ins
or
sahf
or
sub
(bad)
outs
fadd
call
lds
mov
cmp
mov
cmp
xor
xor
add
fadd
enter
inc
dec
add
push
sahf
cmp
repz
into
(bad)
clc
jnp
cmps
stc
or
sbb
(bad)
sub
jns
outs
leave
cmps
pop
inc
push
imul
out
call
push
sub
sub
fisttp
and
fld
(bad)
into
pop
sub
imul
cmp
inc
mov
jno
inc
movsx
push
sub
inc
push
nop
mov
jo
jmp
mov
int
das
fild
inc
dec
fbstp
and
and
and
inc
jne
ins
repz
jmp
test
aaa
jns
out
cmp
ins
aaa
jp
xchg
jns
sahf
out
mov
pop
jns
xor
stc
or
rol
dec
rcr
and
sbb
mov
ror
dec
xchg
cmc
inc
movs
lods
xchg
adc
sub
retf
por
mov
loop
cwde
nop
mov
xchg
adc
shl
xor
lock
jmp
pop
jmp
mov
sar
dec
adc
mov
mov
push
adc
sub
cmp
fld
mov
popf
inc
sti
jnp
in
ret
dec
es
inc
sub
push
xor
pop
and
repz
or
mov
lods
mov
sbb
sub
mov
es
out
fild
or
pop
add
mov
hlt
fisttp
nop
mov
add
sub
inc
pop
and
mov
mov
out
dec
fild
sub
sar
jns
sbb
retf
aaa
mov
add
push
inc
pop
and
and
sub
int
xor
jb
mov
inc
in
(bad)
ret
inc
xor
sbb
(bad)
loopne
add
aaa
loope
test
fidiv
sbb
daa
push
cmps
fs
mov
arpl
ret
iret
movs
fld
mov
pop
ret
sub
loope
inc
push
inc
stc
cwde
dec
mov
inc
lock
es
xlat
or
add
mov
add
inc
leave
cmp
dec
repz
cld
push
or
xchg
cmp
push
push
mov
add
daa
lea
out
mov
cmp
push
das
int
das
int
sub
es
fisttp
xor
in
sub
xor
sub
sub
inc
push
nop
mov
or
xchg
das
int
pop
sbb
and
xchg
pop
and
pop
jae
loop
inc
jb
lods
aas
pop
(bad)
ds
fisub
ds
cmp
fcmovbe
pop
push
sahf
pop
pop
sub
repz
ins
test
mov
sub
dec
dec
adc
adc
pop
sub
and
dec
adc
in
pushf
in
mov
mov
push
xchg
sbb
mov
leave
mov
mov
es
inc
xor
shr
in
mov
outs
in
push
add
nop
out
inc
in
fild
and
test
(bad)
fild
and
sub
repnz
leave
cdq
inc
cmps
bound
fistp
inc
xor
push
outs
lock
adc
push
jb
leave
repz
test
retf
cmps
stc
cmp
mov
ret
cld
push
mov
dec
pop
pop
xor
and
push
jl
inc
iret
xor
enter
fmul
xchg
outs
inc
in
(bad)
xor
pop
out
add
das
fadd
sub
pop
pop
mov
cmps
nop
mov
or
sub
aas
inc
dec
inc
pusha
daa
xor
add
inc
rcl
inc
ror
mov
pushf
jle
inc
in
into
dec
rol
inc
jl
jns
sahf
out
mov
inc
aam
jge
iret
xor
icebp
push
sub
inc
dec
or
inc
daa
fild
and
movs
sub
push
scas
jnp
leave
inc
repnz
cmp
add
mov
cmp
mov
or
lods
mov
xchg
movs
xor
inc
add
dec
inc
pop
cmp
cmp
js
jle
popa
popa
add
in
sbb
pop
arpl
fadd
xor
sar
mov
mov
add
je
arpl
clc
mov
add
cld
jle
pop
inc
shr
es
movs
cmp
hlt
sbb
and
push
sub
pop
add
jno
leave
mov
push
sbb
mov
adc
outs
pop
dec
inc
inc
add
adc
jle
fwait
inc
xchg
mov
aaa
sbb
or
iret
jb
or
call
inc
cmp
or
imul
dec
rcr
inc
test
test
xchg
xchg
xchg
lock
dec
das
test
sbb
ins
mov
xchg
adc
inc
cmp
inc
adc
push
add
cdq
inc
jnp
sbb
mov
jae
push
xor
push
mov
add
lds
sti
outs
xor
adc
pop
push
sub
push
or
sar
stos
cmp
inc
outs
mov
(bad)
in
dec
pop
dec
sahf
idiv
adc
sahf
out
jbe
pop
dec
jp
mov
inc
sbb
jo
and
test
add
sub
cs
mov
push
call
xor
or
clc
ret
push
inc
test
leave
xor
fadd
fiadd
jb
lock
add
pop
mov
pop
xor
dec
push
cmp
lock
lahf
sub
inc
js
sub
repnz
dec
dec
sti
jle
sub
fcom
fcomp
xor
fadd
xor
aam
dec
repz
dec
rcl
test
shr
lds
int3
cmp
jne
ror
int
imul
add
imul
je
clc
rol
xchg
fld
aaa
mov
inc
mov
add
sahf
out
(bad)
outs
mov
pop
ret
sti
mov
sar
inc
pusha
jg
inc
test
lods
retf
call
dec
and
loope
ror
xor
jbe
sbb
in
mov
dec
fnsave
stc
mov
cmp
(bad)
lods
cmp
mov
sbb
iret
fwait
test
inc
sbb
mov
fwait
mov
je
mov
lods
cmp
int3
stos
cwde
jno
jmp
xor
xchg
dec
mov
jmp
pushf
nop
nop
inc
sub
dec
sahf
cmp
adc
call
xchg
push
stc
cmp
dec
mov
lock
mov
mov
add
out
adc
nop
mov
loope
xchg
add
xchg
dec
jne
or
cmp
mov
in
enter
push
(bad)
jl
mov
in
adc
nop
mov
and
outs
adc
loopne
aad
adc
in
mov
jne
in
imul
and
or
sub
inc
jns
dec
dec
aas
cmp
xchg
sub
add
sahf
out
lea
cmp
add
and
push
push
daa
shr
xchg
mov
jno
mov
adc
iret
cmps
ret
cmp
dec
mov
xchg
or
inc
ror
mov
test
fcom
cmp
inc
cmp
dec
cmp
mov
fcom
push
aaa
shl
in
and
test
(bad)
loopne
test
pop
mov
popa
dec
enter
xor
and
aam
add
cmp
add
xor
sub
and
or
xchg
xchg
ds
mov
push
call
cmps
stc
xor
pop
aam
icebp
or
jge
push
jb
push
inc
mov
fisub
mov
push
xchg
jns
xor
les
shl
aaa
mov
or
mov
cwde
jo
imul
mov
mov
ins
xchg
adc
popa
lock
and
popa
inc
out
enter
test
inc
xor
and
jmp
xor
sbb
cmp
xor
jno
and
aaa
and
enter
in
jb
dec
and
aas
add
jb
jmp
mov
mov
add
jb
mov
sbb
test
es
out
je
adc
mov
inc
inc
or
daa
mov
or
in
loope
cwde
daa
xchg
push
jmp
dec
inc
js
mov
je
mov
jnp
in
pop
or
bound
or
or
cli
push
ret
ss
and
sub
fisttp
cmp
jge
call
stc
inc
sbb
xor
mov
sbb
mov
loop
fld
retf
ret
test
(bad)
and
fs
sub
sub
outs
inc
ins
in
sub
push
adc
add
add
in
add
push
push
push
shr
pop
mov
(bad)
xor
mov
ja
aam
mov
push
ss
mov
xor
pop
outs
fwait
add
xchg
jae
out
mov
mov
adc
mov
mov
mov
adc
add
aas
adc
ror
or
mov
aad
retf
push
dec
movs
cwde
popf
jmp
inc
scas
fisub
xchg
push
and
scas
inc
pop
daa
add
adc
or
add
dec
mov
scas
fstp
fwait
mov
daa
pop
push
add
js
add
xchg
mov
bound
push
sar
lahf
pop
add
loopne
mov
push
jb
add
or
dec
rcl
push
and
adc
and
sbb
cdq
lods
jl
xchg
lods
mov
xor
out
mov
add
xor
or
push
cmp
cmp
xor
jge
pop
fisttp
and
fistp
iret
sbb
fldcw
hlt
shr
adc
fdiv
pop
mov
xor
fs
or
cli
add
clc
test
cmc
add
adc
outs
mov
gs
je
dec
je
dec
adc
adc
dec
repz
ret
or
sbb
scas
(bad)
xor
inc
sbb
mov
dec
pushf
cmps
mov
inc
add
xor
cwde
xchg
or
retf
fucomip
ins
xchg
jmp
mov
pop
test
inc
fidiv
nop
jne
inc
jle
cmps
mov
sub
sbb
inc
sbb
push
pop
or
test
mov
mov
pushf
and
shr
or
add
popa
loopne
leave
out
sub
jg
fcom
cmp
leave
pop
push
sbb
imul
das
jbe
mov
add
outs
(bad)
fld
pop
or
cmp
sbb
gs
push
fild
add
fcompp
cmp
mov
and
cmp
sbb
mov
fidiv
dec
ja
adc
lock
pop
and
mov
je
add
push
xchg
jmp
mov
cmp
pop
inc
jecxz
and
sub
(bad)
div
dec
pop
xor
or
lock
or
xchg
cdq
faddp
xor
out
push
rcr
out
and
iret
repz
pushf
dec
or
fwait
in
test
leave
lea
sbb
pop
dec
or
fisub
push
pop
pop
sub
push
shl
(bad)
mov
sub
adc
dec
shr
push
sub
jmp
dec
jl
pop
inc
jecxz
mov
inc
test
sti
push
dec
call
aas
adc
gs
dec
mov
dec
stos
inc
ins
add
adc
movd
mov
add
xchg
test
sar
fcmovb
cmp
adc
test
fsubr
dec
mov
inc
cmp
ret
je
add
aaa
icebp
sbb
jg
enter
mov
mov
pop
aas
clc
add
jo
leave
inc
(bad)
out
jmp
je
(bad)
fsub
pop
mov
adc
out
ror
fistp
adc
sub
push
dec
cld
call
clc
add
cwde
xor
xchg
sbb
xchg
cmp
add
inc
dec
out
(bad)
int
cmp
add
outs
pusha
push
dec
leave
daa
or
sub
push
or
dec
inc
sbb
mov
rcl
retf
sub
xor
cmp
push
push
push
jo
in
push
mov
pop
fld
bnd
or
jns
pusha
popa
repnz
pop
add
sub
test
adc
fs
pop
ss
or
and
bound
loopne
shl
push
or
fadd
mov
adc
push
enter
bound
add
jecxz
popa
and
fdivr
push
push
add
add
xchg
les
js
(bad)
dec
push
sub
or
into
or
push
jbe
and
int3
lods
cmp
bound
out
sbb
fdiv
fisub
mov
or
ret
mov
xchg
ror
mov
ins
jo
jns
add
xchg
mov
(bad)
mov
xchg
(bad)
sbb
retf
inc
repnz
push
ds
add
inc
outs
jne
loope
lods
outs
xchg
outs
arpl
inc
fs
inc
popa
je
and
ins
jmp
ins
test
adc
pop
pop
adc
(bad)
jb
sbb
mov
dec
sti
pop
(bad)
iret
aaa
clc
mov
inc
arpl
pop
add
mov
iret
push
ins
ins
xchg
add
pop
sub
xor
in
push
xor
xchg
pop
sahf
and
cmp
adc
mov
mov
push
or
mov
in
sti
mov
push
(bad)
cmp
ins
cmp
jmp
sub
cmp
mov
jbe
shl
cmp
scas
loope
in
push
pusha
dec
push
(bad)
adc
sub
and
(bad)
jp
adc
cmp
sbb
cmp
(bad)
adc
in
dec
cdq
adc
sahf
test
inc
cmp
adc
daa
out
outs
jns
cmp
or
fcom
push
or
jmp
and
dec
sar
cmp
aaa
mov
push
push
mov
xchg
add
movs
add
add
sti
sub
(bad)
imul
clc
or
or
sbb
dec
mov
or
dec
push
push
sbb
cmp
aas
rcl
pop
push
aas
mov
popa
fcmove
loop
shr
push
in
pop
xchg
mov
push
push
movups
mov
jle
jmp
adc
add
sbb
jle
pop
or
out
lahf
adc
add
fsub
pop
imul
or
bound
jle
push
push
inc
loop
rcl
mov
retf
push
je
ret
cwde
mov
test
xor
dec
adc
or
jo
push
in
or
or
(bad)
test
push
and
add
and
xchg
pop
adc
add
outs
pusha
inc
dec
cmp
shl
inc
xchg
cld
push
fidiv
xor
pop
rcr
xchg
add
pop
mov
or
or
sbb
xchg
pusha
add
jno
push
ss
or
jb
dec
sbb
sbb
mov
cmp
cld
jle
cwde
push
iret
js
sahf
(bad)
sbb
int
test
mov
cmp
jne
arpl
jmp
push
cmc
or
xor
test
pop
stc
xor
add
sub
js
jge
cs
jmp
(bad)
dec
and
fst
push
xchg
inc
clc
xchg
add
fst
inc
xor
(bad)
retfw
jp
jns
push
jp
jle
jg
adc
add
add
mov
or
pop
(bad)
mov
call
cli
adc
mov
(bad)
mov
mov
sti
dec
cmp
or
imul
inc
add
cmp
pop
adc
or
imul
repz
jns
imul
mov
mov
or
das
dec
call
daa
aam
mov
sbb
mov
add
popa
add
int3
cld
imul
addr16
add
out
add
enter
pop
inc
or
mov
mov
cmp
jle
xor
pop
jbe
xchg
xor
cmp
xchg
jb
sub
jns
movs
sub
fwait
push
clc
mov
lahf
jno
inc
mov
add
push
push
cmp
mov
fnstenv
loope
imul
icebp
in
pop
lock
inc
nop
in
jns
ins
inc
addr16
add
ds
xchg
dec
lock
inc
xor
dec
sbb
mov
jge
imul
xchg
leave
mov
retf
pop
shl
sbb
cmp
sbb
push
fld
mov
mov
dec
jne
cdq
xor
push
inc
cmp
adc
pushf
in
addr16
add
dec
(bad)
xlat
in
fistp
fild
dec
inc
pop
or
cmp
mov
mov
jns
and
sbb
clc
fsubrp
addr16
pop
jb
or
ins
mov
xchg
xchg
seta
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
mov
cmp
mov
cmp
jo
jb
xor
add
loop
add
add
ja
enter
add
test
add
cdq
push
xor
leave
(bad)
ds
ror
jnp
test
jnp
pop
cld
xchg
adc
xor
pop
dec
je
js
jge
adc
scas
xor
setne
jg
and
mov
dec
sub
hlt
les
xchg
lods
daa
xor
in
pop
xor
mov
add
fbstp
push
push
inc
add
dec
adc
cmc
add
call
imul
xchg
les
or
retf
mov
shr
clc
dec
add
adc
xor
push
xor
call
stos
adc
sbb
test
jne
push
clc
lods
in
push
push
cs
dec
xor
cmp
jle
ins
cmc
sub
iret
iret
ss
mov
or
xchg
cmc
cmp
fistp
shl
sti
push
movs
sub
mov
or
hlt
iret
push
xor
shl
mov
fimul
mov
mov
cld
fild
sbb
clc
push
fisttp
mov
fwait
inc
cwde
jecxz
push
or
sbb
popa
imul
and
cmp
je
mov
dec
and
sbb
ins
rcr
inc
add
and
jmp
jle
in
je
jmp
lock
ins
adc
ins
sbb
test
out
xor
and
iret
mov
test
mov
sub
jle
div
stos
mov
push
dec
inc
push
or
es
or
dec
sbb
or
dec
or
bndstx
jmp
xchg
fimul
inc
jmp
xor
or
ror
pop
cmp
mov
jb
ja
fbld
ret
call
ret
mov
mov
mov
scas
jmp
aas
pop
je
imul
inc
aas
push
lar
in
pop
or
jmp
jl
sbb
mov
cmp
mov
push
scas
dec
fsubr
add
add
add
test
and
and
jle
add
retf
out
aaa
fs
mov
fisttp
cmp
sahf
das
clc
dec
cmp
ja
jb
add
add
call
(bad)
pop
mov
lock
mov
or
and
das
cmps
adc
jmp
add
jge
push
push
adc
or
aas
shl
sbb
rol
mov
xchg
sbb
and
jno
adc
leave
imul
mov
lahf
sub
xchg
jo
das
adc
jmp
(bad)
adc
jp
aas
bound
fsubrp
aaa
fisttp
and
mov
cdq
stc
inc
aas
and
push
add
pop
add
push
loop
xor
mov
sbb
add
ins
jmp
iret
xor
pop
ret
add
dec
xor
jle
adc
jmp
je
hlt
add
call
dec
call
or
jg
mov
fmul
xor
clc
or
lods
cmp
and
mov
icebp
add
or
fldcw
push
pushf
loope
in
scas
bound
inc
aam
das
cld
add
mov
xor
pop
test
ret
movs
add
add
out
sti
sbb
or
enter
and
cmp
inc
jge
pushf
mov
outs
ins
je
adc
inc
add
jae
sbb
stos
mov
fs
aad
and
neg
ret
data16
popa
push
add
sub
je
or
sub
inc
lods
and
adc
popa
je
or
es
jp
sub
or
adc
pop
or
cs
adc
lock
cmp
xor
sbb
cmps
ja
and
sub
push
or
push
jmp
sub
and
lock
clc
leave
cli
test
popa
ins
push
or
mov
fidivr
pop
cli
ds
inc
cmp
not
(bad)
sbb
mov
out
add
call
mov
dec
jnp
mov
adc
pop
arpl
xchg
and
pop
pop
mov
and
jae
sbb
iret
or
sbb
jp
hlt
cmp
hlt
fstp
ret
gs
(bad)
(bad)
or
ret
les
jnp
xor
xchg
cmp
call
iret
lods
pop
inc
sahf
ret
and
or
(bad)
xor
retf
and
pop
stc
into
aam
(bad)
jne
lock
les
ja
xchg
sahf
out
adc
arpl
nop
movs
std
sar
fld
fld
or
adc
mov
inc
add
sahf
(bad)
and
call
lods
jmp
push
fdiv
jo
pop
mov
pusha
das
adc
daa
test
int
or
add
sbb
jmp
or
sbb
jp
or
rcr
xchg
dec
add
or
scas
jecxz
es
mov
loop
push
adc
push
out
mov
jae
pop
aas
sbb
cmp
xchg
leave
gs
push
test
cmps
mov
adc
outs
xchg
sub
adc
sti
loope
mov
ds
adc
data16
jbe
or
cmp
or
repnz
(bad)
adc
pop
retf
add
mov
mov
and
cmps
pop
jge
in
xchg
xchg
(bad)
xchg
and
aaa
or
repz
mov
push
add
(bad)
lods
lods
xor
pop
add
adc
push
pop
adc
fistp
outs
xor
sub
test
jns
out
int3
fcomip
pop
pop
jmp
sbb
sub
jmp
or
(bad)
out
pop
cmp
repnz
movs
lea
mov
pop
sub
jg
jg
ss
(bad)
jle
add
call
pop
pop
shl
and
pop
push
and
pop
add
clc
dec
cmp
pop
fidivr
jo
jno
push
in
xor
ins
imul
pusha
ret
mov
pushf
js
loop
ja
jb
ret
and
enter
fistp
mov
ret
or
cmp
xchg
and
dec
add
mov
push
push
adc
retf
dec
xor
je
loope
retf
add
inc
adc
cdq
mov
or
addr16
and
aas
sbb
(bad)
sbb
andps
sub
(bad)
pop
sti
fldl2t
jne
and
idiv
rcr
sbb
fimul
loope
jl
add
mov
shl
dec
cwde
into
cld
hlt
into
add
shl
mov
jl
pop
mov
nop
dec
push
sub
stc
mov
nop
int3
sbb
or
xchg
ins
imul
push
jmp
enter
adc
je
mov
jns
sbb
xlat
or
dec
push
gs
inc
ins
popa
out
mov
sbb
gs
sbb
add
inc
pop
adc
imul
lods
jl
cmp
bound
sbb
xor
sbb
adc
dec
outs
imul
sub
test
ins
jns
or
fist
push
push
fs
adc
lods
inc
lock
jnp
or
inc
outs
je
xor
cmp
jae
adc
fmul
out
add
xor
push
jo
fwait
push
mov
inc
je
ins
or
ss
mov
push
or
dec
imul
sbb
test
or
imul
xchg
or
lahf
mov
add
dec
jmp
js
add
add
repnz
inc
nop
nop
add
loopne
sbb
cs
dec
gs
outs
fdiv
ret
fxch
cmps
add
inc
jne
sbb
sbb
xchg
loopne
or
adc
push
pop
int
jbe
dec
or
push
clc
or
or
(bad)
rol
and
mov
add
or
test
ins
aas
mov
adc
addr16
or
push
inc
push
mov
adc
or
sub
xchg
outs
mov
call
outs
pusha
mov
scas
ds
and
pop
mov
jb
sbb
jne
stc
pop
ds
js
or
pop
in
addr16
je
and
push
pop
sbb
int3
scas
int3
xchg
jmp
inc
sbb
or
push
je
sub
arpl
adc
mov
test
test
dec
imul
fsubr
cmovb
jae
and
pop
lock
imul
jmp
xchg
setns
or
ins
jo
push
and
lock
mov
and
cmove
mov
cwde
nop
jb
or
and
test
sbb
test
ret
mov
adc
lock
out
mov
fld
fdiv
push
add
dec
ss
adc
and
das
and
mov
sbb
mov
pcmpeqb
cmps
mov
test
loopne
sbb
daa
addr16
addr16
test
adc
mov
lahf
inc
aas
test
mov
lock
movs
mov
cmp
repz
iret
repz
inc
dec
push
pop
gs
cmp
repz
jge
lea
popf
add
jmp
stos
cmps
add
dec
mov
mov
les
push
add
and
jo
cmps
in
mov
push
in
outs
iret
in
xchg
pop
jbe
jns
mov
xor
pop
pop
cmp
dec
push
add
mov
stos
cmps
push
mov
adc
pop
fiadd
shl
mov
jae
mov
(bad)
fldcw
ins
out
pop
and
or
sub
dec
ret
sub
inc
xchg
pusha
or
lods
jo
jl
(bad)
adc
pop
cdq
xchg
es
popf
movs
xchg
mov
xor
pop
push
xchg
sbb
inc
mov
xchg
fbld
inc
mov
xor
adc
jmp
fucom
pop
xor
dec
pop
adc
fwait
neg
mov
hlt
add
push
inc
sbb
repz
push
xchg
mov
mov
cli
neg
lods
cmp
push
inc
outs
ins
add
adc
pop
pop
dec
ds
jbe
pop
sub
aam
(bad)
mov
mov
lock
(bad)
loopne
repnz
outs
sbb
sar
not
call
movs
test
mov
lds
push
nop
ret
pop
sub
push
std
(bad)
cld
(bad)
sti
stos
pushf
mov
push
lods
call
add
aaa
pop
and
ja
mov
test
mov
sub
mov
inc
mov
pop
mov
movs
mov
push
dec
sbb
mov
loope
xchg
jbe
sub
cmovns
inc
cli
mov
jo
push
add
pushf
jae
push
rcl
sahf
cmps
ins
push
popa
outs
inc
scas
cmp
outs
push
mov
(bad)
ficom
aam
cld
pop
add
mov
xchg
adc
pop
(bad)
mov
fidivr
sti
pop
ret
mov
int
lahf
enter
rcr
push
rcl
jge
ins
mov
pop
in
aam
aad
mov
aam
int
fucomp
pop
pop
push
retf
mov
ss
adc
push
je
enter
or
push
clc
sar
add
ror
arpl
(bad)
loopne
mov
mov
and
xor
pop
imul
mov
lea
dec
xor
iret
and
repz
(bad)
lock
inc
add
outs
push
cmp
fstp
mov
(bad)
mov
mov
jbe
(bad)
outs
xlat
push
xchg
fbld
clc
add
outs
pushf
(bad)
push
call
or
sbb
out
into
adc
jnp
pop
mov
fadd
cmp
add
jo
xchg
aad
(bad)
out
je
shr
clc
push
push
push
fcomp
das
js
inc
mov
xchg
adc
fild
pusha
out
xor
or
pop
fistp
jmp
repz
fcomip
push
mov
and
or
scas
sub
mov
test
mov
out
or
adc
inc
lds
or
fsub
unpcklps
cs
adc
or
das
cmovl
inc
test
adc
pop
inc
sub
ficom
mov
xor
clc
in
pusha
int
and
push
and
or
imul
nop
sbb
push
add
out
fsub
test
push
rep
in
sbb
ror
or
sbb
sbb
mov
sbb
push
add
nop
popa
(bad)
pop
in
in
repz
loope
shl
fadd
out
(bad)
iret
repz
cmp
arpl
ds
cmp
fwait
test
ins
outs
inc
repnz
push
cwde
xchg
jecxz
inc
outs
sub
adc
xor
pop
push
xor
ds
cwde
sbb
or
out
lods
mov
icebp
inc
fadd
fist
stos
scas
cs
or
cmp
rcl
repnz
mov
scas
jl
mov
fdiv
mov
call
jmp
ficomp
test
cmps
dec
(bad)
jmp
and
and
test
rol
repz
jae
mov
lock
inc
push
push
add
xlat
scas
inc
push
ins
add
or
rcl
jmp
or
mov
add
into
pusha
sbb
pop
push
test
gs
mov
sbb
inc
sbb
shl
test
dec
xchg
push
cmp
jb
add
cwde
pop
js
sub
adc
jae
stos
mov
fdiv
mov
jg
call
pusha
les
mov
rcl
add
push
pop
outs
and
nop
add
aam
faddp
in
push
or
imul
or
cld
inc
int
dec
add
xchg
xchg
add
out
call
cmp
fidiv
push
lock
add
loopne
in
icebp
push
xor
mov
inc
lock
inc
push
retf
inc
inc
mov
cmps
fnstcw
push
cwde
inc
push
int3
dec
mov
inc
icebp
mov
sub
cld
pop
call
test
add
(bad)
stc
(bad)
clc
push
(bad)
jnp
(bad)
push
push
push
push
push
xchg
icebp
push
inc
push
iret
repz
push
push
out
mov
xor
into
jo
push
xor
mov
or
imul
and
jmp
xor
push
mov
cmp
popf
pop
add
mov
xor
add
test
push
popa
outs
xchg
stos
hlt
adc
int
or
aam
dec
or
pop
dec
in
inc
push
adc
hlt
mov
dec
inc
ja
inc
mov
sbb
push
pushf
dec
pop
mov
lock
nop
dec
mov
dec
dec
ss
rol
pop
lock
and
hlt
inc
add
add
repz
jmp
pop
push
or
jnp
xchg
and
lods
mov
test
push
ss
test
fs
loopne
jb
pop
or
pop
mov
and
popa
movs
mov
push
data16
adc
or
adc
je
dec
mov
cmp
jne
add
je
mov
in
ret
and
pop
call
mov
cmp
cwde
pop
call
addr16
jb
jne
lods
sbb
scas
rol
mov
or
mov
push
add
or
popa
scas
aaa
jecxz
lock
ret
mov
dec
loope
cdq
or
cmp
xlat
bound
ret
mov
je
add
ins
and
jmp
push
les
lahf
and
pop
or
inc
add
sbb
outs
push
outs
sub
and
xor
jge
or
and
jmp
sbb
scas
retf
sahf
test
(bad)
add
leave
js
xor
fild
stc
mov
stos
rcl
cmp
or
xchg
popa
xchg
mov
inc
mov
movs
les
imul
push
mov
or
xor
xlat
inc
cmps
fcom
jo
add
or
jl
inc
ret
xor
or
xbegin
mov
test
sahf
test
loop
or
and
jne
mov
or
sbb
pusha
pcmpgtb
out
mov
test
inc
ja
and
mov
inc
int3
sbb
adc
(bad)
int
dec
(bad)
dec
mov
dec
xor
jne
pop
cs
mov
hlt
sub
nop
(bad)
hlt
fwait
inc
(bad)
mov
xchg
push
daa
inc
popf
test
xchg
(bad)
mov
or
cmp
cmp
fsub
xchg
jne
dec
bound
and
mov
dec
sar
fwait
mov
adc
dec
nop
push
add
jae
adc
mov
sbb
dec
push
(bad)
xchg
mov
sbb
mov
cmp
popa
cwde
sub
(bad)
outs
jecxz
xor
clc
icebp
jg
mov
or
jp
xchg
popf
pop
dec
fild
nop
cmp
lock
pop
jp
(bad)
and
outs
cmp
dec
cmp
daa
mov
mul
jne
dec
jne
mov
inc
xchg
pop
inc
and
je
pop
mov
sbb
and
sbb
mov
aad
xchg
pop
dec
cld
mov
inc
call
jg
xchg
daa
sbb
test
(bad)
mov
add
inc
xlat
popa
inc
xchg
ret
aad
pop
mov
clc
jo
(bad)
pop
mov
inc
adc
xchg
mov
mov
sub
add
inc
push
sbb
cmc
mov
(bad)
fsubr
and
lea
lds
aas
call
je
and
(bad)
adc
cmp
cmp
jne
xor
hlt
push
mov
adc
cmp
push
mov
inc
xchg
scas
into
addr16
popf
xor
test
cmps
addr16
mov
xor
retf
add
push
inc
sti
rol
xor
pusha
popa
xchg
or
lea
cmp
mov
shr
call
inc
pusha
rol
jl
adc
jne
push
sbb
mov
inc
fiadd
jl
inc
push
call
retf
xor
int
ret
cmp
je
(bad)
dec
aaa
or
cmp
inc
fld
(bad)
mov
push
fwait
cmp
in
pop
lock
jl
jo
push
mov
dec
call
dec
dec
jmp
bound
mov
and
lock
adc
add
mov
clc
sub
inc
mov
xor
mov
test
es
pop
pop
aad
pushf
sub
jge
and
int
shr
loopne
(bad)
mov
mov
mov
lock
push
shl
cmp
js
add
sti
dec
lahf
mov
outs
hlt
mov
cli
and
mov
scas
add
sub
pop
(bad)
hlt
adc
or
scas
or
shl
sub
add
xor
ins
enter
out
into
(bad)
call
jb
xor
or
xchg
sub
and
sti
adc
adc
lods
ret
pop
enter
es
cs
adc
adc
iret
lahf
add
and
xchg
(bad)
jo
inc
and
jmp
fbld
nop
sub
jl
jmp
and
adc
enter
mov
xchg
adc
xor
ret
add
pop
dec
mov
mov
bound
xchg
or
es
jo
add
shr
shl
xlat
enter
push
push
scas
fnsave
add
xchg
mov
mov
inc
xbegin
ret
xchg
fs
push
xor
out
and
jmp
jmp
nop
add
sbb
and
push
shl
dec
movs
imul
inc
fisttp
mov
cdq
xchg
xchg
jb
add
ficomp
lea
pushf
jbe
sub
xor
outs
stos
and
mov
dec
fwait
cld
mov
lock
lea
loopne
add
adc
adc
ja
jo
mov
pop
jae
addr16
dec
cmp
mov
add
or
lds
xor
or
inc
cmp
ret
or
xchg
(bad)
outs
xchg
call
cld
fadd
popa
push
or
xor
pop
cmp
mov
js
mov
js
test
or
and
cmp
sar
push
pop
not
jb
pushf
cmps
or
cmps
pusha
add
add
lea
lods
adc
add
mov
stos
and
or
out
xchg
lock
sti
sbb
movs
cmp
jne
fwait
jo
add
sti
and
mov
or
sub
and
aam
xchg
add
and
loopne
lds
fcom
(bad)
sub
fisttp
dec
mov
ja
xor
pop
sbb
mov
inc
xor
mov
rol
fcomp
(bad)
call
xchg
adc
addr16
push
popa
ja
xchg
into
or
adc
inc
sbb
nop
ret
pop
xchg
push
mov
je
or
test
xchg
dec
push
xor
ror
dec
cmp
push
dec
ror
mov
inc
sub
lea
lock
nop
ret
adc
or
sbb
xchg
outs
mov
dec
nop
ror
pusha
pop
jl
gs
adc
pop
arpl
pop
mov
inc
xchg
(bad)
mov
sbb
ins
mov
out
rol
push
xor
push
fmul
xor
fbstp
adc
xor
fdiv
inc
arpl
push
outs
xchg
add
rcr
scas
mov
jno
pop
pop
in
xor
cmp
sub
inc
cs
je
icebp
sbb
repnz
dec
cdq
in
lods
mov
fcomp
or
pop
cld
pop
hlt
cwde
test
push
repnz
or
add
lea
enter
inc
stos
mov
sbb
and
jge
outs
adc
shl
neg
nop
out
pusha
push
pusha
or
mov
inc
and
cdq
ss
cwde
jbe
xor
cs
das
nop
or
mov
(bad)
dec
sub
sbb
neg
xchg
jae
add
scas
(bad)
adc
mov
pop
ret
xlat
lock
sbb
sbb
mov
xchg
add
adc
out
dec
mov
add
sub
loope
lock
pop
cmp
das
dec
push
popf
out
push
das
ror
push
inc
into
sbb
bound
pop
push
hlt
out
xor
or
push
bound
stos
mov
push
and
cmp
jmp
add
pop
cvtps2pd
enter
xor
and
ret
(bad)
mov
cmp
sub
loopne
jno
out
push
mov
jmp
or
push
jmp
push
jp
adc
gs
dec
pop
and
xor
lea
outs
mov
dec
pop
popa
mov
mov
push
daa
push
xchg
add
cwde
or
mov
push
pop
fadd
push
clc
stos
add
jl
push
jle
sub
xor
sub
in
adc
in
ds
or
div
xchg
cmc
out
dec
arpl
jg
lods
mov
or
pop
xor
dec
cmp
add
pop
pop
pop
jae
xchg
in
fiadd
stos
mov
out
fst
into
mov
sar
xchg
cmp
scas
or
sub
cs
cmp
dec
or
inc
sbb
mov
adc
mov
inc
cmp
ret
out
into
jne
fild
add
(bad)
nop
or
mov
leave
xor
add
dec
mov
stc
add
call
push
btr
cmc
in
mov
sar
push
gs
data16
cmp
jne
sbb
leave
sbb
dec
ins
jmp
or
ret
mov
mov
inc
ret
ror
or
inc
sub
int
div
and
mov
xor
mov
stc
lahf
cmp
sub
add
inc
inc
stos
ja
mov
clc
je
cmps
xchg
dec
add
shl
js
and
add
sbb
cmp
test
cli
and
cmp
xor
xor
mov
fs
inc
push
cwde
add
pop
int
not
icebp
or
mov
cs
mov
mov
dec
push
sbb
sbb
and
inc
mov
inc
xchg
cwde
sub
pop
add
push
dec
fisttp
pop
push
pop
je
sar
pusha
and
stos
and
xchg
cmps
sub
ret
or
jns
adc
or
jecxz
mov
ret
jle
ins
push
add
inc
jp
int3
dec
xchg
call
pop
xor
mov
sub
jg
dec
mov
not
repz
(bad)
lds
cmp
push
mov
es
stos
shr
add
jecxz
push
sub
or
add
nop
pop
dec
mov
inc
aam
sbb
and
pop
xor
test
sar
xchg
mov
dec
pop
xchg
add
mov
jns
fst
movs
in
mov
fucompp
push
cli
xchg
pop
sub
cmp
xchg
inc
jne
sub
push
dec
add
sub
shl
lea
inc
xchg
inc
inc
xor
arpl
cmp
test
aaa
into
pop
mov
pop
mov
lds
xor
call
repz
lea
add
jp
add
push
test
cmp
dec
and
inc
loopne
push
icebp
sbb
loope
or
inc
jbe
cdq
out
outs
(bad)
fdiv
push
pop
inc
sub
rcr
jmp
mov
jp
in
mov
mov
dec
movs
add
add
ror
in
imul
cs
push
pop
add
loope
ret
call
mov
leave
and
mov
movs
adc
call
fs
inc
or
ss
and
mov
dec
mov
ficom
pop
scas
ret
xchg
mov
mov
test
or
(bad)
sub
imul
adc
mov
pushf
sub
pop
jg
xlat
popf
inc
mov
or
ja
test
es
out
push
sbb
pushf
and
or
mov
mov
and
sbb
out
stos
jle
pop
xchg
out
add
imul
xchg
repz
xchg
cmp
mov
adc
fimul
(bad)
daa
mov
aad
or
xor
jl
adc
and
pusha
add
pop
xor
rcl
test
cld
adc
rol
push
and
mov
test
shr
jmp
and
sbb
dec
fld
(bad)
fwait
inc
rcr
clc
add
add
sub
cmp
je
inc
mov
push
imul
daa
push
add
adc
out
adc
push
jle
shl
adc
pop
ret
xor
adc
add
mov
add
cmp
jae
fs
je
stos
lahf
inc
cld
not
ret
btr
cmp
jl
lods
add
fisub
(bad)
push
jae
mov
loopne
add
jns
mov
inc
xor
jbe
sub
adc
je
sbb
(bad)
fwait
add
mov
push
mov
call
adc
xchg
push
inc
hlt
ret
mov
jl
adc
push
inc
cmp
jne
inc
dec
jne
les
or
adc
iret
and
adc
fidiv
aad
push
jp
xchg
inc
mov
mov
jmp
je
or
fsub
dec
movs
xchg
mov
in
lock
mov
test
pop
(bad)
out
push
pop
not
xchg
sub
enter
push
mov
pop
outs
imul
aam
call
or
pop
cli
add
aam
mov
mov
sub
into
inc
movs
mov
dec
fild
cmps
push
push
cmp
add
mov
out
and
xchg
pop
pusha
dec
es
sub
and
lea
in
fs
out
mov
add
add
cmp
or
push
add
aas
adc
out
dec
mov
clc
adc
cmp
adc
fdivr
mov
test
je
addr16
ins
adc
and
jmp
push
nop
retf
rcr
adc
push
daa
aaa
lods
fdivr
adc
shl
cmp
nop
cmp
mov
gs
stos
fcmove
fsub
push
in
int3
adc
fdivr
dec
scas
mov
cli
and
adc
add
or
stos
push
add
cmp
pop
cmp
and
mov
test
cmp
xchg
test
sub
mov
gs
mov
arpl
icebp
adc
jmp
pop
or
cdq
in
in
in
inc
shl
jo
jnp
cmp
call
inc
loope
xor
scas
push
or
pop
adc
movs
cli
in
in
ja
adc
dec
shr
and
jae
and
adc
out
cmp
je
lds
mov
mov
pop
fnsave
add
scas
inc
pop
push
xor
outs
jp
add
mov
jne
cmp
mov
dec
add
and
mov
adc
inc
gs
aas
(bad)
sub
mov
retf
lea
sub
clc
repnz
sbb
dec
cmp
adc
or
mov
push
out
vmovaps
xchg
ins
xchg
inc
mov
leave
bswap
push
and
loopne
outs
mov
xor
xlat
and
pop
pop
shl
sub
jno
ret
adc
scas
and
lahf
ror
adc
jl
inc
sub
or
hlt
pop
bound
mov
fisttp
sbb
or
ret
ret
and
jns
cmp
jnp
call
sbb
test
mov
idiv
xor
mov
jmp
and
add
into
mov
add
jns
pop
cmp
add
cmc
xchg
ret
or
xchg
addr16
clc
pushf
sbb
out
lods
jbe
push
lods
(bad)
push
dec
ss
test
pop
popf
and
add
sbb
sub
push
pop
shl
mov
cmps
inc
outs
popa
add
test
ror
cmp
xchg
fsub
mov
jmp
(bad)
mov
fwait
mov
jbe
inc
and
jge
popa
dec
cmp
adc
add
cwde
pop
je
aaa
inc
xor
std
aaa
cmc
or
cmp
jne
test
adc
fs
cwde
cmp
push
adc
adc
push
sbb
inc
dec
jne
jecxz
or
mov
mov
jmp
jl
cmp
cmc
stc
rcl
or
sub
pop
inc
cmps
pop
add
inc
cmp
in
sbb
sar
out
popa
not
pop
scas
adc
or
sbb
call
and
adc
ja
add
mov
rol
push
xchg
data16
fistp
jmp
fstp
out
retf
lods
in
gs
mov
ins
or
sahf
shl
pop
push
mov
jnp
sbb
xchg
push
(bad)
es
jb
and
xor
aas
jne
aam
pop
ret
pop
adc
push
stos
pop
xlat
movs
sbb
pushf
inc
dec
lods
pop
mov
mov
inc
push
and
xchg
ret
adc
ret
pop
adc
xor
sub
movs
pusha
clc
test
adc
lock
cmp
lock
add
add
les
stos
rol
mov
mov
jge
mov
rep
sub
packuswb
sub
or
xchg
js
and
(bad)
mov
mov
cmp
dec
jne
pop
gs
(bad)
pushf
mov
mov
xor
mov
add
add
imul
add
push
xor
sahf
or
or
out
add
pop
sub
push
push
and
loopne
mov
inc
fwait
cmp
and
mov
jecxz
cmp
xchg
xor
pop
call
mov
sub
adc
mov
daa
daa
(bad)
dec
inc
call
mov
pop
out
and
push
lahf
ret
bound
scas
sbb
jbe
sbb
xchg
push
dec
push
lea
clc
jnp
js
or
mov
add
or
mov
rcr
adc
lods
adc
xor
add
inc
test
xchg
mov
fdiv
shr
jecxz
in
jge
lock
lock
icebp
outs
mov
in
dec
ds
or
xchg
hlt
adc
mov
inc
ror
in
repnz
idiv
add
scas
sbb
or
(bad)
aam
dec
dec
popf
mov
mov
jb
jne
retf
add
popa
aas
sbb
cld
dec
clc
shr
retf
imul
sub
cld
rol
popa
aaa
(bad)
xchg
(bad)
xor
dec
rol
aad
and
fsub
dec
mov
(bad)
sbb
hlt
adc
clc
nop
sub
xor
ins
lock
push
dec
rcl
ret
pop
xor
add
mov
inc
addr16
sub
and
adc
or
mov
jmp
adc
mul
(bad)
push
adc
add
and
(bad)
inc
in
inc
ret
cwde
sub
cmp
int3
clc
out
xchg
dec
push
dec
imul
fistp
or
or
jo
inc
inc
xchg
call
push
stc
or
stos
mov
int
rcl
push
shl
mov
xchg
test
hlt
lds
jne
xor
cmp
aas
inc
cdq
lea
mov
adc
sbb
dec
add
add
adc
and
leave
je
and
jge
add
push
sbb
xor
ins
cmp
or
mov
sub
add
clc
les
stc
test
and
int
or
rcl
loope
mov
sub
and
cmp
xchg
mov
hlt
adc
adc
mov
cld
xor
or
xor
fsubr
sbb
into
xchg
push
dec
dec
adc
call
pop
cmps
enter
pop
add
dec
inc
je
hlt
hlt
das
ret
dec
hlt
popa
popa
jb
retf
pop
call
and
mov
mov
sbb
sub
inc
(bad)
ud0
jne
les
mov
and
cmps
(bad)
mov
mov
adc
add
iret
cmp
lds
into
jmp
movs
add
outs
mov
dec
mov
mov
pop
repz
push
retf
mov
push
dec
cmp
out
rol
push
push
sbb
mov
leave
mov
outs
shl
shl
sub
and
or
mov
cmp
sub
dec
sub
sbb
ret
test
cmps
nop
ret
sub
shr
lods
scas
push
mul
inc
inc
adc
dec
shl
xchg
dec
pop
clc
shl
inc
jo
cmp
std
fs
inc
add
and
rcl
ins
data16
pop
daa
jmp
fsubr
mov
fcmovne
pop
xlat
adc
cmp
add
jno
cmp
rcr
mov
repnz
shr
push
repnz
popf
push
(bad)
xor
cmp
xor
test
sub
(bad)
int
cmps
mov
daa
push
adc
push
rol
pop
sar
or
and
xchg
sbb
jge
mov
adc
enter
fstp
xchg
inc
push
mov
add
adc
shr
mov
das
fld
jp
push
and
jp
mov
icebp
sub
inc
loopne
loopne
in
rcl
nop
push
inc
pop
das
loopne
pop
dec
pusha
and
adc
aam
dec
mov
sub
hlt
icebp
inc
clc
rol
fdivr
rol
scas
adc
call
xor
mov
or
mov
xor
mov
cli
add
retf
iret
mov
shr
jns
sbb
cmc
movs
(bad)
add
stos
or
test
ins
add
(bad)
ins
pushf
inc
ror
add
sub
out
cli
call
test
shl
inc
loopne
jle
lods
loopne
ret
call
adc
and
cs
jne
stos
rol
fsubr
scas
rcr
(bad)
dec
cmps
aam
cmp
mov
adc
fisttp
lds
aad
aam
mov
mov
imul
mov
add
sbb
(bad)
aad
aad
neg
add
jne
mov
push
fdivr
lds
xchg
ja
jg
popa
rcl
push
jg
or
xchg
ret
sub
inc
test
add
add
cmp
cmp
or
(bad)
or
or
sbb
test
sub
fistp
xor
mov
xor
push
mov
out
inc
aad
pop
cmp
sbb
mov
add
inc
mov
dec
push
sbb
sub
mov
xchg
cld
inc
mov
cmp
add
jmp
sbb
ret
pusha
repz
mov
pop
cmp
sbb
xor
add
xor
loopne
sub
sub
popa
and
sbb
xchg
mov
inc
xor
data16
xor
not
or
cld
sub
xor
rcr
xor
sbb
mov
xchg
test
ins
test
ret
push
or
cmps
pop
dec
nop
fs
test
enter
sub
stos
outs
addr16
cs
adc
or
imul
fst
fld
cmps
loopne
or
mov
enter
pop
push
or
fadd
sbb
sbb
rol
or
cmps
and
jns
or
mov
cmp
dec
mov
(bad)
jmp
mov
daa
add
add
or
push
jge
lea
jmp
dec
(bad)
sahf
cld
imul
hlt
dec
fidiv
mov
mov
data16
and
sbb
add
repnz
push
or
ret
push
xor
xor
in
mov
dec
fidivr
mov
repnz
mov
(bad)
mov
mov
sbb
push
(bad)
mov
lods
retf
sbb
scas
push
cmps
lods
pop
pop
loopne
and
inc
pop
repnz
dec
test
movs
cmps
xor
inc
inc
add
mov
inc
and
std
ret
inc
aas
jg
and
or
pop
xchg
ror
cmp
mov
push
in
ins
es
nop
mov
sbb
nop
cdq
ja
and
push
ret
ins
mov
loop
push
add
xor
lock
(bad)
lea
pop
add
shr
shl
or
retf
or
and
retf
sbb
dec
addr16
and
cmp
mov
cmp
jmp
ins
data16
sbb
dec
inc
jge
sbb
jle
pop
ret
sub
int
push
sbb
jl
cmc
adc
inc
mov
mov
sbb
pop
cmps
and
adc
cmp
or
cwde
nop
add
fcom
fsub
ror
rcl
loope
add
lock
lods
xor
mov
clc
loope
inc
mov
cdq
js
xchg
xchg
pop
popf
shl
loopne
inc
add
push
sbb
push
push
lahf
push
jl
pop
call
cmp
or
stos
add
aaa
or
nop
cmp
cmp
or
fmul
inc
retf
mov
nop
cs
shr
xor
pusha
sbb
pop
add
aam
and
cmp
dec
pop
mov
jb
dec
ins
lahf
stc
jbe
sar
add
push
ret
xchg
das
mov
sbb
mov
adc
les
jge
and
jb
ret
dec
shl
add
jbe
and
test
ret
cmp
in
movs
push
sbb
mov
xchg
pop
xchg
repz
test
pop
or
aam
push
push
pop
push
pop
mov
lea
sbb
jp
cld
and
stos
(bad)
shl
dec
mov
mov
add
adc
gs
push
outs
or
cmp
adc
lahf
movs
loope
sub
or
out
adc
jne
cmp
xor
cmps
xchg
xor
movs
sub
addr16
push
xor
push
ror
adc
or
pop
pop
xchg
popf
shr
fcomp
push
push
pop
sbb
push
js
je
xchg
inc
ficom
imul
inc
fsubr
and
sub
aas
dec
add
cmp
or
xchg
push
js
add
and
or
(bad)
repz
pusha
sti
add
add
jbe
or
fidiv
sbb
push
dec
cld
cld
adc
push
sbb
add
cmp
mov
or
add
push
push
push
mov
fdivr
push
inc
xchg
pop
push
mov
pop
aaa
mov
mov
in
pop
inc
push
push
bound
xchg
mov
xchg
xchg
adc
add
stc
in
ffree
imul
loope
xor
xor
pop
shl
add
shr
ror
sub
add
sbb
shl
mov
cmp
jecxz
jo
and
pop
mov
pop
pushf
mov
test
fwait
sar
dec
mov
popf
movs
push
pop
mov
out
test
jp
mov
hlt
push
add
xor
retf
rcr
xchg
fsub
add
in
sub
pop
icebp
xchg
jecxz
sub
jle
add
adc
imul
push
into
add
mov
ins
jecxz
jo
lea
js
lods
sub
cmc
push
fisubr
mov
mov
cmp
add
mov
les
mov
jmp
xlat
xchg
xchg
push
imul
in
inc
(bad)
dec
jg
inc
pop
push
jmp
cmp
adc
dec
(bad)
in
arpl
or
pusha
call
out
adc
cld
test
dec
adc
or
or
or
test
jp
or
div
dec
es
cmp
hlt
icebp
add
jl
add
or
jge
jae
sahf
lods
mov
and
je
dec
or
adc
(bad)
add
add
sbb
xchg
pop
xchg
push
ror
pop
aad
xlat
jne
sbb
or
inc
imul
fs
push
aam
inc
add
mov
(bad)
les
aam
test
cs
arpl
aam
ins
adc
sbb
std
xchg
nop
rcl
idiv
data16
sar
or
jp
adc
retf
movs
mov
adc
xor
cmp
lods
jae
push
jmp
retf
movs
add
clc
int
call
rol
xor
ss
dec
push
dec
stos
loopne
xor
std
rcl
and
cmps
movs
and
lds
cmp
cmps
adc
(bad)
cld
sub
adc
ins
jle
or
xchg
xlat
xchg
push
mov
add
xchg
pop
(bad)
push
or
pop
ins
dec
cmp
mov
mov
adc
add
enter
cdq
xchg
shr
(bad)
mov
add
push
jae
inc
js
test
inc
xor
popa
push
retf
pop
xchg
jmp
or
aam
inc
aam
fwait
lock
cmp
or
inc
sbb
xchg
push
cld
push
push
pop
mov
ds
adc
(bad)
pushf
pop
sahf
xor
sbb
dec
adc
jl
rol
mov
sbb
(bad)
mov
aaa
dec
pusha
cmp
cmp
push
das
add
add
imul
xor
dec
jmp
sub
test
pop
pop
jmp
bound
cmp
xchg
ret
and
clc
add
stos
iret
(bad)
add
mov
shr
js
sub
cmps
loopne
add
adc
mov
mov
mov
jne
ds
fldenv
cmp
loop
das
jmp
add
xor
fisttp
ret
nop
push
push
adc
xor
adc
call
add
push
pushf
aas
pop
add
or
ja
fcompp
adc
or
dec
add
popa
and
add
out
mov
lea
mov
inc
sbb
test
gs
loopne
retf
mov
xor
ins
popa
mov
or
jmp
pop
and
xlat
imul
xor
movs
pop
pop
jmp
sahf
aam
imul
imul
and
aam
outs
jmp
pop
adc
cdq
jmp
add
mov
jmp
sar
cmp
push
add
sub
jae
mov
adc
cmps
xchg
jmp
adc
int
or
add
scas
adc
ins
add
pop
cmp
adc
jmp
sbb
(bad)
jp
pop
inc
sub
pop
(bad)
ror
clc
mov
and
popf
or
mov
fisub
outs
mov
add
xchg
dec
mov
clc
(bad)
adc
jl
stos
and
inc
adc
arpl
xor
cdq
clc
not
icebp
dec
ins
ins
ds
cmp
dec
inc
push
idiv
pop
jmp
sahf
push
fnstsw
pusha
cwde
inc
push
sub
cmp
inc
sbb
jne
outs
jl
xor
mov
sbb
retf
or
imul
sbb
shr
dec
xchg
stos
jmp
push
lea
cld
cmp
jl
popa
dec
sub
mov
or
pop
xchg
lahf
and
(bad)
in
mov
in
inc
call
sub
pushf
shr
in
push
sbb
loope
imul
dec
into
or
js
pop
push
push
call
or
invd
sub
cmp
mov
gs
push
push
adc
daa
adc
add
push
imul
out
pop
shr
dec
scas
dec
je
inc
pop
jb
inc
scas
sub
sub
add
xlat
sbb
or
mov
adc
adc
xchg
mov
fidivr
mov
ins
push
lods
sbb
or
adc
out
add
sub
pop
mov
add
and
adc
or
pause
xchg
jl
add
fdivr
or
call
cmp
hlt
out
ins
adc
add
ret
push
call
add
pop
adc
sbb
adc
cmp
push
adc
and
xchg
add
ret
das
and
mov
loop
inc
loopne
pushf
sbb
and
and
push
mov
add
adc
xor
cmp
fwait
cmp
sbb
rcl
mov
dec
hlt
aaa
scas
(bad)
cmp
adc
add
add
div
dec
pop
jne
dec
or
pop
xchg
push
add
int3
push
inc
retf
xchg
mov
push
int3
adc
hlt
adc
sbb
and
lods
inc
shr
or
int3
adc
push
cs
cld
sar
fild
xchg
inc
not
push
push
and
cmps
call
jmp
xchg
mov
je
push
cmp
jo
cmp
aad
jmp
movs
addr16
(bad)
inc
add
(bad)
in
push
push
sbb
add
pop
jecxz
sub
shr
pusha
dec
cmp
push
cmp
pop
in
dec
inc
pop
push
add
xchg
xchg
daa
clc
arpl
sbb
inc
repnz
inc
cs
jne
push
sbb
push
pop
lods
cmp
repnz
inc
dec
bound
push
call
repz
inc
xor
repz
xchg
cmp
gs
xor
dec
cs
push
sub
lods
cmc
rcl
dec
scas
test
sbb
push
mov
jnp
sar
inc
fistp
inc
inc
inc
or
jecxz
mov
pop
hlt
inc
jl
js
or
xchg
xor
xchg
add
inc
ret
cmp
xor
xor
jo
ror
pop
inc
jmp
cmp
ins
repz
mov
sbb
and
jne
iret
in
in
mov
cmp
or
rcl
iret
into
xor
and
mov
inc
xor
xor
fcomip
cmp
mov
call
jmp
cmp
mov
push
jmp
shl
mov
push
xchg
loop
and
(bad)
jmp
retf
std
xor
loopne
ins
call
shr
jne
inc
and
sbb
addr16
out
jmp
xchg
sbb
bswap
iret
fld
into
sub
sub
xlat
out
jle
js
in
ficomp
(bad)
jg
push
lock
movs
push
sub
(bad)
jmp
fild
jecxz
mov
dec
adc
mov
fstp
fst
retf
sbb
add
dec
add
adc
push
or
movs
aas
pop
or
jne
pop
das
fmul
dec
push
aaa
in
adc
push
adc
lods
inc
cmp
push
cmp
test
pop
xor
mov
cwde
shr
dec
jle
nop
ret
dec
pop
into
sbb
mov
pusha
ja
movs
lock
popa
and
inc
inc
jo
sbb
pop
(bad)
addr16
rol
fdivr
add
inc
jge
add
sub
rcr
rol
or
test
mov
cmp
fldenv
mov
in
cmp
jb
(bad)
leave
mov
ret
div
int3
not
ret
mov
ss
xchg
test
sbb
test
sub
xor
inc
inc
xor
(bad)
add
in
out
shl
or
adc
lock
pop
mov
and
test
inc
mov
ds
mov
inc
sahf
in
enter
push
pop
popa
lods
jp
cmc
pop
xor
cld
sbb
cmps
movs
daa
mov
xchg
hlt
mov
lock
mov
inc
cmp
ja
lods
pop
test
(bad)
sbb
or
add
pushf
fs
xor
not
and
mov
ret
rol
adc
cmp
rcl
or
inc
mov
mov
xchg
cmc
xchg
sar
push
cmc
mov
(bad)
add
jae
push
cmps
inc
call
and
mov
outs
mov
mov
popa
lock
jb
pop
pop
mov
int
xchg
mov
clc
imul
sub
in
push
jno
push
hlt
adc
iret
push
pop
mov
fnstsw
dec
sbb
adc
pop
sub
or
dec
sub
retf
jno
push
or
(bad)
inc
out
mov
push
call
loopne
das
mov
adc
adc
clc
scas
leave
pop
or
mov
test
das
aam
adc
xor
mov
mov
cmp
test
mov
bound
in
fmul
repnz
push
and
daa
mov
pop
or
adc
nop/reserved
xor
inc
sbb
xchg
push
iret
fdivr
or
(bad)
dec
movs
test
adc
jae
pop
sub
imul
in
sub
add
adc
fcom
cld
popf
clc
cwde
sub
jne
mul
mov
mov
xor
jmp
call
jmp
lea
cmp
and
shl
leave
mov
xchg
adc
push
mov
add
jmp
das
pushf
pop
lahf
jne
jmp
adc
sbb
pusha
das
fdivr
dec
in
inc
aam
add
enter
mov
push
sbb
add
paddsb
inc
pusha
sbb
push
xor
jecxz
es
mov
sahf
popa
mov
push
stc
sbb
fild
inc
xor
dec
xor
out
pop
aaa
out
xor
and
nop
mov
cmp
popa
xchg
mov
shl
xlat
adc
xor
into
sub
daa
out
iret
mov
in
in
push
and
push
pushf
pop
fst
jge
mov
call
dec
jp
aad
cmc
xor
inc
pop
in
mov
loop
fidivr
or
sub
mov
dec
dec
pop
or
ja
test
jmp
cmp
jbe
jmp
and
sbb
mov
sub
mov
xchg
aaa
fs
(bad)
cmp
imul
jge
popa
sub
xor
xor
and
fdivr
out
dec
in
(bad)
cld
clc
adc
xor
out
dec
push
jmp
aam
or
xor
push
movs
in
mov
ret
out
nop
nop
outs
lock
or
icebp
dec
add
test
inc
and
sar
adc
dec
(bad)
add
shl
or
fld
sbb
push
sbb
pop
sbb
adc
(bad)
scas
adc
inc
and
daa
mov
or
mov
jmp
or
or
xor
inc
add
sub
push
leave
sar
push
dec
pop
add
retf
sub
mov
mov
dec
inc
cmp
xchg
and
adc
xor
inc
in
xchg
push
outs
push
repnz
movd
sub
adc
push
ss
pop
sbb
dec
or
out
dec
push
xor
mov
mov
adc
cmp
cdq
sbb
xchg
cmp
cli
in
gs
bound
cdq
repz
outs
sub
sbb
dec
scas
push
ins
xchg
test
mov
mov
and
cmp
jne
ret
and
test
inc
in
into
mov
pop
mov
cmp
mov
add
mov
mov
xor
pop
add
sbb
cmp
arpl
rol
fsubr
(bad)
cmps
loopne
and
es
movs
xor
adc
adc
js
hlt
pop
push
adc
or
aam
mov
outs
and
aad
pop
not
hlt
add
or
pop
add
sub
pop
adc
dec
loopne
add
xchg
xor
xor
add
popf
or
xchg
dec
inc
hlt
sub
loopne
loope
dec
cmp
xor
jmp
ins
push
cmp
add
dec
outs
xor
fdivr
adc
and
and
lods
jmp
fimul
ror
in
add
jl
inc
push
pop
pop
inc
mov
xchg
cld
or
inc
add
mov
adc
xor
shl
xor
idiv
inc
lods
add
repnz
mov
mov
or
xor
jae
sbb
cs
cwde
sub
stos
addr16
cmp
sbb
inc
or
jmp
inc
aaa
push
pop
popa
lea
jg
pop
inc
pop
pop
pop
xchg
enter
sub
shl
mov
inc
sub
mov
and
mov
or
jl
rcr
or
je
cmp
pop
arpl
mov
inc
sub
pop
dec
add
seta
xor
sbb
nop
dec
or
bound
lods
mov
or
lods
lods
push
add
push
add
pop
add
mov
adc
clc
jge
nop
sbb
in
dec
clc
out
loopne
in
test
imul
cmc
call
jecxz
add
sub
push
sbb
jl
stos
aam
add
daa
add
push
sbb
mov
or
xor
mov
inc
add
ja
xor
push
pop
dec
fiadd
push
xchg
add
aas
pop
neg
daa
and
sbb
xor
mov
dec
call
cmp
mov
xchg
(bad)
push
sbb
xor
in
sbb
inc
dec
inc
xor
mov
dec
in
mov
mov
retf
leave
arpl
repnz
sbb
cmp
fsub
dec
jae
fsub
ins
or
in
cs
inc
pop
cmp
sub
fisubr
cmp
mov
push
dec
out
mul
xchg
xor
fcomp
cmc
adc
and
sti
mov
sbb
ret
mov
push
push
jmp
cwde
imul
adc
push
dec
sbb
fimul
push
aaa
dec
imul
iret
sub
pop
imul
push
aas
imul
pop
pop
pop
repnz
or
fmul
add
lds
xchg
xor
inc
jmp
test
ds
mov
pop
sub
or
add
pushf
adc
inc
cmp
cld
and
aas
rcl
cmps
push
push
rol
fdiv
loopne
mov
or
test
sbb
mov
rol
or
jmp
pop
test
cld
out
rol
mov
sub
jle
jnp
repz
call
hlt
(bad)
xchg
mov
daa
jmp
sub
dec
sar
ror
mov
push
nop
out
test
push
sbb
loop
jo
cmc
jo
js
retf
xchg
or
sbb
movs
shr
outs
sbb
test
or
jge
ror
dec
cmp
xor
adc
imul
outs
xor
sub
(bad)
pop
daa
jge
pop
adc
sub
and
retf
movs
rcr
mov
add
sbb
pop
jmp
add
dec
enter
inc
or
sub
jp
or
jno
push
mov
ins
xor
or
mov
pop
sub
into
mov
pop
push
cmp
shl
stos
add
mov
fsubr
popf
stos
jo
jmp
mov
mov
mov
nop
cs
cmp
out
dec
mov
loope
aad
leave
int
dec
adc
movs
sbb
dec
arpl
mov
lods
push
pop
call
inc
mov
sbb
add
ins
cmp
cwde
gs
(bad)
jmp
or
bts
jmp
lods
adc
jl
call
and
add
dec
sub
int
outs
rol
pushf
sub
gs
or
xor
pop
out
mov
in
test
sub
add
gs
add
mov
sti
or
adc
cmp
pop
push
cld
inc
shr
dec
mov
sub
inc
adc
fmul
or
scas
bswap
(bad)
push
push
arpl
inc
sbb
ja
clc
add
loopne
adc
je
jmp
push
clc
nop
adc
sbb
inc
int3
fsubr
add
rcl
cmp
pop
mov
cmps
pop
das
adc
pop
pop
add
adc
ror
inc
hlt
popa
lds
cmps
dec
daa
jo
not
adc
pushf
sub
sub
add
push
adc
clc
sar
add
mov
fstp
push
out
adc
add
cmp
and
scas
rcr
rol
cmp
mov
nop
xchg
mov
mov
mov
mov
(bad)
adc
add
ja
cmp
jnp
inc
ja
jl
mov
call
sar
pop
loopne
icebp
sti
sahf
out
daa
or
adc
xor
setle
jns
pop
push
je
push
sub
fiadd
stos
xor
mov
and
add
push
and
or
(bad)
mov
jnp
pop
fld1
jmp
xor
mov
sar
retf
jmp
mov
fwait
movs
dec
cmp
adc
in
pusha
ror
cmp
dec
push
aad
or
adc
adc
and
mov
xchg
or
pop
push
dec
repnz
lock
ret
fistp
call
adc
xchg
push
xchg
retf
jg
inc
add
or
xor
adc
jne
sbb
push
ret
push
or
mov
ss
push
sbb
jp
inc
pop
call
cmp
imul
in
pop
xor
and
inc
mov
out
add
push
push
xor
lods
mov
pop
pop
push
rcl
fwait
push
popa
add
dec
push
mov
mov
inc
dec
call
adc
mov
into
cmp
jecxz
add
test
pop
lahf
sbb
and
push
inc
sbb
push
int
xor
ins
push
and
xchg
loop
sbb
or
js
clc
cmp
je
push
push
dec
cli
push
adc
enter
sub
fild
jg
inc
xchg
push
add
pop
hlt
mov
scas
test
imul
dec
lea
sub
dec
mov
adc
or
inc
hlt
enter
shl
xchg
shl
(bad)
cmp
in
mov
and
cmps
lea
in
fucomp
or
lock
or
ins
add
fwait
pop
jecxz
jecxz
mov
loope
push
inc
mov
add
fbstp
xor
and
cmp
sbb
mov
sub
dec
call
loopne
xor
call
mov
inc
pop
sub
aas
sbb
xor
rcl
mov
push
sbb
fadd
dec
call
dec
sti
push
fstp
push
mov
fnsave
mov
mov
cs
test
ds
les
xor
je
loopne
adc
or
jbe
xchg
fcomp
jmp
xchg
and
xor
or
(bad)
std
push
leave
or
cld
out
pop
ret
dec
add
mov
nop
mov
enter
push
mov
cdq
clc
xor
int
jnp
jmp
sub
lock
neg
sub
daa
xchg
ret
sbb
jmp
push
xor
mov
sub
movs
jmp
das
push
or
push
mov
inc
add
sbb
jns
xchg
cmp
pop
push
mov
popa
loopne
dec
cmp
aas
add
dec
out
ins
(bad)
sub
daa
push
dec
rcr
cmp
adc
or
add
or
or
leave
enter
dec
sbb
cld
sahf
mov
mov
or
pop
jno
scas
repnz
(bad)
cmps
loope
pusha
movs
movs
cmp
in
imul
ror
into
rcr
push
sbb
pop
retf
mov
adc
cli
cs
mov
xchg
mov
rol
aad
in
rcr
push
adc
ror
adc
pushf
sub
xchg
and
js
jbe
push
mov
test
xchg
sbb
(bad)
pusha
sub
pop
addr16
mov
dec
or
dec
clc
xchg
sbb
(bad)
inc
mov
add
add
mov
pop
or
cmp
mov
test
sbb
sbb
in
mov
imul
jecxz
je
idiv
and
je
xchg
in
movs
mov
iret
inc
sbb
(bad)
or
cld
jne
adc
mov
cmp
or
ret
mov
(bad)
(bad)
xchg
inc
(bad)
lock
pop
repnz
mov
out
test
ret
or
lahf
ins
or
movs
jnp
inc
test
add
dec
addr16
xchg
mov
jae
rcr
and
and
stos
or
mov
scas
xor
add
aaa
push
add
ins
lds
adc
ins
(bad)
xchg
jno
mov
xor
xor
aam
leave
and
xor
ret
call
es
mov
loope
loop
daa
es
cwde
xlat
fisttp
(bad)
mov
push
inc
(bad)
xor
sbb
sub
and
hlt
mov
aam
pop
sub
dec
push
adc
xor
daa
icebp
sar
pop
nop
pop
inc
add
fstp
mov
or
pop
fild
data16
dec
add
push
shl
cmp
jg
in
or
dec
test
pop
push
mov
xchg
cmp
xchg
cmp
and
pusha
xor
pusha
ja
fmul
mov
mov
add
cmp
xor
enter
je
xchg
aam
int3
and
(bad)
lock
and
mov
sub
xor
dec
test
add
inc
xchg
cmc
ror
add
pop
inc
outs
add
jmp
push
movs
mov
dec
test
ins
adc
push
and
mov
call
sbb
sbb
or
scas
sbb
xor
or
mov
adc
or
lahf
cmc
mov
xor
loop
sbb
inc
or
inc
sbb
xor
cdq
mov
cmps
cmp
ja
mov
fcmovne
mov
out
js
jb
push
xor
test
add
xor
push
shl
push
or
pop
push
int3
add
and
and
neg
xchg
pop
icebp
sub
jmp
lea
nop
and
pusha
enter
sbb
add
pusha
lock
push
rol
push
adc
cmc
cdq
dec
cmp
gs
adc
cmp
imul
loopne
cmp
fbld
or
mov
and
dec
addr16
leave
gs
shl
push
xor
icebp
or
inc
dec
std
pop
sub
lea
int3
push
mov
or
daa
mov
pusha
mov
retf
or
push
xchg
fistp
pop
or
adc
stc
pop
jge
arpl
add
cmp
adc
in
jns
sti
(bad)
loopne
(bad)
mul
retf
in
cmp
je
and
ss
pusha
cmp
mov
cmp
hlt
sub
and
inc
xchg
mov
xor
ja
(bad)
mov
mov
mov
mov
cmp
xor
xchg
or
movs
ret
xchg
add
sub
nop
inc
(bad)
add
jb
and
or
or
leave
and
outs
ins
dec
mov
mov
or
or
shr
mov
push
in
jle
dec
mov
sub
enter
adc
pusha
fidiv
and
fwait
xchg
dec
pop
ja
cmp
mov
sbb
lods
pop
pop
out
cmp
adc
and
sbb
cdq
idiv
mov
push
add
pop
mov
mov
aas
dec
jae
push
mov
fimul
ja
and
push
retf
jns
or
fsubr
sbb
jle
popf
test
mov
(bad)
or
cwde
add
je
fimul
or
nop
add
ret
div
and
fst
enter
push
shr
and
sub
push
js
xchg
pop
repnz
adc
je
and
adc
xchg
sub
lock
lock
mov
push
(bad)
retf
cmp
pop
fst
std
mov
(bad)
xchg
retw
xchg
push
inc
test
movs
add
daa
or
dec
test
adc
sti
rol
add
sbb
js
xor
pop
pop
mov
fsubr
sbb
and
es
lods
sar
adc
push
pop
xchg
aad
ret
je
pop
mov
mov
add
jge
sub
mov
cmp
sub
mov
adc
cmp
mov
mov
imul
pop
enter
ds
add
mov
or
add
sbb
jmp
jnp
inc
push
mov
gs
leave
fsub
or
shl
ret
cmp
sbb
sbb
jns
daa
inc
inc
xchg
ret
daa
mov
in
cmp
mov
or
cld
sbb
and
mov
aas
mov
add
cmp
pop
fdivp
outs
sbb
xchg
mov
loop
xchg
cli
push
or
pop
popa
fimul
cmp
jo
sbb
ins
outs
add
aam
cmp
jge
add
addr16
fbstp
lock
and
and
ja
or
cmovg
dec
mov
pop
sub
pop
cli
add
jecxz
jnp
sub
or
xor
cmps
pop
test
xchg
jmp
ret
inc
cmp
gs
cmp
xchg
in
mov
enter
sbb
add
and
inc
jmp
inc
lock
hlt
push
dec
sub
ret
jne
xor
mov
or
lock
and
adc
hlt
fistp
lods
or
dec
push
or
(bad)
test
inc
sub
out
mov
loopne
mov
mov
inc
cdq
mov
and
cmc
enter
sub
adc
dec
mov
call
(bad)
and
cmps
(bad)
push
clc
xor
outs
push
ret
inc
mov
in
popf
in
pop
xor
push
jg
sub
push
leave
xchg
cmp
sbb
lock
je
imul
cmps
pop
in
mov
sbb
xor
sti
je
pop
loop
and
add
xlat
jmp
xor
jb
and
and
sub
loopne
pop
mov
ret
push
fmul
pop
movs
ins
mov
jb
enter
cwde
and
lods
and
push
imul
call
loopne
add
mov
call
xchg
push
(bad)
stos
enter
xchg
nop
sub
add
jne
adc
mov
pop
sbb
cmp
sub
lock
shr
push
add
jns
sbb
xor
pop
jmp
daa
iret
cmp
push
inc
neg
add
push
xchg
xchg
retf
pop
add
sbb
test
rcr
sbb
sbb
dec
ja
adc
mov
sub
xchg
add
movs
(bad)
fidiv
inc
ret
mov
xchg
das
loopne
mov
ds
and
cmp
adc
or
arpl
(bad)
add
mov
xchg
adc
stc
popa
push
mov
aam
jl
(bad)
xchg
cmp
and
pop
xchg
iret
inc
and
mov
pop
adc
sbb
imul
add
ja
and
(bad)
mov
(bad)
or
push
xor
fild
push
xor
test
sbb
arpl
ss
mov
cmp
cwde
into
mov
pop
or
add
xor
xchg
lahf
call
jns
or
cmps
shl
into
push
out
adc
pop
add
cmc
ss
mov
setle
push
dec
pop
jmp
adc
or
fisttp
(bad)
jmp
imul
or
hlt
mov
mov
ds
sbb
dec
add
inc
out
dec
xor
mov
xor
adc
hlt
add
bound
das
jg
ins
test
cld
or
push
dec
push
nop
xchg
mov
push
mov
rdpmc
adc
sbb
sub
(bad)
mov
lods
and
shr
adc
cmc
xchg
rcr
cmp
repnz
aaa
xor
and
data16
lea
call
sbb
scas
aaa
mov
fsubr
test
mov
cmp
dec
call
jne
sub
cdq
sbb
sub
shr
and
movs
enter
std
jmp
inc
jns
push
cwde
add
push
mov
dec
mov
mov
inc
push
push
cs
xor
call
movs
pop
pop
push
cmp
xor
jbe
das
ins
xor
inc
jno
lahf
sbb
sbb
ret
push
xchg
or
mov
xor
jmp
mov
ret
aaa
cdq
add
popa
push
push
push
mov
loope
xchg
add
out
mov
xor
sub
lds
adc
xor
or
push
sbb
jb
inc
fstp
inc
jo
add
add
mov
xor
xchg
fld
inc
mov
sbb
ins
dec
out
xor
sub
int
mov
fcomi
in
ret
push
pop
jae
test
adc
adc
pop
xor
push
jno
xor
xchg
sbb
dec
aad
nop
push
xchg
push
xor
lock
pop
mov
push
(bad)
aad
arpl
leave
push
lea
loopne
(bad)
shl
hlt
mov
pop
clc
stc
adc
pop
btc
sahf
and
test
and
push
sbb
int
xchg
dec
sbb
daa
test
nop
inc
push
and
cld
enter
sub
pop
add
mov
lock
xchg
sbb
movs
and
(bad)
mov
call
sub
ds
les
es
xor
iret
and
daa
pop
add
or
out
dec
pop
cmp
adc
aaa
mov
push
bound
pushf
mov
xchg
jns
in
(bad)
addr16
mov
call
push
xor
call
and
imul
adc
push
and
and
pop
scas
xchg
test
mov
les
int3
cdq
sub
cmp
push
fisub
inc
push
push
push
xchg
ss
xor
sbb
push
jne
daa
iret
imul
jnp
mov
jecxz
cmp
cmp
sbb
inc
outs
jge
add
or
jl
add
adc
and
addr16
or
sub
pushf
jae
lods
cld
rcl
scas
xchg
sub
sbb
jle
aas
jns
cmp
aam
sub
aaa
test
movs
rol
out
aam
ins
sub
fcom
xchg
xor
fldenv
in
mov
cmp
mov
xchg
dec
hlt
and
fcmovnu
and
or
pop
movs
imul
xor
outs
push
fdivr
adc
lea
call
and
stc
push
adc
mov
adc
push
in
xchg
dec
enter
fadd
push
es
sbb
in
sbb
add
lods
lock
call
aad
cmp
and
add
fs
mov
lea
sbb
mov
jno
dec
mov
add
ins
scas
push
ret
in
call
retf
and
mov
ins
cdq
push
xchg
shl
cmp
clc
and
dec
leave
enter
lock
(bad)
sar
sbb
(bad)
cmp
sbb
in
(bad)
int3
ins
shl
and
(bad)
aam
lea
and
push
cmps
inc
dec
pop
xchg
adc
xor
xor
inc
cmps
inc
stos
lds
cmp
and
push
push
and
sbb
adc
cmps
xor
adc
jle
add
sbb
and
or
and
aas
ja
cmc
push
or
mov
cmp
pop
xchg
cmps
jmp
xchg
xchg
sub
aas
push
dec
mov
jns
or
(bad)
test
add
xor
push
push
sar
mov
cmp
outs
retf
fcmovnb
mov
pushf
adc
sar
jge
push
sub
retf
(bad)
stc
sub
xor
xor
sti
popa
sub
(bad)
fst
sbb
ds
xor
cld
dec
and
xchg
inc
loope
cmps
push
sbb
into
or
mov
sub
data16
icebp
cmp
inc
xor
clc
or
std
clc
and
ror
pop
and
(bad)
ds
inc
dec
jne
push
mov
ss
test
imul
movs
enter
xor
dec
test
daa
shl
out
xor
xor
add
retf
add
mov
inc
push
and
mov
sub
pop
aas
mov
mov
inc
push
xchg
inc
pop
dec
jmp
add
or
retf
mov
aam
and
sbb
ja
imul
xor
xchg
sub
call
pop
adc
je
addr16
add
aad
and
fadd
xor
jmp
add
enter
pusha
add
dec
repnz
push
mov
cwde
aaa
xor
test
mov
jg
ret
xor
test
push
xor
push
xchg
adc
hlt
imul
push
stos
cdq
dec
bound
sbb
mov
pop
add
push
or
je
mov
cmp
leave
fsubr
stos
xchg
mov
mov
pushf
mov
inc
or
arpl
push
xlat
(bad)
ins
add
jmp
jno
sbb
mov
jmp
xlat
jg
in
adc
neg
test
add
aaa
add
stos
jo
inc
adc
addr16
xor
adc
cmp
pop
inc
fcom
xor
sub
adc
dec
fst
push
pop
sub
dec
add
mov
add
int
mov
fistp
outs
jl
mov
sbb
add
ret
pop
es
mov
test
ror
pop
add
shl
mov
push
cmp
inc
into
or
popf
adc
and
push
pop
adc
popf
ins
mov
xor
or
cmps
mov
xchg
leave
data16
sub
sbb
fwait
cmp
xchg
inc
inc
push
in
mov
sbb
cs
dec
adc
adc
popa
dec
xor
pop
hlt
(bad)
popf
sub
or
ret
fs
adc
sub
aam
add
outs
cmp
mov
(bad)
xor
push
loope
adc
cmps
mov
sbb
mov
and
enter
push
jmp
iret
test
or
jbe
std
and
mov
xchg
imul
ins
and
jmp
stos
add
test
retf
clc
test
inc
sbb
adc
cmp
xlat
(bad)
pop
jmp
xor
mov
push
das
pop
adc
xor
int3
pop
adc
mov
sar
loopne
or
xchg
and
push
adc
add
outs
enter
xor
mov
repnz
scas
(bad)
mov
adc
in
mov
adc
xchg
aam
xchg
xchg
cwde
sahf
imul
inc
loopne
adc
adc
push
dec
inc
xchg
jb
ins
out
adc
cmp
pop
push
push
jge
test
retf
outs
loope
push
enter
imul
xor
push
js
popa
jg
adc
data16
push
int
movs
dec
pop
add
test
inc
pop
and
xchg
sbb
xchg
mov
test
sbb
add
cmp
and
pop
pop
loope
or
pop
fwait
nop
popa
arpl
inc
push
aaa
inc
inc
cs
pop
pop
arpl
(bad)
out
aad
jg
add
sbb
add
xchg
aas
ja
lock
and
pop
hlt
xor
sub
or
jne
das
ss
cs
adc
and
jne
out
shl
dec
xchg
dec
adc
rol
cmp
xchg
fldenv
ret
mov
mov
xchg
(bad)
pusha
mov
or
xor
mov
jl
inc
xor
sbb
ds
adc
inc
dec
jne
shl
jno
jg
rol
das
add
xor
and
sub
cdq
jmp
jmp
sbb
and
adc
inc
pusha
push
sbb
xchg
test
add
push
adc
mov
cmps
xchg
cmps
cmp
ret
adc
inc
loopne
adc
out
adc
xor
aas
and
mov
push
xor
and
scas
or
or
(bad)
jg
push
dec
jge
test
cmp
xchg
xor
(bad)
retf
(bad)
imul
out
sub
fwait
or
nop
dec
sbb
or
sbb
das
mov
push
out
in
(bad)
pop
adc
adc
rol
mov
mov
test
fdiv
adc
ret
pushf
ja
mov
mov
mov
inc
dec
aam
lods
test
movs
shl
(bad)
adc
dec
and
not
push
or
push
outs
dec
cmp
dec
cmc
and
xor
leave
es
xchg
popa
pop
call
push
pop
retf
inc
and
xor
push
jmp
push
in
and
cmp
xchg
shr
lock
or
adc
or
dec
mov
adc
or
pop
sbb
and
dec
cmps
adc
dec
test
pop
add
inc
cmp
adc
or
outs
cs
jl
or
sbb
push
mov
out
xchg
cmp
sbb
(bad)
sbb
rcr
dec
or
mov
enter
jbe
mov
out
jno
sbb
xlat
push
dec
or
xor
push
add
and
dec
xor
xlat
clc
(bad)
jo
push
js
jbe
sub
jge
daa
add
outs
sbb
ror
ja
sub
out
inc
push
xor
push
sbb
cld
pushf
jb
mov
push
inc
dec
clc
and
xor
mov
pusha
push
and
add
scas
and
lahf
aaa
dec
shl
ins
inc
rcr
fidivr
inc
inc
pop
or
inc
je
test
pop
sbb
ror
retf
xlat
sub
cmp
stos
xor
adc
ins
mov
popa
lock
mov
xlat
repnz
out
pusha
sub
adc
push
std
pop
(bad)
ss
xlat
ret
mov
cld
jnp
ror
cmp
jne
jo
and
and
xchg
cmp
inc
neg
xor
mov
jno
mov
pop
xor
gs
pusha
xor
or
or
or
inc
ins
jle
push
inc
fadd
adc
popa
add
sbb
xchg
leave
xor
inc
xor
or
adc
or
add
xor
adc
cdq
push
imul
jge
add
dec
xchg
mov
push
sahf
adc
pop
das
iret
jg
aas
dec
adc
add
sub
adc
jge
das
inc
into
add
cmp
jle
dec
add
fiadd
into
sub
lock
xchg
or
pusha
fsubr
sub
xor
or
add
mov
pop
sti
gs
scas
pop
mov
push
adc
or
add
retf
(bad)
inc
aad
and
iret
inc
rcr
into
adc
push
lock
mov
inc
aam
cmps
movs
movs
xchg
pop
or
in
push
inc
cmp
retf
xchg
pslld
push
hlt
add
adc
dec
dec
pop
add
jno
mov
sbb
jne
or
fistp
cmps
xchg
and
and
inc
push
je
cmp
ret
mov
hlt
mov
lock
jle
sub
gs
lock
adc
pop
mov
or
xchg
retf
retf
push
in
test
fadd
pop
test
or
adc
ror
lea
out
and
fmul
shl
sbb
sub
sbb
in
(bad)
adc
rcr
push
jp
loope
jle
or
ja
adc
xchg
xor
ror
jno
pop
sbb
in
ror
in
push
retf
push
int3
dec
(bad)
int
ds
fsubr
rol
jp
adc
push
test
lahf
sbb
or
sbb
movs
repnz
sbb
and
adc
idiv
pusha
cld
je
mov
mov
push
test
sbb
jb
popf
lods
and
sub
imul
aaa
or
cmp
mov
push
ror
push
aaa
out
mov
lds
stos
repz
ret
dec
vpdpbusds
cmps
outs
dec
and
adc
adc
pop
sub
jl
or
adc
stos
or
adc
aas
mov
clc
mov
ins
push
outs
(bad)
idiv
jmp
sub
mov
mov
lea
mov
cmps
mov
ror
pop
jp
lea
inc
(bad)
jge
mov
mov
dec
fsub
fstp
mov
add
cmp
retf
mov
xor
push
cmp
call
or
popa
lock
xchg
scas
adc
(bad)
push
shl
inc
invd
popa
xchg
inc
pop
and
mov
mov
pusha
sub
popa
sbb
adc
test
fcomip
(bad)
je
cs
pop
push
push
sbb
jg
push
push
es
add
mov
addr16
or
and
dec
cmp
arpl
in
cld
push
xchg
in
or
pop
fldenv
in
(bad)
cld
push
jo
movs
pcmpgtw
pop
xchg
test
jl
sbb
cdq
add
and
inc
aam
jmp
mov
inc
aaa
in
out
aam
add
pop
mov
out
sub
mov
sub
mov
sbb
outs
dec
mov
inc
push
push
add
sub
or
or
or
push
mov
das
xchg
push
add
les
iret
add
push
inc
or
test
iret
dec
and
int
push
sbb
inc
push
inc
inc
sbb
pop
pop
adc
aad
push
scas
call
js
mov
push
jb
loopne
retf
fs
jbe
iret
mov
sbb
inc
test
inc
push
push
fistp
inc
jl
nop
and
call
out
jg
test
fcmovu
hlt
test
cmp
add
sbb
mov
pushf
fs
mov
sub
sahf
mov
(bad)
push
dec
dec
movs
sbb
add
xchg
scas
or
xor
xor
int3
fcomp
loope
or
mov
mov
(bad)
jae
cmp
lock
jecxz
jns
mov
sti
mov
dec
gs
jae
pop
xor
leave
cmp
push
or
imul
sbb
pop
mov
push
xor
stos
adc
inc
xchg
inc
loopne
mov
pushf
in
push
push
imul
(bad)
xchg
cmp
push
or
mov
ret
and
dec
jg
sbb
call
add
sbb
jge
or
xor
nop
or
xor
out
add
sbb
push
adc
jmp
ficomp
cld
pop
loopne
xchg
mov
adc
cmp
xchg
and
and
mov
out
and
mov
xor
sub
enter
fdiv
jp
mov
adc
or
fst
or
mov
jbe
loope
call
mov
outs
jb
pop
xchg
cld
mov
pop
rol
mov
or
fwait
add
pop
shr
in
mov
imul
adc
mov
mov
ja
fbld
mov
adc
pop
xor
cmp
fs
mov
data16
ja
jbe
mov
imul
jnp
and
jnp
scas
push
adc
(bad)
cmp
clc
div
rol
add
adc
outs
ds
mov
inc
xor
mov
pop
dec
lahf
xor
outs
cmovl
fsubr
int3
adc
aam
cmp
pop
cmp
push
int3
push
xchg
push
cmp
dec
mov
pusha
mov
aas
push
dec
cmp
repz
and
cmp
repz
pop
arpl
and
cmp
jnp
push
(bad)
mov
or
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
cs
jno
xor
dec
loop
push
inc
mov
movs
leave
aam
pop
inc
inc
pusha
mov
rcr
mov
pop
jmp
fsubr
lock
loopne
scas
and
dec
jmp
imul
enter
mov
lahf
xchg
xchg
ja
jns
cmp
xor
inc
pop
std
dec
inc
mov
daa
outs
push
(bad)
outs
jmp
clc
(bad)
xchg
loopne
add
mov
push
les
setne
sbb
mov
cli
call
enter
sbb
shr
adc
xchg
dec
add
fiadd
pop
or
mov
add
mov
in
mov
mov
fisttp
adc
inc
add
cmp
inc
es
xchg
sub
xor
cmps
lock
dec
mov
outs
out
add
jno
mov
jle
push
cwde
jp
mov
sbb
dec
mov
inc
inc
aam
add
fiadd
mov
inc
xchg
shl
scas
enter
loope
push
sbb
rcl
pop
add
lods
cmp
outs
xchg
adc
imul
cs
xchg
test
or
xor
xchg
ret
sub
js
iret
xor
adc
sbb
and
inc
adc
pop
inc
ror
inc
arpl
test
sbb
std
lods
pusha
lock
lea
inc
lds
lea
or
jne
ret
aas
sbb
jp
inc
and
sub
xor
inc
repz
mov
test
sbb
lods
or
mov
cmp
enter
add
retf
mov
add
(bad)
xor
adc
jae
ffree
sub
pop
and
cmps
cs
fst
add
in
xor
test
rcr
fld
fidivr
mov
xor
fsubr
cs
in
inc
pop
fsubr
xchg
jle
pushf
sub
aas
push
mov
sub
mov
jp
es
dec
jne
stos
mov
lods
push
push
shr
mov
addr16
scas
iret
bound
test
sbb
and
jns
dec
push
and
push
cs
cmp
jns
das
fadd
inc
lock
pop
js
in
sbb
or
lock
add
aam
jnp
mov
inc
dec
mov
mov
dec
dec
cs
sub
mov
sub
pusha
sti
and
and
leave
imul
xor
bound
mov
(bad)
bound
sbb
out
(bad)
rcl
cmp
cmps
ja
jmp
outs
adc
dec
push
sub
mov
mov
adc
pushf
ror
jg
inc
test
pop
pop
mov
sub
xor
fild
fwait
hlt
add
lock
cwde
add
adc
in
mov
sub
xor
stos
cld
adc
sbb
mov
inc
pop
(bad)
repnz
or
hlt
fdiv
mov
add
push
adc
sti
xchg
dec
add
mov
pop
mov
jns
pusha
or
add
out
jb
and
lock
mov
lock
push
cmp
(bad)
pop
loopne
lods
adc
arpl
(bad)
fdiv
stos
aam
sbb
xor
add
sub
rcr
fsub
(bad)
mov
ja
movs
mov
jne
jge
cld
loopne
fcom
push
(bad)
in
xchg
int3
int3
pop
cmp
shl
fsub
test
dec
loop
sbb
jmp
adc
cmp
mov
cmp
das
dec
(bad)
push
push
sub
stos
sar
ret
sbb
xchg
pop
jl
sti
in
movs
add
sti
pop
addr16
cmp
test
lahf
inc
fcomp
xor
test
sbb
sbb
jge
cmp
movs
sbb
pop
sub
push
sbb
push
inc
push
pop
push
add
adc
addr16
movs
test
je
or
jae
ror
dec
out
jle
push
sub
lds
sbb
push
cmp
lods
ss
inc
dec
fidiv
or
das
dec
or
inc
jecxz
jmp
or
outs
in
jmp
sbb
jmp
add
jmp
push
or
xlat
and
iret
adc
or
xor
leave
add
cld
clc
stc
or
sub
dec
push
loope
repnz
hlt
hlt
jl
rol
inc
jle
and
repnz
push
fbstp
dec
sbb
mov
adc
les
out
inc
xchg
adc
fldenv
adc
push
out
inc
rol
and
shl
icebp
inc
cmc
test
imul
pop
dec
or
cdq
dec
sahf
push
pop
push
(bad)
adc
data16
xchg
mov
inc
pushf
or
pop
loope
mov
cmp
cmp
shr
loope
adc
jb
pop
xor
sbb
and
shr
inc
xchg
dec
mov
jle
inc
sbb
je
xor
mov
hlt
aas
pusha
push
test
dec
call
sbb
push
test
sub
je
int
bound
xchg
push
sbb
adc
imul
adc
cmp
mov
jne
scas
cwde
xor
mov
mov
inc
pop
nop
mov
xchg
or
sti
mov
jecxz
fbld
sti
sub
push
call
scas
add
mov
inc
push
(bad)
aaa
cmovae
push
inc
cmps
dec
lahf
adc
inc
sub
or
mov
adc
push
add
lock
push
jmp
push
xor
je
mov
mov
adc
adc
or
(bad)
or
add
push
push
jo
lods
and
mov
adc
dec
adc
arpl
popaw
mov
push
or
sub
lock
jno
mov
push
fsub
(bad)
xor
mov
inc
push
and
fidivr
or
push
popa
cmp
jle
push
add
mov
pop
inc
add
add
sub
das
sub
xchg
lock
inc
adc
stc
in
and
and
xlat
pop
movs
add
dec
jmp
out
sub
mov
ret
sbb
jmp
push
pop
jecxz
and
push
aam
lfs
and
adc
daa
or
nop
nop
adc
sahf
je
pop
cmps
mov
inc
sub
shl
xor
pop
xor
inc
sub
lods
js
xchg
lock
and
and
int
push
inc
or
inc
inc
fadd
adc
pop
adc
ja
in
mov
test
jl
inc
or
test
fisubr
call
jne
cs
cmp
jb
pop
inc
xor
push
jl
cmp
or
cmp
xor
outs
and
or
add
push
lea
lea
push
dec
add
dec
jb
pusha
add
stos
sub
mov
movs
imul
lea
dec
push
push
dec
inc
sub
sbb
push
outs
and
pushf
mov
and
push
xchg
adc
bswap
xchg
sub
inc
ds
and
and
fs
add
jo
xchg
cmp
aas
cs
dec
in
pop
jno
pop
pop
outs
cmc
pop
dec
mov
push
push
push
add
ds
pusha
xor
and
mov
cmp
in
gs
arpl
and
pop
retf
push
mov
add
inc
fst
push
out
in
sbb
addr16
push
and
push
jp
ror
and
mov
gs
sbb
push
push
add
adc
dec
aas
pop
aas
adc
ins
outs
jo
mov
ja
push
int3
cs
mov
rol
add
rcl
adc
ins
sbb
in
jl
sbb
ins
and
push
ds
iret
and
outs
sub
sub
add
cmp
ret
push
push
inc
push
push
jns
fidiv
pop
std
jno
add
adc
add
mov
aam
cmp
mov
pop
and
je
push
mov
add
inc
jno
add
arpl
cmps
inc
xchg
cmp
inc
push
cwde
ins
imul
push
pop
out
jae
js
xor
into
or
dec
or
test
pop
cmp
lahf
leave
leave
sub
enter
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
or
push
push
push
cdq
ret
imul
mov
push
add
jp
inc
push
jmp
out
dec
push
(bad)
inc
daa
pop
faddp
xchg
or
hlt
adc
dec
cmp
shl
push
or
test
or
movs
and
mov
sub
lock
xchg
push
xor
pop
loope
inc
shl
mov
pop
pop
and
int3
mov
mov
sub
mov
loopne
in
ret
data16
scas
js
enter
jp
setae
jle
xchg
xchg
xchg
xchg
pusha
popa
bound
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xchg
xchg
xchg
ins
ins
outs
outs
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
ss
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
ds
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
and
es
xchg
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
xchg
sub
cs
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
adc
push
pop
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
sbb
push
pop
or
add
js
inc
repnz
js
mov
inc
mov
xor
inc
add
jl
jl
dec
xchg
dec
sbb
or
call
sbb
add
int3
jg
test
lea
and
je
push
mov
cmovb
jb
lea
js
adc
(bad)
mov
popa
nop
sar
add
xor
outs
mov
dec
leave
imul
xor
jns
or
inc
jl
push
xchg
mov
adc
js
mov
sbb
sbb
pushf
(bad)
or
adc
jp
xor
and
and
push
inc
mov
add
inc
xchg
xchg
add
inc
dec
rcl
enter
and
jo
sub
iret
pop
xor
lds
inc
sub
mov
jp
and
inc
add
int3
ja
mov
mov
inc
dec
ror
out
jge
inc
lods
push
fmul
xchg
xor
or
jne
inc
xor
sbb
popa
sbb
sub
xor
sub
adc
sub
xor
mov
push
clc
sub
xor
cli
sub
js
es
xor
add
inc
or
xor
inc
add
out
or
nop
scas
and
push
inc
sbb
cmp
dec
lods
pop
jg
jl
adc
rcr
push
test
add
pushf
aam
cdq
mov
aam
jg
adc
adc
aaa
or
fadd
xor
pop
outs
mov
bound
imul
int
dec
popa
sub
mov
test
ja
add
dec
pop
add
adc
ins
jge
adc
outs
inc
cs
push
sbb
adc
jle
loope
leave
and
aad
in
mov
mov
sub
in
leave
fdivr
jg
add
repnz
jg
outs
jb
pop
enter
jg
jg
jbe
(bad)
iret
idiv
cmp
adc
push
xor
(bad)
jg
jbe
adc
pop
sub
and
popa
pop
or
rol
pusha
cmp
fiadd
or
xchg
mov
mov
leave
add
mov
add
pop
xor
add
popf
cmp
inc
and
add
or
stos
add
push
(bad)
cmp
and
and
inc
xchg
sbb
and
js
sbb
ror
jns
fild
(bad)
ins
pop
call
sub
(bad)
popa
push
fimul
(bad)
cmps
cs
fadd
cmp
mov
fnstsw
mov
and
inc
pop
add
jns
push
adc
or
retf
add
pop
in
add
outs
pop
inc
cmp
inc
adc
iret
xor
ds
jge
rol
dec
xchg
fcom
sub
repnz
pop
aam
mov
movs
mov
inc
cmp
fmul
inc
dec
daa
ret
jecxz
outs
repz
mov
call
xor
and
repz
sbb
or
and
rol
adc
and
mov
mov
cmp
xor
js
push
sub
in
push
mov
lock
mov
cmp
fcom
addr16
or
push
inc
rcr
pop
inc
aad
push
cmp
test
in
jne
sbb
sub
inc
sub
je
cmova
and
imul
icebp
aam
mov
ret
push
or
pop
retf
call
sbb
dec
test
iret
mov
sbb
add
jb
push
xchg
xchg
and
or
cmps
test
or
xchg
push
(bad)
mov
pop
pusha
adc
(bad)
or
shr
aad
or
lock
loop
adc
add
inc
jbe
imul
add
cwde
out
xor
ins
add
xchg
add
mov
mov
movs
fidiv
call
inc
mov
dec
xlat
cmps
daa
mov
(bad)
push
adc
mov
nop
inc
sub
jne
lods
xchg
dec
loopne
sbb
xor
add
dec
mov
dec
pop
mov
fmulp
jne
sbb
ds
cmps
add
dec
inc
bound
sbb
jecxz
add
add
sbb
inc
call
push
and
mov
jmp
jbe
add
mov
or
pop
push
data16
dec
(bad)
sbb
add
popa
loop
outs
cmp
les
cmp
(bad)
dec
pop
(bad)
rcr
cmc
xchg
or
and
jns
sub
xchg
iret
xchg
rol
and
test
add
jb
(bad)
cld
xchg
add
ja
mov
js
dec
push
in
cmp
add
and
aaa
out
mov
inc
or
stos
or
stos
sar
js
adc
add
add
test
(bad)
sub
add
push
jae
daa
mov
and
clc
lock
js
push
lds
pop
jl
or
in
out
in
push
push
add
adc
lock
cmp
aaa
jne
fstp
pop
pop
push
bound
jge
inc
imul
inc
dec
stc
retf
xor
cmovge
inc
cmp
cs
cmp
jl
inc
pop
clc
loopne
push
frstor
(bad)
iret
dec
shl
int3
clc
test
jmp
dec
adc
nop
lock
loopne
and
cld
loopne
add
fs
jmp
pop
adc
add
jecxz
in
bound
inc
sub
dec
adc
push
or
jecxz
movs
mov
add
lea
or
mov
cmp
or
int
and
mov
sbb
adc
sub
pop
xor
sub
xor
or
add
jmp
dec
inc
ja
call
(bad)
(bad)
and
fwait
and
into
ja
mov
or
dec
fdivr
(bad)
cld
sbb
(bad)
ja
sbb
test
jbe
es
xchg
popa
aam
dec
inc
xor
ja
call
cld
nop
nop
xor
push
xor
cmps
out
push
dec
push
je
mov
pop
(bad)
jecxz
add
sub
call
push
pop
jns
mov
adc
inc
loopne
loopne
arpl
pusha
cmp
sbb
jmp
add
repnz
test
cmp
(bad)
jno
pop
pop
pop
call
fsub
inc
popa
mov
dec
and
mov
lods
sbb
mov
retf
(bad)
ret
in
and
mov
mov
dec
mov
(bad)
fldcw
mov
or
nop
cld
jno
jmp
cmps
ret
mov
aad
pop
sbb
mov
sbb
and
jne
mov
imul
xchg
and
add
mov
mov
push
inc
or
cmp
or
das
lea
(bad)
ja
in
adc
mov
aas
sbb
mov
or
pop
cmc
inc
mov
add
jae
mov
add
call
das
adc
pop
cmps
test
(bad)
cmp
add
(bad)
xchg
sti
pop
(bad)
popa
pop
mov
xor
pop
dec
pop
and
and
xchg
cs
push
or
clc
pop
aad
xchg
xor
lock
cmp
lea
fwait
and
sub
push
stc
add
test
and
add
jl
call
inc
jmp
mov
add
in
loopne
adc
xchg
jo
imul
or
sti
add
nop
mov
pxor
ficom
aaa
cli
mov
imul
popf
lock
mov
scas
xchg
data16
aam
add
or
xor
mov
jmp
mov
inc
mov
xlat
pop
pop
dec
mov
dec
jecxz
movs
jmp
inc
xor
repnz
dec
jmp
add
movs
xchg
xchg
pop
aam
shr
stos
push
and
stos
out
jbe
xchg
fdiv
mov
push
push
ret
cmps
cmp
mov
push
and
or
cmp
cwde
xchg
or
xor
add
xor
pop
in
imul
adc
test
(bad)
repz
inc
xchg
xchg
jo
inc
pop
ds
call
scas
push
imul
outs
in
movs
mov
push
dec
jne
out
ins
xchg
inc
fsub
bound
or
retf
mov
inc
test
sub
pop
jne
push
mov
add
mov
adc
add
adc
mov
call
add
pop
popf
add
push
mov
test
out
or
mov
int3
bound
mov
fbld
js
aaa
and
adc
mov
cli
clc
mov
add
inc
adc
gs
scas
pop
or
and
pop
push
iret
push
mov
pop
mov
sbb
cmps
pop
sub
xor
xchg
loope
add
dec
scas
dec
clc
hlt
lock
adc
push
cmps
dec
push
mov
scas
test
fadd
js
cld
cmp
sub
adc
dec
add
call
cmps
push
adc
int
adc
and
out
xor
int
les
jle
test
and
fdiv
or
push
dec
in
std
cld
test
and
lods
aad
pop
scas
inc
sahf
cmp
jmp
loope
sar
leave
aaa
jns
mov
int
scas
adc
sub
addr16
jl
cmp
enter
pop
lds
cwde
sbb
or
lods
test
jp
push
xchg
pop
pop
int3
ret
rcl
inc
pop
pop
popa
mov
xor
dec
sub
or
nop
lea
mov
das
inc
jmp
xchg
add
cmp
nop
lds
test
pop
jbe
outs
sbb
add
pop
jae
cmp
push
cwde
xor
dec
mov
push
dec
retf
(bad)
ret
push
push
pop
rol
inc
jne
cmp
rol
mov
mov
pop
dec
xor
daa
pop
pushf
push
enter
push
inc
mov
cwde
lods
and
push
pusha
pop
adc
jbe
movs
push
aaa
dec
push
mov
ds
add
push
jo
or
scas
inc
fisub
mov
sbb
or
fiadd
push
jbe
push
push
imul
test
or
fld
call
sahf
int3
data16
jae
int3
xchg
or
xlat
xchg
dec
nop
fcomp
add
loop
mov
gs
ds
sbb
clc
fist
jns
int3
lock
jno
xor
data16
enter
cmp
pop
arpl
adc
mov
mov
outs
gs
mov
gs
sbb
xchg
fimul
popf
out
jnp
or
pusha
cmps
mov
inc
sahf
push
outs
int
inc
jnp
pop
pop
cs
jo
outs
sbb
push
inc
enter
add
je
sbb
or
add
inc
jl
or
push
add
pusha
adc
or
push
rcr
push
lods
jb
push
inc
ins
outs
sbb
or
daa
loopne
aaa
adc
xchg
or
aam
fsubr
ins
ss
push
push
imul
or
push
inc
outs
imul
or
nop
test
mul
or
xor
sbb
adc
xor
(bad)
sti
adc
loopne
call
adc
xor
outs
inc
jb
or
cwde
in
ret
inc
sahf
fwait
bound
xor
dec
sub
jp
data16
lahf
stc
jbe
ror
cs
inc
imul
mov
jae
es
or
mov
xor
ja
push
je
pop
add
pop
test
hlt
std
call
mov
pop
sub
or
sub
je
(bad)
mov
ds
dec
dec
and
int
rcl
mov
cmps
inc
xchg
cld
sub
xor
cmp
ficom
inc
push
fs
push
pop
jl
jl
and
adc
inc
mov
mov
jb
pop
jmp
pop
ror
xor
pop
or
xor
dec
or
dec
dec
jnp
mov
sti
ret
stos
push
pop
outs
test
(bad)
cmp
adc
add
push
and
mov
push
mov
gs
enter
test
dec
in
int3
mov
and
loopne
add
adc
pop
mov
dec
movs
adc
and
jnp
test
out
pop
xor
jl
cwde
in
mov
push
cs
call
les
mov
nop
aam
out
pop
loopne
in
lds
les
adc
cld
(bad)
lahf
pop
sbb
xchg
in
ror
in
cld
or
inc
add
add
data16
loop
mov
aam
add
add
jns
loopne
mov
mov
add
cmp
mov
push
int
add
push
mov
or
aam
call
lahf
sbb
jp
push
test
int
and
add
add
mov
xchg
mov
or
xor
adc
add
rcl
mov
stos
scas
out
pop
outs
or
inc
clc
loopne
push
retf
push
mov
popa
retf
test
nop
jae
pop
sbb
lahf
mov
lds
call
enter
dec
mov
or
and
imul
pop
aas
push
int3
push
or
lods
pusha
popf
test
ds
sub
sahf
cmp
cmp
mov
sbb
(bad)
xor
fcom
push
xchg
ret
sbb
push
pop
jmp
fmul
ja
scas
(bad)
in
repz
push
iret
mov
es
mul
adc
fstp
popf
stc
sbb
inc
push
add
sahf
test
fsub
pop
add
vmwrite
int3
fistp
loope
loope
neg
popw
movs
invd
loop
loop
cmp
mov
rcr
ds
pop
or
loopne
loopne
bound
or
xchg
outs
pop
and
sbb
popf
aas
ficomp
or
int
fild
in
pusha
clc
cmp
lds
inc
ins
push
(bad)
je
xchg
push
jae
mov
mov
scas
xchg
data16
mov
cs
dec
push
mov
mov
pop
xchg
cs
mov
scas
push
test
fdiv
loopne
jne
(bad)
out
pop
and
mov
and
and
(bad)
mov
popa
pop
dec
ins
popa
shl
pop
cmp
cmp
aam
add
inc
push
push
xor
aaa
adc
je
retw
bound
not
pop
dec
in
in
xor
out
inc
fsubp
inc
ds
inc
loopne
clc
cs
es
push
pop
lock
push
enter
cmc
inc
cmp
test
mov
jle
and
ds
repz
test
dec
dec
add
push
mov
or
and
or
dec
les
xlat
add
dec
xor
push
push
fcom
mov
in
cmps
movs
pop
cwde
cmp
enter
cmp
inc
je
inc
fstp
push
or
aam
int3
mov
cmp
push
pop
ret
sbb
adc
push
push
sbb
imul
xor
push
and
xlat
mov
cmc
ror
inc
jl
push
or
xor
neg
xchg
dec
fcomp
push
popa
or
sbb
xchg
(bad)
cmps
push
rcr
mov
and
dec
arpl
pop
sahf
mov
ins
mov
pop
aam
stc
nop
scas
mov
hlt
and
cmp
test
inc
enter
jnp
sub
lahf
or
inc
mov
inc
les
enter
xchg
cmp
loopne
ret
sar
push
sbb
push
add
fs
loopne
sbb
idiv
add
lock
pop
test
aaa
add
mov
xchg
or
inc
dec
dec
test
ja
daa
iret
adc
(bad)
int3
adc
inc
add
mov
cli
pop
add
rol
mul
std
or
mov
or
xchg
mov
pop
cld
mov
mov
(bad)
out
test
or
pop
aam
mov
call
fwait
sbb
icebp
pop
mov
xor
push
fs
(bad)
push
popf
fcom
jg
push
lock
ror
inc
cmp
xor
adc
repz
mov
add
mov
jae
and
lahf
and
adc
les
add
dec
je
pusha
aam
cmp
adc
xor
lock
sbb
pop
xchg
push
shl
out
dec
leave
fdiv
xchg
push
sahf
sbb
inc
enter
xor
push
ror
data16
(bad)
add
xor
sub
leave
adc
and
adc
jecxz
mov
mov
imul
and
jb
or
bound
call
push
pop
mov
pop
clc
push
inc
add
outs
push
sub
test
dec
sar
mov
daa
adc
cmp
movs
in
stos
xlat
cmps
lods
add
icebp
lock
lds
je
inc
jle
fs
jle
inc
iret
cmp
mov
sbb
adc
ins
les
out
jo
pop
int
int3
lea
repz
and
iret
mov
or
xor
in
arpl
ja
jl
sub
lods
ret
sahf
pushf
inc
mov
lods
jmp
xchg
mov
aas
mov
jmp
mov
outs
cmp
mov
or
test
mov
xchg
adc
test
call
cmps
mov
sub
add
or
outs
rcr
jp
ja
ins
ja
repz
mul
dec
popa
jb
outs
outs
inc
scas
adc
outs
pop
dec
ins
pop
repnz
imul
jbe
add
jb
neg
in
ins
gs
push
gs
ins
pop
and
pusha
or
push
imul
retf
add
imul
iret
pop
gs
ins
outs
ja
inc
dec
in
jne
or
arpl
imul
jno
popa
mov
ds
or
jns
cmp
xchg
push
imul
pop
sti
xor
and
and
push
and
outs
push
addr16
mov
cmovae
popa
mov
jo
pop
imul
or
mov
push
addr16
add
je
cmc
(bad)
fisubr
push
xchg
dec
fs
mov
mov
ins
das
or
pusha
dec
leave
add
jg
gs
pop
pop
mov
or
pop
or
and
xchg
fwait
or
sbb
in
dec
push
push
stos
inc
loopne
cdq
and
or
inc
mov
daa
(bad)
push
rcr
jg
mov
adc
repz
adc
aaa
adc
adc
aaa
shr
and
rcl
or
push
pop
outs
jne
repnz
adc
(bad)
ins
and
iret
or
lahf
je
sbb
arpl
jne
xchg
sbb
xor
ss
das
cmp
(bad)
and
and
sbb
fisttp
xchg
out
mov
mov
sub
test
pop
inc
ret
shl
or
sahf
mov
(bad)
mov
mov
test
dec
inc
push
push
inc
push
add
mov
inc
inc
push
dec
push
xor
inc
pusha
cmovae
dec
dec
arpl
inc
inc
push
push
pusha
jg
adc
inc
push
dec
dec
push
mov
in
dec
inc
inc
shl
dec
and
xacquire
xor
xor
adc
inc
dec
inc
and
inc
xor
sbb
inc
inc
dec
mov
push
push
dec
dec
push
dec
fistp
and
bound
das
and
pop
imul
inc
das
inc
inc
dec
push
out
inc
(bad)
cs
dec
inc
dec
or
repz
adc
push
push
vmwrite
push
dec
push
inc
scas
dec
inc
dec
push
push
scas
lods
jecxz
and
nop
xor
mov
mov
aad
fs
mov
and
add
or
hlt
sub
or
inc
(bad)
fistp
js
add
jl
or
adc
adc
cmp
add
or
jg
cs
mov
and
or
idiv
outs
xchg
sbb
and
dec
dec
clc
xchg
jne
and
das
pop
push
inc
cs
xor
sbb
add
mov
shl
lock
jmp
aas
dec
mov
jge
inc
adc
sub
mov
push
inc
or
call
adc
es
cwde
or
js
clc
and
(bad)
xchg
adc
push
(bad)
out
lahf
ins
mov
lods
jb
xchg
aas
enter
ret
das
call
sbb
outs
sub
fwait
nop
cmps
and
je
movs
xchg
adc
leave
and
mov
popa
push
daa
adc
inc
ins
inc
adc
sub
cli
inc
mov
or
sub
dec
outs
jne
mov
loopne
mov
jae
jmp
dec
movs
in
mov
push
cmp
je
test
cmps
enter
(bad)
or
sbb
add
mov
out
mov
or
test
or
div
push
mov
mov
pop
add
mov
xchg
mov
mov
test
cdq
and
mov
xchg
(bad)
in
shr
popf
enter
sbb
fstp
add
jbe
jmp
adc
neg
inc
aam
add
cmps
lahf
mov
push
cmp
add
rol
test
fadd
jo
cmp
jmp
or
test
cwde
add
lds
test
loope
fnstcw
mov
sub
sub
sbb
adc
lds
nop
cmp
add
push
imul
mov
sbb
sub
or
inc
mov
data16
add
fs
sbb
mov
cmp
aaa
dec
test
xlat
add
dec
jge
fistp
pop
jmp
fadd
fld
stos
mov
fiadd
push
or
loop
(bad)
sub
sbb
aas
jno
cmp
jae
pop
cmps
jns
stos
imul
test
sub
add
test
test
sub
ror
sti
sub
mov
push
cmps
sub
or
xor
lods
mov
inc
movs
jbe
pop
outs
adc
or
jg
pop
inc
scas
inc
ror
push
dec
setbe
outs
inc
stos
push
(bad)
ins
add
sbb
aaa
and
dec
xor
test
dec
je
fcomp
xor
push
das
pop
neg
push
add
xor
push
sbb
lock
addr16
xchg
out
add
add
or
mov
and
add
xchg
jp
loope
add
sbb
mov
mov
sbb
js
adc
scas
mov
sbb
and
sub
rol
jg
movs
repnz
add
mov
test
outs
mov
shr
lods
shr
xchg
push
sahf
mov
call
push
fbld
jb
movs
or
lock
mov
stos
mov
inc
addr16
enter
jne
fbstp
mov
inc
xchg
add
das
and
shr
sbb
cmp
je
imul
and
movs
mov
ret
jo
outs
cmp
mov
lock
jl
rcl
mov
xchg
bound
pop
inc
sub
or
test
and
lahf
je
nop
adc
add
test
cs
push
mov
movs
nop
pop
pop
and
nop
pop
mov
adc
les
into
or
mov
scas
je
inc
inc
cdq
pop
mov
lock
add
mov
popa
xor
jns
repz
add
ror
jne
mov
lock
jo
sbb
stos
and
sub
add
into
mov
jmp
sub
add
adc
xchg
dec
jae
iret
sbb
addr16
lock
std
mov
cmps
aas
adc
and
dec
cmp
(bad)
movs
adc
adc
inc
cmp
fsub
or
pushf
sub
es
push
mov
inc
stos
jl
retf
mov
nop
xchg
adc
mov
sub
rol
mov
and
sbb
(bad)
dec
add
mov
dec
cmp
adc
cli
add
cmp
sbb
sub
add
adc
in
push
sbb
sar
mov
push
mov
sub
or
sub
or
or
xor
push
push
or
test
sub
push
push
mov
mov
fiadd
inc
sbb
jmp
inc
xor
cmp
mov
scas
call
mov
xor
xchg
add
ins
je
and
fcom
mov
loopne
adc
sahf
or
xchg
imul
adc
inc
dec
ret
adc
test
mov
(bad)
dec
inc
or
push
icebp
(bad)
les
lahf
or
cmps
xor
in
jo
adc
mov
lahf
iret
sub
cwde
sbb
test
sub
xchg
mov
xchg
sbb
mov
movs
jge
arpl
xchg
mov
pop
test
inc
push
sbb
lea
test
sti
sti
sub
mov
fwait
jbe
hlt
push
mov
cmps
mov
dec
les
push
and
xchg
aam
and
fwait
or
test
rol
ja
leave
add
(bad)
in
cmp
lds
pop
sbb
mov
lea
lds
adc
iret
cmps
jge
and
lods
mov
cmps
dec
iret
cmp
push
adc
push
div
popa
add
inc
push
xor
xor
pushf
or
xchg
sbb
add
cmp
je
or
xchg
or
push
pop
xchg
cmp
inc
inc
sbb
mov
mov
cwde
push
fild
inc
mov
mov
add
inc
enter
inc
test
aaa
repnz
shl
inc
and
mov
cmp
pop
push
or
leave
mov
add
add
test
or
add
daa
fild
mov
jle
push
push
scas
mov
push
adc
movs
outs
add
jge
mov
mov
test
lock
mov
sbb
push
test
dec
fidivr
xlat
cmovae
pop
cld
hlt
mov
data16
cmp
xchg
(bad)
ror
pop
push
xchg
adc
popf
or
lahf
ins
shl
pop
adc
jne
inc
pop
cmp
or
sub
dec
addr16
or
xor
rcl
and
call
lahf
(bad)
enter
cmps
test
add
dec
xchg
test
pop
inc
lock
sub
shl
xchg
leave
add
int
cmc
ins
leave
pop
push
inc
push
cld
ins
aaa
cwde
test
not
and
push
or
shl
pusha
mov
mov
pop
iret
sbb
add
fadd
mov
sub
dec
ja
xchg
or
push
inc
or
cmp
add
movd
arpl
(bad)
sub
or
cli
test
dec
ins
push
js
in
(bad)
xchg
aaa
or
pop
or
shl
sbb
mov
js
cmps
fistp
ret
je
test
and
adc
fcmovb
fidiv
sub
and
test
xor
xor
push
mov
add
nop
mov
dec
or
add
fnop
push
rcpps
push
sti
outs
nop
inc
push
mov
and
repnz
cmp
mov
in
fs
mov
movs
sbb
add
jnp
pop
and
fmul
inc
das
push
movs
cmp
xor
dec
add
lds
xchg
mov
mov
cmp
add
pop
ds
mov
dec
mov
mov
cld
pop
sbb
inc
das
rcr
popa
mov
push
mov
xchg
push
xchg
int3
and
fs
inc
call
and
mov
adc
inc
ffree
jb
adc
xor
push
sbb
push
jnp
js
add
daa
adc
and
rol
das
lea
dec
add
add
jo
fisub
cmp
aaa
int
rol
dec
cld
das
ret
add
add
fnop
and
pop
push
bound
in
cli
nop
pop
outs
call
cwde
cmp
add
hlt
aaa
cmp
imul
xchg
shl
jns
nop
cs
or
in
dec
cmp
jne
xor
out
ss
inc
movs
imul
push
je
sub
pusha
sbb
div
es
jle
(bad)
add
pop
push
xchg
sbb
mov
retf
adc
mov
inc
bound
xchg
outs
neg
shr
pop
fist
cli
or
jmp
dec
xor
cld
enter
inc
and
nop
xchg
les
fincstp
shl
fnstcw
or
xchg
ret
pop
dec
jp
inc
push
fadd
shl
enter
add
test
cmp
imul
jne
xchg
sbb
and
nop
mov
sahf
add
popf
daa
(bad)
in
aad
iret
push
xor
inc
sbb
push
sub
pop
xchg
mov
arpl
sar
test
adc
and
and
push
lock
das
mov
sub
xchg
and
mov
ss
lock
jmp
jns
ds
sub
arpl
dec
add
sbb
data16
sbb
lock
add
inc
jmp
push
jp
xor
push
imul
pop
add
dec
jmp
push
push
inc
xor
or
xchg
call
stc
ret
cmp
jmp
fiadd
sub
adc
add
or
fwait
out
imul
pop
add
add
mov
add
dec
xor
mov
adc
imul
xor
dec
sbb
ins
call
mov
push
pop
aaa
pushf
out
pop
pop
pop
push
inc
dec
pop
es
jne
and
jge
adc
adc
adc
mov
fisub
push
(bad)
push
add
adc
mov
pop
ret
jecxz
js
bound
or
adc
(bad)
outs
mov
or
push
mov
xchg
xor
and
(bad)
mov
sub
shl
mov
mov
dec
movs
jp
jmp
repz
mov
test
cmp
cld
push
mov
xor
cld
mov
nop
shr
sub
jmp
imul
test
jle
sub
or
cld
rol
and
in
add
ds
ds
int
push
xchg
inc
movzx
lea
xchg
xor
pop
movs
push
cs
jmp
addr16
shl
out
push
cs
mov
cld
(bad)
icebp
xor
mov
push
or
inc
sbb
ja
jno
movs
ret
fs
add
and
mov
sbb
das
push
retf
jne
inc
das
pop
movzx
lea
repnz
xchg
or
test
movs
clc
pop
push
ficom
(bad)
das
mov
adc
sbb
inc
add
out
adc
pop
push
push
pop
clc
mov
fwait
mov
inc
mov
inc
adc
aas
push
or
call
ret
or
and
addr16
or
mov
(bad)
in
cwde
mov
add
and
sub
movs
sub
adc
sub
out
inc
enter
dec
pop
movd
push
or
xor
dec
push
and
out
rcl
mov
fld
pop
cwde
sbb
jns
les
bound
add
push
out
sbb
mov
mov
or
unpcklps
test
test
add
cdq
(bad)
push
sar
(bad)
mov
popa
ret
imul
sub
mov
hlt
or
call
out
(bad)
popf
sub
dec
mov
outs
push
(bad)
pop
xor
xchg
out
mov
add
adc
pop
jno
and
push
shr
add
inc
and
adc
add
push
stc
rol
ins
pop
cld
push
push
nop
xchg
cmp
mov
add
inc
hlt
add
mov
loopne
ins
les
dec
test
inc
psubsw
push
mov
inc
xlat
loop
test
loopne
and
sbb
jecxz
sub
add
pusha
jne
ss
inc
inc
or
std
rcr
mov
(bad)
cmp
jg
enter
cmps
add
icebp
dec
ret
aaa
inc
cmp
mov
cmp
jg
es
jle
inc
imul
or
push
aam
(bad)
jecxz
aad
mov
nop
(bad)
jmp
and
adc
sbb
mov
sbb
and
test
pop
clc
dec
inc
xor
adc
push
push
adc
fmul
fsubr
in
lods
xchg
mov
imul
cmp
or
dec
mov
or
sbb
xchg
sbb
das
js
sub
xchg
fcomp
ds
mov
ret
add
call
jge
mov
mov
(bad)
xchg
mov
js
sti
adc
jg
or
jl
push
cmp
mov
dec
add
dec
hlt
inc
dec
fcom
jae
jne
int3
dec
test
mov
add
mov
adc
cmp
sbb
(bad)
inc
sbb
repnz
add
sub
and
xchg
test
leave
or
cmps
fcom
jp
dec
push
sub
add
enter
mov
xor
enter
xchg
mov
pop
fidivr
mov
mov
push
mov
aaa
push
imul
ret
out
dec
in
xor
ds
jnp
dec
das
inc
rol
repz
test
hlt
push
push
ret
ins
sbb
mov
dec
mov
mov
popf
or
xor
ds
cmp
test
inc
imul
ror
mov
or
aas
push
pop
or
test
mov
mov
fwait
aam
xchg
stos
dec
or
rol
jmp
xor
push
rcl
adc
aam
idiv
out
lods
aaa
and
mov
aaa
sbb
rcl
lea
aas
mov
and
sbb
sub
dec
inc
adc
or
add
bound
mov
add
aaa
add
retf
call
loope
push
imul
jle
clc
jb
jmp
jb
call
psrld
in
push
rcr
ret
imul
jae
sub
push
xor
inc
and
or
add
and
fcom
adc
sub
sub
or
or
sbb
xchg
stos
aas
retf
lahf
ds
jmp
dec
push
test
out
adc
mul
add
add
es
mov
or
stc
test
mov
add
outs
push
arpl
add
lods
rol
retf
mov
mov
and
ja
mov
out
es
pusha
xchg
imul
test
cwde
mov
mov
mov
scas
push
imul
jmp
add
push
xor
iret
movs
fdivr
clc
hlt
hlt
lods
adc
nop
inc
sbb
ja
xchg
sub
pop
jns
mov
push
or
lahf
lods
jb
add
lock
test
imul
adc
xor
pop
je
enter
add
xor
push
dec
cmp
rcr
in
mov
push
ins
call
movs
popf
push
or
lock
adc
fld
loop
push
call
jmp
int3
add
test
in
xchg
push
add
or
dec
xlat
sahf
pop
in
ins
adc
or
int
in
xor
mov
aam
ja
jle
mov
or
lods
cs
inc
add
or
push
or
in
mov
mov
mov
mov
adc
in
and
dec
hlt
lods
sbb
test
sbb
in
in
dec
stos
add
hlt
loopne
fnstsw
adc
adc
sub
mov
and
dec
repz
push
dec
xlat
mov
mov
and
out
or
adc
mov
popa
mov
pop
frstor
fbld
ins
shl
movs
xor
fs
and
mul
(bad)
xor
nop
ret
jle
mov
adc
adc
and
fild
inc
xor
inc
inc
stos
into
popa
xchg
pop
aaa
les
(bad)
cmp
xchg
or
sub
cmp
or
cmp
sti
je
sub
ins
nop
shr
rol
add
mov
lea
clc
rcl
dec
hlt
out
shr
hlt
mov
push
enter
in
loopne
or
inc
test
and
xor
push
fdivr
and
pop
sub
loope
arpl
pop
mov
shl
sub
jno
pop
xlat
sub
or
sbb
sub
mov
or
das
mov
inc
inc
sbb
imul
(bad)
push
dec
and
adc
sbb
in
loop
hlt
ret
jnp
inc
jmp
xor
cmp
or
pushf
lods
and
mov
dec
stos
push
hlt
or
scas
sbb
test
dec
jbe
dec
dec
mov
aas
int3
loop
add
adc
inc
scas
pusha
call
jae
xor
cli
idiv
imul
jecxz
dec
jecxz
cmp
test
bound
xor
jb
daa
mov
aam
clc
mov
nop
cmp
clc
and
hlt
mov
add
fsub
lock
sub
xor
jecxz
test
add
dec
pop
ja
popw
gs
jl
arpl
ins
jo
imul
sbb
xor
lea
pop
retf
xchg
(bad)
or
dec
setns
imul
cmp
add
dec
arpl
and
adc
fild
add
xchg
movs
xor
popa
add
daa
or
sub
jmp
pop
daa
jb
inc
xchg
cmp
nop
fs
push
cmp
js
inc
into
adc
out
sbb
sbb
in
in
mov
mov
push
xchg
pop
or
pop
pop
jo
loope
and
push
jb
dec
shr
lods
test
out
xchg
add
mov
push
mov
adc
imul
bound
test
scas
lea
or
push
add
sub
sbb
fsub
dec
div
pop
fcom
sbb
es
ret
push
pop
and
add
jno
aad
xchg
loope
es
sbb
fwait
rcr
int
jmp
test
ficomp
ret
mov
test
clc
jne
fs
or
aaa
add
das
mov
adc
adc
cld
mov
sub
fwait
ror
lds
jo
rcr
mov
pop
mov
shl
(bad)
sub
sbb
or
dec
adc
mov
mov
cmp
or
loopne
popa
and
xor
dec
fwait
lods
pusha
mov
mov
pop
jne
mov
adc
cmp
cs
call
sbb
nop
push
and
xchg
jns
or
adc
daa
(bad)
fsubr
sub
cmp
jnp
push
aam
out
and
or
ficom
out
push
sti
leave
in
or
cld
xor
mov
sbb
jmp
jg
adc
or
das
xchg
loope
inc
xchg
retf
or
inc
or
push
and
outs
adc
jmp
inc
sub
sub
inc
and
movs
jne
xor
nop
mov
ins
je
out
test
ss
add
xchg
fdiv
jae
xor
repnz
ret
ret
xchg
(bad)
dec
xor
cdq
int3
outs
sbb
test
dec
xor
das
xlat
adc
out
cmp
xor
dec
sub
cmp
jmp
or
push
out
ss
aaa
or
mov
xor
loopne
retf
push
(bad)
int
push
mov
jmp
enter
aad
sub
cmps
cmp
xchg
jl
ret
lea
and
jnp
or
js
xlat
sbb
and
push
and
or
and
mov
mov
ffree
mov
mov
(bad)
in
mov
int
dec
xchg
dec
mov
fstp
add
ds
add
shl
jns
lock
nop
cs
xlat
xor
cmps
pop
sbb
mov
aaa
test
(bad)
ss
repnz
in
in
mov
inc
ror
nop
fidiv
out
scas
ror
mov
mov
mov
jmp
or
xchg
and
aam
push
icebp
dec
xchg
inc
adc
sbb
push
(bad)
outs
mov
or
call
push
sbb
adc
arpl
push
enter
or
pop
int3
iret
dec
sbb
in
dec
enter
fnstsw
cld
in
or
or
sub
inc
mov
sub
outs
out
xchg
clc
(bad)
aas
push
sub
mov
jl
mov
push
and
and
push
sub
sub
pop
sub
rcl
out
and
leave
xchg
movs
imul
sub
js
xchg
dec
push
sub
mov
inc
sub
adc
push
fisub
pop
(bad)
es
repz
jp
adc
clc
adc
xor
or
leave
inc
adc
inc
daa
lahf
imul
jo
push
sub
clc
loopne
sub
or
push
jbe
dec
ret
fsubrp
sbb
jnp
xchg
and
dec
xor
sahf
adc
adc
mov
adc
xor
push
imul
ss
aas
scas
fld
bound
loope
pop
sub
add
push
imul
xchg
dec
popa
mov
push
push
retf
cmp
cld
lock
jp
or
push
jmp
push
xor
sub
fs
dec
fdiv
mov
leave
arpl
or
sub
mov
dec
cmp
push
and
or
in
push
mov
add
outs
and
mov
xor
lea
mov
mov
pop
fistp
sahf
retf
test
or
add
cmp
aam
setl
enter
xor
sbb
pop
push
int
pop
sub
aaa
sbb
add
out
mov
inc
arpl
retf
inc
sub
push
pop
test
push
add
daa
cmps
inc
or
or
mov
adc
xor
add
push
and
je
mov
pop
cs
cdq
lea
call
sub
or
jge
and
inc
je
or
jg
enter
mov
gs
jns
hlt
repnz
imul
lea
rol
popa
fcmovne
mov
add
repz
je
mov
cld
sbb
sbb
mov
sub
mov
loopne
ret
out
repnz
fwait
pusha
movs
fist
pop
js
xor
repz
(bad)
int
ror
(bad)
call
pop
rcl
leave
dec
sar
sar
hlt
jae
jbe
mov
sar
add
shr
add
cmp
fs
in
pusha
sbb
push
retf
movsx
adc
in
ret
sahf
or
adc
xor
or
ror
(bad)
fimul
je
hlt
test
test
test
or
pop
mov
fiadd
das
inc
xor
cld
add
and
lock
jge
push
mov
dec
lock
and
pop
js
cmc
sbb
ins
and
or
inc
xor
neg
test
mov
test
dec
inc
(bad)
je
adc
jp
xor
lods
sti
pop
test
mov
mov
inc
adc
xor
sbb
cs
push
je
cmp
xor
call
dec
iret
inc
add
add
xor
xor
and
aas
push
inc
(bad)
mov
push
pop
fs
scas
jo
popf
in
add
xchg
pop
pop
aaa
sbb
mov
fnstcw
jo
pushf
daa
out
fidivr
ja
mov
or
or
test
fistp
cmp
adc
adc
xchg
jmp
xchg
add
cmp
jle
xor
loop
nop
rcl
rcl
sub
adc
add
push
cmp
jns
mov
push
sbb
loopne
jmp
mov
jle
push
add
and
test
adc
or
xchg
test
or
sbb
inc
jae
adc
and
rol
loopne
pop
ds
or
iret
loope
ins
adc
xor
xchg
add
jle
lahf
call
shl
fmul
push
cmps
popa
cmps
lds
sub
push
dec
pusha
test
inc
lods
outs
(bad)
(bad)
push
mov
xor
ins
rol
adc
xchg
clc
ins
shr
dec
jge
jge
bound
ja
mov
jno
and
sbb
fcom
xchg
outs
or
fiadd
push
cwde
push
mov
retf
ss
add
mov
(bad)
jbe
shr
or
push
clc
xor
mov
cld
sbb
and
lods
shr
push
bnd
pop
ret
push
idiv
or
in
push
sub
sbb
xlat
pop
sub
cmp
int
jae
add
cmp
stc
jae
test
or
stc
dec
adc
hlt
xchg
ds
push
lods
dec
rsqrtps
jge
xor
call
pushf
push
call
lods
adc
test
xor
ror
inc
cmp
or
test
out
or
dec
ret
rol
fisub
loope
xchg
call
push
movs
xor
(bad)
int
iret
enter
mov
jmp
xor
shl
imul
jo
push
cmc
xor
nop
dec
add
outs
jmp
jg
sti
lahf
call
in
cs
fs
add
inc
jb
mov
or
fidivr
push
or
xor
mul
les
or
add
das
movs
push
cvtpi2ps
stos
cld
mov
fistp
rol
jmp
add
xchg
fsubr
mov
cmps
or
cwde
jae
ret
and
mov
cmp
sbb
and
or
adc
retf
xor
es
xchg
dec
dec
pop
bound
and
cmp
dec
cli
fisubr
std
jg
or
inc
mov
add
out
xchg
cmp
mov
add
movs
fild
enter
inc
mov
xor
icebp
push
sub
mov
outs
mov
sub
xor
xchg
jno
pop
mov
repnz
(bad)
cld
or
mov
inc
pop
jle
pop
repnz
sbb
pop
imul
pop
fiadd
dec
adc
or
push
in
mov
add
mov
xchg
or
push
call
lock
jmp
js
dec
and
pop
dec
adc
cmp
gs
push
sub
push
mov
pop
pusha
push
loope
inc
dec
push
repnz
add
or
adc
mov
in
or
and
mov
jmp
mov
std
lea
or
aam
inc
ins
inc
and
ins
movs
int
or
imul
or
push
dec
adc
adc
jge
enter
adc
lock
popf
sti
xlat
or
dec
jns
or
xchg
or
(bad)
aam
push
mov
stc
jp
jmp
aaa
leave
leave
(bad)
nop
mov
inc
or
fld
push
mov
jmp
fs
lock
pop
icebp
or
push
not
add
sub
jb
add
fs
rol
pop
mov
cld
push
movs
xchg
pop
dec
pop
push
sbb
and
sbb
add
or
movs
push
enter
subps
out
repz
inc
fbstp
sbb
and
lea
sub
outs
mov
sbb
sbb
add
push
adc
fadd
lea
inc
sub
jge
sbb
das
in
mov
and
jecxz
pop
inc
jmp
pop
sub
into
jae
mov
inc
arpl
clc
or
pop
fbstp
fnstsw
ret
xchg
cmp
fild
sub
push
aas
adc
ss
dec
inc
mov
test
fadd
push
add
mov
xrelease
scas
inc
adc
mov
leave
jnp
fld
lahf
jno
mov
xor
pop
es
push
fmul
add
or
sbb
inc
frstpm(287
pop
and
ss
in
inc
shr
int3
sub
push
das
sbb
lds
push
fwait
mov
and
add
push
jmp
jecxz
cld
mov
mov
sbb
mov
pop
(bad)
mov
cmp
mov
sub
add
je
scas
or
mov
mov
and
or
xlat
into
mov
sub
jl
jmp
outs
cmp
scas
call
mov
pop
daa
sub
push
(bad)
lock
imul
inc
mov
or
push
cmp
fs
inc
dec
lahf
out
aad
cmp
cli
sbb
test
dec
cmp
mov
lock
xor
jbe
xchg
test
sub
mov
test
pop
sub
and
add
and
sti
push
sbb
scas
pop
sub
outs
fst
fdiv
hlt
imul
je
and
inc
sub
mov
cmp
sub
data16
(bad)
jmp
arpl
pop
and
adc
mov
inc
push
lea
add
jmp
mov
bound
and
popf
mov
xor
jmp
pop
loopne
jo
or
ftst
into
sbb
cs
xchg
ja
xor
loopne
mov
test
and
sbb
or
call
push
inc
sub
or
xor
xchg
lods
iret
cmp
fsubr
(bad)
icebp
add
mov
loope
js
enter
lock
sbb
push
push
aaa
push
fcom
mov
lock
shl
(bad)
lock
iret
and
mov
mov
movs
es
arpl
addr16
test
xor
and
js
rol
mov
add
inc
push
jecxz
(bad)
pop
in
xlat
pusha
or
mov
inc
fisttp
out
nop
dec
(bad)
push
loope
push
ror
pop
xor
or
iret
mov
mov
stc
add
lods
loopne
ds
mov
addr16
adc
inc
addr16
xchg
scas
inc
sti
nop
stc
jp
mov
or
adc
movs
fcom
mov
push
pop
test
or
imul
pop
lock
dec
add
push
xchg
and
adc
call
adc
scas
enter
fld
lock
or
push
lods
imul
push
push
push
xchg
nop
inc
movd
mov
js
sub
xchg
in
popa
popa
(bad)
and
ror
cdq
xor
icebp
or
xchg
pop
and
adc
mov
and
in
cmp
cmp
jo
loope
add
add
cmp
inc
sub
add
add
leave
push
pop
dec
adc
sub
in
or
cmp
test
cmp
(bad)
xchg
movs
and
sub
pop
movs
pop
mov
and
xor
mov
push
outs
shr
push
push
sbb
jno
ffreep
es
test
xor
jne
scas
lods
and
sub
mov
add
or
mov
push
and
xor
stos
push
mov
rsm
pop
and
push
cmp
or
cmp
out
or
mov
movs
xor
test
sub
(bad)
jo
mul
sub
push
das
scas
ficomp
dec
push
add
sbb
add
sbb
(bad)
cld
sbb
and
push
add
jecxz
jle
pop
mov
iret
or
xor
dec
addr16
call
outs
data16
sub
cmps
push
outs
pop
nop
and
xor
ror
lea
xchg
adc
int
scas
push
pop
inc
xor
or
adc
in
sbb
mov
mov
pop
pand
xchg
pop
inc
call
mov
dec
xchg
lods
and
mov
dec
arpl
dec
ins
ins
add
push
dec
in
scas
shl
push
scas
jne
sbb
out
lds
sbb
loope
cmp
push
dec
fld
lock
jmp
popa
add
push
fs
ins
and
pcmpgtd
adc
addr16
ins
rol
dec
(bad)
and
in
jmp
mov
pop
adc
push
loop
cs
call
push
sub
dec
inc
or
jnp
mov
inc
retf
repz
sbb
pop
je
jp
and
mov
xor
movs
cli
fistp
jo
pop
fimul
mov
stos
or
pushf
jge
and
shr
pop
lea
jmp
push
jl
adc
gs
(bad)
lock
push
dec
or
cs
cmps
mov
movs
fist
add
jle
mov
ins
mov
pop
and
pop
fdivr
test
sub
adc
movs
xor
sub
add
pop
mov
ins
add
clc
sub
ja
inc
dec
clc
sbb
cmp
sbb
jo
add
xor
sub
cmp
or
loopne
cli
(bad)
retf
sub
mov
sbb
aas
ror
js
sub
or
push
addr16
push
adc
pop
sbb
jmp
push
mov
dec
or
xchg
loopne
les
sahf
in
sbb
push
inc
out
je
mov
inc
push
lea
xchg
pop
scas
add
imul
pop
adc
push
ret
iret
mov
and
mov
fsubr
test
adc
lea
inc
add
or
bound
stc
adc
(bad)
pop
fs
dec
je
sub
je
sub
inc
or
je
or
mov
or
cmp
adc
xor
add
shr
lods
push
jmp
mov
dec
jp
in
fwait
mov
jmp
mov
or
test
or
call
es
fdivr
mov
test
sbb
mov
xchg
enter
jle
sub
dec
mov
sub
scas
clc
or
fild
push
(bad)
movs
(bad)
jmp
inc
adc
pop
pop
pop
cmc
or
jne
ret
shl
nop
test
pop
push
imul
std
dec
mov
pop
retf
arpl
cwde
add
call
add
sbb
aad
std
dec
pop
dec
xchg
gs
push
jp
pop
mov
xor
sub
pop
inc
or
xchg
or
cmps
jge
mov
mov
dec
jb
dec
dec
cmp
jae
loop
jns
inc
hlt
sar
or
inc
xor
cli
(bad)
cs
daa
cmps
push
push
cs
jne
imul
xchg
fs
fcom
out
adc
mov
addr16
xchg
dec
ins
adc
je
mov
mov
hlt
pop
inc
out
or
aas
add
mov
and
add
add
pop
push
or
xor
je
push
imul
mov
js
push
adc
add
inc
xor
push
xor
(bad)
movs
push
jmp
cmp
sub
hlt
mov
js
jecxz
inc
mov
adc
push
sti
push
push
adc
fmul
mov
push
ss
inc
mov
pusha
stos
xchg
aam
bnd
push
push
mov
inc
mov
in
push
fsub
std
sub
jmp
pop
jno
jle
imul
mov
add
inc
dec
shl
test
mov
mov
xor
fisttp
jne
add
(bad)
xor
or
lods
add
xor
shl
fild
pop
pop
jle
inc
jo
and
jmp
ret
scas
inc
in
lock
jmp
lea
or
lock
push
cmc
mov
xchg
inc
js
add
add
jns
ffreep
arpl
arpl
push
(bad)
or
and
sahf
cdq
pop
xor
cwde
adc
dec
or
jo
ret
jnp
lock
jne
inc
test
pop
mov
jo
loopne
cmp
ret
dec
dec
test
clc
scas
or
adc
push
clc
adc
std
add
das
cmp
adc
sub
xor
add
adc
(bad)
pop
cld
add
outs
ret
or
jbe
fnsave
add
push
jne
or
push
aam
sub
loopne
sbb
std
aad
or
lea
inc
fild
or
(bad)
loopne
push
add
or
add
icebp
jmp
mov
ins
(bad)
test
push
or
mov
or
(bad)
sbb
dec
jp
mov
cmp
shl
ret
out
mov
mov
adc
jbe
(bad)
push
call
hlt
add
or
sub
adc
repnz
popf
int3
push
sbb
push
data16
mov
inc
dec
enter
pop
xchg
pop
pop
sbb
or
mov
inc
mov
pop
mov
and
(bad)
mov
or
add
xchg
(bad)
neg
inc
mov
adc
dec
or
inc
(bad)
neg
out
add
inc
in
or
pop
js
sub
mov
push
repz
in
sbb
inc
adc
xchg
mov
(bad)
shl
icebp
xor
fnstcw
inc
or
and
fwait
inc
mov
push
xchg
xchg
popf
inc
xor
add
int
cs
or
lock
xor
mov
mov
cmp
jbe
mov
pop
mov
dec
shl
and
inc
repz
sbb
inc
loope
ins
pusha
or
mov
add
cmp
gs
test
into
imul
add
popf
aam
jmp
add
mov
js
aad
fs
in
shl
sub
pop
int3
std
jecxz
xchg
ds
imul
push
pop
push
dec
mov
inc
and
(bad)
scas
cmp
pop
mov
or
xchg
popf
aam
pop
sbb
sbb
mov
push
out
jo
jne
mov
push
mov
sbb
sbb
xor
cmc
ret
inc
fsubr
test
xchg
or
in
push
jbe
adc
lds
outs
add
pop
dec
and
inc
inc
stos
push
push
fs
pop
dec
imul
fmul
sbb
adc
and
mov
jo
out
sbb
ins
add
call
sar
dec
mov
adc
adc
dec
xor
and
loopne
lds
xchg
mov
or
into
fcom
popf
add
es
jle
sub
inc
xlat
rcl
dec
inc
arpl
mov
xor
out
cmps
mov
adc
mov
rol
loopne
lfs
sub
iret
mov
or
jo
or
mov
push
adc
and
cld
or
test
xchg
lods
inc
mov
push
jbe
cmp
js
jle
push
and
dec
sbb
out
and
push
mov
pop
sub
retf
add
mov
fisubr
fist
or
sbb
xchg
loop
push
push
pop
outs
adc
adc
push
jo
pop
dec
or
cwde
int
xchg
out
inc
add
add
mov
sahf
mul
dec
jmp
ror
add
aam
(bad)
leave
xchg
lea
or
mov
sbb
popa
cmps
into
or
push
sub
lea
call
movs
sbb
inc
mov
sbb
dec
adc
das
sub
iret
cmp
aaa
lods
test
add
loop
xor
or
imul
fidiv
fld
add
je
adc
sbb
pop
push
adc
dec
adc
jne
adc
adc
inc
js
stc
push
inc
int3
inc
lock
mov
(bad)
or
sbb
jp
pop
and
and
and
jbe
aam
into
xchg
iret
(bad)
clc
and
mov
sbb
dec
cmp
cmp
push
lock
xchg
xchg
push
dec
mov
push
mov
sbb
daa
cmp
sbb
mov
fisub
push
outs
sbb
and
data16
(bad)
pop
(bad)
cwde
mov
inc
mov
sti
push
cmps
sbb
fcom
es
lock
add
adc
pop
jmp
sub
je
dec
add
xor
push
add
stos
dec
jge
jmp
xor
push
add
movs
add
dec
push
(bad)
retf
add
mov
pop
fld
out
jmp
shl
or
add
push
and
mov
sub
(bad)
loope
sub
and
adc
xor
fldl2t
mov
cmp
inc
cmp
out
cmp
or
mov
shl
scas
(bad)
sub
xor
cmp
imul
es
mov
mov
test
pop
aam
cwde
enter
adc
push
ror
jno
inc
xchg
add
pop
cmp
push
jo
lahf
jp
outs
mov
fadd
pusha
and
jmp
mov
outs
sub
movs
cdq
nop
dec
xor
or
inc
imul
lea
xor
add
xchg
mov
ja
ret
loope
add
cmp
shl
adc
mov
and
lea
out
xor
add
loope
push
fistp
test
jnp
add
fiadd
sbb
mov
imul
inc
sbb
ss
inc
mov
jne
cmp
movs
aaa
je
movntps
sub
fwait
or
or
adc
pop
adc
sbb
mov
mov
rcl
out
loopne
and
sub
jmp
je
mov
dec
stc
and
xor
(bad)
or
popa
mov
jbe
mov
push
push
into
inc
and
inc
popf
add
loope
rol
sub
cmp
mov
jmp
inc
push
xor
aas
inc
fidivr
test
je
ss
(bad)
(bad)
test
jns
jo
mov
cmp
mov
pop
sub
inc
mov
sbb
or
idiv
dec
mov
rcr
pop
xor
xor
or
cmps
sub
sub
pop
out
add
add
or
xchg
loopne
or
adc
and
test
sub
pop
dec
into
and
and
test
and
sbb
add
scas
inc
outs
das
adc
cli
ret
and
mov
loopne
and
add
mov
sub
in
mov
sbb
push
das
xor
inc
jg
imul
add
pop
mul
push
or
sub
mov
push
jle
mov
les
jne
shr
mov
nop
pop
and
mov
inc
sti
mov
popf
arpl
ins
push
add
or
xor
pop
inc
add
cld
test
addr16
cwde
fsub
les
inc
add
and
add
fsubr
dec
add
mov
les
stos
jne
pop
pop
aad
or
pop
sbb
jp
add
inc
adc
pop
xchg
cmp
adc
loopne
and
sub
mov
int
pushf
lock
and
lods
clc
dec
cmp
sub
push
add
cld
daa
leave
or
dec
stos
add
mov
and
(bad)
scas
or
add
cmps
jle
fbld
inc
test
jl
or
repnz
pusha
shl
sub
pop
nop
sbb
pop
cmp
dec
jo
cmps
cmc
push
imul
adc
ins
cs
dec
loope
push
xor
push
mov
dec
scas
sbb
(bad)
or
xor
mov
push
pop
add
popa
adc
std
(bad)
stos
pop
fadd
cwde
ror
jle
jo
adc
imul
icebp
ror
cdq
rol
add
sub
aam
add
(bad)
or
cmp
xor
sub
shl
(bad)
addr16
icebp
add
and
or
dec
imul
xor
mov
mov
mov
mov
push
fmul
pop
xchg
push
jb
ja
je
cmp
jg
nop
or
xor
add
mov
imul
gs
nop
adc
out
pop
push
js
inc
inc
mov
daa
jle
sbb
ret
push
in
loope
add
add
push
add
push
out
cmp
adc
and
sub
push
jb
ja
sar
clc
mov
add
scas
sub
mov
or
int3
push
sbb
push
retf
popf
or
xor
sub
push
add
movs
clc
aam
xor
lock
out
aaa
jbe
les
sub
jbe
fmulp
and
daa
xchg
jo
mov
push
xchg
(bad)
outs
sub
jne
inc
shl
in
cld
or
arpl
arpl
popa
(bad)
mov
adc
call
push
push
popa
push
cmp
test
aas
dec
imul
jae
pop
mov
ds
movs
and
pop
mov
je
add
pop
ds
imul
je
je
and
and
inc
ret
pop
and
and
push
js
jne
fadd
aas
and
ror
push
dec
xchg
pop
ret
dec
aam
inc
xchg
push
lea
mov
ret
and
mov
pop
jge
sbb
jmp
mov
adc
mov
push
sbb
xchg
mov
fisubr
jne
popf
jnp
aaa
jnp
and
pop
pusha
shr
cmp
pop
add
int
pop
jo
jmp
out
pmuludq
dec
xor
mov
bnd
mov
movs
add
jns
stc
int3
xchg
cs
call
ret
push
lahf
test
outs
xlat
pop
mov
mov
mov
xor
cli
dec
cmp
mov
(bad)
mov
and
xor
or
inc
sbb
dec
or
test
movs
(bad)
xchg
mov
stc
addr16
retf
test
fiadd
cld
cmovo
inc
movs
repz
lea
fisttp
mov
gs
fsubr
jne
add
arpl
div
mov
mov
jmp
mov
mov
mov
enter
ret
mov
ins
xor
fldenv
retf
add
(bad)
repnz
stos
fistp
xor
push
pop
jp
push
rcr
out
not
add
or
jbe
fsub
mov
inc
push
test
sbb
push
push
cmps
lock
movs
xchg
mov
adc
and
xchg
xor
push
jl
sub
xlat
cwde
xor
xlat
push
adc
push
push
fist
push
mov
into
jnp
ficom
push
inc
(bad)
mov
mov
push
xchg
adc
imul
jo
mov
add
xor
add
dec
or
xchg
iret
sub
jl
add
pop
and
xor
out
dec
js
or
fnstenv
aaa
int3
pop
add
and
lahf
or
ret
mov
inc
inc
(bad)
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
add
inc
inc
inc
cs
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
pop
inc
inc
inc
fs
push
sti
sub
movs
sbb
movs
mov
mov
sub
ret
lds
pop
arpl
xor
test
add
xchg
pop
movs
xchg
icebp
mov
add
test
pusha
movs
xor
xchg
mov
in
push
(bad)
enter
test
int3
push
movs
xor
aam
fmul
retf
cld
fcom
push
push
movs
jb
and
xor
nop
retf
dec
in
inc
sub
push
jo
sub
clc
mov
cld
mov
les
add
push
sbb
hlt
retf
add
add
adc
push
sbb
dec
gs
sub
dec
xchg
add
je
movs
xor
sub
xor
xor
sub
push
sbb
mov
gs
inc
loopne
and
cld
test
or
push
sub
and
adc
pop
je
sbb
test
inc
sub
push
test
xlat
xchg
inc
push
aaa
push
bound
or
cld
js
push
xor
or
push
xor
imul
and
sub
lea
or
mov
inc
sar
ret
add
aas
push
popa
jb
jbe
(bad)
and
js
imul
pop
inc
push
jb
adc
dec
imul
imul
pop
dec
arpl
jae
adc
xchg
fsubr
cs
lea
mov
jbe
mov
jns
jp
mov
outs
sub
pop
pop
pop
nop
mul
and
cmps
push
pop
dec
call
push
mov
psraw
imul
addr16
add
fcom
mov
adc
xor
(bad)
mov
cmps
mov
imul
dec
outs
push
rcr
nop
scas
cmp
mov
outs
popa
and
aam
in
imul
pop
mov
mov
in
pop
xchg
pop
push
or
fistp
jl
ret
test
ja
jo
cdq
dec
and
das
adc
mov
mov
xchg
jne
ins
outs
das
ret
(bad)
int
pop
fs
inc
mov
cmp
das
pop
or
mov
inc
outs
arpl
jmp
and
jge
pop
outs
mov
repz
jo
sbb
mov
cmps
or
add
nop
pop
inc
cmp
into
jp
les
push
data16
jp
add
enter
pop
dec
cmp
mov
pavgb
hlt
dec
inc
ja
pusha
mov
jne
outs
test
push
(bad)
ins
je
clc
fisttp
bound
mov
adc
ja
xlat
shl
push
push
jno
mov
test
push
test
out
jmp
popa
jns
loope
inc
cli
sbb
ins
adc
je
xchg
inc
push
stos
adc
call
es
out
or
nop
call
sbb
out
ret
jae
mov
in
test
jo
push
or
ss
add
mov
popa
sbb
ret
aam
sar
cmp
pop
sub
dec
push
movs
fidivr
test
inc
add
jbe
cld
aas
inc
mov
inc
add
enter
inc
add
inc
xchg
or
mov
les
xchg
and
add
sub
repz
pop
adc
sub
xor
in
pop
jl
pop
push
push
nop
clts
or
int
mov
inc
aam
loopne
adc
push
adc
ins
add
movs
sbb
into
add
mov
mov
inc
(bad)
clc
es
push
sub
xor
idiv
lods
ret
jecxz
inc
bound
push
pop
pop
sub
jbe
dec
je
add
or
xchg
in
jo
pop
fs
inc
cmp
nop
loope
test
push
add
pop
sbb
pop
push
sbb
adc
stos
cmp
mov
test
inc
fs
xchg
(bad)
pushf
add
pop
retf
pop
jb
add
or
cmp
in
mov
popa
clc
js
pop
inc
or
pmuludq
mov
movs
test
or
mov
(bad)
xchg
loopne
inc
sbb
adc
xchg
xor
aam
pop
sar
pop
adc
mov
into
cmp
push
push
mov
add
jo
fadd
scas
mov
mov
enter
cwde
cmp
cmp
inc
(bad)
jo
cmp
sub
jae
es
dec
or
jmp
mov
add
dec
(bad)
pop
popf
mov
dec
dec
fisttp
sahf
mov
shl
pop
bsr
movs
cpuid
mov
and
xor
mov
mov
push
pop
int
inc
sbb
sub
adc
test
loope
and
cmp
dec
push
sub
pusha
add
and
sbb
adc
out
jmp
cld
xchg
out
and
sbb
pop
sbb
stc
inc
push
add
out
dec
cmp
out
mov
and
dec
add
xor
sbb
jo
jo
in
sbb
xcrypt-ecb
cmps
dec
cmp
test
dec
paddusw
ror
push
mov
dec
xchg
cmp
and
fld
jbe
mov
mov
inc
sbb
(bad)
(bad)
and
loopne
stos
outs
leave
jl
and
adc
rcl
xor
mov
push
shr
lahf
inc
push
pop
repnz
pop
(bad)
push
pusha
fdivr
dec
inc
add
pop
inc
mov
daa
mov
or
in
mov
mov
cmp
push
inc
and
xchg
sbb
int
sar
or
inc
mov
dec
xchg
add
jle
cmp
mov
xchg
mov
cs
and
sub
call
xchg
clc
dec
clc
sub
or
mov
imul
or
mov
fs
sub
sub
int3
pop
repnz
add
xchg
js
mov
push
and
repnz
outs
push
out
outs
adc
enter
mov
pop
xor
jbe
ror
dec
mov
or
cmp
xor
or
pop
bnd
push
dec
xor
xor
loop
and
test
cs
cmp
mov
je
bound
mov
pushaw
sub
cdq
cs
push
or
add
in
inc
popa
int3
fwait
aas
add
or
arpl
ins
or
xchg
cli
inc
push
dec
outs
ret
xchg
ja
mov
or
mov
pusha
push
inc
inc
pop
push
xor
jo
ds
out
or
inc
or
shl
cwde
jle
pusha
ret
ja
mov
ja
mov
cmp
out
cmp
es
dec
ja
mov
aam
mov
jns
add
sahf
data16
cs
outs
push
mov
dec
test
mov
dec
jbe
push
les
jae
mov
push
rcl
push
enter
int
pop
mov
mov
out
(bad)
xor
test
ror
or
push
push
mov
push
nop
mov
mov
mov
inc
stc
push
xor
loopne
xchg
adc
div
lea
test
test
out
and
sub
push
mov
fwait
push
sub
or
cmp
inc
mov
sbb
dec
jbe
inc
xchg
dec
jno
daa
fadd
int3
inc
xchg
mov
adc
add
enter
sbb
inc
enter
push
or
test
mov
test
xchg
jl
xchg
imul
add
inc
jnp
adc
push
call
adc
imul
cld
lds
or
jp
xchg
pop
adc
outs
fst
xchg
xchg
or
dec
mov
dec
add
xchg
cmp
mov
pop
adc
in
les
pop
jo
xchg
pop
aas
pop
les
lds
cli
mov
arpl
and
imul
push
pop
mov
dec
fmul
sbb
les
mov
mov
add
in
aam
dec
lea
push
dec
sbb
ror
inc
leave
push
jb
push
pop
jb
mov
ja
and
pushf
or
and
enter
lock
jecxz
mov
mov
sub
fiadd
inc
mov
dec
mov
cld
ret
add
inc
scas
and
dec
popa
js
outs
addr16
inc
xor
jbe
inc
es
inc
dec
or
jecxz
setae
or
sub
bound
dec
js
sub
pop
adc
stos
fild
cmp
pop
jb
sub
push
mov
sub
or
jae
ja
imul
sub
push
xchg
inc
mov
dec
and
cmp
loop
cmp
sbb
das
jl
sbb
add
js
inc
lods
shr
test
adc
pop
xor
loop
xor
xchg
push
xchg
sbb
adc
push
xchg
xor
ss
xchg
stos
in
cmp
mov
ins
lock
lock
pop
std
repz
push
js
je
mov
int3
add
cmp
cmp
retf
pop
repnz
add
push
sahf
pop
enter
xchg
sbb
aas
add
in
sbb
push
jo
inc
push
or
nop
add
cs
sbb
inc
mov
inc
inc
in
inc
adc
push
sahf
push
push
pusha
add
cmps
rcr
ins
jecxz
or
aad
push
pop
js
add
pop
add
mov
out
add
add
sub
xor
sub
pushf
outs
push
faddp
loopne
xchg
test
into
clc
add
xor
sbb
add
xchg
fld
add
pop
mov
push
mov
push
fild
das
pop
in
inc
in
or
pop
pusha
nop
inc
nop
(bad)
jns
pop
stc
inc
add
je
inc
rol
mov
cs
adc
ja
dec
xchg
inc
push
pusha
cmps
pusha
movs
cmp
push
pop
xor
pop
(bad)
lods
xchg
adc
add
pop
mov
les
push
lods
dec
int3
aad
pop
in
push
loopne
inc
movs
xchg
inc
sbb
inc
and
xchg
inc
lods
xchg
add
leave
add
push
inc
nop
call
push
push
push
ss
lods
nop
jmp
add
mov
mov
cmps
push
add
jl
sti
call
push
inc
in
xchg
iret
idiv
or
inc
sbb
jnp
xchg
pop
mov
mov
mov
cmp
mov
mov
jmp
call
jle
fwait
xchg
fnstcw
push
mov
sbb
movs
sahf
inc
icebp
sahf
cmps
cld
test
frstor
push
mov
mov
fadd
sub
dec
sub
add
jmp
cmp
sbb
add
cmp
arpl
sbb
or
imul
sbb
pop
imul
adc
dec
xchg
push
ret
mov
ins
fidiv
mov
push
ins
push
aas
int
je
sub
push
loopne
push
inc
dec
test
sbb
sub
mov
inc
shl
and
je
inc
sbb
nop
stos
(bad)
sub
mov
pop
je
pop
xchg
mov
mov
mov
push
sahf
idiv
bound
lods
movs
mov
mov
mov
mov
ja
sub
nop
or
loopne
pushf
loop
cmp
pop
adc
pushf
push
test
push
addr16
ror
and
sub
dec
mov
gs
mov
mov
or
xchg
dec
(bad)
or
adc
lea
pop
popa
xor
leave
mov
movs
jecxz
and
dec
fcomp
adc
or
mov
outs
add
fcmovb
add
mov
sub
xor
push
mov
pop
cmp
sbb
mov
mov
xor
or
or
imul
inc
and
loopne
mov
ret
mov
push
adc
and
sar
fadd
loopne
loope
dec
dec
add
out
nop
int
mov
adc
push
or
daa
cmp
nop
or
add
cs
scas
sub
sbb
in
mov
movs
push
sbb
out
xor
xor
jmp
js
retf
cs
aas
pop
and
test
aaa
cmp
pop
and
or
test
push
dec
add
dec
push
cmp
daa
stos
in
pop
jo
jo
in
mov
xchg
inc
sub
popa
nop
stos
inc
mov
and
arpl
out
inc
enter
mov
enter
push
push
jne
and
push
dec
add
xchg
add
ds
popa
scas
mov
ds
dec
les
jns
les
push
std
inc
lock
push
call
pop
imul
jl
lock
xor
inc
push
repz
ins
push
les
inc
push
mov
adc
in
dec
nop
jl
jns
es
push
xor
fadd
sub
cli
adc
sbb
push
inc
adc
sbb
or
cmp
push
push
outs
(bad)
out
arpl
xor
out
dec
and
cmp
push
outs
mov
dec
loopne
inc
test
mov
xor
pop
mov
xlat
ins
out
pop
push
xchg
push
push
add
mov
or
sbb
mov
sbb
mov
ret
bound
sub
xchg
mov
pop
cmp
xor
pop
test
fisub
popa
inc
inc
and
add
mov
in
mov
and
mov
fs
pop
push
mov
inc
push
jmp
(bad)
call
cmp
idiv
mov
and
or
sbb
icebp
dec
push
aaa
and
ret
pop
or
pop
and
push
jno
aam
aad
daa
adc
mov
sub
push
mov
addr16
and
adc
dec
push
pop
or
add
dec
cs
xchg
fistp
bnd
sbb
sbb
ins
pop
test
add
sbb
mov
push
sbb
sub
dec
sub
stos
sbb
cmps
pop
shl
mov
inc
popf
jmp
jg
cs
and
add
xor
and
and
xchg
and
dec
es
sub
inc
xchg
test
in
sub
add
dec
scas
cs
add
add
xor
add
add
xor
jo
sub
xor
and
ss
push
jno
dec
cmp
sbb
cld
or
bound
enter
in
push
mov
retf
outs
xor
bound
jnp
aas
jbe
imul
or
push
xchg
push
pop
xchg
mov
in
and
mov
mov
out
lock
mov
outs
mov
push
not
leave
mov
mov
mov
in
sub
mov
mov
jne
inc
cmp
mov
scas
pop
mov
mov
enter
cmp
xor
pop
iret
les
and
cmp
cmp
wrmsr
outs
loop
inc
fisub
xchg
movs
xor
and
enter
push
adc
pop
unpcklps
loopne
out
ss
clc
mov
xor
(bad)
push
or
test
mov
adc
inc
mov
sub
xor
inc
add
jns
and
or
dec
dec
and
sbb
gs
mov
arpl
cmp
sbb
add
enter
and
mov
and
sub
and
in
mov
push
test
mov
dec
cs
sub
nop
mov
dec
scas
xchg
sub
cs
sub
xchg
xor
inc
xchg
ss
inc
push
inc
aaa
cmp
cmp
sbb
dec
pop
(bad)
cmp
jbe
cmp
dec
jl
xor
mov
mov
mov
adc
test
mov
dec
mov
retf
mov
sar
cmp
push
xor
lods
ret
inc
fwait
nop
xchg
and
retf
sar
sbb
push
sub
call
or
push
loope
dec
cs
loope
test
adc
adc
and
add
stos
fs
sbb
inc
cmp
push
test
(bad)
loope
aam
enter
sub
push
test
and
and
and
mov
cmps
xchg
mov
xor
dec
xor
add
xor
ss
nop
test
add
nop
add
adc
mov
data16
add
test
dec
fstp
xchg
inc
aam
dec
jge
loopne
xchg
stc
repnz
inc
test
and
xchg
inc
test
les
push
sbb
lahf
pop
xor
cld
(bad)
sub
add
add
add
push
or
push
mov
add
hlt
shr
jle
mov
mov
pop
push
in
or
retf
jle
not
and
jmp
popf
and
clts
or
jecxz
(bad)
cmps
push
movs
xor
add
push
outs
add
test
sbb
mov
dec
sbb
push
es
jno
sub
cmp
and
dec
jne
or
or
push
mov
jmp
xchg
sub
out
cdq
push
shr
sbb
inc
push
dec
in
stc
fnstsw
out
movzx
js
dec
lahf
imul
fucom
or
and
jae
int
xor
in
pop
mov
ret
imul
in
movs
xchg
or
ret
or
inc
das
push
jnp
cmp
aam
lock
pop
add
in
push
mov
loop
inc
push
sbb
xor
and
test
cmp
mov
call
sub
dec
lds
shl
dec
or
xchg
mov
rol
add
dec
outs
xchg
test
xor
pusha
fld
mov
mov
push
xor
inc
push
fcom
jmp
aad
adc
dec
xchg
inc
in
add
adc
sub
in
nop
xor
jl
popf
push
scas
add
add
or
mov
jnp
jo
adc
scas
sub
scas
pop
ret
jle
mov
(bad)
imul
out
adc
jbe
mov
aas
mov
cmp
add
cmp
nop
fiadd
imul
xor
push
sahf
sub
js
push
xchg
add
mov
iret
or
add
adc
lds
sub
pusha
sbb
das
adc
pusha
mov
xchg
sub
retf
inc
arpl
sub
xchg
fisttp
add
fsubr
daa
pop
cmp
and
in
push
fwait
xor
rcr
add
in
ret
push
mov
add
push
sub
or
xchg
movs
inc
add
leave
outs
xor
nop
adc
cs
jnp
inc
movs
push
fsqrt
pop
(bad)
leave
cli
aam
out
(bad)
ror
sahf
jge
sbb
or
dec
or
repnz
shl
adc
or
adc
mov
xchg
cmps
je
mov
jbe
push
adc
rcr
por
xor
fnstsw
nop
daa
je
mov
inc
and
pop
push
jp
rol
mov
xor
mov
gs
or
nop
xchg
xchg
and
mov
and
or
dec
pop
retf
or
fidiv
or
mov
cmp
mov
test
clc
in
jle
cmp
jnp
adc
push
lahf
cld
cmp
ret
repz
cmp
rol
mov
ret
mov
cmc
and
fst
scas
ror
cmp
(bad)
mov
test
mov
jl
push
lahf
je
leave
adc
loope
adc
and
push
pushf
push
inc
movs
(bad)
adc
fwait
ins
jge
dec
jo
mov
sub
rcr
add
or
rcr
dec
jo
sbb
jg
xchg
les
sub
and
bound
or
fucomi
xor
jle
mov
mov
jbe
add
inc
adc
push
add
jg
ret
add
push
cli
cs
and
fisubr
pop
fidivr
adc
pop
mov
movs
out
mov
pmullw
into
mov
xchg
push
sub
xor
movs
pop
cld
jnp
inc
(bad)
outs
pop
(bad)
enter
ret
es
pop
jmp
jle
idiv
mov
xor
or
(bad)
(bad)
fcomp
nop
mov
jbe
xchg
or
jge
sahf
pop
jne
sbb
mov
(bad)
shl
daa
xchg
jne
xchg
xchg
call
push
mov
mov
mov
ror
xor
and
xlat
sbb
mov
daa
lods
sub
mov
(bad)
aas
sbb
and
add
loope
pop
cmp
add
cmp
setnp
push
jb
sbb
not
mov
xor
add
dec
push
and
js
push
xor
pop
sahf
add
add
sub
stos
push
push
add
fidiv
xor
inc
jnp
mov
sub
cmp
ins
mov
push
in
push
push
leave
(bad)
in
je
mov
xchg
sbb
outs
aas
loopne
or
mov
pop
fdiv
add
inc
pop
mov
pushf
push
pop
push
mov
ja
add
in
push
or
clc
jg
dec
mov
and
out
jo
push
mov
addr16
dec
sbb
xor
pusha
add
movs
fcom
repnz
fsubr
push
push
dec
cld
in
dec
sub
inc
rcl
pop
add
push
retf
les
inc
aas
mov
pop
inc
pop
mov
sub
sbb
test
pop
into
fcomp
rol
clc
adc
jo
add
repnz
cmp
mov
fs
test
mov
mov
fs
mov
sbb
mov
inc
adc
jne
and
loopne
or
dec
push
inc
push
into
iret
and
je
add
xchg
sbb
or
test
je
cld
mov
adc
shl
test
pop
aam
inc
push
mov
js
shr
int
jmp
inc
add
scas
ror
sbb
pop
add
enter
mov
test
xor
add
sbb
pop
nop
inc
adc
adc
nop
mov
ja
or
mov
aas
cmp
nop
xor
add
pusha
add
clc
mov
xor
add
loop
dec
pop
lahf
or
ja
mov
sbb
sub
aad
dec
gs
jo
ja
push
add
adc
cmp
inc
push
mov
and
daa
(bad)
sub
add
nop
clc
or
inc
cmps
xchg
sbb
push
sbb
cmp
jl
cmp
cmp
mov
movs
call
mov
pop
xchg
add
data16
mov
ret
mov
ret
add
sti
add
ret
adc
rcl
cmp
aas
add
test
(bad)
xlat
test
cld
mov
cmp
or
call
cmp
call
mov
jge
dec
bound
pop
cwde
push
fsubr
out
adc
pop
lock
sub
lds
adc
movs
test
inc
add
rcl
(bad)
push
pop
shl
ja
cmps
xchg
add
(bad)
sbb
gs
jo
test
ror
ins
pop
pop
aaa
and
xor
cmp
sbb
add
mov
mov
push
adc
or
js
cmps
jns
pop
adc
or
outs
in
dec
(bad)
fsub
bound
adc
sbb
iret
test
mov
mov
adc
rcl
imul
add
sub
inc
xor
push
stos
cmps
pusha
neg
xor
sahf
push
push
std
or
or
and
rol
ins
xlat
into
push
rol
xor
sbb
jecxz
imul
push
and
push
dec
dec
lods
sub
pop
pop
bound
ror
test
xor
inc
(bad)
xchg
das
xchg
es
out
and
ins
sahf
xchg
dec
das
shl
movs
inc
fs
or
cmp
movs
shl
(bad)
dec
inc
cmps
xor
daa
dec
mov
in
jmp
dec
out
mov
dec
lods
xor
sbb
lods
ret
inc
dec
in
or
inc
cli
or
lds
inc
loop
add
cmc
add
xchg
fst
inc
lea
das
and
or
and
mov
loopne
pop
lahf
or
xor
dec
mov
inc
cmps
xchg
retf
and
enter
push
or
pushf
xchg
in
addr16
inc
mov
ret
inc
cmp
cdq
ret
ret
ret
ret
cmp
clc
xor
pop
fs
mov
jnp
mov
adc
push
mov
mov
jo
mov
pop
pop
xchg
aaa
test
call
inc
add
add
std
popa
repz
xchg
out
inc
(bad)
ror
pop
sub
add
cmc
xchg
xchg
dec
call
jl
push
repz
stc
xor
sub
rol
pusha
adc
xchg
ja
push
adc
mov
ror
xchg
push
dec
push
jecxz
les
neg
pop
cmp
dec
jge
adc
sbb
jnp
add
movs
push
and
scas
inc
mov
cld
loope
rcr
sub
in
out
and
inc
and
pop
pop
or
xor
sub
inc
mov
cmps
push
mov
mov
xor
repnz
sti
jnp
or
(bad)
hlt
nop
cmp
test
xchg
cmp
clc
pop
add
fs
pop
mov
or
xchg
nop
lea
mov
test
das
adc
cmp
test
mov
cwde
lock
ret
inc
fbld
mov
and
inc
cmps
ds
jne
cmp
aas
lock
mov
cmps
cmp
ja
inc
daa
js
xchg
push
cmp
es
cmp
pop
push
inc
pop
and
push
or
xchg
dec
jl
dec
pushf
ret
sbb
mov
mov
cmp
call
add
dec
xchg
sub
ret
jnp
add
and
test
sti
cmps
or
xchg
test
dec
adc
jo
ja
adc
pop
je
jmp
popa
leave
jmp
mov
aam
lock
or
jmp
and
adc
movs
imul
push
mov
mov
mov
xor
xlat
mov
es
hlt
lods
add
add
xor
xchg
sbb
sub
mov
mov
sbb
cmp
mov
sub
sar
mov
add
mov
nop
sub
jecxz
add
add
sti
sub
mov
mov
movs
mov
adc
and
or
sbb
add
mov
aaa
imul
push
and
mov
mov
xchg
push
shl
imul
imul
mov
xor
cli
jnp
dec
stc
sahf
out
inc
push
iret
pop
lahf
xchg
hlt
add
fsubr
shl
nop
stos
push
jmp
jp
retf
mov
cld
adc
push
repnz
adc
adc
cwde
fisttp
or
push
add
test
or
ds
adc
clc
or
sub
push
ret
and
imul
add
imul
popa
sbb
cmp
fcmovnbe
clc
or
cmp
jmp
js
fs
pop
xor
out
push
xchg
adc
mov
or
lods
std
or
sar
ins
aad
clc
add
jne
dec
cmp
icebp
dec
test
loope
pushf
scas
xchg
push
push
or
sub
repz
repz
mov
adc
std
fsub
rcl
jb
xor
mov
jg
jnp
inc
inc
add
sbb
cmp
xor
and
loope
and
jne
add
jle
jne
cmp
sbb
xchg
sub
(bad)
shl
dec
push
push
push
xchg
out
inc
adc
leave
or
pushf
inc
xchg
clc
lock
add
and
inc
int3
out
jns
jnp
neg
loope
add
adc
push
das
in
mov
pop
mov
adc
lock
rcr
imul
and
or
xor
cmp
push
popf
dec
fadd
mov
scas
sub
jne
mov
push
and
out
fsubp
loopne
dec
sbb
adc
adc
lods
sub
sti
cdq
std
fwait
mov
popa
jo
adc
les
bound
movs
adc
mov
mov
lea
sbb
cmps
lds
popf
in
dec
fwait
ins
push
call
rcr
pop
sub
mov
enter
push
sbb
test
sub
inc
and
outs
sbb
in
push
ret
push
xor
inc
jb
sbb
lock
mov
mov
movups
aam
shl
retf
jo
jmp
idiv
retf
mov
sbb
pop
bound
loope
sub
js
mov
jnp
push
mov
cwde
adc
adc
xchg
cmp
(bad)
ja
retf
cmp
and
adc
jl
sbb
sub
inc
pushf
fcom
les
jmp
fdivr
cmps
lea
pop
loope
jp
xor
mov
xchg
movs
sahf
lahf
adc
test
outs
pop
(bad)
ds
mov
inc
jo
loope
test
leave
dec
xchg
add
xor
das
sbb
int3
in
lahf
movs
push
pop
inc
stos
imul
xchg
ror
(bad)
mov
or
retf
es
mov
mov
bound
push
push
pop
(bad)
jae
jnp
nop
scas
or
inc
mov
add
add
cld
push
cmp
(bad)
pop
cmps
xlat
movs
inc
and
jp
int
imul
lods
mov
rdtsc
pop
mov
das
pop
sbb
push
cmp
mov
cmp
xor
inc
cmp
push
pop
sub
loopne
stc
mov
mov
(bad)
xor
xchg
add
xor
out
mov
sbb
dec
call
fadd
pop
xchg
xchg
mov
pushf
js
cmp
ds
xor
loopne
mov
pop
xor
cmp
outs
dec
add
xchg
dec
add
ret
add
sbb
xor
(bad)
ret
test
inc
add
add
into
mov
in
in
fsub
push
inc
dec
add
inc
inc
xchg
cmps
xor
xchg
sub
push
inc
push
mov
shr
pop
(bad)
cmp
shl
xlat
jb
stos
xchg
and
xchg
xchg
pop
les
and
aam
imul
fwait
add
inc
pushf
cdq
mov
scas
sub
cmp
dec
add
imul
hlt
push
aaa
repz
and
outs
or
xchg
leave
or
aad
adc
test
je
cmps
bound
int3
fdiv
sbb
in
mov
loopne
shl
imul
jo
pop
loopne
cmps
lods
jecxz
and
cwde
inc
xor
push
pop
imul
push
test
fs
or
add
call
(bad)
and
push
xlat
movs
ins
lea
das
dec
push
inc
lock
cmp
seta
push
push
mov
outs
pop
mov
stc
lods
cld
data16
movs
jg
xor
mov
adc
pop
dec
hlt
sub
push
into
ja
enter
push
rol
lea
mov
xchg
mov
shl
or
mov
cwde
mov
lods
movs
adc
mov
push
jle
test
dec
mov
mov
push
add
jg
mov
dec
xor
inc
(bad)
adc
aad
xor
pusha
in
lahf
add
jle
cmp
sbb
or
dec
fs
mov
xor
inc
clc
inc
push
push
or
cdq
inc
pop
or
mov
xchg
add
fst
and
call
pop
cmp
mov
enter
jno
arpl
sbb
movs
pop
hlt
jne
retf
cmp
lds
pop
icebp
repnz
pop
dec
hlt
ret
mov
ret
push
mov
test
push
ds
cdq
cdq
aam
rcr
dec
mov
add
and
mov
mov
outs
repnz
inc
pop
or
hlt
sbb
mov
fisubr
and
pop
shr
cmp
arpl
aaa
push
sub
cmp
mov
jae
arpl
push
imul
aaa
push
add
stos
push
lods
cmp
aaa
dec
sti
loope
pop
imul
cmp
inc
inc
les
mov
imul
fdiv
cdq
dec
rcr
aam
sbb
cmp
movs
pop
push
pushf
xor
mov
stos
movs
dec
test
test
in
adc
cdq
cwde
push
stos
mov
adc
add
outs
pop
test
xchg
test
nop
mov
push
push
jbe
push
pop
enter
gs
(bad)
in
paddusb
jle
pop
loop
call
pop
push
fmul
faddp
jecxz
(bad)
xor
inc
dec
aaa
pushf
rcl
push
(bad)
setne
ja
add
inc
std
clc
mov
sbb
test
and
inc
mov
add
ret
add
xchg
or
in
mov
sahf
inc
cmp
ds
xchg
and
inc
or
and
out
adc
call
cmp
push
arpl
loopne
xchg
clc
pusha
retf
popf
aad
pop
push
sub
shl
jo
and
push
ins
jmp
clc
xchg
test
adc
std
xchg
inc
or
aas
ret
adc
and
stos
inc
xchg
(bad)
ror
and
xchg
mov
push
pop
out
jnp
dec
mov
rcl
out
or
into
iret
les
loopne
loopne
pop
(bad)
test
push
push
or
int3
xchg
movs
and
pop
sub
jl
not
cs
cwde
lahf
push
adc
or
int
jl
imul
push
fild
adc
dec
sbb
add
add
loopne
test
imul
mov
cmps
fcom
xchg
ret
je
pushf
or
or
xor
dec
fdivr
or
adc
pop
cmp
dec
int3
pop
xchg
xadd
sub
adc
das
mov
push
lds
jne
push
add
add
push
dec
sub
and
adc
repnz
pop
add
fild
sbb
or
cmp
push
or
sti
mov
imul
cmps
mov
out
jb
daa
stc
and
add
lock
paddusw
mov
fisttp
jl
(bad)
fmul
push
xlat
jg
adc
cwde
dec
push
adc
add
cmp
and
cmp
scas
ffreep
inc
outs
xor
cmp
pop
cdq
jo
sub
je
push
xor
das
mov
fcomip
sbb
mov
jno
adc
sbb
pop
cmps
test
push
fsub
or
pop
inc
push
lods
adc
or
xchg
aam
test
jne
pop
add
add
or
test
in
je
or
sti
add
sar
scas
data16
cmp
ja
aaa
mov
add
dec
sbb
out
cmp
mov
xchg
inc
mov
test
das
xchg
cld
sbb
jle
pop
lods
pop
movs
push
sti
xor
mov
push
hlt
xor
cmp
jb
movs
retf
sbb
not
aam
repnz
jmp
xor
pop
mov
xchg
iret
cmp
cmp
rcl
sbb
jmp
pop
mov
xor
push
xor
fsubr
movs
or
lods
adc
inc
pop
cmp
dec
add
sub
out
push
jle
mov
add
lods
jbe
rcr
push
jmp
jge
int
push
and
mov
ret
das
adc
mov
aas
pop
add
xchg
ror
idiv
adc
mov
out
mov
adc
pop
cmp
pop
loope
xor
jae
in
and
adc
sbb
pop
sub
mov
push
mov
sub
inc
dec
mov
sbb
mov
pop
sbb
mov
mov
xchg
xchg
push
pop
out
sti
lock
sub
cmp
cmp
jecxz
xor
icebp
int
out
imul
mov
dec
dec
add
daa
mov
push
je
mov
test
xlat
push
push
lds
and
mov
jmp
(bad)
loopne
pop
add
(bad)
mov
push
aas
push
pop
jns
cld
or
mov
outs
dec
test
inc
and
ins
adc
loope
xchg
mov
lock
xchg
jae
sub
daa
pop
cmp
out
fidiv
mov
cmp
cmp
push
sub
dec
add
ror
mov
call
pop
fcomp
adc
dec
test
add
mov
ins
cmps
pop
mov
add
retf
add
sar
pop
inc
push
push
push
dec
dec
out
lock
push
inc
mov
mov
cmp
jmp
fisttp
jg
or
mov
sbb
pushf
pop
ss
mov
or
push
cmp
jne
ror
aas
je
xor
mov
lods
add
cwde
mov
inc
add
mov
and
and
enter
arpl
cmp
or
xor
nop
gs
xor
enter
(bad)
in
dec
test
les
xchg
sub
jp
mov
cs
sub
inc
cmps
inc
push
int
add
jno
aas
jne
dec
fwait
push
mov
test
sub
pop
loopne
jo
or
mov
or
ret
nop
stos
push
add
nop
jle
xchg
sub
push
(bad)
pop
or
popa
enter
leave
mov
mov
or
pop
icebp
push
sub
sahf
push
or
mov
xchg
mov
and
cmp
nop
pop
fcom
(bad)
or
or
mov
addr16
add
lods
push
js
lahf
pop
mov
xor
(bad)
out
adc
mov
mov
pop
or
lea
mov
xor
or
ret
ja
mov
or
gs
add
cmc
jo
loope
outs
(bad)
fs
scas
pop
add
inc
jecxz
sbb
add
pop
mov
ds
jl
jecxz
inc
ins
aam
or
sti
cmp
loope
pop
lock
je
dec
imul
cs
xor
mov
mov
add
lods
aad
or
or
shl
repnz
jne
pop
ss
adc
pop
cmp
arpl
mov
sbb
das
and
lods
mov
adc
xchg
daa
mov
retf
push
movs
imul
or
cmps
ja
mov
xchg
add
pop
sbb
or
aas
cdq
mov
and
or
aam
mov
mov
push
jb
adc
ins
lods
ret
pop
fsubr
ins
xchg
pop
movs
movs
out
pmuludq
adc
adc
das
imul
aam
mov
adc
test
jns
dec
data16
inc
or
push
outs
jb
bound
out
xor
popa
jo
or
ficom
pop
daa
push
aaa
test
repnz
call
inc
or
inc
cmps
xor
aas
aam
cmp
adc
add
cmp
je
repnz
push
inc
sbb
leave
inc
(bad)
data16
shr
mov
cwde
inc
inc
das
inc
xchg
in
sbb
mov
jns
xchg
mov
dec
pop
daa
mov
or
add
call
adc
push
movs
imul
das
xchg
adc
pop
out
xor
cdq
adc
xchg
or
xlat
cmp
fwait
mov
ss
push
stos
repz
cmp
aam
add
test
inc
fsub
mov
mov
aaa
adc
in
ss
enter
add
or
or
dec
mov
jle
not
sub
popa
cmp
add
stos
add
aad
inc
dec
fldcw
sbb
nop
shl
mov
add
test
add
push
jge
movs
cmp
and
and
das
cmp
pusha
mov
cmps
jle
mov
and
add
mov
pusha
mov
scas
cmps
xor
div
retf
cld
add
mov
inc
cs
pop
push
pop
or
xlat
adc
and
rol
push
test
pop
add
and
push
and
mov
rol
sar
inc
pusha
xchg
ja
mov
stc
mov
rol
sbb
xor
pop
pop
xchg
arpl
xchg
sbb
jecxz
enter
add
(bad)
in
in
retf
outs
daa
jge
inc
scas
aam
jnp
les
data16
push
and
shl
jl
popf
xchg
ret
lods
ss
into
fwait
lahf
or
jl
add
and
js
cmp
sar
fild
mov
mov
hlt
or
xchg
add
cmps
shl
cmp
xor
inc
cwde
xchg
(bad)
cmp
jo
jge
popf
push
adc
dec
jmp
jge
add
sub
out
inc
adc
add
ret
inc
mov
push
sub
or
jmp
mov
or
adc
outs
sub
in
ficom
push
mov
pop
and
pop
(bad)
(bad)
das
mov
cmp
scas
mov
add
test
nop
jmp
repnz
aaa
(bad)
jne
mov
adc
push
lahf
inc
dec
push
sbb
ss
jecxz
cdq
push
or
dec
mov
sbb
pop
stos
xchg
jg
xchg
jbe
mov
inc
dec
(bad)
ret
lock
mov
pop
pop
xchg
cdq
jmp
mov
and
in
ja
xor
jge
call
dec
outs
cmp
push
lods
mov
enter
cs
fmul
inc
stc
pusha
jbe
mov
mov
add
pop
jno
sub
mov
mov
or
out
into
arpl
push
push
push
dec
sub
enter
jmp
call
cmps
fcos
mov
mov
ffreep
cmps
fsubr
mov
pop
jp
lods
mov
or
and
add
loope
pushf
aaa
(bad)
aas
inc
xchg
or
call
jmp
mov
test
push
push
xchg
sub
pop
push
pop
push
cwde
inc
loopne
mov
add
mov
mov
sbb
iret
mov
ret
cwde
xor
mov
xchg
(bad)
hlt
pop
inc
cmps
and
pusha
and
mov
xor
dec
sbb
jg
inc
fmul
sysret
or
pop
dec
mov
or
jne
and
ret
mov
and
rcl
add
fsub
dec
sub
or
rol
enter
push
jae
or
sub
and
imul
rcl
clc
xchg
dec
loopne
mov
gs
rol
inc
push
jmp
sub
cwde
push
pop
xor
mov
add
or
pop
cs
gs
or
ror
jecxz
fsub
push
test
cmp
jne
add
pusha
bound
into
and
ss
out
mov
push
cmp
je
adc
sbb
adc
jo
pop
lahf
sbb
mov
xor
enter
mov
aaa
fild
xor
jmp
push
adc
(bad)
loopne
fild
sub
or
adc
loop
(bad)
in
xor
pop
adc
daa
mov
fcomp
ja
rcl
aad
xchg
jmp
loop
mov
sbb
pop
popf
test
call
repz
not
int3
sbb
push
fwait
test
cmp
popa
cmps
movs
adc
dec
es
push
daa
jmp
dec
(bad)
dec
mov
inc
mov
rcl
inc
fdivr
xor
or
or
outs
bnd
mov
movs
mov
(bad)
inc
ins
cmp
or
inc
lahf
leave
jb
sub
outs
sbb
ret
cmp
pop
cmp
adc
outs
shl
sbb
xchg
sub
loopne
scas
pop
or
fld
imul
jns
test
daa
mov
push
or
test
or
or
mov
test
loopne
push
add
cmc
inc
or
dec
push
bound
sbb
inc
dec
or
push
aaa
dec
popa
or
jnp
js
scas
inc
ins
clc
aaa
fcmovnb
push
in
dec
ins
fs
lahf
nop
pop
jae
or
jns
or
inc
and
or
push
xor
xor
inc
inc
gs
adc
outs
je
jno
and
push
gs
je
ins
ss
enter
cmova
jae
mov
or
xor
shl
and
scas
lods
pop
(bad)
push
popa
jo
jns
enter
mov
ss
(bad)
popa
push
stc
iret
dec
add
and
rcl
jb
jne
ins
inc
(bad)
and
outs
fs
jp
jb
sbb
scas
arpl
sub
xchg
or
outs
iret
loopne
add
dec
gs
lock
and
pop
adc
cmp
mov
aaa
or
add
imul
mov
adc
push
jne
vpmacsswd
push
popa
mov
xchg
(bad)
sbb
clc
pop
inc
popa
jb
dec
jb
jg
inc
mov
inc
mov
sbb
dec
mov
adc
push
push
popa
mov
dec
adc
dec
ins
push
or
iret
add
inc
or
mov
call
ins
jae
push
sbb
ja
xor
test
pop
mov
popa
call
pop
mov
push
xlat
nop
or
jno
xchg
push
jge
inc
bound
pop
das
inc
imul
jb
out
in
mov
add
push
push
push
xchg
ds
gs
scas
xlat
pop
mov
xor
int3
rcl
mov
cmp
cmp
mov
push
add
jge
cmp
inc
mov
out
test
fidiv
sub
ret
ficom
jno
pop
daa
cmp
ins
shr
pop
fist
push
fisttp
popa
imul
ins
sbb
ins
or
mov
mov
add
dec
rol
ret
push
out
das
adc
push
nop
fnstcw
adc
mov
lds
xchg
test
push
aaa
iret
adc
sub
addr16
inc
xchg
scas
dec
imul
mov
push
jo
imul
inc
mov
adc
xchg
test
cmp
ret
jne
xchg
jae
test
push
dec
jg
xor
pop
push
bound
adc
push
xlat
test
repnz
xchg
adc
scas
add
or
outs
invd
push
nop
nop
adc
aaa
add
mov
fisttp
aas
sbb
pop
scas
adc
mov
push
mov
js
cmp
outs
bound
imul
sbb
popa
sub
dec
nop
pop
add
(bad)
mov
(bad)
call
aam
jae
jl
pop
(bad)
out
inc
outs
fs
sub
mov
lods
push
sub
outs
stos
or
push
imul
or
aaa
or
mov
xor
xchg
mov
mov
imul
inc
add
mov
movntps
push
push
mov
xor
pop
daa
push
mov
jbe
cmps
(bad)
in
pusha
mov
sub
cmp
pusha
mov
push
outs
test
cmp
add
loope
inc
mov
mov
sbb
rol
and
push
dec
das
(bad)
cld
cmp
ins
outs
imul
sub
(bad)
mov
inc
imul
adc
jns
gs
aaa
mov
mov
aaa
addr16
mov
xchg
stos
stos
add
xchg
bound
or
into
aam
inc
inc
inc
and
jns
add
cli
or
or
fs
in
pop
or
adc
pop
clc
nop
and
pushf
jecxz
cmps
popf
(bad)
cmp
movzx
or
and
clc
sbb
jge
(bad)
dec
jb
pop
ror
out
or
leave
mov
shr
stos
and
add
dec
add
or
add
stc
and
inc
push
push
sbb
popa
outs
add
fstp
fwait
push
jmp
cdq
nop
jle
rcr
inc
rcr
sub
adc
bound
xor
pop
fidiv
call
ins
mov
and
push
xor
and
or
fcmovnbe
cmp
(bad)
xor
sbb
jmp
mov
retf
xor
in
faddp
sbb
stc
(bad)
loopne
jmp
dec
fld
neg
pop
daa
addr16
in
xchg
add
sub
iret
mov
push
fstp
rcr
mov
mov
pop
inc
fmul
fld
add
sar
nop
(bad)
fsubrp
scas
cmp
mov
adc
shr
and
ja
pusha
es
popf
fst
jae
sbb
dec
mov
adc
and
das
cld
dec
sbb
outs
jns
dec
or
adc
and
xor
and
cmps
popf
leavew
sbb
push
jg
ficom
push
inc
call
pusha
aam
lock
bswap
xor
cmps
stos
or
fisttp
fild
daa
fisttp
fwait
aaa
adc
and
sbb
add
sbb
dec
jp
cmp
xchg
sbb
imul
push
mov
call
xchg
gs
fs
and
mov
fstp
fmulp
mov
js
dec
ret
mov
(bad)
ja
add
fild
and
push
dec
lock
lea
or
dec
out
sub
outs
push
or
xchg
push
fs
mov
retf
sub
cwde
sub
add
push
les
or
ror
in
pop
pop
push
or
adc
gs
ins
frstor
int
outs
mul
xor
sub
leave
add
or
aas
or
mov
add
sub
fld
enter
sti
mov
ret
xor
ret
ds
or
pop
add
lahf
fcom
shl
or
popa
nop
mov
mov
test
xor
add
mov
inc
push
adc
and
cwde
adc
pop
retf
dec
adc
cmp
fidiv
sub
adc
and
outs
sbb
shl
cmps
sub
inc
shl
lock
cmps
adc
cwde
ss
mov
mov
sbb
mov
repz
cmp
mov
rcl
mov
lea
(bad)
adc
jbe
dec
pop
add
push
dec
retf
xlat
or
jg
push
clc
scas
mov
in
gs
(bad)
sub
xchg
and
sbb
clc
add
xor
into
mov
add
cmp
jne
mov
out
pop
mov
nop
xchg
sar
out
dec
pop
mov
cmp
sbb
adc
and
or
cmp
sub
lea
stc
ss
scas
pop
popf
cmps
dec
inc
jno
lods
xlat
sar
adc
lods
sub
loope
outs
pusha
test
xor
inc
inc
loop
mov
jb
dec
aam
imul
inc
mov
xchg
inc
jmp
(bad)
aam
push
mov
imul
sbb
iret
sbb
enter
cmp
dec
ss
push
adc
les
mov
sbb
clc
push
ret
mov
adc
dec
cwde
or
loop
(bad)
push
push
cmp
mov
sbb
fs
mov
add
in
or
jb
sub
enter
shl
(bad)
repz
inc
out
repnz
add
mov
lods
add
xchg
rcr
rol
push
xor
adc
and
pop
stc
mov
jmp
inc
test
nop
adc
push
xor
mov
jmp
mov
mov
and
or
jo
clc
call
or
cmp
jp
adc
push
test
gs
(bad)
push
dec
fbstp
or
inc
cwde
or
arpl
pusha
and
push
dec
pushf
adc
adc
adc
das
add
les
sbb
inc
pop
test
(bad)
pusha
aaa
inc
add
inc
js
add
and
add
inc
pop
mov
add
cld
sub
push
scas
dec
cmp
pop
pop
shld
pop
daa
add
stos
fld
sub
add
or
cwde
inc
in
sub
xchg
stos
in
cmps
adc
add
dec
mov
adc
add
or
adc
repnz
cwde
cwde
push
enter
pop
(bad)
mov
popa
dec
add
and
add
inc
scas
dec
sub
or
leave
push
mov
xchg
dec
and
and
pop
out
push
inc
push
inc
and
push
inc
push
inc
and
add
sbb
rcr
push
xchg
and
shl
lahf
(bad)
(bad)
aaa
sub
mov
or
shl
repnz
sub
pop
xchg
dec
pop
stos
dec
pop
push
mov
inc
adc
sbb
push
push
jns
adc
push
jb
adc
nop
or
adc
add
fist
add
adc
test
and
xor
sbb
in
fs
sbb
and
leave
and
and
or
and
sbb
sbb
es
nop
add
lds
xchg
and
add
retf
jmp
jne
add
popa
or
xchg
clc
xor
bound
or
mov
jae
dec
or
pop
(bad)
ja
jns
iret
push
cwde
add
rol
in
mul
or
adc
or
pop
addr16
pop
adc
jne
scas
pop
fiadd
mov
add
lock
test
pushf
inc
sub
enter
add
sbb
lea
stos
in
(bad)
or
mov
mov
or
adc
cdq
adc
sbb
and
inc
adc
or
and
add
and
adc
sbb
out
pop
mov
loopne
imul
push
test
inc
add
cmps
call
pop
bound
add
(bad)
mov
push
nop
test
push
das
xor
pop
sbb
push
xchg
sahf
inc
xchg
mov
lods
ret
(bad)
xchg
out
xor
mov
add
aas
movs
xlat
xchg
movs
push
add
test
mov
mov
and
pusha
loope
ins
xchg
repnz
inc
pop
nop
xchg
pop
inc
enter
jns
inc
test
inc
sub
xchg
pushf
or
add
fistp
pop
add
mov
jle
mov
mov
(bad)
mov
retf
sahf
adc
push
and
or
out
xchg
outs
mov
adc
fadd
icebp
pop
clc
pop
in
sub
loop
push
cmp
inc
mov
pop
dec
ins
mov
or
into
dec
mov
sets
cmp
add
pop
dec
pop
add
in
imul
dec
push
cs
sbb
push
or
dec
cmp
jno
pop
adc
pop
adc
out
loop
aas
pop
dec
je
leave
daa
mov
adc
and
push
nop
loop
and
pop
aas
xchg
mov
test
(bad)
loopne
mov
sbb
cmps
or
add
sub
cmp
push
jbe
imul
push
fist
xchg
jbe
push
lds
shr
pop
cmp
xchg
and
and
inc
add
gs
mov
jne
or
cmp
aas
lea
data16
or
mov
int3
pop
cmc
aam
inc
add
inc
push
sbb
cmp
daa
mov
mov
fisub
adc
movs
cmp
sbb
das
xor
mov
imul
or
xor
pop
inc
popf
and
gs
dec
xor
add
dec
outs
(bad)
mov
and
pushf
pop
xor
push
rcr
or
mov
push
mov
mov
push
loop
pop
dec
jp
jns
and
lock
or
aas
and
dec
bound
imul
push
iret
jnp
sub
outs
arpl
dec
call
and
mul
cmp
xchg
pop
cmp
dec
and
inc
mov
inc
hlt
inc
add
and
jmp
xchg
mov
dec
lods
stos
inc
bound
dec
ror
adc
inc
dec
cmp
dec
or
and
sbb
cmp
sub
mov
fisttp
dec
adc
(bad)
mov
mov
add
out
add
add
inc
xor
cmc
xchg
test
xchg
(bad)
push
loopne
in
sub
push
fsub
sti
push
mov
or
and
retf
in
pop
fadd
call
hlt
lahf
inc
pop
cmps
nop
mov
mov
xchg
nop
jg
or
das
movs
add
mov
push
fist
mov
xor
push
shr
inc
inc
or
inc
ret
xchg
repnz
shl
inc
fdiv
ret
fcmove
or
mov
(bad)
sbb
ret
shr
add
(bad)
cmc
and
data16
cwde
add
adc
enter
(bad)
inc
imul
sbb
imul
sub
sub
dec
sbb
xor
inc
sbb
add
repnz
sub
inc
neg
pop
icebp
dec
dec
cmp
push
add
xor
xor
pop
hlt
mov
je
jne
jl
(bad)
mov
js
shl
ins
les
call
sti
add
or
inc
jmp
add
add
adc
adc
pop
sti
or
pop
inc
sbb
inc
xor
pop
ins
dec
ror
push
push
pusha
outs
jo
dec
adc
push
xor
sub
inc
pushf
mov
fisttp
jne
scas
and
pop
comiss
adc
adc
jmp
enter
imul
add
addr16
sub
adc
pop
hlt
and
xlat
or
or
or
inc
dec
or
push
jbe
cmp
cmps
call
dec
call
cmps
cmp
cmps
gs
sub
xor
xor
ret
mov
out
cwde
cwde
cdq
aas
dec
and
popa
xchg
jae
and
mov
cmp
add
in
cmp
loopne
in
fadd
fdiv
hlt
jno
loopne
shl
jmp
xchg
add
or
jo
add
shr
fidiv
ins
ror
aad
stos
sub
outs
pop
pop
push
jae
sub
mov
gs
jne
rcr
stc
dec
call
xchg
mov
pop
inc
jle
add
ficomp
dec
push
jmp
mov
add
mov
add
fld
mov
push
xchg
inc
movs
stc
mov
or
fcmovnb
jmp
jbe
or
adc
xchg
mov
mov
mov
adc
sbb
jne
push
pop
test
(bad)
aam
adc
loopne
out
loop
push
adc
mov
cdq
ja
ja
mov
test
cmp
dec
xchg
or
pop
dec
or
es
xor
pop
ja
jmp
ror
and
dec
sub
xchg
cmp
arpl
rcr
rcr
add
push
adc
(bad)
xor
cmps
fstp
and
xor
imul
push
ins
bound
xlat
mov
jnp
dec
cmp
fstenv
fdiv
push
out
in
pusha
int3
fsubr
xor
mov
ror
inc
pop
bound
cmp
lahf
mov
inc
inc
add
add
jl
push
push
add
inc
mov
inc
ins
out
inc
jmp
xor
and
push
xor
sbb
xor
leave
pop
sar
ins
mov
enter
xor
pop
adc
jmp
push
push
paddq
pop
add
or
push
fmul
ja
mov
push
push
jmp
inc
jmp
je
adc
pusha
ret
sub
in
ja
cmp
scas
test
jl
dec
or
push
inc
test
push
or
or
cmp
push
cmp
push
xor
and
xchg
sub
xchg
push
lods
dec
sbb
outs
pop
push
clc
and
addr16
xor
adc
fwait
mov
add
and
push
push
mov
sub
sub
push
fidiv
cmp
mov
aaa
pop
jo
add
mov
pop
out
xchg
cwde
adc
loopne
jbe
mov
data16
mov
xor
or
add
and
add
cmc
(bad)
das
jno
in
fdiv
pop
inc
out
mov
push
ss
pop
push
fwait
add
inc
(bad)
push
mov
cmp
mov
and
push
or
stos
sub
and
lea
lea
popa
ins
and
or
lods
jg
clc
xor
sbb
pop
add
jmp
jle
rcr
dec
add
sbb
fisubr
xor
mov
pop
into
push
jle
xor
adc
lock
lods
in
cld
hlt
cmp
add
jae
movs
rcr
inc
popa
mov
add
mov
or
fistp
adc
inc
enter
clc
pop
lahf
in
add
ret
in
sbb
ss
and
xchg
(bad)
jl
mov
pop
clc
pusha
pop
jne
or
dec
inc
fisttp
cmp
xchg
sbb
add
sbb
mov
pop
xchg
pusha
push
enter
xor
neg
inc
neg
and
nop
ja
mov
retf
adc
adc
call
je
(bad)
test
outs
add
sub
imul
and
adc
dec
clc
push
push
or
xchg
push
mov
push
dec
loope
fwait
xchg
popa
out
add
(bad)
in
nop
retf
xor
jo
cmp
adc
cmp
mov
pop
mov
enter
fs
xchg
dec
sub
fs
push
aas
xor
xchg
es
dec
jnp
cmc
shl
call
pop
pop
call
jns
js
into
fadd
dec
or
stc
xchg
add
inc
or
add
add
mov
sbb
cmp
pop
and
jne
cdq
push
iret
or
scas
and
mov
dec
lock
add
jnp
lods
ret
jne
adc
xchg
xchg
loope
shl
or
inc
sbb
lods
stc
into
inc
xchg
jmp
arpl
hlt
popa
sub
xor
mov
shl
push
xchg
sub
fisub
in
xchg
mov
add
jb
or
dec
or
pop
inc
clc
pop
pop
popa
arpl
push
xor
pop
movups
ret
add
lock
daa
shl
and
inc
ror
dec
jo
fsub
sti
(bad)
movs
push
imul
stc
or
dec
lods
adc
mov
ffree
sub
fcomp
mov
add
pop
xchg
push
mov
pusha
push
repnz
mov
sbb
pop
call
data16
push
test
dec
add
cmp
repnz
(bad)
jl
xchg
push
lods
jl
sahf
inc
loopne
nop
or
xlat
sbb
pop
cmp
movs
xor
and
lea
sbb
out
pop
xor
xchg
lock
jmp
mov
jns
stos
pop
ficom
retf
inc
push
sahf
into
imul
add
test
js
inc
test
dec
sub
push
inc
add
inc
dec
jo
or
jg
and
jo
outs
and
int3
push
sub
in
dec
test
adc
cmp
fwait
dec
sub
adc
(bad)
or
dec
sbb
mov
popf
cmps
or
mov
pushf
imul
jnp
sar
sbb
outs
mov
sbb
xchg
add
or
and
jmp
mov
(bad)
push
pop
jae
adc
cmps
sbb
inc
mov
or
test
into
je
outs
push
ins
imul
pop
adc
add
ret
mov
sbb
rcr
inc
js
in
add
add
dec
shl
ficomp
add
xor
fldcw
or
inc
xor
ja
jge
push
retf
xor
jo
push
adc
retf
mov
jae
sbb
adc
fs
and
(bad)
add
imul
test
sub
pop
jae
jo
(bad)
out
mov
inc
pop
dec
fld
mov
push
xlat
push
movups
rol
xor
jg
adc
pop
ins
loop
int3
pop
mov
sub
push
and
aas
mov
and
adc
inc
int3
pop
xor
mov
sub
or
sub
fs
or
aad
dec
push
push
enter
dec
ins
ins
or
push
jmp
push
jo
nop
das
in
or
movlhps
je
jns
je
enter
sub
cmp
and
or
or
or
xor
pop
jb
adc
or
sub
pusha
jl
mov
sbb
popa
cs
and
adc
nop
mov
inc
sub
push
lods
and
in
jae
pcmpeqw
push
mov
scas
pop
add
and
outs
and
lods
sub
je
dec
stos
sbb
mov
pop
push
aas
push
ss
aad
in
adc
push
(bad)
dec
shl
test
inc
ror
xor
inc
clc
div
add
jo
xchg
rcl
mov
and
xchg
lahf
dec
mov
sbb
scas
aad
push
inc
dec
sbb
inc
movs
mov
cmp
sbb
outs
js
jmp
push
ret
out
sbb
pop
xor
and
mov
call
ss
ror
sbb
jo
add
fmul
enter
and
inc
mov
add
inc
mov
sub
jg
add
popa
xor
cmp
adc
dec
rol
mov
push
mov
movaps
add
adc
lods
push
adc
inc
rcl
arpl
inc
xor
cmp
ja
mov
pop
adc
sbb
pop
add
test
sbb
inc
and
xchg
xchg
push
mov
mov
jle
dec
add
mov
nop
pop
xchg
push
mov
pop
pop
xor
jo
loop
int
dec
test
adc
mov
mov
adc
aam
clc
sbb
aaa
inc
jo
arpl
cmp
add
mov
pusha
add
adc
dec
lods
mov
cmp
jne
dec
push
sbb
(bad)
sbb
push
pop
push
sbb
fild
aad
and
out
xor
sub
lock
sub
mov
mov
pop
ret
push
add
mov
int
push
inc
jo
retf
dec
lea
test
fiadd
not
cmp
arpl
js
sti
test
xchg
imul
pop
test
inc
pop
ret
mov
sbb
cmp
adc
lahf
ret
out
mov
les
rcl
gs
add
cmp
pusha
inc
jo
push
mov
push
lods
data16
mov
bound
add
fild
push
sbb
inc
xor
add
pop
or
sbb
bndldx
rol
add
jg
pop
xor
cmp
pop
add
pop
mov
add
into
sbb
adc
fimul
adc
imul
sbb
add
call
je
push
call
pop
mov
inc
push
xor
jnp
jo
mov
inc
xlat
jle
fs
fistp
push
sbb
cdq
rcl
mov
push
jae
rcr
daa
pop
pop
pop
mov
xchg
mov
lea
sbb
(bad)
cld
neg
jp
pop
mov
mov
pop
push
push
cmp
ret
sti
mov
fdiv
push
test
add
cmp
push
iret
sbb
mov
adc
lock
cwde
sbb
lods
test
lock
mov
mov
lock
fsubr
cmps
push
mov
jns
jbe
xor
shr
mov
jmp
or
mov
shl
fcom
fwait
outs
pop
or
mov
add
fild
push
add
pushf
lods
mov
or
add
stc
jmp
jbe
xchg
cmp
sbb
rol
xchg
pop
out
frstor
fstp
cli
xor
inc
popa
xor
xchg
jmp
push
xchg
inc
adc
push
scas
sahf
add
pop
mov
leave
and
mov
(bad)
ftst
test
dec
int3
fs
jo
dec
movs
call
mov
adc
adc
sar
sub
arpl
pop
dec
adc
dec
ret
test
jns
(bad)
sbb
ror
push
stc
dec
call
push
xor
and
cli
dec
enter
jp
das
fadd
cmp
fcom
mov
add
fcomp
je
push
push
and
dec
mov
fidivr
fdiv
cmp
setg
fucomi
(bad)
fdivr
pop
mov
cmps
loope
sbb
fadd
clc
inc
or
xchg
ror
sub
out
cli
jl
ja
clc
mov
nop
sti
push
sbb
lock
shl
dec
data16
add
push
push
ret
ficomp
or
pop
xchg
cmp
add
bound
jbe
add
ins
sbb
or
xor
leave
gs
dec
xor
sbb
ss
hlt
lock
adc
fs
adc
mov
pop
je
in
adc
lock
adc
sub
mov
dec
mul
fmul
adc
in
push
mov
mov
add
cs
add
das
dec
pop
test
ins
inc
pusha
ret
mov
test
aaa
test
cld
sar
inc
sbb
loop
cmp
aam
sub
aaa
or
(bad)
push
xchg
pop
adc
pushf
mov
push
pop
mov
and
movzx
add
or
cmps
jae
or
test
adc
add
push
aaa
cmp
add
pop
or
sub
sbb
jnp
stos
dec
xor
push
adc
repz
mov
inc
add
jbe
ss
popa
add
sbb
jne
dec
ins
retf
add
rcr
pop
cmp
xchg
les
clc
nop
aam
mov
sar
test
push
mov
sbb
je
cwde
mov
movs
pop
jl
push
jl
xchg
inc
call
movs
jns
mov
push
clc
and
cmp
cmp
cs
fild
cmp
data16
dec
cmp
adc
mov
pushf
or
xor
xor
add
bound
ss
push
xchg
push
dec
dec
call
test
or
aas
push
call
in
leave
add
dec
add
add
das
pop
test
mov
jmp
pop
mov
sbb
lds
rol
iret
in
inc
inc
inc
inc
sub
sbb
or
test
inc
ds
pop
in
push
mov
pop
cmps
imul
pusha
dec
push
es
call
add
xchg
nop
cmps
stc
push
jl
je
inc
(bad)
pop
scas
aas
inc
or
jl
xor
inc
shl
xchg
xchg
or
js
movs
imul
sbb
inc
push
inc
ins
pop
pop
gs
arpl
pop
dec
dec
push
cmp
add
sub
pop
ds
mov
pop
dec
outs
mov
pop
mov
or
or
and
outs
movs
ret
aaa
push
mov
shr
and
(bad)
out
arpl
fcomp
pop
pop
and
xchg
sub
dec
iret
(bad)
pusha
push
sbb
leave
and
lock
lock
ja
mov
xchg
dec
push
inc
cld
mov
daa
add
xor
arpl
fs
addr16
push
sbb
inc
ins
fmul
movs
push
adc
arpl
add
retf
cmp
push
fwait
mov
mov
push
jl
outs
in
sbb
adc
mov
sbb
stc
pushf
mov
sub
cmp
inc
jl
pop
js
js
xchg
ja
mov
mov
shl
mov
jbe
fidivr
in
iret
(bad)
nop
add
push
push
adc
cmp
inc
sar
adc
inc
mov
xor
dec
sahf
push
and
add
pop
push
dec
jl
push
push
dec
add
xchg
push
retf
xchg
pop
push
ss
add
push
popa
sub
neg
add
push
inc
iret
pop
or
das
mov
fcmovnbe
sub
adc
mov
mov
adc
out
and
je
dec
sbb
call
jmp
cli
and
mov
(bad)
(bad)
jge
push
pop
xor
and
jne
(bad)
iret
dec
cmp
add
fbstp
add
mov
inc
pop
xor
adc
fadd
inc
shr
jg
push
dec
daa
push
pusha
sar
pop
iret
in
or
nop
mov
div
daa
and
dec
addr16
jns
xchg
fisttp
fsubr
dec
inc
and
aaa
add
inc
js
mov
or
dec
or
and
je
aad
or
or
push
jne
mov
xchg
or
repz
inc
mov
ret
(bad)
and
popf
or
int3
test
xor
fwait
int3
jg
add
add
or
sub
mov
mov
xchg
mov
ret
pop
or
bound
sub
or
add
arpl
cmps
aaa
or
ror
nop
(bad)
push
out
imul
push
mov
adc
sbb
cmp
xchg
test
nop
xchg
rol
push
add
lds
cmp
sub
jp
rcr
mov
sbb
xchg
mov
ror
inc
lock
pop
or
adc
xor
jecxz
and
mov
arpl
les
enter
mov
test
adc
enter
mov
inc
sbb
adc
fiadd
xchg
ins
pop
mov
lock
add
fst
dec
(bad)
jne
call
retf
cmps
sub
sub
pop
cmp
inc
nop
aaa
imul
inc
es
lock
push
sti
mov
cvtpi2ps
movs
nop
inc
inc
dec
ins
sub
dec
aaa
mov
int
leave
add
ins
ficom
je
adc
stos
fs
mov
sbb
dec
xor
out
daa
fnstsw
or
lods
jmp
aaa
xchg
movs
lods
fst
adc
call
lock
in
mov
ins
add
je
push
mul
ret
cdq
inc
test
dec
enter
repz
or
mov
inc
pusha
or
pop
fld
pop
xchg
mov
loopne
sub
leave
push
add
fs
clc
mov
enter
in
and
sub
cmp
aaa
xchg
xchg
rcl
dec
xlat
sub
add
repz
push
cmp
mov
xor
aad
inc
je
es
inc
push
inc
pop
push
(bad)
(bad)
lea
xor
xchg
mov
or
or
jecxz
jo
add
or
sbb
les
add
les
enter
mov
cmp
daa
out
or
pop
out
sub
mov
fs
sbb
adc
pop
cmp
push
out
xor
retf
and
stc
add
cmps
jge
inc
lock
pop
push
movs
test
test
cmp
aam
cmp
or
mov
sub
outs
movs
or
lock
inc
sbb
xchg
pop
hlt
adc
and
inc
jl
inc
data16
pop
dec
adc
sbb
and
push
xchg
push
(bad)
mov
aaa
pop
and
or
inc
add
outs
ror
adc
lods
stc
movs
mov
xor
jae
loop
push
mov
pusha
lods
je
sub
cmp
je
sub
les
add
call
out
test
fmul
cld
rol
dec
into
push
sbb
out
add
xchg
fdiv
ror
aam
push
xor
or
mov
jns
jb
xor
adc
retf
add
cmp
gs
add
cmp
fdivr
add
cmp
or
xchg
loopne
scas
adc
push
sub
jo
inc
ins
xor
ins
and
daa
push
sub
push
add
pop
shr
add
pop
push
rol
adc
pop
inc
test
mov
shr
and
adc
mov
pop
daa
jg
nop
push
adc
cmc
cmp
sub
jo
pop
or
dec
ss
push
push
push
lahf
add
test
dec
aas
jae
nop
cmps
daa
sub
ins
repz
sub
mov
nop
std
xor
dec
imul
or
and
add
rol
shr
xchg
fisttp
pop
arpl
ins
push
arpl
imul
inc
jnp
idiv
bound
pop
es
fnstsw
jo
jb
jb
popa
or
sbb
jnp
frstor
es
ins
bound
jbe
jmp
mov
es
imul
jo
mov
pop
jb
addr16
add
mov
arpl
ins
daa
out
mov
jg
sub
ja
sahf
outs
ins
das
je
cmps
sbb
enter
and
pop
sbb
shr
loope
mov
leave
sti
fidiv
pop
jb
arpl
aaa
in
mov
dec
pushw
das
add
or
outs
pop
imul
push
mov
test
and
or
push
ins
call
ss
xchg
cmp
adc
dec
sub
das
clc
stos
pop
add
imul
xchg
lods
xlat
lea
and
mov
or
pop
or
jle
je
dec
jge
inc
and
je
rcr
jg
lods
xor
sub
cmp
lahf
sbb
dec
mov
mov
cmp
or
jl
enter
shl
in
(bad)
push
xchg
add
lods
mov
fstp
cs
iret
mov
jne
mov
mov
mov
xlat
sbb
push
fist
pcmpeqw
dec
or
or
bts
pop
stos
lea
(bad)
or
and
mov
iret
xor
shr
hlt
sahf
mov
fwait
cmp
cs
and
and
in
mov
cld
or
and
jge
fld
xchg
sub
mov
pop
mov
js
dec
cmp
jo
cmp
adc
mov
xor
mov
fs
jae
fwait
imul
sbb
or
jmp
sbb
or
and
(bad)
cs
jmp
adc
add
mov
sahf
dec
in
add
xor
setle
test
add
sbb
rcl
xor
sub
inc
mov
push
pop
sub
pop
sbb
pusha
aaa
pusha
adc
sbb
adc
add
adc
jo
ror
dec
sar
inc
aam
or
jl
mov
add
inc
cmp
xor
push
pop
push
and
xor
sbb
or
jo
xor
xchg
inc
xchg
outs
jns
ds
popf
cmp
add
mov
mov
or
pop
leave
data16
call
test
and
cmp
ror
dec
cmp
lds
pop
push
ja
or
push
sbb
xor
mov
sub
test
and
sub
push
dec
data16
adc
adc
push
mov
or
xor
push
dec
push
or
dec
jmp
inc
sub
xor
retf
add
add
xchg
sbb
and
repz
pop
push
xchg
and
in
cmp
repz
jno
cmp
or
or
or
cmp
movups
adc
adc
iret
repz
push
pop
sbb
(bad)
aas
iret
repz
sbb
push
pop
and
and
and
jl
jns
cmps
ins
fsub
cmp
xor
out
sahf
out
mov
jns
int3
fucomp
call
cmp
cmp
inc
push
gs
cmp
xrelease
stc
cmp
fsubr
dec
sbb
ss
push
pusha
outs
ds
push
sbb
and
xchg
retf
add
push
cdq
mov
and
adc
pop
pop
adc
push
xchg
dec
sub
in
retf
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
retf
adc
cmp
adc
mov
sub
sbb
and
sbb
in
pop
sbb
sbb
inc
pusha
push
popa
pop
and
arpl
nop
retf
and
sbb
ret
or
push
(bad)
mov
arpl
pop
movs
sahf
test
mov
jmp
mov
add
fcomp
pushf
or
fadd
mov
lea
dec
pop
shrd
(bad)
pop
mov
push
retf
clc
and
add
addr16
add
or
sbb
jno
cld
or
(bad)
fiadd
int3
mov
push
pop
je
sbb
and
loopne
add
or
sbb
jno
mov
jecxz
sub
and
mov
aaa
repnz
xchg
mov
mov
les
inc
out
daa
push
xchg
cmp
loope
pop
sub
inc
push
pop
xchg
pop
inc
mov
lahf
inc
loopne
mov
icebp
leave
movs
stos
in
test
pop
test
cmp
enter
inc
ds
push
push
scas
dec
outs
jne
outs
adc
add
and
xchg
push
xor
ins
bound
pop
or
or
popa
jb
pop
xchg
adc
inc
jle
adc
or
add
push
jmp
push
jp
pop
push
bound
imul
je
in
pop
scas
adc
fisub
mov
inc
shr
inc
dec
add
pop
ins
inc
cmp
ja
inc
nop
enter
inc
fs
push
stos
jbe
fs
sbb
add
pushf
outs
mov
sub
adc
xor
add
ins
and
pop
fisttp
mov
add
add
movs
xchg
xor
out
inc
in
or
das
or
or
jne
ins
adc
in
clc
(bad)
or
jb
dec
pushw
or
in
sbb
mov
inc
das
sub
and
push
cmp
out
aaa
and
push
mov
sbb
sahf
sub
sahf
mov
push
mov
out
push
rcr
pop
jl
out
jns
inc
pushf
push
test
loopne
out
cld
sbb
clc
out
pmullw
(bad)
sub
xor
mov
fcomp
mov
stos
add
shl
push
xor
inc
xlat
xor
enter
lea
mov
(bad)
(bad)
cmp
push
jl
jge
xchg
mov
and
or
paddw
and
cdq
aas
repnz
bound
jp
mov
push
test
add
cmp
xor
lea
sahf
push
sbb
nop
mov
jo
inc
add
test
test
push
push
ss
aad
call
ds
sub
xor
dec
mov
in
stc
je
cmp
lea
or
and
jne
mov
add
jg
loopne
xchg
mov
push
jg
fiadd
jns
dec
out
sbb
add
and
jecxz
add
dec
sahf
aaa
cmp
dec
adc
mov
inc
jmp
lea
test
or
push
cmps
push
dec
mul
jae
cmp
mov
jb
or
cmps
cmp
ins
into
repz
jns
or
inc
aas
mov
mov
or
test
sbb
push
pop
lods
gs
mov
arpl
jo
mov
jecxz
(bad)
push
lock
stos
inc
inc
push
add
rol
sbb
or
sbb
mov
repz
sbb
dec
inc
(bad)
iret
sub
jmp
rol
lea
inc
xor
sbb
adc
fisttp
adc
push
pusha
nop
sub
adc
lods
nop
jb
test
cmp
lds
les
cwde
push
add
int
cmp
pop
cmp
mov
mov
mov
cs
daa
mov
push
fcomp
mov
pop
pmulhuw
cwde
sahf
cmps
nop
pop
inc
sub
loope
int
push
mov
cmp
pop
daa
sub
jns
test
push
cmp
xchg
outs
or
mov
push
pop
sbb
add
inc
xor
pop
test
(bad)
lods
daa
add
add
lods
pop
or
sbb
pushf
bound
mov
or
call
mov
and
and
scas
jo
mov
popf
push
mov
or
or
dec
enter
lds
push
and
js
add
adc
shl
inc
sub
xchg
inc
sbb
inc
add
push
cdq
or
cmc
cdq
dec
lea
dec
xchg
mov
lods
xchg
or
and
add
inc
lock
popf
inc
push
cmp
or
nop
clc
dec
ins
ret
dec
push
and
mov
cmp
jo
mov
retf
push
iret
jo
push
sub
js
fnstcw
dec
jle
push
movs
xchg
call
mov
sbb
or
or
xchg
push
inc
cdq
ins
sbb
sub
jns
xchg
jns
add
ss
retf
jnp
shl
mov
fstp
inc
sub
adc
sub
into
(bad)
mov
sbb
int
loopne
push
push
inc
push
mov
inc
dec
push
hlt
pop
ins
cwde
pop
mov
and
mov
mov
add
les
pop
jle
cmps
scas
pop
imul
movs
nop
pop
pop
and
fst
or
adc
aaa
or
mov
sbb
and
dec
xchg
hlt
loopne
ins
in
je
fild
cwde
push
cdq
ins
or
dec
ret
fmul
imul
jecxz
sub
leave
or
pop
fst
mov
inc
push
imul
inc
cmp
add
xor
paddb
ds
jmp
add
or
dec
inc
or
js
push
sub
or
push
dec
xlat
nop
dec
dec
mov
adc
mov
add
pop
loopne
xor
and
cmp
test
outs
dec
cli
scas
sub
dec
dec
dec
dec
dec
dec
dec
dec
ds
push
pop
pop
pop
out
mov
rcl
xor
in
nop
push
cmp
and
je
dec
adc
mov
test
jmp
aas
shl
inc
xchg
stos
cld
push
add
aaa
sub
in
jne
jmp
add
iret
inc
add
aas
mov
jns
je
popf
sub
sbb
pushf
pop
or
or
xchg
cmp
(bad)
push
push
jb
inc
or
mov
adc
jg
xchg
jnp
call
hlt
arpl
mov
dec
clc
sub
mov
dec
ss
jae
je
push
jae
(bad)
cmc
cmps
sub
or
or
jge
sti
xor
xor
sub
ds
cdq
sar
pop
mov
cmp
test
bound
retf
lahf
cmp
ss
sub
add
sub
ret
add
mov
or
ins
gs
enter
add
and
dec
jmp
inc
cmp
inc
aas
dec
pusha
sub
inc
add
call
ret
aaa
xor
jl
pop
push
in
and
sbb
jno
sbb
xor
sbb
mov
or
movs
outs
pop
cmp
addr16
fs
sbb
test
lock
pop
test
jmp
add
xchg
lahf
inc
xchg
jo
push
addr16
mov
int3
cwde
aas
add
cmp
jg
push
add
inc
xor
ror
pop
sub
or
mov
lds
ins
pusha
fcomp
adc
mov
xchg
sub
lea
or
scas
dec
imul
or
add
or
and
out
mov
jmp
gs
dec
cs
and
mov
push
fimul
cli
sub
in
mov
cmc
xlat
xchg
repnz
inc
ja
hlt
adc
rol
aam
mov
jl
(bad)
adc
jge
jmp
adc
les
add
icebp
lea
inc
mov
fiadd
inc
mov
pop
push
mov
fisub
add
xor
mov
and
hlt
add
lea
lods
inc
and
lock
neg
aam
pop
aas
xor
inc
push
sbb
mov
jle
push
(bad)
fdiv
mov
xor
xchg
out
or
cmp
jg
bound
mov
stos
das
(bad)
rcl
cli
rcl
loopne
mov
or
jae
rol
xchg
add
mov
inc
lock
jecxz
mov
add
mov
or
mov
ret
inc
cmp
add
jne
jle
adc
sub
xchg
cmp
adc
jb
jns
outs
mov
pop
xor
jmp
cmp
je
in
je
fmul
aaa
add
pop
rcr
jmp
jbe
cmp
fist
xor
in
dec
mov
jg
inc
and
dec
sub
call
inc
inc
sbb
adc
add
sbb
and
add
push
outs
mov
jecxz
push
jg
ds
push
push
int3
cdq
pop
stos
push
ins
call
inc
imul
inc
cmp
enter
sbb
cmp
cs
or
cmp
leave
jae
es
(bad)
pop
push
mov
jl
mov
pop
(bad)
(bad)
cmp
pushf
and
(bad)
sbb
stos
or
aas
cmp
fild
adc
push
addr16
dec
or
inc
sbb
lods
dec
nop
test
push
bswap
push
icebp
pushf
or
xchg
ds
add
xor
(bad)
aam
cs
adc
or
mov
add
aas
and
jecxz
(bad)
cwde
sbb
mov
mov
jl
sbb
mov
push
push
mov
sar
jo
aaa
cmp
dec
imul
pop
fs
cmp
inc
aas
add
sbb
aas
inc
imul
add
pop
retf
iret
jp
nop
clc
sub
adc
pop
push
sbb
dec
sti
lock
add
cmp
add
aas
push
js
mov
push
mov
add
nop
jmp
pop
add
daa
push
push
inc
(bad)
mov
outs
and
sbb
sbb
and
movs
fs
and
pop
add
adc
in
pop
dec
jg
cmp
adc
movs
loopne
test
pop
and
adc
inc
sub
push
popw
sbb
in
les
repnz
or
sub
cmp
xchg
and
cmp
mov
mov
jnp
pop
jnp
(bad)
or
shl
push
xor
lock
dec
xchg
fimul
add
jmp
test
js
pop
add
fs
ins
add
jbe
adc
mov
inc
push
add
cli
push
les
pusha
(bad)
les
add
and
fidivr
adc
inc
retf
into
aas
out
std
call
adc
mov
pusha
sub
adc
or
inc
dec
mov
sbb
sub
mov
pop
mov
stos
mov
(bad)
xlat
mov
dec
or
iret
cmp
add
rcl
jnp
outs
sub
rcr
inc
cmp
cmp
test
popa
pop
xchg
aaa
cmp
(bad)
les
push
test
fsubp
out
imul
or
pushf
push
inc
sbb
test
or
adc
bound
cmp
test
loopne
idiv
push
mov
xor
pop
call
push
or
push
(bad)
jmp
adc
sbb
call
les
or
jb
pop
sub
xchg
ret
leave
xor
(bad)
leave
ja
dec
xchg
xor
pop
cmp
jo
or
je
mov
cld
adc
in
or
sub
pop
or
push
icebp
int3
push
add
out
pop
add
inc
jge
inc
push
sbb
inc
out
enter
jo
in
pop
adc
sahf
mov
xor
call
call
and
or
das
movs
(bad)
mov
push
vmwrite
push
adc
or
test
cmp
pop
jnp
in
fwait
imul
or
adc
(bad)
cmp
je
xchg
xchg
ins
out
pop
pushf
pop
movs
cwde
and
sti
mov
test
es
xchg
call
sbb
adc
sbb
sub
fs
in
add
mov
xor
jo
and
add
bound
sbb
sub
mov
mov
movs
dec
mov
dec
lods
and
xrelease
inc
cmp
jge
mov
clc
dec
mov
mov
mov
(bad)
push
in
aas
fsubr
xor
sbb
mov
or
pop
xor
cmp
scas
inc
shl
cmp
or
iret
push
lock
cmp
or
and
jno
dec
data16
cld
push
add
xor
push
push
js
retf
mov
loop
and
dec
dec
pusha
and
cdq
and
inc
mov
pop
nop
xchg
add
and
pop
das
cmp
bound
clc
fsubr
inc
and
test
push
outs
sbb
call
and
add
jmp
mov
aam
adc
fidivr
ja
adc
cmp
cmc
jne
outs
sbb
adc
cmp
add
es
clc
jno
jbe
not
push
(bad)
and
mov
ja
jmp
and
fld
(bad)
test
inc
les
xchg
ins
cmp
(bad)
outs
xor
push
popf
ret
imul
inc
adc
gs
push
push
and
push
inc
sub
add
mov
mov
pop
mov
sub
or
mov
ds
mov
nop
or
fldenv
mov
jns
arpl
bound
int
push
das
pop
and
dec
cs
lea
xchg
add
or
add
dec
lock
enter
mov
cdq
xchg
add
fistp
mov
cmp
adc
jo
mov
dec
and
outs
bound
sar
sbb
inc
je
aas
adc
cmps
or
in
leave
sbb
and
mov
sbb
in
outs
iret
popa
push
and
pusha
push
dec
xlat
pop
adc
loopne
inc
mov
js
test
xchg
push
mov
cmp
movs
or
sub
pusha
jge
jmp
mov
xor
xchg
out
daa
or
mov
add
mov
mov
push
lock
push
lahf
add
or
add
cwde
cmp
xor
rcr
jle
dec
ret
and
mov
nop
jne
pushf
sub
(bad)
cmp
mov
dec
les
movhps
jl
ret
call
imul
xchg
mov
ret
and
add
sub
and
xor
loope
sub
xor
jmp
push
or
sbb
dec
inc
jb
push
cmp
sub
or
and
cwde
push
fcom
jns
dec
add
sbb
inc
cmp
mov
call
dec
les
lock
jecxz
and
cmovnp
mov
adc
inc
or
inc
cwde
pop
add
cmp
dec
jge
pop
push
mov
inc
adc
cmp
int
fsubr
pushf
sub
pop
mov
addr16
mov
pop
mov
pop
push
ins
or
ss
mov
add
add
lahf
int
fdiv
adc
and
or
(bad)
ss
push
sub
sub
sar
push
add
(bad)
inc
push
enter
sub
pop
lock
inc
ds
push
rol
pop
cmps
mov
xor
icebp
and
push
sub
mov
test
xchg
push
lock
call
adc
sub
inc
stos
mov
xor
iret
hlt
cmp
cdq
fmul
hlt
hlt
pop
mov
hlt
das
add
xor
mov
rep
lock
imul
clc
or
pop
jnp
inc
jne
mov
inc
outs
sbb
fdiv
sub
lock
rol
or
push
pop
loopne
add
(bad)
pop
push
xor
iret
fild
fist
mov
push
popa
imul
popa
fcom
lea
sbb
loopne
mov
ror
jnp
enter
pop
inc
adc
or
in
and
bound
inc
loopne
mov
mov
sbb
xchg
jne
into
leave
add
ret
or
ins
sbb
jne
loopne
fucomp
ds
and
iret
shl
test
pusha
push
rcl
mov
sbb
cwde
into
(bad)
iret
aam
or
nop
fs
and
cmp
in
or
adc
es
test
xlat
xchg
pushf
sub
imul
push
loope
add
enter
pusha
stc
hlt
sti
adc
test
in
mov
mov
test
stc
xor
sbb
add
adc
daa
clc
nop
out
or
mov
pusha
mov
pop
xchg
loope
dec
arpl
lds
daa
xor
and
mov
adc
les
jns
sbb
and
xchg
pop
int
inc
sbb
lods
dec
aas
mov
add
inc
mov
call
push
clc
pop
jne
or
imul
cmc
clc
loope
jb
leave
bound
mov
and
sub
adc
stc
or
sub
add
mov
dec
lock
push
inc
jb
clc
popa
mov
push
nop
cmp
jo
jno
stos
in
dec
xor
clc
arpl
mov
push
add
ins
add
in
inc
mov
test
call
ret
iret
cmp
in
pusha
jne
sbb
call
xchg
xchg
or
sbb
dec
es
push
xchg
pop
shl
jb
sbb
xchg
pusha
or
dec
loopne
aad
sbb
jne
int
cmp
sbb
jmp
add
shl
fiadd
mov
add
xlat
mov
xchg
test
adc
mov
pop
push
xchg
mov
push
jle
jne
fdivr
jo
xor
or
adc
shl
es
leave
adc
sbb
add
cmp
push
sar
fisub
test
sahf
imul
add
cmp
(bad)
call
loope
jbe
adc
rol
les
pop
je
xchg
mov
test
and
pop
adc
clc
add
out
sub
fst
push
or
push
add
loopne
out
sbb
fs
cli
fs
sub
sahf
xor
repz
pop
jl
or
and
mov
and
pop
lods
mov
lea
xchg
adc
test
sar
iret
aam
or
(bad)
aad
lahf
js
mov
aaa
fdiv
sub
dec
jmp
jns
and
rol
cdq
or
mov
scas
callw
mov
outs
pop
daa
mov
adc
mov
add
push
sbb
dec
cld
(bad)
inc
gs
bound
lock
push
sbb
push
add
iret
inc
inc
add
xor
sbb
fimul
cvttps2pi
sbb
aaa
dec
dec
jp
mov
ja
cdq
xor
fcomp
mov
add
not
int
fidivr
push
and
les
or
arpl
and
add
xor
sbb
fld
and
leave
and
ja
sbb
jl
es
ret
fsub
xor
adc
sbb
ja
inc
mov
ret
sub
inc
push
push
pop
push
loope
inc
ins
mov
addr16
imul
ds
add
mov
mov
push
xlat
and
movs
fst
mov
clc
push
cmp
imul
inc
outs
dec
adc
mov
div
adc
ret
dec
adc
or
cmovl
cmp
mov
sub
add
shl
push
ficom
stc
dec
cld
dec
push
sar
cmp
xor
outs
jmp
cmp
ss
cmp
mov
inc
test
test
cmps
or
push
adc
dec
imul
test
pop
or
scas
jo
adc
call
outs
adc
rcr
push
mov
movs
push
or
mov
push
ss
cmps
outs
and
mov
je
(bad)
adc
or
sub
adc
(bad)
mov
push
ja
add
mov
mov
dec
hlt
push
cs
leave
sub
dec
leave
xor
xor
or
imul
clc
and
cmps
pop
cmp
sub
sub
ret
outs
out
imul
inc
push
inc
inc
or
ins
add
dec
je
sbb
jne
loope
clc
mov
add
and
xor
inc
jo
jge
push
push
shl
and
sbb
enter
sub
adc
jge
jae
popa
sub
rcr
mov
sbb
out
clc
or
cmp
je
(bad)
rol
pop
cmp
fs
sti
adc
and
ret
pushf
test
push
pop
mov
fisttp
lock
mov
out
inc
pusha
adc
inc
test
(bad)
test
inc
push
or
out
pop
pop
pop
sbb
ror
push
stos
jge
aad
adc
cmp
adc
js
sbb
adc
aas
adc
retf
test
dec
add
inc
sahf
cwde
mov
lock
aad
xchg
push
or
push
in
fild
and
pop
add
jl
add
sti
push
add
ja
inc
or
cmps
aad
mov
add
cmp
lahf
gs
adc
add
xchg
push
ins
xchg
pop
xor
cmc
(bad)
xor
popa
jb
ret
mov
sub
pop
sub
or
adc
scas
adc
xor
sbb
push
arpl
cmp
sub
sbb
ss
pop
aaa
retf
pop
xor
jne
(bad)
xor
shr
push
jmp
dec
pop
and
xor
sub
test
jae
pusha
xchg
in
inc
sar
mov
(bad)
dec
popa
jb
in
xchg
jmp
adc
test
loop
call
adc
xchg
in
jmp
sbb
rol
mov
js
test
push
dec
adc
popf
push
pop
pop
xor
sahf
pop
fild
inc
movhlps
dec
mov
or
inc
xchg
ret
repz
xchg
push
push
adc
ja
mov
push
mov
or
cmp
push
sar
jl
push
out
inc
xchg
push
mov
push
or
(bad)
adc
and
adc
mov
out
mov
sbb
add
or
jo
xlat
ds
add
pop
xchg
and
gs
jb
es
cmp
cmp
ss
mov
std
push
es
xlat
jne
pusha
retf
push
cmp
jmp
sbb
sbb
fist
dec
xor
cwde
cli
mov
or
inc
movs
imul
sbb
mov
(bad)
movs
mov
int
xor
fmul
cli
push
or
sub
jne
xor
and
cwde
jnp
mov
(bad)
fcom
jb
inc
pop
mov
xor
aas
ins
jg
dec
cmp
mov
(bad)
xchg
jge
adc
jle
imul
pusha
pop
ja
in
sub
mov
test
sbb
jmp
or
add
sbb
nop
in
inc
adc
(bad)
pop
stos
sub
and
ss
xor
scas
(bad)
dec
add
in
test
and
and
cs
mov
cmp
inc
or
mov
imul
jle
inc
fmul
mov
push
push
dec
sti
mov
inc
dec
adc
or
jnp
int
add
or
sub
push
lds
sub
loope
jmp
pusha
jg
xor
les
(bad)
xor
or
arpl
xchg
jns
ins
jmp
cmp
pop
je
jmp
jmp
jne
mov
push
(bad)
jl
push
pushf
jl
dec
scas
add
and
test
cmp
je
pop
pop
scas
jge
cmp
add
es
mov
leave
mov
vmovlhps
add
push
(bad)
(bad)
push
mov
pop
xchg
inc
adc
add
mov
push
xchg
adc
lods
push
mov
mov
mov
jno
mov
lea
es
data16
add
add
iret
sbb
call
jo
inc
pushf
sub
imul
jmp
mov
popa
popa
jecxz
cmp
mov
in
and
xchg
mov
fadd
xchg
add
and
out
clc
pusha
push
adc
xor
mov
mov
adc
sbb
sbb
std
xor
jne
add
mov
add
add
inc
xor
mov
mov
stos
(bad)
dec
imul
sti
scas
pop
xor
in
push
sahf
mov
div
ret
(bad)
push
dec
nop
cmp
movs
inc
add
inc
pop
sar
enter
adc
xchg
and
jb
mov
fadd
jmp
and
mov
xchg
inc
xlat
(bad)
mov
fcmovbe
(bad)
inc
cmp
pop
ins
ins
popa
call
retf
int
or
and
fst
daa
in
or
cwde
in
mov
mov
sbb
in
aam
push
jle
pop
dec
add
int3
and
xor
xchg
or
and
in
mov
les
pop
inc
les
shl
or
sub
jle
adc
dec
push
pop
dec
xor
sbb
jmp
sbb
test
sbb
sahf
(bad)
rol
xor
sbb
(bad)
out
into
push
pop
and
aam
inc
xlat
add
and
test
frstor
das
add
popa
xchg
cmps
dec
ds
ret
rcl
int3
(bad)
enter
sub
push
or
in
xchg
test
and
inc
das
or
adc
sub
or
inc
jmp
mov
out
rol
shl
call
mov
sbb
adc
cmp
dec
mov
push
mov
fisttp
add
nop
or
adc
cmp
or
dec
ret
jmp
cmp
dec
mov
jle
je
mov
test
sub
push
jns
xor
rcl
aam
add
dec
mov
aam
jo
sar
mov
xor
lds
jp
and
test
pop
stos
add
clc
pop
outs
retf
(bad)
pop
std
ja
pop
mov
sub
inc
int
adc
call
add
mov
jne
mov
pop
call
shl
sbb
lds
out
jmp
pop
xor
add
hlt
daa
push
adc
in
and
imul
mov
sahf
sbb
and
push
scas
sub
jg
push
cmp
cmp
mov
nop
mov
sub
pop
ss
pop
sub
pop
ficom
dec
in
ins
adc
js
shl
add
in
inc
mov
clc
dec
sub
jl
inc
mov
mov
sbb
out
adc
inc
rol
jmp
mov
inc
push
ret
inc
cmp
push
cmp
mov
mov
inc
dec
xchg
popa
adc
add
pop
jne
jecxz
push
jbe
xor
fsub
mov
jg
dec
and
jle
inc
adc
nop
enter
imul
cmp
jmp
jnp
rcr
adc
jl
mov
adc
in
call
aam
mov
inc
lss
test
jecxz
dec
fs
int3
add
adc
jge
pop
mov
mov
jno
loopne
xchg
loopne
lods
sub
iret
add
or
cmp
mov
dec
jo
stos
or
inc
and
pop
mov
xchg
lea
inc
ror
mov
xchg
ss
aas
inc
xor
fidivr
pop
push
ret
inc
stc
adc
xchg
mov
mov
mov
push
mov
push
xchg
push
push
mov
mov
lahf
shl
dec
and
mov
cwde
sub
inc
retf
sub
gs
dec
push
add
pusha
loopne
and
xchg
pop
hlt
ret
sub
f2xm1
bound
or
sub
inc
jecxz
cld
push
mov
dec
adc
(bad)
fisttp
loop
dec
ret
dec
and
push
sub
in
pop
xchg
test
jmp
mov
fbld
push
daa
and
push
jge
cmp
cmps
shr
jmp
add
sbb
out
test
fs
js
pop
imul
cmp
or
sahf
shl
iret
test
add
pop
mov
cdq
xor
rol
sbb
jno
pop
fist
(bad)
call
(bad)
pop
jbe
movs
outs
movs
iret
adc
int3
sbb
loope
and
aas
cli
xchg
jo
lods
cmps
ja
fcomp
icebp
cmp
movs
xchg
out
xor
mov
nop
pushf
xchg
sbb
sub
int3
inc
jmp
icebp
jne
push
rcr
pop
shr
ret
(bad)
loope
inc
adc
fiadd
pusha
sub
sbb
push
jmp
ftst
mov
hlt
idiv
xchg
pop
test
mov
push
jmp
mov
push
sar
adc
pop
mov
div
mov
pop
xchg
mov
test
lods
retf
push
jl
clc
stos
fdivr
add
fwait
out
inc
sub
add
sete
sbb
jo
xor
inc
cmp
fs
mov
and
outs
mov
xor
push
mov
mov
dec
inc
es
or
adc
pop
out
ds
stos
and
pop
ja
jg
sbb
and
add
test
je
adc
jb
jo
mov
xor
movs
or
test
jge
push
stos
fdivr
sbb
pmaxub
sub
mov
sbb
frstor
ja
jle
adc
mov
cs
or
popf
fcom
xor
into
or
je
sbb
mov
dec
retf
jmp
repnz
jb
aam
jnp
jae
mov
sub
sub
inc
xor
sub
push
add
hlt
jbe
les
cld
inc
je
retf
ds
scas
shl
push
push
cli
xchg
mov
lsl
lods
adc
imul
adc
inc
test
in
and
lock
test
loopne
mov
xchg
popa
cs
jp
xchg
xchg
inc
pop
popf
popf
shl
inc
mov
and
sbb
push
jo
js
mov
push
or
sub
stos
sti
mov
push
sar
push
cmps
rsm
rcr
sbb
movs
shr
stos
or
jecxz
xchg
mov
inc
or
add
int3
jge
xchg
repz
push
cli
inc
or
bound
jmp
dec
push
ins
push
popa
lds
sub
arpl
jbe
or
jae
les
push
push
mov
push
test
add
sahf
dec
nop
faddp
push
or
pop
or
test
dec
jmp
daa
loop
ret
jg
jae
jnp
xchg
add
shl
push
dec
add
lea
(bad)
push
sub
test
inc
call
dec
iret
cmc
or
loop
mov
inc
sbb
inc
cmp
je
xor
dec
xor
cmps
ins
out
jmp
ret
mov
add
xchg
cmp
sub
sub
add
daa
and
call
lea
test
sti
cmps
imul
imul
cmp
call
ds
mov
and
adc
push
lahf
sbb
sbb
add
add
push
add
jb
jns
inc
inc
add
fild
cmp
or
adc
jb
aaa
jecxz
ror
push
mov
inc
adc
cmp
adc
shl
xchg
cmp
std
movs
mov
inc
cmp
xchg
mov
repz
pop
sbb
shl
pop
ret
pop
clc
ret
dec
je
adc
push
inc
das
js
daa
hlt
pop
jp
addr16
lods
repnz
inc
mov
push
gs
and
(bad)
and
pop
movs
data16
in
scas
xor
(bad)
adc
loop
mov
and
xchg
mov
pop
xchg
out
xchg
jmp
mov
mov
dec
xor
in
and
call
sbb
cmp
jno
xor
and
and
cwde
inc
inc
fcomp
das
cmp
jge
call
add
inc
mov
add
sbb
jb
inc
dec
inc
push
xchg
xchg
jle
and
stos
ret
pop
cmp
push
rcr
les
jno
call
pop
ror
jp
mov
hlt
mov
or
xchg
test
je
push
out
xchg
dec
jp
fs
and
sti
add
xor
add
jnp
adc
xor
test
xchg
xor
push
fiadd
call
sbb
test
repnz
test
push
add
xor
les
add
or
pop
jmp
rcl
or
lea
adc
lods
pop
or
hlt
fs
addr16
jp
das
pop
hlt
inc
dec
rol
xor
push
nop
push
add
inc
add
xor
inc
xchg
xchg
adc
mov
pop
(bad)
xchg
daa
pop
cli
call
icebp
test
outs
inc
mov
or
jmp
cmp
add
dec
mov
mov
lds
fild
js
jecxz
clc
fmul
aam
sbb
(bad)
(bad)
push
or
sti
jmp
sbb
out
cmp
adc
push
sub
pop
stos
jge
jl
adc
cmp
jne
call
inc
pushf
dec
int3
xchg
mov
inc
cs
mov
jb
adc
jmp
and
nop
cmp
inc
cmps
or
add
sbb
mov
jmp
cdq
jbe
add
adc
sbb
jbe
in
aaa
sub
into
in
mov
cmp
dec
add
je
and
shr
inc
ret
ja
clc
cmps
sub
dec
xchg
inc
jo
repnz
or
dec
push
test
sub
xor
or
push
iret
push
jo
ds
or
cli
cmp
mov
adc
adc
mov
and
jg
cmp
outs
lods
xor
inc
sahf
push
js
inc
in
mov
dec
rol
leave
mov
loopne
lock
sbb
es
dec
pop
push
sub
pop
movaps
fst
out
push
sbb
sub
lock
mov
pushf
hlt
sahf
push
cmps
cmp
xor
sub
push
adc
out
push
xor
outs
inc
pop
sub
cmp
push
pop
je
push
and
pop
(bad)
cmp
mov
adc
mov
xor
sub
(bad)
push
or
mov
jne
arpl
adc
mov
mov
clc
adc
lock
push
mov
inc
imul
and
bound
nop
ss
mov
dec
push
or
rcr
cmp
and
sbb
cs
mov
mov
pushf
ret
addr16
and
repnz
lahf
adc
shl
hlt
and
pop
movs
push
cmp
outs
jl
and
call
add
bound
clc
jle
dec
daa
sub
inc
xchg
sub
fdivr
inc
pop
add
jecxz
bound
es
cs
lods
sar
add
xor
nop
or
add
loope
pop
sub
xchg
(bad)
arpl
inc
push
pushf
add
add
jl
jl
add
push
call
out
push
outs
inc
jmp
rcl
shr
sub
test
and
hlt
call
and
push
loope
call
push
sbb
mov
sub
movs
cmp
mov
mov
add
call
shl
sbb
inc
call
(bad)
or
xor
inc
pop
inc
sbb
dec
loope
inc
iret
les
fwait
arpl
pop
mov
push
ins
ror
xadd
or
or
sub
fdivr
test
in
or
ins
jns
in
dec
xor
fdiv
pop
dec
sbb
add
jg
pop
rcl
xor
or
fadd
mov
ins
inc
adc
test
jb
sbb
pusha
out
ja
ins
push
lahf
sub
dec
add
push
push
lea
int3
mov
add
xchg
adc
jns
pop
mov
movs
imul
out
stos
fiadd
sahf
add
adc
adc
je
add
loopne
add
jmp
xor
mov
cmp
es
nop
xor
inc
shr
ins
inc
fmul
arpl
push
ins
cmp
mov
in
loope
mov
jne
aad
or
test
(bad)
push
pusha
xor
mov
add
cmps
adc
adc
dec
push
add
aaa
adc
mov
adc
adc
cmp
xchg
ror
in
out
test
push
xchg
or
adc
add
adc
test
pushf
mov
shl
mov
mov
sub
add
daa
sub
(bad)
mov
popa
add
xchg
push
ja
nop
mov
mov
dec
jl
or
rol
push
ja
inc
push
add
adc
into
gs
jo
sbb
pop
xor
mov
inc
dec
or
jmp
cs
or
jns
push
stc
stc
cmp
ror
jl
or
push
add
pop
dec
add
dec
cld
and
ret
push
cmp
jns
loop
sub
jmp
shl
jns
retf
xchg
js
shl
mov
xor
xor
dec
push
in
les
(bad)
cmc
add
lock
sub
cmp
push
push
push
daa
mov
sbb
adc
cld
imul
fnstcw
push
add
rol
outs
and
inc
pop
pop
cmp
add
(bad)
adc
lods
push
inc
xor
pop
inc
push
mov
inc
popw
add
add
outs
adc
push
sbb
movs
icebp
push
or
nop
ja
or
call
sub
retf
stc
or
je
sub
loopne
push
push
test
mov
aas
inc
out
mov
inc
xor
inc
push
movs
jge
xor
xchg
xchg
dec
ins
sbb
pop
aad
sbb
or
pop
out
call
popf
dec
js
mov
loop
shld
push
inc
xor
fild
xchg
pop
pop
ins
dec
inc
test
jle
push
inc
rcr
sub
dec
loope
mov
ret
out
cmp
setge
xchg
sub
pusha
ret
push
(bad)
(bad)
sub
xor
movs
jb
sub
push
add
pop
or
retf
mov
xor
sbb
jmp
lahf
cs
inc
jle
clc
jle
ret
ins
daa
lock
aaa
adc
arpl
sti
jl
mov
mov
adc
and
clc
or
or
sbb
ins
inc
fld
jge
push
(bad)
add
retf
scas
jns
cmc
add
or
jge
inc
add
sbb
mov
arpl
jge
lock
xchg
xchg
dec
cld
cld
call
sub
mov
add
mov
pop
out
xor
int
je
cmp
pusha
push
fdivr
je
jl
neg
lods
push
pushf
adc
jl
mov
dec
outs
in
inc
repz
cmps
stc
push
cmp
repz
jnp
cmp
xor
push
xor
fdivp
cmp
sub
sub
add
jnp
scas
sbb
pop
loopne
in
stos
lock
test
adc
add
and
jno
dec
add
adc
movs
fistp
movs
pop
xchg
sar
in
push
cmps
and
pop
push
or
pusha
add
lahf
mov
add
mov
pop
dec
sub
push
ror
xchg
push
push
or
fidiv
ins
push
inc
rcr
(bad)
(bad)
outs
adc
or
or
dec
(bad)
mov
inc
add
loop
inc
push
jg
div
loope
int3
pushf
push
add
pusha
adc
in
hlt
or
add
jne
mov
and
rol
cmp
inc
sub
inc
les
jl
dec
dec
enter
mov
pop
sar
mov
fs
push
test
rol
gs
pop
add
push
push
lock
adc
add
cmps
cmp
inc
dec
add
or
into
jecxz
xor
push
jecxz
test
jg
loop
enter
pop
adc
adc
jo
adc
inc
repnz
js
js
mov
xchg
js
(bad)
mov
and
es
lods
in
cmp
imul
(bad)
lock
inc
int3
push
icebp
or
test
js
leave
inc
inc
mov
(bad)
scas
pop
jb
sub
mov
or
shr
das
movs
ds
mov
clc
ds
stos
fild
movs
test
push
push
and
nop
mov
pusha
push
dec
inc
mov
mov
pop
aam
inc
sub
lods
push
pushf
pop
mov
sbb
jg
add
imul
dec
pop
cmp
add
nop
push
sbb
cld
mov
xchg
lods
(bad)
adc
inc
aaa
(bad)
pslld
inc
je
inc
xor
and
inc
adc
inc
fnsave
xor
and
mov
cmps
mov
add
retf
retf
ins
bound
ins
push
jg
sbb
mov
add
repz
ins
popa
xchg
ss
push
lahf
adc
adc
jb
or
mov
or
sbb
fbld
or
leave
or
or
or
sub
or
sub
into
add
mov
data16
data16
xor
adc
pop
fcom
mov
cmps
cld
mov
jmp
dec
cs
imul
imul
cs
or
ins
dec
popa
loopne
xchg
cwde
or
push
pop
cmp
test
push
ins
mov
jns
mov
and
or
or
das
leave
inc
lock
or
jae
jns
add
push
andps
pop
les
xchg
xor
ins
ds
add
enter
pop
sub
inc
out
adc
cmp
cli
xchg
clc
loope
sti
push
imul
add
push
or
mov
pop
cmps
sub
push
add
mov
ds
or
mov
or
pop
rcr
or
dec
es
imul
lahf
add
jbe
mov
mov
push
test
xchg
jb
dec
enter
mov
mov
xchg
push
pusha
out
ins
dec
mov
cld
in
or
xchg
(bad)
push
ret
pusha
in
pop
and
xchg
xor
xchg
mov
out
mov
jns
cmp
dec
mov
adc
mov
add
pop
or
adc
mov
cmp
inc
dec
cld
mov
mov
mov
sbb
nop
and
xor
pop
inc
(bad)
out
pop
and
loopne
das
add
cmp
add
add
das
in
mov
inc
inc
loop
mov
add
xchg
ins
in
sbb
mov
sti
(bad)
pop
mov
imul
sbb
fsubr
sbb
xchg
bswap
pusha
mov
cmp
inc
mov
(bad)
adc
adc
add
pop
pop
in
mov
adc
and
or
sbb
out
or
pop
jbe
xor
pop
adc
push
cmp
xchg
mov
mov
inc
mov
xor
add
and
and
ja
push
inc
pop
inc
imul
rcl
pop
inc
ret
add
add
xchg
imul
pushf
cld
test
fwait
(bad)
push
test
mov
pop
call
mov
or
cmp
jp
push
popf
into
in
(bad)
or
xor
dec
sbb
cld
push
popa
jb
gs
mov
in
arpl
and
pop
enter
iret
pushf
ins
push
xchg
out
push
or
push
not
mul
mov
adc
jmp
nop
loope
popf
xlat
js
gs
fdivr
add
add
jae
test
int3
fldcw
paddusb
in
xchg
add
pusha
inc
call
popf
or
jnp
adc
je
push
or
rol
add
xor
or
das
mov
sbb
loope
and
add
push
xchg
or
(bad)
xchg
sub
xor
xchg
cmp
fisttp
fist
push
xchg
push
loop
add
mov
ror
mov
or
popa
js
pop
js
jo
(bad)
mov
jb
add
ins
fxch
mov
popa
inc
add
cmps
mov
ret
or
or
lds
mov
push
lock
mov
inc
cmc
repz
jb
jmp
out
xchg
loopne
es
test
add
rcr
lods
ret
sahf
and
fstp
cmps
lock
inc
enter
pusha
inc
inc
ror
int
test
pop
add
mov
sahf
add
add
add
add
inc
add
add
fadd
add
add
(bad)
into
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ficom
(bad)
cmp
cmp
fucomi
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
(bad)
fdivrp
(bad)
fdivr
(bad)
fisubr
fdivr
dec
cld
call
call
call
cmp
call
call
call
loope
inc
ret
dec
into
dec
dec
dec
dec
inc
add
arpl
dec
mov
out
mov
js
sub
fsubr
mov
mov
push
mov
cmps
stc
cmp
dec
push
mov
jge
fsubr
clc
xor
xor
pop
jnp
cmps
stc
or
in
lock
jl
push
(bad)
jl
shl
adc
int3
cmp
pop
fnstcw
es
push
pusha
pop
jbe
or
jge
mov
sub
push
pushf
add
ficomp
ds
push
nop
or
ins
sbb
push
push
loopne
repz
sbb
cmp
add
cmps
sub
mov
pop
ss
ja
ins
ss
cmps
inc
adc
imul
je
sbb
sub
sub
jmp
(bad)
jg
sbb
mov
repz
in
push
add
rcl
mov
xor
andps
lods
mov
fwait
inc
nop
push
inc
mov
pop
enter
les
cmp
add
cdq
aas
dec
sub
mov
adc
push
and
in
mov
jl
inc
adc
pop
and
or
cmps
xor
dec
jae
test
in
add
mov
jo
pop
mov
xor
or
and
or
sbb
adc
out
inc
xchg
jo
pusha
inc
mov
dec
pop
push
dec
inc
push
cmp
adc
xor
sar
nop
inc
inc
inc
xchg
xchg
les
lds
pop
bound
data16
or
mov
leave
pop
int
(bad)
je
inc
add
les
push
push
hlt
fldcw
inc
lds
add
mov
sbb
ss
or
imul
pop
adc
push
push
test
push
pop
or
xchg
inc
mov
or
cmp
popa
inc
rcpps
push
fadd
sbb
or
xchg
inc
push
pop
fld
push
hlt
addr16
sub
add
cmps
cmps
aam
or
ins
dec
mov
in
pop
and
lods
(bad)
popw
cmps
xor
or
sahf
int
lds
or
enter
jbe
adc
dec
(bad)
(bad)
jns
aam
and
lea
cmp
bound
pop
aaa
and
jns
lods
mov
jle
mov
push
jle
fbld
push
imul
xor
lock
call
dec
int
add
add
adc
xchg
or
aaa
sub
mov
sbb
add
push
pusha
mov
cmp
push
gs
adc
test
mov
or
inc
xor
xor
stos
push
popa
and
inc
push
mul
jo
ret
(bad)
(bad)
ins
pop
enter
adc
adc
cli
inc
jmp
lods
bound
mov
jno
xchg
and
adc
jns
in
push
xchg
nop
mov
cmps
int3
pop
dec
adc
xor
sbb
enter
adc
mov
leave
push
inc
mov
ret
add
cli
mov
call
add
add
dec
fild
rcl
adc
cmp
scas
inc
xor
cmc
inc
div
add
das
xchg
shr
mov
mov
mov
sbb
sbb
out
inc
add
add
add
mov
mov
icebp
inc
add
jo
cmp
mov
fidiv
sbb
(bad)
jmp
and
and
mov
mov
mov
add
push
mov
mov
dec
mov
mov
mov
mov
ja
mov
add
movlhps
jb
inc
inc
inc
inc
inc
inc
pop
add
mov
cli
std
(bad)
mov
(bad)
mov
inc
mov
stc
mov
mov
mov
mov
pop
mov
imul
push
iret
sar
mov
ins
lahf
out
cmp
mov
outs
test
outs
imul
adc
jns
call
test
enter
jl
(bad)
mov
push
pusha
aam
rcr
jnp
push
push
fwait
pop
jle
aam
imul
clc
adc
xor
ss
pusha
inc
sahf
nop
jg
mov
ror
sub
out
jns
adc
mov
push
xchg
push
add
mov
push
pusha
push
jo
aam
jl
push
(bad)
sti
cmp
in
in
hlt
xor
out
jnp
jns
adc
mov
push
pop
pop
test
dec
ja
js
mov
ins
out
rol
or
xchg
mov
out
cmp
jae
je
sub
xor
div
or
push
mov
pop
out
frstor
push
push
push
add
cld
jns
in
jnp
clc
ds
jle
mov
lock
ds
and
data16
or
or
pop
stos
shl
cmp
bswap
int3
js
mov
cmps
pop
pop
int
int
add
and
inc
push
inc
sbb
sub
rcl
ss
push
pop
sub
mov
in
int
add
push
cdq
into
enter
loopne
je
push
iret
and
aam
addr16
popf
add
sub
xlat
pusha
ss
mov
nop
pop
pop
sub
pop
scas
pop
mov
pop
ror
push
inc
and
sub
pushf
mov
div
test
cmps
push
or
push
jge
or
adc
adc
mov
ret
xor
inc
pop
jmp
adc
xchg
sbb
not
add
sbb
sbb
nop
pop
push
xchg
jmp
xor
out
ins
mov
inc
lods
jmp
mul
test
(bad)
ins
add
xor
shl
sub
mov
daa
in
icebp
jle
mov
ror
shl
dec
add
clc
pushf
rol
loopne
or
shl
cmps
loopne
pop
push
cmp
or
or
leave
rcl
jmp
pop
add
bound
dec
dec
movs
test
neg
ins
push
dec
add
sub
pop
leave
pop
ror
add
pop
add
pop
sbb
arpl
lock
inc
movs
xchg
xor
or
repnz
dec
(bad)
out
(bad)
xor
dec
adc
inc
sub
leave
fld
pop
retf
or
sub
jbe
jb
xchg
or
cmp
fadd
cdq
nop
add
nop
xlat
xchg
inc
aam
lahf
xchg
sub
jae
jae
inc
sahf
xor
or
lea
movs
sar
sub
test
dec
shl
enter
mov
ins
imul
or
adc
or
or
xor
and
fwait
(bad)
rcl
or
dec
adc
aam
imul
loope
jmp
lahf
stc
push
aam
and
cmp
push
jnp
adc
inc
cmp
mov
xchg
aad
mov
add
and
ds
fs
ss
adc
jl
xor
inc
push
imul
rol
out
fnstcw
int
(bad)
push
push
enter
fadd
retf
or
mov
jl
lds
push
jb
(bad)
aad
push
and
xchg
aas
(bad)
mov
add
in
scas
push
ins
nop
sbb
cmps
push
cmp
pop
sbb
push
sbb
ins
enter
outs
test
in
loope
dec
ss
push
stos
cdq
ja
xor
xor
das
xchg
aam
enter
pop
mov
push
int3
aad
ret
push
add
mov
movs
ret
push
cmps
push
cmp
adc
mov
dec
sub
inc
test
in
jmp
movs
ret
cmc
iret
dec
ret
lea
mov
add
adc
mov
jp
jl
mov
dec
xor
lahf
pop
ror
imul
lods
sbb
addr16
and
ins
scas
or
and
xor
leave
add
movs
push
jge
repnz
movs
paddsb
sub
lds
sub
jb
jb
xor
add
fiadd
adc
xchg
scas
push
push
push
dec
dec
pusha
mov
dec
clc
mov
cmp
jne
jne
mov
adc
outs
mov
(bad)
push
xchg
cmc
dec
jne
xor
mov
ins
inc
adc
cmp
or
pop
jne
adc
dec
inc
xor
retf
add
push
out
xor
sub
adc
cmp
add
add
lahf
sbb
icebp
sbb
dec
cmp
push
imul
or
or
adc
ja
retf
pop
jae
jns
dec
inc
gs
ins
movs
lock
test
push
leave
pop
pop
adc
push
inc
push
inc
mov
pop
dec
daa
push
jo
daa
or
scas
adc
dec
loop
ins
popa
wrmsr
mov
xchg
push
sub
dec
mov
xchg
daa
dec
push
jo
mov
dec
enter
mov
xchg
mov
mov
mov
cmps
sub
add
arpl
or
add
mov
or
adc
or
mov
xchg
push
clc
mov
outs
daa
push
push
mov
mov
push
pop
inc
cmp
adc
push
dec
push
or
mov
sbb
inc
retf
dec
mov
pop
les
mov
push
(bad)
fdiv
sub
retf
pop
pushf
push
jnp
or
add
push
cmovo
dec
clc
mov
mov
push
aas
sbb
popf
inc
xor
div
dec
retf
push
dec
inc
cli
movs
jbe
pop
ficom
mov
les
sub
adc
inc
mov
mov
in
and
mov
lods
mov
lock
(bad)
and
mov
add
je
push
jne
push
mov
sbb
mov
fidivr
je
les
adc
push
mov
push
out
add
fild
outs
ror
adc
mov
fild
pop
hlt
add
pop
sub
cmp
mov
or
or
xchg
jb
repz
mov
popa
cmp
repnz
shl
xlat
dec
and
into
xchg
(bad)
mov
or
pop
and
add
outs
les
or
mov
cdq
pop
sbb
mov
mov
fs
mov
mov
ret
push
lahf
cmp
and
and
jmp
cmps
add
dec
rcl
mov
ret
jmp
fidiv
jne
dec
dec
jne
inc
xor
cmp
mov
push
cmp
es
xor
cs
or
dec
nop
push
or
mov
xor
mov
xchg
test
loopne
xchg
pop
div
or
adc
shl
sbb
sub
sub
xor
inc
shl
xor
scas
push
push
dec
or
push
clc
jg
add
mov
mov
popf
retf
ret
sbb
add
call
fwait
loope
cmp
sahf
mov
bound
je
sub
sub
lea
mov
mov
je
and
out
mov
movsx
test
or
scas
pop
inc
jp
xor
xchg
lock
(bad)
fmul
sbb
mov
repnz
hlt
adc
add
gs
pop
ins
or
dec
or
je
cmp
jne
mov
sub
push
sub
add
adc
adc
sbb
dec
inc
pop
xchg
xchg
push
retf
sub
sbb
pop
lea
inc
or
mov
inc
push
mov
jmp
or
(bad)
inc
cmp
cmp
or
and
in
xchg
loop
pop
cwde
adc
movs
ss
or
push
pop
in
and
sbb
add
cld
mov
dec
cmp
sbb
loope
sub
popa
mov
inc
add
int3
fst
and
lahf
xchg
pushw
sar
mov
iret
arpl
mov
arpl
or
inc
ret
and
sbb
dec
dec
sar
mov
sbb
mov
shr
push
cmps
fdivr
push
and
pcmpeqw
inc
cmp
lock
and
dec
mov
jl
or
sti
push
add
or
cmp
rol
xor
addr16
mov
fwait
test
pusha
sbb
sar
movs
pop
push
fs
dec
xchg
add
adc
inc
sbb
and
xlat
enter
sbb
pop
xlat
pop
add
aaa
repnz
and
mov
ins
loopne
or
mov
push
adc
cwde
mov
test
inc
push
mov
push
dec
dec
sub
in
jle
or
les
sbb
xor
mov
ror
sbb
inc
pop
push
push
dec
xchg
add
sbb
inc
rcr
jg
adc
pop
mov
imul
or
jge
loopne
ja
add
pop
enter
sub
mov
or
mov
mov
fisubr
xor
push
dec
cmp
jg
leave
retf
xchg
test
add
sbb
in
push
rcl
jp
mov
in
in
mov
add
retf
jp
idiv
cmc
lahf
(bad)
in
mov
inc
mov
cmp
add
inc
pop
jne
inc
je
in
popa
sbb
pop
movs
les
mov
in
sub
movs
test
daa
mov
dec
fld
adc
mov
dec
add
sti
or
lods
jmp
jae
push
not
movs
sbb
xor
add
gs
adc
call
xchg
mov
movs
loop
mov
in
sub
rol
xchg
cmp
shl
loop
cmp
fild
(bad)
adc
pop
add
xor
cs
btc
jle
xchg
fcom
ror
test
loope
add
cli
add
inc
test
sar
xlat
xor
mov
push
add
mov
faddp
mov
sub
mov
lock
idiv
cmp
fiadd
xchg
sbb
jo
or
je
jno
addr16
or
bound
xlat
jo
sub
mov
cmp
imul
inc
(bad)
xor
dec
mov
inc
outs
inc
mov
and
add
and
mov
add
mov
rol
in
fmul
and
or
pop
and
push
or
pop
addr16
mov
jno
popf
call
push
sahf
lods
retf
xchg
mov
and
lahf
sbb
inc
jne
and
loope
mov
js
shl
or
cmp
sub
in
pop
aas
or
pop
in
sbb
fs
jne
mov
xor
add
push
xchg
push
or
jne
push
jmp
and
jmp
push
push
mov
repnz
push
pop
add
imul
fadd
sbb
xor
imul
jl
data16
cmp
sar
cwde
jmp
or
jg
sub
fisttp
jge
push
mov
fs
mov
mov
sbb
mov
adc
adc
or
pop
adc
movs
retf
ins
les
add
push
xchg
mov
outs
ja
pop
or
mov
ror
cdq
dec
out
out
inc
push
lods
xor
cmp
lods
adc
int
add
gs
adc
and
xchg
inc
aas
cmc
add
fld
inc
std
ds
fwait
cmp
and
in
add
je
mov
push
xchg
xor
or
pop
sbb
jne
jno
test
xchg
fcomp
sub
sub
sub
in
inc
cmp
sbb
sub
fdiv
sub
add
and
inc
add
add
dec
adc
jae
test
mov
fiadd
xlat
cmp
xor
jmp
mov
pop
cmp
adc
jl
xor
popf
cmp
jl
dec
xlat
ficomp
cmp
bndstx
adc
adc
mov
rol
inc
pop
push
je
pop
ror
data16
fbld
sbb
sbb
add
sub
fld
ret
das
jne
(bad)
out
inc
loop
mov
push
and
out
je
inc
test
push
adc
jne
xchg
sbb
pop
imul
movs
adc
fwait
in
jle
loop
pop
or
xlat
and
test
mov
and
aad
add
imul
or
out
pop
movs
aam
rcr
add
scas
js
and
or
pop
fmul
and
push
mov
sub
pop
jnp
push
sahf
pop
cmp
(bad)
dec
les
hlt
sbb
adc
repnz
mov
xlat
aad
mov
and
stc
mov
xor
fs
dec
fs
fiadd
iret
sbb
dec
xor
dec
imul
jno
mov
add
xor
test
cmp
sub
cmp
pop
aas
and
iret
or
(bad)
lea
mov
adc
mov
and
mov
fist
dec
or
imul
cmp
pop
sub
add
and
add
ficomp
in
xor
and
imul
stc
ins
pop
pusha
and
xor
push
adc
daa
sbb
sbb
stc
sbb
sub
mov
aad
or
fiadd
xor
dec
sub
jns
push
xchg
sbb
push
push
das
loopne
add
push
sbb
and
sbb
inc
stos
dec
and
mov
xor
inc
fsubr
and
movs
jnp
loope
and
daa
scas
iret
and
lods
mov
popf
add
xchg
jecxz
in
sub
(bad)
hlt
scas
shl
mov
inc
mov
inc
sbb
add
mov
sbb
pop
push
sub
jecxz
cmps
mov
retf
repz
adc
mov
out
xor
and
loopne
les
dec
add
fcomp
out
in
add
mov
call
push
push
imul
fwait
ja
js
add
dec
add
pop
jno
and
sbb
or
mov
mov
sbb
add
pusha
inc
or
push
sbb
add
push
adc
dec
cli
mov
mov
mov
sbb
push
cmp
scas
mov
inc
es
cmp
xor
jb
mov
adc
inc
sub
cwde
or
(bad)
cmps
call
addr16
pop
sbb
lock
enter
(bad)
das
stos
add
nop
hlt
mov
adc
stos
push
push
sar
mov
adc
xor
mov
xchg
gs
add
jno
sub
je
sub
push
add
icebp
outs
aas
fwait
neg
xor
jge
mov
or
jmp
jno
mov
and
nop
add
ins
lea
stc
push
and
jne
cmps
adc
in
clc
sub
mov
arpl
inc
sub
(bad)
mov
retf
push
mov
adc
push
inc
xchg
jle
pop
push
mov
cmp
jae
or
outs
inc
and
or
or
and
fucom
outs
mov
arpl
jae
and
dec
pop
ret
pop
sbb
add
adc
sub
or
sbb
mov
pop
dec
sub
inc
push
adc
je
push
pop
jo
add
and
xchg
les
scas
jno
add
mov
pshufw
je
pusha
jne
jno
inc
jp
test
out
adc
sub
mov
addr16
jb
and
mov
in
(bad)
pushf
lods
sub
inc
fimul
stc
nop
daa
dec
adc
hlt
scas
xchg
add
retf
je
dec
push
jecxz
sahf
push
call
int
popa
dec
stc
(bad)
dec
dec
or
pusha
fnstcw
xchg
push
out
and
rcl
popa
jecxz
dec
mov
lahf
pop
mov
pushf
jge
mov
in
mov
retf
sbb
and
dec
(bad)
jmp
xor
xor
sbb
jne
pop
add
imul
add
push
and
add
pop
inc
ins
sub
push
or
and
addr16
inc
ret
pop
in
test
xchg
xchg
imul
outs
shl
lds
add
adc
ins
je
clc
xchg
stc
dec
dec
js
int3
dec
inc
test
adc
test
xor
xor
push
adc
test
ins
hlt
imul
jne
inc
popf
not
cmps
adc
fdivr
xor
sti
movs
mov
outs
outs
sub
or
push
clc
fiadd
jecxz
mov
pop
lea
add
aas
iret
pop
arpl
or
add
jge
clc
jb
pop
cwde
(bad)
inc
std
test
sbb
mov
aas
rol
ins
mov
sub
push
pusha
enter
mov
(bad)
and
imul
jns
xor
pop
test
add
cmp
push
sub
pop
jp
arpl
sub
inc
ds
sbb
mov
shl
mov
ins
or
or
add
es
fstp
stc
sbb
xor
rcl
cdq
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
inc
call
cmp
push
or
inc
fst
aaa
and
jbe
cmp
cmp
mov
je
cmp
or
push
xchg
add
sub
mov
xchg
in
in
push
xchg
scas
sub
cli
inc
pushf
es
pop
adc
inc
or
add
mov
outs
push
hlt
and
jl
push
cmp
test
fstp
xchg
les
pop
xchg
in
or
inc
or
dec
push
mov
enter
jg
sti
inc
jb
rol
cmp
and
ins
add
inc
(bad)
and
sub
repnz
sti
inc
ror
(bad)
and
fiadd
out
or
loope
or
lods
mov
mov
fmul
into
mov
loop
and
and
ins
aad
(bad)
ss
push
mov
lea
ins
or
(bad)
sub
in
lods
popf
sbb
test
xor
mov
xor
add
imul
pop
leave
and
adc
lock
sub
jae
mov
xlat
retf
inc
jae
mov
andnps
test
sbb
in
mov
daa
call
enter
adc
add
push
cmp
dec
je
add
mov
add
and
pop
add
std
(bad)
push
xchg
dec
or
cmp
pop
js
clc
clc
aas
inc
loop
shl
in
xlat
sysenter
pop
add
shr
push
xchg
outs
(bad)
jmp
rcl
pop
cmp
js
call
out
push
push
or
push
call
fcom
pop
inc
and
in
dec
je
sbb
cmp
aad
js
cmp
sub
mov
add
dec
mov
pop
or
jle
fcom
push
pop
add
jle
inc
(bad)
xchg
inc
enter
mov
pop
add
push
inc
call
or
(bad)
xlat
adc
les
shl
xchg
fwait
add
pop
sub
popa
push
dec
sub
cmp
and
outs
xchg
mov
(bad)
pop
mov
sbb
call
jno
das
imul
push
inc
ins
mov
inc
sbb
lea
sub
or
cmp
lea
pop
pop
daa
or
or
adc
mov
das
xor
cmps
xor
ins
mov
mov
popa
mov
jle
mov
xlat
std
dec
lock
sbb
js
xor
push
push
push
pop
shl
pop
packsswb
sbb
jecxz
(bad)
cmp
ret
or
pop
das
ins
out
push
rol
cmp
shr
xchg
icebp
sbb
and
inc
add
cmc
ins
iret
inc
lock
add
adc
movs
std
push
or
and
inc
jne
sub
dec
jne
mov
sbb
and
pop
mov
sub
outs
cdq
cmp
rol
adc
or
inc
lea
pop
mov
call
push
dec
sbb
into
je
addr16
jle
fldcw
inc
leave
xchg
ins
je
inc
xchg
jns
add
pop
loop
or
dec
enter
or
mov
add
(bad)
iret
sub
mov
xor
sbb
dec
mov
and
(bad)
push
xchg
sbb
test
loop
xor
add
jmp
mov
mov
dec
mov
mov
call
xlat
call
push
div
cmp
push
or
jp
or
xchg
in
cs
fadd
adc
or
mov
cmps
jmp
add
icebp
xchg
jmp
push
xchg
sub
cmp
xchg
iret
jl
stos
sar
pop
push
enter
aam
or
ret
or
jmp
hlt
jns
cmps
pop
cdq
xchg
add
outs
movs
adc
adc
inc
mov
movs
add
pop
loope
fdivr
jne
xor
add
loopne
push
jbe
xchg
in
push
dec
push
push
dec
dec
mov
add
movs
call
and
mov
cmps
sub
pushf
in
out
push
pop
aaa
mov
inc
stc
ret
aam
xor
jp
jns
call
test
test
jle
inc
xchg
push
sbb
push
addr16
mov
mov
inc
mov
ror
cdq
mov
je
mov
mov
mov
hlt
or
xor
cmp
pop
sub
lock
into
or
cmp
pop
inc
ins
inc
js
mov
mov
cdq
mov
loop
add
add
inc
sub
pop
inc
xlat
mov
ins
mov
xlat
imul
mov
mov
push
jne
vmwrite
sub
inc
xchg
and
sub
imul
cmp
and
push
shr
mov
das
push
push
in
add
imul
sub
daa
fdivr
add
sub
rcr
lea
shl
rcr
out
sbb
or
lods
jo
inc
jns
mov
jl
cwde
or
jmp
addr16
inc
xchg
xchg
mov
inc
test
scas
mov
addr16
leave
arpl
dec
fcom
or
mov
leave
das
add
add
pop
je
adc
lock
add
cmp
pop
and
push
pop
cdq
jp
ins
inc
and
jg
or
rcl
cmp
jae
xchg
test
push
mov
or
adc
add
gs
xlat
push
or
push
adc
aam
jne
xchg
xor
mov
das
fs
lock
imul
xchg
xchg
loopne
and
mov
clc
cmp
push
(bad)
sti
stos
bound
xor
bound
or
fsub
xlat
sbb
pushf
or
cmp
cdq
sub
repnz
test
add
inc
pusha
mov
dec
pop
push
cmp
pop
retf
cmp
mov
and
in
pop
sbb
pop
sbb
jmp
pusha
sub
test
add
sub
dec
cld
jb
push
sub
test
mov
sub
adc
xlat
movs
sbb
add
push
xchg
inc
jbe
or
inc
dec
stos
neg
jl
popa
es
mov
stc
int3
in
es
aam
inc
ja
push
nop
test
(bad)
push
add
push
nop
div
and
lahf
jb
push
or
xchg
movs
inc
hlt
xor
pop
jb
adc
add
cli
(bad)
xchg
test
mov
add
inc
add
or
loope
xor
(bad)
popa
adc
jle
push
add
call
add
out
push
pop
je
imul
clc
adc
in
jbe
cwde
ds
sub
jo
and
sar
or
adc
xor
pop
add
adc
xor
and
pop
add
sub
cmps
test
or
call
nop
int3
pushf
add
adc
pop
rcr
sbb
dec
adc
mov
in
add
or
sub
inc
add
adc
and
mov
fs
mov
inc
pop
shl
repnz
ins
loopne
lahf
push
sub
test
adc
and
cmp
jp
dec
nop
or
pusha
sahf
mov
sbb
mov
out
adc
dec
and
int3
pusha
add
aam
inc
test
in
add
adc
inc
and
sbb
loopne
push
test
xor
lsl
pop
sub
stos
sbb
jmp
sbb
jnp
arpl
imul
cmp
ret
call
sahf
daa
xor
sub
dec
adc
xchg
loopne
adc
or
mov
pop
inc
and
cld
test
lods
xor
add
jns
mov
pop
mov
sub
inc
push
test
xchg
and
mov
sub
test
or
push
pop
xor
sbb
out
jge
mov
inc
test
clc
and
inc
push
and
jne
mov
mov
icebp
adc
mov
jne
xchg
mov
mov
mov
pop
rol
aad
xchg
pop
xchg
or
mov
add
mov
cli
dec
add
int
adc
and
or
test
out
sub
(bad)
and
cmp
mov
cmp
xor
add
jnp
cld
mov
pop
movs
or
std
clc
cmp
add
int
popf
fmul
mov
xchg
dec
xor
mov
clc
cmp
into
pop
dec
xchg
push
jns
or
pop
push
add
push
das
add
nop
mov
(bad)
jle
push
xor
es
dec
dec
cwde
jmp
dec
mov
mov
adc
lea
(bad)
jo
dec
push
and
mov
mov
inc
popa
lea
fbld
xchg
stos
dec
mov
inc
push
es
jae
adc
adc
adc
into
adc
push
push
push
jo
addr16
fistp
jbe
je
mov
mov
jg
test
ret
push
xchg
push
fs
fistp
adc
pop
xchg
and
sbb
adc
movs
enter
cmps
push
or
adc
mov
sbb
push
xor
or
jmp
loop
cmp
imul
dec
and
or
ficomp
mov
fwait
and
push
jo
push
jo
or
cs
pop
pop
sub
pusha
pusha
inc
fwait
in
cmp
gs
pop
data16
fild
jne
popa
add
ja
add
pop
xor
inc
shl
movs
div
imul
(bad)
sub
xor
add
or
cmps
mov
push
test
daa
in
nop
mov
jno
outs
cmps
mov
add
inc
dec
movs
scas
sbb
and
ficom
xchg
fsub
xlat
(bad)
outs
rol
adc
dec
inc
jl
or
adc
pop
mov
out
adc
imul
inc
cmp
fild
jo
jl
dec
mov
aas
lods
mov
adc
xor
inc
push
sbb
(bad)
and
add
mov
push
stos
dec
jecxz
dec
dec
rol
stos
cmp
sub
mov
(bad)
fdiv
sub
or
adc
push
jecxz
xchg
inc
jg
xor
out
jmp
dec
and
jbe
jg
inc
cmp
jne
add
loopne
pop
push
adc
inc
add
dec
mov
add
jge
mov
inc
inc
(bad)
ret
add
inc
fcmovnbe
dec
pop
sub
mov
in
add
shl
dec
les
rol
xor
push
imul
jl
add
inc
and
aam
push
pop
adc
or
push
out
fwait
jo
fld
or
sub
fld
cmp
nop
add
call
popa
jae
out
sub
push
cmp
mov
cmc
xchg
pop
cmp
mov
in
inc
std
xor
mov
push
and
nop
lods
sub
and
mov
loopne
mov
call
push
xchg
movs
arpl
or
mov
test
cmp
retf
add
sub
(bad)
pop
adc
pop
xor
pop
test
cs
fistp
(bad)
mov
inc
aas
sbb
call
outs
fs
dec
dec
push
popa
movs
sbb
dec
pop
(bad)
mov
xchg
and
repz
or
dec
fldenv
jecxz
dec
cmps
add
ins
adc
and
mov
add
add
pop
mov
inc
pop
out
xor
in
sub
push
add
or
or
scas
xchg
nop
add
ret
adc
or
pop
mov
mov
pop
dec
and
gs
inc
sub
out
cmp
adc
jne
mov
sbb
js
and
mov
arpl
mov
mov
shl
cmp
(bad)
inc
dec
sub
iret
daa
dec
adc
mov
inc
stos
cmps
adc
jp
xor
mov
add
movs
xchg
push
xchg
mov
(bad)
jnp
jl
jl
pop
out
or
popf
mov
push
add
inc
fmul
adc
daa
add
sub
add
or
test
stos
and
popa
fidivr
jb
(bad)
xchg
cmp
jne
adc
jmp
movs
jmp
mov
mov
fist
inc
adc
loope
or
or
xor
clc
sub
test
or
jg
mov
mov
add
mov
hlt
arpl
cmps
sub
inc
cmp
xchg
mov
ret
je
cwde
mov
lods
pop
push
add
sti
outs
push
mov
call
loop
pop
fild
repnz
mov
(bad)
cli
and
in
cld
clc
repnz
ja
inc
lock
fcomp
sbb
or
dec
xchg
push
test
mov
loopne
test
pop
mov
loope
pop
mul
inc
lds
bound
not
mov
inc
add
jae
push
jne
add
sbb
pushf
ret
inc
adc
test
sbb
cs
icebp
ins
ja
xchg
adc
fdiv
jb
and
fsubr
(bad)
enter
loopne
clc
js
test
add
mov
xchg
call
xor
mov
cld
(bad)
or
dec
mov
lock
push
les
clc
or
xchg
dec
pop
or
int3
adc
pop
xchg
push
and
xor
and
push
loopne
and
ins
rcl
add
adc
jmp
sbb
jecxz
and
dec
pop
xchg
pushf
pushf
fcomp
sbb
(bad)
cmc
mov
push
and
fisttp
sub
loopne
(bad)
sub
ret
in
fisub
arpl
inc
adc
(bad)
mov
(bad)
aaa
call
jnp
mov
das
in
or
inc
sbb
mov
inc
and
jmp
js
ror
mov
nop
addr16
sbb
mov
pop
lock
pop
mov
nop
jge
or
dec
adc
jecxz
loopne
lock
push
add
lods
jo
sbb
mov
push
push
mov
pop
jle
dec
mov
je
pushf
push
xor
sahf
and
add
sub
cmp
or
pop
sub
adc
or
ret
adc
and
inc
fisubr
aas
xchg
cmp
inc
or
xor
pop
pusha
daa
daa
mov
xor
in
push
movs
xor
cdq
imul
dec
arpl
shl
sub
or
pusha
and
or
xor
and
pop
xchg
outs
and
adc
add
cmp
movs
jmp
jno
dec
(bad)
sub
sbb
(bad)
loopne
mov
inc
shl
ret
sbb
push
pop
aam
jnp
cmp
and
lea
inc
pop
adc
sbb
jmp
call
xor
and
or
nop
(bad)
inc
add
hlt
shl
pop
or
sub
retf
bound
dec
(bad)
jp
or
or
sbb
icebp
xor
adc
lea
adc
sti
inc
aad
js
jne
pop
push
imul
fstp
dec
inc
bound
in
inc
add
mov
and
cmp
ins
out
or
call
jnp
dec
lods
push
dec
jne
mov
call
add
xor
stc
in
adc
sbb
cdq
cwde
inc
loope
retf
jmp
enter
int3
and
sub
dec
sbb
(bad)
adc
pop
add
mov
push
mov
push
sbb
pusha
push
daa
pop
scas
int
jbe
jmp
pop
sub
jecxz
je
jle
and
push
inc
jl
or
lahf
push
push
push
cmps
test
fs
aas
sub
std
cmp
mov
xchg
fist
shl
js
mov
mov
inc
mov
inc
addr16
xor
mov
cmovge
rcl
inc
mov
mov
mov
fst
push
int
fadd
loopne
lahf
and
mov
ja
mov
data16
xchg
div
push
add
push
or
adc
lock
je
movs
mov
jbe
ins
push
ror
xor
push
pop
push
jb
repnz
push
sub
or
ret
in
or
nop
mov
cmp
adc
test
xor
hlt
sub
sub
xchg
aas
int3
add
adc
jns
out
pusha
jge
rcl
or
int
bound
push
jmp
sub
push
add
add
xchg
or
inc
cdq
ins
movs
cdq
sub
aam
lea
xor
fcom
jecxz
mov
push
and
adc
addr16
add
lock
jp
pushf
aad
inc
cmp
xchg
outs
ror
jae
imul
jmp
add
std
inc
icebp
dec
pop
mov
add
add
or
sbb
mov
pop
mov
call
loopne
fidiv
mov
(bad)
int
pop
mov
dec
fld
scas
sbb
je
mov
add
cmp
sub
out
push
cmpxchg
inc
add
add
sub
ins
out
xchg
push
test
cmp
pop
mov
test
movs
push
stos
push
sub
add
or
les
add
add
push
lods
and
inc
mov
push
int
out
and
es
cmp
mov
xchg
or
clc
cmps
add
or
dec
sub
sbb
sub
and
jae
js
mov
sbb
pusha
je
(bad)
nop
mov
mov
jb
or
add
push
push
jbe
push
sub
mov
xor
pop
pop
or
fcomp
out
sub
loope
or
mov
sub
bound
dec
sub
adc
lods
inc
lea
into
repnz
adc
sti
neg
sub
jmp
or
push
(bad)
jmp
fisttp
ins
popf
sbb
aas
xchg
mov
cmp
jne
lea
mov
fucomi
cmp
sub
hlt
lods
ins
pop
adc
div
test
je
fwait
(bad)
dec
cmp
hlt
or
arpl
cmp
rcl
push
dec
sbb
add
sub
pop
or
or
dec
dec
dec
add
jmp
push
inc
pop
ss
ret
add
clc
cwde
dec
loop
mov
loopne
inc
inc
bnd
aas
xchg
out
cwde
mov
add
and
and
xchg
push
iret
cmp
mov
push
das
adc
inc
ins
add
mov
dec
mov
(bad)
pop
lahf
inc
loopne
pop
jb
pusha
cmps
idiv
mov
adc
pop
or
cmp
in
rol
mov
mov
ror
mov
cmp
adc
sbb
cmp
and
xor
pop
push
sbb
adc
arpl
popa
and
sub
ja
ds
popf
ret
inc
inc
dec
jmp
jbe
repz
test
mov
and
jb
dec
ins
jle
and
cs
mov
mov
pop
adc
cwde
test
aas
or
fimul
or
outs
mov
push
push
cmp
push
ret
rol
inc
lock
jbe
call
sub
adc
pop
jl
test
mov
cmp
enter
hlt
js
es
sbb
or
mov
pop
add
mov
imul
das
dec
popf
push
dec
cmp
popa
pop
fs
arpl
outs
cdq
add
adc
pop
repnz
or
cdq
push
push
pop
mov
les
push
cwde
adc
mov
or
aam
push
es
adc
adc
xor
ins
shl
inc
ins
popf
push
arpl
and
mov
add
sbb
push
add
pop
sub
add
or
dec
cwde
sahf
sbb
pop
ror
mov
test
cmp
or
mov
adc
fwait
adc
(bad)
adc
sbb
fldenv
push
inc
enter
cmps
shl
push
or
dec
loopne
in
xchg
pop
xchg
rol
das
inc
or
ret
xchg
cmp
jg
ins
sbb
or
push
or
nop
xor
fs
push
mov
pushf
inc
repz
xor
sbb
rcr
or
stc
xchg
jmp
pop
add
pop
adc
jg
mov
jmp
arpl
out
jbe
pop
(bad)
sbb
retf
jl
jmp
xor
lea
call
idiv
mov
xchg
into
jg
jo
mov
xor
dec
fwait
mov
dec
ret
jle
(bad)
call
repnz
add
lahf
jns
jo
fstp
cs
inc
cmps
xchg
sub
in
add
inc
pop
scas
add
push
scas
xchg
ror
sbb
xor
sbb
arpl
mov
enter
pop
inc
ja
xchg
pop
add
xor
cmp
adc
mov
mov
ret
mov
pop
mov
clc
mov
jb
push
mov
rcl
push
xchg
retf
aam
jecxz
xchg
cdq
push
dec
popa
pop
rcr
jne
ja
push
xor
push
sbb
inc
push
loopne
add
mov
imul
retf
push
or
adc
adc
mov
je
hlt
adc
dec
aam
adc
push
ror
and
pop
push
out
sbb
xchg
in
shl
aaa
inc
pop
aas
sbb
test
pop
push
push
daa
mov
add
ficom
data16
xchg
inc
mov
sbb
jae
inc
inc
jecxz
and
shr
jns
pop
add
rcl
inc
push
add
xor
retf
(bad)
pop
ret
aad
enter
outs
dec
test
lods
cmps
jo
lods
xor
mov
test
cmp
stos
or
adc
adc
jle
cmps
xor
cs
or
sub
xchg
or
dec
es
test
pop
dec
sub
sahf
add
inc
sbb
cmp
push
push
lods
xchg
pop
sbb
and
aaa
add
popf
or
fadd
inc
inc
fwait
cmp
add
pop
and
xor
pop
or
jl
add
sar
push
cmps
add
jmp
clc
xor
loop
ins
sbb
cmc
pop
push
push
dec
sbb
clc
jle
sub
or
je
mov
add
hlt
inc
in
add
push
pop
xor
and
add
or
inc
or
imul
js
shl
inc
dec
lea
cmp
pushf
mov
cmps
add
xchg
sbb
lods
ror
test
bndldx
or
or
push
xor
inc
adc
sbb
cwde
rcl
add
test
cwde
fistp
pop
aas
pop
xchg
xchg
sub
ds
pop
push
adc
pop
push
push
inc
shl
test
jecxz
xchg
icebp
outs
(bad)
sub
push
adc
pop
push
dec
lods
jne
cmp
stos
jb
cmp
gs
and
adc
xor
adc
sbb
xor
popf
fcmovnb
jbe
mov
popf
je
ret
dec
daa
or
mov
rcpps
addr16
cli
inc
xor
mov
sbb
mov
jmp
dec
add
daa
dec
fsub
cld
call
cld
push
inc
or
adc
xlat
sbb
sub
pop
xor
inc
(bad)
and
retf
mov
test
pop
mov
cmp
ror
push
sub
fmul
hlt
or
dec
dec
push
dec
or
add
mov
push
cld
ins
add
pop
mov
pop
or
test
adc
addr16
or
and
pop
add
push
dec
xor
jmp
sbb
pfmin
(bad)
ficomp
add
add
in
jae
ss
adc
mov
lock
aam
cld
sub
mov
fst
popa
mov
add
adc
mov
pop
xor
xchg
cli
call
lea
add
lea
jb
test
push
adc
adc
add
arpl
inc
enter
ss
cli
jo
mov
dec
jo
xlat
mov
push
push
out
pop
leave
mov
aas
sub
jb
pop
and
inc
add
inc
or
jb
ss
pop
push
mov
jge
je
(bad)
lahf
xor
jecxz
(bad)
cwde
push
loop
dec
cwde
push
(bad)
xchg
adc
ins
loop
mov
inc
mov
push
adc
adc
cmp
inc
xor
and
push
(bad)
es
sub
sub
or
(bad)
dec
add
xchg
fcomp
jae
(bad)
div
dec
pop
ja
cmc
jbe
xchg
stc
xor
dec
pop
jp
pop
jge
pop
mov
and
scas
sub
and
lock
jo
mov
test
push
add
ins
cmp
push
add
xchg
xchg
push
jmp
mov
fwait
mov
fidiv
xor
clc
cmp
iret
xor
and
xor
fwait
lahf
inc
rcr
xor
mov
scas
movs
call
or
bnd
sbb
mov
in
aam
int3
scas
cmp
inc
inc
dec
ins
sbb
stos
and
scas
pop
ror
sub
call
dec
daa
mov
(bad)
mul
add
fiadd
sbb
sbb
inc
mov
add
add
mov
adc
sub
or
daa
adc
pop
mov
adc
push
mov
sbb
cmp
mov
les
int3
push
push
in
idiv
jl
movs
movs
mov
dec
je
mul
ret
sub
sub
adc
adc
ja
adc
or
cmp
adc
movs
pop
cmp
cmp
or
add
bound
mov
pop
mov
lods
daa
pusha
and
mov
or
shr
pop
sub
xor
xor
nop
(bad)
mov
(bad)
jmp
mov
jno
outs
or
sahf
xor
ror
mov
xor
fsub
pop
mov
ret
sub
inc
addr16
daa
test
jb
aad
mov
clc
push
jnp
sbb
push
and
add
das
and
cwde
or
lahf
fsubp
push
xchg
(bad)
jle
mov
inc
test
or
outs
js
push
(bad)
dec
jae
mov
out
fcomp
cmp
call
push
iret
int3
xchg
push
outs
outs
push
inc
jne
adc
mov
inc
adc
mov
rcr
call
mov
mov
or
dec
mov
or
das
pusha
and
enter
add
adc
mov
mov
cmp
pusha
adc
jne
ss
or
outs
fs
push
mov
cld
mov
movs
test
inc
jg
xor
sbb
mov
mov
mov
je
fiadd
cs
test
jmp
cmp
add
cmp
mov
imul
into
xchg
cwde
or
pop
or
mov
mov
dec
mov
pop
xor
or
push
xchg
inc
or
xor
or
jmp
mov
adc
xchg
cmp
stos
inc
mov
push
or
dec
stos
in
add
lahf
mov
dec
cmp
cdq
add
xor
int3
push
adc
sub
dec
pop
nop
xchg
inc
fisubr
dec
push
jne
enter
aam
adc
xchg
or
in
out
pop
(bad)
loopne
aam
mov
icebp
and
adc
hlt
into
add
movs
and
add
pop
fsub
mov
add
(bad)
(bad)
dec
xor
fistp
cmp
pop
xchg
aam
nop
dec
jmp
pop
jge
enter
pop
in
rcl
outs
sbb
xor
out
cmp
popa
add
arpl
(bad)
clc
call
cmp
daa
in
or
push
inc
inc
repnz
or
xchg
arpl
pop
push
(bad)
int
das
cmp
adc
cmp
call
cmovp
dec
pop
aaa
xchg
das
mov
dec
or
or
pop
adc
push
add
std
sbb
inc
adc
jb
mov
ins
addr16
cmp
fdiv
outs
jge
or
adc
adc
and
mov
loop
mov
jns
xor
nop
cmps
movs
nop
mov
xchg
test
mov
fstp
mov
sub
out
test
sub
jmp
pop
jne
mov
ins
sbb
push
lock
loope
rcr
movs
cmp
add
add
jns
scas
test
in
jmp
sub
jmp
arpl
and
inc
(bad)
imul
sub
and
adc
inc
adc
sub
xor
cmc
jno
mov
and
xlat
pop
pop
sub
sbb
fsub
lods
dec
loope
and
pushf
shr
mov
inc
and
pusha
jb
sub
cmp
stos
mov
push
ficomp
dec
push
add
in
inc
sub
dec
xor
push
xchg
ja
cmp
loopne
inc
xchg
push
cmp
pushf
fcomi
push
pop
daa
pop
add
ja
mov
(bad)
jle
sub
add
jmp
or
or
sub
in
inc
inc
dec
jnp
cmps
out
(bad)
(bad)
lea
fdivr
xchg
dec
sbb
lods
and
pusha
adc
ret
sbb
fwait
cmp
xchg
cmp
xchg
movs
mov
test
sahf
idiv
inc
pop
xor
shr
push
movs
outs
sub
add
jmp
add
pop
jmp
fsubr
or
sub
mov
xor
add
add
lock
ins
sbb
pop
xchg
or
mov
and
dec
push
xor
mov
sbb
sbb
jo
add
int3
and
and
adc
push
sti
cmp
or
xchg
and
cmp
mov
inc
push
ds
addr16
daa
inc
and
(bad)
js
and
xor
test
add
pop
add
and
xchg
rcr
inc
lock
sbb
fstp
add
and
mov
mov
ds
retf
call
sbb
jb
leave
sub
test
in
sub
iret
call
addr16
addr16
and
pop
fnsave
push
sbb
dec
(bad)
jecxz
gs
fcom
or
inc
mov
(bad)
ja
das
lock
pop
cmps
mov
add
sub
adc
clc
fstp
cmp
jne
lea
add
aad
rcr
xchg
mov
or
clc
das
ss
pop
dec
dec
cmp
test
xor
xor
sub
into
cld
inc
mov
adc
xor
gs
cs
neg
push
cmp
push
call
pop
add
in
stc
or
and
cmp
pop
xchg
popf
dec
mov
sar
iret
add
pop
or
xchg
clc
jg
xor
add
xor
mov
int
into
pop
(bad)
fld
pop
cmps
jne
(bad)
rcl
iret
add
cmp
inc
popa
jmp
xor
fcmovbe
mov
sbb
or
jne
dec
sub
in
(bad)
ja
cmps
gs
add
add
in
loop
mov
sbb
adc
pop
aas
sub
cmp
iret
ret
pop
(bad)
xchg
sbb
adc
or
push
imul
adc
add
fs
add
push
xor
and
push
mov
(bad)
dec
jns
xchg
adc
dec
xchg
fisub
(bad)
sub
jae
(bad)
mov
mov
in
mov
jbe
xlat
ins
std
sbb
nop
xchg
sbb
adc
lea
jecxz
dec
or
add
das
test
and
out
pusha
push
out
adc
call
fisttp
push
push
pop
ret
push
mov
jne
and
xchg
lock
push
ret
stos
dec
aas
in
mov
push
nop
dec
repz
(bad)
ins
ss
sbb
pushf
mov
iret
enter
xor
and
stos
imul
push
dec
sub
mov
shl
xchg
dec
adc
dec
mov
mov
aaa
dec
fucomip
dec
pop
fsub
push
movs
jmp
inc
or
jae
loopne
and
bound
int
and
imul
inc
clc
rcr
lea
rcl
mov
mov
jge
jmp
je
pop
ins
lods
clc
mov
add
xchg
repz
add
inc
adc
fstp
jo
loop
or
shr
fisub
sub
fiadd
or
adc
push
div
or
and
push
adc
mov
add
retf
mov
in
jbe
mov
test
mov
outs
ret
loope
lea
cmps
cdq
add
rcr
jmp
sbb
ins
inc
(bad)
xchg
mov
daa
(bad)
mov
dec
dec
jne
test
inc
sub
xor
daa
mov
cmp
mov
inc
das
cmc
in
add
mov
in
and
sub
adc
sub
cwde
push
or
cmp
cmp
inc
sbb
jecxz
xlat
stos
and
adc
pop
xor
and
pop
push
ss
xlat
mov
pop
nop
or
iret
push
add
cwde
pop
lods
out
add
(bad)
jmp
das
inc
sub
inc
push
push
mov
rol
into
movs
repnz
sub
cli
pop
rol
mov
push
dec
popa
outs
cli
xchg
loope
or
idiv
and
jmp
add
pop
mov
add
jge
movs
std
scas
jl
imul
add
push
or
rol
mov
add
mul
jno
js
push
and
daa
sbb
int
call
ror
fld
jb
mov
cmp
xor
or
sbb
cmp
sar
fwait
adc
mov
adc
or
xlat
int3
mov
add
pop
add
pop
push
pop
mov
cwde
and
rcl
add
mov
daa
and
jp
and
fsub
rcl
fwait
test
and
and
enter
dec
cmps
(bad)
fld
or
xchg
xchg
inc
inc
and
add
mov
inc
adc
xchg
mov
cmp
inc
ins
inc
addr16
xlat
popa
repnz
fnstcw
(bad)
sub
and
(bad)
push
ss
mov
lea
pop
pusha
cmp
aas
jl
add
dec
sub
aad
or
cwde
ins
add
push
mov
dec
clc
or
dec
mov
aam
inc
adc
dec
push
imul
and
xchg
ficom
add
pop
sbb
push
push
icebp
je
cmp
inc
push
rcl
push
xor
push
test
sbb
dec
test
cmp
and
adc
das
inc
call
jo
dec
push
or
add
jae
test
add
inc
pop
pop
aad
mov
sbb
and
adc
lea
mov
test
and
xor
shl
pushf
xchg
jbe
cwde
es
jo
xchg
rol
and
sbb
cmp
jbe
add
je
and
cmp
jnp
mov
(bad)
aas
push
scas
or
pop
(bad)
nop
nop
lods
and
push
pop
mov
push
pop
mov
test
sbb
cmp
imul
hlt
sub
les
(bad)
in
fstp
lock
jecxz
jg
push
push
aam
or
inc
mov
mov
dec
enter
push
push
inc
inc
push
aam
movs
fwait
aas
in
xchg
jns
or
adc
sbb
and
imul
push
daa
xchg
stos
mov
inc
shr
mov
sbb
repz
dec
xor
pop
mov
dec
pop
jae
scas
pusha
ret
mov
dec
fimul
fsub
dec
ins
jl
mov
or
or
dec
mov
ss
out
dec
repnz
inc
imul
dec
imul
sbb
and
xchg
add
pop
inc
cmp
das
jno
push
mov
ficomp
push
clc
cmp
inc
ret
adc
leave
mov
mov
push
(bad)
xchg
shl
or
inc
jmp
popf
das
pop
adc
xchg
and
pushf
repz
fstp
inc
add
push
repnz
push
sub
xchg
add
xchg
jno
mov
mov
stos
jmp
push
pop
jle
or
clc
cs
das
add
pop
xlat
scas
or
sbb
xchg
xor
adc
dec
pop
arpl
or
pop
and
je
or
inc
gs
jb
mov
std
adc
mov
lods
outs
imul
push
sub
jnp
adc
and
ret
push
jmp
push
mov
adc
jg
dec
mov
imul
adc
sub
dec
push
jno
xor
iret
add
mov
fisttp
aad
dec
sub
cmpps
cdq
add
mov
iret
inc
es
jge
lock
mov
push
movs
push
fdiv
dec
(bad)
xchg
xchg
xor
push
and
cmps
test
cmp
inc
dec
or
(bad)
jne
push
mov
icebp
add
cmp
into
test
sbb
sub
hlt
popf
add
pop
inc
fdiv
inc
and
sbb
les
mov
adc
sub
out
cmp
sub
push
aam
push
add
sbb
xor
or
or
xor
adc
or
or
adc
sub
cmp
pushf
xor
mov
sbb
sub
rcl
sbb
pcmpgtb
aas
mov
imul
outs
mov
cmps
xchg
mov
jne
pop
push
stos
test
and
inc
pop
cmc
adc
xor
pop
sub
dec
in
sub
fwait
arpl
(bad)
(bad)
jl
fidivr
int3
je
inc
jbe
pop
pop
nop
and
pop
dec
dec
cmp
mov
and
ret
int3
mov
mov
and
dec
push
les
cs
adc
and
lock
or
call
jp
mov
sbb
dec
mov
and
mov
add
dec
cwde
sub
scas
or
push
xchg
mov
shl
fwait
rol
push
xchg
adc
mov
mov
daa
add
mov
pushf
sub
loope
sub
dec
aaa
sbb
pop
je
jnp
cld
xchg
sub
and
or
cmp
js
add
dec
inc
aaa
push
add
push
inc
shl
push
jge
inc
or
rcr
psubw
jo
add
(bad)
or
icebp
cmps
mov
repz
sub
push
inc
(bad)
test
and
dec
pop
xchg
icebp
mov
das
inc
hlt
data16
dec
ja
adc
popa
adc
add
scas
cmps
or
jle
scas
loope
int3
pop
in
pop
aas
daa
loopne
pop
out
stc
in
push
add
repz
jl
push
dec
adc
jp
aam
call
inc
fadd
ror
xor
iret
dec
arpl
push
xchg
shl
pop
daa
rcr
call
loop
les
mov
test
psubusb
mov
mov
or
imul
scas
jne
sub
xor
push
pop
jne
mov
add
jecxz
repz
bound
mov
mov
es
cdq
lock
sub
int3
adc
push
sub
pop
mov
jge
add
and
jbe
dec
or
ja
rcl
push
sub
mov
mov
fcomp
add
adc
mov
(bad)
data16
adc
(bad)
test
and
xchg
inc
das
dec
clc
test
push
shr
sub
and
xchg
xchg
mov
mov
aaa
push
cmp
sahf
mov
mov
sbb
popa
mov
clc
mov
jae
ret
call
ret
leave
repnz
scas
mov
pushf
cld
lods
fst
add
push
mov
stos
push
jne
in
xchg
clc
pop
bswap
xchg
in
xchg
jl
inc
fsubr
or
(bad)
cli
pop
jg
dec
inc
adc
pop
xor
fadd
imul
pop
arpl
lock
sub
add
push
pop
xor
sbb
cmp
push
add
inc
mov
sub
je
xchg
add
movs
in
push
(bad)
adc
jbe
push
icebp
dec
dec
inc
xor
lock
jae
inc
or
or
ret
push
xor
movs
lock
aaa
fisubr
in
test
das
adc
dec
jmp
cdq
bound
add
xor
pop
xchg
dec
sbb
fisubr
adc
sbb
imul
je
jnp
add
sbb
leave
(bad)
sbb
cmp
fstp
add
or
pusha
and
add
xchg
sbb
pop
pop
inc
ret
push
test
add
push
adc
adc
pop
adc
inc
sub
cmp
push
xchg
mov
imul
imul
push
shl
call
push
xchg
fwait
cmp
(bad)
cmp
aam
shl
adc
xchg
xor
push
cmp
sub
dec
inc
movs
pushf
sub
adc
bound
add
adc
outs
mov
mov
sub
push
jl
xchg
adc
pop
sub
inc
clc
add
inc
aam
or
cmp
fwait
push
or
sbb
sbb
test
pop
add
aas
pop
in
fwait
scas
mov
or
add
mov
das
xor
dec
cmp
retf
push
hlt
ss
xchg
jl
or
test
ss
fdiv
adc
les
mov
cmp
pop
push
inc
mov
mov
arpl
push
mov
adc
in
lahf
jg
fcomp
cmp
(bad)
jnp
and
push
loope
sub
scas
loopne
inc
jb
mov
ins
loop
mov
pop
inc
adc
pop
mov
mov
add
shl
retf
imul
inc
xchg
nop
xchg
or
jl
cmp
add
cmp
sbb
xchg
push
pop
cwde
loope
mov
xchg
push
xchg
test
inc
push
arpl
cli
or
mov
cmp
push
adc
(bad)
mov
ins
adc
mov
mov
nop
ret
xchg
mov
mov
imul
cmp
les
jnp
rcr
xchg
and
adc
jno
and
xchg
les
mov
shl
hlt
ds
add
jnp
nop
xchg
mov
push
add
adc
inc
or
xor
js
loopne
inc
je
sbb
mov
adc
push
push
push
add
rcr
(bad)
fsubr
add
xchg
cld
popf
dec
je
push
sbb
xchg
jmp
push
bound
ret
hlt
push
sub
sbb
adc
gs
sbb
mov
cwde
inc
dec
andnps
xchg
sbb
neg
xor
scas
shr
adc
fst
mov
jge
inc
ins
retf
pushf
retf
sbb
popf
xchg
jge
ret
call
cmp
hlt
push
lea
cs
sbb
inc
pop
lods
(bad)
call
mov
inc
daa
and
mov
in
iret
sub
in
push
add
adc
dec
mov
add
dec
gs
jle
push
test
in
fs
xor
les
push
mov
mov
pop
fisttp
shl
call
jno
cmp
or
inc
mov
lods
addr16
or
popa
cmc
cdq
mov
adc
push
jmp
pusha
pop
sbb
push
adc
dec
scas
les
or
sbb
retf
in
mov
movs
xor
dec
rol
or
or
mov
dec
xchg
xchg
cmc
push
pop
outs
push
inc
mov
inc
or
sub
dec
cmp
stos
data16
test
adc
inc
mov
and
mov
dec
inc
ins
test
lods
push
adc
dec
push
cld
push
cdq
mov
push
add
out
jbe
test
cwde
push
xrelease
mov
dec
jge
test
mov
xchg
fist
mov
aaa
out
retf
movs
adc
stos
in
ret
ret
jne
retfw
or
scas
push
dec
jnp
sub
jecxz
dec
(bad)
dec
cli
ins
xor
pop
cmp
(bad)
cli
xlat
xor
add
scas
(bad)
out
xchg
xchg
sar
ja
fst
call
or
lea
(bad)
ja
loope
mov
pop
imul
loope
test
mul
bound
sbb
xchg
clc
nop
xchg
pushf
push
push
dec
adc
ss
ret
fs
out
stc
push
js
addr16
ins
or
and
pop
cmps
cld
add
cmp
in
pop
adc
pop
pop
aaa
inc
aas
xor
and
jge
lock
and
ins
push
adc
push
pop
aam
sub
jecxz
mov
add
xchg
sub
push
aas
mov
inc
or
adc
dec
and
test
jle
add
and
and
ror
daa
addr16
shl
inc
inc
nop
inc
or
or
push
adc
pop
icebp
lock
xlat
retf
sub
push
out
sahf
nop
adc
xor
and
je
pop
xor
mov
aas
test
cmp
xor
enter
push
push
test
pop
dec
add
(bad)
jmp
and
mov
inc
sbb
test
js
and
clc
cmp
or
adc
xor
ss
xchg
stos
js
mov
sbb
jmp
test
push
mov
sbb
adc
adc
push
dec
xor
adc
push
lods
sbb
enter
add
jne
adc
pop
out
inc
jbe
mov
aas
add
inc
adc
dec
inc
or
popa
rcr
sub
fidiv
adc
jnp
add
sbb
or
jle
nop
adc
mov
pop
pmuludq
inc
rcr
in
add
pushf
neg
and
rol
ins
sbb
inc
data16
nop
(bad)
pop
or
gs
adc
nop
dec
adc
cmp
mov
or
(bad)
jl
add
jl
inc
jnp
mov
mov
pop
test
pop
and
jmp
jle
add
ror
enter
sub
popf
hlt
data16
inc
cli
popf
mov
push
imul
or
jp
and
lahf
aas
popa
jo
pusha
call
pop
push
call
mov
jmp
inc
and
es
or
xchg
jb
jg
mov
pop
aam
jns
mov
pop
das
pop
sahf
inc
inc
arpl
or
mov
xchg
imul
lods
mov
or
ja
jo
sti
hlt
cmp
mov
xchg
movs
push
cmp
rcl
push
aam
xchg
clc
call
dec
push
xchg
jo
shl
push
sar
pop
push
xchg
call
dec
push
jae
mov
je
push
mov
shl
jge
push
mov
adc
inc
cmp
or
add
les
sbb
sub
(bad)
jae
shl
cwde
(bad)
sbb
ins
lahf
push
cs
lock
cli
cld
cs
dec
push
clc
adc
push
or
fcom
push
inc
pop
and
inc
jl
dec
cmp
movs
xchg
imul
cmp
aam
and
out
add
in
imul
dec
outs
in
xor
mov
xchg
dec
cmp
pop
push
and
push
(bad)
loopne
imul
and
push
push
pop
or
and
and
ss
push
adc
cmp
xchg
jecxz
nop
push
jae
and
jp
pop
jae
push
popa
and
(bad)
mov
xchg
lods
inc
inc
push
mov
(bad)
pop
cmp
clc
or
sbb
fisub
and
sti
sbb
lock
clc
shl
(bad)
mov
add
pop
cmp
push
sub
adc
push
call
adc
lock
xchg
sub
mov
ds
hlt
xor
daa
adc
cmp
push
sub
push
adc
movs
inc
rcl
mov
jmp
js
pop
or
jne
mov
push
ds
fcmovnb
push
ja
daa
mov
sbb
jbe
inc
hlt
dec
in
push
outs
jo
lods
xlat
cmp
cmp
sbb
push
sbb
mov
and
push
or
pop
sbb
xchg
and
push
int
adc
cmp
sbb
pop
xor
aad
ja
push
add
sbb
retf
retf
add
add
or
mov
xchg
ror
pop
fisttp
js
shr
jo
and
mov
mov
xor
sub
fld
mov
pop
or
inc
and
fiadd
rol
push
js
jg
(bad)
or
add
movs
xor
outs
sbb
add
push
or
pop
std
push
les
fadd
daa
sub
mov
xchg
mov
sahf
dec
rcl
and
lea
inc
nop
add
in
jae
cmp
dec
cmp
add
xor
cmp
jmp
dec
out
cmp
xchg
sub
rol
fcomp
stc
xor
add
call
test
addr16
stos
sub
adc
mov
jge
or
das
mov
add
dec
loopne
movs
jo
ret
(bad)
ja
cmp
and
in
into
int3
pop
jae
sbb
sub
ret
test
movs
sbb
in
push
inc
outs
mov
mov
or
fwait
dec
fist
shl
mov
and
inc
xchg
inc
cs
jb
sbb
iret
sbb
push
sbb
cmp
cmp
mov
fnstcw
cmp
in
popa
and
aas
retf
adc
adc
xchg
adc
adc
popf
adc
(bad)
imul
lock
jns
push
mov
aam
mov
add
add
dec
(bad)
dec
sub
sbb
iret
sub
xchg
sub
xor
lods
mov
add
push
push
ss
add
cmp
pushf
es
inc
jne
xor
lds
push
add
dec
mov
(bad)
shl
mov
jno
inc
in
and
mov
icebp
enter
inc
add
adc
out
jecxz
aam
sbb
cmp
xor
cmp
je
aam
ret
push
mov
lock
sub
or
push
popa
jne
scas
mov
xchg
sbb
add
ror
or
or
xor
cmps
jl
les
adc
jl
inc
ffree
lock
jge
jg
cmp
call
(bad)
or
leave
nop
xor
push
adc
pop
jg
jmp
test
xchg
jb
sbb
add
jle
out
xchg
cmp
xor
mov
push
xchg
xchg
je
mov
aam
push
cwde
jge
popa
clc
js
jmp
sbb
pop
or
xor
mul
pop
aaa
or
and
(bad)
fwait
lds
push
or
imul
inc
or
or
ror
mov
bound
test
pop
aad
pop
fbld
enter
pop
jmp
dec
cmp
push
inc
popa
ficom
pop
mov
xchg
cmp
ret
or
pop
test
and
cmp
push
movs
xlat
xchg
cmp
rol
sar
btc
dec
test
and
pop
mov
dec
fnstcw
mov
ds
daa
jne
and
aad
push
or
mov
cmp
scas
into
popa
popf
sbb
push
pop
ficom
test
out
push
enter
sbb
xor
lods
mov
stos
push
iret
jne
push
aam
sub
loope
cmp
dec
das
mov
adc
push
or
cmp
dec
in
sbb
or
ins
dec
ret
js
ret
or
js
inc
jl
loope
sub
mov
inc
add
popf
movs
sub
and
xor
imul
push
xor
xchg
aaa
cmp
add
sub
movs
cmovge
jne
xchg
dec
jge
fld
rol
adc
fst
xor
adc
sbb
jbe
xchg
cmc
jge
jmp
push
push
and
xchg
aaa
nop
push
dec
popa
(bad)
(bad)
and
jb
call
cmp
jg
loope
xor
pop
or
es
pusha
sbb
or
sub
jne
or
dec
pop
and
cmp
pop
add
dec
inc
sbb
icebp
loopne
shl
mov
inc
shl
pop
(bad)
push
test
lahf
pop
pop
xchg
push
or
jle
jo
inc
push
shl
mov
dec
ret
movs
ror
sbb
push
mov
ror
in
inc
or
sub
jae
dec
js
jnp
xchg
dec
mov
(bad)
outs
dec
push
cmps
dec
dec
dec
(bad)
mov
dec
add
and
retf
aam
(bad)
xor
repnz
imul
pop
adc
push
adc
pop
jmp
add
jb
dec
jp
jl
and
or
jmp
add
cli
ret
add
jl
dec
cmp
and
mov
das
dec
sbb
loopne
imul
retf
add
retf
dec
outs
push
(bad)
dec
push
cwde
xchg
sub
and
sbb
adc
mov
sbb
add
mov
adc
(bad)
xchg
scas
xchg
(bad)
idiv
and
loopne
or
mov
and
es
fistp
and
adc
enter
je
inc
dec
sub
sbb
adc
add
xchg
push
push
or
mul
pop
cwde
xchg
cmp
sub
xchg
push
pop
fldcw
mov
and
xchg
push
xor
dec
sbb
cld
sub
iret
pop
push
aam
add
pop
xchg
arpl
cmps
int3
aam
mov
inc
add
scas
inc
lods
adc
mov
mov
xchg
jne
jl
shl
dec
mov
xlat
inc
adc
jmp
push
xor
xchg
int
or
cmc
sbb
enter
add
cmp
and
inc
cmc
adc
das
hlt
out
add
in
mov
or
adc
and
aaa
fisttp
xchg
push
push
jo
cmp
sar
or
add
inc
inc
push
or
jmp
ja
jmp
retf
jne
inc
ret
mov
add
lahf
inc
add
retf
inc
ins
ins
inc
mov
cmp
pop
push
sbb
shl
or
or
xchg
int3
sbb
popf
nop
inc
mov
imul
adc
push
add
inc
or
js
loopne
pop
jb
adc
rcr
das
mov
xchg
and
test
dec
pop
pop
xchg
and
adc
push
sbb
in
in
fnstenv
and
sbb
adc
aad
adc
jecxz
adc
popa
sub
adc
dec
ss
xor
jp
mov
imul
cmc
add
push
adc
enter
into
test
lods
sbb
adc
add
mov
xchg
data16
and
mov
xchg
out
push
not
xor
xor
fld1
dec
pop
dec
jge
mov
rcl
pop
ret
or
dec
xor
xor
and
int3
cmp
push
xchg
push
mov
and
(bad)
push
ret
inc
arpl
mov
add
inc
or
xchg
or
loopne
add
popf
gs
cmps
push
outs
imul
add
(bad)
aam
sbb
push
lock
call
add
push
mov
and
and
pop
push
fidiv
push
shl
xchg
lods
das
js
xor
cmova
jo
call
inc
std
cwde
push
adc
fld
sub
mov
push
pop
adc
push
mov
cmps
add
pop
mov
lahf
adc
(bad)
rcr
mov
enter
pop
cmc
mov
or
mov
fadd
inc
add
adc
mov
call
out
pop
jb
inc
call
push
aas
jg
mov
in
int
add
inc
dec
xchg
ficom
push
bound
ja
out
mov
ror
push
sbb
imul
ret
jae
lea
sbb
push
ja
es
lods
jg
adc
lahf
nop
pushf
in
mov
sbb
cmp
jle
mov
dec
adc
push
fnstenv
fld
pop
adc
xchg
fld
adc
lods
cld
add
xor
xchg
xor
inc
jmp
mov
push
and
stos
arpl
inc
xor
xchg
cmp
sub
push
dec
adc
xlat
push
enter
add
mov
je
pop
sar
aam
(bad)
fiadd
pop
idiv
sahf
fcom
or
cmp
out
sub
cs
loopne
jne
in
out
mov
psubusb
sbb
pop
or
(bad)
xchg
fld
mov
xor
shl
fld
inc
scas
xchg
add
or
xchg
xor
call
hlt
aas
je
test
jae
adc
push
shl
or
push
xor
inc
es
sub
mov
cmp
xor
sbb
shl
(bad)
sub
dec
aad
ficom
mov
xlat
mov
and
sub
dec
test
mov
jne
adc
or
mov
jne
repz
pop
pop
add
in
push
dec
push
push
js
xchg
mov
adc
sbb
jno
xchg
pop
in
cdq
add
pop
and
aam
mov
jle
retf
call
xor
sahf
add
pop
jno
inc
push
push
xor
jp
adc
sti
and
cmp
mov
cmp
add
jge
mov
mov
test
in
xchg
in
hlt
add
cdq
(bad)
rcl
xchg
(bad)
dec
rcl
dec
pop
cmp
sub
aam
xchg
or
xor
jnp
mov
mov
pop
inc
mov
and
js
lea
(bad)
and
(bad)
push
add
pop
test
inc
or
loop
dec
and
popa
je
dec
loope
dec
mov
mov
jns
test
adc
pop
shl
data16
call
pop
adc
sbb
sbb
adc
sbb
or
pop
push
dec
mov
ret
inc
sub
cmp
or
loope
data16
and
or
or
(bad)
in
xor
js
js
inc
adc
add
bnd
mov
add
or
push
stc
adc
cmp
mov
xchg
fwait
loop
adc
xchg
xchg
test
stc
and
out
xor
pop
sbb
stos
jmp
enter
adc
stos
jmp
sub
jmp
mov
stos
sub
cs
imul
or
mov
jp
cmp
movs
cmp
sub
push
clc
clc
lock
sub
dec
or
in
or
or
jbe
movs
sbb
cwde
ja
or
nop
out
push
int3
mov
enter
popa
les
pop
pop
add
adc
xchg
push
and
das
add
push
dec
cwde
lea
pop
js
shl
sbb
or
loopne
sub
xchg
or
outs
mov
outs
or
addr16
sub
fwait
cmps
mov
xor
adc
jle
call
pop
add
mov
daa
add
sub
mov
adc
add
or
or
nop
retf
add
push
or
in
mov
mov
mov
dec
call
cs
mov
mov
dec
inc
jmp
mov
sbb
scas
adc
loopne
movhps
add
inc
cs
out
pop
mov
push
and
jle
adc
push
xchg
mov
and
or
test
mov
dec
movs
push
fdivr
fdiv
mov
mov
dec
inc
sub
sub
js
enter
mov
test
stos
loopne
or
jmp
mov
cmp
imul
mov
inc
call
fdiv
imul
aam
dec
cmp
or
or
enter
repz
add
test
push
ret
int3
lahf
mov
lods
fucomip
movs
add
and
inc
adc
out
jo
pop
or
add
push
je
rol
jo
mov
mov
test
shl
movs
and
pop
hlt
das
(bad)
xor
pop
lods
mov
dec
mov
sahf
movs
iret
xchg
mov
mov
fdiv
fcom
pop
popf
hlt
sbb
out
adc
fnstenv
jb
or
inc
xor
arpl
inc
in
sub
cmp
xchg
jne
cmp
xor
mov
mov
jne
repz
fistp
jge
sub
push
cmps
dec
sar
sub
fucomp
mov
repnz
adc
loopne
jne
mov
cdq
adc
inc
ins
or
push
sub
push
pop
adc
fbld
mov
dec
or
sub
sub
push
cmps
add
add
popf
adc
sar
mov
jg
sub
dec
loopne
fcom
hlt
push
retf
add
inc
sub
fs
out
cmp
cmp
mov
stc
xor
adc
inc
dec
dec
xchg
push
loop
or
and
lods
frstor
mov
inc
pop
(bad)
pop
pop
call
stos
scas
cmp
dec
loopne
out
pop
enter
push
loopne
ins
sub
sti
adc
(bad)
push
daa
xor
ret
retf
je
mov
adc
ret
or
dec
sbb
or
std
add
push
sti
fmul
test
cmp
add
inc
or
and
mov
iret
aad
xchg
fild
les
outs
push
ds
pushf
ret
xchg
loopne
add
sahf
add
push
push
sbb
pop
outs
imul
shr
add
fld
nop
or
stos
hlt
mov
xor
mov
add
ja
add
push
call
inc
mov
dec
mov
cld
and
or
imul
mov
je
add
adc
adc
xchg
shl
nop
pop
call
sbb
mov
sub
mov
int
mov
test
aam
add
mov
or
sub
sbb
or
movs
mov
lods
aaa
push
or
dec
xchg
and
add
or
adc
rol
(bad)
mov
jmp
std
loopne
loope
xor
adc
les
jno
and
and
jmp
jno
inc
shl
ins
cdq
in
mov
xchg
enter
pop
add
inc
imul
xchg
sahf
das
mov
mov
rol
add
push
push
outs
lods
mov
mov
mov
inc
or
das
push
inc
popa
fadd
call
adc
cmp
scas
and
dec
out
inc
ret
jnp
add
dec
push
sbb
mov
xchg
ja
fist
cld
xor
cmp
jmp
inc
or
in
pop
out
xchg
jle
add
and
add
add
mov
or
xor
inc
xchg
repz
shl
loope
cmp
adc
lahf
cld
aam
push
sbb
ret
mov
and
mov
or
cmp
inc
or
push
push
pop
dec
dec
mov
outs
add
nop
loopne
sbb
or
fs
sub
and
push
add
xor
xor
xor
cmp
xor
cwde
ins
js
sbb
je
sub
mov
mov
call
or
xchg
or
fwait
sub
xor
or
mov
fnstenv
adc
pop
xlat
gs
jg
add
lea
add
leave
lea
mov
push
ja
bound
call
push
(bad)
fisttp
adc
test
jle
sub
jb
and
add
inc
sbb
or
lock
xor
mov
and
stos
cmp
pusha
mov
repnz
or
add
jae
sbb
sbb
adc
jg
inc
pop
cmp
sbb
inc
(bad)
cdq
push
and
pop
mov
dec
fsub
retf
popa
and
fbld
pop
call
call
dec
inc
xchg
pop
nop
add
xor
push
mov
mov
inc
xchg
or
mov
mov
test
out
push
(bad)
mov
inc
ds
pop
mov
xor
addr16
imul
mov
pop
jmp
pusha
push
add
fwait
shr
xchg
add
ror
popa
pushf
mov
adc
or
aaa
das
inc
pop
sub
xor
dec
je
cmp
enter
leave
out
dec
and
or
fstp
leave
add
stos
mov
sbb
int3
sbb
and
inc
pop
add
movs
mov
mov
push
sbb
dec
push
xchg
test
test
mov
or
sbb
push
hlt
add
das
ret
test
ss
mov
sbb
ret
or
shl
sbb
in
stos
pop
push
mov
shr
mov
sub
pop
aaa
inc
add
pop
xchg
xchg
or
dec
xchg
sub
xor
add
cmp
add
adc
pop
sub
add
sub
ret
inc
jb
xchg
jbe
or
push
or
and
movs
mov
cwde
cmp
or
or
or
(bad)
jae
pop
xor
or
mov
jo
rcr
ret
xchg
fs
retf
addr16
test
dec
adc
gs
repnz
mov
xor
or
cld
cmps
inc
je
test
add
mov
pop
inc
gs
add
mov
mov
sub
xor
cld
dec
call
cs
call
or
imul
push
xor
inc
sub
test
add
cmp
jbe
pop
and
setl
add
lds
sub
and
xchg
mov
cmp
enter
pop
das
sbb
or
fsub
sub
adc
in
jle
pusha
test
push
or
or
movs
dec
call
mov
or
xor
xchg
retf
add
retf
mov
push
pop
(bad)
loopne
mov
dec
cdq
out
xor
mov
sar
xor
push
sub
iret
aad
test
xchg
sar
push
frstor
xchg
add
sub
push
or
mov
cmp
fcomp
and
jb
dec
dec
mov
lock
xor
push
jns
mov
daa
cmp
in
jmp
jns
sbb
enter
and
mul
mov
sbb
ds
dec
or
xor
adc
xor
lds
(bad)
sub
xor
mov
lock
shr
push
dec
call
sub
or
and
in
xor
mov
repnz
icebp
pop
movs
fcomp
(bad)
mov
adc
jo
sub
or
cmp
push
(bad)
clc
dec
xchg
(bad)
cld
push
pop
shl
cmp
sbb
push
push
push
stos
push
rcl
cmp
mov
fisttp
cmp
fcomp
xchg
hlt
mov
cld
sub
fistp
cmp
mov
je
push
js
outs
pop
xor
cdq
js
pop
daa
aam
ret
mov
xor
inc
inc
xor
jl
push
push
aam
repnz
mov
jmp
cmp
pop
je
lock
call
pusha
int3
and
push
sub
or
cli
mov
shl
adc
int3
inc
ret
adc
popa
mov
sbb
jmp
daa
and
loopne
fnstenv
sub
sub
inc
sub
mov
push
pop
add
das
add
sbb
(bad)
cmp
js
mov
sbb
inc
cs
fwait
jl
adc
sahf
dec
scas
adc
ret
ret
test
xchg
or
jb
loopne
shr
sub
mov
and
push
loop
das
icebp
sub
push
add
lods
mov
aaa
shr
lock
sti
lods
cmp
add
add
mov
test
loope
jle
jmp
jge
sub
popf
enter
or
mov
cmps
cmps
xchg
cmp
sbb
inc
fs
adc
dec
(bad)
and
sbb
inc
sub
fcmovnb
push
clc
cmps
xor
fisub
js
push
sbb
inc
movs
and
cmps
repnz
das
add
push
jmp
mov
popa
movs
add
push
sbb
jbe
(bad)
pop
mov
add
hlt
ss
add
stc
push
in
out
lods
ins
sahf
nop
ret
push
add
mov
por
xor
adc
(bad)
in
adc
adc
mov
inc
iret
mov
movs
add
push
inc
adc
cmp
les
xor
xchg
mov
call
dec
push
add
jmp
xchg
push
mov
push
pusha
addr16
pop
addr16
and
jne
ja
push
adc
pop
add
and
push
adc
jb
push
mov
retf
rol
pop
mov
jae
jne
sub
cmps
movs
dec
jne
shl
out
movs
adc
xchg
mov
push
adc
push
adc
sub
mov
mov
dec
inc
or
ret
sahf
stos
mov
sti
fcmovnu
add
stos
push
cmp
add
shr
jb
popa
lds
(bad)
retf
lock
enter
add
inc
xchg
mov
(bad)
fwait
mov
pusha
mov
sbb
sahf
adc
in
pop
push
mov
mov
or
or
or
or
js
adc
add
(bad)
push
(bad)
call
ins
pop
pop
leave
pop
pop
arpl
jecxz
add
and
fiadd
push
add
test
and
jbe
pop
cmp
cmp
or
mov
mov
cmp
inc
cmp
inc
ds
mov
bound
clc
push
cmp
xor
test
mov
push
push
mov
pushf
add
adc
retf
les
push
pop
ficom
aam
mov
shr
adc
add
imul
inc
mov
add
push
test
pushf
push
sub
ret
mov
adc
jp
lock
mov
cmp
rcl
loopne
cmp
pop
or
adc
stos
sub
push
jne
push
cmc
mov
mov
sub
sub
dec
adc
inc
mov
jl
je
or
add
pop
add
aaa
jo
or
ror
jl
jae
mov
sbb
mov
pop
sbb
cs
and
loopne
lock
js
pusha
sbb
scas
dec
adc
mov
push
aas
dec
sub
fiadd
in
adc
mul
mov
adc
test
sub
inc
(bad)
and
sub
stos
lea
pop
imul
out
sbb
adc
(bad)
cli
dec
mov
dec
jle
add
mov
push
push
xor
movs
aad
mov
mov
popf
sub
mov
sbb
pop
sbb
dec
or
retf
push
xor
sub
leave
and
push
push
cmp
or
jne
sbb
xor
in
adc
gs
call
inc
in
clc
ins
sbb
sub
adc
stc
xchg
mov
(bad)
retf
ret
push
jns
das
in
int3
jmp
push
fnstcw
es
mov
mov
icebp
and
push
aad
mov
fs
mov
xchg
mov
dec
mov
rol
hlt
daa
arpl
int
out
mov
bound
or
pop
sub
add
cmp
cmp
pop
ss
inc
and
call
xchg
pop
sub
xchg
sbb
mov
int
dec
or
test
add
xchg
pop
sbb
dec
shl
sahf
inc
(bad)
jg
xchg
ret
dec
sar
inc
sbb
xor
push
clc
out
pop
dec
fcomp
add
mov
fs
pop
aaa
sub
or
and
push
aaa
mov
xchg
test
sbb
dec
pop
mov
cmps
mov
call
(bad)
(bad)
xchg
les
add
and
or
lea
push
(bad)
dec
pop
jle
adc
xor
sub
lea
test
xchg
ret
mov
loop
leave
sub
push
pop
mov
sub
lea
sbb
shl
pusha
nop
inc
sbb
push
mov
adc
lock
aaa
in
aas
pop
or
sub
add
es
in
or
xchg
and
ins
adc
imul
sbb
or
inc
pop
sub
movs
test
je
enter
xlat
adc
sbb
inc
lods
rol
pop
(bad)
dec
cmp
loopne
push
rol
pop
dec
lods
gs
sub
push
cmp
retf
aaa
add
jns
fs
push
test
fsubr
call
fidivr
sbb
test
push
push
xchg
jne
cmp
loopne
shl
mov
into
je
test
and
cmps
(bad)
adc
fadd
(bad)
jo
outs
xor
mov
jmp
push
add
xchg
sub
dec
call
cdq
xor
adc
repz
push
jmp
push
xchg
sbb
or
aam
sub
stos
daa
fsub
adc
xor
push
cmp
push
push
ja
push
and
adc
mov
aad
inc
loopne
movs
mov
rcr
push
push
xlat
adc
push
nop
mov
inc
pop
aas
add
xor
pop
and
or
pop
and
fadd
retf
int3
inc
mov
ins
jmp
xor
xor
adc
or
inc
push
inc
(bad)
inc
dec
xchg
(bad)
add
retf
or
mov
cld
test
add
bound
push
mov
sbb
imul
sbb
sbb
xchg
or
divps
pop
adc
push
in
pusha
or
aam
shl
mov
sbb
pop
mov
add
xor
or
int3
sub
mov
adc
std
pop
fldenv
jmp
test
or
sbb
inc
jne
sbb
and
add
add
ss
inc
ins
daa
add
sub
xor
xor
sbb
pop
sbb
and
sbb
lds
jns
movs
xchg
scas
test
add
les
int
add
adc
fcom
(bad)
mov
push
add
cmp
mov
mov
xchg
adc
mov
aad
add
add
ret
adc
jmp
push
dec
sub
cmp
jge
std
stc
cmp
jnp
adc
push
push
xchg
jl
or
sbb
push
xchg
jmp
ja
jg
idiv
imul
and
sub
fwait
xor
push
inc
add
ret
fs
or
push
loopne
xlat
call
pusha
adc
gs
xchg
jmp
fidivr
add
mov
and
rcr
and
pop
stos
add
enter
add
cdq
add
(bad)
sbb
mov
(bad)
out
lods
sub
push
pusha
(bad)
or
clc
sub
xor
fisttp
inc
and
lock
add
add
add
lods
xchg
fadd
(bad)
xor
movs
lea
clc
fs
push
sahf
jg
push
rcr
jmp
push
jb
or
or
dec
in
in
ja
adc
pop
lock
mov
pop
jmp
adc
or
xor
call
adc
dec
cmp
js
sub
mov
pushf
add
mov
imul
call
hlt
adc
dec
push
inc
mov
lock
or
or
adc
in
pop
(bad)
jle
ds
or
test
fcmovnb
(bad)
mov
sub
aaa
ret
jno
jae
or
mov
lea
dec
rcr
adc
cdq
pop
aaa
dec
dec
fnstcw
test
pop
(bad)
outs
push
and
outs
xor
jnp
mov
push
push
push
je
add
cmp
pop
jmp
pop
dec
mov
les
aam
rol
call
inc
add
ret
or
xor
(bad)
or
push
lea
scas
test
cmp
cdq
jo
xchg
mov
dec
mov
ins
sbb
lock
dec
sahf
adc
pop
lock
shl
test
(bad)
jmp
lods
add
sbb
push
adc
enter
enter
icebp
sbb
mov
in
in
cmp
sbb
ss
inc
cwde
xchg
fcmovnu
xor
pop
add
push
adc
sbb
adc
xchg
mov
inc
rol
push
outs
add
sbb
mov
inc
pusha
lock
mov
ret
aas
outs
or
mov
cmp
push
mov
sbb
cmp
outs
in
in
adc
mov
inc
fsubr
push
pop
jle
sub
adc
dec
xor
inc
jge
data16
movs
push
inc
lods
ret
(bad)
sub
jb
leave
out
and
(bad)
or
cmp
adc
inc
jns
ret
clc
mov
adc
mov
mov
mov
imul
jo
xor
imul
mov
iret
add
or
xchg
out
add
xor
iret
and
xor
add
inc
add
pop
inc
stos
sub
test
daa
add
mov
sub
adc
or
jo
inc
or
ins
dec
sbb
lods
adc
sub
mov
xlat
push
dec
or
adc
nop
mov
enter
and
sbb
stc
jl
inc
pusha
xlat
dec
or
and
mov
sub
loop
sub
mov
sbb
cld
xor
pop
or
outs
mov
and
inc
pop
out
add
xchg
inc
sti
cmp
push
inc
or
or
push
dec
sbb
inc
xor
(bad)
cmp
pusha
pop
test
push
push
inc
push
mov
push
sbb
ror
sub
inc
or
xchg
ror
mov
sbb
int3
jnp
sub
sub
mov
add
adc
mov
das
and
fnclex
aaa
add
dec
imul
and
add
add
xchg
sbb
or
xchg
push
lods
retf
mov
bound
add
js
mov
push
adc
mov
nop
adc
mov
inc
adc
sbb
sub
loope
in
aaa
test
cmp
jne
cmp
jno
dec
or
int3
cmps
xor
lods
retf
(bad)
fld
and
cmp
test
adc
out
inc
inc
or
pop
dec
cmp
cmps
and
(bad)
ret
sti
mov
in
and
xchg
cmc
push
jo
mov
mov
pushf
scas
retf
sbb
adc
and
sbb
and
mov
nop
bnd
hlt
sub
cmc
repz
adc
pusha
inc
push
push
push
js
movs
(bad)
cmp
inc
sub
cwde
add
mov
xor
jnp
xchg
sub
xor
(bad)
push
cli
repz
adc
inc
mov
xchg
adc
or
les
jmp
dec
ins
test
push
sub
dec
xchg
jp
cwde
pop
mov
jne
add
outs
sub
push
add
or
mov
sbb
sti
pop
setno
adc
mov
pop
fdiv
mov
and
ins
aam
lea
sbb
outs
sbb
adc
adc
jp
in
or
sbb
out
cmp
mov
rcr
imul
xlat
dec
daa
sbb
add
cmp
push
push
mov
ss
xchg
mov
out
gs
mov
push
sbb
(bad)
dec
inc
test
cld
and
inc
add
xchg
pop
xor
xchg
je
hlt
hlt
lock
push
cmp
hlt
pop
test
aaa
push
mov
cmp
mov
inc
xor
add
sub
pop
cwde
push
mov
jnp
xchg
popf
pop
push
mov
shl
add
sbb
cmps
mov
in
mov
cmp
ror
not
das
ror
adc
mov
mov
mov
and
mov
not
sbb
jecxz
test
dec
inc
(bad)
xchg
js
adc
mov
cmp
mov
mov
cmp
pusha
sub
xchg
push
fdivr
outs
out
cdq
jecxz
sub
inc
js
and
add
es
loopne
ds
sbb
push
jmp
mov
sbb
movs
dec
xor
pop
or
loope
rol
mov
push
lods
inc
mov
out
adc
retf
inc
lock
ret
out
ja
inc
push
aas
push
mov
(bad)
std
mov
sbb
cmp
imul
add
mov
adc
push
push
inc
mov
sbb
cmps
cld
xchg
add
add
(bad)
sbb
pop
push
push
adc
retf
sbb
xor
pop
inc
xchg
dec
in
and
shl
push
inc
inc
addr16
shl
inc
shl
add
sub
loope
jne
out
inc
cs
sub
les
inc
dec
scas
ret
ss
inc
add
inc
xor
xchg
xor
pop
out
adc
add
retf
int3
inc
mov
cmp
mov
mov
sub
add
lea
or
pop
push
sbb
dec
push
ror
jg
xchg
hlt
test
dec
test
rcr
fmul
mul
pop
movs
cs
adc
or
scas
adc
outs
(bad)
and
pop
outs
mov
pop
mov
mov
adc
adc
(bad)
xor
cli
hlt
fisttp
sbb
jp
pop
push
(bad)
ins
repnz
inc
sub
or
daa
dec
push
mov
pop
(bad)
imul
sbb
and
imul
jo
lods
mov
dec
inc
inc
adc
sub
adc
lods
sub
or
inc
loopne
push
xor
and
(bad)
cld
cmp
lahf
outs
jne
xchg
or
enter
stos
adc
ret
add
mov
dec
ss
jmp
es
test
inc
in
and
xor
call
sub
adc
loop
bswap
(bad)
rcl
mov
clc
stos
hlt
(bad)
(bad)
loopne
mov
cmps
test
add
(bad)
cmps
or
rcl
mov
in
ins
xchg
iret
call
pop
div
jne
or
ds
jo
jae
cmp
jne
pop
test
adc
fst
imul
les
clc
test
mov
push
or
xchg
or
imul
mov
inc
movs
cmps
ins
sub
pop
lahf
adc
rol
push
dec
cmp
outs
icebp
mov
adc
es
xchg
int3
daa
xor
jno
rcr
push
sbb
inc
pop
mov
add
rol
(bad)
sbb
mov
rcr
(bad)
and
sbb
dec
add
repnz
push
push
xchg
sub
push
arpl
les
and
rcl
punpcklbw
scas
jl
fwait
and
es
ret
jmp
adc
js
pop
loopne
or
test
xlat
push
ret
jns
xlat
test
mov
pusha
jbe
inc
add
sbb
test
sbb
add
and
cmp
inc
xchg
add
add
lahf
xor
mov
pop
mov
cdq
xor
sbb
xor
lea
jl
inc
dec
pop
xchg
retf
inc
lea
push
dec
arpl
push
arpl
inc
ror
je
push
popa
popf
inc
mov
fucomip
jle
dec
retf
(bad)
or
(bad)
pop
ja
sub
popa
js
pcmpgtd
hlt
clc
movs
ret
inc
das
and
pop
mov
jns
push
or
lods
or
cli
daa
sub
xor
add
push
xchg
(bad)
jbe
outs
mov
jg
jl
ins
arpl
add
sbb
outs
inc
aaa
xor
into
(bad)
in
add
jge
jle
jl
xor
lock
ss
mov
fdiv
ss
es
push
lahf
aad
(bad)
rcl
in
test
out
adc
sahf
mov
and
inc
and
rol
int3
lods
sbb
adc
or
xchg
mov
dec
xchg
jp
or
inc
cmp
aad
or
sbb
mov
and
mov
pop
fst
inc
xchg
add
jnp
pop
adc
inc
jg
ret
and
mov
jmp
mov
cmp
xor
inc
or
inc
jo
out
ds
cmp
data16
stc
pop
sub
xchg
js
dec
mov
sbb
pop
pop
sahf
popa
stos
(bad)
and
ins
dec
pusha
mov
aaa
fimul
ins
adc
inc
pop
das
add
out
aad
cmp
adc
shl
iret
jbe
cmp
test
push
pop
push
mov
adc
(bad)
shl
cmp
cmp
dec
js
adc
(bad)
and
and
fild
clc
int3
push
sub
pop
enter
inc
arpl
ret
push
cmp
test
cmp
cs
rcr
loopne
pop
pop
push
mov
sub
jb
push
mov
jb
dec
shr
sub
add
(bad)
stc
repnz
mov
jmp
popf
(bad)
adc
(bad)
mov
(bad)
and
mov
mov
adc
movs
jnp
add
adc
add
add
mov
lahf
sbb
leave
enter
retf
rcl
cmp
call
push
dec
into
inc
inc
aaa
mov
mov
mov
mov
mov
sbb
xchg
mov
push
loopne
jne
push
adc
inc
sub
inc
inc
rcr
clc
inc
test
jae
pop
inc
xor
push
xor
sbb
adc
inc
push
mov
loop
outs
sbb
sub
sbb
ds
test
bnd
lods
imul
inc
xchg
push
dec
imul
xor
enter
xor
mov
and
push
fs
jl
fistp
pop
pop
stc
fmul
imul
push
lock
adc
mov
std
ret
and
push
add
inc
inc
add
sub
inc
add
inc
popf
add
sub
pop
dec
sub
and
sub
cli
ss
sub
dec
mov
ret
or
jp
sub
in
add
sub
add
push
outs
push
xchg
push
pop
mov
xchg
aam
(bad)
imul
mov
retf
not
sar
lahf
add
ins
(bad)
mov
sub
pop
add
inc
cmp
in
test
ss
mov
mov
push
sbb
(bad)
adc
jne
cmp
add
jnp
movs
sub
jne
imul
or
cmp
je
movs
adc
xor
push
adc
or
pop
jmp
sub
inc
cmp
or
mov
xor
jo
aaa
ret
adc
inc
int3
leave
add
push
jb
xlat
cmp
push
pop
xor
inc
sub
sbb
push
push
push
mov
jg
adc
ret
lea
jb
dec
test
js
jb
ret
or
mov
push
push
ins
xchg
push
sub
retf
push
sti
iret
push
add
or
jne
xchg
dec
lea
or
sbb
sbb
shl
jmp
je
cmp
or
pusha
xor
jmp
jns
cmps
add
or
inc
imul
lock
xchg
xchg
cld
push
adc
add
adc
cld
xor
sbb
test
or
jno
xor
ret
loopne
ret
pop
push
jo
sub
cmps
inc
dec
push
adc
inc
in
xchg
cmp
les
and
pop
and
xchg
push
in
call
repz
lea
sbb
jne
xor
call
adc
ja
add
or
sbb
daa
fsubr
adc
lods
push
imul
outs
add
mov
adc
movs
xchg
mov
ss
mov
popf
add
sti
inc
xchg
jle
mov
pop
or
pop
xchg
inc
shl
pop
inc
shl
mov
popf
xchg
aas
pop
mov
push
add
dec
push
sub
lods
and
push
(bad)
cs
or
pop
aas
nop
rcr
dec
cmp
inc
mov
jecxz
lods
dec
test
push
push
jg
push
scas
std
daa
cwde
or
adc
imul
sbb
ret
cmp
mov
add
inc
sub
push
enter
and
or
mov
inc
push
out
sub
and
fnstenv
or
and
push
mov
pop
add
sbb
ins
es
xor
je
add
jae
loopne
inc
jmp
popa
xor
sbb
int3
or
adc
add
add
mov
sub
daa
jo
(bad)
loopne
sub
dec
pop
push
cmps
xor
cmp
in
test
lds
iret
int
mov
test
add
loope
jnp
(bad)
fstp
aaa
test
adc
and
ror
lods
push
jnp
sub
dec
in
sub
pusha
push
xchg
or
jl
movs
jb
ins
xchg
jo
retf
lods
je
cmp
push
mov
sub
aam
push
adc
jle
xor
dec
dec
dec
push
jo
sbb
dec
dec
pop
imul
and
inc
gs
or
pop
push
gs
xor
int3
ins
mov
inc
jbe
push
wrmsr
pop
or
jne
das
push
mov
and
jo
mov
das
les
fwait
inc
in
inc
out
or
inc
xchg
dec
jae
ins
pop
mov
pop
outs
pop
hlt
inc
mov
into
cmp
sbb
push
popa
dec
cmp
mov
stos
and
push
adc
cmp
ins
shl
push
sahf
jecxz
test
adc
mov
imul
pusha
ret
sbb
aam
fcomi
ret
ss
addr16
push
das
push
mov
ja
fcomp
xor
or
loopne
imul
push
mov
push
out
pop
mov
int3
shl
inc
scas
fdivr
or
lods
loope
adc
dec
xor
xchg
test
fs
sub
bound
nop
or
and
and
or
mov
mov
test
sub
ror
pop
adc
dec
dec
(bad)
jbe
mov
xor
cmp
inc
inc
mov
xor
and
dec
mov
adc
gs
in
or
sub
je
pop
sbb
jmp
mov
jo
cmp
cmp
aad
and
arpl
das
ins
mov
mov
retf
out
mov
sub
int3
and
sub
push
sub
cmps
in
fs
cld
sbb
mov
push
sbb
in
sub
inc
or
xor
jo
dec
or
(bad)
sar
daa
adc
data16
outs
add
push
add
stc
arpl
or
xchg
lock
adc
adc
adc
bound
and
fsubp
ins
mov
inc
arpl
fucomi
(bad)
fadd
aad
adc
mov
call
add
adc
sbb
adc
je
dec
je
jmp
cmp
jge
je
mov
jp
sbb
rcl
sub
arpl
bound
daa
imul
popf
mov
rcl
fs
inc
jle
lea
dec
out
in
rcr
add
pop
stos
jge
add
cli
adc
adc
dec
or
xchg
adc
sub
imul
inc
iret
dec
jnp
sbb
ficom
push
das
sbb
adc
xor
dec
adc
add
mov
bound
gs
add
sub
sub
cli
mov
adc
jg
lahf
push
int
jns
cmps
stc
sub
pop
xchg
mov
lds
push
iret
mov
sbb
inc
bound
pop
or
adc
cdq
inc
or
(bad)
int3
retf
mov
mov
dec
add
popa
call
adc
and
dec
dec
add
and
push
data16
jmp
ret
mov
ss
pusha
das
fild
retf
adc
(bad)
jmp
and
xchg
mov
mov
inc
lds
mov
shl
scas
shr
cmc
adc
inc
mov
adc
aam
push
xchg
cmp
mov
inc
fmul
xchg
loopne
mov
outs
push
mov
sbb
inc
das
or
cmp
xor
rcr
xor
xchg
clc
or
pop
fs
add
cmp
popa
popa
sub
xchg
mov
adc
retf
push
push
ret
popf
test
adc
add
inc
fld
push
movs
imul
jmp
icebp
mov
sahf
loopne
inc
jmp
and
jmp
not
mov
jmp
adc
inc
in
lods
push
xor
inc
cs
pop
xor
imul
lahf
push
inc
push
jnp
sub
popa
or
rcr
cwde
or
mov
adc
sbb
pop
mov
sub
jecxz
mov
inc
sub
ret
sahf
xchg
cmc
in
(bad)
mov
iret
push
mov
mov
push
popf
ja
dec
adc
in
xchg
and
add
dec
sbb
adc
push
inc
dec
dec
dec
sbb
pusha
sbb
add
and
dec
rcl
das
gs
inc
je
je
push
inc
pusha
add
cmp
sbb
xor
cli
xchg
pop
repnz
xchg
shl
sbb
jge
enter
cs
sbb
push
mov
pop
inc
fld
push
push
sub
xchg
or
add
popa
adc
dec
mov
and
mov
and
or
jo
adc
mov
adc
test
fs
jg
jecxz
es
in
inc
add
movs
shl
icebp
aas
or
je
xlat
clc
(bad)
ret
add
xor
out
dec
(bad)
dec
inc
imul
or
add
adc
sub
sub
mov
dec
and
mov
jmp
cmp
out
inc
(bad)
sbb
popa
sbb
xchg
push
mov
mov
aas
add
xchg
imul
pop
add
sub
jl
xchg
out
stos
push
movs
push
dec
scas
je
jne
xchg
mov
xchg
pusha
mov
das
cmps
or
int3
sbb
jno
and
or
xchg
or
and
les
mov
adc
pop
add
pusha
test
push
jecxz
xor
xchg
mov
jae
push
adc
xchg
test
mov
fs
lahf
mov
mov
add
or
cmp
test
lock
pusha
pop
push
out
(bad)
pusha
retf
and
das
icebp
mov
icebp
add
add
ins
mov
jbe
inc
imul
sahf
rcl
bound
inc
and
add
ss
pushf
(bad)
adc
add
dec
mov
mov
repnz
inc
add
movs
in
or
ret
or
add
(bad)
(bad)
loopne
pop
add
call
fs
div
xor
repnz
ja
jo
pop
iret
jnp
repnz
adc
or
ja
add
jl
push
dec
fwait
es
mov
shl
add
shl
push
imul
mov
mov
sub
fld
cmp
hlt
mov
jnp
stos
repz
push
mov
out
add
rol
test
(bad)
popa
and
lock
sub
cmp
clc
inc
out
mov
push
clc
pusha
test
ins
ins
ins
xlat
mov
or
dec
pop
pusha
push
movs
xor
dec
mov
inc
mov
dec
ret
imul
xchg
imul
in
test
stc
pop
sbb
lods
xor
in
push
inc
and
popf
femms
xor
adc
adc
lods
shl
cdq
cmp
lock
push
mov
adc
in
in
xchg
inc
mov
scas
cmp
pop
imul
xor
ins
adc
sub
cmp
push
rcl
xchg
add
lods
pop
mov
dec
shl
and
add
dec
push
cmc
cdq
movs
dec
loop
jmp
mov
lods
push
pop
rol
or
mov
add
inc
and
pop
jb
push
push
mul
lock
mov
inc
dec
sbb
shl
es
pusha
inc
bound
out
or
push
sbb
adc
add
mov
jg
in
cmp
inc
jg
enter
imul
jl
dec
icebp
retf
(bad)
push
mov
dec
aaa
jae
add
push
loope
adc
jmp
and
push
xor
lods
ds
sbb
test
cmp
inc
(bad)
shl
xor
push
(bad)
fsubr
push
pop
das
add
invlpg
in
adc
pusha
outs
shl
adc
add
out
sbb
push
in
inc
pop
inc
push
cmp
sbb
into
inc
pop
loop
pop
inc
mov
dec
shl
mov
out
or
bound
adc
jae
cdq
xchg
push
ror
adc
xor
pop
imul
mov
jne
sub
adc
jl
push
or
sbb
movs
mov
(bad)
and
lods
push
adc
pop
push
jb
jns
lods
fisubr
or
inc
jae
(bad)
jl
cmps
or
pop
sar
cmp
jne
inc
xchg
mov
pop
cmc
jecxz
dec
(bad)
in
mov
(bad)
mov
call
call
adc
fnsave
sti
fwait
inc
dec
and
push
call
in
or
inc
not
je
adc
jmp
jne
scas
nop
pop
sub
es
jmp
pop
sub
out
popa
pop
or
inc
push
inc
(bad)
call
retf
shl
xor
or
adc
add
repz
add
add
mov
mov
inc
jmp
fwait
add
addr16
lea
mov
inc
xor
xor
inc
bound
(bad)
push
inc
arpl
std
mov
mov
(bad)
jl
pop
sub
sub
fld
std
movs
lods
or
pop
xchg
lods
or
mov
mov
je
es
daa
fsubr
mov
cmp
inc
cmp
and
inc
xor
xchg
cmps
cmp
mov
ror
push
outs
jmp
push
bound
pop
jmp
cs
(bad)
mov
dec
push
(bad)
test
inc
dec
xor
dec
dec
xchg
rol
daa
loop
lea
add
pop
xchg
push
ret
jo
sbb
dec
sar
shl
inc
add
(bad)
sbb
in
pop
jo
add
clc
out
mov
lods
xchg
(bad)
adc
cmp
xchg
cmp
inc
dec
jl
in
hlt
lahf
hlt
mov
sbb
cli
mov
clc
ss
inc
enter
cmps
inc
push
inc
fiadd
repnz
inc
sbb
add
and
add
setg
xchg
xor
daa
add
xor
jle
push
adc
or
mov
int3
jl
inc
ret
shr
repnz
shr
jne
lea
dec
add
push
mov
mov
std
pop
and
or
push
push
dec
dec
cli
cmp
xor
inc
nop
mov
push
xor
adc
dec
in
imul
in
mov
and
xor
movs
mov
ja
jp
sbb
in
call
xor
loope
outs
cmps
xchg
fcom
xor
cwde
mov
cwde
pop
mov
push
movs
add
daa
inc
imul
mov
icebp
sahf
mov
jle
adc
lea
pop
mov
mov
inc
push
cdq
lock
dec
in
pop
ins
jge
jae
dec
in
dec
sbb
ret
dec
inc
xor
sahf
cmps
(bad)
cmp
adc
push
jnp
loopne
leave
adc
lock
lsl
push
pusha
sbb
pop
das
lods
shl
in
xchg
add
js
jp
sub
and
sub
ins
xor
movs
adc
jg
movs
shl
lea
hlt
push
shr
retf
imul
adc
rcl
ret
sub
out
aaa
lock
jecxz
sti
dec
jne
push
xchg
cmp
or
(bad)
jne
daa
mov
or
xchg
and
mov
cld
shl
inc
xor
in
enter
cdq
add
pop
mov
in
inc
sbb
inc
and
and
push
fadd
inc
push
xor
mov
std
mov
add
add
sbb
and
sbb
sub
jp
daa
or
mov
add
sti
dec
jne
out
gs
repz
ss
addr16
mov
cmp
jl
inc
cdq
mov
ss
das
mov
push
stc
push
fdivr
test
pushf
push
inc
add
sub
ret
ret
dec
hlt
into
repz
pushw
or
or
pop
cmc
cld
add
(bad)
fdivr
adc
inc
adc
jmp
outs
rol
fldcw
pop
mov
ins
push
cld
pop
lea
jo
nop
pop
dec
mov
pop
ret
push
adc
inc
xchg
xchg
dec
cmp
xor
pop
inc
or
xor
shl
dec
xor
repnz
mov
int3
and
mov
clc
pop
xchg
inc
cmp
sahf
add
and
adc
inc
and
hlt
adc
sbb
(bad)
daa
pop
in
inc
imul
(bad)
out
xlat
les
leave
jp
scas
ds
aam
in
add
jns
rol
mov
ja
or
shr
ret
cmp
add
call
movs
rcr
xchg
cmps
lock
lods
adc
or
mov
aaa
push
lea
and
sub
mov
imul
repnz
cmps
xchg
mov
inc
add
and
ret
adc
jae
pop
jmp
inc
jmp
dec
sbb
xlat
outs
sub
xchg
pop
fs
jle
adc
or
ja
and
inc
pop
jle
bound
lock
add
inc
push
call
repz
rcl
adc
in
inc
pop
sub
sub
ss
or
dec
lock
or
xor
pop
pop
and
push
sahf
or
or
or
sub
rcl
mov
fistp
cmp
fstp
cmp
or
cs
inc
add
test
in
xchg
dec
dec
push
add
lea
push
adc
and
imul
(bad)
push
mov
push
scas
cwde
or
adc
xor
mov
inc
mov
test
inc
or
int
inc
push
mov
jno
je
out
ins
dec
fisub
retf
adc
inc
or
adc
sbb
test
(bad)
mov
(bad)
mov
clc
ss
ss
cmp
(bad)
cmps
or
cmp
pop
data16
ret
fstp
and
in
push
fstp
vmread
push
loopne
test
ds
cwde
into
xchg
push
or
add
pushf
cmp
cmp
sahf
clc
or
inc
cmp
dec
inc
push
inc
mov
pop
xor
sbb
bound
pop
test
adc
imul
push
out
inc
fs
sbb
or
lds
movs
and
mov
ss
push
xchg
or
xor
pop
sbb
xchg
(bad)
jns
and
jmp
imul
loopne
or
adc
rcl
or
cmp
xchg
imul
cmp
dec
pusha
xchg
rol
shr
dec
cld
pop
push
and
pop
lods
loope
retf
push
jp
mov
xlat
popa
fdiv
push
jae
xchg
shl
inc
cmps
adc
push
and
into
loopne
or
mov
sub
mov
dec
add
sbb
push
cmps
adc
push
out
pop
aam
movs
pop
test
iret
sar
hlt
or
sbb
inc
cmp
repz
ins
jo
js
cmp
repz
test
lods
xlat
cwde
sbb
or
js
imul
add
and
cmp
xchg
xor
push
mov
mov
aaa
inc
jb
mov
icebp
xor
mov
cmp
mov
sub
jae
jns
dec
mov
pop
lods
pop
push
add
pop
rcl
add
xor
inc
xor
xor
push
(bad)
shr
pop
imul
retf
or
popf
mov
sub
add
fwait
sbb
cmp
xchg
mov
dec
(bad)
movs
jnp
lock
nop
cdq
adc
mov
xor
loopne
lock
cld
int3
and
inc
cmp
adc
mov
mov
sub
lock
hlt
cmp
xor
or
outs
add
in
mov
add
adc
pop
mov
sbb
dec
call
adc
ret
dec
push
sbb
and
inc
sub
and
(bad)
loopne
scas
xchg
je
dec
xor
adc
movs
adc
pop
inc
ret
loop
leave
mov
pop
call
or
(bad)
or
shl
xchg
inc
cmp
and
cmp
jne
jge
rcl
jle
sub
jle
ret
test
sub
hlt
out
mov
xchg
xchg
inc
lds
jmp
mov
pop
loopne
pop
cmp
or
xlat
push
inc
add
jno
ret
xor
xor
inc
sub
inc
dec
or
mov
daa
add
imul
mov
mov
adc
cmp
inc
or
or
imul
call
aam
bound
sbb
mov
push
and
sbb
push
xor
stos
test
sbb
pop
jnp
setp
or
in
xor
popa
adc
xor
add
rol
inc
pop
(bad)
call
xchg
pop
int
aas
push
push
and
xchg
xor
mov
cmp
adc
add
es
jnp
dec
inc
ja
pop
in
cmp
inc
or
mov
add
jmp
adc
push
inc
jp
add
pop
and
sbb
shr
sbb
imul
mov
push
ss
pop
cmps
or
lds
jno
or
dec
(bad)
xchg
pop
xor
rcr
dec
mov
add
aam
xor
add
add
xlat
mov
gs
fcom
xchg
and
add
enter
mov
xor
(bad)
jecxz
adc
lods
push
shl
nop
je
xchg
lods
mov
cmp
mov
hlt
sub
push
add
cmp
inc
dec
or
add
cmp
dec
push
loop
pop
cmp
xchg
xchg
rcl
mov
push
dec
mov
add
xlat
adc
rcr
jl
push
je
mov
inc
sar
jmp
adc
mov
daa
push
ja
add
and
jp
dec
(bad)
fmul
loopne
sub
fcmovb
rcl
out
dec
or
add
test
inc
cmp
sub
and
jmp
and
mov
leave
dec
popf
jns
push
fiadd
jnp
jle
out
bound
test
add
movs
inc
arpl
pop
jnp
rcl
push
or
adc
rol
retf
ins
pushf
div
dec
daa
rol
or
inc
sbb
add
lods
inc
icebp
pop
(bad)
mov
mov
loop
fadd
je
jnp
fwait
out
pop
sub
or
mov
dec
mov
add
pop
or
push
mov
push
or
out
mov
je
push
mov
inc
adc
pop
lods
hlt
inc
sub
pop
jo
inc
inc
mov
push
xor
mov
and
es
dec
mov
sbb
pusha
shl
pop
js
xor
xchg
je
pop
call
cmps
fs
push
add
enter
jae
jne
add
push
mov
xchg
mov
fdiv
jb
jo
ret
cmp
xchg
inc
hlt
xchg
je
scas
or
fdivr
add
sbb
fiadd
xchg
lds
adc
xor
add
or
sub
mov
and
mov
hlt
adc
les
es
dec
daa
inc
add
jg
js
xchg
(bad)
sbb
or
cdq
mov
imul
(bad)
fadd
inc
scas
jmp
repnz
adc
dec
or
ins
xor
mov
dec
mov
cmp
cdq
inc
sub
inc
nop
add
jg
mov
or
(bad)
movs
or
in
xlat
adc
not
xor
outs
mov
adc
xchg
movs
je
(bad)
xor
sbb
inc
jb
lds
jbe
push
pop
sub
jmp
inc
mov
pusha
xor
ret
imul
add
xor
mov
xchg
arpl
mov
inc
jmp
gs
(bad)
fidiv
ss
adc
je
cmp
add
fld
cs
and
sbb
dec
adc
xor
cmp
and
xor
pushf
jp
mov
and
push
mov
add
mov
gs
jecxz
push
xchg
les
int3
and
mov
dec
push
clc
ror
aas
or
or
add
gs
adc
xchg
sbb
je
cwde
inc
mov
enter
or
adc
mov
pop
mov
loop
or
inc
rcl
and
inc
push
dec
and
shl
mov
jae
mov
fs
sub
or
fidiv
mov
cmp
and
inc
nop
out
jge
push
pop
sbb
mov
jb
fwait
imul
xor
(bad)
out
cs
push
aam
xchg
iret
pop
sbb
mov
imul
hlt
fs
scas
and
popa
js
pop
lods
pop
mov
shl
push
lods
cmps
mov
pop
inc
test
add
pop
inc
push
scas
cld
inc
call
pop
inc
pop
pop
inc
push
inc
and
data16
push
lods
fs
jo
add
xchg
mov
jnp
add
and
mov
pop
xchg
push
call
add
call
mov
xor
mov
adc
push
add
push
xor
push
dec
mov
popa
ja
xor
in
(bad)
aad
jp
dec
push
jo
mov
adc
dec
movs
es
ss
inc
sub
pop
add
push
(bad)
mov
scas
call
cmp
adc
es
js
or
addr16
mov
inc
cmp
ret
and
ffreep
add
jno
es
cs
daa
jns
lahf
sub
sub
lar
imul
in
and
addr16
ret
and
addr16
adc
fsubp
inc
js
mov
dec
rol
or
outs
js
popa
lods
ret
xchg
ja
and
fdiv
dec
fst
es
and
adc
and
add
mul
adc
xchg
dec
sbb
dec
mov
pop
add
dec
cs
ror
pop
sbb
sbb
adc
loope
push
test
add
(bad)
and
leave
push
add
mov
xchg
pop
and
leave
push
jb
and
sbb
pop
inc
mov
and
add
in
pop
push
shl
frstor
cmp
mov
rol
sub
jb
dec
sub
leave
das
xor
mov
and
xor
or
xor
ret
in
jb
pop
ss
xchg
or
pop
fwait
cmp
mov
xchg
cmp
ds
sbb
sbb
inc
inc
cmp
cmp
inc
inc
push
cmp
pop
retf
mov
add
or
add
inc
inc
add
ror
test
inc
mov
push
(bad)
push
xchg
add
lock
add
pop
push
xchg
pop
sahf
prefetchwt1
dec
outs
outs
imul
mov
movs
sbb
out
mov
das
mov
ds
jmp
ss
or
cmovnp
cmp
add
ficomp
mov
xor
push
pop
mov
mov
dec
push
movs
or
popa
mov
pop
mov
or
ins
lods
shl
push
mov
adc
inc
inc
xor
enter
pop
jae
xor
xchg
add
test
cli
cmp
bound
jbe
cvtdq2ps
or
push
int3
gs
adc
jl
xor
push
sahf
push
or
and
jbe
add
push
inc
cmp
aas
and
pop
xor
sub
mov
sbb
jbe
adc
sub
and
and
jo
adc
xchg
jbe
outs
pop
cmps
shl
jge
xor
and
or
loope
(bad)
ficomp
mov
push
str
sub
or
adc
lock
ins
cwde
xor
or
cmc
loope
into
fbld
xor
pop
add
cdq
or
inc
cmps
pop
and
inc
or
pop
ds
add
nop
mov
mov
pushf
xchg
arpl
setne
inc
push
or
out
sub
iret
call
ror
leave
sbb
fisubr
fild
iret
jge
rol
jne
ret
jo
xchg
or
dec
adc
add
(bad)
jo
push
push
test
add
addr16
push
push
dec
inc
in
sbb
inc
add
ja
or
inc
neg
int
mov
test
pop
or
xor
add
popa
int3
ins
xor
or
xchg
sbb
or
int
dec
(bad)
or
or
push
pop
aam
add
in
sbb
ins
dec
or
or
mov
arpl
lahf
ss
cmp
pop
xchg
iret
mov
mov
das
pop
mov
inc
mov
movs
jno
mov
ins
fadd
adc
call
movs
js
and
(bad)
push
pop
fdiv
jne
xchg
jg
scas
in
mov
add
inc
enter
and
pushw
xchg
mov
call
pop
mov
mov
jl
cmp
mov
jge
js
scas
sub
push
les
sbb
add
jae
(bad)
dec
popf
adc
jns
mov
or
jns
test
loop
inc
test
add
add
add
add
add
fcmovnu
and
call
and
sub
add
xor
add
inc
outs
xor
add
fsubr
mov
bound
sub
add
or
(bad)
push
mov
ficomp
and
sub
or
retf
add
shr
test
mov
cmps
call
call
movs
mov
movs
jge
imul
movs
movs
push
mov
ss
cmps
push
xchg
lods
cmp
movs
test
imul
test
imul
stos
les
dec
fstp
dec
mov
adc
sar
shl
push
test
ja
test
adc
inc
mov
out
in
dec
mov
or
ss
cmp
dec
mov
lahf
and
jns
int
push
inc
mov
fisub
outs
or
inc
je
sahf
in
jge
mov
xchg
mov
cmp
test
ds
adc
jmp
shl
and
pop
rcl
or
shl
jb
ret
inc
adc
jb
add
inc
or
hlt
dec
in
inc
pop
sbb
pop
or
jno
add
test
push
mov
jbe
outs
sbb
sbb
pop
cmp
xor
bound
xchg
movs
mov
inc
adc
and
and
and
or
sub
jae
stos
(bad)
ror
add
jl
loop
jo
or
cs
das
jmp
dec
sub
movs
sub
cmps
cmp
push
push
push
ret
push
add
pop
mov
sbb
mov
sbb
add
es
inc
in
add
lods
xor
gs
jno
adc
xor
movs
dec
pop
mov
pushf
mov
and
nop
nop
sbb
mov
cwde
inc
cmp
fwait
sbb
or
jno
adc
inc
push
xor
bound
dec
in
or
pop
jns
add
(bad)
and
mov
and
lds
and
inc
pop
push
push
movs
and
adc
rcl
and
xchg
data16
fsubr
pop
mov
dec
pop
push
sub
mov
rol
mov
push
dec
add
sub
ja
adc
int3
or
(bad)
and
inc
push
sbb
xlat
adc
inc
mov
imul
xor
ret
jne
mov
call
dec
ror
sub
cwde
fwait
jne
jne
dec
and
cmp
pminub
xor
dec
mov
retf
cmp
mov
xor
pop
dec
xor
mov
cld
mov
fisub
iret
(bad)
imul
fdivr
xor
and
add
js
jae
stos
shr
repz
in
xor
out
xor
and
cmp
sub
lock
push
je
or
add
dec
cmp
js
add
cmps
xor
adc
stos
add
mov
jge
cmp
mov
push
xchg
(bad)
lock
xchg
aas
movs
dec
and
cwde
outs
sbb
jne
mov
fsubr
cli
dec
push
hlt
jo
ds
mov
dec
or
adc
cmp
add
xor
adc
fmul
inc
lds
inc
add
xor
adc
inc
(bad)
sbb
in
jae
ror
push
and
mov
test
mov
mov
xor
jnp
add
sbb
stc
inc
xchg
xchg
sbb
inc
xchg
in
inc
push
ds
fmul
mov
inc
loopne
inc
sbb
inc
inc
cmp
or
dec
jnp
nop
or
mov
dec
stos
jmp
stos
add
dec
and
or
and
adc
jne
push
sbb
sbb
stos
cmp
call
dec
inc
popa
movs
nop
stos
in
add
cmp
add
add
add
push
xor
push
or
jo
push
(bad)
mov
test
lock
lock
inc
xchg
xor
ror
and
push
xchg
(bad)
lds
push
adc
pop
push
xchg
jo
push
dec
xchg
xor
pop
add
add
(bad)
pop
xor
pop
xor
pop
add
push
pop
(bad)
pop
pop
leave
adc
pusha
popa
add
les
fdivr
adc
inc
cmps
mov
sbb
ins
fdivr
or
fs
push
dec
adc
push
cs
enter
xor
or
addr16
aad
inc
push
adc
dec
pop
dec
push
and
sub
in
lds
jmp
add
xchg
add
mov
jl
mov
fs
call
sar
sahf
push
fadd
int3
lds
mov
xor
or
sub
sysret
sub
repnz
pop
push
or
adc
fsubr
mov
or
jp
cmc
lea
dec
mul
test
jbe
mov
push
cld
retf
xor
or
leave
inc
mov
sub
sysret
sbb
sub
outs
add
and
or
inc
xchg
lock
xchg
les
jmp
or
nop
lock
or
dec
push
jb
fnstcw
cld
je
addr16
push
inc
nop
sub
jbe
or
adc
jge
std
or
inc
or
mov
add
inc
test
inc
sub
imul
in
movs
fwait
outs
ja
add
ret
mov
mov
mov
push
adc
retf
fadd
cwde
std
add
fwait
and
dec
mov
add
popa
cmc
push
push
lock
inc
push
mov
bswap
mov
daa
fs
jmp
dec
cmp
dec
test
faddp
xchg
inc
dec
and
pop
sbb
pop
shr
jae
mov
mov
dec
jp
sub
jmp
nop
ja
and
mov
pop
add
cli
test
sub
pop
xchg
clc
adc
sub
or
jle
(bad)
jmp
push
je
and
adc
imul
jno
in
mov
mov
fs
mov
pop
jmp
adc
inc
add
xor
jl
outs
mov
js
sbb
xchg
or
fbstp
inc
push
jo
push
inc
iret
jl
adc
(bad)
outs
add
hlt
into
xor
hlt
fistp
ins
push
clc
jae
hlt
mov
repnz
in
dec
mov
add
push
add
mov
mov
call
xchg
xor
adc
jns
add
movs
idiv
ins
cmp
and
loope
mov
sub
fmulp
mov
add
call
loopne
xor
adc
(bad)
call
xchg
dec
retf
loop
arpl
je
stos
ss
sub
movs
in
test
mov
mov
mov
je
sbb
jg
or
cmp
dec
lahf
jno
mov
movnti
push
sbb
xchg
hlt
jae
push
dec
and
jle
cmp
fist
mov
mov
call
xchg
dec
imul
mov
jmp
dec
les
repz
jmp
into
stc
mov
je
sbb
sbb
ss
xor
sbb
out
fidiv
int3
cmp
xchg
or
shl
mov
lock
loopne
pop
fstp
cmps
dec
sbb
jns
out
and
or
adc
add
pop
sahf
retf
jae
add
adc
or
call
mov
stos
jg
pop
cs
out
and
test
sbb
jg
push
mov
xor
out
adc
add
add
cs
mov
and
inc
sar
sbb
adc
push
clc
jg
pop
cs
add
loop
aad
les
add
inc
call
xor
adc
jne
sub
mov
sub
xchg
xor
push
add
inc
adc
nop
sbb
fmul
out
fisttp
test
xor
jmp
inc
and
and
ret
cld
xor
dec
add
mov
ror
mov
jbe
mov
push
jns
inc
or
into
ss
and
and
push
sub
sub
dec
add
add
inc
add
loopne
fmulp
inc
pop
xor
jg
and
fcmovnbe
xchg
sub
outs
dec
jo
outs
add
mov
dec
or
push
nop
pop
dec
cld
(bad)
jno
rcl
(bad)
dec
popa
popa
ins
retf
push
add
sub
inc
mov
sub
ins
mov
push
adc
cwde
ret
ret
jecxz
rol
xor
adc
sub
dec
movaps
arpl
inc
push
je
mov
jo
fcom
inc
popa
adc
loope
ror
test
dec
inc
cdq
add
add
dec
sbb
sub
fs
out
and
or
add
js
add
add
mov
push
fisub
xchg
add
loopne
push
ror
dec
dec
sbb
rdmsr
lahf
(bad)
out
les
add
push
xchg
leave
stos
stos
jecxz
mov
ret
add
arpl
imul
jno
lds
ds
or
ds
or
cmp
dec
in
pop
jmp
sub
or
add
inc
mov
aam
rcl
fwait
xor
nop
cmp
adc
mov
mov
adc
sbb
test
add
adc
pushf
repnz
mov
mov
and
add
and
mov
push
mov
xor
xlat
pusha
adc
les
mov
les
sbb
push
dec
adc
stc
sub
neg
jmp
add
fisub
and
xchg
mov
inc
pusha
push
push
test
and
sub
and
out
and
push
mov
mov
pusha
sbb
fwait
mov
xor
aas
fsub
mov
rol
sbb
dec
push
sub
mov
or
xor
inc
xor
push
jbe
xchg
add
xchg
mov
add
(bad)
rol
adc
xchg
sub
or
adc
jae
inc
mov
lahf
in
pop
and
mov
lods
inc
movs
call
jmp
or
inc
fs
push
xchg
sub
lds
ret
movups
jmp
inc
inc
or
jbe
cmp
cmp
adc
sti
jmp
inc
push
sbb
retf
(bad)
push
(bad)
sub
enter
clc
add
pusha
in
repz
add
lock
fld
sbb
jmp
or
xor
mov
rcl
jecxz
jl
rcl
je
lahf
pusha
jmp
sub
in
sub
or
iret
add
and
add
adc
dec
xor
xor
pop
dec
ss
lock
mov
in
je
ss
jmp
pop
leave
mov
sub
push
shl
add
pop
sbb
(bad)
cli
add
cmp
mov
imul
jno
imul
push
aaa
add
sbb
mov
sub
add
cmp
iret
or
mov
pop
dec
out
xor
sbb
push
pop
sbb
xor
sub
into
and
(bad)
mov
gs
adc
adc
fdivr
push
and
repnz
sbb
sub
add
mov
ja
adc
push
jl
sbb
fcos
test
cmp
je
mov
lods
enter
push
dec
inc
lock
jmp
aaa
sub
sub
xchg
add
enter
dec
call
retf
dec
xor
rol
jle
or
nop
push
test
jge
cmps
add
xchg
test
lods
add
cmp
cmp
je
pop
das
loopne
adc
push
mov
cmp
sub
sbb
pop
sbb
mov
push
add
jns
mov
add
jo
pop
jnp
subps
sbb
push
cmp
xchg
jbe
add
xchg
or
xor
xor
js
mov
imul
mov
js
add
mov
push
test
jge
xor
nop
in
xor
test
xchg
mov
ret
mov
cmp
add
sbb
pop
jg
jno
mov
(bad)
cld
pop
shl
daa
fiadd
test
outs
mov
mov
mov
pop
mov
out
test
sub
xor
xchg
pop
xchg
cmp
enter
cwde
xor
and
jb
pushf
push
scas
and
pop
mov
pop
add
add
cmps
and
push
int
adc
clc
mov
mov
jmp
cmps
mov
ret
push
dec
add
clc
sbb
pop
xor
ins
jecxz
(bad)
loop
shl
adc
or
bound
ins
shr
rcl
adc
repnz
push
mov
pand
inc
mov
je
mov
and
mov
mov
sub
xchg
adc
add
nop
lods
or
fadd
je
pop
jmp
push
add
adc
adc
jbe
aas
add
add
and
add
(bad)
es
aas
nop
les
fisubr
sub
cmp
xchg
and
icebp
jb
sub
adc
imul
and
or
mov
out
or
and
and
sbb
cmps
mov
jo
js
push
cld
add
adc
cmp
lods
and
mov
aas
push
rcl
inc
sbb
or
mov
imul
cmp
pop
xor
sti
push
test
lea
fcom
inc
aad
mov
call
xchg
outs
dec
jmp
push
add
xchg
movs
and
aad
push
mov
jns
sub
push
inc
int3
iret
mul
xchg
push
enter
add
leave
push
loopne
idiv
and
ja
xchg
pop
je
mov
pcmpeqb
ins
and
pop
add
lods
ins
pop
push
push
mov
movs
dec
shr
fcmovne
mov
imul
pop
add
inc
fmul
in
inc
jbe
(bad)
(bad)
sbb
mov
dec
test
jle
arpl
and
pop
dec
outs
pop
jb
inc
push
push
and
xor
xchg
dec
sub
jb
inc
pusha
mov
scas
adc
inc
scas
and
jb
lock
loopne
cld
xor
cmc
mov
cs
inc
ror
jle
dec
or
sbb
pop
ja
pop
sbb
sub
jmp
and
cdq
xor
push
call
lea
push
mov
stos
xor
mov
add
(bad)
pop
sahf
mov
cmp
jge
sbb
out
sbb
pop
dec
mov
jmp
mov
pop
push
jle
(bad)
es
(bad)
dec
ja
mov
inc
mov
or
sbb
fcomp
add
(bad)
nop
retf
in
jb
add
aad
xor
adc
fimul
or
fcom
sbb
push
mov
push
add
inc
and
loope
in
push
xor
in
add
pop
mov
mulps
loopne
push
pop
(bad)
inc
ja
sbb
inc
push
js
dec
pop
mov
push
pop
lea
je
fadd
push
dec
xchg
sub
xchg
xchg
xchg
loopne
mov
dec
jmp
xor
pusha
cmp
and
neg
xchg
jb
ins
xchg
mov
shl
jnp
mov
sbb
rcl
mov
jp
mov
inc
or
inc
ins
aaa
and
ret
inc
push
push
test
mov
mov
xchg
xor
and
push
dec
dec
add
sbb
push
jle
or
cmps
clc
cli
push
xchg
sbb
(bad)
push
neg
and
sahf
xchg
dec
into
imul
je
add
add
mov
inc
pop
pop
hlt
out
mov
xchg
xor
data16
jp
inc
adc
push
js
xchg
call
cmp
sbb
loop
add
mov
xchg
adc
pop
adc
push
dec
mov
outs
inc
pop
lahf
sqrtps
and
lea
sbb
stos
add
pop
call
push
cmp
jnp
dec
inc
or
push
punpckhbw
(bad)
loopne
pop
mov
push
inc
in
xor
push
idiv
adc
fst
and
imul
inc
push
rol
loopne
pop
mov
dec
sbb
rcl
sub
add
sbb
xchg
mov
jle
test
lahf
or
add
mov
jmp
mov
mov
add
call
ret
pop
add
push
dec
aam
inc
in
mov
lea
mov
adc
add
pop
popa
pop
jl
loope
stc
or
gs
scas
add
imul
popf
xor
in
push
imul
push
neg
js
pop
repz
leave
les
and
sub
lea
(bad)
push
mov
and
cmp
mov
adc
sub
sbb
xor
add
xor
jae
cmp
daa
or
adc
fs
mov
xor
popf
mov
cmp
icebp
add
push
xchg
addr16
imul
jno
repz
jns
mov
cli
jp
xor
inc
add
jmp
aad
jo
inc
sub
adc
lods
shl
sub
xor
xor
adc
dec
push
je
bound
push
mov
pop
call
jmp
pop
cmovs
sub
in
sub
lods
std
dec
movs
push
sub
jecxz
stos
adc
call
aam
push
cld
cmp
inc
in
ror
inc
xchg
xchg
inc
mov
mov
xchg
sbb
ja
movs
add
inc
or
or
mov
push
inc
ficomp
cmp
rcl
or
dec
sbb
xor
or
sbb
enter
pop
sub
pop
add
jae
imul
out
xor
jns
mov
pop
push
sub
lods
pop
pop
mul
inc
ins
ins
adc
nop
retf
and
pop
push
mov
(bad)
(bad)
fwait
shl
push
addr16
ss
mov
lods
sldt
and
aad
mov
mov
aas
and
adc
bound
repnz
mov
mov
test
dec
fst
aaa
xchg
sbb
test
mov
mov
dec
jae
ins
and
ins
push
jp
xor
jle
mov
test
scas
sub
add
mov
dec
and
int3
inc
ss
jmp
imul
in
punpckhdq
pop
cmp
sbb
(bad)
cmp
cmp
iret
xchg
jno
leave
int
mov
mov
mov
inc
push
dec
sub
jne
mov
dec
sub
add
sbb
xor
mov
or
mov
mov
adc
test
dec
fist
nop
sbb
add
(bad)
cvtdq2ps
imul
or
dec
mov
xchg
iret
bound
xchg
ss
adc
repz
in
add
xchg
and
and
xchg
mov
adc
xchg
rcl
aaa
mov
sub
out
pop
or
and
xchg
cmp
daa
inc
inc
mov
or
xor
aad
adc
rol
mov
cld
pop
cwde
jb
mov
pop
inc
and
mov
mov
push
and
or
sub
push
cdq
xchg
xstore-rng
cmps
test
sar
fwait
test
adc
inc
adc
push
pusha
cs
dec
pop
xor
mov
or
cmp
push
fcomp
nop
sub
sbb
(bad)
dec
cdq
retf
add
mov
pop
and
mov
ins
cmp
outs
fiadd
dec
aas
adc
cmps
mov
ss
dec
xor
dec
xor
ret
sbb
mov
shl
addr16
jge
or
inc
add
cmp
mov
rol
ret
nop
aas
adc
cli
sbb
and
push
cmp
js
mov
or
xchg
iret
xchg
dec
inc
or
into
cmp
mov
call
rcr
dec
enterw
cld
push
imul
cdq
push
lea
jge
xchg
dec
mov
mov
pusha
add
push
and
outs
add
adc
add
pusha
xor
pop
shr
mov
and
cmp
adc
fsubr
inc
xchg
js
ja
fdiv
shr
sbb
lea
xor
(bad)
aas
iret
sub
add
daa
dec
jb
add
add
inc
sar
adc
arpl
clc
xor
push
hlt
test
or
push
cmp
mov
pusha
cmp
inc
xchg
(bad)
nop
inc
or
dec
adc
cdq
dec
jnp
add
push
mov
cmp
rcr
mov
sub
and
fs
ss
cmp
hlt
and
mov
or
cmps
xor
and
shl
sub
lock
or
rcr
or
push
mov
cmp
mov
stos
or
pop
ret
cmp
repz
hlt
jmp
sbb
cmp
jno
retf
rol
and
add
call
or
fbstp
test
je
fiadd
arpl
push
in
cmp
mov
sbb
xchg
aam
and
addr16
ror
mov
push
sbb
jnp
clc
jbe
add
or
mov
adc
addr16
es
and
ja
or
xchg
les
mov
and
cmps
adc
outs
mov
push
call
and
int
push
cwde
sbb
ja
add
push
imul
add
jmp
or
push
ficom
push
pop
dec
rcl
xor
or
bound
ret
std
aaa
pop
in
cwde
js
cmp
mov
jne
adc
fs
push
add
mov
mov
and
rcr
or
aaa
xlat
add
das
mov
dec
sbb
cdq
push
pop
sti
sub
add
jmp
ret
jb
mov
mov
or
and
dec
or
test
imul
cs
sbb
inc
cld
mov
cmp
push
sub
add
cmp
call
retf
add
push
mov
(bad)
xor
xor
add
add
rcl
or
outs
jmp
add
xor
pop
inc
test
cmps
mov
jb
mov
pop
inc
dec
mov
push
fs
jl
sub
cmp
pop
ins
sahf
rcr
lahf
mov
ds
int
xor
mov
movs
adc
inc
arpl
aam
mov
pushf
repnz
les
inc
es
push
fst
jge
mov
mov
out
clc
test
xchg
adc
fnstenv
jo
sbb
inc
ret
jl
add
outs
mov
and
test
mov
push
fwait
movs
sbb
dec
mov
rcl
fcomp
jnp
cmp
or
nop
loope
adc
mov
std
jnp
inc
mov
cmp
mov
hlt
enter
std
(bad)
or
enter
out
add
(bad)
jnp
ret
popa
and
push
xor
fld
test
jae
ds
nop
add
sub
pop
push
out
add
cmp
sub
or
lock
out
xchg
and
xor
lea
adc
out
jl
lock
loope
add
mov
(bad)
mov
cwde
lock
xor
xchg
and
xor
or
cmp
or
outs
adc
or
add
out
sbb
adc
sbb
mov
aam
add
pop
(bad)
int
or
inc
jmp
pop
mov
jno
sub
mov
dec
mov
adc
sub
dec
add
cmp
fwait
div
sub
mov
ins
mov
js
clc
xchg
add
xor
and
inc
call
sbb
push
sub
sbb
retf
ds
push
cmc
int
dec
movs
add
push
je
inc
xchg
shl
mov
and
ins
mov
sub
cmovne
and
adc
aaa
mov
loope
cmp
loopne
pop
movs
sbb
push
inc
daa
fs
inc
jl
jbe
push
sbb
pop
stos
xor
mov
xor
mov
inc
or
neg
xchg
movs
neg
in
jo
sub
jns
sbb
sbb
xor
shl
pop
sti
in
iret
jo
sub
into
loop
arpl
inc
and
jle
pop
and
cmps
dec
fcom
int3
and
(bad)
retf
push
aas
mov
xor
push
popa
or
sub
daa
addr16
call
movs
push
fs
mov
pop
and
movs
dec
fistp
mov
mov
gs
imul
test
es
push
das
add
add
sub
push
pop
hlt
push
cmp
mov
imul
lods
or
mov
imul
shr
jbe
xor
sub
mov
cmp
mov
mov
dec
inc
pop
add
xor
xor
test
inc
push
aam
xor
push
clc
and
and
xor
sti
mov
aaa
xor
sbb
clc
cmp
test
daa
ja
daa
lock
mov
hlt
inc
sub
lock
adc
(bad)
fsub
mov
fiadd
push
sahf
xchg
fwait
push
adc
or
adc
adc
mov
and
jmp
into
in
in
aaa
jns
sbb
or
call
push
adc
call
pop
sbb
les
jns
add
or
cmp
sbb
pop
sub
mov
add
loope
cmp
jecxz
fnsave
mov
retf
daa
or
idiv
pop
sbb
jp
or
cmp
xlat
rcr
dec
push
xchg
mov
stos
push
mov
pop
push
test
(bad)
ror
ret
sbb
das
into
dec
add
fs
jg
or
loop
cmp
jle
xor
call
jnp
or
inc
xor
jmp
xor
enter
scas
cmp
es
ds
pop
popa
hlt
cmps
mov
push
imul
inc
xor
push
jns
ret
or
rol
ins
(bad)
in
ror
je
aaa
and
into
std
adc
or
inc
std
fstp
add
xchg
mov
mov
pop
cmp
mov
adc
aaa
inc
outs
push
or
dec
adc
cmps
loope
mov
mov
sar
leave
cmp
(bad)
xrelease
cmp
push
xchg
popa
or
sahf
ja
or
inc
ja
and
loope
adc
xchg
(bad)
jmp
jno
(bad)
xor
and
popa
icebp
xor
cmp
add
xchg
or
or
imul
or
cld
ja
mov
imul
push
(bad)
ins
sub
sbb
das
push
mov
adc
pop
cmp
(bad)
(bad)
mov
inc
jg
xchg
mov
cwde
ficom
jmp
adc
jge
push
adc
sub
ss
or
cmp
sub
rol
daa
inc
jbe
enter
movs
dec
jmp
sbb
sub
inc
lods
dec
mov
clc
mov
and
mov
rcr
sub
(bad)
xor
inc
pop
mov
das
aaa
sub
mov
xchg
es
ins
sbb
push
lfs
rol
movs
jl
popa
arpl
xchg
add
jmp
sbb
pop
dec
inc
mov
rcl
or
pop
pusha
lods
inc
mov
pop
add
pop
adc
push
xor
enter
scas
mov
sbb
sub
push
mov
sub
mov
mov
loopne
push
and
ins
test
ret
mov
dec
sbb
xchg
add
xor
fadd
xchg
jo
aaa
or
pop
add
je
cmp
loop
daa
pop
(bad)
or
push
adc
fild
push
aam
jmp
call
imul
shl
outs
(bad)
int3
cmp
xchg
fisttp
jle
ja
add
js
inc
and
sahf
and
pop
les
or
sub
call
push
jle
fld
adc
jg
push
out
push
jns
aam
cdq
movs
shl
sbb
mov
xchg
dec
push
jnp
ja
and
cmp
mov
nop
mov
xor
xchg
and
add
add
xor
xchg
pop
or
cld
bound
bound
push
test
xchg
xor
test
lds
jo
ins
das
rcr
and
add
xlat
mov
sub
lock
(bad)
mov
fs
test
cmp
popa
sub
aad
pop
popa
cmc
pop
lea
pop
inc
loope
dec
fsub
pcmpgtd
inc
cmp
mov
sbb
push
inc
push
or
inc
inc
popa
adc
xor
rol
xchg
mov
out
push
mov
adc
test
je
enter
inc
jl
pusha
cmps
and
jo
or
aaa
xchg
mov
ins
sbb
adc
outs
mov
in
bound
ret
scas
adc
cmp
lock
fcomp
mov
mov
movntps
sar
sbb
nop
pop
ins
jl
lahf
add
mov
test
inc
jge
push
xchg
and
nop
test
mov
and
lea
gs
sbb
(bad)
or
out
add
mov
lahf
sub
daa
sub
out
add
cmp
mov
test
(bad)
dec
out
xchg
jl
mov
mov
push
mov
js
add
cmp
popf
add
div
add
scas
ret
xor
push
mov
shl
push
mov
mov
dec
ja
add
or
loope
pop
mov
xchg
dec
out
or
inc
add
dec
push
xor
xor
adc
sub
shl
popa
adc
jl
adc
push
jle
sbb
push
jl
xchg
dec
shr
iret
xchg
jo
jp
scas
push
pop
les
iret
daa
test
movs
test
les
jnp
mov
jno
fild
ins
cmp
jne
dec
stc
dec
adc
ret
mov
jnp
pop
test
call
nop
and
pop
xchg
lods
rcr
push
sahf
push
mov
inc
aaa
mov
leave
jo
cmc
mulps
adc
shr
aam
xchg
adc
add
and
cmps
aam
inc
fst
gs
mov
or
push
dec
adc
xchg
addr16
xchg
outs
sbb
add
jo
push
repnz
nop
push
pop
sbb
seto
jno
mov
inc
push
aaa
cmp
xchg
test
mov
adc
push
inc
aad
jb
jne
push
xor
cmp
mov
retf
push
jno
push
push
into
test
mov
jne
mov
out
dec
mov
jecxz
cmc
xchg
push
and
sub
cmp
pop
add
push
cmp
mov
add
outs
or
mov
pop
jne
push
ret
push
cmp
sti
mov
aas
rcr
outs
imul
call
jp
sbb
mov
add
inc
shr
imul
lods
or
loopne
mov
xor
cmp
push
mov
arpl
scas
mov
ror
sub
mov
jmp
stos
ja
mov
jle
inc
add
adc
add
mov
mov
mov
mov
and
xchg
jbe
je
push
cmp
pop
inc
pop
dec
pop
jp
and
fwait
mov
pop
sub
pop
push
sub
mov
push
aaa
adc
fist
adc
jle
loope
out
add
mov
rcl
clc
push
sub
xchg
mov
cmp
sbb
or
inc
dec
jo
icebp
mov
out
mov
ja
dec
add
add
mov
sbb
mov
mov
mov
inc
inc
sbb
sbb
cmp
sbb
ss
xchg
xor
sbb
inc
sub
cld
scas
ins
bound
test
sbb
or
stc
scas
xor
inc
enter
ins
push
pop
or
mov
or
dec
pop
ins
sub
inc
shl
popa
and
push
ds
jne
xchg
lds
fisub
mov
out
daa
mov
push
inc
jno
out
inc
or
jmp
neg
mov
loope
push
xchg
(bad)
mov
in
(bad)
and
mov
jl
xlat
dec
push
and
imul
(bad)
js
test
mov
lahf
or
sbb
mov
mov
cld
mov
jg
mov
adc
or
iret
imul
dec
mov
sbb
or
lea
mov
lea
movs
stc
movs
mov
sbb
sub
mov
add
sub
pop
xchg
repnz
inc
mov
adc
call
daa
add
jo
xor
mov
push
jl
add
mov
adc
loopne
popf
dec
cld
aas
mov
xadd
outs
(bad)
fnstcw
call
or
pop
(bad)
inc
sub
mov
add
lahf
jmp
pop
leave
dec
in
ret
das
(bad)
fist
dec
mov
or
movs
cmps
mov
(bad)
jp
or
and
cli
cmp
jge
mov
or
push
pop
cwde
xchg
pop
js
fild
mov
jp
push
mov
fst
sbb
mov
inc
popa
ins
stos
and
cld
sub
push
mov
add
rol
popa
test
and
retf
sbb
nop
adc
cmps
lods
lods
or
xor
enter
pop
add
push
loope
scas
lock
push
pusha
xchg
test
ror
or
add
pusha
test
frstor
dec
inc
dec
push
daa
jl
pop
in
call
mov
cwde
test
push
mov
mov
adc
movs
lock
mov
mov
inc
(bad)
aam
or
xor
inc
or
call
imul
sbb
push
push
add
movs
and
sti
pop
aam
aas
fsubr
inc
or
les
mov
jecxz
imul
cmp
idiv
dec
sub
and
jle
push
mov
inc
add
jmp
inc
inc
add
xor
pop
or
arpl
and
mov
ffreep
sar
popa
dec
add
je
clc
imul
popa
aas
stos
ss
and
sub
dec
sbb
push
mov
jp
sbb
test
inc
pop
push
xchg
inc
ins
nop
push
xor
std
sbb
push
or
int3
ja
mov
scas
or
cmp
clc
ret
push
xchg
or
adc
xlat
add
inc
cmp
jne
sub
push
inc
test
imul
cmp
xchg
popa
pop
sub
or
stc
rcr
loope
test
loopne
add
fbstp
fcmovnbe
dec
in
or
in
xor
or
and
(bad)
sub
sbb
jo
sbb
(bad)
lock
arpl
pop
cwde
fisub
mov
add
cmp
int
xchg
xchg
xor
aaa
jne
and
sbb
jb
mov
sahf
jbe
xor
pop
sub
lds
jp
inc
addr16
jne
cmp
sti
out
jge
jns
mov
in
(bad)
scas
add
js
nop
(bad)
xchg
out
push
mov
sbb
int3
inc
(bad)
leave
in
mov
ins
mov
dec
jmp
and
xor
sub
push
or
inc
push
push
mov
outs
jl
lahf
cdq
js
pushf
mov
fbld
js
mov
aas
aam
adc
jle
sub
or
dec
ret
push
dec
add
and
fild
mov
mov
inc
xchg
ins
fldenv
jmp
dec
and
sbb
mov
or
gs
adc
jmp
cs
mov
xor
lahf
inc
jb
cmp
dec
sbb
cmp
add
jne
cwde
ja
jno
add
push
dec
push
cs
and
out
xor
jbe
mov
adc
lahf
pop
rcl
cmps
mov
mov
xlat
sub
mov
dec
popf
inc
jge
adc
and
mov
push
push
pop
aam
shl
or
movs
push
xchg
and
mov
adc
(bad)
scas
or
mov
in
dec
arpl
and
cmp
inc
jge
bound
pop
aad
push
pop
sbb
lods
hlt
pop
rcl
rcl
mov
xchg
pop
mov
loopne
add
mov
cmp
fwait
sub
mov
(bad)
and
or
sbb
cmp
outs
lea
push
sbb
out
add
dec
loopne
fwait
or
sub
fwait
sub
js
fist
or
sahf
xchg
xchg
or
jns
pop
mov
cmp
into
or
cmp
je
div
add
(bad)
mov
xor
arpl
sbb
ds
outs
shl
nop
jbe
cmc
mov
fs
or
jp
or
mov
sti
sub
jecxz
add
fmul
xchg
xchg
push
mov
push
pop
rol
push
add
inc
and
pusha
pop
add
in
movs
ret
call
push
mov
sbb
or
imul
pop
repnz
ja
adc
adc
shr
adc
pop
xchg
cmps
lds
movs
in
mov
sar
dec
test
add
gs
add
cmps
add
fcmovnu
pop
add
cmps
addr16
test
sbb
add
or
pop
xor
scas
imul
xchg
push
inc
or
xor
xor
mov
mov
and
int
wbinvd
adc
idiv
mov
shl
pushf
call
pop
jb
movs
inc
cdq
iret
fisub
xor
inc
pop
sub
arpl
mov
stos
push
lock
icebp
sub
add
inc
ror
sbb
cwde
xchg
fs
sub
mov
adc
push
das
ins
fldcw
fwait
dec
or
(bad)
out
adc
add
ins
dec
loopne
popa
cmp
mov
mov
punpcklbw
and
scas
and
add
add
sub
pop
syscall
jl
cmps
xchg
sar
add
cmps
jle
outs
xor
icebp
shl
pop
sbb
(bad)
pop
push
sbb
dec
lock
add
ror
sbb
mov
aaa
add
gs
outs
pop
movs
shl
dec
cmp
nop
nop
jecxz
inc
jns
test
les
(bad)
xchg
pusha
push
pop
push
aam
pop
or
jo
fsub
imul
fadd
fistp
loop
pop
push
or
fimul
add
xchg
(bad)
ret
pop
push
shr
and
repnz
ins
shl
imul
hlt
mov
xchg
jne
lea
mov
mov
jbe
sbb
sub
xchg
mov
pop
push
cmp
adc
retf
cmp
int
push
jmp
ins
mov
jle
pop
call
fsubr
add
mov
or
movs
test
xchg
push
mov
add
enter
adc
push
add
adc
inc
retf
mov
leave
and
mov
add
and
pop
call
adc
cmc
(bad)
adc
xor
aam
and
pop
jo
or
fld
shl
stos
jmp
popa
ror
push
mov
push
cmc
lds
popa
sbb
ret
test
and
sub
pop
dec
or
add
inc
push
xchg
test
inc
xchg
mov
rol
or
jmp
or
scas
xchg
push
imul
jb
xchg
in
test
sub
cmp
outs
(bad)
or
dec
mov
xor
ret
jns
xor
sub
mov
shl
retf
pop
in
(bad)
dec
test
or
call
jae
add
pop
jl
push
dec
ret
retf
dec
data16
test
repz
sbb
push
push
push
call
or
push
add
jl
add
push
xchg
adc
ret
in
add
ins
cmp
call
add
pop
cs
ret
push
or
fs
jmp
mov
ins
jno
mov
je
jmp
xor
dec
push
pop
movs
dec
adc
adc
shl
xor
das
adc
mov
ret
outs
add
fidivr
sub
sub
or
call
call
cmp
ret
adc
jecxz
or
shl
in
mov
icebp
cmps
push
jmp
xchg
dec
push
stc
add
leave
sar
cmp
dec
push
cmps
sbb
cmps
push
cmc
ror
mov
jl
and
in
xor
leave
jo
or
xchg
sbb
pop
lods
pop
add
mov
jnp
adc
add
retf
pop
call
or
mov
mov
lods
jne
(bad)
jne
outs
adc
scas
sbb
cmc
xchg
or
jne
int3
loop
xor
ror
cmps
jp
popa
cdq
(bad)
mov
jbe
adc
push
ins
adc
add
lahf
push
pushf
mov
int3
mov
inc
fwait
jne
push
repz
sbb
push
(bad)
je
dec
lea
mov
repz
and
out
jecxz
jmp
inc
fstp
in
jecxz
out
jmp
scas
xchg
jge
inc
xchg
pusha
pop
movs
pop
ins
leave
ja
sub
(bad)
repz
and
xlat
(bad)
cmp
test
test
and
pop
add
mov
ss
and
mov
movd
dec
imul
adc
jne
inc
or
clc
xor
push
push
sar
scas
inc
clc
fisub
jae
shl
and
retf
push
sbb
jg
jo
add
shr
add
mov
sub
in
inc
push
imul
and
push
in
dec
sbb
fisttp
and
adc
lahf
add
shr
push
sbb
inc
jecxz
add
sub
mov
mov
fcomip
rol
or
push
push
cmp
lods
and
fsubr
mov
xor
sub
xchg
adc
dec
std
push
adc
test
sbb
jne
ret
int3
cmp
jo
hlt
dec
push
and
iret
sahf
pusha
popa
pusha
inc
dec
cmp
sahf
clc
pop
aas
loopne
lock
mov
and
gs
and
test
loope
push
mov
inc
xor
sub
push
dec
mov
nop
pop
xor
xchg
sub
push
add
and
leave
aad
scas
leave
push
add
xor
add
js
jl
in
jg
push
ret
add
adc
xor
addr16
inc
rol
mov
sbb
popf
rcl
cmp
sub
std
adc
jl
dec
pop
movs
push
cli
daa
out
xchg
add
or
je
or
xchg
imul
imul
mov
sub
mov
je
clc
mov
movs
test
jge
or
inc
add
inc
mov
shl
xor
dec
and
retf
cmp
add
cld
mov
or
sbb
dec
and
repz
rol
push
pop
ja
push
push
dec
jecxz
cmp
mov
dec
jle
and
(bad)
jns
bound
mov
int3
ins
xor
addr16
(bad)
in
arpl
jle
fdivr
lock
or
sub
sub
push
sar
js
(bad)
mov
arpl
fisub
jbe
ret
or
mov
jo
inc
pop
jne
mov
je
fwait
add
adc
and
cwde
aas
xor
ja
push
icebp
dec
mov
add
aas
mov
or
mov
cld
aad
and
add
add
mov
xor
mov
xor
and
repz
mov
jmp
dec
test
and
cmp
jecxz
call
sbb
fisubr
sar
adc
enter
pop
push
in
sbb
scas
pop
push
dec
or
inc
push
lods
daa
jne
dec
fldcw
cmp
int
xchg
lahf
add
inc
and
xchg
pop
rcr
js
aaa
add
adc
and
sub
xlat
out
and
or
xchg
mov
rcr
jmp
mov
mov
cmp
inc
jecxz
dec
xlat
add
inc
inc
and
sbb
pop
push
cmp
push
arpl
inc
and
arpl
fldenv
mov
xchg
xor
mov
out
sbb
je
daa
add
test
pop
or
pop
dec
test
or
jae
mov
push
push
pop
inc
push
add
cmp
iret
rol
movs
and
(bad)
cmps
push
sbb
out
fadd
pop
(bad)
adc
test
and
pop
pop
push
ret
and
jmp
or
mov
jo
xchg
gs
cmp
jl
lods
out
jmp
daa
add
pop
sub
jmp
sbb
ffreep
rol
jg
jmp
add
push
cmc
lock
scas
loopne
inc
or
fbld
sahf
push
lock
movs
arpl
or
push
jp
push
loop
stos
add
and
test
in
mov
sti
scas
adc
mov
sub
adc
clts
push
call
xor
sbb
imul
sub
mov
inc
hlt
ss
mov
outs
sbb
dec
jecxz
call
mov
inc
test
cmp
and
jns
xor
stos
inc
or
test
mov
xor
les
in
rcr
imul
jg
nop
mov
mov
cdq
add
add
cmp
and
mov
cmc
aaa
cwde
dec
and
int
mov
nop
and
dec
outs
add
sbb
lea
sbb
shl
in
sub
adc
adc
pop
push
push
pop
and
stc
adc
jo
scas
inc
leave
rcr
sub
mov
xchg
lea
inc
sbb
addr16
mov
push
push
push
inc
inc
cmp
add
(bad)
std
pop
shl
inc
ret
std
sbb
jle
shr
and
add
add
xchg
in
fwait
movs
(bad)
adc
cmp
adc
xchg
push
retf
jnp
shr
sub
(bad)
xor
fld
inc
dec
cdq
add
fsubr
sub
pop
or
jge
cmp
cmp
dec
ret
inc
pusha
lock
xor
xchg
rcl
bound
(bad)
xor
xor
push
test
mov
and
jmp
es
add
pusha
and
sbb
mov
int
and
mov
pop
or
imul
sbb
cmp
rcl
or
cmps
xor
fadd
retf
cmps
inc
repz
xor
aaa
test
clc
sbb
mov
inc
rol
pop
(bad)
fdiv
or
dec
lea
mov
inc
or
dec
retf
xor
pop
and
dec
inc
mov
adc
mov
ins
inc
shl
fisttp
out
sbb
(bad)
(bad)
int3
ret
fld
mov
aam
fs
pop
rol
lods
pop
shr
jne
nop
add
sub
sbb
and
jl
or
repz
or
pop
sub
test
or
xchg
push
scas
sub
xchg
jns
rol
mov
pusha
sub
mov
or
lods
nop
pop
jle
arpl
enter
loope
push
mov
ror
lods
ret
ins
dec
call
add
inc
xor
xor
mov
xchg
push
add
fwait
cmp
push
daa
cmp
pop
rcl
mov
sbb
inc
xchg
mov
xor
mov
ret
mov
mov
adc
lea
in
test
or
xchg
gs
sbb
dec
popa
(bad)
pop
cmp
push
icebp
mov
sub
xchg
icebp
inc
push
dec
jecxz
sub
and
fcmovb
push
adc
rcl
sbb
xor
pusha
push
mov
or
push
pusha
add
in
mov
add
cmc
aaa
inc
sub
dec
sub
(bad)
std
lds
sbb
fwait
pusha
in
mov
xchg
pop
test
aaa
out
mov
pop
xchg
pop
aaa
inc
sub
cwde
movs
out
or
xchg
aad
in
sub
clc
cmp
out
xchg
add
cmp
sub
add
adc
out
xchg
hlt
dec
(bad)
push
imul
xor
mov
enter
or
daa
xchg
cld
jge
nop
push
dec
mov
js
and
mov
mov
pop
or
mov
sub
jnp
sbb
xor
xor
mov
xchg
cmps
add
sub
je
pop
jle
sub
outs
ja
sub
loop
jge
adc
test
push
fbstp
pop
out
mov
adc
jge
jmp
call
add
jns
sbb
adc
mov
pop
inc
or
inc
ret
rcl
loope
jecxz
(bad)
pop
inc
dec
pop
aaa
enter
push
ins
lods
shl
ret
pop
mov
pop
mov
add
dec
xor
xor
(bad)
aaa
test
sub
add
cmp
add
inc
repz
lds
add
outs
lock
sbb
and
or
dec
mov
lds
sbb
bound
rol
jge
jne
mov
sbb
jbe
dec
in
es
nop
pop
rcr
int
mov
xor
cmp
or
pop
push
push
adc
fcom
fsubr
ror
jge
xchg
pop
cmp
scas
dec
call
shl
sub
inc
pop
push
movs
lahf
fild
jge
je
sub
mov
pop
fnstcw
aad
out
arpl
movs
push
dec
push
into
mov
push
test
inc
dec
adc
lock
and
test
sbb
mov
adc
adc
push
mov
or
call
xchg
xor
lods
xchg
add
in
sbb
inc
or
mov
sbb
ja
jne
add
add
scas
jne
add
iret
imul
int3
inc
mov
sbb
or
xor
movs
ja
outs
int3
sub
stc
movs
mov
aaa
jo
xchg
pop
jae
nop
jne
sub
mov
fisttp
test
push
das
mov
cmp
or
lahf
or
pop
neg
(bad)
and
add
aam
dec
cmp
push
sub
cmps
pop
adc
shr
push
div
fidiv
push
ret
ret
add
pop
push
dec
mov
sbb
cmps
mov
add
inc
sbb
fs
pop
jl
je
inc
cdq
push
sub
push
add
inc
lock
pop
push
mov
bound
sub
xchg
and
outs
cwde
mul
or
shl
mov
cmp
xor
fcomp
xor
test
(bad)
pushf
pushf
pushf
pushf
dec
xor
inc
test
pop
pop
pop
shl
jb
pop
lds
mov
and
xchg
add
rol
or
xchg
add
jo
add
ret
(bad)
pop
dec
xchg
pop
jb
dec
dec
dec
sbb
aam
jmp
adc
or
push
push
mov
xor
out
dec
inc
dec
enter
pop
push
aaa
push
fsub
mov
push
leave
or
movs
imul
jo
mov
jo
sar
jecxz
pop
iret
popf
or
xchg
cs
xor
arpl
fisttp
dec
adc
xchg
aas
retf
lods
cmp
daa
xor
push
sbb
call
jo
sub
xchg
mov
out
mov
out
jl
or
jle
mov
or
add
rcr
adc
mov
dec
jmp
jne
out
mov
lods
inc
cmp
pop
pop
inc
xor
cmp
adc
cdq
dec
or
dec
xor
xchg
jbe
call
mov
mov
cmove
sub
and
(bad)
in
(bad)
int
mov
adc
(bad)
cmp
cwde
push
aaa
push
mov
gs
lods
mov
jmp
push
pop
mov
add
mov
pop
cmps
out
repnz
and
aaa
rol
push
sub
in
lods
mov
mov
inc
inc
fmul
cs
xor
out
adc
test
sub
clc
add
mov
imul
or
mov
adc
mov
add
scas
imul
pop
xchg
ret
add
sub
pushf
mov
mov
mov
dec
cmp
sub
push
in
std
xchg
cs
add
adc
jne
jne
out
sbb
mov
pop
sbb
xor
iret
shl
add
cmovae
sbb
mov
push
ror
pop
xor
inc
xchg
ret
loope
les
push
inc
sub
fs
mov
mov
scas
js
ins
sbb
xor
jno
ja
mov
add
push
inc
xchg
adc
scas
jg
pushf
sbb
add
mov
das
cmp
cmps
popa
mov
fsub
adc
push
pop
xchg
xor
ficomp
mov
das
xor
cmp
dec
dec
dec
(bad)
dec
pop
mov
ins
jmp
cmc
push
cmp
adc
es
add
ret
rol
rcr
je
mov
sub
jne
retf
mov
test
popf
addr16
ins
call
les
pop
sub
in
lods
fs
pop
imul
mov
lea
jns
sbb
icebp
inc
addr16
ins
inc
inc
(bad)
popa
inc
imul
or
xor
inc
push
pop
ror
shl
shl
sbb
int
jno
push
inc
sbb
scas
lock
lahf
add
mov
test
pop
xor
fldcw
es
dec
jb
popf
xor
or
sbb
mov
and
and
loop
inc
pop
add
xor
dec
push
inc
xor
icebp
push
mov
cmc
jg
bnd
loope
add
gs
neg
dec
clc
xchg
mov
js
cmp
xlat
mov
dec
mov
and
add
cld
dec
jmp
fstp
rcr
adc
mov
jbe
sbb
pop
dec
inc
sbb
mov
rcl
outs
sbb
sbb
inc
dec
xor
aam
push
push
push
adc
sbb
xchg
mov
or
dec
adc
adc
jge
or
lods
sbb
imul
mov
and
std
jmp
mov
ins
fsubp
outs
test
mov
loopne
test
push
sbb
pop
mov
aas
mov
dec
pop
movs
outs
cmp
js
sbb
sub
ja
jmp
sbb
xor
lods
push
pushf
mov
xchg
gs
inc
loopne
dec
add
jmp
int
dec
jmp
repnz
push
dec
cmp
cs
jge
push
add
jmp
push
sub
inc
xchg
push
inc
push
fs
repz
mov
pop
call
call
xor
lock
sub
pop
add
mov
inc
jmp
sbb
xor
ret
sub
clc
hlt
sbb
lahf
push
jbe
hlt
mov
enter
pop
cmp
pop
retf
xchg
das
pop
xchg
mov
cmp
adc
push
xchg
rcl
lods
sub
xor
mov
cmp
cmp
mov
push
xor
or
pop
xchg
faddp
add
inc
cmp
pop
hlt
je
clc
push
or
icebp
(bad)
adc
jb
or
daa
loopne
mov
sbb
sub
scas
sub
or
jnp
loopne
outs
ficomp
mov
(bad)
aad
sbb
xor
(bad)
scas
mov
pop
xchg
adc
sub
imul
out
int3
xchg
xor
repz
in
addr16
adc
clc
ret
fs
test
pushf
pop
adc
add
inc
push
sbb
jae
xlat
pop
nop
cmp
out
out
ja
inc
je
sbb
adc
sub
dec
fadd
in
pop
add
mov
cdq
inc
mul
push
stc
out
push
pop
xchg
mov
test
mov
dec
xchg
popa
xchg
pop
jle
or
test
fwait
nop
cdq
js
dec
sub
rol
mov
mov
jae
or
or
mov
add
lea
sbb
stos
shl
sbb
cmp
in
mov
mov
cmp
repz
pop
mov
fild
mov
pushf
adc
sub
call
adc
fbstp
jae
add
jo
mov
mov
mov
xchg
mov
scas
xchg
(bad)
adc
mov
pop
push
push
mov
inc
test
and
inc
test
mul
cmp
(bad)
lods
(bad)
bound
mov
push
jbe
ins
(bad)
pop
cmp
add
mov
adc
mov
xor
adc
mov
pusha
in
hlt
mov
sub
or
loope
pop
test
xor
sbb
bound
xchg
inc
test
adc
pop
ss
sub
(bad)
nop
add
fwait
xor
or
sbb
sub
cmp
xor
es
cmp
arpl
and
jno
cdq
lock
dec
dec
idiv
call
sbb
sbb
mov
and
mov
push
add
pop
nop
shl
aas
cmp
jbe
push
adc
sbb
rcl
or
jg
add
mov
push
mov
xchg
xchg
sbb
or
(bad)
aam
xor
aam
inc
stos
inc
scas
push
in
arpl
dec
(bad)
jbe
or
and
push
iret
sbb
jl
adc
jne
lds
sub
bound
fsub
sub
push
pop
and
or
imul
arpl
jecxz
test
dec
out
or
fs
pop
mov
hlt
test
add
xor
sar
adc
or
add
mov
add
int3
and
cmps
cmps
push
cmp
xchg
stos
mov
int
out
(bad)
(bad)
arpl
daa
or
mov
int
lea
daa
cmp
jl
jge
daa
xlat
adc
(bad)
mov
add
jp
in
or
imul
dec
mov
repnz
dec
pushf
or
repnz
test
iret
je
cmp
inc
pop
add
dec
test
repnz
mov
xlat
dec
inc
or
std
dec
dec
dec
inc
dec
dec
icebp
push
mov
test
scas
dec
stc
adc
movs
or
mov
inc
or
or
sub
dec
sbb
scas
xchg
add
add
xchg
pop
mov
(bad)
dec
mov
fs
lods
call
inc
popa
in
or
lods
add
sbb
xchg
unpcklps
mov
(bad)
cmp
stc
push
and
dec
sub
add
mov
add
cdq
fs
nop
cwde
mov
lahf
(bad)
mov
int3
aam
inc
jle
mov
loope
sub
cmps
push
enter
fs
add
out
inc
inc
jb
mov
mov
fcomp
push
mov
rol
push
mov
jo
mov
and
aam
test
add
jae
pop
shl
mov
test
enter
lds
adc
lods
mov
lods
xor
inc
cmp
sub
outs
inc
dec
das
repnz
or
inc
aaa
mov
inc
fidiv
adc
outs
pop
das
and
inc
aam
add
into
mov
push
inc
loopne
or
adc
sbb
fs
sbb
fld
add
push
mov
mov
inc
js
je
dec
lea
and
push
aaa
push
mov
ret
xchg
cmp
inc
xor
(bad)
js
call
or
fsub
enter
aas
nop
or
mov
sbb
xor
daa
xor
fwait
sar
inc
inc
cdq
mov
sub
cmp
xchg
xor
sbb
add
divps
sbb
dec
jo
pop
lock
push
pop
adc
pop
add
(bad)
add
add
push
jnp
scas
add
jne
mov
aad
aad
jo
xor
mov
push
into
cld
or
push
rol
pop
ret
push
mov
adc
dec
imul
pop
sub
cld
bswap
or
xor
mov
add
dec
lea
mov
add
or
pop
in
mov
cmp
mov
pop
loopne
dec
outs
xor
sar
and
ret
imul
inc
dec
sub
bound
inc
ins
adc
sar
mov
inc
dec
shl
scas
out
push
or
inc
loope
mov
jno
js
xlat
(bad)
sub
ret
call
dec
jmp
icebp
imul
iret
push
sbb
scas
inc
mov
int3
jecxz
xchg
in
jmp
mov
(bad)
cmp
and
jle
jge
inc
jle
dec
inc
sbb
imul
fbstp
add
inc
xor
inc
loopne
imul
or
mov
popf
push
pop
popa
les
fdiv
pop
mov
pusha
xchg
mov
addr16
enter
or
inc
pop
add
mov
inc
cmp
push
mov
rol
pop
mov
and
sub
and
test
pop
inc
push
je
ins
pop
mov
dec
les
sub
push
adc
les
sbb
xchg
sbb
add
or
mov
add
daa
lea
movs
mov
pop
inc
shl
jl
stos
adc
cmp
xor
(bad)
shl
jg
add
enter
pop
repnz
jnp
ja
adc
push
cmp
pop
out
call
lahf
push
(bad)
test
ficomp
push
fst
mov
add
jle
lods
shl
aaa
cmp
adc
ss
cmps
sbb
mov
sub
icebp
mov
adc
ja
retf
add
sbb
and
cmp
into
loope
ds
mov
adc
pop
mov
push
imul
dec
add
push
mov
shl
adc
or
sbb
(bad)
push
shr
xchg
sbb
lods
dec
cmp
fidiv
sbb
push
fdiv
pop
xor
push
rcr
das
xor
outs
sbb
pop
jg
mov
sbb
adc
rcr
sub
ins
sbb
pop
cwde
shl
adc
pusha
pop
in
and
cmp
rcr
and
imul
sar
inc
add
cmp
lods
mov
stos
mov
loop
ja
dec
(bad)
sub
push
xchg
sbb
add
sbb
and
das
ins
cmp
add
mov
jbe
cmp
leave
adc
cmp
lods
loope
addr16
pusha
adc
cmp
fild
dec
inc
sbb
inc
push
mov
jne
cs
jle
pop
test
jno
adc
jae
jo
pop
inc
xchg
ja
push
push
stos
add
add
adc
push
out
push
jae
les
mov
mov
jle
mov
or
rcl
push
mov
sub
dec
add
or
cld
ret
adc
sub
(bad)
in
jnp
test
and
add
dec
(bad)
sub
xor
add
ins
jecxz
cmps
add
in
or
add
jae
and
add
clc
cmp
xchg
test
rcl
mov
ror
leave
sub
sbb
ret
pop
pop
add
in
aaa
xchg
aam
push
cmps
fisub
mov
cmp
push
add
inc
adc
sbb
(bad)
jne
int
fcmovne
or
arpl
adc
mov
inc
mov
std
push
xor
(bad)
mov
push
add
ret
sub
jle
test
es
jmp
mov
lods
or
cmp
adc
call
push
ins
je
jae
xor
sub
(bad)
gs
cmp
cmp
mov
push
and
jl
push
icebp
imul
or
jg
xchg
sub
addr16
xor
nop
xchg
inc
jge
pop
and
inc
push
test
add
sub
sub
mov
mov
out
push
sbb
cmp
cmp
aam
inc
popa
(bad)
stc
jno
mov
sahf
sub
mov
es
or
cmp
push
shl
dec
pop
or
or
and
push
pop
and
pusha
sub
test
rcpps
cmp
xchg
arpl
jge
or
popa
dec
xchg
xor
nop
in
dec
popf
xchg
add
xchg
push
jne
test
push
pop
cdq
push
adc
(bad)
aaa
push
push
in
xor
mov
pushf
pop
test
and
sub
pop
mov
loopne
xchg
or
call
sahf
push
mov
test
je
push
push
and
in
fistp
in
pop
stos
sub
mov
jmp
xchg
and
and
icebp
movs
test
push
test
sub
and
or
sbb
fisttp
sbb
xchg
jg
pop
sbb
cmp
jne
pop
cdq
outs
add
and
pop
inc
ins
adc
push
in
sbb
pop
mov
inc
inc
mov
jb
xchg
or
push
add
outs
mov
inc
jae
cmp
inc
push
xor
sub
inc
icebp
jl
lods
mov
mov
add
adc
in
scas
lock
xchg
add
pop
es
add
pop
add
push
cmp
lds
loop
aam
cmp
cmp
cmp
js
jecxz
cmp
mov
mov
inc
(bad)
in
xor
and
mov
fwait
inc
push
add
push
add
daa
aad
xchg
test
inc
jnp
and
cmps
jmp
and
ficom
add
sbb
and
sub
adc
sar
xchg
mov
pusha
outs
inc
jl
cmp
mov
sub
pop
sar
dec
cmp
(bad)
cmp
pop
cmp
adc
sub
hlt
loope
sub
daa
popf
sbb
es
enter
ror
pushf
dec
add
inc
pop
lahf
push
inc
push
movs
shr
aam
das
xchg
ffree
xor
scas
cmp
(bad)
add
jb
adc
aam
movs
adc
ja
fcom
xor
sub
xchg
add
test
push
mov
jo
add
add
xchg
sbb
push
pop
gs
mov
push
fwait
adc
or
outs
iret
loopne
cmp
xor
adc
or
gs
jmp
sub
xchg
adc
(bad)
call
sbb
mov
sbb
lods
sub
pop
pop
test
lea
pop
shl
sbb
push
jp
sub
xchg
movs
mov
mov
or
rol
rcr
mov
pop
add
inc
adc
sti
add
cmp
jne
cmp
(bad)
inc
add
xchg
dec
or
aam
xchg
push
mov
adc
scas
sbb
jp
nop
xchg
mov
imul
adc
rcr
cmp
sahf
sub
pop
xchg
add
jb
mov
xchg
lds
dec
lahf
mov
mov
mov
mov
fstp
push
sbb
sub
sub
jo
pop
xchg
sub
jl
dec
mov
lods
repnz
gs
xchg
(bad)
xchg
jno
or
push
add
loope
and
or
lds
inc
and
in
imul
add
loope
or
xchg
in
mov
into
xor
dec
push
nop
out
call
sub
dec
aaa
add
lea
jmp
int
adc
jbe
(bad)
pusha
data16
int3
stos
mov
pusha
xchg
fs
shr
inc
lock
sbb
movs
iret
pop
cmp
outs
std
sub
sub
cli
mov
push
sub
(bad)
mov
add
loopne
or
shl
scas
inc
retf
sub
add
fistp
xor
lahf
sub
or
into
jnp
or
and
mov
ins
push
pop
add
mov
push
outs
add
push
shr
xchg
cs
(bad)
jmp
rcr
pop
inc
(bad)
outs
mov
movs
mov
mov
mov
adc
fmul
jns
stc
inc
rcl
and
pop
inc
ins
cmp
mov
mov
inc
adc
sti
sbb
movs
or
aaa
data16
es
lods
pop
nop
clc
adc
in
mov
imul
cli
rol
(bad)
and
cmp
and
cwde
adc
xor
dec
mov
cli
inc
push
loope
bound
scas
rol
movs
enter
stc
xchg
and
jl
clc
inc
inc
push
(bad)
cs
or
test
add
add
adc
pop
sbb
jmp
and
(bad)
add
push
js
rcl
lock
(bad)
and
data16
push
jle
dec
add
or
mov
push
add
cdq
lock
mov
and
cmp
mov
mov
jl
adc
pop
mov
inc
dec
aas
imul
outs
or
aam
cmp
addr16
fcom
cmp
and
lahf
jne
movs
cs
das
cs
push
push
adc
dec
add
inc
(bad)
call
push
icebp
scas
(bad)
js
or
cli
xor
adc
(bad)
je
jp
add
movzx
sub
hlt
xor
movs
data16
sub
cmps
sub
xchg
xchg
outs
es
add
cld
movs
retf
push
ss
jmp
pop
pop
(bad)
or
mov
sar
call
hlt
adc
jno
add
mov
xor
hlt
das
cmc
repnz
jo
mov
and
xlat
mov
adc
mov
enter
sub
nop
adc
std
iret
adc
add
or
test
nop
movs
out
mov
dec
and
(bad)
cmp
and
ret
add
push
and
and
mov
cmp
test
rcl
data16
adc
inc
sbb
loope
dec
push
cmp
push
inc
sub
xlat
dec
inc
nop
fcom
inc
sub
int3
and
xor
out
inc
fwait
jp
cmp
inc
dec
fs
add
mov
inc
inc
pop
push
test
loope
imul
retf
pop
inc
mov
das
in
mov
inc
mov
test
or
jmp
loop
pop
out
sbb
mov
fmul
adc
rol
es
gs
enter
push
rcl
inc
dec
or
fist
fidivr
push
adc
mov
add
cwde
sar
lock
int3
jmp
cmp
sub
inc
xor
pop
and
imul
cs
dec
adc
stos
jmp
pop
test
push
daa
push
outs
syscall
cmp
adc
je
cld
inc
add
(bad)
loop
xchg
pusha
call
cmp
clc
and
or
fist
gs
call
or
loope
(bad)
mov
iret
inc
cwde
call
cs
jbe
pop
sahf
add
rcl
jmp
adc
pop
pop
js
cld
or
sub
inc
add
cmp
or
or
hlt
loope
test
adc
nop
test
inc
loop
xor
sbb
adc
xchg
cmp
add
mov
sbb
ins
or
lds
push
inc
adc
cdq
in
fst
and
sbb
or
or
retf
div
inc
outs
mov
mov
xchg
sbb
adc
mov
and
mov
jnp
bnd
mov
mov
sbb
lahf
mov
mov
jmp
inc
mov
data16
cmp
pop
data16
sub
addr16
inc
jns
sub
adc
test
rcr
mov
or
mov
cmps
add
outs
loope
lea
or
pop
dec
jmp
cmp
mov
in
cmp
sbb
sbb
and
(bad)
in
mov
pop
lea
dec
or
les
fadd
mov
pop
pop
clc
loope
pop
add
and
or
js
js
sub
mov
xchg
dec
and
mov
iret
add
(bad)
add
add
jo
dec
fld
loopne
or
sub
push
mov
pusha
inc
adc
push
add
pop
clc
or
xchg
call
test
sbb
test
imul
imul
aam
nop
mov
mov
push
jno
and
jge
adc
mov
scas
inc
sub
adc
fs
cmp
adc
arpl
and
rcl
dec
test
scas
mov
mov
adc
jge
mul
test
mov
idiv
add
inc
out
xchg
mov
xchg
cmps
xchg
adc
(bad)
or
add
push
add
pop
push
into
xor
mov
mov
jne
adc
rol
mov
pop
and
add
daa
retf
sar
and
mov
sar
jge
mov
sub
lods
(bad)
mov
dec
hlt
pop
mov
xchg
inc
inc
push
mov
pop
sub
bound
cwde
mov
xor
pusha
inc
or
push
pop
lock
test
sbb
pop
faddp
lock
mov
or
jmp
mov
sub
and
cmp
pop
and
add
sbb
mov
les
pop
adc
push
jg
fild
ror
nop
pop
and
addr16
add
and
sbb
cmps
mov
add
or
dec
mov
add
jle
or
mov
wbinvd
pop
inc
xchg
nop
push
push
aaa
jo
icebp
xor
or
(bad)
mov
movs
scas
in
and
jmp
xor
or
inc
add
inc
or
inc
adc
add
add
and
cmp
or
ficomp
inc
adc
retf
mov
pop
adc
adc
jne
loopne
(bad)
pusha
mov
inc
or
mov
enter
push
xor
sub
push
pop
cmps
xchg
adc
and
xchg
xchg
cwde
add
sub
mov
push
movs
or
daa
sub
lods
(bad)
aas
jmp
cs
imul
or
shr
rol
inc
xor
inc
imul
leave
movs
or
in
lock
xor
mov
push
push
js
popa
test
bound
jl
lea
out
adc
int3
dec
add
or
cmp
push
je
jno
ja
mov
clc
and
test
sub
xor
cmps
mov
jb
adc
mov
pop
adc
ret
jmp
adc
jmp
or
adc
mov
test
pop
add
das
mov
xor
cwde
push
pop
aam
and
sub
pop
pop
push
cmps
in
aam
push
sub
jmp
sbb
push
pusha
push
inc
add
dec
les
dec
jns
or
adc
hlt
inc
mov
ins
rol
xchg
or
mov
cs
push
adc
fdivr
or
cmp
jl
push
fsubrp
imul
add
call
add
stos
jmp
(bad)
(bad)
aad
data16
sbb
inc
lds
sbb
add
dec
and
das
cmps
or
mov
add
push
mov
mov
cmp
es
mov
jp
or
cmp
add
xor
inc
adc
push
les
das
call
cmp
(bad)
sub
xor
add
ror
pop
lock
lahf
or
mov
pop
mov
scas
jmp
xchg
ror
test
sbb
daa
push
and
and
outs
test
enter
sbb
test
pop
pop
into
bound
sbb
ret
or
call
or
clc
push
ja
or
and
xlat
ss
shr
retf
and
clc
xor
cmps
mov
inc
sti
add
fld
inc
or
cmp
push
out
je
adc
ror
outs
inc
pop
fdiv
jbe
test
aaa
(bad)
pop
inc
or
loopne
and
lods
sbb
pusha
cdq
mov
nop
repnz
jmp
mov
cmps
or
fistp
mov
fmul
retf
or
loopne
cs
pop
push
push
or
inc
rol
push
push
sbb
or
(bad)
adc
nop
in
retf
(bad)
gs
je
mov
mov
fsubr
push
jno
aas
xchg
sbb
mov
sbb
test
cmc
(bad)
pop
aaa
lock
dec
mov
mov
push
test
fistp
loope
div
je
push
prefetchw
lahf
add
mov
inc
sbb
outs
mov
call
inc
push
(bad)
ffreep
and
cmp
ins
jl
mov
jg
xor
mov
jb
inc
nop
sbb
dec
js
ds
inc
mov
je
inc
bound
lahf
mov
bound
fst
pop
imul
xchg
jns
aam
or
shl
push
gs
push
mov
or
lods
nop
outs
fiadd
add
cmp
push
or
js
push
xchg
inc
sahf
xor
inc
call
push
push
cmp
cmp
fisttp
jle
adc
push
adc
mov
mov
push
xor
rol
adc
push
sub
cmp
push
aam
out
adc
sar
dec
fcom
inc
je
add
test
clc
adc
add
inc
and
dec
inc
adc
sbb
sub
sub
push
loopne
jmp
jecxz
stc
xor
sbb
or
dec
ins
out
and
sub
pop
nop
loope
push
ins
pop
nop
adc
loop
sub
fwait
sub
xchg
push
sub
inc
fidiv
xor
pop
mov
mov
add
jne
sar
jg
push
and
and
push
fwait
and
pop
bound
push
rol
add
push
xor
sub
pop
je
imul
sub
test
popa
dec
mov
push
pop
(bad)
fadd
cmp
mov
xchg
xchg
cmp
int
cmp
cwde
popf
popf
retf
ja
inc
push
add
shl
mov
loopne
adc
xchg
sub
lea
fs
push
or
out
push
mov
mov
and
loopne
push
mov
not
jns
or
push
add
push
add
mov
mov
(bad)
xchg
xchg
or
pop
cmps
adc
fsubr
adc
pop
jecxz
mov
mov
cmp
call
cmps
xchg
jne
ret
jo
movs
(bad)
mov
and
jle
ror
inc
mov
push
ror
or
add
outs
daa
ret
inc
call
push
sub
jo
dec
dec
dec
fs
test
sub
xchg
ss
dec
sbb
jge
dec
shl
lods
ss
popa
movs
out
adc
inc
shl
mov
push
mov
xchg
and
pop
push
shl
mov
pusha
cs
les
xor
ret
adc
push
call
or
mov
daa
and
scas
add
push
sbb
fs
push
sub
push
mov
loopne
adc
movs
call
pop
push
out
fidivr
xor
add
dec
in
hlt
pop
sbb
adc
hlt
sbb
jmp
mov
adc
jne
pop
push
xor
cs
pusha
mov
je
aaa
lock
dec
xor
mov
or
pop
mov
(bad)
dec
inc
out
sbb
pop
pop
pop
add
bound
fist
rol
(bad)
and
test
adc
pusha
add
test
je
scas
loopne
xchg
pusha
pop
std
pop
inc
lfs
xchg
mov
mov
push
inc
or
iret
repz
push
and
lea
out
mov
adc
pop
repnz
(bad)
aaa
dec
adc
aas
add
or
dec
ins
sbb
pop
sbb
jo
jne
(bad)
scas
shl
add
test
adc
adc
aam
add
mov
sub
jle
sbb
scas
inc
cmp
std
adc
and
cmp
xor
sbb
xchg
div
xor
inc
cmp
push
outs
mov
mov
push
jb
shl
mov
movs
inc
nop
push
aas
dec
ss
sbb
or
inc
ins
jns
push
adc
sbb
or
mov
xchg
jae
lods
or
out
and
mov
xor
jae
mov
jbe
lods
xor
sbb
xor
imul
inc
sbb
std
lds
test
inc
jb
jle
sbb
sbb
sub
dec
xor
xlat
fdivr
inc
adc
inc
push
xchg
pop
in
cmp
cmp
cmp
cmp
push
loopne
inc
add
inc
xchg
dec
cmps
push
push
push
aam
clc
bound
aaa
dec
ret
and
push
sbb
ss
xchg
imul
cmp
pop
or
inc
push
and
and
cmp
js
shl
add
sbb
dec
(bad)
push
mov
add
call
jmp
push
dec
repz
shl
fsubr
call
jo
pop
inc
inc
js
sar
xchg
cmp
push
or
(bad)
popa
pusha
mov
jg
and
ret
shr
xchg
and
test
test
pop
push
push
push
mov
(bad)
dec
call
and
inc
popf
adc
je
sbb
inc
inc
pop
xor
lea
add
or
mov
movs
xor
ret
and
adc
add
push
rol
test
inc
and
pop
jl
xabort
movs
ins
jo
rol
jmp
or
mov
push
movs
sbb
outs
popa
leave
ror
xchg
mov
or
test
or
in
adc
mov
pop
inc
and
and
xchg
(bad)
and
and
in
adc
aaa
test
adc
pop
adc
(bad)
jae
inc
leave
adc
inc
es
push
add
add
sub
jb
sub
test
add
sar
cdq
add
(bad)
int3
and
jno
es
fld
push
adc
inc
inc
pop
add
inc
je
popf
jne
in
(bad)
xor
out
loopne
push
add
xor
bound
add
dec
dec
sbb
push
adc
int3
retf
popf
add
lahf
movs
xor
outs
pop
jbe
cmp
push
arpl
retf
les
dec
push
mov
imul
and
mov
int3
and
fs
arpl
add
pop
clc
dec
inc
inc
dec
inc
push
leave
aas
add
dec
inc
add
inc
ins
test
fidiv
or
mov
or
add
fnstcw
xlat
sub
mov
add
push
pop
dec
repz
push
js
push
fs
mov
cmp
dec
pop
int
mov
jmp
pop
sbb
in
enter
push
ds
sahf
or
dec
inc
sub
movs
in
inc
lock
inc
test
or
cmp
div
jbe
push
xchg
inc
fwait
call
dec
mov
jb
in
(bad)
push
add
pop
push
cmp
push
push
jae
add
mov
dec
inc
mov
jnp
mov
dec
sub
popf
mov
mov
mov
sub
lds
cmp
in
ret
lods
push
ins
cmp
add
add
inc
inc
dec
dec
sub
inc
inc
dec
inc
inc
dec
pop
dec
adc
mov
inc
push
pop
dec
dec
inc
dec
dec
jle
add
(bad)
jl
inc
dec
push
push
push
inc
push
push
pop
nop
add
push
inc
inc
dec
mov
jg
inc
xchg
sub
inc
repz
cmp
(bad)
cmp
push
(bad)
sub
mov
push
fstp
retf
aaa
retf
mov
mov
adc
lods
mov
inc
and
inc
mov
add
add
jae
mov
ds
add
inc
pusha
add
inc
mov
imul
and
rcl
add
or
inc
ror
sbb
jbe
inc
dec
dec
sahf
mov
gs
scas
pushf
xor
push
leave
mov
(bad)
sub
ds
ins
pop
add
fcomi
loopne
dec
ss
nop
xchg
shl
push
dec
lahf
add
inc
or
fmul
push
jle
add
into
lock
jo
jl
and
mov
lock
ret
xchg
jo
test
push
mov
pop
fild
push
sbb
xor
cld
jmp
adc
inc
fld
call
and
sbb
fdivr
mov
mov
inc
out
sub
push
push
add
fwait
pop
pop
mov
inc
fmul
push
and
xor
loopne
cmp
sbb
ins
fld
dec
dec
pop
sbb
dec
aam
test
fcmovnb
pop
imul
xor
rcl
aam
xor
shr
rcr
movs
mov
aam
add
dec
(bad)
sub
adc
pop
rol
inc
xchg
das
push
mov
lock
pop
cmp
addr16
mov
cmp
les
fs
sbb
cli
sbb
cmp
arpl
mov
dec
inc
sbb
sub
inc
or
movs
jle
ins
adc
push
or
movs
cmc
and
inc
aaa
rcl
aam
cmp
jne
lods
aas
push
test
js
test
inc
xor
test
add
xor
leave
mov
inc
pop
mov
or
adc
sub
push
cmp
mov
push
sub
mov
and
test
mov
ins
adc
cmp
or
xor
popa
pop
add
movs
mov
sub
enter
adc
jle
(bad)
adc
icebp
add
sbb
sub
jge
add
jle
pop
and
cmc
or
fs
ss
xchg
lock
or
add
pop
xchg
cmp
jno
mov
pop
mov
or
mov
dec
popf
cmp
jae
xor
dec
loop
sub
cli
cmps
(bad)
inc
add
stos
xchg
mov
std
lahf
xchg
je
mov
sub
add
sub
jl
fwait
lock
enter
scas
iret
inc
imul
cmp
test
test
adc
xor
push
push
cdq
lods
xor
ror
dec
sbb
add
cli
fist
sbb
cmp
call
ja
mov
retf
ins
les
sub
and
mov
adc
sbb
das
dec
add
sbb
and
jo
pop
(bad)
iret
adc
jbe
sbb
cmp
mov
mov
enter
icebp
mov
mov
in
in
lods
(bad)
in
mov
bound
inc
in
call
ror
dec
fs
retf
push
adc
popf
xchg
call
and
or
add
mov
sub
out
sbb
add
sub
in
mov
xchg
mov
sub
cmp
xor
cmp
shl
fist
push
jmp
mov
scas
(bad)
cmps
ret
call
xor
cwde
sub
and
add
push
lods
dec
fisub
scas
adc
xor
aad
xchg
cmp
xor
call
inc
test
add
(bad)
mov
hlt
add
scas
movs
and
xor
and
pop
add
out
pop
add
jg
xor
push
ins
sahf
fcomp
adc
loopne
add
add
mov
fst
dec
and
push
jmp
inc
ret
mov
push
add
outs
add
lods
jae
daa
hlt
lea
jbe
pop
or
call
mov
mov
jge
add
test
xchg
inc
pop
xchg
ss
ror
ror
cmp
mov
inc
mov
jmp
lahf
lock
(bad)
push
rol
sbb
xchg
daa
and
or
cmp
dec
add
add
les
push
cmp
push
in
adc
xor
jnp
sub
pop
xchg
or
(bad)
pop
mov
clc
or
xchg
xor
inc
hlt
sbb
into
dec
sub
push
add
mov
ins
sub
or
lds
add
cld
lahf
loopne
je
or
mov
loopne
imul
stos
add
and
mov
sar
pop
push
lock
pop
loop
jo
jne
or
int3
ins
and
jnp
pusha
pop
push
sub
inc
aam
add
xor
inc
fcom
sub
xchg
mov
dec
inc
sbb
pop
xor
add
pop
lahf
inc
pop
sub
in
xor
add
inc
in
ror
test
loopne
inc
fdiv
dec
lock
loopne
fcmove
mov
or
jge
or
cs
fsub
mov
cmps
push
adc
pop
scas
sub
stos
adc
ss
sub
adc
adc
pusha
xchg
xchg
cmp
mul
xor
jl
mov
adc
shr
retf
shl
jg
xchg
cmps
jge
jmp
and
fcom
pop
dec
add
or
sub
cmp
lock
or
dec
dec
jmp
jmp
pop
jnp
sbb
sub
adc
sub
dec
call
hlt
jmp
in
adc
pop
in
dec
fsubr
and
call
inc
add
sbb
mov
inc
mov
gs
cmp
jmp
sub
pop
xchg
arpl
cmps
mov
add
test
or
dec
lods
add
and
cmc
push
sbb
mov
mov
pop
and
xchg
lods
adc
fdiv
(bad)
sub
and
or
ins
or
and
xchg
inc
rol
add
inc
mov
pop
xor
cmp
and
push
sub
mov
pop
mov
push
cmp
stos
cmps
and
cmp
inc
xchg
mov
dec
add
xchg
pop
xor
xor
scas
sub
stos
pop
inc
nop
test
xor
adc
sub
cmp
cmp
dec
sub
sbb
dec
sub
mov
adc
jg
jb
js
call
mov
pop
mov
cld
sub
pop
xor
inc
and
xchg
xchg
inc
mov
mov
push
sub
fcom
and
sub
and
xchg
ins
cwde
sub
sub
and
test
int
rcr
clc
mov
pop
aaa
mov
(bad)
int
mov
loopne
dec
mov
lods
and
xchg
mov
jmp
outs
or
and
gs
dec
ins
inc
es
add
dec
add
inc
lock
adc
(bad)
adc
xchg
dec
inc
nop
dec
mov
sub
adc
rol
ins
push
add
nop
add
clc
fst
cmps
ror
test
repz
add
test
cdq
(bad)
out
mov
jmp
repnz
pop
call
sub
pop
push
not
adc
dec
adc
or
sbb
cmp
add
and
movs
(bad)
popa
cmc
fdiv
and
adc
adc
inc
pop
aas
push
mov
xchg
add
es
jge
pop
and
movs
inc
pop
aaa
add
push
mov
dec
or
jo
pop
and
bound
mov
enter
jp
push
arpl
xchg
bnd
xchg
fldcw
jo
add
mov
or
jnp
inc
xchg
icebp
fld
sub
xchg
shl
mov
out
add
mov
pop
mov
lock
xor
pop
lds
or
jns
add
cmc
ds
mov
sbb
or
sbb
adc
push
lahf
inc
imul
sbb
(bad)
ins
setb
inc
cmp
movs
jmp
dec
test
push
adc
jo
pop
ins
xor
pop
push
add
adc
xchg
pop
add
add
daa
or
sbb
jne
jns
add
pop
ret
les
lahf
pop
sub
or
cmc
or
adc
or
ja
push
sbb
jb
adc
mov
add
out
lds
(bad)
shl
lock
or
fs
test
retf
sahf
or
jl
imul
and
mov
inc
popa
jmp
cmp
xchg
jns
add
xchg
repz
pop
loope
cld
push
imul
jnp
shl
dec
and
jmp
jg
pop
and
xchg
add
inc
pop
dec
and
xor
sahf
mov
test
ret
push
mov
dec
imul
jo
sub
adc
lock
shr
mov
push
sbb
fidivr
popa
je
add
or
and
mov
loope
movs
cmp
bound
rcl
shl
(bad)
(bad)
push
fadd
jae
cmp
push
or
pop
ret
pop
xor
adc
jmp
cmp
lock
or
inc
sub
sub
adc
fisub
ins
sub
nop
stos
(bad)
mov
pop
ds
loopne
push
popa
popa
inc
cmp
push
enter
xchg
mov
push
test
sub
pop
ret
ret
add
leave
cs
jo
sub
std
dec
scas
mov
sub
pop
jg
nop
and
or
call
add
or
mov
out
icebp
dec
aam
mov
push
dec
test
jae
mov
and
xor
stos
xor
ins
cmp
inc
jbe
push
movs
and
hlt
es
lods
movs
sbb
pop
xor
push
sbb
aas
test
and
stos
inc
xor
inc
and
jl
jmp
pop
cmp
push
outs
mov
xor
mov
add
dec
shl
fadd
jb
aad
test
jae
xor
and
jmp
push
dec
dec
add
or
fldenv
mov
in
xchg
lods
adc
sbb
xlat
inc
ret
pop
inc
movs
xchg
stos
xchg
test
mov
sbb
xchg
and
xchg
test
push
inc
inc
jp
mov
rol
mov
add
add
pop
mov
icebp
je
mov
add
(bad)
dec
shl
push
add
push
inc
cwde
jne
xchg
pop
popa
hlt
int3
adc
call
xchg
je
push
ds
mov
inc
call
sub
sub
popf
sbb
mov
push
pop
aaa
adc
adc
sub
add
dec
sub
nop
dec
pmovmskb
imul
(bad)
push
scas
mov
mov
mov
pop
push
and
mov
cvtpi2ps
je
xchg
push
cmps
call
jne
xor
and
xor
add
sub
sbb
je
or
fisttp
mov
iret
add
sbb
adc
test
pop
pop
sbb
add
adc
xor
pushf
add
mov
rol
je
call
and
(bad)
imul
fs
push
sbb
add
test
cmp
mov
int3
mov
dec
call
xchg
jl
adc
push
mov
ins
mov
retf
xchg
scas
shl
or
fdiv
mov
sub
sbb
pusha
sbb
pop
call
cmp
mov
lods
xor
mov
inc
cs
out
sub
mov
pop
test
int
(bad)
in
adc
das
scas
add
pop
repnz
add
inc
lea
test
or
push
in
cli
gs
add
ja
push
hlt
dec
inc
dec
inc
rol
mov
scas
cwde
push
mov
call
cmp
adc
out
(bad)
mov
outs
rcr
add
add
mov
or
pop
(bad)
retf
dec
adc
add
sbb
enter
test
sbb
and
push
and
mov
jmp
push
hlt
xor
xchg
(bad)
leave
pop
cmp
fnsave
fld
test
ficom
ins
adc
test
or
lds
adc
push
pop
cmp
and
(bad)
mov
add
mov
je
jne
dec
push
sbb
xchg
xchg
rcl
push
sar
mov
sbb
test
ret
mov
adc
pusha
mov
loope
jmp
add
push
shl
int
inc
stos
add
popa
pop
in
cmp
mov
pop
push
add
push
sub
(bad)
rol
jecxz
lods
adc
je
sub
pop
or
mov
mov
cmp
sbb
mov
or
nop
push
add
sahf
test
cmp
aam
adc
mov
repz
xchg
fnstenv
ins
cld
add
movs
sbb
push
xchg
push
add
pop
jge
pop
jg
jecxz
or
scas
xchg
adc
pusha
cs
out
and
mov
push
push
pusha
int
ss
mov
pop
mov
and
jnp
dec
sbb
sbb
loope
jmp
arpl
add
or
xor
loopne
outs
mov
(bad)
loopne
popa
adc
adc
in
adc
js
into
add
inc
sbb
xchg
xchg
mov
sub
adc
loopne
sub
add
enter
mov
cmp
pop
cld
push
xor
sbb
sub
inc
call
scas
lods
jo
pop
das
and
push
test
aaa
and
push
je
or
mov
mov
xchg
ins
mov
lahf
inc
in
pushf
add
(bad)
adc
jno
lahf
push
mov
dec
ficomp
leave
xchg
aad
push
cmp
adc
xor
cmp
(bad)
lock
add
dec
inc
pop
mov
or
mov
jmp
inc
cmps
stos
(bad)
adc
in
adc
fucomp
mov
mov
fs
ds
mov
test
xor
into
pop
mov
inc
js
xchg
xchg
xchg
gs
sar
pop
and
clc
inc
xor
test
lods
aas
mov
mov
push
inc
add
push
and
push
inc
adc
test
inc
out
or
clc
mov
imul
sub
or
xchg
test
inc
int
pop
rcr
add
add
sub
sub
xor
stos
jne
addr16
or
mov
add
jmp
stc
inc
jle
iret
push
mov
and
adc
nop
ins
mov
xchg
test
cs
sbb
fsubp
cmp
and
add
aas
aam
mov
xor
xchg
je
mov
jmp
push
(bad)
mov
add
retf
jne
aaa
push
adc
add
jne
or
loopne
add
xchg
add
in
in
je
add
rcl
pop
and
jb
add
xchg
jns
inc
fadd
adc
or
repnz
add
dec
add
push
in
jl
sahf
xchg
jg
jl
lods
or
ror
clc
push
jo
dec
sahf
xchg
iret
hlt
add
lock
jae
inc
dec
call
nop
jae
pusha
push
mov
adc
sub
cmp
sbb
sbb
ret
cmps
addr16
inc
outs
test
adc
pusha
cmp
fiadd
ss
scas
(bad)
push
iret
repz
pop
je
and
adc
out
call
pusha
pop
inc
call
inc
push
jns
and
sub
or
in
fiadd
sar
cmp
js
(bad)
dec
push
inc
retf
sbb
stc
sbb
sub
in
in
(bad)
xchg
push
iret
adc
retf
add
in
in
add
push
pop
in
in
or
or
ja
(bad)
out
cmp
fs
push
lock
jbe
sbb
add
leave
(bad)
mov
clc
sahf
test
sub
inc
push
push
add
push
inc
movs
dec
and
shr
int3
nop
pop
pop
sub
mov
mov
cmp
inc
xchg
movs
and
das
dec
fisub
lods
inc
sbb
sti
xchg
inc
pop
inc
add
xchg
mov
jae
aam
(bad)
sar
in
movs
mov
or
call
sub
inc
push
fist
jg
jo
inc
inc
ja
sbb
adc
fisttp
add
xor
pop
mov
pop
mov
movs
sbb
pop
add
cmp
sub
add
adc
enter
and
xor
inc
inc
movs
cld
add
mov
pop
inc
dec
cmp
push
and
jp
or
fisubr
or
addr16
or
test
(bad)
and
and
and
pop
fimul
inc
gs
and
adc
jecxz
dec
xchg
xchg
shl
sbb
xchg
dec
aad
xor
inc
pop
pop
les
popf
jmp
sahf
add
xor
jns
or
pushf
outs
inc
xchg
pop
jns
loopne
inc
cwde
outs
inc
cmp
inc
pusha
mov
pushf
jo
mov
adc
xor
retf
and
lods
out
(bad)
pop
clc
pop
mov
push
adc
imul
add
push
add
dec
or
sbb
mov
push
das
add
pop
shl
xchg
bound
mov
test
mov
xchg
imul
mov
inc
retf
dec
mov
inc
adc
pop
push
and
add
sbb
pop
pop
movs
pusha
adc
scas
int3
pop
ficom
and
or
dec
stos
bswap
(bad)
add
xor
mov
in
pop
sub
mov
pop
scas
pop
inc
adc
mov
inc
or
enter
lods
in
xchg
hlt
or
inc
xchg
or
or
and
or
rol
stos
movs
adc
icebp
in
or
add
push
push
xchg
aad
popf
scas
cmp
(bad)
fstp
fmul
push
rep
call
pusha
and
movs
jl
or
mov
daa
cmp
or
mov
sub
xchg
scas
mov
jno
adc
cs
adc
arpl
pusha
mov
xor
ins
adc
lds
push
(bad)
call
scas
or
pop
mov
jmp
je
repnz
repz
inc
and
adc
mov
imul
scas
push
pop
adc
pavgw
aad
fsub
lods
mov
mov
or
push
leave
adc
or
aad
add
push
pop
stos
push
popa
mov
mov
adc
pusha
gs
pop
les
add
pushf
pop
add
adc
push
xchg
pop
pop
fsub
adc
int3
bound
pop
inc
xchg
dec
nop
mov
dec
(bad)
sahf
dec
les
nop
cmovb
jbe
iret
cmp
push
hlt
push
rcr
ret
js
sub
iret
adc
mov
mov
shl
mov
add
cwde
lahf
imul
push
gs
sub
jno
xchg
adc
cmps
push
add
ins
or
jmp
(bad)
xor
lock
pop
push
sbb
mov
scas
fadd
inc
sbb
call
push
or
adc
push
into
scas
scas
add
(bad)
dec
inc
add
loope
test
adc
dec
sbb
sbb
sbb
inc
imul
cmps
add
retf
rcl
test
xchg
dec
mov
(bad)
fisttp
or
mov
dec
jle
push
adc
push
aam
add
xchg
mov
enter
dec
aam
dec
adc
retf
(bad)
aam
and
dec
gs
ds
cmp
dec
pop
push
outs
adc
imul
adc
push
cmp
sub
cmp
add
add
jo
sbb
pop
call
add
sub
pusha
pop
mov
pop
ror
ja
mov
dec
push
adc
out
sahf
add
pop
pop
ins
pop
pop
enter
inc
jno
mov
sbb
mov
xor
out
jne
pop
or
add
les
and
xchg
xchg
xchg
cmp
xchg
enter
xlat
or
fisttp
xor
add
add
(bad)
and
inc
push
outs
jmp
inc
mov
xor
add
sub
pop
fsqrt
or
dec
jl
rol
or
aaa
cmp
je
int
inc
push
add
lds
pop
pop
add
pushf
xor
and
xor
jecxz
xor
enter
inc
test
or
sbb
rcr
jmp
mov
jno
dec
add
mov
push
popa
sbb
or
and
lods
and
pop
ror
movs
push
or
loope
sub
add
push
push
sbb
sub
cmp
daa
cmp
or
or
cmp
cmp
push
add
aaa
fsubr
add
add
push
add
mov
jbe
push
sub
sar
pusha
cmp
sub
and
jmp
push
(bad)
jmp
jl
dec
cmp
add
mov
pop
xor
pushf
cwde
ins
pop
adc
xchg
mov
bswap
idiv
mov
mov
add
and
(bad)
xchg
(bad)
and
shl
sub
imul
mov
cmp
add
xchg
rcr
add
or
hlt
pop
dec
inc
(bad)
cmp
ret
leave
xor
cmp
dec
mov
pusha
xchg
sub
shl
push
push
cmp
pop
pop
and
jmp
mov
outs
jmp
mov
sub
pushf
loope
jno
hlt
add
pop
xchg
add
or
punpckhwd
inc
frstor
inc
sub
shr
sahf
mov
mov
push
xor
aad
dec
sbb
in
or
add
sub
lods
sub
out
fsub
fcom
and
fsubr
or
cmp
aam
add
je
js
in
sbb
xchg
cld
push
mov
stos
add
cmp
dec
adc
pop
dec
sbb
sbb
lock
dec
push
jb
xor
add
ja
adc
mov
ret
and
or
push
push
or
jge
rol
or
mov
mov
inc
dec
xor
sub
test
add
push
add
stc
cmp
mov
sbb
sbb
mov
dec
dec
aam
mov
or
inc
and
ret
jnp
bound
push
xchg
sub
imul
sbb
sbb
mov
mov
adc
inc
loope
ins
xchg
pop
das
(bad)
bound
(bad)
cdq
dec
inc
dec
push
inc
data16
xchg
ja
fdivr
and
dec
popa
lock
es
pop
xchg
rol
sub
test
and
je
in
pop
or
sub
enter
in
(bad)
daa
add
mov
mov
(bad)
jne
(bad)
fdiv
test
pusha
mov
inc
sbb
inc
fcomp
xchg
fcomp
pop
rcr
mov
call
xchg
cli
(bad)
std
pop
nop
mov
addr16
cdq
pop
loop
lods
inc
iret
jbe
vcvtsi2ss
xchg
sub
add
lods
dec
lods
push
or
add
cmps
adc
jnp
and
mov
pop
push
adc
jns
pop
data16
add
mov
adc
jecxz
imul
push
sbb
rol
mov
fdivp
adc
mov
jl
or
mov
xor
cmp
adc
sbb
mov
in
bound
dec
dec
das
fadd
push
push
test
mov
inc
xor
xor
int3
ror
jmp
mov
sbb
aaa
pop
xchg
fst
jne
rol
jmp
in
pop
sbb
push
(bad)
jl
mov
loope
or
jae
(bad)
cld
xlat
pusha
pushf
frstor
stc
jnp
test
int3
cmp
xchg
lods
xchg
push
js
xor
nop
inc
scas
xchg
sbb
popa
dec
dec
jne
js
lock
iret
lods
(bad)
pop
push
pop
imul
xlat
or
jle
aas
xchg
js
rol
rcr
push
push
push
pop
lods
ja
dec
aad
movs
jl
mov
fmul
add
add
or
jo
jl
xor
fisubr
sub
pusha
(bad)
jns
or
or
and
int
(bad)
push
je
jae
or
or
adc
sbb
push
add
and
sub
stc
xor
mov
aas
adc
out
jnp
inc
cmps
push
or
jns
(bad)
push
popa
xchg
adc
sbb
jae
jp
sar
clc
pop
fs
push
mov
jns
cdq
aas
shl
test
(bad)
test
inc
add
out
add
xor
inc
add
inc
jg
cld
or
in
ins
in
mov
or
fs
aam
inc
aaa
or
cwde
mov
sub
sar
mov
repz
mov
out
cld
push
rcr
ins
mov
loopne
out
add
es
lods
in
jecxz
(bad)
cmp
push
adc
inc
and
pop
sub
dec
retf
or
test
(bad)
jl
inc
jge
add
dec
adc
ss
jo
in
in
xor
inc
dec
repnz
jl
leave
add
lock
inc
lods
sub
test
repz
push
add
fisubr
outs
add
adc
inc
call
cmc
inc
test
icebp
mov
and
je
xchg
ja
out
sub
xchg
and
inc
or
scas
std
push
leave
push
jb
xlat
movups
gs
dec
and
add
add
cmp
sub
adc
inc
popa
push
and
lea
mov
jl
pop
or
inc
push
pop
je
cwde
std
mov
and
push
or
fcom
mov
fisttp
mov
jo
jb
pop
sbb
jmp
add
mov
sub
or
call
add
adc
add
add
nop
mov
add
pop
pop
and
sbb
mov
stos
dec
sti
push
test
pop
leave
push
and
mov
and
test
sub
in
scas
sub
scas
sub
sub
in
cmp
add
push
les
xor
and
in
repnz
(bad)
not
div
(bad)
xor
inc
fdiv
std
stos
stos
lock
ret
enter
sbb
mov
ins
push
cmp
or
sbb
shr
mov
imul
add
add
fcomp
add
push
or
pusha
add
xor
div
push
les
cli
aam
lahf
sbb
add
sahf
mov
push
mov
mov
or
ds
xor
sub
inc
pop
xor
adc
ins
jge
dec
pop
add
sbb
add
dec
sti
or
xchg
or
pop
adc
inc
leave
push
jb
adc
mov
push
xchg
mov
pop
push
push
cld
lock
imul
out
xchg
push
in
lods
pop
add
dec
out
sbb
sbb
add
sub
jbe
dec
xchg
mov
dec
aaa
test
mov
sub
sbb
dec
dec
jne
push
adc
adc
test
pop
arpl
add
pop
jl
ja
test
or
add
fs
shr
js
std
adc
xlat
push
push
dec
jo
stos
mov
cmovbe
mov
ins
xchg
cwde
xor
cmp
push
pop
shl
ds
mov
int3
or
jo
in
shr
hlt
or
sbb
jmp
outs
xor
jns
clc
js
mul
cwde
inc
sub
and
pop
inc
cs
je
jmp
dec
add
sub
nop
pop
sub
jmp
rcr
push
push
imul
adc
lods
test
mov
(bad)
and
mov
pop
sbb
pop
les
nop
stc
cmc
xor
inc
push
dec
xchg
test
push
or
push
push
and
mov
add
adc
enter
leave
add
cmp
or
push
inc
xor
inc
and
jmp
aas
int3
mov
pop
cli
fwait
or
arpl
outs
or
pop
mov
inc
fs
pop
popa
fstp
cmp
fmul
push
mov
or
sub
out
jne
and
outs
mov
unpcklps
sti
adc
lods
adc
jmp
adc
jnp
cmp
add
dec
adc
test
xor
push
lods
in
mov
pop
aaa
adc
sbb
and
les
mov
mov
inc
popa
outs
adc
jg
dec
or
je
shl
jns
bound
mov
sbb
sahf
mov
js
xchg
xchg
cmp
movs
add
xor
ja
add
dec
adc
dec
xchg
xor
popa
mov
inc
pop
sub
xchg
xor
xchg
dec
push
inc
sbb
and
mov
les
sbb
dec
xor
mov
xor
xor
push
ins
add
cmp
inc
fs
popa
js
es
in
dec
inc
ja
cmp
adc
push
arpl
shl
mov
sbb
and
xor
pusha
inc
pushf
in
push
dec
or
jp
jo
add
xchg
sbb
inc
push
pop
inc
adc
and
mov
jno
popa
jmp
add
dec
cmps
or
and
sub
or
pop
adc
or
sub
or
sbb
sub
xor
xor
aam
add
inc
out
inc
and
or
inc
inc
les
lock
push
outs
cwde
aam
ja
jle
adc
inc
xor
inc
add
nop
jne
imul
fsub
movs
aas
les
retf
std
aas
(bad)
xor
dec
jne
fmul
dec
dec
or
mov
sub
cmps
push
cld
(bad)
pop
or
sub
outs
call
or
or
push
call
xor
clc
lods
or
pop
test
pushf
or
add
or
inc
and
add
add
jb
cmp
sbb
pop
imul
sub
add
mov
push
or
sbb
adc
or
add
cmp
xchg
or
add
ss
mov
inc
mov
pop
dec
or
push
aaa
and
jo
(bad)
sub
test
or
in
repnz
imul
nop
sbb
inc
sub
dec
pop
and
cmp
push
sub
nop
cmps
sbb
pushf
adc
xchg
(bad)
rol
and
jno
iret
mov
mov
xor
mov
shr
daa
scas
xchg
out
adc
repz
add
jge
cmps
inc
and
pop
and
in
inc
cwde
mul
sbb
jb
rcl
jns
xlat
lock
adc
push
outs
sbb
add
iret
mov
push
out
pop
sbb
jnp
or
aaa
and
pop
adc
push
jb
cdq
pop
adc
inc
adc
ret
or
or
xchg
mov
rol
ret
stos
dec
jb
pop
fadd
aaa
push
or
mov
imul
jbe
pop
shl
push
leave
jp
fistp
cmc
pusha
or
dec
jmp
stc
jno
sub
inc
add
pop
mov
xorps
adc
or
cmp
add
sub
popf
or
push
dec
or
lar
pusha
add
or
add
call
fs
push
jbe
popa
or
jae
adc
pop
and
or
add
or
xor
or
aam
(bad)
cmp
sub
inc
shr
or
or
or
imul
and
scas
or
mov
ss
cmp
add
mov
add
ins
pusha
outs
cmp
arpl
fdivr
lods
jle
add
mov
retf
mov
or
or
cdq
add
jnp
or
xchg
sbb
dec
mov
jle
in
mov
sub
push
sbb
loopne
fs
sub
inc
test
pusha
cmp
or
ja
out
adc
rol
pushf
outs
push
popaw
adc
cmp
and
xchg
mov
and
in
(bad)
push
jp
push
pop
xor
push
adc
xor
mov
mov
jl
or
push
inc
inc
jmp
addps
add
ret
xchg
jg
mov
add
fs
xor
push
add
fld
or
xlat
movs
out
popf
push
pop
xor
push
sub
jmp
push
fsub
call
sub
lea
or
or
sub
add
fnsave
push
mov
mov
xor
loop
and
mov
scas
sbb
xchg
add
inc
pop
adc
retf
test
and
or
lods
add
imul
les
xor
xor
cmp
pop
test
or
cwde
jae
add
sub
adc
sub
addr16
adc
jmp
xchg
stos
cmovb
dec
jge
ret
lock
retf
dec
test
and
ins
aam
lahf
jecxz
add
inc
inc
adc
xor
jno
in
loopne
enter
mov
push
mov
mov
aaa
add
iret
test
mov
or
add
fist
enter
pop
outs
and
das
cmp
and
sbb
and
add
push
and
addr16
sub
inc
enter
add
test
push
pop
and
xchg
pop
add
movs
(bad)
push
push
mov
dec
and
add
repz
xlat
jg
movs
adc
rol
aaa
mov
inc
adc
or
out
adc
add
or
das
adc
scas
jne
sub
push
xor
or
fild
repnz
add
inc
push
mov
sbb
loopne
addr16
movs
xor
lods
push
xlat
in
int3
cmp
dec
inc
or
xlat
mov
or
xor
inc
sbb
lea
dec
gs
inc
nop
xchg
ja
xor
sub
test
pop
inc
push
xchg
sbb
stos
lods
jmp
scas
arpl
mov
out
sbb
jo
push
and
dec
dec
fwait
cwde
test
mov
iret
add
enter
push
test
pop
or
dec
pusha
xor
stc
and
adc
xor
dec
mov
push
dec
or
loopne
fild
jl
adc
call
push
les
push
jnp
idiv
inc
in
mov
inc
mov
push
sti
xor
data16
dec
push
push
sahf
neg
cmp
push
mov
jl
bound
sbb
xchg
push
das
mov
dec
add
dec
fimul
adc
(bad)
sub
push
pop
add
in
repz
stos
call
cmp
aaa
js
inc
cmp
push
fcom
cmp
fcmovnbe
pop
es
shl
pop
fwait
int
call
addr16
ds
jns
fisubr
ins
ds
push
push
sbb
clc
sbb
push
mov
rcl
or
jle
dec
jne
sar
outs
pop
sub
rcr
or
pop
repnz
test
push
inc
enter
cmps
inc
pop
sub
mov
pop
lds
sub
and
jo
mov
ins
and
add
arpl
mul
gs
jb
add
sub
movs
xchg
stos
in
adc
adc
or
mov
mov
rol
push
test
push
push
in
fistp
add
rol
sbb
mov
ret
or
dec
scas
add
mov
adc
sbb
mov
or
jbe
int3
dec
xchg
int3
test
nop
or
pop
fistp
push
or
xchg
xchg
and
cs
sbb
dec
les
push
inc
ror
push
ret
pop
enter
xor
cmp
ret
mov
repnz
es
jb
add
lea
in
dec
daa
adc
bnd
les
sub
call
inc
lds
bound
clc
gs
pop
push
push
(bad)
cmps
std
xchg
mov
cwde
add
jno
adc
sub
dec
popf
div
call
mov
pusha
mov
sub
inc
dec
loope
add
scas
add
nop
mov
adc
cmp
dec
or
das
push
inc
daa
jno
dec
xchg
push
movlps
clc
mov
xor
mov
int
xor
ja
inc
scas
outs
pop
repz
or
stos
cwde
sbb
in
aaa
ja
cmp
cwde
retf
cmp
lea
dec
and
ftst
add
xor
test
xor
and
add
sahf
add
cmp
and
jne
hlt
outs
enter
cmp
sbb
inc
sahf
ins
jl
or
fsin
xchg
stc
add
xchg
ds
add
cmp
daa
mov
xor
inc
sbb
jp
call
outs
adc
sbb
add
mov
pop
inc
add
and
dec
fisttp
or
xchg
jl
add
mov
popf
dec
pop
enter
adc
in
mov
inc
push
imul
lods
sahf
jbe
or
sahf
mov
and
dec
loop
dec
push
mov
xchg
sub
dec
add
jnp
push
inc
jle
lods
mov
xor
dec
add
cmp
out
aaa
lods
or
adc
test
pop
jb
sub
dec
cwde
add
repnz
cwde
inc
inc
repz
rcl
(bad)
cld
dec
dec
(bad)
fcomp
dec
push
dec
pop
repnz
jnp
mov
cmps
sbb
imul
pop
rcr
pop
push
cmp
jnp
push
inc
pusha
pushaw
push
jns
or
push
or
pushf
dec
jo
repnz
push
add
or
adc
not
js
std
add
push
dec
mov
mov
adc
cmp
mov
not
push
mov
inc
inc
mov
and
pop
push
xor
into
ror
pop
mov
pop
loop
pop
cmp
mov
sbb
stos
in
pusha
lods
jmp
popa
or
pop
mov
add
out
(bad)
inc
fdiv
xchg
dec
fs
mov
add
add
leave
add
add
into
(bad)
and
enter
xchg
and
daa
ins
inc
fs
mov
add
outs
mov
pop
movs
mov
cmp
and
dec
adc
imul
mov
pop
mov
xchg
daa
add
mov
xor
adc
mov
adc
or
push
pop
popa
inc
jb
or
and
sub
adc
jne
call
mov
sbb
pusha
ror
les
xchg
stos
jg
ror
ror
outs
nop
xchg
ror
cmps
lock
sbb
mov
add
adc
xchg
out
sar
dec
jo
pop
adc
pop
push
mov
aas
sub
and
push
outs
dec
inc
add
in
ins
dec
fs
pop
cmps
push
push
dec
outs
dec
cmp
push
jns
pop
and
or
mov
or
lea
push
push
cmp
dec
cmc
inc
sbb
jne
cdq
pop
mov
jbe
in
dec
push
fs
fidivr
int
jnp
ins
int3
xor
ins
push
fsub
mov
test
in
dec
pop
and
cmp
lds
je
inc
(bad)
xchg
adc
or
push
inc
repnz
add
add
cs
pop
or
add
pushf
xor
popa
leave
add
adc
adc
into
rol
push
mov
mov
mov
enter
inc
test
loop
movs
mov
mov
and
sub
mov
jl
adc
in
rcr
jno
sbb
sub
add
and
sbb
jns
sti
nop
or
inc
ror
sub
or
imul
jbe
pop
mov
xchg
dec
or
dec
scas
movs
js
mov
dec
and
and
sub
mov
and
and
in
daa
sub
outs
add
add
sub
add
add
sub
add
cs
or
fs
ret
or
fmul
add
daa
pusha
gs
jae
adc
xlat
or
fadd
adc
dec
fcom
and
inc
xor
hlt
out
adc
push
ret
adc
ds
sar
jb
add
in
inc
push
popa
scas
scas
mov
jo
or
loope
add
pop
jge
adc
dec
lods
sbb
add
test
mov
inc
mov
iret
int3
xchg
pop
cmp
adc
sbb
or
out
inc
or
stos
pop
xor
pusha
leave
inc
movs
fwait
push
retf
mov
cdq
or
cmp
and
inc
pop
aaa
mov
lahf
sti
jns
pusha
inc
ins
ficom
sub
inc
(bad)
and
pusha
leave
ret
dec
fiadd
mov
xchg
pop
push
inc
ret
sub
cmp
pusha
adc
xchg
(bad)
pop
sbb
adc
test
inc
arpl
inc
aam
add
sub
ret
iret
push
cmp
adc
add
lods
or
or
mov
add
ror
add
test
xchg
sbb
iret
xor
cmps
push
enter
push
pop
cmp
push
or
punpcklbw
ss
mov
in
inc
pop
das
xor
cmps
dec
jns
jns
xor
dec
jo
dec
scas
pop
jns
dec
fwait
dec
sbb
dec
sar
imul
inc
out
dec
mov
dec
and
shl
mov
cmp
pop
add
dec
add
test
sbb
add
adc
test
add
add
dec
call
push
(bad)
mov
or
fisttp
push
mov
dec
mov
mov
iret
push
inc
xchg
call
repz
and
stc
push
js
lock
popf
inc
sbb
cmps
sub
push
test
push
mov
dec
aaa
push
test
push
lods
int3
lahf
imul
ins
(bad)
enter
xor
shl
cmp
fidiv
add
xor
dec
pop
sbb
cmp
or
fs
pop
add
push
and
nop
adc
cdq
pop
jecxz
test
loope
pop
repnz
call
test
dec
sbb
enter
adc
pop
add
push
pop
dec
cmc
cld
int
or
imul
cmp
pushf
jo
(bad)
pop
and
lods
push
mov
push
xlat
sbb
sbb
sbb
lods
jns
and
pop
rcr
mov
adc
xor
xchg
xchg
(bad)
dec
push
ror
jo
pop
or
inc
inc
sahf
dec
sahf
push
aam
and
icebp
mov
push
inc
ins
mov
and
pop
and
pop
cmp
call
mov
lods
inc
cmp
xor
lods
ret
xchg
(bad)
and
sahf
daa
cmp
pop
push
stos
jne
test
int3
rcl
inc
mov
mov
sbb
or
add
xlat
pop
jnp
xchg
pop
rcr
and
or
add
shr
scas
or
and
xchg
xchg
enter
or
lods
fsubr
cmp
add
inc
adc
test
mov
(bad)
sub
mov
rol
dec
pop
sub
and
pop
mov
mov
pop
loopne
sub
and
test
ja
ret
in
add
or
mov
jnp
sbb
imul
lds
or
xor
mov
rcr
in
inc
fimul
xor
cmp
sub
dec
cs
in
nop
fdivr
les
test
xchg
gs
stos
retf
(bad)
cmp
cmc
sbb
lea
retf
inc
jg
xchg
call
mov
cmp
push
inc
add
inc
cmp
sbb
pop
push
sub
xor
or
pop
aaa
mov
aas
loope
or
sub
sbb
inc
and
add
pop
ret
xor
je
sub
cmp
push
inc
jnp
mov
cmps
dec
or
inc
and
dec
cmp
or
adc
or
push
and
sub
aad
and
add
iret
inc
push
dec
or
loope
aaa
dec
gs
and
fadd
xchg
pop
and
leave
push
jb
dec
dec
xor
and
leave
push
push
push
dec
inc
dec
pop
push
test
or
push
sbb
sbb
push
push
xor
enter
pop
pop
jbe
enter
fcom
mul
iret
and
pop
or
push
dec
js
ds
push
inc
retf
inc
loopne
dec
in
ror
pushf
ror
int
mov
or
and
and
pop
inc
push
pop
sbb
sti
mov
inc
sub
(bad)
add
pop
rol
mov
push
add
add
and
and
inc
leave
test
and
es
pop
add
add
adc
inc
and
xchg
outs
xlat
mul
es
xlat
xlat
les
js
enter
dec
jo
or
xor
push
and
cmp
pop
dec
inc
sbb
shl
push
iret
les
dec
and
cmp
in
popf
cmps
adc
xor
cmp
out
dec
out
jnp
repz
loop
(bad)
test
xchg
test
or
fisub
dec
jbe
push
add
cmp
hlt
in
or
dec
mov
aam
push
nop
push
adc
xor
inc
mov
pop
pop
xor
cld
mov
or
paddb
mov
ficomp
push
push
inc
push
lock
push
mov
fild
dec
and
sbb
dec
repnz
cmovo
dec
push
repnz
xor
dec
add
dec
test
adc
loopne
pop
fistp
idiv
push
sub
ds
loope
aaa
jo
inc
push
(bad)
or
xchg
sub
adc
dec
pop
or
cmps
in
jae
push
scas
scas
pusha
xchg
push
xor
mov
sub
cmp
leave
xchg
pop
or
outs
pop
xor
sbb
sub
int3
fiadd
mov
hlt
call
jl
adc
xor
add
sbb
sbb
inc
xchg
xchg
add
inc
add
inc
mov
sbb
xchg
rol
jnp
ret
pop
retf
test
jmp
sub
sub
pop
add
sahf
(bad)
adc
mov
enter
mov
sub
xlat
dec
dec
lods
mov
les
adc
idiv
xlat
and
jmp
or
push
cmp
sbb
jmp
fstp
dec
(bad)
push
xor
movs
fiadd
fisttp
repnz
push
aam
into
pop
loopne
add
loope
mov
loop
cwde
fimul
jbe
aad
or
fsub
inc
loopne
rol
add
sbb
pop
and
sub
jno
xchg
pop
xchg
lahf
cmp
scas
pop
mov
cli
sub
push
and
jne
sub
add
jl
pop
fist
pusha
loope
push
add
pop
add
mov
xchg
(bad)
xchg
fiadd
sub
or
sub
jbe
std
clc
mov
jns
adc
int3
data16
in
clc
aaa
or
jg
or
(bad)
loopne
sbb
or
cmps
or
or
add
dec
les
test
lock
(bad)
stos
add
inc
push
(bad)
mov
(bad)
adc
leave
mov
mov
das
add
mov
iret
ins
retf
add
(bad)
xor
jmp
adc
lea
pusha
or
aas
aas
int3
add
sbb
xor
dec
loopne
in
add
out
nop
jo
fsub
cdq
(bad)
fcom
push
push
lds
dec
loopne
jo
movs
xchg
dec
nop
dec
rol
ja
and
enter
loope
in
je
push
add
dec
rcr
enter
dec
push
clc
mov
add
xchg
adc
mov
sbb
mov
sub
mov
ret
cmp
mov
in
loope
add
dec
mov
sbb
xor
loop
and
adc
jge
mov
adc
fisttp
lahf
js
push
(bad)
pop
push
int3
rcr
sar
mov
push
mov
in
outs
shl
adc
mov
stc
sub
jo
or
leave
and
inc
pop
add
out
sbb
push
add
or
leave
and
pop
push
and
or
or
add
movs
push
or
jge
inc
js
cwde
push
dec
cmp
adc
nop
xor
xchg
enter
inc
pop
mov
rol
lods
and
mov
outs
or
xchg
or
sub
xor
arpl
fmul
mov
xor
add
push
pusha
inc
pop
add
mov
pop
bound
pop
pop
push
add
push
fdiv
and
or
mov
ror
jl
(bad)
and
push
mov
dec
js
and
xor
inc
aam
jmp
and
mov
rol
adc
add
call
pop
fist
inc
xor
jo
movs
inc
sub
xchg
fs
(bad)
and
call
out
adc
mov
pop
sbb
jne
sbb
rcl
mov
add
push
popa
aas
sub
push
cmp
adc
inc
xchg
or
add
pop
loopne
cs
pop
adc
test
test
cmp
fisttp
mov
aaa
push
pop
dec
mov
add
and
push
(bad)
fmul
add
push
cmp
add
pop
xlat
add
jo
push
mov
out
push
adc
sub
sbb
gs
mov
push
shl
cmp
push
bound
cwde
inc
fiadd
or
sub
cmp
movs
mov
push
dec
out
sub
inc
cmp
add
mov
adc
inc
data16
outs
pop
push
and
sbb
sub
add
mov
inc
pop
daa
bound
bound
mov
out
mov
jl
xor
ins
mov
pcmpgtb
push
aam
pusha
aaa
xor
jmp
out
inc
sub
lock
sbb
xchg
dec
inc
jmp
ret
sub
pop
and
inc
jb
add
adc
(bad)
xor
push
aas
cmp
jmp
add
cmps
mov
xor
and
aad
(bad)
adc
in
push
movs
inc
mov
int
hlt
mov
stos
and
xchg
cmc
or
xor
xor
sub
pushf
in
in
outs
push
test
mov
xor
imul
pop
fbstp
dec
push
sar
pop
pop
dec
fnsave
loop
xor
xchg
iret
dec
jmp
and
cmp
mov
adc
push
ret
add
das
jno
pop
add
shl
js
push
fisttp
inc
dec
push
push
and
add
sub
xlat
pusha
and
sub
push
inc
cdq
cwde
or
mov
xor
bnd
and
sar
dec
add
jmp
(bad)
jno
push
push
(bad)
push
fnstcw
enter
test
inc
dec
daa
ins
jns
pop
sbb
les
and
fadd
out
push
add
lds
or
jmp
popa
bound
mov
and
mov
lock
mov
enter
xchg
in
inc
push
push
sbb
sbb
inc
es
fcomp
sbb
mov
sbb
adc
popf
dec
add
lahf
or
out
fstp
or
xchg
scas
stc
popf
in
inc
cdq
or
push
dec
mov
cmp
mov
cli
sahf
std
nop
xor
add
xchg
mov
cmp
adc
cmp
push
mov
data16
dec
xchg
test
push
pop
cmp
movs
fld
imul
daa
in
mov
sub
jg
jp
push
out
outs
pop
mov
or
cmps
sub
push
adc
add
mov
push
sar
mov
bound
fisttp
fdiv
mov
dec
jne
xchg
retf
jmp
aad
or
inc
cmp
inc
mov
sbb
xchg
mov
out
xchg
cmp
cmp
stc
and
xor
sub
push
ds
adc
add
push
inc
mov
movs
xor
outs
fsub
fnsave
mov
outs
in
dec
std
xor
popf
adc
fist
pop
cmp
and
and
(bad)
mov
dec
sub
inc
inc
mov
imul
adc
mov
daa
xchg
sbb
dec
jp
inc
push
rcl
pusha
mov
xor
mov
cmp
arpl
or
push
adc
mov
dec
dec
stc
dec
shr
mov
inc
add
add
dec
pop
xor
cmp
inc
dec
push
fwait
pop
lea
imul
adc
adc
xor
add
daa
scas
in
adc
ss
in
hlt
fstp
adc
fs
add
mov
push
push
inc
pop
add
cmp
xchg
sbb
mov
or
in
cmp
xchg
mov
fwait
loopne
cmp
mov
cmp
add
lea
(bad)
bound
dec
cmps
xor
xor
mov
dec
add
inc
pop
loop
mov
mov
sbb
(bad)
out
mov
or
out
fs
loopne
pop
push
add
push
push
xchg
and
push
adc
mov
xlat
outs
data16
xchg
and
adc
js
push
mov
inc
sbb
pop
mov
or
cld
adc
(bad)
xchg
clc
adc
or
push
cwde
sbb
aam
sbb
adc
leave
je
sahf
(bad)
fadd
push
mov
jmp
mov
(bad)
test
mov
cmp
das
dec
pop
xlat
pop
jecxz
(bad)
(bad)
inc
ins
add
add
mov
adc
pop
xchg
push
adc
enter
or
mov
push
rcr
push
adc
push
mov
sub
inc
cs
inc
scas
push
mov
fs
inc
test
mov
pop
add
adc
scas
popa
cmc
mov
mov
dec
and
push
lock
push
pop
inc
icebp
add
sbb
sahf
pop
pop
xor
or
cmc
inc
outs
fcom
dec
js
lea
add
or
jns
dec
aam
add
test
push
jp
sbb
push
pop
sub
or
pop
mov
lahf
xor
inc
push
push
xchg
pop
xor
mov
push
mov
inc
ret
cmp
call
dec
shl
mov
xor
inc
out
dec
pop
pop
cmp
or
or
mov
in
jnp
or
jmp
xor
dec
add
mov
sub
(bad)
xchg
pop
test
rol
in
add
xchg
adc
jecxz
add
or
xor
ficomp
inc
dec
jne
xor
pop
sar
pop
jmp
(bad)
jmp
and
loop
lods
push
and
in
inc
cmp
cs
rcr
out
pop
arpl
cmp
add
push
sbb
or
out
push
jb
mov
(bad)
add
mov
and
ret
pop
ja
inc
cmps
pop
mov
daa
out
les
push
cmps
push
add
xor
ss
and
sbb
xor
push
mov
cmp
jle
add
inc
outs
outs
mov
add
or
xchg
in
movs
cmp
inc
mov
in
arpl
mov
fnstcw
out
push
rcr
add
mov
test
sbb
movs
cwde
aam
mov
mov
ret
ja
icebp
pop
ret
and
sub
mov
sbb
pop
clc
jl
pop
or
retf
adc
ror
dec
pop
sti
sbb
sbb
ins
cmps
in
sub
adc
mov
nop
inc
(bad)
dec
xchg
fadd
inc
adc
cld
jmp
in
xchg
adc
cmp
mov
dec
xchg
push
mov
popf
in
xor
mov
scas
sbb
or
inc
mov
mov
dec
data16
mov
xchg
xor
pop
or
imul
adc
fild
cmp
inc
not
inc
sub
sbb
mov
and
xchg
sahf
lea
push
cmp
jne
rcr
xchg
ss
inc
outs
or
fs
add
add
sbb
jg
ins
(bad)
int
xchg
stos
jns
cmp
pusha
jmp
xor
inc
lods
sbb
xor
inc
lds
dec
add
jmp
inc
ret
call
mov
push
js
cmovp
xchg
pop
sbb
inc
sub
sti
iret
sahf
sub
jne
cmp
push
push
sub
inc
dec
jne
dec
aad
and
std
and
outs
clc
addr16
inc
or
call
jns
movs
sbb
and
mov
loope
pushf
dec
cmp
gs
test
fimul
bswap
or
sahf
push
leave
dec
sub
sub
push
jno
shl
cmp
push
sub
popa
or
in
cld
lahf
push
add
xchg
push
les
test
add
jo
jnp
mov
loope
mov
div
xor
in
cmc
mov
xchg
mov
nop
stos
stos
jecxz
pop
push
sub
ins
xchg
xchg
ret
lahf
and
sbb
jle
fcmovb
push
sbb
jl
out
sbb
cwde
sbb
ret
stos
rol
(bad)
movs
cmps
push
pop
pop
call
loope
pop
inc
sbb
jmp
mov
xor
adc
push
(bad)
cs
rol
add
rol
and
and
cwde
movs
cwde
and
jbe
aaa
lds
inc
adc
adc
fbld
(bad)
mov
mov
mov
ja
inc
push
lds
loope
(bad)
mov
inc
mov
lea
das
(bad)
fcomp
push
jmp
call
leave
jns
addr16
inc
push
mov
(bad)
fidivr
lock
adc
mov
es
cdq
mov
sbb
ror
aam
std
pop
pop
pop
mov
inc
je
or
dec
loopne
jne
fistp
pop
adc
push
add
stos
in
xor
push
dec
pop
shl
push
int
inc
add
pop
inc
bound
dec
imul
push
pop
push
and
push
lods
ret
pop
ror
xor
icebp
push
(bad)
xor
sub
nop
add
ret
cli
enter
ror
loope
sbb
xor
dec
sbb
push
clc
push
pop
add
movs
(bad)
mov
adc
jle
mov
mov
jp
adc
dec
lahf
sahf
add
push
push
cmps
rcr
lods
ds
jns
lods
es
adc
push
push
dec
movs
add
xchg
retf
ds
or
jmp
mov
inc
add
push
jmp
cwde
add
mov
movs
int3
or
or
addr16
sbb
xchg
push
(bad)
push
xchg
xor
pop
test
(bad)
loop
or
call
call
jne
jmp
jmp
fst
(bad)
sbb
call
adc
dec
add
fiadd
jns
fst
aam
dec
mov
ins
pop
cmp
push
inc
test
xor
dec
dec
pusha
adc
pop
xor
jo
fdivr
sub
inc
and
inc
mov
lock
push
push
rcr
and
mov
mov
mov
jne
add
mov
retf
retf
pop
inc
lea
cmp
jo
lea
js
and
jo
adc
fcmovnb
or
movs
cmps
fmul
sub
push
cmp
movs
mov
in
sar
cwde
cmp
cmp
stos
sub
inc
pop
je
or
xor
and
das
sub
dec
or
pop
nop
(bad)
test
mov
and
inc
inc
sbb
or
adc
xorps
test
cld
add
sbb
xchg
cli
cs
and
sar
add
movs
jb
xchg
xor
outs
add
inc
xor
jo
ret
js
enter
mov
cmp
mov
mov
ret
js
dec
mov
xchg
xchg
adc
xchg
outs
and
dec
sbb
xchg
ins
jae
jae
jo
test
cmp
xor
ror
dec
adc
and
pusha
dec
and
aaa
or
ficom
add
imul
lock
xchg
mul
clc
sbb
dec
xchg
xlat
pop
neg
push
test
dec
and
pop
mov
jno
inc
cmps
fsub
cwde
nop
sub
or
inc
push
nop
out
push
lahf
add
(bad)
or
psubb
rol
mov
pop
sbb
sub
inc
jg
fimul
or
pusha
test
jle
std
cmps
inc
mov
push
mov
shl
push
xchg
xor
add
inc
jno
push
jg
mov
ret
jge
add
adc
out
xor
mov
repnz
dec
push
mov
imul
mov
sbb
out
or
sbb
adc
sub
(bad)
cmps
add
das
pop
xor
inc
ins
push
add
mul
mov
jns
inc
sub
mov
and
gs
lahf
fsub
xchg
ror
xchg
mov
retf
daa
adc
push
inc
push
out
sti
mov
icebp
add
fmul
ret
add
cmps
cdq
or
add
sbb
adc
popa
or
inc
call
mov
or
cwde
imul
das
aas
pop
push
pop
jl
inc
sbb
lea
push
loope
add
sbb
and
dec
add
jnp
(bad)
not
push
add
clc
mov
and
add
push
add
or
push
dec
xlat
imul
mov
out
inc
sahf
sar
lods
aad
inc
or
dec
std
push
sub
mov
add
std
mov
dec
lods
aaa
xchg
push
and
lods
inc
(bad)
in
adc
and
sub
fisttp
ret
and
mov
push
test
or
or
cmp
add
cwde
xchg
lods
ja
iret
jne
jno
inc
and
mov
test
add
jns
and
dec
(bad)
or
mov
dec
hlt
cmp
int
dec
imul
lds
dec
(bad)
fiadd
xor
rcl
retf
sbb
and
push
sub
rcr
mov
push
test
ret
inc
fild
add
cli
fcomp
cmp
dec
xor
inc
add
xor
enter
inc
add
adc
mov
stc
or
push
loopne
int
push
in
inc
inc
cmp
cmp
and
daa
fcom
cmp
inc
lds
in
mov
(bad)
fsubr
add
inc
cmp
mov
fild
xchg
cmps
pminsw
inc
pushf
int3
dec
fist
adc
cwde
mov
sti
pop
add
mov
xor
and
or
sbb
sub
pop
ds
sbb
dec
lods
stos
repz
sub
or
xor
sbb
out
add
iret
and
adc
or
cmp
jge
jl
sar
daa
add
dec
jle
cmp
jge
pop
or
sbb
inc
pop
outs
adc
fcmovb
mov
fmul
push
rol
imul
add
adc
adc
sti
and
sbb
or
mov
dec
sbb
lods
mov
fmul
(bad)
pop
cmp
push
sbb
cmps
xor
pop
xchg
(bad)
int3
mov
iret
std
call
(bad)
or
sub
sbb
push
adc
lea
sbb
sub
std
mov
mov
nop
out
xchg
adc
inc
jmp
popa
lock
jmp
sbb
(bad)
pusha
push
pop
push
pop
cmp
xchg
push
sbb
ins
retf
or
and
ror
push
addr16
inc
inc
add
movs
ret
popa
xchg
scas
ins
lods
popa
es
adc
inc
and
or
jb
cmp
jne
icebp
push
(bad)
jp
test
gs
aad
xchg
sub
pop
xlat
sub
rol
cmps
sbb
push
cwde
sbb
jmp
rcl
pop
sub
push
xchg
adc
scas
mov
mov
dec
arpl
test
les
aas
fs
out
mov
mov
add
sub
and
sbb
xor
adc
iret
xchg
cdq
in
and
xchg
jl
lock
out
adc
mov
and
js
and
or
push
scas
xchg
jo
lea
add
pop
mov
xchg
or
(bad)
out
inc
shl
adc
and
pop
cmp
outs
add
pop
adc
(bad)
repnz
repnz
nop
adc
adc
xchg
dec
shl
mov
out
cmp
push
jo
in
(bad)
cwde
adc
or
movs
push
out
mov
movs
and
xor
and
add
cmp
adc
aaa
xor
adc
add
cmps
fcomp
in
add
repnz
cmp
lea
or
fdiv
mov
dec
mov
jo
mov
push
inc
rol
shr
cmpxchg8b
jns
push
cmp
xor
jnp
inc
cmp
or
push
adc
push
mov
popf
(bad)
mov
mov
sbb
fadd
cmp
add
aam
fisttp
inc
mov
out
lahf
cmp
pusha
xchg
mov
inc
mov
lock
shl
int3
retf
add
pop
push
jge
cwde
push
xor
inc
jne
fs
imul
and
push
scas
push
cwde
ret
mov
leave
jno
cmp
mov
dec
(bad)
loop
adc
cli
xor
inc
lock
dec
loope
xchg
aad
push
bound
dec
les
adc
cmp
or
shl
and
dec
and
dec
ficom
mov
sub
or
or
or
mov
stos
push
ret
sub
aad
mov
jb
and
fcomp
pop
daa
cmp
ds
push
out
rol
xchg
cmps
push
and
cmps
xchg
bound
psllw
nop
pop
cmp
xchg
pop
or
push
push
add
pop
xchg
mov
repz
dec
retf
cwde
nop
call
add
xor
xchg
loopne
(bad)
test
loopne
mov
sbb
sbb
mov
dec
mov
shr
sbb
xor
neg
pop
cmp
(bad)
sbb
xor
imul
pop
cmp
mov
cmp
sbb
ret
push
ins
cwde
cld
push
inc
xor
cdq
ins
add
outs
pop
mov
cmp
jg
jae
xchg
adc
dec
aas
jp
add
pop
retf
add
dec
int3
(bad)
adc
cmp
je
mov
popa
or
add
jne
(bad)
mov
add
ds
push
mov
inc
sbb
out
dec
jmp
mov
add
sub
mov
push
sub
pushf
mov
mov
ret
mov
push
lods
ret
or
inc
cmp
fdiv
sahf
out
(bad)
mov
sbb
or
(bad)
cmp
push
out
mov
and
mov
jle
icebp
outs
adc
jb
je
dec
add
push
or
cmp
mov
add
pop
adc
sub
add
mov
or
pusha
shl
adc
jmp
pop
push
jecxz
pushf
xor
mov
dec
cmps
call
mov
loopne
movs
inc
loop
jmp
ins
or
fnstsw
je
ja
shl
lock
div
xchg
dec
sti
dec
call
or
es
sub
pop
(bad)
imul
or
adc
ds
adc
mov
mov
dec
inc
in
mov
adc
ret
adc
push
pop
lea
psllw
aaa
mov
fidivr
xchg
je
dec
mov
mov
adc
test
lock
mov
adc
mov
dec
rdtsc
xor
jecxz
and
dec
pop
repnz
int3
jo
test
js
or
int3
pop
pop
sub
push
push
sub
cli
xchg
mov
or
add
fcmovnbe
adc
repnz
push
js
mov
js
xchg
ret
jno
and
jl
in
lods
in
sub
fs
or
add
adc
fwait
xor
xor
pop
cmp
xchg
inc
sub
dec
lds
test
xor
xor
inc
loopne
xor
add
add
add
mov
cmp
push
xchg
push
push
xchg
sar
or
je
mov
mov
adc
repnz
pushf
cwde
inc
sbb
add
out
ret
jnp
jmp
adc
imul
xchg
mov
or
push
ss
imul
and
test
hlt
add
dec
aam
or
mov
xor
add
mov
cmp
or
or
cmps
fist
add
mov
aam
inc
and
mov
dec
rcl
ror
push
push
das
shr
adc
aas
rol
aaa
or
(bad)
clc
ss
pop
aam
mov
inc
push
pop
fbstp
sub
cmp
jge
sahf
cdq
nop
inc
mov
imul
inc
pusha
ret
and
push
and
and
pop
aaa
cmp
loope
inc
mov
inc
jo
mov
jb
es
and
(bad)
sub
and
mov
jae
fist
add
adc
push
and
in
fmul
adc
push
mov
and
add
push
mov
fs
adc
and
adc
push
pop
repz
xchg
mov
push
adc
dec
cmp
pop
sbb
ret
pop
xchg
into
push
aad
scas
retf
jmp
cmp
jge
punpckhwd
ret
and
test
js
and
push
adc
add
adc
sbb
pop
add
add
(bad)
xor
mov
sub
add
test
(bad)
aas
push
sbb
adc
or
pop
rol
repnz
enter
test
idiv
or
adc
gs
xchg
hlt
and
fdiv
jle
(bad)
mov
and
and
fwait
(bad)
inc
jle
and
popf
cs
mov
or
add
inc
popa
or
loope
enter
push
mov
inc
mov
and
xor
stc
aam
and
hlt
pop
test
mov
lea
in
inc
xchg
xchg
add
pusha
sub
lea
(bad)
jb
in
bound
adc
mov
inc
arpl
iret
adc
adc
loopne
jbe
cmp
or
test
sub
pop
mov
in
push
adc
add
ret
adc
xchg
jo
daa
and
xor
jmp
imul
inc
add
rcr
or
ficom
adc
inc
xor
add
imul
or
dec
dec
imul
xor
mov
retf
fisttp
movsx
fdivr
or
add
sbb
jmp
xchg
(bad)
add
sbb
sub
unpckhps
(bad)
repz
clc
or
sub
and
js
adc
ds
out
jmpw
hlt
fiadd
add
in
es
sub
stc
fucomp
ret
lds
adc
pop
jl
dec
retf
or
icebp
mov
mov
pop
or
add
or
leave
add
adc
fistp
jo
fld
inc
push
jb
mov
scas
xlat
xchg
dec
inc
mov
jb
sub
mov
mov
adc
pop
hlt
mov
cmp
aas
and
lods
pop
push
inc
fld
hlt
hlt
xor
test
outs
sbb
mov
ds
mov
or
daa
popa
mov
hlt
mov
xor
xor
and
or
das
add
sar
test
ret
xlat
mov
push
pop
and
stos
sub
jl
dec
inc
call
lea
loopne
call
add
(bad)
lock
nop
add
mov
add
lods
sub
or
and
lock
xchg
push
mov
push
jb
ror
mov
pop
jns
daa
jb
ficomp
adc
mov
sbb
and
or
dec
mov
iret
mov
repnz
inc
shl
data16
out
jge
test
call
inc
shl
fdiv
sub
out
shl
xor
mov
test
fidiv
add
xor
fdivr
xor
jecxz
lahf
loope
in
jge
xor
push
sti
clc
mov
aaa
popa
adc
fs
pop
pop
mov
out
fild
inc
test
jecxz
lods
mov
or
(bad)
retf
mov
mov
mov
xchg
inc
cmp
pop
test
add
add
adc
add
cmp
or
dec
inc
or
xchg
or
add
pop
cs
cmp
xor
leave
ins
ja
dec
add
adc
add
dec
xchg
and
cmp
inc
adc
popa
cld
mov
jl
inc
arpl
add
xor
arpl
sub
cli
add
loope
nop
xchg
or
mov
fiadd
test
xor
int
dec
sub
fst
sub
sub
add
pop
mov
add
fcomp
call
retf
and
aas
push
js
cmps
sar
popf
fsub
cdq
into
mov
push
mov
add
mov
jae
mov
loopne
in
int3
dec
dec
mov
dec
or
enter
int3
mov
movs
repz
pushf
rcl
jo
mov
xor
mov
sbb
test
sbb
inc
cs
in
xor
ror
push
jb
aam
cmp
pop
scas
mov
jo
jbe
cmp
adc
es
mov
cwde
loopne
adc
push
xchg
push
mov
xchg
movs
jge
jg
push
push
jno
test
cmps
dec
fwait
int3
jae
adc
lea
sbb
dec
add
mov
cs
popf
nop
cmp
and
jae
mov
adc
xor
pop
sbb
mov
clc
outs
(bad)
es
or
sbb
jns
sbb
sbb
xor
or
pop
mov
and
inc
test
xor
lahf
xchg
xchg
inc
jbe
or
mov
inc
aam
mov
ret
add
aam
adc
and
xchg
shl
adc
mov
aas
lds
mov
mov
inc
movs
imul
jns
lock
xchg
xchg
sbb
mov
sti
movs
add
lea
repz
or
leave
cs
out
ret
push
lock
or
and
xchg
mov
js
push
scas
icebp
adc
cmp
sub
dec
pop
and
and
dec
nop
retf
int
sti
mov
(bad)
enter
out
pop
inc
or
and
push
and
mov
push
xor
xchg
mov
ror
lahf
cdq
cmp
inc
pop
sbb
mov
mov
loope
dec
daa
cmp
push
sub
add
mov
push
or
cmps
cwde
cmp
mov
lea
je
dec
pop
cmovo
push
sbb
pop
cmp
adc
sub
inc
stos
(bad)
xor
cmp
movs
mov
dec
pusha
std
sbb
ins
jne
out
mov
arpl
sbb
and
imul
sub
icebp
push
dec
push
(bad)
cmp
or
sub
adc
pop
xchg
xchg
adc
xor
xor
mov
shr
sbb
int
jge
inc
enter
les
add
fisub
dec
lods
add
add
imul
int3
fiadd
and
ss
iret
pop
pop
mov
data16
std
dec
or
and
push
imul
jmp
sub
jb
cdq
mul
das
push
ins
push
mov
add
in
dec
jle
rdpmc
cmp
and
dec
jae
cld
ins
dec
js
jmp
xor
ss
nop
dec
inc
mov
xor
pop
movs
jo
add
fild
imul
cmp
imul
jecxz
jmp
jb
ret
inc
and
adc
fisttp
pop
cmp
js
adc
sub
add
mov
push
test
mov
jo
lods
retf
arpl
loop
scas
ficom
and
xor
cmp
test
add
sbb
or
cmp
xor
mov
sub
push
xor
adc
xchg
ja
in
push
fucomip
imul
rcr
(bad)
fisub
mov
sub
outs
retf
js
loopne
add
or
dec
cs
and
or
xor
add
push
je
cmp
je
add
or
jmp
outs
ins
mov
es
push
push
and
dec
jmp
adc
adc
or
in
or
ss
jbe
push
fs
jmp
movs
jmp
scas
xchg
push
sub
mov
push
push
imul
ins
jns
pusha
popa
pop
scas
retw
mov
adc
add
sbb
push
les
mov
call
ret
xor
fmul
and
xor
dec
push
add
aaa
pop
fs
pop
and
sbb
add
xor
sbb
push
or
ss
or
outs
fcmovbe
add
mov
cmc
push
sub
sbb
jmp
xor
xlat
push
pop
sbb
fwait
test
in
pop
xor
xor
iret
mov
ja
das
mov
and
and
(bad)
mov
out
mov
fdivr
xor
sub
lock
adc
in
mov
xor
mov
inc
cmp
test
ja
sar
mov
jb
mov
jecxz
cmp
addr16
adc
push
loopne
add
and
or
jae
icebp
bound
adc
test
add
push
aas
mov
ret
bndldx
push
and
dec
xor
test
adc
pop
pop
imul
push
xchg
push
mov
aas
xchg
mov
xchg
(bad)
pop
(bad)
daa
xchg
fsubr
shl
ret
xchg
(bad)
daa
add
leave
jbe
adc
mov
cmps
jmp
push
or
mov
aaa
nop
pushf
jl
retf
ja
jp
mov
xchg
es
jg
push
mov
inc
stos
test
pop
pop
ins
enter
push
clc
push
es
add
add
dec
inc
push
dec
cmp
xor
or
ins
lgs
adc
inc
out
push
inc
lods
sbb
daa
rcl
ror
mov
ffree
popf
sub
rcr
cmp
inc
and
sysenter
and
rol
leave
(bad)
pop
mov
(bad)
int3
adc
cmp
(bad)
mov
dec
dec
js
test
and
pop
js
and
mov
mov
adc
es
inc
jmp
sbb
jl
or
jg
rcr
test
mov
cdq
mov
arpl
push
push
sbb
rcl
fidiv
lahf
add
cmps
daa
(bad)
xor
outs
cwde
shr
adc
add
mov
call
test
hlt
jp
add
adc
outs
lods
ret
or
stos
dec
fnsave
enter
xor
or
fbstp
ret
xchg
dec
popa
jno
mov
mov
arpl
test
bound
sbb
add
add
add
ret
xchg
jl
or
ret
out
push
les
(bad)
mov
push
xchg
pusha
lahf
pop
jge
xor
(bad)
cmp
inc
rol
ja
dec
(bad)
mov
mov
dec
sub
ds
inc
test
test
es
xchg
test
cwde
out
(bad)
rcr
adc
mov
cmp
js
mov
shl
addr16
jmp
fs
ret
cld
adc
add
xor
push
pop
les
rcl
inc
(bad)
(bad)
xchg
sti
and
and
mov
fbstp
xor
adc
xchg
es
mov
xor
cmps
add
loop
pop
inc
add
and
fsub
out
sbb
or
inc
pop
lahf
into
call
push
push
rcr
scas
ss
add
fist
pusha
pop
sub
popa
add
cs
adc
adc
adc
dec
jecxz
(bad)
push
xchg
movs
xchg
popa
fwait
xor
xor
out
pop
dec
push
mov
cmp
pop
sbb
and
shl
fsub
inc
mov
pop
leave
and
xor
je
add
shr
mov
dec
dec
pop
sub
sbb
pop
mov
jmp
dec
mul
xchg
pop
cli
call
add
or
imul
xor
stc
push
shl
jge
popa
xor
sbb
ror
push
xor
push
repz
xor
fnstcw
add
in
mov
xor
fist
mov
xor
rcr
xchg
mov
cwde
jmp
mov
cmp
and
pop
jo
out
add
adc
and
and
jne
cmp
repnz
and
fcmovb
ins
dec
not
es
test
mov
ins
jmp
movups
fs
fdivr
dec
adc
sub
push
xor
test
lods
(bad)
mov
lahf
test
jmp
test
add
dec
sub
inc
and
xchg
dec
imul
add
inc
fs
add
bnd
dec
push
jbe
push
cld
adc
cmp
jg
data16
adc
or
inc
sub
push
leave
xlat
sub
mov
or
cmp
mov
inc
push
sub
sub
and
mov
or
sti
clc
pushf
jg
push
adc
and
xor
mov
pop
cli
or
add
mov
add
(bad)
in
adc
push
add
xor
call
fsub
push
jl
and
sub
nop
outs
and
mov
adc
(bad)
ja
outs
jl
xor
or
pop
xchg
jae
jne
push
test
pushf
add
mov
pusha
popa
sbb
add
inc
adc
in
repnz
aaa
dec
je
sbb
add
into
lods
loopne
gs
outs
inc
jmp
adc
cwde
outs
enter
inc
mov
inc
je
mov
es
pop
fwait
sub
adc
fmulp
mov
aaa
mov
add
sbb
add
jo
clc
dec
push
add
div
mov
and
aas
inc
sti
mov
cmp
or
mov
xor
add
mov
xchg
add
loope
in
add
inc
add
add
inc
xor
add
add
and
and
add
sbb
loope
sub
mov
xchg
xchg
aam
enter
test
mov
lods
nop
dec
push
and
add
push
sahf
addr16
pop
aaa
pop
mov
add
add
nop
lea
lds
mov
mov
cmc
ins
mov
or
dec
bound
cmps
push
push
inc
js
shl
pusha
call
push
and
add
movs
cmp
ror
mov
iret
sbb
and
jl
sub
loope
mov
rcl
lea
dec
jnp
or
and
fwait
pop
mov
pop
push
push
daa
adc
adc
adc
pop
or
gs
call
inc
xor
arpl
jno
fs
xchg
lods
sbb
mov
dec
push
sub
sbb
and
in
mov
cmp
push
iret
les
movs
bound
dec
and
add
inc
je
jmp
jb
cmp
mov
dec
call
push
jmp
and
lods
mov
nop
and
inc
lods
jns
xchg
dec
or
add
add
add
dec
xchg
inc
push
and
push
je
jmp
dec
lods
loope
and
xchg
push
rol
push
sbb
pushf
or
pop
push
mov
pop
test
push
jo
xchg
mov
mov
ds
and
jne
fwait
and
mov
push
dec
pop
clc
push
cmc
mov
add
push
(bad)
jg
fucomi
or
mov
inc
arpl
je
stos
adc
movs
mov
cli
and
inc
iret
clc
lea
test
ret
rol
jae
loopne
inc
pop
pop
scas
dec
mov
(bad)
jmp
xor
sbb
stos
inc
pop
loop
test
mov
push
or
and
mov
out
mov
je
pop
sub
cli
cmc
dec
repnz
sub
sub
adc
aas
sub
and
loopne
mov
or
jmp
fiadd
pop
shl
add
jge
pop
jmp
mov
jnp
mov
or
push
int3
in
in
mov
test
mov
test
xchg
and
(bad)
stos
adc
push
sub
call
scas
repnz
dec
fisttp
dec
jmp
mov
add
push
aaa
sub
fsubr
mov
inc
sbb
push
mov
leave
in
adc
jmp
call
jmp
sub
call
jecxz
call
test
or
jmp
or
(bad)
enter
lods
or
jmp
or
mov
or
inc
or
jmp
adc
mov
xor
and
sub
dec
(bad)
adc
adc
add
sbb
fistp
adc
mov
dec
ds
push
mov
dec
fist
movs
inc
aas
fstp
lods
std
popf
loop
adc
loopne
dec
xor
push
popa
dec
push
test
arpl
and
push
jmp
jo
out
dec
test
pop
push
push
dec
inc
nop
dec
retf
aas
popf
lock
outs
mov
jnp
xchg
sbb
clc
xchg
scas
push
(bad)
stos
pop
mov
adc
xor
or
jne
push
xor
and
cmp
push
add
sbb
inc
pop
mov
jne
add
bound
ins
add
mov
pop
movs
jno
or
test
stos
mov
sub
or
jmp
fcomp
into
sbb
ins
lods
xchg
das
push
xchg
jl
sub
jge
jbe
cmp
xchg
inc
mov
imul
mov
sbb
pop
xor
xchg
or
aaa
or
lock
xor
cli
retf
mov
enter
and
pop
sub
arpl
out
nop
lds
jbe
add
pop
xor
or
lahf
mov
mov
inc
push
dec
fisttp
dec
cmps
xchg
dec
add
(bad)
adc
jne
or
jge
push
ja
je
add
sub
ins
jle
and
sub
leave
jmp
mov
add
sbb
ret
ret
push
sbb
pop
xor
adc
ret
mov
adc
or
mov
pop
sub
xchg
pop
and
sub
inc
loop
pop
xchg
mov
mov
jno
pop
repnz
outs
rcl
adc
mov
imul
add
mov
addr16
mov
xchg
psubsw
(bad)
dec
sub
ret
pop
add
enter
push
popa
jmp
in
jg
cmp
ins
adc
xchg
pop
or
int3
push
dec
xor
and
push
fmul
int3
adc
or
xchg
or
add
cs
pop
pop
add
fdivr
xchg
dec
or
sub
mov
sub
lods
jp
test
adc
or
add
add
or
mov
pop
pop
sub
and
mov
inc
sbb
pop
ret
add
mov
jecxz
cld
gs
cwde
xlat
rol
and
or
pop
cdq
js
nop
dec
xor
mov
push
sar
and
xor
(bad)
fwait
adc
xor
xor
adc
cmp
or
inc
xor
mov
dec
jo
lods
push
jmp
inc
or
imul
inc
imul
dec
in
sbb
call
(bad)
imul
leave
ror
or
(bad)
enter
out
mov
mov
mov
hlt
ret
adc
or
imul
clc
jl
inc
mov
jne
pop
cdq
xor
xor
mov
mov
jo
add
sub
mov
or
jmp
push
es
inc
inc
rcl
pop
sahf
pop
dec
mov
imul
sbb
fst
ret
movs
inc
push
ficom
mov
mov
dec
(bad)
repz
movs
cmp
stos
popf
xor
add
cmpxchg
sub
jne
or
sbb
js
jne
shl
adc
add
std
pop
pop
xor
ins
ret
les
ja
test
sub
or
test
aaa
or
cmp
in
bswap
xor
sbb
cwde
mov
xor
mov
mov
push
inc
shr
sub
out
sbb
in
push
sbb
adc
push
adc
add
call
mov
push
leave
and
push
inc
daa
ins
and
xor
out
in
pop
xor
cmp
movs
(bad)
push
inc
mov
adc
cmp
adc
pcmpgtb
dec
ret
jmp
retf
pop
push
es
push
jecxz
pop
jle
jmp
adc
and
inc
pop
and
leave
and
mov
fnstenv
dec
jne
pop
iret
sbb
ins
inc
in
call
loopne
ror
pop
adc
sub
add
sbb
popf
shl
dec
cmp
xchg
sar
cwde
cwde
aaa
sub
dec
or
xor
mov
add
iret
repz
adc
push
scas
call
mov
retf
add
add
or
mov
cli
iret
call
add
adc
push
in
cmp
add
add
daa
imul
xor
add
inc
repz
data16
sbb
pop
add
add
add
adc
cdq
push
and
dec
adc
sahf
inc
cwde
mov
mov
sbb
dec
or
(bad)
cwde
cmps
sbb
xor
enter
ins
and
pop
aas
jmp
push
mov
adc
imul
push
mov
mov
ja
test
or
sub
in
test
xchg
inc
lea
inc
jge
sub
fiadd
aam
jl
mov
and
adc
sbb
enter
ds
or
(bad)
mov
and
sub
test
jle
out
push
cmp
sar
push
adc
add
mov
loop
into
and
jle
or
adc
aas
dec
loope
js
sub
mov
dec
ret
xchg
mov
ins
xor
mov
bound
movs
movs
push
dec
and
and
aaa
push
iret
cmp
jne
sub
scas
fimul
pop
imul
and
pop
fistp
mov
lea
sbb
(bad)
jg
mov
mov
retf
ret
sbb
add
jne
dec
or
jp
sbb
ins
sbb
add
and
stc
push
rol
push
(bad)
cmp
jge
xchg
xor
ret
and
or
icebp
adc
sbb
inc
xchg
pop
cmp
jle
add
std
rcr
shl
cmps
add
jmp
pop
ss
push
pushf
es
jmp
jmp
or
xchg
inc
or
xor
add
inc
push
sbb
and
pop
inc
loope
mov
in
daa
dec
pop
repnz
pusha
xlat
bound
(bad)
hlt
xor
pop
imul
das
nop
sti
sbb
jle
mov
loopne
scas
or
mov
not
mov
mov
lods
shl
adc
jge
adc
pop
cs
cwde
xchg
and
dec
ss
dec
cli
clc
add
arpl
(bad)
fisub
popa
fst
add
cmp
outs
xchg
enter
mov
mov
dec
(bad)
pop
(bad)
and
ins
cdq
cmp
jmp
xor
sbb
adc
mov
push
xlat
pop
adc
daa
test
loopne
jne
pop
push
jmp
les
not
xor
in
cdq
pop
pop
ds
cmp
mov
lods
std
adc
push
sbb
add
xchg
(bad)
mov
xchg
adc
dec
dec
push
and
cmp
lock
or
mov
in
call
idiv
arpl
cmp
mov
mov
jne
jbe
je
inc
jg
cmc
xchg
nop
inc
push
cmp
sbb
ins
or
imul
push
dec
inc
inc
inc
cmp
nop
dec
add
dec
sub
mov
and
int
add
fist
test
sub
test
mov
push
xchg
inc
xor
push
loopne
dec
add
aas
cld
and
adc
clc
cli
jns
outs
mov
ret
and
xor
xchg
je
movs
jge
sub
stc
sti
aam
xlat
cs
dec
add
push
dec
add
cwde
mov
dec
pop
push
mul
clc
mov
jns
imul
pushf
push
push
pop
mov
or
push
push
nop
aaa
in
or
hlt
test
or
(bad)
inc
push
mov
pop
add
repz
fidiv
add
xchg
xchg
es
bound
xor
pop
push
xchg
test
xchg
cs
inc
repz
jmp
cs
into
rcr
movs
mov
pop
fadd
push
(bad)
shl
dec
mov
fld
aam
pop
not
cmp
aaa
cs
and
fisttp
or
mov
adc
sub
sbb
mov
js
loopne
lods
shr
mov
xchg
in
add
clc
push
jg
fs
arpl
jns
xchg
test
and
cld
or
push
mov
pop
aam
aam
and
inc
jmp
in
and
(bad)
rol
(bad)
adc
adc
mov
add
or
nop
in
add
loopne
pop
dec
pop
and
stos
pop
push
xchg
xor
dec
ret
ss
push
sub
sahf
xchg
xor
dec
dec
ud2
cmp
movs
clc
cmp
call
push
call
psraw
call
mov
or
lock
repz
or
inc
in
bound
lea
push
mov
imul
out
data16
mov
push
sbb
test
mov
inc
add
sub
xlat
stc
sub
jae
push
jmp
add
dec
pusha
add
pop
inc
jp
(bad)
(bad)
fldcw
push
movs
and
add
ds
fistp
aam
push
jns
mov
ficomp
sbb
sbb
mov
sub
dec
jmp
xchg
jp
(bad)
sbb
push
or
outs
(bad)
fwait
and
imul
sbb
adc
cmp
xchg
imul
adc
je
pop
loopne
inc
or
or
push
stc
aam
ss
push
push
pop
mov
or
mov
imul
add
jbe
dec
mov
outs
sub
add
or
clc
and
aad
cs
xchg
outs
sbb
leave
fnstsw
jb
leave
and
add
jecxz
add
loopne
lock
add
pop
sub
fs
add
ret
push
jb
and
add
popa
sbb
pop
in
mov
shr
movs
pop
inc
leave
imul
daa
adc
mov
and
cmp
cmp
cs
and
add
fisub
mov
(bad)
add
nop
pop
adc
inc
iret
push
or
ins
push
mov
test
aaa
sbb
and
mov
push
test
ss
push
(bad)
xor
jbe
cmp
repz
or
gs
cmps
sbb
adc
xor
xor
pop
aam
and
jmp
out
sbb
sbb
mov
or
sbb
pop
call
(bad)
sub
scas
arpl
add
xchg
push
outs
cmp
or
je
sbb
lods
movs
les
or
jp
data16
fwait
aam
xchg
xchg
icebp
fmul
ret
mov
(bad)
jmp
movs
adc
ret
cmc
out
test
lock
addr16
sub
sbb
sbb
(bad)
retf
or
mov
(bad)
stc
(bad)
out
repz
mov
movs
fnsave
jmp
and
or
imul
ror
mov
xchg
and
sbb
je
sbb
shl
add
cmp
inc
pusha
add
fs
push
push
iret
jno
hlt
pop
inc
add
shr
lods
inc
cld
push
push
sub
add
cmp
inc
cmp
dec
and
and
adc
sub
stc
sub
imul
inc
push
mov
iret
mov
mov
pop
movs
push
pop
push
inc
repnz
rol
jmp
or
lods
inc
rcl
push
push
aad
movs
sub
sub
inc
lahf
add
cmp
repnz
mov
int3
pop
mov
mov
mov
icebp
sub
cmp
xor
dec
push
mov
sti
test
xor
loopne
inc
icebp
repnz
mov
push
imul
add
ret
jne
cmp
xor
xor
dec
jp
mov
pop
xor
jnp
adc
fmulp
dec
jae
jmp
test
xchg
and
sbb
and
pusha
adc
fcom
xchg
cwde
fadd
movs
or
mov
xlat
push
rol
xchg
dec
add
les
(bad)
and
adc
push
stos
and
(bad)
adc
mov
aaa
jmp
mov
jb
cld
lahf
or
aad
jne
popa
lods
xchg
call
rcr
mov
sub
jmp
imul
dec
stos
mov
xchg
dec
int3
xor
js
or
sub
push
sub
and
inc
inc
and
mov
shr
movs
inc
(bad)
arpl
movs
jecxz
dec
pusha
adc
les
lds
in
add
test
imul
lods
cmc
fcomp
mov
sbb
pop
retf
add
or
outs
jb
adc
add
mov
inc
or
ss
push
push
cmps
mov
cwde
mov
outs
cmp
repnz
inc
mov
or
and
mov
cs
lods
sbb
push
mov
dec
cdq
add
or
(bad)
cvttps2pi
push
mov
jb
mov
adc
test
and
xor
sbb
push
outs
or
and
jl
ret
into
adc
push
add
mov
add
repnz
and
in
cmp
mov
cld
repz
push
pop
push
pop
add
mov
movs
jno
inc
push
pop
adc
mov
add
shl
loop
pop
cmps
ror
jl
pop
add
mov
sub
xor
jne
cmps
add
pusha
and
cs
mov
lods
or
or
jb
aaa
sahf
test
js
popa
je
mov
xchg
cmp
aad
mov
clc
sahf
lock
(bad)
repz
dec
jle
mov
cmp
push
mov
daa
fwait
mov
addr16
mov
outs
mov
and
pusha
jg
push
add
adc
cmc
xchg
test
nop
or
sbb
adc
or
push
xchg
mov
sub
mov
cmc
push
add
mov
stos
or
mov
or
(bad)
fs
movs
nop
push
dec
or
adc
gs
jmp
addr16
push
cmp
adc
movs
movzx
dec
(bad)
call
cmps
xor
push
inc
inc
les
test
pop
push
and
out
rol
fimul
dec
jecxz
mov
dec
xchg
in
adc
leave
es
scas
in
xchg
rcl
mov
fucomi
mov
jnp
or
sub
sub
and
and
or
jbe
pop
mov
jge
in
nop
ins
pop
(bad)
inc
unpckhps
xor
dec
enter
daa
lods
inc
ja
push
and
ffree
xchg
mov
dec
xchg
and
adc
aaa
mov
shr
cmp
sub
push
aas
xor
inc
cdq
mov
repz
inc
es
stos
pop
and
sbb
or
das
xor
or
mov
call
test
sbb
dec
push
inc
dec
into
mov
dec
call
popw
gs
mov
rcl
mov
xor
cwde
ins
push
sub
sub
mov
sbb
add
movs
loope
loope
ss
push
jae
inc
dec
sub
xchg
inc
addr16
shl
fbld
dec
pop
mov
dec
inc
sbb
dec
(bad)
lods
mov
lock
mov
not
iret
inc
and
pop
jge
add
mov
xchg
push
or
fbld
add
mov
or
cmp
dec
add
xchg
test
jae
sub
fimul
mov
xchg
pop
les
add
inc
inc
cs
adc
jo
xchg
mov
enter
mov
lods
rcl
jb
mov
lods
icebp
sub
aas
frstor
pop
jbe
inc
pop
xor
cmp
add
jle
out
loop
push
jno
push
cmp
aam
mov
cmp
jmp
pusha
add
mov
test
mov
cmp
jl
sbb
or
sahf
loop
loop
pop
or
mov
and
cmps
aad
fs
mov
dec
stos
cmp
(bad)
xchg
mov
pop
sbb
test
xor
and
cwde
cmp
mov
stos
cmp
and
mov
(bad)
mov
mov
adc
cmp
or
mov
cs
mov
pop
add
jmp
pushf
rol
sub
cmp
jg
sbb
add
fadd
retf
sub
sbb
enter
xor
cmp
inc
(bad)
or
test
and
xchg
fwait
add
jle
mov
popa
adc
and
enter
test
mov
cmp
int
sbb
jl
movs
push
or
(bad)
out
out
xor
daa
or
push
xchg
push
xor
repz
repnz
vmread
je
add
hlt
xor
xchg
jmp
push
fild
mov
leave
adc
cmps
jge
add
adc
les
fs
dec
retf
ret
rol
sub
dec
cmp
inc
pushf
nop
xchg
or
dec
and
adc
cwde
mov
add
sti
add
lods
add
das
or
outs
sub
adc
pusha
jb
nop
scas
sahf
sub
adc
outs
sub
cmp
out
xchg
ret
and
stc
fstp
dec
xor
adc
call
jae
mov
mov
xchg
cmp
leave
or
mov
push
(bad)
pop
lods
popa
fist
lahf
dec
jne
inc
xchg
mov
add
cmps
sbb
lea
pop
pop
psubusb
movs
shr
push
std
test
clc
xchg
sub
sbb
or
call
in
or
sub
int3
xchg
fcomp
fiadd
xchg
cmp
and
jne
pop
fist
jo
xor
push
loope
sbb
ficomp
jns
or
shl
and
push
mov
cmc
fs
fsubr
retf
mov
jle
cmps
sub
mov
and
fsubr
ds
inc
xlat
leave
or
bound
xor
loopne
jb
imul
dec
cmp
lahf
call
pop
mov
add
and
push
f2xm1
dec
sub
jg
dec
fbld
dec
inc
jne
dec
icebp
adc
add
clc
adc
jmp
jmp
call
sbb
push
pop
jno
xor
aam
inc
div
push
stc
jae
add
inc
inc
retf
std
pop
mov
adc
retf
loop
iret
movs
dec
mov
jnp
popa
cdq
pop
jmp
inc
mov
or
dec
cs
or
inc
xor
mov
test
data16
and
or
ja
test
movs
sub
mov
push
mov
add
mov
adc
bound
inc
stc
mov
bound
mov
push
sub
push
int3
adc
jg
jbe
jmp
lods
popf
or
mov
push
pop
loope
mov
stc
mov
fild
jbe
adc
mov
cmp
xchg
inc
and
and
mov
pop
(bad)
mov
or
and
test
scas
loopne
and
dec
xor
test
sbb
jl
add
pop
pop
mov
sub
in
adc
push
push
lods
inc
cmp
push
dec
or
jge
add
popa
inc
mov
ror
or
test
retf
sti
add
mov
xor
pop
push
mov
mov
cmp
es
add
dec
in
adc
sub
fwait
sub
or
ins
sbb
mov
ja
ror
arpl
fcomp
popa
sub
daa
movs
mov
and
lea
clc
xchg
test
ror
mul
mov
push
shr
push
cmp
in
xlat
sbb
jmp
add
leave
jmp
jno
mov
lock
dec
xchg
aam
sub
mov
fild
mov
loopne
mov
xor
clc
leave
sbb
mov
lea
push
loopne
jne
push
sub
jo
push
mov
sar
dec
aam
stos
lods
mov
add
push
hlt
push
mov
and
xchg
jg
je
mov
fdivr
xchg
xchg
cmps
aam
sub
dec
fadd
mov
mov
push
dec
pushw
out
in
mov
mov
inc
in
pop
in
mov
outs
call
sbb
inc
dec
enter
(bad)
mov
retf
aad
punpckldq
and
or
loope
add
jmp
and
sub
jo
outs
in
inc
or
out
add
pop
dec
aam
mov
push
push
ror
dec
pop
inc
das
cdq
mov
or
dec
mov
pushf
shr
and
sar
out
mov
and
imul
sbb
mov
ins
inc
imul
cld
retf
in
outs
inc
mov
adc
fucomi
or
cmp
xor
int3
mov
mov
adc
xchg
fcomp
or
(bad)
int3
(bad)
mov
ja
clc
clc
or
mov
inc
push
jmp
and
cmp
clc
int
ror
push
sub
xor
mov
sbb
lea
clc
add
add
es
loopne
push
jmp
outs
test
add
(bad)
lea
adc
pop
mov
(bad)
into
add
pusha
rcl
xchg
push
add
and
sub
sub
popf
push
ret
pop
adc
or
aad
xchg
outs
out
out
and
sub
in
les
lahf
aam
pop
pop
mov
loop
out
push
mov
jne
popa
inc
cmp
fcom
sub
imul
sub
jno
mov
adc
push
push
sbb
xchg
gs
mov
xchg
loope
push
add
lahf
add
or
js
push
mov
(bad)
retf
dec
xor
dec
loopne
jg
(bad)
test
mov
or
and
sar
jle
cmp
movs
fstp
jbe
adc
pushf
sub
(bad)
movs
add
push
mov
pop
mov
jmp
je
cmp
adc
stos
inc
ret
adc
or
sbb
lods
sbb
cmc
sub
jmp
rcr
(bad)
test
pop
inc
xor
out
push
dec
cmp
popa
ja
add
fdivr
xchg
add
xor
dec
xchg
into
les
cmp
sbb
add
call
mul
pop
and
sbb
jecxz
in
stc
lock
imul
or
jne
push
cmc
lock
jp
push
cmp
rcr
fcomp
push
add
cs
(bad)
(bad)
rcr
lods
cs
or
fwait
add
ret
sub
(bad)
xor
fild
adc
mov
fimul
hlt
jo
scas
sub
sar
cmp
pop
adc
pop
in
xor
jae
cmp
clc
inc
arpl
dec
pop
inc
(bad)
dec
aaa
inc
loop
add
mov
aad
sub
xchg
sub
mov
je
sub
or
add
add
sub
pushf
mov
repnz
and
xor
test
and
sbb
cmp
or
enter
xor
test
push
mov
call
or
out
xchg
xchg
mov
mov
je
push
cdq
rcl
retf
addr16
mov
and
add
imul
es
adc
test
xchg
lock
xchg
add
fs
xchg
popa
mov
fwait
fs
add
(bad)
cld
or
pop
call
cmp
mov
pusha
adc
(bad)
outs
idiv
dec
cmp
and
add
mov
(bad)
and
adc
mov
jne
sub
dec
jne
stos
add
(bad)
out
inc
loopne
xchg
xor
xchg
inc
push
fidivr
or
xchg
jo
lds
cmp
call
hlt
xor
cmp
and
pop
neg
sub
sbb
(bad)
movs
pop
aaa
inc
inc
sbb
mov
out
or
push
je
pop
jne
movs
sbb
mov
(bad)
cmp
xchg
add
sub
or
aaa
add
es
mov
cmc
mov
and
xlat
imul
jp
mov
and
or
xor
(bad)
cmp
sub
xchg
arpl
mov
(bad)
cmp
jne
retf
dec
mov
push
(bad)
into
leave
(bad)
popa
pop
test
pushf
or
mov
mov
push
xchg
add
sbb
xor
xchg
sbb
sbb
xchg
jmp
(bad)
rcl
ds
imul
cdq
inc
or
bound
lock
dec
sbb
inc
and
dec
inc
push
add
stos
test
jg
fild
ret
pushf
test
add
inc
add
xor
ja
jl
mov
mov
jmp
sbb
nop
mov
xchg
push
xchg
or
test
ds
jo
mov
or
ret
jge
ret
mov
or
retf
pusha
adc
push
pop
add
aad
out
sub
add
aaa
add
sub
and
jb
ss
inc
adc
hlt
inc
mov
loope
or
pop
push
sbb
push
(bad)
les
test
xchg
and
inc
mov
cs
(bad)
push
xor
(bad)
rcr
jnp
add
adc
call
add
xor
push
fimul
pop
pop
or
jmp
movs
jno
js
call
test
clc
or
call
jno
imul
test
sub
ja
test
mov
test
fs
jno
imul
sub
mov
sbb
(bad)
add
sub
loop
xchg
lods
test
loopne
rcl
xor
cmp
sbb
call
je
jmp
ret
lahf
sahf
rcl
inc
lds
push
add
xchg
test
pop
or
adc
xor
cmp
mov
add
and
dec
inc
cmp
xchg
rcr
mov
dec
adc
cmp
add
adc
inc
adc
xlat
pop
outs
popf
mov
lea
aas
sub
sub
jp
lods
push
es
and
add
inc
dec
mov
fsubp
xchg
sbb
mov
(bad)
or
fadd
or
add
push
or
clc
mov
or
mov
retf
add
push
xor
sub
jl
mov
clc
dec
sub
xchg
push
cwde
shl
ret
fs
mov
and
pop
imul
sub
ds
fadd
rcl
call
ins
sub
and
inc
outs
(bad)
call
jg
push
inc
lahf
jecxz
test
lea
fdivr
loopne
pop
or
ret
xor
add
sbb
gs
xor
imul
jo
dec
inc
pop
sar
and
or
ss
daa
stc
and
fisub
sbb
ret
mov
mov
ror
or
add
lods
sbb
sub
pop
test
lock
xlat
je
loopne
inc
inc
mov
ror
mov
add
jo
cld
pop
aaa
jno
jae
or
dec
adc
cmp
gs
xchg
out
sbb
inc
push
rcl
add
in
sub
cwde
xor
daa
sbb
inc
or
inc
fwait
sbb
rcr
inc
jmp
lock
es
add
lahf
es
ja
pop
in
jmp
pop
xor
nop
sar
mov
inc
sub
xor
add
cmp
mov
or
(bad)
clc
clc
and
pop
add
push
(bad)
mov
adc
add
sar
push
ins
xchg
push
add
xchg
or
inc
int
or
cmp
(bad)
fisttp
fbstp
leave
inc
stos
xchg
ds
rol
rol
loopne
mov
mov
imul
sbb
adc
inc
inc
cmp
inc
or
sbb
adc
popf
sub
cmp
xor
mov
mov
stc
sti
(bad)
in
ins
xor
dec
mov
dec
xchg
and
add
add
jns
sub
fisttp
mov
call
gs
enter
ins
hlt
dec
inc
test
inc
adc
sbb
(bad)
xchg
loope
icebp
jg
int3
sub
or
in
sti
pop
push
or
popf
adc
pop
fimul
aad
call
popa
in
or
cmp
enter
pop
ficom
or
fcomp
mov
(bad)
sbb
xchg
jmp
(bad)
jp
loopne
shl
popf
in
xor
push
loopne
(bad)
push
jne
stos
mov
jae
inc
dec
push
or
jae
sub
jmp
ror
fisttp
xor
repz
or
das
push
pop
sub
scas
push
mov
scas
mov
jg
inc
cmp
jle
lea
dec
mov
rcl
dec
dec
cmp
imul
cmp
pusha
movs
ins
(bad)
cwde
xor
ins
js
ret
add
in
popa
int3
mov
fsub
pop
xchg
sbb
out
jge
adc
mov
sub
add
sub
sbb
std
(bad)
cmp
sub
shl
or
iret
push
dec
add
and
fistp
sldt
and
mov
jb
ja
loopne
pop
and
mov
jecxz
push
mov
sub
or
iret
aad
cmovae
sbb
add
add
and
xchg
xlat
sbb
arpl
add
cmp
inc
dec
imul
xlat
(bad)
sar
xchg
js
pusha
in
imul
cmp
rcr
sbb
inc
ror
xlat
fist
jo
test
dec
add
inc
jmp
and
pop
xchg
push
push
cmp
mov
mov
and
or
xor
cmps
test
dec
add
xor
add
movs
sti
sbb
adc
add
je
fisubr
xlat
in
dec
test
pop
mov
maskmovq
call
and
add
or
jmp
call
lahf
sti
push
xor
ret
add
inc
jecxz
or
cmp
adc
adc
mov
out
xor
fld
or
mov
sbb
push
add
and
xor
push
mov
daa
add
dec
pop
and
loope
and
xor
cmp
pop
xchg
into
push
es
or
pop
jge
ret
xchg
aam
fimul
pop
daa
loop
xor
inc
out
and
or
dec
adc
xchg
push
and
cmp
bound
sub
lea
and
sbb
pop
sub
sub
xor
jmp
imul
stc
push
adc
sub
mov
jo
mov
adc
and
scas
jb
pop
es
mov
and
jae
call
cmc
mov
fisttp
dec
or
inc
and
cmps
outs
movs
cli
jmp
push
hlt
cmp
rol
inc
and
xchg
retf
pusha
mov
jbe
std
popf
nop
ins
xchg
xchg
adc
test
movups
stos
mov
sub
or
push
sub
lds
mov
add
mov
xor
pop
push
and
call
arpl
test
pop
xor
mov
mov
les
xchg
push
xchg
dec
nop
xchg
mov
push
loopne
inc
cld
lock
xchg
retf
gs
sar
lahf
out
cwde
ret
hlt
add
adc
jns
xchg
add
push
imul
xor
shl
in
loopne
mov
fcom
sbb
sub
or
dec
or
movs
in
push
mov
push
mov
add
repz
xchg
test
mov
std
cwde
push
jns
xchg
ins
or
mov
in
mov
push
xor
ss
clc
dec
fwait
cld
adc
mov
neg
jno
cmp
cdq
sub
inc
dec
jbe
fs
mov
push
add
(bad)
in
dec
add
test
sub
add
fimul
shl
sub
push
xor
add
add
stos
lds
pop
sub
sub
pop
sbb
inc
add
push
inc
xchg
(bad)
fnstcw
sub
xor
lock
test
dec
je
push
je
and
inc
or
mov
(bad)
das
call
xor
and
addr16
cs
std
or
xchg
dec
sub
je
retf
adc
add
js
rol
cmps
push
lds
div
movs
dec
ret
or
lahf
cwde
inc
adc
adc
and
push
inc
pop
push
inc
mov
add
repz
test
cmp
mov
add
jmp
add
add
sub
push
and
in
inc
pop
push
sbb
or
call
ret
pop
push
mov
cmp
sbb
(bad)
out
xor
pop
cld
and
arpl
ds
leave
mov
ja
ins
mov
inc
inc
pusha
add
cmp
mov
call
xchg
jmp
or
arpl
inc
or
jno
aam
inc
mov
mov
pusha
mov
cmp
add
add
push
ficomp
pop
push
add
add
inc
int
sbb
and
ss
out
lock
ins
fcomi
ins
mov
in
dec
rcl
jne
or
xchg
mov
ins
push
dec
mov
pop
dec
add
mov
out
xchg
push
dec
pop
test
pop
call
(bad)
add
mov
or
xchg
mov
or
cmp
mov
cmp
je
mov
sub
push
or
mov
mov
dec
xchg
jl
or
mov
rcr
push
or
add
dec
icebp
pop
add
mov
mov
pop
not
add
(bad)
sti
add
test
call
lldt
rcr
sahf
call
mov
lods
shl
(bad)
xchg
sbb
push
popa
or
test
fucomip
dec
sbb
fdiv
hlt
inc
test
add
xchg
cs
pop
movs
shld
shl
xor
adc
push
adc
scas
mov
and
call
test
adc
add
hlt
dec
lods
nop
xor
adc
aam
inc
sub
rcr
fwait
hlt
aam
fcomp
xchg
sbb
cmc
mov
xor
pushf
inc
push
push
nop
or
scas
jbe
shr
icebp
xor
pop
and
out
aam
xlat
ss
push
push
out
mov
adc
inc
pop
ret
cmps
cmps
push
adc
xchg
xor
hlt
clc
or
outs
mov
push
sahf
jmp
nop
push
pop
push
sbb
sbb
inc
test
mov
adc
sbb
cmp
cmps
data16
lods
fstp
iret
jecxz
cdq
jmp
mov
ret
cmp
push
out
push
stos
pop
or
hlt
adc
cmps
jne
ins
xchg
jne
retf
add
ret
shl
xor
add
push
inc
xor
jl
add
imul
adc
or
xor
xor
arpl
movs
or
icebp
mov
inc
movs
mov
inc
and
xchg
hlt
cld
cmp
cmp
mov
push
cli
or
aam
(bad)
lock
inc
sahf
and
(bad)
sbb
cmp
sub
lahf
dec
push
push
lods
jl
mov
test
les
lds
xchg
pop
sbb
push
sbb
(bad)
pushf
lods
inc
xor
jbe
aam
push
mov
sbb
or
bound
pusha
jb
(bad)
leave
mov
add
adc
jle
sahf
sub
push
mov
lods
loop
rol
imul
push
addr16
inc
push
ret
scas
movs
cmp
inc
and
rol
inc
inc
lods
out
jl
repnz
in
loopne
and
aam
push
nop
xchg
or
jmp
aad
fiadd
push
loopne
lock
jmp
add
or
or
push
es
mov
fcmovb
push
add
in
mov
imul
xchg
jo
pop
pop
adc
push
adc
adc
dec
leave
and
or
call
ins
lods
cmp
popf
fcomp
movs
dec
xor
or
pop
inc
add
fadd
push
test
mov
and
iret
mov
mov
and
inc
sbb
ficomp
pop
adc
pop
movs
loopne
add
rcr
pop
jmp
and
inc
push
sub
ins
aaa
add
js
cmp
sub
mov
inc
jp
or
adc
xchg
call
mov
mov
inc
fstp
arpl
mov
in
sub
mov
xchg
or
pop
test
push
test
push
clc
mov
cdq
inc
or
pop
pop
push
hlt
arpl
retf
and
adc
jp
in
fcomp
lods
sub
in
shl
addr16
add
sub
mov
fwait
sbb
or
push
lock
push
ret
xor
inc
mov
mov
push
push
push
or
sbb
mov
xor
jo
xchg
adc
lods
ret
mov
stos
fnsave
sub
sub
test
lea
enter
push
jae
pushf
jl
inc
add
in
adc
xchg
lods
jg
cmp
call
mov
int3
out
sub
push
and
cld
imul
loopne
mov
jle
sub
adc
push
push
out
pop
jnp
jnp
or
adc
push
xor
pop
inc
add
lock
add
cwde
mov
rol
push
push
inc
imul
pop
popf
or
or
lds
rcr
shl
inc
add
adc
(bad)
fstp
inc
loopne
adc
adc
dec
mov
lock
scas
stos
mov
dec
mov
pop
sti
rcl
movs
push
mov
cmp
xchg
adc
mov
adc
das
jecxz
xor
adc
adc
(bad)
jb
mov
push
(bad)
or
inc
mov
loope
dec
pop
mov
push
(bad)
jmp
adc
mov
in
adc
nop
mov
cmps
add
or
xor
jnp
xchg
stc
push
pop
sbb
mov
or
loopne
push
or
xor
inc
or
rol
lods
dec
push
and
ret
cli
js
mov
ret
stos
xor
dec
ret
xchg
cmps
ja
sbb
mov
cmp
es
jno
(bad)
adc
rcr
outs
jns
mov
add
pop
leave
xchg
fisttp
xchg
jl
xchg
jl
adc
and
sbb
cld
lods
rol
pusha
js
push
cmp
pop
jmp
push
mov
ret
adc
mov
(bad)
test
sub
(bad)
cmp
jmp
inc
aad
dec
clc
dec
nop
mov
ds
jmp
nop
jbe
push
pop
jne
dec
ins
dec
inc
adc
jl
out
call
ins
jge
ins
adc
cmp
or
sub
mov
sti
(bad)
inc
xor
clc
and
daa
or
jae
or
sbb
jne
and
dec
out
add
into
push
pop
or
test
or
pop
pop
clc
push
mov
stos
cmp
cmp
loopne
mov
add
fld
mov
movs
adc
je
sub
xor
inc
ret
mov
and
dec
les
sbb
adc
xchg
or
(bad)
and
and
(bad)
sbb
sbb
test
aas
movs
push
movs
iret
popf
mov
sub
push
xor
sub
adc
lock
ja
(bad)
mov
xor
pop
push
cmp
pop
xor
add
clc
add
fwait
loope
jg
jne
xor
lods
fmul
ds
sbb
pop
and
xor
xchg
and
cmps
int3
sbb
xchg
xchg
push
das
dec
or
inc
jb
sub
xchg
ffreep
cmp
jne
fdiv
data16
pop
cmp
adc
push
add
bound
int
dec
sbb
ret
js
xor
jb
scas
sbb
cmp
clc
add
push
out
mov
push
dec
inc
mov
mov
add
pop
push
imul
dec
es
jo
push
inc
jp
ss
sbb
aas
mov
cmovns
mov
sbb
add
aam
scas
or
mov
add
xchg
daa
call
dec
dec
fwait
xchg
pop
cmp
iret
and
(bad)
sbb
add
call
je
and
jp
(bad)
xchg
or
adc
mov
cmp
mov
mov
pop
or
cwde
jmp
pusha
or
add
xor
push
out
jle
sbb
add
cmp
mov
ss
or
enter
add
push
mov
inc
xchg
and
inc
sub
in
lds
and
inc
push
in
(bad)
and
test
xchg
and
xor
popa
jb
popa
and
sbb
popa
loope
jg
jns
xor
push
mov
aaa
sub
ror
xor
imul
nop
cmc
(bad)
sub
jo
out
sbb
cmp
dec
sub
mov
and
push
jbe
xchg
mov
jno
dec
jns
cwde
ja
pop
inc
or
xor
mov
push
fadd
movs
push
sub
dec
ret
or
sbb
mov
imul
pop
aas
adc
cmps
pop
add
xchg
retf
mov
xor
jo
(bad)
xchg
sub
(bad)
mov
pop
dec
xchg
mov
cwde
xchg
ret
adc
adc
xchg
retf
or
sti
mov
mov
pop
das
shl
lock
pop
fcmovnb
in
or
add
daa
mov
outs
pusha
ret
jmp
mov
div
pusha
sti
nop
mov
add
into
mov
jno
pop
add
std
adc
std
sahf
into
jmp
and
aaa
push
xchg
jl
xchg
pop
adc
js
xor
stos
adc
pop
jae
pop
in
xor
mov
daa
inc
mov
loop
outs
sub
mov
fs
pop
pushf
(bad)
sti
sbb
retf
add
mov
mov
in
jg
ins
imul
add
cmp
jge
dec
sub
push
xor
and
and
pop
shr
addr16
adc
sbb
dec
fsub
fist
dec
add
nop
lea
aaa
je
adc
and
adc
pushf
nop
push
imul
adc
pop
test
sbb
xchg
mov
add
sbb
mov
out
ffreep
(bad)
push
pusha
leave
xor
or
jae
jg
sbb
ins
hlt
fld
gs
jle
or
and
sub
cwde
and
adc
xchg
data16
push
or
test
sub
enter
add
scas
nop
ret
in
cwde
(bad)
mov
shl
(bad)
es
adc
dec
add
add
sbb
or
add
sub
sub
mov
or
push
js
(bad)
dec
and
dec
test
push
je
ins
(bad)
imul
sbb
sub
ins
push
bound
das
pop
sbb
push
xor
loope
xchg
dec
push
pop
xor
enter
addr16
cld
xchg
inc
cmp
add
sbb
inc
js
jl
xchg
out
stos
add
jnp
ja
lods
in
leave
pop
add
mov
popa
mov
gs
mov
add
aad
add
inc
inc
int
in
and
dec
stos
neg
or
mov
je
and
push
sbb
dec
adc
add
or
pop
idiv
rol
rcr
inc
or
shl
inc
and
test
xchg
or
or
xor
or
cmp
movs
loopne
lods
jmp
lahf
jne
data16
loope
push
cwde
mov
ins
adc
fwait
mov
call
adc
rcl
jmp
pop
(bad)
popa
into
adc
mov
jecxz
rol
dec
adc
mov
stc
jo
or
call
arpl
out
out
sbb
inc
lea
sbb
je
dec
pop
jmp
cmp
jmp
xor
jp
test
and
repz
adc
mov
dec
fadd
inc
sbb
inc
and
sbb
push
rol
or
cmps
loope
mov
hlt
add
lock
sbb
in
cld
clc
(bad)
fstp
fdiv
mov
or
mov
or
or
push
or
sbb
sbb
or
push
sahf
pop
add
shl
addr16
sar
and
and
mov
outs
and
push
inc
test
push
dec
dec
rcr
xlat
aaa
and
adc
scas
jmp
addr16
nop
pop
inc
sbb
add
dec
inc
sbb
sub
outs
fsub
mov
mov
fsubr
pop
add
xor
push
aas
or
js
popa
dec
outs
aas
(bad)
jg
jb
push
jl
les
lods
ins
and
pop
invd
pop
repnz
sub
mov
or
and
cs
push
or
fbstp
and
jge
jne
jns
pop
and
pop
and
stos
add
sub
mov
inc
sbb
(bad)
addr16
pop
mov
sbb
fbld
add
mov
xchg
and
inc
or
cmp
mov
add
push
sbb
dec
pop
ins
xlat
push
mov
test
adc
sbb
and
mov
xor
mov
out
and
push
add
xlat
int
ror
adc
adc
mov
xor
or
adc
or
(bad)
aas
xchg
add
ret
or
add
lds
mov
(bad)
dec
(bad)
and
sub
dec
dec
mov
sub
cmp
inc
mov
or
pop
inc
and
and
nop
sub
pop
adc
std
dec
adc
fs
(bad)
mov
and
cmp
add
aaa
dec
xor
xchg
aas
fadd
in
xchg
and
xor
stc
nop
mov
add
xchg
xchg
and
test
mov
ins
stos
pop
xchg
aaa
pop
push
dec
mov
push
adc
lds
push
or
sbb
and
adc
adc
add
pop
inc
rcr
pop
imul
sbb
aas
in
nop
(bad)
sub
fcom
fnstcw
ss
pop
sahf
out
jno
(bad)
ds
xchg
pop
arpl
out
ins
ja
push
inc
rol
mov
les
pop
add
xlat
mov
add
aas
pop
push
or
push
inc
jge
add
gs
cdq
xor
ins
xlat
leave
inc
inc
add
imul
pop
clc
cmp
push
push
cmps
mov
xlat
movs
je
adc
adc
mov
cmp
or
mov
mov
es
and
dec
(bad)
fcomp
or
daa
lods
dec
fdiv
sub
daa
mov
sbb
shl
add
push
push
push
cmp
jne
mov
mov
call
(bad)
and
ins
mov
nop
xchg
xchg
push
scas
xchg
xchg
and
inc
pop
mov
mov
mov
mov
lea
add
jecxz
push
xchg
cwde
rcl
int3
lods
xchg
and
popa
test
cld
ins
mov
push
inc
(bad)
fild
and
xor
sub
pop
ret
icebp
pop
fnstenv
inc
sbb
pop
lock
sub
cld
add
cwde
fstp
aas
test
fidiv
inc
iret
or
push
add
cmps
pop
or
add
ret
add
and
xchg
add
popa
inc
adc
inc
push
into
and
fcomi
pop
xor
push
pop
enter
or
inc
pop
enter
les
icebp
jb
into
add
jge
mov
lea
gs
cmps
mov
call
retf
lods
gs
dec
in
or
cmp
push
scas
enter
push
fcmovne
movs
push
enter
outs
fdivr
sbb
inc
jae
aaa
mov
frstor
inc
loope
dec
pop
test
ror
addr16
sub
xor
and
outs
fmul
fnsave
sbb
fistp
mov
adc
or
mov
mov
scas
dec
jb
dec
push
mov
dec
ror
push
and
sub
cmps
push
add
and
pop
fwait
xchg
repz
mov
cmps
and
test
ins
jns
lds
inc
clc
push
ss
dec
inc
int3
push
dec
sbb
pop
lds
push
push
imul
sbb
ficom
test
test
jbe
fist
dec
(bad)
ret
sbb
xchg
push
fs
sub
inc
or
or
xor
or
cmovle
stos
mov
mov
aam
adc
aad
(bad)
cmp
cmp
sbb
pop
(bad)
cmp
hlt
mov
cs
mov
imul
iret
ss
fld
rcr
cmp
cs
fcomp
pusha
add
mov
bound
ficomp
add
jns
rep
jecxz
push
fcmovnbe
adc
sub
pop
xor
dec
aam
add
fldenv
dec
rcr
je
mov
mov
cmp
push
xor
ja
inc
add
add
shl
hlt
pop
ja
xchg
inc
jae
or
inc
add
add
pop
add
push
inc
cmp
enter
and
movs
inc
jb
add
nop
mov
fs
shl
jl
loopne
lahf
dec
and
mov
mov
sbb
fcomp
xchg
mov
rcr
aam
or
fidivr
(bad)
loopne
xchg
mov
xchg
pop
sbb
(bad)
test
add
jmp
sub
and
xchg
push
pop
dec
in
push
mov
or
movs
mov
repnz
inc
mov
loop
aad
cwde
outs
fcmovnb
int
pop
and
dec
cmps
mov
mov
ror
pusha
dec
add
fwait
and
jle
sub
sahf
test
cmp
lock
fst
jge
imul
idiv
add
add
add
and
adc
movs
mov
and
les
dec
or
sbb
test
dec
dec
leave
sbb
leave
ror
dec
cld
shr
aaa
rcl
fisub
jnp
dec
inc
dec
xchg
inc
pop
or
or
cmp
xor
inc
test
add
jno
or
adc
enter
jecxz
sub
shl
dec
icebp
dec
pop
movs
mov
sbb
inc
fisubr
rol
xor
xor
inc
pop
fadd
adc
shr
test
dec
cmps
daa
sbb
cmp
add
dec
repz
clc
sub
cmp
imul
sub
pop
aad
adc
ss
stc
pop
enter
mov
sbb
or
jg
nop
and
xchg
sbb
xor
xchg
or
and
sub
mov
and
in
in
ss
outs
xor
push
push
pop
test
adc
cmps
or
or
sub
sbb
dec
pop
add
in
sub
adc
cld
cmp
mov
push
sub
jmp
sub
and
push
jge
dec
dec
daa
push
mov
and
loop
call
jno
cmp
mov
(bad)
in
pop
ret
pop
aam
xor
xlat
aaa
adc
aas
or
add
cmp
or
inc
mov
mov
cmp
add
add
pop
mov
add
into
add
push
pop
les
jnp
xchg
push
enter
out
das
jbe
mov
mov
xor
enter
adc
sbb
dec
cmps
adc
sbb
cmps
aam
push
jns
imul
(bad)
fdivr
push
adc
inc
adc
mov
xchg
aaa
mov
mov
jecxz
movs
(bad)
stos
or
dec
adc
xor
dec
retf
adc
pop
or
outs
pusha
test
mov
ss
inc
cmp
sar
mov
xlat
cmps
adc
push
test
or
or
int3
and
out
jne
clc
inc
nop
sbb
outs
loope
sub
xchg
push
pushf
pop
mov
push
call
jnp
dec
jl
test
fld
push
or
sbb
fs
mov
sbb
gs
cmps
test
inc
(bad)
in
cmp
in
push
mov
jl
in
push
mov
cs
add
xor
jne
(bad)
adc
unpcklps
cmp
and
imul
inc
adc
jnp
push
jo
ins
or
les
push
jmp
add
clc
ret
ds
es
cld
mov
push
shl
inc
ins
add
pusha
aaa
leave
jmp
add
add
add
fdivp
xchg
hlt
out
dec
enter
push
cmps
lods
inc
movs
popf
div
bound
inc
jbe
add
es
and
in
jmp
shr
nop
inc
dec
test
pusha
jmp
push
dec
nop
inc
xor
add
jmp
add
xor
arpl
repnz
add
movs
mov
bound
mov
cmp
stos
lea
clc
sub
mov
push
mov
mov
pop
stc
mov
pop
(bad)
dec
fs
mov
or
(bad)
sub
adc
or
add
inc
or
jne
push
or
div
imul
in
or
je
sub
gs
xchg
test
or
sub
mov
cmp
jmp
jb
movs
ss
cmp
sysret
add
xor
sub
mov
mov
adc
cmps
sub
out
pop
rcl
iret
lds
mov
jmp
push
pusha
and
pop
scas
out
shl
aad
mov
sub
pop
xor
mov
add
ret
inc
xchg
dec
pop
or
xor
push
add
add
fucomp
movs
pop
daa
push
pusha
adc
xor
pop
xor
fist
pushf
add
adc
in
dec
add
inc
shr
push
mov
stos
pop
rcr
pusha
test
movs
ror
(bad)
es
xor
loope
(bad)
leave
dec
lock
ins
xor
xchg
inc
push
lock
(bad)
xor
xchg
inc
call
nop
dec
call
jp
cmps
push
sub
or
fcom
sub
cmp
adc
pop
outs
dec
call
push
push
retf
pushf
cwde
or
xor
gs
mov
add
dec
lods
das
test
in
aas
xor
or
inc
pusha
mov
xchg
push
movs
scas
mov
and
xor
pop
xor
fisttp
mov
inc
fnstsw
mov
or
hlt
push
in
jae
and
loopne
cmp
sahf
retf
enter
sub
xor
pushf
gs
dec
in
imul
test
pop
outs
iret
sbb
and
ins
test
sub
add
and
inc
fmul
enter
inc
dec
dec
stc
pop
jns
and
push
rcr
jae
fs
mov
pop
inc
lods
sti
adc
and
dec
and
and
add
mov
xor
sahf
nop
dec
mov
retf
in
pop
loopne
cmp
push
mov
xor
push
stc
push
stc
pop
in
sbb
sbb
xchg
pop
and
sub
and
inc
enter
dec
dec
pop
pop
jb
in
push
push
pusha
fs
mov
movs
out
xchg
ins
or
or
push
popa
sbb
jl
lock
je
pushf
hlt
mov
inc
xlat
jmp
fadd
call
cmp
ins
and
push
xor
dec
call
adc
or
cmc
push
mov
cmc
icebp
jl
xchg
push
jb
test
xchg
pop
mov
nop
cmps
out
neg
xchg
or
pop
imul
xor
pop
stc
mov
cmp
and
enter
mov
nop
lea
adc
sub
(bad)
or
pop
clc
add
inc
pusha
mov
leave
add
cmps
inc
push
push
or
and
scas
ja
pop
dec
cmp
in
sti
pop
or
dec
pusha
jmp
xchg
sbb
adc
sub
xchg
inc
enter
pop
push
pop
dec
clc
loopne
push
dec
push
and
enter
shl
pop
iret
clc
pop
and
pop
and
mov
sub
mov
and
pop
and
nop
lods
xor
lods
fisubr
(bad)
mul
(bad)
dec
add
fs
fidiv
mov
add
push
pop
setns
sti
xor
out
shl
aas
cmp
jle
dec
mov
jne
or
push
loop
mov
xor
and
test
les
lods
aam
sub
cs
xor
xor
mov
ja
adc
xchg
sbb
mov
and
sbb
pop
inc
xchg
mov
nop
sar
lods
(bad)
push
adc
cmp
add
ret
pop
push
push
inc
clc
pop
or
clc
add
lods
pop
nop
jnp
test
repz
hlt
add
and
xchg
add
push
xor
push
inc
sbb
or
loopne
xchg
das
push
push
push
and
das
nop
sbb
mov
inc
jge
(bad)
loopne
dec
mov
jae
adc
ins
shl
es
mov
in
sbb
ins
mov
adc
mov
mov
imul
sbb
(bad)
hlt
pop
mov
rcl
ret
inc
dec
inc
inc
pop
or
and
inc
js
movs
test
xlat
add
mov
iret
inc
fld
cld
scas
cld
adc
or
nop
or
jle
mov
es
add
iret
mov
pop
pop
daa
push
aaa
push
add
add
xor
or
sbb
jbe
fdivp
xchg
(bad)
(bad)
fidivr
in
enter
or
add
xor
mov
pop
nop
and
mov
add
es
and
dec
add
sbb
jl
push
cmps
add
adc
cmp
mov
cld
sbb
fcom
and
adc
push
pop
dec
xlat
adc
pop
repnz
popa
jae
clc
idiv
sbb
inc
or
or
bnd
push
inc
add
dec
push
mov
add
leave
mov
in
inc
imul
jne
repnz
ficom
add
sub
ret
add
retf
and
adc
fcmovnu
and
xchg
not
loope
movs
xor
jo
je
popf
cdq
call
xchg
daa
daa
(bad)
(bad)
icebp
xchg
xchg
xchg
xchg
repnz
cmc
xchg
xchg
xchg
xchg
div
clc
stc
xchg
xchg
xchg
xchg
cli
sti
cld
std
loopne
or
add
movs
pop
dec
loope
adc
push
or
sub
adc
sbb
or
adc
jae
mov
adc
cmc
add
ret
or
test
inc
pop
fldcw
movs
xor
push
or
mov
jae
sbb
xor
ja
imul
inc
(bad)
or
fidivr
mov
push
xor
rol
push
retf
sub
or
sub
mov
(bad)
ss
fldpi
adc
cld
inc
enter
jl
and
adc
inc
out
movs
sub
xchg
int3
nop
daa
les
add
inc
dec
ret
ret
sub
sbb
ins
aaa
or
ja
fwait
les
or
pop
jmp
(bad)
mov
add
lods
lea
sbb
aas
jg
mov
xchg
or
cmps
or
jmp
and
jae
inc
mov
outs
pop
jae
arpl
pop
imul
stc
push
shl
push
sub
adc
and
inc
retf
retf
sub
inc
ret
and
sub
and
and
cs
test
push
sub
scas
mov
dec
or
push
sub
push
adc
mov
adc
cmp
jmp
add
sub
xlat
push
mov
xor
lahf
adc
and
adc
out
xchg
lock
pop
hlt
mov
cmps
mov
ins
add
hlt
iret
ret
data16
pop
pop
push
test
inc
adc
(bad)
in
or
dec
test
xchg
or
and
mov
inc
sbb
stc
popa
inc
fild
inc
mov
mov
push
adc
pop
(bad)
scas
add
adc
lds
add
mov
and
xor
adc
clc
aam
rcr
and
clc
push
mov
shr
jmp
xor
cwde
ja
and
pushf
retf
add
add
adc
inc
and
adc
js
inc
adc
push
cld
adc
cmp
out
sbb
out
sar
jle
and
mov
and
or
jbe
xor
or
sub
mov
popa
retf
and
cmp
pop
mov
cmps
inc
das
scas
mov
pop
adc
add
pop
pop
shl
cmp
add
ja
jge
inc
push
xor
ins
mov
or
cwde
sub
jmp
xchg
add
dec
mov
cmp
sbb
outs
adc
aaa
daa
xor
mov
shl
mov
inc
jmp
and
and
push
rcl
sub
mov
add
jmp
push
adc
adc
fwait
(bad)
dec
and
jns
or
pop
add
xor
imul
push
and
call
xchg
into
sub
outs
xor
inc
bound
inc
addr16
push
addr16
test
sub
fld
ror
push
push
push
out
lock
aam
lock
mov
pop
jmp
xor
adc
inc
inc
inc
sbb
jo
nop
or
and
inc
dec
jl
pop
inc
or
call
push
test
jge
rcl
and
test
xor
push
cmps
jl
in
mov
fsubr
jnp
jne
jae
push
js
stc
pop
nop
adc
pushf
or
push
push
fdivr
popf
daa
pop
leave
sbb
dec
push
dec
retf
or
fst
loop
adc
mov
and
add
pop
loop
inc
adc
out
adc
mov
outs
push
and
popa
sbb
(bad)
call
and
imul
and
outs
dec
ins
mov
inc
push
sub
sub
dec
outs
lahf
push
push
sbb
outs
xor
(bad)
mov
cmp
ja
ins
add
movd
jne
data16
push
add
ret
ins
call
test
adc
add
push
das
and
add
movs
lods
dec
ss
xor
dec
add
or
call
cmp
lea
inc
sar
fwait
movs
test
fild
scas
pop
mov
pop
add
mov
mov
sbb
pop
xor
cmp
or
mov
scas
popf
shr
mov
xor
scas
adc
push
call
nop
xor
lods
sahf
imul
cdq
or
icebp
inc
in
xor
dec
jecxz
jmp
push
dec
add
sbb
pop
sub
adc
add
jb
jl
aaa
push
outs
sub
cmp
retf
xor
es
imul
xchg
shl
mov
dec
daa
dec
iret
and
add
(bad)
ja
mov
je
mov
aam
adc
and
cli
mov
inc
xlat
add
inc
jl
sbb
cli
pop
shr
sbb
das
fbld
loopne
adc
dec
aam
add
cmc
inc
adc
or
adc
xchg
push
repnz
adc
mov
or
outs
inc
xchg
es
pop
add
out
nop
addr16
(bad)
jnp
rcl
je
and
inc
ret
sub
and
gs
dec
pop
fisub
mov
sub
mov
syscall
push
js
dec
cld
sbb
push
arpl
inc
cmp
or
jo
sbb
clc
add
and
cmc
adc
stc
leave
inc
popa
loopne
in
adc
xchg
or
sbb
aad
adc
icebp
jne
adc
xor
dec
nop
addr16
add
jmp
(bad)
orps
dec
cld
sub
iret
fdivr
cmps
mov
sbb
rol
hlt
mov
push
pop
pop
push
fwait
ret
lds
pop
mov
dec
push
jns
mov
lock
dec
imul
lock
mov
ins
push
leave
test
jne
sar
sbb
xor
mov
stc
pop
mov
lods
xor
adc
adc
pop
add
sbb
sub
mov
mov
pop
adc
mov
out
mov
test
movs
cs
mov
dec
sbb
jge
int3
jne
ins
and
sbb
or
jnp
outs
xor
scas
jne
mov
push
mov
jae
sub
dec
jecxz
push
add
clc
in
xchg
jnp
add
fstp
mov
xchg
dec
xchg
xchg
mov
mov
cmp
(bad)
adc
mov
fild
add
popa
sub
inc
in
sbb
ins
pop
pusha
xor
int3
pop
repnz
add
lods
or
stos
and
add
retf
(bad)
clc
mov
mov
jne
mov
je
push
adc
pop
sub
pop
out
dec
dec
pop
add
lahf
add
xchg
adc
cmp
mov
or
and
inc
dec
push
add
iret
adc
add
(bad)
fcom
sbb
inc
or
xchg
sbb
sbb
out
push
push
push
test
mov
pop
sbb
inc
dec
push
xchg
push
leave
nop
test
mov
push
(bad)
sbb
push
(bad)
rol
es
mov
cmp
pop
inc
pop
cmp
rcl
pop
inc
jb
jns
sbb
mov
mov
or
sbb
mov
add
push
mov
xchg
dec
ss
sbb
je
inc
dec
or
push
enter
sub
push
inc
daa
sbb
jl
push
jle
in
dec
and
aam
pop
mov
mov
push
or
pop
or
adc
add
aas
or
push
inc
add
dec
hlt
dec
pop
iret
jb
inc
not
or
cmps
nop
pop
inc
sbb
cmp
lock
sub
inc
adc
rcr
pop
add
mov
mov
das
adc
dec
sbb
and
inc
xchg
push
push
mov
aaa
push
adc
or
jno
lock
add
cli
sahf
mov
jle
dec
imul
sub
push
jno
and
pop
adc
sbb
jle
retf
inc
or
and
adc
push
sbb
and
push
movhps
sti
cmp
cs
(bad)
cmp
adc
mov
mov
(bad)
adc
lds
adc
push
push
sub
mov
arpl
pusha
xchg
fcomp
ins
jbe
inc
pop
ins
pop
push
cmps
sub
es
mov
lds
lods
mov
sbb
add
add
sub
ins
mov
in
adc
aas
add
push
or
(bad)
arpl
gs
fwait
ja
dec
test
pusha
imul
xor
dec
push
xor
mov
mov
cmps
fadd
mov
adc
sbb
stos
cwde
mov
adc
pop
push
or
ror
pop
xchg
scas
in
dec
int
adc
mov
add
xor
mov
jae
aas
in
movs
pop
cmps
mov
faddp
dec
add
or
js
cdq
dec
add
imul
es
push
das
or
sub
jmp
cmovae
cmp
xchg
ss
push
push
ss
mov
xchg
ficom
arpl
gs
and
sub
aad
shr
lea
clc
and
jge
lea
sbb
ror
daa
or
sub
adc
mov
scas
add
add
adc
hlt
jbe
jnp
jge
mov
xor
lock
or
imul
sbb
jg
aam
ficomp
(bad)
mov
mov
daa
cwde
repz
or
call
sti
movs
sub
xchg
and
aaa
repz
ins
enter
xrelease
ret
xchg
loop
das
aas
mov
cmps
add
mov
(bad)
sub
push
and
mov
push
push
ja
adc
jle
imul
lds
jecxz
popf
pop
sub
movups
pop
mov
sub
inc
xchg
sbb
popa
popa
fs
add
inc
adc
outs
adc
stc
pop
jge
js
jg
daa
mov
dec
dec
mov
jae
jge
inc
or
xor
jmp
inc
adc
ja
push
push
adc
push
mov
ret
cmp
pop
jns
inc
shl
sub
(bad)
inc
in
sbb
jb
cld
adc
imul
xchg
or
jl
fwait
dec
pop
push
sub
enter
and
inc
jge
add
pop
add
fisubr
add
(bad)
and
or
and
stos
or
dec
sbb
aad
add
cmp
mov
retf
mov
mov
and
ss
cdq
ins
lods
cmps
sub
sub
cmp
xchg
and
dec
sahf
xchg
jae
inc
in
ja
push
in
jp
mov
add
shl
xor
jecxz
jnp
add
sub
loopne
push
sub
add
lsl
dec
mov
in
or
cmp
cmp
ret
shl
or
add
xchg
fisub
dec
xchg
mov
mov
aad
fist
cmp
xor
push
and
dec
movs
dec
icebp
xor
inc
outs
iret
idiv
clc
mov
inc
loop
std
daa
dec
mov
pop
adc
or
adc
cld
or
or
add
iret
pop
mov
cld
and
mov
xor
inc
or
pop
xor
cmp
sar
add
add
cmp
jb
data16
or
test
lea
pop
push
rol
and
(bad)
es
push
push
jb
mov
(bad)
clc
pop
add
clc
or
or
mov
mov
pushf
out
sub
mov
ds
xchg
fsubr
enter
xchg
jge
ret
mov
mov
add
sub
jecxz
sub
mov
(bad)
in
sub
add
jl
dec
cld
dec
push
sub
cmp
and
mov
mov
clc
push
pop
pop
add
jmp
xchg
scas
jmp
repz
inc
adc
fcomp
xor
push
lods
cmp
or
xchg
sbb
push
and
lock
add
push
iret
dec
sub
push
loopne
scas
rol
dec
and
or
pop
dec
out
sub
inc
stos
pop
ins
cmps
in
add
mov
xchg
push
mov
and
mov
fnstenv
cdq
adc
shl
sub
pop
leave
xchg
mov
mov
jmp
or
or
fs
adc
dec
retf
mov
mov
(bad)
inc
jecxz
call
test
sub
add
in
push
dec
xchg
inc
in
cmps
or
xchg
dec
adc
nop
xchg
xor
sub
nop
daa
add
dec
push
or
nop
pusha
popf
out
aas
xor
mov
mov
cmp
sub
xchg
sub
dec
mov
cmps
push
daa
sub
pop
jg
outs
or
loope
and
and
loopne
ficomp
jb
mov
jne
(bad)
pop
rol
mov
pop
int3
dec
pop
add
jmp
(bad)
xchg
pop
test
lock
bound
cmp
jbe
adc
cwde
push
pop
push
cmp
nop
out
push
jo
call
stc
cmp
stos
lock
xor
sbb
inc
ss
jecxz
call
cmc
inc
jp
pop
dec
pop
outs
nop
mov
sub
cmp
jne
mov
cmp
cld
or
sbb
jl
adc
test
icebp
dec
outs
inc
(bad)
in
pop
jo
or
ja
aaa
pusha
cwde
rol
pop
cmps
ret
add
popa
inc
jnp
mov
or
sub
push
sbb
inc
cmp
pop
or
sub
sbb
(bad)
adc
outs
sub
sbb
jecxz
adc
jg
test
in
sub
(bad)
or
xchg
push
adc
fldz
add
cmp
imul
add
call
adc
shl
push
clc
mov
and
push
(bad)
xor
ret
hlt
mov
gs
repz
mov
std
push
cld
push
lods
add
aas
das
nop
add
mov
test
push
fisubr
lea
test
(bad)
fld
xor
xchg
sahf
ds
xor
cmp
jae
mov
bound
add
sub
sub
mov
(bad)
jne
jecxz
test
ret
or
sbb
adc
fdiv
out
and
xchg
ret
sbb
and
add
lock
ret
and
pusha
xor
jnp
adc
push
add
push
mov
test
adc
jmp
lods
in
xor
and
aad
dec
or
adc
sub
daa
push
mov
cwde
sub
sub
nop
xor
xor
or
clc
xchg
mov
ins
add
add
or
jb
sub
fcom
test
inc
int3
and
sub
mov
fsubr
dec
das
pop
sub
leave
sub
jg
movs
in
dec
or
or
push
popa
and
test
out
shl
aam
bound
mov
fst
pop
xlat
mov
ins
in
or
sbb
nop
push
imul
dec
push
push
js
sar
and
(bad)
jmp
addr16
push
call
pop
jle
mov
sub
inc
js
sbb
arpl
or
adc
mov
gs
mov
or
xchg
mov
lock
pop
movs
mov
popa
xchg
xchg
ret
dec
movs
push
enter
dec
fwait
mov
mov
add
mov
loop
inc
push
inc
fcmovb
mov
cmp
loope
xchg
inc
sub
cdq
outs
outs
mov
or
pop
adc
pusha
pop
rol
sbb
cmps
push
mov
daa
xor
aaa
ins
mov
mov
sub
outs
add
ror
cmp
mov
sbb
ffree
or
imul
ins
adc
outs
push
aaa
push
arpl
rcl
or
xchg
xor
scas
pushf
adc
cmp
cld
sbb
dec
cmps
or
add
das
lds
(bad)
call
inc
ins
inc
mov
pusha
(bad)
xchg
mov
(bad)
and
outs
mov
lods
scas
fmul
pop
mov
lods
ins
daa
cli
push
cmc
inc
push
aam
ret
imul
sbb
loope
pop
(bad)
ins
test
jg
mov
sti
mov
cs
sbb
jl
mov
add
cs
mov
inc
sahf
inc
pop
and
sbb
pop
leave
jae
push
inc
sbb
ret
jmp
dec
jbe
dec
fwait
retf
and
xor
jmp
cmp
fs
and
pop
push
dec
daa
add
jl
rol
scas
mov
mov
scas
cmp
out
cmp
cmp
xor
adc
sub
adc
leave
cmc
ror
jmp
imul
call
cmp
and
add
xor
ss
push
xchg
jne
scas
jle
lea
add
std
dec
popf
test
xchg
sub
in
dec
fild
outs
mov
push
and
lahf
mov
adc
fst
inc
pop
arpl
mov
sti
jmp
test
dec
inc
inc
pop
dec
lahf
fadd
sbb
in
sbb
push
sub
ja
mov
fld
push
ja
(bad)
jne
cmc
aas
or
pusha
ja
outs
add
add
add
dec
add
xor
les
xchg
xchg
ss
rol
add
push
push
cmp
add
and
xlat
mov
sahf
cmp
arpl
ret
pop
add
les
or
and
fst
pop
sbb
sub
mov
sbb
xor
push
ja
imul
arpl
out
add
push
adc
mov
pushf
leave
and
inc
push
sbb
xchg
inc
mov
cmp
push
and
xor
sub
jnp
das
jecxz
cwde
and
pop
push
push
mov
cmp
xchg
mov
xchg
push
mov
or
pusha
cmp
adc
enter
add
std
pop
mov
pop
outs
dec
or
cmp
sbb
mov
cmp
test
and
xchg
adc
add
add
mov
mov
(bad)
pop
xchg
xchg
mov
jae
and
dec
ss
mov
push
sub
ja
push
mov
clc
fwait
retf
cmp
dec
fdivr
test
push
adc
(bad)
outs
and
mul
inc
jo
jle
jne
or
mov
pop
hlt
sub
cmp
les
cdq
int
mov
pop
jbe
hlt
adc
sar
mov
xor
je
xchg
mov
repnz
rol
mov
jns
fs
nop
ds
add
and
cmp
jmp
mov
or
inc
cmc
movs
shl
les
popa
sub
fist
cld
push
xchg
fild
test
adc
movs
movs
jne
push
mov
dec
lds
adc
push
mov
daa
mov
inc
push
dec
inc
nop
pop
xor
add
mov
xchg
add
pop
leave
xchg
adc
rcr
lods
xchg
inc
cmps
imul
add
sbb
pop
push
test
int
mov
mov
cmp
dec
add
xor
pop
dec
adc
pop
pop
pop
ror
dec
and
(bad)
jg
adc
or
pop
dec
inc
mov
dec
push
imul
mov
mov
adc
and
outs
sub
ins
das
mov
pop
fstp
cmps
clc
push
inc
mov
push
into
pop
test
clc
fadd
sub
aaa
jecxz
or
dec
and
add
movs
mov
mov
in
inc
and
adc
lods
cmp
jg
(bad)
addr16
pop
mov
and
inc
mov
nop
dec
mov
gs
icebp
test
push
inc
loopne
jae
adc
mov
push
inc
in
fld
or
sbb
mov
dec
dec
cmp
call
jle
call
cmp
sub
in
outs
test
gs
ror
test
sbb
lock
mov
cmp
mov
add
lahf
xchg
pusha
xlat
and
xlat
mul
jmp
and
push
movhps
and
mov
test
movs
or
mov
and
stos
sbb
or
aad
jb
ret
add
jle
sub
sar
lods
pop
sti
mov
inc
rcr
pop
ds
and
mov
cs
xor
lock
mov
(bad)
and
icebp
xor
push
adc
popa
test
xor
js
in
test
xchg
daa
pusha
and
lock
or
dec
loope
and
mov
test
or
rcr
or
pop
and
or
cld
and
cmps
jge
jne
je
cmp
sub
and
add
or
mov
jge
cmp
or
mov
cmps
push
loop
scas
or
ror
xchg
sbb
aaa
adc
data16
add
mov
mov
xchg
add
stos
test
jb
cmp
jl
pop
mov
jle
or
test
mov
(bad)
mov
jnp
adc
mov
xor
rol
mov
in
rol
fstp
addr16
push
aam
inc
js
xlat
test
inc
mov
adc
aam
scas
sub
adc
rcl
dec
xchg
daa
shl
ror
xor
stc
xchg
pushf
fcmovu
(bad)
cld
ja
aaa
dec
loopne
jae
mov
test
inc
push
jo
inc
pop
(bad)
push
or
pop
mov
add
dec
lea
movs
and
xchg
jl
adc
shr
iret
adc
dec
xlat
ror
xor
sbb
mov
int3
jmp
xlat
dec
cmp
xor
loope
adc
xor
add
(bad)
cld
pop
cli
or
inc
push
add
mov
test
jge
shl
mov
into
test
or
data16
mov
inc
ds
add
xchg
push
adc
sbb
inc
ins
test
sbb
shl
(bad)
adc
aaa
out
call
xor
mov
inc
ss
pop
in
add
enter
xchg
inc
fdivr
out
jp
inc
jge
in
(bad)
inc
mov
adc
pop
pusha
add
xchg
jle
jo
adc
xchg
or
loopne
jb
ins
sar
xor
add
mov
and
rol
or
pop
and
lds
mov
jge
sar
xor
add
shl
xchg
loopne
lahf
test
repnz
dec
rcr
dec
mov
repnz
pusha
dec
adc
aas
inc
adc
mov
mov
clc
adc
jne
jle
or
int3
test
jl
add
or
js
or
dec
aam
dec
ret
out
xchg
adc
xor
lods
jae
or
rol
loopne
inc
xor
les
or
push
adc
inc
xlat
stc
fucomi
mov
pop
push
outs
or
or
cmp
xlat
outs
and
lea
imul
mov
arpl
mov
mov
mov
fs
sbb
cmp
ss
or
and
imul
or
repnz
pop
jne
inc
popa
and
adc
inc
jbe
xchg
fxch
lock
mov
aad
inc
add
ret
jb
ja
add
adc
inc
inc
pop
and
pop
fdivr
or
leave
daa
sbb
dec
push
push
mov
mov
mov
(bad)
push
inc
enter
dec
nop
add
jp
iret
inc
sub
outs
dec
loope
adc
cmp
cmp
inc
dec
jne
ret
icebp
out
in
dec
adc
inc
or
push
xor
inc
or
cmp
in
sub
jmp
jbe
fcomp
inc
dec
sub
retf
and
pop
and
fdivr
push
push
inc
push
pop
in
lods
out
repnz
push
dec
add
dec
add
pop
enter
xor
ss
aaa
cmp
or
push
xor
nop
or
mov
aaa
cmp
nop
or
push
jle
repnz
inc
dec
and
icebp
dec
add
xchg
dec
dec
stos
and
enter
clc
dec
dec
lahf
inc
push
add
or
dec
push
rcl
fistp
outs
mov
push
adc
adc
jmp
adc
ffree
fs
mov
xchg
(bad)
pop
or
lods
push
jecxz
stc
das
cld
adc
add
add
add
dec
add
sbb
add
sub
or
adc
jbe
xor
dec
cs
ds
dec
push
push
cmp
aas
add
xor
popf
mov
cmp
or
fnstsw
add
sub
xor
dec
jbe
pop
nop
add
push
push
jae
jnp
dec
jp
inc
into
add
push
sbb
sub
inc
xor
cmp
push
pop
adc
inc
fld
retf
pop
mov
mov
xor
int3
mov
push
push
jb
inc
ja
sti
jnp
inc
cmp
cmp
fstp
jae
scas
sbb
ss
out
mov
dec
addr16
mov
jns
rcr
jbe
aaa
or
jb
xor
rcr
jecxz
push
xor
ror
aas
sub
push
fbstp
xor
add
fidiv
jnp
sbb
cmp
xor
jg
mov
or
cmp
imul
cmp
iret
ret
lds
pop
ja
outs
icebp
popf
rcl
add
add
fcomp
es
fwait
ret
pop
inc
jo
(bad)
pop
add
mov
pop
pop
adc
adc
push
repz
cmovp
aaa
scas
jg
mov
addr16
xchg
out
jnp
xor
ss
xor
cmps
inc
pop
xor
cmp
daa
cmp
add
jg
xor
inc
ret
js
sub
aas
retf
ret
or
push
dec
and
call
inc
inc
jae
call
dec
mov
adc
int
test
dec
out
cmps
or
mov
add
adc
jecxz
push
addr16
pop
xchg
lods
inc
ja
pop
das
sbb
clc
push
cdq
pop
dec
lock
fstp
sub
(bad)
or
sbb
xor
(bad)
adc
out
stc
push
mov
leave
inc
mov
fsub
mov
sub
adc
scas
dec
xor
add
mov
cmp
stos
gs
xor
sub
ins
call
dec
mov
cmp
jl
mov
nop
push
test
xchg
lods
cli
add
pop
or
sub
aaa
movs
or
sub
add
or
dec
jnp
inc
push
cs
inc
popf
add
or
jbe
leave
xor
dec
xor
or
jbe
out
cmp
mov
inc
mov
pop
xchg
push
mov
jmp
adc
test
sub
lea
add
mov
xchg
push
dec
add
sub
or
inc
dec
jge
add
push
addr16
xor
aas
(bad)
pop
and
pop
shl
push
dec
mov
sub
sbb
rol
out
and
pusha
mov
sub
pop
sti
xlat
or
fisubr
adc
imul
cmp
les
dec
or
mov
inc
add
push
rol
jp
sub
jbe
inc
std
pop
dec
xchg
rcl
inc
sub
into
adc
adc
pop
ss
js
jmp
and
jb
in
jbe
cmp
add
pushf
lea
ins
pop
cwde
pop
xor
mov
inc
stos
adc
nop
std
push
xchg
sub
or
sbb
(bad)
ds
arpl
mov
or
sbb
xor
fisttp
pusha
les
out
jo
push
mov
jns
out
cwde
movs
xchg
pushf
sahf
out
sahf
nop
xchg
mov
jns
jl
je
imul
push
cmp
je
cmp
push
iret
and
push
add
ds
test
or
inc
adc
test
cmps
add
rol
dec
mov
div
nop
pop
pop
repnz
repnz
pop
dec
pop
pusha
dec
movs
xchg
cmp
inc
popa
dec
pop
rcl
jle
jo
jns
repz
test
push
adc
dec
bound
movs
xor
arpl
or
sti
inc
lods
dec
mov
(bad)
ds
cmps
mov
(bad)
enter
popf
pop
enter
or
mov
data16
sub
ins
or
ret
stos
mov
pop
adc
repnz
pop
add
dec
push
cmps
fisttp
fild
lock
push
stos
addr16
es
loop
or
add
cmps
jl
mov
leave
sbb
outs
out
lods
push
in
xchg
or
ins
adc
xchg
dec
repnz
or
jb
pop
mov
outs
test
imul
dec
repnz
fcom
pusha
mov
jb
dec
bswap
dec
imul
ficomp
mov
jg
pushf
ins
ror
fimul
clc
and
mov
dec
cmp
add
or
pop
add
jne
dec
inc
pop
push
pusha
fcomp
xor
(bad)
mov
fild
or
adc
leave
pop
aaa
popa
inc
or
lea
cmp
addr16
pop
aas
xor
sbb
jp
sub
ins
mov
loopne
push
inc
(bad)
pop
inc
push
push
ja
push
xor
retf
or
pop
sub
dec
push
pop
mov
in
mul
test
lea
inc
inc
inc
sbb
add
or
js
push
pop
cld
push
jb
nop
lods
lock
das
or
push
aas
lock
loope
mov
add
popa
xor
inc
jnp
bound
xchg
(bad)
fadd
jns
sbb
dec
pop
cmps
hlt
fld
xor
fmul
outs
mov
adc
rol
add
clc
mov
cmp
and
push
fist
lock
cmp
es
sbb
push
lahf
sbb
out
lea
or
ret
scas
(bad)
cdq
add
push
and
xchg
push
push
rol
aam
into
enter
inc
jmp
or
mov
out
sbb
cld
mov
add
jmp
lahf
gs
mov
test
lds
popf
pop
sub
jnp
inc
or
pushf
or
adc
push
or
movs
dec
dec
mov
test
jne
bound
or
and
push
xchg
shl
fmul
ret
xchg
dec
cmp
mov
and
xor
pop
or
ds
dec
xchg
or
sar
sbb
xchg
push
or
mov
mov
or
pop
xchg
sbb
inc
icebp
sub
popa
push
sbb
cmp
push
push
(bad)
or
push
mov
fcomp
xchg
mov
dec
stc
out
and
or
xor
jb
jl
mov
jmp
jg
push
add
fsub
mov
ja
pop
mov
sbb
or
aas
sbb
dec
add
adc
dec
jmp
mov
in
adc
push
mov
ds
loope
mov
xchg
xor
pusha
cmp
or
jl
imul
sbb
lahf
xor
movs
dec
jno
movs
inc
xchg
xchg
clc
push
or
shr
mov
dec
nop
cmp
sub
lods
ds
mov
add
mov
jb
sub
call
out
mov
cmp
nop
jb
fcomp
adc
xor
in
mov
fiadd
mov
add
or
les
dec
mov
mov
cmp
mov
xor
sub
(bad)
jo
cmp
mov
adc
fdiv
mov
push
add
sub
pop
sub
add
xor
and
and
and
ret
xor
jae
pop
cmp
addr16
or
shl
stos
xchg
push
or
ss
lods
test
mov
cmp
retf
ret
inc
mov
addr16
shr
imul
xor
inc
nop
inc
push
pop
or
fdiv
or
push
lahf
fadd
in
adc
pop
bound
xchg
and
sar
pop
dec
pop
inc
lahf
cmc
dec
sub
rol
mov
(bad)
mov
imul
mov
cmc
aad
xor
adc
sar
and
in
out
or
jmp
sub
pop
add
cld
bound
(bad)
loop
add
mov
aaa
out
popa
(bad)
ss
cmp
push
add
ficom
les
enter
cmp
push
pop
mov
push
cli
and
in
or
push
mov
adc
jbe
retf
inc
jmp
sub
lock
inc
mov
les
mov
adc
xor
test
dec
mov
push
ret
ficom
sub
and
sbb
add
(bad)
mov
outs
xchg
out
push
mov
cmp
fisttp
pop
cmp
adc
adc
xor
pop
pop
add
nop
inc
xor
cmp
cmp
sub
xor
inc
popf
or
add
sub
faddp
xor
and
xor
shr
inc
leave
je
inc
mov
inc
jne
enter
ret
imul
pop
jg
rol
mov
and
mov
inc
xor
dec
inc
retf
imul
dec
push
out
pop
or
test
jne
adc
test
push
pusha
mov
mov
cmp
test
ret
mov
shl
out
fldz
or
xor
sbb
dec
add
div
jge
dec
xor
fs
mov
jb
ins
outs
ja
test
lahf
pop
dec
ret
add
push
xchg
mov
mov
mov
sbb
adc
rol
add
push
in
in
add
shr
ret
fisub
adc
xchg
out
loopne
sub
loopne
cmps
cmps
pop
push
(bad)
pop
inc
pop
xor
cmp
fs
xlat
cmp
xchg
inc
(bad)
imul
pop
loop
jmp
xchg
mov
mov
sbb
cmp
mov
lahf
xor
push
xchg
test
xchg
push
out
xor
stos
xor
call
dec
das
and
mov
jmp
mov
adc
rcl
and
cmp
scas
push
mov
add
or
call
inc
mov
shr
and
push
shr
stos
pop
fdiv
push
inc
mov
cmp
jl
mov
mov
adc
icebp
mov
sub
ret
retf
cli
popa
push
mov
mov
cmc
fnsave
inc
add
stc
repz
adc
push
push
xor
adc
out
adc
dec
jnp
rol
xchg
mov
xchg
push
pop
adc
bound
std
xchg
js
pusha
sbb
dec
cmp
adc
and
sub
mov
cmp
pop
adc
add
mov
cmp
mov
hlt
add
or
jbe
push
xchg
inc
cli
dec
xor
rcr
add
inc
nop
dec
push
sbb
jo
jge
and
mov
dec
sub
and
mov
fwait
pop
and
dec
pop
nop
adc
sbb
push
dec
ror
fbstp
sbb
jle
jmp
sub
or
jg
ja
mov
or
inc
or
jg
mov
mov
or
or
jl
jle
sub
icebp
jle
push
jne
mov
push
and
inc
sub
jecxz
adc
or
cld
xor
loop
test
nop
(bad)
mov
ret
enter
es
gs
fisubr
push
xor
repnz
jmp
push
dec
push
mov
xchg
xor
dec
push
mov
push
fs
pop
push
jmp
push
sub
and
dec
sub
pop
sbb
aam
and
or
cmp
and
push
xor
sbb
xchg
mov
add
mov
loope
nop
add
inc
cmp
inc
mov
sbb
scas
push
into
jo
inc
pusha
and
xchg
rcr
inc
adc
imul
movs
mov
add
mov
pop
sbb
loope
and
mov
push
and
fs
rol
pop
(bad)
mov
fbstp
cmc
je
jg
or
inc
cwde
fdiv
retf
xchg
dec
and
sbb
add
jb
adc
cmc
inc
icebp
xchg
add
je
fs
mov
pop
push
jae
fcom
inc
xor
into
push
cmp
jae
dec
rcr
push
retf
or
jp
mov
push
jp
cmp
adc
sub
sub
imul
or
mov
pop
dec
or
mov
pop
xchg
push
les
ret
jbe
jbe
cmp
pop
xor
data16
dec
add
and
and
inc
mov
or
adc
and
scas
xor
mov
cld
pop
inc
sub
add
inc
or
popa
pop
mov
adc
xchg
sbb
sub
and
or
inc
fldenv
adc
or
call
sub
(bad)
and
cmp
adc
jge
pushf
adc
pop
aas
and
mov
xor
inc
mov
ret
jbe
add
jmp
sbb
div
test
mov
push
mov
jl
cmp
int3
inc
stc
mov
js
push
sti
jbe
mov
jns
mov
push
push
mov
and
mov
push
ja
cmps
(bad)
or
xchg
mov
(bad)
xchg
add
and
push
cs
xchg
mov
iret
data16
jo
das
inc
rcl
or
into
add
mov
mov
pop
jmp
mov
out
fnsave
sbb
adc
jl
xchg
lods
cmp
js
mov
xchg
sar
sahf
addr16
mov
repnz
add
sbb
lods
mov
mov
je
icebp
dec
jl
mov
xor
and
mov
mov
and
fistp
lea
mov
mov
push
add
add
in
lods
arpl
mov
sbb
jbe
xchg
fisttp
jne
push
pcmpeqb
nop
hlt
out
xor
adc
push
mov
dec
adc
mov
adc
stos
retf
outs
aaa
dec
pop
mov
sub
and
mov
pop
adc
mov
xchg
adc
bnd
repnz
push
mov
jg
aad
cmp
add
add
add
(bad)
adc
ret
jno
je
sbb
sbb
mov
cli
adc
jno
mov
or
add
or
imul
mov
mov
or
pop
or
and
lods
mov
or
mov
add
adc
adc
pop
jmp
js
test
js
sbb
inc
mov
je
adc
shr
daa
loopne
icebp
adc
stc
call
fidivr
inc
mov
iret
in
outs
sbb
mov
test
or
popa
add
add
mov
gs
mov
fmul
pop
cmps
mov
jmp
push
mov
jge
aas
inc
enter
sub
sbb
or
scas
or
jno
adc
clc
pop
push
in
mov
push
rol
sub
pushf
jo
xchg
mov
add
and
scas
jbe
(bad)
adc
jns
or
inc
dec
and
adc
clc
pop
lock
imul
and
icebp
dec
pop
call
out
sub
mov
sub
adc
sbb
iret
xor
dec
mov
sub
mov
pusha
mov
adc
push
pop
cmp
mov
aaa
cmp
gs
repnz
dec
adc
xor
repnz
xchg
inc
adc
add
xchg
pmaddwd
inc
dec
xor
das
cmp
add
or
cmp
and
cmp
jmp
and
and
jne
jmp
fisub
or
add
ja
add
pop
ins
push
jo
mov
dec
mov
push
push
mov
(bad)
neg
push
xor
mov
nop
jbe
adc
push
add
sub
inc
xchg
mov
jno
and
imul
and
shl
js
xor
add
cmp
jae
xor
sub
add
adc
lock
clc
mov
data16
adc
ins
xor
and
outs
mov
push
and
mov
pop
addr16
jne
fsubr
xor
pop
xchg
pop
adc
sbb
ds
adc
inc
jne
rcr
cmp
jae
sbb
bound
lock
lods
fimul
icebp
(bad)
rcl
xchg
inc
cmps
xchg
pop
pop
pop
mov
and
add
cmp
and
adc
addr16
scas
mov
push
dec
fidiv
xor
ret
ja
pop
adc
mov
and
sub
std
loope
ficom
enter
sbb
xor
xchg
adc
test
mov
add
in
mov
mov
mov
(bad)
je
xlat
xor
js
mov
add
push
push
adc
push
or
or
pop
std
je
shl
clc
add
loop
push
scas
pop
pop
and
inc
and
adc
pop
push
dec
and
pop
inc
ins
js
mov
pop
jmp
arpl
mov
push
push
cmp
in
aaa
dec
data16
dec
(bad)
test
les
loop
and
sub
mov
push
mov
(bad)
and
pop
pop
sti
jg
nop
fisttp
popa
cmp
movs
ret
sbb
pushf
sub
jbe
pusha
adc
daa
mov
dec
cmps
adc
cdq
leave
xchg
or
or
or
jmp
xchg
(bad)
fcom
sar
push
dec
outs
fld
add
dec
inc
cmp
jnp
jb
mov
je
or
and
jae
jae
je
pop
je
addr16
jno
adc
pop
mov
sub
test
push
sub
mov
leave
add
inc
cmp
ss
add
sbb
cmp
loop
mul
add
icebp
or
inc
std
xor
jbe
xor
jb
push
push
push
push
daa
mov
call
movs
mov
call
sub
out
xchg
nop
out
dec
inc
push
add
ja
or
mov
jge
popa
sti
push
sbb
add
jp
cmp
cmp
cmp
inc
and
inc
inc
dec
repz
inc
inc
or
or
xchg
mov
or
sub
push
or
pop
jmp
cli
jg
das
shr
add
add
lea
push
imul
pop
sbb
cmp
and
add
mov
xor
aas
inc
fidiv
(bad)
ltr
jae
mov
outs
dec
sub
mov
xor
fadd
shl
and
jmp
outs
push
iret
imul
xor
and
jo
mov
xor
cmp
inc
add
fcomp
add
ins
lea
mov
or
mov
inc
xchg
sbb
adc
mov
lea
xchg
popa
in
inc
jl
imul
pop
sbb
test
sbb
add
push
push
sbb
stos
pop
inc
jl
dec
ins
push
rol
ret
cwde
mov
fs
sub
jmp
popa
jbe
add
jbe
inc
sbb
jno
push
sub
lock
inc
mov
call
add
add
xor
in
mov
or
or
ss
mov
mov
sbb
cmp
jae
push
dec
aas
adc
dec
sbb
cmp
jmp
pop
and
fidiv
call
out
sbb
sbb
js
xlat
inc
adc
bound
inc
xchg
xchg
(bad)
sbb
sysexit
sub
and
mov
cld
add
mov
mov
mov
adc
jne
ret
rcr
inc
lock
jo
jo
icebp
dec
jge
xchg
in
lds
pop
lock
dec
mov
add
jbe
inc
sub
xor
test
jb
test
and
lock
fist
mov
ins
mov
pop
add
cmp
mov
test
je
outs
bound
inc
mov
cld
jne
sysenter
sub
pushf
pushf
pushf
and
adc
test
das
call
mov
push
jmp
adc
and
test
fmul
inc
mov
fcmovnb
jmp
cdq
or
or
js
(bad)
test
or
dec
jne
xchg
mov
jmp
push
scas
das
ins
jmp
push
or
jo
ins
sub
ss
sbb
dec
bound
xor
adc
mov
hlt
ret
cmps
jo
or
sub
movs
xchg
lods
pop
push
mov
jmp
inc
sub
cmp
dec
test
data16
add
push
inc
shr
test
push
rol
nop
sbb
add
add
ins
div
aam
dec
pop
push
and
fdiv
push
or
push
xchg
jns
sub
add
jne
xchg
sub
add
sub
ret
jle
les
retf
loope
and
jne
je
cmp
outs
enter
arpl
ja
retf
and
add
je
push
(bad)
cmps
xchg
pop
(bad)
popa
stos
(bad)
sbb
ja
sub
push
je
jne
test
sub
mov
xchg
adc
push
mov
fldcw
jp
push
fstp
push
data16
xlat
cmp
outs
je
js
cs
sub
push
scas
sub
jmp
mov
cmp
and
push
inc
adc
jmp
add
push
or
das
xor
cmps
popa
sub
fsubr
sar
(bad)
jp
push
push
mov
mov
or
retf
add
or
idiv
xor
add
(bad)
rcr
lock
push
inc
adc
ret
jecxz
push
pusha
mov
loop
aas
lss
add
adc
pop
cli
mov
int3
jae
inc
pusha
jmp
cmc
pushf
xchg
loope
jne
rcl
in
push
adc
cmp
je
xor
mov
and
stos
mov
and
mov
jns
xor
dec
jae
pop
dec
inc
adc
add
or
cmps
jb
fdivr
cwde
add
cmp
pushf
jae
xchg
sub
or
inc
pop
outs
rol
pop
mov
fisubr
mov
push
and
dec
cmp
mov
adc
call
push
in
xchg
ja
ja
jmp
(bad)
cmp
dec
arpl
jne
xchg
mov
xor
jl
in
repnz
sbb
push
and
mov
mov
cs
icebp
pusha
and
xchg
cdq
pop
leave
jnp
add
pop
sub
mov
xor
or
mov
add
aaa
sub
add
inc
das
sbb
(bad)
and
dec
cmp
push
std
sbb
es
imul
inc
and
imul
or
push
shl
and
pusha
and
pop
add
sub
jo
(bad)
push
arpl
xor
xchg
mov
jb
sbb
ret
cmps
fwait
cmp
add
lock
jo
stc
int3
jbe
sbb
inc
xor
js
mov
add
aam
cmps
imul
dec
loope
dec
rcl
fs
jp
dec
jmp
cmp
ja
cmp
push
xor
dec
push
sbb
pop
push
in
cmp
xchg
fwait
pusha
call
call
lahf
jnp
inc
or
cmp
stos
xchg
stos
inc
retf
jecxz
inc
jbe
or
push
and
push
je
outs
cmc
cmp
push
mov
xchg
imul
xchg
mov
add
jbe
push
or
jmp
fcomp
je
inc
pop
inc
mov
sbb
fsubr
fnstcw
add
lahf
xchg
pop
pop
cli
loopne
dec
sub
adc
xor
int
loopne
fdivr
fcomp
jae
aam
rcl
or
ror
cdq
dec
loopne
mov
adc
mov
and
mov
dec
(bad)
inc
sar
add
add
add
fsub
scas
push
fidiv
(bad)
or
rol
pop
ror
shr
sub
sbb
les
push
ret
push
lahf
or
or
jp
push
inc
imul
ret
and
xor
mov
mov
adc
inc
pop
and
es
out
(bad)
int3
or
xchg
add
sub
das
add
push
sub
adc
add
mov
xor
test
jle
mov
xchg
jbe
and
inc
sbb
pop
test
xor
add
rol
add
dec
imul
or
add
pop
mov
inc
inc
dec
mov
mov
jecxz
pop
dec
mov
sub
jmp
sub
jbe
inc
or
loopne
int3
loopne
dec
mov
inc
cs
xor
or
sbb
ret
adc
fisubr
idiv
or
cmp
into
xlat
in
aaa
ja
or
out
lods
sbb
cmp
push
add
xchg
adc
jb
push
int
mov
pop
jno
dec
repnz
or
inc
(bad)
jb
adc
mov
add
pop
fcomp
xor
jne
jg
dec
and
cmps
call
cmp
or
or
loopne
sub
ss
sbb
shl
sub
std
and
shl
sub
mov
fisub
sar
mov
lea
push
sbb
ss
jl
loopne
sub
xchg
sub
sub
dec
push
ficomp
and
or
neg
jmp
sub
adc
jae
(bad)
adc
xor
fdiv
cmp
mov
or
xor
pusha
iret
fcom
data16
add
fadd
inc
xor
inc
test
add
adc
and
inc
and
out
adc
mov
jl
fisub
cmp
push
ins
and
inc
cmps
add
nop
ret
ins
adc
dec
fnstenv
add
dec
cmp
retf
cmp
mov
fidivr
shl
add
(bad)
cli
pop
cmp
push
cmp
stc
(bad)
or
leave
fadd
cmp
repnz
push
add
scas
mov
inc
lods
sub
jnp
push
jge
mov
(bad)
bound
or
push
cld
push
bnd
bound
and
mov
add
push
add
loope
(bad)
xor
unpcklps
mov
jle
push
(bad)
stc
pop
mov
or
jns
aas
sbb
xor
sbb
retf
adc
mov
mov
push
sub
push
mov
push
pop
add
mov
(bad)
xor
push
and
sub
shl
sub
sub
dec
fsubr
pop
jmp
xor
pop
sub
dec
sub
(bad)
and
add
cs
and
sub
mov
fsubr
test
pop
push
(bad)
push
popa
into
push
xor
shr
inc
mov
and
dec
adc
cwde
push
push
ret
aaa
sbb
jnp
xor
mov
pop
xor
sbb
xor
add
sub
inc
adc
or
fisttp
fwait
or
adc
sbb
lea
outs
xor
ins
cmp
pop
call
fdivr
jp
ret
inc
outs
repz
or
push
lock
test
adc
aaa
ss
and
mov
and
lods
mov
mov
push
cmps
xor
or
pusha
bound
ss
das
jbe
ja
xchg
mov
ins
cmp
cwde
jl
add
or
mov
xor
out
popf
stc
dec
sahf
push
std
ins
ss
out
lahf
in
mov
lahf
data16
shl
cs
cmps
stc
xor
push
test
push
sar
or
rol
and
jae
in
or
adc
pop
sbb
inc
dec
add
sbb
loope
add
daa
mov
movs
mov
arpl
cmc
xchg
pop
inc
sbb
mov
push
dec
loopne
xchg
adc
mov
sbb
test
and
test
scas
add
jo
mov
pop
push
and
fadd
mov
fdivr
scas
push
xchg
xor
pop
je
or
ret
popa
bound
push
xor
sbb
loopne
clc
or
adc
sbb
ins
add
jns
add
loope
xchg
call
ins
xchg
les
addr16
or
stos
pusha
mov
jle
inc
pop
mov
or
loope
in
adc
add
and
push
jns
in
enter
ds
xor
inc
sbb
xchg
jge
xchg
hlt
push
mov
pop
xor
mov
and
adc
inc
xor
dec
xor
push
cwde
or
dec
adc
jge
jle
mov
mov
addr16
in
fsubr
xor
sbb
sbb
loope
push
inc
or
sbb
(bad)
jae
wbinvd
sbb
add
push
push
sbb
rol
ins
push
std
push
fistp
adc
je
je
or
xor
mov
inc
inc
sbb
fst
jmp
(bad)
leave
rol
or
push
add
pop
xchg
sbb
push
xor
sub
ja
dec
cmp
push
adc
pop
iret
and
inc
outs
mov
or
mov
jne
out
sub
pop
adc
loop
push
sbb
push
repz
pop
add
sub
sbb
ins
sub
inc
out
cmp
xchg
and
jbe
pop
push
shl
mov
add
inc
inc
call
call
push
fiadd
cmp
stos
pusha
das
jo
jmp
add
and
sub
fnsave
and
mov
xchg
or
jb
in
sbb
pop
adc
nop
retf
push
and
and
xchg
pushf
and
or
fdivr
repnz
or
je
iret
or
inc
mov
out
loop
push
mov
jae
nop
pop
(bad)
(bad)
and
call
gs
xor
or
out
push
loopne
scas
mov
sub
(bad)
adc
fcmovnu
popa
sbb
fnsave
cmps
sbb
inc
fcom
and
shl
in
pop
das
pop
inc
adc
cmc
(bad)
nop
mov
or
mov
jle
ds
movs
inc
adc
add
dec
call
sub
daa
test
dec
mov
cmp
mov
lods
add
xchg
add
and
pop
shl
sbb
add
xor
add
jbe
sbb
jl
mov
loop
mov
adc
sbb
and
das
cmps
or
sub
test
sbb
sbb
pop
xchg
fistp
clc
adc
add
or
rol
cmp
cmp
or
pop
jle
jo
stc
repnz
ret
adc
jb
cmps
jmp
jmp
sub
fwait
jmpw
pop
mov
push
cmp
mov
nop
test
jnp
inc
dec
fsubr
hlt
xchg
mov
dec
bound
leave
push
sbb
push
cmp
daa
cmp
mov
imul
push
cs
test
mov
rol
arpl
dec
fs
add
rol
dec
js
jmp
data16
fs
jbe
push
outs
pop
or
add
push
test
dec
sub
data16
push
and
dec
cmp
inc
ror
mov
pop
xchg
dec
jo
sbb
add
inc
xchg
push
jmp
push
adc
inc
jecxz
mov
push
sub
test
js
xchg
mov
retf
scas
dec
push
push
lea
push
lea
adc
ret
sahf
aam
dec
sub
dec
push
lds
mov
addr16
in
xchg
idiv
dec
mov
or
nop
das
or
loopne
xor
cmp
jae
xchg
fldenv
dec
(bad)
rcl
and
jmp
dec
cmp
jle
or
xchg
bnd
into
cmp
push
pop
and
jb
shr
sub
push
ds
repnz
and
inc
jo
dec
and
movs
jne
out
pop
inc
fiadd
dec
into
mov
jne
dec
addr16
xchg
xchg
pop
call
jmp
movs
xor
push
add
rol
add
adc
fs
test
out
jp
push
add
test
repz
ret
xor
(bad)
jmp
scas
psrld
jae
test
retf
or
sbb
mov
inc
fs
enter
je
not
fld
adc
repnz
data16
jecxz
js
cmp
jmp
sbb
adc
shl
mov
fwait
call
lea
adc
cmp
push
or
dec
enter
popf
dec
sti
cdq
push
mov
dec
push
xchg
pop
pop
push
sbb
mov
xchg
adc
jle
and
or
mov
jle
add
pop
xchg
sub
add
add
imul
sbb
pop
jle
inc
push
sub
scas
mov
addr16
sbb
movs
push
sbb
aad
inc
hlt
pop
dec
push
add
xchg
ss
xor
push
lock
lock
jge
ret
pop
or
enter
push
push
sbb
cmp
jmp
ret
push
(bad)
ret
cmp
jmp
pop
cdq
xchg
jecxz
mov
dec
lea
pop
fstp
mov
add
sub
mov
pop
push
or
je
or
mov
jmp
mov
sub
jg
xchg
dec
push
dec
dec
mov
inc
cmp
jb
dec
xor
add
and
jns
retf
jae
adc
pop
add
dec
push
mov
inc
fist
inc
sub
xor
aad
adc
rol
xchg
adc
mov
adc
mov
inc
and
push
in
xlat
add
inc
rol
mov
(bad)
ss
add
sbb
pop
pushf
cmp
and
test
push
sbb
sar
sub
and
jo
xor
mov
adc
jae
imul
imul
cmp
push
push
and
popa
aaa
mov
or
push
jne
loope
jb
lock
cmp
call
cmp
mov
mov
gs
or
cmp
mov
cmc
jp
or
push
loop
add
mov
sub
lods
test
call
push
(bad)
ss
jmp
sub
fwait
adc
sub
mov
fisub
cmp
xor
cmps
fisttp
inc
loope
mov
shl
add
and
and
lea
in
pop
sbb
mov
or
dec
sti
sbb
add
cmp
repz
pop
cmp
xchg
(bad)
cmp
mov
cwde
loope
inc
pop
sbb
scas
shl
sub
adc
fisubr
mov
sbb
lea
or
dec
sub
loop
push
pop
clc
or
cmp
jge
xor
add
add
inc
push
sbb
popa
out
jecxz
retf
dec
add
adc
ret
cmp
add
mov
xchg
dec
push
or
sbb
inc
movs
arpl
outs
aaa
lds
push
lahf
mov
sbb
cs
lods
cwde
dec
mov
in
outs
std
or
mov
mov
cmp
rcr
dec
les
mov
in
add
popa
and
cmp
or
daa
add
pop
sbb
pop
xchg
jnp
xor
xor
test
sub
dec
sub
vpmovm2b
(bad)
add
(bad)
int3
shr
fs
and
pop
adc
or
jge
das
sbb
and
bound
int3
arpl
push
push
sub
das
mov
jbe
test
pop
cli
push
add
sub
aam
pop
add
add
xchg
add
sub
dec
jl
xchg
add
push
adc
dec
loopne
imul
cmp
pusha
dec
fist
add
jmp
inc
inc
and
ins
dec
add
icebp
or
add
adc
mov
add
cmp
jbe
pop
cmp
inc
adc
inc
into
mov
jns
in
cmp
dec
push
inc
cwde
jl
call
fimul
jae
sti
cmp
mov
inc
lea
clc
loopne
jmp
cmp
sub
add
jmp
inc
adc
cmp
shr
sub
mov
in
lds
cmp
pushf
fimul
inc
push
push
push
and
inc
mov
push
pop
rcr
outs
xchg
imul
mov
cmp
sbb
cmp
mov
add
out
bnd
push
outs
cmps
push
inc
sbb
or
sahf
retf
adc
neg
and
inc
cld
mov
and
in
dec
je
das
xchg
dec
xor
ins
adc
push
push
popa
mov
aad
push
sbb
test
mov
sub
cmp
ja
sub
fwait
mov
xlat
add
and
dec
adc
mov
cmp
iret
add
mov
pop
jnp
push
dec
pop
js
test
mov
mov
pop
push
pop
test
aas
mov
cmp
sbb
and
and
aad
adc
pcmpeqd
es
jbe
sti
pop
and
sbb
add
inc
push
ja
or
adc
fmul
bound
adc
sbb
cmps
and
push
jb
js
pop
mov
dec
je
cli
add
add
cmp
leave
cdq
jge
fadd
mov
ins
push
fld
call
loopne
or
lock
fadd
sbb
push
sbb
add
jae
cmp
cmps
loop
aaa
movs
add
(bad)
xchg
sub
push
clc
xchg
jmp
cld
cwde
and
inc
cmps
add
sbb
retf
adc
jge
enter
push
(bad)
push
shl
sub
mov
inc
dec
xchg
pop
mov
xchg
data16
and
and
or
xchg
sbb
sub
loope
mov
adc
dec
test
lods
sbb
sbb
inc
jno
inc
loopne
mov
mov
aaa
hlt
fmulp
add
adc
shl
enter
adc
mov
movs
ja
add
int3
dec
cmp
mov
int3
dec
add
adc
out
cmp
or
or
and
push
sbb
adc
add
pusha
adc
push
jne
cmp
loopne
shl
pop
movs
lock
dec
call
pop
and
jle
lods
jb
mov
cwde
push
or
inc
mov
les
and
cmp
jge
mov
adc
add
mov
mov
(bad)
xor
dec
pusha
(bad)
cmp
mov
mov
push
and
shl
in
jp
xor
xchg
shr
add
aam
mov
stos
outs
lahf
and
jmp
rol
lea
shl
ror
dec
and
jo
xchg
mov
mov
mov
inc
or
outs
sub
les
xchg
ins
je
inc
pop
test
and
and
push
xchg
loopne
sbb
xchg
sbb
test
repnz
addr16
pop
and
nop
into
aas
sub
push
inc
jle
inc
push
in
add
arpl
call
popa
outs
mov
push
or
movs
xor
sbb
push
fimul
pop
adc
sti
pushf
jle
rol
mov
ret
sub
add
or
sbb
outs
pop
imul
leave
or
push
sub
shr
movs
sbb
sbb
mov
xchg
mov
adc
cmp
scas
push
xor
add
scas
sbb
aas
movs
jl
lea
shl
xchg
mov
jmp
and
repnz
mov
and
and
mov
imul
data16
mov
mov
mov
retf
or
lahf
fidivr
lea
pop
pop
in
cmp
not
cmp
jl
sub
aam
push
adc
adc
(bad)
or
xchg
mov
(bad)
cmp
(bad)
shl
pop
adc
inc
or
xchg
nop
pop
push
sub
stos
lea
inc
jecxz
pop
hlt
lea
push
je
std
cmps
xchg
cmp
mov
mul
mov
pusha
inc
cmp
jb
das
jnp
and
jne
mov
out
fxch
mov
pop
jne
gs
ja
push
rcl
jns
jge
pop
inc
test
mov
imul
cwde
or
sahf
inc
jle
mov
call
bnd
mov
push
or
mov
or
hlt
fdiv
inc
push
jb
ds
push
and
fndisi(8087
movs
add
add
jle
jg
push
fdiv
test
add
cmp
mov
fwait
push
js
pop
cwde
in
cmp
and
xchg
pop
sahf
retf
mov
stos
je
cmps
inc
or
inc
sub
push
jg
outs
mov
inc
(bad)
jl
lds
jne
sub
xchg
icebp
call
push
xor
and
or
pusha
jne
inc
sub
xchg
nop
add
pop
outs
xchg
add
adc
add
dec
pop
dec
inc
out
enter
into
mov
and
push
mov
loopne
loopne
loopne
inc
mov
jmp
dec
out
adc
imul
sar
or
sub
ds
cdq
push
mov
(bad)
xchg
jg
rol
pop
inc
mov
test
add
mov
lahf
loop
dec
lea
dec
sub
adc
adc
xor
fist
xchg
add
adc
clc
sub
xor
(bad)
dec
aad
push
xor
ret
ds
mov
jg
rcl
adc
xor
add
inc
add
hlt
sub
push
ins
daa
push
enter
lea
jge
ficom
in
or
sub
mov
add
or
add
rol
xor
pop
inc
push
jle
jecxz
and
lahf
(bad)
mov
and
movs
adc
clc
movs
jnp
cmc
jo
pusha
stos
int3
push
retf
sbb
adc
js
rcl
cmp
vmovss
adc
or
mov
inc
div
push
dec
mov
sub
jmp
push
jmp
in
fs
inc
js
xchg
inc
jl
jl
cmps
lock
inc
jo
and
sti
jno
pop
outs
jae
xchg
sub
and
cmp
pop
push
mov
jo
jge
add
mov
cmps
movs
movs
push
out
pop
or
add
adc
sahf
fdiv
pop
sbb
neg
jb
cmp
or
or
mov
add
sbb
pop
sbb
or
div
push
rcl
sar
mov
idiv
or
mov
mov
mov
mov
rcr
pop
pop
jl
add
pusha
cmpxchg
mov
add
push
add
adc
sbb
cmp
rcl
push
ret
jo
or
xor
out
ss
xchg
cmps
or
ret
call
or
in
add
mov
xor
adc
aaa
in
xchg
fiadd
dec
mov
rol
aaa
fimul
dec
push
adc
(bad)
fld
fnstcw
fist
jge
jbe
or
aas
jmp
xor
inc
pushf
add
or
sub
mov
std
adc
cmp
jg
and
or
jae
int3
pop
les
imul
(bad)
and
or
mov
adc
f2xm1
add
mov
paddsb
in
mov
push
xchg
adc
push
jb
dec
cmp
idiv
scas
inc
ins
push
adc
push
cs
(bad)
mov
inc
ss
mov
repnz
sub
outs
inc
push
jl
fisttp
ror
mov
adc
mov
out
adc
jl
cmps
push
dec
out
or
add
js
push
pop
mov
xchg
es
movzx
stc
or
int
xor
and
stc
out
jnp
xchg
call
sub
mov
push
add
sbb
xchg
or
sub
test
lods
aam
mov
call
in
in
or
dec
call
fidiv
add
cmp
xor
xchg
pop
fsub
and
and
mov
add
fadd
cmp
jbe
ret
std
gs
imul
and
cwde
push
pop
sub
xchg
add
cs
sti
or
addr16
ret
xchg
dec
dec
aam
rcl
jb
push
adc
and
enter
mov
cdq
in
add
int3
cmovnp
xchg
dec
dec
cs
and
cmp
pop
enter
(bad)
enter
and
pop
shl
sub
in
push
(bad)
cmc
rol
and
and
out
inc
push
mov
shr
add
stc
scas
and
hlt
and
sbb
fwait
iret
inc
in
std
push
push
and
mov
enter
ja
sub
pop
fmul
jl
loopne
adc
pop
mov
sbb
push
in
dec
(bad)
lea
mov
add
push
and
add
call
push
into
ins
mov
and
mov
repnz
shl
movlps
jae
push
push
pop
mov
push
xor
mov
mov
cli
out
ds
add
in
pop
ds
out
loopne
dec
add
ins
ret
inc
dec
es
adc
ret
mov
in
outs
dec
into
repnz
and
fs
xor
mov
inc
adc
lea
lock
jg
sub
mov
lods
mov
push
pop
cld
test
cld
add
dec
jnp
mov
mov
cld
mov
movs
mov
imul
mov
xlat
or
sbb
inc
inc
inc
jge
inc
retf
push
or
dec
popa
stos
test
lea
pop
push
push
sub
or
push
add
loopne
mov
(bad)
sar
repz
mov
pop
pop
shl
jo
lds
in
or
(bad)
enter
mov
(bad)
dec
int
in
xchg
push
mov
add
push
enter
dec
cmp
sar
test
pop
add
rcl
mov
adc
data16
repnz
rol
nop
aaa
sbb
xor
fadd
inc
jno
xor
rcl
inc
adc
inc
or
adc
out
lods
div
rcl
daa
add
mov
ror
xor
shl
ins
cmp
jle
mov
ret
retf
cdq
or
jmp
rcl
xchg
push
ret
dec
jae
sar
(bad)
mov
jecxz
inc
mov
rcl
mov
(bad)
jle
test
jbe
adc
xor
adc
cmp
retf
sbb
stos
scas
and
push
adc
and
pop
pop
ror
cmp
call
jb
sub
lea
or
push
scas
jb
add
je
or
and
ins
jb
pop
test
loop
xchg
sar
cwde
fnstsw
inc
jge
lea
std
or
and
mov
cmp
xlat
sub
cmc
ss
sbb
(bad)
dec
int3
cmps
cmp
push
push
pop
call
pop
fcomp
cld
jbe
dec
add
les
mov
inc
clc
ret
adc
cmps
pusha
pop
jae
lds
or
fwait
xchg
jnp
test
jl
and
xchg
sbb
push
loop
cmp
mov
out
pusha
add
adc
and
jnp
inc
in
dec
int3
pop
sbb
iret
inc
cwde
and
pop
jnp
mov
aas
adc
push
std
push
mov
sub
push
push
jne
pop
ins
stos
jne
adc
retf
or
inc
pop
dec
addr16
dec
popa
sar
or
push
mov
shr
adc
rol
rcl
mov
or
push
inc
jecxz
inc
je
scas
add
dec
pop
inc
pusha
sbb
cmp
movs
out
push
mov
ins
sbb
push
add
shr
scas
mov
pop
in
lods
dec
sub
int3
js
mov
or
mov
(bad)
adc
mov
fadd
add
cmps
inc
mov
mov
inc
xchg
push
add
mov
inc
add
add
lock
and
cli
fs
pusha
inc
sbb
idiv
ins
outs
sbb
test
ror
inc
or
fdivr
add
adc
(bad)
jmp
ins
xchg
adc
add
xchg
add
jno
push
jmp
sub
jge
cmp
outs
stc
jae
xchg
es
sub
lds
ins
sbb
sbb
and
imul
ins
pop
adc
dec
sbb
adc
inc
push
sbb
jl
xor
mov
pop
and
sbb
mov
or
jl
inc
loopne
outs
push
xlat
adc
rol
icebp
or
mov
and
pop
and
movs
add
ins
sbb
adc
sar
retf
add
xchg
pusha
adc
ins
das
ins
jg
shr
inc
xor
mov
hlt
pusha
mov
dec
mov
icebp
jecxz
cmp
sub
ss
sub
shl
and
hlt
fidiv
jl
mov
pop
or
test
fdivr
inc
pop
test
mov
sub
imul
sbb
fadd
imul
adc
sub
inc
xor
mov
adc
unpckhps
push
mov
push
mov
leave
inc
ror
xlat
push
sbb
dec
mov
iret
not
shr
ret
aas
or
jmp
and
fidivr
push
push
inc
retf
xchg
sub
mov
test
outs
adc
mov
add
add
mov
jmp
mov
cmps
imul
pop
add
sub
(bad)
sub
inc
or
sbb
movs
rcr
inc
adc
call
or
xor
push
add
add
push
jg
add
test
dec
out
fidivr
push
pop
or
jmp
call
and
outs
ja
and
or
loopne
xchg
xchg
fndisi(8087
psrad
in
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
shl
pushf
xchg
xchg
rcl
ror
ins
push
push
sbb
popa
je
xchg
test
and
ins
loopne
sub
imul
jg
test
(bad)
stc
xchg
xor
cmovno
neg
sub
xor
scas
jae
imul
movs
in
xor
ins
push
xor
sub
jg
cmp
push
outs
fs
inc
das
adc
ror
and
xor
adc
pop
mov
aam
outs
rol
ds
push
push
shl
push
dec
inc
dec
jne
ins
fs
(bad)
out
in
mov
or
addr16
push
aad
xor
jb
aad
int
inc
call
pop
and
push
mov
push
inc
nop
or
inc
dec
mov
mov
(bad)
pmulhuw
stc
dec
dec
dec
inc
push
push
or
xchg
lods
or
inc
jo
mov
sbb
push
int3
(bad)
ds
pop
dec
dec
inc
call
mov
mov
xlat
xchg
or
adc
nop
mov
adc
in
(bad)
bound
adc
add
mov
or
outs
fdiv
or
sar
fdivr
push
loope
xor
test
xchg
sub
jb
adc
push
fcom
imul
and
cmp
iret
adc
push
jbe
and
nop
je
xchg
sub
rcr
rol
sub
cmp
and
push
mov
xor
jg
push
inc
add
loope
xchg
push
inc
sub
cwde
ficomp
cs
or
ds
rcr
adc
mov
lahf
dec
fimul
bound
repnz
push
shl
cmp
iret
and
mov
fdiv
dec
pusha
and
int
jl
movs
xor
int3
push
push
daa
add
jo
loopne
ins
loopne
ss
sub
rol
or
pop
push
cmps
sbb
and
hlt
js
out
ins
push
mov
or
inc
push
or
(bad)
jmp
fwait
push
push
imul
ret
inc
or
jo
adc
fiadd
pop
xlat
mov
push
inc
out
js
cmc
imul
fs
pop
push
push
stc
in
jge
nop
lods
iret
sar
dec
mov
cmp
or
in
aad
inc
nop
sbb
xlat
sub
fs
cmp
xlat
sbb
dec
cmc
fdiv
ins
inc
xchg
int
fdiv
adc
xlat
cwde
(bad)
fwait
sub
xor
dec
and
addr16
dec
inc
call
add
sbb
xchg
gs
pop
push
dec
push
inc
nop
pop
fidiv
cmp
cld
push
push
pop
leave
pop
idiv
sti
dec
xlat
je
dec
push
nop
enter
jno
push
aaa
inc
push
scas
push
bswap
nop
xor
xlat
jnp
rcr
push
mov
sbb
xchg
mov
fidiv
and
add
and
or
or
je
sub
and
cwde
dec
loopne
push
fbstp
xchg
and
(bad)
repnz
fstp
dec
jp
inc
nop
xchg
movs
pop
add
leave
pop
sbb
and
mov
cmp
inc
cmp
ror
adc
or
sbb
enter
xchg
and
pop
mov
pop
rcr
sub
pop
aam
cmps
mov
jne
push
and
xchg
hlt
pop
in
shl
or
retf
xchg
sbb
push
lock
cmps
sbb
aam
in
fsub
inc
push
mov
sbb
push
and
gs
mov
into
mov
clc
push
adc
dec
adc
addr16
bound
into
push
aas
fadd
add
sbb
lahf
sbb
add
xor
inc
fcom
and
mov
inc
call
enter
loopne
or
pop
addr16
mov
fwait
adc
push
or
or
rdpmc
idiv
dec
sbb
rcr
jecxz
cmp
xor
mov
jne
mov
inc
add
in
cs
js
mov
pop
adc
cmp
inc
retf
shl
jo
leave
out
push
and
call
pusha
loopne
popa
jbe
or
shr
and
pop
fnsave
je
mov
mov
jne
sub
dec
push
ret
outs
cmp
ret
rol
popf
mov
dec
mov
jl
or
(bad)
jl
mov
and
test
push
xchg
push
mov
shl
fsubr
ja
ret
lods
jae
xor
in
pop
fstp
out
and
push
push
ins
fwait
out
sub
sar
daa
mov
daa
and
lods
dec
or
xchg
es
jo
sbb
daa
mov
mov
mov
mov
and
add
xor
and
ins
sub
scas
push
pop
add
das
(bad)
mov
pusha
(bad)
aam
mov
arpl
jl
movs
fnstsw
push
xor
inc
adc
call
nop
inc
fadd
nop
adc
sbb
sbb
fwait
in
sbb
mov
push
fs
or
lock
xchg
mov
ror
call
ja
xchg
ss
adc
ret
ret
jb
aam
sub
in
or
arpl
sar
ret
sbb
adc
push
jnp
adc
ins
and
and
sub
mov
sub
fbstp
dec
sti
mov
cmp
mov
xchg
movs
test
scas
adc
fcom
push
jp
retf
cmp
mov
push
icebp
fwait
xor
mov
push
ret
scas
cmps
sbb
pop
ja
mov
fwait
or
les
xchg
rcr
enter
or
adc
inc
fisttp
pop
add
and
xor
mov
ret
xchg
sbb
mov
cmc
jg
pusha
add
push
das
sbb
scas
pop
aaa
pusha
xlat
add
cmp
push
sub
add
pop
mov
hlt
jle
inc
add
pop
add
inc
sub
lea
jmp
cmp
xor
je
sbb
popf
fld
loopne
mov
mov
cwde
xchg
ret
and
inc
sbb
mov
push
fldenv
daa
add
mov
into
dec
sub
iret
fidivr
adc
adc
retf
iret
mov
pop
out
xor
sti
pop
add
sub
xchg
cdq
es
pop
pushf
mov
xlat
mov
add
sub
or
movs
nop
mov
xchg
and
xor
pop
xchg
xor
xchg
movs
dec
add
mov
in
xchg
mov
jmp
aad
or
dec
sub
push
mov
jl
pop
sbb
mov
dec
test
push
aad
inc
xchg
sub
daa
push
or
fnop
adc
cwde
sbb
sbb
or
inc
push
cmp
push
sub
mov
dec
or
sbb
jmp
rcr
pop
jae
dec
and
sub
dec
dec
cs
inc
or
xchg
push
mov
xor
(bad)
fdivr
shl
or
push
or
iret
pop
xchg
ins
adc
mov
(bad)
cmc
mov
scas
daa
push
pop
sub
ret
or
or
lods
call
or
imul
cmp
dec
cmp
jl
imul
adc
and
and
pop
add
(bad)
push
imul
sbb
ja
div
xor
jl
pop
jl
mov
mov
xor
fidiv
fidiv
push
in
in
in
and
and
(bad)
addr16
mov
xor
mov
add
cld
mov
sbb
cs
lock
add
ret
clc
mov
inc
movs
aam
cwde
push
mov
xlat
rcr
imul
(bad)
jl
ret
sub
movs
imul
sub
xor
inc
jp
mov
inc
and
sub
aaa
xor
and
add
fs
inc
in
fucomip
sub
inc
cmp
fbld
sbb
aas
pop
cwde
fs
aad
xchg
sub
and
daa
enter
xchg
adc
sbb
es
sbb
imul
or
enter
mov
es
mov
rcr
rcl
(bad)
sub
inc
dec
xor
ret
sub
adc
mov
pop
(bad)
ret
movs
xchg
fsub
sbb
pushf
pop
fdivrp
cld
imul
cwde
ins
ss
sbb
test
es
push
sbb
jmp
sub
cld
mov
sbb
(bad)
cmc
pop
pusha
cmp
gs
pop
xor
sbb
cmp
pop
test
pop
add
xor
and
rol
xchg
mov
adc
mov
push
pop
or
retf
or
mov
push
sub
stc
sub
add
(bad)
popa
pop
lea
xchg
data16
stos
push
cmp
mov
adc
adc
add
cwde
sbb
mov
enterw
ins
loopne
(bad)
fsubr
or
adc
dec
pop
and
add
shl
loope
mov
test
int3
push
or
dec
xlat
fistp
and
adc
mov
xor
out
jle
aad
or
ss
pop
hlt
cmc
push
frstor
xor
cld
push
add
nop
test
jbe
dec
and
or
adc
pop
js
mov
fs
inc
or
cmp
es
sub
and
stos
inc
imul
jg
dec
pop
cmp
outs
and
pop
jne
lods
adc
loop
adc
adc
add
data16
inc
fsub
sub
xor
jb
pop
cs
add
add
sbb
sbb
dec
ins
clc
fmul
adc
jbe
sbb
enter
sub
adc
add
leave
jae
pop
add
add
daa
push
sbb
xchg
pop
adc
sub
clc
push
sub
repnz
clc
jmp
pop
rcl
push
rcl
cmps
(bad)
in
mov
mov
add
ret
xchg
out
sbb
cmp
sub
add
or
xchg
or
mov
mov
jns
mov
xor
pop
xchg
push
cs
(bad)
adc
(bad)
push
sbb
(bad)
in
(bad)
or
jbe
in
mov
xor
jno
xor
push
imul
mov
sub
addr16
push
push
dec
or
sub
mov
mov
add
imul
inc
nop
jns
push
aam
inc
add
push
ror
push
test
pop
lea
add
add
dec
jmp
rcr
push
xor
in
ins
and
cmc
es
mov
sbb
add
loope
push
stos
mov
jo
sbb
ror
jbe
outs
repz
mov
xchg
mov
and
dec
(bad)
stos
mov
ins
jno
push
push
sbb
jle
aaa
inc
cdq
or
push
fnstcw
cwde
icebp
cmc
je
mov
shl
push
xchg
mov
cmp
sub
xor
(bad)
inc
mov
jmp
imul
xchg
push
add
xor
(bad)
xor
nop
iret
dec
sbb
pusha
enter
imul
fimul
inc
mov
imul
lods
(bad)
scas
cmp
inc
xchg
or
inc
adc
adc
or
sbb
pop
test
test
in
ret
cs
lea
sub
loopne
push
pop
adc
add
fmul
mov
inc
jmp
or
in
and
lea
lea
test
mov
push
jbe
pushf
and
cmp
cld
xlat
add
or
push
push
xlat
jp
mov
mov
push
imul
imul
adc
cmps
jnp
cmovl
cmp
and
and
enter
stos
and
fucompp
dec
inc
or
cmp
jae
ins
push
jns
(bad)
xchg
clc
mov
aad
ret
push
or
cmps
in
push
lea
aas
mov
and
adc
test
adc
or
pop
mov
in
jbe
fcomip
mov
or
cmp
sbb
push
dec
stc
dec
cmp
call
jp
pop
imul
jle
cmps
xor
imul
mov
inc
cs
jmp
test
loope
nop
adc
or
add
cmp
push
cmp
test
add
sbb
pop
dec
sub
adc
mov
iret
xor
mov
xor
mov
cmp
xor
push
sub
push
xchg
out
xor
sbb
adc
add
add
xor
ja
push
cmps
sbb
mov
pop
out
and
sub
paddd
je
add
jl
push
adc
jl
pop
or
xchg
imul
stc
xchg
push
shl
push
retf
sub
push
aaa
mov
push
pop
shl
cs
sub
rcl
cld
dec
push
push
xor
mov
sub
shl
rcr
pop
and
test
mov
in
jbe
add
jne
and
(bad)
mov
imul
push
ds
rcl
nop
mov
push
bound
inc
pop
push
adc
or
imul
inc
mov
lea
sbb
dec
push
iret
fld
add
into
and
or
out
jmp
sub
cmp
add
inc
adc
jae
jmp
sub
dec
in
test
jp
xor
cdq
cdq
pop
bound
adc
inc
or
dec
dec
outs
(bad)
popa
and
in
lahf
sbb
dec
mov
aad
xor
and
lea
xchg
add
cmps
aam
add
add
call
lods
or
push
push
inc
add
adc
push
inc
ins
scas
cmp
xor
mov
rol
stos
jmp
inc
adc
or
call
xor
cmps
mov
or
sbb
pop
push
mov
jecxz
js
pop
ss
dec
jmp
adc
xor
or
sbb
test
sbb
ins
hlt
add
jns
enter
dec
mov
add
iret
mov
ja
add
or
adc
inc
enter
mov
push
jae
sbb
add
ret
rcr
push
add
push
and
gs
outs
xor
sbb
xchg
psubb
mov
inc
lds
cmp
(bad)
ja
das
push
mov
(bad)
and
sbb
or
and
cwde
dec
lock
xchg
leave
or
inc
cmp
dec
xchg
cmps
or
mov
hlt
mov
jo
repz
test
dec
sub
repnz
and
sub
fmul
jecxz
inc
inc
pop
mov
das
cwde
dec
push
push
cmp
mov
or
(bad)
jl
or
add
inc
or
pop
aas
in
xchg
xor
in
call
mov
or
(bad)
pop
lock
fwait
js
cdq
inc
jne
imul
jle
in
sbb
and
sti
mov
hlt
sub
repnz
and
dec
dec
jmp
push
in
mov
or
dec
out
jmp
adc
jnp
lahf
push
pop
pop
sbb
lahf
push
mov
push
mov
xchg
sbb
fcomp
xor
aad
cmp
sbb
(bad)
in
ret
into
add
cmp
adc
push
(bad)
ds
(bad)
jae
jge
lea
inc
sbb
push
cmp
pop
mov
mov
in
add
inc
adc
jmp
adc
adc
add
mov
xchg
pop
ret
jge
mov
cld
mov
js
lock
xor
or
or
inc
jecxz
cmps
pop
leave
and
adc
dec
fmul
add
test
pop
mov
add
test
cmp
or
mov
jge
retf
fld
js
pushf
imul
and
dec
push
pop
or
sahf
pop
sbb
test
retf
cmp
sub
add
add
pop
sbb
in
push
jl
(bad)
rol
scas
add
add
inc
enter
fwait
dec
mov
scas
or
inc
inc
js
add
enter
scas
call
sti
xchg
cmc
into
imul
ret
pop
sar
jmp
push
sbb
test
clc
ss
and
jbe
je
push
repnz
fild
inc
sub
shl
mov
or
fimul
add
sbb
push
xchg
cli
dec
add
pop
jl
movs
push
aaa
mov
in
popa
adc
xor
addr16
mov
mov
push
enter
jecxz
cmps
add
loope
(bad)
hlt
pop
mov
test
repz
or
or
clc
sti
add
add
push
ret
adc
mov
pop
add
leave
push
dec
add
cmps
push
xor
(bad)
jg
push
mov
icebp
pop
jbe
mov
sub
hlt
sbb
push
retf
cmp
dec
cmp
inc
cdq
push
cdq
push
pushf
cli
push
je
and
or
jo
mov
add
mov
dec
fld
pop
add
dec
add
add
cmp
jg
push
xchg
dec
inc
mov
push
mov
inc
loopne
test
xor
jns
xor
(bad)
das
fisubr
mov
jg
sbb
(bad)
cmps
sbb
dec
inc
rol
ret
(bad)
rcl
sbb
xor
clc
jae
mov
mov
pop
xlat
sbb
cmps
je
sbb
mov
dec
aam
fcom
loopne
cs
xchg
inc
pop
nop
xchg
sbb
in
sbb
outs
in
lods
stc
mov
fld
mov
push
pop
loope
add
push
push
jg
or
adc
pop
adc
cld
(bad)
stos
xor
sbb
inc
ss
mov
cmp
jne
jns
in
or
dec
rcr
pushf
popf
out
sub
xor
jmp
sub
and
push
pop
push
cmp
push
push
jmp
cmp
xor
xchg
pop
loopne
push
push
cmp
jnp
pop
in
or
das
fbld
fadd
aam
mov
sbb
xor
mov
and
push
add
add
dec
pop
leave
mov
imul
stos
adc
or
mov
jmp
mov
and
aam
fs
hlt
add
dec
sbb
repnz
lods
xchg
enter
adc
sub
add
push
jne
cmp
ins
hlt
jbe
ret
adc
and
mov
aaa
aam
xchg
ret
mov
add
or
push
adc
mov
mov
add
jmp
rcl
mov
push
add
mov
and
imul
adc
inc
sbb
(bad)
(bad)
ss
fadd
pop
test
and
jo
push
xchg
jo
jnp
push
push
jle
fiadd
add
rol
sbb
dec
jne
xchg
xchg
sub
push
mov
iret
inc
and
or
xchg
shl
sub
loop
or
or
idiv
out
mov
inc
and
and
loopne
sub
and
in
inc
movs
rcl
das
fistp
inc
xor
aam
push
add
shr
nop
jecxz
or
mov
inc
mov
ss
add
mov
das
dec
mov
xchg
push
jmp
xlat
stc
jle
ret
jne
pop
loop
mov
add
xor
(bad)
add
push
mov
xchg
push
and
add
shl
adc
rcl
push
pop
(bad)
stos
pop
xor
adc
test
and
jnp
or
mov
inc
inc
inc
xor
jg
push
sub
and
xchg
je
fnsave
jle
mov
pop
mov
xchg
cmp
push
add
or
ficomp
adc
mov
clc
add
sti
jmp
jne
sub
scas
in
ds
cmp
ror
dec
leave
iret
xchg
mov
push
aad
in
mov
mov
retf
mov
pop
movs
adc
sub
push
dec
xchg
pop
add
pop
ins
inc
cmp
push
push
les
push
loopne
cmp
pop
je
mov
pop
sbb
push
sbb
shl
add
push
mov
jb
inc
mov
sar
push
and
or
mov
sbb
test
stos
loop
clc
mov
fbld
dec
xor
dec
jp
push
push
lahf
add
mov
inc
xchg
test
mov
cmp
inc
ds
mov
retf
js
dec
mov
jmp
add
xor
sub
hlt
xchg
mov
mov
add
ins
sti
inc
neg
push
xchg
jnp
push
jns
dec
push
enter
call
add
mov
pop
mov
in
cli
sub
mov
mov
cvtdq2ps
xor
sbb
shr
loope
jnp
(bad)
dec
cmp
mul
jb
or
mov
nop
or
addr16
pusha
adc
add
into
xor
pop
adc
lock
sbb
mov
mov
mov
enter
dec
movs
test
rdtsc
(bad)
xor
cmp
xchg
lock
or
inc
and
sbb
ins
dec
lock
mov
dec
sub
daa
adc
adc
fidivr
aad
loope
inc
popa
hlt
dec
inc
ins
fld
stos
jo
inc
pop
inc
out
push
mov
inc
test
mov
aam
lds
add
rcr
ror
mov
repnz
adc
test
mov
push
stos
pop
mov
inc
adc
cmp
push
stos
add
and
dec
lods
and
adc
lods
iret
cmovp
rcl
or
popa
and
adc
push
push
js
pop
in
sbb
js
xor
pop
sbb
daa
or
sub
add
(bad)
ret
sub
add
push
in
xor
xor
pusha
sbb
mov
in
ror
mov
dec
mov
test
inc
(bad)
mov
jg
or
jmp
sbb
je
les
inc
fisub
fs
mov
add
dec
es
or
test
mov
cdq
cli
add
sub
and
pop
mov
add
ret
fnstsw
mov
pusha
and
jmp
adc
ret
xchg
(bad)
es
or
lods
xor
(bad)
push
sbb
rol
mov
mov
js
xor
(bad)
mov
adc
add
sub
mov
in
and
mov
cmc
rcl
or
movlps
out
ds
test
mov
cmps
das
cmp
pop
pop
sub
adc
mov
ins
retf
(bad)
lods
enter
sbb
ss
je
mov
xor
repnz
daa
movs
sbb
imul
xchg
mov
pop
int3
push
iret
inc
dec
movs
push
add
jle
and
add
mov
push
mov
dec
pop
(bad)
dec
jne
push
xor
sbb
xchg
js
inc
enter
or
push
and
ja
retf
scas
pusha
daa
xor
or
inc
add
adc
dec
shl
cmps
(bad)
mov
jns
(bad)
out
add
bound
imul
pop
call
pop
call
and
mov
scas
les
inc
xchg
mov
and
adc
inc
lods
xchg
push
or
cmp
adc
gs
or
jmp
sbb
fist
dec
movs
cmp
sub
adc
cmp
in
(bad)
xlat
repnz
fwait
out
inc
xchg
jmp
fdiv
and
push
pushw
adc
or
movs
test
popa
push
je
or
add
imul
xor
sub
out
mov
movs
(bad)
cmps
inc
push
ret
cmp
add
mov
imul
pop
and
sbb
add
lea
sub
push
cmp
daa
sbb
ins
ins
jmp
icebp
scas
sbb
test
add
jl
xor
je
rcr
mov
clc
push
es
rcl
inc
inc
dec
add
ficom
dec
rol
clc
inc
sub
jo
add
add
xchg
and
mov
mov
ret
sub
jmp
adc
push
mov
mov
mov
or
cmc
add
cmp
dec
outs
xchg
in
cmps
mov
repnz
into
add
cmp
jl
add
ret
mov
add
or
stc
sub
xor
sbb
mov
mov
pop
sub
das
cmp
inc
jb
jbe
mov
test
test
fcom
fs
cmp
nop
add
jl
retf
(bad)
pop
mov
sub
(bad)
test
adc
dec
and
scas
add
test
(bad)
cli
push
xchg
les
into
ficom
pop
sbb
das
sbb
lahf
add
sbb
mov
sbb
loop
sbb
push
or
mov
or
push
ins
xchg
je
ins
sbb
or
movs
cmp
cmp
stos
cmp
sbb
out
retf
cmp
sbb
fadd
and
add
sbb
sbb
or
leave
sbb
nop
jne
xchg
add
mov
dec
and
test
add
cmp
sbb
shl
or
and
stos
and
or
and
call
add
mov
sbb
ror
mov
xor
xchg
gs
fcmovbe
push
(bad)
and
das
inc
adc
and
sub
add
pop
test
mov
jle
mov
xchg
mov
jb
shl
xchg
fimul
push
scas
adc
bound
add
outs
adc
lock
pop
push
sub
add
retf
leave
(bad)
push
movs
xchg
add
and
sbb
jnp
dec
sub
pop
xor
in
dec
and
push
dec
sub
mov
and
rcl
lods
push
adc
sub
mov
mov
sbb
add
pop
pop
ret
inc
push
pop
dec
sub
in
cmp
push
in
and
in
xchg
ds
or
icebp
cmp
and
adc
lea
arpl
fld
mov
je
and
add
(bad)
pop
jmp
loope
lds
sbb
inc
and
push
jae
mov
in
sti
jno
lea
add
and
or
inc
xor
sbb
dec
clc
or
jb
inc
and
mov
mov
call
adc
or
(bad)
jne
push
ins
repnz
xor
cmps
mov
inc
cmp
(bad)
popf
add
push
sub
pop
ins
xor
mov
pop
mov
xor
ret
push
dec
lea
inc
xor
inc
fs
(bad)
in
xchg
clc
lods
mov
add
mov
nop
inc
jns
pushf
mov
clc
imul
lock
cmps
nop
das
test
xor
dec
xor
adc
in
jle
push
xchg
adc
imul
mov
push
dec
cwde
jp
cmp
stc
rcl
add
pop
add
rcl
sbb
xchg
adc
push
or
jae
add
add
adc
mov
retf
mov
mov
push
sbb
mov
dec
xor
fs
sub
lds
pop
add
hlt
pop
jb
out
xchg
test
lea
adc
out
aas
dec
dec
push
or
add
fwait
scas
arpl
adc
inc
jmp
adc
jge
icebp
push
fs
stos
and
adc
or
sbb
bound
and
sub
cmp
sahf
ret
test
or
mov
push
sar
and
sub
(bad)
cmp
or
add
fsub
sbb
or
pop
adc
movs
dec
push
push
inc
pop
add
lea
stc
and
sti
mov
jmp
inc
adc
and
mov
es
pop
push
and
fisttp
ret
add
and
fmulp
and
mov
and
int3
push
(bad)
ss
sub
retf
sbb
(bad)
add
cmp
call
ds
and
ficomp
mov
and
mov
push
adc
inc
cs
jbe
std
fld
cmp
jo
ja
fmul
test
lahf
pop
pop
sub
or
mov
cvtps2pd
pusha
xor
inc
lahf
add
int3
icebp
mov
cmc
add
mov
lods
sub
dec
lea
add
jne
sub
or
or
dec
sbb
xor
and
pop
and
aaa
enter
and
push
enter
cmc
mov
punpckhbw
pop
mov
shl
sbb
test
sub
xchg
add
repnz
adc
int
and
fldl2t
sub
fadd
adc
and
mov
mov
dec
jp
sbb
or
jns
dec
cmp
into
rcl
popf
xor
lods
mov
xor
pop
adc
xchg
call
sub
pop
jns
imul
aas
xor
add
add
sub
ins
(bad)
cld
es
sbb
pop
dec
or
pop
dec
xchg
cmp
add
push
dec
fdivp
mov
mov
inc
div
cmp
mov
push
add
dec
add
push
sub
rcl
xchg
(bad)
add
sub
push
xor
or
scas
loope
push
pop
xchg
add
add
and
dec
add
inc
mov
adc
or
dec
push
scas
addr16
cmps
daa
jecxz
mov
pop
and
sub
aam
loope
inc
fsubp
add
jge
mov
adc
add
pop
sub
mov
jb
jo
and
sbb
pop
jle
aaa
iret
jmp
fs
test
sar
fild
arpl
inc
xchg
mov
push
ror
add
fs
rcr
push
sbb
cmps
popa
push
mov
aas
sub
test
rol
xor
inc
sub
xor
(bad)
adc
mov
mov
mov
cmp
push
jns
xchg
lods
push
sbb
test
and
or
cs
mov
sbb
add
jle
outs
cmps
cmp
push
sbb
inc
mov
push
dec
sbb
inc
fild
push
sbb
(bad)
add
jmp
outs
cwde
adc
ins
xor
dec
lock
fwait
test
daa
push
enter
xchg
add
movs
mov
cmc
inc
add
loopne
idiv
ins
adc
mov
lea
fisttp
xchg
or
sar
lea
adc
stc
ins
inc
cld
gs
push
sub
cmps
cmp
push
cwde
lock
mov
and
rol
sub
mov
and
add
popf
addr16
dec
and
jge
nop
mov
test
test
clc
pop
imul
sbb
sar
and
push
mov
push
push
out
shl
jl
xchg
add
mov
fsubr
add
mov
and
dec
cmp
aam
adc
add
clc
adc
test
xchg
pusha
inc
push
cmp
mov
mov
inc
inc
push
add
or
cwde
mov
mov
cmp
add
das
daa
mov
mov
mov
adc
pop
adc
sub
inc
mov
les
sbb
dec
add
inc
cmps
mov
cs
and
add
add
pusha
ja
add
sbb
rcr
jge
xor
iret
add
std
mov
sar
mov
imul
imul
rol
mov
rol
or
xchg
rol
inc
or
lahf
sbb
pop
push
jo
xor
push
cwde
std
and
dec
mov
sbb
fcmovnu
lahf
cmps
sub
add
mov
mov
movs
(bad)
adc
xor
and
inc
cmp
add
inc
add
add
and
jp
add
adc
mov
dec
test
sbb
inc
add
adc
stc
pop
test
in
add
test
retf
adc
add
push
icebp
inc
mov
adc
sbb
add
xor
ins
dec
cld
mov
fimul
cmp
pusha
outs
sub
or
sbb
pushf
add
mov
aam
clc
add
lods
rcl
cdq
jl
sub
push
jmp
inc
and
or
clc
inc
mov
lock
shr
and
fucomi
xor
adc
sub
retf
pop
jno
in
or
and
jb
pop
add
mov
push
jmp
aam
jmp
shr
mov
cmp
add
ret
add
aaa
nop
mov
pop
add
lds
xor
rcl
cli
add
push
xchg
mov
ficom
adc
bound
shr
test
or
js
rol
mov
sbb
add
leave
std
inc
sbb
rcl
inc
add
xchg
popf
xor
inc
sbb
inc
fmul
jno
sub
mov
push
mov
jecxz
popf
jo
(bad)
mov
xor
mov
jge
inc
(bad)
pop
loop
push
push
lahf
mov
dec
mov
push
clc
lea
mov
jmp
push
xor
or
jge
xchg
add
retf
push
aas
mov
mov
xchg
push
test
push
push
mov
test
test
add
imul
mov
test
lahf
(bad)
and
cld
add
xlat
cmp
or
add
(bad)
mov
xor
retf
sub
push
sbb
push
lock
or
dec
sub
ss
and
cld
ds
pop
arpl
pop
mov
push
scas
or
in
test
push
and
xor
sub
jne
das
cmp
aad
dec
repz
call
or
mov
or
aam
aam
loopne
rdmsr
repnz
mov
rcl
in
xchg
(bad)
pop
lock
inc
lods
int3
adc
jl
int3
adc
adc
and
data16
test
jbe
inc
push
or
mul
jne
enter
xchg
enter
enter
push
add
adc
mov
int
les
lea
movs
sub
dec
hlt
(bad)
mov
or
ret
add
mov
ins
sbb
pause
xchg
xchg
fwait
push
shr
sub
xor
adc
aam
(bad)
bound
mov
out
and
add
or
push
add
in
stc
arpl
dec
inc
dec
inc
mov
pop
mov
push
xor
sbb
nop
in
push
ss
pop
push
pop
xor
cs
lods
and
jmp
ret
pop
pop
ror
adc
gs
fldenv
and
mov
adc
mov
push
arpl
sub
adc
sysexit
mov
bound
dec
cmp
and
jb
sub
xchg
jae
adc
xchg
(bad)
xor
loope
lods
stos
dec
retf
mov
scas
jmp
jo
aam
aad
cld
mov
push
or
lahf
clc
ja
and
dec
test
inc
dec
and
mov
add
xor
dec
(bad)
cmc
or
mov
pop
cwde
jnp
sub
cmp
jb
fidivr
cmc
std
into
movzx
mov
xor
add
pop
adc
or
xchg
push
push
call
test
sbb
add
cmp
arpl
push
call
lods
addr16
(bad)
mov
lods
retf
push
int3
je
jns
mov
xchg
xchg
push
punpckhwd
add
fiadd
or
pushw
xor
add
sbb
jl
test
in
out
stos
mov
adc
xchg
pop
pop
rol
aad
xchg
test
pop
xor
mov
enter
xchg
ret
pop
in
mov
fsub
adc
and
inc
shl
inc
ficom
scas
cmp
fsubrp
arpl
mov
pusha
fsub
sbb
fld
ror
jnp
inc
push
and
and
lock
push
(bad)
test
inc
adc
xlat
test
or
push
dec
xor
shl
or
xor
mov
sub
or
sub
dec
mov
pop
into
xchg
ins
pop
lea
adc
rcl
mov
(bad)
jne
popa
imul
push
fidiv
sub
mov
push
mov
inc
dec
jne
lock
mov
(bad)
xchg
sub
cli
push
lock
mov
repz
xor
adc
push
mov
mov
dec
clc
fild
pop
or
fisubr
repz
repz
cs
fs
adc
ficomp
inc
dec
adc
inc
test
jne
inc
xchg
in
mov
mov
add
mov
aas
ja
pop
xchg
push
scas
mov
lahf
push
xchg
btr
push
hlt
inc
into
adc
adc
cmp
add
adc
adc
add
add
mov
push
dec
mov
cmp
pop
ret
add
mov
bound
pop
aad
xor
cmp
mov
mov
inc
add
sub
sbb
cmp
imul
jbe
stos
movs
push
and
sbb
test
xor
lea
outs
pop
xchg
mov
jge
xor
pusha
adc
inc
shl
add
push
rcr
or
sub
in
mov
inc
jge
push
cli
or
or
retf
scas
or
or
or
in
iret
fild
in
push
cwde
mov
push
loope
xchg
dec
pop
imul
mov
mov
add
out
inc
aaa
dec
xor
push
xor
imul
imul
shr
ja
mov
xor
and
jno
sub
ret
sti
push
cli
stos
or
inc
in
add
push
lods
adc
in
popa
sbb
ja
mov
sub
adc
test
fwait
out
adc
add
cmp
cmps
pusha
jmp
mov
push
push
sti
or
imul
cmp
jmp
out
fucomip
leave
add
sub
call
das
or
test
dec
dec
arpl
xchg
dec
jae
out
out
out
mov
lock
xchg
nop
sub
arpl
add
test
mov
sub
and
(bad)
fdivr
push
xor
or
das
pop
dec
inc
sbb
xchg
loopne
jmp
push
lea
mov
cmp
btr
adc
ss
pop
in
jmp
add
cli
pop
add
cmp
mov
sub
daa
dec
jnp
push
push
es
push
and
and
(bad)
das
mov
xchg
xchg
(bad)
(bad)
cmp
dec
or
jmp
xchg
or
shl
xor
(bad)
in
pusha
pop
jae
jno
adc
mov
sub
sbb
adc
push
lods
fisubr
lea
inc
cmp
shl
out
adc
movzx
aam
imul
push
mov
or
test
jbe
xor
ret
in
repnz
mov
ins
stc
mov
add
or
cld
nop
rol
dec
and
cmp
adc
rcr
inc
inc
mov
mov
cmps
xor
inc
dec
out
or
loopne
inc
dec
stos
push
inc
fs
in
ret
inc
mov
sbb
inc
push
sti
and
inc
clc
add
and
jl
(bad)
dec
stos
inc
add
xor
inc
sub
fs
fcmovnbe
adc
mov
mov
fcom
movsx
ret
and
cmp
mov
popa
das
add
add
mov
add
mov
dec
mov
lahf
dec
ror
dec
xchg
iret
and
adc
sbb
jo
das
lods
sbb
sub
push
into
mov
xchg
cld
addr16
inc
cmp
pop
popa
sbb
(bad)
pop
push
into
jmp
bound
inc
enter
movs
jae
jmp
mov
xor
int3
mov
test
fadd
or
enter
enter
mov
jecxz
adc
sbb
adc
mov
sub
enter
inc
out
xchg
jbe
pusha
loope
test
pop
fadd
push
sbb
jne
ret
dec
push
adc
clc
dec
ds
jmp
(bad)
cwde
adc
inc
xchg
cmp
inc
dec
mov
inc
xor
or
shl
xor
or
add
sub
daa
add
movs
xor
pop
dec
retf
aaa
sbb
daa
loope
fwait
xor
mov
xchg
call
push
xor
pop
sub
ins
sahf
add
pop
das
clc
arpl
enter
mov
dec
icebp
inc
mov
sub
adc
shr
xchg
gs
push
inc
adc
pop
call
mov
pusha
adc
or
cmp
movs
push
push
or
sub
mov
mov
xchg
out
sahf
mov
push
pop
inc
pusha
sub
dec
stos
pop
push
fs
add
mov
jbe
mov
cmp
mov
mov
mov
inc
inc
daa
fisttp
xor
out
mov
add
xadd
jae
mov
rep
jo
int
into
and
dec
inc
retf
mov
loope
dec
retf
adc
sbb
mov
sbb
jle
aad
(bad)
cs
cmp
jl
add
repnz
push
pop
dec
ins
gs
mov
aam
aas
adc
xor
inc
sbb
or
ss
mov
scas
xor
in
(bad)
(bad)
pop
daa
dec
sbb
stos
out
add
loopne
or
and
test
je
(bad)
leave
cmps
add
inc
jb
gs
or
dec
gs
or
push
stos
jb
outs
mov
add
sub
cmp
jmp
adc
nop
sub
add
cmp
adc
clc
aas
push
sub
jb
sub
je
das
adc
or
and
mov
add
dec
adc
sti
xor
or
xor
push
pop
inc
shl
je
cmp
jg
add
sbb
dec
fist
nop
popa
in
nop
test
adc
sbb
add
nop
adc
sti
nop
mov
xor
clc
add
jmp
cmp
and
pop
call
retf
xor
adc
adc
aad
or
daa
and
inc
push
mov
leave
and
fcom
mul
add
push
xchg
push
imul
pop
push
es
inc
xchg
dec
sub
add
into
and
push
nop
xchg
adc
jmp
into
cld
mov
and
inc
push
jl
gs
mov
adc
dec
sub
inc
mov
das
jae
lock
add
xchg
out
push
retf
sar
mov
inc
dec
dec
sbb
dec
hlt
mov
adc
cmp
or
inc
retf
inc
ficom
adc
adc
hlt
lods
cdq
nop
data16
sbb
sbb
push
push
gs
rol
ret
push
sbb
lock
repz
push
in
and
hlt
dec
loopne
cmp
in
mov
or
jns
adc
add
movs
adc
(bad)
idiv
and
pop
mov
fmul
fdiv
and
jl
mov
stc
adc
sbb
dec
or
pop
adc
inc
pusha
add
dec
mov
test
jno
mov
shl
(bad)
dec
mov
(bad)
dec
clc
and
enter
add
add
inc
dec
and
jp
inc
jp
inc
sub
(bad)
adc
mov
or
mov
aas
cmps
cmp
fisttp
add
mov
nop
push
les
ja
add
dec
cmp
mov
inc
in
and
inc
add
or
out
pop
mov
cmp
add
les
in
push
jmp
mov
add
pop
(bad)
call
movs
mov
jne
jns
cmp
dec
or
or
shl
ins
and
outs
adc
test
(bad)
sub
retf
push
rcr
shl
xchg
rol
pop
popa
sti
outs
jae
test
adc
adc
inc
push
dec
or
(bad)
dec
push
xchg
pop
dec
cs
mov
push
add
loopne
in
sbb
dec
add
addr16
cmp
mov
xchg
fisub
sub
rol
mov
jge
adc
add
push
fcomp
lea
pop
push
add
jne
pop
les
sar
push
lds
xchg
mov
out
mov
jne
pop
add
stc
xchg
daa
xchg
mov
imul
push
push
cmp
push
movs
sbb
push
loopne
xchg
xor
adc
gs
push
jg
sbb
lea
rcl
jns
mov
sub
fldenv
adc
test
ins
aam
aaa
je
adc
mov
dec
paddusw
add
(bad)
jns
push
sbb
push
sub
lahf
push
adc
cld
imul
aaa
ins
in
mov
(bad)
xlat
test
mov
inc
call
test
into
cmp
xor
add
mov
sbb
add
dec
add
pop
sub
(bad)
jmp
push
rcl
dec
mov
jmp
mov
or
scas
ss
jne
dec
adc
xchg
add
enter
fprem1
call
push
add
fadd
pop
jmp
or
retf
inc
or
das
hlt
call
jns
add
imul
imul
daa
imul
sbb
dec
adc
inc
inc
jnp
sbb
sbb
dec
pusha
pop
clc
std
inc
aam
std
or
inc
add
push
hlt
mov
add
push
cmp
fadd
aas
cmp
sbb
and
in
bound
cmp
mov
mov
mov
or
out
cwde
inc
adc
or
dec
pop
lock
(bad)
cmp
stos
inc
cmp
adc
retf
pop
dec
push
jo
icebp
std
cmps
fs
push
push
add
movs
adc
test
xchg
pusha
lds
pop
js
mov
out
add
sahf
dec
fcom
adc
push
xor
call
sbb
test
sub
je
cmp
jb
cmp
ja
pop
adc
inc
daa
push
push
or
popa
scas
mov
push
or
or
push
fimul
and
fstp
add
push
inc
pop
dec
jne
mov
loopne
adc
or
stos
idiv
stos
adc
xchg
dec
jne
sub
xor
sub
jnp
test
or
or
dec
mov
push
push
dec
imul
shr
sbb
lock
lods
cdq
pop
out
inc
or
push
ins
lock
and
cld
jge
xor
sbb
rcl
jbe
add
push
lea
in
sub
js
pop
or
xchg
push
call
sar
out
sti
push
(bad)
lds
fnstenv
pop
shr
pop
fisttp
push
fild
test
jle
ins
dec
shl
xchg
cmp
jmp
pop
add
dec
je
call
dec
loope
or
inc
jl
inc
fdiv
cmp
cmps
jns
sbb
add
xor
ret
or
ds
fiadd
retf
mov
and
dec
sbb
test
dec
jg
ja
dec
mov
ret
cmp
jge
xlat
cs
xchg
out
pushw
jo
mov
aam
or
xchg
adc
adc
and
ja
loop
mov
add
xor
add
push
(bad)
jbe
push
push
pusha
pop
mov
pop
pop
mov
lods
cdq
add
and
mov
push
inc
ds
dec
int3
jb
out
push
mov
test
das
xchg
pusha
add
or
(bad)
sbb
mov
sbb
std
call
add
mov
add
ins
imul
mov
sub
je
jb
js
push
push
jno
or
pop
sbb
jnp
jl
sub
xchg
jae
and
pop
xchg
add
add
ins
mov
push
or
scas
mov
or
nop
push
out
mov
xor
ud2
cmp
xchg
push
pop
pushf
mov
xchg
enter
mov
dec
les
movs
xchg
scas
pusha
stc
sbb
or
test
in
push
popa
jae
mov
inc
idiv
jmp
daa
mov
jnp
mov
dec
xor
les
jo
cmp
xor
xor
push
xor
rcl
fsub
sbb
xchg
mov
xlat
fadd
cmp
in
mov
dec
or
in
leave
int3
not
adc
lock
or
hlt
pop
add
aaa
adc
dec
dec
xor
ror
cld
fisttp
out
mov
loopne
pushf
pop
daa
add
jnp
pop
xchg
or
or
lock
lock
inc
xor
in
jecxz
jmp
sbb
xchg
add
fcomp
sbb
pop
pushf
or
and
loope
and
add
adc
sub
xchg
jg
or
push
jo
out
pop
or
fld
xor
rol
cmp
aam
jecxz
and
int3
or
xchg
inc
xor
sbb
and
arpl
cmp
sub
dec
rcl
xchg
or
in
popa
aaa
dec
adc
leave
add
stos
mov
pop
pop
pop
mov
das
dec
adc
les
xchg
test
stos
nop
push
loopne
jmp
sub
cmps
out
and
or
fst
push
es
push
xor
fnstcw
arpl
xor
imul
sbb
dec
ins
adc
popa
sbb
jl
adc
jmp
cs
xchg
sbb
adc
jne
nop
addr16
shl
xor
add
xor
jge
xor
mov
rcr
xlat
sbb
xchg
inc
dec
sub
cmp
in
and
sub
add
ins
rcr
xor
jo
je
ret
scas
jbe
and
add
nop
jno
mov
push
rcr
push
pushf
js
xchg
jnp
xchg
out
add
mov
add
sbb
std
ror
sbb
sbb
push
ins
popa
add
xor
cmps
stc
mov
mov
movs
call
enter
mov
or
mov
push
out
mov
mov
xchg
lods
or
ins
add
cmp
mov
lods
mov
adc
clc
inc
ficom
ds
es
ja
mov
std
fs
xchg
or
and
pop
aaa
and
shr
dec
dec
dec
outs
pminub
(bad)
int3
or
mov
xchg
or
sbb
mov
inc
or
dec
retf
cmps
cli
and
in
arpl
mov
adc
mov
or
inc
(bad)
in
push
mov
loopne
add
popf
adc
sub
fst
loope
add
outs
jecxz
outs
mov
adc
ret
add
sub
inc
fwait
stos
and
adc
or
add
xchg
jp
jae
(bad)
and
cmp
sbb
gs
retf
cmp
xor
sbb
dec
add
pop
sti
popf
clc
cmps
mov
mov
and
cmp
cs
mov
jle
or
fyl2xp1
or
xchg
add
sub
mov
loopne
jnp
inc
push
dec
dec
or
add
jo
xor
and
adc
or
vmwrite
lahf
icebp
ins
push
or
jp
jmp
nop
pushf
pop
cwde
pusha
cmp
mov
add
add
out
and
inc
pop
inc
fdivr
out
mov
sub
pop
push
mov
mov
add
dec
sbb
test
jmp
inc
xchg
sub
adc
je
push
out
and
adc
int
and
or
fwait
lahf
ror
ins
ja
nop
dec
push
imul
call
cmp
(bad)
(bad)
dec
stc
xlat
xchg
js
push
shr
ret
pusha
je
cs
push
scas
dec
push
cwde
sbb
adc
retf
leave
and
push
dec
adc
add
sbb
dec
js
shl
add
shl
pop
loope
add
and
and
aaa
add
aaa
shr
scas
fwait
ja
push
dec
push
scas
sti
jmp
cmp
repnz
xchg
outs
sub
add
or
sbb
movs
adc
mov
mov
inc
inc
iret
into
loope
mov
rcr
add
pushf
push
and
dec
fisub
jge
sub
les
pop
cmp
xchg
pop
mov
adc
in
xor
loop
add
fwait
or
fs
or
outs
push
fs
cdq
jb
fild
aaa
push
imul
push
or
xchg
ins
loopne
pop
es
shl
xor
inc
push
and
ins
or
add
jp
aas
xor
mov
arpl
loop
xchg
and
and
mov
or
loope
pop
jne
or
fsubr
imul
dec
add
fldenv
inc
popf
or
xchg
add
xor
mov
mov
and
dec
xchg
call
or
mov
pop
push
les
xchg
rcr
daa
push
and
sbb
xlat
out
mov
faddp
mov
or
gs
sbb
dec
adc
or
or
(bad)
inc
addr16
rol
popf
fld
push
and
adc
enter
jl
dec
add
xchg
sub
sub
or
push
pop
arpl
jo
outs
push
test
rol
cmp
dec
daa
cmp
or
adc
inc
adc
mov
dec
cmps
mov
ss
push
mov
je
mov
test
adc
xchg
pop
dec
xor
sbb
or
rcr
leave
lods
xor
add
or
sub
add
mov
clc
adc
jmp
mov
ror
xor
jmp
jl
fcom
sub
cmp
jg
stos
lds
aad
add
push
aaa
mov
cmp
push
sub
or
cmp
and
dec
retf
nop
add
xor
popw
inc
inc
wrmsr
mov
call
daa
arpl
add
clc
bound
je
sbb
push
push
mov
dec
pop
inc
les
call
adc
scas
scas
cmps
fcom
inc
adc
pop
add
dec
sbb
lods
sar
add
rcr
sub
or
sub
inc
mov
cmp
test
dec
rcr
sub
outs
movs
xchg
cmps
dec
outs
ins
push
enter
imul
push
pop
add
mov
in
and
inc
push
ins
pop
push
and
sbb
sbb
dec
dec
adc
lahf
out
dec
add
sub
in
xchg
sbb
push
es
pop
outs
in
in
xchg
adc
adc
and
push
sub
in
adc
sbb
sub
add
nop
je
push
sahf
xlat
leave
mov
dec
add
cmp
or
daa
mov
test
inc
sar
cli
adc
fbld
ror
bound
cmps
adc
jbe
and
pushf
add
pop
fmul
jb
mov
ret
retf
dec
add
jb
push
push
pusha
neg
sbb
push
or
sub
mov
call
loopne
xor
mov
(bad)
xchg
dec
lock
cmp
daa
jb
outs
clc
into
push
xor
adc
mov
cmovp
mov
pushf
pop
sbb
inc
sbb
inc
xor
stos
add
adc
pop
push
lock
std
add
clc
or
cwde
xlat
xchg
sysexit
inc
popf
push
jmp
cmp
sub
sub
and
(bad)
dec
call
fstp
psrlq
jecxz
or
sub
dec
mov
rcl
addr16
dec
xchg
xor
push
mov
outs
test
test
cmps
shr
fwait
push
daa
vpaddsb
xor
imul
mov
inc
add
pop
cmps
fiadd
cmps
(bad)
ficom
xchg
or
ins
dec
dec
push
sbb
adc
mov
cmp
cmp
or
jbe
add
gs
test
mov
lds
pop
or
arpl
sbb
outs
or
adc
pop
jo
jp
fcom
aaa
out
pusha
adc
dec
adc
mov
test
add
inc
jl
mov
xchg
retf
or
icebp
nop
jno
and
pop
mov
sub
mov
shr
xchg
loopne
add
or
push
or
fs
inc
jle
add
inc
jb
fadd
push
xchg
(bad)
rol
mov
add
sub
daa
mov
sbb
jae
cwde
add
fsub
add
push
aaa
sbb
mov
sbb
add
outs
dec
xchg
dec
jge
add
push
test
add
push
pop
add
push
aam
shr
movs
inc
out
mov
(bad)
je
ret
jno
push
push
aaa
pop
nop
sahf
movs
sbb
mov
aad
dec
test
xor
imul
cmp
dec
mov
xor
inc
mov
ins
loopne
push
push
pop
adc
push
addr16
pop
add
dec
or
add
scas
inc
xchg
inc
cs
pop
pop
dec
inc
push
lds
fst
cdq
inc
dec
cmp
ins
sbb
(bad)
movs
dec
push
pop
test
pop
test
add
addr16
and
jns
adc
mov
stos
test
mov
mov
inc
sub
adc
pop
mov
jmp
sbb
and
push
scas
(bad)
int
sub
ret
jg
leave
outs
dec
ret
xor
adc
xor
scas
jo
lock
adc
fs
loop
push
aaa
popf
mov
clc
les
cld
push
std
pop
mov
cmc
mov
mov
sbb
mov
sub
and
addr16
jns
and
ja
cmp
inc
pusha
push
test
out
adc
cmp
jle
(bad)
jnp
add
out
repz
inc
xchg
lahf
test
sti
movs
mov
cdq
and
dec
je
sbb
cs
fs
out
test
xor
inc
mov
xor
imul
mov
xor
sub
mov
jge
adc
push
lock
in
scas
loopne
dec
inc
lock
push
push
aas
in
jae
jo
jecxz
fnstcw
ja
or
in
pop
push
push
dec
sbb
out
ja
call
sub
jb
adc
and
xchg
arpl
call
xchg
or
or
mov
adc
clc
dec
loope
xor
lock
pop
enter
cld
sbb
xchg
add
pusha
icebp
mov
fs
and
xor
sbb
sub
shl
xchg
adc
ins
inc
xor
out
inc
jbe
xchg
adc
popa
loope
cmp
adc
fmul
ins
sub
inc
js
das
xchg
xchg
cmp
and
add
retf
dec
sbb
and
inc
les
mov
xor
add
inc
std
ror
jae
imul
xchg
lea
xor
or
xor
or
fs
mov
scas
je
cdq
fs
xor
xor
pushf
pop
sahf
out
xor
cmp
adc
pushf
cmp
pusha
xor
iret
inc
inc
inc
inc
dec
in
repnz
dec
dec
dec
adc
and
adc
mov
dec
xor
cmp
push
push
push
dec
cs
repz
push
pop
pop
pop
ja
add
pop
add
dec
outs
pop
adc
xor
sbb
fcom
and
shr
pusha
fwait
enter
add
mov
pop
cmp
pop
push
add
ds
add
jns
add
repz
push
inc
push
cld
jl
hlt
jns
out
clc
push
hlt
cwde
movs
sub
jp
out
in
push
call
dec
scas
or
or
jnp
jne
pop
and
push
je
loope
mov
lods
test
or
out
pop
and
xchg
and
shl
add
cmp
jl
leave
add
add
mov
inc
mov
aaa
dec
adc
adc
lods
pop
add
push
popf
jae
pusha
fadd
scas
push
dec
repnz
add
jge
push
mov
pop
jo
clc
push
mov
(bad)
mov
mov
cmp
aaa
inc
hlt
lea
jns
adc
clc
mov
or
loopne
add
mov
inc
xchg
xchg
mov
pop
adc
add
mov
adc
ins
or
dec
mov
test
jno
xchg
sbb
pop
push
es
push
aam
push
pop
lods
pop
stos
push
dec
mov
sbb
stos
std
das
stos
inc
stos
ss
pop
push
dec
test
aas
out
xor
mov
xlat
dec
sahf
test
test
rol
aam
mov
push
mov
mov
mov
cmp
mov
dec
mov
cmp
mov
jmp
mov
lock
xor
and
fmul
pop
inc
sub
mov
pop
inc
add
fmul
xor
dec
popf
pop
pop
mov
inc
add
shr
add
and
and
xor
xchg
sbb
inc
test
rol
mov
xchg
xchg
add
mov
push
ret
inc
mov
adc
xor
adc
push
ss
inc
push
dec
pop
test
nop
mov
outs
pop
stc
fnsave
pop
sbb
jmp
cmp
cmps
jecxz
or
add
add
push
pusha
and
mov
or
mov
(bad)
and
fwait
sub
rcr
mov
sar
or
pop
fs
outs
cmp
inc
sub
xor
(bad)
nop
pop
jnp
sbb
add
nop
add
cmp
push
sar
test
gs
or
sbb
pop
enter
in
adc
out
ficomp
add
xor
imul
push
push
add
outs
(bad)
xchg
std
ds
add
pop
inc
add
cmp
loopne
xor
hlt
ds
jnp
int3
push
je
jle
pop
sbb
or
adc
shl
or
adc
push
js
push
call
and
or
dec
fcom
nop
mov
mov
out
mov
in
dec
jle
or
ret
cmp
mov
call
add
adc
nop
add
cmp
adc
cmp
fnstcw
fwait
push
mov
ror
push
fist
mov
fisub
(bad)
lahf
push
sahf
mov
sub
and
adc
cwde
not
add
cmp
mov
xor
mov
sbb
dec
inc
mov
lock
or
outs
or
cmp
pop
leave
push
repz
mov
jo
test
mov
or
aam
loope
adc
js
cmp
add
pop
push
sbb
je
fimul
xor
sbb
or
add
and
cmp
in
nop
add
add
push
dec
rol
inc
jo
push
push
out
ins
xchg
inc
pop
jo
push
lods
mov
repnz
and
imul
les
fidivr
shl
and
out
cmp
jmp
mov
sub
mov
test
inc
dec
jmp
push
xchg
mov
add
pushf
pop
xor
test
dec
inc
and
and
iret
adc
popf
aad
(bad)
push
push
and
loopne
sub
dec
rol
call
jl
xlat
ja
in
dec
(bad)
jns
inc
arpl
dec
and
retf
stos
xchg
adc
es
call
cmp
xor
jp
sbb
adc
mov
(bad)
adc
stc
cmc
dec
jmp
sbb
mov
xor
(bad)
stos
or
push
and
dec
xor
call
mov
mov
cmps
jne
dec
(bad)
jo
xchg
jo
aam
pushf
lods
enter
aaa
aam
nop
and
out
mov
cmp
xchg
add
aam
add
sahf
into
inc
jge
dec
xor
pusha
jmp
jl
test
mov
movs
sub
ret
mov
mov
pop
iret
push
add
add
out
call
sbb
mov
xchg
push
call
lock
mov
or
stos
repz
add
fs
sub
fs
sbb
dec
inc
sar
test
inc
inc
repz
dec
and
dec
push
shl
adc
push
and
gs
or
mov
push
xchg
ins
mov
jb
adc
and
inc
cs
pop
xchg
in
push
mov
adc
dec
test
bswap
mov
and
add
(bad)
mov
jnp
(bad)
or
and
dec
in
aaa
bound
loop
mov
inc
xchg
aam
popf
leave
or
ror
enter
dec
lock
mov
inc
push
pop
inc
ret
fdiv
loop
cmp
jp
push
shl
xchg
mov
mov
pop
and
xor
daa
scas
cmc
call
cld
int3
jno
pop
call
or
adc
leave
mov
xor
(bad)
sub
and
aaa
adc
cmp
loopne
jmp
sbb
jp
adc
ret
je
cmp
mov
adc
mov
inc
dec
pop
xlat
inc
mov
pop
imul
xchg
xchg
inc
lea
sbb
inc
repz
jo
cld
and
and
lods
lea
lods
or
sub
sub
loopne
and
adc
(bad)
sub
jge
mov
adc
xchg
in
pusha
popa
mov
xchg
(bad)
je
pop
jmp
xchg
dec
ds
gs
adc
mov
mov
(bad)
ins
push
popa
and
movs
add
mov
mov
test
dec
adc
call
and
aaa
sbb
inc
xlat
sub
xchg
push
fdivr
scas
pop
and
das
and
jge
test
mov
inc
movs
inc
inc
fcom
add
jae
(bad)
jno
(bad)
dec
sub
add
pop
xchg
adc
inc
add
cwde
dec
jbe
nop
(bad)
shl
inc
shl
and
xor
cmp
adc
or
push
nop
cmps
add
imul
cmps
dec
test
movs
or
movs
les
and
sub
mov
cmp
test
or
jo
fsub
fbld
push
push
or
mov
xchg
inc
test
inc
xchg
je
pushf
pop
mov
jecxz
xchg
mov
add
xor
adc
movs
or
push
cmp
xor
invd
dec
add
xchg
call
iret
push
inc
xor
test
add
dec
test
fdiv
xchg
push
ja
push
fiadd
jg
adc
call
lods
jmp
enter
mov
fcom
xor
mov
rol
and
fst
popa
and
dec
pop
jae
adc
mov
jmp
inc
sbb
arpl
push
(bad)
imul
cld
xor
inc
mov
in
push
and
xchg
and
or
xchg
out
and
les
adc
jno
mov
inc
push
mov
jge
mov
lahf
clc
daa
es
jmp
fist
pop
mov
pop
(bad)
jo
xchg
and
in
sbb
add
popa
xor
cmp
and
or
and
call
inc
int3
je
jne
retf
aas
ret
je
dec
push
mov
(bad)
dec
sub
scas
jl
mov
(bad)
adc
xor
int
or
cmp
or
aaa
or
mov
(bad)
inc
mov
xchg
mov
or
mov
or
and
call
mov
jae
xchg
xchg
pop
xlat
loop
add
mov
sbb
dec
dec
arpl
xchg
push
movs
adc
inc
push
cmp
test
aad
repnz
xchg
in
int
sar
jmp
xor
jne
add
sahf
dec
stos
mov
inc
jl
addr16
or
pushf
jne
add
dec
(bad)
in
cwde
add
loopne
ss
jne
or
pop
pop
xchg
push
icebp
sbb
int3
push
ds
call
sub
pop
jp
pop
mov
aam
scas
or
scas
test
loope
retf
jae
inc
(bad)
enter
pop
out
in
enter
movs
ret
fsub
call
in
mov
lea
cdq
fsubr
push
fdiv
jl
inc
(bad)
aam
lods
imul
in
ret
adc
xchg
(bad)
xchg
pusha
loopne
add
jecxz
xchg
(bad)
xchg
and
inc
les
in
test
adc
test
sub
jno
call
dec
xor
dec
stc
mov
add
sub
inc
or
push
inc
cmp
xor
clc
cmp
(bad)
imul
mov
aaa
fistp
adc
rol
sbb
or
aam
pop
or
add
outs
adc
pop
sub
push
xchg
add
in
dec
cwd
mov
add
dec
push
or
iret
dec
inc
or
in
hlt
cdq
and
xlat
adc
xor
inc
add
mov
fsub
rol
sub
in
add
adc
push
mov
loope
ds
out
dec
dec
mov
mov
in
test
xchg
pop
xor
test
fsub
inc
ret
mov
cmp
inc
add
ins
mov
or
aad
fsubr
popw
aas
add
pop
or
ins
das
pop
mov
pop
les
xor
rol
add
stos
and
jbe
ret
cs
nop
xchg
mov
lock
in
pop
add
and
add
and
jo
cmps
int3
jl
inc
adc
fs
shl
test
and
mov
cmp
cmp
out
mov
add
imul
popa
push
popf
dec
pop
add
push
adc
loopne
les
push
mov
push
add
mov
shl
cli
push
dec
add
and
popf
and
mov
inc
loopne
ins
pop
test
outs
push
daa
dec
adc
pop
add
lods
push
xchg
aad
popf
or
retf
inc
mov
jno
xchg
inc
mov
inc
inc
add
cmp
push
adc
popf
clc
in
cwde
ret
outs
and
dec
outs
popa
adc
(bad)
imul
and
das
in
call
arpl
es
sbb
(bad)
and
sti
add
xchg
sbb
push
rcl
sub
or
jl
sar
pop
ds
dec
mov
push
sub
mov
dec
inc
or
and
icebp
scas
int
xchg
in
add
fst
or
sbb
stos
and
or
xor
dec
and
addr16
clc
jecxz
push
leave
and
retf
daa
mov
mov
xchg
mov
pop
sub
or
mov
(bad)
mov
mov
or
sbb
test
sbb
lahf
cmp
adc
add
mov
cmps
mov
test
fdiv
xor
movs
les
aas
or
sbb
shl
or
leave
add
add
sub
mov
cmp
mov
sbb
sbb
movs
in
cmc
cld
jg
mov
mov
data16
inc
adc
pop
push
popa
sub
and
jae
sbb
or
and
add
(bad)
xor
out
adc
ins
call
dec
mov
cld
jecxz
cld
dec
jb
inc
addr16
(bad)
mov
mov
add
xor
add
and
and
test
jb
cmp
cld
mov
mov
and
test
or
mov
sti
js
(bad)
cs
(bad)
sbb
ror
xchg
xchg
ins
jbe
cld
mov
rol
cmp
xor
and
mov
(bad)
retf
inc
or
mov
jmp
mov
cmps
test
and
mov
imul
inc
push
nop
cld
cld
imul
push
pop
add
hlt
sti
movs
hlt
(bad)
mov
and
mov
xlat
sbb
movs
hlt
inc
jno
or
clc
mov
popa
aad
jae
jmp
sbb
fist
mov
loop
js
xchg
cmp
test
fwait
xchg
dec
jle
and
cld
(bad)
push
mov
or
dec
sub
push
mov
pusha
mov
scas
xchg
pushf
fs
js
js
jb
add
dec
add
adc
pop
out
scas
in
and
repnz
pop
mov
add
ret
loope
inc
mov
nop
pop
cmps
scas
fistp
mov
sub
imul
mov
and
xor
clc
nop
mov
cwde
pop
push
scas
xchg
mov
xor
retf
mov
cmp
jg
add
cmps
bound
cmp
jp
sbb
xchg
add
or
xchg
test
sbb
movs
inc
sahf
cmp
push
shl
aam
je
jp
mov
fisttp
fdiv
jg
das
in
and
fmul
stos
(bad)
mov
fmul
out
(bad)
in
shr
test
mov
lea
mov
jge
adc
cs
pop
test
mov
add
sub
dec
xor
(bad)
fild
rol
scas
imul
sbb
fisttp
cmp
mov
adc
pusha
es
in
mov
aaa
or
mov
sbb
inc
pushf
or
inc
add
mov
movs
cld
adc
scas
pusha
add
test
fld
in
push
xchg
push
jmp
ficomp
xor
inc
cmp
or
ret
sub
mov
dec
enter
jnp
mov
cmc
pop
stc
sbb
xadd
cs
xor
or
ret
loopne
sub
push
inc
pop
movs
data16
in
enter
pusha
fmul
jne
imul
ja
jl
add
cmp
adc
fdivr
loopne
adc
shl
(bad)
stos
mov
fist
xor
outs
or
jnp
sti
and
inc
push
pop
and
daa
and
add
jo
dec
je
inc
add
xor
push
ret
call
test
call
dec
fild
dec
(bad)
stos
mov
lods
retf
or
mov
mov
pushf
mov
ja
mov
es
sub
loop
fwait
add
pop
adc
add
je
data16
cmp
xchg
xor
add
pushf
push
jns
mov
lahf
dec
dec
loope
dec
jbe
cwde
jp
lock
ret
push
sub
or
cs
aam
aas
(bad)
xor
rcr
and
push
enter
fwait
test
scas
adc
ja
cmp
xchg
int
in
pop
dec
add
and
mov
scas
sub
sub
adc
add
cmp
or
test
in
das
dec
outs
or
jmp
inc
dec
inc
inc
and
adc
add
pop
or
xor
dec
pusha
pop
rcl
cs
and
pop
sub
adc
inc
mov
test
scas
jecxz
mov
es
popa
fwait
test
xchg
(bad)
xor
ins
sbb
push
cwde
call
mov
adc
or
xor
lahf
loop
or
dec
xchg
or
jmp
sub
jl
add
enter
sbb
push
dec
loop
push
aam
adc
dec
sahf
fdivr
ins
outs
popa
sbb
enter
outs
and
das
dec
jb
nop
das
movs
mov
dec
inc
add
adc
push
ins
enter
shr
loope
adc
push
cs
test
push
cmp
cwde
mov
mov
jmp
xor
mov
xor
or
test
add
out
add
jnp
dec
mov
jno
cmp
daa
inc
push
into
mov
xchg
das
push
rcl
and
inc
jb
push
xor
push
cmps
iret
sub
js
icebp
std
(bad)
adc
shl
and
mov
mov
lock
sub
movs
and
add
inc
xor
ss
mov
stc
stc
stos
or
push
out
pop
push
or
pop
outs
das
push
sbb
pop
xchg
add
cmp
in
mov
xchg
ror
push
or
clc
pop
imul
add
arpl
or
lods
in
mov
test
jmp
xor
push
add
movs
adc
out
push
in
lods
mov
mov
loopne
or
outs
pop
shl
ret
leave
or
add
push
scas
out
mov
fmul
imul
imul
dec
push
movs
jne
in
mov
rol
and
inc
dec
inc
bswap
mov
inc
es
cwde
scas
or
imul
or
add
push
adc
cmps
push
hlt
sbb
call
mov
aaa
pop
shr
cmps
dec
ds
xchg
shl
mov
mov
push
leave
mov
in
cmp
shl
xlat
out
adc
pop
jne
mov
shl
or
sbb
push
adc
ss
push
cmp
cmp
ss
adc
dec
xchg
ret
jae
adc
xor
mov
add
push
nop
or
enter
jns
mov
push
icebp
int
pop
dec
rcl
mov
dec
sar
nop
jl
lock
adc
xchg
popf
xor
mov
dec
jo
test
lods
mov
div
cmp
and
mov
jg
inc
inc
push
push
sub
inc
add
bound
inc
xor
push
push
inc
pusha
aaa
sbb
fmul
(bad)
mov
shl
sbb
or
cld
mov
icebp
pop
repz
hlt
inc
cmp
inc
jl
stos
jae
stos
call
fadd
jge
(bad)
rol
test
mov
fwait
mov
sbb
icebp
jns
imul
and
add
lds
or
add
outs
add
or
jl
add
pushf
mov
add
(bad)
icebp
icebp
add
add
jbe
and
adc
push
pusha
adc
mov
test
(bad)
lods
dec
adc
cmp
ja
xor
xchg
inc
rcl
in
test
popa
stc
adc
add
ret
pop
or
fmul
nop
mov
sbb
inc
addr16
or
jl
push
push
and
cmp
ds
xchg
add
and
ins
pop
mov
jecxz
pop
nop
test
ds
sbb
dec
inc
cmp
cmp
scas
add
xchg
pop
push
mov
enter
dec
mov
dec
bsf
fdivr
mov
sahf
out
push
mov
call
jl
sti
and
enter
aas
loopne
loop
sub
add
pop
mov
sbb
sbb
xchg
push
add
ss
dec
cmp
dec
push
int
retf
in
rol
loopne
rcl
inc
enter
mov
jnp
dec
xor
rcl
sar
sbb
sbb
clc
or
xchg
xchg
lds
sahf
in
enter
mov
sbb
in
mov
mov
xchg
push
sub
add
sbb
enter
js
mov
aad
into
daa
adc
ds
call
lahf
clc
cmp
dec
(bad)
push
fnstenv
cdq
and
sahf
adc
scas
nop
div
js
test
(bad)
(bad)
inc
push
inc
or
add
sub
dec
jae
cmp
enter
in
rcr
sar
(bad)
enter
xchg
les
add
xchg
inc
push
(bad)
les
in
enter
xchg
into
int3
jns
rol
mov
jns
out
mov
out
sahf
in
stc
fst
rcr
add
add
out
and
xor
cmp
inc
ss
cmp
sub
dec
jb
rcl
ret
rol
dec
push
ret
pop
dec
sub
mov
or
lahf
xor
pop
xor
fst
push
pop
int3
jno
jnp
test
das
leave
or
into
adc
push
enter
movs
ret
sar
mov
call
ficom
jmp
mov
xlat
je
push
cmp
movs
cmp
dec
in
(bad)
dec
pop
loopne
out
pop
push
loopne
dec
dec
push
push
lahf
out
sahf
cmp
sbb
mov
lea
push
popf
ret
and
sub
adc
mov
inc
ds
pusha
or
(bad)
mov
(bad)
les
pop
jns
sbb
push
jne
add
inc
icebp
pop
(bad)
fild
rol
jl
mov
cld
in
jnp
adc
movs
popa
outs
cmp
repnz
adc
sbb
call
inc
cmp
repz
pop
outs
dec
test
jns
nop
int
cmp
lds
(bad)
lods
jmp
mov
ffreep
xadd
fiadd
or
aam
test
in
push
push
inc
and
and
add
sub
jb
jg
mov
out
sub
je
sub
mov
fisub
cmps
xchg
jg
adc
sbb
aaa
mov
mov
imul
test
add
es
frstor
sub
shl
push
test
xor
das
adc
push
mov
(bad)
mov
je
xchg
cwde
das
scas
add
(bad)
sub
mov
sbb
mov
or
aam
pop
ins
aaa
sbb
aas
mov
mov
ret
ins
dec
push
and
dec
or
xchg
push
rcl
and
push
ss
inc
xor
push
sar
dec
sbb
rol
push
xchg
rcl
jns
leave
dec
fmul
and
fisubr
push
cmps
nop
mov
retf
test
mov
xor
shr
clc
inc
sub
add
cmps
int3
jo
or
adc
jecxz
enter
sbb
mov
in
leave
mov
mov
and
sub
dec
sbb
cmp
div
mov
xor
push
pop
add
or
inc
cmp
lods
and
(bad)
mov
cld
xor
cmps
cmp
adc
sub
adc
mov
(bad)
retf
sbb
repz
cmps
pop
push
add
rol
or
mov
dec
out
mov
fidiv
mov
imul
movs
inc
fiadd
xchg
mov
das
mov
push
inc
cmp
sbb
mov
mov
add
sub
out
and
and
sbb
(bad)
in
(bad)
aas
add
cmp
mov
sbb
adc
dec
dec
sub
es
cmp
jne
sbb
ins
pop
adc
and
cmp
popf
stos
shl
pop
jmp
fwait
add
outs
mov
movntps
xor
and
xchg
mov
mov
add
adc
addr16
inc
add
sti
add
aaa
cmp
pop
jb
in
popa
push
mov
aad
mov
out
mov
add
jae
mov
int3
call
sub
jne
out
aaa
int
mov
dec
aaa
cs
movs
pop
call
or
clc
int
mov
or
sbb
sbb
add
mov
out
sub
in
pop
test
dec
push
add
mov
cmp
mov
and
js
cmp
addr16
mov
mov
lods
setns
adc
cmp
pop
gs
xor
test
xchg
or
lahf
push
popa
lods
dec
add
jge
and
cmp
mov
out
je
bound
rcr
mov
sbb
lods
mov
cdq
add
push
or
fmul
ror
or
mov
push
xor
inc
jmp
cmp
mov
sub
inc
sub
dec
in
iret
fcmovnbe
or
mov
pop
push
lahf
fdiv
mov
pop
xlat
push
(bad)
cmp
fadd
out
rcl
xor
and
jo
push
iret
rol
add
and
add
das
fldenv
ins
popa
lods
sub
js
or
push
aam
and
push
dec
xor
nop
sar
add
cli
cmp
xor
in
inc
and
cmp
xor
jb
rcl
sti
and
mov
popf
cmp
adc
sbb
sbb
cs
adc
mov
mov
mov
pop
lods
dec
cmp
shl
pushf
pop
add
sbb
ds
out
push
aam
adc
enter
daa
xor
pop
sbb
add
mov
icebp
jno
adc
scas
push
lock
inc
jne
mov
dec
pop
ins
cmp
dec
pop
sub
push
sub
out
and
ret
adc
pusha
xchg
inc
rol
add
or
sbb
mov
xchg
inc
sbb
or
mov
js
adc
adc
les
enter
dec
dec
leave
test
movs
sar
retf
std
mov
sahf
sbb
sar
rol
add
test
ins
or
scas
add
mov
sub
mov
addr16
outs
push
cwde
popa
or
sbb
add
sbb
adc
xor
adc
es
jecxz
ror
ret
adc
rcr
inc
and
or
repnz
mov
aam
adc
mov
pusha
mov
add
das
ret
mov
test
ds
lds
sub
out
lds
mov
push
push
movs
mov
mov
inc
pop
aas
or
cmp
dec
pop
(bad)
fwait
aad
aad
pushw
pop
xor
sbb
jg
sbb
push
(bad)
mov
mov
nop
vsqrtps
inc
xchg
and
dec
xlat
shr
int
push
enter
xlat
xlat
jb
jecxz
mov
cmovnp
add
push
adc
hlt
or
mov
mov
in
sbb
jne
inc
ins
fcomp
je
add
dec
ins
cmp
sub
fst
xor
arpl
dec
cld
mov
adc
sti
sar
pop
sbb
aam
daa
mov
add
xor
lods
push
and
push
arpl
push
push
xor
fmul
mov
ins
and
add
mov
fld
pop
and
jo
sbb
and
ror
js
int
inc
enter
sbb
ficom
pusha
retf
pop
rcr
sbb
test
dec
xchg
inc
xor
sub
lahf
int
sbb
int
ins
fidiv
push
xor
mov
in
dec
push
inc
jb
and
dec
leave
add
not
push
rcr
mov
inc
or
and
dec
iret
mov
inc
sub
xor
dec
int
jae
push
sbb
inc
mov
jg
lahf
xor
xor
xor
add
les
shr
add
xchg
mov
loopne
fucom
or
(bad)
or
gs
jl
sub
and
stc
sbb
jl
rcr
sbb
inc
mov
movs
mov
outs
loopne
inc
jb
das
pop
sub
out
mov
add
sbb
(bad)
(bad)
shr
xchg
sbb
mov
pop
movs
lahf
cwde
in
inc
sti
fbstp
dec
retf
push
inc
call
ret
mov
mov
add
xlat
inc
adc
int3
xchg
retf
sahf
mov
inc
nop
retf
or
mov
lahf
loopne
loopne
pop
xchg
xchg
loopne
test
cmps
imul
jmp
test
repnz
add
and
and
retfw
(bad)
ror
fst
jp
xor
xchg
retf
mov
add
imul
sub
imul
jl
pop
xchg
test
mov
ds
pop
mov
fistp
cmps
mov
or
add
lock
sbb
mov
jmp
adc
daa
or
mov
adc
loopne
inc
movs
xchg
xor
test
dec
xlat
stc
mov
scas
hlt
cmp
jmp
xor
ds
shr
aam
nop
das
gs
xchg
fisubr
mov
adc
lock
rcr
ins
add
inc
lock
loop
sub
cld
push
sbb
loopne
lds
push
xchg
dec
lock
xor
shr
dec
or
dec
(bad)
int
leave
sub
(bad)
bound
jecxz
push
mov
and
(bad)
(bad)
pop
inc
leave
mov
push
es
nop
in
cmp
and
xor
out
adc
into
loop
in
in
sub
cmovle
gs
add
mov
push
mov
and
stos
mov
das
inc
add
popa
outs
mov
shl
or
sbb
(bad)
bound
adc
mov
xor
or
mov
pop
inc
bound
(bad)
popa
push
inc
dec
cli
adc
jo
out
xor
sbb
aad
sbb
mov
fcom
outs
jno
or
xor
add
and
shl
mov
or
and
dec
sbb
dec
mov
adc
dec
push
xchg
or
(bad)
and
pop
jb
and
and
daa
jbe
ins
aaa
add
ins
cmp
test
push
les
pop
pop
lds
mov
outs
stos
les
enter
test
adc
jmp
sbb
pop
cs
in
lds
jmp
and
mov
enter
ret
cld
out
pop
call
sub
out
mov
out
imul
inc
push
xor
fidivr
div
daa
xor
js
jecxz
add
es
mov
shl
push
mov
jb
jbe
mov
inc
push
in
call
aaa
addr16
call
rcr
sub
pusha
pop
outs
cmps
push
jmp
cmp
jmp
dec
lahf
xchg
jmp
fucompp
inc
cmp
fcomp
aad
sbb
push
and
outs
fcmovu
pushf
nop
pop
adc
add
fiadd
inc
push
adc
mov
repnz
jmp
test
add
and
jmp
in
repnz
mov
adc
fcom
in
fcmovu
push
test
imul
dec
inc
inc
jne
mov
das
addr16
dec
sub
ss
out
movs
test
pop
dec
or
inc
add
dec
add
sbb
rcl
repnz
sub
adc
cmp
or
xor
std
jle
push
jg
mov
pop
cmp
and
test
shld
fcom
inc
mov
int
or
or
sub
jmp
pop
add
jb
popf
nop
jle
jbe
jb
push
fild
ror
clc
cmp
and
pop
in
inc
jmp
jb
cld
push
cmp
pop
sahf
out
dec
dec
inc
add
test
or
or
dec
movs
imul
test
sbb
adc
clc
aas
add
repnz
mov
inc
jle
popf
cmp
xor
dec
mov
iret
mov
popa
movs
push
test
imul
gs
stc
pusha
xchg
out
(bad)
hlt
or
enter
lock
jns
stos
mov
mov
out
sahf
cld
add
add
push
lock
add
es
push
cs
jmp
mov
int
es
lock
or
or
adc
jb
push
ret
pushf
test
sub
inc
sub
pusha
adc
imul
outs
lods
jbe
cmps
push
cmps
xchg
or
cmp
xchg
and
lds
sub
ror
add
aas
add
sbb
mov
(bad)
mov
adc
imul
in
push
repnz
fadd
or
mov
mov
sbb
dec
or
cmps
xor
cmp
jle
enter
or
das
add
and
xlat
sub
and
inc
xlat
fdiv
cmps
loopne
adc
mul
xchg
fs
xor
cmp
or
jnp
or
(bad)
adc
shl
pcmpgtw
nop
xchg
mov
jb
add
pop
mov
push
and
lods
in
scas
lock
sub
cmp
fs
inc
ret
pcmpgtd
daa
dec
cmc
jns
jbe
cmp
scas
ins
push
or
aad
mov
mov
or
imul
daa
xchg
out
dec
es
cmp
push
stc
or
stc
jg
push
test
xchg
mov
dec
or
dec
enter
daa
xor
xor
idiv
or
jo
push
fdiv
dec
les
call
dec
inc
std
mov
push
push
pop
jne
sbb
dec
mul
xchg
xchg
mov
lods
push
jo
repz
or
sbb
mov
lea
xor
nop
inc
mov
(bad)
outs
inc
mov
shl
dec
cmp
ja
sbb
push
xor
adc
addr16
push
gs
inc
xchg
lods
enter
dec
sub
jmp
and
add
in
adc
stc
rol
lock
add
fadd
fstp
or
xchg
loope
mov
ins
mov
xrelease
popa
dec
jmp
in
es
cmovb
out
mov
stc
adc
cmp
pop
xor
arpl
mov
xchg
xor
sahf
xor
rcl
mov
or
repnz
(bad)
or
xor
add
cmp
fs
cdq
mov
arpl
aaa
sbb
xchg
clc
fwait
cli
jmp
(bad)
or
test
jmp
cmc
inc
cmp
out
jl
fiadd
jmp
adc
push
retf
mov
add
hlt
push
inc
pop
pop
lea
xchg
shl
psubsw
mov
or
(bad)
in
fld
dec
jo
pminub
lock
in
jl
and
mov
idiv
fcomp
push
dec
pop
out
and
push
or
xor
mov
repz
add
mov
mov
add
aaa
or
pop
(bad)
scas
mov
cmp
jmp
cld
pushf
mov
add
cld
adc
mov
xchg
cld
mov
and
xor
add
std
inc
jmp
dec
dec
std
stos
jo
sub
mov
push
sbb
sbb
jne
xchg
mov
clc
cmp
add
xchg
push
std
mov
xchg
add
inc
sbb
cmp
cs
ins
adc
or
cmp
je
mov
ret
mov
add
inc
inc
sub
mov
mov
mov
inc
sub
shr
mov
mov
mov
bnd
es
and
test
push
mov
cdq
and
inc
sbb
mov
or
add
inc
mov
dec
or
imul
mov
fdivr
mov
mov
push
mov
sub
sbb
aad
and
lds
inc
ret
jmp
test
xor
sub
les
out
add
pop
mov
xor
xchg
outs
(bad)
leave
cmps
push
add
sbb
lahf
or
cmp
add
push
push
arpl
sbb
jo
test
fidivr
dec
dec
mov
shl
scas
push
add
test
ret
daa
mov
xchg
lahf
retf
add
loop
pop
inc
add
dec
xchg
xchg
retf
add
xor
adc
cmps
pop
call
add
adc
cmp
in
add
xchg
sbb
(bad)
sar
in
pushf
push
xor
add
jmp
ret
or
fidivr
and
es
imul
dec
push
pop
dec
and
out
sti
sbb
jl
and
cmp
out
push
fnstenv
repz
in
fs
jo
call
xor
dec
adc
and
or
rcl
outs
dec
mov
adc
pop
in
setb
movs
sar
or
iret
jnp
xchg
push
mov
ins
sahf
xor
lods
add
add
add
movs
aaa
test
and
cdq
pop
xchg
cmps
or
dec
or
dec
popa
xor
in
xchg
test
iret
repz
out
fs
outs
inc
dec
xor
or
clc
out
mov
add
ins
scas
xchg
and
adc
adc
push
add
push
ret
hlt
cmps
pop
(bad)
jmp
xlat
xchg
xor
xor
neg
sbb
js
sbb
adc
xchg
push
pop
lahf
sub
(bad)
aas
pushaw
dec
or
jnp
xor
xor
dec
dec
jle
aad
cmp
adc
enter
clc
pushf
pop
stc
ins
imul
sbb
nop
inc
mov
mov
adc
or
shr
movs
xchg
sub
inc
lea
xor
inc
sbb
mov
and
out
add
into
and
movs
sbb
cmp
adc
pop
adc
and
or
xor
enter
push
adc
je
sbb
cmp
xchg
int3
lahf
adc
jnp
add
jl
adc
rol
imul
inc
aaa
push
ss
stos
pop
imul
les
movhps
fs
lock
sub
jae
test
jae
jno
in
add
push
test
cli
xchg
pop
and
ins
add
aas
adc
outs
add
push
out
fs
adc
lock
pop
and
xchg
rol
out
mov
les
and
xor
add
and
xor
inc
xor
jnp
sbb
mov
shl
push
call
adc
leave
or
popf
xchg
ror
pop
cmp
sbb
or
sbb
dec
sub
xor
cli
es
push
inc
mov
sbb
dec
cmp
or
or
cwde
jnp
dec
xor
pusha
add
push
or
or
or
push
movaps
xchg
push
jns
or
retf
or
pop
or
and
or
or
xor
or
or
enter
or
dec
cmp
sbb
adc
das
pop
je
add
pop
mov
pop
push
hlt
push
ja
sar
mov
in
test
mov
adc
add
sbb
sbb
pop
add
or
in
adc
add
mov
aas
jg
fistp
pop
add
sbb
fistp
adc
(bad)
sub
and
xchg
(bad)
or
sbb
mov
add
aas
mov
outs
xchg
mov
dec
pop
jp
fistp
cmovns
or
lock
xchg
cs
loop
outs
rcr
xor
cdq
sbb
pop
(bad)
and
inc
shl
(bad)
ffree
jns
fstp
fwait
mov
mov
inc
dec
nop
xchg
ror
or
adc
dec
adc
cmps
sub
ja
dec
add
push
ss
arpl
ds
sbb
jmp
jae
dec
dec
jle
arpl
mov
and
fadd
pop
cmps
mov
xor
and
mov
add
xor
xor
mov
mov
cmp
xor
inc
sub
test
imul
loopne
jle
jp
les
dec
(bad)
ss
loope
jp
adc
sub
xchg
js
and
add
mov
add
lea
(bad)
adc
xchg
icebp
movs
xchg
test
cmc
in
in
loopne
pop
in
adc
pusha
sbb
cs
retf
adc
(bad)
ret
cmp
ret
or
aas
cld
sbb
scas
inc
inc
sub
mov
push
dec
(bad)
xchg
or
sub
dec
add
pop
nop
or
mov
mov
ficom
hlt
fld
sbb
and
imul
pop
jle
mov
cmp
fwait
and
jbe
cmp
in
sbb
daa
dec
mov
jbe
mov
leave
and
and
and
sub
imul
sub
jae
push
test
aas
(bad)
lock
lahf
pop
xchg
ins
add
lods
add
add
dec
enter
adc
add
and
pop
adc
adc
push
add
or
mov
adc
and
in
sbb
loopne
std
sbb
and
test
pop
xor
add
dec
sbb
imul
adc
adc
inc
repnz
inc
pop
cmps
adc
daa
stc
sbb
and
out
push
jge
or
cmp
adc
xor
gs
adc
sbb
mov
je
sbb
test
push
(bad)
xchg
leave
and
xor
mov
out
stos
hlt
daa
and
cmp
test
mov
lods
jo
adc
stos
sbb
xchg
add
inc
add
outs
push
(bad)
lods
add
test
push
cmp
sbb
stos
or
bound
mov
pop
les
push
mov
bound
sub
jns
mov
cmp
dec
in
dec
inc
or
cmc
and
stc
inc
dec
les
mov
dec
adc
and
nop
retf
dec
rcr
mov
sbb
xor
enter
enter
mov
dec
rol
in
retf
mov
neg
add
into
xlat
push
loope
mov
jns
std
pop
sbb
add
mov
dec
ja
mov
ss
rcl
ficom
mov
ss
lahf
mov
ds
inc
aas
push
cmp
ds
and
addr16
adc
sbb
ror
pop
add
dec
add
pop
dec
mov
inc
adc
mov
adc
arpl
mov
pop
or
fisubr
dec
popa
js
(bad)
sub
idiv
jb
loope
mov
inc
add
cmp
sub
adc
js
inc
mov
ds
mov
aaa
mov
call
add
lods
mov
or
mov
scas
loopne
loopne
icebp
sub
in
push
or
sbb
push
cmp
in
push
sbb
jbe
nop
inc
(bad)
add
xchg
mov
out
stc
sbb
mov
and
push
xor
mov
or
mov
and
dec
pushf
jge
add
(bad)
in
ja
push
or
dec
adc
int
sbb
lock
sbb
adc
jl
rcl
add
(bad)
fisttp
(bad)
push
sbb
sbb
fsubr
into
push
mov
jmp
in
nop
inc
sbb
nop
push
xchg
out
cmps
adc
scas
cmpxchg
out
and
add
jbe
fsubr
(bad)
push
jns
pop
sbb
fiadd
push
(bad)
xchg
sbb
add
ds
push
push
mov
push
inc
rol
sub
jae
shl
xchg
jae
push
(bad)
mov
and
enter
push
jo
scas
pop
add
enter
mov
fsub
sbb
out
pop
shl
add
mov
(bad)
push
int3
dec
mov
popa
ins
je
iret
inc
jb
mov
in
inc
dec
je
sub
push
inc
inc
(bad)
or
lahf
or
jg
cmp
or
cmp
mov
push
aad
mov
loopne
loop
div
mov
jle
and
mov
outs
push
mov
xlat
rol
mov
push
lahf
add
pop
iret
or
rcl
inc
mov
retf
repz
lahf
push
test
(bad)
ret
int
mov
jl
add
iret
loope
dec
add
test
ss
cmp
cld
and
and
and
sub
and
and
lock
loopne
ficomp
mov
shr
and
jp
dec
xlat
pop
ds
cmp
dec
dec
aas
xor
push
je
and
hlt
push
movs
dec
push
or
adc
and
dec
aaa
adc
mov
loopne
mov
je
inc
fcomp
aad
fcomip
jns
out
jmp
and
jmp
cmp
and
stos
fdiv
cs
adc
test
outs
int3
and
jo
dec
push
aaa
ins
and
and
in
sub
dec
and
lock
add
int3
in
out
int
sub
push
add
pusha
clc
mov
and
xor
sub
test
aaa
loopne
push
and
and
or
push
push
jb
dec
cwde
call
imul
and
out
loopne
shr
sub
and
cmp
fs
sbb
adc
icebp
push
cs
pop
addr16
shl
es
inc
or
inc
sbb
das
sbb
xor
sbb
ss
addr16
enter
mov
sub
fiadd
cs
shl
scas
or
sub
mov
addr16
in
push
dec
sbb
mov
push
sbb
in
jae
scas
mov
or
xchg
mov
daa
hlt
cmp
imul
aaa
inc
das
inc
fild
dec
cmps
mov
mov
daa
dec
pop
add
es
(bad)
leave
test
add
add
aas
xor
pop
cmp
inc
jb
das
cmp
push
nop
int3
aad
js
add
push
jl
push
fadd
add
repz
add
mov
push
sbb
jmp
mov
lods
sbb
jp
jnp
push
add
add
es
pop
mov
pop
dec
and
cmp
mov
jo
adc
mov
or
cmp
int3
add
subps
mov
add
or
push
sbb
sub
std
sub
dec
jae
and
int
cmp
mov
pop
and
or
dec
adc
mov
mov
and
cmp
hlt
jecxz
in
leave
shr
mov
imul
das
js
mov
push
add
not
dec
outs
mov
scas
adc
mov
rcl
in
push
in
push
addr16
in
in
ds
cmp
mov
test
daa
sub
sub
dec
leave
xchg
sub
in
pop
sub
in
sub
or
stos
ins
movs
push
jg
mov
fisttp
ds
fcmove
test
ins
imul
cld
push
fsub
pop
adc
inc
repnz
xor
rol
sub
sub
sub
xchg
(bad)
nop
dec
lods
sub
dec
dec
sbb
nop
jbe
ja
push
add
push
ds
ror
inc
xor
xor
cmp
sbb
aaa
iret
sub
popa
mov
aas
mov
jns
(bad)
int3
inc
adc
push
pop
sub
cmp
and
outs
call
pop
cmps
mov
inc
xchg
adc
imul
adc
push
mov
adc
inc
shl
sbb
push
mov
adc
nop
(bad)
xlat
aam
mov
sub
or
in
pusha
lock
repnz
cs
ins
fwait
into
and
sub
push
imul
mov
mov
cwde
pushf
xchg
mov
test
fldenv
out
push
repnz
xchg
enter
loopne
test
pop
das
xchg
mov
out
pushf
xor
ficom
mov
rcr
push
out
loopne
dec
mov
adc
call
dec
and
bswap
ins
dec
rcl
pop
in
pop
pop
xchg
pop
push
cwde
fs
sbb
push
ins
arpl
dec
adc
mov
add
(bad)
sub
dec
sbb
test
fwait
pop
adc
out
fwait
movs
fwait
pop
jmp
and
dec
inc
scas
dec
popa
adc
(bad)
xor
daa
or
inc
xor
sub
push
mov
push
mov
(bad)
es
mov
pop
fcomp
inc
xchg
inc
add
push
cmp
pop
push
push
cmp
jo
pop
fwait
dec
mov
sar
cmp
cld
sahf
nop
sahf
shr
inc
sbb
and
leave
add
push
inc
lahf
and
shl
mov
les
cmps
cmp
push
add
adc
push
popa
addr16
xlat
mov
or
or
inc
hlt
push
mov
cmp
mov
pushf
sub
and
imul
aaa
push
xor
loopne
shr
nop
pushf
out
lods
aaa
(bad)
clc
mov
popf
in
test
test
sub
or
add
push
lock
xlat
adc
mov
fisub
iret
out
and
ins
test
test
pop
inc
(bad)
cmp
mov
mov
cmp
test
aad
rol
loope
cmp
mov
pushf
out
xlat
sub
pop
mov
out
loopne
fistp
lods
sbb
call
jnp
inc
dec
dec
cmp
and
sbb
shr
or
mov
mov
jg
dec
sbb
stos
(bad)
cmp
sub
xchg
fiadd
cmp
stos
mov
test
dec
add
into
imul
xchg
jo
ins
adc
push
aas
cmp
cmp
jge
xchg
xchg
ins
jne
push
sub
aas
fwait
cmp
pop
rcr
sbb
sbb
jmp
mov
(bad)
adc
mov
push
push
push
(bad)
sub
mov
js
out
lds
sub
push
and
cmp
inc
dec
ja
jbe
lds
sbb
cmps
sbb
jno
sbb
mov
test
sbb
leave
loope
int3
cmp
mov
repz
push
add
add
dec
xor
div
add
inc
add
inc
cwde
inc
je
mov
ret
add
stc
stos
pop
xchg
cmp
cmp
push
mov
inc
cmps
in
or
repnz
pop
retf
sbb
xchg
push
aas
inc
push
mov
xor
adc
test
jmp
out
or
cmp
push
ror
outs
fist
mov
stos
add
push
ss
les
cld
and
inc
ret
fdiv
cmp
sahf
mov
or
mov
scas
sbb
test
sub
es
je
jbe
cmp
fs
jo
aaa
push
xchg
enter
inc
mov
jo
ja
data16
inc
pop
stc
(bad)
in
inc
xchg
adc
retf
fstp
outs
imul
inc
popa
test
rol
aaa
icebp
fcmovnb
jb
cmc
inc
xor
fistp
out
push
lock
retf
shl
fs
add
xor
dec
sbb
and
inc
inc
inc
in
add
pop
inc
mov
inc
sub
xchg
lods
push
stos
fist
fadd
sub
inc
pop
push
inc
mov
inc
sbb
inc
not
imul
adc
pusha
movs
and
adc
sbb
dec
pop
inc
adc
daa
mov
jo
nop
addr16
xor
push
sbb
push
in
mov
mov
and
cs
or
call
and
xchg
pop
ja
call
popa
push
dec
push
pop
pop
es
mov
call
add
add
mov
mov
leave
add
mov
xabort
icebp
inc
dec
test
lock
add
mov
neg
nop
das
in
xor
or
push
mov
test
or
push
xor
jg
test
jnp
mov
stos
iret
ja
test
dec
or
test
mov
fadd
mov
sbb
pop
inc
int3
cmp
xchg
xchg
push
cmp
xchg
inc
push
sbb
test
add
cmp
adc
adc
fst
test
xchg
push
or
adc
repnz
xor
pop
sub
cmp
mov
outs
jo
dec
xchg
dec
retf
or
push
mov
add
adc
or
std
nop
sbb
loopne
dec
xor
fsubr
add
div
mov
ins
sub
or
add
and
jb
int
or
push
pop
jmp
mov
dec
lock
pusha
in
or
cmp
jp
lea
inc
push
push
push
nop
sti
fs
mov
and
sbb
push
es
ror
ror
cmp
mov
loopne
fcom
add
cmp
xlat
sbb
aas
sbb
add
sub
rcl
sub
adc
gs
pop
ins
and
or
inc
cmp
add
retf
xchg
enter
and
stos
add
sub
pop
mov
mov
xchg
inc
fisttp
sub
adc
div
repz
sbb
adc
mov
add
cmp
mov
daa
mov
sbb
mov
imul
lea
dec
add
mov
mov
fisubr
and
dec
or
bound
out
test
ins
fs
mov
and
cld
leave
mov
cmp
inc
pop
(bad)
je
sbb
add
jg
mov
add
stos
ss
dec
pop
mov
sub
mov
push
pop
push
ins
dec
aas
hlt
add
call
pop
push
mov
pop
dec
dec
or
pop
and
dec
or
push
push
test
loopne
mov
add
lahf
out
mov
pop
push
cmp
out
dec
pop
dec
ret
sbb
lahf
xchg
lea
jo
ret
pusha
leave
add
adc
inc
xor
push
inc
js
dec
sub
inc
sbb
cmp
sub
imul
pmulhuw
dec
dec
or
ins
inc
dec
jno
addr16
je
daa
mov
retf
add
pop
and
cmp
dec
add
loopne
cmp
mov
arpl
push
push
add
nop
aam
jmp
fld
aaa
movs
cmps
xchg
or
nop
into
rcl
or
add
dec
into
or
push
or
pop
dec
sbb
outs
or
cmp
or
je
or
mov
mov
or
mov
rcr
shr
xor
lahf
fnstcw
mov
mov
mov
dec
sbb
cmp
shl
fwait
jmp
fld
add
ror
dec
dec
sbb
mov
cwde
rol
test
push
popf
dec
das
repz
dec
jle
push
fs
sbb
mov
out
cmp
jmp
mov
jl
and
dec
aad
fmul
aaa
in
xor
cmp
xor
mov
(bad)
add
and
push
mov
js
push
nop
or
test
sub
sbb
mov
dec
push
leave
mov
fild
inc
nop
retf
inc
jb
fmul
ror
add
test
nop
or
jl
sub
inc
clc
mov
add
adc
xchg
outs
lahf
data16
sbb
in
ret
push
adc
imul
sbb
push
fistp
jns
add
mov
push
push
sbb
mov
sub
inc
push
dec
les
or
push
lds
inc
or
ss
jl
inc
js
and
and
das
inc
mov
mov
ret
cmp
(bad)
out
sbb
and
inc
cmp
sub
xchg
xor
dec
dec
sbb
cdq
daa
sub
shl
mov
stc
dec
rol
pop
add
push
daa
inc
(bad)
and
jo
loopne
loop
push
daa
or
mov
mov
fcom
mov
inc
inc
cmp
cmp
mov
or
inc
push
sbb
ins
pop
add
add
inc
and
and
lea
mov
xchg
test
xchg
ins
xor
sub
inc
sub
sub
xchg
adc
fcom
cmp
stc
xchg
or
call
xor
in
bound
mov
add
pop
dec
aad
sti
push
dec
and
sti
in
pop
mov
add
loop
pop
add
xchg
pop
inc
cmp
inc
ss
inc
cmp
and
lock
rcr
test
mov
test
xchg
aaa
ffreep
lods
(bad)
int3
sbb
popa
mov
popf
dec
add
mov
jecxz
jo
iret
sbb
pop
inc
sbb
or
or
adc
pop
and
data16
(bad)
fs
sbb
or
(bad)
sub
aas
sub
push
sub
adc
add
mov
(bad)
frstor
loope
dec
xchg
call
pop
pop
sbb
dec
xchg
clc
inc
and
push
fs
adc
jae
jmp
or
pop
or
pop
pop
out
push
cmp
pop
xchg
pop
mov
rcr
sbb
pop
dec
push
pop
cmp
inc
iret
popf
adc
fistp
adc
and
pop
add
cmps
int3
out
inc
mov
dec
add
inc
or
je
daa
das
call
adc
pop
push
fld
xchg
push
jns
aam
ds
cmp
je
rcl
in
(bad)
cmp
lods
inc
dec
dec
mov
or
jo
mov
sub
and
mov
es
push
cmp
or
cmp
cmp
jmp
(bad)
in
(bad)
iret
mov
and
sub
in
adc
(bad)
xor
xchg
je
sar
mov
jp
retf
(bad)
cwde
dec
dec
jp
(bad)
cmp
dec
jmp
or
push
test
mov
sbb
sbb
icebp
popa
jns
cmps
test
inc
mov
cmp
stc
lea
pop
cmp
push
shr
lds
stc
jae
jne
loope
clc
cmp
xlat
mov
adc
dec
jb
cmp
cmp
mov
mov
add
lods
push
adc
push
pop
call
repnz
sahf
jno
neg
add
cmp
dec
lock
gs
sbb
xchg
pop
mov
mov
shl
movs
das
in
push
cmp
mov
test
cli
ss
jle
or
inc
jg
inc
cmp
fstp
adc
js
test
xor
pusha
dec
add
aaa
hlt
inc
jo
adc
mov
add
loope
sub
sub
in
pusha
dec
add
sbb
aas
fisttp
repnz
and
test
(bad)
add
add
xchg
xchg
and
test
inc
ss
push
add
or
popa
enter
and
mov
cwde
out
add
movs
cmps
jmp
arpl
mov
ret
mov
pop
and
xchg
and
sub
call
xchg
mov
sbb
xor
add
dec
or
mov
cmp
aam
adc
daa
sub
mov
mov
adc
xchg
cmp
pop
dec
fwait
aas
push
daa
(bad)
push
xor
push
pusha
pop
inc
or
push
in
sbb
dec
call
dec
adc
xchg
sti
xchg
int
mov
fwait
test
fwait
call
test
mov
addr16
lods
pop
pop
or
cmp
arpl
pushf
add
mov
enter
or
and
and
(bad)
in
push
sub
repnz
fwait
sub
jl
cmp
add
cmp
pop
cmp
mov
inc
xchg
mov
out
mov
inc
mov
mov
imul
in
push
hlt
push
imul
or
test
sbb
xor
retf
and
leave
push
sbb
sbb
je
sbb
js
jl
mov
mov
dec
push
cwde
jl
or
mov
adc
inc
inc
in
into
or
sbb
arpl
adc
addr16
lods
cmp
lahf
push
cmp
push
gs
test
push
mov
dec
push
pop
cmps
ret
push
push
outs
jb
inc
mov
shr
popa
shl
imul
lds
ins
push
daa
subps
xor
cmps
test
daa
mov
pop
ins
ins
outs
push
adc
pop
jae
adc
dec
int
inc
outs
rcl
or
or
push
or
push
add
mov
jbe
sub
pusha
sar
cmp
mov
cmp
add
push
das
inc
sub
rol
fistp
jp
imul
inc
pop
add
inc
add
scas
lock
inc
push
cs
push
and
nop
xor
push
pop
pop
sub
inc
xchg
and
in
test
or
aaa
test
and
fsub
call
and
jnp
jne
jge
pop
sub
pop
leave
in
pop
and
mov
sub
dec
and
gs
adc
mov
movs
xchg
(bad)
(bad)
push
or
pop
popf
test
and
test
xchg
ins
cdq
mov
push
cmp
outs
adc
out
mov
or
aam
or
xor
push
fwait
dec
sbb
in
enter
call
sub
inc
clc
inc
sbb
inc
push
fmul
fsubr
mov
push
mov
xchg
psubsw
movs
and
mov
or
dec
mov
repz
fs
imul
test
sbb
inc
outs
clc
test
imul
test
mov
and
(bad)
out
cwde
xchg
cwde
jne
getsec
pop
ror
lods
(bad)
data16
(bad)
xor
sysenter
mov
pop
ficom
dec
movaps
lods
xchg
or
sub
(bad)
stc
push
outs
dec
mov
mov
adc
or
fisub
fcmovnb
pop
rcr
xor
(bad)
in
sub
or
jecxz
xor
add
mov
or
jmp
ins
dec
mov
inc
hlt
pop
mov
xchg
ins
or
pop
(bad)
call
add
pop
pop
mov
fstp
fwait
scas
(bad)
mov
loope
fsub
cmp
jo
mov
inc
mov
int3
outs
out
in
psubusb
and
sbb
and
sub
xchg
sub
xor
cmp
nop
out
push
aas
dec
outs
test
add
cmp
push
xor
aas
mov
sub
leave
test
cmp
inc
ss
push
shl
das
push
ja
bound
inc
mov
ror
aad
jae
push
pop
jns
adc
dec
jo
cmp
and
fsub
and
mov
ret
stc
jmp
add
cmp
mov
dec
lock
sub
ret
mov
(bad)
sub
mov
test
scas
xchg
push
jo
push
sub
dec
daa
and
test
adc
cmp
xor
adc
xor
stos
imul
in
in
jne
cmp
xlat
repz
int
mov
(bad)
je
retf
sbb
push
loopne
in
sub
xor
push
mov
sub
adc
mov
push
ret
jns
enter
mov
add
sub
add
mov
inc
dec
ja
sbb
cwde
ret
push
fsubr
inc
adc
repnz
or
lea
xchg
sbb
mov
inc
push
shl
and
xchg
push
repnz
sbb
pushf
and
and
push
and
mov
and
dec
fwait
and
adc
ror
pop
leave
loope
adc
iret
jb
or
sbb
out
cmp
clc
adc
and
cmp
nop
inc
enter
lea
sub
adc
sbb
dec
pushf
hlt
ror
mov
stos
adc
das
leave
gs
xchg
cmp
in
scas
sub
inc
adc
push
rol
(bad)
iret
lock
jne
jnp
inc
add
jbe
add
mov
xor
and
mov
int
sub
popa
out
sbb
aaa
repnz
test
push
lock
and
add
or
jne
or
ror
imul
xor
jbe
or
nop
xor
inc
mov
xor
pusha
mov
lods
popf
daa
push
sti
adc
jae
and
test
inc
mov
jne
or
into
cmp
or
add
gs
out
xchg
dec
pop
pop
adc
mov
in
aaa
fs
daa
push
popa
pop
mov
push
aas
jno
jno
jb
and
pop
daa
cwde
mov
outs
push
push
jo
dec
jmp
jb
in
push
scas
sub
cmp
adc
inc
mov
mov
xor
sahf
and
test
add
pusha
popa
inc
popa
pop
push
or
xor
ins
pop
frstor
lods
data16
jns
sbb
sub
in
js
pop
adc
mov
js
sbb
sbb
sar
cs
mov
les
adc
adc
fnstcw
imul
inc
inc
and
and
add
fild
pop
popf
les
das
dec
idiv
arpl
ss
xlat
ret
add
add
nop
mov
dec
push
mov
bnd
cwde
sbb
mov
cmp
add
mov
rol
sbb
sbb
adc
stos
adc
mov
push
popf
sub
nop
call
shl
push
push
out
fcomp
or
dec
fdiv
or
or
nop
arpl
adc
mov
in
call
push
movs
adc
lock
adc
xchg
and
and
xchg
enter
es
enter
sub
adc
sbb
jb
outs
or
xchg
out
loope
cli
sub
adc
dec
sbb
es
dec
enter
cdq
add
jbe
cmp
mov
add
push
repnz
mov
dec
int3
sbb
or
jle
inc
cmp
fs
xchg
xor
dec
and
sbb
push
nop
xchg
inc
cwde
es
sbb
fs
shr
in
mov
or
sub
test
aad
push
das
adc
and
test
dec
js
xor
mov
sbb
rol
loope
mov
test
add
ins
rol
scas
movhps
and
pop
add
mov
cmp
xor
arpl
add
pop
jmp
das
sbb
sbb
movs
aaa
adc
push
sub
cli
call
sub
and
sbb
push
dec
aaa
add
repz
je
lods
jg
nop
outs
sub
push
cs
inc
jmp
dec
jnp
and
inc
xor
inc
dec
dec
and
and
fisttp
cmps
or
add
mov
test
sbb
in
xchg
adc
or
fisttp
jb
test
lock
jl
sub
inc
adc
mov
ret
call
push
sub
pusha
xchg
js
ret
lods
xor
ins
call
inc
fidiv
jno
call
imul
mov
popa
dec
imul
in
mov
std
inc
call
fwait
xor
cmps
adc
pop
rcr
pop
inc
call
adc
push
xor
push
pop
mov
fcom
loopne
mov
(bad)
jbe
xchg
iret
xchg
add
das
xchg
ss
loope
xor
sbb
aam
js
inc
nop
sub
xchg
xor
jo
dec
sti
push
hlt
or
hlt
mov
push
or
inc
push
nop
jae
aam
imul
mov
test
movs
jge
inc
or
add
inc
jp
xchg
test
adc
mov
movs
xlat
push
rol
mov
mov
sbb
sbb
inc
fsub
mov
out
push
sbb
aaa
in
dec
cmps
jo
dec
div
push
or
add
dec
cwde
cmp
lods
adc
fild
fmul
fadd
fstp
mov
test
mov
shr
nop
pop
mov
loop
icebp
cdq
mov
push
daa
js
dec
rcr
mov
or
xchg
mov
pop
add
std
pushf
gs
or
pushf
push
lods
pop
xchg
dec
ret
mov
push
repnz
nop
test
movs
fisttp
test
add
fstp
fwait
movs
mov
icebp
fwait
test
cmp
movs
xchg
cmps
and
mov
arpl
or
xchg
inc
aam
push
mov
xor
jbe
daa
sub
mov
mov
(bad)
outs
inc
js
fld
js
xor
adc
push
xchg
mov
mov
adc
xor
pop
or
push
adc
and
or
ins
pop
push
adc
loop
ja
in
int3
or
sub
mov
cmp
mov
dec
pushf
xor
inc
movs
fisttp
ss
dec
add
repnz
and
add
or
ins
adc
push
outs
xchg
test
xchg
and
lods
xchg
mov
mov
pop
cmp
mov
inc
pop
inc
sbb
push
mov
in
test
or
loopne
dec
adc
push
dec
pop
pushf
pop
mov
sub
loope
mov
or
addr16
mov
sbb
mov
(bad)
outs
or
inc
std
sbb
or
or
sbb
adc
out
and
mov
sub
sub
stc
ds
nop
jge
mov
add
jo
pop
cmp
jge
int3
mov
inc
mov
inc
and
shl
sub
pop
jb
jne
mov
(bad)
jns
dec
jmp
or
mov
sbb
dec
in
xor
jnp
pop
push
in
dec
mov
xchg
sub
inc
leave
test
mov
das
lods
push
push
xor
dec
(bad)
mov
adc
and
outs
loopne
dec
mov
outs
sub
sbb
push
pop
ins
pop
add
mov
jne
scas
push
mov
leave
and
popa
adc
and
or
mov
mov
clc
push
stos
popf
mov
mov
pop
(bad)
out
mov
icebp
nop
inc
jae
inc
and
stos
pop
xor
iret
scas
or
bound
add
sub
add
repz
imul
adc
xchg
push
cdq
test
fs
sbb
push
cmps
aas
dec
mov
leave
xor
in
xchg
lock
shr
push
es
sbb
or
sbb
mov
mov
aad
push
mov
aas
xchg
(bad)
movs
mov
dec
mov
call
pop
call
add
or
(bad)
popa
inc
jne
sbb
ss
es
sbb
sbb
je
push
sahf
sbb
inc
je
pop
push
or
sub
mul
cs
loopne
and
fdivr
push
and
add
xlat
sub
push
sbb
adc
movs
inc
sub
addr16
push
mov
inc
jo
push
sbb
mov
add
mov
push
jbe
adc
jae
push
call
push
jns
psrad
fistp
mov
jecxz
int3
sub
sbb
jo
arpl
js
push
mov
add
mov
int3
mov
mov
adc
cmp
push
adc
aam
push
jo
ins
or
xor
xchg
data16
sbb
inc
aad
enter
in
add
ror
in
stc
mov
jle
dec
fdiv
push
es
dec
sbb
add
jno
add
xchg
and
(bad)
dec
and
test
(bad)
push
xchg
xor
retf
dec
xchg
dec
addr16
sbb
mov
adc
dec
fld
mov
ja
push
sahf
add
add
and
data16
sbb
shr
(bad)
mov
or
and
mov
addr16
push
stos
fcmovbe
mov
aam
jnp
scas
and
test
cdq
sbb
push
sbb
mov
dec
push
rcr
mov
push
or
es
loope
out
add
xchg
adc
(bad)
imul
xor
and
inc
dec
and
pop
das
fnstcw
dec
and
int
push
test
jecxz
xchg
xchg
dec
mov
pop
out
and
xchg
mov
fiadd
xchg
out
jb
dec
in
lock
adc
and
xchg
cmp
or
ret
pop
add
jns
push
xchg
jg
ds
and
test
inc
in
out
xchg
jne
push
xchg
pusha
cmp
in
xchg
xor
sbb
push
or
fadd
or
or
pop
and
movs
jge
dec
and
dec
or
pop
cwde
dec
cmp
hlt
xor
xchg
leave
mov
cmp
test
jae
push
xor
(bad)
cdq
dec
mov
cmp
enter
xchg
pop
cdq
xchg
and
nop
push
je
adc
jb
cdq
cmps
pop
pop
ins
mov
mov
sbb
push
and
push
enter
ss
rcr
in
jo
cdq
or
push
xchg
sub
pop
mov
and
jno
add
mov
jae
js
and
sets
add
test
les
cmps
test
cmp
gs
test
push
mov
jmp
and
lahf
xor
sbb
dec
mov
pop
mov
jnp
call
test
push
rcl
rcr
add
retf
xchg
sub
in
and
inc
mov
add
ds
call
lods
pop
dec
and
push
or
iret
fdivr
sub
push
ss
pop
ret
inc
adc
jecxz
les
and
adc
push
mov
mov
shl
movs
outs
loopne
pushf
popf
inc
sbb
push
mov
mov
add
int
add
adc
pushf
sub
adc
sub
sub
loope
daa
push
aam
xor
dec
mov
jl
lods
pop
mov
arpl
repnz
popf
mov
mov
inc
aaa
in
adc
popf
ffreep
xchg
daa
jecxz
sahf
xchg
ins
or
out
fstp
in
mov
sahf
push
mov
inc
cld
(bad)
fisttp
dec
inc
cdq
test
les
test
lods
and
inc
fstp
ins
popa
xor
scas
inc
jbe
inc
icebp
dec
out
lahf
movs
jo
jo
xor
cmp
sbb
aas
(bad)
and
rcl
jecxz
xchg
sahf
xor
sub
xor
and
mov
or
xchg
inc
adc
les
scas
mov
in
push
lahf
nop
je
xchg
adc
je
and
xchg
and
mov
add
fcomip
jge
mov
hlt
mov
(bad)
cmp
mov
add
leave
mov
xchg
scas
fiadd
mov
xchg
stos
mov
mov
jb
mov
and
xor
rcr
mov
cmp
ss
es
lds
icebp
lods
dec
ficom
mov
xor
jp
mov
dec
mov
sti
cs
inc
clc
enter
xchg
test
movs
loopne
mov
xor
test
xchg
inc
iret
ror
aam
push
or
ret
mov
add
or
inc
call
sbb
test
or
xor
dec
xor
push
or
rol
lods
idiv
xchg
cmp
push
stos
icebp
movs
sub
sub
lea
stos
mov
gs
bound
or
mov
jl
in
shl
mov
inc
cmps
mov
hlt
jecxz
or
add
sahf
adc
dec
add
add
rcl
dec
adc
push
adc
inc
js
ins
dec
repnz
or
add
add
inc
aam
or
jg
fdivr
test
or
lock
push
leave
add
mov
sar
call
jmp
sub
inc
jbe
sub
add
lahf
cmp
and
dec
ins
fucompp
lea
push
sbb
je
dec
add
ss
dec
jle
aas
jle
loop
test
and
add
cmps
adc
pusha
pusha
aas
adc
add
repz
cmp
in
dec
jnp
inc
inc
xor
shl
xchg
dec
lds
rcl
mov
jo
loopne
dec
scas
inc
pop
add
lea
inc
sub
jmp
and
lods
movs
dec
loopne
xchg
cld
adc
dec
jne
loopne
xchg
(bad)
clc
movs
loop
sub
gs
outs
mov
push
or
or
mov
out
pop
inc
cmp
(bad)
stos
in
mov
push
and
inc
ds
push
xor
cmps
sbb
pop
xchg
js
cmp
push
add
fsub
adc
mov
inc
push
cld
dec
cmp
cs
outs
fld
fcomp
mov
or
dec
add
outs
dec
sub
xor
in
movups
xor
ucomiss
mov
nop
sub
aaa
jbe
les
stos
loope
xchg
loop
hlt
mov
add
dec
and
pop
or
or
cdq
nop
xchg
retf
adc
imul
or
in
jb
sub
push
aas
pop
mov
mov
dec
mov
das
les
sbb
stos
stos
adc
cmps
lahf
or
outs
mov
mov
add
enter
mov
aam
test
and
dec
ss
or
mov
mov
(bad)
(bad)
sbb
cmp
push
adc
fild
sbb
dec
repz
es
inc
inc
cmps
imul
push
(bad)
loopne
adc
fcom
cmp
shr
add
lods
mov
jns
mov
push
loopne
dec
cdq
shr
mov
push
jae
nop
add
in
enter
dec
mov
dec
inc
sbb
inc
mov
lods
mov
mov
and
dec
movs
push
or
or
sbb
pop
or
jo
add
xchg
sub
pop
loopne
push
xchg
lock
fs
cwde
xor
jl
adc
adc
sbb
add
xchg
push
mov
or
test
test
dec
adc
mov
sub
ins
jg
sbb
movs
neg
and
adc
(bad)
imul
dec
add
leave
push
dec
sub
call
xor
dec
pop
xchg
movs
add
sti
xor
cmc
inc
rol
stos
ins
xchg
sbb
test
add
xor
dec
mov
push
aad
cmc
or
xchg
pop
inc
cmps
and
push
mov
lea
nop
inc
jecxz
lods
lahf
dec
or
icebp
das
pop
add
cmp
sbb
sahf
je
mov
adc
sub
push
push
(bad)
clc
jle
and
mov
push
ins
push
inc
mov
addr16
imul
jnp
(bad)
adc
retf
mov
mov
add
inc
inc
mov
cmp
jnp
loopne
fwait
add
add
outs
add
adc
sbb
jmp
jno
xchg
shl
ja
mov
inc
adc
cmp
sub
dec
adc
add
enter
cmp
sub
inc
inc
jae
pusha
mov
pop
(bad)
pop
add
jle
nop
jecxz
pop
and
sub
(bad)
cmp
gs
mov
push
pop
jo
clc
cmp
push
sub
dec
pushf
stos
and
inc
dec
int
push
inc
xor
cmp
and
ror
les
dec
cmp
adc
or
(bad)
mov
lahf
lea
lea
or
imul
jle
(bad)
(bad)
mov
xor
xor
add
rol
add
rol
add
mov
test
test
rol
loopne
(bad)
xor
add
jmp
add
rol
add
push
or
(bad)
xor
add
data16
fst
(bad)
outs
fstp
repz
push
or
or
pop
dec
dec
cmp
and
fs
xchg
or
cmps
jnp
sub
cdq
in
xchg
xor
xor
dec
dec
cmp
or
clc
mov
sbb
fisub
call
sbb
neg
mov
test
lea
imul
lea
mov
pop
sar
mov
xor
(bad)
and
cmp
sbb
or
inc
jb
pop
or
xor
jb
pop
add
jb
daa
and
adc
and
inc
or
or
adc
sub
outs
retf
xchg
pushf
and
not
or
adc
cld
push
aad
ret
fldcw
or
or
mov
mov
xor
in
shl
adc
or
add
xor
xor
shr
inc
adc
pop
ret
fninit
imul
(bad)
xor
add
push
cmp
call
or
mov
add
sbb
xor
call
or
aaa
mov
dec
fdivr
pop
adc
rcl
xor
loopne
adc
xor
or
ficomp
cli
sbb
xor
je
push
pop
nop
(bad)
or
pop
adc
and
ror
xor
adc
pop
and
add
dec
xor
xor
pop
and
adc
sbb
jo
or
gs
cmp
std
push
test
jo
fimul
xor
add
push
iret
loopne
arpl
or
xchg
add
cmp
push
push
and
(bad)
or
or
cmp
pop
push
or
nop
data16
or
sub
cmps
sbb
nop
add
cdq
inc
or
or
call
or
loope
xor
sub
adc
jno
lea
ins
loop
dec
or
adc
sbb
cld
out
mov
outs
and
sbb
xor
pop
sbb
xor
pop
add
xor
mov
or
mov
xor
push
fst
nop
sub
cmp
or
out
imul
imul
xlat
(bad)
movs
push
mov
pop
scas
push
in
dec
sbb
sbb
xor
pop
add
mov
and
mov
rcr
adc
and
and
or
int
or
rcr
or
pop
and
xor
adc
dec
and
add
mov
add
ds
xor
cmp
xor
add
inc
or
mov
in
and
xor
add
cmp
or
push
add
mov
push
add
and
xor
int
sub
ror
pop
push
arpl
xor
xor
pop
pusha
cs
jmp
or
pop
sbb
xor
or
add
dec
mov
pop
add
js
inc
cmp
xor
add
sub
push
adc
cmp
push
push
add
or
adc
cs
out
or
loopne
push
ror
add
or
jae
jo
add
mov
pop
cmp
push
or
push
add
aad
adc
xchg
sub
jae
sub
pop
rcr
and
sbb
int
xor
sbb
xor
push
jo
jp
xor
bound
cmp
cmp
inc
int
or
sub
loopne
sbb
and
and
test
je
and
sbb
add
(bad)
pop
xor
inc
cs
sub
test
std
push
mov
mov
inc
les
cld
xchg
fmul
xchg
movs
pushf
pushf
mov
add
lds
imul
lock
unpcklps
div
lea
and
mov
or
fdivr
xor
adc
loope
stos
sub
and
enter
retf
fimul
leave
ret
sbb
add
shl
ins
xchg
ret
mov
and
xor
sbb
mov
jne
mov
test
hlt
and
(bad)
pushf
rcl
adc
xchg
or
addr16
push
sbb
xchg
dec
xor
inc
inc
dec
jne
cmp
fmul
jmp
mov
arpl
add
inc
je
fwait
dec
test
outs
ins
pop
sbb
jb
sahf
adc
cmp
test
mov
mov
xor
add
adc
dec
icebp
add
mov
sbb
or
push
jle
pusha
lea
push
loopne
lods
inc
adc
ja
leave
iret
or
ins
pushf
rcl
lods
cmp
adc
call
test
test
cld
pop
sub
loopne
loopne
shl
bound
add
sbb
mov
or
push
rcr
in
cmp
cmp
popf
fadd
push
xchg
call
mov
cmp
cs
data16
nop
push
rcl
push
test
cmp
push
and
or
or
sbb
or
jae
and
inc
aaa
adc
test
cmps
add
sar
push
pop
nop
mov
mov
es
adc
sbb
das
mov
pop
dec
test
pop
fisubr
arpl
cwde
jl
inc
(bad)
je
xor
movs
mov
add
or
mov
inc
add
sbb
fchs
xlat
mov
aaa
je
xor
push
push
sub
cmp
hlt
ret
ficomp
mov
and
dec
hlt
sbb
int
and
pop
test
stc
ins
mov
and
dec
jo
mov
and
jb
adc
clc
inc
push
add
sub
cwde
jge
fadd
adc
add
mov
mov
retf
mov
jmp
sub
loope
dec
leave
add
shl
loopne
and
rcr
sbb
sbb
mul
dec
lods
mov
adc
inc
das
imul
xchg
mov
and
dec
mov
in
enter
push
adc
mov
pop
daa
pop
mov
stos
rol
retf
les
aaa
inc
push
ins
popa
stos
int
mov
addr16
xlat
mov
call
pop
mov
retf
push
inc
push
or
push
cmps
je
and
jo
dec
or
data16
mov
inc
pop
mov
push
sub
or
lock
and
cmp
pop
xor
lea
jb
enter
jnp
shl
or
hlt
jge
addr16
adc
imul
dec
or
push
fst
mov
call
clc
lds
(bad)
aam
adc
inc
xchg
cmp
sbb
cmc
retf
push
ss
add
add
jecxz
inc
mov
xchg
jo
add
lahf
imul
mov
cmp
push
les
adc
mov
das
inc
dec
clc
test
int
xchg
pop
push
or
into
push
push
pop
and
adc
xor
mov
sbb
mov
mov
push
mov
jmp
mov
movs
das
add
imul
xlat
retf
mov
call
jg
dec
mov
inc
inc
xchg
int
xchg
ja
cmps
mov
lods
xchg
mov
dec
jp
adc
leave
enter
leave
pushf
dec
iret
cmps
outs
pusha
nop
(bad)
jle
push
push
(bad)
jmp
sbb
xor
jo
adc
or
or
inc
sar
add
stc
mov
adc
push
enter
pop
mov
daa
and
mov
ret
inc
or
push
xchg
dec
push
in
fwait
pop
cmp
js
mov
xchg
iret
aam
gs
and
cmps
out
sar
sub
retf
(bad)
push
imul
iret
and
test
adc
addr16
in
pop
sbb
add
push
retf
pop
adc
xchg
mov
ja
sbb
fdivr
adc
and
and
btr
inc
dec
aaa
lds
jl
push
stos
mov
adc
cmp
aaa
iret
adc
mov
iret
fnstenv
add
mul
sub
ret
jne
xchg
xor
push
ret
jg
adc
and
ror
mov
mov
and
mov
loop
aam
fldcw
push
test
(bad)
call
nop
sbb
mov
outs
mov
leave
rol
jno
or
xor
shr
or
cdq
fadd
xor
or
mov
in
sub
dec
sahf
data16
cmp
add
push
add
sub
adc
add
sbb
pop
out
shl
mov
xor
aad
hlt
call
aam
add
mov
sub
sub
xor
lods
pop
out
dec
push
inc
and
call
or
push
aam
add
das
mul
pop
popf
clc
ja
aam
adc
inc
dec
and
popa
ins
ins
jmp
inc
(bad)
pop
lods
aam
push
push
gs
cmp
das
test
xchg
jle
cs
mov
aad
fld1
mov
xlat
add
push
pop
(bad)
(bad)
dec
mov
fmul
inc
lds
fld
lock
and
imul
ins
jbe
add
or
in
add
std
or
outs
ins
and
and
pop
sbb
fcomp
(bad)
push
inc
adc
mov
mov
or
xchg
adc
repz
and
mov
imul
inc
fist
(bad)
ds
mov
adc
arpl
xchg
and
cmp
test
inc
push
pop
sti
dec
pop
push
mov
retf
stos
lds
xchg
cmp
xor
push
pop
inc
mov
mov
enter
cmp
stc
pushf
fmul
push
add
fs
sub
add
sub
push
xor
cli
test
inc
ror
retf
iret
inc
ret
pop
sbb
pop
fwait
adc
cmp
mov
push
sub
fadd
adc
nop
adc
or
(bad)
loopne
rcl
rcr
add
cmp
lods
xchg
jle
cld
inc
jbe
xchg
rol
es
pop
xchg
inc
ins
cmp
sar
xchg
sbb
jnp
and
sub
(bad)
cdq
mov
mov
and
and
outs
and
ds
xor
xchg
add
add
pop
aas
push
cmps
cmp
push
mov
pop
cld
sub
mov
daa
ffree
shl
loopne
setbe
shr
adc
or
mov
xchg
cmp
cmovb
loopne
mov
and
sbb
test
cmp
mov
dec
jbe
and
adc
or
xor
add
mov
add
adc
push
jmp
aam
dec
jmp
xlat
cmp
and
aaa
test
inc
out
fmul
add
(bad)
dec
mov
es
adc
rcl
stos
ja
nop
cmp
sbb
mov
popf
lea
cmp
sbb
fst
add
or
push
ins
fadd
popf
push
cmps
fisubr
(bad)
fisttp
cld
nop
pop
xchg
mov
push
loope
add
dec
add
fcmovu
repz
fiadd
shr
mov
ins
bound
dec
sbb
jo
or
je
or
test
ins
int
pop
(bad)
repz
outs
jl
or
addr16
imul
adc
rol
rcl
mov
pop
mov
add
add
cmp
ja
add
or
mov
es
mov
daa
cmp
add
mov
mov
fbld
sbb
popf
or
mov
lods
ds
jo
bound
cmp
sbb
add
bound
dec
mov
or
and
les
pop
enter
ins
inc
outs
outs
imul
sbb
jb
loop
dec
call
push
out
rol
dec
adc
mov
mov
pop
jmp
xchg
lahf
das
adc
dec
or
adc
push
adc
cmp
sub
add
xchg
ret
pop
adc
imul
sbb
adc
and
xor
inc
or
dec
or
popa
(bad)
dec
repz
push
sbb
mov
pusha
test
push
dec
je
dec
xchg
sbb
mov
pop
push
ror
mov
dec
jns
test
and
push
pushf
adc
icebp
inc
mov
pop
adc
inc
mov
push
sbb
iret
dec
rcr
push
ins
push
push
lea
repnz
add
in
push
pop
or
add
ins
jle
push
dec
ror
sbb
ror
nop
loopne
xor
add
jnp
movs
push
arpl
jns
sbb
pop
leave
retf
adc
retf
int3
inc
int
lods
in
adc
ins
sbb
dec
add
adc
dec
add
sar
sbb
pushf
mov
add
fcom
je
xchg
mov
daa
leave
mov
push
fadd
aam
fmul
or
cmp
ins
inc
scas
inc
adc
movs
ins
xchg
cmp
dec
jnp
add
add
sub
push
or
adc
add
sbb
enter
cli
nop
or
cmc
mov
daa
fwait
xchg
mov
cmp
cmc
daa
shl
cld
jmp
loopne
loope
dec
mov
lods
pop
or
mov
adc
movs
or
fs
adc
jle
fidivr
js
stos
mov
rcl
jp
stos
repz
jp
inc
xchg
test
aad
aaa
add
shl
idiv
in
dec
mov
and
sbb
add
in
dec
les
push
shr
js
add
xor
shr
mov
inc
ret
inc
sti
inc
mov
hlt
cmp
aas
dec
pop
mov
sbb
outs
mov
mov
add
or
adc
xchg
lock
inc
push
mov
enter
dec
xchg
and
ins
push
sbb
aaa
mov
adc
addr16
ins
bound
outs
and
fisttp
cmps
push
xor
mov
and
bound
popa
sbb
dec
inc
mov
sbb
jb
pop
or
les
adc
cmc
push
pop
inc
sti
push
lock
fld
push
aaa
xor
mov
xchg
add
mov
sar
push
xchg
mov
(bad)
add
push
push
lock
mov
scas
fadd
mov
mov
sbb
pop
nop
xor
jge
(bad)
fsubr
add
sti
mov
pop
or
and
adc
repnz
or
push
mov
cmp
shl
add
sbb
cwde
cli
aad
mov
xor
push
das
adc
dec
pop
sub
sbb
add
(bad)
mov
xor
or
xchg
ret
out
pop
or
dec
enter
push
mov
add
and
loope
pop
sbb
and
adc
cmp
mov
mov
call
inc
xchg
in
xor
popa
repnz
pop
push
in
test
(bad)
push
(bad)
inc
mov
inc
adc
push
(bad)
stos
mov
dec
ror
mov
test
sub
into
pop
jnp
cwde
jne
hlt
add
sbb
icebp
adc
ret
call
mov
mov
mov
inc
mov
pusha
sbb
(bad)
lock
je
test
jmp
shr
pop
add
sub
jg
pop
fsubr
(bad)
mov
add
add
pusha
jge
sub
adc
push
cmps
add
and
clc
cwde
and
mov
cld
lea
xchg
ror
data16
cmp
dec
inc
ss
add
push
cmp
sar
adc
dec
jmp
mov
dec
cld
or
dec
cmp
add
push
fadd
add
ss
js
lock
add
or
aam
jmp
lods
xchg
jg
int
fsub
dec
cmp
and
aam
cdq
or
jne
(bad)
and
popa
and
add
pop
dec
add
adc
add
mov
push
and
jmp
test
mov
mov
push
adc
inc
cwde
sbb
lea
xor
lea
in
dec
dec
adc
push
pop
(bad)
out
mov
clc
cld
push
cmp
xchg
(bad)
pop
add
mov
dec
and
push
sbb
push
pop
dec
out
jnp
xchg
xchg
pop
cmp
retf
enter
ds
cmp
sbb
mov
(bad)
mov
cdq
cmp
sub
imul
test
hlt
sbb
addr16
out
jmp
sbb
push
js
mov
inc
xchg
xchg
int
in
jno
add
fdiv
xor
jp
push
xchg
xchg
dec
in
and
stos
dec
adc
leave
or
ins
adc
sbb
fidivr
dec
shl
sub
mov
adc
cmps
mov
popa
fmul
xchg
pop
cli
xor
push
lock
test
cmovg
fwait
lahf
arpl
test
adc
push
in
push
mov
adc
(bad)
mov
dec
adc
jmp
out
ss
call
xor
add
and
nop
cwde
mov
adc
dec
int
mov
clc
push
jno
sbb
cmp
or
inc
mov
mov
cld
cmps
xor
dec
xchg
mov
adc
in
out
cmc
mov
push
inc
mov
stos
lods
retf
mov
inc
add
adc
test
lock
aaa
mov
das
mov
push
test
mov
mov
call
or
jge
xchg
loopne
push
shl
mov
data16
pushw
enter
xor
add
sbb
jnp
adc
push
pop
mov
clc
lock
adc
push
cmp
adc
mov
cld
adc
jo
or
daa
mov
sar
jp
mov
clc
xchg
fstp
dec
fsubr
cmp
scas
sub
dec
out
ss
jae
push
jnp
stos
mov
int3
cmp
jl
adc
mov
stos
add
push
cmp
cmps
sbb
adc
mov
shl
mov
mov
in
jo
movs
and
and
sbb
fwait
cli
cmp
jle
mov
or
adc
in
fcomp
add
les
dec
shl
test
mov
sbb
into
pop
iret
outs
pusha
ja
pusha
or
push
cmp
ss
(bad)
fdiv
cmp
cmp
or
test
push
out
inc
test
mov
mov
loopne
repnz
mov
and
sub
pop
clc
or
push
add
loopne
dec
dec
clc
inc
rcr
pop
sub
cmp
sub
hlt
mov
mov
xchg
add
jmp
and
dec
xor
or
add
push
adc
enter
sub
pop
inc
push
jne
movs
ins
test
sti
push
jno
xchg
push
and
and
xchg
cli
mov
push
jmp
cmp
int3
mov
test
xchg
mov
out
push
add
in
jne
repnz
sbb
es
dec
inc
aas
sbb
mov
mov
push
mov
or
and
push
rol
enter
cmp
jge
mov
push
xchg
push
xchg
add
ins
jno
ror
es
jo
mov
push
and
adc
or
adc
mov
mov
mov
cwde
or
inc
fcomp
outs
clc
add
adc
xor
loopne
or
jg
clc
xchg
fsub
xlat
xchg
push
aas
addr16
fld
fdiv
sti
inc
jecxz
mov
jmp
cmp
jo
repnz
add
pop
jmp
jmp
cld
loopne
sbb
mov
add
sub
xchg
(bad)
xor
adc
mov
mov
pop
mov
mov
lea
ins
sub
es
dec
leave
mov
lods
adc
pusha
fcmovnu
movs
or
or
add
cmp
add
enter
push
add
fidivr
in
add
and
fidiv
fcomp
dec
inc
inc
adc
pop
xchg
cmp
sub
dec
ja
ins
inc
cmp
mov
(bad)
jne
push
(bad)
jno
add
inc
mov
pop
ret
dec
inc
hlt
dec
movs
or
fdiv
push
pop
and
fild
add
fdivrp
mov
leave
(bad)
inc
(bad)
in
sub
je
mov
cli
push
fadd
(bad)
call
stos
sbb
stos
pop
mov
test
in
mov
jmp
dec
scas
in
lock
sbb
inc
mov
outs
or
sub
fwait
(bad)
into
js
mov
popa
cli
inc
cmp
jge
cdq
or
jmp
cmp
jl
imul
add
xor
cli
jge
push
bswap
mov
mov
inc
rcr
inc
xchg
push
mov
movs
adc
mov
andnps
adc
xor
adc
mov
sub
add
int3
xchg
mov
add
popf
daa
push
or
ds
xor
sub
push
dec
mov
pop
xor
nop
or
mov
rcr
mov
mov
inc
repnz
add
jg
mov
leave
sbb
outs
dec
lods
leave
ret
jmp
cli
jmp
push
(bad)
mov
push
imul
push
xor
ins
shr
lock
popf
test
hlt
fistp
cli
mov
inc
xchg
jge
and
inc
sub
adc
mov
aam
movs
mov
aaa
add
loope
mov
ror
mov
jl
arpl
ret
inc
and
aam
or
clc
add
pop
or
cmp
in
ins
sbb
or
inc
sbb
xchg
add
mov
add
and
in
xchg
test
sub
cli
aam
add
xor
cmp
clc
and
xchg
in
or
les
mov
je
or
push
icebp
xor
xchg
daa
jecxz
mov
or
or
or
mov
fisubr
xchg
dec
pop
enter
popa
sbb
mov
mov
test
jg
sub
xor
sub
sub
jb
add
lds
jae
mov
xlat
mov
adc
clc
das
fisttp
scas
push
add
xchg
rcr
(bad)
dec
and
bswap
fcomp
add
mov
add
add
repnz
mov
adc
xor
push
rcr
addr16
inc
and
push
jne
(bad)
rcl
ins
ins
test
cmp
push
or
je
pop
dec
ins
jmp
sti
adc
or
or
rol
mov
inc
loope
cs
sbb
stc
push
mov
or
pop
nop
add
mov
push
pop
ret
jne
sub
pushf
jns
scas
xor
mov
or
rep
push
gs
movs
test
lods
popa
or
mov
or
mov
mov
arpl
retf
mov
push
out
xchg
ffreep
jo
les
adc
enter
xchg
cmp
int3
test
mov
pop
and
ror
xchg
dec
popa
in
ins
aam
add
(bad)
ret
jno
fdiv
pusha
cmp
dec
mov
adc
enter
call
xchg
std
in
cdq
or
rcr
loope
mov
sub
scas
sub
jnp
jmp
sbb
mov
sbb
or
add
and
add
add
adc
out
dec
mov
adc
das
fild
xchg
sbb
adc
push
and
add
stc
push
repnz
sub
xchg
jecxz
div
sub
or
and
jge
in
js
ret
inc
xor
inc
bound
cmp
or
gs
scas
nop
add
shl
push
jo
ins
adc
dec
loope
test
mov
sub
push
cwde
test
push
inc
jb
aam
sbb
and
outs
pop
loopne
dec
(bad)
sbb
das
pop
push
xor
mov
lock
add
pop
sbb
add
adc
inc
sbb
(bad)
in
lods
mov
mov
inc
out
clc
xor
out
mov
mov
push
and
xchg
xchg
mov
fstp
sbb
mov
or
push
sbb
pop
mov
add
sub
inc
sub
not
push
or
in
mov
or
cwde
mov
les
cli
xor
push
inc
add
xor
xor
push
mov
push
inc
add
inc
iret
ret
adc
mov
xor
aas
or
push
inc
jae
cmovs
je
leave
mov
ret
jbe
pop
stos
mov
arpl
push
xor
(bad)
iret
movlps
out
push
or
dec
loope
(bad)
push
add
sbb
jo
cmp
inc
add
add
dec
enter
ret
and
jge
or
dec
cmp
push
add
lea
push
sbb
xor
ret
or
cmps
test
imul
pop
xor
push
shl
inc
ds
or
push
xor
jle
mov
fstp
test
pop
dec
and
sub
enter
pop
inc
in
popa
das
push
add
ret
cmps
mov
add
push
and
cmp
pop
and
mov
mov
mov
xor
add
adc
xchg
sahf
fistp
xchg
dec
out
call
fld
fmul
mov
je
adc
imul
mov
test
pop
bound
mov
test
je
fadd
inc
push
fimul
mov
dec
hlt
and
cmp
ror
invd
les
cmp
out
inc
rcr
mov
cdq
pop
inc
dec
sbb
rcl
mov
mov
push
rcr
push
in
pop
jg
shl
ss
js
sub
sub
loopne
fadd
retf
jmp
das
jo
mov
sub
imul
les
retf
inc
(bad)
cs
ret
sub
jb
aaa
popa
loope
jecxz
pop
sub
sub
fld
xchg
lea
push
outs
mov
mov
and
push
jmp
(bad)
or
pop
add
mov
rcl
xchg
mov
fs
test
xchg
xlat
and
or
push
imul
jb
and
rol
lahf
or
je
imul
or
and
mov
or
movs
frstor
mov
add
aas
adc
inc
jne
movs
sub
test
pop
mov
fst
lds
mov
fwait
xlat
xor
dec
inc
cmp
inc
lock
js
psubusb
jecxz
sbb
hlt
mov
push
inc
add
mov
mov
or
push
push
dec
shr
ror
sahf
mov
and
pop
pop
jb
and
int
leave
and
sbb
push
push
dec
inc
push
or
and
call
in
and
aaa
and
das
adc
imul
mov
in
lahf
mov
jnp
(bad)
jp
inc
sbb
xchg
outs
das
sbb
jns
nop
cmp
sbb
or
call
jmp
dec
jg
dec
jg
mov
mov
mov
jle
push
sub
pop
(bad)
fmul
sbb
sbb
outs
sub
jns
add
sbb
adc
add
call
add
leave
and
loop
push
xchg
add
or
in
ss
xchg
dec
xchg
movs
hlt
add
sbb
and
js
push
outs
dec
mov
push
je
popa
inc
fidiv
inc
dec
scas
push
sub
jmp
sub
or
add
retf
dec
sub
int
pop
aas
mov
jnp
push
add
in
and
cmps
pusha
adc
adc
lods
xor
or
cld
push
xor
shl
test
sub
jg
push
jmp
cld
jmp
xor
pop
cmps
sti
inc
sub
movs
out
mov
mov
clc
ss
pop
xor
cmps
xor
jle
or
push
dec
lods
dec
sub
loope
loop
add
cdq
or
xchg
dec
pop
dec
imul
mov
js
dec
sar
push
outs
test
cmp
add
xor
add
mov
xchg
cwde
or
imul
inc
add
xchg
add
lds
or
mov
mov
jl
jbe
inc
nop
dec
jge
add
rcl
dec
or
rol
outs
inc
sbb
push
lods
movs
or
in
imul
inc
loop
ret
shufps
lahf
jo
ja
dec
and
sbb
and
mov
sbb
sar
clc
mov
jne
push
cs
cmp
clc
cld
cld
test
mov
and
xchg
das
enter
cmp
push
cmp
sbb
mov
mov
nop
mov
pushf
add
adc
xlat
or
dec
push
or
ret
lock
pop
sub
dec
fiadd
ins
xchg
push
adc
repnz
ret
in
jns
jge
fld
lahf
pushf
xor
ret
je
mov
inc
cmps
inc
sti
inc
inc
pop
push
das
xlat
mov
sub
sahf
dec
xchg
inc
loope
test
and
in
add
adc
pop
adc
in
push
push
mov
or
js
sub
and
rcr
fsubrp
pop
out
shl
in
fadd
pop
adc
dec
dec
xchg
cld
nop
lock
repnz
sbb
dec
jb
sbb
push
mov
or
mov
lds
rol
pop
push
int
sub
xchg
repz
jecxz
push
mov
or
sub
pushf
sbb
imul
hlt
test
in
sub
bound
scas
adc
test
pop
fs
in
sti
jmp
fisttp
xchg
outs
adc
push
leave
add
or
push
pop
test
xchg
loop
adc
add
sub
ins
outs
out
cmp
push
lods
add
jecxz
jae
adc
xchg
mov
and
pop
pop
mov
xchg
xchg
push
inc
jo
mov
outs
add
add
pop
les
dec
push
leave
and
fadd
or
sbb
add
and
pop
icebp
pop
lock
push
push
repnz
js
lock
fbstp
inc
lock
ret
sbb
and
push
outs
add
xor
hlt
in
push
pop
fild
xor
jmp
adc
sbb
or
outs
sbb
xlat
js
popa
mov
ret
cld
mov
dec
xor
cmp
adc
xor
dec
push
jb
fcomp
jae
adc
(bad)
lock
and
aam
stos
adc
jnp
jge
js
add
fcom
jecxz
pop
mov
xor
push
sbb
mov
lahf
dec
sbb
ret
dec
sbb
(bad)
mov
xor
add
int3
mov
sbb
and
dec
dec
jbe
(bad)
add
sub
adc
stos
lock
mov
aam
inc
nop
xor
mov
sub
pop
push
jp
fdivp
xor
adc
and
test
rol
inc
or
in
inc
xchg
push
aam
lods
jg
shl
adc
inc
cmps
mov
mov
sub
shl
inc
mov
pop
test
enter
pop
or
mov
xchg
add
mov
adc
add
int3
dec
or
ret
adc
jmp
test
sub
mov
pushf
xchg
mov
mov
fild
ins
les
add
lock
inc
int
dec
in
cmps
sbb
lods
test
add
mov
jge
sbb
mov
imul
es
inc
jmp
push
jb
mov
mov
pop
mov
cvttps2pi
xchg
cdq
call
hlt
push
add
sub
iret
xor
and
sub
jle
out
adc
sbb
lods
addr16
cwde
loopne
and
xor
sub
mov
xchg
std
cmp
ins
ret
dec
imul
nop
sub
mov
lods
outs
inc
pop
call
xor
unpcklps
mov
ja
push
sbb
popf
xor
xor
test
xor
jl
es
dec
test
jne
sub
adc
pop
mov
pusha
clc
xchg
mov
ins
test
dec
or
mov
mov
inc
sqrtps
xchg
pop
cmp
xor
xchg
lods
mov
retf
stos
add
das
xchg
add
push
lea
inc
xor
rcl
packssdw
and
mov
arpl
add
sar
xor
sbb
mov
adc
or
or
jne
adc
loopne
pop
and
(bad)
push
loope
adc
enter
fdiv
mov
sahf
xlat
test
mov
bound
repz
xchg
mov
jb
lds
fmul
test
mov
jle
out
lock
mov
mov
dec
mov
push
popa
mov
pop
inc
lahf
hlt
sbb
xor
cmp
pop
and
cwde
pop
pop
xchg
call
pop
inc
push
out
mov
pop
ds
add
cmp
inc
xor
dec
pop
add
mov
call
inc
adc
mov
adc
add
mov
adc
inc
pop
mov
inc
sbb
sbb
jmp
pop
(bad)
fild
das
sbb
ret
mov
test
xchg
add
fwait
or
jp
call
push
mov
imul
fild
dec
je
add
jmp
fld
sub
add
and
(bad)
sub
test
int
dec
and
mov
mov
inc
xlat
inc
xchg
xchg
adc
das
das
jno
sbb
mov
and
add
jle
and
xchg
ret
mov
sbb
call
clc
xor
test
ins
sub
je
push
es
pop
cmp
divps
dec
(bad)
aad
scas
aas
mov
inc
mov
add
add
fiadd
clc
adc
test
and
or
inc
test
push
sbb
and
adc
imul
sub
xor
xchg
nop
push
mov
(bad)
scas
mov
push
cmp
adc
rol
retf
xlat
adc
add
sbb
lods
xor
(bad)
daa
and
outs
add
ret
sub
xchg
sub
push
inc
mov
ds
inc
or
mov
sub
xor
loope
movs
outs
stc
sbb
mov
bound
push
loopne
test
popa
retf
ss
ins
nop
cmp
es
mov
test
dec
dec
xor
loope
test
ds
popf
dec
push
out
adc
jmp
fwait
and
test
neg
cmp
adc
arpl
mov
dec
je
add
jne
pop
and
add
por
aas
mov
ds
inc
or
cwde
pop
mov
test
lock
ins
push
out
and
mov
push
sbb
ret
mov
or
add
mov
cmp
fs
sub
dec
pop
sub
movs
add
mov
ds
adc
dec
enter
mov
nop
or
daa
dec
add
xchg
mov
jns
pop
fwait
out
lock
daa
int
in
inc
je
dec
mov
test
push
lock
sub
shl
mov
dec
enter
push
mov
nop
(bad)
wrmsr
xor
push
daa
and
adc
mov
int3
xor
add
mov
or
push
loope
xchg
sub
and
push
cmp
int
xchg
sbb
or
inc
and
inc
adc
out
imul
xor
dec
call
push
fld
pop
inc
sbb
mov
adc
add
gs
add
adc
mov
and
jnp
or
test
cmps
cmp
mov
call
sbb
xchg
push
adc
sub
and
call
jg
scas
jno
dec
or
je
cwde
jl
ss
sub
retf
adc
popa
sub
add
add
push
add
movs
lea
jp
dec
lock
xor
xchg
mov
sbb
repnz
cdq
sbb
outs
xlat
cwde
addr16
dec
xchg
dec
jmp
loopne
ins
mov
test
jo
and
pop
or
gs
and
inc
and
push
adc
retf
dec
call
pop
pop
sbb
add
sbb
ror
stc
dec
add
adc
add
pop
les
dec
or
movs
ret
stos
clc
dec
sub
jg
dec
jge
and
(bad)
rcr
and
push
jecxz
dec
sbb
xor
sub
rcl
pusha
lods
jle
sub
and
add
or
ror
push
cmc
ins
or
push
dec
inc
mov
adc
push
mul
or
mov
push
sbb
dec
outs
add
mov
dec
mov
imul
sbb
ror
adc
cmp
rcl
cmp
test
fstp
mov
fs
and
nop
std
sub
inc
inc
sub
inc
add
sub
push
cvtpi2ps
(bad)
and
leave
mov
sub
into
mov
inc
mov
push
dec
add
xor
cmp
add
test
sub
xchg
add
push
cs
jecxz
xchg
sub
call
and
iret
cwde
ror
inc
lock
cmp
out
sar
dec
fstp
adc
jge
lahf
and
and
push
mov
mov
push
jmp
push
sub
add
ins
mov
add
jno
sub
xor
in
mov
sbb
xor
lds
cmp
cmp
mov
cs
jns
fbld
rol
pop
add
sub
mov
shl
ja
or
and
jmp
fcom
sbb
repz
xchg
out
push
mov
or
or
rol
(bad)
dec
and
or
outs
mov
pop
int3
xor
xchg
inc
imul
mov
mov
add
xor
inc
ins
pop
aad
xchg
ja
test
ret
hlt
sbb
inc
out
inc
adc
adc
mov
mov
and
inc
dec
fst
ss
mov
fstp
ins
out
inc
ss
mov
scas
add
and
jns
sbb
add
mov
mov
bnd
cld
add
sbb
mov
dec
sbb
fsub
je
xor
or
jmp
xchg
xchg
add
cmp
sub
das
test
sbb
xlat
xor
push
or
and
push
add
cmp
cdq
mov
add
add
adc
lock
inc
jmp
movs
inc
push
je
sbb
je
sbb
jg
mov
and
fwait
aas
and
fld
leave
xchg
add
and
add
outs
add
add
enter
push
adc
add
add
lea
xor
retf
inc
movs
aam
ret
test
fldenv
xor
leave
add
repnz
in
ror
add
pop
arpl
pusha
cmp
push
cld
imul
ret
or
jmp
xchg
retf
mov
add
sub
mov
sbb
test
dec
mov
add
aaa
out
mov
inc
pop
mov
call
ins
loope
aam
test
add
mov
das
ret
(bad)
call
loopne
retf
mov
loope
push
sar
add
in
xchg
lock
and
mov
inc
xchg
adc
push
sub
cdq
mov
mov
lock
xor
sub
rcl
sbb
jo
ins
xor
rcr
in
pop
cld
adc
aam
jns
xor
call
in
call
inc
in
in
adc
sbb
sub
add
outs
dec
mov
lock
pop
or
xor
push
shl
or
and
loopne
jmp
in
popf
pusha
mov
in
in
dec
or
cmp
pop
adc
jns
push
jb
and
fwait
addr16
test
xchg
or
lock
dec
mov
jl
and
add
or
xor
fidivr
in
bound
xlat
rcr
mov
mov
mov
loopne
dec
fisttp
sbb
add
shl
add
jbe
ds
ret
in
mov
rol
test
dec
and
sub
xchg
xor
out
inc
jbe
push
out
pop
push
xchg
push
or
adc
inc
or
add
xor
imul
rcr
pop
and
in
add
and
mov
adc
pop
ficom
jae
btr
les
mov
push
push
or
dec
ret
push
push
dec
(bad)
aaa
mov
pop
stos
sub
iret
push
stc
cmps
in
dec
add
mov
xchg
ds
ror
cs
push
cmp
inc
jo
or
cmp
loop
(bad)
and
ins
jnp
sti
scas
push
les
or
cs
fdivp
call
ror
or
push
jg
and
sbb
and
inc
add
jo
addr16
mov
daa
pusha
das
aam
adc
or
imul
aaa
adc
sbb
scas
mov
aaa
adc
aas
and
sbb
adc
pop
sub
jne
movs
dec
dec
ret
mov
cwde
inc
add
add
gs
adc
mov
sbb
or
and
adc
dec
mov
pop
pop
push
ret
jle
dec
ins
outs
rol
xchg
pop
or
(bad)
mov
jp
clc
jne
icebp
mov
xor
push
mov
jns
sbb
cmps
jns
cmps
inc
add
add
call
inc
pop
cmp
add
mov
add
mov
sub
js
dec
add
jmp
mov
dec
das
scas
ja
lahf
lods
sub
cmp
jo
dec
aam
mov
add
sub
pushf
xchg
lock
je
or
xchg
dec
xor
(bad)
push
cmp
inc
shl
bound
xor
dec
fild
inc
sbb
push
or
or
leave
cmp
or
leave
lahf
pop
js
pop
jp
jbe
enter
dec
in
sub
mov
scas
and
jle
push
ret
ret
ds
mov
fwait
mov
into
jmp
frstor
psrlq
or
retf
leave
fild
add
or
xor
fmul
adc
adc
or
repnz
mov
inc
add
adc
mov
int3
popf
shl
ret
push
xchg
test
push
(bad)
jbe
inc
stos
jmp
cmps
lods
rcl
mov
adc
hlt
xchg
jle
lds
lock
and
mov
xor
mov
ins
frstor
(bad)
sti
es
sbb
mov
jp
(bad)
cmp
cs
ins
sub
xchg
data16
cwde
nop
adc
ja
dec
inc
add
mov
cli
outs
or
mov
dec
pop
xchg
sar
dec
inc
cmp
frstor
movs
in
js
repnz
sub
je
mov
and
jb
push
ds
iret
xchg
and
add
sbb
scas
int
sbb
add
fistp
inc
and
das
adc
dec
imul
cs
dec
outs
nop
popa
ret
lea
jmp
inc
test
ins
nop
out
inc
inc
push
adc
fisttp
or
add
mov
shl
and
ds
dec
out
cmps
and
xchg
sbb
jo
pop
out
xchg
test
fs
or
test
or
test
movs
and
pop
xor
popf
xchg
mov
mov
fcmovnbe
cmp
xor
jge
mov
daa
pop
lods
pop
jge
mov
push
dec
lea
sub
ss
jbe
mov
loopne
or
sub
inc
rcl
popf
inc
enter
add
sub
sub
jecxz
je
outs
xchg
or
inc
and
mov
stos
mov
mov
push
mov
pop
sub
popa
ins
pop
xchg
sar
sub
sqrtps
or
or
or
and
pop
fstp
mov
sbb
and
lock
mov
adc
loope
ret
push
cmc
shl
mov
(bad)
sbb
add
and
mov
mov
neg
adc
or
inc
pop
inc
aam
and
stc
add
inc
(bad)
pop
jo
std
sbb
adc
test
cmps
push
pop
ficom
mov
mov
into
ret
cli
xor
sbb
imul
mov
sti
and
or
ret
mov
cs
shl
push
and
retf
fxch
and
ror
js
cld
sub
cmp
jb
dec
inc
fidivr
stos
sbb
or
pushf
pop
aaa
adc
adc
inc
data16
mov
test
mov
push
pushf
loop
push
mov
push
add
push
call
inc
cmps
ret
xor
mov
pop
pop
pop
ss
and
push
inc
sbb
adc
or
jge
xchg
push
cmp
xor
adc
mov
adc
popa
sbb
mov
jmp
add
sbb
fnsave
pusha
jo
adc
fs
add
fcomp
add
inc
or
push
adc
in
test
ss
dec
pop
inc
inc
or
retfw
mov
add
popf
popf
mov
adc
jno
movs
das
pop
fcomp
push
enter
push
or
pop
out
pop
nop
jnp
pusha
mov
scas
ror
xchg
jp
jmp
add
mov
stos
rol
xor
mov
pop
cli
dec
push
add
add
mov
lea
(bad)
push
add
adc
loopne
push
mov
sub
xor
test
fidiv
and
into
or
and
xor
leave
inc
or
ins
es
gs
mov
or
add
lahf
mov
push
jmp
pop
inc
mov
sbb
(bad)
dec
enter
dec
out
retf
fwait
jp
sub
aas
sbb
rcl
repz
out
ror
cmp
or
push
ins
outs
add
cmp
xchg
shl
push
sub
inc
aas
ret
xchg
jne
test
jg
popf
sub
sahf
xchg
out
pusha
add
movs
sbb
xchg
mov
push
jp
pusha
movs
xor
test
xor
dec
sbb
sub
and
add
ins
xor
inc
movs
and
cmp
sbb
in
cmps
add
retf
add
imul
xchg
lods
xchg
fnstenv
fsub
push
nop
adc
mov
dec
cmp
adc
lock
mov
js
mov
jg
adc
test
xor
popa
adc
int3
mov
jbe
pop
cmc
push
pop
mov
sub
pusha
or
inc
fcom
nop
inc
mov
or
jmp
push
out
rcl
in
or
xchg
cdq
push
sub
and
add
rol
rol
pop
ins
call
jae
xor
ja
xchg
add
add
or
cmp
inc
push
cmp
cmp
pop
inc
xor
adc
pusha
or
and
fldcw
adc
scas
call
dec
mov
mov
sub
add
lds
and
sub
or
push
mul
test
pop
push
mov
adc
aad
cmp
mov
stos
daa
cwde
add
push
out
lods
jo
xchg
sahf
int3
xlat
(bad)
mov
xchg
pop
sub
fst
mov
adc
retf
sahf
or
or
mov
imul
or
aaa
pop
ss
dec
pusha
or
ss
mov
pusha
xlat
lods
fcos
inc
pop
push
pop
xor
ins
add
sub
pop
sub
inc
mov
sub
mov
movs
sahf
(bad)
nop
push
inc
gs
add
jno
jmp
(bad)
std
lea
mov
loope
ret
scas
dec
iret
mov
ret
push
or
or
sub
dec
sti
jle
adc
les
mov
cmp
retf
inc
dec
inc
inc
leave
mov
loope
leave
xchg
movs
cmp
and
adc
aaa
test
sub
adc
or
les
pop
sbb
bound
out
bound
fsubr
or
pop
stc
aam
sub
lock
ja
or
ja
and
(bad)
mov
or
ja
test
xor
mov
ins
xor
mov
nop
imul
dec
or
xor
pop
add
inc
and
movlps
leave
retf
ret
or
arpl
imul
lock
inc
and
cmp
push
fidiv
rol
xor
pop
or
push
into
push
mov
(bad)
es
push
jnp
into
adc
or
sub
xor
mov
inc
cmp
cmp
rol
jo
xor
sub
xchg
jb
es
mov
push
xchg
icebp
xchg
call
cdq
test
xchg
xchg
movs
mov
adc
inc
fisubr
pop
cmp
xor
and
xor
mov
add
repnz
mov
cdq
mov
add
ret
andps
jbe
into
dec
ror
mov
cs
sub
in
jmp
out
cmp
ds
js
add
cmp
mov
nop
test
pop
loope
xchg
into
add
out
sbb
cwde
push
outs
push
jmp
(bad)
add
pop
fnsave
push
push
mov
adc
cmp
test
push
inc
cs
inc
jno
in
inc
add
fiadd
adc
sub
pusha
sbb
xlat
bound
leave
adc
dec
push
dec
xlat
mov
add
aaa
adc
inc
add
dec
pop
jno
nop
clc
outs
les
leave
sbb
xor
mov
jl
imul
shl
inc
dec
inc
call
xor
pop
cmp
push
jmp
lea
push
scas
sbb
xchg
ins
xchg
push
test
leave
or
adc
add
aas
mov
loopne
add
inc
lods
push
adc
or
es
pop
test
mov
ja
(bad)
int
ret
(bad)
xor
cwde
iret
iret
pop
push
adc
xor
add
sub
ja
mov
ret
or
or
mov
cdq
inc
or
pop
pop
push
sbb
into
repz
or
push
cmp
mov
or
sub
jo
cmc
mul
mov
je
retf
mov
or
jmp
(bad)
pop
bnd
push
push
sub
sar
(bad)
add
adc
addr16
cmp
adc
je
dec
pop
mov
cld
mov
or
je
cld
xor
or
inc
adc
rol
adc
jns
sub
xor
sub
xor
fild
loop
and
clc
fs
sbb
add
xchg
mov
add
(bad)
pop
loopne
arpl
mov
fdiv
leave
call
inc
add
pcmpgtb
jbe
scas
pop
inc
mov
sbb
mov
or
jl
or
jl
gs
push
pop
dec
push
adc
(bad)
xlat
adc
xor
adc
pop
dec
jbe
popa
pop
pop
push
mov
push
fmul
adc
test
cld
test
fcmovne
or
sbb
test
add
test
or
push
cmp
jbe
in
pop
aas
sbb
lods
nop
and
out
or
pop
sti
xor
mov
xor
add
addr16
mov
sub
dec
sbb
pcmpgtb
outs
pop
or
jne
icebp
add
icebp
dec
into
mov
rcr
xor
and
mov
add
loopne
add
fstp
mov
dec
popa
mov
add
and
push
xchg
push
(bad)
jbe
sbb
mov
in
add
add
add
mov
lea
push
adc
jl
dec
movs
dec
or
pop
and
fmul
pop
pop
mov
ror
fisttp
div
mov
pop
in
scas
fiadd
add
pop
or
add
or
inc
sar
xchg
and
int3
retf
les
loope
arpl
pop
fidivr
fisttp
adc
jbe
dec
jns
pushf
ins
mov
push
push
je
xor
jne
rol
pusha
(bad)
jmp
sar
cwde
test
jbe
mov
jle
lods
pop
mov
push
ja
jb
jle
stos
shr
test
cmps
and
or
add
push
mov
inc
adc
mov
add
pop
nop
and
dec
sbb
mov
ret
sbb
push
pusha
leave
mov
xchg
push
mov
js
retf
idiv
cmp
and
sub
dec
cwde
dec
push
or
push
fist
call
and
aam
sub
cmp
mov
imul
sbb
or
add
mov
jecxz
xchg
ds
push
inc
mov
add
ds
sbb
add
sub
lock
or
cli
fist
lock
sub
push
shl
clc
mov
call
push
adc
(bad)
inc
inc
mov
int3
or
mov
pop
mov
ja
rcr
add
inc
sub
mov
inc
dec
mov
inc
fcom
dec
xor
and
jge
imul
cmp
push
xor
mov
mov
out
fcom
mov
jo
mov
push
mov
cs
sbb
dec
push
xchg
push
nop
retf
dec
outs
bound
pop
ins
adc
jmp
xchg
inc
xchg
aaa
mov
mov
xchg
in
push
cmp
lods
and
dec
jmp
es
adc
fimul
mov
adc
(bad)
sbb
jbe
sub
jl
adc
sbb
ret
add
add
adc
mov
lods
inc
sub
arpl
pcmpeqd
cmps
mov
push
xor
sar
hlt
or
push
push
or
cmp
xor
div
aam
nop
sbb
sbb
dec
adc
(bad)
pop
dec
add
push
test
jbe
mov
or
mov
push
xchg
or
popa
dec
xchg
xchg
test
clc
jbe
pop
adc
push
or
adc
push
adc
(bad)
or
mov
mov
sub
jmp
cmp
fisub
js
jge
imul
inc
sbb
jae
jae
or
shl
jne
cs
and
cs
add
jnp
jnp
and
pop
test
(bad)
jbe
pusha
add
cmps
jnp
xor
hlt
inc
inc
and
jmp
test
fwait
dec
add
inc
cdq
xor
sub
inc
add
add
add
adc
cmp
repnz
jbe
bound
sub
dec
ja
loope
adc
adc
jl
into
test
or
sbb
mov
idiv
test
sbb
pop
jae
fisttp
inc
(bad)
cmp
jo
mov
dec
dec
dec
sbb
lock
(bad)
dec
xchg
cmp
lods
xchg
and
pop
and
add
push
call
ret
or
retf
mov
lods
pusha
push
or
inc
ds
mov
ins
xchg
xor
jne
ins
add
cdq
mov
pop
jno
fcomip
mov
mov
repnz
inc
cmps
movs
jb
(bad)
mov
in
packsswb
xchg
call
cmp
add
pop
cmp
popf
dec
jl
imul
mov
hlt
push
pop
pop
sbb
cmp
lds
and
shr
imul
movs
push
dec
mov
test
push
or
push
jl
pop
mov
xchg
sbb
sbb
pop
xchg
sub
and
pop
and
pop
sub
push
cmp
mov
sub
jmp
pop
lods
out
or
inc
retf
dec
mov
inc
cmp
push
adc
xchg
movs
pop
push
rol
xor
dec
xor
pusha
daa
add
call
dec
cmps
dec
sbb
jle
rcl
rol
adc
aam
cmp
xor
cmp
sti
or
cmp
bound
sbb
sub
or
mov
shl
loope
arpl
mov
jg
jo
push
or
pusha
ja
xchg
fist
mov
aaa
ins
adc
mov
js
and
aaa
push
or
cmp
sbb
jnp
or
adc
in
or
idiv
outs
fcomp
jle
in
xchg
fwait
xor
stos
out
ds
xchg
rep
sbb
das
and
sbb
or
xchg
mov
daa
sub
arpl
sub
push
stos
imul
mov
scas
push
or
inc
mov
inc
or
fcom
ror
ins
lods
lds
jmp
jg
icebp
loope
cmc
pop
(bad)
push
pop
sbb
data16
call
adc
mov
movs
sbb
or
cmp
std
or
inc
inc
sbb
or
test
sub
xor
xor
es
gs
dec
lock
cmp
frstor
jle
enter
out
xchg
das
cmc
add
leave
movs
pusha
fdiv
pop
mov
pusha
mov
in
or
add
adc
out
out
inc
fiadd
add
mov
xor
mov
and
imul
sbb
test
or
inc
and
dec
lea
mov
jb
jle
in
in
and
or
push
inc
xchg
js
outs
repz
adc
mov
and
dec
gs
cmp
js
add
jmp
xchg
call
and
imul
adc
xchg
js
jge
xchg
xlat
xor
cmp
xchg
or
call
add
xlat
ds
(bad)
adc
imul
lahf
enter
test
mov
or
(bad)
mov
sub
dec
mov
mov
adc
cmp
mov
mov
cmc
add
bound
dec
xor
stos
fidiv
xchg
dec
popf
pop
(bad)
push
int3
outs
mov
clc
or
mov
xor
jo
sbb
sar
ds
push
sbb
pop
(bad)
(bad)
outs
jae
and
push
fsubr
ds
adc
sbb
add
je
cdq
lods
mov
loopne
aas
mov
xor
jo
jecxz
xchg
push
mov
inc
test
and
inc
imul
mov
adc
out
mov
mov
cmps
pop
push
mov
xchg
dec
jo
push
mov
nop
aam
or
popa
sbb
xlat
je
push
add
jmp
js
pop
sbb
push
push
xor
cli
fild
jo
or
lods
ja
in
cmp
fcom
les
sbb
scas
and
adc
(bad)
pop
(bad)
pop
fldenv
fidivr
dec
dec
cmp
cmp
inc
hlt
das
add
imul
jle
jmp
sub
iret
push
pusha
push
cld
imul
fdivr
add
sub
add
aas
sbb
or
sub
stos
leave
dec
sti
pop
sbb
sbb
mov
inc
mov
ret
adc
and
cld
stos
lods
ins
push
pop
arpl
sbb
add
xor
cld
sbb
lods
ds
retf
pop
(bad)
out
and
pop
and
lods
mov
dec
push
adc
xchg
test
into
retf
push
retf
push
sti
adc
mov
gs
and
(bad)
dec
sub
pop
xor
data16
add
into
dec
push
mov
aas
jle
cmp
jl
pushf
in
sub
mov
lea
int3
xor
xor
add
pop
pop
ret
sub
pushf
movs
mov
dec
hlt
repz
cmp
call
je
ja
outs
or
push
push
arpl
jecxz
push
sbb
dec
dec
add
push
jb
aaa
loope
shl
inc
or
int3
add
mov
xchg
mov
ja
stc
test
mov
xlat
jl
add
mov
dec
pop
aas
push
add
inc
or
cmp
push
inc
rcl
nop
cmps
dec
dec
or
push
pop
mov
jno
sbb
and
xor
pop
adc
push
mov
xor
into
cli
pop
stc
or
scas
mov
mov
std
cmp
jbe
mov
pop
xlat
fisttp
stos
xor
mov
mov
mov
adc
dec
add
pop
and
lea
not
mov
xchg
inc
and
sbb
mov
xor
add
sbb
add
push
ror
pop
test
popf
xchg
js
xor
cwde
nop
stos
adc
aam
or
enter
in
sub
sub
jne
or
cdq
sahf
xchg
push
sub
js
imul
pushf
scas
nop
fmul
and
adc
inc
pop
cli
cmp
lds
punpcklbw
ret
xchg
mov
mov
jmp
pop
dec
js
dec
mov
xlat
cmps
add
jnp
jle
and
add
das
das
mov
mov
inc
jo
and
repnz
sbb
pop
mov
sub
add
add
or
enter
dec
ins
add
imul
pop
stos
xor
dec
jo
test
das
dec
mov
inc
fwait
test
adc
push
pop
pop
and
jb
mov
rol
jp
push
enter
jg
xor
jle
out
test
test
loope
sbb
pusha
imul
imul
pop
fisub
loope
xor
or
sub
mov
cli
sub
je
dec
(bad)
adc
mov
pop
add
sahf
retf
sbb
add
add
add
push
or
(bad)
sub
and
xor
imul
ror
ret
or
add
adc
mov
sbb
bound
lea
aam
mov
xor
(bad)
(bad)
mov
cmp
jmp
cmc
pusha
stos
mov
mov
lods
fwait
mov
hlt
push
push
or
scas
sub
pop
lds
add
push
mov
(bad)
adc
stc
ret
call
inc
test
cmp
mov
add
dec
or
ds
test
sbb
mov
(bad)
xor
push
dec
ins
movs
cmp
rol
push
das
or
cmps
or
movs
fisttp
jae
cmp
or
retf
mov
in
repnz
fs
sbb
add
adc
push
cmps
dec
cmp
nop
(bad)
pop
push
ss
sbb
daa
pop
aaa
jge
jmp
sbb
dec
retf
adc
adc
or
adc
add
fst
ins
or
pop
ja
jmp
xchg
inc
add
rol
adc
loopne
mov
xchg
add
or
mov
sbb
dec
in
or
add
or
adc
movs
inc
retf
rol
mov
je
retf
xchg
std
adc
cmps
pop
mov
je
mov
push
ds
cmp
fcomp
bnd
sbb
test
loop
add
inc
pop
inc
ins
jne
shl
adc
ins
ret
idiv
(bad)
cmps
jns
imul
aam
shl
mov
sbb
(bad)
js
pop
pop
push
add
inc
enter
inc
les
add
lods
outs
pushf
in
mov
loopne
adc
sbb
dec
sbb
cmp
push
lea
repnz
cmp
adc
mov
add
nop
jo
sbb
nop
rol
jge
adc
jo
xchg
push
or
add
add
sub
and
shl
cs
sahf
mov
ret
sbb
push
xor
daa
pop
inc
dec
aaa
sub
dec
ins
adc
outs
jns
sub
xor
xlat
ds
in
lock
push
rcl
mov
sar
and
adc
sub
push
add
cli
inc
outs
cwde
dec
iret
or
shl
mov
push
dec
push
pushf
pop
fldcw
int3
add
or
xlat
sar
xor
mov
and
pushf
and
(bad)
lods
add
push
lea
fidivr
ret
push
shl
cmp
or
push
mov
mov
(bad)
in
add
push
nop
push
push
or
or
aas
fmul
lea
mov
adc
mov
cwde
jg
add
push
mov
xchg
cmp
pusha
jo
jle
dec
xor
int3
movs
dec
xor
ret
ja
leave
sbb
jb
nop
iret
repz
adc
push
das
in
jbe
in
xor
mov
leave
lea
dec
add
call
pop
pop
and
xor
adc
into
lea
push
push
cmp
jmp
sbb
das
call
cmp
or
add
adc
(bad)
gs
cmps
lock
mov
loopne
or
jbe
cs
and
enter
adc
mov
lods
mov
inc
ja
and
cmps
daa
push
outs
sbb
mov
test
lods
data16
sub
enter
int
popa
out
sub
pop
frstor
add
test
or
cmc
inc
lea
test
xchg
pushf
xchg
add
or
cmp
test
add
sub
fisub
hlt
pop
je
push
fst
xlat
imul
mov
push
mov
dec
out
sbb
test
inc
inc
cmp
test
(bad)
loopne
ss
cld
jno
retf
xor
mul
mov
mov
mov
(bad)
jge
test
dec
xchg
sub
mov
js
adc
jge
cmp
cmp
mov
mov
mov
dec
adc
sbb
lea
rcr
pop
and
xor
fisttp
cs
adc
adc
(bad)
imul
adc
mov
nop
xor
or
sar
jge
push
push
sub
jb
inc
rcr
jge
push
shr
and
sub
cmp
pusha
or
imul
xchg
ret
adc
(bad)
popf
aam
aad
mov
sbb
jg
imul
mov
add
pop
mov
daa
sbb
xchg
fs
(bad)
dec
hlt
jg
adc
pop
inc
mov
aam
pushf
mov
jb
mov
cmp
cmp
and
pop
cmps
dec
sub
imul
int3
js
push
jecxz
ins
mov
lods
pop
daa
add
dec
daa
rol
jmp
pop
sar
ja
mov
cmp
or
mov
adc
cs
pop
shl
mov
mov
(bad)
mov
push
cmp
out
and
sub
push
xchg
ret
jp
in
inc
xchg
push
cmp
arpl
mov
jo
sti
and
das
sbb
retf
mov
mov
pop
sbb
ins
test
pop
mov
mov
lea
sbb
mov
fidivr
and
mov
add
(bad)
mov
ret
ins
clc
nop
mov
(bad)
jge
test
je
pop
dec
pop
jno
je
sti
xchg
dec
adc
cmc
sar
mov
xchg
inc
gs
lock
cld
pop
(bad)
(bad)
mov
jg
out
xor
jns
sar
call
inc
jmp
push
movzx
mov
jmp
sub
adc
repz
push
adc
or
in
or
fsubr
(bad)
mov
js
imul
xor
sbb
inc
mov
sbb
add
js
cmp
and
lock
stos
dec
xor
movs
sub
cmp
jge
or
into
mov
dec
xor
ret
fadd
clc
xor
dec
lahf
(bad)
jecxz
mov
cmc
js
dec
inc
icebp
xor
(bad)
stos
jge
push
xchg
fs
xchg
or
sbb
int
cli
aad
and
(bad)
int
(bad)
inc
mov
cmp
cmp
push
fimul
xor
stos
loopne
pop
or
xor
xchg
cmps
cs
inc
adc
push
repz
mov
cmp
or
inc
dec
ret
or
push
mov
rcl
push
test
pcmpeqd
ins
add
enter
dec
cmps
adc
sbb
or
bswap
or
call
stos
and
sbb
add
sub
inc
aas
aad
int3
xor
or
dec
fs
xchg
lods
mul
cmp
add
cmp
(bad)
je
dec
es
(bad)
push
mov
lods
in
frstor
adc
sub
stos
leave
cmp
ror
out
sar
push
dec
les
pop
retf
push
jbe
in
xchg
jge
push
cmp
xor
hlt
(bad)
adc
pop
or
pop
or
pop
test
movs
in
cvtpi2ps
sbb
outs
inc
stos
mov
and
ror
aad
xchg
add
sub
jns
je
push
xchg
ret
push
push
add
and
inc
add
dec
fs
dec
jl
test
add
xchg
movsx
and
fcom
push
add
inc
outs
jl
inc
call
inc
adc
clc
fcmovnu
sbb
jmp
dec
js
jmp
inc
add
mov
retf
cmp
sbb
fwait
mov
xor
sub
add
test
std
outs
xchg
or
(bad)
sbb
push
adc
or
inc
das
pop
add
pop
dec
pop
mov
xor
xor
and
add
xor
jo
jnp
pop
sbb
sub
sub
jne
sti
shr
(bad)
xchg
dec
jle
cwde
sbb
cld
mov
push
jle
or
out
inc
pop
mov
dec
out
pop
mov
add
mov
outs
mov
lea
sar
lods
and
and
loope
xor
stos
add
sbb
cmps
jl
mov
inc
dec
icebp
inc
xchg
push
jbe
fsubr
out
mov
pop
jne
xor
fdivr
das
aas
(bad)
or
cwde
hlt
jp
sbb
jp
push
xchg
jo
and
lods
add
popa
std
adc
mov
or
xor
sbb
push
fs
xchg
or
xlat
dec
sub
pushf
sub
pop
xor
or
or
or
mov
sub
mov
xor
ins
outs
loopne
dec
lea
jmp
mov
fdivr
xlat
dec
xchg
jmp
sub
fadd
push
pop
js
xor
or
sbb
shr
lahf
call
jmp
js
push
sub
imul
xchg
pop
add
movs
leave
test
shl
jl
xchg
dec
push
and
into
daa
cwde
inc
pop
cli
mov
push
sbb
jecxz
test
aaa
sbb
and
adc
add
ret
sub
clc
sar
lds
mov
sub
stc
push
mov
loope
and
shl
inc
lods
dec
mov
adc
nop
sub
pop
adc
into
ret
arpl
push
xchg
ins
and
xchg
push
mov
hlt
lea
mov
add
dec
mov
mov
test
cdq
jle
push
cwde
jg
das
(bad)
and
test
xor
cwde
and
or
add
inc
inc
mov
xor
dec
jno
pop
scas
add
mov
(bad)
out
or
push
cli
xchg
inc
lea
or
mov
add
icebp
je
or
dec
jns
ret
jg
icebp
retf
and
sbb
fild
cmp
into
jp
lock
jmp
stc
dec
jmp
loop
add
out
rcl
push
sbb
push
movs
cmp
push
in
xor
(bad)
ror
dec
mov
inc
mov
xor
mov
pop
inc
lock
ja
jne
add
add
clc
dec
add
outs
paddsw
or
loope
add
ror
lea
sbb
int3
add
test
(bad)
sbb
jae
xor
(bad)
push
inc
test
shl
jb
xor
xor
pop
aam
ss
lods
dec
mov
jle
mov
popf
mov
out
inc
aam
mov
mov
inc
inc
jg
ins
adc
rcr
mov
cmp
inc
sub
cwde
mov
ret
inc
jecxz
dec
sbb
pop
ss
push
xor
adc
je
pusha
nop
mov
or
(bad)
(bad)
(bad)
cwde
pop
jl
(bad)
les
sbb
xor
or
and
(bad)
loope
mov
or
and
add
test
fcomp
lea
pop
je
inc
lock
sub
dec
ins
or
sbb
inc
ret
inc
es
or
pop
ror
mov
cmp
jne
mov
test
mov
inc
shl
das
movs
xchg
add
jb
sub
ins
dec
sbb
mov
es
dec
or
arpl
ror
hlt
or
or
xchg
push
das
aas
ins
bound
gs
fadd
fdiv
mov
cmp
xchg
pusha
mov
mov
or
lea
sbb
add
je
push
mov
jo
bound
add
push
repnz
mov
cmp
jg
cmp
cmp
(bad)
push
adc
stos
pop
sbb
call
jge
sbb
adc
xor
test
xchg
ror
sub
pop
or
or
xchg
adc
ret
test
aas
(bad)
ror
pop
mov
sbb
jb
pushf
cmp
and
add
movs
dec
sub
sub
mov
js
in
adc
dec
repz
movs
out
lea
and
mov
ror
test
adc
push
out
adc
movs
sbb
ja
xor
cmp
cs
movzx
adc
test
dec
xchg
(bad)
jge
push
and
sbb
retf
repnz
cmp
mov
ja
rcr
and
sar
xchg
add
mov
les
sub
js
nop
fild
add
and
(bad)
popa
stc
or
cmp
cwde
in
aam
(bad)
in
adc
rol
aas
push
fs
push
add
mov
push
pop
aaa
xchg
xor
inc
ja
iret
xor
(bad)
sti
daa
lds
inc
inc
addr16
loopne
std
inc
(bad)
(bad)
mov
xor
sbb
test
sbb
and
sub
add
jne
fistp
mov
loop
(bad)
sub
(bad)
xlat
mov
sub
call
lods
and
dec
fnstenv
js
repnz
and
dec
mov
xlat
push
jg
xchg
xchg
mov
push
mov
cmp
adc
clc
mov
fs
lock
repnz
add
in
cmps
es
push
add
xor
(bad)
mov
js
scas
in
outs
loop
daa
adc
mov
add
mov
sbb
jmp
add
stc
inc
fnstenv
or
sub
out
ret
cs
xor
pop
out
sbb
inc
or
inc
js
inc
lds
push
xor
mov
test
inc
in
push
xor
dec
test
inc
mov
push
ins
and
icebp
adc
call
adc
and
call
or
sub
jo
sbb
adc
into
jae
icebp
jbe
mov
fs
pop
ret
add
ret
adc
add
or
or
pop
int
dec
fdivr
add
or
add
sub
pop
lods
and
or
and
mov
and
aas
movs
mov
outs
call
inc
or
mov
pop
mov
stc
leave
outs
inc
clc
jo
retf
rol
inc
mov
dec
bound
push
pop
sbb
sbb
pop
je
add
daa
fsqrt
adc
cmp
adc
or
in
popa
fcomp
adc
jmp
mov
ins
and
or
mov
adc
push
retf
mov
cmp
jge
out
test
push
sub
xor
or
sar
ins
and
or
in
in
(bad)
adc
sbb
mov
adc
jns
xor
push
sbb
(bad)
mov
(bad)
aas
js
mov
test
add
je
adc
dec
inc
sbb
push
add
add
mov
or
cwde
sub
jo
js
test
sbb
sbb
jb
mov
lock
or
push
loopne
mov
fild
add
pushf
fmul
dec
or
movs
push
lods
icebp
div
add
adc
sub
or
es
sbb
push
fsub
shr
shl
xchg
enter
in
adc
dec
jbe
in
or
cmp
rcr
mov
lea
xor
mov
xor
xor
pop
xor
loopne
call
or
or
retf
push
push
pop
stc
xor
mov
repz
add
xchg
es
push
daa
adc
add
cmp
mov
adc
cmp
add
cmps
(bad)
add
sbb
inc
xor
arpl
xor
pop
out
xchg
pop
sbb
cmp
xchg
jecxz
xrelease
xor
push
or
cmp
out
fdivr
jp
inc
test
and
adc
sar
les
inc
xchg
mov
push
or
movs
xchg
xor
js
xchg
or
cdq
xchg
sub
scas
add
or
sub
xchg
or
int3
clc
jmp
dec
jo
mov
inc
or
add
mov
adc
push
cmp
adc
pop
jg
mov
add
mov
loopne
dec
rcr
cs
push
sbb
or
daa
add
mov
je
les
mov
ret
aad
int3
mov
fwait
imul
jge
xor
add
in
iret
sbb
sar
xchg
push
loopne
movs
sub
sar
div
or
hlt
out
fbstp
mov
jns
and
pop
pop
and
jb
or
ret
test
ins
xchg
push
nop
dec
adc
add
push
inc
dec
inc
(bad)
mov
mov
mov
inc
mov
add
fdiv
xor
jl
inc
repz
jecxz
inc
add
inc
xor
aam
jmp
dec
pop
or
dec
xchg
paddb
xchg
sub
sbb
mov
repz
xor
test
cmp
stos
mov
sbb
pop
(bad)
loopne
fadd
es
ror
add
inc
and
in
leave
in
(bad)
addps
scas
in
jae
adc
or
outs
dec
mov
les
sub
pop
rcl
loop
imul
ror
mov
loopne
push
test
add
mov
and
cli
aam
aas
(bad)
cld
fcom
inc
fadd
adc
mov
xor
push
mov
les
or
mov
add
jle
jo
or
adc
sbb
jg
cld
lock
pop
inc
sub
or
xlat
push
or
jmp
dec
cmps
and
sbb
je
inc
or
jbe
cld
sub
je
movs
sub
stc
add
es
inc
mov
les
add
das
ds
enter
and
jb
adc
sub
mov
mov
cmp
pop
lods
icebp
xchg
and
xor
sub
inc
add
push
mov
fdivr
rcr
test
mov
cmp
adc
fsubrp
aas
xor
jne
ror
jne
(bad)
sub
sbb
jl
jns
arpl
xchg
nop
and
mov
add
push
and
xor
clc
pushf
jne
dec
subps
mov
sar
or
dec
jl
push
call
cwde
js
call
inc
fnstsw
adc
imul
inc
adc
xor
push
jge
adc
in
adc
cmp
iret
sbb
retf
aad
mov
jl
inc
repnz
push
and
aaa
jno
sbb
js
ret
push
js
push
xchg
or
sbb
fscale
fidiv
and
pop
mov
cdq
idiv
shl
call
js
xchg
fwait
push
lock
dec
int3
out
jl
add
xchg
js
sbb
and
outs
les
shl
sti
pop
pmuludq
fidivr
add
dec
dec
push
dec
inc
add
add
add
pop
ror
int3
pop
mov
sbb
push
scas
inc
and
jbe
jne
cs
lock
ds
xchg
or
pushf
push
add
and
adc
ror
sub
mov
pop
xlat
sub
and
push
or
inc
cdq
jmp
(bad)
mov
ret
add
jb
cmp
std
call
jne
sub
lea
inc
xchg
or
test
aam
inc
fsub
retf
jno
mov
mov
lahf
fs
push
pushf
sbb
(bad)
sahf
jmp
scas
push
sub
aad
rol
mov
or
sbb
fld
fadd
mov
ss
pop
sbb
pop
add
add
adc
out
jl
jge
jl
mov
in
add
jle
hlt
dec
js
xchg
rol
int3
(bad)
leave
test
imul
pop
mov
pop
sahf
pop
xor
mov
mov
jo
xchg
pop
jecxz
push
mov
mov
mov
xor
xor
and
jge
xchg
mov
out
addr16
pushf
xchg
arpl
in
test
test
mov
jp
jp
add
outs
dec
in
popa
push
xor
and
mov
fld
mov
dec
retf
ficomp
inc
cs
(bad)
and
lods
inc
xchg
mov
inc
nop
sbb
push
sbb
retf
jecxz
jnp
pop
les
call
add
mov
mov
mov
inc
jns
inc
adc
jmp
clc
js
jl
dec
inc
cmps
inc
je
pop
xchg
mov
or
pop
cld
jmp
in
add
xor
push
or
ja
pop
add
or
sbb
add
mov
xor
xchg
stos
push
shl
cmp
mov
rcl
bound
jl
lea
inc
ret
jmp
mov
test
xchg
clc
sahf
popa
jo
add
jae
dec
or
cmp
scas
mov
adc
dec
dec
mov
loopne
add
fsubr
mov
enter
clc
(bad)
ins
mov
jl
jg
les
pop
sbb
shr
js
mov
mov
push
push
and
mov
sbb
push
adc
cmp
jae
xor
add
push
cmp
push
or
sub
push
cmp
mov
adc
imul
in
mov
les
call
in
xchg
or
call
dec
inc
es
add
dec
lock
inc
xor
add
or
aas
or
mov
cmp
xor
adc
(bad)
fadd
cmp
adc
and
sahf
inc
pop
ja
imul
cmps
xor
cdq
pusha
dec
lods
aaa
int3
mov
js
in
loopne
xor
jo
int3
or
in
(bad)
into
dec
rol
aaa
sub
mov
jl
or
inc
xor
in
aaa
outs
sbb
inc
jl
jo
mov
xor
add
or
in
jge
add
jne
and
and
add
stos
cwde
sbb
lock
push
pusha
mov
loopne
lock
adc
mov
dec
lea
fs
pop
mov
loopne
cmpps
rol
cmp
xor
mov
add
rol
in
jl
mov
add
jns
push
jno
dec
in
fcomp
sub
call
mov
pop
add
mov
pop
mov
movs
xor
push
cs
aam
into
pop
repz
sbb
fwait
xor
push
sbb
shl
jae
jbe
sub
das
dec
cmp
push
push
xchg
rcl
mov
mov
hlt
lods
sub
xchg
loopne
sbb
into
mov
call
fldenv
in
lock
xchg
(bad)
ret
test
test
rol
mov
fcom
fsubr
aaa
jge
cmp
mov
fadd
enter
arpl
(bad)
shl
rcl
add
enter
sub
and
sub
mov
mov
rcl
fcmovnu
sbb
sbb
add
jae
pop
pop
inc
adc
xchg
fsubr
sbb
dec
sub
pop
cmps
pop
add
add
dec
mov
repnz
fwait
push
in
stos
cmp
js
jmp
outs
imul
xor
jl
jne
sbb
adc
dec
mov
ret
mov
(bad)
cmps
push
int3
ins
movsx
add
and
fdivr
pushf
xor
mov
inc
out
and
sub
dec
mov
ins
mov
shl
mov
arpl
add
fmul
mov
xchg
push
or
jo
sti
pop
rcl
nop
rcr
add
(bad)
push
retf
xchg
and
add
sahf
mov
fsubr
xor
push
fs
and
out
repnz
ror
inc
inc
lahf
push
mov
or
out
jo
nop
push
sub
sub
js
in
push
rol
inc
ret
lods
adc
adc
push
push
test
fwait
lock
and
or
je
clc
(bad)
sub
(bad)
sbb
ret
cdq
clc
jl
fimul
or
xchg
call
xor
xchg
cmps
std
mov
mov
mov
mov
mov
cmc
sub
in
dec
or
(bad)
lds
cmp
ror
jp
enter
dec
add
addps
ror
test
ins
sahf
xchg
test
dec
lahf
push
xor
cmps
xchg
push
lods
add
aaa
jns
vfrczpd
mov
pop
mov
sbb
inc
jo
loopne
jnp
add
pop
dec
clc
shr
mov
pop
sbb
add
push
cmp
hlt
push
jbe
dec
mov
add
mov
xor
(bad)
sub
(bad)
push
inc
add
adc
inc
test
push
sub
sti
dec
jl
call
mov
inc
data16
mov
and
or
psubsw
inc
scas
movs
nop
mov
(bad)
push
adc
dec
in
ins
pusha
xor
xchg
mov
and
sub
popf
or
or
or
cs
inc
mov
or
add
jle
push
loopne
xchg
xor
and
xor
js
enter
jo
inc
(bad)
jg
jmp
adc
inc
gs
add
mov
cmp
jo
cmp
in
enter
mov
aam
jge
inc
mov
add
jge
rol
jle
fiadd
dec
jne
mov
or
mov
or
inc
enter
inc
sub
sub
and
or
std
jbe
cmp
in
dec
inc
cld
mov
lea
add
sar
pop
adc
xor
out
push
and
dec
sbb
mov
fist
jl
sbb
xor
out
dec
cs
jge
cmp
lods
xor
jns
dec
jo
cs
xchg
cmp
mov
xchg
add
add
mov
pop
fisttp
das
loopne
add
adc
cdq
mov
inc
add
xor
sbb
add
and
cmp
(bad)
gs
adc
sbb
sbb
addr16
fst
sbb
inc
out
dec
rcr
lods
push
sub
ffree
fmul
scas
fsub
sub
fwait
and
push
mov
imul
mov
add
sar
add
rol
add
stc
xchg
cmp
adc
inc
inc
sbb
cs
jnp
jle
cmp
out
adc
inc
stos
mov
(bad)
(bad)
dec
xchg
test
dec
jg
ja
and
push
push
(bad)
mul
cmp
cli
mov
ins
jmp
mov
or
cwde
xchg
dec
fisub
add
popa
cwde
mov
mov
dec
or
adc
imul
or
adc
dec
jge
xchg
inc
sub
mov
js
(bad)
dec
sub
sub
xchg
adc
dec
adc
inc
out
sbb
jl
push
js
sbb
(bad)
ror
hlt
out
pop
pop
je
or
std
sbb
sub
ds
add
inc
les
jb
les
jnp
cmp
sub
out
jmp
sub
cmp
cmp
test
xchg
xchg
adc
push
js
mov
push
mov
dec
sbb
mov
jmp
sbb
sbb
mov
inc
sub
pushf
dec
gs
lds
call
inc
jecxz
lahf
push
jb
stos
mov
pushf
xchg
mov
inc
and
(bad)
jp
retf
adc
cmp
std
push
pop
cmp
into
cli
jae
jl
data16
push
popf
ds
xor
add
jmp
shl
mov
sbb
add
cmc
fmul
lods
push
jmp
rol
cli
add
jne
mov
mov
add
mov
mov
ja
jp
cmp
fisubr
xchg
imul
dec
shr
adc
dec
mov
jecxz
fcmovbe
retf
cs
call
add
into
jmp
sub
push
(bad)
push
or
mov
icebp
inc
imul
xor
mov
xchg
nop
inc
add
mov
add
add
xchg
lods
inc
sub
mov
mov
sbb
cmp
dec
adc
fsub
rcl
nop
addr16
mov
pop
rcr
sub
push
add
add
es
shl
in
imul
mov
dec
or
adc
add
inc
xchg
loopne
enter
xchg
cmp
mov
into
sub
shl
int3
mov
fdiv
fcomp
cld
ror
shl
and
inc
push
xor
loopne
push
adc
pop
mov
push
enter
xor
jle
xchg
adc
xchg
enter
aad
in
pop
or
mov
inc
clc
jge
clc
sub
cmp
ss
add
cmp
retf
jmp
inc
sbb
int
in
jle
clc
and
cdq
inc
leave
repnz
or
or
(bad)
push
ror
imul
or
fmul
and
fdivr
outs
push
dec
pusha
scas
call
les
jge
or
sbb
fwait
div
xadd
lahf
add
test
push
or
jle
aam
pop
mov
inc
fidivr
mov
jl
test
aas
bound
or
(bad)
std
loope
jnp
aaa
call
add
inc
mov
jge
add
inc
or
push
dec
inc
and
(bad)
fist
fsub
pushf
imul
arpl
xchg
sub
fmul
pop
sub
sub
sub
pushf
jo
xchg
inc
pcmpeqw
add
pop
sbb
or
lea
mov
call
dec
test
cmp
adc
retf
loopne
test
add
or
nop
mov
jb
es
push
or
retf
popa
add
imul
int
pop
dec
dec
cmp
jge
mov
push
jge
lods
and
loopne
pop
add
mov
sti
fnstenv
or
jge
jl
add
or
enter
sbb
mov
adc
xchg
cmps
mov
adc
sbb
inc
aaa
out
ins
(bad)
imul
sbb
add
sub
xchg
jge
nop
ss
add
clc
add
add
xor
rcl
add
ror
js
or
add
cmp
in
rcl
addr16
es
xchg
mov
nop
mov
mov
(bad)
push
arpl
dec
gs
gs
add
jmp
add
inc
shl
rol
cwde
fwait
icebp
xchg
xor
mov
cwde
add
and
cli
out
inc
retf
ret
adc
or
xor
(bad)
fsub
(bad)
or
js
jmp
in
pop
test
pop
leave
adc
add
push
sbb
or
int3
les
out
jbe
into
pop
fmul
(bad)
mov
inc
add
jnp
push
mov
sar
sub
xor
pop
icebp
inc
mov
or
aas
adc
push
cs
or
hlt
sub
add
push
xchg
jp
jmp
ja
cmp
rcl
loopne
ja
nop
inc
push
inc
iret
movs
inc
jl
retf
fld
icebp
loopne
dec
jae
jl
inc
lods
sub
mov
add
mov
xchg
dec
pushf
test
mov
add
loopne
inc
mov
data16
push
cmp
movs
sahf
add
jns
cmps
dec
(bad)
inc
add
mov
cmp
nop
test
enter
enter
mov
dec
loopne
(bad)
mov
add
outs
push
js
loopne
and
and
sahf
out
sbb
sub
inc
xlat
and
pop
and
movs
sub
sbb
mov
add
and
mov
jbe
in
stc
xor
add
add
movsx
ror
inc
add
test
pop
add
ficomp
ror
sahf
call
adc
sti
mov
mov
call
rcl
push
lods
mov
imul
adc
cmp
test
pop
push
adc
setae
icebp
ss
loope
push
mov
not
push
xchg
adc
(bad)
push
dec
add
bound
mov
dec
push
xor
out
mov
pushf
sub
inc
lods
mov
mov
fsub
shl
cwde
clc
mov
pop
adc
adc
sub
cmp
jne
push
fadd
lock
(bad)
push
add
xchg
cli
push
mov
sbb
scas
jl
push
ret
push
in
pop
aam
fcom
pop
mov
push
fdiv
loopne
adc
xor
jne
rcr
or
dec
sar
cld
adc
mov
mov
iret
dec
movs
into
jb
fdivr
dec
jb
mov
shl
cmps
imul
call
pop
mov
scas
gs
or
mov
lock
iret
sub
mov
neg
mov
mov
cmp
mov
dec
sbb
push
xor
add
neg
adc
inc
nop
sbb
xchg
jmp
dec
fistp
jp
mov
call
call
icebp
and
push
adc
xchg
adc
mov
sbb
mov
push
sub
sahf
inc
mov
leave
xchg
test
pop
or
sub
retf
and
inc
in
lahf
mov
and
push
add
jecxz
jl
add
lods
push
and
lods
mov
pusha
dec
cmp
sahf
dec
mov
cmp
(bad)
and
sti
push
mov
mov
jle
or
jg
mov
adc
iret
sub
dec
jne
(bad)
and
imul
xchg
adc
in
xor
je
addr16
mov
(bad)
xchg
retf
pop
mov
jmp
add
repnz
lahf
adc
in
push
(bad)
std
out
(bad)
dec
jl
mov
or
pop
addr16
pop
ins
fldenv
mov
push
sub
mov
ret
mov
js
iret
inc
sbb
sub
loopne
push
popf
cs
inc
pop
dec
pop
(bad)
xor
stos
adc
push
jnp
sub
jge
cmp
cmp
(bad)
and
(bad)
dec
test
adc
in
xchg
and
adc
arpl
add
test
ret
add
pop
es
sub
shr
inc
(bad)
ud1
sbb
test
loope
pop
hlt
fcom
and
dec
add
js
jge
jo
pop
inc
mov
mov
add
mov
jo
xor
push
iret
push
dec
inc
(bad)
push
not
jmp
mov
test
test
fcomp
mov
jecxz
rcl
push
movs
ret
adc
pop
mov
xchg
je
mov
cmp
lock
inc
sub
cmp
jl
pushaw
push
movs
in
pop
fcomp
push
inc
stos
rcr
rcl
aad
inc
hlt
and
outs
test
xchg
jo
mov
jo
jle
shl
inc
cmp
sub
jp
ins
enter
push
add
mov
push
call
jmp
in
inc
je
mov
dec
jge
adc
or
inc
sbb
(bad)
push
and
jp
loop
or
adc
inc
mov
(bad)
pop
out
ins
sar
sub
push
adc
div
ss
rol
dec
push
popa
pop
jo
repnz
clc
mov
sbb
sbb
out
js
cmovbe
and
data16
and
inc
(bad)
add
js
fadd
cmp
loopne
cmp
cwde
or
jle
sbb
mov
sub
lods
mov
daa
xchg
mov
cli
dec
movs
adc
in
or
mov
inc
or
pop
sbb
call
arpl
out
jg
cwde
mov
pop
loopne
jno
aaa
loope
cwde
(bad)
jmp
inc
sub
add
adc
or
lea
gs
and
inc
inc
dec
adc
test
cmp
sbb
adc
ins
shl
and
ds
scas
adc
jno
fwait
or
daa
dec
mov
xor
gs
fcmovnb
jmp
scas
pushf
mov
mov
sub
cmp
int3
cmps
mov
xor
movs
and
mov
adc
loope
lahf
lock
sahf
out
sbb
or
add
mov
mov
ret
aam
push
push
stc
push
push
and
mov
push
rcl
movs
loopne
or
pop
out
test
icebp
sar
test
stc
cs
movs
imul
or
add
mov
dec
jne
jno
(bad)
int
pop
add
sbb
push
mov
dec
sbb
mov
jnp
imul
pop
or
add
dec
pop
ret
loope
rcr
not
hlt
inc
into
fdiv
xor
push
fiadd
(bad)
jb
cmps
dec
sbb
in
mov
and
retf
fwait
push
mov
or
xor
out
cmp
mov
push
add
iret
dec
(bad)
add
inc
or
push
adc
ja
push
adc
mov
mov
adc
mov
add
push
cmps
jns
pop
pop
aas
cmp
loopne
xchg
outs
mov
ret
dec
rcr
repz
fbstp
sahf
lea
clc
jmp
mov
nop
push
xor
pop
mov
pop
adc
add
inc
clc
push
dec
and
and
and
popa
adc
and
mov
ins
jg
mov
cli
call
mov
jecxz
xor
dec
cmp
les
jbe
dec
cmp
test
jno
ror
ret
mov
aas
sbb
stc
adc
add
ror
test
pop
pop
outs
mov
and
shr
mov
ds
fcomp
clc
into
aad
or
rcl
mov
mov
mov
push
push
outs
(bad)
jmp
sub
dec
sbb
push
and
mov
dec
clc
lods
cmp
push
inc
scas
or
mov
ja
stc
add
xchg
fs
inc
pop
movs
and
cmp
(bad)
scas
sbb
(bad)
shl
(bad)
sbb
movs
and
jne
add
(bad)
cmp
push
jmp
lea
adc
add
cmps
sbb
or
ret
and
mov
dec
loopne
push
and
xor
mov
pop
cwde
enter
popa
dec
imul
push
pop
addr16
pop
stc
fwait
pusha
int3
inc
fstp
add
add
loop
or
ins
adc
push
enter
jl
test
mov
sub
sbb
mov
shr
mov
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
adc
clc
sub
sub
and
dec
cmp
movs
add
sub
dec
enter
sbb
pop
fadd
ins
xlat
out
adc
adc
and
sbb
adc
push
cmp
push
mov
jb
cmp
adc
dec
or
cmp
test
jmp
push
or
out
(bad)
xchg
add
xchg
push
pop
loope
dec
lea
jmp
sub
push
jp
push
hlt
xchg
ret
ret
push
sbb
mov
push
mov
sbb
push
mov
mov
cmp
dec
scas
mov
inc
fsubr
xor
outs
out
jp
pusha
fs
inc
pop
aam
movs
inc
in
and
movs
sbb
xor
adc
adc
adc
push
fadd
imul
pop
xchg
mov
push
pop
mov
lea
clc
mov
inc
cwde
inc
or
and
loopne
mov
dec
xor
jmp
jo
mov
pop
(bad)
jae
pop
xor
mov
add
adc
push
or
mov
or
cmp
pop
or
inc
sub
dec
repz
jno
adc
nop
out
and
mov
jmp
je
sbb
dec
mov
pop
lea
imul
test
mov
div
mov
fwait
lea
daa
jne
sub
xchg
push
jbe
shr
inc
sub
(bad)
lea
stos
cdq
lods
cmp
mov
adc
push
inc
and
std
pop
hlt
jg
jns
pop
or
push
shl
push
leave
sbb
cmps
inc
cmp
fmul
jae
data16
mov
jae
div
or
pusha
and
push
mov
mov
in
nop
add
test
push
pop
sub
test
add
cmp
cli
xchg
jge
mov
ss
jmp
icebp
add
sbb
and
push
scas
add
or
or
add
clc
ficomp
push
and
push
dec
and
adc
adc
stos
push
and
sar
and
neg
mov
retf
stos
xor
test
hlt
fwait
cwde
xchg
jns
xchg
add
or
pop
cdq
mov
sub
push
rcr
jo
sbb
sub
inc
or
dec
xchg
stos
fnsave
jae
add
or
add
jno
and
push
call
cmp
jnp
out
sbb
adc
ror
adc
add
push
(bad)
clc
mov
dec
ret
inc
fild
mov
mov
mov
cmps
or
cmp
loopne
test
cmps
outs
test
and
mov
adc
and
pop
mov
xchg
inc
int3
jp
push
jne
outs
mov
pop
daa
push
mov
mov
add
sub
imul
shl
jbe
idiv
fild
or
repz
and
mov
das
add
stos
push
mov
sbb
cs
aad
sbb
sbb
xchg
dec
jmp
cmp
or
cmp
icebp
dec
cmp
push
inc
mov
xchg
xchg
mov
dec
push
pushf
cmc
pushf
outs
sub
rol
mov
dec
or
sub
dec
sti
push
pop
js
stos
dec
ds
ins
and
mul
daa
and
or
push
shl
nop
jno
ins
hlt
add
dec
mov
xor
jo
cmps
add
add
dec
mov
push
inc
push
fsubr
nop
adc
or
dec
add
pop
inc
push
jmp
xchg
out
int
inc
mov
inc
adc
sbb
outs
pusha
mov
std
inc
dec
cmp
mov
jge
or
scas
retf
fs
loopne
and
sysenter
add
or
and
ss
add
dec
mov
popa
lahf
test
dec
cld
dec
xor
out
xchg
pushf
div
push
(bad)
jmp
sbb
inc
push
xor
movsx
jae
je
test
cdq
mov
cmps
inc
jl
repnz
mov
addr16
fimul
lock
add
pop
inc
jge
lods
adc
adc
xchg
test
cmp
pop
cwde
cmc
ret
fwait
loopne
mov
xor
mov
or
dec
rol
nop
sbb
jnp
xor
add
xchg
mov
mov
(bad)
not
into
sub
(bad)
xchg
cmp
leave
test
jl
mov
jb
mov
aam
pop
push
rcl
gs
dec
imul
cmp
jl
sbb
jbe
mov
daa
sbb
inc
enter
call
ret
xchg
je
test
adc
sbb
dec
fs
arpl
fs
jb
cdq
mov
fild
add
push
pusha
jo
pop
dec
shr
enter
xchg
retf
mov
xchg
xchg
stos
lea
mov
and
inc
add
loop
inc
sahf
push
cdq
mov
stos
adc
adc
mov
or
je
mul
sbb
cmp
adc
pop
rcl
push
mov
xlat
adc
push
das
xor
pop
push
test
inc
cld
jp
scas
add
mov
wrmsr
xor
or
and
cmp
adc
jne
cmp
add
ficom
dec
sbb
jl
nop
cmps
mov
inc
sbb
(bad)
das
stc
add
sbb
pushf
pushf
mov
add
xor
(bad)
mov
je
out
add
mov
test
mov
icebp
cld
or
mov
inc
inc
sbb
pop
xchg
push
or
adc
and
scas
in
into
and
push
dec
push
and
mov
inc
shl
cwde
cmp
xor
add
ja
pushf
xor
ins
adc
mov
mov
push
vpmovuswb
mov
xchg
and
sahf
fadd
cmps
push
and
fnstenv
repnz
out
sbb
sub
mov
or
pop
cli
dec
dec
mov
sbb
shl
in
jno
ss
push
inc
cmp
and
push
adc
push
sbb
retf
(bad)
pop
scas
add
dec
push
or
in
cmp
js
mov
sub
xchg
add
xchg
push
add
movs
mov
scas
cmp
test
sar
sub
or
lea
push
pop
mov
pop
add
push
sub
or
sub
pusha
fisub
push
jns
push
dec
lds
add
sub
pop
cmp
sub
fcomp
push
fmul
lods
gs
test
adc
into
mov
push
xchg
cmps
jl
jbe
dec
cmp
sub
cwde
(bad)
pop
cmp
int3
in
data16
xchg
push
sub
stos
mov
fidivr
fs
adc
push
sub
sbb
je
aas
sbb
sbb
lahf
cmp
dec
jmp
test
movs
(bad)
ret
jg
bnd
xor
dec
dec
je
rcr
dec
adc
or
es
daa
add
add
mov
xchg
sbb
adc
pop
dec
xchg
test
mov
into
inc
pop
xlat
adc
cmc
cld
xchg
jbe
jns
jnp
and
or
outs
js
xchg
aaa
je
pushf
and
cmp
adc
sbb
jne
adc
js
pop
hlt
cmp
or
cs
xchg
das
in
push
popf
test
xchg
loop
dec
xchg
xchg
arpl
xor
shr
xchg
sar
pop
call
sub
xor
(bad)
inc
dec
xor
stos
xchg
push
mov
in
and
je
xor
or
dec
sbb
je
add
cmc
(bad)
lods
jbe
pop
fist
inc
mov
sbb
and
add
call
mov
sbb
push
add
pop
xchg
jmp
jo
xor
cli
fnsave
cmp
jp
daa
mov
xor
push
pop
test
add
push
test
sbb
scas
or
je
sub
sub
pop
imul
add
xor
adc
xor
lahf
outs
out
dec
jno
mov
call
movsx
inc
add
fcmovnb
fiadd
(bad)
and
sti
and
mov
jp
sti
cmps
xor
jl
inc
jmp
and
shl
lea
mov
jne
repnz
sub
sub
fstp
inc
inc
fmul
fmul
mov
or
mov
sub
mov
mov
adc
jb
push
retf
sub
call
stos
int3
repz
pop
adc
or
push
mov
dec
rcl
int
add
adc
jo
sbb
inc
test
add
add
(bad)
cmp
mov
pop
mov
stos
rcl
jl
pop
imul
mov
mov
arpl
cmps
pusha
in
pop
or
outs
push
inc
pop
cmp
les
mov
add
mov
xchg
in
mov
push
cli
push
jmp
dec
sbb
mov
pop
mov
add
dec
xor
ror
xchg
cmc
sbb
rol
jp
retf
sahf
mov
dec
inc
mov
sbb
jmp
outs
dec
aam
dec
jae
pop
clc
adc
pop
adc
push
or
xchg
div
xlat
enter
xchg
fs
push
fcom
or
sub
mov
aam
cmp
fwait
test
pusha
add
or
inc
mov
call
arpl
or
or
mov
mov
bound
scas
test
in
pop
pop
stos
inc
ret
lea
xchg
test
mov
add
test
jo
inc
sub
mov
ins
push
mov
sub
or
inc
loop
push
jg
ja
jp
ins
sub
js
ror
push
fs
lea
mov
mov
imul
and
xchg
or
xor
hlt
fst
pop
ret
cmp
test
adc
out
stos
push
and
jns
cli
cmp
jbe
leave
into
inc
sbb
dec
je
mov
mov
enter
mov
movzx
xor
or
shl
add
xor
mov
ins
(bad)
call
or
cmp
fcom
inc
mov
sbb
test
mov
inc
jo
hlt
inc
push
jge
lock
aad
jne
pop
hlt
jg
ja
lock
jo
fcomip
lock
mov
or
and
xor
repnz
jne
pop
push
add
jmp
jno
sub
cmp
dec
cmp
int
jnp
mov
push
add
inc
loop
sbb
or
sub
gs
(bad)
mov
les
push
dec
inc
xor
rol
jnp
xchg
sub
(bad)
popa
lods
mov
fadd
cmp
test
dec
loopne
ds
or
in
cmp
ror
fadd
mov
push
mov
or
jbe
pop
or
or
inc
adc
ins
xor
in
dec
push
sub
cmp
(bad)
xor
mov
test
outs
in
jbe
mov
popa
dec
ins
inc
sub
(bad)
test
in
inc
lea
out
es
jbe
pop
in
jp
stos
mov
rol
fucom
jge
ja
push
dec
jecxz
pop
arpl
data16
jecxz
jge
cmp
mov
scas
aam
dec
pop
mov
imul
pop
cmps
mov
int3
test
idiv
ror
push
xor
sub
xlat
cmp
push
jnp
xchg
aaa
add
ins
or
shl
sub
add
icebp
in
sbb
rcr
sub
clc
mov
lea
mov
sti
popf
push
clc
mov
dec
and
jmp
xor
and
enter
fcomp
jae
cmp
mov
push
jae
ja
jno
mov
pop
in
adc
mov
push
jecxz
mov
cmp
inc
adc
inc
sub
pop
adc
pop
hlt
jecxz
out
cdq
rcl
or
dec
push
inc
push
jo
or
ds
and
jle
jmp
repz
mov
adc
cmp
dec
stc
and
dec
cmp
iret
ficomp
mov
cmp
jmp
add
loop
add
aaa
and
dec
fsub
jo
pop
ret
lock
mov
outs
jmp
push
mov
mov
lahf
mov
aam
or
push
add
or
ror
neg
jae
ins
repz
repz
gs
pop
pusha
cmp
ss
push
jo
fild
add
data16
or
in
or
or
mov
pushf
inc
push
stc
adc
pop
fadd
leave
ds
cwde
xchg
cld
(bad)
mov
test
dec
inc
adc
inc
fcom
push
hlt
pusha
shl
imul
clc
dec
imul
and
lock
lock
pushf
dec
xor
aam
adc
call
aam
adc
aam
adc
and
in
xor
pop
call
push
jo
lods
imul
push
imul
adc
movs
loopne
fcmovb
and
mov
mov
enter
int3
fld
push
dec
dec
and
sbb
push
jnp
push
xchg
cmps
mov
cmps
ficom
loopne
push
in
call
push
imul
inc
cs
into
cmp
pop
sub
hlt
jae
(bad)
arpl
adc
call
dec
pop
in
push
and
push
pop
mov
xchg
push
sub
cmp
jmp
or
retfw
xor
jne
pop
sbb
imul
sub
adc
arpl
mov
test
jl
or
mov
arpl
and
adc
rcl
xchg
and
test
outs
into
test
cs
or
gs
dec
pop
in
add
push
aaa
cmp
add
and
add
cli
mov
les
dec
inc
inc
add
rol
jmp
jecxz
inc
repz
aas
pop
sub
aam
mov
jne
daa
shl
aad
jno
cwde
inc
cdq
fsubr
xor
out
xor
(bad)
(bad)
in
out
pop
mov
gs
pop
xor
out
push
inc
push
push
dec
or
out
inc
jo
shl
les
cmc
pusha
scas
or
mov
or
jae
dec
ror
jns
outs
pop
push
stos
in
add
sbb
in
inc
inc
sahf
jbe
pop
and
pusha
rol
dec
adc
cmp
ds
adc
adc
movs
fld
imul
push
ret
sbb
sbb
pop
or
lea
sub
xor
adc
and
loopne
fidivr
mov
jb
sub
mov
and
call
fdiv
sub
test
popa
(bad)
loopne
jle
sbb
fdiv
mov
sub
or
int3
push
es
fiadd
arpl
dec
sti
lods
cmp
shl
sub
or
(bad)
movs
aam
dec
test
cs
aam
xchg
mov
call
fbstp
add
sub
sbb
jbe
inc
loopne
add
mov
push
sub
or
sub
xor
stc
shl
call
sub
ja
inc
loopne
push
sub
mov
add
bound
cmp
push
push
(bad)
dec
popa
std
push
les
rol
inc
add
outs
aas
push
adc
cmp
inc
or
sbb
push
shl
sbb
mov
sar
rol
or
add
inc
shl
pop
hlt
cmp
mov
and
imul
mov
ficom
push
inc
xchg
mov
sbb
adc
xchg
retf
or
in
pop
and
add
add
je
sub
test
adc
imul
shl
imul
sub
in
mov
es
fisubr
mov
xlat
sub
test
add
loop
or
xchg
pushf
enter
mov
add
push
(bad)
cmp
xor
cmp
jmp
jg
popa
cs
in
loopne
gs
les
inc
in
(bad)
(bad)
and
pop
mov
mov
mov
or
cmp
xor
repz
push
sub
push
sbb
cmp
adc
in
inc
rcl
ss
pusha
push
shl
pop
sub
(bad)
cmp
jmp
mov
jg
loop
in
icebp
shl
or
loop
lea
(bad)
lods
jle
add
neg
lea
shl
imul
or
pop
pusha
imul
xchg
loop
shr
enter
inc
call
cmp
hlt
push
mov
cmp
push
pusha
sbb
adc
ins
pop
retf
fbld
rol
jge
or
jne
mov
clc
adc
jns
cmp
inc
call
jns
cmp
hlt
neg
mov
jmp
and
jne
ret
dec
push
in
int
dec
add
jo
int3
add
cld
add
jns
jmp
xor
sub
retf
jo
add
add
and
dec
and
and
cmps
sub
in
fdiv
repnz
ds
(bad)
fsub
add
push
in
mov
cmp
xor
daa
mov
(bad)
sbb
loop
mov
mov
mov
pushf
aas
push
rol
add
shl
mov
mov
push
pop
arpl
retf
retf
retf
jne
mov
and
neg
(bad)
fadd
pop
sub
out
and
push
pop
arpl
cmps
imul
push
push
cwde
add
cmc
add
pop
fxch
dec
jno
scas
retf
imul
scas
pop
pop
sti
jmp
adc
add
das
sbb
or
adc
mov
dec
loopne
push
dec
add
cs
das
dec
js
cmp
pushf
movs
pusha
adc
pop
sbb
cmp
or
test
pop
inc
aad
pop
das
lods
popa
hlt
aad
daa
push
pop
push
push
jp
push
imul
xor
add
ficom
jne
je
add
or
pop
popf
out
and
sbb
outs
ficomp
mov
push
shl
shr
imul
aam
sub
inc
sbb
jo
call
imul
sub
sub
and
repnz
mul
pop
pusha
and
xlat
(bad)
(bad)
cmp
lock
and
add
add
cmp
ficom
adc
or
inc
push
call
sbb
bound
cmps
adc
or
add
clc
dec
shr
push
mov
jle
add
xchg
adc
jne
xor
mov
lock
loope
pop
repz
sbb
imul
sbb
imul
xchg
imul
dec
sub
add
bnd
inc
into
adc
dec
sbb
push
pop
add
inc
add
pop
lods
nop
jnp
loope
shl
mov
pop
mov
adc
shl
push
xchg
clc
cmps
mov
push
mov
shl
dec
dec
enter
in
or
int
leave
cmp
mov
add
jmp
mov
inc
call
push
inc
sub
jnp
in
xchg
sub
pop
add
sbb
or
fsub
and
adc
add
cmp
or
pop
(bad)
dec
jb
lods
aaa
dec
stos
inc
sbb
add
es
pop
dec
mov
xchg
fcom
loopne
not
ret
call
mov
inc
pop
fst
fsubr
cs
inc
js
add
pop
dec
ror
fwait
call
xor
ror
or
ror
push
dec
sbb
push
test
movs
push
mov
or
enter
pop
adc
or
and
adc
nop
cmp
and
add
xor
cmp
(bad)
call
and
dec
pop
and
lods
cmp
jmp
imul
lds
inc
adc
imul
cmp
loopne
and
in
and
stos
pop
mov
fst
add
pusha
cmp
mov
cmps
dec
pusha
pop
push
cli
add
int3
sub
mov
inc
or
push
ja
jp
jbe
mov
push
mov
push
push
push
or
adc
stos
mov
pop
ror
js
hlt
stos
pop
mov
cwde
out
enter
mov
rcl
outs
mov
mov
lds
sahf
push
push
jne
ds
ds
sbb
inc
aad
ja
aam
inc
jg
dec
add
push
enter
inc
pop
jl
int
mov
rol
add
pop
xor
dec
inc
inc
push
sbb
rol
mov
dec
lods
and
out
adc
mov
push
mov
dec
lods
push
inc
push
std
sti
xor
xor
xor
or
mov
ss
add
lods
pop
or
mov
lea
loopne
loope
pop
inc
test
leave
add
bound
lock
inc
and
jmp
nop
nop
dec
adc
sbb
push
test
adc
pop
sbb
add
into
xchg
mov
in
leave
js
cmp
sbb
or
add
or
or
imul
cmp
push
test
outs
push
inc
push
sbb
adc
fcompp
stos
push
lock
call
loopne
stc
dec
mov
dec
pop
jl
outs
add
mov
xchg
or
lock
rol
loope
dec
fstp
pop
jne
push
(bad)
jne
add
add
int3
imul
lds
mov
aaa
(bad)
xor
inc
mov
mov
add
cmp
adc
bound
lock
inc
sbb
cmp
cmps
adc
sbb
and
mov
sbb
sbb
adc
adc
sbb
sbb
push
add
ffree
and
or
enter
and
es
sub
pop
rcl
es
pop
sbb
mov
or
mov
or
in
fs
add
adc
xchg
add
dec
adc
add
mov
inc
inc
push
(bad)
scas
sub
out
std
inc
mul
je
sub
call
add
rol
out
xlat
add
add
add
hlt
int3
shr
and
push
(bad)
ret
dec
and
enter
pop
xlat
xor
out
sbb
inc
fcom
push
xor
(bad)
(bad)
fcmovb
push
pusha
sub
test
dec
movs
add
loop
jo
cmps
daa
dec
inc
js
adc
repnz
out
inc
adc
jmp
push
imul
fbld
popa
fbld
xor
fld
pop
fwait
or
push
inc
xor
lock
ret
lea
add
xor
cmp
cmp
ret
mov
dec
pop
(bad)
popf
out
push
test
push
push
in
mov
test
sub
or
dec
popf
add
clc
or
hlt
adc
dec
and
mov
pusha
xor
sti
add
inc
jmp
mov
mov
shl
push
js
lock
ins
int
xor
je
mov
jl
and
scas
scas
xor
movzx
mov
dec
shl
int
adc
sbb
or
adc
sar
push
sti
sbb
std
vsubpd
adc
hlt
or
inc
mov
jp
push
add
inc
cmp
and
rol
jbe
xchg
or
fwait
xor
cmps
xor
ins
push
pop
xor
mov
jecxz
xor
and
or
adc
push
add
(bad)
adc
arpl
rol
ror
inc
mov
push
jp
mov
add
pusha
popf
cmp
jge
sbb
fimul
jb
imul
adc
inc
adc
dec
es
daa
call
add
fdiv
shl
xchg
lds
inc
lods
bnd
cli
push
push
mov
dec
pop
mov
jle
cmp
or
data16
and
out
cmps
enter
or
loope
enter
or
jmp
pusha
movs
push
add
ja
xchg
sub
push
sbb
aam
mov
call
inc
xchg
fcom
scas
inc
out
iret
in
ret
loopne
fidivr
xchg
cs
jo
push
fwait
xchg
jb
pop
push
or
inc
or
aas
mov
fs
mul
push
or
out
add
cmp
push
fimul
jno
pop
clc
mov
aad
pop
arpl
hlt
push
jns
jns
push
mov
stos
add
adc
pop
xchg
add
and
ret
jecxz
adc
je
dec
je
ss
aad
rcr
enter
xor
test
outs
cmp
fwait
adc
xlat
dec
xor
pop
cmp
sbb
mov
adc
int3
test
cmp
jp
adc
call
gs
jg
sub
pop
inc
add
sbb
cmp
dec
xchg
call
or
or
sub
jb
xchg
xchg
iret
cld
clc
hlt
or
and
mov
dec
xchg
mov
loopne
adc
mov
fsubr
je
push
sbb
pop
add
add
mov
aad
jmp
pop
call
pop
mov
ins
mov
fadd
int
jl
push
xor
lock
(bad)
rcl
jle
jecxz
push
xchg
shl
pop
pop
ror
and
pop
jae
pop
mov
mov
jle
xchg
or
and
xor
or
rol
mov
mov
inc
push
lea
adc
pop
ror
in
je
and
mov
cmps
fcmovnu
cdq
loopne
aaa
movs
or
ret
aaa
and
xor
in
cmp
(bad)
mov
movs
push
test
push
adc
inc
lock
das
jno
inc
lods
push
das
xor
sub
gs
aaa
pop
adc
xchg
out
out
les
jl
pop
ror
out
add
push
gs
jbe
pop
adc
iret
adc
adc
ret
cmc
cmp
dec
xlat
dec
pusha
add
test
daa
pop
ins
jle
std
push
xchg
sbb
add
adc
push
aad
loop
mov
mov
and
sub
pop
sbb
pop
test
or
sub
mov
lea
xlat
cmc
shl
sub
fldcw
outs
ret
das
mov
lods
les
fstp
xchg
movs
xor
mov
adc
out
pop
ficomp
popf
mov
adc
pop
add
mov
gs
jae
or
fild
mov
inc
fwait
data16
adc
inc
scas
mov
test
dec
cmp
add
dec
and
pop
popa
inc
out
popa
jmp
mov
jo
adc
clc
or
or
daa
cmp
or
push
hlt
mov
push
mov
jmp
xchg
pusha
sbb
leave
(bad)
(bad)
push
xor
push
sub
xor
inc
pop
sbb
add
into
add
mov
dec
mul
sbb
mov
ret
push
cs
mov
in
xchg
into
dec
out
sub
call
and
test
pop
in
dec
inc
push
ret
sub
push
and
xor
popa
xchg
pop
test
mov
mov
mov
add
lods
(bad)
cmp
xor
add
in
xor
mov
inc
dec
cmp
cmc
push
(bad)
inc
or
ret
add
jne
mov
xchg
out
add
leave
repz
shl
sub
enter
cmc
push
imul
mov
das
mov
ja
sub
push
xor
dec
jb
call
lds
dec
xchg
das
mov
pop
retf
test
fcom
mov
and
bound
xchg
shl
cwde
adc
imul
aaa
fadd
sub
rcl
hlt
add
iret
out
int3
adc
add
dec
dec
cli
int
jge
push
lds
sbb
push
ret
mov
dec
dec
add
push
ss
pop
loopne
lock
lock
jmp
jns
fldcw
push
cmp
inc
add
dec
leave
fsub
pop
sub
inc
lds
lods
shr
fist
xchg
sti
inc
inc
call
pop
sar
jecxz
mov
xchg
dec
fsub
call
adc
loope
add
dec
aad
test
jmp
ficom
xchg
xor
adc
sbb
push
jno
call
xchg
in
push
fistp
pushf
add
mov
xor
clc
andnps
mov
stc
dec
push
jle
jmp
mov
and
adc
loop
adc
mov
mov
and
dec
popa
addr16
sbb
and
dec
retf
pop
sbb
rcl
inc
jne
sub
movs
fs
pop
xor
shr
in
xchg
jg
mov
dec
ror
in
push
dec
jnp
pushf
push
push
mov
retf
div
mov
daa
mov
ret
xchg
push
adc
adc
or
inc
inc
mov
xor
jmp
mov
sub
rcl
jns
xor
cmp
shl
mov
sbb
jl
sub
jle
cwde
repnz
add
mov
pop
pop
cdq
nop
out
fidiv
sub
dec
or
jg
xchg
mov
js
test
or
cs
test
mov
add
and
xor
push
dec
and
cdq
mov
outs
enter
and
arpl
movs
aaa
add
lods
test
scas
cli
ja
rcl
adc
mov
inc
and
pop
mov
xchg
std
dec
test
fstenv
dec
sti
cwde
pusha
mov
add
nop
mov
jl
pop
and
idiv
mov
sub
retf
repnz
cli
imul
jbe
sub
push
lea
or
adc
xchg
mov
imul
pop
mov
jbe
fist
jae
mov
pop
stos
xor
div
add
or
jo
mov
jl
clc
out
adc
and
inc
and
imul
pop
mov
jl
dec
mov
mov
ja
pusha
shl
clc
sbb
stc
icebp
sub
inc
xor
lea
movs
(bad)
lods
or
rcl
(bad)
lahf
jno
add
imul
cld
aam
test
icebp
add
pop
cmp
sbb
push
lods
imul
dec
js
cmp
and
movs
mov
dec
jae
add
fdivr
mov
or
inc
and
enter
ret
xchg
pop
inc
mov
icebp
xchg
(bad)
sbb
or
adc
and
and
push
or
scas
or
add
mov
inc
mov
adc
mov
adc
cmp
push
add
sbb
mov
xchg
jg
shr
daa
out
call
cdq
dec
adc
rcr
xlat
push
push
sbb
cmp
dec
pop
and
mov
fwait
or
cmp
sub
es
les
inc
jecxz
loopne
enter
add
loopne
ds
xor
lea
mov
rcl
inc
add
(bad)
or
add
or
adc
or
pop
mov
jg
mov
outs
xchg
loop
add
adc
pop
mov
lock
jnp
jecxz
pop
push
jno
pop
and
mov
shl
add
icebp
xor
add
jle
imul
mov
clc
outs
sbb
outs
mov
mov
sbb
mov
push
loope
popf
pop
push
mov
cmc
shl
hlt
pop
jnp
and
xchg
adc
hlt
mov
mov
xor
mov
lahf
mov
mov
test
adc
out
ret
fcom
pusha
dec
mov
lods
pop
pop
fild
adc
xor
dec
int3
push
xor
sub
shl
push
popa
inc
push
fmul
inc
clc
add
cmp
mov
adc
or
dec
dec
xor
or
xchg
sub
mov
adc
test
push
out
jo
ins
lock
outs
jmp
jl
call
push
mov
sub
jmp
fisub
pop
mov
jge
jge
sbb
or
pop
mov
add
sub
mov
out
or
dec
movs
adc
mov
dec
arpl
add
and
das
mov
cmp
call
mov
(bad)
pop
add
aas
xchg
mov
dec
rol
les
and
mov
rol
rol
aam
adc
mov
stc
or
(bad)
ficomp
call
cmp
imul
aaa
inc
dec
pop
jo
xor
arpl
fs
stos
mov
cmc
add
outs
jns
pop
fnstenv
jmp
and
aad
jo
sub
mul
mov
cmp
xchg
push
mov
ror
or
test
or
js
cwde
xor
int3
inc
cmp
mov
push
daa
dec
cmp
fimul
out
es
adc
jae
ret
xor
dec
stos
js
mov
mov
jl
movs
inc
popf
add
shl
mov
mov
fimul
pusha
push
mov
sbb
adc
cmp
rcl
dec
inc
add
inc
std
xor
sbb
mov
enter
cld
inc
add
in
jno
push
test
movs
shr
cld
add
cmp
add
movs
cmp
test
mov
mov
and
dec
dec
mov
add
jbe
or
jbe
stos
popa
mov
inc
mov
test
movs
sub
lea
push
retf
lods
in
into
xchg
fadd
cmp
and
cmps
and
out
mov
sar
addr16
pop
add
inc
xchg
jge
inc
ins
jge
xchg
movs
bound
jg
mov
(bad)
jbe
jg
mov
loope
lea
or
push
jo
in
loop
push
mov
or
push
jae
rol
or
outs
push
cmp
mov
aam
push
adc
add
loopne
add
cmove
loope
pop
or
jmp
fdiv
ins
and
add
or
dec
call
jecxz
jmp
mov
or
adc
jge
pop
mov
les
add
mov
pop
dec
scas
mov
out
cld
xor
lea
jne
sahf
or
cmp
sbb
pop
jmp
movs
leave
out
sahf
pushaw
adc
(bad)
adc
and
std
aam
es
push
add
repz
daa
sub
aas
add
int3
cmp
add
add
add
ror
add
mov
xor
sub
lock
adc
xor
sub
inc
rcr
push
dec
push
sub
lea
mov
mov
add
xchg
inc
sub
or
fdiv
push
iret
and
jae
dec
cmp
popa
jl
dec
adc
gs
(bad)
xchg
and
and
leave
leave
push
xchg
rcr
and
mov
cmp
retf
mov
push
data16
push
add
xlat
lahf
and
push
cmovns
stos
cmp
and
ds
mov
movaps
mov
xchg
call
push
test
add
mov
fs
scas
pusha
xchg
je
pop
inc
dec
mov
xor
popf
xchg
or
lea
inc
add
push
xchg
or
and
pop
(bad)
mov
and
or
xchg
add
mov
imul
and
or
adc
mov
std
ficomp
adc
adc
lds
fidiv
cs
add
push
mov
daa
cmp
push
lods
sub
addr16
imul
es
pop
and
jmp
out
adc
mov
mov
push
jecxz
scas
xor
push
or
sbb
mov
imul
push
adc
movs
pop
or
adc
push
pop
and
(bad)
adc
rcr
fstp
or
sbb
not
and
mov
pop
loopne
add
fnstsw
xlat
ror
mov
or
in
pop
cwde
inc
sub
loope
loope
imul
adc
xchg
sbb
pusha
inc
or
sbb
or
js
ret
sbb
push
mov
pop
pop
sub
or
call
or
mov
loopne
std
(bad)
push
or
in
jmp
adc
xor
ret
xchg
add
les
leave
es
sbb
pop
jmp
mov
sbb
jmp
adc
pop
push
sbb
jnp
adc
retf
add
sbb
daa
sar
sub
add
dec
sbb
cmps
hlt
or
sub
ins
xchg
jle
push
xor
stos
or
ja
fild
push
cmp
pop
inc
xor
inc
sbb
mov
cmp
inc
adc
rol
outs
sub
arpl
add
jno
mov
inc
pavgw
adc
push
push
add
add
push
pop
lods
sub
fsubrp
or
lea
sbb
add
dec
test
repz
cmp
iret
jl
or
sbb
icebp
inc
cs
xchg
sahf
movs
push
mov
les
in
mov
jg
inc
mov
inc
add
cmp
push
adc
mov
test
adc
fisttp
rcr
outs
mov
adc
js
movs
ret
cld
and
jg
mov
mov
sbb
rcl
pop
xchg
les
fisttp
xor
pop
push
jle
dec
sbb
sub
xchg
xchg
(bad)
jmp
adc
mov
icebp
push
xor
push
and
mov
cmp
into
jae
ret
and
push
pop
push
or
mov
enter
adc
cmp
jl
push
fimul
cmp
shr
lea
cmp
dec
mov
inc
push
mov
or
jne
call
cmp
adc
jne
xor
enter
mov
inc
je
stos
(bad)
shl
or
sbb
test
out
push
in
ds
pop
lock
fldcw
lea
test
sbb
sub
ror
add
pop
xchg
(bad)
mov
pop
jb
push
inc
cs
outs
bound
mov
adc
dec
js
call
adc
push
and
mov
sub
sbb
add
mov
icebp
adc
jns
cmp
inc
retf
xchg
shl
jg
sahf
jns
mov
pop
mov
pop
and
sbb
dec
(bad)
sbb
fsubr
popa
ror
ja
rol
xlat
adc
movs
adc
stos
jmp
loopne
sub
outs
es
in
jmp
mov
cmps
(bad)
jle
ss
add
jge
adc
adc
fcom
lds
ret
lock
clc
in
ins
push
mov
xchg
mov
aad
ret
and
sti
xchg
ror
sbb
and
inc
rdtsc
hlt
mov
pop
fsubr
ins
cwde
ss
(bad)
loope
int
je
ret
sbb
mov
cmp
imul
add
std
or
mov
popf
xchg
xchg
pop
pop
mov
adc
mov
adc
or
lds
mov
and
into
ja
bound
xchg
jno
push
fsub
xchg
outs
mov
or
lahf
add
push
push
mov
popa
arpl
jne
out
cdq
nop
test
mov
neg
dec
pop
or
hlt
rcr
pop
stc
adc
sbb
sbb
movs
or
push
sbb
xchg
das
mov
cmp
jle
(bad)
nop
inc
mul
cmp
mov
std
aam
and
add
dec
push
stc
add
xor
sbb
push
mov
fs
add
pop
cmp
add
add
add
xor
ins
cwde
fst
push
or
sbb
scas
in
arpl
xchg
adc
test
or
icebp
mov
sti
loop
dec
mov
add
cmc
(bad)
inc
or
cmps
pop
jg
lods
popa
sub
in
adc
(bad)
mov
movs
aam
add
rol
int
aas
je
(bad)
mov
add
pop
and
imul
out
adc
imul
inc
cmc
daa
mov
inc
sub
jmp
xchg
loopne
and
xor
adc
cmp
mov
add
dec
in
out
jmp
cwde
adc
inc
cwde
loope
dec
adc
or
pop
sbb
dec
movs
dec
sub
adc
mov
inc
push
or
inc
cmp
jg
or
adc
ret
cmp
jg
aaa
test
adc
or
loop
lods
aaa
adc
or
scas
add
or
pop
aad
das
or
inc
jge
pop
jl
and
mov
adc
and
sbb
pop
adc
mov
dec
mov
gs
or
je
movs
popa
adc
sbb
jge
cli
(bad)
sbb
cli
dec
fcom
(bad)
cmp
jge
scas
dec
dec
sub
adc
add
push
loopne
test
jg
push
call
xor
cmp
test
dec
jmp
sbb
imul
jle
add
mov
mov
aas
jne
jmp
mov
jmp
inc
cmp
and
pushf
and
enter
lea
mov
pop
pop
pushf
cmp
cmp
xlat
mov
push
sub
cmp
sub
xchg
mov
add
jge
push
jne
adc
push
xor
into
or
lahf
xchg
test
sbb
lods
lea
and
and
and
adc
adc
or
fsub
cmp
ja
and
lea
pop
shl
add
mov
mov
add
add
arpl
fdiv
ss
adc
shr
and
jmp
xchg
mov
or
sub
mov
lea
inc
adc
js
loope
pop
pop
inc
dec
xchg
cmp
jo
jb
addr16
and
jo
push
icebp
inc
arpl
daa
and
jl
lock
mov
add
sbb
and
or
add
or
dec
push
and
adc
add
add
sub
repnz
add
add
cmp
xor
or
add
xor
es
or
inc
mov
movs
xor
xor
dec
lock
sbb
stos
es
push
mov
data16
test
cmp
fdivr
pop
nop
sbb
xchg
dec
or
adc
add
or
in
pop
jbe
in
test
cmps
adc
and
pusha
inc
mov
adc
fs
xor
cdq
into
push
sbb
jle
pop
nop
hlt
test
dec
lea
rcl
or
test
test
jecxz
std
fist
lahf
or
sti
(bad)
ficom
in
test
daa
push
stos
pop
mov
outs
sbb
sub
sub
inc
sbb
ror
push
mov
add
pop
ret
mov
shr
dec
sbb
dec
sbb
mov
and
bound
sbb
cs
movs
(bad)
push
clc
rcr
cs
xchg
and
xor
cdq
and
dec
call
cmp
and
inc
sub
sub
aam
cmp
sub
add
das
mov
(bad)
in
push
icebp
mov
std
sub
add
daa
or
adc
push
(bad)
enter
mov
xor
cmp
cld
ret
(bad)
xor
or
or
push
or
or
push
pop
xor
mov
xlat
cwde
push
sbb
mov
add
leave
movs
add
mov
push
iret
cmp
les
mov
or
or
add
outs
push
bound
add
inc
add
sub
or
pop
and
xchg
xchg
jmp
mov
dec
push
pushf
lea
loopne
add
hlt
or
push
and
push
mov
fsubr
pop
add
dec
jne
inc
inc
pop
push
push
add
adc
xor
inc
fist
add
ja
and
adc
icebp
inc
dec
push
int
add
cmp
cmp
jb
nop
and
out
push
xchg
enter
cld
sub
dec
adc
in
dec
sbb
xor
test
mov
call
call
sbb
add
(bad)
adc
mov
sbb
or
loop
js
cmps
dec
and
rcl
cmp
inc
sbb
int3
mov
fbstp
sbb
xor
ror
into
fst
fwait
test
and
fisttp
mov
adc
in
xor
neg
ror
les
dec
xor
push
pop
(bad)
es
ret
dec
add
push
ret
mov
lea
js
add
dec
push
mov
mov
sti
int
add
mov
int3
shr
cmp
xchg
xor
and
push
and
pop
cli
sar
add
rol
fisttp
gs
std
pop
jne
sbb
xchg
mov
imul
hlt
pusha
jnp
ret
push
cld
or
scas
dec
(bad)
fcmovb
or
enter
push
sub
mov
inc
or
push
pushf
lea
mov
adc
push
add
jmp
fst
adc
or
outs
or
enter
lods
leave
out
rcl
adc
cwde
push
fwait
mov
pop
xor
push
jg
hlt
dec
sar
dec
hlt
adc
sub
sti
dec
lock
(bad)
push
lock
pop
mov
sub
push
rol
std
sub
add
jne
mov
fisub
out
(bad)
aam
fdiv
icebp
in
cmp
adc
jl
push
in
neg
push
or
sbb
nop
js
stos
inc
enter
cmp
or
sub
inc
in
shl
cmp
mov
sbb
outs
push
or
fcom
mov
inc
push
sub
push
fldcw
xor
adc
in
retf
and
rol
sub
cmp
fiadd
mov
or
imul
dec
cmp
out
outs
sub
cmp
adc
mov
ss
dec
sbb
leave
mov
xor
add
pop
push
mov
push
nop
outs
xor
mov
cwde
call
cmp
xor
push
xchg
mov
mov
or
mov
or
clc
or
push
xchg
les
(bad)
in
adc
imul
push
(bad)
call
popf
jle
loop
pop
xor
push
push
fwait
jmp
adc
cmp
cmp
sub
dec
adc
cmp
mov
mov
push
cwde
(bad)
sbb
ror
push
mov
mov
scas
jo
ins
mov
pop
or
dec
popa
or
js
mov
or
adc
cmp
and
dec
pop
pop
mov
mov
sub
push
pop
sub
sub
test
cmp
dec
sbb
push
int3
inc
mov
repnz
or
mov
shl
inc
cmp
adc
jae
pop
adc
mov
out
xor
mov
inc
pop
inc
clc
dec
cmp
cwde
hlt
add
mov
jl
add
adc
and
gs
fwait
lods
push
pop
test
inc
out
sahf
dec
je
dec
mov
adc
push
adc
pusha
xchg
pop
nop
pop
add
inc
test
mov
or
sub
or
dec
imul
and
xchg
xor
and
xor
nop
xor
aam
xchg
cmps
xor
jge
inc
jns
xor
mov
jge
and
add
inc
rol
imul
jge
or
xchg
or
idiv
repz
jb
cmp
fisttp
jge
arpl
popf
and
sbb
rcl
inc
mov
or
ins
mov
add
dec
xchg
and
sub
shl
mov
rol
les
outs
aas
dec
(bad)
mov
cmp
out
aaa
out
inc
mov
imul
adc
cmp
enter
push
mov
repz
call
sub
out
cli
mov
loope
jl
inc
add
xor
idiv
and
jno
xchg
push
lahf
retf
or
add
inc
adc
push
movs
mov
shr
sbb
sbb
jbe
and
stc
imul
xchg
ror
xor
rol
push
(bad)
mov
pop
dec
or
je
mov
inc
or
add
lea
adc
ficom
cmp
data16
push
aam
add
jp
shl
xor
add
sub
(bad)
jmp
and
jmp
sub
movs
test
cmp
outs
fs
sub
adc
repz
icebp
inc
xor
jle
cwde
and
aas
mov
adc
push
cmp
or
int
and
push
lods
and
or
push
loope
push
mov
sbb
inc
or
push
out
jb
inc
pop
mov
xchg
fisttp
lock
pop
jle
pop
or
jg
or
adc
and
lods
xor
mov
outs
cmp
sar
shl
sbb
dec
and
lods
in
jle
inc
inc
jmp
and
dec
clc
add
sbb
adc
popa
pop
pusha
mov
push
inc
sti
or
pushaw
push
inc
fmul
add
inc
mov
and
(bad)
rcr
inc
add
sub
add
shl
sahf
push
mov
ds
xor
inc
jecxz
ins
or
pop
push
jecxz
xor
fs
hlt
add
pop
retf
add
or
jne
cmp
leave
inc
das
xchg
xchg
push
lock
nop
das
xchg
sahf
or
es
add
leave
push
and
push
repnz
lock
mov
int
or
add
leave
and
or
(bad)
dec
sub
(bad)
jno
cmps
or
clc
mov
push
and
xchg
popa
jge
scas
xchg
dec
(bad)
mov
enter
inc
pop
xor
xor
rol
sbb
stos
movs
dec
adc
mov
sub
jecxz
inc
int
jg
ss
shl
sbb
rcr
inc
pop
addr16
mov
jle
add
nop
sub
inc
mov
imul
pop
sbb
push
inc
xchg
mov
inc
adc
ret
and
in
sub
int
push
or
pushf
lea
stos
adc
stos
fcomp
jg
adc
rcl
(bad)
jmp
sbb
inc
cmp
push
lea
jl
rol
push
inc
jb
dec
inc
or
sub
sub
cld
jno
pop
mov
fild
inc
adc
or
xchg
push
push
sbb
shr
push
and
push
mov
shl
add
outs
adc
and
inc
hlt
mov
xchg
or
rcl
add
cmps
popa
and
and
mov
aaa
add
xchg
iret
aas
adc
ja
sub
xchg
xchg
sbb
push
adc
sar
adc
rcr
adc
lods
fwait
dec
sbb
js
es
push
call
call
xchg
(bad)
outs
push
cmc
and
jp
mov
lock
push
mov
sbb
popa
pusha
bound
cld
ins
sahf
jns
in
int
and
or
jb
ins
popf
inc
pop
cwde
add
inc
enter
push
cmp
add
cmp
sub
mov
test
adc
inc
push
scas
mov
inc
mov
push
std
pop
sub
test
push
sbb
retf
addr16
push
iret
add
sti
xor
mov
xchg
mov
sbb
inc
fwait
loopne
push
xor
pop
fsubr
fsub
mov
xchg
sub
adc
popf
cmps
clc
sbb
mov
add
xor
ins
imul
(bad)
mov
inc
mov
cmc
sbb
push
(bad)
call
xchg
cmp
jmp
hlt
test
movs
add
jb
pop
clc
jge
xchg
int3
scas
dec
aas
lods
rol
mov
xor
jae
shl
mov
lock
retf
push
dec
bound
or
scas
pop
mov
or
sar
dec
nop
add
or
dec
push
or
adc
test
iret
jnp
pop
ja
(bad)
hlt
cmp
push
and
test
jns
cmps
xor
sub
or
mov
jb
cdq
add
nop
cwde
aaa
add
inc
cmp
dec
or
dec
les
xor
ror
cdq
ins
pop
leave
sub
pop
cmp
or
add
and
adc
pop
and
add
das
sbb
and
rcl
mov
pcmpeqw
xor
push
push
jmp
mov
gs
jle
dec
pop
cld
jge
mov
mov
mov
inc
adc
iret
test
push
clc
inc
cmp
jl
int3
popa
pusha
aaa
sbb
xchg
xchg
ror
test
push
daa
jl
xor
mov
ins
pop
sbb
(bad)
rcr
in
stos
popa
int
adc
dec
ror
xchg
fmul
cld
es
idiv
(bad)
call
or
lods
jo
or
call
or
mov
mov
ror
jae
gs
push
adc
cvttps2pi
jle
mov
sbb
call
add
inc
sub
dec
aam
mov
xor
(bad)
sub
lea
push
and
add
mov
lock
jmp
inc
jmp
pop
inc
jnp
fdiv
fsubr
aam
push
imul
out
jge
sub
add
push
mov
pop
sub
push
jge
xor
into
pop
popa
mov
jl
inc
dec
jl
loopne
rcr
jge
mov
aam
fstp
sbb
aam
scas
and
jl
test
inc
or
lock
mov
xlat
or
nop
les
add
lods
cmp
xor
popa
cld
aas
xor
or
loopne
leave
or
cvtdq2ps
dec
gs
hlt
das
sbb
dec
ret
cs
add
cmp
xchg
test
call
xor
push
jg
xchg
dec
ret
mov
hlt
js
fild
and
(bad)
call
xor
lds
bound
jecxz
ret
clc
jg
fst
shl
daa
call
xor
call
test
inc
adc
sub
sbb
push
loope
mov
pop
nop
pusha
and
jae
inc
inc
sbb
fidiv
add
add
fiadd
inc
pop
out
popa
jb
inc
or
xor
enter
cmps
aam
icebp
cmp
cld
push
lock
push
loopne
adc
adc
into
jnp
clc
mov
mov
pop
adc
adc
test
(bad)
jb
cmp
xor
arpl
xor
jae
sahf
pushf
and
add
xor
nop
or
jne
out
pop
xor
push
xchg
or
or
push
mov
sbb
add
add
out
ror
push
hlt
jns
mov
out
ins
aaa
push
call
fadd
pop
loopne
and
in
cmp
mov
lods
jmp
ret
push
jmp
adc
js
push
jp
push
pop
push
add
dec
sub
dec
dec
xchg
dec
pop
jmp
inc
adc
fcomp
push
fmul
dec
inc
add
push
dec
pop
jnp
repnz
or
adc
push
xor
std
cmp
dec
xor
cmp
ret
inc
sub
push
aam
sub
dec
xchg
cmps
mov
shl
sbb
and
cmp
adc
fmul
ror
push
dec
repz
xor
jmp
cmp
mov
add
jbe
sbb
and
icebp
pop
mov
xor
xor
repz
or
cs
xlat
shl
ret
mov
dec
dec
xor
stc
clc
add
pop
or
push
pop
jmp
(bad)
jbe
enter
add
mov
xchg
out
push
hlt
mov
ja
cmps
sub
rcr
je
shr
ins
pop
add
data16
int
js
inc
adc
(bad)
jae
sbb
mov
mov
out
test
xchg
xor
xchg
mov
inc
xchg
pusha
and
ds
je
dec
mov
bound
xchg
fidiv
shufps
movs
lea
je
sub
popf
and
inc
mov
in
retf
outs
sub
inc
dec
adc
sbb
shr
push
jmp
dec
or
sti
or
add
shl
adc
fldenv
call
jo
in
cmp
inc
pop
sbb
call
lock
xchg
mov
xlat
loope
inc
or
ret
adc
arpl
xor
arpl
pop
jle
inc
inc
mov
popf
cmp
fwait
push
cmp
fld
sbb
sti
lds
cmp
cwde
inc
push
retf
call
xor
rcl
add
rcl
addr16
loope
ja
rcr
sbb
aad
add
jecxz
jne
call
pop
and
ficomp
inc
ins
out
add
dec
std
adc
and
cmp
jl
enter
ret
aam
and
xor
xor
inc
ins
and
jle
in
fldenv
mov
sbb
out
arpl
lea
cmp
ficomp
test
pop
push
sbb
push
mov
fmul
cmp
inc
sbb
and
ss
or
xor
cmp
les
and
inc
add
sbb
jl
cmps
jmp
or
add
pop
sti
inc
jecxz
(bad)
push
xlat
push
pop
bound
pop
lea
pop
sbb
ret
push
test
adc
or
add
leave
adc
mov
(bad)
mov
rol
test
mov
xor
mov
and
adc
fs
jo
xchg
push
jmp
js
jmp
lock
in
add
inc
adc
enter
and
aaa
ja
inc
xchg
jp
fidivr
jge
neg
xor
fdivr
sti
push
xor
mov
sub
xor
nop
es
adc
cmp
and
xchg
mov
push
xor
loopne
and
hlt
mov
cmps
sbb
mov
jmp
mov
mov
rcr
sub
loopne
xchg
fadd
fcom
fs
inc
aam
rcr
inc
xchg
int3
dec
das
xchg
bound
test
dec
enter
xchg
aam
das
jecxz
push
pop
jl
jb
lea
xchg
xor
rol
push
push
retf
xor
pop
or
loopne
push
add
add
int
mov
call
and
push
mov
pop
mov
nop
adc
stos
test
mov
jmp
jo
dec
xor
into
xchg
scas
add
push
push
dec
sbb
pop
sbb
push
or
pop
dec
mov
jo
jae
out
sbb
mov
sar
dec
daa
sbb
inc
xchg
mov
loope
in
sti
pop
js
ffreep
add
push
fidivr
adc
xor
push
and
or
push
add
bound
add
cmp
pop
or
push
pop
cmp
push
rcpps
sar
xor
cmps
add
cmp
mov
cwde
xor
xor
adc
push
push
fisttp
jle
xor
dec
cmps
leave
(bad)
xor
or
sub
add
xor
sub
inc
xor
mov
pop
fdivr
inc
and
push
mov
clc
mov
mov
pop
cwde
inc
rol
(bad)
fst
push
shl
pop
fnstsw
mov
cmp
inc
mov
or
and
test
je
adc
xchg
cmp
adc
push
inc
call
shr
(bad)
imul
sub
add
out
mov
int
out
mov
adc
sbb
jl
adc
push
push
enter
adc
rcr
(bad)
pop
dec
adc
inc
sbb
jmp
ss
adc
pusha
and
adc
nop
jge
ins
mov
dec
ins
imul
sbb
popf
jg
ds
nop
push
adc
test
mov
outs
or
rcr
lock
push
nop
stos
sbb
movsx
xchg
bound
push
mov
arpl
sub
not
push
adc
loope
inc
(bad)
ja
xchg
pusha
push
stos
and
push
adc
clc
jne
push
mov
aaa
test
rcr
mov
dec
pop
adc
push
test
or
push
sbb
inc
cld
mov
dec
aaa
sub
inc
pop
inc
xchg
inc
dec
clc
(bad)
sub
ret
adc
lea
call
pop
inc
and
je
arpl
xchg
jne
in
dec
sbb
test
movs
test
add
cmp
mov
xor
mov
sub
xor
add
mov
test
xchg
jae
ror
out
add
xchg
mov
adc
xchg
mov
or
cmp
ror
cs
xor
fld
sbb
jmp
xor
push
jmp
stc
cmp
jle
push
sbb
adc
icebp
xor
fcmovne
iret
lock
mov
push
and
inc
add
xor
pop
or
inc
dec
shr
dec
pop
dec
sub
inc
and
ror
xchg
retf
les
in
xchg
sbb
or
imul
cmp
jo
ja
mov
push
ret
cmp
rcr
cmp
sbb
pop
or
les
inc
fadd
(bad)
(bad)
jo
mov
cmp
js
mov
jp
inc
add
adc
neg
inc
push
pop
mov
shl
(bad)
not
jmp
dec
pop
or
ss
outs
mov
jb
fs
test
push
arpl
jg
inc
sub
jae
std
add
inc
sar
std
or
ja
xor
push
div
ret
add
sbb
int
sbb
sbb
sbb
mov
rcr
lock
or
jne
add
dec
and
mov
sub
dec
retf
jnp
dec
rcr
arpl
or
rcr
mov
or
imul
daa
jle
sahf
mov
xor
push
sub
cli
add
sar
scas
stc
or
mov
lahf
mov
push
dec
sub
sub
lods
adc
les
xor
out
daa
and
dec
add
xor
ret
arpl
sbb
push
mov
pop
lods
shl
ss
test
sbb
in
shl
movs
or
outs
push
ret
daa
jge
neg
sbb
mov
jne
mov
sub
jecxz
inc
push
xchg
and
add
xor
repz
sub
or
pop
test
pop
aam
sbb
mov
movs
repnz
inc
or
imul
pop
push
out
adc
aad
inc
mov
shr
shl
pop
sbb
xlat
jle
pop
jle
mov
aam
add
cmp
fxch
rcl
(bad)
cmp
lahf
mov
ud2
fld
adc
sub
ror
sub
hlt
mov
out
jae
in
je
pusha
push
rcr
test
push
inc
shl
sar
adc
sub
iret
sub
and
add
dec
mov
loope
adc
popa
inc
test
sbb
lea
inc
and
inc
fcom
sub
cs
sbb
(bad)
adc
aaa
stc
push
lea
jmp
or
xchg
xor
fiadd
outs
call
xor
clc
or
int3
icebp
pusha
loope
mov
xchg
or
sti
aaa
ins
add
loope
enter
sub
dec
inc
dec
xor
pop
aam
popf
inc
sbb
dec
cmps
inc
cmps
loope
sar
adc
and
out
xor
jp
repz
test
xlat
dec
add
add
mov
mov
add
mov
cmp
adc
mov
sub
sub
cmp
lea
mov
add
pop
mov
dec
pop
imul
add
or
cmp
dec
int3
jno
cli
movs
mov
ficomp
sti
add
(bad)
mov
into
push
jge
aad
dec
(bad)
mov
add
sar
jg
add
xchg
add
aam
nop
add
lea
push
fcomp
add
sar
ret
sar
fs
les
loope
loope
dec
cmp
popf
movs
push
add
xor
pop
and
cmp
imul
call
jp
sar
inc
dec
or
shl
cmp
inc
test
add
nop
or
push
push
nop
mov
scas
or
add
pusha
add
pop
or
push
pop
xor
mov
add
movs
jb
daa
xor
add
xor
enter
(bad)
js
jmp
sbb
jns
inc
retf
cmp
shr
xchg
out
adc
sbb
or
push
pop
adc
or
es
push
cwde
push
jns
or
push
cmp
lock
jns
clc
adc
fs
pop
cs
mov
and
sub
out
out
and
sbb
fs
adc
sub
jnp
jg
fmul
xor
sub
dec
in
push
pop
or
adc
ja
outs
push
rcr
push
sbb
out
sti
dec
jmp
sub
les
fmul
xor
mov
sub
in
iret
mov
sti
cmp
push
inc
mov
dec
cs
jle
adc
fs
sub
add
xor
lds
or
nop
in
or
aaa
xor
adc
dec
cmp
sbb
inc
mov
sbb
mov
dec
sub
sbb
call
push
call
call
and
mov
sahf
dec
adc
mov
cmps
aas
cdq
mov
push
inc
mov
pop
mov
pushf
mov
push
pop
arpl
sub
push
adc
or
and
xchg
cmps
or
or
aam
js
or
or
xor
mov
das
ss
mov
pop
nop
dec
jnp
xchg
pop
sbb
in
imul
pop
mov
outs
push
es
push
sub
fcom
sub
into
mov
mov
mov
mov
mov
add
lds
push
in
jne
hlt
movs
loope
xchg
add
and
push
mov
sub
add
add
repz
(bad)
or
mov
add
mov
xor
add
xor
jmp
or
cli
push
or
add
sbb
lea
or
xlat
inc
cmps
stos
inc
dec
pushf
pop
(bad)
xor
sub
icebp
inc
enter
ins
sbb
inc
xchg
call
fsubr
or
pushf
xchg
popf
repz
ror
inc
add
and
dec
call
inc
loopne
push
xor
(bad)
into
push
jmp
test
mov
loop
push
test
lods
lods
ret
sub
int3
mov
sahf
(bad)
ud0
xor
adc
shl
add
sub
adc
xchg
test
adc
jne
jg
imul
imul
mov
ret
std
rcr
fmul
arpl
fadd
adc
mov
cmp
inc
enter
jp
ss
mov
dec
xor
add
dec
(bad)
retf
push
push
sbb
out
sbb
ret
icebp
cmp
enter
add
in
add
cmp
push
js
loope
adc
gs
xchg
and
xchg
inc
mov
sahf
fisubr
xchg
dec
fstp
les
xchg
sbb
(bad)
fs
pusha
mov
imul
sbb
cmp
pop
inc
push
or
sub
fcomp
inc
adc
xchg
fisubr
mov
in
fs
jnp
js
adc
push
loop
inc
dec
or
nop
jle
dec
pop
(bad)
inc
mov
cli
mov
sub
pop
jg
jp
add
jmp
inc
mov
test
and
and
mov
fadd
ret
adc
add
and
adc
call
and
push
lds
cs
mov
jb
adc
rol
sub
pop
push
and
and
dec
adc
or
int3
mov
stos
adc
inc
das
cmp
call
sahf
scas
mov
or
lea
jne
sbb
cmps
cmp
mov
sub
popa
sbb
sub
and
jmp
or
and
cmc
lods
add
retf
ins
mov
repz
xor
sbb
fadd
imul
add
popa
sbb
test
rsm
rol
xchg
xor
jge
jae
jge
or
leave
or
jo
je
inc
xchg
arpl
sbb
sub
inc
and
xchg
pop
ss
rol
cs
gs
sub
push
sbb
mov
add
and
push
xchg
(bad)
enter
and
pop
int
ss
loopne
jb
sub
xor
pop
loop
sub
sbb
dec
leave
or
jbe
xor
inc
sbb
test
adc
mov
stos
inc
or
cmps
add
jp
pushf
out
push
xchg
push
inc
push
mov
int
sub
or
mov
add
into
mov
jl
loop
dec
inc
inc
dec
pop
lahf
(bad)
hlt
xor
call
(bad)
adc
and
retf
add
adc
push
ror
add
test
inc
mov
mov
xchg
dec
sbb
and
mov
push
mov
out
inc
dec
push
ins
sahf
push
fwait
or
pusha
inc
pop
lea
(bad)
jg
add
dec
mov
or
sub
sbb
push
sti
cwde
adc
inc
adc
mov
lods
daa
clc
adc
xor
leave
sbb
sar
cmp
mov
mov
sbb
or
sbb
stc
jl
dec
ret
(bad)
sahf
dec
sar
out
retf
and
inc
xor
push
ret
je
dec
push
dec
or
dec
addr16
pushf
js
dec
imul
xchg
in
test
cmp
jnp
jnp
inc
loop
out
mov
gs
cmp
test
push
pop
sub
div
test
arpl
and
adc
daa
dec
ror
push
inc
adc
jle
mov
shl
sub
into
aaa
jl
adc
dec
or
call
dec
scas
stc
add
inc
add
(bad)
test
cmp
ja
dec
dec
jbe
rol
in
cld
xor
dec
cmp
sbb
adc
add
xchg
inc
or
pop
ja
sub
cmp
dec
mov
dec
call
push
lods
ins
or
in
inc
movs
pop
aad
xor
add
adc
cmp
pop
aam
push
dec
or
pushf
sbb
adc
and
in
sbb
test
imul
and
loop
sub
mov
jb
(bad)
mov
in
mov
push
bound
popa
jne
(bad)
pop
add
xchg
mov
ja
adc
outs
dec
push
int3
fisub
pop
or
adc
inc
popa
mov
inc
pusha
push
mov
aam
call
cwde
dec
daa
mov
repnz
aaa
stos
imul
cmp
aam
dec
add
lods
nop
cmps
mov
enter
mov
dec
push
xchg
dec
xchg
pop
or
cmps
dec
add
dec
js
outs
push
xchg
dec
and
inc
cvtps2pd
(bad)
mov
(bad)
mov
(bad)
in
mov
add
(bad)
movs
(bad)
ins
inc
push
nop
xchg
les
fldcw
rcr
pushf
data16
and
lods
sbb
pop
popa
xadd
ds
cmps
pop
pop
sub
and
add
sub
add
push
test
xchg
adc
leave
add
push
adc
int
sbb
add
add
loopne
add
push
add
mov
sbb
xlat
push
adc
add
sbb
add
inc
sub
sbb
(bad)
jmp
add
add
mov
add
sbb
or
rcr
mov
pushf
xchg
cmp
sbb
push
sbb
jo
iret
fs
lods
enter
xchg
sub
outs
mov
push
enter
xor
ror
dec
mov
add
add
push
test
dec
imul
sub
mov
xchg
push
cmp
sti
or
or
inc
ds
outs
out
repz
and
mov
fcompp
mov
mov
(bad)
push
inc
or
fdivp
push
cld
cwde
out
adc
out
rcr
int
nop
ja
out
xor
xchg
loopne
int
xor
and
dec
push
push
dec
pusha
cmps
dec
loope
stc
inc
ret
add
int
or
je
sbb
ins
rcl
inc
sahf
ret
ret
rcr
in
inc
std
outs
and
movzx
mov
punpcklwd
mov
sub
bound
xor
nop
cmp
and
jg
cmp
mov
mov
out
sbb
pop
adc
inc
sbb
hlt
fs
cmps
in
add
and
cmc
sbb
jo
btc
clc
or
mov
(bad)
hlt
add
push
jno
jb
popa
leave
jo
dec
outs
or
fcomp
or
imul
rcl
sub
inc
or
mov
pop
fsub
in
push
adc
loopne
mov
in
or
popf
and
push
in
push
call
loopne
and
pusha
jp
fadd
out
fcomp
inc
lahf
and
and
loopne
sbb
in
dec
bound
leave
loopne
jmp
jecxz
adc
fmul
mov
call
xchg
and
daa
pop
xchg
bound
(bad)
retf
into
aad
fcom
and
add
popf
les
hlt
(bad)
jg
add
jae
adc
pushf
push
add
fistp
(bad)
or
popf
imul
int
add
adc
adc
arpl
cmp
mov
sub
push
gs
inc
test
mov
iret
push
jmp
or
in
shl
dec
nop
add
nop
gs
mov
push
pop
and
xchg
push
dec
sbb
xchg
mov
ins
inc
xor
or
scas
sti
push
movs
leave
xor
(bad)
inc
movs
fnsave
arpl
push
cmp
outs
or
data16
jp
test
adc
rol
push
ins
pusha
pop
in
inc
push
sbb
xor
fs
push
jns
fs
and
and
adc
nop
xor
stc
xchg
mov
(bad)
(bad)
movzx
rcr
pop
mov
jmp
mov
out
fild
jb
imul
push
sbb
mov
gs
dec
adc
cdq
(bad)
mov
inc
xchg
cmp
mov
test
xchg
cmp
mov
sub
dec
jecxz
in
cmp
adc
mov
jbe
fsubr
imul
jg
sbb
cmp
inc
push
outs
bound
mov
push
fcmovnb
sahf
jecxz
pusha
sub
repz
sbb
ja
dec
adc
dec
jl
test
ja
xor
and
in
sub
cmpxchg
sub
sbb
xchg
popa
cmp
addr16
xor
sub
fmul
sbb
or
add
in
ja
dec
(bad)
cmps
or
adc
inc
mov
cmps
dec
cld
add
xchg
lods
leave
adc
clc
iret
jmp
mov
jecxz
mov
fldenv
js
outs
nop
call
dec
fadd
jnp
mov
and
adc
xchg
jns
xchg
loopne
dec
leave
lahf
clc
mov
sbb
test
push
fcom
jmp
out
jnp
js
adc
push
(bad)
xchg
imul
fist
popf
pop
iret
push
adc
test
sbb
cmp
lock
imul
push
lock
jns
pop
xor
dec
push
inc
clc
xor
sub
ins
or
fnsave
cmp
iret
xchg
adc
jbe
xchg
mov
inc
cmp
imul
inc
fmul
arpl
dec
pop
cmps
or
fiadd
dec
mov
in
retf
pushf
adc
ins
lods
mov
sbb
rol
adc
cmp
dec
imul
daa
push
push
enter
jmp
sub
jmp
jnp
push
hlt
ja
(bad)
inc
pop
or
lods
sbb
movs
imul
sub
pop
cmps
stos
jb
or
clc
and
mov
stos
jnp
call
add
sub
jle
add
rol
mov
add
add
cdq
jmp
push
stc
jl
pusha
jno
ret
push
movs
and
inc
inc
sbb
dec
xor
mov
es
dec
(bad)
pop
sub
sub
ja
or
fwait
je
and
xor
scas
add
xor
mov
mov
nop
mov
add
inc
xor
movs
jo
ins
dec
pop
mov
adc
fs
mov
jne
pop
cmps
adc
sar
dec
add
lahf
inc
mov
mov
in
cmp
or
fs
arpl
dec
inc
ret
call
jmp
jne
fs
push
fwait
dec
xor
sbb
xchg
inc
xor
es
and
mov
xchg
dec
cmp
adc
lds
add
push
call
dec
add
icebp
cwde
xor
fild
dec
pop
iret
sbb
inc
sub
jb
xchg
push
inc
aam
pop
fstp
mov
mov
iret
mov
out
dec
push
dec
push
or
or
imul
dec
les
cld
int3
sub
xchg
imul
cmp
inc
pop
dec
cmp
cmp
inc
pop
jecxz
mov
xor
cmp
int
cmp
push
retf
xchg
(bad)
sbb
jg
xor
mov
and
mov
test
push
add
ss
push
add
or
pop
ds
cmp
pop
rol
mov
inc
test
adc
call
add
outs
add
das
add
jbe
xchg
(bad)
sub
push
adc
aaa
add
call
add
push
add
ins
jmp
fdivr
or
sbb
sahf
fimul
sbb
or
ficom
add
ror
out
sbb
xchg
pop
jns
jno
loope
fdiv
stos
mov
xlat
mov
sbb
aas
es
adc
jnp
push
test
lock
js
push
ds
lock
mov
into
gs
and
xor
sbb
fstp
(bad)
or
and
cwde
ins
adc
jl
or
cmp
call
mov
imul
sbb
leave
fdiv
mov
dec
adc
cld
cmps
lea
inc
xor
sub
mov
iret
xchg
or
dec
lea
stos
cmps
enter
sub
dec
scas
or
mov
push
adc
dec
retf
xchg
sbb
dec
pop
jbe
pop
sbb
cmps
pusha
mov
test
sub
mov
and
clc
add
stc
int
not
dec
xchg
xchg
or
mov
ror
ins
xchg
or
inc
xchg
pop
les
xor
add
mov
mov
loopne
jle
js
call
cmps
add
xor
jne
nop
retf
mov
das
pusha
jmp
inc
cmp
call
adc
or
jns
addr16
pop
mov
xchg
ja
xor
inc
movs
shl
int3
or
or
or
inc
jmp
sbb
add
nop
lds
sbb
sbb
cld
lock
pop
loop
aam
or
addr16
add
js
add
mov
cld
inc
aaa
cmp
xchg
lock
or
dec
shr
das
add
add
mov
jl
call
lods
aam
adc
sub
mov
je
mov
xor
push
mov
sub
sbb
and
lock
(bad)
add
test
mov
rcr
push
in
sub
inc
xor
mov
sbb
adc
sub
lods
mov
add
xchg
sub
loopne
pop
xor
lods
jmp
fstp
int
je
mov
xchg
jmp
gs
pop
push
or
mov
(bad)
dec
cmp
push
cld
push
jle
daa
leave
inc
dec
mov
movs
push
xchg
and
test
add
sbb
fisubr
sbb
cmp
(bad)
mov
fdivrp
sub
frstor
stc
int3
pop
and
(bad)
pop
push
jl
adc
out
je
xchg
ins
mov
jl
mov
mov
dec
data16
jle
xchg
out
jo
jnp
mov
add
sub
fcomp
mov
ja
push
add
xor
lock
jne
add
test
sub
retf
sub
out
lock
add
call
pop
push
push
xchg
inc
ret
add
fwait
aas
mov
aas
cmp
or
mov
cmp
movs
fs
adc
and
je
pop
pop
mov
push
jne
jle
nop
in
inc
mov
popf
sahf
mov
add
(bad)
mov
adc
loopne
test
adc
leave
in
stos
dec
loop
push
nop
jne
sbb
aad
scas
pop
not
add
fcomp
jg
inc
or
mov
cmps
or
adc
adc
sbb
call
or
mov
jle
out
loopne
mov
xor
inc
or
push
sub
fist
xchg
sbb
pusha
pop
lods
mov
retf
mov
leave
call
rcr
loope
push
adc
dec
loop
inc
call
clc
jl
cwde
test
adc
add
repz
mov
and
ja
sar
mov
pop
jge
pop
ins
mov
xchg
mov
out
push
imul
(bad)
out
xchg
stc
push
sub
cmp
sub
jle
push
mov
jns
sub
jns
sbb
pop
pop
mov
dec
mov
xlat
and
rcr
and
sub
sbb
and
mov
jo
sub
test
femms
idiv
nop
movs
jge
add
cmps
loop
cwde
adc
cdq
repz
movs
mov
pop
mov
(bad)
mov
sub
adc
cwde
pop
out
add
sub
inc
mov
mov
iret
push
inc
jae
pushf
jmp
and
fsub
jecxz
fist
fist
inc
sub
addr16
es
mov
xchg
daa
or
pop
lahf
daa
push
ja
adc
push
sub
add
mov
xor
das
mov
mov
(bad)
dec
xchg
clc
mov
adc
cmps
xor
xchg
xor
in
push
sbb
sub
pushf
xor
dec
test
mov
sbb
mov
cli
push
xlat
lods
aam
jne
xchg
and
aam
sti
test
dec
loop
xchg
int
out
mov
aam
or
bound
stos
idiv
cmps
mov
xchg
fsubr
add
mov
push
sbb
adc
sbb
cmp
xor
mov
test
add
test
sub
add
inc
jl
or
inc
pushf
pop
mov
in
xchg
pusha
cmp
and
xchg
cld
push
inc
add
mov
daa
inc
inc
pop
daa
in
fsub
lods
adc
adc
adc
push
addr16
aas
stos
dec
mov
dec
mov
dec
ret
mov
inc
cmp
hlt
cmp
test
jne
adc
adc
inc
aam
add
ficom
add
pop
and
movs
rcr
imul
es
add
sahf
sar
xor
mov
sar
push
inc
jp
ret
je
dec
and
ds
sbb
adc
xor
retf
in
push
inc
ficom
mov
xchg
push
imul
rcl
sbb
or
ja
push
sub
inc
inc
dec
cmps
mov
rcl
icebp
jmp
sub
jge
sub
int3
mov
pusha
adc
or
or
loopne
push
xchg
inc
out
neg
adc
or
mov
mov
sbb
xchg
jbe
mov
pop
jmp
or
pop
hlt
mov
xor
push
adc
xlat
(bad)
lea
xchg
adc
ds
jg
test
in
sub
jl
fiadd
jb
ret
mov
aaa
mov
push
lock
movs
movs
ins
call
xor
xchg
lock
cmp
add
dec
add
mov
(bad)
xchg
xchg
mov
loope
pop
pop
ss
cld
in
pusha
gs
fcomi
inc
adc
fdiv
and
jmp
mov
mov
ret
add
(bad)
push
rcl
xor
sbb
cld
fsubr
push
push
fist
idiv
and
sub
inc
cdq
pop
pop
aas
rcr
add
cmp
sub
push
lods
and
mov
cwde
or
xor
das
retf
rol
mov
sbb
test
repnz
inc
xchg
pop
call
and
shr
xchg
in
(bad)
je
or
cli
push
xchg
mov
mov
sbb
sbb
cmps
push
inc
cmovnp
mov
pop
fs
iret
retf
xchg
dec
xchg
add
adc
(bad)
cmps
popa
sub
lahf
pop
push
mov
cli
add
xchg
mov
cmp
cmp
ja
xchg
pop
jl
sub
adc
fnstcw
cmp
dec
sbb
(bad)
enter
or
and
jmp
in
add
push
ja
xchg
dec
add
and
pop
adc
sbb
and
mov
cmp
xor
ins
bound
cmp
lods
xchg
psrad
cmp
xor
lods
sub
cmp
xchg
sub
int3
and
jae
mov
mov
pusha
push
js
adc
sar
movs
cwde
add
leave
sub
xchg
cmp
js
inc
jle
fdiv
mov
inc
adc
(bad)
jb
sbb
xor
(bad)
sub
inc
or
push
add
ja
repz
sbb
sbb
jge
jae
and
mov
sbb
rcl
mov
sbb
push
mov
lock
inc
jle
sbb
or
ret
popf
dec
fidiv
jge
pop
push
(bad)
jle
pop
ret
imul
mov
dec
ins
inc
out
ds
aam
aaa
test
fcomp
push
arpl
pop
int3
and
and
mov
pop
dec
shr
push
xor
mov
push
mov
test
outs
and
push
push
xlat
inc
adc
lods
arpl
and
sbb
jmp
lds
call
xchg
out
jo
pop
dec
iret
sti
mov
mov
shl
push
cmp
sbb
in
(bad)
push
or
jge
xchg
es
jl
add
or
inc
inc
jecxz
jp
out
cwde
mov
xlat
mov
and
xchg
xabort
fisub
(bad)
mov
popf
icebp
scas
pop
clc
jl
(bad)
lea
cdq
sub
jo
adc
or
mov
mov
sub
daa
or
or
jge
lahf
add
push
and
mov
adc
test
fisttp
mov
fmul
dec
or
cmp
xchg
xor
sub
or
adc
cmp
pop
dec
popf
mov
pop
cmp
push
(bad)
add
xchg
jecxz
add
dec
in
push
mov
dec
out
adc
or
daa
lds
add
shr
jo
and
mov
dec
dec
xchg
inc
lods
pop
xchg
xor
jne
mov
sub
adc
mov
xchg
mov
in
lock
push
pop
retf
stos
sbb
je
ret
sub
or
xchg
sub
push
arpl
ds
(bad)
mov
rcr
add
mov
fld
add
push
inc
getsec
mov
aam
sbb
mov
mov
xor
mov
test
ja
loopne
cmp
je
mov
and
push
das
mov
movs
mov
mov
mov
mov
aam
sbb
sub
fs
aas
loop
or
hlt
mov
pop
test
sub
int3
cmp
out
popa
xor
and
xchg
add
jbe
jmp
xchg
xor
mov
ret
adc
sbb
push
or
fmul
cdq
push
mov
lods
pop
ret
test
xor
dec
cld
aam
jae
loop
sub
or
cwde
adc
xor
push
add
sub
mov
xor
sbb
nop
inc
addr16
ins
imul
push
int
mov
mov
dec
mov
xchg
stos
ds
mov
outs
push
jne
enter
cmp
test
fadd
loope
and
dec
jmp
or
push
lods
loopne
add
xor
push
repnz
jle
pop
inc
xor
push
das
and
mov
loope
push
das
pop
jge
pop
xchg
push
sub
sub
fcmovbe
push
push
outs
(bad)
pop
adc
or
push
dec
(bad)
dec
xchg
fsubr
pop
mov
mov
sti
add
mov
sahf
out
sahf
xor
mov
mov
jbe
push
xor
pop
lea
sbb
clc
dec
push
pusha
mov
dec
retf
shl
nop
dec
stos
ja
xchg
sub
outs
imul
adc
add
or
hlt
icebp
inc
dec
push
sbb
dec
xchg
lock
in
pusha
pusha
lahf
or
pop
mov
stc
xchg
mov
add
add
fdivr
movs
and
inc
out
test
(bad)
mov
inc
add
cmp
cmps
inc
and
jp
lods
adc
(bad)
stc
arpl
or
adc
adc
or
nop
add
imul
scas
ret
lods
inc
or
add
sti
xor
add
pop
sub
push
xchg
push
mov
cmp
inc
jle
jb
movs
sub
loop
mov
cld
push
scas
ret
popa
dec
cmp
ret
jmp
push
arpl
clc
mov
clc
jge
pop
inc
shl
mov
push
shl
push
int3
cmps
or
or
add
aad
ret
cmp
mov
(bad)
sbb
mov
pusha
jecxz
sub
xor
pop
pusha
test
movs
(bad)
sbb
mov
(bad)
pop
xor
xchg
mov
retf
test
sar
mov
and
xor
pop
push
add
(bad)
jnp
sar
clc
pop
arpl
retf
ss
lods
jo
pop
or
test
push
bound
mov
mov
jecxz
loope
(bad)
adc
fs
jmp
dec
and
xchg
clc
dec
int3
les
ss
add
dec
clc
sar
(bad)
jo
fdivr
and
or
jecxz
test
lock
fild
ret
xchg
jl
inc
add
call
add
fsubr
ret
and
adc
push
or
adc
inc
cmp
lahf
dec
sub
inc
nop
adc
cmp
mov
jmp
xor
test
pop
ret
xchg
and
push
cmp
or
sub
xor
adc
add
(bad)
aaa
push
rol
add
and
mov
pop
add
(bad)
in
jge
and
mov
or
jge
lods
jne
mov
ror
fadd
sub
(bad)
mov
jle
or
mov
cmp
xchg
shr
add
ins
adc
mov
xlat
add
jne
ret
fs
(bad)
xor
aam
push
add
call
loopne
add
or
pop
ins
dec
mov
and
aad
in
not
imul
sti
lods
(bad)
jno
(bad)
xchg
mov
lock
cmps
jmp
cmp
mov
add
xchg
mov
add
xchg
ins
push
adc
add
cmp
mov
arpl
pop
mov
rol
gs
sub
shl
fisub
je
push
jmp
and
movs
pop
sbb
pop
xlat
rol
test
xor
and
pop
pop
add
pop
fisttp
repnz
fsub
mov
cmp
retf
js
add
push
dec
aas
cld
xchg
sar
shl
dec
xlat
and
and
mov
inc
jmp
add
ret
in
or
cwde
les
dec
sbb
or
call
inc
pop
sub
xchg
cmps
sti
mov
jae
xchg
mov
jg
ins
in
popf
push
sub
mov
sbb
or
cmp
dec
fld
xchg
mov
inc
push
sti
mov
and
je
scas
(bad)
nop
or
pop
nop
sub
(bad)
sbb
sbb
and
jl
mov
push
adc
fiadd
sub
test
retf
sub
in
loope
arpl
adc
xchg
or
inc
adc
cdq
lock
inc
push
push
push
popa
sbb
scas
(bad)
clc
dec
mov
(bad)
sbb
test
(bad)
(bad)
std
and
sbb
jmp
adc
and
adc
scas
pop
push
(bad)
add
movs
adc
pop
mov
mov
jl
mov
in
or
fcmovbe
movs
pop
push
pop
and
rcl
int
xor
mov
lods
jl
mov
mov
sub
lods
lea
push
sbb
ret
mov
fisttp
and
sbb
add
or
dec
das
xchg
mov
cmp
inc
add
xlat
pusha
or
and
push
js
sub
mov
inc
adc
and
sbb
sbb
sub
xchg
mov
mov
adc
test
mov
cmps
sbb
jge
cmps
imul
xor
dec
jo
shl
push
dec
push
push
sbb
outs
lds
(bad)
sti
adc
fs
mov
dec
cmovno
shr
mov
lods
mov
dec
pop
iret
jge
jb
adc
jle
mov
dec
sub
and
jo
xor
push
movs
retf
movs
std
xchg
es
ret
data16
push
pop
loop
jge
loope
(bad)
mul
mov
mov
repz
jge
aad
inc
mov
jl
nop
jmp
push
push
mov
lods
daa
or
dec
cs
and
fwait
mov
jmp
test
rcr
xor
push
dec
(bad)
fdiv
dec
fsubr
(bad)
mov
and
and
push
jae
sbb
xor
rol
xchg
in
retf
or
ret
and
dec
dec
xchg
or
jp
adc
(bad)
adc
hlt
jecxz
xchg
mov
adc
mov
mov
adc
call
xor
xchg
sbb
jae
mov
cmp
pop
fidiv
(bad)
ins
ins
in
dec
mov
or
mov
movs
(bad)
jns
inc
sub
jo
cmp
fcom
jg
dec
adc
ja
and
pop
rcr
ss
jne
push
stos
loope
pop
je
push
sub
cmp
adc
jle
xor
loopne
dec
inc
dec
xchg
loopne
adc
mov
or
or
ret
jo
sub
sub
fmul
(bad)
pop
aaa
or
push
dec
inc
sbb
or
pop
push
rol
sub
ins
mov
or
int
adc
mov
and
popf
mov
mov
shl
cwde
imul
dec
popa
and
xchg
clc
and
jne
cmp
pop
mov
inc
dec
pop
ror
(bad)
cmp
mov
pop
stos
ins
call
aaa
dec
jb
mov
jmp
and
xchg
sbb
(bad)
sbb
idiv
sub
cdq
and
xlat
jg
sub
or
loopne
mov
(bad)
gs
adc
add
scas
adc
add
jge
dec
sub
lock
shl
xor
in
adc
jbe
(bad)
mov
adc
(bad)
adc
gs
sbb
cmp
lock
pop
lock
lock
pop
add
sbb
test
shr
add
out
inc
pop
adc
out
mov
push
mov
add
mov
in
xchg
sub
scas
nop
mov
je
add
lods
sub
rcl
push
(bad)
hlt
scas
jne
(bad)
lods
xchg
and
pusha
jl
ret
fcmovnu
xchg
enter
mov
push
(bad)
mov
daa
mov
mov
pop
fcom
mov
fidiv
jnp
out
movs
adc
adc
or
in
cmp
or
add
shl
ins
and
and
add
pop
inc
xchg
scas
(bad)
daa
jecxz
dec
loop
popa
lds
or
sub
inc
js
rol
inc
in
in
mov
in
cmp
jmp
call
mov
popa
ret
and
ret
sbb
or
loope
(bad)
sub
call
add
in
or
arpl
add
mov
push
sub
and
add
jl
(bad)
xor
and
rcr
out
xchg
sub
sub
pop
or
dec
mov
cld
repnz
mov
pop
mov
push
mov
sbb
push
cmps
mov
ror
es
push
xor
xor
cs
add
dec
(bad)
data16
jne
mov
ror
pop
or
(bad)
fidiv
shl
push
or
and
pop
add
inc
jmp
adc
dec
and
inc
mov
xchg
dec
ret
jb
mov
inc
aaa
nop
mov
sub
pop
adc
hlt
and
add
(bad)
mov
sub
dec
leave
or
sub
shr
add
dec
push
enter
clc
mov
arpl
lahf
xor
(bad)
mov
mov
cmc
and
pop
mov
sahf
popa
dec
std
or
adc
cs
push
mov
hlt
sbb
cdq
inc
jmp
and
mov
or
movs
pusha
sub
pop
mov
cmp
xchg
fcom
(bad)
mov
or
inc
dec
adc
inc
fisttp
mov
push
jmp
arpl
sbb
out
fwait
push
inc
ins
xor
cmp
loop
jb
in
pop
mov
lock
mov
inc
fild
jns
mov
or
mov
xchg
movs
inc
add
inc
dec
mov
mov
aaa
je
ror
mov
lea
retf
in
pmuludq
fcomp
adc
inc
mov
sub
sub
mov
iret
rol
dec
addr16
das
nop
mov
dec
or
fs
jmp
in
or
popa
xor
mov
call
mov
mov
lahf
call
fdivr
clc
jbe
enter
mov
xchg
cmp
mov
jb
mov
xchg
clc
adc
int3
mov
cmp
dec
dec
or
add
dec
sbb
sub
out
dec
pop
and
pop
push
movzx
je
cld
mov
jae
sub
inc
dec
fisubr
sub
movs
adc
push
ret
jp
and
cdq
ficomp
push
adc
ret
mov
sub
addr16
retf
je
push
and
sub
cmps
mov
xor
add
jl
stos
pushf
daa
test
mov
fwait
mov
xchg
dec
adc
mov
and
sbb
jns
cwde
and
push
push
mov
or
add
ins
xor
cmp
jmp
sbb
xor
movs
xor
(bad)
xor
adc
loop
ss
jmp
sub
call
sbb
in
add
adc
fwait
inc
movs
add
pop
mov
dec
fistp
test
shl
popf
mov
cmp
(bad)
pop
cmp
ins
sub
xor
push
and
and
hlt
adc
inc
clc
dec
jne
ins
mov
hlt
or
bound
ins
mov
pushf
movs
mov
dec
and
add
das
xchg
adc
mov
shl
sar
dec
sbb
pop
aaa
(bad)
pop
jl
out
mov
or
push
and
jo
repnz
inc
add
rol
mov
ds
cmp
xchg
sbb
addr16
ins
pop
imul
xor
dec
lahf
ret
push
pop
rcr
movs
dec
sbb
ret
and
dec
(bad)
adc
xchg
sbb
out
pop
cli
ret
ret
js
sub
fld
sbb
(bad)
imul
ins
push
pop
add
dec
adc
xchg
inc
fwait
xchg
cwde
aad
stos
or
ins
jbe
mov
mov
rol
or
nop
cmp
sbb
and
dec
add
dec
inc
aaa
rcr
or
js
sub
das
(bad)
push
stc
cmp
nop
or
in
stc
scas
cmp
(bad)
lods
frstor
cmp
idiv
sub
shr
inc
cs
imul
inc
call
sub
adc
call
inc
in
mov
fisub
cmovo
imul
pop
cmp
fsubr
mov
add
xor
shl
fmul
push
(bad)
xlat
shl
call
xor
dec
(bad)
shl
nop
add
xor
push
addr16
stos
push
(bad)
in
frstor
fidiv
dec
ret
sub
add
jns
and
xchg
dec
and
in
xchg
adc
mov
and
add
cld
inc
sbb
sbb
hlt
cmp
fiadd
inc
ret
mov
ins
call
test
mov
jmp
stos
rol
stos
dec
mov
adc
dec
push
(bad)
dec
cmps
xchg
add
mov
mov
or
xchg
push
or
push
int3
(bad)
mov
sahf
movs
add
mov
push
aad
rol
outs
inc
push
mov
enter
adc
and
cli
add
push
jmp
pop
rol
mov
xor
in
jmp
mov
add
and
mov
sar
push
sub
stc
lock
js
jg
add
jmp
sub
pushf
and
and
push
or
ins
fs
push
das
mov
aam
or
int
xchg
leave
stos
dec
and
mov
adc
lods
mov
sbb
aaa
push
sbb
and
mov
pop
pusha
jmp
cld
std
add
jmp
addr16
dec
outs
xchg
pusha
sbb
rol
inc
pop
cmp
(bad)
mov
lods
push
pop
ds
adc
ret
cs
mov
stc
sub
or
nop
rcl
push
sbb
adc
xchg
loope
inc
or
out
mov
sub
daa
ja
xchg
fs
inc
inc
arpl
cmp
fwait
fs
retf
cmps
hlt
cmp
mov
add
mov
push
adc
movs
icebp
cmps
shl
repz
clc
mov
(bad)
jbe
mov
jle
adc
add
(bad)
sbb
pop
retf
repnz
pop
ror
(bad)
or
outs
int3
mov
jno
movs
std
cmp
mov
sub
aas
pop
and
jmp
sar
xchg
mov
iret
out
shl
into
adc
scas
add
push
rol
sub
adc
(bad)
leave
clc
fnstsw
movs
adc
xchg
icebp
in
out
js
fcom
out
(bad)
call
sub
cmp
outs
cmp
push
and
xchg
jns
mov
outs
popf
jo
mov
add
mov
inc
mov
or
inc
rcr
push
movs
inc
sbb
xchg
fadd
and
or
loopne
fmul
rcl
or
sub
cmp
repz
push
or
jnp
add
stos
loope
int
add
mov
mov
push
into
push
enter
push
pop
xchg
icebp
sub
aam
adc
lods
and
and
mov
mov
into
push
mov
mov
mov
dec
add
sbb
sahf
push
cld
dec
add
push
enter
xchg
dec
mov
ja
cmc
push
inc
or
push
in
add
dec
repz
adc
pusha
nop
iret
jle
push
enter
iret
fs
dec
fmul
mov
dec
jnp
add
adc
sbb
clc
imul
push
aam
(bad)
dec
adc
pop
or
fmul
(bad)
imul
adc
xor
and
gs
arpl
pop
fnstcw
or
xchg
push
jb
sar
rcr
out
enter
in
in
in
loop
push
fcomp
jecxz
outs
fmul
dec
sbb
dec
mov
cmps
sbb
push
sar
pop
clc
push
push
and
pop
dec
dec
pop
int3
sar
adc
shl
fs
or
pop
pop
out
add
or
fdiv
loopne
add
inc
jmp
mov
(bad)
inc
ud1
daa
mov
or
je
dec
mov
add
xor
in
lock
and
shl
add
iret
out
cmp
pop
mov
je
adc
adc
pop
pop
xchg
and
inc
sub
dec
and
inc
loop
dec
out
dec
and
inc
repnz
ror
stc
and
int3
pop
push
inc
or
int3
and
(bad)
adc
int
mov
shl
into
push
inc
or
push
aaa
not
mov
mov
iret
cwde
xlat
(bad)
js
fiadd
mov
pop
hlt
gs
fcomp
xor
xchg
inc
sbb
push
and
ins
push
fcomp
cmp
push
adc
movs
add
lods
in
jmp
retf
jmp
xor
dec
cmc
fdivr
inc
push
enter
mov
inc
sbb
(bad)
lahf
xchg
(bad)
sub
sbb
dec
mov
mov
jno
int3
and
add
jne
dec
imul
mov
or
mov
add
aad
(bad)
ret
inc
inc
sbb
lock
cwde
bound
push
and
inc
jl
and
inc
sbb
xchg
cld
jne
(bad)
or
add
jbe
and
(bad)
cld
dec
movs
adc
fst
cmp
add
sti
(bad)
ficomp
gs
push
sbb
adc
mov
nop
push
push
xlat
(bad)
clc
sub
cmp
in
arpl
jno
lock
xchg
cmp
mov
test
xchg
xor
sbb
xor
dec
in
popa
or
inc
sahf
cmps
adc
or
sub
adc
popa
pop
add
mov
sbb
jo
sbb
les
mov
jo
cmps
mov
cmps
nop
loope
and
push
add
or
jo
mov
mov
es
cdq
maskmovq
dec
(bad)
jmp
sub
mov
outs
fcmovnbe
sbb
pop
sbb
and
mov
jmp
aad
xor
and
pop
push
icebp
outs
mov
in
xchg
es
pop
das
mov
test
daa
cwde
sbb
xchg
(bad)
in
sbb
inc
pop
sbb
sar
out
dec
sub
dec
shr
or
repnz
push
jnp
retf
inc
pop
inc
fsubr
dec
mov
sbb
sbb
sub
ret
fsub
scas
rcl
push
das
imul
adc
add
inc
mov
daa
cli
cs
xchg
sub
cmps
loop
inc
adc
les
out
pop
pop
je
icebp
test
xchg
jl
fimul
cmc
sub
ror
iret
xor
out
add
loope
es
sub
pop
rcr
in
inc
int
push
sub
add
aaa
sbb
fmul
dec
xor
xchg
pop
jle
dec
jg
imul
add
stc
or
out
add
mov
dec
cld
mov
adc
jo
rcr
cli
xor
lds
movs
xor
jmp
inc
xchg
mov
or
fdivp
inc
xor
mov
fisttp
jg
xor
cmp
dec
ret
add
rcl
xchg
fimul
xor
movs
dec
xor
nop
sbb
aas
inc
jmp
enter
fstp
push
or
sub
and
daa
adc
dec
adc
sbb
mov
xor
add
inc
adc
adc
lds
movs
dec
loopne
xchg
cmp
out
dec
adc
jno
xchg
pop
add
lock
test
sbb
fist
sub
inc
inc
int
popa
pop
or
and
iret
dec
mov
popa
(bad)
mov
inc
pusha
pop
pusha
mov
mov
and
sub
vrsqrtps
add
out
add
fild
jp
fsub
xchg
sbb
dec
call
or
fdivrp
xchg
add
ret
icebp
retf
pop
xchg
pop
pop
int
sbb
sub
pop
loopne
or
jo
or
fsubr
push
hlt
mov
mov
out
rol
inc
inc
push
xchg
xor
xchg
shl
inc
idiv
mov
dec
sar
je
(bad)
loope
push
mov
sbb
test
test
or
fsub
sub
adc
adc
cmp
mov
and
scas
xor
out
loop
and
dec
adc
cs
mov
mov
xchg
or
and
xchg
or
test
dec
inc
dec
adc
pop
pop
in
jl
loopne
(bad)
sbb
scas
or
adc
in
push
sub
push
addr16
push
adc
add
ficomp
ins
or
ja
out
stos
jbe
imul
and
sti
or
sub
stos
sub
ret
adc
movs
sbb
aaa
cmp
dec
sbb
(bad)
out
push
xor
jg
cwde
and
sub
xchg
or
sbb
add
sbb
add
sub
inc
out
div
and
data16
(bad)
cmp
push
(bad)
(bad)
dec
mov
or
ret
dec
adc
jne
ins
pusha
xchg
or
loop
push
xor
out
loope
repnz
jp
xchg
cmp
jb
jge
xlat
fadd
pmullw
xor
sbb
adc
xlat
clc
prefetch
or
adc
int
add
or
clc
pop
inc
add
and
push
mov
test
xchg
add
inc
xor
ret
out
push
add
fiadd
test
pop
nop
lock
inc
sub
add
shl
jno
retf
daa
arpl
push
pop
imul
imul
aaa
push
add
aas
jns
pop
inc
adc
test
jmp
add
sub
nop
daa
lods
in
(bad)
push
retf
stos
or
mov
inc
sbb
jmp
and
cli
pop
shl
cli
sbb
and
sub
loope
add
scas
inc
aaa
adc
fimul
add
ficom
clc
mov
lahf
adc
ja
enter
enter
int3
shl
loopne
dec
and
sub
outs
popa
inc
push
adc
dec
inc
movs
inc
fs
and
retf
push
in
sub
mov
push
inc
push
add
xchg
sbb
sub
push
xchg
sub
outs
pop
hlt
cs
dec
sub
outs
mov
pop
mov
lea
iret
dec
or
xchg
jmp
enter
xchg
push
test
call
cmp
xor
xchg
nop
pop
adc
mov
loop
push
sbb
call
jbe
jmp
and
mov
mov
or
scas
test
mov
in
jmp
arpl
adc
cmp
add
mov
pop
jg
xchg
ins
test
popa
xchg
fwait
mov
mov
and
and
dec
xchg
test
loopne
sub
add
loopne
inc
push
iret
jmp
aam
inc
mov
sub
mov
and
sbb
loop
or
xlat
repnz
adc
mov
jmp
test
fcomp
adc
clc
rcr
movs
hlt
xor
sbb
and
jmp
inc
mov
ret
ret
add
jmp
adc
cmps
add
(bad)
sub
rcl
mov
dec
sbb
popf
jl
test
loope
cmps
sbb
jbe
jle
int
xchg
add
cmp
adc
in
pusha
cld
fwait
movs
add
hlt
shr
push
loopne
retf
dec
or
ja
loopne
rcr
sbb
xlat
inc
add
push
sbb
sub
or
add
inc
sub
add
loope
xor
ret
pusha
sbb
bnd
nop
sbb
sbb
and
sbb
das
sub
dec
jl
test
inc
(bad)
mov
sahf
in
mov
in
add
dec
add
inc
push
add
in
sbb
(bad)
in
jl
ror
shl
and
test
mov
in
out
xchg
retf
add
lock
cld
mov
add
push
movs
out
dec
add
test
dec
out
sbb
sahf
repz
sbb
or
test
out
das
sbb
and
dec
inc
and
js
dec
add
(bad)
call
cld
dec
out
mov
nop
movs
inc
push
pop
daa
enter
sub
sub
ret
retf
test
mov
out
pop
pop
and
cmp
dec
add
adc
inc
and
fs
sub
pop
ret
pop
icebp
loope
inc
push
(bad)
mov
leave
sub
pop
inc
lock
mov
std
push
or
add
pop
inc
jb
lock
rol
lea
sahf
or
mov
sbb
add
shl
in
or
gs
or
jmp
in
pop
in
xor
repnz
or
push
lock
mov
or
and
xor
cmp
or
ficomp
add
mov
ins
pop
pop
mov
out
repz
and
ret
sahf
inc
cdq
or
in
clc
pop
sub
loope
jg
call
inc
push
or
push
in
jmp
xor
push
out
repz
repz
repz
inc
xchg
gs
xchg
push
jb
hlt
in
jmp
xor
fsub
and
pop
hlt
push
pop
test
iret
jp
push
dec
and
adc
(bad)
jb
mov
sbb
push
sbb
out
dec
bound
dec
cmp
sub
xchg
fistp
push
retf
repz
aas
adc
cmc
retf
and
leave
push
pop
sbb
mov
pop
rcr
inc
in
adc
push
sbb
mov
js
cmp
sbb
nop
cvtps2pi
add
cwde
adc
cmc
push
pushf
outs
nop
scas
cmp
or
push
add
add
lods
ss
pop
div
adc
test
push
adc
push
mov
cli
dec
sub
xlat
lods
dec
mov
mov
scas
add
and
pop
cli
dec
pop
(bad)
dec
je
sub
movs
movs
std
adc
jge
push
jl
(bad)
xor
movs
lods
sbb
and
mov
movs
xchg
adc
adc
call
bnd
nop
(bad)
mov
mov
leave
ret
inc
mov
cmp
ss
pop
xor
push
pop
arpl
daa
xor
xor
jle
cs
inc
les
and
test
mov
retf
and
sub
mov
sbb
dec
les
pop
pop
cwde
icebp
rol
and
jo
push
adc
sbb
or
cs
sbb
test
xor
sbb
pusha
in
loopne
push
xchg
sub
jl
pop
jge
int3
push
sub
push
call
adc
(bad)
pushf
in
neg
dec
sbb
pop
jecxz
push
sbb
push
dec
or
jle
xchg
and
sub
or
in
(bad)
popf
inc
push
xchg
stc
mov
cmp
inc
add
push
pop
push
hlt
cmp
(bad)
mov
test
dec
les
lahf
jns
enter
sti
cli
push
cmp
aam
stos
test
xchg
sti
sahf
adc
test
add
je
push
push
fiadd
repnz
int
ds
adc
mov
nop
dec
dec
int3
and
push
jmp
movs
fisttp
imul
pop
nop
xor
addr16
jg
iret
js
sub
xchg
fs
and
add
lock
push
xchg
int
xor
enter
nop
xor
mov
sub
neg
dec
jae
or
inc
mov
aas
and
mov
mov
outs
std
dec
xchg
push
je
mov
sbb
add
pop
sbb
add
add
mul
adc
neg
mov
cmp
push
fisub
or
sub
push
mov
add
mov
push
push
and
xchg
push
xchg
pop
dec
and
dec
stos
push
xchg
or
(bad)
clc
clc
and
xor
jno
mov
mov
pop
mov
jle
dec
cmc
(bad)
nop
scas
inc
mov
add
sbb
or
xchg
and
lock
add
pop
mov
push
or
adc
outs
and
mov
xlat
xor
shl
fdiv
test
jns
xor
sub
and
xchg
push
xor
das
aaa
and
mov
and
lock
adc
and
mov
inc
mov
data16
or
sub
xchg
out
mov
lock
dec
xor
inc
repnz
es
outs
and
nop
add
hlt
inc
adc
sub
in
mov
xchg
adc
push
mov
adc
inc
jne
dec
lock
xchg
inc
lock
xchg
pop
inc
push
mov
or
stc
adc
sar
jle
ins
ret
dec
daa
xor
in
add
in
add
inc
daa
mov
(bad)
pop
or
add
inc
cdq
scas
test
add
and
dec
sbb
repnz
enter
add
popf
out
std
or
pop
xchg
rol
jne
mov
add
xor
fstp
xor
cmp
xor
add
adc
push
nop
lock
jmp
add
sbb
aas
std
scas
push
stc
add
dec
add
lock
pop
in
test
and
and
add
gs
dec
add
dec
and
pop
jp
jno
xchg
adc
iret
imul
push
mov
mov
cmp
dec
mov
fisttp
add
ss
dec
(bad)
int3
or
loopne
mov
femms
mov
fcomp
pop
mov
inc
ins
push
test
and
mov
xor
mov
cs
mov
dec
ss
dec
pop
pusha
pop
daa
scas
and
sbb
pop
stc
dec
add
sbb
pop
dec
neg
sub
scas
pop
fdiv
add
push
or
inc
sar
mov
or
or
and
add
push
(bad)
dec
pop
adc
sub
in
mov
stc
iret
mov
mov
lods
movs
cmc
add
inc
cmp
iret
xor
add
pop
dec
xor
dec
mov
adc
daa
dec
iret
inc
(bad)
sbb
push
nop
jo
dec
sub
mov
or
fsubr
dec
add
mov
adc
cmp
push
call
mov
fidiv
xor
add
mov
adc
and
dec
adc
fsub
in
fild
pusha
mov
xor
inc
fxch
cmp
sub
sbb
xor
ins
push
sub
or
push
and
stc
sub
and
nop
or
int
fisttp
loope
push
push
jmp
dec
dec
test
xchg
dec
xor
dec
adc
pop
and
dec
inc
repnz
repnz
or
or
mov
sbb
sub
or
push
xchg
cmp
rdmsr
or
pushf
xchg
addr16
xor
dec
std
pop
pop
push
xchg
mov
sti
push
(bad)
cld
adc
sub
or
or
or
or
mov
pop
mov
inc
loopne
jns
push
dec
inc
sbb
rcr
fwait
pusha
cmp
rcr
fwait
add
push
daa
daa
inc
bound
mov
jae
inc
pop
push
push
jns
ficomp
les
dec
cs
in
sub
(bad)
fbld
xchg
cmp
or
inc
cmovle
or
daa
push
xor
dec
inc
and
adc
dec
call
push
dec
adc
push
mov
sub
push
add
jae
repnz
xlat
or
retf
adc
sub
je
mov
sub
inc
or
mov
sub
sahf
sbb
scas
or
in
das
xor
xor
jmp
dec
jae
mov
neg
icebp
out
pop
cdq
in
xchg
push
push
pop
push
push
inc
and
shl
and
std
loop
add
in
sbb
in
int
add
sbb
adc
inc
repnz
and
adc
loop
(bad)
out
aaa
push
movs
adc
ja
hlt
mov
or
inc
sub
xchg
xchg
push
enter
hlt
std
pop
stc
mov
push
jl
dec
add
nop
scas
in
adc
adc
inc
jmp
cld
adc
cmp
and
mov
les
xchg
int3
mov
das
retf
push
dec
push
repnz
sub
mov
or
pushf
cmp
lock
jo
push
mov
dec
les
lods
cs
push
or
pop
inc
imul
test
bound
inc
icebp
xchg
mov
(bad)
movs
into
leave
or
or
fadd
xor
mov
mov
loop
test
hlt
fs
jmp
icebp
push
lods
push
dec
ins
bnd
clc
mov
dec
add
sbb
xchg
sbb
cmc
sbb
xchg
sbb
hlt
mov
outs
dec
and
fisttp
or
sbb
cdq
mov
adc
add
sbb
loopne
add
jno
or
and
imul
popf
cmp
aad
dec
outs
test
lods
jl
fstp
xchg
push
inc
or
enter
dec
imul
push
jo
mov
retf
push
push
stc
mov
test
inc
mov
sar
ins
mov
push
jns
sub
rcl
mov
adc
push
jae
add
lea
outs
push
push
das
inc
add
fs
dec
jbe
test
add
rcr
dec
and
pop
push
sbb
mov
and
add
pop
or
arpl
push
pop
push
pop
arpl
sar
and
jg
lahf
aaa
int3
sbb
test
cmp
xchg
or
loopne
loope
lea
push
xor
inc
out
call
cmp
dec
call
cmp
mov
or
fwait
mov
jge
inc
(bad)
jmp
jbe
sbb
inc
mov
je
add
sbb
sub
lahf
add
or
push
sbb
lods
xor
sub
push
sbb
sbb
adc
sbb
xor
pop
sbb
mov
adc
add
dec
mov
sub
inc
stc
es
mov
dec
mov
or
outs
lea
xor
xchg
mov
lods
push
push
add
cmp
cmp
xor
jmp
pushf
add
ins
adc
(bad)
push
sti
and
add
dec
repnz
push
fld
sbb
add
sub
push
and
jl
sbb
dec
popa
inc
push
and
pusha
and
ins
or
push
and
test
dec
inc
in
inc
adc
push
jp
and
add
gs
add
(bad)
pop
dec
loope
or
add
ja
xchg
dec
retf
inc
jmp
pop
loopne
dec
fist
data16
inc
jae
pop
push
push
xor
push
out
sbb
int
dec
cld
jns
and
and
add
or
or
addr16
xor
(bad)
aas
push
mov
arpl
addr16
ins
outs
outs
jo
cmp
and
jbe
js
jp
je
gs
add
add
pop
rol
xor
add
sub
adc
pop
gs
test
cmp
mov
sbb
nop
or
icebp
cmps
pusha
cmps
mov
nop
pusha
pop
add
adc
jo
and
jg
(bad)
stos
out
pop
and
pop
sub
and
jmp
jl
sub
pop
jnp
jge
psubw
and
clc
mov
sbb
jp
(bad)
mov
ins
jg
pop
imul
call
push
add
arpl
cmp
mov
movs
or
push
push
adc
sbb
outs
inc
js
daa
push
outs
xadd
mov
test
and
scas
and
rcl
jl
out
repz
sub
movs
and
rcl
dec
pop
in
outs
jg
push
sbb
cmp
(bad)
idiv
add
in
enter
sub
add
sub
xor
dec
inc
dec
pop
arpl
repz
sub
scas
sub
mov
imul
ror
ins
fst
and
clc
and
in
fnstsw
and
fs
xchg
mov
fs
mov
xor
jb
es
js
ss
xchg
gs
loope
test
in
lahf
imul
and
mov
sbb
and
nop
inc
outs
adc
mov
movs
nop
or
nop
enter
cs
sub
xchg
mov
dec
clc
sbb
jmp
cmp
mov
push
cmp
dec
aad
aas
sbb
sbb
int3
xor
and
leave
and
stos
hlt
hlt
add
adc
gs
xor
mov
int
and
loopne
loopne
es
(bad)
(bad)
out
and
sti
lock
in
mov
mov
(bad)
cmps
out
shr
call
and
push
in
inc
in
imul
test
inc
in
inc
jecxz
icebp
adc
std
fbstp
out
jmp
jmp
retf
xchg
mul
jmp
or
outs
addr16
loop
ret
in
in
in
pop
dec
fnstsw
in
xchg
pop
in
out
repz
cmp
loopne
ja
(bad)
(bad)
stc
stos
call
push
imul
imul
dec
loopne
jecxz
in
xchg
repnz
jmp
jmp
fisttp
and
jmp
inc
sbb
ret
mov
int
movs
shl
sub
pop
lock
mov
pop
and
adc
cmc
mov
repnz
(bad)
ds
or
call
fist
in
in
cwde
mul
or
and
cs
adc
inc
cdq
loope
in
push
out
in
(bad)
mov
cmp
and
mov
je
xor
pop
mov
and
ror
loop
lock
mov
repz
and
jne
and
fld
inc
in
inc
ins
es
mov
lods
loop
sbb
pusha
adc
xchg
scas
adc
mov
loopne
enter
or
xor
adc
out
cs
addr16
mov
outs
sub
jge
outs
scas
jmp
repnz
pop
add
icebp
cmc
adc
or
adc
adc
sbb
hlt
lar
sbb
sbb
inc
out
outs
dec
jp
sbb
ja
in
int3
hlt
ins
or
add
push
inc
add
or
adc
lock
stos
adc
and
add
and
gs
aaa
add
jb
mov
cmp
ins
out
sbb
gs
inc
adc
repnz
adc
jo
inc
sbb
movs
fild
cmp
dec
out
dec
outs
loop
push
sbb
pop
inc
adc
jns
fimul
xchg
mov
(bad)
sbb
mul
jo
cwde
ins
fs
enter
imul
sbb
jmp
xchg
xchg
mov
loop
push
add
xor
adc
jne
xor
loop
loop
dec
pop
sub
in
pop
ret
push
and
jae
imul
test
addr16
nop
(bad)
xor
pop
fcom
outs
adc
jo
push
inc
jo
dec
dec
outs
into
popaw
push
ins
dec
dec
sahf
retf
je
xchg
iret
add
sbb
jnp
jl
and
popa
stos
jo
dec
pushf
xor
ror
mov
push
or
out
adc
xor
add
add
xchg
shl
xchg
mov
push
cwde
and
cmp
add
inc
sub
or
adc
lea
test
dec
and
(bad)
cmp
and
xchg
jbe
in
jnp
sub
sub
jle
and
hlt
nop
add
add
add
add
push
scas
pusha
sub
fs
cmp
jne
adc
push
xor
sub
xchg
xchg
and
int
mov
mov
sti
jne
mov
push
and
outs
and
sub
or
mov
add
pop
rol
adc
inc
sub
mov
(bad)
xchg
int3
sub
mov
pop
fnsave
pusha
cmp
inc
inc
push
setbe
mov
inc
sbb
xchg
loope
call
pusha
in
jle
nop
mov
int
(bad)
lea
lock
inc
add
ss
dec
repnz
mov
pop
movs
mov
call
push
cmp
push
in
mov
and
sub
add
inc
push
loopne
and
inc
and
sti
ja
mov
or
test
and
sub
dec
and
pop
xchg
sbb
adc
rol
cmp
sar
out
imul
jb
jae
addr16
test
dec
test
push
cmps
mov
cmp
repz
push
pop
imul
das
into
jns
jmp
fucomi
sub
and
and
or
and
dec
mov
mov
mov
nop
in
stos
icebp
cmp
repz
into
aad
jecxz
cmp
pop
ret
in
std
ja
xchg
or
jmp
not
and
sub
dec
xchg
(bad)
mov
outs
and
je
(bad)
jne
mov
iret
fs
pop
push
and
jne
(bad)
mov
xchg
cmp
lahf
lods
mov
lds
xor
ss
mov
adc
ror
push
and
sti
inc
fstp
in
inc
test
invd
xor
fsubr
fld
cmp
je
ret
mov
test
xor
add
inc
dec
daa
xor
jno
inc
adc
shl
and
inc
je
add
out
cmp
jbe
push
movs
(bad)
fadd
push
xlat
outs
push
add
mov
cwde
jae
mov
rcl
cmp
jle
add
jbe
aaa
mov
movs
sar
into
dec
retf
je
mov
inc
sahf
xchg
pop
mov
call
loope
out
sahf
gs
xchg
jg
hlt
jo
je
mov
and
sahf
in
dec
pop
fist
push
lea
loopne
push
add
sbb
sar
je
dec
fisttp
call
fmul
xchg
add
mov
shr
lahf
pop
jl
inc
mov
gs
push
das
pop
adc
repnz
cmp
je
inc
pop
ret
pop
mov
mov
jg
test
dec
loopne
jbe
push
sar
mov
xor
ins
retf
sbb
shl
add
mov
loope
or
adc
daa
mov
adc
jecxz
std
push
inc
xchg
and
inc
call
jg
int3
mov
sbb
lock
xor
stc
jns
(bad)
cld
add
repz
jmp
mov
xchg
outs
shl
xchg
nop
inc
imul
adc
test
add
lods
adc
or
sub
shl
jle
dec
push
jne
ret
add
in
or
sbb
sub
mov
add
in
inc
out
loope
xchg
lock
add
push
add
stos
lock
mov
sbb
mov
sbb
(bad)
push
mov
ret
ins
rol
js
outs
hlt
xor
in
adc
adc
out
mov
cmps
jge
add
push
pop
cld
mov
cmp
data16
and
adc
and
pmullw
adc
adc
lods
mov
imul
jle
sbb
pop
ins
and
adc
or
sub
adc
sar
test
xchg
push
adc
loopne
or
jmp
mov
push
pop
mov
lods
sbb
adc
ss
fcomp
mov
popf
mov
xlat
push
and
and
inc
adc
sbb
or
popf
push
mov
or
addr16
jmp
jae
rol
pop
and
shr
mov
mov
(bad)
inc
jae
dec
inc
or
pop
fwait
push
ss
sbb
mov
jg
hlt
jmp
mov
popa
lds
and
jmp
adc
mov
das
add
add
sub
int
add
fiadd
test
outs
(bad)
mov
mov
xor
cmp
add
or
push
mov
fisttp
retf
inc
adc
rol
lods
sub
inc
mov
push
loope
inc
retf
mov
pop
sub
inc
sub
sbb
jg
jge
ins
xchg
sub
mov
pop
cwde
inc
stos
dec
test
imul
cdq
inc
imul
and
pop
adc
push
or
mov
push
rcr
sti
push
pop
call
pop
mov
push
(bad)
dec
fadd
ja
je
xchg
inc
mov
imul
push
imul
imul
addr16
and
and
inc
add
jmp
inc
fcmovnb
ficom
dec
add
mov
push
dec
push
and
push
leave
bound
push
ja
adc
sub
fistp
aaa
hlt
inc
jo
fist
sbb
sbb
xchg
mov
ret
loopne
adc
adc
adc
loop
fidiv
jo
imul
(bad)
call
add
je
cmp
je
cmp
je
cmp
sahf
fcom
and
add
jmp
adc
cmp
outs
cs
push
and
xor
addr16
jns
sub
push
mov
cmp
mov
cmps
retf
inc
test
popa
mov
and
cmp
shr
daa
enter
fdivp
sub
mov
aas
pop
es
retf
(bad)
test
inc
jbe
aaa
pop
adc
inc
sbb
test
sub
push
loop
adc
or
pop
loopne
mov
pop
mov
clc
or
add
repz
jae
sbb
inc
loopne
scas
js
adc
push
xor
shr
sub
inc
pop
or
sbb
cmp
test
mov
sub
push
stos
mov
test
dec
xor
push
sbb
or
inc
inc
mov
or
sahf
push
cmps
xchg
dec
das
and
ss
fisubr
sbb
xchg
nop
mov
aad
push
mov
jg
jo
inc
add
mov
call
dec
and
ins
push
pop
dec
sub
test
fcom
cmc
js
dec
or
mov
fsub
push
push
adc
stos
cmp
inc
mov
jg
adc
rol
inc
and
xchg
dec
inc
push
pop
push
jb
call
out
dec
retf
inc
hlt
adc
sbb
inc
cmp
push
jl
sbb
test
and
ret
or
add
cs
ins
add
pextrw
or
lock
or
xchg
xchg
dec
popa
mov
mov
add
iret
int3
xor
mov
sbb
mov
lahf
clc
jmp
sub
data16
mov
rcr
sbb
and
xor
push
cmp
sbb
icebp
mov
add
ret
test
rcl
data16
jb
inc
ja
mov
adc
ins
or
(bad)
lock
xor
add
pop
mov
test
add
and
loop
sbb
mov
sbb
or
or
push
(bad)
fs
inc
sbb
adc
push
shl
cmp
in
and
call
mov
les
fisttp
or
jecxz
push
xlat
icebp
push
and
jb
jns
xor
push
in
pop
ret
jae
push
mov
xchg
lahf
sbb
jbe
icebp
outs
pop
xor
stos
pop
les
nop
addr16
adc
add
retf
push
sub
or
out
push
and
loopne
cld
push
jmp
xchg
sbb
lods
xor
popf
and
ret
inc
in
fwait
or
fldcw
stc
inc
and
xor
inc
inc
pushf
ins
test
jg
inc
daa
jne
call
(bad)
iret
mov
rol
cmp
push
jg
ret
jb
inc
and
adc
out
les
sbb
mov
or
dec
jne
jmp
xor
adc
ret
and
pop
cmp
iret
adc
jo
inc
push
and
js
pop
in
dec
ja
jmp
mov
pusha
(bad)
wrmsr
lea
dec
test
ins
xor
(bad)
repz
fisttp
pop
(bad)
(bad)
js
aas
in
fisubr
mov
sbb
push
shr
or
push
and
and
test
mov
xchg
ins
or
pop
invd
cmp
inc
scas
ss
inc
das
fcmovnu
inc
ss
rcl
sub
bound
test
mov
push
fwait
les
sbb
sub
and
dec
retf
xchg
fcmovne
adc
adc
xor
sbb
push
in
push
popa
js
add
call
inc
ror
imul
mov
add
dec
sbb
push
mov
and
imul
dec
ss
sbb
dec
imul
dec
jnp
lahf
cmp
ja
fmul
dec
inc
dec
gs
jmp
add
add
mov
ins
inc
test
mov
xchg
call
scas
mov
cwde
xor
or
inc
or
pop
sbb
pop
cs
rcl
xor
out
cmp
inc
adc
add
js
ret
sar
or
je
jo
add
inc
aas
sbb
or
pushf
pop
and
push
sub
or
clc
lods
das
and
pop
mov
add
xchg
mov
or
or
sbb
pusha
sbb
ret
xor
test
ret
mov
xchg
xor
push
push
cs
call
jg
jmp
ss
adc
and
inc
jmp
add
xchg
mov
in
add
popa
aas
dec
call
sbb
and
and
mov
je
push
popa
dec
sbb
popa
sub
outs
or
(bad)
pop
sub
and
add
imul
cmp
call
mov
and
cwde
das
pop
cmp
xchg
pop
jne
xchg
add
mov
mov
mov
and
sbb
and
inc
sub
in
mov
fdivr
aas
inc
pop
jne
xor
pop
lahf
rcl
push
mov
ds
imul
imul
ficomp
xor
shl
inc
fcom
inc
and
jmp
push
sbb
shl
sub
fcomi
lea
adc
ds
xor
retf
add
shl
push
sub
pop
aam
push
push
mov
call
lahf
imul
jne
fbstp
sub
jb
and
imul
sub
sbb
shl
ins
sbb
maxps
jo
ret
jge
jbe
push
or
xchg
sbb
ja
mov
mov
fwait
jno
shr
sub
pop
dec
push
sar
es
xor
dec
push
and
and
and
push
mov
shr
leave
das
cli
pop
cmp
int
pop
sbb
and
mov
loope
push
xor
mov
xor
or
out
and
pop
or
dec
stos
ret
fldcw
jne
mov
cmp
sti
sub
xchg
imul
imul
adc
lea
add
mov
jecxz
and
loope
pop
add
push
xor
shr
test
rol
and
movs
das
cmp
fnstsw
jne
movs
add
lds
jae
and
(bad)
mov
push
jle
jg
je
je
add
imul
mov
rcl
mov
out
mov
sub
sti
fs
je
sub
push
pop
or
add
add
add
in
and
mov
add
mov
add
xor
or
cmps
jae
jae
sbb
js
inc
and
jmp
sti
xor
mov
and
sbb
and
xor
push
dec
test
sub
sar
jmp
in
(bad)
pop
das
mov
mov
(bad)
neg
jbe
push
dec
push
cmc
fiadd
dec
inc
adc
mov
inc
cmp
cmp
add
jecxz
and
in
movs
jge
fidiv
mov
ins
push
jg
push
cwde
cmp
std
jnp
mov
arpl
test
ret
jmp
popa
(bad)
aam
dec
add
pop
push
add
jl
add
push
add
or
sbb
sbb
adc
fs
inc
sub
mov
sbb
ror
and
arpl
clc
mov
or
mov
call
adc
in
mov
cli
inc
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
je
test
(bad)
inc
rol
(bad)
lds
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
push
push
mov
pop
jno
dec
push
hlt
add
mov
cmps
or
pushf
ret
ror
inc
adc
lahf
(bad)
xor
inc
movs
add
xchg
pop
ret
jne
loope
(bad)
push
pop
lods
fldenv
sbb
mov
dec
test
jl
outs
loopne
in
push
pop
(bad)
sub
mov
or
add
push
push
stc
cmp
fild
dec
push
aas
pop
mov
push
sar
mov
cmp
icebp
sbb
add
scas
inc
(bad)
(bad)
mov
inc
arpl
cmps
int
in
add
jge
xor
inc
das
or
push
mov
in
push
dec
shr
add
ret
or
fidivr
cmp
je
mov
cli
add
adc
mul
adc
int
fistp
adc
pop
cmp
pop
cmp
test
add
out
add
ret
aad
or
xor
outs
cmp
add
je
int
mov
icebp
add
mov
mov
lds
jb
lahf
sub
mov
dec
push
push
xchg
test
pop
dec
out
cmp
inc
jge
lods
stos
dec
call
or
cwde
dec
adc
fsubr
pop
arpl
in
sub
push
mov
cmp
add
cdq
fsubr
jne
jmp
push
and
call
xor
and
xchg
xchg
add
imul
test
adc
enter
or
add
push
lods
adc
es
add
mov
fcmove
ins
and
mov
test
add
cmps
imul
push
jle
pusha
int
push
sbb
jo
adc
adc
sbb
add
pmulhuw
(bad)
sbb
movups
add
adc
adc
sbb
push
push
cdq
ds
repz
cmp
xor
int
imul
push
xchg
int
imul
jae
pop
(bad)
or
or
mul
ss
sbb
mov
cmovbe
or
test
and
stos
arpl
cmp
lods
pop
int
es
fs
jb
test
and
and
daa
movs
movs
pop
dec
inc
mov
popa
add
sub
or
pusha
pop
xor
icebp
sub
into
add
imul
int
dec
cs
jge
add
cmp
xor
sbb
lock
mov
adc
dec
and
or
or
or
btc
xor
push
inc
stos
mov
ins
and
jbe
pushf
or
dec
dec
call
iret
xchg
jb
aas
dec
adc
pop
xor
(bad)
fsubr
dec
fild
scas
sbb
out
sbb
fwait
jmp
call
dec
rcr
add
fild
jb
lds
pop
adc
aaa
lock
test
push
sub
dec
lock
add
sub
sbb
sbb
xor
jno
mov
push
sub
enter
ret
loopne
or
in
test
cmps
mov
sbb
mov
jne
and
call
arpl
(bad)
dec
addr16
repz
or
cmp
loopne
sbb
or
and
leave
xchg
stos
loopne
mov
mov
ja
add
mov
enter
pop
inc
and
cmp
add
push
ins
and
int3
int
cmp
and
movs
xor
push
adc
pop
test
add
xor
fist
or
dec
sbb
and
mov
mov
mov
mov
fsub
out
test
mov
sbb
jmp
retf
sbb
inc
pusha
mov
push
je
mov
lods
mov
add
mov
dec
pop
or
add
jnp
scas
cwde
mov
call
adc
call
mov
jle
mov
(bad)
pusha
imul
xchg
add
jg
cs
test
or
out
dec
xor
pop
adc
in
adc
loopne
xchg
js
fst
pop
ins
mov
jecxz
jne
das
ror
in
loopne
cmp
inc
pop
not
add
mov
xor
and
push
test
adc
cdq
cmp
lea
pushf
fnstcw
add
or
les
jmp
dec
cmp
dec
add
add
xchg
or
mov
pop
or
push
icebp
sub
pop
es
inc
movs
sub
lock
sbb
jp
push
cmps
je
and
cmp
add
cmp
jg
cmps
mov
jg
shl
add
mov
dec
jno
jne
pop
sbb
or
lea
mov
add
mov
inc
inc
mov
mov
push
jl
sbb
push
addr16
out
jle
jl
mov
push
xor
or
push
or
lods
jmp
or
jecxz
cld
jge
jmp
outs
and
inc
cmp
add
out
mov
cmp
jmp
pop
movs
adc
ficomp
das
jmp
mov
test
sar
push
mov
sbb
wbinvd
or
and
xchg
pop
push
sub
adc
or
add
es
adc
repnz
in
inc
add
adc
add
dec
sahf
xchg
xlat
mov
nop
push
pop
push
pop
push
push
out
push
cld
xor
sahf
out
imul
pop
inc
pop
ja
test
(bad)
aad
popa
or
repz
(bad)
jle
mov
sub
movs
sbb
imul
call
sbb
sti
stos
xchg
clc
out
or
mov
add
adc
pop
lea
loope
dec
push
mov
lea
fstp
mov
jno
sbb
add
adc
dec
pop
adc
bound
cmps
sub
push
rcr
sbb
std
push
inc
pop
jo
rol
add
pop
nop
neg
adc
fadd
or
or
xchg
js
les
push
pusha
lock
arpl
pop
(bad)
pusha
xor
jg
sbb
jl
xor
mov
sbb
and
rol
add
pop
lods
xor
aas
or
outs
jnp
(bad)
lea
test
or
sub
xlat
add
jmp
pop
or
push
inc
clc
or
rol
pop
inc
and
outs
or
jg
mov
add
push
push
adc
(bad)
out
add
push
pop
xadd
(bad)
(bad)
fs
pop
add
sbb
pop
jmp
stc
mov
es
sbb
push
sti
pop
add
popa
or
push
inc
pop
adc
inc
xor
repnz
and
fild
push
loopne
popa
shr
iret
dec
and
dec
bndstx
in
add
mov
adc
aas
inc
or
icebp
hlt
jnp
aam
(bad)
xchg
push
dec
pop
dec
out
in
mov
(bad)
sbb
aad
add
sbb
ja
or
lods
rcr
push
xor
outs
xchg
cmp
pusha
repz
(bad)
pop
mov
outs
mov
leave
add
and
(bad)
cmps
and
fcom
jno
test
pop
data16
imul
cmp
adc
xor
xor
sbb
pop
(bad)
(bad)
out
push
sbb
into
jmp
fadd
mov
jnp
popa
jae
pop
mov
or
jns
or
jmp
sbb
dec
or
sub
mov
jae
(bad)
cwde
shr
or
inc
in
cmp
xor
imul
xor
pop
jb
shl
jae
add
and
pop
ss
dec
and
xchg
cmp
add
pop
pop
mov
add
cmp
mov
adc
(bad)
mov
mov
mov
fidivr
sub
pop
adc
xor
in
or
sbb
stos
xor
ss
mov
xlat
nop
sub
out
stos
mov
jnp
mov
jmp
ds
out
movs
xchg
push
mov
sbb
push
or
add
sub
fs
add
jbe
(bad)
(bad)
shl
add
(bad)
enter
ss
lock
test
fsub
clc
and
dec
sub
adc
dec
and
sbb
test
aas
inc
adc
mov
mov
pop
cs
push
sbb
out
shr
test
sahf
inc
fbstp
mov
imul
push
cmp
sub
mov
jo
cmp
or
neg
push
mov
adc
mul
or
push
jle
push
gs
adc
pop
mov
addr16
lock
test
inc
mov
push
pop
xchg
je
push
mov
add
iret
jnp
mov
mov
es
xchg
aas
push
jo
xlat
xchg
inc
nop
lahf
scas
sub
addr16
in
loopne
fidiv
jl
js
jle
xor
movs
jnp
jp
mov
outs
adc
and
sbb
mov
adc
imul
sbb
add
test
jo
imul
xchg
mov
push
shr
jbe
mov
and
fsub
adc
push
leave
in
adc
and
pop
cmp
mov
dec
not
and
inc
inc
test
cs
push
xor
pushf
lahf
adc
mov
stc
add
fadd
ds
ds
push
push
cmp
jl
js
pusha
and
adc
xor
xlat
sbb
xor
mov
jle
xor
cld
xor
mov
xchg
scas
and
add
imul
imul
or
imul
and
push
cmps
or
cmp
lods
nop
movups
(bad)
popa
movs
inc
lods
cmp
sbb
movs
sbb
iret
mov
cs
sbb
xchg
ins
dec
inc
ins
into
(bad)
imul
and
pop
clc
jp
push
pop
lock
mov
xchg
jo
neg
pop
or
cwde
cs
push
lock
neg
push
xor
push
dec
inc
add
or
aam
add
and
sar
sahf
mov
pop
inc
xchg
ficomp
jmp
ss
repz
push
ins
test
out
or
ins
mov
or
mov
repnz
and
mov
sub
or
outs
(bad)
or
inc
cmp
mov
daa
add
xchg
xchg
fcmovne
mov
sub
xchg
xchg
cmps
test
lea
mov
push
call
inc
push
lods
push
or
add
dec
mov
imul
add
pop
outs
or
push
fnsave
push
lock
(bad)
mov
xchg
call
outs
movs
dec
jbe
push
add
adc
mov
jp
imul
mov
adc
(bad)
sub
adc
adc
dec
sub
pop
and
and
and
xchg
xchg
dec
jl
pushf
hlt
cmp
jno
popa
int3
and
ret
movs
hlt
mov
loopne
mov
or
inc
js
inc
and
ins
sbb
mov
std
add
inc
adc
jg
ror
sub
scas
lock
or
leave
cmp
add
or
inc
test
loope
lock
and
les
push
mov
push
push
mov
push
jo
dec
aam
cwde
shr
push
mov
inc
popa
mov
and
(bad)
sbb
popa
mov
and
or
in
adc
das
xchg
aam
test
push
sub
jno
lock
add
jno
rcr
mov
lods
jg
iret
movs
add
and
mov
test
ret
sbb
daa
push
(bad)
enter
inc
mov
(bad)
repz
dec
sbb
push
sbb
add
popa
dec
push
xor
sahf
jae
xor
or
dec
(bad)
enter
cmp
inc
sahf
cwde
inc
dec
pusha
outs
dec
xor
jmp
and
push
and
nop
outs
dec
(bad)
lds
test
add
jae
ror
add
dec
outs
sbb
pop
jb
fmul
data16
pop
cmp
sbb
adc
jg
push
rcl
(bad)
out
push
pusha
adc
test
push
sub
sbb
call
and
inc
or
les
pop
movs
push
popf
(bad)
jne
fs
inc
stos
adc
jge
pop
test
pop
mov
mov
sub
enter
(bad)
rcr
ins
pushf
daa
in
pop
lods
imul
sub
jb
dec
fadd
and
jmp
rcr
push
push
mov
fnsave
sub
dec
pop
and
inc
sti
push
clc
cmc
je
outs
int3
(bad)
ja
sbb
xchg
add
mov
mov
je
imul
sub
dec
mov
mov
xor
in
or
fsubr
xchg
(bad)
jo
push
sub
xchg
lods
or
out
jbe
add
clc
loopne
sbb
icebp
fldenv
mov
pop
add
inc
mov
adc
in
xchg
jb
xor
cmp
cli
or
jne
pop
clc
sub
push
fcomp
out
clc
outs
je
outs
dec
inc
add
lock
jmp
rcr
(bad)
dec
retf
sbb
sbb
fwait
cmps
xchg
dec
push
cmp
mov
rol
nop
push
add
adc
lds
mul
lahf
(bad)
mov
imul
jns
cdq
fs
dec
hlt
hlt
mov
fs
in
outs
xchg
movs
sbb
hlt
mov
xchg
push
lock
pop
ret
lock
push
mov
sbb
pop
and
or
push
adc
mov
dec
bound
xchg
test
daa
xchg
jbe
inc
push
and
hlt
loopne
or
or
mov
jle
push
rcl
xchg
cmps
jns
repnz
jmp
nop
loopne
lock
fstp
arpl
xchg
pop
fdiv
test
or
loop
mov
xchg
(bad)
aam
pop
add
mov
fmul
(bad)
out
or
sbb
push
hlt
add
ins
add
sub
test
ss
or
jnp
sbb
ds
pop
and
or
mov
pop
or
or
and
daa
fdivr
(bad)
sti
aas
xchg
add
out
rol
xlat
jbe
popa
ins
xor
movd
enter
jae
das
push
dec
mov
or
add
iret
pop
(bad)
fcmovnbe
xchg
adc
arpl
fs
or
sub
ds
cmp
sbb
lods
outs
movs
mov
mov
arpl
xchg
(bad)
popf
xor
jbe
inc
dec
fadd
mov
xchg
pop
or
pop
mov
shl
mov
mov
xchg
jl
nop
cwde
idiv
fs
push
les
or
das
adc
outs
adc
jbe
and
les
or
popf
inc
adc
push
mov
(bad)
sbb
xor
leave
jmp
inc
inc
add
(bad)
sub
loop
test
out
out
ret
ret
mov
scas
pusha
pop
inc
enter
dec
les
adc
cmps
je
cmp
les
mov
repz
jb
aam
sub
sub
fwait
lea
loopne
push
ret
cwde
adc
popa
push
push
sub
and
sub
jae
cmps
arpl
pop
dec
movs
mov
daa
in
imul
das
in
lahf
push
outs
pusha
push
outs
pusha
cmp
dec
push
sar
push
dec
and
test
add
lahf
adc
lds
jg
mov
leave
sbb
push
outs
or
cmp
xchg
and
in
push
fs
sbb
stos
add
in
add
cmp
sub
outs
cmp
dec
push
mov
or
cs
push
add
push
fs
cmps
dec
mov
or
or
add
sbb
or
std
fld1
and
pop
das
adc
sbb
sbb
nop
dec
iret
fwait
inc
mov
add
popa
sbb
ins
(bad)
and
xor
in
ja
lock
dec
(bad)
and
scas
mov
and
(bad)
jle
jns
lods
adc
or
push
dec
add
adc
and
mov
push
add
repnz
inc
stc
add
or
or
clc
data16
push
sbb
add
leave
pop
sbb
push
cld
(bad)
dec
mov
adc
bound
loopne
mov
ss
sub
js
ja
bound
push
cmc
jae
lahf
ja
pop
(bad)
jmp
in
and
adc
cmp
ret
mov
fistp
xchg
test
dec
aaa
sbb
or
sub
jmp
mov
add
mov
pop
dec
or
fdiv
or
ret
xchg
add
fimul
inc
jbe
push
push
push
mov
mov
pop
int3
in
mov
fidivr
ja
mov
dec
ja
fiadd
loopne
mov
push
stos
pop
add
bound
(bad)
out
test
add
sbb
(bad)
mov
adc
rol
(bad)
mov
cmp
pop
inc
sub
jno
loope
pop
pop
scas
imul
test
add
xchg
push
inc
xchg
repnz
push
enter
call
inc
add
mov
clc
mov
jo
and
xchg
jg
sub
pop
push
imul
je
xchg
call
cdq
movs
icebp
dec
scas
xor
push
mov
in
es
das
xchg
mov
mov
adc
adc
and
xor
arpl
sbb
lea
mov
cmp
(bad)
fistp
cmps
loop
push
leavew
and
sub
add
inc
sti
cmp
and
and
mov
adc
pop
mov
sbb
lea
lock
les
adc
pop
jo
or
rcl
sbb
push
and
les
jmp
pop
fistp
push
rol
or
(bad)
sub
push
enter
fcom
pop
call
or
xor
cmp
sub
popa
and
and
lea
mov
sub
jo
loope
cmp
inc
daa
rcl
ret
mov
test
xchg
cld
sub
dec
add
and
mov
jl
in
and
push
sbb
enter
and
sub
imul
or
repnz
and
push
sbb
inc
cmp
lock
lock
mov
enter
xor
mov
xor
add
arpl
enter
mov
push
pop
jmp
jo
add
in
loope
pop
xor
or
adc
push
xchg
lahf
gs
pushf
mov
or
mov
dec
xor
test
pushf
mov
mov
inc
dec
sbb
cmp
cmps
adc
or
cmps
cmp
or
push
dec
inc
ret
stc
bswap
sbb
cmp
leave
shl
clc
retf
xor
arpl
retf
mov
(bad)
in
jnp
out
xor
pushf
push
loopne
adc
cmp
dec
sahf
inc
xchg
cmp
cs
dec
jae
and
sbb
push
inc
dec
leave
test
test
mov
xchg
inc
dec
ins
loop
hlt
xchg
rol
test
ja
push
push
mov
push
add
cmp
pop
movs
xor
pop
inc
mov
mov
(bad)
lahf
repnz
(bad)
lahf
dec
xchg
xor
das
(bad)
cmp
js
ss
imul
push
jl
pop
cwde
push
mov
pop
mov
cs
xor
out
xchg
invd
dec
push
xchg
add
rcr
dec
call
iret
cmp
xor
jne
cmp
repz
cdq
mov
or
fwait
scas
(bad)
dec
add
es
adc
sbb
mov
shl
stos
shr
mov
pop
ret
outs
add
add
loop
nop
lahf
or
shl
adc
add
repnz
ret
pop
xor
pop
mov
dec
gs
jp
cmps
or
and
inc
adc
mov
pop
(bad)
clc
test
call
lock
xchg
out
xchg
sbb
pushf
or
stos
lock
and
dec
outs
inc
push
mov
and
idiv
lods
and
lods
mov
adc
mov
and
jb
jae
enter
push
lods
dec
push
or
sbb
mov
outs
add
push
jmp
push
out
lods
out
js
sub
loopne
adc
pause
sub
adc
pop
add
ja
jno
pop
ret
mov
iret
ins
and
mov
fiadd
dec
or
scas
inc
cs
cmp
push
icebp
sahf
dec
call
and
out
inc
mov
test
shl
call
outs
gs
mov
loopne
stos
sub
out
out
stc
pop
in
mov
cwde
push
pop
push
loopne
add
fadd
sbb
(bad)
div
rcr
adc
ss
shrd
scas
scas
mov
mov
sbb
pop
popa
xor
add
push
dec
add
xchg
popa
jae
and
add
sti
push
mov
and
dec
nop
cli
or
and
pop
add
push
pop
cmp
das
fist
mov
movs
sbb
and
repnz
push
lds
out
test
mov
nop
mov
xor
or
inc
jmp
xchg
cwde
and
and
mov
jl
or
(bad)
fcomp
adc
mov
jno
and
je
arpl
pushf
mov
popf
push
(bad)
xor
repz
loop
inc
addr16
mov
les
or
aas
inc
test
add
sbb
cwde
jae
push
sub
and
fild
and
pop
pop
cwde
jecxz
jl
enter
adc
xchg
cmps
add
dec
jne
pavgb
pop
mov
adc
in
mov
xor
jge
pushf
jmp
sub
in
nop
push
je
loopne
dec
loopne
pop
mov
outs
dec
sbb
into
xchg
xchg
xor
xchg
mov
scas
aaa
test
test
(bad)
pop
jp
dec
rcl
inc
mov
sahf
mov
shl
xchg
push
inc
mov
and
add
das
hlt
call
cmp
push
push
mov
or
and
jb
cmp
mov
and
push
sti
call
fiadd
inc
mov
mov
ins
inc
nop
pop
loope
push
push
cs
add
push
pop
fdivr
cmp
mov
pop
push
sbb
mov
push
cmp
sbb
popf
pop
mov
mov
jbe
loope
int
je
push
es
xchg
test
popf
loopne
dec
cmp
fs
aaa
js
dec
adc
ret
pop
test
add
daa
test
jne
sub
sbb
cs
inc
xor
cmps
arpl
mov
xor
or
cwde
mov
add
dec
cmp
mov
inc
into
inc
frstor
mov
aaa
mov
repnz
add
push
cmp
outs
out
add
and
dec
add
jl
adc
xchg
adc
lods
and
xchg
sbb
dec
mov
mov
xor
adc
inc
and
addr16
pop
js
enter
sbb
or
adc
inc
arpl
or
sbb
sahf
dec
pop
mov
sub
mov
jp
or
sbb
mov
or
xchg
and
dec
or
push
mov
aas
inc
push
sub
repnz
lds
cs
inc
and
add
jl
lahf
fs
movs
data16
and
jle
sbb
mov
sub
jl
out
xchg
lock
sub
pusha
pushf
cmp
mov
sub
and
(bad)
sbb
xlat
jecxz
pop
adc
mov
inc
in
and
and
add
xor
or
popf
sahf
pushf
pop
or
inc
or
arpl
popf
sbb
aaa
and
je
mov
loope
jecxz
pop
mov
xlat
mov
inc
mov
adc
stos
mov
xor
xlat
sbb
xchg
xchg
xchg
push
push
shl
xor
sub
and
or
push
rcr
push
imul
ret
or
push
mov
cld
jns
loopne
jp
ror
add
inc
xchg
in
call
(bad)
sbb
push
push
test
xchg
int
cmps
dec
push
mov
nop
cmp
mov
ds
adc
adc
ja
cmp
repnz
jle
push
or
xor
clc
add
pop
jl
cmp
add
inc
or
xchg
popf
pusha
sbb
and
outs
lock
sbb
add
or
sbb
mov
loope
gs
mov
xchg
iret
mov
loopne
iret
jmp
aaa
xor
pop
sbb
adc
mov
rcl
stc
xor
xchg
inc
lea
mov
in
fimul
push
mov
test
xchg
jecxz
sbb
out
lea
shr
xchg
xchg
int3
inc
repnz
nop
mov
mov
cmp
adc
out
push
xor
push
add
mov
lahf
cmps
cmp
bound
dec
ret
xchg
mov
adc
dec
test
adc
aaa
xor
mov
movs
mov
lds
inc
popa
inc
dec
jne
cmp
inc
or
xchg
xor
sub
pop
and
sub
icebp
inc
or
and
ret
rol
lock
mov
cmp
push
mov
xchg
xor
(bad)
xchg
dec
jne
inc
cwde
test
xchg
mov
aam
aaa
adc
dec
xchg
cmps
icebp
daa
inc
adc
pop
inc
or
or
rcr
cmp
adc
pop
add
mov
in
jmp
in
pop
sbb
xor
xchg
inc
jg
pop
inc
inc
jmp
arpl
cmp
jle
(bad)
mov
pop
inc
mov
in
xchg
mov
jl
sub
mov
adc
adc
mov
popf
das
imul
imul
(bad)
fst
add
or
movs
ret
sbb
mov
and
mov
xor
cmps
xchg
cwde
outs
in
leave
cwde
cmps
cmps
in
dec
and
in
dec
jb
and
adc
mov
add
and
aad
fmul
xchg
(bad)
test
inc
jle
cdq
test
test
mov
mov
test
adc
stos
mov
loope
sub
ror
push
test
and
and
adc
push
call
std
clc
add
inc
and
dec
(bad)
xor
jg
push
fstp
jge
sub
pushf
add
test
call
mov
vmwrite
enter
test
mov
stos
add
scas
inc
enter
inc
es
stos
or
add
pop
lods
cmps
jne
pop
retf
dec
data16
push
stos
or
jmp
push
xchg
pop
push
inc
das
data16
sar
stos
add
stos
aam
jo
add
lea
push
or
nop
pushf
dec
(bad)
mov
or
push
repnz
mov
and
sub
lods
test
inc
call
imul
das
sbb
xor
sub
loopne
cmp
outs
scas
dec
pop
mov
cmps
(bad)
sbb
push
pusha
loop
push
mov
shl
in
mov
dec
ret
and
mov
(bad)
in
or
and
clc
ja
call
push
jle
xchg
add
cmp
test
gs
mov
cmp
mov
add
push
inc
or
and
pushf
mov
ins
or
sbb
lock
inc
sub
push
lods
xchg
std
pop
es
ss
leave
xchg
dec
pop
popa
in
pop
mov
and
pop
stc
test
ds
inc
jae
xor
sbb
nop
imul
xchg
popf
add
sub
cmp
mov
nop
pop
push
or
mov
sub
adc
and
pop
push
das
enter
mov
or
fstp
inc
test
dec
mov
xor
and
adc
addr16
icebp
cdq
shl
pop
inc
adc
into
mov
icebp
ins
adc
mov
ret
xor
jo
xor
cmps
inc
shr
jo
cld
mov
inc
push
adc
dec
adc
lods
cmp
jbe
push
scas
and
push
movs
fmul
loop
inc
movs
hlt
fs
cmps
add
pop
es
and
xchg
cmp
addr16
and
repz
sub
in
xchg
add
nop
adc
mov
stc
sub
inc
sbb
push
les
adc
or
out
add
mov
mov
pop
dec
sti
add
jge
stos
xchg
push
lock
cmp
jg
lods
ds
jno
sbb
rol
dec
jno
sbb
inc
and
call
and
stos
cmp
mov
cmp
and
push
aaa
add
jb
js
lock
cs
inc
pop
out
push
movs
lock
adc
inc
mov
in
str
dec
mov
mov
ss
fdiv
dec
out
push
mov
ror
add
xchg
mov
adc
stos
push
cld
adc
loopne
popa
lods
inc
test
popa
add
out
pop
xor
mov
aas
inc
ror
xor
lahf
dec
or
inc
mov
adc
arpl
xchg
js
and
and
mov
ins
outs
outs
ror
or
fwait
mov
sbb
sti
sbb
fs
xchg
sbb
jnp
bound
add
mov
mov
or
cwde
add
mov
sahf
es
mov
jp
mov
cmps
iret
or
adc
dec
pop
rol
or
xchg
popf
mov
mov
out
push
xchg
xchg
fiadd
xor
dec
pop
add
lods
adc
sbb
adc
nop
fidivr
jo
repnz
inc
ins
retf
rcl
jbe
(bad)
int3
add
scas
add
je
ret
adc
mov
sahf
push
sbb
ins
test
add
inc
mov
sbb
sub
fwait
or
jne
jnp
ins
loop
add
imul
mov
jg
fstp
pop
pushf
(bad)
dec
mov
jmp
ret
jns
sti
fadd
enter
fadd
fadd
rol
sbb
clc
imul
je
loopne
imul
or
inc
shl
jnp
les
iret
pop
bound
popa
lock
xor
sbb
inc
pusha
iret
cs
adc
daa
dec
sbb
in
add
push
or
xchg
aas
pop
ret
ror
xor
adc
sar
enter
repz
scas
pop
add
jmp
dec
lods
inc
pop
push
nop
iret
pop
dec
xchg
movs
add
sbb
pop
dec
push
cmp
out
jl
xor
or
mov
mov
sub
lods
hlt
pop
jecxz
push
sub
and
mov
sbb
or
jns
dec
or
add
dec
sub
pop
jb
add
dec
jae
mov
sbb
jl
adc
or
pop
mov
call
mov
sar
xchg
pop
js
dec
add
cld
adc
inc
iret
and
add
mov
pop
mov
jno
rol
sub
mov
add
mov
out
push
lahf
in
(bad)
nop
fidiv
cmp
and
dec
ret
add
mul
cmp
sub
test
add
inc
inc
xchg
mov
ret
imul
mov
pop
sub
adc
icebp
pop
pop
inc
add
sub
(bad)
stc
inc
out
out
jle
in
jle
sub
mov
fwait
ins
cmp
add
out
mov
(bad)
(bad)
test
repz
jle
cmps
in
dec
adc
repz
add
outs
repz
nop
fs
and
xchg
sbb
jmp
or
ss
arpl
mov
inc
in
fcmovnbe
and
jp
mov
shl
(bad)
mov
ret
fcom
rcl
sub
call
mov
push
icebp
(bad)
jle
mov
mov
add
xor
and
das
jmp
inc
mov
into
imul
pop
int
sub
mov
jo
pushf
(bad)
imul
es
mov
(bad)
adc
dec
sar
xor
add
inc
mov
sbb
pop
in
nop
repnz
dec
cli
aad
movs
xsha256
cmps
xchg
rol
jg
sbb
call
mov
mov
ins
mov
lds
lds
and
xchg
sub
and
sub
mov
xor
dec
mov
sbb
mov
imul
shl
lahf
shl
cmp
dec
adc
add
jne
xchg
dec
sbb
nop
jecxz
sqrtps
adc
or
aaa
cmp
aad
mov
jg
rol
sbb
xlat
lock
or
push
lods
(bad)
mov
pop
xor
jle
(bad)
aaa
mov
or
and
add
add
popa
test
(bad)
ss
or
sub
mov
(bad)
xchg
icebp
or
or
inc
outs
sbb
push
xchg
lea
pop
xor
xadd
in
dec
mov
pop
adc
push
test
fs
jl
mov
mov
sub
dec
jae
jo
pop
push
add
inc
mov
adc
inc
sahf
daa
pop
inc
xchg
das
ins
xor
mov
mov
push
addr16
push
xor
pop
repnz
loopne
leave
scas
jo
or
cmps
fs
fisttp
retf
aas
mov
or
mov
ins
xchg
dec
lds
xchg
cmps
or
cdq
enter
jmp
mov
pop
sub
add
fimul
mov
jge
inc
cmc
in
punpckhbw
mov
add
jg
inc
cmp
scas
sub
inc
pop
in
sbb
test
inc
add
dec
ud0
add
in
mov
leave
add
scas
test
mov
inc
adc
or
cwde
sbb
pop
sbb
adc
(bad)
add
jmp
mov
arpl
in
pop
int
push
and
test
sbb
dec
mov
arpl
mov
loop
or
xor
add
push
inc
push
out
mov
mov
xchg
cdq
cs
sbb
clc
mov
pop
inc
or
dec
xlat
cli
cmp
push
xchg
repnz
mov
cmp
sahf
mov
pushf
mov
push
ss
cwde
mov
and
jno
xor
mov
mov
push
cmp
adc
shl
cmp
adc
(bad)
xlat
mov
div
cdq
cs
je
xchg
test
or
nop
sbb
and
jae
xor
sti
outs
lea
pop
or
and
add
sub
jecxz
xor
aaa
fs
and
push
cmp
inc
pop
inc
push
pop
ret
add
push
sub
xchg
mov
xchg
rcl
cmps
jne
adc
dec
cld
adc
cmp
rcr
or
inc
or
(bad)
mov
inc
push
arpl
push
inc
jle
sub
dec
ins
jg
add
cmp
jle
ja
dec
xchg
jo
inc
inc
ret
stc
mov
addr16
mov
in
push
sub
sub
push
inc
imul
push
frstor
mov
push
add
mov
or
mov
mov
push
push
test
or
or
xor
sbb
sbb
js
daa
into
and
nop
inc
jmp
je
or
test
xlat
adc
mov
mov
test
mov
cmp
(bad)
cmp
retf
inc
mov
cmp
dec
and
xchg
(bad)
int3
mov
sysexit
int
inc
fmul
sub
int
jno
loopne
mov
not
aas
cmp
je
push
mov
inc
inc
add
push
cmp
loope
dec
inc
ret
aaa
lods
int
mov
xchg
pop
xor
and
cmps
nop
loopne
xor
int
ror
push
cmps
aam
sbb
lahf
fadd
mov
mov
xor
add
jmp
in
adc
cmp
push
js
add
cld
lods
jl
add
movs
js
shl
daa
(bad)
xchg
ret
inc
(bad)
push
hlt
movs
mov
sub
fs
arpl
imul
sar
inc
sahf
bound
or
add
push
sbb
gs
nop
or
pop
lea
xor
xor
push
cmps
add
pop
and
in
dec
or
push
add
and
pop
outs
cmp
add
or
pop
mov
sbb
pop
push
mov
mov
xchg
sar
xchg
nop
call
pcmpgtw
inc
fadd
push
xlat
pop
add
add
mov
(bad)
out
mov
lea
adc
cmp
xor
js
test
retf
mov
xor
or
or
cmc
movs
mov
cdq
pusha
out
cmp
or
rcr
add
or
loop
mov
cld
shl
mov
imul
(bad)
or
inc
sub
pop
inc
jmp
fcomp
and
fsub
rol
data16
mov
es
mov
dec
mov
add
inc
pop
sub
js
inc
ss
lock
rcr
adc
not
pop
fild
movs
pop
pop
inc
mov
xchg
fstp
sub
fdiv
and
and
mov
inc
lock
xchg
pop
and
xor
mov
mov
xor
cmp
shr
push
enter
add
push
ror
stc
pop
xchg
push
aam
add
aam
nop
pop
and
loopne
xor
push
and
push
loope
mov
fadd
mov
aam
adc
or
daa
pop
movs
ins
add
dec
daa
pusha
sub
inc
imul
nop
mov
movs
mov
scas
cmp
sub
jbe
jae
jo
into
ret
or
les
nop
cmp
cmp
lock
ds
ja
mov
pop
add
(bad)
mov
lock
sbb
lea
or
(bad)
fild
sub
jo
adc
mov
dec
or
xor
mov
pop
xchg
shl
shr
mov
outs
lea
xchg
or
mov
push
sub
movs
mov
sar
cmp
add
jno
cmp
cwde
jb
jns
lock
test
iret
sub
fdiv
xchg
and
inc
mov
inc
and
mov
adc
xchg
aaa
add
iret
adc
rcr
fcomp
sbb
outs
mov
into
cli
fwait
xchg
mov
cld
mov
loopne
jns
daa
rcr
cli
push
inc
cmp
add
test
xor
sbb
mov
mov
sub
xor
pop
mov
retf
inc
sbb
or
fmul
fimul
(bad)
(bad)
aam
cmp
and
add
aas
jbe
daa
dec
fild
xor
sub
adc
jle
outs
inc
jp
ds
clc
call
adc
dec
jle
sub
xchg
pop
lock
ja
in
fdiv
mov
test
pop
adc
adc
jmp
hlt
sub
cs
retf
call
out
loopne
int3
js
cs
or
pop
(bad)
js
in
retf
(bad)
push
inc
add
mov
call
test
sahf
adc
test
call
dec
fs
fbstp
mov
add
fisubr
(bad)
inc
xchg
sub
dec
ret
sub
shr
and
outs
movs
xchg
clc
mov
imul
xor
sub
push
lea
xchg
inc
and
iret
arpl
xor
data16
icebp
int
out
shl
loopne
jmp
push
leave
dec
aaa
ficom
jo
push
cmp
(bad)
xlat
mov
sbb
jmp
clc
loopne
ficomp
out
fisttp
xor
test
dec
xor
aas
add
and
mov
xchg
pop
stos
outs
std
aaa
sbb
retf
and
or
push
push
cld
add
xor
aam
inc
js
fimul
leave
add
sbb
fcom
ins
pop
lods
push
dec
or
pop
pop
dec
aaa
fs
adc
and
jnp
sbb
add
lahf
cmp
loopne
aam
ins
ss
xor
clc
loopne
loope
es
adc
clc
add
and
jecxz
adc
dec
dec
adc
or
rol
adc
jmp
fst
sub
add
dec
movs
dec
push
mov
pop
jmp
cmp
(bad)
loope
enter
xchg
loope
loope
and
inc
inc
jecxz
add
jecxz
jecxz
add
add
out
call
push
push
jmp
and
es
push
and
int3
inc
jecxz
jge
push
push
adc
push
in
inc
lahf
dec
mov
push
dec
cmp
dec
ss
mov
(bad)
ror
ins
xchg
test
rcr
(bad)
std
pop
inc
sbb
(bad)
rcr
hlt
push
inc
push
(bad)
addr16
sub
fldcw
add
dec
ins
inc
inc
inc
lods
push
inc
sbb
and
sub
leave
mov
bound
sub
(bad)
int
str
cdq
inc
arpl
inc
arpl
inc
sub
push
inc
or
xor
or
fmul
or
inc
jmp
cld
ret
xchg
scas
inc
mov
add
les
sar
xchg
lock
test
inc
fdiv
(bad)
aad
cmp
dec
icebp
(bad)
lock
cdq
sar
inc
in
mov
mov
jp
xor
push
imul
vaddsd
jmp
inc
nop
scas
in
test
adc
in
xchg
adc
scas
inc
in
rol
int3
ss
jne
and
jmp
sub
sub
lods
rcr
jne
(bad)
movs
sbb
add
fimul
push
call
jnp
jg
sbb
test
inc
call
mov
mov
retf
(bad)
and
inc
movs
popa
adc
cmp
out
shl
lock
mov
push
int3
lea
dec
(bad)
jg
and
call
inc
ror
loop
fidivr
inc
add
fs
je
cmp
inc
rcl
aaa
ss
jmp
inc
jo
xlat
sub
jmp
xrelease
(bad)
add
jmp
adc
leave
adc
movs
and
fiadd
jecxz
dec
push
rcr
data16
xchg
sbb
cmp
mov
adc
mov
xor
lahf
adc
cld
sub
jns
fwait
in
jo
fiadd
movs
xor
sub
lahf
stos
ins
mov
stos
popfw
pop
in
lahf
mov
mul
rcl
xchg
ret
xchg
sub
ret
pop
inc
sbb
add
stos
cmp
push
cwde
cmp
push
inc
sub
jb
lea
or
push
fld
pop
push
sbb
or
enter
out
jo
xor
inc
jmp
lock
mov
or
repz
ss
mov
popa
pushf
or
fs
push
ins
bound
add
je
mov
outs
or
xor
cs
mov
ja
xchg
cmp
cs
push
jns
(bad)
pop
push
enter
loopne
(bad)
adc
mov
add
mov
pop
mov
xor
dec
repnz
or
sbb
pop
dec
dec
xlat
iret
and
xor
sub
and
fwait
repnz
repnz
test
jbe
loop
iret
xchg
mov
sub
sub
out
jo
fistp
or
call
pop
or
add
bound
xor
and
pop
pusha
mov
cwde
inc
xchg
mov
rol
inc
push
sbb
dec
lock
fsubr
(bad)
enter
pop
sub
adc
or
and
ret
js
mov
mov
add
popa
jecxz
pop
and
xor
add
aaa
shl
pusha
ins
xor
and
mov
or
pop
adc
test
(bad)
dec
pop
mov
or
cmp
push
push
and
sub
cmp
dec
pop
sub
pop
rcr
cmp
sar
hlt
inc
into
and
cmps
ins
hlt
nop
pop
repnz
adc
hlt
je
cmp
cmc
push
jmp
pop
and
aam
cmp
std
jbe
clc
inc
mul
and
arpl
and
adc
xor
xor
inc
adc
pusha
push
cmps
adc
(bad)
rol
push
gs
test
nop
xlat
pop
cmp
test
and
dec
mov
cdq
sbb
xchg
retf
shr
cdq
(bad)
imul
push
in
mov
inc
rcl
sbb
fmul
cdq
cmps
sub
adc
jnp
adc
aad
je
or
in
cs
inc
(bad)
shl
bnd
dec
jne
push
das
lock
imul
call
mov
sbb
and
and
or
jne
in
popf
es
add
and
mov
enter
outs
xchg
ins
loope
cmpps
imul
cmp
jl
clc
nop
clc
repz
mov
cmp
out
add
mov
stos
test
or
mov
lahf
mov
sar
adc
inc
test
out
sub
or
jl
test
push
aas
cwde
call
(bad)
mov
pop
ror
sub
je
lods
xor
jle
mov
lock
or
cli
jl
lods
xor
sub
xor
lahf
iret
push
adc
or
and
add
xchg
xor
jmp
mov
in
jmp
mov
xor
(bad)
push
cmc
adc
jl
movs
test
mov
xor
sub
cmp
xchg
sbb
pop
js
(bad)
imul
cwde
test
(bad)
xchg
dec
jecxz
jns
jne
mov
inc
mov
xchg
inc
add
sub
bound
xor
add
xchg
add
push
add
lock
pop
sub
add
push
(bad)
sbb
adc
jns
add
or
add
and
test
rcr
btr
fld
xor
inc
or
inc
add
cli
inc
xchg
popa
outs
jl
lea
or
mov
dec
or
outs
push
lds
mov
and
pop
pop
push
mov
mov
mov
xchg
or
jmp
xlat
dec
jae
sar
ret
ret
xchg
test
int
addr16
sub
es
jns
sbb
shl
push
js
pop
cdq
dec
push
movs
test
cmp
dec
mov
test
loop
pop
jge
add
sub
add
and
mov
dec
sbb
or
pop
outs
inc
ds
pop
imul
dec
mov
inc
add
jno
lods
dec
push
xchg
adc
push
jmp
leave
and
xchg
xor
bound
into
je
pop
movs
or
je
cmps
lahf
ds
xlat
add
mov
js
inc
add
nop
add
(bad)
aam
lahf
cmp
jl
adc
add
pop
jb
enter
ins
fisttp
add
push
les
cmp
cwde
inc
jl
fbstp
fisttp
xor
push
test
inc
add
arpl
jo
inc
aas
lock
js
call
push
adc
mov
lods
push
(bad)
jle
cwde
inc
aas
mov
jo
inc
add
mov
repnz
adc
cmp
jle
ins
inc
adc
add
sub
inc
(bad)
push
pop
repz
data16
mov
push
xor
and
outs
js
xor
repz
pusha
loopne
adc
int
leave
aam
cwde
push
mov
cs
in
sub
inc
mov
jl
xor
pop
push
ins
adc
sbb
int
sbb
push
and
movs
mov
pop
push
xchg
adc
push
call
not
fild
push
int3
inc
dec
das
das
push
fdivr
sbb
inc
add
and
mov
mov
dec
sahf
sahf
data16
push
clc
stos
inc
sbb
rol
add
jle
ins
imul
je
ss
jg
pop
add
push
sbb
fsub
sahf
out
and
mov
lahf
neg
mov
loope
hlt
out
aaa
cmp
hlt
rcr
mov
jbe
add
inc
push
add
sub
or
mov
and
add
nop
add
pop
dec
add
in
pop
shr
push
sub
cmp
adc
xchg
popf
fwait
sub
xchg
ds
mov
cld
adc
push
mov
mov
xor
rcr
add
sahf
mov
lock
push
adc
mov
pusha
call
enter
adc
cmp
mov
add
xor
fstp
iret
add
or
add
test
jl
dec
fdiv
and
sub
pop
in
add
repz
out
or
inc
jns
aam
and
push
cld
mov
inc
add
or
or
or
aam
loop
mov
inc
adc
dec
dec
pusha
arpl
xchg
jg
sbb
loopne
pop
jbe
lods
dec
sbb
dec
or
pop
inc
sbb
retf
in
adc
push
sub
ret
adc
aam
push
fcomp
xchg
adc
push
ror
out
lea
push
cwde
jg
xor
push
enter
fadd
fwait
cmp
fsub
sbb
xor
fs
push
leave
and
mov
or
dec
xor
add
cs
icebp
in
fist
pop
ret
addr16
add
sub
xchg
mov
test
gs
cmp
and
mov
fs
adc
dec
or
xor
call
pop
and
test
hlt
xor
in
adc
xor
adc
test
sbb
sbb
mov
das
loopne
mov
mov
mov
mov
adc
xchg
and
mov
fsub
fcomp
adc
pop
adc
es
add
aaa
ret
add
test
jb
sbb
sbb
sbb
xchg
retf
and
pop
icebp
jmp
xchg
daa
sub
xor
test
push
sbb
cmp
mov
sub
test
nop
repnz
or
ins
sbb
mov
aam
es
bound
cmc
outs
lahf
jg
(bad)
nop
xchg
mov
push
call
cdq
cdq
mov
movs
fimul
sti
aaa
xlat
jns
adc
jg
push
sti
adc
and
sbb
adc
mov
sbb
pop
and
sbb
sub
xchg
ss
les
sbb
loopne
jb
pop
mov
or
xor
push
xor
inc
push
leave
(bad)
hlt
inc
push
gs
push
ficomp
dec
push
push
xor
out
test
and
and
imul
call
mov
sbb
in
les
push
or
push
scas
or
pop
call
jge
xor
add
push
jns
jo
test
or
mov
out
dec
repz
inc
lods
fmul
pushf
push
pop
jns
test
icebp
call
cld
mov
popa
imul
call
inc
out
sub
mov
pop
enter
bound
inc
mov
mov
lds
lahf
out
mov
sbb
mov
(bad)
or
icebp
dec
loopne
dec
jne
dec
or
es
dec
dec
sahf
push
call
movs
into
out
sub
dec
lahf
(bad)
(bad)
jl
or
es
out
dec
(bad)
jmp
xchg
cmp
addr16
xor
dec
mov
out
shr
fwait
out
aas
sub
mov
in
int3
cli
xor
(bad)
popa
add
push
in
inc
jbe
repz
enter
rcl
ror
dec
jmp
push
mov
add
dec
adc
mov
dec
rol
cs
and
jb
movs
pop
pop
pusha
mul
mov
cmps
movs
or
cld
dec
call
lock
dec
adc
ins
hlt
xchg
sub
(bad)
mov
fisub
mov
and
pop
cmp
jbe
jnp
add
push
daa
mov
call
jo
dec
xchg
in
xchg
jbe
xlat
ds
sbb
or
fdiv
mov
call
cmp
js
retf
mov
(bad)
cmp
inc
sbb
(bad)
mov
xchg
adc
push
test
clc
and
xchg
lods
mov
pop
nop
pop
test
xchg
pop
jmp
lods
je
pushf
mov
mov
mov
movs
add
test
das
xchg
dec
rcl
lods
dec
xor
dec
mov
jl
adc
xchg
cmps
mov
shr
lock
ins
and
adc
inc
xor
cmps
aam
fsubr
push
ss
push
fist
loopne
cmp
or
pop
call
lock
clc
cmp
aaa
clc
mov
xchg
aaa
arpl
aad
loope
mov
in
cwde
retf
cdq
into
aaa
mov
dec
cdq
(bad)
jo
mov
hlt
jp
fld
jmp
sbb
cli
es
std
jmp
pop
(bad)
pop
call
jg
mov
inc
cmps
or
add
dec
clc
out
das
and
inc
push
push
adc
sbb
iret
add
xchg
das
push
inc
jae
jmp
sub
jmp
(bad)
stc
add
add
push
inc
in
aas
call
xchg
aas
sbb
imul
sbb
dec
inc
jmp
jns
ror
adc
in
hlt
jo
popf
dec
xchg
outs
cmps
jns
jb
lock
adc
xor
and
cmp
in
cwde
out
adc
retf
cmp
xchg
hlt
lock
pop
push
in
pop
dec
pusha
cmps
mov
inc
clc
xor
mov
mov
mov
mov
arpl
xchg
or
push
mov
imul
imul
sbb
ins
ins
call
cmps
and
xchg
ins
inc
shr
add
jle
sbb
inc
dec
add
loope
xchg
dec
xchg
pop
sbb
inc
xchg
dec
int3
xchg
and
in
fcom
sbb
daa
dec
sahf
cmp
xchg
adc
inc
retf
retf
(bad)
xchg
jg
dec
jb
enter
mov
ret
dec
arpl
dec
or
ror
leave
sbb
daa
add
cwde
loope
adc
mov
out
jmp
adc
xchg
lods
cmp
mov
ret
test
adc
mov
dec
daa
lock
rol
pop
std
or
mov
addr16
add
mov
adc
ss
mov
outs
or
adc
sbb
aas
and
or
cs
enter
movs
inc
inc
jo
inc
ror
in
mov
stos
pop
aas
xchg
pop
and
pusha
push
jo
xor
and
nop
and
leave
inc
cwde
mov
mov
pop
and
leave
shl
lock
add
adc
xchg
mov
xor
pusha
mov
mov
and
adc
xchg
pop
and
inc
jo
fiadd
mov
leave
inc
pop
and
ror
pop
and
inc
repnz
xchg
pop
leave
loopne
push
adc
jns
dec
and
or
inc
jb
push
or
or
imul
push
push
int
sbb
push
add
int3
enter
sar
xlat
iret
enter
fcomp
fxch
add
loope
add
in
sbb
mov
call
jns
fnstcw
xor
mov
mov
inc
add
mov
pop
or
push
push
sbb
add
stos
xchg
call
add
adc
xor
mov
jle
cwde
cs
add
or
ins
aas
pop
es
loopne
call
push
lock
pop
jg
or
sahf
out
sahf
sbb
sub
cmp
sahf
out
dec
push
pop
pusha
push
jo
or
cwde
mov
jns
out
enter
jg
jg
ja
out
jg
push
cmp
xor
fs
xchg
shl
in
xchg
fs
mov
test
repnz
jo
sahf
mov
jl
xor
xchg
dec
mov
int3
pop
in
mov
and
movs
cmp
mov
test
pop
add
fisttp
nop
(bad)
scas
pop
lahf
push
add
or
jle
lahf
je
pop
or
or
add
cmp
pusha
adc
outs
div
push
lea
mov
fs
adc
sub
add
add
sub
repz
add
add
push
xchg
jge
fisubr
add
add
add
mov
or
or
iret
imul
xchg
pushf
push
lods
rcr
lock
adc
sahf
out
and
dec
pop
push
js
xchg
test
iret
outs
jo
enter
add
cmp
sub
ins
outs
push
adc
adc
push
inc
cmp
scas
add
add
push
cmp
push
in
ret
rcl
or
pop
(bad)
inc
jg
fst
or
pop
jmp
mov
xchg
lahf
push
inc
add
push
imul
cwde
pop
cmps
das
dec
(bad)
adc
popa
inc
or
cmc
sbb
mov
jmp
push
adc
sub
cld
cmp
add
out
sbb
lods
inc
mov
add
aas
adc
pop
push
lock
mov
scas
push
push
adc
sub
repnz
jns
push
cmp
cmps
retf
pusha
out
push
cmp
test
or
cmp
jnp
cwde
push
add
cmp
add
psubb
cmp
jns
scas
adc
push
cmp
jns
int
dec
add
sbb
out
out
sbb
push
adc
jns
in
cld
or
cmp
repz
iret
repz
sbb
jl
nop
cmp
repz
mov
repz
int3
mov
pop
loopne
add
push
adc
add
push
sbb
xor
cmp
repz
inc
or
cmp
pop
push
add
add
sahf
out
call
jns
out
push
sub
out
sahf
out
cwde
mov
jns
int3
mov
mov
mov
adc
int3
sub
inc
jecxz
iret
repz
pop
(bad)
js
mov
jg
pop
xlat
test
or
fimul
dec
or
setle
dec
add
add
pop
add
pop
repnz
sbb
nop
pop
ror
inc
fld
push
inc
sti
js
ror
in
sbb
adc
pop
ins
add
ret
movs
pop
pop
dec
ja
cmps
and
or
loop
jne
and
adc
or
xchg
push
loop
popa
ja
mov
jge
and
in
out
push
ud0
cli
add
leave
inc
lock
imul
lock
add
std
cmc
out
retf
sub
repnz
stc
mov
cmc
cmc
push
push
cli
jmp
add
repz
mov
mov
push
lock
inc
cwde
clc
mov
sbb
out
add
cmc
and
(bad)
loopne
stc
repz
ss
add
fisubr
add
rep
jle
mov
(bad)
js
cmc
call
mov
cli
add
out
mov
sar
jg
inc
int3
in
into
aas
jg
fidivr
mov
xor
scas
cmp
movs
jmp
je
out
xchg
mov
dec
int
pop
add
xor
jg
pop
(bad)
add
hlt
aaa
int
pop
arpl
int
adc
int
sub
jae
lock
shr
outs
int
movs
pusha
je
iret
aas
push
jmp
(bad)
xchg
pop
movs
jg
dec
push
mov
and
scas
call
inc
adc
lock
inc
aas
push
push
jmp
mov
imul
call
cli
rol
adc
cld
and
jmp
add
jg
cld
mov
jg
nop
out
nop
add
iret
aam
push
mov
cmp
iret
aas
(bad)
fisub
out
add
mov
add
pop
xchg
xchg
push
call
(bad)
cld
out
jg
cwde
sti
cwde
add
data16
add
cmp
jno
adc
repz
aas
fistp
mov
push
imul
fs
out
mov
xor
add
sub
jg
(bad)
cli
call
int
push
shr
scas
out
out
add
loopne
aas
jmp
push
push
push
lods
fsub
add
cli
add
xchg
in
add
dec
push
sub
dec
ror
add
inc
test
sar
push
fldcw
and
mov
xor
jmp
rcr
ds
inc
imul
aas
out
int3
dec
rcr
sbb
into
rol
mov
sahf
mov
add
mov
lahf
call
push
push
nop
sub
jg
inc
repz
aas
pop
add
xchg
add
add
int3
add
pushf
push
mov
mov
(bad)
adc
mov
xchg
into
ror
mov
push
and
xchg
jo
add
mov
aam
dec
jo
mov
cs
out
jg
out
sub
mov
mov
mov
sub
fdivr
mov
xadd
scas
iret
aas
jae
aad
mov
fimul
jnp
out
add
mov
je
mov
rol
repz
hlt
push
push
inc
xor
push
mov
jo
nop
add
cmc
add
pop
pop
sub
(bad)
inc
aas
sbb
imul
(bad)
(bad)
mov
cmp
mov
outs
das
dec
dec
push
fadd
into
(bad)
test
popf
mov
add
push
add
aaa
(bad)
mov
pusha
pop
xchg
daa
xchg
mov
pop
pop
addr16
sahf
lahf
lea
inc
add
(bad)
(bad)
(bad)
jns
cmps
and
out
fiadd
in
add
adc
jns
repz
push
cmp
pusha
jns
out
inc
push
dec
push
fs
iret
jnp
out
jl
mov
pop
adc
iret
repz
xor
ins
js
repz
repz
mov
aam
out
call
sub
out
sahf
inc
push
pop
jo
nop
jge
out
mov
dec
sbb
fadd
jbe
cmp
cmp
mov
stos
mov
and
pop
mov
mov
or
outs
lods
loop
fiadd
pusha
xchg
dec
jnp
es
mov
popf
fild
stos
pop
fscale
in
push
or
nop
pop
sbb
cmp
push
std
inc
repz
repz
push
cli
pusha
stc
iret
repz
je
mov
pushf
idiv
repz
cmc
(bad)
hlt
fdiv
cmp
repz
jns
out
fdiv
and
cmp
dec
in
pop
in
jo
sahf
out
jmp
jmp
jp
inc
rol
(bad)
or
out
cmps
add
leave
push
das
dec
(bad)
or
add
pop
mov
adc
pop
iret
inc
xchg
adc
push
adc
add
add
dec
jno
mov
add
push
cmps
xchg
pop
add
je
pop
xchg
stc
mov
repz
mov
sti
cld
repz
repz
(bad)
inc
add
sti
cmp
test
add
xor
jg
adc
maxps
inc
das
xchg
mov
or
daa
sahf
out
push
cmps
daa
inc
push
push
out
or
mov
out
jne
push
les
repz
mov
ror
aam
xlat
pop
lahf
add
mov
sub
jnp
add
imul
aas
ror
push
popw
test
cmp
fild
scas
(bad)
sbb
dec
shl
and
or
movs
push
or
add
ins
ins
mov
lds
aas
and
lods
(bad)
xchg
sub
xchg
lods
loopne
dec
jg
daa
(bad)
jmp
mov
xor
sbb
add
stc
xchg
cdq
cs
jo
scas
sbb
out
out
popa
or
pop
mov
jo
iret
repz
mov
iret
repz
or
jns
cmps
sbb
cmp
popf
out
sahf
push
(bad)
dec
(bad)
(bad)
jg
iret
add
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
xor
fdivr
jmp
rcl
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
(bad)
push
mov
imul
std
in
leave
mov
add
ins
push
arpl
maxps
(bad)
cli
cmc
or
outs
cwde
imul
call
jb
addr16
add
aam
dec
std
test
movs
cli
test
xor
das
lock
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
(bad)
(bad)
(bad)
(bad)
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
and
or
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
inc
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
call
xor
jle
or
mov
cmp
jecxz
mov
fs
add
hlt
push
imul
fdiv
gs
call
and
repnz
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
gs
jmp
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
mov
pop
cmp
loop
mov
dec
xlat
xchg
fdivr
(bad)
(bad)
mov
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
(bad)
(bad)
push
pop
dec
or
cmp
add
daa
adc
or
and
test
(bad)
(bad)
jmp
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
add
mov
sar
(bad)
(bad)
(bad)
push
mov
call
jmp
fild
push
fdiv
or
test
sbb
xchg
ds
or
or
push
in
jl
daa
scas
add
mov
pop
jge
(bad)
(bad)
inc
lock
add
inc
push
imul
xor
sbb
push
imul
(bad)
push
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
(bad)
(bad)
(bad)
(bad)
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
(bad)
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
mov
or
sub
mov
cmps
call
ret
shl
sbb
(bad)
(bad)
push
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
push
or
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
(bad)
(bad)
jl
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
(bad)
(bad)
cmp
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
pop
std
(bad)
clc
sar
imul
push
js
or
(bad)
(bad)
call
ror
mov
cmp
cmps
not
pusha
ror
imul
push
scas
(bad)
(bad)
(bad)
(bad)
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
dec
xchg
mov
cmps
mov
sar
sub
push
mov
jp
mov
(bad)
(bad)
(bad)
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
sbb
and
ret
push
sub
call
or
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
(bad)
(bad)
(bad)
(bad)
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
sar
(bad)
(bad)
push
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
add
(bad)
cli
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
mov
(bad)
inc
cmps
popa
ja
mov
out
repz
gs
fisubr
inc
(bad)
(bad)
(bad)
inc
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
scas
cli
(bad)
jno
jo
add
hlt
div
sub
xchg
sbb
xor
(bad)
(bad)
jmp
lahf
pop
mov
fisubr
cmp
jns
jae
dec
call
inc
cmp
xlat
(bad)
jmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
adc
push
lea
and
or
hlt
mov
or
xchg
lea
or
das
add
dec
xor
inc
mov
outs
retf
push
pop
mov
mov
aas
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
mov
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
push
call
and
inc
and
inc
out
and
cmp
dec
mov
scas
lods
loop
mov
and
cmps
xor
mov
lods
out
sar
mov
(bad)
(bad)
(bad)
adc
stos
and
leave
jmp
sti
push
jns
das
mov
and
(bad)
(bad)
push
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
(bad)
(bad)
jl
rcl
cmp
mov
js
mov
test
cwde
cmp
test
jmp
leave
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
(bad)
(bad)
(bad)
(bad)
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
jmp
call
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
(bad)
(bad)
jmp
rcl
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
sbb
xchg
out
sub
dec
jo
outs
sbb
cs
jmp
(bad)
sub
loope
fisub
lds
push
call
dec
in
mov
movs
ret
(bad)
(bad)
(bad)
jmp
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
(bad)
(bad)
(bad)
(bad)
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
mov
push
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
dec
(bad)
(bad)
(bad)
call
loopne
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
(bad)
(bad)
dec
sub
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
(bad)
(bad)
(bad)
call
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
(bad)
(bad)
dec
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
push
jne
adc
test
retf
(bad)
(bad)
mov
lock
dec
mov
movs
daa
sub
repnz
(bad)
(bad)
dec
in
and
out
mov
shl
es
xchg
aas
mov
(bad)
dec
(bad)
adc
out
sar
mov
gs
pop
jle
aaa
or
jbe
dec
idiv
push
(bad)
push
lahf
adc
jb
and
push
push
add
test
or
mov
mov
ret
mov
idiv
dec
push
push
dec
add
(bad)
cmp
(bad)
test
or
stc
sbb
xchg
fmul
or
mov
inc
leave
in
push
ja
pop
sub
(bad)
(bad)
call
das
sbb
fild
sbb
repnz
adc
(bad)
(bad)
(bad)
dec
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
(bad)
(bad)
(bad)
(bad)
clc
or
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
jmp
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
jmp
pop
sub
and
mov
and
mov
(bad)
(bad)
(bad)
jmp
pop
fidivr
sub
ds
sbb
sub
call
das
ror
jo
out
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
(bad)
(bad)
(bad)
call
jne
fmul
jg
or
jl
je
jns
push
inc
js
mov
in
cli
mov
cs
fdivrp
cmp
nop
es
xchg
clc
push
loop
in
ja
add
push
or
bound
stos
(bad)
(bad)
(bad)
jmp
popa
push
shr
aam
cmps
gs
fs
imul
dec
pop
mov
(bad)
mov
push
dec
retf
or
xchg
mov
dec
movs
(bad)
(bad)
(bad)
(bad)
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
add
push
xor
mov
mov
(bad)
(bad)
(bad)
dec
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
pop
sub
sbb
sti
jmp
(bad)
(bad)
jmp
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
dec
mov
dec
es
cmpxchg
mov
in
in
loopne
jmp
das
call
mov
stos
jmp
pop
imul
fcom
cld
sahf
(bad)
(bad)
(bad)
jmp
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
(bad)
(bad)
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
(bad)
dec
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
(bad)
(bad)
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fld
dec
push
int3
push
push
ret
xchg
ret
mov
adc
xchg
call
dec
retf
lahf
lds
adc
leave
je
inc
int3
inc
call
jmp
int
rol
iret
sub
fcom
cs
sub
(bad)
(bad)
(bad)
call
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
(bad)
(bad)
jmp
mov
adc
xor
xor
dec
mov
or
(bad)
pop
dec
ret
popf
or
dec
cmps
and
mov
(bad)
(bad)
dec
push
pop
and
push
adc
fadd
arpl
pop
xchg
(bad)
(bad)
jmp
mov
data16
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
(bad)
(bad)
(bad)
call
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
call
jae
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
and
(bad)
jmp
xlat
mov
push
not
xor
fisttp
(bad)
sbb
ficomp
mov
out
mov
outs
clc
dec
stos
out
scas
mov
push
xchg
bound
pop
imul
jmp
dec
or
loopne
outs
add
(bad)
dec
fstp
push
xor
(bad)
(bad)
(bad)
jmp
push
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
(bad)
(bad)
push
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
(bad)
(bad)
(bad)
push
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
(bad)
in
(bad)
inc
rol
cmp
pop
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
fsubr
inc
push
clc
sub
les
and
loop
outs
dec
jg
or
call
ret
(bad)
jge
aad
shl
mov
(bad)
lds
xchg
lahf
mov
jg
daa
sbb
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
(bad)
(bad)
(bad)
push
mul
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
cmp
(bad)
call
test
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetch
or
retf
(bad)
push
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
push
sub
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
es
(bad)
mov
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
cli
icebp
cmps
in
fist
pop
fwait
push
add
jmp
daa
in
mov
dec
leave
xor
inc
arpl
adc
(bad)
(bad)
(bad)
jmp
shl
jns
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
dec
cld
out
cli
inc
add
and
push
cdq
scas
xlat
das
clc
jg
pop
mov
xor
mov
in
pop
shl
push
mov
inc
aad
in
(bad)
(bad)
(bad)
(bad)
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
jg
(bad)
(bad)
cmp
outs
xor
or
xchg
movs
loope
mov
sub
dec
(bad)
(bad)
(bad)
dec
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
inc
push
pop
xchg
idiv
sub
sbb
repnz
and
sbb
clc
(bad)
dec
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
(bad)
(bad)
jmp
mov
xor
mov
stc
(bad)
and
push
mov
cmps
mov
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
(bad)
(bad)
(bad)
(bad)
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
(bad)
(bad)
push
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
(bad)
mov
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
(bad)
(bad)
inc
imul
ss
test
(bad)
cs
mov
call
mov
(bad)
in
push
loope
into
cs
out
add
add
pop
std
pop
(bad)
(bad)
(bad)
(bad)
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
(bad)
push
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
ret
(bad)
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
(bad)
push
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
jmp
ret
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
(bad)
(bad)
(bad)
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
(bad)
(bad)
(bad)
(bad)
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
fs
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
(bad)
(bad)
(bad)
mov
ins
cwde
push
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
(bad)
(bad)
dec
outs
and
dec
imul
in
addr16
cmp
in
dec
add
inc
ror
(bad)
jmp
mov
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
jmp
fnstenv
lods
push
mov
enter
mov
mov
mov
mov
(bad)
(bad)
(bad)
jmp
iret
mov
movs
movaps
mov
or
or
mov
or
and
outs
jl
pop
push
call
shl
mov
sub
nop
add
jno
cwde
shl
mov
jno
test
cmc
or
pop
lahf
mov
xor
leave
les
(bad)
(bad)
(bad)
fbld
or
sbb
or
sub
out
pop
add
push
hlt
sbb
pop
dec
inc
add
add
push
xchg
in
sbb
sar
add
shl
les
mov
(bad)
adc
ja
mov
jl
fstp
mov
jl
sti
aam
xchg
jmp
push
into
mov
outs
push
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
(bad)
(bad)
(bad)
jmp
inc
fisub
rol
jae
add
pop
fisttp
jno
daa
add
mov
or
adc
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
(bad)
(bad)
(bad)
jmp
fxch
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
cmp
call
sub
inc
cmp
(bad)
adc
jmp
or
xchg
cmp
pop
test
push
iret
or
add
daa
jge
sahf
mov
pop
xchg
mov
(bad)
(bad)
push
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
(bad)
(bad)
(bad)
(bad)
jp
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
inc
cld
outs
push
fadd
les
repnz
sar
addr16
mov
fisttp
stos
(bad)
push
sub
scas
or
dec
add
inc
add
fbld
ret
test
fist
push
add
xor
out
inc
imul
outs
sar
(bad)
(bad)
jmp
int3
or
xchg
mov
add
mov
lds
or
sub
xchg
pop
mov
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
pushf
add
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
fcomip
jmp
xchg
ror
repnz
mov
fcmovnu
and
aam
(bad)
(bad)
jmp
inc
push
fiadd
int
mov
ja
sbb
(bad)
(bad)
jg
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
js
or
adc
ret
es
shl
test
ja
scas
(bad)
(bad)
(bad)
call
push
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
(bad)
mov
ret
mov
xor
mov
add
push
ficom
and
addr16
(bad)
call
data16
les
mov
sub
xchg
mov
mov
mov
push
xchg
hlt
sub
sbb
inc
xor
bound
(bad)
(bad)
inc
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
(bad)
(bad)
(bad)
dec
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
(bad)
(bad)
call
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
(bad)
(bad)
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
jg
(bad)
jmp
mov
call
shl
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
(bad)
(bad)
(bad)
jmp
sub
std
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
test
scas
cli
jo
jno
imul
sub
mul
(bad)
call
mov
sti
push
test
jns
mov
cmp
jns
(bad)
call
loopne
call
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
fs
(bad)
mov
mov
hlt
dec
or
xchg
into
pop
int3
or
xlat
xor
cli
bound
(bad)
(bad)
(bad)
call
mov
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
(bad)
(bad)
(bad)
call
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
(bad)
push
imul
and
add
lahf
loop
cmps
int3
call
(bad)
jmp
sub
scas
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
(bad)
(bad)
call
sub
gs
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
jmp
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
dec
pop
mov
test
gs
(bad)
(bad)
mov
test
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
(bad)
(bad)
call
inc
jmp
rcr
inc
adc
out
movs
add
test
(bad)
(bad)
inc
sbb
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
(bad)
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
cs
jmp
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
vandnps
dec
rep
mov
in
test
(bad)
(bad)
(bad)
call
es
scas
mov
(bad)
repz
cmp
call
imul
(bad)
(bad)
(bad)
dec
ds
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
arpl
arpl
ja
cli
xlat
dec
shl
out
stc
add
xlat
fild
sbb
dec
mov
mov
sar
mov
inc
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
(bad)
call
sub
cli
ror
cmp
hlt
pop
mov
cmps
popf
(bad)
(bad)
(bad)
jmp
push
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
shl
in
sub
xchg
mov
xchg
push
mov
repz
inc
gs
hlt
jmp
jne
mov
imul
or
push
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
loopne
ror
(bad)
out
and
loope
or
mov
clc
(bad)
push
mov
inc
out
cmp
ja
fsub
push
jle
hlt
out
add
(bad)
call
aaa
test
mov
adc
xor
dec
push
sbb
test
outs
add
pop
lods
test
push
retf
ret
pop
xchg
dec
mov
dec
push
test
adc
psrlw
(bad)
or
inc
push
dec
stc
fs
or
inc
mov
inc
pop
mov
sbb
lods
sbb
popa
(bad)
(bad)
(bad)
call
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
(bad)
(bad)
jmp
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
scas
cli
push
xor
add
and
in
mov
cmps
daa
aam
es
(bad)
(bad)
jmp
dec
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
(bad)
(bad)
(bad)
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
(bad)
(bad)
(bad)
fdiv
cdq
ja
and
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
(bad)
(bad)
dec
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
xchg
outs
fdiv
outs
cmp
fisub
nop
jmp
ja
pop
push
repz
call
scas
jg
arpl
popa
sub
push
cmps
xlat
aam
fs
(bad)
jmp
add
dec
xlat
retf
and
mov
dec
(bad)
call
inc
fs
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
(bad)
(bad)
(bad)
inc
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
(bad)
(bad)
(bad)
call
add
jne
ds
mov
or
ror
adc
push
mov
cmp
(bad)
(bad)
(bad)
call
push
fistp
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loopne
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
jmp
in
or
cmp
push
in
(bad)
(bad)
(bad)
jmp
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
(bad)
(bad)
(bad)
(bad)
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
inc
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
(bad)
(bad)
(bad)
(bad)
ds
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
jmp
movs
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
clc
(bad)
(bad)
call
inc
dec
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
jmp
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
(bad)
(bad)
inc
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
jecxz
(bad)
mov
lods
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
dec
cld
(bad)
call
mov
pop
mov
mov
cmp
call
mov
or
mov
push
mov
sbb
call
test
cmps
arpl
aad
or
test
mov
into
stos
movs
outs
(bad)
(bad)
(bad)
(bad)
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
(bad)
(bad)
(bad)
inc
clc
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
(bad)
(bad)
dec
mov
mov
mov
punpckldq
xlat
and
adc
test
xchg
pushf
lea
mov
pop
pop
fidivr
mov
gs
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
mov
dec
mov
loopne
xlat
add
mov
fucom
(bad)
(bad)
(bad)
push
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
jmp
dec
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
mov
jae
inc
mov
and
xor
pop
or
addr16
xchg
shr
push
cmp
(bad)
(bad)
(bad)
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
xchg
ja
inc
in
mov
dec
leave
scas
mov
pop
and
sub
sahf
push
dec
jg
outs
call
cld
test
or
rcr
lahf
ror
and
(bad)
call
jg
mov
inc
and
(bad)
xchg
test
call
cmp
xor
(bad)
(bad)
call
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
(bad)
outs
cli
jmp
fistp
ret
imul
ret
ja
imul
ud0
dec
pushf
mov
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
(bad)
(bad)
(bad)
call
push
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
pop
(bad)
(bad)
out
clc
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
push
movs
lock
mov
inc
cs
(bad)
(bad)
(bad)
call
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
(bad)
(bad)
(bad)
jmp
jns
psrad
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
call
jge
inc
clc
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
icebp
inc
cmp
rcr
pop
mov
in
sbb
bound
and
inc
sbb
(bad)
fistp
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmps
jle
(bad)
dec
outs
out
xchg
or
inc
loope
add
sub
scas
cmc
(bad)
(bad)
jg
test
and
mov
mov
sbb
ror
(bad)
cs
add
push
movs
not
cmp
and
dec
imul
(bad)
call
add
out
ror
ret
push
jp
jmp
fnop
(bad)
push
mov
xor
xor
(bad)
and
stc
popa
call
rcr
(bad)
inc
adc
dec
call
xchg
(bad)
loope
xchg
(bad)
(bad)
(bad)
call
fxch
sub
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
(bad)
(bad)
(bad)
jmp
inc
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
jmp
jns
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
(bad)
(bad)
(bad)
(bad)
jmp
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
(bad)
(bad)
push
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
lock
push
ds
ins
add
aam
popa
inc
imul
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
(bad)
(bad)
dec
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
jmp
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
(bad)
(bad)
(bad)
mov
dec
jnp
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
and
dec
jp
mov
push
icebp
cmp
out
cmp
cmp
fadd
ss
bound
push
add
add
xor
and
adc
(bad)
xchg
and
out
arpl
add
and
add
iret
cdq
std
adc
add
add
adc
(bad)
neg
nop
and
dec
in
jb
mov
or
xor
popa
add
ins
or
inc
dec
nop
mov
imul
inc
(bad)
iret
out
popa
jb
sub
cmp
ins
ins
ins
dec
sub
fidiv
lock
xchg
movs
das
cmp
out
mov
or
xchg
jae
adc
pop
push
push
add
xor
shl
push
repz
mov
inc
sti
out
iret
loopne
push
pop
sbb
jle
iret
aas
iret
js
rol
adc
adc
repz
repz
mov
cmp
aas
iret
add
adc
adc
repz
repz
or
cmp
test
test
repz
jmp
pop
push
sbb
add
push
jl
sahf
out
cmp
sahf
pop
(bad)
ins
sub
jns
out
or
dec
clc
add
jns
out
adc
jns
xor
or
movs
jns
out
add
jnp
out
sbb
sahf
out
aam
adc
mov
jns
out
mov
add
push
push
add
add
jbe
out
sahf
out
pcmpgtd
lods
sahf
out
sahf
push
xchg
or
sahf
out
push
pushf
arpl
fdivp
mov
outs
cs
iret
repz
mov
call
cmp
adc
jno
ret
repz
popa
and
leave
repz
loop
sbb
jns
shr
cmp
repz
or
neg
push
pushf
cmp
jne
retf
leave
repz
stos
add
pushf
cmp
pop
sbb
cmp
leave
fisubr
mov
iret
lea
push
adc
xor
arpl
cmp
repz
cmp
leave
out
sbb
repz
imul
pushf
cmp
repz
repz
repnz
ja
into
iret
repz
addr16
scas
pop
xchg
repz
cmp
pop
pop
sahf
out
cmp
jg
fisubr
das
push
cmp
lahf
(bad)
push
dec
(bad)
call
pop
shl
xchg
shl
pop
enter
pop
jb
pop
test
jb
fnstcw
stc
lds
in
leave
test
mov
pop
jb
pop
int
in
and
jb
popf
fstp
jb
std
ret
test
mov
enter
pop
jb
pop
repz
stos
and
jb
jmp
jb
pop
jb
mov
inc
(bad)
cmps
enter
out
xlat
pop
leave
test
iret
and
jb
scas
out
jb
pop
jb
fistp
scas
mov
push
stos
xchg
push
out
add
adc
add
add
ficomp
xchg
stc
int
push
add
adc
sahf
out
inc
add
add
push
sbb
push
popa
pusha
dec
movs
test
xor
or
xlat
and
mov
adc
add
pop
into
add
push
pusha
call
add
fcomp
xor
dec
and
xor
jmp
add
ins
mov
mov
dec
add
and
gs
lods
inc
pop
xchg
ret
call
jb
add
xchg
in
or
cmp
fsubr
inc
test
movs
ins
push
ret
sbb
jns
and
adc
jae
ins
bound
jae
dec
fsubr
add
imul
aas
sub
test
push
popf
or
xchg
rol
jl
repz
mov
mov
mov
xchg
push
call
out
pop
inc
xchg
retf
and
mov
jno
call
adc
adc
and
add
xchg
jb
inc
xlat
lahf
or
and
(bad)
out
and
inc
push
adc
ret
adc
imul
dec
stos
rcl
sahf
imul
jecxz
ret
push
add
sbb
out
sbb
sbb
inc
or
add
mov
fs
pop
stos
sar
pop
mov
add
mov
or
push
pop
jb
jb
or
or
test
or
add
mov
dec
int3
jns
out
sub
ins
in
sbb
jns
out
pop
fdivr
sahf
out
sahf
jl
add
out
and
jns
out
push
shl
mov
out
sahf
jb
or
out
sub
jns
out
pop
fidivr
mov
jp
push
xchg
jns
out
cmps
data16
out
sahf
out
push
(bad)
ss
out
sahf
jbe
push
mov
jns
out
cs
outs
out
push
out
sahf
out
pop
fidivr
mov
jle
add
out
and
jns
out
push
shl
mov
out
sahf
jno
or
out
sub
jns
out
pop
fnstcw
mov
jns
add
sahf
out
and
out
sahf
out
push
aad
mov
out
sahf
jne
or
sahf
out
sub
out
sahf
out
pop
fnstsw
sahf
jge
adc
or
xchg
push
xchg
cmp
repz
push
rcl
xor
cmp
repz
repz
repz
mov
dec
dec
retf
retf
sub
cmp
repz
repz
jmp
sbb
fwait
fwait
cmp
repz
pop
fcmovnu
cmp
cmp
repz
repz
sti
sti
pop
pop
xchg
inc
inc
mov
repz
cmps
cmps
addr16
repz
out
pop
pop
xchg
xchg
cmp
repz
push
xlat
xlat
aaa
repz
repz
mov
ja
iret
repz
div
(bad)
jg
cmp
dec
iret
iret
das
repz
repz
scas
scas
outs
outs
iret
repz
out
out
pop
pop
lahf
lahf
cmp
repz
pop
(bad)
aas
repz
repz
mov
cmc
cmp
(bad)
dec
inc
push
and
adc
jo
jns
out
dec
sub
pop
out
sahf
out
js
inc
and
out
sahf
fs
xor
add
jns
test
jb
arpl
jecxz
push
sahf
out
sahf
or
add
or
jns
out
add
or
push
out
sahf
out
push
push
add
sahf
out
sahf
or
add
sahf
out
add
or
pop
pusha
adc
pop
(bad)
cmps
add
push
daa
or
cmps
jmp
adc
mov
stos
adc
ja
sti
pusha
stos
jo
and
shl
fucomi
jbe
xlat
or
sbb
sub
test
fstp
cmp
iret
cmps
mov
add
add
push
jg
fidiv
adc
adc
add
push
or
mov
add
add
addr16
in
add
or
in
cs
or
cs
mov
movaps
mov
shl
add
pop
jb
daa
sbb
sbb
pop
and
sbb
push
jb
sbb
addr16
mov
pushf
pushf
pushf
je
adc
adc
push
jb
pop
enter
aad
xchg
cli
repz
imul
fucomip
mul
jge
out
je
and
je
add
xchg
or
and
mov
push
aad
sbb
jne
add
or
or
mov
lea
pop
push
pop
ret
out
ror
repz
out
push
test
in
inc
idiv
aam
and
aam
pop
in
sub
int
or
xchg
xchg
imul
add
dec
aaa
and
add
pandn
pop
mov
push
add
xacquire
sub
fs
inc
rcl
jno
fist
mov
or
sbb
(bad)
mov
sahf
pusha
loope
sahf
xlat
je
test
add
sub
fcom
clc
xchg
inc
pop
mov
cmp
stos
cmp
sbb
and
pop
cwde
cmp
push
sahf
sbb
fist
cmps
mov
or
and
inc
pop
std
push
stc
icebp
sub
repz
rol
jns
clc
lock
jmp
shl
or
cmp
add
(bad)
(bad)
inc
xor
bswap
aas
inc
dec
mov
jae
dec
mov
shr
sbb
and
(bad)
(bad)
jmp
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
(bad)
(bad)
dec
cmp
pop
(bad)
aaa
test
dec
mov
ja
call
adc
sub
pop
and
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
(bad)
(bad)
(bad)
jmp
pop
cmps
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
(bad)
(bad)
(bad)
inc
jno
dec
mov
shr
out
push
fisub
loope
shr
bound
pop
mov
popa
xchg
push
lods
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
jg
add
jbe
dec
mov
jne
jmp
sub
(bad)
(bad)
(bad)
jmp
adc
pop
cmps
xchg
push
test
gs
push
mov
(bad)
sbb
push
inc
dec
push
dec
xor
pop
and
jae
outs
outs
neg
xor
sbb
push
bound
mov
inc
sub
adc
push
sbb
push
and
mov
std
data16
or
ss
and
sbb
or
mov
push
sbb
stos
call
ss
popf
fdivr
(bad)
push
aas
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
xchg
(bad)
(bad)
jg
mov
jmp
jnp
push
loope
pop
stos
jb
push
test
add
jno
inc
or
xor
adc
ss
push
bound
sbb
xor
sub
xchg
cmps
adc
push
push
adc
repz
xor
cmp
jl
iret
xor
and
sbb
ja
push
push
and
jns
cmp
xor
es
jns
out
daa
cs
sahf
out
das
aaa
ds
in
loope
adc
adc
test
dec
push
mov
add
aaa
das
or
ja
ds
cmp
pop
outs
daa
pop
mov
scas
push
xchg
aaa
and
pop
inc
cmps
ins
addr16
and
out
xlat
inc
cs
push
in
in
dec
scas
outs
jns
js
cmp
iret
gs
pop
bound
jbe
leave
arpl
adc
das
daa
mov
mov
out
inc
aas
fld
cmp
outs
in
and
pop
add
add
lods
jnp
add
add
push
or
push
add
add
add
xchg
xor
add
add
push
adc
(bad)
(bad)
inc
and
xor
inc
mov
adc
xor
adc
sbb
sbb
js
std
and
sub
cmp
ror
jae
mov
add
(bad)
(bad)
call
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
jne
cmc
jmp
mov
mov
mov
cdq
jb
ja
leave
xchg
xchg
test
retf
gs
and
adc
add
ja
adc
push
pop
popa
jno
sar
out
and
adc
xchg
mov
lock
pop
pusha
and
loope
icebp
imul
inc
rol
inc
adc
add
fdivp
iret
add
dec
add
push
nop
je
inc
add
ja
popf
mov
push
clc
jle
or
inc
(bad)
pusha
push
dec
xor
mov
sub
rcl
mov
sbb
ja
push
cmp
jne
fisttp
out
sub
outs
ss
add
lahf
and
xchg
or
idiv
aam
jle
data16
jns
imul
ds
neg
cmp
push
out
adc
nop
cmps
jo
mov
int3
je
je
outs
add
adc
add
sbb
mov
loopne
imul
es
cmps
loopne
out
int
pop
adc
sbb
jnp
jns
sbb
push
xor
push
xor
mov
sub
push
and
push
dec
ds
push
rcl
push
in
in
ret
push
sar
lock
shl
push
xchg
xor
int3
test
mov
add
out
fidivr
push
movs
ss
hlt
rol
iret
repz
lods
xchg
push
and
call
pushf
dec
call
daa
in
repz
inc
jne
mov
idiv
push
les
sub
stc
sbb
test
call
scas
aam
push
jle
enter
rcr
sar
or
jo
shl
cmp
add
inc
in
jns
push
aas
mov
push
jnp
imul
das
pop
es
inc
pop
and
xor
out
ja
add
push
mov
int
daa
dec
push
clc
sar
out
cmp
int
ins
xor
sbb
loopne
ss
shl
push
int3
lahf
ret
pop
scas
push
out
mov
push
mov
iret
sbb
mov
push
mov
cs
sahf
mov
xchg
sti
sahf
mov
(bad)
js
mov
pop
jl
push
lods
cs
inc
data16
push
loopne
push
out
jns
and
dec
lahf
jmp
add
(bad)
int
iret
js
add
das
lods
repz
cwde
push
fs
mov
mov
or
imul
loopne
push
idiv
push
sub
mov
(bad)
mov
ss
sahf
add
push
cs
stos
neg
and
mov
push
ds
push
sbb
jbe
es
mov
pop
mov
dec
jo
sar
dec
clc
mov
push
dec
out
cmps
push
hlt
mov
mov
test
ss
retf
loop
int3
push
cmp
je
sbb
xor
mov
cmps
push
mov
jns
(bad)
mov
mov
jl
xchg
push
push
adc
int3
inc
mov
iret
loope
xchg
sub
mov
dec
(bad)
hlt
ficom
cs
mov
(bad)
jnp
ss
inc
xor
pusha
mov
ret
sbb
test
push
neg
jnp
scas
les
(bad)
mov
out
mov
cwde
push
js
lahf
call
push
cmp
sub
ins
fidiv
fcom
push
nop
push
fmul
lods
sahf
test
mov
ja
cmp
inc
pop
sahf
loopne
pop
outs
bswap
sbb
sbb
mov
jnp
(bad)
call
mov
imul
lods
(bad)
ss
outs
cmp
fst
mov
push
daa
cs
(bad)
repz
or
sub
(bad)
mov
add
add
or
push
add
push
cmps
or
add
push
xor
xor
adc
push
dec
add
inc
rol
sub
mov
test
push
add
sub
inc
add
or
fadd
dec
mov
inc
pop
pop
add
xlat
and
jbe
es
jnp
mov
sub
inc
add
inc
mov
fild
push
add
inc
push
mov
mov
ss
das
push
mov
adc
push
fidiv
inc
dec
push
inc
cs
scas
aaa
clc
pop
mov
arpl
add
addr16
jnp
outs
aaa
mov
imul
xchg
cs
inc
es
pop
adc
mov
dec
adc
aaa
inc
shl
and
xchg
mov
fcmovb
mov
mov
shl
dec
pop
push
adc
mov
fstp
push
shl
inc
cmps
jnp
loop
push
push
push
outs
adc
fwait
push
ins
inc
push
xchg
cmps
push
in
mov
aas
outs
rcr
push
pop
repnz
adc
cmp
jecxz
jb
push
inc
in
mov
push
mov
and
xor
xchg
sbb
fist
fadd
pop
dec
(bad)
adc
jge
pop
add
rcpps
inc
mov
inc
cmp
xchg
push
push
adc
outs
and
cmps
sbb
jmp
mov
daa
dec
dec
add
push
aaa
pop
mov
adc
dec
fwait
push
retf
cmpps
push
inc
push
rol
push
adc
push
jmp
dec
sahf
inc
bnd
inc
pop
dec
add
mov
stos
jg
or
addr16
ror
pop
xchg
dec
out
inc
add
adc
rol
xor
hlt
push
mov
inc
pop
pop
mov
inc
add
sti
push
addr16
sbb
pusha
inc
sbb
xor
sbb
lock
lods
sbb
or
mov
les
xchg
scas
mov
dec
das
jbe
pop
push
xor
pop
jo
popf
push
pop
mov
pop
dec
pop
das
les
push
and
push
jmp
clc
xor
adc
and
mov
adc
fiadd
mov
mov
sti
sub
sti
dec
dec
xor
pusha
div
mov
and
mov
mov
mov
scas
and
jecxz
fsubr
and
in
pop
rcr
jnp
addr16
rcl
loope
or
inc
in
test
adc
lahf
mov
mov
push
ins
ror
sbb
imul
stos
outs
mov
mov
adc
pop
or
xchg
sbb
mov
sub
daa
(bad)
jns
shl
push
xlat
push
and
jne
sub
sub
mov
out
imul
jne
dec
adc
mov
adc
ins
(bad)
loope
mov
pusha
inc
mov
(bad)
jecxz
mov
lea
cli
ja
in
mov
add
loop
jge
push
mov
clc
xchg
ficomp
dec
arpl
pop
fisubr
not
dec
add
sbb
jne
jnp
push
dec
xchg
push
loop
push
pop
lock
dec
or
push
(bad)
push
sbb
or
jno
rol
addr16
jg
fisubr
jnp
dec
push
push
push
repz
aaa
movs
xlat
dec
dec
rcr
dec
or
stos
xchg
out
stos
dec
fwait
or
dec
jne
add
dec
pop
dec
and
push
ja
scas
pop
and
xor
mov
push
sbb
scas
lods
out
fistp
dec
or
inc
xor
sbb
sub
aaa
shl
and
or
(bad)
adc
adc
invd
xchg
jo
jg
jmp
mov
inc
dec
test
and
and
or
mov
or
add
jg
add
xor
mov
das
sti
or
inc
sldt
rdpmc
or
aas
xor
aas
and
add
ud0
out
add
add
and
sti
add
mov
push
add
daa
dec
adc
xor
ja
fidivr
push
mov
xor
adc
jo
out
add
sub
loopne
out
loopne
out
push
out
setge
pusha
out
out
out
xor
loopne
xor
xor
(bad)
out
add
fs
xor
add
sbb
test
pusha
adc
push
add
lea
jae
stc
dec
mov
stc
gs
gs
push
retf
jle
lods
fsubr
sar
test
cld
outs
aam
outs
sti
int
in
stc
outs
pop
add
fnstenv
aas
dec
jb
cli
scas
jmp
lahf
(bad)
std
xlat
or
add
mov
mov
neg
(bad)
mov
out
jae
std
and
test
in
test
and
in
aas
dec
sti
dec
mov
and
mov
cld
add
push
sbb
mov
dec
fidivr
xchg
jmp
leave
xchg
fwait
aad
fdivrp
sti
pop
xchg
lock
movs
ins
out
pop
or
fwait
cmc
(bad)
call
clc
fcomp
mov
ins
inc
mov
mov
scas
sti
or
movs
shl
add
push
cmp
inc
add
aas
push
aad
and
std
ss
outs
out
and
inc
mov
imul
jmp
cli
dec
mov
gs
scas
pop
mov
out
popf
iret
dec
sbb
idiv
(bad)
cmc
jmp
clc
dec
push
enter
stc
std
loop
(bad)
scas
in
mov
(bad)
(bad)
mov
adc
xor
mov
push
shl
aas
dec
sub
in
xor
add
pop
xchg
(bad)
mov
ds
outs
add
jp
mov
mov
div
or
push
hlt
add
cmp
cld
push
mov
lods
(bad)
(bad)
jl
fistp
xchg
rcr
push
mov
shl
cld
adc
test
sbb
add
adc
add
fcomp
fsubr
div
add
pop
repz
stos
pop
xor
pop
pop
push
jnp
lock
xor
out
fimul
mov
das
gs
iret
ret
adc
ret
mov
(bad)
mov
ins
pop
jmp
pop
mov
inc
add
mov
push
in
xor
fcmovu
pop
pop
push
sar
ror
lds
outs
in
rcr
add
mov
lahf
fist
add
add
mov
and
inc
or
xor
pusha
fs
add
mov
outs
(bad)
fld
add
add
(bad)
add
(bad)
aaa
je
and
int3
into
aam
ins
bound
mov
into
fs
ja
push
pusha
push
and
stos
mov
jl
push
add
sahf
pop
xor
dec
mov
mov
movs
xchg
call
je
mov
in
fnsave
ss
mov
sub
sahf
(bad)
(bad)
xchg
fisubr
data16
push
jle
jle
push
jp
mov
sahf
mov
mov
cs
fnsave
fisub
out
outs
lods
scas
jl
xor
lods
push
xchg
push
pushf
sahf
pop
outs
jbe
jbe
mov
cmp
jbe
fsub
push
mov
in
rcl
mov
rcr
ds
push
movs
cmps
jbe
pushf
inc
xchg
stc
xor
mov
je
dec
push
adc
push
mov
pop
push
(bad)
push
sbb
dec
inc
cmps
out
ins
add
dec
test
in
jmp
jo
cs
aam
ret
cmp
xchg
mov
and
(bad)
outs
cmp
sahf
mov
ss
out
out
sbb
and
push
dec
push
or
add
ss
mov
pop
pushf
call
cmp
fs
and
inc
jbe
mov
jle
pop
pop
ja
je
sbb
stos
je
(bad)
mov
sbb
add
push
jg
jg
pop
add
adc
pop
adc
xor
pop
xor
in
dec
adc
push
cmp
and
cmp
fs
and
add
cmp
bound
or
cmp
es
pop
inc
aas
(bad)
(bad)
jmp
dec
sbb
sub
dec
and
dec
aaa
xor
or
inc
sub
aaa
loopne
xchg
inc
dec
inc
xor
inc
das
push
cmp
jo
dec
fs
das
stc
xchg
dec
add
sbb
push
imul
add
push
pop
push
inc
xchg
push
neg
or
add
lock
scas
popf
movmskps
adc
pop
(bad)
push
add
or
sbb
add
add
xchg
adc
jp
add
(bad)
fcmovne
aas
fistp
pop
(bad)
lock
add
mov
add
pop
xor
fistp
pavgb
sti
sti
add
mov
push
push
sti
lock
push
inc
cdq
push
add
sub
scas
mov
adc
pop
add
xor
or
loopne
mov
add
xor
retf
dec
sbb
mov
sub
outs
out
cmp
je
cmp
fmul
cmp
cmps
mov
sbb
add
inc
and
push
jmp
outs
or
lds
cdq
sub
mov
pop
pop
pop
retf
dec
jle
sbb
push
mov
xchg
xor
lea
cmps
out
icebp
and
loopne
jmp
loope
mov
out
imul
(bad)
cmp
jo
scas
inc
enter
cs
adc
or
push
xchg
inc
inc
stc
xor
out
out
add
pusha
jecxz
loop
mov
in
and
ror
test
and
pop
ret
retf
loopne
adc
jecxz
xor
and
imul
inc
jns
and
cvtps2pd
aas
div
test
and
and
add
add
push
or
shl
mov
xchg
xor
in
ret
call
out
jmp
out
loop
in
shr
outs
lods
cmp
push
adc
mov
pop
call
xor
in
jmp
test
mov
mov
sub
mov
int3
jmp
popf
repz
adc
and
loopne
push
mov
and
fchs
ret
add
and
push
or
shl
sbb
or
gs
rcl
popa
cs
sbb
and
ret
cmc
sbb
push
or
pop
mov
inc
jp
int
pop
adc
icebp
jmp
arpl
in
call
and
mov
popf
in
int
out
movs
push
push
mov
jo
jbe
add
in
int3
test
push
mov
call
pop
scas
xor
loopne
inc
jo
mov
mov
and
mov
xor
push
test
aad
dec
xor
mov
enter
xor
jmp
aas
in
push
mov
out
xor
imul
icebp
loop
loopne
dec
xchg
push
or
mov
xchg
clc
in
push
add
add
addr16
shl
inc
int
fsubr
hlt
mov
jmp
movs
adc
and
cmps
inc
pop
adc
test
pusha
cli
push
int3
(bad)
adc
mov
les
in
add
outs
fcomp
xor
nop
aaa
inc
add
inc
les
and
bound
and
bswap
(bad)
dec
adc
fwait
inc
mov
and
pop
cmps
mov
ins
adc
ror
int
adc
pop
adc
xor
sbb
sbb
inc
xchg
out
lock
cmp
in
das
sbb
inc
pop
jbe
loopne
inc
icebp
pop
movs
in
or
xor
inc
or
push
loopne
and
in
xor
adc
push
inc
lds
mov
push
popa
lock
inc
lea
test
jge
retf
test
je
add
xor
sbb
inc
inc
jmp
adc
(bad)
jmp
(bad)
lds
pop
in
cmp
mov
js
pop
pop
add
or
pop
inc
pop
(bad)
or
pop
inc
push
(bad)
sbb
pop
inc
dec
iret
or
dec
inc
inc
(bad)
mov
xchg
clc
lds
mov
leave
push
daa
movs
xor
add
jne
or
cmp
xchg
shl
addr16
add
test
xor
or
or
xchg
add
push
xchg
in
sbb
cmp
adc
ja
or
add
add
add
or
mov
inc
add
add
add
rol
sbb
test
mov
mov
pop
add
push
inc
stc
repnz
cld
jg
clc
aas
push
retf
jl
jmp
rol
cmp
jnp
add
pop
or
push
aas
(bad)
jg
in
ret
and
add
add
prefetch
or
pop
ror
mov
shl
pusha
push
mov
popa
bound
add
fldcw
push
out
ficomp
cmp
ja
add
loopne
fldcw
or
clc
pop
push
(bad)
aas
mov
into
and
xchg
or
cmps
addr16
lock
fnstcw
xor
push
pop
std
bswap
sub
add
ds
shr
add
jle
rcr
jns
pop
inc
add
jo
pop
(bad)
repnz
iret
rol
inc
iret
pop
and
lock
push
loope
jl
or
push
add
(bad)
outs
movs
(bad)
jg
push
add
stc
jmp
into
aas
push
add
shl
jge
pushf
xchg
adc
retf
daa
add
jnp
ja
add
comiss
dec
push
loopne
out
pop
outs
daa
add
pop
fnstcw
std
clc
lock
aas
inc
imul
add
ins
jmp
not
pop
outs
clc
pop
in
shl
add
loopne
pop
sbb
sub
add
xadd
neg
cs
pop
jg
jbe
mov
add
pop
sbb
in
les
test
cmp
ja
xor
shl
add
addr16
add
cld
pop
cmp
fcom
aaa
pop
cmp
and
lock
cmp
xchg
or
or
jle
ss
int
or
push
sub
inc
add
data16
fild
push
inc
shl
xor
sbb
enter
sbb
lock
ins
ret
mov
jbe
lock
push
sbb
ins
ss
cmp
sbb
or
test
inc
push
loopne
jge
pop
or
xchg
and
sub
dec
push
sbb
test
ret
xchg
sahf
push
mov
cmp
pop
push
ficom
sub
mov
daa
sbb
mov
repz
xor
daa
and
xchg
mov
lahf
and
daa
and
out
push
adc
cmp
clc
dec
push
ficomp
mov
push
fdivr
cmp
daa
xchg
mov
(bad)
sbb
ja
dec
add
or
ja
push
jae
jnp
daa
clc
push
(bad)
cmc
sbb
xchg
inc
inc
test
and
lahf
adc
inc
enter
cmp
inc
and
cmp
xor
and
int3
jl
pop
daa
inc
push
movs
fcomip
lods
mov
cmp
aas
xor
jg
in
mov
dec
sub
clc
xor
in
xchg
aas
jbe
and
push
push
out
pushf
ret
push
int3
pop
cmp
push
and
and
cmp
idiv
in
push
jmp
pop
push
ss
cmp
push
ins
out
fiadd
push
retf
ret
(bad)
xor
mov
(bad)
push
cmpxchg8b
daa
xor
xchg
repz
stos
addr16
mov
add
test
inc
inc
inc
or
mov
aas
mov
push
pop
xor
gs
outs
outs
daa
inc
aad
mov
mov
dec
pop
daa
mov
out
in
sub
xchg
(bad)
sub
add
(bad)
(bad)
clc
test
adc
in
fdiv
or
mov
aas
jl
adc
sbb
xor
inc
arpl
cmc
mov
xor
ds
shl
xor
arpl
add
arpl
add
xchg
rol
inc
mov
jae
push
shr
fs
fwait
daa
paddusb
ficom
es
push
aas
daa
dec
retf
jmp
inc
inc
es
fld1
cmp
arpl
cli
into
xor
in
repz
sub
jecxz
push
and
push
test
add
nop
mov
push
pop
in
inc
xchg
and
imul
push
stos
movs
out
sub
or
iret
xchg
mov
arpl
cmp
xor
xor
cmps
arpl
das
es
bound
inc
in
push
inc
sub
inc
into
ret
xor
sub
mov
push
sub
xchg
sbb
inc
push
rcr
out
push
inc
mov
adc
ja
and
inc
aas
call
popa
pop
adc
sub
jns
xor
fsub
movs
push
mov
xor
xor
dec
xchg
fs
inc
fisub
mov
cmp
lahf
jp
ficom
jmp
not
pop
xchg
in
and
mov
sbb
or
sub
out
push
cmp
sbb
lock
(bad)
xchg
sbb
pop
adc
or
and
push
jmp
ins
imul
popf
and
clc
or
sbb
xchg
es
push
(bad)
daa
dec
xor
fld
mov
dec
daa
dec
daa
dec
into
cdq
jo
daa
clc
dec
or
dec
out
fidivr
cmp
adc
rcr
dec
out
aas
sbb
mov
push
aaa
mov
out
xor
cdq
cdq
js
call
cdq
and
imul
daa
repz
aaa
cmp
mov
(bad)
xor
(bad)
or
push
sahf
pop
push
mov
adc
push
daa
cmp
in
es
daa
shl
or
aas
push
mov
lahf
adc
pop
push
inc
sub
inc
jae
out
inc
cmp
adc
or
test
das
repnz
aaa
fstp
repz
daa
mov
jl
daa
and
cwde
jns
cwde
and
scas
or
jbe
stos
sub
push
fs
ins
jmp
jbe
mov
outs
dec
and
(bad)
push
imul
retf
repz
mov
cmp
repnz
daa
and
test
add
test
mov
xchg
and
pushf
aas
sub
inc
push
aas
fwait
add
mov
add
mov
dec
or
add
cdq
out
pop
scas
xor
cld
push
lock
add
ins
mov
out
or
out
fst
add
mov
pop
or
fild
add
cld
mov
aad
inc
push
push
or
add
inc
add
push
add
cwde
inc
in
add
add
push
jp
xor
std
or
imul
dec
inc
pop
add
inc
push
cmps
and
cld
frstor
(bad)
add
add
ret
adc
inc
add
scas
jns
nop
lahf
inc
add
xor
or
mov
icebp
addr16
sub
xlat
pop
addr16
ds
push
dec
cmp
dec
and
neg
cmp
cmp
sbb
out
mov
(bad)
cmp
cmp
ds
sbb
xor
push
dec
add
xor
push
scas
aas
xor
fidivr
cmp
dec
sub
jecxz
rcr
sub
fisub
sub
push
mov
jbe
sbb
es
or
add
sbb
js
inc
xor
push
push
or
dec
loope
push
cmp
pop
and
stos
aaa
js
push
ds
dec
mov
push
ret
add
scas
push
mov
mov
stos
xchg
cmp
neg
inc
push
inc
or
adc
sbb
push
ds
aas
je
cld
js
dec
adc
inc
add
inc
xchg
push
sti
pop
xor
xor
and
loopne
add
sub
cmp
cmp
mov
add
xor
rol
cmp
push
add
jle
pop
neg
sbb
jge
or
sbb
and
(bad)
aas
pop
imul
jae
inc
xor
ds
xor
fwait
inc
xchg
inc
and
dec
cs
pop
xchg
stos
test
sbb
shr
add
mov
push
and
dec
cmc
xor
(bad)
sub
jbe
mov
lods
out
aas
and
repz
cdq
sub
dec
xor
loopne
pushf
cmp
(bad)
cmp
cmp
mov
inc
shl
loope
lds
mov
stos
(bad)
pop
xor
aas
dec
das
call
add
pop
pop
mov
jae
cmp
pop
xor
inc
dec
idiv
popa
pop
mov
add
stos
pop
sub
jnp
xor
xor
ds
push
imul
arpl
push
je
cmp
idiv
dec
popaw
mov
imul
adc
ins
out
add
and
sub
pop
jb
pop
pop
cmp
adc
addr16
jnp
jnp
cmps
inc
sub
dec
add
jl
jo
or
xor
sub
imul
pop
inc
ds
scas
test
adc
repnz
cmp
addr16
push
dec
dec
sbb
iret
cmp
enter
mov
mov
adc
cmps
mov
inc
mov
dec
xchg
push
lahf
call
mov
or
xor
dec
xor
(bad)
and
mov
inc
mov
inc
sub
pusha
dec
in
or
lds
sub
fldenv
mov
jg
data16
jae
jo
sbb
cs
push
dec
(bad)
cmp
xor
sub
jae
xchg
push
xor
or
addr16
dec
movs
loopne
xchg
jae
ss
fwait
xor
div
je
dec
das
ja
ret
or
inc
xor
xchg
dec
xor
pop
jge
and
out
jle
jo
push
scas
daa
and
xchg
pop
pop
jl
sar
cmp
dec
mov
aaa
jnp
mov
mov
bound
es
dec
jnp
sbb
les
arpl
int
fistp
add
add
add
adc
pusha
icebp
sahf
fist
or
mov
icebp
push
inc
aaa
cmp
jno
cmovnp
loop
inc
cmp
xor
cmp
sbb
xor
stos
adc
faddp
adc
repz
sti
xor
jo
inc
jmp
pop
push
and
lea
xchg
push
push
neg
push
pusha
cmp
data16
aaa
adc
je
sbb
lock
js
ror
gs
cmps
bound
imul
pusha
lods
imul
loopne
outs
ja
inc
ja
sbb
imul
push
ja
adc
dec
cs
inc
ja
inc
lock
xor
bound
pop
inc
lock
xchg
gs
clc
shl
aaa
imul
push
add
jo
js
gs
popa
outs
pop
or
cs
out
mov
jne
daa
lods
mov
and
ins
fwait
dec
mov
jns
ins
xor
adc
jb
gs
dec
sti
pop
imul
mov
retf
xchg
mov
addr16
lds
pusha
test
ds
call
inc
retf
scas
call
js
dec
rep
ja
jo
push
lock
arpl
jne
jo
xchg
psubw
xor
inc
pop
adc
cmp
ss
add
cs
push
jb
xchg
fs
pushw
(bad)
stos
ins
jp
cmp
cwde
call
fld
fiadd
fwait
pop
adc
out
add
cmps
(bad)
push
loope
ficomp
or
scas
add
ds
add
mov
add
cwde
sbb
out
pop
aam
test
in
mov
push
add
dec
cmp
cmp
scas
adc
xlat
dec
pop
fdivr
mov
inc
pop
jae
push
jecxz
and
iret
dec
int3
enter
pop
int3
xor
fisttp
cmp
and
jo
push
xlat
dec
and
push
enter
xchg
lods
inc
sbb
dec
mov
inc
shl
ficomp
xor
lods
sub
cmp
pop
cmps
mov
sar
dec
pop
xor
or
push
cmp
rol
div
rol
not
dec
repz
adc
or
mov
lahf
and
or
pop
movs
nop
or
push
inc
push
scas
sar
push
xor
jb
les
push
into
cmp
aas
sbb
movsx
and
sub
aaa
xchg
mov
cmp
cmp
sub
sbb
inc
xchg
rcl
xchg
popf
out
adc
and
inc
aaa
mov
xchg
repz
(bad)
xlat
or
js
push
pop
repz
mov
out
sub
mov
and
dec
pop
adc
jno
jmp
out
pop
add
adc
pop
xchg
call
cvtps2pd
add
sbb
arpl
xchg
ret
sbb
fisub
out
xor
push
push
jmp
cmp
push
push
mov
cmp
xor
(bad)
cmps
(bad)
stos
(bad)
fsubr
daa
das
out
retf
neg
inc
ret
mov
out
daa
cmp
ret
mov
push
sub
ret
daa
or
xchg
cs
mov
daa
mov
stos
push
(bad)
dec
or
popa
mov
mov
cmp
cs
mov
test
aaa
imul
mov
or
xor
popa
lock
push
in
cmp
inc
mov
hlt
mov
mov
test
push
cmps
xor
mov
outs
mov
dec
push
retf
push
jg
(bad)
push
pop
inc
bound
iret
dec
clc
les
ja
push
inc
ja
sbb
mov
jb
sbb
les
les
out
addr16
pushf
mov
pop
shr
mov
cs
addr16
lods
adc
cli
inc
or
xor
stos
into
sbb
setp
adc
and
or
mov
dec
mov
and
into
and
xchg
mov
adc
jbe
mov
imul
loop
inc
sub
je
pop
xchg
js
ret
or
mov
ins
xor
add
mov
arpl
mov
adc
inc
cmp
mov
shr
sahf
adc
pop
fisubr
cmp
popa
stos
pop
mov
(bad)
loope
push
movlps
inc
movs
and
jb
push
mov
mov
adc
adc
push
lds
je
push
pop
addr16
test
test
mov
je
jb
xchg
adc
sub
lds
inc
aaa
cmp
ja
xor
inc
sbb
stos
and
jo
push
pop
js
jne
jmp
mov
xor
adc
mov
add
jg
or
shl
scas
js
cmp
jns
push
addr16
fs
loopne
mov
mov
stos
das
cmps
xlat
or
call
push
loopne
pop
addr16
sub
int3
gs
out
ja
or
adc
dec
retf
push
dec
pop
add
xor
push
dec
fs
cmp
fist
mov
ins
inc
(bad)
and
aad
sub
adc
mov
sbb
popa
or
or
xor
pop
add
fwait
dec
dec
sbb
in
jb
data16
pop
ss
out
aad
jo
jecxz
inc
and
je
scas
inc
test
cmp
mov
xchg
cdq
popa
stos
jb
shl
xor
sub
iret
jmp
or
xor
out
ds
jg
mov
pop
repnz
stos
call
ins
arpl
bound
js
pop
cmp
add
sbb
inc
repnz
or
xor
add
mov
or
test
mov
xchg
pop
jmp
psrld
int3
add
cmp
cmp
mov
dec
sbb
cs
out
in
sbb
movq
or
into
in
pop
pop
cmp
xlat
push
fcomip
xor
inc
jecxz
mov
mov
xor
push
cmc
xor
imul
sar
sti
jg
or
and
das
popa
xchg
add
xor
add
imul
ror
test
(bad)
mov
jg
add
loopne
fld
jbe
push
push
push
cmp
fwait
out
mov
xchg
push
sbb
ins
jnp
jp
add
dec
sbb
mov
popa
mov
gs
jae
es
outs
fisub
jl
(bad)
gs
jmp
out
popa
(bad)
jmp
inc
stos
aad
sbb
adc
scas
fiadd
or
pusha
cmp
mov
adc
(bad)
cmp
mov
jae
jae
mov
out
inc
clc
pop
repz
cmp
push
pop
or
(bad)
jne
pop
pop
sbb
jo
inc
ss
imul
cmp
jb
push
sahf
xor
and
mov
inc
xchg
cmovns
pop
push
out
inc
mov
cmp
push
or
xor
xchg
mov
outs
jno
fiadd
jmp
cmp
pop
addr16
pop
fsubr
inc
jecxz
inc
sti
adc
or
ins
ja
pop
aaa
inc
adc
or
and
add
loop
jmp
xor
push
push
(bad)
ins
adc
cmps
stos
bound
mov
inc
xor
add
dec
pushf
inc
pop
sti
cs
out
outs
imul
test
aas
xchg
sti
pushf
rcr
xchg
mov
jns
ins
jae
add
popa
das
push
jne
xor
cmp
dec
loopne
cmp
add
sbb
adc
push
pop
add
loop
push
outs
fisubr
arpl
loopne
test
data16
push
sub
mov
movs
arpl
dec
dec
ins
shl
call
out
pcmpgtw
repnz
in
dec
and
cmp
loop
fistp
pop
sbb
jmp
pop
sub
repz
ss
fs
stos
les
push
test
dec
inc
lock
jne
add
lods
mov
jnp
les
and
push
loope
imul
pop
(bad)
cmps
rcl
sbb
add
inc
idiv
add
adc
jecxz
adc
or
adc
or
fwait
imul
jbe
xor
push
bound
mov
pop
jo
inc
push
add
dec
jae
out
push
mov
add
dec
add
ja
dec
inc
fsub
and
push
into
xor
in
loope
outs
sub
out
sub
ins
sub
mov
not
sti
dec
fdivr
pop
mov
adc
imul
ins
jns
ret
pop
das
sub
pop
jno
repnz
mov
adc
inc
sub
xchg
jnp
arpl
jo
push
xchg
out
mov
sbb
xchg
sbb
repz
rol
or
mov
mov
or
sub
mov
dec
add
daa
dec
add
mov
ja
inc
pusha
adc
sahf
inc
adc
push
mov
mov
mov
mov
(bad)
fs
mov
retf
loope
(bad)
dec
push
sbb
outs
xor
ja
pop
push
fisttp
add
(bad)
or
jmp
sub
repz
scas
xor
xor
dec
add
dec
sbb
ds
and
jmp
jmp
dec
outs
push
test
push
loop
rol
(bad)
mov
movs
inc
popa
jns
pop
mov
in
rcl
daa
pop
pop
mov
sub
sti
js
or
inc
bound
pop
scas
out
mov
cs
fiadd
jne
jmp
cs
push
pop
loop
xchg
jbe
adc
call
jnp
or
xchg
cmp
cmp
inc
mov
inc
adc
xor
sub
pushf
aam
iret
push
inc
pop
xlat
jo
dec
pop
and
and
aas
div
rdpmc
jmp
mov
add
aas
fild
mov
xlat
xor
adc
repz
adc
sar
xor
rcl
adc
loope
xlat
add
fisub
push
test
xlat
jo
shr
ja
data16
mov
imul
(bad)
stos
add
sub
pop
mov
fwait
cmp
or
or
dec
mov
dec
lods
sbb
das
xchg
arpl
push
inc
outs
sbb
rol
jae
pop
jno
or
adc
or
loope
mov
dec
xor
xor
imul
cmps
and
adc
push
pop
lods
adc
popa
jnp
fcom
xchg
sub
sub
ja
stos
mov
pop
in
pop
mov
push
(bad)
(bad)
(bad)
pop
stos
(bad)
push
arpl
fcmovnb
arpl
imul
xchg
cmps
in
mov
sub
pop
pop
mov
es
out
dec
cmp
xor
jnp
mov
and
ret
lods
push
arpl
mov
sahf
mov
ja
inc
xor
xor
pop
loopne
dec
int3
ret
push
aas
imul
retf
inc
out
mov
mov
mov
das
push
fwait
adc
push
mov
push
or
out
and
cwde
popa
out
pop
arpl
or
fsub
addr16
test
sub
daa
and
sub
adc
mov
mov
and
mov
rol
mov
jmp
ficom
push
push
push
pusha
dec
fisttp
inc
shr
jae
ins
add
push
inc
ja
je
ins
sbb
cmp
and
je
lods
ffree
cmp
xchg
xchg
xor
rcl
ja
mov
pop
mov
lods
or
push
retf
push
sbb
pop
jns
ret
push
mov
xor
mov
push
adc
pop
push
adc
or
push
ja
and
retf
adc
adc
adc
aam
sbb
xchg
or
lock
sub
ja
push
stos
pusha
push
cmps
xchg
adc
jbe
fist
mov
push
out
mov
jns
pop
leave
dec
adc
jg
rol
aaa
pop
pop
imul
or
pop
imul
inc
je
mov
ss
push
inc
clc
aam
sbb
addr16
(bad)
movs
pop
jns
(bad)
lods
movs
push
(bad)
call
dec
sbb
mov
push
fisubr
jo
out
adc
addr16
sub
imul
loopne
sbb
jno
lods
mov
mov
and
(bad)
div
lahf
jns
shl
or
cmp
and
xor
and
xchg
push
pop
inc
and
dec
int
inc
retf
jae
jecxz
mov
fld
sbb
cmps
pop
pop
mov
inc
jnp
daa
cmp
imul
sbb
sbb
mov
inc
loopne
or
sub
push
jns
fnstsw
call
jb
packsswb
adc
jno
xor
push
sbb
push
dec
push
test
push
mov
out
cmps
sub
push
out
neg
sub
push
xchg
mov
and
arpl
imul
dec
jne
mov
xchg
sub
jmp
test
xlat
sub
mov
daa
pop
mov
ins
inc
sbb
push
sub
dec
outs
adc
arpl
lahf
cli
test
cwde
sbb
mov
add
or
mov
xor
inc
mov
and
mov
push
dec
push
push
aad
push
pop
fwait
add
pop
mov
jne
push
push
outs
fwait
jnp
xlat
fisubr
pop
jp
stos
popa
retf
inc
cwde
mov
jns
dec
loopne
or
mov
add
add
mov
jmp
lahf
jne
outs
iret
jb
sbb
jecxz
add
scas
(bad)
repz
pop
add
ss
add
inc
jnp
test
xor
sbb
int3
pop
xchg
jae
or
adc
outs
or
or
adc
pop
test
lea
pop
sub
out
pop
sbb
or
outs
sbb
push
mov
pop
rol
shr
pop
inc
retf
ins
pop
cmp
dec
jo
inc
mov
sub
mov
inc
push
xor
cmp
pop
fwait
das
mov
push
mov
inc
push
jl
pop
mov
sub
aam
adc
das
xor
push
test
movd
out
inc
outs
sub
and
cmp
mov
ins
iret
push
jp
mov
or
add
in
arpl
in
daa
mov
pop
or
jnp
arpl
xor
daa
pop
popa
or
sub
add
pop
jae
and
arpl
add
aaa
pusha
push
mov
xor
es
push
fild
dec
push
mov
xchg
ret
mov
xchg
imul
shl
adc
inc
das
pop
add
mov
popw
and
out
mov
cs
loop
jmp
push
mov
inc
mov
push
out
xor
xor
jmp
imul
inc
mov
jns
push
push
repz
jbe
pop
cmps
jae
jo
mov
sub
add
stos
test
xchg
jg
outs
inc
inc
cmp
addr16
cmp
add
jnp
jecxz
adc
add
imul
ret
outs
pop
xor
and
frstor
pop
mov
cmp
outs
jnp
rcl
mov
mov
nop
mov
pop
inc
mov
(bad)
arpl
mov
adc
dec
jb
push
xchg
test
sbb
jl
lahf
imul
(bad)
ss
ficom
jg
sbb
mov
mov
arpl
shl
sbb
scas
daa
pop
mov
ja
enter
add
push
adc
push
rol
cmps
xchg
mov
sub
jl
inc
push
cmp
dec
movs
pop
neg
mov
and
ds
sub
and
xchg
xor
sbb
add
sub
adc
ret
and
add
arpl
cmps
ret
retf
inc
test
pop
pop
jmp
xchg
mov
push
fbstp
sbb
jg
sar
mov
ds
push
pop
dec
and
mov
aaa
xchg
movs
inc
pop
mov
mov
cli
fisubr
jns
or
ret
pop
popa
cmps
fs
imul
mov
scas
dec
mov
out
(bad)
inc
cwde
jnp
cmp
jno
or
sub
ss
dec
xor
add
sub
push
jbe
jg
das
sbb
les
dec
xchg
xchg
sub
cmp
cmp
inc
dec
mov
adc
mov
push
js
or
in
(bad)
pop
adc
jnp
add
adc
push
push
dec
sub
(bad)
or
lea
jge
popf
mov
adc
lahf
and
xchg
gs
add
into
retf
gs
mov
push
mov
add
adc
jmp
mov
je
cmp
inc
mov
adc
inc
inc
movs
jbe
add
add
jno
push
xchg
ins
loope
mov
adc
mov
sbb
push
jnp
xor
sub
ja
retf
push
add
xchg
xor
adc
push
or
xchg
mov
sub
lods
ins
(bad)
movups
push
jp
mov
aas
imul
call
jb
add
xchg
cs
pop
and
mov
or
int
call
mov
cmp
inc
ins
or
xchg
outs
imul
jns
jo
add
adc
adc
popa
jbe
and
inc
outs
and
adc
imul
push
jo
mov
or
fdiv
mov
cmps
add
add
push
add
cdq
shl
loopne
pop
repnz
pop
fisttp
loope
fsubr
sub
jo
les
push
ret
or
mov
jo
push
xor
dec
mov
xchg
adc
and
sub
and
arpl
sbb
dec
mov
push
loope
fadd
mov
add
and
test
adc
ins
mov
aas
lahf
or
(bad)
xor
jno
mov
xchg
test
cmp
add
cwde
call
mov
pop
or
xor
and
shr
jp
scas
popa
push
lea
xchg
inc
popa
sbb
xor
mov
outs
in
mov
cld
hlt
pop
mov
ss
scas
dec
xchg
fidiv
test
mov
xchg
and
sbb
add
test
mov
adc
xchg
or
sbb
xchg
std
retf
mov
or
gs
jbe
shl
sar
pop
push
ror
add
jmp
pop
adc
loop
iret
add
lds
loopne
pop
mov
cmp
and
sub
xchg
dec
shl
xor
daa
mov
daa
inc
leave
js
jnp
adc
adc
add
add
pop
and
arpl
pusha
or
jle
adc
or
adc
sbb
popa
inc
add
xor
test
push
add
and
mov
ret
into
pop
fiadd
add
sub
ret
add
adc
or
pop
push
rol
or
dec
or
jg
add
add
mov
push
xor
push
add
pop
or
xchg
and
xor
setnp
sub
int
movs
das
addr16
xor
ja
xor
or
add
push
xchg
nop
mov
popa
jg
mov
or
inc
loop
pop
or
in
push
cmp
push
and
and
imul
cs
jb
mov
xchg
xor
add
sbb
dec
mov
mov
push
mov
cmps
inc
xchg
xchg
div
mov
xchg
or
and
sbb
pop
and
enter
add
rcl
pop
pop
(bad)
pop
pop
or
mov
leave
out
add
fs
push
(bad)
fst
mov
sbb
sbb
mov
sub
(bad)
xor
or
pop
movs
sbb
xchg
jg
ror
inc
pop
popf
or
add
mov
sub
or
pop
test
pop
add
cmps
and
call
les
sub
arpl
inc
das
xor
or
inc
dec
inc
sub
mov
adc
mov
lods
add
fisttp
jge
xlat
jmp
xor
add
adc
mov
daa
jecxz
rol
xchg
cwde
imul
test
call
mov
mov
adc
ror
ror
or
mov
shl
pop
and
add
pop
test
mov
movs
sub
and
ins
adc
lea
push
adc
shl
and
fst
or
cwde
ins
pop
jg
xor
mov
ins
rol
jg
test
pop
mov
pop
jg
div
(bad)
test
hlt
cli
sti
jle
cld
nop
shr
push
xor
jg
hlt
mov
div
(bad)
fidiv
push
mov
push
add
fchs
jg
lock
in
push
je
adc
mov
dec
gs
repnz
inc
es
xor
ret
jge
les
jmp
pop
or
pop
dec
cwde
lods
std
pop
fs
inc
jg
sbb
inc
push
in
push
ja
adc
fsubr
outs
inc
in
std
inc
(bad)
xor
add
xor
push
sbb
mov
pop
push
or
jg
enter
jg
fiadd
mov
xchg
ror
sbb
jmp
leave
mov
hlt
mov
adc
pop
(bad)
(bad)
fadd
jg
into
(bad)
ja
out
aad
(bad)
jle
jg
and
add
pop
add
mov
jl
nop
add
rol
mov
fadd
xlat
add
pop
mov
sbb
add
cmps
add
aas
add
fldcw
pop
xlat
xor
pop
retf
aas
and
adc
shl
and
mov
ss
mov
cmp
mov
and
add
leave
or
push
adc
test
scas
out
je
add
bound
nop
and
nop
pop
adc
adc
inc
jmp
test
stos
cmc
std
popa
or
adc
mov
or
push
add
mov
jl
aas
and
and
sub
mov
dec
loop
mov
jns
cmp
jno
inc
stos
sbb
push
add
add
pop
fwait
inc
sub
push
lds
test
jmp
sahf
shl
sar
sbb
inc
add
inc
push
pop
adc
or
popa
call
sbb
outs
add
mov
adc
fld
test
mov
adc
xchg
ret
shl
inc
push
add
add
pop
mov
mov
iret
or
sar
sub
sub
cwde
lods
ins
jmp
mov
sbb
mov
or
test
xor
inc
call
pop
and
jno
add
lahf
xchg
mov
or
fwait
mov
jb
inc
pop
out
mov
repz
xor
xchg
in
nop
mov
push
in
sbb
jle
or
cmp
mov
mov
shr
mov
ret
mov
pop
gs
add
mov
add
or
aad
push
sub
cmp
add
add
and
add
sbb
mov
pop
adc
or
mov
xor
nop
jne
or
add
in
dec
add
dec
inc
(bad)
in
das
add
ins
dec
add
mov
cs
addr16
je
add
add
nop
shl
icebp
nop
jae
sbb
cmp
sub
adc
bound
call
pop
and
adc
or
pop
xor
into
or
in
push
add
pop
add
mov
mov
iret
pop
xor
adc
add
(bad)
xlat
cmp
repz
jb
add
and
and
inc
mov
(bad)
sti
adc
enter
mov
xor
add
push
inc
sub
or
(bad)
adc
add
and
test
les
dec
add
nop
dec
xchg
xor
mov
dec
add
cs
cmp
les
or
sbb
jmp
mov
stos
shl
xchg
mov
in
cld
mov
rcr
add
enter
mov
lods
jp
jle
cli
cld
jbe
(bad)
jbe
jbe
dec
mov
and
push
shl
(bad)
repnz
call
pop
add
and
repnz
nop
ja
call
cdq
ja
retf
xchg
add
ja
cmps
cld
repnz
cdq
add
add
mov
pop
popa
push
and
dec
jg
popa
mov
arpl
adc
add
sub
push
sub
inc
(bad)
mov
dec
and
xor
paddusw
push
xchg
adc
inc
sbb
adc
test
mov
idiv
push
cdq
pop
mov
cmc
push
jnp
add
jmp
or
mov
in
jne
jo
mov
jne
or
mov
jnp
mov
jnp
mov
pop
push
call
jle
jne
mov
push
mov
push
pop
add
mov
mov
rol
jne
jne
inc
push
mov
jmp
or
mov
inc
call
outs
std
cmp
test
test
jbe
mov
test
add
or
imul
jae
inc
cmps
mov
jae
pop
xchg
inc
or
mov
adc
push
rcl
std
shr
and
push
sub
inc
movs
pop
fdiv
and
jae
add
xor
xor
and
mov
mov
rcr
push
and
add
sbb
or
mov
sbb
or
xor
pop
add
or
cmp
sbb
test
or
add
add
mov
or
sbb
pop
inc
inc
outs
add
sti
fild
pop
out
dec
dec
inc
push
jecxz
inc
pop
ficomp
push
shl
push
push
gs
or
ss
(bad)
outs
imul
js
jmp
pusha
aad
ss
jb
inc
push
pop
jg
gs
gs
inc
in
mov
mov
cli
nop
nop
pop
xchg
xchg
stos
cmp
pop
fild
pop
cdq
sub
xor
out
or
xor
xchg
or
pop
out
sub
sub
mov
adc
call
call
inc
in
(bad)
inc
cmp
jmp
sub
push
push
call
dec
or
add
cmps
jg
fistp
jne
pusha
pusha
call
dec
cmps
addr16
jg
aaa
jmp
call
sbb
push
push
call
mov
outs
jmp
jp
jo
push
cmp
jmp
xchg
xchg
dec
dec
mov
push
inc
inc
popf
sub
fild
mov
out
cs
cli
dec
dec
outs
xor
mov
add
test
and
cdq
jne
push
inc
sub
push
bound
dec
add
mov
sub
or
test
add
shr
adc
mov
or
scas
adc
xor
sub
xor
push
adc
xchg
loope
cwde
popf
xchg
add
fsub
dec
mov
rol
cmp
adc
adc
inc
sbb
or
bound
bound
sti
xchg
sub
add
xchg
add
sub
loopne
and
jmp
pop
inc
rcl
pusha
add
add
dec
cdq
dec
mov
arpl
or
mov
(bad)
fdivr
mov
inc
mov
mov
or
push
pop
or
popa
mov
xlat
jl
and
mov
movs
icebp
stos
or
mov
adc
push
add
add
mov
adc
loopne
or
movs
sbb
mov
xchg
mov
mov
rcl
cmp
mov
lds
add
stos
add
add
sub
mov
pusha
and
inc
add
and
or
pop
sbb
xchg
sbb
test
add
imul
movs
adc
test
or
push
mov
xor
mov
sub
test
jne
mov
add
or
jo
dec
and
dec
imul
and
xchg
addr16
pop
out
adc
or
and
les
ins
sti
push
add
inc
sbb
push
push
or
test
adc
xor
fdivp
and
std
or
and
add
ror
sbb
mov
xchg
add
aad
add
aas
imul
and
jno
xchg
add
jno
xor
jnp
add
xchg
fld
mov
mov
repnz
aas
jmp
fisttp
adc
ins
fsub
aaa
and
cmp
bound
fild
rcl
test
(bad)
sub
and
sub
jnp
add
mov
sub
xor
xor
psraw
mov
add
ins
nop
push
movs
adc
mov
fimul
jmp
push
cmp
mov
and
adc
daa
mov
mov
mov
les
inc
int
push
adc
lods
or
out
jl
inc
mov
pusha
sar
add
pop
xchg
mov
mov
xor
xor
sbb
sub
or
add
add
test
imul
mov
dec
mov
cmps
pusha
aad
imul
adc
sub
cmp
aaa
retf
imul
xor
sbb
dec
cmp
sub
or
mov
loope
add
inc
add
xor
test
fsubp
inc
and
add
add
sub
push
cmp
pop
neg
ins
sub
xchg
add
inc
jmp
les
(bad)
(bad)
adc
or
pusha
test
test
out
pop
add
xor
or
inc
dec
movs
test
test
imul
adc
xchg
adc
pop
ins
ss
pop
out
ret
cmp
mov
mov
ret
add
push
add
imul
pop
and
adc
xchg
pop
pop
adc
fld
dec
pmulhuw
adc
or
adc
cmp
pop
adc
or
mov
bound
xor
xor
dec
cs
push
sub
add
cdq
pop
add
sar
movs
pop
sar
fiadd
arpl
lahf
imul
and
add
and
add
inc
enter
shr
fs
add
and
xchg
adc
sub
loop
push
jne
xchg
cmps
push
push
js
and
pop
pop
ror
mov
stc
pusha
dec
ins
je
adc
xchg
cmps
and
push
sub
popa
xlat
sbb
adc
and
movs
push
inc
xor
sub
adc
adc
std
repnz
xchg
jg
and
dec
cld
push
and
sbb
in
pop
and
pop
xchg
stc
mov
mov
mov
pop
mov
xor
mov
mov
pop
or
arpl
dec
icebp
enter
cmps
add
cs
cmps
adc
ss
jne
(bad)
rol
adc
mov
popf
rol
add
add
xchg
add
cmp
sub
arpl
and
push
lea
or
shr
imul
rol
add
shl
mov
jg
pop
les
push
inc
ret
(bad)
sub
sbb
cmp
retf
jmp
add
and
and
sbb
dec
test
push
push
inc
or
mov
fmul
rcr
js
inc
inc
push
sub
push
int3
push
pop
push
imul
cmp
enter
mov
out
add
dec
retf
inc
cmps
or
or
xor
daa
aad
(bad)
or
movs
add
in
adc
adc
push
dec
fs
aad
test
mov
sldt
add
xor
xor
in
not
push
adc
rcr
pop
iret
sysexit
int
and
out
ins
adc
shl
xchg
adc
xor
imul
add
rcl
sbb
loopne
add
add
arpl
jge
inc
add
stos
scas
adc
adc
or
pop
sub
in
or
mov
or
cmp
popa
pop
xor
or
pmulhuw
sub
add
and
dec
stc
add
and
sbb
pop
add
sbb
jbe
sbb
test
es
test
test
xor
or
or
(bad)
in
push
dec
(bad)
lds
xchg
lea
and
and
cmp
or
push
push
inc
dec
dec
iret
ret
and
pop
rol
inc
inc
mov
xor
les
add
aaa
daa
push
rcl
adc
adc
jb
ins
cmp
mov
rcl
sub
mov
push
dec
ins
pop
mov
jno
inc
inc
dec
adc
and
sub
je
inc
scas
dec
mov
outs
fst
or
sbb
adc
or
fld
mov
ja
fs
(bad)
int
jae
sbb
aaa
or
mov
add
xchg
sbb
bound
mov
push
pop
(bad)
cmp
dec
int3
loope
mov
dec
loope
ficom
push
xchg
pop
push
and
adc
jge
adc
mov
aas
jle
sub
or
xor
pop
rcl
in
pop
and
dec
xor
lds
add
dec
add
mov
test
xchg
adc
cmp
xor
mov
fadd
add
pop
pop
or
fnstcw
and
dec
and
mov
adc
xchg
mov
stos
adc
pusha
movs
and
mov
pop
ror
xchg
sbb
out
loope
ja
aaa
ret
es
shl
in
lods
fidiv
and
cmp
mov
sysexit
sbb
pop
inc
or
push
xchg
ret
push
push
(bad)
les
push
pop
leave
movs
adc
adc
sub
sbb
dec
in
sub
ss
add
sbb
ins
jo
mov
mov
mov
test
mov
lea
adc
sub
sub
ss
les
add
mov
add
mov
inc
shr
inc
popa
loop
or
jmp
mov
mov
pop
mov
inc
xchg
add
adc
les
inc
rep
push
lds
inc
xor
xor
sbb
and
and
loopne
xchg
sub
or
and
mov
lds
inc
pop
mov
xor
mov
xor
ins
lea
punpcklbw
xchg
or
inc
into
dec
or
or
adc
seta
or
shl
add
pop
or
fnstenv
mov
jmp
or
push
or
and
xor
sub
pop
and
push
cmp
mov
sahf
xchg
mov
inc
popa
add
cmp
std
stos
aaa
xchg
or
inc
mov
inc
lock
xor
out
xchg
add
xor
mov
mov
mov
mov
lds
push
fs
add
rcl
xor
push
push
test
and
or
mov
ins
mov
das
mov
or
fs
adc
inc
cmp
xchg
adc
inc
mov
xchg
xlat
mov
pop
xor
iret
aaa
sbb
shl
adc
or
adc
lahf
jne
mov
je
and
push
jo
or
xchg
sbb
shl
mov
dec
inc
jl
and
and
xlat
push
pop
adc
mov
adc
fild
adc
adc
cwde
ins
or
inc
xor
popa
out
ja
cmp
cmps
push
and
xchg
xchg
mov
or
pop
jl
and
dec
sub
fs
sub
push
xlat
loope
mov
and
(bad)
loope
les
sub
daa
out
mov
jl
mov
push
dec
xor
imul
or
shl
xchg
pop
clc
add
or
xor
dec
stos
hlt
mov
or
mov
cdq
xchg
dec
or
and
call
dec
xor
fsub
fild
sub
mov
ss
and
mov
out
lods
sub
jnp
bound
sbb
or
or
pop
and
push
sbb
imul
xchg
push
test
add
or
lods
inc
xor
sub
xor
inc
sbb
xor
xlat
movs
shl
inc
jge
jo
lods
mov
push
or
movs
cmps
rcl
sub
sbb
cdq
sub
xor
mov
les
jo
push
test
data16
sti
es
xor
adc
inc
cwde
inc
bound
lahf
out
sub
test
lods
rol
pusha
sbb
add
sbb
pop
dec
bound
sub
cmp
in
test
dec
call
mov
dec
push
es
pusha
inc
pusha
add
xchg
jo
ss
sbb
test
inc
push
pop
add
sub
pop
adc
dec
sub
and
sub
fadd
(bad)
inc
test
push
stos
adc
dec
mov
cmc
inc
or
xchg
(bad)
jmp
idiv
push
pop
adc
shl
mov
or
jmp
inc
loopne
sub
movs
xor
test
pusha
adc
pop
xchg
inc
add
and
push
pop
test
adc
or
int
pushf
or
push
test
stos
test
outs
jg
mov
jmp
pusha
inc
inc
pop
mul
add
stos
data16
inc
push
stos
and
add
je
pusha
add
and
inc
adc
or
cmp
inc
pop
push
mov
mov
pop
or
pop
(bad)
out
push
lock
adc
(bad)
jmp
inc
sub
adc
jmp
dec
adc
pop
call
mov
mov
and
push
xlat
xlat
adc
sub
fadd
out
pop
ins
inc
rol
xlat
das
or
and
pop
ins
mov
bound
or
inc
inc
sub
dec
or
and
add
mov
inc
sti
dec
mov
xchg
mov
not
mov
mov
inc
nop
jmp
pop
test
das
pop
inc
xor
push
inc
mov
push
jo
xchg
test
inc
pusha
pop
adc
sub
adc
call
bound
lds
push
(bad)
aas
dec
pop
or
push
inc
and
inc
mov
add
push
mov
push
inc
pop
push
cmps
add
adc
or
xor
and
test
test
sub
mov
daa
emms
mov
or
or
adc
push
stos
or
call
push
in
test
inc
inc
xor
mov
ret
das
test
ror
jmp
pop
push
mov
xor
sub
test
inc
stos
mov
(bad)
jg
mov
push
jmp
xchg
add
stos
mov
or
test
call
sub
jg
pop
sub
inc
add
inc
mul
mov
adc
jg
sub
mov
sub
addr16
aam
imul
push
mov
inc
ja
add
sti
shr
adc
pop
jge
dec
pop
les
push
dec
loope
aas
rol
ror
sar
add
sar
pop
xor
pop
jo
xadd
add
xchg
pop
add
push
cld
repnz
out
test
mov
ja
push
mov
xadd
scas
sar
repz
shl
int
mov
or
xrelease
jae
call
pop
add
xchg
jg
jns
jecxz
add
icebp
sldt
push
cmp
stc
retf
clc
add
pop
cld
add
add
inc
add
ret
add
mov
mov
std
push
pop
push
(bad)
dec
ret
sti
ret
aas
(bad)
cld
pop
out
jmp
test
add
ret
clc
iret
pop
ins
fdivr
cld
pop
pop
(bad)
outs
pxor
pop
imul
cmp
pop
mov
mov
js
repz
jmp
or
test
push
xchg
das
imul
mov
not
pop
sar
ret
sti
(bad)
jg
cld
out
mov
retf
mov
cld
lahf
add
jle
(bad)
paddw
cmp
add
adc
pop
adc
test
and
pop
dec
test
push
push
sub
lds
bound
(bad)
sbb
sub
pop
add
bound
mov
call
sbb
stc
nop/reserved
inc
mov
mov
aaa
push
xor
or
or
sub
rcr
cmp
or
jnp
outs
in
les
or
or
or
add
push
adc
jae
or
data16
and
or
mov
add
mov
movlps
cwde
adc
or
xor
cdq
or
pop
inc
sub
push
inc
mov
push
adc
nop
add
or
imul
xchg
mov
fs
mov
fbld
adc
ret
stc
add
xor
and
pop
mov
sbb
xchg
ja
xchg
adc
inc
or
in
out
add
ror
add
or
lods
in
movs
xchg
adc
push
mov
add
out
add
imul
add
mov
ret
mov
and
and
into
push
fmul
shl
push
fs
xlat
lahf
add
dec
and
rcr
test
xor
pushf
sbb
add
adc
and
mov
stc
mov
xor
and
test
test
das
and
sbb
xor
or
adc
dec
fstp
xor
push
and
cs
inc
mov
mov
xor
xor
xor
or
or
lods
rol
in
add
or
inc
or
rcl
adc
ror
and
fadd
pop
leave
or
add
shl
sbb
mov
enter
mov
rol
xchg
xor
inc
outs
pop
in
adc
pop
jbe
add
bound
mov
mov
add
add
call
dec
mov
ret
sub
add
jg
push
mov
mov
and
rol
mov
dec
jno
xchg
mov
dec
add
adc
sub
leave
and
dec
push
xor
ret
inc
sub
sub
rol
add
pop
and
cmp
ins
movs
bound
sub
das
add
dec
dec
js
sub
dec
push
jo
push
xchg
sbb
ds
mov
xchg
ret
ja
mov
pop
inc
bound
movs
pop
sbb
sub
imul
adc
addr16
adc
daa
add
les
cmp
jmp
mov
loop
pop
adc
and
mov
add
test
mov
cmp
add
adc
mov
fild
dec
rcl
inc
cmc
sub
add
add
mov
pop
inc
and
and
jo
xchg
leave
inc
loopne
adc
jmp
sbb
sub
or
push
xchg
push
sub
mov
inc
sub
jno
jle
fs
arpl
inc
adc
rcl
out
adc
or
inc
inc
shl
sub
ins
ins
mov
inc
pop
sbb
push
dec
gs
sub
push
sbb
dec
enter
jae
ret
mov
pop
cs
pop
retf
adc
pusha
add
jmp
inc
dec
pop
sbb
dec
popf
xor
jnp
add
add
jmp
test
pcmpgtb
push
outs
dec
gs
and
pop
movs
sub
sub
popa
fs
imul
jecxz
jmp
adc
imul
sub
int3
and
jle
push
outs
ins
loop
ins
pop
ss
and
jmp
fnsave
out
daa
dec
push
inc
jb
adc
nop
gs
ins
xchg
xor
fsub
cmp
dec
(bad)
pop
cmps
mov
js
pop
push
loopne
or
daa
push
inc
add
arpl
das
(bad)
(bad)
sub
sbb
inc
dec
(bad)
jmp
and
lods
mov
mov
out
addr16
mov
enter
adc
pop
mov
fstp
sbb
imul
ret
movs
lahf
mov
sbb
mov
jne
lahf
mov
and
pop
dec
pop
inc
pop
inc
movs
add
fs
cmp
sbb
adc
lahf
mov
je
mov
sar
cmp
mov
inc
stc
sbb
sub
adc
ret
jg
push
rcr
outs
jne
inc
xchg
ss
sbb
jge
cmp
and
mov
pop
shl
xchg
repz
shl
add
or
adc
xlat
rol
mov
mov
cdq
xchg
jmp
push
and
(bad)
adc
xchg
jecxz
dec
outs
adc
and
(bad)
retf
ss
arpl
add
push
pop
stos
inc
xchg
inc
pop
imul
dec
inc
mov
out
jo
xor
outs
inc
pop
xchg
dec
gs
cmp
lods
out
sub
mov
cmp
adc
loope
and
sbb
clc
call
mov
adc
lea
loope
cld
arpl
add
dec
ret
sbb
enter
sbb
sti
jae
and
adc
xchg
or
pop
and
or
inc
ins
jne
push
xchg
sbb
ffree
sbb
shr
xor
daa
sub
and
inc
push
sbb
pop
out
sub
xor
xchg
jle
outs
xor
lods
xor
pop
repnz
and
das
sbb
adc
int
sub
(bad)
mov
inc
adc
xchg
push
dec
mov
pop
popa
pop
ins
xor
or
lea
mov
sbb
cmc
add
jnp
and
rcl
xchg
add
in
jge
mov
mov
movzx
mov
jp
rol
mov
inc
dec
adc
inc
ins
cmp
dec
fndisi(8087
dec
jb
inc
pop
add
mov
pop
gs
add
imul
xchg
push
dec
push
xor
cmc
outs
xor
test
push
test
and
popa
mov
add
xor
ins
pop
add
fistp
test
dec
out
and
pop
dec
sbb
inc
adc
imul
mov
ror
dec
adc
das
inc
push
mov
test
mov
or
adc
xor
sahf
imul
and
mov
push
and
out
inc
es
call
jp
shl
test
inc
jae
pop
in
mov
je
cmps
xor
dec
push
mov
sub
mov
mov
das
adc
mov
fwait
dec
pop
ret
sti
xchg
fld
pop
cmp
sub
ror
inc
leave
mov
(bad)
sbb
mov
popa
inc
adc
add
sub
mov
or
lods
xchg
sbb
sbb
imul
fnstsw
jp
and
iret
adc
pop
loope
mov
xchg
imul
jmp
inc
push
and
and
and
adc
mov
mov
sbb
dec
data16
push
or
jbe
mov
xor
hlt
pop
pop
inc
mov
inc
sbb
dec
sub
daa
xchg
fwait
shl
sub
outs
jo
ja
cli
mov
sub
dec
dec
ins
scas
mov
lods
adc
push
push
or
mov
inc
inc
mov
enter
dec
and
pop
les
and
inc
dec
push
pop
mov
lea
mov
jne
push
sahf
cmps
dec
ins
les
loopne
pop
pop
(bad)
mov
lods
push
pusha
dec
data16
sub
push
inc
shl
dec
xchg
adc
add
shl
or
dec
out
popf
and
inc
mov
lods
hlt
mov
pop
bound
das
sbb
cmp
sub
out
rcr
push
movs
jge
int3
sub
xchg
pop
ins
adc
mov
ja
cmp
test
add
jo
ror
push
xchg
xor
icebp
pop
push
jo
cmp
nop
fs
adc
sbb
scas
inc
aad
dec
fsubr
outs
imul
adc
pop
das
add
adc
lds
inc
or
xor
xor
pop
push
addr16
cmp
inc
mov
fnstenv
pop
xchg
addr16
or
dec
jae
inc
cmp
das
inc
and
push
or
inc
lods
lods
add
cmps
xchg
pop
adc
ins
pop
pop
and
mov
icebp
add
jbe
out
xor
cmp
bnd
cmp
sbb
outs
jae
sbb
mov
inc
test
adc
icebp
inc
or
(bad)
ins
jne
fmul
sar
jbe
mov
mov
or
(bad)
(bad)
call
es
pop
loop
repnz
cmc
ret
and
enter
mov
adc
gs
cmps
shr
pop
loop
and
outs
shr
push
test
and
jmp
mov
and
icebp
xchg
pushf
fcomp
gs
(bad)
lea
and
lods
loopne
adc
ficom
cmps
sbb
mov
pop
jae
xor
inc
cdq
mov
das
inc
out
div
call
jmp
in
mov
(bad)
adc
cmc
sbb
sbb
aam
add
jbe
(bad)
enter
adc
imul
and
and
adc
mov
sbb
sub
add
adc
inc
mov
inc
mov
arpl
xchg
jge
push
push
cwde
mov
or
int3
inc
pop
inc
and
jmp
sbb
ror
mov
pop
jno
fsub
mov
ds
adc
dec
outs
std
pop
dec
movs
adc
lea
inc
xchg
(bad)
aaa
sbb
add
push
in
cs
jmp
mov
adc
mov
add
loopne
fisub
add
cmp
or
inc
sbb
shl
mov
daa
mov
ret
loope
stos
sub
sub
and
pusha
adc
scas
and
adc
adc
test
popa
enter
std
ja
and
inc
or
cmp
mov
adc
sbb
movs
leave
dec
inc
jae
lods
inc
or
jae
mov
cs
xchg
int
cdq
jno
mov
es
fwait
inc
lods
ins
xor
mov
sbb
in
push
push
jnp
outs
dec
pop
pop
push
arpl
ja
adc
jnp
cwde
xlat
test
dec
push
mov
les
mov
jne
pop
push
jmp
xor
and
mov
push
fs
jae
bound
rcl
push
jns
push
fist
fist
add
imul
sub
data16
sbb
and
sbb
in
sbb
pop
and
add
ins
in
mov
add
push
loope
inc
test
jmp
xchg
or
unpckhps
(bad)
xchg
jp
and
shl
sub
clc
aaa
inc
adc
push
sub
pop
aaa
push
jo
mov
shl
inc
fs
dec
add
lods
arpl
rol
scas
xor
mov
mov
shr
data16
fmul
push
gs
adc
adc
pop
jmp
cmp
mov
dec
das
pushf
push
lock
xchg
imul
mov
xchg
xor
movs
add
push
xchg
pop
cmovno
movs
dec
aaa
push
(bad)
aas
in
inc
add
dec
add
add
pop
inc
sub
sbb
add
add
nop
nop
shl
xchg
rol
add
fisubr
dec
adc
add
inc
movups
push
ins
mov
sub
xchg
jmp
and
add
out
push
add
into
fdiv
jno
add
je
sub
repz
and
push
add
mov
pusha
imul
outs
dec
inc
test
pop
jb
xchg
add
jg
shr
mov
cmp
nop
enter
outs
dec
add
stc
movs
in
aaa
ror
lahf
je
mov
mov
lahf
jb
dec
ficomp
sbb
add
aam
gs
mov
mov
addr16
push
lds
adc
in
push
or
jg
sub
add
push
xchg
and
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
dec
push
add
