mov
add
les
sbb
push
dec
push
fs
and
xchg
jae
mov
add
(bad)
iret
out
jae
cmp
out
mov
js
outs
lahf
fwait
repz
cli
test
cmps
add
add
add
or
les
push
clc
or
enter
out
out
add
inc
and
aaa
pop
js
addr16
repz
and
inc
nop
push
inc
movs
push
inc
sub
idiv
mov
call
push
push
pop
or
stc
stc
data16
mov
enter
and
dec
mov
out
mov
les
inc
js
cwde
push
or
jbe
mov
pop
adc
imul
xor
mov
(bad)
fld
shl
jns
cmp
iretw
or
push
or
and
je
je
fadd
cmp
movs
cmp
and
pop
or
fdiv
inc
ds
out
or
nop
xchg
xor
pusha
imul
push
loopne
xor
sar
push
push
sbb
jmp
ficom
inc
mov
jg
xchg
mov
add
jbe
ret
cs
out
mov
inc
fcom
add
pop
add
xchg
das
mov
xchg
loop
pushf
mov
idiv
adc
lods
lds
(bad)
dec
addr16
mov
(bad)
adc
push
inc
or
mov
pusha
js
and
je
mov
mov
inc
cmps
mov
shl
push
inc
rol
fs
lock
adc
jae
mov
add
fs
mov
push
fs
add
jo
fs
clc
push
out
enter
cmp
and
iret
xchg
int3
rcr
and
adc
(bad)
dec
dec
scas
xchg
push
pop
mov
(bad)
and
push
pop
push
cwde
mov
inc
cmc
cmp
and
sub
sbb
pop
fadd
cmp
mov
mov
jns
mov
fcom
retf
(bad)
fistp
add
adc
cmp
sub
dec
dec
nop
jmp
mov
outs
fisttp
shl
mov
add
dec
into
mov
or
popa
neg
jnp
and
cld
xor
xchg
pusha
pop
push
fistp
jmp
xchg
lods
xor
mov
jle
std
push
ret
pusha
mov
push
push
mov
je
cmp
add
mov
jl
push
push
jle
sti
imul
push
or
jne
std
push
push
push
push
(bad)
cmp
push
pop
lods
sbb
out
sti
push
adc
xor
cld
ret
loope
out
scas
sbb
mov
dec
jnp
pop
cmp
adc
push
mov
mov
mov
ret
nop
mov
add
jle
pop
call
add
test
(bad)
out
jnp
push
(bad)
dec
push
inc
nop
push
mov
mov
mov
cmp
fistp
sti
adc
add
or
or
adc
xlat
mov
sub
mov
into
xor
es
pusha
cmp
lock
cmp
js
push
mov
loopne
sbb
adc
mov
xor
jg
mov
add
push
push
mov
dec
ds
cmp
adc
ror
(bad)
and
pop
cmp
ret
xchg
adc
test
idiv
fnstcw
push
mov
inc
pop
pop
sbb
push
fcmovnu
ret
jmp
clc
mov
add
outs
add
push
(bad)
xor
fist
dec
jno
mov
mov
pop
loopne
ds
mov
and
mov
cdq
cmp
cmp
call
add
in
dec
call
or
cmp
mov
adc
fsub
mov
pop
je
rcr
add
cmp
mov
in
push
clc
xor
push
jmp
cmp
adc
dec
sub
div
cmp
inc
adc
sar
or
inc
mov
add
(bad)
loopne
mov
sub
or
leave
sti
pop
in
cld
sub
adc
adc
mov
aas
int3
lea
jge
fisttp
nop
or
add
xor
adc
add
sbb
pop
add
jae
je
ins
jae
cmp
arpl
adc
jo
mov
ss
add
xchg
add
cli
ror
fmul
test
jle
inc
icebp
std
xor
push
inc
xor
inc
adc
or
add
adc
out
mov
adc
add
add
push
mov
nop
sbb
mov
mov
movs
fdivr
add
mul
loope
dec
push
and
daa
inc
es
add
dec
cld
adc
ins
add
cld
dec
dec
fimul
ins
or
(bad)
pop
fild
jae
push
je
imul
nop
add
fcom
inc
inc
xlat
jae
mov
mov
xlat
add
cmp
inc
test
inc
hlt
and
xchg
dec
and
sub
jns
cs
or
jle
fsub
mov
sar
lock
inc
dec
cmp
test
bound
arpl
nop
jae
lds
stos
and
add
loopne
ds
mov
mov
jae
or
inc
push
push
fst
dec
fsubr
jns
push
repnz
xlat
scas
sbb
and
in
jns
(bad)
fsub
jns
outs
jb
cs
cmp
sar
shl
pop
lea
mov
fimul
(bad)
sbb
mov
mov
in
add
push
push
clc
lock
call
push
in
(bad)
and
lock
push
cld
inc
push
outs
or
aam
xchg
push
shl
inc
lock
(bad)
adc
xor
mov
bt
pusha
sbb
or
shl
in
pop
pop
xchg
add
mov
movs
stc
(bad)
mov
push
dec
pop
adc
mov
push
jge
or
add
mov
fdiv
jmp
mov
js
mov
ret
mov
ds
cmp
mov
lea
in
mov
lea
xor
lahf
pushf
push
add
push
adc
and
aas
jo
xchg
mov
jg
icebp
nop
mov
je
data16
mov
into
dec
jg
hlt
cmp
fs
push
push
mov
in
loope
test
fisttp
fstp
mov
add
(bad)
pop
pop
fdiv
and
mov
mul
jg
push
clc
jne
cdq
(bad)
cmp
push
add
sbb
xchg
mov
lock
out
cwde
mov
or
xor
outs
adc
inc
or
and
ins
and
adc
jbe
or
push
mov
xchg
mov
ret
push
fdiv
push
jns
pusha
cli
inc
dec
aam
mov
cwde
mov
mov
mov
or
stc
add
xchg
push
and
fdivr
and
rol
test
rcr
cdq
mov
mov
dec
mov
les
mov
and
inc
test
lds
loope
mov
adc
and
push
xchg
cli
and
jmp
stos
ficom
push
inc
ja
call
or
push
adc
loopne
jecxz
and
xor
movs
mov
add
jmp
push
add
clc
push
inc
xchg
push
daa
fmul
sbb
test
imul
daa
adc
ins
or
loop
lea
add
lock
jo
or
inc
cmp
or
cmp
add
xchg
xchg
test
add
jns
jb
add
xor
fistp
rol
xlat
adc
xor
xor
mov
rol
cmp
add
aas
adc
adc
lock
aam
mov
xchg
das
sbb
adc
push
push
cld
ins
hlt
cmp
adc
cmp
daa
test
pop
in
js
(bad)
fcom
sbb
addr16
and
pop
or
out
cmp
das
aam
aam
ret
sysenter
pop
not
or
mov
(bad)
jae
(bad)
in
int3
push
into
dec
or
dec
lods
adc
clc
xchg
adc
cmp
jne
pushf
int3
jge
jge
ja
sub
push
das
sbb
adc
cmp
sbb
mov
scas
movs
in
mov
jbe
cmp
jb
test
aam
or
cmp
or
ror
popf
cmp
push
sbb
ins
jmp
das
fs
adc
pop
push
ror
popa
outs
fcmovnbe
push
lahf
aaa
adc
(bad)
mov
mov
cmp
jecxz
fsubr
sbb
or
iret
cld
pop
or
push
inc
add
sub
inc
out
(bad)
mov
pop
das
mov
jae
movs
ret
xchg
add
inc
cwde
lock
sub
pop
adc
pop
jmp
xor
(bad)
enter
xchg
cmp
fcom
fs
loope
in
je
loope
fmul
pushf
lock
cmp
push
in
adc
xchg
adc
inc
or
add
(bad)
dec
jbe
pop
es
mov
call
mov
cmp
or
xchg
push
shr
xor
adc
arpl
loopne
js
cmp
push
arpl
inc
adc
aaa
and
xor
or
inc
popa
jecxz
jg
mov
mov
adc
adc
mov
ins
fild
xchg
aaa
or
test
or
inc
(bad)
cli
push
int3
push
xor
mov
(bad)
fld
mov
adc
cmps
or
mov
rep
in
pop
aam
or
jne
inc
addr16
in
mov
jns
jge
add
sbb
sbb
mov
jns
out
mov
adc
and
ss
add
cmp
mov
xor
mov
push
inc
or
sbb
or
inc
or
cwde
div
add
inc
jo
cmp
fdiv
sar
add
pop
push
lock
push
and
aaa
xor
pop
or
sub
fnstcw
add
outs
and
out
unpcklps
inc
aad
js
push
xor
adc
and
mov
shl
enter
repnz
lock
push
loopne
add
add
xchg
or
jo
outs
inc
imul
push
jbe
and
inc
add
sub
xor
ret
jg
popa
jmp
inc
and
jg
inc
outs
arpl
jae
inc
adc
push
inc
popf
inc
les
or
inc
jne
outs
push
gs
imul
cmovo
jns
cmp
jne
imul
sti
in
in
and
add
arpl
je
push
mov
mov
jae
jb
test
fisttp
fadd
dec
add
push
dec
adc
jo
sbb
imul
mov
mov
stc
test
adc
inc
and
mov
pop
or
adc
xor
jg
dec
outs
fs
jae
mov
repz
fs
pushf
mov
mov
mov
inc
mov
push
test
fnstcw
pop
sbb
add
shr
ds
sub
pop
add
dec
add
pop
rcr
push
pop
sbb
js
popa
ins
jne
inc
and
sbb
pop
xor
outs
inc
push
pop
in
in
rol
popa
jb
push
movaps
mov
sbb
dec
pop
sbb
mov
xor
mov
mov
call
push
dec
push
mov
fs
test
cmp
pop
pop
push
outs
jo
jo
jne
push
mov
inc
jo
rcr
gs
fs
outs
ins
jns
movs
imul
mov
rol
lods
mov
pop
scas
adc
push
pop
dec
and
or
jb
add
or
(bad)
xor
and
push
adc
ret
pop
rcl
cdq
inc
inc
daa
mov
das
add
push
imul
bswap
nop
push
pop
sbb
inc
push
popa
outs
addr16
and
sbb
cdq
cmp
fsubrp
and
arpl
sub
mov
push
pop
es
inc
inc
retf
dec
hlt
out
or
dec
daa
call
cmp
dec
lock
dec
sub
das
xchg
sub
(bad)
aam
dec
sub
cmps
mov
aam
rol
mov
inc
je
inc
enter
cmp
sub
push
js
inc
xor
clc
xor
gs
inc
jo
mov
loopne
pop
sar
into
sub
jae
call
dec
call
mov
adc
pop
in
das
xlat
inc
dec
repz
fcomp
xor
loope
or
or
add
push
ins
xor
adc
fnstsw
int3
adc
push
xchg
cmovg
je
nop
cld
push
adc
adc
ror
and
jmp
shr
cmp
sbb
jmp
cmps
std
pop
push
inc
xor
push
jmp
sbb
mov
jmp
adc
jmp
cwde
jmp
addr16
mov
pop
(bad)
cmp
aas
jp
add
inc
jne
icebp
outs
mov
shl
ins
pop
inc
ret
in
lahf
push
mov
inc
pop
jo
(bad)
push
add
pop
sti
outs
mov
jmp
push
sbb
jmp
sbb
rol
sti
loopne
inc
cmp
test
jo
or
or
xor
adc
add
push
pushf
jmp
je
(bad)
daa
or
outs
arpl
sbb
jmp
rcl
sbb
mov
push
inc
nop
dec
cmps
xchg
pop
sbb
push
cmp
inc
push
sbb
sbb
sbb
bound
sbb
cmps
or
mov
enter
sbb
push
or
pop
or
fsub
outs
fiadd
cmp
xchg
and
and
imul
xchg
and
popf
xchg
nop
nop
and
and
sbb
cmc
mov
paddusw
mov
and
jg
sub
xor
add
jb
push
push
test
cwde
pushf
mov
js
enter
adc
ins
and
loope
mov
fnstcw
call
pop
xor
in
mov
imul
popa
ins
dec
frstor
or
inc
outs
mov
ins
sub
je
push
popa
push
shr
loop
aas
inc
outs
lahf
xchg
add
add
je
jp
out
add
aaa
adc
push
add
outs
jnp
fbld
add
add
cmp
fidiv
inc
je
adc
scas
dec
sti
test
mov
or
sbb
xor
lock
dec
fmul
or
pusha
ins
popa
je
mov
les
fsubr
je
fsub
or
aaa
outs
mov
adc
aas
add
pop
ins
and
outs
das
arpl
pop
in
icebp
add
sub
fs
adc
xor
arpl
xlat
adc
test
jne
lea
cmp
test
sbb
inc
fldcw
pop
setge
xlat
sub
add
(bad)
js
pop
sbb
scas
addr16
push
xor
add
or
sub
sub
aas
add
fisubr
cmp
add
pop
push
push
imul
ror
imul
(bad)
pop
cmp
push
scas
mov
mov
pop
jo
rcr
xor
mov
nop
sub
push
pop
enter
sar
iret
inc
mov
int3
ins
inc
call
dec
movs
push
mov
test
xor
fwait
mov
aaa
(bad)
js
mov
fsub
dec
outs
add
loop
pop
pop
scas
popa
inc
or
mov
push
inc
xchg
mov
push
lea
movs
cmp
pop
sbb
add
mov
in
cmp
mov
pop
(bad)
pusha
push
arpl
ins
in
push
pop
add
mov
mov
add
test
(bad)
nop
pop
loope
fs
push
inc
gs
jo
dec
add
fcom
aad
cmp
dec
das
jae
push
fsubp
sub
imul
pop
ficom
and
int3
pop
fidivr
int
in
loopne
inc
(bad)
icebp
pop
dec
pop
fs
loopne
movs
repz
popa
imul
pop
cmp
or
imul
inc
sahf
xchg
push
sub
cmp
jg
jo
mov
call
adc
(bad)
pop
pop
test
cld
test
stos
mov
cwde
arpl
add
pop
mov
loop
dec
xchg
iret
cld
stos
mov
cmp
fiadd
jl
out
add
mov
ficomp
jmp
cmp
or
add
in
cmp
dec
mov
ror
popa
addr16
adc
loope
pop
add
lock
inc
das
ins
popa
jae
pop
mov
ins
jo
shl
mov
xchg
(bad)
shl
cmp
push
fstp
mov
js
cmp
cmps
sbb
sub
jg
and
add
add
sub
ficom
adc
xor
enter
jl
mov
xor
test
mov
ret
dec
repz
push
push
pushf
pop
nop
mov
pop
add
add
xchg
lock
popf
jo
(bad)
adc
cmp
repz
sub
push
xor
mov
add
mov
add
mov
fmul
fistp
ror
adc
clc
or
mov
inc
sahf
retf
ins
iret
pop
dec
or
cld
in
push
lea
push
aam
shl
add
and
or
dec
iret
xor
rol
dec
sbb
pop
xor
dec
dec
ror
adc
jle
mov
inc
sub
fsubr
xchg
das
arpl
jnp
add
push
xor
nop
push
add
ja
sub
mov
daa
or
movaps
mov
inc
jg
adc
xchg
pop
push
push
dec
mov
aad
ins
test
ret
mov
inc
xor
dec
ss
cld
or
dec
retf
jl
adc
lods
cmp
xor
add
inc
retf
ret
clc
dec
clc
and
or
xchg
daa
loop
cld
lahf
in
xchg
loop
inc
jle
or
push
imul
cmp
and
fisub
not
mov
call
ja
imul
jp
stos
inc
pop
add
mov
inc
loope
sub
xor
sub
adc
add
pop
lock
jge
adc
add
clc
(bad)
or
inc
clc
(bad)
mov
inc
dec
fdivrp
fstp
fldcw
inc
sahf
std
stos
fmul
sub
mov
dec
fadd
mov
or
or
icebp
test
mov
dec
iret
cmp
fisttp
mov
dec
clc
repnz
mov
adc
retf
inc
or
ficom
inc
sahf
push
out
adc
dec
lock
pop
push
push
sbb
push
push
mov
sbb
or
icebp
xchg
push
es
dec
mov
pusha
mov
(bad)
push
in
mov
or
xor
dec
mov
cmp
fdivr
sub
in
pop
or
call
xchg
cwde
pop
movs
enter
in
dec
xor
adc
mov
clc
clc
cmp
and
hlt
hlt
pop
jns
movs
dec
inc
into
mov
sub
lock
inc
inc
mov
retf
shl
pop
jle
sbb
jmp
push
in
cmp
inc
loope
adc
or
fs
jp
(bad)
jb
jg
sbb
(bad)
xchg
xor
inc
(bad)
in
xchg
jb
sbb
push
ret
xchg
jmp
inc
adc
xlat
mov
dec
add
inc
push
loopne
popa
shl
mov
mul
sbb
les
add
inc
inc
and
inc
or
outs
in
or
lods
push
mov
test
fld
fstp
vmwrite
sbb
cmp
daa
mov
dec
fild
dec
test
mov
pop
fild
ins
leave
mov
or
ret
pop
dec
push
ins
jbe
nop
addr16
sbb
retf
inc
pop
pop
sbb
xor
fisubr
dec
fist
add
or
xchg
pop
movs
xchg
or
sbb
and
add
pop
out
test
push
inc
ficomp
adc
mov
scas
lea
or
xchg
aas
mov
push
and
shr
and
inc
jb
jbe
imul
out
and
pop
push
test
mov
or
or
xchg
not
mov
out
or
or
cmp
jmp
xor
inc
dec
fsub
pop
cmp
cmp
fcomp
enter
push
push
or
out
(bad)
lock
jnp
movs
test
and
das
es
and
inc
sbb
cs
mov
aad
aas
pop
xor
mov
rol
les
cli
dec
loope
pop
ror
(bad)
out
(bad)
mov
sar
mov
aaa
adc
adc
mov
or
fmul
jo
xor
add
add
out
ret
(bad)
mov
or
les
sbb
add
ficom
xchg
cwde
neg
mov
retf
imul
fucomp
scas
mov
(bad)
push
xor
xor
or
inc
jae
sar
inc
and
cmps
add
ja
lock
ins
and
cmp
cmp
lea
inc
push
xchg
mov
jmp
adc
inc
xchg
jae
xchg
sub
dec
sti
inc
pusha
and
dec
sub
pop
test
xor
stos
pusha
test
adc
sub
cwde
in
xchg
arpl
and
dec
pop
outs
mov
push
and
fld
adc
add
fnsave
xchg
push
neg
repz
or
call
pop
xor
fild
nop
mov
in
pop
mov
mov
enter
mov
add
inc
mov
sbb
mov
sbb
dec
aam
fs
fs
rcl
sbb
in
dec
int3
int3
xor
or
push
test
clc
popa
add
outs
loope
adc
mov
nop
or
ja
jo
out
movs
fld
les
fst
fst
mov
sbb
adc
bound
jbe
les
mov
rcl
adc
(bad)
jae
and
add
or
fstp
push
mov
and
mov
nop
dec
adc
(bad)
cld
push
dec
scas
adc
cld
xor
test
dec
inc
pop
fstp
mov
mov
mov
test
ror
test
popa
cld
mov
lahf
and
xchg
sub
xor
xor
test
push
loop
push
out
dec
cmp
pop
cs
push
cmp
mov
test
add
sbb
or
es
pop
(bad)
mov
movs
push
mov
xor
aam
push
dec
xor
inc
pop
xchg
push
inc
popf
sbb
mov
cs
push
(bad)
sub
cmovbe
jbe
addr16
push
mov
loope
and
push
out
push
(bad)
cld
cmp
fsubr
fild
fwait
leave
pop
adc
inc
push
push
ds
pop
mov
add
mov
test
nop
mov
add
push
jmp
sub
jmp
inc
sahf
add
and
pop
xchg
(bad)
mov
mov
rcl
push
jle
lock
movs
movsx
dec
jne
jecxz
cmp
lods
shl
mov
cmps
sub
xor
jns
fwait
mov
mov
push
add
mov
dec
les
and
je
pop
xchg
or
enter
mov
les
push
imul
sbb
lods
pop
out
sub
sbb
cmp
retf
push
(bad)
sbb
push
inc
push
(bad)
rcl
xchg
(bad)
fild
mov
pop
dec
frstor
mov
sub
jge
xor
cdq
sub
loop
mov
push
cmp
sub
push
mov
fs
push
enter
or
enter
pop
in
dec
in
push
add
or
jmp
jbe
mov
xchg
pusha
or
xor
jbe
sub
sub
in
or
daa
pop
sub
sbb
jne
in
add
test
xor
outs
inc
sti
ss
push
ins
inc
push
ss
jmp
adc
xor
jb
jbe
dec
sub
add
fisub
je
push
adc
(bad)
out
xor
jmp
int
pop
xor
test
mov
inc
sar
jns
adc
add
daa
retf
gs
stc
shl
daa
lea
xor
rcl
in
sub
sub
push
aas
jp
icebp
pop
sub
mov
pop
dec
bound
mov
mov
cmp
inc
in
push
inc
or
lahf
adc
or
or
sbb
jmp
jl
(bad)
cmp
cmp
jg
sub
jecxz
inc
jb
adc
sbb
fdiv
ja
outs
call
xchg
and
xchg
push
inc
add
push
mov
ss
xor
push
sbb
dec
shr
sbb
es
jle
add
or
lock
xchg
push
sbb
cmp
jecxz
mov
inc
sub
push
cmp
mov
mov
in
inc
push
fs
mov
lock
stos
add
jno
ins
xor
popf
pop
jb
xchg
les
ret
inc
add
stos
cmp
inc
or
inc
movs
arpl
js
xchg
inc
cli
ret
test
ss
lock
cmp
mov
or
enter
jl
in
add
add
sub
dec
push
int3
lock
movs
xchg
and
adc
ror
ja
mov
push
and
stos
jle
inc
aaa
jp
mov
dec
outs
add
push
dec
xchg
dec
jo
jne
fwait
push
jae
push
push
mov
pop
xlat
push
and
scas
sbb
push
repz
ja
jmp
dec
xor
inc
fisttp
mov
(bad)
lock
xchg
xchg
dec
dec
push
pusha
mov
popf
add
xchg
ret
test
xchg
jno
fcom
iret
xor
dec
mov
pmuludq
aas
sbb
pop
lahf
push
test
add
sbb
jo
adc
sbb
jo
push
pop
test
ficomp
shl
pop
dec
ja
pop
fdiv
mov
push
aas
ins
xor
inc
leave
push
jl
push
xor
and
mov
test
mov
xor
in
add
sub
loopne
dec
in
push
jno
dec
mov
jmp
inc
sbb
or
xchg
mov
scas
hlt
in
int3
popa
inc
test
jne
pop
xchg
ror
push
push
call
and
inc
sub
ja
test
stc
mov
push
xor
test
lods
pop
xchg
arpl
retf
sbb
movs
push
mov
push
addr16
cmp
pop
stos
sbb
test
cld
jmp
xchg
xchg
std
fisttp
jmp
xor
cld
clc
adc
cmp
push
sbb
jl
jnp
xchg
cs
jg
das
inc
das
pop
ret
or
aad
ins
sub
shl
sub
sub
pop
pusha
or
fs
adc
dec
jo
dec
adc
mov
sub
fs
or
lods
sub
sub
or
mov
ss
ror
loope
pusha
aad
dec
adc
dec
adc
and
xor
xchg
inc
outs
adc
dec
mov
and
cwde
xchg
sub
or
pop
push
mov
inc
rcl
xchg
mov
adc
jo
retf
loop
(bad)
int3
mov
aam
shr
inc
xor
pop
pop
cs
sbb
sub
retf
outs
(bad)
ins
cld
add
cmp
aaa
jo
std
jecxz
stos
(bad)
lock
and
jecxz
icebp
jge
push
enter
cmp
push
pop
sub
fdiv
mov
adc
rol
push
mov
push
push
mov
icebp
mov
sub
push
pop
or
xchg
and
cmp
in
jne
mov
test
movs
inc
xor
rcr
dec
sbb
dec
add
xor
jmp
and
push
mov
push
in
push
les
rol
inc
inc
xchg
inc
mov
xor
scas
push
loop
fmul
cmp
(bad)
ins
sti
imul
xchg
dec
push
inc
push
inc
mov
adc
fucomp
fiadd
mov
mov
pop
loopne
inc
xchg
fcom
test
ss
cmps
add
in
ret
or
test
(bad)
mov
std
shl
mov
add
adc
pop
or
pop
mov
push
push
(bad)
aad
push
mov
scas
mov
xchg
lock
enter
ror
leave
(bad)
in
les
test
pop
(bad)
out
mov
push
xor
jae
pop
mov
cmp
lods
imul
inc
adc
sbb
call
dec
dec
das
sbb
mov
cmps
push
jg
push
and
dec
cmp
test
mov
movs
push
mov
out
movs
pop
sub
jge
jg
shl
fistp
inc
adc
test
cs
loopne
and
mov
sbb
pop
aas
jno
popa
xor
les
push
push
sub
pop
push
mov
mov
cmp
mov
mov
enter
loop
mov
push
(bad)
cmps
(bad)
push
xchg
cmps
bound
aaa
(bad)
call
(bad)
arpl
stos
inc
dec
mov
or
hlt
sbb
daa
(bad)
or
scas
sbb
mov
sbb
cmp
xchg
or
xchg
(bad)
sub
jmp
int3
mov
scas
test
jno
push
add
sbb
mov
mov
xor
(bad)
fidivr
xor
mov
(bad)
fadd
mov
pop
js
push
dec
xchg
sub
popa
and
push
xor
cmp
cld
and
xchg
mov
xchg
push
jmp
push
cwde
sbb
cld
popa
pop
cs
cld
push
xor
mov
pop
test
je
and
sbb
int3
int3
mov
int
ror
enter
cld
adc
das
sub
jg
push
push
mov
ss
or
retf
dec
ret
push
mov
clc
add
mul
daa
jmp
push
push
xchg
xchg
push
jne
jne
fist
xchg
call
xchg
pop
push
hlt
(bad)
add
push
mov
idiv
xchg
mov
cli
mov
cmp
je
inc
xchg
fs
dec
sub
retf
arpl
sub
xchg
cld
sub
fbstp
enter
aas
mov
sbb
pop
jne
inc
push
call
packssdw
jb
adc
inc
lods
mov
mov
push
mov
dec
jmp
and
jl
(bad)
(bad)
les
or
dec
movs
adc
shl
dec
and
aam
ins
mov
repnz
mov
add
sbb
mov
adc
xor
and
bound
pop
test
pop
pop
iret
sub
push
lea
int3
dec
aaa
test
add
adc
cmp
cmp
fdivr
cmp
inc
mov
mov
mov
mov
or
inc
cs
out
mov
ret
add
push
and
popf
cmp
jmp
push
xchg
test
inc
imul
int3
out
rcr
mov
sub
pop
enter
dec
(bad)
mov
hlt
dec
xor
or
or
adc
push
inc
or
sbb
rol
mov
aam
or
xor
pusha
pop
pop
aam
mov
int
enter
adc
push
js
fisttp
test
ins
add
je
add
and
popf
push
(bad)
jmp
add
in
push
dec
mov
gs
cs
adc
sbb
push
mov
jno
mov
bound
enter
adc
shr
inc
mov
xchg
sub
xchg
int3
scas
rcl
mov
mov
adc
aam
test
inc
pop
test
sbb
hlt
dec
imul
int3
mov
dec
jae
cs
dec
adc
xor
adc
daa
cmp
aam
add
cld
sub
push
push
jae
xor
imul
mov
lock
sub
fnsave
xchg
cmp
cmp
out
xor
outs
and
mov
push
out
pop
bound
inc
add
aaa
mov
popa
mov
pop
clc
pop
inc
mov
test
mov
push
adc
pop
sbb
clc
adc
(bad)
and
add
xchg
scas
pop
sub
sub
mov
pusha
aad
sti
das
add
xor
imul
dec
or
test
push
enter
hlt
call
fs
ins
or
ror
mov
out
scas
shl
hlt
xlat
pop
pop
dec
rol
sbb
adc
out
imul
pusha
cmps
call
xor
mov
loopne
or
nop
ins
mov
stc
mov
mov
push
fdivr
fsub
and
fsubr
cmp
cmps
scas
in
mov
jl
int
push
mov
sbb
add
pop
xchg
xchg
mov
sbb
or
or
(bad)
ss
lods
add
fs
or
hlt
pop
call
cli
add
or
daa
daa
inc
push
shr
inc
adc
add
xchg
add
dec
jecxz
sbb
punpckhwd
(bad)
jmp
(bad)
mov
add
jle
sbb
or
pusha
pusha
cmp
dec
or
jle
loope
cmp
push
ret
inc
push
push
mov
inc
cmp
arpl
jno
mov
or
arpl
sub
jo
sbb
push
imul
mov
das
les
(bad)
sbb
dec
mov
(bad)
pop
jo
jno
jmp
rcl
mov
test
pusha
lods
int3
or
push
mov
and
cmp
fsub
aaa
mov
(bad)
shr
je
xor
and
mov
les
mov
cmp
lea
push
lods
addr16
push
ja
(bad)
pop
jno
sar
in
jmp
mov
cmp
aam
dec
mov
sahf
in
sbb
enter
aam
mov
mov
pop
cmp
call
push
pop
mov
outs
pop
mov
lods
or
xlat
aad
mov
add
add
xor
not
out
cmp
in
add
enter
fbstp
aam
mov
rcr
xchg
push
and
mov
jbe
sahf
mov
and
xor
or
push
mov
loop
pop
movs
mov
(bad)
retf
gs
(bad)
pop
fwait
xchg
loopne
jge
lods
mov
ss
add
add
push
inc
lds
outs
inc
mov
(bad)
std
imul
jae
test
jl
xchg
fcom
and
add
cmps
push
and
enter
mov
iret
clc
sbb
pop
scas
sbb
mov
sbb
xor
pop
movs
stos
ret
and
pop
out
sbb
sbb
enter
sbb
nop
cs
pushf
jmp
add
sub
jno
mov
arpl
push
add
sub
idiv
add
nop
rcl
(bad)
fdiv
add
arpl
sub
mov
adc
mov
fnsave
pop
inc
aas
fist
xchg
push
add
sbb
and
gs
pop
cmp
sub
lock
cmp
mov
lock
pusha
scas
pop
push
mov
bound
gs
sub
out
push
sub
dec
jmp
jle
sub
dec
test
add
adc
aam
clc
sahf
cmps
cdq
in
hlt
clc
hlt
clc
hlt
add
xchg
adc
cs
sbb
ds
or
sub
xor
cmp
mov
dec
rcr
rcr
pop
mov
outs
add
jne
not
pop
jo
outs
js
lock
jae
pop
pop
xor
mov
xchg
test
mov
ror
outs
inc
pop
out
push
adc
int3
fistp
fisttp
and
push
add
ins
dec
popa
sbb
add
data16
push
pusha
inc
fisubr
and
out
je
mov
inc
jmp
cmc
sbb
mov
inc
mov
ja
dec
push
add
out
cmp
test
sbb
adc
cmp
loopne
daa
ins
and
sbb
sub
enter
sbb
imul
push
add
cmps
or
xchg
jae
add
out
in
pop
mov
inc
mov
int3
int3
or
sbb
popa
jno
sub
(bad)
adc
outs
push
imul
repnz
sub
mov
sbb
cdq
jmp
xor
cmp
jo
jbe
xor
cmp
int3
inc
xor
xchg
sub
jae
ror
add
sbb
mov
add
dec
push
pop
mov
mov
aam
lea
fst
push
fcom
and
inc
xchg
js
pop
adc
and
test
in
sbb
fisub
aas
pop
dec
inc
into
enter
pusha
push
mov
leave
inc
div
add
and
cmp
les
test
adc
adc
and
int3
push
or
sub
retf
enter
adc
mov
inc
sub
gs
sbb
or
push
or
inc
or
rol
iret
in
or
sti
rcr
mov
mov
xlat
bound
dec
xor
xor
and
and
jno
sbb
sub
jno
push
pop
push
jbe
cmps
jns
dec
add
inc
inc
add
push
mov
call
or
cld
inc
jmp
jne
or
outs
jb
les
bound
mov
adc
popf
push
cmp
jbe
in
fisub
mov
xlat
ds
sti
dec
and
and
pop
mov
mov
mov
(bad)
jp
fcmovbe
push
in
push
rol
add
ds
sbb
or
repz
pop
mov
pop
and
outs
add
das
sub
dec
pop
mov
js
add
add
je
or
outs
fs
jb
or
rcl
adc
cmp
in
aas
ja
jg
push
dec
sbb
cmp
shl
mov
bound
gs
adc
outs
jmp
mov
push
mov
jg
je
push
popa
jo
mov
pop
mov
mov
mov
repnz
imul
push
aaa
inc
ja
xor
xchg
xchg
cmp
fld
sahf
ins
or
(bad)
out
mov
jbe
shr
aas
pop
ret
mov
outs
mov
dec
jbe
xor
or
push
sbb
add
callw
lea
add
pusha
gs
mov
mov
call
fistp
mov
fcomp
mov
adc
dec
fdivr
(bad)
mov
sti
pop
ins
aam
leave
pop
scas
jge
retf
aam
mov
and
xlat
pop
jo
retf
mov
sub
rcl
push
lods
add
push
repz
sbb
push
int3
inc
pop
test
cld
xor
sbb
jge
jo
inc
xchg
setl
jg
pop
lods
xor
add
mov
jg
jmp
call
inc
test
xchg
int
push
fs
pop
sbb
bound
adc
push
push
das
pop
mov
pop
sub
jo
push
out
or
stos
mov
movs
pop
nop
adc
out
enter
mov
pop
call
ret
cwde
ins
(bad)
aam
popf
out
in
mov
out
pop
das
retf
sub
or
into
pop
pop
imul
hlt
iret
push
pushf
addr16
push
loopne
adc
xchg
ins
fld
lds
or
leave
mov
ficomp
mov
cs
cmp
mov
lahf
scas
int3
ror
push
shrd
cwde
cdq
pop
jae
pop
sub
adc
(bad)
fucomip
jmp
inc
inc
mov
sub
je
or
je
jmp
addr16
(bad)
jmp
jg
pop
fs
test
jle
mov
dec
inc
dec
jne
mov
add
mov
pop
pop
pop
test
je
clc
(bad)
mov
hlt
mov
sbb
push
pop
dec
pop
pushf
and
mov
pop
mov
fld
in
fbstp
sbb
pop
mov
push
pop
push
push
sbb
xor
(bad)
js
mov
popa
popa
sub
lock
pop
add
add
pop
jge
aas
(bad)
(bad)
test
lods
pop
adc
(bad)
dec
fmul
add
cld
sti
sete
sahf
adc
pop
mov
add
idiv
mov
jne
push
adc
test
div
or
into
test
inc
or
or
adc
loop
cmps
mov
shl
(bad)
je
push
loopne
aas
push
push
mov
mov
fcomp
push
dec
test
jl
inc
xor
sbb
mov
mov
push
inc
dec
jne
xor
mov
(bad)
neg
adc
pop
jle
ret
das
or
jp
js
dec
clc
popa
jno
cld
neg
adc
mov
pusha
mov
aaa
mov
add
sar
mov
fisttp
push
sub
mov
push
adc
and
jle
mov
mov
bound
pop
sar
sar
js
dec
add
mov
fild
xchg
shr
mov
sub
in
fidivr
sbb
mov
fild
push
and
rcl
ret
iret
jle
pop
shl
shl
test
imul
inc
lock
jl
rol
lahf
ret
sbb
iret
xor
jne
sub
jmp
cdq
add
adc
pop
addr16
test
inc
nop
test
(bad)
lea
je
inc
stos
inc
rol
(bad)
mov
js
add
push
ret
sar
mov
(bad)
mov
sub
in
hlt
dec
inc
jbe
out
adc
mov
ret
popa
fsubr
sub
xor
cmp
xor
out
(bad)
sbb
call
vorpd
or
push
nop
pusha
popa
mov
inc
pusha
icebp
out
cmp
imul
pop
std
cmp
aam
jno
loop
pop
cmp
jne
inc
inc
or
mov
sbb
jmp
inc
cmp
inc
hlt
push
lds
pop
sub
push
ds
mov
mov
sub
(bad)
aad
or
pop
or
jl
inc
xor
xlat
daa
adc
fidivr
sbb
jne
adc
push
adc
inc
inc
adc
retf
cmp
adc
add
add
cmp
jg
xor
adc
mov
pop
fst
fcom
jno
popa
mov
daa
bound
cli
call
mov
in
dec
xchg
xchg
add
push
clc
jne
mov
lods
xor
or
sbb
jbe
sahf
jmp
sub
cmp
xchg
int
arpl
adc
hlt
and
sub
jl
inc
mov
fwait
out
jle
cmp
jle
ret
sub
cld
jl
add
jmp
sub
outs
mov
scas
idiv
inc
and
or
sub
add
fs
dec
xchg
pop
add
cmp
push
and
push
pushaw
lahf
loopne
retf
rol
shl
mov
dec
push
lea
in
pop
xor
cli
(bad)
lock
xor
call
push
xchg
call
jnp
sub
xor
sahf
aas
fnsave
xor
clc
lea
test
clc
inc
or
adc
hlt
std
xor
sbb
push
call
rcl
mov
mov
cmp
jg
lea
rcr
sahf
mov
ret
xlat
inc
(bad)
cmp
jne
push
(bad)
sbb
jmp
paddsb
in
cld
jle
mov
dec
jmp
and
cmp
in
loope
jle
or
xor
push
mov
add
jle
push
lock
pop
adc
ret
jbe
or
or
lea
push
sbb
test
push
rcl
cmp
mov
mov
ss
fucomi
mov
jne
out
(bad)
lods
jmp
dec
mov
inc
sbb
out
add
mov
mov
jnp
shl
mov
or
popf
pop
or
add
int
add
adc
mov
mov
xchg
mov
add
and
inc
out
sbb
mov
inc
repz
xlat
sti
das
popf
addr16
fsubr
cmp
inc
ret
jmp
sub
adc
dec
jmp
dec
xchg
mov
cmp
sub
inc
adc
mov
pusha
mov
test
add
mul
sub
sbb
mov
stos
fidiv
jae
dec
add
loopne
adc
jmp
test
lds
(bad)
jl
inc
add
nop
(bad)
inc
(bad)
cmp
pop
mov
int
mov
or
rol
jne
push
call
cmp
adc
xlat
and
xor
icebp
mov
cdq
sbb
ret
mov
iret
shl
jmp
aas
shl
mov
bound
cld
cmp
cmp
jae
pusha
test
or
iret
adc
jmp
enter
daa
out
test
inc
outs
push
mov
fcom
cli
mov
or
clc
or
sub
jl
inc
dec
cmp
pop
pop
push
pushf
test
in
jne
jmp
sub
sahf
ret
std
inc
fst
cld
mov
out
outs
cmc
retf
xchg
pop
adc
lock
repz
movs
cmp
and
mov
jo
add
(bad)
adc
cmp
jae
mov
cmp
std
sbb
out
add
xchg
fwait
stos
jecxz
shr
xchg
xchg
cld
retf
pop
or
psubq
ret
setg
out
push
mov
psllw
cmp
inc
xor
fisttp
push
jbe
mov
dec
inc
adc
cmc
mov
(bad)
in
pop
dec
jnp
nop
retf
sub
aad
inc
cs
adc
sbb
dec
pop
xchg
jmp
fild
jno
call
cmp
pop
das
out
or
or
and
je
dec
push
mov
pop
mov
loop
fld
xchg
xchg
pop
mov
dec
push
push
mov
loop
movzx
sub
mov
aaa
push
or
shr
jbe
and
push
push
or
or
add
xor
push
lea
mov
neg
and
lea
sub
ja
add
jmp
aaa
gs
sub
xor
dec
mov
call
inc
push
cwde
push
dec
daa
fdiv
mov
and
mov
repz
inc
jno
std
pop
xor
jmp
cdq
xchg
mov
popf
jecxz
mov
popf
push
push
loopne
adc
call
fs
mov
fsubr
add
lea
or
dec
cli
jae
adc
lock
jle
out
cmp
call
(bad)
dec
jmp
inc
push
repnz
fimul
adc
dec
and
fstp
repz
ficomp
in
addr16
js
jnp
fwait
adc
outs
(bad)
jo
xor
scas
cmp
push
ret
cmp
clc
adc
(bad)
add
out
lock
or
ret
sbb
fwait
out
and
add
or
or
and
mov
cdq
clc
and
or
mov
clc
hlt
cmp
add
mov
mov
aas
imul
call
loope
or
in
push
and
das
mov
shl
xchg
adc
(bad)
fwait
ret
mov
cmovbe
fst
inc
jecxz
add
ret
ins
data16
push
pop
cmps
mov
jnp
(bad)
(bad)
inc
pop
mov
aad
fstp
dec
cwde
rcl
mov
jmp
inc
sub
lock
dec
clc
fimul
jne
mov
add
and
cli
cmp
clc
(bad)
jmp
push
in
hlt
mov
mov
inc
sub
ja
dec
push
in
ror
push
lock
adc
inc
inc
jne
ins
dec
clc
sub
xchg
pop
dec
ror
or
jmp
sar
xor
sbb
or
gs
xchg
sub
fstp
mov
pop
or
lea
cmc
add
retf
push
push
stc
out
mov
pop
dec
dec
dec
adc
inc
dec
push
inc
dec
dec
push
inc
inc
mov
inc
inc
inc
daa
jecxz
fadd
mov
mov
mov
mov
popa
pop
xor
xor
add
adc
addr16
sbb
push
enter
popa
sub
adc
mov
imul
or
std
mov
mov
std
fstp
mov
mov
mov
jns
fdivr
loopne
inc
cmps
pop
mov
push
cmp
jae
and
loopne
leave
iret
sub
or
hlt
and
loop
add
adc
mov
loopne
adc
rol
out
xchg
mov
fstp
adc
jecxz
mov
aaa
(bad)
mov
loope
adc
aam
jl
mov
mov
mov
and
xor
cmp
pop
test
sub
and
aad
movs
cdq
out
dec
ins
dec
call
lahf
mov
mov
mov
fstp
pop
sbb
sub
dec
out
mov
dec
dec
loope
mov
mov
arpl
xchg
(bad)
lds
stc
fadd
mov
lods
ret
dec
cmp
ins
ins
(bad)
jg
jnp
scas
inc
clc
fmul
add
call
push
mul
push
cs
scas
mov
fs
push
and
int3
enter
adc
xor
jmp
xor
xchg
xlat
push
adc
in
xor
inc
xor
sbb
ret
movs
sbb
pop
mov
movs
shr
jl
je
or
shl
sub
mov
shl
lahf
jmp
mov
pop
xlat
or
xor
cs
(bad)
xor
add
and
je
mov
adc
ss
ret
rcl
inc
popa
je
adc
mov
xchg
and
mul
mov
push
in
dec
pop
lock
mov
jns
jnp
and
mov
add
in
dec
(bad)
mov
jl
inc
mov
jo
outs
out
into
popa
and
inc
fst
popa
push
inc
push
add
xchg
mov
test
xlat
sbb
shl
dec
fild
fbstp
pop
dec
mov
aas
sbb
(bad)
jmp
lock
jl
mov
aaa
xor
add
mov
hlt
push
sub
in
xchg
sbb
add
in
pusha
xchg
mov
pop
dec
je
jne
push
popa
ins
sub
or
js
jmp
cmp
cmp
into
jbe
loopne
cld
or
cmp
jbe
dec
dec
adc
je
mov
aas
pop
ds
adc
adc
and
mov
outs
or
push
inc
cs
push
rcr
dec
mov
loopne
clc
inc
push
lods
xor
inc
xchg
mov
hlt
leave
add
and
movs
clc
or
clc
test
jae
mov
test
xchg
test
lock
lock
cmp
shl
js
lea
mov
(bad)
mov
popf
or
dec
adc
xchg
cmp
mov
sub
inc
fwait
or
add
outs
test
retf
hlt
int
ror
xchg
shl
add
xchg
or
test
jl
sti
es
jne
lock
setle
cmp
mov
mov
loop
dec
dec
or
je
mov
pushf
movs
clc
in
mov
pop
add
cdq
bound
lods
push
(bad)
iret
add
adc
and
cmps
leave
mov
xchg
xor
sahf
cmp
mov
or
pop
jle
mov
mov
xchg
clc
jmp
sub
pusha
adc
(bad)
xor
mul
and
lahf
je
mov
cmps
jge
add
das
enter
dec
dec
cmps
add
dec
and
nop
add
das
dec
cs
push
inc
popf
pushf
idiv
pop
ror
xor
dec
and
aad
xchg
mov
test
and
xor
rcl
dec
inc
test
enter
clc
test
hlt
(bad)
hlt
in
dec
or
call
lods
call
adc
push
jne
pop
cmps
pusha
and
mov
shl
jle
test
and
xor
sub
xor
and
mov
and
add
nop
xchg
sbb
pop
and
cmp
and
(bad)
pop
sub
mov
stc
enter
adc
cmp
sti
(bad)
popf
clc
lahf
je
jae
sbb
cmp
add
popf
cmp
sbb
pop
dec
call
and
push
sub
je
dec
je
jmp
mov
pop
mov
sbb
push
push
dec
loopne
loopne
add
(bad)
fist
jne
mov
or
mov
je
out
jg
xchg
movzx
cmp
jg
inc
sub
aas
fucomip
or
je
dec
je
dec
cdq
test
jbe
daa
sbb
sub
inc
cmp
inc
shr
pop
enter
adc
sbb
inc
lods
adc
add
lods
sbb
add
(bad)
(bad)
xor
pop
lahf
test
and
add
add
push
fistp
xor
pushf
lock
add
mov
call
xchg
adc
rcr
or
jmp
and
jp
rcl
in
adc
pop
sub
jmp
mov
adc
or
stos
push
inc
pop
xchg
jo
pop
sysret
mov
nop
dec
or
mov
mov
xchg
push
mov
xor
sbb
stos
xchg
shr
pop
inc
pop
jle
sub
dec
sub
je
jne
ror
bnd
xor
sub
mov
push
retf
dec
(bad)
shl
cmp
fmul
xchg
add
sub
ret
outs
jmp
mov
dec
add
enter
add
lods
push
push
imul
dec
jno
rol
add
or
xchg
ret
sub
jb
mov
adc
lahf
xchg
scas
or
pop
out
hlt
inc
mov
mov
inc
popa
adc
sbb
inc
imul
sbb
dec
pop
inc
ins
jmp
ds
sub
add
(bad)
lods
test
push
call
out
sar
inc
clc
pop
fist
dec
movq
pop
hlt
mov
aas
add
pop
mov
data16
imul
rol
xchg
adc
push
call
inc
sahf
nop
mov
mov
jge
mov
sub
pop
cs
sub
lea
sti
movs
test
shl
or
or
xchg
gs
rcl
and
jns
div
cmp
cmpxchg
jmp
stc
adc
jne
test
pusha
add
add
mov
out
ss
popa
inc
das
jge
mov
cmc
loope
inc
dec
dec
pop
mov
inc
push
jp
scas
stos
xchg
pushf
cmp
in
popa
dec
inc
mov
in
(bad)
dec
xchg
cmp
movups
fistp
add
jecxz
dec
jmp
pop
sbb
loope
dec
ret
(bad)
daa
test
cmp
sub
outs
sbb
iret
push
test
xor
or
xor
pop
pusha
jl
pusha
mov
ss
loope
ficom
sub
mov
dec
sar
clc
add
ds
shl
mov
push
jb
and
dec
imul
and
sbb
and
outs
jo
inc
imul
jmp
retf
mov
jmp
imul
add
test
jge
enter
in
cwde
sub
sysret
xchg
rol
out
loope
pop
je
inc
lock
or
loop
dec
pusha
in
and
mov
xor
call
fisubr
movzx
sub
imul
scas
arpl
(bad)
mov
mul
and
adc
mov
loopne
lods
push
aaa
cmp
add
sbb
(bad)
in
cmp
fnstenv
fcmovnu
and
loop
nop
add
jmp
es
stos
movs
or
rol
add
add
inc
lock
add
movs
pop
mov
push
arpl
daa
fdiv
adc
in
adc
push
fmul
push
mov
aaa
div
(bad)
pop
jb
adc
adc
add
mov
cmp
(bad)
inc
rol
mov
mov
inc
jb
jge
sub
push
or
cld
xor
popa
and
xor
mov
inc
inc
sbb
dec
add
fld
jmp
adc
pop
adc
or
ror
shl
ror
in
test
jmp
imul
adc
push
rol
adc
btc
add
sub
xchg
sar
cmp
lds
iret
adc
jo
inc
push
push
push
or
movs
or
bound
push
inc
sub
or
jno
adc
mov
ss
lds
jne
and
xor
pop
retf
pop
mov
sub
pop
stc
repnz
jl
adc
test
inc
fs
loop
jne
cmp
test
and
fimul
add
inc
leave
dec
jge
mov
icebp
leave
dec
mov
cmps
in
lea
inc
mov
out
ins
imul
stc
add
movs
in
dec
cmps
or
jb
inc
pusha
sbb
cmp
add
jo
sub
sub
and
adc
sub
sbb
sbb
outs
rol
xchg
test
and
ins
mov
(bad)
dec
imul
mov
mov
mov
adc
fucom
in
test
add
aaa
cmp
xor
shl
cmp
jle
pusha
xchg
mov
jmp
adc
and
xchg
adc
mov
xchg
in
add
mov
bound
or
pop
adc
and
sbb
add
mov
cmp
rcr
jg
and
aaa
imul
inc
mov
(bad)
add
rol
pop
pop
jbe
cmp
xchg
test
je
and
je
adc
inc
sti
sbb
and
scas
add
fadd
ror
jp
fdivr
les
mov
adc
xor
adc
push
shl
movs
jne
add
test
(bad)
cmp
out
xchg
sub
rol
stos
mul
or
shl
and
or
movs
call
fcomp
adc
sbb
xchg
mov
cmp
push
pop
aam
cmp
cmp
jge
mov
add
shl
(bad)
pop
mov
cli
add
loope
mov
inc
cmp
sub
inc
or
daa
adc
lahf
or
adc
lds
add
jne
or
mov
js
xor
clc
lea
add
or
sbb
sti
or
cmp
jle
daa
fiadd
fucomp
icebp
lahf
in
shl
jb
push
cli
mov
add
dec
lods
fld
retf
add
and
stos
fild
xchg
popa
mov
fistp
daa
inc
jmp
lods
gs
jns
in
add
jmp
jecxz
and
js
mov
dec
push
jns
mov
mov
push
mov
mov
sbb
mov
iret
fadd
add
xchg
sub
push
outs
jo
cmc
(bad)
fild
test
mov
fiadd
ret
test
jb
jge
mov
jge
mov
cmp
js
jne
pop
cld
xchg
add
push
and
icebp
pop
dec
or
add
lods
(bad)
ins
in
sti
stos
out
imul
sbb
fdiv
sub
ficomp
inc
jo
stos
cmp
enter
stos
and
and
sbb
push
push
pop
push
push
push
popa
ror
jbe
adc
sub
cli
jmp
and
dec
(bad)
test
mov
stos
out
fs
xor
rcr
fwait
sub
cmp
jno
nop
cmp
push
(bad)
rol
mov
mov
repnz
push
clc
jge
arpl
inc
mov
rcr
sbb
sub
icebp
lea
xchg
inc
mov
arpl
inc
lds
adc
cmp
int
cmp
ja
and
jne
loope
bt
xchg
ror
or
push
lods
cmp
add
add
push
and
fldenv
repnz
pop
xchg
ret
lea
loopne
aad
out
xchg
retf
jmp
sub
xor
cmp
je
xchg
cmp
sub
fmul
inc
sbb
adc
pop
or
jp
test
loope
(bad)
ret
sub
ins
or
cmp
repz
push
mov
mov
shl
(bad)
cmp
je
vmread
movs
mov
cmp
adc
or
xor
jle
sbb
add
cmp
jb
pop
jae
inc
sbb
jne
inc
div
dec
mov
inc
mov
sub
sbb
inc
jl
jne
xor
fst
lods
int3
cmp
cmp
pop
inc
sar
add
mov
mov
sbb
jl
mov
loop
mov
faddp
mov
pop
int3
cld
push
sub
data16
mov
rol
in
ins
or
nop
push
into
pushf
dec
aam
jne
mov
dec
pop
jne
add
xor
push
or
mov
(bad)
add
or
mov
mov
cmp
hlt
jne
dec
repnz
rcr
mov
push
loop
daa
mov
iret
lea
pop
in
jl
xor
hlt
rcl
in
dec
shr
aad
ja
mov
jne
and
inc
stos
nop
sub
inc
sbb
popf
aam
jmp
fild
sub
jg
or
push
cmc
ror
cmc
push
call
dec
test
sbb
pusha
mov
stos
push
cdq
push
retf
cmp
aad
xchg
cmp
fwait
or
sbb
jae
adc
push
repnz
pop
rol
test
or
jne
or
imul
add
sub
nop
add
retf
pop
out
push
push
rol
stos
pop
sahf
sbb
push
dec
ror
mov
or
xor
add
pop
dec
adc
and
js
push
in
test
and
sbb
pop
pop
mov
mov
cmp
and
outs
retf
or
or
inc
mov
scas
jge
pop
cs
and
bound
cmc
push
cmp
sub
push
push
mov
popa
inc
sahf
ror
scas
ret
cwde
mov
lahf
daa
pop
or
(bad)
test
mov
adc
rcr
ds
fmul
pusha
bound
ret
mov
cmp
cmp
and
or
pop
lea
sbb
dec
mov
add
inc
fcomp
jp
repnz
and
pop
bound
call
pop
in
enter
dec
adc
ret
arpl
cmp
jae
fisubr
out
out
(bad)
(bad)
dec
mov
ficom
or
dec
xlat
sub
sub
cwde
dec
push
xchg
js
dec
fmul
adc
shr
or
xor
sbb
and
loop
xor
push
jg
movsx
and
jb
jns
dec
or
inc
mov
shl
not
sub
cs
sub
add
add
or
inc
(bad)
xchg
das
sub
or
int
mov
add
inc
popa
ins
shl
outs
enter
jmp
stos
adc
ja
mov
add
pop
arpl
dec
dec
repz
sub
clc
das
lds
fcom
push
sub
adc
sub
mov
jle
dec
adc
movs
push
shr
pop
inc
aas
sub
enter
mov
sahf
lods
lds
add
add
mov
xchg
ror
jo
mov
or
inc
enter
mov
and
sub
cmp
nop
add
pop
add
add
scas
xchg
rol
mov
mov
rep
les
inc
aaa
xor
aaa
lock
(bad)
or
xchg
xor
inc
rcr
ins
jbe
cs
pop
and
sub
nop
pop
pop
add
hlt
add
add
ror
xchg
mov
lods
adc
mov
xchg
sbb
call
in
add
rol
aas
mov
les
adc
mov
add
sub
sub
int3
push
inc
add
push
jae
in
mov
clc
inc
push
pop
push
inc
sub
push
in
adc
popf
and
mov
add
and
clc
mov
xchg
push
shl
retf
rol
in
add
imul
js
add
int3
movsx
pop
test
add
push
clc
push
add
dec
xchg
mov
xlat
js
dec
pop
dec
add
or
jl
sbb
call
and
or
add
inc
inc
cmc
jmp
fs
les
xchg
cmp
pop
retf
lods
rol
loope
and
mov
push
scas
cwde
movs
xor
or
add
add
aam
sub
pop
add
mov
or
cs
aam
gs
dec
xor
das
xchg
ret
add
sbb
idiv
mov
sub
add
adc
ror
mov
adc
mov
cmp
mov
mov
sbb
add
in
nop
or
cmp
aaa
popa
and
cmps
inc
je
sub
and
ins
cdq
shl
aaa
jle
push
(bad)
test
lea
sub
repnz
dec
dec
je
add
hlt
adc
sbb
div
jmp
adc
repnz
inc
jnp
adc
adc
lea
push
shl
pop
in
xchg
mov
jle
shl
out
lock
sbb
retf
sbb
jmp
repnz
in
jbe
iret
movs
cwd
repnz
add
inc
xchg
or
cmp
lock
pop
fidivr
dec
cmp
inc
icebp
cmp
mov
dec
out
or
push
jl
out
cmp
cmp
xor
mov
xor
jb
lahf
fstp
test
push
or
(bad)
xor
adc
test
jg
or
jge
push
ja
jecxz
mov
pop
popf
mov
cmp
fdiv
(bad)
ds
adc
cmps
arpl
fdiv
iret
pop
repz
dec
sti
pop
mov
ficom
pusha
mov
xlat
in
and
call
jmp
sbb
popf
shl
enter
lods
rcl
mov
mov
jmp
push
add
test
ret
imul
fsubr
enter
sbb
call
cmc
pop
lea
(bad)
mov
sbb
and
adc
out
mov
fldcw
in
fadd
je
dec
sub
fld
cmp
mov
mov
inc
xchg
xor
es
adc
rol
fimul
aas
or
push
and
push
data16
sbb
sub
sbb
mov
dec
int3
push
xor
in
adc
ds
(bad)
xchg
xchg
mov
sbb
xor
mov
mov
ret
in
cmp
loope
fwait
cs
ror
mov
rol
dec
mov
xor
ret
test
push
ja
adc
mov
sti
das
xor
add
mov
sub
or
jl
pop
inc
inc
fcom
adc
mul
not
test
mov
fnsave
or
rcl
lea
sub
xor
and
push
adc
inc
sbb
mov
(bad)
add
call
adc
subps
inc
sub
shl
bound
icebp
mov
inc
dec
inc
push
sub
in
cmp
test
mov
and
outs
sbb
pop
ror
je
ins
mov
add
mov
sbb
icebp
inc
popa
jns
adc
fiadd
or
dec
fwait
push
inc
inc
push
retw
adc
test
sub
adc
push
in
fnstenv
sbb
hlt
stos
inc
lods
ja
cli
xchg
sbb
inc
jb
fs
sbb
or
inc
adc
jle
dec
mov
adc
add
push
sbb
daa
mov
or
adc
es
retf
inc
and
dec
push
gs
aam
clc
and
sbb
sti
push
jae
jbe
push
xor
ins
mov
addr16
and
dec
bound
imul
cmp
in
stc
nop
sbb
mov
add
cmp
sub
dec
pop
and
dec
scas
sub
add
mov
xchg
les
xor
add
mov
or
add
bound
xlat
adc
nop
or
rol
xlat
mov
adc
in
inc
bound
mov
ficomp
or
sub
jnp
adc
bound
imul
stos
add
dec
push
pop
ret
inc
and
nop
clc
push
mov
in
mov
sub
ss
push
retf
cs
imul
(bad)
cwde
xchg
mov
or
mov
mov
jbe
out
shr
call
aaa
cwde
xlat
add
adc
cmp
icebp
add
dec
pop
pusha
sbb
mov
mov
pop
and
jb
and
int3
add
lea
and
add
cmps
call
mov
dec
mov
push
enter
dec
stos
cmp
or
sbb
scas
mov
icebp
jbe
xlat
add
sub
leave
js
pop
xor
mov
movs
xchg
push
jge
add
or
dec
sbb
(bad)
add
sbb
in
cmp
jns
outs
lods
mov
out
xchg
scas
jg
nop
xor
jmp
mov
lahf
cld
adc
js
inc
or
stc
push
and
add
inc
fsub
movs
jmp
fwait
test
or
nop
pop
mov
das
int3
sbb
inc
fs
cmp
adc
adc
test
cmp
inc
or
mov
pop
int3
rcr
dec
mov
out
ins
test
pushf
outs
pop
xchg
lea
mov
dec
sbb
stos
pop
test
cwde
inc
push
nop
and
aas
cmp
push
pop
push
cmp
rcl
int3
hlt
(bad)
repz
dec
rol
jmp
push
rcl
sbb
test
sbb
inc
or
push
pop
cmp
push
data16
mov
cmp
push
jo
jbe
xchg
enter
sbb
shr
pop
xchg
xchg
xchg
int
sbb
xchg
cwde
mov
scas
fnstsw
push
xor
cmp
aas
je
mov
sbb
arpl
shl
jns
push
sbb
arpl
les
fcmovnb
dec
aas
ror
nop
mov
pop
sbb
or
(bad)
enter
pop
push
pop
lock
sub
enter
jns
cs
xchg
jns
test
mov
lods
inc
pusha
pusha
inc
push
mov
shr
push
add
jo
mov
push
inc
dec
sbb
fdivr
sbb
int3
xchg
addr16
cmps
es
add
popa
sub
dec
inc
adc
pusha
sbb
clc
or
add
aad
push
inc
and
mov
inc
adc
mov
fs
mov
or
fadd
or
mov
sbb
(bad)
adc
fdiv
pop
les
popa
mov
aas
aas
fadd
xor
sar
and
xchg
mov
push
les
add
daa
adc
pop
es
ins
fst
clc
jmp
popa
ins
gs
push
cmp
inc
imul
add
adc
enter
sub
(bad)
sbb
mulps
mov
adc
mov
add
and
pop
pop
sub
or
or
dec
test
pop
cmp
popf
nop
push
adc
rol
js
stos
or
add
dec
or
pushf
or
movs
adc
daa
adc
xor
cmp
pop
ds
outs
popf
jp
test
sbb
jne
mov
mov
call
stos
inc
pop
mov
xchg
add
cdq
jl
sub
xor
adc
sbb
jl
push
mov
mov
inc
and
adc
add
adc
leave
pusha
xchg
addr16
(bad)
stc
loop
sbb
int3
cmp
sub
iret
std
test
movs
(bad)
lods
pop
add
jl
xlat
or
rcr
sub
(bad)
shl
push
out
out
jbe
or
mov
mov
or
mov
pop
dec
dec
mov
or
sbb
cmp
jne
add
sbb
dec
nop
xor
sub
add
mov
jp
inc
rol
push
add
inc
push
sahf
jo
(bad)
mov
(bad)
js
cmp
cmps
aaa
data16
mov
pop
outs
adc
jmp
ss
jl
pusha
xchg
push
adc
jge
je
enter
dec
shl
cld
and
adc
or
push
cld
pop
sbb
ss
fwait
in
pop
fsubr
xchg
loopne
fbld
add
dec
cmp
pusha
xchg
jl
inc
pop
push
aaa
clc
in
xchg
dec
and
neg
and
pop
fisttp
dec
inc
sbb
ss
int3
and
mov
test
pop
jo
mov
push
and
cs
sbb
aaa
ins
aas
xor
push
lds
or
imul
adc
imul
loopne
dec
cld
inc
(bad)
(bad)
and
lock
clc
clc
cmp
add
xchg
sbb
mov
inc
dec
in
enter
test
jl
fisubr
(bad)
mov
(bad)
or
popf
shr
sbb
fcmovnb
mov
dec
aad
stos
test
adc
push
or
inc
pop
cld
aas
mov
cld
jbe
xor
mov
add
dec
outs
inc
pop
out
sub
adc
aam
xlat
xchg
nop
xchg
data16
jg
pop
bnd
or
xor
jg
or
add
retf
push
mov
ja
adc
test
mov
cmp
cmp
mov
mov
aam
push
popf
aam
ret
inc
cld
sti
rol
jne
adc
sbb
sbb
xor
cld
push
mov
mov
sbb
mov
sub
aam
enter
xor
sub
push
push
or
xor
js
test
je
cmp
icebp
xor
dec
je
cmp
add
xor
push
push
inc
je
(bad)
mov
jns
int3
addr16
sbb
lds
cmp
mov
adc
cs
mov
xor
jne
mov
push
call
mov
movs
in
pop
jne
jmp
repz
add
rcr
clc
xchg
test
dec
mov
sti
add
dec
clc
mov
int3
fadd
into
mov
and
int3
sub
push
test
adc
sbb
test
(bad)
lock
les
push
sar
add
(bad)
fsubr
push
mov
cmp
xchg
xor
push
cmp
or
pop
adc
mov
xlat
and
mov
ret
sahf
test
sub
xchg
out
inc
loopne
sbb
es
loopne
in
push
cwde
sub
mov
ret
jae
test
jns
or
push
sbb
pop
setl
pop
cs
jae
fisttp
push
das
in
inc
aad
jbe
mov
ss
(bad)
xchg
outs
cmp
pop
popf
pop
push
sbb
movs
sub
cmp
pop
inc
xor
inc
(bad)
ffree
sbb
pop
jne
xchg
or
test
mov
popa
leave
enter
lahf
hlt
fiadd
mov
dec
cmp
shr
inc
add
les
and
inc
and
int3
mov
lahf
into
cld
xchg
fsubr
adc
in
jmp
call
cmp
mov
mov
je
and
dec
cmp
arpl
shl
add
sbb
sbb
inc
adc
adc
fdivr
ret
nop
aaa
and
and
mov
sub
fmul
dec
test
and
out
test
enter
xchg
xchg
in
test
mov
in
fbld
pop
(bad)
cmps
pushf
mov
push
and
xchg
mov
movs
cmps
ret
inc
sbb
lds
sbb
jo
cmp
inc
add
ja
and
push
imul
sar
push
daa
mov
pop
push
push
sub
mov
les
addr16
push
adc
pusha
cmp
mov
fdivrp
sub
outs
adc
xor
jle
fadd
pop
adc
jmp
aad
pop
xchg
adc
cmp
or
das
add
or
rcr
push
pop
or
fdivr
call
adc
or
inc
or
sbb
nop
mov
inc
adc
pop
leave
add
adc
pusha
adc
ror
cs
in
repz
mov
mov
xor
dec
gs
enter
fstp
dec
loopne
jnp
cmc
(bad)
fadd
mov
sbb
enter
(bad)
sub
enter
sbb
ror
or
es
dec
and
ja
cdq
xchg
add
pop
rol
dec
and
jo
push
sbb
sti
push
inc
scas
xchg
and
cmp
cmp
sub
jb
xor
cdq
sub
inc
call
mov
add
push
jae
sub
cs
dec
push
loopne
jnp
lods
mov
outs
sub
mov
hlt
mov
xor
or
push
pusha
mov
cmps
loope
popa
fs
ret
push
shl
pop
dec
dec
and
sbb
gs
dec
add
adc
arpl
jo
xor
cmps
push
inc
jns
add
push
adc
cmc
rol
je
fwait
call
or
in
call
inc
and
xor
inc
sbb
inc
jge
add
jb
ja
cwde
and
nop
fdiv
add
inc
push
push
mov
test
sahf
jg
das
ret
(bad)
or
fnsave
xor
sti
jo
push
mov
test
inc
jae
jae
and
mov
add
js
in
shl
or
loopne
jno
icebp
or
sbb
pop
popa
adc
add
jo
adc
push
(bad)
mov
inc
sbb
add
mov
out
add
or
jne
jns
push
addr16
or
lock
jb
jp
popa
ins
or
push
fst
xor
into
test
and
ror
push
pop
sbb
sar
cmc
in
pop
or
loopne
das
xchg
(bad)
jl
pop
push
or
sub
or
and
sbb
or
out
jnp
stos
cmc
push
dec
or
or
cmp
sub
je
push
(bad)
adc
jg
inc
and
ss
and
in
js
daa
and
xor
nop
jno
or
or
cdq
fcomp
xor
mov
ins
fwait
je
imul
clc
daa
pop
pop
fild
fmul
mov
jecxz
fmulp
lods
or
add
adc
clc
jnp
scas
inc
loope
test
mov
aas
xchg
and
jb
or
adc
enter
adc
or
cwde
or
xchg
in
pop
rol
rcl
and
enter
mov
ins
ds
push
push
fs
mov
xor
push
ja
mov
aam
adc
push
adc
loopne
fwait
jle
mov
lds
in
call
adc
adc
xchg
mov
dec
adc
popa
jne
adc
lock
lahf
mov
loopne
cli
push
and
dec
cs
add
push
push
or
prefetch
add
jl
in
sbb
xchg
mov
mov
sbb
jb
out
mov
push
dec
mov
mov
retf
or
in
pop
mov
adc
fidiv
fbstp
push
xor
xor
enter
call
outs
out
fs
test
cmp
lea
lea
out
push
jl
jmp
cmp
add
xchg
jo
jecxz
or
scas
mov
pusha
adc
clc
pop
sub
cmp
cmp
(bad)
xlat
(bad)
mov
aas
and
fadd
retf
je
dec
jmp
xor
(bad)
div
pop
lock
stos
xor
sub
xor
lahf
pusha
arpl
xchg
jmp
hlt
fs
ds
dec
pop
mov
lods
loope
dec
push
push
inc
popa
mov
sahf
je
jo
push
out
mov
cmp
in
mov
loopne
pusha
add
push
add
jns
mov
bound
push
mov
cmps
in
pop
or
out
sub
and
nop
add
outs
add
scas
mov
xor
les
fs
aam
les
mov
push
jo
repz
test
iret
nop
inc
and
ds
sbb
mov
mov
imul
mov
loope
add
nop
xchg
jmp
pop
push
add
iret
xor
xor
cmp
fbstp
(bad)
jo
jb
inc
jb
cmp
cmp
in
inc
dec
xor
mov
pop
mov
mov
xlat
clc
pusha
mov
rol
cwde
or
dec
inc
je
mov
and
(bad)
cmps
fmul
sub
ret
ror
movs
lea
jl
adc
loop
pop
jno
rol
pop
push
(bad)
mov
pop
xchg
cdq
aaa
fmul
add
call
push
ins
or
dec
add
and
add
enter
test
sbb
sub
inc
pushf
add
cmp
push
adc
adc
and
push
add
imul
push
cmp
jo
jg
xor
jmp
enter
pop
gs
aam
aam
(bad)
imul
xchg
outs
pop
push
or
sub
inc
scas
jbe
mov
pop
inc
mov
push
add
mov
imul
jb
ror
inc
aam
ror
test
add
stos
call
add
dec
adc
pop
loope
int
out
pop
ficom
cmps
sub
movs
ja
and
fs
and
sbb
pop
sbb
fdiv
pop
call
push
pop
adc
xchg
fisubr
mov
mov
or
mov
(bad)
pop
xor
adc
sbb
push
addr16
mov
gs
jo
daa
push
in
or
mov
gs
aad
push
add
add
push
fcom
js
fldl2t
retf
jmp
pop
mov
xor
jmp
pushf
call
enter
inc
das
sbb
ret
or
loopne
sbb
cwde
movs
jo
push
mov
jnp
loopne
fadd
jo
sub
or
sbb
sti
push
or
xor
enter
mov
ja
inc
dec
pop
loopne
inc
fsubr
add
dec
dec
fild
fmulp
fadd
pop
icebp
or
outs
or
pop
in
into
add
jl
or
dec
fsubr
add
in
add
jecxz
mov
nop
in
out
mov
push
adc
mov
mov
or
mov
aas
in
sbb
or
sub
pop
lahf
shr
mov
fwait
adc
sar
mov
jnp
xor
or
cmp
pop
cmps
bound
(bad)
loop
xchg
fdivr
add
fadd
call
sbb
jp
dec
test
sbb
adc
in
pop
or
sub
je
jne
in
dec
or
fcom
jmp
xor
lock
dec
shl
imul
xor
aam
push
pop
jl
bound
arpl
test
sub
lea
and
or
push
mov
pop
int3
jno
push
ret
dec
inc
clc
push
xor
mov
(bad)
shr
je
pop
(bad)
mov
push
jne
jne
inc
es
inc
xchg
pop
stos
cmps
cmp
add
and
mov
rcr
adc
(bad)
push
(bad)
retf
icebp
test
fdivr
cli
je
xor
mov
cmc
int3
dec
sbb
(bad)
jmp
mov
(bad)
pushf
mov
pushf
(bad)
aam
outs
sub
ds
imul
jmp
xchg
push
pop
sbb
or
shr
jae
and
not
inc
loop
dec
pop
fs
or
sbb
inc
add
(bad)
imul
jl
xchg
aam
jp
push
test
sbb
hlt
mov
clc
cld
jge
and
out
sbb
sbb
retf
in
outs
or
ss
stc
dec
rcr
(bad)
jecxz
and
and
in
or
daa
loope
mov
test
sar
mov
jecxz
add
ja
std
xchg
sbb
(bad)
sbb
sub
retf
test
aas
sub
sbb
mov
repz
(bad)
jecxz
popa
test
mov
enter
lea
fimul
inc
mov
mov
test
les
pop
ret
mov
rol
div
inc
dec
dec
jg
push
fild
mov
cmps
pop
pop
cld
lahf
or
jle
dec
ret
jle
mov
pop
pop
repz
cli
out
(bad)
jae
pop
inc
add
and
inc
push
adc
adc
jecxz
(bad)
in
sbb
or
cmovs
adc
mov
push
mov
mov
xchg
adc
add
jne
xchg
and
pusha
jbe
adc
(bad)
rcl
pop
fistp
gs
jl
ds
pop
nop
adc
imul
push
mov
cmp
je
mov
pop
pop
popf
mov
in
push
nop
ror
inc
sbb
test
dec
mov
call
outs
addr16
inc
xchg
and
sbb
sub
leave
nop
pushf
mov
imul
lock
shr
pop
call
in
push
push
and
adc
sbb
mov
or
repnz
imul
pop
add
mov
adc
add
(bad)
loopne
cli
or
inc
sbb
add
mov
sbb
iret
add
mov
dec
sbb
mov
scas
mov
pop
hlt
adc
push
mov
add
jg
pop
test
jg
inc
sub
push
adc
mov
popf
add
and
dec
add
add
push
cmps
mov
mov
inc
dec
mov
push
fs
fs
add
mov
add
and
(bad)
and
pop
daa
add
or
add
shl
add
popa
or
push
sub
inc
push
dec
scas
push
xor
out
or
jo
or
call
and
sbb
or
addr16
popf
push
fs
add
scas
nop
or
push
mov
test
shl
dec
adc
add
mov
and
or
dec
jnp
push
or
adc
mov
adc
sbb
jle
popa
cmp
add
adc
dec
mov
pop
pop
add
sbb
adc
pop
jecxz
inc
mov
xchg
pushf
cdq
jge
rcr
xor
xor
shl
xor
daa
nop
pop
mov
fiadd
mov
inc
fs
mov
ss
mov
wbinvd
jo
dec
inc
push
mov
aaa
ss
and
add
gs
mov
loop
jo
cmp
jge
sub
mov
mov
add
xor
xchg
call
fisubr
and
pushf
test
nop
sub
inc
push
mov
fcom
dec
dec
dec
outs
or
cmps
adc
sbb
test
mov
or
sbb
push
gs
mov
dec
sbb
jecxz
add
retf
nop
in
xor
mov
ret
xor
cmp
push
push
add
lock
cmp
hlt
aam
(bad)
adc
gs
mov
bound
retf
lds
ins
pop
pusha
mov
push
lds
data16
sub
push
sti
inc
cmp
pop
addr16
mov
iret
add
mov
out
jg
mov
and
push
je
pop
mov
cmc
add
lods
pop
mov
xchg
or
mov
jmp
call
or
test
call
jmp
test
or
and
cs
in
inc
adc
lea
jp
outs
jno
jne
pop
mov
ror
mov
adc
shr
movs
add
push
mov
dec
sbb
xchg
adc
sub
dec
sar
inc
fidiv
pop
sar
and
ss
and
rol
dec
sbb
outs
or
es
mov
sahf
xlat
(bad)
fsubr
dec
mov
sahf
dec
sbb
jmp
xchg
xlat
(bad)
xor
push
aaa
iret
adc
leave
inc
jnp
ja
mov
and
je
pop
mov
cs
je
or
sub
pop
sub
jge
inc
or
hlt
xor
xor
movs
dec
xchg
aad
dec
xchg
hlt
clc
push
push
xchg
push
dec
adc
cwde
fs
mov
div
and
adc
or
aas
cli
pop
xor
mov
pop
cwde
jmp
push
xor
cwde
nop
shr
ins
mov
shr
add
pop
enter
int
xor
loope
frstor
or
add
nop
or
or
cdq
nop
or
mov
sbb
mov
jmp
mov
int3
add
pusha
add
out
cmp
push
fimul
push
mov
and
adc
mov
xchg
jbe
pop
mov
dec
sub
pop
adc
test
mov
add
sub
adc
pushf
retf
adc
nop
fisttp
or
outs
rcr
mov
cmps
jns
adc
lock
test
call
sub
jne
sub
mov
xor
cmp
rcl
daa
xchg
fbstp
push
adc
push
sbb
enter
lahf
int3
or
xchg
xor
xchg
mov
jns
(bad)
(bad)
or
sbb
sub
or
add
lods
mov
cmp
cmp
jne
jae
pop
in
cwde
les
fstp
jns
sub
ins
mov
jp
popf
push
(bad)
loopne
mov
mov
(bad)
mov
push
push
and
imul
fwait
or
lock
push
mov
cmp
je
jl
pop
or
stc
sub
inc
clc
sub
sub
xor
xor
or
in
inc
cli
in
loop
add
jne
inc
fimul
dec
adc
(bad)
cs
jecxz
dec
icebp
add
sub
dec
add
adc
pop
add
aas
sub
xor
in
cmp
and
sbb
or
daa
add
push
xor
test
cmps
shl
outs
pop
sub
sub
mov
(bad)
adc
pop
fs
lods
nop
mov
ret
ret
in
push
bound
hlt
pop
adc
add
jo
jbe
push
jmp
sub
data16
mov
lock
jle
inc
push
repnz
and
mov
ret
jns
dec
sub
sub
xor
jmp
xchg
mov
lea
mov
mov
and
push
dec
out
ja
bound
iret
outs
sbb
movs
and
mov
sbb
jbe
and
inc
push
test
dec
nop
in
xchg
mov
push
lock
dec
push
imul
test
or
push
(bad)
jno
hlt
cld
dec
lods
test
mov
add
stc
add
lea
adc
mov
das
jl
adc
das
cmp
or
sbb
jns
mov
and
inc
jg
adc
xchg
xor
sbb
adc
add
ins
nop
cmp
mov
daa
dec
adc
xor
sub
push
repnz
call
dec
xchg
mov
lea
push
and
bound
adc
mov
out
add
ds
lods
test
dec
dec
and
rcr
add
xchg
sbb
jg
push
mov
sahf
aas
stos
push
shl
in
aam
and
xchg
push
lock
and
aam
iret
rol
hlt
aam
mov
xchg
lahf
and
dec
pusha
in
les
sub
adc
adc
ficom
jle
jnp
add
hlt
adc
mov
test
lock
adc
imul
jmp
rol
cmp
lahf
sbb
test
or
push
cmc
nop
inc
and
add
pop
dec
shr
push
imul
jo
fwait
xchg
das
mov
int3
iret
mov
iret
repnz
in
or
add
and
clc
(bad)
mov
push
lods
mov
cmp
mov
sbb
fwait
or
dec
pusha
stos
xchg
aaa
sub
inc
dec
mov
mov
(bad)
fistp
push
bound
aaa
(bad)
loopne
loopne
(bad)
jae
arpl
stos
add
mov
or
push
mov
jo
js
add
mov
hlt
cmp
popa
push
mov
sti
std
jl
out
inc
push
mov
daa
test
into
and
jg
xor
mov
pushf
mov
sbb
and
push
push
pop
jl
movs
inc
push
adc
or
and
cli
adc
dec
mov
movs
jno
cmp
mov
inc
int
add
aam
or
add
outs
ror
sbb
add
push
aad
mov
es
shr
call
jne
mov
pop
movs
cdq
dec
cld
out
mov
adc
imul
xor
lea
adc
sub
imul
out
xchg
mov
push
add
ror
or
test
xor
inc
ror
sbb
scas
or
xor
mov
or
cmp
or
je
arpl
push
push
mov
xor
or
out
pusha
lea
add
lock
add
fcomp
popa
inc
sub
iret
scas
loopne
fsub
xchg
xchg
pop
adc
loopne
test
gs
sub
mov
dec
add
rol
xchg
dec
adc
adc
adc
inc
adc
cmps
test
jg
mov
push
xchg
lea
jnp
or
gs
sbb
dec
das
and
aas
dec
push
and
push
inc
js
push
inc
or
(bad)
sub
or
nop
push
or
xor
cwde
add
pop
push
jecxz
push
xor
movs
and
enter
sbb
(bad)
pushf
add
pop
add
nop
add
sub
add
js
test
inc
push
sbb
mov
shl
fbld
out
adc
sub
push
inc
cmc
sbb
add
call
imul
adc
mov
xor
cmp
pop
inc
jp
out
add
lock
sub
cmp
mov
pop
outs
fadd
fsub
retf
add
adc
mov
add
(bad)
cmp
cmp
jg
mov
(bad)
or
inc
dec
pop
sub
int3
push
test
jne
sbb
adc
adc
xchg
data16
les
inc
popa
outs
arpl
ja
cdq
in
pop
mov
jmp
mov
mov
xor
push
in
sbb
cld
(bad)
rol
cmp
pop
push
or
mov
and
jmp
daa
xor
je
enter
inc
sub
sbb
inc
repnz
mov
sub
nop
movs
dec
jo
imul
cld
test
ss
aas
setne
dec
inc
pop
sub
sub
je
jecxz
add
dec
mov
inc
or
mov
push
fldcw
fst
in
sub
into
xor
jle
jl
test
mov
ret
aam
dec
in
xchg
ret
xchg
xor
ret
sti
je
test
mov
ds
cmps
sub
push
(bad)
stc
mov
sbb
lea
adc
inc
lock
cmp
mov
mov
shl
inc
jmp
inc
shr
mov
ja
dec
sbb
inc
dec
jne
mov
repnz
je
lods
add
movs
js
movs
mov
sub
and
outs
and
out
sbb
jg
and
mov
ins
addr16
sub
xor
xchg
sub
and
add
xor
jle
xchg
fisub
inc
push
call
push
popa
or
push
or
xchg
test
sub
cmp
test
pusha
add
adc
add
dec
mov
adc
pop
out
call
xlat
pop
jnp
stos
xchg
adc
out
inc
adc
not
movs
or
std
inc
imul
jmp
sbb
and
mov
or
pop
adc
test
into
sbb
push
add
mov
aas
add
shl
add
and
mov
inc
sub
jne
inc
scas
pop
push
fcmovu
xor
or
pop
xchg
enter
add
js
in
call
in
adc
push
enter
in
jns
fsubr
sub
add
das
retf
fcom
lea
inc
loopne
rcr
mov
xor
inc
pop
push
call
inc
mov
push
iret
test
out
fisttp
and
inc
xchg
mov
jbe
addr16
or
and
mov
std
push
imul
(bad)
pop
stos
add
sub
int
jge
xchg
add
sbb
xchg
call
rol
int3
xchg
(bad)
and
and
ja
rol
add
aas
loop
and
dec
xchg
(bad)
bnd
xor
rcl
mov
pop
outs
pop
inc
add
pop
add
in
push
lds
dec
fldcw
push
(bad)
enter
lods
inc
aam
push
inc
test
add
hlt
lea
dec
inc
xchg
add
or
das
jge
push
aaa
enter
not
jge
or
sti
ret
inc
inc
add
mov
int3
cld
clc
mov
push
sbb
inc
cmp
pusha
stc
jnp
arpl
clc
sbb
add
sub
ja
pop
or
inc
adc
sub
pop
out
mov
dec
xchg
push
scas
push
or
ds
aaa
and
or
sbb
add
push
inc
push
imul
mov
mov
inc
push
xchg
dec
sub
add
enter
leave
xor
enter
push
or
xor
hlt
test
push
mov
jo
loopne
in
lods
sub
jge
pop
arpl
in
call
add
mov
adc
lds
call
stos
add
jne
loope
xor
jmp
push
push
clc
xor
xor
lock
add
pop
mov
ret
sub
add
sbb
mov
mov
jmp
ss
inc
jnp
sub
inc
dec
test
jecxz
push
stos
in
lods
sub
mov
call
jecxz
push
loopne
and
push
add
jne
sbb
idiv
add
movq
cmps
add
outs
popf
in
add
rcr
mov
xor
add
pop
push
mov
and
fsub
inc
and
iret
(bad)
or
mov
add
mov
xchg
mov
cld
mul
imul
push
pop
leave
dec
jb
sub
dec
lock
nop
jmp
clc
jl
xchg
ss
js
rol
int3
pop
lock
jge
jle
jmp
fild
xor
mov
ins
ret
jge
fdivr
push
repz
je
pop
and
loop
inc
adc
test
mov
sar
dec
mov
xchg
mov
mov
mov
dec
or
lock
jae
push
sub
push
arpl
sub
pop
sub
inc
stc
clc
jne
jne
xor
ror
bound
dec
cmp
and
pop
xor
cwde
mov
(bad)
sbb
clc
mov
jnp
jmp
push
hlt
ss
sub
stc
call
clc
mov
jg
jp
fadd
sbb
jne
inc
inc
sti
fcmovb
or
or
bound
cdq
(bad)
loopne
xchg
xor
or
mov
add
and
stos
push
inc
pop
mov
adc
(bad)
inc
xchg
mov
adc
icebp
pop
lods
dec
dec
sub
xor
push
pop
in
fcomp
push
je
push
mov
imul
push
push
gs
cwde
push
cmps
add
adc
call
cmp
cmp
mov
xor
xchg
jmp
call
in
inc
stos
stos
xor
pop
mov
add
mov
in
mov
sbb
adc
jne
fistp
call
or
movs
xchg
in
and
rol
pop
test
lods
adc
cmp
xchg
or
fisttp
add
arpl
enter
adc
xor
ja
leave
push
jb
aaa
clc
add
xor
out
aam
js
or
add
arpl
inc
jg
gs
popa
ins
pop
fwait
cli
add
enter
push
je
mov
jne
pop
(bad)
mov
mov
xchg
jo
sbb
mov
pop
div
and
add
push
cmp
pop
push
(bad)
ffreep
aaa
xor
add
pop
(bad)
pop
and
cmp
or
push
sbb
scas
inc
rol
mov
movs
cli
add
inc
push
dec
inc
inc
push
inc
push
adc
enter
mov
jne
and
and
repnz
adc
push
pop
cwde
cmp
mov
jo
int3
push
sub
sbb
retf
adc
fadd
cmp
cdq
dec
dec
(bad)
jns
or
or
inc
js
adc
movs
inc
add
nop
out
rcl
jo
jl
ror
and
mov
push
or
int3
pop
test
sub
push
adc
mov
xchg
adc
test
imul
add
je
mov
nop
nop
push
sbb
jp
inc
ret
aam
nop
inc
add
cmp
xchg
mov
cmp
adc
dec
xchg
and
sub
nop
test
add
push
pop
adc
cmp
add
jo
ja
or
mov
push
pop
enter
jb
adc
js
pop
mov
cmp
pop
xor
(bad)
outs
push
jl
sub
xor
outs
syscall
rol
loop
or
ret
add
aam
ds
push
push
int
(bad)
sbb
or
push
and
push
or
in
inc
xor
stos
or
push
(bad)
and
call
mov
inc
and
ret
adc
sbb
ret
out
sbb
or
or
add
adc
cmovge
mov
push
or
adc
dec
shl
sbb
and
ss
pop
adc
pop
pop
ret
pop
and
arpl
push
lock
push
lea
add
push
add
mov
mov
push
push
ds
cmps
mov
fdivr
or
mov
pop
out
xchg
cmp
adc
popa
cmp
test
repz
mul
ret
inc
add
dec
push
push
dec
inc
inc
cmp
mov
into
mov
aaa
and
dec
pop
inc
push
dec
pop
and
jg
fstp
mov
sub
push
inc
dec
pop
dec
dec
dec
dec
push
(bad)
fadd
das
minps
arpl
and
cmp
jb
push
jb
test
push
jb
add
jns
add
inc
repnz
mov
nop
inc
nop
and
jb
jne
(bad)
and
jl
push
adc
inc
sub
cmp
xchg
xor
(bad)
and
and
jbe
cmp
clc
adc
xor
test
pop
(bad)
sbb
fdivr
test
ret
ret
lds
pushf
imul
xchg
icebp
popa
mov
(bad)
iret
idiv
jge
imul
or
add
mov
xchg
dec
into
icebp
lods
xchg
(bad)
punpcklbw
ror
inc
gs
outs
outs
sbb
jmp
outs
arpl
pop
rol
in
inc
pop
dec
fist
push
jmp
rol
std
nop
stc
jb
test
adc
sar
div
fucomi
mov
and
add
cmp
adc
dec
adc
stos
adc
or
jns
iret
xor
ja
mov
shl
aaa
push
push
sbb
cmp
jg
call
ret
mov
outs
or
and
or
jle
mov
add
push
pop
inc
add
add
ss
xchg
das
sub
outs
ins
and
adc
out
int
sbb
mov
dec
sahf
pushf
add
dec
jmp
fild
and
sbb
shr
sub
mov
push
test
pop
lock
or
xor
pop
enter
daa
adc
sbb
or
rol
and
jecxz
push
push
in
xor
ss
cmp
mov
loopne
dec
lock
enter
add
push
lds
and
xchg
ret
cmp
adc
outs
jmp
and
add
je
std
dec
xor
outs
cmp
sbb
call
jb
xor
not
xchg
jl
(bad)
dec
ret
inc
add
fild
adc
push
cld
cmp
dec
lock
add
inc
and
ds
jb
push
pop
add
pop
mov
mov
shl
push
sbb
dec
push
push
dec
inc
pop
cmps
lds
aaa
jns
pop
lods
add
in
and
pop
cmps
or
push
iret
cmps
(bad)
fwait
cmp
inc
sbb
mov
push
repnz
pop
pop
pop
jb
push
aam
jns
push
xor
(bad)
cs
lods
(bad)
pop
push
mov
jae
push
push
mov
repz
pop
rcl
iret
pop
adc
(bad)
pop
aaa
or
in
(bad)
in
xor
cmc
test
dec
mov
pop
mov
xchg
neg
sbb
dec
out
or
mov
pop
sbb
inc
push
add
push
mov
and
add
ins
dec
fiadd
scas
sub
adc
cli
push
mov
push
push
fistp
or
outs
jne
inc
gs
jo
imul
jae
push
mov
stos
cmp
out
adc
ins
movs
es
movs
adc
push
test
pushf
int
sbb
and
push
cmp
xor
ret
push
push
inc
push
xor
cs
dec
ret
nop
dec
fiadd
mov
cmp
jae
dec
pusha
xor
stos
jo
jg
pop
int3
rcr
add
int3
ins
sub
cmp
inc
push
dec
pop
mov
or
jne
cmp
push
add
adc
and
in
cwde
xlat
test
inc
push
or
aam
xchg
outs
aam
add
mov
sub
mov
inc
aad
fadd
mov
sbb
mov
add
(bad)
xor
and
jp
adc
das
mov
cmp
es
mov
jae
mov
outs
pop
ror
in
in
dec
repz
cmc
cld
add
test
fadd
jnp
cmp
mov
sbb
nop
cmps
jns
fmul
pusha
fadd
setns
out
pop
loopne
cmp
and
in
in
iret
jae
test
call
xor
in
xchg
pusha
in
sahf
inc
es
lock
out
or
hlt
cwde
icebp
out
jno
cmps
arpl
arpl
sbb
ins
scas
dec
mov
jmp
inc
fnsave
push
ficom
es
sub
pop
mov
add
or
enter
imul
inc
xchg
mov
(bad)
(bad)
mov
add
mov
and
pop
fisubr
loopne
jae
daa
jg
test
cmp
div
pop
mov
sbb
les
inc
jmp
sbb
xlat
jg
idiv
pusha
xor
imul
jo
popa
rol
mov
jne
jmp
jmp
das
je
push
outs
and
inc
daa
ins
mov
test
outs
outs
cmp
fld
les
sbb
push
xlat
sub
lea
push
push
retf
ror
(bad)
loopne
xlat
push
push
leave
out
add
out
push
dec
movs
fst
out
push
push
jbe
mov
push
in
mov
(bad)
or
nop
and
pop
das
push
pop
mov
xlat
add
sub
and
inc
cmp
dec
xlat
aad
enter
adc
push
push
sbb
push
ins
fnstenv
mov
sbb
push
(bad)
push
dec
push
aaa
outs
in
mov
push
int
mov
rol
imul
push
or
or
adc
xor
xchg
adc
bound
sbb
sbb
ret
inc
push
pop
and
or
xor
xchg
daa
dec
sub
inc
call
xchg
sbb
mov
mov
xlat
mov
jp
xchg
dec
lods
sub
dec
sub
loopne
cmp
mov
sub
call
rcl
ds
shl
test
int3
mov
bound
pushf
pop
dec
sub
add
es
jb
pop
leave
cs
adc
bound
push
sbb
sbb
xor
and
cmp
cmp
mov
adc
pop
mov
or
push
push
je
enter
pop
add
add
out
xchg
jmp
or
jg
or
jb
imul
or
and
enter
fs
ja
jne
adc
pushaw
add
and
lods
outs
fs
push
and
les
prefetchw
cmp
push
sbb
inc
xor
cld
mov
pop
rcl
mov
sar
dec
jns
cmp
inc
mov
call
or
ins
xor
xor
adc
aas
xor
gs
fbld
dec
and
ins
jbe
dec
fisub
fs
adc
out
sub
jnp
adc
(bad)
push
mov
arpl
mov
jnp
test
imul
or
push
fisub
das
fs
add
ja
push
adc
cmp
scas
(bad)
int3
popf
mov
fiadd
sbb
and
test
adc
add
push
inc
enter
fild
unpcklps
xchg
cmp
or
add
dec
daa
cmp
aam
les
cmp
in
(bad)
fsub
hlt
lock
sahf
gs
call
dec
cmp
int3
or
adc
sbb
pop
mov
add
push
push
popa
imul
dec
shl
aaa
aas
inc
dec
push
ja
sub
mov
gs
aaa
(bad)
sub
out
in
cmp
mov
add
add
xor
inc
(bad)
pop
in
push
hlt
(bad)
and
fsubr
test
sbb
call
jecxz
nop
mov
sub
icebp
repnz
inc
mov
add
movs
repnz
add
or
xor
xor
cmp
add
xchg
pop
clc
mov
jbe
fdivr
mov
ret
xchg
neg
adc
jbe
pop
(bad)
fstp
xor
adc
int
bound
or
fdivr
mov
test
mov
lea
clc
mov
xor
cmp
test
add
xor
or
add
jo
inc
nop
fwait
inc
push
mov
push
add
loopne
ins
cmp
inc
and
or
out
call
mov
add
call
test
sbb
popf
mov
inc
sbb
in
adc
mov
lock
and
fisttp
imul
fstp
xor
sub
mov
add
inc
daa
sbb
add
add
cmp
outs
or
xchg
nop
test
adc
or
jge
lock
xchg
or
jmp
adc
test
leave
sti
push
xchg
mov
loopne
rcl
and
mov
repnz
add
sbb
pop
or
ficomp
jmp
mov
mov
(bad)
neg
(bad)
mov
push
xor
sub
pop
and
push
and
push
jbe
push
cmp
jne
mov
sbb
push
mov
clc
or
ins
cmp
pushf
push
cmp
jnp
push
aam
enter
dec
arpl
jbe
aad
add
dec
cmp
adc
(bad)
sbb
or
push
outs
mov
push
movs
jle
adc
xchg
pop
jg
push
shl
fwait
sbb
adc
cdq
sub
pop
xor
push
cmc
push
add
xchg
clc
aam
mov
fs
bndldx
rcr
scas
aad
int3
mov
leave
mov
or
xchg
icebp
jnp
(bad)
or
movs
jo
fisttp
lea
cmp
scas
ins
adc
or
dec
jne
mov
jl
cmp
adc
sub
xchg
mov
fnstcw
sbb
jge
lock
add
sbb
and
mov
xor
call
cmps
xor
push
sub
mov
loopne
fstp
ds
push
int
mov
cmps
or
cmp
sar
out
jns
sub
mov
mov
lods
pop
ins
jl
aaa
add
lock
pop
fadd
das
lea
inc
fadd
pop
adc
sbb
daa
mov
ficomp
sbb
pop
xchg
dec
add
sub
add
loop
jge
cmp
mov
add
das
fdiv
cmp
dec
call
add
xor
in
sbb
fadd
test
ret
fadd
dec
mov
dec
ins
xor
in
(bad)
fmul
gs
outs
adc
lds
loopne
idiv
sub
dec
fs
movs
jbe
dec
and
push
nop
in
repnz
aam
shl
push
call
xor
call
pusha
enter
iret
jae
js
jo
or
jg
jp
jne
mov
js
jmp
inc
inc
test
inc
scas
jmp
in
js
dec
mov
mov
push
ret
cwde
push
mov
sbb
inc
call
call
imul
(bad)
jae
dec
enter
lock
xchg
sbb
outs
fldcw
push
call
and
add
sbb
jl
sbb
loope
xor
aaa
pusha
leave
loope
in
out
xor
sbb
xchg
cmp
xor
add
pop
stos
fidiv
or
dec
clc
je
mov
jne
and
sar
or
in
movs
in
push
jne
inc
sub
lahf
jne
jae
pop
inc
movs
add
cld
iret
sti
daa
int
cld
(bad)
dec
je
or
das
or
in
(bad)
sub
je
jmp
xchg
push
mov
neg
std
jmp
sbb
lds
ret
push
jle
mov
and
or
int3
ret
adc
cmc
and
scas
and
shr
and
adc
inc
scas
jmp
and
rcr
cmp
jne
sbb
xchg
cdq
nop
ja
jecxz
adc
nop
or
ret
mov
xor
pop
(bad)
(bad)
movs
cmp
es
jae
cmc
imul
mov
arpl
and
push
fldenv
lea
cs
std
je
cmp
call
sub
and
pop
sub
or
jo
icebp
dec
popa
jae
push
cmps
scas
es
or
mov
pop
cmp
shl
(bad)
jg
mov
mov
or
mov
scas
jmp
sub
mov
idiv
jno
cmp
jne
aas
dec
inc
jne
xor
dec
mov
std
adc
loopne
push
mov
cmp
(bad)
fbld
cmp
jl
pop
call
push
xor
xlat
inc
cmp
dec
and
cmp
(bad)
mov
pop
jmp
loop
das
xchg
or
jmp
mul
lahf
inc
and
sbb
add
add
dec
adc
xor
or
neg
add
adc
cwde
mov
pushf
ret
pop
xchg
xchg
xchg
xor
inc
stos
mov
(bad)
daa
(bad)
(bad)
inc
cmp
jne
or
jmp
cmp
jne
jge
das
ud0
and
cmp
pop
das
(bad)
cmp
sbb
pop
aaa
(bad)
cmp
or
push
std
and
add
ret
mov
add
int3
sbb
add
or
(bad)
mov
adc
sbb
or
xchg
(bad)
adc
and
mov
push
ret
stc
push
xchg
sbb
inc
dec
jmp
shl
ret
cmp
pop
movs
cdq
xor
mov
add
scas
leave
(bad)
in
inc
or
aaa
retf
xor
imul
pop
js
iret
add
sti
inc
and
dec
mov
test
cli
xlat
in
sub
popf
or
xor
arpl
mov
enter
and
mov
(bad)
fmul
test
cld
sub
loopne
test
popa
cmp
jge
in
sub
pop
fstp
mov
inc
sbb
xchg
mov
inc
or
dec
cwde
mov
mov
xor
hlt
mov
sbb
add
enter
mov
in
sub
jmp
clc
adc
add
and
add
icebp
sub
movs
enter
test
les
push
(bad)
cmps
cwde
sbb
push
mov
scas
inc
mov
iret
fcomp
mov
or
pop
and
(bad)
sti
push
js
rol
inc
sar
pop
stos
dec
(bad)
jle
and
neg
test
cmp
or
xchg
or
je
adc
push
ins
and
add
sahf
test
rcl
(bad)
(bad)
imul
adc
jns
xchg
jbe
sub
sub
mov
add
mov
dec
sbb
xor
setb
jmp
push
xor
jbe
dec
adc
je
add
cld
or
mov
pop
mov
push
mov
iret
pop
call
sbb
mov
mov
ds
sbb
ins
pusha
test
gs
shl
mov
and
rcl
(bad)
in
cmp
jge
stos
jmp
xor
mov
test
or
cs
loop
cmp
(bad)
clc
sbb
add
into
jo
lods
push
dec
ins
mov
fdiv
dec
and
and
pop
ret
xchg
ret
(bad)
fiadd
mov
cli
loope
jne
push
xchg
sub
adc
mov
es
idiv
xor
adc
pusha
dec
out
fiadd
sbb
add
shr
xor
scas
inc
sub
xlat
sbb
inc
pop
inc
push
in
sub
adc
jbe
jns
call
outs
add
mov
push
(bad)
ds
sub
xchg
mov
dec
mov
jne
enter
loopne
gs
jnp
not
dec
sbb
fadd
dec
adc
or
fwait
popa
mov
jb
push
or
and
outs
nop
and
neg
fadd
dec
xor
nop
cmc
cmp
adc
iret
xchg
into
ror
or
ret
mov
add
mov
iret
bound
or
xchg
and
mov
or
aaa
inc
adc
inc
lea
inc
call
in
loope
or
and
cmps
xchg
cmps
out
cmp
call
mov
push
(bad)
loopne
mov
pop
popa
ins
pushf
movs
xor
pop
(bad)
out
jge
add
sub
fcomp
and
mov
inc
mov
fcom
(bad)
jo
xchg
inc
dec
je
jl
mov
adc
and
adc
pushf
push
adc
outs
sbb
in
dec
mov
test
jne
mov
add
mov
xor
mov
sub
sub
dec
jne
jno
inc
dec
xlat
fnstenv
jo
jmp
(bad)
outs
or
outs
pop
adc
nop
int
sub
adc
pop
(bad)
imul
add
nop
mov
add
fld
test
add
fld
or
in
mov
push
fisub
or
cmps
push
add
dec
or
in
push
lods
add
or
ins
dec
cld
xlat
or
cmp
push
pop
adc
mov
mov
cdq
inc
or
pop
repnz
or
dec
rcr
dec
test
push
push
dec
fs
cs
dec
popa
sbb
jns
sbb
push
xor
int3
inc
push
pop
cmp
pop
adc
sub
loopne
jbe
loop
outs
inc
ins
jbe
jp
or
popa
jmp
or
imul
ins
dec
neg
fistp
sbb
sub
xchg
fs
xchg
lock
ja
xchg
dec
dec
and
ficomp
inc
imul
or
sbb
dec
jo
iret
sbb
adc
dec
outs
imul
sub
lock
loope
les
mov
or
push
or
pop
ss
loop
ror
or
mov
adc
(bad)
fldenv
sbb
jo
jge
jne
movs
call
xchg
xor
inc
inc
jbe
push
mov
add
addr16
je
cmp
or
popa
addr16
mov
push
mov
addr16
inc
push
in
mov
mov
mov
lock
inc
inc
and
cmps
scas
mov
scas
lods
xchg
push
mov
leave
xchg
ds
pusha
test
or
mov
pop
scas
cmp
xorps
mov
mov
mov
test
inc
push
push
inc
jno
test
jne
nop
adc
sbb
out
mov
or
xchg
outs
mov
aaa
sbb
iret
pusha
iret
les
les
jae
sbb
aas
push
loopne
or
adc
xor
fimul
imul
mov
adc
inc
das
movs
pop
push
mov
out
in
daa
mov
add
adc
cmovg
pusha
mov
xor
mov
das
xchg
cmp
mov
retf
xchg
xchg
mov
movs
adc
cmp
mov
push
or
pop
ins
add
cmc
ins
add
ds
js
or
jb
pop
mov
jmp
ror
pop
add
push
push
es
push
add
ss
pop
add
pop
sub
(bad)
inc
and
or
jmp
sbb
or
inc
dec
pusha
or
dec
imul
hlt
int3
int3
int
fild
in
mov
or
adc
mov
xchg
fcmovb
lods
or
add
int
xchg
mov
adc
dec
or
ins
jg
cmp
cmp
xor
cmp
sbb
loopne
ss
aad
pop
dec
push
or
je
fld
cmp
pop
lock
cmp
pop
mov
sti
adc
fnstcw
mov
aam
ficomp
adc
sbb
fidiv
add
push
inc
rol
or
add
mov
add
adc
push
lock
(bad)
cld
(bad)
sti
push
clc
ds
push
or
xchg
or
pop
and
sbb
lods
push
or
enter
mov
test
dec
sbb
mov
mov
adc
push
lock
adc
dec
in
inc
xor
lea
sub
jbe
and
cmovns
call
xor
pushf
jae
push
rcl
sahf
cmps
into
inc
mov
stc
scas
cmp
je
cs
or
hlt
push
adc
pop
push
dec
or
push
adc
(bad)
call
(bad)
nop
out
(bad)
sbb
inc
int3
xchg
in
dec
call
jmp
sbb
mov
xchg
aas
lock
jp
or
push
xchg
nop
scas
pop
sbb
jne
xor
nop
pop
jmp
fimul
test
pop
fdiv
fidiv
pop
pop
aam
mov
gs
les
cmp
pop
jbe
shl
ins
ficomp
pop
add
pop
inc
mov
pop
inc
sub
push
mov
pop
imul
push
loopne
xor
lock
test
pop
and
test
(bad)
das
cwde
nop
add
mov
xchg
mov
(bad)
iret
in
(bad)
mov
sub
push
ficom
push
das
iret
push
fbld
or
dec
(bad)
pop
cmps
xchg
nop
xor
sahf
push
call
mov
push
fimul
fisttp
jbe
sti
lods
jmp
out
pop
and
or
mov
aaa
fsubr
in
adc
add
sbb
xchg
adc
mov
fcom
sub
dec
gs
call
xchg
nop
adc
pop
and
fisubr
(bad)
in
jo
mov
fst
repz
inc
in
popa
(bad)
in
test
pop
inc
hlt
fistp
(bad)
test
loopne
push
push
repz
or
fs
es
adc
fs
sbb
inc
es
and
daa
adc
imul
mov
sub
push
mov
dec
(bad)
xchg
movs
sbb
xor
inc
push
pop
ins
jnp
enter
xchg
adc
cmp
cs
add
inc
cmp
mov
faddp
cmp
cmp
js
fs
shr
enter
in
clc
or
push
xlat
dec
pop
adc
rol
les
pop
movs
push
cmps
add
inc
push
jnp
sub
fistp
bnd
mov
loopne
mov
pusha
ins
jne
pop
push
xchg
retf
dec
imul
in
mul
jl
or
cmp
(bad)
xor
xchg
push
enter
in
loope
inc
scas
call
push
inc
ins
aaa
mov
neg
and
xchg
fisub
imul
pusha
pop
daa
fild
or
or
fstp
dec
push
les
inc
div
dec
xchg
sub
test
sub
je
aas
daa
call
inc
lahf
aam
or
or
jno
dec
loope
xchg
or
clc
jg
les
pop
call
rcl
stos
mov
test
pop
cmp
scas
sahf
ret
push
add
mov
fadd
mov
das
jo
nop
inc
aam
pop
xchg
fs
cdq
add
jbe
xor
cmp
call
pop
xchg
test
xchg
pop
inc
(bad)
int
dec
add
sub
in
ins
xchg
dec
jl
sub
pop
xchg
neg
cmp
inc
les
add
mov
xor
imul
fcomip
pop
or
hlt
push
shl
add
push
fs
sub
addr16
and
das
mov
clc
(bad)
jg
xlat
add
(bad)
stc
(bad)
clc
push
push
push
push
push
push
shl
lock
int3
xor
rcr
sahf
shl
fcomp
call
(bad)
test
les
pop
aam
push
movs
in
mov
stos
push
(bad)
pop
and
mov
sub
adc
(bad)
dec
mov
sub
pusha
or
cmp
cdq
mov
add
jo
rcl
inc
(bad)
ds
pop
imul
add
outs
cld
xor
mov
mov
es
ror
sbb
(bad)
lock
cmp
les
das
xchg
xchg
adc
jo
call
cmp
push
push
cwde
ins
mov
ss
sub
push
jge
loop
ret
mov
popf
add
xchg
outs
hlt
push
xor
push
imul
push
movs
shl
(bad)
in
dec
pop
mov
pop
nop
dec
inc
sub
xchg
push
aam
cmp
jne
and
movs
je
out
movs
xor
sub
or
cmp
mov
fwait
cmps
aas
cmps
pop
jo
xchg
test
pop
adc
ja
dec
pop
aas
inc
sub
xchg
or
or
xor
xor
cwde
add
xor
mov
sbb
inc
xor
and
and
dec
pop
call
out
mov
je
das
mov
xchg
jmp
and
inc
and
push
cli
dec
jne
mov
jg
mov
or
or
sbb
inc
inc
ins
push
adc
fcomp
cli
aaa
popa
int
or
mov
jmp
sbb
adc
add
pop
(bad)
add
inc
inc
push
sbb
dec
sar
or
push
jnp
cmp
ret
loopne
jl
jae
clc
pop
mov
xchg
and
std
sbb
sub
cmc
push
nop
or
adc
or
cmp
sub
pop
mov
inc
jg
sbb
call
cmc
ffree
clc
xchg
add
ins
les
mov
data16
iret
push
push
push
and
pop
dec
sub
pop
pop
jecxz
nop
or
inc
or
jnp
sub
sbb
lds
loope
je
aad
jo
cs
add
movs
xlat
(bad)
mov
cdq
(bad)
cld
mov
sbb
stc
jg
xchg
cld
cmp
sub
push
loopne
fldenv
icebp
sbb
cmp
adc
stc
mov
add
(bad)
dec
or
nop
test
mov
dec
shl
or
pusha
test
imul
xchg
sub
xor
jg
push
fucompp
adc
sbb
inc
js
cmp
xchg
movs
rol
or
mov
fnsave
das
adc
push
imul
inc
mov
sub
retf
dec
sub
popa
add
and
or
mov
ja
or
mov
imul
movs
movs
stos
cmp
dec
mov
dec
and
pop
sub
mov
pop
jecxz
je
sbb
jno
popa
std
push
rcl
fwait
lea
inc
push
popa
icebp
push
pop
aas
cli
cmp
push
mov
mov
lock
cmp
sbb
add
in
xor
push
push
lea
dec
push
xchg
mov
cli
sub
mov
sbb
popa
dec
sub
dec
jne
and
mov
mov
and
xchg
and
push
mov
inc
or
lock
and
sub
fild
jmp
rol
mov
xor
imul
fcompp
dec
mov
xchg
dec
mov
dec
(bad)
mov
mov
push
enter
popf
mov
or
outs
mov
or
sub
mov
xchg
or
pop
in
jg
add
adc
mov
mov
nop
sbb
movs
xchg
mov
or
scas
mov
lock
out
jae
shl
cmps
in
xor
xor
mov
je
inc
or
push
imul
and
push
inc
imul
icebp
jecxz
mov
aad
pop
push
xor
cmps
dec
sub
jecxz
int
xchg
je
mov
pop
sbb
retf
lahf
ror
pop
add
and
inc
aaa
mov
retf
out
daa
sub
fiadd
sti
jne
mov
sbb
in
int
push
jo
int3
ror
scas
je
jl
gs
mov
and
sti
jmp
and
sbb
cmc
mov
test
mov
xor
movs
hlt
push
mov
xor
scas
ret
add
xor
cmc
mov
mov
pop
popa
push
out
push
je
mov
sub
inc
cmp
pop
dec
jae
sbb
pop
adc
test
sub
jmp
adc
mov
or
imul
sub
mov
sub
sbb
pop
sub
jmp
sub
loop
cmp
and
ret
cs
adc
add
or
cmp
push
push
mov
or
or
lods
enter
lock
push
adc
fcom
sub
push
js
xchg
jbe
fnstsw
nop
inc
icebp
(bad)
inc
add
pop
mov
fsubr
sbb
aam
mov
sbb
jmp
(bad)
je
ja
rol
outs
sbb
cmp
or
(bad)
cmps
lds
test
es
xchg
mov
sub
add
popf
ja
dec
pop
mov
jle
push
ret
es
mov
sub
shl
cld
mov
cmp
fldenv
adc
push
inc
add
or
int3
and
dec
or
dec
push
add
pop
dec
aas
push
retf
pop
pop
loope
stc
loopne
cwde
xor
cmp
mov
pop
pop
xor
cld
cmp
add
test
ret
pop
mov
add
or
sub
or
in
in
das
test
add
sub
pop
pop
mov
push
outs
cmps
push
or
add
dec
cld
je
imul
inc
div
cwde
sub
cmc
add
add
add
adc
add
sbb
push
and
or
sub
pop
add
js
leave
dec
xchg
imul
mov
(bad)
mov
popa
mov
pop
lahf
push
jp
je
rol
fiadd
xor
fmul
cmp
pop
adc
sbb
push
rcr
(bad)
call
inc
ror
jecxz
and
pop
ja
or
inc
(bad)
jo
(bad)
call
lea
jne
pop
shl
push
mov
add
popa
(bad)
in
fld
xchg
dec
push
xor
mov
inc
into
mov
aam
daa
rcl
ror
loopne
push
cmc
cmp
sub
stos
sub
pop
les
add
jg
int3
push
sub
fdivr
mov
sbb
jno
cmp
jge
in
sbb
add
sbb
pop
mov
mov
ins
or
out
mov
mov
push
xor
inc
int
inc
cmps
leave
mov
push
or
dec
mov
push
add
jne
aaa
shl
pop
pop
xchg
scas
cld
shl
fnstenv
lock
pop
es
cmp
je
sbb
aaa
xchg
jp
sbb
pushf
cmp
inc
das
outs
cmc
psrld
mov
push
retf
adc
pop
fcom
or
dec
and
jmp
mov
xchg
sub
push
add
jge
iret
add
mov
inc
add
icebp
or
shl
not
add
jmp
fs
dec
push
lods
test
push
cmp
das
(bad)
js
data16
cdq
sub
ja
pop
mov
loope
xor
push
cmp
enter
rol
shr
and
adc
sbb
jp
xchg
in
scas
jge
hlt
xor
sub
scas
jb
sbb
call
fisub
out
into
sbb
pop
xor
sbb
scas
and
push
das
cmps
dec
sub
xor
popf
movs
scas
pop
fst
or
push
arpl
test
dec
cli
lods
ja
adc
add
cdq
pop
nop
les
pop
jne
cmp
call
je
push
xor
int
push
adc
mov
sub
clc
pavgb
adc
and
test
pop
inc
icebp
aas
push
sub
jae
add
inc
adc
dec
or
lods
inc
movs
or
leave
xor
stos
outs
add
push
push
(bad)
push
mov
push
lods
adc
pop
inc
mov
push
mov
les
adc
fiadd
ret
popa
dec
lock
xchg
and
sub
enter
in
hlt
fucom
lea
or
dec
aam
mov
add
dec
xchg
lock
pop
ret
xlat
xor
bound
fcom
push
rol
iret
xchg
(bad)
test
ss
(bad)
ins
fmul
and
pop
je
push
inc
ss
jb
mov
outs
jnp
movs
and
add
(bad)
mov
imul
inc
or
mov
and
and
mov
stos
sub
(bad)
xchg
cmp
jle
mov
ror
adc
xchg
loope
(bad)
bound
retf
aad
lock
cmp
sub
dec
or
pop
add
adc
cmps
push
lock
sbb
leave
inc
shl
jle
cmps
mov
push
movups
ror
and
js
xlat
mov
cmp
fs
div
xlat
call
add
mov
fisub
push
mov
enter
or
xchg
or
dec
push
mov
shr
add
jae
inc
outs
jbe
or
cs
in
cmp
and
mov
xor
xor
xchg
mov
data16
sbb
(bad)
jo
ins
inc
mov
int3
pop
add
mov
jns
jle
mov
adc
test
pop
push
mov
add
rol
xchg
lods
dec
dec
loopne
cld
aas
popa
call
std
jg
dec
es
jne
fisttp
aas
es
pop
sub
dec
adc
cwde
gs
and
jne
inc
psubb
xor
bound
shl
loopne
je
cmp
mov
push
ja
xor
xor
loop
fnsave
dec
lea
jmp
rol
cmp
mov
xchg
inc
jne
std
(bad)
imul
push
dec
mov
dec
loope
into
mov
push
or
inc
ja
inc
cmp
xor
pop
aaa
dec
sub
enter
dec
lea
sbb
or
xlat
adc
aam
push
dec
pop
adc
xchg
mov
movs
push
xchg
add
je
mov
cmp
add
pop
pop
cmps
xor
xor
pop
mov
int
mov
icebp
fimul
idiv
ret
mov
loopne
lods
xor
aas
mov
std
fwait
clc
shl
sbb
call
or
push
stos
xadd
inc
cs
jo
jne
add
es
int3
add
mov
lahf
add
aad
inc
(bad)
sar
adc
(bad)
popa
popa
cmp
jae
dec
or
je
cli
nop
cmc
std
stos
adc
btr
cmp
sbb
dec
scas
push
push
push
inc
adc
pop
jmp
ret
push
jae
fwait
cs
bt
sbb
sub
call
(bad)
repnz
inc
cmp
cld
mov
fnstsw
adc
je
sbb
jg
push
loope
add
mov
jb
(bad)
add
jmp
jl
(bad)
sar
mov
push
inc
cmp
jne
inc
xor
les
sub
pop
arpl
mov
push
mov
add
aas
and
sub
sub
pop
mov
adc
les
xor
cmp
mov
lock
test
add
mov
sub
or
pop
repnz
inc
pop
mov
adc
or
xchg
inc
lea
cld
outs
imul
jb
push
mov
jecxz
or
xchg
dec
sub
fnstcw
mov
sbb
push
jg
and
pushf
xor
pop
ja
add
pop
ror
mov
add
push
cmp
and
or
mov
or
xor
jne
xchg
or
outs
cmp
enter
pop
rol
or
push
xor
ss
nop
rcl
add
jns
add
pop
dec
or
mov
sub
inc
dec
pop
and
mov
jne
(bad)
es
jne
cmp
test
sbb
inc
cmp
adc
push
push
sti
shr
int
sub
daa
push
push
adc
sbb
push
sub
dec
add
xchg
ficomp
cmps
movs
out
push
dec
pop
mov
es
mov
xchg
fwait
retf
retf
add
adc
pop
movs
xchg
cmp
mov
dec
das
mov
sub
or
cld
pop
and
ins
mov
popa
jnp
inc
add
add
push
dec
push
sbb
mov
addr16
sbb
jmp
jne
pop
cmps
xor
int3
or
(bad)
shl
es
xlat
adc
add
xor
or
addr16
cmp
in
popf
mov
sub
xor
pop
loopne
mov
stos
les
imul
sar
jmp
jmp
xchg
sbb
in
in
xchg
jae
mov
out
fsub
pop
movd
xchg
(bad)
adc
and
lock
movs
mov
sar
mov
jg
add
mov
mov
sbb
(bad)
push
in
mov
xchg
jne
cmp
pop
sub
mov
fst
hlt
les
mov
aam
lods
mov
inc
mov
dec
fs
xor
dec
in
sub
dec
add
jmp
ret
cmc
push
cmp
push
pop
pop
jecxz
dec
iret
fcmovb
xchg
pusha
mov
pop
ret
mov
mov
seta
pop
and
mov
ss
mov
ror
inc
inc
mov
popa
scas
and
out
and
(bad)
je
loopne
nop
inc
dec
and
enter
nop
push
mov
(bad)
mov
xchg
sbb
xlat
jl
inc
fsubrp
mov
pop
test
pop
or
xor
pmulhw
sbb
mov
dec
or
lods
xor
call
rcr
xlat
xchg
in
fcomp
rol
mov
nop
mov
xor
dec
pop
repnz
jmp
mov
sbb
daa
and
test
add
scas
or
add
mov
(bad)
psubb
test
stc
(bad)
mov
popa
punpckhwd
push
adc
jmp
adc
sub
cmp
mov
rdmsr
je
rcr
jns
sbb
int
and
push
xor
xor
movs
xor
call
cdq
daa
ins
leave
mov
rol
add
push
clc
inc
jp
inc
int3
movs
xor
sub
and
mov
pop
jne
sbb
cwde
fs
push
je
jg
jne
es
push
sbb
inc
dec
and
pop
xchg
iret
adc
bound
jmp
mov
popa
in
inc
mov
pushf
das
(bad)
mov
jmp
adc
shr
push
icebp
cmp
ja
xchg
out
adc
inc
mov
ror
fwait
sbb
in
adc
and
iret
dec
push
xchg
sbb
push
push
sbb
je
sub
fldenv
mov
dec
pop
addr16
mov
mov
mov
sub
sub
in
jae
sbb
nop
loopne
mov
mov
repz
jg
nop
pusha
shr
aaa
int3
push
adc
and
js
sbb
push
sbb
addr16
add
ret
xor
cmps
cli
pusha
aaa
jmp
aam
sahf
mov
pop
dec
(bad)
int3
and
stos
add
aaa
pop
out
test
xlat
ret
sub
clc
repz
gs
jge
sub
dec
jmp
mov
mov
test
pop
(bad)
call
mov
gs
cmp
pop
xchg
ins
les
mov
mov
or
add
pop
ret
(bad)
dec
add
pusha
bound
pop
pop
inc
fiadd
adc
push
add
(bad)
(bad)
mov
cmp
pop
leave
jo
mov
adc
test
fimul
dec
sub
cs
inc
sub
addr16
dec
push
outs
mul
(bad)
dec
clc
rol
test
and
test
lds
sbb
adc
jmp
adc
les
inc
js
mov
mov
xor
dec
scas
in
xor
mov
mov
xchg
pop
cmp
xchg
in
xor
lock
dec
cmp
push
in
pop
or
shl
sar
(bad)
in
sub
shl
adc
push
enter
in
ror
add
popa
fdiv
pop
xchg
iret
leave
mov
add
pop
jnp
sar
push
push
inc
lock
hlt
ss
pop
(bad)
pop
repnz
jbe
sub
adc
enter
add
inc
stos
sbb
shr
fsub
pop
fisub
xor
and
and
inc
jb
inc
arpl
push
and
inc
jg
ret
xchg
adc
imul
push
(bad)
hlt
add
stos
movs
pinsrw
enter
pop
loopne
inc
add
add
(bad)
mov
adc
imul
(bad)
mov
add
shl
inc
xor
xchg
xor
sbb
pop
jns
push
addr16
adc
add
add
lea
push
or
sbb
push
es
fmul
fcomp
stos
sbb
xchg
cmp
xor
in
and
mov
ret
cmp
push
out
popa
faddp
ret
shl
xor
xor
lods
push
pop
add
in
pop
adc
mov
(bad)
jmp
sub
aam
sub
fsub
inc
dec
jne
jg
ret
loop
retf
cmc
ins
jmp
stc
lods
movs
jns
mov
hlt
leave
adc
lock
outs
sub
mov
push
adc
mov
enter
xor
fdiv
lock
dec
add
inc
sub
or
sar
lock
cwde
add
pop
inc
pop
xchg
ss
and
mov
bound
mov
pop
jnp
cmp
shl
dec
iret
pop
sbb
addr16
dec
lock
inc
pop
and
jg
cwde
mov
adc
ss
rol
aas
test
out
cmp
je
inc
out
add
shl
cs
pop
lock
xor
repnz
or
clc
xchg
pop
gs
retf
xchg
inc
sbb
jae
mov
ins
xlat
or
jl
jo
sahf
ins
xchg
mov
(bad)
cmc
xchg
arpl
or
add
retf
or
mov
out
lock
lock
into
or
push
imul
mov
movs
adc
push
jmp
and
sbb
loopne
popa
fnstenv
cmp
xor
stos
rol
mov
mov
bound
dec
push
dec
cmps
pusha
mov
and
cmp
push
mov
add
adc
push
and
imul
and
xor
jbe
fwait
int3
xor
xacquire
pop
std
jns
mov
pushf
cmp
dec
aad
pop
int3
add
nop
cmp
dec
cmps
in
pop
int
call
int
popa
test
xchg
out
mov
ror
mov
aaa
outs
sub
int
mov
pop
cs
cmp
fwait
or
lea
(bad)
call
mov
inc
shl
shl
mov
cmp
xchg
add
dec
and
adc
lahf
cmc
cmp
pop
mov
add
mov
fucomp
cmp
je
mov
or
or
ret
inc
stos
scas
hlt
or
mov
pop
or
jb
cmp
cmps
into
ret
into
je
mov
iret
sbb
inc
push
push
iret
(bad)
and
sahf
xor
das
xor
push
push
popa
push
das
fwait
ret
xchg
pop
(bad)
xor
or
mov
iret
push
mov
sub
bound
jl
fcmovnbe
loope
clc
push
cwde
push
mov
sbb
adc
or
sbb
ins
pop
rcr
lods
push
add
jne
jo
popf
mov
test
js
mov
mov
popa
(bad)
out
adc
rcl
xchg
out
add
jno
jnp
fild
pop
add
bound
lahf
jmp
mov
repz
xchg
mov
sbb
inc
sbb
add
arpl
fnstcw
mov
mov
ret
test
add
bound
out
adc
and
ror
mov
sub
jecxz
mov
clc
adc
sar
cld
(bad)
xchg
test
dec
adc
fsub
pop
inc
mov
adc
daa
or
test
jo
and
aam
les
dec
add
lock
rcl
mov
inc
(bad)
cmp
xor
jmp
lock
cld
inc
inc
mov
ror
mov
dec
or
pop
outs
xchg
lock
jg
or
mov
cmp
or
je
jg
mov
(bad)
jmp
or
push
adc
push
push
lock
push
retf
jge
lea
jmp
les
mov
jne
add
or
sbb
repz
in
and
jle
pop
mov
mov
rcl
dec
add
dec
mov
dec
cmps
(bad)
outs
data16
lahf
dec
pop
adc
aas
aam
or
dec
push
sbb
push
stc
cmps
jo
popa
mov
(bad)
mov
mov
je
cmps
call
scas
mov
jb
sbb
jne
add
icebp
push
test
fnsave
pop
mov
add
jle
fimul
movs
sub
sub
add
jg
loope
loope
or
sbb
or
inc
mov
rcl
jns
into
mov
dec
push
fisub
enter
xchg
repnz
push
add
mov
lds
mov
imul
dec
xor
inc
hlt
shr
xor
xor
ins
lea
dec
(bad)
mov
xchg
jl
cmp
sub
pop
lock
cli
out
push
xchg
jne
adc
jne
xchg
inc
sbb
jge
sbb
jle
pop
clc
popf
imul
popa
hlt
jl
adc
test
sbb
lea
sbb
cmp
pop
sbb
adc
ja
add
or
out
and
inc
jecxz
loope
jne
sub
sahf
stc
retf
or
jmp
fadd
mov
xchg
inc
mov
xor
sets
or
jle
push
inc
add
add
or
and
cmp
xchg
add
cmp
cmps
dec
dec
jmp
mov
xchg
push
es
dec
or
call
mov
xor
xlat
ss
mov
jno
mov
sub
fwait
call
out
push
sub
pusha
lods
lods
add
sar
cmp
imul
xor
pop
jmp
jl
and
xchg
adc
jbe
and
xchg
or
adc
adc
mov
fcomp
xchg
movs
call
cmp
push
aas
dec
cld
adc
inc
mov
in
lock
xor
jo
pop
loopne
daa
and
scas
in
test
daa
and
add
or
lds
and
cmp
add
add
into
jne
sbb
(bad)
cmp
mov
xor
dec
mov
call
push
mov
les
pop
adc
stos
sbb
clc
jecxz
or
add
retf
mov
adc
and
aam
fldenv
pop
mov
or
enter
iret
mov
mov
outs
or
icebp
mov
sub
add
push
or
push
pop
xor
jo
inc
(bad)
mov
(bad)
nop
push
lds
or
push
add
ins
sub
or
add
mov
jmp
aad
xchg
shl
je
add
in
nop
fnstcw
out
pop
cs
cmp
or
add
ja
jne
xor
mov
in
enter
xchg
mov
rcr
ret
cdq
sub
adc
cdq
loopne
push
mov
xor
mov
sub
adc
fimul
movs
push
xchg
lea
sbb
fisub
ja
test
les
lods
push
ret
mov
and
iret
sbb
icebp
ftst
movs
add
fsub
jg
add
(bad)
xor
mov
mov
aaa
mov
xchg
cmp
inc
add
pop
in
fidiv
in
inc
gs
xor
inc
sub
mov
xchg
enter
pop
daa
adc
and
sub
xchg
test
xchg
xchg
cmp
sar
add
data16
add
xor
retf
mov
stos
or
js
loope
arpl
and
dec
add
jle
test
or
retf
push
loopne
xchg
mov
and
or
sbb
lods
jmp
movzx
sbb
mov
dec
or
sub
jno
test
add
inc
adc
nop
mov
or
stos
(bad)
fnstcw
frstor
sub
jae
sub
inc
ins
mov
add
add
sbb
xchg
scas
adc
or
dec
or
adc
add
out
ins
fcom
sbb
mov
loop
int
icebp
mov
mov
or
jne
test
lock
mov
jb
inc
stos
fist
out
scas
dec
bound
mov
addr16
or
pop
mov
add
xor
jge
add
sbb
sub
or
rol
test
dec
sbb
pop
push
and
ret
or
sti
pop
dec
cmp
je
push
mov
inc
lods
pop
inc
jns
jno
cmc
adc
push
outs
inc
cs
jb
movs
or
sub
adc
jo
jne
call
adc
inc
icebp
lds
push
and
inc
cmp
scas
mov
(bad)
jne
cmp
jle
or
jge
lock
or
or
add
push
loop
add
xchg
push
cmp
mov
in
push
(bad)
mov
add
test
xchg
jo
(bad)
pop
jnp
and
sub
dec
push
clc
les
fbstp
add
out
imul
rol
fwait
out
aas
mov
sahf
or
adc
test
inc
sahf
mov
push
push
not
test
inc
mov
bound
jnp
adc
mov
push
push
pop
stc
mov
jb
mov
pop
sbb
mov
clc
retw
inc
sbb
jmp
cmps
inc
movs
pop
jp
(bad)
sbb
inc
or
ret
add
scas
inc
xor
or
daa
and
dec
mov
loop
pop
daa
ret
inc
add
ja
(bad)
loope
push
cs
imul
nop
jl
out
sub
cmp
test
or
mov
sub
aas
popf
adc
mov
or
inc
sub
and
sub
adc
sbb
imul
popa
fsubrp
lods
stos
mov
inc
cs
std
mov
jmp
(bad)
jmp
out
mov
lea
sar
int
sbb
movs
rol
add
adc
ss
mov
lahf
mov
leave
add
cs
sbb
mov
add
add
push
aaa
mov
mov
sub
or
push
fiadd
aas
push
dec
pushf
push
mov
or
popa
add
inc
add
(bad)
(bad)
jmp
and
sub
dec
or
add
xchg
icebp
inc
(bad)
repnz
xor
mov
test
lea
cdq
fld
lock
jno
add
mov
daa
fst
in
jecxz
sub
push
(bad)
add
test
rcl
mov
and
push
rol
lahf
push
es
mov
outs
lods
mov
push
xchg
and
jge
pusha
dec
push
mov
enter
in
dec
and
mov
jg
mov
cdq
mov
repnz
xlat
dec
cmp
xchg
int3
xchg
mov
adc
mov
movaps
jmp
xor
sbb
rol
shr
out
ror
inc
dec
ins
jmp
aaa
rcr
ja
jl
rcl
jns
mov
jo
js
aaa
cld
mov
and
jno
adc
lea
imul
fwait
jns
jo
and
je
add
adc
mov
nop
or
inc
int3
or
bnd
out
mov
pop
or
sbb
and
mov
and
fist
pop
xchg
push
enter
mov
push
dec
mov
xchg
jb
mov
sub
and
cmp
push
enter
fiadd
out
lahf
retf
lea
test
mov
loopne
(bad)
and
dec
(bad)
and
(bad)
cld
stc
or
icebp
mov
pop
std
dec
adc
xor
push
adc
add
xor
ror
cld
cmp
jmp
adc
test
mov
mov
jo
adc
ror
pop
in
adc
and
call
sbb
adc
ja
inc
int3
jl
jns
ret
xor
mov
cmp
je
fiadd
mov
sahf
dec
adc
add
mov
push
test
xchg
sub
xchg
fmul
add
mov
adc
xchg
push
dec
je
xor
xor
outs
in
call
add
xchg
bound
dec
inc
add
cli
popf
pop
jmp
inc
pop
call
dec
test
das
mov
push
mov
lea
cdq
or
jle
int
lds
push
pop
mov
shl
sbb
dec
adc
mov
jmp
pop
clc
test
cmp
test
or
push
add
mov
adc
jmp
sbb
adc
push
mov
daa
add
jns
scas
jmp
cwde
xchg
(bad)
neg
inc
dec
popa
cmp
shl
mov
pusha
adc
jno
sub
xor
movs
les
dec
inc
dec
ins
inc
xor
cld
jmp
je
ret
push
hlt
jne
and
mov
out
cld
mov
clc
outs
jp
xchg
push
fcmovne
push
lock
jo
pop
add
fs
js
aad
je
adc
push
xlat
es
ja
add
cmp
push
jbe
adc
rcl
adc
cli
(bad)
std
ret
pop
push
inc
dec
sbb
xchg
cmp
je
movsx
inc
loopne
ror
push
pushw
inc
xchg
pop
in
jno
arpl
inc
fld
jne
jp
call
retf
jne
pushf
je
add
jo
add
mov
pusha
into
push
pop
xor
aaa
mov
rcl
rol
jle
push
cmp
iret
sub
xchg
pop
fs
xlat
neg
pshufw
retf
mov
jmp
mov
xor
mov
xchg
pop
(bad)
fist
fnstenv
mov
push
sub
pop
add
(bad)
out
ficomp
dec
mov
shr
cld
rep
mov
and
rep
pop
or
popa
lock
pop
or
sbb
dec
data16
xor
lods
push
gs
adc
cmps
fild
pop
jno
cmp
and
repz
leave
add
les
dec
push
mov
inc
or
imul
es
and
out
in
jo
pop
mov
mov
dec
inc
jmp
xor
lock
lods
in
(bad)
sub
jae
in
retf
pusha
sbb
mov
and
out
mov
jb
jbe
in
cmp
mov
and
in
and
inc
lods
xor
pop
or
sub
dec
cmp
enter
into
dec
push
or
inc
cmp
into
(bad)
jl
mov
pop
pusha
sti
test
fcmovbe
mov
adc
pop
in
xchg
jbe
push
fsub
lock
je
fild
xchg
lock
es
imul
xchg
ins
xor
xchg
lods
movs
add
jge
sbb
add
pop
mov
push
mov
add
out
(bad)
nop
out
jae
sub
jmp
aam
push
jecxz
outs
pop
and
gs
pop
bound
outs
pop
pop
xchg
adc
clc
add
aad
sbb
sbb
sbb
pop
pop
call
out
cmp
in
sub
inc
pop
push
lock
xor
adc
sbb
add
lahf
cmp
mov
pop
sub
arpl
test
inc
sub
add
and
cwde
adc
test
add
mov
pop
inc
repnz
rcl
fnstenv
in
cdq
in
jmp
int
inc
sub
loopne
sbb
fsub
setae
inc
shl
test
lods
dec
test
add
fcom
cmps
xor
add
sub
out
push
mov
loope
inc
push
inc
jo
pushf
pop
fistp
add
mov
es
fwait
cmp
mov
sti
fstp
xchg
add
mov
adc
jae
fdivr
cmp
(bad)
fwait
and
inc
and
enter
sbb
pop
popf
and
xchg
dec
aad
repz
icebp
sub
sub
popf
ins
loopne
jle
fcomp
out
dec
repnz
call
hlt
and
dec
imul
in
xor
xor
and
inc
mov
loop
dec
push
pop
fimul
fnstcw
ins
rcr
pop
rol
pop
out
or
test
adc
dec
jmp
mulps
mov
sar
enter
ss
repz
push
mov
jge
popa
sub
mov
repnz
int
repz
repnz
clc
adc
int
cmp
popa
sbb
dec
or
or
test
push
(bad)
push
fild
cmp
fld
xlat
push
cmp
add
jg
fmul
add
add
sbb
mov
and
nop
jle
adc
xor
and
sbb
push
jle
xor
hlt
mov
xchg
sbb
or
or
fs
cs
inc
xchg
adc
push
cwde
jl
fstp
fld
xchg
mov
sbb
retf
in
(bad)
pop
add
pop
imul
pop
cmc
and
sub
xor
inc
dec
mov
dec
call
lds
(bad)
pop
mov
sub
sub
sub
das
sbb
and
and
sbb
dec
inc
inc
push
jmp
push
jb
sbb
(bad)
or
jne
adc
mov
(bad)
(bad)
xor
inc
sbb
add
pop
movsx
mov
sbb
push
mov
sbb
lods
cmpxchg
cmp
or
fist
pop
in
gs
push
ret
cdq
mov
jbe
xlat
ins
out
push
cmps
jo
pop
mov
xchg
mov
mov
jne
mov
mov
outs
adc
pop
xchg
and
stc
mov
fmul
ror
pop
(bad)
leave
xchg
div
test
add
dec
mov
lods
sub
pop
mov
sahf
fsub
mov
test
daa
in
sbb
test
pop
mov
(bad)
fnstcw
xchg
mov
or
dec
pop
int
imul
lods
enter
pop
inc
lods
(bad)
bound
popa
xor
out
push
test
stc
lock
pop
inc
sbb
cwde
and
in
arpl
push
mov
push
call
or
loopne
jbe
addr16
mov
sbb
jl
jmp
jne
xor
pop
cmp
push
ins
data16
dec
adc
inc
imul
add
(bad)
or
xchg
inc
das
std
fld
call
jae
mov
sub
or
lds
popa
push
fld
call
sbb
test
bswap
jmp
pusha
stos
jo
jmp
mov
add
mov
add
nop
sbb
sbb
xchg
das
push
push
out
adc
(bad)
outs
dec
xor
pop
inc
(bad)
cmp
ficom
mov
pop
and
(bad)
adc
inc
ret
aad
pop
iret
pop
mov
cdq
adc
pushf
mov
popa
mov
stos
mov
dec
aad
in
jno
lods
mov
push
mov
push
push
adc
pop
outs
mov
jnp
fmul
lods
push
loop
aas
add
mov
ins
xchg
lock
pop
sti
mov
or
sub
xor
sbb
jle
lock
sbb
or
dec
jge
adc
or
js
sbb
add
jo
pop
idiv
add
clc
jge
mov
into
xor
loope
popa
leave
test
nop
xchg
push
mov
and
jns
add
dec
mov
or
cwde
adc
inc
mov
jns
pusha
sbb
test
push
jge
or
loopne
(bad)
dec
ja
dec
sar
cld
pop
pop
js
mov
cli
push
std
test
inc
fsub
or
pop
push
or
push
mov
idiv
push
retf
inc
popa
jns
push
dec
mov
inc
jmp
sbb
arpl
dec
xor
xor
movs
dec
pop
push
fwait
aaa
cmps
in
adc
inc
test
xchg
nop
rol
loopne
test
add
cmp
cmps
sub
lods
fdiv
daa
es
icebp
aam
test
pop
cmp
push
or
sbb
cmp
xchg
jo
fadd
dec
push
inc
cmc
cld
inc
push
sbb
fsub
pop
fcmovne
sbb
or
movs
dec
fcom
gs
adc
loopne
arpl
sbb
mov
in
in
aaa
cld
add
pushw
daa
jo
and
jmp
sbb
or
aas
aas
inc
add
aas
sbb
arpl
call
call
(bad)
push
ret
mov
and
xchg
jmp
inc
pop
jge
sub
xchg
inc
mov
adc
in
(bad)
jbe
lods
and
pop
cmp
addr16
mov
dec
and
xlat
hlt
sahf
fs
fdivr
stos
mov
add
test
shr
int3
imul
ins
mov
sbb
and
or
test
xor
push
retf
xchg
add
sahf
fisttp
adc
push
sub
cmp
xor
aam
jmp
jmp
add
out
into
or
sub
lar
shl
fcomp
mov
mov
dec
aam
pop
loop
cmp
push
in
bnd
iret
mov
xchg
push
sbb
(bad)
ins
int
imul
add
ja
call
jmp
inc
xor
dec
out
sbb
jmp
jmp
xor
call
sub
sub
cmp
sub
mov
and
xchg
mul
and
sub
sbb
es
mov
push
sub
shl
cmp
xor
push
inc
pusha
data16
je
in
sub
jb
(bad)
aam
shl
adc
dec
cld
mov
pop
xor
mov
nop
sub
lods
adc
lods
cmps
movs
push
(bad)
(bad)
cmp
push
repz
ret
jnp
cmp
add
push
sbb
adc
or
ret
pop
inc
ins
aaa
xor
call
clc
dec
jns
xchg
adc
xor
ja
bts
jmp
frstor
movs
mov
mov
loopne
mov
cmp
aas
sbb
enter
mov
fwait
and
push
ror
in
add
jge
and
jecxz
data16
mov
ds
jmp
mov
inc
das
cmps
and
adc
movs
xchg
lods
xor
push
mov
fld
xchg
inc
hlt
call
ret
sub
in
push
ins
outs
jae
push
cmps
cmp
pusha
dec
shr
jmp
cld
mov
mov
(bad)
and
inc
imul
leave
dec
cmp
test
cmp
and
cdq
adc
add
mov
adc
pop
or
ja
xor
(bad)
inc
pushf
jae
test
pop
loope
pop
mov
lods
lock
popf
imul
fnstcw
adc
sub
call
or
push
out
adc
pop
sbb
(bad)
mov
and
stc
and
cwde
scas
cmp
mov
ret
xchg
pusha
repz
ror
cmp
mov
pop
leave
jg
test
xor
jno
adc
xchg
(bad)
mov
or
add
push
pop
inc
add
fs
ss
rcr
ds
cwde
cmps
mov
push
imul
cs
add
push
nop
mov
inc
jmp
in
pop
pop
xchg
fdiv
sub
adc
add
or
rol
mov
adc
fimul
xchg
jmp
das
pop
push
adc
adc
(bad)
mov
dec
fiadd
cmp
popa
cmp
pop
inc
stos
xchg
push
das
jge
sub
dec
or
xor
and
enter
jb
bound
sub
call
ins
stos
push
push
jns
jmp
mov
mov
lock
ror
jno
mov
add
rol
sbb
fisubr
xor
rcl
clc
adc
scas
mov
(bad)
aam
inc
pop
sbb
dec
or
lods
(bad)
es
inc
mov
push
sbb
in
dec
xor
cmp
repz
cmp
fs
lock
push
(bad)
fwait
push
push
fs
retf
aaa
adc
scas
cmp
jae
pusha
cmp
push
or
in
add
call
call
in
(bad)
mov
cli
cs
push
int
jno
sbb
add
cmps
sbb
sub
push
cmove
bound
or
push
call
adc
pusha
adc
adc
jecxz
mov
jbe
and
das
cmp
adc
pop
out
sub
cli
push
fwait
je
aaa
pop
jg
pop
mov
and
mov
inc
push
pop
jmp
shl
test
jno
sbb
dec
lock
dec
es
pop
(bad)
fwait
(bad)
fldcw
es
add
lods
inc
mov
add
in
test
hlt
mov
ins
cdq
sbb
mov
scas
ret
clc
fcomi
shl
mov
shl
(bad)
push
sbb
mov
mov
inc
and
inc
je
lds
sbb
mov
push
clc
xor
rol
dec
call
add
jns
call
pop
call
(bad)
inc
pop
sub
aas
sbb
xor
mov
push
nop
inc
pusha
or
xor
adc
imul
push
(bad)
cmps
jbe
fdiv
cmp
xor
mov
push
push
or
bound
je
mov
sub
mov
clc
and
and
cmp
push
dec
jnp
movsx
xor
mov
inc
shr
cld
jecxz
leave
jno
daa
nop
xchg
push
jb
in
sub
adc
cmp
fucom
fwait
or
xor
ins
iret
sub
xor
jmp
mov
sbb
inc
push
jo
pop
push
mov
pop
inc
retf
cmps
pop
test
sub
mov
shl
test
test
les
jno
xchg
adc
cmp
jecxz
aaa
(bad)
js
aad
sbb
and
inc
xchg
jg
and
or
xchg
rcr
in
inc
or
or
mov
sbb
ins
cdq
lods
(bad)
lock
rcl
popf
xlat
add
sbb
cmps
xor
ss
or
add
rol
mov
sahf
inc
sub
test
rol
sbb
in
test
(bad)
(bad)
dec
or
ret
sub
xchg
sbb
jmp
retf
push
mov
add
add
dec
aaa
mov
dec
cs
dec
ja
mov
cmovb
or
add
cs
sub
or
movs
rol
cmps
bound
pop
mov
pushf
push
add
dec
or
dec
sbb
inc
adc
mov
cmp
mov
mov
in
push
arpl
mov
bswap
out
push
sub
shl
movs
cmps
mov
dec
fwait
mov
xchg
loopne
and
xor
mov
int
dec
inc
mov
xor
cmp
out
sbb
and
adc
xchg
adc
or
sbb
adc
cmp
dec
daa
outs
das
imul
daa
mov
dec
xor
fidivr
jecxz
push
xor
imul
add
inc
cmp
ret
push
fidiv
add
outs
loop
outs
je
or
cs
xor
xchg
pop
movs
in
cmp
adc
mov
das
(bad)
push
js
nop
adc
retf
xchg
dec
mov
call
dec
dec
or
pop
arpl
inc
je
add
mov
push
bound
frstor
lea
or
rcr
jns
adc
cmp
adc
std
xor
mov
mov
fadd
sbb
and
setne
cmp
ret
fisub
mov
push
mov
lss
daa
mov
add
sbb
push
xlat
and
test
cmp
daa
test
add
cmp
mov
xor
xchg
xchg
jg
es
sbb
adc
xor
and
jne
dec
cmp
mov
rcr
inc
cmps
fidivr
push
adc
or
push
xchg
mov
push
int3
int3
scas
pop
cmp
inc
xchg
enter
push
icebp
sbb
jmp
(bad)
enter
outs
popa
enter
les
lods
sbb
int3
xor
sbb
xor
push
inc
dec
cmp
mov
es
cmp
adc
scas
in
xchg
pop
sbb
fdiv
push
or
xor
bound
sbb
movs
and
and
call
fs
pop
mov
test
mov
fucomip
(bad)
pop
sub
hlt
push
push
jl
push
std
cmp
or
ret
cmps
sbb
pop
push
jb
test
push
adc
ret
aas
dec
mov
pop
push
xor
in
(bad)
loopne
jo
aad
fmul
in
push
adc
sbb
daa
mov
aad
cs
lahf
(bad)
mov
sbb
push
cmp
in
sub
cmps
inc
fsubr
xor
mov
sbb
fmul
repz
sub
xchg
imul
push
adc
push
xchg
clc
dec
pop
mov
ins
and
dec
xor
add
and
dec
enter
sbb
or
out
adc
adc
or
or
mov
enter
or
dec
mov
arpl
cmp
or
adc
inc
sub
sub
sub
and
add
lea
jg
mov
(bad)
mov
pop
mov
aas
or
rcl
and
push
jg
push
mov
fidiv
nop
imul
add
add
and
hlt
cmp
and
test
das
xchg
pop
cmp
sbb
test
outs
push
add
pop
sub
icebp
mov
or
ret
lock
mov
adc
xlat
xor
sbb
in
cmps
clc
xor
mov
mov
test
xchg
pop
ror
adc
mov
rcr
ja
adc
lods
movs
imul
push
sbb
clc
pop
add
adc
cmp
retf
jbe
(bad)
(bad)
das
pop
add
dec
arpl
leave
push
add
or
jbe
adc
es
retf
inc
and
arpl
enter
xor
(bad)
and
les
je
xchg
sbb
movs
call
and
scas
mov
imul
sbb
push
and
cdq
mov
dec
pop
pop
repnz
daa
mov
dec
sbb
scas
rcl
(bad)
cmp
or
add
mov
sub
bt
jae
cli
dec
xor
std
js
cmp
jne
ss
and
push
aam
or
add
das
addr16
dec
lock
jb
jne
cwde
sbb
mov
adc
jg
js
pop
(bad)
add
fstp
fld
pop
sbb
mov
or
pop
pop
sub
lds
push
cmp
push
push
outs
mov
pop
add
pop
dec
sbb
adc
mov
pusha
stos
and
daa
and
and
sub
imul
cmp
sbb
xchg
cwde
ja
and
sbb
or
je
dec
adc
ja
and
xor
sbb
adc
mov
jnp
push
mov
das
loopne
sbb
ds
das
push
cwde
sub
add
retf
add
icebp
push
pop
jmp
dec
popa
jmp
test
repnz
push
cmp
rcr
adc
gs
and
add
sbb
nop
add
lock
xor
fnstsw
sahf
imul
daa
lock
sbb
fstp
fwait
or
(bad)
stc
xor
ja
or
push
jb
out
jge
and
cmc
add
in
jo
or
cmp
inc
clc
inc
jg
dec
gs
add
and
(bad)
rol
lods
and
cmp
and
lea
scas
pop
mov
repnz
adc
jmp
rol
push
ins
jmp
pop
ret
jmp
add
xlat
inc
call
dec
jb
stos
das
or
jmp
shr
or
xchg
sbb
cdq
add
ret
shl
xor
rol
cld
xchg
jne
push
shl
jns
ret
iret
pop
lahf
rol
mov
add
add
mov
in
test
(bad)
mov
test
sar
fmul
js
div
jnp
push
push
sbb
push
mov
(bad)
je
mov
in
(bad)
push
mov
inc
push
aaa
sbb
mov
xchg
sbb
inc
and
push
or
pop
das
jo
je
outs
push
push
mov
or
cmp
and
xor
push
and
pop
sbb
inc
push
xor
jo
int3
mov
add
xchg
daa
and
push
mov
push
adc
pop
cld
or
ins
add
dec
inc
mov
add
enter
jle
xchg
mov
adc
mov
test
jo
mov
outs
in
xor
push
test
test
xchg
fs
in
fstp
dec
xor
lock
in
and
sbb
dec
inc
and
out
and
pop
sub
in
loope
dec
mov
push
mov
fld
(bad)
xor
pop
rcl
in
pop
dec
pop
test
dec
mov
or
hlt
jmp
stc
xor
stos
push
or
sbb
sahf
dec
rcl
or
daa
iret
push
jb
mov
popf
add
dec
dec
repnz
sbb
add
push
aas
dec
inc
pop
mov
popa
ret
jb
cmp
xchg
mov
mov
push
inc
shl
into
scas
popf
fwait
push
getsec
add
push
mov
and
or
nop
inc
ror
dec
les
push
inc
jp
cmp
movs
mov
push
leave
xchg
adc
cs
ret
or
adc
and
mov
pusha
sub
pop
pusha
xor
push
add
pop
adc
pop
sar
ins
add
in
fdivrp
pop
jo
clc
xchg
inc
add
lea
pushf
test
mov
push
sub
mov
xchg
and
push
retf
ins
xchg
ror
adc
pop
fucom
bound
jle
fnsave
mov
les
sub
pop
adc
push
test
sbb
mov
loope
es
(bad)
add
mov
and
pop
jbe
es
test
cmp
xor
dec
fsub
rcr
pushf
sbb
mov
pop
ret
pop
xchg
adc
cld
repz
outs
or
or
push
pusha
sub
add
sbb
sub
jb
daa
ja
and
xchg
leave
mov
imul
pop
dec
fdiv
cmp
or
cmps
lock
jnp
call
cmp
bound
cmp
xchg
movzx
jbe
outs
rcr
nop
cmp
sub
aam
and
xchg
daa
fst
out
clc
jns
ja
inc
es
add
pop
push
adc
les
cmp
in
in
xor
pop
sub
lods
pop
ds
and
push
sbb
xchg
adc
iret
repnz
pop
adc
dec
jb
mov
les
rcl
cmp
sub
xchg
jecxz
cld
push
adc
add
iret
inc
sbb
dec
das
imul
jg
cwde
sbb
lods
pusha
add
outs
sahf
xchg
out
push
(bad)
cmps
imul
lea
jge
sub
je
or
push
div
aam
jb
or
jb
fld
cmp
xchg
sbb
mov
sbb
loope
jo
leave
mov
cmp
div
rol
rcr
jb
test
pop
cmp
mov
fwait
xor
mov
jbe
retf
adc
fild
xor
clc
fst
adc
fld
cmp
popf
dec
lea
ds
fsubr
mov
lds
or
sub
xor
int3
cdq
movnti
sub
pop
cdq
sbb
and
and
(bad)
repnz
iret
sbb
mov
adc
dec
xor
lock
loopne
add
call
les
(bad)
les
pop
sbb
xchg
xor
sahf
lock
jmp
hlt
jae
xchg
jecxz
or
movs
and
test
dec
cld
hlt
cld
leave
pop
ret
lock
hlt
dec
out
pop
(bad)
and
mov
(bad)
or
xor
dec
pop
inc
aam
add
push
xor
(bad)
lods
add
mov
pop
sub
sub
push
pop
ret
fwait
cmp
push
les
xor
adc
mov
movs
push
add
mov
sub
sub
jle
add
add
or
shr
xchg
xchg
in
(bad)
sbb
(bad)
stos
mov
loopne
sbb
xchg
push
(bad)
jmp
out
add
add
mov
popa
push
xchg
sub
xor
mov
inc
add
test
push
popf
pop
mov
push
cs
add
xchg
adc
clc
fbld
push
add
cmp
jge
(bad)
rol
push
es
jmp
mov
cmps
pop
add
mov
(bad)
adc
sbb
mov
pop
sbb
mov
ins
xchg
and
pminsw
inc
fwait
cmp
je
sbb
repz
cmp
jmp
and
pop
mov
push
mov
ret
icebp
cmp
dec
test
jg
mov
jne
popa
xor
cmp
sbb
inc
push
add
sbb
xlat
adc
ficom
in
mov
lods
add
lock
mov
mov
jns
jl
and
inc
push
shl
je
inc
and
xor
cmp
adc
adc
push
jo
adc
and
xchg
ds
sub
adc
dec
les
shr
add
adc
push
push
jg
lea
aam
dec
mov
test
jbe
jecxz
mov
mov
adc
leave
jne
test
rcl
popa
dec
std
or
(bad)
push
dec
add
add
bound
sbb
inc
loope
sahf
or
adc
outs
shr
adc
lahf
push
push
into
jo
or
test
ret
data16
sub
jbe
jl
sbb
mov
sbb
pop
fist
add
outs
adc
push
push
rcr
push
or
sub
or
adc
movs
inc
push
xlat
jp
jo
dec
pop
sbb
and
sar
or
jp
out
es
inc
lods
in
fsub
inc
or
and
pop
(bad)
imul
add
arpl
mov
and
mov
mov
clc
aad
jne
data16
adc
mov
inc
sbb
adc
or
mov
mov
arpl
call
push
imul
ds
xchg
inc
shr
movs
mov
xchg
jecxz
enter
repz
adc
or
sbb
adc
jnp
stos
add
pop
add
lock
jno
and
and
jne
dec
and
mov
sbb
xor
js
xchg
add
adc
daa
clc
test
lea
ficom
les
enter
ja
jecxz
jno
data16
loop
imul
repnz
in
cld
inc
inc
sub
test
and
not
add
ror
shl
mov
or
stc
popw
xchg
inc
push
inc
xor
arpl
psrad
dec
mov
ss
loop
mov
jnp
adc
xchg
cmp
mov
call
jne
es
pop
add
test
sub
imul
lock
xor
inc
shl
retf
(bad)
gs
pop
ss
adc
mov
hlt
or
dec
xchg
xor
push
call
in
aad
mov
jmp
pop
daa
inc
dec
jne
imul
lahf
pop
mov
push
out
ret
mov
push
mov
or
fst
or
aaa
lods
sub
popa
and
dec
popf
pop
pop
xchg
add
adc
pusha
adc
shr
add
adc
cwde
push
lods
pop
xor
leave
aas
mov
jb
push
jg
and
jp
push
or
idiv
add
cmp
pop
xlat
or
retf
lods
popa
mov
sbb
dec
sbb
(bad)
pop
fwait
jmp
or
and
outs
pop
in
add
and
sbb
and
cwde
cmp
push
or
add
jmp
or
push
sub
pop
or
fidiv
push
mov
jmp
mov
and
mov
inc
cld
cld
jae
or
ficom
sbb
mov
dec
cmp
push
inc
pop
(bad)
or
mov
dec
sbb
adc
lods
xchg
rcr
out
pop
jno
out
nop
pusha
loopne
adc
nop
lock
or
inc
and
adc
add
or
ror
fisttp
rcr
and
fwait
into
adc
pop
les
adc
lahf
or
or
in
sub
pop
add
and
fsubr
ret
add
mov
arpl
adc
or
adc
ins
xchg
sub
es
or
out
or
movs
or
jo
or
shr
sbb
mov
(bad)
mov
pop
add
add
lock
add
inc
and
arpl
outs
mov
add
loop
and
sbb
mov
ds
mov
pop
ja
inc
out
inc
push
push
pusha
enter
outs
fldcw
test
adc
and
xor
mov
out
or
or
inc
data16
and
xchg
cmp
dec
pop
adc
dec
call
mov
inc
inc
or
cmove
(bad)
inc
mov
sub
or
or
mov
or
inc
sti
popf
outs
sbb
and
out
cmp
dec
clc
mov
out
cmp
mov
push
push
and
aad
enter
xlat
fistp
ror
(bad)
test
(bad)
adc
adc
xor
rol
or
add
int
adc
pop
push
scas
sub
push
or
xchg
leave
lock
inc
pop
cmp
xor
aam
pop
adc
btc
add
xor
imul
xor
dec
adc
ins
jmp
sbb
adc
add
sub
imul
pop
sbb
cmp
test
adc
xlat
or
inc
cmp
shr
lock
add
add
push
or
xor
retf
ss
(bad)
and
or
jb
jmp
inc
add
rcr
xor
fs
sti
scas
push
sbb
jp
test
je
stc
add
cld
add
mov
add
(bad)
mov
iret
outs
and
mov
xlat
jle
push
mov
mov
pop
out
or
mov
retf
add
iret
hlt
sbb
mov
into
adc
mov
je
inc
and
mov
and
add
repnz
(bad)
pop
mov
sahf
jle
jle
and
or
inc
mov
fwait
js
aam
add
(bad)
sbb
or
add
fdiv
cmp
cmovl
or
inc
cld
retf
retf
or
rcr
in
cmp
add
out
cmp
xor
icebp
pop
rol
repz
mov
(bad)
push
(bad)
push
outs
popf
or
rcr
xchg
push
or
sbb
test
(bad)
in
jecxz
mov
sbb
shl
in
call
mov
mov
adc
ret
ret
mov
lea
adc
ret
(bad)
je
daa
mov
inc
sub
repnz
pop
aas
je
mov
xchg
outs
imul
push
or
or
jns
sbb
and
sub
adc
mov
inc
add
(bad)
enter
sbb
or
push
add
clc
cs
add
or
push
add
pop
mov
or
jmp
enter
rol
sbb
mov
sbb
add
lea
pop
out
mov
sub
sahf
ss
inc
adc
push
inc
push
mov
or
dec
xor
push
jmp
cmp
push
lea
mov
sub
inc
jl
sbb
(bad)
inc
xor
pop
or
add
dec
mov
cmp
mov
or
mov
sub
cmp
fisttp
cmc
dec
mov
pop
xor
or
mov
retf
or
and
std
sbb
add
push
push
je
sub
add
ds
call
or
pop
mov
jo
dec
js
sbb
dec
adc
mov
inc
jge
je
push
inc
pop
adc
ficom
cli
pop
adc
dec
adc
outs
sbb
cmp
add
int
push
inc
push
push
fsub
cmp
test
movs
repz
sbb
out
cld
push
test
repnz
adc
cld
push
int3
pop
or
dec
xchg
cmp
xor
imul
js
retf
lods
sub
das
mov
loop
mov
aad
mov
imul
arpl
inc
xor
xor
(bad)
popf
jne
scas
cwde
jge
mov
in
arpl
push
mov
adc
dec
cmp
sub
jae
fistp
in
jbe
sbb
mov
inc
loop
or
rcl
into
(bad)
mov
inc
and
in
mov
and
xor
clc
pop
xor
mov
lea
inc
(bad)
sbb
cmp
pop
pushf
loope
jno
in
cmp
sbb
movs
or
arpl
jg
cli
test
repnz
js
jge
cmp
popf
mov
xor
ror
loopne
test
push
daa
stc
xchg
ret
int3
inc
mov
sbb
ret
jbe
mov
daa
ss
add
sbb
outs
sbb
push
inc
sub
jne
(bad)
push
mov
inc
pusha
cmp
out
xchg
jp
dec
and
js
push
aas
std
xchg
xor
mov
inc
or
add
push
fist
lea
mov
xor
push
cmp
jne
mov
xor
test
add
idiv
jne
dec
jne
jmp
das
inc
dec
xor
cmp
jle
xor
inc
dec
add
cmp
sbb
fsubr
and
inc
fdiv
sbb
call
(bad)
adc
jns
hlt
(bad)
push
cmp
push
aam
mov
or
mov
mov
mov
fisttp
jmp
add
push
or
pop
scas
push
or
and
cmp
je
mov
dec
and
sbb
sar
fs
inc
add
add
enter
out
test
ins
adc
ins
sbb
test
xor
pop
int
dec
jne
mov
sti
fbld
mov
sub
push
or
stos
mov
daa
push
ss
push
dec
inc
push
sar
or
dec
sbb
mov
daa
add
mov
jne
mov
test
ror
div
jmp
cmps
dec
test
fidiv
mov
jb
ja
movsx
add
dec
mov
ret
sub
mov
mov
scas
and
mov
mov
cmp
je
out
lds
pop
lar
fild
or
jmp
jge
sbb
ror
xchg
mov
cmp
mov
push
add
add
sbb
jae
or
outs
adc
sbb
(bad)
aas
loope
aaa
mov
rol
gs
ds
mov
repz
(bad)
push
mov
mov
cmp
ja
jb
add
add
call
in
and
out
mov
mov
pop
sbb
or
xchg
mov
add
(bad)
mov
lock
inc
rol
sub
adc
jle
adc
cmp
ins
jnp
pop
push
xchg
xlat
or
jg
or
mov
lods
cmp
and
stos
mov
test
or
adc
fldcw
lea
ss
sub
les
push
sub
jmp
stos
push
bound
nop
or
sbb
sub
jg
xor
mov
pop
in
push
push
(bad)
jge
push
sub
(bad)
cmp
inc
popf
inc
push
and
or
mov
fs
and
dec
cmps
pop
cmp
mov
hlt
scas
fwait
jmp
or
lock
add
fcom
sbb
xor
jo
push
xor
neg
jg
mov
mov
sub
or
adc
sub
cmp
adc
and
lock
xchg
pop
and
int
loopne
push
add
push
or
or
push
push
jmp
pop
add
(bad)
mov
add
jo
rcl
jecxz
icebp
fidiv
icebp
fadd
mov
imul
int3
cmp
fist
sub
aaa
push
adc
aaa
add
enter
mov
out
test
or
call
adc
mov
retf
jge
jo
adc
imul
push
pop
(bad)
hlt
hlt
data16
inc
repz
add
pop
or
jmp
jl
jl
sub
cmp
or
nop
sbb
or
push
les
clc
int
xor
aas
adc
adc
cmp
dec
shl
adc
lods
pop
stos
lds
inc
adc
add
push
push
scas
in
nop
xor
retf
sbb
jne
js
repnz
add
mov
sti
sub
sub
add
popa
fisttp
lods
fwait
cmps
imul
push
pop
fld
xlat
scas
push
or
cmp
fst
add
or
data16
data16
pushf
dec
fild
jmp
psubusb
loopne
push
and
daa
jmp
mov
add
test
call
into
sbb
add
inc
adc
lods
sbb
sub
mov
push
lea
mov
repz
movs
adc
xlat
adc
(bad)
fadd
rol
out
pop
push
push
jno
adc
inc
mov
xchg
xor
push
dec
xlat
mov
xchg
sub
xchg
push
dec
push
sti
lock
shr
fld
fstp
sub
sub
test
sbb
out
xchg
inc
adc
or
cmp
(bad)
fdivr
or
aaa
pop
mov
add
xchg
add
bound
and
jb
out
xchg
aaa
or
pop
fadd
icebp
push
mov
arpl
out
or
cmp
mov
dec
dec
ins
movs
and
push
fistp
fiadd
cmps
mov
arpl
jp
inc
outs
push
sbb
cmps
mov
js
pop
jmp
sbb
sub
and
adc
push
or
in
out
not
test
adc
jge
ret
add
lods
or
and
fild
sbb
adc
ror
add
shl
pop
add
pop
or
sub
pop
add
cs
and
ins
imul
out
adc
push
dec
dec
out
or
mov
add
push
add
adc
ja
ret
add
ins
cdq
int
adc
adc
mov
or
dec
add
push
add
jo
out
xor
loopne
sub
inc
adc
lock
in
ja
popa
popa
or
sbb
(bad)
sbb
dec
popa
scas
dec
outs
(bad)
inc
fcmove
add
sbb
cmp
ins
idiv
(bad)
add
loopne
repnz
fst
loopne
add
push
cdq
clc
std
jmp
add
push
xchg
push
and
xchg
mov
mov
xchg
push
mov
add
adc
dec
ss
adc
dec
push
sbb
rcr
scas
js
sub
ins
outs
js
inc
mov
xchg
sbb
jb
dec
and
jl
pop
add
cmp
push
int
jmp
jg
sub
in
jl
ins
or
cmp
pop
je
sbb
and
nop
fild
push
xor
inc
ds
and
cmp
xchg
jo
inc
or
xor
xor
iret
add
test
xlat
xchg
outs
cmp
mov
push
sub
or
sub
or
gs
mov
push
faddp
in
sbb
pop
mov
nop
mov
out
inc
adc
mov
xchg
nop
mov
fistp
inc
pusha
sub
dec
jne
aaa
fiadd
mov
sbb
push
cmp
sub
xor
add
mov
dec
clc
xor
cmp
dec
mov
test
sahf
add
lock
sub
std
adc
add
lea
nop
dec
mov
mov
sbb
push
cmc
div
push
sbb
stc
cli
sti
sbb
cld
std
(bad)
fs
inc
push
jmp
loope
inc
push
sbb
jecxz
inc
push
sbb
out
sbb
jmp
nop
inc
in
in
out
fs
inc
push
out
rcl
nop
inc
push
sbb
rcl
push
sbb
aad
lahf
fst
cmp
dec
mov
push
loope
lods
enter
add
inc
les
jecxz
mov
fisub
inc
(bad)
fwait
add
add
aad
nop
ja
pop
push
add
jnp
pop
sub
pop
and
(bad)
sti
pusha
idiv
add
mov
and
and
push
mov
sbb
aad
mov
push
fnstenv
mov
mov
aas
enter
cmp
ins
outs
popa
je
or
hlt
ins
cmp
xor
data16
gs
adc
adc
repz
pushf
inc
mov
pop
data16
jge
loopne
or
dec
jne
bound
cmp
or
mov
jae
mov
push
adc
sar
bound
inc
jns
pop
or
ss
xchg
icebp
pop
inc
sbb
or
dec
in
out
xchg
aaa
pop
adc
push
jecxz
push
lahf
xor
ficomp
pop
or
movs
ins
add
aam
inc
xor
nop
adc
dec
jne
in
popf
leave
xor
and
dec
inc
xor
mov
push
xchg
int
or
mov
sub
aaa
pop
mov
cmp
push
gs
imul
push
mov
sub
jo
jo
jl
adc
mov
fbld
das
outs
dec
push
jl
hlt
arpl
inc
cmp
and
fidivr
pop
jp
push
(bad)
aas
mov
jbe
mov
loope
jno
jp
int3
fs
addr16
nop
jl
or
sub
nop
mov
(bad)
push
adc
pop
daa
push
pop
xchg
out
imul
mov
call
ds
cld
or
push
inc
inc
bound
ss
sbb
test
pop
push
dec
mov
jo
in
sbb
test
ds
mov
xor
rcl
add
push
jo
outs
push
push
mov
sbb
sbb
jno
pop
clc
xchg
pop
and
pop
adc
pop
pop
aas
mov
or
sbb
outs
mov
mov
pop
mov
inc
inc
leave
test
sar
nop
or
scas
in
sub
scas
push
add
inc
pusha
or
jne
fwait
add
data16
outs
ja
mov
mov
mov
popa
je
leave
adc
scas
sbb
jo
inc
in
push
fstp
pop
sbb
and
ins
inc
xchg
cmps
jle
les
add
rcr
jge
ret
sub
add
aam
mov
scas
aas
cmovp
jo
movsx
rcl
aas
icebp
fcom
daa
or
inc
popa
mov
and
dec
sub
aas
mov
loope
push
or
adc
sbb
add
fiadd
adc
lea
cld
mov
call
adc
mov
ins
gs
nop
inc
pusha
outs
aas
sbb
push
inc
pop
inc
xchg
adc
pushf
mov
push
dec
sbb
push
sbb
aas
loopne
inc
adc
push
popa
sbb
mov
push
aas
push
popa
aas
mov
or
or
or
fsub
mov
xor
xor
add
int3
arpl
bound
outs
shl
push
inc
push
jo
push
aas
aas
xor
push
stos
outs
adc
adc
popa
data16
icebp
fist
fdivr
add
xor
add
stos
adc
inc
or
push
leave
xor
and
repnz
mov
bndstx
dec
dec
cmps
popf
sub
adc
imul
add
push
push
pop
sub
call
imul
add
sbb
xor
sub
adc
add
into
inc
xor
leave
fistp
call
xchg
call
adc
pop
adc
inc
int3
mov
ds
sub
sbb
ret
fiadd
jmp
mov
add
in
push
mov
or
sbb
les
nop
outs
ins
aam
sbb
inc
add
(bad)
test
das
mov
cwde
cmps
pop
mov
xchg
sub
push
or
data16
sub
mov
in
call
hlt
mov
sub
add
cmp
or
sbb
push
jns
mov
cmp
cmp
push
clc
adc
ja
sub
or
or
mov
inc
pop
test
pop
add
or
retf
xlat
sbb
pop
inc
add
add
cmps
add
mov
inc
push
jmp
rcr
(bad)
int
pop
mov
xor
and
shr
add
cmps
jne
push
cld
mov
add
push
mov
cmp
ror
lds
imul
and
out
and
sti
je
loope
mov
xlat
in
cmps
cmp
je
mov
test
out
cld
ret
xchg
push
xchg
mov
ret
sbb
mov
jg
or
js
retf
dec
xchg
cmp
push
jmp
xor
fucomip
test
movnti
or
bound
ret
pushf
arpl
inc
xchg
dec
outs
add
cmp
jnp
pop
cmp
push
push
adc
ins
push
adc
inc
mov
add
jmp
jbe
adc
int
or
jmp
dec
sub
clc
imul
retf
inc
mov
daa
jae
sub
pop
cmp
push
sbb
imul
fist
pop
jbe
mov
sar
or
lock
xchg
jne
call
adc
push
cmp
cdq
inc
jmp
es
push
dec
mov
mov
add
adc
int3
or
int3
and
imul
dec
push
cdq
lock
sbb
adc
scas
xor
fwait
inc
or
jo
jge
aas
sub
mov
sub
pop
or
inc
test
dec
and
xor
sub
or
lock
cmps
and
jge
pop
lock
(bad)
mov
jmp
push
xchg
add
sbb
or
push
xchg
ror
iret
fld
out
dec
push
add
sub
jb
sub
je
(bad)
jae
out
aam
ret
jl
inc
mov
pop
jns
sahf
xchg
xchg
jb
psubw
dec
mov
or
(bad)
jae
inc
dec
jne
dec
ins
loope
inc
iret
mov
or
jnp
jg
sbb
ret
push
push
or
out
add
pop
and
test
add
test
adc
imul
sub
inc
inc
push
push
jae
loop
(bad)
fmul
in
mov
dec
adc
xchg
cwde
dec
and
push
adc
ins
and
fdivrp
sub
pop
popf
or
inc
cmp
sub
rcl
pop
pop
pop
push
mov
mov
rcr
mul
inc
popa
dec
out
push
cwde
pop
outs
mov
cmp
js
cmp
call
hlt
or
adc
xchg
pop
xchg
inc
imul
scas
dec
dec
add
ss
cmps
adc
add
add
arpl
ficom
cwde
rcl
add
stos
int
sub
xor
int3
add
pop
dec
jb
int
sub
lods
fcom
jb
(bad)
in
outs
ins
inc
sti
and
int3
dec
sbb
js
mov
xor
jne
xchg
ins
mov
dec
cs
jmp
mov
cld
pop
or
add
aam
inc
sub
add
icebp
js
bound
cmp
xchg
test
test
jne
and
mov
xor
add
and
lgs
cmp
xchg
add
and
dec
pop
adc
call
push
push
cs
cmp
mov
add
les
dec
iret
fist
push
mov
cld
push
mov
push
add
test
sbb
outs
out
cs
ret
cmp
mov
sbb
scas
dec
test
push
cmp
iret
into
sub
xor
cmp
cmp
test
xor
aam
(bad)
push
dec
jo
fisubr
and
sub
ja
cdq
test
fadd
lods
inc
(bad)
ret
aam
(bad)
mov
sbb
or
int3
outs
inc
adc
adc
and
loopne
inc
sub
push
adc
and
inc
cmp
and
xchg
in
sbb
mov
push
xchg
fs
std
pop
adc
pop
clc
not
and
mov
dec
or
(bad)
or
xor
and
pop
and
mov
or
adc
cld
jmp
dec
aaa
movs
ret
fs
jbe
pop
je
jae
pop
xchg
xchg
or
(bad)
sbb
pop
adc
aas
bound
jmp
dec
pop
hlt
dec
cmp
(bad)
je
iret
inc
mov
cmp
stos
hlt
js
inc
clc
inc
or
call
add
dec
je
loop
fcmovbe
popf
jne
dec
dec
dec
jg
dec
mov
loopne
inc
pop
dec
and
popf
dec
cmp
fdivr
pop
scas
dec
pop
cmp
mov
aaa
fdivr
sbb
adc
xchg
add
xchg
cdq
test
nop
(bad)
(bad)
lds
cmps
and
push
mov
mov
mov
inc
shl
xor
ja
inc
popa
sub
dec
ja
fwait
out
or
hlt
clc
cld
push
jnp
popf
(bad)
iret
adc
imul
lods
and
sub
scas
and
scas
daa
push
mov
jno
shr
cmp
in
aas
clc
jo
mov
mov
mov
xor
repnz
mov
sub
enter
das
outs
xor
mov
mov
xchg
fmul
jg
clc
not
mov
(bad)
mov
popf
add
dec
mov
pop
ret
and
(bad)
push
mov
retf
dec
pop
mov
push
jne
inc
sub
pop
retf
dec
or
xchg
fldcw
out
xchg
sub
and
jbe
mov
iret
push
xor
sbb
out
call
cdq
icebp
jg
xor
repz
mov
mov
(bad)
je
dec
jmp
fbld
and
fisttp
outs
pusha
xor
das
and
xchg
xor
add
ror
or
adc
xor
dec
jg
div
add
mov
pop
mov
dec
je
mov
mov
pop
sub
jbe
sbb
or
int3
adc
xor
mov
jne
mov
add
or
cwde
add
add
dec
sbb
js
add
or
mov
and
stos
mov
push
pusha
enter
sbb
pop
and
lock
jb
push
or
or
and
dec
outs
fdivr
xor
lea
mov
jmp
push
les
fild
mov
add
cmp
ja
jg
test
cmc
and
and
add
fwait
sub
arpl
fmul
inc
push
mov
adc
sub
stos
scas
sub
adc
mov
add
lock
mov
lods
cmp
and
xchg
icebp
lds
inc
mov
lods
sub
jmp
mov
add
sub
adc
mov
jne
pop
(bad)
xchg
and
retf
lods
jmp
adc
mov
dec
mov
mov
pop
idiv
fcom
sbb
pop
mov
jae
fstp
jge
xchg
or
retf
shr
movs
xchg
pop
retf
mov
rep
sbb
test
(bad)
pushf
pop
pop
mov
jmp
sub
xor
cmp
ja
imul
sub
movzx
add
and
in
dec
loop
iret
and
ja
lds
or
test
xchg
sbb
je
xchg
ret
and
mov
xchg
ja
add
add
xor
xor
aam
and
add
and
std
je
jne
retf
mov
pop
inc
gs
sub
or
in
jbe
pop
cmps
push
shl
daa
cmp
push
pop
in
fimul
pushf
call
push
mov
lea
rcl
in
dec
ret
cmp
je
or
sub
jae
js
int
and
inc
add
cld
jle
sahf
adc
add
pop
mov
gs
mov
inc
dec
mov
ret
xor
jne
push
and
push
aad
cmc
aas
mov
call
ret
cmp
or
out
sysret
push
push
inc
and
call
shl
lea
xchg
adc
repnz
cmp
jbe
pop
jbe
mov
ret
pop
aas
sub
and
test
shr
dec
jns
neg
and
cs
xor
jns
push
jne
int
push
mov
cwde
(bad)
es
add
ret
jg
xor
leave
inc
mov
sbb
in
fldcw
pusha
or
jne
aas
out
test
cld
call
pop
jns
(bad)
pop
cdq
mov
addr16
je
mov
cmp
ja
enter
mov
scas
dec
jp
das
rcr
es
dec
mov
jnp
add
sub
mov
add
loopne
sub
sti
fbstp
inc
inc
je
mov
or
add
je
mov
dec
je
dec
jnp
std
mov
(bad)
aam
int3
mov
jbe
arpl
cmp
ss
xchg
adc
jo
(bad)
mov
mov
mov
(bad)
pop
push
js
iret
sub
(bad)
jo
ret
pop
pop
xchg
add
and
popa
scas
inc
add
js
daa
and
or
adc
push
jmp
mov
add
test
pop
mov
xchg
adc
jg
aam
push
dec
jg
test
mov
push
jae
xchg
sahf
cmp
outs
adc
add
add
dec
cwde
or
cmp
retf
sbb
mov
out
ja
in
int3
xor
out
or
jmp
ror
inc
jmp
add
sub
add
sub
lea
out
mov
or
xchg
pop
jmp
lea
push
mov
inc
rcr
xor
stos
or
(bad)
lahf
(bad)
jmp
or
jge
add
(bad)
push
or
add
cli
stos
xchg
push
mov
add
fdivr
mov
inc
dec
(bad)
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
mov
fcomp
fwait
jmp
sti
mov
xchg
das
hlt
mov
repnz
adc
str
dec
mov
int3
icebp
jle
mov
imul
pop
(bad)
pusha
jne
adc
or
mov
ret
push
movzx
sub
mov
cs
lea
push
mov
dec
jp
jbe
jo
movs
jmp
lea
fistp
add
dec
ins
or
(bad)
jno
out
inc
lds
add
lea
ins
lahf
jge
or
rol
neg
jmp
mov
retf
pop
dec
dec
inc
dec
dec
lods
or
in
cmc
(bad)
adc
mov
std
mov
aam
adc
sbb
scas
loope
jl
pop
sbb
cmp
cmp
xlat
fistp
stos
neg
sbb
stos
jmp
aas
inc
mov
fdivp
sti
je
stos
loop
push
adc
push
pop
inc
clc
dec
mov
cli
or
jmp
mov
in
dec
mov
pop
dec
sbb
sub
mov
std
push
mov
mov
mov
pop
fstp
adc
sbb
or
adc
mov
mov
sub
je
mov
mov
mov
repz
inc
test
jne
pop
or
in
stos
xor
fdivr
repz
sti
add
je
inc
jne
pop
and
mov
xchg
repz
das
lock
and
pxor
retf
jbe
mov
xchg
test
pop
lea
adc
dec
push
push
push
cmp
fist
or
inc
imul
movs
neg
inc
loop
dec
(bad)
popa
push
jo
test
pop
mov
fild
inc
add
and
and
adc
and
sub
inc
cmp
sti
mov
or
sub
sbb
and
sub
sub
mov
fs
sub
sub
sub
push
xchg
outs
loopne
ret
mov
add
packuswb
push
push
sbb
cmp
dec
adc
push
inc
aaa
xor
ret
test
test
test
jmp
or
lock
inc
cmp
inc
dec
push
pop
fld
adc
imul
adc
bound
xchg
loope
stos
mov
sbb
pop
frndint
fcmovu
scas
int3
adc
jmp
jge
fwait
mov
test
je
fidiv
clc
test
std
jnp
mov
inc
sub
mov
shr
and
add
pop
aas
jmp
shr
add
jns
(bad)
push
std
mov
movs
or
cmp
jb
mov
dec
dec
and
ja
jmp
cld
push
pop
jae
xor
jmp
mov
std
or
icebp
data16
data16
fisttp
pushf
out
jne
add
xchg
adc
rcl
adc
ror
test
sub
pmovmskb
fadd
dec
sbb
or
xor
adc
push
inc
sub
and
push
repnz
add
ss
mov
ins
or
mov
sbb
xchg
mov
setnp
jne
or
rcl
movs
and
jne
sub
xor
cmp
cld
mov
or
jmp
enter
or
push
iret
cmp
div
pop
jmp
cmp
je
mov
iret
or
ret
arpl
push
cld
xchg
mov
fyl2x
fclex
fldcw
adc
cli
cmp
jp
mov
pop
inc
out
lods
inc
mov
sbb
cmp
in
cmp
cmp
je
and
jne
inc
push
sub
pop
add
jle
add
scas
mov
mov
mov
push
mov
loopne
call
dec
fistp
jmp
fstp
fstsw
test
push
pop
sub
test
ins
shl
pop
and
push
aam
cmp
mov
lea
or
fimul
pop
imul
inc
jmp
aaa
mov
mul
xor
daa
push
push
inc
imul
sbb
hlt
cwde
jb
add
call
aas
add
retf
unpcklps
mov
test
jecxz
popa
test
sub
dec
fsubr
jg
push
or
mov
add
ja
sub
pop
push
jecxz
xor
pop
add
(bad)
imul
dec
xchg
(bad)
xor
inc
daa
and
and
xor
mov
cmp
(bad)
jnp
pop
enter
xchg
cmp
and
lods
pushf
fimul
loopne
push
fwait
inc
(bad)
mov
sti
jmp
(bad)
imul
pop
pop
mov
push
movs
(bad)
adc
mov
xor
adc
(bad)
aad
xchg
inc
rol
aam
aam
mov
enter
mov
fistp
xchg
adc
aad
fs
div
xor
adc
or
lods
in
adc
icebp
ss
cmp
inc
jno
push
xchg
in
pop
add
xor
xor
out
retf
mov
jb
(bad)
ja
and
in
add
or
jb
sti
ins
sti
(bad)
cmp
ja
cs
mov
adc
push
daa
clc
idiv
push
add
inc
dec
jne
sub
dec
mov
aas
cdq
neg
add
cmc
(bad)
imul
add
jae
ror
lock
mov
add
popa
ret
add
dec
lock
add
or
sbb
dec
ins
mov
adc
cmp
adc
or
and
repnz
(bad)
push
pop
(bad)
mov
and
mov
(bad)
dec
in
test
add
rol
and
lock
xor
pmuludq
add
pop
loopne
pop
jae
sahf
pop
inc
dec
mov
test
add
inc
add
imul
and
xor
shl
mov
mov
push
adc
mov
stos
push
cmp
imul
add
dec
ins
fisttp
pop
mov
pop
ret
mov
push
xchg
adc
mov
mov
lods
aas
and
lahf
mov
out
mov
dec
xor
ins
pusha
pushf
cmp
jb
(bad)
retf
mov
adc
sub
fbstp
mov
cmc
and
push
aaa
mov
pop
repz
icebp
cwde
mov
(bad)
push
xor
aad
test
bound
pop
jo
cmp
inc
ja
mov
mov
fbld
or
sub
sub
sbb
fistp
dec
and
outs
fbld
sbb
sbb
add
fs
dec
and
add
mov
push
nop
add
and
fwait
out
cmps
scas
mov
and
dec
sub
stos
add
xor
xor
pusha
or
push
inc
retf
fdivr
stos
and
lea
ja
out
icebp
jmp
outs
push
(bad)
fisubr
sbb
fst
mov
rol
(bad)
jmp
adc
jg
add
sub
jae
out
ja
jb
icebp
pop
pop
and
jle
neg
push
sub
inc
stos
leave
fiadd
lds
pop
add
or
adc
pop
into
sbb
add
jne
inc
loope
pusha
xchg
mov
xchg
and
sub
je
adc
mov
out
mov
loope
or
jmp
mov
push
sbb
push
jmp
ja
push
inc
xchg
add
pop
ss
fsubr
pop
push
add
dec
lods
movd
or
div
inc
jg
jl
pop
pop
xchg
xor
mov
sti
(bad)
cmp
test
sub
ins
jbe
cvtps2pd
adc
adc
add
jne
jno
fcomp
lahf
cmp
cmp
add
arpl
push
clc
push
mov
sbb
pop
cmp
shl
push
or
pop
cld
and
in
or
dec
cld
gs
int3
js
es
inc
mov
mov
add
xor
add
jecxz
adc
mov
aas
jne
mov
mov
cmp
jne
pop
movs
ja
sbb
clc
adc
lods
ins
dec
or
mov
(bad)
fild
adc
jmp
adc
inc
push
das
nop
inc
inc
xchg
or
iret
cmp
int3
add
fmulp
mov
push
pusha
sub
pop
or
jmp
into
add
lock
add
and
sub
mov
js
lods
pop
cmp
push
inc
xlat
and
cmp
call
mov
repnz
jmp
aaa
es
push
dec
xor
hlt
jmp
lds
(bad)
dec
push
pop
mov
xor
sbb
cmp
inc
icebp
call
add
mov
(bad)
pop
retfw
dec
sub
test
cmp
(bad)
cs
jnp
enter
(bad)
fs
jne
(bad)
test
adc
repz
mov
or
loopne
pusha
test
cmps
dec
mov
fwait
stos
mov
add
shl
movs
bound
jmp
sti
jmp
inc
arpl
jne
rcr
pop
dec
cmp
lods
mov
xchg
push
adc
sub
je
push
mov
and
fdiv
invd
cmc
jne
(bad)
scas
repnz
or
sub
aaa
mov
(bad)
mov
cwde
mov
(bad)
or
out
test
mov
sbb
adc
fsubp
pushf
test
fdivr
dec
add
add
test
mov
imul
push
pop
xchg
adc
and
mov
jmp
(bad)
(bad)
or
jb
or
adc
fucomp
xchg
mov
fwait
mov
out
fimul
mov
(bad)
std
pop
enter
sub
ror
pop
fisttp
inc
cmp
add
pop
add
jmp
push
pop
bound
jp
mov
push
add
in
test
arpl
outs
dec
sbb
sub
mov
stos
adc
shl
in
or
mov
dec
hlt
pop
mov
inc
inc
dec
retf
mov
xchg
test
xchg
inc
sbb
jmp
add
call
rcr
or
jns
test
pop
pop
xchg
push
add
xchg
gs
dec
mov
xchg
in
shl
in
dec
call
inc
sub
call
(bad)
jne
fldenv
push
or
xchg
fild
loope
test
xchg
cmp
cmp
sti
push
pop
jne
lea
cmps
test
out
adc
sbb
mov
lea
sub
inc
(bad)
js
not
and
mov
add
fisttp
or
and
cdq
in
mov
popf
cmps
mov
mov
and
aam
fstp
loopne
jl
std
sbb
push
xor
fs
fisttp
or
and
out
enter
arpl
hlt
push
push
lods
(bad)
dec
cmps
pusha
push
ret
rcl
xlat
in
inc
sub
arpl
mov
enter
imul
(bad)
test
and
dec
sbb
sub
loope
mov
and
and
je
sub
je
scas
ret
push
sbb
xchg
xchg
pop
hlt
cmps
mov
push
mov
das
test
cmp
lock
sbb
(bad)
mov
cmp
movs
add
or
add
jle
mov
push
dec
sub
add
mov
pusha
pop
cmovnp
jle
enter
or
add
fdivr
sbb
stos
loopne
mov
xor
pop
inc
fcmove
adc
and
xor
sub
nop
xchg
add
in
adc
rol
jle
cmps
jns
(bad)
in
push
es
xor
mov
jns
ja
gs
ret
push
sub
and
add
adc
sub
test
push
out
sti
in
push
sub
test
addr16
dec
cmp
mov
sbb
add
xchg
aam
push
enter
imul
adc
clc
loopne
sub
sub
xor
ror
das
imul
dec
add
or
hlt
mov
xchg
or
test
sti
out
push
add
test
jnp
cmp
add
cs
xor
hlt
add
pushf
inc
jl
pop
and
clc
lea
fstp
mov
repnz
int
mov
push
xor
mov
mov
cmp
mov
addr16
sahf
clc
push
lea
jo
and
add
mov
add
or
mov
mov
add
jns
mov
nop
jbe
imul
popf
adc
inc
jl
fcomip
loopne
push
add
cli
les
aas
push
push
jmp
push
pop
inc
push
sbb
cmp
lods
adc
or
mov
ret
cmps
cmc
add
sbb
inc
add
lds
inc
mov
add
mov
nop
xchg
pop
cmp
les
dec
sbb
in
cdq
and
vpshuflw
ins
mov
and
or
lods
xchg
push
arpl
sti
test
or
xor
add
adc
cmp
xor
aas
add
ret
in
push
or
pop
jno
shr
and
xchg
bound
dec
sbb
push
jg
cmp
or
jne
sbb
add
push
in
cld
pop
jmp
aas
fsub
es
add
cmp
fild
mov
dec
push
add
add
sub
push
adc
jle
adc
adc
cmp
jmp
shrd
lea
in
leave
pusha
mov
or
pop
mov
icebp
out
fdivrp
adc
shr
cld
push
add
add
ret
ret
bound
test
xor
js
inc
(bad)
cli
in
and
and
adc
xchg
fs
dec
jle
loopne
ror
add
gs
fs
shl
inc
and
xor
pop
and
mov
ins
inc
add
mov
lea
or
loop
test
les
and
cmp
xchg
cmp
push
sub
xchg
xor
dec
je
jmp
add
scas
aas
xor
inc
cmp
xor
mov
add
std
sbb
dec
cmp
mov
retf
sti
mov
ret
mov
add
retf
mov
retf
or
or
push
push
cmp
or
rcr
dec
cmps
push
mov
into
add
jl
nop
mov
repnz
xchg
cwde
inc
push
add
jmp
sub
mov
cwde
jae
adc
or
inc
or
inc
jae
dec
and
dec
pop
add
fild
sub
ins
or
les
xchg
fdivr
rol
mov
jbe
mov
mov
mov
push
(bad)
div
repnz
cld
pop
enter
shr
aam
sti
xchg
sub
push
dec
jo
sbb
pop
sub
cwde
mov
mov
movs
test
add
jo
mov
int3
jae
or
adc
mov
xchg
aam
sub
lds
jecxz
std
movs
ja
pop
sbb
sub
pusha
inc
cmc
sti
mov
jae
jae
adc
neg
cmp
xchg
adc
dec
mov
mov
xlat
aam
or
xchg
pop
inc
xchg
pop
xchg
popa
int3
es
push
mov
cwde
sub
out
sub
inc
(bad)
xor
pop
mov
rcl
add
mov
cwde
xor
inc
hlt
cwde
movs
inc
data16
cmp
jmp
mov
xlat
mov
inc
data16
scas
mov
mov
loop
ret
adc
jge
inc
add
out
xor
xchg
mov
adc
fist
movs
pushf
mov
out
adc
sub
scas
in
lods
xchg
pop
sbb
push
jns
mov
repnz
dec
movs
or
adc
adc
mov
jl
mov
cmps
adc
add
ret
pop
cwde
dec
fwait
mov
sub
mov
pcmpeqw
cmp
lea
xor
xor
ins
and
adc
data16
sbb
movs
test
in
(bad)
popa
or
dec
jmp
jae
pop
add
loope
or
jb
mov
sub
and
ret
cmp
inc
stc
add
add
adc
cmps
adc
mov
test
in
cmpps
pushf
jne
mov
retf
pusha
xor
cmp
daa
cmc
rcr
jbe
xchg
xor
and
mov
sbb
cs
daa
cmps
cs
(bad)
gs
pop
and
loop
adc
repz
dec
out
push
mov
add
aaa
test
in
es
ret
emms
cdq
es
leave
pop
xor
inc
sbb
sbb
and
cld
xor
xor
inc
sub
sub
stc
jne
ret
imul
ret
xor
cwde
and
stos
push
or
sub
push
push
add
mov
add
setns
sub
inc
mov
push
jbe
and
dec
imul
mov
inc
dec
cmp
jl
mov
in
mov
add
in
rol
inc
inc
jmp
ret
push
sbb
pavgb
cmp
and
inc
lahf
jge
push
pop
inc
inc
add
lahf
xchg
pop
leave
sub
jmp
test
adc
add
jb
js
mov
lds
aad
sets
fild
sbb
mov
int
push
push
loop
rol
clc
sub
ss
dec
fisub
inc
inc
add
inc
pop
or
jecxz
sar
cli
jbe
or
sbb
popa
(bad)
mov
or
mov
inc
daa
ret
inc
add
(bad)
mov
cmc
data16
or
in
mov
mov
sub
dec
rol
jne
sub
shl
sbb
push
test
inc
(bad)
stc
push
mov
punpcklwd
retf
cli
test
bound
int
rcr
add
dec
imul
add
in
inc
hlt
in
push
mov
fwait
push
jg
push
aaa
push
mov
sub
jb
inc
(bad)
adc
test
sbb
fdivrp
jne
add
cmp
jge
pop
or
pop
jne
add
dec
inc
mov
push
mov
mov
pop
add
movs
dec
sbb
dec
ins
jne
mov
adc
leave
inc
add
sti
ja
mov
rol
or
pop
push
sbb
add
cmp
cmps
sbb
mov
repz
(bad)
adc
add
(bad)
std
test
nop
retf
push
cmp
pop
mov
and
push
xor
mov
lods
repnz
popa
mov
std
loopne
scas
mov
inc
inc
cmp
test
xchg
arpl
popa
push
sbb
jae
imul
(bad)
adc
xchg
ror
rcr
das
and
xchg
cs
pop
dec
cld
mov
cmp
and
pop
arpl
add
adc
or
sub
repnz
loop
mov
rol
shl
dec
jge
test
xor
pop
mov
xor
cmp
test
fadd
mov
or
push
les
cs
enter
cmp
div
in
call
nop
fstp
xor
mov
mov
iret
xor
in
fmul
push
or
mov
mov
aam
hlt
and
fcomp
xchg
push
add
mov
cmp
jg
movs
cs
pusha
push
lods
int3
and
sbb
int3
mov
sar
add
enter
pop
xor
and
jns
fimul
lds
jge
mov
les
ret
nop
add
enter
ror
sahf
hlt
mov
cmp
add
push
and
mov
push
sbb
push
cmp
adc
bound
and
mov
xor
xchg
xor
cmc
stos
(bad)
ins
das
fs
xrstor
pop
mov
add
fs
mov
das
enter
jo
push
inc
arpl
and
jne
outs
in
push
dec
add
sbb
xchg
ds
fnstsw
int
push
cmp
xchg
sub
and
sbb
and
add
loopne
add
add
adc
ins
inc
fmul
xor
adc
daa
ret
(bad)
sub
aam
xor
adc
stos
mov
mov
rcl
jge
ss
aad
cld
dec
lods
add
hlt
test
add
js
adc
mov
dec
add
inc
cmp
pop
clc
push
adc
int
jne
and
xor
sbb
imul
mov
mov
cmp
add
push
in
ins
dec
je
movs
add
xchg
cli
xor
int3
dec
sbb
pop
enter
adc
shl
mov
mov
mov
cmp
pop
dec
mov
or
adc
xchg
mov
sbb
hlt
mov
add
inc
push
fadd
push
mov
dec
sbb
jecxz
pop
call
int3
pop
out
push
cmps
into
in
aam
add
cmp
cli
pop
or
jne
adc
pop
daa
pop
jmp
mov
mov
imul
mov
iret
mov
addr16
(bad)
lahf
mov
add
call
dec
ret
movs
dec
test
sbb
pop
movs
inc
and
in
shl
add
sbb
pop
imul
rcl
leave
xor
cmps
ds
push
mov
dec
adc
mov
inc
jne
push
push
xchg
xor
pop
dec
bound
ins
mov
clc
les
push
jmp
ins
in
sbb
inc
cmp
jne
and
mov
das
cs
mov
setg
aad
sub
dec
or
imul
mov
loope
jmp
imul
loopne
push
enter
sub
mov
push
dec
mov
inc
sbb
mov
jle
inc
fwait
inc
lods
mov
add
hlt
inc
mov
pop
cwde
push
nop
mov
xchg
mov
(bad)
lock
or
ror
xor
and
(bad)
(bad)
fldcw
sbb
adc
pop
add
lahf
sbb
fdiv
add
jge
outs
pop
inc
sbb
add
lea
adc
sbb
inc
cmp
mov
push
add
or
pop
sub
inc
pusha
jmp
mov
adc
add
add
sbb
sbb
vmptrst
das
sbb
sbb
dec
inc
pop
push
dec
xor
sbb
add
sbb
mov
add
dec
rcr
add
cmp
xchg
stos
shl
imul
and
push
push
adc
pop
mov
dec
pop
je
add
jae
xchg
add
adc
pop
cmp
add
sbb
dec
inc
dec
sub
jne
in
fstp
dec
xor
sahf
inc
mov
adc
mov
stos
stos
out
xchg
cmp
push
push
lds
or
imul
or
xor
jne
lds
sub
and
add
aaa
adc
je
jmp
retf
push
or
fucomp
or
fidivr
xor
adc
jns
inc
pop
push
mov
push
lods
mov
(bad)
in
dec
in
loope
dec
or
xor
mov
pop
sbb
add
ins
sahf
jmp
jb
lods
mov
pop
imul
and
dec
or
lock
aaa
leave
jmp
lods
fsubr
cmps
jno
xchg
mov
cmp
add
pop
inc
cwde
inc
or
adc
jne
xor
sahf
jl
jg
and
push
mov
push
mov
ja
sub
or
mov
and
pop
daa
jnp
adc
data16
xor
sub
out
push
mov
movs
mov
pop
sbb
mov
imul
imul
imul
cmps
imul
shl
fs
shl
pop
int3
xor
shl
les
dec
shl
inc
movs
dec
shl
cmp
test
outs
mov
push
push
pop
ror
or
pusha
jo
ror
or
pop
push
or
push
pusha
dec
ror
or
dec
pop
inc
ror
or
inc
push
cmp
or
or
cmp
ror
or
xor
ror
or
sub
and
or
or
and
sbb
or
or
sbb
adc
or
or
adc
or
or
or
or
add
or
or
add
cld
icebp
movs
sbb
movs
sbb
imul
sbb
mov
movs
sbb
fsub
call
sbb
mov
mov
xor
mov
mov
or
mov
cmp
inc
mov
sub
loopne
loopne
dec
rcr
addr16
sub
mov
dec
in
js
aam
mul
jge
sub
xchg
imul
mov
es
fs
mov
movs
mov
xchg
sbb
or
clc
mov
inc
inc
push
mov
lahf
xchg
sub
scas
adc
mov
sub
es
mov
mov
dec
fstp
push
mov
mov
push
movs
test
or
enter
psubusb
fidiv
enter
(bad)
enter
(bad)
shl
or
rol
or
(bad)
(bad)
or
enter
retf
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
movs
movs
cmps
cmps
or
enter
stos
xor
and
and
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
xchg
xchg
xchg
xchg
lahf
add
add
xchg
xchg
xchg
mov
xchg
(bad)
jo
jb
jb
xchg
jae
and
dec
aad
xor
mov
push
sbb
sti
dec
mov
add
pop
pop
mov
pop
ret
cs
push
in
pop
or
shl
ds
dec
mov
dec
leave
adc
sbb
inc
add
das
outs
push
inc
push
push
ret
cmps
cmc
fs
push
fs
fwait
push
ja
sbb
fisttp
adc
mov
push
push
and
fsub
jmp
ss
add
and
(bad)
loopne
lahf
xor
sti
js
cmp
cmp
or
and
dec
rcr
cmp
inc
iret
jo
push
ds
dec
mov
push
adc
jecxz
nop
clc
not
or
dec
test
xchg
sub
jo
addr16
leave
daa
data16
push
inc
mov
sbb
add
sbb
sub
(bad)
aam
and
sbb
inc
test
popf
(bad)
cmp
mov
sub
push
inc
repz
pushf
mov
pop
push
in
push
in
in
inc
jb
retf
add
jnp
adc
bound
sbb
(bad)
fs
add
sbb
adc
(bad)
enter
adc
inc
mov
jns
stc
mov
and
fs
xor
aas
iret
and
into
cwde
xchg
or
adc
add
movs
pop
dec
pop
leave
push
jb
xchg
cld
cld
pop
cmps
add
iret
cmp
(bad)
mov
add
idiv
fs
enter
add
xbegin
daa
arpl
jg
das
fldenv
mov
mov
mov
xchg
push
xor
dec
in
ss
jb
cmp
retf
xor
xchg
pop
sbb
pop
sub
lods
xor
cmp
or
in
ins
repnz
call
mov
inc
in
add
cmp
test
and
nop
and
mov
xchg
mov
repnz
mov
add
fist
mov
popf
push
test
sar
test
ret
cmp
imul
daa
and
sub
sub
add
data16
inc
mov
sub
dec
je
sbb
cmp
push
or
xchg
mov
inc
mov
add
in
sahf
stos
lahf
add
jne
repnz
lods
fcom
fdiv
cmp
mov
inc
fwait
pop
ret
mov
xor
dec
mov
nop
int
sbb
xlat
ds
(bad)
dec
jl
mov
push
inc
ss
mov
jecxz
mov
dec
mov
je
test
bound
push
mov
nop
int
mov
sbb
psllw
iret
fadd
imul
mov
inc
hlt
or
dec
std
ror
repnz
jecxz
push
xor
ret
jecxz
sub
push
inc
pcmpeqb
sbb
(bad)
std
jg
sbb
lods
xor
scas
and
sbb
pop
mov
and
push
cwde
jno
sbb
push
mov
pop
fs
int
mov
cmp
dec
jmp
inc
inc
sub
add
mov
aad
or
nop
rcl
nop
adc
jl
pop
ret
inc
or
mov
mov
mov
jns
std
xchg
(bad)
xchg
cld
add
mov
add
hlt
sub
add
cmp
dec
mov
jmp
xor
fidiv
ja
test
jp
repz
adc
pushf
(bad)
xchg
jne
pushf
xchg
and
mov
sbb
add
adc
(bad)
sbb
pop
in
pop
mov
call
cld
test
dec
or
(bad)
cmp
and
add
mov
sub
fisttp
cmp
lahf
xor
enter
inc
je
repz
sbb
xchg
clc
test
cs
jmp
and
fdiv
push
xchg
sbb
adc
imul
fiadd
fisttp
es
lea
mov
clc
push
cmp
push
or
sahf
imul
ds
jge
std
fld
add
pop
dec
inc
add
xlat
mov
sbb
loope
and
dec
or
lea
dec
repz
dec
outs
inc
loop
jnp
jo
out
inc
push
jbe
test
inc
mov
dec
jno
fst
mov
inc
in
cld
stos
cmp
sub
xchg
hlt
fidivr
xchg
(bad)
adc
or
fst
xchg
sbb
rcr
mov
add
fidivr
sub
out
aam
mov
div
and
cld
jmp
sbb
push
or
test
add
adc
lock
std
rcl
and
test
adc
fild
lock
retf
jl
cmp
adc
push
cli
push
js
mov
push
idiv
jmp
stc
sbb
arpl
mov
adc
add
wrmsr
pop
sbb
out
cwde
mov
adc
into
or
xor
icebp
ja
cmc
(bad)
cmp
je
sub
outs
int
cld
es
push
jmp
sub
jne
in
mov
and
(bad)
in
mov
pusha
inc
mov
sub
xlat
pop
inc
push
pusha
dec
popa
sbb
test
ror
sub
scas
gs
xchg
cmc
mov
in
fidivr
mov
jmp
cmp
and
add
xor
push
inc
lods
test
add
sub
ret
jo
and
pop
or
adc
in
xor
and
loopne
in
nop
sbb
inc
in
loopne
fs
loopne
xchg
sbb
xor
pusha
or
sub
xchg
dec
(bad)
add
push
fist
ins
adc
mov
mov
mov
dec
call
in
cmp
aaa
test
outs
cmp
xchg
push
sub
push
in
in
jmp
push
dec
push
stos
push
jmp
mov
data16
jmp
or
add
push
pop
xor
fs
inc
ds
inc
ds
scas
retf
dec
push
dec
mov
cmp
jp
call
add
and
pop
jl
xlat
add
pop
jbe
cmp
mov
or
retf
shl
push
cmp
adc
or
movs
jmp
xchg
dec
jp
(bad)
adc
sbb
rol
outs
xchg
sub
pop
push
pop
pop
add
add
push
je
push
pop
mov
or
jmp
inc
jmp
fiadd
sbb
mov
xor
lods
inc
xchg
adc
add
clc
adc
and
das
or
stos
outs
xchg
add
adc
lahf
loopne
pop
mov
add
je
mov
out
cli
cmps
push
cmp
push
call
mov
mov
(bad)
lods
imul
push
test
call
aas
push
popa
clc
or
adc
jno
and
mov
and
jno
nop
(bad)
cmp
fild
inc
sub
lods
gs
jb
outs
inc
or
xor
dec
fdivrp
jno
dec
ficomp
rol
xor
test
cmp
jb
mov
jmp
and
shl
pop
mov
xchg
cwde
aam
push
jmp
pop
inc
and
sbb
cmps
adc
or
(bad)
leave
sub
xchg
jo
(bad)
enter
dec
leave
arpl
and
ss
sbb
sbb
cmps
jae
sbb
push
iret
loope
nop
xor
js
int3
push
(bad)
xor
push
lods
fmul
iret
movs
mov
(bad)
popf
dec
add
jae
push
fisub
and
push
sub
mov
mov
add
push
lahf
jmp
sbb
push
and
jo
into
and
into
out
dec
mov
lods
push
ret
cmp
call
int
int
push
add
push
pop
and
mov
je
mov
hlt
or
jb
rol
mov
adc
ins
push
shl
adc
(bad)
(bad)
xlat
mov
gs
sar
cmp
pop
je
ds
ins
scas
fstp
fwait
sbb
fstp
or
js
sbb
adc
pop
push
movhps
push
adc
add
ror
dec
add
mov
add
add
pop
dec
movs
xchg
mov
push
cmp
ret
xchg
mov
aas
xor
xor
push
cmp
sub
pop
mov
add
sub
loop
push
aas
sub
and
mov
pop
call
sub
data16
clc
fs
iret
add
mov
or
xor
dec
fcmovnu
int
jae
jmp
pop
fnsave
pop
fimul
fnsave
push
pop
cmp
inc
je
arpl
sbb
inc
xchg
push
xor
daa
mov
jecxz
nop
xlat
cli
mov
ror
shl
pop
shl
or
call
rol
(bad)
pop
push
or
add
add
(bad)
outs
popf
ss
es
sahf
cmp
adc
jp
jmp
sbb
call
mov
cmp
popa
mov
sub
popf
xchg
les
push
push
jnp
leave
add
or
fidiv
push
dec
daa
(bad)
sbb
jo
push
loopne
popa
lock
shr
(bad)
pushf
fs
dec
sbb
popa
fcom
shl
dec
push
add
div
ss
dec
es
lahf
jg
dec
and
inc
lea
test
dec
call
lock
add
outs
inc
std
mov
movs
pop
adc
dec
leave
mov
imul
push
pop
and
xchg
stos
jae
shr
mov
inc
adc
push
add
jmp
aas
je
jmp
mov
jge
std
push
sar
pop
retf
int3
lea
inc
inc
clc
xor
inc
fwait
lds
push
or
jmp
dec
cmps
fld
ss
xor
jmp
rol
mov
push
adc
fist
sub
cmp
in
test
adc
adc
or
cmp
mov
fsubrp
shl
cmp
imul
stos
retf
inc
pop
xor
ror
cmps
imul
push
jb
call
mov
or
sbb
or
or
sub
out
mov
xlat
fcom
ss
sub
sub
inc
mov
cmp
add
xor
or
bound
xchg
mov
mov
and
enter
xor
in
add
adc
jmp
push
sub
push
sub
mov
sbb
sub
sbb
sbb
cmp
rol
fsub
push
dec
cwde
adc
ret
and
retf
dec
inc
pop
daa
dec
ret
add
inc
lea
out
mov
adc
inc
add
or
jbe
mov
(bad)
fcmovnbe
lahf
sub
mov
adc
push
ror
dec
addr16
out
imul
cmp
inc
gs
ss
enter
dec
xchg
push
xor
xor
sbb
push
lock
pop
pop
sub
aaa
stos
ret
pusha
jo
(bad)
dec
push
test
sbb
pop
mov
xor
or
test
sbb
xlat
add
int
push
adc
(bad)
pop
shl
adc
adc
imul
pop
mov
in
and
or
push
rcr
cs
cmp
cmps
dec
ss
(bad)
cmp
imul
or
adc
es
mov
inc
mov
adc
sbb
or
push
jmp
fistp
int3
inc
mov
fcomp
mov
punpckhwd
call
enter
imul
and
xchg
pop
shl
dec
pop
jae
mov
sub
cld
retf
retf
in
xor
mov
fldenv
dec
inc
pop
stos
(bad)
xchg
add
push
test
cld
into
(bad)
cs
or
mov
inc
mov
sbb
sub
add
xor
ss
cmp
fsub
hlt
xchg
mov
cdq
adc
adc
outs
push
pusha
outs
and
mov
and
inc
mov
jbe
in
pop
arpl
je
test
retf
push
push
shl
mov
pop
push
aaa
dec
push
cmp
xor
jp
mov
sub
pop
fldcw
stos
movs
test
sub
xchg
ins
add
mov
in
jae
jmp
sbb
inc
fist
sub
dec
add
aaa
or
jo
jmp
add
mov
mov
fidiv
jae
(bad)
sbb
add
add
cmp
movs
or
hlt
add
fdivr
and
add
hlt
sbb
pop
add
test
add
fstp
fs
dec
inc
arpl
add
add
push
sub
sbb
dec
cmp
loopne
in
fld
sub
rol
mov
sub
rol
fst
ret
jbe
call
inc
fucomp
call
mov
add
dec
fnstsw
pop
dec
call
mov
xchg
adc
xor
aam
mov
xchg
dec
xor
loope
xor
cmp
fiadd
jb
(bad)
push
cmps
imul
dec
mov
pop
fild
push
dec
fbld
out
dec
imul
push
xor
mov
sar
cmp
nop
fidiv
inc
add
or
mov
or
sub
sub
sub
daa
les
jb
mov
ds
dec
mov
mov
push
sbb
add
xchg
xchg
rcr
cs
test
xlat
ror
pop
es
xor
mov
dec
addr16
imul
daa
add
repnz
add
loope
add
stos
pop
ror
add
cmps
push
and
imul
adc
lods
in
mov
or
jmp
and
or
ins
and
in
add
jno
js
inc
out
sub
ret
and
call
add
les
in
dec
push
cld
cli
cld
sbb
(bad)
punpckhbw
or
icebp
pop
sub
mov
loop
or
jg
test
ret
ret
clc
or
mov
dec
sahf
in
out
enter
inc
sbb
fiadd
int
dec
add
xchg
add
dec
movs
sbb
rcl
xchg
xor
sub
sti
cmp
enter
ds
push
xor
setnp
(bad)
outs
fwait
cmps
ss
or
jae
imul
bound
pop
scas
push
(bad)
gs
mov
aas
inc
xchg
sbb
mov
fld
fcomp
push
and
sub
fild
pop
fmul
sbb
cli
outs
and
xor
outs
push
jo
xchg
ins
div
dec
sti
mov
sbb
cmp
jmp
das
pop
sub
sbb
and
mov
sbb
out
cmps
pop
fiadd
xor
or
imul
int
daa
into
fiadd
out
sbb
adc
xchg
add
sbb
push
dec
pop
sub
call
sbb
pop
sbb
mov
jne
xor
pop
dec
sbb
into
xor
js
inc
iret
jne
and
mov
aas
pop
push
jno
and
pop
aam
sbb
sbb
or
sbb
xchg
loopne
pop
push
mov
outs
fadd
push
inc
loope
in
loopne
push
pop
cs
fcomp
test
fisttp
out
add
jo
js
dec
repz
xchg
dec
enter
ins
and
sub
jae
mov
icebp
sbb
and
dec
les
dec
cmp
sbb
loopne
enter
loopne
out
xor
and
out
pusha
xchg
jns
out
adc
push
nop
inc
ja
nop
or
and
or
mov
jae
lods
jns
jbe
test
jmp
ja
dec
shl
(bad)
mov
pop
mov
inc
mov
shl
adc
imul
push
xchg
and
fisttp
fistp
fs
popw
fcmovnu
fst
inc
inc
pop
xor
in
adc
loope
dec
pop
inc
add
dec
jo
dec
or
mov
mov
mov
loopne
dec
and
adc
ins
adc
pusha
cmp
test
aaa
in
pop
inc
xchg
pushf
test
daa
inc
xor
xchg
push
mov
mov
push
or
push
sub
shl
dec
pop
jmp
nop
fild
jg
cmps
imul
mov
nop
or
fcmovnu
fnsave
push
inc
cmp
sub
fld
ja
fisubr
sub
cs
nop
mov
mov
loopne
mov
sahf
push
jmp
lds
xor
and
add
add
test
ror
mov
add
mov
or
and
jo
add
ja
mov
mov
mov
jp
xor
imul
loopne
or
mov
adc
popa
cmp
jp
jmp
inc
add
gs
dec
out
push
leave
js
jmp
loopne
jne
adc
pop
loope
pop
mov
out
pop
sbb
lods
inc
cs
adc
in
mov
mov
dec
jb
(bad)
inc
or
fwait
movs
sub
mov
dec
cmp
nop
add
loopne
test
jbe
sbb
(bad)
mov
push
or
scas
mov
push
dec
out
lods
mov
sub
adc
es
inc
add
xor
mov
mov
cwde
dec
adc
cmp
fwait
sbb
and
jb
(bad)
inc
in
ds
sbb
mov
cmp
fistp
pop
adc
rol
jbe
sub
and
mov
sbb
sbb
mov
mov
mov
mov
pop
add
pop
sub
pop
sub
pusha
test
fdiv
enter
cs
call
lock
push
out
and
imul
(bad)
dec
fwait
mov
push
pop
daa
lahf
mov
rol
call
cs
adc
sbb
xlat
inc
sti
outs
inc
cmp
adc
inc
fisubr
cs
or
jo
mov
adc
inc
push
sbb
fcom
xor
add
xchg
hlt
xor
fdivr
xor
pop
ja
sub
lods
adc
xchg
sbb
fwait
adc
and
sub
mov
push
add
sbb
add
xchg
lock
push
push
cmps
sub
fild
mov
inc
push
push
and
nop
push
fild
dec
push
jbe
fistp
icebp
or
or
pop
inc
jo
and
jl
repnz
mov
sbb
cdq
repz
dec
shl
mov
sar
pop
push
or
dec
cmp
repz
cmp
sbb
fstp
xor
cmc
jbe
add
aas
or
lods
push
mov
mov
push
pop
mov
sbb
inc
push
mov
push
(bad)
mov
push
sub
push
loope
push
sbb
shr
sub
ins
push
sub
push
pusha
int
mov
clc
(bad)
push
cmc
pop
dec
hlt
pop
push
dec
shl
mov
cmps
dec
fcmovb
push
inc
daa
fcomi
push
pop
or
pop
or
sbb
pop
enter
fistp
add
jno
xchg
ja
inc
sbb
mov
ja
mov
mov
mov
imul
cmp
ja
xchg
sbb
outs
pushf
push
test
xchg
mov
ja
in
and
mov
or
retf
or
cmp
and
dec
enter
dec
fidiv
pop
outs
lods
or
push
pop
or
mov
or
mov
je
(bad)
dec
bound
pop
sbb
and
sub
jns
les
fndisi(8087
test
add
pop
sbb
xchg
test
shl
inc
cwde
pusha
sti
jae
sub
jo
cmp
test
adc
scas
sbb
jb
or
cld
test
cmp
cdq
push
imul
fxtract
xor
mov
push
push
clc
das
push
ins
mov
jbe
push
stc
inc
cdq
push
inc
stc
es
mov
xor
push
and
rcl
cmc
jmp
pop
shl
xor
ret
pop
cmp
imul
xor
das
cmp
add
outs
jl
or
and
(bad)
lock
sbb
inc
call
mul
adc
xchg
pop
(bad)
cmp
mov
sbb
xlat
dec
out
push
in
push
mov
xor
mov
loopne
xchg
fmul
sysexit
fcom
mov
and
push
aam
sar
jp
mov
jns
sbb
adc
int3
shl
inc
push
int3
xor
add
mov
dec
fsubp
add
outs
enter
add
xchg
or
mov
and
in
in
mov
cmps
imul
scas
ins
aad
inc
out
xchg
pop
shl
pop
ja
enter
les
nop
(bad)
shr
ror
int3
inc
mov
mov
inc
dec
push
mov
ds
mov
push
sub
js
cmp
sbb
ror
cs
mov
mov
pop
jb
mov
mov
xchg
or
xor
pushf
jmp
xor
cwde
dec
mov
jmp
popf
xchg
xchg
inc
sub
int3
sub
ror
in
and
mov
movs
add
cld
nop
retf
loop
dec
(bad)
dec
lods
xchg
add
xor
adc
xor
mov
mov
scas
stc
inc
or
add
pop
or
aas
nop
(bad)
sub
dec
xchg
repnz
sub
or
and
xor
std
push
leave
inc
pop
in
sub
jo
test
and
inc
cmp
dec
imul
cdq
add
(bad)
mov
dec
nop
push
fwait
cmps
imul
sub
push
test
es
adc
das
push
dec
push
pusha
xchg
pop
push
adc
xor
test
add
sub
inc
xor
call
aad
cmp
sbb
xchg
sub
xchg
and
xchg
xchg
xchg
xchg
js
mov
xchg
mov
int3
rol
fs
enter
push
xchg
call
push
xchg
mov
lods
cli
sbb
sub
pop
imul
stos
add
ins
jne
xchg
sbb
or
xchg
(bad)
inc
inc
xchg
xchg
xchg
xchg
push
pop
push
mov
xchg
push
pop
(bad)
cmp
pop
xchg
xchg
dec
mov
xchg
test
aad
cmp
and
add
and
or
rcl
test
call
repnz
add
and
inc
icebp
jle
test
or
mov
sbb
(bad)
ins
xchg
jg
xchg
mov
inc
push
or
mov
mov
je
sub
jb
adc
enter
mov
jmp
sbb
pop
stos
xchg
xchg
jno
aam
pop
push
sbb
fcomip
jmp
mov
jecxz
aas
repnz
jmp
mov
and
rcr
ja
inc
arpl
adc
or
cwde
xor
or
mov
jo
ds
in
or
add
and
jb
and
adc
pop
enter
add
int3
(bad)
in
push
and
add
push
cmps
jg
icebp
sub
add
jge
(bad)
movaps
aad
ja
pop
pop
and
add
adc
push
out
repnz
push
xchg
sbb
mov
mov
adc
mov
inc
pop
cmp
outs
jae
push
cs
adc
adc
adc
sar
add
adc
add
adc
movs
and
aas
dec
or
arpl
push
mov
mov
fcom
stos
mov
xor
jmp
in
loopne
or
cmc
sbb
movs
inc
cmc
jmp
push
sbb
enter
jmp
shl
push
add
js
pop
dec
pop
sub
or
sub
fidivr
xchg
mov
inc
cmp
add
cmps
dec
jg
jmp
mov
ja
loope
sar
das
imul
cmps
add
cmp
sub
push
adc
or
add
xchg
pop
repnz
pop
inc
push
or
mov
pushf
in
ret
pop
or
test
or
test
les
leave
das
sub
clc
xchg
pop
add
lock
dec
rol
pop
stc
repnz
or
fbld
daa
push
je
and
dec
jge
movs
sub
int3
sub
cmp
int
mov
or
dec
enter
adc
add
call
daa
inc
sub
jnp
js
pop
sti
and
jne
jmp
lock
pop
in
jmp
addr16
je
push
cmp
inc
mov
cmp
jae
nop
psubsb
jmp
mov
sbb
and
pop
mov
mov
fist
mov
push
(bad)
mov
xor
mov
icebp
and
ds
clc
pop
sbb
pop
hlt
loopne
pop
lock
shl
loopne
push
pop
or
movs
test
xchg
das
inc
lock
adc
mov
or
fsub
sbb
sbb
xor
fist
adc
xor
or
std
icebp
mov
push
mov
loop
or
jge
adc
je
ret
sbb
fdiv
movs
xor
retf
cmp
push
stos
sub
cmp
popa
add
or
pop
add
and
icebp
cdq
ss
icebp
or
clc
(bad)
stc
or
add
cmps
cmc
add
sar
daa
cmc
or
cmp
xchg
out
rol
in
or
clc
lock
mov
mov
pop
adc
or
or
(bad)
lea
push
xor
sub
leave
lds
clc
ret
pop
push
or
cmp
cmp
je
ja
out
adc
or
or
jb
add
jo
sub
ror
in
(bad)
and
aad
imul
les
push
cmps
aam
push
lods
sbb
popa
sar
ds
cmp
mov
xchg
sub
and
jg
aad
sub
sub
jmp
rol
push
add
jp
adc
xor
sti
push
mov
jno
test
ins
hlt
mov
pop
clc
adc
and
fmul
test
push
in
cmp
fwait
sub
jb
je
dec
je
add
es
out
inc
inc
jmp
sahf
xchg
out
push
gs
dec
mov
(bad)
icebp
add
rcr
pop
xchg
loopne
neg
es
fistp
jmp
gs
sub
inc
daa
mov
ret
lods
dec
cmp
jecxz
mov
dec
stc
or
xor
shr
inc
inc
push
pop
and
xor
data16
jbe
outs
loope
xor
mov
mov
and
pop
imul
rcl
cmp
jmp
sub
neg
cmp
push
pop
sahf
mov
sub
and
pop
imul
push
or
add
add
dec
jmp
xchg
lea
imul
inc
mov
and
(bad)
clc
loopne
adc
data16
sub
not
and
pop
ins
call
or
adc
dec
mov
cmp
sub
cmp
cmp
pop
pop
je
cmc
jns
and
jne
add
adc
fistp
jmp
daa
sub
popa
or
dec
ficom
inc
inc
jge
add
add
retf
mov
mov
loop
imul
add
mov
mov
and
dec
mov
ja
pop
jno
sub
das
jae
sbb
lahf
inc
jb
cmp
and
xor
or
xor
shl
and
pop
imul
pop
ret
mov
jmp
sub
pop
mov
mov
jns
adc
into
test
and
repz
add
in
icebp
movzx
std
or
add
adc
in
shl
adc
adc
xor
xchg
int
sub
push
jmp
lock
jne
in
shl
movs
push
or
cmp
adc
jge
and
ja
or
push
repnz
adc
add
fwait
pop
clc
mov
sbb
fcomp
shl
dec
lock
test
(bad)
jne
pusha
or
lock
cld
sub
leave
fdiv
xor
add
sbb
pusha
pusha
ins
and
ficom
push
lock
mov
call
mov
mov
adc
nop
arpl
dec
fsubr
pop
stc
mov
loop
sub
mov
jge
jp
mov
or
xor
pop
iret
shl
ror
jmp
call
fcom
fiadd
push
movs
lods
adc
sub
mov
xor
fwait
aaa
cmp
je
xor
jmp
jmp
jne
or
je
rol
rcl
sub
les
jne
mov
or
ja
rcr
jecxz
add
mov
gs
sub
xchg
mov
clc
or
sub
jmp
pop
push
inc
sub
xor
hlt
mov
mov
gs
lods
mov
fsub
retf
pop
sbb
retf
shr
or
push
jbe
jne
fistp
pop
shl
rol
dec
(bad)
js
rol
pop
setl
sbb
fadd
push
add
das
and
bound
inc
and
nop
call
add
dec
je
push
data16
nop
jnp
cmp
jne
aas
add
mov
push
movs
imul
push
mov
and
jmp
adc
xlat
jle
in
jge
add
adc
jnp
cwde
mov
sbb
jbe
sub
xchg
les
inc
fcomp
popa
adc
jbe
dec
jae
mov
adc
add
inc
sbb
and
in
call
xlat
sbb
mov
mov
clc
adc
outs
mov
pop
movs
xor
popa
movs
fwait
shr
cli
or
jne
mov
jmp
add
jmp
lea
dec
cwde
mov
pop
or
(bad)
(bad)
sub
lea
add
pushf
push
xchg
rcr
or
addr16
jno
fnstenv
sbb
dec
fcomp
sbb
mov
test
int
mov
jb
(bad)
sahf
push
push
xchg
in
scas
pop
cmp
cmp
dec
adc
in
fcomp
cmps
inc
sbb
push
lock
jg
sahf
outs
ins
ins
dec
sbb
sbb
dec
ss
loop
fistp
or
(bad)
dec
call
out
imul
rcl
mov
jge
sub
(bad)
adc
dec
cmps
dec
dec
mov
cmp
clc
mov
fsub
adc
mov
(bad)
seto
cmps
adc
mov
xor
cmp
add
pop
leave
cld
mov
jl
sub
xchg
inc
add
stc
shl
je
sbb
xor
lods
inc
or
xlat
clc
test
xor
test
cdq
scas
push
push
mov
push
movs
add
or
in
mov
int
xchg
sbb
add
sbb
inc
dec
add
pusha
popa
mov
cmp
adc
cmp
mov
lock
std
retf
cmp
add
add
sub
ins
sti
mov
std
in
xor
adc
add
xor
push
aad
neg
repnz
shl
push
cmp
cld
adc
and
data16
lods
or
push
sar
inc
mov
lahf
and
mov
cmps
and
fs
ja
pop
pop
add
pop
stos
cmp
shl
cmp
dec
lods
adc
cmp
test
adc
(bad)
popa
daa
push
jmp
dec
sub
or
jmp
ret
data16
push
sub
add
call
sbb
inc
pop
fimul
push
inc
imul
mov
and
test
add
sub
xor
(bad)
in
xchg
js
mov
mov
aaa
adc
sub
mov
add
lods
mov
jno
jp
(bad)
mov
aam
nop
add
neg
mov
mov
xor
in
inc
(bad)
and
add
retf
nop
aam
mul
pop
dec
xor
inc
cmp
dec
ins
adc
add
xchg
neg
imul
dec
nop
adc
mov
test
sub
add
and
add
ret
xchg
cmp
jne
pop
dec
imul
leave
push
push
paddq
push
fucomip
fstenvw
push
outs
dec
push
pop
push
adc
rol
dec
and
fstp
neg
or
out
mov
fwait
adc
xchg
fstp
imul
jnp
jo
popf
(bad)
adc
neg
mov
aam
sub
popf
sbb
adc
mov
mov
mov
adc
ret
(bad)
es
cli
xor
leave
xchg
xchg
or
fcom
mov
mov
jmp
xor
rcr
xor
imul
and
fstp
push
dec
shl
ret
push
mov
xchg
sub
popa
xor
and
fstp
sub
fst
sbb
sbb
sub
lock
mov
add
lds
fldpi
pop
sbb
lods
lea
in
cmp
loop
or
bound
adc
sbb
adc
movs
mov
fiadd
cmp
jb
into
es
sub
pop
add
adc
(bad)
dec
and
fs
cwde
push
pop
adc
or
rol
and
xor
ret
add
retf
jns
push
pop
lahf
movs
jbe
cwde
shl
push
fadd
or
shl
mov
or
data16
push
or
retf
or
adc
mov
adc
mov
lods
mov
pop
movs
in
xchg
int3
lds
adc
lods
movs
mov
ss
pop
push
xor
cmps
inc
mov
test
pop
rol
jmp
sbb
pusha
aam
mov
fcmovne
sub
ja
dec
adc
dec
ffreep
push
or
mul
sub
cdq
sub
xor
push
and
pop
add
sbb
je
add
ds
loopne
xchg
popa
xor
dec
push
xchg
out
adc
push
add
cmp
jb
push
add
and
int
cmps
mov
jo
jns
rcr
push
ins
popa
and
cmovno
fsub
adc
ins
pushf
fldcw
sbb
in
pop
inc
outs
jne
xchg
mov
inc
scas
add
inc
loopne
and
or
adc
sti
mov
outs
imul
(bad)
rcl
add
push
outs
imul
sbb
and
sar
and
inc
fild
add
fdiv
sbb
mov
and
out
daa
sub
fidiv
aaa
ss
jo
push
pop
outs
clc
std
lea
jmp
(bad)
sub
gs
pop
scas
ja
call
push
loope
mov
xchg
test
lea
sbb
and
adc
inc
das
cmp
pop
add
and
jno
or
add
icebp
cmp
imul
jmp
mov
inc
sub
push
das
lods
inc
add
loopne
add
fwait
mov
pushf
mov
or
adc
test
sbb
test
or
and
sbb
enter
rcr
cmp
jo
(bad)
lahf
sub
pop
inc
daa
dec
mov
daa
push
push
data16
cmp
pop
or
loopne
dec
jl
ret
jmp
in
pop
or
mov
jmp
test
fist
cmp
dec
adc
movs
ret
pushf
mov
adc
sub
or
mov
popf
fisubr
loopne
push
je
or
inc
push
stos
and
sbb
add
xor
movs
out
sbb
inc
and
vsqrtsd
pop
(bad)
sbb
pop
inc
cmp
adc
dec
sub
pop
fsub
(bad)
lea
add
jmp
iret
sbb
les
lods
and
mov
pop
push
and
inc
mov
into
adc
inc
fwait
fs
sub
and
add
adc
lods
sub
sbb
jb
das
jge
push
cmp
mov
or
(bad)
add
ret
and
shr
sub
dec
add
xor
or
pusha
rcl
xchg
sub
inc
jl
sbb
scas
or
jno
lea
das
jae
sbb
inc
add
test
push
adc
push
pop
pop
in
or
or
adc
or
clc
add
mov
outs
dec
(bad)
xor
add
sti
jg
or
or
push
loope
in
add
imul
jmp
xor
clc
div
sub
inc
mov
add
mov
push
btr
pusha
inc
fmul
pop
xchg
sub
push
lock
gs
or
mov
sub
mov
or
sahf
inc
sti
or
sbb
xor
jecxz
sub
lds
ds
sub
and
mov
fild
call
sar
add
xor
fisttp
dec
aam
scas
cmp
mov
adc
sbb
andps
fs
test
jo
dec
ds
lock
in
retf
mov
add
push
icebp
in
iret
sar
rol
dec
and
adc
inc
sub
jae
add
cwde
les
xchg
js
loope
hlt
xlat
cmp
out
xor
mov
mov
repz
push
cmps
or
jnp
adc
jl
add
mov
leave
mov
fmul
jo
addr16
dec
shl
sub
dec
pop
es
js
call
data16
push
imul
mov
pop
out
mov
fcmovne
or
xchg
inc
mov
push
pop
mov
imul
inc
fisub
and
sbb
inc
jmp
pop
lock
mov
das
lahf
xor
dec
xchg
(bad)
retf
ret
xchg
sar
jle
push
dec
jns
push
fs
sbb
mov
or
xor
xor
mov
aaa
loopne
out
mov
jle
xchg
dec
sbb
jo
dec
gs
jmp
mov
inc
sbb
outs
jne
cdq
sbb
inc
popf
and
(bad)
test
and
mov
(bad)
mov
sbb
mov
lods
add
add
sar
add
xchg
mov
push
lea
mov
dec
and
jno
arpl
inc
das
iret
js
xchg
ficomp
push
fcomp
js
inc
pop
push
sub
stos
jge
lds
fild
inc
(bad)
fild
dec
sbb
cmc
add
mul
jg
push
or
aas
add
inc
cmp
jle
mov
dec
jg
sbb
or
stc
dec
push
leave
jge
xchg
jmp
inc
jecxz
jg
loop
sub
cmp
je
lock
dec
dec
sub
inc
or
push
jp
mov
pop
es
mov
outs
adc
repz
mov
sbb
push
mov
or
sbb
add
ret
scas
xchg
outs
nop
pop
xlat
xor
cmps
(bad)
add
sbb
ja
sbb
nop
push
mov
cmp
sub
mov
call
add
pop
test
and
gs
adc
jae
xchg
inc
and
dec
jne
pop
xchg
cmp
clc
loop
lods
aaa
xlat
pop
xor
dec
xchg
adc
sahf
or
jo
xor
dec
(bad)
or
or
xor
fisub
lock
sub
mov
sbb
add
loop
fild
cwde
inc
xchg
repz
test
sbb
adc
fmul
add
ud1
je
jg
cli
add
mov
cmp
or
aam
mov
int
cdq
cmp
hlt
pusha
ins
je
and
aam
jno
addr16
adc
mov
lea
or
jle
mov
dec
popa
adc
pop
sti
pop
jne
mov
inc
or
pop
ss
mov
loopne
scas
sbb
pop
in
mov
mov
inc
push
mov
int3
sbb
div
sbb
cmp
pop
fist
sbb
repnz
push
push
das
cwde
push
aas
in
pop
ins
push
outs
and
jecxz
or
(bad)
into
imul
shl
inc
cmp
pop
mov
pop
mov
ret
loop
cmps
mov
icebp
add
clts
push
test
jg
scas
inc
neg
call
or
daa
fnstcw
pushf
mov
stos
sbb
cmp
cmc
add
xlat
sub
pushf
push
jge
movsx
jg
mov
in
and
fld
and
or
and
fstp
cmp
sbb
fcom
jmp
sbb
cmp
dec
jmp
inc
faddp
ror
push
jmp
jns
jmp
ins
mov
fs
inc
add
aaa
ins
inc
movs
outs
xor
push
daa
and
ret
cmp
and
adc
xor
or
inc
mov
jne
icebp
nop
push
push
mov
adc
push
ds
and
sbb
adc
sub
inc
inc
ins
or
cmp
jae
add
shl
sub
je
repnz
int
adc
dec
xor
hlt
rol
mov
push
inc
push
adc
mov
add
push
adc
inc
js
xchg
sar
adc
sbb
(bad)
pop
std
adc
popf
outs
xchg
dec
and
xor
call
in
rol
or
push
push
pop
push
aam
push
mov
mov
jmp
sahf
dec
in
jmp
cs
rcr
cmps
push
mov
vpmulhw
add
stc
test
mov
repnz
sub
mov
aas
in
mov
mov
pop
adc
lds
sbb
pop
fst
cmp
fistp
aas
out
pop
sbb
pop
lock
int
pusha
pop
dec
cmp
sub
sbb
int
popa
call
sub
and
fidivr
stos
or
dec
mov
in
inc
dec
push
test
das
test
cs
jo
outs
add
cmp
loopne
xchg
add
hlt
mov
dec
mov
add
lock
stc
mov
arpl
xor
push
pushf
out
shl
add
ins
stos
push
ins
jmp
adc
pop
arpl
dec
mov
push
fwait
imul
fwait
pusha
adc
sub
push
mov
adc
push
(bad)
mov
add
arpl
pop
test
les
or
fcomp
je
ror
sub
adc
xchg
test
push
cmp
mov
jecxz
sbb
push
cmp
fwait
sbb
shl
mov
jbe
xchg
push
or
adc
add
push
mov
mov
cdq
mov
xor
es
icebp
out
adc
mov
pop
add
sub
ja
dec
adc
and
daa
rcl
or
xchg
ret
ret
push
cli
sbb
add
pop
add
mov
jcxz
xor
xlat
xor
add
and
inc
cmps
add
mov
add
pop
cmp
div
pop
or
inc
pusha
jmp
jle
aaa
enter
ds
cmp
js
mov
cmp
xchg
jnp
ret
jno
inc
mov
lods
mov
dec
fadd
loope
sbb
xor
pop
pop
retf
inc
lea
lock
ss
call
cmp
gs
push
and
jmp
xchg
enter
push
pop
out
lock
mov
call
and
xchg
and
cmp
shl
out
pop
jle
push
loopne
jne
sub
mov
clc
call
jo
mov
mov
mov
add
ror
cdq
(bad)
xchg
push
repnz
mov
aas
sub
enter
jnp
loope
mov
sbb
sar
fwait
aam
loopne
ins
rcr
iret
ret
lock
add
lahf
iret
push
and
movs
ror
clc
aad
adc
fcom
adc
push
sbb
repz
fsub
push
and
cld
push
sub
ja
push
add
std
mov
mov
iret
movs
xor
cmp
je
mov
fiadd
add
mov
repnz
mov
push
push
mov
repnz
mov
ss
stc
fs
js
aas
(bad)
cmp
jns
mov
or
xor
jl
les
cmp
jns
test
mov
and
mov
lds
push
daa
xchg
adc
sub
cwde
mov
pushf
jl
mov
mov
test
jno
jno
js
inc
sbb
add
aas
mov
mov
or
lds
nop
loopne
add
(bad)
ret
add
add
or
lds
mov
add
mov
es
inc
pop
sub
(bad)
and
dec
push
inc
push
push
dec
push
cmps
mov
and
cs
jmp
cli
or
xchg
adc
add
pop
fwait
out
hlt
jo
pop
adc
ins
in
and
inc
in
push
nop
rcl
inc
call
and
clc
inc
xor
or
rcl
push
xor
pop
cld
rcl
push
inc
cmp
aaa
adc
push
inc
mov
ret
outs
das
sbb
xchg
fsubr
test
and
or
and
push
add
fild
pop
shr
retf
and
add
test
add
push
dec
adc
jbe
ja
dec
or
nop
daa
imul
jmp
pop
pop
(bad)
cld
add
sbb
ds
add
retf
sbb
(bad)
xor
pop
sbb
nop
or
(bad)
clc
mov
cmp
clc
clc
jle
push
cmp
ror
cs
int3
inc
nop
or
push
add
push
fwait
call
xchg
mov
lods
aas
sbb
ds
shl
mov
inc
addr16
push
mov
lds
mov
mov
pop
xchg
adc
int3
pop
jo
push
je
sbb
jns
ja
inc
cli
mov
adc
cld
ss
dec
and
cmp
or
mov
(bad)
lock
and
dec
out
push
arpl
lahf
inc
xor
lods
or
pushf
jp
inc
pop
mov
shr
inc
push
add
mov
scas
ins
fsubr
movs
mov
xchg
icebp
or
push
mov
call
cdq
js
inc
lahf
push
mov
mov
inc
cmp
jne
jge
clc
sbb
mov
add
outs
xchg
nop
scas
pop
xor
test
into
xlat
xchg
mov
in
nop
stos
or
add
adc
add
add
or
dec
gs
jnp
outs
push
adc
ret
xor
pop
ins
pop
mov
sub
pop
mov
or
cmp
call
dec
sbb
push
inc
add
adc
add
pop
jne
aaa
sub
fistp
jmp
ret
push
and
xor
nop
outs
adc
cmp
mov
std
ds
into
add
call
test
bound
imul
pop
mov
mov
mul
jmp
dec
jp
add
pop
mov
pop
ja
sub
sbb
jnp
pop
sub
mov
lods
daa
retf
dec
or
rol
loope
std
sub
sbb
adc
xlat
scas
out
mov
pop
mov
test
out
or
add
loopne
mov
clc
mov
ret
mov
add
and
mov
sub
dec
add
lods
loopne
xchg
dec
ss
push
mov
ja
cmps
sub
push
lahf
push
fcom
jne
icebp
push
ins
fs
push
dec
test
adc
add
pop
pop
in
or
mov
or
test
jl
fld
lds
mov
push
in
daa
out
ja
push
scas
ins
mov
ja
cmp
imul
jnp
sub
sbb
adc
push
ror
or
add
xchg
mov
fild
or
mov
xchg
popf
cwde
mov
adc
ret
sbb
pop
cmp
sbb
dec
hlt
outs
ja
push
clc
sub
and
mov
mov
mov
in
mov
or
sub
mov
shr
add
and
mov
cmp
ja
lods
jbe
or
jbe
or
jl
scas
adc
sti
push
push
mov
loopne
movs
adc
ss
jae
adc
cmp
push
jae
inc
add
xor
xor
jmp
sahf
cmp
sub
or
rol
daa
sbb
jae
mov
cmp
jae
std
add
xchg
inc
sbb
inc
adc
add
pop
not
xchg
push
or
mov
call
add
repnz
shl
mov
idiv
mov
mov
call
sbb
inc
ds
adc
jne
mov
(bad)
hlt
pop
and
sub
push
push
ss
(bad)
cwde
push
nop
ins
mov
or
pop
and
lock
jne
or
dec
dec
pop
inc
jle
xlat
cwde
lds
xchg
lock
js
inc
jo
or
sub
fst
fcom
mov
daa
fwait
aas
lea
add
sahf
dec
mov
lea
push
xchg
aaa
cmc
jne
nop
cmp
lds
push
sub
adc
mov
xchg
lea
stc
mov
jge
js
mov
jae
add
sub
mov
cld
xchg
pop
inc
add
pushf
jno
pusha
or
xor
or
dec
push
or
adc
ja
add
ret
stos
pop
iret
hlt
and
push
out
mov
dec
or
dec
sbb
and
push
ins
sub
cmp
add
out
aas
rcr
mov
inc
cmp
in
mov
or
add
or
push
and
or
iret
in
pop
sub
mov
out
add
pop
dec
(bad)
mov
push
movs
call
out
add
mov
imul
outs
lods
mov
mov
mov
sub
dec
pop
push
das
fstp
cmp
adc
push
jb
or
adc
inc
test
cwde
mov
pop
mov
sub
sti
rol
xor
ficom
mov
cmp
jb
add
or
mov
cmp
les
or
sahf
retf
add
sbb
popa
adc
adc
jl
mov
aad
add
enter
jl
inc
or
or
mov
mov
and
push
sti
jecxz
add
loop
jg
add
fidiv
cmp
ins
or
push
dec
aas
addr16
rol
and
or
cld
and
dec
pop
mov
adc
je
out
movs
(bad)
jl
(bad)
adc
cli
sub
enter
ret
jge
add
and
inc
mov
or
(bad)
cmp
cmp
hlt
outs
daa
cmp
lock
rol
sbb
inc
add
cld
or
out
jne
and
or
inc
nop
(bad)
std
sub
mov
add
scas
int
push
mov
add
into
jge
aaa
(bad)
out
inc
shr
cld
jg
clc
sub
sub
cmp
jge
pop
inc
mov
fucom
add
xor
adc
xlat
cld
xor
lea
test
add
sub
(bad)
stc
add
(bad)
or
dec
adc
and
push
lahf
or
or
xchg
out
dec
sbb
icebp
dec
add
clc
jp
stc
cdq
jo
(bad)
imul
sbb
leave
nop
hlt
cmps
adc
scas
call
mov
sbb
cmp
inc
adc
cs
call
sub
cmp
or
mov
pop
mov
adc
ins
les
adc
or
pushf
inc
fisttp
jmp
mov
adc
sbb
or
mov
sub
cwde
addr16
repnz
aas
push
or
fwait
shl
out
lock
cmp
popa
xchg
jo
pop
add
ret
fucomi
mov
and
(bad)
sub
xor
sub
iret
loopne
ja
out
sub
mov
ror
cmp
(bad)
jmp
sub
fisubr
xchg
cmp
icebp
lahf
les
xchg
adc
int3
int3
pusha
cmp
adc
cmc
hlt
push
inc
sar
cmp
jne
pop
dec
push
push
adc
or
jmp
lock
mov
sbb
pop
mov
jecxz
push
jle
adc
cs
adc
sti
adc
inc
daa
pop
jo
loope
xchg
jmp
sub
mov
mov
dec
sbb
call
inc
mov
sub
cmp
sbb
mov
xor
xor
into
xlat
mov
xor
pop
ret
stos
mov
imul
xchg
leave
arpl
jne
pop
jne
adc
xlat
test
pop
pop
xor
rcr
pop
xor
lock
inc
cmp
xor
cmp
jle
inc
in
push
or
sub
inc
js
jmp
retf
jecxz
cli
push
outs
jge
mov
clc
or
(bad)
xchg
fcom
loopne
pop
lds
je
test
add
add
sti
loope
inc
scas
shl
push
or
js
mov
lods
retf
sub
scas
jge
inc
(bad)
cmp
fstp
imul
in
and
jbe
jmp
test
fidivr
sbb
punpckhwd
push
mov
mov
and
arpl
sbb
push
sbb
xor
mov
add
arpl
push
inc
add
mov
sub
push
movs
push
pop
jne
out
jle
jno
repnz
jno
xor
push
mov
lock
test
jne
test
ja
lock
mov
and
ins
and
sub
mov
add
das
or
not
(bad)
jge
call
inc
das
add
pop
in
or
cmp
inc
push
ss
sub
in
xor
add
pop
sub
mov
test
je
inc
lock
lock
add
or
or
data16
nop
jnp
in
dec
in
jmp
clc
push
adc
cwde
fidiv
sbb
jns
pop
shl
aad
jno
xor
dec
mov
add
out
mov
pop
call
scas
push
icebp
dec
loope
jecxz
aad
add
into
adc
dec
lock
mov
in
push
arpl
int
adc
add
pop
jge
dec
mov
dec
sbb
inc
mov
test
nop
movs
add
inc
add
cmp
jo
jo
or
push
ins
pop
imul
xor
addr16
and
mov
adc
sbb
cwde
fidiv
xor
push
mov
push
test
and
jne
movs
js
mov
fild
xor
pusha
dec
out
ret
jmp
cmp
push
inc
pop
mov
pop
popf
mov
or
add
or
mov
add
pop
mov
add
lock
jmp
dec
sbb
sahf
pusha
sbb
adc
sbb
arpl
fwait
or
nop
adc
inc
fs
bound
xor
ins
pop
pop
inc
xchg
add
inc
jmp
xlat
inc
test
pusha
dec
mov
jmp
adc
xchg
xchg
scas
call
mov
push
and
inc
pop
add
out
adc
retf
mov
stos
xor
sub
xor
data16
je
or
repz
outs
repz
sbb
enter
or
mov
ret
push
jmp
pop
xor
fsubrp
sub
bound
shl
mov
out
and
xchg
mov
jecxz
cmp
and
dec
inc
std
aaa
mov
cmp
sbb
out
cld
jns
sbb
mov
add
in
xor
int3
cmp
add
mov
mov
aas
bound
sbb
fst
mov
sbb
dec
cmps
mov
sbb
push
lock
popa
les
sbb
stos
cmp
add
push
sbb
cmp
jmp
cmp
ja
pushf
mov
and
adc
scas
call
ret
loope
jo
push
xor
xchg
shl
cwde
out
mov
xchg
xor
fbld
push
je
sub
cmp
jg
sub
hlt
inc
rol
jl
cmp
jg
add
mov
inc
adc
mov
in
ret
aad
mov
jmp
mov
pop
sbb
jbe
mov
or
int
mov
adc
jns
cmc
add
pop
rcr
out
das
inc
mov
lea
xor
std
xor
and
add
(bad)
ds
inc
pop
mov
in
add
retf
fld
xchg
mov
or
ins
frndint
fldenv
mov
mov
cmp
push
or
xchg
xchg
lods
(bad)
pop
pop
inc
std
jo
and
cmc
adc
daa
adc
scas
ret
popf
icebp
fnstsw
cmp
mov
jbe
mov
cs
je
dec
test
pop
jnp
sbb
inc
pop
shl
js
je
ins
push
dec
pusha
adc
stos
mov
fidivr
mov
rol
les
test
mov
retf
add
push
mov
push
push
ror
mov
inc
(bad)
xor
sub
jae
test
and
pop
mov
test
enter
fs
push
and
dec
pop
fsub
popa
lock
xlat
scas
je
sub
ins
test
(bad)
daa
adc
sub
pushw
jmp
and
add
mov
or
and
add
hlt
pop
inc
pop
cs
add
test
pop
push
aaa
inc
ds
cmp
es
in
mov
push
setae
dec
cmp
dec
cmp
test
mov
nop
xor
(bad)
dec
jl
scas
int3
ss
movs
mov
das
inc
sub
cmp
imul
mov
push
aaa
dec
out
retf
test
cmp
xchg
test
call
test
mov
ins
cmp
jae
cmp
push
cmp
dec
sub
jp
loopne
out
jg
dec
jne
jmp
lea
push
imul
lahf
and
push
push
clc
ucomiss
je
imul
push
cmp
and
mov
pop
push
sbb
adc
mov
pop
mov
push
scas
pop
dec
and
xor
and
pop
inc
mov
imul
dec
dec
lods
jmp
loopne
add
add
mov
(bad)
rcl
push
pop
cmp
fs
cmp
push
mov
jb
cmp
dec
pop
and
div
mov
das
ja
and
pop
xor
inc
sbb
dec
adc
cmp
cmps
jg
jmp
cmp
sbb
dec
mov
(bad)
ja
jg
cld
ror
mov
xor
inc
add
jb
xlat
outs
inc
(bad)
cmp
ja
mov
mov
out
xlat
arpl
loopne
mov
sub
jbe
mov
or
rdmsr
sbb
add
inc
jnp
mov
xchg
icebp
inc
sar
adc
mov
inc
inc
push
pusha
mov
inc
xor
adc
inc
inc
jg
inc
or
mov
xchg
xchg
inc
inc
pop
cmp
jne
dec
sbb
pop
add
aaa
sbb
in
add
or
loop
push
adc
pop
ror
cmp
push
cmp
jne
mov
adc
cmp
jne
adc
mov
inc
sbb
add
inc
sar
adc
std
jne
ja
jmp
sbb
fild
mov
shr
or
sbb
dec
pop
cmp
xchg
fstp
add
and
mov
or
xor
dec
mov
int
dec
and
or
mov
jecxz
xchg
mov
mov
or
je
push
cmp
or
jg
pop
daa
ds
out
xchg
mov
push
inc
cmp
je
mov
or
sub
bound
sub
js
pop
pop
je
sar
xor
dec
and
inc
(bad)
jnp
aad
jmp
or
or
cmp
ja
inc
mov
arpl
lahf
out
or
idiv
int
or
jge
jmp
inc
ret
fdivr
push
adc
sub
jmp
inc
inc
jmp
mov
addr16
je
nop
call
or
adc
jbe
(bad)
xchg
ja
add
scas
leave
popf
add
aad
xor
(bad)
adc
cmps
add
xchg
cli
stos
xchg
and
daa
cmp
(bad)
jnp
push
fwait
cs
jno
and
or
adc
push
imul
das
test
clc
std
or
js
add
sub
cmp
jg
add
jno
mov
inc
gs
mov
ret
xchg
test
and
xchg
les
and
popa
or
test
or
mov
stos
jge
inc
dec
jg
pop
ret
and
add
xchg
test
jg
outs
cmp
push
pop
ds
cmp
add
push
inc
aam
inc
pop
fwait
ds
mov
dec
jne
pop
pop
mov
inc
or
mul
movzx
add
fldcw
jecxz
inc
(bad)
inc
cmp
and
ja
dec
mov
and
shl
pop
jmp
cmps
test
not
sub
jne
and
dec
fistp
adc
or
mov
lea
push
and
cmps
out
push
xor
(bad)
jmp
adc
push
pop
call
daa
jmp
push
mov
js
fld
in
dec
fidivr
cmc
jne
pcmpeqb
fldenv
je
jl
mov
and
fs
mov
cmp
mov
xor
sbb
jmp
fld
fldcw
xchg
sub
cmp
adc
pop
jns
aas
mov
in
push
in
or
or
ret
psubw
dec
push
and
adc
mov
es
sub
sbb
xchg
and
inc
mov
add
mov
xchg
dec
daa
sub
test
out
sub
pop
jecxz
add
out
(bad)
repz
sbb
mov
cmp
fidivr
jmp
outs
(bad)
call
mov
bound
cmp
xlat
fadd
stc
das
nop
lods
outs
xor
xchg
push
or
push
push
clc
(bad)
(bad)
in
int3
into
sbb
ror
mov
push
pop
test
enter
movs
outs
movs
push
(bad)
(bad)
(bad)
inc
mov
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
(bad)
(bad)
dec
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
(bad)
(bad)
push
dec
js
inc
mov
stos
mov
cmp
or
mov
pop
out
(bad)
(bad)
(bad)
jg
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
jg
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
(bad)
call
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
jmp
push
movs
mov
popa
mov
and
addr16
repz
(bad)
(bad)
jmp
mov
sub
and
and
outs
bound
xor
jae
ret
movs
xchg
sub
das
add
cmp
aad
pop
and
fwait
adc
push
mov
and
rcl
add
clc
stos
int3
clc
rol
pop
sbb
add
or
loop
ins
and
and
xor
mov
stos
sub
jl
mov
out
mov
std
cmps
add
aas
or
mov
sub
push
inc
push
inc
pop
(bad)
sub
fs
clc
iret
ins
or
pop
push
push
dec
add
push
add
mov
(bad)
call
fldcw
adc
stos
mov
dec
mov
aam
mov
mov
mov
aaa
dec
jp
or
dec
mov
xor
cli
add
mov
add
repnz
mov
mov
fcomp
xchg
inc
dec
scas
sbb
sbb
pushf
pop
aaa
hlt
or
mov
jle
outs
daa
pusha
add
stos
cdq
sub
mov
pop
add
into
and
dec
stos
mov
aas
inc
mov
rep
pop
loop
hlt
(bad)
cwde
mov
mov
sub
pop
fdivr
jg
cmp
aam
sbb
dec
test
mov
mov
sti
jnp
mov
pop
sbb
cmp
das
out
xchg
(bad)
jg
ror
xchg
mov
jnp
push
mov
shl
adc
test
add
(bad)
jb
add
cmp
mov
add
jo
test
int3
addr16
addr16
or
fsubr
adc
cmp
push
fadd
adc
xor
ds
push
nop
push
(bad)
inc
push
pop
inc
ins
and
frstor
dec
loope
rol
(bad)
sub
push
mov
mov
sub
xor
jb
cmp
jns
mov
or
shl
or
inc
inc
fcom
adc
sub
and
outs
pop
mov
sub
ror
(bad)
ds
dec
jg
jne
mov
sti
push
xchg
jmp
in
or
lds
push
add
repnz
je
pop
in
neg
pop
add
sub
mov
pop
cwde
push
push
imul
clc
jecxz
pop
pop
jmp
out
ror
fwait
adc
lock
jne
das
mov
add
inc
ds
out
les
hlt
push
add
push
aad
pop
les
aas
xor
inc
push
stos
pop
or
pop
dec
test
popa
lock
leave
xor
lds
fisttp
xchg
adc
pop
aam
sti
push
cmp
sbb
add
dec
jne
jns
outs
fcomip
fucomi
sbb
add
sbb
jecxz
aaa
movs
jbe
dec
cmp
int
fucomp
mov
out
lahf
adc
fist
adc
add
sub
aad
lahf
or
movs
cmp
push
lahf
sbb
jmp
repnz
lahf
and
call
inc
inc
cmps
fild
rcr
pop
(bad)
jmp
lock
hlt
xor
lahf
adc
mov
mov
mov
jecxz
jno
or
or
mov
test
or
mov
(bad)
or
adc
pop
pop
sub
bound
sbb
jmp
add
cli
adc
loop
pop
daa
cmp
add
aaa
xchg
pop
(bad)
in
push
call
dec
arpl
or
push
popa
push
fucomip
ds
or
das
add
into
xor
scas
or
jae
pop
lods
xlat
cmp
pop
mov
add
add
or
jne
stos
inc
loopne
scas
inc
inc
jmp
add
mov
(bad)
sbb
jecxz
push
add
and
(bad)
adc
sbb
fdivr
loop
jmp
test
add
sub
dec
push
lods
sub
test
push
add
cli
retf
pop
icebp
je
add
adc
out
jns
clc
aas
out
cmp
cli
out
push
je
or
ret
lock
inc
ja
mov
push
aam
aad
imul
jmp
adc
je
push
jne
int3
sbb
pop
sub
loopne
mov
daa
pop
dec
add
push
clc
push
sub
sub
jae
sub
inc
cmp
addr16
jne
out
mov
shr
jns
inc
or
xchg
add
fdivr
jecxz
inc
lods
fcmovu
mov
dec
adc
xor
aaa
leave
les
outs
jb
arpl
je
dec
push
push
add
jne
mov
mov
jb
mov
pop
add
(bad)
inc
mov
push
push
aas
xor
add
jne
inc
js
pop
aad
push
fidiv
or
mov
fsub
adc
inc
adc
push
daa
mov
outs
inc
jmp
xchg
sbb
mov
jae
push
daa
lahf
adc
adc
ins
or
cs
push
mov
pop
inc
pop
lds
push
push
cld
shr
arpl
push
xchg
pushf
pop
jmp
test
ret
push
inc
je
xchg
test
or
rol
or
fadd
mov
pop
dec
cmps
add
js
and
mov
xchg
(bad)
mov
sub
or
cmp
and
test
pop
(bad)
ret
and
pop
or
inc
out
adc
nop
xchg
adc
outs
jae
mov
inc
imul
ins
xor
loop
push
test
mov
xchg
sub
mul
xor
xchg
ret
das
mov
dec
in
sbb
or
enter
xchg
pop
cli
jg
or
cmp
jne
test
adc
or
rcl
repz
ficom
sub
jb
(bad)
imul
mov
dec
mov
inc
fiadd
retf
shl
jg
rol
popa
adc
sub
(bad)
sbb
or
xchg
sbb
out
mov
add
hlt
ins
dec
jmp
inc
dec
fisub
adc
add
add
dec
or
push
mov
fisttp
ret
mov
mov
leave
mov
push
daa
mov
das
hlt
(bad)
adc
(bad)
rcr
xchg
or
fisttp
jge
test
scas
xchg
cmps
neg
sbb
inc
sbb
push
add
and
leave
jg
sbb
mov
push
cmp
pop
adc
mov
jl
mov
xchg
or
push
or
clc
dec
pop
ret
mov
xor
adc
jge
cmp
mov
inc
pop
cmp
fs
cmp
dec
push
or
aas
pop
push
call
mov
and
dec
and
pusha
mov
pusha
pusha
mov
mov
cmc
push
add
mov
xchg
push
mov
cmp
mov
and
cmp
shl
pop
imul
and
xor
fisttp
adc
cmc
inc
adc
jmp
sti
ret
pop
lock
add
xor
pushf
jl
loope
add
jmp
sbb
mov
movs
clc
dec
jl
lock
fwait
and
dec
push
(bad)
mov
enter
push
sbb
add
or
cmp
jne
add
inc
inc
pop
push
mov
inc
jmp
pop
pop
dec
cld
hlt
in
mov
ja
xchg
adc
test
or
lea
mov
push
add
loopne
push
xlat
sbb
push
pop
mov
cmps
xchg
jmp
mov
scas
clc
and
jg
xchg
clc
das
je
test
stc
mov
cmp
pop
inc
movs
lahf
mov
test
xor
enter
dec
ds
adc
dec
inc
pop
sub
aas
das
dec
lods
(bad)
adc
xchg
cld
push
inc
fistp
clc
leave
jg
test
jmp
lea
cmp
sbb
rcr
mov
es
in
jo
sub
mov
rol
ins
fstp
pop
sbb
sub
fs
jmp
loop
mov
outs
clc
or
push
cmp
je
jnp
mov
jno
gs
or
adc
idiv
out
mov
pop
sub
jmp
push
cmp
and
pop
pop
or
or
data16
in
add
fidiv
iret
ja
or
push
and
movs
imul
jmp
pop
add
pop
pop
xor
ja
cld
outs
sub
pop
pop
scas
jnp
add
jl
lds
sbb
or
(bad)
rol
sub
mov
mov
sbb
xor
sub
and
add
fst
and
pop
sbb
mov
xchg
inc
cmp
je
cmp
loopne
pusha
mov
push
dec
fs
scas
ror
dec
add
(bad)
fdiv
cdq
push
ret
imul
stos
sub
pop
pop
lahf
outs
fnstsw
aam
clc
xor
mov
popa
and
(bad)
sbb
xchg
les
out
(bad)
mov
add
pop
or
inc
cld
cmp
and
aad
jne
xchg
adc
clc
out
jbe
xchg
es
adc
add
dec
jmp
adc
dec
sub
loopne
pushf
(bad)
or
dec
mov
add
add
mov
pop
add
popf
adc
and
jmp
iret
sbb
out
or
shl
pop
fcomp
mov
mov
inc
push
in
pop
pop
dec
add
retf
fwait
and
inc
pop
inc
lods
mov
cmp
sub
jo
and
shr
or
inc
adc
add
out
push
pop
mov
jp
xchg
xchg
jbe
addr16
(bad)
cmc
test
je
(bad)
pop
ja
sub
adc
ss
dec
inc
pop
pop
popa
in
mov
cbw
ret
(bad)
jmp
es
mov
es
jl
cmp
jge
sub
(bad)
out
sbb
adc
and
jne
adc
test
ins
(bad)
xor
jmp
add
mov
mov
dec
jl
sbb
scas
mov
sub
scas
jle
sub
add
nop
inc
dec
xchg
push
pop
cli
pop
add
or
mov
adc
inc
dec
iret
jle
lods
loopne
xlat
adc
imul
add
gs
cmp
cld
dec
es
addr16
lea
add
mov
lock
adc
jmp
enter
pushf
xor
mov
pop
cmc
std
cmps
push
pop
dec
js
mov
inc
jae
adc
adc
mov
or
in
pop
(bad)
hlt
add
fild
pusha
lds
xchg
pop
jne
sbb
inc
dec
out
and
xor
ret
ror
xor
(bad)
mov
mov
jo
(bad)
jne
mov
out
jg
sar
push
add
retf
adc
das
out
inc
mov
adc
add
mov
scas
stos
mov
adc
mov
call
mov
fisub
jl
and
ret
in
pop
push
push
ret
inc
lods
in
enter
push
push
push
cs
push
ss
ins
ret
push
sub
es
or
push
cmp
mov
out
scas
mov
mov
mov
mov
pushf
cmps
in
jno
call
pop
pop
arpl
jle
mov
inc
imul
and
dec
imul
pop
cmp
out
retf
or
dec
mov
pusha
pop
push
mov
mov
add
sub
cs
add
pop
jns
add
pop
jp
jno
sbb
sub
jmp
add
lock
push
rol
add
pop
jle
cdq
sahf
out
imul
adc
push
xlat
out
jp
xlat
pop
popa
dec
add
out
je
out
push
enter
inc
xor
test
add
and
sbb
out
cvtps2pd
or
adc
add
inc
or
jge
mov
test
pop
dec
cmp
push
out
sbb
sub
dec
jmp
add
add
dec
sub
imul
call
daa
cwde
inc
fs
xchg
in
pop
stos
cmp
(bad)
or
mov
mov
ds
sub
mov
push
mov
fmul
jl
push
ins
loope
xor
mov
in
(bad)
ins
adc
jg
arpl
fisttp
and
xchg
(bad)
cmp
(bad)
jmp
dec
inc
or
or
and
or
je
cmp
(bad)
cli
cmps
jg
mov
mov
and
add
in
adc
or
adc
jmp
xchg
cli
add
aad
push
or
gs
pop
mov
pop
adc
cmp
pop
jmp
(bad)
fst
cmp
std
sub
lock
lock
mov
push
jmp
fwait
dec
call
inc
popa
stc
mov
cmps
sub
cmps
and
div
fistp
mov
jo
scas
jnp
add
js
lock
jg
push
and
and
mov
push
cmp
pop
mov
add
fnstenv
imul
xor
jmp
call
inc
ins
mov
sub
test
mov
jmp
in
dec
and
cmc
adc
push
push
inc
cmp
iret
mov
lea
outs
cld
adc
push
pop
add
jo
hlt
vmovd
add
shr
cld
loopne
aaa
pop
and
xor
cmp
cmp
sub
push
or
jo
psubw
xor
repz
or
mov
movs
adc
arpl
and
imul
lea
mov
fcom
and
mov
mov
(bad)
adc
cld
pop
jmp
aas
add
and
xor
and
jg
adc
and
inc
inc
(bad)
pushf
or
pop
shl
sbb
push
sub
stos
ret
ins
and
mov
in
fs
sahf
inc
push
popa
jge
or
jmp
jbe
and
jo
jne
sub
out
lds
imul
or
pop
pop
daa
adc
mov
bound
or
ja
ss
add
add
add
inc
jmp
pop
or
pop
inc
cmp
add
test
cmp
loope
or
sbb
scas
retf
adc
pusha
adc
hlt
inc
lods
inc
add
push
jl
add
mov
push
enter
hlt
jae
adc
pop
cmp
add
out
ret
lock
dec
add
imul
adc
dec
loop
js
leave
add
add
lods
jg
clc
dec
inc
add
cmp
stc
cmp
sbb
div
mov
cs
jbe
cmp
popa
daa
lock
jmp
sbb
(bad)
enter
inc
push
rcr
fcomp
in
gs
daa
or
adc
xor
pop
inc
hlt
clc
seto
inc
nop
cld
sub
or
fs
adc
out
and
xor
ds
push
cmp
jo
mov
(bad)
mov
fcomip
and
mov
loopne
mov
sbb
or
xor
ror
retf
push
ret
push
lods
xor
xchg
pop
inc
in
sbb
xchg
(bad)
jge
or
je
lahf
or
iret
add
sbb
neg
sbb
sbb
or
jb
not
loopne
rcl
(bad)
rcl
cmp
scas
(bad)
push
jb
sub
sbb
inc
loop
pop
test
push
sbb
jecxz
repz
mov
repz
sub
mov
and
xchg
pop
mov
lahf
mov
mov
xchg
xchg
clc
bnd
add
sbb
(bad)
xor
out
scas
shr
lahf
adc
jl
or
mul
jl
pop
jne
ret
or
movs
pavgb
rcl
push
aas
ror
cmp
rcl
jmp
lock
add
cmp
or
push
jne
inc
cmp
xchg
out
and
jge
jg
ja
sbb
inc
jmp
cmp
or
sar
and
sbb
cmp
ret
adc
pop
pop
add
mov
cld
xor
ror
repnz
fist
psubw
jb
out
pop
jmp
add
and
imul
xor
sbb
aaa
jmp
push
loope
test
xchg
or
jnp
ret
inc
and
mov
jmp
jg
mov
cdq
int
test
dec
adc
movs
shld
add
out
jo
inc
popa
aad
xor
shl
and
jl
push
test
pop
ins
mov
push
rol
jae
sub
int
pop
xor
shl
or
xor
jg
mov
sub
cs
push
xor
pushf
loopne
jmp
sub
and
jmp
sub
popf
or
jmp
push
mov
(bad)
sar
je
dec
add
pop
dec
fimul
sbb
lds
aad
nop
inc
add
or
cmp
lds
push
div
xchg
xor
cmp
jl
push
pop
cmp
dec
out
adc
fisub
les
pop
push
xor
pusha
ja
(bad)
pop
push
mov
add
(bad)
mov
add
push
push
(bad)
xor
(bad)
imul
add
and
mul
je
and
or
and
jecxz
and
retf
jge
and
pop
adc
shl
movs
sub
imul
xchg
push
in
es
fisttp
sbb
xor
mov
mov
or
dec
test
push
addr16
xor
ret
icebp
outs
ja
aad
(bad)
lods
lods
das
retf
scas
inc
dec
push
sub
dec
out
pusha
(bad)
fdivr
add
mov
mov
or
push
lock
outs
nop
lahf
test
lock
jle
cdq
or
pop
ret
xchg
je
inc
push
int
adc
std
pop
xor
pop
dec
jne
sub
cmp
imul
cmp
out
xor
jle
cmp
mov
ja
mov
movs
mov
add
pop
sbb
inc
cld
mov
sub
test
inc
cmp
icebp
cmp
or
movs
xchg
rcl
repnz
rol
push
test
dec
jbe
int3
sbb
adc
bnd
cs
sub
in
rcl
jo
inc
xor
test
jge
maskmovq
div
xor
pop
xchg
dec
push
mov
add
ret
jmp
pop
cmp
sbb
mul
rcl
mov
push
dec
jne
jmp
fst
push
das
ins
inc
jnp
inc
pop
inc
mov
gs
sbb
jne
add
adc
dec
aam
or
push
push
push
mov
inc
movs
pop
pop
popf
inc
dec
cli
dec
inc
in
sbb
push
and
out
pusha
inc
push
aam
sbb
mov
scas
out
je
lods
out
sub
inc
and
push
pop
dec
rcl
xchg
les
in
jnp
xchg
xor
dec
add
add
adc
sbb
push
hlt
mov
or
pop
inc
pop
repz
sub
cmp
add
xor
pop
jne
addr16
lahf
es
sbb
push
sub
cmp
mov
push
pop
ret
sbb
or
out
je
mov
xchg
jl
shl
add
and
sbb
in
sbb
cmp
jb
pop
jne
inc
je
pop
inc
jl
cmp
test
and
cmp
inc
push
(bad)
jmp
sub
(bad)
iret
mov
std
jno
sub
mov
cli
dec
jg
push
test
ret
fld
mov
pop
test
in
out
shr
popf
aaa
cmp
loop
data16
fistp
call
pop
mov
push
mov
arpl
mov
pop
psrld
neg
add
dec
mov
(bad)
cdq
jmp
fwait
sbb
jle
es
mov
sbb
jbe
mov
sbb
inc
out
and
mov
and
push
jl
add
mov
movs
cmp
adc
mov
adc
jle
push
mov
add
or
lods
jne
nop
fisub
add
pop
out
inc
clc
int3
call
aas
into
mov
add
repnz
adc
imul
ficomp
outs
inc
and
popf
push
lods
repz
adc
xchg
cdq
ret
jno
pop
cmp
dec
js
repz
push
jnp
and
push
mov
sar
stos
pop
shl
adc
inc
or
mov
sub
sbb
and
push
mov
fstp
je
das
outs
repz
sbb
xor
cmc
add
push
cmp
(bad)
mov
ja
mov
mov
pop
ins
aaa
imul
lock
adc
pop
dec
lahf
jmp
ret
(bad)
mov
call
cmp
dec
adc
cld
(bad)
mov
iret
or
mov
mov
xor
adc
and
pop
loopne
mov
mov
leave
push
sub
(bad)
mov
lock
(bad)
mov
dec
std
xor
add
ror
fldlg2
mov
and
push
mov
mov
xchg
or
mov
adc
adc
(bad)
xchg
or
jno
mov
inc
dec
loop
aam
sub
fst
outs
mov
(bad)
mov
push
sar
sub
jo
or
and
fnstenv
pop
mov
test
and
add
ds
(bad)
mov
push
sbb
add
rcr
or
div
popa
dec
push
inc
mov
mov
into
mov
cmp
or
addr16
ret
add
pop
ror
ret
push
or
mov
bound
hlt
fadd
mov
push
sub
popa
sub
(bad)
adc
xor
mov
jo
popa
scas
xchg
sbb
fbld
stos
cld
push
xchg
(bad)
(bad)
ficom
bound
add
shl
les
out
out
mov
or
push
hlt
push
(bad)
push
adc
fwait
leave
mov
lock
movzx
inc
cmp
ja
mov
inc
jmp
cmp
ret
lea
cmp
ja
loope
scas
adc
retf
loopne
sbb
adc
fdivrp
mov
mov
and
retf
add
jmp
popa
add
dec
push
les
popa
rol
dec
ret
ror
jae
cld
jb
or
jo
jg
dec
mov
and
xchg
push
and
adc
or
add
sbb
jbe
cmp
add
shr
adc
neg
mov
add
bswap
mov
inc
xlat
inc
dec
adc
sbb
xor
lock
inc
test
je
and
jo
iret
jle
or
xchg
cmp
and
mov
cmp
cli
pusha
add
add
data16
cwde
ins
push
int3
addr16
or
mov
pop
cdq
dec
mov
xchg
or
inc
out
fisttp
adc
inc
inc
fwait
xlat
or
mov
jo
adc
or
mov
and
inc
ja
mov
ret
neg
cmp
and
cmp
adc
xor
aas
or
das
icebp
stc
xor
es
cmp
pusha
jb
push
or
cli
or
sbb
fidiv
inc
mov
icebp
shl
stos
xchg
pop
ja
xchg
inc
ror
ret
das
and
jecxz
adc
or
or
sti
and
vmread
pop
pop
add
mov
xchg
cmp
jmp
xor
dec
inc
sub
das
sbb
push
fiadd
mov
or
inc
xor
push
shl
outs
inc
cmps
lock
inc
imul
and
add
push
push
enter
adc
jb
bound
outs
arpl
xchg
imul
rcl
or
xlat
jmp
arpl
dec
add
(bad)
jmp
cmp
xchg
or
dec
add
jo
add
xor
or
mov
and
lock
daa
test
jae
mov
rol
xor
int
addr16
jl
repz
mov
shl
sbb
cmp
push
mov
inc
xor
and
or
dec
lock
mov
outs
and
mov
clc
jnp
mov
mov
aas
push
push
or
push
jg
jo
je
ins
fsub
cld
(bad)
in
fwait
or
shl
sub
sbb
xor
fucom
in
cmc
cmps
jns
sar
sub
call
(bad)
add
scas
bound
cmp
and
aaa
fs
int3
(bad)
shl
fwait
push
pop
add
ins
stos
sbb
pop
pop
or
jo
inc
aaa
adc
xchg
adc
in
ret
push
push
mov
xchg
sub
cdq
adc
aad
xor
inc
test
pop
or
add
or
fst
aam
xor
or
mov
mov
or
push
mov
(bad)
lock
test
dec
mov
rol
and
rcr
mov
lahf
mov
xor
in
mov
fcom
cmp
adc
fwait
add
xchg
push
xor
div
adc
cdq
cmp
fwait
ins
mov
or
pop
fdiv
cli
mov
ins
(bad)
(bad)
(bad)
bound
cmp
inc
repnz
and
pop
test
sbb
ins
jmp
sub
xchg
sub
dec
push
jo
push
ficomp
push
dec
js
fdiv
add
and
pop
cdq
inc
inc
hlt
(bad)
pop
cmp
inc
inc
sub
repz
cs
mov
cmp
sar
push
ret
adc
fs
mov
adc
lods
add
sbb
sub
add
or
adc
cli
dec
inc
sbb
add
in
scas
shr
ficomp
push
mov
mov
imul
in
pop
sub
mov
lds
adc
push
push
xor
clc
push
shl
cmp
xor
sbb
mov
jnp
inc
sub
shr
test
lds
mov
call
cmp
iret
aaa
dec
fild
inc
dec
sub
and
sub
push
pop
sbb
cmp
sub
sbb
and
xor
das
ret
pop
leave
les
cs
mov
in
sub
fld
ret
dec
fwait
jmp
adc
push
addr16
arpl
mov
sub
push
aam
dec
dec
mov
mov
dec
sbb
xchg
xlat
adc
test
inc
ds
push
jnp
jecxz
pushf
jmp
mov
jbe
inc
mov
call
bound
mov
imul
movs
es
lock
cld
add
sub
ss
sub
cmp
pop
fucom
test
(bad)
loope
es
xchg
cmp
pop
mov
test
jmp
adc
xchg
push
push
jb
push
or
push
enter
test
or
ss
or
or
scas
push
ficom
in
fnstenv
mov
int3
enter
and
sbb
popa
inc
add
call
add
sahf
xor
ins
sub
mov
mov
inc
sub
sbb
aas
inc
fwait
or
or
mov
adc
mov
or
popa
pop
jo
pop
pushf
mov
jmp
cmp
mov
push
in
adc
retf
sub
and
inc
push
sbb
or
scas
adc
xor
pushf
adc
iret
call
dec
xchg
cmps
or
xchg
inc
rcr
adc
or
and
add
dec
sub
fcomp
mov
mov
add
pop
xor
lahf
(bad)
fwait
push
ja
push
dec
dec
dec
inc
dec
push
pop
popf
or
xor
cmc
mov
add
dec
jmp
xor
aaa
aaa
xor
xor
or
imul
and
and
es
lock
jl
adc
xor
sbb
or
cs
dec
mul
jne
add
push
inc
ret
inc
icebp
push
adc
xor
and
or
retf
adc
inc
sbb
cmps
neg
and
push
push
pushf
sbb
sbb
lds
sbb
lock
inc
mov
les
loopne
sbb
mov
(bad)
out
or
fstp
ins
adc
dec
mov
push
or
mov
lods
popa
mov
or
sbb
inc
sbb
ret
cmp
inc
jbe
stc
in
and
xor
jmp
movs
adc
movs
adc
(bad)
sti
mov
dec
div
mov
or
ret
mov
inc
mov
daa
rol
sbb
nop
mov
pushf
icebp
mov
xor
mov
ret
dec
sti
shr
fs
xlat
add
rol
add
mov
pop
push
test
and
mov
pop
or
sbb
add
adc
(bad)
js
dec
or
push
loope
xor
pop
retf
inc
clc
cmp
les
or
inc
ror
jae
sbb
inc
and
sub
pop
int3
int
ror
push
movs
add
push
dec
repnz
sbb
stc
ret
mov
(bad)
fs
jae
lods
retf
and
(bad)
sub
mov
cwde
adc
adc
sbb
mov
in
test
dec
sbb
mov
(bad)
fnstcw
loope
mov
test
add
mov
ins
mov
js
mov
ins
fld
fisttp
xchg
dec
sbb
arpl
test
sbb
jae
or
fmul
or
mov
(bad)
pop
test
adc
cmp
outs
ja
idiv
out
cmc
pop
dec
ins
addr16
call
fwait
mov
fnsetpm(287
mov
imul
(bad)
imul
add
ss
sbb
rol
pop
mov
imul
cmps
outs
mov
int
mov
mov
cmp
inc
pop
inc
mov
cmps
mov
xchg
movd
call
adc
pop
aas
push
sbb
or
shl
adc
mov
mov
sub
mov
or
call
adc
push
inc
leave
mov
push
aas
and
out
out
mov
mov
int
or
adc
cmp
leave
cmps
(bad)
mov
nop
sbb
xor
popf
stos
sub
adc
cmps
pop
adc
adc
cmps
pushf
sbb
inc
in
ja
and
(bad)
jbe
call
adc
dec
sbb
ret
add
aas
sub
retf
xlat
inc
nop
push
push
das
jno
mov
cli
pop
jge
jl
cmp
jnp
add
das
stc
inc
ss
hlt
call
mov
pop
mov
add
js
sbb
das
inc
sbb
sbb
jns
dec
cdq
xchg
cmp
sbb
add
xor
add
inc
cmp
pop
xor
call
inc
pop
sbb
pop
rcl
mov
or
mov
sub
sub
cwde
mov
xor
call
inc
xchg
sub
pusha
sbb
mov
dec
sbb
icebp
or
lea
inc
xor
ret
cwde
out
mov
xchg
push
fmul
aam
sbb
or
test
aaa
push
jle
mov
das
pop
cmp
je
mov
sub
xor
push
pop
xor
sbb
and
(bad)
aaa
lahf
add
inc
add
or
jns
xchg
xor
inc
sub
and
or
fmul
dec
leave
fild
add
mov
adc
inc
push
movs
fs
push
jne
add
or
mov
movs
lods
push
pop
pop
ror
fs
mov
xor
dec
or
inc
data16
out
xchg
inc
add
xchg
xor
mov
xchg
cmp
daa
fsub
or
mov
lahf
or
or
add
push
xor
mov
cmp
jecxz
ins
mov
shl
inc
cmp
mov
pop
loopne
adc
mov
cmp
xor
or
cmps
mov
lock
stos
stos
popa
pop
and
shl
mov
out
sbb
in
add
mov
lock
mov
into
cmp
nop
jno
inc
sbb
xor
xchg
jecxz
mov
sbb
or
arpl
fiadd
inc
push
stos
ret
movs
gs
and
nop
lock
shl
std
or
xchg
cmp
push
or
enter
aam
pop
popa
ins
iret
or
lods
aaa
push
mov
psrlw
push
lods
mov
(bad)
mov
(bad)
into
cmp
xchg
imul
mov
cmp
mov
scas
ret
inc
xchg
ja
cmp
mov
dec
loopne
xor
xor
xor
add
and
scas
stos
and
pop
adc
cld
sub
sub
inc
sbb
in
iret
leave
in
mov
add
push
dec
lock
(bad)
jmp
cmps
inc
inc
cmp
mov
adc
out
ins
in
mov
xchg
in
or
and
cmp
jno
and
cmp
mov
pop
cmc
call
call
jecxz
inc
scas
mov
test
out
pop
pop
(bad)
retf
aaa
pop
pushf
cld
cmp
jl
mov
push
push
rcr
adc
enter
scas
fs
push
pop
jmp
dec
dec
cli
xchg
add
add
push
in
jae
inc
aaa
jo
inc
es
jle
dec
les
inc
sbb
xchg
dec
imul
jge
outs
dec
enter
mov
lods
fimul
inc
mov
jecxz
rcl
push
rol
clc
add
mov
sbb
int
mov
mov
pop
push
daa
pop
mov
in
xchg
call
pop
adc
dec
dec
rcr
cmp
in
push
pop
out
data16
add
inc
add
jno
nop
stos
mov
adc
and
xchg
xor
dec
inc
pop
adc
pop
test
in
outs
pop
adc
push
imul
inc
or
sub
dec
dec
and
adc
xchg
jne
fisttp
push
mov
push
pushf
dec
xchg
inc
sbb
mov
adc
stc
mov
and
push
outs
adc
retf
js
or
or
test
xchg
mov
push
mov
adc
arpl
or
xor
mov
movs
mov
adc
dec
fwait
scas
inc
inc
repnz
jbe
mov
mov
xchg
or
mov
adc
test
ins
ins
add
hlt
jmp
sar
fwait
add
push
imul
adc
shl
fcom
push
enter
mov
mov
xor
scas
pop
mov
mov
aaa
and
add
(bad)
fisttp
scas
test
jne
inc
jp
pop
xchg
sub
xor
in
jbe
repz
mov
aam
inc
inc
mov
or
mov
mov
inc
inc
ret
pop
mov
or
push
call
add
mov
imul
dec
adc
add
xchg
push
adc
adc
add
aam
add
add
mov
sbb
push
inc
cmp
inc
xor
sub
mov
shl
repnz
sar
pop
je
mov
retf
test
dec
dec
loopne
mov
fadd
inc
pop
add
loop
mov
dec
movs
add
pop
and
sbb
add
xchg
sub
ret
dec
sbb
(bad)
or
add
and
cmps
inc
cmps
fisttp
js
dec
xchg
call
ja
ret
inc
fcom
inc
mov
inc
lahf
out
jae
and
fwait
push
and
dec
adc
or
call
or
test
cmp
(bad)
mov
adc
adc
add
xor
or
in
mov
dec
pop
bnd
hlt
push
fnstenv
or
push
mov
push
ret
imul
and
push
adc
add
pop
test
sbb
sar
xchg
add
mov
test
(bad)
sbb
xchg
in
inc
mov
or
fsubr
add
adc
push
(bad)
inc
dec
stc
icebp
xchg
adc
rcl
add
xchg
lock
mov
mov
xchg
cwde
cmp
xchg
clc
mov
fadd
xchg
mov
adc
enter
and
push
inc
lea
push
pop
popf
jno
inc
(bad)
aad
in
or
stos
pushf
in
push
sbb
xor
xor
cli
mov
call
xchg
das
sbb
call
jge
add
and
int3
push
sub
mov
int3
sbb
push
mov
push
movs
inc
nop
and
add
dec
jge
scas
xlat
dec
adc
pushf
ret
loop
xchg
pop
inc
pop
outs
sub
sbb
inc
sub
lock
push
(bad)
test
in
ins
idiv
(bad)
sbb
inc
dec
jne
loopne
mov
(bad)
(bad)
cmp
arpl
lds
push
enter
mov
xor
test
mov
lods
sub
sub
xchg
adc
jmp
cwde
mov
je
adc
loop
mov
mov
retf
push
and
jnp
lock
push
sub
push
sub
out
jmp
dec
les
jne
cmp
jne
and
mov
dec
cmp
or
imul
out
or
xchg
in
and
push
jmp
pop
nop
xchg
xor
icebp
mov
clc
mov
cmp
dec
jbe
dec
shl
sbb
imul
push
gs
mov
add
loope
(bad)
cmp
call
mov
and
data16
stc
shr
mov
xor
(bad)
sub
fidiv
sti
dec
jne
sysexit
add
sub
sbb
adc
sub
and
cmp
xchg
cld
cmp
dec
cld
lea
add
ffree
hlt
fild
sbb
inc
mov
adc
pop
ret
test
add
dec
pop
cmp
mov
sub
add
xlat
loopne
add
dec
cs
ffree
push
fs
mov
mov
or
jle
les
loope
mov
test
add
mov
pop
add
cli
mov
add
lds
les
add
or
sub
mov
dec
repz
add
push
add
jbe
pusha
mov
cld
push
push
pop
push
shr
pusha
adc
or
movs
cdq
inc
stos
adc
xchg
push
adc
xchg
ret
adc
xchg
aaa
aam
sub
clc
call
dec
or
call
mov
test
push
mov
lock
fcmovb
pop
rcl
push
pop
mov
rcl
in
or
das
in
mov
je
enter
stc
ins
in
das
push
mov
call
sbb
fs
mov
inc
mov
adc
xor
pop
ds
sub
sub
mul
mov
ret
ds
and
dec
(bad)
xor
pop
test
rol
push
inc
and
lds
mov
sub
dec
fadd
dec
or
fdiv
ret
add
pop
sbb
and
mov
inc
outs
mov
rol
xor
(bad)
jg
inc
sub
ins
dec
ret
pop
sub
ret
aas
sbb
inc
outs
dec
pop
add
xor
(bad)
out
ss
pop
inc
pop
pop
add
lea
add
pop
sub
mov
add
cmps
stc
jp
add
nop/reserved
ror
xchg
xor
imul
int3
loopne
call
xor
call
call
mov
xchg
cwde
(bad)
nop
add
pop
mov
mov
add
or
inc
sub
xor
add
mov
in
sbb
hlt
rol
movs
sbb
add
ret
sub
inc
dec
aaa
push
sbb
repz
dec
xchg
xchg
mov
xchg
or
jo
arpl
call
bound
test
inc
out
inc
and
pop
push
inc
add
in
add
pop
push
sub
and
cs
add
jne
mov
fimul
or
movs
jnp
add
jmp
xor
xchg
or
mov
jae
push
jecxz
and
sub
adc
and
movs
dec
lds
add
adc
leave
and
and
mov
dec
adc
sub
dec
mov
xor
movs
add
cmps
adc
icebp
lahf
add
outs
inc
xor
(bad)
xchg
xor
pop
(bad)
and
xor
jmp
xor
mov
sbb
lock
inc
push
xor
or
mov
push
add
loopne
add
push
inc
inc
imul
adc
xchg
push
aam
int3
inc
sbb
scas
jl
loopne
pop
jmp
test
cmps
inc
jl
test
xor
xor
lea
fs
mov
adc
cmp
out
fs
jbe
push
cmp
push
add
mov
fidiv
sub
jle
or
sbb
cmp
add
inc
mov
hlt
add
pop
movs
out
das
xchg
and
mov
es
retf
xlat
xlat
inc
add
dec
mov
jo
push
adc
add
scas
mov
pop
shr
sub
mov
inc
das
adc
mov
cmps
xchg
sbb
and
fsub
je
(bad)
in
adc
add
sbb
data16
or
and
mov
push
and
sbb
mov
pop
fld
cmp
nop
add
cmp
mov
inc
je
push
jmp
add
add
cli
mov
dec
dec
add
retf
and
ret
push
push
push
adc
movs
add
xor
scas
icebp
xchg
cli
aas
sub
mov
mov
mov
mov
xchg
je
adc
test
or
nop
push
aas
mov
ret
vxorps
test
sub
fs
cmp
lock
adc
je
mov
jl
mov
aaa
fiadd
test
inc
sbb
inc
mov
jae
add
xor
inc
dec
mov
or
mov
cmp
and
cmps
les
or
or
xchg
sub
and
xor
ret
pop
adc
push
dec
scas
fmul
mov
sbb
dec
mov
add
js
mov
out
cli
sub
adc
mov
inc
int
pop
imul
push
mov
or
mov
sbb
xchg
adc
fiadd
push
ins
add
out
outs
mov
imul
mov
add
adc
mov
je
lds
pop
mov
ins
jne
imul
ret
js
pop
or
dec
sbb
aaa
inc
ja
into
out
push
popf
mov
pop
cmp
mov
lods
add
push
pop
test
sub
jmp
inc
adc
xor
mov
mov
les
out
loop
mov
xor
(bad)
dec
jmp
mov
aad
pusha
call
shl
int
mov
jle
(bad)
cmp
je
test
movs
popf
pop
jb
jg
and
push
jl
mov
pop
pop
mov
inc
jne
push
nop
ins
jns
mov
outs
test
mov
sub
mov
inc
fs
fstp
mov
jmp
mov
pusha
dec
je
mov
jb
inc
jae
ror
inc
push
lods
jmp
popa
add
add
sub
fsubr
ret
addr16
clc
js
dec
push
add
mov
or
fs
mov
and
(bad)
out
mov
sub
call
pop
inc
sbb
adc
mov
imul
loopne
cmp
inc
cmp
push
cmp
lea
jg
test
or
test
or
(bad)
lahf
cmp
dec
jle
jne
mov
ror
push
xor
jg
mov
mov
(bad)
pop
mov
out
mov
sbb
int
push
push
loope
or
add
pop
daa
add
mov
adc
scas
sub
and
and
push
sbb
pusha
data16
xchg
fldl2t
lea
icebp
rol
clc
sar
jae
sbb
icebp
arpl
mov
test
push
push
mov
add
rol
push
cld
pop
or
dec
xor
loop
pop
repnz
cld
(bad)
cmp
inc
pop
and
and
aas
dec
daa
inc
add
mov
mov
pop
pop
fcomp
mov
push
sbb
in
push
jmp
fstp
xor
push
mov
fcom
dec
adc
jle
xor
fld
sub
ins
addr16
pop
mov
nop
fbstp
add
movs
adc
push
jg
movs
xlat
shl
shr
hlt
pop
(bad)
aas
sub
aas
dec
fcomip
pusha
pop
or
push
popa
jbe
cs
xor
ss
mov
push
xor
stc
cdq
ss
cmp
and
xor
inc
adc
and
out
ficom
je
inc
cmp
inc
and
out
int3
cmova
adc
cmp
adc
adc
cmc
shl
dec
adc
bts
mov
sub
imul
aaa
pop
ds
xor
xor
mov
inc
mov
mov
or
add
mov
loope
and
or
test
inc
sbb
es
repz
test
sub
std
mov
sub
test
clc
fldz
repnz
inc
pusha
fld
int
ror
mov
inc
mov
clc
(bad)
fmul
or
fsub
stos
dec
push
out
push
inc
jl
or
dec
into
push
xor
(bad)
pop
add
iret
(bad)
sub
hlt
inc
add
cmp
add
dec
mov
test
push
retf
fistp
push
xchg
pusha
ss
outs
sbb
in
arpl
mov
enter
lods
push
mov
add
fs
lahf
mov
xlat
clc
or
add
mov
mov
jo
mov
int3
mov
and
inc
mov
shl
cwde
sbb
iret
les
out
inc
popf
xchg
sbb
add
mov
or
mov
adc
xor
imul
cli
pop
lods
leave
enter
sub
les
xor
ins
xlat
push
cld
adc
adc
adc
add
pushf
mov
add
xor
push
fisub
popa
bound
dec
jmp
lahf
call
(bad)
sub
push
dec
inc
push
inc
dec
pop
xchg
stos
jae
push
dec
or
daa
and
or
seto
adc
mov
fcomp
inc
lods
test
pusha
loope
aaa
hlt
sbb
fstp
mov
rcl
test
sbb
inc
fadd
in
mov
adc
leave
pusha
push
xchg
sbb
iret
add
inc
and
push
mov
mov
ret
stos
mov
adc
mov
mov
adc
(bad)
popf
pop
push
sbb
enter
cli
xchg
loopne
pop
mov
inc
in
hlt
push
jbe
mov
shl
push
les
enter
add
nop
add
ds
scas
pop
aas
fsub
mov
enter
xlat
fisubr
jnp
mov
inc
sub
sbb
push
test
pop
shl
imul
pop
adc
mov
seto
fdivr
dec
int3
mov
fcom
fwait
fwait
or
call
clc
mov
inc
jp
pop
test
xor
pusha
or
nop
in
rol
sbb
sbb
ret
(bad)
add
xor
mov
xor
add
pusha
fimul
jmp
cmp
leave
fs
adc
pop
jno
dec
ds
aaa
int3
adc
xor
loope
pop
cmp
ins
imul
push
mov
in
ror
sbb
sub
push
inc
dec
and
test
mov
add
nop
xlat
ret
fmulp
push
xchg
adc
movs
cmps
or
cmp
int
pusha
sub
adc
fs
push
inc
and
es
inc
jo
in
sub
pushf
add
mov
inc
mov
daa
and
sbb
push
cmp
and
or
add
and
out
jmp
mov
xor
pop
mov
(bad)
mov
rol
ins
(bad)
adc
ror
xchg
xor
xlat
and
mov
test
xchg
pop
and
xchg
(bad)
cwde
ficomp
push
add
(bad)
or
adc
sbb
in
or
outs
or
dec
inc
xor
add
leave
xchg
sbb
(bad)
(bad)
enter
pop
mov
add
nop
(bad)
mov
or
add
es
call
pop
pushf
(bad)
adc
dec
jbe
rol
or
add
dec
add
cdq
call
mov
loop
ror
pop
dec
call
mov
pop
push
icebp
mov
inc
lods
adc
sub
cli
pusha
hlt
scas
adc
mov
ror
loopne
cmp
xchg
test
xor
fdivr
add
and
add
xor
mov
jnp
shr
and
push
bound
inc
out
mov
retf
inc
jg
mov
pop
repz
fmul
jae
js
xor
rol
mov
(bad)
das
and
popa
imul
or
xchg
lock
push
loope
aam
rcl
rcl
jmp
aas
les
pop
inc
mov
jecxz
inc
push
add
cmp
mov
inc
pop
or
sbb
test
cmp
pop
cwde
cmp
mov
retfw
xchg
addr16
push
pop
and
adc
or
jmp
(bad)
xchg
not
inc
cmp
pop
add
sbb
dec
xchg
addr16
popf
pop
mov
inc
mov
ins
int3
es
cmp
inc
in
mov
enter
mov
inc
pop
dec
js
test
or
pusha
push
(bad)
les
leave
pop
repnz
sub
inc
and
enter
adc
loopne
adc
pop
mov
add
or
call
rcl
dec
lea
repnz
xchg
cmp
pop
xchg
inc
inc
stos
sbb
(bad)
add
pusha
push
pushf
ins
xchg
mov
ja
push
pop
mov
test
mov
add
(bad)
mov
call
mov
adc
adc
inc
sbb
xchg
mov
mov
and
push
mov
aaa
js
adc
inc
mov
call
xchg
xor
int
test
or
das
pusha
or
lea
lea
shr
addr16
rcr
sti
lods
and
stos
je
mov
xor
dec
(bad)
ret
daa
les
or
xchg
inc
push
sbb
and
mov
mov
dec
and
pop
ins
adc
and
mov
mov
pop
or
test
or
enter
pushf
pop
push
push
pop
cmp
xchg
movs
mov
adc
xor
mov
arpl
sbb
aas
into
mov
xchg
cwde
inc
push
movs
or
pop
stc
cmps
dec
mov
mov
sbb
clc
dec
xor
dec
aaa
shl
mov
out
ja
xchg
adc
cdq
sbb
out
push
xor
idiv
pop
into
cmp
adc
or
pop
or
push
adc
add
pop
add
sar
sub
or
(bad)
cmp
mov
call
clc
jno
mov
or
add
jae
out
(bad)
xor
mov
imul
push
addr16
pusha
mov
stos
pop
out
push
sti
lods
add
clc
mov
dec
or
pop
pop
popf
xchg
mov
movs
jl
sbb
pop
pop
repnz
xchg
(bad)
outs
pop
jg
jnp
or
xlat
xchg
dec
mov
mov
cmp
pop
add
in
add
fiadd
pop
cmp
test
loope
in
sbb
and
mov
pop
cmps
and
mov
cmp
gs
xor
sub
add
adc
cld
es
pop
rol
fdivr
mov
cs
inc
sbb
inc
sbb
(bad)
sbb
call
mov
aas
push
sbb
sbb
arpl
jl
and
push
rep
mov
xor
or
fs
mov
inc
cmp
add
imul
mov
imul
dec
data16
pop
clc
cmp
xor
hlt
les
xchg
lods
cmp
xchg
shl
dec
dec
and
loop
test
jge
call
sbb
pop
ficomp
arpl
das
sbb
xchg
xor
or
mov
sbb
and
pop
sar
mov
sub
lods
rcl
dec
ins
pop
(bad)
mov
adc
mov
and
xor
or
ret
push
inc
xor
dec
adc
test
jo
in
push
ds
or
xchg
add
mov
dec
rcr
xchg
xor
pop
dec
cmp
jecxz
lock
(bad)
cmp
push
adc
pop
dec
repz
aaa
dec
adc
aas
add
xchg
popa
or
sub
push
pop
sbb
dec
or
sar
inc
mov
push
adc
cmp
adc
xor
test
xor
cmp
adc
and
xor
mov
dec
lock
bound
das
jbe
add
lock
jne
aaa
push
push
mov
xor
enter
or
addr16
push
loopne
mov
cs
add
shl
inc
add
loop
loop
call
dec
sbb
aam
mov
inc
inc
dec
or
ds
dec
inc
cmp
push
sbb
and
inc
bound
push
dec
mov
pop
or
mov
gs
sbb
mov
arpl
popa
iret
pop
xor
dec
dec
outs
cmp
xchg
gs
fadd
sub
ins
leave
xor
mov
adc
xchg
push
push
dec
adc
pop
push
pop
jbe
fwait
imul
adc
xchg
pop
cs
push
in
leave
jge
xor
push
inc
adc
jge
push
stos
inc
xor
mov
or
pop
leave
adc
xor
sbb
xor
es
mov
sbb
xor
adc
js
imul
movs
out
dec
imul
mov
fiadd
push
gs
inc
inc
mov
ja
inc
rcr
aas
and
outs
and
jae
or
mov
and
(bad)
push
add
push
sub
xchg
and
xor
dec
or
and
sub
out
and
sub
enter
and
sbb
push
xor
or
mov
or
out
daa
xor
dec
pop
sub
mov
or
sub
jmp
and
pop
mov
mov
sub
inc
xchg
ins
out
push
mov
inc
lock
xchg
sub
ror
xchg
mov
push
daa
rol
cmp
dec
sub
cmc
push
int
or
inc
lods
int3
inc
rcl
lds
add
sbb
jo
test
mov
xor
inc
and
xor
pusha
addr16
rol
xor
push
mov
and
ins
push
sub
xchg
pop
xchg
mov
xor
inc
xor
dec
nop
pop
in
in
ss
dec
inc
sar
sbb
xor
ins
inc
pop
frstor
frstor
cmp
and
inc
sub
and
cmps
add
sub
and
cmp
inc
inc
sub
in
inc
pop
cmp
dec
sbb
stos
push
sub
xchg
mov
add
and
push
inc
add
xchg
and
sub
add
inc
out
repnz
aas
ins
bound
cmps
mov
inc
test
and
inc
movs
or
mov
repz
sub
jb
pop
in
cmp
pop
ins
and
repz
add
es
mov
aaa
outs
mov
or
mov
retf
cdq
gs
cmp
jmp
ins
push
mov
(bad)
push
cwde
push
mov
push
or
scas
push
je
adc
scas
fistp
xor
lock
mov
xchg
mov
retf
loopne
cs
add
push
ror
call
xchg
jle
xchg
popf
ds
sahf
cmp
inc
xor
inc
ins
fsubp
jge
lahf
pop
enter
test
xor
mov
mov
mov
mov
mov
mov
inc
dec
mov
sbb
push
xor
mov
inc
ror
inc
push
push
pop
sub
adc
and
or
cmc
xchg
sbb
xchg
xchg
push
push
ret
and
dec
loop
sbb
xor
daa
cmps
bound
stos
fs
and
cdq
or
rol
dec
or
ins
push
xchg
and
bswap
ja
repz
sti
sbb
adc
jno
(bad)
jmp
das
and
and
sbb
imul
jno
pop
dec
vmovupd
push
retf
adc
cmp
adc
push
adc
test
sbb
pop
leave
sbb
xor
sbb
leave
jo
jl
inc
sbb
add
or
or
ins
movs
add
and
mov
pop
inc
pop
mov
mov
lds
push
outs
xor
or
or
mov
sub
and
inc
ror
outs
test
and
mov
inc
xchg
and
push
daa
sub
dec
push
sub
add
ret
xchg
add
pusha
mov
lahf
ror
js
js
loop
inc
das
dec
cmp
mov
cmc
xor
add
in
push
sub
pop
jo
aam
fs
loopne
arpl
movs
mov
push
mov
test
dec
inc
nop
cld
pop
add
mov
and
pop
loopne
ja
leave
pop
les
out
cmp
les
hlt
adc
aas
jnp
repnz
sub
inc
push
xor
and
pop
xchg
out
fisttp
or
dec
aaa
pop
add
push
(bad)
mov
push
fdiv
or
adc
adc
and
xchg
or
push
push
cmp
imul
push
add
fistp
and
push
imul
mov
mov
outs
movs
(bad)
pop
cwde
inc
inc
jno
outs
mov
outs
mov
ins
cmp
sbb
xchg
test
push
inc
repz
adc
and
leave
push
push
inc
dec
mov
stos
inc
outs
jb
add
add
pop
adc
inc
aam
push
pop
jb
sbb
sbb
leave
push
xor
sbb
xchg
sbb
push
sbb
push
jb
xor
pop
add
imul
jne
xchg
imul
loop
jmp
aad
mov
stos
in
sub
jo
xor
pop
sub
inc
les
cs
push
xor
fild
xor
add
sub
xor
xchg
int
add
fisttp
inc
push
xor
mov
aaa
mov
cmp
in
sbb
cmp
add
add
stos
aas
inc
adc
xadd
rcr
mov
pop
xchg
push
scas
push
sub
repnz
mov
jl
inc
cwde
and
lock
movs
fwait
add
or
fmul
cmp
and
call
pop
repz
sbb
inc
and
loop
fadd
and
test
fadd
xor
add
add
ret
or
xor
sbb
inc
leave
add
jecxz
sub
or
push
imul
xchg
adc
xor
xchg
test
sbb
lds
add
mov
in
dec
in
and
nop
pop
enter
mov
dec
pop
jns
xchg
aas
clc
or
inc
xchg
and
test
ret
hlt
inc
inc
inc
test
push
xor
int3
pop
push
or
pusha
add
in
fimul
(bad)
je
pop
adc
pusha
inc
repnz
push
gs
leave
mov
sbb
mov
push
sub
mov
and
in
dec
or
out
or
inc
test
sub
xor
cld
push
scas
push
xchg
push
fstp
inc
enter
dec
inc
rcr
in
jno
mov
fdiv
or
stc
add
adc
mul
hlt
movs
outs
jae
arpl
xchg
mov
mov
int3
push
push
dec
pop
mov
fwait
(bad)
mov
push
add
push
sub
push
mov
push
mov
fs
cs
cmp
pop
sub
push
ror
setp
rol
or
(bad)
aam
inc
dec
sub
stc
stc
fldenv
out
mov
mov
sahf
les
test
jg
sbb
mov
xor
xchg
inc
push
push
mov
retf
dec
in
push
add
dec
movs
int3
(bad)
(bad)
popf
sar
pop
jne
add
dec
outs
or
mov
pop
mov
call
in
push
ja
adc
sub
imul
sahf
mov
add
add
rcr
inc
mov
push
jae
adc
and
pop
sub
xchg
ins
outs
mov
(bad)
sub
hlt
ss
and
and
sbb
scas
and
adc
push
inc
push
xchg
push
xchg
inc
or
sbb
push
add
or
(bad)
adc
enter
repz
jle
pop
pop
mov
dec
mov
xor
fnstsw
sbb
lods
sbb
jmp
sar
or
lea
inc
and
adc
push
push
pop
cwde
xchg
fs
add
push
pushf
ror
in
xchg
inc
test
inc
rcpps
cmps
inc
xor
ins
ror
and
popa
inc
inc
sbb
out
fwait
sbb
aam
push
adc
sub
push
dec
xchg
cmp
push
inc
inc
jmp
xor
shr
gs
cdq
push
(bad)
dec
xchg
mov
dec
adc
push
inc
pop
add
xchg
sbb
and
rcl
iret
xchg
mov
and
cwde
adc
and
inc
push
and
in
mov
xchg
sub
add
xor
inc
pushf
lds
nop
sbb
or
das
icebp
add
inc
mov
arpl
xor
je
cmp
arpl
sub
cmps
cmp
pop
add
sub
inc
cmp
or
adc
and
and
xchg
in
or
adc
cmp
jl
push
xor
cs
(bad)
lock
mov
push
push
repz
adc
jmp
add
repz
and
imul
inc
je
movaps
xchg
cmps
xchg
sub
shl
jmp
(bad)
mov
mov
sbb
enter
pop
add
jnp
ret
or
pop
and
sbb
xor
and
sub
ret
pop
add
aaa
lds
mov
and
inc
xor
cdq
dec
xchg
fs
sbb
jo
xchg
xchg
sbb
adc
xchg
and
std
adc
inc
cs
sub
add
test
add
cmp
sbb
push
icebp
push
leave
adc
pop
and
or
and
leave
sub
cmps
add
and
in
adc
and
es
xor
mov
sub
sub
cs
add
jb
xor
enter
xor
and
xor
push
das
or
call
loope
add
or
fdiv
inc
adc
jns
jecxz
sub
dec
neg
or
push
imul
mov
pop
out
or
inc
add
xlat
and
add
adc
sti
pop
mov
mov
push
or
ins
das
and
adc
(bad)
scas
adc
sbb
or
das
cmps
or
idiv
imul
stos
enter
sub
add
xchg
pushf
add
xor
call
cmp
sbb
test
arpl
ja
pusha
or
ja
je
jo
cmc
sar
aaa
jb
jae
fbld
add
mov
mov
pextrw
xadd
fistp
sub
aaa
add
(bad)
cmp
scas
jmp
push
xor
jns
mov
outs
fwait
pusha
sbb
push
push
dec
push
sub
(bad)
pop
les
xor
cmp
in
arpl
cwde
jne
imul
dec
push
sub
jo
inc
xchg
sub
into
cmp
nop
cs
(bad)
pusha
and
ins
and
pop
shl
push
aas
bts
push
or
pop
sbb
enter
xor
cmps
lods
cmp
imul
push
or
inc
inc
xchg
or
lea
add
je
mov
stos
push
movs
add
inc
or
push
xor
xor
adc
enter
add
adc
lea
sub
cwde
movs
xor
push
pop
and
js
ins
outs
jae
sbb
sbb
or
sbb
add
sbb
loope
xor
push
fwait
adc
xchg
mov
pop
shl
sbb
cmp
push
cmp
or
arpl
add
add
inc
push
adc
pop
push
or
imul
mov
mov
add
retf
or
sub
(bad)
sub
mov
add
inc
or
es
add
nop
add
ret
xchg
and
mov
xchg
js
add
push
retf
adc
cmp
sbb
cmp
fwait
and
pop
mov
add
cmp
push
mov
and
rcl
or
pusha
push
push
push
ret
add
lods
push
pop
je
inc
push
push
ret
push
dec
jo
dec
jmp
ds
push
or
add
mov
and
push
push
adc
adc
or
xlat
cmp
mov
scas
xchg
mov
xchg
inc
inc
test
push
std
or
inc
cmps
pop
adc
daa
and
inc
test
pop
inc
inc
add
sub
mov
mov
fld
repz
sbb
daa
nop
mov
sub
pop
or
xlat
and
loopne
pcmpeqb
adc
mov
ins
jmp
xlat
movs
es
sbb
popa
push
das
or
pop
leave
aas
inc
or
fadd
test
add
push
in
mov
adc
adc
sub
int3
push
or
int3
inc
pop
fist
push
pop
sbb
fild
sar
cmp
loopne
enter
pop
xchg
pop
and
inc
dec
nop
es
paddsw
xor
pop
sub
or
daa
std
and
pop
dec
or
scas
xchg
mov
mov
lahf
push
jmp
hlt
or
jo
inc
or
add
mov
adc
daa
in
and
inc
in
shl
mov
test
mov
cmp
stc
sbb
inc
retf
pusha
cmp
dec
jne
or
ret
cmc
lods
(bad)
aad
icebp
and
jecxz
fadd
mov
xchg
add
add
inc
ret
nop
rcl
movs
or
movs
add
test
or
add
and
adc
and
push
jmp
or
pop
imul
cmp
and
adc
rol
pop
sbb
and
add
outs
inc
mov
add
cdq
fsubr
inc
ret
enter
sub
mov
shr
retf
(bad)
mov
cmp
mov
mov
es
or
movzx
dec
adc
push
(bad)
icebp
ret
inc
imul
or
(bad)
adc
outs
pop
add
and
je
jmp
sub
bound
add
cs
xchg
fiadd
adc
bndldx
cmp
ret
inc
ds
sbb
or
mov
xor
sub
sub
in
loopne
shl
ins
add
jbe
jmp
jno
retf
mov
push
test
sbb
jns
pop
cwde
mov
dec
adc
cmp
les
imul
mov
loopne
add
or
adc
imul
ret
mov
xchg
cmps
je
mov
movaps
xor
(bad)
cmp
mov
mov
adc
test
xor
push
xchg
cdq
mul
adc
jo
ret
jo
or
adc
cmc
dec
and
not
and
fcomi
xchg
jae
xchg
mov
ins
push
mov
xor
nop
inc
outs
shl
out
out
cmp
rsqrtps
pusha
mov
adc
aaa
pop
xchg
push
pop
jg
adc
mov
or
xchg
aam
or
fsub
inc
or
dec
adc
and
xor
mov
add
pop
mov
push
les
or
repz
pop
test
test
fwait
ins
(bad)
mov
mov
test
adc
aad
xor
sub
xchg
sbb
sbb
adc
out
leave
mov
fs
jp
js
add
push
pop
cld
loop
jl
mov
mov
fs
dec
jns
pop
aas
in
jae
adc
enter
mov
int
or
mov
test
mov
test
dec
mov
out
ins
and
push
push
push
xchg
add
cli
lods
push
ret
out
sbb
xor
mov
adc
adc
mov
xchg
or
(bad)
cmp
je
mov
(bad)
hlt
cwde
inc
gs
pop
xor
adc
and
mov
add
jb
xchg
cmps
(bad)
pusha
xchg
mov
lea
adc
sbb
in
push
shr
mov
push
inc
hlt
sub
mov
push
nop
jge
mov
xchg
stos
and
or
leave
test
sbb
ins
mov
mov
or
jg
sahf
push
out
sub
or
or
xor
nop
mov
mov
aaa
push
xor
or
xchg
sub
xchg
es
popa
mov
inc
or
jb
or
inc
aaa
ficom
mov
sub
push
mov
into
ins
add
push
or
in
fld
mov
xlat
hlt
movs
ins
mov
xchg
lock
or
out
and
jno
lock
dec
repnz
add
inc
xor
hlt
mov
std
jge
jg
dec
mov
and
aaa
test
pop
sbb
fwait
dec
sar
and
dec
popa
push
and
sbb
(bad)
popa
adc
(bad)
cmp
push
xor
dec
cld
push
xchg
dec
ds
cmp
cmp
ss
or
or
mov
bound
bound
add
pop
mov
xadd
mov
or
cmp
xor
adc
cmp
add
shl
dec
sbb
adc
adc
adc
xor
fisttp
mov
movs
pop
pop
adc
stos
aas
add
push
and
or
mov
inc
inc
dec
push
push
out
or
add
ja
inc
jns
int3
repnz
or
outs
adc
cmp
je
test
je
mov
mov
and
xchg
neg
rol
dec
jo
mov
sbb
mov
add
mov
and
ret
adc
adc
adc
sar
push
call
pop
sbb
lds
add
pop
mov
xchg
add
shl
retf
pop
add
sbb
rcr
mov
sti
or
mov
lock
int3
jl
test
btc
pop
inc
outs
test
push
mov
sahf
sub
add
daa
inc
aaa
cmps
nop
dec
xor
cwde
sbb
inc
lods
jmp
adc
mov
cmp
sub
mov
and
add
jns
cmp
mov
jae
sbb
pop
es
and
int
jno
cmp
iret
movnti
sar
popa
cmp
mov
fadd
xor
jb
out
xchg
aad
add
sbb
inc
das
xchg
call
loop
adc
xchg
dec
je
adc
sub
fsubr
push
push
into
mov
mov
cmp
and
sub
mov
add
push
ret
aaa
mov
rcl
sbb
adc
push
cs
dec
lds
pop
jle
jp
js
push
mov
mov
ret
pop
sbb
mov
test
sbb
xchg
ins
and
xchg
cmps
or
cmp
jae
out
nop
or
repnz
movs
adc
(bad)
test
cmc
sub
popa
adc
adc
push
pop
fs
dec
(bad)
mov
sar
int
xor
dec
pop
mov
cmp
ror
test
dec
clc
adc
sbb
xlat
enter
adc
push
adc
adc
adc
movs
mov
ss
add
into
mov
xchg
or
movs
movs
loopne
out
jno
loop
repz
out
in
cmp
iret
mov
and
inc
test
loopne
pop
add
mov
push
js
pop
dec
pop
dec
fidivr
cwde
bound
mov
ins
add
adc
add
int
pusha
or
push
mov
movs
mov
pop
dec
mov
add
sub
mov
aas
in
test
add
xchg
and
cmp
mov
cmp
xchg
add
push
cmp
cld
aaa
xor
sub
call
cmp
xor
xchg
and
mov
or
dec
mov
neg
inc
pushf
xor
(bad)
mov
pop
adc
iret
loope
dec
mov
add
loope
inc
adc
or
sbb
lods
outs
add
jbe
loope
in
fcmovb
sbb
adc
or
rol
xor
mov
es
test
and
call
xchg
add
pop
lods
xchg
(bad)
mov
test
das
mov
xor
and
and
inc
mov
dec
(bad)
imul
and
sub
loop
int
xlat
and
pusha
sbb
xlat
inc
sub
and
or
fist
frstor
cdq
push
add
mov
imul
lea
cmp
shl
rol
sub
sbb
rcr
nop
sub
pusha
push
mov
stc
pop
test
out
or
push
pop
sbb
adc
and
call
inc
test
and
mov
cmp
(bad)
jmp
cmp
movs
mov
mov
gs
shr
xchg
mov
ficom
mov
cmp
ret
les
sub
js
addr16
add
push
cmps
sbb
mov
cdq
out
test
push
ds
and
mov
jno
push
push
pop
in
cmp
and
es
daa
out
jg
lahf
mov
cmp
or
rcr
jmp
and
and
inc
and
push
(bad)
fld
pop
push
or
mov
pop
push
jmp
push
add
ret
push
arpl
js
and
jne
adc
dec
push
fcomp
sbb
lds
xor
gs
nop
push
test
retf
inc
dec
fiadd
adc
add
adc
or
push
xchg
dec
test
inc
rcr
xor
and
add
test
and
cmps
inc
push
jb
mov
push
inc
dec
or
mov
jnp
dec
xlat
cmp
aam
or
adc
rcr
adc
inc
sbb
mov
imul
ficomp
adc
int
inc
call
adc
pop
jbe
(bad)
sbb
jp
jne
pop
mov
or
dec
and
cdq
dec
push
push
add
adc
or
pusha
cmp
jnp
inc
mov
dec
cmps
inc
lods
sbb
std
leave
jnp
jo
mov
dec
movs
sub
movs
outs
mov
sbb
mov
push
jg
dec
xchg
cmp
scas
dec
(bad)
and
inc
jp
nop
push
push
inc
dec
(bad)
dec
push
jmp
add
cmp
sbb
nop
out
mov
ret
test
adc
jmp
xor
aad
cmp
sbb
xor
repz
lds
sub
push
sub
push
loopne
jns
loopne
or
nop
cmp
lea
jg
jle
movs
push
jo
pop
fs
neg
loope
pop
vunpcklps
push
int3
daa
js
lds
add
fwait
add
xor
ror
push
or
pop
pop
add
xor
adc
das
and
jecxz
dec
jb
cmp
je
inc
add
inc
loop
clc
xor
inc
cmp
xor
in
movs
dec
or
repnz
fcom
int
dec
xchg
mov
xor
sub
jg
or
je
sub
jne
cmp
nop
mov
add
push
inc
push
sar
mov
adc
dec
mov
add
adc
les
mov
sbb
leave
dec
fist
dec
pop
push
cmp
adc
mov
push
mov
or
jno
(bad)
mov
test
jmp
cmp
mov
je
add
and
test
jmp
sbb
jnp
dec
pop
mov
jl
neg
pop
add
mov
mov
nop
sub
loope
add
inc
ja
aaa
repnz
add
xchg
mov
adc
lds
push
arpl
dec
popa
(bad)
movs
add
rcr
imul
cmp
outs
xor
repz
pop
cmp
xchg
ins
pop
cdq
mov
mov
cmp
and
sub
dec
sbb
scas
or
pop
pushf
outs
imul
sub
cmp
mov
mov
retf
add
ret
adc
or
and
cwde
test
or
dec
jo
imul
rol
xchg
rcl
xor
push
clc
or
sbb
push
inc
push
or
add
mov
fsub
sbb
add
ins
mov
adc
and
ins
clc
fwait
adc
sbb
or
cmp
jmp
fwait
push
xor
mov
xor
pusha
es
add
mov
sbb
push
scas
ror
xor
lds
pop
add
les
cmp
add
push
retf
mov
xchg
ss
mov
rcl
push
das
pop
test
sub
jg
pop
inc
je
std
fdiv
rcr
jb
xor
add
icebp
jbe
mov
jmp
mov
mov
dec
add
clc
and
xchg
lock
pop
xchg
(bad)
mov
pop
sub
mov
sti
push
or
jne
xor
in
sbb
or
xchg
jmp
gs
and
int3
jo
nop
push
(bad)
mov
retf
or
pop
clc
movzx
clc
dec
push
xor
test
adc
call
cmps
mov
mov
xor
bswap
pop
out
inc
into
push
mov
xchg
or
sub
clc
mov
in
dec
ins
sub
bound
das
outs
mov
adc
cmp
loopne
pop
jbe
nop
and
add
daa
jmp
popf
in
rcl
push
sub
rol
(bad)
test
in
adc
jmp
sbb
sub
fiadd
popa
add
adc
enter
adc
ret
mov
add
mov
pop
xor
and
sub
popa
cli
push
popa
mov
inc
arpl
test
data16
sub
ins
lods
sbb
or
xchg
cmove
xchg
aaa
sbb
nop
xor
cmps
mov
sbb
and
inc
sub
or
test
sbb
mov
xchg
pop
ins
mov
and
xchg
add
add
test
add
add
mov
in
push
push
and
inc
dec
xchg
lock
jle
xchg
mov
jg
dec
inc
lods
enter
mov
adc
push
push
data16
clc
ret
aaa
mov
sub
xchg
fwait
sbb
xchg
mov
inc
push
loopne
dec
inc
inc
xchg
sahf
dec
mov
inc
je
sbb
sbb
xchg
pop
push
mov
xor
in
sbb
stos
xchg
ror
mov
in
fimul
lods
aaa
mov
dec
rdtsc
push
or
cs
sbb
push
xchg
or
add
adc
sbb
sub
ss
ja
or
out
dec
xor
rol
pop
xor
mov
les
ror
push
test
pop
cmp
mov
outs
pop
pop
rol
adc
jle
pop
or
repz
fiadd
sbb
jbe
ja
pop
xor
sub
verr
enter
mov
xchg
inc
cld
and
(bad)
fistp
(bad)
adc
pusha
pop
lods
mov
and
(bad)
inc
mov
arpl
sub
jae
jmp
or
les
push
sbb
pop
sub
movs
jg
je
sub
jo
mov
mov
shl
fild
ret
jmp
daa
add
pop
sub
mov
cmp
test
dec
xchg
ret
xchg
call
test
push
leave
dec
pop
jp
adc
enter
ins
xchg
mov
es
mov
repz
dec
pop
mov
sbb
xchg
and
mov
imul
xchg
jp
lds
(bad)
(bad)
xchg
clc
sbb
add
scas
cmp
(bad)
pop
pop
jg
xchg
adc
push
sbb
in
cmps
ss
push
mov
or
pop
mov
push
mov
or
xor
movs
loopne
lock
iret
inc
push
push
push
dec
dec
xlat
loopne
outs
or
dec
mov
add
mov
ja
mov
add
jne
push
inc
loope
sub
adc
sbb
adc
dec
fs
adc
xchg
pop
xor
and
outs
and
xchg
pop
jg
xchg
adc
std
(bad)
aad
push
cdq
pop
ret
and
mov
mov
inc
or
xchg
std
pop
jmp
jnp
push
mov
cmp
pop
out
(bad)
daa
mov
mov
nop
daa
adc
mov
scas
push
and
(bad)
mov
stos
dec
add
and
dec
rcr
xor
adc
retf
jmp
cmp
or
cli
arpl
mov
pop
lods
test
loopne
dec
fld
xor
cmp
in
adc
inc
inc
scas
pop
mov
adc
and
xchg
or
shr
scas
fmul
sbb
sbb
sbb
lds
add
adc
push
push
mov
and
outs
scas
or
and
cmp
aaa
or
push
dec
outs
adc
sub
mov
inc
enter
aaa
mov
shl
ret
test
inc
pop
mov
fsub
lods
pop
and
dec
std
jae
mov
fcomp
jae
fadd
mov
bound
sbb
nop
add
add
or
sub
add
lock
aaa
xchg
mov
enter
pop
jno
pop
mov
clc
gs
pop
sub
aas
pop
jnp
lock
xchg
xchg
sahf
push
fucomp
das
sbb
xchg
sbb
add
ret
inc
pop
and
in
clc
cmp
sub
sbb
or
add
daa
jmp
mov
(bad)
cli
mov
add
test
push
push
aad
mov
aaa
push
mov
fs
push
inc
in
add
enter
sbb
mov
pop
cmc
xchg
jno
js
push
inc
cmp
pop
sbb
or
ret
mov
jo
pop
cmps
mov
adc
pusha
lds
lods
in
pop
cmp
pusha
adc
aas
mov
add
pop
jno
mov
and
loope
and
js
inc
xchg
scas
loop
push
and
jl
mov
pop
outs
and
cmp
mov
imul
fwait
jmp
pop
xor
adc
jnp
leave
mov
add
xlat
popa
call
inc
es
cs
movs
gs
lods
mov
idiv
xlat
jmp
inc
clc
jne
iret
and
jno
popa
inc
xchg
push
xchg
xchg
cmp
adc
xchg
rcl
xor
add
inc
bound
mov
mov
fcmovne
and
or
adc
js
dec
sbb
cmp
jno
test
jmp
add
stos
jo
xchg
add
mov
or
jmp
rcl
xchg
pop
xor
mov
or
arpl
jns
add
popa
(bad)
in
pop
ret
inc
sub
inc
push
sub
leave
xor
xor
iret
das
xor
push
(bad)
and
dec
stos
pop
fadd
adc
adc
cmp
cmp
dec
adc
push
(bad)
and
add
(bad)
ret
push
and
out
dec
(bad)
sbb
loop
pushf
clc
push
dec
dec
and
xchg
dec
pusha
pushf
cdq
(bad)
push
inc
shl
popa
ja
mov
sub
mov
inc
add
lock
cmp
and
or
adc
or
jl
es
adc
imul
and
es
pop
in
sub
mov
icebp
jmp
cmps
std
inc
or
mov
das
inc
nop
inc
test
sti
gs
or
inc
je
mov
gs
and
add
pop
dec
int3
mov
ins
daa
xchg
mov
not
ret
lock
or
test
loop
push
inc
dec
sbb
or
movs
push
es
bound
sbb
mov
sbb
fcmovnbe
push
cwde
inc
cmps
fld
data16
or
fld
hlt
inc
mov
push
adc
or
push
lds
cmc
outs
(bad)
adc
pop
pop
pop
aaa
out
fild
mov
sub
jle
cmp
cmp
shr
loope
fistp
add
fcmovu
stc
cmp
and
ins
xchg
xor
adc
sti
push
cmp
je
mov
mov
jmp
or
fsubr
sbb
dec
pop
push
je
sbb
dec
lahf
das
mov
push
add
sbb
stos
sbb
xchg
pop
fcom
nop
mov
stc
dec
push
mov
xor
nop
xchg
psraw
cmp
pop
cmp
repz
out
xchg
sbb
push
mov
push
ror
lods
xor
cmp
cmp
mov
add
clc
add
xor
or
enter
inc
xor
fnstcw
and
sar
cmp
and
popa
ror
xlat
or
inc
and
or
push
xchg
jo
xchg
and
add
adc
inc
xchg
and
(bad)
sub
cmp
dec
and
jne
xchg
pop
mov
mov
invd
or
adc
push
sbb
jns
sbb
cmp
in
dec
pop
adc
push
pop
mov
aad
cs
sub
xchg
pop
pushf
mov
lods
in
int3
jb
pop
mov
sbb
popa
lahf
les
and
adc
pop
std
iret
bound
jle
(bad)
jle
jge
inc
add
or
inc
movs
cmp
adc
and
jbe
add
fs
mov
enter
push
add
jl
popa
add
sbb
mov
mov
rol
inc
dec
retf
push
dec
push
nop
inc
imul
nop
xchg
aas
cmp
or
adc
imul
xor
xchg
sub
adc
loope
cmp
push
sub
jno
retf
pop
adc
mov
sbb
sub
mov
push
ins
pop
dec
sbb
lock
jle
push
inc
test
pop
rol
adc
cmp
rcr
call
jle
pop
int
movs
inc
out
and
fwait
test
ret
push
inc
pop
jg
pop
add
mov
jmp
jo
mov
ins
mov
cmps
push
mov
lea
xor
retf
ja
add
add
or
dec
add
pop
out
lea
xchg
cmp
mov
outs
imul
iret
(bad)
and
mov
fnstcw
test
xchg
xchg
and
dec
mov
test
enter
and
sbb
dec
pop
in
jae
xor
cli
dec
mov
xchg
adc
cmp
xchg
inc
adc
push
sbb
xor
adc
xchg
push
push
popa
je
ror
jbe
imul
xchg
fwait
lods
or
test
fnsave
jno
sbb
xor
pop
test
push
add
sbb
loope
mov
addr16
mov
pop
sub
popf
or
outs
jmp
ja
(bad)
sub
clc
jmp
inc
or
pop
pop
xchg
inc
test
das
loope
xlat
dec
mov
cmp
in
aaa
push
(bad)
sub
xchg
lock
adc
in
mov
mov
add
in
xor
sub
jmp
sbb
shr
jo
les
mov
pop
xor
or
xchg
push
rcl
add
adc
push
pop
hlt
cmp
icebp
or
fisttp
cs
outs
mov
cmp
add
adc
rcr
xchg
or
push
es
push
loop
add
jmp
inc
ss
mov
iret
sbb
add
outs
xchg
test
fidiv
adc
pusha
jge
add
mov
mov
xchg
fimul
or
xchg
nop
leave
add
shr
mov
and
nop
xchg
loopne
arpl
xor
cmc
fadd
sub
loope
push
aaa
adc
(bad)
push
inc
imul
es
cwde
jbe
dec
adc
ror
xchg
dec
movs
pop
sahf
adc
mov
cs
and
outs
aam
mov
pop
shl
mov
sbb
fld
mov
(bad)
fwait
pop
shr
ret
daa
lea
clc
pop
cmp
pop
jns
call
std
or
xchg
ss
js
inc
add
(bad)
inc
mov
add
sbb
jmp
rcr
and
pop
imul
jb
pop
mov
test
sub
mov
imul
mov
inc
outs
pop
or
xchg
or
or
or
or
and
xchg
dec
mov
push
mov
ret
outs
sub
jae
out
inc
scas
push
push
inc
and
xchg
sub
in
push
add
cmps
je
ret
arpl
dec
add
sti
clc
jae
mov
or
cs
push
xor
ins
lock
daa
aam
mov
(bad)
div
sbb
cld
pop
retf
inc
jae
or
in
and
in
and
pop
add
inc
and
mov
ret
test
sub
xchg
jp
outs
jbe
inc
push
in
jno
shr
push
hlt
ins
add
movs
add
hlt
mov
test
sub
or
shl
push
inc
mov
pop
adc
dec
sbb
mov
cmp
sub
xchg
or
adc
inc
loopne
loopne
mov
(bad)
push
xor
imul
fnsave
inc
adc
into
add
movs
dec
fidiv
ret
adc
rcl
loope
and
adc
test
sub
and
ins
or
mov
and
pop
js
nop
jl
popf
popa
xchg
mov
add
add
loope
push
daa
lea
mov
inc
add
xor
popa
(bad)
repz
pusha
dec
mov
(bad)
arpl
pop
mov
fwait
add
ror
retf
or
ret
mov
or
(bad)
jp
or
das
shl
scas
mov
iret
aam
lea
scas
and
add
(bad)
or
add
xchg
lods
test
nop
push
and
adc
and
js
sbb
ret
or
std
and
gs
inc
or
mov
xchg
cdq
xor
and
pop
mov
fcmovb
jae
add
mov
or
scas
push
push
mov
shl
aam
sbb
or
or
fistp
push
bnd
ins
rcl
rcl
fld
pusha
sbb
fistp
mov
inc
aas
sbb
pop
sar
adc
cmps
daa
pop
pop
pop
cmp
fwait
or
cwde
add
xchg
sbb
mov
inc
outs
mov
inc
cmp
sub
rcl
jecxz
push
imul
test
jbe
pop
je
mov
xchg
pop
jmp
sub
mov
xor
push
and
aaa
push
bound
xchg
inc
dec
call
fld
cdq
jo
(bad)
cmp
adc
ins
push
or
xchg
push
nop
xchg
xchg
mov
cmp
and
xor
jno
xchg
cmp
and
sub
dec
xchg
add
add
pop
(bad)
and
or
add
push
sub
outs
xor
mov
scas
and
outs
add
imul
jno
ins
bound
adc
fwait
ins
push
popa
jb
add
mov
sbb
mov
and
sbb
iret
or
sbb
pop
push
bound
ins
fs
mov
adc
idiv
push
popa
jbe
jae
movups
inc
push
or
and
fnsave
(bad)
sbb
pop
outs
arpl
mov
nop
sub
add
lods
dec
adc
jmp
add
dec
pop
mov
xor
mov
mov
test
or
je
dec
dec
cmc
or
adc
mov
mov
adc
xchg
inc
jl
cwde
jbe
out
mov
or
lea
and
mov
stc
leave
mov
xchg
inc
js
mov
xor
cmps
push
loopne
(bad)
adc
inc
push
mov
in
jbe
push
xchg
ret
pop
shl
aam
inc
hlt
push
dec
imul
adc
xor
pmullw
jge
pusha
push
mov
inc
inc
ror
cmps
lods
lock
lock
pop
cmp
push
mov
push
std
xor
xchg
xchg
push
mov
add
rcr
stos
pop
mov
pop
mov
pop
mov
fs
sbb
ja
js
loopne
xlat
pop
fucomi
call
fs
jp
loop
mov
ins
mov
jae
mov
cmp
rcr
sbb
in
sbb
push
cmp
mov
or
add
sbb
es
inc
push
lock
rcr
icebp
ficomp
ds
xchg
cmovbe
je
gs
dec
cmp
ret
outs
and
sti
dec
gs
pop
push
out
fs
repnz
xchg
add
xchg
mov
sub
push
shr
pop
push
dec
inc
(bad)
fild
ss
cwde
nop
scas
inc
ss
enter
arpl
jo
aas
mov
mov
cmp
mov
mov
mov
fsub
movs
pusha
mov
jle
xlat
jne
and
scas
mov
xchg
cmp
xor
enter
(bad)
cmp
pusha
shl
sbb
mov
push
mov
adc
or
push
sub
jo
push
hlt
mov
cmp
sbb
add
dec
aam
push
xor
adc
sbb
(bad)
mov
adc
cmp
bound
pusha
cmp
add
push
push
or
pop
popa
fs
adc
inc
inc
inc
pusha
dec
int
xor
or
test
or
mov
inc
cmp
xor
mov
or
or
ins
nop
dec
sbb
push
pop
add
cmp
outs
push
adc
mov
shl
ss
shl
fidiv
xlat
cmp
daa
js
test
or
int
sahf
pop
addr16
nop
scas
inc
les
inc
add
pop
imul
xchg
outs
or
xchg
add
inc
(bad)
mov
inc
mov
cmp
arpl
inc
pop
adc
jl
add
inc
cs
and
pusha
outs
fistp
xchg
dec
cs
inc
dec
in
inc
inc
rol
test
pusha
xor
inc
outs
daa
mov
pop
and
or
pop
test
and
push
or
add
dec
inc
push
add
xchg
add
push
add
icebp
out
jb
pop
and
scas
retf
push
leave
inc
add
mov
adc
push
enter
jnp
jb
fild
mov
or
cwde
test
inc
inc
into
shl
adc
or
adc
or
push
sub
xchg
mov
cmp
jo
pop
or
inc
punpcklwd
xchg
push
fcmovb
jmp
nop
shr
or
fucomi
outs
xor
jg
cmp
outs
imul
test
sub
ins
test
sbb
sahf
lods
lods
sbb
jo
jno
ss
sbb
adc
sub
sbb
jno
into
push
push
dec
xchg
cmp
push
jns
aad
cwde
fsubr
mov
int3
push
test
or
fst
pop
and
lds
inc
fcom
or
dec
scas
daa
pusha
mov
and
popa
push
or
xchg
pusha
rol
and
add
mov
in
call
fcomp
mov
or
addr16
push
lea
nop
and
imul
add
outs
push
ret
adc
pop
sbb
ret
jo
jo
and
nop
paddsb
pop
xchg
and
pop
mov
ds
cmp
inc
inc
pushf
rcr
or
jmp
xlat
sbb
xor
ds
push
cmc
jmp
push
pop
dec
shl
sar
(bad)
jg
xor
xor
ss
cmp
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
call
jno
push
push
push
push
pop
pop
pop
out
xchg
jp
dec
mov
xor
scas
xchg
or
xlat
xor
fistp
(bad)
les
xchg
es
push
test
xchg
xchg
pushf
push
(bad)
xor
js
jl
cmp
sbb
push
std
or
sar
mov
test
xchg
jbe
outs
data16
and
add
add
adc
pop
add
fidivr
out
popa
ins
fldcw
mov
mov
mov
adc
mov
push
or
pop
sbb
push
adc
mov
push
jmp
mov
jge
add
cdq
shl
imul
add
inc
cli
repnz
shr
sti
or
or
mov
shr
leave
xacquire
ins
aas
or
sar
stos
pop
push
inc
xchg
aaa
cli
push
sbb
jmp
fs
push
lds
mov
mov
add
xor
loope
xlat
cli
xor
imul
dec
pusha
inc
arpl
outs
stos
xchg
loop
arpl
rcl
xor
or
sbb
jecxz
enter
lds
inc
jl
jmp
fcom
dec
or
enter
and
hlt
or
xchg
cmps
data16
mov
movs
add
mov
inc
xchg
out
add
in
push
rol
cmovb
pop
rol
pop
cmp
push
iret
popa
ja
sub
push
and
mov
inc
dec
xchg
jo
jbe
and
xchg
fsubr
(bad)
leave
xchg
out
clc
(bad)
sahf
mov
pop
(bad)
mov
imul
add
rol
into
sbb
adc
mov
jmp
pusha
and
inc
cmp
mov
add
add
sub
mov
sub
fisub
jns
lds
popa
cld
inc
sti
jmp
inc
arpl
push
add
pop
pop
imul
shl
cmps
pop
mov
clc
mov
shl
or
lock
inc
xchg
(bad)
aaa
cmp
jnp
mov
aas
or
(bad)
shl
inc
push
sbb
test
inc
cmp
xor
add
push
adc
xchg
pop
add
mov
inc
sbb
iret
lock
iret
xlat
and
fldenv
lock
ins
stc
push
or
ins
dec
jmp
pop
dec
jl
jmp
pop
jle
jo
cmp
inc
es
adc
sub
jle
hlt
sub
push
sbb
adc
outs
imul
enter
jmp
arpl
outs
xor
push
xor
nop
enter
fisubr
xchg
push
ss
(bad)
adc
mul
cmp
call
adc
(bad)
push
add
loope
clc
dec
adc
mov
fiadd
mov
add
push
sbb
inc
retf
jecxz
adc
adc
dec
mov
mov
sbb
je
add
mov
daa
dec
mov
rcl
inc
imul
add
enter
push
nop
cmp
and
pop
cmp
mov
and
jl
mov
data16
cmp
daa
fwait
and
(bad)
sbb
movzx
add
push
aas
cmp
fild
cs
inc
leave
mov
imul
iret
push
mov
jae
movs
xchg
cmp
xor
add
mov
les
mov
or
adc
sar
xchg
sub
adc
add
inc
dec
push
(bad)
cwde
xor
jbe
sbb
push
repnz
in
mov
xor
pusha
mov
pop
push
mov
cmp
(bad)
ror
ins
push
in
mov
pop
xor
mov
jl
jg
xchg
mov
jp
nop
call
xor
push
xor
mov
jmp
jns
cmp
add
ds
sbb
arpl
mov
sbb
call
call
clc
and
add
xor
ins
pop
pop
in
test
sbb
je
cs
xor
dec
test
sti
jg
cmp
adc
pop
js
mov
mov
pop
push
lea
and
inc
fmulp
vmread
push
mov
add
cdq
aas
push
xor
dec
inc
sub
sbb
neg
in
mov
rol
popa
movs
mov
sbb
xchg
jnp
xchg
and
add
(bad)
inc
out
xor
cmps
icebp
xor
dec
cmp
jmp
lea
adc
nop
push
xor
sbb
popf
xchg
fs
mov
pusha
dec
daa
ror
pop
es
mov
push
and
cdq
popa
inc
mov
add
repnz
js
(bad)
sub
retf
aas
out
cmps
sub
aam
cmp
add
and
fsub
cmp
dec
jo
aaa
inc
test
popa
lods
sub
fsub
in
xor
and
dec
scas
mov
call
inc
push
leave
mov
or
jbe
movs
ins
call
neg
je
jmp
inc
cmp
sub
xor
pop
cmp
jnp
inc
rol
pop
xlat
sub
iret
repz
(bad)
pop
jb
rcl
movs
or
or
jl
(bad)
push
out
out
or
sub
sbb
fmul
or
dec
or
cmp
lods
push
sub
add
lock
ins
test
adc
cmps
lock
in
push
or
push
in
jmp
sub
dec
cmp
adc
adc
test
jmp
jmp
or
sub
sub
sbb
sbb
sbb
addps
xchg
fwait
es
cdq
in
adc
je
and
jnp
lock
or
and
jmp
cmp
mov
mov
mov
jge
pop
xlat
dec
adc
dec
xchg
inc
mov
mov
lea
adc
add
and
push
xchg
sbb
mov
fdiv
inc
sub
or
push
fld
and
push
sbb
bound
mov
or
mov
push
mov
int3
mov
pop
aaa
cmps
add
lock
push
push
inc
test
test
fsubr
push
je
jp
movzx
jg
test
test
adc
fstp
add
out
pop
test
(bad)
test
fcomp
shr
pop
jnp
push
inc
mov
jae
xor
add
loop
pop
int3
dec
cmp
int
gs
inc
sub
adc
add
es
add
test
or
dec
mov
adc
cwde
(bad)
rol
and
mov
mov
es
pop
jecxz
fs
js
jmp
jbe
sbb
mov
mov
shl
pop
push
pop
gs
gs
pop
xchg
or
pop
push
aaa
or
fdiv
repz
or
pop
js
data16
out
sbb
add
ins
push
push
icebp
xchg
jo
mov
xor
add
jmp
add
and
mov
inc
or
(bad)
in
sbb
call
call
clc
jmp
mov
(bad)
jg
inc
cmps
adc
mov
add
xor
add
add
mov
dec
adc
mul
mov
mov
(bad)
xor
retf
sub
(bad)
mov
popa
outs
mov
inc
je
and
loope
dec
and
sub
in
enter
xchg
mov
fistp
inc
and
and
or
mov
leave
and
outs
test
pushf
les
adc
dec
push
adc
daa
mov
and
xchg
lea
movs
sub
lds
xor
lea
mov
sub
cdq
mov
xor
jg
int
ficom
ret
cwde
out
repnz
call
dec
and
cwde
mov
add
pop
in
lock
push
inc
sbb
(bad)
jno
ja
mov
xlat
xchg
je
in
mov
test
jg
cmp
retf
or
adc
jno
inc
adc
mov
cmps
aam
iret
mov
inc
sar
aam
add
pop
adc
mov
mov
sar
loopne
and
sbb
int3
mov
clc
inc
test
das
std
push
sbb
mov
cld
sbb
fdiv
ss
div
(bad)
pop
inc
popa
jle
and
sahf
pop
rol
loope
jl
aas
pop
cmp
cmp
cmp
jo
movs
add
cmp
test
and
test
(bad)
dec
int3
cmp
dec
push
nop
ret
cmp
add
gs
loope
sub
push
adc
xor
pusha
iret
push
add
dec
sbb
lods
jno
rol
or
fdivr
dec
and
nop
jo
inc
cmp
mov
jge
packsswb
or
rol
xor
les
stc
lock
in
mov
inc
mov
loope
not
mov
or
sub
sbb
jle
inc
push
jno
and
dec
jge
std
push
popw
popa
(bad)
cmp
mov
adc
mov
into
icebp
push
fsubr
adc
(bad)
mov
add
jg
ficom
xchg
push
xor
leave
add
dec
(bad)
xchg
jne
repz
and
and
adc
or
and
or
sub
repnz
dec
inc
and
(bad)
inc
push
inc
dec
sub
pop
mov
jbe
inc
aad
movs
sahf
je
ins
in
gs
jne
lahf
test
gs
lea
lock
jo
lea
sub
dec
cmc
mov
push
clc
sub
jmp
cmp
shr
and
ror
pop
add
xor
into
hlt
popf
pop
ins
lds
iret
hlt
hlt
shl
test
add
outs
add
inc
cmp
in
shr
dec
clc
or
pop
pop
movs
mov
cmp
dec
inc
push
sbb
ror
xor
leave
pushf
pop
(bad)
hlt
ror
or
adc
retf
pop
push
aas
adc
ins
adc
fsubr
leave
fdiv
xchg
jnp
or
cmps
clc
loopne
cmps
mov
jbe
or
pop
or
jge
int
adc
push
aaa
push
pop
loopne
mov
jp
and
dec
add
shl
adc
lods
inc
cwde
test
xchg
or
and
loopne
ds
xor
lahf
call
inc
fs
outs
or
pop
push
jmp
retf
lahf
in
sbb
add
mov
mov
pusha
leave
loopne
and
or
loopne
adc
lds
xlat
fstp
xchg
mov
and
and
in
xor
ror
add
in
mov
arpl
add
sub
xor
sbb
int3
add
nop
or
adc
dec
pop
pusha
repz
or
dec
fstp
in
or
and
adc
mov
mov
outs
aaa
fild
adc
cs
adc
sahf
adc
dec
clc
and
xor
movs
and
inc
and
or
stc
inc
xor
lods
pushf
mov
clc
sub
or
nop
jecxz
shr
stc
lock
lods
mov
dec
push
add
and
das
cmps
or
test
pusha
push
sub
imul
cmp
shl
stos
pop
inc
cmp
clc
lock
xchg
out
dec
call
xchg
add
stos
inc
test
inc
test
mov
les
sbb
fild
data16
loopne
(bad)
int
mov
ret
inc
and
icebp
or
pop
cmp
pop
inc
aam
sbb
loope
outs
sbb
in
scas
pushf
loopne
lods
mov
add
adc
xor
int3
cmp
fbld
adc
add
sbb
and
mov
mov
cmp
add
jle
lea
xchg
xchg
lahf
cmp
daa
aam
inc
ja
add
inc
pop
fcmovbe
xor
movs
mov
xor
xor
mov
push
fcmove
add
adc
sub
push
jno
adc
inc
cmp
popa
pop
and
add
cwde
add
ins
pusha
pop
fist
sub
adc
xchg
push
pop
add
(bad)
adc
cli
std
jmp
fs
repnz
jg
jp
repz
movs
xor
test
jmp
xor
mov
dec
mov
or
mov
xchg
sbb
shl
or
mov
adc
push
push
sbb
push
fs
sub
in
fmul
sub
fld
outs
scas
movs
inc
es
(bad)
sub
rol
or
popf
rcr
push
push
inc
test
mov
mov
repz
mov
inc
jns
sub
cld
(bad)
inc
cmovo
sub
mov
rol
fcmovb
adc
pop
or
adc
dec
cmp
dec
cmp
pushf
test
cdq
mov
and
sbb
int
stos
xor
push
and
add
xor
push
adc
add
pop
pusha
mov
add
mov
lock
add
lods
pop
jecxz
ja
dec
outs
fdiv
or
inc
test
dec
push
xor
or
bound
push
mov
push
and
pop
mov
fld
add
xchg
addr16
add
mov
call
mov
add
pop
sbb
cld
es
push
pop
mov
ficom
inc
jne
fdiv
xchg
pushf
lock
cmp
cmp
xor
or
fadd
and
xor
lea
gs
and
mov
or
ret
dec
sbb
cmp
sub
xchg
lock
and
adc
dec
mov
cmp
xchg
repz
add
(bad)
cmp
pop
or
jge
mov
push
add
ret
cmp
push
add
les
fimul
cli
or
sub
ror
add
pop
sbb
repnz
and
xchg
leave
or
adc
cmp
popf
ins
xor
adc
xchg
lods
adc
sbb
out
aas
je
(bad)
adc
mov
movs
cld
retf
jne
mov
imul
scas
inc
adc
mov
or
les
add
in
pop
and
movs
adc
add
ud1
pusha
cmps
loop
out
cdq
mov
mov
out
ficom
inc
inc
loopne
or
jbe
mov
dec
xor
lea
dec
loopne
xchg
(bad)
jg
inc
jle
sbb
pop
pushf
mov
loop
or
int3
call
adc
les
xchg
adc
sbb
inc
loope
mov
outs
loope
shr
ret
pop
adc
jp
pop
pop
mov
scas
inc
cmp
cmp
iret
or
push
retf
fs
mov
retf
aaa
das
or
scas
cmp
inc
int
loope
push
fimul
mov
bound
repz
mov
aaa
or
sbb
out
call
dec
mov
lahf
pop
mov
sub
inc
xchg
dec
push
ss
mov
aas
jbe
and
jmp
mov
lods
fstp
inc
ret
sub
pop
fstp
sbb
and
inc
adc
lods
loopne
test
adc
push
xchg
pop
inc
jg
lods
rcl
pop
lahf
mov
cmp
cli
out
jmp
out
add
cmp
sahf
fs
out
or
mov
shl
test
and
jne
xor
idiv
push
push
and
cs
mov
add
cmp
push
outs
sbb
jmp
call
je
imul
sbb
push
arpl
call
loope
movs
(bad)
fwait
shr
inc
mov
adc
sub
mov
add
xor
xor
je
jae
mov
movd
aaa
mov
and
push
lock
sar
xchg
xchg
data16
jmp
pop
ret
push
adc
stos
xchg
cmp
in
and
mov
sub
ret
pop
popa
add
nop
dec
jno
dec
xor
or
loope
adc
push
xchg
push
mov
out
dec
mov
loop
xor
dec
out
push
retf
ret
enter
adc
je
pusha
or
or
mov
cmp
cmps
push
cmps
shr
mov
sub
xchg
es
cmp
(bad)
mov
pop
addr16
inc
dec
push
or
xchg
nop
scas
push
ja
jno
adc
jge
retf
inc
mov
ss
mov
out
cmp
loop
ret
fcom
pop
retf
push
pop
inc
add
les
cmp
xchg
xor
and
sub
sar
xchg
arpl
fidivr
push
cmp
cmp
adc
retf
pop
xchg
mov
xchg
in
test
daa
dec
mov
repnz
test
fild
xor
outs
push
sub
push
fs
pushf
es
fistp
daa
mov
int
daa
cmp
push
cmps
outs
daa
pusha
ja
fs
adc
pop
pop
adc
pop
dec
lea
popf
jl
jbe
mov
fist
inc
xor
test
(bad)
xchg
je
mov
dec
sub
cmp
stos
pop
xor
test
ds
cdq
imul
xchg
xchg
repnz
das
pop
adc
inc
mov
add
add
push
jo
dec
inc
cmps
dec
and
inc
and
xchg
test
sub
cmp
sbb
xchg
cmp
inc
or
sub
push
adc
cmp
(bad)
sbb
sbb
ja
pop
inc
(bad)
leave
fwait
adc
xor
out
ds
and
mov
mov
popa
push
add
call
adc
movs
mov
jl
icebp
repnz
push
or
sbb
fs
js
js
jmp
stos
int3
pusha
not
push
aas
rol
dec
xchg
pop
les
push
(bad)
push
mov
pop
and
jae
mov
pusha
les
fsubr
adc
pusha
imul
adc
xchg
stos
imul
leave
les
mov
dec
inc
imul
hlt
xor
mov
repnz
xor
mov
mov
or
and
or
sub
mov
inc
aam
daa
add
cmp
mov
js
adc
popa
dec
add
sub
loope
xchg
(bad)
pop
add
jne
or
add
pop
sub
data16
(bad)
mov
repnz
lock
retf
jmp
xchg
mov
push
and
int3
jb
adc
js
push
dec
fisubr
aaa
push
dec
inc
add
adc
stos
lock
and
(bad)
pop
sar
cmps
sub
shr
jns
dec
add
mov
cmp
or
sub
push
scas
int3
adc
mov
lock
das
xchg
rol
out
add
mov
out
and
and
mov
dec
or
sbb
popa
ss
push
mov
add
dec
dec
fisubr
jno
pop
jb
lds
jg
in
sbb
pop
loopne
adc
add
enter
mov
or
aam
xor
inc
repnz
mov
es
cdq
adc
call
cli
sub
push
int3
mov
and
pop
lock
and
dec
xor
loopne
fs
out
cdq
xchg
ficomp
add
je
push
sbb
loopne
dec
repz
out
mov
addps
xlat
test
or
dec
mov
and
add
inc
cmp
in
cld
int3
cmc
push
test
jb
mov
ficom
cmp
imul
add
mov
add
scas
out
in
add
and
add
jb
add
xor
dec
mov
jns
fwait
dec
add
je
dec
ins
aaa
out
dec
movs
xor
add
xchg
jmp
push
mov
and
xor
test
cdq
ret
sub
fstp
sub
pop
xchg
sub
arpl
push
sti
jle
imul
stos
adc
or
push
push
(bad)
jo
pop
loopne
and
mov
or
loopne
es
call
dec
(bad)
fcmove
inc
leave
push
jno
adc
sbb
mov
or
addr16
add
jne
mov
sub
sar
push
ret
ins
cmp
shl
sbb
pop
xchg
xlat
test
shl
mov
ins
not
push
mov
jecxz
bound
or
pop
out
xchg
push
pop
movs
loopne
pusha
cmps
sbb
sahf
dec
pop
dec
xor
int3
test
or
pop
push
imul
push
pop
into
mov
push
bswap
add
pop
cdq
xor
cmp
xchg
fmulp
add
mov
fidiv
push
lods
mov
dec
sbb
popa
and
je
cmp
adc
pusha
xor
jbe
sti
jl
sbb
inc
fucompp
mov
int3
retf
dec
int3
inc
mov
sub
mov
arpl
dec
ret
inc
push
add
sbb
cmp
mov
mov
inc
mov
dec
iret
daa
add
pop
jne
mov
loopne
movs
push
enter
add
jl
jg
aaa
dec
dec
leave
xchg
pop
and
imul
std
cmp
inc
cmp
mov
adc
jnp
(bad)
call
mov
jmp
adc
dec
movs
xor
or
sbb
xchg
and
add
mov
call
pop
push
sbb
lea
inc
mov
fbld
retf
rcr
mov
test
ror
sbb
(bad)
xor
inc
or
mov
inc
mov
es
inc
xor
pop
aaa
(bad)
mov
or
cmps
sahf
mov
stc
fucomip
inc
mov
push
mov
push
mov
lods
and
and
popf
push
lahf
push
add
sahf
sahf
adc
or
ret
nop
mov
pop
fisubr
mov
push
pusha
xchg
jge
rol
movs
and
xor
lock
in
dec
and
jo
and
mov
adc
inc
add
ffreep
sub
test
or
mov
or
stos
loope
push
push
aad
mov
push
xor
adc
test
add
cmp
out
enter
rcl
mov
jmp
add
jb
int
js
movs
jno
ror
pop
inc
pusha
test
ss
or
fld
mov
icebp
xchg
adc
push
inc
or
mov
cdq
int
call
add
loopne
sbb
inc
das
add
push
lods
(bad)
fcom
daa
shl
adc
inc
inc
sub
ja
jl
sbb
fwait
lods
aas
lods
das
(bad)
cmp
and
xor
push
add
retf
test
loop
pop
test
dec
mov
inc
inc
ret
sbb
or
ret
xor
add
and
add
jno
dec
and
or
sub
ret
movs
dec
xchg
fisub
lds
jno
in
xchg
ret
cs
xor
push
add
mov
adc
sub
mov
sbb
cmps
inc
mov
adc
cli
push
les
lods
add
pop
xchg
cs
add
shl
or
and
and
lods
adc
rol
cmp
jp
sub
pop
add
dec
ret
dec
sbb
mov
add
mov
nop
dec
or
inc
loop
ret
mov
sub
test
add
pusha
fidivr
add
into
ins
adc
jbe
scas
or
add
jge
inc
xchg
and
sbb
pop
sub
inc
mov
jnp
lods
mov
xchg
repz
pusha
xchg
sbb
dec
imul
mov
or
ss
xor
inc
or
test
cwde
push
aaa
lods
pop
xchg
jbe
mov
add
lea
or
ror
pop
or
mov
xor
das
sub
and
push
jp
jb
xchg
dec
mov
push
lea
sub
in
mov
sub
xor
pusha
mov
ins
push
dec
mov
pop
adc
add
and
adc
inc
cmp
je
xor
pop
shl
rol
in
cdq
sar
lahf
push
ret
ret
ds
imul
fwait
repz
push
mov
inc
adc
cwde
add
sti
ss
aam
pusha
loopne
ret
push
mov
lock
test
adc
cmp
pusha
loopne
inc
push
lahf
mov
aas
ret
pop
mov
inc
pop
add
add
or
call
pop
clc
jb
scas
push
loopne
sbb
mov
fwait
mov
or
mov
cmp
ins
mov
leave
xchg
fimul
cmp
js
test
xchg
je
dec
jmp
sar
(bad)
dec
or
loopne
add
or
adc
or
mov
adc
add
hlt
push
inc
mov
or
and
add
cmps
inc
push
test
je
or
push
not
pop
out
outs
add
sub
adc
in
inc
or
sub
(bad)
push
aaa
mov
add
out
and
test
inc
jmp
dec
cwde
imul
(bad)
xchg
inc
sub
and
mov
lock
pop
loopne
mov
rol
jbe
jmp
cmp
cmp
ds
iret
dec
push
sbb
fs
dec
inc
dec
sub
xor
js
test
cmp
push
nop
or
mov
popa
aaa
adc
cmps
push
pop
test
push
dec
hlt
adc
sbb
adc
push
test
lock
xor
push
add
scas
mov
cmp
mov
test
in
adc
and
xor
xor
scas
icebp
add
add
inc
jns
test
push
cmp
mov
and
shl
jecxz
jmp
je
clc
sub
sub
adc
push
add
xor
ror
sbb
adc
das
sub
xor
push
xchg
in
lock
cmp
push
jmp
xchg
test
jg
or
xchg
mov
or
(bad)
aad
jno
jae
or
sub
cmp
ja
fsubr
mov
mov
push
call
inc
push
sbb
sbb
aaa
(bad)
hlt
jmp
sbb
or
mov
push
pusha
pop
add
cmp
jl
adc
or
dec
adc
pop
shr
sub
jno
or
shl
popa
and
add
or
sbb
add
sbb
jge
mov
aaa
in
outs
or
add
mov
jb
xor
mov
enter
xchg
adc
popf
mov
mov
retf
mov
test
and
aam
sar
jle
cmp
test
pusha
enter
or
jb
cwde
sub
lea
push
cmp
aas
pop
pop
lods
out
pop
mov
mov
mov
add
(bad)
xchg
es
aaa
sbb
pop
sar
pop
int3
push
mov
push
test
mov
sbb
dec
scas
sbb
inc
stos
lds
push
in
call
cmp
div
movs
push
xor
test
sahf
cmc
ret
aas
cmp
ret
add
cmp
shl
mov
or
mov
aas
or
push
test
or
les
adc
inc
cmp
adc
cmp
sbb
cmp
movs
cld
push
jl
jae
xor
or
mov
test
adc
adc
push
or
ds
cmp
jge
(bad)
cmp
ror
pusha
add
pop
xchg
pop
pop
sahf
aaa
sbb
inc
nop
xchg
inc
jp
fiadd
inc
mov
adc
cwde
sub
daa
cmp
iret
xlat
push
cmp
inc
jg
sub
push
clc
or
cmp
mov
test
push
push
push
ds
stc
(bad)
fwait
sub
xchg
mov
cmp
inc
pop
add
add
xchg
sub
cmp
pusha
or
mov
sbb
or
or
leave
shr
imul
aam
inc
push
ret
dec
test
add
ins
sbb
add
out
rcr
test
push
inc
adc
test
jbe
sbb
add
or
int
xlat
mov
xchg
lods
ja
ror
jmp
(bad)
rcl
outs
jmp
cmp
int
fdivr
fldenv
mov
mov
sub
(bad)
fwait
cli
cmp
cmp
mov
add
mov
pop
sub
shr
(bad)
and
or
xor
sbb
dec
dec
popf
or
mov
sbb
int
push
push
fist
adc
test
or
xchg
mov
sub
sbb
add
scas
xchg
lock
xor
sub
and
rcl
or
mov
xchg
add
imul
xor
ins
sbb
pop
add
into
dec
and
bnd
call
mov
jnp
dec
mov
add
sub
call
lea
pop
or
xor
mov
out
ret
les
pop
mov
dec
mov
and
fdiv
and
nop
fdivr
cdq
push
ja
sbb
in
inc
stos
add
scas
dec
or
pop
dec
add
push
in
add
add
retf
ret
and
or
dec
ret
inc
jp
or
fs
mov
in
loope
or
add
retf
stos
iret
xor
(bad)
push
inc
bound
imul
push
iret
stos
aam
vmovaps
pop
jmp
add
mov
(bad)
sbb
lds
xchg
add
rol
or
dec
sar
push
pop
shr
retf
ret
or
push
push
xchg
cwde
dec
loopne
retw
(bad)
add
push
push
xchg
dec
push
aaa
push
xor
retf
add
pop
xor
jmp
mov
cmp
mov
xor
in
cli
cmp
inc
popa
add
(bad)
fdiv
and
popa
jmp
or
sub
add
fsubr
ja
test
dec
push
push
into
xchg
aaa
or
push
(bad)
xor
ds
cli
std
loop
or
jmp
jge
xor
jbe
lods
popa
push
add
xchg
jns
popf
nop
adc
xchg
or
sbb
pop
mov
push
or
push
push
pop
jae
(bad)
push
pop
pop
dec
ret
adc
test
int3
mov
ins
inc
push
inc
pop
std
enter
sbb
sbb
inc
xor
cdq
mov
xchg
test
adc
fs
or
sbb
inc
pusha
fld
jle
sub
jo
or
pop
dec
sar
loopne
or
(bad)
adc
lea
(bad)
stc
xchg
jo
adc
or
(bad)
or
dec
and
sub
add
push
fistp
push
inc
xor
stc
and
popa
mov
mov
mov
dec
cmp
daa
add
ins
cld
(bad)
je
fimul
or
push
and
add
inc
and
sbb
add
bound
jb
sbb
pop
jecxz
or
mov
xor
stos
and
jmp
dec
inc
or
das
push
pop
daa
bound
mov
rcl
add
pusha
out
or
push
cmp
jne
je
rcl
fisub
sub
mov
(bad)
xor
(bad)
mov
adc
sub
repnz
mov
mov
outs
inc
pusha
out
pop
inc
jg
aad
test
xlat
shr
ja
addr16
dec
or
addr16
jl
mov
not
ins
mov
pop
cmp
frstor
es
(bad)
cmp
pop
mov
jno
push
dec
(bad)
xor
jge
(bad)
enter
pop
mov
(bad)
add
hlt
mov
sbb
lods
in
mov
nop
mov
pop
xor
ficomp
sub
hlt
pop
hlt
push
sub
cmps
imul
imul
cmps
imul
cmps
imul
sub
(bad)
cld
repz
hlt
xor
xor
lock
xchg
ja
aaa
mov
pusha
lods
cmp
loopne
mov
pop
ret
icebp
adc
movsx
pop
mov
rcr
push
dec
mov
or
arpl
xchg
or
push
push
ficomp
cmps
icebp
fcomp
and
inc
nop
xlat
fild
and
and
out
cmp
xchg
fadd
inc
mov
rol
loopne
stos
push
cwde
fsubp
adc
add
aas
lahf
adc
cli
or
inc
inc
call
mov
mov
push
push
imul
push
push
push
push
inc
bound
cmp
out
imul
and
cmp
inc
push
sub
inc
je
cli
inc
ss
call
push
mov
cmp
aad
add
leave
clc
inc
sbb
push
mov
(bad)
mov
addr16
loop
push
les
jl
outs
repz
icebp
lahf
sbb
repnz
in
lea
ss
mov
(bad)
sub
xor
pop
sub
dec
add
ja
test
mov
int3
movs
mov
cmp
sbb
lds
jno
inc
and
cmp
push
mov
fldcw
pop
loopne
pusha
cmp
cmp
out
mov
xchg
mul
and
ds
pusha
daa
jne
push
jbe
fnstsw
inc
add
or
scas
imul
test
jne
and
fstp
push
enter
aam
cmp
jne
int3
fs
xchg
dec
or
pop
in
data16
movs
push
jo
pusha
iret
(bad)
xchg
mov
pusha
and
je
mov
sbb
in
je
lahf
jmp
pushf
(bad)
jg
or
inc
sbb
or
adc
adc
or
mov
(bad)
aaa
ds
pop
mov
mov
or
adc
cmp
mov
cmp
inc
inc
push
jbe
push
mov
adc
and
outs
pop
pop
ja
and
scas
fldcw
pop
inc
jecxz
sbb
jp
rcl
and
adc
shr
dec
fdiv
xchg
rcr
jmp
jecxz
jb
adc
icebp
mov
inc
aad
mov
lds
in
scas
xor
stc
jne
loopne
or
mov
adc
jo
cmp
pop
push
aaa
and
(bad)
pop
das
sub
add
dec
add
mov
add
sub
in
sbb
aad
les
and
or
jp
push
mov
xor
xor
dec
add
pop
push
jmp
sbb
imul
(bad)
cmp
or
stos
push
sub
push
mov
xchg
xchg
in
int3
test
adc
add
retf
test
shl
out
inc
in
pop
mov
adc
or
jae
sbb
sub
cs
adc
stos
add
and
sub
push
out
mov
mov
cmp
and
rcl
mov
mov
imul
lods
test
mov
aam
dec
cmp
pop
repnz
daa
(bad)
test
cmp
push
enter
bound
test
shl
imul
out
inc
pusha
sub
cmp
jno
add
jmp
in
xor
stc
imul
sub
mov
ins
hlt
cmps
in
movs
retf
xor
mov
sub
adc
call
mov
adc
mov
xchg
or
ret
shl
(bad)
mov
in
sub
add
mov
sub
std
adc
imul
es
cmp
popa
call
push
mov
push
inc
jge
or
mov
mov
or
outs
adc
pop
inc
pop
mov
enter
fs
nop
std
adc
call
fs
cmc
mov
fnsave
xchg
cmp
jae
sbb
adc
or
push
loope
outs
cmp
mov
pop
jge
and
gs
cmp
lock
sbb
sub
in
mov
jmp
inc
cmp
inc
adc
push
mov
pop
push
mov
shl
rol
pop
jmp
mov
add
and
inc
xchg
stc
mov
cmp
mov
inc
mov
test
sahf
inc
int3
xchg
fs
cmp
or
push
mov
loop
mov
or
pop
add
push
adc
mov
(bad)
cwde
or
xchg
or
xchg
or
call
inc
pop
sbb
in
xor
loopne
stos
clc
lods
pop
add
lods
cdq
jmp
push
push
or
xchg
xor
sub
inc
das
or
into
push
inc
adc
xor
cmp
jecxz
dec
cmp
mov
test
xchg
enter
dec
push
adc
call
ret
add
mov
cmp
adc
sbb
js
push
sti
int3
sbb
nop
fisubr
xor
rol
mov
cmp
clc
dec
jle
push
(bad)
mov
push
xchg
fistp
push
xor
xor
or
test
adc
out
fsub
mov
inc
aaa
add
dec
xor
sahf
dec
add
add
mov
cmp
fsubr
add
int3
test
xchg
or
lds
lock
ins
pop
adc
loopne
pop
lock
popa
or
xchg
das
xor
or
xor
push
jmp
pop
push
mov
fstp
adc
jns
sbb
jge
in
mov
mov
pop
retf
sub
and
push
sbb
push
push
add
adc
cmp
xor
jge
dec
dec
ins
ja
sti
icebp
jge
and
jno
mov
aaa
xchg
jle
test
test
fwait
push
cmp
pusha
and
inc
ja
inc
xchg
push
inc
sbb
jge
add
sar
sub
ss
xchg
pop
xchg
mov
ins
or
mov
imul
(bad)
jmp
xchg
or
push
sbb
mov
bound
daa
dec
inc
and
mov
adc
or
xor
xchg
push
dec
repz
in
ins
adc
mov
fs
add
or
cmp
pop
or
adc
mov
les
fiadd
sahf
arpl
rcr
jge
lahf
jne
mov
add
sahf
inc
jmp
or
gs
add
je
hlt
cmp
cli
cmc
jmp
and
dec
mov
movs
adc
mov
add
or
add
mov
enter
or
sub
int3
push
jmp
popf
cmp
mov
dec
jl
mov
push
sbb
movs
mov
mov
inc
rcr
outs
or
or
stos
jge
mov
and
inc
shl
or
dec
jg
test
es
les
mov
lods
fmul
aad
dec
cmp
adc
fadd
push
shl
fimul
pop
add
fiadd
inc
cmp
adc
or
fstp
jo
ins
mov
cli
rol
jno
cmp
adc
dec
test
sbb
lds
and
je
test
inc
sbb
cmp
sub
repnz
push
mov
xor
(bad)
movs
or
mov
push
and
pop
sub
add
push
popa
sub
int
and
push
in
push
fdiv
push
bound
push
pop
sbb
arpl
test
sbb
sub
lea
xor
mov
adc
mov
stos
or
mov
rol
and
repz
test
repz
adc
aas
push
sbb
jmp
xor
bound
jbe
inc
daa
and
jmp
dec
ss
add
jl
add
jmp
das
inc
or
jmp
ffreep
aas
adc
sbb
adc
jmp
(bad)
adc
jmp
push
mov
sub
sub
imul
les
pop
das
adc
mov
adc
and
adc
xor
add
jg
fbld
sub
inc
pop
shr
pop
hlt
dec
cmovs
test
inc
jmp
test
pop
hlt
mov
xchg
rcr
popa
and
inc
push
xchg
push
push
push
aaa
sbb
fnstcw
dec
jge
repnz
xchg
call
pop
ins
pop
push
aaa
inc
sbb
lea
xor
dec
das
test
pop
mov
adc
sbb
mov
outs
scas
and
sub
in
inc
leave
cwde
or
(bad)
sub
pop
push
fiadd
repnz
jge
imul
jmp
mov
xchg
les
and
mov
retf
sub
pop
jo
mov
int
mov
bswap
movs
out
sbb
mov
ss
cmp
shr
xchg
add
in
sbb
(bad)
cmp
xchg
les
add
test
inc
push
add
sub
jb
leave
push
and
add
jmp
sbb
or
fadd
xchg
xor
add
dec
adc
das
imul
push
or
add
pop
ss
lods
mov
idiv
push
add
repz
shl
xor
xchg
outs
push
add
mov
dec
xor
test
push
push
jnp
sbb
mov
mov
cwde
or
mov
jmp
push
mul
or
cmp
clc
inc
jb
test
je
mov
mov
xor
in
sub
and
cld
iret
push
and
adc
and
dec
in
(bad)
jle
add
or
jbe
cmp
and
adc
xchg
xchg
sub
out
ror
dec
add
fmul
retf
mov
inc
leave
sahf
xor
ins
outs
sbb
push
sete
adc
cmc
pop
sbb
ins
cmp
and
add
in
add
nop
gs
aaa
xchg
cmp
inc
call
and
add
sbb
mov
adc
fistp
mov
jne
or
loop
push
xor
mov
adc
push
add
inc
push
cmp
cmp
leave
xchg
pop
jb
in
pusha
mov
loopne
xchg
inc
adc
cmp
or
xchg
test
je
adc
add
lahf
test
imul
push
push
test
test
add
bound
pop
out
outs
jmp
jno
add
icebp
jne
sub
loopne
push
push
add
cmp
and
mov
(bad)
pop
xchg
sbb
inc
adc
scas
out
imul
xchg
add
or
mov
inc
and
in
test
mov
fsubr
add
mov
or
daa
in
push
ret
jl
inc
xchg
dec
in
mov
or
in
adc
xor
dec
jl
add
mov
inc
jo
or
lea
jae
adc
inc
sbb
test
or
xor
div
adc
pushf
(bad)
pop
add
rol
jbe
xor
sub
and
dec
sub
adc
cmc
xchg
lods
addr16
mov
inc
cmp
mov
adc
sahf
pusha
mov
xchg
mov
popa
outs
test
jae
popf
cmp
pop
in
jo
pop
xchg
lahf
push
inc
inc
pop
add
ret
add
and
cmps
sbb
outs
pop
pusha
pop
inc
les
imul
or
dec
jg
push
lahf
cmp
mov
adc
jg
arpl
ret
jl
inc
add
jle
retf
imul
rcl
add
mov
adc
stc
ins
mov
add
js
adc
or
dec
popf
add
(bad)
pop
and
pop
dec
lods
pusha
int
scas
sub
mov
ins
fnstenv
ret
in
es
mov
push
pop
add
jmp
add
xor
xor
scas
call
push
mov
xlat
mov
sub
xor
push
cmp
dec
sub
or
ret
inc
mov
out
jmp
xor
cmps
lds
and
movs
inc
(bad)
fcmovu
jle
cmp
ret
push
or
inc
push
add
pop
and
push
or
dec
add
add
and
add
xor
jge
or
das
xor
rcr
or
(bad)
pop
inc
dec
imul
mov
rol
inc
jbe
push
rcr
add
cwde
and
pusha
push
mov
adc
mov
repz
(bad)
ins
inc
test
addr16
push
cmps
jns
shl
push
and
pop
inc
dec
xchg
int3
and
scas
add
cwde
or
ror
(bad)
pop
add
xchg
xchg
and
popa
dec
repz
sbb
or
add
push
imul
or
cs
repnz
inc
sub
int3
xor
or
ss
mov
lods
ror
add
jbe
xchg
aam
mov
add
xor
push
stos
ret
xor
mov
adc
test
sub
cld
sub
push
xchg
push
add
movs
movs
mov
push
cdq
or
outs
push
gs
imul
add
inc
add
or
dec
pop
rcl
and
imul
push
mov
popa
inc
gs
shl
cdq
cmp
mov
xchg
mov
inc
cmps
sub
jmp
or
test
xchg
mov
test
fadd
add
sbb
movs
int3
and
mov
ret
and
pop
loopne
add
xchg
ss
loopne
sub
sbb
xchg
add
xchg
stc
je
jbe
push
in
add
adc
cmp
cmp
adc
inc
add
add
leave
lahf
nop
les
(bad)
fcom
out
lods
add
and
pop
popa
jno
cs
fsubr
iret
adc
ret
aaa
ror
pop
xor
lea
mov
adc
push
js
push
add
fdiv
xchg
gs
mov
or
or
push
push
int
mov
fidiv
test
pusha
je
jge
xchg
jo
pop
sbb
inc
and
sbb
or
inc
test
loopne
dec
mov
loope
lods
add
pusha
test
dec
movs
add
iret
pusha
or
hlt
rcr
clc
cwde
push
dec
mov
stos
or
jmp
push
sub
iret
adc
sahf
lods
xchg
sub
add
mov
pop
mov
add
push
mov
push
stc
xor
ror
or
scas
ret
xor
push
outs
inc
mov
jmp
pop
or
mov
or
int3
push
test
add
rcl
sbb
aas
sub
and
add
adc
xor
in
inc
lods
jbe
sub
push
js
add
pop
pop
mov
xchg
pusha
push
xchg
add
out
adc
nop
dec
or
pop
cmp
ror
add
xchg
shr
pop
xor
adc
adc
dec
mov
call
in
cmp
or
and
cli
push
mov
fisttp
xchg
inc
scas
and
fisub
push
jo
push
jl
out
xchg
je
sub
sub
nop
das
and
pusha
mov
dec
xchg
out
or
dec
sub
dec
ror
cmp
push
je
sbb
mov
test
xchg
or
(bad)
ja
(bad)
jp
mov
data16
enter
xchg
pop
scas
and
or
mov
xor
or
jb
adc
cmps
inc
or
adc
enter
mov
jnp
push
add
add
sbb
add
or
mov
fild
push
push
sbb
(bad)
adc
cmp
sbb
adc
pop
xchg
movs
pop
test
sbb
stos
(bad)
in
xor
inc
xlat
mov
and
pop
das
cmp
lods
mov
dec
rcl
dec
aaa
sbb
ror
push
adc
in
xchg
pop
sbb
add
and
out
or
dec
push
push
mov
xchg
inc
push
adc
ss
sbb
das
aas
call
add
sub
xor
ins
push
adc
push
adc
or
or
stos
add
cld
inc
adc
or
fstp
je
mov
pop
outs
test
call
xor
xlat
cmp
mov
(bad)
and
xor
xor
jmp
push
adc
xchg
push
sete
test
mov
pop
les
cdq
test
sbb
add
or
retw
fld
mov
data16
adc
inc
and
mov
xor
xchg
inc
aaa
cmp
je
int
retf
sub
and
mov
je
test
mov
pop
xchg
push
call
xchg
or
imul
imul
and
rcl
repz
movs
mov
adc
fild
scas
mov
es
pop
test
cmp
aad
dec
add
mov
cmp
mov
sbb
push
(bad)
push
rcl
sti
mov
xchg
jmp
mov
test
ss
mov
pop
inc
or
and
push
hlt
and
inc
cmps
sbb
mov
adc
sub
sar
mov
xor
aaa
pop
push
jnp
(bad)
inc
and
pusha
test
add
mov
add
inc
ficom
daa
cdq
mov
stos
movs
push
je
mov
pop
push
mov
pop
pop
xchg
adc
inc
pop
mov
xchg
pop
rcr
in
xchg
xor
mov
test
or
test
adc
mov
imul
add
nop
adc
mov
cwde
(bad)
jmp
in
sbb
shl
js
mov
enter
arpl
daa
lock
push
ret
scas
sbb
ret
mov
push
sub
cmp
inc
and
jg
xlat
adc
fwait
dec
and
test
dec
and
enter
jmp
(bad)
sbb
sub
and
adc
jmp
mov
iret
pop
inc
movs
sub
sahf
fmul
jp
and
and
jl
dec
jmp
and
sub
add
add
cmp
in
pushf
add
in
je
in
ins
cmp
adc
sbb
xor
add
jmp
and
ins
dec
sbb
lods
add
ret
pop
or
pop
adc
jmp
dec
outs
leave
rcl
repnz
sbb
pusha
xchg
add
mov
cld
mov
enter
push
addr16
inc
inc
adc
xchg
add
xor
outs
inc
shl
ss
and
ret
push
xchg
(bad)
lock
jns
push
xor
sbb
push
imul
jmp
cmp
xchg
sub
scas
or
pusha
(bad)
pop
pop
sbb
jno
push
push
push
inc
add
ficomp
inc
(bad)
push
and
cmps
(bad)
cwde
rol
in
mov
push
jle
push
shr
sub
(bad)
xlat
imul
mov
test
xor
ror
test
jge
mov
dec
arpl
adc
invd
pusha
dec
add
fidivr
mov
xchg
xchg
fsub
(bad)
xor
cmps
mov
neg
dec
or
out
mov
(bad)
lods
push
ss
addr16
popa
mov
xlat
cdq
pop
popa
dec
lods
les
mov
ja
jmp
pop
movs
test
loop
mov
nop
test
pusha
cvtpi2ps
je
mov
fdiv
mov
add
sub
and
dec
inc
pop
dec
popf
rcl
inc
or
dec
in
test
or
cdq
sbb
add
and
or
and
dec
push
or
dec
xor
pop
mov
sub
in
bound
inc
or
sbb
push
(bad)
mov
in
test
xor
add
enter
adc
mov
in
or
jmp
in
add
jbe
mov
mov
mov
or
jo
xlat
xlat
add
(bad)
adc
or
outs
or
movs
inc
inc
pop
in
or
les
sbb
(bad)
push
imul
out
lods
(bad)
pop
and
push
or
inc
mov
push
stc
and
xor
and
ins
cmp
out
cmp
ret
cwde
mov
mov
add
sbb
adc
mov
and
mov
clc
sbb
ss
sbb
adc
out
test
add
and
stc
sub
clc
sub
and
jnp
rdmsr
add
inc
sub
daa
lahf
imul
add
mov
stc
add
loop
mov
loop
mov
loope
xor
pop
pushf
jl
lock
gs
les
hlt
sub
xchg
mov
mov
inc
lds
mov
pop
and
push
pusha
loopne
add
add
dec
cwde
sbb
xchg
cld
xchg
mov
and
push
inc
push
mov
inc
aam
scas
sbb
rcl
movs
movs
xor
push
clc
pop
or
nop
push
add
pop
add
add
nop
mov
push
test
or
mov
add
call
imul
retf
sar
dec
pop
push
loope
loopne
lods
jmp
imul
jmp
jmp
jmp
jmp
neg
in
push
adc
inc
mov
mov
jnp
lods
lods
push
loopne
add
shl
inc
jl
pop
test
je
sub
data16
shl
xchg
loopne
pop
push
push
int
jae
pop
outs
adc
xor
int
(bad)
xor
and
mov
rcl
ins
shl
aam
ss
fsubr
imul
dec
jg
add
push
push
shl
or
cmps
pop
and
cli
arpl
loopne
inc
or
push
addr16
dec
mov
xchg
add
jg
fld
dec
sub
movs
movs
and
add
jecxz
or
jge
adc
daa
adc
jle
pop
or
add
or
dec
aam
jge
sbb
ss
es
sti
add
cmp
or
push
add
add
or
popa
aaa
or
or
je
push
add
mov
shrd
pop
xchg
nop
clc
stos
int3
xor
cmp
adc
xchg
sbb
addr16
push
add
or
(bad)
jbe
pop
shl
jnp
and
jne
int
pop
sti
mov
sub
or
and
shl
pop
inc
xchg
mov
rol
or
enter
nop
or
pop
inc
cmp
les
sti
pop
mov
xor
push
pop
adc
popa
fmul
push
pushf
test
xor
fadd
xchg
sub
sub
and
in
enter
xor
fadd
bound
dec
sub
adc
sbb
dec
das
call
ins
xchg
dec
loopne
and
xchg
bound
cdq
call
xchg
gs
sbb
hlt
and
in
and
cdq
lock
mov
call
xor
pop
dec
inc
adc
mov
mov
and
cdq
jmp
xchg
rcr
ret
in
jne
jge
mov
enter
clc
arpl
push
adc
dec
jge
cmp
mov
sub
mov
jp
inc
mov
push
das
cmp
inc
mov
push
rol
clc
ds
cmp
(bad)
jno
push
outs
scas
and
repz
pop
mov
pusha
test
xchg
push
xchg
add
popa
inc
or
xor
imul
push
jae
ror
rol
adc
test
inc
enter
xchg
push
mov
fisubr
ret
adc
sti
add
lea
ins
retf
push
ja
sbb
ret
sub
fld
dec
mov
sub
retf
cmp
and
mov
sbb
cmp
sbb
cmp
jne
inc
dec
jne
movs
out
pop
pop
jmp
cmp
fisttp
dec
pop
rol
jbe
and
aam
enter
mov
mov
mov
or
aaa
hlt
and
daa
add
sbb
add
add
int
dec
xchg
imul
aas
ins
jg
mov
xor
or
pop
xchg
or
sbb
dec
xchg
push
mov
cmp
adc
mov
jno
mov
mov
dec
or
mov
push
mov
xchg
mov
sbb
push
mov
inc
adc
cld
fisub
push
mov
fadd
dec
or
gs
xor
jmp
mov
daa
ja
test
pop
push
rol
int3
add
push
push
rcr
test
sbb
xor
jg
inc
mov
icebp
dec
push
data16
push
xlat
outs
pusha
push
rcr
pop
(bad)
sahf
push
test
adc
jmp
cli
xor
pop
add
les
ss
mov
aam
push
mov
ret
scas
lods
xchg
scas
inc
inc
sub
adc
lods
enter
and
inc
cmp
cld
out
xchg
or
sbb
xchg
nop
ror
sahf
adc
je
add
sbb
std
dec
sbb
adc
dec
pop
adc
adc
clc
sub
mov
je
pop
cs
nop
outs
in
push
inc
pop
and
jno
jbe
pop
pop
mov
div
sub
cwde
dec
lock
push
add
outs
shl
test
mov
lods
(bad)
ins
in
fimul
xor
je
pop
rol
in
imul
ins
mov
(bad)
xchg
and
push
and
or
cmp
je
pop
jmp
adc
cld
pop
js
jne
jne
sub
mul
mov
and
repnz
(bad)
js
push
pop
fadd
mov
lds
rcr
pop
inc
int
push
(bad)
(bad)
pop
sbb
and
ror
loope
daa
inc
mov
and
std
aas
mov
add
sub
jae
mov
xor
sbb
mov
ret
jmp
cmp
jl
outs
cmps
imul
test
or
lock
inc
or
sub
movs
mov
pop
ror
or
push
imul
out
cmp
or
cmp
sub
adc
jbe
pop
add
cmp
test
jmp
rcl
or
xchg
inc
mov
xchg
data16
pop
pop
add
imul
pop
ja
cli
ins
mov
ds
push
aad
adc
mov
lock
sahf
int3
add
lahf
std
lea
mov
cmp
jae
mov
mov
dec
inc
mov
jo
pop
adc
lock
arpl
mov
dec
xchg
adc
inc
mov
sub
xor
test
test
iret
push
mov
dec
xor
mov
or
pop
ror
enter
fiadd
rcl
jp
add
lock
mov
mov
(bad)
jmp
nop
xor
outs
arpl
cmp
daa
gs
xchg
push
mov
cmc
push
mov
ins
sub
das
cs
mov
jecxz
outs
push
push
lods
movs
clc
cmp
test
popa
or
mov
xor
inc
mov
dec
(bad)
inc
cmp
mov
add
dec
sbb
and
inc
(bad)
mov
js
push
and
popa
inc
ret
sub
sub
aam
pushf
mov
jge
aam
sub
xchg
addr16
lods
mov
xor
xor
cmc
push
test
dec
repnz
or
fmul
xchg
bound
push
mov
or
int
nop
xchg
cwde
(bad)
mov
aaa
xchg
adc
sbb
cmps
inc
cdq
dec
sbb
adc
int3
outs
cmp
cmp
mov
mov
mov
sbb
add
xchg
push
imul
dec
mov
inc
cmp
dec
jecxz
push
mov
pushf
(bad)
retf
push
add
jnp
adc
stos
cwde
push
sbb
call
sbb
push
in
jmp
add
call
dec
sahf
jo
jl
or
retf
nop
adc
add
test
add
ret
add
ret
add
aaa
mov
add
dec
add
adc
add
xchg
int3
ds
sub
jge
xor
mov
aas
adc
push
cld
dec
mov
push
sub
jl
and
mov
add
je
cmp
or
cld
imul
pusha
je
push
and
mov
out
mov
fsubr
push
and
push
or
add
and
shl
sbb
add
mov
movs
mov
(bad)
sti
retf
lds
cwde
shl
jnp
jecxz
dec
sbb
add
jo
dec
adc
sbb
ja
dec
cmp
js
inc
shl
cmp
and
daa
adc
push
adc
sbb
neg
outs
cmp
mov
cmp
cli
push
lock
pop
aaa
jle
cs
inc
(bad)
jne
mov
cmp
xchg
cmps
fnsave
lock
mov
xchg
xor
adc
ins
inc
pusha
test
xchg
dec
mov
jne
add
ret
inc
test
loopne
lea
xor
adc
cmp
mov
or
out
adc
dec
hlt
scas
dec
sbb
adc
push
clc
adc
ja
shl
rcr
or
inc
and
int3
or
dec
loopne
lahf
(bad)
and
and
ja
xor
add
lock
scas
iret
test
into
fistp
cmc
push
mov
add
push
pop
jg
jo
repz
sub
pop
pop
push
xor
ss
(bad)
dec
les
mov
inc
(bad)
cmp
dec
pop
adc
sub
sbb
dec
std
adc
cs
ret
sub
push
sub
push
ret
sahf
cmp
add
and
addr16
pop
jl
mov
iret
push
mov
push
imul
jbe
push
aaa
lea
add
lds
mov
sbb
or
mov
neg
or
xchg
lock
push
pop
xchg
test
push
and
ds
(bad)
ins
fs
ds
cmp
xchg
fstp
adc
pop
aam
sbb
xor
lahf
pop
pop
pop
and
jecxz
adc
xor
cmp
pop
xchg
nop
or
push
push
das
dec
fst
push
pop
lds
mov
inc
jae
in
xor
adc
int
and
cmp
inc
dec
in
in
jo
jo
sbb
and
test
jae
xor
daa
or
ja
mov
pop
sub
(bad)
push
pop
sbb
(bad)
and
imul
and
and
(bad)
cmp
xchg
adc
rcr
out
add
mov
jle
ret
pop
add
cmp
jmp
sbb
loopne
inc
push
inc
xor
rol
xor
xchg
movs
push
pusha
xor
mov
popf
nop
mov
loopne
jb
push
adc
jae
or
dec
push
sub
pop
test
cmp
inc
nop
nop
dec
movs
(bad)
sub
(bad)
mov
push
adc
shl
seto
xchg
fs
fild
shr
cmp
cmp
imul
and
xchg
data16
cmc
sbb
ins
(bad)
cmovno
and
sbb
pop
jl
mov
add
hlt
(bad)
fiadd
mov
sbb
fild
push
jbe
rep
pop
sbb
loop
and
pop
lods
loopne
loop
adc
and
add
loopne
xchg
outs
dec
jmp
in
movs
(bad)
loop
pop
ret
ror
outs
jmp
lock
add
jmp
mov
and
das
nop
test
mov
mov
or
xchg
mov
push
clc
mov
push
loopne
jle
mov
sbb
popa
das
mov
push
fdiv
(bad)
dec
outs
out
sti
ret
and
lahf
or
sub
adc
(bad)
clc
int
add
add
ds
jmp
pop
xchg
adc
mov
shr
add
add
inc
xchg
inc
mov
push
mov
inc
popa
das
sub
and
lock
(bad)
aam
adc
adc
out
sbb
test
add
or
mov
xor
enter
and
outs
scas
or
int3
shr
xor
xlat
out
shl
adc
in
clc
gs
in
inc
pop
add
and
sbb
jge
ins
fistp
in
jg
push
jg
mov
jle
vmovupd
sbb
adc
xor
mov
stos
dec
pop
push
add
xor
add
scas
xor
cs
push
sbb
sbb
pop
imul
retf
sbb
out
xlat
stos
daa
les
mov
das
and
shr
jmp
sub
and
push
shl
push
ret
inc
jp
dec
imul
add
adc
sahf
ja
call
xor
pop
xchg
xlat
sub
es
fist
cmp
imul
mov
rcl
sbb
outs
jb
or
and
inc
repz
or
sbb
clc
push
sbb
mov
and
fadd
cld
adc
cs
cmp
add
add
cdq
in
in
je
sub
in
sub
dec
jae
push
add
(bad)
cdq
or
test
inc
mov
ins
cmp
jo
ss
inc
sub
cmps
sub
lods
mov
aaa
data16
scas
xchg
xchg
dec
je
push
xchg
add
stos
aam
sub
arpl
add
mov
and
and
fdiv
std
pop
sbb
in
scas
mov
js
je
push
lea
lea
inc
sbb
outs
test
and
loopne
pop
retf
jmp
sub
or
mov
inc
ret
sub
fldcw
dec
mov
test
int3
loopne
test
mov
or
bound
popf
xor
adc
dec
aaa
sbb
dec
cmps
jmp
fninit
scas
arpl
fisttp
jmp
jecxz
outs
sbb
or
push
rol
fisttp
jge
jl
ins
cs
rcr
(bad)
ds
jge
xlat
dec
adc
or
add
addr16
dec
jnp
and
cmp
or
mov
je
inc
jo
stos
cmp
mov
cmp
bound
push
add
(bad)
pusha
jl
jg
cmp
call
or
inc
sub
sahf
cmp
nop
cmp
push
sub
mov
add
out
inc
cmp
pop
mov
rol
add
sbb
es
mov
(bad)
mov
jo
cmp
adc
jp
jns
and
sbb
loop
add
inc
cmps
mov
sbb
lea
mov
rcr
mov
mov
adc
sub
mov
mov
inc
fsub
dec
adc
xor
pop
imul
jbe
ret
or
enter
mov
ja
sub
pavgb
xchg
clc
jnp
inc
fs
push
sub
je
int3
test
add
xor
adc
push
mov
add
pop
cmp
inc
sub
in
jbe
sar
dec
or
fild
add
mov
(bad)
in
ins
imul
push
xchg
enter
mov
ret
ins
push
and
imul
mov
jno
lea
fwait
sbb
dec
cdq
popf
sbb
and
mov
inc
and
add
imul
pop
sbb
adc
jmp
add
jge
addr16
outs
mov
pop
and
pop
dec
adc
outs
pusha
inc
and
mov
maskmovq
idiv
inc
or
inc
clc
jo
push
ret
or
sub
sbb
pop
addr16
jb
sbb
pushf
push
(bad)
push
inc
cmps
nop
cmp
movs
dec
mov
sbb
xor
xor
and
lock
out
xchg
jo
add
jle
scas
and
retf
cmp
dec
pop
jmp
sbb
push
enter
push
pop
xor
enter
sbb
jmp
add
inc
or
and
push
dec
add
inc
xchg
loopne
fld
adc
rol
dec
fist
repz
aam
add
out
sbb
aaa
add
adc
(bad)
out
jnp
dec
push
add
add
add
jge
pop
or
pop
push
add
add
xlat
xchg
pop
inc
push
sti
dec
or
add
push
sbb
aam
pop
das
cmp
xor
fld
imul
mov
aad
fnsave
add
mov
pop
or
jmp
and
mov
xor
sbb
adc
push
or
in
inc
fimul
jbe
cld
jne
ja
dec
xchg
push
add
jno
mov
xor
mov
jmp
pop
mov
inc
clc
popw
(bad)
sbb
test
(bad)
repz
sbb
dec
sbb
mov
neg
dec
sbb
sbb
ins
and
mov
dec
ret
out
ret
cmp
data16
or
xchg
sub
and
pop
xchg
call
adc
xor
adc
push
movs
je
mov
ds
aam
pop
imul
xchg
dec
dec
inc
xchg
data16
adc
xchg
call
scas
shl
clc
repnz
jne
sbb
sbb
das
cmp
pop
in
xlat
push
sbb
sub
add
jp
or
(bad)
jle
mov
outs
dec
xchg
push
push
or
dec
inc
shl
jle
push
xor
mov
ss
xor
iret
sbb
xchg
push
dec
add
push
add
je
ins
cli
adc
jne
pop
fist
jno
(bad)
pop
pop
pop
fild
movs
or
jge
xchg
clc
ret
or
cmp
rcl
jl
sbb
repnz
inc
add
adc
cmp
jg
push
cwde
test
dec
lock
add
pop
add
mov
mov
sub
pop
cld
adc
adc
adc
jmp
add
pop
push
jo
inc
jne
leave
or
jne
and
(bad)
scas
sub
push
xor
adc
inc
push
popf
add
sti
int3
add
sbb
inc
pop
adc
add
sbb
or
and
adc
das
xor
mov
xor
sub
mov
push
jno
xchg
cmps
sub
or
aas
iret
xor
xor
jge
loopne
(bad)
cmp
or
cwde
adc
aad
or
enter
inc
fcomp
adc
hlt
cmp
xor
push
aaa
xor
sub
jo
jge
push
adc
pop
jmp
(bad)
and
imul
jl
adc
push
idiv
(bad)
adc
xor
xchg
test
test
inc
imul
xlat
jne
loop
int3
scas
jns
and
ins
xor
mov
push
and
(bad)
sar
mov
push
inc
fist
sbb
iret
lea
not
mov
ror
push
push
push
out
cmp
pop
inc
es
push
cmp
ror
add
dec
add
sbb
add
int3
mov
lods
sbb
shl
shl
fsub
mov
clc
pop
popa
mov
aas
fs
jae
mov
xchg
pop
xlat
cwde
or
mov
dec
fiadd
adc
mov
xchg
js
dec
sbb
(bad)
aam
ss
and
cmp
or
xchg
xor
mov
fcmove
xor
and
sub
dec
sbb
mov
and
sub
sub
clc
dec
xchg
out
mov
pushf
adc
jmp
cmp
mov
xchg
cli
adc
push
push
aam
mov
adc
or
dec
xchg
mov
mov
xor
iret
ds
or
dec
jmp
mov
outs
cwde
cmp
jo
jl
(bad)
enter
cmp
pop
sub
enter
or
bound
and
add
(bad)
les
nop
cdq
lods
dec
xchg
iret
iret
jmp
jnp
nop
fstp
test
mov
inc
outs
outs
cmp
cwde
cmp
dec
push
sub
and
push
hlt
mov
dec
cmp
pop
pop
ror
jb
xor
xchg
nop
rol
and
push
or
or
outs
arpl
inc
or
dec
sgdtd
in
mov
sbb
sub
outs
test
jl
and
or
jnp
push
cmc
fst
fisub
adc
mov
sbb
xor
mov
mov
pop
out
mov
xor
scas
dec
mov
adc
xchg
sbb
cmp
dec
mov
popf
add
jmp
les
imul
jbe
dec
push
mov
push
test
push
enter
ret
push
mov
pushf
xchg
mov
mov
add
mov
xchg
xor
jbe
xchg
xchg
push
or
mov
or
daa
lahf
fsubr
inc
push
retf
cmp
pop
ins
or
mov
xchg
dec
cmp
popa
push
adc
test
jnp
retf
loope
dec
and
xor
pop
jnp
repnz
into
imul
jns
xchg
inc
jg
sar
popa
and
push
add
les
and
sub
adc
jne
and
or
into
adc
in
popa
xor
mov
nop
leave
sbb
(bad)
lock
mov
out
push
call
inc
mov
pop
les
ret
push
sbb
or
out
jo
sbb
xchg
mov
xor
icebp
(bad)
jg
push
and
adc
pop
xor
not
jbe
or
adc
lahf
add
out
xchg
and
ret
push
clc
stos
add
movs
and
and
or
loop
push
pop
mov
mov
and
push
call
shr
lods
pop
cmp
inc
retf
adc
cwde
adc
lock
fisub
inc
sbb
dec
retf
sbb
and
and
pop
adc
xchg
add
inc
test
or
add
add
fs
ret
aam
enter
mov
stc
add
adc
sbb
push
mov
retf
dec
ins
jnp
clc
cmps
rol
add
inc
inc
cwde
inc
xor
popf
jge
(bad)
jl
dec
lock
test
add
mov
fwait
jge
cld
sub
add
or
ins
(bad)
push
mov
call
popf
mov
inc
xor
ss
lea
jp
(bad)
cmps
ror
sbb
aaa
and
lock
(bad)
pop
cmp
sbb
sbb
pop
sbb
sbb
sub
adc
dec
test
or
cmc
dec
scas
jo
cmp
sub
out
mov
pushf
mov
adc
loopne
sub
jecxz
cmp
pop
and
adc
sub
mov
and
popa
adc
adc
jae
jne
cmp
or
inc
hlt
jmp
out
pop
lea
dec
(bad)
mov
adc
sub
movs
cmp
out
pop
dec
outs
(bad)
mov
cdq
cwd
adc
mov
add
inc
mov
sbb
neg
adc
pop
loopne
push
push
rcl
ja
call
pop
ja
cmps
imul
stc
or
daa
shl
mov
sbb
add
imul
sub
and
pusha
and
sub
test
inc
test
jno
ss
or
aaa
push
mov
(bad)
loopne
pop
push
pop
pushf
pop
(bad)
push
daa
pusha
sbb
out
xor
xlat
jmp
ins
push
mov
pop
cmps
jmp
and
or
push
jmp
addr16
repnz
pusha
cmp
and
sbb
dec
mov
sbb
sbb
js
fwait
rcl
add
push
inc
push
arpl
xor
or
(bad)
ret
cmp
js
and
imul
push
sub
add
xor
pop
adc
enter
sbb
jno
loop
jne
or
sub
push
in
and
clc
or
cmp
ret
cmp
add
sub
or
fwait
gs
ja
adc
mov
in
dec
rol
dec
add
aam
adc
popa
icebp
inc
fcmovnu
and
fwait
adc
mov
push
xor
adc
fisttp
pop
loope
xor
xor
xor
imul
out
sbb
sahf
add
mov
jno
rcr
rcr
xor
cld
loopne
pusha
mov
cld
je
pop
in
mov
dec
sbb
in
cwde
push
sbb
pop
cmp
mov
inc
int3
dec
push
jb
add
sbb
scas
mov
nop
movs
xor
sub
data16
add
icebp
xor
cmp
fld
clc
add
hlt
pop
cmp
aaa
cmp
jge
xchg
jge
xor
and
and
sbb
add
sbb
je
pop
cwde
ss
nop
sub
cmp
pop
hlt
jge
inc
add
popa
rol
mov
daa
popf
loope
push
in
add
aaa
cmp
cmp
mov
xchg
xchg
cmp
ds
sbb
sbb
std
inc
pop
dec
add
(bad)
dec
je
mov
add
and
adc
jle
push
(bad)
shr
fsubr
std
jg
cmp
jl
push
push
add
or
and
or
iret
sbb
or
inc
xchg
aaa
ds
fs
adc
adc
bound
cmp
xchg
mov
jmp
sub
mov
jge
or
push
push
je
shl
cmp
call
jl
xchg
and
mov
fdivr
in
mov
loopne
gs
loopne
mov
les
fisubr
es
in
xor
int
clc
and
and
gs
not
pop
mov
fld
jg
test
in
mov
loop
fld
jecxz
pusha
ret
outs
aas
jo
or
push
movs
mov
fwait
pop
fwait
ins
pop
mov
mov
add
ins
ror
mov
popf
inc
jmp
in
add
jmp
fldcw
pop
mov
adc
lea
pusha
(bad)
xchg
or
adc
mov
jecxz
or
push
add
fs
push
fild
adc
aaa
adc
mov
les
mov
sub
lods
mov
sbb
sub
dec
test
popf
cmp
jmp
jns
jbe
cmp
repnz
test
jmp
in
jbe
in
je
sub
mov
pusha
iret
pop
dec
neg
dec
jo
sbb
adc
push
adc
fiadd
sub
cs
fimul
(bad)
es
mov
test
jg
mov
sbb
xor
or
xlat
jecxz
dec
or
add
fimul
and
xchg
mov
or
mov
push
mov
mov
cwde
xor
dec
pop
lods
leave
mov
pushf
pusha
pop
in
outs
add
iret
cdq
pop
push
(bad)
jno
add
or
stos
push
xor
xor
sub
inc
bound
cmp
pop
jge
das
add
xchg
sub
lea
add
push
mov
aas
sbb
test
mov
les
jmp
sbb
es
sub
cmp
adc
ficom
cmp
adc
int
shl
cwde
out
push
cmps
push
and
(bad)
sbb
mov
mov
push
cmp
inc
or
imul
not
xchg
shl
push
loop
push
dec
xor
(bad)
or
dec
fld
popa
les
dec
sbb
lods
pop
call
int3
shr
push
(bad)
in
push
mov
pop
loope
cmp
sub
adc
ins
push
es
pop
sbb
inc
fidivr
add
fadd
xchg
push
pop
or
mov
push
movs
push
out
add
sbb
ins
and
or
movs
jge
or
test
or
fld
iret
dec
add
jns
js
cmp
mov
xor
js
in
inc
popf
popa
mov
jg
xchg
sbb
pop
aas
add
xor
enter
cmp
pop
fwait
inc
xor
cmp
mov
dec
add
ja
or
rcr
aad
aas
sbb
test
dec
cmp
ins
or
stos
add
fcom
push
das
stos
pop
js
xor
adc
fucomp
or
mov
adc
aam
dec
movs
jo
bound
xchg
cwde
(bad)
adc
mov
call
adc
mov
nop
or
xchg
inc
aas
adc
adc
push
nop
xlat
adc
jle
adc
fild
or
jle
or
add
jle
lods
xchg
retf
push
cld
pop
xchg
pusha
lods
push
cwde
mov
mov
xchg
jl
(bad)
jno
push
aad
and
jbe
sbb
fild
adc
bound
jne
fadd
xor
xor
(bad)
movs
aad
jge
adc
mov
lea
mov
jmpw
push
or
push
mov
mov
cmp
cmp
inc
pop
mov
test
push
push
stos
xor
(bad)
outs
xchg
xchg
out
dec
sbb
cmps
add
mov
inc
and
lahf
out
xor
and
push
fisub
mov
lods
xor
int
add
movups
imul
rcl
(bad)
mov
rcr
push
adc
fs
test
jb
mov
aaa
cmp
popa
and
jno
xchg
push
pop
xchg
fcom
mov
sbb
stos
daa
push
rol
mov
pop
xor
das
adc
enter
adc
out
mov
pop
or
fnstenv
and
jo
sub
cmp
inc
call
es
adc
les
sbb
jae
xor
fistp
mov
pushf
sub
mov
add
nop
inc
data16
cwde
mov
loopne
aad
fs
xchg
xchg
daa
(bad)
jg
adc
cmp
fistp
mov
jmp
cmp
adc
js
adc
clc
repnz
jo
or
push
popf
add
es
mov
xchg
rcr
jge
mov
pop
jge
jle
push
mov
mov
mov
test
movs
push
cmp
mov
sbb
dec
pop
mov
mov
push
xor
inc
xchg
add
out
pop
fimul
rcr
mov
add
imul
push
lods
push
(bad)
dec
mov
pop
aaa
inc
aad
push
xchg
cwde
imul
sub
xchg
inc
mov
add
add
and
mov
adc
cmp
sbb
es
movs
push
lods
pop
out
pop
movs
fdivr
pop
lock
and
or
sar
or
xor
rcl
adc
mov
sub
es
dec
mov
push
adc
inc
push
jns
test
jb
mov
jo
in
push
xchg
or
popa
in
sub
inc
rcl
sbb
ins
push
xchg
sbb
ret
adc
ins
and
inc
inc
cmp
stc
jb
loopne
adc
lahf
sbb
jle
popa
(bad)
div
test
cwde
jp
or
mov
jmp
dec
xchg
adc
push
cmp
jns
inc
dec
jg
retf
scas
test
jbe
push
adc
sub
sub
cmp
mov
ds
mov
or
mov
test
idiv
mov
adc
sbb
jne
mov
loopne
push
ins
push
xchg
test
fs
ins
pop
je
fsubr
std
pop
sbb
rcl
jns
shl
pusha
xor
je
sub
leave
add
sub
dec
sbb
add
je
add
dec
sub
out
jge
ja
push
mov
mov
or
pop
fimul
push
dec
cmp
pop
dec
and
sbb
or
test
in
sbb
sub
lea
inc
out
mov
or
inc
jecxz
or
imul
rcl
fisubr
rcr
icebp
xor
pop
dec
inc
xchg
push
inc
xor
or
repz
mov
add
push
imul
(bad)
leave
push
inc
mov
fistp
mov
(bad)
mov
fst
in
pop
add
addr16
shr
or
int
lods
adc
or
lock
mov
loop
dec
fisttp
jne
dec
(bad)
mov
xchg
ja
and
fcom
jmp
sub
jmp
or
push
or
sub
sbb
jnp
push
dec
push
adc
add
add
dec
outs
call
adc
dec
xchg
addr16
ins
enter
xchg
adc
popa
adc
xor
icebp
iret
dec
add
cwde
retf
ret
ret
or
jns
mov
sbb
xor
test
cmc
pusha
mov
nop
push
mov
aad
icebp
mov
and
test
aad
add
cmps
shl
mov
inc
jg
jg
inc
mov
pusha
mov
and
outs
sub
aaa
adc
mov
push
js
iret
mov
xchg
es
lea
or
and
mov
js
icebp
test
inc
sub
adc
in
xor
pop
adc
and
adc
movs
push
pop
add
or
xor
push
push
jae
addr16
xor
in
pop
sbb
sar
retf
retf
push
jbe
popa
or
xlat
pop
mov
pop
mov
adc
adc
fisttp
sbb
cmp
adc
retf
push
lea
les
std
lea
bound
pop
xor
scas
clc
push
dec
cmp
pop
bt
xor
test
(bad)
mov
push
pop
(bad)
xor
mov
popa
mov
or
aam
cmps
mov
and
cmp
xchg
int3
push
sbb
inc
ja
mov
dec
sub
jl
inc
inc
inc
aaa
xor
dec
jmp
push
gs
jne
popf
xlat
add
sbb
jb
xchg
and
ret
cmp
sbb
inc
sbb
(bad)
fisub
push
mov
jno
mov
cmp
pop
dec
mov
xchg
mov
adc
imul
cwde
xchg
pop
mov
adc
inc
adc
cmp
psraw
add
and
xor
fnsave
and
xchg
nop
lahf
mov
jb
popf
cmp
sbb
imul
sbb
nop
sbb
xor
or
push
push
aaa
xchg
push
add
mov
inc
sar
test
lahf
mov
(bad)
fwait
sbb
adc
jo
popa
jnp
sub
sbb
frstor
jg
das
or
sti
jmp
push
mov
popf
idiv
jnp
and
sbb
or
nop
xor
scas
or
adc
test
loop
sbb
pop
unpcklps
inc
mov
jl
das
sti
mov
xor
outs
daa
nop
out
or
(bad)
test
test
lea
and
shl
shr
outs
xchg
and
mov
dec
and
mov
jno
mov
cwde
mov
out
fisttp
pusha
jmp
jl
movs
jae
xor
cdq
in
iret
aas
push
dec
xor
out
inc
inc
das
into
xor
(bad)
(bad)
sbb
and
pusha
ins
popa
or
lahf
mov
adc
inc
sub
add
inc
adc
leave
(bad)
nop
sbb
movs
ret
push
jae
dec
arpl
jmp
or
adc
mov
xlat
and
adc
cmp
ret
cmps
dec
cmp
dec
(bad)
jne
mov
sub
pop
jno
sub
mov
xor
and
cld
jecxz
xor
cld
addr16
mov
jnp
sar
inc
or
out
enter
push
and
mov
(bad)
xchg
ret
pop
cmp
dec
mov
loopne
and
dec
or
in
fidiv
push
sub
movs
mov
pushf
mov
jbe
adc
je
call
push
imul
mov
in
or
or
dec
pop
add
das
je
xchg
dec
mov
repnz
test
(bad)
push
shl
retf
shr
jno
ret
sbb
test
das
jbe
sub
mov
imul
loop
adc
outs
dec
inc
pop
neg
leave
push
and
(bad)
fbstp
xor
(bad)
push
inc
and
in
outs
pop
xor
and
adc
lods
div
adc
push
mov
cdq
stos
xchg
xor
dec
jmp
push
in
cmp
jb
push
pop
inc
pop
je
pop
repnz
xor
push
leave
and
dec
adc
pop
push
push
aam
and
je
(bad)
movs
aaa
jns
cmp
andps
push
dec
(bad)
mov
xor
cdq
test
mov
retf
dec
cmp
fisttp
sbb
xchg
xor
shl
push
add
mov
sub
and
mov
addr16
pusha
lea
ret
jmp
dec
pop
ss
or
jne
call
push
ret
mov
jecxz
cmp
xchg
sbb
mov
and
dec
imul
xchg
mov
sub
xchg
jb
test
sub
or
je
sub
mov
mov
mov
dec
xor
stos
rol
xchg
sbb
sbb
lds
mov
mov
cs
adc
aam
xchg
jl
lock
lods
rcl
mov
jge
push
ins
sbb
sub
adc
mov
daa
add
punpckhwd
scas
(bad)
loopne
or
xchg
loop
pop
push
(bad)
fs
mov
sbb
inc
mov
push
fndisi(8087
sub
lods
cwde
mov
and
and
sahf
sub
dec
dec
or
icebp
pop
leave
adc
push
test
inc
jo
push
cmp
jae
mov
js
add
adc
ret
mov
out
sbb
mov
xchg
pop
mov
inc
adc
sbb
add
cwde
in
int
in
rcl
pop
imul
xor
in
xchg
sbb
and
pop
push
sub
shl
adc
add
in
jb
cli
fadd
or
mov
xchg
mov
mov
enter
or
movs
jp
jmp
icebp
sbb
mov
fadd
xor
adc
repnz
or
dec
pop
ret
lods
push
int
xchg
daa
jmp
xor
sub
or
mov
or
repz
push
and
les
test
sub
stc
ins
mov
ror
jb
mov
outs
test
das
mov
movs
outs
mov
scas
inc
jmp
jmp
or
sbb
jge
adc
jmp
xor
add
adc
and
adc
and
pop
cmp
imul
gs
dec
push
hlt
movs
cmc
mov
out
inc
add
bound
push
or
sub
test
les
cmp
fwait
add
movs
sbb
sahf
dec
dec
imul
mov
shl
cmp
dec
pusha
adc
inc
xchg
mov
rcl
dec
sbb
test
cmps
adc
outs
outs
loop
mov
je
fmulp
imul
sub
adc
call
nop
mov
cmp
jnp
in
ror
and
adc
and
test
sbb
adc
fwait
mov
sahf
lea
add
push
sub
pop
jo
jo
jne
xor
out
jo
dec
dec
add
and
jmp
sub
xchg
in
adc
sub
push
leave
test
jno
dec
inc
add
xor
sub
mov
jge
ss
jle
adc
retfw
arpl
sub
sub
or
inc
in
fld
mov
popa
add
mov
mov
inc
or
jle
or
stos
popf
inc
inc
jmp
js
bound
xchg
push
movs
sti
sbb
xchg
jns
out
retf
enter
nop
xchg
sub
xor
leave
ret
and
push
lods
mov
or
outs
xchg
mov
sub
call
jl
movs
movs
lock
bound
mov
cwde
xchg
mov
call
test
push
xchg
rol
xor
push
mov
leave
pop
sub
mov
add
ss
pop
xlat
out
cmp
imul
jl
mov
pop
pop
retf
inc
inc
lods
xor
lods
cs
sbb
sub
push
inc
dec
loopne
xchg
inc
test
add
stos
and
mov
andps
jae
imul
add
scas
movs
ss
inc
rol
or
outs
loopne
sbb
popf
push
int3
jo
inc
jle
test
push
xchg
je
add
mov
je
pop
inc
jns
sbb
or
rcl
ins
jnp
imul
adc
xor
sbb
xor
xchg
push
ins
aas
mov
loopne
sbb
arpl
adc
ja
test
jb
movs
push
adc
jae
mov
dec
fdivr
or
(bad)
jmp
inc
push
inc
xor
sar
and
or
call
(bad)
fild
outs
jae
es
stc
xchg
mov
jno
(bad)
mov
or
or
inc
ins
sub
or
data16
push
dec
jno
add
add
loopne
xchg
seto
mov
call
pop
dec
in
mov
or
cmp
sbb
ja
movs
jo
or
add
ret
inc
dec
pop
adc
or
xchg
xor
or
push
je
jbe
push
cmp
xchg
sub
cmps
js
pop
ins
aad
or
das
sar
adc
add
push
pushf
imul
push
and
ficomp
xlat
jno
into
or
mov
arpl
jo
and
dec
fisttp
and
xchg
jmp
jns
jae
gs
jb
add
sbb
inc
dec
mov
jo
js
imul
adc
int3
adc
add
(bad)
aad
mov
mov
adc
cld
pop
(bad)
nop
jb
fidivr
dec
icebp
sub
jmp
sub
mov
cmps
inc
xchg
ins
jbe
mov
xchg
dec
xor
and
dec
repnz
cmp
push
adc
mov
and
fisttp
or
jl
add
fimul
push
pop
add
aam
adc
sub
mov
add
adc
aam
inc
pop
mov
pop
add
mov
arpl
jmp
sbb
in
cld
lahf
inc
aaa
and
jmp
mov
jns
aam
mov
pop
cmps
add
je
add
mov
xor
loopne
pop
xchg
xor
jge
push
mov
jae
mov
lahf
int3
pusha
push
sbb
dec
sub
push
add
leave
ret
gs
mov
les
pop
pop
outs
adc
shl
sbb
xchg
add
pop
xor
fcmovnb
add
in
in
cmps
mov
sub
pop
ror
rcr
call
popa
outs
push
mov
push
push
mov
pushf
pop
bnd
add
add
test
add
add
aam
(bad)
cs
pop
add
pop
int
pop
nop
pop
daa
mov
adc
aam
inc
dec
mov
cmp
ins
mov
or
sbb
js
lock
movs
enter
imul
add
inc
and
add
pop
fcmove
push
or
lods
mov
or
mov
xor
fisubr
cmp
sub
iret
jno
jmp
cmp
cs
inc
add
sub
jnp
cmp
and
aad
pop
js
inc
arpl
shl
xchg
push
add
and
dec
add
add
sti
add
dec
jae
xor
pusha
mov
fcom
push
xchg
ret
sbb
fadd
fmul
ins
mov
push
out
ret
mov
fidivr
jp
aam
sbb
dec
pusha
mov
repz
pusha
(bad)
dec
icebp
je
push
push
add
pop
cmps
and
data16
push
sub
vmwrite
in
mov
retf
inc
mov
add
pop
retf
clts
mov
and
test
test
nop
pop
imul
outs
mov
cmp
adc
daa
pop
add
or
or
movs
jle
pop
and
sbb
mov
mov
leave
pushf
lfs
fcomp
adc
jle
int3
and
adc
mov
inc
sub
push
imul
push
xchg
or
jbe
push
clc
push
sub
movs
in
mov
push
push
mov
and
sbb
pop
(bad)
out
add
dec
fisubr
iret
mov
push
sti
cs
pop
mov
sub
je
mov
js
test
sbb
loope
sub
push
fadd
aam
es
push
loope
(bad)
aaa
sub
sbb
and
dec
pop
jnp
jge
imul
mov
xor
xchg
(bad)
ins
mov
and
jg
fiadd
pop
ins
ins
ror
push
sub
jg
push
cwde
loopne
mov
jecxz
call
out
lods
popf
cmp
and
push
ss
loopne
call
jle
or
add
pop
cmp
and
inc
adc
jg
add
xor
bound
or
sbb
ror
pop
in
sbb
mov
pop
retf
xchg
retf
xchg
clc
sub
lods
cli
pusha
std
adc
outs
daa
xchg
(bad)
push
(bad)
mov
fadd
inc
dec
cli
mov
or
call
or
mov
out
fild
sbb
pop
aam
mov
shl
mov
xor
cmp
sbb
or
xchg
idiv
lods
pusha
add
lock
call
jbe
retf
mov
jns
xchg
sbb
xchg
(bad)
mov
mov
pop
in
push
pop
es
sbb
sub
pop
push
xchg
outs
add
or
or
repz
sbb
xchg
push
add
pusha
cmp
sbb
les
add
xchg
mov
shl
sti
movs
xchg
(bad)
sub
xchg
push
or
aaa
(bad)
inc
ror
rol
xor
inc
dec
jge
inc
(bad)
jne
aaa
mov
inc
sbb
or
aaa
pusha
dec
mov
adc
lds
push
clc
test
sbb
and
pop
inc
cld
nop
xor
mov
inc
add
jns
sub
sbb
jne
(bad)
or
sti
je
dec
jne
add
and
or
adc
in
push
or
lock
push
call
push
and
adc
(bad)
lea
shl
cwde
add
pop
cmp
xor
pop
pop
xchg
sub
xchg
cwd
and
leave
scas
pop
dec
sub
scas
xchg
mov
jl
(bad)
lock
add
pop
sub
dec
or
test
pop
rcr
mov
adc
mov
lea
and
adc
adc
sbb
(bad)
jmp
inc
add
or
ret
sub
dec
jo
and
inc
inc
xchg
inc
fidiv
inc
xchg
add
mov
pop
imul
xchg
test
dec
xchg
pop
xchg
ss
int
in
mov
jmp
cs
sbb
xchg
imul
jle
aad
or
cdq
mov
sbb
(bad)
sbb
pop
jp
repz
xor
mov
cmp
lock
test
(bad)
xchg
xor
frstor
xchg
and
or
add
add
sub
or
inc
frstor
push
mov
test
data16
mov
adc
mov
mov
test
push
adc
pop
cld
push
push
mov
js
push
push
jo
sub
and
sbb
ins
ds
std
mov
outs
pop
pusha
sub
gs
ss
pusha
pop
dec
ins
dec
pop
rol
popa
jbe
add
dec
xchg
cmp
jo
inc
fadd
cmp
gs
ins
pop
aaa
addr16
nop
and
lods
adc
add
add
gs
dec
and
(bad)
or
lahf
jne
or
arpl
imul
jno
popa
mov
ss
or
ins
pop
in
cmp
xchg
push
imul
and
xor
or
dec
addr16
push
sbb
cwde
mov
nop
pop
inc
mov
pxor
jo
push
pop
imul
sbb
add
or
(bad)
lds
addr16
pop
retf
jle
das
inc
je
inc
push
xchg
fadd
mov
or
ret
daa
xchg
fld
sub
pop
sub
xlat
sub
daa
pop
in
sub
daa
jne
sbb
jb
bound
outs
popa
inc
pop
or
push
adc
mulps
add
xlat
adc
mov
sub
or
adc
xchg
shr
mov
inc
imul
arpl
push
aaa
sub
mov
and
bswap
or
mov
shr
lahf
shl
sub
push
aas
lds
jmp
inc
xor
shl
fsub
inc
das
cmp
mov
es
aam
or
bound
and
(bad)
and
fisub
adc
inc
push
mov
cdq
add
rol
xor
inc
or
in
test
mov
pop
pop
inc
pop
or
inc
dec
push
dec
pop
inc
dec
inc
push
mov
shl
inc
push
add
dec
jnp
les
xor
not
dec
inc
dec
dec
arpl
jg
test
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
(bad)
mov
test
inc
inc
xor
xor
mov
out
adc
in
neg
inc
xor
inc
dec
adc
push
push
push
dec
sub
out
push
jnp
dec
lea
(bad)
cs
jnp
inc
das
inc
inc
inc
das
les
xchg
mov
mov
fisttp
pop
dec
pop
adc
popa
sub
push
push
push
inc
ins
add
sbb
push
mov
out
les
fbld
mov
nop
inc
dec
ins
mov
xchg
pop
test
sbb
mov
mov
or
or
repz
adc
jne
add
or
or
pop
mov
ret
test
cmp
sbb
and
mov
enter
inc
or
(bad)
ins
dec
cmp
sbb
push
pop
mov
pop
clc
jne
mov
or
or
mov
call
mov
je
or
or
jmp
mov
mov
test
dec
inc
ja
adc
xchg
sbb
add
test
and
sub
not
jecxz
gs
adc
push
push
mov
dec
cmps
das
ss
daa
test
pop
sbb
dec
cmp
inc
or
ss
fnsave
cmp
inc
and
cld
and
inc
inc
scas
and
jno
popa
inc
mov
psubd
jg
ret
or
xor
jbe
mov
jmp
clc
ret
idiv
push
sbb
jno
push
stos
or
(bad)
fbstp
add
and
mov
xor
jno
leave
fwait
sub
out
mov
ret
or
cmp
pop
sbb
je
sbb
jno
mov
add
int
xor
sahf
aam
ror
leave
enter
(bad)
dec
inc
out
add
sbb
xlat
(bad)
pop
adc
add
fwait
mov
mov
mov
mov
cmp
jnp
adc
fdiv
popa
pusha
jmp
jno
int
and
mov
inc
fiadd
pop
fcomp
stos
pusha
loopne
add
enter
dec
ror
jmp
fisttp
or
dec
adc
into
inc
es
pusha
pusha
loope
data16
adc
inc
pop
sub
into
mov
and
mov
daa
loop
repz
push
xchg
out
aam
(bad)
js
push
adc
mov
xor
popf
rcl
cdq
add
push
inc
push
pop
pop
outs
sub
sbb
jle
dec
add
call
lea
call
and
inc
adc
sub
sub
je
push
stos
mov
push
push
xor
cmp
push
mov
cdq
xor
or
xchg
fst
jp
push
sbb
add
gs
push
xor
cmp
sti
or
mov
xor
(bad)
mov
adc
xchg
sbb
test
pushf
mov
gs
pop
dec
inc
add
adc
in
aaa
jne
add
(bad)
jns
sbb
xor
sbb
loope
mov
or
xchg
pushf
(bad)
and
dec
movs
in
or
shl
cmp
jns
pusha
(bad)
mov
cmp
pop
rol
lock
dec
xor
cmp
sub
dec
push
jne
xchg
adc
cmps
jne
popa
int3
inc
adc
mov
shl
add
and
and
in
jb
aad
ss
retf
js
push
adc
mov
mov
dec
add
push
cmp
sbb
lock
jo
add
outs
or
add
xchg
dec
push
push
add
pop
or
adc
adc
add
cmp
mov
js
pop
enter
test
cmps
in
or
cmps
mov
test
inc
or
mov
sar
mov
test
jbe
nop
push
nop
test
add
int3
push
cwde
inc
inc
inc
ins
loopne
call
jb
sub
or
and
shr
jnp
ins
loopne
nop
mov
in
mov
das
adc
xor
cmps
ss
sbb
push
lods
or
adc
lock
mov
pop
adc
xor
call
and
retf
hlt
lock
enter
and
jno
and
dec
add
cmc
cmp
and
lds
popa
mov
(bad)
fld
sbb
aas
or
cld
lahf
ja
mov
xor
inc
xor
inc
adc
dec
dec
sahf
and
ds
mov
and
push
mov
frstor
and
mov
mov
mov
mov
mov
mov
add
add
sub
dec
icebp
xchg
pop
repnz
or
jae
pop
(bad)
mov
ficomp
js
sub
ror
adc
jmp
icebp
popa
adc
push
push
dec
jp
dec
mov
mov
int
mov
xor
fs
ror
sub
and
adc
mov
dec
jb
pop
add
push
mov
xchg
jmp
shl
(bad)
data16
adc
push
or
in
push
and
fs
fadd
pop
fiadd
and
inc
ret
loopne
cmp
add
ds
push
push
hlt
pop
daa
and
mov
pop
popf
push
push
bound
mov
xchg
out
repnz
sbb
sub
daa
xchg
call
int3
mov
in
or
call
xchg
shl
ret
sbb
fdiv
test
sahf
(bad)
fcmovnb
jmp
pop
fdiv
xchg
adc
fwait
int3
xor
push
mov
in
sbb
cs
xchg
push
shl
test
push
jo
ret
ja
js
push
push
je
push
and
fst
movhps
adc
sub
push
push
or
push
ret
ret
stos
push
mov
ret
mov
adc
or
(bad)
in
test
cmp
push
ins
inc
ja
and
mov
and
xchg
cmp
cs
xchg
and
add
(bad)
xlat
add
add
sbb
xor
hlt
je
int
and
pop
ret
sbb
cmp
push
ror
jae
es
push
mov
and
iret
push
test
stc
test
cmovno
and
(bad)
push
add
xchg
push
adc
shl
push
mov
ja
inc
push
sbb
test
fadd
rcl
mov
mov
(bad)
dec
das
pop
and
mov
imul
sbb
push
inc
pop
jb
sbb
and
in
lds
and
enter
dec
xor
or
pop
inc
jmp
sub
or
es
(bad)
iret
jecxz
mov
sbb
push
xor
add
je
push
dec
mov
adc
mov
xor
pop
lock
inc
mov
mov
sub
popf
mov
fmul
or
clc
dec
inc
dec
or
add
mov
test
sar
and
mov
or
mov
fmul
enter
jnp
or
int
clc
sbb
sbb
sbb
rcl
pusha
jno
or
push
inc
inc
mov
test
dec
lds
ds
movaps
and
dec
jge
ds
and
jmp
lods
pop
mov
sub
cmps
sub
shl
mov
sbb
cmp
dec
dec
sub
scas
loope
push
mov
mov
jnp
inc
(bad)
pop
int
(bad)
push
imul
push
xlat
xor
jno
push
arpl
or
xchg
or
xchg
xchg
in
sbb
adc
mov
mov
and
sahf
jge
pop
mov
lock
xor
sub
fcmovbe
aaa
or
cld
scas
aaa
enter
or
sbb
dec
push
ja
nop
and
mov
pusha
lds
or
dec
mov
gs
ret
call
rcpps
cmp
je
mov
in
jle
dec
xchg
les
mov
ret
push
cs
fisub
sub
fs
es
push
movs
adc
sbb
fild
inc
mov
inc
cld
push
in
or
mov
lea
jno
push
xor
push
mov
std
aas
push
pop
or
shl
sbb
mov
add
xchg
ss
and
pop
(bad)
jmp
stos
mov
push
add
out
adc
pop
add
out
and
mov
mov
fimul
test
xor
dec
xchg
test
aad
push
or
nop
in
push
enter
adc
aam
xor
adc
movs
and
or
sbb
test
in
lds
(bad)
in
or
movs
cwde
inc
pop
xor
sub
mov
cmps
or
xor
inc
outs
pop
sub
inc
aas
add
arpl
jo
or
(bad)
mov
ficomp
or
enter
adc
outs
and
cmps
lods
jns
pop
xor
es
pop
sub
shr
cld
xchg
or
ret
jg
sbb
popf
mov
sub
inc
inc
push
neg
inc
dec
daa
sbb
xor
sbb
dec
fsub
add
mov
inc
jecxz
fdiv
or
add
lods
mov
pop
hlt
add
xor
xchg
ja
adc
dec
repnz
in
inc
mov
movs
push
test
cmps
mov
cmp
sub
cmp
bound
cdq
inc
imul
sbb
call
popf
or
pop
mov
or
idiv
inc
out
push
(bad)
sar
fcomp
push
or
rcr
ss
push
push
out
pop
push
ins
push
fimul
xchg
fimul
push
(bad)
rcr
cmps
and
dec
adc
or
adc
and
pop
jb
add
xchg
add
pop
jmp
mov
lea
xchg
dec
ret
mov
rcl
sar
ret
pop
dec
add
fdiv
pop
daa
movs
test
repz
(bad)
jne
adc
jne
push
add
sbb
dec
retf
adc
ret
and
xor
sub
pop
cmp
push
add
push
fcom
xor
and
sub
retf
mov
and
adc
rcr
dec
out
fmul
adc
cmp
or
or
push
jge
fidivr
dec
push
mov
mov
(bad)
arpl
in
not
jmp
lock
jmp
jns
mov
sub
push
push
lea
sbb
inc
rcl
jo
repnz
inc
je
imul
loopne
mov
mov
and
pop
mov
leave
sbb
and
add
fmul
dec
cmp
mov
fcmovu
dec
jmp
push
sub
pop
(bad)
mov
add
push
mov
jl
dec
add
add
mov
mov
dec
mov
aas
mov
faddp
inc
adc
mov
or
and
aas
mov
ds
dec
jle
retf
std
test
adc
add
pop
pop
xchg
mov
inc
dec
jne
xlat
push
mov
jge
adc
adc
pop
push
fisubr
adc
push
sbb
pop
call
and
mov
sub
out
push
lahf
inc
push
in
mov
fsub
push
mov
and
and
lock
enter
dec
jns
jmp
div
mov
mov
sub
push
adc
jecxz
mov
mov
jmp
xchg
clc
dec
push
add
adc
adc
cmp
mov
xchg
shl
mov
and
jl
fstp
jp
or
not
push
daa
push
cmp
dec
aas
push
repnz
(bad)
mov
sbb
(bad)
mov
lea
jmp
push
cmp
sbb
daa
jmp
addr16
out
or
sub
dec
nop
loopne
out
(bad)
icebp
sub
(bad)
jmp
(bad)
fld
dec
ret
jecxz
clc
nop
(bad)
mov
add
adc
das
outs
lock
movs
fisubr
cmp
or
enter
add
clc
adc
ficomp
and
pop
mov
adc
add
pop
lods
pop
add
(bad)
aaa
mov
out
cmp
div
test
inc
aas
and
jmp
daa
dec
mov
in
push
or
ror
enter
movs
(bad)
bswap
inc
je
ret
scas
cmp
fucomi
sub
add
gs
daa
fcmovnu
movs
adc
inc
pop
mov
data16
sar
test
adc
ss
push
in
sub
and
idiv
jge
inc
push
outs
push
dec
neg
call
sar
daa
shr
or
(bad)
lods
cmps
nop
dec
push
cmp
xchg
retf
rcl
aaa
pop
leave
push
cs
lods
or
and
test
jl
jge
cmp
jecxz
xchg
mov
sub
outs
imul
ret
movs
pop
hlt
push
mov
in
rcl
mov
mov
cmp
pusha
ss
(bad)
sbb
xor
and
cmp
or
nop
fstp
or
adc
dec
jb
push
ins
pop
cld
push
push
popa
enter
ret
in
cmp
bound
ret
imul
adc
data16
fisttp
adc
mov
ins
das
ins
ins
add
fisub
mov
daa
inc
and
mov
call
or
outs
enter
sbb
inc
(bad)
cmp
ror
adc
outs
leave
cmp
mov
xor
cmp
jl
aaa
enter
fwait
xchg
cmp
jg
mov
dec
jle
inc
popa
movs
xchg
jmp
pop
pop
dec
repz
and
pop
add
sub
pop
(bad)
add
cld
add
loopne
loope
sbb
cmp
dec
jnp
mov
pop
pop
xlat
and
and
nop
mov
push
add
fcomp
or
push
fsub
cmp
sbb
scas
iret
test
inc
sub
in
mov
pop
test
or
lods
mov
cmp
sbb
fdiv
fadd
out
adc
mov
mov
xchg
test
dec
sub
mov
ds
ret
in
out
movs
in
sub
loopne
es
cmp
ja
lea
sbb
inc
(bad)
mov
jbe
inc
push
push
mov
pop
cs
push
fsub
adc
sub
aam
inc
ss
rol
adc
shl
leave
pop
or
test
add
xor
ror
sbb
loop
enter
int3
pop
movs
sbb
mov
loope
inc
int3
ja
xchg
pop
out
pop
or
pop
mov
ins
mov
push
cmp
jmp
pop
stos
xor
in
(bad)
pop
repnz
cmp
push
mov
scas
push
push
nop
aas
test
mov
push
pop
push
push
jbe
loope
or
dec
dec
push
loope
inc
aaa
push
cli
dec
jecxz
push
rcr
inc
push
jb
inc
push
sub
xor
cmp
mov
push
xor
jp
pop
pop
jnp
cmp
or
jmp
jl
ret
or
test
fild
push
sbb
test
call
(bad)
jmp
sbb
sbb
das
loop
pop
sbb
jb
inc
lea
adc
or
and
sub
add
retf
add
in
jnp
ins
and
dec
or
jg
lock
jle
mov
jns
jne
pop
and
test
adc
stos
nop
mov
push
data16
pop
or
push
xor
fimul
mov
inc
ins
and
jmp
jae
add
push
sub
inc
scas
and
xor
mov
enter
test
daa
test
mov
cmp
pusha
rcl
imul
add
add
pop
push
sbb
push
fs
(bad)
adc
cmp
rcl
mov
or
scas
or
mov
xlat
hlt
and
add
cwde
shr
faddp
adc
and
mov
sbb
jno
movs
int
pop
sbb
mov
xor
test
push
dec
rcl
cmp
ins
push
inc
call
enter
push
movs
stos
push
hlt
mov
int
pop
test
ja
xchg
mov
les
aaa
dec
mov
mov
lods
or
out
ds
out
lods
adc
(bad)
jle
out
pop
retf
inc
rcr
enter
pop
push
mov
in
hlt
int3
in
shl
call
(bad)
jb
imul
enter
adc
hlt
loopne
jb
sub
sub
fadd
stc
loope
and
mov
loopne
xchg
jbe
sbb
push
add
dec
sbb
jb
xchg
add
xlat
cs
test
scas
and
push
push
in
mov
add
cs
mov
or
lods
data16
out
cwde
jge
(bad)
push
ins
mov
lods
cmps
mov
mov
push
jo
mov
push
or
mov
mov
and
or
(bad)
dec
hlt
test
inc
mov
in
sbb
or
inc
mov
ss
in
fcom
fs
add
mov
and
lahf
(bad)
psrlw
mov
stos
add
adc
push
push
inc
ins
or
cvtps2pi
sub
movhlps
xor
dec
xchg
je
dec
adc
adc
nop
int
xor
mov
retf
or
xchg
loopne
aaa
jo
arpl
sbb
adc
inc
movs
shl
cmp
ds
imul
dec
cmp
mov
dec
xor
ins
xor
dec
clc
ret
dec
or
jns
add
dec
jecxz
pop
or
ret
cmp
movs
push
or
inc
and
and
mov
ret
call
mov
xchg
out
je
push
dec
push
sbb
jo
mov
ins
dec
dec
bound
mov
out
cmps
pop
cmp
xchg
movs
ret
xlat
or
dec
xor
daa
and
adc
sub
fisub
out
pop
mov
push
mov
sub
xor
ins
pop
xchg
lods
adc
add
pop
xor
ds
add
iret
inc
daa
mov
add
hlt
loop
fld
adc
mov
clc
repz
inc
shr
mov
repnz
mov
mov
xchg
adc
and
xchg
jb
mov
hlt
mov
leave
xchg
cmp
mov
ins
ret
jmp
mov
jmp
mov
xor
div
or
popw
imul
bound
add
dec
cmps
hlt
mov
sbb
jno
push
popf
adc
ds
clc
add
dec
jne
push
add
dec
jbe
pop
xchg
jae
or
popf
cmp
test
mov
cld
pop
hlt
or
outs
add
fwait
ret
shr
pusha
dec
adc
das
lahf
push
sar
or
push
shl
jmp
inc
imul
out
test
cmp
clc
clc
cmp
imul
mov
dec
aaa
adc
jmp
shr
stos
and
repnz
addr16
jbe
dec
xchg
or
stc
cmp
ret
xchg
pop
ins
mov
ror
mov
sub
clc
das
je
xchg
or
mov
(bad)
jmp
outs
nop
sub
ja
les
adc
pop
ror
add
scas
jbe
fcom
or
pusha
dec
push
fcom
bound
cmp
or
add
dec
pop
or
mov
(bad)
aad
mov
pusha
sbb
pop
ins
or
imul
icebp
push
fs
xor
shl
(bad)
adc
xor
jnp
cmps
or
or
dec
das
arpl
mov
cmp
push
xchg
in
enter
enter
ret
dec
jns
push
cdq
fsubr
add
cmp
(bad)
ss
mov
test
out
adc
and
les
jl
pop
sti
jnp
sar
addr16
sub
or
jl
cmp
push
cs
movs
add
push
dec
mov
jl
rol
add
add
xlat
sar
push
aam
ins
imul
rcl
xchg
add
or
add
pop
mov
or
mov
fadd
jl
push
je
xchg
xor
and
xchg
adc
xchg
mov
push
stos
xor
pop
and
and
or
sahf
call
je
cmp
adc
movs
je
xchg
mov
xchg
xchg
fstp
aad
out
lods
mov
pop
dec
and
and
movs
xchg
test
mov
mov
or
aas
inc
mov
rol
shl
fild
vandps
and
inc
mov
(bad)
or
ror
dec
xor
cmp
fcom
bound
sbb
cmps
or
add
and
movs
push
stc
pop
mov
pop
jne
mov
popf
xchg
jbe
lods
(bad)
call
sbb
fsubr
or
pop
cdq
pop
popf
mov
xchg
loope
out
sbb
sbb
iret
adc
nop
test
xor
mov
das
lock
sub
test
adc
stos
pop
adc
lahf
sbb
loopne
push
sub
pop
enter
ins
das
sbb
test
mov
xlat
stc
and
pop
adc
and
and
pop
daa
push
leave
and
(bad)
retf
sub
inc
sub
pop
imul
mov
pop
sbb
pop
and
jae
shl
ret
mov
push
sub
out
sub
dec
add
(bad)
pushf
xchg
ins
shr
shl
adc
in
cld
and
jle
ins
xchg
mov
push
inc
retf
les
fsqrt
clc
in
or
adc
dec
push
fldcw
daa
xchg
xchg
or
and
aas
push
test
(bad)
push
hlt
add
pusha
(bad)
sbb
out
pop
mov
push
push
ficom
xor
cli
xor
lock
iret
xlat
jb
add
nop
lea
ins
xchg
mov
cwde
pop
sub
xlat
sub
push
cmp
daa
mov
fwait
add
ins
outs
or
push
pop
leave
movs
mov
mov
xchg
and
cmps
les
retf
push
test
cmp
fstp
xchg
dec
dec
ins
or
sbb
and
and
mov
leave
sbb
aas
test
jno
stos
cmps
pop
xor
imul
sbb
pop
mov
outs
shr
jnp
dec
jl
sbb
or
mov
out
inc
dec
imul
ror
push
jbe
or
loopne
add
inc
xchg
inc
adc
jb
mov
cmp
fidiv
inc
or
mov
or
sbb
test
xor
in
or
or
mov
xor
or
or
adc
push
pop
enter
rcl
movs
mov
or
or
mov
mov
mov
push
das
and
cwde
jg
mov
aaa
or
add
sub
out
mov
add
and
and
rol
or
inc
sub
fisttp
jae
xchg
pop
or
inc
es
add
sub
push
sub
mov
adc
fwait
add
sub
sub
inc
sub
adc
push
add
jbe
stos
mov
and
or
test
and
mov
es
div
adc
je
movs
lock
call
cmp
sbb
in
call
lea
or
and
sbb
ds
or
shl
adc
ret
inc
adc
add
mov
sbb
pop
adc
and
sub
push
icebp
jmp
push
push
int
out
adc
in
fst
jmp
push
inc
aas
jmp
push
faddp
sub
xor
cmps
fdivr
imul
arpl
sahf
pusha
sub
(bad)
push
jb
mov
xchg
movs
dec
adc
test
mov
and
or
out
data16
add
sbb
movs
ja
xchg
ret
and
and
dec
ja
sbb
data16
push
dec
or
(bad)
dec
es
jnp
jne
aad
xor
rol
jmp
jle
xchg
adc
push
(bad)
pop
sub
sbb
sbb
mov
lock
loopne
into
or
xor
sub
xchg
xchg
ss
and
or
and
aam
inc
add
fldpi
daa
cmp
sub
imul
mov
(bad)
sub
js
xchg
xor
mov
aad
cmp
je
push
mov
in
ja
ins
das
pop
lods
sub
(bad)
ja
dec
int
fisttp
fs
or
push
xchg
es
in
xchg
test
push
inc
sbb
add
inc
mov
adc
adc
sbb
ror
dec
inc
sub
jecxz
rcl
add
pop
ret
scas
(bad)
int
call
fidivr
xor
enter
sti
push
sar
hlt
ja
add
inc
jecxz
mov
push
xor
inc
ret
ja
in
loopne
pop
add
in
pusha
inc
cmp
jb
retf
xchg
lods
test
xor
ror
inc
push
or
jns
sbb
lea
and
ret
sbb
sahf
inc
jl
lea
fist
test
mov
or
xor
or
cmc
dec
inc
cmp
mov
pusha
add
xchg
cmp
jl
push
jmp
sbb
pusha
dec
sub
dec
gs
sub
mov
xor
mov
or
adc
leave
jecxz
cs
xchg
add
adc
(bad)
(bad)
int3
adc
lahf
push
in
mov
xor
xchg
ror
push
xor
jmp
aam
jmp
(bad)
lahf
aaa
mov
mov
std
mov
movs
out
jo
je
sub
aad
in
adc
leave
test
sbb
or
and
fistp
cmp
xchg
push
push
fs
enter
test
fs
cmps
mov
xchg
mov
push
mov
pop
and
sahf
test
dec
sub
adc
inc
rcr
cmp
mov
jmp
jecxz
jle
mov
mov
inc
test
repnz
jne
adc
adc
mov
or
sbb
sbb
sbb
and
or
jno
cdq
cmp
mov
cmp
(bad)
outs
xchg
or
sub
xor
sbb
cmp
sbb
sbb
inc
pop
es
into
bound
push
out
pop
sub
nop
xchg
push
inc
xchg
adc
ret
mov
sbb
faddp
pop
mov
cld
dec
inc
out
jno
enter
jno
sub
lahf
dec
out
adc
dec
scas
push
je
sub
mov
add
das
sub
es
jp
or
adc
rsqrtps
sub
sub
adc
mov
mov
hlt
and
mov
cmp
lock
sub
es
outs
pop
sub
loope
or
in
xchg
push
push
adc
or
and
hlt
loopne
xlat
inc
xchg
dec
call
or
xor
adc
adc
inc
xchg
pop
fisubr
adc
mov
lock
inc
leave
sbb
jg
mov
inc
outs
push
pop
aas
jns
push
add
adc
cmps
pop
(bad)
fcmovne
out
pop
outs
mov
sub
fwait
xlat
xor
stos
mov
repnz
push
jmp
add
add
in
pop
or
rol
cmps
pop
pop
add
cwde
mov
dec
xchg
daa
mov
(bad)
bound
inc
or
push
ins
cmp
stc
mov
and
(bad)
outs
xor
fstp
repz
ins
jmp
sub
xchg
sbb
or
mov
cld
push
fld
aam
jmp
pop
jb
lds
inc
sbb
adc
sub
add
adc
pushf
in
cmp
ficom
jmp
mov
xchg
inc
je
xor
rcr
test
ja
xor
(bad)
leave
das
imul
addr16
cmp
movs
pop
mov
mov
pop
pusha
push
pop
add
pop
mov
xchg
pop
and
push
mov
adc
sbb
pop
and
pop
rol
repnz
das
(bad)
in
pop
add
adc
fwait
xchg
and
cwde
aaa
icebp
sbb
xor
jp
dec
jo
pop
push
mov
jb
xor
dec
sbb
int
mov
inc
loopne
ss
xchg
xchg
sbb
aad
lock
in
cmps
xor
mov
push
dec
mov
dec
add
jmp
adc
sbb
rol
sbb
ret
movs
dec
add
xlat
inc
add
pusha
dec
gs
addr16
inc
aam
fstp
adc
push
mov
mov
imul
(bad)
adc
adc
(bad)
cmp
mov
dec
sar
icebp
sbb
lock
push
lahf
mov
stc
jp
adc
bound
arpl
popa
push
lock
xchg
test
test
and
les
lock
xlat
out
push
movs
jle
not
add
adc
pop
cmp
or
addr16
adc
mov
jno
inc
loopne
dec
pop
popf
iret
lods
or
in
sbb
sub
xchg
mov
imul
sbb
mov
aaa
imul
add
sbb
add
adc
movs
nop
dec
sbb
mov
push
dec
cmp
jge
fcmovu
jo
les
daa
je
and
push
repz
repnz
cmc
(bad)
sub
data16
jnp
pop
or
jo
fistp
out
or
shr
sub
or
cmp
mov
or
loop
aas
ffreep
adc
jbe
inc
mov
pmaxsw
fadd
cmp
popa
pop
mov
cdq
add
fcmovnbe
inc
test
push
cmp
push
push
lahf
fadd
xchg
mul
clc
dec
mov
out
(bad)
dec
loop
dec
jo
mov
aad
bound
in
push
or
data16
push
or
vmovaps
sbb
add
fisub
enter
mov
aas
cmps
hlt
adc
inc
mov
rcr
ds
nop
add
je
scas
or
and
pop
outs
jecxz
jmp
jno
ins
jns
fst
sar
das
jmp
outs
cmp
and
pop
daa
sub
shl
push
adc
imul
inc
mov
bound
fisubr
push
and
adc
mov
push
inc
push
mov
mov
test
jne
dec
outs
in
xor
jne
mov
xor
test
xchg
or
call
xchg
int3
xchg
sub
or
sub
and
fcomip
inc
imul
sbb
inc
sbb
fld
outs
jg
mov
pop
push
xor
out
mov
aad
push
test
(bad)
out
into
dec
pop
mov
add
mov
mov
fdivr
mov
cwde
push
cs
pop
pusha
pop
adc
sub
aam
cmp
enter
loopne
jle
mov
and
cmp
sub
scas
jae
dec
dec
repnz
sbb
adc
dec
sbb
sti
data16
mov
mov
mov
adc
test
loopne
ror
xor
cwde
popf
and
and
or
adc
stc
push
inc
push
inc
or
and
data16
cmp
xchg
cvtps2pi
sbb
dec
aad
loope
inc
and
lea
shl
nop
and
call
or
into
mov
mov
popa
and
xor
hlt
jg
add
xor
callw
xchg
pop
or
adc
and
imul
mov
(bad)
bound
ins
mov
dec
(bad)
shl
sub
or
test
div
or
or
js
sar
xchg
lods
bsr
add
jne
mov
pop
push
inc
addr16
dec
nop
out
leave
pusha
pop
repnz
ror
lods
pop
test
scas
add
test
into
xchg
fcom
cmp
cmp
call
push
xchg
call
xchg
jno
adc
sub
cmps
lock
imul
stos
xchg
(bad)
shl
push
jns
ror
nop
mov
div
imul
or
in
inc
jae
imul
cmps
adc
lea
aaa
lods
fnsave
and
js
mov
inc
and
inc
stc
add
adc
add
inc
es
cmp
in
push
fidiv
(bad)
out
mov
(bad)
ins
inc
sub
and
fild
es
movs
nop
cwde
daa
not
add
test
add
sbb
mov
sub
cmp
add
sub
sub
ds
test
and
lods
or
mov
repnz
push
test
add
inc
mov
in
fcom
stc
int3
addr16
jmp
or
pop
retf
jmp
mov
and
movs
push
mov
jne
pop
test
push
imul
xchg
cmp
cmc
inc
xchg
mov
test
lock
icebp
sub
sbb
sub
or
sub
jo
mov
test
push
outs
xor
or
dec
mov
popf
lods
add
clc
push
or
ins
stos
lea
xor
enter
xor
push
test
imul
shr
aam
push
pusha
mov
daa
or
dec
add
xor
or
popa
xor
fstp
bound
stos
fs
sbb
pop
xor
clc
cld
push
ret
or
jmp
cmp
push
adc
and
push
sbb
fidivr
xchg
sar
out
mov
dec
sub
rcl
or
sub
jg
cmovl
push
sbb
pusha
(bad)
repz
dec
xor
lock
sahf
jmp
arpl
xor
pop
or
cmps
ret
enter
ret
out
mov
lock
inc
add
inc
shl
xchg
jle
les
call
add
dec
imul
sub
es
push
inc
and
repnz
and
adc
cmps
push
pop
push
stos
ret
fiadd
rcl
icebp
mov
fisttp
sbb
push
mov
mov
ret
adc
das
sbb
adc
xor
lock
call
jmp
push
mov
sub
add
jo
jnp
xchg
push
sbb
sub
pop
out
mov
inc
and
mov
sub
add
nop
mov
inc
push
je
push
test
jo
ins
mov
fwait
call
sub
sub
mov
cmp
inc
add
retf
inc
mov
sub
adc
ja
inc
fsubr
(bad)
cmp
and
xchg
dec
push
clc
adc
push
adc
pop
xor
sbb
ror
or
add
loopne
in
sub
cmp
and
xor
add
repnz
(bad)
sub
mov
mov
loope
cmp
cdq
mov
lods
sar
and
lock
xor
sbb
sbb
add
leave
ja
jb
scas
mov
pop
fist
mov
aaa
dec
push
lock
pusha
jmp
pusha
sbb
hlt
frstor
or
dec
fsub
test
pop
mov
adc
push
ja
jae
repnz
cs
mov
push
sub
push
outs
pop
out
cmps
pop
mov
add
sbb
cmp
imul
pushf
inc
push
push
outs
push
sar
or
mov
xchg
push
aaa
xchg
push
(bad)
adc
jbe
loop
pop
sub
adc
aas
add
mov
cmp
inc
add
xor
jae
loopne
xor
fild
sbb
xor
(bad)
push
and
in
mov
xchg
movs
cmps
movs
mov
mov
sar
add
add
adc
sub
sub
dec
cwd
dec
mov
lods
daa
dec
adc
iret
add
(bad)
or
dec
mov
pop
xor
jecxz
mov
xlat
sub
sub
ret
or
in
gs
adc
pop
push
mov
add
and
aad
dec
push
mov
inc
lock
pop
add
sub
jne
fistp
cmc
daa
push
push
mov
inc
xchg
rol
jmp
(bad)
nop
test
push
fsub
or
inc
sub
add
xchg
cmps
ror
lods
and
cmp
add
mov
(bad)
adc
fdivr
xchg
aam
mov
dec
not
pop
add
sbb
dec
jae
inc
mov
inc
or
xor
mov
or
(bad)
stc
push
imul
push
push
or
add
cmp
rol
test
xchg
pusha
fcomi
inc
or
push
and
push
jb
and
cmps
clc
cdq
or
dec
sub
outs
inc
mov
or
cld
cmp
clc
out
inc
sub
sbb
dec
les
mov
push
jmp
leave
push
adc
cwde
xchg
dec
in
lea
retf
or
inc
popf
les
xor
add
xor
pushf
pop
in
or
(bad)
push
fidiv
mov
sbb
sub
popf
xchg
cmps
or
inc
push
xlat
dec
add
jno
mov
sub
xchg
sar
and
xor
call
add
pop
inc
loopne
add
mov
rol
and
sbb
or
mov
mov
lds
jp
pop
les
sbb
mov
or
repz
(bad)
xchg
dec
ret
out
or
cmc
pushf
(bad)
ins
mov
sub
push
call
or
les
loop
sbb
push
lahf
gs
mov
or
data16
push
data16
and
retf
pop
enter
dec
imul
addr16
test
(bad)
aam
rol
sahf
test
cwde
dec
clc
call
movs
cmp
or
sub
dec
pop
and
movs
jo
push
loopne
fwait
or
jne
(bad)
(bad)
xchg
ret
sbb
inc
adc
rcl
xchg
xchg
sub
jne
inc
push
ja
inc
pop
or
mov
retf
dec
dec
and
mov
and
ins
add
dec
pop
fstp
imul
jnp
pop
mov
cmps
mov
dec
pop
cmps
adc
lahf
sahf
jbe
cmp
jmp
pop
push
outs
cmp
ficomp
xchg
dec
adc
push
cmp
mov
dec
test
xchg
in
pop
popa
into
pop
test
test
lods
xchg
pusha
and
ins
mov
dec
gs
pop
add
jmp
jbe
mov
mov
hlt
in
sbb
xor
int3
cld
(bad)
push
sub
stos
mov
add
lods
mov
push
adc
pop
mov
xchg
push
xchg
mov
xlat
int3
or
pop
add
or
mov
shl
jbe
jo
xchg
sti
push
loope
cmp
jns
pusha
jb
cmp
add
sub
cmp
or
pusha
sbb
mov
fdiv
icebp
daa
or
mov
jbe
rol
fidiv
adc
mov
push
dec
and
pop
fs
mov
loope
and
sub
jo
rep
sub
sbb
and
mov
mov
or
out
xor
loope
mov
mov
movs
mov
pushf
and
mov
and
rol
push
push
pop
cmps
nop
mov
push
pop
xor
nop
dec
pop
mov
mov
or
shr
pop
test
push
cmp
mov
ins
stc
dec
sbb
and
push
jle
in
xchg
or
mov
sbb
xor
xor
shl
or
test
jmp
sar
jmp
xchg
adc
ret
popa
sbb
aaa
lods
iret
mov
in
retf
push
add
dec
call
and
jecxz
mov
jle
sar
or
int3
(bad)
pshufw
loop
inc
fldcw
pop
or
sti
(bad)
cmp
fsub
shr
pop
or
or
xchg
loop
push
sbb
mov
adc
adc
push
jo
adc
or
xchg
or
inc
dec
jns
inc
adc
cmp
ja
or
adc
je
xchg
lea
test
inc
add
pop
add
gs
ret
add
das
inc
mov
add
fiadd
and
mov
xor
adc
jp
pop
push
aas
icebp
add
xor
and
cs
or
mov
push
and
adc
test
adc
(bad)
std
out
inc
aas
push
pop
jns
xor
or
inc
add
inc
cmp
(bad)
shl
mov
adc
es
in
repz
inc
xlat
adc
mov
js
rcr
mov
sub
adc
pushf
or
jnp
stc
jge
out
mov
mov
sbb
or
mov
iret
xlat
inc
push
push
or
jo
dec
sbb
les
inc
and
rcl
shl
inc
cmp
cmp
or
mov
scas
xchg
sbb
aas
or
daa
push
ins
dec
(bad)
out
and
add
and
or
(bad)
sub
shl
or
inc
sub
inc
add
ret
inc
xor
push
lds
adc
sbb
lea
add
dec
pop
ins
inc
and
add
xchg
add
and
push
mov
mov
lock
push
jb
and
jo
inc
cmp
cwde
test
adc
jmp
pop
add
mov
inc
push
mov
push
fwait
outs
mov
mov
add
sub
mov
inc
push
sub
inc
inc
cmps
inc
dec
int3
cld
imul
and
push
fmul
outs
jae
inc
bound
inc
sub
xor
out
mov
sub
in
lock
or
adc
inc
lock
sbb
dec
cmps
adc
ret
movs
pop
and
xor
pop
sbb
in
daa
jmp
rol
enter
and
movs
mov
push
and
loope
xor
cmovg
and
or
es
test
add
sub
dec
mov
mov
push
jmp
inc
dec
(bad)
ds
xor
test
je
call
cmp
sbb
mov
pop
ret
(bad)
sub
sbb
inc
sub
push
add
xor
retf
hlt
and
sub
add
pop
hlt
push
out
in
sbb
pushf
mov
imul
mov
adc
xlat
mov
and
mov
mov
jno
enter
in
stos
sbb
ins
test
or
or
pop
push
pop
dec
mov
out
lahf
rol
mov
xchg
xchg
jge
xor
mov
sub
mov
jp
and
xor
(bad)
shr
sbb
xchg
adc
or
pop
push
add
test
and
add
pop
test
sar
lock
inc
add
inc
(bad)
mov
mov
xor
sub
jl
sbb
push
fild
test
enter
daa
adc
and
push
or
mov
int
sbb
dec
push
ins
aam
sub
sbb
out
pop
add
mov
or
shr
jmp
icebp
rol
clc
out
xchg
movzx
adc
add
bound
arpl
or
dec
ficom
xchg
xchg
or
inc
scas
push
cmp
inc
or
add
push
push
xchg
push
imul
sbb
aad
out
adc
rcl
or
push
mov
sbb
or
adc
inc
xor
cmp
fs
lods
pop
or
mov
jb
push
or
and
mov
imul
not
outs
movs
loop
add
push
and
dec
sbb
ins
adc
sbb
rcl
xor
sub
jmp
inc
dec
fnstcw
mov
out
(bad)
mov
mov
enter
pop
mov
or
adc
mov
inc
mov
mov
jae
daa
and
push
and
mov
lea
add
div
adc
test
ror
bound
aaa
jo
pop
xchg
mov
cmp
mov
cmp
and
mov
out
sub
enter
push
es
sub
scas
push
adc
and
pop
and
jmp
mov
call
cmp
push
or
mov
or
push
cld
mov
jne
mov
setae
and
enter
call
sub
sub
sbb
dec
add
jnp
mov
and
add
mov
test
test
xlat
aad
outs
or
or
cmp
cmp
fmul
dec
(bad)
dec
ds
pop
push
or
sub
or
cmp
fist
out
or
push
and
jne
jbe
pop
dec
aad
(bad)
in
xor
and
or
mov
dec
sub
adc
(bad)
out
(bad)
push
pop
push
adc
imul
sub
sbb
xchg
sbb
inc
jecxz
mov
jno
xor
pop
sbb
pop
mov
pop
hlt
push
div
and
test
inc
sbb
dec
or
inc
cmp
inc
sar
sbb
add
loope
jne
ud2
ret
dec
das
pminsw
cs
and
mov
hlt
test
or
fstp
sub
hlt
add
fwait
test
adc
fisttp
xor
add
jno
icebp
and
imul
neg
add
mov
ins
push
and
dec
scas
sar
mov
test
and
jmp
adc
add
inc
mov
xchg
dec
xor
fwait
or
and
dec
mov
add
(bad)
test
mov
or
push
push
mov
movs
mov
and
loope
mov
adc
ds
adc
pop
sub
cmp
push
rol
ror
adc
pop
and
mov
or
call
loope
push
sahf
mov
mov
or
pop
xchg
lods
mov
in
adc
sub
mov
push
or
and
inc
cmp
ja
pop
adc
sahf
and
xor
cmps
mov
or
or
mov
ficomp
pusha
daa
pop
xchg
lock
stc
les
lahf
out
jnp
and
sub
mov
sbb
or
adc
or
imul
ins
js
inc
nop
or
inc
add
adc
in
pop
cmp
adc
mov
or
add
push
ins
jmp
or
ins
test
lea
les
mov
mov
aas
mov
mov
jo
popa
inc
sub
dec
imul
aam
jne
adc
ret
adc
out
xchg
pop
pop
xchg
cwde
je
xchg
xor
and
enter
push
dec
pop
loope
push
adc
fs
cmp
adc
inc
hlt
jg
dec
dec
mov
xchg
cdq
inc
mov
mov
add
pop
enter
jo
inc
fadd
add
dec
pop
ret
jmp
sbb
push
fxch
xchg
cmp
lock
cmp
je
sbb
or
nop
nop
shl
mov
xchg
test
fisttp
or
fld
jbe
js
sbb
mov
imul
inc
cmp
sub
and
push
add
test
pop
sbb
fisubr
pop
and
fnstenv
daa
inc
cmps
stos
sub
adc
cmps
lods
and
add
scas
sub
test
mov
push
mov
push
and
push
repnz
test
in
inc
xchg
gs
and
and
pop
ret
es
ret
or
and
lods
sub
cmp
dec
test
int3
sbb
adc
add
adc
sbb
xchg
xchg
jo
add
adc
inc
jo
fwait
sub
ss
push
lods
push
sub
lock
or
pushf
cwde
pop
or
jp
and
xor
inc
dec
dec
add
sub
pop
rcr
sub
retf
in
xchg
mov
retf
sar
mov
mov
test
es
aad
call
sti
xor
add
dec
loop
jge
adc
and
pusha
sbb
push
ret
femms
outs
mov
adc
test
xchg
ds
cdq
(bad)
push
js
jae
and
mov
les
repz
out
adc
xor
pop
xor
inc
jae
push
hlt
inc
xor
push
inc
add
ins
push
pop
and
je
pusha
in
pusha
lods
js
xchg
dec
cwde
sub
int
xchg
and
mov
xor
out
call
jmp
xchg
cmp
(bad)
(bad)
dec
adc
ss
outs
add
cmp
jmp
cwde
xchg
sub
jecxz
jb
ins
and
cmp
icebp
dec
imul
sub
dec
add
inc
fld
xchg
nop
push
inc
mov
dec
cmp
dec
sub
inc
or
mov
or
inc
cmp
sub
jnp
cmp
cwde
cwde
cmp
xor
mov
push
jne
sub
xchg
jns
and
adc
enter
add
xor
sbb
adc
inc
fs
and
sar
shr
or
push
enter
sbb
pop
test
or
daa
gs
mov
dec
mov
jo
cmc
lods
dec
ja
mov
pusha
ror
mov
dec
mov
test
aam
ins
lds
adc
and
dec
add
xchg
jo
sub
push
and
popf
xchg
ret
or
inc
cli
or
mov
mov
loope
mov
in
mov
inc
dec
push
pop
xor
mov
sbb
es
dec
dec
cmp
and
outs
and
sbb
std
inc
push
fmul
and
cmp
stos
and
pusha
dec
push
aad
dec
repz
push
cmps
cmp
push
push
inc
rol
inc
push
add
ss
nop
xor
push
dec
adc
push
loope
dec
xlat
push
push
adc
pushf
sbb
or
cmps
adc
push
into
push
fdiv
jbe
push
cmps
test
rcr
in
cmp
and
or
enter
dec
xor
mov
dec
cmp
lock
inc
and
push
leave
pop
ret
cdq
or
sub
push
adc
pop
xchg
mov
mov
aaa
pop
cmp
add
pop
mov
aam
mov
jo
sbb
sub
sub
popa
(bad)
xor
adc
or
pushf
inc
in
jb
movs
sub
nop
mov
add
or
mov
inc
push
test
aaa
ret
test
mov
cmp
sub
addr16
aaa
push
adc
test
lods
or
je
jmp
mov
ss
pop
inc
dec
fimul
adc
movs
and
cmp
ficomp
xlat
mov
xor
xor
mov
jns
and
pop
int
adc
or
sbb
xor
rcl
adc
mov
dec
and
or
push
lock
add
or
lahf
sub
sub
cmp
add
imul
or
ins
pop
xchg
das
mov
dec
add
cmp
rcl
push
dec
std
ret
pop
sub
scas
(bad)
xor
or
cmp
fidiv
pop
pop
movs
mov
or
cmp
xchg
push
rol
arpl
(bad)
arpl
inc
sbb
shl
sub
push
push
xchg
sub
les
repnz
or
imul
hlt
fs
popa
js
cwde
sbb
add
sub
pop
mov
cmovb
inc
in
pop
rol
mov
inc
jbe
loopne
nop
push
mov
and
push
leave
jne
imul
icebp
jb
iret
adc
mov
sbb
call
outs
les
call
and
xor
or
nop
mov
pop
xor
xor
adc
sbb
jno
jns
jns
add
sbb
addr16
push
add
das
int3
imul
pushf
push
stos
push
or
add
(bad)
not
or
in
xlat
shr
xchg
mov
jp
push
or
dec
or
add
pop
and
test
mov
cmp
push
cmp
and
jo
(bad)
adc
loop
test
add
mov
les
and
adc
add
je
push
or
add
(bad)
jmp
nop
mov
adc
xchg
gs
dec
xor
pop
sbb
add
fild
xchg
and
inc
popa
xor
cdq
dec
xchg
dec
sbb
and
loope
in
and
add
inc
mov
dec
scas
xchg
and
daa
xor
cdq
sub
or
mov
sub
xor
jp
xchg
xchg
std
sub
ret
adc
cdq
jecxz
or
or
or
sbb
sbb
ret
or
xor
sub
push
aaa
(bad)
cmp
sbb
push
cmp
push
inc
cmp
cmp
and
and
cmp
xchg
inc
xchg
xor
inc
std
inc
cmp
loop
nop
loopne
daa
les
fimul
daa
mov
xchg
push
and
jns
jl
or
inc
adc
mov
adc
fs
xor
inc
jbe
mov
cmp
mov
addr16
in
addr16
aaa
test
push
and
jnp
lock
push
dec
es
sbb
popf
call
cmp
pop
add
adc
xchg
and
mov
cmps
adc
xor
push
pop
and
leave
adc
sbb
inc
push
pop
arpl
mov
xchg
test
add
and
in
sub
add
add
sub
add
cmp
xchg
das
xor
in
sub
xor
add
add
ss
xchg
and
push
inc
cmps
cmp
dec
jl
push
cmp
in
inc
adc
(bad)
call
(bad)
in
sbb
jmp
inc
std
das
xchg
xor
in
sbb
xchg
sub
inc
data16
mov
stc
fistp
dec
pop
add
mov
(bad)
mov
daa
xadd
data16
dec
inc
adc
jl
jno
or
ins
add
sbb
cmps
sub
mov
aam
jne
pushf
or
imul
lds
loopne
add
push
adc
arpl
jae
nop
inc
mov
into
or
and
inc
dec
push
jo
xor
adc
xchg
sub
ficom
adc
xchg
cmps
push
pop
adc
fisub
push
add
arpl
leave
sbb
imul
rol
ins
sbb
shl
pop
lods
and
inc
not
wbinvd
push
jbe
adc
fs
mov
ja
jle
push
lds
or
mov
push
adc
or
nop
scas
stos
(bad)
shl
adc
popf
inc
inc
adc
inc
cmps
pop
rol
sbb
aas
inc
add
out
adc
mov
(bad)
inc
fmul
push
bound
cmp
inc
and
mov
or
sbb
adc
les
jns
jmp
test
dec
out
jbe
mov
jae
lock
std
mov
dec
jmp
cmc
sbb
call
rcr
mov
pusha
dec
cmp
test
fcomp
jge
ins
ins
pop
or
ins
add
mov
fwait
popa
pop
mov
inc
pop
lock
mov
pop
mov
push
cmp
push
push
pop
sub
inc
jno
les
sub
int
push
sbb
fs
cmp
mov
adc
pop
add
lahf
shl
add
sbb
jg
add
add
adc
push
and
add
inc
mov
push
call
cmp
add
das
or
in
mov
sbb
mov
mov
cld
cmp
mov
in
mov
cmp
daa
mov
push
(bad)
and
sub
call
pop
movs
(bad)
pop
xlat
in
int
int3
inc
leave
mov
adc
cdq
cmp
ins
cld
pop
fwait
cs
test
loopne
ins
call
popf
clc
fbld
ins
nop
sahf
push
push
adc
fmul
lfs
mov
aas
push
mov
outs
aam
pop
js
push
fadd
shr
dec
jl
mov
mov
test
pushf
push
sbb
ins
int
xor
push
int3
je
in
repnz
mov
or
out
sbb
mov
cwde
scas
mov
mov
shrd
mov
cmps
ror
and
call
add
dec
mov
inc
pop
enter
push
xchg
sbb
dec
xchg
aam
adc
mov
loop
loop
or
xor
aas
dec
sub
inc
mov
mov
mov
int
sbb
fs
mov
and
jl
out
push
fmulp
mov
cmp
adc
sbb
and
pop
sub
es
and
or
call
push
das
movs
mov
in
adc
adc
iret
xchg
xor
cs
push
mov
push
xchg
mov
aam
cmp
inc
daa
sahf
dec
mov
pop
(bad)
(bad)
out
pop
sbb
cmp
dec
jl
fwait
mov
clc
outs
out
add
inc
pop
and
push
or
and
xchg
xchg
in
mov
clc
dec
push
or
mov
andps
mov
xchg
cmps
ds
jo
nop
fadd
cmp
pop
and
stos
shl
ret
mov
je
cmp
in
mov
mov
pop
xchg
add
inc
push
mov
mov
dec
arpl
adc
stos
or
or
mov
jae
shl
push
adc
ss
and
xlat
push
pop
lods
sub
es
push
movs
xor
adc
jb
xchg
or
mov
dec
fcomp
cwde
and
fst
ror
(bad)
in
sti
outs
sti
jb
hlt
mov
xchg
mov
dec
sbb
cwde
(bad)
std
mov
lods
dec
sbb
dec
sbb
into
inc
mov
pop
jo
fld
cmp
stos
push
cmps
dec
fidiv
nop
sub
fs
imul
push
sub
fisubr
(bad)
lea
ss
ror
push
or
iret
jo
ja
mov
pop
xor
into
push
xchg
dec
ss
pop
adc
inc
push
sahf
ss
cmps
jns
xchg
mov
jmp
and
adc
pop
mov
cmp
dec
(bad)
jge
dec
lahf
je
mov
fadd
adc
and
daa
inc
and
and
js
enter
xchg
inc
es
inc
add
pop
push
fldcw
ror
adc
xor
dec
repz
mov
xor
adc
push
(bad)
sbb
dec
cmp
push
jle
inc
repz
aam
movs
hlt
cs
dec
je
inc
dec
push
sti
xlat
fidiv
pushf
and
jb
mov
loopne
pop
xchg
enter
loope
dec
test
ret
(bad)
dec
jp
test
call
pop
xchg
data16
add
adc
adc
inc
inc
add
sbb
sub
rol
inc
dec
mov
or
pop
xchg
jno
loopne
ja
and
rcr
adc
add
add
sbb
or
adc
xchg
add
push
sbb
xchg
cmps
xor
and
test
test
adc
fwait
cmps
xchg
popa
dec
and
add
inc
push
dec
or
sub
nop
pop
xor
inc
mov
xor
push
lods
push
mov
aam
inc
cmp
cwde
pop
push
lock
mov
inc
mov
adc
sub
retf
dec
(bad)
inc
pusha
mov
enter
push
stos
dec
jge
lock
sbb
push
sbb
dec
or
xchg
or
(bad)
out
inc
bound
mov
or
sub
aas
sub
pop
inc
add
or
sbb
xchg
add
popa
test
sar
push
sbb
dec
mov
hlt
adc
push
ret
sbb
je
das
adc
repnz
sbb
mov
inc
cld
and
pop
pop
nop
lock
shr
dec
sub
mov
das
jne
lahf
fs
xchg
push
mov
lea
sub
paddd
mov
sub
mov
inc
add
adc
test
sub
push
or
push
inc
movs
push
cmps
je
sub
ror
ins
mov
xor
push
hlt
pop
out
addr16
sub
xlat
dec
fs
add
push
and
xchg
sbb
push
inc
dec
ror
xchg
mov
mov
sub
push
push
js
add
push
adc
rcr
fld
sub
pop
mov
and
adc
lock
fild
lods
push
push
cmp
icebp
push
jp
jl
jmp
sub
pop
mov
leave
ret
pop
fsub
les
rcl
mov
pop
cmp
arpl
(bad)
fdivr
dec
cmp
and
mov
adc
shl
jg
lock
jmp
cmp
fldcw
mov
push
outs
fsub
lea
(bad)
sub
push
mov
pusha
adc
add
push
push
adc
je
dec
je
sbb
mov
push
cmp
pop
hlt
neg
nop
pop
jb
jmp
arpl
je
adc
and
xor
or
inc
sub
adc
test
stos
lods
mov
idiv
push
mov
int3
gs
xor
test
call
adc
inc
mov
ss
or
loopne
mov
or
cmp
inc
or
dec
or
fcmovnbe
sbb
inc
ds
mov
lea
mov
or
jbe
push
inc
nop
add
in
pushf
add
jne
mov
jmp
pop
adc
mov
and
iret
sahf
xor
inc
enter
rcr
loope
inc
rcr
xor
push
mov
sti
or
inc
or
ror
daa
add
cmp
pop
popa
and
xchg
retf
mov
add
jmp
je
pop
pop
inc
fild
(bad)
mov
ror
mov
xor
xlat
das
push
push
sub
or
jmp
(bad)
xor
push
sbb
and
adc
mov
and
mov
movhlps
loope
dec
mov
nop
jp
and
retf
or
push
(bad)
add
push
or
pop
mov
push
in
or
shl
rcl
fdiv
daa
xchg
std
add
(bad)
aaa
add
ror
mov
mov
or
adc
and
cmp
inc
inc
or
xchg
push
push
sbb
imul
jno
sbb
inc
sub
dec
cmp
push
movs
adc
cli
inc
sub
out
fdivr
push
and
addr16
jge
add
out
add
mov
lahf
inc
ror
mov
dec
mov
js
or
and
sub
js
mov
sub
dec
retf
es
pop
dec
inc
xor
adc
addr16
cld
(bad)
sbb
or
mov
pushf
test
data16
or
sar
fucomip
push
pop
daa
fs
push
dec
sub
daa
pop
pop
cmp
cs
pop
das
clc
add
addr16
cld
in
mov
into
cs
sbb
mov
or
add
(bad)
push
and
stc
fiadd
aaa
sub
cmp
jbe
add
sub
dec
jmp
cmps
xor
push
outs
cmps
add
in
fidivr
das
mov
das
mov
mov
stos
imul
ret
xor
arpl
outs
cmp
push
add
cmp
shld
add
pop
add
adc
inc
xor
sbb
sub
sbb
es
and
pop
(bad)
jle
mov
cmp
sub
nop
mov
sar
or
nop
or
fcom
or
and
add
xor
cmps
fimul
adc
cmp
lods
push
push
push
adc
mov
push
mov
clc
sbb
add
xchg
adc
pop
inc
loop
mov
out
adc
push
cmp
fwait
cwde
jmp
fwait
xor
ds
push
out
pop
repnz
cmc
mov
pop
dec
ja
jno
or
sbb
xor
adc
int3
push
mov
add
les
and
(bad)
or
arpl
outs
xchg
mov
sub
and
lock
adc
inc
mov
mov
mov
sub
xor
lods
add
sbb
xor
aas
test
imul
and
add
sbb
(bad)
fcom
or
out
mov
mov
sbb
icebp
dec
ret
or
and
es
daa
ins
mov
push
mov
dec
mov
push
out
movs
je
adc
mov
inc
jnp
sub
or
sub
call
xchg
adc
and
xchg
dec
inc
sbb
mov
aaa
int3
sub
cmp
add
aaa
(bad)
or
mov
jp
and
ror
jp
and
push
dec
add
pop
push
add
push
cs
pop
mov
xchg
nop
inc
mov
push
outs
ds
in
push
call
sbb
nop
imul
add
adc
cmp
push
adc
bound
fdiv
test
paddb
mov
mov
sbb
xor
or
or
mov
sbb
ins
test
fsub
inc
mov
ffree
sbb
adc
es
ss
xor
inc
aam
mov
out
and
pop
dec
outs
fadd
xchg
inc
add
push
dec
sub
sub
pusha
add
or
sbb
daa
test
ret
aaa
jb
les
sbb
cmps
xor
push
mov
fdiv
xlat
xor
add
mov
sub
sbb
jnp
add
or
push
lods
push
or
xchg
jae
xor
mov
adc
sub
adc
adc
lea
push
cmp
cmp
adc
adc
and
mov
outs
or
lds
sbb
out
sbb
pop
and
mov
pop
push
jg
cwde
pop
jb
push
(bad)
dec
ja
mov
inc
push
(bad)
sub
les
sbb
ds
xchg
in
fnsave
int3
and
mov
test
cmp
cmp
shr
adc
arpl
dec
ja
stos
inc
fstp
mov
push
push
and
and
(bad)
jns
in
or
sub
movups
sbb
and
aaa
pop
cmp
pop
inc
jbe
mov
mov
xlat
in
add
jmp
dec
je
imul
dec
outs
mov
int
loop
cmp
stos
mov
push
cwde
push
pop
xlat
push
xchg
arpl
jb
add
cwde
arpl
inc
jne
xchg
dec
jg
or
movs
(bad)
jp
add
bound
ds
ret
push
xor
aad
ret
inc
popf
nop
add
or
fadd
or
mov
das
xor
jae
push
adc
repnz
jmp
adc
(bad)
jp
enter
sub
fdivr
loop
mov
je
pop
adc
sub
inc
jnp
push
call
bswap
frstor
cs
jne
test
dec
ret
arpl
cmp
pop
cdq
in
sbb
pushf
jb
cmp
xchg
push
xlat
mov
sbb
(bad)
cmps
pop
clc
(bad)
mov
mov
in
and
sub
imul
aaa
push
dec
mov
pushf
and
push
enter
and
daa
fld
mov
mov
jb
sbb
and
mov
popf
adc
movs
xchg
inc
repnz
adc
inc
sbb
inc
(bad)
and
pusha
test
jne
mov
sub
loopne
xor
add
xchg
pop
or
dec
dec
adc
jmp
mov
cmp
bound
and
xchg
pop
(bad)
loopne
inc
mov
xchg
adc
push
sbb
cli
aaa
sub
popf
div
cmp
jne
shl
dec
ffree
fs
movs
int3
movs
ret
jmp
mov
adc
ss
or
inc
shl
scas
push
push
xlat
cs
pusha
inc
mov
test
imul
div
mov
cmp
stc
inc
or
add
pop
fist
mov
jmp
sub
outs
sub
and
sbb
getsec
or
or
push
xchg
dec
xlat
sbb
lock
daa
adc
ss
or
jmp
push
(bad)
out
or
sbb
pop
inc
and
pop
mov
mov
pop
pusha
pop
and
mov
or
imul
ja
test
jno
and
jmp
dec
cmp
nop
dec
sbb
inc
xchg
push
cmc
es
mov
jbe
div
test
shl
lods
inc
fdivr
pop
sbb
cli
and
mov
mov
jl
cmp
mov
ret
dec
jne
mov
in
call
lock
in
in
sub
(bad)
push
mov
mov
in
xor
xchg
imul
mov
add
jne
inc
fwait
push
dec
jno
push
jns
add
xor
dec
cld
icebp
test
and
and
mov
mov
das
xchg
pop
ins
inc
jae
and
nop
adc
call
mov
jl
or
add
sbb
(bad)
test
push
sar
xor
or
fild
adc
inc
and
cmp
cmp
mov
pop
enter
sub
or
retf
sbb
add
add
push
cmp
push
ss
sub
loope
cmc
or
add
mov
daa
inc
sub
aam
or
lods
push
enter
fldl2t
mov
psubusb
mov
jl
mov
add
(bad)
cmp
lods
sbb
add
dec
sbb
inc
fwait
fs
jp
mov
sub
inc
cmps
xor
stos
mov
ins
outs
loope
lods
mov
dec
pop
xlat
test
dec
inc
lods
sub
movs
rcl
sbb
call
pop
pushf
cmps
scas
fmul
push
dec
push
inc
popf
ins
sub
xor
sub
push
mov
add
and
retf
fadd
push
dec
sti
lods
adc
or
retf
push
and
test
movs
rcl
push
and
std
fbld
lahf
xchg
mov
inc
ins
outs
pop
xor
(bad)
pop
push
cmp
cmp
daa
mov
mov
xor
rcl
and
or
push
jmp
jecxz
and
sub
ja
sbb
mov
sub
repnz
add
and
out
hlt
test
jp
jle
jne
and
jo
mov
je
jge
xchg
jnp
adc
or
fcom
imul
jo
pop
rol
fwait
pusha
and
sbb
cmps
adc
and
pop
mov
cld
(bad)
sub
outs
aaa
and
outs
adc
push
lods
(bad)
mov
add
fld
xor
loope
pop
lahf
pop
sbb
pop
pop
out
jo
dec
sbb
je
push
jmp
test
std
pop
or
daa
(bad)
cmp
dec
push
inc
push
and
or
repz
mov
gs
or
arpl
xchg
repnz
push
mov
ror
sub
or
dec
shl
ja
cwde
aaa
jbe
dec
jnp
je
jnp
push
adc
jbe
aam
pop
or
add
je
shr
and
nop
sbb
sbb
mov
rol
cwde
sub
ins
fmul
sbb
and
xchg
and
dec
inc
xor
ds
cdq
ret
xchg
xor
add
and
adc
mov
lock
dec
das
mov
xor
mov
xchg
or
cmp
in
sbb
fsubr
pop
xor
push
add
xor
lods
or
aas
mov
push
xor
push
aas
mov
ret
and
push
xor
ret
pop
rcl
and
dec
xchg
or
mov
mov
and
adc
addr16
add
popa
xor
mov
xor
movs
pop
iret
mov
and
dec
inc
or
ficom
jbe
das
push
ss
fcmovb
and
imul
lods
push
sbb
cmp
ret
into
mov
mov
xchg
adc
mov
imul
ret
fs
cdq
and
jne
aaa
cmp
sub
loopne
pop
xor
icebp
ja
js
aam
and
pop
add
adc
or
rol
inc
or
xchg
aaa
jbe
jae
daa
xchg
cmc
retf
cs
add
xchg
nop
xor
es
cmp
jg
aas
int3
enter
and
frstor
in
adc
adc
sbb
mov
fbld
test
cmp
add
or
loope
mov
in
dec
or
push
push
mov
xchg
call
popa
nop
adc
repnz
inc
cmp
lea
lock
pop
xchg
imul
push
stc
cmp
mov
push
inc
idiv
pop
adc
sbb
lea
adc
cwde
dec
imul
lods
ja
pusha
push
or
xlat
dec
aam
sar
xchg
push
int3
mov
mov
je
sub
xchg
mov
lods
adc
(bad)
test
pop
(bad)
cmovns
mov
jbe
sbb
or
or
jmp
iret
rcr
fadd
mov
or
xchg
pop
xor
je
pop
push
mov
test
std
into
jmp
and
popf
shr
rcr
test
pop
rcl
mov
add
es
jne
adc
es
xor
mov
mov
xchg
pop
push
popf
into
pop
xor
sbb
mov
ret
test
mov
outs
sbb
xchg
sub
sbb
and
and
or
ins
cmp
push
les
bound
or
lods
jg
add
cli
inc
js
ret
fimul
sbb
or
fdiv
dec
dec
or
ins
xlat
push
dec
loop
int
dec
je
daa
cmp
jl
retf
add
gs
add
sbb
sub
scas
dec
push
jo
cmps
sub
(bad)
or
test
sbb
popa
adc
test
xor
(bad)
pop
xchg
push
pop
repnz
jmp
clc
inc
out
mov
movs
cmps
push
jb
and
sbb
pop
push
mov
loopne
clc
dec
jmp
bound
push
sbb
pushf
dec
sbb
inc
ins
jns
rcr
imul
fldenv
jmp
xchg
jecxz
add
mov
pusha
test
cmp
dec
mov
in
mov
scas
fcmovbe
pop
add
int
or
add
push
repnz
clc
cmp
jp
pop
mov
movs
ins
jb
add
pop
hlt
in
adc
add
out
add
mov
jo
leave
pop
jae
adc
sbb
out
adc
adc
neg
adc
out
xor
xchg
sub
mov
rol
lock
sbb
dec
or
pop
or
jnp
(bad)
enter
or
adc
lock
dec
ds
xlat
sub
jl
mov
dec
and
dec
or
sub
int3
inc
xchg
dec
bound
fst
scas
ret
pop
and
mov
(bad)
add
jbe
sbb
aam
sbb
sbb
les
dec
test
ins
inc
add
adc
and
jno
jecxz
or
inc
mov
jecxz
or
and
call
ud0
add
pop
retf
je
inc
leave
jge
out
rcr
inc
sar
ins
out
sub
jmp
in
push
rol
inc
cmps
scas
inc
fdiv
retf
dec
jno
sbb
shl
and
scas
or
je
movs
mov
xor
jmp
adc
nop
fidivr
push
sahf
push
inc
ja
xchg
inc
(bad)
adc
add
test
ret
das
into
pop
leave
int3
cmps
in
cmp
cwde
gs
gs
(bad)
mov
add
add
stos
xchg
sbb
push
test
add
iret
push
(bad)
aaa
shl
adc
retf
push
push
and
adc
jae
push
js
cmp
xor
or
mov
into
inc
shl
push
pop
adc
test
clc
sbb
and
das
add
es
adc
das
dec
inc
ror
outs
xchg
mov
adc
lods
adc
lock
dec
push
jmp
jg
js
add
mov
and
and
jmp
sbb
adc
xchg
xor
jg
push
add
sub
push
adc
xor
pop
fild
pop
pop
pop
mov
xor
ret
or
addr16
pop
test
add
add
adc
xchg
push
dec
adc
xchg
data16
fsubr
icebp
ret
mov
sbb
fs
push
push
loopne
inc
or
jecxz
mov
cmp
ds
shl
xadd
add
enter
or
ret
(bad)
and
out
stos
mov
nop
sub
retf
add
jle
jecxz
ja
xor
mov
cmp
sbb
dec
jecxz
aaa
mov
shl
inc
inc
out
xchg
mov
cmp
nop
cli
cmp
jo
xchg
(bad)
xor
adc
and
nop
add
sub
sbb
mov
imul
mov
xor
repnz
jle
mov
or
mov
mov
sbb
je
lds
fld
push
xor
pop
fild
jmp
and
rol
jnp
mov
dec
add
and
dec
jmp
push
add
sbb
sbb
es
leave
or
push
popf
inc
(bad)
pop
mov
lea
add
cmp
sbb
loope
sbb
mov
cmp
jl
mov
or
jo
dec
add
leave
sbb
add
shr
jne
arpl
dec
mov
jne
mov
sbb
js
in
pop
dec
cmp
or
mov
fild
push
pop
imul
pop
(bad)
sub
lds
inc
xchg
imul
les
bound
cmps
dec
pop
dec
mov
pusha
mov
inc
adc
add
mov
cwde
cmp
mov
test
sub
mov
bound
add
pop
out
cmp
(bad)
xor
xchg
test
push
popa
mov
sbb
cmp
je
or
pop
jo
jb
(bad)
dec
push
hlt
pop
lock
adc
inc
add
or
arpl
add
adc
or
loope
inc
rcl
add
mov
sti
cmps
push
aaa
pusha
xor
or
aas
xchg
mov
pushf
or
pop
push
leave
sbb
sub
pop
push
mov
jb
and
ret
clc
mov
sbb
(bad)
pop
mov
in
push
jnp
jmp
int
adc
push
test
fimul
invd
ins
(bad)
jecxz
cs
or
(bad)
inc
test
mov
test
pop
inc
add
pop
retf
inc
ja
jbe
add
ins
and
adc
loope
mov
pop
xchg
xchg
vmrun
add
mov
dec
cmp
int3
je
les
test
adc
mov
add
jo
out
sar
or
jg
pusha
or
mov
ret
test
clc
call
and
jo
daa
mov
add
nop
mov
aad
mov
movs
and
pop
cmp
cmp
adc
(bad)
xchg
jge
scas
imul
mov
adc
int
and
add
sbb
cmp
fs
int
pusha
test
dec
retf
mov
div
adc
cmp
add
push
dec
adc
lods
inc
outs
movmskps
cli
call
add
out
inc
fidiv
outs
adc
out
push
adc
jmp
cdq
mov
fsub
dec
retf
sub
inc
push
inc
cs
jb
nop
ror
jne
mov
mov
or
fnsave
stos
push
jns
cli
mov
jne
mov
push
imul
test
push
and
sub
cdq
pop
add
push
out
rcr
push
in
sub
arpl
cmp
inc
jge
je
mov
movups
sti
jg
imul
ror
fs
sub
push
push
in
and
cs
push
ret
nop
imul
ins
or
sub
push
mov
inc
lock
and
or
push
(bad)
dec
and
add
sub
mov
push
outs
push
adc
jecxz
lods
push
push
stos
dec
imul
and
xchg
or
fcomp
test
clc
(bad)
adc
push
(bad)
jne
cmp
rcl
inc
inc
in
and
ins
cld
mov
and
mov
iret
cmp
mov
out
inc
dec
pop
or
add
push
mov
popa
ret
push
ins
sub
add
fcom
imul
mov
cmp
fisttp
lods
ins
xchg
mov
aas
mov
pop
adc
rcr
fwait
jge
jmp
sbb
div
jb
dec
movs
jg
cmp
cmp
outs
mov
xor
add
mov
mov
push
inc
add
test
fisub
pop
push
add
sub
push
neg
fstp
xchg
inc
push
inc
add
xchg
jecxz
inc
or
mov
aad
out
sub
add
jmp
sub
jl
adc
rcr
sbb
imul
jg
lds
sbb
jecxz
mov
call
movs
add
scas
lahf
add
adc
pushf
popf
cmp
xchg
jmp
add
pop
add
cmp
xor
das
cli
test
mov
jle
mov
xor
xor
add
rcl
rol
arpl
(bad)
add
outs
imul
mov
mov
pusha
adc
push
mov
js
cld
inc
(bad)
daa
xchg
xor
retf
push
xor
hlt
jnp
std
jmp
lods
pop
mov
dec
dec
inc
dec
push
pop
cmp
outs
enter
dec
mov
mov
inc
add
and
repz
add
adc
mov
add
xchg
and
sbb
add
dec
mov
push
push
inc
pop
xchg
gs
call
outs
sbb
sbb
jno
and
imul
add
mov
xchg
and
imul
mov
pop
les
test
add
inc
out
jns
les
dec
mov
mov
gs
adc
iret
je
retf
sbb
xor
or
clc
ret
movs
adc
pop
inc
cmp
jne
mov
cs
test
repz
cmp
xor
retf
mov
test
inc
jno
or
adc
adc
je
std
inc
inc
loop
ret
stos
(bad)
push
jle
gs
ins
jne
inc
loopne
adc
jne
xor
push
xchg
cmp
mov
or
es
cmp
sub
or
mov
dec
daa
test
clc
mov
or
jnp
dec
jno
mov
sub
test
mov
sahf
cs
cs
shr
imul
jmp
inc
or
jne
cmp
add
push
les
adc
movs
dec
jl
fs
add
push
xchg
pusha
or
std
dec
mov
(bad)
lea
mov
ins
dec
dec
rol
daa
jmp
and
push
call
add
push
retf
popf
push
mov
or
push
dec
fisttp
sbb
jge
js
ret
xor
test
add
push
inc
jo
or
js
loop
pusha
fisttp
mov
push
push
int3
add
push
sub
mov
push
add
xor
and
sbb
das
nop
xchg
adc
sbb
fs
movs
inc
jg
hlt
cdq
mov
cld
out
adc
cmp
adc
push
mov
mov
mov
inc
imul
popa
xchg
popa
popa
mov
mov
push
push
push
mov
mov
pop
or
(bad)
out
cmp
std
mov
adc
and
adc
add
push
mov
adc
sub
nop
and
or
jmp
pop
or
inc
xchg
cmp
sub
mov
fwait
adc
mov
adc
aaa
and
inc
out
mov
in
sbb
or
inc
sub
shl
ja
je
or
jns
or
retf
add
xchg
push
cmc
sbb
adc
xor
and
rol
mov
aas
je
test
push
adc
and
cwde
push
and
xor
test
mul
cmp
inc
inc
je
cmp
test
mov
jecxz
dec
xor
fisub
ins
push
jmp
jmp
jns
push
rcl
mov
xchg
dec
pop
loopne
sbb
fcomp
cmp
pop
pop
stc
mov
add
adc
out
push
loope
push
push
add
popa
jo
daa
mov
xchg
or
mov
jns
test
push
mov
mov
fs
add
(bad)
ret
mov
mov
pop
les
arpl
nop
ret
imul
lock
sbb
or
pop
aaa
stc
adc
aas
fucom
pusha
and
push
push
mov
(bad)
and
jmp
xor
cmp
lods
dec
inc
je
xor
movs
mov
les
imul
jmp
ja
retf
scas
or
mulps
shl
or
push
pop
add
loopne
cmc
dec
sbb
shr
sub
xchg
test
inc
pop
fadd
ins
mov
in
in
add
fdiv
lods
jle
push
cmp
in
nop
mov
add
iret
pop
ror
sub
push
jne
mov
fisttp
mov
lods
je
shl
jmp
push
jne
and
inc
lock
mov
mov
loope
hlt
mov
lahf
pop
mov
jmp
add
ins
or
mov
add
lods
ret
adc
les
mov
or
(bad)
mov
xor
daa
lods
test
mov
inc
mov
or
test
leave
int3
test
cmc
scas
push
add
jge
xor
int
push
push
mov
inc
xchg
mov
push
shr
dec
fwait
inc
xchg
pop
jmp
pop
add
das
inc
push
nop
ds
push
sbb
push
mov
cmps
mov
jne
sbb
and
fwait
add
push
and
add
shl
imul
add
add
ins
loopne
and
call
pop
cmp
or
add
dec
sub
mov
inc
sub
je
mov
and
(bad)
fadd
cmp
loop
sub
movs
xor
jae
xor
sbb
jbe
mov
lods
aam
add
mov
pusha
inc
inc
aad
test
loopne
adc
dec
rol
inc
add
push
imul
mov
mov
xor
adc
pushf
mov
fs
mov
stos
mov
jp
sub
jmp
add
inc
add
inc
push
adc
jge
and
cmp
mov
or
sbb
pop
xlat
scas
fldenv
mov
inc
(bad)
sbb
sub
or
push
inc
pop
push
test
movs
out
mov
push
push
mov
outs
mov
shr
cdq
dec
mov
cmp
inc
rcl
push
nop
stc
bound
add
adc
mov
test
push
mov
push
or
test
out
cmp
imul
xor
mov
rcr
xchg
cmp
sub
shl
fdiv
adc
sbb
inc
cmp
lock
call
adc
test
icebp
lock
sbb
jmp
adc
mov
xor
or
test
jmp
pop
sbb
mov
iret
mov
mov
push
xchg
add
and
fs
ror
cmp
push
cmps
jae
adc
jno
or
popa
pop
mov
cmp
(bad)
aad
or
or
rol
and
fsub
sbb
xchg
imul
add
aad
push
push
(bad)
cld
stc
add
leave
neg
lds
push
arpl
xlat
(bad)
scas
and
adc
pop
nop
adc
out
fcom
rol
sbb
not
leave
xor
pusha
xor
ja
push
nop
cmp
mov
xor
test
ret
push
and
(bad)
sub
mov
pop
out
mov
mov
neg
inc
push
adc
and
ss
xchg
xchg
push
imul
(bad)
cmp
mov
mov
push
xchg
push
mov
xchg
add
pop
imul
test
icebp
cmp
pop
xor
and
sbb
rcl
call
fcomp
in
pusha
mov
mov
mov
cmp
xchg
push
outs
adc
out
sub
or
mov
and
imul
jo
sub
jbe
in
mov
sub
enter
or
sub
clc
sub
jge
aad
adc
add
lock
add
add
adc
sbb
cwde
jmp
sub
dec
push
push
fwait
xchg
fadd
je
dec
dec
pop
ja
dec
xchg
fcom
sub
out
inc
push
pop
or
inc
and
and
or
cs
sbb
sbb
cmovae
outs
rcl
sbb
pop
or
aam
cmps
addr16
mov
aam
leave
sbb
fist
out
bound
adc
and
jbe
pusha
int3
fs
outs
inc
xchg
mov
pop
es
dec
xor
stos
inc
mov
shl
pop
sub
push
jbe
or
dec
es
and
inc
mov
stos
push
inc
push
btr
inc
sar
call
stos
push
ins
mov
addr16
jl
stos
or
adc
std
setge
and
jne
mov
rol
mov
ins
fisub
movs
push
cli
daa
aaa
or
je
ficom
and
cwde
push
xor
test
out
xor
mov
add
add
sub
mov
hlt
cmp
clc
jmp
sbb
inc
dec
sbb
mov
pusha
dec
xchg
lods
add
cld
enter
or
mov
or
int3
inc
adc
and
mov
imul
fmul
jne
lods
pop
adc
fstp
hlt
sub
ja
xchg
mov
cmp
repnz
xor
imul
pop
arpl
ret
arpl
sar
push
or
adc
aaa
or
mov
sub
sar
or
(bad)
dec
sub
shl
jo
ror
jmp
jmp
jne
and
inc
loopne
addr16
rcl
mov
xlat
fwait
pop
dec
addr16
add
dec
pop
add
leave
lds
jns
mov
cmp
inc
adc
enter
lds
mov
adc
mov
add
popf
and
ret
stos
or
(bad)
jmp
test
dec
xchg
fcomp
dec
pop
add
jbe
sbb
imul
sar
sub
shl
out
imul
dec
mov
scas
jae
sbb
(bad)
ins
ins
or
and
or
bound
push
add
(bad)
or
jno
mov
dec
sbb
and
push
add
mov
adc
jmp
das
xchg
(bad)
and
cmp
test
add
cmp
popa
or
and
xchg
pop
daa
mov
cmp
adc
js
je
push
or
adc
sbb
dec
add
mov
cmp
pop
pusha
nop
xchg
dec
inc
push
jmp
popa
inc
fisubr
mov
sub
xor
cmp
add
fcom
inc
shl
stos
jecxz
(bad)
outs
cmps
ficom
iret
adc
sub
cli
mov
call
jb
adc
mov
cmps
inc
xor
(bad)
and
push
cwde
pop
aam
mov
adc
pop
stos
cmp
pusha
aam
ret
daa
jne
imul
mov
or
iret
or
push
pushf
add
xchg
push
pop
mov
sahf
add
sbb
and
and
and
cs
call
mov
and
xchg
cmp
sbb
scas
or
add
xchg
and
out
dec
jmp
and
jne
nop
rol
lds
pop
xchg
and
sbb
or
and
sbb
ja
cwde
sbb
push
sbb
loope
retf
iret
std
test
xchg
sub
and
mov
mov
dec
fld
jb
out
jne
mov
je
adc
adc
mov
pop
sbb
and
adc
mov
xchg
push
push
int3
adc
pop
sbb
sub
add
or
pusha
and
movs
xor
js
pop
call
sub
cmp
mov
gs
sub
mov
cli
nop
scas
shl
or
mov
ja
mov
mov
or
or
aas
push
into
jg
fwait
pop
dec
jo
jmp
sbb
movs
cmp
inc
mov
add
mov
(bad)
cdq
add
xor
and
push
jno
lods
adc
cmps
call
cmp
mov
push
daa
mov
fist
rcl
popa
test
add
pop
jl
and
test
mov
sti
mov
imul
or
or
push
inc
mov
mov
or
push
movs
add
pop
loopne
fwait
xchg
or
sbb
jbe
pop
pop
push
test
ja
push
mov
movs
push
js
mov
push
cmp
inc
mov
sahf
mov
pop
cld
rol
mov
pop
push
outs
fmul
or
and
cwde
sub
or
jbe
dec
or
xlat
jmp
retf
jnp
inc
shl
fcmovnbe
shl
sbb
dec
outs
push
mov
sti
mov
xor
jmp
mov
and
push
sbb
inc
push
pop
aam
inc
rep
pop
xor
xor
cwde
and
adc
push
pop
xor
call
fs
xor
pop
stos
ds
mov
jp
push
push
mov
push
shl
pop
jae
dec
test
mov
movs
jmp
mov
mov
xchg
add
xlat
call
adc
push
(bad)
fidivr
inc
add
mov
inc
mov
in
hlt
rcl
iret
mov
ret
or
dec
mov
mov
sub
dec
push
jno
xchg
push
push
out
mov
loopne
sbb
mov
mov
push
dec
test
retf
outs
repz
push
xchg
dec
add
or
sub
inc
test
xor
inc
sub
ror
inc
xchg
es
xchg
mov
mov
fisubr
cli
popf
sub
adc
int
(bad)
sahf
cmp
sar
mov
jle
mov
jno
jg
jbe
test
mov
(bad)
xchg
adc
mov
in
outs
adc
cmps
mov
stc
in
add
sbb
adc
mov
push
or
xor
dec
sahf
xchg
loopne
cld
ret
xchg
daa
jns
daa
ret
cmp
mov
loop
fidiv
repnz
lods
leave
adc
mov
rcl
or
add
into
dec
in
jns
push
dec
and
add
pop
sub
aam
add
sbb
add
add
out
les
ret
ja
dec
jne
or
mov
push
sbb
mov
loop
lock
and
aaa
pop
daa
mov
aaa
stc
sbb
cmp
and
aad
xchg
dec
ror
add
(bad)
ficomp
jecxz
inc
loope
lods
test
icebp
(bad)
cdq
loopne
add
stc
jg
xchg
sbb
or
pusha
xchg
xor
dec
aas
mov
push
xchg
cmp
add
and
add
mov
jno
or
cmp
jo
push
xchg
aas
fisttp
or
jb
clc
clc
ret
enter
sete
outs
xor
(bad)
test
sar
jae
cmp
icebp
and
aas
sbb
je
pop
fldcw
push
push
pop
push
outs
loopne
mov
test
aad
jp
push
dec
push
mov
cmp
pop
call
and
mov
cmps
cmp
das
cmp
sti
and
daa
out
adc
fwait
std
xchg
inc
or
inc
mov
adc
ins
cmp
mov
jmp
push
push
and
jmp
sbb
cld
dec
mov
sub
in
push
cld
cld
inc
nop
or
cld
cld
or
(bad)
push
adc
or
sbb
jg
js
push
and
xchg
pop
mov
cmp
(bad)
je
sub
dec
mov
push
mov
or
push
call
pop
sbb
test
aam
test
test
add
addr16
movs
mov
lahf
into
aaa
push
jb
out
fcmovb
and
lods
pusha
mov
sti
adc
sbb
dec
cdq
mov
push
mov
mov
jae
int
sbb
jmp
out
mov
xor
in
cs
push
pop
js
and
jl
push
push
icebp
jb
popf
daa
inc
or
inc
fldenv
popa
or
ins
not
push
jb
and
dec
push
mov
mov
leave
mov
mov
mov
mov
pusha
es
jns
fst
popa
js
adc
test
(bad)
nop
inc
push
sbb
inc
mov
fs
cmp
test
mov
fxch
pop
mov
and
lods
push
sbb
movs
(bad)
loop
cs
sbb
pop
shl
call
pop
pop
push
fcmovnb
(bad)
or
pop
dec
dec
add
jg
sub
pop
in
sub
addr16
cmp
push
push
dec
pop
and
fistp
mov
dec
jg
cwde
or
push
aaa
push
dec
mov
push
inc
xchg
sub
call
fs
xchg
imul
lahf
push
jne
inc
in
xor
jmp
imul
imul
mov
fwait
jp
adc
jp
lods
dec
push
push
mov
mov
adc
xor
add
or
leave
adc
mov
and
adc
xlat
pop
adc
mov
std
cdq
in
sti
out
jl
or
jle
pop
push
jecxz
daa
cmp
and
pop
out
test
pusha
mov
hlt
popa
push
stos
fs
mov
pop
pop
fnstenv
dec
jp
imul
xchg
clc
or
jmp
sbb
bound
pop
scas
pop
or
gs
das
dec
js
sub
inc
push
ins
pop
mov
dec
in
aaa
popa
sbb
mov
push
int
xor
loopne
shr
add
cs
jo
add
mov
pop
cmovbe
rcl
mul
aaa
jmp
mov
mov
sbb
xor
pop
or
mov
imul
(bad)
add
sar
dec
cmp
adc
inc
mov
pop
lock
idiv
pop
cwde
jmp
pop
sub
push
push
outs
mov
mov
sahf
popf
adc
cmp
push
mov
xor
mov
adc
addr16
xor
pop
dec
jb
xor
pop
add
imul
add
adc
loopne
push
mul
jne
cmp
sub
xchg
push
or
mov
push
cld
and
jno
dec
mov
add
mov
imul
dec
add
lock
neg
mov
mov
leave
lds
sbb
or
aas
or
jae
cmp
mov
pop
inc
outs
or
adc
mov
and
jae
bound
mov
and
ins
sbb
fadd
mov
mov
cdq
ret
adc
lock
fadd
sub
cmp
sahf
inc
cmp
out
push
pop
lahf
pop
sbb
xor
cmp
adc
lods
call
call
cmp
cmc
inc
loope
and
daa
pusha
cmp
dec
outs
out
rol
fbstp
cmp
cmps
mov
sub
push
add
jl
add
sbb
mov
sub
les
and
pop
inc
cs
les
int
mov
adc
or
dec
cld
imul
inc
or
sub
pop
mov
pop
je
movs
rcl
inc
dec
pop
retf
pushf
xchg
adc
jg
call
push
mov
nop
inc
movs
ret
or
pop
xchg
ret
and
sbb
test
xor
dec
pop
bound
push
movs
sub
test
inc
jb
aas
outs
xor
dec
mov
popf
xor
test
test
in
popa
sbb
inc
adc
ins
inc
pop
shl
pop
popf
lods
fcom
adc
cld
icebp
or
fcomi
mov
iret
and
inc
inc
jecxz
cmp
or
imul
lahf
test
fadd
add
sub
loope
(bad)
pop
cmps
imul
mov
cmp
setg
push
mov
add
dec
inc
xchg
idiv
out
sbb
push
dec
cmp
setl
pop
xchg
gs
inc
dec
inc
dec
cwde
popa
call
push
inc
cmp
push
adc
or
sub
mov
mov
jae
imul
dec
retf
dec
mov
mov
sub
fcmovnu
add
test
sub
lea
lock
inc
inc
call
(bad)
jmp
ds
mov
mov
ins
pushf
inc
cmps
pop
inc
mov
inc
xchg
and
in
add
fist
mov
sbb
push
or
je
pop
sbb
pop
inc
jl
xor
popf
sub
cmp
xor
into
mov
inc
fidivr
xor
or
or
sysenter
hlt
sub
mov
dec
cmp
je
hlt
aad
adc
xchg
add
dec
and
add
xor
shl
shl
or
loopne
fsub
inc
or
xor
lock
ins
mov
add
sbb
xchg
test
and
push
add
dec
mov
es
adc
xor
inc
in
rcr
sub
pop
shr
pop
and
in
sti
mov
cmp
imul
aaa
les
cs
daa
emms
lods
add
pop
jnp
lods
test
dec
mov
mov
mov
pop
add
jp
pop
(bad)
dec
mov
loopne
dec
hlt
je
add
rol
imul
fnstsw
adc
in
lods
rol
or
cmp
and
dec
sub
push
xor
and
jg
cwde
outs
nop
mov
pop
ret
sbb
int
fisttp
loopne
add
xor
outs
sti
data16
and
stc
add
cmp
or
xor
xlat
pop
add
and
add
lock
shl
xor
(bad)
or
add
iret
enter
leave
adc
add
call
je
mov
jle
xchg
xchg
sub
mov
or
inc
sbb
fucomip
pop
sbb
mov
cdq
add
xchg
test
pop
mov
mov
popa
iret
cmp
mul
and
cmp
xchg
dec
adc
inc
stos
mov
mov
pop
pop
or
sub
xchg
push
inc
mov
push
ds
fimul
push
dec
xchg
and
lock
xor
pop
xchg
enter
push
pop
cmp
cmp
pusha
sbb
movs
push
inc
movs
mov
not
ds
and
mov
adc
adc
sub
inc
and
popa
jns
enter
lods
mov
jb
adc
mov
bound
es
cmp
(bad)
dec
adc
adc
push
push
push
mov
ret
push
iret
(bad)
popf
bound
int
fwait
inc
pusha
inc
adc
ja
pop
mov
movs
(bad)
bound
sbb
js
sbb
mov
mul
lsl
and
cvtpi2pd
mov
in
adc
push
xchg
pusha
je
call
scas
cdq
dec
or
popa
or
je
pop
push
test
xor
pop
jp
sub
xor
(bad)
sub
adc
test
sbb
popa
or
ds
loope
cmp
adc
or
push
dec
add
jno
sub
push
dec
call
rol
jmp
sbb
push
lock
xor
fdiv
and
outs
ins
cwde
mov
clc
pop
pop
push
mov
push
mov
sub
xor
cmp
retf
hlt
data16
jne
pop
enter
fcomp
xor
pop
rcr
push
jecxz
inc
xor
mov
bound
test
popa
lea
mov
sbb
test
ss
popf
(bad)
and
or
rcr
add
jp
js
mov
mov
sahf
mov
add
jae
or
call
xchg
push
arpl
daa
movs
mov
or
ins
xchg
ret
mov
mov
lods
cmp
cmp
add
mov
iret
add
addr16
and
cmp
loopne
inc
dec
icebp
mov
div
pop
add
pop
pop
enter
dec
int
mov
ror
jns
in
cmp
ss
push
icebp
dec
dec
dec
inc
push
ficomp
add
pop
push
mov
xor
add
cmp
fiadd
pop
sti
inc
or
frstor
adc
add
pop
movs
inc
xchg
mov
mov
jo
add
pop
dec
gs
push
iret
cmp
rcr
movs
and
mov
lods
adc
pop
adc
add
xchg
inc
mov
push
jg
add
aaa
test
sub
and
nop
lock
xor
aas
popa
test
rcl
shl
leave
cmp
aaa
iret
xchg
movs
sub
mov
stos
ins
mov
cmp
faddp
mov
fdiv
(bad)
cmp
pushf
or
aas
dec
enter
aam
pop
mov
sbb
and
inc
or
pop
add
int
dec
pop
dec
lock
retf
rol
mov
out
or
out
(bad)
cmp
mov
push
mov
pop
movs
sub
ins
fidiv
repnz
push
cmp
jae
shl
sub
loope
push
dec
push
ds
ror
add
aam
test
push
ret
mov
aad
add
add
adc
fs
int
jp
popf
jae
sbb
sbb
ja
mov
js
pusha
mov
mov
and
pushf
adc
into
jmp
xchg
adc
inc
xor
pop
je
pop
pop
js
(bad)
inc
or
stos
and
xor
movs
fsub
inc
hlt
mov
push
lods
lea
dec
mov
and
pop
and
push
out
js
cmps
sbb
test
push
sbb
cmps
mov
or
adc
movs
xor
hlt
loop
shr
pusha
add
stos
inc
push
push
sti
xor
dec
push
pop
mov
and
pop
sar
pop
jnp
movs
mov
jl
push
adc
sbb
push
cld
inc
add
pop
aas
xchg
mov
mov
into
rcl
dec
jo
sbb
jns
pop
jbe
mov
fisttp
jbe
sub
repz
mov
mov
sub
outs
pop
xor
and
fld
enter
add
cmp
jne
mov
sub
jae
xchg
aaa
adc
in
fmul
enter
jne
ret
ret
mov
bound
jne
(bad)
and
test
and
mov
adc
lahf
adc
cli
xlat
sub
or
add
inc
xor
or
ror
inc
adc
jg
mov
push
shl
adc
push
sbb
cmps
clc
mov
jmp
daa
and
retf
mov
call
aas
sbb
sbb
pop
std
sar
xchg
dec
jmp
jecxz
pop
jmp
(bad)
scas
lock
cmp
or
adc
enter
add
push
and
fld
cmp
aad
stos
daa
rcl
jle
inc
cs
jg
sub
out
repz
call
jae
retf
cmp
push
sub
push
inc
sbb
xor
inc
retf
jae
clc
and
ficomp
push
jmp
mov
and
stc
jnp
xchg
pop
jb
iret
out
xchg
out
add
mov
push
add
dec
icebp
fxch
mov
add
addr16
add
loopne
repnz
and
mov
adc
es
sbb
leave
lods
dec
ds
pop
push
aam
sbb
xor
scas
lods
and
mov
mov
and
pop
jg
push
inc
psubb
add
test
add
bound
xchg
ret
addr16
sub
cmp
outs
adc
cdq
sbb
pop
int3
and
xchg
fld
rcl
sub
cdq
xor
pop
les
out
xchg
and
sbb
mov
mov
sub
sbb
enter
lods
mov
clc
pop
ret
dec
js
mov
mov
xor
sbb
in
call
aaa
popa
cmp
jne
jae
cmp
xor
icebp
or
jns
add
and
jo
jbe
mov
xchg
jne
jae
(bad)
mov
push
lods
inc
sub
ja
repz
ins
mov
and
push
fld
push
jle
jnp
ins
arpl
mov
test
pop
jecxz
cmp
scas
inc
loope
int
inc
add
and
inc
mov
fdivr
fsub
lock
retf
mov
xchg
pop
jp
mov
mov
fadd
cmp
out
push
pop
add
outs
fld
cmp
mov
xor
adc
nop
xchg
mov
clc
dec
repnz
sbb
hlt
lock
add
ret
in
add
js
pop
mov
je
ret
add
cmps
int
jge
fidiv
add
aam
test
cmp
test
leave
fcmovnbe
nop
inc
into
call
jle
inc
jmp
or
cmp
ret
pop
fldenv
int
sub
inc
xor
mov
ror
cwde
rol
cmp
shl
das
xor
je
pop
pop
mov
adc
sub
pop
jbe
xchg
ins
repz
xor
ins
lods
adc
lea
push
and
outs
push
add
sub
xchg
and
jecxz
jp
test
int3
pop
addr16
add
loop
dec
adc
add
rol
mov
pop
inc
inc
push
dec
xchg
lods
idiv
mov
or
add
and
add
mov
xor
adc
jns
pop
test
push
cmp
push
jb
sub
push
icebp
add
add
and
mov
inc
add
adc
retf
pop
cmp
mov
aad
or
(bad)
or
adc
or
(bad)
sub
rol
and
pop
cmp
je
push
jp
and
mov
sub
dec
fwait
call
dec
jae
sbb
and
repnz
sbb
adc
or
aas
dec
js
call
cmp
sbb
retf
cwde
movs
or
xchg
loopne
cmp
pop
es
outs
jmp
aas
inc
enter
jno
xchg
jecxz
adc
test
or
mov
call
cmp
sub
push
sbb
sbb
xchg
loop
push
inc
test
retf
add
add
jb
xchg
dec
sbb
sub
mov
sbb
test
jnp
pop
inc
mov
push
dec
rol
rcr
jno
hlt
add
jmp
leave
or
pop
add
cmp
add
std
sub
cwde
push
push
loopne
mov
jne
pop
adc
jno
sub
mov
xor
and
ins
add
push
dec
retf
jcxz
ins
xchg
fadd
fnstcw
xchg
add
xchg
sbb
sbb
or
xor
(bad)
adc
mov
pop
mov
or
mov
imul
push
xchg
outs
adc
mov
or
mov
adc
sbb
xlat
dec
adc
(bad)
call
inc
daa
cmp
int3
cwde
das
imul
mov
aam
je
shl
and
dec
call
outs
pop
imul
into
dec
sar
ins
int3
sbb
push
push
daa
sbb
jne
sub
jmp
or
mov
sub
imul
lods
mov
popf
mov
cmps
rol
addr16
mov
pop
and
cmp
not
jo
xchg
loope
xchg
out
ror
shl
cmp
rcl
dec
dec
dec
xchg
cs
mov
dec
jge
mov
inc
push
mov
int3
dec
aam
(bad)
scas
js
shl
sbb
push
sbb
into
add
imul
adc
cmp
ret
fwait
into
mov
jo
je
inc
jecxz
push
cmps
push
enter
movs
dec
cmp
and
inc
mov
xchg
pop
stos
or
dec
xchg
adc
and
inc
jp
js
jge
lock
xor
ins
lahf
sbb
jno
adc
push
add
pop
cmp
add
mov
ret
imul
rcl
mov
mov
xchg
xchg
rcl
out
pop
add
push
ins
dec
inc
daa
lock
mov
retf
enter
jl
int3
or
sub
and
shr
or
rcl
and
int
pop
ficom
imul
ret
jg
pop
mov
add
in
add
pop
or
pusha
mov
inc
inc
and
mov
sbb
ror
add
add
inc
les
retf
adc
retf
int3
mov
jp
and
mov
lods
add
scas
les
das
cmp
sub
nop
adc
mov
inc
push
push
push
icebp
add
ins
or
sbb
add
pusha
dec
jno
and
mov
lods
call
shl
cmp
add
xor
ins
add
add
lahf
lods
outs
enter
adc
xchg
or
es
pmulhuw
add
inc
dec
sbb
dec
sub
pop
in
div
mov
sbb
push
dec
pop
jbe
in
add
sub
sbb
cdq
push
xchg
dec
inc
ja
ja
sbb
pop
ins
xor
adc
adc
push
jge
xchg
test
lods
ret
addr16
call
or
js
and
or
jne
stos
sbb
imul
sbb
adc
dec
xchg
mov
mov
popa
add
dec
xchg
ins
sbb
add
inc
pop
mov
loope
fidivr
int
xor
push
stc
and
pop
push
ficomp
push
scas
(bad)
dec
mov
dec
sbb
hlt
pop
test
sbb
inc
pusha
outs
xor
push
enter
jg
dec
push
xor
les
push
dec
jl
mov
add
mov
push
mov
push
xlat
dec
sbb
xor
sub
repz
sbb
sbb
aam
dec
mov
ret
push
es
jg
je
add
dec
enter
out
and
sub
and
pop
sub
hlt
mov
and
pushf
or
out
cmp
inc
fidiv
mov
jmp
sbb
xchg
in
mov
sbb
xchg
inc
sbb
and
and
nop
or
and
or
adc
icebp
xchg
bound
or
mov
or
imul
jecxz
mul
adc
dec
je
and
jge
add
push
push
cmp
ss
(bad)
jne
mov
mov
in
push
dec
adc
test
adc
xor
call
xor
sub
or
dec
dec
push
loop
repnz
daa
mov
push
xchg
fwait
test
pop
repnz
mov
addr16
repnz
jmp
add
(bad)
dec
sub
inc
call
jne
and
loop
push
fs
add
push
retf
adc
jg
push
add
and
fwait
pcmpgtw
cmp
loope
jns
add
push
add
xor
push
movs
mov
xor
sti
popa
data16
and
mov
test
add
aaa
push
lea
out
push
jecxz
inc
loop
add
in
loopne
sub
mov
clc
xchg
mov
adc
lods
jmp
in
mov
mov
mov
dec
rcr
push
outs
mov
mov
in
and
sbb
xchg
fisubr
mov
mov
lods
or
pop
xchg
mov
inc
addr16
xor
push
xchg
bound
aaa
adc
add
xchg
es
push
stos
lahf
pop
sub
or
mov
cmc
mov
sbb
outs
push
pop
xor
jge
sbb
cs
int
and
fist
xchg
xor
dec
cld
shl
push
(bad)
mov
mov
fcom
lahf
mov
sbb
jne
sub
cmp
sub
pop
rcl
data16
sub
mov
dec
or
call
push
cmps
out
movs
and
inc
inc
sub
iret
pop
call
add
outs
pop
add
pop
pusha
jne
xchg
adc
ja
gs
add
and
jg
inc
pop
cmp
in
pop
(bad)
ror
rol
mov
push
inc
loopne
and
sub
inc
or
jle
shl
and
pop
sub
add
add
inc
dec
daa
test
inc
(bad)
in
les
movs
ret
xchg
mov
push
cld
sub
and
js
por
mov
pop
lahf
xor
movs
retf
xor
mov
push
leave
sbb
inc
rcl
add
xor
inc
cwde
xchg
ins
add
add
ret
sub
popa
inc
ja
or
repz
aam
xchg
jne
xlat
(bad)
or
jecxz
mov
or
cmp
jb
cmp
out
jmp
mov
mov
mov
test
push
or
pop
or
xor
add
mov
sub
outs
jne
pop
ds
push
add
adc
(bad)
jge
xor
mov
sub
aam
jae
xor
fst
fadd
sbb
inc
sbb
(bad)
add
and
and
xlat
inc
and
sbb
adc
sub
jo
adc
test
es
add
pop
inc
inc
inc
call
mov
mov
pop
mov
out
aaa
adc
in
mov
sbb
or
fdiv
aaa
cs
sub
dec
dec
mov
add
dec
enter
aaa
les
xchg
push
jmp
adc
cld
xchg
jecxz
nop
xchg
ret
or
lock
mov
adc
cmp
inc
leave
mov
jo
lods
mov
mov
mov
test
xor
pop
lock
xor
inc
add
(bad)
lock
out
out
popf
sbb
cmp
(bad)
adc
jno
xchg
scas
adc
inc
es
jne
gs
mov
inc
or
sbb
push
hlt
add
add
dec
xor
sub
jge
jo
addr16
cmp
je
lea
pop
mov
sbb
push
add
or
mov
jmp
cwde
test
movs
cs
icebp
sbb
adc
xchg
je
inc
push
mov
pop
and
ror
retf
jo
shl
ins
xchg
enter
lea
mov
sub
loopne
push
mov
mov
arpl
aam
shld
adc
fsub
push
lea
test
ret
add
lock
icebp
jecxz
jge
cmp
xchg
aam
dec
sbb
in
jecxz
xor
mov
cmps
xchg
es
sub
push
cdq
sete
adc
pop
xor
and
dec
(bad)
fs
fcom
fimul
repz
sbb
mov
nop
push
push
retf
sub
mov
mov
mov
dec
sti
dec
jmp
jb
out
cs
push
add
popf
mov
mov
adc
jb
push
pushf
xor
jo
gs
adc
push
push
test
mov
pusha
and
test
outs
jmp
push
aam
xchg
inc
sbb
cmps
sub
rcl
sar
movs
adc
or
popf
lahf
fisub
push
push
mov
stos
or
push
mov
push
push
pop
daa
loope
lea
mov
gs
dec
inc
pushf
mov
dec
in
inc
cmp
je
ret
fiadd
xor
inc
jne
cmp
lea
or
or
popa
movs
aam
mov
test
xor
mov
and
mov
add
leave
mov
movs
and
inc
jle
sbb
inc
and
cmp
dec
add
xor
test
add
lock
dec
aad
je
bound
cwde
test
(bad)
popa
pop
mov
add
les
inc
daa
mov
sbb
in
push
adc
pop
mov
add
shl
dec
sbb
addr16
jae
int3
jo
inc
dec
cmp
fs
mov
hlt
mov
jne
inc
(bad)
out
xchg
xchg
(bad)
mov
sub
xchg
pop
cmp
lock
mov
call
ds
bound
mov
fcomp
fs
and
pop
push
xlat
js
cmp
mov
dec
add
push
enter
and
or
mov
fdivr
inc
xor
add
sub
or
and
sub
xor
mov
dec
outs
hlt
imul
dec
push
add
xchg
push
pop
jne
inc
xor
pop
inc
sub
and
jbe
sub
aaa
inc
pop
add
sub
ss
or
jg
mov
push
or
xlat
inc
cmp
test
test
pop
fst
jbe
push
out
pop
sbb
(bad)
fisubr
mul
arpl
pop
cmp
inc
inc
jnp
cwde
adc
mov
adc
mov
mov
cmp
xchg
test
adc
adc
xchg
dec
and
cmp
cmps
jp
xor
cwde
cwde
inc
adc
inc
add
inc
sbb
leave
add
or
fld
sub
push
out
inc
arpl
add
and
jge
ins
add
and
daa
and
mov
sbb
js
cmp
push
add
inc
sar
mov
and
loop
sbb
inc
mov
push
inc
xchg
and
inc
push
and
or
sub
sbb
mov
(bad)
xchg
cmp
xlat
jo
mov
daa
rol
test
pop
sub
and
and
scas
add
push
inc
and
test
mov
push
inc
addr16
repnz
push
inc
clc
or
sbb
pop
cmp
dec
add
int3
ss
lods
call
inc
adc
jno
sbb
adc
xor
adc
push
data16
aam
adc
adc
movs
adc
jg
fadd
push
jne
jle
sub
cmp
ret
jecxz
push
call
pop
jnp
(bad)
pop
inc
dec
inc
leave
inc
es
xor
mov
pop
sbb
inc
jnp
or
inc
jnp
add
daa
pop
sbb
lods
enter
add
push
sbb
xor
xchg
add
cmp
add
adc
fsub
mov
and
fstp
dec
call
xchg
add
or
xor
adc
ss
xor
mov
sbb
movs
mov
jecxz
sbb
adc
and
sbb
lahf
push
sbb
or
dec
sbb
xchg
or
sbb
cmps
xchg
add
push
sbb
mov
add
add
fwait
pop
adc
push
inc
and
add
add
mov
jno
and
nop
add
push
nop
add
and
sub
sub
inc
mov
or
dec
cs
add
sbb
mov
push
xchg
xchg
jns
inc
stos
dec
jecxz
mov
cmp
and
adc
lea
leave
cmp
pop
and
cwde
(bad)
inc
inc
inc
pop
cld
and
inc
(bad)
sbb
test
ret
adc
jp
push
fsub
push
(bad)
or
mov
enter
fsub
not
mov
inc
sub
mov
lock
lds
and
sbb
and
adc
pop
add
dec
mov
sbb
cmp
xor
jg
push
add
inc
inc
or
push
lock
xchg
ret
aam
mov
adc
iret
add
pusha
call
or
and
psrld
and
outs
rcl
and
mov
add
push
and
test
mov
sub
cmp
sar
shr
lods
dec
aaa
sub
or
add
xchg
mov
and
test
sbb
cmp
mov
adc
add
add
aaa
je
scas
imul
(bad)
jbe
jb
sub
fistp
test
jg
cmp
mov
mov
ret
fadd
in
mov
clc
mov
mov
push
add
dec
xor
cmp
xor
bnd
xchg
je
jmp
and
mov
or
mov
xchg
or
and
(bad)
jge
(bad)
jecxz
dec
or
into
aas
mov
sbb
pop
leave
ss
add
pusha
nop
sbb
dec
xor
add
movs
push
jecxz
hlt
or
mov
(bad)
pop
cmps
add
adc
dec
arpl
inc
push
clc
and
sub
or
mov
aad
(bad)
and
test
push
add
test
push
push
jp
in
outs
cmp
imul
pusha
and
sub
cmp
inc
popa
jl
fidivr
daa
adc
add
cwde
add
jmp
add
cmp
and
cwde
sbb
div
cmps
add
dec
gs
jns
and
jno
cmp
cli
or
(bad)
jae
(bad)
cmp
mov
repz
mov
add
je
mov
mov
sub
not
sub
inc
mov
pop
jcxz
or
call
in
adc
xor
push
clc
mov
cmp
aam
mov
or
add
stc
fcmovnb
fwait
push
fsubr
add
mov
iret
hlt
or
adc
nop
jns
sbb
jno
pop
sbb
and
pop
dec
js
xchg
inc
pop
inc
das
jnp
push
inc
push
sbb
add
fwait
call
pop
sti
add
aaa
sbb
test
push
push
xor
xlat
aaa
pop
leave
aam
or
and
push
and
mov
push
jae
inc
push
add
sub
pop
xor
mov
mov
(bad)
jmp
add
and
mov
add
and
sub
cs
sahf
aas
dec
popa
and
add
mov
mov
in
ret
fidiv
das
mov
pusha
lahf
xchg
cdq
and
or
jbe
pop
xor
pop
add
sub
popf
movs
dec
sub
lods
or
push
popa
push
arpl
dec
mov
shl
xor
and
adc
pusha
mov
inc
and
cmps
add
adc
aas
mov
xor
lds
jmp
xor
adc
and
xchg
jae
or
and
inc
aaa
fmul
jae
test
add
push
dec
mov
sub
fwait
sub
gs
inc
push
call
pusha
cwde
or
adc
sub
out
sti
and
xor
mov
mov
inc
mov
push
and
in
mul
cmp
lock
adc
xcrypt-cbc
cmps
push
cmps
and
jno
jg
sbb
mov
pop
add
cmp
aaa
sbb
sub
xchg
and
inc
shr
add
push
inc
mov
shl
sbb
jl
mov
and
sbb
and
je
pandn
cmp
push
push
xchg
push
ret
push
ret
cmp
lahf
sbb
adc
dec
iret
aaa
add
mov
or
jmp
loop
loope
push
push
adc
stos
add
dec
adc
adc
jno
and
repz
fs
ss
je
and
sub
enter
lock
pop
es
sub
adc
inc
cwde
sbb
xlat
sbb
add
or
jne
sbb
inc
and
adc
nop
xor
xor
adc
loope
sbb
xlat
in
in
and
xor
sbb
or
pop
push
push
cmp
cmp
add
cdq
clc
dec
dec
cld
lahf
test
out
out
aaa
xchg
sbb
xor
(bad)
adc
or
call
and
add
xchg
mov
bound
and
push
fidivr
pop
inc
cmp
cld
cmp
aam
cmp
xor
xlat
daa
clc
push
nop
(bad)
(bad)
out
inc
or
pop
and
addr16
fst
mov
adc
les
lds
adc
and
adc
dec
sahf
inc
mov
inc
add
sbb
sbb
sbb
sbb
and
sub
mov
inc
cmps
mov
(bad)
adc
push
push
imul
sti
add
loopne
sbb
adc
push
pop
lahf
jb
leave
dec
jg
shr
sbb
or
leave
xchg
hlt
rcl
loop
jo
push
dec
ror
lods
xchg
push
sti
pusha
push
jne
mov
or
dec
add
or
and
mov
cmp
jmp
out
push
adc
imul
inc
xchg
sbb
jne
js
sbb
div
mov
push
inc
xchg
hlt
add
cmp
xor
daa
test
push
or
fist
sub
inc
xchg
shr
xor
mov
mov
sbb
push
enter
inc
into
pop
adc
inc
stos
(bad)
popa
(bad)
bound
rsm
mov
cwde
ret
jl
ins
inc
mov
xchg
dec
sub
xchg
je
adc
cmp
or
dec
sub
ins
imul
pusha
xchg
push
xor
mov
jecxz
not
inc
or
xor
call
les
loopne
xlat
push
int3
add
and
inc
push
lea
mov
and
clc
dec
(bad)
iret
mov
push
adc
outs
xlat
dec
add
jmp
add
or
sbb
add
or
push
repz
loope
mov
pop
sub
cmp
xor
mov
add
retf
push
push
mov
xchg
adc
cmps
jo
and
xor
inc
inc
add
popa
add
adc
dec
inc
popa
xor
jae
imul
sbb
or
push
dec
adc
pop
ror
and
mov
mov
les
or
daa
ffree
fld
jb
mov
ret
dec
push
movs
adc
dec
xchg
jno
mov
mov
iret
ds
jae
data16
sti
or
je
mov
jae
cmp
dec
nop
out
imul
push
clc
inc
pop
(bad)
mov
inc
ja
adc
dec
dec
sbb
sub
xchg
xor
icebp
mov
and
mov
mov
int
sub
rol
and
adc
ins
fs
mov
mov
cmp
arpl
pop
test
sub
jne
dec
add
sbb
arpl
(bad)
aam
mov
shr
inc
fs
cs
and
dec
sub
out
adc
and
aaa
nop
das
cwde
sbb
add
pop
mov
mov
add
inc
cmp
lods
seto
and
add
jae
out
fcomp
push
add
ins
jo
(bad)
add
inc
xchg
dec
sub
pop
jnp
mov
jecxz
add
add
dec
xor
bound
inc
xor
xlat
mov
or
push
xor
pop
(bad)
pop
mov
xor
mov
xchg
xchg
nop
push
lods
out
jecxz
adc
out
sub
fs
add
xchg
inc
jo
js
add
push
mov
(bad)
jmp
inc
push
in
stos
mov
push
ins
xor
stos
jmp
or
(bad)
pop
inc
or
dec
or
lock
hlt
bound
pop
pop
pop
mov
sbb
jmp
inc
jmp
rol
test
sbb
imul
xor
add
pop
push
sbb
or
add
aad
xchg
push
bound
xlat
jae
xchg
xchg
or
in
in
mov
mov
loop
movs
aam
adc
add
loope
shr
or
dec
ins
or
add
nop
or
pop
mov
pusha
jne
and
loope
arpl
lea
or
add
xor
sbb
dec
add
cmp
mov
pop
es
sbb
in
les
aam
inc
stos
pusha
cmps
pop
out
icebp
inc
sbb
repnz
pop
sbb
pusha
pop
jmp
or
push
pop
and
mov
or
sub
addr16
push
mov
dec
nop
dec
push
push
lea
test
fs
add
adc
mov
and
jecxz
fs
or
fwait
cs
fiadd
pop
in
ror
pop
pop
add
push
rcl
ja
cs
or
add
or
ret
mov
sub
or
pop
and
lods
pop
rcl
xchg
lds
xchg
loopne
push
pop
iret
adc
pop
or
mov
push
dec
aad
push
aaa
or
aaa
nop
enter
les
xchg
mov
data16
or
fcom
fimul
adc
movs
dec
mov
into
pop
push
push
or
jo
or
inc
fsub
jae
ja
pop
fcmovnbe
and
lods
or
mov
xor
pop
mov
cmp
inc
test
push
sbb
loope
and
cli
sub
cmovo
mov
xchg
dec
cmp
ins
jmp
ret
pop
cmps
cmc
or
stos
mov
rcl
pop
sbb
add
mov
jae
add
push
inc
mov
xor
inc
pop
dec
and
stos
xor
dec
push
lods
pop
adc
(bad)
adc
lahf
out
cwde
or
call
cmp
sti
adc
adc
adc
inc
push
add
adc
mov
pop
(bad)
mov
and
mov
imul
add
and
test
popa
push
popa
cld
pop
mov
cmp
or
xor
fs
(bad)
jmp
xchg
jno
ret
rol
push
int3
adc
pushf
jne
mov
in
add
or
enter
xchg
cmp
mov
dec
xchg
adc
push
xor
cld
dec
test
xor
pop
sub
cmps
xor
(bad)
clc
and
pusha
leave
adc
mov
mov
add
sub
mov
push
call
mov
fld
psubusb
cmp
iret
inc
inc
leave
dec
mov
fcmovne
and
dec
pop
lock
fisttp
jg
les
adc
dec
ficomp
mov
adc
aaa
adc
dec
hlt
rol
cmp
and
scas
jo
push
jle
call
jmp
cmp
add
push
adc
cmps
outs
jmp
ret
clc
dec
sbb
push
gs
les
inc
out
adc
inc
pop
mov
mov
mov
ret
rol
(bad)
push
(bad)
jne
adc
cmps
jnp
xor
mov
pop
or
xchg
in
ret
mov
movs
inc
jl
int
adc
cwde
xchg
mov
xchg
pop
add
xor
popf
xor
sbb
sub
or
fdiv
loope
jae
or
push
jnp
push
jbe
xor
pop
sub
(bad)
rcl
adc
sub
cmp
call
sbb
pop
sbb
dec
jmp
pop
inc
push
xchg
push
ja
sbb
je
mov
xor
and
xchg
sub
mov
xor
push
ins
cmp
fs
push
dec
rol
inc
pop
adc
fcomp
xor
ret
movs
add
jb
push
shl
outs
sbb
lods
pop
xlat
ds
xchg
push
jb
and
add
dec
scas
xchg
push
pop
inc
ds
inc
shl
xchg
in
inc
les
popa
ss
jbe
pop
test
mov
xchg
mov
js
dec
pop
(bad)
daa
adc
movs
pop
and
mov
mov
test
mov
(bad)
popf
out
pop
sbb
movs
jne
push
add
cwde
and
xchg
es
dec
jle
retf
sub
fcmovbe
mov
imul
adc
test
push
cwde
in
jl
xchg
pop
cmp
in
mov
mov
and
push
sahf
pop
mov
fst
and
rcl
inc
pop
inc
je
mov
aam
xor
push
ret
and
test
lea
mov
aam
js
loop
sbb
aam
fs
jmp
or
cmp
xor
sub
(bad)
(bad)
jmp
pop
pusha
nop
addr16
ins
sbb
mov
mov
push
out
clc
dec
pop
push
pop
jae
mov
or
inc
mov
cmp
jne
mov
or
jne
push
pop
inc
into
ss
and
xor
inc
mov
push
adc
xchg
pop
pop
in
dec
shr
jne
and
mov
push
(bad)
cmp
lock
mov
sti
imul
push
adc
mov
lock
push
lock
aam
sbb
and
jmp
jmp
popa
jo
leave
sbb
dec
rcl
or
jne
lock
push
imul
lea
movhlps
fnsave
mul
add
pusha
rcl
or
jg
sub
adc
sub
add
sub
out
mov
xchg
and
ficom
mov
aad
or
rol
add
xchg
call
aaa
(bad)
add
cmp
jmp
bound
(bad)
int3
inc
imul
mov
sti
int
or
stos
sub
sbb
in
add
pusha
dec
es
jmp
jmp
mov
adc
pop
xchg
pop
je
mov
in
es
es
sub
push
mov
jle
xchg
aaa
cmp
sub
cmp
adc
addr16
clc
fisubr
ret
ret
add
mov
dec
aam
mov
pusha
adc
inc
mov
lock
ins
and
push
fcmovb
xchg
push
adc
adc
and
mov
sbb
in
mov
retf
lods
push
test
or
es
push
shl
sub
pop
push
js
inc
xor
pop
jg
adc
and
popa
jnp
adc
mov
xor
push
push
lea
dec
pop
jg
ins
sbb
push
or
sbb
push
cmp
mov
cli
push
imul
jno
lds
cmovne
push
je
les
pop
sar
cs
shl
add
adc
dec
xor
mov
push
cdq
test
adc
sub
or
mov
adc
dec
add
inc
ins
push
das
inc
loopne
test
cmp
inc
jmp
sbb
mov
inc
mov
data16
pusha
les
test
xchg
push
aas
adc
das
pop
dec
ret
lea
mov
dec
and
mov
test
sbb
adc
sub
pop
fisttp
mov
punpcklbw
mov
cdq
dec
push
rcl
ret
test
sbb
sub
sbb
cmps
ss
push
cmps
xchg
add
scas
xchg
add
or
or
push
add
pop
pop
mov
pusha
xchg
lods
lock
xor
xor
rcl
repnz
mov
sub
add
xchg
test
iret
ins
pop
dec
inc
pop
pop
cmp
pop
jb
pop
mov
sub
mov
push
and
dec
xchg
inc
jge
cmp
cmp
jcxz
or
dec
lods
inc
sub
add
loopne
mov
cmp
mov
retf
mov
xor
fcomi
scas
rol
movs
mov
or
jl
push
jo
push
dec
push
xchg
add
or
int3
mov
push
dec
inc
mov
inc
inc
shl
push
pop
mov
add
cmps
sahf
push
push
not
sbb
mov
fisub
rcl
push
jbe
aaa
je
pop
pusha
hlt
or
adc
or
or
jae
cmp
sub
cwde
shl
pop
sub
pop
and
jmp
push
push
pop
lock
mov
jno
push
push
out
in
adc
push
out
xchg
sbb
jno
mov
jle
hlt
add
rcl
xchg
cmps
jmp
push
add
and
sub
adc
es
(bad)
sbb
lods
push
rol
test
xor
push
rcr
dec
rcl
lds
cmp
sahf
push
test
dec
mov
scas
and
inc
lahf
push
jnp
popf
imul
sub
int
dec
(bad)
js
xchg
lods
arpl
dec
movs
aas
aas
xor
or
fstp
ja
and
or
or
xor
out
in
fmul
jbe
nop
add
sub
add
push
or
shl
int
pop
ret
push
mov
fadd
lock
in
dec
mov
nop
xor
movs
mov
jmp
sub
mov
adc
and
add
mov
push
xchg
scas
hlt
add
fsub
sbb
or
iret
addr16
mov
xchg
mov
js
sahf
in
cmp
daa
nop
pushf
mov
xchg
aaa
fs
movs
test
push
lods
mov
cmps
lea
nop
sbb
mov
enter
rcr
xchg
inc
aam
fsub
test
mov
dec
pop
and
test
push
in
fbld
sbb
leave
xlat
jno
nop
mov
add
pop
xchg
adc
and
add
pop
mov
imul
and
pop
lahf
ret
adc
pop
ins
jb
add
adc
mov
push
outs
pop
or
and
pop
xchg
and
pushf
mov
into
nop
jno
pop
ficom
data16
stc
dec
aad
mov
loopne
sbb
sbb
stos
cmp
and
push
and
sub
pop
or
add
adc
mov
jb
sbb
mov
retf
and
jl
nop
fsub
shl
fsubr
sbb
mov
xor
and
jnp
aam
cmps
ret
cwde
mov
adc
jns
in
adc
aas
cmp
loopne
in
pop
push
sbb
xor
pop
loope
cld
(bad)
fstp
mov
ret
cmp
aaa
loopne
stc
jae
pusha
xchg
and
(bad)
mov
xor
or
xchg
add
and
add
mov
push
cdq
cmp
arpl
inc
mov
mov
pop
pop
(bad)
jle
or
ja
mov
sti
or
cwde
inc
push
fs
cwde
clc
push
dec
aam
or
add
repnz
jbe
dec
push
repnz
and
jo
push
xchg
xor
movs
push
or
push
imul
adc
sti
jns
lock
pop
jo
jne
shr
adc
test
and
pop
sbb
cmp
loop
popa
or
mov
xor
pop
push
dec
imul
add
push
dec
xchg
ss
mov
jmp
int3
add
add
repnz
in
retf
mov
inc
inc
mov
sbb
test
(bad)
sub
fs
daa
add
dec
adc
dec
call
and
cwde
fild
fild
dec
mov
out
adc
retf
cwde
aaa
xchg
and
gs
mov
sbb
fild
sbb
add
popf
jge
jo
fistp
push
adc
pop
call
ins
mov
mov
jo
clc
loop
ds
xor
call
inc
mov
arpl
lock
adc
and
cmps
add
(bad)
fadd
dec
sbb
adc
jl
or
push
dec
jmp
js
and
pop
jae
xor
mov
mov
ret
dec
or
sub
add
add
sub
add
ret
sbb
cmps
inc
lock
xchg
push
cmps
mov
jae
sbb
mov
loope
xor
adc
mov
pusha
push
sub
test
jmp
ret
jne
popf
cmp
retf
retf
inc
or
ret
adc
in
aam
repz
cmp
add
cmp
js
add
or
xor
sbb
push
and
adc
stos
movs
sub
mov
cmp
nop
mov
xchg
add
and
jns
pop
rol
dec
adc
or
out
mov
push
push
and
sub
xor
lahf
sbb
or
sub
xchg
ja
loopne
inc
sbb
retf
xchg
xlat
cmp
mov
dec
cmp
add
jp
sbb
mov
pop
push
imul
aas
jge
cmp
jl
add
xor
fimul
fs
clc
or
xchg
add
pop
or
and
rol
or
push
push
movs
popa
or
lea
and
scas
pusha
or
pusha
pop
or
add
inc
inc
popf
or
mov
push
sub
out
inc
or
add
ror
sub
xchg
xor
mov
stos
xchg
iret
not
nop
sub
(bad)
xor
lea
fs
push
or
call
jp
cmp
adc
clc
cmp
jmp
std
and
dec
inc
xchg
ja
out
ret
in
jle
out
push
les
inc
adc
add
lea
xchg
inc
xor
cmps
test
ja
jnp
jnp
jno
mov
mov
sbb
push
ret
or
aaa
mov
sbb
inc
xor
and
xchg
dec
iret
adc
adc
mov
or
add
in
nop
mov
dec
sbb
pushf
daa
mov
ins
sti
dec
lods
int
push
hlt
fmul
adc
imul
cmc
inc
cmp
push
push
xor
shr
bound
nop
fwait
jne
push
push
cmp
add
and
adc
or
loope
add
xor
dec
sub
dec
sub
jg
out
sbb
adc
les
test
pop
(bad)
ins
fs
addr16
push
movs
mov
ja
jle
fadd
push
adc
jb
xor
pop
pop
push
sub
popa
mov
cli
push
nop
cmps
std
test
pop
jl
cs
and
and
push
loopne
fsub
int
int
fadd
aam
int
int
int3
mov
int
les
int
mov
and
pusha
mov
mov
leave
mov
xor
xchg
add
pop
add
xchg
xchg
mov
fs
enter
push
cld
sbb
xchg
add
mov
mov
sub
add
sub
sub
test
inc
pop
cs
test
or
jae
or
fs
pop
mov
test
imul
das
sub
mov
adc
popa
adc
add
inc
xor
fidivr
icebp
imul
inc
int
mov
dec
push
mov
push
and
daa
and
pop
inc
mov
pop
aam
xchg
xor
outs
jnp
cmp
test
push
cs
sub
jno
punpckhwd
mov
movs
imul
or
or
inc
or
inc
out
and
sbb
sub
aam
adc
test
ds
inc
mov
dec
sbb
inc
mov
add
inc
and
push
mov
test
or
dec
push
push
adc
xchg
add
rol
popa
imul
inc
or
adc
mov
pop
dec
rol
popa
sub
or
inc
xor
pop
lds
push
xchg
je
shl
or
je
fwait
inc
xor
pushf
and
adc
inc
jmp
cmc
adc
or
sti
pop
push
inc
or
or
push
dec
mov
add
push
mov
out
mov
cld
fadd
jo
push
push
fimul
mov
xlat
inc
xchg
pop
mov
pushf
outs
mov
inc
adc
add
ds
dec
es
out
pop
jo
dec
push
fisub
outs
(bad)
outs
pop
rcr
pop
imul
cmp
cwde
in
push
lock
clc
pop
in
shl
test
cmp
pop
imul
pop
mov
or
call
cmp
dec
pop
enter
nop
jo
or
in
mov
push
js
pusha
inc
cs
inc
and
shr
or
pusha
ds
push
pop
inc
or
xor
or
in
inc
jno
jno
enter
pop
shr
nop
add
call
or
adc
pop
add
dec
pop
mov
jo
or
pusha
aaa
call
xchg
dec
sbb
inc
sub
test
cmp
push
ins
and
in
rol
dec
push
leave
dec
pop
je
xor
leave
adc
test
push
xchg
pop
pushf
add
add
or
ficomp
push
cmc
adc
inc
leave
mov
push
xor
add
paddusb
popa
add
dec
(bad)
pushf
xchg
push
xchg
ins
mov
push
dec
mov
mov
nop
mov
jbe
or
call
jg
dec
pop
dec
xchg
div
push
sub
sub
dec
lds
rcl
cmp
push
sub
xchg
pop
dec
mov
add
and
add
inc
scas
mov
not
(bad)
(bad)
std
into
mov
jo
sbb
mov
mov
cld
xchg
add
jns
and
test
inc
or
in
ins
add
or
xor
cmp
pop
cmp
lea
add
or
jbe
dec
and
fmul
or
jne
sbb
and
pop
adc
rol
test
ror
adc
or
jg
pop
jo
ja
add
test
jno
cmp
adc
mov
mov
push
retf
and
ror
mov
xor
jnp
push
call
fcmovu
fistp
pop
sbb
sbb
fbstp
dec
test
hlt
sbb
fs
push
sub
les
xchg
sbb
pop
adc
mov
jl
push
test
add
cmps
aaa
push
mov
jl
nop
xchg
cli
out
or
xlat
sub
mov
push
push
or
add
adc
mov
mov
xor
aad
inc
daa
mov
or
push
adc
add
dec
test
or
test
stos
adc
xchg
push
sbb
sbb
and
shl
scas
and
mov
ja
cmp
xchg
inc
add
shr
add
fiadd
into
(bad)
and
mov
push
jp
add
ins
push
and
add
sub
outs
inc
add
adc
pusha
inc
bound
inc
jge
adc
movs
retf
sub
sbb
xor
movs
mov
not
pop
cmp
pusha
das
xor
mov
adc
mov
adc
pusha
test
fisub
cwde
adc
push
add
add
push
add
inc
add
add
dec
das
hlt
or
pop
add
mov
(bad)
inc
mov
mov
mov
mov
and
or
sbb
cmp
rol
cmp
xchg
out
clc
enter
jmp
jmp
jmp
sbb
jmp
jecxz
and
(bad)
fdivrp
(bad)
fdivr
(bad)
fiadd
push
mov
(bad)
(bad)
sar
iret
arpl
add
retf
fidivr
leave
mov
cmps
xor
pusha
mov
ins
push
mov
pop
mov
push
xor
ror
mov
sub
dec
imul
xor
mov
pop
push
sub
dec
rcr
lods
push
(bad)
fdiv
fistp
mov
lods
push
clc
inc
push
mov
ss
adc
scas
sub
fwait
in
mov
mov
push
sub
loopne
movs
movs
lock
mov
xchg
lods
outs
cld
push
test
fwait
xlat
call
mov
lahf
dec
add
pop
test
dec
and
pop
mov
cld
outs
repz
fild
popf
push
lods
xchg
aas
cmp
mov
mov
lock
fs
pop
(bad)
pop
dec
mov
lock
jbe
ds
fmul
int3
cmp
sub
sub
lods
cmps
mov
clc
pop
in
add
push
jp
sub
imul
pop
adc
push
movs
inc
call
inc
jbe
cmc
ds
or
stc
mov
imul
or
ficomp
mov
inc
test
jmp
jne
sub
pop
push
add
cmps
add
lgs
rcr
call
jbe
or
or
adc
outs
xor
adc
mov
fmul
imul
add
or
or
nop
inc
sbb
mov
jae
js
xor
mov
rol
xor
into
in
cmp
or
imul
and
xor
js
add
add
or
(bad)
jns
sbb
stos
pusha
lahf
dec
mov
scas
ins
push
mov
adc
aam
jo
pop
out
mov
add
inc
push
mov
ffreep
and
(bad)
push
xchg
adc
add
icebp
dec
jmp
adc
pop
and
je
pop
mov
aad
test
add
add
add
adc
das
add
mov
push
hlt
fild
sbb
sbb
test
or
add
mov
mov
mov
or
add
popa
sbb
lar
out
sbb
(bad)
jg
repz
and
mov
mov
mov
add
push
mov
push
cmp
dec
jg
add
(bad)
inc
inc
mov
shr
add
pop
add
or
sti
mov
ss
idiv
and
mov
dec
ins
mov
xor
and
inc
push
imul
call
ins
mov
icebp
test
repnz
imul
hlt
cmp
fwait
cmps
fisttp
dec
mov
cmc
out
push
imul
lods
xor
push
pop
call
dec
cmp
cmps
push
pusha
push
jo
rcr
test
jl
cmp
aaa
test
imul
dec
mov
push
or
push
jl
or
je
mov
xchg
pushf
es
imul
clc
cs
xlat
lods
jns
adc
out
pop
movs
pusha
sahf
clc
ficom
popa
inc
pop
in
imul
ins
add
fsubr
dec
sbb
xor
adc
in
ins
mov
fwait
fs
push
rcl
sub
mov
(bad)
cmp
lods
je
inc
pop
aaa
pop
(bad)
(bad)
(bad)
pop
mov
int3
pop
push
add
pop
retf
mov
jne
add
loopne
imul
jo
add
jp
js
lock
adc
lds
cmps
mov
adc
femms
push
sub
xchg
sub
aas
add
mov
movs
pop
call
enter
xlat
push
rol
jg
push
or
imul
sbb
fild
add
rol
ss
scas
not
inc
test
sahf
sbb
test
pop
lods
nop
pop
pop
popf
in
add
add
pop
dec
push
sbb
loopne
scas
dec
adc
sub
ss
push
push
js
add
inc
sbb
mov
add
inc
nop
push
or
sbb
jbe
pop
add
or
push
movs
inc
and
dec
fld
pop
adc
cmp
pop
sub
fmul
add
cdq
mov
mov
mov
xchg
cmp
or
pop
and
ror
inc
hlt
dec
or
mov
outs
pop
pop
(bad)
lds
inc
xor
pop
iret
sbb
ret
dec
adc
cwde
sbb
lods
imul
adc
mov
or
mov
sub
inc
(bad)
push
or
mov
or
pop
sub
xor
dec
sub
push
fwait
pop
in
inc
xor
inc
xchg
xchg
pusha
ins
push
and
sub
adc
mov
shr
push
sbb
push
xchg
into
inc
push
int
in
dec
test
jae
xor
jp
xor
aaa
test
rcl
outs
bound
xchg
add
and
mov
lahf
push
sbb
add
sbb
add
nop
sub
jl
add
and
sub
and
loopne
dec
sub
or
mov
push
and
shl
fucomp
push
jecxz
dec
test
xchg
sub
je
nop
rcr
arpl
mov
jbe
add
ss
das
mov
inc
shl
mov
mov
xor
int3
ss
call
and
xor
ret
bound
out
push
in
push
gs
push
fsub
ss
dec
mov
jmp
lods
popw
xchg
or
and
sub
add
pop
lods
pop
and
add
adc
(bad)
jbe
xor
add
addr16
daa
cmp
pop
sbb
div
or
push
lods
retf
sbb
jo
sbb
add
xor
sub
push
or
pop
and
outs
or
or
inc
or
push
pop
jp
popa
retf
push
int3
push
push
and
mov
and
js
push
add
and
ficomp
dec
adc
or
pop
jmp
sbb
pop
push
push
inc
mov
sar
push
and
inc
in
mov
and
mov
inc
add
popa
retf
jno
mov
js
sbb
icebp
dec
pop
or
sbb
pop
pop
cmp
les
lahf
sbb
push
cmps
push
push
jl
retf
rol
fadd
fld
daa
inc
jb
ja
loopne
push
test
dec
inc
test
fisttp
pop
fild
push
xchg
ss
mov
daa
push
push
loopne
xchg
inc
push
inc
daa
push
jo
and
dec
enter
mov
ins
popa
clts
push
push
dec
mov
dec
outs
dec
les
loopne
daa
dec
push
mov
pop
in
popa
je
push
mov
cmp
mov
push
mov
xor
and
add
mov
inc
lods
mov
xchg
test
out
stc
clc
and
es
adc
add
nop
pop
add
aas
rcl
jmp
or
adc
or
cmp
dec
aaa
push
enter
xchg
ins
lea
test
inc
xor
sbb
jo
inc
fcom
adc
adc
push
or
mov
stc
(bad)
adc
mov
inc
dec
xor
rol
inc
sub
dec
add
mov
sbb
or
push
outs
xchg
ror
mov
movs
adc
inc
outs
or
dec
popa
mov
or
adc
js
dec
movs
fst
(bad)
jbe
inc
sub
push
or
pop
mov
mov
ret
call
xchg
and
cwde
dec
sub
rcl
xor
rol
add
fs
dec
xor
mov
mov
sahf
sbb
into
cmps
mov
inc
sub
cdq
ret
mov
mov
mov
outs
add
inc
or
jne
stos
ret
jg
mov
jmp
jl
pop
les
lock
in
es
adc
or
dec
in
add
push
or
cmp
rcl
nop
jge
(bad)
pop
leave
lea
or
adc
retf
mov
retf
adc
sbb
and
sub
mov
and
sub
sub
or
scas
push
push
nop
jecxz
push
push
pop
add
movs
adc
outs
and
ja
mov
pusha
call
push
mov
sahf
aam
xor
sub
arpl
mov
inc
sub
push
push
popa
fimul
and
sub
or
push
dec
sub
adc
add
push
sbb
bound
ror
outs
outs
adc
outs
fsubr
dec
mov
inc
in
inc
nop
pop
sahf
loope
gs
dec
sub
(bad)
adc
dec
lea
(bad)
or
sbb
(bad)
or
xchg
jne
test
test
movs
adc
push
or
movs
div
(bad)
jmp
or
in
pop
xor
inc
adc
es
add
push
and
or
xchg
out
in
lods
in
push
scas
cmp
pop
xor
inc
dec
test
and
sub
or
cmp
ret
dec
push
outs
push
and
jo
sar
sbb
(bad)
xor
cmps
dec
jae
dec
fistp
lods
adc
push
loopne
add
(bad)
lock
sbb
inc
push
pop
jp
add
inc
retf
dec
mov
sbb
mov
call
xlat
aas
sub
jl
dec
dec
pop
pusha
push
pop
jae
or
jecxz
nop
sbb
adc
inc
inc
push
adc
mov
pusha
mov
xchg
jl
dec
aaa
fiadd
pop
push
push
mov
adc
dec
sbb
ins
push
out
inc
inc
imul
lods
movs
mov
mov
inc
dec
sub
sbb
addr16
cdq
or
nop
in
push
stos
dec
loopne
enter
and
sub
dec
add
pusha
test
jae
and
or
les
add
and
movntps
xchg
bound
xchg
dec
or
and
xchg
xchg
adc
rol
xor
xchg
rcl
scas
and
adc
(bad)
jae
xchg
mov
fidivr
cmps
es
lods
lds
inc
pop
or
cdq
popf
mov
cmp
and
shl
test
sbb
sahf
add
ja
add
inc
inc
adc
mov
sar
jb
std
fcmovnb
push
or
inc
adc
cmp
jne
adc
sub
adc
mov
(bad)
(bad)
mov
jmp
push
add
pusha
test
pop
mov
cmp
shl
push
or
inc
adc
mov
out
repz
jl
adc
jge
cmp
pop
add
les
or
add
lock
or
dec
fisttp
outs
cdq
adc
dec
out
adc
leave
cmp
out
add
push
inc
mov
or
push
add
add
mov
inc
and
adc
dec
mov
les
adc
es
inc
and
arpl
nop
dec
and
pop
popf
push
cli
xor
shl
xor
std
mov
sbb
jb
aad
in
push
aam
sub
mov
jns
mov
lock
or
add
dec
cs
mov
fild
add
stc
iret
xor
push
dec
pop
sbb
pop
cmps
mov
outs
inc
mov
xchg
add
push
cwde
shr
(bad)
xor
ret
rcr
mov
pop
xchg
sub
fcom
jp
xchg
lds
gs
ret
mov
add
gs
push
inc
aas
sbb
push
(bad)
dec
jle
inc
jno
gs
sub
lock
lods
outs
xchg
cmps
mul
jne
add
dec
in
add
mov
fadd
nop
xor
and
and
push
popa
add
mov
add
or
inc
pop
push
sub
and
and
mov
pop
xchg
sbb
dec
popf
or
loop
push
(bad)
cmp
jle
scas
and
xchg
cmp
fcmovbe
sbb
and
pop
out
sub
mov
sbb
add
in
popf
sub
repnz
sar
jno
cmp
aam
inc
dec
arpl
push
sbb
mov
and
das
test
push
(bad)
imul
inc
push
nop
ins
jmp
and
sub
fstp
pop
lods
dec
xor
push
(bad)
jo
movs
inc
rcr
jae
dec
jl
shl
cmps
jne
leave
cld
ret
mov
jmp
or
mul
cmp
push
loopne
arpl
sub
cmps
xchg
and
mov
ins
arpl
and
ret
xor
out
mov
ror
adc
pop
inc
dec
or
ja
jb
cmp
push
mov
adc
jmp
fcom
pop
mov
xchg
iret
cmc
cmp
fsub
popa
cdq
cmp
sbb
out
pop
adc
out
fcomp
outs
sbb
push
cmp
pop
xor
and
sbb
fcomp
mov
push
pop
push
clc
xchg
nop
sub
pop
fistp
test
sbb
rol
push
pusha
sub
mov
loopne
mov
mov
adc
push
loop
jmp
push
xchg
xchg
dec
push
cs
stos
in
or
or
jp
adc
add
adc
add
add
pop
ja
jle
pop
add
dec
and
retf
and
dec
enter
mov
stc
dec
fcomp
out
pop
mov
je
not
or
ins
sbb
ins
sub
je
and
les
ja
or
push
das
push
adc
push
add
add
inc
mov
fimul
mov
mov
cmovae
sbb
xchg
pop
or
lock
cmp
push
mov
std
or
ret
cmp
dec
cmovno
xor
or
mov
pop
or
fldcw
jecxz
sbb
sub
sub
mov
aam
push
sbb
sbb
push
cmp
inc
or
sbb
mov
pop
pop
and
(bad)
fist
scas
pop
dec
ficomp
xor
aam
and
sbb
gs
into
ds
test
addr16
xor
and
xor
sub
(bad)
sub
aad
adc
xchg
mov
js
sub
xchg
(bad)
jg
and
pop
bound
daa
inc
enter
fidiv
sbb
sub
aam
sub
ss
movs
imul
out
inc
sub
xlat
and
(bad)
lea
rcr
push
cmp
stc
dec
and
shl
xchg
mov
adc
scas
adc
and
add
cmp
and
add
and
jns
sub
imul
jge
push
xor
sub
outs
cdq
or
retf
jmp
pop
pop
cmp
mov
or
mov
add
or
nop
movs
mov
pusha
xchg
push
call
bound
cmp
inc
pop
pop
ja
fwait
nop
or
clc
mov
cdq
or
dec
jg
clc
sbb
pop
mov
inc
xchg
arpl
fcom
xchg
leave
pop
outs
pop
sub
les
je
in
dec
jnp
icebp
popf
add
in
push
xor
jne
lea
popa
xor
cmp
push
faddp
add
fwait
and
and
pop
jo
imul
(bad)
sub
cmps
dec
add
inc
dec
cmp
addr16
cmp
loopne
addr16
ret
push
call
pop
(bad)
push
dec
sub
add
pop
add
jb
mov
pop
jno
dec
add
or
aas
clc
test
xor
sub
pop
jmp
mov
pop
test
lock
push
jne
setno
mov
ret
sbb
pop
fwait
mov
and
leave
jb
xor
sbb
jecxz
push
addr16
xor
mov
or
unpcklps
sbb
or
sub
cmp
cmp
inc
xor
adc
jo
lods
and
mov
inc
lahf
and
lods
pop
ret
add
sub
sub
sub
ins
test
cli
jmp
and
or
mov
push
xor
mov
(bad)
aam
adc
adc
sbb
mov
fwait
(bad)
arpl
(bad)
push
pop
outs
je
sbb
sub
adc
les
inc
cmp
call
add
or
cmp
push
icebp
or
rol
fist
mov
cmp
pop
jl
(bad)
pop
mov
add
loopne
push
sub
fist
or
jmp
(bad)
fsubr
add
push
daa
cmp
push
ins
loope
xchg
cmps
ror
mov
add
(bad)
loop
dec
mov
fs
and
not
int
imul
mov
mov
imul
fadd
pop
jo
mov
dec
sub
mov
ret
jecxz
fwait
push
pop
call
mov
daa
imul
xchg
push
pop
pop
xor
in
inc
(bad)
jne
fiadd
pop
mov
lock
add
add
and
xchg
ss
retf
sbb
sbb
dec
sar
add
stos
push
es
lahf
add
shl
mov
inc
xor
add
imul
mov
cmp
sub
push
or
sbb
sub
xor
stc
mov
je
inc
xchg
add
pop
ins
hlt
inc
or
dec
mov
mov
add
mov
jp
xor
cld
das
jmp
mov
mov
sub
sub
mov
enter
cmp
stos
adc
ja
add
hlt
push
test
adc
pop
imul
and
and
std
sub
test
push
or
add
scas
pop
mul
cmp
inc
push
sub
imul
pop
gs
pop
xchg
and
and
sub
fcomp
push
pusha
add
dec
dec
in
adc
xchg
or
enter
pop
add
shl
ja
clc
mov
(bad)
daa
aaa
test
rol
out
pop
push
pop
pusha
icebp
cmp
push
sar
sbb
(bad)
int
adc
jns
fsubr
jo
pop
nop
stos
(bad)
xchg
outs
sub
pop
add
fnstcw
sub
xchg
ins
xlat
jne
adc
and
push
adc
or
or
mov
mov
xchg
push
(bad)
sbb
xchg
int3
test
call
jbe
dec
or
or
mov
pop
popf
(bad)
jge
cmp
push
pop
repnz
sub
adc
pop
fimul
out
aaa
shl
sar
repnz
pop
je
cmp
cs
push
xchg
xchg
test
(bad)
in
mov
and
sbb
push
psubw
(bad)
in
in
or
mov
inc
outs
dec
mov
and
jbe
out
loope
and
fs
cmp
xor
dec
dec
inc
adc
es
out
xor
cmp
push
in
add
xchg
and
sbb
je
or
jp
lock
adc
mov
jae
or
xor
leave
or
ja
push
cmp
mov
(bad)
jecxz
mov
xchg
in
sbb
dec
enter
sub
and
fwait
sbb
xchg
pusha
fnsave
xor
daa
fs
add
pop
enter
sbb
jecxz
or
outs
das
xchg
or
fist
add
dec
and
xor
sbb
fs
retf
add
daa
syscall
mov
xor
mov
adc
cmps
jbe
sub
dec
arpl
iret
inc
ret
or
icebp
push
jne
mov
xor
loop
xchg
jne
cmp
pop
sub
or
stos
scas
cmp
nop
stc
adc
push
nop
and
cmp
fwait
cmp
sar
mov
push
xor
or
push
dec
or
mov
sub
mov
mov
cmp
adc
xor
retf
inc
popa
mov
call
mov
sbb
test
add
mov
inc
add
push
and
hlt
ja
adc
push
pop
add
jp
jmp
pop
or
sub
adc
jno
int
jo
inc
push
arpl
lds
xchg
in
cmp
jne
and
(bad)
add
mov
xor
mov
in
ins
sub
xor
das
repnz
je
push
fs
push
or
and
cmp
push
arpl
fadd
and
and
outs
push
mov
push
ret
ins
xlat
clc
les
(bad)
rcl
mov
xor
cmp
lds
aaa
push
cmps
dec
or
pop
sbb
pop
test
pusha
pop
test
test
(bad)
test
pop
pop
fnstenv
pop
sbb
and
rdmsr
pop
dec
push
pop
pusha
sbb
cmp
pop
enter
ins
mov
sub
inc
xor
adc
inc
mov
sar
mov
dec
call
cdq
and
stos
add
pop
mov
dec
cmps
psubd
jle
aaa
mov
dec
dec
push
or
xchg
xchg
mov
adc
push
arpl
push
lods
rcl
je
ret
mov
sbb
push
pop
add
mov
ret
pop
mov
and
fisub
stos
or
jge
xchg
rcl
sub
cwde
adc
xchg
arpl
jo
jge
and
mov
pop
push
cmp
xlat
push
je
pop
or
out
test
pop
xor
out
add
ret
pop
shl
daa
daa
mov
mov
and
add
inc
dec
push
pop
dec
add
test
or
push
or
adc
rcl
add
fnsave
add
or
jg
pop
inc
ja
jnp
test
push
or
dec
and
adc
push
mov
dec
mov
mov
inc
hlt
lods
or
sbb
fstp
lods
push
push
jnp
popa
repnz
jo
and
pop
cmc
pop
xchg
cmp
mov
test
xchg
dec
sub
mov
mov
mov
or
push
xchg
jecxz
mov
xor
(bad)
mov
dec
das
inc
fidiv
inc
mov
adc
and
repz
mov
adc
pop
mov
imul
jns
push
(bad)
and
(bad)
xchg
jle
movs
cwde
les
jmp
popa
adc
test
or
sbb
inc
dec
das
fdiv
mov
push
dec
xor
and
das
xor
mov
nop
loopne
(bad)
(bad)
rol
push
ds
ins
bound
inc
push
inc
dec
add
xchg
dec
jae
push
jbe
xchg
push
inc
or
icebp
pop
ret
pop
or
movs
cmp
and
and
cmp
and
adc
imul
xor
movs
dec
lahf
call
imul
xchg
(bad)
xor
in
in
icebp
fisubr
cmp
cli
clc
dec
and
jecxz
loopne
push
bound
or
push
push
shl
test
mov
push
pop
repnz
pusha
push
jmp
jno
mov
inc
or
push
pop
ins
fdiv
(bad)
sub
sbb
test
jmp
mul
or
inc
inc
or
xchg
mov
shl
mov
loopne
mov
adc
sbb
into
dec
sbb
xchg
jo
je
mov
dec
dec
rcr
(bad)
mov
adc
xor
cmp
call
push
test
adc
je
mov
push
or
xchg
mov
stos
add
add
add
xor
mov
xchg
icebp
or
imul
add
mov
adc
shr
pop
mov
sbb
retf
enter
add
sbb
inc
movs
or
inc
ss
mov
add
sub
sub
or
inc
add
and
cmp
sub
inc
xchg
movs
and
in
test
movs
loopne
jne
adc
sub
sbb
sub
add
mov
mov
jmp
int
inc
jnp
mov
mov
dec
push
xlat
daa
ret
or
enter
mov
in
cmp
pushf
pop
rcl
jmp
into
das
sbb
les
pop
mov
sub
inc
adc
xor
cmps
xlat
xor
cdq
add
add
inc
fwait
rcr
add
dec
xor
dec
adc
fnsave
add
pop
inc
fidiv
xor
imul
in
or
or
push
fmul
or
cld
test
pop
and
pop
fimul
pop
gs
(bad)
lea
xchg
pop
pop
nop
add
push
dec
xchg
push
lsl
sbb
cdq
mov
rol
push
mov
jo
nop
mov
arpl
push
or
adc
push
rol
and
(bad)
or
loop
jb
pop
ret
cmps
aad
add
ret
jg
(bad)
cwde
test
je
lock
sar
mov
rol
lods
push
out
add
or
js
and
sbb
cmp
mov
arpl
and
xchg
mov
cdq
inc
cwde
(bad)
movs
sbb
mov
adc
cli
ins
aaa
test
cmp
add
sbb
cmp
inc
call
js
jp
loop
sub
fdiv
or
xchg
cmp
inc
cmp
pop
push
je
in
int
pop
cmp
fld
or
mov
test
xchg
xor
push
mov
rcr
add
or
outs
sbb
mov
inc
sbb
sbb
daa
test
or
jl
adc
aam
mov
hlt
or
ds
cld
dec
xor
sbb
mov
je
and
add
mov
gs
dec
mov
data16
iret
add
cmp
xchg
pop
fadd
mov
(bad)
or
and
push
clc
outs
pop
je
or
inc
pusha
add
and
xchg
cmp
mov
pop
pop
add
mov
adc
fcomp
mov
push
xor
jp
daa
mov
add
or
jmp
sub
cmp
adc
pusha
adc
pop
je
mov
cmps
lods
dec
adc
ret
cdq
pusha
jne
aas
or
nop
cdq
data16
pop
cwde
mov
(bad)
mov
dec
and
sub
setnp
pop
xor
push
jo
leave
ret
sbb
pop
or
das
pop
pop
pop
xchg
leave
repz
dec
or
pusha
sti
js
dec
cmp
data16
(bad)
xchg
fnstcw
seta
xor
cmp
pop
pop
mov
mov
jmp
mov
jbe
xchg
out
or
mov
xor
stc
ins
ror
and
pop
jo
es
pop
pop
xor
xor
cwde
add
xchg
mov
and
inc
sub
inc
cmc
mov
or
shl
lahf
icebp
leave
je
shl
int3
call
push
in
rcl
ret
leave
inc
and
pop
adc
sahf
nop
push
adc
push
mov
call
dec
in
bound
xor
pushaw
daa
adc
pop
stos
push
mov
pusha
jmp
jecxz
jle
dec
ja
test
ss
cmp
inc
sti
imul
add
lods
sub
aam
inc
push
ins
out
pop
dec
cli
xor
lahf
or
fwait
jg
xchg
aaa
push
and
add
and
xchg
imul
or
push
mov
or
sub
or
add
xor
jne
pop
sbb
mov
cmp
test
xor
adc
out
rcr
sub
(bad)
pop
xor
cmps
mov
adc
cdq
xor
iret
push
mov
pop
xchg
add
dec
pop
mov
test
xchg
ret
gs
sahf
sub
outs
add
xor
mov
dec
pop
mov
and
pop
cmps
pop
adc
call
aaa
enter
inc
adc
inc
(bad)
call
and
cmp
sbb
push
xor
sti
pop
rol
xchg
bound
mov
test
xor
retf
sub
repnz
das
add
push
push
mov
inc
mov
aaa
add
adc
mov
push
icebp
test
and
jo
fnstcw
scas
xor
fs
test
jne
imul
push
jns
loopne
mov
lock
mov
sub
dec
or
outs
xchg
mov
movs
ja
xor
setle
add
ds
mov
repnz
bound
and
sbb
push
lock
sbb
add
sahf
push
jmp
pop
mov
cdq
adc
and
push
jb
xor
sbb
loopne
push
imul
add
mov
jne
mov
dec
imul
cmp
iret
or
call
dec
and
inc
or
loope
fsubr
mov
ret
cmp
adc
ror
xchg
test
pop
dec
ficom
or
outs
add
outs
(bad)
jae
add
sub
inc
sbb
mov
and
and
xor
mov
dec
push
mov
jmp
rcr
add
adc
ret
mov
or
mov
pop
xchg
ror
scas
mov
mov
call
idiv
inc
int3
pusha
jl
push
loope
ss
push
sub
test
(bad)
or
jne
add
leave
pushf
rol
enter
xor
js
cmp
fild
sbb
jp
dec
pop
cmp
imul
(bad)
xchg
(bad)
popf
mov
js
xchg
mov
adc
inc
jmp
dec
scas
mov
imul
or
xor
mov
pop
adc
xor
dec
dec
xor
inc
adc
test
ins
xor
aaa
pop
sbb
mov
or
inc
or
mov
and
push
sub
cmp
imul
pusha
mov
pop
push
call
mov
ret
cmp
push
pop
add
inc
jbe
in
in
fld
cmp
(bad)
aaa
call
sub
fs
add
aad
inc
in
push
xor
inc
add
ror
sub
mov
adc
mov
fsubr
pop
test
add
inc
wrmsr
cli
in
outs
or
add
loopne
fadd
sub
mov
call
ret
mov
cmp
inc
jge
enter
inc
add
pop
sub
pusha
cld
add
cmp
sbb
sub
test
dec
daa
inc
ffree
retf
pop
adc
inc
mov
fimul
test
mov
leave
mov
push
sbb
pusha
xor
leave
xor
movs
cmp
xchg
add
aas
lea
test
fnsave
cmp
fsub
adc
pop
nop
push
cmp
inc
test
jmp
dec
sbb
cmc
push
fsubr
xchg
push
inc
pop
scas
fdivr
and
inc
mov
xor
inc
inc
aas
push
inc
fist
enter
add
cmps
jns
int3
sti
jle
inc
and
jmp
inc
inc
test
test
sbb
jl
ins
sbb
dec
inc
add
xchg
mov
stc
and
jnp
jnp
hlt
sbb
test
push
or
sbb
rcr
push
sbb
jo
add
(bad)
retf
or
aad
adc
pop
adc
js
jne
popf
out
or
pop
(bad)
add
movs
loop
loopne
in
mov
repnz
add
add
out
add
cmp
clc
mov
xor
and
mov
clc
les
test
push
jo
dec
sbb
xor
arpl
push
(bad)
inc
sbb
cdq
pop
add
test
xchg
das
call
outs
add
push
rcr
and
push
popf
mov
test
pusha
or
dec
xor
xor
into
adc
inc
rcr
lds
push
pop
movs
inc
or
rol
or
loopne
sbb
mov
add
fld
pop
xchg
fcmovnbe
cdq
xor
and
lods
push
mov
fwait
pop
jg
ror
adc
adc
retf
and
push
cli
data16
push
sbb
or
inc
push
sar
jle
cmp
pushf
je
syscall
adc
or
jp
pushf
push
mov
jne
ss
je
sbb
sub
add
xchg
add
mov
add
push
sub
sub
xor
and
or
and
or
pop
cmp
ret
adc
outs
adc
shl
and
lahf
cwde
adc
mov
jmp
cmp
fsubrp
sub
jge
rol
mov
pop
or
pop
jmp
sub
ret
and
push
add
push
or
mov
and
ins
pusha
cwde
icebp
or
and
movs
imul
adc
sbb
fdivr
icebp
jecxz
mov
sub
lock
cmp
mov
call
inc
jmp
fimul
inc
and
inc
dec
fwait
mov
xchg
aam
and
sub
dec
dec
pop
mov
mov
push
fnstenv
add
out
and
(bad)
inc
push
stos
enter
lea
inc
popf
sbb
(bad)
test
and
mov
add
es
aaa
xor
mov
gs
push
(bad)
lds
arpl
jle
add
cmp
rcl
push
xor
inc
rol
sub
add
shr
das
scas
rcl
pop
jmp
inc
shl
or
or
pushf
lock
pop
add
out
lahf
fisubr
xchg
push
add
jle
push
(bad)
jmp
lods
pop
adc
adc
enter
retf
adc
inc
sbb
push
add
nop
or
int3
fcmovbe
add
rcr
sub
dec
adc
add
push
sbb
or
dec
add
and
pop
xchg
in
or
inc
jmp
test
sbb
addr16
outs
ficom
shl
xchg
add
rol
loopne
dec
xor
inc
das
aas
sub
push
or
xor
inc
popf
clc
xchg
sbb
jb
push
sub
adc
cdq
cmp
icebp
outs
pop
mov
mov
or
cmps
inc
test
por
enter
adc
cmp
dec
adc
cmp
inc
inc
add
mov
pusha
fsubp
push
adc
iret
pop
pop
lahf
cmp
call
or
je
xor
sub
mov
popf
xlat
nop
sbb
add
cmp
xchg
mov
sahf
add
mov
arpl
add
pop
inc
cmp
(bad)
xor
jp
add
ficomp
std
retf
cmp
add
cld
shl
std
add
mov
sbb
and
jle
frstor
cld
dec
push
mov
mov
enter
aad
mov
fwait
sbb
adc
mov
ss
in
lods
aad
call
xchg
mov
or
retf
or
mov
or
aaa
mov
sbb
jb
rcl
fstp
mov
push
xchg
xlat
dec
jmp
mov
retf
jmp
mov
add
into
bound
mov
rcr
add
fsub
dec
mov
das
idiv
push
dec
xor
push
icebp
bound
fsubr
les
dec
pushf
add
cs
cdq
je
xor
and
ret
retf
push
test
mov
imul
dec
or
inc
lods
ficomp
aam
cld
les
outs
push
jmp
xor
push
(bad)
vprotw
mov
jno
lahf
dec
or
xchg
cmp
jp
(bad)
(bad)
clts
cmp
pop
aam
or
sbb
or
sbb
xor
mov
sub
je
xor
shl
cwde
xor
call
push
dec
dec
push
rol
icebp
sbb
mov
inc
sbb
in
rol
jmp
inc
ins
push
dec
mov
push
xchg
mov
inc
aas
xor
xchg
and
pop
and
cdq
push
push
daa
mov
imul
inc
mov
add
mov
es
or
sub
test
mov
dec
add
xor
das
adc
ret
pop
ret
and
and
pop
outs
mov
xchg
(bad)
addr16
jle
je
sar
(bad)
jbe
cmp
jge
and
adc
daa
outs
ror
jle
adc
or
mov
dec
or
dec
sbb
ret
es
je
mov
add
bound
arpl
test
jl
sbb
mov
or
jo
push
and
fiadd
cmp
jb
fs
jmp
push
sbb
push
fsubr
mov
and
mov
out
hlt
sahf
add
and
push
jp
inc
or
sub
or
dec
dec
test
ret
adc
daa
or
jb
or
test
dec
pop
push
mov
popa
sbb
ficom
dec
loop
mov
push
aad
inc
es
rol
push
fs
mov
das
or
and
popf
add
xchg
and
cmps
in
(bad)
(bad)
out
pop
mov
inc
fsub
push
xlat
in
pusha
pop
push
in
sbb
or
scas
int3
dec
push
xchg
pop
inc
loop
xor
aaa
mov
ret
cmp
xor
sbb
mul
sub
cmp
adc
sub
dec
(bad)
sub
mov
mov
mov
gs
inc
adc
adc
sub
test
fsub
test
or
mov
mov
rcl
inc
sub
pop
cmp
xor
imul
inc
dec
pusha
or
pop
mov
xor
cmp
xor
ret
add
imul
inc
movs
lock
push
add
add
cld
pushf
and
add
shr
aaa
sub
adc
bound
mov
xor
sbb
sub
in
jne
adc
dec
xchg
pop
inc
or
aaa
mov
xlat
in
(bad)
nop
xlat
stos
inc
mov
jno
test
xchg
xor
pop
in
mov
clc
fcomp
sbb
mov
push
fsubr
and
cmp
frstor
lods
mov
cmp
ror
cmp
push
lods
mov
movs
mov
dec
mov
xchg
mov
and
inc
and
lock
(bad)
outs
add
daa
mov
cwde
leave
popf
xchg
jno
(bad)
inc
leave
rcl
sub
xor
pop
leave
push
or
sti
push
test
sbb
adc
sub
(bad)
adc
in
cdq
push
gs
test
inc
xlat
inc
mov
nop
mov
dec
xchg
inc
and
adc
test
scas
xchg
mov
inc
pushf
or
adc
sbb
(bad)
adc
fiadd
dec
jne
jne
aas
cs
ret
jo
js
shl
add
adc
mov
in
fild
scas
jns
mov
add
ins
cmp
push
add
jmp
lock
dec
call
sub
sub
das
dec
stos
add
xor
xor
and
add
xor
and
outs
and
sbb
mov
dec
je
add
jmp
in
mov
inc
jecxz
push
cmp
and
sbb
into
mov
mov
jbe
in
mov
add
push
dec
push
pop
dec
xor
dec
fst
push
or
out
and
lea
cmp
add
aaa
add
clc
inc
add
lods
pushf
or
daa
adc
sbb
stos
or
in
int3
xchg
paddusb
jo
inc
gs
outs
cmp
mov
ret
inc
and
aaa
aam
xchg
ror
(bad)
les
xchg
(bad)
push
mov
lea
push
sub
inc
scas
adc
(bad)
outs
pusha
mov
cli
mov
add
or
mov
jmp
imul
sbb
lea
fstp
xchg
or
inc
sbb
(bad)
sbb
popa
dec
inc
out
mov
or
jne
xor
outs
call
cmp
ror
sbb
mov
inc
xchg
cs
or
and
dec
xchg
xor
or
inc
mov
or
xor
xchg
adc
daa
sub
data16
or
xor
mov
adc
cdq
adc
add
pusha
sub
ja
push
inc
jmp
iret
cwde
and
fisubr
xor
inc
jnp
add
aad
jb
arpl
sar
fldcw
push
push
jmp
jp
imul
jl
pop
mov
mov
jl
and
rcl
push
or
mov
ror
xchg
push
jnp
push
pop
lods
cmp
jno
mov
mov
retf
fs
fstp
sbb
xchg
adc
push
fbstp
and
jecxz
mov
xor
lea
ficomp
xchg
aas
xchg
mov
call
push
fstp
or
(bad)
jbe
inc
mov
(bad)
leave
outs
outs
fadd
sbb
dec
fwait
mov
shl
adc
mov
ins
jge
es
mov
int
movs
mov
or
sub
adc
dec
mov
adc
lods
sbb
xor
mov
ficom
pop
ja
pop
jge
mov
push
jecxz
addr16
shr
out
ins
or
inc
jnp
and
pop
repz
inc
out
sub
add
imul
lods
dec
ins
or
pushf
fs
ins
(bad)
int
jle
lahf
mov
jecxz
mov
ds
cmp
mov
outs
dec
bswap
and
xchg
dec
pop
mov
push
mov
enter
(bad)
ja
jmp
ins
mov
sbb
xchg
mov
cs
out
inc
sahf
and
or
mov
inc
cmp
xchg
mov
push
lea
rcl
popf
es
scas
pop
mov
inc
sti
lods
cmp
cdq
sbb
nop
xor
cmp
pop
mov
jae
jne
adc
pop
and
dec
in
dec
call
mov
or
xor
mov
pop
retf
loopne
pushf
inc
push
sbb
sub
dec
shl
in
fstp
inc
adc
adc
push
mov
call
mov
push
aaa
hlt
jmp
xor
lds
or
(bad)
int
loop
mov
mov
enter
mov
cmp
in
aaa
lock
nop
arpl
add
mov
pushf
xchg
cmp
loopne
inc
xchg
fs
lds
call
inc
sbb
fs
movs
int
jne
dec
movs
adc
mov
or
or
cs
aaa
jl
push
push
pop
add
cmp
ins
adc
add
call
pop
add
mov
add
and
lds
adc
mov
pop
cli
mov
call
and
dec
(bad)
daa
dec
xor
jns
cmp
sbb
aas
mov
lods
or
fs
add
jmp
sbb
or
xchg
push
movs
push
push
cmp
shl
add
rcr
dec
mov
test
enter
xor
leave
sub
(bad)
shl
dec
lods
fimul
and
movs
punpckldq
mov
inc
cli
rcl
xchg
sbb
call
inc
pop
push
mov
loope
xlat
sub
jno
inc
push
daa
or
jo
ins
adc
inc
cmp
cs
add
mov
pop
hlt
lock
jne
add
mov
and
sbb
cmp
cli
sbb
cmp
jne
test
test
dec
inc
xlat
pushaw
dec
sub
sub
add
cmp
sbb
jo
pop
push
cli
out
cmp
leave
sub
pop
xchg
adc
mov
or
dec
or
dec
cmps
pop
shl
push
hlt
inc
test
and
sub
fnsave
aam
cmp
leave
add
mov
fimul
xor
test
mov
jno
mov
int
into
jbe
loope
push
jmp
imul
add
es
movs
or
(bad)
mov
ja
lods
sub
(bad)
test
or
cmp
jno
movs
popa
xchg
xlat
and
mov
mov
adc
mov
fild
cld
jmp
enter
mov
aam
lds
inc
cmp
xchg
or
mov
cwde
push
mov
and
dec
sub
mov
pop
and
add
or
add
push
js
add
jne
dec
leave
dec
retf
(bad)
and
mov
xchg
das
push
dec
ins
fisttp
sub
pusha
prefetcht0
add
repz
jb
xor
js
or
mov
inc
cli
(bad)
pusha
push
out
inc
imul
rcr
out
xchg
faddp
js
adc
shr
push
jg
add
rol
hlt
add
nop
fwait
hlt
cmc
retf
inc
rol
adc
fnop
rcr
or
rcr
push
push
and
cmp
hlt
std
rcr
xor
adc
shl
sub
inc
pop
cld
retf
or
arpl
sbb
in
add
lahf
pusha
movs
sbb
jmp
add
cs
test
inc
popa
jae
xchg
xor
outs
adc
mov
cmp
mov
jl
mov
ror
loopne
out
call
jg
dec
add
dec
adc
adc
dec
xor
lods
mov
xor
pop
(bad)
fucomi
enter
fsubrp
inc
pop
xor
fst
mov
adc
daa
add
setnp
inc
mov
sar
jecxz
or
sbb
je
and
imul
push
xchg
not
sbb
sbb
(bad)
mov
test
xor
add
inc
pop
mov
repz
mov
add
es
and
mov
rol
mov
(bad)
xchg
outs
sbb
stos
add
xor
dec
push
add
dec
ss
add
mov
mov
(bad)
jmp
lds
(bad)
mov
xor
dec
sahf
cmp
push
dec
add
test
dec
or
jne
aam
xlat
and
movs
or
rcr
idiv
movs
lods
sub
cvtpi2ps
xchg
and
imul
and
add
sbb
adc
and
xchg
call
xor
call
push
enter
ss
sub
movzx
and
retf
in
or
jbe
jae
aas
xchg
es
mov
lea
xchg
(bad)
xchg
out
xchg
fsub
daa
nop
enter
pop
dec
push
fistp
mov
call
enter
dec
adc
xor
mov
pop
unpcklps
in
and
lock
mov
push
lds
sbb
push
dec
and
add
or
cmp
cmp
push
sub
mov
fimul
je
rcl
jle
inc
and
cmp
add
mov
inc
cli
sub
add
push
ret
inc
aaa
mov
sub
cmp
outs
ins
stos
push
dec
retf
mov
pop
repnz
or
inc
adc
lock
hlt
and
fnsave
nop
inc
pusha
jo
add
ficomp
add
xchg
sub
cmc
and
cmp
inc
xor
xor
stos
dec
add
and
dec
or
dec
xor
pop
xor
jae
cmp
mov
add
or
xacquire
rcl
add
xor
inc
cwde
add
js
nop
aad
test
movs
cmp
fwait
daa
and
iret
bound
nop
jmp
xchg
test
push
sub
sbb
xchg
inc
cwde
sub
inc
push
mov
clc
add
aaa
mov
pop
mov
dec
or
test
or
mov
or
frstor
inc
push
mov
(bad)
mov
push
mov
cmp
cwde
sub
loopne
lock
mov
inc
out
mov
fadd
nop
add
test
add
add
(bad)
add
ret
repz
sub
out
or
or
inc
or
cwde
add
add
test
out
sub
(bad)
in
pop
sbb
inc
bound
and
sbb
iret
pushf
dec
popa
pop
push
gs
sti
and
ret
sbb
cmp
inc
adc
fst
or
sub
icebp
adc
pminub
add
fcom
das
mov
mov
lods
popf
dec
sub
(bad)
scas
icebp
cmp
cmp
mov
adc
dec
jns
lea
or
add
xlat
pop
dec
adc
push
and
shl
les
(bad)
aad
mov
mov
xor
retf
iret
neg
imul
and
ja
xchg
sbb
lock
jmp
pusha
fcomp
aam
or
pusha
mov
ret
je
pop
pop
xchg
push
popa
sbb
mov
add
jne
sbb
cmp
sub
cmp
movs
and
lods
jne
jo
xchg
je
pop
xchg
add
repnz
sub
pop
mov
fimul
sub
(bad)
xchg
add
(bad)
lahf
push
add
mov
repz
pop
dec
fisub
cmp
jl
(bad)
test
adc
push
imul
movs
(bad)
in
(bad)
mov
es
inc
mov
lods
adc
sub
ins
in
nop
pop
xchg
xor
out
cmp
outs
je
and
jbe
and
sbb
push
inc
mov
sub
test
int3
shl
and
and
sbb
mov
mov
xor
ret
pop
(bad)
adc
je
retf
and
ror
adc
add
or
xor
lea
xor
imul
sub
call
je
xchg
adc
lods
in
add
sbb
imul
inc
add
jbe
xor
jnp
jmp
or
ins
or
mov
inc
xchg
(bad)
(bad)
cmp
adc
(bad)
mov
mov
je
aad
sar
jbe
arpl
mov
loopne
cmp
jbe
dec
sbb
mov
cmps
mov
mov
cmp
inc
daa
ins
mov
xchg
pop
jmp
adc
add
add
ficomp
aaa
sub
xchg
bound
ss
or
inc
jne
or
pop
dec
clc
add
mov
push
inc
les
cmp
inc
movs
mov
sti
push
push
add
adc
popf
outs
push
call
pop
pop
cmp
ins
and
push
xor
mov
popa
xchg
hlt
ror
mov
cmc
(bad)
dec
xchg
push
sbb
jmp
cld
dec
and
mov
dec
cmc
mov
imul
mov
and
add
or
pop
jnp
clc
daa
ins
cwde
nop
cwde
mov
adc
add
mov
xor
pop
dec
adc
cmp
mov
push
sbb
adc
addr16
xchg
cmp
or
test
mov
sub
adc
inc
xchg
mov
or
push
inc
push
jecxz
popa
and
push
aaa
push
push
cmp
jmp
popa
xor
pop
movhps
jmp
outs
jmp
js
lea
pop
add
mov
xchg
add
test
mov
or
jno
cmp
fild
jb
push
rol
mov
mov
icebp
test
sub
mov
jecxz
mov
or
test
push
inc
jmp
in
sahf
push
popf
inc
jmp
sbb
xchg
xchg
mov
inc
sbb
sub
inc
cwde
and
ret
fwait
retf
jns
mov
xchg
fnstenv
jecxz
mov
(bad)
jnp
jle
(bad)
mul
dec
xchg
fs
mov
test
pop
rcl
into
jno
mov
pop
cs
add
imul
or
add
cs
data16
mov
imul
clc
mov
and
sub
cmp
cmovno
jae
pop
cmp
push
adc
pop
jecxz
mov
mov
(bad)
or
sbb
aam
xor
sub
sahf
nop
shr
cwde
pop
rcl
(bad)
sbb
test
ret
sbb
call
jecxz
jb
cmp
xchg
rol
push
dec
adc
and
fcmovbe
in
push
lock
adc
or
push
dec
mov
cmp
popf
pop
xchg
fnsave
and
test
ins
xor
mov
je
fst
jge
or
xor
dec
pushf
jmp
push
lock
adc
inc
xor
jp
adc
xor
setl
xor
adc
loop
rol
xchg
mov
or
enter
inc
pusha
or
pop
inc
pop
les
ret
pop
mov
mov
sbb
pop
ror
pop
xchg
push
sbb
cmps
shl
inc
es
dec
xchg
packuswb
adc
cmps
cmc
push
add
inc
or
cli
lea
pop
push
jmp
mov
jb
mov
or
add
rcl
es
adc
adc
or
xor
push
cwde
lea
jl
push
push
sub
in
mov
shl
dec
inc
xor
mov
add
mov
lock
jp
(bad)
inc
cmp
mov
push
mov
pop
pop
sar
xor
test
enter
mov
sbb
fldenv
jnp
push
fidivr
mov
jb
or
dec
or
pushf
aam
xor
adc
jmp
js
mov
inc
and
mov
test
or
mov
and
ror
push
(bad)
in
add
add
xor
fs
retf
in
add
add
and
sbb
movs
mov
inc
add
push
xchg
pop
mov
je
(bad)
sbb
ror
sub
jbe
push
sub
pop
repnz
mov
sbb
fwait
cmp
adc
push
jmp
inc
add
jo
lock
shl
push
into
sub
jecxz
mov
pop
xchg
xor
cwde
call
xor
sub
rol
enter
sbb
iret
into
in
jns
dec
pop
push
jge
mov
pop
sbb
add
push
push
xor
push
fsubr
mov
pushf
xchg
dec
mov
sahf
sbb
mov
lock
out
push
adc
pop
and
jns
repz
lea
sbb
pop
aaa
test
and
loop
add
xchg
shl
xchg
and
inc
ret
cld
test
adc
test
xor
adc
lods
ss
push
pop
dec
and
test
test
and
jbe
and
daa
pushf
sub
inc
daa
addr16
add
push
pop
adc
add
push
stos
int3
mov
xchg
xchg
cmp
ins
sbb
fst
sub
mov
retf
sahf
adc
xor
movs
mov
mov
fldl2t
pop
ss
jmp
or
addr16
sbb
dec
dec
push
(bad)
add
pop
xchg
or
invd
pop
mov
repz
pushf
out
loope
fst
sbb
ins
inc
xor
movs
fs
sbb
rol
cmp
loopne
dec
sbb
lods
out
in
cmp
adc
fist
push
adc
aaa
push
push
pop
or
xchg
and
ret
adc
inc
leave
sbb
es
push
popa
add
xchg
mov
xor
(bad)
xor
(bad)
inc
cld
and
call
jo
adc
das
jp
mov
fld
js
push
(bad)
push
push
ret
xchg
stos
adc
or
cmp
loopne
nop
ja
inc
jnp
xor
xlat
mov
imul
add
sub
pop
xor
sub
sbb
pop
popa
sub
ins
jmp
dec
sbb
push
sub
les
pushf
daa
jl
push
fnstcw
fisubr
xchg
sbb
dec
dec
(bad)
xor
xor
pop
scas
pop
jmp
cmp
outs
mov
add
inc
mov
ins
mov
scas
sbb
icebp
inc
shr
je
shl
ror
jo
cmp
scas
or
push
dec
adc
cmp
aas
inc
push
es
mov
test
or
leave
or
mov
call
adc
popf
test
or
and
mov
fs
mov
or
pop
pop
mov
icebp
xor
and
mov
int
nop
rcr
adc
leave
xor
enter
nop
mov
fs
xchg
pop
cli
sub
icebp
jl
push
add
call
push
pop
jmp
mov
xchg
push
data16
sub
fwait
test
mov
inc
sub
lea
scas
sub
adc
inc
adc
xor
ds
ret
das
sbb
test
add
inc
stc
repnz
cwde
out
iret
push
hlt
mov
call
add
mov
add
scas
and
lds
inc
pop
push
adc
movs
add
xor
inc
push
xchg
ror
sub
movs
aaa
adc
pop
sub
or
ret
inc
xchg
xchg
sub
cmp
add
aam
pop
mov
push
xchg
(bad)
movs
mov
neg
jbe
lods
fcmovnb
sbb
cmc
add
in
push
xchg
sub
mov
xor
data16
push
daa
adc
sbb
cdq
dec
adc
cmc
xchg
out
or
xchg
mov
jo
sbb
(bad)
xchg
mov
(bad)
dec
and
pop
cmp
sbb
sub
lahf
xchg
inc
imul
xchg
rcl
cmp
bound
inc
mov
and
repz
in
and
stos
sbb
sub
sbb
push
(bad)
jno
and
adc
and
mov
jg
mov
cmp
add
xchg
dec
sbb
add
push
sub
or
push
hlt
adc
mov
xor
pop
mov
cld
sub
xor
test
push
push
pop
test
test
and
(bad)
mov
push
enter
add
int3
jne
mov
call
cmc
push
sbb
cs
sbb
fcom
sbb
ror
or
sub
daa
loopne
push
aad
cs
leave
push
lock
int3
pop
add
mov
jo
pushf
xchg
add
loope
lock
adc
mov
push
sub
cmps
call
sub
stc
pop
cli
sti
rcl
mov
or
or
jne
pop
inc
add
xor
mul
mov
adc
dec
mov
mov
scas
xchg
lods
(bad)
cmps
jne
mov
lahf
jmp
loope
mov
nop
lahf
inc
lods
aad
push
loop
mov
in
loopne
shl
push
mov
xor
fisubr
mov
xor
sub
adc
test
outs
jl
scas
enter
(bad)
inc
add
push
jmp
inc
push
add
push
xor
adc
and
xor
jae
ds
rcl
(bad)
js
loop
add
aaa
inc
or
jmp
xor
mov
and
out
or
adc
cmp
push
popf
push
shl
pusha
or
or
test
or
sub
enter
sbb
push
cmpxchg
lock
scas
fidiv
or
inc
xor
cdq
sbb
test
and
ror
sbb
jl
into
push
mov
mov
ss
aaa
nop
int3
test
in
mov
sbb
std
mov
add
mov
cmp
lods
ret
fsubr
xor
pushf
sub
test
jne
int
adc
jae
pop
adc
pop
xchg
inc
in
rcr
sbb
sbb
push
fmul
add
add
or
xchg
cmp
pop
adc
pop
outs
cmps
add
inc
inc
dec
test
leave
repnz
daa
es
add
call
fimul
jmp
dec
cmp
add
nop
pop
cmp
aaa
mov
loopne
das
rol
stos
xchg
retf
inc
mov
add
fcom
lock
push
jle
sbb
bound
lods
mov
js
bnd
(bad)
(bad)
popa
or
adc
dec
cld
mov
push
rol
mov
and
scas
adc
test
sbb
push
lods
add
je
or
cmps
dec
mov
push
jbe
lds
mov
sbb
cmp
outs
dec
sub
mov
lds
fmul
fwait
jo
jp
pop
outs
mov
pop
pop
aas
int3
and
push
mul
out
adc
jle
mov
mov
je
dec
and
imul
adc
in
cmp
shr
fcom
or
mov
rcr
repnz
movs
mov
jmp
push
add
lds
mov
pusha
arpl
dec
sar
fadd
add
ret
xchg
sub
xor
cmp
xchg
inc
add
in
call
mov
sub
xor
add
rcr
or
or
jl
adc
pop
sbb
dec
pusha
jmp
pushf
gs
xlat
xor
push
or
es
cmp
mov
retf
inc
xchg
push
pusha
xor
cwde
(bad)
cs
jl
dec
sbb
add
sub
push
jne
jp
xchg
jne
out
add
mov
sub
pop
inc
pop
jmp
sbb
xchg
ins
adc
sub
xor
test
loop
sbb
(bad)
jmp
mov
cs
or
fstp
pop
mov
pop
pop
test
pop
jae
fist
jb
(bad)
std
mov
jmp
mov
cwde
mov
xor
push
es
jbe
mov
scas
cmp
daa
clc
mov
add
popa
inc
mov
push
lock
adc
jle
pop
(bad)
enter
inc
push
sbb
jmp
push
scas
dec
sub
xchg
or
movs
cmps
movs
in
adc
and
dec
scas
push
out
pusha
cwde
fld
(bad)
adc
not
push
(bad)
adc
je
or
push
add
sbb
daa
add
dec
call
push
sub
adc
(bad)
(bad)
pop
adc
ret
jmp
adc
jmp
cld
ins
inc
dec
mov
aam
(bad)
pop
cwde
sub
push
(bad)
mov
jmp
inc
push
cmps
lods
call
or
jae
(bad)
and
lahf
clc
(bad)
pop
test
rcr
add
sbb
nop
inc
xor
cmp
adc
aam
pop
cmp
adc
xchg
stos
in
inc
cmps
adc
push
xchg
or
mov
shr
xchg
or
sbb
(bad)
bound
mov
ss
or
xor
sub
jae
stc
inc
add
imul
arpl
pop
inc
pop
cmp
cmps
mov
pop
int3
(bad)
fst
ins
fwait
xor
jne
cmp
adc
add
xchg
out
call
inc
mov
mov
dec
push
cmp
popa
imul
mov
mov
iret
rol
nop
cwde
cmc
add
jb
pop
les
sbb
cmp
xor
add
out
(bad)
xchg
add
pop
adc
sub
and
xor
pop
inc
mov
fidivr
test
xor
daa
(bad)
jge
and
jmp
inc
sbb
and
jno
or
and
jp
xchg
lds
dec
jno
jmp
movs
les
or
lods
cmp
out
jl
lea
pop
jae
add
ret
iret
xchg
(bad)
jne
dec
xor
push
punpckhdq
dec
dec
adc
sbb
push
sbb
sbb
xor
xchg
loopne
add
or
xor
xor
iret
cmp
sbb
lods
cmp
sbb
pushf
fadd
cmp
or
pop
cmp
sbb
mov
dec
dec
dec
enter
xchg
add
adc
test
aam
push
push
push
out
push
pop
jl
push
frstor
mov
mov
cli
push
adc
pop
das
jne
sub
dec
xchg
lahf
pop
jno
xchg
sub
rol
pop
mov
xor
in
inc
pusha
add
jmp
push
add
iret
or
adc
push
ins
mov
push
dec
pushf
test
and
daa
pop
sub
xchg
clc
mov
xchg
jo
and
inc
es
shl
jae
(bad)
push
mov
(bad)
jle
jbe
adc
xchg
arpl
das
xchg
out
or
jle
adc
daa
or
daa
or
mov
rcr
js
push
je
js
in
inc
push
push
and
fild
xor
stos
test
push
pop
imul
push
ins
sar
lar
dec
sbb
sbb
xabort
push
push
mov
gs
mov
pop
pop
push
inc
ror
mov
enter
(bad)
or
cdq
das
xor
or
lods
enter
adc
imul
mov
xlat
stos
bound
or
push
ja
into
cmp
les
cwde
rcl
cmp
jno
inc
ja
retf
xlat
scas
pop
retf
inc
mov
xor
iret
mov
scas
adc
sahf
outs
setb
xor
push
add
dec
xchg
sbb
pop
xlat
cmp
mov
mov
push
mov
out
sub
push
and
mov
xchg
cmps
das
mov
jmp
iret
fwait
xchg
add
push
ret
adc
and
push
ins
xor
dec
cmp
loop
addr16
fmul
or
stc
add
inc
and
mov
xor
rcr
fdiv
pop
xchg
push
sub
leave
enter
adc
fst
enter
sub
dec
adc
pop
icebp
dec
dec
pop
sub
push
cmp
shl
jg
cwde
push
loopne
inc
inc
aaa
cmp
push
fwait
lods
add
or
push
dec
adc
popf
xor
dec
add
inc
test
mov
data16
cli
rol
xchg
gs
ror
leave
int
mov
dec
mov
mov
pop
test
mov
and
sar
or
jo
mov
and
lock
push
inc
out
movlps
push
cmp
daa
sbb
sub
jae
cwde
add
fwait
cli
or
jmp
inc
xor
add
jge
sbb
rcr
mov
push
push
iret
push
add
sub
loopne
mov
in
xor
jae
add
rol
xchg
scas
inc
and
loop
sub
sub
xchg
pop
xchg
mov
inc
add
add
xchg
(bad)
in
jbe
push
inc
sbb
outs
pusha
mov
loopne
enter
daa
adc
mov
adc
lds
gs
inc
push
inc
or
ins
sbb
sbb
lea
nop
xor
push
inc
dec
test
mov
xchg
mov
mov
test
mov
mov
push
movlps
ins
add
pop
ret
test
popa
stos
sub
dec
push
dec
stos
push
dec
dec
scas
sub
sub
xor
movs
push
jle
sahf
gs
div
sub
pop
clc
clc
lock
jns
inc
or
or
rcl
or
out
dec
cmp
or
fmul
or
aam
popf
icebp
mov
add
cs
add
rcl
mov
xchg
arpl
je
imul
xchg
push
test
outs
dec
jmp
mov
or
dec
cmp
add
or
xor
popa
sub
jne
sub
cmp
sub
add
cs
jmp
jno
popa
ret
pop
push
mov
rcl
(bad)
and
fcomp
mov
retf
inc
in
cmovg
mov
mov
dec
jge
mov
add
push
mov
add
sahf
sub
mov
xor
sbb
inc
and
sbb
adc
push
fidivr
adc
or
loopne
js
add
adc
outs
das
das
or
cmp
out
into
adc
and
jle
push
rol
push
fsubr
or
sbb
movs
std
add
dec
shr
ret
mov
lods
push
adc
fmul
adc
ja
das
or
sub
and
into
adc
into
inc
dec
(bad)
mov
add
jns
repnz
(bad)
sbb
xchg
hlt
push
push
cwde
dec
cld
sub
xchg
jbe
jle
sbb
fsub
retf
jmp
jbe
fmul
or
(bad)
sbb
xchg
cmp
mov
aam
imul
or
adc
dec
or
push
xchg
and
sbb
sbb
pop
das
adc
adc
add
add
inc
fbstp
dec
xor
call
das
imul
(bad)
jmp
and
mov
xor
mov
scas
jnp
inc
xchg
jl
dec
or
dec
dec
enter
ins
add
dec
jmp
xchg
not
add
jno
mov
xor
xchg
fisub
pop
ins
sbb
xchg
add
ja
jns
xlat
mov
xchg
scas
adc
xor
dec
in
addr16
push
push
mov
lea
jmp
inc
and
retf
popa
sub
push
sub
gs
or
shl
fmul
(bad)
in
jne
neg
or
inc
sub
xlat
mov
test
xchg
xor
pop
icebp
push
jmp
and
ret
ror
in
loopne
jle
icebp
fisubr
inc
xchg
or
mov
ss
add
ja
adc
jns
xchg
clc
xchg
sub
test
fdivr
gs
dec
aam
hlt
add
sahf
sub
mov
xor
fnop
test
jecxz
add
(bad)
mov
mov
das
push
jno
fs
imul
cmpneqps
and
ror
jnp
push
jecxz
(bad)
ins
jae
mov
fwait
push
enter
inc
cmp
add
adc
shl
out
ds
dec
mov
push
cmp
bound
mov
stos
mov
fs
neg
dec
push
sbb
adc
outs
and
out
xchg
fst
or
nop
push
dec
ffreep
pop
jno
pushf
sbb
je
sub
sbb
push
adc
dec
mov
and
test
mov
dec
fcom
push
or
aam
xchg
mov
xchg
lods
hlt
inc
pusha
pop
sar
aam
lods
dec
and
in
inc
push
ins
xor
in
test
and
sbb
pop
mov
xchg
add
push
mov
lahf
outs
js
out
lods
data16
pop
aam
jo
xchg
addr16
into
add
xor
and
(bad)
mov
dec
add
addr16
adc
loopne
dec
adc
push
ficom
xchg
gs
clc
mov
and
add
arpl
dec
fs
adc
inc
loope
cmp
dec
xchg
xchg
arpl
dec
je
add
pop
inc
and
test
mov
or
sub
mov
out
test
add
pop
enter
cmp
push
xor
inc
fdivr
mov
xchg
lds
iret
xor
inc
pusha
add
leave
daa
cmp
fdiv
mov
mov
mov
scas
inc
ins
int3
sub
or
jns
iret
adc
jbe
sbb
mov
movs
ins
dec
leave
xchg
cmp
ss
pop
pop
push
cdq
cmp
outs
or
loop
xor
push
aam
pop
daa
add
mov
xor
sbb
call
movs
jno
cmp
lock
(bad)
pop
pusha
add
cmp
mov
sub
adc
dec
and
xchg
pushf
ret
pop
in
out
dec
enter
outs
in
inc
(bad)
push
addr16
pop
push
inc
dec
cdq
lea
or
cmp
push
xor
inc
mov
or
pop
dec
xchg
adc
adc
les
and
sub
jl
push
mov
jbe
repnz
js
or
inc
add
xor
jae
pop
jbe
inc
inc
add
sbb
(bad)
jns
add
cmp
sub
adc
adc
add
jbe
(bad)
or
mov
inc
outs
dec
aas
and
xchg
dec
push
sbb
xchg
or
test
cmp
jmp
loopne
sub
inc
inc
add
sbb
mov
loopne
jns
sub
lea
xchg
push
pop
inc
fstcw
xor
popf
add
or
das
mov
shl
stos
mov
sti
xchg
xor
lds
dec
xchg
xchg
xchg
dec
call
xchg
dec
call
or
xchg
push
pop
cmps
sub
jo
or
push
adc
std
push
push
test
xchg
add
add
push
sbb
nop
cmp
or
cld
fwait
mov
adc
pop
loope
jb
push
sub
out
add
add
cdq
test
das
sbb
pop
mov
mov
jno
std
cmp
mov
sar
jle
add
adc
shl
cmp
out
add
and
add
xchg
push
jmp
test
push
dec
loopne
lock
repnz
and
fcmovne
jge
or
rcl
or
mov
sbb
movs
(bad)
nop
fsub
xchg
push
add
mov
movs
mov
push
aad
jb
cmp
lods
hlt
xchg
inc
xor
fs
add
dec
mov
jns
push
inc
fcomp
rcl
jl
cld
clc
sub
mov
paddsb
ret
vmovsd
dec
pop
xchg
xchg
dec
cs
popa
inc
and
and
dec
push
or
xor
fsubr
pop
sub
cmps
retf
fs
mov
mov
mov
push
inc
pusha
arpl
ror
add
jno
(bad)
retf
xlat
adc
cdq
cwde
dec
inc
fiadd
cmp
jae
sub
adc
xchg
in
add
ja
hlt
and
add
shl
mov
push
pop
ret
test
fdiv
and
mov
jo
inc
inc
movs
nop
or
test
inc
sahf
or
cmps
inc
lock
push
jnp
mov
popf
jne
fcomp
cmp
(bad)
cmp
loop
mov
pop
call
or
push
inc
pop
xor
mov
dec
fcmovnb
mov
(bad)
lock
ins
xchg
(bad)
jle
mov
mov
sbb
mov
ret
retf
xor
leave
ret
cwde
ficom
or
dec
lods
mov
popa
sahf
jno
js
or
xor
ins
pop
and
jmp
or
add
ins
iret
aad
dec
stos
das
or
mov
jae
je
pop
les
cmp
mov
sbb
push
lods
sbb
sbb
add
rol
add
adc
(bad)
dec
push
nop
and
dec
aad
fs
or
cmp
mov
push
sub
(bad)
push
dec
or
nop
adc
enter
or
push
xchg
adc
add
dec
mov
jp
push
push
sbb
inc
add
sbb
jo
adc
and
inc
push
pop
adc
dec
cli
inc
pop
fist
push
aaa
push
mov
or
fs
mov
imul
jle
add
mov
jmp
cmp
fnstenv
retf
aam
push
inc
ins
jbe
xor
out
dec
cmp
int3
add
dec
adc
adc
ret
pop
inc
outs
mov
aad
jmp
xor
ins
mov
dec
retf
inc
fs
mov
stc
pop
(bad)
xlat
sub
xor
cmps
sbb
and
inc
jmp
or
mov
ds
cwde
loopne
xor
(bad)
adc
or
fsin
sbb
xchg
cs
xor
push
test
mov
jge
fstp
cdq
pop
fs
push
and
punpckhbw
jae
jne
xor
into
inc
pop
pop
pop
enter
or
sbb
mov
pop
repz
outs
cmp
mov
call
stos
enter
and
cli
jmp
iret
adc
fs
sub
xor
mov
nop
adc
sub
xor
fmul
mov
xor
mov
test
lods
mov
mov
ins
in
dec
ret
gs
mov
sti
xchg
shl
dec
add
daa
or
adc
cmp
sub
jmp
lods
inc
aad
jp
push
es
movs
pusha
or
xchg
dec
xor
push
hlt
daa
jmp
and
jmp
hlt
out
mov
frstor
xlat
or
cld
mov
sub
and
mov
cmps
adc
pop
xchg
sti
fmul
or
mov
adc
mov
sti
adc
retf
mov
fld
rol
adc
adc
xor
sub
loop
dec
push
add
sub
mov
xchg
pop
test
in
push
adc
dec
(bad)
mov
pop
pop
pop
aas
fdivr
lock
push
adc
xlat
ins
and
and
sub
sbb
pop
sub
movzx
adc
jne
push
in
fcmovnb
mov
popw
and
outs
stc
mov
data16
sbb
push
je
movs
mov
dec
clc
loope
fs
leave
add
mov
xor
and
pusha
dec
push
xchg
cmp
retf
pop
xchg
inc
and
or
mov
jae
es
shl
scas
add
cmp
in
adc
imul
and
bound
xchg
or
call
pop
or
and
mov
push
xor
cmp
mov
push
pop
bound
and
sti
pop
sti
adc
fist
daa
jle
adc
and
fsubr
sbb
scas
pop
inc
mov
add
xchg
add
jmp
sbb
sbb
mov
movs
pusha
xchg
push
push
fdiv
add
xor
dec
mov
cmp
or
push
or
mov
sub
adc
jle
loopne
xor
xor
js
aam
jg
js
arpl
jae
icebp
ret
fst
push
sub
and
test
loope
dec
add
out
popa
cwde
dec
xchg
pushf
movs
scas
xchg
mov
fnsave
mov
jecxz
sub
retf
sti
xor
mov
mov
or
cmp
loopne
sub
cmp
add
adc
pop
inc
jge
inc
cli
mov
mov
test
xor
add
push
fs
ins
xor
or
xchg
adc
add
lock
pop
ret
inc
add
inc
pop
dec
ins
loop
or
jg
adc
add
cs
jg
rol
cmp
or
adc
mov
sub
test
mov
leave
sar
sbb
or
call
cmp
test
or
add
ins
loope
push
(bad)
or
call
aam
pop
int3
push
mov
mov
xchg
mov
in
adc
xor
and
rol
or
add
ja
mov
jmp
ja
ins
in
xor
and
mov
inc
xchg
clc
es
scas
sub
xor
jo
sub
or
es
addr16
adc
cmps
add
ret
hlt
jmp
fs
add
push
pop
pop
fmul
pop
inc
adc
inc
jge
sub
adc
push
push
adc
or
inc
es
(bad)
and
sub
dec
fs
ja
or
adc
pop
iret
aad
push
lea
test
jne
sub
add
pop
adc
test
xor
push
adc
inc
or
ror
pop
ret
sub
add
fsub
popf
fimul
push
cmp
daa
add
sub
frstor
sbb
mov
cmp
push
or
ja
xor
mov
or
sub
mov
cdq
int
(bad)
nop
ja
add
nop
not
mov
sub
inc
inc
mov
cmps
add
inc
or
popa
(bad)
jp
push
into
push
add
aas
inc
je
mov
cmp
pop
bound
and
mov
inc
mov
mov
das
not
xchg
dec
sub
sbb
push
mov
stc
imul
fmul
loop
and
popa
cmp
bound
(bad)
cli
mov
inc
inc
dec
and
mov
dec
loopne
jl
inc
mov
js
add
or
sbb
jl
push
jo
pop
fs
pusha
cmp
mov
dec
jmp
xor
dec
and
adc
or
and
or
mov
cmp
pop
cld
adc
or
stc
ja
push
lds
pop
or
sbb
pop
or
or
sbb
inc
pop
ds
or
pop
adc
xchg
or
push
mov
sbb
sub
inc
lock
or
jmp
mov
pop
loopne
xor
ret
enter
test
dec
inc
(bad)
push
test
and
xchg
or
ror
out
es
sbb
and
add
adc
jmp
outs
push
or
sub
xchg
add
cmp
mov
pop
push
and
sbb
sub
sub
ret
xchg
das
enter
mov
lods
icebp
add
pusha
or
xor
clc
sub
xor
jg
iret
mov
stos
or
cdq
add
mov
xor
mov
xor
ror
shl
ret
mov
xor
shr
mov
jg
movs
sbb
sbb
pop
imul
jo
add
mov
mov
sub
shl
aas
push
mov
dec
test
add
cmc
fdiv
jg
xchg
and
mov
(bad)
(bad)
jg
push
pushf
sbb
dec
cmp
fld
jl
sti
pop
mov
ret
push
sti
and
sbb
jmp
cmc
pop
imul
movs
repnz
push
enter
sbb
dec
mov
(bad)
sub
rol
push
add
sub
and
xor
repz
(bad)
mov
and
mov
inc
and
mov
(bad)
fadd
inc
call
cwde
push
movs
ss
sbb
sub
and
(bad)
ja
sbb
push
cmp
sub
jo
dec
(bad)
pop
push
fcom
mov
test
xchg
test
hlt
and
das
ret
jo
and
add
push
sub
push
daa
jne
pusha
xchg
shl
push
ret
add
dec
pushf
movs
pop
mov
arpl
jle
aas
xchg
cwde
dec
jge
popf
dec
cmps
xchg
ret
and
inc
and
cmps
rcr
dec
stos
xor
and
rol
in
mov
push
leave
inc
mov
dec
in
test
pop
mov
mov
bound
mov
mov
push
pop
sbb
adc
pop
pop
or
pop
inc
sbb
add
shr
xchg
loop
adc
clc
lock
mov
jne
sub
nop
or
test
xchg
add
icebp
inc
test
add
ret
bnd
and
or
pop
add
dec
sub
pop
add
or
or
pop
fs
clc
inc
loop
xor
jae
sbb
jmp
sub
daa
out
xchg
or
imul
inc
sar
in
sti
adc
push
xchg
pop
sbb
test
add
push
xor
cld
and
xor
imul
add
add
pop
cld
or
cmp
vmread
(bad)
shr
or
sub
add
mov
pop
shr
sbb
(bad)
mov
sub
test
pop
daa
and
and
adc
repnz
test
fsubr
lea
dec
pop
adc
cmp
retf
dec
and
pop
xchg
lea
sbb
rol
mov
inc
jo
movs
fcom
inc
mov
sbb
push
sub
fs
add
xor
rcl
inc
cld
add
cmps
or
jmp
mov
push
jmp
cmp
push
sbb
mov
(bad)
dec
sbb
add
inc
dec
or
adc
and
mov
push
ret
stos
inc
push
xchg
cld
mov
lea
in
call
mov
mov
inc
dec
ins
jns
add
mov
adc
sbb
inc
add
test
dec
and
adc
and
repnz
or
in
add
sub
adc
iret
inc
call
adc
push
mov
mov
pop
lock
retf
xor
inc
xor
xchg
sahf
jnp
push
inc
or
inc
or
cmc
movs
cmp
enter
cmp
mov
(bad)
fldcw
jne
sbb
pop
push
pop
adc
push
adc
fdiv
iret
in
inc
jge
or
add
dec
mov
movs
adc
inc
and
out
test
adc
arpl
jecxz
sub
in
push
cmp
das
add
adc
nop
or
das
mov
jnp
add
or
movs
mov
pop
xchg
sub
dec
xchg
or
(bad)
mov
sar
jns
adc
jmp
inc
sbb
mov
pop
or
cmc
or
pop
jne
pushf
mov
and
xor
pop
std
iret
xchg
lock
rol
jo
pop
push
pop
xchg
shr
movs
leave
jecxz
loopne
repnz
dec
cmp
adc
xchg
xor
push
loopne
fist
cmc
dec
push
pop
push
outs
sbb
add
jns
(bad)
sbb
push
arpl
sbb
mov
jmp
xchg
or
mov
xor
cmp
and
xchg
inc
or
test
jo
dec
pop
mov
jne
mov
fnstsw
es
and
jnp
push
cmp
xchg
adc
push
sbb
ins
xor
hlt
push
dec
mov
sbb
inc
les
cs
sub
ucomiss
fnstsw
dec
popf
push
dec
aam
push
push
imul
js
push
and
sub
push
push
adc
dec
(bad)
adc
push
mov
xchg
cs
cs
jns
pop
xlat
adc
mov
int3
mov
mov
inc
or
push
adc
int
mov
test
in
push
inc
ja
sbb
fidivr
cdq
mov
adc
pop
movs
mov
nop
push
pop
or
test
sbb
in
sbb
adc
ss
sbb
xor
sub
enter
fcomp
or
(bad)
ins
or
sahf
push
shr
sbb
das
and
add
test
sub
scas
emms
adc
loop
or
or
or
mov
pop
or
xchg
movs
sbb
sub
adc
adc
mov
ja
add
in
lock
add
adc
retf
sbb
jnp
xchg
pop
std
lea
xor
push
ret
xor
xor
call
push
pop
jecxz
pushf
inc
movs
sub
push
(bad)
test
adc
iret
push
fld
push
test
dec
fcmovnbe
xchg
fistp
fcmovnu
dec
inc
loopne
pusha
add
cdq
rol
pop
cmp
ins
lods
inc
inc
mov
call
aam
sbb
push
cwde
icebp
sub
sbb
and
adc
xchg
in
test
out
ret
ret
(bad)
cwde
stos
cdq
or
and
and
loop
mov
sub
popa
push
pop
inc
sub
adc
mov
imul
lea
ja
inc
xchg
rcr
cmp
mov
rcl
cmp
je
rcl
inc
mov
fild
or
mov
test
int
pushf
adc
cmp
push
add
sbb
add
test
sahf
push
push
fadd
addr16
push
lahf
in
add
shl
xor
sbb
pop
mov
adc
fsub
sahf
inc
pop
sub
not
cmp
xchg
je
pop
jne
add
test
movs
mov
outs
xor
dec
jae
cmp
jne
ret
ret
loope
loop
add
pop
sti
pusha
mov
fs
add
mov
iret
pop
or
cdq
sub
push
inc
mov
and
mov
xchg
dec
scas
jmp
push
pop
adc
dec
dec
add
and
lahf
icebp
or
aaa
nop
jns
dec
popa
pop
stc
jg
loope
adc
or
jp
sbb
pop
shr
push
push
mov
mov
outs
sbb
fadd
mov
add
sbb
xor
(bad)
or
pusha
jae
jp
push
xor
cmp
push
mov
and
push
mov
and
cmps
lods
add
and
cmps
lods
pop
pop
mov
add
je
minps
sub
xchg
dec
adc
mov
ret
inc
xor
pusha
mov
mov
inc
or
ret
pop
call
pop
xchg
mov
inc
std
pop
dec
mov
ficomp
push
jl
addr16
adc
fwait
rol
repnz
pop
jnp
enter
pop
adc
mov
mov
sbb
cs
movs
popf
test
dec
push
arpl
pop
inc
ret
push
clc
les
cld
je
popa
xor
in
mov
or
adc
jle
aam
shl
inc
int
and
sbb
shl
add
inc
adc
jbe
inc
jne
popf
pop
in
add
or
iret
sbb
clc
adc
or
retf
fmul
add
leave
push
fsubr
les
stos
add
gs
xchg
stos
sub
cmp
arpl
adc
sub
and
and
nop
into
and
push
jge
jle
pop
xchg
lock
lock
mov
frstor
ss
ss
es
pop
adc
mov
sbb
dec
sbb
cwde
dec
test
push
and
xchg
add
add
mov
ins
pop
push
jo
mov
sub
adc
or
pop
and
sbb
lods
mov
call
shl
sbb
aas
aad
ins
cmp
in
pop
adc
dec
or
lds
sub
ins
sbb
mov
and
test
xor
adc
inc
push
ds
cmp
sub
shl
pop
xlat
sub
ret
push
add
pusha
pushf
jbe
mov
in
jbe
pop
mov
add
and
push
aas
cdq
pop
jmp
sbb
aaa
adc
int
in
inc
pop
fadd
mov
stos
popa
ins
push
add
xor
sub
rcl
ins
sub
push
pop
add
ins
push
pop
lods
aaa
mov
inc
ins
adc
imul
retf
adc
dec
inc
les
push
push
pusha
dec
popf
xchg
mov
pop
or
pop
fcom
pusha
cmp
ss
xchg
push
inc
fstp
pusha
call
add
pop
pop
dec
push
pop
mov
sub
jg
cmp
push
push
push
add
jns
xor
dec
adc
(bad)
xchg
jl
and
dec
dec
add
xor
fwait
pop
in
sbb
add
sub
xor
or
ss
sub
jmp
test
test
icebp
retf
or
xor
sahf
out
sbb
add
into
jnp
and
sbb
pop
xor
lea
xchg
jp
or
push
push
jb
pop
ret
(bad)
push
test
data16
in
lock
and
adc
sub
adc
push
ror
push
mov
add
adc
js
cs
popf
outs
mov
jne
cmp
adc
jecxz
adc
dec
xchg
sbb
or
lea
adc
ins
ficomp
jmp
adc
sbb
xlat
ds
push
pop
adc
cli
enter
dec
pushf
xchg
cmp
sub
and
mov
shl
mov
lods
out
rol
and
or
xchg
add
xchg
or
pop
lock
retf
ja
mov
jo
and
push
xchg
mov
sbb
mov
add
xor
in
dec
daa
sub
dec
push
or
imul
pushf
div
js
aas
(bad)
adc
mov
enter
jge
movs
cmc
pop
ins
das
and
inc
xor
and
add
inc
mov
out
cwde
or
add
jnp
sub
das
clc
cdq
aas
inc
and
lea
aad
jle
mov
loopne
inc
loopne
inc
not
test
inc
inc
and
mov
inc
dec
add
mov
or
cmp
inc
js
lea
imul
and
dec
ins
or
add
mov
and
lods
add
pop
add
(bad)
daa
pop
or
and
jne
cmp
dec
aam
sub
push
xor
mov
ror
stos
imul
inc
or
ror
pop
jo
inc
xor
and
popa
adc
shl
jle
and
push
popa
mov
dec
push
jae
lahf
fsub
punpckhdq
fild
pop
pop
or
iret
inc
adc
push
enter
xchg
mov
scas
add
and
add
push
xchg
jp
daa
push
sbb
and
cmps
xchg
cmovb
or
in
push
sbb
daa
and
and
fstp
jmp
popa
cld
cmp
inc
ja
aas
sbb
dec
jmp
adc
popa
das
adc
lea
cmp
dec
(bad)
jmp
inc
adc
push
adc
mov
xor
fstp
xchg
mov
icebp
and
dec
cmp
call
pop
add
cmp
int
hlt
outs
cmp
cmp
mov
sbb
mov
jns
neg
jnp
sub
int3
mov
xchg
aam
in
fsub
test
fcomp
repnz
xor
xor
dec
(bad)
nop
cmp
call
add
inc
push
inc
ja
sbb
add
dec
jmp
loopne
cmps
test
add
dec
jmp
pop
ins
ins
fild
or
jno
mov
movs
jnp
gs
mov
test
test
js
jne
das
add
push
enter
test
(bad)
and
jo
test
das
adc
in
inc
in
inc
out
push
xchg
sub
dec
jae
ret
ficom
jno
lahf
lods
push
cmp
jge
sbb
loop
(bad)
rcl
and
or
scas
lock
and
add
mov
inc
cmp
lods
cmp
data16
sbb
(bad)
daa
hlt
test
jl
jp
xor
push
sub
jne
mov
out
dec
jb
pop
xor
cmp
adc
add
loopne
mov
les
inc
pop
loop
ja
ror
ret
or
xor
lea
pop
xlat
inc
nop
add
or
call
sbb
xchg
cmp
sub
fild
push
mov
arpl
mov
xchg
in
sub
jl
jne
inc
xor
or
daa
and
push
inc
and
and
leave
inc
and
jp
and
arpl
inc
push
ins
mov
sub
mov
sbb
jge
cmc
fiadd
sub
add
fmul
mov
fsub
ins
mov
js
mov
mov
xchg
shl
outs
or
and
jmp
dec
test
popa
pop
mov
sub
dec
mov
sub
aas
mov
jge
dec
xor
jl
sbb
pop
push
or
cmp
adc
repz
pop
lock
and
xchg
xchg
adc
push
data16
and
sbb
gs
push
and
add
mov
sub
nop
outs
mov
mov
lahf
push
mov
cmps
cmps
jo
test
ret
adc
mov
movs
ins
dec
movs
mov
call
sub
mov
push
out
jp
ins
inc
push
xor
push
or
mov
pop
sbb
or
jne
xchg
push
push
jbe
pop
add
lock
pop
and
add
add
inc
mov
cs
test
xchg
jns
mov
cmps
xor
gs
push
jo
test
dec
or
dec
adc
out
movs
add
js
xchg
cld
mov
push
dec
add
pop
adc
rcl
mov
push
scas
mov
or
cmps
test
fs
mov
scas
add
or
fild
aas
sub
imul
or
test
mov
xchg
stc
xchg
xchg
pop
dec
inc
inc
(bad)
addr16
dec
jb
pop
dec
aam
add
mov
inc
sub
xchg
sub
fs
adc
pop
add
adc
and
or
mov
xor
test
ret
call
cmp
add
dec
sahf
inc
and
pop
adc
and
pop
lds
cmp
cwde
je
mov
dec
and
mov
and
pop
fisub
sbb
mov
sbb
sbb
adc
add
push
cmps
nop
adc
call
scas
pop
rcr
fnsave
jns
sub
sbb
sbb
sbb
add
ins
imul
rol
shr
pop
or
ja
sub
lods
daa
and
push
leave
adc
push
pusha
dec
jmp
inc
mov
test
mov
test
sub
imul
cmp
cmp
and
jb
nop
xor
imul
or
and
adc
or
addr16
dec
mov
cmp
push
dec
push
push
xor
add
add
sub
push
add
jb
pop
cs
add
push
leave
xor
xor
sub
add
nop
and
inc
cmp
inc
pop
dec
mov
add
inc
dec
nop
nop
dec
dec
push
adc
push
inc
inc
adc
mov
dec
adc
add
(bad)
xor
push
out
inc
cmp
ins
xor
fs
jae
test
add
xchg
mov
movzx
test
pop
ret
pop
push
adc
imul
pusha
sub
stos
xor
adc
mov
fs
ss
ins
or
add
mov
dec
or
mov
mov
movs
sub
(bad)
pop
dec
or
mov
push
dec
stc
add
inc
fld
mov
or
addr16
push
xchg
jae
and
xlat
jo
inc
pop
push
adc
add
or
dec
test
add
inc
dec
cs
inc
imul
scas
mov
hlt
(bad)
aas
bound
js
stc
adc
(bad)
rol
jnp
cwde
or
mov
call
pop
in
test
jle
xchg
es
push
xchg
dec
cmp
mov
pop
fdivr
jmp
sub
in
out
add
test
inc
stos
and
push
push
and
stos
add
adc
cmp
or
adc
mov
push
inc
mov
jecxz
xor
add
dec
dec
mov
push
pusha
xchg
sbb
or
push
data16
or
int
into
xchg
jmp
push
mov
data16
push
and
push
mov
jne
push
or
dec
nop
out
adc
or
sub
imul
jbe
fdiv
in
push
inc
dec
scas
add
je
lea
enter
xchg
push
cmps
test
dec
(bad)
(bad)
mov
adc
ss
xchg
test
pop
xchg
pop
loope
fiadd
xchg
add
add
and
push
push
fdiv
push
push
pop
add
push
nop
ja
xor
(bad)
inc
jg
out
mov
fcom
pop
dec
out
out
xor
in
pushf
pop
mov
mov
jns
push
pop
lahf
psubsb
xchg
test
jne
sbb
cdq
ins
test
cmp
test
and
jge
adc
or
pop
jge
mov
cdq
or
(bad)
popa
or
add
add
and
jb
sbb
xchg
push
mov
xchg
add
or
adc
mov
inc
sbb
nop
dec
dec
inc
add
es
sub
jns
mov
pop
push
dec
div
pop
sbb
pop
adc
les
test
mov
dec
fwait
rol
mov
mov
and
push
sbb
pop
test
cmp
inc
fimul
lods
pop
inc
push
pusha
pop
add
sub
in
add
lods
add
jno
(bad)
and
or
mov
add
or
add
pusha
mov
fdivr
add
fisubr
xor
lock
pusha
pusha
add
mov
(bad)
popa
in
add
push
cwde
pop
add
sub
pop
jne
dec
mul
xchg
mov
pop
dec
sub
or
(bad)
fidiv
out
pop
sbb
jbe
cmp
bound
cmp
sub
add
out
add
pop
or
cmps
fiadd
and
les
push
fs
inc
sub
lods
fnstcw
xlat
and
push
or
sub
push
call
(bad)
hlt
add
pusha
mov
arpl
mov
into
push
arpl
xor
mov
js
adc
mov
enter
dec
nop
mov
sub
dec
inc
dec
enter
ja
mov
dec
dec
inc
shr
je
aam
fstp
mov
hlt
pop
dec
shl
xor
xor
int
jns
ss
test
out
pushf
or
lods
pop
mov
test
sub
cmp
cmp
mov
xchg
push
xchg
bound
pop
dec
out
xchg
sahf
gs
dec
imul
ror
sar
xor
push
lods
adc
mov
enter
(bad)
loopne
dec
mov
pop
inc
call
icebp
lgs
add
push
cwde
repz
pop
mov
repnz
jl
or
fadd
call
fbstp
sbb
cmp
jne
push
(bad)
sbb
ret
push
pop
sub
inc
int
enter
xor
inc
jnp
add
pop
add
fnstenv
dec
and
sbb
(bad)
mov
out
pop
dec
pushf
push
and
adc
lods
dec
add
dec
push
mov
jge
and
mov
jae
or
and
or
ret
pop
mov
or
push
xchg
cli
mov
jb
xor
push
and
xor
mov
stc
test
aam
dec
mov
dec
dec
aad
in
add
cs
sbb
test
fnstenv
mov
sub
call
push
retf
push
jne
psubw
cmps
hlt
sbb
dec
inc
dec
cmp
repnz
std
dec
sbb
sub
cli
pop
movs
add
retf
add
or
inc
adc
jp
jnp
fld
cmovnp
cmc
por
pop
imul
sbb
dec
jp
shl
pop
pusha
jb
xor
pop
cwde
pop
push
sub
loope
sbb
push
or
in
popw
and
sub
push
xchg
and
adc
mov
dec
add
or
imul
jo
imul
and
push
out
or
ror
or
add
jo
and
cmp
add
adc
adc
dec
or
adc
or
cmp
push
pop
inc
inc
adc
add
ret
lea
jmp
es
test
or
add
jo
or
jmp
or
ds
scas
xchg
rcr
sub
jp
add
dec
test
or
sub
jl
pop
jno
out
sbb
push
call
push
inc
push
rcr
adc
pop
jo
inc
or
dec
push
or
or
add
sub
inc
push
add
adc
add
daa
sub
sbb
ins
add
sub
jle
test
ins
outs
push
inc
and
push
outs
and
dec
das
add
or
arpl
jmp
xlat
lods
retf
sub
mov
test
in
jns
add
inc
add
pusha
(bad)
sub
adc
jecxz
nop
int3
mov
jb
test
and
(bad)
mov
lock
cdq
push
and
jae
hlt
mov
pop
and
nop
data16
pop
test
mov
sub
test
inc
push
out
int
inc
xchg
and
inc
add
mov
call
cmp
push
or
push
cwd
add
jnp
inc
outs
jbe
pushf
jno
nop
jb
sub
dec
jae
xor
jo
jl
mov
mov
mov
clc
adc
dec
mov
pop
cmp
aaa
scas
inc
sub
dec
iret
iret
inc
or
cwde
and
push
dec
mov
push
push
jne
outs
int
sbb
cmp
fs
cmp
pop
mov
push
mov
outs
push
loopne
and
adc
pop
add
or
hlt
push
mov
inc
jp
jmp
mov
or
and
mov
call
std
mov
out
sbb
mov
pop
add
adc
imul
push
pop
push
mov
mov
movs
inc
cld
loopne
pop
pop
sub
sub
(bad)
sub
inc
push
and
pshufw
imul
sub
int3
in
mov
inc
ins
sbb
test
aaa
cmova
push
loope
(bad)
mov
and
loope
test
loopne
popa
inc
jecxz
and
adc
leave
and
outs
sub
dec
js
repnz
or
push
xchg
adc
or
call
and
and
push
xor
add
adc
or
or
lea
and
sub
add
mov
movs
or
mov
dec
xor
sbb
push
rcl
or
aam
nop
lea
and
or
lds
or
push
sbb
mov
add
das
loope
shl
stc
neg
adc
ss
or
dec
sbb
cmp
pop
fisubr
pushf
ins
popa
mov
cmp
and
jns
cs
cmp
sbb
dec
lds
xchg
push
xor
int
sbb
das
movs
or
mov
cmp
inc
in
sub
cwde
and
sub
mov
mov
mov
and
push
sub
add
sub
mov
call
dec
adc
int3
sub
sub
imul
fsubr
rcl
pop
adc
mov
in
pop
rcl
jle
mov
les
jl
icebp
add
inc
dec
xor
dec
outs
and
fwait
sbb
pop
jo
push
pusha
cmp
sbb
mov
pop
xor
sbb
js
repnz
test
push
pusha
push
dec
or
push
cwde
or
cmp
adc
cmp
ret
and
adc
sar
cmp
nop
nop
xchg
dec
cmp
push
call
mov
cmp
sbb
pop
jno
(bad)
leave
inc
mov
cmp
imul
dec
test
scas
add
movs
mov
leave
inc
cmp
or
sub
cwde
cwde
cmp
fwait
lods
shl
xchg
sar
push
push
das
fild
in
aas
inc
pusha
add
inc
nop
add
scas
xchg
add
in
mov
or
add
add
add
add
jge
mov
pop
fs
pop
inc
retf
cmp
and
div
(bad)
pop
imul
mov
push
test
sbb
fstp
and
add
inc
sub
add
push
add
jnp
outs
xor
mov
cmp
pop
loope
fwait
xor
repz
es
and
and
xchg
(bad)
and
call
push
add
rcr
jle
cs
xlat
pop
pop
xchg
ds
adc
dec
dec
inc
mov
mov
add
adc
das
cmp
pop
lock
jg
pop
inc
push
jae
sbb
es
and
push
dec
leave
sub
jb
pop
hlt
push
add
dec
(bad)
sbb
lods
push
rol
fs
push
ins
mov
jg
xor
push
ins
call
js
and
aam
shr
pop
js
pop
mov
mov
or
push
adc
rcl
mov
mov
scas
pop
xor
in
repnz
in
inc
or
pop
adc
xchg
pop
and
mov
sub
cmp
pop
dec
push
mov
inc
punpckhdq
pop
stc
inc
jle
pusha
dec
dec
xor
movs
push
dec
mov
push
xchg
sub
pusha
push
cli
dec
aad
xor
add
add
push
pop
adc
xchg
inc
sub
mov
imul
lds
pop
jo
inc
push
daa
mov
dec
and
adc
cmp
movs
inc
and
add
cwde
in
fwait
aas
jb
je
add
out
sbb
push
sub
push
fdiv
mov
adc
je
dec
or
xchg
lock
test
in
test
xchg
mov
cmps
rol
add
xchg
sub
sub
(bad)
lea
cmp
ins
out
ss
pop
popf
xchg
mov
sub
dec
and
ins
inc
ret
repz
pop
pop
ss
js
push
sbb
jg
cli
sub
dec
xor
fwait
sbb
sbb
add
fcmovnbe
inc
sbb
push
add
pop
test
test
add
je
call
sbb
sub
mov
inc
jg
or
sbb
adc
inc
inc
adc
dec
jns
sbb
push
inc
dec
add
mov
pop
popf
aam
mov
inc
fsub
push
in
or
std
data16
xchg
xchg
sub
popa
loop
inc
pop
adc
lds
(bad)
jle
inc
ja
sub
and
cwde
ret
repz
push
cwde
inc
add
jns
add
dec
dec
mov
cmps
mov
out
jnp
les
call
adc
push
inc
ja
cmp
test
xor
popa
push
pop
inc
sbb
and
ret
scas
mov
sbb
test
xchg
adc
movs
icebp
mov
pop
add
(bad)
fsubr
fidivr
add
(bad)
jo
xor
jmp
cmp
mov
xor
icebp
adc
xchg
aam
push
sbb
sbb
mov
test
je
adc
test
pop
test
nop
ds
xor
aas
sti
pop
ret
arpl
je
mov
cmp
and
mov
jmp
pop
aam
pop
or
les
or
inc
add
lods
jne
push
ret
(bad)
aam
and
sub
sahf
mov
xacquire
xlat
xor
adc
and
jns
add
sahf
test
jns
out
and
or
mov
sub
aaa
add
add
(bad)
ficom
outs
into
add
shl
xchg
not
add
sahf
out
add
and
mov
inc
aaa
rol
dec
push
sub
mov
inc
pusha
mov
inc
inc
adc
add
inc
pop
xor
adc
sub
dec
add
jb
js
outs
sub
push
imul
add
sbb
scas
add
pushf
pop
sbb
xor
sbb
arpl
sbb
or
mov
xlat
jae
mov
(bad)
mov
mov
mov
adc
sbb
xor
adc
shl
cmp
pusha
mov
pop
add
ja
xchg
in
ss
pusha
neg
pop
jge
inc
mov
aad
rcl
movs
cmp
jl
test
push
add
mov
das
test
shl
repz
inc
inc
pop
out
xor
and
or
retf
sbb
xor
mov
mov
xchg
fldenv
(bad)
in
inc
sub
pusha
xor
aam
out
push
arpl
mov
fucomp
add
xchg
inc
bound
jge
lea
pop
movs
cli
(bad)
loopne
mov
test
mov
sbb
mov
test
and
pop
lock
mov
xchg
bswap
xor
clc
lds
ins
or
pop
into
ins
stos
or
sub
loop
push
or
addr16
loopne
retf
adc
test
mov
jbe
ret
rol
cld
(bad)
push
dec
and
jmp
fiadd
arpl
jo
xchg
push
jbe
std
iret
xchg
add
xor
popf
jnp
xor
sbb
and
cmps
cmps
push
call
dec
aaa
lock
fsubr
int
cmp
mov
push
push
mov
mov
lock
or
add
add
jg
push
add
fmul
mov
xchg
pop
jae
popf
ja
pop
add
xor
jne
imul
adc
hlt
mov
call
lods
xchg
mov
rol
xor
add
push
xchg
add
leave
pop
jl
mov
add
pop
mov
enter
add
add
iret
and
mov
or
pushf
inc
and
mov
mov
and
jl
pop
ja
or
add
mov
push
ret
nop
sub
pop
test
nop
xor
pop
mov
xchg
and
cmps
jae
jmp
daa
(bad)
inc
lock
mov
pop
pushf
push
fiadd
xchg
ror
add
and
cli
mov
scas
mov
outs
sbb
cmovp
jecxz
sub
add
nop
adc
lock
test
call
inc
push
add
sbb
or
cli
add
inc
cmp
push
add
pop
mov
cmps
add
add
out
or
(bad)
popf
mov
shl
xchg
movs
(bad)
icebp
xchg
pop
imul
push
jo
dec
lods
xchg
popa
es
xor
adc
or
cmps
les
and
adc
dec
xor
call
mov
xlat
sbb
fwait
pop
mov
mov
fisub
or
push
loopne
dec
inc
push
lea
test
hlt
and
sub
leave
and
xchg
inc
movs
mov
or
sbb
pop
mov
es
mov
cmp
in
and
mov
int
sbb
or
cmps
or
add
enter
mov
movs
and
call
retf
imul
mov
mov
scas
xor
add
push
inc
xchg
or
or
adc
cwde
xor
(bad)
gs
test
mov
cs
inc
xchg
loop
or
push
je
dec
jecxz
mul
ss
rcr
cmps
xchg
xchg
mov
push
push
gs
cmp
xor
add
outs
push
popa
add
pusha
daa
sbb
paddb
mov
pop
mov
adc
push
shl
test
sub
out
adc
cmc
or
pusha
dec
xor
xor
std
nop
ret
sbb
mov
cmp
pop
or
int3
sub
(bad)
je
je
scas
mov
icebp
addr16
add
mov
mov
push
repz
cwde
outs
and
test
jo
pusha
out
adc
nop
addr16
inc
adc
nop
jnp
adc
add
sub
and
mov
xchg
loopne
test
nop
dec
sar
sub
pop
mov
jg
push
cmp
mov
adc
fcomp
dec
fisub
xor
es
(bad)
imul
mov
sbb
or
loopne
pop
xchg
or
arpl
inc
and
jns
mov
mov
pushf
xor
dec
push
add
adc
(bad)
int
clc
cmps
add
int3
or
ins
jl
add
push
rcl
push
dec
fnsetpm(287
jmp
adc
das
sbb
int3
aam
pop
sub
or
or
lods
fstp
sub
xor
inc
bsf
xor
or
jg
adc
and
ret
clc
and
jl
ret
push
xor
cmps
inc
and
pop
sbb
pop
xchg
fld
(bad)
lods
data16
ret
in
and
sub
mov
imul
in
fbstp
das
ins
lods
fsub
lods
cli
mov
bts
stos
into
in
mov
mov
sub
outs
lods
adc
pmulhuw
xlat
sub
jb
pop
cmps
rcl
(bad)
loopne
xor
loope
adc
adc
movs
ss
mov
adc
iret
mov
or
or
xor
push
and
or
push
and
addr16
add
gs
into
xchg
mul
or
fs
or
push
xchg
es
inc
add
(bad)
in
xlat
cld
pop
or
lds
lock
das
mov
pop
push
mov
ret
xchg
mov
sbb
dec
inc
dec
add
rcr
add
sub
pop
xor
inc
adc
in
and
and
mov
inc
sub
push
outs
daa
push
and
xor
retf
inc
mov
sbb
cmp
and
les
sub
sti
sbb
inc
sub
in
cmp
jle
sbb
je
mov
mov
sbb
test
add
icebp
xchg
sub
inc
inc
push
scas
cmps
xor
pop
add
popf
mov
nop
cdq
cmp
inc
sbb
leave
popf
rol
push
push
sbb
sub
mov
das
inc
and
fistp
jne
add
ret
mov
les
sub
inc
cmps
ud2
or
mov
mov
gs
mov
sub
xor
shl
fldenv
hlt
adc
inc
pop
vmovntdq
outs
or
scas
push
or
mov
daa
sub
push
(bad)
test
jl
(bad)
jle
rcl
rol
push
jl
mov
frstor
mov
test
fs
loopne
mov
sbb
xchg
or
retf
(bad)
ja
adc
adc
stos
fnstenv
retf
jae
sbb
pop
pop
outs
outs
push
mov
push
cmps
adc
inc
jg
in
ret
xchg
fnsave
adc
cmp
mov
loope
cmp
and
push
popa
scas
in
aad
aaa
or
out
outs
ret
daa
jl
xor
and
and
scas
in
add
dec
nop
lds
xchg
mov
fs
or
push
xor
fcomp
push
push
add
and
and
xchg
xchg
jo
or
les
std
pop
push
out
and
rcr
sbb
popa
cs
shl
fistp
push
mov
mov
jne
add
rcl
rol
ret
mov
push
icebp
stos
xchg
pop
popa
inc
mov
std
shl
cmp
mov
cmp
dec
mov
add
adc
scas
or
cvtpi2ps
sbb
or
mov
not
dec
and
and
xor
adc
mov
stos
and
and
popa
cmp
clc
jns
jns
rcl
inc
xor
sahf
cmp
cmp
mov
push
or
cmps
mov
sbb
xor
or
outs
test
adc
bound
sbb
xchg
or
shl
pop
int
dec
shl
imul
xchg
adc
mov
pop
cld
push
fst
cmp
add
(bad)
mov
mov
stos
mov
pusha
(bad)
fcomp
cmp
dec
add
or
mov
add
je
xchg
das
mov
mov
ins
xchg
cmps
inc
int
add
inc
pop
or
mov
mov
ds
(bad)
loopne
inc
or
call
(bad)
adc
mov
jo
aam
fidivr
outs
add
add
jmp
cmp
pop
rcl
out
mov
pusha
or
adc
pop
inc
adc
dec
shl
add
inc
out
cmp
je
cwde
rcr
mov
sar
jl
pop
sar
mov
adc
push
cmp
jge
or
sbb
xchg
retf
pop
or
mov
jno
jne
mov
dec
sbb
or
inc
fmul
(bad)
fimul
and
lods
and
clc
or
sbb
adc
or
data16
mov
ret
pop
sbb
inc
and
cmp
dec
mov
adc
or
daa
retf
or
adc
or
scas
cmp
sbb
xor
mov
ret
mov
jg
add
push
je
int3
mov
pop
xor
push
lods
out
ja
sbb
add
aaa
or
into
or
push
aaa
ins
xchg
push
and
or
add
or
inc
neg
pushf
pop
inc
inc
sar
mov
mov
fist
pusha
inc
push
pop
mov
mov
add
fild
arpl
mov
xor
jne
pop
xor
add
jno
and
mov
(bad)
iret
xchg
mov
mov
inc
or
dec
or
dec
inc
xchg
add
inc
test
or
mov
and
dec
sub
mov
push
into
sbb
test
add
or
cmp
and
xchg
jl
mov
ror
pop
out
cld
inc
xchg
xor
fstp
ret
sbb
mov
sub
xor
out
xchg
jo
(bad)
lea
lea
arpl
fisub
fisub
push
or
es
mov
in
and
or
aaa
push
mov
aaa
jmp
mov
mov
add
dec
in
or
pcmpgtb
push
lods
push
push
popf
and
pop
dec
jbe
push
out
push
add
push
mov
cvtpi2ps
ja
pop
pinsrw
xchg
xor
and
adc
shl
in
xor
dec
inc
xor
xor
add
add
mov
add
pusha
aad
xchg
rcl
mov
xchg
jl
in
adc
mov
popa
dec
rol
out
data16
inc
mov
pop
fwait
mov
je
pusha
es
jge
adc
lahf
pop
pop
inc
xor
nop
pushf
inc
bound
loope
daa
fld
mov
sbb
fcom
and
mov
mov
pop
(bad)
jnp
dec
test
out
mov
sub
jnp
jae
jo
(bad)
sub
jl
inc
push
mov
je
or
pop
pushf
or
int3
les
add
js
(bad)
jge
mov
xchg
ror
add
jp
or
add
and
scas
mov
rol
and
cld
pop
mov
dec
ins
cmps
or
mov
jnp
adc
adc
and
sub
mov
jo
or
xor
cmps
das
mov
push
mov
lods
(bad)
bound
sbb
scas
cmp
cdq
test
push
scas
cmp
sbb
out
pop
lock
sub
cmc
or
leave
sbb
or
xchg
xor
(bad)
cmp
call
aaa
mov
test
sbb
add
pop
dec
rcl
retf
push
or
mov
jmp
retf
xor
adc
mov
inc
mov
icebp
bound
push
je
inc
mov
retf
push
popa
mov
mov
or
xlat
inc
pop
outs
and
shr
rcr
sub
and
push
or
pop
fistp
(bad)
cli
sar
call
jo
call
xchg
cdq
mov
push
cld
push
dec
(bad)
cdq
ins
push
sub
and
fist
mov
add
cmps
imul
sti
add
xor
mov
mov
pop
icebp
in
jp
xlat
add
mov
les
cmp
xchg
adc
cmp
loopne
mov
cmp
jle
sbb
push
add
dec
retf
pop
stc
push
push
mov
sbb
xor
sub
xchg
jbe
int
gs
aam
jl
sbb
popf
test
fs
je
xor
call
xchg
dec
pushf
loopne
jno
dec
adc
inc
pop
dec
jle
mov
sbb
in
test
pop
xchg
f2xm1
inc
mov
bound
or
cli
or
aas
shl
or
jae
and
mov
or
dec
sbb
jl
adc
mov
imul
mov
pop
call
pop
les
cdq
test
jbe
mov
dec
sub
enter
sbb
dec
jnp
(bad)
xor
movs
dec
scas
mov
shr
sub
and
inc
data16
es
scas
add
inc
or
push
arpl
pop
adc
(bad)
cmp
shr
jge
sub
arpl
mov
sbb
xchg
mov
sti
xor
push
je
dec
enter
xor
mov
je
add
jmp
nop
adc
dec
movhps
sahf
mov
push
sub
clc
mov
icebp
and
cli
pop
sbb
and
clc
or
push
sub
mov
cmp
sub
mov
dec
inc
das
ins
push
dec
dec
push
inc
or
xor
or
in
sub
jno
push
popf
and
add
mov
in
rcl
xchg
mov
adc
or
cmp
mov
call
sub
add
mov
sbb
cmp
aam
adc
xor
fs
or
pop
push
xor
or
push
push
add
push
add
mov
and
or
adc
xor
mov
mov
push
cmps
adc
mov
jge
ror
daa
jmp
sub
add
movs
int3
jb
push
adc
pop
addr16
cmp
cwde
movs
cdq
or
mov
mov
and
or
call
push
add
mov
mov
test
jmp
and
stos
lock
pop
add
or
arpl
jmp
and
les
popa
out
or
daa
or
add
cmp
pop
lods
xor
mov
and
push
mov
ss
(bad)
(bad)
(bad)
sub
loope
outs
sub
xor
stos
sbb
xchg
(bad)
xor
cmp
lods
inc
jne
outs
xor
lock
es
or
aas
pop
sbb
popf
je
ret
or
and
aaa
or
or
in
imul
mov
adc
sub
xchg
sbb
add
aam
nop
lea
xor
jb
jmp
shl
mov
inc
mov
gs
les
in
ins
push
mov
ret
and
dec
hlt
in
sub
pop
popa
push
int
inc
icebp
loopne
pop
sub
retf
repnz
and
jno
cmc
adc
inc
inc
pop
adc
mov
jecxz
inc
loopne
ja
loope
daa
cmp
test
sbb
and
add
and
ret
adc
mov
lea
pop
sbb
mov
ds
dec
out
call
ret
cwde
pop
dec
(bad)
and
xchg
add
adc
xor
cmp
test
adc
in
add
or
or
into
in
rol
ins
ficomp
and
dec
sub
or
mov
push
xor
outs
sti
int3
xchg
sbb
mov
and
test
add
and
add
in
movs
in
rol
dec
and
sbb
fadd
test
sar
aam
sub
sbb
jno
push
add
pop
xor
and
scas
clc
mov
ret
sbb
mov
inc
and
mov
mov
test
mov
das
cmp
in
inc
sbb
push
iret
mov
jg
js
add
xchg
and
mov
fdiv
xchg
dec
pop
and
push
outs
icebp
in
adc
or
in
sbb
sbb
aaa
adc
xchg
clc
mov
pop
sub
loopne
xor
rcl
adc
xor
cdq
pop
add
loopne
add
fs
or
adc
sti
and
adc
ds
or
test
ins
call
push
or
push
das
aas
push
push
fadd
out
and
fmul
rcr
cwde
fs
mov
inc
sbb
pusha
es
sbb
xor
mov
rcr
add
jb
rcl
mov
add
xchg
adc
push
(bad)
das
shl
adc
lds
ds
push
stos
cmps
ins
xor
or
or
cwde
aaa
adc
push
xor
dec
mov
cmp
inc
xor
loopne
sahf
pop
pop
mov
push
ja
mov
dec
adc
cmp
adc
dec
adc
or
cmp
mov
movs
mov
ficom
repnz
or
sbb
xchg
push
mov
cwde
nop
jmp
adc
call
and
mov
xor
push
pusha
lods
je
dec
add
movs
cli
push
push
bswap
xchg
or
push
loop
out
xchg
popa
xchg
mov
add
mov
adc
mov
pop
jg
add
xchg
les
mov
rcr
sub
test
addr16
xor
test
push
and
mov
xor
(bad)
xor
dec
sub
xchg
imul
or
push
fs
mov
pusha
pop
cli
pop
add
test
repz
cmp
push
push
and
ret
es
xor
ins
sub
xchg
test
ror
leave
push
inc
test
mov
lea
into
dec
cs
sub
xchg
cmp
xor
dec
inc
pop
jb
dec
nop
push
adc
sbb
adc
cld
adc
mov
pop
inc
pop
jl
adc
adc
add
and
cmps
nop
push
repnz
xchg
xchg
mov
push
add
retf
call
adc
les
movs
jge
out
mov
dec
or
pushf
or
sbb
xchg
sbb
daa
cmp
dec
or
mov
sub
icebp
push
jns
in
mov
sbb
and
pop
retf
push
sub
mov
pop
inc
add
adc
adc
mov
movs
nop
test
inc
inc
cwde
mov
es
sub
arpl
cdq
ret
data16
dec
mov
jo
mov
cmp
sub
(bad)
or
fdiv
nop
lea
xchg
cmp
jecxz
mov
mov
add
or
pop
pop
sub
jno
sub
or
clc
sbb
cmps
push
mov
and
cmps
pop
or
iret
fldcw
mov
call
mov
mov
xchg
leave
loopne
ins
adc
adc
sbb
sbb
jmp
xchg
ins
es
sbb
lods
mov
xor
adc
mov
or
mov
fadd
jae
sbb
sub
jg
dec
dec
loop
loop
sub
mov
sbb
movs
and
xor
and
push
fidivr
(bad)
test
loope
pop
push
adc
daa
pop
cmps
nop
or
mov
adc
fmul
in
ja
pop
sbb
adc
inc
and
movs
pop
xor
push
rol
or
push
push
xor
mov
mov
or
cmp
or
mov
jne
mov
(bad)
fisubr
or
sub
gs
inc
lea
das
mov
lds
xchg
mov
loop
fst
or
xor
sbb
pcmpgtb
movs
lods
rcl
sub
xor
adc
mov
dec
push
push
adc
jbe
or
cdq
lock
bound
or
(bad)
xor
sbb
out
repz
cmps
or
pop
push
fs
cdq
sub
fcmovnb
mov
mov
mov
inc
cmp
cmp
sar
call
mov
and
dec
jmp
ret
or
sub
or
sbb
cmc
push
addr16
imul
enter
cmps
push
xor
pop
arpl
imul
inc
es
nop
push
or
push
pop
cmp
dec
fisttp
mov
(bad)
in
push
push
jne
repnz
lahf
retf
mov
je
xor
repz
add
ja
mov
dec
hlt
repz
jmp
fcmovbe
shl
adc
jo
adc
call
push
pop
adc
das
dec
sbb
es
out
pop
adc
inc
jmp
pop
pop
pop
add
(bad)
ja
push
adc
push
sbb
dec
ret
mov
sahf
pop
mov
retf
and
add
pop
js
jp
and
and
jne
cmp
add
imul
test
pop
xor
adc
push
and
rcl
cmp
push
add
out
in
add
or
add
inc
pop
ret
rcr
dec
add
add
stos
shr
fstp
inc
test
adc
and
sub
cmps
pop
push
jmp
jmp
sub
inc
sub
pop
dec
dec
daa
out
mov
mov
xor
or
dec
call
cs
cmp
pusha
add
stos
cmps
mov
jmp
scas
loope
adc
cwde
shl
mov
les
addr16
sbb
push
imul
sbb
cmp
inc
ret
inc
mov
xor
add
nop
adc
pop
jb
dec
adc
push
lds
jge
lods
pop
adc
in
das
adc
mov
call
and
aaa
nop
fild
sub
cmps
sub
lods
xchg
rol
movs
mov
ja
jo
push
sub
push
jecxz
push
sbb
push
pop
mov
or
xchg
movs
mov
ins
adc
or
ror
sub
pusha
sbb
fsub
retf
xchg
jo
add
pop
aad
adc
mov
loopne
popa
hlt
in
bnd
push
fdivp
popa
test
ret
leave
std
je
mov
adc
cmp
into
and
sahf
push
mov
test
pushf
lock
imul
sub
or
outs
rcr
or
jg
mov
pop
pop
cmp
push
xor
mov
or
adc
or
je
(bad)
mov
jmp
(bad)
dec
or
test
mov
and
adc
adc
push
clc
jge
and
mov
sub
cmp
(bad)
and
push
jmp
push
or
xchg
inc
mov
add
mov
in
test
sub
push
dec
inc
clc
movs
loop
push
mov
xor
or
adc
push
add
cwde
inc
in
add
test
retf
test
sub
or
adc
add
xchg
mov
sbb
xchg
fs
cmp
mov
mov
or
fisttp
les
pop
sub
cmp
test
je
mov
mov
push
pop
test
shl
cld
dec
push
jmp
pop
dec
in
dec
dec
push
inc
popa
push
or
mov
inc
imul
jne
dec
mov
add
mov
adc
data16
dec
loope
shl
cdq
cmp
nop
test
push
push
sbb
test
jecxz
mov
ins
jecxz
pop
in
jo
enter
and
adc
aam
sbb
push
push
xor
nop
dec
fst
or
push
xlat
sub
sub
sbb
push
adc
ins
or
push
adc
mov
rcl
mov
add
adc
mov
out
and
shl
mov
and
add
and
dec
cmp
jmp
jb
inc
cli
dec
jo
sbb
sub
add
aam
inc
add
inc
or
test
jne
sbb
jle
and
xchg
retf
and
and
or
push
dec
les
adc
inc
mov
repnz
inc
(bad)
sub
jb
iret
xchg
push
data16
test
adc
mov
gs
and
call
sbb
sub
mov
mov
les
pop
hlt
or
repnz
not
iret
mov
call
lods
mov
repnz
fsubr
mov
and
adc
mov
pop
sub
mov
add
push
adc
jl
lods
xchg
nop
aaa
push
or
lds
iret
daa
inc
add
neg
adc
sbb
lods
aas
test
sub
sti
pusha
sbb
adc
inc
push
cmp
mov
add
dec
addr16
and
add
test
leave
add
push
es
adc
pop
lds
fsubr
dec
dec
dec
xchg
stc
sub
inc
clc
xchg
jg
push
and
adc
jbe
inc
call
mov
sub
imul
add
pop
jns
out
adc
inc
sub
nop
out
mov
or
outs
in
clc
pushf
jg
xor
fild
outs
or
call
nop
outs
in
pop
sti
test
daa
or
inc
pop
fisub
clc
ss
test
sub
cld
inc
xchg
ror
jbe
and
mov
nop
outs
adc
pop
adc
ficom
punpckhdq
pop
or
sub
xchg
xlat
xchg
inc
pusha
icebp
arpl
or
inc
or
and
or
sub
je
fwait
cmp
add
or
xchg
rol
jne
sub
or
push
xor
cmp
call
imul
mov
cs
movs
add
mov
cmps
cmps
outs
sub
in
fwait
clc
(bad)
imul
movs
in
and
dec
or
cvtdq2ps
cmp
xor
mov
add
adc
mov
jle
mov
cmp
or
mov
xor
nop
nop
ss
mov
or
outs
add
and
pop
in
and
inc
xchg
add
and
fist
leave
xchg
or
imul
dec
cmp
mov
pop
out
cmp
arpl
sub
or
dec
and
int
out
movs
push
imul
fcmovnbe
je
loope
inc
in
adc
pop
pushf
sti
pop
mov
(bad)
call
mov
and
dec
lahf
add
arpl
(bad)
dec
neg
bound
dec
or
inc
or
adc
pop
inc
xchg
rcl
mov
or
bound
or
fnsave
sar
inc
hlt
mov
cmc
add
xor
and
sbb
test
sub
xchg
dec
sub
ror
sub
ror
dec
adc
add
loope
pop
dec
pop
pop
sbb
repnz
imul
xchg
xor
push
xor
push
inc
rcr
out
push
test
sbb
nop
mov
cwde
mov
add
aad
jmp
push
bound
and
retf
push
add
bound
inc
lods
js
and
xchg
add
and
add
push
jae
mov
in
jno
push
mov
dec
and
add
nop
test
vcvtsi2ss
dec
lods
xchg
xchg
inc
or
fcom
adc
dec
adc
pop
push
mov
cmp
jle
shl
ins
jl
or
(bad)
push
mov
mov
mov
push
or
clc
cmc
sahf
es
pop
or
add
popa
in
aas
adc
add
sbb
push
sub
sub
xchg
int
adc
jg
inc
movs
scas
lock
lea
rol
push
mov
dec
mov
and
inc
cld
sahf
nop
adc
mov
je
mov
sub
aad
push
outs
call
push
(bad)
aaa
sbb
push
and
inc
das
add
ret
movs
inc
sub
jmp
sub
mov
std
jge
icebp
sbb
in
dec
aam
mov
mov
fild
xor
dec
(bad)
and
or
call
add
repz
or
mov
sub
and
inc
out
or
mov
xchg
inc
push
push
mov
jmp
jnp
test
(bad)
in
add
lods
aas
jge
icebp
add
call
test
sub
sub
add
dec
adc
push
or
out
add
inc
imul
lock
movups
outs
aas
dec
cmp
ret
adc
inc
adc
(bad)
adc
xchg
imul
dec
jmp
mov
and
and
lods
dec
and
xchg
test
loopne
test
and
xchg
dec
fadd
jbe
nop
push
push
pop
pop
lds
fwait
pusha
and
popf
jae
shl
leave
(bad)
lea
add
inc
mov
adc
mov
dec
or
push
leave
lods
inc
push
push
dec
or
inc
es
bound
jns
out
test
jnp
imul
clc
jg
popf
sahf
psubusw
jg
dec
add
std
inc
xchg
sbb
push
pop
rol
xor
push
mov
iret
mov
sub
out
repnz
sbb
or
inc
repnz
pop
mov
loop
retf
sbb
je
aam
or
mov
pop
xchg
add
xchg
mov
and
in
and
or
popf
fild
jl
xor
cmp
or
xor
sub
cmp
jno
loop
xor
dec
(bad)
ret
or
sbb
ins
and
dec
daa
imul
mov
aaa
pop
data16
dec
(bad)
les
pop
mov
sub
mov
bt
ret
add
pop
enter
in
adc
dec
jno
movs
jb
adc
or
aad
lgs
inc
(bad)
fisttp
(bad)
repz
dec
or
fnstenv
xor
stos
mov
gs
out
scas
ret
test
jne
jmp
cmc
dec
jg
leave
jmp
mov
mov
inc
or
mov
(bad)
nop
and
sub
sub
shufps
sub
sub
fnstsw
retw
sub
or
inc
dec
scas
pop
outs
push
mov
add
inc
add
sbb
movs
mov
or
fdiv
or
leave
cmp
fxch
xchg
cmp
dec
mov
leave
imul
xchg
in
retf
and
rcr
jge
xor
jne
xchg
in
mov
mov
iret
adc
cmp
cmp
loopne
test
out
or
add
push
and
and
and
add
cmp
add
pop
or
mov
sub
icebp
adc
adc
cld
jae
rcl
call
scas
and
xchg
cmp
cdq
or
sub
sub
ret
in
jmp
or
mov
inc
mov
xchg
and
cmp
rcr
add
lahf
call
add
pushf
pop
xchg
push
cmp
in
cmp
add
dec
dec
push
dec
movs
je
ret
push
push
fmul
in
jae
cld
jecxz
push
shl
dec
aad
dec
or
enter
imul
xlat
mov
xlat
push
(bad)
(bad)
pop
mov
mov
mov
push
cld
pop
xchg
xor
or
(bad)
ins
pusha
pusha
sub
mov
loop
xchg
ss
adc
mov
loopne
pushf
dec
or
(bad)
jmp
jecxz
(bad)
fnstenv
retf
rcr
es
imul
aad
add
aam
pop
sbb
and
adc
dec
cmp
sbb
retf
enter
sar
or
cmp
sbb
inc
(bad)
jnp
cmp
mov
or
mov
out
xor
and
inc
gs
inc
adc
add
cmp
pushf
ret
push
pop
and
inc
repnz
ds
xor
ins
pusha
push
pop
(bad)
adc
inc
mov
test
inc
add
push
scas
xchg
xchg
test
repz
sbb
loopne
sub
or
or
push
ja
or
sbb
(bad)
rol
cmp
sbb
shr
daa
xor
pop
pop
xor
sbb
mov
mov
jmp
inc
scas
and
and
outs
mov
test
ja
push
inc
pop
and
pop
ret
(bad)
fsub
ret
and
popa
pop
sbb
aas
adc
mov
xchg
shl
adc
clc
das
sub
xor
mov
xchg
adc
addr16
push
jmp
adc
and
xor
sbb
pushf
mov
push
into
mov
sub
repnz
shr
cmc
jmp
jnp
sbb
pop
sbb
push
dec
ss
mov
dec
push
dec
adc
push
pusha
aaa
pop
mov
lea
ins
lea
(bad)
cmp
ins
loope
call
jo
push
push
or
mov
mov
push
or
rcr
in
out
lods
dec
js
dec
or
fadd
add
int
cmp
or
adc
test
xchg
push
add
adc
lods
jmp
(bad)
or
inc
dec
mov
adc
push
xchg
xchg
or
sbb
sbb
xor
popf
or
mov
add
sub
stos
push
popf
or
in
push
push
sbb
mov
xchg
loopne
addr16
sti
adc
movs
fiadd
pop
xor
stos
sbb
push
pop
add
push
int
or
js
push
inc
xlat
repz
dec
out
pop
xor
jbe
mov
arpl
xchg
sbb
adc
pop
ret
xor
xchg
adc
cmp
daa
pop
ins
push
or
push
or
nop
aam
push
and
jle
loope
pop
add
add
mov
or
in
sub
out
iret
and
push
and
inc
mov
xlat
test
inc
or
mov
jg
mov
pop
sbb
loopne
lock
jle
mov
push
cld
jmp
cmp
sbb
or
bound
or
test
pop
and
mov
push
leave
iret
daa
inc
mov
dec
adc
or
inc
inc
inc
adc
test
inc
cmp
inc
or
and
sub
and
and
or
adc
mov
fisubr
jl
jbe
inc
mov
inc
or
jo
movs
cmp
and
les
loop
xchg
mov
mov
aad
dec
cmp
and
lods
inc
or
xor
nop
sbb
fwait
sbb
adc
outs
arpl
jns
in
in
push
cwde
dec
sub
shr
mov
je
cs
xor
jbe
cli
das
dec
ror
and
mov
fcomp
fwait
(bad)
push
ja
xor
cmp
inc
push
cli
outs
jecxz
or
mov
in
cmp
les
push
fcomp
mov
icebp
inc
retf
jp
add
and
jp
dec
fisub
push
movs
add
pusha
mov
(bad)
cmp
mov
inc
push
es
xor
mov
cdq
xlat
adc
(bad)
in
jmp
das
sbb
dec
dec
cmps
sbb
dec
sub
mov
xchg
lods
aaa
arpl
(bad)
aam
aam
adc
or
inc
lea
jae
fcomp
or
hlt
jb
mov
sbb
sbb
dec
add
les
inc
push
xchg
lea
xchg
jp
fstp
popf
or
jmp
push
dec
sbb
jl
xchg
mov
adc
out
ret
leave
cmps
imul
fcom
test
sub
fs
jns
sub
and
and
push
mov
cmc
add
mov
repnz
or
sbb
cli
and
adc
movs
lods
push
bnd
or
std
xchg
and
or
enter
push
ss
dec
or
add
inc
push
sbb
imul
or
scas
sub
sahf
push
or
rol
pop
call
or
dec
ds
push
mov
lods
test
and
pop
sbb
jnp
add
or
pusha
add
and
cli
sbb
and
push
pop
lea
xor
sbb
mov
sbb
and
int3
push
mov
mov
arpl
add
jg
rcr
int3
jae
sub
rcl
mov
add
and
add
cmp
pop
arpl
push
push
mov
mov
cwde
sbb
jae
push
std
fwait
xor
cmps
clc
dec
sub
xor
es
xlat
push
xchg
push
fisttp
rcr
mov
imul
pop
les
cdq
sahf
pop
and
iret
push
push
adc
push
addr16
and
aam
xchg
in
push
clts
xchg
icebp
imul
pop
push
xor
pop
inc
mov
pop
pop
imul
aaa
pop
or
cmps
cmps
push
and
lods
ret
mov
xchg
outs
or
cmps
push
sahf
in
pop
adc
fdiv
fcomp
loopne
mov
pop
mov
xchg
in
outs
sbb
add
mov
in
inc
or
jnp
ret
rcr
add
add
mov
pusha
push
pop
call
aam
push
fs
dec
add
cmove
je
sahf
icebp
dec
xchg
pop
daa
movs
iret
rol
popf
imul
pop
add
and
sbb
push
mov
push
add
sub
sbb
push
jmp
mov
mov
add
pop
jae
sub
mov
adc
out
lock
xchg
add
inc
call
retf
xor
movs
mov
ss
xor
or
pop
lock
repnz
or
mov
inc
call
mov
jecxz
dec
retf
cld
add
imul
rol
push
sbb
nop
es
das
xchg
test
sahf
mov
dec
mov
enter
xor
jmp
add
test
and
mov
jge
push
push
inc
(bad)
push
push
(bad)
bnd
cmovg
inc
mov
ret
and
xchg
inc
dec
mov
aam
test
mov
inc
or
sbb
adc
dec
xchg
dec
nop
push
xchg
mov
je
jo
dec
xor
inc
or
push
xchg
and
push
jno
xchg
(bad)
rol
xchg
dec
dec
xchg
xlat
adc
push
xchg
popf
adc
pop
cdq
and
sub
es
lea
push
inc
jecxz
lock
dec
test
jge
mov
popf
push
jg
or
and
xchg
ins
and
iret
add
shl
xchg
sti
mov
pop
jg
mov
sub
push
pop
cmc
pushf
sbb
adc
xor
adc
push
and
shl
sbb
push
in
inc
(bad)
aam
leave
and
or
ror
add
sub
mul
lahf
mov
into
cmc
dec
xor
mov
or
add
cs
adc
pop
adc
jmp
and
adc
js
inc
push
dec
mov
and
pop
test
mov
pop
xchg
adc
mov
pop
xor
pop
test
add
jnp
adc
or
imul
push
mov
or
mov
sbb
repz
shl
dec
push
fld
xor
(bad)
popf
mov
sub
pop
movs
(bad)
mov
les
frstor
mov
xor
ud0
or
pop
iret
mov
mov
xor
xor
adc
call
push
ret
add
inc
add
push
and
pop
jne
out
ret
pusha
pxor
adc
dec
mov
push
retf
or
dec
pop
xor
mov
movq
mov
sbb
bound
mov
movs
mov
inc
fdiv
add
inc
inc
fimul
sub
pop
xchg
push
sub
pop
cmp
lahf
movs
mov
xchg
or
adc
cmp
or
mov
clc
mov
loop
cs
aas
inc
hlt
push
add
fsubr
(bad)
std
fwait
sbb
mov
cs
ja
dec
mov
push
iret
test
add
test
repnz
(bad)
add
cmp
mov
rcr
ficomp
or
xchg
jb
xor
ficom
dec
or
rol
inc
je
scas
rcl
inc
sti
inc
inc
rcr
xchg
out
add
or
fs
fwait
loopne
rcl
jne
cmp
dec
movs
sub
or
mov
jmp
out
in
rcr
mov
mov
push
cmp
test
pop
adc
dec
aas
test
fmul
mov
cwde
fdivr
fisub
inc
pop
bound
retf
fldcw
and
pusha
rcl
add
push
div
push
mov
jnp
mov
test
xor
sbb
push
dec
jmp
xor
push
jnp
inc
daa
push
aaa
jmp
mov
jne
jp
or
aad
jne
popa
fisttp
arpl
mov
add
ret
and
out
cmps
sbb
inc
jae
mov
jecxz
popa
adc
adc
xor
popa
dec
push
xchg
lds
je
mov
shr
cmp
ins
cwde
add
mov
(bad)
or
and
inc
and
mov
call
xor
push
add
push
dec
jmp
(bad)
and
xchg
test
cmps
lea
dec
cmp
ror
movs
pop
aas
(bad)
and
enter
scas
jo
inc
jl
sbb
inc
enter
ficomp
imul
test
xor
sub
push
enter
shr
test
or
loopne
pop
(bad)
cmp
pop
ret
pop
add
outs
xchg
ret
pop
sub
push
push
ss
push
mov
jl
adc
mov
pop
and
imul
adc
dec
push
or
rol
(bad)
cmp
mov
xchg
fsubr
push
shr
lods
and
popa
inc
mov
ror
add
mov
mov
xchg
sbb
sti
retf
and
add
mov
jns
sub
jno
mov
adc
and
stos
jle
and
sahf
pop
je
mov
dec
cmp
(bad)
ror
mov
adc
push
inc
icebp
arpl
pop
jae
inc
mov
mov
sub
and
pop
test
ins
inc
push
mov
sbb
inc
imul
add
sub
(bad)
pop
cmp
jg
xor
and
cmp
push
jno
push
mov
mov
cmp
out
test
jo
adc
sbb
out
pop
sub
add
inc
imul
sahf
aaa
xor
mov
dec
pop
outs
and
adc
retf
fisubr
xor
xchg
mov
jmp
pop
adc
mov
cmp
movs
ins
push
pop
icebp
mov
int3
inc
arpl
leave
xchg
xchg
in
push
mov
es
movhps
push
js
sbb
mov
imul
pop
jmp
xchg
pop
dec
or
dec
fcom
scas
adc
add
adc
adc
jg
inc
fs
push
cmp
push
dec
cli
pop
sbb
fst
sbb
retf
and
pop
or
sbb
mov
and
mov
pop
adc
xchg
test
(bad)
mov
aaa
adc
mov
pop
pop
aaa
mov
mov
and
jg
sub
push
xor
mov
push
adc
add
cs
mul
xor
push
push
dec
add
pop
xor
mov
in
fmul
jne
push
xchg
xor
mov
mov
maskmovq
test
xchg
mov
mov
dec
sbb
imul
ins
lahf
push
sbb
je
pop
dec
cmp
(bad)
je
push
das
mov
xchg
shl
inc
ficom
adc
inc
(bad)
leave
add
cdq
daa
xchg
sub
push
sub
add
pop
add
repnz
sbb
pop
jae
aam
push
imul
jno
mov
aam
push
in
and
mov
daa
dec
add
test
sbb
sbb
imul
ja
int3
pop
pop
push
jb
mov
inc
ins
pop
out
adc
cli
cmps
mov
sbb
xor
xlat
inc
pop
xor
aam
enter
bound
std
and
inc
ins
adc
jnp
clc
fnsave
and
inc
ret
or
and
or
rol
pop
xchg
in
aaa
and
cmp
xor
push
push
and
stc
xchg
mov
test
les
nop
cli
gs
mov
xor
aad
test
xor
xor
or
or
icebp
dec
jns
dec
stos
mov
fwait
sbb
inc
dec
push
cmp
cmp
fwait
xchg
and
daa
and
push
xchg
adc
shr
sbb
add
sbb
enter
pop
nop
dec
jl
push
push
add
and
push
and
push
jb
sbb
dec
push
inc
sar
xor
aaa
jns
adc
lods
sub
adc
mov
rcr
sub
pop
or
cmp
jae
lock
enter
jo
mov
dec
mov
and
dec
bound
(bad)
scas
test
adc
mov
dec
add
xor
xchg
xchg
sub
cmp
and
or
pop
push
test
and
sbb
rcl
iret
not
mov
repnz
pop
sub
out
jp
mov
pop
jp
xchg
inc
and
sti
lds
sub
lahf
into
div
mov
pushf
sysret
dec
mov
mov
nop
xlat
mov
adc
mov
sub
bound
push
mov
push
into
aad
jns
inc
mov
xor
fadd
pop
xchg
ror
or
ret
sub
repz
mov
lods
pop
push
jne
xor
pop
retf
sbb
dec
and
adc
or
sub
dec
and
jmp
xor
push
pop
mov
les
and
push
and
rcl
cli
or
and
call
fistp
ret
popf
pop
or
push
mov
jg
outs
call
dec
jg
dec
sub
jg
dec
loop
pop
or
ror
jne
pusha
imul
xlat
fsubr
jb
adc
mov
lea
cmp
sub
xchg
mov
shl
mov
inc
imul
lahf
jae
pop
movs
cdq
pop
push
das
retf
loopne
mov
jne
je
out
retf
fld
retf
rcl
aas
xor
ds
jmp
inc
add
ret
push
les
cmp
cmp
push
imul
inc
xor
mov
test
mov
pop
popa
adc
lea
push
shl
das
dec
or
mov
inc
jns
dec
daa
or
test
jno
push
aad
pop
test
cld
(bad)
jmp
lods
lahf
push
mov
inc
or
fcom
or
ror
mov
aam
cmp
or
and
cmp
mov
out
push
mov
lock
es
adc
dec
lea
pusha
push
push
dec
and
dec
and
add
out
das
loopne
inc
xchg
mov
dec
push
xchg
cmp
xchg
push
xlat
mov
add
mov
xor
inc
cs
adc
add
xor
loope
mov
add
cdq
jge
jmp
and
arpl
and
imul
xor
mov
push
mov
cmp
sub
in
adc
mov
inc
imul
add
mov
jne
mov
push
inc
mov
sbb
out
or
or
in
cmp
aam
mov
test
jne
jo
pop
jb
cmp
sbb
fwait
fs
inc
sti
add
inc
mov
sete
sbb
pop
(bad)
cmp
push
or
cmc
sbb
mov
and
adc
adc
add
jle
sbb
ins
dec
imul
xlat
rcl
and
jnp
ret
adc
dec
fld
cmp
xlat
mov
(bad)
sbb
repz
fdivr
xchg
or
push
fucomip
nop
stos
clc
dec
fadd
mov
mov
push
dec
cvttpd2dq
in
jecxz
icebp
nop
imul
fs
cmps
adc
imul
rcl
xchg
inc
push
shl
enter
inc
adc
aam
sbb
enter
cmp
test
mov
mov
jmp
dec
inc
popa
or
lock
lock
in
icebp
ss
lea
out
fcom
leave
lds
sub
dec
sahf
adc
hlt
scas
or
dec
fidiv
jne
fstp
pop
rol
xchg
adc
ins
rol
out
push
aaa
push
mov
mov
adc
ficom
sub
or
push
ja
es
(bad)
call
xlat
vpshlb
in
pushf
adc
ret
or
mov
and
(bad)
int3
push
daa
adc
xchg
adc
dec
movs
pop
pop
leave
rol
jne
adc
inc
shl
sbb
(bad)
mov
adc
add
dec
sahf
adc
cdq
adc
sub
pusha
mov
(bad)
push
mov
xchg
clc
mov
out
add
js
dec
cmp
jle
lock
dec
push
inc
icebp
xchg
adc
adc
sahf
mov
cmps
fadd
mov
cmp
(bad)
pop
in
fs
pop
xchg
fcom
cmp
repz
add
xor
out
sub
stos
inc
ret
and
fbld
or
mov
sti
add
mov
add
sub
ret
pop
ja
ins
or
adc
cmc
lods
or
fdiv
sub
or
or
sub
adc
mov
gs
ins
or
out
dec
ds
cmp
and
dec
enter
inc
xor
(bad)
add
fimul
mov
outs
add
inc
ror
scas
push
xor
call
adc
imul
pop
sbb
dec
mov
bound
rol
inc
and
ja
in
das
inc
ret
imul
push
ja
sbb
cmp
js
add
add
rol
add
dec
jb
sub
mov
inc
add
int3
sub
js
or
jae
paddsb
pop
inc
cdq
fcom
stc
lock
and
in
mov
sub
outs
sbb
lock
add
adc
mov
sub
pusha
dec
fcomp
in
lods
adc
aam
fdivr
cs
or
retf
jno
or
and
sub
and
xor
fadd
xlat
push
mov
push
xor
loope
dec
xchg
nop
cmp
or
adc
mov
(bad)
dec
sub
push
retf
push
sbb
daa
test
mov
in
mov
or
push
pusha
add
jb
dec
xor
xor
or
pop
xor
inc
leave
add
inc
cmp
sbb
and
cmp
cmp
jb
xchg
inc
cmp
mov
jo
push
call
movs
test
(bad)
fcom
mov
inc
sbb
sub
(bad)
inc
add
loope
pop
test
and
jo
push
adc
dec
test
pushf
cmp
xchg
mov
pusha
dec
adc
popa
add
or
push
cmc
sbb
retf
out
adc
in
sbb
pop
adc
mov
push
lods
sbb
pop
pop
mov
sub
jne
rcl
xchg
or
aas
aam
add
daa
sar
and
iret
outs
lahf
mov
mov
adc
mov
or
or
mov
movs
(bad)
test
or
repz
sbb
adc
shr
in
mov
out
push
adc
inc
adc
adc
fild
push
je
push
jne
movs
jle
fisttp
inc
pop
push
cmp
ror
bound
adc
gs
dec
xchg
push
dec
out
xor
sub
js
mov
outs
xchg
loopne
out
imul
dec
cmp
jne
xor
js
inc
inc
fisttp
(bad)
cmp
(bad)
push
arpl
dec
sbb
sbb
and
lods
int
or
movs
retf
(bad)
into
mov
popa
dec
or
mov
mov
xchg
mov
xchg
rcr
sar
mov
jmp
xor
and
dec
and
pop
inc
dec
add
fs
nop
out
dec
sbb
pop
shl
xchg
pop
popf
push
push
adc
adc
sub
icebp
test
sub
jge
push
je
sub
push
and
mov
sti
jo
mov
xor
(bad)
pusha
cli
adc
fistp
out
and
vandps
sbb
test
jne
xor
movs
and
int
mov
mov
sbb
das
and
ror
inc
pop
in
lea
fiadd
adc
in
pop
push
inc
push
pop
shr
ss
lock
sbb
jp
sub
inc
adc
push
add
push
inc
sub
sbb
ins
push
adc
jle
inc
push
xor
les
ret
addr16
push
pop
or
les
cmp
scas
or
or
ret
cmp
pop
rcl
add
(bad)
fnstsw
rol
cmp
in
lahf
mov
add
(bad)
addr16
dec
les
add
xlat
pushf
pusha
rol
(bad)
mov
outs
dec
pusha
shr
call
movs
xchg
sub
and
dec
loop
or
mov
aaa
cwde
and
dec
pop
stos
push
and
sbb
out
vmovhpd
sub
jge
(bad)
out
loope
xchg
inc
fist
jno
add
xor
lock
push
dec
and
in
pop
mov
shl
fld
or
jmp
pop
mov
xor
sbb
or
add
mov
or
push
adc
mov
push
add
pushf
sub
pop
add
cmp
aad
mov
test
or
outs
xor
les
dec
(bad)
int3
(bad)
and
adc
ins
xlat
jns
ret
push
cmps
sub
pop
xlat
in
mov
push
sbb
rol
jno
pop
clc
sbb
pop
pop
rcpps
dec
sub
cmp
xor
test
mov
inc
push
popa
movs
cdq
mov
lods
cmp
add
and
and
mov
dec
mov
pop
es
xabort
sub
mov
push
mov
and
adc
xlat
lock
xor
push
cmps
mov
push
push
xor
add
sub
add
nop
push
(bad)
lods
xor
pop
ins
push
inc
pusha
int3
jno
and
nop
inc
push
inc
or
jne
adc
jg
jp
sbb
xor
xchg
inc
xor
inc
movs
push
aam
vpminub
mov
xchg
mov
rcl
aas
jne
movs
dec
nop
outs
or
fadd
icebp
daa
mov
neg
xor
add
inc
adc
cmp
fdivr
ja
pusha
pop
ins
rcl
cmp
push
push
mov
mov
jp
add
cmc
cmps
loopne
push
pop
xchg
jae
add
jmp
popf
sbb
es
dec
adc
es
xchg
xchg
ins
ins
and
shl
and
sbb
(bad)
call
xchg
sbb
jmp
lock
inc
mov
adc
add
add
lods
neg
sub
test
movs
je
and
pop
popf
js
aaa
movs
push
ror
lock
imul
adc
fild
sub
add
test
inc
adc
mov
test
retf
add
or
rcr
xor
ror
in
add
mov
fcom
psllw
cs
mov
sti
je
bound
fwait
cmp
mov
jmp
jb
pop
cs
and
in
mov
xor
or
pop
push
ss
ffree
inc
leave
jae
mov
add
mov
jo
inc
sti
stc
dec
xor
push
or
jmp
sbb
adc
popa
gs
mov
sbb
pop
or
cdq
stos
xor
stc
cmp
xor
cmova
mov
cmp
cwde
pop
jnp
dec
xor
push
ret
fadd
fwait
sbb
pop
and
or
in
inc
popa
adc
adc
adc
jnp
xchg
in
push
adc
mov
xor
mov
nop
sbb
test
je
jnp
mov
add
sbb
xchg
shl
call
in
dec
mov
js
das
xchg
ins
loopne
stos
in
sbb
add
retf
aas
into
push
sub
pop
jp
leave
jge
xchg
out
int3
sub
clc
sbb
loopne
add
cmp
ror
adc
lods
dec
xor
mov
mov
xchg
es
pop
inc
sbb
(bad)
cmp
fistp
lea
sar
lods
(bad)
add
cmp
leave
ficom
div
aaa
jl
jg
popf
hlt
lock
mov
and
push
in
aam
mov
sub
dec
jge
aaa
jecxz
sub
(bad)
cmps
clc
(bad)
fcom
mov
push
pop
cli
push
mov
(bad)
sub
aam
popf
call
cmp
iret
push
dec
(bad)
test
rol
rcr
popf
sub
sub
jecxz
call
inc
lea
stos
mov
mov
push
rol
(bad)
add
sbb
iret
add
adc
setl
(bad)
aam
fs
jmp
or
loope
in
ret
sub
push
loope
sbb
scas
(bad)
xlat
(bad)
rcr
fidiv
sbb
rol
adc
jbe
or
pop
ds
daa
sbb
fisttp
xlat
fisttp
pop
xchg
shl
je
jne
adc
and
call
mov
imul
dec
dec
jmp
pusha
movs
in
add
cmc
sub
nop
and
pop
push
loopne
mov
xor
and
sub
add
add
je
add
js
mov
test
add
add
leave
mov
loop
xor
or
jbe
pop
cmps
inc
add
jle
and
lods
push
mov
faddp
xor
sub
sub
pop
and
ins
ss
xchg
fs
imul
scas
(bad)
xor
mov
or
lods
pop
inc
inc
daa
sub
dec
call
xchg
(bad)
add
adc
test
icebp
add
jne
inc
cmps
sar
cmps
in
or
xor
fld
fisttp
adc
mov
inc
mov
mov
cwde
inc
sub
or
cmp
add
mov
add
retf
adc
out
xor
push
xor
mov
lods
or
add
iret
xchg
pop
out
or
dec
adc
inc
hlt
add
dec
loopne
push
dec
or
xchg
rol
stos
inc
(bad)
jns
mov
je
jae
push
xor
test
adc
xchg
add
mov
out
sbb
cmp
scas
or
out
daa
and
fadd
sar
cs
adc
xchg
pop
and
and
mov
(bad)
arpl
retf
add
jg
mov
cmp
lods
mov
dec
imul
pop
inc
das
dec
stc
or
inc
pop
jg
and
iret
jg
les
loopne
jns
loopne
add
add
inc
inc
arpl
daa
xchg
(bad)
mov
push
push
add
cdq
aaa
add
xor
mov
addr16
xor
and
jnp
out
sub
call
jge
and
and
adc
in
pop
jbe
cdq
call
(bad)
nop
inc
mov
and
and
cmp
jle
jmp
inc
div
cmp
(bad)
or
inc
xor
imul
add
push
mov
inc
push
add
add
or
dec
sahf
dec
or
adc
xchg
inc
and
iret
movs
inc
shl
and
push
sbb
and
adc
fldcw
adc
pop
ds
dec
sbb
mov
cmp
jo
call
fwait
push
test
or
in
sbb
rcl
pop
ud1
cmp
xor
add
in
add
pop
push
inc
call
aam
sbb
push
or
or
pop
jne
jmp
stc
imul
xor
ins
test
clc
adc
mov
xor
addr16
test
test
and
in
dec
add
aaa
xor
mov
pop
cmp
mov
cmp
aam
es
ja
enter
aaa
adc
push
mov
cmp
pusha
cmp
or
pop
cld
xchg
dec
xchg
inc
popa
inc
lds
les
(bad)
mov
inc
adc
test
jo
dec
sbb
inc
or
dec
adc
sar
jge
pop
fimul
rol
ret
xchg
movs
push
push
jge
pop
xchg
es
xchg
mov
or
in
adc
les
sub
or
xchg
push
mov
arpl
aam
mov
or
scas
or
cld
adc
es
movs
imul
sub
add
icebp
sbb
popf
fdivr
loope
adc
sub
pusha
and
mov
bndldx
adc
sbb
mov
lds
popa
xchg
and
xchg
sbb
push
pop
popf
test
jge
in
cmc
test
or
xor
fwait
sbb
mov
pop
adc
ins
das
push
sbb
xlat
xor
pushf
retf
sbb
mov
mov
hlt
and
ins
mov
sbb
pop
mov
rcl
das
xlat
sub
adc
mov
and
fdiv
sub
add
push
xor
sub
push
adc
add
adc
rcl
jge
inc
adc
sbb
inc
add
xor
mov
push
in
lahf
pop
push
or
push
pop
sub
arpl
ss
jne
mov
mov
loope
xchg
xchg
push
imul
mov
fild
aaa
out
(bad)
mov
lea
adc
outs
xchg
outs
push
stos
and
stos
hlt
mov
mov
jne
scas
and
or
add
and
add
or
mov
dec
or
retf
loopne
cmp
xchg
mov
pop
jecxz
retf
mov
dec
dec
inc
jl
aam
adc
xchg
mov
pop
jmp
and
adc
in
pop
in
retf
ret
loopne
xchg
or
imul
aaa
cmp
rcl
dec
arpl
cmp
pop
push
je
jnp
cdq
sub
mov
dec
jp
pusha
xchg
jne
iret
mov
xor
adc
in
daa
hlt
(bad)
aaa
jne
add
pop
mov
xor
xor
pop
ins
jb
jp
cmp
cwde
xor
ret
scas
or
pop
je
nop
shr
xor
sbb
loope
add
and
jp
js
addr16
inc
push
push
or
test
sbb
jb
repnz
xor
or
fwait
add
adc
xor
or
dec
mov
adc
shrd
(bad)
sti
clc
jne
(bad)
mov
cmp
mov
(bad)
cmp
adc
out
mov
jne
cmp
jecxz
jmp
xor
in
sbb
cmp
dec
pop
retf
xchg
or
jecxz
(bad)
pop
adc
cmp
add
aas
mov
mov
sub
jbe
and
enter
sbb
xor
sbb
pop
(bad)
push
mov
cs
cmp
nop
add
mov
inc
in
mov
push
sub
add
or
sbb
fld
je
sub
inc
js
mov
lods
inc
jo
cmp
inc
es
and
and
dec
mov
or
data16
and
ds
in
add
jge
mov
test
repz
mov
jmp
fsubr
stos
pop
push
(bad)
xchg
gs
clc
dec
repz
lock
aad
pop
dec
and
xchg
pop
sti
or
jmp
mov
adc
fsubr
lock
mov
adc
mov
cmps
lds
daa
imul
(bad)
sub
xor
sub
repnz
mov
ins
cmps
or
pop
add
sbb
push
mov
push
pop
hlt
dec
lds
cmp
inc
push
inc
sbb
repnz
sahf
pop
cmp
clc
sbb
ret
scas
push
(bad)
rcl
and
mov
or
pop
mov
addr16
push
shl
xchg
dec
xchg
je
inc
sbb
mov
dec
mov
pop
or
and
cdq
pop
int
arpl
pusha
xor
mov
or
pop
fs
cmp
(bad)
cmp
inc
mov
popa
dec
pop
jge
mov
inc
out
or
jmp
fdivr
xor
push
or
mov
arpl
rol
xchg
mov
or
jmp
sbb
out
or
xor
cmp
xor
(bad)
or
cmp
or
aas
xchg
cmps
xchg
or
retf
ret
dec
popf
adc
pop
push
add
and
add
in
frstor
aas
add
pop
fistp
and
add
outs
sbb
retf
mov
dec
popa
xchg
fisubr
jns
int3
stos
and
adc
adc
sub
mov
jbe
jo
mov
or
daa
fiadd
leave
dec
jno
ja
fstp
push
repnz
pop
nop
mov
out
out
in
adc
adc
in
fs
in
test
inc
and
cwde
clc
lea
rol
mov
ret
mov
xor
(bad)
fadd
xor
inc
xchg
mov
or
movs
movs
jne
jo
xor
cmp
aam
add
adc
sbb
xchg
pop
dec
ret
adc
out
mov
adc
in
ss
xchg
pop
cs
mov
pop
das
shl
xor
in
lock
mov
or
mov
cmc
inc
jmp
xor
xchg
pop
adc
xchg
rcl
adc
adc
sub
xor
mov
push
xchg
push
pusha
cmp
mov
xor
add
in
xor
loopne
and
or
pusha
mov
out
in
fld
or
push
mov
push
xchg
out
mov
xor
sti
aas
imul
add
cmp
jge
dec
sub
or
aaa
outs
push
inc
or
out
sbb
push
adc
sbb
xor
data16
inc
lods
adc
adc
ret
sub
or
movs
std
pop
xor
adc
dec
inc
je
je
adc
mov
mov
add
bound
mov
push
data16
dec
bound
add
and
mov
test
add
sbb
ja
popa
aaa
push
aas
cmps
dec
imul
push
or
mov
sub
xor
(bad)
fnstenv
pop
div
dec
mov
sub
mov
push
xor
inc
into
or
xchg
dec
and
adc
dec
sbb
sbb
push
or
nop
xor
test
sahf
add
aaa
jbe
loopne
popf
inc
mov
pop
sub
add
mov
scas
jno
mov
icebp
pop
es
(bad)
sti
pop
adc
sbb
jge
adc
ins
imul
test
push
or
pop
push
push
and
aad
jo
jb
mov
dec
test
cmp
add
dec
sbb
or
scas
add
inc
nop
js
adc
retf
test
aaa
(bad)
adc
mov
test
push
movs
iret
adc
jl
sbb
and
lds
retf
ins
movs
rcl
aam
(bad)
leave
cmp
add
jle
daa
dec
pop
ret
xor
jl
or
call
fwait
add
or
or
jno
add
mov
stos
pop
cmp
lods
mov
jmp
mov
push
mov
or
inc
or
dec
rol
pop
adc
cmpps
push
popf
ins
mov
dec
jne
gs
dec
les
sets
retf
dec
add
push
fwait
inc
push
adc
sbb
outs
sub
sub
pop
push
inc
adc
add
xor
pop
xor
adc
movs
(bad)
sbb
jne
cs
xchg
xchg
dec
popa
ror
add
dec
mov
mov
loope
enter
jbe
push
or
xor
mov
adc
fsub
in
mov
pop
sbb
and
inc
lods
push
ins
push
mov
sub
jns
sbb
inc
pop
mov
sub
xor
pop
xor
popa
sub
es
pop
xchg
das
ror
ds
pop
call
daa
pop
dec
icebp
mov
inc
sbb
or
inc
inc
sub
and
cwde
xchg
push
cld
and
rcl
sub
and
add
rol
(bad)
gs
inc
sbb
push
add
add
sbb
test
shl
add
movs
xchg
jl
stos
in
add
add
sub
mov
(bad)
dec
pop
fwait
les
inc
cmps
mov
pusha
in
mov
cmp
sbb
and
jmp
out
xchg
fwait
sbb
adc
adc
dec
push
xor
add
or
mov
daa
and
(bad)
aas
ret
ror
inc
inc
mov
fwait
add
test
idiv
and
adc
mov
add
pop
mov
jg
lea
cmp
add
les
xor
imul
push
mov
mov
pop
and
mov
or
nop
mov
cmp
and
xor
xor
inc
int3
ja
call
or
ja
push
fld
mov
sub
mov
shr
adc
sbb
shr
cmp
cs
push
cmp
inc
push
imul
xor
push
push
mov
push
aaa
and
push
mov
popa
jg
jge
jle
sub
call
popf
or
and
pop
cmp
test
in
mov
je
push
dec
(bad)
retf
and
pop
lea
retf
add
nop
or
jl
mov
cmp
popa
or
sub
outs
fistp
iret
dec
jne
fcmovne
xor
xchg
pop
ret
xor
pop
call
ja
int3
mov
test
stos
sbb
xchg
sbb
ror
or
pop
or
inc
jmp
or
and
jnp
cmp
inc
sbb
ret
mov
rcl
fs
ja
push
add
je
push
out
sbb
inc
add
fisubr
adc
push
xor
pop
sbb
int
xor
sbb
in
inc
xor
imul
push
push
add
or
es
ret
cmp
jo
les
sub
add
js
adc
jno
aam
mov
imul
add
fist
inc
pop
sub
push
das
mov
mov
in
imul
loopne
aaa
cmp
pop
or
inc
adc
rcr
in
inc
iret
push
inc
sub
dec
sub
shl
loopne
xor
jle
xor
es
add
dec
xor
sbb
or
gs
call
or
lahf
push
inc
pop
arpl
ins
dec
movs
push
xor
cmp
mov
loopne
add
push
inc
fbld
and
mov
push
mov
or
mov
xor
idiv
loop
scas
je
lock
vmovapd
mov
push
cs
fs
inc
call
inc
pop
push
fimul
sahf
fs
push
push
jg
inc
add
in
push
dec
inc
dec
inc
xchg
inc
repz
(bad)
inc
or
imul
push
sti
pop
xor
jl
test
loope
cmp
cdq
inc
test
imul
push
push
jne
fdiv
dec
sbb
ret
mov
dec
(bad)
or
inc
movs
add
and
loopne
inc
dec
add
and
add
rol
loopne
dec
stos
jmp
dec
mov
cwde
mov
stos
nop
and
sbb
push
pop
push
push
sti
push
jne
sub
(bad)
xor
jo
mov
sar
cmp
mov
lock
or
jl
jne
push
or
and
add
mov
in
pusha
jg
adc
xlat
scas
inc
enter
jmp
cwde
adc
mov
ins
add
sbb
adc
test
and
xchg
xor
jge
or
imul
sub
mov
popa
and
test
sub
adc
cdq
and
inc
mov
jb
das
push
sahf
adc
xlat
scas
and
cmp
dec
xlat
sub
or
mov
or
push
xchg
and
inc
adc
dec
xchg
loope
sbb
jns
test
jmp
outs
xchg
and
add
adc
mov
test
push
adc
mov
pop
xor
cmp
ja
xlat
add
cmp
jge
or
dec
mov
adc
jp
pop
pop
inc
adc
add
xlat
push
ror
push
inc
pop
popa
lea
mov
mov
stc
pop
cld
jg
and
sbb
clc
and
sbb
cmp
and
cmp
cwde
bound
xchg
enter
aam
std
push
xchg
outs
pop
daa
jle
sub
pop
ret
xor
jno
pop
push
add
push
pop
nop
jo
push
lahf
and
push
movs
pop
mov
mov
mov
ret
test
js
popa
cli
into
fnstcw
fnsave
add
cmp
cmp
in
xor
sar
dec
ror
xlat
icebp
(bad)
(bad)
mov
jmp
add
sub
mov
test
push
(bad)
mov
pop
aas
or
dec
into
ja
push
and
stos
es
adc
mov
xlat
and
sbb
adc
push
adc
cli
or
jae
add
xchg
test
add
mov
adc
push
fs
push
inc
popf
mov
ret
jno
dec
push
cmp
sub
push
jo
adc
rcl
mov
push
stos
dec
adc
retf
push
(bad)
stos
dec
(bad)
and
sbb
sbb
dec
cmp
cmp
mov
daa
cld
cld
mov
add
inc
pop
ins
or
sbb
jno
jne
mov
ins
and
(bad)
pusha
xor
sub
or
pop
xchg
or
add
pop
push
pop
dec
cmp
pop
pop
les
add
push
push
push
or
nop
mov
push
pushf
(bad)
ret
and
add
add
(bad)
cs
cld
ror
bound
or
addr16
mov
sub
mov
fs
cs
or
sub
mov
dec
and
sbb
inc
repnz
in
nop
push
jne
lods
hlt
pop
adc
popa
and
mov
xchg
and
and
bound
cmp
popa
rol
outs
push
test
or
enter
sbb
dec
or
ss
or
push
(bad)
dec
or
rol
rcr
xchg
add
xor
pop
or
xor
and
fiadd
sbb
sbb
jmp
or
mov
add
test
jne
add
mov
pop
leave
test
pushf
xchg
push
inc
and
pop
push
in
or
or
cmps
adc
loope
mov
repz
mov
outs
call
push
cmc
pop
jecxz
nop
pop
pop
jne
jo
sub
push
pop
add
sbb
pushf
sub
jb
mov
pop
retf
pop
pop
inc
test
mov
sub
mov
enter
xchg
add
rol
mov
dec
test
dec
fnsave
clc
xchg
jl
clc
jmp
ss
or
inc
inc
imul
enter
call
dec
add
add
ja
aaa
test
pop
jo
stos
dec
cmp
adc
inc
mov
push
repz
dec
push
push
jb
xlat
lods
pusha
dec
dec
adc
test
pushf
nop
outs
pop
xor
pop
and
push
pusha
fist
inc
mov
push
mov
daa
and
cmp
out
pop
add
mov
pop
dec
push
cmps
into
retf
dec
inc
dec
sub
dec
adc
hlt
das
adc
add
call
jmp
sbb
cmps
lods
pop
cwde
in
bound
or
adc
test
pop
bound
push
sti
add
and
sbb
mov
and
mov
iret
and
jmp
inc
cmp
imul
jp
or
add
dec
or
or
dec
xchg
ret
pop
or
das
dec
popa
dec
mov
adc
mov
fdiv
jle
or
ins
and
jae
mov
dec
mov
cs
arpl
sbb
aas
scas
int3
jns
or
xchg
lock
fidiv
fsub
jp
ins
inc
add
jl
addr16
dec
mov
pop
add
outs
mov
fs
imul
enter
test
jne
ins
jnp
push
jle
sub
nop
lods
addr16
movs
jnp
add
xchg
or
sbb
push
dec
das
dec
clc
fwait
and
jle
movs
outs
mov
je
shr
test
enter
fdivr
add
push
and
retf
data16
jle
je
pop
ins
bound
pop
inc
or
nop
jbe
and
mov
fcom
xchg
loopne
test
jmp
fcom
mov
mov
or
movs
arpl
or
and
imul
arpl
and
nop
xor
push
adc
or
adc
and
fs
add
rol
pushf
adc
sbb
mov
push
mov
mov
push
inc
add
int3
push
add
nop
pop
add
or
inc
call
repnz
(bad)
xchg
(bad)
xor
and
mov
xchg
add
sbb
adc
sbb
or
and
es
pusha
movs
add
xor
mov
fsubr
and
inc
addr16
and
and
adc
sbb
jb
and
and
adc
xor
and
mov
mov
aam
les
mov
push
add
inc
mov
rcl
push
add
push
pop
and
dec
in
pop
or
aad
fiadd
add
sti
aad
ret
pop
aad
arpl
cwde
scas
mov
mov
sub
ins
ficomp
dec
inc
cwde
mov
dec
imul
xchg
mov
xchg
or
outs
xchg
sbb
adc
xchg
add
push
test
mov
push
lock
sbb
fwait
adc
adc
add
dec
movs
push
aam
dec
jnp
sbb
mov
popa
push
or
repnz
push
mov
sbb
dec
div
dec
mov
jne
push
aas
mov
test
daa
xor
push
and
mov
cmp
retf
test
cld
and
adc
add
ror
je
sub
push
cmp
dec
or
fs
inc
rcr
add
sbb
out
mov
dec
retf
shr
and
and
xchg
sar
loopne
inc
cmps
and
adc
(bad)
or
mov
xchg
les
dec
adc
mov
inc
cmp
and
test
mov
push
es
les
pop
std
mov
and
sub
je
mov
push
and
xchg
push
lds
inc
inc
ret
add
jg
inc
mov
es
dec
and
add
lea
push
call
pop
daa
inc
call
out
sub
jne
pusha
inc
addr16
inc
pop
push
and
dec
sub
call
or
inc
sub
enter
pop
mov
pop
adc
div
popf
add
xchg
inc
sbb
sub
cmp
sbb
popa
shr
mov
ror
aad
push
fcomp
out
cmp
push
jbe
movs
sbb
les
popa
sbb
xor
movs
mov
jae
adc
pop
(bad)
sbb
test
or
xchg
add
mov
test
add
test
test
pop
and
pop
adc
push
jno
and
icebp
pusha
imul
push
nop
aad
or
pop
ror
pop
dec
(bad)
adc
bound
mov
xor
cmp
cmp
mov
sbb
jl
sub
enter
imul
mov
jbe
mov
ss
mov
sub
mov
pop
mov
lods
xchg
or
xor
add
push
movs
push
xlat
sti
and
xchg
xor
jmp
je
mov
shr
inc
inc
xchg
xor
mov
push
mov
mov
or
ins
mov
adc
ja
push
dec
adc
jbe
or
or
jo
(bad)
sbb
cmps
dec
cs
add
adc
xchg
or
fnstsw
xchg
xchg
xchg
dec
in
call
push
adc
movs
outs
sar
mov
add
add
or
inc
dec
and
xor
rcr
fstp
int3
loopne
push
xchg
mov
pop
mov
mov
leave
push
jl
xor
in
adc
cmps
add
ins
push
xor
cmps
aaa
mov
loope
dec
xor
aas
lds
push
jmp
dec
sbb
int
cmps
sub
std
lds
adc
inc
test
fwait
call
add
add
mov
adc
add
or
stos
mov
xchg
fwait
ret
xchg
inc
daa
rcl
add
pusha
xor
inc
dec
xchg
lods
xor
mov
(bad)
lock
jle
or
pop
fsubr
xchg
push
or
fld
loope
jne
imul
or
mov
and
mov
mov
inc
push
mov
ror
ins
aaa
sub
or
sub
pop
inc
pop
sub
inc
add
sub
xchg
test
sti
sub
into
dec
inc
xchg
jle
or
push
ss
push
icebp
push
nop
imul
jge
xchg
sbb
or
or
cdq
aam
fdivr
or
push
sti
sbb
inc
sbb
xchg
add
push
sub
nop
sub
fsubr
add
dec
cwde
xchg
mov
cs
sbb
addr16
pop
imul
fiadd
test
mov
arpl
rcl
pusha
mov
sar
sbb
imul
movs
inc
clc
cmps
xor
arpl
sub
rcl
mov
test
cmc
fs
and
rcr
loopne
or
inc
scas
push
add
mov
or
inc
jno
and
cmp
and
loopne
inc
fsub
mov
scas
and
sahf
or
push
mov
add
pop
clc
loopne
jne
adc
lods
rol
jmp
and
das
and
sbb
fdiv
adc
pop
fwait
mov
and
add
dec
scas
mov
addr16
loopne
or
enter
and
jge
jmp
and
fcomp
add
es
or
fadd
cmp
dec
pushw
add
jnp
adc
cmp
sbb
jo
jmp
dec
in
outs
rcl
adc
dec
fsubr
mov
xchg
dec
and
(bad)
mov
adc
add
xor
pop
xchg
mov
xor
push
pop
sub
enter
push
ret
push
dec
xchg
adc
add
(bad)
sub
sbb
or
jp
repz
fnstcw
and
(bad)
push
inc
adc
fstp
daa
fs
cmp
mov
cs
iret
sub
add
in
retf
arpl
xchg
mov
and
jecxz
push
cmp
xchg
jo
push
xor
lahf
push
ins
xchg
or
xchg
test
aam
and
lea
addr16
or
jecxz
mov
aam
adc
sub
or
sub
inc
adc
and
add
inc
(bad)
gs
cmp
push
sbb
sbb
pop
mov
test
add
sub
add
(bad)
or
and
or
xor
or
jge
popf
and
fist
pop
add
sub
or
inc
pop
addr16
jne
ins
adc
pop
cmps
or
mov
add
add
add
test
mov
sub
cmp
sbb
imul
lods
jnp
pusha
dec
mov
pop
jb
fwait
call
push
out
mov
push
mov
(bad)
ins
out
test
aam
adc
mov
shl
ins
ret
fistp
aaa
fst
fisttp
or
out
mov
ret
mov
sub
or
aas
inc
or
in
nop
add
jne
mov
pusha
add
adc
or
aaa
sub
push
add
sub
(bad)
xchg
pop
lock
pushf
jl
(bad)
or
xor
mov
inc
lahf
stos
lock
aad
pusha
(bad)
push
shr
imul
inc
xor
cs
dec
inc
mov
mov
lea
mov
and
dec
sub
add
mov
add
ja
dec
and
adc
inc
pop
imul
push
mov
bound
pop
aad
lahf
aaa
xchg
add
movs
test
js
sub
mov
data16
xor
jl
fiadd
ja
stos
mov
cmps
xchg
icebp
popa
sub
pop
and
push
(bad)
cmps
inc
xchg
gs
daa
xchg
sub
xor
je
and
adc
pop
(bad)
cmp
and
jecxz
in
xor
jns
jb
test
mov
pop
push
push
mov
dec
push
movs
lods
stos
mov
xchg
jmp
jne
lock
mov
or
pop
sahf
sbb
push
inc
xor
xor
xchg
adc
xchg
push
repz
sub
test
loopne
aaa
mov
jmp
cmp
jo
adc
xor
imul
loop
push
inc
mov
fbld
daa
fist
jae
mov
test
jae
mov
outs
jmp
mov
gs
cs
fwait
or
mov
inc
fs
sub
xor
pop
mov
xchg
out
ret
pusha
adc
pop
ins
enter
mov
push
imul
loop
xor
mov
jo
and
inc
mov
adc
push
int3
(bad)
pusha
jp
pop
dec
cs
scas
leave
mov
and
ror
ja
fldlg2
sbb
mov
pop
jae
mov
cmp
jle
loopne
or
jno
mov
inc
movs
(bad)
into
ins
aas
je
je
mov
(bad)
scas
js
mov
jecxz
sub
or
jno
fst
ret
mov
cmp
inc
adc
shl
jl
adc
ds
mov
es
jae
dec
aaa
mov
rol
pop
je
bound
fidiv
inc
test
sub
cmp
xor
iret
mov
loope
ss
sub
lods
push
outs
dec
mov
mov
mov
or
xor
rol
inc
aaa
xchg
sub
add
xor
fmul
xor
rol
fnsave
lds
inc
push
xchg
adc
movzx
inc
retf
sbb
fcmovbe
popa
xchg
aaa
add
sbb
cmps
test
xor
daa
mov
mov
or
imul
es
jg
xchg
shl
jb
sub
daa
jno
jmp
push
xchg
cmp
mov
xor
test
push
dec
mov
and
add
outs
inc
rol
lock
add
inc
sub
pop
inc
sub
lock
pop
test
retf
mov
add
pop
mov
inc
push
lahf
test
mov
wbinvd
or
inc
and
push
lock
jmp
mov
and
dec
add
sub
add
cmp
cld
fistp
lea
aam
adc
aaa
movs
dec
add
pop
out
mov
mov
mov
push
jbe
dec
movs
xor
jne
mov
scas
js
mov
push
mov
imul
imul
mov
imul
lods
test
imul
dec
fisubr
or
cdq
xor
xchg
xchg
pop
xchg
jge
ds
cli
outs
adc
mov
pop
test
shl
xchg
or
js
jae
jnp
jge
xor
and
pusha
xor
and
and
and
imul
xor
and
push
xor
and
and
and
pop
or
pop
pop
pop
pop
or
enter
inc
xor
and
and
and
dec
or
dec
dec
dec
dec
or
enter
xor
enter
xor
enter
xor
and
cmp
cmp
ds
and
enter
and
enter
and
and
sub
sub
cs
adc
enter
adc
enter
adc
push
and
sbb
sbb
push
pop
add
enter
add
call
cmp
leave
mov
cmp
and
ins
loope
scas
pop
sbb
adc
sub
push
cmp
test
dec
in
push
loop
inc
pop
pop
jp
or
ins
fldenv
adc
clc
aam
and
dec
lea
or
dec
pop
push
jne
add
push
jmp
(bad)
(bad)
mov
mov
cli
adc
add
mov
mov
or
mov
xlat
invd
push
push
les
push
dec
pop
add
fmul
adc
pop
ja
add
xlat
xchg
push
(bad)
aaa
or
add
cmp
bound
adc
push
sub
cmp
pop
sbb
dec
xor
pusha
sub
ins
loope
lock
push
mov
push
xlat
xchg
frstor
sub
and
cmps
add
adc
adc
dec
gs
sar
leave
xor
dec
mov
inc
jo
(bad)
(bad)
lods
pop
addr16
add
mov
(bad)
xchg
mov
loop
and
or
ret
popa
clc
frstor
ret
cwde
pop
ret
push
mov
sbb
mov
add
arpl
sub
or
pop
jg
mov
add
push
inc
popa
xchg
add
(bad)
bound
pop
adc
fst
in
stc
jb
adc
push
dec
mov
push
adc
pop
in
mov
and
mov
mov
adc
mov
arpl
mov
in
inc
sub
mov
lds
or
inc
or
pusha
cli
inc
fist
outs
cmp
fsubr
mov
adc
add
loopne
sbb
out
rol
add
add
add
adc
push
push
call
pop
jmp
or
imul
adc
push
pop
add
ins
loopne
loop
(bad)
push
in
mov
fucomi
sbb
sub
dec
lods
and
sub
dec
lea
xlat
pop
or
icebp
or
add
xor
mov
mov
ss
and
push
and
pop
adc
dec
or
aaa
sbb
adc
sbb
popf
inc
dec
push
push
les
add
add
cmp
xchg
pop
leave
dec
jg
or
mov
push
aam
adc
pop
push
mov
mul
inc
push
push
dec
pop
push
movs
inc
push
popa
mov
scas
push
inc
popa
jnp
cmp
shl
mov
leave
add
shl
sbb
pop
xor
push
mov
js
je
jg
mov
fisubr
repnz
out
jl
clc
sub
jae
cmp
sbb
lds
inc
mov
or
sbb
or
jnp
dec
or
cdq
mov
repnz
xchg
adc
cs
push
sbb
xchg
mov
nop
fcom
lock
sub
jmp
sar
adc
push
mov
call
adc
jecxz
nop
fild
sub
push
ja
pop
inc
daa
or
jbe
jns
mov
movs
sbb
je
and
in
xchg
push
push
ret
es
and
outs
inc
sahf
inc
jne
nop
sbb
and
mov
mov
mov
es
add
daa
mov
jbe
push
mov
xor
add
xchg
mov
pop
ins
adc
lods
jo
mov
mov
jo
add
xchg
pop
mov
sbb
repz
mov
mov
adc
push
add
cmps
lahf
stos
xor
mov
inc
and
mov
je
imul
out
lock
push
push
les
sbb
dec
div
sbb
mov
mov
cmp
bswap
pop
mov
bound
inc
aam
daa
mov
fnstenv
adc
nop
push
stc
je
adc
mov
lods
sub
adc
add
sub
(bad)
shl
test
test
nop
sub
xchg
clc
mov
jnp
sbb
push
outs
mov
mov
xchg
call
je
inc
or
rol
jb
mov
sub
add
popa
sub
jb
inc
mov
jl
daa
or
mov
adc
adc
pop
push
nop
add
ret
test
pusha
sub
add
xor
dec
les
je
iret
nop
inc
adc
test
dec
adc
mov
jmp
fs
cmps
fsub
xchg
scas
sbb
jno
mov
cmp
(bad)
mov
scas
aaa
pop
and
push
push
inc
dec
lahf
js
cmps
and
inc
adc
xchg
or
push
enter
push
inc
add
push
(bad)
xor
xchg
pop
adc
pop
xchg
dec
je
not
imul
and
ja
push
add
xchg
ins
mov
mov
mov
icebp
retf
or
jae
dec
les
pop
adc
mov
dec
sbb
aad
mov
jno
inc
mov
nop
mov
push
push
mov
loope
mov
aaa
popa
test
push
cld
repnz
jne
xchg
call
jmp
scas
push
inc
add
dec
mov
xchg
dec
sbb
cmc
retf
add
inc
mov
(bad)
fadd
(bad)
jb
je
std
lea
lea
dec
mov
imul
pop
outs
sub
sub
movs
cld
jmp
cld
push
lea
xchg
fist
sub
mov
push
pop
xchg
scas
add
lea
or
sbb
pop
add
je
or
adc
xchg
gs
xchg
adc
sbb
and
sub
pop
loopne
jne
lds
adc
shr
pop
mov
cs
add
sub
sub
pop
or
scas
out
dec
add
mov
les
ja
sbb
xor
push
pop
inc
or
add
or
div
shl
xor
and
shl
in
or
test
jne
test
jne
jmp
push
test
adc
std
or
sti
lock
pop
dec
and
mov
jo
inc
dec
sub
pop
push
das
pop
pop
sub
ins
lea
push
jecxz
dec
dec
clc
or
or
dec
jne
xor
add
das
sub
mov
sub
sti
ja
adc
add
push
mov
ret
or
add
push
ins
rol
add
or
push
jo
lock
out
jge
dec
js
lods
scas
sbb
and
sbb
lea
shl
in
aad
add
fisttp
lock
mov
icebp
sub
inc
adc
pop
call
sbb
add
(bad)
add
push
add
shl
jge
jl
jo
loopne
sbb
inc
adc
test
adc
jns
mov
mov
xor
int
aaa
mov
cld
repz
lahf
add
and
jbe
sub
pop
jmp
push
sbb
rol
ficom
push
test
(bad)
mov
fsub
mov
mov
and
mov
or
movs
cdq
adc
add
mov
sbb
inc
jmp
outs
push
jb
add
jl
adc
mov
sub
rcl
cmps
mov
push
jmp
jbe
iret
faddp
adc
mov
inc
xchg
add
ja
inc
cld
mov
sub
and
mov
jmp
aas
sbb
add
gs
fwait
mov
icebp
or
add
out
addr16
add
jg
mov
popa
inc
js
xor
xor
or
push
or
loopne
movs
sbb
fsub
mov
pop
or
scas
outs
movs
test
pop
push
xlat
ins
mov
jmp
iret
dec
add
aas
cmp
int
cmp
cmp
iret
adc
mov
or
cmps
mov
or
bound
and
test
or
mov
loopne
push
gs
push
and
or
clc
jle
mov
sbb
fisub
mov
adc
jne
or
jl
pop
adc
clc
xchg
cdq
sub
or
(bad)
(bad)
pop
pushf
mov
test
pop
lods
mov
inc
stos
clc
mov
clc
sbb
xchg
int3
nop
pop
push
pop
adc
lock
sbb
outs
jmp
sub
jl
imul
movs
(bad)
and
or
or
add
jo
mov
imul
adc
sahf
addr16
dec
push
mov
pusha
sbb
dec
sbb
inc
dec
push
cwde
jecxz
sahf
fld
jl
pusha
popa
pop
push
adc
add
adc
daa
adc
inc
pop
push
sbb
sbb
jge
aaa
stc
cmp
lods
or
cmp
mov
xor
and
cmp
sbb
in
sbb
jae
adc
rol
mov
xchg
add
push
sbb
adc
hlt
jne
sub
icebp
pop
xchg
in
xor
add
dec
adc
push
sbb
push
dec
adc
dec
outs
ret
jmp
fadd
and
hlt
push
jne
(bad)
in
(bad)
cmp
rol
mov
shr
int3
movs
add
or
mov
je
cmps
lock
adc
adc
inc
jp
pop
dec
imul
ror
loope
mov
dec
or
cmp
popa
bound
out
mov
mov
lock
call
mov
fnstsw
add
cmp
push
cdq
imul
push
adc
fist
inc
or
push
ror
not
ret
pop
or
aaa
fld
je
in
pop
ins
cmp
inc
ret
and
push
pop
push
out
hlt
dec
xor
jmp
jno
mov
or
pop
mov
adc
ret
les
pop
mov
add
popa
mov
xor
and
imul
in
mov
push
or
pop
xchg
inc
movs
sbb
js
xor
les
rol
aas
iret
rol
or
push
dec
lods
inc
and
dec
mov
xchg
adc
or
adc
lea
cmp
aaa
jnp
jge
jb
or
ret
popa
std
loopne
or
push
imul
pop
pop
inc
fidivr
cmp
pop
add
test
shr
push
dec
xchg
mov
adc
dec
or
loope
call
iret
test
je
and
inc
stos
mov
or
inc
cmps
ds
fidiv
adc
loop
and
mov
(bad)
test
dec
xor
jbe
lods
or
and
xor
mov
add
sahf
and
test
sub
push
js
mov
(bad)
xchg
or
arpl
and
push
or
mul
data16
es
add
add
movs
xchg
fisubr
out
mov
movs
mov
push
test
push
cld
push
into
or
pop
sub
or
add
lahf
rcl
imul
xor
xchg
cmp
push
pshufw
sbb
add
ret
or
and
adc
cdq
pop
sub
cmp
cmps
les
mov
rol
mov
popa
pop
pop
dec
and
jmp
mov
xchg
scas
xor
add
adc
jne
aad
inc
jbe
jle
push
fs
std
sahf
add
mov
push
adc
fdivr
pop
pop
clc
test
sar
inc
mov
add
and
mov
das
add
add
fsub
out
push
imul
pop
inc
fiadd
or
imul
cmp
jge
test
add
sbb
shr
sbb
popa
mov
adc
and
or
fbstp
push
or
arpl
push
push
shl
xchg
icebp
outs
add
and
test
add
outs
(bad)
(bad)
retf
or
adc
adc
daa
icebp
add
mov
jecxz
inc
test
xor
xchg
adc
jp
movzx
mov
js
mov
aaa
dec
cld
push
inc
push
push
fbld
inc
loope
sub
call
mov
daa
fimul
sbb
add
inc
pusha
adc
push
pop
cmp
xchg
inc
add
mov
mov
jle
sub
sub
or
ror
pop
mov
push
pop
imul
adc
mov
imul
outs
(bad)
movs
cmps
mov
sbb
xchg
push
xchg
scas
pusha
out
jnp
or
mov
add
sub
sbb
and
xlat
jge
ins
cmp
cmp
ins
je
mov
adc
ficom
adc
imul
mov
cmp
mov
push
mov
rol
icebp
scas
cmp
ins
push
xor
add
push
or
xor
ins
mov
int
adc
pop
sbb
dec
loopne
mov
pop
movs
or
mov
xchg
in
pusha
cmp
mov
enter
mov
bound
mov
mov
scas
pop
and
or
outs
loop
cmp
push
shl
aaa
push
xchg
call
cmps
nop
dec
inc
mov
mov
mov
mov
cwde
in
icebp
pushf
sbb
rcl
add
les
cmp
sub
sub
xchg
fld
or
push
rol
cdq
stos
xor
loope
sbb
dec
fcmove
inc
nop
push
xchg
test
addr16
dec
push
neg
and
frstor
inc
fcomp
dec
fmul
cmp
outs
icebp
xor
mov
call
pop
sub
xchg
pop
push
jb
cmp
ret
xchg
cli
aas
push
push
and
adc
sbb
ss
test
dec
sub
add
pop
out
or
inc
shl
dec
xchg
cdq
pop
cmp
enter
cdq
jno
in
push
ret
adc
iret
pop
or
in
adc
jo
fsubr
and
nop
pop
lock
jle
pop
in
cwde
in
pop
daa
rcr
mov
mov
xlat
push
mov
ret
shl
xor
add
fdivrp
cmp
add
pause
jle
pop
jmp
jmp
mov
(bad)
fadd
add
mov
ror
xor
or
pop
scas
jne
push
pop
pusha
sahf
daa
out
fadd
retf
mov
and
retf
in
(bad)
(bad)
add
add
adc
aas
xchg
ror
sbb
call
push
cmp
inc
fdivr
stos
clc
test
pop
dec
jl
sbb
daa
test
outs
pop
or
daa
dec
imul
popf
push
loop
aam
dec
(bad)
xor
lods
mov
fwait
and
out
push
dec
push
cdq
lock
cli
js
xchg
mov
into
(bad)
mov
retf
std
push
cwde
mov
cmps
dec
repnz
cmp
jmp
fadd
inc
sub
clc
push
imul
daa
or
sahf
sub
shl
pop
shl
add
inc
adc
stos
dec
cmp
xor
xor
jno
pop
das
mov
cmp
adc
sbb
fs
xchg
add
mov
sahf
and
sbb
add
retf
mov
or
lock
stos
and
ret
in
or
inc
mov
ror
(bad)
out
or
(bad)
or
lods
xchg
jl
stc
push
jg
je
sbb
cs
(bad)
arpl
ds
loopne
sbb
pop
and
pop
cld
push
je
jmp
mov
inc
fs
jne
add
sbb
mov
std
(bad)
outs
dec
inc
cld
out
ffreep
lds
mov
push
or
rcr
fistp
jbe
cmp
and
inc
xchg
sbb
(bad)
fisttp
jge
xor
cmp
adc
or
pop
jp
sar
push
cmp
adc
add
pusha
inc
or
add
sbb
pop
add
push
sub
scas
ficom
mov
xor
and
outs
das
sub
add
xchg
sti
outs
jne
add
push
and
mov
scas
das
push
aaa
(bad)
push
fwait
dec
pop
pushf
and
js
add
pop
mov
lods
(bad)
cld
push
lods
aam
and
fdiv
push
retf
mov
dec
movs
sbb
sub
test
jae
popa
test
lahf
sbb
pop
or
mov
add
cmp
xor
loopne
daa
int
xor
retf
icebp
xchg
add
xchg
adc
btr
xchg
stos
xchg
test
add
or
inc
aaa
ret
cmp
popa
rcl
pop
leave
jp
dec
adc
out
push
movs
sbb
fidivr
in
je
mov
xchg
pusha
jnp
sub
daa
out
ret
jg
repz
adc
or
jae
icebp
dec
adc
iret
adc
fwait
(bad)
pop
mov
jge
ja
or
lock
push
push
adc
sub
or
add
add
mul
jb
xor
jbe
xchg
xor
xor
test
xchg
cld
jae
mov
mov
and
xor
shl
into
add
add
inc
(bad)
push
aam
inc
or
iretw
nop
xchg
adc
jge
outs
and
add
mov
sub
jo
ss
push
into
xchg
ret
cmp
cmp
adc
mov
in
aas
jnp
popf
sbb
pop
mov
inc
cmp
jne
cmps
hlt
std
push
push
mov
inc
pop
or
and
dec
arpl
retf
jge
call
test
xor
jno
ins
fmul
(bad)
cmc
sub
cmp
movs
and
loopne
sub
and
add
rcr
xor
push
adc
add
xor
jle
mov
pop
pop
adc
mov
xchg
pop
mov
add
ror
inc
loopne
mov
dec
push
xor
stos
add
mov
popf
jne
jmp
cwde
lock
test
dec
mov
sub
dec
hlt
pop
pop
and
xor
sahf
and
push
dec
dec
inc
lds
cdq
pop
sub
push
sbb
mov
and
or
jle
add
inc
pusha
adc
add
add
add
dec
xor
ds
jbe
mov
dec
push
sbb
js
mov
jmp
cmp
xor
jp
add
mov
movs
and
mov
jmp
outs
not
xor
ds
jno
sbb
push
cmp
inc
je
movsx
pop
cmp
jl
cmp
jg
cmp
sub
(bad)
fistp
pop
jmp
pop
cmp
push
push
cmp
dec
repnz
imul
cmps
and
mov
stc
movs
and
xor
fbld
ret
or
shr
push
popf
es
sub
mov
inc
xlat
shrd
mov
push
mov
add
into
inc
xor
push
pop
leave
push
push
out
pop
ins
push
(bad)
cwde
and
mov
pop
add
stos
loopne
pop
add
popa
cmp
ja
pusha
pop
sub
pop
inc
out
inc
pop
pop
pushf
mov
push
cmp
add
sbb
cmp
jle
pop
cmp
(bad)
push
cmp
dec
pop
xor
loope
movs
mov
sub
pop
je
ret
cmp
jne
cwde
clc
popa
je
pusha
push
push
adc
push
inc
inc
shr
call
out
ja
sbb
rcl
call
xchg
fcmovnb
adc
dec
or
int3
add
pop
inc
or
dec
dec
in
hlt
pop
pusha
jae
and
xor
movs
and
mov
ins
aas
or
pop
dec
cmp
and
cmp
loop
cmp
xchg
leave
push
or
loop
dec
dec
push
not
inc
xor
std
xchg
and
sub
cmps
inc
lea
daa
add
sub
adc
push
mov
les
imul
xlat
xchg
sbb
pop
sub
add
rol
(bad)
mov
xchg
xchg
mov
leave
jne
adc
add
sub
test
lahf
jmp
fldcw
pop
mov
add
mov
inc
cmp
test
ret
daa
xor
sub
push
mov
stc
sub
cmp
or
mov
mov
sbb
out
sti
cwde
sar
bound
and
das
or
retf
in
loop
mov
retf
imul
inc
mov
dec
or
test
sbb
mov
mov
mov
add
(bad)
dec
dec
jb
sar
push
sub
pop
or
push
cmp
ret
xchg
push
outs
dec
cdq
dec
ins
ror
push
adc
bound
adc
sub
or
adc
or
in
fisttp
jge
call
adc
dec
sbb
sbb
ret
mov
dec
das
add
sub
add
sbb
push
gs
push
sub
in
or
test
dec
mov
or
pop
inc
call
shl
or
inc
and
es
mov
fild
add
or
fwait
push
xor
adc
pushf
stc
loop
mov
sbb
hlt
call
jge
(bad)
je
xor
popa
(bad)
fist
push
mov
scas
xchg
test
pop
inc
inc
xchg
sbb
and
stos
cmc
xor
inc
cmp
jb
adc
add
dec
les
add
lods
push
inc
cmp
rol
pextrw
adc
repnz
sar
and
add
add
xor
cmp
push
sti
imul
xor
jbe
and
jmp
lods
adc
pusha
sar
repnz
das
jae
mov
pop
push
inc
(bad)
pop
mov
rol
sub
cmp
sti
lock
or
test
test
(bad)
(bad)
sub
imul
shl
imul
pop
stos
push
push
xchg
xor
dec
cmps
ror
add
mov
inc
inc
cmp
dec
jmp
lock
pop
xchg
inc
mov
pop
popa
mov
hlt
mov
dec
lods
inc
out
xchg
jns
inc
mov
inc
mov
push
and
sub
(bad)
(bad)
out
in
js
js
mov
mov
mov
xchg
int3
jne
sbb
sbb
xchg
out
iret
(bad)
fist
adc
or
cmps
sub
push
in
mov
push
add
lods
add
xor
dec
jne
mov
jmp
ret
cmp
ror
pop
cmp
mov
jge
sub
icebp
sub
cmp
dec
lock
mov
inc
mov
cmp
cmp
out
gs
mov
xchg
rol
push
mov
jp
sub
les
cs
pop
(bad)
xor
scas
jae
inc
retf
sbb
repnz
jle
xor
add
adc
adc
dec
std
push
cmp
xchg
daa
or
dec
mov
daa
jnp
push
jo
adc
add
pop
and
sbb
aas
jge
dec
adc
inc
inc
adc
pop
jmp
push
xor
icebp
loop
push
xlat
push
shl
mov
xrelease
mov
test
test
pop
push
push
xchg
rcr
fisub
iret
dec
inc
push
xor
fsubr
pushf
clc
dec
mov
int3
add
je
hlt
xchg
clc
imul
adc
lds
fcomp
mov
push
cmp
imul
ja
sbb
pop
shl
jbe
ins
ja
mov
xor
pop
pop
fist
mov
or
popf
adc
test
rcl
and
jo
scas
xor
dec
fistp
xlat
arpl
pop
push
fs
cs
lds
adc
cdq
arpl
xor
test
sbb
ins
mov
and
popf
sbb
cmp
jne
pop
push
cmp
jecxz
outs
je
sub
sbb
scas
mov
scas
out
add
jbe
shl
adc
pop
fld
cmp
xor
fmul
jae
add
xchg
inc
dec
mov
xor
test
cmp
es
dec
pop
cld
mov
repz
fwait
bound
sbb
sub
popa
mov
call
movs
jbe
cmp
mov
mov
fist
or
jo
sub
inc
mov
inc
mov
in
jg
fist
adc
sub
inc
fs
div
imul
mov
and
pop
and
jo
(bad)
push
mov
adc
and
xor
push
je
out
outs
adc
push
push
arpl
push
xchg
add
je
lea
jno
push
cmp
add
test
or
cmps
sbb
jge
mov
inc
nop
fwait
adc
sub
or
inc
and
or
cmovae
lock
push
or
mov
mov
cmp
popa
inc
mov
scas
xchg
pop
sbb
clc
mov
push
push
add
and
push
leave
jae
push
jo
mov
lods
hlt
mov
inc
mov
inc
outs
sbb
xor
pop
adc
sbb
adc
pushf
popf
add
fisttp
(bad)
aas
cwde
test
jl
cmp
sub
dec
pshufw
or
lock
neg
xchg
test
push
fbstp
pop
add
push
lods
sub
mov
and
ret
icebp
in
adc
gs
fadd
xor
sti
sbb
mov
or
cmc
dec
jo
inc
rcl
sbb
mov
fidivr
sub
imul
lods
adc
shl
int
jle
cmp
call
or
adc
adc
loop
(bad)
or
mov
jmp
xchg
pusha
test
adc
or
shl
(bad)
test
mov
(bad)
sbb
adc
imul
shl
push
div
adc
test
ins
in
or
iret
cmp
mov
adc
fidiv
and
add
sub
test
mov
add
pop
jp
dec
push
add
mov
pop
shl
adc
xor
rol
xchg
popf
pop
adc
push
dec
rol
fisttp
adc
push
pop
inc
or
push
lea
push
or
ds
pop
test
mov
js
xor
or
lods
ja
daa
mov
push
lea
pop
test
xlat
test
sub
sbb
dec
sbb
xchg
cs
mov
clc
cdq
mov
inc
pop
adc
push
push
or
pop
leave
adc
adc
push
or
sub
sub
addr16
jnp
add
jns
and
je
pop
xchg
mov
sbb
mov
jl
pop
jmp
adc
cmp
inc
push
jecxz
adc
adc
addr16
stos
rcr
inc
mov
mov
inc
sub
add
les
outs
sbb
imul
dec
imul
lahf
mov
inc
rol
xchg
ins
adc
mov
jnp
push
jg
adc
xchg
mov
mov
push
push
xchg
fdivr
push
rcl
outs
inc
cs
mov
add
mov
dec
test
mov
or
or
sar
loop
test
push
sti
add
dec
cmc
push
push
adc
es
mov
fisubr
(bad)
ficomp
lods
fs
popa
sti
and
push
cmp
dec
shr
faddp
lods
mov
dec
cmp
jae
retf
outs
xchg
addr16
or
in
ret
mov
dec
push
sub
push
pop
mov
inc
shl
les
dec
add
mov
inc
aad
jmp
fdivr
pop
jmp
cmp
lahf
inc
inc
dec
add
movs
mov
test
cmp
jmp
sbb
jecxz
or
in
movs
jns
outs
ins
dec
lea
and
shr
jae
out
test
jo
lods
and
rcl
sub
(bad)
push
sbb
adc
(bad)
fiadd
mov
push
dec
lea
push
test
inc
push
sub
dec
mov
pop
retf
hlt
pop
push
daa
cs
jl
addr16
pop
sub
sub
call
add
popa
xchg
aas
jno
xchg
lods
in
pop
cmp
call
add
pop
cmp
in
daa
into
and
cdq
retf
mov
inc
xchg
retf
retf
adc
cmp
mov
ins
pop
xor
pop
push
add
and
call
dec
pop
es
lea
push
fmul
push
fs
or
jg
or
dec
pop
ja
pop
(bad)
hlt
add
push
call
pop
xor
pusha
popf
(bad)
aad
mov
addr16
mov
lahf
lock
fdiv
std
popa
cmp
cmp
jbe
test
cmps
ja
nop
add
jmp
pop
jg
adc
add
adc
cmp
jae
in
mov
dec
or
cli
shr
dec
dec
pop
loope
jns
cmp
(bad)
loopne
frstor
inc
movs
mov
sti
sbb
or
or
fs
xor
retf
pop
jmp
add
xor
inc
push
lock
sti
and
inc
inc
test
sahf
inc
sbb
adc
fcom
cld
push
cmp
mov
and
jmp
pop
loope
adc
mov
scas
retf
dec
dec
inc
sbb
inc
sbb
dec
(bad)
mov
or
lahf
jl
inc
out
ror
jg
(bad)
xor
shl
jno
loopne
shl
lock
ja
jmp
int
imul
pop
shl
mov
cs
pop
dec
pop
cs
cmps
push
pop
ret
into
add
mov
cli
push
jne
rcl
and
push
ret
pop
mov
leave
mov
(bad)
movs
fisubr
sub
or
mov
cwde
dec
inc
add
sub
pop
imul
test
fucomip
and
and
jns
add
mov
dec
sti
sub
jo
mov
sbb
sbb
or
xchg
daa
mov
sar
mov
cwde
add
mov
jmp
out
in
add
ror
std
out
inc
mov
(bad)
sub
(bad)
mov
ret
shl
add
push
mov
mov
cmp
add
lea
retf
ror
mov
leave
adc
jl
in
out
and
icebp
test
add
jo
xchg
mov
xor
mov
inc
xor
xor
enter
ds
(bad)
cld
xor
jb
(bad)
cmp
scas
inc
xor
inc
enter
inc
mov
adc
or
add
push
or
or
mov
pop
dec
or
mov
mov
or
fcomp
mov
sub
aaa
aam
aam
dec
jbe
adc
fisub
add
data16
and
xor
into
imul
sub
in
or
push
sbb
dec
push
add
cmp
push
lock
inc
cwde
dec
push
call
clc
ins
call
test
push
dec
shl
push
sub
iret
int3
push
fsubr
stos
das
sbb
hlt
mov
les
sub
(bad)
jmp
in
fst
sub
sub
call
add
ins
cmp
shrd
sub
push
push
or
dec
mov
or
sub
loopne
mov
jne
mov
outs
xor
ss
mov
rcr
dec
sbb
jne
test
js
adc
add
ins
add
rol
sbb
ja
imul
ins
(bad)
pop
push
or
sub
ret
loopne
mov
sub
pop
popa
or
pop
lods
pop
jmp
int
fst
sbb
or
inc
pop
movs
push
dec
mov
push
ret
ja
leave
nop
cdq
xchg
xchg
mov
loope
jb
jge
mov
sub
out
inc
ins
inc
xchg
xchg
jg
add
inc
(bad)
shl
mov
mov
fild
loop
or
fldenv
mov
lods
jge
cmp
add
jecxz
das
sbb
adc
mov
push
fsub
mov
ret
js
sub
cmp
mov
inc
dec
cmp
push
jo
adc
shl
mov
sub
jae
jge
lock
je
jne
cmp
xchg
cmp
jle
dec
or
sub
movs
(bad)
jle
adc
cmp
jne
inc
jg
rcr
or
sbb
js
loopne
adc
adc
sub
in
popf
imul
fmul
jp
or
push
sbb
adc
inc
sub
(bad)
mov
push
jg
rol
sub
fmul
in
ja
ss
push
pusha
shr
or
aaa
je
(bad)
and
push
sub
in
sub
jae
dec
leave
add
test
jmp
lock
aas
aad
call
mov
mov
mov
mov
xchg
sub
call
ins
adc
pusha
fs
dec
stos
push
xor
xor
mov
xor
lea
mov
mov
ins
out
push
inc
mov
inc
jmp
inc
sbb
icebp
inc
lods
int
pop
imul
sti
mov
mov
jmp
ds
shl
shr
jg
push
inc
leave
inc
ror
lea
outs
mov
pop
ret
dec
(bad)
mov
xchg
test
xchg
push
adc
add
mov
ja
aad
mov
xor
lea
sub
in
inc
sub
add
push
xor
and
cmp
test
test
xor
leave
test
xor
sbb
adc
hlt
inc
cmp
adc
jne
adc
ret
ins
sbb
arpl
inc
lea
or
das
adc
xlat
mov
pop
lahf
add
jmp
fiadd
jg
adc
adc
cmp
push
or
cs
inc
adc
push
mov
iret
push
sub
inc
adc
inc
inc
loopne
jp
adc
out
stc
les
es
es
setb
push
add
inc
es
xchg
les
fcom
add
xlat
push
fadd
xor
or
add
mov
fadd
mov
shl
cmp
pop
fisub
sub
add
xchg
push
push
nop
and
aam
adc
sbb
add
aam
mov
cmps
push
in
cmp
inc
popa
xchg
mov
and
dec
std
jno
push
push
int3
rol
sbb
gs
and
mov
outs
push
push
jp
ins
(bad)
das
mov
cmp
pop
mov
cmp
jmp
and
sbb
push
add
push
nop
outs
loopne
xlat
lds
fld
add
shr
ss
push
xor
into
pop
sub
mov
sub
xchg
jbe
ret
stc
pop
add
xchg
xor
or
jmp
mov
test
and
pop
adc
inc
leave
mov
xchg
lods
cmp
jo
sti
pop
in
xchg
iret
xor
and
ret
add
xchg
push
jns
test
sub
cmp
mov
dec
inc
popf
sbb
rol
cmp
jge
mov
test
cmps
dec
mov
mov
int3
push
and
adc
fadd
and
inc
fst
std
ja
mov
sbb
or
jecxz
shl
xor
lds
or
jbe
mov
sbb
push
adc
jno
into
sbb
ret
mov
xor
ret
out
mov
mov
jp
mov
xor
adc
sbb
xchg
popf
mov
xchg
adc
hlt
enter
into
pop
mov
xor
jae
jl
push
mov
fsin
jg
cmp
mov
inc
inc
and
cmp
pop
mov
cwde
nop
mov
pop
in
outs
lods
test
test
dec
sar
cmp
into
outs
(bad)
jmp
lea
cmp
pop
add
ret
ret
psrld
sbb
sub
or
test
sbb
lds
add
(bad)
cmp
cmp
cmp
icebp
jmp
fadd
sbb
jns
inc
dec
popa
xor
das
inc
add
fcom
stos
les
fldenv
xchg
adc
stc
inc
lods
in
and
or
mov
sub
ror
cli
and
pop
test
inc
aaa
call
sbb
inc
pop
out
mov
adc
test
mov
cmp
jb
sbb
xchg
test
add
aad
push
fsub
fs
call
ds
push
bound
sahf
in
je
or
jbe
mov
scas
icebp
cli
in
pop
(bad)
push
jmp
and
mov
sar
lds
inc
pushf
pusha
jmp
outs
cmp
imul
inc
inc
inc
mov
sub
lods
mov
dec
cdq
movs
xchg
arpl
inc
aam
aaa
pop
leave
push
mov
push
jns
and
xor
pop
in
cmps
or
mov
add
pop
add
xor
or
or
mov
add
jb
std
add
mov
repz
sub
sbb
pop
pop
std
xchg
repz
inc
jmp
pop
mov
jb
mov
and
pop
pop
dec
or
pop
jnp
or
adc
sbb
or
lds
cmps
das
or
add
and
xor
add
out
loopne
mov
push
sar
push
ret
clc
push
in
pop
inc
fdivrp
ret
outs
ret
adc
add
(bad)
shl
lahf
push
adc
inc
sub
jne
pop
mov
add
fisttp
ins
aad
push
frstor
add
or
fwait
movs
movs
mov
push
adc
pop
stc
in
shl
or
mov
jge
adc
outs
push
aam
jo
inc
sbb
sbb
inc
or
and
push
sub
dec
hlt
in
cmp
mov
or
pop
push
hlt
push
loopne
(bad)
sub
into
pop
and
inc
adc
inc
shl
sbb
add
fld
daa
push
mov
stc
pop
dec
cmps
sub
loope
sbb
add
cmps
sbb
xchg
clc
data16
jno
mov
or
test
hlt
fmulp
fisttp
push
es
jg
in
in
fisubr
adc
add
inc
es
add
adc
add
seto
mov
fcomp
and
sbb
cmp
test
add
adc
icebp
mov
(bad)
fnstsw
fnclex
out
pop
cli
rcr
mov
dec
nop
scas
push
cmp
jae
fld
out
push
sbb
fdivr
xor
adc
rol
adc
addr16
rol
js
fcom
add
fnstcw
ret
mov
out
dec
(bad)
not
fwait
leave
xchg
ror
ret
in
fstp
(bad)
and
xchg
jne
xor
ins
shl
push
xchg
loopne
xchg
out
ins
mov
sar
sub
ja
mov
fstp
fninit
push
pop
add
les
stc
adc
mov
fwait
sar
add
fistp
sbb
das
mov
mul
pop
xor
sub
mov
ret
dec
daa
les
add
ds
jmp
mov
cdq
call
inc
cmp
das
je
fld
fistp
xchg
or
ret
pop
inc
push
mov
in
fstsw
mov
adc
mov
add
push
adc
sub
cmp
jae
test
sub
outs
xchg
mov
mov
inc
cmps
ins
lea
add
das
movs
or
pop
mov
jo
hlt
retf
pop
mov
and
and
fwait
pop
mov
jg
xchg
stos
rol
dec
mov
cmp
jge
jle
dec
mov
push
inc
jmp
add
ficomp
not
cmps
mov
fld
into
xor
pop
or
adc
(bad)
mov
push
and
inc
int
mov
xchg
jecxz
imul
(bad)
jg
cli
jne
pop
pop
cmp
ins
or
in
jg
shl
add
cld
xchg
cmp
jae
sub
outs
hlt
sub
adc
and
sub
loop
and
inc
in
ins
fs
mov
dec
mov
mov
pushf
jmp
outs
(bad)
pusha
sub
dec
add
add
jne
sub
jmp
in
fidiv
test
hlt
xlat
fcmovnu
out
sysret
mov
loopne
(bad)
jmp
ins
sub
pop
(bad)
pop
inc
push
cs
pop
or
lods
pushf
jl
xchg
jg
push
pop
pop
or
sub
xchg
adc
in
mov
inc
adc
jmp
dec
mov
push
inc
sbb
and
test
jae
pop
add
or
dec
or
aas
sbb
rcr
xchg
add
retf
or
mov
dec
sbb
push
adc
(bad)
push
jmp
pop
test
fwait
(bad)
or
mov
sub
jmp
dec
pusha
aad
add
ss
daa
add
test
push
adc
inc
leave
mov
cmp
or
popa
adc
adc
xchg
and
rcl
cmp
cmp
or
rcr
push
push
fild
push
xor
mov
xlat
in
popf
add
sbb
sbb
test
test
push
dec
push
inc
in
cmp
(bad)
call
adc
or
div
jl
(bad)
out
or
je
mov
cmp
imul
fwait
cmp
push
or
jg
test
adc
loope
das
cmp
jne
ins
add
fild
add
in
pop
sbb
mov
sbb
pop
jg
xadd
or
mov
add
push
es
inc
dec
cs
jno
ss
add
(bad)
repnz
sbb
pop
add
dec
add
or
push
lahf
fwait
push
repz
mov
xchg
sbb
xor
dec
push
in
adc
cs
or
xor
in
cmp
pop
bound
sub
inc
das
add
std
stc
or
pusha
(bad)
hlt
hlt
popw
js
stc
nop
inc
sub
xchg
pop
xor
mov
adc
pop
cmc
jl
je
inc
cld
div
pop
mov
jmp
sub
test
inc
inc
or
in
ret
cmp
icebp
mov
sub
mov
add
add
cmp
and
add
dec
dec
sbb
fucomip
ret
sbb
std
push
out
jg
push
sbb
shl
shr
push
rcl
jmp
pop
mov
or
adc
or
neg
cmp
mov
push
cld
mov
rol
inc
jo
or
push
xor
inc
adc
xchg
jo
xchg
push
jnp
or
or
ds
mov
lea
clc
popa
movs
mov
in
test
cmps
dec
and
mov
push
std
xchg
rol
ror
stos
lock
mov
pusha
adc
pop
add
movs
mul
mov
adc
sti
adc
or
addr16
scas
adc
cmp
out
cmp
jne
lods
shl
rol
not
or
jge
add
pop
rcr
adc
and
or
jb
cmps
not
pushf
out
jae
inc
inc
and
mov
jns
sub
fldenv
sub
rcl
mov
jnp
ret
add
lds
sub
leave
ror
sbb
fld
adc
cmp
repnz
repz
jmp
cmp
push
inc
iret
and
cmc
loope
inc
pop
sbb
clc
div
xor
lds
xor
mov
std
(bad)
push
push
and
add
cld
retf
pop
jbe
jmp
scas
cmp
jb
sub
sbb
aas
jne
ror
outs
xlat
daa
cmp
xor
xchg
(bad)
int
xchg
xchg
popf
out
je
pop
adc
inc
pop
dec
cmp
or
jmp
push
sar
xor
pop
and
jnp
bound
test
mov
xor
dec
xchg
(bad)
imul
fwait
sub
enter
fnstenv
(bad)
(bad)
(bad)
mov
mov
xchg
and
or
(bad)
(bad)
fldcw
mov
cmps
adc
mov
inc
push
adc
outs
clc
adc
test
rol
hlt
ds
in
mov
fs
js
or
or
test
add
push
cmp
mov
jno
pushf
inc
pop
ror
popa
cmp
fdivr
ror
sbb
shl
outs
jecxz
lock
dec
sbb
mov
data16
sub
fsub
(bad)
out
add
or
mov
mov
add
or
movs
stos
add
push
adc
les
sti
dec
movs
add
adc
jb
add
rcr
adc
sbb
jge
and
cmps
and
fbstp
leave
in
jmp
popa
xor
pop
ds
cmp
loopne
mov
jg
test
pop
fidiv
loop
xchg
(bad)
cdq
test
lahf
add
push
iret
das
(bad)
movs
mov
sub
out
fld
jne
mov
push
pop
imul
mov
jns
push
push
imul
mov
lods
test
por
sbb
lods
xchg
pop
mov
inc
pop
or
stos
mov
or
and
sbb
maxps
pop
mov
cmp
js
inc
inc
dec
or
mov
add
xchg
imul
jns
hlt
fadd
je
call
pop
sub
jg
rcr
fisttp
adc
jnp
arpl
sti
sbb
push
rep
test
push
xchg
adc
add
adc
push
neg
neg
popf
adc
sbb
inc
hlt
xor
xchg
or
sbb
test
add
push
int3
lock
stc
or
cmp
inc
or
(bad)
jmp
fmul
adc
jmp
jo
add
mov
sub
push
add
xor
push
xor
cmp
clc
and
data16
push
mov
xor
mov
jge
fld
add
pushf
popa
ja
lds
leave
mov
or
fchs
sbb
cmp
add
pusha
ins
mov
cmp
sbb
call
fimul
fsubrp
pusha
or
push
jbe
cs
add
retf
dec
adc
and
xor
inc
add
shl
sbb
jp
sub
loopne
sub
int3
mov
imul
jae
lea
fdiv
mov
cmp
push
dec
sti
pop
sub
jecxz
push
out
mov
add
push
outs
add
ret
and
jae
push
(bad)
rol
pop
sub
stos
or
mov
mov
or
sub
adc
push
enter
sub
fldenv
xchg
add
jmp
sbb
jmp
pop
push
add
icebp
inc
cmp
cmpxchg
fbld
loope
rol
fld
push
push
test
push
add
push
or
add
sub
mov
jo
pop
rcr
or
add
add
inc
lds
enter
lds
xchg
inc
ds
mov
es
sti
js
cmp
mov
out
inc
mov
sar
repnz
sbb
sub
xchg
aam
fisttp
jmp
loopne
sbb
or
gs
jmp
jge
or
add
jmp
cmp
add
mov
hlt
rol
inc
clc
cld
lea
adc
aas
rcl
pop
inc
data16
test
(bad)
adc
push
ror
mov
pop
rcr
mov
jg
neg
push
sub
xchg
push
push
push
push
jp
inc
dec
cld
add
mov
dec
out
out
ins
mov
jb
ins
lds
add
and
(bad)
add
xchg
add
ror
mov
add
retf
sti
sub
retf
rol
stos
fisttp
mov
stc
adc
inc
sbb
add
loope
mov
push
or
mov
js
ss
call
push
mov
adc
add
dec
mov
cmp
mov
xchg
xchg
or
clc
xchg
sbb
ds
xchg
icebp
add
jmp
pop
mov
rcl
mov
inc
mov
add
sbb
and
push
cs
dec
dec
cmp
les
test
cmp
jbe
int3
push
xor
popa
dec
jne
cmc
inc
push
pop
sub
mov
movs
dec
hlt
push
dec
push
mov
ret
xchg
lock
jecxz
gs
(bad)
fimul
sub
popa
or
mov
push
fcom
cmp
ss
sbb
cmc
movs
je
adc
ror
repnz
dec
dec
adc
push
int
mov
cmp
(bad)
les
xchg
add
sbb
jne
loope
jmp
pop
mov
sbb
cmp
repnz
fidiv
jle
sub
push
inc
add
add
dec
in
push
cmps
int
xchg
dec
ss
scas
or
rol
stos
jmp
or
stos
push
mov
mov
in
xlat
test
pop
dec
xor
dec
scas
les
mov
and
imul
jmp
sbb
mov
xchg
inc
add
add
rol
cdq
push
sbb
add
sbb
call
pop
push
or
fsubrp
add
bound
adc
cld
jne
mov
adc
nop
test
cmp
sbb
movs
adc
jmp
icebp
scas
pop
inc
inc
jl
push
cli
push
jl
ficomp
push
sub
clc
mov
adc
outs
jmp
pop
add
les
cli
pop
add
ret
jle
sar
sub
add
std
into
fmul
mov
or
cmp
or
inc
cmp
xor
mov
jle
inc
dec
movs
ds
mov
mov
in
cmps
inc
mov
mov
out
xchg
cmp
pop
ss
dec
je
cmp
or
mov
mov
in
or
xor
cmp
and
punpckhwd
fst
sar
or
cmp
jne
sub
sub
jmp
sar
mov
or
ss
and
fs
fild
sahf
dec
imul
push
xchg
mov
sub
cmp
push
push
and
shr
inc
pop
jo
add
test
adc
push
fdivr
in
repz
loopne
xor
sub
jmp
sbb
add
push
push
mov
fadd
and
ror
and
and
or
push
movq
and
mov
adc
xor
dec
test
or
sbb
retf
pop
mov
sub
cmc
rol
add
sub
xchg
mov
int3
cmp
push
mov
xor
mov
sbb
push
sub
inc
pop
adc
int
mov
pop
mov
mov
and
mov
enter
xor
push
mov
mov
sbb
ret
sub
mov
test
call
push
dec
dec
adc
xchg
arpl
fst
mov
mov
out
or
and
arpl
lea
add
push
xor
pusha
test
test
or
pop
push
sub
or
sub
adc
add
or
or
xchg
xor
xchg
mov
mov
dec
loopne
and
adc
push
(bad)
lock
shl
lock
mov
sbb
pop
xlat
pop
sbb
mov
ret
out
cmp
dec
mov
push
add
call
push
adc
and
pop
jg
repnz
add
test
movs
sahf
xchg
add
ins
sbb
and
sub
sub
out
(bad)
push
push
or
xchg
lahf
or
jge
push
ret
push
dec
mov
dec
dec
cli
call
mov
mov
aam
sbb
push
add
aad
adc
pusha
mov
cs
ficom
pop
or
xchg
push
jns
adc
in
rcl
xor
mov
idiv
jl
xor
jmp
push
out
xor
jbe
adc
add
push
ret
pop
or
inc
fiadd
or
hlt
add
mov
test
and
fst
fsubr
mov
(bad)
add
lods
jae
aad
fdiv
jl
mov
or
lea
lods
or
out
push
cmps
or
push
cmp
push
push
adc
mov
icebp
sbb
pop
mov
or
outs
test
mov
sub
xor
inc
call
es
shl
push
sbb
sbb
xchg
movups
pop
cwde
cmp
popa
push
xor
xchg
mov
dec
loope
aad
mov
popa
mov
push
jmp
movs
movs
popa
dec
into
inc
aaa
or
loope
(bad)
jg
repz
ret
enter
mov
fsub
stos
test
sar
sbb
inc
and
retf
call
add
mov
sbb
adc
mov
je
cmp
je
mov
cmp
iret
sub
cwde
adc
and
repnz
mov
push
adc
cmp
xchg
loopne
rcl
push
mov
mov
mov
mov
sbb
or
(bad)
out
add
sbb
xor
sub
inc
cmp
and
int3
adc
rcr
sub
ficomp
clc
dec
aas
jne
push
arpl
les
lods
mov
leave
inc
in
test
dec
jmp
xchg
or
hlt
xor
adc
cmp
dec
or
xchg
push
bound
and
lahf
mov
dec
mov
adc
aas
add
mulps
mov
(bad)
or
imul
xor
pop
aas
pop
sbb
pop
sub
(bad)
ja
js
jmp
mov
fist
and
cmps
fist
mov
pop
push
lds
popa
dec
and
add
add
jmp
daa
int3
sbb
ret
mov
ss
adc
add
jnp
aas
push
sbb
bound
cli
out
rcr
cmp
or
mov
repnz
cmc
sub
add
adc
push
xor
pop
rcr
mov
adc
dec
sub
or
pop
loop
jns
cwde
sbb
inc
pop
cmp
add
aas
cmp
pop
inc
jae
nop
inc
sub
mov
or
sti
jle
add
and
or
dec
add
dec
mov
xchg
daa
inc
pop
xchg
out
push
and
das
cmp
mov
lods
sar
push
add
pop
mov
imul
push
sbb
les
pop
mov
and
or
(bad)
mov
int3
or
in
xchg
imul
cdq
add
inc
(bad)
sar
xor
mov
sbb
adc
adc
pop
mov
add
mov
add
xchg
xor
pop
sbb
das
xlat
inc
add
call
ror
inc
ror
and
xchg
fcmovnb
idiv
push
js
xor
aaa
outs
pushf
ror
test
push
test
(bad)
ins
(bad)
adc
lea
push
xchg
enter
dec
jae
cdq
clc
test
adc
xchg
loop
nop
xor
or
jae
add
inc
outs
in
and
add
inc
jmp
clc
inc
mov
icebp
jne
aam
push
jle
add
test
xor
ficom
add
fwait
ins
popa
push
jno
cmp
div
and
pop
or
mov
jne
fcomp
movs
inc
imul
dec
sbb
add
add
cmp
aas
adc
or
jl
push
lahf
add
outs
and
mov
inc
hlt
add
sbb
add
rcl
fmul
cli
jp
aaa
dec
loop
cmp
retf
repz
jns
add
sar
(bad)
adc
sahf
mov
imul
sub
dec
and
jmp
dec
pop
clc
cmp
sub
cmps
jns
shl
or
div
xchg
fcomp
mov
push
pop
mov
add
mov
repnz
jae
or
inc
or
jnp
xchg
sbb
sar
rcr
dec
or
aas
adc
imul
imul
lods
pop
mov
xor
dec
xor
xchg
push
imul
bound
add
in
cmc
mov
lahf
test
sbb
add
or
and
mov
or
and
ss
popf
mov
loop
or
or
xlat
and
push
imul
push
sar
cmp
loope
clc
cmps
dec
sub
and
or
inc
(bad)
call
ja
cmp
jne
movs
adc
or
sub
cdq
and
adc
ret
retf
inc
add
div
pop
cmp
xor
rol
mov
cmp
push
arpl
fcom
dec
jge
lea
ret
clc
pop
inc
mov
mov
push
outs
mov
mov
cmp
adc
std
inc
mov
(bad)
cli
mov
imul
mov
retf
jcxz
arpl
mov
cmc
sar
sbb
test
pop
inc
aas
pop
loop
jle
push
lock
jb
or
jo
cmc
(bad)
xchg
dec
mov
jmp
push
test
nop
mov
in
movs
add
imul
mov
imul
jmp
adc
or
xchg
stos
dec
or
xchg
ret
mov
push
pop
xor
cmps
xor
ss
jmp
in
test
and
lea
sbb
push
add
or
lock
push
das
mov
cmp
loopne
and
add
push
and
(bad)
out
mov
test
dec
jmp
out
adc
or
jg
add
test
shl
cmp
out
test
adc
or
dec
repz
or
xchg
sbb
or
std
js
nop
push
je
xor
js
clc
ins
call
cmp
adc
call
or
lock
ins
cmp
jl
sub
mov
push
or
cld
push
and
xchg
jnp
inc
mov
mov
lods
and
sbb
cmps
test
cmp
pop
push
or
clc
adc
es
add
icebp
mov
inc
js
or
mov
outs
mov
shr
(bad)
jg
out
lock
dec
inc
push
daa
cmp
fimul
lock
adc
jecxz
mov
jns
sbb
and
add
sbb
dec
jne
rol
fisttp
cmp
jg
sub
test
ret
mov
sbb
and
jns
cmc
cmp
mov
idiv
icebp
mov
inc
jmp
and
sar
jl
add
add
jne
add
sub
add
cmc
icebp
test
mov
mov
call
test
daa
mov
mov
adc
sbb
mov
enter
or
daa
dec
pusha
inc
xor
pop
les
or
add
ret
into
mov
cmp
mov
lods
add
movs
xchg
xchg
xor
pop
push
dec
sub
call
gs
bound
inc
xor
sbb
add
fistp
into
cmp
add
cwde
mov
mov
cmp
mul
sbb
sbb
hlt
pop
push
sub
mov
daa
rcr
pop
div
mov
and
add
and
push
cs
xchg
add
repnz
pop
adc
adc
addr16
(bad)
fld
jmp
in
aad
sbb
pop
mov
jp
push
push
mov
pop
xor
push
mov
pop
pop
sbb
add
pop
jge
mov
aam
xor
add
(bad)
xchg
(bad)
fcomi
mov
fimul
dec
mov
mov
dec
ja
inc
and
inc
mov
and
pusha
push
imul
push
(bad)
ss
or
jecxz
pop
jl
add
jg
inc
pushf
inc
cli
sbb
sbb
inc
cdq
nop
or
ds
or
push
mov
adc
add
ja
imul
js
ja
sbb
dec
sbb
(bad)
mov
push
in
or
xor
lahf
pop
fmul
ret
neg
add
sbb
add
sbb
adc
dec
ja
ja
outs
js
mov
mov
mov
mov
enter
push
iret
sub
cmps
dec
xchg
ss
xchg
in
add
loop
dec
rol
push
adc
outs
test
and
and
cmp
fisttp
adc
jmp
fisttp
je
jmp
pop
jno
xchg
aas
jmp
pop
sub
pop
pop
xchg
das
inc
outs
xchg
add
std
push
cmp
mov
imul
add
add
imul
inc
imul
xchg
add
pop
mov
dec
add
pop
test
or
and
les
jp
push
test
aam
or
or
xchg
cmp
call
or
dec
test
call
cmp
sub
rol
rol
adc
scas
int3
(bad)
push
push
out
fs
inc
into
sub
push
movs
test
sub
ja
sbb
inc
inc
inc
xchg
adc
clc
cmp
push
jne
clc
and
outs
add
out
daa
hlt
inc
mov
test
es
lock
dec
sub
lock
test
add
in
in
inc
cmp
nop
xchg
dec
call
inc
fild
push
push
in
test
outs
add
in
ja
loopne
cmp
and
loopne
fs
jno
enter
pushf
sub
sub
je
fcom
pusha
cs
jmp
xor
xchg
hlt
pop
in
xchg
pop
in
and
xchg
loop
leave
sbb
dec
cs
dec
ret
loop
push
inc
sahf
out
jno
inc
sbb
pop
push
inc
lods
push
mov
inc
push
std
jle
sub
ror
retf
jecxz
inc
pop
aad
adc
cmpps
jnp
stos
sbb
add
ins
lods
mov
mov
test
arpl
stos
leave
jp
sbb
pop
test
test
inc
aam
sub
adc
repnz
cmp
inc
jnp
jns
dec
lea
and
dec
das
push
movs
inc
ret
imul
xor
sti
(bad)
jmp
push
scas
test
out
and
cs
sti
and
lea
xchg
das
cmp
pop
xchg
xchg
or
imul
fst
inc
cmc
cmps
dec
cmp
jge
mov
cmp
pop
mov
in
inc
mov
mov
std
(bad)
cld
and
and
shl
xchg
cmc
loope
add
jbe
ja
cmps
test
mov
leave
push
sub
sub
pop
inc
pop
shl
push
inc
inc
je
xor
and
xor
and
dec
add
add
adc
add
push
push
xchg
pop
xor
not
xor
dec
pop
nop
repz
add
xor
cld
aaa
add
jns
add
cmp
(bad)
mov
fs
dec
je
add
adc
add
imul
sbb
mov
(bad)
sbb
jg
jns
pusha
mov
cmps
shr
int3
addr16
arpl
in
jmp
(bad)
adc
push
(bad)
jle
jmp
movs
xor
(bad)
mov
scas
daa
xor
mov
stos
jno
and
jge
sub
add
mov
or
add
les
sub
dec
lea
xchg
dec
pop
enter
loopne
mov
mov
inc
cmp
imul
add
pop
pandn
hlt
retf
test
ins
pusha
test
sbb
xchg
sbb
lods
stos
push
repnz
add
mov
loopne
push
int3
popf
test
retf
sbb
pop
dec
sti
add
lds
jmp
jae
ret
push
call
pop
ins
and
push
adc
and
or
sub
adc
sub
repnz
add
xor
sbb
push
jmp
lds
adc
pop
mov
and
sahf
mul
add
out
mov
rcr
push
mov
jno
push
out
push
push
add
(bad)
cs
nop
add
dec
and
mov
push
cmp
es
and
imul
add
in
xor
add
cmc
dec
inc
or
jne
je
mov
xor
mov
xchg
test
js
std
aaa
mov
jg
sub
retf
mov
out
mov
or
push
sbb
push
jle
cmp
loopne
jne
push
dec
or
xor
push
clc
mov
mov
dec
lea
push
pop
adc
arpl
xchg
push
shl
add
retf
sbb
ja
icebp
fidivr
adc
jp
and
retfw
aam
inc
fcom
mov
retf
xor
(bad)
xor
mov
sbb
cmp
mov
xor
inc
push
mov
adc
mov
add
xchg
aad
adc
lods
xor
push
lds
xchg
xor
arpl
jge
xor
jb
jno
jno
and
or
and
inc
add
rol
xor
jmp
es
inc
push
push
inc
das
jmp
add
add
dec
dec
xor
aam
fs
lods
adc
sahf
inc
add
sub
nop
cmp
mov
or
push
push
cld
leave
ret
or
and
inc
adc
cmp
or
adc
loopne
in
push
ror
sbb
push
mov
pop
ja
or
test
add
fdivp
iret
mov
sbb
call
mov
fstp
cmp
or
add
xchg
gs
or
push
in
add
dec
fldcw
jecxz
dec
int
push
jne
jnp
ror
aam
gs
inc
rcr
stc
lock
or
cmp
push
add
dec
cmp
sbb
rol
add
sub
sahf
lock
cld
dec
push
push
xchg
mul
add
loopne
in
jae
and
pop
cdq
add
xlat
cwde
add
pop
(bad)
jae
add
loopne
add
jge
jnp
or
xor
and
or
sub
push
push
das
jo
pop
adc
in
jns
and
adc
(bad)
sbb
adc
inc
or
pop
sbb
aaa
adc
bound
xor
movntps
xchg
add
and
loope
stc
or
dec
sub
cmp
div
push
dec
push
test
sbb
adc
retf
in
or
ins
std
imul
fnsave
adc
inc
sub
mov
pop
popf
jbe
retf
jae
fwait
test
ins
sar
iret
ss
push
lock
mov
inc
sahf
test
pushf
je
fcom
je
popa
inc
mov
add
mov
icebp
mov
je
aaa
scas
push
xchg
out
mov
xchg
sub
mov
lock
adc
packssdw
pop
icebp
adc
adc
adc
mov
sub
sbb
or
push
push
xchg
xchg
mov
mov
push
cmp
loop
ret
imul
movs
lods
pop
fild
xchg
dec
popa
push
fsubr
data16
sbb
pop
clc
xor
xor
or
repz
(bad)
ds
test
lea
add
gs
adc
or
or
dec
loop
mov
or
add
dec
add
jmp
movs
and
jl
(bad)
repz
adc
and
cmp
add
pop
xchg
lods
add
inc
rcl
fmul
ret
mov
in
add
dec
dec
jnp
mov
mov
cmp
sbb
mov
shl
xor
cmp
jne
inc
add
mov
mov
add
push
sub
and
dec
mov
fisub
pop
ins
cmp
data16
in
push
sub
repz
repz
sub
in
cmp
mov
cmp
xor
and
mov
sub
pushf
sub
sbb
lock
rol
lock
add
clc
mov
imul
imul
xor
add
add
test
lods
add
outs
mov
mov
lods
movs
mov
push
movs
jo
ja
les
out
clc
imul
xor
xor
dec
dec
and
jns
neg
jne
xchg
mov
jns
jbe
cmp
or
cmp
and
push
shr
(bad)
nop
cdq
fstp
mov
adc
or
outs
mov
fsubr
cmp
inc
dec
loop
mov
fcmovbe
add
mov
sbb
inc
or
mov
or
pop
jl
or
iret
call
inc
or
xchg
das
ins
mov
ficomp
push
push
mov
nop
out
clc
jmp
cmp
neg
push
out
jno
test
xchg
repnz
lods
inc
dec
sahf
cmp
push
sbb
push
shr
xor
adc
mov
or
cs
sub
and
push
xchg
xor
test
sbb
adc
rcl
jns
test
or
jb
cmps
cs
stos
add
mov
jo
or
add
sub
push
jp
in
std
cmp
enter
mov
fdivr
jge
pop
inc
adc
js
mov
sub
pop
out
add
xor
xchg
mov
inc
cmp
dec
mov
out
movs
shr
mov
push
sbb
push
sbb
and
shr
inc
add
sub
dec
sbb
fist
in
popa
(bad)
scas
mov
call
repnz
fbld
dec
(bad)
cmp
xlat
cmp
lods
popa
dec
aad
adc
jb
out
pop
pop
or
mov
xchg
mul
cmps
lea
ss
popa
or
pop
leave
out
inc
adc
mov
push
dec
or
(bad)
sar
adc
push
add
push
push
and
pop
mov
mov
adc
push
push
adc
adc
retf
pop
sbb
adc
clc
cmp
lahf
test
push
or
pop
out
jg
daa
lea
lock
mov
xchg
adc
mov
mov
es
les
aam
call
dec
pusha
or
mov
jmp
mov
sbb
or
jge
jne
iret
add
or
sub
xchg
es
jbe
push
dec
jnp
pop
push
je
or
shr
xchg
test
fcom
mov
sbb
push
jecxz
sbb
inc
or
loopne
(bad)
mov
push
aaa
in
xchg
add
aas
aam
push
push
repnz
aam
shr
jnp
je
cwde
jg
mov
aaa
pop
test
jmp
or
pop
jecxz
out
shl
popa
pop
or
add
jno
pop
pop
add
test
(bad)
mov
aad
xchg
sub
ror
sub
pop
push
or
mov
add
int3
sbb
ins
enter
add
cmp
add
iret
inc
loope
rcr
push
mov
lods
jns
xchg
add
sub
inc
push
pop
(bad)
ucomiss
test
ret
ret
sub
sub
inc
mov
xchg
or
push
push
add
inc
push
or
ror
sub
adc
sub
in
stc
jle
lock
das
test
or
pop
mov
sub
and
dec
pop
jne
fiadd
mov
jmp
pop
rcl
pop
(bad)
jne
es
add
adc
shr
inc
push
arpl
dec
mov
or
cs
adc
sbb
xor
fcomi
or
mov
mov
adc
movs
add
out
jnp
imul
xor
js
and
mov
aas
push
or
lock
mov
dec
jb
push
lods
mov
data16
jns
mov
xchg
sub
xchg
sub
daa
lods
data16
and
retf
outs
add
addr16
ja
loope
push
inc
les
mov
lods
sbb
sub
add
adc
jmp
in
bound
push
cmp
sbb
mov
pop
aas
push
xor
push
pop
aam
sub
push
sbb
jnp
loopne
mov
xchg
jmp
or
or
mov
rol
xchg
fmul
cmp
pop
push
rcl
dec
scas
es
inc
pop
pop
sbb
add
mov
sbb
test
and
jp
daa
les
mov
out
mov
xor
and
sbb
in
sbb
adc
push
cmp
push
movs
dec
clc
xor
push
add
mov
sub
mov
add
pop
rol
adc
data16
sahf
adc
inc
movs
fcmovb
mov
sbb
adc
jne
pop
enter
int3
push
mov
imul
mov
imul
lock
sub
int
sbb
out
lahf
out
imul
out
jnp
inc
(bad)
adc
pop
ja
lahf
or
daa
bound
inc
inc
sahf
jp
or
push
test
cmc
push
movs
inc
cmp
out
jb
inc
sbb
aaa
sub
xchg
cs
push
fwait
or
push
push
inc
ror
and
fsubr
sub
shr
jge
jmp
js
lods
mov
and
mov
je
jo
and
loop
mov
sub
sbb
sbb
xchg
test
sti
jmp
cmp
jae
lds
call
cmp
retf
add
mov
jo
clc
data16
pop
and
cmp
ja
jae
jnp
jne
sub
xor
or
jns
mov
fcomp
cwde
cmps
les
mov
sbb
sahf
out
sub
ror
mov
cmps
ficom
in
push
mov
cwde
and
test
aaa
inc
sahf
out
inc
ja
in
in
inc
std
gs
adc
add
push
iret
popa
xor
mov
in
das
fisubr
or
cli
inc
inc
test
xor
cmp
ja
or
push
mov
jl
ss
push
pop
sahf
sbb
adc
adc
cld
mov
jmp
cmp
sbb
ret
xor
xchg
ds
inc
bnd
or
push
dec
pop
in
int3
and
test
outs
add
aaa
pushf
test
or
pop
adc
cmp
cmp
cmps
aas
jns
add
je
das
jge
mov
std
fs
pop
inc
cs
xchg
push
movs
test
sahf
call
mov
cmp
ror
mov
outs
and
pop
jecxz
cmp
add
outs
xchg
mov
xchg
dec
dec
pusha
ror
inc
popf
call
shl
push
mov
out
sub
adc
fild
shr
or
xor
mov
and
adc
call
iret
push
int3
retf
xchg
xchg
add
sub
sbb
mov
cld
iret
rcr
xor
jns
aad
shr
or
and
pop
shl
xor
(bad)
out
test
cld
jbe
cmps
jns
jge
sbb
push
aam
clc
imul
sub
out
out
cmp
fbld
jmp
mov
repnz
jg
adc
xor
pop
sub
xor
push
xor
adc
(bad)
test
and
mov
repnz
mov
jne
adc
inc
sub
or
pop
inc
gs
cmp
je
ret
sbb
not
ds
mov
(bad)
outs
sbb
add
pop
mov
sub
sub
inc
fnstsw
sahf
jno
loope
jns
hlt
mov
adc
ja
ror
jbe
into
mov
adc
in
or
jmp
je
out
add
js
dec
les
push
adc
add
jnp
scas
fwait
ret
hlt
dec
sahf
icebp
jl
push
mov
out
jmp
or
retf
mov
or
and
cmp
xchg
mul
rol
add
sub
aam
popa
ret
ins
es
or
and
adc
and
fstp
sub
add
loopne
cmp
(bad)
add
shr
mov
repz
push
add
adc
ins
es
movs
inc
std
sub
cmp
or
jo
or
and
(bad)
test
repz
scas
dec
add
aas
mov
loop
add
sbb
stos
or
xchg
adc
(bad)
add
dec
add
dec
inc
arpl
xor
push
ret
sbb
push
add
iret
jne
xchg
or
and
imul
test
or
or
nop
cmc
cmovle
and
mov
add
aad
cdq
mov
xor
rol
aad
mov
push
mov
xlat
fisub
in
xchg
adc
scas
push
inc
aad
sub
in
fisubr
pop
dec
xor
das
frstor
fadd
adc
idiv
sbb
loop
lock
cmp
jne
call
xor
sub
fiadd
push
ret
pop
shl
or
xchg
cmps
xchg
cmp
ss
pop
dec
jbe
je
cld
add
mov
adc
adc
lahf
push
repnz
push
iret
inc
and
outs
shl
aaa
jno
out
mov
in
add
mov
jo
in
adc
jl
jp
xor
mov
sar
push
aaa
add
mov
or
scas
adc
xor
test
pop
mov
add
clc
and
pop
mov
pop
das
inc
retf
cli
jp
out
dec
mov
mov
ins
in
cmp
and
sbb
frstor
push
and
push
xchg
mov
sbb
lahf
rcl
(bad)
pop
js
nop
out
imul
adc
adc
cmp
js
jmp
das
cmc
arpl
ja
cmp
xchg
std
ret
inc
inc
and
adc
pop
jge
cmp
jne
mov
adc
add
and
jne
loope
test
add
les
mov
inc
dec
js
add
add
push
and
add
jb
dec
dec
sub
mov
repnz
xor
cmp
add
add
inc
push
inc
inc
cmp
inc
pusha
push
inc
push
push
or
imul
add
ret
ret
outs
adc
fld
jmp
data16
rol
cmp
test
xor
pushf
adc
add
add
and
and
pop
and
cmp
popa
popa
add
and
jg
enter
movs
or
inc
test
dec
sub
in
fbld
popa
jo
iret
mov
add
mov
add
pop
sbb
enter
add
adc
adc
push
mov
add
mov
mov
aas
movs
inc
pop
in
or
fisttp
dec
pop
shl
fucomip
inc
xchg
movs
pop
nop
inc
imul
mov
(bad)
ss
sub
je
dec
sbb
mov
mov
push
inc
outs
and
ret
sub
adc
mov
outs
mov
push
mov
lods
lods
outs
es
sub
ja
or
outs
push
aaa
outs
lahf
sub
and
call
sub
push
cmps
pop
xor
push
call
sub
add
inc
inc
leave
push
(bad)
fadd
and
and
ret
dec
scas
nop
mov
sub
mov
lds
ins
inc
cmp
pop
adc
ja
xchg
xchg
push
mov
inc
or
sbb
mov
add
push
and
xor
xchg
fsub
xchg
pusha
or
mov
jecxz
or
and
and
dec
jnp
repnz
ss
xor
sbb
push
jmp
mov
mov
or
and
xchg
cld
mov
fisttp
movs
cmp
push
xor
push
out
test
xor
push
cmp
in
nop
stos
pusha
or
sub
and
and
int3
in
sbb
add
fwait
les
inc
scas
cmp
and
adc
push
out
mov
mov
inc
or
clts
xchg
jl
cld
test
icebp
in
stc
fdivr
add
sar
popa
or
jmp
cmp
cmp
arpl
int3
ror
dec
jecxz
xor
xor
(bad)
(bad)
and
mov
inc
int
test
or
stos
pop
xor
div
xchg
adc
jmp
and
call
mov
jae
xor
and
sub
pop
and
mov
sub
sar
and
pusha
or
xor
or
mov
dec
mov
dec
mov
mov
ins
inc
jo
add
movs
nop
dec
ficom
enter
push
push
push
adc
pop
js
xchg
adc
and
das
inc
sbb
test
or
inc
adc
sti
lea
lea
sub
adc
pusha
daa
fs
fcmovb
pop
push
cmps
sub
loopne
(bad)
int3
aas
push
sbb
leave
inc
sub
mov
add
mov
or
or
add
rol
js
sub
lock
inc
push
movs
add
sub
pop
add
call
adc
in
aas
add
arpl
pop
lock
pop
aam
sub
sbb
adc
lods
push
and
sbb
xchg
nop
ja
daa
mov
sub
repnz
or
jns
cmp
inc
loope
and
iret
xor
pop
lea
and
jmp
adc
pop
sahf
aaa
inc
loop
ffree
fsub
add
mov
(bad)
adc
push
inc
cmp
aas
or
inc
push
sub
loopne
rol
sar
jp
or
mov
(bad)
mov
mov
mov
jl
mov
jge
mov
xchg
jp
outs
cmps
sbb
mov
push
dec
ror
popfw
cmp
mov
cmp
(bad)
lds
adc
mov
mov
ds
into
push
ror
cmp
push
and
clc
dec
aas
dec
mov
in
mov
mov
push
xor
pop
inc
dec
ds
scas
add
nop
add
(bad)
or
out
ins
push
lock
(bad)
loopne
mov
or
int3
xor
lods
jl
add
inc
xor
add
pushf
dec
jle
mov
nop
hlt
out
in
mov
add
leave
clc
cmps
xor
iret
cmp
mov
or
pop
jns
xchg
daa
jl
shl
test
jge
inc
enter
nop
xchg
sub
(bad)
cmp
out
sti
enter
mov
sbb
inc
mul
mov
je
fs
clc
xor
and
rol
cmp
shl
add
and
xchg
lock
pop
xchg
ds
push
push
xchg
pop
pop
(bad)
and
sbb
in
inc
ret
ret
rol
lock
ins
and
pop
pop
jp
mov
das
mov
in
cmp
(bad)
ficomp
shr
shl
add
inc
out
inc
sub
mov
add
adc
push
mov
or
int3
mov
call
pop
or
dec
add
pop
ds
sbb
push
adc
ret
ss
pop
push
cmp
xor
(bad)
lock
pop
sbb
fild
fsubr
mov
add
cmp
adc
mov
scas
mov
push
shr
cmp
jb
mov
sub
add
cmps
or
out
pop
(bad)
stos
push
hlt
cmp
enter
not
push
jne
mov
mov
add
inc
aas
inc
fmul
inc
mov
jae
sbb
(bad)
sbb
mov
iret
jo
fcmovne
test
add
inc
or
push
xchg
mov
inc
cdq
sbb
and
add
out
(bad)
in
sub
ins
loopne
arpl
je
aaa
add
rol
jmp
jge
ror
add
ds
aas
xor
retf
scas
add
add
pop
inc
jmp
adc
das
pusha
adc
cmp
mov
retf
ja
add
mov
inc
cmps
add
rol
add
mov
les
or
nop
mov
and
cmp
mov
xor
daa
test
xor
in
mov
cld
jge
shr
loopne
mov
jge
inc
add
push
cs
rol
adc
dec
cli
sbb
adc
jle
inc
xor
enter
inc
inc
add
pop
pop
addr16
dec
sbb
or
mov
sub
shl
add
add
dec
mov
xor
lock
cdq
mov
mov
jle
xlat
cmps
dec
mov
(bad)
sub
and
push
inc
add
dec
retf
and
out
mov
popa
dec
add
cmp
inc
and
and
dec
dec
push
push
and
and
pop
pop
pusha
and
and
push
and
and
add
nop
xchg
and
and
outs
xor
repnz
mov
mov
test
nop
xchg
mov
movs
mov
mov
mov
mov
aam
mov
mov
hlt
jns
mov
sbb
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
sbb
sbb
dec
dec
push
push
sbb
sbb
pop
pop
pusha
sbb
sbb
push
sbb
sbb
add
nop
xchg
sbb
sbb
cwde
pushf
mov
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
xor
xor
or
adc
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
(bad)
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
hlt
clc
cld
add
cmp
repnz
inc
enter
jle
or
enter
add
nop
xchg
cwde
enter
pushf
mov
enter
mov
enter
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
xchg
xchg
out
cld
add
or
adc
xchg
xchg
xchg
xchg
sbb
and
and
xor
cmp
and
and
dec
dec
and
and
push
push
pop
pop
and
and
pusha
fs
and
js
and
and
add
nop
xchg
cwde
pushf
daa
and
and
mov
and
add
nop
xchg
cwde
mov
test
mov
mov
enter
mov
rcl
fmul
in
mov
clc
sbb
mov
add
sbb
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
ins
jo
js
sbb
sbb
mov
sbb
sbb
sbb
pushf
mov
sbb
lods
mov
mov
mov
sbb
sbb
rcl
fcomp
sbb
sbb
loopne
call
in
lock
clc
xor
sbb
cld
add
or
xor
xor
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
dec
xor
xor
dec
push
push
pop
xor
xor
pop
pusha
fs
ins
jo
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadd
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
clc
mov
inc
cld
add
or
adc
mov
sub
xor
outs
enter
push
sbb
enter
ror
enter
int3
ror
enter
fcomp
loopne
enter
call
enter
cld
add
test
xchg
add
outs
cs
push
test
inc
popf
add
jmp
inc
sub
and
fisubr
xchg
and
xor
xor
cmp
jo
(bad)
add
add
adc
or
adc
mov
hlt
pop
movs
loop
push
add
inc
(bad)
pop
inc
int3
add
add
and
ror
and
xchg
pop
nop
push
mov
add
jo
and
jo
inc
mov
pop
inc
mov
inc
sbb
ins
dec
es
addr16
or
sub
or
cmp
dec
pop
lock
loope
int3
pop
add
aam
cmp
mov
inc
shl
jno
adc
or
cdq
inc
fimul
and
add
xchg
xor
push
es
in
sbb
addr16
push
push
pop
and
xor
repz
jecxz
movs
lea
xchg
or
push
jbe
inc
ja
pop
clc
pop
aam
shl
cld
pop
mul
fsub
in
fs
xchg
aam
nop
and
ins
sbb
and
dec
mov
pop
add
or
push
fs
or
xchg
out
push
or
inc
pop
shr
add
inc
and
enter
add
pop
push
stc
pop
and
fsub
pop
add
add
add
nop
pop
mov
enter
inc
mov
lahf
movs
push
xchg
xchg
popa
outs
(bad)
jne
jne
mov
outs
das
jmp
cmps
fs
push
outs
push
xchg
push
and
jno
push
mov
loopne
xchg
inc
movs
ffreep
push
cmps
inc
outs
pushf
mov
outs
loopne
push
jmp
cmp
sub
loope
adc
stos
xor
call
xor
xor
cld
sub
out
std
add
push
arpl
sar
push
gs
adc
add
fwait
pushf
fadd
ins
adc
mov
or
push
cs
adc
(bad)
jbe
daa
inc
rcr
cmp
push
cmp
mov
inc
mov
inc
jmp
inc
ds
sbb
dec
inc
daa
inc
cmps
inc
rcr
push
or
add
cmps
test
fisttp
xchg
pop
int3
mov
int3
pop
push
invd
punpcklwd
jnp
add
cwde
xchg
sbb
fcom
dec
cld
inc
in
mov
mov
cmp
shl
cmp
pop
and
inc
mov
push
xlat
mov
inc
dec
clc
adc
pushf
adc
xor
pop
and
sbb
or
dec
(bad)
(bad)
mov
imul
mov
xor
mov
mov
lahf
lds
out
jns
xor
pusha
and
fsubr
mov
js
ret
xor
push
adc
jge
sub
(bad)
or
retf
cmp
aas
xor
and
mov
and
and
cli
or
and
nop
and
sti
xchg
bound
inc
idiv
cs
push
das
add
push
outs
fxrstor
jnp
jp
add
push
in
out
pop
jg
and
jge
jns
xchg
out
loopne
dec
sub
fs
cdq
nop
xor
arpl
jge
lahf
std
ins
outs
mov
mov
je
gs
mov
lea
inc
jp
(bad)
jo
mov
mov
je
push
jmp
push
mov
fnsave
mov
inc
fs
lods
and
sbb
jno
add
cmp
adc
xchg
inc
shl
mov
inc
sbb
jnp
ins
test
sahf
pop
push
pop
mov
jnp
add
add
fdiv
enter
pusha
(bad)
pop
jo
push
loop
or
mov
push
or
jl
adc
dec
ficom
mov
xor
xchg
dec
mov
and
inc
aad
lods
aaa
mov
mov
inc
push
adc
loopne
jecxz
adc
or
jbe
(bad)
cmp
dec
pop
add
scas
inc
push
push
pop
jge
xchg
sbb
loopne
movs
sbb
movhps
mov
pop
sahf
inc
mov
xchg
jle
inc
or
jbe
push
add
add
call
(bad)
or
mov
push
fcom
mov
rol
out
adc
pusha
xchg
cmp
out
int3
jg
iret
(bad)
pop
adc
fs
sbb
jg
mov
dec
and
push
jo
loopne
add
rol
stos
sbb
or
in
test
cmp
add
mov
lea
add
cli
outs
(bad)
out
jl
pop
inc
fs
push
xor
sbb
data16
imul
and
ja
xor
or
xor
xor
(bad)
cmps
lock
push
add
adc
add
add
sbb
sar
add
movs
add
mov
push
jne
iret
cmp
and
add
sub
or
jae
cmp
neg
sbb
push
arpl
je
push
xor
and
xor
loope
mov
push
dec
push
xor
mov
jae
cmp
clc
enter
inc
pop
push
jns
sti
xor
or
or
dec
push
pop
jae
js
dec
retf
xor
add
mov
push
or
pop
push
sbb
add
pop
and
and
pusha
xor
inc
jnp
mov
xor
and
ins
and
repnz
push
aaa
js
jl
push
add
pushf
xchg
push
jb
mov
mov
nop
adc
jnp
inc
inc
int
in
sar
cwde
sbb
or
popa
shl
or
jp
jp
xor
or
outs
popa
out
sbb
fmulp
and
imul
popf
xor
add
dec
ja
mov
or
je
out
pusha
mov
push
mov
sbb
sar
repz
jb
outs
imul
packssdw
xor
arpl
shr
mov
popa
ins
cwde
sahf
inc
aam
imul
(bad)
enter
lods
xor
pop
push
icebp
loop
xor
out
push
shl
mov
fnstenv
in
mov
xor
jmp
mov
fst
sar
sbb
sbb
pop
fidivr
jmp
or
gs
sbb
(bad)
jle
outs
add
cmps
jbe
das
xor
inc
xor
cmp
scas
cmp
jp
and
xor
pop
inc
add
shl
jnp
repnz
adc
and
fstp
(bad)
adc
and
and
add
fwait
out
push
add
add
mov
bnd
add
jo
push
push
adc
test
add
movs
cmc
adc
outs
ss
add
adc
and
shr
or
gs
and
sbb
and
fmul
shl
loopne
sbb
adc
sub
daa
popa
rol
cmp
add
arpl
pop
and
or
lds
jns
mov
adc
mov
loopne
(bad)
int3
mov
(bad)
stos
or
pusha
enter
pop
jl
dec
or
pop
fsub
push
sub
sub
xor
inc
xor
das
arpl
mov
cmp
data16
cs
shr
fsubr
or
in
and
mov
sbb
and
or
push
shr
push
outs
cmp
mov
pop
ins
rcl
outs
xor
ins
lods
mov
sub
mov
adc
mov
push
adc
sahf
int3
jl
out
push
punpcklbw
pop
xor
and
and
neg
pop
(bad)
retf
mov
mov
xor
sub
loopne
cmps
push
mov
adc
xchg
call
inc
and
push
mov
mov
iret
adc
mov
pop
jg
add
(bad)
aam
popf
pusha
push
adc
dec
push
test
in
push
push
push
daa
je
pop
fild
in
(bad)
fisttp
push
mov
(bad)
ins
add
push
mov
cmp
xchg
lea
or
pop
out
lahf
test
aam
out
push
pop
and
push
push
mov
fs
xchg
mov
jo
arpl
cmp
mov
cmp
out
mov
jo
cmp
add
shr
das
inc
mov
jns
cmp
cmp
mov
loopne
ja
les
jl
ret
inc
aas
add
inc
mov
xchg
mov
inc
enter
(bad)
mov
mov
loopne
inc
ja
ins
ins
cmp
lds
into
(bad)
adc
push
mov
jmp
cmp
std
xor
sub
ret
xor
xlat
test
repnz
lods
nop
cmp
dec
dec
lods
fiadd
(bad)
pushf
aas
cmp
inc
cwde
pop
jg
pop
jns
cmps
adc
(bad)
rcl
in
pop
add
pop
or
imul
sub
inc
dec
push
or
cmp
add
mov
adc
push
mov
sbb
in
xchg
adc
xor
and
xchg
fistp
movs
pop
pop
jg
fdivp
in
add
rcl
add
inc
add
aad
and
pop
xchg
out
(bad)
mov
mov
add
pop
adc
movs
out
inc
inc
rcr
mov
add
mov
or
pop
call
mov
sub
xchg
add
and
jg
iret
inc
adc
or
and
loopne
xchg
add
mov
add
pop
cwde
pop
add
(bad)
loopne
outs
xchg
leave
stos
add
sbb
inc
inc
mov
loopne
or
nop
(bad)
pop
mov
xchg
scas
pop
pop
and
ror
ins
jl
and
xor
add
int
fsubr
cld
les
shr
dec
loopne
stos
dec
lods
xchg
aas
mov
and
xchg
xlat
in
mov
lahf
push
cwde
aaa
pop
push
pop
and
add
inc
push
push
(bad)
js
mov
inc
sub
fsub
retf
mov
inc
or
pop
inc
sub
mul
cwde
fiadd
mov
call
add
popf
call
mov
loop
dec
popa
adc
and
es
ins
stc
inc
lods
mov
xlat
mov
std
mov
or
leave
jmp
in
cwde
pop
rcr
sub
push
adc
out
int3
dec
pop
jb
push
cdq
cmp
fs
scas
pop
shl
call
enter
inc
call
push
push
dec
or
xchg
ss
inc
nop
inc
push
pop
mov
mov
lods
or
test
aaa
sub
add
pushf
dec
pop
cli
and
add
les
xor
xchg
in
ror
dec
dec
cmps
and
xchg
push
mov
adc
push
inc
(bad)
fmul
fadd
xchg
outs
retf
cld
and
inc
dec
pop
xor
loopne
inc
int3
inc
les
sub
sub
sub
fcomip
adc
pop
ins
rol
adc
and
xchg
popf
cs
jo
or
push
call
jne
push
outs
bsf
aad
inc
pop
jl
xor
jbe
push
or
cmp
push
jecxz
mov
sahf
sahf
ss
pushf
sbb
pop
fadd
in
addr16
pushf
and
faddp
xchg
sahf
ins
sbb
and
adc
or
(bad)
jbe
inc
mov
sahf
cmp
push
jns
mov
xchg
lahf
push
xchg
sub
or
and
aaa
xor
cmps
or
xchg
xlat
jno
push
bound
jne
inc
mov
add
aad
mov
and
push
adc
xlat
push
add
and
cmp
mov
mov
mov
es
jl
xchg
sbb
mov
adc
cmp
mov
mov
lahf
push
xchg
addr16
rcr
lods
pop
push
push
pop
inc
push
aas
and
adc
fbstp
ins
dec
pop
repnz
or
pop
sub
dec
xor
and
inc
jg
data16
out
and
imul
add
inc
js
dec
pop
inc
cmps
clc
inc
enter
shl
adc
loopne
xor
(bad)
add
inc
mov
mov
pop
add
xor
pusha
sbb
mov
mul
pop
jmp
xor
add
inc
inc
pop
inc
in
ins
mov
hlt
fcom
push
mov
xor
cmp
xchg
jne
add
jg
les
out
or
pop
push
adc
jmp
xor
and
sbb
sub
jmp
pushf
imul
mul
adc
fld
push
cmps
adc
outs
jmp
xchg
add
or
pop
es
xor
rol
fsub
in
in
mov
hlt
clc
mov
repnz
add
xor
ror
or
adc
dec
shl
sub
xor
shl
cmp
inc
shl
push
pop
add
xor
pop
pusha
fs
add
test
outs
leave
leave
or
or
nop
xchg
pop
pusha
adc
ins
nop
xchg
or
pop
ror
jb
mov
pushf
pusha
inc
leave
mov
popa
pslld
clc
pop
or
rol
pop
pushw
and
pop
add
nop
add
leave
mov
add
pop
adc
jbe
mov
mov
movs
or
lods
jg
and
or
out
jg
add
sar
mov
or
add
add
add
sti
dec
pop
sbb
add
clc
xchg
(bad)
out
iret
add
pop
or
icebp
add
addr16
out
push
es
add
test
or
icebp
bound
jbe
or
or
pusha
in
add
out
bound
es
popw
inc
sbb
ror
xchg
pop
sbb
pop
fild
add
and
add
jge
and
add
and
shl
mov
aam
pop
ss
in
or
sbb
cmps
imul
cmps
imul
mov
imul
push
ret
add
nop
pop
jl
xor
inc
inc
lods
push
(bad)
push
xchg
mov
pop
(bad)
(bad)
(bad)
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
in
lock
push
jne
je
and
or
mov
add
and
test
sbb
inc
xor
sub
add
pop
ficom
cs
adc
add
cmp
sub
mov
clc
fidiv
or
mov
adc
pop
bound
push
mov
in
call
inc
(bad)
inc
adc
dec
adc
inc
xchg
cdq
push
nop
fld
pop
dec
push
or
enter
and
adc
or
push
(bad)
div
jg
add
adc
mov
cdq
inc
add
or
call
and
dec
push
and
pop
mov
or
mov
jo
add
xor
cwde
push
push
adc
push
add
push
xor
push
retf
mov
push
mov
xlat
out
mov
adc
and
add
jle
push
outs
xchg
fdiv
cmps
retf
cdq
cs
cvtps2pd
fwait
sbb
mov
loop
push
add
cmps
imul
imul
imul
pop
add
call
push
adc
js
mov
xor
rcr
movs
or
dec
aam
lock
fwait
call
cmp
dec
add
cmps
imul
in
pop
mov
mov
push
xor
shl
add
int3
outs
ror
add
pop
adc
cmps
imul
cmps
imul
dec
shr
sub
dec
rcr
mov
dec
shl
int3
aam
inc
shl
in
out
mov
or
push
cmc
inc
mov
cs
(bad)
lods
mov
mov
and
xor
test
add
punpckldq
mov
movs
add
push
cmp
ret
adc
sbb
(bad)
jnp
ret
mov
pusha
test
inc
add
pop
lock
adc
(bad)
jne
adc
pop
add
out
inc
add
mov
push
push
push
or
xchg
jbe
pop
add
mov
xchg
stc
mov
xor
mov
xor
shl
inc
add
(bad)
add
mov
jg
mov
mov
inc
seta
push
xchg
pop
mov
adc
rcl
add
sub
dec
cmp
xchg
inc
inc
cmp
inc
ins
imul
mov
test
(bad)
and
aam
loopne
in
clc
shl
sub
inc
xor
xor
mov
push
enter
dec
rcl
fcomp
loopne
mov
dec
call
jno
rcl
inc
shl
mov
or
setno
fsubr
xor
xchg
cmp
push
std
cld
cld
cmps
imul
cmps
imul
cmps
imul
cmps
imul
imul
dec
shr
int3
and
cmp
push
fs
jecxz
push
ja
(bad)
mov
(bad)
mov
add
and
xchg
add
fsubr
call
add
or
or
add
add
or
test
out
mov
xchg
xor
xor
cmp
xchg
aas
and
nop
cmps
sub
inc
add
add
test
ret
adc
jnp
pop
popa
mov
add
and
and
add
push
xlat
ja
mov
push
test
xor
jl
mov
xor
mov
test
dec
pop
cmp
mov
inc
data16
inc
lock
ins
es
inc
daa
push
xor
fistp
aam
mov
add
mov
xchg
cmps
inc
(bad)
mov
std
xor
loope
and
mov
ins
jg
popa
and
pop
jbe
ficomp
pop
pop
outs
gs
cmp
mov
add
outs
fs
test
imul
and
jb
push
scas
dec
add
push
jb
and
cmp
add
sub
shl
inc
or
add
cmps
mov
jno
imul
cwde
xor
xor
push
gs
ret
stos
jnp
and
dec
jbe
mov
and
xor
xchg
sbb
ins
mov
adc
xchg
movs
adc
std
cmp
and
pop
pop
outs
mov
fnsave
xchg
mov
ret
and
mov
sbb
rcr
enter
and
push
dec
inc
int3
push
in
xchg
dec
push
inc
push
pop
xchg
dec
inc
pop
loop
movs
sbb
aam
sar
nop
sub
fidiv
sbb
ret
nop
and
lock
lods
dec
pop
and
inc
les
sbb
test
push
ret
sub
xor
mov
push
sub
(bad)
pusha
and
cwde
lock
loopne
add
sbb
add
sub
(bad)
mov
sub
js
mov
bound
cmp
psubusb
inc
daa
cli
sub
push
push
inc
sub
inc
add
sub
jbe
xor
or
pop
imul
packsswb
and
and
pop
dec
inc
jge
pop
inc
push
popa
stos
xchg
adc
sub
jne
mov
mov
jbe
daa
add
add
ret
pusha
push
jmp
pop
sub
xor
and
dec
dec
inc
movs
loopne
retf
xor
leave
aas
in
adc
in
jbe
xor
jae
arpl
jl
xor
adc
pop
mov
jae
xor
mov
dec
dec
inc
pop
sub
loope
test
lea
sub
fldenv
mov
in
leave
and
je
sub
jnp
mov
and
sub
xchg
test
adc
and
jno
sbb
and
aas
add
jne
movs
pop
les
and
loope
mov
adc
adc
loopne
and
scas
nop
test
jle
inc
push
push
in
jne
scas
xchg
push
loopne
(bad)
push
cmps
dec
mov
dec
and
fadd
aam
jg
mov
ins
(bad)
add
add
or
add
add
xchg
cmp
test
pop
mov
dec
add
pop
dec
bound
sbb
and
imul
popf
fisub
add
pop
sti
test
add
xor
jge
mov
add
push
or
(bad)
inc
adc
adc
push
add
sub
or
pop
push
jg
jmp
cvttps2pi
add
sub
adc
sbb
add
std
sbb
sub
and
arpl
and
sub
imul
pop
push
test
sbb
std
ss
add
push
das
add
sbb
push
adc
lods
push
xor
dec
add
pop
push
movs
xchg
inc
mov
bound
and
and
add
push
dec
push
add
and
mov
pop
cmps
imul
shl
pop
enter
pop
outs
xor
shl
(bad)
fwait
stos
rcr
dec
shl
out
call
leave
and
dec
pop
jg
call
loopne
sti
xor
mov
or
sbb
inc
pop
shl
scas
shl
hlt
add
adc
les
xor
scas
xchg
cdq
and
outs
arpl
sub
aaa
xor
fldcw
cmp
inc
lds
dec
(bad)
cmp
sub
daa
ret
inc
frstor
jns
or
pop
jae
add
dec
sub
dec
inc
and
mov
mov
jb
ja
sahf
fisttp
test
stos
addr16
jg
popf
bound
ins
daa
xor
in
cmp
in
dec
adc
cmp
daa
test
and
sbb
mov
and
daa
sbb
loopne
popa
cs
in
and
lock
je
mov
jb
jbe
or
imul
cmp
data16
imul
gs
jb
jne
mov
or
inc
adc
xlat
adc
imul
xchg
pop
idiv
in
dec
add
push
outs
imul
push
adc
into
push
push
sahf
outs
mov
popa
jo
xchg
jo
pop
rcl
mov
shl
fmul
pop
scas
jne
mov
add
adc
xor
ins
push
mov
add
clc
cld
gs
adc
mov
sub
sub
jae
mov
and
add
data16
add
xchg
mov
not
lods
movs
jns
pop
mov
loope
jns
dec
nop
adc
add
sub
sub
xchg
push
cmp
sbb
ret
ret
xchg
sbb
mov
mov
stos
ins
mov
shl
jo
das
outs
pop
or
sbb
sub
daa
neg
fcom
and
das
outs
icebp
add
push
imul
ret
add
jb
ins
bound
jbe
mov
addr16
jae
add
ss
les
test
add
jno
sbb
and
ins
sbb
pusha
sbb
pop
stos
sbb
outs
add
dec
sub
sub
add
(bad)
xor
add
push
add
pop
push
add
add
add
adc
nop
or
pop
pop
push
sbb
in
jnp
or
(bad)
(bad)
add
jle
push
adc
push
adc
or
xchg
test
sub
push
adc
add
leave
inc
test
rol
add
add
add
in
add
add
test
jno
jge
loopne
push
jge
retf
dec
or
push
movups
adc
adc
out
sbb
sbb
sbb
push
pop
push
or
jmp
and
and
sub
sub
cs
iret
cmp
(bad)
cmp
cmp
ds
inc
sbb
pop
pop
mov
call
jl
jle
add
xchg
lea
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
fwait
pushf
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
(bad)
(bad)
(bad)
push
mov
rol
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
dec
cld
(bad)
xlat
fcomp
fcmovu
xchg
loop
in
out
call
call
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
ja
cmp
popa
push
arpl
imul
imul
call
jns
mov
pushf
(bad)
lahf
cmps
push
scas
shl
rcr
dec
shl
in
lock
ror
adc
cmps
imul
cmp
dec
push
call
bound
lea
jbe
pop
adc
shl
iret
mov
mov
ins
jp
jl
cs
popa
and
sub
push
das
(bad)
sti
sub
dec
add
and
inc
jnp
adc
and
pop
cmp
push
add
dec
inc
xor
arpl
gs
adc
aaa
mov
inc
jb
or
popa
je
adc
jo
ja
jo
bound
inc
cmp
sbb
(bad)
out
jb
bound
sub
shl
out
fst
dec
dec
or
loope
cmc
inc
jne
mov
les
(bad)
push
dec
xor
jbe
popf
ins
fbld
inc
arpl
stos
mov
fisttp
jp
push
sbb
jae
and
xor
test
sub
push
ret
adc
and
adc
add
or
dec
or
inc
sbb
imul
cli
jae
add
jg
outs
jae
fimul
in
xor
mov
loope
popa
daa
ret
jo
and
lods
adc
test
dec
fs
ins
add
fwait
push
fdivp
mov
add
mov
leave
adc
js
(bad)
jmp
sub
add
verr
mov
jmp
ret
div
dec
mov
mov
lock
pusha
cwde
add
imul
xor
cmps
stc
inc
dec
mov
loope
inc
jecxz
inc
push
inc
dec
dec
push
add
inc
adc
or
push
or
dec
fsubrp
gs
inc
or
imul
mov
inc
shr
adc
popf
mov
push
inc
push
es
ror
in
ins
adc
add
rcl
js
or
dec
jbe
pop
lds
pop
neg
mov
inc
(bad)
jecxz
pop
popa
jae
addr16
aaa
jnp
out
and
cld
cmp
dec
inc
inc
push
stos
test
xor
ret
addr16
bound
add
push
pop
xor
mov
or
and
cmp
cs
xor
cmps
mov
add
dec
sub
xchg
add
jbe
or
dec
inc
bound
and
adc
iret
inc
pop
and
sbb
xor
pop
xor
pop
push
pop
xchg
rcl
inc
sbb
ja
and
add
pusha
mov
mov
nop
into
add
adc
pop
push
add
mov
push
stos
mov
jbe
inc
movs
inc
or
push
popa
adc
xor
mov
inc
xor
inc
push
jmp
xor
xor
repnz
or
outs
or
retf
adc
adc
arpl
adc
cmp
push
add
(bad)
adc
dec
je
adc
xor
cmps
aaa
and
adc
in
mov
aaa
push
clts
sbb
or
or
fs
inc
or
push
inc
movs
adc
sub
jo
mov
sahf
cmp
pop
mov
and
adc
add
and
xor
and
xor
pusha
jo
and
xor
mov
push
in
cmp
dec
pop
addr16
jo
pop
jbe
xchg
fbld
enter
mov
test
pop
hlt
or
aam
cwde
cmp
arpl
aas
daa
jns
adc
xor
inc
fcmovbe
pop
fsub
pop
add
fcom
xlat
pushf
iret
lods
or
lahf
pop
repnz
(bad)
sbb
mov
sbb
sub
in
mov
inc
xchg
mov
dec
fcomp
cs
(bad)
movs
dec
push
fs
mov
xchg
sbb
sbb
and
xchg
fld
sub
xchg
enter
je
adc
xchg
or
jl
and
xor
in
cld
in
enter
fidiv
xchg
mov
into
mov
mov
and
inc
in
inc
adc
fbld
xchg
mov
or
sub
inc
or
int
pop
adc
in
jae
loopne
cs
movs
sbb
sub
push
add
jnp
mov
or
int
sar
loopne
add
inc
data16
sub
xchg
sbb
xchg
push
ss
(bad)
add
xchg
sbb
loope
inc
pop
mov
cs
fadd
adc
dec
add
cmp
mov
mov
inc
les
inc
inc
mov
mov
push
and
inc
popf
or
sbb
dec
inc
int
cmp
cmp
add
es
pop
les
out
push
dec
pop
daa
push
adc
fild
das
xor
imul
dec
cmp
js
xor
xor
and
adc
ins
pop
mov
xor
xor
cmp
cmp
ja
fnstsw
data16
jle
repnz
outs
mov
jb
mov
adc
jb
push
dec
or
sub
pop
inc
inc
inc
inc
and
pop
inc
push
dec
dec
inc
pop
inc
push
push
dec
dec
dec
sub
push
arpl
sub
pop
fcomp
jo
or
sub
mov
call
pusha
sbb
movs
(bad)
rcr
xlat
mov
xchg
wbinvd
clc
fcmovb
inc
or
jo
and
loope
push
loope
push
push
pop
adc
lds
cmp
(bad)
scas
(bad)
stos
fs
jge
push
test
inc
dec
mov
mov
out
mov
or
pusha
das
cmp
sub
inc
mov
cmp
mov
imul
inc
mov
and
inc
lds
jae
mov
sahf
fsub
xor
jge
fistp
xor
sub
pop
outs
xor
xchg
in
pop
icebp
std
adc
pop
jne
ja
fs
pusha
sub
xor
aam
cmp
jbe
cs
or
cmps
pop
inc
shl
dec
jno
dec
sbb
jbe
pop
inc
sti
inc
xor
pop
mov
lods
sub
jle
sbb
cwde
arpl
inc
ror
mov
(bad)
mov
ins
adc
pop
jne
(bad)
ror
jae
fs
xchg
or
out
es
xor
ins
inc
mov
or
aas
sbb
(bad)
sbb
pusha
clc
xor
mov
jnp
pop
sbb
jb
popa
inc
ins
int
mov
(bad)
jmp
sub
push
sbb
aam
sbb
fwait
jbe
lods
sbb
pop
jbe
sbb
inc
pop
inc
dec
push
push
sub
rcr
xchg
push
je
xchg
shr
mov
push
movaps
ins
(bad)
cli
add
inc
push
push
inc
dec
jl
jge
inc
xor
sub
movs
shl
push
jo
jae
mov
adc
sub
inc
xor
xor
shl
jno
push
add
lds
pop
push
xor
push
and
outs
and
sti
add
imul
dec
sbb
jne
push
and
nop
add
mov
fcom
add
mov
sub
movs
idiv
cmp
imul
in
lods
push
and
push
add
push
and
in
push
clc
xlat
call
add
dec
mov
jl
and
aad
(bad)
in
(bad)
call
cmps
sbb
pop
leave
dec
pop
repnz
out
cmp
pop
out
add
and
out
les
aam
xchg
nop
dec
mov
xchg
sub
ja
rcr
out
dec
pop
pop
fcom
pop
ror
mov
xchg
push
ins
mov
out
(bad)
in
mov
adc
pop
repnz
inc
cmp
pop
mov
cmc
cdq
push
push
test
sar
fnstenvw
push
and
xor
inc
dec
push
imul
imul
and
mov
xchg
stos
or
pop
adc
sbb
xor
shl
xor
inc
dec
shl
ins
je
dec
shl
test
shl
shl
in
hlt
call
or
sbb
fisub
mov
mov
cmps
imul
imul
cmps
imul
sbb
sub
cmp
call
cmps
imul
imul
xor
rol
int3
aam
in
sub
dec
in
hlt
inc
push
ins
call
fs
xor
jmp
stos
push
stc
pop
dec
push
push
shl
js
int
xor
push
xchg
fs
idiv
dec
mov
pop
or
je
adc
dec
xor
mov
pop
push
xor
jle
push
or
outs
test
mov
pop
cmps
imul
enter
cmps
imul
dec
shl
dec
push
pop
pusha
shl
or
cwde
mov
dec
shl
enter
mov
lock
jns
or
xor
rcl
sbb
js
dec
shl
test
xor
shl
ror
fcomp
xor
shl
call
scas
xor
shl
adc
and
xor
xor
sar
inc
dec
push
pop
dec
shl
or
cwde
mov
mov
ror
xor
xor
mov
retf
in
rcl
sbb
cwde
cmc
pushf
xor
shl
test
in
data16
in
lock
dec
jg
push
stos
dec
rcr
sub
gs
push
adc
push
inc
push
push
dec
add
in
mov
(bad)
xor
cmps
imul
cmp
inc
dec
fs
push
jne
in
popf
or
add
add
int
mov
mov
adc
push
dec
repz
or
and
push
add
adc
bound
out
mov
pop
sub
lock
ins
adc
cs
scas
and
pop
mov
cmp
and
mov
cmp
cmp
mov
imul
fsubr
repnz
xchg
or
ret
pop
or
cmps
imul
fnstcw
in
retf
retf
data16
mov
inc
int3
pusha
int
mov
or
mov
pop
shl
into
xlat
fadd
sbb
(bad)
out
int
cwde
fimul
pop
call
jnp
mov
js
mov
push
loop
push
mov
inc
push
mov
dec
out
jmp
repnz
shl
inc
clc
test
mov
push
push
add
cwde
add
jb
add
push
mov
xor
push
nop
or
pop
or
fnstenv
in
or
adc
clc
and
adc
mov
or
ins
xchg
pop
rcr
ins
call
rol
mov
xchg
scas
sahf
sbb
xchg
sbb
mov
ss
hlt
adc
movs
js
cmps
imul
int
fnstenv
and
pop
and
int
fwait
(bad)
push
enter
pop
mov
sub
mov
das
pop
push
in
daa
dec
xor
xor
push
add
cmp
cmp
call
cmp
mov
ds
pop
push
inc
or
ss
mov
mov
inc
retf
gs
and
and
fcom
jl
dec
aaa
cwde
jo
out
mov
mov
jo
test
pop
mov
test
cld
mov
mov
pusha
shl
push
popf
mov
shl
dec
out
pop
sbb
dec
shl
ret
fnstenvw
add
call
nop
cmps
imul
xor
cmp
sbb
cmps
imul
mov
push
pushf
push
fwait
(bad)
shl
adc
ret
dec
shl
jae
mov
pop
ss
shl
sub
sub
icebp
adc
aaa
pop
adc
hlt
sbb
dec
mov
add
imul
mov
call
cmp
xor
pop
jl
add
call
cmps
xor
shr
jg
in
sub
fnstenvw
cmps
pop
retf
pop
fnstenv
out
test
sbb
pop
je
dec
shr
call
pop
je
dec
shl
rcr
pop
stos
imul
sub
cmps
loope
sbb
dec
mov
xchg
ins
call
ins
ss
shl
mov
imul
repz
cmps
loop
pop
push
push
test
retf
in
adc
imul
shl
lahf
mov
enter
push
add
stos
shr
mov
out
adc
fwait
add
mov
js
hlt
add
mov
adc
sub
push
mov
fsqrt
verr
add
pop
scas
sub
mov
pop
popa
jo
arpl
sub
xor
sar
sbb
add
pop
xor
push
push
xchg
add
iret
retw
mov
loopne
inc
and
add
popa
or
pop
xchg
pop
adc
xchg
stos
add
or
push
jp
cmp
cmp
outs
into
test
cdq
pop
sbb
in
sbb
imul
jp
mov
adc
shr
cli
outs
add
dec
pop
jecxz
and
cmps
mov
adc
sub
pop
pushf
push
mov
push
add
fistp
xchg
pop
sub
mov
and
xchg
sub
retf
jg
xor
add
dec
add
xchg
xlat
inc
scas
cmp
je
mov
shl
jne
lahf
jae
pop
fcmovnbe
jmp
add
aad
jno
test
push
mov
xchg
add
inc
xchg
add
xlat
adc
retf
add
mov
add
test
mov
gs
inc
and
jo
xor
sbb
sub
and
pop
mov
push
das
inc
movs
mov
imul
jns
dec
jne
xor
(bad)
fucomi
sbb
xor
dec
sbb
retf
inc
sbb
sub
jecxz
loope
int
inc
inc
arpl
mov
ins
sub
fild
dec
sub
mov
push
and
dec
mov
push
pop
in
and
imul
adc
dec
dec
popa
xchg
push
xor
inc
xchg
(bad)
lds
inc
and
fisub
sub
push
pop
les
dec
daa
push
inc
sbb
sbb
inc
out
and
sbb
sbb
es
jb
push
inc
push
fild
adc
dec
mov
pop
inc
mov
rcr
add
jbe
sbb
rol
ret
lds
dec
add
iret
dec
out
pop
ins
leave
mov
pop
or
push
out
pop
push
adc
mov
xor
inc
push
push
and
jecxz
sbb
rcl
ss
pop
mov
push
outs
mov
ficom
ja
arpl
push
imul
jg
jb
xor
iret
inc
push
jg
pop
mov
jle
test
xchg
push
xchg
mov
and
add
and
dec
or
lahf
inc
fisub
push
jge
jp
pop
sub
test
pusha
push
inc
adc
sar
stc
push
dec
imul
test
mov
adc
inc
sub
(bad)
xlat
mov
mov
fs
inc
test
mov
repnz
jmp
xor
inc
cmc
xor
push
add
loope
xor
repz
mov
and
fcomp
and
and
xor
dec
pop
sbb
je
(bad)
sti
in
jg
pop
xor
jne
and
or
and
popa
xor
test
shl
inc
pusha
test
lds
push
add
xor
sbb
dec
push
jo
mov
imul
or
pop
mov
pop
adc
add
dec
sub
loope
in
movs
pop
arpl
fisttp
ret
cmps
push
mov
sbb
ins
jns
fsub
jnp
out
inc
mov
dec
and
pusha
xchg
inc
mov
(bad)
pop
inc
popf
push
cmp
(bad)
adc
rcr
jecxz
dec
imul
jne
aaa
aad
xor
fucomi
xor
inc
xor
xchg
cmp
inc
and
and
cmp
cmp
sub
cmp
or
inc
push
add
pop
dec
ficom
loopne
and
and
mov
add
ja
inc
pop
pop
inc
cmps
adc
xor
dec
xor
mov
outs
jo
pusha
xchg
cmps
mov
lods
int
mov
ret
pop
inc
adc
test
aas
dec
jae
imul
inc
arpl
sbb
add
dec
or
push
loopne
clc
pop
mov
icebp
push
push
mov
je
cmovne
add
mov
cmp
push
gs
jae
arpl
fisttp
into
jae
imul
dec
adc
test
movs
or
gs
adc
sbb
and
add
xchg
test
fist
inc
sub
fld
inc
sbb
fisub
das
fimul
xor
ins
push
inc
mov
imul
aas
mov
fisttp
xor
aas
jnp
rcl
jae
pop
arpl
movs
mov
test
mov
dec
xor
rol
xor
and
inc
or
ret
or
in
xor
adc
jo
pop
add
or
mov
add
xor
jns
push
rol
pop
sbb
dec
movs
retf
dec
push
stos
fnsave
xor
in
inc
int3
push
imul
in
pop
add
or
jno
nop
loopne
ss
aam
xor
push
inc
outs
push
or
les
fld
sub
mul
mov
mov
dec
mov
int
adc
push
jmp
sbb
sbb
lods
sub
adc
jo
sbb
pop
repnz
daa
data16
push
or
(bad)
jae
adc
inc
jp
outs
xchg
jae
jbe
ror
push
imul
inc
xor
aas
aaa
push
xchg
(bad)
call
(bad)
or
and
ins
and
dec
push
ins
sub
cli
inc
cmp
or
dec
or
into
push
fisttp
(bad)
push
or
gs
jg
jbe
shr
ret
adc
movs
sar
inc
daa
stos
mov
stos
sub
mov
lahf
jbe
test
or
pop
and
lods
imul
pop
mov
inc
scas
outs
adc
dec
mov
int
popa
retf
imul
popa
xchg
bound
push
ins
xor
gs
sbb
retf
sbb
fs
sub
call
add
add
xlat
dec
shl
sub
add
xlat
pop
mov
mov
adc
(bad)
xor
push
sub
repnz
or
dec
outs
xchg
add
push
sub
cmp
add
mov
sub
fisttp
adc
jae
xor
popf
mov
je
push
pusha
mov
xchg
or
test
dec
adc
push
dec
mov
in
add
push
add
pop
inc
(bad)
ficomp
sbb
inc
and
dec
pop
push
and
data16
pop
dec
aaa
push
pop
dec
mov
dec
call
or
xchg
push
loop
pop
mov
xlat
lods
push
push
sahf
mov
popw
inc
cli
inc
mov
or
xor
push
imul
pop
ror
inc
es
mov
sub
push
add
xor
cmp
imul
push
push
or
adc
inc
(bad)
(bad)
dec
inc
xchg
adc
mov
jnp
inc
dec
stos
inc
sbb
imul
push
dec
jp
pop
dec
(bad)
inc
sub
or
mov
push
jb
or
mov
mov
adc
xchg
mov
adc
inc
sbb
or
dec
push
push
sub
cs
push
fstp
push
push
daa
or
dec
fwait
loopne
xchg
es
out
daa
or
shl
dec
pop
inc
xor
daa
add
push
add
add
cmps
mov
sbb
add
or
jns
out
pop
rol
sbb
rcr
nop
mov
mov
sbb
and
(bad)
fnstsw
xchg
mov
cld
jg
clc
aas
push
imul
loopne
(bad)
cld
pop
rcr
or
push
aas
(bad)
jg
shl
icebp
push
addr16
or
addr16
retf
div
or
push
mov
pop
jnp
xor
add
mov
mov
(bad)
psubb
mov
out
pop
out
ficomp
neg
out
(bad)
cmp
rol
loopne
lock
sbb
mov
pop
(bad)
aas
push
cs
add
xor
mov
inc
mov
pop
std
cmp
push
fnstsw
add
jl
ss
repz
rol
data16
jg
inc
pop
cwde
imul
pusha
iret
nop
fwait
jecxz
rol
mov
lock
lahf
pop
xor
int3
pusha
addr16
cwde
pop
(bad)
xor
out
repnz
jg
add
(bad)
cmp
mov
dec
mov
adc
adc
sahf
pusha
in
and
cmp
add
cs
pop
outs
es
aad
shl
pop
cs
dec
jae
clc
lock
aas
rcr
aam
dec
clc
dec
add
cs
push
mov
dec
pop
outs
clc
pop
adc
addr16
repnz
add
loopne
pop
sbb
stos
dec
test
out
push
daa
inc
push
push
cs
add
pop
jle
addr16
js
push
(bad)
pop
in
and
fst
xchg
adc
pop
cmp
push
add
xor
xchg
and
fdiv
pop
push
mov
jo
adc
sti
adc
pop
inc
jl
cmp
cs
retf
in
or
push
sub
inc
add
xchg
scas
mov
shl
xor
sbb
push
push
sbb
cmp
sbb
aas
je
repnz
pop
xor
not
clc
fstp
jl
sbb
push
sbb
or
neg
je
loopne
shl
call
adc
pushf
inc
shl
push
add
add
sahf
pop
mov
rol
and
(bad)
out
es
add
inc
and
xor
xchg
sbb
cmps
add
mov
cmp
in
jl
adc
daa
sbb
cdq
mov
(bad)
and
cs
ins
sub
(bad)
lahf
and
daa
and
in
es
adc
cmp
clc
dec
push
ja
lods
fisttp
and
dec
push
push
mov
frstor
retf
adc
in
mov
xchg
push
(bad)
sbb
cdq
mov
add
mov
add
es
cs
pop
xchg
push
(bad)
hlt
sbb
mov
sbb
mov
lahf
adc
cmp
inc
cmp
inc
and
mov
xor
and
sub
push
ja
pop
xchg
movs
daa
dec
sub
aas
push
fld
repnz
mov
sub
out
out
loope
cmp
js
dec
and
(bad)
lds
imul
push
and
and
cmp
pushf
ret
mov
xor
pop
push
ins
sub
push
or
in
xlat
push
retf
push
xchg
frstor
adc
push
or
(bad)
push
daa
(bad)
mov
daa
push
daa
push
sbb
leave
mov
pusha
inc
push
xor
push
push
pop
imul
call
push
aas
xchg
inc
inc
or
add
and
jmp
out
out
daa
or
aad
ins
mov
rcl
dec
dec
pop
daa
xor
dec
out
in
sub
push
adc
(bad)
sti
adc
xchg
inc
add
add
clc
daa
in
mov
ins
add
daa
add
mov
sbb
or
aaa
(bad)
dec
pushf
daa
aas
push
test
pop
sbb
sbb
xor
ds
fidivr
pop
ror
out
clc
imul
daa
(bad)
(bad)
push
arpl
outs
sar
cmp
(bad)
out
fs
cmp
push
cmp
push
jnp
cmp
daa
mov
jb
es
retf
jmp
out
mov
inc
es
mov
dec
add
jle
push
test
repz
sub
jecxz
test
add
xor
and
add
fdiv
or
stos
movs
sub
pop
sar
mov
or
xor
ja
ja
pop
cmps
arpl
aas
cs
in
cmp
push
inc
sub
vminsd
push
xor
into
mov
and
sub
loope
adc
data16
inc
push
shl
out
push
inc
mov
out
sbb
(bad)
and
inc
ds
popa
pop
xor
sub
mov
ret
jno
aas
jmp
dec
push
shl
add
xor
dec
xchg
pop
xchg
dec
mov
daa
sub
adc
adc
or
gs
ret
mov
cs
push
inc
sub
and
cmps
sar
jle
adc
cdq
xchg
dec
(bad)
mov
xchg
dec
sbb
adc
cmp
jecxz
call
jne
mov
or
sbb
daa
xchg
mov
inc
fcom
daa
dec
xor
dec
or
dec
daa
dec
daa
dec
fisttp
dec
jne
dec
imul
scas
sar
dec
retf
dec
ror
push
out
aas
sbb
(bad)
adc
mov
xor
cdq
ret
sbb
mov
pushf
lds
fadd
daa
and
cmp
aaa
enter
movs
aaa
mov
(bad)
retf
dec
ins
dec
movs
add
or
push
and
outs
inc
arpl
mov
push
daa
cmp
das
aaa
push
lds
xor
stos
pop
pop
push
adc
push
push
inc
popa
and
cmp
call
es
out
scas
push
add
scas
or
add
imul
mov
(bad)
sbb
(bad)
aaa
shl
and
movs
mov
cdq
stos
test
cmp
dec
sub
ins
mov
pop
jbe
les
push
addr16
or
and
sbb
jecxz
clc
fdiv
push
(bad)
repnz
daa
and
pop
daa
jmp
xchg
add
and
mov
xchg
and
push
adc
in
pop
push
push
(bad)
push
adc
mov
(bad)
adc
add
ins
idiv
add
push
movsx
pop
sub
adc
sub
push
xor
adc
nop
xchg
popa
mov
aas
add
add
mov
cmps
popf
scas
dec
mov
add
mov
add
push
leave
fisttp
pop
add
mov
push
outs
mov
pop
push
add
add
add
mov
inc
hlt
dec
repz
btc
xor
dec
mov
mov
sbb
and
xor
(bad)
and
xor
cdq
outs
add
mov
pop
add
dec
jg
xchg
push
jno
adc
push
sub
add
mov
ja
mov
shr
xor
mov
mov
xchg
and
lea
mov
lock
or
jbe
jns
out
xchg
repnz
inc
dec
in
xor
or
rol
push
in
mov
fstp
nop
xor
mov
push
or
or
pop
ds
mov
sbb
pop
pop
out
sub
sbb
lahf
and
cmp
inc
add
add
cmp
add
push
xor
fimul
add
push
dec
retf
cmp
xchg
cld
stc
cdq
lahf
stc
sub
call
adc
cdq
push
add
not
stc
mov
pusha
fcomip
add
pop
sbb
loopne
xlat
fcomp
xor
add
and
push
movs
setge
stc
jo
fdiv
(bad)
pop
lock
or
pop
pop
das
cmps
mov
ss
pop
ja
ficom
movs
inc
sbb
mov
neg
adc
ja
pop
xchg
pop
or
mov
(bad)
getsec
push
in
mov
add
add
cmp
ja
pop
add
mov
sti
mov
pop
inc
div
or
das
inc
add
in
ja
ja
inc
nop
in
add
xor
mov
imul
xor
add
jbe
pop
not
adc
add
daa
pop
movs
dec
ins
dec
(bad)
pop
and
pop
shr
add
adc
shr
and
pop
das
sbb
xor
fild
lock
mov
mov
inc
movs
sub
rcr
das
xor
ins
fcmovnbe
xchg
jne
pop
(bad)
mov
out
push
fstp
shl
jge
add
test
fs
mov
xor
in
fcom
lahf
add
pop
enter
cmp
in
xchg
cdq
inc
cmp
xchg
xchg
pop
xchg
retf
inc
cmp
mov
popa
in
out
add
dec
cmp
jo
pop
sub
ret
and
pop
and
xchg
xchg
cmp
int3
inc
bound
cmp
mov
cmp
dec
add
in
pop
bound
and
popa
inc
(bad)
add
mov
adc
imul
inc
add
jbe
or
adc
sbb
add
sbb
pop
sub
into
mov
fiadd
imul
mov
push
neg
outs
arpl
ins
fstp
mov
lahf
(bad)
jo
pop
popa
sub
push
add
mov
sahf
or
jb
jae
je
imul
(bad)
outs
and
add
jne
cmp
aaa
jae
fwait
mov
adc
js
sub
jbe
jns
in
fld
push
and
jbe
ss
call
and
fs
ins
jo
sbb
and
jmp
add
dec
sub
ins
cmp
push
pop
dec
nop
add
or
jne
(bad)
iret
ja
ret
or
into
or
push
ror
aad
sbb
scas
add
imul
bound
sbb
jb
in
inc
iret
mov
and
dec
jbe
xor
mul
call
xor
imul
fist
fs
dec
lods
js
jnp
jne
jo
push
dec
mov
cs
jo
mov
fsubr
js
mov
arpl
shr
ins
je
pop
mov
pop
dec
arpl
das
pop
cmp
loop
or
sbb
jb
popa
jns
(bad)
and
ss
pop
ret
popa
or
jbe
mov
jmp
arpl
out
in
mov
js
mov
mov
ds
gs
inc
dec
and
out
jbe
mov
popa
dec
push
call
repz
mov
aad
adc
or
cmp
and
sub
mov
pextrw
add
add
sahf
add
push
adc
push
xor
mov
adc
outs
in
and
and
dec
dec
or
adc
push
(bad)
pop
push
mov
arpl
outs
jae
inc
pop
cmps
add
sbb
inc
(bad)
sub
cwde
jecxz
push
push
fld
adc
pop
cmp
into
jmp
das
aad
push
pop
out
imul
add
scas
add
xchg
fcmove
push
xlat
arpl
push
fwait
mov
ss
adc
bound
lods
mov
or
push
retf
mov
sub
push
push
mov
or
outs
mov
dec
mov
ss
sub
or
inc
imul
addr16
push
sbb
int
xor
popa
add
ret
je
test
and
ins
cli
jb
push
dec
retf
adc
bound
mov
push
cmp
mov
repnz
pop
movs
js
push
jae
je
lock
lods
outs
cli
xchg
push
pusha
or
jmp
(bad)
mov
xchg
stos
stos
inc
loopne
mov
ficom
jnp
jo
add
fsub
aaa
dec
cs
or
push
jbe
xchg
mov
sbb
jns
sbb
loopne
mov
retf
mov
mov
imul
dec
ins
adc
xor
rol
sahf
sldt
dec
cmps
call
or
jbe
outs
dec
push
push
push
pusha
mov
popa
into
imul
add
or
xor
test
jne
adc
inc
imul
retf
aas
stos
imul
addr16
rcr
data16
push
xchg
outs
xchg
(bad)
jbe
adc
pop
adc
inc
add
(bad)
dec
dec
add
dec
push
arpl
sbb
dec
jg
jno
cmps
cmps
jo
mov
scas
and
sub
daa
xlat
and
mov
outs
pop
(bad)
ret
add
and
xor
sbb
mov
data16
pop
test
xor
add
aas
or
fsubp
mov
cmp
xor
add
shl
repz
sub
nop
mov
or
test
outs
jg
scas
ret
xchg
adc
mov
mov
arpl
sbb
mov
inc
stos
mov
pop
pop
push
and
dec
mov
xor
lods
push
xor
ja
add
cs
adc
iret
jae
jp
adc
cmp
jbe
sbb
inc
outs
adc
and
inc
mov
xor
pusha
inc
mov
mov
(bad)
rcl
popaw
jae
xchg
dec
mov
imul
cmps
ja
inc
pop
in
push
sub
aaa
(bad)
mov
iret
outs
fwait
push
sub
out
fs
inc
les
popa
ss
aaa
xchg
scas
mov
sbb
pop
test
dec
or
jmp
cs
imul
scas
adc
xchg
or
dec
dec
mov
jmp
jne
pop
call
scas
jbe
(bad)
cmps
inc
sub
ins
inc
or
push
jae
ret
out
dec
xchg
mov
ins
fisttp
cmps
xchg
iret
sbb
imul
lea
add
fimul
out
mov
jns
push
xchg
jb
jno
or
jecxz
adc
mov
pop
fist
pop
sub
push
jbe
es
scas
(bad)
xchg
push
mov
inc
pop
dec
fisubr
jb
inc
(bad)
retf
or
jmp
add
outs
int3
dec
push
xlat
cmps
or
mov
cmps
sbb
mov
mov
jno
imul
jo
push
(bad)
aas
xor
aaa
inc
cmp
daa
push
shl
addr16
mov
loope
stos
dec
pop
xor
xor
icebp
and
sbb
adc
adc
fwait
push
add
pop
adc
xor
or
or
jb
mov
dec
arpl
shl
cmps
jae
xchg
cmp
pop
rol
and
mov
outs
sub
sbb
repz
sbb
repnz
pop
mov
fiadd
jae
outs
pop
sbb
adc
lahf
adc
adc
sub
mov
(bad)
bound
pop
or
lods
pop
popa
fsubr
or
jbe
dec
pop
sbb
add
mov
dec
push
push
mov
ins
stos
push
xchg
push
jg
dec
fcmovnbe
pop
adc
outs
mov
mov
xchg
mov
cmps
ja
pusha
outs
pop
jns
(bad)
ds
push
idiv
outs
jo
add
push
scas
pop
pop
cmp
stos
into
iret
jb
add
jecxz
add
fst
add
cmp
add
mov
mov
mov
sbb
cmp
aaa
(bad)
sar
dec
mov
or
bound
cmp
into
xor
pop
adc
jbe
ds
push
dec
adc
push
out
(bad)
stos
mov
stos
(bad)
jae
loopne
and
xchg
sbb
mov
pop
pop
cmps
inc
adc
sub
shl
adc
arpl
or
xor
inc
rcr
into
fwait
mov
or
sahf
sbb
xor
outs
data16
stos
and
adc
lods
jmp
push
das
sub
and
adc
jg
stos
pop
stos
pop
and
pop
and
aas
cmp
js
mov
add
ins
iret
outs
sbb
pop
push
or
mov
inc
sti
push
ds
push
mov
repz
inc
into
mov
mov
pop
loopne
mov
lahf
mov
rcr
ficomp
xchg
loop
ins
ret
pop
push
and
inc
jno
arpl
inc
mov
push
add
or
mov
into
retf
sub
pop
jae
mov
ret
push
jo
(bad)
xlat
adc
mov
mov
imul
(bad)
repz
jp
inc
fdiv
jecxz
lods
jbe
stos
pop
mov
call
and
push
push
jmp
jmp
or
push
clc
xchg
push
mov
jecxz
sub
cmps
push
jns
push
aaa
adc
adc
imul
dec
lods
into
xchg
add
jecxz
bound
add
dec
and
add
push
cmp
pop
cmp
iret
add
sbb
fmul
sbb
xchg
call
adc
stos
push
adc
punpcklwd
ret
cmp
sahf
xor
outs
ret
mov
inc
mov
or
or
stos
add
call
arpl
jle
adc
lds
out
push
pop
inc
js
popa
dec
gs
outs
test
push
sbb
ror
imul
xor
jecxz
or
add
cmp
inc
arpl
test
push
pop
jg
mov
mov
arpl
stos
imul
jbe
stos
push
addr16
shr
nop
repz
sbb
or
call
push
mov
fld
movs
stos
daa
or
stos
pop
sub
mov
sbb
add
pop
jnp
mov
jo
sbb
and
mov
xchg
xor
add
and
dec
sbb
outs
sbb
sbb
outs
xor
aad
pusha
adc
mul
xor
pop
and
xor
jb
add
or
movs
adc
scas
nop
mov
(bad)
and
sub
push
iret
push
sub
arpl
xchg
adc
sbb
and
adc
mov
xor
sub
and
das
pop
jns
adc
pop
sub
cmps
addr16
adc
lahf
pop
retf
lods
test
mov
and
pop
cmp
inc
or
xor
lods
mov
ds
mov
push
or
nop
mov
(bad)
push
pop
adc
add
sub
cmp
or
mov
mov
lea
mov
or
sbb
stos
add
retf
pusha
pop
mov
outs
inc
lea
inc
sub
mov
call
adc
xor
jo
inc
mov
or
mov
and
or
scas
sub
fadd
fild
and
test
mov
dec
mov
xor
push
mov
push
sbb
add
or
out
(bad)
movs
inc
shr
ret
pop
jbe
bound
retf
out
pop
mov
sbb
popa
outs
test
mov
and
aas
addr16
inc
movs
psllq
pop
sub
push
mov
lea
data16
dec
fcom
fcom
iret
jo
fisub
push
mov
pushf
jbe
push
and
sub
jne
ins
fwait
mov
(bad)
(bad)
pop
mov
mov
jle
ja
mov
lods
mov
or
imul
or
or
je
sbb
idiv
fiadd
inc
pop
sub
loopne
fbstp
call
(bad)
pop
add
fisubr
sub
ror
mov
pop
jb
jo
sar
inc
mov
sub
dec
xchg
mov
mov
adc
mov
xchg
sub
repz
test
and
xchg
push
mov
pop
sti
sub
adc
jo
cmps
(bad)
mov
ret
loopne
push
jne
mov
dec
mov
xchg
jae
add
daa
mov
adc
ins
call
adc
xor
push
pop
daa
push
pop
sub
pushf
mov
jnp
dec
cs
es
aaa
mov
pop
fwait
adc
sar
test
fwait
push
or
mov
add
call
add
fs
dec
sti
add
add
es
fild
or
sbb
or
mov
dec
mov
lds
js
maskmovq
not
data16
cmp
in
pop
xor
xor
add
or
inc
inc
and
sub
mov
push
pop
test
or
stos
inc
loopne
adc
pop
cs
inc
mov
shl
stos
pop
xchg
xor
pop
inc
pop
retf
inc
or
xchg
add
push
inc
or
inc
cmp
lock
adc
add
hlt
nop
add
inc
mov
xor
and
outs
or
add
push
mul
adc
rol
pop
test
or
adc
cs
xchg
or
dec
or
ss
cmp
mov
sub
mov
fucomi
(bad)
sbb
dec
adc
push
mov
(bad)
call
jp
push
xor
push
aaa
cs
das
sbb
sub
cmp
adc
add
sub
pop
inc
ret
(bad)
(bad)
(bad)
jmp
push
rcr
jno
outs
pop
inc
outs
jbe
sar
test
in
ficomp
test
outs
pop
outs
stc
jmp
pop
mov
in
(bad)
sar
jge
imul
mov
mov
test
popf
jge
ins
(bad)
aas
mov
pop
inc
outs
ja
mov
xor
in
out
add
mov
(bad)
lods
and
outs
lahf
nop
ja
mov
xchg
js
xchg
jbe
(bad)
(bad)
jmp
pop
lods
mov
shl
cwde
bswap
test
mov
push
ja
and
xchg
jp
xchg
(bad)
jg
mov
mov
xor
adc
das
and
(bad)
(bad)
(bad)
call
xchg
jae
lds
rcr
adc
adc
adc
adc
call
xor
or
mov
stos
mov
fcmove
fcmovne
sahf
sar
(bad)
(bad)
sti
mov
outs
pop
mov
adc
mov
mov
sbb
pop
ret
(bad)
jmp
jg
ror
pop
sti
cmc
cld
(bad)
(bad)
push
jmp
retf
lods
adc
mov
jmp
jge
push
inc
pop
int3
enter
aas
push
out
loopne
ror
mov
sbb
(bad)
jg
retf
popa
fstp
fcmovnb
sub
and
ror
pop
std
(bad)
inc
fst
mov
into
mov
out
loop
loop
sub
mov
pushf
jp
clc
or
jg
(bad)
call
ins
dec
sar
shl
push
inc
sub
push
out
jl
mov
and
xor
in
call
outs
inc
icebp
in
jmp
inc
cs
outs
push
sub
(bad)
int
lahf
inc
dec
push
stos
shl
push
ja
movlps
push
push
or
xchg
push
mov
push
pop
rcr
mov
les
sub
mov
sub
nop
sbb
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
inc
inc
dec
mov
jge
inc
stos
add
mov
into
pop
adc
inc
xchg
adc
nop
stos
in
pusha
loope
imul
dec
loopne
fsubr
sub
add
or
xor
push
adc
add
push
test
imul
leave
push
push
into
add
add
push
data16
(bad)
out
add
add
ins
(bad)
or
dec
mov
adc
pop
cwde
popf
push
scas
div
dec
scas
and
pop
sub
mov
push
mov
xchg
mov
pop
add
lods
xchg
sbb
fcmovne
inc
ins
push
test
test
push
add
pop
ror
xor
xor
movs
es
mov
jae
add
add
add
mov
push
xchg
pushw
inc
pop
cld
add
pop
rcl
cmp
add
inc
and
add
mov
ins
or
mov
xor
sub
cmp
in
push
or
sub
dec
push
fist
and
and
sbb
movs
mov
mov
or
enter
ins
pop
and
cdq
mov
push
jecxz
shr
mov
add
movs
imul
push
outs
sbb
ins
and
(bad)
xor
dec
loopne
stc
lods
lods
add
add
and
sub
add
or
and
push
cmps
rcl
imul
adc
rcl
jns
in
lds
adc
adc
jns
test
xchg
les
xor
mov
mov
sbb
in
cmps
fadd
jno
adc
add
pop
mov
or
out
test
and
dec
mov
cmp
ins
or
xor
leave
inc
stc
sbb
lds
je
gs
(bad)
mov
dec
or
add
arpl
rol
inc
fcomp
pop
outs
pop
(bad)
inc
sar
scas
add
inc
add
dec
inc
test
jmp
das
cmp
loop
add
dec
inc
pop
pop
or
sbb
bound
xchg
rdtsc
sub
ret
and
xor
rol
dec
pop
xchg
mov
fcmovb
(bad)
push
or
xor
adc
ss
iret
add
mov
add
xor
xor
mov
cmp
xor
or
xor
add
lds
mov
leave
xor
add
or
pop
in
or
xor
xor
ret
xchg
or
daa
push
ins
fdivr
and
and
xchg
adc
fs
or
mov
bound
dec
jnp
rol
inc
adc
push
pop
ss
ret
push
pop
add
inc
mov
fs
call
cmp
cmp
sub
(bad)
add
push
sbb
dec
xor
stos
in
add
add
xor
fcomp
add
xor
out
addr16
xor
sbb
xchg
push
inc
sahf
pop
xor
add
add
sub
or
or
cmc
jae
xor
pop
jb
sbb
aad
nop
movs
push
fist
jecxz
fwait
loopne
pop
mov
and
jb
adc
dec
pop
sahf
add
lahf
add
cmps
inc
adc
cmp
inc
inc
mov
popa
test
dec
movs
sbb
jae
retf
adc
sub
adc
xchg
sbb
add
cmp
jnp
sub
sub
or
add
sub
add
mov
sub
ror
jecxz
arpl
leave
(bad)
dec
adc
shl
rol
jb
cdq
xor
xchg
add
pop
ficomp
and
popa
push
(bad)
mov
dec
mov
popf
xor
mov
ret
mov
cmp
add
lds
inc
bound
jg
ins
shl
iret
mov
and
ins
imul
mov
movs
or
dec
sub
and
mov
jp
popa
test
mov
and
dec
sub
aad
test
adc
add
sbb
lds
jecxz
imul
jno
pop
xor
inc
push
aaa
imul
add
add
push
cmp
cmps
movs
push
and
add
push
add
scas
inc
pop
sub
adc
cmp
fld
ss
xchg
add
xor
sub
xor
cmp
xchg
imul
mov
cmp
ficomp
gs
scas
add
xchg
jmp
adc
mov
lods
cmp
xchg
dec
jns
sub
pushf
sub
nop
add
mov
nop
fidiv
and
mov
je
push
mov
popa
jno
js
and
stos
inc
adc
rol
sub
pop
jg
movs
dec
push
add
jo
and
fild
adc
sub
adc
adc
jg
mov
scas
sub
dec
repnz
dec
test
jae
jb
add
sbb
push
mov
fwait
or
or
dec
ins
adc
cmp
mov
enter
inc
add
aaa
jge
cmp
fstp
or
es
or
cdq
or
jg
jno
add
cmps
inc
pop
dec
dec
add
or
sbb
mov
test
add
cmc
inc
dec
add
ret
inc
inc
lds
mov
and
inc
(bad)
adc
or
movs
sbb
les
xor
mov
sbb
cld
add
mov
add
mov
test
aaa
fisubr
dec
mov
push
and
mov
das
or
pop
push
lds
mov
test
add
mov
push
daa
mov
inc
adc
nop
add
lods
inc
mov
scas
jg
test
mov
outs
inc
inc
or
stos
iret
das
or
mul
dec
inc
test
rcl
add
mov
mov
and
movs
nop
fst
mov
ret
or
movs
inc
or
lods
(bad)
enter
cmp
dec
inc
add
add
test
push
pop
inc
pop
test
inc
adc
adc
inc
dec
mov
push
pusha
push
inc
(bad)
out
inc
rol
inc
test
add
add
jmp
mov
xor
add
sub
and
push
popf
fild
mov
adc
ret
mov
call
fisttp
adc
lods
pop
call
xor
sub
test
or
inc
scas
inc
mov
test
sbb
adc
or
and
add
mov
in
mov
adc
pop
mov
add
aaa
push
aam
add
sub
and
popa
add
popa
ret
sub
pop
popf
pop
dec
sbb
data16
adc
mov
test
dec
inc
xor
adc
stos
sub
mov
push
push
adc
nop
inc
inc
push
xchg
je
push
inc
dec
ds
imul
or
sbb
fild
mov
loopne
jg
aaa
fistp
out
lock
add
clc
ffreep
ret
mov
xchg
in
sti
(bad)
das
push
jecxz
psrlq
sti
inc
mov
add
out
push
data16
(bad)
fcomip
dec
jns
stc
out
add
lock
lock
call
iret
jo
aad
push
clc
aas
(bad)
aas
paddd
loopne
repnz
pop
cld
(bad)
jge
daa
xchg
mov
sbb
outs
(bad)
mov
iret
push
shl
in
in
fs
lahf
(bad)
or
pandn
int
or
dec
and
std
add
cmps
test
add
pop
sbb
pop
xor
addr16
sub
or
pop
xchg
cld
sbb
call
add
sbb
fxch
fcomp
les
cld
(bad)
aas
lahf
(bad)
and
or
dec
and
pusha
rcl
push
pusha
pop
or
adc
or
(bad)
cs
ret
ret
add
mov
cmp
and
jb
inc
inc
jb
inc
jb
inc
inc
inc
jb
inc
dec
dec
dec
and
jb
dec
dec
jb
inc
jb
dec
dec
push
and
leave
add
xlat
or
xor
lods
add
movs
add
or
or
adc
jo
dec
jmp
ss
dec
xor
push
das
or
jbe
les
test
cmp
push
inc
lock
test
push
lds
and
lea
test
add
adc
ret
movs
sbb
ret
or
adc
or
push
jecxz
sub
in
adc
add
shl
and
nop
jb
adc
xchg
sub
es
or
or
adc
add
add
iret
add
add
adc
adc
adc
sbb
add
add
add
fwait
add
xor
cdq
add
loopne
fwait
add
es
call
add
dec
loopne
add
or
dec
add
add
adc
jg
outs
add
int
mov
aaa
mov
es
mov
mov
(bad)
mov
add
lock
sahf
or
add
iret
mov
adc
add
loopne
loopne
inc
add
add
mov
sub
add
add
pop
mov
add
pop
inc
add
adc
sbb
push
mov
rol
loopne
popa
xlat
call
or
rol
xchg
sbb
call
pop
add
add
push
ds
add
add
add
loop
ret
rol
cmps
sar
arpl
loopne
rol
xor
popa
stc
add
add
jnp
std
jle
add
aas
popf
adc
xchg
jae
jnp
addr16
pop
cmp
jl
stc
add
or
popa
add
jg
adc
xor
jg
imul
or
add
push
jg
or
and
mov
jg
bound
jg
ror
push
lds
push
xor
and
in
dec
ins
and
pop
dec
add
out
es
pop
imul
paddd
in
in
or
lock
add
mov
rcpps
mov
mov
push
xchg
bswap
and
inc
test
dec
loopne
sbb
and
bound
data16
or
or
and
sbb
jns
mov
stos
and
xlat
pop
add
mov
push
cmp
les
or
jmp
popa
js
pop
add
xor
push
or
int3
and
or
and
dec
leave
leave
(bad)
(bad)
mov
add
xor
inc
cmps
and
push
sbb
jge
cmp
nop
or
dec
sbb
sub
xchg
push
push
lods
mov
das
adc
add
inc
sbb
sbb
nop
add
add
add
push
add
pop
fwait
sub
or
enter
nop
push
add
inc
inc
add
mov
rcr
push
cmps
je
pop
dec
adc
add
add
xchg
pop
dec
(bad)
enter
imul
jne
imul
sbb
(bad)
daa
imul
mov
arpl
xor
add
add
push
push
xchg
mov
outs
push
outs
inc
lea
in
dec
adc
xchg
loopne
xor
cmp
out
add
pusha
sbb
sbb
inc
sbb
popa
add
sbb
push
sub
gs
in
xor
sbb
inc
test
add
mov
jo
xor
movs
fild
push
imul
add
sub
dec
sub
es
ja
call
stos
es
mov
adc
ins
mov
(bad)
push
and
leave
into
sbb
fbld
dec
loop
iret
and
ret
popa
or
lock
lds
push
fcom
push
fsubr
cmc
jg
dec
sbb
in
fldenv
dec
inc
dec
nop
ret
adc
popa
dec
pop
mov
mov
inc
jne
shl
xchg
sbb
(bad)
pusha
adc
jbe
inc
and
imul
or
movs
pop
aad
and
out
dec
add
sbb
pop
sub
pop
pop
sbb
push
(bad)
fstp
inc
popa
sub
sbb
and
sbb
sub
pop
lods
pop
mov
adc
adc
scas
push
in
ret
outs
ins
cmp
adc
dec
jmp
loopne
xchg
dec
push
je
fsubr
shl
nop
mov
xor
dec
mov
dec
inc
dec
int
call
sbb
push
test
mov
or
pop
test
imul
jbe
rol
movnti
mov
icebp
push
inc
pushf
inc
retf
cli
mov
or
xchg
push
xchg
aam
sbb
movs
jne
xchg
not
das
mov
inc
(bad)
in
or
sub
mov
mov
mov
je
stos
dec
in
adc
test
adc
push
loope
mov
push
mov
out
sbb
sbb
adc
sbb
dec
add
ins
jae
adc
test
pusha
adc
sbb
mov
and
push
and
mov
mov
sbb
retf
sbb
cdq
adc
adc
add
pop
mov
adc
adc
pop
push
sbb
mov
in
xchg
ret
adc
outs
adc
ficom
add
not
inc
sbb
popa
daa
push
adc
push
int
add
sbb
jmp
fcmovnb
cmp
imul
pop
and
and
push
inc
dec
loope
jmp
add
pusha
adc
ja
cdq
and
add
fsub
inc
pop
add
adc
add
mov
push
and
sbb
fcmovb
jp
sub
imul
popf
in
shr
and
dec
and
nop
test
push
add
jae
xchg
add
out
sub
sbb
nop
cmp
mov
adc
test
shl
jne
ins
push
inc
cdq
inc
cmp
sbb
inc
test
scas
jo
push
(bad)
dec
push
addr16
jo
mov
push
enter
xchg
xchg
add
xlat
adc
jne
bound
pop
or
jnp
int
pop
das
inc
inc
daa
inc
dec
inc
sub
and
mov
jne
out
scas
jno
data16
jge
je
xor
fcomp
sub
push
mov
and
adc
sub
sti
js
push
and
jo
mov
mov
neg
and
(bad)
mov
and
push
mov
sub
mov
xchg
inc
xchg
fnsave
dec
sbb
imul
mov
fadd
inc
cmp
rcl
call
sub
loopne
and
inc
daa
sub
sub
push
popa
sbb
push
sub
call
push
xchg
and
push
or
in
fdivr
pusha
pusha
cmp
jmp
ss
sub
cmp
xor
nop
xor
or
push
inc
or
mov
push
jmp
inc
mov
jbe
sub
mov
cwde
push
mov
test
ja
xchg
outs
sbb
lods
adc
movs
call
lock
sbb
or
sub
sbb
(bad)
es
pop
mov
sbb
daa
push
mov
outs
push
repz
adc
push
push
fst
sub
aaa
or
imul
xor
adc
cwde
inc
push
and
mov
push
lds
push
imul
push
ja
cmp
or
pop
push
or
mov
test
push
lss
repnz
sbb
mov
retf
sub
add
mov
jno
push
retf
mov
scas
push
xchg
or
xlat
retf
or
(bad)
or
adc
adc
push
lock
sbb
jbe
cmp
sbb
gs
mov
data16
xchg
push
and
test
stc
sbb
mov
dec
jl
add
mov
fnsave
jnp
inc
sbb
popf
dec
nop
or
into
cmp
test
loop
fidiv
iret
jns
fisttp
ja
inc
js
sbb
push
call
push
pop
or
inc
fbstp
data16
(bad)
xor
test
inc
loopne
jle
and
mov
shr
xchg
fdiv
inc
xor
mov
pop
ja
pop
outs
outs
sbb
cmp
xor
or
adc
jo
pop
cdq
inc
cwde
add
mov
sbb
push
push
sub
cmps
xchg
dec
aaa
xor
icebp
pop
ins
mov
add
mov
popf
or
test
fwait
ret
mov
mov
xor
imul
test
xchg
mov
add
adc
push
(bad)
push
fisub
cmp
fild
fwait
or
and
and
cld
jo
push
pop
lods
inc
hlt
mov
test
pop
and
mov
adc
iret
fwait
inc
pop
lods
popf
fstp
mov
push
xchg
sbb
shr
inc
inc
jmp
adc
adc
fs
xor
outs
(bad)
or
sub
les
push
fisttp
or
and
mov
fbld
or
popf
jmp
push
ret
dec
jmp
test
adc
sub
arpl
xor
and
mov
test
cmp
and
mov
daa
(bad)
and
adc
add
push
sbb
sub
cmp
shl
lods
jno
bound
or
addr16
scas
pop
or
psubusw
add
push
push
ja
mov
and
xchg
or
cs
or
inc
or
and
jmp
and
ja
sub
push
scas
clc
mov
pop
daa
push
adc
mov
dec
inc
sbb
jecxz
fstp
ret
mov
mov
sub
mov
jecxz
add
inc
jb
mov
(bad)
(bad)
sbb
jne
pop
icebp
out
inc
push
out
mul
mov
xor
(bad)
sbb
or
cld
and
mov
lods
daa
mov
jge
lods
dec
fistp
and
gs
or
cmps
pushf
ins
sbb
and
popa
ins
lea
inc
xchg
pop
add
jae
bound
cmps
add
inc
sbb
fwait
loopne
dec
jmp
fisubr
pop
sbb
fnstsw
test
and
dec
adc
sbb
ins
(bad)
fisubr
jno
iret
inc
xchg
jmp
xor
mov
mov
stc
in
ret
jmp
sbb
adc
jge
outs
mov
cmp
jae
dec
pop
and
xchg
xchg
and
outs
mov
dec
jns
sbb
data16
mov
jo
xchg
adc
push
jae
sbb
mov
sbb
imul
push
xor
push
dec
mov
push
sbb
add
jae
and
mov
mov
(bad)
rcl
mov
cmps
ins
push
xchg
pop
inc
xchg
call
retf
sbb
sbb
test
pop
mov
aaa
sbb
stc
push
xchg
lock
pusha
xchg
mov
add
enter
push
jmp
push
xchg
shr
inc
cs
mov
or
push
adc
push
xor
daa
bound
ficom
cmp
adc
and
add
sbb
xor
and
sub
mov
imul
frstor
fs
pushf
mov
mov
lea
cmp
jg
mov
xor
jmp
loop
shl
scas
fs
xor
not
xchg
popf
sbb
inc
mov
add
add
adc
(bad)
sub
int3
test
xor
mov
pop
add
or
cmp
sti
(bad)
jecxz
jae
add
add
add
mov
daa
adc
pop
jo
out
test
hlt
addr16
test
push
(bad)
or
mov
imul
xchg
mul
or
pusha
jge
sar
cmp
xor
out
or
sbb
ficomp
push
cs
dec
and
push
xchg
and
cs
test
not
xchg
cs
inc
shr
or
ins
sbb
dec
jb
dec
push
and
and
push
imul
sub
inc
ror
cs
and
or
lock
sbb
sbb
xlat
neg
or
retf
inc
and
aas
mov
or
out
lds
daa
iret
adc
push
jp
add
add
inc
inc
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
mov
dec
