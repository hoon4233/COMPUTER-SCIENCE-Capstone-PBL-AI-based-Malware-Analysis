import pandas as pd
import os
from collections import defaultdict
import time
import pickle

MALWARE_PATH = "../02_n_gram/malware_encoded/"
NORMAL_PATH = "../02_n_gram/normal_encoded/"
RESULT_FILE_NAME = "data_analysis_using_whitelist.xlsx"
VOCAB_PATH = "../03_vocab/vocab.pickle"
WHITELIST_PATH = "../04_whitelist/whitelist.pickle"
NUMBER_OF_MALWARE = 5122
NUMBER_OF_NORMAL = 2231
CHECK_POINT = 2000
VISIT = dict()

with open(VOCAB_PATH, 'rb') as f :
    VOCAB = pickle.load(f)
with open(WHITELIST_PATH, 'rb') as f :
    WHITELIST = pickle.load(f)

def makeDataAnalysis(path, file_type):
    global RESULT_FILE_NAME, VOCAB, WHITELIST, CHECK_POINT, VISIT
    result = {}
    files = [ file for file in os.listdir(path) if file.endswith(".pickle") ]
    count = 0
    for file in files :
        if not file or file in VISIT:
            continue
        VISIT[file] = True
        count += 1
        with open(path+file, 'rb') as f :
            file_to_opcodes = defaultdict(int)
            opcodes = pickle.load(f)
            for code in opcodes:
                if code in WHITELIST :
                    continue
                file_to_opcodes[code] += 1
        result[file] = file_to_opcodes
        if count % CHECK_POINT == 0 :
            print(f"DO {CHECK_POINT} for {file_type}")
            break

    result = pd.DataFrame.from_dict(result).T
    obj_sum = pd.Series(result.sum(axis=1),name="NUM_OF_ALL_OPCODE")
    result = pd.concat([obj_sum,result], axis=1)
    att_sum = pd.Series(result.sum(axis=0), name="SUM")
    result = result.append(att_sum)
    print("IN makeDataAnalysis func, Complete computing sum")
    # print(result)
    # exit()

    with open('meta_data.txt', 'a') as f :
        f.write(f"Number of columns (how many kinds of n_grams) about {file_type} : " + str(result.shape[1]) + "\n")
        f.write(f"Number of files (Not empty file) about {file_type} : " + str(count) + "\n")

    result = result[["NUM_OF_ALL_OPCODE"]]

    if not os.path.exists(RESULT_FILE_NAME):
        with pd.ExcelWriter(RESULT_FILE_NAME, mode='w') as W:
            result.to_excel(W, sheet_name=file_type)
    else :
        with pd.ExcelWriter(RESULT_FILE_NAME, mode='a') as W:
            result.to_excel(W, sheet_name=file_type)

    print(f"END analysis func")

start_time = time.time()
for i in range(NUMBER_OF_MALWARE//CHECK_POINT+1):
    makeDataAnalysis(MALWARE_PATH, "Malware")
for i in range(NUMBER_OF_NORMAL//CHECK_POINT+1):
    makeDataAnalysis(NORMAL_PATH, "Normal")
with open('meta_data.txt', 'a') as f:
    f.write("Execution time :" + str(time.time()-start_time) + "\n")
